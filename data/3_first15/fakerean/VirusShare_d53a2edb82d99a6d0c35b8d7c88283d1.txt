pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
mov
test
je
add
mov
call
push
mov
call
push
push
mov
call
test
je
cmpl
jne
mov
call
andl
jmp
andl
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
xor
test
je
test
je
mov
test
jne
or
mov
mov
test
je
cmpl
je
xor
jmp
xor
inc
mov
test
je
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
and
xor
cmp
pop
jbe
mov
xor
and
xor
mov
xor
inc
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
push
push
push
pop
xor
cmp
jg
je
add
push
je
sub
je
dec
je
test
inc
add
sub
je
dec
jne
mov
testb
je
testb
jmp
mov
testb
je
testb
jmp
mov
mov
mov
mov
cmp
jne
jmp
mov
mov
xor
test
jmp
mov
mov
xor
test
jmp
mov
testb
je
testb
jmp
mov
mov
mov
mov
xor
test
jne
xor
test
jmp
mov
test
je
test
jmp
sub
je
dec
je
sub
je
sub
je
dec
je
sub
je
sub
jne
mov
test
je
test
jmp
mov
mov
xor
test
jmp
mov
mov
xor
jmp
mov
testb
je
testb
jmp
mov
mov
xor
test
jmp
mov
testb
je
testb
jmp
mov
testb
je
testb
je
xor
inc
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
mov
add
add
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
push
test
je
mov
xor
inc
cmp
jb
add
mov
add
mov
flds
add
add
push
add
test
je
inc
cmp
jbe
mov
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
push
push
push
push
push
mov
call
mov
mov
shl
sar
mov
cmp
jne
cmpb
jne
cmpb
je
jmp
cmp
jne
mov
shr
and
cmp
je
cmp
je
cmp
jne
xor
movzbl
neg
mov
sbb
push
and
push
add
call
pop
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
push
mov
test
jle
mov
test
je
add
mov
push
call
pop
pop
test
je
xor
mov
inc
inc
inc
cmp
jl
cmp
jge
mov
lea
sub
mov
rep
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
jne
xor
jmp
push
mov
mov
call
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
cmp
je
mov
push
mov
push
xor
cmp
je
mov
add
add
call
pop
pop
test
je
inc
lea
cmp
jne
jmp
add
call
push
add
call
cmp
pop
pop
jne
push
push
add
call
add
cmp
jne
mov
cmpw
jne
push
call
push
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
andl
push
mov
push
push
mov
mov
add
push
call
pop
pop
test
je
add
add
cmpl
jb
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
lea
push
add
call
test
jne
mov
jmp
add
call
push
push
call
test
je
add
call
push
lea
push
call
test
je
lea
push
call
push
call
push
lea
push
call
add
je
push
lea
push
call
push
lea
push
call
test
je
movzbl
push
call
push
lea
push
call
test
je
xor
jmp
push
pop
cmp
jge
sub
call
push
push
call
dec
jne
mov
jmp
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
mov
xor
mov
cmp
je
shr
xor
divl
mov
mov
shl
mov
test
je
cmpb
je
cmp
je
jmp
mov
mov
test
jne
test
je
mov
mov
jmp
test
je
mov
movb
mov
mov
jmp
push
call
test
jne
mov
jmp
mov
movb
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
lea
mov
xor
mov
movl
mov
cmp
jne
lea
push
push
add
add
add
call
jmp
mov
cltd
mov
mov
movzbw
mov
mov
mov
push
mov
pop
mov
lea
push
mov
add
mov
add
movl
mov
call
leave
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
testb
jne
push
push
push
call
jmp
call
push
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
test
je
add
mov
jmp
mov
test
je
cmpl
je
xor
jmp
xor
inc
mov
test
jne
test
je
push
call
test
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
push
add
call
test
je
mov
mov
call
jmp
call
inc
add
add
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
mov
mov
xor
cmp
mov
jg
je
cmp
jg
je
sub
je
dec
je
dec
je
dec
jne
add
add
jmp
add
add
call
jmp
add
add
call
jmp
mov
cmp
je
push
call
jmp
call
mov
mov
jmp
add
add
jmp
sub
je
dec
je
sub
je
dec
dec
jne
testb
je
call
inc
add
add
testb
jmp
call
inc
add
add
cmp
je
cmpl
je
jmp
mov
mov
cmp
je
cmpl
je
push
mov
push
mov
lea
push
call
testb
je
mov
jmp
mov
add
add
mov
call
mov
lea
push
call
testb
je
mov
jmp
mov
mov
add
call
push
add
push
call
pop
pop
jmp
mov
call
push
mov
call
push
jmp
mov
call
test
jmp
cmp
je
push
mov
call
jmp
mov
call
push
call
pop
test
jne
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
push
mov
call
mov
mov
and
cmp
jne
testb
je
mov
mov
test
je
mov
push
push
add
mov
mov
and
cmp
jne
testb
je
mov
mov
sub
je
dec
dec
jne
testb
je
testb
je
jmp
testb
je
testb
jne
mov
test
je
mov
mov
add
mov
push
mov
add
test
je
push
push
mov
call
mov
mov
and
cmp
jne
mov
mov
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
testb
jne
call
jmp
testb
jne
call
jmp
testb
jne
call
jmp
testb
jne
call
jmp
testb
jne
call
jmp
mov
shr
and
push
jmp
add
call
jmp
mov
shr
and
movzbl
push
call
mov
jmp
sub
je
dec
je
dec
dec
je
dec
dec
je
dec
je
sub
je
dec
jne
testb
je
call
jmp
testb
je
call
jmp
mov
jmp
testb
jne
call
jmp
mov
shr
jmp
mov
shr
jmp
testb
je
call
jmp
mov
mov
call
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
je
dec
jne
mov
shr
jmp
movzwl
push
call
jmp
testb
je
call
jmp
testb
je
call
jmp
testb
je
call
jmp
add
jmp
mov
push
add
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
shr
jmp
mov
shr
and
jmp
testb
je
call
jmp
testb
jne
call
mov
mov
test
jne
call
mov
mov
and
cmp
jne
add
mov
call
mov
xor
cmp
je
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
jmp
mov
shl
xor
and
jmp
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
jmp
mov
shl
xor
and
jmp
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
jmp
mov
shl
xor
and
jmp
cmp
setne
shl
xor
and
jmp
cmp
setne
add
xor
and
xor
jmp
mov
shl
xor
and
xor
jmp
mov
mov
jmp
mov
shl
xor
and
jmp
sub
je
dec
je
dec
dec
je
dec
dec
je
dec
je
sub
je
dec
jne
call
mov
add
mov
call
shl
xor
and
jmp
call
mov
add
mov
call
shl
xor
and
jmp
mov
call
mov
call
mov
jmp
mov
and
cmp
jne
mov
cmp
je
cmp
je
mov
jmp
xor
shl
xor
and
jmp
orb
jmp
mov
shl
xor
and
jmp
mov
shl
xor
and
jmp
cmp
mov
sete
shl
and
or
mov
mov
and
cmp
sete
xor
and
jmp
mov
call
mov
call
mov
jmp
add
es
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
je
dec
jne
mov
shl
xor
and
xor
jmp
mov
mov
jmp
call
mov
add
mov
call
mov
and
shl
or
mov
jmp
call
mov
add
mov
call
shl
xor
and
jmp
call
add
add
mov
call
shl
xor
and
jmp
mov
mov
jmp
mov
call
mov
enter
add
inc
add
mov
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
shl
xor
and
xor
jmp
mov
xor
and
jmp
mov
mov
shl
and
or
mov
jmp
mov
shl
xor
and
jmp
mov
and
cmp
jne
cmp
jne
jmp
xor
shl
xor
and
jmp
testl
setne
add
xor
and
xor
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
cmpl
mov
je
push
push
call
add
jge
add
jne
push
call
mov
shl
xor
and
xor
mov
call
mov
test
je
mov
test
je
mov
xor
and
xor
mov
testb
je
call
jmp
call
test
jne
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
jne
add
add
call
jmp
cmpl
jne
add
call
jmp
cmpl
jne
add
add
call
jmp
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
push
xor
mov
movb
movb
test
jne
test
je
test
jne
call
add
and
test
jne
test
jne
cmp
jne
movb
test
je
movb
cmpb
je
cmpb
jne
push
push
push
mov
call
mov
mov
shl
sar
cmp
je
cmp
je
push
push
push
mov
call
mov
mov
shl
sar
cmp
jne
cmpb
jne
cmp
jne
mov
mov
and
cmp
je
test
jne
shr
and
cmp
je
cmp
je
cmp
jne
movb
movb
movzbl
movzbl
neg
sbb
and
neg
sbb
and
push
or
push
add
call
test
je
mov
call
mov
pop
pop
test
je
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
mov
call
cmpb
mov
mov
je
testl
je
testl
je
xor
testb
mov
je
mov
call
mov
test
je
call
test
je
push
push
mov
call
jmp
and
push
mov
call
lea
push
mov
call
mov
lea
push
mov
call
mov
mov
lea
cmp
jl
mov
mov
add
cmp
mov
jl
push
push
push
add
push
add
call
mov
test
je
call
mov
call
testl
je
mov
test
je
push
call
jmp
testl
je
test
je
testb
je
testb
je
mov
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
mov
add
mov
call
mov
push
mov
add
mov
test
je
testb
je
mov
push
push
push
call
testb
je
mov
push
push
push
call
testb
je
xor
mov
mov
test
je
test
jne
mov
mov
test
je
cmp
jne
test
je
cmp
je
mov
mov
add
mov
call
mov
push
mov
add
test
je
testb
je
mov
push
push
push
call
testb
je
mov
push
push
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
testl
je
mov
jmp
add
mov
sub
shr
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
add
mov
push
add
test
jl
mov
mov
imul
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
imul
lea
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
mov
mov
cmp
ja
mov
lea
push
mov
push
pop
mul
push
push
call
test
jl
add
call
mov
test
je
mov
push
mov
push
lea
test
je
mov
jmp
mov
and
imul
push
push
add
call
mov
or
add
mov
mov
pop
mov
xor
pop
jmp
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
mov
mov
cmp
ja
mov
lea
push
mov
push
pop
mul
push
push
call
test
jl
add
call
mov
test
je
mov
push
mov
push
lea
test
je
mov
jmp
mov
and
shl
push
push
add
call
mov
or
add
mov
mov
pop
mov
xor
pop
jmp
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
test
je
push
push
call
test
je
push
call
test
je
cmpl
mov
je
mov
push
push
call
test
je
cmpl
je
mov
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
add
mov
call
mov
mov
test
jbe
mov
test
jl
push
push
call
movb
mov
jmp
dec
mov
jne
mov
test
je
call
andl
mov
test
je
call
andl
xor
cmp
jle
mov
add
add
push
call
inc
cmp
jl
mov
push
add
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
add
push
call
test
jne
lea
push
mov
and
push
push
mov
call
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
testl
je
testb
jne
orl
movl
add
or
ret
testb
jne
orl
movl
mov
ret
int3
int3
int3
int3
int3
testl
je
testb
jne
orl
movl
mov
ret
testb
jne
orl
movl
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
andl
push
push
push
mov
cmp
jbe
push
lea
push
call
mov
lea
push
push
pop
mov
mul
push
push
call
mov
test
jl
mov
add
test
je
push
call
test
jne
mov
jmp
mov
jmp
call
mov
test
je
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
xor
add
push
mov
call
inc
addl
jb
mov
mov
add
mov
mov
mov
add
push
pop
mov
mov
cmp
jbe
add
mov
mov
add
mov
mov
and
cmp
mov
mov
add
mov
push
mov
add
test
je
push
mov
call
add
mov
cmp
jb
lea
push
mov
call
mov
test
je
mov
and
push
pop
jbe
push
mov
call
mov
call
inc
cmp
jb
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
mov
mov
mov
test
je
add
mov
add
add
add
push
add
lea
push
mov
call
mov
test
je
push
mov
and
movl
jbe
add
mov
call
add
mov
add
mov
call
test
jne
mov
push
add
call
test
jne
add
mov
add
add
add
add
call
add
cmp
jb
pop
mov
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
push
mov
add
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
lea
push
mov
mov
mov
and
push
call
mov
test
jl
mov
test
jne
and
cmp
jne
add
mov
call
mov
test
jl
mov
call
mov
lea
push
add
mov
add
push
add
mov
test
jl
mov
and
sub
imul
push
mov
push
add
push
call
mov
xor
add
and
xor
testl
je
mov
push
pop
xor
rep
mov
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
lea
push
mov
mov
mov
and
push
call
mov
test
jl
mov
test
jne
and
cmp
jne
add
mov
call
mov
test
jl
mov
call
mov
lea
push
add
mov
add
push
add
mov
test
jl
mov
and
sub
shl
push
mov
push
add
push
call
mov
xor
add
and
xor
testl
je
mov
xor
stos
stos
mov
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
mov
and
push
mov
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
andl
push
push
mov
mov
and
push
movb
cmp
jne
andl
testl
mov
je
add
push
call
mov
mov
cmp
jne
lea
push
call
test
jge
mov
movb
jmp
push
push
mov
call
mov
mov
andl
mov
push
call
mov
jmp
push
call
mov
mov
test
je
mov
or
testl
je
mov
mov
cmp
jne
lea
push
call
test
jge
mov
movb
jmp
push
push
mov
call
mov
mov
andl
mov
push
call
mov
jmp
push
call
mov
test
je
mov
or
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
lea
push
lea
push
call
test
jge
mov
mov
jmp
push
mov
push
push
mov
call
mov
mov
mov
movb
orl
mov
mov
mov
mov
andl
andl
mov
mov
mov
mov
mov
pop
test
jne
mov
inc
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
andl
push
mov
push
push
mov
orl
andl
mov
and
mov
cmp
jne
mov
mov
test
je
mov
lea
push
add
push
push
push
add
mov
dec
je
dec
je
dec
jne
mov
cmpl
jne
lea
push
mov
call
mov
test
je
andl
mov
test
jbe
add
mov
call
mov
lea
push
add
add
push
call
push
push
call
mov
add
and
cmp
jb
mov
call
jmp
mov
mov
mov
cmp
je
cmp
jle
cmp
jle
cmp
jle
add
adc
mov
add
cmp
je
cmp
jne
add
push
add
push
push
call
push
push
call
lea
push
add
push
push
call
jmp
mov
add
mov
call
mov
call
mov
cmp
jne
mov
mov
and
cmp
je
call
mov
cmp
jne
mov
mov
test
je
mov
mov
test
je
mov
lea
push
add
push
push
add
mov
mov
test
je
mov
lea
push
add
push
push
add
jmp
andl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
scas
sti
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
add
mov
push
push
add
push
push
call
add
cmpl
jb
mov
mov
add
mov
mov
mov
add
push
pop
mov
mov
cmp
jbe
add
mov
mov
add
testb
je
lea
push
add
add
push
push
push
call
add
mov
cmp
jb
mov
mov
testb
je
lea
push
mov
call
mov
test
je
andl
test
jbe
add
mov
call
mov
mov
mov
add
add
mov
mov
add
test
je
mov
push
add
call
test
jne
lea
push
add
add
push
add
push
call
mov
mov
add
and
cmp
jb
mov
mov
call
mov
mov
and
cmp
jne
lea
push
add
push
push
push
jmp
lea
push
add
push
push
call
push
push
call
jmp
lea
push
mov
call
mov
test
je
andl
test
jbe
add
mov
call
mov
mov
lea
push
add
add
push
call
push
add
call
mov
add
and
cmp
jb
mov
call
jmp
mov
mov
test
je
xor
inc
cmp
je
add
cmp
ja
lea
push
add
push
push
call
jmp
lea
push
add
push
push
call
push
push
call
jmp
mov
add
mov
call
mov
call
mov
cmp
jne
mov
mov
mov
test
je
andl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
push
mov
call
test
jne
push
add
mov
push
call
test
jne
add
testb
lea
push
add
push
je
add
add
push
mov
call
jmp
push
add
push
push
call
add
cmpl
jb
mov
mov
add
mov
mov
mov
add
push
pop
mov
mov
cmp
jbe
add
mov
mov
add
mov
testb
je
add
mov
push
call
test
jne
mov
push
push
call
test
jne
testb
lea
push
add
add
je
add
mov
push
call
jmp
push
push
push
call
add
mov
cmp
jb
mov
mov
mov
and
cmp
je
lea
push
add
push
push
push
push
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
movb
call
mov
test
jne
mov
jmp
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
mov
add
lea
push
call
test
jl
push
add
mov
call
mov
mov
mov
mov
movb
orl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
mov
jne
mov
call
mov
mov
jmp
andl
mov
mov
mov
mov
and
cmp
mov
jge
add
mov
call
push
add
lea
push
push
movzbl
push
add
mov
call
test
jge
movb
add
mov
call
mov
add
mov
mov
mov
mov
mov
and
cmp
jl
mov
mov
mov
and
inc
mov
cmp
jmp
mov
push
call
mov
cmpb
jbe
add
add
test
jle
add
test
inc
or
add
call
andl
orl
mov
mov
mov
mov
add
mov
call
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
call
jmp
andl
mov
mov
incb
cmpl
jle
mov
add
push
push
call
add
mov
cmp
jl
andl
mov
cmp
mov
jge
mov
call
mov
inc
cmp
mov
jl
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
movzbl
neg
sbb
and
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
movb
call
mov
test
jne
mov
jmp
mov
push
push
lea
push
call
mov
mov
and
jmp
add
mov
call
inc
add
xchg
jle
add
add
ss
movb
call
jmp
cmpl
jne
mov
lea
push
movzbl
push
add
call
mov
add
mov
call
test
je
push
movb
add
call
jmp
mov
mov
cmpl
jne
mov
mov
test
je
call
mov
mov
add
mov
call
mov
mov
push
add
test
je
mov
call
add
cmp
jl
cmpl
jne
cmpl
mov
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
inc
add
add
add
call
mov
cmpb
jbe
mov
mov
and
cmp
jne
push
add
add
call
neg
sbb
inc
mov
add
movzbl
add
mov
mov
push
add
add
add
movzbl
add
mov
mov
push
add
add
add
mov
call
mov
mov
call
mov
andl
call
andl
push
add
mov
movb
call
mov
test
je
mov
cmp
jne
orl
add
mov
mov
mov
and
cmp
jl
mov
andl
andl
and
mov
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
mov
push
push
push
pushl
pushl
call
add
add
mov
call
movzbl
neg
sbb
pop
and
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
xor
push
add
mov
mov
call
cmp
je
push
mov
call
push
push
push
add
mov
call
test
jge
mov
add
mov
call
mov
call
mov
call
pop
test
jge
mov
movzbl
neg
sbb
pop
and
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
mov
add
add
add
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
add
test
jne
mov
jmp
push
call
mov
cmp
jne
cmp
jne
add
mov
add
call
jmp
andl
push
mov
push
push
push
mov
movb
call
add
mov
mov
call
test
jne
cmp
jne
mov
and
cmp
je
mov
mov
cmp
je
cmp
je
mov
push
pop
call
push
push
push
mov
call
mov
cmpb
jne
add
mov
add
mov
push
push
add
test
je
mov
push
mov
add
add
mov
add
push
push
call
test
jge
movb
mov
lea
push
add
push
call
mov
test
jl
mov
call
mov
test
je
call
mov
call
test
jge
movb
jmp
mov
mov
call
test
jge
mov
jmp
movzbl
neg
sbb
and
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
mov
add
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
add
add
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
mov
add
add
add
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
add
add
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
xor
call
mov
inc
cmp
jb
mov
mov
push
test
je
cmpw
je
push
call
pop
mov
test
je
push
push
lea
je
inc
add
das
add
lea
push
add
or
call
test
jl
jne
lea
mov
mov
mov
cmpw
je
push
push
push
call
mov
mov
mov
and
add
cmp
jne
push
call
mov
test
je
push
push
call
mov
jmp
push
pop
test
je
push
push
call
push
add
call
jmp
push
call
mov
cmpw
push
pop
je
mov
mov
push
add
push
call
push
call
push
lea
push
call
call
push
add
lea
push
call
mov
xor
cmp
je
mov
mov
and
mov
cmp
je
mov
mov
push
lea
push
push
push
call
mov
mov
mov
xor
cmp
je
call
mov
cmp
je
mov
add
push
call
pop
pop
test
je
inc
lea
cmpl
jne
jmp
mov
or
cmpl
jne
push
push
push
call
add
test
jne
cmpw
jne
or
add
cmpl
jb
add
call
push
lea
push
call
mov
mov
cmpw
je
push
push
call
push
lea
push
call
call
push
add
lea
push
call
add
call
pop
pop
add
mov
xor
inc
push
push
mov
call
add
mov
push
push
call
add
mov
push
push
call
add
mov
push
push
call
add
mov
push
push
call
xor
pop
mov
call
inc
cmp
jb
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
mov
test
jne
mov
jmp
push
push
push
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
push
push
mov
call
mov
movzbl
mov
neg
sbb
push
and
push
add
call
testb
je
mov
call
mov
push
test
jne
orl
push
jmp
andl
push
call
add
mov
call
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
dec
push
mov
push
push
mov
mov
je
dec
jne
mov
mov
cmp
jg
je
cmp
jg
je
cmp
je
cmp
je
cmp
je
jle
cmp
jg
add
call
testb
je
mov
cmpl
jne
mov
mov
add
test
jne
andl
lea
push
mov
call
test
jne
push
push
call
mov
jmp
lea
push
call
mov
mov
mov
test
je
test
je
andl
mov
mov
and
push
mov
push
mov
call
push
mov
push
mov
add
orl
mov
push
mov
add
mov
mov
mov
test
je
mov
push
mov
add
test
je
andl
mov
mov
and
push
push
mov
call
mov
push
push
add
orl
mov
call
jmp
mov
mov
mov
cmp
je
cmp
je
cmpl
je
call
mov
test
je
mov
test
je
cmpl
je
push
push
push
call
mov
push
push
push
call
testb
je
add
call
mov
and
je
push
add
call
cmpl
je
mov
lea
push
call
test
je
add
mov
add
mov
push
add
mov
add
mov
jmp
call
jmp
sub
je
dec
je
sub
je
sub
jne
call
jmp
testb
je
testb
je
call
cmpb
mov
je
push
push
or
call
jmp
and
push
jmp
testb
je
call
mov
mov
test
je
call
test
je
mov
test
je
mov
and
cmp
jne
movzbl
push
add
call
push
push
mov
call
jmp
cmp
jg
je
sub
je
sub
je
dec
dec
je
dec
jne
testb
je
push
push
jmp
testb
je
push
push
jmp
cmpb
je
testb
je
call
mov
mov
mov
add
test
jmp
mov
mov
test
je
test
jne
push
mov
call
mov
mov
test
je
test
jne
push
mov
call
jmp
testb
je
push
push
call
mov
call
test
je
mov
orb
push
mov
add
jmp
cmp
je
cmp
je
cmp
jne
push
call
jmp
cmp
jne
mov
movzbl
shr
and
jmp
movzbl
mov
and
xor
xor
test
je
push
pop
test
je
push
pop
push
pop
test
je
or
or
test
je
or
push
push
push
add
call
push
push
add
call
testb
je
mov
call
test
jne
or
jmp
and
push
mov
call
jmp
testb
je
push
push
call
jmp
mov
mov
sub
je
sub
je
dec
dec
jne
mov
and
cmp
je
call
test
je
orb
push
jmp
call
test
je
push
mov
push
mov
add
jmp
mov
mov
mov
xor
mov
mov
mov
mov
cmp
je
lea
push
mov
call
test
je
mov
push
lea
push
push
mov
add
mov
call
andl
mov
call
mov
test
je
mov
call
mov
test
je
cmpl
je
mov
test
je
push
push
push
call
mov
test
je
push
push
push
mov
call
lea
push
mov
call
test
je
mov
push
lea
push
push
mov
add
mov
call
mov
mov
call
testb
mov
je
push
call
mov
and
je
push
push
call
jmp
mov
push
push
push
add
call
mov
cmp
je
test
je
mov
push
mov
add
cmpl
je
add
mov
mov
add
xchg
mov
xor
inc
cmp
jb
add
mov
add
mov
add
add
add
push
add
inc
cmp
jbe
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
movl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
movl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
mov
add
push
call
test
jl
add
mov
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
movl
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
andl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
call
mov
test
jne
mov
jmp
push
push
push
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
andl
push
lea
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
mov
cmp
jne
mov
and
cmp
jne
mov
cmpb
je
push
mov
call
mov
mov
call
test
je
or
jmp
and
push
mov
call
pop
jmp
cmp
jne
mov
and
cmp
jne
testb
je
mov
call
mov
cmpb
je
or
jmp
and
push
mov
call
add
mov
add
add
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
push
mov
xor
add
cmp
jne
mov
call
test
je
push
mov
call
inc
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
push
mov
xor
add
cmp
jne
mov
call
test
je
xor
inc
push
mov
call
add
ret
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
andl
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
call
mov
andl
movzbl
mov
mov
lea
push
lea
push
lea
push
push
push
push
call
mov
cmp
je
cmpl
mov
je
push
call
jmp
push
call
cmpl
mov
je
push
call
jmp
push
call
cmpl
je
lea
push
push
call
cmpb
jne
lea
push
lea
push
push
push
call
test
je
lea
push
push
call
cmpb
jne
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
andl
orl
orl
lea
push
push
movl
call
xor
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
call
test
jne
call
mov
jmp
call
mov
mov
add
test
jl
push
call
push
lea
call
call
add
add
add
push
add
lea
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
add
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
pushl
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
pushl
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
pushl
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
clc
cmp
mov
fcomps
add
mov
dec
sub
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
mov
mov
shr
shr
mov
lea
push
mov
mov
test
jle
mov
add
mov
mov
add
mov
add
lea
add
add
test
jle
mov
mov
sub
add
mov
roll
mov
add
add
jne
mov
shl
add
add
jne
mov
lea
imul
mov
mov
shl
mov
mov
mov
test
jle
mov
mov
shl
mov
mov
mov
mov
mov
test
jle
movzbl
shl
movzbl
or
movzbl
shl
or
mov
andl
shr
mov
and
mov
mov
mov
mov
add
add
mov
add
add
shr
cmp
jbe
mov
mov
mov
imul
add
imul
mov
shr
and
add
sub
mov
shr
and
shr
add
and
and
or
mov
shl
or
mov
add
add
jne
mov
mov
add
add
mov
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
mov
mov
shr
push
mov
shr
mov
add
lea
mov
mov
test
jle
mov
add
mov
mov
add
lea
add
add
test
jle
mov
mov
sub
add
mov
sar
mov
add
add
jne
mov
shl
add
add
jne
mov
lea
mov
mov
mov
shl
imul
mov
pxor
pxor
pxor
movd
movq
movq
test
jle
mov
shl
mov
mov
mov
mov
mov
test
jle
mov
shl
mov
mov
shl
mov
mov
mov
mov
add
mov
add
add
mov
add
shr
cmp
jbe
mov
movzbl
mov
mov
mov
mov
or
je
shl
or
shl
or
shl
movd
movq
punpcklbw
punpcklbw
pmullw
paddusw
psrlw
paddusw
packuswb
movd
or
mov
add
add
mov
jne
add
add
jne
emms
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
mov
test
je
add
mov
add
mov
call
jmp
add
mov
add
add
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
dec
je
dec
je
mov
jmp
push
mov
jmp
push
mov
mov
pop
dec
cmp
jae
imul
add
mov
test
je
mov
dec
cmp
jae
push
movzwl
push
mov
add
mov
call
test
jne
test
jne
push
call
push
add
add
call
jmp
mov
push
lea
movsl
movsl
movsl
movsl
test
je
and
push
mov
call
push
add
call
mov
mov
mov
mov
push
mov
mov
add
push
mov
add
mov
sub
mov
mov
sub
sub
sub
mov
push
push
add
mov
add
push
add
mov
add
push
add
push
add
add
add
add
mov
mov
push
add
add
push
push
add
add
add
mov
push
add
mov
push
add
add
push
add
add
add
add
call
mov
neg
push
neg
push
lea
push
call
mov
push
add
lea
push
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
imul
cltd
mov
idiv
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
add
mov
push
mov
cmp
jle
mov
jmp
sub
cmp
mov
jge
mov
mov
add
mov
mov
cmp
pop
jle
mov
jmp
sub
mov
cmp
mov
jge
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
add
lea
add
add
add
push
call
lea
push
call
test
jne
add
lea
push
add
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
movzbl
mov
mov
shr
fildl
shr
movzbl
movzbl
mov
fildl
mov
fildl
fldz
fldl
fcom
fnstsw
fstp
test
jne
fldl
fld
fsub
fmul
faddp
fld
fsub
fmul
faddp
fsub
jmp
fld
fmul
faddp
fld
fmul
faddp
fld
fmulp
push
faddp
call
movzbl
shl
call
movzbl
or
shl
call
movzbl
or
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
push
mov
mov
and
cmp
jne
mov
shr
and
cmp
je
cmp
je
cmp
jne
add
add
call
jmp
push
push
xor
mov
mov
mov
movb
call
push
push
push
mov
mov
call
mov
mov
shl
sar
dec
je
sub
jne
mov
and
push
mov
call
mov
jmp
add
movb
call
cmpl
mov
je
cmpl
jne
add
call
mov
mov
call
mov
mov
lea
movsl
movsl
movsl
movsl
mov
push
lea
push
call
cmpl
je
jle
cmpl
jg
mov
cltd
sub
sar
push
mov
cltd
sub
sar
push
mov
cltd
sub
sar
push
mov
cltd
sub
sar
push
lea
push
call
mov
lea
movsl
movsl
lea
movsl
push
lea
push
movsl
call
cmpl
fldl
push
push
fstpl
add
jne
mov
mov
call
mov
push
add
fldl
add
sbb
add
mov
call
push
add
fldl
push
push
fstpl
add
mov
call
push
add
jmp
call
mov
push
add
fldl
add
sbb
add
mov
call
push
add
fldl
push
push
fstpl
add
mov
call
push
add
mov
mov
mov
mov
push
add
mov
add
add
add
push
call
add
add
add
add
add
push
call
add
add
add
add
add
push
call
add
add
push
add
add
push
call
add
add
add
add
add
push
call
add
add
add
add
add
push
call
push
add
add
add
add
push
call
push
add
add
add
add
push
call
xor
cmpl
jne
cmp
je
add
call
cmp
je
add
call
cmp
je
add
jmp
cmp
je
add
call
cmp
je
add
call
cmp
je
add
call
jmp
add
mov
add
mov
add
add
push
push
call
add
add
add
add
push
push
call
add
add
add
add
push
push
call
add
add
add
add
push
push
call
cmpl
je
cmpb
je
add
call
mov
lea
movsl
movsl
movsl
movsl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
add
test
je
mov
mov
test
je
or
test
je
or
test
je
or
test
je
or
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
add
add
add
add
add
add
add
add
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
and
cmp
sete
mov
add
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
mov
push
test
je
or
push
add
add
add
add
call
mov
jmp
push
push
add
call
mov
xor
movl
lea
stos
stos
mov
andl
stos
movl
jne
movl
mov
mov
mov
sub
sub
xor
add
add
mov
mov
mov
mov
mov
cmp
je
call
test
jl
lea
push
lea
push
push
lea
push
add
call
mov
test
je
andl
andl
lea
push
lea
push
push
call
test
jl
add
call
push
add
call
mov
sub
push
pop
add
mov
mov
sub
push
add
add
mov
mov
mov
call
push
add
call
mov
xor
mov
mov
test
jne
mov
mov
shr
movzbl
imul
shr
movzbl
add
movzbl
lea
cmp
jle
andl
jmp
mov
add
add
call
add
add
call
push
add
call
andl
cmpl
je
mov
mov
sub
mov
sub
sub
mov
sub
mov
mov
sub
mov
mov
sub
lea
push
add
mov
call
mov
sub
mov
mov
and
push
lea
push
add
add
add
call
mov
test
jle
mov
mov
test
jle
mov
cmpl
je
movzbl
mov
add
add
jne
add
mov
lea
jne
add
add
push
push
add
call
mov
add
cmpl
je
sub
mov
xor
lea
stos
stos
mov
movb
movb
movb
add
lea
add
push
push
add
add
add
push
push
mov
add
push
add
call
add
add
call
push
add
call
mov
push
add
add
add
mov
add
mov
add
add
mov
push
add
add
add
call
add
mov
add
add
add
add
add
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
testb
mov
mov
je
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
testb
je
mov
and
jne
orl
jmp
cmp
jne
andl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
push
mov
push
push
push
mov
call
test
je
push
lea
or
push
shl
push
call
test
je
lea
movzwl
push
push
push
add
push
call
mov
add
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
mov
push
push
xor
push
jmp
inc
push
add
push
add
pop
pop
test
jne
push
call
lea
mov
add
push
call
mov
test
je
movzwl
xor
test
je
movl
mov
cmp
jge
cmp
je
cmpw
je
push
push
push
lea
push
push
call
push
call
cmp
jne
andl
push
pop
mov
inc
add
mov
mov
inc
add
inc
inc
movzwl
test
jne
cmpw
je
lea
cmp
jge
push
pop
mov
push
pop
inc
mov
mov
inc
sub
push
lea
push
add
call
push
call
mov
lea
cmp
jge
push
pop
mov
inc
xor
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
push
mov
test
jne
mov
jmp
push
lea
push
add
call
push
lea
push
call
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
andl
andl
push
mov
push
push
mov
lea
movsl
movsl
movsl
mov
movb
movb
movsl
call
mov
mov
mov
shl
sar
dec
je
sub
je
dec
dec
jne
mov
movzbl
and
sub
je
dec
dec
jne
lea
push
add
push
call
push
add
call
jmp
shr
and
cmp
je
cmp
je
sub
cmp
ja
mov
push
lea
push
push
call
add
or
add
jne
call
add
mov
mov
push
mov
mov
movl
call
mov
movzwl
push
movzwl
push
push
push
lea
push
call
mov
mov
add
push
mov
add
push
mov
sub
push
mov
sub
push
lea
push
call
lea
push
lea
push
call
mov
and
cmp
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
call
push
add
call
mov
mov
and
sub
je
dec
je
dec
jne
movzwl
mov
mov
sub
sub
mov
sub
mov
jmp
movzwl
mov
sub
sub
mov
cltd
sub
sar
sub
mov
jmp
movzwl
mov
mov
sub
sub
sub
mov
mov
and
je
cmp
je
cmp
jne
movzwl
mov
mov
sub
sub
sub
mov
jmp
movzwl
mov
sub
sub
mov
cltd
sub
sar
mov
sub
jmp
movzwl
mov
mov
sub
sub
mov
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
and
cmp
jne
movzbl
movzbl
shl
or
movzbl
shl
or
movl
mov
jmp
cmp
jne
mov
add
movzbl
push
movl
movb
movb
call
mov
movb
lea
push
call
add
add
call
jmp
add
push
call
add
mov
call
push
mov
push
mov
add
mov
push
add
mov
add
push
mov
movzwl
push
movzwl
push
mov
sub
push
push
add
push
mov
sub
push
add
add
add
call
add
add
add
add
add
add
add
call
jmp
mov
add
movzbl
push
call
mov
test
je
mov
test
je
mov
push
add
push
call
push
mov
add
mov
jmp
lea
mov
cmp
jbe
cmp
je
jbe
cmp
jbe
cmp
je
cmp
jne
mov
test
je
lea
push
push
call
test
jl
testl
jne
lea
push
add
add
add
add
call
jmp
xor
lea
stos
stos
stos
stos
stos
mov
testb
movl
movl
lea
lea
movsl
movsl
movsl
movsl
je
movl
lea
push
lea
push
add
add
add
add
call
jmp
add
lea
add
push
add
call
movb
jmp
mov
add
movzbl
push
call
mov
test
jne
movb
jmp
mov
and
push
call
mov
jmp
mov
movb
jmp
mov
mov
add
mov
movb
call
mov
mov
test
jne
cmpb
je
lea
push
add
lea
push
call
lea
push
call
test
jne
cmpb
jne
mov
mov
cmp
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
add
lea
push
add
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
jmp
push
push
add
lea
add
push
add
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
cmp
je
add
cltd
sub
sar
movl
mov
mov
jmp
andl
lea
cltd
sub
sar
mov
mov
mov
testb
je
mov
mov
mov
movzbw
shl
mov
mov
shr
movzbw
shl
mov
mov
shr
movzbw
shr
shl
shl
mov
mov
cmp
je
cmp
je
andl
mov
xor
movl
inc
jmp
sub
add
add
mov
movzbw
shl
mov
mov
mov
shr
movzbw
shl
mov
mov
mov
shr
movzbw
shl
shr
shl
mov
mov
mov
movl
movl
mov
mov
add
movzbw
shl
mov
stos
push
inc
add
movzbw
shl
mov
mov
shr
shl
push
mov
lea
push
shr
push
movzbw
lea
push
add
shl
mov
call
mov
pop
pop
pop
test
je
mov
add
cmpl
je
cmpb
je
add
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
push
mov
push
lea
movsl
movsl
movsl
mov
movsl
mov
movl
call
test
je
andl
test
jle
push
add
call
mov
test
jne
movl
mov
call
mov
test
je
mov
mov
add
mov
call
mov
push
mov
add
test
je
mov
shr
not
test
jne
movl
mov
andl
andl
mov
call
mov
mov
test
je
mov
push
mov
call
push
mov
call
push
mov
call
push
add
lea
push
mov
call
push
mov
add
mov
mov
call
cmpl
je
add
add
call
mov
orl
push
push
push
mov
call
mov
mov
mov
shl
sar
dec
je
sub
jne
mov
and
jmp
add
call
or
push
add
add
mov
mov
call
push
add
call
mov
lea
lea
movsl
movsl
movsl
cltd
movsl
mov
xor
mov
sub
call
test
je
push
pop
mov
cltd
idiv
push
push
push
push
lea
push
call
lea
push
lea
push
call
mov
call
mov
mov
and
testb
mov
jne
test
jne
mov
shr
not
test
jne
test
jne
mov
andl
cmpl
je
testb
jne
and
xor
sub
mov
je
dec
je
dec
jne
mov
push
pop
jmp
mov
mov
add
cltd
sub
push
mov
pop
roll
jmp
mov
cmpl
je
cmpl
jne
mov
or
jmp
mov
mov
mov
push
add
add
mov
mov
lea
mov
inc
inc
test
jne
sub
sar
push
push
add
lea
push
mov
mov
add
movzbl
neg
sbb
and
or
push
add
push
add
call
add
add
add
jmp
push
mov
call
or
mov
mov
and
sub
je
dec
je
dec
jne
orl
jmp
orl
and
push
mov
pop
je
cmp
je
cmp
je
cmp
jne
or
jmp
orl
jmp
orl
jmp
orl
mov
shr
and
je
movb
call
test
jl
mov
xor
lea
stos
stos
stos
lea
mov
lea
lea
movsl
lea
push
movsl
lea
push
push
lea
movsl
push
add
movb
movb
movb
movb
movl
movsl
call
mov
test
je
andl
lea
push
push
call
test
jl
andl
mov
call
cmpl
mov
je
add
add
call
mov
push
lea
push
push
call
mov
add
add
movl
movl
mov
call
lea
lea
movsl
mov
mov
movsl
neg
push
movsl
push
lea
push
movsl
call
lea
push
lea
push
add
push
add
push
push
add
add
call
test
jl
movb
cmpl
je
add
add
call
push
add
call
cmpb
jne
mov
test
je
mov
call
push
push
push
push
push
add
call
push
add
lea
push
push
add
add
call
jmp
cmpl
mov
mov
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
add
lea
push
push
add
add
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
cmpl
pop
pop
pop
je
add
add
call
cmpl
je
add
add
call
mov
test
je
mov
add
mov
mov
cmp
je
cmp
je
push
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
push
lea
movsl
movsl
movsl
mov
testb
mov
movsl
je
call
push
push
call
xor
push
push
push
mov
mov
call
mov
mov
shl
sar
mov
sub
je
sub
je
dec
dec
jne
mov
mov
cmp
jne
movzwl
mov
movzwl
mov
jmp
mov
cmp
je
lea
push
push
call
test
jl
lea
push
push
push
add
add
add
add
call
mov
sub
mov
cmp
jge
mov
jmp
mov
mov
mov
mov
mov
sub
cmp
jl
mov
mov
and
dec
je
dec
jne
mov
sub
mov
jmp
mov
sub
sub
cltd
sub
sar
add
mov
mov
and
cmp
je
cmp
jne
sub
mov
jmp
sub
sub
cltd
sub
sar
add
mov
mov
and
cmp
jne
movzbl
and
xor
sub
je
dec
je
dec
jne
mov
add
lea
push
add
add
push
mov
mov
call
push
add
call
jmp
cmp
je
cmp
je
push
push
push
push
push
add
push
call
push
add
add
add
call
jmp
add
call
add
mov
push
mov
call
test
je
test
je
push
push
call
mov
mov
shr
and
mov
je
test
jbe
cmp
jbe
cmp
jne
movzbl
movzbl
shl
or
movzbl
shl
or
push
movzwl
push
movzwl
push
push
push
push
push
add
add
add
add
call
jmp
mov
add
movzbl
push
movb
movb
call
cmpb
mov
sete
mov
add
movzwl
push
movzwl
push
push
push
push
push
add
add
add
add
call
jmp
movzwl
cmp
jne
movzwl
cmp
jne
push
push
push
push
push
add
add
add
add
call
jmp
mov
push
add
add
push
mov
movzwl
push
movzwl
push
push
push
add
push
add
add
add
add
call
add
add
add
mov
add
push
call
push
call
jmp
mov
add
add
mov
mov
mov
test
je
lea
push
push
call
test
jl
testl
jne
lea
push
add
add
add
add
call
jmp
xor
lea
stos
stos
stos
stos
stos
mov
testb
movl
movl
lea
lea
movsl
movsl
movsl
movsl
je
movl
lea
push
lea
push
add
add
add
add
call
jmp
add
mov
push
add
add
call
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
call
inc
add
test
add
add
lret
call
mov
test
je
mov
push
mov
add
mov
call
mov
push
mov
add
test
je
mov
not
test
je
testb
mov
lea
movsl
movsl
movsl
movsl
je
fcoms
add
inc
inc
add
add
mov
mov
mov
cltd
sub
mov
mov
cltd
sub
roll
sar
cmp
jge
mov
mov
cltd
sub
mov
mov
cltd
sub
sar
sar
cmp
jl
mov
mov
sub
add
mov
sub
add
mov
sub
add
mov
sub
add
call
add
lea
push
push
call
lea
push
add
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmpl
push
push
push
mov
mov
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
mov
xor
mov
stos
stos
testb
je
push
push
push
mov
call
mov
mov
shl
sar
sub
mov
je
sub
je
dec
dec
jne
movzwl
mov
movzwl
mov
jmp
mov
mov
mov
add
test
jne
mov
cmpb
jne
mov
test
je
lea
push
push
call
test
jl
add
mov
push
push
add
add
add
add
call
jmp
mov
mov
test
je
mov
movl
call
test
je
andl
test
jle
push
add
call
mov
test
jne
movl
mov
call
mov
test
je
mov
mov
add
mov
call
mov
push
mov
add
test
je
mov
shr
not
test
jne
movl
mov
mov
mov
add
test
jne
mov
andl
mov
call
mov
mov
test
je
mov
push
mov
call
push
mov
call
push
mov
call
push
push
lea
push
mov
call
mov
push
add
mov
mov
call
test
je
push
add
call
mov
xor
mov
mov
call
test
je
mov
cltd
xor
sub
push
cltd
pop
idiv
mov
add
mov
mov
call
push
push
call
testb
jne
mov
shr
not
test
jne
test
jne
testb
jne
mov
lea
mov
inc
inc
test
jne
mov
sub
push
sar
push
add
add
call
jmp
mov
andl
andl
mov
sub
mov
mov
test
jg
movl
push
mov
call
mov
or
or
testb
je
or
test
jne
or
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
push
lea
push
push
add
add
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
testb
je
mov
call
add
add
add
add
cmpl
je
add
add
call
mov
test
je
mov
add
mov
mov
cmp
je
cmp
je
push
call
mov
call
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
cmpl
push
push
push
mov
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
mov
lea
movsl
movsl
push
movsl
push
push
mov
movsl
call
mov
lea
push
call
testb
je
push
push
push
mov
call
mov
lea
push
lea
push
push
call
mov
call
mov
lea
push
lea
push
test
jne
add
mov
add
call
jmp
call
jmp
mov
test
je
lea
movsl
movsl
movsl
movsl
lea
push
call
testb
je
push
push
push
mov
call
mov
lea
push
lea
push
push
call
mov
call
lea
push
lea
push
add
lea
push
add
mov
add
call
lea
push
lea
push
call
mov
test
jne
lea
push
add
mov
add
call
lea
push
add
mov
call
jmp
lea
movsl
movsl
movsl
movsl
mov
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
pushl
pushl
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
add
push
call
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
je
mov
test
je
add
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
test
je
mov
test
jne
mov
xor
inc
jmp
dec
mov
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
test
je
mov
xor
inc
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
test
je
cmp
jne
movb
xor
inc
jmp
mov
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
test
je
mov
test
jne
mov
xor
inc
jmp
cmp
jne
andl
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
test
je
mov
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
push
add
call
int3
int3
int3
int3
int3
int3
push
call
test
jne
push
xor
push
push
pushl
push
push
push
call
cmp
je
push
call
mov
pop
mov
ret
int3
int3
int3
int3
int3
movl
movl
add
mov
inc
or
test
add
inc
adc
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
xor
cmp
jne
mov
ret
push
push
mov
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
add
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
push
test
je
andl
mov
push
pop
mov
xor
repz
je
mov
push
pop
mov
xor
repz
je
mov
push
pop
mov
xor
repz
jne
mov
mov
mov
push
add
xor
jmp
mov
jmp
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
inc
cmp
je
mov
jmp
cmpl
jne
mov
mov
test
jne
mov
jmp
testb
je
testb
je
mov
add
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
xor
sub
cmp
je
mov
push
mov
push
push
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmpw
jne
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
cmp
je
testb
jne
xor
inc
jmp
push
lea
push
add
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
xor
jmp
mov
jmp
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpw
jne
cmpl
jne
mov
mov
test
je
testb
jne
xor
inc
jmp
testb
jne
mov
jmp
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
cmpl
push
mov
jne
mov
jmp
mov
mov
add
test
jne
mov
andl
mov
lea
push
add
test
je
cmpw
je
add
push
call
mov
jmp
xor
inc
mov
call
jmp
xor
inc
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
andl
cmpw
jne
cmpl
jne
test
jne
mov
jmp
mov
mov
test
je
testb
jne
xor
inc
jmp
andl
lea
push
call
test
je
push
push
call
mov
jmp
xor
inc
mov
call
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
andl
cmpw
jne
cmpl
jne
test
jne
mov
jmp
mov
mov
test
je
testb
jne
xor
inc
jmp
andl
lea
push
call
test
je
push
push
call
mov
jmp
xor
inc
mov
call
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
cmpw
push
jne
cmpl
jne
mov
mov
test
je
testb
jne
xor
inc
jmp
pushf
dec
inc
add
add
mov
test
jne
mov
call
test
je
mov
mov
test
je
push
push
lea
call
mov
push
lea
push
push
add
mov
add
test
je
mov
call
movzwl
test
je
push
add
call
jmp
xor
inc
pop
jmp
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
cmp
je
push
call
cmpw
jne
cmp
jne
cmp
jne
mov
jmp
mov
mov
cmp
je
testb
jne
xor
inc
jmp
push
pop
mov
mov
call
cmp
mov
jg
xor
inc
mov
jmp
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
test
je
push
call
cmpw
jne
cmpl
jne
test
jne
mov
jmp
mov
mov
test
je
testb
jne
xor
inc
jmp
push
pop
mov
mov
call
mov
push
lea
push
mov
add
call
mov
mov
jmp
push
lea
push
add
call
lea
push
lea
push
push
call
test
je
mov
test
jne
lea
push
call
test
je
orl
xor
jmp
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpw
push
jne
cmpl
jne
mov
test
jne
mov
jmp
andl
mov
mov
test
je
testb
jne
xor
inc
jmp
andl
lea
push
call
test
je
push
push
call
mov
jmp
xor
inc
mov
call
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
push
call
push
mov
mov
test
jne
mov
jmp
mov
jmp
testb
jne
xor
inc
jmp
mov
mov
add
test
je
mov
testb
je
andl
push
pop
jmp
xor
mov
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
andl
cmpw
jne
cmpl
jne
test
jne
mov
jmp
mov
mov
test
je
testb
jne
xor
inc
jmp
andl
lea
push
call
test
je
push
push
call
mov
jmp
xor
inc
mov
call
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
andl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
jmp
testb
jne
mov
test
jne
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
andl
mov
test
je
test
je
testb
jne
xor
inc
jmp
mov
andl
push
lea
push
add
mov
test
jl
mov
mov
push
push
push
add
mov
mov
mov
push
add
mov
pop
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
movl
movl
add
mov
inc
or
test
add
inc
adc
clc
add
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
push
add
andl
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
andl
mov
mov
test
je
cmpl
je
testb
je
mov
mov
push
push
push
add
jmp
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
movl
movl
movl
movl
movl
add
int3
int3
int3
int3
mov
push
mov
mov
test
je
mov
push
add
andl
mov
test
je
mov
push
add
andl
mov
test
je
mov
push
add
andl
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
push
push
push
test
je
andl
mov
push
pop
mov
mov
xor
repz
jne
mov
cmp
je
lea
jmp
mov
jmp
push
pop
mov
mov
xor
repz
jne
mov
cmp
je
lea
jmp
push
pop
mov
mov
xor
repz
jne
mov
cmp
je
lea
jmp
push
pop
mov
mov
xor
repz
jne
mov
cmp
je
lea
mov
mov
push
add
xor
jmp
push
push
add
call
jmp
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
push
test
je
mov
test
je
testb
jne
xor
inc
jmp
mov
sub
mov
add
lea
movsl
movsl
movsl
push
movsl
add
jmp
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
push
test
je
mov
test
je
testb
jne
xor
inc
jmp
mov
sub
mov
add
lea
add
movsl
add
movsl
add
movsl
push
movsl
add
jmp
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
test
je
cmpl
je
testb
jne
xor
inc
jmp
add
mov
add
mov
add
push
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
push
test
je
mov
test
je
testb
jne
xor
inc
jmp
testb
jne
mov
jmp
mov
sub
mov
lea
movsl
movsl
movsl
push
movsl
add
jmp
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
ret
imul
cli
call
andl
out
incl
jle
add
add
add
movsl
add
mov
lods
pop
push
push
xchg
popa
add
lcall
test
iret
jae
fldl
add
mov
add
incl
mov
add
adcb
vphaddwd
lods
xchg
fwait
call
add
lds
repnz
add
call
xchg
into
cmpsl
in
add
call
call
add
jno
lock
enter
imul
incl
add
add
out
push
test
out
incl
add
flds
add
add
in
sub
push
push
call
imul
test
add
decl
push
mov
iret
cli
pop
add
jge
stc
add
add
push
fiadds
loope
add
sar
jmp
mov
add
shrb
fwait
xchg
add
jns
add
test
add
push
test
fwait
mov
pop
add
into
clc
mov
jp
test
popa
push
add
add
add
mov
clc
pop
sub
push
call
lcall
bound
push
push
add
call
mov
mov
lods
mov
lock
pushl
add
add
add
lcall
add
add
fstl
adcb
jo
add
mov
out
mov
add
jns
cmpsb
test
dec
mov
call
decl
rorl
decl
call
jmp
add
fcomi
pop
add
add
subl
sti
add
add
cld
add
mov
out
mov
cmc
enter
add
add
fcmovnb
enter
incl
add
add
jle
add
test
pop
push
ljmp
xchg
incl
push
fdivl
lds
pop
movb
incl
add
push
aad
iret
add
add
push
push
push
push
call
leave
add
add
mov
mov
add
mov
jno
add
test
in
fiaddl
add
add
popf
xlat
add
call
faddl
leave
test
push
mov
divl
les
in
stc
std
add
incl
add
incl
je
gs
popa
shlb
out
add
mov
sub
call
push
call
push
call
imul
add
leave
add
add
jmp
add
mov
push
ljmp
repnz
add
add
add
bound
nop
add
lea
ljmp
add
out
movsl
incl
xchg
add
fiaddl
pop
add
add
add
push
out
mov
bound
mov
incl
add
add
push
call
cmc
jp
mov
push
lods
repnz
ljmp
jns
mov
fdivr
add
popf
mov
call
mov
addb
cmpsb
out
add
lcall
incl
jno
add
lret
add
lea
jmp
add
mov
lcall
xchg
add
inc
jo
decl
pop
mov
add
add
lcall
mov
mov
add
push
call
pop
jno
add
cld
add
add
jp
xchg
lds
ljmp
jnp
pushl
mov
popf
cld
addl
leave
fstps
mov
add
xchg
incl
add
int
fwait
add
mov
aad
add
add
fildl
jbe
lret
pop
in
lcall
mov
in
incl
add
add
add
pushl
push
call
iret
into
add
popl
jp
incl
movsl
pop
add
jmp
cli
lcall
loop
addb
jbe
jns
adc
incl
xchg
add
add
mov
imul
sahf
insb
push
cltd
flds
add
shlb
xchg
add
clc
call
mov
push
call
push
jns
cmpsb
add
jmp
jmp
loopne
lret
rcl
in
lods
out
mov
cli
call
push
mov
xchg
add
add
shlb
push
sahf
add
mov
jo
add
add
lcall
ja
loopne
push
mov
add
data16
scas
add
mov
incl
jbe
into
stc
push
call
add
jbe
lret
add
bound
add
gs
incl
jns
jl
int
scas
mov
pushl
mov
aad
test
imul
jns
popa
jp
test
test
jecxz
ljmp
jbe
jle
inc
add
xchg
pop
xchg
add
ljmp
mov
mov
mov
jae
mov
sub
push
push
lea
sub
inc
push
push
pop
add
sub
xor
shl
sub
sub
pop
sub
sub
pop
push
call
mov
incl
mov
pushf
add
ljmp
push
subl
jge
xchg
mov
jmp
stos
cmpsb
add
gs
add
add
lea
js
add
xlat
add
movsl
mov
mov
add
cwtl
add
fsts
fsubr
add
lds
decl
pushl
call
push
call
mov
add
jmp
add
out
call
pop
add
add
mov
pop
add
imul
add
add
fcoml
add
into
testl
add
data16
not
add
add
lock
add
cmp
mov
fisubs
insb
mov
sub
mov
push
call
push
mov
mov
add
cmpsl
ljmp
add
mov
lcall
mov
xchg
add
add
jp
add
add
test
lods
jns
gs
sar
call
decl
mov
cmpsb
nop
add
ret
pop
repnz
add
add
jb
push
call
pop
mov
mov
sub
movl
push
call
pushf
outsl
pusha
add
mov
jae
scas
les
incl
add
add
pusha
js
enter
mov
add
hlt
xchg
add
mov
cmc
leave
int
add
incl
add
mov
incl
mov
nop
push
filds
fdiv
call
pop
cmp
inc
add
pushf
js
add
ja
jmp
out
add
decl
jne
push
call
lea
mov
call
rolb
jl
imul
mov
mov
lcall
push
xchg
push
add
add
pushl
push
incl
outsl
fwait
int
add
mov
roll
loope
add
add
filds
jnp
fldcw
filds
pop
add
add
test
rolb
mov
jnp
ljmp
clc
pushl
call
push
call
cli
add
rolb
in
add
lds
add
incl
add
call
imul
add
add
add
add
add
gs
decl
add
cld
fstp
add
incl
notb
mov
add
mov
add
xchg
filds
cmpsb
data16
add
data16
sar
in
add
sub
pushl
push
call
jne
pop
add
call
pushf
mov
add
leave
incl
sahf
mov
ljmp
push
add
in
movsl
cmpsb
mov
popa
fnsave
cwtl
add
je
add
add
icebp
test
cmpsb
stos
js
scas
ja
call
lcall
pop
incl
xchg
repnz
jp
test
outsl
push
popl
xchg
in
leave
mov
sub
pushl
call
push
push
dec
push
or
inc
add
not
sub
rol
ror
pop
add
rol
sub
ror
pop
push
call
call
arpl
shr
mov
hlt
mov
add
mov
jecxz
roll
mov
lea
xchg
mov
sti
out
add
enter
dec
pop
icebp
add
lea
add
loop
decl
lcall
lret
add
sahf
mov
sub
pushl
push
call
ret
insb
add
jne
dec
add
add
add
lods
out
push
stos
ja
add
mov
add
pushl
je
add
mov
pushl
incl
add
je
cli
frstor
rclb
add
leave
jmp
lret
jp
add
popl
pop
add
add
clc
call
push
push
call
in
jmp
iret
add
add
in
lcall
mov
lds
cmpsb
mov
add
pop
mov
incl
imulb
jo
add
cltd
fndisi(8087
test
cld
add
jns
aad
mov
lock
leave
pop
mov
add
faddl
sarl
cld
add
add
push
jmp
mov
sub
push
push
sub
push
or
inc
add
sub
sub
sub
shl
shl
ror
pop
pop
push
call
add
mov
mov
fiadds
sti
add
rolb
add
add
push
pop
add
outsl
xchg
mov
add
lcall
add
int3
add
ljmp
fisubl
data16
add
lock
lods
mov
add
call
decl
call
xor
inc
add
jo
add
pop
insb
pop
push
fldl
out
add
rolb
mov
out
push
jbe
mov
fcomps
jmp
mov
fldl
mov
imul
cmpsb
add
add
jbe
popa
sti
test
adcb
add
rol
jne
add
add
mov
ljmp
pop
add
jb
out
fadds
push
gs
add
jns
add
xchg
add
ljmp
push
call
mov
nop
push
rolb
cltd
add
add
into
nop
push
rcll
add
push
jp
add
add
std
sahf
bound
push
pushf
in
mov
mov
add
fstpt
lock
call
leave
add
xchg
aad
mov
repnz
test
add
incl
push
call
fstpt
add
enter
addl
js
cld
insb
add
jbe
add
pushl
pushl
add
jae
out
jmp
mov
fdivrp
add
loopne
add
pop
fidivs
fs
push
cwtl
mov
jns
incl
push
push
push
call
xchg
push
decl
add
incl
ficomps
lcall
pop
lods
mov
add
add
add
rolb
pushl
push
mov
ljmp
add
jle
rcl
mov
call
in
mov
xchg
movb
add
jae
fldl
in
incl
decl
call
jecxz
add
incl
rolb
aam
addr16
jmp
je
fiadds
enter
movsb
mov
rorl
add
fcmovne
leave
xchg
out
movb
lret
lcall
mov
outsl
in
add
lods
fcmovu
add
add
incl
add
add
lods
push
mov
add
leave
add
aad
faddl
add
pushl
jb
in
mov
sub
add
add
push
call
add
xchg
add
add
lcall
decb
lret
roll
loop
fwait
int
call
lcall
mov
mov
add
add
incl
jmp
scas
jne
arpl
add
shr
incl
xchg
add
call
outsl
mov
xchg
js
jb
push
add
add
pop
test
incl
incl
add
call
add
add
jmp
add
call
jmp
mov
xchg
scas
add
add
cld
jb
test
add
leave
in
test
pushl
push
bound
push
popf
arpl
incl
fwait
jnp
add
mov
add
add
lods
add
lds
lcall
testb
jle
mov
mov
sub
sub
add
push
call
faddl
mov
jmp
mov
add
leave
imul
scas
push
add
jmp
pushf
std
add
add
stc
add
jae
add
cltd
push
jecxz
push
add
mov
icebp
mov
in
hlt
lea
add
lock
add
les
incl
lret
add
call
iret
call
imull
jge
xchg
in
mov
hlt
xlat
add
incl
fildl
lret
hlt
out
roll
int3
xchg
add
bound
jns
std
fidivrs
test
jmp
cli
add
add
incl
jmp
add
cli
arpl
cmp
lcall
incl
addr16
incl
add
incl
sbb
call
add
add
incl
add
add
pushl
add
pop
add
add
lea
mov
push
scas
lahf
add
int3
add
je
call
loop
lret
outsl
pushl
jmp
js
nop
add
add
add
pop
js
mov
rorb
mov
sub
sub
add
pop
push
call
jns
incl
mov
add
mov
mov
flds
incl
xchg
add
jno
xchg
add
int3
mov
gs
add
add
jmp
dec
add
roll
out
push
jecxz
mov
ljmp
pop
std
push
push
data16
pop
call
add
decl
add
add
mov
sub
mov
push
call
shlb
push
add
lcall
scas
push
lcall
add
add
cmc
int
add
xchg
push
lds
add
mov
outsl
add
fstps
pop
cmc
pushf
cmpsb
xchg
mov
pop
insb
mov
add
addr16
jl
add
ljmp
incl
add
pushf
mov
hlt
add
jl
cltd
pushf
shll
push
mov
mov
sub
sub
push
mov
push
call
pop
fdivrp
ljmp
jno
call
jmp
add
cmpsl
movsb
in
add
insb
pop
call
add
sti
add
add
jp
lods
add
xchg
add
fdivrs
js
pop
add
cli
je
add
add
faddl
leave
int
add
adc
mov
testb
jbe
into
stc
sub
pop
push
call
arpl
add
nop
pop
faddl
rolb
add
jp
fmull
mov
sti
xchg
xchg
incl
add
fucomp
jle
add
mov
add
add
add
fisubl
fcomi
loop
arpl
fadds
insb
add
jo
jge
sti
cmpsl
sti
add
call
aam
pusha
jbe
pusha
mov
in
shrb
incl
mov
incl
push
movsb
push
call
loopne
pop
add
xchg
fcomi
add
aam
loop
jns
fucomi
jmp
mov
js
lods
mov
add
stos
add
xlat
lcall
enter
fs
pop
add
aam
roll
test
add
incl
mov
mov
lcall
mov
mov
in
pop
lock
incl
add
imul
icebp
push
leave
add
add
add
lcall
in
clc
lcall
pop
loopne
pop
call
add
add
negl
add
mov
test
add
lcall
jb
add
add
pushl
je
add
push
stc
push
cli
xchg
mov
add
mov
test
sti
pop
xlat
pop
xchg
add
fdivr
incl
xchg
lcall
mov
sub
add
add
mov
push
call
mov
mov
call
mov
adc
add
ljmp
mull
pop
mov
jnp
fcmovu
add
andb
flds
ja
pop
jno
mov
jmp
gs
add
add
add
mov
add
add
lcall
int3
add
xchg
mov
sub
sub
mov
push
call
add
cwtl
icebp
arpl
mov
incl
add
add
add
add
enter
add
pop
repnz
into
add
add
rclb
fcoms
mov
add
incl
push
pop
stc
movsb
jmp
cmpl
lods
add
incl
xchg
in
loope
imul
add
pushf
fadds
rcl
add
mov
sub
sub
push
call
add
push
xchg
add
mov
lcall
mov
je
add
int
mov
add
add
add
xchg
sahf
add
enter
roll
mov
fmulp
add
add
out
repnz
mov
add
add
pop
stos
incl
in
out
popf
add
clc
mov
sub
push
call
sbbb
push
nop
add
fsubs
call
test
loope
xchg
andl
cltd
out
xchg
iret
std
jno
pusha
nop
add
out
jno
incl
add
mov
les
incl
lcall
add
lcall
push
mov
sub
add
add
mov
push
call
add
mov
jns
add
ljmp
add
ljmp
jmp
enter
fidivl
cmpsb
add
xchg
add
add
out
mov
lret
shll
incl
call
xchg
add
pop
xchg
push
push
scas
push
test
mov
add
lcall
mov
pop
push
push
add
scas
testl
incl
ljmp
pop
ret
not
not
xor
push
xor
add
lea
sub
add
rol
shl
inc
pop
add
sub
shl
not
pop
push
call
mov
loopne
imul
add
pushl
jmp
push
fcmove
stc
adcb
fsts
lcall
stc
shr
aad
mov
pop
fdivrp
call
add
incl
pop
push
pop
lea
call
add
add
add
add
ffree
add
add
arpl
pushl
sarl
add
add
call
flds
push
incl
enter
in
clc
pushl
push
call
test
pushl
jno
jmp
add
stos
outsl
jo
test
jp
in
add
int
jge
pop
loopne
add
jbe
ja
xchg
icebp
incl
add
pop
add
mov
dec
jno
cltd
lods
mov
aad
lret
ljmp
incl
xchg
aam
add
call
push
call
test
flds
add
roll
pusha
je
cmpsl
mov
jl
sti
pusha
mov
add
jmp
xchg
test
aam
aam
pop
lret
add
in
cmc
add
int3
add
incl
lret
loop
add
add
clc
jmp
jmp
addr16
call
add
ljmp
push
call
xchg
out
incl
incl
arpl
add
inc
pop
out
add
adc
pop
mov
out
add
jo
in
add
mov
stc
loopne
ja
push
add
flds
add
out
add
fwait
add
incl
faddl
scas
outsl
jle
loopne
mov
ljmp
mov
ljmp
sbb
add
push
and
add
sub
sub
sub
sub
sub
pop
shr
rol
pop
push
call
add
add
add
add
test
add
incl
test
jo
js
cmpsb
lret
add
mov
add
add
cmpsl
std
les
add
incl
out
lcall
jle
mov
add
mov
flds
add
popa
mov
jmp
add
decl
push
push
push
call
popa
add
add
add
movl
add
add
mov
add
mov
xchg
call
add
in
jnp
bound
add
dec
xchg
add
incl
add
add
jae
add
add
cli
xchg
add
incl
cli
stos
add
mov
add
add
fnstsw
in
clc
call
mov
push
call
mov
cld
test
mov
test
add
call
movsl
jns
scas
add
in
bound
add
add
js
neg
xchg
pop
sahf
pop
xchg
mov
fsts
lock
icebp
fstp
push
ret
add
rorl
ljmp
push
decl
push
push
call
xchg
mov
add
sti
mov
mov
add
mov
add
inc
add
mov
stc
add
xlat
testb
rorl
add
mov
pushl
out
add
imul
test
mov
add
add
mov
add
mov
out
incl
mov
sub
push
mov
push
call
mov
jb
call
jmp
outsl
mov
fbld
add
mov
lods
push
add
add
xchg
add
aam
add
int
jl
lret
stos
cwtl
lahf
fimull
push
lds
jb
call
ljmp
xchg
pop
call
sti
bound
out
add
add
decl
addr16
lcall
fisubl
incl
incl
pop
call
add
add
add
add
cmpsb
add
incl
jae
add
lret
out
add
mov
nop
loopne
ret
incl
sahf
rolb
call
incl
incb
xchg
xchg
aam
add
jno
add
add
add
nop
add
pusha
mov
lcall
incl
add
add
add
mov
push
call
orb
add
pushl
pushl
jge
add
jle
decl
incl
jp
add
int
add
add
add
push
push
andb
out
sahf
push
out
mov
add
incl
incl
sti
add
add
incl
roll
add
add
jmp
incl
jbe
into
stc
push
call
lds
add
call
add
lcall
test
incl
mov
roll
bound
jns
rclb
cmpsl
lea
jecxz
mulb
mov
lret
add
add
cltd
jle
lods
mov
mov
ljmp
test
in
jns
add
add
incl
jne
push
call
add
bound
add
xchg
add
add
popa
lds
scas
push
add
fwait
add
jmp
pushl
add
lcall
lcall
add
add
cltd
clc
popa
lock
add
call
lcall
add
fsubs
incl
rcll
incl
call
aaa
call
add
add
arpl
add
add
incl
loope
add
popf
enter
test
test
repnz
popa
gs
out
movsl
add
add
jno
add
cld
xchg
pushf
mov
iret
incl
loop
in
mov
push
push
stc
int
jb
jl
add
add
fucomip
xchg
mov
sub
mov
sub
push
call
movsb
into
mov
mull
jmp
pop
lods
xchg
mov
mov
xorl
pop
pushl
incl
pop
add
mov
incl
sahf
jo
mov
incl
sar
pushl
add
in
mov
loopne
imul
int
rolb
call
fdiv
add
ljmp
incl
incl
lock
mov
push
call
imul
push
lea
push
add
int3
imul
pop
push
in
add
incl
pop
test
add
incl
fnstenv
imul
mov
add
in
nop
insb
lret
addr16
pop
sti
clc
add
sarl
add
jecxz
add
lock
push
push
jbe
add
nop
add
add
nop
decl
incl
stc
push
call
add
stc
push
stc
out
test
mov
arpl
add
mov
add
add
addr16
andb
pushl
mov
pop
sar
call
stos
mov
cmpsb
rolb
roll
lahf
add
mov
fs
mov
cmpsb
add
add
push
xchg
mov
mov
jmp
incl
insb
mov
sub
rep
mov
push
call
jo
mov
add
add
in
mov
add
jle
cmc
pop
rolb
add
mov
fiaddl
sarb
mov
add
add
add
incb
mov
add
lds
add
clc
out
add
pop
orl
push
stos
add
cli
pop
sub
add
push
loope
jns
in
mov
sub
sub
or
je
mov
push
call
call
jmp
int3
bound
mov
mov
xchg
out
add
fistpl
ja
fsts
add
add
jns
pop
add
add
mov
add
mov
mov
pushl
add
ror
ljmp
push
add
mov
add
dec
add
out
subl
in
clc
sub
push
call
jecxz
jge
mov
jo
call
add
add
incl
add
xchg
jmp
add
nop
add
mov
pushl
xchg
aam
lret
mov
decl
add
jmp
filds
pop
incl
add
add
add
add
enter
ljmp
sub
mov
sub
push
call
add
xchg
outsl
mov
add
incl
cmpsl
jecxz
pushl
mov
incl
jns
add
outsl
push
in
add
sti
lret
lcall
add
mov
add
push
test
pop
add
ljmp
mov
fsub
add
add
add
add
repnz
fbld
add
popa
jl
loopne
incl
incl
repnz
call
movsl
pushf
call
add
add
add
add
push
add
scas
flds
xchg
add
sbbl
add
pop
push
xchg
jns
push
nop
fld
loop
add
les
pushf
add
sahf
mov
sub
add
push
mov
push
call
sti
pusha
mov
in
incl
adcb
dec
incl
enter
mov
js
mov
lahf
pop
mov
add
add
stos
ljmp
incl
xlat
mov
rolb
lcall
gs
lods
iret
js
xchg
add
inc
fs
mov
add
js
sahf
lods
mov
inc
add
mov
mov
sub
sub
push
call
add
inc
pop
scas
jbe
add
faddl
icebp
incl
pushl
push
testb
insb
add
incl
add
sar
jmp
add
add
add
insb
jo
jo
nop
add
ljmp
mov
jp
add
pop
add
lods
mov
into
add
jmp
dec
cmc
add
inc
jo
ljmp
pushf
popf
fmulp
add
mov
sub
add
pop
push
call
add
add
les
add
add
addb
int
pop
rcr
jmp
addb
jmp
aad
incl
add
mov
lods
add
cld
cli
movsb
add
mov
incl
add
ljmp
incl
add
add
hlt
pushl
leave
mov
sub
rep
push
call
fistl
test
jnp
out
add
add
incl
add
add
add
lcall
add
sarb
pop
mov
add
ljmp
ja
je
add
loop
ret
add
ljmp
add
lahf
jecxz
add
popf
mov
add
test
call
movb
mov
sub
mov
push
call
je
movb
add
add
push
pop
add
mov
xchg
mov
bound
xchg
xchg
mov
add
roll
jb
lcall
xchg
cwtl
incl
add
sahf
add
loop
pusha
ljmp
add
jb
add
add
data16
sahf
lret
jmp
movsb
add
pop
arpl
add
mov
sub
sub
push
call
mov
std
imul
jmp
jmp
movsl
incl
add
add
add
push
sahf
add
jl
incl
add
clc
xchg
jb
jmp
push
incb
ja
cmpsl
insb
sar
add
shlb
xchg
fildl
lods
fcoml
xchg
add
add
add
push
cli
addr16
add
add
incl
decl
leave
je
mov
sub
push
call
jno
add
lahf
jbe
jne
add
lcall
jl
add
add
fistps
add
in
aam
add
mov
lahf
xchg
mov
mov
popf
testb
incl
xlat
sbb
pop
outsl
mov
xchg
ja
add
add
add
add
adc
add
imul
mov
pushf
add
incl
push
add
fstpl
aam
cld
mov
sub
mov
add
add
push
call
stos
add
jmp
incl
add
mov
add
aam
data16
incl
mov
lock
aam
add
ja
incl
mov
xchg
add
sub
mov
fwait
add
xchg
push
add
ljmp
add
into
add
xlat
xchg
call
mov
add
hlt
rcrl
ljmp
cltd
add
shlb
fiaddl
mov
call
pushf
pop
incl
xlat
jmp
clc
call
mov
inc
add
jbe
add
add
leave
jp
int3
cmpsb
add
incl
add
add
je
fcom
jb
mov
mov
add
mov
push
jo
jne
xlat
gs
fiadds
mov
xchg
incl
add
decl
jle
pop
out
add
arpl
add
mov
arpl
call
add
xchg
lcall
add
incl
call
push
call
out
out
push
data16
cld
add
add
loop
stos
incl
fldl
add
call
incl
add
lcall
jmp
add
dec
jb
push
push
add
push
leave
mov
mov
imul
xchg
nop
add
pusha
lea
into
add
add
incl
lcall
pop
call
call
incl
hlt
gs
jmp
jl
pushl
mov
mov
imul
add
test
imul
lock
aad
jmp
movsl
incl
xchg
stos
cli
aad
push
incl
repnz
insb
mov
add
fstpl
faddl
add
clc
push
push
add
lea
push
xor
add
shr
sub
lea
pop
xor
shl
inc
pop
push
call
imul
test
in
add
in
ljmp
dec
pop
test
ljmp
add
clc
jae
bound
add
mov
mov
lcall
add
mov
add
push
xchg
call
add
int3
icebp
add
pop
stos
add
mov
lret
add
pop
mov
push
call
cmc
mov
add
push
xchg
push
rcrl
cmpsl
subl
mov
lods
lds
cmc
jns
loop
sar
inc
jecxz
add
incl
add
je
lock
data16
pushf
add
cmc
icebp
add
out
in
jnp
idivl
scas
fwait
test
add
xchg
jnp
mov
into
loop
lcall
int
iret
call
incl
decl
and
jmp
push
call
add
mov
mov
add
mov
incl
add
add
add
cmpsl
add
add
add
add
incl
add
stos
add
dec
xchg
xchg
shll
add
add
mov
out
add
mov
jl
add
decl
push
mov
add
push
pusha
clc
push
icebp
add
jmp
stc
jbe
add
jmp
add
mov
sub
push
push
call
ljmp
aam
loope
cli
jmp
add
out
mov
add
call
loop
in
add
push
add
mov
xchg
call
nop
in
mov
jl
add
lcall
lcall
jle
mov
add
push
add
add
testl
add
add
add
pushl
cltd
faddp
cwtl
mov
sub
mov
push
push
call
push
add
xchg
lock
shl
fwait
out
mov
jno
loop
ja
push
push
incl
pop
test
add
xlat
xchg
add
stos
ljmp
pushl
add
into
add
add
xchg
pushf
mov
incl
ficompl
add
frstor
mov
movsl
mov
decl
push
push
push
push
call
filds
push
add
xchg
mov
push
nop
in
add
lcall
scas
js
lcall
movb
add
call
push
ficoms
incl
push
add
lds
inc
lea
add
lahf
mov
call
je
mov
incl
mov
sub
mov
push
call
mov
add
ljmp
jae
jecxz
add
je
jmp
mov
lcall
mov
lods
add
cltd
out
add
add
loopne
push
mov
cmpl
mov
shlb
call
jl
xchg
stos
xchg
add
fs
sub
mov
mov
mov
push
call
push
lcall
out
mov
ja
lahf
add
mov
add
mov
add
add
stc
pushl
pushf
push
sahf
add
add
mov
dec
add
add
jmp
push
add
mov
ret
incl
add
fsubs
pop
add
out
decl
clc
decl
inc
add
jle
add
lret
dec
imul
lcall
add
add
jecxz
xchg
mov
mov
add
pushf
add
add
lret
shll
add
xchg
mov
pop
add
push
add
add
mov
add
mov
addb
in
add
mov
lods
mov
add
push
pop
into
add
frndint
add
jmp
call
add
decl
incl
dec
push
call
jbe
mov
add
add
testb
loopne
add
add
mov
pushl
mov
add
insb
incl
addb
loope
push
xlat
incl
mov
into
mov
add
add
add
jle
pop
out
jnp
push
jmp
fldt
mov
sub
cmpb
jne
push
call
jmp
lret
add
divb
add
cmpsb
incl
pushf
jge
jnp
jmp
cwtl
push
mov
xchg
add
fldl
add
mov
add
add
add
mov
cmc
jmp
lret
incl
icebp
add
pushl
pop
fldl
add
enter
add
jl
mov
sub
call
push
call
cmpsb
push
jle
imul
mov
je
mov
loope
xlat
test
add
scas
add
add
dec
pushl
aam
add
mov
add
incl
in
iret
fucomp
sar
decl
incl
loop
add
enter
stos
test
add
jmp
pop
pusha
sahf
mov
add
jmp
test
ljmp
sub
add
push
call
test
jmp
leave
add
xchg
mov
in
add
incl
add
mov
rorl
pop
aam
add
add
pushl
in
scas
add
xchg
add
incl
lds
xchg
add
add
in
add
mov
mov
out
add
xchg
add
mov
add
jle
push
add
jmp
push
call
push
mov
mov
incl
mov
add
in
fdivrp
incl
add
inc
mov
addl
xchg
mov
add
jmp
ljmp
enter
xchg
mov
add
dec
add
cld
add
movsl
movl
mov
insb
jecxz
mov
mov
add
fs
lea
scas
clc
loope
incb
mov
push
adcb
add
test
mov
mov
sub
cmpb
jne
call
push
call
repnz
add
popf
jae
add
incl
add
push
pusha
add
roll
mov
add
sarb
fistps
add
add
ljmp
add
lret
in
add
pop
add
ljmp
ja
jecxz
mov
add
hlt
push
incl
rorl
add
incl
add
add
mov
sub
add
push
call
pop
aad
call
add
hlt
add
ror
lock
xlat
mov
add
sarb
lret
mov
add
push
add
les
ljmp
add
push
incl
lods
push
mov
jae
push
cli
pusha
out
add
arpl
into
add
clc
push
cmpsb
add
outsl
push
mov
imul
jns
decl
sub
jmp
push
call
pop
lods
add
jmp
add
les
imul
xlat
pushl
add
incl
cmpsb
xlat
rcll
add
add
add
jmp
mov
add
add
lcall
fdivrp
jae
add
incl
cmpsb
xchg
fcom
add
add
std
add
jb
add
mov
sub
cmpb
jne
push
call
shlb
decl
mov
enter
add
rolb
add
insb
mov
hlt
incl
mov
loopne
mov
add
mov
xchg
imul
pop
incl
popf
clc
dec
je
fldl
xchg
lds
cmpsl
mov
gs
lods
add
js
add
incl
or
add
call
add
not
pop
lea
stc
mov
dec
xchg
add
andb
lcall
loope
add
push
jbe
add
add
add
inc
ficomps
incl
shlb
std
add
add
add
sahf
test
mov
incl
incl
push
inc
add
jl
add
mov
add
jbe
test
add
xchg
add
test
popf
add
incl
lahf
adcl
add
mov
add
mov
ficomps
add
incl
fildl
lcall
pop
pop
add
add
fdivr
incl
jb
add
push
add
stos
ja
add
loope
incl
pushf
std
je
stos
jns
decl
jmp
cmpb
jb
push
call
cmpsl
add
icebp
add
mov
pop
mov
mov
loopne
test
fs
jnp
add
mov
call
xchg
xchg
aam
mov
lock
lcall
add
popa
add
call
add
add
add
add
fs
add
add
lcall
mov
sub
cmpb
ja
call
add
push
call
sti
push
mov
push
jmp
incl
pop
add
mov
add
add
outsl
add
xchg
mov
mov
lods
add
pushl
xchg
int3
mov
addl
mov
push
fiaddl
in
in
incl
add
mov
loopne
jo
jge
incl
scas
cmpsb
jp
add
add
add
add
jmp
push
call
mov
mov
add
add
dec
add
in
jl
add
xchg
push
xchg
push
add
xchg
loope
mov
pushf
pop
incl
addr16
add
leave
sti
push
cld
aam
push
fildl
cwtl
std
jmp
sti
add
cmc
ljmp
jmp
lcall
add
stos
movsl
dec
addb
add
clc
incl
mov
call
jno
add
jno
add
jmp
cmpsb
lahf
icebp
enter
incl
add
cmc
movsb
push
mov
incl
add
mov
lods
mov
cmpsb
gs
mov
in
incl
incl
imul
jnp
add
jo
mov
enter
fnstsw
add
jo
add
add
add
lcall
incl
jmp
add
call
add
push
call
incl
mov
pushf
test
jle
xchg
je
stos
pop
add
add
add
jmp
jmp
jb
pop
scas
leave
cmpsb
les
shrb
jmp
incl
out
icebp
mov
jmp
add
push
imul
push
stos
ljmp
add
add
out
fcmovbe
add
mov
popa
loopne
incl
ficomps
add
lods
mov
sub
jmp
push
call
jno
movsb
std
add
addb
add
xchg
repnz
add
incl
call
mov
pushf
stos
xchg
add
add
fsubrs
add
jns
xchg
rcrb
add
add
jp
xchg
cmp
pushl
mov
addr16
test
incl
push
jmp
lret
mov
sub
cmpb
jne
push
call
mov
xchg
fdivr
mov
incl
push
mov
jle
add
add
add
incl
hlt
popa
incl
lea
mov
mov
add
add
push
mov
out
mov
add
lret
add
add
call
faddl
add
popa
cmpsl
mov
add
mov
add
test
mov
sub
call
push
call
mov
test
incl
popa
add
movl
in
add
add
incl
xchg
add
mov
call
clc
add
incl
push
out
rolb
lock
push
mov
movsl
insb
mov
mov
call
lahf
add
jns
add
add
mov
jne
in
incl
mov
sub
add
jmp
mov
push
call
jmp
add
imul
in
add
add
add
test
popa
insb
add
in
lahf
add
add
mov
js
add
sti
add
xchg
cltd
aam
cmpsb
pop
js
pusha
iret
push
jge
stos
aad
out
jle
lods
mov
add
mov
push
add
mov
add
lea
mov
mov
sub
mov
push
call
add
lcall
incl
lea
mov
out
add
mov
addb
in
pop
std
add
push
roll
call
movsb
add
in
out
mov
add
int3
lcall
add
addl
xchg
push
add
incl
in
call
in
add
add
std
inc
out
mov
push
fdivl
push
mov
mov
incl
incl
push
call
add
fiadds
aad
add
into
add
add
loop
mov
stos
mov
iret
add
add
incl
fst
out
add
add
push
shrb
add
jge
roll
jae
add
add
in
push
jo
add
add
gs
cld
imul
nop
test
incl
les
xchg
leave
jl
stc
int
decl
dec
jne
pop
pop
push
call
arpl
int3
add
jp
xchg
add
add
aam
push
scas
incl
add
out
jmp
test
scas
push
add
incl
mov
add
lcall
jecxz
mov
pushf
add
push
xchg
in
addl
enter
pop
stos
add
call
mov
incl
lcall
call
add
add
cld
jmp
lret
add
xchg
mov
addr16
add
call
ljmp
mov
jmp
incl
add
rolb
mov
mov
push
add
add
sahf
cltd
add
add
incl
imul
add
jmp
add
add
mov
push
mov
sub
pop
leave
ret
push
call
lods
add
cmc
add
xchg
xchg
add
add
add
scas
add
lock
add
add
mov
jae
scas
cmpsb
js
mov
add
nop
popl
add
dec
outsl
push
in
cld
add
push
add
loope
add
add
add
mov
add
add
pop
add
jne
incl
sar
incl
push
call
sahf
mov
fisubrs
mov
data16
in
add
fiaddl
enter
mov
add
mov
jae
add
xchg
imull
sti
mov
add
add
jo
lea
lods
out
stos
sti
jp
lret
cli
loop
add
mov
pop
pop
mov
fcomps
iret
mov
add
incl
inc
add
mov
sub
mov
inc
push
call
xchg
cmpsl
xchg
shrb
popf
movsl
add
pop
add
add
jns
jmp
incl
add
add
mov
repnz
clc
jecxz
call
jno
mov
adcl
incl
mov
incl
loope
push
pop
adc
call
add
fdivl
mov
mov
decl
call
lock
add
incl
incl
je
push
call
leave
xchg
js
xchg
add
add
loopne
add
incl
je
add
add
imul
mov
lods
repnz
mov
mov
pushl
addr16
push
mov
addr16
jmp
add
add
fsub
mov
andb
pop
add
mov
ret
push
pusha
mov
lahf
pop
mov
sub
ret
add
jmp
push
call
in
mov
decl
add
dec
insb
add
xchg
add
stc
add
add
pop
fildl
xchg
scas
fdivp
add
stc
lock
xchg
in
in
test
sahf
addb
add
mov
rcll
push
push
add
add
add
mov
out
scas
js
rolb
cwtl
jp
clc
fdivs
add
push
mov
sub
push
push
call
rcll
ljmp
int3
add
incl
mov
int
cmpsl
add
mov
mov
scas
rcrb
std
add
incl
icebp
jbe
out
add
add
ljmp
test
add
call
add
incl
add
aam
in
outsl
mov
jge
int
mov
add
incl
push
call
fists
lea
add
push
push
stc
fcomip
mov
jns
pushl
cmpsb
ret
test
add
pushl
imul
test
pop
loop
lock
pop
lods
incl
add
add
rcll
pop
add
fcos
jmp
idivb
add
imul
jmp
add
call
stc
out
incl
incl
xchg
dec
inc
add
outsb
add
add
mov
in
js
cltd
idivl
lret
call
out
in
add
ljmp
push
add
jne
mov
sahf
call
into
filds
mov
add
xchg
subb
fnstenv
xchg
lods
in
xchg
xchg
push
add
add
out
mov
add
add
lahf
mov
sub
push
mov
push
call
cld
add
jmp
call
mov
add
mov
stc
xchg
mov
repnz
je
mov
add
add
add
lcall
test
lock
stos
fildll
pushf
add
cltd
lcall
mov
add
scas
pop
stos
sbbb
sub
add
push
call
pop
jns
cld
stos
stos
mov
xchg
add
aad
add
or
add
add
scas
movsl
push
mov
int3
jae
incl
cli
jbe
add
sar
incl
jecxz
js
dec
jns
add
add
in
std
add
mov
lea
push
push
xlat
jmp
imul
sahf
add
mov
add
in
clc
mov
push
call
add
loop
mov
lcall
jno
add
movb
add
add
hlt
add
iret
stc
stc
incl
or
add
ljmp
decl
insb
pop
loop
into
push
filds
mov
push
fwait
mov
addb
add
push
add
incl
add
add
movsw
cld
shll
in
clc
and
pop
pop
push
call
mov
jmp
loop
call
cmpsb
out
push
imul
int
add
pushl
add
fiadds
incl
add
call
js
xchg
xchg
add
bound
std
add
std
push
add
out
mov
jo
incl
mov
loop
xchg
jbe
push
pop
outsl
loop
call
incl
mov
cmpsb
push
mov
sub
leave
push
call
lock
gs
add
mov
arpl
add
cli
jbe
add
jmp
imul
je
nop
test
incl
fistpl
add
idiv
jmp
scas
pop
fidivrs
sti
add
pop
push
not
rcr
incl
mov
mov
divb
mov
in
fldl
add
add
fisubl
xchg
mov
incl
inc
add
push
push
call
dec
fidivrs
pop
jns
mov
ret
fisubl
add
push
test
add
incl
iret
pushl
mov
add
add
adc
mov
fiadds
add
add
add
jl
jle
mov
fsts
call
add
pop
test
repnz
clc
add
scas
push
add
fld
jno
incl
push
call
add
push
loop
stos
add
mov
sti
cmc
filds
nop
arpl
add
cltd
mov
fcoml
add
add
call
int3
bound
add
add
clc
add
pop
mov
add
mov
jae
push
pop
add
incl
add
xchg
add
out
mov
add
cmpsb
cltd
call
add
clc
push
push
call
jae
jns
jmp
add
orl
outsl
scas
in
out
push
mov
movl
add
pop
int
incl
adcb
lods
add
mov
test
rclb
lock
pop
pop
add
add
test
jns
add
aad
jae
mov
sub
push
push
call
add
push
add
shrl
lea
pushl
incl
mov
add
add
mov
add
dec
add
data16
mov
add
jno
shrb
add
decl
ja
sahf
movsl
add
hlt
add
test
add
movsl
add
pop
add
add
jge
mov
incl
std
xchg
add
pop
insb
addr16
add
push
push
call
xchg
push
add
xchg
mov
add
pop
fsubrl
add
mov
add
push
jmp
mov
jno
mov
ret
jl
movsl
lret
add
add
pushl
mov
add
enter
push
xchg
add
add
inc
mov
add
add
lahf
popa
lcall
popf
add
mov
fsubl
jo
add
add
pop
mov
sub
push
push
call
add
jmp
add
mov
push
pushl
ja
add
test
add
in
add
aad
loopne
ret
clc
stc
iret
jge
jl
sbbb
incl
out
mov
incl
roll
cmc
pusha
aam
std
int
add
lahf
add
jno
pusha
add
fs
roll
mov
add
add
popa
add
fmull
mov
mov
and
push
call
insb
inc
add
into
add
lcall
mov
ljmp
jle
push
add
pop
out
mov
xchg
imul
mov
jae
mov
imul
movsb
add
enter
add
add
ret
call
xlat
mov
pop
decl
mov
push
call
add
out
push
jnp
int3
aam
mov
out
push
jmp
add
mov
fucomp
popa
test
fdivr
add
les
call
pop
out
mov
pop
in
incl
cmc
lods
clc
push
add
push
jae
stos
sar
add
pop
xchg
out
imul
inc
add
ret
xchg
movb
jmp
mov
add
jne
filds
add
jno
movsl
bound
cmp
push
call
sbb
add
mov
jns
lret
out
insb
add
add
int
pushl
enter
mov
xchg
ljmp
mov
push
add
test
push
int3
cmp
cli
add
add
add
imul
in
add
out
add
iret
add
ljmp
add
loope
xchg
add
movsl
mov
decl
incl
pop
add
dec
jne
push
call
mov
add
xchg
add
ljmp
pop
leave
mov
add
add
call
add
imul
xchg
add
jl
add
push
add
fiadds
nop
jns
cld
add
xchg
jl
add
scas
stc
data16
jnp
add
cmpsl
mov
lahf
add
add
add
out
add
lcall
lahf
jle
add
loopne
incl
lcall
outsb
call
add
incl
jmp
add
scas
add
out
into
jbe
fistpll
ljmp
popf
popf
add
mov
ljmp
inc
add
imul
outsl
add
add
add
test
add
out
mov
add
hlt
add
cmp
mov
sub
pop
pop
push
call
mov
mov
repnz
push
add
mov
push
lods
add
aam
insb
jno
ljmp
xchg
lods
add
add
add
cwtl
add
loopne
test
outsl
push
mov
dec
add
add
add
incl
add
add
call
add
adc
mov
iret
push
incl
ret
push
call
xchg
test
add
mov
pop
push
scas
jne
gs
sahf
add
data16
add
add
incb
lods
incl
cwtl
add
incl
cmpb
clc
test
add
test
lahf
fs
mov
pop
push
rcll
gs
fwait
into
hlt
pop
incl
clc
ljmp
call
sti
bound
add
add
decl
add
sar
lret
add
add
stos
xchg
roll
mov
sub
push
push
inc
rol
pop
mov
add
push
push
call
call
mov
incl
ret
hlt
add
mov
add
add
mov
push
decl
add
add
sahf
incl
in
into
cld
push
sti
jecxz
add
lcall
xchg
push
xchg
test
out
lock
loope
fs
cmpsb
mov
add
pop
xchg
add
mov
lea
decl
call
js
jge
add
xor
nop
add
lahf
shrb
push
add
adcl
jnp
clc
mov
pusha
mov
nop
mov
add
mov
add
cli
add
add
mov
gs
aam
aad
rcl
mov
add
pop
add
stc
flds
imul
in
lahf
add
call
jmp
cld
add
push
fimuls
pop
pop
ja
mov
sub
push
push
call
mov
incb
addb
test
jl
add
lret
stos
pop
shr
add
add
add
pop
jne
mov
incl
pop
pop
sahf
add
sti
cmp
call
out
je
mov
xchg
out
stc
push
mov
add
jmp
ficoml
add
add
mov
call
add
add
decl
push
mov
pop
push
not
pop
pop
pop
pop
push
add
add
pop
leave
ret
push
push
shl
add
pop
mov
add
push
push
call
fildl
add
loope
lcall
mov
fwait
xlat
fiadds
mov
sahf
add
add
orl
int3
test
xchg
add
pop
lret
jle
divb
add
call
add
add
pushl
mov
xchg
add
lcall
add
jmp
roll
add
in
mov
clc
call
push
push
add
sub
pop
movl
push
dec
ror
pop
addl
push
call
rcrb
movsb
iret
andl
add
bound
add
addb
add
add
js
add
mov
cmc
dec
add
mov
sarl
roll
add
pushf
je
add
rolb
add
lcall
incl
add
scas
add
fdivl
hlt
dec
add
pushl
fadd
shrl
add
nop
add
fiadds
sub
test
je
push
shl
add
pop
mov
pop
pop
push
call
mov
movsl
add
jmp
rol
test
shlb
filds
movsl
pop
mov
fstpt
add
fidivrs
test
sar
call
xor
rol
out
jp
leave
stos
add
ret
fnstsw
mov
scas
lods
jbe
fs
add
add
in
clc
lcall
leave
push
shl
shr
sub
add
pop
ret
push
push
xor
sub
shr
xor
pop
mov
push
rol
pop
add
push
push
call
mov
pushl
jo
mov
add
cmpsb
lcall
cmpsb
push
pushl
add
decl
add
add
add
incl
into
movsb
loopne
std
xchg
pop
sahf
xchg
add
je
dec
add
lods
mov
xchg
mov
test
jge
call
cld
mov
imul
jne
mov
add
call
push
call
aad
jl
xchg
mov
add
lahf
mov
pop
aam
add
add
call
bound
fstpt
jecxz
jmp
incl
pushl
add
add
jmp
mov
cmpsl
mov
outsl
pop
rclb
mov
imulb
negl
add
xchg
add
std
add
mov
mov
sub
push
push
call
call
jns
jb
xchg
call
add
mov
imulb
jbe
push
rolb
add
add
add
enter
pushf
add
jns
ja
add
pop
jmp
repnz
mov
add
data16
mov
loop
lea
decl
testl
addl
push
xor
sub
pop
push
call
mov
push
rol
not
pop
pushl
push
call
incl
shrb
incl
ljmp
into
pop
roll
jb
movsb
addl
incl
leave
add
mov
jb
add
add
jno
add
jno
fists
add
jnp
stc
stc
cli
push
xchg
mov
add
incl
mov
incl
add
ret
jmp
add
push
add
incl
mov
sub
push
push
shl
sub
pop
push
call
push
lea
pop
cmpl
jne
pop
pop
push
call
enter
jnp
jne
mov
movsb
add
decl
add
inc
movsb
popf
pop
mov
inc
in
xchg
leave
test
mov
gs
lahf
mov
mov
add
add
js
add
scas
popf
add
sti
cmpsb
add
add
pop
add
nop
add
add
jl
mov
sub
pop
push
dec
sub
pop
pop
push
call
mov
jge
cltd
jae
xchg
mov
lret
pushl
add
mov
js
popa
add
imulb
bound
jns
incl
fistpl
mov
sbbl
mov
filds
mov
fs
in
fadd
add
test
popa
gs
in
clc
leave
ret
push
call
in
popl
addr16
add
test
les
test
pop
add
incl
add
add
test
out
arpl
jnp
lcall
add
loop
aam
mov
add
xchg
xchg
andl
incl
mov
ljmp
mov
sub
push
mov
add
push
call
std
mov
jecxz
movsl
loop
push
ja
push
lcall
out
out
add
add
add
pushf
test
incb
je
add
add
int3
shrl
mov
push
xchg
lahf
ret
decl
cld
add
add
add
mov
add
decl
clc
call
push
call
jns
add
add
icebp
loopne
add
fstps
add
insb
lcall
add
cld
lds
aam
push
mov
ja
shrb
mov
cmc
add
imul
je
add
insb
incl
stos
push
stos
sarb
add
pop
add
loop
add
jne
jns
shl
rorb
iret
movl
add
in
clc
push
push
movl
push
call
add
add
lods
jae
jb
in
addr16
js
xchg
add
incl
add
add
mov
std
add
add
add
decl
popf
mov
shr
scas
mov
test
lcall
push
add
lret
incl
cli
enter
loop
jle
mov
out
arpl
cmp
in
jns
insb
jae
add
decl
push
call
push
lea
ror
inc
pop
push
call
push
call
call
incl
add
add
aam
incl
add
add
add
add
inc
cld
les
imulb
push
adcb
rolb
decl
incl
pop
mov
pushl
add
popf
into
out
lods
testb
pop
ljmp
js
arpl
add
mov
add
add
insb
jno
mov
cmpsl
add
subl
cmpl
jne
pop
push
add
pop
pop
push
inc
xor
pop
pop
push
add
shl
pop
pop
leave
push
xor
not
not
pop
ret
push
add
pop
push
mov
push
dec
pop
add
push
call
jo
push
add
add
add
stos
add
pushl
popf
add
pop
imul
movsb
add
add
mov
hlt
jmp
add
add
add
jnp
mov
add
add
cmc
xchg
add
filds
insb
pushl
add
mov
bound
scas
ljmp
add
decl
call
shr
rol
sub
pop
push
push
push
push
sub
pop
mov
push
call
movl
pop
ljmp
les
incl
incl
out
add
jmp
stos
insb
roll
add
incl
pop
jne
call
mov
sti
into
in
mull
arpl
mov
enter
incl
add
mov
orb
sub
lea
sub
mov
push
xor
add
inc
pop
shr
add
mov
push
rol
pop
mov
sub
jne
push
call
add
scas
pop
cmpsl
lock
lock
add
incl
push
add
add
lret
les
icebp
mov
fninit
add
imul
jp
scas
in
add
mov
push
jb
xchg
fcos
ljmp
in
lods
out
addr16
lods
loopne
call
lahf
mov
pop
add
lcall
incl
add
clc
mov
movl
jmp
push
call
lods
jmp
add
mov
jmp
call
jmp
add
xchg
in
xlat
sti
mov
xchg
lcall
add
add
movsb
add
jle
mov
add
add
fidivrs
incl
mov
rorl
rclb
xchg
inc
add
mov
lret
add
mov
clc
mov
push
call
loopne
add
add
xchg
shll
mov
call
lcall
add
rolb
lods
popa
add
push
add
mov
mov
inc
jo
mov
add
in
jecxz
popf
mov
fcmovu
jne
add
xchg
cli
add
flds
xchg
mov
add
decl
add
iret
imul
add
test
add
add
sub
call
jb
add
add
imul
add
leave
pushl
pop
test
test
add
fstpt
xchg
test
add
pop
xchg
lds
incl
push
imul
add
jo
int3
lcall
mov
add
inc
add
mov
mov
lds
incl
inc
add
add
add
jb
add
insl
add
add
pushl
fidivrl
pop
rolb
add
incl
add
inc
add
clc
add
test
pusha
add
pushl
incl
in
enter
add
pushl
loopne
add
neg
add
clc
sti
jne
mov
mov
orl
add
push
jge
fildl
movsb
fimull
jmp
mov
push
not
pop
mov
sub
jne
push
call
add
out
jne
lahf
add
decl
addb
bound
add
add
mov
xchg
addl
fs
lcall
mov
add
add
push
mov
add
mov
cmc
inc
icebp
les
mov
lcall
cwtl
imul
push
mov
mov
incl
incl
decl
call
je
pushf
add
shrb
add
jne
in
add
xchg
pop
loope
add
add
mov
cmpsb
mov
pushl
add
incl
add
add
add
mov
incl
incl
add
xlat
dec
je
in
add
into
mov
test
incl
mov
incl
add
loope
add
jmp
imul
decl
movl
push
dec
dec
sub
lea
pop
jmp
push
xor
inc
inc
pop
mov
push
dec
rol
pop
mov
cmp
jne
push
call
out
pop
add
add
fstps
callw
movsb
jns
test
in
imul
test
mov
add
lcall
in
iret
jo
fcompl
lcall
int3
mov
mov
arpl
pop
sti
add
add
in
xchg
mov
add
lcall
sub
mov
push
inc
pop
movl
push
xor
sub
pop
jmp
mov
push
call
out
out
hlt
adc
add
out
xchg
add
call
mov
popf
lods
mov
sbb
gs
ljmp
mov
stc
add
add
mov
jmp
imul
shll
jl
ljmp
incl
test
mov
pusha
fwait
jp
call
add
push
jge
insb
add
cmpw
jne
mov
movl
push
call
sti
add
add
add
pop
pop
add
push
jge
idiv
pushl
lcall
mov
repnz
mov
out
xchg
add
incl
out
jo
js
xchg
jae
incl
add
cmp
incl
cmc
mov
pushf
mov
add
test
jp
test
enter
idiv
decl
jmp
pushl
push
add
pop
pop
mov
push
call
add
cli
add
out
sti
add
push
add
push
scas
out
out
lods
push
add
incl
rcr
add
incl
add
add
add
cld
mov
addr16
xlat
add
add
fdivl
outsl
pop
repnz
add
lds
mov
jbe
add
add
mov
in
clc
decl
pop
mov
push
ror
lea
ror
pop
push
push
xor
sub
not
push
push
pop
add
sub
add
pop
shl
add
shl
pop
push
call
add
movb
mov
pop
lcall
add
bound
imul
pop
jecxz
add
add
mov
incl
add
lahf
add
repnz
mov
loope
incl
add
dec
cwtl
add
add
add
incl
push
add
add
mov
add
bnd
out
add
mov
clc
call
clc
inc
add
cmpl
je
push
add
pop
push
push
lea
push
or
inc
add
not
shl
not
xor
sub
add
shl
pop
pop
push
call
cmc
nop
mov
add
rcrb
add
incl
jbe
aam
xchg
add
mov
add
incl
xchg
xchg
add
add
add
incl
incl
scas
add
fstps
mov
rolb
out
xchg
enter
lcall
mov
lret
add
add
roll
add
int3
cld
jns
movsb
mov
sub
push
push
pop
call
cmpl
je
push
shr
inc
pop
push
push
xor
rol
inc
shr
push
and
add
sub
sub
shr
dec
pop
pop
push
call
add
add
add
push
pusha
xchg
into
shl
xchg
bound
inc
add
js
mov
addl
andb
jmp
cmpsb
movb
lcall
add
add
mov
pop
add
outsl
test
sbbl
jmp
xchg
lahf
out
pushl
call
add
add
rorl
call
addb
push
ror
shl
add
pop
cmpl
je
push
push
inc
shr
push
sub
add
dec
sub
sub
sub
ror
pop
sub
add
ror
pop
push
call
jmp
movsl
addl
pusha
xchg
incl
in
andb
icebp
lcall
incl
add
lds
add
out
xchg
cltd
add
add
mov
faddp
cmpsb
mov
addb
int
call
mov
xor
ljmp
add
add
push
add
popf
add
incl
call
mov
jnp
add
add
incl
push
lea
int3
add
add
imul
mov
mov
pushl
incl
add
add
pushl
aad
cwtl
loopne
int
call
incl
out
add
je
xchg
add
in
sti
add
add
test
gs
stos
fimuls
add
add
fldt
jmp
hlt
rcrb
in
clc
call
cmpl
je
push
add
shr
pop
push
push
dec
not
inc
push
or
inc
add
add
sub
not
inc
sub
pop
ror
shl
pop
push
call
push
dec
not
lea
pop
cmpl
je
push
push
xor
push
sub
add
sub
lea
not
shr
sub
sub
sub
pop
lea
pop
push
call
jae
nop
loope
add
add
push
mov
incl
out
add
mov
in
gs
out
add
fadd
add
cwtl
add
sbbl
mov
pop
fadds
ljmp
add
pusha
add
pusha
xchg
add
icebp
cmpsb
scas
ja
les
add
decl
stos
mov
add
pop
jo
dec
add
call
inc
pop
call
cmpl
je
push
shr
sub
pop
push
push
lea
push
and
add
dec
xor
sub
add
sub
add
pop
sub
sub
pop
push
push
call
add
into
fwait
add
pop
fiadds
data16
in
cwtl
mov
int
imul
call
loop
mov
jae
imul
push
jmp
mov
movl
add
ret
cmpsl
jns
add
fildl
mov
xchg
jns
data16
add
imul
mov
bound
sarl
mov
clc
call
push
call
jne
out
jmp
loope
cwtl
add
jbe
push
ljmp
out
add
lods
add
mov
call
mov
push
add
mov
add
out
aad
jmp
add
add
mov
mov
add
xchg
ljmp
add
add
add
cwtl
xlat
add
add
cmpl
je
push
push
sub
lea
push
and
add
rol
sub
lea
pop
lea
pop
push
xor
pop
push
push
lea
add
shl
ror
pop
call
push
sub
dec
inc
pop
cmpl
je
push
dec
pop
push
push
not
ror
dec
push
xor
add
sub
sub
sub
xor
dec
xor
pop
shr
dec
pop
push
lea
lea
pop
push
push
ror
dec
pop
call
push
not
pop
cmpl
je
push
push
add
add
add
push
or
inc
add
rol
sub
rol
pop
rol
rol
inc
pop
push
push
call
mov
incl
filds
add
lea
add
mov
add
incl
loopne
mov
add
pop
add
incl
pop
int3
add
add
mov
idiv
incl
mov
test
insb
loopne
add
mov
stos
ja
push
incl
ja
scas
lcall
mov
mov
sub
call
push
call
movb
add
pop
lds
mov
mov
mov
pushl
pop
rolb
cltd
add
lea
incl
lods
add
mov
ret
add
jle
cmc
loopne
pop
arpl
incl
test
mov
inc
add
or
add
add
stos
add
mov
decl
cmpl
je
push
push
dec
sub
ror
push
or
not
add
add
dec
xor
sub
sub
pop
add
add
add
pop
push
rol
xor
ror
sub
pop
push
push
call
jp
add
add
lock
fadds
testl
add
movsl
add
cmc
mov
fldl
mov
xchg
movsb
add
fadds
incl
mov
lahf
rcl
add
pop
mov
ljmp
add
mov
jno
stos
addl
incl
loop
incl
incl
fldl
incl
decl
sub
call
push
call
add
ljmp
incl
cwtl
xchg
xchg
ret
fsubl
fadd
jae
push
push
add
incl
add
add
add
pushl
push
mov
add
xlat
add
imul
call
xchg
add
add
jmp
pushf
mov
in
jmp
test
mov
fildl
mov
sub
cmpl
je
push
call
fsubs
push
sti
cwtl
add
add
add
xchg
loope
call
frstor
imul
jnp
add
jp
out
les
negb
mov
add
incl
add
pushl
imul
push
divb
mov
iret
roll
add
add
add
add
out
ljmp
sub
push
push
not
lea
sub
push
or
inc
add
inc
sub
sub
add
pop
dec
pop
push
shr
pop
push
call
cmpl
je
push
call
out
aam
aam
mov
fucomi
pop
sbb
je
pop
mov
add
call
lcall
incl
jmp
add
arpl
in
popa
add
xchg
incl
add
mov
add
add
aam
call
fcmove
ret
pushl
movsb
int
add
add
ljmp
incl
ljmp
sbb
shr
add
push
sub
add
shr
not
add
sub
not
pop
sub
ror
pop
push
inc
ror
pop
push
push
sub
pop
call
cmpl
je
push
shl
sub
pop
push
push
push
xor
add
rol
sub
add
pop
xor
sub
dec
pop
push
call
push
rol
pop
cmpl
je
push
push
add
sub
shl
xor
push
push
pop
add
sub
sub
pop
sub
shl
pop
push
call
mov
js
pusha
pushl
mov
je
add
mov
aad
mov
add
add
add
add
stos
xchg
fidivl
mov
adc
add
call
pop
incl
pop
cmc
arpl
ja
add
jmp
pushf
add
add
arpl
xchg
add
rolb
xchg
ret
sub
push
call
cmpl
je
push
ror
pop
push
push
not
not
push
or
inc
add
sub
add
sub
lea
lea
pop
ror
ror
pop
push
shr
pop
push
call
push
call
jmp
ljmp
incl
push
into
and
ljmp
mov
rolb
mov
lret
jmp
mov
incl
jno
mov
lcall
out
rolb
call
fwait
pop
add
add
pushf
mov
add
sti
mov
sub
cmpl
je
push
push
rol
push
push
pop
add
sub
sub
inc
rol
pop
shl
rol
not
pop
push
shl
pop
push
call
push
call
push
add
jo
in
mov
pop
test
lods
movsb
ja
cmpsl
scas
add
int3
add
mov
add
flds
add
push
xchg
bound
add
add
test
jmp
jge
add
add
add
nop
loopne
xlat
movsb
mov
incl
out
push
scas
push
add
jnp
sahf
int3
jae
push
add
repnz
push
add
incl
add
test
or
add
jo
lea
inc
pop
push
push
inc
push
or
inc
add
inc
lea
shr
sub
add
pop
add
sub
lea
pop
push
call
jno
incl
add
fdivrl
cwtl
call
cmpsl
add
add
add
loop
pusha
xchg
shlb
decl
jne
add
add
cmc
loope
push
add
sahf
add
xchg
scas
in
xchg
inc
add
jmp
decl
incl
add
incl
faddl
add
call
std
cmp
add
or
test
add
push
xor
lea
pop
push
push
rol
add
add
add
push
sub
add
dec
sub
rol
rol
pop
shr
pop
push
call
push
call
shll
mov
pop
cmpsb
mov
mov
loop
xchg
fwait
imul
add
in
fdivl
add
incl
fsts
lcall
filds
call
mov
incl
xchg
add
pop
add
out
jmp
add
add
incl
gs
cli
mov
int3
xchg
lahf
arpl
add
xchg
movsb
insb
decl
cmpl
je
push
push
sub
xor
push
sub
add
sub
inc
inc
sub
dec
rol
pop
ror
shr
pop
push
call
xchg
movsb
add
mov
lcall
hlt
lahf
out
lcall
aad
mov
test
add
jo
mov
mov
add
test
incl
dec
add
fnstenv
jo
icebp
xchg
pop
jno
mov
cmc
shrl
incl
out
mov
sub
push
push
shr
inc
pop
call
push
call
subb
jge
pushl
fadds
pusha
xchg
add
jl
jbe
fsubrp
out
mov
into
cwtl
out
add
add
add
fdivr
incl
out
add
cmc
add
ja
add
call
mov
add
add
outsl
add
mov
in
in
rorb
push
clc
in
add
cmpl
je
push
push
shr
sub
push
xor
add
shl
add
sub
sub
dec
pop
not
rol
pop
push
push
dec
pop
call
cmpl
je
push
push
xor
shr
sub
push
sub
add
add
lea
ror
sub
pop
rol
pop
push
call
pop
push
mov
add
pushl
mov
xchg
add
scas
out
out
fldl
gs
outsl
add
pop
add
incl
add
add
add
add
outsl
jmp
add
push
jecxz
pusha
add
sbbl
add
sub
push
push
xor
shr
sub
pop
call
push
not
ror
not
add
pop
cmpl
je
push
push
add
sub
shr
rol
push
xor
add
add
sub
add
pop
xor
xor
shl
pop
push
call
add
fsubrp
xlat
fwait
mov
mov
jl
add
test
lcall
add
jno
add
mov
addr16
add
roll
mov
cli
fwait
add
add
mov
jns
idiv
jmp
jmp
stos
jnp
add
int3
fadds
cltd
in
filds
add
mov
add
pop
popf
add
incl
push
add
in
clc
push
call
push
call
add
pusha
arpl
add
add
add
std
add
jl
push
ret
lock
mov
loop
movsb
incl
stc
inc
call
inc
xchg
add
mov
mov
in
xchg
lcall
mov
call
mov
sub
cmpl
je
push
push
sub
ror
lea
push
or
not
add
rol
shl
add
sub
sub
xor
pop
ror
add
pop
push
push
add
shr
pop
call
cmpl
je
push
push
shr
shl
not
sub
push
or
not
add
sub
shr
sub
sub
sub
inc
pop
inc
pop
push
lea
pop
push
push
call
xchg
jne
xchg
add
jmp
jecxz
add
mov
ljmp
pop
add
lret
mov
add
loop
xchg
incl
in
ja
add
out
pop
call
fstps
ljmp
mov
ja
incl
add
iret
add
add
jl
incl
xor
add
add
add
jmp
add
outsl
add
lods
add
add
add
sub
call
call
xlat
add
mov
mov
pop
add
push
push
lea
loop
jle
lcall
fcmovb
push
mov
xchg
xchg
mov
mov
pusha
add
xchg
push
in
add
incl
incl
pop
ret
xchg
add
add
aad
pop
push
push
push
pop
add
ror
shl
add
sub
lea
add
inc
ror
pop
pop
push
call
mov
std
incl
add
add
add
out
xchg
pop
fstpl
addl
insb
cmpsb
out
lcall
movsb
mov
mov
in
push
in
add
adcl
add
add
push
jmp
movsl
cld
iret
add
pop
add
add
add
roll
jge
add
push
call
cmpl
je
push
call
popa
fimuls
mov
fisubs
lods
mov
add
add
fmul
cwtl
cwtl
add
mov
dec
push
add
mov
add
jl
subl
add
add
push
add
add
cwtl
rolb
add
add
add
icebp
hlt
add
push
xchg
mov
jae
mov
add
mov
clc
ljmp
and
ret
sub
push
xor
add
lea
sub
dec
shl
inc
pop
sub
rol
pop
push
call
push
inc
lea
sub
lea
pop
cmpl
jne
mov
push
call
add
pop
add
roll
pop
add
pushl
add
cmpsb
jecxz
add
imul
add
mov
sti
xchg
add
fbstp
add
in
add
sti
test
clc
push
add
pop
int3
ljmp
gs
add
add
add
mov
shrl
add
mov
mov
sub
movl
push
call
add
gs
mov
mov
add
add
clc
mov
pushl
sar
fcmovu
add
push
add
add
add
lcall
stos
js
in
add
mov
xchg
mov
add
cmp
pushl
add
cld
mov
add
xchg
jae
add
sub
jmp
xor
pop
push
dec
shl
dec
inc
pop
pop
pop
push
lea
sub
pop
pop
leave
ret
push
call
in
out
xchg
incl
idiv
add
add
data16
jne
add
incl
mov
fnstenv
push
add
call
add
add
fistpl
fs
incl
push
add
lcall
add
lcall
call
add
add
fistpll
decl
call
lea
pop
mov
push
call
add
clc
insb
fadds
imul
add
loop
ficoms
test
lahf
xchg
incl
stos
inc
testl
lock
sahf
push
shr
mov
pop
add
add
enter
incl
lea
movsl
pop
add
shrb
add
add
add
out
cltd
mov
jb
add
add
add
jmp
add
jo
movb
jb
ljmp
incl
or
jne
push
call
incl
lahf
add
pushl
mov
dec
xchg
scas
mov
add
or
decl
js
push
jmp
add
mov
add
mov
test
xlat
stos
sahf
add
aad
mov
xchg
lcall
aad
add
add
sub
int3
push
push
rol
lea
shr
push
and
add
rol
sub
shl
pop
ror
not
pop
pushl
push
call
add
add
notb
enter
lahf
sarb
incl
arpl
aam
add
add
test
fdivrp
add
or
roll
add
add
add
mov
add
jnp
ja
imul
mov
mov
add
pusha
add
incl
add
mov
add
ja
aam
out
mov
add
cli
add
xchg
mov
sub
call
push
not
inc
add
rol
pop
push
push
call
je
roll
add
lods
add
push
scas
xchg
add
add
add
pop
mov
test
mov
test
add
add
lcall
add
addl
mov
pop
cmc
pushl
mov
add
js
add
jmp
add
lcall
in
test
add
fimull
call
jmp
push
sub
sub
add
pop
cmpl
jne
push
ret
push
xor
pop
jmp
push
inc
pop
cmpl
je
cmpl
jne
push
call
rcl
mov
jb
mov
lcall
add
add
add
jp
add
pop
popa
lret
nop
incl
xchg
add
add
fldl
add
icebp
lret
out
add
add
add
add
mov
insb
add
js
call
add
jmp
fwait
jnp
push
add
sub
add
pop
add
add
incl
mov
sub
push
push
not
shr
xor
push
or
not
add
inc
sub
dec
shr
inc
pop
sub
inc
lea
not
pop
pushl
push
call
fcomi
add
mov
pushl
push
mov
xchg
add
call
jle
fildll
jae
mov
add
in
mov
fiadds
jmp
movsl
add
fisubs
push
cmpl
xlat
add
imul
xchg
mov
imul
pop
xchg
mov
incl
jbe
notb
mov
sub
call
call
push
call
cwtl
aam
mov
jle
idiv
call
divb
add
bound
mov
jo
add
incl
in
add
mov
add
in
mov
lcall
add
mov
lcall
mov
add
lea
add
incl
cltd
lcall
repnz
decl
ljmp
push
push
call
jmp
add
pop
add
push
movsb
push
ljmp
loop
adcb
add
jmp
add
xchg
ljmp
mov
ja
sar
pushl
jmp
pop
mov
add
push
add
incl
add
pushl
push
pop
call
je
mov
sub
push
push
rol
push
or
inc
add
add
ror
sub
ror
sub
ror
pop
sub
inc
shr
pop
push
call
lds
fadd
add
mov
jmp
popa
jno
jecxz
add
add
xchg
ljmp
xchg
add
incl
incb
add
add
add
mov
add
jmp
push
add
jae
push
rolb
aam
lcall
pushl
call
call
push
shl
pop
leave
add
push
call
add
jp
stos
mov
add
fadds
jnp
mov
jecxz
stos
add
mov
pop
stos
hlt
add
cmpsb
lret
sti
mov
mov
repnz
push
out
pop
fadds
xchg
jle
decl
in
jmp
lcall
sti
lahf
cli
filds
jmp
incl
or
inc
add
jp
add
add
subl
add
push
popf
add
jnp
jns
std
incl
in
add
movsl
rolb
mov
nop
mov
popf
incl
add
lods
insb
mov
fstpt
incl
incl
add
add
test
cmc
add
jns
stc
jbe
roll
add
add
call
push
add
lods
mov
sub
pop
push
call
movsl
stos
mov
add
int3
sti
add
movsl
fcoms
mov
test
test
add
xchg
popf
lds
lret
ret
incl
jo
mov
scas
addl
jmp
cld
jge
addb
movl
test
int
add
mov
mov
fldenv
jle
popl
mov
sub
pop
push
lea
dec
pop
pop
leave
add
push
call
add
cltd
movsl
xchg
add
lods
into
add
arpl
add
add
shrl
out
fwait
mov
add
pushl
jmp
add
add
lea
mov
incl
mov
scas
jmp
in
imul
mov
incl
mov
les
add
jg
add
mov
movsl
xchg
mov
pop
cld
xchg
mov
flds
mov
add
hlt
add
roll
add
push
out
jns
add
repnz
imul
enter
lcall
filds
add
decl
out
pushf
add
mov
inc
roll
ljmp
mov
sti
jecxz
add
mov
sti
decl
decl
incl
test
add
clc
push
sub
sub
push
or
not
add
sub
sub
shl
pop
rol
shr
lea
pop
push
call
jne
add
add
mov
jo
fisubs
push
add
add
test
mov
popl
in
incl
nop
ret
hlt
fbld
mov
add
in
add
je
idiv
incl
fcompl
add
add
pushl
lcall
jmp
lcall
in
clc
pushl
push
dec
sub
sub
sub
pop
call
push
call
rolb
mov
mov
mov
ljmp
add
fidivl
jge
add
add
add
mov
shl
pop
je
jle
mov
add
fildl
clc
add
xchg
add
insb
in
xlat
mov
add
add
je
mov
jmp
cmp
call
pop
repnz
popf
lock
add
xchg
orl
ljmp
call
jmp
push
call
popa
call
je
add
ja
movb
lcall
add
push
lcall
add
mov
inc
mov
pop
lods
lcall
fcmove
jmp
inc
enter
mov
clc
add
mov
mov
add
add
add
pusha
mov
sub
cmpl
jne
push
shr
add
pop
mov
push
call
xchg
in
scas
add
in
mov
out
incl
add
mov
xchg
std
cmpsl
add
rcr
incl
js
push
imul
mov
hlt
icebp
call
xchg
incl
add
pop
lock
jmp
add
in
iret
add
subl
push
sub
mov
ljmp
std
insl
int3
push
xor
push
or
not
add
lea
shl
add
sub
sub
pop
sub
xor
shl
pop
push
call
add
add
add
xchg
mov
mov
pushl
push
ret
scas
nop
jo
movsl
push
xorl
movb
mov
xchg
add
loop
cmc
add
aad
js
ljmp
add
add
movsl
xchg
jbe
lods
int
add
xchg
incl
xchg
mov
movsb
scas
pop
jmp
lods
xchg
roll
add
pushl
push
call
in
lcall
add
mov
pushf
negl
add
test
movsl
mov
incl
popa
add
push
add
fstl
lods
fwait
push
pop
add
std
add
jns
mov
subl
push
hlt
lods
sar
fsubrl
pop
bound
call
pushl
decl
call
push
add
pop
call
push
ror
dec
add
pop
push
push
lea
ror
push
and
add
sub
pop
shl
pop
pushl
push
not
pop
call
call
push
push
shl
push
sub
add
sub
xor
sub
xor
pop
not
rol
ror
pop
push
xor
shr
pop
pushl
push
xor
shr
ror
pop
call
push
call
add
dec
lret
jecxz
add
mov
insb
pop
mov
bound
mov
hlt
mov
jmp
leave
andb
rclb
jns
pushf
popa
jp
outsl
cmc
cmpsb
fsts
push
std
xchg
add
cmpsb
pusha
sbbb
add
add
in
movsl
xchg
out
add
mov
incl
cmc
jnp
into
add
mov
sub
lea
push
push
lea
pop
call
mov
mov
push
sub
shr
pop
rep
push
call
mov
mov
add
frstor
pop
push
aam
jecxz
dec
add
iret
jo
addl
jmp
decl
push
stos
add
jmp
jb
decl
rcrb
insb
add
add
add
testb
sahf
xchg
roll
mov
sub
push
push
call
int
pop
add
jp
call
xchg
xlat
push
incl
add
push
add
add
ljmp
mov
add
add
fdivs
int
mov
jno
jmp
fisttpll
ljmp
fsubr
jmp
mov
stc
hlt
test
jmp
mov
fisttpl
push
push
lea
lea
push
push
pop
add
dec
sub
ror
lea
sub
pop
shl
pop
push
shl
not
pop
pushl
call
push
add
rol
pop
call
push
shl
add
xor
pop
push
push
lea
push
xor
add
not
not
sub
lea
rol
pop
inc
pop
pushl
push
shr
pop
call
lea
push
push
shr
pop
call
push
push
lea
ror
push
and
add
add
sub
add
not
dec
sub
pop
rol
add
xor
pop
pushl
push
call
roll
add
shr
add
add
add
add
jmp
add
mov
mov
mov
jmp
incl
pop
mov
add
mov
add
rclb
add
add
push
mov
adcl
mov
add
ljmp
mull
jae
jl
pop
mov
leave
stos
insb
movsb
mov
sub
call
push
rol
pop
push
push
shr
add
pop
call
int
push
add
ror
add
pop
push
push
inc
push
or
inc
add
shl
ror
shr
sub
shr
shl
lea
pop
shr
pop
pushl
call
push
dec
not
pop
call
push
push
add
sub
add
push
and
add
lea
sub
add
pop
inc
pop
push
add
rol
dec
ror
pop
pushl
push
call
mov
mov
jmp
mov
lds
jp
add
cmp
ljmp
fsubrs
scas
mov
lock
incl
js
jno
shl
aam
push
add
add
incl
add
incl
js
add
add
cmpsb
ret
lea
incl
add
add
cmpsl
mov
sub
call
call
push
inc
pop
push
push
xor
inc
push
xor
add
add
lea
lea
add
sub
xor
ror
pop
shl
dec
not
pop
push
call
in
add
test
push
arpl
add
frstor
add
cmp
incl
add
pop
aad
jmp
jmp
push
add
incl
loopne
add
xchg
imul
out
push
add
jmp
lcall
jne
add
lcall
add
add
decl
pushl
call
call
push
lea
lea
pop
lea
push
sub
pop
push
push
push
sub
add
xor
sub
add
sub
rol
pop
sub
sub
pop
pushl
call
push
shr
pop
push
push
call
out
gs
data16
sti
shl
addl
testl
in
cwtl
fsubr
popa
add
mov
subl
add
mov
in
stc
imulb
add
jl
mov
mov
add
add
in
hlt
popa
mov
leave
add
add
add
dec
out
js
add
mov
sub
call
push
push
sub
push
push
pop
add
not
sub
sub
sub
not
pop
sub
sub
pop
push
sub
pop
pushl
call
call
push
shr
pop
mov
push
push
ror
add
push
xor
add
ror
lea
ror
sub
dec
ror
pop
xor
shr
shr
pop
pushl
push
add
pop
call
push
push
call
insb
pusha
jp
add
into
in
pop
mov
ja
incl
add
incl
jbe
arpl
in
add
stc
push
xchg
mov
ljmp
shrl
mov
pop
cmc
loopne
add
cli
jle
jae
incb
add
sar
fldenv
incl
in
jmp
popf
fwait
mov
add
add
clc
call
push
call
jo
mov
imul
pop
call
pop
mov
jecxz
lcall
add
add
push
push
push
call
mov
add
add
incl
imul
add
incl
add
mov
out
faddl
jecxz
incl
ljmp
inc
adc
or
not
add
ror
ror
sub
rol
pop
rol
shr
pop
pushl
call
push
call
incl
sar
push
cmpsb
pop
add
mov
scas
jp
mov
out
add
pushl
mov
cmpsb
add
add
push
rolb
push
lea
add
add
incl
add
aad
idiv
pushl
ret
jl
jbe
fwait
out
test
add
add
jmp
popa
xchg
imul
ljmp
pushl
push
add
pop
call
push
push
push
or
inc
add
lea
sub
lea
pop
add
dec
sub
not
pop
pushl
push
call
push
lcall
in
ljmp
push
jns
xchg
fldenv
loop
testb
incl
rolb
stos
add
push
add
lods
mov
add
sahf
fiaddl
lahf
xchg
pushf
call
add
jns
filds
incl
out
arpl
aad
add
call
push
push
shr
rol
shl
add
push
xor
add
sub
sub
sub
add
pop
shr
not
pop
push
lea
pop
push
call
push
sub
pop
push
push
shl
not
push
or
inc
add
add
sub
pop
dec
lea
pop
pushl
push
call
cltd
mov
xchg
add
add
add
stos
lock
movsl
add
sti
loop
push
add
bound
add
sahf
test
xlat
add
test
add
insb
fnstsw
fidivl
bound
add
add
incl
pop
ljmp
add
push
in
mov
pushf
sar
mov
icebp
mov
aam
add
add
add
lret
adc
incl
sbb
add
call
nop
shll
incl
pop
mov
jae
movl
call
fcomps
cli
add
movsb
pushf
lods
add
add
add
imul
cmpsl
bound
xchg
jns
fidivrl
jp
repnz
aam
lods
pushf
lret
add
std
cmpsl
icebp
jle
cmp
loope
add
mov
incl
decl
shrb
sub
pop
lea
lea
push
lea
pop
push
push
push
push
call
pusha
hlt
add
mov
and
in
aam
ret
add
add
cld
aam
mov
jne
std
lret
adc
jmp
push
add
lock
add
xlat
mov
cltd
iret
pushl
fiaddl
popa
testl
mov
add
add
ljmp
test
mov
sub
push
push
push
add
sub
pop
push
push
lea
shr
not
shr
pop
push
push
pushl
push
call
mov
push
add
add
pushl
jno
mov
pop
push
movl
mov
mov
add
movsl
add
leave
jge
aam
add
stc
movl
movsb
insb
mov
add
add
mov
mov
call
rcrl
mov
in
jae
add
add
incl
mov
sub
push
call
push
shr
dec
pop
push
push
push
or
not
add
dec
sub
sub
pop
shl
rol
shl
pop
push
call
lock
jb
incl
mov
add
incl
mov
popa
loope
incl
add
lret
add
stos
add
add
int3
add
add
mov
add
add
pusha
sti
repnz
decl
xchg
add
xchg
mov
sahf
mov
lock
lahf
test
sbbl
movsl
push
pop
add
std
test
add
fists
add
mov
sub
pushl
call
push
shl
sub
xor
pop
call
push
call
push
mov
add
stos
jmp
out
mov
add
cmc
nop
xlat
out
arpl
fiaddl
nop
add
add
add
add
scas
add
add
push
add
incl
add
rclb
popf
fadds
in
add
in
add
add
fwait
add
fidivrs
add
ljmp
aad
push
add
ljmp
in
clc
mov
push
pop
pop
push
dec
pop
dec
jne
jmp
push
call
ret
xchg
add
mov
insb
loopne
add
xchg
call
pop
into
jb
add
lret
push
jbe
jb
lret
jp
mov
rcll
add
call
push
dec
add
fdivrs
push
inc
lds
add
push
lods
add
cmc
imul
clc
call
push
xor
dec
pop
jmp
call
push
shl
ror
dec
rol
pop
push
push
rol
shr
push
or
inc
add
add
add
inc
sub
pop
not
pop
push
call
add
cltd
enter
add
cltd
incb
cltd
mov
scas
pop
cli
add
ret
mov
add
lods
push
mov
add
add
add
add
call
add
add
add
decl
ljmp
mov
mov
mov
add
jl
dec
add
fsts
out
add
clc
pushl
push
call
add
jnp
movsb
add
add
ljmp
lcall
shr
shrl
add
jbe
add
jmp
sahf
add
incl
xchg
xchg
scas
incl
testl
xchg
add
fsts
call
lods
fwait
add
cld
testl
cltd
decl
mov
mov
add
add
incl
add
mov
sub
call
push
shr
pop
push
call
push
xor
rol
pop
mov
push
ret
push
call
mov
lret
jae
add
leave
lods
jae
lods
add
cmpsl
mov
pop
add
lcall
inc
faddl
pop
push
add
lock
push
jae
jmp
mov
add
lods
xlat
jb
add
imul
xchg
mov
incl
mov
add
sar
mov
dec
jmp
shl
xchg
mov
sub
lea
push
push
lea
push
or
not
add
ror
sub
sub
sub
pop
shr
ror
pop
pushl
push
call
push
add
aad
lea
push
fs
add
add
in
add
out
jo
nop
add
add
insb
ljmp
fdivp
add
add
add
add
bound
mov
mov
jmp
mov
jecxz
xlat
int3
loope
cwtl
add
lcall
add
addr16
cld
decl
call
lea
push
push
call
add
add
imul
lcall
movsb
les
jmp
add
int3
jbe
call
add
xchg
add
add
mov
cld
ja
add
in
loopne
loope
inc
les
add
mov
dec
aam
fldl
call
add
mov
test
ja
mov
add
jno
mov
incl
decl
push
push
rol
pop
push
pushl
push
push
xor
push
push
pop
add
sub
rol
inc
sub
inc
pop
add
sub
pop
push
pop
push
call
push
push
push
or
not
add
not
sub
inc
sub
add
inc
add
pop
add
dec
pop
push
rol
pop
pushl
push
call
decl
add
jmp
cmp
pop
xchg
add
push
xchg
add
incl
jnp
add
into
cwtl
in
call
mov
sar
incl
in
call
test
add
lret
xchg
mov
mov
mov
add
mov
sub
call
push
call
push
call
mov
add
ljmp
add
imul
sarb
stos
mov
or
ja
incl
jecxz
xchg
add
data16
add
add
jge
out
cltd
push
add
add
mov
call
incl
inc
cmpsl
add
mov
cmpsb
pop
mov
mov
ja
incl
iret
mov
decb
ljmp
pop
call
xlat
shr
inc
push
or
inc
add
add
sub
shr
rol
dec
add
pop
sub
pop
pushl
push
call
sahf
incl
jge
les
test
arpl
add
fwait
add
add
bound
mov
movsb
arpl
fsubs
stos
jmp
cwtl
add
scas
jge
fwait
lods
sti
xchg
mov
push
xlat
mov
mov
stc
add
mov
incl
cmpsl
add
or
mov
sub
call
call
push
call
add
jno
sahf
adcl
sbb
add
xchg
add
bnd
call
add
repnz
pusha
jmp
add
incl
incl
xchg
mov
add
in
add
add
add
mov
ljmp
add
in
add
add
incl
add
add
pop
sbbl
sub
jmp
pushl
mov
push
rol
rol
pop
jmp
push
push
not
add
push
and
add
dec
sub
rol
shr
add
pop
shl
lea
dec
pop
pushl
push
call
movb
add
add
jmp
mov
incl
movsb
ljmp
scas
arpl
jmp
xchg
add
cwtl
add
xchg
add
add
add
mov
add
fiadds
add
add
mov
push
fnsave
std
mov
ljmp
icebp
mov
add
jne
push
js
fildll
aam
add
incl
call
push
call
push
pop
mov
stc
jo
jecxz
add
mov
into
arpl
pop
ljmp
pushf
add
add
push
call
add
add
pop
add
faddl
into
jne
add
add
xchg
add
iret
add
fdivs
add
jb
cld
pop
addl
sub
push
call
push
push
inc
xor
lea
push
sub
add
ror
sub
shr
inc
lea
pop
shl
sub
rol
pop
push
add
xor
pop
pushl
call
push
sub
shr
not
dec
pop
push
call
push
sub
dec
pop
leave
add
pop
push
sub
rol
add
shl
pop
pop
push
call
mov
mov
enter
add
add
mov
jmp
mov
fisubs
mov
add
pop
call
pop
lea
add
test
in
out
mov
add
fildl
jle
call
rcrb
dec
add
add
incl
ficoml
in
clc
pop
push
add
shl
pop
pop
push
not
xor
pop
leave
push
add
pop
add
ret
leave
push
call
mov
add
addl
push
fildl
add
loope
mov
call
sar
pop
out
xchg
call
add
add
incl
lods
add
jno
xlat
jge
pusha
gs
incb
ljmp
add
popa
add
add
add
mov
call
test
mov
sub
ret
push
push
shl
sub
dec
pop
mov
push
call
scas
push
mov
ljmp
jge
push
add
push
pop
in
add
popf
incl
icebp
add
cli
addl
decl
incl
add
jmp
incl
add
call
add
push
mov
mov
stc
mov
rcr
add
incl
test
repnz
add
push
mov
in
clc
incl
test
inc
and
jmp
push
call
iret
add
incl
fdivr
decl
shrb
in
call
ljmp
addl
add
decl
push
add
in
leave
add
fld
loope
call
idiv
cld
mov
pushl
add
lret
jb
lea
pushf
jmp
hlt
std
int3
add
add
stc
cltd
add
clc
mov
and
push
xor
pop
xor
push
call
imul
mov
movb
mov
shlb
incl
add
push
add
add
xchg
gs
incl
andl
push
jmp
arpl
add
incl
cmp
add
sahf
add
mov
incl
scas
mov
sub
xor
add
xor
push
call
push
in
add
add
jmp
add
ljmp
lret
add
ret
add
add
rcl
add
repnz
outsl
hlt
mov
xchg
fwait
add
ljmp
movsb
cli
loope
mov
add
add
xchg
mov
test
add
mov
pushf
push
rorl
decl
jmp
push
call
mov
add
incl
mov
addl
incl
int3
xchg
add
add
add
mov
incl
popl
imul
add
push
add
incl
incl
add
fildl
call
add
add
out
add
insb
add
add
incl
add
in
xchg
incl
add
sub
jmp
push
call
add
pushf
mov
pop
popf
lret
call
add
mov
lret
shlb
pushl
cli
jo
mov
add
mov
pop
add
ljmp
fnsave
add
mov
add
loopne
jmp
cwtl
add
add
sbb
movsl
xchg
xchg
push
shll
xlat
cmc
add
incl
push
test
xchg
jae
add
ljmp
pushl
push
call
std
mov
jmp
je
add
pushf
push
xchg
add
add
roll
pushl
push
add
cmp
mov
add
add
add
movsl
add
bound
mov
test
pop
sub
sarb
jmp
std
cmpsb
add
cltd
add
add
mov
add
fwait
scas
call
push
cld
scas
add
in
clc
lcall
jmp
push
sub
lea
inc
ror
pop
cmp
jne
mov
push
sub
add
pop
lea
sub
mov
push
call
iret
jno
stc
shll
jmp
jmp
add
in
stos
xchg
cltd
ljmp
add
lods
sahf
lret
add
data16
push
test
lcall
incl
add
rolb
ret
ja
mov
xchg
enter
mov
fdivl
add
xchg
mov
decl
incl
inc
jmp
jmp
inc
add
jno
add
pop
sahf
add
incl
addl
add
pop
push
fiaddl
mov
add
incl
scas
add
loope
mov
add
ror
push
mov
iret
add
addr16
add
incl
int
push
xchg
mov
mov
add
jmp
enter
jmp
add
incl
sub
pushl
push
lea
ror
not
xor
pop
pop
push
call
jecxz
add
pushl
add
push
pop
add
add
pop
fdivrp
lcall
add
push
fsubr
incl
push
jle
push
jmp
ljmp
pop
add
cmpsb
fiadds
pushl
data16
clc
addr16
jle
mov
push
test
add
lcall
mov
sub
shr
and
sub
push
shl
pop
cmp
jne
leave
ret
push
sub
sub
add
pop
push
push
call
add
hlt
call
add
mov
mov
addl
out
add
fs
and
add
incl
add
add
lcall
add
add
clc
add
xchg
addl
push
lcall
add
out
add
bound
add
inc
add
icebp
lock
xchg
movb
jns
pushl
lds
mov
add
push
xor
not
add
pop
push
push
call
js
add
cli
mov
add
jae
decl
cmpsl
cmp
pushl
inc
rclb
add
call
pushf
lcall
add
add
add
xchg
mov
xchg
add
pop
add
add
shll
gs
pushl
mov
sub
push
push
push
push
add
inc
pop
push
push
add
add
pop
mov
push
call
jmp
decl
add
jmp
add
push
add
add
mov
mov
repnz
mov
sti
mov
fs
add
fmulp
mov
add
incl
add
cld
mov
add
call
mov
js
mov
mov
faddl
push
jae
fisttps
decl
add
inc
add
add
add
xchg
jmp
jnp
leave
movb
add
in
add
add
pop
mov
call
add
add
sti
mov
incl
add
incl
jae
imul
add
ret
jl
jno
stos
mov
jmp
popf
pop
out
add
rolb
out
mov
sub
shr
add
mov
push
add
shl
dec
pop
add
push
call
repnz
mull
fdivp
int3
add
add
adc
xchg
pop
add
add
ljmp
movsl
test
cltd
imul
mov
clc
jp
ljmp
xchg
sahf
add
call
add
jmp
cld
incl
fcos
incl
push
shrb
popa
inc
faddl
incl
decl
daa
inc
add
outsl
add
add
add
mov
jmp
inc
divl
add
pop
push
addr16
lds
add
imul
addl
add
cmpsb
icebp
add
xchg
add
test
ljmp
add
js
nop
add
pushl
xlat
add
popf
mulb
mov
add
push
call
loope
fsubl
movb
test
push
jne
add
scas
lcall
jmp
add
add
aad
fstps
mov
add
mov
stc
xchg
popf
lods
add
ljmp
out
lcall
pop
jo
jns
hlt
lock
cmpsl
mull
mov
sub
xor
push
rol
pop
mov
and
call
push
rol
dec
sub
dec
pop
add
push
call
push
pop
iret
add
pop
add
add
jae
add
add
ljmp
std
add
add
jmp
pop
ficoml
faddp
push
popa
push
add
hlt
push
mov
incl
fadds
int3
add
add
add
jnp
jne
add
mov
incl
or
test
add
add
out
fmull
int
pop
add
push
call
push
out
rorl
add
inc
cmpsb
jne
mov
push
ljmp
imul
add
add
add
rcl
add
andl
add
int3
int
fsts
mov
sti
js
sti
xchg
add
cltd
add
in
sbbl
jmp
data16
lods
mov
arpl
incl
test
std
ljmp
call
add
add
jb
pop
add
stos
jp
ljmp
add
out
jbe
jmp
mov
pop
movsb
pop
incl
decl
icebp
pop
stos
in
repnz
push
pop
fisubrs
add
outsl
adc
mov
add
add
aad
add
lcall
pushl
jmp
incl
pushl
shrb
je
add
add
call
jnp
mov
loope
add
add
add
lret
jmp
in
add
mov
stc
lods
add
stos
test
incl
pushl
fstl
xchg
ret
out
pop
cli
fcoml
add
incl
xchg
mov
mov
add
cmpsl
fucom
jmp
mov
xchg
mov
sub
pop
pop
push
sub
inc
pop
pop
pop
pop
push
call
add
incl
incl
fs
jmp
add
call
pop
data16
add
add
cli
ljmp
incl
incl
into
aam
lahf
add
add
pushl
ljmp
ljmp
jmp
mov
fxam
xchg
jl
out
add
mov
jne
add
add
je
incl
or
push
ror
pop
mov
add
push
push
call
sbb
add
incl
push
add
out
add
jmp
pusha
xchg
jno
stc
push
add
addr16
incl
cmpsl
in
add
incl
pop
mov
pop
rolb
push
add
mov
xlat
add
mov
mov
testl
add
flds
clc
call
push
shr
xor
xor
pop
pop
push
call
mov
filds
lahf
jns
stc
out
add
incl
rcr
insb
xchg
jno
fdivr
lcall
movsl
hlt
cwtl
leave
iret
add
rcl
outsl
add
push
imul
add
add
incl
data16
incl
jmp
add
xchg
add
add
call
in
mov
int
add
mov
add
xchg
incl
mov
imul
ret
add
call
mov
pop
aam
add
add
add
jge
add
leave
add
add
push
jo
mov
aad
lcall
shlb
js
mov
add
mov
mov
incl
loop
fstp
cmp
jne
mov
test
cmpsb
lret
fxch
clc
jmp
add
jge
add
jmp
push
test
pusha
add
call
xor
push
call
mov
jmp
loope
test
jmp
scas
pop
xchg
movsb
push
add
incl
mov
stos
mov
xchg
rolb
mov
std
fiadds
lcall
jecxz
clc
add
mov
outsl
mov
fiadds
jmp
add
push
divl
fcomps
ja
mov
cmpsl
idivl
fcomp
mov
sub
pop
pop
push
sub
pop
pop
pop
push
add
ror
pop
pop
push
sub
pop
leave
push
sub
ror
pop
ret
push
call
scas
aam
push
add
xchg
add
scas
ja
add
add
icebp
data16
push
movsl
lds
jno
add
decl
rolb
push
add
call
call
int
ret
add
std
lcall
gs
jbe
js
stos
enter
cmpsb
xchg
mov
mov
add
enter
mov
incl
call
add
shr
dec
pop
mov
push
call
incl
fisubrs
cltd
bound
jge
add
add
add
ficompl
ljmp
incl
insb
jno
popa
call
cli
mov
call
sahf
mov
add
add
mov
les
fs
mov
int3
pushl
add
bound
mov
enter
cmp
add
shlb
je
incl
incl
push
pop
push
push
shl
pop
push
push
sub
pop
mov
push
push
call
add
insb
pusha
add
pushl
jns
imul
jnp
pusha
xchg
test
pop
jno
cmpsl
jo
add
mov
incl
iret
add
sahf
xchg
add
test
add
xchg
sahf
mov
jmp
jmp
push
nop
mov
mov
jmp
aam
add
push
mov
add
fstps
call
xchg
mov
sub
pop
push
call
mov
call
pushl
mov
add
jmp
fs
hlt
stc
add
lcall
jp
pop
scas
incl
add
les
mov
add
mov
jge
ljmp
add
cmp
jmp
mov
cmpsl
xchg
mov
mov
pushf
addl
incl
decl
add
add
add
add
ljmp
add
ret
add
add
mov
add
call
add
add
sarb
add
int
repnz
pop
jae
test
push
incl
jmp
add
out
out
mov
insb
clc
xchg
add
pop
out
sti
ret
enter
xchg
aad
add
mov
les
decl
incl
inc
ljmp
call
add
fistl
add
xchg
add
fdivp
int3
push
imul
in
hlt
jae
gs
add
dec
add
pop
iret
loop
ja
pushl
add
jb
add
push
mov
mov
addb
rcll
cmp
incl
push
call
add
test
add
call
rolb
jne
ret
aad
out
add
add
shlb
iret
fs
cmp
decl
add
std
add
add
add
incl
pop
add
add
add
rolb
aad
jl
sahf
add
hlt
jns
fiaddl
mov
mov
push
add
jl
hlt
jbe
add
clc
decl
pushl
push
call
add
add
out
add
xchg
int
in
lret
sbbl
add
in
jp
rolb
add
in
addl
pusha
add
add
jmp
imull
add
xchg
xchg
add
lock
xchg
add
jle
mov
lds
push
pushl
in
loopne
and
cmpsl
addl
incl
clc
mov
push
lea
add
add
pop
add
push
lea
add
shr
pop
xor
push
call
filds
in
mov
mov
add
add
fwait
stc
cld
stos
add
add
add
push
mov
mov
cmpl
push
sahf
fs
add
bound
jmp
fs
call
cli
insb
jl
call
add
rcrb
sbb
incl
xchg
add
aad
cli
scas
push
lret
push
add
cld
add
decl
lea
mov
add
push
call
add
dec
add
add
add
jmp
mov
add
test
xchg
insb
scas
jecxz
add
sti
lahf
les
add
xchg
insb
outsl
mov
fadds
test
popl
pop
add
call
jbe
jle
incl
mov
xchg
test
decl
xor
call
add
push
call
rcrb
push
jecxz
add
pop
incl
lds
push
imul
inc
ljmp
ljmp
test
jns
repnz
fdivp
jb
add
add
mov
cltd
xchg
std
popf
popf
add
mov
jmp
lcall
enter
lods
push
add
nop
lahf
add
call
add
add
in
jge
add
inc
out
stos
add
add
out
mov
jp
rcll
incl
lock
add
add
pushl
call
sti
pop
test
add
lcall
add
insb
add
add
incl
mov
push
push
add
add
mov
outsl
jmp
decl
call
test
call
rcll
add
mov
incl
add
incl
xchg
call
add
jb
incl
lcall
add
xchg
aam
sahf
mov
scas
jo
in
cmp
lcall
mov
popf
add
add
add
add
aad
push
jle
mov
fucomp
add
add
push
add
incl
add
add
push
cld
push
fwait
je
mov
out
incl
call
add
add
roll
add
incl
loop
enter
fdivrl
jbe
ljmp
in
gs
jp
mov
clc
fsts
add
add
add
imul
fxch
xchg
popa
mov
jne
mov
add
jle
xchg
jge
jo
jle
ficomps
mov
add
mov
sub
nop
push
call
incl
add
outsl
fnstsw
add
push
add
add
add
add
mov
gs
out
jnp
movb
add
add
add
jne
xchg
add
incl
out
add
call
gs
cmc
cli
iret
mov
sub
nop
cmp
jb
xor
push
xor
pop
jmp
mov
push
shr
pop
add
movzwl
push
call
jbe
lret
incl
enter
inc
add
mov
push
add
call
jb
add
loop
add
mov
lcall
cmpsb
out
cmc
push
je
incl
xchg
lock
je
pusha
push
add
fmul
lea
mov
mov
mov
sub
mov
add
push
call
jp
add
sti
std
xchg
test
incl
add
mov
incl
ljmp
push
mov
add
fnsave
shll
popf
int
in
pushf
imul
jecxz
cwtl
rolb
add
call
out
pusha
jbe
cli
add
int
add
add
mov
bound
test
scas
mov
mov
sub
mov
xor
push
pop
xor
shl
xor
push
xor
dec
not
pop
shl
push
ror
dec
pop
xor
shl
xor
push
call
add
add
add
imul
scas
fcomps
add
mov
xchg
lock
mov
xchg
inc
mov
add
call
add
pushl
incl
add
ficoms
pop
ljmp
les
decl
pop
add
push
call
cmpsl
mov
scas
jns
jmp
loope
add
add
push
in
add
into
add
push
pushl
popf
flds
jmp
ror
add
pop
mov
add
push
jecxz
ret
incl
add
incl
add
test
jp
add
jbe
add
out
sti
push
lock
mov
fistpl
lahf
mov
sub
pop
pop
push
pop
pop
pop
push
shl
inc
rol
shr
pop
leave
ret
push
push
sub
pop
mov
push
push
call
xchg
pushl
incl
add
call
add
xlat
mov
sbbb
dec
in
add
pop
addl
movsl
mov
lcall
pushl
incl
mov
cld
ljmp
add
xchg
mov
fstpt
add
mov
push
mov
in
clc
call
rol
add
lea
xor
pop
push
push
call
add
call
add
add
mov
dec
lods
pop
lds
mov
negl
call
popf
andb
add
mov
incl
xchg
loopne
add
mov
movsb
add
jae
loope
jns
add
mov
incl
add
std
jne
cld
add
add
push
push
call
add
mov
out
add
add
call
cli
pushf
mov
lcall
add
filds
incl
mov
push
call
add
fadd
pushl
add
add
into
add
add
push
add
add
add
jbe
call
mov
add
jo
add
leave
add
mov
mov
push
ror
pop
mov
test
je
push
call
leave
jl
fsubrl
lds
mov
enter
clc
in
pop
imul
push
add
mov
lahf
lea
cmp
ljmp
popf
add
ljmp
jb
pop
jmp
jmp
add
add
decl
push
cmpsb
add
add
incl
loop
lock
std
mov
ljmp
jmp
addb
decl
decl
je
mov
push
shr
sub
pop
mov
push
dec
pop
mov
inc
push
xor
pop
cmp
je
push
call
loop
lret
lcall
jae
add
lret
stos
mov
jbe
jno
add
in
push
out
jmp
add
roll
pusha
add
add
jp
jle
add
roll
mov
incl
add
loope
add
int
fidivrs
add
pushl
clc
incl
add
push
not
shl
add
dec
pop
mov
inc
cmp
je
push
call
add
icebp
add
addb
popf
jne
jmp
mull
add
lcall
xchg
jmp
xchg
test
incl
add
roll
jle
pushl
repnz
pop
jns
in
int3
add
decl
dec
add
lahf
pushl
add
pushl
mov
sub
test
jne
push
lea
dec
add
pop
xor
push
call
add
add
jge
std
call
jmp
fwait
mov
shl
insb
push
mov
mov
push
incl
cmc
fwait
mov
push
lds
mov
add
jne
lret
add
int
jb
pop
in
dec
add
mov
add
lods
add
loopne
add
add
add
aam
jne
add
lds
add
decl
pop
pop
pop
push
call
add
movsb
jbe
lret
jge
push
leave
lods
add
add
loop
call
mov
out
out
add
int
add
add
add
add
add
dec
mov
data16
sti
sahf
add
lahf
inc
sti
jnp
nop
frstor
pop
jmp
add
mov
sub
pop
push
call
mov
jns
test
add
cld
test
imul
push
mov
mov
incl
add
rorl
jmp
xchg
add
call
mov
add
pushl
mov
call
push
lods
jb
mov
je
push
add
jbe
incb
je
ljmp
sti
flds
push
in
add
mov
clc
leave
ret
mov
push
lea
dec
pop
inc
push
call
add
pop
addr16
mov
cmc
add
fmull
push
lahf
add
add
mov
pusha
icebp
add
pop
addb
addb
add
add
lea
add
push
out
add
call
sahf
push
mov
fsubrl
in
dec
out
jl
cli
bound
cmc
add
ja
incl
jp
jmp
mov
sub
cmp
jne
lea
push
not
pop
mov
push
call
in
fcomps
add
jo
push
call
add
add
pop
stc
add
pushl
cwtl
fadds
enter
add
jmp
jp
add
cmpb
les
add
in
jge
add
jnp
add
call
add
pushl
incl
movsl
jle
fcoms
push
aam
push
mov
mov
sub
test
je
mov
push
call
stos
mov
mov
add
in
add
stos
cli
push
int3
mov
std
sti
add
incl
mov
pushl
xchg
add
add
out
pop
add
lcall
add
ljmp
mov
mov
sti
mov
test
add
mov
lods
add
mov
sub
add
push
call
add
cld
mov
lock
sar
incl
push
lods
add
jno
lcall
fldl
fistpl
cmc
add
incl
xchg
lahf
lahf
mov
popf
add
lods
aam
iret
call
lcall
xlat
mov
add
add
js
add
ljmp
add
les
add
enter
incl
cmp
jne
mov
push
shl
dec
pop
test
je
push
sub
xor
pop
mov
add
cmp
je
push
call
outsl
add
pop
push
fldt
mov
mov
push
pusha
add
add
fxch
add
and
add
add
incl
xchg
add
jnp
jbe
add
add
add
mov
sti
scas
xchg
jne
add
lcall
xchg
add
decl
clc
jmp
xor
push
call
testb
sar
out
add
add
test
lcall
call
add
pop
stos
add
mov
pushl
mov
incl
out
add
add
xorl
test
jns
popf
add
push
add
incl
push
clc
ljmp
lods
mov
mov
add
xchg
lahf
loope
stos
add
add
decl
pop
pop
pop
push
sub
lea
pop
pop
push
add
shl
xor
pop
leave
push
shl
pop
ret
push
ror
add
pop
lea
pop
pop
push
sub
shl
pop
pop
pop
leave
push
not
pop
ret
push
rol
shl
pop
mov
pop
pop
push
lea
xor
dec
pop
pop
pop
push
call
xchg
xchg
test
add
add
incl
cmc
scas
out
add
incl
jae
mov
bnd
push
flds
jecxz
scas
scas
shlb
jae
jmp
add
mov
in
lea
add
add
mov
lret
in
loopne
testb
fiadds
add
add
push
mov
sub
leave
push
call
fadds
lock
add
add
add
push
mov
add
lcall
out
add
add
mov
add
aam
mov
cmc
mov
mov
add
add
loope
mov
bound
data16
fisubs
mov
imul
add
add
push
sti
add
incl
pop
mov
sub
ret
rol
push
call
pop
loop
add
jp
mov
popa
lret
push
mov
add
in
aam
int
mov
out
mov
pushl
cmpb
add
add
mov
lahf
stos
sti
push
faddp
icebp
add
stc
bound
add
xchg
popf
add
add
add
xchg
jne
mov
add
mov
sub
rol
xor
inc
push
dec
sub
pop
cmpb
jne
push
sub
not
sub
shr
pop
ret
jbe
into
stc
jbe
into
stc
push
scas
aad
subb
stc
jbe
sar
jbe
iret
stc
mov
into
stc
push
sbb
stc
sbb
stc
jbe
into
stc
jbe
into
stc
adcb
in
stc
jbe
sar
jbe
into
stc
test
stc
out
frstor
pop
pop
mov
adc
into
outsb
cmp
mov
daa
sbb
insl
dec
test
push
xor
cld
les
ljmp
xor
add
in
inc
ret
inc
inc
xor
pop
scas
inc
dec
mov
aad
xchg
inc
xchg
or
push
jns
lret
sub
outsl
xchg
xchg
mov
or
sti
or
shlb
into
cmp
dec
cmpsl
sti
lock
or
movsb
xor
add
nop
nop
nop
mov
clc
mov
adc
insl
es
mov
imul
jmp
movsb
imul
xor
nop
nop
nop
push
sub
mov
sub
test
orl
into
and
push
repnz
addr16
daa
and
cmpsl
ss
mov
xlat
push
push
in
das
cmp
out
popa
mov
xchg
or
cmpsl
fs
mov
das
nop
nop
nop
nop
nop
push
dec
mov
adc
mov
ds
adc
add
pop
pop
mov
jbe
sub
aaa
scas
das
sarl
or
addr16
imul
jl
nop
nop
nop
nop
nop
dec
ret
add
mov
add
cmpsb
adc
cmp
mov
sbb
xchg
addr16
sub
push
xor
pop
inc
mov
or
and
pop
cmpl
dec
imul
push
or
mov
cmp
sub
dec
leave
dec
mov
mov
ja
arpl
neg
cmp
push
sub
ss
inc
ja
mov
mov
dec
add
mov
aas
cmp
pop
out
mov
nop
nop
nop
nop
fistpl
int3
int3
int3
leave
or
jns
loopne
in
pop
lods
icebp
stos
pop
fisubrs
gs
jecxz
jecxz
xor
xor
data16
lret
and
cmp
and
add
loope
popf
mulb
int3
int3
mov
jg
add
nop
sub
add
add
adc
int3
int3
int3
int3
push
push
cld
call
js
pop
out
shll
adc
daa
movsb
loop
push
cmp
add
roll
jg
movl
pop
add
sbb
sbb
in
pop
xor
mov
add
movsb
push
mov
add
ret
cmp
pop
sarb
dec
pop
push
lcall
cmp
pop
das
iret
in
pop
movntq
inc
xchg
adc
addb
jp
jno
add
xor
mov
jmp
mov
rolb
push
dec
adc
out
sti
mov
xchg
dec
fadd
pop
and
pop
dec
cmp
es
in
mov
pusha
inc
and
lods
rcll
fmull
xchg
idivl
inc
es
jge
jno
push
pop
xchg
jns
pop
roll
pop
fidivrl
cmp
icebp
es
sub
and
mov
repnz
fsubrs
xchg
cmp
cli
xchg
sub
add
sub
mov
nop
nop
nop
nop
nop
xorb
push
mov
shr
dec
sbb
sbb
sahf
cmp
daa
out
mov
lock
outsl
mov
or
into
mov
andl
sbb
add
icebp
sbb
out
pop
add
mov
and
out
add
sub
mov
push
add
push
xchg
nop
aam
stos
push
cltd
sbb
adcb
xor
or
scas
dec
mov
movsb
cld
pop
adcl
movsl
les
add
aam
in
inc
pandn
arpl
push
cmp
cld
jmp
int
pop
push
cmp
mov
nop
nop
nop
nop
mov
or
add
jg
clc
cmp
xor
mov
faddl
loop
cmpsl
mov
or
scas
mov
inc
cmp
push
push
sub
adc
or
sahf
sbb
rorl
in
aaa
dec
sbbb
add
or
mov
scas
mov
das
inc
add
shll
adc
mov
dec
es
int3
int3
int3
ficomps
daa
mov
pusha
subb
outsb
leave
mov
dec
adc
adc
mov
out
pop
xchg
jmp
xor
dec
roll
lds
rcl
fstl
jno
divb
pop
mov
fs
sarb
xchg
xchg
aaa
push
push
mov
insl
xor
sub
daa
loop
mov
push
out
inc
pop
xorl
jns
mov
mov
repnz
jb
mov
push
sbb
dec
jbe
push
xor
ss
and
loope
mov
jne
cmp
pop
or
cmpl
sbb
enter
call
xchg
jnp
pop
sub
jno
int3
int3
int3
int3
popf
adc
cmp
loope
jg
sub
fidivrl
sub
add
bound
test
or
in
jp
push
xchg
lahf
jnp
and
cmp
insl
mov
cmp
mov
int3
int3
int3
int3
stos
insb
popf
ror
stos
sbb
outsl
es
xchg
pop
mov
fstl
scas
shlb
orb
pop
jle
popf
dec
and
nop
nop
stc
xlat
jns
outsb
roll
lods
aaa
or
xchg
cmp
arpl
sub
inc
xor
add
inc
xchg
and
icebp
mov
lods
sbb
js
xchg
pop
xor
inc
mov
mov
cld
jmp
and
mov
fldt
cmpsl
lret
mov
jecxz
aas
cli
jp
lahf
inc
sub
sbb
fyl2xp1
js
in
cmp
add
ret
xchg
mov
clc
xchg
inc
addl
mov
cwtl
xor
xor
test
pop
add
int3
int3
int3
int3
stos
sub
test
pop
add
or
sbb
out
test
add
add
aas
mov
inc
out
add
mov
lea
mov
repz
sahf
pop
dec
push
pop
ds
sub
fldl
fisttpll
js
dec
adc
ror
dec
push
and
insb
dec
test
addl
popa
in
jg
pop
xchg
out
inc
and
jne
mov
loop
mov
inc
gs
in
push
cltd
xchg
ljmp
filds
in
rcrb
pushf
stos
mov
repnz
xchg
aam
cltd
inc
push
cltd
adc
fisubrs
xchg
loop
lret
sub
aaa
daa
and
and
push
adc
shll
in
fs
insl
xlat
mov
out
add
jae
adc
insb
inc
cmp
mov
pop
dec
inc
jle
inc
sbb
mov
adc
iret
push
seta
nop
nop
nop
nop
sbbl
pop
mov
sahf
sbb
cltd
mov
stc
jmp
ja
dec
fwait
or
inc
push
push
cmpsl
aas
cmpsl
pop
mov
fdivp
cwtl
jge
ljmp
or
lea
icebp
inc
jnp
cmp
call
js
sbb
nop
nop
nop
nop
nop
mov
fcomp
ss
mov
daa
pop
sub
data16
aas
out
loop
jg
cmp
add
adc
in
push
add
add
iret
push
fsubs
in
fcoml
mov
mov
add
das
xor
inc
cmp
jl
mov
push
lock
test
ja
sbb
cmp
lods
and
idivb
in
inc
fs
inc
xchg
arpl
mov
leave
mov
sub
fimull
and
aas
and
lcall
ja
dec
rcrb
sbb
mov
xor
add
imul
dec
xchg
xchg
push
call
add
mov
stos
lods
loope
fst
push
or
mov
mov
fldln2
mov
jo
aaa
aad
sbb
add
mov
pop
fdivrs
adc
ss
push
pusha
xor
jbe
mov
mov
xchg
add
cmpsl
lahf
movsl
out
orb
aaa
sub
dec
xchg
pop
ja
dec
imul
les
and
add
mov
pop
add
scas
mov
mov
loop
xor
sub
movsb
lods
ss
lock
sub
leave
adc
dec
fcoml
mov
mov
jnp
jne
pop
sbb
lods
pushf
loopne
add
imul
movsb
stc
sub
jae
add
negl
mov
inc
dec
and
inc
popf
pop
mov
or
movsb
clc
fs
and
jmp
adc
les
jl
jnp
mov
xor
in
push
out
fwait
les
add
add
xor
lods
cmp
jb
push
nopl
movsb
xchg
xchg
xor
shll
add
sbb
int
pop
pop
int
cmp
sub
push
and
sub
jmp
add
fistpll
xchg
popa
mov
xor
rcl
mov
push
ret
out
lcall
pop
das
dec
jo
inc
loopne
inc
mov
inc
mov
rorl
xchg
sub
sbb
fcomip
or
icebp
cmp
add
sbbl
repnz
js
jp
sbb
xchg
pop
dec
stc
orl
pop
mov
cmc
push
jle
pop
sub
test
jo
pop
adc
pop
mov
pusha
cmpb
nop
nop
nop
nop
negl
pop
fs
add
int3
int3
add
pop
fmull
clc
pusha
pop
fsubs
jmp
rol
mov
pusha
fs
into
mov
int3
int3
int3
int3
int3
sbb
int
pop
int3
int3
int3
int3
pop
fldcw
jmp
xchg
mov
in
cmp
lds
mov
stos
mov
addl
xchg
xor
loope
imul
add
cli
sub
test
mov
adc
add
adc
mov
or
xchg
mov
and
jae
mov
std
es
mov
inc
es
push
pop
lods
or
mov
add
divb
stos
dec
rorb
cmp
pusha
add
mov
in
lret
xchg
pop
sub
loop
or
mov
xor
fisttpll
mov
jne
xchg
fisubl
mov
notl
or
orl
jmp
cmpsl
cmpsl
popa
hlt
push
and
in
pop
sbb
sbb
xchg
sti
mov
loope
sub
imul
xor
inc
mov
push
sbb
mov
div
add
in
loopne
sbb
repnz
mov
je
xchg
cmp
pop
and
sbb
in
jl
add
bound
mov
jp
jns
jne
cwtl
inc
push
iret
arpl
inc
lock
fnstsw
filds
pop
in
je
in
shl
out
mov
sbb
xchg
sbb
and
fmul
add
clc
xchg
mov
insl
cmpb
sbb
add
and
push
add
push
aam
xchg
sti
insb
enter
mov
divl
sbb
into
xlat
repz
mov
sub
add
imul
orb
ja
jle
adc
enter
insb
lock
mov
sub
pop
lods
nop
nop
nop
nop
nop
aam
divb
out
idiv
xchg
jnp
mov
dec
aaa
push
jp
aam
out
inc
test
imul
or
repz
insb
add
aaa
iret
pop
sub
stos
insb
xchg
jnp
sahf
mov
jb
add
adc
mov
je
adc
xor
xor
aad
test
mov
pop
jecxz
rol
cmp
add
jno
psubusw
dec
or
xchg
push
add
test
ja
add
sbb
sbbl
shll
pop
jo
lock
mov
mov
fnstsw
aad
pop
add
icebp
xor
aam
mov
popf
xor
fstps
inc
fisubs
jle
ljmp
pop
and
adc
or
inc
push
add
shrl
add
lret
lds
inc
cwtl
in
testb
popa
cmp
shll
scas
std
ret
mov
mulb
rcrl
pop
inc
dec
fwait
jle
nop
nop
nop
nop
nop
ljmp
cmpb
addr16
mov
mov
icebp
insb
xor
je
add
dec
mov
push
stc
jg
mov
stos
or
stos
andb
pop
ja
cld
sarb
aad
push
push
pushf
pop
dec
clc
mov
iret
dec
leave
mov
daa
out
cld
adc
xorl
ja
mov
out
sbb
sub
xchg
adc
cmp
in
jle
xorl
insb
add
iret
cmp
xlat
push
xchg
xor
add
popa
out
loopne
enter
stos
pop
xchg
pop
test
or
mov
icebp
jl
push
fcoml
nop
nop
nop
nop
nop
cmp
adc
mov
je
dec
mov
jne
nop
nop
nop
nop
cs
js
pop
jg
in
fildl
cmp
add
dec
popa
xchg
popa
lcall
push
add
rclb
mov
xor
and
in
add
fimuls
je
scas
and
test
xor
pop
add
lret
cwtl
mov
sahf
mov
mov
lcall
pop
nop
nop
nop
nop
nop
jno
mov
mov
stos
int3
int3
int3
int3
int3
ja
push
push
in
jmp
outsb
jo
outsb
jns
int3
int3
int3
int3
loope
or
xchg
sbb
and
add
nop
nop
nop
nop
nop
std
mov
movsb
add
imull
mov
mov
sub
xlat
pop
mov
stos
dec
jp
sub
int
mov
out
jg
ljmp
aad
repz
fadds
push
iret
cwtl
sbb
mov
aas
lock
inc
movsl
mov
imul
and
or
subb
add
arpl
adc
mov
cmp
jne
enter
xchg
pop
jl
pop
icebp
pop
pop
arpl
push
sbb
push
int
mov
xchg
mov
loope
mov
outsl
inc
pop
sbbl
cmp
adc
dec
setbe
push
insb
cmp
jg
shll
pop
jp
jge
xor
xchg
leave
xor
in
add
int
xchg
sbb
add
sbb
leave
jb
cli
or
push
lcall
je
dec
jno
ret
pop
push
addr16
jle
pop
into
mov
add
insl
cmpsb
test
pusha
cmpl
aad
pop
jmp
les
dec
and
push
aad
mov
int3
int3
int3
int3
and
adc
and
and
mov
addr16
divl
xchg
sub
fbld
filds
pushf
pop
bound
or
test
pusha
mov
mov
push
xchg
push
imul
mov
fistpl
cmp
pusha
jns
add
int3
int3
int3
int3
int3
dec
mov
pusha
cmp
and
cmp
imul
mov
daa
sbb
lds
int3
int3
int3
int3
int3
lods
mov
push
add
jp
and
add
adc
out
sub
add
push
and
and
test
xor
xchg
pop
jno
xchg
pop
stc
inc
mov
add
push
dec
mov
mov
ljmp
mov
and
add
pop
or
mov
jle
push
push
sub
lock
mov
dec
mov
gs
xor
add
lds
psubusb
pop
xchg
mov
repz
nop
nop
nop
nop
nop
mov
inc
scas
add
nop
nop
nop
nop
nop
add
cmpsl
and
lods
add
inc
int
add
or
sbb
ds
out
leave
cmpsb
lea
adc
mov
daa
or
daa
les
daa
in
insb
sub
add
aas
xchg
jne
ja
fstps
adc
lods
xchg
mov
pushf
pop
gs
mov
inc
xor
sbb
xor
push
movsb
dec
lods
bound
sub
into
and
nop
nop
nop
nop
xchg
scas
lcall
add
inc
ljmp
sbb
xchg
bound
mov
and
dec
aas
jl
add
sub
mov
sahf
lahf
dec
cmc
mov
add
add
dec
and
or
cltd
fyl2xp1
push
imul
xchg
dec
push
shlb
cmpsl
inc
add
popf
fdiv
insl
cltd
cmp
scas
lret
insl
repnz
in
insl
or
adc
push
sub
sbb
dec
clc
jne
sub
jb
lods
pop
push
lea
sub
enter
sbb
xlat
fiadds
ds
andl
jbe
pushf
outsl
bound
sbb
pop
cltd
and
loope
push
inc
xchg
jmp
aam
nop
nop
nop
nop
or
aas
mov
rcl
mov
mov
scas
loopne
test
mov
add
adc
push
sbb
add
sahf
out
out
nop
nop
nop
nop
nop
pop
mov
test
dec
shrl
push
sti
aad
fimull
ret
and
adc
sub
add
aam
mov
mov
inc
xchg
inc
leave
or
push
movsl
push
ds
push
cmpsl
jae
push
cwtl
push
stos
inc
nop
nop
nop
nop
nop
ror
jns
add
mov
fnsave
dec
jo
xor
aad
fidivs
push
das
cmp
lret
mov
dec
lock
push
inc
lds
jp
push
orl
data16
inc
shrb
inc
sub
movsl
cmp
insb
sub
daa
xchg
mov
mov
test
cmp
xor
incb
dec
and
and
jg
lcall
mov
enter
call
add
xchg
jne
lahf
inc
mov
push
pop
mov
in
jo
and
push
adc
inc
cmp
loop
pop
les
xchg
stos
cmpl
add
stos
sub
repz
enter
jae
int3
int3
int3
int3
not
or
xchg
mov
ja
fcmovnu
xchg
sub
adc
add
btr
lcall
scas
pop
sbb
mov
cmp
movsl
je
xlat
dec
sbb
rcrb
in
and
sub
cmp
add
es
dec
dec
jecxz
ficompl
cmc
jg
mov
rclb
roll
jnp
sub
cli
xchg
lock
aas
cmp
les
dec
fsubrs
cmpsb
pop
jg
mov
jge
jnp
inc
jae
cld
orl
sub
adc
outsb
xchg
shl
movsb
cmpsl
in
lods
pushf
sbb
jecxz
cmc
movsl
test
int3
int3
int3
in
mov
aas
dec
pop
cmp
add
fistpll
mov
xchg
mov
loope
shlb
les
or
mov
jge
dec
add
adc
movsl
nop
nop
nop
nop
nop
mov
fdivrs
add
xchg
cmpsb
into
lock
cwtl
inc
xchg
push
gs
mov
cmp
enter
inc
mov
dec
sub
jmp
xchg
jb
mov
stos
out
lock
xchg
sub
mov
je
orb
loopne
and
pop
mov
mov
xchg
loopne
shll
add
inc
inc
fdivl
jmp
addr16
dec
enter
xorl
add
add
cmpl
scas
pop
test
imul
fwait
ret
xchg
scas
fisubs
adc
shl
xchg
jno
movsb
orl
jmp
push
pop
sub
stos
or
mov
push
loopne
cmp
adc
dec
mov
sahf
mov
add
dec
mov
not
push
lret
pop
pop
jle
jnp
imul
pop
int3
int3
int3
int3
int3
or
mov
pop
mov
dec
cli
jge
push
cs
mov
outsb
aam
js
sbb
cmc
sarl
leave
repz
sub
decb
roll
nop
nop
nop
das
cmpsl
add
and
or
mov
cli
add
icebp
cmp
repnz
inc
insb
sahf
sahf
fstps
xchg
pop
loope
and
xchg
loopne
inc
add
lcall
fisubl
test
jg
loope
push
push
mov
inc
xor
cli
inc
and
jmp
and
mov
xchg
mov
jbe
inc
cmpsb
xchg
jbe
xor
cmp
cltd
sbb
mov
repz
jo
cwtl
jp
cmp
test
sti
sbb
mov
mov
jge
movb
in
insl
mov
mov
lcall
or
push
cmp
jns
push
jno
cltd
pop
pause
nop
nop
nop
nop
icebp
testl
cmp
pusha
mov
push
stc
ror
test
xor
aaa
jb
ja
cld
push
add
enter
mov
cmc
outsl
out
ja
mov
mov
or
cmp
jo
lods
and
xchg
cmp
xchg
insb
jle
sub
pop
ds
scas
fistpl
add
les
push
bnd
dec
je
jmp
mov
dec
xchg
xchg
cmp
fnsave
lcall
sbb
push
divb
pop
test
mov
push
mov
ja
cmpsb
jns
dec
jns
cmp
or
mov
mov
inc
dec
xchg
sub
add
xchg
push
data16
and
es
jge
int3
int3
int3
int3
int3
pop
imul
ffree
inc
add
xchg
aad
adc
lods
ja
sub
int3
int3
int3
int3
sub
rcrb
out
cmp
divl
dec
fwait
arpl
sbb
out
out
pop
outsb
add
test
loop
scas
hlt
jnp
or
add
popf
pop
inc
cmp
lret
out
sahf
xchg
add
int3
int3
int3
int3
int3
push
push
insl
inc
hlt
pop
das
fdivl
jle
push
es
loopne
xchg
rcrb
mov
movsb
aad
outsb
lret
pop
mov
dec
repnz
loope
clc
addr16
sbb
xchg
push
inc
fcompl
ss
jae
pop
dec
xchg
add
xor
mov
fcmovb
pushw
mov
stos
pop
ja
daa
cld
mul
fimull
push
adcl
xor
dec
pushf
rclb
paddq
add
sar
cli
or
mov
arpl
xchg
imul
mov
mov
cmpsb
jb
push
out
or
scas
stos
sbb
iret
dec
sti
push
popf
out
repnz
push
ret
fmul
not
add
sub
mov
scas
jle
enter
js
sbb
in
cmp
in
fimuls
mov
or
sahf
pop
jae
pop
mov
rcrl
pop
push
clc
les
mov
cld
hlt
adc
sub
je
or
fcomps
xor
repnz
sbb
imul
push
rcl
sub
mov
loopne
add
lret
outsb
mov
adc
or
js
xchg
pop
mov
cwtl
loopne
xchg
mov
fwait
loopne
mov
ljmp
icebp
xchg
push
loope
or
lret
icebp
pop
es
popf
testl
mov
adc
dec
jge
xor
shll
fimuls
or
pop
pop
test
mov
subl
out
or
add
outsl
adc
dec
daa
aam
inc
popf
in
add
in
pusha
int
out
js
xchg
aam
rolb
fnsave
adc
sub
repz
mov
xchg
add
cld
and
mov
out
out
mov
ret
aad
in
or
dec
cmp
cld
imul
cmp
or
dec
nop
nop
nop
nop
nop
gs
mov
push
and
dec
push
push
cli
mov
mov
and
int3
int3
int3
int3
int3
mov
call
push
push
daa
or
push
pop
loopne
fs
in
int
add
shlb
xor
ret
adc
xor
jb
sbb
and
lods
dec
cmc
dec
insb
aas
movsl
sar
mov
test
push
push
cmc
or
mov
mov
addr16
in
iret
xorl
popa
jo
cltd
push
dec
or
sbb
fdivrl
inc
mov
in
scas
add
push
test
in
mov
mov
or
and
repnz
adc
mov
les
out
sub
cpuid
pop
je
subb
add
or
or
cmc
fwait
jmp
cli
jmp
addl
imul
dec
push
mov
add
lods
inc
mov
and
pop
fidivrl
cmpsl
xor
in
shr
xchg
jmpw
lds
add
loopne
into
inc
and
push
mov
sub
mov
cmpsl
enter
aad
int3
int3
int3
int3
cmp
jecxz
or
cmp
inc
movsb
sbbb
jmp
pop
jo
scas
loop
pop
ficompl
in
inc
add
insb
jbe
aam
add
je
scas
push
xchg
mov
into
lock
xor
repz
adc
sbb
iret
sarb
sub
push
mov
lock
pusha
inc
push
xchg
fcoms
ds
add
out
or
psrld
shl
push
les
mov
into
pop
verw
or
sbb
pop
add
pop
dec
and
add
in
xor
add
ret
mov
dec
sbb
jecxz
sbb
icebp
fdivs
es
repz
add
jecxz
adc
gs
shll
jno
ret
cmp
or
out
mov
pop
sbb
aad
mov
cmp
add
test
nop
nop
nop
nop
nop
cli
movsb
orb
sbb
or
add
in
xor
movsl
jns
or
jmp
mov
stc
xchg
add
adc
or
push
flds
xchg
xor
add
and
xchg
sub
add
xor
pop
sbb
lock
pop
xchg
mov
push
jecxz
outsl
popa
mov
cmpsl
push
dec
adc
and
xchg
stos
loopne
je
cmpsb
mov
mov
inc
test
dec
push
aas
call
add
fistpll
and
stos
xchg
ret
aad
mov
shlb
add
cwtl
fstp
jle
or
cmp
stos
icebp
movsb
cmpsb
popf
mov
jp
in
pop
int
mov
icebp
jp
shlb
pop
into
mov
jns
adc
adc
adc
pushf
clc
mov
pushf
sub
lret
pop
pop
and
or
mov
inc
movsb
and
and
lret
jge
cmp
xor
or
add
pop
in
pop
sbb
inc
mov
mull
inc
js
mov
stos
lret
pusha
lret
sahf
jae
inc
jecxz
pop
adc
add
fcoms
flds
add
xor
mov
aad
dec
sldt
dec
xlat
nop
nop
nop
nop
nop
jo
push
dec
leave
addr16
xor
mov
mov
mov
and
jge
data16
add
xchg
xor
dec
pop
add
sbb
dec
xor
lea
insl
jns
adc
outsb
adc
sub
cmp
pop
push
mov
adc
mov
test
push
xor
sub
add
cs
lds
add
mov
movsl
mov
push
bnd
dec
add
mov
imul
lods
adc
inc
sarb
mov
lahf
fisttpl
lcall
inc
xor
mov
add
mov
shll
popf
test
int3
int3
int3
int3
lahf
ja
jle
adc
push
push
inc
stc
or
int3
int3
pop
xlat
or
lds
roll
mov
mov
mov
or
push
punpckhbw
push
sahf
fs
push
sub
xchg
icebp
cmpsb
mov
xor
pusha
sbb
jae
movsb
xor
add
movsl
js
inc
push
sahf
mov
ss
das
je
lock
or
out
cli
and
xchg
xor
jo
paddq
jo
cmp
stos
xor
add
cmp
fwait
cmpsb
divb
movsb
inc
loop
mov
ss
push
fsubrl
add
lcall
adc
fsubrl
fwait
insb
into
pop
push
and
sti
icebp
sbb
rdtsc
mov
movsl
add
cmc
lret
lret
in
int3
int3
int3
int3
int3
add
gs
push
dec
stos
movsb
movsl
leave
jbe
xchg
jo
xchg
cs
iret
jle
add
adcl
add
adc
add
movsl
sbb
sub
push
xor
mov
jbe
aad
push
sub
and
mov
and
sub
fs
inc
roll
and
mov
vcvtss2si
mov
xchg
mov
mov
jl
jo
cmp
icebp
test
imul
mov
add
pop
sahf
push
subb
shrb
pop
sbb
add
mov
cli
subl
cmc
ss
hlt
insb
mov
and
cmp
insb
shll
outsl
out
insl
movsl
add
clc
add
aas
icebp
pop
cmp
mov
js
xor
int
sub
jnp
test
ja
mov
addr16
inc
and
dec
push
and
inc
adc
aad
mov
dec
sahf
movsb
repnz
loopne
jle
push
inc
aam
or
mov
jg
cmp
xchg
mov
cmp
sbb
adc
sub
in
sbb
nop
nop
nop
nop
nop
imul
in
fisubrs
ror
lock
stos
int
ja
inc
xor
icebp
call
in
fildll
repz
adc
lahf
outsl
mov
or
in
ljmp
call
int3
int3
int3
bound
sbb
imul
inc
add
enter
enter
sub
cltd
mov
cli
xchg
out
mov
lret
ret
xchg
das
and
cmp
add
sub
xchg
jae
and
es
adc
adc
add
dec
add
add
dec
pop
sbb
push
in
dec
xchg
cmp
and
outsb
ss
ret
orb
pop
add
ret
push
idivl
rcl
outsl
jnp
mov
pop
pop
xor
mov
dec
xchg
ret
loope
movsb
les
int3
int3
sbb
mov
je
jle
mov
nop
nop
nop
nop
nop
pop
test
add
xor
dec
dec
dec
mov
lods
sbb
push
push
xchg
outsb
adc
es
mov
mov
mov
leave
inc
maxps
push
sahf
jo
jl
fidivs
add
jecxz
mov
mov
in
shl
pop
push
nop
nop
nop
nop
nop
mov
dec
xchg
dec
cmp
repz
jo
cmc
test
add
ficompl
movd
mov
les
inc
adc
push
or
mov
adc
cltd
call
fbld
nop
nop
nop
nop
nop
add
cld
add
pusha
shl
lods
or
add
test
xor
lods
pop
jge
xlat
nopl
sub
jbe
xchg
roll
js
sub
loopne
lret
int3
int3
int3
int3
int3
add
pop
repnz
mov
pusha
jge
cli
sti
or
push
mov
arpl
mov
pop
push
xor
dec
imul
xchg
push
daa
mov
dec
add
pop
add
cmp
stc
and
push
inc
arpl
imul
in
out
and
and
shrb
ret
add
pop
stos
mov
sarl
jle,pt
adc
xor
rcrb
rclb
outsb
in
mov
lods
movsb
dec
je
add
add
xchg
or
pop
mov
push
sub
mov
ror
adc
repz
shl
push
mov
adc
ss
sub
cmpsl
mov
nop
nop
nop
nop
nop
jno
int3
int3
int3
int3
pop
ret
jg
insb
sahf
mov
jo
pop
rcrl
call
mov
ficoml
data16
outsl
outsl
call
ljmp
in
das
jb
int3
int3
int3
int3
cmp
daa
andb
cmpsl
mov
fs
inc
cld
mov
fucom
pop
pop
leave
pop
cmp
push
movsb
fstps
daa
and
cwtl
aas
out
sub
loope
es
mov
ja
imul
mov
dec
xchg
lret
into
test
cmp
data16
pop
and
out
push
repnz
jae
sbb
inc
adc
lea
mov
add
stos
and
movsl
add
inc
push
test
pop
sti
push
and
cmp
imul
fcmovnbe
aad
push
lods
out
add
pushf
fstpl
lret
call
and
andl
jecxz
sub
fiaddl
adc
or
adc
in
imulb
jecxz
adc
cmpsl
inc
mov
nop
nop
nop
nop
nop
mov
pop
sbb
pop
push
mov
cmp
add
sbb
out
and
test
mov
xchg
push
loopne
and
ror
pushf
outsl
xor
add
mov
into
and
mov
lret
stos
das
or
iret
or
xchg
add
jns
inc
ljmp
jae
jp
and
js
dec
fldcw
hlt
xor
jp
cmpl
lock
ds
imul
pop
push
mov
jmp
add
mov
lods
jmp
cli
pop
mov
nop
nop
and
mov
pop
int3
int3
int3
int3
int3
mov
and
out
fstpl
add
xor
gs
popa
sub
fs
in
enter
int3
int3
int3
aas
pop
ds
out
mov
ficompl
mov
fisubrs
js
lret
aas
inc
movsl
mov
push
mov
fwait
stc
pop
loopne
jbe
xor
mov
pushf
xchg
adc
shll
sti
pop
jne
cs
cmp
mov
xchg
aaa
mov
lods
imul
inc
mov
jle
dec
lcall
cmp
adc
or
cld
jmp
stos
push
insl
pop
mov
dec
stos
mov
xor
enter
jnp
rcrb
cmc
es
aam
iret
push
loop
das
addr16
mov
sub
cmp
inc
clc
inc
rcll
dec
dec
mov
push
fdivl
or
push
push
and
push
and
stos
ja
inc
mov
loop
cli
out
nop
nop
nop
nop
nop
divps
stos
lret
daa
inc
xchg
jno
mov
jnp
cltd
adc
or
nop
push
fistps
push
sbb
into
jae
or
popa
cmpsl
cmpsl
fmulp
aas
sbb
out
jmp
fistpll
push
sbb
sbb
notl
std
mov
push
lret
jp
int
jl
xor
shrl
jns
std
inc
nop
nop
nop
nop
nop
lahf
je
and
xor
add
mov
mov
mov
mov
stc
subb
in
les
jne
clc
stos
jo
jl
jmp
fcmovne
stos
imul
inc
lods
in
stc
mov
test
cmovbe
mov
mulb
add
int3
int3
int3
int3
int3
addb
btc
in
cmp
inc
or
fimuls
sub
jmp
rcrl
mov
imul
ret
pop
xchg
repz
ss
pop
ret
or
and
cwtl
add
xor
xchg
repz
mov
inc
push
xchg
mov
jmp
xor
xor
add
outsl
test
mov
add
in
loop
cmp
sbbl
ret
pop
std
ss
dec
gs
mov
sub
adc
sti
mov
xchg
mov
add
sbb
nop
nop
nop
nop
jg
inc
jl
xorb
test
test
xchg
lea
scas
lds
test
imul
adc
out
xchg
sbb
insb
pop
stc
cmc
add
xor
enter
test
adc
andl
stos
cld
das
or
push
mov
jb
out
push
daa
adc
inc
jno
sub
or
loope
icebp
fdivrl
mov
xchg
or
pop
xchg
bound
ljmp
mov
cmp
add
cmp
cmc
int
js
in
inc
and
push
lods
gs
dec
std
adc
rcr
popa
adc
adc
xchg
inc
mov
shlb
push
inc
outsl
stc
call
int3
int3
int3
int3
push
fidivl
outsl
cmp
add
pop
mov
pushf
add
sub
or
xlat
mov
imul
adc
mov
cltd
push
hlt
mov
xor
cld
jno
shrb
bound
iret
xor
push
xchg
jg
mov
mov
dec
xor
sbb
xor
adc
in
mov
ret
lea
out
inc
sbb
mov
add
xchg
subl
sbb
cwtl
imul
aam
push
sub
into
ss
sub
adcb
jle
inc
ror
add
mov
push
stos
lahf
jle
add
arpl
sahf
sbb
push
add
lock
repnz
adc
test
push
movb
cmpsl
xchg
push
adc
inc
add
js
call
in
pop
mov
adc
mov
out
sub
mov
dec
shl
sub
sti
push
int3
int3
int3
int3
int3
ss
fists
push
insb
push
jg
int
or
leave
sarl
repnz
test
and
jns
jns
inc
jbe
cmpb
fstpl
adc
pop
jecxz
andl
lret
aam
sti
lds
mull
clc
pusha
sub
add
push
add
sbb
or
sub
fmul
xchg
cltd
int3
int3
int3
int3
int3
arpl
das
xchg
fbstp
arpl
icebp
inc
ror
int3
int3
int3
int3
out
insb
jno
cmp
mov
add
das
and
rorb
dec
mov
mov
mov
out
push
daa
out
fildl
je
mov
mov
xchg
push
gs
insb
mov
pop
adc
shrl
fmull
nop
imul
add
fsubs
lods
cmpsb
add
loope
imul
stos
pop
aam
sbb
or
jg
cwtl
cmpb
addr16
push
lods
cmpsl
or
sbb
sub
sbb
ljmp
ficompl
pop
pop
cmp
andl
lahf
mov
pop
ficoml
mov
mov
pcmpeqw
xchg
pop
popf
psubq
hlt
add
loope
cwtl
push
clc
shlb
outsb
subb
pop
outsb
call
roll
jmp
and
cmp
inc
jle
push
scas
cwtl
mov
and
dec
inc
cmp
adc
push
cmp
and
lret
mov
adcb
sbb
add
cmc
xor
mov
cli
dec
sbb
clc
pop
add
dec
cmp
jg
cmp
stc
cmpsb
push
shlb
mov
mov
and
xchg
out
faddp
jp
out
mov
mov
add
sar
sahf
and
and
pop
outsl
jle
pusha
jle
mov
xor
icebp
push
jbe
mov
test
xchg
or
push
jmp
sbb
push
mov
je
xchg
mov
repnz
aam
or
loopne
out
ret
test
mov
fidivrs
add
insb
fcoms
xor
add
inc
xchg
cmp
cmp
xor
xchg
ss
fdivs
jne
xchg
mov
adc
fists
xchg
push
push
mov
xlat
std
push
xchg
ffree
dec
jae
rcrl
scas
add
sub
add
push
lock
mov
jp
add
scas
movd
negb
lret
arpl
lcall
imul
jns
testb
mov
pop
pop
or
cmc
sarb
or
imul
push
mov
popa
jl
sub
dec
jmp
cmpsl
shl
cmp
pop
movsb
in
mov
mov
fnsave
adc
in
mov
inc
outsl
or
jnp
sarb
dec
jp
lcallw
in
jl
lods
in
js,pn
fcoms
adcl
into
flds
mov
or
sub
repnz
out
mov
add
shll
popf
cmp
into
cmpsl
stos
clc
sub
xchg
aam
fildl
inc
jmp
sarl
lods
int3
int3
int3
int3
int3
mov
scas
lret
dec
or
popa
xchg
xchg
movsb
scas
and
mov
dec
mov
mov
jae
sbb
std
or
scas
nop
nop
nop
nop
nop
in
test
cmp
dec
lods
nop
nop
nop
nop
nop
subb
js
cld
jae
rcll
add
test
sbb
arpl
pop
lret
fisubs
xchg
mov
mov
mov
xor
mov
test
mov
popf
inc
sub
ret
cmp
inc
inc
popf
fildl
cmp
mov
rcl
xchg
xor
fbstp
pop
lcall
lret
outsb
inc
push
xchg
loope
and
xor
mov
rorl
repnz
adc
hlt
cmpb
xor
aas
notb
loope
jb
testb
imul
mov
mov
icebp
hlt
dec
sub
sub
xchg
mov
gs
in
sub
xor
push
leave
sub
inc
push
je
movsl
sbb
adc
mov
sbb
sbb
xor
add
or
popa
adc
ficompl
cmp
pushw
gs
je
rcrb
shrb
ja
sbb
js
or
pusha
scas
cmp
sub
fidivs
stc
std
icebp
push
and
imul
orl
imul
sbbb
add
aad
insb
inc
mov
es
add
imul
pusha
dec
sbb
or
dec
sahf
arpl
or
sub
jecxz
or
js
sub
fs
gs
pushf
mov
mov
nop
nop
nop
nop
nop
and
test
cli
mov
mov
xor
push
mov
pop
or
dec
std
xlat
inc
pop
test
jp
movsb
or
int3
int3
int3
int3
int3
adc
lea
sbb
add
sub
dec
in
out
push
fiadds
jge
pop
je
test
in
add
cmp
jecxz
xchg
aas
dec
xor
and
cld
mov
adc
test
bound
and
or
adc
jmp
xchg
rclb
stc
sub
push
and
sub
cmp
add
nop
nop
nop
nop
nop
aas
jle
pushf
repz
or
das
dec
inc
in
sub
aam
loop
mov
cmpsl
or
int3
sub
jg
std
js
pop
pop
idivl
mov
jg
and
xorl
pop
cmp
adc
cmp
inc
adc
and
mov
lds
xor
xchg
loop
rolb
sbb
faddl
or
add
dec
push
mov
xchg
imulb
jge
add
dec
jmp
sub
js
or
add
jne
sbb
jo
cli
loop
iret
xchg
stos
xchg
mov
into
out
sbb
and
enter
pop
or
sbb
int3
int3
int3
int3
int3
push
mov
push
stc
fisttps
loope
add
push
aaa
cmc
xor
icebp
scas
mov
loop
and
inc
fbstp
push
sbb
add
cmp
mov
push
das
jge
inc
push
loopne
stos
inc
std
fcmove
pop
xchg
push
es
shrl
ja
movsb
add
push
xchg
push
outsl
ja
add
cmp
sub
jecxz
es
pop
xor
push
test
add
insb
aad
mov
push
sub
xor
out
pop
data16
in
mov
in
jge
test
daa
and
pop
pop
inc
cmp
mov
sub
cmpsb
pop
imul
int3
mov
pushf
popa
mov
inc
sarb
les
sub
mov
fidivs
addl
add
inc
xchg
xchg
cmc
mov
ficoms
mov
jae
ja
sbb
push
bound
pop
push
pop
mov
and
add
xor
std
imul
das
jmp
jne
stos
pop
mov
rorb
ja
inc
push
in
cmp
push
add
sbb
dec
addl
or
out
cmpsb
mov
std
jb
mov
ds
or
pop
shrb
sub
enter
cli
mov
jbe
add
jns,pn
ret
jp
xchg
jl
dec
rcrl
fdivrl
shrb
nop
nop
nop
nop
and
cli
xchg
sub
cld
imul
or
into
loopne
push
add
ss
cmp
and
sbb
and
xchg
std
in
cmp
xchg
repnz
dec
repnz
out
pop
fisubrl
mov
sbb
imul
repz
sti
addr16
jg
push
cmp
pop
sub
dec
mov
xchg
test
mov
sub
xlat
loop
in
mov
into
dec
stos
imul
mov
jno
dec
pop
arpl
dec
mov
nop
or
scas
adc
jne
fwait
test
adc
cmp
dec
push
ret
sub
jae
xor
je
mov
xchg
mov
mov
jl
nop
nop
nop
nop
nop
xchg
imul
stos
jbe
lock
jbe
and
enter
aam
dec
and
in
out
pop
push
arpl
add
sbb
iret
imul
xor
gs
push
pushf
sbb
shl
xor
test
and
les
cltd
cwtl
in
pop
xor
divb
adc
xchg
cltd
or
jle
outsl
data16
aam
dec
mov
cmp
lea
xchg
mov
ret
out
xchg
jmp
stc
data16
and
sub
xor
push
cmpsb
mov
push
popa
mov
pop
xor
outsl
push
xor
mov
jg
sub
push
jo
push
in
pop
ss
iret
mov
mov
add
enter
loopne
nop
nop
nop
nop
push
idivl
jbe
test
arpl
cmp
jno
rolb
cs
jno
inc
std
sub
stos
cmp
stos
xorb
push
ret
mov
push
sub
add
cmc
icebp
out
mov
or
imul
nop
nop
nop
nop
cmp
mov
iret
loope
and
sbb
and
cmp
cmp
test
inc
je
test
stc
dec
lcall
fdivl
push
mov
mov
pop
and
sub
inc
add
leave
push
sub
mov
gs
enter
push
sub
add
les
xchg
cmp
out
xchg
or
fcoms
fs
pushf
adc
sub
iret
push
sub
fwait
xor
fistl
push
out
dec
sahf
cmp
mov
xorl
int3
int3
int3
int3
int3
int
cltd
jns
or
popf
cli
cwtl
and
xor
inc
jae
int3
int3
int3
int3
int3
cld
mov
xchg
sbb
mov
push
test
or
and
mov
pop
loope
mov
mov
fwait
inc
mov
lods
mov
mov
out
mov
std
mull
adcb
or
leave
dec
movb
fdivrl
push
je
adc
cmp
mov
pop
jg
and
dec
shll
sbbl
rcrb
add
jnp
ja
mov
jae
mov
xor
inc
mov
mov
jne
into
xor
sldt
pop
xchg
and
iret
std
sub
scas
add
add
sub
outsl
jbe
pop
jb
jecxz
int3
int3
int3
int3
dec
xor
or
mov
outsl
andl
dec
lods
xchg
xlat
pop
fucomip
scas
ret
sahf
inc
mov
mov
add
pop
mov
ljmp
aaa
inc
jecxz
leave
add
loop
mov
push
push
cmp
das
mov
out
dec
pop
mov
pop
sbb
loopne
mov
mov
fisttps
shrb
jecxz
pop
push
mov
lcall
sti
xor
rorb
rcrl
add
pop
push
arpl
mov
jge
cli
lahf
push
add
jo
fadd
xchg
aaa
cmp
leave
jle
sbb
add
daa
add
push
and
dec
jb
mov
push
mov
xor
mov
push
enter
push
pop
sub
add
mov
sar
xchg
shrl
xchg
psrld
loope
cwtl
lret
dec
push
fcom
push
mov
imul
fstpl
cmp
xchg
enter
push
add
jbe
push
ret
data16
std
ds
mov
fmulp
push
cmp
imulb
xchg
push
test
sbb
and
dec
std
cmp
jle
mov
push
fsubrp
sbb
stc
inc
test
sar
add
scas
mov
jge
nop
nop
nop
nop
nop
pop
and
xchg
sub
cltd
mov
insb
mov
and
lcall
mov
jge
or
push
cmp
inc
imul
dec
jge
pushf
stos
stos
lret
xorb
cmp
sbb
xchg
mov
repnz
das
sbb
lds
push
mov
sarb
xor
jae
je
cltd
dec
inc
jne
cwtl
adcb
in
fisttpll
xchg
fists
adc
mov
inc
adc
adc
les
adc
fadds
shlb
out
jae
sub
pop
pop
scas
lcall
dec
mov
inc
inc
mov
push
jo
pop
dec
ss
push
add
add
icebp
leave
in
mov
add
sub
push
inc
mov
outsl
mov
cmpsb
fcoms
or
cmpsb
adc
push
push
out
or
mov
cmp
fidivs
add
push
shll
pop
xchg
ljmp
cmp
cmp
cs
sub
sbb
leave
fstl
jle
push
mov
push
add
jmp
mov
dec
mov
mov
inc
pop
loop
jmp
iret
or
add
push
in
pmaddwd
xor
sbb
sbb
pop
jle
mov
push
mov
mov
insb
add
loop
fisttpl
lds
mov
int
sbb
mov
add
cmpsl
jno
or
jno
inc
loope
jo
lahf
in
sbb
jb
arpl
xchg
inc
push
xlat
mov
mov
adc
jge
jmp
ja
icebp
cmc
xchg
sub
loope
loope
es
pop
jmp
imul
sbb
in
sub
dec
adc
add
add
shrb
loope
jl
fnstenv
repz
into
sub
and
mov
jmp
cmp
fwait
adc
push
ret
nop
nop
nop
nop
nop
rorb
inc
or
jno
or
lods
aad
xor
xchg
pop
jmp
cmp
mov
popf
xchg
xor
aas
pop
mov
loop
call
or
cld
mov
xchg
sbb
sub
pusha
cs
rcl
dec
push
divb
push
cmp
mov
add
jno
push
or
stc
popa
add
and
in
test
outsl
outsl
es
ret
cmp
pop
or
arpl
test
nop
nop
nop
nop
adc
lds
jle
push
sub
add
in
clc
enter
mov
add
leave
int
insl
sub
add
mov
sbb
cmpsl
adc
aam
push
sti
mov
rcrl
imul
subb
sbb
xchg
scas
xchg
jp
in
dec
enter
jns
add
add
out
lods
mov
jne
test
sti
pushf
mov
xor
push
ficoms
popf
push
in
add
push
inc
out
fiaddl
int3
int3
mov
mov
jb
insb
das
movsl
int3
int3
int3
int3
int3
in
sbb
cs
dec
mov
insb
sarb
xchg
adc
xor
lret
mov
add
xchg
adc
mov
ja
jl
ss
mov
dec
cmpb
add
xor
or
xlat
es
jecxz
push
arpl
inc
pop
cmpsl
xchg
sbb
scas
inc
daa
test
mov
sti
adc
daa
cmp
int3
int3
int3
int3
push
push
mov
fwait
xchg
shrb
dec
adc
push
xchg
cmp
mov
test
packuswb
outsb
inc
pop
call
xchg
push
xchg
xchg
stos
xchg
call
imul
les
sahf
mov
loop
xor
movq
in
mov
ja
lock
xchg
lret
jnp
and
dec
test
cld
out
and
push
or
push
div
iret
inc
insl
push
test
shlb
test
scas
cmp
cmp
xor
imul
mov
mov
rolb
fcomip
mov
and
in
ja
dec
mov
rclb
xor
rcrl
mov
ret
sub
inc
mov
stos
aad
js
int
sbb
cmp
add
mov
and
add
fsubr
out
movsb
cwtl
je
cld
jmp
cmp
push
pop
cltd
in
lods
aad
shrl
inc
dec
jg
insl
imul
push
cli
outsl
add
dec
fwait
xor
pop
out
inc
sar
test
sbb
mov
fiadds
gs
adc
add
jp
mov
sar
or
add
jg
or
mov
adcb
cwtl
add
scas
push
sub
dec
jp
vpaddsb
das
push
fiadds
dec
call
mov
cmp
jne
sbb
add
sbb
jns
mov
xchg
sbb
rcrl
inc
mov
sbb
adc
sbb
add
jmp
jo
pop
and
xchg
add
nop
mov
loop
pop
or
add
cmp
or
jb
lods
add
in
and
dec
cmp
lret
pop
insb
icebp
jo
out
test
push
andb
leave
pop
setg
inc
dec
scas
shr
imul
dec
pop
orb
add
nop
nop
movsb
rcrl
cmpsb
pop
jb
jnp
jmp
cmc
mov
fwait
and
shll
or
cld
or
lods
inc
inc
jb
test
jle
in
rolb
insl
popa
inc
testb
ss
scas
adc
push
mov
out
movsl
xor
insl
push
std
mov
mov
and
insl
lret
mov
mov
add
dec
mov
dec
es
add
adc
shlb
rolb
push
loop
lea
jmp
pop
sbb
hlt
inc
sub
xchg
sub
or
ja
pop
pop
fsubl
aad
pop
mov
dec
mov
js
test
pushf
mov
es
fisubs
adc
xor
mov
test
lahf
dec
xor
dec
cmp
mov
jge
test
scas
lods
xor
pop
jb
xor
imul
dec
popf
rcrl
mov
add
scas
mov
das
lret
dec
cli
pushf
add
sub
and
mov
test
out
insb
cmp
fadds
lret
negl
shrl
add
rcrl
mov
mov
and
cltd
imul
test
lock
sub
add
lods
xor
jp
ds
cmp
inc
ror
xchg
repnz
add
ss
mov
cmpsb
cmp
mov
in
lods
add
lds
xchg
xchg
dec
or
jbe
add
mov
push
sar
out
pop
inc
sahf
xchg
movsl
and
mov
sbb
mov
xchg
outsb
rcrl
mov
ret
addr16
fwait
arpl
cwtl
push
daa
cmpsb
mov
xchg
mov
movsl
ja
mov
mov
sub
pop
into
clc
ficoms
orb
mov
xor
es
rcll
add
mov
cli
mov
dec
push
xchg
add
test
fists
outsb
push
dec
int3
int3
int3
int3
int3
push
jns
and
cld
push
jae
jnp
xor
lds
repnz
fistpl
sub
cmc
das
push
nop
nop
nop
nop
nop
ret
ret
addr16
adc
dec
ja
xchg
cmp
data16
divl
mov
pop
push
aaa
inc
lea
push
cmc
sub
stos
popf
xchg
rorl
mov
mov
jo
pop
push
mov
out
pop
pop
aaa
push
pop
xor
mov
ret
in
shll
jno
dec
inc
pop
mov
pop
mov
fwait
inc
mov
test
and
frndint
jae
sti
mov
insb
cmp
adc
call
aas
fdivp
insb
mov
push
jmp
and
callw
mov
sbb
jnp
lds
imul
cmpsl
fmull
int3
int3
push
push
jge
or
xchg
sbb
sub
pop
sbb
fld
xorb
daa
xor
sti
inc
mov
sbb
cmpsb
inc
push
or
adc
dec
inc
push
into
cld
hlt
xor
dec
fnstcw
dec
cmp
and
inc
adc
push
mov
xor
or
mov
sub
movl
or
xchg
mull
xorb
shr
cwtl
jmp
repz
push
subb
mov
stos
ret
pop
mov
gs
mov
sub
add
mov
cld
inc
pop
and
add
sbbb
mov
fidivrs
push
sub
add
int3
int3
int3
int3
int3
aam
sub
gs
lods
lods
call
lds
adc
mov
adcb
ljmp
lods
mov
ret
jno
in
ds
add
pop
das
cmp
fnstsw
pop
movsl
lcall
dec
mov
or
roll
dec
jl
bnd
inc
movsb
mov
push
xor
dec
mov
mov
xor
dec
adc
fnstsw
cmp
jno
idivl
push
lcall
xchg
jo
jge
fbstp
les
jge
sbb
jp
scas
sub
dec
or
adc
add
add
jne
push
cld
mov
sbb
cmpsb
adc
dec
or
out
stc
jmp
testl
popf
pop
mov
and
call
je,pt
int
nop
nop
nop
nop
nop
lahf
adc
pop
mov
and
cmp
leave
cwtl
ljmp
outsb
xlat
dec
push
push
sub
mov
jecxz
mov
xchg
add
lret
mov
call
sub
bound
xchg
pop
cmp
mov
lret
mov
jp
rcl
pop
fsubl
xchg
lret
mov
dec
adc
xchg
mov
stc
dec
aas
cwtl
int
fstl
jp
clc
jecxz
ds
lahf
dec
fiadds
jg
shr
dec
clc
or
push
xor
xchg
sub
add
jb
sub
sbb
sbbl
add
sub
cmc
inc
lret
sub
popf
sbb
mov
xor
sub
pushf
mov
cmpsb
and
dec
fbstp
les
dec
orb
js
xchg
popl
dec
sbb
add
cmp
pop
xchg
and
adc
or
xor
add
lcall
out
call
cmp
inc
aam
or
mov
mov
add
call
das
movsb
adc
mov
inc
dec
out
stos
adc
gs
mov
subb
or
add
mov
or
mov
outsl
cmpsl
mov
imul
out
fs
sub
loop
adc
mov
dec
mov
lret
add
call
push
cmp
add
add
cltd
mov
scas
icebp
loope
sbb
jge
lods
pop
clc
movsb
add
push
push
dec
loopne
sbb
push
pxor
sti
inc
mov
inc
add
add
test
xor
bound
in
pop
jmp
les
cmp
ss
add
addr16
push
in
mov
and
xor
and
xor
insb
ret
cmp
shlb
lods
sub
add
into
popf
aad
cmpsl
js
in
inc
imul
jo
out
mov
stos
mov
fs
add
pop
inc
xchg
in
cmp
test
jmp
jg
das
rcll
das
adc
xchg
sti
mov
sub
dec
mov
sub
cmp
data16
out
in
out
fwait
mov
push
enter
jo
out
xor
loop
xchg
adc
rclb
and
push
data16
mov
ljmp
or
sbb
pop
mov
and
ret
out
sahf
push
dec
or
jl
mov
jns
ljmp
bound
xchg
cmp
lret
sldt
jge
movsb
lcall
cmp
pop
sub
sub
add
je
add
inc
outsb
mov
cwtl
int3
int3
int3
int3
int3
adc
enter
fld
bnd
cmp
cmp
push
jecxz
dec
out
in
fs
es
lock
cli
imul
xlat
setae
mov
pop
scas
adc
mov
sbb
adc
mov
add
test
jg
cmc
sub
adcb
add
aaa
pop
mov
sub
fmull
push
pushf
mov
or
push
push
push
pop
outsb
push
cltd
roll
std
mov
scas
and
or
nop
nop
nop
nop
nop
fnsave
pop
cmpsb
mov
call
mov
sbb
lods
ret
pop
mov
inc
mov
jmp
frstor
insb
dec
xor
sbb
xor
mov
out
ljmp
stos
mov
jmp
jge
add
xchg
mov
insb
inc
fwait
xchg
data16
es
mov
xlat
test
subb
mov
xchg
movsl
xor
repnz
xor
push
das
repz
push
mov
dec
loop
movsl
jb
daa
lcall
aaa
sub
cmp
jnp
xor
lret
aas
loop
clc
cmp
xchg
repz
dec
pop
dec
adc
out
or
adc
int
inc
sti
adc
dec
pop
mov
fcomi
dec
out
inc
enter
pop
std
dec
les
gs
and
jbe
xor
xor
xor
mov
lods
cmpl
add
sbb
xchg
test
mov
cmp
orb
cmp
jns
std
jecxz
mov
fcompl
in
inc
std
out
and
movsl
dec
lea
mov
inc
test
fldcw
add
add
sbb
test
mov
pop
insl
int3
int3
int3
int3
rorb
push
lcall
add
xchg
cmp
and
ds
shrl
or
xlat
das
mov
xor
dec
and
insl
cmc
jle
pop
jb
call
mov
dec
cmp
loop
mov
cld
gs
ss
dec
mov
iret
xchg
stc
push
jle
repnz
add
cli
iret
stos
inc
insl
or
daa
ss
lods
in
out
jp
sub
nop
nop
nop
nop
jge
sbb
cwtl
push
lods
outsl
arpl
mov
ss
add
xor
pop
xor
fistps
xor
fidivs
xchg
adc
lods
fdivl
lds
xchg
sbb
xor
les
mov
jne
sub
cmp
sub
cmpsb
mov
adc
mov
pop
popf
shr
daa
jmp
lods
js
cmp
daa
mov
fadd
dec
ret
sar
icebp
mov
jl
adc
add
pop
pop
jns
fldcw
test
and
xchg
repnz
and
jnp
adc
nop
nop
nop
nop
nop
call
aaa
jo
mov
insl
xor
lock
rcrb
in
lds
js
lock
sbb
aaa
ss
call
sub
sub
int3
int3
int3
int3
ljmp
nop
popa
fsubr
push
adc
adc
out
sub
ljmp
int3
int3
int3
jle
push
mov
xorb
test
das
movsb
stc
push
es
pop
into
aaa
xchg
inc
rolb
sub
add
iret
xchg
mov
imul
ret
push
xchg
dec
movsb
add
bound
popa
jg
sbb
out
jb
pop
test
cwtl
aaa
cmp
nop
nop
nop
nop
nop
fidivs
mov
inc
aas
test
sbb
add
rcrl
je
pop
leave
mov
dec
adc
sbb
mov
dec
ret
ds
xor
clc
lods
xor
loope
add
imul
sub
sub
stos
mov
in
cmp
and
mov
mov
sub
fisubrl
lods
das
pop
xchg
data16
dec
or
and
cmp
scas
lds
jb
loope
xor
jl
sub
hlt
cmp
push
dec
push
pop
ret
push
gs
lock
data16
add
insl
xchg
repz
stos
rcll
repz
outsl
call
push
push
ds
les
scas
push
dec
adc
xor
ret
or
pop
mov
mov
adc
or
scas
adc
add
add
and
shll
push
lahf
push
mov
cli
sub
jmp
sbb
add
mov
or
loop,pt
mov
pop
roll
divb
mov
push
xor
hlt
repnz
jno
inc
push
leave
pusha
cmc
jl
js
mov
dec
xchg
add
and
fmulp
cmpsb
sbb
insb
movb
jge
mov
push
xchg
sbb
mov
mov
cli
dec
xchg
dec
fistpl
mov
leave
cmp
imul
xor
push
mul
clc
push
xchg
or
les
gs
sbb
jns
lret
cmpsl
dec
jb
loop
in
add
popa
jb
out
push
insl
push
cmp
add
gs
pop
push
lret
add
push
out
pusha
out
sub
pop
cmp
add
dec
test
or
xorb
stos
loope
inc
ret
add
cltd
adc
jb
mull
cmc
popa
fdivl
test
hlt
lret
ds
out
sbb
cmpb
fisubrl
xor
sbb
add
add
mov
or
xchg
into
addl
fdivs
xor
sub
xchg
xchg
and
imul
or
sbb
mov
add
mov
mov
sub
xor
add
div
lods
xor
or
adc
lret
mov
or
in
std
jne
stos
mov
nop
nop
nop
xchg
xor
adc
loop
rolb
jmp
fs
mov
outsb
ret
pop
pop
mov
pop
pushf
mov
notb
es
pop
das
mov
sub
jnp
push
loope
lds
nop
nop
nop
nop
nop
int
ss
das
push
mov
lea
pop
sbb
pop
mov
cmp
aas
in
pushf
outsb
daa
jle
cld
les
iret
orps
out
xchg
push
mov
pop
mov
fstpl
sub
je
jge
arpl
cli
mov
add
lret
aaa
add
lcall
adcl
insl
jecxz
sbb
add
inc
add
pop
pop
pushf
push
push
daa
add
pop
das
mov
xchg
ss
out
cli
mov
and
pop
fdivrp
adc
fpatan
sarb
shrl
inc
stc
je
popa
jo
inc
and
jecxz
test
mov
dec
and
cmp
pop
sub
push
add
fwait
xlat
enter
add
dec
pop
xor
les
adc
loopne
out
xor
add
pop
cmp
push
cmpsl
sbbb
stos
dec
pop
dec
arpl
sahf
xchg
lods
in
xor
add
adc
pop
mul
jmp
pop
jb
stos
icebp
dec
rcll
inc
subl
divb
mov
or
stos
inc
add
std
adc
cmpsl
add
push
xchg
and
out
mov
adc
pop
pop
out
mov
movl
mov
mov
cltd
jns
push
loope
cmp
fwait
lea
leave
add
xchg
sub
cmpsl
imulb
js
add
mov
sbbb
add
and
fwait
rcl
iret
aaa
adc
nop
pop
jp
push
jge
loope
xchg
or
dec
mov
arpl
loope
cmpsl
fistl
sub
shl
xor
sub
sbb
xchg
add
add
add
cmp
fiadds
xor
out
sbb
xchg
and
ret
cwtl
std
mov
js
vmread
clc
add
fimull
test
adc
aaa
lock
push
dec
adc
and
sbb
lock
lret
aas
pusha
test
lret
inc
filds
fisttpll
dec
add
lret
movsb
outsl
aaa
adc
jne
out
xchg
hlt
adc
push
xchg
or
cmp
xchg
dec
outsb
mov
mov
lea
nop
push
jo
pop
push
cmp
cmpsl
xchg
cld
lock
xlat
sbb
std
xchg
nop
nop
nop
cmc
jl
push
inc
int
inc
pop
ja
mov
pop
hlt
xchg
mov
pop
mov
jo
fnstcw
sub
lahf
fsubr
inc
xchg
scas
lcall
adcb
pop
ja
jecxz
mov
jae
iret
xor
inc
dec
mov
aad
daa
cmp
jae
xorb
cmpsb
mov
scas
cmp
shlb
or
out
lods
dec
jno
fsub
hlt
xchg
popa
jecxz
sbb
mov
cmpsl
mov
xchg
or
adc
fmull
xlat
das
lahf
jbe
aam
xchg
cltd
mov
adc
or
scas
daa
cmp
xor
dec
inc
cmp
loop
push
push
xor
pop
mov
xchg
imul
mov
aaa
arpl
pop
xor
sub
stos
aaa
outsb
sub
adc
es
in
add
jecxz
enter
and
jbe
add
iret
xor
movsb
lds
or
add
mov
pop
lods
inc
xchg
iret
mov
mov
repz
xchg
lgs
nop
nop
nop
nop
nop
pushf
sahf
pushf
imul
lea
nop
nop
nop
nop
nop
mov
iret
aam
inc
scas
push
sub
aas
in
cmp
adc
cli
cmp
movsl
js
mov
xor
fld
dec
fldt
jno
je
push
mov
cs
repnz
sbb
jmp
add
out
mov
jmp
sarl
add
cs
xchg
imul
ret
pop
inc
scas
gs
jl
fdivr
ds
sbb
pop
les
in
pop
frstpm(287
div
sbb
cmc
flds
ss
jnp
mov
sbb
andb
fdivrs
inc
lods
adc
shlb
pop
fsubr
iret
sub
lods
int3
int3
int3
int3
int3
add
cli
aad
dec
shl
loopne
add
jp
dec
and
add
in
pop
lret
addr16
scas
adc
xor
inc
mov
mov
adc
mov
jno
add
jbe
test
pop
ljmp
lds
movsl
das
adc
sub
outsl
fisttps
stos
mov
push
scas
dec
sti
adc
mov
adc
mov
loope
jne
push
idivb
test
mov
sub
mov
sbb
out
leave
daa
and
test
adc
ret
shlb
xchg
xlat
bound
addr16
mov
jb
jecxz
je
sbb
xchg
ljmp
roll
dec
push
and
dec
mov
aaa
pop
stc
sbb
pop
and
and
xor
mov
in
int3
int3
int3
int3
inc
dec
mov
push
mov
out
push
xor
mov
add
add
xchg
lea
rorl
pop
pop
rcr
loope
popf
sbb
gs
adc
xchg
shll
xchg
cmpsb
mov
popa
lahf
push
clc
addb
nop
nop
nop
nop
nop
cmpsl
cmp
push
fnsave
out
add
adc
insb
ljmp
loope
insb
mov
mov
inc
xchg
and
pushf
sbb
add
jbe
mov
mov
dec
aas
test
pop
or
adc
stos
push
xor
rcrl
jno
fcompl
mov
mov
xchg
lcall
cmpb
es
xor
test
and
sub
imul
loopne
mov
sub
mov
cmp
enter
jp
push
add
inc
mov
inc
pop
push
enter
negl
add
dec
bound
jl
cld
pop
xor
ja
xlat
int
inc
ficomps
pop
test
add
int3
int3
int3
int3
sbbb
push
or
pushf
push
xchg
insl
addb
mov
push
sarl
push
mov
sub
sub
ret
loop
cwtl
sub
cld
dec
mov
push
vmulpd
mov
add
ficompl
imul
push
xor
add
sub
add
jp
and
add
add
gs
in
mov
xor
jp
ljmp
adc
mov
inc
lcall
mov
clc
mov
rcrb
lcall
ret
addb
ret
mov
xchg
jg
pop
or
shrl
add
and
push
scas
sub
mov
ds
add
inc
ficomps
pop
push
mov
cmp
stos
adc
loopne
loopne
leave
es
mov
jo
xchg
into
popa
push
enter
pop
sarb
out
sbb
dec
mov
or
iret
fadds
add
outsb
adc
mul
mov
lock
clc
xchg
out
xchg
repnz
sti
jb
or
inc
adc
nop
nop
nop
nop
nop
test
lock
dec
adc
pop
leave
outsb
push
lret
jp
and
int3
int3
int3
int3
int3
lods
int3
int3
int3
int3
int3
sbbb
imul
jecxz
or
aaa
inc
cmp
push
and
jecxz
dec
rcrb
inc
jnp
xchg
xchg
add
mov
sbb
lahf
dec
fsubs
mov
mov
out
test
jbe
mov
inc
je
call
cmp
nop
nop
nop
nop
pop
sbbl
gs
enter
ja
jge
mov
adc
mov
stc
ds
mov
jae
mov
add
inc
cmp
add
mov
dec
scas
arpl
pop
jae
sbb
shl
popf
adc
jmp
nop
nop
mov
es
iret
pop
adc
xlat
adc
add
mov
stos
ret
xchg
sbb
mov
rorb
sti
pop
xchg
sbb
in
xchg
jle
in
lds
xor
cld
ret
mov
lds
pop
stos
fldt
add
aam
movsl
nop
nop
nop
nop
nop
jno
sub
xchg
call
inc
loop
bound
adc
push
inc
faddl
jns
pop
out
scas
mov
nop
nop
nop
xchg
rorl
or
xor
adc
add
inc
and
stos
jp
sub
or
push
out
mov
or
add
lret
gs
push
mov
mov
pusha
loop
push
les
repz
add
jns
ret
add
push
ja
call
nop
fbld
inc
int
int
shrb
dec
mov
pop
pusha
sub
pop
test
int
inc
xchg
aad
loop
movl
cmc
and
stc
xchg
cld
popf
imul
and
dec
jp
inc
fadds
pop
mov
lock
pop
xor
xor
push
movsb
movsb
sub
adc
add
clc
scas
lahf
std
inc
or
jne
add
stos
mov
mov
daa
sub
add
out
call
push
rcll
pusha
dec
das
rcr
scas
jne
fidivs
jp
xchg
cltd
xor
dec
xchg
xchg
pop
add
jle
adc
push
jb
cli
sub
add
jo
imul
add
mov
mov
fisttpll
movsb
dec
stos
mov
addb
je
mov
pop
jnp
and
cmpsl
push
movsb
push
jecxz
cmp
mov
xlat
movsl
pop
push
mov
inc
test
insl
insl
adc
lcall
pop
add
fnstenv
xorb
ret
aas
insl
test
add
and
loopne
push
lret
inc
scas
jp
dec
mov
call
dec
movsb
xchg
rcl
jl
xchg
cwtl
addr16
std
fldpi
pop
xchg
sbb
daa
adc
loope
shlb
fadd
cwtl
add
pop
lret
stos
adcl
mov
mov
lods
iret
sbb
leave
test
imul
mov
notb
add
in
or
mov
cmp
mov
jbe
and
test
and
cmpl
imul
push
xchg
test
mov
xlat
test
sbb
xchg
rolb
aad
push
mov
jns
cwtl
add
mov
leave
pop
sub
mov
lock
mov
lods
push
sarl
aad
dec
test
loopne
or
sti
cmp
sub
nop
nop
adc
push
pop
xor
daa
mov
pop
xchg
push
es
scas
movsl
inc
xchg
jne
mov
pop
dec
xchg
pop
mov
cmpsl
insl
push
int
add
faddp
stc
push
mov
nop
nop
nop
nop
nop
adc
pushf
pusha
sbb
inc
xchg
pushf
in
dec
stos
cmp
call
into
xchg
cmp
add
xchg
inc
popf
shr
mov
push
gs
push
jle
jecxz
sahf
adc
add
sbb
inc
push
lcall
add
and
or
fwait
iret
ret
ss
lea
int3
int3
int3
int3
int3
xchg
enter
out
adc
movsl
cli
das
sar
fsubl
aad
and
ss
pop
push
js
adc
pop
mov
pop
add
adc
push
mov
lret
arpl
and
dec
xchg
testb
inc
leave
mov
adc
jp
mulb
sub
cmpsl
mov
jge
jnp
out
ljmp
mov
jge
leave
in
xor
mov
inc
and
mov
adc
and
xor
clc
imul
push
push
cs
ret
ljmp
mov
int3
int3
int3
int3
rep
add
mov
lds
add
xchg
hlt
sub
cmp
xor
sbb
cld
sbbl
nop
mov
mov
inc
orps
mov
data16
mov
dec
aaa
ds
jnp
mov
pop
add
adc
adc
mov
lahf
adc
orl
pushf
aad
adc
ficomps
mov
dec
pop
xchg
mov
sub
cli
xchg
ret
stc
xchg
clc
adc
into
ljmp
repnz
sbb
rorl
leave
cmp
sbbl
aas
or
push
arpl
aam
jne
mov
incb
or
lret
mov
push
push
popf
insb
fisubrs
sbb
jnp
inc
or
test
or
insl
pop
out
in
add
les
stc
xchg
aad
add
cmpb
sbbl
rorl
pushf
sub
cld
and
sub
cmp
pop
push
add
out
push
sub
lahf
shrb
cmp
mov
jp
rcrb
pop
pop
jb
mov
xchg
push
flds
sbb
rcrb
push
lret
pop
mov
push
das
push
cs
imul
add
pusha
mov
add
jb
lea
scas
xor
les
repz
mov
cmpb
sub
gs
dec
sbb
stos
les
popf
cmpb
out
pop
mov
sbb
aas
insb
xchg
fsubs
xor
inc
sbb
push
arpl
or
fsubp
bound
inc
push
fiadds
add
addr16
fs
jne
mov
in
int3
int3
int3
int3
int3
adc
jecxz
aaa
sub
icebp
jo
pop
in
in
and
add
cmp
insb
aad
mov
ficomps
leave
pop
jl
aam
lcall
int3
or
icebp
or
test
or
add
jb
jecxz
loopne
xchg
or
dec
aaa
adc
adc
or
decb
cltd
or
or
shrl
mov
popa
aaa
out
sahf
fs
mov
push
cs
jnp
fcmovnu
mov
mov
adc
lcall
add
push
mov
lods
ds
lahf
mov
fisttpll
mov
dec
jbe
mov
pop
adc
adc
aam
outsb
inc
call
nop
nop
nop
in
mov
push
sbb
and
jmp
lahf
inc
mov
mov
jmp
into
jne
and
insl
stos
mov
outsl
cwtl
sbb
movsb
out
add
mov
sti
out
and
lret
push
in
rclb
cld
shlb
mov
icebp
cmp
pop
fstl
mov
add
xchg
and
xchg
cmp
sub
in
and
jns
das
and
or
add
int
ret
xor
sub
pushf
pop
pop
jae
fcoml
roll
test
cmpl
out
cli
enter
sarl
testb
adc
fisttpl
test
inc
push
faddl
inc
in
test
xor
popf
sub
rorb
nop
nop
nop
nop
sti
lds
mov
daa
das
xor
popa
fimull
xchg
insl
add
out
xchg
sub
lret
jno
xchg
xor
add
add
shl
jno
ret
imul
push
xchg
pusha
fmull
outsb
data16
shrl
pop
xchg
ja
fmull
inc
mov
lret
pop
adc
push
sahf
jg
cwtl
test
jnp
nop
nop
nop
nop
nop
sbb
in
pop
push
into
adc
aaa
popf
xchg
test
out
repnz
push
and
int3
int3
int3
int3
int3
or
add
push
push
std
icebp
sbb
int3
int3
int3
int3
xor
sbb
in
dec
in
xor
cmp
sub
add
ds
arpl
enter
sahf
xchg
dec
leave
je
inc
popf
push
repnz
inc
inc
loopne
jns
mov
sub
stos
xor
pop
push
or
mov
add
pop
aad
jg
mov
or
add
int3
int3
int3
int3
sbb
iret
aas
or
sarb
dec
cli
xchg
jmp
dec
nop
nop
nop
nop
nop
lret
ja
aas
stc
pop
andb
add
insb
and
cmpsl
loop
idivl
add
mov
jne
xchg
inc
scas
cmp
inc
jmp
add
push
imul
cld
jle
ret
mov
add
add
jo
or
insb
call
add
or
or
inc
cmc
pop
sub
es
dec
lock
sbb
scas
cmc
test
mov
aaa
fcmovnu
mov
repnz
and
in
push
push
sbb
mov
xchg
cmp
or
or
mov
imull
fnsave
and
repnz
andb
push
jb
mov
sub
jle
sbb
into
jnp
jle
fwait
lds
sub
dec
out
in
pop
xchg
inc
inc
fistpl
add
daa
add
ds
mov
xor
loopne
mov
xchg
outsb
cmpsb
je
rcrl
push
jl
mov
bound
xor
xchg
mov
je
cmc
xor
jle
and
ret
dec
sbb
test
adcl
in
pop
sbb
and
mov
icebp
hlt
into
xchg
dec
std
mov
and
loop
out
imul
push
or
adc
xchg
shlb
mov
dec
adc
and
rol
cmp
aam
pop
out
mov
inc
scas
stos
xchg
dec
imul
sti
and
inc
xchg
pop
dec
add
icebp
lods
add
jmp
mov
and
inc
sbb
add
jae
sahf
fldt
jg
xchg
push
test
xchg
outsb
cmp
cltd
cmc
vmread
hlt
sub
and
push
cmp
cmp
clc
test
add
cmpl
cmpsw
and
imul
cld
jne
adc
sti
fidivs
jno
call
js
ljmp
add
int3
int3
int3
int3
int3
jecxz
and
fcmovu
gs
and
data16
pop
dec
xor
cmpsb
jmp
aaa
pop
sub
cmc
cld
pop
out
add
cmpsb
cmpsb
test
mov
cltd
lcall
mov
mov
sbb
int3
int3
int3
int3
lahf
sbb
loope
jg
movsl
fcoml
fisttpl
cmc
cmp
fildll
subb
in
loopne
xor
mov
jnp
test
mov
insl
jge
mov
mov
pop
jge
dec
loop
cmp
xor
xor
jae
out
out
cmc
sub
int3
int3
int3
int3
lods
pop
mov
xlat
sub
adc
sbb
inc
arpl
jl
jns
clc
mov
jb
data16
sub
adc
xor
add
rolb
or
add
and
int3
int3
int3
int3
loop
sbb
add
xor
xor
push
jns
cmp
mov
dec
out
pop
sub
sub
jg
pop
pushf
push
scas
jp
pop
mov
sbb
int3
int3
int3
int3
mov
rcl
xor
sbb
sahf
in
cmp
jb
data16
nopl
std
mov
xchg
test
jg
arpl
cmpl
dec
fists
aas
inc
lret
jae
jne
sub
inc
in
in
push
inc
dec
and
js
sti
sub
jl
mov
dec
xchg
sub
push
xor
mov
cltd
push
rorl
es
dec
dec
in
inc
das
or
adc
pop
jge
aam
gs
inc
xor
fnsave
adc
push
or
wbinvd
into
fldl
jb
insl
lahf
mov
lcall
arpl
push
movsb
and
add
inc
mov
gs
mov
cmp
jne
lret
scas
add
int
lret
out
inc
xchg
out
movsl
mov
xor
lret
pop
mov
fs
push
dec
pop
push
fldcw
push
cld
cmpsl
shrb
add
arpl
jbe
pop
jb
push
dec
fidivs
inc
or
add
sahf
fbstp
inc
mov
inc
aaa
repnz
cwtl
jbe
int3
int3
int3
int3
std
push
pop
inc
push
les
cmp
jl
add
jb
repnz
add
lcall
cmp
in
sbb
sar
push
aad
adc
stos
popa
mov
sbb
test
mov
jg
dec
cs
ljmp
push
stos
push
dec
and
ficompl
cmp
sub
test
inc
mov
jns
cmp
jo
cld
or
add
cmp
je
daa
cmc
xor
jmp
loope
fwait
xchg
dec
mov
int3
int3
int3
int3
int3
test
ret
add
lds
add
js
adc
add
sub
dec
xor
add
push
cld
aam
cmp
add
and
pop
mov
nop
nop
nop
nop
nop
lock
or
out
xchg
dec
pop
shrl
mov
adc
mov
out
inc
mov
call
xchg
lret
and
inc
mov
inc
sti
xchg
sub
repz
mov
in
dec
xchg
mov
std
mov
jno
adc
cmpsl
xchg
push
jo
add
std
js
mov
cmpsl
mov
mov
pop
jbe
cmc
addr16
icebp
js
xchg
ret
add
jp
fsub
sub
add
cmp
shl
push
adc
pop
call
shrb
lahf
push
mov
push
pop
into
outsb
sub
cmp
fisubrl
pop
leave
and
push
dec
movsl
xchg
sbb
add
add
cmc
push
popa
popf
addr16
out
xchg
daa
loop
fldt
sbb
mov
addw
movsl
outsl
inc
in
sbb
add
xchg
mov
les
or
add
jmp
mov
pop
and
sbb
push
cmp
xchg
and
mov
jmp
or
cmpsb
xor
dec
lret
lods
out
stc
adc
sbb
add
lds
or
jo
or
or
outsl
adc
lds
loopne
sbb
inc
aaa
ja
lret
jg
leave
lret
dec
mov
and
xchg
cmp
test
xor
add
outsl
in
lods
shr
lcall
leave
pop
add
sub
sub
adc
fwait
in
mov
xchg
sub
sbb
movl
add
cmp
nop
nop
nop
add
out
call
cli
inc
out
das
scas
cmp
inc
data16
fidivrs
mov
aaa
dec
xchg
js
sub
push
int3
int3
int3
int3
int3
dec
pop
int3
int3
int3
int3
int3
testb
insb
mov
jb
jg
lret
ljmp
cmp
scas
or
iret
sbb
popa
pop
in
xchg
and
jns
xchg
ret
pusha
cs
or
dec
push
mov
lea
mov
daa
pusha
inc
jno
iret
pop
inc
cmp
lret
pushf
call
repz
xor
jb
mov
add
dec
or
orl
jo
xchg
pushf
inc
sub
inc
pop
sbb
sbb
mov
adc
ds
or
jno
arpl
mov
mov
mov
test
add
xor
out
sub
add
mov
int3
and
das
add
pop
or
aad
scas
mov
jle
sarl
shlb
inc
or
push
in
test
sbb
cmp
xor
stc
pop
sub
lods
scas
lods
arpl
repz
push
icebp
and
movsl
sbb
sub
adc
and
ror
mov
jbe
push
mov
ds
scas
push
mov
test
add
push
loope
sbb
ja
mov
call
mov
jb
dec
aas
inc
mov
jecxz
or
stc
xchg
xor
cli
je
jecxz
xlat
scas
pushf
das
in
ja
fcompl
into
sbb
add
cs
and
sahf
mov
mov
and
xor
loop
mov
adc
mov
xchg
bound
cs
inc
inc
xor
loope
inc
fstp
cmp
frstor
cs
pop
pop
sti
mov
xorl
pop
xchg
call
mov
cmpsl
lret
aaa
add
mov
adc
xchg
sub
lret
lret
arpl
inc
push
sbb
dec
add
stos
add
ret
in
addr16
jbe
mov
jge
mov
ror
pushf
xchg
jmp
arpl
and
out
add
xchg
mov
jno
add
sbb
mov
cmp
adc
fildll
repz
jno
adc
add
in
jne
dec
jno
mov
add
pop
jnp
cmpsl
sbb
es
jae
push
and
loope
std
lods
movsb
mov
pop
test
xchg
add
sub
cwtl
fiaddl
and
mov
dec
cmp
cmp
cmpb
jge
add
lods
subb
add
int
insb
int
cmpsl
fsubrs
in
sub
or
cmp
xlat
shrl
out
test
jmp
mul
add
pop
ret
adc
mov
adc
bound
sbb
add
out
sarb
cmp
cwtl
dec
pushf
or
add
and
add
jbe
pop
cmpb
push
and
add
and
jecxz
lock
dec
add
add
pop
sub
add
ds
mov
or
cmpsb
imull
loopne
rorl
pop
gs
cmpsl
movsl
mov
loopne
rcll
stc
cli
adc
jae
mov
sbb
rcrl
inc
je
sub
xchg
cld
lcall
pusha
push
pusha
ret
sbb
leave
add
rcll
add
leave
dec
and
adc
and
int3
int3
int3
and
jp
pop
sti
dec
aam
cmpsb
fdivs
jmp
dec
xchg
jb
push
or
jb
push
arpl
xlat
sti
fwait
and
mov
xchg
inc
test
xor
fistpl
test
xchg
push
bound
test
or
test
add
xchg
sbb
dec
test
jae
mov
push
push
dec
daa
mov
nop
nop
nop
nop
nop
ror
cmp
adc
cmp
cmpsl
nop
nop
nop
nop
nop
xor
mov
jne
notb
test
fildll
xchg
je
adc
dec
loope
push
mov
in
fwait
popa
fistps
sahf
iret
test
gs
xchg
mov
jl
cmc
push
add
xlat
enter
dec
jg
pop
xor
fwait
or
adc
pop
fsubp
movsb
scas
dec
xchg
sbb
jns
mov
jl
sahf
sbb
testb
inc
adc
ja
xchg
push
scas
jp
gs
dec
mov
xchg
mov
test
pusha
enter
jbe
inc
popa
sub
add
adc
add
xor
xchg
mov
or
je
inc
push
or
and
nop
nop
nop
nop
nop
jg
lret
jg
jno
jmp
stc
test
adc
test
adc
aas
pop
outsb
in
aad
add
mov
enter
sbb
int3
int3
int3
int3
int3
inc
fs
xchg
jns
push
imul
shrb
mov
imul
push
out
mov
addl
cmc
fiaddl
fldenv
pop
inc
mov
mov
dec
scas
inc
divb
inc
insb
cmpsb
in
scas
leave
xor
push
mov
imul
jb
pushf
pop
lock
mov
fisubl
xor
and
sbb
xchg
fmull
ffreep
ljmp
loop
cmp
cmp
add
inc
pop
movsl
xchg
add
das
mov
dec
je
mov
inc
xchg
call
sub
sub
mov
sub
add
add
lret
push
add
test
out
cmpsb
inc
and
insl
add
insl
fsubrs
mov
jne
out
sub
cwtl
shll
cmp
fcom
pop
cld
imul
jl,pt
add
cmp
popf
ljmp
add
in
rol
xlat
sub
adc
push
mov
aaa
mov
arpl
cli
je
fldcw
call
shr
dec
or
xchg
inc
push
xchg
fisubl
sbb
in
outsl
out
push
loop
pop
mov
dec
mov
fnstcw
jl
push
mov
outsl
or
aad
push
mov
mov
sub
movsb
mov
sbb
pop
adc
mov
push
xchg
inc
popa
dec
xchg
mov
insb
inc
or
imul
push
outsb
js
cmc
jp
jbe
adc
fldcw
sbb
mov
adc
lods
pop
sub
nop
nop
nop
nop
nop
fldenv
dec
cmpsl
cmp
and
pop
cmpb
scas
mov
jmp
xor
lret
leave
loope
push
icebp
andb
int
push
clc
or
mov
xchg
xchg
repnz
lea
or
sbb
ss
aad
out
mov
sub
jb
addl
adc
leave
popl
add
ss
dec
fcmovb
xor
and
imul
sub
add
popa
mov
bound
nop
nop
nop
adc
ficomps
dec
mov
mov
xorb
lret
pop
in
sbb
mov
adc
nop
push
cli
fildl
lahf
mov
and
ljmp
pop
mov
aas
push
jno
sahf
mov
dec
aam
icebp
xchg
and
xor
add
pop
int3
int3
int3
int3
int3
stc
or
push
mov
dec
movsb
leave
movsl
mov
sbb
or
xor
movsb
dec
adc
dec
popl
sbb
adc
mov
inc
movsb
mov
add
cld
test
or
add
out
push
lea
cwtl
lcall
fcompl
andb
sub
add
pushf
int3
int3
int3
int3
int3
int
popf
aam
lahf
out
push
outsb
push
jle
shll
aas
aaa
ss
push
gs
cmp
mov
in
inc
mov
out
roll
aaa
pop
sub
sbb
fld
sbb
adc
cs
jge
inc
and
and
inc
or
push
mov
sub
add
repz
lret
cmpb
jmp
fmull
filds
jbe
or
or
add
pop
aad
pop
add
dec
in
xor
add
mov
dec
sub
movsb
aaa
enter
sbb
int3
int3
int3
int3
sub
ljmp
notl
inc
mov
into
ss
and
call
aaa
test
outsl
dec
lods
stos
xchg
mov
cmpsb
out
mov
int3
int3
int3
int3
nop
nop
nop
nop
nop
pop
out
filds
xor
das
push
out
push
jmp
jae
cmp
int
pop
fwait
in
add
int3
int3
int3
int3
fistps
test
cmc
fucomip
sub
or
movsl
scas
stc
add
popf
cwtl
adc
adc
xor
jo
push
push
xor
rcrb
cmpsl
add
std
aaa
out
cmp
scas
or
dec
xor
add
lret
out
rol
sti
insl
lods
xor
add
icebp
ret
pusha
mov
lea
inc
ja
adc
add
loop
shlb
xchg
sub
ret
mov
subl
xor
fldt
cmp
push
imulb
int
xlat
icebp
sub
test
es
add
and
jns
sbb
or
mov
mov
iret
sub
push
cmp
inc
into
xchg
xchg
push
pushf
adc
and
xor
xchg
jmp
cmp
lea
loopne
or
xor
inc
call
jp
scas
add
xchg
shll
jl
out
pop
rorb
ds
es
mov
into
jl
gs
call
fwait
xor
mov
sub
xor
mov
std
push
roll
stc
icebp
cmpsl
and
ds
call
in
mov
nop
nop
nop
nop
jb
int3
int3
int3
int3
int3
xchg
fmuls
mov
add
push
or
je
mov
pop
dec
dec
pop
andl
jo
leave
xor
sahf
lds
arpl
repnz
xchg
lock
xchg
je
sbb
xchg
pop
push
or
mov
add
jecxz
dec
popa
lret
dec
movnti
fcoms
xor
add
iret
add
jo
mov
icebp
sub
fiadds
mov
in
inc
inc
data16
mov
pop
pop
in
testb
lds
or
xchg
xor
int3
int3
pop
call
sbb
inc
aas
mov
xchg
shlb
add
pop
or
sbb
sti
cmp
clc
or
ret
mov
iret
jl
jg
xlat
subl
div
scas
push
sahf
adc
adc
jg
outsb
cwtl
mov
add
aas
jle
mov
dec
sub
lret
sbb
jae
inc
pop
push
xchg
es
pop
bound
jne
xchg
cmp
jo
rcl
insb
xchg
hlt
sub
adc
push
cs
and
add
or
in
lret
push
pop
andb
ss
int3
int3
int3
int3
popl
cltd
mov
imul
adc
nop
nop
and
repz
nop
nop
nop
nop
nop
or
pop
cwtl
xchg
xchg
push
shrb
and
mov
popf
imul
fcoml
lds
sbbb
aam
xor
pop
mov
in
dec
add
push
mov
push
je
xchg
adc
sub
movsl
jecxz
xchg
cmp
insb
lret
fsubrl
cmp
and
dec
cmp
movsl
call
repz
mov
shlb
icebp
mov
ja
mov
popf
mov
xchg
ret
and
mov
into
xor
pop
mov
cmp
add
dec
mov
sub
nop
nop
nop
pop
imul
fs
mov
add
test
add
movsl
sub
orl
into
sarb
xor
cmp
out
xor
jp
fstpt
icebp
sbb
nop
nop
nop
nop
nop
mov
xorb
loopne
pop
and
pop
inc
shr
sbb
xor
push
lahf
mov
dec
stos
in
push
aam
mov
in
lods
xor
sti
adc
mov
repnz
add
and
add
sbb
mov
cmp
inc
add
repnz
jb
out
lods
jo
mov
or
lock
js
jmp
mov
cmpsb
data16
xchg
jno
nop
nop
nop
nop
lods
add
pop
ret
cmpsl
jmp
popa
adc
xchg
add
add
fidivrs
mov
xchg
ss
aas
push
in
stos
test
mov
push
cmpsb
push
push
mov
jnp
lcall
hlt
ss
xchg
pop
mov
fwait
mov
mov
inc
sbb
lock
cs
jb
call
xchg
fs
bnd
int3
int3
int3
int3
cmp
aaa
xchg
test
daa
xchg
clc
push
mov
popf
xchg
ret
out
into
mov
les
pusha
outsl
lcall
fs
stos
daa
sbb
lock
sbb
les
cmp
adc
clc
cli
out
mov
cld
cmp
jae
fadds
sub
ficomps
xchg
or
sub
ja
out
ss
mov
add
mov
js
xchg
mov
loopne
sahf
icebp
sub
fiadds
cltd
inc
cmp
push
out
inc
test
adc
daa
and
out
dec
cwtl
mov
cmp
pop
lahf
adcl
aas
cmp
mov
ds
in
inc
rcrb
add
cmp
rcl
movsl
cmp
cmc
gs
dec
jb
repnz
loop
andl
or
pop
loopne
jge
lock
push
mov
sbb
inc
pop
gs
or
and
and
movsb
jl
xchg
mov
adc
and
adc
mov
cs
in
xchg
out
add
int3
int3
scas
inc
loopne
jmp
out
jae
inc
outsl
inc
std
out
lea
hlt
addr16
jnp
int3
int3
int3
int3
int3
iret
mov
sub
out
dec
mov
mov
mov
pop
jnp
cs
imul
mov
and
js
int3
int3
int3
int3
lods
mov
dec
pusha
pushf
xor
inc
sbb
mov
xor
loop
hlt
ficoms
enter
pop
xchg
or
jge
int
and
dec
cwtl
xor
fisubl
lods
pusha
je
pop
push
xor
add
pop
sub
push
sbbl
insl
sbb
lds
je
mov
inc
bound
aaa
scas
jg
and
sbb
in
xchg
ljmp
push
hlt
dec
out
pop
out
inc
cld
inc
mov
mov
adc
scas
xlat
ret
sbb
jle
xchg
mov
or
xor
int3
int3
int3
add
mov
mov
mov
and
aam
mov
fdivrl
daa
xor
daa
jae
jecxz
jmp
push
rcll
push
aad
push
xor
rcrl
and
sbb
js
pop
push
cltd
daa
push
faddl
scas
lret
jbe
pop
in
sbb
mov
mov
aas
inc
jg
cwtl
jae
arpl
push
data16
mov
int
mov
add
lret
in
mov
pop
mov
test
add
loop
arpl
jb
cmp
mov
push
mov
or
scas
dec
in
aam
dec
dec
mov
stc
daa
pop
ljmp
fwait
cmp
sbb
adc
and
out
mov
lea
in
mov
aad
sbb
add
int3
int3
add
outsl
nop
nop
nop
nop
nop
loope
mov
and
leave
stos
sub
inc
add
push
imul
jmp
jmp
cmpsl
pop
test
sub
pushf
xchg
clc
inc
inc
lea
sub
cmp
or
aas
fucomp
ljmp
movsl
out
js
and
xor
sbbb
sbb
push
and
jnp
dec
and
ja
mov
int
popl
dec
stos
jns
out
aad
lea
popf
push
lock
xlat
outsb
adc
pop
sub
ljmp
add
mov
xchg
cmpsl
push
sub
data16
pop
sbb
mov
xchg
inc
nop
nop
nop
nop
nop
cmp
dec
bound
test
add
xchg
insl
jge
push
xchg
lods
ret
jno
cmp
ret
pop
popf
mov
and
jo
and
fistl
cld
insb
push
pop
popa
cmp
mov
jbe
inc
cs
cmp
lods
xor
out
shl
enter
mov
xor
xchg
sub
mov
popf
bound
inc
xchg
xchg
movsb
ss
add
jmp
xchg
add
push
add
jbe
xchg
addl
int3
int3
int3
addr16
sub
cmp
add
aam
xchg
ds
mov
enter
js
call
xor
lret
or
ja
lea
pushf
insb
xchg
arpl
loope
jg
push
pop
inc
xchg
sub
gs
fimuls
add
or
sub
aam
adc
or
add
cmp
add
sbb
pushf
fiadds
jle
dec
roll
push
xor
push
xchg
cs
test
push
stc
adc
add
sbb
jne
push
aad
cmp
test
pop
or
int3
int3
int3
int3
int3
sbb
js
hlt
mov
add
add
int3
int3
int3
fnstcw
daa
andl
xchg
xor
or
dec
insl
cmp
adc
test
leave
in
stos
rol
sbb
sub
cs
pop
outsb
mov
push
call
lahf
test
scas
leave
and
mov
scas
jne
stos
mov
mov
mov
add
pop
dec
sbb
bound
int
int
imul
or
jg
test
mov
add
inc
fnstcw
div
sbb
inc
loope
adc
mov
push
xchg
popf
xor
sub
push
test
jb
ret
add
idiv
dec
push
aaa
mov
lea
adc
sbb
ds
js
loop
cmp
mov
rol
lds
push
lock
push
ficomps
shlb
js
inc
and
jp
ret
movsl
fchs
push
shlb
nop
nop
nop
nop
nop
mov
pop
sub
push
out
out
enter
cmp
fsin
icebp
lret
pop
stos
lods
into
cltd
stos
icebp
fcompl
mov
lret
mov
jns
loope
loop
sub
xchg
cmp
pop
inc
dec
clc
xchg
add
jmp
aam
push
aas
jmp
das
roll
jns
nop
nop
nop
nop
nop
pop
loope
test
xchg
jp
aad
sub
ret
inc
insb
es
jno
repnz
cs
mov
push
dec
cmc
inc
sub
cmp
push
adc
push
xor
add
lods
inc
pop
dec
push
popf
cmp
add
dec
cmpsb
or
gs
pop
jns
cwtl
xchg
and
scas
lret
jp
cmp
xchg
clc
scas
sbb
aas
pop
ja
loope
sbb
icebp
inc
lock
adcl
sub
stc
inc
push
repz
loope
outsl
jmp
call
push
mov
pop
fcomps
nop
movsb
stos
cltd
pop
ror
sahf
add
stos
xor
sub
icebp
jns
sbb
nop
nop
nop
sbb
xor
pop
das
add
ret
mov
pop
mov
js
dec
adc
mov
aad
mov
mov
dec
outsb
loopne
push
add
add
std
xchg
jae
bound
daa
pop
and
mov
add
sbb
daa
xchg
out
jns
add
sub
ljmp
mov
in
out
cmc
push
cmp
xchg
sub
clc
sbb
cwtl
and
pop
dec
dec
pop
clc
cmc
sbb
loopne
mov
mov
jp
test
or
pop
inc
jbe
fs
rcrb
movsl
lret
add
mov
stos
inc
notb
push
mov
out
aas
in
inc
mov
insl
xchg
xchg
repz
mov
pushf
shll
mov
arpl
add
inc
lds
pop
xchg
clc
faddp
xchg
sub
lods
lahf
push
add
pop
mov
adc
das
inc
dec
xor
insl
inc
mov
jo
scas
out
sub
xor
fwait
in
iret
lods
gs
inc
mov
sub
frstor
jecxz
daa
arpl
pop
stos
fildll
mov
cli
pop
mov
rcll
jbe
mov
mov
mov
out
stos
dec
cmpsl
fstl
sub
in
fsts
in
inc
add
fwait
cmpsl
sbb
dec
imul
stc
sub
sbb
xor
hlt
subl
jne
jne
pop
ja
sub
enter
in
aam
add
addl
nop
nop
nop
nop
or
outsb
aaa
mov
stos
sub
lret
je
adc
loope
cmp
inc
fimull
inc
push
and
cmp
mov
aad
clc
ljmp
adc
xchg
xchg
mov
pop
push
cli
cmpl
dec
sbb
jmp
jg
das
sub
das
add
add
xchg
sub
push
inc
mov
push
sti
sub
sub
outsb
mov
mov
dec
aam
bnd
out
adc
xor
inc
rclb
out
mov
sarb
and
jno
cmp
xchg
mov
mov
mov
test
std
sub
aam
mov
dec
cmp
push
ja
fldcw
xchg
js
jnp
sarl
adc
pushf
add
iret
xlat
pop
jno
cli
sbb
fs
out
push
sub
and
push
sbb
decb
nop
nop
cwtl
add
pop
mov
mov
sub
movl
sbb
cmp
mov
cwtl
movsl
or
cmp
and
add
and
dec
mov
adc
mov
rorb
jo
sbb
sbb
in
je
enter
mov
je
in
push
sub
sbb
nop
nop
nop
nop
nop
mov
jp
popf
add
push
insb
adc
dec
lret
push
mov
xchg
fpatan
insb
pop
mov
xchg
into
inc
sbb
and
mov
dec
popa
inc
sub
adc
pop
stos
xchg
xchg
je
imull
lahf
or
out
and
cltd
xor
shll
out
cmp
xor
cltd
sub
xchg
fs
xor
add
mov
movsb
test
out
mov
xchg
jmp
daa
std
sub
inc
push
mov
pop
negl
add
mov
testb
test
out
or
daa
xor
inc
lahf
add
cmp
push
js
push
shlb
int3
int3
xchg
into
xchg
sub
insb
shll
sbb
nop
nop
nop
nop
nop
dec
cmp
or
add
bound
ljmp
mov
frstor
aad
push
je
sti
jmp
cmpsl
cmpsl
notl
jne
lods
add
add
ja
icebp
test
es
push
jae
mov
sub
add
dec
xchg
mov
les
push
add
mov
aam
push
xchg
out
cmp
imull
jne
shrb
inc
cmp
shl
add
or
inc
repz
and
cmp
stos
ds
push
nop
nop
nop
nop
nop
data16
sub
add
push
push
sub
mov
dec
fisubs
fists
int3
int3
int3
int3
int3
mov
mov
or
add
je
das
pop
pusha
pop
arpl
push
mov
or
dec
cmc
sbb
loope
in
shlb
lret
ja
sbb
stos
mov
int3
int3
shrl
mov
pop
dec
adc
arpl
ficoml
or
xor
movsb
imul
jns,pn
sub
add
pop
and
jg
pop
ss
pop
daa
jb
sbb
add
lcall
ret
sbb
jns
and
movsb
jno
jl
mov
push
xor
add
cmp
repnz
pop
imul
dec
xlat
sahf
xchg
mov
lock
and
push
and
int
imul
xor
das
push
push
mov
rclb
loop
out
insl
xchg
insl
push
in
add
jmp
cmp
out
push
je
fbld
in
nop
nop
nop
nop
leave
inc
movsb
and
test
dec
xchg
hlt
clc
rcrb
aad
outsl
int3
int3
int3
int3
int3
jbe
bound
test
or
std
xor
xchg
or
mov
xchg
clc
jg
pop
iret
mov
add
rolb
clc
imul
fmull
pop
push
repz
rcr
mov
loopne
jle
lcall
mov
popf
leave
push
cmp
pop
movsl
inc
and
push
push
std
xchg
add
jns
mov
jge
shll
fisubs
pop
mov
rcrb
out
ficompl
push
add
and
in
sub
push
aaa
out
movsb
cmp
insl
dec
mov
subl
outsb
adc
bound
call
add
shrb
jno
mov
and
pop
mov
pop
pop
lea
cmc
test
mov
nopl
xchg
lock
pop
arpl
movsl
mov
and
adc
std
pop
xchg
les
mov
cmp
pop
fldt
fs
or
mov
push
sbb
cmovo
push
mov
int3
int3
int3
int3
int3
ds
push
ret
xor
lahf
out
xchg
mov
pop
scas
add
fildll
add
int
ja
xlat
sbb
jae
repz
xchg
mov
fcom
jno
getsec
add
js
repnz
popw
pop
enter
mov
xlat
push
shrl
adc
xor
test
mov
in
jl
mov
je,pn
shll
ret
sub
pusha
stos
or
xor
inc
lods
je,pt
ret
or
add
inc
push
jno
jmp
out
sbb
addr16
aaa
cmovle
or
in
fwait
cmp
fnstenv
lea
mov
shrb
rcrl
add
sbb
out
test
mov
rcl
mov
nop
nop
nop
in
mov
sbb
add
bound
hlt
add
sub
sub
push
inc
lahf
stc
mov
add
add
mov
push
pop
movsb
pop
fimull
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
mov
sbb
int3
int3
int3
int3
inc
stos
xchg
adc
push
fs
mov
test
int
out
mov
call
pop
std
xor
push
movsl
aaa
das
pop
xchg
mov
mov
jle
mov
fst
adcb
repz
popa
mov
aam
clc
mov
ljmp
add
mov
jg,pt
ficoms
mov
cmc
mov
push
ficompl
shlb
mov
cmc
jecxz
mov
sbb
in
pusha
imul
mov
cli
adc
add
pusha
xchg
mull
subl
inc
mov
inc
dec
xor
cli
push
cli
std
pushf
jmp
xlat
aaa
repnz
sahf
das
or
dec
sbb
xor
cmp
xor
or
repz
je
push
adc
jp
call
lea
in
inc
fnstcw
daa
lods
add
push
and
int
xor
mov
mov
and
mov
sub
insl
or
popf
pop
and
stos
xor
or
mov
mov
div
dec
in
xor
jb
mov
and
out
adc
push
scas
inc
push
test
adc
rorb
sbb
push
xchg
je
test
xor
nop
nop
nop
nop
push
xor
cmpsb
xor
andb
dec
cmp
fsts
add
jae
jp
test
int3
int3
push
enter
mov
pop
dec
xor
aad
sub
mov
pop
call
dec
add
mov
sub
loop
add
jp,pt
stos
addw
lea
or
dec
jno
scas
insl
call
inc
adc
je
repz
mov
sub
aas
movsb
mov
xchg
std
rolb
sbb
jmp
shll
mov
cmp
lock
rcrb
and
mov
add
test
ret
sub
mov
mov
jnp
imul
bound
test
or
pop
pop
push
roll
cld
out
and
push
jcxz
add
test
lret
mov
dec
dec
ss
int
out
inc
dec
scas
lods
add
rep
adc
sbb
nop
nop
nop
nop
nop
mov
sahf
mov
mov
dec
xchg
cmpsb
clc
mov
rol
jae
pop
dec
xorb
mov
adc
stos
gs
pushf
and
push
in
dec
xchg
adc
xchg
inc
cvtps2pd
fcompl
int
nop
nop
nop
nop
nop
sti
shrl
andl
inc
sbb
daa
push
lret
add
jbe
inc
xchg
loopne
sbb
cmp
jecxz
push
imul
call
and
js
jmp
mov
popf
movsl
sarb
xlat
pop
pop
hlt
test
dec
mov
aas
mov
fbld
xlat
stos
stc
pop
add
lcall
cmpsl
xor
add
mov
adc
loop
dec
cmc
adc
pop
mov
mov
cmpsb
daa
jmp
loope
faddl
push
aam
or
xor
mov
pop
lsl
je
add
add
push
cli
cmp
dec
lods
ret
ja
cmp
out
test
lea
je
ss
repz
add
xor
push
adc
push
mov
int3
int3
int3
int3
push
std
mov
in
cmc
scas
sub
push
testb
add
mov
inc
xor
push
push
xchg
mov
sub
cli
les
in
add
jae
sbb
sarl
fxch
cli
mov
add
cwtl
sub
pusha
or
icebp
loopne
rcrb
enter
std
push
add
mov
xchg
mov
xchg
ret
les
fldt
test
rorb
stos
adc
push
fildl
inc
cmpsb
loope
and
adc
shlb
enter
inc
leave
cmp
sbbl
jl
mov
mov
rcrl
sub
mov
or
and
test
aaa
out
dec
sub
mov
test
jb
sldt
jmp
lret
and
outsl
out
mov
lock
jmp
call
jge
pop
xchg
shrl
mov
cmp
and
add
inc
fadd
push
aaa
cwtl
cwtl
pop
push
popa
aas
jl
add
ret
je
imul
test
je
int
in
aas
push
push
sub
jecxz
pop
dec
sub
jmp
ds
fisttpl
and
add
and
loop
in
mov
js
call
adc
inc
pop
xchg
ds
and
rolb
dec
mov
fs
mov
dec
in
pushf
xor
fsub
lret
xor
adc
insl
add
int3
int3
int3
int3
fs
pop
shll
adc
xor
add
jb
jmp
xchg
arpl
dec
xor
push
and
andl
mov
pop
and
scas
in
jnp
pop
out
outsb
cmp
das
or
incb
cmp
ja
push
pop
insb
cmpsb
and
scas
xor
push
inc
xchg
push
xlat
movsl
insb
sub
nop
nop
nop
nop
sub
xor
add
pop
adcb
push
scas
jle
push
aaa
add
and
hlt
cmp
shll
fisubrl
inc
add
aam
dec
mov
mov
fs
fs
or
dec
sbb
sar
pop
and
adcl
push
fs
inc
aas
clc
sbb
add
sub
inc
aas
iret
or
idiv
ljmp
push
or
sub
push
call
sub
repz
lods
dec
dec
jle
gs
sbb
add
xor
in
jns
cli
fists
sbb
mov
mov
pop
jg
sub
aas
dec
outsl
js
inc
ret
lds
xor
fimuls
nop
nop
nop
nop
nop
test
cwtl
out
call
cltd
mov
pop
cmp
pop
daa
mov
mov
add
test
pop
mov
xchg
and
test
call
push
push
cmp
pop
adc
mov
cmp
and
inc
aas
mov
adc
ss
add
push
or
add
repnz
push
and
add
push
enter
lds
add
adc
dec
das
icebp
dec
xor
sbbl
inc
and
add
rcll
or
or
std
adc
jecxz
sub
xor
add
loope
inc
cmp
cmp
mov
fsubl
mov
test
stc
inc
bound
scas
jne
sub
cmp
add
xlat
out
mov
or
push
add
pop
pop
lods
or
test
nop
jbe
and
arpl
dec
mov
xor
fwait
addr16
addr16
stos
inc
movsb
mov
out
enter
dec
xor
xlat
cmp
pusha
ljmp
mov
mov
ja
mov
xor
add
andb
popa
cmpsl
lds
mov
sahf
arpl
pinsrw
cmp
add
sbb
xchg
xchg
cmp
int3
int3
int3
int3
add
and
cmp
sbb
jl
fsubrl
imul
jmp
push
std
sub
jae
testl
arpl
sub
lds
push
or
adc
rorb
and
mov
jae
mov
scas
xor
or
icebp
xor
or
cmp
outsl
loope
mov
mov
loopne
mov
xchg
push
cmp
insl
insb
xchg
insb
mov
loop
mov
adc
add
xchg
clc
mov
xor
mov
and
mov
inc
and
add
sti
cld
jae
arpl
jnp
into
ds
pop
push
sub
sbb
addl
and
test
sub
sti
or
xlat
add
mov
icebp
sub
sbb
adc
cmp
aam
jno
mov
mov
in
fldcw
dec
into
mov
aad
xor
sub
mov
xchg
pop
cltd
jns
jmp
je
jecxz
lock
sbb
mov
dec
and
sub
les
sbb
xlat
lahf
in
cmpsl
mov
or
mov
das
pop
pushf
imul
add
mov
subb
xchg
lods
lret
outsl
cltd
jmp
add
fscale
aad
clc
sub
add
sbb
fwait
sahf
sbb
fstpt
nop
nop
nop
nop
nop
sub
out
test
mov
add
pushf
pop
cmp
cmp
pop
mov
lock
insl
add
cmpb
cmp
mov
outsl
addr16
xor
mov
mov
pushf
orb
jmp
mov
sar
sub
movb
loopne
mov
rcrb
add
js
inc
daa
lds
mov
sub
pop
and
jmp
pop
addb
mov
dec
test
push
inc
fiadds
xchg
popf
jmp
popf
mov
adc
or
test
cmpsl
icebp
dec
in
outsb
adcb
dec
int
dec
outsl
dec
in
sub
add
insl
je
loop
fisttpl
jnp
in
xor
xchg
xchg
sub
jl
xchg
dec
and
cmp
daa
add
jecxz
and
xor
inc
imul
bnd
imul
adcl
enter
lock
sbb
or
jmp
mov
push
test
psubsw
mov
push
ret
imul
and
ss
and
xchg
mov
call
dec
sti
test
repnz
cmp
mov
roll
pop
fldenv
add
push
test
jle
or
aas
cmp
loopne
scas
mov
leave
xchg
mov
mulb
add
sub
jle
fisubl
std
pop
aam
mov
les
pushf
add
aam
or
out
lret
jne
ds
jg
jnp
sbbb
std
mov
push
dec
repnz
and
nop
push
aad
mov
pop
pop
mov
or
aaa
xor
aam
fs
adc
in
das
imul
lea
add
nop
jmp
stos
mov
cs
loope
stos
jmp
jmp
mov
add
insb
sti
sbb
dec
adc
xchg
mov
lret
and
mov
rcrb
sbb
add
dec
fstl
push
cmc
cmp
or
mov
andl
mov
enter
xchg
mov
sub
js
jns
sbb
adc
xchg
outsl
mov
or
out
pop
pop
jg
push
dec
icebp
push
and
js
in
lcall
xor
lcall
cmp
add
xchg
mov
adc
pop
mov
mov
loope
push
xor
movsl
mov
and
sbb
fldenv
add
stc
xor
add
push
icebp
rcrb
and
jle
or
imul
push
cmp
ljmp
mov
pop
test
dec
adc
icebp
sahf
adc
push
fucomip
and
add
hlt
xchg
pop
test
cltd
out
mov
add
sub
hlt
popf
std
cmpsl
mov
pop
adc
inc
cld
in
pop
ljmp
mov
ljmp
mov
out
nop
nop
nop
nop
nop
rcrl
sub
pop
pop
adc
pop
dec
ss
mov
cltd
and
arpl
ja
scas
daa
cmp
add
xchg
int
pop
pusha
add
add
add
add
xorb
aaa
shll
repnz
imul
mov
gs
jno
andl
cld
bound
scas
lret
call
mov
push
add
repz
cltd
mov
jae
imull
nop
nop
nop
nop
nop
xor
adcl
push
lret
cltd
mov
aad
add
out
in
pop
dec
cmpsb
sbb
scas
in
jno
pop
pusha
hlt
repnz
xor
inc
xor
inc
lods
clc
mov
icebp
and
in
jp
daa
dec
mov
ds
add
sbb
das
sub
ss
in
inc
es
ja
adc
mov
call
mov
pop
xchg
mov
jle
pushf
inc
add
rcl
xor
or
and
bnd
pop
xor
dec
xchg
cmp
push
fimuls
sti
sti
and
idivl
bound
imulb
inc
add
push
sbb
jb
push
mov
xor
dec
push
std
das
hlt
and
or
mov
pop
push
fistpl
data16
mov
add
cmp
jg
cli
adc
fisubs
divl
jbe
add
into
sbb
mov
arpl
fnsave
jae
repnz
push
xor
pop
xchg
jae
mov
mov
mov
jmp
or
sarl
xor
mov
or
popa
sub
add
lea
lods
inc
stos
repnz
xlat
sbb
xchg
mov
ret
mov
sbb
into
repnz
icebp
movsl
cmp
lods
popf
mov
packssdw
jb
cli
mov
adc
fwait
mov
xor
xchg
mov
mov
inc
call
cmp
inc
pop
incb
or
test
lret
popa
dec
loop
cmp
push
or
fdivl
pusha
lcall
fidivrl
dec
or
int3
int3
int3
int3
jbe
mov
leave
pop
popa
push
push
mov
pop
lock
cltd
xor
subl
fistl
jb
mov
jmp
fisubrs
popa
push
popa
push
lahf
fcmovbe
pop
nop
nop
nop
nop
nop
dec
push
stos
test
add
add
lds
repnz
dec
int
jo
jbe
jp
xchg
push
into
ret
sbb
and
js
cmc
inc
pop
sbbb
pushf
neg
ljmp
cmp
xor
je
cmp
jg
ret
and
test
sub
mov
cmp
mov
pop
mov
or
cmc
xchg
cmc
rorb
mov
in
push
and
adc
mov
cmp
xor
data16
jmp
pop
call
mov
pushf
bswap
cmp
loop
jnp
mov
pop
int
xor
push
mov
fiaddl
cmpsl
cltd
push
xchg
push
dec
je
adc
sahf
cmp
add
mov
xchg
inc
mov
mov
jge
mov
int3
int3
int3
int3
int3
push
adc
loopne
ss
or
cld
jns
and
pop
and
cmp
mov
bound
aaa
test
enter
jecxz
mov
mov
aam
test
pop
mov
test
mov
call
popf
adc
xlat
jbe
mov
cmp
push
pop
adc
push
sbb
and
add
mov
xor
shll
rcrb
mov
add
hlt
and
pop
mov
je
or
cmc
popf
cmpsb
rorl
ljmp
jl
push
dec
jnp
mov
sub
insl
into
jmp
jge
movsl
mov
loope
fisubl
cwtl
adc
add
nop
cltd
mov
push
mov
shll
dec
mov
mov
fnsave
pop
mov
mov
sbb
jnp
add
in
adc
int3
int3
int3
int3
sarb
mov
xor
movsl
daa
sub
and
dec
loopne
jge
xchg
gs
jno
pop
or
xor
outsl
mov
lods
add
mov
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
pcmpeqd
and
or
or
insb
and
shlb
xorb
clc
inc
jecxz
mov
loopne
ret
imul
std
and
xor
stos
loope
xchg
pop
mov
or
mov
adc
jbe
jle
and
ss
add
pop
pop
ret
cmpsb
mov
mov
jmp
push
sub
lods
mov
add
fcmovb
mov
adc
int3
int3
int3
int3
int3
into
dec
sbb
outsl
lds
lds
and
ds
lea
mov
sti
aad
call
push
and
in
mov
xchg
sub
add
add
lret
pop
pop
or
cltd
test
mov
out
outsl
outsl
pop
mov
or
inc
jmp
loopne
jmp
ficoms
sarl
les
sbb
add
pop
nop
nop
nop
nop
nop
bound
in
js
test
nop
nop
nop
nop
nop
jg
sub
andb
aam
sbb
das
mov
lock
cltd
push
mov
push
arpl
xor
or
movsl
stc
addb
add
shrl
push
and
add
outsl
dec
fdivr
cmp
mov
add
mov
mov
and
add
push
add
xor
mov
in
outsb
jecxz
adc
jb
adcl
lods
adc
sbb
pushf
gs
ret
fnstenv
in
xor
enter
and
pop
dec
sub
fcoml
mov
xor
test
push
or
jno
xchg
jae
jg
in
js
add
lds
inc
jl
and
add
xchg
sub
sbb
aaa
sub
test
mov
xor
hlt
orl
inc
imul
add
cmp
repnz
add
or
rolb
inc
push
sbb
add
ss
mov
test
aad
mov
jbe
ds
xchg
dec
cli
roll
push
mov
pop
mov
add
push
sbb
xchg
mov
aas
test
rorl
cmp
adc
push
fld
add
mov
add
jbe
dec
daa
add
bound
daa
sub
pusha
and
add
xchg
dec
pop
rcrb
fiadds
in
std
xor
sbb
add
and
add
or
shlb
in
or
cmp
and
or
fdiv
imul
add
insl
ljmp
nop
nop
nop
adc
je
icebp
aad
in
push
imul
cli
mov
incb
push
lret
add
or
lret
or
popa
scas
sbb
movl
into
adc
jl
and
sahf
pop
sarl
outsl
pop
aad
xchg
xchg
ret
aaa
movsl
cltd
daa
lret
jge
push
jp
mov
jle
fisttpll
arpl
xchg
pusha
sbbb
lds
cs
sbb
aad
sub
mov
std
cmp
push
push
orb
lock
rcl
ljmp
pop
shl
push
add
jecxz
mov
leave
dec
jg
jcxz
push
inc
subl
pop
jge
nop
nop
nop
nop
nop
into
mov
jecxz
icebp
rcl
mov
cmp
adc
cmp
and
add
iret
sub
push
jne
jb
scas
push
jns
js
popf
dec
xchg
or
and
mov
jo
icebp
jg
xor
mov
add
fs
data16
pop
cmp
dec
sahf
imul
dec
mov
insb
adc
decb
ja
jns
jo
rcr
inc
xchg
fdivs
or
sub
and
jge
addr16
pop
sti
lea
dec
push
int
pop
jle
mov
movsb
popa
push
add
mov
xchg
mov
adc
test
aas
lods
leave
ret
fbstp
jl
pop
femms
sahf
push
scas
cmc
add
outsb
dec
es
sub
add
jae
and
add
leave
lods
push
inc
cmp
sahf
mov
add
shrl
xchg
xchg
push
mov
fwait
cmp
or
jnp
push
cld
inc
mov
push
mov
cmp
adc
std
out
ljmp
rcrb
out
adc
ljmp
pushf
je
insb
add
pop
adc
push
pop
arpl
mov
call
mov
sub
adc
dec
jge
dec
out
pop
sbb
fwait
insl
and
int
dec
inc
lds
mov
in
and
ret
into
shr
jne
add
mov
inc
je
push
popa
sub
iret
icebp
mov
negl
add
pop
fcom
or
fldl
aad
cmp
call
shrd
sbb
leave
fwait
sbb
adc
enter
inc
insb
and
cmp
push
cmpsl
cmp
repz
mov
pop
inc
sbb
out
sbb
add
and
sbb
and
add
imul
testl
fwait
and
popa
inc
pop
dec
push
inc
ja
xchg
std
mov
out
mov
fisttpl
xchg
mov
ss
jb
aad
imul
nop
and
mov
jns
rol
sbb
stos
std
shrl
jle
push
orl
shrb
rcrl
sbb
inc
xchg
out
fs
pop
add
data16
cmpsl
mov
mov
inc
xor
push
add
nop
nop
nop
nop
nop
mov
int3
int3
int3
int3
int3
adc
pop
mov
ds
hlt
clc
sbb
add
mov
xchg
fimull
push
pop
adc
mov
int
jns
fisubrs
in
sbb
jg
loopne
aas
mov
sbb
add
mov
stc
dec
dec
push
loope
mov
mov
ljmp
add
pusha
dec
test
xchg
stos
pop
and
fadd
mov
jo
into
inc
sahf
in
and
test
lret
jno
push
imul
dec
stos
xchg
cmp
jge
add
and
enter
xor
sarb
dec
sbb
nop
nop
nop
nop
nop
ffree
ret
add
mov
xchg
and
insb
push
cmpsl
push
into
inc
fwait
rolb
push
add
jmp
mov
pop
add
aas
scas
mov
xchg
xchg
lahf
mov
add
cmp
ficoms
inc
sbbl
add
xchg
int3
int3
int3
int3
popa
cmp
push
xor
rolb
into
and
cmp
fbstp
push
outsb
xlat
negb
adc
test
hlt
test
jnp
mov
push
xor
xor
mov
mov
in
push
sub
fidivs
test
mov
mov
arpl
inc
mov
int
inc
arpl
or
pop
jl
daa
aas
cwtl
out
or
add
mov
leave
mov
mov
and
loope
pusha
sub
adc
add
stos
sub
nop
nop
nop
nop
sbb
add
pushf
cmp
into
std
lcall
mov
xor
xchg
shl
stos
sbb
sbb
push
and
push
mov
push
and
je
push
aaa
sub
lea
daa
mov
sbb
sbb
inc
mov
repnz
sbb
scas
inc
fistl
add
test
or
ficoms
or
push
fstl
cmp
or
jg
mov
aam
mov
movsl
push
cmpsl
pop
and
cld
adc
sub
cmc
lret
xor
dec
stos
stos
dec
insb
xor
fldl
jbe
add
fucomp
adc
push
stos
adc
popl
cli
dec
push
sbb
adc
jb
add
leave
pusha
cltd
les
jo
aas
in
adc
xchg
insb
add
js
ror
mov
pop
nop
nop
nop
nop
nop
xchg
rorl
cmpsb
dec
mov
ficomps
negl
ficompl
jb
push
sbb
fwait
mov
jb
sbb
out
dec
mov
pop
cmpsb
mov
mov
jle
push
push
push
fistpll
push
add
cmpl
and
mov
out
shll
js
movsl
mov
jnp
jecxz
popf
sub
lret
js
and
stos
adc
les
mov
jo
inc
scas
pop
mov
in
xor
adc
ds
jmp
push
jb
dec
push
sub
mov
pop
out
popl
pop
subl
mov
std
cwtl
movsb
in
repnz
cli
loope
dec
mov
outsl
dec
xor
icebp
add
in
xor
jbe
repnz
pop
in
mov
cmpsl
mov
mov
cmpsb
scas
dec
aad
pop
imul
add
imul
mov
jl
dec
ret
xchg
cmp
jb
out
cmp
imul
leave
dec
inc
mov
int3
sub
je
pop
dec
xchg
es
stos
mov
arpl
xchg
loopne
jg
stos
loopne
movsl
xchg
addr16
lods
aas
pop
push
ret
fidivl
sub
das
loopne
inc
xchg
gs
and
stos
jecxz
repz
ja
cmp
cwtl
sub
repnz
or
lds
push
fstpt
mov
mov
testl
sbbb
adc
in
mov
pusha
dec
imul
loopne
sahf
ds
lret
cmc
push
xchg
and
in
mov
movsb
xchg
push
cwtl
inc
jnp
test
adc
inc
in
lods
mov
cs
pop
test
or
int3
int3
inc
jg
inc
push
rclb
sub
ficoms
dec
mov
push
aaa
adc
pop
jl
jge
xor
lret
dec
lret
or
xor
inc
nop
nop
nop
nop
nop
flds
jmp
aad
and
ss
dec
repz
ja
xchg
xchg
inc
and
inc
mov
mov
gs
outsb
ljmp
and
movsl
pushf
mov
cmp
dec
and
adc
int3
int3
int3
int3
jmp
stos
inc
out
or
stos
movsb
fdiv
pop
sbb
popf
jg
xorl
test
adc
push
in
int3
int3
int3
int3
int3
hlt
ret
push
adc
pop
jno
rcl
in
xor
outsb
scas
negl
mov
add
lret
insl
enter
adc
push
or
jo
dec
imul
sbb
xchg
dec
lcall
dec
push
mov
cmp
pop
stos
adc
dec
or
push
sbb
sarl
loop
ds
mov
out
xor
xor
pushf
jne
xchg
or
dec
cmpb
or
jbe
ljmp
add
cld
test
add
test
mov
push
xor
add
push
in
rcrl
jne
rcr
out
and
sti
out
test
out
inc
mov
cmp
ficoms
repnz
int
mov
inc
sub
jl
jne
popa
push
push
aad
mov
lds
inc
mov
out
pop
sbb
out
pop
adc
call
push
and
in
mov
popa
add
insl
and
and
bound
adc
xor
and
push
inc
add
out
popf
dec
in
xchg
or
repz
out
iret
cmp
xchg
rolb
dec
add
outsl
xor
call
pop
imul
data16
cmp
jb
rclb
mov
outsb
pop
negl
mov
push
sub
aam
xchg
mov
test
dec
or
rorl
imul
add
int
xchg
adc
lock
dec
pop
xchg
pusha
outsb
and
test
xchg
cmpsb
pop
out
jle
out
mov
jns
jmp
jnp
inc
lock
add
outsb
mov
sub
sbb
in
icebp
mov
xor
mov
xchg
bnd
jle
arpl
movsb
out
test
xchg
adc
add
mov
stos
cmpsl
sahf
xchg
mov
mov
jbe
outsb
cltd
add
jbe
mov
dec
es
addl
cltd
test
adc
add
sti
aaa
or
sub
mov
add
outsb
sub
jmp
adc
das
jb
repz
push
es
lods
lret
add
jb
arpl
pop
sub
ljmp
xchg
fs
inc
iret
movsb
outsb
fnstenv
mov
or
pushf
and
add
mov
inc
int3
int3
int3
int3
int3
data16
inc
shr
mov
cmpsb
or
add
mov
test
and
lods
push
mov
inc
xchg
push
les
xchg
fwait
jnp
out
ds
add
xor
add
fistl
push
or
pop
ljmp
int
sbb
jnp
pop
dec
xchg
call
adc
sbb
out
mov
mov
push
stc
es
mov
inc
jae
pop
jmp
sub
sub
inc
cmp
mov
fsts
add
push
mov
inc
fs
jge
push
stc
inc
pop
orl
movsl
dec
inc
mov
jg
call
inc
jmp
add
pop
add
add
mov
xchg
add
int
push
icebp
dec
push
xchg
and
jb
pop
cmp
out
or
cmpsb
imul
sbb
mov
dec
nop
nop
nop
nop
nop
and
mov
xchg
dec
in
adc
and
mov
mov
mov
and
es
mov
jg
dec
shlb
out
mov
faddl
es
lock
jp
testl
call
xor
add
and
nop
nop
nop
nop
nop
adc
add
test
dec
and
add
lods
add
pop
and
push
and
lods
sbb
ds
lods
cmovne
hlt
cmp
cmpsl
je
pop
push
or
dec
loop
out
cmp
sub
icebp
mov
lcall
int3
int3
int3
int3
int3
xchg
sbb
sub
out
bound
mov
cmp
pop
aad
aam
and
iret
sub
mov
xor
in
and
jno
xchg
inc
mov
sahf
dec
test
cmp
sub
sbb
jns
es
jnp
push
xchg
out
imul
inc
adcl
nop
and
sub
loop
jb
pop
outsb
jae
xor
fldt
xlat
insl
fistpll
jnp
fdivrp
jecxz
lahf
jge
cmp
cmp
pop
out
mov
cwtl
dec
mov
icebp
popf
inc
jbe
pop
out
jge
scas
lahf
mov
pop
or
in
mov
jmp
push
push
test
pop
enter
xor
js
jno
sub
lds
sub
inc
mov
ja
and
lahf
shr
jl
repz
hlt
nop
nop
nop
nop
nop
lds
fmul
dec
pop
pop
ja
lahf
cvtpi2ps
leave
add
je
adc
and
pop
lock
xchg
roll
repnz
jne
xor
and
pop
outsl
pushf
jg
cmp
daa
mov
sbb
sar
ss
pusha
hlt
mov
pushf
iret
mov
cmp
inc
enter
sbb
imul
pushf
stos
stos
dec
push
push
out
sbb
cmpb
ret
scas
hlt
imul
push
pop
call
pop
and
dec
jge
mov
dec
xchg
pusha
dec
push
mov
fwait
xor
in
call
js
mov
int3
int3
inc
jmp
ficompl
cs
add
cmpsl
in
or
jno
ret
cmp
sub
rolb
cld
shr
and
mov
xchg
pop
mov
sbb
cld
add
mov
push
push
xlat
sbbl
mov
test
int
movsb
push
adc
ret
xchg
jmp
pop
lods
mov
repz
sub
mov
mov
and
xor
adc
lds
aad
inc
popa
je
outsl
dec
jl
jo
pop
cmp
sub
test
inc
mov
out
mov
rclb
rcr
repz
and
outsb
lahf
and
cmpb
call
imull
push
stos
in
adc
nop
nop
cltd
sbb
and
sub
add
addl
popa
mov
out
in
pop
pop
mov
cltd
dec
iret
xor
xor
fs
push
rcrl
jnp
dec
add
xchg
cmpsl
push
icebp
sbb
xchg
mov
mov
mov
add
xchg
mov
out
jnp
mov
shl
dec
cmpsl
mov
addr16
std
stc
sub
pop
xor
inc
mov
pop
or
sbbl
lea
pop
sub
jmp
fsubr
jle
jno
in
ss
dec
sub
and
icebp
xchg
aas
rorb
or
mov
adc
mov
add
pusha
inc
dec
cmpsb
bound
daa
call
push
out
nop
and
adcl
jmp
leave
jecxz
imul
ljmp
out
call
in
hlt
aad
imul
jnp
lahf
jne
int3
int3
int3
int3
int3
sbb
inc
lret
xchg
cmp
mov
mov
inc
or
out
enter
into
adc
add
loopne
dec
push
sub
cmp
mov
and
lods
push
es
test
nop
nop
nop
nop
nop
ror
lahf
inc
in
sub
inc
mov
sbb
xor
mov
sub
mov
jecxz
sahf
popl
into
adc
rclb
daa
lcall
scas
push
andb
cmp
fstl
inc
cld
jmp
cmpsl
ds
imul
das
out
movsl
sti
cs
loope
sbb
inc
mov
stos
mov
sbb
mov
pushf
test
sub
addr16
fists
mov
je
rcr
fsqrt
inc
cmp
xor
xlat
sbb
push
stos
stos
adc
lock
leave
lods
movsl
bound
stos
inc
pushf
loopne
mov
stos
or
inc
ds
insb
push
jb
jmp
add
pop
rcrl
pushf
bound
cwtl
stos
daa
cld
sub
leave
out
mov
add
mov
pop
dec
mov
cmp
mov
jg
xor
or
add
lock
mov
sub
les
ret
mov
inc
xchg
or
dec
stc
test
jo
int
jno
mov
jo
leave
je
or
shrl
inc
icebp
mov
xchg
js
lock
cmp
arpl
add
mov
inc
iret
dec
inc
cld
out
pop
and
xchg
inc
xchg
or
movsl
or
pop
mov
xchg
in
xchg
call
and
pop
add
push
data16
int3
int3
int3
int3
push
add
loop
mov
jmp
gs
test
repz
loopne
lds
inc
jecxz
rorb
in
mov
ljmp
cmp
scas
or
xor
fcoms
push
out
xchg
sbb
pop
insb
sbb
inc
dec
sbb
dec
rol
xchg
add
sub
lcall
jbe
lret
lods
mov
pop
cwtl
mov
xchg
frstor
hlt
ficoms
sbb
sahf
push
not
dec
cmp
adc
adc
add
push
sbb
sahf
and
lret
xor
arpl
pop
inc
test
add
jmp
pminub
xchg
iret
adc
ja
pop
push
jp
mov
sbb
pushf
movsb
call
jne
push
mov
xchg
lea
mov
sbb
inc
popf
or
cli
das
jle
jl
dec
jne
cmp
divl
nop
nop
nop
nop
nop
jl
adc
or
mov
arpl
hlt
sbb
test
adcl
cmpsl
aam
jecxz
and
xchg
pushf
mov
mov
lock
add
scas
cmp
push
enter
push
add
rcl
sub
mov
and
cmp
ss
sub
lret
loope
sbb
hlt
insb
fcomps
add
loopne
push
ds
leave
push
cmp
sbb
pop
adc
xchg
sub
add
xor
gs
dec
xor
jmp
jge
add
out
call
cmpsl
cmp
ja
pop
xchg
outsl
jno
and
aas
pop
out
cmc
lea
adc
aas
stos
out
push
test
dec
ret
inc
scas
xor
inc
jmp
test
in
sub
test
cmp
xchg
jle
pop
sbb
stos
shrb
xchg
push
push
cmp
outsl
push
imul
rcl
ja
outsb
and
push
dec
xchg
aad
fldenv
lods
iret
mov
mov
cmc
pop
in
inc
leave
or
sbb
loopne
xor
xchg
hlt
nop
nop
nop
nop
nop
adc
fsubs
and
sub
add
pop
or
mov
xor
mov
jle
sbb
push
mov
lods
call
flds
adc
sub
xor
add
fcmovnu
idiv
frstor
lds
nop
nop
nop
nop
nop
in
out
jb
sub
cmpsb
cmpsb
sub
cli
imul
jecxz
lock
push
push
adc
sarb
add
dec
and
aas
sub
pusha
add
or
and
add
outsl
jno
lretw
or
push
jmp
lcall
addb
push
xchg
mov
sbb
mov
jmp
push
jb
loope
in
andb
push
sub
cmp
pop
mov
movsl
out
adc
pusha
inc
sub
push
xchg
mov
push
push
sub
add
aad
jg
ds
rorl
ja
xor
xchg
stos
aad
fbstp
iret
push
movsl
dec
xchg
pop
dec
ds
mov
mov
sbb
push
lret
jns
dec
out
dec
cmpsl
icebp
mov
sub
pop
fldt
ljmp
push
lcall
mov
cmp
push
test
loop
mov
in
clc
dec
and
mov
xchg
and
mov
ret
pop
mov
add
mov
xchg
add
inc
mov
addb
xchg
nop
nop
nop
nop
nop
stc
iret
shrb
xor
pushf
rorl
scas
cmp
mov
cmp
adc
add
lods
popf
sub
fdivr
adc
subl
ljmp
fisttps
into
push
cmp
cmc
les
mov
je
inc
add
lods
jp
std
push
jl
lret
scas
cmp
add
push
sub
cli
ljmp
cs
cli
sbb
incb
iret
shrb
aas
adc
jl
int3
int3
int3
int3
int3
repz
mov
cli
dec
jne
iret
sub
popf
push
call
fisubrs
inc
mov
or
stc
push
jno
flds
cmp
sbb
iret
sbb
sbb
dec
int3
int3
int3
int3
int3
dec
dec
pop
daa
add
into
push
dec
or
jns
push
adc
mov
cli
pop
jae
dec
aas
adc
sub
cmc
pop
dec
sub
push
sbb
xor
fwait
das
add
and
push
mov
sarl
fs
in
xchg
xchg
fisttpl
aaa
or
cli
or
nop
nop
nop
nop
cmpsl
dec
cli
mov
jnp
out
sahf
ds
icebp
dec
xchg
data16
mov
rol
fwait
cmp
pop
loopne
push
and
ficoms
push
pop
rolb
add
adc
int3
int3
int3
int3
int3
or
stos
fimuls
mov
pop
jo
jbe
dec
sub
push
sub
faddl
test
xor
icebp
inc
mov
icebp
daa
or
dec
mov
pop
ret
or
sbb
and
mov
push
adc
sub
pushf
cwtl
enter
loop
loop
mov
jbe
jp
add
les
shrl
or
jae
movsl
and
mov
stc
pop
jg
stos
fisttpl
sbb
aaa
clc
pop
xchg
popf
or
add
int3
int3
int3
int3
int3
push
fwait
push
lret
lock
and
hlt
add
shlb
jg
dec
jg
imul
mov
in
and
inc
das
add
js
popf
repnz
pop
jle
in
and
dec
dec
and
dec
scas
int3
int3
int3
int3
int3
mov
jnp
xor
aaa
cmp
imul
pop
cmp
test
adc
pop
jp
icebp
jge
inc
loop
cli
mov
repz
lret
pop
add
clc
gs
xchg
inc
xchg
in
jg
cld
jg
cmp
mov
fisubs
int3
int3
int3
int3
int3
push
xor
jae
add
inc
movsb
and
add
lds
sbb
loope
mov
cmpl
into
mov
push
pop
ret
arpl
cmp
int3
mov
std
mov
inc
popa
mov
dec
imul
repz
popf
jl
sbb
adc
sub
nop
nop
nop
nop
nop
mov
sub
sbb
popf
mov
idivl
pop
inc
ljmp
popf
int3
int3
int3
int3
int3
add
decb
adc
mov
sub
mov
push
jg
mov
dec
icebp
test
or
fdiv
push
enter
or
int3
int3
int3
int3
outsw
push
mov
cmp
repnz
pop
jb
add
sbb
lds
nop
int3
int3
int3
int3
int3
fcoml
rcll
xchg
mov
xchg
add
inc
aas
lods
jge
test
add
mov
sub
sti
shlb
xor
repz
pop
insb
sarb
imul
push
and
xor
or
sbb
jmp
xchg
and
pop
test
je
popa
fbld
dec
push
adc
in
arpl
dec
mov
xchg
pop
dec
rcrl
sub
add
fwait
and
lret
lock
push
mov
lods
aas
lea
mov
or
and
leave
mov
xchg
or
adc
or
outsb
inc
cltd
ret
insb
add
xor
sahf
push
add
ss
mov
mov
jns
jne
filds
in
ljmp
mov
aad
pop
pop
xor
dec
mov
pushf
sbb
repz
std
sbb
test
test
pop
jge
test
ja
ret
popa
cs
mov
mov
movsb
or
sahf
push
int3
mov
das
pop
cld
sub
mov
rol
in
jmp
sbb
mov
xchg
data16
cmp
fistps
cmp
dec
pop
or
adc
jbe
cmpsb
jmp
dec
or
push
pop
jo
mov
add
mov
es
add
shlb
push
pusha
xchg
mov
mov
filds
fldt
jne
push
jo
pop
mov
push
xchg
xor
jmp
push
cmp
push
adc
jecxz
inc
pop
icebp
shl
sahf
leave
pop
repnz
xor
mov
jg
cs
push
daa
and
int
out
icebp
mov
ss
adc
loopne
xor
and
sub
dec
adc
xchg
nop
nop
nop
nop
nop
sub
aam
mov
aam
shrb
daa
stos
addr16
adc
dec
retw
out
les
lret
insb
xchg
es
mov
aaa
stc
pop
cs
repz
xchg
pop
dec
mov
int
clc
leave
lret
adc
sub
and
inc
stc
sub
cmp
mov
cmpsb
test
shl
in
push
lcall
mov
int3
int3
int3
int3
int3
mov
nop
mov
xor
data16
push
ficompl
and
and
mov
jne
cmp
adc
clc
mov
insb
gs
mov
dec
mov
lret
jbe
mov
xchg
ret
pushf
sbb
lea
pop
in
incb
fs
clc
add
jge
xor
cmpsb
mov
jle
xchg
push
fs
cmp
mov
and
out
adc
mov
push
repz
and
adc
lret
push
add
and
jmp
daa
ss
aam
mov
mov
push
scas
sbbl
add
xor
aas
pop
sahf
lret
sbb
aaa
sbb
sub
rclb
imul
xchg
sbb
test
insb
sbb
or
aad
jmp
push
cld
push
push
xchg
fldt
imul
test
popf
call
sub
mov
mov
jmp
pop
dec
mov
jnp
jno
cmp
lahf
sbb
mov
test
jo
and
cmp
cltd
cmp
adc
and
push
lea
out
adc
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
push
data16
movl
or
add
push
mov
int3
int3
int3
int3
int3
mov
out
fldt
xor
cltd
push
cmp
inc
gs
loopne
out
dec
mov
enter
jge
adc
sahf
or
int3
int3
xchg
mov
sub
jns
in
in
int
mov
or
dec
and
aas
add
imul
aas
cmp
jne
pushf
lcall
jmp
xor
add
lret
repz
adc
dec
cmp
outsl
loop
inc
in
repz
adcb
jne
mov
or
xchg
and
arpl
fsubs
xchg
xor
cs
jmp
add
lods
and
dec
xchg
sub
inc
sub
cmp
addb
lea
addb
adc
add
xchg
xchg
and
inc
sahf
push
cmp
hlt
jne
xchg
call
lea
mov
aas
xchg
adc
jl
fcmovnu
adc
shl
sbb
sub
inc
shll
xorl
aad
fdivl
add
fwait
cmp
loop
test
add
call
ret
stos
pusha
sbb
imul
ffreep
scas
and
push
insl
daa
cmp
sub
fistl
movsl
adc
add
adc
testl
or
mov
sbb
repnz
mov
repz
enter
mov
int3
int3
int3
int3
int3
das
push
sahf
push
pop
in
es
sbb
sub
daa
cmpsb
push
pop
pop
mov
nop
nop
movsl
popf
sub
xchg
fwait
push
xchg
sub
lock
scas
xor
scas
cltd
js
pop
hlt
lcall
xlat
je
pop
bound
inc
mov
jns
cwtl
shl
mov
shlb
cmp
loop
mov
cmc
add
fldenv
add
push
lods
inc
call
jle
mov
repnz
jo
mov
icebp
pop
lock
dec
lds
stc
js
fs
jnp
adc
addl
mov
js
jmp
and
push
das
dec
popa
push
les
sbb
jo
jl
ljmp
adc
xchg
sbb
outsl
cmc
or
jg
loope
nop
nop
nop
nop
cltd
xchg
test
test
pop
rorl
aad
lret
mov
mov
sbb
mov
sbb
sahf
cmp
or
dec
sbb
aam
mov
jb
add
out
jne
orb
in
xor
test
xor
pushf
sub
jno
andb
lahf
pop
shrb
fimull
mov
mov
cmpsl
xchg
lock
mov
subl
js
pop
adc
rcrb
outsl
sub
adc
inc
outsb
cmc
sbb
scas
movl
mov
cltd
push
fnsave
clc
jbe
mov
pushf
jmp
xchg
lret
into
rolb
repnz
cmpsl
dec
pop
inc
add
fiaddl
add
enter
nop
nop
nop
nop
nop
push
xor
push
call
sub
fiaddl
repz
jl
scas
mov
scas
clc
xchg
in
sbb
ficoms
das
inc
rclb
pop
loop
lcall
inc
mov
sti
cmc
or
fildll
adc
pop
jmp
add
xchg
jo
mov
mov
mov
les
add
enter
sbbl
inc
xor
insl
mov
mulb
jp
xlat
out
loop
fistpl
push
popf
jo
orb
scas
mov
xchg
js
mov
stc
mov
mov
rcr
lret
lcall
mov
inc
inc
fwait
or
test
jo
lret
inc
loopne
cld
loop
pusha
mov
call
imul
out
push
lcall
or
inc
mov
or
idivl
mov
sub
insl
xchg
jns
and
xor
push
aaa
popf
lret
stc
push
xor
into
out
mov
jp
int3
int3
int3
int3
xchg
es
lahf
test
andl
inc
aaa
inc
outsl
inc
pop
mov
popf
jnp
pop
or
flds
adc
stos
iret
inc
add
movsl
xlat
iret
loop
call
aad
add
je
sub
add
cmp
call
inc
mov
nop
nop
nop
nop
nop
mov
jne
pop
or
icebp
pusha
dec
test
call
inc
cmpsl
outsb
mov
inc
xchg
jl
xor
test
inc
pop
add
mov
add
push
ret
or
mov
dec
xchg
imul
enter
push
dec
add
lret
shll
mov
into
out
mov
mov
sbb
daa
or
add
pusha
mov
sbb
adc
add
cmp
iret
outsl
mov
flds
std
loopne
test
mov
verr
xchg
xchg
inc
mov
sbb
add
icebp
sub
push
loope
jne
push
xor
pusha
out
repz
and
fistpl
or
mov
mov
das
and
bound
cmp
sbb
pop
mov
xchg
sbb
push
cmpsl
adc
and
in
andb
aaa
pushf
adc
das
cmp
adcb
cltd
dec
idiv
movsb
dec
pop
adcl
mov
and
push
out
movsb
cmp
jg
add
jge
in
sub
xchg
cld
loope
mov
lret
test
data16
mov
add
pop
outsl
mov
lret
and
pcmpeqd
gs
bound
out
sub
insl
mov
stos
mov
mov
cmc
mov
inc
or
js
pop
scas
fs
or
rcrl
cltd
arpl
xchg
mov
in
xor
jp
lahf
mov
stos
adc
mov
pop
icebp
jg
aam
or
test
xchg
push
jecxz
rcrb
nop
nop
nop
nop
nop
sarb
aam
jmp
push
adcl
and
inc
mov
in
or
add
push
push
push
mov
arpl
fisttps
movl
fisttps
shl
mov
scas
mov
fmuls
fistps
cmp
cld
jecxz
shl
inc
test
add
push
add
pop
nop
nop
nop
nop
nop
hlt
std
or
les
rcll
add
stos
inc
jmp
cmp
add
or
or
push
inc
lea
gs
pop
push
and
ret
dec
and
mov
les
cmpsl
push
and
add
lods
jno
mov
outsl
and
dec
ret
mov
inc
out
fnstcw
add
outsb
int3
int3
int3
int3
int3
lahf
jae
push
adc
jb
push
loop
pushf
stos
data16
dec
jno
das
jb
push
adc
sar
inc
sbb
add
cmp
mov
push
mov
aas
push
test
divl
push
sub
push
inc
jo
mov
jp
add
fs
fidivl
inc
inc
out
iret
adc
xchg
sub
adc
shrl
mov
adc
mov
out
arpl
mov
push
adc
cmp
xorb
shr
push
mov
mov
ficoms
mov
pop
mov
rorl
hlt
xor
push
out
fucomip
cli
xchg
and
sub
sahf
pop
and
mov
in
test
jge
in
jmp
mov
orb
jg
xor
shll
dec
pushf
daa
mov
adc
out
mov
jnp
cld
lods
out
adc
mov
iret
movsl
mov
add
ljmp
cmp
sub
rcrb
lds
push
stos
shrb
scas
es
add
pop
and
add
repz
sub
sub
movntps
jo
pop
lret
sub
adc
mov
cld
sti
insb
mov
xchg
insl
mov
sti
xchg
push
and
add
stos
dec
stos
pop
shl
cmp
pop
daa
stos
push
loope
and
int3
int3
int3
int3
outsb
adc
sbb
add
imul
add
mov
in
mov
neg
shrl
dec
div
sbb
and
imul
xchg
repz
fucomi
enter
xor
sbb
test
push
stc
pop
mov
xor
sub
sbb
fs
ret
jae
hlt
pop
int
popl
mov
pop
push
aam
or
jle
push
add
xchg
pop
push
sti
jg
test
cmpb
push
cmc
aas
lret
xor
or
and
and
add
and
cld
cmp
stc
adc
aad
fistpl
push
cmp
xor
rol
add
cmp
lcall
push
sub
sbb
dec
pushf
scas
adc
das
push
push
repnz
add
ss
testl
mov
test
sbb
test
mov
dec
xchg
adc
sahf
jle
push
add
mov
jo
mov
mov
mov
std
xor
mov
test
push
es
test
imulb
testb
dec
outsb
fdivs
adc
add
mov
inc
mov
mov
test
ljmp
sbb
sbb
ficomps
sub
fimull
add
or
jns
leave
cs
xchg
xchg
pop
or
roll
sti
adc
gs
and
dec
sbb
add
sbb
mov
add
inc
add
fwait
shrl
add
mov
shrl
jg
xchg
jmp
push
inc
jp
jecxz
int
jl
sub
add
xlat
mov
out
sahf
cmpsb
pop
cmc
cltd
xlat
test
jp
xchg
cmp
fsubrl
pushf
xor
hlt
stc
mov
jg
fisttps
shrb
lret
je
jle
inc
loope
lret
xchg
adc
mov
push
clc
adc
xor
add
xor
push
test
and
add
jb
add
call
rcll
or
clc
jae
les
or
add
mov
data16
sub
adc
add
dec
or
cmpsb
mov
pop
pop
mov
ret
jb
dec
aam
je
std
xchg
push
es
movsl
les
pop
or
ret
xchg
pusha
ds
sti
shlb
cmp
and
nop
nop
nop
lea
add
cli
inc
rcl
popa
je
or
lcall
mov
add
test
mov
sub
gs
dec
movw
cmp
fstps
jae
mov
shll
fs
sub
xor
dec
mov
pop
test
push
push
or
nop
pop
sbb
push
jns
shld
push
jno
push
lods
dec
movsl
cmp
outsb
mov
scas
cs
xor
imul
lods
mov
outsb
in
in
insb
xor
jnp
xchg
in
fisttps
adcl
pop
or
mov
xchg
add
repnz
xchg
call
sub
sbb
cltd
scas
inc
dec
mov
jns
dec
lock
add
add
test
ljmp
add
outsb
mov
aad
icebp
push
iret
sub
add
jns
fs
and
mov
jb
fstps
or
mov
sub
jbe
inc
mov
or
and
ret
dec
push
mov
adc
lods
sub
sub
jl,pn
shll
sbb
inc
call
adc
sub
add
cmp
add
in
stc
mov
sbb
adc
jmp
add
mov
pop
in
call
scas
addr16
cmp
xchg
push
fs
push
jbe
and
inc
adc
sbb
and
out
out
stos
mov
push
pop
mov
cmp
out
mov
les
add
out
sarb
mov
divb
xor
in
or
sahf
inc
cmp
int3
int3
int3
int3
adc
fldcw
sarl
out
les
jo
lret
cmp
xchg
and
movaps
add
aaa
sbb
xchg
inc
jne
mov
dec
idivl
push
or
add
out
mov
fstps
mov
mov
dec
andb
int3
int3
int3
int3
ss
mov
into
scas
jg
int
test
push
xchg
inc
xor
dec
sbb
mov
cltd
push
jo
cs
xlat
lea
aad
stos
loopne
mov
and
sub
cmc
data16
imul
mov
pop
les
stos
ss
jae
lahf
xor
jns
fisubl
cld
push
xor
ljmp
popa
push
add
mov
nop
nop
nop
lods
or
pop
fld
push
mov
jno
or
inc
jnp
fnstenv
pop
and
ss
sti
in
xchg
stos
dec
mov
mov
pop
fldenv
mov
cmp
movsb
bound
cmp
mov
mov
bound
lods
mov
dec
xor
add
mov
int3
pop
add
pop
xlat
pop
js
out
sub
xlat
fnsave
add
mov
test
fldl
mov
in
js
outsb
popf
int3
int3
int3
int3
int3
sbb
inc
leave
call
mov
push
sbb
mov
rorb
jecxz
cmp
mov
xchg
cmpsl
scas
or
jo
jo
pop
or
pop
and
cmp
inc
push
fs
out
out
or
or
ret
lcall
nop
sbb
ds
add
adc
mov
mov
orb
adc
push
arpl
add
shrl
stc
dec
inc
shr
jge
jmp
sbb
jns
roll
push
adc
mov
ja
ret
mov
and
rcll
sbb
add
mov
movsl
jno
and
das
mov
inc
mov
or
pop
fists
jns
cs
mov
mov
jl
jbe
jno
mov
xor
mov
add
out
pop
mov
mov
add
les
or
xor
sub
pop
sub
mov
lock
repnz
push
jo
repnz
stos
or
add
xchg
insl
clc
mov
dec
je
test
add
jg
test
dec
ss
adc
in
outsb
int3
int3
int3
int3
int3
xor
jbe
shrl
xchg
mov
add
ds
fiaddl
scas
ds
jg
add
dec
push
push
add
pop
push
dec
pushf
jns
pop
mov
out
mov
mov
and
nop
nop
iret
xchg
xchg
nop
nop
nop
nop
add
lcall
negl
js
dec
mov
addb
out
das
xor
lds
loopne
dec
pop
clc
mov
adc
dec
repnz
cmp
xchg
mov
jae
lcall
leave
cwtl
xor
loope
fnstsw
mov
mov
ret
mov
fldcw
icebp
jo
cwtl
pop
fnstsw
aas
jae
and
cmpsb
sub
cmpsl
addr16
outsl
push
sbb
in
loope
iret
dec
out
pop
call
adc
pop
push
jb
ret
xchg
faddl
cmpl
out
mov
pop
sbb
add
mov
in
outsl
rcrl
xor
fsubs
adc
add
popf
pop
add
dec
pop
or
rcrl
test
fnstcw
xorb
outsl
cmc
test
fs
adc
sub
xchg
lea
sub
add
xchg
sub
pushf
mov
mov
or
sbb
sub
xchg
les
lds
fwait
cmp
nop
nop
nop
nop
nop
and
imul
rorb
stc
sub
shlb
std
jmp
inc
push
inc
cmpsb
mov
fldenv
push
out
loop
pop
or
fstpl
mov
add
xorl
push
xchg
pop
ret
imul
dec
inc
jmp
cmp
enter
into
pusha
add
or
xor
cmc
daa
pop
mov
mov
test
sbb
arpl
jae
cmp
cmc
mov
mov
in
inc
dec
int3
int3
int3
int3
int3
cmp
rcr
inc
inc
loop
xor
pop
cmc
lahf
pop
sub
insb
mov
xor
mov
jne
cmp
mov
mov
dec
push
or
decb
add
idivb
push
dec
xor
lds
repnz
push
sbb
fcmove
or
mov
xchg
scas
adc
xchg
mov
cmp
fwait
add
push
inc
addr16
and
add
sbb
mov
imull
push
add
push
sub
add
sbb
dec
mov
inc
pop
lahf
and
cmp
lds
xor
imul
std
sarl
add
dec
incb
cmp
out
leave
xor
cmpsl
andb
in
cmp
imul
andb
cmp
dec
cwtl
inc
push
xor
inc
mov
stc
shll
lock
pop
js
jb
in
sub
fdiv
stos
pushf
add
fsubrl
cmpsb
fcoms
aas
addr16
mov
and
hlt
test
mov
xor
inc
mov
mov
adc
and
cli
pop
mov
adc
pop
cmp
dec
cli
xchg
lahf
ror
mov
ret
adcl
add
jle
cmp
xor
cs
clc
icebp
or
mov
xor
inc
scas
aas
stos
add
xchg
xchg
test
mov
dec
cmc
or
xlat
adc
iret
pop
xor
stos
iret
ficoms
nop
nop
nop
nop
icebp
pop
int
mov
mov
xor
and
add
mov
sub
add
in
es
xchg
cmpsb
fchs
dec
cld
add
adc
cmpsl
cmpsb
lock
add
sub
sbb
inc
push
mov
adc
shr
outsl
jge
sbb
jo
inc
mov
mov
pop
adc
and
fcoms
pop
mov
loope
scas
pop
add
jnp
and
je
pusha
ds
std
rorb
xchg
inc
xchg
jmp
cli
fiadds
gs
flds
push
mov
in
repnz
int3
int3
int3
int3
push
jnp
dec
pushf
and
jnp
mov
adc
cmp
sub
scas
dec
jbe
xchg
jb
xor
test
push
jmp
adc
xor
fwait
mov
jg
int3
int3
int3
int3
rorb
cmc
jb
lret
mov
mov
mov
xor
call
add
outsb
outsb
xchg
movsb
int3
int3
int3
int3
int3
cmpb
xor
xor
int
sub
mov
lret
xor
mov
lods
dec
fsubrl
push
ds
xor
call
aad
in
nop
nop
nop
nop
mov
add
or
push
pextrw
mov
enter
xchg
ja
iret
jecxz
sbb
and
in
xchg
ds
sti
inc
cwtl
stos
aas
and
xor
pop
jg
cmp
ror
adc
inc
cltd
mov
and
aaa
pop
sarl
out
lahf
mov
cmp
bound
or
sub
in
mov
sbb
dec
cmpl
pop
mov
xor
mov
xchg
xchg
gs
mov
pusha
inc
lahf
lret
and
add
xor
mov
pop
xchg
stc
cmp
xchg
sub
add
mov
and
sub
addb
dec
push
dec
iret
cmp
xor
lock
mov
add
pop
pusha
mov
lahf
prefetch
xor
xchg
push
in
mov
in
rorb
call
jns
repz
push
call
int3
int3
int3
int3
int3
push
push
inc
add
ret
pop
pusha
lcall
jnp
sub
or
and
add
lea
test
cmp
jnp
nop
nop
nop
nop
pop
inc
mov
js,pt
add
and
sbb
sar
pop
faddp
sub
xchg
dec
pop
out
lahf
adc
push
int
shrb
inc
lds
cmp
mov
cmpsl
pop
mov
cmp
pop
adc
jbe
mov
cmp
jbe
adc
add
inc
je
mov
lret
fadd
cli
dec
hlt
jo
in
sbb
subb
mov
ljmp
imul
int
sarl
lret
lods
pop
pop
mov
lret
loop
in
pop
fldcw
push
ret
mov
aad
mov
ljmp
cmp
repnz
cmpsl
mov
sub
ret
std
nop
nop
nop
nop
nop
inc
clc
stc
and
mov
and
movsb
inc
inc
addr16
lahf
into
sub
sub
cld
add
xor
xor
shrb
daa
xor
sbb
cmp
push
mov
inc
mov
fists
in
or
loope
stos
mov
cmc
and
outsl
lahf
xchg
adc
inc
idiv
aaa
jge
push
add
xchg
cld
ds
inc
mov
js
sub
inc
fimull
and
stc
jle
mov
push
sbb
fnsave
adc
sbbl
sbb
xchg
or
adc
adc
fwait
xlat
out
push
dec
and
stc
movsl
sbb
and
xchg
add
or
cmp
in
cltd
xor
fs
popf
mov
mulb
xchg
pop
lods
bound
dec
add
sbb
jo
pop
pop
sbb
test
mov
push
add
sbb
frstor
dec
cmpb
inc
pop
in
jnp
mov
rcrl
cltd
jmp
pushf
fwait
inc
mov
dec
out
in
xchg
aam
and
cmp
add
cmp
inc
xchg
xor
arpl
je
sbb
mov
cmp
xchg
jne
mov
bound
das
xchg
gs
sbb
aas
cmp
in
aam
es
imul
ret
cmp
jne
stos
sbb
insb
dec
jge
into
in
mov
in
cmp
outsl
pop
ret
inc
shlb
sub
add
cmp
mov
sub
fists
mov
mov
movsl
cwtl
movsl
scas
or
stos
sbb
popf
inc
ss
dec
mov
into
jmp
fldt
fildll
ss
je
push
cmp
cmc
stos
jmp
adc
insl
dec
inc
jnp
pop
outsb
subl
and
fistpll
add
icebp
sbb
outsb
bound
stc
inc
popa
sahf
mov
xchg
mov
xchg
add
push
aas
adc
push
dec
push
in
cmpsb
or
sbb
hlt
cmp
add
add
in
inc
xor
mov
cmp
cmpsl
stos
test
sub
jae
push
negl
nop
nop
nop
nop
mov
hlt
movsb
inc
call
add
nop
nop
nop
nop
nop
ja
add
mov
jle
imul
test
addl
jmp
xlat
stos
ss
cmp
jge
sub
int
jbe
mov
xlat
mov
pusha
sub
jg
cmp
adc
outsl
out
cmp
mov
and
fcmovu
and
repz
js
cmp
insb
mov
add
add
and
jp
pop
mov
pusha
popf
lods
or
sub
xor
aam
jg
scas
mov
mov
add
sbb
mov
pshufw
jne
add
sar
sahf
leave
push
fmull
or
push
add
es
out
jns
std
into
ret
inc
jg
ds
int3
int3
int3
int3
dec
loope
bound
lea
push
cmp
xchg
lcall
xchg
and
stos
mov
or
fucom
jb
dec
push
pop
fs
int3
int3
int3
xchg
jb
fisubl
test
xchg
xchg
cmp
mov
stc
fs
jmp
movl
dec
lea
adc
sbbb
fldt
dec
sbb
mov
inc
add
das
adc
inc
insb
sub
adc
leave
mov
sar
ficompl
pusha
adc
and
pop
ror
pop
ss
cmp
add
roll
fisttpl
sbb
bound
inc
popf
out
xchg
mov
enter
mov
or
xchg
out
mov
addr16
out
push
add
pop
addr16
xchg
popf
push
cmp
sbb
xchg
push
in
xor
cmp
jmp
jae
jle
push
pop
in
push
dec
inc
mov
leave
push
addr16
dec
enter
pusha
add
xor
add
ljmp
and
test
insl
outsl
inc
pop
aad
loop
stos
cwtl
lock
adc
inc
mov
mov
adc
sbb
aas
aas
in
aas
push
outsl
rep
xor
mov
mov
sbb
add
jecxz
lret
inc
movsb
adc
lock
mov
imul
xor
xor
imul
and
sbb
scas
in
inc
faddl
or
daa
into
mov
pop
jg
imull
push
cmp
mov
add
push
xchg
mov
or
push
lods
cmp
repz
cwtl
or
sbb
cmpsb
mov
mov
sub
xorl
push
cmp
and
aam
fmull
and
pop
pop
and
adc
in
out
inc
jmp
lock
rcl
fwait
adcl
inc
pop
and
out
mov
lods
lods
bound
in
sahf
out
pop
cmp
sub
ds
rclb
out
in
jl
sub
pop
xchg
pop
mov
dec
ja
ds
insl
orl
dec
xchg
mov
push
add
push
ja
and
dec
dec
cli
adc
inc
mov
and
push
adc
inc
inc
ss
adc
ret
jnp
out
loopne
rclb
jmp
lods
lret
jns
mov
ljmp
ds
ljmp
inc
or
test
cwtl
cmp
add
prefetchnta
jbe
inc
mov
push
je
stos
loopne
xor
xchg
xchg
into
cmp
pusha
bound
jbe
and
mov
push
ljmp
pop
popf
push
push
jge
roll
adc
mov
test
add
mov
divl
mov
add
mov
aaa
pop
add
repz
cmp
insb
gs
xor
and
shll
mov
fisttps
les
cs
test
lcall
repz
add
mov
jns
push
or
add
jnp
sbb
mov
push
and
aas
ljmp
push
jmp
outsb
pop
xor
or
push
cmc
and
je
jno
add
jge
es
jae
loope
cmp
in
push
nop
nop
nop
nop
nop
not
fbstp
sub
jne
insb
rcrl
inc
push
add
roll
outsl
gs
mov
inc
adc
outsl
adc
test
push
rcll
cli
pusha
test
or
pop
pop
sbb
dec
mov
outsl
cmp
leave
jg
fsub
repnz
ss
mov
mov
cmp
ret
jle
out
adc
add
nop
nop
nop
nop
nop
clc
mov
gs
cmp
popf
jg
inc
xor
mov
shlb
lret
push
and
add
inc
aas
stc
stc
call
mov
cmp
insl
into
enter
push
or
or
testb
in
sahf
loopne
and
jo
call
imul
ret
stos
mov
jae
sarb
sub
hlt
pop
push
push
jnp
out
aaa
xor
jo
pop
add
push
test
cmp
std
sbb
cmp
mov
xlat
inc
adc
mov
push
aaa
daa
xor
xor
pop
xlat
add
stos
jle
pushf
cmp
pop
insb
dec
cltd
xor
fprem1
out
fildll
add
adc
mov
cmp
inc
jp
mov
jae
outsb
jle
sbb
xor
jg
xor
stos
sub
fnstsw
leave
xchg
or
mov
scas
scas
cltd
push
daa
cmc
aaa
cmp
sbb
inc
inc
sub
dec
pusha
jmp
mov
shlb
mov
cmp
mov
popf
aam
push
and
adc
jmp
cld
xlat
jo
pop
adc
mov
sbb
and
outsl
xor
lret
stos
adc
sub
add
sub
or
push
pop
addb
rorl
outsl
ret
push
inc
jno
out
sub
in
or
push
sbb
push
add
insl
pop
push
sti
cmp
lea
incb
mov
lds
inc
cmpsl
jmp
int3
xor
push
lods
jb
call
imul
jle
cwtl
push
mov
call
push
fildll
dec
cmp
inc
pusha
mov
shr
or
mov
imul
mov
and
les
jp
sbb
and
shll
jl
adc
push
sbb
daa
out
push
dec
loopne
pop
out
fidivrl
test
xchg
adc
movsb
mov
mov
push
mov
test
jns
pop
push
fsubs
xorl
mov
and
cmpsb
xchg
cld
mov
cmp
push
push
in
stc
aad
ficomps
sbb
adc
sub
outsb
icebp
push
sar
xor
leave
stos
cmp
lock
int3
int3
int3
int3
cmc
cs
cmpsb
clc
shlb
int3
int3
int3
int3
int3
stc
jae
dec
and
add
nop
nop
nop
cwtl
out
sbb
stos
cmp
sub
std
sub
fs
pop
repz
std
jl
jnp
push
mov
popf
call
add
imul
cmp
inc
inc
sahf
outsl
and
add
fs
mov
push
add
push
das
es
cld
mov
lcall
stc
cmp
inc
pushf
push
hlt
call
imul
jle,pn
out
les
add
cli
cmpsl
call
int3
int3
int3
nop
nop
nop
nop
nop
fildl
mov
sti
push
frstor
dec
dec
insb
jb
sub
rcl
shll
sub
jg
stos
mov
insl
subb
mov
mov
push
rcl
ret
scas
call
or
cld
dec
cmpb
loop
enter
lret
int3
int3
int3
int3
int3
notb
arpl
hlt
push
mov
leave
mov
push
jp
ja
cld
mov
sti
ja
movsl
orb
pusha
pop
xchg
jae
pop
mul
mov
sub
mov
cmpsl
repz
sbb
inc
dec
inc
clc
cmp
in
xchg
in
sbb
mov
lret
xor
lock
out
inc
cmp
and
xor
gs
fsts
out
xchg
add
xlat
enter
sub
add
cli
mov
adc
or
jbe
jno
dec
push
inc
mov
lret
mov
sbbl
add
xchg
sub
int3
int3
int3
int3
mov
insb
rcl
out
dec
dec
pop
std
cmp
add
enter
sahf
addl
fcoml
mov
movsl
loopne
daa
xchg
jp
sahf
nop
nop
nop
nop
nop
sbb
push
jbe
pusha
aas
adc
pop
cwtl
mov
cmpsb
mov
sbb
rcrl
cmpsl
in
and
sar
fistpll
add
ljmp
sub
test
mov
arpl
jae
repnz
in
in
xor
ljmp
xchg
or
int3
int3
int3
int3
pushf
int3
int3
int3
int3
int3
loopne
xor
push
sbb
add
mov
xor
repz
jno
dec
pop
daa
pop
xor
shl
pop
push
pop
mov
std
add
mov
push
xor
hlt
adc
jmp
int3
int3
int3
int3
int3
mov
mov
cmc
ja
roll
scas
mov
pop
nop
nop
nop
nop
nop
mov
ret
jae
jg
daa
jle,pn
test
fisubrl
in
aam
sahf
xor
rolb
push
xorb
mov
dec
and
ss
lds
mov
pop
lret
fdivrl
sbb
dec
imul
push
pop
mov
inc
pop
push
out
jne
inc
divl
jmp
movsb
out
and
mov
lods
jo
in
movsl
sub
jo
push
imul
or
sub
add
cmp
fs
leave
insl
push
xor
fcoms
mov
mov
sub
imul
lcall
andb
inc
mov
xchg
in
arpl
dec
out
aad
dec
lock
dec
adc
popa
je
adc
add
xlat
icebp
push
or
imul
mov
xor
mov
sbb
add
sbb
sub
mov
int
ljmp
in
fldt
aaa
mov
icebp
in
xor
sub
mov
lret
dec
and
add
or
clc
inc
dec
or
pop
call
ljmp
and
add
sub
jbe
dec
lret
push
dec
movsb
in
xchg
mov
or
in
aam
mov
dec
pop
mov
cmpl
clc
add
and
scas
pop
push
jmp
xor
add
adc
stos
fwait
aam
das
xchg
lock
mov
lds
ret
sbb
lret
jnp
sbb
add
pop
movsl
rolb
sub
out
xlat
mov
cmp
dec
mov
int3
int3
int3
int3
int3
outsb
dec
jle
xchg
sbb
orb
sub
sbb
call
aam
jb
add
xlat
mov
and
push
pop
cmp
cwtl
ror
dec
dec
and
and
fnstcw
mov
jecxz
or
in
adc
in
pop
mov
dec
es
xor
lock
dec
lds
dec
lret
icebp
test
mov
push
add
mov
mov
iret
stos
es
sub
aas
push
popf
pop
jl
dec
jbe
into
lods
insl
jns
hlt
repz
add
mov
clc
sbbb
add
cmp
lret
int3
int3
int3
int3
int3
sbb
rorb
cmp
out
push
mov
mov
aam
mov
mov
in
stos
xor
in
pop
in
mov
movsb
jmp
jmp
sarb
sbb
inc
outsl
pop
inc
cmp
mov
or
movb
sar
xlat
jle
jo
js
push
jp
jo
out
lea
jb
cmp
ljmp
iret
and
insl
fcoms
inc
sub
aaa
lods
mov
jnp
mov
mov
add
add
stos
mov
push
and
sarl
cli
add
add
aam
or
inc
data16
xchg
inc
test
mov
movsl
xor
mov
jne
adc
jo
je
add
or
mov
out
in
clc
xlat
xor
test
mov
imul
adc
cmp
sbb
or
insb
mov
adc
fs
cmp
push
sub
push
adc
jo
or
fists
add
xor
pop
out
lahf
mov
pop
addl
loope
ficomps
mov
adc
add
dec
push
adc
fsts
sub
stos
or
aas
mov
sbb
cmp
jecxz
or
fildll
xchg
and
xchg
or
cltd
test
or
sbb
pop
xor
adc
int
mov
adc
popf
sub
sbb
push
xlat
inc
xor
lcall
add
adc
dec
mov
pop
sbb
jge
rclb
scas
inc
sbb
gs
jge
mov
subl
jb
stos
inc
std
jne
jg
lahf
pop
sub
in
or
jne
dec
popf
insl
mov
daa
mov
dec
and
jecxz
inc
pop
icebp
cltd
andb
sbb
in
sti
adcl
aam
jg
call
loope
idivl
sub
lds
jnp
pop
cmc
rorb
rol
sbb
mov
adc
push
push
mov
mov
pop
jl
out
ss
faddp
mov
dec
insl
jl
lock
das
mov
int
add
or
pusha
pop
adc
push
shlb
or
inc
adcl
scas
hlt
fidivl
jmp
push
popa
cmp
cmp
imul
jle
pop
and
mov
add
mov
sbb
lods
ja
rcrb
aam
push
pop
cmp
or
addr16
shr
push
xchg
into
test
add
pushf
adc
ficompl
inc
or
pop
dec
pop
sarb
mov
imul
push
jecxz
cs
aad
and
sbb
push
es
push
push
mov
jmp
rolb
xchg
xchg
lcall
cmp
or
adc
add
push
push
mov
int3
int3
int3
int3
int3
push
sbb
cmp
les
stos
jnp
hlt
scas
lods
jmp
stos
jne
xorb
or
add
stos
adc
out
inc
push
and
cs
in
scas
jb
mov
xchg
sbb
lcall
pop
arpl
scas
push
jp
mov
testb
sub
ret
pop
xchg
dec
arpl
dec
fs
xor
pop
mov
in
add
xchg
sahf
movsb
jb
mov
jge
call
call
add
mov
mov
lds
sub
mov
xor
push
aas
imul
mov
call
add
mov
sub
mov
std
sahf
ret
xchg
movsb
in
cld
sbb
call
jne
jecxz
or
dec
push
sbb
gs
sub
sub
mov
repz
test
and
and
rorb
jo
cmpsl
xor
fs
mov
add
add
lret
add
ret
xlat
popa
jl
fcmovbe
dec
jmp
xor
test
insl
pop
mov
mov
lret
cmp
cli
rcl
jmp
adc
add
xor
test
dec
stos
sti
ret
cs
pop
add
push
xor
xor
sub
faddl
aas
and
push
mov
shrl
outsl
adc
and
lea
mov
mov
inc
mov
adc
inc
mov
repz
sub
add
mov
jl
mov
sbb
sub
mov
sarl
xchg
inc
mov
inc
stos
stc
xchg
mov
pop
out
push
push
sub
aad
das
fwait
push
movsl
in
cld
mov
cmp
inc
arpl
add
adc
rcrl
nop
nop
nop
arpl
sbb
ret
dec
dec
mov
and
std
aas
lret
ja
clc
push
and
xchg
push
jg
mov
lds
cmp
data16
cmp
add
bound
cmpsl
clc
lods
xor
sub
adc
ret
or
xchg
push
mov
test
jmp
mov
ret
repnz
inc
mov
aad
xchg
pop
std
inc
cmp
xor
pop
xchg
ja
lea
sub
add
sub
push
loope
cmpsb
adc
int3
into
or
dec
test
sbb
mov
or
and
cmp
cmp
sbb
cmp
repz
imull
sarl
movsl
jbe
or
adc
je
and
and
add
bound
gs
sub
stc
test
shlb
mov
push
lahf
lret
or
cmp
xlat
andl
pop
in
pop
jne
das
sbb
cwtl
sub
aaa
and
sbb
add
and
daa
add
sub
inc
pop
sbb
testb
repnz
imul
nop
nop
nop
nop
nop
xor
test
sbb
out
push
pop
mov
stc
loopne
ss
add
xor
cwtl
ss
daa
mov
push
aad
inc
xchg
cmp
inc
xlat
in
mov
arpl
out
push
adc
xchg
push
insb
aaa
jns
ret
into
lret
push
pop
leave
out
sub
test
xor
add
xor
les
nop
nop
nop
nop
nop
test
and
lods
outsb
mov
lret
cwtl
sub
sub
mov
lock
popf
mov
loope
pushf
mov
hlt
adc
inc
push
mov
xchg
adc
shrb
enter
gs
jmp
test
sub
push
jb
les
jb
add
push
inc
mov
and
add
adc
mov
ret
inc
ja
mov
pop
mov
jp
nop
nop
nop
nop
nop
push
xor
test
xchg
and
sbb
fisttpl
in
mov
add
fstpl
in
fwait
ss
pop
sbb
and
es
inc
jnp
pop
fiadds
xor
push
mov
jno
push
jne
test
iret
sub
shll
sbb
add
loop
testl
test
jmp
pop
push
xor
stc
add
mov
loopne
xorl
imul
adc
cmp
insl
aam
add
test
das
push
add
sbb
cmpsl
mov
pop
sti
test
cmpsl
xor
andb
leave
sbb
xor
jl
cmp
add
loop
mov
inc
sti
sbb
sbb
xchg
out
cld
dec
icebp
xchg
add
and
mov
nop
add
insl
sbb
repz
fldt
adc
and
or
pop
dec
lcall
into
mov
push
hlt
mov
aaa
adc
inc
dec
adc
mov
jp
pop
and
mov
aaa
cltd
add
shrb
add
jle
cli
into
mov
push
bound
cld
fcomps
adc
int3
add
negb
cmp
jg
fidivrl
xlat
and
sbb
jp
adcl
das
sbb
xor
andl
aaa
sbb
mov
test
xor
movsb
push
out
xor
jne
adc
mov
mov
adc
gs
out
jmp
rorl
ja
int3
int3
int3
int3
add
mov
inc
test
mov
pop
jae
addl
stc
shl
push
jp
stc
gs
and
jo
or
xorb
dec
addr16
jle
ja
or
cmp
leave
mov
aas
jae
aad
addr16
sub
push
mov
mov
cmp
fnsave
or
add
push
lahf
jmp
push
cld
inc
sub
add
xchg
fdivs
add
movsl
xchg
negb
add
inc
jbe
jmp
insb
jp
push
popa
int3
int3
int3
int3
int3
fwait
je
pop
pushf
insl
fxam
jmp
inc
icebp
inc
sarb
mov
adc
leave
mov
test
sub
add
or
lds
loope
dec
xchg
cmp
push
pusha
test
inc
imul
int3
int3
int3
int3
int3
xlat
ror
push
push
nop
nop
nop
nop
nop
add
cmp
enter
add
jne
sub
rcr
jecxz
int3
int3
int3
int3
int3
arpl
and
cmp
or
fisttps
add
add
xchg
jbe
lret
repnz
test
ja
outsl
inc
clc
outsl
enter
leave
cmp
sbb
out
jmp
adcl
dec
ja
outsb
imul
or
xor
in
aad
xchg
mov
push
shl
mov
jp
popa
pop
insl
into
iret
push
add
dec
in
mov
cmp
or
mov
sahf
mov
stc
loop
int3
int3
int3
int3
arpl
xchg
daa
test
sarl
add
adc
mov
pop
mov
pop
mov
add
call
cmpsb
cmpsb
popf
dec
cmp
cmc
test
scas
pop
add
mov
cwtl
lock
loop
shll
imul
xor
jns
push
dec
cmc
ds
pop
pop
mov
into
cltd
jge
into
rorb
push
add
xor
cmp
fdivrs
jecxz
int3
int3
int3
int3
test
mov
cwtl
mov
mov
xor
cmp
cwtl
cmp
add
inc
pop
hlt
jnp
inc
dec
or
add
push
stc
jb
in
inc
mov
sarl
fwait
repz
in
mov
inc
mov
sahf
push
lds
mov
jo
leave
xchg
inc
pop
xlat
imul
shll
xor
das
js
push
rclb
cmp
jno
loop
jb
int3
int3
int3
int3
int3
jae
jge
aam
jp
fldt
in
test
add
push
jp
mov
mov
pop
div
fisubs
push
pop
das
pop
push
pop
pop
fcompl
icebp
ss
pop
shlb
clc
pop
push
iret
inc
sarb
in
pop
cmp
sbb
sub
or
xchg
int3
int3
int3
int3
int3
insl
lahf
ret
js
subl
or
das
fcomps
andb
movsl
xor
loope
xchg
mov
mov
mov
shrb
xor
sub
push
sbb
xorb
out
jl
lahf
dec
sbb
addl
jnp
popa
pop
mov
xor
pop
add
int
ds
shr
jge
addl
pop
cmpb
fists
ds
jo
and
stc
lods
ljmp
xorl
adc
aad
jbe
lods
cmpl
xor
outsl
cli
aaa
scas
pop
rcrl
pop
pop
jns
cmp
xchg
xor
lods
arpl
ds
push
sub
scas
mov
sbb
lcall
je
mov
xor
jge
stos
jp
aaa
adc
inc
jns
or
scas
iret
out
push
jle
outsb
jl
xchg
jp
add
add
test
cmp
ja
mov
cmpsb
sub
int
cmp
notb
andl
add
or
dec
cmp
aam
stc
xlat
fisubrl
inc
mov
jne
popa
pushf
fidivrl
outsl
dec
movsb
sbb
mov
mov
and
mov
push
mov
fucom
adc
jns
insl
outsb
and
sti
outsb
jle
mov
add
daa
and
aad
push
dec
mov
or
scas
inc
fildll
call
sahf
adc
fst
xchg
insl
test
mov
jb
subl
sahf
add
add
xchg
xor
fnstsw
push
ljmp
inc
fldenv
scas
loope
push
cmpl
pop
btl
add
mov
xor
cmpb
out
jle
pop
push
inc
xchg
mov
pop
xor
and
popa
xor
cpuid
sub
dec
bound
jge
mov
orps
pop
add
ds
data16
adc
aas
pop
add
mov
add
sti
mov
push
leave
in
out
nop
nop
nop
nop
nop
out
cmc
xor
adc
xor
sub
fisubl
sub
sbb
jmp
jne
icebp
mov
outsb
add
mov
bound
inc
push
outsb
xlat
jnp
xor
mov
inc
push
fisubl
add
adc
out
js
push
mov
shll
inc
xchg
andb
or
imull
lahf
lock
mov
enter
cmp
pop
or
sarb
mov
roll
mov
fcmovbe
repz
ja
pop
add
call
or
add
lods
pop
je
push
push
dec
repnz
popa
not
in
jle
jno
add
int3
int3
int3
int3
int3
lds
xchg
cmp
mov
test
out
mov
hlt
lret
mov
cmc
lods
mov
roll
cltd
outsb
sbb
mov
xchg
out
ds
popa
sbb
mov
movsb
push
push
xchg
out
dec
or
mov
imul
mov
inc
sbb
scas
pop
add
pop
loopne
lcall
outsb
popf
jne
repnz
inc
in
dec
cmpsl
arpl
sub
mov
add
dec
push
int
js
repz
jae
test
push
data16
pop
sbb
add
xchg
mov
clc
fidivrl
mov
sub
xchg
lds
jb
out
add
popf
xchg
or
add
daa
call
outsl
daa
insl
sub
mov
les
jmp
add
push
jae
lret
out
enter
xchg
inc
inc
adc
and
fisttpll
jne
cmpsb
stc
or
scas
pushf
nop
nop
nop
nop
nop
xor
push
xor
xor
adc
pop
movsb
xchg
xor
ret
jl
lret
add
leave
enter
cmp
mov
mov
out
jbe
mov
fdiv
sbb
mov
movsl
stc
cmp
or
aam
addr16
fmuls
outsl
popl
cmc
jo
in
stos
jb
filds
add
shl
jae
sub
push
dec
push
test
adc
pop
and
sbb
rorb
fcmovne
lret
add
pop
mov
add
push
add
xor
add
xchg
imul
fxch
mov
pop
jle
test
lret
xor
addr16
fisubl
cmpsl
insb
jb
pusha
push
inc
in
cmp
out
pop
lret
jnp
aaa
lret
test
pop
push
push
dec
sub
mov
xchg
pop
aas
xchg
dec
jmp
mov
in
cmc
nop
nop
nop
nop
nop
inc
push
jp
test
mov
or
and
jg
lods
hlt
ljmp
or
add
mov
cwtl
leave
scas
mov
ljmp
or
sbb
sub
jg
mov
or
mov
mov
or
int3
int3
inc
inc
call
outsl
or
loope
iret
add
sub
jmp
xlat
jb
pop
std
cs
movsb
mov
je
inc
mov
call
xorl
loop
xchg
data16
subb
pop
aad
xor
push
cwtl
sub
outsl
stos
pop
add
fadds
shll
movsl
add
sbb
xchg
push
js
mov
push
test
jo
mov
jno
and
cs
insl
xlat
addr16
lods
call
mov
xor
gs
xlat
sub
jmp
ret
rcll
and
clc
pop
es
cmp
mov
outsl
sub
jnp
xor
fnsave
xchg
jnp
test
jno
xor
inc
pop
mov
vcmpleps
mov
popa
sub
add
mov
add
and
xchg
mov
add
outsl
push
dec
outsl
cmp
nop
nop
nop
nop
and
mov
mov
jge
jmp
fstl
xchg
aas
in
sub
call
sbb
neg
xor
in
xchg
enter
push
sbb
outsb
cld
sub
add
in
shr
or
loop
std
cmp
cld
bound
sbb
mov
jnp
jb
ret
sub
inc
push
adc
das
hlt
add
cmp
es
pop
iret
neg
cwtl
xchg
cmp
add
scas
dec
cmp
add
adc
sbbl
cmp
push
addr16
pusha
ficoms
xchg
cmpsl
sbb
xchg
daa
push
mov
or
scas
mov
ljmp
sub
add
leave
cld
sub
les
xchg
pusha
movsl
push
ja
aam
push
sti
pop
dec
enter
mov
dec
out
add
push
cmp
and
xor
jbe
adc
in
pop
movsl
mov
adc
jmp
stc
sub
aaa
or
mov
add
rorb
push
int3
mov
repnz
dec
pop
hlt
xchg
adc
push
and
add
pushf
add
ss
or
mov
or
loope
push
mov
fdivs
aaa
dec
adc
nop
nop
nop
nop
ljmp
mov
pop
push
pop
lret
es
rorl
je
fisubs
adc
mov
mov
mov
lahf
cmp
pop
imul
or
icebp
pop
mov
cld
pop
fsubr
mulb
cmp
add
jge
pop
lock
add
xor
aaa
inc
xchg
mov
push
das
inc
lcall
daa
push
icebp
loop
lods
stos
mov
daa
jle
movsb
in
jae
ljmp
mov
jge
lds
push
into
xchg
inc
adc
cwtl
sub
cmp
xor
add
mov
sarb
add
shlb
add
push
mov
data16
push
arpl
add
jg
xchg
xor
and
add
movsb
mov
pop
sbb
rcl
dec
fstp
call
repnz
and
jle
add
sahf
je
and
mov
in
cmp
cwtl
insb
jmp
fsubrl
in
dec
mov
lcall
lea
cli
addl
fdivs
fiadds
inc
xchg
mov
aaa
ret
cld
inc
mov
xor
out
jnp
movl
inc
add
es
or
xchg
shrl
lahf
lods
shrb
push
pop
mov
lods
xlat
movsb
push
imul
leave
add
pop
adc
jbe
call
popf
fmull
dec
inc
fstl
xlat
sbb
adc
jmp
mov
fxch
mov
cwtl
stos
popa
in
dec
xchg
lcall
adc
xor
out
fiaddl
popa
mov
cli
popa
or
pop
ret
sbb
fimuls
adc
ljmp
arpl
adc
ret
into
shll
outsb
shlb
pop
mov
jno
adc
test
mov
lds
xor
and
adc
cmp
fwait
xchg
cmpsb
negl
jecxz
ss
pusha
outsb
ds
inc
jnp
sahf
in
shrl
sahf
push
les
aas
rolb
dec
das
and
pop
xchg
inc
imul
stos
pop
add
movsb
out
lock
nop
nop
nop
nop
xor
lods
ds
lea
lahf
pop
mov
add
ret
sbb
imul
adc
loope
mov
pop
or
mov
mov
push
xor
icebp
cwtl
push
or
loop
pop
sbb
icebp
int
or
lods
icebp
or
fiaddl
cmpsl
jno
lcall
add
or
outsl
sarl
inc
rcr
jge
adc
movsb
and
fisubl
mov
and
pop
cmp
sbb
add
jp
mov
stc
bound
stos
out
jecxz
aam
sub
cmp
lea
sahf
sbb
cmpsl
cld
cmc
ss
rcrl
xlat
dec
lock
sbb
sub
push
push
shrb
mov
scas
inc
inc
push
push
pop
sbb
dec
lds
and
mov
add
mov
mov
cs
ficoml
nop
nop
nop
nop
nop
add
and
xchg
add
inc
jle
jp
adcb
popf
adc
inc
mov
dec
outsb
adc
pop
add
fdivrl
mov
push
xchg
loope
xchg
lea
add
push
int3
int3
int3
int3
int3
or
add
xchg
pop
mov
enter
sbb
out
inc
mov
inc
stos
nop
nop
nop
nop
nop
fwait
std
enter
pop
or
sbb
div
lret
in
stos
lahf
add
out
mov
fistps
enter
int3
int3
int3
xchg
and
imul
test
out
dec
or
xlat
sbb
jmp
inc
lds
sub
jbe
in
cmpsb
shll
idivb
lret
push
add
mov
inc
les
shrl
jno
cltd
adc
pop
mov
dec
lods
mov
sub
sub
and
add
aam
mov
test
iret
gs
lock
mov
test
xor
mov
setbe
daa
pop
outsl
jg
xchg
or
cmp
dec
cmpb
pop
push
pop
push
jecxz
push
out
adc
push
xor
add
and
add
bound
add
mov
cmc
inc
mov
dec
std
cmc
jl
sbb
iret
mov
rolb
cmp
add
out
stos
andl
sahf
dec
stc
pushf
stos
movsl
cmp
push
nop
nop
nop
nop
nop
lods
inc
inc
xorb
mov
or
push
lret
sub
in
add
out
lods
cmpsb
adc
inc
repnz
ljmp
outsb
fnsave
and
mov
mov
loope
movsl
adc
cmp
add
xchg
call
mov
test
outsl
jle
in
pop
pop
sbb
push
mov
fimull
add
or
mov
sub
mulb
xor
cmpsb
xor
inc
inc
xchg
mov
xchg
je
adc
jbe
inc
sti
cmpsl
ds
dec
loopne
fwait
call
and
pop
ret
mov
mov
rorl
adc
mov
xorb
sbb
inc
push
or
bound
lcall
xchg
nop
nop
nop
nop
nop
xlat
or
enter
shr
dec
cli
imul
cs
hlt
dec
mov
push
dec
js
mov
sti
jne
movsl
mov
add
insb
movsb
stc
stos
stc
inc
sti
insb
fs
inc
in
pop
ss
lods
mov
and
push
scas
sar
lahf
loopne
adc
jne
push
in
add
sbb
adc
nop
nop
nop
nop
nop
mov
popa
cmp
jbe
and
sub
or
sub
adc
lods
sub
sub
aad
inc
xchg
imul
ret
fcompl
pop
xor
xlat
dec
flds
stos
jo
xorb
jae
push
clc
je
shrb
sbb
add
dec
dec
xor
jns
xlat
test
inc
xor
or
xor
fmulp
pop
jecxz
add
add
or
pslld
adc
mov
sbb
add
dec
pop
mov
mov
sub
loope
sbb
sbb
gs
push
fldt
scas
cld
hlt
push
out
mov
test
loopne
pop
pop
xor
sub
dec
mov
jmp
lea
sub
add
xchg
mov
mov
movsb
add
ficomps
jle
cs
mov
cwtl
mov
cmp
int3
add
cmp
dec
pop
test
cltd
rorb
outsl
or
jmp
testb
aaa
jmp
dec
iret
repz
pop
out
fxch
sub
fs
imul
outsb
loope
add
scas
cmp
stc
out
push
pop
clc
sti
pop
movsl
pop
pop
cmp
mov
push
or
ja
orl
add
sub
sbb
sbb
and
lock
or
add
int
nop
nop
nop
nop
nop
popf
clc
mov
add
call
das
movsb
pop
out
mov
je
dec
iret
cmp
jbe
or
push
push
add
stc
push
adc
ret
iret
divl
and
pop
es
in
xor
nop
nop
sbb
iret
mov
add
aad
ret
mov
mov
cmp
add
or
sub
daa
cmpsl
syscall
and
popa
mov
mov
aad
push
pop
inc
or
mov
mov
pop
mov
repz
shrl
mov
stos
mov
sub
out
pop
dec
sahf
lds
pop
sbbl
shr
in
call
pop
cli
inc
stc
scas
and
xor
or
and
fmull
es
imul
stos
dec
jns
xchg
sub
ja
repz
sbb
nop
imul
or
loopne
xchg
mov
xor
incb
jl
in
dec
repz
sbb
cmp
ds
pop
cmpsl
dec
sbb
cmp
pop
cmp
imulb
push
loope
lock
pusha
movl
push
and
addl
cmp
je
vucomisd
and
pop
and
push
test
pop
jnp
imul
into
jmp
dec
push
xchg
mov
sbb
dec
cwtl
je
bound
hlt
jnp
ret
aam
cmp
add
insb
repz
add
test
add
notl
push
mov
repz
call
and
add
add
ss
pop
loopne
xorb
inc
mov
ror
movq
xor
rolb
push
push
pop
ret
imul
mov
mull
jecxz
push
adc
cmc
dec
repz
ret
xlat
jmp
pop
lods
lret
jle
mov
jo
pop
lods
adc
push
sbb
ret
xchg
imul
lret
nop
nop
nop
nop
cmp
rcr
jge
cmp
aad
jge
cmpsb
nop
nop
nop
nop
nop
out
mov
icebp
adc
or
and
pop
movsl
push
dec
test
dec
push
mov
mov
cltd
sbb
xchg
sahf
and
xchg
inc
neg
push
jp
pop
outsl
lcall
sub
jo
popf
xchg
xor
xor
xor
int3
int3
int3
int3
data16
pop
cmpsl
and
out
dec
sahf
lods
addr16
rcrl
lods
mov
mov
inc
mov
out
movsl
mov
add
mov
mov
push
fidivrs
pop
pushf
add
push
fsubs
mov
int
adc
in
add
loope
mov
jno
mov
loopne
ret
xorb
push
insl
xor
cmp
lods
sar
adc
movsl
rolb
movzwl
add
test
and
cmp
xchg
jmp
fldcw
push
jg
sub
repz
xchg
jmp
mov
cmp
bound
jae
daa
sbb
push
int3
int3
int3
int3
sahf
sbb
fistps
dec
push
jecxz
shr
test
ficompl
mov
mov
sbb
xchg
fs
inc
mov
insb
mov
push
jmp
scas
sub
outsl
subb
fistpl
xchg
int
repnz
pop
cmc
push
movsb
cmpsb
cmp
xchg
insb
sarb
jbe
dec
jle
sbb
mov
and
sub
mov
mov
mov
pop
imul
xchg
nop
add
push
mov
imul
nop
jb
lret
pusha
jno
add
data16
adc
pop
cmpsl
jg,pt
mov
pop
pop
xchg
sub
dec
pusha
stos
jo
xor
test
xor
xorl
std
adc
cmpsb
xchg
pop
loope
pop
dec
jmp
call
sbb
mov
out
or
das
imul
gs
aas
dec
mov
cmp
mov
mov
gs
popa
push
push
test
mov
test
jns
sbb
or
rorb
mov
je
mov
outsb
rorb
xor
outsb
cmp
loopne
add
ja
movsb
lret
xchg
cmp
cmp
adc
sbb
call
mov
cmpsl
mov
xchg
or
js
add
or
pop
aaa
push
imul
pop
adcb
mov
scas
lds
sbb
lcall
jo
xchg
push
bound
sahf
cmpb
lock
fldenv
data16
aam
jmp
adc
adc
or
shll
push
adc
jnp
xor
mov
add
xchg
dec
mov
loop
out
adc
mov
jl
mov
mov
add
aam
inc
or
out
int3
int3
int3
int3
int3
xchg
scas
jle
push
xchg
add
sbb
cmc
int3
int3
int3
int3
int3
jo
or
push
cwtl
jle
pop
leave
in
jne
cmp
jb
add
cmp
dec
ffree
xorl
add
out
mov
push
adc
mov
bound
or
clc
and
push
add
aad
mov
mov
outsl
out
sbb
add
dec
jno
mov
jp
iret
repnz
or
dec
in
fcomps
add
sbb
and
inc
mov
pushf
bnd
sub
push
cmp
pop
xor
in
adc
mov
push
imul
gs
mov
xor
imul
jecxz
and
push
push
dec
mov
ret
mov
pop
seta
sbb
add
insb
xchg
mov
jnp
mov
inc
inc
mov
mov
fsubr
lods
inc
add
sahf
call
or
xchg
fsts
dec
sub
imul
sub
insb
stc
jp
and
das
sub
cmp
xor
pop
jo
dec
out
ljmp
or
leave
rcrl
movsb
sbb
adc
mov
ds
dec
pop
fdivrl
pushf
mov
mov
add
and
sub
inc
jne
stos
sahf
push
pop
and
jne
testl
pushf
cmpsb
adc
cmpsl
ljmp
outsl
xchg
stos
mov
mov
mov
push
insb
insl
mov
inc
shlb
push
hlt
mov
movsb
adc
push
and
add
dec
sahf
jmp
adc
sub
fwait
pop
jmp
cwtl
cmp
adc
mov
je
aad
mov
cmp
push
subl
jmp
out
adc
adc
xor
mov
cmp
imul
adc
loope
xchg
or
cmp
test
add
es
aam
movb
pop
ss
jg
and
test
pop
xchg
cwtl
fcomi
jecxz
sub
and
push
xchg
aad
insl
or
dec
xor
xchg
out
out
mov
ret
and
test
les
add
jecxz
push
test
movsl
mov
fbstp
pop
cmp
inc
sbb
scas
add
inc
mov
or
subl
nop
inc
pop
fildl
loopne
mov
jb
mov
mov
jnp
fwait
or
movsb
lahf
add
xchg
fisttps
icebp
cmp
insb
rcll
testb
int3
push
sbb
imulb
jae
jl
inc
xor
jecxz
std
dec
repnz
ret
add
cmp
roll
ret
loope
jo
mov
cmpsl
incb
out
mov
fucom
xchg
xor
cli
movsl
sbb
lock
push
add
rorl
imul
rolb
stos
sbb
cmp
enter
fmul
pop
sbbl
dec
mov
cmp
mov
adc
cmp
add
xchg
adc
ficoms
ret
std
jnp
movsb
jmp
subb
cmp
popf
mov
mov
mov
mov
push
dec
add
pop
add
nop
nop
nop
nop
nop
stc
aaa
xchg
xchg
lods
mov
jo
or
jmp
decb
insl
mov
jns
nop
nop
nop
nop
fidivs
insl
out
dec
cmp
add
lods
and
mov
xor
lods
cld
xor
mov
aam
nop
nop
nop
nop
nop
lods
insb
cmp
pop
loopne
xchg
xchg
gs
cmp
pop
ds
test
test
add
or
push
mov
add
jl
push
rol
xchg
pusha
pop
lock
xchg
jp
jno
xchg
rolb
nop
nop
inc
rol
mov
sub
arpl
pop
adc
aam
dec
rcll
push
mov
enter
jge
cmp
add
push
xchg
in
xchg
test
inc
leave
scas
dec
iret
jno
mov
repnz
lret
jnp
clc
popf
xchg
lret
daa
outsl
mov
dec
int3
int3
int3
int3
int3
xchg
ret
shll
cmp
mov
pop
sub
mov
and
dec
mov
mov
or
ja
nop
nop
nop
nop
nop
rorb
subl
cld
movsl
pop
stc
xchg
cmc
add
mov
int
ficoms
and
cmp
or
add
popf
out
pop
inc
lea
mov
push
cmpsb
cmp
pop
rorb
jnp
dec
bound
ficompl
add
mov
mov
jae
mov
dec
and
sub
nop
nop
nop
nop
nop
mov
pop
pusha
mov
push
cmp
add
mov
dec
lock
shrb
dec
dec
pop
jmp
lret
mov
rcr
jp
bound
add
and
fwait
sahf
repz
imull
pop
imul
push
js
adc
jnp
add
in
in
and
xor
sub
xchg
add
mov
or
and
jg
jmp
popa
adc
add
adc
testb
in
push
mov
icebp
push
js
jbe
clc
xchg
and
add
fisttps
xor
adc
icebp
rol
or
xor
jle
rcr
dec
push
mov
mov
or
add
rcll
push
aam
mov
ja
shl
mov
mov
cmp
pusha
inc
movsb
dec
add
jp
js
xor
jmp
pop
adc
sbb
das
xchg
xchg
sub
sbbb
imul
push
inc
jne
scas
jo
push
mov
js
cmp
push
xchg
mov
mov
fdivs
and
xor
push
mov
cwtl
dec
mov
popa
push
and
cmpsl
repz
enter
das
add
rcr
mov
cwtl
mov
filds
aad
stos
outsl
xor
xchg
sbb
out
mov
inc
fwait
and
jmp
adc
filds
jge
int3
int3
int3
int3
int3
ss
pop
sbb
insl
or
ja
fldpi
adc
dec
and
cwtl
dec
nop
nop
nop
nop
nop
in
repnz
dec
lcall
fidivrl
clc
stc
cmp
inc
clc
sbb
push
scas
mov
or
test
push
xchg
ljmp
lahf
call
or
push
jmp
adc
adc
sbb
mov
xchg
cmpsb
xchg
xlat
repz
fsts
loopne
lea
shlb
je
sahf
es
mov
loopne
mov
cmpsb
xadd
int3
mov
ljmp
push
lds
fiaddl
out
lret
out
xor
fadds
rcr
adc
inc
imul
jo
daa
clc
add
mov
mov
mov
ds
xor
dec
decb
jo
fucomip
call
call
ds
adc
por
push
rolb
add
push
adc
in
test
in
fwait
cwtl
sahf
int
sbb
fidivrs
int3
int3
int3
int3
int3
jmp
aad
and
mov
aaa
test
stos
adc
dec
frstor
add
fcomip
shrb
int3
xor
mov
in
add
mov
int3
int3
in
lret
dec
lds
xchg
xor
aas
fnstcw
inc
clc
jbe
out
iret
adc
bound
insb
sub
and
sub
push
mov
cmpsl
fildll
xor
mov
ljmp
rorb
sub
adc
mov
and
cmp
int3
int3
int3
int3
add
jbe
jno
xchg
test
adc
lret
mov
mov
bound
pop
jg
dec
dec
and
repnz
mov
dec
and
ret
mov
fcoms
in
stc
inc
cmp
pusha
cld
je
xchg
aad
cwtl
pop
add
xchg
inc
ja
repnz
and
js
sub
mov
and
mov
lahf
xchg
sbb
xchg
push
push
add
or
int3
int3
int3
insl
call
cwtl
test
in
scas
lret
adc
lcall
loop
jge
or
mov
stc
das
inc
mov
cmp
int3
int3
int3
int3
adc
jne
out
shll
popf
scas
adc
dec
sbbl
lds
inc
inc
wrmsr
adc
sbb
js
jp
movsl
cmp
das
pop
push
xor
inc
addr16
mov
xchg
dec
xchg
and
loope
fldt
cmp
mov
cmp
mov
inc
mov
fbld
je
repz
pop
fs
adc
jle
mov
shlb
aad
xchg
lahf
and
adc
lods
aaa
jo
sbb
les
daa
rorb
pop
sarb
jno
push
jp
outsb
popf
and
hlt
adc
sub
int
bound
int3
int3
int3
int3
nop
nop
nop
nop
nop
mov
dec
pop
sbb
addl
jp
pop
xchg
insl
adc
add
inc
cmp
and
mov
inc
push
add
xor
lret
sbb
jle
iret
and
jp
lods
ret
rorb
add
insl
jmp
out
out
push
in
dec
and
add
mov
into
popf
xchg
dec
xor
xchg
mov
push
add
dec
pop
or
jno
pop
movsl
inc
hlt
and
inc
jns
ss
xchg
xchg
shrl
or
add
or
inc
jl
and
outsb
addb
or
adc
push
cmp
rcrb
js
out
mov
cmp
pop
inc
int3
int3
int3
int3
int3
ds
mov
pop
popf
andb
test
mov
dec
imul
add
adc
sbb
fsubr
repz
and
add
pop
add
ds
xor
loop
fisubl
out
ja
ljmp
lods
sbb
test
sub
int3
int3
int3
int3
int3
es
sbb
add
jp
jp
push
sub
flds
roll
xor
jmp
dec
cmp
add
push
je
int3
int3
int3
int3
leave
and
mov
lret
mov
test
pop
scas
xor
imul
dec
das
shlb
inc
xorl
lcall
add
ja
fbld
sub
cmp
test
int3
xor
mov
xchg
adc
add
loop
das
xorl
lods
xor
or
add
mov
jns
adc
sub
and
xor
sbb
jp
add
adc
sbb
add
fstpt
ret
sbb
incb
inc
xchg
lea
sbb
add
loop
cmp
and
fcmovbe
pop
sbb
mov
loop
inc
add
pop
mov
fldt
nop
nop
nop
nop
inc
loopne
out
mov
std
pop
enter
add
add
xor
sti
mov
mov
mov
mul
xchg
pop
and
lcall
add
test
test
nop
nop
nop
nop
adc
inc
cltd
mov
lds
push
int
repnz
mov
in
inc
cltd
xor
outsb
repnz
test
arpl
cmp
insb
mov
jecxz
jns
push
mov
cmp
outsb
push
repz
push
in
call
outsl
enter
ret
sub
fisttps
add
popf
xchg
bound
mov
cs
fisubrs
fisubrs
or
add
and
push
dec
xchg
xchg
push
xchg
clc
ja
aad
add
dec
jnp
pop
je
insl
xchg
cmp
imul
dec
pop
je
lods
or
add
in
mov
add
push
popa
lods
jecxz
pop
sub
fs
sub
inc
fidivl
xchg
test
xchg
pop
jp
adc
mov
cmp
dec
xlat
imul
add
or
lret
sbb
test
add
mov
negl
jno
add
xor
inc
sub
imul
lock
rcl
cmp
add
sub
mov
lock
lods
dec
adc
mov
or
jbe
jl
int3
int3
int3
int3
int3
lds
add
loop
aam
insl
addr16
mov
sbb
addr16
xchg
and
and
sub
push
or
pop
scas
adc
jp
stos
add
pop
gs
sbb
add
cmpl
add
pop
mov
out
lret
and
mov
ja
pusha
inc
mov
sub
sub
mov
movsb
mov
aam
inc
lods
xchg
or
adc
mov
xchg
cmp
js
shlb
mov
sarb
ja
mov
daa
dec
xchg
xor
test
mov
add
add
add
dec
xchg
fldl
jge
sub
and
movb
int
call
ret
xor
add
les
outsl
dec
shrb
bnd
dec
andl
lcall
loope
inc
push
adcb
fcmovb
sub
adc
xor
lods
mov
xchg
or
in
jno
and
test
pop
lods
push
aad
je
std
jle
test
insl
xor
in
ret
dec
test
adc
loopne
mov
cmp
iret
jl
push
inc
push
popa
push
xor
jge
test
mov
fimuls
add
push
call
shr
fidivl
icebp
adc
push
out
stos
cli
test
sbb
pop
push
mov
push
cmpb
lock
add
jb
jmp
push
pushf
outsl
dec
sbb
in
or
fcmovu
and
add
ret
pop
or
add
push
mov
mov
ss
imul
test
int3
int3
int3
int3
pop
mov
cmpl
xchg
jp
cli
push
push
das
out
enter
sbb
add
push
ret
pusha
test
out
cmpsb
pop
scas
mov
mov
mov
push
pushf
xor
ljmp
push
jecxz
pop
mov
int
xchg
ret
jnp
data16
dec
outsb
dec
push
and
jbe
scas
call
pop
div
push
std
aad
js
movsb
cmp
inc
push
adc
es
add
lods
inc
out
mov
mov
cmp
icebp
mov
je
popa
fsubl
xor
icebp
mov
nop
push
adc
loope
push
mov
dec
push
jg
push
xchg
push
icebp
shrd
into
mov
cmp
add
das
sub
mov
test
sti
or
add
and
or
mov
outsl
sbb
mov
or
pop
mov
rorb
outsb
jae
mov
push
out
sub
mov
push
dec
mov
xor
push
out
imul
mov
icebp
sub
lret
iret
mov
xchg
mov
rorb
dec
xlat
xchg
push
cmp
add
add
sti
mov
imul
test
xchg
cmp
scas
fistps
mov
movsl
or
dec
movsb
and
fldl
inc
cmp
mov
arpl
ja
sub
idivb
or
aaa
test
dec
xlat
push
es
dec
push
lcall
pusha
mov
test
scas
wbinvd
push
cmp
mov
mov
test
stos
sub
and
adc
loop
inc
ret
ljmp
pop
add
scas
into
and
jge
add
fdivr
xor
add
rcr
dec
dec
mov
lock
push
in
dec
jge
lds
sbb
pushf
push
or
lret
js
ret
orb
movsb
test
test
subl
fnsave
cwtl
lods
pop
push
js
lods
out
xor
push
dec
jne
ret
mov
adc
xchg
insb
test
push
xor
sbb
inc
mull
cmpsb
cmpl
lahf
shlb
daa
xchg
inc
cmpxchg8b
popf
pop
lahf
aaa
mov
xor
imul
insl
mov
jno
xor
bound
je
movsl
adc
pop
lret
jae
xchg
adc
mov
rclb
xchg
pop
pushf
popa
push
jbe
nop
nop
nop
nop
nop
xlat
sub
xchg
in
call
cmp
sbb
lods
cmpsl
bound
jmp
and
and
add
and
xchg
cmp
jp
jbe
xchg
int3
int3
int3
int3
int3
mov
mov
jne
jbe
fs
fstps
mov
mov
nop
nop
nop
aas
sub
testl
inc
int3
int3
int3
int3
int3
std
js
aam
add
pop
out
xor
jno
jge
pop
data16
sub
xorb
arpl
add
std
xor
add
pop
add
jns
jecxz
or
dec
movsb
js
and
test
int
pop
add
inc
xchg
and
fdivs
inc
leave
data16
add
in
into
adc
cli
into
leave
or
test
cltd
sbb
fcoms
in
and
mov
mov
jecxz
push
or
jmp
mov
push
inc
je
dec
push
dec
iret
add
sbb
add
ljmp
lods
xchg
mov
in
mov
adc
cmp
test
lret
lods
dec
imull
jle
cmp
aam
xlat
add
add
pop
cwtl
push
inc
les
mov
lcall
or
add
in
hlt
out
call
lods
inc
and
test
sub
fbstp
aaa
or
push
cli
sub
or
push
pop
nop
nop
nop
nop
nop
mov
cltd
mov
aas
sbb
push
cmp
stos
mov
nop
nop
call
cmp
mov
mov
add
mov
jae
insl
outsb
jp
stos
subl
pop
insb
jp
pop
cld
lock
sarl
dec
push
add
repz
mov
test
or
xor
add
push
add
cmp
add
lods
mov
jmp
push
mov
ds
fcoms
int3
int3
int3
int3
gs
gs
rcl
pusha
inc
push
push
test
mov
pop
and
fdivp
add
mov
push
mov
ljmp
adc
cltd
xor
cwtl
hlt
lret
insb
pop
loop
scas
mov
add
push
inc
sbb
add
cwtl
pop
stos
mov
xchg
mov
iret
ret
pop
and
test
and
and
pop
in
mov
push
mov
lret
jmp
lret
xor
pop
add
pop
dec
push
loopne
add
int3
int3
int3
int3
int3
or
fucomp
adc
lret
xor
pop
das
inc
popa
jmp
lods
jmp
dec
xor
mov
add
xor
xor
jbe
int
push
test
add
jae
outsl
xchg
into
mov
add
rep
xchg
mov
dec
and
pop
xchg
mov
sbb
pop
movsl
xchg
add
fcmove
in
pop
push
ret
fisttpll
or
cmp
add
or
leave
jmp
scas
xor
stc
bound
je
push
sbb
shll
mov
dec
dec
jle
in
adc
imul
test
addr16
push
or
jae
jae
xchg
fsts
jecxz
jle
inc
fimull
fwait
inc
xchg
lcall
mov
add
aas
int3
int3
int3
int3
int3
call
imul
mov
test
arpl
lds
push
cmpsb
cmp
mov
xchg
movsb
or
int3
int3
int3
int3
test
push
sahf
mov
fdivs
push
pushf
sbb
jl
into
xchg
xor
push
outsb
cmp
shll
lods
pop
sub
aam
lds
pop
pop
inc
sub
dec
push
mov
test
or
cltd
shlb
sbb
lahf
jo
adc
repnz
loopne
mov
imul
out
mov
nop
nop
nop
nop
nop
lret
jmp
call
mov
dec
push
loop
mov
in
movsl
and
mov
cltd
cmpsb
das
jnp
andl
and
mov
xor
lahf
ljmp
cld
jbe
mov
aad
dec
cld
jge
jae
mov
loope
je
mov
xchg
xor
icebp
mov
mull
imul
lcall
fucomi
stos
pop
or
cmp
mov
xchg
sub
xchg
sbb
loope
xchg
pop
andb
jle
sti
add
fstl
lea
jno
or
mov
movsl
hlt
dec
jo
stos
mov
pusha
mov
mov
cmpsl
adc
push
std
rorb
roll
jmp
cltd
imul
xor
out
stos
sub
ljmp
sti
les
inc
push
jo,pn
xchg
dec
push
push
pop
inc
sub
lods
inc
push
hlt
cmpl
inc
pop
imul
sbb
add
mov
add
test
jle
push
jbe
scas
sub
pop
clc
or
sub
xchg
divb
push
int
out
sub
mov
add
nop
nop
nop
jo
sbb
pusha
mov
xchg
mov
cmpsl
cltd
test
loop
mov
xchg
cmp
pop
cmp
add
jmp
inc
popf
clc
cmpsl
sbb
mov
std
sar
jno
scas
sub
lock
mov
mov
sbb
push
in
jmp
add
add
jl
sbb
insb
inc
lods
stos
mov
mov
insl
mov
das
lret
push
or
add
mov
jle
inc
pop
xor
nop
nop
nop
nop
pushf
ret
repz
dec
addr16
mov
mov
out
fildll
mov
mov
aam
rorb
xchg
and
xorb
jge
add
jg
cwtl
mov
xchg
dec
addr16
mov
cmpsb
movsl
nop
nop
nop
nop
nop
cmp
mov
lds
or
mov
jo
dec
mov
add
or
push
stc
push
ficompl
js
lret
push
and
sub
popa
jmp
mov
inc
insb
cmp
mov
es
jae
and
add
jl
scas
add
dec
cli
dec
mov
lret
pusha
int
call
hlt
or
lds
jns
imul
add
pushf
cmpsb
xor
push
sub
mov
loopne
cmp
aaa
add
push
lds
or
clc
mov
xchg
outsb
mov
and
adc
pop
push
add
xor
lock
int3
int3
int3
int3
add
add
sub
out
hlt
mov
cmc
fisubrl
or
sbb
ret
cltd
mov
fbld
cmp
add
add
dec
outsl
mov
aaa
push
xor
js
add
inc
lds
sbb
lret
daa
add
stos
mov
movsl
adc
or
xchg
xchg
sbb
shll
fisubrl
jp
mov
dec
jmp
dec
test
xor
jnp
pop
push
mov
sbb
movsl
icebp
inc
or
sbb
push
test
xor
in
sti
mov
pop
testl
in
mov
nop
nop
nop
nop
and
pop
mov
dec
or
mov
or
mov
jae
xchg
int3
int3
int3
int3
int3
dec
mov
mov
shll
scas
rep
push
in
jne
ficompl
push
push
ret
add
pop
dec
xchg
gs
imul
scas
lret
test
dec
xor
scas
pusha
ror
int3
int3
int3
int3
call
imul
cmpsb
cli
lea
psrlq
pop
adc
push
push
pop
or
dec
inc
lret
cmp
subl
xlat
push
xchg
jbe
or
cmp
stos
jecxz
sahf
xchg
lahf
inc
add
inc
rclb
inc
jecxz
leave
aaa
cmp
outsl
and
loope
aam
adc
pop
push
add
cmpsl
xchg
ret
add
push
jg
add
adc
mov
mov
ss
adc
mov
push
cmp
and
xor
test
call
divb
pop
gs
nop
nop
nop
nop
nop
jno
pushf
movsl
push
pop
pop
ljmp
inc
into
loope
pop
int3
int3
int3
int3
int3
inc
aaa
cmc
push
push
scas
test
xor
mov
mov
mov
ret
sbb
inc
push
fdiv
xor
mov
dec
xchg
cli
andb
mov
fcmove
int3
int3
int3
int3
int3
and
fwait
dec
sbb
hlt
push
sbb
sbb
test
jecxz
sbb
dec
repz
and
jmp
jmp
add
or
movsb
sahf
into
sbb
jge
fdivrl
mov
mov
adc
cli
sub
test
xchg
fdivl
loopne
inc
ficomps
je
jp
out
outsl
negl
aaa
mov
ja
repz
or
xchg
add
out
in
push
notl
mov
addb
cmove
jno
nop
nop
nop
nop
nop
jno,pn
dec
add
xor
movsb
and
add
add
add
repz
repz
pop
lods
test
cmp
mov
dec
inc
add
out
shlb
mov
aaa
xchg
fcompl
lds
and
add
testb
inc
pushf
outsb
xchg
pop
pop
aam
mov
mov
loop
cmc
ficompl
add
sub
xor
sbb
push
sub
xchg
mov
and
add
add
fwait
pushf
subb
or
mov
test
push
mov
push
outsl
xchg
adc
push
orl
jno
push
adc
adc
add
fwait
add
sub
xchg
clc
jl
push
xor
push
mov
call
scas
test
sub
add
stc
jnp
xor
jge
out
enter
nop
nop
nop
push
addb
and
ret
test
scas
leave
mov
jns
xchg
cmp
add
cs
hlt
pop
in
cmp
popf
inc
and
dec
pop
dec
mov
in
or
outsb
mov
mov
jb
nop
nop
nop
nop
nop
push
mov
lret
lret
dec
cmp
sti
mov
cmpsl
mov
testb
rcll
xchg
push
aad
pop
sub
jecxz
insl
and
jno
cmpsl
pop
repz
popa
mov
and
adc
pop
sub
outsl
cmp
add
add
mov
sbb
les
movl
cwtl
mov
ljmp
xchg
pushf
sbb
out
out
mov
in
pop
dec
ret
popf
jecxz
stos
cltd
test
push
dec
add
das
mov
push
jp
and
pusha
pusha
xor
sub
mov
clc
jle
rcrl
and
pop
push
lcall
add
shrb
pop
arpl
add
adc
xor
cmpsb
inc
pcmpgtb
sub
xor
mov
xchg
jge
mulb
add
add
jle
icebp
cwtl
pop
add
cmp
push
mov
push
xchg
sub
mov
push
adc
sbb
add
popa
mov
movsl
aas
orl
out
movsl
pop
and
inc
sbb
pop
cmp
sarb
fidivrl
adc
xchg
lret
in
lahf
push
jno
jle
push
mov
shl
cltd
sldt
rorl
jmp
cmp
jns
int3
int3
int3
int3
int3
pop
lret
adc
adc
jno
mov
mov
add
mov
fwait
int
icebp
lds
sbb
cmc
std
cmp
aas
cld
xor
mov
ds
ret
call
push
outsl
pop
dec
push
lds
movsl
aam
loopne
nop
nop
nop
nop
nop
or
test
daa
fimuls
mov
add
inc
xchg
pop
dec
fs
xor
insl
fwait
in
pop
jnp
pop
incb
inc
sub
aad
gs
pop
mov
and
inc
shll
jns
or
mov
or
addr16
adc
inc
mov
js
xchg
es
pop
mov
pop
cli
in
int3
int3
int3
int3
mov
mov
es
cmp
fstl
cmpsb
add
nop
nop
nop
nop
jge
dec
dec
and
test
mov
sar
xchg
cmp
shlb
xor
and
jne
jae
aaa
xor
add
cmp
rclb
nop
adc
sub
and
and
cld
pop
andl
jo
add
pop
dec
scas
pop
mov
andb
push
inc
add
aad
push
jg
sbb
push
and
sarl
cmp
dec
sbb
fadds
or
jmp
fdivl
ficoml
sub
pop
cli
xor
sbb
hlt
notl
je
je
sbb
sahf
sbb
add
inc
xchg
mov
cltd
xchg
into
fidivrl
gs
or
or
push
add
mov
add
pop
cltd
mov
mov
sti
aas
cltd
jecxz
sar
or
pop
outsl
sbb
aad
fwait
mov
jmp
push
loope
mov
cld
and
add
test
dec
int
lret
aad
cld
sub
xchg
xor
fwait
subl
add
cmp
mov
out
fadds
xchg
jb
stos
shlb
jb
leave
arpl
xchg
sbb
andb
out
inc
xchg
js
addr16
sub
outsl
jle,pt
and
insb
or
shlb
adc
xchg
mov
fdivl
jmp
pop
hlt
jne
ss
shll
cmpsl
jno
dec
jb
iret
adc
enter
outsb
cmc
iret
sti
add
and
push
lods
jp
stc
cwtl
push
xchg
jge
xchg
int3
int3
int3
int3
int3
and
int3
int3
int3
push
push
jl
cli
mov
lock
or
pop
jno
or
add
scas
fwait
aaa
or
aad
mov
icebp
outsl
arpl
adc
iret
movsl
into
pop
fnstenv
lahf
js
add
scas
adcl
add
or
rcrl
aad
mov
std
aad
and
cmp
mov
jno
enter
mov
jl
aaa
push
loop
lds
lods
std
mov
jnp
test
xor
or
sub
ss
sub
and
adc
loop
daa
or
sub
jb
dec
lret
cmc
push
mov
mov
xor
or
rolb
fisubs
dec
add
leave
es
sbb
add
stos
add
jp
scas
sub
loopne
inc
mov
shlb
lods
es
cmp
call
cltd
retw
xlat
sbb
inc
jae
sti
and
mov
mov
or
aas
add
call
push
outsl
dec
sub
dec
cld
xlat
jecxz
inc
fcoml
fldenv
mov
dec
adc
add
leave
pop
mov
sub
int3
int3
int3
int3
mov
aas
outsb
jle
fmull
push
cmpsl
pmaddwd
int3
int3
int3
seto
testl
nop
nop
nop
xor
jo
sti
jno
inc
cmp
icebp
mov
lcall
push
cld
dec
loopne
mov
add
inc
stc
mov
inc
lret
aam
mov
pop
test
or
xchg
jne
int
stos
fisttps
or
mov
pop
lahf
mov
mov
pop
daa
in
jb
repnz
mov
sbb
mov
push
pop
bound
stos
jns
aaa
stos
mov
mov
clc
in
stos
notl
stos
leave
push
ror
outsb
je
and
push
lcall
pop
sub
add
rcrl
je
ret
jbe
ss
data16
mov
mov
dec
pop
sub
sarb
fdivrs
fidivl
scas
movsl
mov
movsl
add
lock
add
lcall
lcall
fsubs
pcmpeqw
or
lods
mov
scas
das
movb
xor
ret
fsub
jnp
movsb
adc
in
movsb
fnstenv
cmp
push
aaa
stos
imul
mov
inc
popw
jns
addr16
pusha
test
insb
mov
inc
mov
pop
ret
js
aaa
sbb
in
pop
lods
ret
sarb
mov
pop
ja
imul
dec
push
dec
dec
mov
jbe
cmp
push
add
pop
push
jmp
lock
loopne,pn
add
push
cmp
cmpsb
shr
dec
xchg
test
int
les
aad
push
and
dec
push
loope
movb
iret
inc
jns
push
aad
jmp
add
out
push
in
add
add
xchg
test
inc
or
cmpsb
stos
cli
adc
sbb
nop
nop
rolb
aaa
or
sub
add
add
into
sub
push
and
mov
cmp
into
jmp
fimuls
testb
jp
outsl
lea
mov
sbb
or
mov
into
div
xchg
and
xchg
mov
push
adc
popf
mov
popf
mull
mov
xor
fsubrl
insb
add
pop
cltd
clc
leave
sbb
nop
nop
in
jp
mov
mov
mov
mov
or
call
pop
out
lcall
insl
pop
cltd
add
inc
movsb
inc
or
das
enter
jnp
aam
adc
lret
inc
xchg
sahf
and
inc
mulb
jnp
xor
into
dec
test
pop
out
sbb
sub
add
dec
mov
jbe
lahf
push
adc
int3
int3
int3
int3
adc
loop
leave
das
add
sbb
xchg
pop
repnz
scas
daa
mov
hlt
xor
mov
mov
mov
dec
pop
and
sub
or
repz
or
inc
xchg
pop
pop
mov
int3
int3
int3
int3
pop
xor
test
xor
int
pop
out
jns
push
mov
cmp
or
inc
jno
dec
fstpt
pop
ja
xchg
add
adc
std
lahf
and
mov
jns
pop
adc
rcl
xor
pushf
sub
add
mov
outsl
hlt
fisttpl
push
mov
push
pop
mov
nop
nop
nop
nop
nop
xchg
adc
xor
cld
jbe
xor
xchg
dec
andl
sub
push
iret
scas
pop
push
xchg
loope
mov
mov
inc
add
xchg
scas
and
adc
filds
adc
pushf
and
xchg
lods
cmp
fbld
lea
cmp
insb
mov
push
loop
fildll
cmp
add
jns
icebp
cmpsb
lods
fwait
xchg
movsl
cs
into
into
sub
aaa
dec
and
xor
mov
add
cmp
jl
push
orb
nop
nop
nop
nop
nop
bound
in
sbb
xchg
lods
call
cmp
mov
mov
rcrb
push
pop
outsb
ficomps
jecxz
xor
push
leave
pop
adc
aad
outsb
loopne
jge
mov
pop
or
nop
nop
nop
nop
nop
fwait
aad
pop
cmp
subb
cmc
in
cmp
sbb
int3
int3
int3
int3
lret
lock
arpl
je
outsb
mov
inc
lahf
adc
and
out
sbb
add
out
call
jl
leave
pop
jecxz
cmp
adc
jmp
sub
xor
out
outsb
fcmove
add
cli
jno
cmp
mov
mov
mov
fstpl
aam
in
sub
lahf
clc
sahf
rclb
and
or
cmp
add
cmp
push
push
jb
rclb
add
andb
adc
push
or
jle
call
pop
push
jns
cmpsl
pop
clc
test
cwtl
pusha
cs
jnp
xchg
sub
cmp
add
mov
mov
push
fstl
ret
sbb
pop
dec
sbb
mov
and
sub
sbb
imul
insb
scas
fcompl
bound
inc
mov
push
fiaddl
add
push
in
stos
xchg
dec
fsts
lds
scas
push
and
ret
xchg
sub
jmp
mov
xor
arpl
mov
cmp
movsl
mov
les
lods
xlat
push
inc
xchg
in
xor
inc
mov
jnp
clc
push
push
sbb
add
into
cwtl
dec
xor
mov
push
std
mov
lret
and
add
sub
mov
or
jg
pop
cmp
add
or
out
repnz
xchg
adc
and
add
dec
mov
or
add
xor
dec
jge
inc
pop
mov
jg
outsl
imul
cltd
lock
pushf
push
shll
rorb
ror
bound
sub
loop
or
icebp
test
sahf
sbb
jge
scas
sbb
add
mov
repz
out
ds
mov
out
lcall
jno
and
add
pop
sbb
cmp
les
aad
std
adc
jns
add
or
add
lods
pop
adc
or
cmp
call
mov
inc
dec
mov
xlat
cmpb
lods
xor
daa
fldenv
subl
stos
pop
mov
daa
push
iret
adc
xor
out
ljmp
and
add
lret
xchg
cmp
movsl
xor
test
das
sub
adc
mov
aas
lret
int
xor
scas
outsb
sarb
cmp
add
sub
repz
jmp
push
or
mov
scas
add
jmp
es
cmp
dec
popa
test
dec
scas
loopne
fstl
inc
mov
xchg
mov
or
push
mov
test
in
sbb
loopne
push
in
mov
fidivrs
clc
lods
jg
inc
cmp
mov
leave
xlat
cmp
int3
int3
int3
int3
dec
cmpsl
inc
inc
into
repnz
ja
sbb
add
sbb
lock
mov
movsb
sbb
add
xor
mov
xchg
leave
roll
sbb
sub
cs
popf
ljmp
cmp
push
jns
leave
pop
pop
stos
jecxz
pop
lods
mov
add
insl
inc
fbld
jbe
fcoml
jne
mov
ficomps
les
pop
sbb
lods
movsl
test
cmp
adc
push
mov
mov
lock
mov
push
rorb
stc
mov
and
xchg
pop
mov
out
jmp
fcmovb
or
push
daa
pop
jge
push
orl
mov
dec
lahf
pop
mov
cmp
movsl
scas
and
pop
xor
add
js
jmp
or
mov
dec
out
jno
sbb
in
bound
pause
nop
nop
nop
nop
mov
jge
mov
and
mov
rcll
fistps
test
add
jmp
xor
outsb
cmp
add
xchg
cmpsl
je
lahf
cmpl
or
test
add
xor
xor
pop
push
mov
sub
push
mov
das
add
add
dec
sub
cmpsl
jns
cli
fsubs
push
outsb
xchg
adc
test
mul
add
jno
popf
nop
nop
nop
nop
nop
inc
pop
dec
sub
xor
cmp
sub
dec
add
adc
pop
pop
add
and
mov
cmp
push
pusha
je
pop
call
rcr
inc
cmp
jmp
mov
pop
lcallw
add
ja
push
xchg
mov
call
mov
test
ljmp
outsl
pop
mov
pop
xchg
push
sarl
jmp
icebp
dec
pop
xchg
fistpll
push
mov
dec
inc
cmpb
jns
outsb
test
nop
nop
nop
and
sbb
or
mov
xchg
shlb
leave
das
cwtl
inc
int3
int3
int3
int3
int3
aam
shlb
cmpl
iret
pop
movsl
add
mov
and
mov
mov
fld
out
jl
xchg
jne
mov
rorl
push
adc
cwtl
lods
aad
push
mov
add
lahf
pop
movsb
out
xchg
inc
roll
mov
icebp
cmp
jmp
les
mov
movsb
jo
fdivr
xor
sbb
shlb
jbe
sbbl
mov
and
into
cmpsl
sub
addr16
pop
inc
add
xchg
std
cs
les
push
sbb
or
in
mov
inc
jg
call
sarb
shlb
test
mov
xor
xlat
repnz
mov
enter
icebp
fldenv
or
cwtl
std
push
sahf
lods
mov
adc
and
dec
sti
and
push
xor
jnp
std
bound
loop
xchg
pop
xchg
jno
daa
int3
int3
int3
int3
int3
push
es
cmc
mov
ret
insl
es
push
out
and
iret
dec
mov
mov
popf
add
pop
jne
clc
pop
pop
or
loope
adc
or
sbb
mull
or
xor
add
roll
mov
int3
int3
int3
int3
push
addl
ljmp
je
ss
push
loope
movsl
cwtl
fs
inc
pop
andps
divb
nop
nop
nop
nop
idivb
pop
shrl
xor
mov
mov
mov
mov
or
mov
sbb
popa
aad
and
insl
mov
sub
or
mov
or
inc
gs
je
cli
push
nop
jae
or
cltd
sbb
cli
and
pop
pushf
scas
mov
cmpb
in
or
in
cltd
popl
and
les
jmp
inc
scas
push
xchg
inc
cwtl
fcmovne
inc
jecxz
fbld
xchg
mov
push
mov
iret
outsb
xchg
jne
lods
xor
cwtl
jno
and
aas
inc
mov
add
and
sbb
rcll
out
imul
add
push
arpl
into
mov
mov
add
or
dec
push
sbb
cvtdq2ps
xchg
push
scas
sti
push
leave
add
popa
mov
push
pop
jmp
add
fcomip
xchg
push
out
jl
aad
mov
pop
sbb
xchg
or
or
add
nop
nop
nop
nop
nop
dec
mov
int
iret
js
mov
fldt
ja
lds
pop
mov
mov
dec
jecxz
nop
nop
nop
nop
loop
mov
inc
cmc
add
pop
xorl
lods
xchg
xchg
add
ret
or
nop
nop
nop
cmpb
sbb
sbb
cmpsb
lret
cmp
xor
sti
cmp
inc
and
int3
int3
aaa
out
ds
or
add
insl
ja
in
pop
inc
testb
inc
adc
pop
lahf
jg
jge
mov
push
dec
lahf
jecxz
int
xor
pop
cltd
push
pop
in
cmpsb
sbb
lds
dec
pop
xchg
sbb
xchg
mov
xor
sbb
xor
pop
pop
faddl
and
dec
int3
int3
int3
int3
int3
jne
imul
pusha
stos
jnp
dec
call
jl
push
ja
add
sub
add
and
cli
arpl
and
popa
mov
repnz
xchg
hlt
mov
sarl
cmp
divb
mull
mov
pop
or
add
filds
insl
mov
clc
mov
dec
cmp
fcmovnu
mov
movsl
sub
pushf
jbe
rclb
stc
pop
or
jnp
in
cmpb
lret
int
int3
int3
int3
int3
int3
add
daa
dec
cmp
adc
push
lahf
stos
push
sti
mov
fimuls
xor
mov
mov
cwtl
jg
xor
xchg
inc
leave
fwait
imul
pop
int3
int3
int3
int3
int3
or
mov
jmp
sub
add
pusha
cmp
mov
into
outsl
js
cmpsl
cmp
jbe
mov
xchg
sbb
push
aad
nop
nop
nop
nop
nop
xchg
lahf
push
push
mov
adc
nop
nop
nop
nop
nop
mov
hlt
insl
and
rcr
insl
push
push
xlat
fs
inc
ljmp
mov
bound
add
insb
icebp
add
popa
jae
sbb
sub
jp
inc
jno
pop
mov
sub
xor
rolb
out
xchg
jns
xchg
cld
xchg
add
mov
in
pop
in
lahf
push
repnz
les
std
push
mov
mov
je
sbbb
std
clc
call
jl
and
push
pop
mov
shrl
jae
adc
pop
add
test
outsl
cmp
dec
in
mov
mov
pop
mov
xlat
dec
in
mov
sbbb
dec
xor
lock
and
loopne
arpl
aam
repnz
je
dec
xor
mov
repnz
push
fucomip
inc
fwait
pop
out
test
scas
int3
int3
int3
int3
int3
xchg
call
subb
jb
stos
adc
shrl
jp
hlt
lds
out
mov
add
sahf
rclb
into
shll
imul
xchg
add
movsl
ja
out
and
inc
repz
je
push
xchg
sbb
aaa
add
ss
loopne
pop
les
ret
ret
fwait
push
js
jecxz
cmpsb
mov
nop
nop
nop
nop
and
es
mov
pop
add
idivb
loop
movsb
inc
stos
push
push
insl
mov
or
dec
and
jb
or
loopne
add
adc
addl
mov
dec
push
mov
test
stos
jp
mov
std
xchg
lods
inc
lock
icebp
sbb
andb
notb
dec
lods
xor
int
sbb
or
dec
loope
addl
pop
sbb
add
icebp
mov
vmread
lret
sahf
lahf
ja
and
icebp
xor
add
aas
push
push
sbb
shl
cmpsb
sbb
dec
fldl
add
jmp
or
pop
hlt
inc
int
mov
gs
cmp
pop
push
xchg
nop
nop
nop
nop
fistpll
add
xchg
addr16
mov
push
fsubs
hlt
dec
push
pop
xlat
cmpsb
decb
push
inc
mov
rcr
push
xchg
xlat
mov
pop
loopne
adc
jp
dec
out
sbb
jbe
les
arpl
imul
mov
adc
and
test
fbld
xor
js
jge
sub
and
cwtl
mov
xor
push
adc
dec
lcall
dec
cld
popa
cmc
sub
enter
sti
inc
nop
nop
nop
nop
nop
outsb
loopne
enter
aaa
inc
inc
pop
jecxz
out
dec
dec
cmp
or
add
repnz
sbb
call
add
or
cmp
mov
and
jb
shr
outsb
sub
adc
jbe
cs
scas
ficoms
sub
setne
xchg
or
mov
ret
mov
xchg
cmp
jmp
xor
add
pop
dec
cmp
aad
aam
cmp
or
sbb
dec
push
cmp
sahf
loopne
xchg
xchg
dec
sbb
jle
pop
xchg
cmp
inc
jno
jle
adc
lock
add
xor
jbe
cmpsb
or
add
leave
or
or
shll
or
or
fs
inc
incb
cmp
mov
add
add
shrb
add
adc
out
shrl
daa
push
push
imul
test
adc
dec
mov
and
pushf
in
stos
stos
aaa
xor
mov
popa
adc
or
sarb
jmp
addr16
aad
mov
adc
sbb
add
lea
dec
fs
jge
jle
sbb
int3
int3
int3
int3
int3
mov
jae
jae
into
mov
ljmp
dec
sbb
pop
jge
jno
and
ret
pop
push
sbb
dec
xchg
push
imul
jp
lds
mov
fstpl
lcall
ficoml
fmull
mov
mov
dec
icebp
cltd
test
andb
pop
ret
dec
xchg
push
mov
fwait
jo
adc
add
push
cli
jns
mov
xchg
push
or
adc
adc
stos
mov
pop
fwait
add
aas
sbb
das
jmp
out
cmp
adc
pop
push
int3
jmp
and
ljmp
popl
add
out
hlt
and
add
cmpb
aad
mov
mov
pop
in
inc
icebp
rcrl
jns
sti
inc
mov
xlat
lea
pop
outsb
push
ret
clc
repz
jmp
int3
int3
int3
int3
sbb
push
jnp
in
je
insl
xor
xor
push
lods
push
cmpsb
inc
in
inc
mov
add
mov
and
jmp
adc
pop
test
mov
dec
pop
fdivr
aas
in
in
pop
aaa
add
inc
mov
push
mov
adc
mov
jne
pusha
sub
dec
push
outsl
ret
jns
inc
test
js
lret
cwtl
xor
add
jno
dec
cmp
ficompl
xorl
std
add
insb
popa
mov
enterw
int3
int3
int3
int3
test
lds
int3
int3
int3
int3
int3
xor
mov
aaa
jge
rclb
dec
lret
aad
dec
jbe
outsl
lods
mov
xchg
icebp
dec
jnp
push
or
jle
jo
sbb
inc
stos
jbe
cltd
imul
push
sbb
lahf
mov
jmp
cmp
inc
pop
int
pop
repnz
mov
movsb
dec
lret
push
fists
mov
cltd
add
pop
lahf
movsb
jne
or
lcall
fisubrs
out
or
or
mov
out
jecxz
push
mov
imul
and
hlt
jne
fadd
ror
mov
ffreep
mov
cmpsb
inc
pop
jno
add
add
imul
add
add
dec
cmp
lods
mov
jb
in
mov
xor
movl
add
loope
leave
jmp
imul
cmc
and
push
cmp
nop
nop
nop
nop
ret
and
loopne
pop
cmp
jg
push
mov
cltd
and
mov
xorb
les
movsl
add
cwtl
add
xchg
lret
out
inc
je
jae
xor
filds
or
push
jle
lds
movsb
mov
fwait
inc
lods
xchg
cltd
loopne
daa
sbb
sbb
fdivrp
push
jne
pop
out
out
hlt
sub
and
test
daa
imul
ret
mov
mov
jnp
add
add
pop
rcll
loope
int3
int3
int3
int3
pop
xchg
sti
mov
sub
add
pop
outsb
rorb
nop
nop
nop
nop
nop
outsb
repnz
rcll
bound
add
jbe
xor
lods
jns
xchg
movsl
hlt
sbb
push
cs
xchg
adc
pop
pop
cmp
mov
pop
fucom
mov
daa
cmc
xchg
sbb
cli
insb
dec
jae
pushf
cmp
pop
imul
add
fistpll
flds
test
push
add
cs
push
and
mov
xor
das
loope
fstps
sub
xchg
popa
dec
xchg
xchg
push
repz
dec
fdiv
fcompl
xchg
ror
leave
loopne
jge
push
into
xor
inc
sti
jmp
jge
dec
data16
and
sbb
insl
ljmp
push
out
mov
cmp
push
add
jo
add
cmp
cmpsl
faddp
jnp
xchg
mov
aas
mov
test
mov
cmc
sbb
nopl
or
mov
scas
lahf
adc
and
push
test
enter
aas
add
sbb
xor
into
pop
sub
jecxz
out
cmp
stos
sbb
loop
dec
push
mov
mov
add
fistpll
inc
add
mov
mov
adc
add
pop
dec
fistpll
sub
add
pop
movsl
inc
cmp
out
cmp
mov
loope
std
jle
addl
mov
les
pop
test
in
and
push
xor
inc
push
add
cld
mov
mov
jle
push
pop
mov
mov
sbb
ss
mov
jp
adcl
mov
nop
nop
nop
nop
nop
mov
call
adc
add
cmp
imul
pop
subl
inc
mov
sub
mov
inc
jno
sub
bound
jae
xchg
add
std
fisttps
xchg
adc
addl
int3
int3
pop
cli
cmp
cmp
adc
in
jge
lods
mull
inc
out
adc
xchg
ret
push
jle
rorl
add
adc
lods
inc
cltd
nop
nop
nop
nop
nop
stc
arpl
je
sbb
mov
or
cmp
sub
int
push
jg
enter
dec
es
movsl
je
loope
cmp
add
dec
fdivrp
sub
ficomps
mov
sub
nop
nop
nop
nop
leave
pop
inc
jp
or
xchg
push
out
and
and
in
lret
push
ficompl
push
xorl
cli
fsubrl
frstor
fisubrs
xor
mov
mov
jae
outsb
push
divl
addr16
adc
mov
push
in
jno
mov
and
jle
mov
ja
loopne
jecxz
fimuls
rcrl
mov
gs
mov
popf
xchg
rclb
mov
lock
cld
adc
inc
dec
outsb
and
lds
aas
add
sbbl
call
push
xorl
jo
fcoms
fstpt
xchg
cmp
cmp
mov
call
sldt
inc
insl
push
cmpb
mov
mov
mov
scas
push
hlt
and
mov
sbb
inc
mov
ret
lock
data16
mov
iret
mov
in
jmp
inc
mov
jge
add
xchg
clc
dec
or
cmc
xchg
xor
jne
dec
lock
push
insl
jae
inc
test
add
and
add
add
sub
add
movhps
xor
sub
je
jne
pop
sub
mov
pop
cmp
and
lock
xchg
cwtl
sub
and
fsub
movsb
test
or
mov
jmp
lcall
add
fists
inc
sbbb
outsb
mov
pop
imul
mov
nop
nop
nop
nop
sub
jnp
xchg
repnz
cs
dec
pop
gs
cmp
mov
inc
xchg
aam
cmp
or
lea
xchg
and
insb
cmp
cltd
jle
pop
into
pop
mov
nop
nop
nop
nop
push
cmp
ljmp
add
sbb
idivb
lcall
add
jb
dec
aaa
sub
or
shll
dec
fsubl
jp
dec
adc
cs
xor
lret
pop
mov
lret
mov
lret
mov
out
push
inc
ret
jp
loope
rcr
fsubrs
fildll
pop
jmp
xor
or
mov
iret
testb
mov
mov
out
arpl
sub
dec
addb
jle
sbb
mov
push
cmp
sub
add
fidivrs
mov
js
clc
mov
mov
jl
jbe
push
and
icebp
cs
mov
test
add
sub
dec
adc
test
pop
or
adc
mov
fldl2t
mov
sarb
xlat
mov
inc
mov
or
adc
fdivs
es
in
stos
imul
add
mov
cmp
add
int3
int3
int3
int3
std
imul
cwtl
push
iret
inc
pushf
add
in
icebp
ss
outsl
arpl
xchg
mov
and
and
mov
mov
shr
fadds
inc
inc
sahf
dec
mov
hlt
pop
sub
pop
cmpsl
fistps
mov
jmp
rolb
adc
add
jp
sbb
mov
les
jg
or
in
shrl
icebp
cmp
pop
ja
sbb
stc
andb
sub
add
or
sbb
sbb
add
sbb
push
cmp
call
push
xchg
xor
sbb
inc
jbe
out
movsl
std
dec
pop
xchg
outsb
scas
xor
cmc
push
dec
push
mov
in
add
in
adc
outsb
dec
sbb
int3
int3
int3
int3
or
aam
inc
jmp
sbb
stos
and
adc
imul
sub
or
jo
decb
xchg
and
int
cmpsl
iret
or
add
cs
testl
inc
cmp
jp
xchg
outsb
rcrb
movsb
fisubrl
je
mov
imul
xchg
or
into
out
andb
adc
add
mov
mov
std
xchg
cmp
add
mov
jle
sti
mov
test
pop
scas
push
adc
add
adc
add
out
push
or
or
stc
popa
andb
cmc
stc
sbb
lods
fsubp
xor
cmp
addr16
cmp
test
mov
and
lds
aad
rorl
out
bnd
sldt
rcll
xchg
jmp
sbb
push
int
sti
add
jbe
xlat
cmp
sbb
lock
xor
adc
inc
add
mov
bound
mov
lock
push
pop
cmp
ds
nop
nop
nop
nop
push
icebp
adcb
test
jns
les
cmpsl
adc
xchg
sbb
das
rcrb
jne
insl
or
std
jle
int3
int3
int3
int3
int3
ret
push
fs
aas
add
sbb
lcall
je
fcoml
sti
and
push
in
mov
leave
or
testl
and
outsl
in
dec
add
push
jle
hlt
hlt
lret
mov
out
movsb
js
fs
clc
sarb
popa
pop
jmp
push
popf
js
in
xor
add
mov
mov
das
insl
push
and
or
dec
leave
aam
ds
jmp
adc
xchg
push
xor
and
stos
dec
jae
pop
xor
aas
adc
daa
cli
jecxz
push
jno
adc
jmp
and
or
xor
test
cld
lds
inc
pop
lock
and
xchg
adc
add
inc
jb
popa
or
sub
adc
push
inc
adc
or
inc
std
cmpb
jno
cli
push
ja
mov
ja
or
sbbb
stos
push
inc
and
repz
pop
les
mov
push
sarl
add
scas
fstps
das
adc
repnz
bound
lret
push
das
dec
gs
pusha
aas
jne
lea
and
nop
nop
nop
nop
nop
cmpsb
push
sbbb
mov
lock
iret
xchg
test
xchg
push
pop
fisttpl
lahf
mov
fwait
out
xchg
cwtl
pop
pop
mov
jp
cmc
push
dec
in
xor
sub
ficoms
jb
push
sub
add
mov
add
add
cmp
nop
nop
nop
nop
nop
xchg
sub
adcl
and
jg
dec
mov
or
push
adc
xlat
fadds
mov
dec
inc
movsb
mov
js
movsb
cmp
dec
cmp
in
push
mov
jne
stos
mov
orl
cld
outsb
gs
andb
test
xor
xchg
add
rcl
sub
stos
arpl
push
mov
xchg
sbb
das
and
xor
in
outsl
fcompl
xor
in
vmwrite
push
shll
stos
push
mov
push
cmp
inc
sub
cmp
cmp
stos
inc
cltd
and
lods
adc
push
sub
pop
in
and
lahf
das
lock
outsb
rcll
adc
or
movsb
push
js
movntps
clc
pop
push
jl
xchg
inc
mov
int3
int3
int3
add
add
xchg
mov
loop
push
mov
insl
dec
jne
lret
adc
push
sldt
fs
fucomip
data16
ja
cmp
cmp
shll
dec
leave
inc
inc
pusha
dec
cmpsl
push
jb
add
ja
dec
push
testb
xor
int3
int3
int3
int3
icebp
mov
out
mov
leave
dec
cmp
fs
sbb
lret
mov
cmc
mov
imul
insl
sbb
adc
sbb
push
dec
daa
aas
mov
int3
int3
int3
int3
sub
cwtl
cs
and
jl
add
sbb
pop
push
stos
inc
mov
jecxz
insl
lods
add
dec
push
imul
xchg
sbb
addr16
and
push
cmp
into
ffree
mov
push
push
cmp
aad
sbb
les
xchg
insb
sub
mov
add
sub
out
repz
cmp
xchg
adc
mov
ror
lods
aad
shrb
sub
std
lret
sub
add
pop
xchg
mov
inc
imul
add
adc
movsl
fs
stc
sbb
notl
or
cmp
push
push
sub
xchg
lret
out
outsl
xchg
loopne
scas
mov
and
pusha
inc
mov
push
aaa
or
sub
and
int3
int3
int3
int3
int3
inc
sarb
neg
cmp
mov
test
add
popw
sub
jg
into
daa
arpl
inc
jge
cmp
cltd
xchg
xlat
mov
jl
xor
test
or
imul
xor
mulb
gs
out
lods
push
loope
pop
dec
mov
add
jp,pn
push
pop
dec
out
jne
addb
nop
mov
int3
int3
and
in
inc
jno
sub
mov
jmp
jecxz
mov
and
nop
nop
nop
nop
nop
incb
call
mov
inc
push
pshufw
mov
loope
insb
xor
mov
pushf
pop
xchg
daa
adc
xchg
ss
or
and
arpl
rolb
mov
test
adc
cli
pop
xor
fs
int3
int3
int3
int3
aam
push
mov
lods
mov
scas
pop
pop
add
or
mov
loop
xor
sahf
xor
cmp
mov
fwait
dec
aad
mov
test
jle
fcomp
jge
call
and
pop
xchg
jmp
std
std
ja
inc
test
mov
aam
and
daa
add
lds
cmp
ret
insl
mov
aam
jge
ficomps
mov
add
and
stos
xor
setp
add
stos
shll
xor
lret
add
outsb
push
xchg
mov
add
xor
aam
add
loope
test
ds
gs
jb
push
ror
inc
test
insb
ja
ss
mov
and
rol
lret
flds
jae
je
mov
in
and
xchg
rcll
cli
loop
lcall
xchg
lcall
gs
vcvtpd2psx
icebp
xchg
mov
mov
adc
push
imul
mov
out
push
rorl
enter
jae
push
rcl
std
push
push
lcall
add
rcl
aam
sbb
cmp
ss
dec
dec
rcrl
sbb
loope
ljmp
push
cmpsb
ja
mov
idiv
hlt
jns
bound
pop
pop
sbb
clc
lcall
in
std
scas
xchg
mov
cmp
lods
adc
fwait
es
orl
add
subl
js
shl
xchg
and
push
cmc
inc
dec
lea
add
jns
or
xchg
push
mov
mov
mov
repnz
stos
in
pop
xchg
gs
movsl
and
cmp
cmp
addb
pop
sub
add
sbb
outsl
repz
insl
movsb
lcall
rclb
movsl
xchg
into
imul
adc
sub
push
mov
jecxz
push
movb
pop
pushf
loop
leave
sbb
push
outsl
scas
outsb
push
mov
sarl
xor
sub
fisttpll
mov
sub
imul
sahf
sarl
xor
sub
dec
movb
push
fdivrl
dec
sub
aam
decb
mov
arpl
xor
out
mov
mov
push
popf
repnz
jecxz
in
insb
lea
cmp
out
and
inc
insl
out
sbb
stos
iret
dec
bound
fistl
push
daa
movsb
into
call
mov
cmp
btc
add
mov
test
lahf
out
mov
imul
shl
inc
and
ss
inc
cmpl
xor
outsb
dec
or
jo
fstps
sub
fnstsw
xor
mov
pop
mov
cltd
xchg
and
jge
xlat
scas
inc
push
cltd
cmp
xor
add
xlat
jae
out
pop
cld
jl
pmulhw
cltd
out
jecxz
int3
int3
int3
int3
int3
test
sbb
scas
adc
add
daa
inc
adc
jb
fsubrl
add
mov
cld
cmp
inc
lods
das
mov
hlt
mov
mov
and
imul
adc
add
mov
dec
fs
shll
sbb
or
testb
cmpsb
sbb
adc
add
and
sub
xor
adc
sub
push
jge
push
ds
sbb
gs
push
pop
repz
cwtl
mov
inc
push
add
mov
lock
jp,pt
jmp
xchg
xor
adc
ljmp
je
pop
xchg
gs
fmull
subl
jmp
add
push
cmpsl
pushf
mov
jmp
push
add
stos
sub
sbb
or
add
and
outsb
ficompl
stos
cmpsl
inc
push
iret
mov
or
lods
cwtl
sbb
mov
xor
add
push
pop
gs
out
lock
mov
sbb
sahf
or
jmp
ret
pop
or
cmp
pop
mov
pusha
xchg
out
fnstsw
xchg
dec
stc
xchg
sbb
cmpxchg
jae
mov
add
lret
test
out
cmp
movsl
enter
nop
nop
mov
pmaxub
decb
jo
xchg
jns
cli
les
out
lea
addb
jmp
cmc
int3
int3
int3
int3
int3
xor
mov
dec
fisttpll
pop
aam
add
or
in
or
push
xchg
repz
popa
aaa
mov
fxch
int3
int3
int3
int3
aas
inc
jnp
das
inc
inc
jo
adc
daa
mull
pop
mov
jb
push
pop
aaa
int
inc
and
or
mov
push
lahf
out
mov
mov
cmpsb
sbb
pop
cmp
pop
xor
or
or
in
pushf
jl
jmp
int3
int3
int3
int3
addl
pop
out
sbb
in
dec
pop
test
push
xchg
rcll
adc
push
pop
test
inc
cmpsl
dec
pop
dec
xchg
mov
adc
fists
das
push
mov
xchg
orb
adc
cmpsl
movsb
push
adc
dec
mov
ljmp
jge
add
repz
pop
push
jns
hlt
aam
adc
inc
and
jno
insl
inc
inc
lock
clc
shlb
and
mov
out
adc
fs
adc
stos
das
push
or
das
into
insb
jno
pushf
inc
jle
mov
push
scas
in
pushf
out
mov
mov
sbbl
mov
push
cli
xchg
repnz
pushf
in
popf
movsb
cmp
ss
movsb
push
aaa
xchg
fldenv
loopne
pop
pop
mov
in
and
mov
cmp
sbb
les
add
add
test
cmp
mov
stc
js
or
cs
and
adc
addr16
rcll
loop
lret
push
bound
adc
test
mov
pop
cmpsb
sbb
in
add
lds
ret
and
sbb
inc
push
aam
enter
shl
mov
cmp
or
add
int
push
add
test
add
call
in
add
lret
pop
pop
cs
inc
xor
add
push
inc
sbb
pop
btr
xor
int
leave
aaa
stos
jns
mov
loop
add
inc
sbb
mov
ss
or
and
lea
add
sbb
xlat
mov
cli
mov
inc
out
movsb
mov
out
fldl
in
lcall
enter
pop
cwtl
sub
add
dec
adc
int3
int3
int3
int3
xchg
cmp
mov
lahf
mov
jp
cmp
adc
lock
mov
loope
fs
dec
fwait
ss
adc
sbb
pop
add
negl
mov
adc
push
mov
dec
in
pop
xor
test
call
test
mov
sbb
int
cmovl
testl
push
add
rorl
sbb
icebp
ja
ss
add
add
jnp
jl
hlt
xor
gs
insl
xor
cmp
jnp
shr
lds
fwait
mov
scas
jle
mov
cmpsb
cli
pop
into
or
mov
addr16
jns
bound
pop
ret
jb
sub
or
movntq
mov
mov
bound
or
add
sbb
mov
lea
pop
mov
lahf
cmpsb
les
cmp
scas
pop
movsl
pop
and
mov
xchg
pop
inc
jecxz
cmpsl
dec
jnp
mov
lret
mov
adcl
jb
mov
push
in
xchg
jmp
xor
cmp
test
cld
xchg
sub
adcl
xor
in
insl
rcrl
jle
imul
aam
cmp
add
xchg
fldl
test
lods
dec
enter
sahf
cmp
cmp
add
add
fsubrl
mov
imul
jl
mov
xchg
sbb
sub
jl
sub
dec
mov
mov
scas
xchg
sub
mov
lock
fmull
test
scas
enter
shl
dec
loope
daa
in
xchg
jmp
xchg
and
sbb
shlb
iret
fistl
in
js
pop
pop
out
scas
enter
aad
adc
xchg
lret
inc
call
sarl
fcompl
addr16
cmpsb
out
faddp
in
aad
imul
dec
push
add
imul
cmp
mov
arpl
int
sbb
es
aaa
cmpb
cmp
fidivl
dec
icebp
rcrl
arpl
dec
mov
outsl
fists
sub
cmpsl
stc
addr16
pop
pop
insb
popf
pop
loop,pt
sahf
or
test
lods
or
adc
pop
add
jge
xor
outsb
push
subb
or
in
mov
jno
rcrl
mov
sti
dec
push
xacquire
xchg
adc
xor
cmp
loop
pusha
mov
push
xchg
push
sahf
hlt
iret
nop
nop
nop
nop
nop
lods
xchg
or
mov
out
dec
lcall
js
push
repz
cmpsb
jge
add
test
and
adc
bound
inc
mov
mov
ljmp
jle
clc
sub
dec
mov
mov
fnsave
mov
es
int3
int3
int3
int3
int3
cmpsb
shll
sbb
sti
xchg
jae
xchg
and
test
jp
test
adc
sub
xor
add
add
mov
xor
rcl
jnp
xchg
mov
inc
mov
dec
jnp
push
sbb
mov
out
push
mov
dec
fldcw
and
or
adc
push
aas
add
mov
pushf
lret
imul
adc
push
pop
mov
mov
pop
sub
inc
test
mov
out
push
dec
cltd
pop
pop
addl
stos
psubsw
in
fstpt
hlt
mov
fisubrl
sbb
jp
pop
mov
gs
xchg
and
jbe
cmp
cwtl
hlt
cli
gs
ss
cmp
arpl
loopne
mov
push
lret
mov
push
push
lcall
add
sbb
mov
push
dec
cltd
pop
pop
sbb
es
into
fisttpl
loop
stos
ja
jecxz
cmp
xorb
stos
mov
jb
inc
leave
push
jae
sub
test
sub
cmpsl
addb
scas
xor
mov
movsl
xor
add
jbe
sti
loop
jp
jmp
mov
mov
call
cmp
in
lret
push
int3
int3
int3
int3
int3
mov
or
aaa
jle
mov
xchg
js
insl
pop
push
das
movsb
inc
sar
push
es
imul
mov
and
add
xchg
lods
jbe
xor
repnz
mov
push
dec
cmp
jbe
popf
push
test
adcl
lret
orb
inc
pop
mov
adc
lods
and
lret
add
subw
cwtl
add
cmp
pop
ret
pop
ja
xchg
add
mov
jge
lds
sbb
fadd
mov
out
daa
fisttpl
int
lret
sub
mov
loop
stos
repnz
cwtl
mov
dec
xor
mov
mov
hlt
std
cmc
arpl
stc
out
ret
push
pushf
fbstp
stc
outsb
cmp
mov
add
enter
xchg
and
icebp
sub
push
xor
sub
outsl
pop
sbb
adc
stc
push
push
mov
and
fcos
adc
jbe
cmc
sahf
fistps
push
js
sub
sarb
push
or
andb
rcr
inc
pop
cli
xor
add
dec
cmp
jno
cmp
xchg
adc
dec
sub
add
adc
pop
xlat
arpl
pop
icebp
jne
and
dec
or
sub
imull
ret
mov
ja
xchg
mov
cmp
add
sub
lcall
fs
adc
dec
in
xor
or
adc
add
cli
push
negl
arpl
in
ficompl
and
lds
add
mov
sub
fadds
xor
cmp
sar
xchg
repz
add
dec
cmp
xchg
pop
fdivs
push
sub
out
aam
fcom
nop
nop
nop
nop
nop
rolb
fildll
scas
or
fwait
pop
vmwrite
push
xor
ja
mov
jne
push
mov
mov
lds
dec
and
add
clc
cmc
push
cmpsl
arpl
divb
fidivs
add
scas
xorb
adc
sahf
pop
inc
mov
popf
adcb
adc
dec
dec
jl
hlt
mov
sbb
mov
or
scas
out
sub
bound
fnstcw
xchg
cmp
mov
sti
andl
and
shl
loope
ljmp
mov
jl
sbb
imulb
sbb
fcomps
mov
mov
jbe
mov
test
idivl
add
in
test
fcoml
add
push
mov
or
push
ss
cmp
cmp
push
or
jmp
popa
jno
xor
sub
jp
leave
sbb
add
jbe
fwait
cmp
std
sub
jle
pop
repnz
sbb
iret
andl
lea
dec
ljmp
nop
nop
nop
nop
nop
outsb
lods
or
js
sub
push
enter
pop
mov
hlt
imul
xchg
xchg
inc
shll
mov
jp
sbb
sahf
jbe
fst
pop
jmp
mov
popa
push
int
mov
outsl
add
push
jle
test
add
orl
adc
sub
pop
sbb
daa
add
dec
push
mov
xchg
in
sbb
jnp
test
insb
in
ss
popf
cmp
shrb
inc
xor
outsl
icebp
repz
adc
xor
xor
or
popf
rcrb
sahf
ret
ss
add
bound
nop
nop
nop
nop
nop
pop
imul
out
in
adc
cli
sub
movsl
faddl
cmp
leave
clc
cmpsl
mov
in
push
lahf
jmp
jno
lds
mov
lods
fsubrl
je
ret
pusha
out
mov
movsb
xchg
mov
inc
sub
cmp
xchg
adc
mov
rcrl
gs
push
ss
loopne
adc
mov
adc
fs
mov
sub
mov
jae
in
dec
addr16
nop
nop
nop
nop
nop
inc
mov
push
dec
or
sbb
fnstcw
fistl
inc
out
aad
incb
cmpsb
andl
add
mov
imull
aam
dec
or
dec
or
xor
and
mov
aaa
movsb
aam
sbb
add
je
mov
loopne
push
pop
sbb
lahf
imul
jmp
sub
add
in
pop
lods
dec
in
xor
fidivrl
sub
mov
ds
es
out
aaa
add
push
cld
test
add
popa
add
fnstcw
adc
orb
sub
jnp
test
int
sub
cmp
loope
sbb
mov
pop
int
clc
or
add
xor
push
mov
push
dec
jno
sbb
lock
cld
pop
sub
adc
mov
out
stc
xor
int3
int3
int3
int3
int3
pop
pop
add
cli
in
push
dec
mov
adc
scas
cmp
add
fistpl
sub
xchg
or
push
xchg
adc
or
mov
xor
mov
test
xor
out
cmp
enter
mov
fucom
sahf
outsb
rcr
pop
add
push
xchg
push
and
or
cmp
pop
enter
xchg
adc
jg
jnp
jmp
pop
dec
and
pop
iret
xlat
cli
fcmovbe
mov
or
dec
jle
jnp
inc
jb
rorl
int3
int3
int3
int3
int3
addb
add
add
mov
jns
dec
loope
xor
mov
sub
repz
pusha
adc
cmp
shl
stc
stos
xchg
int
lcall
lcall
in
fbstp
enter
scas
cmp
or
jmp
clc
test
test
dec
cld
int
int3
int3
int3
int3
int3
push
jge
test
in
xor
shlb
cmp
insl
jmp
add
test
dec
adc
push
cld
push
insl
xor
dec
xchg
repnz
or
es
jns
xchg
xor
push
mov
js
inc
test
push
mov
sbb
add
push
xchg
enter
cmp
add
push
mov
sbb
test
fwait
ljmp
out
lahf
mov
movsb
mov
add
cli
inc
data16
iret
add
icebp
cwtl
xchg
ss
out
lods
cmp
add
push
and
add
sub
adc
push
jmp
xorl
and
pop
jb
or
jbe
or
lahf
mov
mulb
add
sbbb
pop
aaa
mov
add
push
stos
inc
pushf
mov
test
bound
mov
pop
sbb
bnd
sbb
xor
in
push
and
xor
in
mov
pop
scas
cmpsl
mov
mov
loop
pop
dec
icebp
rcll
push
jmp
popl
sbb
push
pop
push
pop
jns
xor
or
lods
lods
sub
bound
ljmp
mov
fwait
lds
bound
fists
pop
test
mov
or
push
pop
push
movsb
sub
std
in
push
shl
adc
in
adc
inc
jo
pop
jmpw
jno
add
scas
push
sti
and
jb
add
inc
push
in
mov
mov
call
add
add
and
add
add
xchg
loop
fprem1
dec
fldenv
test
int3
int3
int3
int3
int3
test
mov
fs
dec
xchg
xor
adc
and
mov
loop
xor
add
in
loop
and
push
test
push
jnp
rolb
xor
add
add
cmp
adc
fstl
and
addr16
push
sbb
jg
nop
nop
nop
nop
nop
enter
add
mov
jno
jo
lret
add
les
lcall
ret
add
in
cmp
mov
add
outsl
test
add
mov
lahf
fimull
leave
add
mov
idivb
pop
push
ret
lea
stos
xchg
nop
nop
nop
nop
nop
inc
jb
dec
push
dec
cli
adc
lea
xchg
test
fwait
lret
iret
or
add
mov
int3
int3
int3
int3
int3
push
movsb
roll
dec
mov
jg
xchg
pushf
test
inc
and
inc
sub
cmp
and
jecxz
mov
jle
sub
in
or
push
inc
cmp
loopne
bound
lret
repnz
in
inc
enter
scas
addr16
fnstsw
repz
mov
sub
add
xchg
xor
and
mov
push
es
mov
adc
icebp
cli
mov
jb
divb
inc
mov
cmp
or
movsl
lret
mov
mov
pop
xor
imul
dec
ret
push
test
pop
fists
imul
jb
push
dec
sub
aas
aas
lret
push
scas
xor
sahf
aaa
add
fstps
divb
adc
lock
inc
bnd
ljmp
jmp
push
xor
adc
mov
and
and
popl
daa
aad
mov
xchg
and
lahf
sub
icebp
in
mov
inc
addr16
xchg
iret
call
add
fadds
add
ljmp
iret
jne
in
adc
adc
add
xor
mov
sub
jbe
add
add
in
mov
mov
hlt
mov
clc
in
scas
iret
call
lds
scas
lret
lods
sub
fbstp
mov
mov
loope
adc
jge
enter
xchg
mov
movsb
jle
adc
mov
dec
push
mov
call
lret
lods
rcrl
call
mov
lods
add
jo
dec
jne
pop
or
hlt
addb
jle
test
add
in
sbb
notl
mov
or
int3
int3
int3
int3
sub
pop
popf
mov
cld
pxor
jl
jl
add
add
pushf
or
add
adcb
pushf
mov
fwait
sub
sahf
test
push
add
mov
arpl
mov
ss
int3
int3
int3
int3
xchg
shrl
mov
or
ljmp
add
pop
mov
and
sub
fists
lahf
pop
aam
push
pop
jo
pop
or
mov
adc
push
jmp
and
push
push
xor
mov
inc
mov
cmp
push
lret
sub
int3
int3
int3
js
ljmp
mov
lcall
lret
and
in
mov
lock
out
mov
test
jp
cmp
sbb
xor
mov
cmp
add
mov
mov
clc
pop
movsl
push
push
inc
je
cmp
xchg
cmpsb
push
loop
arpl
adc
xor
xorb
pop
xor
int
rolb
nop
nop
nop
nop
nop
xchg
leave
cmp
into
xor
jge
mov
add
lahf
int3
int3
int3
int3
sub
mov
ret
adc
std
lret
pop
dec
gs
pop
pop
jl
push
pop
xor
in
out
out
sar
push
pop
addl
inc
sbb
add
fnstcw
loope
pop
dec
mov
and
out
push
push
jmp
mov
add
loopne
inc
popa
mov
cmp
dec
mov
jge
aas
push
dec
pop
cli
mov
sbb
mov
ja
mov
add
mov
test
mov
dec
and
sbb
add
add
jno
and
add
ljmp
mov
sub
ljmp
out
xchg
ss
ljmp
push
in
ja
mov
jns
dec
mov
cld
and
ja
sub
and
xor
add
jno
pop
mov
lcall
ret
scas
sbb
fcmovb
add
mov
sub
sbb
test
adc
shll
std
dec
stos
clc
mov
cmp
push
aas
gs
popa
loope
aaa
sarl
mov
loope
lahf
cld
inc
mov
xchg
test
xchg
data16
aad
cmp
mov
lods
daa
adc
mov
xor
add
add
mov
test
or
loope
mov
ficoms
loopne
stos
je
shll
adc
and
xlat
mov
ja
jo
hlt
add
inc
shlb
add
mov
cmovl
movsb
insl
rorb
mov
out
outsb
ret
test
dec
cmp
xchg
adc
iret
add
lods
aad
jnp
data16
lcall
lods
sahf
and
add
imul
sbb
jle
push
dec
push
icebp
cmp
fcomip
shld
js
xor
add
aam
cmpl
xchg
mov
popa
js
gs
nop
nop
nop
nop
out
int
sbb
int3
int3
int3
int3
lret
pop
push
mov
jbe
jmp
sbb
test
jp
or
add
mov
imul
adc
mov
add
sar
push
fcom
fistpll
rclb
pusha
xchg
add
jae
or
cwtl
ds
shll
in
movsb
push
mov
shl
leave
mov
adc
mov
dec
stos
insb
jp
jno
cmpsb
mov
jnp
jmp
mov
cltd
movsl
push
cmc
out
out
xchg
stos
or
cs
cmp
xor
mov
int
push
add
push
mov
or
or
push
orl
xchg
int3
int3
int3
int3
into
jp
xchg
mov
out
xor
lock
and
insl
fldenv
sbb
jb
movsl
lret
mov
bound
les
inc
adc
adc
roll
scas
push
mov
adc
mov
cmpsb
imul
int3
int3
int3
cmp
or
push
jecxz
movsb
xor
and
mov
test
jns
stos
repz
mov
pop
push
gs
mov
mov
sbb
iret
loope
lahf
sti
hlt
and
pushf
pushf
push
xor
inc
js
xchg
dec
stc
cmp
rolb
testb
jbe
outsb
push
xor
mov
xor
leave
clc
iret
enter
andb
ds
enter
lea
es
xor
add
jecxz
or
xchg
dec
adc
faddp
and
push
add
mov
out
fisttpl
sub
add
jno
sub
sub
loopne
sbb
lret
mov
and
mov
inc
jae,pn
jmp
pop
inc
mov
or
lock
lods
jg
adc
adc
dec
mov
and
ljmp
les
mov
cmp
out
shrl
add
call
push
adc
push
lcall
inc
in
ljmp
nop
mov
bound
loopne
cmp
add
jbe
inc
imul
mov
xchg
cmpsb
cli
mov
cld
adc
mov
mov
daa
outsl
mov
push
add
cli
lods
out
out
or
add
adc
jnp
or
mov
loopne
xor
and
lahf
sbb
es
shrb
out
lahf
and
lea
pop
fildl
int
js
repz
setp
je
adc
and
push
push
test
popa
adc
jmp
popf
mov
repnz
andb
call
jo
fs
adc
in
daa
jecxz
ror
test
add
or
leave
iret
test
decb
sbb
cmpsl
popf
cmp
add
add
xor
jecxz
loope
pop
or
push
sub
add
fadd
inc
push
rorb
fildll
shrl
int3
int3
or
push
test
mov
mov
adc
or
pop
mov
idivl
sub
sbb
add
mov
cwtl
jle
inc
and
push
add
mov
cli
je
push
not
lock
mov
shll
test
adc
ds
dec
test
clc
lods
jp
jle
sar
adc
andb
adc
int3
int3
jo
insb
dec
repnz
jmp
test
popa
xchg
mov
pop
out
sub
mov
mov
mov
xor
mov
rorb
fdivrp
mov
mov
mov
ss
int
outsl
xchg
mov
and
inc
mov
lods
jnp
imul
mov
xorb
das
mov
add
out
in
mov
xchg
cmpsl
and
je
faddl
add
xor
aam
call
pushf
popa
lret
fsubs
enter
fmuls
rol
ficompl
inc
jbe
mov
lret
ret
cmpsl
outsb
and
popf
jb
out
push
pop
mov
test
cmp
add
add
sub
adc
mov
or
cmc
scas
push
out
and
add
jnp
inc
out
mov
fistps
pop
push
int3
int3
int3
int3
cltd
pop
fdivrs
push
sub
mov
sub
test
andb
push
roll
pusha
sti
jbe
movsl
divl
adc
pop
pop
in
jg
fidivl
ret
xor
push
shl
mov
js
or
lret
test
outsb
repz
and
mov
mov
cvtps2pd
xchg
lea
inc
and
xchg
cltd
and
add
sarb
bswap
int3
int3
int3
int3
add
sub
mov
xchg
inc
inc
dec
add
sbb
pop
in
test
aas
add
cmp
pop
shld
js
pop
fistl
into
pop
jnp
xor
cmpsl
imul
fldcw
loop
movd
dec
sub
cmc
int
push
repnz
movsl
push
aam
cltd
lret
pop
inc
lcall
add
add
sbb
cld
and
xchg
jge
psraw
pop
cmp
jg
mov
dec
ja
push
daa
lods
std
fs
inc
in
outsl
insb
push
je
jno
mov
adc
pop
test
div
fldenv
je
xchg
ljmp
and
jns
pop
or
add
xchg
mov
dec
out
or
clc
pop
xchg
dec
sub
nop
nop
nop
nop
xchg
push
or
mov
ficoms
shrl
scas
dec
shll
mov
adc
mov
push
mov
aas
cmpsb
jnp
and
lcall
cmp
scas
xor
fstl
dec
mov
nop
nop
mov
dec
out
hlt
sbb
add
cmp
repz
ds
or
call
jmp
sbb
test
lahf
aam
pop
or
xor
push
lods
int
dec
or
xchg
or
movsl
mov
jns
cmpsl
pusha
xchg
call
std
bound
push
icebp
dec
mov
stos
out
fldenv
movsl
pop
dec
orb
nop
nop
nop
mov
and
fistpl
mov
fsts
add
int
ja
push
inc
fistl
stos
lods
xor
out
jnp
sbb
enter
aam
add
aad
push
pushf
sti
or
js
xor
dec
jle
and
outsl
stos
mov
aad
push
filds
xchg
jl
mov
and
jmp
scas
sub
jge
fiaddl
mov
sbb
dec
mov
adcb
pop
pop
mov
in
scas
xor
pushf
or
lds
lds
pop
xchg
mov
outsl
stos
dec
call
mov
xchg
jno
es
mov
adc
scas
mov
lds
jl
sbb
fldt
and
popa
call
jmp
and
cmc
lea
add
les
aad
mov
mov
jae
or
daa
dec
mov
cmp
insl
mov
arpl
mov
xor
add
inc
inc
div
pop
xlat
aas
pop
scas
sbb
cli
mov
mov
faddp
sbb
mov
xchg
imul
and
push
cwtl
cmp
mov
mov
fld
xchg
mov
cmc
push
fs
inc
add
pushf
das
xchg
pop
push
insb
push
dec
fs
std
mov
cs
sbb
insb
rclb
data16
push
push
push
stc
mov
add
xchg
fiaddl
dec
sbb
mov
sbb
call
xor
or
addb
sbb
jae
pop
mov
mov
mov
stc
in
ljmp
add
add
sub
inc
flds
sub
xchg
negb
mov
pop
fs
lcall
or
test
dec
xor
xor
mov
mov
xor
xor
cmp
ljmp
xchg
xchg
fiadds
adc
pop
jnp
rorl
xchg
add
mov
loop
icebp
inc
cmpsl
shrl
xchg
lea
cmp
jb
push
jb
inc
shlb
mov
gs
or
gs
sub
test
add
iret
lods
mov
add
mulb
add
pushf
std
mov
clc
mov
mov
cld
movsb
mov
jl
lcall
jle
rolb
negl
movsb
inc
stos
push
mov
dec
inc
fdivrs
mov
daa
pop
mov
mov
dec
out
gs
add
xchg
push
aas
aas
out
int3
int3
int3
int3
int3
andl
add
adc
call
leave
xor
nop
nop
nop
das
int3
int3
int3
int3
int3
push
in
out
dec
push
test
fcomps
xchg
outsl
repz
sahf
pop
stc
inc
pusha
sahf
push
in
mov
clc
lds
nop
nop
nop
nop
jno
push
dec
ljmp
cmp
xor
xor
stos
adc
insl
pop
pushf
aas
xchg
lcall
cmpsb
faddl
iret
loopne
cmc
sub
sbb
mov
cmpsb
andl
cmp
jp
xchg
popf
pop
mov
jo
stos
dec
cs
mov
leave
insl
orb
or
test
add
add
outsb
das
jno
daa
jno
shlb
fwait
add
jo
stos
jns
lret
and
jno
cli
add
cmc
mov
mov
pop
mov
cs
xchg
inc
inc
inc
mov
imul
sub
adc
loope
lret
icebp
xor
les
fidivs
adc
fxtract
adc
mov
and
add
xchg
xor
sbb
xchg
dec
mov
outsl
fwait
int3
int3
int3
int3
int3
sbb
mov
jmp
jne
popa
sub
dec
lods
add
and
adc
mov
or
leave
bound
test
mulb
movsb
jnp
adc
jns
jns
popf
xchg
sub
add
in
aas
int
scas
or
in
fwait
mov
aad
test
int3
int3
int3
int3
int3
pushf
movsb
dec
inc
mov
mov
lret
inc
enter
lret
sub
int3
push
subb
dec
repz
and
pop
mov
fadds
mov
pop
jmp
adc
push
pop
jno
mov
cli
sarl
icebp
aam
mov
mov
inc
fidivl
loope
fnstcw
or
movb
outsb
jmp
test
jl
push
add
das
jle
iret
xor
repz
nop
inc
dec
int3
int3
int3
int3
int3
ds
xor
ret
pop
jle
mov
nop
nop
nop
nop
nop
inc
pop
add
add
mov
xchg
add
pusha
mov
cmpsb
fs
and
add
fdivl
jge
xchg
sub
adc
add
push
inc
gs
sarb
push
addr16
mov
cs
ret
stos
outsb
pushf
fisttpll
cmpsl
dec
push
inc
cmpsb
in
das
sub
add
in
imulb
dec
pushf
into
lds
in
lds
xchg
add
je
rcrb
add
inc
cmp
pop
andps
push
aad
outsl
negb
insl
inc
mov
add
sub
add
jmp
popf
lock
jne
into
sub
shrb
inc
push
shlb
dec
jbe
dec
push
cmp
ja
jbe
add
in
mov
imul
adc
int3
int3
int3
int3
and
jecxz
add
mov
into
repz
sub
mov
sbb
test
arpl
push
pop
xor
int3
int3
int3
int3
int3
sub
mov
repnz
in
outsb
lock
mov
cmp
xor
fisubrs
dec
out
adc
nop
nop
nop
nop
nop
enter
and
dec
lock
jle
mov
pusha
sbb
cs
hlt
push
jne
jmp
pushf
xchg
pop
paddb
mov
rclb
fs
je
data16
das
aas
addr16
pushf
mov
data16
jecxz
cld
stos
dec
dec
push
addr16
arpl
int3
int3
int3
int3
loop
fnstsw
xchg
sub
sbb
loopne
mov
mov
pop
out
ss
arpl
jge
and
mov
ret
push
sbb
jno
xchg
xchg
dec
imul
mov
sub
push
mov
out
mov
out
cmp
sbb
nop
nop
nop
nop
nop
fnstsw
xor
jecxz
push
in
jmp
out
aam
loope
adcl
add
cmp
int3
xchg
daa
out
pop
outsl
pop
mov
push
frstor
jecxz
in
sub
pop
dec
xchg
pop
jmp
lret
bound
push
je
xor
lea
adc
insb
inc
aad
sbb
nop
nop
cmp
pop
pop
leave
sti
xlat
xor
dec
orl
add
mov
iret
scas
lahf
ja
sbb
mov
out
into
inc
sub
jle
aam
xchg
lcall
test
faddp
arpl
movsb
unpcklps
mov
inc
sub
add
inc
jp
xor
in
aas
dec
add
xchg
fldt
loope
fsubrl
dec
push
repz
inc
jle
cmp
out
loop
fsubl
lock
int3
int3
int3
int3
shrb
jae
xor
jae
rorl
mov
xor
cld
test
push
and
mov
nop
nop
nop
loope
mov
cltd
out
cmpsb
cmp
jmp
sub
in
std
sahf
mov
inc
out
loop
addr16
xchg
aas
jmp
dec
ljmp
xorl
mov
in
xchg
cmp
movsb
sub
inc
hlt
or
push
jmp
mov
ret
add
sldt
sbb
or
fs
sbb
ss
imul
push
mov
test
pop
sbb
pop
shll
subl
test
sbb
mov
mov
adc
imul
icebp
mov
stc
fsts
mov
inc
push
in
xorl
xadd
mov
dec
push
mov
pop
and
mov
sahf
daa
cmp
and
jl
or
push
jo
std
ret
adc
or
add
out
push
xchg
aaa
sub
push
xor
inc
jbe
mov
cmp
int
push
lret
sahf
push
add
and
ret
add
sbb
jae
leave
add
xchg
inc
mov
mov
xor
aaa
cmpsb
sub
add
test
repz
jg
cmpl
jnp
adc
fstpt
sbb
mov
ror
int3
int3
int3
jno
je
jb
loopne
add
int
mov
lock
fs
fstpl
arpl
push
jmp
mov
fisubrl
jbe
lcall
push
cmp
out
and
cmc
adc
aas
cmp
or
int3
int3
int3
int3
pusha
scas
dec
add
jmp
or
lea
insl
mov
scas
stos
icebp
aad
movsb
mov
ret
mov
or
gs
add
es
xor
scas
aaa
jo
dec
fsubl
popa
aas
mov
add
outsl
lods
mov
and
lret
outsb
loop
fistpl
jl
add
jge
sub
push
cmc
loope
fwait
dec
shld
and
and
add
and
pushf
hlt
cli
dec
sahf
out
mov
push
xchg
fstps
loope
jb
int3
int3
int3
int3
int3
mov
add
aaa
aas
das
mov
mov
popf
lahf
push
adc
jg
movsb
dec
movsl
ds
in
nop
nop
nop
nop
nop
xchg
jmp
nop
nop
jg
movsl
adc
test
in
data16
sub
clc
push
mov
iret
inc
aaa
mov
test
daa
clc
adc
test
fdivl
mov
mov
add
ja
lcall
imul
repnz
xor
xor
int3
int3
jl
clc
add
sbb
and
push
lcall
inc
mov
or
mov
jmp
leave
daa
jmp
adc
add
mov
jmp
int3
int3
pushf
stos
cmp
dec
dec
mov
cmp
int3
int3
and
testb
cmpsb
test
addr16
movsb
sub
add
jne
mov
dec
mov
pop
adc
push
adc
cmpl
add
push
hlt
repz
mov
rcrb
pop
or
or
sub
adc
inc
sub
sub
jne
mov
pop
push
outsb
cmp
std
sbb
not
mov
add
fwait
push
add
cli
std
into
notb
stos
shll
scas
push
loop
or
insb
cmp
loope
mov
mov
mov
push
mov
jmp
dec
sti
and
shlb
add
outsl
into
pop
sbb
cmpsl
ss
out
xchg
sub
pop
push
cmp
xor
shll
ljmp
loope
popf
arpl
inc
ss
pusha
stc
fdivrl
pop
movsb
pop
add
fiaddl
inc
cmpb
jne
push
test
xlat
fistpl
imul
xor
add
add
sub
mov
adc
add
out
pop
push
outsl
xor
scas
sbb
lea
push
push
add
test
fistl
pop
pop
and
sti
les
add
mov
sbb
cli
sbb
xchg
in
iret
add
stos
xor
pop
mov
jmp
jo
and
mov
mov
stos
xchg
subl
nop
nop
nop
inc
push
call
movsb
pop
push
jnp
aaa
fcomip
repz
dec
or
out
mov
fcom
ret
jo
xchg
xor
adc
es
nop
nop
nop
nop
nop
iret
push
jmp
arpl
shlb
ljmp
clc
push
sbbl
add
ja
jns
int
les
out
push
js
sbb
addl
bound
mov
mov
shl
mov
add
add
popa
and
cmp
shr
mov
int3
int3
int3
int3
jno
pop
push
mov
icebp
std
imul
pop
popa
xchg
sub
popa
or
cmp
int
xchg
mov
adc
es
mov
rorl
movsb
push
mov
sub
adc
gs
mov
add
rorb
lret
nop
nop
nop
nop
xchg
jle
addr16
lcall
dec
pop
jg
mov
addl
adc
push
jae
shll
add
and
int3
int3
int3
int3
int3
dec
add
popa
imul
add
inc
sti
mov
xlat
scas
fldcw
add
lcall
cmp
mov
addl
adc
in
xchg
lea
fiaddl
outsb
adc
fdivs
add
and
out
jmp
aaa
repz
inc
dec
pop
xorb
or
add
sbb
adc
ret
sarb
test
mov
fwait
rol
or
add
push
mov
jae
xchg
sbb
dec
pop
add
divb
outsl
popa
andb
xor
jle
cmp
mov
aas
lret
lea
jmp
dec
pop
jb
andb
stos
cltd
addr16
pop
fcomps
shll
int3
int3
int3
int3
int3
fchs
fsubs
ret
dec
and
movsl
jmp
xor
adc
push
int3
int3
int3
int3
int3
dec
out
das
das
movsb
mov
stos
mov
adc
fsubrl
xchg
xchg
push
sub
pop
cmpb
inc
in
mov
sbb
add
movsb
jmp
test
sbb
jmp
out
loopne
sbb
lods
lret
mov
or
lahf
loopnew
mov
jp
dec
mov
mov
addr16
fsubl
mov
mov
loope
pop
call
push
loope
int
mov
sbb
xor
test
cmp
repnz
int3
int3
int3
int3
outsb
mov
pop
pop
aas
cltd
xchg
push
jne
push
insl
iret
xor
ret
outsb
xor
mov
stos
ret
and
out
cmp
push
xchg
add
test
imul
rorb
jb
repnz
stos
testb
xchg
and
pop
push
ljmp
mov
aas
in
jp
xor
in
sub
cmc
mov
ljmp
jno
adc
imul
test
rorb
jg
mov
add
xchg
jmp
lods
fptan
add
repz
movsl
cmc
push
rol
mov
cltd
xchg
jno
mov
sbb
pushf
and
pop
cmp
sbb
gs
xchg
push
icebp
sarl
mov
add
or
add
mov
test
jno
ret
sub
mov
das
mov
jg
jecxz
and
movsb
push
mov
sbb
add
mov
repz
jg
rolb
std
or
xor
cs
mov
sub
jp
pop
clc
dec
dec
jge
mov
inc
mov
push
adc
add
or
ja
std
and
clc
aas
jp
jne
add
or
les
test
aad
push
aas
jnp
xor
pop
adc
mov
std
clc
gs
lds
jecxz
hlt
mov
int3
int3
int3
int3
int3
test
and
lea
clc
sbb
jae
jle
repz
jmp
bound
ljmp
or
add
sahf
sarl
test
xorl
add
ret
fs
cmp
sbbb
add
int3
int3
int3
int3
sbb
fnstenv
mov
dec
xor
stos
aaa
add
adc
or
lock
xchg
pop
jge
daa
bound
xchg
cltd
and
push
test
movsl
and
dec
push
pop
out
mov
adc
orb
in
xchg
mov
sub
mov
mov
mov
mov
cld
inc
xchg
push
mov
sti
cmp
mov
stos
sbb
ret
push
pop
pop
adc
clc
lahf
test
lret
sbb
pushf
ljmp
insb
in
mov
fisubl
add
fs
shrl
add
add
ss
add
add
fmuls
push
mov
sub
mov
scas
fwait
sti
jno
dec
pop
mov
ret
jmp
repnz
pushf
xlat
dec
pusha
add
pusha
sbb
adc
into
adc
enter
sbb
mov
js
mov
mov
mov
icebp
push
in
insl
sub
jp
mov
dec
or
push
popf
dec
sahf
pop
out
movsb
jne
sbb
inc
xchg
xor
arpl
push
sub
xchg
jmp
out
jbe
hlt
jmp
pop
aas
mov
popa
pop
test
xor
xchg
ds
add
mov
sbb
es
mull
adc
test
aam
fs
mov
adc
add
add
popf
dec
stc
sti
xchg
mov
xor
imul
push
in
jbe
int3
int3
int3
int3
xor
clc
scas
sbb
pop
lcall
add
jns
cmpsl
xchg
aas
xor
pushf
dec
movsb
push
daa
inc
in
push
mov
push
push
xchg
test
jo
dec
adc
pop
mov
das
cwtl
gs
mov
cmpsb
out
sub
push
mov
add
xchg
es
insb
mov
shll
int3
int3
int3
int3
int3
dec
pop
mov
sbb
sbb
mov
jl
mov
stc
scas
int
inc
sbb
daa
add
cmp
nop
nop
nop
nop
nop
or
adc
dec
hlt
pop
sbb
cmp
mov
mov
and
pusha
dec
fcom
mov
add
add
inc
and
inc
leave
mov
jmpw
jne
jo
cwtl
and
test
add
cmp
jg
xchg
sbb
sbb
add
fs
pushf
out
mov
nop
nop
nop
nop
nop
mov
jo
aam
andb
add
les
dec
pop
sarl
test
push
shlb
cmc
push
xchg
shrl
cmp
pop
pop
or
pusha
iret
or
adc
cld
sbb
inc
jb
inc
fldt
cmpsl
fwait
add
sub
inc
dec
repz
in
js
dec
in
or
add
gs
nop
nop
nop
nop
nop
call
sbb
mov
or
rcr
mov
cwtl
mov
pop
inc
cmp
in
mov
pushf
cli
jb
pop
jge
rorb
les
les
sbb
adcb
psubusb
mov
test
mov
add
inc
adc
fdivl
fistpll
adc
sub
or
mov
jg
sub
js
lods
xchg
dec
sbb
pop
push
xchg
cmp
add
mov
imull
push
stc
mov
scas
jmp
adc
adc
or
xchg
push
jno
loop
sub
js
pop
xor
xor
inc
out
sbb
cmpsb
inc
inc
xchg
in
repz
pusha
xor
addr16
sub
mov
add
movsl
xchg
iret
roll
jmp
sbb
loope
pop
adc
dec
inc
in
iret
daa
addr16
jp
cmp
icebp
pop
hlt
subl
push
ret
adc
popf
mov
insl
push
in
shl
sbb
in
push
push
mov
nop
nop
nop
nop
nop
fcomps
dec
inc
in
rolb
push
push
mov
mov
enter
int
add
shll
nop
nop
nop
nop
sbb
mov
add
sub
or
clc
lds
fisttpll
ret
mov
loope
rcrl
xchg
fcoms
cmc
ja
mov
cltd
loope
lods
push
add
fwait
add
int3
int3
int3
fisubs
mov
push
daa
out
pop
cltd
or
sbb
cmpsl
xchg
xor
push
add
repz
add
jns
test
pop
fwait
ss
mov
lock
cmpsb
ds
lods
mov
repz
cmp
mov
test
fs
addr16
add
and
jmp
adc
stc
sti
jns
ret
jno
pop
xlat
cmp
cltd
nop
nop
nop
nop
nop
xchg
out
pop
mov
hlt
mov
xchg
test
xor
test
fwait
pop
xor
fstps
jbe
add
dec
cli
sbb
push
mov
int3
int3
int3
int3
inc
dec
and
outsl
xor
and
in
or
insl
sbb
mov
mov
sahf
mov
jbe
inc
push
pop
jle
int
add
xor
movsb
cmc
jge
sub
shll
cld
pop
xorb
inc
cmp
xchg
popa
icebp
mov
jl
shlb
push
jge
adc
repnz
cmp
inc
stc
pop
lcall
fwait
pop
push
jnp
cmc
outsl
pop
push
add
and
scas
das
mov
adc
mov
test
pop
adc
lds
scas
repz
je
add
dec
add
mov
mov
xor
mov
addr16
pop
ljmp
in
push
stos
add
nop
nop
nop
scas
mov
push
cmp
mov
jmp
cld
pop
or
push
inc
inc
mov
arpl
nop
nop
nop
nop
nop
mov
fnstcw
xor
mov
mov
fwait
js
pop
cmp
ss
mov
pop
je
loope
rorb
in
les
sub
outsl
sub
data16
call
cmc
rcr
jb
iret
pop
mov
sbbb
rclb
dec
aad
inc
fs
clc
xchg
push
mov
iret
pop
jg
sub
dec
inc
je
je
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmc
ss
addr16
sbb
aas
imul
xchg
and
xchg
inc
mov
in
or
les
pop
jle
out
insb
xor
pop
outsb
push
iret
repz
add
fcoml
fstpl
sub
mov
xor
lret
push
add
lcall
test
pop
adc
std
xlat
lods
sub
sti
push
jb
xor
xor
add
pop
mov
sar
mov
adc
add
or
nop
nop
nop
mov
repz
sub
icebp
rcrl
ljmp
add
inc
fdiv
loop
fmul
ss
add
mov
sub
ja
add
xchg
out
adc
xchg
shlb
mov
jmp
jl
out
ret
scas
filds
add
sbb
imul
add
pop
roll
lods
mov
jae
jb
dec
push
mov
mov
inc
pop
xor
cs
pop
stos
cwtl
imull
push
fisttpll
shrb
repz
cmpsl
cmpl
stos
fcmovnb
jo
fwait
jge
push
xchg
int3
int3
int3
int3
int3
in
into
add
fidivrs
push
cltd
xchg
bound
dec
test
mov
rcll
into
sub
add
aam
mov
int
adc
xor
fs
or
add
icebp
ss
int
scas
cmp
add
lea
dec
fstpl
leave
pop
adc
lret
xor
jge
arpl
inc
icebp
and
ljmp
ss
dec
mov
pushf
fs
cmp
pushf
andl
clc
and
xchg
out
pop
insb
ds
mov
scas
or
xor
test
or
roll
jno
xchg
pop
mov
movups
aad
sbb
into
popa
and
dec
mov
cmp
mov
scas
movzwl
sub
xor
mov
pop
jle
bound
mov
jo
in
test
mov
icebp
test
push
mov
fs
out
into
mov
fstpl
imul
daa
jl
xchg
pop
xchg
sarb
push
xchg
push
gs
negb
and
push
lret
idiv
adcl
pop
sldt
fcoms
aaa
push
lret
lea
cmp
xor
lock
sti
enter
mov
cmp
add
xor
mov
jle
lret
shl
mov
xchg
test
jns
test
call
add
in
ret
ds
popf
dec
xchg
inc
sbb
stos
push
fs
popf
das
in
jns
sub
sbbb
loopne
mov
inc
mov
add
idivl
add
xor
cmp
xor
cmpsl
loop
push
cmpsb
loope
xor
xor
jmp
out
aad
jp,pn
mov
sbb
into
outsb
or
in
and
adc
sub
cwtl
xor
iret
loopne
or
mov
es
or
inc
and
out
jmp
ss
stos
std
mov
jl
aam
jl
lea
or
add
cmpsl
mov
std
mov
mov
je
xor
jne
cmp
push
cltd
lods
stos
sub
inc
rcrl
nop
nop
nop
mov
sbb
test
add
cltd
jmp
fdivrs
popa
mov
push
je
test
das
inc
sahf
sub
into
dec
sti
adc
dec
pop
xchg
push
popa
fdivrp
or
and
in
aaa
fldenv
dec
test
adc
xor
cmpsb
repz
mov
test
inc
adc
ds
cltd
cmp
jle
stc
mov
repnz
fdivrl
icebp
dec
repz
bound
jecxz
aad
int3
int3
int3
int3
int3
hlt
or
cmp
scas
jmp
dec
mov
xor
dec
mov
xor
and
in
xor
add
sti
mov
dec
aaa
std
jecxz
push
stos
inc
sahf
hlt
lods
lods
arpl
jne
cltd
int
clc
imul
int3
int3
int3
int3
int3
xorl
sbb
int3
int3
int3
int3
mov
repz
xor
push
icebp
dec
lods
xor
mov
cmp
and
adc
int3
int3
int3
int3
int3
mov
lahf
data16
or
enter
insb
jne
mov
jns
ror
mov
jmp
ret
mov
scas
rclb
jne
sub
mov
aam
cmp
sub
adc
add
mov
iret
xchg
mov
addr16
mov
ljmp
sbb
xor
fistpll
add
in
js
pop
ja
loopne
pop
adc
enter
adc
fwait
int3
int3
int3
int3
int3
and
outsb
lods
shll
or
ss
pop
fldl
lods
jo
loopne
mov
fidivrs
arpl
mov
push
icebp
cmc
mov
sahf
or
lods
cmpb
mov
sti
or
loope
adc
rol
inc
xchg
in
pop
outsb
es
test
cwtl
in
ja
xchg
aam
daa
cmc
sbb
dec
insl
sub
or
inc
and
dec
mov
push
scas
dec
ja
inc
stos
xchg
outsb
sti
sbb
xchg
mov
add
xor
stos
pop
mov
aam
add
push
inc
push
dec
mov
out
pop
cmp
jg
sbb
mov
and
in
ja
cli
adc
rorl
leave
in
lock
add
cmp
and
dec
jo
pop
mov
in
int3
int3
int3
int3
outsl
stos
mulps
dec
jbe
lcall
notl
add
cmp
jl
add
sub
out
cmp
push
sbb
int3
int3
int3
int3
bound
ljmp
add
fstpl
out
mov
shrb
jg
mov
or
dec
xor
jl
fdivs
xchg
sahf
lret
inc
jecxz
iret
jns
fwait
and
jecxz
cmp
fbld
sbb
and
int3
int3
int3
int3
int3
mov
adc
hlt
adc
or
sbb
push
fmuls
pop
cmpsl
aas
aas
ret
loop
sbb
in
push
arpl
sub
sub
sbb
ss
cmp
sub
jecxz
push
inc
in
pop
lcall
jne
popf
cmp
std
fsubl
cltd
or
sbb
jl
lods
sbb
aaa
adc
out
xlat
cmpl
mov
loope
rcrb
pop
xor
push
shrl
scas
push
xchg
sti
adc
cmp
add
xchg
arpl
inc
mov
sti
out
bound
sbb
scas
ret
mov
mov
bound
jne
test
xor
xor
loop
lock
and
jp
mov
in
push
in
cmpsl
ret
inc
mov
rclb
adc
add
aad
xor
add
leave
cmp
mov
jb
fdivr
lods
xor
xor
pop
ficoml
jae
fadd
inc
sti
or
fs
inc
add
pop
inc
lret
ds
dec
roll
mov
add
push
dec
shll
push
sub
add
add
mov
adc
sbb
jl
popa
ja
loope
xchg
into
fs
bound
les
mov
cltd
rcrb
push
pop
shll
rcl
pop
mov
shll
or
mov
std
cwtl
or
add
arpl
out
repnz
ret
shrb
fcmovb
lret
mov
ds
xor
add
test
inc
jmp
jne
mov
idivl
vpunpckhbw
cmp
add
push
scas
mov
scas
or
add
stos
les
and
xor
add
ss
mov
leave
mov
pop
inc
outsb
out
mov
mov
int3
int3
int3
int3
int3
or
cmp
int3
int3
int3
int3
int3
cmp
ljmp
mov
inc
jg
sbb
jmp
sub
cmp
imul
out
inc
es
mov
mov
dec
sub
add
sbb
xor
sbb
push
cmpl
add
lock
int3
inc
outsb
push
scas
into
push
pop
ret
movsl
jmp
push
push
add
nop
nop
nop
nop
nop
xchg
xchg
xchg
out
adc
jle
shrl
out
add
hlt
inc
fisubrs
adc
xor
aam
icebp
mov
daa
adc
inc
scas
std
pop
jp
mov
cmc
push
or
and
aad
pmaxsw
packssdw
adc
cwtl
xor
dec
je
aaa
and
arpl
mov
mov
mov
or
nop
nop
nop
nop
cltd
pop
inc
outsb
dec
and
hlt
push
xor
cmpsl
ret
push
or
stc
dec
sbb
sbb
push
sbb
xor
ret
jb
gs
stos
jb
adc
pushf
pop
lods
dec
mov
mov
jbe
xchg
pop
inc
out
xor
jo
push
stc
push
adc
fbstp
and
mov
in
sub
xchg
jmp
lret
add
sbb
dec
fidivrl
jns
repz
add
jmp
mov
jbe
loop
addr16
nop
nop
nop
nop
nop
or
out
mov
movsl
xorl
hlt
ret
adc
sub
mov
xor
rorl
pop
xchg
fs
adc
or
xchg
cli
pop
add
jg
add
push
xchg
rcll
mov
in
pop
test
xchg
dec
aas
xor
pop
pop
loopne
loopne
nop
nop
nop
nop
add
adc
sub
repnz
sub
insb
inc
insl
and
push
xor
test
shl
jns
in
add
add
mov
shll
pop
add
add
jecxz
dec
mov
cmpb
pop
mov
nop
nop
nop
nop
add
dec
ret
mov
in
add
frstor
mov
nop
nop
nop
nop
nop
lret
push
add
push
aam
les
sbb
add
add
dec
adc
shrd
aam
push
test
pop
rolb
divl
pop
leave
mov
int
idivb
testl
lret
rclb
add
add
repnz
mov
push
inc
sbb
mov
in
shrl
std
outsb
sbb
mov
test
and
add
outsb
call
addr16
imul
inc
cs
sbb
mov
cmp
sub
mov
repz
pop
inc
rorb
push
sahf
or
test
out
dec
inc
cltd
enter
lds
inc
ret
xchg
adc
out
mov
mov
fs
scas
stos
push
mov
jp
repz
jmp
leave
loope
dec
or
das
cmp
jmp
cmc
cmpsl
dec
add
dec
push
shrb
call
inc
ljmp
mov
sub
cmp
ljmp
movsb
sbb
add
jo
loop
lods
cmp
pop
ret
shlb
gs
insb
pusha
adc
out
adc
imul
and
add
lahf
int
adc
outsl
sub
inc
nop
nop
nop
nop
nop
ljmp
xchg
cmp
fadds
pop
push
cmc
in
imul
dec
and
mov
push
push
fcomps
xor
sub
shrl
jb
add
lock
nop
nop
nop
nop
sbbb
test
pop
add
or
int3
int3
int3
push
jae
popa
xor
sbb
cmp
add
subb
rolb
cs
cli
jle
leave
jae
filds
push
es
data16
daa
or
pop
fidivrl
aaa
add
ljmp
add
xchg
or
nop
nop
nop
nop
nop
mov
std
jge
cwtl
add
mov
xchg
lcall
or
stc
and
add
xchg
xor
jge
lock
or
add
mov
scas
jg
mov
xchg
mov
push
mov
iret
add
outsl
xchg
xchg
clc
adc
mov
mov
sub
leave
aas
dec
les
inc
or
jae
outsb
dec
iret
out
adc
mov
push
test
jle
aaa
lcall
in
jo
mov
fdivrl
push
mov
dec
leave
push
rorl
outsb
inc
lds
or
popa
insl
xchg
push
fcoms
loop
mov
sbb
pop
and
sub
add
imull
jns
call
arpl
in
test
icebp
sub
add
fcomps
cmp
or
sub
push
je
lock
jnp
sbb
aam
shll
xor
jbe
and
out
adc
insl
mov
mov
ret
aad
outsl
xchg
push
push
sub
inc
stos
pop
lods
mov
jo
and
sub
test
cltd
jnp
mov
xlat
adc
add
rorb
dec
jmp
lea
sbb
jnp
fs
lds
rcrl
out
mov
ret
aam
sub
repz
sbb
cmp
xchg
in
push
mov
jge
stc
dec
arpl
cltd
mov
cmp
lret
inc
ljmp
xor
push
ljmp
out
xchg
scas
xor
testb
inc
testb
aad
bound
fbstp
inc
aaa
add
push
out
cs
dec
dec
inc
cs
popa
sbb
add
mov
add
mov
aaa
fwait
cmpb
cli
xor
jg
int3
int3
int3
int3
pop
scas
sahf
sbb
int3
adc
add
push
iret
or
jg
cmc
mov
add
or
stos
cmp
jo
adc
xor
mov
ljmp
add
adc
imulb
jns
pop
pop
inc
insb
mov
idivl
mov
sub
rolb
repnz
hlt
sub
insl
cli
dec
xlat
jns
mov
cld
xchg
mov
mov
btr
mov
iret
push
aaa
loopne
loope
mov
push
mov
nop
nop
nop
nop
nop
mov
add
lcall
movsb
out
xor
and
xchg
leave
xchg
jl
insl
cld
xor
add
test
mov
popf
mov
sub
mov
jp
pop
pushf
inc
dec
scas
add
repz
dec
mul
mov
call
pop
cs
add
into
mov
testl
and
add
xchg
mov
repz
or
mov
and
xor
add
or
add
in
jns
cmp
push
repz
cmp
mov
ja
adc
int3
int3
int3
int3
int3
clc
gs
mov
lock
push
les
lods
cs
push
xchg
repnz
and
into
dec
nop
nop
nop
nop
nop
pop
cs
stos
dec
adc
add
pop
add
adc
xor
js
iret
nop
nop
nop
nop
nop
pop
test
mov
mov
jecxz
clc
sbbl
xchg
inc
stos
arpl
sub
xchg
adc
loope
or
mov
fcoml
lret
fsubs
pop
and
int3
int3
push
xor
dec
dec
in
cwtl
ds
sub
jbe
jmp
pop
inc
out
dec
cmp
dec
cmpsl
lds
movsb
int
pop
fldl
imulb
adc
outsl
inc
sbb
adc
out
xor
lahf
shll
or
fcompl
xor
jge
sub
add
lcall
out
jo
movsl
je
stos
push
dec
jae
bnd
sbb
arpl
fsubp
pop
mov
xor
aam
sbb
pop
iret
outsb
les
inc
and
popf
or
add
jno
iret
test
and
and
jge
in
stc
jne
ljmp
inc
fidivs
les
call
mov
push
xchg
jge
stos
and
add
mov
sbb
movsb
add
into
dec
xor
dec
pusha
test
cmpsb
pop
call
dec
xchg
and
add
dec
mov
or
sahf
int
pop
inc
xor
in
iret
loope
adc
repz
push
xor
mov
pop
addr16
pop
push
and
adc
testb
jno
pop
dec
arpl
jmp
iret
andb
aas
fucomp
pop
mov
jecxz
cmpsb
test
pop
adc
mov
stos
xor
push
push
les
sub
movl
hlt
lock
mov
outsl
xchg
push
daa
and
repz
push
dec
fs
mov
jp
adc
inc
std
and
and
imulb
lahf
mov
stos
adc
ret
push
gs
fs
xchg
xchg
adc
dec
add
add
dec
js
lret
inc
or
inc
inc
dec
dec
popa
ja
cwtl
inc
push
mov
fcomi
or
stos
push
xchg
mov
jl
insl
and
add
inc
shrb
ss
fstps
push
xchg
cmp
cmp
insl
rcll
mov
std
rcll
xchg
insl
cmpsl
cwtl
fdiv
mov
adc
in
xchg
icebp
test
pop
hlt
xchg
jecxz
xchg
fsubrl
or
inc
mov
test
dec
mov
outsl
popa
loopne
jnp
pop
jne
cwtl
mov
outsb
dec
fs
mov
push
mov
popf
push
bound
adc
and
ffreep
mov
fiadds
sub
je
jmp
cld
xor
push
push
scas
into
jp
dec
xor
ss
hlt
cmp
push
inc
pusha
pop
add
mov
dec
xor
arpl
inc
cmp
outsl
cmpsb
jle
popf
mov
imul
add
inc
jl,pn
mov
inc
ljmp
add
outsl
fistpll
mov
mov
lcall
lods
and
add
jbe
lea
sub
adc
add
cwtl
fistps
stos
pop
test
rdtsc
add
sub
outsl
push
cmc
jo
sbb
insl
into
add
inc
cld
sub
sub
and
add
loope
bnd
ret
cld
xchg
cmpb
imul
xchg
jbe
fldt
in
fmuls
cmpsl
fsubrl
out
lods
arpl
inc
popa
xlat
sbb
testl
adc
fs
cmp
push
xor
add
push
in
in
pop
push
xor
add
pop
inc
mov
inc
lahf
ljmp
or
push
stos
push
xchg
xchg
cmp
in
jne
fiadds
shrl
or
dec
jo
sub
ljmp
push
mov
or
add
jl
xor
orb
scas
adc
cmp
xor
shll
sub
icebp
bound
insb
out
dec
xchg
fdiv
push
jae
shr
pop
cmp
sarb
and
push
lea
test
xor
mov
adc
and
adc
aam
push
stos
dec
pop
insb
xchg
inc
pop
lods
sub
aas
into
sub
mov
sarl
cli
mov
jecxz
or
fwait
test
fdivl
mov
lds
mull
dec
pushf
mov
int3
int3
int3
int3
jne
dec
or
cmpsb
push
mov
in
in
in
cmpsl
cld
mov
mov
add
lods
je
xor
mov
scas
or
sbb
lcall
jg
mov
pop
and
inc
push
pusha
cmpsl
repnz
sbb
nop
loope
jle
hlt
add
ja
pop
cli
les
sub
or
fisubs
fmull
add
lods
mov
jmp
ljmp
cmp
test
fidivl
in
dec
push
subl
pusha
hlt
aas
jle
xchg
add
add
daa
mov
push
jno
cmp
add
jp
jmp
inc
mulb
cmpb
pop
loop
fimuls
stc
jns
xor
and
lea
adc
frstor
out
iret
dec
mov
inc
dec
repnz
icebp
xor
mov
in
push
test
inc
aad
pop
cli
out
into
jb
cmp
adc
mov
lods
ljmp
push
or
mov
xor
jmp
int
fldcw
cmp
inc
add
stos
push
bound
cmp
sbb
add
jne
cmpsb
inc
dec
in
dec
pop
push
loopne
mov
jle
loopne
add
into
cmc
sti
int
xor
jl
rclb
add
stos
mov
outsb
ljmpw
push
dec
lea
and
add
adc
add
push
in
aam
adc
pop
icebp
mov
andb
daa
das
out
jns
ljmp
add
movsl
mov
adc
arpl
dec
cmp
or
in
arpl
mov
in
mov
std
xchg
dec
icebp
pop
addr16
cwtl
pop
inc
add
dec
add
push
sbb
addr16
inc
push
sub
insb
dec
sbb
pushf
popa
mov
or
jae
das
xor
jno
mov
popf
lock
xor
inc
mov
out
shl
pop
stc
scas
in
adc
adc
dec
gs
enter
fidivrl
jb
inc
out
cmc
andb
js
mov
icebp
xchg
jg
dec
sbb
mov
jmp
jns
pop
or
icebp
xchg
add
push
push
iret
pop
sbb
pop
mov
inc
dec
mov
fcomps
int
repz
xor
repz
roll
add
int3
int3
add
push
xorl
popa
pop
insb
jl
xchg
dec
xlat
orb
push
inc
negb
jne
push
fldz
rcr
fnstcw
pop
dec
push
loopne
loop
add
inc
xor
or
add
mov
xchg
shll
jo
inc
mov
push
in
fwait
xchg
jae
push
mov
pusha
subb
inc
stos
fnstenv
icebp
subb
pop
or
sub
in
gs
ds
add
jp
rorb
scas
add
lods
inc
and
imul
push
mov
inc
imul
push
xor
xchg
and
stos
lds
roll
mov
std
mov
shr
xchg
jb
mov
add
jl
lds
test
pop
sub
imul
adc
lret
add
pop
fidivrs
mov
scas
hlt
lcall
lcall
daa
mov
xchg
push
fsubs
push
mov
and
fcomps
dec
pop
pop
and
or
push
add
insb
addl
je
pop
fsubrs
pop
imul
mov
sti
push
sbbb
dec
mov
in
cmp
jp
lods
jno
mov
daa
enter
movsb
jg
call
insb
add
push
mov
xchg
pop
add
scas
lds
outsl
out
jnp
add
cmpsb
mov
pop
btr
sbb
lret
flds
sub
scas
das
mov
lds
dec
call
repz
mov
stos
lcall
out
mov
cltd
lods
lahf
or
mov
jp,pt
ljmp
loope
xor
mov
add
into
xchg
sbb
in
fisubrs
cmc
sbb
pop
mov
dec
jnp
cmp
add
inc
out
sar
jne
add
jl
push
es
seta
push
add
aas
xchg
aaa
stc
enter
and
mov
mov
cltd
mov
testl
maskmovq
jnp
mul
push
dec
scas
in
mov
mov
std
pop
out
out
sahf
or
popf
push
bound
push
stc
adc
add
inc
jne
jne
das
push
mov
stos
nop
nop
nop
nop
nop
mov
movsl
ret
in
adc
addr16
fmull
fbstp
scas
jnp
sbb
dec
push
fldt
insb
mov
cs
sbb
loop
mov
repz
aas
sub
hlt
inc
test
in
roll
cmc
imul
mov
ljmp
repz
popa
xchg
fnstenv
ss
fcomps
mov
dec
push
jb
fldl
negl
add
cmp
addr16
ds
and
ja
xchg
out
mov
sub
jg
lods
shlb
jbe
loop
andb
and
add
mov
dec
inc
sub
adc
mov
int3
int3
int3
int3
int3
mov
clc
inc
daa
and
or
insb
jmp
out
push
inc
jbe
jg
fs
pop
std
mov
push
clc
sub
add
mov
hlt
int3
int3
int3
int3
int3
cs
movsl
sti
xchg
into
lcall
dec
call
std
aas
mov
lcall
dec
pushf
adc
mov
lahf
aad
sahf
xchg
push
popf
pop
in
dec
sbbb
push
sub
pop
shl
add
xchg
cmp
movsl
into
cmc
pop
xchg
sbb
push
out
sub
mov
adc
mov
or
fidivrs
ja
rorl
or
sub
dec
xchg
and
cmc
push
adc
mov
cwtl
sbb
inc
xlat
fiadds
push
mov
sub
shrb
in
loope
sub
into
imul
outsl
inc
adc
mov
mull
sbb
lret
enter
and
and
mov
stos
int
and
clc
testb
push
sbb
mov
nop
nop
nop
nop
add
mov
into
mov
imul
inc
ss
cmpsl
mov
jmp
test
add
mov
dec
ja
cmp
add
negl
loop
jne
and
adc
hlt
xchg
loop
inc
mov
mov
scas
popf
add
mov
aam
push
or
add
clc
sbb
int3
int3
int3
int3
int3
fwait
inc
and
mov
gs
xchg
aaa
or
hlt
mov
into
jge
into
cmp
movsl
int3
int3
int3
int3
int3
jne
adc
fiaddl
sti
add
xlat
sub
fistpll
pop
cmp
xor
jnp
dec
das
xchg
xchg
cmp
ret
sbb
mov
sarb
inc
arpl
push
scas
xor
cltd
inc
shll
popa
cmp
stc
xor
sbb
insb
test
add
lret
rcrb
aaa
cmp
adc
mov
push
mov
in
push
xchg
adc
ja
repz
rorb
clc
lcall
add
adc
xchg
fwait
cmp
or
scas
mov
mov
dec
insl
push
ds
shll
cld
cmp
pop
cmp
sbb
jp
scas
cmp
imul
inc
sbb
sub
cli
jne
cmpsb
xchg
ret
jb
mov
iret
fucomip
jae
add
dec
test
scas
sbb
sub
cmp
adc
sti
jp
mov
les
add
stos
push
call
xor
pop
test
mov
add
lahf
xchg
jb
sbb
jb
loop
xor
out
push
movsb
xchg
adc
and
xchg
add
sub
mov
into
mov
and
notl
pop
add
push
jle
xchg
orl
call
jg
or
xorb
cmpsb
lret
pop
loopne
inc
fwait
loopne
repnz
in
or
mov
pop
push
test
fnsave
xor
add
jns
adc
add
jno
and
inc
popf
pop
jge
mov
add
fcomps
test
push
push
xchg
inc
inc
pop
inc
adc
adc
lahf
arpl
xlat
sbb
test
test
int3
int3
int3
scas
jmp
xchg
in
pop
push
int
jbe
adc
mov
imul
rclb
mov
add
xchg
add
imul
loop
jae
mov
inc
inc
mov
js
xchg
add
mov
xor
or
mov
in
mov
inc
push
push
pop
je
mov
inc
fisttps
mov
lcall
adc
ret
loopne
sarb
and
shll
pushf
push
les
sbb
dec
mov
sarb
mov
enter
pop
fldcw
fisttps
xchg
add
scas
ret
movsb
cmp
cmp
add
inc
fdivl
sbb
or
cltd
jns
mov
cld
fmul
mov
fldl2e
addr16
push
cmp
jnp
mov
das
mov
xchg
fistps
test
add
mov
adc
int3
int3
int3
int3
int3
and
adc
add
iret
sbb
dec
jns
idivl
inc
nop
nop
nop
nop
nop
jg
jl
cmp
mov
loop
ret
lds
cmpsb
cld
call
call
and
push
mov
push
push
pop
ss
outsb
xor
push
add
ret
push
cwtl
dec
sub
mov
xor
pop
inc
sub
mov
lods
inc
xchg
fdivl
xchg
jg
insb
inc
data16
jmp
adc
and
jmp
mov
add
inc
xchg
push
adc
pushf
pop
jb
mov
outsl
dec
rorl
xor
inc
push
std
notb
scas
xchg
xchg
fs
daa
or
int3
int3
int3
xchg
jns
out
and
push
ljmp
or
add
add
add
cld
jns
sub
cmp
lret
in
loop
cmp
inc
xchg
add
cmp
std
repnz
add
ffreep
je
jae
orl
add
add
aad
adc
push
jo
xchg
cs
repnz
mov
inc
push
andb
add
int
xorl
jae
fwait
pop
inc
pop
pop
cmpsl
add
loopne
insb
sbb
inc
aaa
or
in
dec
leave
mov
jecxz
mov
stos
insl
inc
mov
inc
pop
jbe
inc
inc
out
inc
lods
aam
pop
add
inc
pop
xchg
setge
jne
fimull
or
icebp
and
add
mov
stos
imul
fsub
push
mov
xor
adc
sub
xor
ds
xchg
aam
ds
add
lcall
enter
jmp
mov
xchg
popf
cmp
jnp
mov
mov
fidivrs
cli
fists
xlat
pop
pushfw
enter
sub
sbb
test
pop
pop
xor
add
imul
push
test
or
mov
dec
scas
sbb
or
lea
add
rorl
pushf
xchg
adcb
testb
mov
add
sub
xchg
test
add
push
adc
lret
mov
push
or
push
sub
movsb
nop
nop
nop
nop
nop
adc
pushf
or
add
mov
add
sbb
in
mov
imul
push
lods
mov
add
add
scas
mov
jns
mov
fdivrl
xchg
call
sbb
mov
cltd
adc
jmp
cmp
sub
add
xchg
dec
push
adc
daa
xchg
fdivs
icebp
cltd
neg
loope
aad
add
in
ret
xlat
or
outsl
fs
gs
ror
popf
fcmovne
xchg
dec
xor
test
enter
dec
mov
test
call
jne
scas
add
subb
mov
sldt
std
call
pop
es
xor
push
pop
cmc
xchg
mov
mov
inc
xor
andl
orl
js
int3
int3
int3
int3
out
in
sbb
add
cwtl
pop
in
movb
jmp
mov
call
inc
mov
mov
mov
daa
sbb
test
aas
add
paddsb
dec
leave
push
push
mov
pop
pop
test
jmp
mov
inc
jnp
loopne
aas
lea
and
add
cs
mov
adc
add
mov
mov
cmp
mov
fdivrl
shlb
out
mov
and
notl
push
or
add
je
mov
and
shrb
and
ja
cs
sbb
push
inc
jbe
add
dec
imull
faddl
pop
cmpsb
push
jnp
fidivl
dec
sbb
add
push
in
dec
inc
gs
or
mov
add
scas
movl
and
mov
test
into
and
stc
cwtl
aas
cmp
clc
nop
nop
nop
nop
nop
repnz
stc
scas
cli
clc
xchg
std
and
add
mov
lcall
int3
int3
int3
int3
cmp
lods
sub
xchg
or
aad
xor
adc
arpl
mov
adc
daa
aas
stc
pop
addr16
lods
sub
xor
inc
mov
pusha
mov
sbb
roll
xor
xor
inc
xchg
sbb
inc
or
mov
int
cmp
adc
mov
pushf
add
add
jle
in
inc
sub
xchg
xorb
call
pop
out
cwtl
cmp
cltd
sbb
inc
xlat
fdivl
jmp
punpcklwd
xchg
pop
sahf
mov
inc
mov
sbb
push
jo
js
les
fwait
xor
push
mov
xchg
cmp
fcomp
sbb
sldt
leave
dec
test
repz
repnz
push
adc
in
mov
mov
pop
leave
add
sub
test
lods
jecxz
pop
ljmp
xor
inc
cmp
negb
push
xor
and
ror
shrb
repz
scas
ss
scas
stc
xchg
push
jne
cmc
pop
add
data16
stc
jecxz
sbb
or
mov
adc
pop
jne
dec
sub
into
sbb
in
add
iret
sti
test
into
lret
xchg
stos
fwait
push
push
mov
imul
jg
sub
cwtl
mov
out
mull
inc
fs
cmp
mov
xor
sub
ret
lahf
mov
movsl
rclb
nop
jns
sarb
push
ret
xor
sub
sbb
mov
cmp
fldt
aam
bound
pop
hlt
xor
sbbl
int3
int3
int3
pop
jne
jecxz
insb
repnz
push
adc
je
jo
cwtl
faddl
mov
fistl
push
addr16
mov
daa
mov
inc
in
adc
add
add
fdivs
add
or
or
cs
fisubs
inc
mov
or
mov
iret
aas
shld
cmp
fyl2xp1
push
bound
pop
or
add
jecxz
jno
push
add
add
or
leave
mov
fwait
pop
xor
idivl
pusha
pop
add
hlt
jns
sahf
push
jb
filds
xchg
xchg
cs
pop
imull
clc
mov
roll
icebp
fsubs
xchg
fistps
int3
int3
int3
int3
int3
lahf
inc
jbe
sbb
aaa
add
aad
adc
add
stos
jne
int3
int3
int3
int3
mov
add
add
cwtl
and
loopne
jecxz
mov
outsb
jmp
xchg
push
cmp
arpl
add
adc
jecxz
mov
dec
xor
jo
lret
out
cmp
ss
inc
mov
mov
scas
dec
adc
adc
and
xchg
mov
xchg
dec
mov
adc
and
xchg
mov
xchg
sub
mov
xchg
fldcw
sbb
xchg
mov
rolb
nop
nop
ficompl
pop
cmp
stos
ret
lea
pushf
leave
jl
stos
push
jb
js
lcall
sub
and
jae
lahf
cmp
mov
ret
jp
cld
add
and
mov
iretw
inc
fisubs
movq
mov
decb
add
pop
cs
stc
jb
lods
adc
ss
lret
jae
dec
test
loope
dec
mov
sbb
inc
add
pusha
push
jbe
mov
add
addb
mov
jb
cltd
push
cmc
ja
push
cmp
add
dec
orb
stos
icebp
xor
push
dec
aaa
sti
xchg
inc
jo
mov
je
mov
mov
iret
jg
insl
lahf
pop
test
pop
dec
lods
push
movsb
cmpb
mov
rol
out
cmc
pop
xchg
std
push
lds
adc
add
jns
xor
outsb
mov
cmpsb
cmp
jg
adc
mov
mov
jmp
adc
xor
add
push
into
adcb
loope
sub
ds
inc
push
fwait
push
jp
inc
mov
cmp
or
pop
add
sub
sahf
sub
add
or
xchg
xchg
aaa
fdivrs
inc
mov
out
adc
lea
add
xor
insb
add
add
cmp
add
mov
popf
or
jge
jecxz
js
mov
pop
jb
and
test
mov
xchg
and
pushf
jae
shl
mov
notl
mov
mov
outsl
sbb
scas
sbb
push
or
sub
add
lahf
stos
adc
lcall
xor
mov
loope
mov
in
sub
add
or
das
sbb
pop
dec
mov
and
stos
and
mov
scas
pusha
cwtl
mov
aad
push
sub
stos
xchg
ret
adc
sub
insb
dec
push
mov
jnp
mov
repnz
gs
and
adc
sbb
xor
sub
sbb
sbb
sbb
loopne
dec
or
aad
adcl
cmp
out
bound
mov
and
dec
cmc
inc
add
test
das
sbb
xor
mov
and
lods
cmp
js
out
ds
cld
inc
test
cmpsl
ja
pop
mov
ret
push
mov
cwtl
subl
add
subl
add
push
orl
mov
adc
aam
ss
dec
roll
cmpsl
iret
in
enter
cmp
cmp
bound
jae
das
add
jle
mov
jl
and
xchg
and
xchg
repnz
pop
idivl
xchg
xchg
cmpsl
cltd
shll
int3
int3
jle
out
cmp
hlt
repnz
dec
pop
mov
sub
cmpsb
cmpsl
shl
idivl
inc
out
xor
xchg
pop
out
fs
je
rcrl
sbb
cmp
xchg
jo
add
adc
fcoms
addr16
ret
movsl
ficomps
rcll
cld
scas
and
cltd
dec
push
adc
stc
hlt
and
sub
in
sub
movb
imul
rolb
sarl
fisubs
popf
jg
and
add
stos
aas
xor
xor
mov
cmp
in
inc
lds
xchg
or
repnz
loop
sbb
mov
or
pop
jne
je
add
lods
out
out
push
shlb
pop
aaa
lods
clc
cwtl
sbb
fildll
xchg
enter
dec
cmpsb
mov
dec
stos
fs
sub
call
xchg
lock
cmp
cld
push
test
jecxz
or
mov
or
jo
add
push
adc
lahf
in
pop
inc
loop
dec
pop
fcoms
cmp
add
sbb
xchg
mov
call
mov
mov
xchg
loope
and
sarb
pushf
repnz
movsl
pop
scas
not
shll
mov
fldcw
and
adc
cmpsb
pop
nop
nop
nop
nop
nop
dec
mov
pop
and
mov
inc
sbb
mov
movsb
add
add
idivb
je
scas
jno
mulb
movsb
test
push
mov
push
icebp
sub
in
sub
pop
nop
nop
nop
nop
nop
mov
push
pop
dec
mov
mov
scas
int3
int3
int3
int3
int3
sub
cmpsl
popa
adc
int3
bnd
or
push
mov
push
lahf
inc
sbb
jg
cmc
cmp
adc
fsubs
loopne
loope
or
mov
sub
pop
addr16
push
dec
stos
lods
xchg
mov
push
nop
nop
nop
nop
nop
in
test
xchg
push
lods
arpl
add
add
mov
fwait
sub
test
nop
nop
nop
push
ja
and
cltd
and
and
repnz
fsts
xor
add
sahf
dec
pop
or
sub
popa
iret
std
cmpsl
divl
adc
fs
insl
xor
addr16
mov
adc
sub
loop
jbe
mov
cmp
add
ret
xchg
pop
in
xchg
pop
ds
pop
xchg
or
dec
add
add
add
movl
lods
lods
mov
jbe
nop
nop
nop
nop
nop
mov
dec
inc
call
mov
sub
sub
sub
ss
fstps
data16
xchg
cwtl
and
cmpsb
js
or
add
jmp
mov
aas
sub
push
int3
push
pushf
in
pop
xor
lret
lcall
mov
decb
mov
rcrb
cltd
jo
mov
add
inc
jnp
and
pop
mov
mov
add
jnp
arpl
mov
add
movsl
xor
cmp
test
iret
xor
sbbl
add
lret
cmp
and
mov
xor
push
cmp
repnz
enter
jb
xor
fsts
int
sub
sbb
sub
lea
jno
push
lods
shll
mov
mov
int
mov
frstor
jns
or
pop
jae
dec
push
mov
out
jl
mov
push
add
sbb
in
xchg
ficompl
or
mov
inc
cmp
cmp
sub
nop
nop
nop
sbbb
popf
daa
into
dec
sbb
test
es
pop
nop
nop
nop
nop
nop
sbb
decb
mov
test
pop
pop
xor
xor
roll
fs
pop
pop
xchg
jmp
mov
add
adc
cmp
xor
xchg
dec
sub
sub
test
or
adc
in
cmp
xchg
dec
or
inc
xlat
stos
pop
jmp
subl
pop
call
aas
sub
outsb
jmp
movsb
bound
movsb
or
daa
rcrb
lahf
mov
enter
mov
mov
adc
adc
cmp
mov
fisubl
xchg
mov
push
push
adc
outsl
cmp
adc
cmp
add
push
loop
mov
add
inc
xchg
stos
std
adc
insb
pop
sub
cltd
sbb
sti
sub
test
add
push
pop
cmp
pop
push
mov
cmp
push
add
int3
int3
int3
daa
loop
xchg
xchg
fadds
add
popa
add
outsl
out
push
int
arpl
and
mov
jns
sub
rcrb
stos
jnp
mov
lea
and
xchg
movb
sarl
add
ror
leave
dec
shll
insl
arpl
popa
mov
or
cwtl
push
pushf
idivb
andl
lret
cmc
cmpsl
dec
jl
hlt
and
popf
out
xor
jmp
int3
int3
int3
scas
popa
push
mov
mov
inc
cmc
add
inc
shll
jnp
sub
adc
jl
fimull
add
ficompl
add
push
jmp
pop
arpl
bound
mov
cmp
push
add
or
push
je
rcl
ffreep
sub
mov
cmp
add
cmc
sub
xchg
es
clc
lret
push
push
mov
sbb
xor
aaa
pop
inc
push
subb
cmp
add
or
xchg
dec
repz
stos
addl
je
xor
sub
lock
mov
dec
lea
and
xor
inc
jmp
xchg
out
adc
jle
testb
cmp
and
lcall
pop
mov
nop
push
and
cs
jbe
adc
jge
mov
jmp
aam
xor
push
cmp
add
dec
sub
mov
out
fprem1
out
cli
pop
add
lret
scas
std
in
lea
fadds
sbb
push
rclb
pop
push
add
cmc
or
or
call
icebp
aam
adc
fsubl
xchg
or
fldt
and
push
xchg
andl
shr
jle
insl
rcrb
xchg
fidivrl
or
nop
nop
nop
nop
loope
mov
stc
enter
ja
push
adc
adc
mov
pusha
out
cs
pop
shl
and
jnp
mov
push
cltd
iret
sbb
mov
pop
fcomps
xchg
pop
lret
fnstcw
cli
sahf
push
test
outsl
lds
mov
or
push
daa
sub
or
jnp
jne
xor
mov
mov
dec
push
repnz
mov
pop
ror
inc
es
pushf
mov
mov
add
mov
fisttps
jae
pop
arpl
inc
pop
lods
inc
dec
xchg
int3
int3
int3
int3
int3
out
inc
xor
repz
jnp
repz
push
push
iret
inc
push
fs
bnd
sub
pop
test
add
inc
nop
nop
nop
nop
nop
mov
aas
xor
cld
xchg
push
into
loopne
cwtl
lea
xor
mov
sbb
pusha
jmp
mov
rcrl
fcom
jbe
mov
inc
cltd
push
sbb
pop
adc
jmp
add
aaa
dec
sbb
data16
add
mov
add
or
ljmp
xchg
mov
inc
or
push
dec
mov
popa
dec
arpl
jg
inc
mov
sahf
or
test
mov
mov
inc
jmp
mov
call
aam
sub
xor
xchg
dec
loope
repz
inc
mov
pop
xlat
test
inc
aaa
or
pop
and
jmp
mov
leave
faddp
push
aam
js
int3
int3
int3
int3
in
and
adc
add
pop
pop
adc
in
xchg
xchg
and
jne
repnz
das
imul
mov
bnd
movsl
dec
out
or
and
xchg
add
xor
jbe
int3
int3
int3
int3
int3
push
adc
add
popa
sub
push
jb
popa
cld
pop
enter
fwait
mov
ficoml
cli
shll
wrmsr
xor
fildll
push
push
shl
or
add
mov
add
add
aad
mov
jl
sub
or
in
lds
out
adc
loop
cli
push
mov
adc
push
aam
aaa
orl
imul
les
fmul
int3
int3
int3
int3
frstor
fs
ds
hlt
jo
shld
int
mov
test
inc
cmp
test
jl
or
enter
out
scas
pop
inc
lahf
mov
sbb
push
arpl
cli
add
cmpsb
adc
lret
mov
dec
stos
dec
dec
sbb
jns
adc
pop
int
in
adc
loopne,pt
fstl
je
hlt
xor
mov
inc
adc
or
add
mov
int3
int3
push
test
and
mov
cmp
add
mov
mov
mov
pop
insl
and
stos
data16
ficoms
outsb
enter
aaa
add
pop
test
push
hlt
aaa
add
fmuls
int3
int3
int3
int3
lret
sbb
ja
inc
pusha
push
out
leave
sub
clc
mov
jmp
xchg
adc
add
ret
add
dec
pushf
daa
stos
lds
sub
andb
loop
xchg
cmp
sbb
xchg
sarl
movsl
fidivl
loopne
hlt
mov
sub
cmp
xchg
data16
in
outsb
incb
int3
int3
int3
int3
mov
in
sub
in
and
push
rorb
lods
mov
out
test
add
inc
fwait
add
push
loopne
shlb
testb
add
shlb
lods
aas
add
roll
push
lock
cmc
scas
sar
inc
jbe
add
movsb
push
sbb
mov
mov
test
subb
les
and
mov
pusha
mov
cmp
lcall
cmp
mov
data16
or
and
inc
stos
ret
dec
out
imul
mov
mov
jne
jb
add
push
jns
mov
pop
dec
xchg
addr16
repnz
mov
ljmp
outsb
sahf
jp
fsubrl
inc
push
das
mov
or
out
mov
add
rclb
negl
adc
lock
push
fcoml
pop
sub
loope
push
and
xchg
loop
and
adc
cmp
bnd
mov
add
into
gs
in
popf
dec
pop
push
mov
lahf
pop
lea
mov
cmp
cld
and
mov
es
test
mov
mov
mov
rcrl
enter
pusha
rclb
sub
test
ja
push
mov
xchg
or
mov
iret
mov
push
pusha
push
sbb
and
loope
fadd
repnz
push
mov
pop
and
aas
add
mov
sub
jge
jae
imul
out
jno
inc
test
and
push
jo
cmpsb
daa
pushf
cmp
pop
and
add
or
adc
mov
pop
shrb
hlt
lea
pop
pop
cs
inc
push
fisubrs
adcb
push
xor
bound
cld
or
jb
out
lock
add
jnp
mov
cmp
xchg
aad
sub
int3
int3
int3
int3
int3
mov
inc
mov
loope
mov
int3
int3
int3
int3
xchg
popa
mov
int3
int3
int3
int3
dec
insb
lods
pop
imul
inc
jge
out
test
cmpsl
fisttps
sbb
or
out
xor
stos
pop
cmc
and
iret
mov
mov
mov
nop
nop
nop
sar
push
xorw
int3
int3
aam
push
loopne
mov
sahf
out
mov
sub
sub
stos
out
movsb
adc
mov
sub
pop
adcl
mov
daa
mov
popf
fsubp
pop
mov
xor
sub
cmpsl
aaa
or
sbb
lcall
inc
sbb
inc
push
mov
shll
pop
aam
loope
xchg
insb
ret
push
sbb
int3
int3
int3
int3
rcr
call
rorb
int3
int3
int3
int3
cli
out
lods
loopne
lea
iret
insb
leave
adc
and
jmp
push
push
mov
scas
fists
push
mov
stc
adc
adc
xchg
cmpsb
aam
ljmp
push
or
rcl
in
mov
jnp
adc
dec
shlb
cli
fidivrl
sti
sar
jecxz
cmp
dec
mov
add
lret
popf
shrb
add
and
out
jns
jp
sub
mov
sbb
add
push
lahf
bound
scas
popa
sub
mov
mov
pop
cmp
xchg
lret
test
cmpsl
add
adc
xchg
xchg
jge
mov
sub
shl
push
out
out
mov
xor
push
cli
mov
xor
jecxz
in
movsl
in
xchg
in
pop
pop
jo
dec
push
cmc
sub
inc
mov
jg
adc
pop
addr16
int
sbb
mov
jmp
sub
and
xor
pop
fs
insb
fstl
xchg
loope
movsb
push
adc
xchg
in
out
cmp
add
xor
pop
and
pop
jp
shlb
insl
push
mov
add
push
dec
mov
add
push
or
adc
push
test
cltd
int
loope
add
push
and
popf
sub
xchg
leave
divb
and
dec
repnz
mov
rorl
dec
add
add
mov
es
jb
pop
xchg
jmp
or
xor
arpl
pushf
je
rclb
nop
nop
nop
nop
nop
pop
inc
xchg
insl
pop
xor
aad
cmp
repz
add
xlat
add
fs
sub
and
xchg
mov
jae
fwait
adc
lods
jns
jae
adcb
into
into
push
test
shlb
xor
fwait
movsb
out
mov
loope
mov
aaa
pop
data16
lods
cli
jp
movsl
inc
lret
std
orl
inc
insl
sub
jnp
and
loopne
and
cs
test
jne
xchg
loope
fwait
icebp
adc
vcvttps2dq
xchg
xchg
xor
pop
xor
add
dec
mov
mov
call
adc
dec
out
xchg
inc
push
into
or
dec
mov
mov
xchg
fdivrs
les
gs
and
out
stos
cltd
js
cmp
cli
xchg
jg
scas
daa
inc
ja
jno
jp
dec
test
push
add
fstpl
jnp
or
daa
aaa
add
lret
xor
repnz
nop
nop
nop
nop
dec
mov
lds
adc
add
pop
mov
test
mov
dec
sar
and
and
or
add
cmpsl
cmp
xchg
jl
lea
dec
ljmp
xor
ja
shlb
adc
out
cmp
outsl
mov
adc
pushf
inc
jg
inc
ret
inc
pop
stos
mov
push
xchg
xchg
fisubrl
pop
mov
gs
sarb
mov
das
add
lahf
mov
push
mov
int3
int3
int3
int3
and
int3
int3
int3
int3
and
pop
mov
bound
cmpsl
int3
int3
int3
int3
int3
je
adc
jl
xchg
inc
and
sub
pusha
rorb
sti
rcrb
hlt
scas
sti
andb
scas
std
movd
or
fwait
xchg
mov
adc
insl
addb
ror
jmp
jl
int
gs
aas
xlat
pop
adc
ja
push
notl
je
fwait
aad
mov
mov
ss
xchg
add
mov
cli
or
ja
adcb
addr16
stos
subb
rorl
movsb
dec
mov
cmpsl
adc
mov
dec
add
ret
xchg
or
int3
int3
int3
in
fmull
jmp
jecxz
lods
and
jb
shlb
push
xor
add
push
xor
pop
push
repnz
aad
xchg
outsb
xor
fildll
popf
loope
movsb
mov
mov
cmp
mov
xchg
jo
dec
ljmp
sbb
cmp
add
repz
imul
pop
jbe
jo
sbb
repz
inc
popf
mov
jmp
push
icebp
sub
add
addl
jae
fsubrp
daa
and
rorl
jmp
add
int3
int3
int3
int3
mov
xlat
xchg
aam
jmp
cmp
lea
sub
and
dec
push
pop
xchg
cmc
dec
mov
fwait
dec
cmpsl
mov
pop
jae
hlt
sti
mov
or
fucomip
mov
adc
cmp
jg
jnp
cmpsb
sub
ficomps
adc
jnp
add
xor
out
movsl
lahf
xor
ss
icebp
shrb
xor
add
icebp
cmp
ss
and
daa
add
subl
push
popf
xchg
or
lods
pop
or
in
add
lret
outsb
xor
ja
push
je
cmpsb
inc
mov
lcall
sahf
enter
mulb
rcl
scas
insl
ss
jge
sbb
xor
jns
or
add
lea
jecxz
add
add
mov
or
int3
int3
int3
inc
and
adc
mov
and
mov
or
jns
push
mov
pop
insl
sti
icebp
call
and
shl
lahf
pop
cs
add
movsl
or
std
mov
imul
cmp
sbb
lahf
push
cmp
test
int3
int3
int3
int3
in
inc
test
js
sub
mov
lret
adc
ficoml
mov
add
jo
iret
or
or
fists
mov
xor
jns
nop
nop
nop
nop
pushf
sub
lods
add
jle
nop
nop
nop
nop
movsb
cmpsb
jmp
stc
movsl
inc
inc
jmp
fxch
je
xlat
mov
mov
jp
mov
add
scas
popa
popa
jne
and
lock
push
int3
int3
int3
int3
xchg
ret
testl
popa
push
insb
jno
xchg
mov
sbb
dec
and
xor
sub
and
jl
and
xchg
jo
movsb
decb
rclb
enter
daa
sbb
in
imul
dec
xchg
imul
mov
dec
jl
loop
lret
mov
bnd
inc
jg
pop
lock
mov
jmp
jp
scas
inc
ljmp
imul
jns
mov
dec
loopne
mov
sub
inc
inc
fsubrs
add
mov
adc
or
pop
loopne
fwait
mov
mov
add
cli
int3
int3
int3
int3
int3
out
call
enter
adcl
scas
mov
lods
sbb
movups
dec
xor
inc
pop
aas
fstl
mov
xor
or
in
jp
cmpb
icebp
adc
push
or
jns
gs
ror
fiadds
sahf
das
inc
notb
push
nop
nop
nop
nop
nop
jno
push
pop
add
jno
inc
dec
imul
int3
int3
int3
int3
int3
push
push
xchg
xchg
dec
sub
add
add
test
pushf
add
dec
fmull
push
daa
lods
inc
bound
xor
cmp
lcall
mov
add
push
jp
aaa
dec
stc
cwtl
or
orl
int3
int3
int3
int3
mov
adc
push
lret
push
movsl
les
add
pop
rcrb
mov
adc
scas
or
push
push
std
xchg
je
jmp
or
pop
lea
enter
pop
addr16
ret
sub
fildl
mov
lods
imul
add
call
shlb
imul
cli
cmpsl
mov
cmp
add
loopne
mov
add
mov
fidivs
js
push
xor
pop
out
mov
lret
fdivrs
push
ret
mov
jmp
int3
inc
inc
pop
push
int
scas
sbb
call
ljmp
nop
nop
nop
sbb
fldcw
mov
test
jo
movsl
aaa
mov
xchg
cmp
xchg
pop
int
sbb
add
xor
outsl
in
push
or
test
push
out
xchg
sub
sub
addr16
cld
dec
cmp
and
push
fstpl
imulb
int
mov
dec
adc
data16
mov
pop
mov
jbe
mov
in
ss
rorb
pop
lods
popf
jmp
push
lods
arpl
adc
sub
add
scas
bound
ds
mov
paddusw
xchg
mov
loope
ja
fcomi
pop
add
fiadds
mov
push
fisttps
pop
fistl
adc
fs
in
out
and
aad
scas
jp
and
popf
jae
shrb
in
sub
outsb
cmp
mov
call
cmc
ficompl
in
test
mov
movsb
fwait
push
das
dec
ficoms
xor
adc
add
push
mov
fcompl
cmp
and
ret
adc
in
loopne
xchg
sbb
mov
mov
sub
cmp
mov
cmpl
bndldx
cmc
xor
mov
test
jo
jns
inc
stc
adc
lods
repnz
adc
in
or
adcb
vmread
lret
movsb
cwtl
loope
ljmp
int3
int3
int3
outsb
xchg
fucom
insb
pop
xchg
add
add
pop
int
fsubr
in
mov
icebp
jns
adc
jge
mov
xchg
cmpsl
in
je
mov
insb
std
fucomip
cmp
call
mov
inc
mov
leave
push
filds
mov
test
je
push
mov
arpl
jnp
popa
aaa
aas
push
pusha
pop
out
stos
cmpsl
or
pusha
dec
xchg
fsub
jecxz
xchg
in
lods
xorl
ja
cmp
add
mov
mov
adc
xchg
test
inc
ret
bound
popf
daa
add
or
lods
cmpsl
add
dec
shll
scas
adc
push
lock
add
adcb
mov
hlt
je
lahf
fidivrl
pop
sbb
out
push
dec
stos
jecxz
clc
or
sbb
dec
adc
add
mov
sti
data16
sub
jle
xchg
xchg
sub
rcr
inc
popa
jno
xchg
fdivrl
sub
jge
cmp
in
dec
sarb
push
pushf
outsb
sarl
in
negb
sbb
scas
aad
dec
mov
test
jecxz
xor
ffreep
insertq
flds
cmp
sbb
xor
dec
clc
popf
jae
mov
int3
int3
int3
int3
out
ss
add
pop
jne
mov
int3
int3
int3
int3
int3
ljmp
xchg
gs
add
dec
arpl
push
dec
stos
aas
mov
or
add
call
adc
push
lea
add
bound
mov
push
pop
test
call
mov
cmp
pop
cmp
leave
pop
enter
push
lods
adc
and
insb
call
xor
and
rol
or
into
cwtl
faddl
cld
adc
adc
xchg
xchg
jg
mov
icebp
xchg
int3
int3
int3
int3
int3
ret
push
test
adc
sbb
lock
xor
lcall
cmp
inc
pushf
stos
mov
cld
jb
sti
fstps
pop
jnp
int
std
cs
adc
les
enter
xchg
jle
aas
jae
cmp
mov
or
bound
xchg
push
pop
and
xor
stos
push
xor
pop
inc
cmp
and
add
sub
add
xchg
sub
out
push
push
pop
mov
je
add
cld
cltd
stos
jecxz
push
lods
push
int
aam
add
imul
mov
popa
pop
aaa
and
fidivs
int3
int3
outsl
pop
fisttpll
mov
jl
iret
mov
sub
int3
jno
cld
push
jle
or
mov
adc
lret
lock
inc
xor
mov
lret
ss
cmp
cmpsb
pop
mov
fsubs
rolb
scas
ret
jns
mov
aad
sbb
xchg
test
aas
popa
add
in
pop
sahf
push
add
aas
loopne
lret
add
or
add
mov
gs
inc
push
xchg
pop
mov
fwait
inc
aad
data16
or
out
xor
xchg
add
sahf
bswap
int3
int3
int3
int3
inc
outsb
enter
std
xor
mov
jbe
pop
pop
mov
push
icebp
insl
mov
mov
mov
fcoml
add
stc
push
gs
push
jne
cmp
mov
mov
add
insl
pop
mov
mov
cwtl
in
sub
int3
int3
int3
int3
pop
jae
ret
xchg
push
adc
add
xor
pop
ljmp
and
add
jo
mov
cwtl
push
push
mov
stos
xchg
repz
mov
pop
arpl
or
out
and
mov
jmp
sbb
or
jnp
jg
inc
jb
jo
add
clc
inc
mov
insb
aas
pop
push
mov
iret
cmp
pusha
shl
lods
push
pop
dec
imul
mov
out
icebp
fistl
mov
int
cmp
dec
sbb
mov
outsl
mov
add
sub
sbb
mov
nop
nop
ret
xor
out
out
les
test
sub
repz
and
jns
inc
jg
in
inc
mov
mov
xor
mov
xor
fdivs
mov
icebp
sub
jl
cld
hlt
hlt
cmp
aam
push
pusha
and
add
xchg
in
in
fisubl
popa
daa
into
das
nop
nop
nop
nop
nop
jl
mov
xchg
sub
dec
jbe
call
mov
cmpb
lcall
iret
jne
cwtl
js
add
fcoml
movsb
insl
jnp
aam
sahf
mov
xor
orb
outsl
scas
insl
pop
pop
in
divl
shlb
arpl
lret
add
jnp
dec
pop
add
in
lret
ficompl
dec
sub
sbb
add
in
ja
add
lret
and
ficoml
mov
test
inc
or
ds
push
push
and
sbb
in
inc
jge
xor
jecxz
mov
add
dec
mov
pop
out
adc
jo
adc
lock
and
lods
orl
and
and
push
adc
sbb
pop
push
sbb
jle
imul
loope
xchg
add
aam
mov
or
sbb
out
jg
xor
adc
cmpsb
popa
xchg
jge,pn
dec
enter
mov
and
test
dec
sub
fwait
inc
jb
push
bound
gs
cmp
js
jbe
sahf
sahf
jae
mov
jcxz
xchg
xchg
push
xor
add
stos
add
xchg
sti
xor
xor
add
jne
inc
cmp
add
outsl
arpl
sub
sbb
sbb
cmp
loope
mov
aas
inc
xor
adc
or
jle
adc
rolb
jne
out
test
or
jns
lds
push
iret
xor
xor
or
mov
mov
je
sub
lods
and
push
mov
das
mov
push
ja
insb
call
inc
jge
cli
or
nop
nop
nop
nop
nop
fstpl
int
int
jno
bound
xchg
movsl
rol
mov
ds
jp
pop
push
xor
dec
xchg
enter
shll
adc
outsb
cmp
scas
fisttps
adc
cltd
dec
mov
cmc
sar
outsl
cwtl
lea
jno
mov
outsb
xchg
js
mov
aad
lea
and
sub
nop
add
js
mov
lea
out
arpl
test
push
inc
dec
add
int
int
frstor
add
enter
push
mov
push
rorb
xor
pop
cmp
cmp
mov
or
lock
vmovddup
mov
add
add
in
fistpl
or
call
dec
xchg
fnstenv
sub
xchg
xor
fsubrp
clc
lods
mov
jle
mov
mov
movsb
jge
and
jl
into
pop
or
dec
jmp
lds
inc
mov
loope
lahf
jnp
pop
mov
sub
inc
push
pushw
cmp
jmp
addl
int3
int3
pop
outsl
fcomp
xchg
shrl
das
mov
dec
lods
sub
inc
and
adc
data16
std
adc
jl
sahf
leave
mov
sbb
cmp
into
loop
push
rolb
rcrl
add
test
add
das
pop
or
outsb
repnz
sub
add
cmp
pop
lock
xchg
xchg
int3
int3
int3
int3
int3
in
movsb
mov
adc
rol
pop
popa
testb
popa
mov
addb
inc
or
pop
xor
sbb
mov
jno
bound
imul
mov
andl
add
xor
inc
sub
mov
addr16
pop
mov
add
js
movb
push
mov
out
adc
inc
in
enter
push
cmp
cmp
add
xlat
fwait
push
outsb
js
mov
cld
les
sbb
and
ret
push
cmp
mov
adc
dec
sub
popf
dec
not
inc
flds
cli
jbe
ljmp
punpckhwd
jno
ljmp
mov
aas
divb
and
std
neg
movsl
sub
jp
inc
xor
adc
adcb
jg
xchg
jne
ror
mov
pop
lods
loopne
movsb
ss
jmp
shrb
pop
test
pop
jne
pop
out
and
pop
jmp
xor
sbb
jle
into
or
inc
shrb
push
jb
pop
mov
dec
in
mov
rcl
xorl
add
cli
mov
mov
push
pop
mov
les
inc
in
mov
addr16
inc
cmc
mull
aad
adc
in
gs
das
jp
jg
mov
pop
lods
lds
js
pop
jge
adc
cmpl
sahf
movsl
movsl
pop
enter
add
xchg
cmp
shll
dec
and
nop
nop
nop
nop
nop
xlat
rcll
sbb
add
test
ret
cmp
sbb
sub
and
pop
nop
nop
nop
nop
nop
scas
push
or
push
test
push
out
dec
int3
int3
int3
int3
int3
rolb
out
dec
jp
add
xchg
xchg
outsl
push
sbb
in
in
fstps
out
push
inc
std
adc
outsl
pop
sub
mov
cmpsb
cwtl
dec
mov
sahf
push
dec
jp
mov
pop
mov
or
or
mov
inc
clc
adc
fdivrl
dec
jmp
ja
inc
pop
jae
test
std
push
ret
inc
das
aas
icebp
xor
push
popf
cld
jns
lret
adc
lret
aam
scas
sbb
sub
add
lcall
add
add
add
sub
sbb
add
int3
int3
int3
int3
and
into
fnstsw
test
jge
mov
inc
adc
bound
iret
jp
movsl
testb
lcall
cmp
add
cwtl
xor
lret
cmp
cmp
mov
into
rol
add
dec
loop
jbe
out
jbe
pop
rep
and
jp
sub
stc
sbb
sbb
adc
jnp
movb
lds
lock
or
xchg
cmpsb
push
dec
adc
jle
lock
inc
test
add
jno
movsl
inc
insl
cwtl
inc
xchg
fucomi
and
sbb
xchg
ret
mov
nop
nop
nop
nop
nop
xor
orb
and
inc
adc
les
ja
mov
shr
inc
gs
movsl
minps
xor
lret
and
mov
cmp
jg
and
add
adc
int
or
rcl
data16
int
scas
ljmp
in
jl
sub
push
outsl
cmp
sahf
push
jae
cmpsl
jge
shrl
pushf
cld
mov
shl
and
mov
mov
adc
inc
ss
mov
out
in
sbb
adc
jmp
pop
xchg
sbb
nop
nop
nop
nop
and
in
push
jl
jno
inc
lds
scas
cmp
icebp
aas
sub
stos
lods
mov
dec
sti
dec
lcall
ljmp
add
sbb
and
int3
int3
int3
int3
jge
xchg
mov
test
filds
popl
mov
lods
sub
add
mov
fwait
test
in
lcall
jl
cmp
xchg
mov
cld
frstor
jecxz
sbb
xchg
repz
pop
dec
jbe
cmpsb
adc
inc
movsb
xchg
sub
cmpsl
pop
ss
imul
cmp
or
aam
push
scas
test
xchg
mov
pusha
cmpsl
ret
inc
pop
push
and
add
pop
outsb
cltd
dec
sub
and
cltd
fsubl
adc
or
pop
sti
sbb
mov
js
cwtl
ret
lods
into
xor
ds
sbb
cmp
add
push
dec
inc
js
push
add
push
dec
std
imul
sub
ret
xor
es
mov
insb
jecxz
inc
aas
sbb
in
dec
popf
mov
shlb
inc
adc
mov
or
loop
in
add
dec
repnz
nop
nop
nop
nop
aaa
das
sub
addr16
and
movsl
add
push
or
add
add
push
sbb
push
xchg
movsb
mov
outsl
stos
pop
xor
arpl
out
xchg
xor
movsb
jns
mov
jmp
pop
or
nop
nop
nop
jp
fsubs
loop
in
iret
or
add
push
lds
repnz
or
cli
and
ffree
or
xchg
mov
dec
add
fnstcw
cmp
add
xchg
pushf
push
jmp
fisubrs
push
cmpsl
andl
sbbl
rorl
xor
test
sub
jne
jmp
adc
cmpb
gs
arpl
cli
rcr
repz
cwtl
popa
and
call
inc
inc
mov
xchg
or
add
add
dec
xchg
mov
xchg
mov
jno
dec
sub
loope
out
mov
push
xchg
mov
fsubl
sbb
add
jo
rolb
test
nop
nop
nop
nop
nop
leave
into
add
mov
xchg
cmc
and
mov
jg
loop
xor
xlat
lock
cmp
dec
add
add
jnp
insb
cs
int3
int3
int3
int3
int3
sbb
adc
cli
adc
int3
int3
int3
cmp
gs
les
int3
int3
int3
int3
int3
cmpl
dec
pop
push
jmp
in
mov
sub
inc
into
jo
pop
adc
pop
inc
aas
jle
rolb
push
fisubrs
cmp
add
mov
mov
js
out
jp
sbb
jp
inc
clc
ret
ja
mov
std
ljmp
rorb
and
test
inc
pop
cltd
add
rclb
test
stos
lods
ds
push
sub
jmp
outsl
mov
js
jne
and
mov
addl
push
enter
jge
inc
pop
call
pushf
arpl
mov
aam
imul
jns
loopne
push
test
pusha
xor
sbb
rcrl
mov
mov
jne
shlb
cltd
mov
xor
lea
cld
adc
mov
jmp
sub
sbb
and
inc
sti
mov
leave
iret
in
jns,pt
jb
add
adc
add
xor
sbb
dec
test
mov
cmpsb
je
mov
and
loope
loope
mov
sbb
adcl
fcmovnbe
icebp
push
push
or
lods
or
and
mov
jno
dec
bnd
pop
flds
mov
and
mov
notb
into
jb
adc
into
xchg
in
cs
push
add
loopne
stos
repnz
push
add
ret
adc
or
add
int3
int3
int3
int3
int3
push
and
lea
icebp
scas
inc
sub
mov
add
cld
mov
and
lods
inc
jl
jge
je
lcall
or
add
xchg
adc
mov
std
jmp
inc
pushf
bswap
sub
sub
rorb
or
sub
repnz
cli
mov
sub
add
cli
mov
mov
pop
iret
adc
mov
xlat
or
js
sbb
mov
cmpb
cmp
stos
dec
js
adc
iret
jae
or
mov
cmp
and
sub
and
scas
jge
jge
xor
fnstcw
cmp
xor
popf
mov
icebp
mov
sbbl
pop
das
and
out
push
icebp
sahf
fucomp
cli
or
dec
rolb
sbb
add
fiaddl
mov
xor
jno
pop
fs
xchg
addr16
ret
sbb
addr16
and
xchg
enter
scas
aam
sbb
lods
leave
sbb
sub
ror
int3
int3
int3
dec
hlt
xchg
jmp
push
inc
hlt
sub
imul
add
adcb
out
push
cmp
mov
xlat
add
add
aas
lahf
pop
pop
dec
inc
lret
ret
aam
lea
fimuls
push
sub
or
movb
cs
push
xchg
outsl
daa
and
loope
test
mov
add
or
test
scas
loopne
popa
push
add
mov
leave
loopne
insl
hlt
aas
sub
dec
pushf
loopne
push
lea
push
add
inc
mov
mov
ret
pop
add
pop
inc
aaa
dec
xchg
test
dec
mov
adc
call
xor
aas
and
fcomp
mov
fcom
xchg
ds
sub
insl
call
add
ja
dec
jbe
cmp
movups
nop
nop
nop
nop
nop
jb
ds
mov
sbb
aas
add
aam
mov
mov
add
loop
or
data16
das
lret
add
push
add
lods
stos
dec
xor
cmp
mov
ljmp
add
sbb
ja
aaa
pop
mov
sahf
add
jecxz
sbb
leave
xor
push
pop
add
or
cmc
arpl
mov
test
loopne
dec
icebp
mov
in
int3
int3
int3
int3
mov
nop
nop
nop
nop
nop
jnp
fidivrl
jge
out
cmp
sbb
popa
int
int3
int3
int3
int3
int3
imul
mov
rclb
loop
add
test
xor
cs
mov
outsl
adc
movsl
xorb
inc
shl
dec
es
sub
push
stc
lock
adc
aaa
push
dec
adc
outsl
mov
fisubs
jne
mov
inc
add
jge
push
stos
into
insl
data16
out
fimull
push
cli
dec
int3
int3
int3
int3
int3
inc
xor
mov
lods
lds
cmc
fimuls
ret
test
add
clc
push
mov
aas
add
sub
int3
lock
mov
mov
inc
aaa
out
fs
fs
xchg
mov
mov
cmpsb
aam
jecxz
xor
fs
cmp
add
push
scas
sub
mov
fs
xor
push
scas
insb
imul
pop
lahf
add
jae
xchg
cltd
fsubrl
push
jbe
mov
jecxz
inc
std
adc
mov
dec
adc
in
rcl
push
adc
push
cmp
loop
mov
mov
push
popf
adc
int3
int3
int3
int3
int3
pop
test
inc
jg
lea
mov
or
adc
adc
gs
mov
sti
adcl
xchg
imul
and
subl
lcall
stc
nop
nop
nop
nop
nop
xchg
daa
data16
adc
loopne
jp
nop
nop
nop
nop
nop
inc
shlb
loope
dec
insb
fsubp
movsl
or
push
mov
jge
dec
mov
adc
inc
pop
inc
addr16
inc
inc
arpl
or
rcrb
loop
and
pop
cwtl
es
fs
xchg
jmp
mov
sub
jle
push
push
pusha
and
sub
je
mov
data16
lcall
sbb
ljmp
and
iretw
push
lret
mov
dec
and
pop
fsubrs
mov
aas
jnp
out
cmp
xchg
sub
add
inc
cwtl
pop
mov
test
nop
nop
nop
nop
adcl
lahf
shll
push
ret
popa
push
and
js
cs
insb
sbb
fdivs
es
dec
das
shlb
les
je
push
cltd
mov
mov
repnz
hlt
pop
arpl
ds
shr
jae
dec
xchg
inc
test
mov
mov
mov
mov
jno
jp
mov
add
xor
xchg
push
add
inc
rcr
push
mov
pushf
into
dec
xor
aad
scas
dec
fidivrs
xchg
xchg
sbb
scas
test
pop
push
repnz
xor
dec
cli
fs
popa
lret
mov
mov
mov
and
andl
fimull
add
push
jns
gs
add
xchg
aad
mov
xor
dec
sbb
xor
sub
add
mov
movsb
bound
xchg
mov
xchg
push
add
xchg
gs
jo
xchg
mov
add
lret
out
sub
icebp
add
push
or
std
cmp
jno
mov
scas
push
sbb
dec
inc
jle
sub
push
push
mov
jo
idivl
pop
fidivrs
sbb
leave
jne
and
jp
test
dec
fs
in
sbb
sub
out
sub
inc
outsb
mov
addr16
push
pop
jmp
push
repz
in
jb
stos
sti
out
pop
mov
int3
int3
int3
int3
int3
and
lds
adc
int3
dec
stos
je
bswap
aaa
fisttps
jmp
push
loop
sbb
adc
int
mov
lock
adc
shll
xchg
sub
xchg
jl
and
int3
int3
int3
int3
push
xchg
out
arpl
nop
nop
nop
nop
nop
lds
stos
mov
test
call
xor
popf
xchg
ja
xlat
ds
in
lods
dec
push
mov
jge
pop
sub
jecxz
cmpsb
push
inc
mov
and
mov
ja
jl
in
add
out
outsb
adc
sbb
dec
add
dec
sti
incb
cmp
adc
cmpsl
icebp
imul
add
xlat
fisubrs
jno
imul
bound
add
out
lcall
jo
lods
jns
mov
inc
xor
and
lret
ret
insb
loop
pop
lods
xor
clc
stos
mov
jg
xchg
mov
in
lret
sbb
mov
adc
mov
dec
repnz
push
jnp
lret
xchg
lret
outsl
pop
push
ja
inc
cmp
add
push
lea
or
sub
xor
jne
mov
jo
rcrb
adc
add
and
jne
loop
js
xchg
xchg
mov
ljmp
jp
adc
inc
fdivrl
push
inc
fdivs
inc
scas
mov
pop
xor
scas
leave
add
loopne
mov
xlat
aas
fstpl
sbb
sbb
fsts
mov
adc
pop
loope
or
sub
pop
scas
xor
call
movsb
mov
call
and
notl
or
add
sbb
aad
pop
and
xchg
adc
test
jg
sbb
jle
imul
movsl
aam
mov
push
test
adc
mov
add
pop
call
sbb
adc
dec
add
mov
outsl
lods
stos
cld
pop
sub
mov
mov
add
repnz
jl
inc
dec
int
sub
push
addl
xchg
js
jg
inc
mov
jbe
fmuls
add
dec
jae
std
dec
pop
aam
jl
ds
xchg
sub
addr16
mov
xchg
add
sbb
lret
int3
int3
int3
int3
int3
mov
xchg
nop
nop
nop
nop
nop
rcrl
pop
mov
or
pusha
adc
fisubl
insb
add
dec
jb
std
pop
inc
jb
push
mov
data16
fsts
fnstcw
dec
pop
xor
mov
daa
mov
lea
scas
mov
push
adcl
frstor
out
ficoms
int
xchg
repnz
dec
fwait
test
scas
push
fiadds
shll
iret
arpl
sbbb
mov
test
sbb
add
xlat
stos
lea
xor
sub
add
mov
mov
add
imul
inc
adc
add
mov
sbb
xor
adc
ss
jo
pop
repnz
xor
int3
int3
int3
int3
int3
in
xchg
push
xchg
add
mov
sub
cmc
popf
jle,pn
leave
lods
xor
psubusw
sub
dec
or
add
ds
push
subb
ja
and
sbb
jno
pop
aas
shrb
daa
rcrb
in
test
lret
in
repnz
call
sub
cld
call
mov
jae
rol
or
add
int3
int3
int3
int3
int3
inc
pop
rorb
cli
mov
rcll
ja
stc
out
stos
jg
mov
mov
in
adc
pop
jb
mov
inc
ret
lcall
pop
iret
out
imul
nop
nop
nop
jle
push
mov
xchg
aas
mov
jl
mov
and
adc
mov
inc
fisubs
std
adc
and
fadds
out
mov
repnz
push
push
mov
xor
fwait
sbbb
loopnew
pand
inc
push
mov
aas
cmpsb
add
xlat
pop
add
les
pop
dec
cwtl
cmp
add
call
mov
fadds
adc
testb
add
dec
jo
iret
stos
push
jmp
addb
int3
cmp
int
xadd
into
adc
lock
pop
jns
cmp
in
jmp
fisttpl
cmp
mov
test
pop
and
add
xchg
dec
addl
int
inc
jbe
icebp
rcr
mov
or
xor
push
nop
nop
nop
nop
nop
fdivs
nop
nop
nop
nop
nop
insl
xlat
push
mov
lret
adc
lock
out
dec
mov
sbb
add
mov
lea
ds
pop
outsb
jnp
pop
xchg
add
jl
out
hlt
mov
insb
in
mov
cmp
push
xchg
fidivrs
sub
les
dec
sub
xchg
ret
imul
cmpsl
cmp
sar
sub
pop
pop
add
dec
nop
nop
nop
nop
nop
or
cmp
cwtl
xlat
xchg
test
dec
outsb
dec
rclb
movsb
mov
lret
mov
cmpsl
out
ljmp
cmp
test
enter
dec
in
dec
mov
shrl
out
xor
sar
and
xchg
mov
pop
adcb
dec
rclb
mov
insb
xor
cmpsl
push
in
or
leave
out
mov
les
lret
inc
sub
or
dec
mov
pop
std
aad
pop
cwtl
out
push
mov
sbb
add
jp
sbbl
cmp
mov
dec
rcrl
pop
and
lock
mov
and
cmp
add
sub
repz
mov
in
pop
bound
inc
scas
mov
inc
adc
mov
sub
push
push
mov
cmpsb
fwait
push
mov
xchg
inc
sahf
cli
jmp
nop
aas
imul
out
dec
add
add
fcmovne
and
push
sbb
add
pop
add
fwait
push
inc
insb
fadd
fnstenv
dec
xor
or
scas
sbb
xor
jp
dec
cld
insb
mov
cmp
cltd
mov
pop
dec
push
fisubl
fbld
jecxz
ss
sub
mov
add
add
xor
add
mov
mov
int
loope
stos
fwait
aam
push
scas
or
inc
inc
xchg
lds
cmp
mov
cmp
push
mov
mov
push
enter
pop
dec
inc
icebp
inc
out
inc
addr16
add
mov
cs
lea
pushf
jge
dec
shl
inc
je
jnp
mov
push
pusha
or
xor
push
jge
std
lret
sbb
ss
movq
loopne
mov
cmp
mov
addr16
inc
xchg
dec
mov
orb
rorl
push
lret
addr16
and
scas
std
nop
nop
nop
nop
nop
inc
or
push
mov
inc
pxor
sub
insl
out
xchg
and
mov
mov
push
je
lods
dec
jno
push
ret
add
rorb
mov
notb
mov
xchg
xor
and
mov
pop
inc
je
jg
xchg
fs
mov
outsl
aas
mov
out
testb
sub
fbld
jns
aam
aad
add
repz
test
xchg
push
add
lods
rorb
sub
push
jmp
and
xchg
push
loopne
pop
or
iret
leave
ds
xchg
loopne
pop
pop
xchg
jmp
popf
lret
inc
daa
sbbb
shrl
add
in
lods
push
clc
jb
es
add
negl
out
push
cld
out
dec
adc
ret
jns
enter
and
repnz
push
mov
mov
ja
jp
inc
jl
and
shrl
movsb
xchg
push
fildl
outsl
push
call
sbb
pop
adc
pop
jnp
xchg
pop
orl
pusha
or
jmp
std
fiadds
hlt
insl
scas
ret
push
xchg
je
shrb
add
adc
in
adc
dec
push
xchg
mov
cmc
add
in
shlb
imul
jp
sti
dec
shlb
pop
cli
ja
sbb
xchg
dec
pop
adc
pop
sub
push
pop
jmp
pop
aas
add
idivb
movsb
ss
xchg
dec
dec
cmp
cmp
lret
sbb
vmovaps
push
fidivs
mov
int3
int3
int3
int3
mov
adc
test
int3
int3
int3
mov
push
sbb
cli
or
je
jb
clc
sbb
aaa
jmp
sub
push
das
dec
arpl
shlb
push
mov
pop
mov
shrb
cli
ss
xor
xchg
mov
pop
add
movsl
ret
fildll
das
lea
pop
sub
cmp
inc
lcall
cltd
inc
cs
jp
sub
int3
int3
int3
int3
int3
sbb
fldt
sti
xor
and
jo
push
loopne
xchg
cld
push
mov
sahf
pop
pop
pop
inc
pop
cltd
push
xor
pop
xchg
push
cli
inc
mov
lret
lds
and
add
fs
mov
ret
pusha
jae
idivb
stc
push
and
pop
test
pop
cmp
add
jg
arpl
inc
outsb
mov
push
je
jg
icebp
adc
outsl
int
xchg
or
mov
mov
mov
inc
sub
push
fwait
jnp
jge
pop
inc
jb
fiaddl
js
iret
insb
inc
adc
jle
push
sub
arpl
jae
das
pop
mov
xchg
lret
xor
js
fldl
xlat
adc
adc
fcompl
lods
cmpsb
popf
add
xchg
pop
add
mov
int3
int3
ror
int3
int3
int3
int3
cmp
out
xchg
cmp
dec
xchg
inc
clc
sub
mov
sbb
or
add
adc
xor
add
or
pop
lret
push
lahf
push
jno
sbb
in
cmp
fxch
ss
fnstcw
dec
jle
sub
adc
js
dec
idiv
push
jge
call
shl
or
inc
arpl
pushf
daa
push
cmp
jle
cmp
xchg
push
inc
push
push
sahf
lret
mov
adc
or
fdivrl
dec
rorb
cmp
add
sbb
das
outsl
and
mov
movsl
cmp
dec
das
xchg
pop
sbb
add
cmpsb
sub
and
lods
cmp
add
pop
bound
sti
push
dec
pop
push
imul
imul
sub
repz
jecxz
cmp
sbb
dec
push
mov
repz
jmp
loopne
mov
add
insl
popf
mov
dec
aam
in
or
mov
jecxz
in
mov
mov
cmpsl
daa
jp
jae
loopne
adc
fisttps
or
leave
shl
cltd
push
jns
lods
lods
cmp
repz
rcrb
push
push
cmp
mov
jp
movsl
fsts
test
cmp
data16
cs
enter
ret
xor
mov
mov
rorl
pop
imul
pop
lods
mov
mov
in
test
out
leave
mov
aaa
popf
aas
int3
int3
int3
int3
int3
dec
bound
ret
scas
jb
orb
test
mov
lret
xchg
jmp
insl
jmp
adc
adc
insl
push
mov
and
jno
xchg
and
mov
jne
sbb
xchg
cmpsl
sbb
mov
jmp
xor
es
mov
mov
rcr
push
imull
stos
cmp
add
out
rep
iret
dec
pop
jnp
in
jle
push
add
inc
push
add
dec
pop
mov
loope
test
rorl
into
insl
add
add
xor
adc
sbb
out
and
je
push
add
push
es
mov
add
mov
push
mov
xchg
pushf
xor
xor
lret
jb
cwtl
push
or
int3
int3
push
push
aas
mov
mov
test
jge
mov
dec
push
jg
fstp
cmp
dec
and
rcrb
int3
int3
nop
nop
nop
nop
nop
push
je
cmc
mov
rcrb
clc
scas
addb
xor
cmp
push
sbb
loop
pop
mov
lods
js
hlt
push
imul
sbb
imul
inc
lret
stos
mov
cmpb
mov
and
jns
mulb
popl
push
mov
or
add
insb
inc
sti
hlt
bts
sahf
into
popl
ficoml
sbb
mov
out
jge
icebp
mov
mov
jl
add
ss
cld
roll
add
jmp
cmp
inc
cmp
popa
xor
push
shlb
repnz
andb
add
out
jmp
dec
inc
xor
add
pop
imul
xlat
xchg
push
jbe
and
nop
nop
nop
ja
addr16
sbb
pop
dec
add
in
lahf
call
cmp
js
arpl
xchg
fsub
cmp
sbb
fcomip
pop
inc
xchg
lahf
mov
push
xorb
jne
or
repz
add
bound
scas
dec
pop
and
mov
or
pusha
adc
cli
outsl
ss
clc
push
sub
xchg
mov
jb
fstpl
mov
scas
xorl
add
loopne
test
adc
or
insl
mov
scas
xchg
in
mov
js
xchg
mov
jge
nop
nop
nop
nop
nop
clc
sub
mov
pop
out
pop
xor
pop
mov
sbb
ret
das
fisttpll
mov
xor
dec
or
imul
in
jl
andl
les
dec
icebp
movq
jb
test
mov
cmc
add
lods
sub
xchg
xor
jecxz
mov
mov
push
mov
cwtl
icebp
mov
adc
test
movsb
fmul
int3
int3
int3
int3
xor
dec
out
cmp
in
fimuls
and
mov
add
jg
push
mov
loop
scas
pop
jle
and
xchg
sub
paddsw
ja
sbb
sti
test
aas
cmp
xchg
xorl
xor
push
cs
es
sbb
add
lods
iret
lahf
cmp
pop
sub
aaa
movsl
dec
xchg
fstpl
dec
and
sbb
hlt
das
mov
sub
add
or
fistps
sub
les
inc
stc
cmc
xlat
xorb
xchg
les
lret
push
push
mov
and
arpl
out
adc
rorb
int3
mov
sbb
loope
rcr
ds
mov
cld
add
inc
or
call
sbb
dec
loopne
subb
xor
and
jnp
jns
scas
jle
cmp
test
and
push
sub
add
movsl
push
adc
xor
jbe
stos
cmp
adc
pushf
mov
es
repnz
sub
jle
les
pop
sub
mov
ljmp
add
adc
dec
hlt
sub
and
pop
inc
rcrl
loop
pop
dec
mov
das
jecxz
push
cli
pop
test
or
imul
lret
sub
je
jge
adc
out
mov
pop
mov
xor
inc
add
sbb
cmpsb
aas
ss
ja
sbb
out
es
mov
ds
mov
jle
nop
nop
nop
nop
sub
sbb
lods
enter
enter
and
test
insb
or
out
js
push
and
ljmp
mov
push
push
xor
cmp
dec
mov
call
outsl
pushf
jb
das
fildl
nop
nop
mov
jl
std
or
insl
jle
sbb
add
out
cmp
sahf
repz
add
lahf
aaa
mov
adc
hlt
repnz
add
popf
rclb
adc
sbb
and
pop
pop
loop
and
arpl
repz
dec
fwait
js
and
les
add
and
out
add
jl
push
adc
add
loope
and
mov
dec
insb
into
sbb
outsb
pushf
rcrl
cmpsb
pop
mov
rcll
cmpsb
test
in
or
movsl
jg
mov
pop
ja
loopne
jmp
add
loop
sbb
test
mov
xor
xor
mov
pop
bound
jbe
sub
sarl
lcall
cmpsb
call
lods
jbe
mov
push
jmp
call
insl
pop
mov
mov
pop
mov
mov
lret
lea
cwtl
dec
mov
add
es
sbb
mov
sbb
js
mov
sbbb
dec
xlat
xchg
std
or
out
xor
mov
sbb
push
clc
push
lds
xor
or
stc
ss
sbb
das
sbb
nop
nop
nop
nop
nop
imul
adc
pop
cld
jno
xchg
ss
icebp
jl
and
clc
fwait
imul
hlt
or
sbb
inc
out
mov
int
test
adc
or
test
das
dec
shrl
ds
add
xchg
sub
mov
hlt
rorl
add
leave
push
pop
lds
aaa
add
add
xchg
jnp
sarb
add
ret
pop
stos
ja
adcl
shl
dec
call
adc
iret
and
sbb
jae
subb
fidivrl
std
shr
repnz
dec
add
outsl
mov
outsb
daa
sub
push
pop
inc
cmp
ret
mov
imul
movsl
mov
stc
mov
cmp
mov
push
mov
xor
outsl
dec
xlat
lcall
sub
sbb
adc
add
int3
int3
int3
int3
push
pop
sub
pop
jne
jne
idivb
mov
loopne
adc
int3
int3
int3
push
dec
movsb
movsb
ds
sahf
stos
mov
push
push
or
pop
sbb
sub
in
maskmovq
idivl
cmpsl
movsb
adc
inc
mov
pop
loope
mov
and
xorl
sbb
push
fsubrs
fildll
movsl
cmp
icebp
andl
popf
inc
lods
shlb
sub
hlt
dec
aad
pop
negb
cmp
push
inc
scas
andl
mov
test
jge
dec
call
out
jns
mov
or
adc
and
push
sub
stc
inc
int3
int3
int3
int3
int3
test
mov
fwait
jl
mov
les
outsb
cmc
mov
daa
stos
dec
mov
add
pop
sub
mov
inc
jne
lahf
dec
sbb
rclb
xor
popw
in
es
jg
hlt
xchg
mov
add
cmc
xchg
es
outsb
leave
icebp
or
dec
xchg
mov
lods
sub
push
arpl
and
xchg
xchg
xlat
ret
pop
leave
pop
aam
frstor
fbld
ret
adc
pop
in
incb
jge
lret
pop
mov
lcall
mov
inc
xchg
add
hlt
nop
nop
nop
nop
nop
dec
in
inc
pop
enter
pop
inc
jl
push
int3
int3
int3
int3
int3
rclb
leave
aas
push
dec
jmp
rcll
nop
nop
nop
nop
stos
test
ret
mov
test
out
xchg
jns
push
fwait
xor
mov
ss
and
mov
sbb
pop
mov
jns
push
lods
cmc
lcall
sub
add
xchg
popa
std
cmp
xchg
mov
dec
fimuls
cs
movsl
and
add
adc
insb
pushf
lret
mov
push
or
add
test
popf
mov
ja
in
stos
mov
stc
jnp
shll
xor
nop
nop
nop
xchg
fimull
les
adcb
pop
jo
test
insl
pop
ret
shll
ljmp
mov
push
rcrb
stc
and
dec
mov
fidivrl
outsl
adc
xchg
jo
xchg
es
stos
add
add
outsb
xor
mov
ljmp
add
jp
sbb
add
pop
ret
pop
mov
test
nop
nop
or
push
mov
loopne
mov
and
hlt
clc
rclb
int
xchg
in
jae
mov
jb
mulb
and
cmpsb
xlat
inc
out
adc
sub
daa
testb
jno
call
insb
inc
push
mov
clc
mov
imul
add
ficoml
mov
repz
popf
mov
dec
mov
test
inc
das
add
dec
xchg
aam
cmpsb
jb
mov
popa
or
icebp
sbb
pop
pushf
inc
jb
push
out
gs
or
jae
jns,pt
popa
dec
test
sbb
push
pusha
sbb
stos
rol
scas
jge
cmp
adc
push
movsb
fdivl
mov
lods
sub
or
test
jmp
mov
test
outsl
push
add
addr16
mov
pop
jl
hlt
fwait
or
lret
sahf
mov
lcall
push
cmpsb
shlb
cmpsb
xor
add
scas
enter
dec
mov
sbb
xor
pop
inc
pop
adc
mov
jl
mov
cmp
je
sbb
fwait
push
shl
xchg
dec
pop
rorb
rcl
jmp
add
clc
cs
andl
sahf
pop
dec
mov
sub
and
pop
enter
xor
xchg
dec
ja
pop
aaa
pop
jno
scas
movsl
shl
mov
mov
mov
sub
fdivrl
mov
adc
jge
jecxz
dec
out
aaa
pop
lcall
aam
mov
xchg
and
xchg
popf
and
or
aas
jae
pop
es
inc
shr
aaa
jno
jns
daa
rorl
sub
and
lods
adc
loop
int
loop
jb
popa
or
add
popa
xchg
es
and
pop
inc
pop
mov
sahf
push
cli
movsl
pop
mov
int3
int3
int3
int3
pop
mov
push
ss
mov
nop
nop
dec
xor
or
dec
inc
dec
cmpsl
testb
jmp
cltd
movsb
adc
in
xor
jecxz
pop
xor
sub
xor
sbb
daa
das
fidivs
dec
aas
add
sbb
inc
inc
jns
stc
adc
and
add
in
insb
sti
dec
fs
mov
lock
sahf
sub
mov
fidivl
sbb
or
xor
lret
daa
gs
jae
shr
xchg
push
lods
or
lahf
ss
ficomps
jno
arpl
mov
inc
and
repnz
enter
sahf
jge
mov
pop
pop
clc
mov
xchg
and
test
in
mov
pop
or
mov
mov
xchg
ja
sub
adc
xchg
int
mov
pop
test
ret
mov
push
pop
insb
sbb
mov
scas
adc
andl
int3
int3
push
jmp
cli
xchg
fcoms
into
imul
lret
and
jmp
nop
nop
nop
xorl
jno
dec
fwait
pop
inc
sub
mov
scas
movsb
mov
lcall
jg
fs
and
loopne
sbb
or
dec
cmp
add
push
add
mov
add
mov
jno
mov
xchg
gs
aam
outsl
dec
enter
pop
frstor
in
test
test
sub
push
xor
xor
xor
sbb
lock
cmp
add
mov
sbb
and
sub
insl
xor
shlb
bound
dec
notl
sar
rol
xchg
sarl
jne
jne
mov
sub
adc
pop
xor
fadds
dec
inc
xor
popa
pop
int
lea
outsl
mov
sbb
and
pop
add
sub
adc
pop
dec
das
jmp
fsubl
mov
pop
mov
pusha
ret
aad
mov
call
mov
push
jo
into
mov
das
xchg
mov
ljmp
jo
dec
mov
dec
sbb
jmp
inc
test
jl
arpl
fidivrl
pop
xor
bound
stos
adcl
jg
inc
cmp
push
xor
sub
add
icebp
mov
xor
shll
sbb
mov
mov
jae
adc
mov
jl
add
mov
fs
fdivr
idivb
cmpsl
in
adc
cs
enter
pop
sbb
lahf
sub
movsb
jp
daa
fidivs
adc
jne
ss
jle
pop
outsl
in
sbb
sub
add
idivl
pop
lods
das
int3
int3
int3
int3
int3
sbb
adc
icebp
in
fdiv
clc
xor
mov
movsb
add
or
nop
jns
xor
dec
xchg
xor
out
repnz
notl
scas
enter
cmp
in
clc
adc
add
adc
enter
ljmp
jmp
mov
sti
inc
push
xchg
sbb
jae
arpl
jl
or
mov
aas
push
cmp
cmpsb
pusha
or
add
push
lods
xor
pusha
aad
jns
pop
rol
sub
into
and
jg
push
mov
das
icebp
dec
xchg
loop
pop
outsb
lcall
push
xor
mov
push
push
or
js
sarl
push
sbb
sahf
jge
les
add
movsb
sbb
adc
mov
xchg
fs
arpl
ret
xchg
aam
mov
ja
rolb
add
push
xor
push
mov
ljmp
and
add
cmp
insb
sbb
push
xor
or
cmpsb
xchg
pop
mov
imul
jnp
mov
es
inc
fldcw
out
jno
xor
add
add
cmp
les
aaa
jns
leave
in
pop
in
pop
xchg
lods
mov
lds
sbb
repnz
ficompl
mov
jbe
xchg
dec
add
jp
or
xor
jae
cmp
inc
ret
xchg
popf
pop
outsl
repz
and
loop
js
sub
xor
out
loopne
nop
nop
nop
nop
pop
xchg
jno
or
xor
and
mov
sarl
andl
popf
shl
pop
add
dec
pop
and
sub
xchg
ret
out
push
cs
xchg
ljmp
jecxz
pop
cli
inc
or
jnp
xchg
push
lret
push
sbb
shrl
mov
sub
lods
push
pop
xor
clc
adc
fdivs
fadds
rolb
stos
ffreep
xchg
fcmovnb
add
jmp
rcr
shlb
fnstcw
rcrb
fldl
cmp
lods
daa
lds
cmpb
in
mov
sbb
data16
dec
out
fildl
pop
cmpsl
fcompl
scas
mov
popf
and
jbe
repnz
imul
out
jo
xor
jnp
stc
jecxz
int
sbb
out
dec
aaa
push
insl
call
mov
iret
daa
push
in
pop
xlat
jmp
push
std
mov
ror
popf
or
jecxz
lret
jnp
inc
cs
pushf
sahf
mov
adc
mov
js
sub
popf
ja
mov
adc
cmc
fnstsw
xchg
sbbb
sbbb
subb
add
cmp
clc
test
sub
sbb
nop
nop
nop
nop
inc
xlat
sbb
mov
out
push
push
hlt
push
fs
pushf
pop
filds
aaa
rol
cmp
sub
and
push
outsl
bound
or
in
inc
test
ret
fwait
adc
popa
cmc
add
sub
xor
adc
xor
nop
nop
nop
pop
inc
sbb
or
inc
std
mov
mov
ror
leave
push
call
lret
cwtl
push
lret
iret
inc
sub
fimull
jp
out
jo
xor
paddd
mov
iret
sub
mov
push
cwtl
test
push
xor
das
pop
or
nop
nop
nop
nop
clc
add
fstl
lret
or
add
xor
pop
mov
cli
xor
mov
mov
cmp
add
lret
lret
jmp
xlat
out
movsl
int
sar
xchg
sahf
repnz
add
rorl
call
test
in
sbb
add
add
and
add
fisubl
lret
xchg
andb
cld
mov
mov
adc
xor
xchg
add
xor
ljmp
sub
jnp
push
sbb
faddl
adc
or
mov
ret
ja
cld
push
popa
push
pop
shll
push
add
rolb
or
stos
testl
push
push
subl
adc
adc
add
iret
or
or
stos
cwtl
xchg
sub
lods
sub
xchg
daa
test
xchg
mov
jb
xor
ljmp
add
addr16
dec
dec
dec
clc
hlt
loope
and
xchg
enter
jb
xchg
or
mov
pop
mov
sti
shll
mov
stos
adc
mov
add
orb
lret
pop
xchg
test
popa
pop
enter
fnstenv
add
pop
movsb
fdivl
pop
lea
jl
add
inc
dec
dec
inc
insb
add
xchg
call
scas
or
mov
sbb
aaa
dec
imul
insl
mov
dec
insl
jmp
in
cmpsb
pusha
jb
dec
inc
outsl
jbe
push
sbb
xor
es
out
sahf
sbb
xchg
popa
sub
ds
or
cmp
add
xor
pushf
insb
push
add
xlat
pop
pop
mov
xchg
mov
stc
push
jg
mov
inc
push
stc
daa
ja
pcmpeqd
sbb
movsb
pusha
push
xchg
and
in
fsts
test
xor
outsl
fwait
dec
mov
movhlps
ret
cmp
movsl
cmpsb
pop
and
sbb
ja
rcr
das
xor
push
call
pop
or
jne
add
and
je
adc
cmp
mov
addb
inc
jp
push
or
lea
xor
add
sbb
inc
shll
lods
push
dec
add
movsb
hlt
jo
mov
ret
in
test
sarb
sbb
mov
jg
fcomps
movsl
pusha
sbb
mov
inc
and
xchg
insb
adc
jno
sbb
pop
out
ficomps
sub
pop
mov
add
hlt
pop
movsl
testl
in
cs
mov
shll
xchg
push
ss
clc
imul
add
inc
xlat
shrb
in
aas
xchg
jo
jl
adc
pop
in
out
aaa
xchg
ds
and
pusha
sbb
mov
push
nop
inc
jecxz
xchg
fcmovne
cli
jg
cmpsl
loopne
mov
lods
cmp
mov
jo
pop
nop
nop
nop
nop
nop
leave
adc
adc
and
mov
imul
test
inc
add
jns
aaa
mov
in
adcb
ss
xor
sbb
and
roll
pop
sbb
hlt
test
addb
jnp,pn
outsl
jg
nop
nop
nop
nop
in
fdivrl
sbb
xchg
mov
fwait
sub
inc
test
and
nop
nop
nop
nop
nop
add
mov
adc
mov
fwait
mov
mov
clc
popl
cmc
testb
dec
or
dec
test
int3
int3
int3
idiv
addr16
fidivs
clc
testl
shll
and
pop
dec
lret
sub
or
into
xchg
inc
shl
push
xor
sbb
outsl
push
and
jecxz
add
adc
mov
lret
les
pop
mov
push
sub
inc
enter
stos
jg,pn
faddl
sbb
dec
mov
push
cwtl
jmp
mov
insl
or
out
fs
xlat
push
lods
jb
iret
aad
test
mov
addr16
arpl
pop
je
add
mov
outsb
and
add
mov
sar
sarl
pop
add
and
std
fnstenv
pushf
sub
mov
or
imul
add
fsubrl
cmp
pop
sbb
fldt
mov
add
dec
ja
cli
int3
int3
int3
int3
int3
xor
jbe
fs
in
and
adc
arpl
inc
daa
xor
push
and
jne
xor
add
pop
mov
dec
lds
sbb
ds
xor
addl
xchg
and
cltd
dec
lret
mov
adc
jmp
pop
frstor
jno
and
or
int
ret
stos
inc
ret
aas
test
lds
dec
push
xor
push
les
ljmp
icebp
outsl
adc
clc
and
imul
add
adc
push
shrb
pop
xchg
mov
cmpsb
vhaddps
jb
lea
and
and
mov
mov
xchg
dec
push
mov
sub
cltd
test
mov
xor
mov
shlb
jg
dec
xchg
mov
shll
divb
es
ret
add
push
sarb
sub
push
rcrb
and
add
cmp
int3
sbb
int3
int3
int3
int3
int3
inc
roll
aad
jmp
jmp
adc
push
mov
and
or
jmp
loop
inc
scas
push
xor
add
or
rol
notl
mov
int
es
jb
inc
jecxz
sbb
stos
or
mov
xchg
sub
jg
xor
sti
and
mov
sbb
call
test
insl
test
or
push
and
push
add
xor
push
inc
cli
push
mov
pop
push
pop
pop
lods
jbe
push
insb
outsl
lcall
and
mov
push
adc
cmp
nop
fsts
ds
int3
int3
int3
int3
pop
push
cli
mov
aas
or
je
inc
fdivs
sbb
repz
dec
cs
insb
dec
dec
jecxz
jne
cwtl
mov
mov
shl
andb
add
and
out
das
sbb
pushf
add
shll
loop
test
push
imul
stos
sub
sbb
stc
ja
jle
push
sbb
add
xor
or
push
jmp
jle
fstp
mov
pop
cmp
xor
and
xor
adc
add
shlb
mov
je
scas
insb
and
xchg
push
jb
mov
sub
fwait
add
xchg
xor
test
add
inc
xchg
ret
jg
pop
xchg
les
jnp
sub
push
fnstenv
cmp
add
mov
pop
outsb
jmp
cmpsl
mov
mov
aad
imul
push
mov
push
std
cmp
in
adc
jl
into
sldt
sti
jmp
xchg
mov
nop
nop
nop
nop
nop
cmp
cmc
jmp
nop
nop
nop
nop
nop
pop
leave
push
popl
popf
xor
xor
mov
dec
cmpsb
push
fcomip
repz
insl
pop
ret
mov
or
lcall
add
mov
lea
fs
push
fsubl
add
adc
add
testb
sbb
ja
fiadds
loope
add
inc
or
or
clc
xchg
cmp
insb
movd
push
daa
add
mov
in
jne
mov
or
ret
movsb
xchg
les
inc
shl
add
rcrb
add
daa
jne
outsl
sub
inc
subl
add
push
pop
push
stc
mov
add
jno
stos
adc
stos
xchg
lods
mov
xchg
mov
mov
fdivs
or
push
or
and
arpl
loopne
add
lods
arpl
lods
inc
mov
lock
scas
enter
inc
iret
fists
mov
ret
out
or
lods
shrl
ror
int3
int3
int3
int3
mov
xlat
rorb
hlt
dec
lods
lret
add
out
out
or
add
loope
fmuls
add
imul
push
push
aaa
mov
sbb
xor
add
ds
fnstsw
inc
roll
mov
mov
fcomp
push
pop
imul
inc
cltd
scas
adcl
cld
icebp
and
cmp
jb
adc
add
mov
jo
sbb
push
mov
lods
in
cwtl
div
cmp
pop
push
orb
cwtl
push
shr
dec
cmp
push
ljmp
sti
ja
sub
pop
cli
pop
cwtl
sub
add
sbb
mov
repnz
es
dec
pusha
mov
jle
cwtl
or
or
fdivrs
sahf
nop
nop
nop
nop
nop
hlt
pop
jns
mov
sti
fdivrp
ret
jl
out
adc
mov
push
inc
arpl
les
rorl
or
add
xorb
jle
iret
or
sub
inc
add
lret
out
adc
add
stos
mov
lret
inc
mov
xchg
cmp
data16
jne
icebp
daa
mov
popa
mov
cld
punpcklbw
adcb
dec
mov
jge
sub
add
jg
dec
add
aad
xchg
lcall
stos
inc
pop
cli
xchg
sub
testb
std
xchg
rclb
mov
jle
pop
pop
repz
mov
in
mov
sbbl
scas
mov
mov
mov
lcall
scas
mov
call
dec
adc
dec
mov
mov
cmp
jge
imul
loopne
lods
add
cmpsl
mov
push
mov
xlat
shl
ret
sbb
fcmovnu
mov
sub
and
pop
adc
clc
cmpsl
and
inc
push
and
cmpsb
hlt
mov
ffreep
call
rclb
leave
adc
test
add
push
insb
push
pop
loopne
xchg
sub
dec
jns
or
aam
popl
jp
sub
shrb
add
sahf
cwtl
cmc
psraw
inc
adc
in
xor
xchg
outsl
fists
xor
pop
fstps
xchg
pop
xor
nop
nop
nop
nop
nop
repnz
adc
cmp
stos
add
sbb
pop
pop
aad
xchg
or
jle
aaa
loop
cmp
and
cmp
add
push
inc
jge
out
fwait
xchg
out
sub
inc
mov
jb
push
pop
or
mov
iret
mov
xlat
in
push
jecxz
popf
mov
cmp
mov
and
add
sub
ss
add
jl
sub
push
int3
int3
int3
int3
int3
lods
fldt
aad
sbb
ljmp
in
cmp
sbb
fsubrl
outsl
cli
mov
and
xchg
push
mov
xor
sub
jg
sahf
inc
xchg
lahf
and
gs
xor
outsl
mov
in
lahf
xor
loope
fiaddl
cli
push
and
jge
adc
jecxz
push
das
pop
add
mov
jo
inc
jae
stos
cmp
xchg
int3
int3
int3
int3
int3
js
jbe
inc
sbb
or
stc
ljmp
dec
and
and
pop
sbb
xor
in
or
lods
jecxz
and
add
pop
imul
test
jns
sti
into
pop
xchg
popa
push
jo
mov
mov
cld
rcrb
fs
clc
mov
sbb
xchg
add
add
push
fistps
ja
jae
jecxz
pop
sbb
lds
xchg
and
fidivs
sbb
pop
insl
sbb
cmpsl
inc
lock
lahf
bswap
int3
int3
int3
int3
xor
jl
xor
add
jns
xchg
cmp
lret
js
lea
jmp
stc
mul
cwtl
pop
arpl
int3
int3
int3
pop
sub
fimuls
add
icebp
mov
lret
cmc
pop
cmp
arpl
cmpsb
or
mov
std
fcompl
test
dec
dec
into
orl
mov
adc
jge
push
aaa
mov
out
xchg
sahf
cmpsl
pop
mov
dec
xor
scas
mov
add
pop
iret
mov
clc
scas
inc
pop
js
add
inc
add
call
sub
mov
pop
hlt
rolb
mov
mov
pushf
mov
push
mov
stc
inc
jp
fs
enter
clc
outsl
loop
jecxz
data16
add
insl
pop
mov
inc
pop
push
jp
cs
cmpb
add
sub
push
loope
scas
test
int3
int3
int3
int3
rorl
leave
xor
ds
pop
jmp
push
divb
std
lret
stc
adc
sbb
add
push
pop
mov
mov
mov
lcall
jnp
stos
fwait
call
mov
fldt
mov
and
jge
es
push
add
add
cmc
data16
sub
or
sub
out
xchg
lahf
popf
pop
cmp
xchg
sbb
jl
fcmove
outsl
or
test
fimuls
aam
popa
lea
cmp
mov
out
fnstenv
add
js
adc
add
jo
lods
add
jle
pop
mov
jecxz
or
and
nop
nop
nop
nop
leave
cli
loopne
dec
icebp
mov
lock
hlt
out
jecxz
add
jnp
sbb
ja
mov
cli
dec
mov
sub
aaa
jl
aas
push
std
jmp
sbb
call
fcoml
sub
push
fbld
mov
outsl
pop
jge
repz
push
sbb
lea
loop
mov
pop
test
add
dec
jno
call
sahf
xchg
cmp
mov
jecxz
push
popf
test
iret
pop
mov
daa
stos
add
add
adc
mov
clc
jp
cmp
movsb
xchg
push
mov
jle
add
push
outsl
and
arpl
jno
or
int
dec
push
sub
out
add
add
push
lret
fistpl
js
mov
cmp
xor
lods
data16
and
lds
enter
add
jne
jl
pop
inc
loop
mov
enter
out
shll
sub
push
mov
sub
aas
in
imul
addr16
clc
lret
notl
repnz
int3
int3
int3
int3
int3
xchg
jae
jmp
jecxz
or
xor
or
in
xor
loopne
jge
pop
mov
xchg
mov
scas
pop
ja
cmpl
adc
adc
pop
sti
sbb
inc
ret
jne
xchg
imul
rcll
sub
adc
adc
add
push
scas
lods
in
sub
pop
mov
shl
inc
fstpt
pop
mov
add
bound
inc
xchg
mov
stos
shrb
imulb
repnz
xchg
or
stc
adc
je
mov
mov
sbb
cmp
icebp
enter
addr16
shl
stos
bound
movsl
and
mov
jp
inc
mov
leave
into
dec
and
push
xor
sahf
sbb
aaa
notb
jecxz
adc
movsb
mov
mov
nop
nop
nop
nop
nop
xor
add
mov
fwait
inc
ficoml
xchg
sbb
lret
pop
xchg
mov
mov
fsts
xorb
data16
sub
daa
insl
ljmp
cltd
lret
mov
pop
daa
push
cltd
adc
pop
in
out
and
insb
sub
cmp
je
sub
inc
out
or
xor
dec
repnz
rcll
add
push
pop
mov
fcmovnbe
jmp
push
inc
xchg
inc
sub
xor
es
jo
das
mov
dec
sbb
sbb
xor
jb
or
dec
popa
add
aam
fsubl
int
pusha
loop
sbb
mov
in
or
shlb
push
jecxz
cmp
xor
pop
adcl
test
dec
dec
outsb
inc
xorb
pushf
lret
add
sub
pop
insl
outsb
mov
pop
pop
ds
push
sahf
ljmp
int3
int3
int3
int3
int3
sbb
js
or
pop
xorl
add
pop
or
lret
or
push
loop
push
pop
sub
repz
sldt
test
sub
xor
adc
jmp
pop
out
mov
loope
inc
and
aas
mov
pop
mov
jne
cmp
push
cltd
mov
xchg
into
sbb
xlat
stos
data16
int3
int3
int3
int3
xor
pop
rclb
push
stos
roll
aad
dec
push
mov
cwtl
movsl
dec
lds
hlt
clc
sbb
mov
cmp
into
jne
les
mov
mov
and
mov
stos
mov
ja
lods
mov
nop
nop
nop
nop
nop
stc
sbb
jnp
arpl
mov
jb
nop
nop
nop
nop
nop
out
inc
sbb
dec
imul
mov
pushf
mov
pop
add
adc
mov
xor
push
js
inc
js
cltd
ds
arpl
mov
jnp
rcll
pushf
in
ror
mov
inc
adc
lds
sbb
mov
sbb
pop
roll
aaa
add
es
shll
jecxz
xchg
pop
enter
mov
mov
adc
data16
imul
mov
sub
add
in
mov
inc
loop
je
add
xchg
call
add
loope
mov
push
push
stc
mov
xchg
repz
jmp
stos
fucompp
adc
pop
repnz
jmp
pop
mov
jo,pt
and
mov
into
add
jge
sbb
dec
repz
sub
icebp
out
pop
inc
test
hlt
jnp
jl
pop
subl
add
cmp
inc
sub
sub
inc
aas
out
mov
pop
sub
cltd
and
dec
cmp
fbstp
cs
and
out
or
bound
scas
dec
int3
int3
int3
int3
int3
into
xor
dec
in
and
nop
push
dec
imul
int3
int3
enter
add
hlt
lock
xlat
scas
push
pop
std
jb
fidivrl
lods
dec
or
add
add
fwait
bound
mov
int3
int3
int3
push
mov
sbb
stc
inc
into
int
mov
aas
aad
jp
mov
test
xor
ds
icebp
stos
sahf
lcall
jp
and
jb
std
cmp
in
call
addr16
mov
jge
dec
jb
enter
ds
xchg
mov
sub
inc
xchg
push
mov
outsl
mov
pushf
pop
xor
mov
in
scas
out
dec
sub
and
pop
jg
nop
nop
nop
nop
nop
mov
outsb
je
xchg
sub
sub
jne
xor
add
aam
int3
int3
int3
int3
int3
mov
pop
mov
aas
dec
pop
jg
push
add
popf
aam
jbe
cmpsl
clc
icebp
sarb
inc
jge
xor
jmp
aas
cmp
and
out
lods
xchg
mov
outsl
pop
out
inc
xor
adc
add
hlt
cltd
mov
pop
push
jmp
inc
lds
punpckhdq
mov
and
popa
cld
outsl
rcll
mov
test
int3
int3
int3
int3
repz
mov
add
int3
int3
int3
int3
nop
nop
nop
nop
nop
ret
push
mov
jp
xor
mov
or
add
cmp
add
aas
rcrl
jno
clc
movsl
jmp
and
jge
insb
add
loopne
or
add
test
pop
mov
int3
int3
int3
int3
dec
add
fwait
xchg
adc
pop
fmuls
jns
inc
call
push
xchg
popa
add
sbb
pop
xor
inc
mov
adc
sbb
int
push
fnstenv
jmp
pop
lret
cmp
push
clc
ja
dec
mov
jnp
insb
fsubl
shll
hlt
add
repnz
cmp
ficompl
ret
xchg
adc
gs
test
sub
imul
inc
fdivrp
sahf
loope
test
pop
inc
cmp
out
fs
in
cli
and
cwtl
mov
and
cmovg
push
xor
add
insl
sub
fdiv
sbb
jns
add
push
inc
filds
out
push
mov
lds
imulb
or
cmp
add
and
mov
pop
lods
gs
xchg
mov
movsl
inc
mov
fs
fwait
mov
add
pop
dec
nop
nop
nop
nop
nop
mov
add
mov
dec
mov
adc
cmpsb
xor
repz
aaa
mov
cmp
push
sub
sub
add
enter
ds
std
insl
jbe
rorl
sbb
xchg
sarl
sub
call
add
add
sbb
mov
pop
ss
in
xor
jb
cltd
sub
loopne
pop
pop
js
in
je
jg
jnp
xor
mov
call
pop
shl
push
in
insl
push
outsl
sbb
arpl
jbe
pop
test
mov
leave
stc
fistps
mov
xlat
add
push
pop
hlt
push
sub
lods
mov
cltd
imul
popa
negl
cmp
adc
pop
jb
xchg
aad
cmp
add
push
dec
dec
xorb
popa
inc
mov
pop
lret
outsl
rorl
mov
sub
xor
sbb
stc
cmc
cltd
cmp
and
outsl
shlb
adc
sahf
and
inc
pop
scas
cs
hlt
fs
mov
loop
adc
fidivl
gs
adc
sti
stos
jbe
pushl
add
mov
dec
xor
stos
bound
into
adc
mov
mov
mov
ret
pop
cmpl
scas
lret
sbb
add
mov
push
mov
sbb
ret
or
adc
cli
adc
add
dec
adcb
out
mov
loope
pusha
jbe
jne
outsb
sub
rcl
fs
lds
arpl
cmp
mov
aaa
je
pmulhw
sbb
arpl
test
or
push
xlat
subb
lahf
xchg
mov
xor
mov
jecxz
inc
and
sub
add
cwtl
jne
repz
fisttpl
data16
mov
in
cwtl
and
xchg
popa
and
cltd
mov
sub
or
leave
inc
pop
lock
aas
mov
clc
jge
xor
fidivs
add
dec
loope
mov
adc
ljmp
add
sbb
add
add
fisubrs
mov
or
push
add
add
aas
pop
insl
mov
mov
cld
andb
lds
adc
add
xor
stos
fcmovbe
pushf
push
mov
mov
sbb
add
or
pop
pop
adc
adc
add
pop
xor
or
inc
mov
inc
rorl
lret
cmp
pushf
add
pop
add
push
ss
fisubs
in
ljmp
jbe
jns
dec
jecxz
xchg
push
pop
cmp
mull
cmp
test
test
data16
mov
inc
outsb
xor
adc
loopne
fimuls
add
shll
mov
sbb
push
push
push
ret
iret
inc
mov
push
xchg
gs
add
mov
verw
pmullw
xor
and
lret
rorl
lods
xchg
mov
xchg
jmp
adc
add
xchg
pop
into
pop
xchg
jg
dec
subb
repnz
mov
jmp
cmp
mov
pop
test
insl
pop
and
jle
stos
dec
jnp
loopne
movsl
orl
cmp
out
dec
test
jo
and
lahf
in
ja
test
dec
test
pop
enter
and
and
inc
arpl
shr
push
mov
enter
sub
xchg
arpl
sub
clc
lds
js
push
push
hlt
daa
ret
sub
ret
or
data16
mov
jae
push
jge
mov
ljmp
mov
nop
nop
nop
nop
jbe
aad
les
inc
mov
popa
jo
and
shr
stc
mov
stos
iret
test
fistl
icebp
cmc
idivl
xorb
push
mov
shlb
add
push
adc
dec
stc
cltd
jno
daa
dec
add
filds
cmc
syscall
cld
push
repz
int
push
push
jl
lcall
int3
leave
inc
out
inc
pop
sbb
mov
int
out
mov
mov
outsl
orb
mov
xlat
scas
xor
push
jo
sbb
scas
dec
or
jle
inc
ret
push
mov
or
sub
xchg
dec
lahf
pop
cmpsb
inc
outsl
sbb
lret
adc
pusha
inc
cmc
nop
nop
nop
nop
nop
push
or
ljmp
add
add
aad
imul
je
add
notl
and
xor
lods
shlb
push
lods
xchg
push
fsubr
push
or
nop
nop
nop
nop
jge
sbb
shl
adc
out
jecxz
rorb
lock
mov
call
fists
dec
lods
inc
ret
in
or
jbe
add
adc
push
cmp
aaa
add
lods
insb
leave
outsl
fs
cmp
in
adc
outsl
test
jae
scas
sub
mov
jle
adc
mov
mov
jecxz
outsl
mov
xor
jg
mov
xor
ss
sbb
pop
cmpsl
mov
or
dec
sbb
add
push
sub
icebp
scas
repnz
imul
add
cmp
mov
js
mov
pop
out
shrl
jmp
stc
xchg
cli
lcall
cli
pop
xchg
imul
cltd
sub
sub
lahf
ret
dec
or
int3
int3
int3
int3
jns
or
xchg
sbb
ljmp
jmp
mov
and
in
mov
es
push
fdiv
std
cli
jb
mov
das
lahf
bound
in
adc
jns
in
jb
pop
shll
fwait
orl
or
in
and
mul
mov
xchg
push
andl
jb
cld
mov
inc
cs
filds
inc
or
push
outsb
call
push
jle
dec
mov
out
xchg
inc
ret
adc
fcom
cmpsl
aam
leave
dec
clc
cmp
sub
add
jb
nop
nop
nop
nop
nop
and
popf
push
cmp
rclb
clc
push
aad
aad
cmp
fwait
push
pop
cmpl
les
sar
dec
add
add
cmp
xor
push
xchg
aad
dec
mov
sub
or
adc
xchg
outsl
mov
jmp
in
mov
add
into
out
stos
xor
inc
fs
pusha
add
and
dec
testl
mov
ja
dec
xor
outsb
dec
in
test
jle
pop
jp
fdivrl
lods
xchg
gs
xchg
js
sub
jecxz
mov
mov
mov
mov
int3
int3
int3
int3
and
stos
xchg
mov
xchg
jle
dec
into
dec
or
inc
sub
ret
jp
adc
repnz
xchg
pushf
cmp
or
inc
dec
push
dec
pushf
jo
and
addr16
imul
jno
in
aas
pop
test
inc
mov
mov
scas
hlt
idivb
add
mov
mov
in
jno
xchg
enter
cld
or
popf
sub
fisttpl
mov
imul
xor
and
mov
aaa
stc
orb
nop
nop
nop
nop
nop
out
cmp
andl
pop
sub
xchg
jae
lcall
pop
in
enter
fs
push
push
stos
push
daa
pusha
push
add
push
add
add
and
sbb
jp
sub
jns
or
adc
sub
sbb
movsl
pop
cmp
inc
fsts
push
lds
cmp
add
mov
xchg
addr16
shlb
pop
js
cmpsb
cmp
mov
enter
outsb
sub
stc
xchg
aas
out
push
out
add
insb
xor
adc
cwtl
push
add
mov
out
xlat
ljmp
cs
add
cmp
add
pop
les
gs
outsl
sbb
xchg
jle
add
stos
cmc
and
in
jmp
fsubp
inc
out
jbe
jmp
mov
cs
dec
mov
xlat
jmp
sub
lods
and
mov
inc
loope
fsub
add
mov
in
repz
mov
cmp
shrl
jge
or
cmp
or
and
push
iret
dec
idivb
scas
mov
jmp
das
push
fadds
fistps
cmpsl
push
mov
mov
cmc
mov
or
std
jecxz
dec
or
insl
xchg
add
orl
loop
add
cs
xchg
push
fmuls
and
cmp
scas
xchg
and
sub
lds
mov
pop
arpl
add
test
add
push
out
dec
aam
jnp
in
jbe
arpl
sub
dec
pop
add
fmulp
int3
int3
int3
int3
imull
mov
pop
sbbl
push
cmp
mov
cld
je
dec
sub
leave
adc
dec
pop
mov
out
jge
addr16
or
loopne
rorl
xor
mov
xchg
pop
ss
push
sbb
pop
cmpsb
in
push
addr16
or
mov
sub
adc
add
sbb
sbb
xchg
into
cmpsl
in
inc
mov
sub
ret
mov
add
jge
push
mov
mov
outsl
xor
jns
cmp
add
cmp
pusha
add
imul
nop
nop
nop
jmp
mov
mov
loope
push
jge
out
into
lods
pushf
shrb
mov
xchg
stos
cmp
xor
or
out
inc
sub
cmp
push
test
js
jns
xor
lgs
sub
out
sbb
dec
test
roll
jl
or
add
mov
or
or
pop
ret
test
and
rclb
and
mov
xor
jnp
inc
pop
sbb
inc
and
cmp
adc
pop
sti
fbld
pop
cmp
xchg
les
or
shrb
mov
jb
call
das
pop
cltd
imul
cmp
je
out
xor
sbb
inc
xor
lods
jmp
nop
nop
loop
ja
sti
dec
mov
fbld
repz
xor
movnti
adcl
sbb
pop
pop
lock
jno
cmpsl
les
adc
xor
jnp
mov
xor
pop
xchg
xchg
inc
mov
jge
stos
ret
cmp
jns
scas
adc
int3
int3
int3
int3
int3
sub
andl
jge
enter
push
xchg
jmp
xchg
mov
mov
in
pop
mov
scas
sbb
add
mov
jnp
cli
out
test
lds
mov
mov
dec
punpckldq
adc
stc
js
mov
mov
jno
sub
mov
xchg
adc
rorb
jnp
daa
xlat
dec
js
iret
push
jbe
lret
jae
ret
daa
sbb
clc
in
out
lods
stos
sub
jle
imul
jle
int
cmp
jnp
push
aas
mov
insl
pop
add
sub
xchg
adc
and
adc
cltd
inc
mov
jae
pop
inc
adc
adc
das
sti
or
push
das
lret
xchg
ja
pop
aam
lahf
test
stos
outsl
jge
xor
jae
cmp
pop
and
jp
xor
rcll
add
xchg
jno
mov
push
cli
jmp
lds
fimuls
mov
testl
scas
mov
gs
aam
jmp
imull
stos
inc
lcall
add
adc
sbb
arpl
in
loop
push
mov
outsb
jo
sbb
jg
scas
mov
fstl
loopne
and
nop
nop
movsl
mov
sti
push
fs
cltd
fwait
xor
add
jle
scas
push
out
inc
fbld
adc
add
filds
insb
jl
cli
pushf
inc
pop
mov
movsl
xor
add
xorb
popa
xchg
sahf
dec
jmp
mov
xchg
xchg
add
jno
or
aam
mov
in
js
leave
add
pop
aas
add
in
inc
rcr
pop
or
pop
sbb
and
dec
shll
scas
iret
adc
adc
push
mov
loop
lahf
xchg
or
xlat
mov
add
cli
lahf
repz
adc
addr16
pushf
pop
push
jmp
dec
out
mov
adc
loop
jmp
clc
dec
sbb
push
divb
test
mov
dec
pop
movsl
sbb
fidivrs
imul
xchg
lahf
sub
repz
or
xchg
sub
clc
jns
ffreep
dec
mov
mov
fdivs
xchg
jae
ret
cmp
testl
and
and
testb
add
icebp
andb
cs
cmpsb
adc
xchg
xor
out
sbb
inc
rorb
jg
add
call
and
scas
xlat
push
pop
out
mov
sub
push
sbb
add
stos
adc
add
in
jns
jbe
dec
add
lahf
xor
pop
xchg
xorb
cs
cmpsl
mov
cmp
xchg
data16
xlat
inc
lret
inc
loope
insb
imul
or
lods
adc
inc
hlt
imull
loopne
sbb
inc
scas
cld
fldl
imul
js
inc
pop
roll
outsb
pop
mov
add
enter
arpl
sti
xor
dec
xchg
mov
xor
push
imul
dec
scas
xchg
pop
lret
enter
sub
pop
adc
and
nop
nop
nop
hlt
test
enter
data16
mov
push
fwait
adc
stos
pusha
loopne
fnstenv
out
popa
jle
xchg
pop
push
inc
fbld
add
mov
imul
stos
mov
jne
das
add
divb
mov
mov
mov
adc
rorb
add
mov
pop
sbb
add
inc
jno
jae
mov
mov
mov
jle
jb
add
in
xchg
add
test
fimull
xor
fidivl
lock
int3
int3
int3
int3
int3
fmull
xchg
cmp
das
nop
nop
nop
nop
nop
pop
jbe
imul
mov
add
pusha
jl
xchg
xchg
pop
mov
mov
lods
loop,pt
inc
and
imul
sub
xor
push
icebp
or
jae
loopne
jge
inc
adc
xchg
cld
sbb
cltd
in
lea
movsb
pusha
es
pop
fyl2x
hlt
push
mov
in
add
mov
in
icebp
sbbb
jge
add
ds
out
push
jmp
fcomi
mov
das
pop
adc
mov
xchg
outsb
sahf
pop
jge
addr16
outsl
insl
lods
push
sti
outsb
lds
clc
pop
xchg
pusha
iret
cmpsb
sbb
and
in
jge
mov
ljmp
and
testb
and
sub
imul
or
jns
cmp
push
lahf
into
jmp
mov
add
test
inc
sldt
test
jecxz
mov
jp
jns
or
sub
insb
inc
in
push
addr16
ja
pop
mov
jge
std
adc
aaa
push
and
in
call
cmpsb
mov
add
add
stc
not
dec
jbe
nop
nop
nop
nop
fldl
call
test
mov
adc
mov
sbb
cmp
add
mov
mov
add
and
testl
movsl
addl
out
ret
popf
xor
mov
scas
mov
cmp
popf
jae
sbb
xchg
xor
push
mov
dec
and
inc
shlb
sbb
inc
and
pop
pusha
or
repnz
cli
sub
cmpsl
sbb
mov
in
std
scas
inc
fimull
mov
lea
and
push
dec
sarb
push
aam
es
sub
aas
or
mov
das
push
das
cmc
lea
inc
dec
inc
push
aam
inc
jmp
inc
out
push
cmc
dec
cmc
test
add
mov
lcall
ds
push
pushw
outsl
scas
nop
nop
nop
nop
nop
fimuls
icebp
daa
ret
push
aad
fisubrl
add
pop
sub
sbb
push
mov
xchg
pop
xchg
ret
int
jl
or
inc
imul
lret
pop
fsub
bound
jbe
pop
hlt
xchg
out
mov
pop
fwait
mov
adc
daa
xchg
idivb
repnz
pusha
inc
nop
nop
nop
nop
nop
sub
ja
aad
shll
fwait
mov
dec
jns
arpl
mov
repz
sub
sub
pushf
add
add
aas
insb
add
mov
sbb
mov
divl
mov
jmp
ss
mov
mov
pushf
push
aaa
push
cmp
xchg
inc
jl
bound
push
divl
push
ret
adc
mov
push
sbb
mov
add
loope
nop
nop
nop
nop
outsb
adc
shrb
jecxz
xchg
dec
xchg
dec
push
jb
imul
test
scas
adc
mov
orb
pop
xchg
outsb
cmp
lea
cmp
cwtl
adc
inc
push
add
loopne
xchg
ljmp
aam
lahf
mov
or
mov
lds
xor
or
adc
sbbl
aam
jnp
jle
adc
and
ljmp
daa
adc
mov
add
loopne
inc
adc
mov
sahf
mov
in
aas
push
sar
push
movb
lods
jmp
aas
add
nop
nop
nop
nop
nop
inc
and
nop
nop
nop
nop
xchg
pusha
fldcw
push
add
jl
cmpsl
add
push
out
popa
mov
adcl
inc
or
add
push
or
mov
xor
inc
xchg
xchg
pop
les
fimuls
repz
mov
imull
jns
in
scas
enter
out
dec
inc
lock
adc
ror
int3
int3
int3
int3
mulb
mov
rsm
loopne
test
dec
pop
adc
popa
xor
dec
and
add
outsb
mov
inc
push
sub
xchg
xchg
roll
or
movsb
cmp
add
sbb
add
inc
roll
mov
xchg
fwait
sub
bound
xchg
add
jle
adcb
jbe
int3
int3
int3
int3
sbb
int3
int3
int3
int3
int3
ret
idivl
sub
ja
push
fldl
sahf
es
cltd
test
out
fnstcw
jl
ss
aas
iret
xchg
sub
sub
in
int3
int3
int3
int3
int3
clc
or
push
add
add
xchg
push
and
dec
jmp
or
add
or
pop
stos
jb
mov
xchg
jo
test
ret
inc
mov
or
mov
add
and
or
je
xchg
movsb
dec
gs
mov
lock
jmp
mov
std
sahf
jecxz
pop
or
mov
cwtl
add
mov
jae
clc
jl
popa
sahf
jl
push
mov
xor
xchg
jne
outsb
or
xor
out
sub
mov
mov
rcl
lods
loop
fsubrp
sbb
into
fs
mov
lea
test
push
push
or
add
mov
cmpsl
je
enter
fisttpll
add
mov
lods
ret
lcall
add
test
int3
int3
int3
int3
ror
lea
aam
roll
divl
hlt
hlt
xchg
ficomps
notb
mov
mov
pop
or
mov
and
aad
lahf
loope
fdivs
mov
in
sub
test
inc
mov
call
push
mov
sub
pop
adc
outsb
sub
add
inc
mov
fwait
jno
stc
sub
leave
push
push
in
vmulsd
scas
fs
mov
push
dec
addl
faddl
les
aaa
mov
cmp
stc
xor
cmpb
loop
leave
or
mov
loop
xchg
subl
sbb
fucomp
ss
pop
add
rorb
jg
or
and
ror
pop
cmpsb
shlb
aam
divl
lea
xor
pop
cmp
in
cld
cmp
movsb
adc
add
lcall
cli
or
pop
data16
repnz
jp
add
xchg
xorl
movsb
mov
jb
cmp
sub
sarl
jl
push
loop
sbbl
pop
adc
mov
out
js
aaa
xor
xchg
mov
sbb
subb
xor
in
test
jb
and
test
add
int
pop
mov
mov
xchg
sub
aam
mov
lds
or
lahf
and
in
jne
ret
jns
in
fistpll
push
pop
push
cmp
mov
inc
fstpt
int3
dec
cmpsb
fwait
inc
mov
adc
fcmovb
rolb
cmc
mov
sti
scas
popa
push
cmc
sbb
sbb
int
pop
push
in
jle
data16
mov
dec
sahf
xchg
sbb
out
pmaxub
push
jmp
ret
push
adc
sarl
push
cmp
pop
clc
in
sahf
arpl
inc
arpl
add
mov
lods
fisubrs
xchg
or
pop
mov
sti
pop
js
inc
push
xor
aad
mov
ss
add
mov
add
imul
pop
xor
test
inc
push
push
mov
scas
test
addr16
popa
adc
loope
fiadds
fidivrs
inc
daa
add
xchg
cmp
mov
popf
mov
leave
sti
es
pusha
pop
cld
imul
cld
jnp
mov
inc
repz
mov
stos
arpl
shl
lods
xchg
jno
sbb
xchg
lea
add
clc
stc
nop
nop
nop
nop
nop
jns
pop
mov
inc
dec
jae
pop
mov
out
mov
test
sti
jo
pop
add
jl
sbb
mov
in
rclb
sub
xchg
or
add
scas
jae
xchg
jl
aad
cmp
and
jge
pop
scas
jmp
dec
in
push
dec
jle
cmpb
xchg
cmp
add
nop
nop
nop
nop
fs
call
nop
nop
nop
nop
nop
loope
sbb
add
inc
jb
ret
imul
flds
cwtl
pushf
shr
sarb
daa
sbb
test
mov
out
es
imul
pop
mov
or
mov
add
jecxz
out
push
bound
xor
mov
divl
scas
mov
icebp
test
xchg
sbbb
nop
nop
nop
nop
xchg
dec
jbe
mov
shl
out
cltd
lds
mov
xchg
sub
cmp
or
add
lods
inc
enter
pop
mov
push
sub
inc
rorl
repz
push
repz
pop
dec
pop
push
cmp
push
mov
inc
xor
cmp
jns
inc
lods
test
mov
icebp
fwait
or
lds
or
fcoms
xchg
mov
xchg
cmpsb
nop
nop
nop
nop
nop
cs
add
xchg
xchg
xchg
fstl
cmp
out
lret
mov
xorl
add
mov
mov
into
xchg
push
xchg
lahf
push
adc
fsubrs
inc
mov
jb
fldcw
les
jecxz
adc
add
ret
add
inc
xchg
mov
push
bound
int3
in
mov
cmc
ja
or
and
add
push
sti
cmp
mov
sub
push
and
inc
loopne
fsts
cli
cmp
cmpsb
cmp
cmp
push
dec
and
out
jge
insl
mov
repz
add
inc
shr
jp
jecxz
rorb
mov
or
nop
nop
nop
nop
nop
mov
push
shlb
das
data16
enter
sarb
pop
cmp
sub
lea
divb
loop
testl
or
add
stc
push
loop
shr
xchg
mov
and
mov
fldt
add
dec
addl
or
and
or
jnp
out
pop
or
cmp
xor
es
mov
shll
dec
mov
push
test
xchg
pop
and
loope
es
rclb
bound
cmp
test
das
mov
adc
es
and
add
insb
adc
mov
cmp
push
xchg
rorb
daa
pushf
or
ljmp
add
aad
sbb
into
test
cmp
scas
aaa
mov
fistps
mov
jb,pt
stc
mov
sub
cwtl
sub
insl
pop
imul
add
fstl
add
push
jmp
sub
mov
frstor
add
lods
out
jecxz
jp
and
int
push
adc
and
add
cli
xchg
and
fidivrl
repnz
cmp
add
mov
aas
add
adc
sub
sahf
fldln2
mov
adc
cmp
or
pop
adc
call
nop
nop
nop
nop
nop
mov
or
push
shlb
lods
lods
rcll
bound
mov
lcall
imul
push
cmp
add
mov
lahf
push
add
push
mov
test
add
stos
lret
fistpl
pop
sbb
cmp
adc
bound
mov
cmpsb
jnp
sbb
lret
or
add
sti
dec
popa
jnp
das
add
xchg
nop
nop
nop
nop
nop
sbb
mov
push
xchg
call
jmp
rcll
in
ds
jp
int
insl
leave
aaa
lods
stc
mov
out
out
fdivs
jnp
cltd
ds
int3
int3
int3
int3
int3
cmpsb
test
repz
cmp
int
xor
pop
stos
nop
nop
nop
nop
nop
insl
dec
cmpsl
shlb
push
shrb
mov
or
nop
nop
nop
nop
nop
or
inc
sbb
inc
leave
xchg
xor
push
sbb
sub
and
clc
outsb
cmp
shrb
stos
sbb
add
push
loope
fmull
push
popa
push
pushf
gs
repz
mov
lea
xchg
test
jecxz
movsb
ret
imul
add
jae
sbbb
sbb
add
pop
divb
nop
nop
nop
nop
movsb
add
push
ficomps
add
mov
lds
mov
imul
stos
or
and
rcpps
push
xor
cmpsl
stos
pop
sub
mov
xchg
pusha
outsl
cmc
cmpsl
in
lea
add
fcmovu
mov
sbb
sahf
jecxz
std
mov
inc
aas
sub
push
push
mov
sub
shlb
int3
int3
int3
int3
int3
push
xor
lcall
lds
pop
jecxz
pusha
add
add
jp
das
jl
js
pop
jge
mov
push
call
lret
out
sub
test
dec
or
add
sbb
push
gs
sti
test
pushf
push
dec
mov
js
or
adc
lods
mov
insl
lret
and
xchg
pop
add
js
lds
arpl
and
pop
jmp
push
out
scas
jno
cmpsl
ja
mov
push
push
lcall
out
pusha
push
or
mov
sbb
add
xlat
leave
insl
adc
nop
mov
inc
call
testl
add
mov
jecxz
inc
mov
loope
jnp
imul
in
mov
add
jp
lock
dec
daa
jmp
insb
loope
dec
cli
in
cmp
jmp
lret
mov
nop
nop
mov
out
lods
push
lods
mov
int3
int3
int3
int3
int3
jle
inc
pop
enter
mov
jnp
jo
icebp
mov
and
mov
lahf
leave
cmpsb
mov
popf
arpl
addr16
into
cmp
xchg
xor
arpl
test
outsl
fildll
push
int
ja
sbb
adc
mov
jmp
fldcw
lret
adc
fwait
sub
movsb
or
frstor
add
pop
shl
add
push
repnz
push
rclb
arpl
push
test
jle
out
mov
add
aas
mov
pusha
in
or
lods
push
cmp
adc
les
aam
imul
icebp
das
jle
pusha
cwtl
je
mov
jp
xorl
les
aam
das
call
arpl
and
mov
jb
sahf
repnz
dec
inc
out
mov
roll
hlt
pop
outsb
mov
xor
mov
mov
and
adc
mov
push
int
dec
lods
sub
int3
int3
int3
int3
lcall
add
mov
mov
push
push
add
imul
js
and
lea
mov
es
aam
nop
nop
nop
nop
data16
jecxz
mov
sub
pusha
jl
outsb
repnz
and
inc
jnp
orl
mov
js
fs
roll
lahf
fisubrs
adc
adc
pop
jge
movsl
outsb
jae
jg
inc
cwtl
inc
imul
mov
js
sub
adc
push
addr16
sub
in
xor
sti
cli
dec
push
es
pop
clc
ret
jo
bound
or
fdivs
jae
jmp
loope
lahf
nop
nop
nop
nop
nop
jmp
jl
push
add
out
mov
add
dec
movsb
clc
idiv
adc
cli
mov
inc
lock
lcall
add
push
cld
int
pop
cmp
and
ret
sub
inc
adc
cmp
mov
dec
and
add
and
mov
inc
push
cmpsb
repnz
aam
fwait
add
dec
inc
loope
and
stos
bound
test
pusha
inc
mov
mov
push
sahf
aad
rorb
jmp
cmp
fsubrl
sbb
mov
mov
xchg
or
pop
ret
mov
aad
hlt
stc
movsb
test
push
je
and
lahf
js
test
hlt
sbb
mov
adc
inc
mov
inc
rcll
stc
cmp
in
push
data16
stc
roll
es
dec
mov
insl
enter
test
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
push
scas
sub
sti
cltd
cmp
cli
scas
mov
mov
or
in
sub
in
add
into
mov
inc
mov
sub
inc
pusha
push
insb
cltd
repz
xchg
iret
fisttpl
pop
mov
jmp
push
imulb
pop
pop
cld
fcoms
popa
xor
mov
lret
je
pop
mov
insb
in
sub
aam
inc
out
stc
pop
mov
pop
in
dec
cs
fisubrs
cmpsl
outsl
fisubs
loope
arpl
cmpsl
jmp
imul
xrelease
ret
jae
cld
mov
sub
adc
rcrb
sbb
ret
jle
lock
popa
xchg
rorl
ljmp
sub
xchg
cwtl
aaa
and
cmp
cmc
pushf
andl
fldcw
jmp
insl
sub
add
mov
test
shrl
dec
bound
xchg
or
sbbb
jns
sub
rcll
cmpsl
mov
cs
je
xchg
jecxz
lea
int3
int3
int3
push
jle
sbb
inc
jmp
jmp
popa
shlb
std
and
add
push
and
aam
cltd
dec
das
sbb
add
cmp
ljmp
imul
mov
mov
mov
icebp
mov
lret
sti
call
aad
push
adcb
into
ret
inc
scas
ror
jmp
hlt
scas
cmp
pop
mov
bound
pop
mov
mov
xchg
jecxz
jle
add
jg
xchg
mov
scas
xchg
sbb
shrl
dec
fcomip
pushf
cltd
and
jbe
js
dec
jmp
cs
xchg
mov
fpatan
fcom
mov
fcoml
xlat
loopne
mov
cmpl
jne
dec
pushf
dec
push
enter
xchg
scas
mov
adc
xlat
sbb
fwait
pop
out
xchg
add
pop
jns
adc
aaa
faddp
out
aaa
cld
test
push
lret
cld
je
ret
sbb
mov
add
xor
xor
clc
pop
fiaddl
test
dec
sub
popa
lret
jbe
int
pop
lea
jb
insb
test
cmp
int3
int3
int3
int3
int3
xor
sbb
aas
stos
pop
dec
pop
pop
movsl
mov
fimuls
push
jge
into
std
push
movsl
push
push
ret
mov
sbb
xor
cmp
add
and
cltd
aas
mov
xor
sub
dec
movsl
cs
scas
stc
ljmp
mov
fldcw
or
mov
xchg
subl
lcall
xor
scas
sbb
leave
inc
jne
mov
data16
add
add
ljmp
stc
xchg
shrl
adc
inc
pop
cmpsl
mov
jbe
pop
dec
or
add
xor
inc
gs
mov
inc
push
cmp
jae
xchg
pushf
mov
aas
fldl
push
and
adc
adc
inc
arpl
ljmp
add
fsub
cmp
adc
cmp
cmpsl
pop
jp
fsubrl
test
lods
xchg
fnsave
mov
sbb
add
dec
pop
in
mov
adc
adc
loopne
add
out
out
lcall
out
xor
lret
scas
dec
push
sub
add
hlt
xor
test
jle
outsb
shll
sub
add
imul
jl
popa
xchg
ljmp
and
sbb
inc
in
xchg
and
cld
popf
cs
add
xchg
xchg
sub
lods
mov
imul
loopne
loopne
push
repnz
jne
fsubrl
mov
sub
inc
add
faddl
rclb
push
and
leave
jo
jmp
rol
fmuls
mull
cmp
cld
out
in
add
sbb
fisubrl
nop
nop
nop
nop
pop
aas
inc
inc
xor
fisubrs
test
dec
jbe
cmp
insl
les
mov
ret
jne
jae
sub
and
push
add
out
lret
int
inc
notb
ret
idivb
in
sbb
stos
mov
mov
mov
xor
dec
es
mov
adc
pusha
jl
and
or
les
adc
cwtl
outsl
or
adc
jmp
cmp
xor
jp
out
dec
rcl
mov
dec
sbb
jp
inc
push
sbbl
jnp
int3
int3
int3
int3
int3
scas
ljmp
movsb
lock
leave
sti
mov
cld
push
cltd
data16
adcb
fwait
push
addb
loope
js
les
fsts
xor
ret
fdivl
push
push
aam
stos
mov
sub
mov
shlb
add
icebp
dec
jge
cmp
cmp
fnsave
ja
pushf
push
cmp
aaa
aad
mov
scas
cmp
add
pop
jle
loop
sub
aaa
mov
push
lea
lahf
test
addr16
cmp
push
addb
dec
sub
or
aaa
sub
mov
addr16
mov
mov
push
cmp
mov
lds
pop
in
xlat
adc
push
sub
xchg
xchg
dec
push
add
fnstcw
in
cmp
xchg
push
inc
data16
lock
call
lret
jmp
nop
nop
nop
jp
or
nop
nop
adc
lds
push
cmpsl
dec
addr16
pop
inc
dec
aas
das
movsb
imul
sub
dec
sahf
cmc
or
clc
es
add
adc
jp,pt
fsts
push
loop
imulb
dec
mulb
fwait
mov
pop
pop
scas
mov
or
add
cmp
xorl
add
andb
adcl
jmp
or
and
push
pop
aas
fmuls
sbb
jecxz
nop
nop
nop
nop
fwait
lock
fcmovne
mov
and
mov
mov
ljmp
or
ja
xor
int3
int3
pop
int3
int3
int3
int3
int3
jb
test
mov
jne
mov
sbb
cltd
das
adc
or
cld
add
iret
pop
jae
fidivrs
jg
and
loope
push
xchg
mov
das
push
mov
add
mov
dec
mov
insl
push
pop
out
xchg
and
and
ss
mov
inc
out
mov
adc
and
daa
mov
outsb
mov
and
xchg
mov
push
stc
add
loope
ljmp
mov
nop
nop
nop
nop
cmp
cmp
xor
int3
int3
int3
int3
int3
jo
inc
jg
inc
xchg
lahf
mov
je
mov
imul
nop
nop
nop
nop
mov
mov
bound
inc
sbb
add
push
stc
adc
push
mov
cmp
mov
movsb
sbb
les
fistpll
mov
sarb
jecxz
stos
jae
das
jmp
cmpl
lods
and
pusha
adc
add
inc
adc
outsb
inc
cld
jge
cmp
cmp
lods
fsts
sarb
and
sub
adc
push
es
add
add
lds
lahf
or
int3
adc
ss
jno
cmpsb
cmp
pop
shlb
int3
int3
int3
add
insl
lock
pop
int
inc
push
xlat
clc
imul
rolb
add
js
or
cmpsl
xchg
pushf
jns
in
arpl
and
adc
addr16
movsb
lea
and
sub
xor
rep
mov
pop
stc
je
call
push
or
jo
inc
cmp
add
outsb
mov
lea
dec
enter
imul
sahf
jp
imull
mov
sub
add
mov
cwtl
xchg
repz
int3
int3
int3
iret
sub
pop
adc
or
int3
int3
int3
int3
popf
loopne
or
mov
dec
shl
mov
sub
fidivrl
xchg
test
mov
loopne
and
fcmovbe
xor
adc
clc
idivl
out
inc
push
cmp
ret
inc
popaw
sub
in
pop
aas
arpl
rorb
dec
or
push
mov
and
lea
sbb
add
jle
lahf
out
out
adc
pop
inc
jbe
mov
xchg
aad
push
lock
sub
pop
cld
insl
rcll
xlat
cld
sub
adc
add
pusha
pop
xor
out
lock
mov
xchg
les
jge
jo
or
call
jg
push
sub
xchg
mov
stos
ja
or
xor
xor
inc
imul
dec
mov
repz
push
mov
jle
dec
mov
js
repz
hlt
jns
call
call
mov
adc
add
jg
adc
mov
mov
pop
ds
pop
cmpsb
daa
lds
mov
add
add
lods
cmp
int3
pop
popf
mov
shlb
add
and
lcall
push
sbb
pop
arpl
push
bnd
data16
outsl
andl
test
es
pop
push
sub
andl
fistl
jl
subb
cmp
push
dec
inc
xchg
ss
inc
andl
cmp
and
sub
xchg
cmp
jmp
lea
ret
andb
cli
test
push
add
push
jne
in
xchg
lods
xchg
adc
cmp
int3
rorl
push
and
add
or
enter
mov
mov
test
mov
js
gs
dec
push
insl
iret
sti
mov
jns
dec
fs
popl
hlt
call
push
cs
stos
xchg
mull
lret
cli
and
rorb
add
add
cmpsb
sti
sbb
jp
mov
ljmp
add
add
enter
daa
mov
xchg
jp
cmp
hlt
pop
sahf
sbb
add
in
push
inc
push
dec
das
pop
push
inc
call
push
xchg
or
pop
pop
fwait
sbb
jno
cmp
pop
adc
aas
fidivrl
arpl
jae
jb
ljmp
sahf
clc
into
mov
aaa
inc
sbb
test
mov
dec
add
mov
out
mov
aam
push
pop
sub
jne
cmp
or
pop
push
fisubrl
mov
leave
leave
stc
lret
and
xor
cli
xchg
mov
cs
aam
mov
fildll
sar
nop
nop
nop
nop
nop
imul
sub
popa
sbb
test
pop
xchg
add
out
inc
mov
leave
sub
mov
fidivrl
jne
pop
mov
outsb
js
inc
ja
add
push
adc
mov
fwait
roll
ret
pop
movsb
in
sbb
std
into
mov
mov
add
push
jge
add
push
inc
fwait
je
mov
dec
std
icebp
enter
outsl
jmp
push
sarb
inc
cli
inc
mov
push
xchg
bound
fiadds
jle
add
adc
add
fs
mov
sub
ficompl
add
lcall
gs
pop
xchg
mov
xor
testb
push
add
add
les
adc
int3
int3
int3
int3
stos
sti
ljmp
icebp
out
jmp
push
je
stc
or
movl
lock
int3
int3
int3
int3
push
dec
jnp
mov
ret
pushf
push
out
and
xlat
sub
or
dec
cmp
mov
add
jl
and
fcoms
mov
mov
rclb
xor
into
and
test
xchg
cltd
xchg
pop
xchg
scas
fs
jmp
jle
pushf
add
and
xor
or
fs
pop
inc
pop
je
cmp
mov
imul
in
or
jecxz
popa
mov
jmp
inc
sub
sub
fsubrp
mov
dec
lea
test
cltd
sbb
add
es
cmp
mov
inc
xchg
arpl
nop
nop
nop
nop
nop
sar
fildll
pop
mov
in
aas
add
lds
imul
add
sbb
mov
sub
adc
sbb
push
ret
xchg
ljmp
cmp
add
xor
jmp
arpl
dec
push
xchg
dec
loop
adc
pop
adc
inc
imul
nop
nop
nop
nop
nop
jne
movsb
push
add
aaa
iret
add
insb
cmp
shr
ja
out
jne
xchg
pop
xor
mov
adc
add
shl
jge
ficoml
or
sbb
sbb
daa
jp
mov
jb
adc
add
fildl
mov
in
dec
cmp
iret
mov
sbb
lods
hlt
mov
xchg
xor
lahf
xor
xor
inc
rcrl
or
add
pop
and
stc
jecxz
clc
xchg
sbb
xchg
testl
test
mov
nop
nop
nop
nop
nop
xchg
test
loopne
add
and
arpl
fsubs
fimuls
filds
jp
sbb
jl
out
dec
pusha
mov
insb
in
into
cmc
xchg
repz
and
mov
sbb
xchg
fldl
into
ss
je
mov
lods
mov
fisttpl
xchg
and
stos
dec
jo
movsl
shll
add
in
mov
dec
inc
xchg
pop
jge
sbb
fsubrs
mov
sub
and
std
out
xorb
mov
pop
sub
sub
add
cmp
pushf
outsl
xor
mov
mov
loopne
mov
jae
inc
mov
xor
lods
dec
loope
pop
jns
pop
addb
xchg
popf
push
adc
jge
add
mov
sbb
loop
add
sarl
addr16
sub
test
sub
inc
je
or
add
and
clc
subl
frstor
add
outsl
sub
bound
data16
mov
xchg
adc
cwtl
jo
or
pop
popa
and
sub
mov
lea
jg
aaa
mov
pop
sub
das
rorl
dec
fstpl
jbe
mov
lret
movsb
or
pop
push
aam
pop
out
inc
adc
ret
sahf
arpl
movsb
aad
mov
cli
movsl
xchg
sub
add
cmova
test
in
cmp
or
rcl
adc
shrl
dec
shlb
or
jbe
mov
push
mov
add
sub
leave
push
movsl
add
das
jo
sub
adc
jnp
jns
sub
push
in
iret
push
out
scas
lods
sahf
dec
and
sub
out
out
mov
xchg
sub
dec
jno,pt
rcll
sbb
fdivs
in
sbbl
cmp
pushf
cmp
push
nop
nop
nop
nop
nop
push
popf
movsl
xor
pop
out
test
dec
aad
repnz
pop
std
lret
test
sub
call
outsl
icebp
xor
or
push
lcall
insl
adc
mov
mov
sbb
enter
mov
lds
adc
jg
sub
dec
ret
xor
xor
fstl
loop
movsl
sbb
sub
fstps
mov
push
into
cli
mov
mov
push
ret
push
xchg
cltd
xchg
movsl
dec
cmp
lock
jb
inc
xor
mov
push
jo
cmp
in
inc
ljmp
add
xchg
dec
sub
fmull
mov
pop
pop
mov
mov
xchg
sar
ljmp
push
push
sbb
inc
jno
pop
lea
sub
in
ret
jmp
inc
mov
cmp
mov
faddl
mov
cmp
mov
add
xchg
arpl
push
popf
xor
mov
sbb
data16
adc
ja
inc
ret
outsl
aad
sti
or
or
in
mov
dec
por
in
fsubs
xor
mov
dec
mov
in
test
xor
push
mov
arpl
cmp
pop
sub
cmpb
adc
popw
dec
mov
sbb
mov
mov
lret
sub
push
mov
and
repnz
mov
cwtl
jp
les
nop
nop
nop
nop
cmc
in
pop
icebp
bound
lret
cmc
jns
jl
imul
xchg
mov
fcompl
push
or
cmpsb
push
out
xchg
clc
jo
fwait
ret
jp
mov
jg
shrb
xorl
movl
mov
outsb
cmp
add
into
cmpl
lret
dec
sub
and
sbb
and
fs
mov
xchg
adc
cmpsl
repz
cmp
jp
dec
push
scas
cli
jmp
pop
fistpll
insb
xor
pop
scas
xchg
test
sarl
cmpl
rorl
mov
pop
xchg
and
ror
dec
push
xor
insl
fstps
push
jmp
sub
mov
pop
push
add
mov
roll
jne
pop
mov
cltd
xor
mov
jo
popf
inc
cltd
or
adc
lock
and
add
mov
out
bound
ja
shlb
gs
or
pop
adc
addr16
int3
int3
int3
int3
add
sbb
daa
popf
mov
sub
lret
stos
jae
adc
popf
cwtl
icebp
loope
cmp
pop
xchg
sub
mov
and
pop
out
aas
int3
int3
int3
int3
int3
push
out
sahf
jae
hlt
push
mov
nop
nop
nop
adc
pusha
sub
dec
out
out
icebp
jmp
mov
and
popf
add
adc
xchg
fidivrl
nop
nop
nop
nop
fs
cmp
sbb
dec
or
jle,pt
dec
nop
nop
nop
nop
nop
xor
mov
aas
pop
lret
jae
adc
stos
or
out
xor
fstl
jnp
aaa
xchg
sahf
cmc
pop
sbb
jb
stc
adc
mov
add
adc
mov
fmuls
pop
xchg
mov
xor
mov
mov
pop
lea
divl
leave
sbb
mov
pop
push
in
stc
push
hlt
push
cmovs
sbb
aad
mov
test
and
mov
cmp
dec
dec
inc
mov
iret
and
jno
add
insl
mov
dec
xchg
cmp
sbb
pop
pop
mov
std
sub
or
sub
cli
jb
add
xor
push
lret
push
push
xor
push
jb
subb
pop
in
dec
mov
xor
das
add
add
and
pop
pop
faddl
xchg
mov
cmp
mov
mov
jb
daa
and
out
sub
dec
addl
lcall
or
and
push
cmp
ja
push
mov
out
int3
int3
int3
int3
int3
lods
rorl
mov
rorb
mov
mov
packssdw
add
mov
sub
iret
push
jmp
cmp
out
jmp
mov
adc
mul
mov
cmp
fnsave
pusha
sub
je
dec
pop
push
add
pop
aam
sahf
pop
pop
cmp
lret
ffreep
cmpsl
jnp
mov
imul
mov
in
movsl
push
inc
stc
or
aad
fs
jno
imul
cld
add
jae
popf
das
mov
mulb
add
roll
lret
push
pop
mov
pop
es
mov
dec
int
lahf
or
mov
and
jle
fsubrs
xchg
clc
cmpsl
and
movsb
outsb
sbb
rcrb
pusha
cmp
shlb
push
shll
inc
cmp
xor
add
fwait
push
lret
ja
adc
dec
hlt
pop
inc
in
outsl
insl
dec
icebp
xchg
and
dec
mov
call
sbb
scas
mov
addr16
cmpsb
insb
sbb
movsb
xor
and
xchg
xchg
stos
mov
ret
es
lods
mov
push
dec
dec
cmp
xchg
stos
xor
mov
mov
mov
test
xor
ja
test
xorl
fdivr
mov
dec
fwait
sbb
addr16
int3
int3
int3
int3
inc
jmp
xor
aam
negl
add
pop
dec
out
adc
add
and
cmpsl
dec
lret
jecxz
jp
sti
lods
sahf
xchg
xchg
dec
add
sbb
add
dec
push
in
cmpb
sub
sbb
icebp
xchg
xor
fdivrl
in
icebp
bound
into
stc
dec
mov
sub
sbb
popf
cmp
or
mov
stos
mov
push
ud0
sbb
insl
in
sahf
bound
cmp
jbe
call
dec
cmp
lret
int3
int3
int3
int3
int3
and
sti
pushf
insb
insl
scas
mov
std
mov
inc
lods
inc
shlb
out
lcall
fcomip
sbb
sbb
hlt
ret
daa
lods
cltd
cmc
lods
hlt
pushf
bound
test
mov
int3
int3
int3
rclb
lods
dec
jecxz
test
fistpll
or
cli
or
add
sub
adc
ret
jmp
in
xchg
call
jno
out
xchg
aaa
lods
and
out
js
ficoms
add
jmp
cmp
push
and
lods
fstpt
jbe
push
mov
or
dec
ret
outsl
sbb
jne
aaa
shr
mov
and
push
jle
das
or
add
or
ds
pop
cltd
dec
and
xor
xchg
addr16
inc
cltd
pusha
lds
outsl
loopne
add
fists
mov
int3
int3
int3
int3
push
add
add
sbb
push
dec
test
push
fmull
frstor
jno
out
rorl
mov
cmp
dec
les
subb
nop
nop
nop
sbb
outsb
rcrl
mov
clc
pushf
sbb
pop
fdivrs
shll
pop
inc
mov
fldt
in
insb
adcl
fildll
into
hlt
sahf
jecxz
cmp
ds
sbb
arpl
push
bound
push
sbb
rcrl
fcomps
iret
test
aaa
add
and
mov
ret
ljmp
addb
mov
xchg
cmp
push
dec
addl
in
in
push
js
inc
ja
rorl
dec
in
pop
push
pop
arpl
pop
aaa
test
xchg
and
push
aad
pop
ja
mov
pop
inc
aaa
in
and
outsb
sbb
mov
or
ljmp
lock
popa
dec
jp
push
clc
push
and
push
cmp
movsl
fcomps
cld
mov
dec
mov
sbb
pop
mov
mov
cmp
adc
sub
repnz
bound
lea
repnz
aaa
imul
mov
das
push
cs
jnp
arpl
xchg
inc
mov
and
sbb
and
cmc
sbb
rcl
jo
mov
mov
and
mov
rep
pop
xor
scas
ja
sbb
int3
int3
int3
int3
adc
dec
mov
sbb
push
sbb
xchg
movsl
shlw
in
imul
cmp
add
outsl
std
mov
lea
sbb
ds
sarb
arpl
lret
add
pusha
mov
cmp
mulb
cmpsl
mov
sub
pop
ret
fwait
xchg
into
xor
xchg
add
mov
inc
adc
adc
xchg
int3
int3
int3
int3
int3
filds
inc
push
aad
adc
cmp
push
nop
nop
nop
nop
nop
xlat
in
sub
nop
nop
sbb
fstl
ss
xchg
pop
push
popa
aaa
shr
mov
mov
sub
scas
pop
mov
aaa
cmpsb
shlb
dec
cmp
movsb
mov
jle
loopne
lods
shll
rcll
sbb
pop
je
repz
cs
outsl
sbb
push
leave
fisttpll
adc
hlt
add
cmp
fwait
out
lcall
pusha
push
push
scas
inc
pop
dec
out
pusha
mov
lea
mov
or
xchg
sub
dec
mov
push
out
pop
fimull
jge
js
pop
cmp
xor
jbe
leave
xchg
test
and
jmp
cmp
int3
int3
int3
int3
std
mov
or
pop
out
enter
leave
push
mov
xor
scas
out
mov
sub
add
ds
scas
inc
xor
mov
sub
jl
push
mov
outsb
gs
int3
int3
int3
int3
dec
stc
add
outsl
lods
adc
sbb
and
cmc
mov
and
ds
rcrb
xchg
jae
int
clc
int
imul
push
add
or
repnz
shrb
int3
int3
int3
int3
int3
fs
dec
ss
mov
fld
fisubrl
ss
sub
pop
adc
add
imul
mov
jg
or
jge
or
add
enter
push
inc
cmp
jge
call
insl
xchg
fucomi
push
addb
jns
ja
in
inc
imul
push
dec
push
inc
aam
mov
xchg
mov
pop
aaa
add
aas
mov
movsb
xchg
dec
ds
out
addb
xor
shll
rclb
xor
data16
sti
adc
jle
fldcw
sub
dec
sarl
cmpsb
pop
dec
sbb
js
adc
outsb
lods
jl
ret
jp
inc
xor
mov
call
cmp
insl
mov
mov
fsubr
xchg
xchg
jo
inc
pushf
pop
addl
sbb
xchg
je
sbb
hlt
mov
adc
js
cmp
mov
cmp
inc
jg
push
call
ret
int
mov
xchg
push
xchg
mov
frstor
xchg
push
sbb
icebp
call
adc
fsubs
adc
pop
cwtl
stc
in
push
and
sub
das
mov
lods
popf
ljmp
xor
mov
pusha
sbb
add
mov
and
mov
hlt
mov
divb
lea
dec
mov
fsts
jno
call
add
scas
outsb
push
xor
std
and
mov
ss
jnp
add
mov
les
or
adcl
andb
cwtl
fstpl
adc
pop
aaa
fisubrl
dec
mov
paddusw
int3
int3
jae
ds
cmpl
sarl
fisubrl
repnz
sbb
adc
lods
movsb
push
adcb
or
cmpsl
xlat
out
push
push
leave
fisttpll
sbb
add
repnz
out
orl
inc
pop
mov
sbb
add
push
inc
divb
scas
lahf
add
sarl
cmp
jle
or
cmp
push
pop
fimuls
fcomps
adc
mov
hlt
sti
jne
stc
jg
bound
pop
aad
jp
fcmovbe
enter
mov
xchg
push
add
push
jo
data16
jmp
add
pop
cmpsb
out
pop
push
mov
cmpsl
xor
and
scas
in
xchg
push
ret
sti
inc
stos
mov
mov
ja
cltd
adc
cmp
add
inc
lea
pop
or
add
mov
shrl
cli
das
jno
cmc
dec
rcll
orl
push
pusha
mov
lcall
push
mov
push
push
pop
lock
aas
jmp
loope
add
hlt
rcrl
jmp
aad
jl
push
lock
bound
nop
nop
nop
nop
nop
sbb
mulb
jl
inc
xchg
sub
cmc
repnz
enter
hlt
arpl
pop
jno
jecxz
mov
mov
cs
cmpsl
ret
andl
mov
insl
inc
negl
adc
add
aas
call
nop
nop
nop
adc
jle
les
add
test
xchg
mov
sbb
and
jge
cltd
aas
ret
enter
sarl
lods
pop
and
dec
enter
xchg
xchg
add
jne
sarl
add
pop
stc
adc
int3
int3
int3
int3
int3
dec
inc
les
xor
sahf
mov
imull
in
xor
mov
mov
and
xchg
je
cmpsl
loope
mov
jecxz,pn
es
fs
fstps
push
xchg
ret
ljmp
add
jae
sub
mov
xchg
dec
hlt
push
cmp
pop
xchg
xor
cwtl
sti
mov
icebp
xor
sub
and
add
nop
nop
nop
nop
jno
xor
adc
cmp
add
rolb
push
aam
sub
jb
mov
int3
int3
int3
int3
int3
divb
mov
cmp
dec
out
shll
xchg
clc
sub
flds
cmp
cltd
add
cld
cs
xchg
mov
sub
add
mov
out
pop
bsr
add
sbb
mov
adc
mov
pop
fwait
loopne
add
pop
data16
xchg
push
pushf
aas
ss
push
sbb
out
add
fistps
sbb
dec
ret
pop
and
data16
push
inc
fisubs
in
popf
aas
fistpll
scas
dec
shlb
pop
add
push
fsubr
pop
sub
adc
subb
subb
jle
lahf
sbb
in
lret
int
sbb
inc
and
mov
movsl
add
add
mov
mov
repnz
lret
jp
jne
lret
adc
sbb
aam
and
jl
add
inc
aad
data16
push
push
adc
aaa
xchg
nop
nop
nop
repz
scas
pop
push
cmp
and
pop
jp
mov
ret
fld
fnsetpm(287
lcall
mov
and
pop
sub
test
mov
jno
popa
negb
movsb
cltd
movb
inc
sahf
mov
add
add
add
popa
and
jmp
push
push
sub
cmp
add
shl
je
movhps
mov
push
insl
test
pop
shr
sub
cwtl
testb
pop
mov
xor
mov
mov
add
dec
loopne
movsb
mov
fwait
jae
je
mov
jnp
cwtl
pop
test
test
int3
int3
int3
int3
push
and
cli
scas
shll
and
xchg
seto
mov
mov
lods
test
cld
jecxz
xchg
rorb
mov
movsl
or
in
and
movsl
clc
push
or
ret
pop
sbb
add
daa
shl
fnclex
push
mov
xchg
add
lcall
add
cld
stos
call
mov
out
imul
ja
movsl
lock
xlat
sub
je
loopne
addr16
inc
outsl
push
add
mov
js
jecxz
lcall
idiv
imul
mov
outsb
cmp
push
mov
mov
mov
mov
jnp
jb
push
xchg
sub
pushf
pop
sub
clc
imul
sbb
mov
aad
pusha
pop
clc
into
iret
mov
jecxz
dec
jg
das
outsl
adc
xor
add
cli
pop
mov
cld
adc
add
dec
sti
je
xor
push
addr16
and
mov
daa
shrd
mov
int3
int3
int3
int3
int3
fdivl
and
cmp
out
pop
push
outsb
push
xor
in
jle
aaa
mov
xchg
es
sub
jns
mov
cmpsl
inc
mov
cmp
arpl
jb
outsl
mov
shlb
mov
xor
add
sbb
inc
shlb
push
push
xlat
into
test
mov
nop
nop
nop
nop
nop
pop
and
push
sub
or
push
mov
cltd
clc
inc
mov
dec
pop
int3
int3
int3
int3
int3
dec
and
add
xchg
or
int
add
push
push
filds
xor
or
add
fsts
jmp
imul
cmc
inc
outsb
and
xor
mov
mov
sub
rcll
testl
inc
repnz
push
pop
or
in
ficoms
mov
jae
mov
inc
out
xchg
jg
jl
pop
mov
aam
add
xlat
add
les
add
sbb
sti
out
and
mov
mov
test
cmp
ds
or
lds
mov
push
fs
addr16
cmc
jmp
data16
movsb
imul
outsb
cs
push
pop
add
mov
push
xor
add
mov
sbb
sub
mov
loopne
lea
add
aas
add
dec
iret
mov
dec
push
and
insb
js
je
daa
ds
and
sbb
jg
sub
add
enter
imul
int3
int3
inc
ljmp
jecxz
popa
rcrb
mov
faddl
ret
out
dec
stc
stos
cld
repnz
sub
cwtl
lcall
inc
lahf
jne
jae
cmovo
pop
adc
pcmpgtw
xchg
call
clc
mov
in
dec
jns
aad
in
subb
fwait
aam
xlat
mov
cmp
stos
mov
add
sub
mov
out
push
add
mov
stos
push
and
mov
icebp
ja
icebp
imul
aam
xchg
ret
pop
sub
out
xchg
jo
int3
int3
int3
int3
jbe
and
fdiv
sti
mov
test
xor
aas
adc
sbb
dec
adc
mov
aam
int3
int3
int3
int3
int3
xor
add
imul
push
outsb
scas
pop
cmpsl
push
cmc
into
jo
mov
div
mov
jb
dec
mov
and
sbb
add
push
ss
and
jnp
femms
test
imulb
rorl
movsl
jno
push
es
mov
sti
test
iret
aam
sti
loop
sti
fcmovne
lea
xchg
xchg
add
push
mov
jo
jge
lock
lret
jecxz
aaa
pop
mov
inc
dec
insl
fs
and
xchg
pop
pushf
adc
inc
pop
sbb
cld
or
enter
int
mov
push
ljmp
adc
insl
int
rclb
push
jne
cmp
cld
imul
leave
pusha
cmpsb
adc
mov
ss
push
or
mov
push
jl
cmp
mov
inc
add
and
push
out
js
sub
sub
push
fnstcw
mov
stc
mov
adc
fsubl
out
adc
add
adc
lahf
sub
iret
in
push
jge
cmp
movsb
xor
add
inc
inc
pop
push
ds
je
pop
sub
add
cmp
xchg
dec
mov
push
jns
loopne
mov
push
mov
data16
sub
pop
xchg
push
inc
fwait
jl
pop
fldenv
mov
sub
mov
sbb
movsl
jne
dec
aaa
test
int3
int3
cmpsb
dec
add
imul
add
inc
popf
movsl
out
xchg
lret
fstps
pushw
jo
sub
lock
mov
dec
mov
cmp
sbb
pop
ret
xorl
mov
test
bound
adc
add
inc
cmpsl
es
movsb
inc
jge
push
add
add
arpl
movsl
xor
dec
frstor
jmp
jmp
jne
or
in
sbb
test
sub
popf
add
repnz
iret
fdivs
cmp
andb
xchg
jnp
push
xor
jg
addr16
lods
out
mov
sbb
jne
adc
inc
sahf
lret
inc
adc
and
add
push
stos
addr16
mov
cmp
iret
push
sub
cmp
lds
jnp
mov
push
add
lods
inc
pushf
and
insl
add
mov
inc
mov
cwtl
cld
cmp
pop
mov
outsl
lahf
sahf
or
sbb
lahf
push
xchg
or
inc
adc
sbb
popa
inc
aas
icebp
xchg
call
mov
jmp
leave
and
xor
push
imul
adc
xchg
das
add
add
xlat
xchg
cmpsl
add
loopne
repz
lcall
sub
sti
out
and
jne
sub
mov
mov
mov
pop
mov
add
int
sbb
and
add
dec
idivl
dec
jne
loop
or
jb
out
scas
out
xor
or
lds
xchg
xlat
mov
shll
cmpsl
ss
push
xor
lods
test
lret
in
mov
mov
fbstp
xor
cs
xor
push
lret
fnstenv
sbb
and
xchg
scas
pop
mov
ret
mov
cmc
ljmp
sub
xor
jp
pop
aad
xchg
movups
mov
add
and
int3
aad
and
loopne
mov
pushf
pop
cmpsb
mov
ljmpw
adc
or
sbb
enter
fsubrs
pop
jbe
mov
pop
push
movsb
pop
xorb
xchg
inc
std
sbb
pop
mov
and
jg
dec
ss
adc
mov
sub
pop
inc
sub
ja
mov
sub
sbb
cmpsl
aaa
test
aam
jmp
adc
rcl
push
sbb
ret
repz
xor
in
cmpsl
push
or
pop
inc
addr16
push
and
or
lcall
add
inc
in
push
in
or
in
jg
in
mov
mov
into
je
daa
hlt
test
ss
cmp
inc
inc
mov
popf
or
and
jno
aad
enter
cs
push
inc
js
mov
imul
cmpsl
aam
rcll
add
ljmp
add
dec
std
lea
movsl
mov
inc
and
stos
testb
add
xchg
mov
nop
nop
nop
nop
sbb
cmp
add
pop
gs
jp
jg
add
mov
daa
fdivl
and
pop
sub
and
push
sub
mov
repz
lahf
sbb
push
or
or
and
mov
push
orl
dec
jmp
dec
fstpt
inc
adc
int3
int3
int3
int3
int3
lock
and
lods
jmp
add
outsb
aas
sub
inc
cmpsl
mov
sub
andl
xor
movsl
mov
clc
insb
insb
jmp
imul
dec
in
ret
imul
add
add
in
int
mov
xor
cwtl
pop
xor
negb
push
into
xor
ds
push
out
sbb
and
sub
and
pop
pop
push
sahf
add
adc
loop
pop
mov
push
pop
pusha
test
int3
int3
int3
int3
int3
inc
cmp
xchg
sub
xchg
xor
add
jg
xchg
iret
adc
fidivrs
inc
cs
popf
js
push
enter
das
add
xlat
out
ds
xchg
and
leave
iret
xchg
adc
push
add
cmp
orl
and
add
popf
cmp
std
into
mov
mov
sub
inc
jp
aam
popf
sub
add
push
imul
pop
aad
mov
mov
divb
jecxz
movsb
mov
jg
xor
sub
and
adc
xchg
push
add
or
fdivp
xor
addr16
into
inc
pop
mov
pop
dec
outsb
xchg
cmpsb
push
sub
fstps
cmc
sbb
mov
notl
insb
xchg
dec
add
ja
or
sub
dec
and
cmp
ljmp
xor
adc
dec
aam
popf
sbb
xchg
cmpsb
sub
jp
push
add
xor
sub
pop
push
ficompl
jo
mov
xchg
sahf
in
mov
imul
or
out
cmp
mov
push
fwait
xchg
jmp
add
rcrl
cltd
sahf
jl
sbb
pop
movsl
and
push
js
loop
loopne
mov
insl
mov
ret
iret
orl
cmpl
xor
jmp
mov
pushf
les
jo
jg
out
ja
gs
cmp
aas
jg
cmc
loope
cmp
fiadds
and
cmpsb
mov
stos
jg
cwtl
movsb
xchg
cmpsl
inc
sub
jl
add
jmp
mov
cmpsl
lret
scas
fildl
xor
int
test
iret
movsl
pushf
das
or
loopne
int
mov
arpl
or
insb
popl
and
pop
xchg
mov
mov
cltd
sub
push
push
scas
mov
push
js
add
add
xor
pop
ljmp
aaa
push
lret
sar
sub
sub
sbb
fcoms
adcl
outsb
dec
inc
mov
and
mov
movsl
cmp
mov
fcos
adc
sub
divl
shll
addr16
notl
push
adc
mov
jl
adc
hlt
stos
int3
int3
int3
int3
int3
pop
and
mov
int3
cmpsl
mov
mov
jmp
in
or
pop
adc
add
es
pop
mov
aas
xlat
daa
add
cmovo
fcmovnb
movsl
inc
sti
xor
and
cmpsl
shlb
mov
rcll
sahf
enter
mov
test
push
xchg
test
jo
push
or
dec
imul
inc
ljmp
je
jle
inc
jne
scas
pop
arpl
dec
dec
fists
lds
out
mov
popl
xor
cld
mov
icebp
ds
mov
add
out
jg
jg
mov
and
rcrb
jns
mov
push
xchg
pushf
xchg
mov
xchg
out
sub
mov
hlt
outsb
jo
or
lret
dec
les
movups
lcall
testl
push
dec
jb
popf
xor
add
cmp
pop
sbb
in
sub
ja
hlt
pop
js
popa
sbb
and
gs
xchg
xchg
pushf
mov
outsl
or
add
iret
out
fwait
in
sbb
jge
int3
int3
int3
int3
int3
or
adcl
push
mov
adc
add
fwait
mov
mov
xorb
std
stos
mov
adc
mov
xchg
inc
fimull
mov
addb
xchg
or
pop
push
stos
xor
inc
loopne
xchg
xchg
test
fildll
add
fdivrs
pop
imul
xchg
pop
push
sub
push
mov
out
or
xor
cmp
imul
pop
cmp
pop
dec
mov
jo
mov
outsb
ds
pop
cmp
ljmp
inc
aaa
push
push
sub
insb
jge
imul
add
clc
push
jbe
inc
mov
sahf
aas
repz
addl
cmp
mov
scas
dec
add
jne
int3
int3
int3
int3
int3
sbb
insl
ficomps
add
add
fcomp
imul
xor
cmp
mov
cwtl
xchg
pop
bound
xorb
jmp
inc
lea
mov
jo
mov
test
repnz
or
sar
push
mov
les
mov
dec
dec
mov
int3
int3
int3
int3
js
xlat
adc
add
adc
punpcklwd
icebp
adc
rcl
mov
add
nop
nop
nop
nop
nop
inc
movsl
imul
add
dec
imul
sub
push
add
push
ret
fucom
xor
push
ja
rcrb
in
fstl
outsb
fdivrp
mov
fcompl
xor
jg
add
in
loope
out
mov
add
push
lret
out
repnz
outsl
cmpsl
lea
lret
jo
fildll
cmpsl
jle
push
xchg
arpl
inc
subb
and
inc
call
mov
lods
add
or
gs
cli
mov
pop
call
jmp
sbb
add
lods
pop
aad
movsb
fwait
iret
inc
iret
test
jecxz
fwait
mov
mov
out
mov
pop
mov
dec
inc
ja
repz
rol
xchg
jmp
adc
cmp
ret
mov
mov
dec
mov
mov
mov
jge
xor
dec
dec
and
push
add
add
mov
mov
test
clc
pop
aad
jmp
push
cmp
or
mov
cmp
js
mov
out
aaa
test
adc
sahf
adc
push
jo
hlt
pop
add
jb
pushf
mov
jecxz
aaa
shlb
xchg
ja
adc
lahf
int3
int3
int3
int3
int3
outsl
sub
sbb
aam
stos
lock
dec
ja
mov
into
and
loope
jo
jnp
sti
mov
arpl
pop
inc
cmp
push
lods
inc
add
shll
test
mov
dec
cltd
lods
rclb
int
cmpb
mov
add
test
pop
push
mov
in
push
sbb
cmpsb
leave
into
xor
pop
pop
lods
push
sbb
mov
jo
jbe
and
aam
xchg
xchg
clc
fistps
daa
jae
sbb
adc
push
shlb
cmp
call
cmp
mov
jle
or
and
dec
push
and
scas
jnp
cs
and
insb
xchg
dec
adc
je
shrl
push
mov
xchg
sbb
or
sbb
add
jecxz
xchg
xchg
mov
cli
add
nop
nop
nop
nop
test
mov
test
mov
out
test
out
int
call
add
add
xor
fdivl
jbe
andb
jne
repz
ds
cli
mov
push
int3
int3
int3
int3
int3
outsl
sub
daa
stos
stos
pop
das
lock
pop
cwtl
test
insb
std
fcoml
stos
dec
jno
xchg
jge
mov
add
out
add
das
inc
in
test
test
imul
mov
push
cmp
lahf
mov
lock
cltd
negb
ljmp
push
and
xchg
fwait
pop
xchg
dec
sub
lea
nop
nop
nop
nop
xchg
orl
aad
sti
mov
iret
or
mov
add
lahf
rorb
dec
push
mov
inc
xchg
mov
push
xlat
jecxz
daa
jns
and
inc
pushf
imul
lea
jl
cmp
add
movsl
pop
int3
int3
int3
int3
int3
pop
ljmp
les
pop
or
shl
enter
mov
add
rorb
mov
lods
loop
rorl
and
les
add
mov
in
add
push
lret
jnp
xchg
arpl
push
out
scas
mov
jge
fwait
inc
add
cmpb
adc
je
aaa
repz
lods
rorb
int3
int3
mov
xor
fsts
lea
add
loopne
lds
inc
je
cmpb
sub
jb
mov
pop
push
loop
call
sbb
pop
fdivrl
mov
das
push
fisttpl
js
pop
lds
pop
or
imul
rorb
jl
xorb
xchg
push
sti
xor
adc
or
ret
fdivs
sbb
popf
or
adc
add
xchg
add
or
mov
lds
notb
mov
lock
mov
push
dec
rolb
enter
pop
fdivrs
popa
ljmp
pop
mov
pop
test
add
push
into
mov
test
inc
mul
ljmp
fadd
js
adc
or
mov
push
dec
push
imul
sbb
and
pop
cmp
sbb
pop
lods
cmp
pop
sub
ljmp
mov
in
jecxz
scas
sub
cmc
jle
aaa
call
test
xor
call
and
gs
jae
lods
pushf
mov
in
and
and
add
mov
mov
mov
and
insl
and
into
inc
mov
lret
xchg
out
icebp
imul
mov
or
push
cltd
je
dec
jnp
stos
pop
adc
ret
lret
jne
icebp
addl
leave
sahf
xchg
out
arpl
or
pop
lods
sahf
cld
pop
dec
inc
fs
mov
xor
mov
push
inc
ret
insl
into
clc
mov
and
cmc
aas
inc
shll
repnz
shrb
add
cmc
out
push
popa
push
inc
adc
neg
or
in
in
xor
add
mov
lret
loopne,pn
in
int3
int3
int3
int3
pusha
mov
and
lds
pop
sahf
in
fiaddl
pusha
loopne
pop
ds
lret
sbb
in
lcall
jle
in
add
hlt
lahf
rcrb
imul
push
pop
leave
data16
adc
mov
out
sub
or
std
testl
push
dec
dec
mull
adc
movsl
cmp
mov
mov
clc
xchg
stos
jbe
mov
mov
xchg
push
mov
pop
cmp
cltd
inc
adc
popa
mov
mov
adc
test
fldcw
inc
xchg
pop
xchg
test
add
mov
pushf
bound
cmp
pop
push
lock
into
sldt
testb
fwait
iret
sti
or
or
or
rorw
sub
adc
mov
xor
add
inc
sahf
fisubs
sbb
jge
mov
sti
js
xchg
fldenv
mov
xchg
inc
sub
push
sub
jmp
outsb
dec
je
in
xor
add
cmp
ljmp
cmc
outsb
shl
pop
inc
inc
push
addr16
nop
nop
nop
nop
sub
jg
jmp
and
sub
add
es
setns
push
add
ja
adc
rorl
popf
in
arpl
add
divb
xchg
pop
jge
jle
xor
and
jb
xchg
adc
pop
pop
dec
xchg
push
stos
popf
out
jne
jp
scas
lea
or
test
mov
adc
mov
mov
push
add
sbb
or
jp
xchg
mov
mov
push
addr16
mul
test
repz
push
pop
movsl
daa
push
pop
clc
mov
add
pop
mov
insl
test
mov
test
shl
mov
ja
fstpt
std
rcrb
inc
fwait
inc
or
push
or
add
imul
adc
jo
cmp
repnz
in
imul
and
fcmovnbe
daa
mov
jl
adc
lods
mov
push
sbb
add
mov
cmpsl
test
bound
lock
xor
xor
pop
andl
sbb
cs
adc
push
jg
into
fiadds
pop
mov
pop
add
or
jns
mov
cmp
data16
or
sub
scas
cmpsl
leave
add
out
imulb
lcall
fdivl
imul
int
mov
in
adcb
sbb
mov
sub
jmp
movb
ds
js
dec
and
cmp
sub
pop
add
add
fimuls
aaa
loopne,pt
pop
add
mov
or
lock
jne
xchg
popa
or
das
xchg
ret
inc
xor
sub
stos
inc
loopne
inc
pop
jnp
mov
adc
mov
inc
adc
addb
push
cmp
fdivr
xchg
clc
add
add
push
xchg
loop
push
in
xchg
pop
mov
and
pop
or
lods
add
test
cmc
test
dec
push
add
pop
ud1
add
cs
mov
jg
xchg
enter
jns
imul
mull
or
mov
jmp
or
mov
int3
int3
int3
int3
int3
adc
xchg
ficoms
push
cmp
jecxz
jb
add
xorb
xchg
std
add
xchg
push
aad
dec
adc
lods
loop
leave
popa
test
frstor
insb
adc
ret
pop
jo
rorl
movb
add
sti
sbb
add
sahf
add
mov
push
sub
add
dec
cltd
loope
pusha
or
cli
mov
popl
jg
xorl
dec
into
cmp
pop
stos
repz
push
adcb
addr16
add
lock
mov
or
bound
shl
push
adc
lret
fadds
xor
jge
fnstenv
fmulp
jp
cmpsl
test
mov
add
push
test
out
lods
out
jnp
aaa
cmp
mov
mov
sub
loope
test
movsl
data16
das
rcrb
data16
dec
or
pop
popf
add
mov
loopne
lea
jae
sti
jne
cwtl
dec
lds
call
push
in
les
sti
popf
inc
enter
push
aas
mov
nop
nop
nop
nop
nop
and
or
sub
mov
fdivs
mov
lcall
nop
nop
nop
nop
nop
push
cltd
cmpsl
sub
daa
repnz
push
jb
mov
sbb
mov
sbb
mov
push
xor
add
adc
into
sarl
jns
in
cmp
jmp
divl
gs
pop
pop
mov
stc
mov
aam
inc
jle
andb
sbb
xor
rolb
and
cltd
adc
mov
push
int3
int3
int3
fmulp
jg
jp
loop
mov
add
jl
push
jnp
ss
add
jmp
jg
imul
cmp
mov
loopne
jno
pop
xor
dec
mov
fwait
dec
clc
mov
movsl
xchg
dec
mov
push
mov
mov
movsbl
pop
add
mov
dec
jge
nop
mov
pop
in
cmp
fdivrs
lahf
dec
popf
shrb
imul
add
inc
push
jecxz
inc
out
jg
add
int
push
xchg
mov
ja
mov
cltd
scas
loop
and
xchg
pop
lcall
add
shll
lcall
stos
into
test
je
adc
je
ja
dec
push
jo
in
div
inc
xchg
add
inc
cwtl
outsl
sub
frstor
ret
jo
cmp
adc
xlat
adc
cmp
add
inc
in
inc
xchg
mov
push
clc
and
add
add
imul
mov
xchg
mov
mov
jns
add
inc
repz
or
add
cmc
ja
cmp
sbb
jne
nop
nop
nop
nop
nop
xchg
pop
mov
sub
push
in
out
adc
add
fwait
xchg
pop
loopne
sbb
xor
push
negb
fcmovnu
scas
fidivrl
push
cmp
fwait
sbb
inc
mov
insb
cmpsl
push
xor
mov
cwtl
stos
mov
mov
inc
cmpsl
sarl
cmc
fs
jl
test
adc
cmp
dec
pop
rcrl
pop
call
outsb
mov
movsb
outsb
ds
mov
fdivrl
inc
xor
testl
scas
mov
push
push
dec
ja
sbb
add
mov
popa
or
mov
cmp
imul
mov
push
sub
xchg
hlt
jle
notb
add
jecxz
das
or
mov
sbb
inc
ficomps
loope
dec
xchg
sbb
mov
in
clc
pop
fstl
add
jbe
mov
outsb
inc
xor
decb
mov
ss
add
add
xchg
mov
push
add
dec
mov
data16
mov
insb
loope
mov
aas
sbb
js
fists
dec
jg
sbb
pop
pop
push
loop
dec
jg
cwtl
shll
xlat
imul
xchg
imul
lea
add
mov
xchg
xor
aam
pop
dec
int
addl
mov
inc
xchg
push
or
mov
mov
daa
dec
imulb
mull
push
or
in
xchg
jo
in
or
mov
or
aas
lds
and
ds
test
lock
dec
add
ds
sub
add
push
mov
mov
xor
cmp
jns
add
mov
sub
add
inc
pop
stc
es
mov
lahf
sahf
push
adc
push
cmp
sbb
xor
test
leave
dec
xchg
aad
sbb
sbb
xchg
std
addb
ds
jno
adc
addr16
data16
dec
xorb
inc
shlb
enter
push
or
inc
ret
lds
sub
or
sbb
insb
popa
out
push
xchg
outsb
imulb
xchg
push
lods
mov
loope
enter
jge
add
mov
std
inc
mov
or
sti
mov
push
sahf
sbb
repz
or
fnsave
or
jne
push
loope
ror
popf
cmpsl
dec
jo
inc
mull
xchg
dec
mov
fsubrs
inc
sbb
inc
add
add
test
enter
std
xchg
sahf
adc
inc
add
imulb
insb
add
sahf
pop
cmpsb
push
inc
mov
push
add
jp
call
jp
shl
lods
xor
frstor
addr16
xor
movsb
cld
aam
test
adc
sbb
flds
outsb
aas
imul
add
xchg
fiadds
mov
call
mov
sbb
add
add
mov
and
aaa
pop
or
xchg
mov
outsb
test
enter
add
add
jecxz
mov
orb
lods
push
stc
jge
loop
cmpsl
push
lods
sbb
cmp
out
or
mov
adc
jg
pusha
jo
out
pop
mov
cld
sbb
sub
cmp
sbb
hlt
xor
add
xchg
js
jg
pop
fsub
into
pusha
and
xor
sbb
fadds
fimuls
xchg
jb
mov
add
rorl
jg
add
adc
ret
fnstenv
and
insb
outsl
ds
in
add
or
out
dec
mov
adc
cld
pop
cld
test
adc
push
jl
stos
leave
loope
dec
cmp
sub
adc
imul
stc
sub
lret
add
loop
jl
sbb
mov
or
addr16
push
je
xor
gs
test
stos
outsl
loope
fadds
das
imul
pop
cmpb
roll
xorl
and
jbe
rcl
pop
lds
jl
sub
mov
icebp
xchg
shr
push
rcr
adc
outsb
sub
add
adc
mov
daa
nop
nop
nop
nop
nop
cltd
xchg
cs
into
mov
add
pop
aaa
xor
inc
inc
insb
sub
ljmp
call
dec
out
imul
mov
adc
or
add
xchg
jmp
mov
popa
inc
inc
mov
mov
imul
push
das
xor
push
jmp
cmpb
pop
xlat
dec
cmp
clc
jmp
mov
adc
add
cmpsb
push
out
scas
push
hlt
mov
mov
lods
pop
mov
stc
jecxz
sub
and
jbe
roll
jb
ja
iret
add
or
add
into
sldt
push
dec
push
dec
test
sbb
inc
or
add
jno
push
in
jbe
sbb
dec
repnz
push
mov
adc
outsl
push
iret
cltd
dec
sarb
scas
shrb
data16
add
daa
mov
out
pushf
add
xor
stc
inc
es
adc
push
and
ffree
lds
lods
mov
cmp
sbb
xor
push
sbb
add
aaa
add
pop
mov
inc
cmp
push
adc
idivl
movsl
test
pop
push
movsb
in
mov
scas
xor
push
jmp
jl
inc
sub
mov
in
jecxz
push
ror
dec
pop
aas
sbbb
das
mov
cmp
pop
mov
mov
dec
or
popf
shrl
jmp
pop
adc
xchg
lret
cwtl
ja
cs
or
add
sbb
mov
push
or
dec
ljmp
cmp
cld
lods
mov
mov
inc
push
push
dec
or
xchg
cmp
lds
nop
nop
nop
nop
nop
mov
mov
popa
test
fwait
pop
shlb
add
cld
stos
fmuls
mov
xlat
adc
test
cs
add
mov
push
sbb
ficoms
mov
inc
jmp
xor
jle
push
arpl
xor
push
adc
lea
outsb
loop
push
cld
movsb
cwtl
push
mov
test
xlat
ret
xchg
jnp
cmp
jecxz
icebp
mov
in
pusha
data16
int3
int3
int3
int3
int3
mov
dec
pop
jb
mov
push
sbb
cmp
push
adc
cmp
jns
and
lods
dec
xor
push
ficompl
fdiv
adc
cmp
inc
dec
inc
in
decb
repnz
sbb
inc
test
lock
sbb
adc
push
adcl
xchg
mov
adc
fwait
sub
add
movl
inc
cmp
mov
add
jle
mov
xor
fcomip
gs
cmp
xchg
push
push
xchg
movsb
loop
lcall
lret
stos
mov
call
stos
ljmp
test
cld
mov
sub
test
lcall
jge
inc
cmp
add
and
das
sahf
cmp
sar
jmp
push
xor
gs
dec
insl
rclb
pop
dec
sarl
adc
inc
loopne
insb
add
neg
mov
clc
push
mov
pop
jo
shll
std
in
lods
aad
addb
add
bound
lds
jnp
xchg
xor
pop
imul
sbb
or
mov
int3
int3
int3
int3
movsl
mov
sbb
out
lret
dec
jae
and
mov
cli
pop
push
shlb
adc
mov
xchg
mov
cmc
adc
adc
pop
fistl
scas
pop
sbb
dec
popf
xchg
outsl
cmp
jnp
mov
mov
mov
int
je
add
inc
mov
rcrb
xor
mov
xchg
pop
out
lret
jo
sub
pusha
int
add
push
xchg
daa
mov
mov
and
stos
jecxz
jbe
cmp
in
in
sbb
pusha
mov
imul
enter
divl
add
dec
and
jno
mov
lods
mov
cmpsl
inc
jp
pushf
ja
inc
cmp
xlat
les
out
push
push
or
xchg
stc
hlt
pushf
arpl
and
add
notl
adc
adc
addl
adc
jns
mov
mov
xchg
mov
push
neg
movsb
jmp
call
add
inc
mov
in
inc
divb
es
pusha
xchg
pop
and
rcll
shll
mov
daa
pusha
les
fdiv
sbb
scas
add
imul
stc
movsb
jmp
dec
ss
stc
add
cmp
cmp
add
mov
scas
pop
insb
mov
dec
and
lret
inc
iret
sbb
xchg
insb
pop
push
jecxz
cmp
stos
xchg
sub
pushf
sub
sarl
jo
sahf
push
mov
mov
mov
jb
shrb
fstl
add
insb
pop
imull
in
lea
xchg
sub
seto
xchg
mov
inc
stc
fwait
cld
xchg
jl
fcmove
mov
aam
stos
arpl
mov
jne
mulb
icebp
add
lret
xchg
fdivp
aaa
ret
hlt
push
sub
lret
push
dec
testb
popa
addl
sub
out
adc
jb
ret
mov
aam
nop
nop
nop
nop
notl
out
decb
pop
dec
or
rorb
lea
ljmp
jge
jnp
cli
cltd
and
and
push
ret
inc
jmp
add
std
js
adc
in
pop
arpl
sbb
add
add
jle
dec
popf
subl
mov
out
andb
and
mov
sbb
sbb
xchg
and
scas
xor
loop
pop
mov
shr
outsl
and
nop
nop
nop
nop
nop
std
cmp
jmp
pop
faddp
je
iret
pop
pop
xor
fldl
adc
lcall
cmp
fdiv
xchg
fisttps
pop
jo
scas
testb
outsb
mov
ret
push
lods
dec
xchg
daa
and
cld
push
mov
or
cmp
xor
push
jmp
or
test
dec
subl
jp
mov
cmp
stos
in
sbb
mov
adc
nop
nop
nop
nop
mov
add
sarl
inc
xchg
jp
in
sarl
pop
dec
mov
adc
or
add
call
xor
lock
push
xchg
adc
test
sbb
rcll
fcoms
or
test
xorl
mov
sahf
cmpsb
fstps
inc
fxch
cmc
jmp
popf
cmp
shrb
add
ds
sbb
data16
test
xchg
pop
mov
mov
xchg
shll
sub
mov
repz
rorl
jns
adc
repz
push
xchg
mov
int
cvtpi2ps
icebp
mov
lret
aaa
fisubrs
lret
sub
pop
lds
xor
add
mov
mov
in
xchg
mov
aas
rclb
inc
test
sub
nop
nop
nop
nop
nop
jmp
pop
sahf
mov
test
xor
cmp
out
ds
fwait
les
xchg
inc
sahf
faddl
pop
gs
push
and
add
cmp
add
pop
and
xor
test
push
int
inc
mov
gs
xchg
push
and
psrld
xor
adc
fmul
add
jb
mov
add
push
cld
bound
repz
jae
sbb
test
mov
mov
loopne
test
mov
bound
push
xchg
fcoms
lea
lret
xor
aam
dec
adc
fbstp
out
fwait
pop
mov
and
outsl
mov
mov
add
adc
jb
cwtl
or
add
inc
fstpt
cltd
cmpsl
mov
dec
fsubrl
int3
push
call
add
mov
xlat
dec
push
orb
dec
clc
sbb
sti
adc
sbb
rcr
dec
int3
int3
int3
int3
int3
test
lods
pop
lcall
adc
mov
dec
lods
mov
btl
add
add
shll
nop
nop
out
cld
xchg
dec
in
push
addr16
push
mov
pop
xchg
andb
js
inc
jmp
push
test
cwtl
add
mov
mov
adc
add
jecxz
and
and
mov
test
sti
push
ret
adc
adc
dec
sti
push
mov
mov
ljmp
sub
pop
cmp
pop
sbb
lret
inc
cmp
data16
pop
cmpsl
mov
pop
push
push
inc
mov
mov
push
cmp
add
push
std
cwtl
adc
rol
xor
mov
mov
and
shll
add
test
xchg
xor
test
inc
jb
add
imul
sub
js
inc
popa
outsl
out
rclb
clc
jge
lret
push
dec
and
inc
popa
inc
outsl
push
adc
ss
mov
and
xchg
pusha
testl
cmp
idivl
pop
cmp
inc
testl
dec
mov
jno
pop
addr16
outsb
pop
dec
push
idiv
aam
cmp
xchg
add
mov
xchg
ljmp
andb
stc
jl
ror
mov
sarb
sbb
out
mov
mov
or
cmc
mov
mov
xlat
cmp
cmc
aas
aad
push
cmp
call
orb
and
jnp
out
aaa
add
mov
jmp
mov
sub
xchg
fidivrl
shll
repz
fldcw
or
leave
mov
dec
scas
repz
jbe
push
int
dec
sub
add
jnp
push
or
faddl
sbb
lds
and
pop
mov
xchg
jge
repz
xor
imul
je
cmp
mov
xor
icebp
cmp
roll
jp
mov
stos
push
sbb
cmp
fidivrl
sub
js
test
mov
cmp
add
rorl
pop
cmp
daa
stc
xchg
punpckldq
mov
lret
push
pop
sbb
popl
add
stos
aam
or
loopne,pn
addl
jbe
xchg
clc
inc
fimuls
divb
out
iret
pop
push
lods
pop
dec
push
daa
enter
xchg
push
pcmpgtb
xchg
fs
movsb
mov
adc
in
add
mov
dec
pop
mov
add
fwait
add
divl
mov
push
mov
or
mov
lds
inc
daa
mov
lcall
test
outsl
pop
inc
dec
and
mov
bound
lahf
mov
inc
repnz
push
xor
inc
push
fnstenv
push
lods
roll
popf
add
mov
addr16
popf
nop
nop
nop
nop
nop
sub
push
clc
add
ja
mov
xor
pushf
clc
sar
inc
pop
test
ret
int3
int3
int3
int3
int3
in
scas
adc
sub
mov
call
icebp
add
jge
in
and
mov
imul
or
sahf
xlat
or
or
cmp
mov
sbbl
add
xchg
jae
inc
xor
repz
lods
test
push
fs
mov
mov
sbb
inc
mov
into
cmc
sub
arpl
jb
sbb
sub
fwait
sub
stos
cld
jp
ret
jg
jno
outsb
js
sbb
sub
mov
ret
pop
adc
mov
mov
mov
outsb
jp
sub
stos
ret
sub
push
push
push
adc
lods
out
flds
movzbl
xor
mov
pop
sbb
adc
rcr
jp
and
je
add
fnstsw
add
subl
bound
fimull
add
push
scas
mov
andps
sbb
cmpsl
xlat
scas
xor
faddl
jae
lods
cli
repz
jno
sub
das
fbstp
iret
ret
and
cmp
add
cmp
mov
fimull
loop
imul
mov
jg
loop
sub
fdivrs
test
add
cmp
test
dec
sbb
mov
push
mov
adcb
jo
mov
movsl
insb
xchg
repnz
sti
jg
and
sbb
jns
into
mov
sbb
xchg
dec
mov
fildl
add
cwtl
mov
outsb
fldl
and
test
mov
add
adc
inc
jbe
mov
adc
es
pop
ret
gs
mov
ret
xchg
pop
dec
stos
mov
aaa
roll
pop
out
cld
jbe
xor
mov
push
repz
nop
nop
nop
nop
nop
cmp
and
imul
xor
add
add
out
pop
push
movb
push
mov
rclb
call
test
sub
inc
in
int3
int3
int3
int3
int3
aad
ret
adc
aaa
or
add
das
jb
jno
sub
mov
xor
cli
xchg
lods
bound
dec
push
xchg
loopne
sub
fucomp
mov
sbb
das
push
xchg
xorl
mov
leavew
adc
or
add
repnz
jle
stc
cmpsl
cmp
inc
mov
inc
repnz
in
scas
pusha
jo
inc
mov
pop
sub
std
jmp
mov
aas
xor
test
adc
repnz
and
in
mov
imul
or
add
imul
dec
jmp
add
insb
pop
xchg
mov
mov
nop
add
cmp
ret
add
and
adc
outsb
lcall
pop
mov
dec
adc
daa
mov
inc
out
jb
push
je
jp
pop
mov
nop
nop
nop
nop
nop
imul
xor
orb
sbb
insb
fisttps
pop
cmpl
mov
icebp
icebp
jmp
add
aam
push
sahf
ss
call
lcall
outsl
andb
jmp
add
cmpsb
lods
sub
push
or
push
or
xchg
call
dec
xor
add
jmp
dec
and
sahf
sti
test
hlt
xchg
jo
pop
gs
lret
pushf
test
pushf
cmc
mov
aas
ret
fstps
xchg
add
jb
add
orb
push
lret
call
jge
mov
ss
ja
lret
aaa
dec
mov
das
int3
int3
int3
int3
int3
pop
cmp
adc
xchg
das
adc
and
sbb
push
daa
subl
popa
and
imul
add
test
xchg
xchg
jnp
fdivrl
push
add
or
adc
iret
jp
icebp
jns
cs
dec
xchg
fcmovu
out
nop
nop
nop
nop
nop
jmp
int
orl
mov
pusha
outsb
xlat
add
int3
or
xchg
sub
add
lds
repnz
scas
mov
dec
xchg
xchg
and
int
add
lds
mov
mov
ja
mov
bound
push
movsb
jge
mov
cmp
pop
mov
js
add
imul
loopne
psllq
out
mov
mov
orb
xchg
loopne
das
pop
or
nop
mov
mov
insl
xchg
mov
out
mov
popf
pop
cld
sub
rorb
push
add
lea
xor
les
out
ficomps
ret
cmp
add
lahf
adc
nop
nop
nop
nop
nop
mov
int3
int3
int3
int3
int3
pop
iret
scas
xor
xor
cltd
fs
sarb
andl
inc
maskmovq
testl
jnp,pn
inc
in
scas
clc
dec
out
xchg
cmp
or
aaa
and
fsubrs
js
scas
repnz
dec
jg
insb
lahf
lods
xor
stos
push
push
mull
nop
nop
nop
nop
nop
mov
or
test
into
dec
test
mov
dec
push
mov
insl
std
mov
cmpb
add
mov
inc
inc
inc
fimuls
or
aam
ret
es
in
clc
fwait
mov
orl
nop
nop
nop
nop
out
xor
push
into
and
insl
test
mov
in
data16
out
divl
add
adc
mov
js
fucomip
jb
sub
or
add
hlt
inc
cld
pop
daa
jns
and
jne
or
dec
fsts
movl
int3
icebp
push
outsl
mov
pop
ss
outsl
push
iret
lods
mov
std
push
sbb
jmp
ja
cmp
invd
ljmp
xor
arpl
mov
daa
clc
enter
arpl
test
mov
cmp
inc
inc
xor
cmp
mov
cmpsb
cwtl
mov
cs
fildl
add
jno
dec
gs
or
popf
ljmp
mov
push
clc
pop
clc
aam
test
add
sti
das
call
icebp
cld
mov
cmpsl
push
data16
and
inc
sub
and
add
clc
jb
int3
int3
int3
int3
inc
mov
sti
jno
mov
push
fwait
bound
jne
sub
aaa
jnp
nop
nop
nop
nop
push
icebp
jo
adc
call
hlt
enter
sub
dec
sbb
scas
ret
sbb
dec
rorl
or
aas
popa
mov
dec
pop
popf
adc
data16
xor
mov
daa
cltd
xchg
repnz
loop
jmp
push
cmp
ds
sbb
adc
add
mov
xchg
sub
mull
push
lods
xor
ret
scas
insl
inc
inc
icebp
and
arpl
cmpb
sub
sbb
daa
add
cmpsb
sbb
pop
adc
xlat
icebp
cmp
and
pop
adc
imul
add
fwait
push
cmpsl
push
xchg
data16
and
scas
or
inc
repz
push
aad
je
cmp
rolb
xchg
bound
call
sbb
add
je
jns
iret
dec
pushf
xchg
mov
sub
jp
and
iret
add
xchg
jle
daa
out
jge
mov
lcall
jns
int
pop
movsb
mov
jmp
sbb
add
lahf
dec
in
icebp
add
pop
pop
jle
nop
nop
nop
nop
cltd
push
call
sbb
add
dec
fnsave
rcrb
movsb
leave
mov
add
add
test
add
cmp
pop
mov
pop
xchg
add
dec
and
cwtl
cld
xchg
push
mov
test
push
hlt
dec
call
pop
mov
sbb
adcb
xchg
leave
and
lods
and
shlb
mov
xchg
dec
push
xchg
cmp
int3
int3
int3
int3
and
sahf
mov
nop
nop
punpckhwd
and
out
adc
fmul
fucom
xchg
mov
imul
or
stos
scas
dec
dec
test
jmp
pusha
lcall
adc
cmp
cld
repz
mov
mov
fldl
rcrl
mov
idivl
fwait
push
fwait
mov
adc
push
mov
scas
mov
leave
mov
push
aaa
sub
fsubl
aad
mov
mov
mov
shll
xor
gs
dec
in
subb
sbb
jmp
pop
sahf
cmp
into
in
mov
adc
int3
int3
int3
int3
inc
call
ja
std
pop
ficoms
cmp
push
mov
pop
cs
push
and
addl
cmp
inc
fwait
lds
daa
out
pushf
push
dec
xor
add
sbb
int3
int3
int3
int3
pop
sahf
ja
push
jecxz
jg
sbb
repz
sub
imul
xchg
icebp
fiadds
xchg
jns
int3
int3
int3
int3
int3
sbb
repnz
add
test
aam
cmpsb
or
add
lret
mov
cs
jnp
mov
aaa
scas
jmp
push
lods
stos
cmp
jae
adc
dec
dec
xchg
pop
add
adc
insb
ja
repnz
das
insl
pop
mov
jle
pop
or
cmp
mov
pusha
test
inc
adc
loopne
out
lahf
out
or
jle
push
pop
lcall
cmpsl
pop
in
dec
in
repz
les
add
jns
data16
cmc
rorb
jg
jecxz
add
xor
stos
add
xchg
add
pop
fwait
lret
ret
std
sbb
movsb
loopne
sbb
shll
sahf
roll
push
int
jmp
cmp
mov
and
movsb
mov
pop
dec
rcl
mov
xor
sbb
imul
xchg
jp
jne
and
jns
jno
push
icebp
int
jno
add
mov
add
enter
xlat
in
lahf
lret
loope
nop
nop
nop
nop
inc
xor
cmpsb
lcall
jbe
cltd
lret
mov
sbb
outsb
ret
sub
nop
nop
jns
cs
sbb
sbb
loope
pop
mov
in
stos
call
js
jmp
nop
nop
nop
nop
nop
mov
xor
sub
pop
sbb
add
jbe
mov
dec
imul
mov
jge
xor
test
lret
inc
lahf
test
shl
mov
sti
in
push
fstpl
inc
add
sub
mov
test
cli
xor
out
push
les
xchg
fadds
nop
nop
nop
nop
nop
outsl
sbb
pop
int3
int3
int3
int3
int3
shrl
dec
or
das
out
sub
mov
add
out
inc
je
adc
int3
int3
int3
int3
jecxz
lcall
aad
repnz
rorl
pop
mov
mov
inc
mov
out
and
sbb
push
xor
add
in
add
jns
mov
sub
add
push
push
ret
or
push
negl
push
rorb
sbb
inc
ja
iret
pop
xor
add
add
add
mov
cld
xchg
lcall
fucomp
add
aaa
jb
inc
scas
sahf
mov
loope
xor
int3
int3
int3
int3
int3
scas
inc
sbbb
test
or
sbb
pushf
or
adc
mov
jecxz
pop
sbb
add
mov
rcl
int
inc
enter
icebp
dec
lret
in
outsb
iret
int
lret
dec
mov
mov
pop
pop
je
outsb
mov
inc
out
mov
push
dec
aad
jmp
daa
jp
adc
xchg
sub
hlt
imul
pop
inc
cmpsl
mov
jo
fucomp
xor
test
ffree
sub
cmp
enter
pcmpeqd
xor
mov
in
rorb
sbb
data16
mov
fcmovne
aam
out
and
push
pop
add
out
push
or
inc
mov
cli
jmp
ret
cli
ss
mov
dec
push
or
cld
out
xchg
iret
insl
stos
mov
add
mov
sarb
add
or
fidivs
in
rcll
push
jne,pn
call
pusha
sub
add
bound
rcr
gs
in
push
mov
mov
cmp
aad
xchg
jo
out
inc
pop
push
add
xor
js
xchg
mov
cmc
popa
pop
sbb
int3
int3
int3
int3
lret
mov
cmp
movsb
xchg
shll
mov
inc
mov
sar
psrlw
cmp
int
xor
fmuls
add
xchg
in
adc
sbb
xchg
clc
loop
in
pusha
notb
jno
sbb
dec
lret
lret
es
ss
sbb
mov
jl
pop
and
loope
enter
mov
bound
adc
adc
jg
stc
jp
inc
sub
xor
loopne
jno
roll
insb
pop
scas
inc
loop
inc
sbb
add
xor
add
push
aaa
loopne
pop
fcmovnu
lea
nop
nop
nop
nop
fld
loopne
stc
stos
cmp
pop
js
mov
mulb
outsl
imul
jne
mov
and
lahf
rcrb
xchg
jmp
call
sub
add
ds
sbb
push
cmp
add
ss
sub
insb
call
push
or
add
scas
fadds
mov
jg
add
mov
jno
push
add
cmpsl
cmpsb
bound
xor
out
xchg
enter
loop
lahf
and
lcall
out
push
scas
and
pop
das
add
mov
xor
sub
fildl
add
xor
or
ljmp
cmp
or
out
cmp
out
fnstcw
shr
adc
leave
xor
pop
add
and
xor
or
inc
outsl
cld
rorb
dec
sbb
test
add
adc
jae
adc
in
js
mov
push
stos
mov
jmp
lcall
mov
sbb
sub
xor
aaa
push
js
jle
loop
andb
or
mov
pop
leave
mov
mov
push
xor
cmp
ja
cli
fwait
mov
lret
fnsave
sbb
cld
sub
inc
call
mov
int3
int3
int3
int3
js
adc
scas
pop
dec
push
mov
sub
or
into
cld
cmp
sbb
push
push
dec
push
int3
arpl
mov
xor
add
test
inc
test
imul
push
lret
pop
loop
je
cwtl
inc
add
sub
orl
pop
cmp
dec
lock
pop
pop
lret
flds
cld
loopne
jns
mov
stc
aaa
in
clc
sbb
push
push
ljmp
lds
jl
cmpsl
mov
push
outsl
cmp
popa
pop
fs
adc
int3
int3
int3
int3
les
mov
mov
xchg
les
pop
dec
inc
jl
pusha
pop
mov
push
movsl
cmp
imul
push
add
xchg
mov
int3
int3
int3
int3
int3
arpl
div
inc
mov
add
imul
fsubp
mov
outsb
push
mov
dec
jmp
ds
scas
fisubrl
fcmovb
addb
inc
mov
dec
icebp
ret
sub
psrlw
jo
push
cwtl
in
xor
add
in
and
sbb
inc
idiv
and
loopne
cmp
cmp
add
mov
fimull
nop
nop
nop
nop
fucomp
mov
das
or
jnp
sub
add
fsts
clc
mov
dec
sub
add
testl
jmp
ret
stc
mov
xchg
ret
jl
jns
lods
xor
cmp
mov
or
sbb
pop
nop
nop
nop
nop
nop
adc
lods
lea
fs
xor
push
sbb
pop
decb
mov
pop
or
loop
daa
or
push
dec
out
and
mov
jp
imul
add
xchg
push
bound
add
cmpb
mov
out
jo
lcall
call
cmp
mov
mov
sti
repnz
pop
enter
cltd
sbb
sarb
add
add
mov
je
pop
push
into
mov
cmp
in
pop
aas
adc
sahf
jg
xlat
jo
xchg
aad
inc
fwait
jmp
insb
inc
dec
in
rcll
push
test
mov
jge
sub
jp
hlt
outsb
inc
aam
ja
repnz
stos
lock
cwtl
adc
push
dec
cmp
ret
xor
je
inc
scas
sarb
rorb
jge
inc
xor
add
lds
xchg
scas
push
into
fisubl
stos
fdivl
cld
test
insb
popf
ret
or
call
add
dec
int3
int3
int3
int3
int3
inc
cs
push
mov
add
lds
shll
or
bound
push
push
mov
mov
push
jnp
inc
sahf
int
sub
ficoms
add
divl
cs
inc
es
sbb
out
dec
xor
out
inc
mov
sbb
das
jge
lea
mov
sbb
jo
out
push
mov
je
and
in
sub
adc
shll
sbbb
push
in
call
mov
outsl
lds
clc
sar
roll
cmpsl
jg
mov
xlat
ret
mov
jle
xlat
arpl
sbb
imul
lcall
leave
mov
add
pop
and
mov
inc
mov
push
leave
and
jb,pt
fldt
add
cmp
ss
fwait
dec
pop
sbb
sti
inc
adc
mov
xchg
jg
mov
daa
add
aas
xlat
aam
or
int3
int3
int3
int3
loopne
out
and
in
mov
and
mov
out
mov
inc
jmp
fists
push
fildll
mov
sub
sbb
add
jl
test
pop
mov
ret
cld
mov
xor
jg
ret
dec
jo
sbb
and
jae
cmp
dec
shll
and
cli
push
add
fsts
pop
loope
push
add
lahf
and
enter
inc
add
or
cmp
jno
adc
std
adc
mov
sar
out
in
ret
bound
sub
or
xchg
pusha
add
and
sub
jb
nop
nop
nop
nop
nop
sbb
add
jp
cmpb
sbb
add
add
dec
mov
dec
sbb
add
and
fisttpl
fwait
add
or
mull
xchg
shr
ret
repz
cli
sbb
or
and
dec
popa
push
jne
mov
xor
int3
int3
int3
int3
add
add
dec
mov
mov
adc
in
mov
adc
jl
adc
movsb
test
and
and
jns
jb
xor
mov
stos
sub
or
add
data16
and
fsubrs
insb
cmp
cmc
inc
adcl
jns
mov
fidivs
in
andb
dec
add
cld
jg
xor
aad
xlat
cmc
mov
sub
lea
pop
mov
icebp
out
xchg
pop
mov
sub
in
xor
push
int3
int3
fimull
loop
inc
push
stos
mov
and
call
cmp
add
jns
fwait
cmp
pop
add
or
adc
enter
lcall
pop
sbb
cwtl
sub
in
loop
data16
mov
adc
call
xchg
mov
adc
push
cld
and
loop
mov
cmp
aaa
push
enter
jg
mov
adc
pop
leave
out
shll
cmp
rclb
pop
add
outsl
sti
jge
dec
mov
icebp
jne
or
addr16
mov
or
adc
adc
jl
xchg
sub
adc
sub
cmp
sbb
add
addl
call
cwtl
sar
int3
int3
int3
int3
fbld
adc
js
je
in
mov
mov
mov
mov
mov
ret
pushf
pop
xchg
outsl
mov
mov
xchg
cltd
nop
nop
nop
nop
nop
dec
mov
cwtl
std
mov
adc
push
sbbl
cmp
add
xchg
movsb
rorl
and
shll
add
xor
inc
lds
mov
hlt
or
push
mov
les
mov
pop
arpl
fsubp
sub
dec
mov
fcompl
and
rclb
ljmp
push
insb
push
rcll
xchg
and
inc
pop
xor
xor
repnz
and
ror
jge
push
aas
pop
adc
sahf
fidivrl
fstl
xchg
sti
insl
out
les
push
mov
shrl
mov
dec
cwtl
leave
lret
int
inc
xor
fadds
cltd
add
fsubrp
shlb
mov
insb
add
cmc
aaa
cld
xchg
mov
mov
cli
cmpsb
movsl
sub
and
jp
push
out
jne
fadd
stos
fsts
adc
dec
bound
jl
insl
push
mov
and
adc
and
push
jb
fcos
adc
add
jns
sub
nop
nop
nop
nop
nop
cwtl
mov
into
lcall
orb
frstor
and
adc
and
jmp
adc
mov
das
dec
sbb
rclb
outsb
xchg
dec
push
nop
sub
call
packsswb
mov
jp
clc
mov
data16
outsb
push
sti
repnz
cld
cld
mov
int3
int3
int3
int3
ret
outsb
push
fidivrl
xor
jb
test
jae
mov
jp
rcrl
shrb
js
or
subb
mov
gs
pop
int
mov
lods
test
addl
sti
nop
nop
nop
nop
nop
movsb
adc
sub
add
test
adc
or
rsqrtps
mov
dec
sub
pop
sbb
jle
sub
and
xchg
push
dec
or
cmp
adc
sti
mov
sbb
ret
push
test
fsubrs
add
stos
mov
cmp
adc
adc
clc
adc
add
movq
mov
inc
and
in
das
shll
outsb
sub
add
xor
inc
cmovb
sti
in
push
push
add
adc
dec
adc
add
arpl
sub
xchg
jae
push
mov
or
sbb
ret
pop
in
fistps
add
insl
outsl
sar
inc
test
xor
add
add
lahf
pop
mov
loop
filds
xchg
shufps
mov
decl
add
cmp
pop
repz
mov
mov
xor
pop
je
xlat
rep
cmp
into
popa
push
in
lods
push
mov
loop
loopne
xor
cltd
mov
xor
adc
mov
cmp
mov
mov
pop
ret
stos
rcrl
mov
lods
insb
sub
enter
or
stc
xchg
xchg
popf
scas
loopne
movups
ljmp
pop
mov
sbb
sarb
mov
pusha
mov
pop
xchg
xchg
push
add
in
xchg
xor
hlt
sbb
add
rcrb
add
dec
cltd
or
jg
int3
int3
int3
int3
jnp
iret
jmp
inc
jno
jle
sbb
cltd
gs
mov
dec
out
cmp
cmc
les
pusha
and
sub
lret
dec
ret
cmp
pop
mov
fsubs
mov
sub
add
or
int3
int3
int3
int3
int3
test
cli
mov
adc
dec
pop
out
jmp
inc
sub
pop
mov
insl
fcomp
pop
cwtl
inc
mov
fistpl
sub
sub
pop
in
and
mov
pop
or
xchg
push
inc
nop
nop
nop
nop
nop
sub
daa
adc
jge
jle
das
hlt
dec
mov
repz
dec
das
add
inc
and
ret
sahf
test
aaa
pusha
inc
adc
and
and
sarb
xchg
mov
and
pop
mov
popf
ljmp
inc
push
lret
sbb
jl
pop
xchg
and
lock
movsl
mov
hlt
fs
arpl
pop
loope
lret
dec
imul
sub
mov
inc
jmp
add
test
inc
jmp
xchg
adc
add
gs
or
loopne
adc
into
sbb
sub
ss
dec
or
stc
jmp
rcrl
aad
sub
test
inc
mov
xchg
daa
cmp
ficompl
and
xchg
push
mov
imul
leave
out
and
mov
pop
pop
xchg
mov
mov
cwtl
andl
add
lods
les
mov
mov
and
xchg
add
pop
ljmp
cwtl
sub
push
pop
movsb
popa
cld
insb
and
adc
push
push
ljmp
loopne
pop
xchg
call
orb
data16
dec
dec
dec
sbb
cld
add
and
arpl
lcall
lcall
add
ds
cmp
cmp
and
mov
pop
arpl
imul
xchg
ret
or
mov
inc
xor
ffreep
movsl
cmp
nop
nop
nop
nop
nop
adc
and
cmp
popa
jmp
es
frstor
out
mov
js
sahf
jecxz
mov
les
jnp
xchg
dec
or
movsb
je
int3
int3
int3
int3
int3
sub
adc
jnp
testb
mov
push
scas
or
mov
xchg
pop
lahf
pop
sbb
xor
leave
xlat
jnp
inc
aas
and
mov
xor
adc
mul
test
hlt
popa
sbb
adc
mov
push
cld
lods
insb
outsl
in
out
push
xor
xor
sbb
nop
nop
nop
nop
or
push
adc
xchg
xor
inc
sbb
mov
pop
aad
or
dec
cmp
or
add
mov
push
inc
mov
outsb
push
fidivs
cmp
add
push
repz
and
mov
scas
xchg
sti
inc
mov
mov
loopne
es
sbb
int
lret
into
leave
mov
int
hlt
push
in
mov
repz
popf
inc
jo
pushw
or
xchg
sub
add
fdivrl
jp
flds
fwait
sub
inc
and
xchg
out
push
push
jbe
rorb
jne
mov
lea
xchg
in
pushf
icebp
mov
mov
sub
mov
mov
lret
mov
shl
mov
adc
lock
sbbl
movsl
and
mov
add
mov
add
push
cmp
dec
addr16
push
jecxz
pop
and
mov
into
lret
xor
dec
sbb
test
pop
sbb
add
pop
stc
mov
repnz
icebp
lock
bound
scas
test
inc
inc
mov
xchg
in
jge
shrl
push
popf
addl
lahf
aaa
mov
push
mov
mov
outsb
bound
jg
ds
inc
cmp
jo
clc
cmp
bnd
jle
pop
ljmp
jl
adc
sub
shll
pop
ret
dec
rorl
out
sub
cmp
int3
int3
int3
int3
lods
xor
or
sti
xchg
int
sub
icebp
cmpsl
nop
nop
nop
nop
nop
add
fwait
sbb
lcall
nop
nop
in
adc
add
insl
dec
fxch
into
in
mov
icebp
int
jns
dec
test
test
mov
push
jp
call
adc
add
cmpsb
stc
sti
pop
mov
fdivl
jge
cld
sub
test
stos
daa
popa
mov
jle
push
enter
push
aaa
mov
xor
add
or
cmp
rcll
cmp
cmc
xchg
or
shlb
inc
dec
roll
mov
int3
int3
int3
int3
int3
ja
xchg
mov
add
ds
cli
xor
cmp
fistpll
sarb
sbb
and
push
push
pop
inc
adc
xchg
out
xor
sub
loop
inc
in
push
and
xor
pop
cs
sub
and
add
mov
push
jmp
mov
rcrb
aas
or
pop
mov
add
jae
scas
test
cld
in
inc
and
inc
fwait
inc
lcall
addl
push
or
mov
pop
sbb
cs
xchg
mov
rcll
pop
xor
nop
nop
adcb
int3
int3
int3
int3
js
jae
jl
imul
inc
pop
cmc
cmp
mov
jp
mov
add
jle
int3
int3
int3
int3
out
lods
jno
jbe
jp
clc
xor
lret
div
fldt
fistl
jg
inc
or
adc
ljmp
push
insl
push
pusha
and
out
jbe
scas
mov
fs
add
mov
add
imul
nop
nop
nop
nop
nop
jbe
ja
ret
mov
xchg
aad
pop
and
fwait
out
popa
adc
add
sub
pop
and
pop
sti
js
insb
adc
add
cld
std
push
es
loop
jecxz
data16
add
mov
jmp
add
and
iret
cmp
add
data16
insl
ret
sarl
or
sub
movsl
pop
xchg
and
xor
and
lea
xchg
push
sti
dec
sti
mov
lock
dec
fwait
subl
mov
out
push
mov
fdecstp
pop
repz
je
dec
stos
aad
insb
jns
adc
mov
aad
mov
ret
jns
imull
push
xor
cs
nop
nop
nop
nop
nop
ja
pushf
int
cmp
xchg
jnp
fmul
adc
jle
insb
jae
dec
cwtl
int3
int3
int3
int3
int3
ss
mov
daa
cmpl
pop
in
push
dec
xchg
mov
out
es
jb
insb
in
cmp
sbbb
les
shll
mov
cmc
jge
fnstsw
jl
rolb
fadds
sbb
and
sub
mov
jp
mov
pusha
push
testl
xor
jmp
sti
pop
jne
jns
fisttpll
or
pop
lea
fisubrl
pop
push
mov
in
and
lret
xor
cmpsl
or
xchg
xchg
fcom
dec
jbe
xor
push
loopne
pusha
sbb
cmp
jne
lods
jge
push
cmp
pop
xchg
jmp
int3
stc
in
ja
std
dec
popa
lahf
sub
int3
int3
int3
int3
int3
push
shlb
pop
mov
cmp
inc
sub
data16
loopne
push
aam
inc
cltd
outsb
push
xchg
jns
call
inc
ss
outsb
xor
jbe
lea
test
int3
int3
int3
int3
int3
jmp
insl
adc
mov
scas
cmpsb
mov
pop
rcrb
in
mov
nop
nop
nop
nop
nop
mov
adc
xor
mov
sub
add
fcmovu
mov
add
je
sarl
lahf
ret
pop
sbbl
incb
sub
sti
ror
in
lock
inc
pop
ret
and
push
scas
xor
je
cmp
mov
stos
jb
mov
xchg
sub
in
idiv
fidivs
dec
ret
in
push
xchg
loopne
rcll
sahf
xor
lods
iret
int
and
sbb
jno
out
rcrb
xchg
jge
add
xor
stos
ja
sub
popa
mov
enter
bound
dec
jl
mov
aas
mov
out
shl
out
xor
adc
test
lahf
es
xlat
test
aaa
in
pop
std
ds
mov
cltd
call
sbb
punpckhwd
push
ffreep
cwtl
in
bound
scas
or
mov
pushf
mov
and
sti
in
pop
dec
rcrb
rcr
aad
rclb
sbb
or
shll
mov
cmp
and
lret
stos
mov
add
dec
xlat
shll
sbb
and
jle
nopl
or
cmp
add
jno
sbb
sub
push
jbe
cmp
cwtl
out
mov
insb
popa
jmp
inc
and
cmp
lea
pop
dec
imul
push
jl
cmp
les
jmp
push
fcom
in
adc
inc
inc
sahf
or
dec
pushf
or
jmp
leave
lahf
out
cmp
data16
dec
add
add
cs
popa
mov
sbb
push
mov
out
cmp
sbb
div
test
jg
es
pusha
divl
or
push
jle
sti
mov
iret
sub
aam
mov
add
shll
xchg
sbb
add
and
out
pushf
push
jbe
mov
mov
sbb
or
aam
mov
mov
sbb
jns
add
mov
subb
je
mov
jge
add
fwait
adcl
pushw
imul
jne
es
jmp
xor
fwait
mov
pop
js
adc
mov
add
mov
dec
or
dec
aad
mov
sub
xor
push
sub
mov
cli
sbb
fs
aad
mov
add
jecxz
adc
pop
fcomp
filds
bound
iret
add
xchg
pop
rorl
clc
dec
and
ret
mov
sub
iret
sub
shll
add
pop
fstps
sbb
mov
mov
jnp
dec
add
pop
cmp
xor
daa
sahf
ds
test
xchg
pop
jge
fwait
mov
jo
pop
xadd
aas
jge
jmp
notb
add
lock
push
xchg
sbb
imul
add
mov
xchg
or
cltd
add
xchg
scas
ds
and
sahf
test
in
xchg
mov
or
adc
cmp
xor
xlat
loope
push
add
jmp
lods
imul
adcb
sub
add
add
dec
xchg
mov
stos
or
xor
movsl
mov
jecxz
in
or
jo
cltd
int
aad
shlb
push
push
or
mov
lea
fs
adc
fistpl
pop
jle
jp
push
jns
push
aas
pop
push
lret
mov
test
int3
int3
int3
int3
pop
aam
imul
cmp
andl
xchg
mov
cmp
mov
pop
lahf
push
or
mov
das
cmp
pop
mov
dec
stc
mov
mov
dec
xor
rorl
cs
mov
pusha
orl
add
fisubrs
push
jne
imul
jne
cmpb
cmpsl
lods
outsb
or
mov
stc
shlb
in
mov
mov
andb
xlat
cmp
jmp
jns
stos
sahf
pop
das
fld
cmpsl
cmp
and
push
subl
out
xchg
fldl
sbb
ja
jg
or
or
mov
add
pop
sub
lcall
fwait
and
xor
mov
fs
mov
out
inc
fwait
test
ja
shll
xchg
sub
adc
xchg
pushf
daa
fcmovbe
xchg
sbb
aaa
push
bound
fs
xlat
pop
add
xor
imul
xchg
push
cmp
jmp
test
test
lahf
push
aam
jg
orb
lcall
and
call
imul
push
adc
xlat
jge
aas
scas
jnp
mov
inc
add
dec
dec
shll
cli
mov
add
test
inc
xchg
cmp
mov
adc
sub
sub
adc
push
cld
push
imull
jmp
mov
decb
pop
push
aad
mov
jae
in
add
xchg
mov
cmp
int3
int3
int3
int3
add
push
mov
sahf
jmp
add
pushf
or
pop
xchg
ljmp
and
add
loope
into
or
add
call
push
add
pop
push
mov
movsb
mov
movsl
pusha
scas
jae
mov
sub
pop
cmc
out
dec
jl
inc
test
xchg
sub
outsb
xlat
pop
jmpw
addr16
xchg
dec
xchg
xor
andl
jno
sbb
adc
fst
fs
inc
xchg
cmc
lods
jecxz
mov
out
xchg
xchg
movsl
and
push
dec
sbb
cmpsl
sbb
xchg
and
jecxz,pn
mov
bound
mov
movsl
fucom
inc
and
pop
ret
sbb
xchg
cmp
testb
xor
or
pusha
mov
cmp
inc
bound
dec
jno
scas
mov
sub
jle
loopne
fwait
cmp
int3
int3
int3
int3
int3
sub
add
xchg
jo
push
xchg
stc
in
loop
mov
push
shll
inc
push
lcall
nop
nop
nop
nop
pop
mov
sub
decb
jge
add
ss
add
jecxz
jmp
pop
xchg
negl
cmc
mov
js
decb
repz
iret
js
daa
rolb
inc
cmp
or
push
jmp
fcmovbe
or
inc
inc
aas
rcrl
xchg
out
cmpsb
xor
cli
loope
or
push
mov
lods
out
add
fstpl
push
in
and
add
fstpt
inc
or
adc
arpl
and
lods
add
add
leave
vmptrst
push
popa
cmp
js
or
pop
mov
inc
data16
push
cmp
adc
in
rcl
int3
int3
int3
int3
int3
and
and
add
je
out
lds
stos
inc
adc
jle
jecxz
pop
jnp
adc
dec
and
pop
sub
and
in
jmp
fdivs
fisttpll
stos
sbb
shlb
lods
adc
loopne
xor
or
call
ja
shlb
icebp
add
inc
movsl
fmull
cltd
lret
adc
mulb
movsb
cmovs
mov
enter
shlb
shrl
test
nop
nop
nop
nop
nop
popa
mov
shrb
sub
pop
fs
orb
pop
mov
mov
sub
xor
add
add
mov
test
pop
dec
mov
imul
mov
loopne
xor
pop
stos
mov
pop
mov
jae
or
fldt
sub
ljmp
adc
sbb
sarb
rol
xlat
mov
pop
repz
xlat
js
fdivrs
fsubs
push
cmpsb
or
ja
lahf
and
test
mov
add
aam
int
jg
sub
push
inc
adc
imul
mov
inc
iret
lret
inc
mov
dec
in
mov
mov
xchg
push
xchg
cmc
mov
lea
popa
mov
push
adc
mov
dec
int3
int3
int3
int3
int3
jo
outsl
fdivs
dec
push
in
test
je
mov
mov
mov
shl
sub
add
adc
das
xchg
adc
subb
jnp
xchg
push
into
xor
leave
jb
mov
into
fidivl
jae
aaa
push
mov
pop
out
filds
aas
add
or
adc
aam
mov
adc
sub
fiaddl
mov
xor
dec
sbb
sbb
add
cwtl
shl
std
jbe
lret
mov
jae
scas
sbb
and
add
inc
dec
xchg
sbb
out
mov
stos
and
add
call
and
in
xlat
je
push
mov
push
clc
inc
mov
insl
and
mov
adc
das
fdiv
push
aas
inc
js
mov
les
out
add
mov
sbb
lds
fldl
mov
push
iret
jno
int
movsl
repz
push
mov
stos
jns
ret
dec
test
aam
sbb
jns
js
jb
rcr
cmp
mov
mov
cmpsl
jp
push
inc
mulb
sbb
and
ljmp
pusha
or
dec
sbb
aas
aad
jb
push
dec
negb
fsub
insb
jp
pop
pop
stc
outsl
scas
loope
mov
imul
dec
mov
jnp
pop
push
sub
dec
imul
push
insb
insb
scas
stc
push
fists
popl
inc
std
add
inc
xchg
sbb
push
mov
lock
add
imul
adc
adc
sbb
fdivs
leave
dec
add
mov
sub
mov
gs
scas
out
or
pop
push
pop
pop
shlb
xchg
jnp
cmpsb
inc
xor
inc
or
into
jae
stos
pop
movsl
rorb
add
pop
sbb
push
mov
cmpl
lock
outsb
mov
mov
adc
popf
mov
out
mov
arpl
nop
ret
je
mov
enter
mov
sub
addl
popf
dec
add
mov
popf
inc
mov
xchg
cmp
insb
aam
nop
nop
nop
nop
nop
pop
jecxz
add
add
jbe
push
and
pop
fstps
insb
xor
lds
ja
inc
shrb
in
mov
jge
xchg
cmp
jb
add
push
hlt
jo
insb
mov
push
mov
js
inc
pop
dec
jno
test
popa
test
mov
daa
enter
mov
mov
mov
lods
in
pusha
stos
pushf
dec
mov
add
rolb
or
add
or
adc
pop
gs
xor
ret
or
add
enter
mov
and
dec
inc
or
mov
and
cli
xlat
xor
xchg
sbb
pop
inc
mov
insb
dec
das
push
gs
enter
loopne
mov
or
dec
dec
inc
scas
aam
pop
xor
add
sub
lahf
inc
cld
testb
mov
insb
push
mov
leave
loopne
push
lods
inc
movsl
fcmovb
les
cmpsb
or
push
scas
mov
mov
or
cld
or
dec
and
pop
scas
lret
lret
pop
aam
ret
cmp
add
jb
or
cmpsl
inc
sar
rcll
test
add
inc
stos
mov
cmp
std
push
stos
arpl
in
mov
push
call
bndldx
fildl
inc
stos
je
lret
aas
cmp
fcmovnu
in
inc
push
and
sbb
add
jge
out
sub
mov
sbbb
inc
cmp
fs
pop
ret
adc
icebp
mov
adc
imul
les
stos
pop
pop
loopne
and
je
das
mov
int3
add
ja
divl
das
in
inc
adc
stc
inc
divl
inc
adc
rorl
dec
ja
xchg
mov
and
adc
cmpb
add
cmp
rolb
add
aaa
cld
push
clc
sti
cmp
and
mov
les
or
pop
mov
mov
xchg
cld
mov
stos
lahf
dec
pop
add
sbb
fs
fwait
cmpsl
mov
pop
out
xchg
movsl
arpl
add
cltd
cmp
push
dec
adc
aad
xor
add
test
dec
add
movsb
push
cmc
shr
out
test
sub
sti
ficoms
shr
inc
stos
xlat
movsl
daa
xor
lea
inc
cmp
mov
lock
jmp
and
cltd
iret
mov
mov
jne
pop
jg
dec
loop
jnp
clc
push
pop
sub
popa
mov
mov
in
lea
imul
lods
ja
orl
push
cltd
push
mov
pop
das
ret
jle
insl
mov
ret
sub
inc
mov
dec
lcall
icebp
fistpll
out
jae
loop
loope
jae
jle
pop
out
push
subl
inc
jbe
loop
jbe
loopne
out
xchg
pop
jae
ret
cmp
inc
push
or
push
fwait
dec
in
lea
add
cmp
xchg
aad
cld
lods
mov
cs
pop
push
out
js
fsubs
filds
pop
outsb
shl
inc
sub
dec
aad
cwtl
hlt
jb
pop
loopne
icebp
dec
sti
js
dec
mov
lods
pop
les
loop
pop
loopne
fs
ss
imul
jecxz
nop
nop
nop
nop
aam
pop
push
sti
pusha
add
sub
pop
pop
loopne
dec
pop
inc
adc
mov
inc
repnz
clc
cmp
icebp
adc
das
xchg
jle
mov
sahf
fwait
call
and
and
add
pop
filds
or
ja
hlt
out
test
cmp
gs
push
cmp
sbbb
std
push
add
sbb
xchg
inc
inc
lea
lock
in
adcb
movsl
ja
lods
imull
push
insb
pushf
jo
xchg
ret
fs
inc
setbe
mov
loope
nop
nop
nop
nop
sbb
imul
das
jge
mov
mov
jno
sbb
jb
xchg
mov
hlt
lret
sbb
adc
add
inc
or
cmp
fbstp
insb
outsb
mov
fisttps
ror
int3
int3
int3
int3
int3
in
push
pop
dec
cwtl
sti
leave
and
and
lods
fsubrl
dec
dec
sbb
inc
xchg
pushf
ret
or
adc
test
add
ja
aad
repz
lock
xor
cli
pushf
cmp
add
add
addr16
loopne
xchg
sbb
add
shrl
mov
adc
xchg
and
nop
nop
nop
nop
nop
mov
icebp
test
xchg
or
mov
mov
or
add
loopne
adc
mov
add
movsl
stc
push
cmc
sub
jecxz
pop
out
dec
mov
scas
mov
shrl
push
stos
fwait
add
mov
sahf
inc
lret
mov
clc
dec
sbb
mov
fdivrl
insb
push
pusha
lahf
inc
adc
out
test
andl
add
arpl
pusha
int3
int3
int3
int3
int3
aam
arpl
or
mov
rcrb
call
xor
fwait
ljmp
sbb
jnp
jae
sbb
pop
sarb
out
mov
and
cltd
cmp
lock
push
pop
call
sbb
add
mov
imul
add
imul
sbb
test
rclb
push
data16
stos
adc
sbb
iret
pop
call
mov
outsl
sbb
test
mov
shrb
jnp
movsb
iret
imul
stos
push
and
fdivrl
das
sarb
and
xchg
jno
or
testl
pop
dec
stos
adc
repnz
mov
mov
enter
pusha
adc
movsb
or
push
pop
jns
stc
or
mov
out
inc
dec
mov
xor
sbb
push
sub
jne
out
imull
adc
pop
jmp
adc
dec
xor
push
add
sub
cli
das
aam
out
in
xlat
movsb
xor
ds
iret
je
pop
test
adc
or
inc
out
scas
lods
mov
fs
mov
xchg
pop
dec
je
dec
push
add
push
xchg
ja
xor
add
sub
xchg
or
add
scas
pop
shll
divl
add
ret
cld
aam
loopne
add
das
dec
movsb
test
mov
mov
push
pop
call
xchg
or
jmp
fldcw
rorb
outsb
pop
jecxz
popa
into
jl
test
cmp
sbb
xchg
mov
repnz
adc
js
inc
mov
movsb
pop
mov
insl
call
mov
gs
data16
stc
and
idivl
or
cmp
test
and
sti
pop
mov
sub
xor
lcall
sub
out
inc
fs
stos
jns
pop
sub
nop
nop
nop
nop
cmpb
or
sbb
mov
add
movsb
std
inc
mov
fiadds
hlt
stc
lods
ljmp
les
adc
add
cmp
xchg
leave
mov
pop
stc
dec
push
stos
jp
pop
inc
hlt
or
mov
call
mov
mov
pop
popa
imul
dec
out
and
adc
sub
sti
pop
add
mov
int3
int3
int3
int3
and
data16
dec
sub
jb
testb
out
sti
fwait
dec
and
jmp
ds
sti
jo
insl
push
jnp
pop
xchg
mov
test
adcl
jnp
mov
test
xor
mov
ljmp
jle
mov
push
out
or
pop
or
xchg
movb
push
push
aad
mov
jae
cmpsb
and
iret
cmp
data16
xchg
dec
inc
mov
inc
pop
std
push
cmp
jae
into
in
fmul
leave
adc
loopne
arpl
repnz
xchg
imul
push
sti
add
mov
daa
pop
outsb
imul
test
mov
mov
jp
xchg
xor
add
and
clc
outsb
insl
mov
mov
and
sub
rcrb
into
loopne
movsl
fcmovbe
orb
cmp
cmp
push
sbb
dec
pop
ss
in
inc
cld
into
or
std
inc
push
jp
push
lret
mov
pop
in
jo
addb
jmp
mov
shl
sub
push
dec
adc
xor
movb
sti
inc
inc
iret
mov
add
pop
inc
jb
xchg
sbb
or
testb
test
iret
mov
pop
add
dec
mov
popa
popf
or
scas
add
add
dec
push
xchg
rcrl
andl
pop
xchg
lea
sahf
int
jne
aam
into
sarl
xorb
pop
addb
fwait
xchg
sarl
pop
repnz
popf
jne
faddl
xchg
mov
inc
push
and
dec
dec
data16
and
cli
jg
push
es
push
dec
call
andl
push
or
xchg
add
je
outsb
loope
and
shrb
cltd
or
aaa
and
in
cltd
cmp
inc
or
add
xchg
inc
mov
push
sub
dec
sub
icebp
test
in
mov
xor
xor
arpl
repnz
cmp
aaa
jle
lock
add
ss
or
aaa
jns
stos
jns
and
xchg
adc
sub
rorl
or
add
pop
popa
push
mov
mov
mov
gs
mov
xor
clc
gs
repnz
push
add
mull
cmp
xchg
ficoml
into
pop
fs
push
je
adc
add
je
cmp
adc
pop
test
outsl
and
popf
not
push
inc
adc
jns
loop
popl
sbb
outsb
aas
push
pushf
dec
cwtl
or
add
jbe
out
xchg
shll
bound
lods
or
lcall
test
test
sub
out
insb
cltd
sbbl
push
arpl
xchg
stos
push
jp,pt
ja
jecxz
and
jmp
mov
xchg
push
adc
std
loopne
rclb
scas
loopne
pop
pop
mov
iret
push
scas
adc
dec
and
push
imul
icebp
sub
rcrb
mov
xchg
scas
fcompl
xchg
jbe
push
repnz
js
inc
std
pop
inc
xchg
pop
or
bound
jp
call
jecxz
sub
add
push
or
sahf
stos
mov
and
adc
add
dec
mov
test
sbb
xchg
cwtl
aaa
xchg
or
fcoml
mov
mov
jle
mov
xchg
sbb
sldt
dec
dec
cmp
add
xor
adc
add
mov
mov
mov
shrl
mov
fcoml
ja
ret
push
testb
pop
fdiv
fwait
xchg
flds
sbb
sub
mov
or
mov
mov
cld
enter
push
jg
add
xor
xchg
sub
or
add
sub
and
and
and
cmpsl
out
jge
pop
sub
mov
pop
add
push
jecxz
int3
int3
int3
int3
mov
dec
push
lods
mov
xor
xchg
dec
dec
dec
or
sub
leave
imul
xchg
add
xchg
pop
inc
mov
loop
aam
push
outsl
jb
sub
sti
testb
sub
adc
add
lds
sbb
mov
movsl
sub
ds
push
xchg
dec
cli
pop
jp
int3
int3
int3
int3
rorb
imul
ret
js
inc
scas
testl
gs
arpl
cmpsl
inc
orb
jo,pt
notb
and
add
mov
or
mov
stos
mov
dec
jle
test
pop
insb
push
jae
nop
nop
nop
nop
pusha
std
iret
sbb
mov
rcrl
adc
dec
mov
inc
mov
lods
mov
pop
loop
xchg
into
jb
fnstcw
arpl
je
loop
test
mov
or
ljmp
xchg
test
add
jge
fwait
dec
jp
mov
stc
or
arpl
js
in
adc
sub
add
fisttpl
ret
push
movsl
and
adc
jp
cli
sub
jmp
movsl
dec
jmp
push
mov
in
adc
or
pop
jp
cmp
mov
cwtl
loop
lea
adc
or
inc
pop
dec
je
add
in
in
test
mov
jle
bound
sub
in
add
mov
rcrb
mov
fcmovnb
imul
sbb
xchg
pop
push
mov
pmulhw
xlat
mov
sub
in
cwtl
notb
test
jge
adc
into
fsubp
cli
jp
daa
sbb
sbb
imul
fstpt
movsl
jb
xchg
push
insl
xor
lods
xchg
xchg
ljmp
or
aad
mov
fs
clc
push
outsl
or
dec
pop
jmp
cmpsb
mov
push
inc
out
lods
dec
scas
pop
insl
xchg
mov
or
notb
dec
mov
in
lock
push
scas
fsubs
add
es
sbb
imul
jnp,pn
xor
lods
sub
xchg
cli
pop
mov
ret
test
arpl
cmp
jno
in
stos
xor
rcrl
mov
lret
cmp
adc
mov
or
cmc
mov
add
aaa
lods
pusha
jno
and
sarl
fisubl
dec
dec
flds
adc
aaa
mov
pop
inc
and
pop
adc
or
cwtl
jae
xor
xor
jae
jne
testb
test
fs
ja
mov
cli
jnp
xor
fs
nop
nop
nop
nop
js
in
dec
lcall
int3
int3
int3
int3
int3
inc
push
pop
mov
dec
ret
mov
lds
negb
push
cmp
cmpsl
jbe
ljmp
sbb
push
cs
mov
mov
fimuls
nop
nop
nop
nop
inc
negl
sub
push
add
jl
mov
push
into
addr16
out
mov
fidivl
subl
add
or
jno
loope
push
lods
int3
int3
int3
int3
int3
pop
push
push
xor
adc
nop
nop
nop
pop
fnstenv
pop
cwtl
jb
lret
add
add
lahf
mov
test
nop
nop
nop
adc
into
addr16
movsl
mov
mov
jl
jmp
mov
push
iret
xchg
push
dec
sbb
test
add
nop
nop
nop
nop
nop
push
pop
or
hlt
sub
push
aaa
push
sbb
fwait
in
mov
and
mov
mov
jnp
adc
jne
mov
push
push
dec
aas
cmpsb
vlddqu
daa
in
mov
xor
nop
nop
nop
nop
nop
repz
int3
int3
outsb
dec
mov
icebp
mov
test
pop
movsb
call
ja
xor
repz
std
ja
std
loope
imul
xor
pop
fdivl
lods
in
mov
cmp
subl
pop
and
add
inc
sbb
lcall
jge
and
fwait
loopne
int
std
in
dec
arpl
or
push
push
add
outsb
push
popa
gs
sbb
mov
mov
add
mov
xchg
mov
loope
or
or
xchg
pop
negl
shrl
loop
sub
xor
adc
lods
jl
mov
add
div
iret
cwtl
or
test
xchg
sbb
nop
nop
nop
nop
lods
pop
pop
fbstp
jo
mov
in
push
mov
rclb
adc
clc
call
mov
pop
mov
dec
or
rorb
std
aad
std
push
inc
sub
jbe
add
sahf
and
jno
dec
mov
mov
mov
fs
sub
or
mov
cld
dec
mov
out
jle
mov
cmc
inc
and
mov
lods
lea
cmp
loope
fistps
jns
or
jl
mov
negl
jmp
push
pop
in
sub
sub
add
out
xor
cwtl
rcrb
fyl2x
pop
dec
das
inc
mov
pop
fisubl
mov
aam
jne
add
mov
mov
pusha
cwtl
aaa
cmovae
icebp
popa
sub
fldenv
add
in
test
jno
dec
xchg
push
pushf
dec
arpl
cmp
inc
out
pushf
push
dec
sbb
gs
sbbl
test
sbb
fwait
xchg
add
or
jge
loope
psrad
insb
es
das
std
xchg
cmp
dec
repz
fsubrl
inc
jno
add
add
mov
add
enter
add
and
inc
and
add
pop
jbe
mov
adcb
mov
fistl
jl
cmpsb
ss
sbb
ror
mov
pushf
and
es
loope
popa
xor
icebp
std
cmpsl
inc
cmpl
test
cmp
add
repnz
enter
test
add
pop
add
inc
mov
fs
andb
cli
or
adc
add
int3
int3
int3
jbe
insb
jp
outsb
insb
paddsw
mov
stos
shl
pop
outsl
es
sti
or
sti
mov
sbb
int3
int3
int3
int3
push
pusha
test
fs
cmp
aas
push
add
das
inc
outsb
cmp
pop
scas
loopne
call
push
mov
fmul
mov
dec
mov
dec
mov
or
scas
mov
and
mov
mov
xlat
sbbl
jmp
aaa
jge
loopne
or
or
int
or
xchg
jne
fsubp
sub
lock
inc
cmp
out
movsb
stos
cmpsb
rorb
scas
dec
pop
pop
ret
or
sbb
add
lea
mov
imulb
jge
mov
pop
inc
movsb
jg
mov
and
fstp
imul
sti
xchg
push
sub
cmpsb
pop
push
cmpsb
cli
mov
loope
sbb
add
fidivs
mov
cmp
jge
adc
mov
pop
call
stos
push
insb
shll
ja
mov
dec
fcomps
icebp
int
xchg
leave
fisttpll
pop
sub
gs
push
mov
push
jnp
push
sahf
cmp
cwtl
sbb
push
cmc
hlt
xor
lahf
dec
jecxz
jecxz
mov
mov
cmp
dec
mov
outsb
mov
cwtl
pop
es
lods
gs
outsb
mov
punpckhwd
int
mov
xchg
scas
or
mov
add
popa
jmp
push
in
xchg
aad
out
cmp
and
add
pushf
fwait
cmc
xchg
pop
xchg
push
popf
cmp
loop
sub
push
push
iret
dec
clc
aam
and
mov
test
mov
xor
mov
xchg
xchg
mov
fiadds
aad
sbb
add
inc
pusha
sbb
mov
pop
fmulp
mov
fs
add
push
gs
movsl
jo
scas
jo
int3
adc
add
ret
jp
mov
adc
xchg
fstpl
arpl
mov
sub
pusha
hlt
pop
repnz
inc
xchg
cmpb
and
jae
jo
add
mov
notb
andb
add
cmpsb
into
lcall
xor
dec
js
xor
pusha
mov
int3
int3
int3
int3
int3
mov
inc
cld
dec
fildl
mov
add
add
jle
in
mull
cs
xor
inc
push
pop
cmc
mov
and
push
call
repz
pop
add
gs
jle
call
lahf
or
mov
and
rcrl
jae
push
dec
add
cmp
icebp
mov
xchg
mov
fidivs
subl
mov
cmp
popl
sub
fbld
outsl
jne
sbb
cmpb
ds
call
push
jl
jle
stos
lods
cmp
add
dec
outsl
pop
add
enter
ret
and
int3
int3
int3
cmp
ljmp
cli
add
add
mov
std
push
mov
xor
aam
mov
push
jbe
addr16
shll
aam
cmp
xor
jle
in
data16
or
das
std
es
scas
ror
call
js
out
lcall
xchg
dec
mov
add
inc
mov
test
call
jmp
div
imul
sub
les
ljmp
incb
mov
loopne
mov
pop
xor
add
iret
mov
in
or
add
xlat
pop
push
sbb
in
fbld
dec
sbb
stos
and
add
and
mov
std
add
loope
fs
mov
push
in
and
pushf
inc
pop
fiaddl
sub
xor
cltd
insb
inc
loope
mov
sbb
add
fs
aaa
adc
xchg
dec
cmpsb
ss
inc
adc
pop
pop
adc
mov
roll
sub
add
cwtl
mov
imul
hlt
divb
mov
cwtl
dec
ret
dec
jno
mov
add
insl
addr16
mov
push
pop
cmp
lcall
ljmp
xchg
cwtl
cmp
mov
outsb
leave
push
pop
xchg
test
in
pop
lcall
test
cli
dec
call
jbe
nop
nop
nop
nop
hlt
inc
arpl
dec
shll
mov
jle
xchg
outsb
clc
movsb
dec
mov
repnz
jmp
ljmp
inc
add
jo
inc
and
fsubrs
inc
mov
in
mov
mov
jb
xchg
in
fadds
das
push
mov
bnd
mov
mov
mov
insb
and
cmpsl
cmp
aas
jmp
sub
or
cmc
mov
sbb
adc
mov
xor
lods
fldenv
outsb
lods
jno
cld
push
mov
sub
push
loopne
fwait
or
add
add
fisttpl
sub
pop
cmpxchg
pop
mov
pop
fwait
cltd
repnz
pop
mov
scas
pop
loopne
in
mov
data16
push
mov
out
mov
or
lods
xor
and
add
mov
add
leave
or
mov
mov
loopne
stos
loopne
mov
jge
add
fisttps
mov
or
adc
fwait
inc
mov
push
push
aaa
ljmp
inc
and
push
fdivl
iret
scas
cmp
sub
imul
inc
pop
pop
mov
xor
xor
mov
icebp
jne
dec
push
sub
jmp
push
push
dec
bound
push
pop
push
jnp
popa
pop
add
lret
aas
in
daa
jno
es
lds
imul
pushf
dec
mov
je
ss
push
mov
mov
popa
ds
jns
mov
xor
adc
add
lods
stos
shll
pop
pop
pushf
imul
add
mov
pop
leave
dec
lret
adc
dec
cmp
add
push
lcall
push
pop
test
xor
iret
out
nop
nop
nop
nop
add
inc
iret
inc
pushf
inc
jg
and
dec
repnz
and
mov
mov
jge
dec
sub
sub
hlt
ss
or
pop
shlb
sbb
pop
jecxz
cmpsb
test
