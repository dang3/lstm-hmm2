xor
push
push
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
call
mov
movl
mov
mov
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
pushl
push
mov
call
pop
pop
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
mov
mov
add
mov
add
mov
mov
lea
jmp
call
xor
inc
pop
leave
ret
push
mov
push
push
mov
push
push
pop
mov
mov
sub
xor
div
mov
mov
push
sub
shr
mov
shl
or
neg
sbb
and
push
pushl
call
mov
mov
mov
sub
mov
mov
xor
mov
inc
sub
dec
jne
pop
xor
pop
inc
pop
pop
ret
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
stos
jbe
or
xor
jl
insb
rcll
pusha
sbb
lods
cmp
std
and
int
outsl
insb
ret
dec
xor
add
scas
out
xor
push
in
jns
adc
push
fld
xchg
add
cld
test
mov
in
xchg
outsl
call
out
sub
push
pop
movsl
adc
in
leave
inc
negb
call
lock
and
aam
and
pop
mov
lea
fwait
rorl
xchg
adcb
mov
adc
xchg
fstl
out
xchg
insb
xchg
mulb
in
fisubrs
add
fcomi
sbb
dec
iret
popf
jl
push
adc
jne
add
pop
sub
push
fwait
inc
push
sbb
cmpsb
mov
not
sbb
es
sub
enter
xchg
cmovb
or
mov
outsl
xor
les
fisttpl
ret
data16
mov
pop
cwtl
lods
mulb
ret
icebp
sub
pop
push
call
cmp
xchg
jno
iret
sbb
cli
stos
imull
shrl
sbb
lock
pusha
jnp
xchg
xlat
repz
mov
mov
outsl
insb
xchg
sub
fcoml
sub
jp
out
xchg
xchg
and
imul
or
idivb
pop
cwtl
mov
fisttps
inc
in
ret
push
cli
jle
in
outsb
adc
or
cwtl
cmp
mov
sbb
movsb
pop
out
add
lea
popa
and
sbb
adc
mov
mov
fldenv
xchg
inc
enter
mov
add
mov
cmp
lock
mov
lods
or
dec
push
mov
cmc
xor
mov
cwtl
dec
xchg
adcl
movsl
cld
insl
cmpsl
push
jle
pop
xchg
mov
arpl
adc
idivb
or
push
jno
adc
int3
insb
popf
movsl
dec
adc
movsb
xchg
rcl
lock
scas
pop
inc
icebp
jb
sbb
cltd
imul
cs
in
mov
popf
jl
and
loopne
aad
test
stc
push
daa
bound
sub
sbb
out
add
inc
inc
incb
push
mov
rcrl
jnp
mov
xchg
cld
fstl
xchg
inc
repz
add
and
test
stc
lret
dec
popf
and
sub
mov
dec
pop
data16
inc
adcb
hlt
aaa
lahf
in
push
in
sub
imul
mov
ljmp
es
inc
out
out
mov
jnp
popf
and
lds
xor
pop
cmp
insl
fwait
adc
int
int
mov
cmp
add
cltd
inc
cmp
iret
js
mov
cmp
jg
aam
testl
insl
or
cmpsb
sub
sbb
stos
repz
pop
stc
repnz
roll
adc
daa
pop
sbb
xchg
cld
sbb
add
loopne
pop
inc
test
sub
sub
cmpsl
arpl
out
cvtps2pd
cwtl
jb
inc
or
les
xchg
in
ss
scas
mov
adc
mov
push
jns
jl
xlat
jae
insl
push
andb
popf
cmp
shrl
ret
xchg
loop
div
ret
push
outsb
icebp
add
hlt
mov
inc
fistpll
push
rcll
adc
jno
sti
ss
popa
mov
and
or
hlt
xor
dec
xor
test
mov
mov
les
out
out
lock
scas
pop
push
ret
rorl
jl
arpl
enter
mov
pop
js
int3
jmp
out
iret
fbld
pop
in
and
mov
pop
inc
js
andl
loope
jns
in
popa
jg
sub
adc
in
adc
add
out
movsl
ret
fstpl
gs
jno
hlt
sti
into
add
js
in
add
sbb
lret
mov
sub
inc
or
mov
dec
shll
gs
cltd
xchg
je
jo
or
add
push
inc
das
stc
jo
outsl
jnp
mov
add
mov
xor
jmp
mov
addr16
fsub
ret
iret
pop
jmp
dec
dec
jmp
cmp
mov
icebp
xchg
out
adc
xor
add
les
loop
jbe
xchg
push
sbb
in
fidivrl
arpl
xor
fwait
xlat
sti
sub
les
aaa
aad
fmuls
xchg
pop
xor
dec
jbe
sbb
push
adc
xor
movsl
fcomps
insb
ds
fiaddl
mov
or
lahf
dec
mov
dec
popa
inc
mov
jl
dec
lods
xchg
fstpt
sub
push
jb
pop
frstor
jge
jae
add
cmp
sub
es
ja
or
sbbb
int
sbb
inc
nop
push
in
inc
movb
cli
cmc
and
into
xor
icebp
hlt
push
loopne
int
ds
movb
loop
sbb
das
popa
push
mov
mov
jo
lahf
pop
mov
sti
xor
jo
jo
sbb
scas
xor
mov
mov
jb
lds
xchg
cld
dec
pop
dec
rolb
sbb
iret
rclb
stc
pusha
mov
sbbl
pop
xor
pop
sbb
lods
xor
mov
subl
cmp
dec
cmp
add
dec
pop
adcb
daa
iret
pop
test
add
add
out
sub
push
add
ja
adc
aad
pop
icebp
imul
loop
sbb
dec
loop
les
icebp
rcrb
push
xor
cmp
pop
pop
test
test
js
pop
dec
in
sarl
jge
mov
add
xor
pop
mov
xlat
imul
cs
sbb
fdiv
sbbb
and
std
and
scas
or
sti
movsb
enter
xorb
movsb
jge
jl
out
fmull
or
lret
push
add
mov
bound
orl
add
jecxz
sarb
xchg
inc
xchg
gs
in
out
dec
inc
das
lahf
push
dec
or
sub
arpl
mov
push
outsb
nopl
cltd
mov
scas
cltd
dec
adc
jnp,pn
lcall
sub
aad
xchg
and
mov
lea
mov
insl
test
loope
inc
add
in
fldcw
jb
leave
call
push
or
sbb
aas
xor
mov
sti
cmp
xor
pop
sub
stos
sbb
imul
in
mov
add
fsubrl
push
or
es
stc
pop
rcrb
xor
jecxz
sbb
mov
mov
xchg
loope
cld
iret
test
rorb
mov
pop
sub
repnz
les
dec
or
arpl
clc
mov
mov
push
add
jmp
xchg
ss
mov
mov
negl
mov
inc
add
mov
daa
inc
std
mov
push
inc
inc
jne
cld
jmp
dec
xor
sbb
inc
and
inc
xor
das
int
outsl
xlat
xchg
sbb
pop
xchg
sbb
sub
adc
adc
dec
sub
cmp
aaa
push
cmpsb
or
mov
jp
jns
dec
rcll
push
mov
xchg
add
mov
ds
sbb
insl
inc
or
inc
and
push
mov
push
dec
push
subb
mov
psubb
pop
cli
ds
jbe
push
jns
mov
push
andl
aad
inc
mov
lahf
in
shl
fs
dec
int
fisubs
rcll
push
ljmp
xor
mov
arpl
and
js
push
outsb
testl
dec
cld
adc
stos
mov
in
sub
lea
or
xor
pushf
ficompl
adc
gs
hlt
adc
and
lret
ret
loope
pop
movsl
push
add
insb
dec
push
push
sbb
add
pop
call
bnd
or
jg
or
mov
pop
xor
test
sub
idiv
sahf
xchg
mov
popw
mov
int
shlb
inc
add
roll
ret
sub
adcl
pop
cmp
sub
xchg
lock
shrb
dec
fwait
dec
imul
sub
aam
pushf
bound
mov
aam
movsb
test
leave
popf
gs
xor
xchg
enter
fsubl
jbe
cwtl
pop
stc
jle
sub
nop
xchg
idiv
lea
aad
jns
xor
xor
jmp
mov
sbb
sub
jecxz
cs
les
mov
mov
cmp
mov
inc
jb
pop
rolb
sub
addr16
pop
out
mov
or
xor
sub
or
sbbl
icebp
pop
bound
scas
fs
adc
imul
mov
jnp
jge
push
cli
push
daa
ret
xor
out
ja
adc
sbb
inc
sarb
call
xchg
dec
pop
mov
dec
xor
int3
int3
das
add
mull
add
scas
mov
cmp
andl
sbb
jle
or
repnz
ja
test
push
pop
ss
push
pop
add
outsb
out
lahf
stos
std
pop
jnp
out
jp
cs
mov
cli
sahf
movsb
xchg
enter
fistpl
mov
test
jg
fldenv
loop
inc
scas
ljmp
jecxz
inc
inc
jnp
inc
movsb
pop
leave
les
and
popf
in
pop
pop
xchg
inc
sub
daa
popa
xor
aad
push
mov
in
sub
outsb
mov
daa
or
ret
sbb
sbb
inc
sbb
inc
test
shlb
xor
mov
jns
mov
sbb
mov
movsb
pop
out
dec
pop
sub
movsl
pop
sub
inc
xchg
sub
jbe
stc
into
mov
cmpsl
fucomp
stc
sbb
sahf
and
inc
xchg
loope
jae
jo
sahf
xlat
mov
test
and
cmp
cs
mov
mov
leave
jge
fcomps
mov
inc
or
mov
xchg
lods
xor
scas
shr
data16
dec
int
cld
movsl
push
insl
test
and
lock
inc
leave
cmp
in
outsl
mov
mov
sbb
icebp
xor
pop
stos
mov
leave
popf
pop
push
xor
lret
push
adcl
mov
dec
lods
jae
pop
test
test
cmpsb
sub
test
stos
or
jo
mov
push
ret
pop
pop
sbb
ss
pop
loopne
push
pop
inc
sbb
decb
pop
sub
fcmovnbe
dec
jbe
mov
iret
mov
xchg
enter
jns
repnz
dec
mov
sub
or
adc
and
jp
stc
cwtl
das
add
lcall
cmpsl
jb
aaa
out
push
ret
or
or
inc
mov
test
filds
jmp
testl
insb
les
cmp
outsb
jle
clc
mov
call
test
and
mov
sbb
add
lret
in
das
sub
aas
add
mov
mov
xchg
mov
scas
das
hlt
int
stos
aam
test
jns
mov
push
bound
aad
int3
push
cmpsb
mov
xchg
je
jmp
or
test
ljmp
decl
sub
sbb
mov
int
cld
cwtl
mov
adc
jnp
sbb
push
popa
sahf
mov
pop
in
pop
jns
sub
sahf
jbe
mov
pop
add
inc
movsb
fwait
push
xchg
test
aaa
bound
mov
mov
call
jecxz
out
repnz
jge
inc
mov
jmp
sbb
mov
sar
addr16
lds
rolb
call
cmp
ret
add
repnz
xor
sahf
pushf
sbbl
push
test
jnp
sub
xchg
arpl
shlb
add
xchg
xchg
sub
sub
in
xlat
mov
lds
mov
das
and
aad
dec
jbe
add
xchg
lods
jge
xchg
cli
mov
std
sub
push
imul
stos
mov
push
lcall
jbe
add
sarb
hlt
aad
lahf
sbb
mov
mov
and
xchg
shrl
pop
push
cli
ja
outsl
dec
xor
cli
dec
decl
inc
sbb
pusha
in
mov
cmp
popf
push
cmp
clc
loopne
mov
mov
mov
mov
test
mov
adc
jmp
mov
cli
ds
das
rolb
out
fdivl
emms
dec
or
scas
push
je
jae
fidivrl
ret
jnp
mov
xorl
in
sub
mov
xlat
xchg
mov
push
or
add
jmp
mov
mov
pop
jg
fsubrs
sbb
dec
in
sub
pop
mov
push
adc
cmp
and
mov
or
lret
pop
rcll
sub
imul
add
push
mov
mov
ja
orl
push
cmpsl
pop
dec
or
lret
incl
ljmp
pop
in
andb
cmpsb
fstp
loope
das
jno
out
daa
dec
and
or
adc
lret
lahf
mov
fwait
cs
sbb
test
cmc
dec
daa
and
mov
mov
jo
addr16
jg
out
inc
mov
mov
popa
addb
mov
dec
pop
xchg
inc
push
mov
clc
push
xchg
in
aaa
jae
pop
dec
jae
test
test
cmp
in
fstpt
mov
mov
mov
or
jnp
popf
outsb
icebp
pop
mov
aas
push
dec
mov
pop
movsb
test
stos
xlat
mov
stos
shrl
mov
xchg
fs
pop
dec
cld
adc
aad
mov
popf
dec
js
aas
add
es
xor
inc
nop
mov
sub
add
popl
adc
cmovl
mov
lock
xchg
clc
push
std
xlat
loope
jle
mul
or
ja
add
inc
pop
pop
popa
clc
sar
flds
mov
imul
mov
sbb
push
repz
mov
aam
or
ret
add
lret
adc
push
adc
jg
rcr
mov
sbb
sbbb
xchg
jl
shlb
sbb
add
imull
sbb
push
leave
sub
dec
shr
ret
mov
lock
mov
dec
addl
cmp
shlb
inc
mov
adc
aam
or
and
fdivl
sub
xchg
insl
jmp
gs
mov
push
pop
popf
mov
cli
push
push
push
addr16
cmpsl
inc
and
add
cwtl
sub
ret
call
xchg
jo
pop
lods
sub
sahf
cmp
xchg
lds
cmc
pop
cmp
add
leave
orb
cmpsl
ljmp
or
jo
cmp
xlat
and
cmp
das
js
inc
xchg
mov
inc
stc
pop
mov
dec
inc
shr
adc
int
out
in
push
adc
inc
push
ds
movsl
ljmp
xchg
mov
icebp
pop
sbb
sbb
jbe
pop
mov
ret
sbb
mov
punpckhdq
xor
pop
mov
nop
jecxz
scas
loopne
scas
insb
xor
dec
lds
pop
push
cmpsb
pusha
xchg
xchg
sbb
xor
enter
add
test
inc
xor
inc
sub
dec
loop
xchg
sub
andb
shll
ficoml
push
mov
jns
sub
pop
or
sbb
outsl
and
test
pop
mov
mov
clc
adc
fldcw
mov
jle
adc
adc
fwait
outsl
add
hlt
cmp
je
dec
and
jge
push
js
dec
push
mov
sub
sub
sbb
xchg
jmp
xor
addr16
leave
add
jmp
sarl
xor
mov
mov
push
lods
mov
ffreep
pusha
add
xchg
adcb
pop
cli
scas
lcall
add
pop
shlb
dec
loope
shlb
pop
xor
cmp
icebp
rcrl
fldenv
movsb
popf
pop
daa
add
dec
aas
adc
dec
enter
cmp
mov
mov
push
std
cmp
xchg
int3
je
add
inc
pop
xchg
lock
or
sub
jnp
push
mov
inc
pop
lea
pop
jb
adc
dec
lcall
and
dec
xchg
loopne
fs
push
inc
imul
cmp
scas
inc
mov
jecxz
in
out
andl
push
cli
cmp
inc
push
test
addl
mov
dec
pop
adc
push
or
daa
daa
push
loope
loopne
jbe
add
les
adc
xchg
add
scas
and
jnp
push
xchg
dec
pusha
adc
and
push
jmp
imul
pop
mov
add
aad
hlt
mov
lds
or
pop
pop
inc
andb
repnz
push
mov
fidivs
mov
push
adc
jno
arpl
or
push
xchg
jbe
sbb
test
inc
adc
and
pop
mov
xchg
adc
dec
fistpll
nop
xor
inc
mov
dec
push
add
inc
adcl
int
lds
sti
outsl
fxch
inc
ret
ret
je
mov
dec
repz
cmp
or
out
sub
xor
mov
hlt
jo
fisubrl
shrl
addr16
fsubrl
push
push
xchg
test
fadds
lahf
pop
fiadds
addb
mov
outsb
mov
out
push
bound
mov
mov
mov
out
jno
inc
dec
dec
xor
addl
lret
es
add
pushf
movsb
xor
pushf
sbb
imul
xchg
aas
and
cmp
aam
mov
nop
stos
mov
andl
test
mov
mov
pop
pop
pop
push
clc
lcall
mov
stos
arpl
daa
ss
clc
or
add
xchg
jo
ret
adc
and
add
js
insb
loopne
stos
mov
xor
jg
das
or
adc
dec
mov
cli
mov
imul
lcall
in
outsb
jl
xchg
cmp
dec
jnp
xchg
loop
sbb
dec
inc
and
ja
mov
into
fiaddl
jmp
push
add
dec
call
arpl
andb
mov
call
cwtl
iret
iret
mov
in
enter
dec
mov
shrd
outsl
add
mov
and
test
push
and
adc
push
push
push
nop
scas
icebp
inc
in
push
test
jne
cmpsl
push
mov
test
jg
sbb
arpl
sbb
ds
xlat
mov
inc
in
jl
xlat
lods
jb
mov
rcll
xchg
mov
sti
movsl
scas
fwait
pop
stos
test
in
jnp
add
mov
in
mov
pop
arpl
jo
mov
and
test
or
scas
lods
add
daa
icebp
mov
andnps
lret
xchg
add
dec
and
pop
test
lds
sub
addl
sub
inc
stc
repz
repz
mov
xor
mov
pop
mov
xchg
xchg
cld
pushf
mov
mov
cmpsl
mov
out
and
inc
idiv
or
and
es
pop
arpl
xor
dec
rcrb
jae
adc
fcompl
shrb
push
add
pusha
mov
inc
nop
jg
cwtl
push
and
aad
sbb
data16
mov
aaa
jo
rorb
pushf
push
ror
or
push
cs
bound
push
add
dec
lret
mov
pop
and
ja
sub
or
repz
daa
mov
sbb
cmp
orl
push
lock
imul
out
xlat
aam
arpl
jne
mov
cmp
dec
gs
xlat
xchg
icebp
push
jo
test
in
or
cld
mov
jns
xchg
add
stos
lods
roll
and
mov
imul
test
mov
addb
in
push
xor
cmc
enter
add
add
fidivs
jp
xchg
outsb
mov
pop
loop
dec
lret
lds
push
aas
xchg
ret
lahf
xchg
inc
mov
inc
sub
je
sbb
jo
pusha
iret
jns
xor
mov
popf
cmp
inc
addb
push
int3
jecxz
lea
mov
dec
dec
in
lret
mov
enter
out
xchg
mov
pop
xchg
mov
cmp
imul
jge
les
mov
scas
fwait
mov
outsb
mov
nop
xchg
fdivp
dec
xchg
and
push
sbb
push
lret
push
mov
pop
pop
out
aad
jae
pop
shlb
mov
cs
xchg
push
jmp
jns
in
mov
xchg
xlat
jne
add
add
push
fcomi
add
insl
or
add
lea
add
adc
das
xor
iret
lahf
sub
into
call
mov
pushf
or
adc
data16
xchg
xchg
mov
out
pop
xor
outsl
pop
jp
aaa
sahf
scas
loop
loopne
fdiv
sub
lea
xor
mov
pop
jnp
into
sub
dec
mov
hlt
sub
repz
mov
aas
mov
push
push
incl
dec
mov
in
shlb
xchg
rcr
int3
sarb
shll
add
jmp
xchg
xchg
sub
insb
push
mov
sahf
sbb
popa
enter
cwtl
jnp
ss
adc
or
pop
mov
pop
enter
in
shl
and
sbb
int
cmpps
inc
and
cs
xor
rclb
adc
cmpsl
pop
mov
gs
insb
mov
aam
adc
ret
test
sbb
push
out
out
ss
mov
inc
push
or
leave
in
lock
sub
js
out
in
sub
std
or
push
xchg
sbb
es
fcmovnu
out
ret
push
sbb
xor
mov
add
test
push
pop
insl
mov
sahf
and
cmp
popa
subb
xchg
loop
cmp
popa
push
inc
roll
out
inc
hlt
xor
leave
loope
mov
xchg
mov
jge
mov
rolb
and
jbe
mov
sahf
inc
xchg
sbb
loope
xchg
loop
shll
xor
or
xchg
pusha
stos
popf
movl
xchg
es
adc
mov
mov
aad
cmpsb
lds
je
pop
xchg
arpl
rorl
or
sarb
adc
out
aad
loope
fsubr
ficoms
gs
enter
test
pop
test
outsb
pop
mov
lahf
aad
xlat
push
pop
stos
dec
inc
jle
mov
leave
cmp
sub
inc
in
pop
cmpb
pop
mov
push
or
fwait
add
adc
or
adc
lea
movsl
cld
rol
jb
pushf
ljmp
inc
inc
sbb
lods
mov
and
dec
lret
jge
out
sub
cmp
loop
in
test
pusha
add
cmp
fidivl
push
divw
xor
int3
fistl
inc
xchg
leave
adc
cli
lahf
pop
imul
fisubl
add
clc
repz
mov
pop
imul
dec
xchg
stc
push
mov
xor
cltd
loop
pop
popl
fsubrl
mov
roll
imul
or
sbbl
bound
fcompl
lcall
jmp
or
cmp
and
outsl
xlat
dec
mov
fmul
adc
and
fidivrl
sub
dec
pushf
jmp
fldcw
cmp
mov
jecxz
jno
cltd
push
pop
cmpsl
mov
xchg
inc
ss
pop
pop
sub
push
adc
or
jecxz
mov
mov
jb
aam
and
mov
cmpsl
mov
sbb
stc
xchg
into
ret
loope
stc
lock
cwtl
sbb
and
fdivs
or
mov
lods
push
push
out
in
hlt
fdivp
sub
int3
ss
fildl
jbe
jne
cmp
repz
push
xchg
sub
xchg
dec
call
popa
fcmove
or
pop
xchg
dec
shrb
pop
dec
jnp
or
fdivs
and
add
repnz
xchg
jmp
xor
push
jne
jle
roll
mov
lock
cs
and
mov
jge
sub
mov
dec
dec
stos
sub
sbb
movsl
push
xchg
int3
shrl
lea
push
xchg
test
mov
test
xchg
sti
or
push
lret
and
add
ja
inc
and
and
subb
addr16
dec
and
movsb
and
and
clc
or
inc
jo
fwait
aaa
aam
pop
mov
mov
fldl
jp
jbe
lahf
pop
xchg
jnp
cmp
imul
pop
xchg
sahf
aas
bnd
cwtl
std
pushf
sbb
int
push
jns
add
mov
jle
push
push
jle
adc
arpl
jne
or
aaa
lahf
icebp
xor
lods
repz
or
mov
adc
mov
out
inc
pop
lret
movsb
push
aaa
sbb
mov
js
inc
jle
sahf
mov
mov
mov
cmp
jb
aad
mov
adcb
mov
jecxz
add
xor
pop
rolb
xchg
push
xor
shl
dec
jmp
insb
cmp
pushf
fisubrs
sbb
fnsave
mov
bnd
cmp
jb
mov
cmpsl
mov
push
loopne
fmul
add
add
fistl
cmpb
je
xchg
das
incl
pop
sti
and
das
out
dec
dec
add
jecxz
clc
xchg
push
xchg
cmpsl
or
sub
mov
dec
jbe
mov
fstl
in
mov
stos
stc
bound
cmpsb
mov
mov
ss
loope,pn
ss
rorl
out
add
int
clc
xchg
sbb
sbb
outsl
push
adc
mov
in
xor
insl
repz
fistps
lahf
sarb
push
and
call
pop
fcomi
pop
cmpsl
mov
inc
jge
dec
js
pusha
sub
dec
mov
in
jb
mov
pop
fcomi
popf
pop
das
es
push
or
cmp
mov
cld
sbb
dec
out
test
jae
scas
xchg
mov
aam
sti
xchg
sub
sub
or
mov
fdivr
int
xor
mov
test
insb
dec
push
mov
mov
fidivrs
xchg
pop
adc
int
add
stos
cmp
mov
cs
sbb
pop
icebp
push
fidivs
subb
sbb
jmp
mov
mov
cmpsl
scas
mov
xchg
mov
inc
xchg
lods
and
loop
and
cld
sub
jae
loopne
jle
mov
insl
push
and
cmp
and
sub
and
addr16
dec
mov
and
mov
or
sete
mov
ds
xchg
jno
or
shlb
pushw
xchg
decw
mov
xchg
xchg
inc
aas
jns
cmp
sbb
cltd
push
aaa
sbb
idiv
push
xchg
xchg
cld
mov
je
adcb
dec
les
push
cmc
xchg
clc
dec
lods
das
sarb
mulb
repz
inc
std
add
lock
cmp
mull
flds
je
sub
aas
pop
out
int
mov
fnstenv
ljmp
sbb
aad
mov
push
jns
add
roll
repnz
sub
data16
xchg
mov
popf
pop
mov
mov
sub
inc
cwtl
push
or
mov
pop
popf
ja
ja
scas
test
mov
dec
inc
push
and
inc
sbb
xchg
mov
adc
les
aas
jg
push
enter
std
sbb
in
push
lods
ret
dec
ret
cmovo
and
cmpsl
dec
inc
jbe
xorl
mov
cmpb
dec
xchg
adcb
xor
or
aam
mov
pop
or
cmp
mov
or
or
fwait
imull
xor
dec
in
jbe
pop
inc
xlat
mov
popf
mov
cmpsb
jb
dec
jnp
mov
ljmp
stos
cmpsl
mov
or
inc
in
repnz
insb
ds
jne
outsl
xchg
adc
popf
mov
jge
cmpb
dec
and
cmp
rcl
jl
mov
lret
gs
iret
ficoml
loope
mov
push
aaa
dec
mov
pop
shlb
fs
push
and
cmpsl
call
ss
jae
jecxz
adc
call
pop
jg
in
mov
mov
add
in
rcl
mov
lock
mov
push
ss
rol
cmp
cmp
bound
inc
sbb
mov
cwtl
dec
sub
mov
jbe
inc
je
push
imul
test
push
sahf
cmpsb
cmpsl
in
movsl
mov
cmp
insb
movnti
inc
sbb
jle
stos
into
insb
and
outsb
arpl
mov
mov
pop
testb
enter
sbbb
clc
sarl
fisubl
in
shlb
ds
stc
dec
xor
ss
cmpsb
stc
pop
pop
push
cs
adc
or
outsb
mov
jecxz
xor
lret
cmp
notb
xchg
sub
aaa
pop
cltd
inc
stos
idivl
xchg
xor
popa
or
cmc
xlat
mov
sbb
iret
xor
inc
and
push
sub
scas
mov
xor
lock
mov
outsb
xchg
out
add
rcrb
mov
fisubrs
sub
push
add
jnp
mov
mov
jp
fistps
pop
subl
scas
jmp
das
push
sti
pop
pop
stos
popf
cmp
dec
push
leave
int
lods
fmull
mov
imull
mov
lods
and
cmp
push
dec
push
mov
nop
cmp
jp
out
sbb
notl
cli
ja
in
and
dec
frstor
aam
movq
in
roll
movhps
scas
jo
push
mov
in
mov
lret
jbe
mov
and
cmpsb
test
ret
into
adc
xchg
and
nop
or
add
insb
repz
add
mov
dec
or
dec
loop
inc
hlt
mov
push
mov
scas
int3
negb
lock
jo
xor
test
aam
jo
jl
xlat
int3
inc
adc
fcmovne
jno
out
lods
insl
xor
mov
fs
notl
inc
dec
decb
stos
lret
lahf
test
xchg
mov
jns
jne
popf
xchg
xor
add
and
lret
mov
ret
mov
dec
in
fidivrl
jnp
add
pop
push
dec
hlt
inc
cmp
pop
arpl
mov
lret
arpl
in
xchg
pop
sub
lcall
leave
lcall
ds
or
cli
pop
xchg
inc
xchg
mov
aad
xchg
inc
hlt
shll
sti
iret
jbe
jnp
mov
cwtl
and
cltd
mov
sbb
or
jnp
push
pop
or
aas
xor
or
sub
fistpll
sar
punpckhdq
jge
icebp
xor
js
lret
jne
icebp
jmp
sbb
jae
mov
mov
jmp
sub
inc
movsl
aaa
xchg
std
mov
push
pop
jmp
call
bound
rcll
aaa
xchg
idiv
test
mov
roll
in
xchg
mov
jle,pn
and
cmp
adcb
outsl
cmp
fcomps
adc
fistpl
clc
mov
sahf
repnz
mov
jno
repz
addl
and
lods
fdivrs
lds
jg
outsb
mov
fcmovne
add
mov
pop
bound
pop
add
scas
add
and
iret
fdivr
mov
call
lds
jmp
outsb
clc
iret
sbbb
pusha
into
fcmove
shlb
xor
dec
sbb
ss
std
jg
cmp
lcall
xchg
bound
jnp
inc
ljmp
dec
and
mov
ret
push
cli
jb
push
fnstsw
inc
std
jne
jb
or
repz
dec
cli
pop
mov
fsubrs
sahf
or
pusha
lods
push
outsl
fwait
mov
and
rcrb
sbb
mov
pop
jbe
ret
bswap
pop
cmp
or
adc
subb
cmp
lret
dec
scas
lods
sbb
add
imul
imul
push
out
imul
repz
jp
jmp
mov
pop
lret
mov
cmp
std
pop
rol
sti
mov
aas
je
outsl
movsl
fst
add
push
and
sub
inc
jns
iret
fdivl
pop
push
cmp
repz
repnz
subl
adc
mov
push
ret
and
add
and
cmp
sbb
cwtl
lahf
and
xchg
outsb
loopne
xchg
and
test
data16
ror
cmp
rorl
dec
lahf
jnp
movsl
mov
adc
lret
ss
jl
dec
push
xlat
fs
sbb
mov
mov
divl
or
fcoml
pusha
sahf
sub
xor
lds
cmc
in
pop
push
inc
inc
stos
pop
xchg
jg
test
pop
mov
enter
leave
movsb
jmp
ret
or
pushf
pop
icebp
mov
pop
mov
cltd
jbe
add
in
cmp
mov
jns
test
cmpl
push
lahf
inc
loope
or
fld
and
sub
push
inc
mov
mov
dec
jl
xorb
mov
mov
test
fdiv
jno
lahf
pop
mov
ja
mov
cmc
and
scas
scas
stos
stc
outsb
imul
mov
ds
loop
loope
xchg
jle
in
inc
push
aaa
test
sbb
sti
aad
mov
sar
mov
mov
shlb
adc
aas
sub
mov
cmp
jmp
iret
cmpb
imul
or
fstl
cs
movsl
jg
inc
ja
in
ret
jl
pop
push
inc
fsubr
mov
add
rclb
loopne
aas
popa
test
cmpsb
pop
mov
sub
push
lcall
dec
cmc
int3
sbb
icebp
push
jecxz
subb
imul
pop
outsl
std
sbb
and
into
nop
lock
test
rorl
les
add
sbb
mov
pop
out
inc
out
push
adcb
dec
aas
enter
sarb
or
cmp
icebp
pop
sarl
xor
test
mov
sub
or
push
xchg
or
roll
xchg
std
int3
push
jg
lock
add
mov
sbb
fwait
dec
mov
xor
mov
sub
push
pushf
or
mov
mov
iret
push
xor
fucomp
fsub
adc
pop
sahf
push
inc
and
cmp
in
jbe
fwait
jnp
jmp
sub
daa
add
scas
xor
dec
imul
sub
mov
jmp
sub
dec
addb
add
notb
aad
inc
sbb
nop
lods
pop
push
xchg
xchg
popf
add
adc
cmp
xchg
fwait
stos
or
ret
inc
shrl
dec
push
jbe
mov
push
int
pusha
cmp
dec
dec
mov
jecxz
xchg
or
inc
dec
adc
pop
push
push
aam
cli
dec
fs
lcall
loopne
pushl
sbb
dec
les
addr16
jle
or
jmp
pop
out
dec
negl
aas
subb
jecxz
inc
inc
add
jge
mov
nop
sbb
rcll
imul
or
repnz
cmp
mov
sti
mov
call
pop
roll
inc
test
mov
insl
jae
stos
fstpl
faddl
or
dec
movsl
test
or
pop
int
dec
sub
mov
push
cmp
and
add
push
xchg
xchg
jle
inc
sub
loopne
jbe
fldt
int3
add
add
push
inc
cmp
xchg
sub
stos
call
dec
cmp
int3
push
leave
jnp
sub
push
lock
inc
and
pop
mov
ret
sbb
fwait
int3
mov
ret
movb
push
push
push
pop
sub
cmp
cmp
dec
pop
idivl
nop
pop
push
mov
fwait
mov
imul
scas
lret
cmpsb
mov
mov
xchg
das
in
cli
loopne
push
pop
xor
ljmp
pop
enter
bound
push
adc
pusha
jg
jecxz
sbb
and
jge
inc
repz
inc
pop
pop
jno
mulb
inc
addr16
sbb
jns
ljmp
lahf
pusha
jle
mov
loopne
jb
mov
aas
outsl
pusha
pusha
insb
iret
cmpl
xor
out
dec
test
mov
sub
out
pop
ret
push
mov
fbstp
cmp
adc
std
and
adcb
stos
or
sbb
xchg
lods
addr16
xchg
rclb
mov
xchg
inc
adc
add
dec
dec
aad
pop
idivb
mov
jle
mov
push
icebp
sub
fcomip
mov
fbstp
add
add
mov
aam
push
dec
out
sbb
cld
dec
xchg
mov
movsb
adc
call
leave
fldt
pop
inc
pusha
jecxz
imul
movsl
outsb
sahf
pop
mov
je
test
lods
sub
in
cli
cmpsl
push
mov
jnp
inc
jp
inc
add
cltd
mov
or
mov
stc
mov
int
and
sub
xchg
pop
mov
out
cmpsl
add
fs
aam
lahf
rorl
jno
movsb
sahf
cmc
and
mov
jb
push
insl
cmp
pop
les
lods
or
push
ret
sahf
inc
into
sti
xor
bound
ljmp
lret
dec
or
jl
pmullw
iret
jge
jge
shrb
fdivs
fdivrs
sub
sbb
aas
mov
jle
mov
push
pop
adc
xor
imul
dec
sub
decb
lods
pop
andb
es
jnp
test
repnz
dec
out
loopne
xor
mov
fwait
cld
add
pop
nop
sbb
and
xor
mov
sub
or
popf
mov
mov
rolb
pop
test
decl
shr
xchg
out
inc
adc
test
add
test
outsl
sbb
cmpsl
es
sbb
cli
lcall
sbb
jns
mov
leave
mov
sbb
xor
jecxz
push
and
push
aaa
out
sbb
xor
mov
call
dec
adc
into
xchg
stc
and
ja
sub
cmpsl
lcall
and
mov
push
push
or
xorb
fcmovne
jg
es
fwait
jo
xchg
jl
das
lret
sti
xchg
sub
mov
jnp
pop
orb
loopne
fstpt
loopne
jmp
jg
jb
inc
jg
push
nop
sbb
xor
mov
inc
ljmp
mov
adc
fldenv
inc
push
mov
das
xchg
ret
in
mov
pusha
or
cmp
aad
ss
inc
mov
or
cmc
or
adc
mov
sarb
dec
and
xor
shll
outsl
insb
pop
adc
scas
aad
push
jle
jle
test
cs
pop
inc
adc
and
test
aam
je
cltd
loopnew
lret
out
pusha
cltd
xor
sbb
and
sti
mov
fists
movsb
insb
call
fnsave
test
fildl
aam
std
or
pop
jno
dec
add
mov
and
jle
dec
xchg
aad
gs
pop
data16
or
cltd
jbe
add
mov
pop
addr16
inc
addr16
or
pop
divl
adc
inc
adcl
test
sub
xor
xchg
outsl
xor
leave
jmp
or
out
adc
dec
rcrl
jecxz
sub
xlat
pop
cmpsb
sub
cmp
jg
js
fmul
jle
fimuls
lds
xchg
fsubr
mov
or
leave
aam
inc
ret
xor
cmp
or
mov
mov
cld
popf
lods
in
push
pop
fs
sti
jb
subl
mov
out
in
mov
lret
jg
stc
fldt
popa
inc
jae
fwait
sub
mov
cmc
gs
mov
xchg
mov
adc
push
shlb
dec
daa
xchg
idivb
and
xor
mov
or
push
pop
mov
sub
mov
fnsave
mov
lock
jl
lcall
sbb
mov
jl
mov
mov
lods
pop
inc
sub
xchg
dec
test
jae
fwait
inc
mov
mov
sarl
ljmp
mov
mov
stc
call
insl
jo
imul
inc
outsb
mov
xchg
testl
aam
xchg
cmp
imul
aam
aas
push
push
cmp
addr16
decl
push
pop
mov
lds
xchg
pop
js
call
clc
call
mov
lods
push
inc
stos
jne
jbe
push
arpl
mov
incl
inc
xchg
cmp
rcrb
scas
xor
jmp
add
sub
pop
icebp
mov
xchg
inc
jns
cmp
inc
jno
adc
mov
sbb
dec
cmp
mov
push
sbb
push
lahf
test
dec
pop
loopne
sbb
jb
mov
add
mulb
dec
mov
xchg
iret
sbb
jmp
adcb
cmp
scas
scas
cmp
dec
imul
fdivs
call
rcll
sbb
xchg
xor
cli
ficoms
orl
xor
loope
hlt
fistpl
cmpsl
ljmp
jge
push
mov
add
pop
add
fisubrl
jl
sub
cmp
sbb
icebp
cmpsl
jg
dec
arpl
inc
sub
icebp
repnz
jae
push
jmp
jmp
add
mov
in
xchg
jno
sbb
repz
jo
lea
xor
xchg
sub
jno
and
loopne
scas
or
add
aad
cmpb
xchg
adc
mov
pushf
loope
movsl
call
mov
dec
inc
cld
mov
xor
mov
imul
imul
and
mov
adc
mov
and
and
mov
cmp
push
sub
push
scas
lret
xchg
sub
cmpsb
cmp
enter
or
lret
test
xchg
mov
out
mov
aam
shlb
jno
fsub
mov
cmpsl
inc
out
shlb
or
push
pop
fildl
push
mov
mov
dec
jle
xchg
cs
xor
in
insb
movsl
insb
mov
mov
add
dec
test
loope
jle
mov
jle
xor
jecxz
lahf
cld
sti
stos
xchg
nop
mov
lahf
pop
cmp
das
mov
mov
cmovns
bound
push
or
out
add
lods
jbe
adc
add
and
lahf
mov
adc
inc
push
mov
adc
push
mov
jne
push
testb
sahf
adc
popf
pop
and
cltd
sbb
xchg
mov
fcomps
mov
mov
dec
jmp
sbb
cltd
loop
and
sub
or
sub
jns
nop
ljmp
mov
test
inc
ja
movsb
jb
xor
mov
push
test
ffree
cmp
mov
lods
out
push
stos
add
push
mov
fildll
pusha
mov
mov
aad
out
cmp
lods
fs
jnp
sbb
mov
jb
mov
repz
cmp
rcrb
add
dec
push
push
xchg
mov
xchg
sub
jo
mov
mov
sti
pusha
push
outsl
adc
out
adc
lds
push
mov
push
jg
pop
cmp
inc
xor
dec
sub
push
in
mov
outsb
mov
or
into
sub
inc
inc
jmp
sbb
arpl
or
lods
or
sub
pop
or
add
push
xor
cs
out
mov
fmul
cmp
mov
cltd
shrb
in
sub
inc
or
push
dec
xor
insb
adc
subb
pop
sub
add
js
mov
xor
mov
mov
cmp
std
mov
pop
or
push
clc
or
popf
mov
sbb
cmp
or
repz
dec
leave
inc
dec
or
or
andb
fld
add
clc
push
rclb
adcl
int3
scas
xchg
xor
movsb
mov
add
insl
nop
push
sbb
lock
enter
sub
and
inc
pop
jo
and
cmp
mov
fisttps
jmp
jecxz
pop
repz
or
andb
and
push
jmp
mov
clc
xor
leave
cld
pop
pop
stc
lahf
outsl
scas
sub
lret
mov
inc
cmp
sub
xchg
and
mov
aad
dec
cs
push
popf
sub
add
rcrl
push
ss
mov
sbb
shlb
push
or
ret
out
fwait
add
in
sub
in
pop
mov
jb
repz
out
nop
mov
dec
into
jno
popa
sar
stos
sub
sub
and
jo
sbb
loope
aam
idivb
lock
and
and
and
push
mov
stos
fldt
les
cmp
int3
sub
mov
enter
cmp
mov
or
clc
fs
pop
movsb
in
enter
jl
jmp
scas
push
fldl
inc
outsl
push
push
or
ret
xchg
pop
add
push
out
inc
push
ljmp
cli
sbb
mov
in
dec
stc
mov
add
leave
pop
cmpsb
orb
and
dec
ror
sbb
imul
lods
mov
lods
and
mov
push
pop
cld
mov
div
sbb
stc
int3
ret
ds
push
out
add
insl
fldt
ja
scas
stc
mov
shll
add
sub
add
stos
in
jg
inc
or
sbb
and
mov
inc
xor
pop
pushf
pop
std
stos
dec
outsl
dec
aaa
add
sbb
into
movsl
daa
outsb
pop
sti
or
fistpl
and
xchg
ficoml
sahf
mov
add
ljmp
lahf
cmp
lods
out
add
out
notb
das
imul
or
cmp
pop
push
sub
cltd
lea
das
dec
aam
xor
push
pop
in
dec
cmpsl
xchg
add
xchg
xchg
dec
mov
leave
inc
adc
lret
rcrl
out
js
fnstenv
mov
test
xchg
ficomps
js
scas
xlat
lods
out
and
adc
mov
pop
int3
push
cld
add
pop
test
iret
sbb
movsl
scas
add
in
outsl
loope
dec
ret
inc
dec
mov
mov
notb
pop
js
roll
jg
xor
icebp
push
lahf
imull
push
in
sub
add
push
xor
fdivl
jmp
jle
enter
xor
mov
cmc
daa
sub
sub
arpl
ret
rorb
frstor
push
add
ret
cmp
ret
addb
ret
or
inc
popf
cmp
pop
sbb
je
sub
and
and
xchg
fdivr
dec
cs
out
sub
push
and
lock
jp
shr
insl
xlat
mov
outsl
sti
in
dec
and
dec
out
aas
pop
mov
or
mov
push
fists
sbb
mov
dec
outsl
mov
add
cmp
imul
outsb
mov
xor
sbbb
cs
inc
pop
pop
imul
jecxz
dec
dec
add
sub
divl
out
mov
push
add
add
rcl
insb
jmp
xor
jns
scas
cmp
fs
add
adc
and
or
mov
pop
push
pop
movsl
xlat
lods
push
or
jmp
mov
out
mov
shlb
arpl
push
lds
adc
xchg
test
out
or
cs
icebp
cli
clc
and
push
inc
mov
jl
jno
pop
cmp
in
divb
adc
jecxz
movsl
and
xchg
dec
push
mov
and
push
rcrb
popf
stos
test
movsb
call
adc
sbb
arpl
sub
loop
hlt
mov
push
adc
inc
pop
and
lret
clc
dec
in
add
pop
mov
pop
ret
adc
ds
mov
imul
cmp
adc
stos
out
and
pop
jns
stc
cmp
outsl
cli
ljmp
test
hlt
mov
cmp
out
mov
cltd
lret
mov
jmp
stos
ret
lds
test
lret
arpl
and
icebp
lahf
fildll
pop
dec
xchg
cli
ljmp
pop
mov
add
lds
test
dec
fnstcw
mov
and
cmc
sbb
jmp
and
out
jno
ljmp
jge
mov
loop
shrl
out
cltd
fs
shr
mov
testb
clc
adc
mov
mov
cmp
out
push
adc
imul
sub
out
xlat
adc
sbbl
lods
lea
enter
xchg
call
mov
pop
mov
icebp
xchg
mov
ret
mov
subb
xchg
negl
aas
add
sub
mov
push
in
out
das
adc
aas
pushf
lcall
xchg
movsb
daa
cmp
xchg
xor
aaa
pushl
stos
mov
sbb
outsb
rorl
xor
mov
aas
sub
sub
test
bound
addr16
dec
cmp
xchg
inc
imul
enter
cmp
sub
std
adc
mov
push
push
xchg
test
xchg
xchg
dec
xchg
das
xor
mov
gs
push
push
jbe
xchg
aad
adc
gs
test
mov
movsl
mov
mov
cmp
mov
or
inc
daa
ljmp
daa
es
adc
fcoms
inc
pop
push
add
lods
pushf
mov
jne
push
gs
and
filds
fmull
push
ret
sbbb
dec
dec
daa
stos
imul
pop
ret
jne
adc
enter
int
jg
inc
lea
mov
rorl
cltd
pop
fnsave
out
xchg
xchg
lahf
mov
jbe
movsl
movsb
mov
stos
pop
inc
push
jno
jnp
cmc
sub
sub
loope,pn
pop
xchg
daa
mov
outsb
loopne
pop
ret
ret
and
loope
js
jne
or
cmpsb
xchg
push
fdivrs
sbb
mov
daa
or
mov
jg
mov
imul
mov
inc
mov
cltd
xor
mov
test
cli
mov
int
push
insl
pop
int3
cld
in
jb
outsb
pop
pop
aad
fadds
push
in
push
je
and
xchg
add
repnz
push
rorb
loope
jo
enter
jmp
int3
pop
fsubs
dec
xor
cmova
hlt
out
hlt
mov
shrl
sbbl
test
add
mov
fisttps
insl
inc
lahf
adc
mov
mov
test
push
ja
imul
xchg
xlat
les
dec
sbb
cmpsb
inc
mov
jmp
xchg
pop
sbb
leave
idivb
inc
pusha
hlt
cwtl
js
inc
movsl
ret
stc
add
stos
lock
stos
jne
mov
sti
dec
ret
inc
popa
insb
ffreep
mov
nop
cs
xor
movsl
adcb
mov
loop
mov
sub
insb
les
push
or
test
inc
xchg
lahf
js
enter
aaa
and
jle
and
inc
mov
addr16
mov
inc
sahf
or
lock
and
stos
out
push
cltd
inc
or
lea
cmc
mov
mov
add
push
add
stos
add
stc
pop
dec
and
in
mov
cmp
sbb
jnp
mov
lods
ss
cltd
adc
out
ficomps
and
fstpl
test
test
jno
not
sbb
pop
mov
pop
jbe
mov
and
and
nop
insb
mov
jns
ljmp
add
ds
js
and
dec
xchg
cs
cmp
das
neg
xchg
js
es
add
mov
cmp
and
aad
jbe
xchg
scas
push
fwait
mov
cmp
jns
and
pop
sbb
inc
insl
jbe,pt
scas
ljmp
mov
out
pop
jmp
mov
sbb
add
cmp
and
add
arpl
data16
push
insb
insb
push
outsb
das
outsb
insb
je
inc
inc
add
arpl
outsl
add
push
mov
pushl
pushl
pushl
pushl
call
ret
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
push
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
je
inc
add
jecxz
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
in
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
in
add
inc
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
in
add
in
add
in
add
in
add
in
add
in
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
in
add
inc
add
inc
add
out
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
add
add
add
add
add
jae
add
outsb
and
jne
or
bound
ret
xchg
loop
xchg
and
mov
xor
sub
leave
xchg
lods
sbb
dec
das
out
mov
mov
in
mov
jmp
jae
in
decb
das
push
cmp
jns
inc
mov
aam
popf
cld
cld
and
cmp
or
int
aas
popf
jle
dec
test
stos
push
mov
sub
inc
inc
xor
sbb
adc
cwtl
in
add
insb
es
gs
arpl
cmp
dec
cmpsl
lea
cwtl
fnstcw
cli
loope
dec
fs
mov
or
pop
pop
fidivrl
mov
jbe
lds
mov
mov
insl
fidivrl
aas
lea
mov
fiadds
es
arpl
loope
stc
pop
push
aad
add
movsb
fidivl
push
aad
push
adc
outsl
in
pushf
push
fstps
daa
inc
sub
or
or
adc
pop
mov
or
dec
mov
sub
fcomps
dec
push
int3
clc
stc
xor
pop
nop
xchg
cmpsl
xor
repz
ljmp
lods
sti
in
orl
test
enter
push
addr16
nop
mov
mov
jmp
imul
fs
and
xchg
pushf
dec
cld
pop
inc
jmp
xor
in
daa
lods
fcoml
js
scas
shr
sub
pop
addb
sub
outsb
xor
gs
push
cmp
mov
sarl
negl
pop
sbb
cmp
pop
cs
clc
cltd
dec
or
dec
jnp
mov
mov
dec
rcl
lods
xchg
mov
insl
into
and
stos
test
dec
mov
cmp
es
mov
jbe
xchg
and
adc
stc
dec
jge
jmp
mov
sub
inc
sti
sbb
dec
pop
sub
mov
stos
nop
add
or
out
call
mov
mov
ret
mov
andl
xchg
pop
cmc
jb
scas
adc
das
adc
mov
out
mov
inc
dec
cmp
js
cmp
lods
test
xor
dec
mov
inc
insl
pop
jo
test
cmpsb
adc
lcall
sbb
iret
dec
cmp
sbb
jae
inc
roll
aam
or
iret
test
lret
mov
mov
inc
xlat
dec
and
les
ja
js
adc
repnz
xchg
mov
mov
aaa
daa
sbb
sbb
pop
cmp
aad
and
push
ljmp
data16
jnp
mov
inc
fcmovne
jae
mov
ret
mov
inc
scas
mov
fisttpll
jmp
xchg
testl
dec
ja
cli
jno
mov
movsb
mov
mov
fwait
cltd
fs
adc
inc
jb
into
push
pop
or
jb
jg
jno
fwait
dec
jge
dec
lods
and
mov
xchg
mov
xchg
cmp
les
stos
xor
and
clc
add
jb
movsb
xchg
lcall
inc
push
test
add
pop
lock
push
lods
jno
bnd
pop
jbe
add
push
or
imul
ret
sarb
nop
sbb
jnp
or
popa
mov
mov
sbb
adc
mov
xor
fcomp
mov
push
sti
loop
lock
testb
hlt
mov
mov
loopne
push
mov
jmp
repnz
xor
sub
cs
pop
xor
xchg
pop
int
add
popa
sub
or
add
pop
cmc
mov
insl
push
xchg
lods
jb
repz
dec
popf
pop
insb
and
inc
mov
adc
leave
pop
cwtl
xor
adc
xchg
push
and
aad
push
shlb
mov
in
les
inc
shr
lods
into
loopne
shr
mov
daa
push
xchg
mov
add
sahf
bound
ret
pop
rorb
fidivrs
xchg
pop
mov
testl
push
jg
popf
cmpsl
test
clc
outsl
insl
mov
cmpb
push
pushf
frstor
mov
push
add
orb
jmp
inc
sti
roll
push
add
mov
and
mov
outsl
and
or
adc
imull
push
jge
lret
sahf
nop
dec
or
aam
mov
sub
divl
enter
cmp
jnp
push
dec
push
scas
ds
xchg
lcall
adc
xor
int
xchg
mov
enter
popa
out
push
clc
ds
mov
imul
dec
jne
xor
lea
inc
nop
fcmove
jg
and
jnp
or
mov
xchg
sbb
or
dec
stos
std
adc
lods
daa
lods
std
or
xchg
enter
mov
arpl
jp
and
inc
push
std
dec
dec
xchg
xchg
jo
dec
sbb
pop
xlat
or
inc
sbb
lods
or
pop
es
clc
push
cmp
or
pop
sub
inc
aaa
lods
data16
cmpsb
jne
jle
mov
iret
jo
inc
add
outsl
xchg
add
lods
xchg
mov
js
fdivr
xchg
lret
mov
sarb
xchg
xor
pusha
sbb
rcrb
add
jne
inc
clc
imul
inc
jae
fsubr
dec
xchg
daa
dec
cmpsb
push
sbb
cmc
mov
xor
daa
cmp
bound
movsb
pop
mov
cltd
lcall
pop
inc
sbb
jp
push
mov
cmpsl
mov
pop
xor
aas
dec
xchg
mov
inc
add
xchg
lcall
test
inc
add
shr
sbb
sbb
adc
add
jns
inc
pop
push
xchg
lods
pop
ficomps
xchg
nop
inc
popf
adc
ds
mov
xchg
popf
fcompl
imul
aas
jl
and
repz
dec
or
ljmp
add
xchg
int3
inc
insb
lea
xchg
mov
dec
je
inc
mov
call
cmc
jle
sbb
push
jo
dec
pop
std
lret
xor
outsb
cld
ret
jns
pusha
jge
cmpsl
and
xor
mull
sbb
test
in
aad
push
push
sub
gs
push
push
adc
jo
lcall
jmp
das
jns
lods
mov
inc
lcall
popa
jae
xor
popf
repnz
and
inc
lea
call
add
pop
imul
or
xchg
js
hlt
ffree
test
sahf
cmp
popa
rorb
out
mov
or
and
imul
jp
sub
sub
or
fidivrl
xor
out
test
ficoms
adc
aaa
inc
testl
fstl
test
add
mov
jbe
cmc
imul
xchg
or
mov
xchg
loop
xor
push
test
sub
mov
hlt
mov
cs
bound
sbb
sub
lret
es
and
xlat
mov
add
jmp
nop
and
mov
xor
fnsave
push
subb
xchg
js
mov
mov
mov
push
fmull
dec
and
in
lahf
test
leave
cmpb
add
fsts
lret
push
mov
ds
pop
sub
xor
cmp
xchg
dec
pop
sbb
xor
inc
mov
callw
idivl
mov
fwait
xchg
jo
push
mov
xor
jg
stos
in
movsb
in
xchg
mov
inc
nop
cwtl
mov
enter
dec
aas
push
sub
aaa
int
xor
or
sahf
in
mov
fs
gs
stc
mov
fldl
int
xor
dec
mov
int
fcmovu
lods
pop
cld
inc
adc
xor
or
ljmp
or
cmc
pop
pop
out
adc
add
xlat
scas
jb
jmp
hlt
sarl
add
pop
aaa
jnp
cld
repz
pop
data16
inc
sahf
mov
xchg
or
adc
push
jns
popa
shll
lods
ljmp
xchg
adc
pop
mov
and
push
pop
lret
pop
push
cmc
popa
xlat
lcall
inc
jp
test
aaa
adc
sbb
dec
push
into
sbb
xor
test
lods
xlat
sub
repnz
iret
popa
adc
cmp
and
xchg
xlat
sub
mov
add
ret
sbb
enter
cli
ljmp
lahf
cmp
int3
int
xor
fcomps
mov
pop
fs
push
push
iret
out
push
std
scas
mov
scas
jmp
sbb
cmp
pushf
push
xchg
adc
jnp
cmp
pop
dec
add
inc
cli
jbe
insl
inc
mov
push
and
das
lret
lahf
hlt
inc
stos
cmp
lods
aaa
leave
xor
adc
sub
mov
push
xchg
xor
jl
int
lods
outsl
push
mov
arpl
rol
push
sbb
fadds
sbb
fiadds
nop
loopne
aaa
scas
jo
xor
repnz
lret
push
cmpsb
inc
sbb
add
imul
call
fsts
push
jmp
mov
push
test
roll
fcmovb
xor
dec
push
data16
mov
sub
dec
gs
imul
adc
das
mov
lret
jbe
ud0
add
sti
pop
mov
pop
sub
jns
in
imul
mov
push
cmp
mov
add
repz
xchg
xor
in
or
pop
aas
xchg
sub
or
pop
scas
sarl
icebp
pop
jbe
fcmove
sbb
jns
xorb
mov
fs
mov
stos
push
adc
xor
stos
inc
aas
push
cs
std
lods
dec
cltd
ss
and
xor
mov
jno
enter
shrl
xchg
push
xor
frstor
jae
sti
rcrl
push
jge
add
and
xchg
pop
fildl
adc
outsb
in
and
aas
popf
or
pand
add
jp
ja
jp
aaa
lea
fnsetpm(287
or
push
ljmp
mov
sbb
xor
lret
hlt
or
out
aam
mov
cs
xor
sub
sub
loopne
lods
aam
jbe
sbbl
xor
in
sbb
jge
lret
push
scas
push
inc
ret
aaa
enter
in
mov
mov
sbb
adc
mov
cld
or
push
in
cld
je
mov
cmpl
cmpsb
mov
and
leave
mov
and
dec
nop
xchg
add
cmpsb
push
lds
jge
cmc
loop
jl
mov
jecxz
test
gs
iret
cmc
sbb
add
lcall
ss
addr16
icebp
lods
inc
mov
jg
cmp
movb
test
out
dec
adc
mov
sbb
insl
xchg
dec
lahf
icebp
inc
or
fcmovnb
adc
out
jl
test
or
dec
enter
insl
mov
cmp
shr
shrl
nop
xchg
movsl
rcrl
int3
xstore-rng
cmpsl
test
jl
xor
hlt
inc
adc
mov
pop
stc
sahf
and
out
cmp
mov
xor
inc
int
xchg
cmp
insb
mov
shr
cmp
mov
rorb
mov
call
ljmp
addr16
ljmp
clc
sbb
cltd
loopne
loope
inc
lret
add
ds
mov
push
mov
or
ljmp
ret
pop
pop
ja
adc
inc
jo
xchg
test
inc
in
lret
hlt
lds
fistps
dec
adc
xchg
loopne
frstor
jbe
pop
cmpsl
popf
pushf
aaa
and
lock
cs
or
lea
xchg
and
rcr
sbb
dec
sub
dec
test
push
mov
es
adc
or
lock
in
lret
in
inc
cmp
in
sbb
repnz
enter
pop
idivl
hlt
push
cwtl
ss
and
test
loop
push
ja
lods
movsb
aad
cltd
sub
sbb
xor
in
jle
and
mov
sbb
push
jecxz
sub
gs
cmpsb
jmp
mov
and
xchg
aas
inc
lock
data16
cmp
pop
push
bound
mov
pop
adc
pushf
sub
inc
lock
mov
in
js
cmpsl
dec
and
xchg
sbb
fdivl
cmpsb
jb
ss
sbb
test
scas
clc
add
mov
xchg
std
rorl
sbb
push
movsb
inc
xor
mov
dec
test
mov
arpl
xchg
push
add
mov
outsl
mov
pop
fcoms
jmp
test
ret
das
adc
fdiv
cmp
jae
and
lds
mov
aam
xchg
pop
negb
adc
cmp
out
cmpsb
sbb
jbe
mov
and
and
in
cli
scas
sbb
dec
pop
mov
ficompl
dec
jno
dec
lds
dec
sti
jge
jp
lds
frstor
and
aas
stos
dec
jge
icebp
popf
mov
aaa
jb
mov
dec
test
push
adc
popa
cwtl
push
push
out
mov
test
ja
adc
ljmp
add
mov
rcr
mov
add
cmp
gs
mov
mov
xchg
push
and
repz
das
sub
adc
cmp
imull
ret
ljmp
outsl
push
mov
daa
pushf
jne
lds
mov
cmp
mov
sub
xchg
jo
outsb
lahf
xchg
fs
jnp
xor
pop
in
jo
clc
pop
lea
outsl
test
negl
lret
incl
mov
popa
cwtl
rclb
xor
xor
jle
in
jae
aad
or
les
jecxz
inc
and
mov
mov
bound
dec
insb
pop
cmpsl
xor
iret
scas
cmp
es
mov
shll
push
iret
or
sbb
sub
jb
mov
iret
push
iret
cs
cmp
sar
mov
movsl
dec
mov
mov
sti
fadd
in
es
xchg
iret
or
ss
or
xchg
imul
push
mov
ficompl
daa
loop
insb
mov
out
dec
insb
adc
xchg
jge
icebp
in
enter
out
add
test
push
dec
cmp
push
dec
pop
faddp
xchg
lods
inc
jle
pop
dec
jno
call
cmp
cmpsb
movsl
xchg
arpl
jns
lods
ljmp
aas
insb
mov
pusha
adc
push
jmp
test
ss
mov
xor
cli
dec
pop
daa
ljmp
inc
leave
dec
shrl
mov
xchg
inc
xor
insb
inc
enter
cmc
lds
and
pop
rcrl
adc
pop
mov
xor
test
or
ficoms
pop
xchg
pop
jge
jg
mov
jns
movsl
inc
dec
mov
cmp
sbb
and
jo
adc
filds
sbb
ja
scas
pop
lock
out
pop
mov
push
push
xor
int3
push
jae
xchg
loop
mov
leave
shll
rorb
fs
cwtl
jne
lahf
adc
lock
lret
adc
dec
pop
outsl
lock
xor
repnz
add
ja
enter
popl
fdivr
aam
sub
cmc
inc
int3
ds
adc
jmp
add
lock
shrb
shl
lods
pop
js
outsl
fs
int
dec
adc
and
dec
inc
xchg
mov
jmp
fs
mov
in
nop
loop
jge
cmpsl
inc
js
pop
cmp
enter
sbb
sub
scas
outsb
sahf
insb
shlb
push
fs
mov
stc
dec
dec
mov
inc
jb
inc
adc
and
cmpsl
and
popa
push
roll
mov
int
push
push
pop
mov
iret
std
and
test
stc
fmul
adc
dec
dec
cli
cmp
cmc
sub
cmp
stc
inc
mov
cmpl
inc
das
mov
in
jecxz
jnp
mov
xchg
mov
test
cld
sub
es
and
dec
cmp
pop
sub
ljmp
fwait
mov
cmp
mov
lock
push
sti
sbb
cmc
pop
lds
popa
xorl
jle
test
pop
jne
mov
shlb
ret
aaa
mov
add
mov
test
xchg
mov
push
pop
popa
cli
dec
dec
sbb
ret
repz
cmp
sbb
adc
jmp
jle
cmpb
add
test
hlt
test
fwait
adc
sbb
hlt
fisttpll
loope
loope
loope
mov
xchg
mov
out
jl
mov
xlat
dec
add
xor
or
stos
adc
clc
and
pop
or
add
xor
and
sub
dec
add
repz
adc
shrb
jno
dec
insl
shr
mov
inc
aad
data16
scas
ret
ss
ds
pop
enter
and
cwtl
int
enter
add
or
clc
inc
and
int
sbb
jno
data16
cld
mov
jno
inc
xor
incl
scas
and
sub
pop
cmp
mov
sbb
andl
insb
pop
mov
xor
xchg
cli
mov
js
fcompl
xchg
inc
daa
add
aad
sbb
mov
or
cs
add
mov
shlb
loopne
rcrb
cmp
xor
or
ss
notl
jns
cmp
rcrl
push
sbb
ss
dec
daa
insb
push
xlat
daa
outsb
sbb
jnp
arpl
xchg
rorb
inc
xor
ss
lock
lock
outsb
imul
mov
jg
nop
sbb
inc
fs
lods
push
dec
fwait
push
aam
jg
mov
push
adc
pop
fstl
pop
psubb
cmp
rolb
ret
inc
xor
or
hlt
pop
mov
or
and
test
fidivs
add
pusha
xchg
int
xchg
or
loope
dec
dec
xor
mov
xor
and
rolb
push
mov
dec
mov
xorb
or
test
or
arpl
adc
lcall
xlat
cmpsl
dec
ja
lock
mov
repz
jno
mov
fcomip
push
gs
mov
lcall
lahf
lods
call
jmp
dec
outsl
and
add
insl
ret
stc
lret
sub
xor
dec
scas
popf
xor
pushf
mov
adc
dec
or
adc
int3
ret
dec
fld
data16
cld
fidivrl
insb
pushf
and
push
fidivrl
and
jnp
cmpsb
movl
fadd
pop
inc
jmp
pop
mov
testl
push
fs
mull
jge
fadds
ret
xchg
or
sub
cmp
sarl
shlb
mov
es
push
lods
insb
adc
xchg
sub
scas
jecxz
adc
xchg
cmc
push
jmp
out
bound
sarl
jmp
dec
inc
sbb
xor
inc
pop
and
jbe
pop
cmpsl
int
inc
mov
lcall
dec
outsl
fistpll
rcll
push
and
add
push
pop
xor
ds
push
mov
dec
test
inc
das
insb
sub
jp
mov
lock
add
leave
add
xorb
and
rcl
rcll
mov
lods
xchg
jl
leave
sahf
outsb
into
mov
pop
dec
mov
pop
and
xchg
pop
dec
jno
out
dec
add
or
mov
mov
mov
push
or
sbb
outsb
in
xchg
add
aam
fistps
sahf
pop
cmp
mov
add
and
inc
add
xor
push
jo
inc
xchg
push
clc
clc
insb
call
mov
outsl
js
xchg
jnp
adc
xor
cwtl
mov
add
add
inc
iret
pop
sbb
scas
call
push
gs
xchg
call
pop
imul
ffree
pop
cmc
add
jmp
fildll
enter
sub
popa
pop
test
fwait
or
sub
mov
jmp
mov
and
stc
add
push
repz
sarl
imul
dec
inc
inc
push
mov
mov
and
push
inc
out
addr16
cli
pusha
popa
mov
push
stos
and
and
cmpsb
push
repnz
hlt
cmp
inc
adc
les
sti
shll
and
in
pop
rcrb
hlt
jg
loop
rorl
and
pushf
lret
jp
and
cmp
das
and
push
xchg
in
dec
pop
fs
dec
loop
inc
sub
lcall
pop
clc
add
adc
adc
push
inc
add
scas
insl
push
stc
push
jle
or
pusha
cmp
test
iret
pop
add
scas
fwait
pop
rclb
xchg
js
outsb
negl
lock
fxch
mov
loopne
lahf
sub
movsb
sahf
iret
add
mov
adc
cltd
inc
fs
cltd
sbb
pop
pop
cmp
imul
pop
cmp
mov
mov
dec
adc
xchg
mov
ret
aad
xchg
fwait
mov
outsl
mov
les
fldl
mov
stos
addb
movsb
gs
xchg
xchg
pusha
fidivl
dec
pushf
push
notl
pop
mov
sub
cmpsl
dec
jo
push
sarb
or
loope
repnz
mov
test
add
je
jb
mov
cmp
and
mov
movsl
mov
or
pop
gs
jl
pop
cmp
jle
fsubl
add
adc
xchg
iret
popf
test
pop
shrl
xchg
cmp
sar
inc
ret
andb
lea
push
mov
sub
mov
or
fidivrl
repz
or
lret
sbb
sbb
decl
aad
and
icebp
pop
xor
and
hlt
mov
repnz
pop
push
adc
in
xor
in
and
jl
repz
cmp
out
into
cmp
mov
mov
sbb
out
cmp
mov
and
popa
push
std
rcrb
sbb
jp
mov
dec
push
testb
mov
sbb
cmpsb
cmc
pusha
adc
jg
int
in
test
das
andb
inc
sub
cmp
test
lcall
mov
or
mov
ret
mov
popa
outsb
js
sbb
add
es
daa
in
push
stc
cwtl
insb
or
aas
shlb
add
aam
mov
enter
fwait
in
jne
xlat
cld
mov
jns
adc
jecxz
clc
mov
out
dec
inc
ja
popa
jnp
xchg
sub
mull
pop
daa
push
stos
jb
movsl
push
pop
mov
xchg
inc
lret
es
ljmp
ds
and
jle
inc
push
mov
xor
jmp
cmp
in
push
xchg
push
mov
mov
push
lea
in
xchg
test
pop
jecxz
insl
loope
xor
mov
cmpsb
shlb
repnz
pop
jae
pop
pop
das
fs
sbb
insl
bound
mov
adcb
inc
xor
dec
push
push
test
pop
lret
sub
movsl
and
adc
pop
sub
jp
mov
xchg
shll
negl
jne
fsubr
ret
arpl
cmpsl
cmp
jecxz
sti
fists
mov
add
sub
or
out
into
mov
fnstcw
out
jb
mov
push
lods
xor
and
inc
aaa
nop
push
ret
mov
cmpl
std
int
enter
movsb
pop
loope
jnp
and
shr
pusha
push
adc
jp
insl
sbb
aas
rcl
sarl
pop
push
insl
and
pusha
int
negb
or
mov
sarb
mov
push
test
lock
xchg
add
pop
call
push
inc
jmp
icebp
pop
pushf
mov
jecxz
loope
pop
mov
je
jne
adc
loop
test
mov
add
idivl
int
popa
jcxz
daa
jecxz
loope
cmpb
hlt
loopne
aam
or
call
es
add
sub
xchg
imul
jmp
jmp
fstps
mov
dec
pop
pop
xchg
ss
outsl
push
mov
scas
xchg
sbb
rorb
int
pop
push
in
aam
int3
inc
sbb
cmpsb
xchg
out
xor
js
jno
pop
adc
cli
jmp
and
and
xor
filds
add
or
xor
lret
cwtl
lcall
insl
mov
les
mov
fmulp
dec
mov
add
adc
imull
mov
or
pop
mov
fcmovu
fildl
shl
divb
add
mov
sti
mov
rcr
jle
jnp
fmuls
mov
inc
cwtl
sub
sbb
cmpb
cmp
mov
icebp
lret
xlat
cmpl
push
test
pop
jecxz
pop
add
xchg
in
loopne
and
call
das
ficompl
rcrl
inc
mov
mov
pop
iret
fstps
fstpl
mov
jno
mov
popf
ljmp
bound
xor
xor
jmp
mov
mov
or
pop
mov
add
pusha
js
mov
mov
ja
insl
xlat
sbbb
push
dec
in
add
dec
scas
push
mov
es
call
jno
sub
insb
scas
push
roll
sub
dec
call
push
jbe
sti
jns
and
stos
mov
adc
xchg
sbbb
dec
aaa
mov
jae
xchg
sbb
movsb
jo
xor
dec
mov
cltd
mov
push
pop
stc
bound
outsb
lds
add
fstl
mov
or
bound
jmp
enter
sbb
cwtl
fisubrl
jp
rcll
clc
cmpps
dec
pop
mov
aas
cmp
jo
cltd
dec
fnstsw
jno
mov
sbb
push
clc
rorl
out
sbb
lock
iret
int3
pop
pushl
in
popf
push
mov
mov
cwtl
mov
leave
pusha
loop
and
adc
mov
ds
dec
mov
stos
sub
cs
mov
divl
mov
fisttps
std
test
scas
or
push
shrl
movsb
inc
mov
aaa
push
dec
cmpsl
xor
into
jle
dec
idivl
mov
lret
cmp
paddsw
sub
pop
cld
or
in
xlat
add
popf
lret
or
scas
pop
daa
sbb
notl
push
test
adc
dec
iret
and
xchg
mov
mov
pop
cmp
rcrb
inc
xor
jae
andl
int
push
loopne
pop
nop
repnz
pop
and
in
dec
push
and
bound
and
loope
adc
fistpll
mov
mov
dec
jmp
movsl
adc
leave
jb
into
nop
push
xchg
in
callw
js
insl
add
or
cltd
jne
jg
add
lahf
jb
roll
in
notb
adc
out
pushf
jno
pop
clc
aad
mov
adc
call
int3
sub
test
xchg
mov
negb
mov
xchg
xchg
or
adc
xchg
cwtl
sub
in
ret
mov
movsb
and
movsb
or
mov
nop
add
aaa
and
adc
pop
pop
dec
xor
shlb
or
and
jne
mov
in
and
mov
xchg
movsb
mov
sbb
sub
or
scas
sub
push
aad
mov
pop
fistl
lret
add
push
sbb
inc
and
or
xchg
cmpsl
shr
stos
cmc
leave
rolb
sbb
jbe
icebp
movsb
inc
add
add
adc
mov
inc
push
fwait
test
in
lcall
mov
mov
add
mov
add
iret
dec
ret
cwtl
sbb
mov
stos
jg
jns
mov
fistpl
mov
loopne
imul
mov
xlat
dec
inc
mov
rorl
mov
pop
jp
nop
fdivrl
push
and
pusha
outsb
pushf
cli
imulb
xor
mov
pop
xchg
sbb
inc
icebp
cmpsl
in
cmc
test
es
call
sub
into
sbb
or
pop
jno
int3
stos
shrl
push
sti
fdiv
aas
sub
mov
inc
add
jg
pop
stc
es
insl
mov
es
inc
inc
mov
add
inc
pop
inc
jl
popa
movsb
lcall
or
mov
cmp
mov
jecxz
ss
jo
or
rorb
add
pop
mov
bnd
loope
ret
clc
imul
sub
mov
sbb
sub
cwtl
dec
inc
xorb
or
mov
sbb
mov
std
xor
shrb
orps
mov
sub
mov
and
enter
lods
add
pop
mov
cli
sar
and
and
push
sbb
dec
sbb
ljmp
stc
addr16
test
push
loopne
lds
mov
es
xor
call
mov
xor
mov
clc
pop
popa
jae
in
lock
nop
and
out
sub
nop
jne
sbb
sub
xor
xchg
test
cli
dec
rorb
sahf
mov
fdivl
sub
xor
mov
inc
push
push
adc
or
add
mov
stos
or
push
xchg
or
dec
scas
jg
jbe
pop
and
fisttpl
rclb
sahf
rorb
int3
cmp
std
imul
xor
int
cmpb
or
call
sbb
inc
or
ja
out
loopne
dec
jle
cmp
and
jmp
xlat
xchg
stc
sbb
pop
cmpsl
mov
pop
movsb
fstpt
gs
pop
mov
pop
cwtl
push
xor
jmp
ds
and
inc
inc
cmc
adc
out
xchg
add
jae
out
mov
lods
sbb
cmp
cmp
fisubrs
sbb
jnp
imul
lahf
loope
andb
push
xchg
test
test
mov
and
sbb
mov
sbb
mov
mov
xor
push
cli
push
aaa
xchg
fs
popa
xchg
lcall
jge
test
into
adc
lret
jge
push
lods
imul
lock
sub
mov
adc
sbb
lods
cwtl
pop
push
fidivs
pop
dec
mov
dec
rcll
sbb
add
stos
lods
in
fidivrs
fs
or
rolb
fstpl
loop
ret
lret
sub
jb
ja
mov
sbb
sti
out
shlb
bound
or
push
inc
cmp
outsl
repnz
cmp
jl
xor
lds
cs
sub
dec
test
stos
ljmp
jno
push
loop
jmp
movsl
fldcw
int3
ret
int3
add
shl
mov
lahf
push
adc
pop
gs
aad
lahf
pop
add
dec
jl
ja
xor
mov
out
inc
xor
pop
push
out
lods
test
sbb
int
and
mov
pop
aas
loop
popf
sarl
sub
aam
xor
test
pusha
mov
cmpsb
push
inc
aad
ret
mov
in
push
mov
lret
icebp
aas
sub
ja
shl
xchg
xor
mov
hlt
pop
inc
mov
dec
or
pop
push
cmp
sarl
dec
loope
push
dec
mov
mov
ss
xchg
stos
sub
pop
push
clc
or
add
shl
fwait
pop
xlat
sarl
jl
mov
lods
add
pop
gs
ret
gs
loop
test
movsl
inc
jns
sub
insl
lea
mov
cltd
shl
ret
cmp
sbb
cmpsl
outsb
arpl
add
int
sub
xchg
cmp
shr
push
pop
adc
sub
jb
sub
lret
xorl
xchg
pop
ja
add
jp
daa
mov
in
sbb
mov
cmpsl
int
sub
dec
mov
mov
sbb
push
add
dec
push
sbb
lds
xor
push
push
aaa
or
gs
nop
add
incb
sbb
add
mov
pop
adc
push
jg
mov
scas
jecxz
cmp
and
aaa
cmpb
jle
cwtl
or
outsl
in
sub
sub
rcrb
cwtl
ljmp
push
lds
jb
cmc
lock
mov
and
popf
test
shl
mov
pop
nop
pop
cmp
jmp
mov
cmpsl
dec
scas
jb
repnz
rorl
repz
sarb
mov
popa
or
loopne
xor
xchg
rclb
jno
popa
mov
xchg
in
fiaddl
jle
cmpsl
mov
pop
cli
dec
mov
les
addr16
aaa
paddsw
fcmovnb
test
mull
outsl
add
nop
stc
arpl
test
push
fs
test
adc
outsb
sbb
xchg
loop
inc
adc
mov
pop
pop
loop
jnp
mov
adc
js
movsb
fdivrl
and
jae
and
jmp
jmp
lods
sub
jb
int3
sub
fneni(8087
pop
mov
push
sub
xchg
lret
mov
jle
cltd
add
test
mov
fnsave
cltd
jmp
out
xlat
xacquire
inc
sub
lea
nop
hlt
and
or
mov
jnp
lret
rorb
lods
lock
sbb
or
or
ret
stos
das
fcmovnbe
xchg
mov
and
daa
adc
imul
imul
rolb
push
pop
jge
pushf
fs
test
inc
loopne
mov
add
dec
xchg
and
jl
rol
xor
scas
decb
lods
xor
add
fidivs
in
daa
add
test
fidivrs
int
adc
mov
jl
stos
test
cmp
fcmovu
das
cmpsb
loope
sub
sti
test
sub
and
hlt
pop
int3
testl
mov
pusha
cmp
movsb
lods
outsl
sub
jns
movsb
ss
add
out
test
mov
fcomps
sub
xchg
sub
stos
arpl
ja
xor
inc
sub
inc
xchg
into
xchg
jp
jp
in
fwait
add
data16
int
sub
test
rcl
dec
adc
add
add
adc
xlat
sub
mov
ja
jl
lea
hlt
push
inc
cltd
fdivrs
sahf
xlat
lret
scas
test
sub
fcmovbe
and
dec
fsts
and
jge
jle
out
and
cmpb
int3
sub
data16
jge
and
lret
ja
push
pusha
or
jae
sti
xor
cwtl
mov
push
jmp
inc
loope
push
sbb
int3
pop
add
aad
pop
xor
mov
repz
icebp
pop
and
out
xor
jecxz
fldl
dec
ljmp
mov
mov
pop
imul
adc
mov
mov
fdivrl
data16
mov
push
in
pop
cwtl
push
dec
cli
mov
or
xchg
xchg
push
scas
imul
jne
adc
ja
xchg
dec
enter
dec
dec
or
ja
adc
std
mov
mov
jno
cltd
mov
mov
xchg
dec
and
ret
rolb
scas
add
mov
test
xor
push
jl
loop
notl
jo
inc
and
jbe
rcrb
enter
push
in
stos
das
mov
popf
gs
leave
daa
pop
xchg
xchg
mov
mov
ja
mov
insl
test
or
les
fistpll
jl
ss
jp
xlat
repz
fmul
mov
xor
cmpsl
or
fmull
mov
xchg
pop
sbb
sbb
repz
xchg
dec
out
je
sub
outsl
std
mov
xchg
and
push
pop
loope
sbb
adc
or
pop
in
pushf
test
mov
and
add
insb
ss
lcall
rorl
adc
popf
inc
or
dec
fstps
jg
sbb
cmc
adc
mov
pop
xor
addr16
inc
shrb
sbb
cli
push
jne
repnz
pop
mov
jne
popa
mov
in
inc
icebp
std
orl
pop
mov
mov
mov
mov
xchg
lea
dec
arpl
jnp
in
mov
movsl
mov
add
push
and
xor
fwait
lcall
jae
call
out
cli
push
jle
fcoml
call
inc
ss
xor
mov
and
clc
les
xor
incl
or
push
daa
lods
jo
sti
jg
sahf
jne
test
in
pop
mov
add
xchg
push
sbb
sub
push
xchg
jno
hlt
cld
push
iret
mov
punpcklbw
pop
repnz
xchg
push
jnp
ret
mov
adc
loope
mov
mov
shrb
mov
out
lods
adc
pop
jae
loopne
dec
aad
pusha
loopne
mov
in
jns
insl
scas
xchg
lock
xchg
jne
ret
pop
push
push
push
sub
inc
fwait
imul
arpl
add
sti
rcl
adc
fnstcw
mov
mov
inc
dec
lods
call
pop
dec
or
call
test
jl
mov
sbb
cltd
push
cltd
int3
mov
push
push
lret
out
cs
dec
das
and
sub
pop
bound
mov
out
sbb
jle
jne
pop
fs
pop
stos
aam
jmp
xchg
xor
mov
hlt
xor
jp
mov
mov
mov
mov
nop
lcall
fdivrl
sub
adc
orl
xor
movsl
ds
jmp
mov
push
test
mov
in
dec
leave
ret
push
lret
xchg
or
xchg
or
and
test
sub
adcb
frstor
setns
mov
sbb
push
dec
dec
aaa
fbstp
cltd
push
dec
sbb
mov
xchg
nop
inc
cmp
outsl
ljmp
dec
in
add
daa
xchg
inc
out
dec
lock
xchg
mov
outsl
bound
popf
push
ja,pt
daa
lcall
leave
cmp
insl
add
jmp
pusha
lcall
adc
loop
lcall
add
lahf
test
add
jle
and
pop
jp
pop
jno
xchg
mov
dec
mov
scas
xchg
pop
aam
mov
mov
xchg
pop
and
pop
dec
cli
aaa
lea
clc
out
jnp
out
inc
out
and
rol
in
daa
mov
out
inc
dec
or
add
jb
movsl
cmp
pop
pop
mov
add
enter
rol
outsb
or
adcl
or
adc
add
xchg
clc
mov
cmp
cmp
inc
js
jo
and
xchg
xchg
dec
fs
cmp
push
fistps
cli
dec
lret
sti
imul
jecxz
int3
xchg
ljmp
fimuls
lret
mov
dec
out
mov
outsb
clc
out
int
test
ljmp
mov
inc
sub
inc
or
imul
jge
mov
xchg
pop
mov
xor
dec
test
test
iret
out
xchg
mov
in
test
xrelease
adc
cli
aam
shll
jo
xor
jbe
into
idiv
imul
xchg
inc
dec
aam
divb
push
sbb
or
mov
loop
pop
pop
mov
incb
xor
push
aaa
fcompl
lret
insl
nop
jb
loopne
mov
push
cli
js
mov
repnz
into
out
dec
push
push
test
push
pop
adc
push
xchg
push
cmc
jno
stc
push
es
cmc
mov
dec
popf
sahf
or
stc
dec
xor
sub
les
push
fstps
add
push
inc
mov
pop
imul
inc
xchg
je
lret
jb
mov
add
faddl
sub
outsb
add
pop
lods
scas
pop
sub
jno
pop
test
push
jp
sbb
inc
test
int
xlat
dec
mov
pop
dec
fistpl
and
and
sub
cmpsl
jg
xor
scas
popf
andl
stos
and
cs
testb
mov
pop
pop
leave
jne
cmp
scas
nop
adc
add
outsl
push
sbb
ss
push
jbe
xchg
xchg
mov
js
mov
pop
gs
push
mov
insb
mov
dec
incb
addr16
adc
fcoms
pop
or
lret
push
cwtl
inc
dec
mov
loop
jge
shrb
dec
fiaddl
inc
daa
or
repnz
addl
mov
dec
mov
jmp
xchg
mov
in
mov
jae
mov
xchg
adcl
jle
orb
push
hlt
or
cmpl
out
adc
clc
cltd
or
xchg
mov
lods
cld
xchg
mov
dec
jmp
mov
sub
mov
loope
sub
mov
xchg
push
iret
cmp
jmp
add
pusha
je
mov
aas
clc
add
shlb
out
pop
int3
xor
ljmp
xor
cmp
push
icebp
and
insb
jns
dec
dec
lahf
lock
and
and
scas
lcall
xchg
sarl
test
jge
insb
cmp
sub
js
and
and
rcrl
outsb
mov
lods
inc
dec
add
shll
inc
push
push
and
data16
xor
int
mov
lods
sub
pop
and
jge
sub
cmc
enter
test
xchg
daa
cmp
cld
mov
xchg
mov
push
orl
dec
pop
inc
push
in
jle
movsb
sub
out
loopne
and
cmp
popa
and
inc
aas
stos
dec
test
hlt
daa
xchg
cwtl
loopne
pop
mov
orb
cmp
pop
pop
cld
and
cmp
rclb
pusha
and
or
cmp
add
mov
arpl
xchg
push
test
outsl
adc
xchg
daa
sbb
ljmp
fidivl
add
mov
int3
clc
pushf
push
fbld
jns
cmp
add
xchg
or
and
stc
xor
adc
xlat
add
out
inc
add
cs
mov
fst
and
mov
scas
mov
dec
repnz
test
push
pop
sbb
fimull
cmp
mov
dec
lret
cmp
push
jle
shrl
dec
popf
out
push
rcrb
xchg
xor
push
fsubrp
lock
and
in
pop
int3
sbb
push
add
popf
lock
add
push
adc
lcall
xor
sbb
inc
jl
sbb
je
stc
rcll
mov
je
outsb
fcos
cltd
cmpb
ja
cmp
cmc
stos
jg
in
push
mov
mov
sub
push
out
mov
xlat
add
test
lock
fdivrs
pop
xor
adc
dec
or
add
adc
ja
mov
pop
push
data16
jae
mov
add
mov
jecxz
sub
test
test
das
xchg
pop
ret
lods
jae
ret
xchg
cmpsb
fdivl
aad
inc
sete
pop
pop
scas
cmpsl
push
loope
decl
lods
fs
pop
xor
mov
imul
fbld
stos
ja
into
dec
and
sbbb
stos
lea
sub
and
or
adc
sbb
pop
ss
cmp
inc
lods
and
aas
fs
dec
pop
movsl
mov
loope
movsl
pop
nop
lret
mov
mov
stc
push
aad
jne
pop
sahf
mov
mov
push
mov
imul
dec
daa
adc
or
repz
mov
xchg
sub
pop
push
sahf
cmpsb
ds
icebp
adc
dec
jno
les
xor
sarl
push
in
movsb
sbb
in
sub
cmc
int3
cwtl
mov
lcall
xchg
jge
cltd
outsl
mov
arpl
add
add
mov
repnz
repnz
adc
fisubrl
push
dec
jl
cmp
int3
sarl
mov
jb
shll
nop
stos
push
in
into
add
jo
dec
movsb
xadd
cld
inc
orb
mov
cmp
inc
pop
mov
div
or
mov
add
iret
mov
inc
sbb
outsl
adc
dec
out
enter
push
inc
push
or
push
jp
jl
and
int3
cld
mov
push
fsubs
xchg
pop
mov
pop
cmc
test
dec
cmp
lock
adc
ret
xchg
dec
addr16
scas
hlt
in
pop
in
xlat
hlt
push
sahf
fwait
cwtl
adc
and
or
testl
sub
icebp
lea
cmpsb
mov
mov
in
outsb
addb
stc
imul
pop
jg
push
mov
insl
sbb
mov
jnp
lahf
adc
popf
enter
out
out
cmc
loope
mov
mov
xchg
aaa
sti
mov
aam
lret
lahf
ret
imul
cltd
loop
bound
xchg
pop
stc
cmp
push
arpl
push
inc
nop
mov
xor
sbb
cmp
pop
mov
xchg
pusha
sbb
icebp
sbb
push
cli
movsl
out
int3
pop
mov
into
mov
fs
dec
or
fdivs
cmpsl
fsubs
jns
repz
push
or
clc
repnz
pop
in
xor
repz
pop
mov
and
dec
cmp
popf
pop
lock
addr16
call
mov
dec
or
cmp
fstl
insl
in
xor
push
cs
xor
inc
mov
and
cmp
jl
frstor
stc
xlat
push
iret
pop
pop
and
cmp
xchg
mov
aad
xor
imul
or
fmulp
in
xlat
aas
pop
or
icebp
orl
mov
lea
gs
cmp
pop
dec
ja
sub
aas
sti
shlb
jno
inc
adc
ljmp
aaa
outsb
pop
add
jae
fnstcw
imul
popa
out
pop
or
cmp
popa
add
push
and
jne
outsl
mov
push
lock
dec
les
ds
scas
test
fldl
sarb
movnti
xchg
mov
dec
sub
jg
data16
jle
test
sbb
push
dec
jno
rcll
addr16
iret
cmpsb
aaa
xchg
je
icebp
popf
push
ficoms
fdivl
sbb
push
loope
pop
ss
push
adc
adc
out
inc
jecxz
in
push
push
lea
icebp
stos
mov
add
cltd
pop
loope
cmc
imul
cltd
ret
fld
or
sbb
cli
aad
ds
and
test
xchg
push
rcrl
mov
jne
or
aaa
loopne
inc
repnz
repz
test
mov
int
cmc
and
popa
int3
jle
nop
sub
or
jge
roll
stc
mov
call
pusha
je
jne
fs
mov
mov
mov
sbb
sbb
mov
push
imul
loop
adc
fs
fsub
xor
add
dec
inc
loopne
fwait
jge
loop
push
mov
or
mov
ljmp
cmp
ds
add
lcall
std
jecxz
cmp
jecxz
cmp
sbb
arpl
imul
std
pop
outsb
lods
pop
mov
scas
out
enter
add
stos
pop
sub
cmp
imul
pop
lret
sar
xchg
sbb
add
or
cmp
mov
ss
fdivs
jno
stos
adc
mov
cmc
mov
jne
je
icebp
add
fs
loop
aam
daa
sub
pop
insb
push
cmp
mov
enter
sub
jo
and
and
jmp
push
stc
jae
xcrypt-ctr
cmpsl
fidivs
sbb
or
jo
dec
je
inc
test
mov
mov
xchg
jle
mov
popf
stos
jns
test
adc
or
enter
xor
popf
imul
fadds
jo
aas
cmp
movsl
sbb
es
lea
push
enter
lods
ret
adc
mov
lods
xor
or
in
sub
mov
pop
jmp
push
lock
bound
cmp
cltd
pop
out
push
rcll
out
repz
cmp
jmp
shl
add
jns
mov
repz
xor
cmp
and
cmpsb
std
cltd
fidivl
negb
sarl
sbb
cmp
sub
adc
sbb
das
addl
bnd
adc
jmp
dec
sbb
push
cmpsl
out
fdivl
iret
imul
mov
js
test
inc
rclb
push
negb
in
mov
std
aam
dec
pushf
loopne
lds
push
mov
xor
adc
cli
xor
mov
inc
and
jmp
jle
jne
adcl
push
and
aam
inc
xchg
inc
mov
push
aam
das
mov
das
rcr
dec
mov
cwtl
leave
pushf
and
andb
lods
and
out
mulb
outsl
js
mov
sbb
shr
fnstcw
sbb
insl
jecxz
dec
iret
cmp
jp
cmpsl
lods
lock
das
out
fwait
push
pop
mov
cmp
mov
push
es
push
add
test
stos
shl
xchg
es
or
pop
sub
mov
adc
fstpt
imul
in
xor
adc
imul
lock
mov
add
ds
xacquire
lahf
sbb
xor
in
stc
cmp
scas
scas
sbb
add
lock
xlat
inc
je
push
push
icebp
mov
mov
enter
lahf
add
sti
xchg
ret
cmc
ja
xor
imul
gs
stos
xor
notl
aaa
cmp
cmp
call
addr16
and
push
int
shrb
adc
inc
pop
push
insb
in
mov
mov
lret
push
pop
and
imul
fcomps
js
lea
int
cld
outsb
insl
out
dec
or
movd
setae
jg
pop
dec
mov
subl
cmp
in
jmp
push
hlt
mov
loopne
fwait
repz
pop
or
cli
inc
lock
mov
js
sbb
adc
jae
mov
jecxz
sahf
addr16
aam
pop
xchg
push
dec
push
push
mov
dec
fucom
js
lret
outsl
fisubs
pop
xor
push
jne
es
and
mov
mov
inc
xchg
push
gs
test
aam
sahf
inc
cltd
jae
cmp
adc
add
call
sbb
xchg
imul
sbb
pop
jp
loope
mov
inc
inc
aam
inc
stos
test
mov
aas
imul
mov
inc
stc
cmpsl
cmpsb
mov
mov
outsl
sub
mov
cmp
stos
repz
xchg
int
mov
aas
xor
div
faddl
jo
sub
inc
push
inc
outsl
mov
std
jo
aas
aaa
adc
hlt
pop
in
dec
ja
jl
sub
pop
outsb
add
inc
dec
adc
push
pop
dec
or
in
mov
roll
lods
ss
int3
les
lds
jo
adc
out
out
or
out
gs
or
cltd
ret
cmp
sahf
push
cltd
xchg
clc
data16
push
push
je
inc
jecxz
movsb
aaa
fmuls
pop
xor
jge
icebp
or
adcb
scas
movsl
jae
mov
scas
fcoms
mov
rcrb
movsb
mov
leave
push
cmpsl
ss
mov
pop
mov
mov
or
loop
or
xchg
and
repnz
loope
popf
cmpsl
lods
inc
xor
adc
repz
je
outsl
dec
push
dec
push
fdiv
mov
inc
sbb
loop
xchg
jg
out
inc
cmpb
testb
ret
das
aaa
push
xchg
adc
jnp
dec
inc
hlt
xchg
test
and
pop
dec
jecxz
xor
push
cmp
lea
cmp
mov
pop
or
jbe
or
mov
mov
in
les
jg
sub
adc
lcall
add
push
ljmp
push
or
jg
fcmovb
inc
data16
and
aam
mov
sub
repnz
cmp
and
sbb
sbb
cmp
ret
test
cmp
pop
jno
les
mov
sub
lock
lcall
rcr
push
inc
dec
ds
fiaddl
pop
fcompl
pop
or
sub
test
add
jns
addl
int3
insl
cmpsb
mov
push
mov
cmp
inc
cs
jge
incb
dec
adc
or
cmpb
cli
cmp
xchg
out
stc
pop
xchg
mov
test
cmp
int
jne
xchg
pop
sbb
lahf
sub
outsb
lods
add
flds
cli
jbe
popa
ljmp
aad
sub
push
sbb
jle
cmp
mov
jle
pop
fiaddl
mov
addl
mov
ljmp
jne
lret
lock
ret
sub
not
push
push
cmpsb
fsubrs
hlt
hlt
cmpsb
outsl
push
test
popf
or
mov
popl
xlat
add
mov
lea
test
outsb
popa
xor
shl
push
bswap
roll
js
cmp
and
jno
xor
pop
or
adc
out
xchg
xchg
lret
push
mov
imul
xchg
rorl
outsb
lods
lods
or
jp
mov
pop
cmpsb
jmp
fldl
es
dec
dec
nop
or
and
mov
mov
and
push
pop
rcrb
pop
pop
mov
jge
add
in
add
enter
jg
inc
in
jne
sbb
or
stos
int3
mov
gs
adc
or
scas
test
bndldx
and
xor
jo
lahf
sar
das
xchg
js
ret
pusha
cmp
sbb
jb
sbb
cmp
lock
into
jge
ljmp
and
movsb
mov
and
enter
out
fnstcw
mov
jae
fnsave
ja
mov
and
jne
xlat
fsubrp
jae
aaa
shll
sbb
ljmp
repnz
rcll
cmpsb
push
pop
dec
cmp
lea
xchg
jb
out
test
push
cmp
mov
gs
xor
out
rclb
iret
mov
shll
gs
mov
out
adc
inc
push
xchg
push
icebp
mov
or
xchg
add
and
and
mov
xchg
ja
aad
mov
test
mov
sub
or
mov
stos
rorl
add
or
addr16
idivl
pusha
push
repnz
jmp
ss
js
lcall
and
pop
lahf
ficoml
pop
push
push
sub
adc
shrb
jne
aas
out
pop
push
inc
in
shrl
xlat
lahf
fisubl
clc
ja
xor
outsl
xor
cmp
cmc
sbbl
sub
int3
jo
xchg
ficompl
inc
bound
or
mov
imull
mov
sbb
mov
bound
cwtl
das
dec
ja
popf
iret
gs
jns
call
dec
and
sub
movsl
dec
jae
cmp
inc
mov
mov
xor
push
stos
dec
int
lahf
pop
cmp
sti
lret
sub
and
lods
outsb
sub
cld
leave
std
cmp
pop
bound
mov
push
out
insb
jecxz
mov
dec
xchg
fcomi
sub
xlat
sbb
dec
repz
mov
push
mov
mov
jns
jp
xchg
mov
adc
push
mov
mov
scas
push
sub
sbb
adc
inc
pusha
insb
adcb
shll
mov
push
adc
fcompl
stc
dec
xor
repz
push
mov
lret
sar
addr16
sub
outsb
add
pop
and
pop
div
bound
cmp
or
add
jne
jb
and
fstp
test
nop
dec
into
repz
mov
cmpb
ror
mov
xor
xor
das
push
dec
mov
jo
mov
mov
out
sbb
adcl
rcr
mov
notb
add
outsl
scas
xor
fsubrp
outsl
cmp
les
mov
lea
cmpsl
or
popf
aad
inc
add
ret
cmp
pusha
shl
cmp
std
dec
cmp
imul
repz
push
inc
mov
out
cmpsb
xchg
add
mov
add
in
sub
mov
add
cmp
outsb
add
xchg
aam
das
lret
jl
mov
mov
sub
or
stos
inc
mov
mov
lds
in
icebp
fsubrl
xor
in
cli
pop
push
mov
mov
pop
fsubs
into
cld
shrl
xchg
lahf
popa
pop
push
vpsubsw
jmp
subb
notb
jns
sbb
movsb
ljmp
mov
xchg
and
sub
imul
add
jae
or
mov
jb
out
mov
mov
xchg
stc
dec
frstor
pop
inc
mov
not
mov
mov
pop
mov
add
stc
xor
ja
jg
pusha
adc
insb
cmpsb
outsb
xchg
dec
mov
into
inc
decb
mov
shrl
xchg
mov
mov
mov
mov
mov
das
inc
xchg
test
xchg
jle
cmp
cwtl
cmp
push
ud0
sub
ret
insl
sbb
push
xchg
xor
mov
negl
sbb
mov
call
int
cmpsl
xchg
and
jg
shll
mov
test
insb
test
xor
mov
inc
loope
push
inc
es
lea
or
jae
adc
into
mov
cmp
dec
out
xor
sbb
shrl
in
push
push
loopne
xchg
ret
xchg
xor
ja
aad
pop
cmp
pop
xor
test
scas
jp
js
inc
xorb
and
enter
data16
mov
lahf
or
sub
adc
bnd
scas
jmp
cltd
pop
jl
push
mov
je
stos
sbb
imul
push
pop
xchg
adc
in
xchg
nop
inc
adc
bnd
std
sahf
xlat
dec
imul
adc
gs
and
aad
sbb
jns
shrl
adc
jmp
mov
mov
int3
pop
xchg
push
pusha
jge
js
dec
and
shlb
popa
and
xchg
in
push
rcrl
push
sbb
lahf
adc
cmc
push
outsl
sub
scas
je
add
aaa
mov
ds
add
cmp
lods
fwait
inc
cli
daa
push
testb
or
insl
mov
dec
daa
sahf
movnti
pop
in
lods
arpl
inc
xchg
mov
jp
test
inc
mov
inc
mov
out
xor
movsl
mov
and
hlt
lahf
dec
aam
sbb
js
ds
xchg
and
jns
push
mov
out
das
and
pop
insb
mov
cmp
lret
out
lds
cmc
test
outsl
in
mov
mov
mov
out
add
mov
mov
add
pop
mov
push
lea
inc
repz
xor
lahf
xor
cld
sbb
jecxz
addr16
imul
jecxz
leave
pushf
mov
arpl
nop
cmp
insb
or
iret
xor
sub
and
divb
add
fnstenv
in
sbb
mov
test
adc
push
or
rolb
mov
sub
int
andb
dec
and
push
jb
sbb
xchg
mov
mov
jg
into
pop
lahf
fxch
clc
lcall
aad
mov
scas
imul
std
mov
dec
addr16
test
je
xchg
addr16
sbb
xchg
imul
adcl
mov
or
fcomi
mov
loope
or
mov
adcb
dec
adc
xchg
fildll
lea
add
mov
repz
sbb
nop
or
jbe
mov
cltd
mov
xor
xchg
hlt
push
pop
jmp
into
pop
lock
sub
mov
and
les
jns
sbb
or
jle
jmp
xor
jno
dec
inc
xor
inc
out
mov
push
mov
divl
mov
std
fsubp
ret
add
fdivrl
pusha
call
inc
gs
dec
xchg
cmpsl
inc
push
sub
cmp
popa
mov
fmul
mov
out
loopne
adc
fcoms
fnstcw
jle
clc
cmp
loopne
mov
loopne
lock
addr16
cmpsl
adc
xchg
mov
pusha
sub
mov
movsb
pusha
fldcw
test
loopne
cmpsb
incb
dec
xchg
jnp
push
and
repz
cmpsb
dec
dec
cmpsb
xor
sbb
rcrl
sub
xor
je
cmpl
fadds
psubsb
sbb
xor
cmp
and
adc
push
xchg
dec
or
test
fwait
es
inc
adc
cmp
mov
stc
stos
ss
mov
or
xchg
cmp
push
std
and
xchg
sahf
repnz
lods
out
and
sbb
cmp
push
pop
adc
lds
ret
loop
sub
sbb
add
mov
in
jp
sbb
sub
das
rcrl
push
jnp
sbb
pushf
in
cmpsb
out
xchg
jns
repz
xchg
test
inc
lret
xchg
mov
das
dec
pop
xor
daa
xchg
and
sub
add
adc
daa
pop
pushf
test
in
fst
adc
xor
shlb
les
mov
mov
ret
push
dec
in
sahf
ljmp
icebp
add
mov
pop
lock
pop
xor
push
fwait
add
hlt
stos
lea
test
xchg
sub
dec
ficoml
daa
mov
arpl
lea
add
rcrb
cli
ficoms
cli
and
test
adc
bound
les
jno
sbb
call
inc
sub
mov
adc
out
push
and
adcl
mov
add
sub
jmp
push
into
and
test
sub
pop
ljmp
or
inc
inc
lock
pushf
jns
mov
outsl
push
stos
ja
mov
push
dec
push
insl
mov
addr16
movsl
repz
xor
and
popf
xor
jge
stos
add
rcr
repnz
or
rorl
adc
ds
and
pop
out
xor
push
adc
ja
ljmp
cmp
adc
and
xchg
out
pushf
mov
or
inc
lea
cmpsl
push
mov
or
pop
sahf
outsb
mov
xchg
rorl
out
dec
and
push
test
aad
xchg
ja
test
jp
or
sbb
jp
in
lock
xor
lret
or
or
cmc
or
outsb
and
arpl
aad
sub
addb
repz
lcall
inc
pop
push
lds
and
sarb
push
and
mov
jecxz
jmp
dec
sbb
cmp
into
mov
sahf
adc
rorb
mov
inc
cmpsl
sahf
mov
xor
jmp
dec
cs
int3
xchg
pop
pop
jnp
pop
fucomi
add
out
fwait
out
mov
mov
or
popa
xchg
pmulhuw
and
and
inc
inc
dec
add
fs
push
insb
and
xor
sbb
mov
jns
in
dec
enter
dec
xlat
int3
lods
pop
filds
fsts
sbb
mov
xchg
movsl
and
sub
test
setno
addr16
inc
xor
pushf
ret
rcrb
add
aam
mov
cmp
addr16
jp
mov
sarl
adc
addb
int
jbe
pop
inc
cmp
addl
test
pop
mov
scas
iret
mov
or
icebp
jns
sub
shll
std
inc
or
fisttpl
pop
xor
aas
cmp
dec
clc
xor
mov
cwtl
dec
pop
jg
int
jl
jno
pop
loope
in
inc
push
out
cs
pop
jg
sbb
loop
jae
fidivs
movsl
add
shll
lea
pop
jmp
push
shl
fidivs
sub
pop
icebp
icebp
loop
or
cltd
ror
loop
or
out
adc
arpl
movsb
mov
xor
pop
and
and
or
and
and
shlb
jge
negb
mov
stos
out
mov
pop
dec
lcall
test
xor
push
push
xchg
cwtl
mov
mov
lock
push
inc
shl
loop
adc
mov
mov
sub
mov
mov
jnp
cmpsb
aad
dec
mov
mov
imull
imul
jb
pop
xchg
mov
imul
push
movsb
push
jnp
or
push
adc
test
divb
mov
pop
mov
rcl
push
loop
bsf
insb
cwtl
jnp
adc
test
sbb
xchg
push
mov
push
in
insl
xchg
mov
jp
lds
cmp
fsubrl
ljmp
cmp
lods
push
arpl
shl
xchg
pop
imul
jne
test
jmp
out
cs
dec
mov
or
jb
mov
data16
ljmp
mov
xchg
xor
cmp
cmp
mov
and
sahf
shlb
lea
jge
sbb
mov
sub
pop
test
es
xchg
fists
pop
mov
xchg
ret
rol
lds
jl
sub
add
mov
mov
mov
call
jp
ss
cmpsb
fs
shll
cmc
pusha
inc
out
in
push
jle
mov
pushf
icebp
les
in
mov
subl
push
mov
xor
mov
mov
popa
xor
dec
jg
xchg
jo
jne
decl
jae
mov
mov
jae
inc
jns
xchg
popl
jecxz
mov
movsl
sub
int3
adc
and
test
push
movsb
xor
js
sub
cmp
data16
jmp
test
repz
scas
mov
outsl
and
sbb
popa
fdivrs
hlt
mov
lods
sbb
push
cli
pusha
out
dec
inc
sbb
add
getsec
jmp
ss
cmc
loop
outsb
jle
ret
and
bound
cltd
push
stos
lahf
sbb
pop
es
psllw
jnp
xorl
shlb
enter
mov
in
sub
sub
sub
mov
jl
lahf
ja
lret
mov
sub
out
aas
xchg
jg
mov
jle
pop
adc
or
mov
out
mov
outsb
and
dec
ss
jmp
xchg
dec
enter
adc
xor
pop
into
pop
inc
jns
push
sub
daa
mov
sub
sar
nop
mov
mov
orb
jnp
imul
orb
mov
inc
pop
addl
jbe
xor
rol
or
jae
lock
mov
jns
popf
into
mov
lds
inc
es
mov
and
ss
test
add
xchg
dec
sub
enter
stos
mov
js
and
adc
sub
cmp
xor
cmp
test
testl
roll
adc
cltd
jb
xchg
sbb
sbb
out
neg
mov
repnz
std
lds
cld
imul
mov
mov
mov
cmp
mov
rcrb
add
dec
arpl
les
mov
enter
inc
mov
push
xor
jg
dec
lea
int3
movsb
fs
sub
pop
inc
test
adc
push
sahf
mov
addr16
mov
mov
mov
dec
sub
cmc
pop
lods
cs
pop
aad
cmp
cmp
nop
mov
int
xchg
or
xchg
aaa
xchg
mov
xor
jge
cmp
enter
fstp
mov
xor
das
outsl
inc
add
add
and
sahf
jg
andl
lds
mov
stc
movsl
idivb
aaa
insl
adc
cmp
gs
or
stc
ret
mov
mov
enter
pop
enter
dec
dec
mov
mov
and
sbb
push
std
insb
push
mov
pop
mov
xchg
lds
xor
adc
pop
bound
rol
xchg
fstl
les
cmpb
xchg
daa
repz
das
xor
pushl
jge
sbb
or
fnop
scas
inc
and
adc
adc
mov
mov
inc
or
stos
xchg
jb
mov
ljmp
cmp
xchg
and
sub
push
rclb
pop
add
stos
sbb
mov
jnp
inc
in
xchg
ds
mov
pop
mov
pop
xor
pop
rcl
dec
xorl
dec
popl
push
ja
or
jl
ja
or
std
adc
and
cmp
ja
pop
sub
mov
pop
fcmovne
lock
hlt
and
aam
mov
inc
cmp
enter
jle
mov
push
mov
cmp
ret
es
push
ret
shld
cmpsb
sub
or
pop
dec
and
movsb
shrb
sub
lret
xchg
mov
std
sub
popa
push
sub
test
cmp
mov
pop
mov
mov
outsl
adc
or
mov
out
mov
test
or
sbb
int3
fwait
cmpsl
push
sti
repnz
dec
and
pop
pop
xchg
and
jecxz
adc
sbb
movsl
mov
or
xchg
aas
iret
dec
loop
xor
sarb
mov
mov
sub
adc
xchg
decl
cmpsl
jae
mov
out
mov
lcall
adc
sbb
mov
jb
push
push
mov
or
push
mov
outsb
dec
xchg
rcll
sub
rorl
addr16
int
psubsw
cwtl
int3
lea
xor
enter
mov
mov
dec
ljmp
hlt
xor
mov
fdivs
fstpl
or
fldenv
ret
mov
je
adcb
or
scas
incb
inc
xor
cmpl
cs
pop
cmp
inc
loopne
push
adc
and
push
jnp
repz
xor
xor
and
jl
push
xlat
xor
mov
jle
lea
inc
out
sbb
jne
push
lds
mov
inc
pop
mov
mov
xor
and
inc
cli
mov
xchg
xor
cmp
cld
movsb
lret
and
cmp
jb
push
cmpsb
out
cli
test
adc
sub
fists
add
jmp
loop
cmpsl
dec
inc
sub
inc
fs
ja
sub
stc
in
daa
cmpsl
add
test
lea
push
mov
iret
and
adc
mov
sti
out
cmp
leave
add
sbb
movq
insb
mov
shrl
lods
lahf
mov
mov
leave
jl
or
std
jmp
test
jae
in
jmp
lret
shll
ret
rclb
ds
push
dec
sbb
mov
add
ret
jge
adc
xor
outsl
movsl
push
bound
bound
shlb
repz
inc
mov
stos
mov
rol
pop
dec
sub
ret
push
inc
cs
cmp
mov
sbb
xchg
test
in
stos
push
cmp
test
fdivrs
or
mov
inc
call
pop
mov
inc
mov
movsb
stos
dec
or
cmp
xchg
push
mov
add
add
pusha
jns
cmp
and
stos
sbb
pop
mov
xchg
pop
sbb
xor
ja
in
int
daa
and
add
add
fisttps
pop
bound
aas
push
hlt
es
xchg
imul
test
inc
inc
out
mov
adcb
shlb
mov
cmc
aaa
cmp
sbb
push
lret
xor
sbb
push
xchg
and
fists
mov
mov
jno
jle
jne
jns
iret
jns
popf
repz
inc
sub
adc
test
iret
bswap
sti
add
pop
jge
shlb
sbb
add
arpl
fcompl
or
fadd
cmpl
inc
mov
jnp
adc
les
xchg
jno
ljmp
mov
jbe
xchg
and
inc
cmp
aaa
xor
mov
xlat
iret
lock
stc
pop
andl
mov
or
mov
push
adc
mov
sub
cmp
sbb
ds
mov
popf
inc
fwait
sbb
jb
or
add
dec
sub
dec
adcb
xor
data16
je
movsl
fldt
sub
data16
sub
add
cltd
adc
adc
cmpsb
mov
les
inc
out
inc
and
js
sub
dec
imul
jnp
add
xor
inc
push
push
mov
xor
and
pop
in
cmpsb
es
xchg
inc
ret
popa
jo
cmpsb
test
push
cmp
push
pop
inc
lea
sub
movb
cmp
hlt
nop
lcall
or
addl
fidivrl
and
xchg
jns
icebp
fdivp
sub
or
pop
mov
cwtl
das
es
inc
flds
add
mov
dec
mov
cmp
scas
icebp
add
add
addr16
push
xor
adc
into
mov
mov
outsb
nop
add
or
outsl
in
dec
push
or
dec
decl
add
loopne
sbbl
fwait
add
out
jmp
lret
inc
fnstcw
int3
and
xchg
mov
out
lret
sbb
fldt
ror
pusha
leave
mov
clc
sub
nop
sub
push
stos
lret
out
lret
dec
sub
and
emms
mov
fildl
movsl
and
sbb
loop
insl
or
sbb
idiv
push
xor
test
lea
add
and
xor
aas
lret
push
sbb
pusha
add
xlat
movsl
fimull
inc
sub
out
inc
push
mov
decl
idivb
ds
mov
xor
pop
scas
push
fiaddl
mov
test
negl
and
jnp
insl
sub
sbb
push
cli
aaa
aad
lods
out
mov
xor
lcall
xchg
or
outsl
lds
add
rcrb
ret
ja
clc
xlat
xor
fistl
jo
push
cmc
xchg
inc
pop
inc
inc
pop
mov
jno
adc
adc
mov
xor
lock
std
hlt
push
iret
loopne
push
punpckhwd
adc
push
in
pop
stos
and
outsl
and
pop
repz
in
test
sti
dec
popa
cmp
int
adc
xchg
xor
xchg
negl
adc
jge
add
fsubrs
and
push
add
movsb
mov
arpl
mov
cmc
jbe
fdiv
js
and
repnz
adc
jae
aad
movsl
out
fcmovne
inc
mov
jb
jmp
mov
stos
push
fistps
or
or
into
in
or
in
aas
pop
mov
sbb
imul
mov
nop
mov
and
fisttpl
jge
bound
in
stos
and
mov
sub
sbb
pop
ljmp
jecxz
cpuid
push
repnz
jmp
test
jns
and
in
punpcklbw
xchg
testl
jle
std
push
into
ret
pop
dec
mov
in
jns
jmp
pop
dec
cmpsl
sbb
clc
adc
mov
dec
lds
sub
stos
xchg
adc
push
enter
xor
mov
popf
inc
ret
or
loope
jno
jl
cmp
add
or
pop
pop
or
cwtl
cmp
mov
push
stos
orl
fsubp
xor
insl
sahf
adc
dec
repz
and
push
and
mov
cmp
lock
add
je
adc
sbb
mov
add
inc
push
ja
jge
mov
mov
int3
aaa
sbb
cltd
stos
cli
cmp
jns
or
cwtl
jno
enter
arpl
adc
push
mov
cltd
mov
xorb
js
add
xchg
mov
and
or
add
ljmp
in
jecxz
mov
stos
andb
jnp
sbbl
cwtl
cmp
dec
or
inc
jbe
andb
fisttpll
flds
mov
hlt
pop
sbb
mov
lock
xor
cmp
mov
xor
pop
and
test
shrb
test
movsl
movsb
loopne
repz
js
or
out
mov
mov
sbb
or
rclb
inc
inc
add
inc
mov
sbb
lods
dec
js
rcr
or
mov
ficompl
mov
mov
inc
inc
stos
lea
jmp
mov
adc
dec
push
mov
cmpsl
adc
fcomi
cmp
shlb
scas
add
rol
xor
xchg
dec
adc
cs
cld
mov
popa
or
adc
mov
ficomps
adc
mov
and
xchg
mov
jecxz
add
sub
xchg
pop
fxch
shr
das
jo
dec
push
xchg
push
out
mov
or
in
mov
sub
push
adc
cmc
push
mov
sbb
sbb
pusha
cmpsb
repz
mov
inc
ret
jmp
dec
decl
fmull
lcall
iret
cmp
mov
pop
out
fmuls
and
cmpsl
cmp
mov
inc
add
lea
repz
sub
inc
fsubrl
or
lods
mov
push
xor
and
and
cs
lret
repnz
jno
mov
sbb
mov
push
adc
lods
shlb
insb
popa
dec
mov
push
rorb
cmp
stos
xor
or
mov
in
pop
mov
shrb
outsl
jle
mov
and
mov
push
arpl
imul
lock
add
dec
mov
or
test
xor
lods
push
push
lods
popa
jmp
inc
mov
inc
iret
push
add
xchg
call
retw
ret
xor
dec
fdivs
adc
in
mov
mov
and
sbb
sub
jge
push
retw
mov
hlt
cmp
adc
dec
mov
sbb
lock
cltd
pop
stc
dec
pushf
mov
test
push
dec
test
out
fnstsw
sub
cmp
mov
xchg
data16
pop
scas
outsb
pop
jle
adc
push
add
xor
aaa
xchg
icebp
fs
aam
jl
in
lods
mov
rclb
cmpb
ljmp
arpl
fstpl
lcall
sub
and
xchg
xor
dec
fstps
stc
lret
xorl
mov
ja
les
pop
cmc
cld
bound
outsl
xchg
cwtl
in
and
fcomip
les
lods
pop
lret
jno
mov
adc
inc
pop
push
mov
fsubl
mov
or
pop
aas
mov
pop
imul
and
insb
jmp
gs
out
leave
dec
pop
xchg
push
inc
fstpl
and
push
or
mov
xchg
fisubrl
xlat
test
pop
enter
movsl
cltd
sub
sbb
and
push
lcall
cmpsb
xor
mov
cmc
push
int3
pop
aad
aad
ret
rcll
ret
cs
mov
pop
daa
lea
sub
cmpl
pop
adc
add
test
or
cmc
outsb
sub
or
pop
in
sbb
aad
lock
mov
std
fisubl
mov
in
jns
or
cmp
add
push
out
sub
cmpsb
push
in
pop
adc
aad
mov
andb
ret
sub
add
jmp
dec
insl
rcrl
test
int
mov
xlat
shrl
sbb
push
push
jne
jecxz
cwtl
push
pop
push
adc
iret
inc
xchg
xor
add
shll
test
pop
out
lods
mov
addl
cmp
fstps
cmp
clc
dec
jbe
out
mov
sub
sub
cwtl
xchg
mov
inc
sbb
push
inc
addr16
arpl
popa
mov
jmp
lods
icebp
xchg
jb
repnz
xchg
xor
inc
mov
aad
cmp
adc
cld
fldcw
in
mov
mov
in
push
jb
dec
pop
adc
insl
inc
xchg
dec
call
je
in
iret
movsl
mov
ds
das
leave
pusha
test
clc
add
imul
adc
cmp
das
mov
jne
jae
dec
cli
dec
xchg
push
adc
cmpsb
xchg
mov
bswap
sbb
fwait
cmp
stos
repz
nop
fsubr
jl
aaa
mov
stos
or
sbb
outsl
or
xchg
adc
mov
stos
cmp
sbb
mov
sti
or
add
jnp
cmp
pusha
into
pop
aaa
mov
aaa
push
mov
jo
lods
loopne
mov
mov
pop
and
push
jb
subl
fisttpll
mov
dec
call
pop
pop
push
adc
cmp
cli
sbb
aaa
sbb
stos
cli
fidivrl
adc
cli
dec
iret
js,pn
fcompl
imulb
add
sub
mov
mov
mov
movsb
pop
xchg
ret
test
daa
pop
out
in
mov
mov
lea
and
dec
inc
mov
xchg
enter
dec
lret
test
add
mov
movsb
ds
das
fisttps
push
sub
test
outsl
adc
in
adc
adc
testw
and
inc
jns
scas
cmp
push
cs
mov
xchg
cmpsb
mov
fldt
add
imul
cmp
adc
test
aam
adc
push
push
pop
cmc
push
pop
and
cmpsb
xor
inc
sub
cmp
leave
in
adc
xor
jl
mov
call
das
adc
lcall
xchg
jmp
popa
subb
cmpsl
mov
add
dec
cmp
out
xchg
mov
aad
mov
inc
inc
in
shlb
cli
inc
xor
pop
leave
ss
inc
std
pop
push
jecxz
cmp
js
sub
ffree
dec
ret
mov
loope
in
push
and
lahf
jb
int
data16
sti
xchg
int3
dec
mov
jbe
scas
ds
insl
or
insl
ja
mov
scas
sub
fiadds
adc
inc
arpl
mov
jmp
jecxz
ja
xor
sbb
sarl
push
push
icebp
cld
decl
sbb
lahf
xor
cli
xchg
mov
lret
out
sarb
cmp
push
shl
xchg
mov
mov
cli
add
inc
or
fisubrs
pop
inc
xchg
mov
aam
mov
repz
cmp
lcall
xlat
rcll
popf
xor
leave
aaa
pop
popl
xchg
movsl
mov
out
test
movsl
mov
xchg
jbe
lea
and
push
or
pushf
scas
or
jp
mov
mov
mov
dec
or
sub
sub
dec
testb
push
cwtl
ret
fwait
pop
cwtl
cwtl
cmp
pop
out
sbb
mov
les
xor
int3
out
xor
call
xchg
flds
outsb
sbb
mov
fidivrs
dec
fstpt
add
ss
fmul
gs
push
pop
or
mov
addr16
mov
xchg
int3
pop
test
aas
imul
dec
out
mov
clc
pop
mov
jge
stos
pop
push
lods
incl
xchg
xorl
in
int
mov
adc
outsl
in
out
cli
pop
jo
es
xchg
inc
jl
lahf
xchg
cmovp
dec
stos
cmc
loopne
cwtl
int
dec
repz
loop
les
iret
fdivr
rorb
add
pop
loop
jo
hlt
add
adc
dec
jmp
rcrl
lods
je
loop
mov
fdivrl
mov
divl
popa
in
sub
lret
fdiv
mov
lds
pop
pop
out
stos
test
lret
repnz
push
push
jge
add
jno
ret
subb
mov
stos
cs
inc
fistpl
nop
jle
movsb
add
ljmp
decl
icebp
xchg
imul
fs
dec
cmp
out
sti
pop
aaa
xlat
mov
sarl
ljmp
out
sub
jg
imul
mov
incl
mov
lock
iret
adc
iret
out
push
das
out
push
mov
adc
test
sbb
jb
adc
push
loopne
scas
xor
fsubl
div
lods
test
mov
mov
mov
leave
fdivs
xor
xchg
popf
mov
xchg
sub
arpl
rorl
sub
fimuls
sbb
ret
imul
cmp
jnp
insl
mov
daa
dec
or
test
out
xor
pop
std
inc
rcrb
aam
add
dec
shrl
push
cltd
fsub
sbb
les
push
mov
inc
push
push
pop
mov
and
xlat
mov
fldcw
mov
arpl
std
push
mov
fbstp
push
pop
jg
cmp
push
mov
lock
sarl
dec
adc
rolb
or
int3
popfw
push
pop
dec
pop
insl
outsl
mov
mov
icebp
in
repz
ret
mov
mov
movsb
mov
aam
add
and
mov
cmp
jmp
fiadds
addr16
notl
scas
push
jne
ljmp
insl
imull
dec
das
hlt
fmuls
push
jg
aaa
movsb
xor
jo
imulb
jae
cmc
inc
inc
pop
push
iret
sub
lods
fcomp
addr16
xchg
add
sub
cmp
addr16
in
xor
sti
push
imul
lods
add
js
push
scas
inc
mov
xchg
push
and
push
or
or
in
mov
frstor
sti
clc
cmp
cld
mov
push
std
in
sub
dec
mov
sub
jl
cwtl
fldl
dec
leave
jns
jmp
call
das
imul
imul
daa
dec
loop
mov
leave
push
push
push
sbb
mov
aaa
xchg
mov
jo
add
imulb
ficompl
and
shl
push
rcrl
sub
xor
xor
movsb
jbe
pop
mov
mov
mov
jmp
in
lret
add
daa
fdivrs
testl
lods
sti
mov
stos
xor
adc
adc
xchg
fwait
mov
or
pop
mov
aad
into
cmp
mov
cmp
pop
lret
mov
inc
insb
xchg
insb
push
icebp
iret
sar
imul
rcr
sbb
ljmp
pop
decb
push
pop
nop
dec
and
nop
mov
mov
lret
jnp
xchg
stos
repnz
and
mov
and
stos
pushf
cs
lret
jae
movups
adc
sarl
pop
fwait
xchg
les
pop
lds
leave
cs
or
xchg
mov
outsl
gs
es
mov
jecxz
inc
pop
shl
shlb
jmp
fldcw
repz
fwait
sti
adc
js
dec
aas
stc
xchg
fwait
adc
adc
and
pushf
pushl
clc
adc
into
xchg
test
popf
std
icebp
cld
orb
dec
call
xor
add
mov
jp
dec
test
push
push
add
pop
cltd
movsb
lahf
fcomp
mov
rclb
jmp
ret
dec
push
or
stos
jl
je
lods
mov
cwtl
mov
adc
mov
cld
push
add
sub
gs
std
xor
lods
add
push
enter
pop
jnp
je
jecxz
xor
int3
xchg
subb
fsubs
aaa
cmp
loop
mov
inc
mov
pusha
rolb
ret
mov
mov
mov
arpl
cmpsb
outsb
test
notb
xchg
xor
pushf
inc
ds
scas
jo
icebp
mov
dec
divb
rcrb
lds
pop
gs
outsl
aad
imul
sarl
dec
jge
mov
clc
or
dec
stc
ds
pop
pop
push
jae
bound
mov
rclb
repnz
stc
and
in
and
mov
pop
pop
enter
aad
ja
mov
stc
sub
stos
test
pop
int3
and
push
testb
lret
fcoms
xchg
into
xchg
sbb
out
iret
mov
in
fmul
shl
adc
mov
mov
and
jl
mov
push
aaa
sub
mov
push
aam
es
fcomi
test
jge
fdivrl
out
jmp
sub
lcall
lds
add
aaa
movsb
loope
fwait
pop
rcl
cmp
push
cmpsl
xchg
push
jmp
mov
mov
ss
xor
add
cmc
xchg
cmc
ret
js
mov
rolb
sub
mov
pop
or
mov
inc
xor
lret
mov
push
ret
jg
push
inc
mov
jecxz
and
and
push
imul
add
push
leave
mov
insb
jecxz
dec
repz
call
ljmp
xchg
inc
movsl
daa
sti
dec
or
pop
popf
mov
test
mov
push
xor
dec
enter
push
and
add
loop
loope
int3
data16
mov
sti
stos
inc
jmp
out
pushf
push
inc
and
cmp
das
cmpsl
and
and
insl
sub
cmp
or
lcall
out
cmpsb
inc
add
jle
es
hlt
jbe
jl
nop
mov
movsb
jge
iret
loope
mov
test
movsl
mov
in
inc
loope
push
stos
push
mov
pop
sbb
xchg
pop
mov
lock
push
iret
inc
sbb
subl
jmp
loope
inc
jbe
xor
push
sub
adc
in
aaa
out
faddl
into
jl
out
xchg
fsubrs
cld
adc
push
pop
add
xchg
xchg
stos
inc
xchg
lods
imul
mov
les
orl
fnstenv
or
cmpb
popa
add
xor
pop
adc
std
pop
and
pop
bound
add
jno
arpl
test
dec
pusha
or
js
mov
cmpsl
in
lahf
aam
jl
or
jo
frstor
not
sti
ffreep
push
popf
push
mov
movsb
fcmovb
mov
das
imul
and
xchg
jge
aas
mov
out
xor
sub
push
addb
mov
or
mov
sub
sbb
lods
popf
fs
call
inc
cmp
mov
jno
repnz
fisttpll
xchg
lock
cwtl
jg
dec
out
ret
jo
dec
ds
xor
jbe
loope
inc
rolb
dec
lahf
out
xor
cmpsb
cmc
aam
stc
fs
jnp
xchg
add
cmc
inc
push
jmp
mov
jmp
xor
pop
in
fldcw
jno
mov
dec
pop
or
clc
dec
xchg
arpl
jmp
mov
lods
out
or
pop
push
ja
mov
loop
dec
jb
loop
mov
pop
mov
int
cmc
ljmp
or
cmp
aas
pop
stos
push
add
xchg
notb
in
jns
in
out
loopne
repnz
sbb
sbb
jle
mov
insb
cmp
xlat
test
lock
xor
jae
mov
loope
aas
pop
mov
mov
fldcw
xlat
dec
pop
outsb
xchg
notl
std
int
js
ret
mov
filds
aad
idivl
inc
dec
lds
mov
ds
add
jne
inc
test
and
pop
or
lret
sbb
arpl
adc
pop
xor
lea
nop
lods
out
or
lcall
out
sub
add
sbb
int
jns
ja
rcr
mov
push
aas
adc
or
mov
in
xor
test
ja
clc
xchg
pop
icebp
jge
repz
lock
outsl
add
imul
fidivl
sub
enter
jbe
mov
push
shr
add
xchg
adc
adc
std
sbb
sub
ds
add
inc
dec
aad
out
dec
jno
or
rorb
stos
jg
outsb
xor
jno
aad
sub
jne
bound
mov
xchg
dec
jne
sbb
fwait
aam
stos
movsb
fldcw
mov
pop
jp
shll
pushf
lea
sub
xchg
push
sub
testb
adc
sbb
push
cmp
push
jae
addr16
dec
mov
stc
test
in
pop
icebp
mov
add
mov
in
cmp
push
cld
push
inc
xchg
pop
out
sbb
cmpsb
in
mov
mov
cmp
add
in
sbb
or
jecxz
xchg
lock
push
xor
gs
setb
cld
clc
push
jge
and
test
adc
adc
test
stos
xchg
pop
add
mov
xor
std
mov
mov
xchg
push
lret
shr
into
movsb
dec
bnd
push
mov
sbb
div
mov
jg
add
xor
pop
cwtl
cmp
and
jg
push
add
add
lret
outsb
nop
shlb
add
dec
int3
cli
pusha
push
inc
xor
ret
ficomps
imul
add
icebp
mov
cmp
mov
pop
add
lret
rep
sbb
rep
inc
clc
inc
pop
mov
int3
stc
fsubrs
loope
dec
xlat
daa
inc
ret
fstpt
jnp
dec
or
popf
rclb
hlt
jnp
insl
push
xchg
iret
outsl
popa
outsb
gs
push
out
push
ja
aas
push
pushf
mov
dec
jno
test
mov
or
xor
sbb
jg
jmp
cmp
pop
and
sub
sbb
mov
movsb
aam
add
add
cltd
cmp
test
dec
ss
cmpsb
out
clc
dec
scas
sbb
call
adc
xchg
inc
cmp
dec
outsl
dec
adc
or
sub
subl
daa
jne
int3
fwait
jno
loopne
cmp
ss
clc
clc
push
add
lock
pop
cmp
shrl
pop
icebp
jle
ds
popf
sbb
movsb
mov
shl
cld
mov
or
in
jno
jb
lds
pusha
ss
fdivr
fimull
or
test
js
mov
sub
cli
fisttps
loopne
adc
push
lock
decb
scas
fwait
aas
out
inc
mov
out
mov
inc
xchg
push
and
mov
imul
mov
sbb
pop
jp
mov
mov
mov
pusha
je
sbb
lds
cmp
dec
adc
popf
or
xlat
cs
push
mov
pop
push
outsb
xchg
sahf
pop
dec
mov
mov
sbb
cmp
xor
sub
mov
xchg
dec
pop
xchg
mov
dec
xor
jne
and
repz
scas
pop
lock
stos
out
jmp
shrl
inc
push
cli
mov
mov
mov
test
adc
fidivrs
lods
mov
mov
aas
ret
add
nop
sub
les
mov
repnz
enter
in
dec
les
jecxz
cmp
in
xor
aam
lret
lret
fnstsw
rcr
test
push
adc
aaa
jb
xor
outsl
or
pusha
bnd
jecxz
and
pop
cmp
lods
mov
jns
in
test
mov
xchg
in
dec
xor
add
add
mov
xor
enter
int
movsb
cmp
jne
sbb
xorl
mov
and
loopne
aad
xchg
nop
xor
xchg
dec
aad
mov
and
leave
in
int
xor
adcb
enter
pop
inc
adc
clc
adc
push
jp
stc
imul
mov
in
push
ret
pop
cs
mov
addr16
adc
fsubr
xchg
repz
mov
cs
or
lcall
test
or
push
popl
mov
inc
xchg
dec
xor
andb
xchg
shlb
cmp
idivl
xchg
into
mov
lds
fnstenv
sti
lock
pop
ja
in
mov
jnp
sub
and
lret
cmp
jl
fwait
insl
dec
push
movsb
das
push
stos
push
data16
mov
xchg
inc
sbb
imul
out
shlb
pop
fs
insb
push
loope
cmp
out
ljmp
stos
mov
mov
pop
sahf
into
leave
adcl
loope
loop
push
mov
dec
pushf
decl
jb
shrb
mov
mov
push
dec
inc
push
add
in
xor
pop
mov
push
add
push
mov
or
push
xor
cmc
pop
sbb
mov
adc
ja
pusha
daa
push
mov
push
add
lea
loop
cwtl
jmp
mov
mov
fwait
pop
pop
fisubrl
mov
mov
jno
jg
dec
adc
insl
dec
sub
or
mov
add
loop
jmp
pusha
jne
xchg
dec
adc
hlt
movsb
fincstp
insl
fisttps
lret
or
cmc
rcr
xlat
fldcw
sbb
inc
jns
stos
jnp
pop
stos
mov
iret
jns
jecxz
lahf
loope
ret
sbb
das
or
push
cltd
in
movsl
ss
loopne
pusha
mov
sbb
in
insb
pop
insb
push
pop
movb
pop
cmpl
fidivrs
pusha
fsubp
movsb
and
js
cmp
sub
sub
outsb
idivl
out
ret
mov
cwtl
ja
push
movsb
dec
cli
xchg
imul
xchg
and
mov
jo
loopne
ss
pop
sub
in
int
test
mull
sahf
cmp
xchg
and
aad
les
pop
stos
cmp
jmp
lods
roll
sbb
ror
xor
xchg
pop
call
pop
lds
xchg
jle
je
hlt
and
pop
or
jp
jp
sarl
or
push
push
fwait
mov
mov
shl
add
xchg
lds
jno
lret
hlt
dec
xlat
in
push
lahf
imul
pop
fcoms
in
sarw
jae
pop
into
jl
mov
and
pop
dec
adc
imul
gs
loop
mov
insb
cmc
pop
adc
dec
mov
gs
push
dec
mov
loop
dec
int
adc
mov
sti
cmp
inc
and
fimuls
fisubrl
stos
insl
icebp
add
shl
cmp
xchg
sub
aas
dec
fs
xor
cmpsl
adc
push
jnp
mov
pop
shll
xchg
fwait
daa
mov
mov
xor
add
leave
daa
pushf
mov
mov
movl
ret
sub
xor
mov
sub
movsl
ret
nop
loopne
test
adc
or
xor
in
jg
mov
jnp
adc
stos
xchg
clc
movsl
adc
data16
pop
inc
rcrl
arpl
sti
subb
fisubl
inc
mov
jnp,pn
loopne
test
andl
faddl
lock
push
jle
mov
incb
fwait
adc
dec
fmulp
push
roll
push
vmwrite
loop
mov
pop
pop
mov
or
lret
inc
cmp
jle
adc
push
mov
sbb
je
ret
push
pop
mov
push
loopne
mov
imul
clc
lock
pop
push
es
xchg
in
fldt
mov
and
dec
jae
jbe
adc
hlt
xchg
rorb
push
imull
popa
sub
int3
dec
pop
push
mov
pushf
push
mov
mov
dec
add
jne
mov
xor
sahf
sub
mov
out
mov
fiaddl
rorb
xchg
xor
bnd
push
xor
mov
xor
push
pop
js
mov
insl
fsubrs
rclb
or
xchg
mov
loope
dec
repz
add
fisubrl
xor
scas
inc
fadds
sarl
std
sub
inc
or
mov
call
aam
subb
ss
jmp
inc
mov
insl
sub
enter
clc
stos
movsb
out
dec
push
mov
sub
xchg
fisubs
cmp
lret
add
mov
push
popa
and
lock
sub
mov
jle
xorl
sub
mov
aas
sub
outsb
bound
xchg
cmc
push
fistl
fcoms
cli
pop
fsubs
fstpl
mov
adc
fsubl
jecxz
test
scas
es
add
fsubrl
fbld
aaa
mov
push
popf
push
mov
jne
or
cld
frstor
adc
dec
lcall
imul
in
or
push
in
adc
pop
movsb
out
or
popa
add
into
shl
sbb
loop,pn
mov
dec
xor
xchg
ret
stc
jge
push
clc
inc
or
loope
jne
das
sahf
pop
mov
subb
adc
imulb
jne
add
mov
inc
cmp
adc
and
xchg
xchg
outsb
lcall
out
mov
push
adc
jae
aam
inc
into
jb
mov
or
mov
dec
imul
repnz
decb
inc
sbbb
inc
dec
sar
inc
jle
je
test
arpl
pop
in
imul
mov
mov
rcrb
sub
pop
repnz
rcrl
sarb
dec
out
dec
cltd
push
dec
lret
test
inc
shrl
stos
sub
cmpsl
pop
xor
pop
in
and
sti
inc
scas
inc
gs
or
pop
push
std
inc
jge
shlb
movsl
push
aaa
jo
mov
sbb
cmpsl
stc
cmp
ret
push
mov
les
int
or
inc
dec
ja
outsb
sbb
sahf
jbe
sbbb
je
mov
push
pop
loope
sub
fdivrs
ljmp
jmp
loop,pn
xchg
dec
or
div
out
movsb
xchg
dec
sbb
or
call
nop
or
imul
jge
add
fucom
stos
jl
cmp
test
xchg
or
stos
and
sbb
jge
add
mov
call
push
jbe
test
test
cmpsl
enter
bound
outsb
mov
aas
xchg
jno
mov
dec
xchg
inc
add
imull
xchg
xor
sub
mov
jbe
les
or
pop
es
in
adc
negl
jnp
add
popf
xchg
jns
in
push
ja
xor
mov
xchg
xchg
sbb
lods
jnp
sbb
inc
xchg
rcrl
add
outsb
add
lds
out
aas
popa
push
pushf
jne
popa
es
adc
or
pushf
insb
nop
js
add
pushf
nop
xor
jne
adc
sahf
push
mov
imul
mov
into
loopne
mov
mov
cmp
or
jg
out
hlt
movsb
daa
loop
aas
lock
sub
mov
sbb
ss
mov
inc
test
jno
adc
and
in
xlat
sahf
mov
jne
cmp
dec
mov
movsl
mov
inc
xchg
addl
in
outsb
xor
insb
pop
mov
sbb
pop
and
leave
adc
insl
out
or
pop
inc
rcrl
cmp
sbb
sub
jmp
xor
mov
into
push
push
and
test
sub
inc
add
cmp
stos
push
mov
mov
sbb
pop
xor
or
jp
pop
inc
test
nop
mov
inc
sub
mov
cmp
icebp
jb
dec
adc
mov
push
inc
jne
adc
sub
jmp
cmp
jg
mov
adc
and
mov
jae
pop
and
sbb
mov
xchg
out
mov
mov
sti
and
xor
add
or
and
sub
pop
mov
adc
loop
pop
jle
dec
clc
cmpsl
sbb
adc
lret
sbb
jae
pop
jg
dec
fists
sbb
stos
and
loopne
fsubrs
xor
daa
jb
cmp
lcall
fadd
lret
rcl
scas
push
or
push
cmc
pop
add
mov
int3
idiv
ret
add
adc
mov
adc
sub
cli
jl
mov
xor
mov
leave
fsts
push
sbb
out
icebp
aad
cmc
gs
xor
ret
subl
aam
inc
int
fmulp
pop
icebp
mov
and
xchg
or
es
jo
rcrl
das
lret
call
mov
ret
rcrl
es
xor
push
addr16
imul
sub
loopne
xchg
repnz
test
push
cmc
xchg
push
mov
dec
push
mov
lret
int3
mov
pop
inc
jp,pn
out
stos
ret
pop
cmp
mov
mov
mov
adc
xor
inc
mov
cmpsl
sbb
aam
rclb
call
mov
stc
mov
add
pop
mov
fcmovnu
ss
lods
out
lods
lcall
cli
jae
adc
adc
les
adc
pop
cld
sbb
mov
test
hlt
loope
or
xchg
adc
dec
insl
jb
subb
dec
add
dec
inc
in
adc
scas
sbb
addr16
shl
ret
jns
cs
mov
lahf
std
loopne
sbb
xchg
add
jl
bound
repnz
in
adc
pop
inc
jecxz
cmp
pushf
cld
mov
std
aam
mov
aam
xchg
pop
je
pop
pushf
sbb
adc
negb
add
mov
and
movsb
mov
int
adc
loope
lcall
lods
subl
push
or
sahf
int3
cmp
insb
mov
ds
popa
leave
ds
xchg
xor
sub
ret
xchg
imul
cmp
ljmp
in
std
out
push
and
fidivl
lcall
dec
repz
xchg
aad
out
mov
rol
popl
sbb
js
inc
addr16
adc
inc
stos
mov
leave
aad
xchg
push
xchg
push
aas
push
mov
dec
daa
sbb
mov
jg
jecxz
sub
or
sub
jmp
sub
fsts
icebp
adc
mov
cmpb
cmp
lcall
mov
mov
mov
cmpsb
jne
add
and
fstpl
aam
mov
insl
inc
lahf
xchg
fdiv
add
dec
int
jno
cs
pop
xchg
sub
ss
loop
xchg
xor
in
lods
rclb
fidivrl
sarb
cmpsb
ljmp
sub
push
popl
jne
push
movl
sub
pop
lret
jg
aaa
repz
xlat
xchg
mov
dec
mov
xchg
jge
aaa
aad
xchg
cmpsl
sub
in
data16
mov
test
add
push
push
addr16
lahf
cmp
ret
aas
jg
xchg
xchg
rorl
lea
loop
outsl
cli
outsl
fadd
movsl
leave
mov
shlb
or
adc
jae
push
xchg
cmp
stc
popf
dec
mov
mov
mov
jb
test
outsb
popa
cmpb
xchg
dec
add
test
jb
push
das
aam
jns
mov
push
or
fcomps
inc
ds
int
and
mov
gs
pop
add
insb
sbb
test
and
jo
imul
lds
sbb
loopne
test
and
data16
mov
inc
into
ret
aaa
ret
notl
pop
xchg
cmp
setle
lahf
lret
cmp
or
aad
into
ljmp
or
cwtl
adc
std
mov
js
shll
js
idivb
cmpsl
repz
adc
dec
inc
lock
cmp
pushf
xor
iret
shlb
call
mov
mov
jecxz
int3
sub
push
inc
jo
ss
lahf
inc
dec
mov
inc
pop
or
or
stos
add
and
xchg
push
and
je
xchg
rol
pop
lods
pop
xchg
push
test
add
sbb
pusha
mov
cs
mov
jg
xor
sbb
cmpsl
jae
call
xchg
cmp
movsl
pop
out
cwtl
push
cwtl
stos
insb
push
pop
shl
mov
sub
fwait
gs
or
pop
je
outsl
popf
das
fisubs
lea
pop
mov
mov
popa
shrb
mov
xchg
inc
jo
mov
rclw
add
dec
xlat
sub
add
fidivl
loope
sbb
or
shlb
push
movsb
pusha
dec
in
lcall
push
js
stc
popf
jb
loopne
subl
addr16
or
sbb
xor
fwait
adc
test
sub
xor
movsl
out
rorb
icebp
mov
call
lods
sub
xor
pop
iret
inc
and
divb
nop
sbb
add
push
stos
pusha
and
xor
pusha
ss
or
and
insl
pop
pop
jle
cmp
cmpsl
cmp
inc
fs
jno
inc
adc
cwtl
popf
pop
pusha
stos
mov
addr16
and
cmp
insb
jmp
push
push
add
jnp
inc
add
or
and
push
je
xor
andl
emms
je
dec
xchg
xchg
ja
sub
xor
mov
out
xor
xchg
jo
mov
std
sub
sbb
sbb
nop
pushf
ret
lods
mov
sbb
in
push
dec
data16
push
mov
fisubs
or
jl
jb
pop
leave
ljmp
jno
jp
push
stc
in
sub
mov
sbb
cwtl
or
adc
fidivrs
lcall
jl
lds
out
fiadds
int
pop
dec
sbb
pop
inc
dec
mov
dec
or
insl
mov
loop
ret
push
pop
mov
pushf
xchg
enter
into
add
je
data16
xchg
or
stc
mov
nop
aaa
in
fsubr
sbbl
leave
dec
sub
mov
xchg
jl
shll
scas
stos
xlat
cltd
mov
hlt
out
scas
adc
xor
dec
xchg
pushf
adc
lahf
stos
push
sbb
xchg
in
shll
jne
mov
cmp
pop
fcomp
inc
jae
or
sbb
lret
addr16
shl
sub
std
lds
mov
lods
adc
sbb
sub
mov
cmpsb
mov
cmp
fstps
fstl
sub
scas
mov
bound
jecxz
inc
rolb
xchg
mov
jecxz
lea
mov
outsb
xor
push
in
lods
and
cmpb
xor
mov
add
sub
nop
mov
mov
adc
jle
sbb
adcb
push
fwait
xchg
cmp
sub
lock
lds
jp
push
pop
pop
sub
mov
lahf
out
data16
in
lds
mov
ljmp
jns
outsb
and
xlat
fwait
adc
ljmp
adc
jae
jbe
push
adc
mov
daa
iret
add
dec
outsl
aaa
sbb
dec
js
sbb
aad
test
mov
adc
scas
bound
lds
fdivl
xlat
bound
mov
jno
xlat
cmp
outsb
ljmp
pusha
sub
jmp
and
inc
jle
sub
xchg
call
nopl
cld
loope
mov
push
mov
punpckhdq
arpl
xlat
orl
or
addr16
or
cmc
daa
lods
inc
pop
add
loop
lcall
mov
push
pop
mov
xchg
xchg
aad
add
cmc
fiaddl
push
mov
xor
push
data16
mov
add
outsl
mov
movsb
and
popf
inc
sbb
mov
cmp
or
pop
sub
data16
sti
cwtl
sar
dec
fwait
xchg
hlt
adc
xchg
sub
lcall
push
jo
jmp
mov
stc
cmp
xchg
ljmp
loop
cmp
pushl
outsb
iret
roll
stc
filds
fucomi
jne
sqrtps
dec
lahf
movsl
es
jmp
mov
nop
sbb
std
cmp
jecxz
fstpt
or
xor
mov
ljmp
adc
cld
add
mov
adc
pusha
add
push
mov
and
lcall
adc
decl
push
push
pop
test
dec
jle
nop
sbb
pop
jmp
push
test
xchg
dec
pop
insl
mov
in
push
xorb
adc
inc
pop
cmp
data16
sti
push
mov
fs
insl
mov
cwtl
mov
mov
xchg
sub
xchg
jecxz
add
repnz
insb
ja
pop
sbb
in
jno
mov
leave
dec
dec
add
mov
mov
jge
pop
adc
mov
add
pop
pop
inc
iret
sbb
xchg
shrb
fs
mov
jno
loop
outsl
orl
lock
mov
mov
aam
out
neg
jecxz
scas
into
out
dec
mov
add
clc
into
and
push
cmp
mov
push
in
sub
idiv
mov
in
outsl
test
cltd
xchg
xorb
xchg
dec
add
daa
imul
popf
mov
mov
jnp
ds
jl
xchg
inc
cmpsb
fdivrp
fidivrl
lret
mov
cld
iret
inc
mov
movsb
add
clc
xor
movsl
xchg
int3
out
in
xor
lock
xor
loope
pusha
pop
push
iret
push
cmp
add
or
sbb
jbe
subb
xchg
jbe
fcompl
mov
fisttps
aam
int
jl
stos
cmpsb
xor
data16
xchg
sub
pop
stc
mov
mov
jl
shr
arpl
mov
inc
leave
add
xor
gs
int
pushf
decl
mov
xchg
scas
jl
dec
mov
mov
lahf
cli
daa
push
or
imul
mov
add
lds
mov
fdivrl
xor
inc
hlt
btr
mull
mov
push
sbb
test
xor
call
inc
popaw
push
stos
dec
test
push
jb
jge
and
std
pop
xor
je
rol
push
mov
vmread
adcb
leave
xor
jmp
mov
xlat
sar
shrl
xchg
outsl
jecxz
jmp
aam
in
lret
bound
aas
ss
cmc
divl
in
fsubp
imul
mov
jo
shr
sub
xor
mov
inc
add
nop
mov
jb
data16
out
pop
adc
add
sub
sub
adc
or
mov
aad
loope
adc
out
data16
fcomp
jge
jbe
add
aas
scas
scas
sahf
adc
jb
sbb
dec
sti
jns
fs
and
jns
and
subb
xchg
lds
mov
aam
movsl
dec
mov
sbb
add
hlt
inc
sti
lock
mov
mov
mov
bound
call
hlt
cld
fsts
jl
lods
adc
cmp
rcrl
jl
clc
jecxz
sbb
ljmp
sbb
sahf
xchg
mov
mov
pop
push
inc
ljmp
cmp
adc
add
jmp
xchg
and
fisubs
lahf
xor
and
sub
adc
loop
adc
sub
push
mov
mov
gs
inc
adc
stc
sub
jg
les
or
in
adc
sub
or
or
sti
pop
popf
xchg
ror
repz
pop
inc
xor
cmp
lahf
ljmp
int
mov
outsb
or
inc
daa
adc
mov
sub
cmpsb
or
jo
and
jecxz
test
out
push
inc
dec
cmp
mov
frstor
repnz
fadd
orb
ret
int
movsb
push
add
xor
fcmovnbe
cmc
add
sub
sub
test
pop
mov
filds
jle
push
cmc
popl
repnz
xor
fisubl
mov
scas
ret
jmp
fidivrl
mov
xor
aaa
scas
push
sahf
pushf
mov
sub
sub
lds
loopne
xchg
dec
dec
add
pop
mov
ret
xchg
mov
inc
sbb
gs
cmp
pushf
sbb
movsl
mov
xchg
fwait
add
or
test
fincstp
in
push
dec
cmpsl
dec
pop
xchg
mov
sbb
imul
mov
addr16
and
dec
fstl
sar
je
inc
shl
mull
insb
add
mov
repz
scas
mov
out
xchg
xlat
lea
add
mov
imulb
arpl
repnz
sub
fisubrl
mov
add
xchg
ret
fistl
add
mov
loop
and
movsl
cmpsl
adc
into
or
dec
test
dec
push
test
sub
mov
scas
dec
addr16
jge
cld
pop
ljmp
fcom
cs
lods
sub
jp
stc
add
out
inc
mov
pusha
out
pop
cmp
sub
std
mov
pop
cltd
in
cmp
fistpl
int
jb
mov
ret
cmpsb
mov
in
push
cltd
daa
rclb
pop
nop
jp
mov
mov
dec
jnp
push
lcall
jl
jle
loope
mov
stos
ljmp
mov
push
ret
and
insb
imul
jbe
mov
test
jae
fists
enter
jecxz
loop
sbb
hlt
or
mull
sub
dec
call
scas
jbe
sub
cmp
filds
gs
sub
jno
xor
ret
pop
adc
xor
cwtd
push
xchg
mov
or
iret
stc
es
xchg
ds
pop
ret
mov
popf
adc
and
stos
leave
addr16
mov
fisubs
ss
mov
fsts
out
and
aas
movsl
mov
pusha
pushf
jl
and
call
mul
push
sub
jge
cltd
sbb
jne
mov
add
insb
push
push
pusha
xchg
lcall
fs
xchg
mov
aaa
ret
aas
sahf
and
inc
jnp
mov
jnp,pt
pusha
sahf
fs
mov
mov
push
pop
lret
jnp
sti
int
aaa
popa
rcrl
pop
loop
xchg
pop
ret
mov
cmp
cmc
jmp
fidivs
lcall
int
mov
mov
aas
sbb
int3
dec
aas
cmp
repnz
xchg
xlat
into
adc
fwait
sub
xchg
fwait
sbb
adc
dec
inc
adc
dec
sub
or
sub
in
in
dec
cmpl
cwtl
inc
ljmp
ret
adc
lods
enter
lea
lret
or
xchg
xchg
scas
shrl
add
xor
mov
outsb
cs
or
repz
movsl
xchg
cmp
inc
xor
leave
popf
jg
shrl
xor
imull
mov
sub
cmp
xchg
movsl
mov
inc
dec
xor
pushf
ds
or
mov
jle
pop
loopne,pn
lea
dec
jno
pop
loope
inc
mov
inc
je
add
push
lods
dec
cmc
sti
stc
rcll
lret
insl
cltd
mov
rorl
jno
xchg
fdivs
xor
inc
stos
loope
pop
hlt
out
adc
imul
es
add
jnp
push
je
pusha
dec
dec
cli
push
mov
inc
scas
es
dec
cwtl
imul
push
iret
mov
dec
out
pusha
lcall
mov
adcb
sarl
adc
pusha
addr16
jae
push
pop
cmp
or
cmp
lcall
sbb
jnp
cmp
jmp
out
mov
dec
cltd
push
ret
arpl
add
rcrb
mov
xlat
nop
es
cli
ss
push
in
repz
push
popf
inc
rolb
lock
xor
ja
push
mov
nop
sahf
xchg
and
dec
pop
fisubrs
pop
mov
push
mov
xchg
loop
and
add
mov
sarl
enter
test
mov
das
dec
lds
cld
sub
mov
adc
popa
jge
cld
in
add
test
jecxz
ret
leave
loopne
shlb
aam
or
jecxz
mov
int
adc
cmc
ss
jmp
cmp
sahf
and
pop
push
adc
mov
sub
xchg
jne
shr
mov
out
mov
inc
scas
push
add
push
cmpsb
jno
pusha
add
pusha
ret
sbb
mov
jae
mov
mov
and
mov
dec
pop
test
fisttpl
inc
xbegin
inc
in
cmpsb
and
testb
and
mov
sub
add
insl
shl
xchg
ret
xchg
cmp
xchg
dec
insb
gs
jno
arpl
movsb
adc
outsb
cli
popa
xchg
scas
or
pusha
or
insb
enter
shll
sub
filds
pop
push
cmp
mov
dec
roll
xchg
and
shll
adc
pushf
es
orl
inc
fbld
sbb
xor
sbbl
jle
or
adc
push
and
xchg
sbb
jg
cmp
xor
xor
xor
or
push
enter
mov
movsb
cmp
shrb
push
cli
mov
mov
jecxz
insl
add
je
sarl
cli
rcll
lds
xchg
in
cwtl
dec
and
or
mov
lock
push
push
sbb
dec
rorb
cmpsl
sub
lds
inc
fisubs
movsb
bound
movsb
int
pusha
mov
addr16
pop
mov
in
aaa
aas
fucom
push
adc
les
and
and
ljmp
cmp
mov
loope
mov
test
inc
or
movb
sbb
and
adc
shll
mov
ficoml
addl
imulb
and
jle
lahf
inc
test
mov
cmpsl
std
dec
scas
repz
inc
xchg
mov
lods
stos
loope
push
arpl
lret
mov
bound
dec
dec
dec
cmc
addb
inc
out
jmp
pusha
xlat
fs
ror
mov
push
cmp
cmpl
mov
inc
pop
rclb
fcomps
adc
scas
stos
sbbb
or
adc
aas
cmp
addb
lock
out
outsb
jbe
outsl
push
rorl
pop
jp
clc
push
adc
or
sub
ljmp
xor
testl
inc
daa
jns
popa
iret
out
and
or
scas
test
loopne
dec
in
test
test
xchg
pop
cwtl
jns
filds
jne
cli
xchg
mov
cmp
shrb
pusha
cmpsb
rcrl
xchg
je
mov
xchg
dec
cltd
or
ficoml
loopne
lock
mov
rcrl
ljmp
into
icebp
pop
sbb
jne
or
iret
shrb
sub
inc
mov
sbb
test
mov
cmp
push
adc
scas
loopne
ret
arpl
mov
cmc
pop
mov
arpl
sub
flds
cmp
xchg
and
lock
jno
dec
adc
rorb
sub
mov
fcomip
sbb
cs
push
add
fldenv
aam
lahf
adcl
pop
mov
ss
orb
repnz
ret
and
rorl
mov
cmpsl
in
cmpsl
xchg
and
hlt
dec
fsubrp
push
mov
xor
aam
jge
jl
adc
mov
icebp
pushf
add
dec
adc
adc
rclb
xor
inc
cs
fstp
xchg
jnp
in
fisubs
cli
subl
je
add
and
mov
shr
push
jne
andl
add
and
jnp
and
add
and
add
int
cmpsl
push
push
pop
repz
test
arpl
or
mov
mov
aaa
adc
jmp
mov
dec
inc
mov
xchg
fstl
or
pusha
pop
xchg
or
push
out
push
jmp
into
addr16
jl
add
aas
add
push
or
movsb
in
rcr
out
stc
add
cmp
mov
sbb
movsb
mov
addb
lahf
push
mov
lahf
push
mov
mov
lcall
sub
lods
adcb
add
leave
inc
les
xor
add
push
call
add
and
lcall
sbb
shll
sbb
es
arpl
call
popa
aas
jecxz
pop
dec
das
mov
push
sar
push
sbb
sub
sbb
jb
outsl
clc
jae
xchg
push
outsl
popa
pop
pop
out
out
pop
rcrl
jle
pop
icebp
jmp
out
icebp
adc
dec
jbe
sar
adc
push
fnstcw
mov
jmp
add
das
ror
arpl
ja
jno
ret
stc
xor
int3
mov
and
lcall
mov
mov
orb
and
fnstsw
hlt
sbb
movsb
pop
shr
pop
or
lea
leave
cmc
cmp
pop
sbb
mov
push
pop
lea
out
or
mov
mov
pop
jno
dec
int
ret
shll
mov
imul
push
negb
cmc
mov
mov
ljmp
sbb
jle
leave
push
test
jge
xor
sub
mov
add
xchg
cmpsb
adc
pop
jmp
nop
xchg
mov
out
enter
aam
push
xchg
cld
jle
inc
push
cli
cmp
pop
bound
pushf
pop
xchg
xchg
pop
stc
jae
pop
pop
dec
push
sub
jmp
xor
sbb
cmp
je
shrb
pop
xor
fists
lahf
xor
jo
mov
ret
inc
lret
pop
sbb
or
pushf
out
hlt
lds
dec
jns
push
and
es
es
stos
and
cmc
sub
stc
inc
ja
jg
aas
sub
stos
leave
int3
cmp
dec
adc
mov
iret
enter
sbb
jmp
into
ja
sub
xor
lcall
mov
movsl
stos
xor
mov
subb
adc
mov
gs
in
pop
xorl
pop
mov
mov
mov
sahf
ja
add
sub
shll
mov
cmp
stos
dec
fwait
imul
mov
pop
mov
imul
push
adc
pushf
out
int3
bound
lcall
sub
in
or
pop
sbb
xor
cmpsb
mov
xlat
js
and
adc
and
mov
cmc
aam
addr16
xchg
ljmp
insl
inc
cmp
dec
pop
loope
adc
mov
sub
fs
loope
pop
pop
pop
lahf
pop
les
int
sbb
addr16
les
push
or
sbbl
movsl
push
es
stos
push
jae
and
inc
sub
call
scas
xchg
mov
negl
push
or
cmpsl
adc
inc
sbb
cltd
in
cmp
pop
sbb
sub
sti
je
pushf
cmp
fimuls
js
arpl
mov
or
cmp
pop
mov
xor
mov
inc
sbb
jb
jo
dec
mov
orb
int
dec
mov
ret
xchg
into
repz
ja
movsb
mov
add
xchg
and
leave
leave
jae
xor
int3
inc
imul
test
mov
insl
addl
scas
sbb
xor
aam
sub
xlat
mov
cld
scas
arpl
icebp
or
lcall
add
rcrb
jmp
adc
repnz
call
xchg
jno
inc
jp
push
jne
or
pop
lock
andb
js
inc
loope
push
jp
sbb
bnd
or
jl
mov
jle
shll
cld
mov
inc
push
xor
sbb
adc
dec
iret
enter
xchg
inc
outsb
sar
cmp
jge
pop
adc
enter
stos
mov
inc
xor
or
aaa
cwtl
jne
push
mov
xor
test
cli
adc
clc
jae
pop
bound
shr
dec
lods
and
mov
cmpsb
insl
dec
stos
mov
ret
push
pop
ds
mov
dec
push
out
in
inc
pop
addr16
dec
ret
out
loop
pop
jno
or
jl
idivb
aam
push
mov
fisubrl
mov
fldenv
and
dec
jno
push
stc
mov
repnz
sahf
inc
icebp
testb
push
lret
enter
outsl
jnp
pop
xor
cwtl
adc
add
pop
scas
sub
sub
xchg
adc
push
mov
pop
pop
scas
adc
mov
int3
lods
mov
and
fadds
je
add
sub
mov
cltd
fstpl
jne
pop
jnp
insl
data16
dec
loop
xor
out
sbb
or
cmpsb
addr16
xchg
xor
in
push
in
sarl
test
frstor
out
out
lds
out
adc
mov
xor
sbb
notb
into
cmp
mov
ficoms
ficompl
jae
pop
inc
insb
imul
pop
sbb
push
push
adc
jmp
inc
add
gs
adc
fbld
dec
xor
jp
sahf
push
push
or
scas
adc
add
pop
push
add
xchg
inc
mov
jb
and
mov
and
sbb
mov
sub
in
or
xor
xchg
jns
lret
movsl
dec
mov
in
add
scas
pop
sbb
sarl
outsl
mov
stos
mov
ret
sub
scas
push
hlt
rol
or
dec
addb
ljmp
xchg
pop
push
scas
test
push
dec
sbb
int3
push
pusha
popf
cmp
xchg
or
je
adc
fsts
out
jno
or
xlat
jne
adc
cmp
dec
sbb
fadd
cmp
and
fcomps
js
inc
mov
mov
daa
pusha
cmp
das
add
jp
shl
mov
mov
out
imul
int3
test
inc
mov
or
sbb
push
popl
mov
xlat
iret
cmp
inc
inc
jbe
aad
mov
adc
es
xor
into
jecxz
xchg
push
shl
cltd
cwtl
ss
fisubs
inc
cmp
int3
out
adc
repz
lret
push
push
in
insb
imul
int
mov
lods
dec
jecxz
es
inc
mov
je
es
jne
mov
fisubrs
cmp
sub
imul
ficompl
cmp
imul
outsb
adc
push
aaa
dec
arpl
mov
popf
sbb
sub
dec
sbb
imul
xor
jo
repz
jb
out
xor
or
adc
xlat
fs
ljmp
push
mov
inc
js
lahf
sbb
ficompl
out
dec
mov
inc
ljmp
shll
jecxz
xchg
sub
gs
stc
ret
lret
xor
cmc
sarl
test
test
jg
sub
leave
andb
jp
roll
gs
mov
mov
imul
cmp
in
sahf
sub
repnz
incl
pop
loop
cmp
mov
push
jbe
movsl
das
fstpt
rolb
jle
flds
pop
sbb
cmc
loop
je
or
insl
sbb
mov
out
mov
adc
mov
icebp
aad
shl
push
cltd
mov
adc
mov
mov
cmp
sbb
iret
xchg
fs
movsl
mov
scas
or
add
pop
xor
jl
sub
add
inc
adc
in
out
jecxz
adc
out
ds
sub
and
cmc
lcall
fisttpll
sub
rol
sub
push
fsubl
jmp
ss
fisubs
mov
in
mov
jg
pop
xchg
mov
fdivl
xor
out
in
cmp
ret
lock
shl
xchg
fdivrp
push
cmp
int
stos
xor
cmp
repnz
mov
leave
cs
jae
or
xlat
in
pmaddwd
jp
or
mov
pop
mov
pop
mov
pop
jg
adc
fcmovb
ja
aam
test
jbe
mov
dec
xor
imul
push
mov
insl
pop
in
sbbl
push
data16
aam
mov
subl
out
cmp
and
mov
pop
pop
xchg
fisttps
stc
sub
and
jmp
stc
call
loopne
adc
adc
hlt
popf
outsl
andl
jl
push
xlat
cmp
and
push
insl
ficompl
gs
mov
pop
int3
xor
aam
mov
adc
push
mov
xchg
cmpsl
popf
mov
lods
pusha
mov
imul
and
mov
fwait
loopne
or
pop
inc
enter
mov
inc
test
adc
stos
pusha
cs
sbbb
jb
push
cld
daa
dec
gs
cmpsb
shll
xor
push
pop
popf
xchg
adc
mov
xor
adc
stos
or
cmpsl
mov
sub
jno
cmp
mov
jo
pop
sbb
pop
push
or
push
mov
push
lods
ds
sbb
sahf
popa
lods
arpl
xchg
mov
int
mov
lahf
xchg
or
pushf
fs
mov
push
orl
adc
aas
sar
mov
sti
push
adc
insl
push
clc
pop
mov
stos
adc
or
adc
fidivrs
clc
push
jne,pt
jmp
sub
fldcw
inc
cmp
dec
rorl
xchg
jl
aas
fdivl
sub
xor
adc
out
ror
and
sbb
pop
nop
xchg
jae
gs
pop
js
scas
stc
sbb
cwtl
cld
inc
mov
iret
inc
rcrl
dec
pop
cltd
loopne
mov
fistps
lds
aad
push
mov
in
jecxz
scas
dec
cs
test
lock
sbb
into
mov
rol
jae
mov
jae
jmp
mov
jmp
push
sub
jmp
pop
cli
rcrl
sbb
push
fcmovnbe
and
test
cwtl
mov
mov
lods
xlat
ds
push
stc
sahf
outsb
pusha
rolb
jnp
icebp
les
cmpsb
test
popf
in
kmovw
iret
push
jnp
enter
jno
and
xchg
jg
xchg
push
ret
push
inc
test
lds
idivl
cmc
add
ret
jg
sti
jbe
and
call
mov
in
dec
xchg
push
int
mov
xchg
xchg
lock
cmpb
lea
cmpsb
mov
and
xchg
sub
push
jp
cld
dec
cld
push
xor
push
and
push
inc
push
inc
imul
ja
xor
push
add
jns
jo
pushf
dec
or
sbb
fistpll
cmp
pop
dec
les
sbb
jmp
jae
push
push
push
cmp
lret
jo
adc
mov
mov
jmp
ret
jno
repnz
test
sub
push
imul
xor
push
push
cmp
dec
es
cltd
inc
divl
jp
sub
pop
into
mov
xchg
mov
adc
ljmp
sbb
sub
aad
ficomps
push
cmp
mov
mov
mov
xchg
inc
ja
mov
pop
aam
nop
sbb
jno
fdivs
lret
addr16
and
movsb
test
cltd
iret
int3
xor
cs
out
test
dec
push
popf
sbb
pushf
ja
mov
pop
in
mov
sub
mov
push
sahf
sbb
jae
incl
xchg
inc
loope
filds
sahf
leave
xor
aas
xchg
mov
xchg
jne
cs
test
add
xor
jae
sbb
int
movsl
out
imul
mov
or
and
out
mov
sti
mov
xchg
out
fbld
testl
cltd
xchg
mov
sbb
inc
rep
xchg
sti
push
rep
js
jmp
pop
cmpsb
and
aas
cmp
sub
sbb
movsl
push
scas
sbb
fsubrl
lock
push
fs
pop
in
adc
lock
or
mov
cmp
xor
add
out
mov
sub
push
push
dec
out
pop
and
les
add
cmpsb
and
aad
add
ss
jecxz
pop
enter
mov
or
insb
mov
dec
mov
cmpsl
jo,pn
scas
clc
adc
movsl
xlat
mov
orl
loope
stc
outsl
mov
mov
out
pminsw
arpl
cmp
push
mov
cli
cli
popf
repnz
mov
dec
aam
fnsave
imul
stc
mov
xor
mov
test
mov
fsts
pop
xchg
jno
fldt
stos
cli
out
sub
push
push
insl
xor
sbb
mov
test
xchg
and
xchg
aas
out
cld
cmp
xchg
xor
push
jmp
xchg
and
pop
pop
sbb
mov
data16
pop
or
inc
repz
pop
movsb
or
mov
push
sbb
mov
lea
daa
adc
cld
cmp
mov
jecxz
mov
bound
les
xor
ds
enter
mov
movd
pop
cwtl
lds
mov
pop
jnp
push
das
sub
sub
sbb
stos
xchg
pop
sub
push
into
inc
mov
stc
adc
daa
dec
cltd
or
mov
pop
jle
jbe
dec
iret
push
xchg
sbb
jmp
hlt
or
pusha
push
xor
adc
cmp
hlt
popa
sub
or
dec
scas
out
push
mov
push
pop
mov
jecxz
jge
subb
aam
jnp
cmp
fmulp
xchg
in
and
lret
fisubl
fsubrs
rcr
hlt
out
push
sbb
mov
push
push
dec
adc
push
int
lock
aad
sub
cmp
gs
les
mov
sub
out
vpcmpgtd
dec
lret
jge
ja
fwait
inc
or
jle
xchg
dec
sar
mov
sbb
adc
and
lret
ror
lcall
mov
movsb
and
add
outsl
idiv
sub
mov
pop
adc
ds
push
in
pop
pop
mov
dec
sub
push
mov
inc
cld
cmp
out
mov
icebp
in
push
shrb
dec
bound
imul
vcvtss2sd
xor
sub
cmp
bound
jo
incl
cmc
iret
pop
mov
xchg
fildl
inc
mov
pop
push
fsubl
test
inc
decl
xchg
mov
pusha
sbb
and
xchg
test
pusha
imul
ds
inc
pop
or
sub
adc
ja
aas
inc
xor
jl
stc
cmpsl
pop
sbb
dec
icebp
and
xchg
xor
xor
push
test
fsubrs
xor
daa
push
sub
mov
inc
mov
outsl
test
mov
inc
test
imul
mov
scas
adc
ret
jae
movsl
xor
mov
dec
cmp
ficoml
das
and
in
stos
jge
out
sbb
loop
das
dec
pop
mov
mov
push
adc
dec
jno
ror
sub
jnp
mov
or
add
sbb
pop
mov
cmc
data16
sbb
es
xchg
roll
data16
sbb
clc
aaa
lock
repnz
jb
or
and
jmp
in
push
and
mov
pop
push
xchg
dec
sub
mov
mov
add
cmp
sahf
cmc
adc
and
pminsw
xchg
adc
fildll
data16
mov
pop
in
out
pop
lock
xchg
addb
das
sti
push
mov
adcb
or
sub
dec
xor
xor
jg
scas
dec
dec
fimuls
lret
js
test
add
jnp
inc
enter
sub
inc
pop
out
dec
fbld
add
sub
push
cmp
jno
cwtl
jle
sbb
pushf
fmul
scas
xor
mul
or
es
mov
pop
pop
repz
sub
mov
fcompl
out
test
ja
jecxz
lds
aaa
stos
ror
and
push
lret
hlt
rcrb
mov
mov
mov
popa
stos
pop
mov
push
ss
pop
push
mov
filds
adc
je
mov
stos
pop
push
out
xchg
inc
pop
stc
mov
dec
lock
mov
repz
sub
adc
jle
sub
push
sbb
dec
imul
mov
repnz
dec
dec
xor
lods
pop
jg
mov
push
int
fdivrl
std
cmp
jle
dec
aas
repnz
xlat
out
dec
ss
std
add
ds
lret
mov
movsl
dec
jne
ficoms
dec
outsb
in
test
rcll
addr16
and
addr16
fimuls
aad
xchg
inc
xacquire
cmp
jle
lds
sbb
out
call
movsl
sbb
mov
pop
mov
hlt
add
int
inc
sub
popa
jno
jno
movsl
gs
xchg
hlt
pusha
aas
cmp
nop
fiadds
addr16
imul
dec
out
notl
in
push
xorb
mov
lods
or
cli
mov
jmp
rorb
pop
or
push
stc
in
mov
popa
test
mov
imul
mov
sti
adc
inc
xchg
pop
cld
mov
pop
test
aam
sbb
enter
js
fisubs
inc
and
mov
dec
xor
xchg
add
sub
repz
rcrb
rdtsc
push
pushf
stos
in
jb
scas
mov
test
mov
out
jle
cmp
cmp
int
xchg
movsb
mov
jge
xorl
aas
or
imul
jecxz
xchg
xorl
inc
and
repnz
jae
xor
xor
xchg
das
lcall
push
jle
stos
daa
xchg
jo
mov
rorl
or
cwtl
xchg
inc
fsubl
test
movsl
jge
add
mov
pop
cmp
cli
adc
xlat
popf
dec
lcall
or
test
bound
pop
fbld
add
sub
cwtl
push
fimuls
push
clc
ja
adc
add
movl
cmp
scas
jl
inc
xor
and
add
and
jp
pop
lods
xor
nop
aad
leave
jp
addb
pusha
jecxz
out
adc
out
dec
or
pop
and
jg
mov
jae,pt
int3
pop
jle
jno
rol
jge
cmp
ljmp
inc
popf
orl
push
movzwl
mov
inc
cmc
mov
arpl
in
inc
aam
nop
pop
mov
data16
ja
out
mov
stos
sub
js
mov
jmp
xor
add
inc
adc
sbb
test
es
mov
inc
inc
sbb
cli
cld
aas
or
push
ffree
pop
mov
add
inc
roll
mov
pop
imul
xor
mov
jle
fcoms
fdivrs
cmpsl
inc
loope
je
sub
pop
adc
loopne
repnz
loopne
cmp
fsub
int
lahf
dec
cmpl
fidivrl
push
lea
pop
xlat
test
cmp
scas
pop
in
add
shll
sarl
popf
inc
xchg
imul
clc
lret
mov
add
push
pop
pop
adc
rorb
icebp
or
add
movsb
mov
inc
pop
mov
sub
adc
mov
pop
push
pop
mov
cmp
lea
and
mov
andl
and
popf
dec
push
mov
sbb
call
je
xlat
mov
push
les
mov
add
into
add
pandn
xor
or
adc
and
fidivrl
push
mov
mov
jmp
xor
adc
fbld
dec
movsl
mov
imull
cmpsb
nop
aaa
out
out
imul
fs
xchg
pop
jno
lods
add
mov
add
mov
shlb
pop
sub
test
fsubrs
mov
adc
mov
sbb
push
dec
in
jmp
jl
sub
out
and
dec
and
pop
bound
dec
in
mov
jno
sbb
jmp
icebp
lret
mov
adc
xchg
mov
adc
imul
in
add
das
or
aam
popa
leave
in
out
or
push
cmpl
add
rcrb
popa
les
rclb
pop
xchg
negb
xchg
sbb
fiaddl
cmp
cmpsl
dec
push
jno
inc
scas
dec
test
in
icebp
push
sub
jbe
fcmovb
jl
jle
mov
ljmp
outsl
fwait
xor
mov
xchg
sub
addl
mov
repnz
mov
call
pop
add
push
repnz
add
js
and
fadds
inc
popa
scas
xchg
dec
sbb
out
mov
daa
adc
scas
push
sbb
addr16
push
and
fs
in
mov
or
lock
adc
rol
call
lods
xchg
xchg
leave
inc
pop
lahf
lods
or
mov
jge
mov
jmp
dec
stos
push
je
ret
jb
lret
bound
mov
icebp
cltd
mov
sbb
xchg
mov
push
push
cld
and
cmp
sti
cmp
in
adc
jecxz
pop
push
and
call
pop
jge
shll
jecxz
pop
xor
fdivr
adc
fdivl
pop
xlat
and
inc
sbb
push
adc
sbb
scas
mov
imul
push
shlb
ret
jl
jg
or
pop
pushf
sbb
into
cmp
faddl
cmp
xchg
pop
shl
dec
cli
adcl
pop
enter
jae
lret
jno
addb
jno
push
mov
add
pusha
xchg
nop
pop
lds
mov
lods
mov
popf
repz
bound
xchg
fbld
push
test
pop
jbe
dec
imul
xchg
imul
mov
popf
fstl
inc
gs
push
xchg
loop
xor
fidivs
cltd
cmc
inc
jmp
fstpt
notb
in
mov
lods
inc
inc
mov
pop
and
int
cli
adc
push
aas
ds
fs
divl
gs
xor
jns
fistps
lea
inc
add
cld
mov
jnp
inc
fucomip
and
push
inc
xchg
repz
add
xchg
dec
mov
push
sbb
and
jb
cmpl
add
adc
sub
mov
or
pop
loopne
out
in
inc
mov
push
std
pop
cmpb
cwtl
mov
push
pop
pop
mov
repnz
jge
and
sahf
iret
mov
pop
mov
mov
icebp
xchg
sbb
inc
pusha
shll
cmp
add
in
mov
std
inc
sbb
jne
push
es
lcall
int3
call
cmp
ja
je
into
pop
mov
add
jp
hlt
add
mov
repz
jp
cmp
imul
mov
call
mov
pop
sub
out
out
pusha
mov
out
ja
sbb
sbb
addl
mov
lahf
push
icebp
xlat
mov
sbb
mov
lcall
loop
fs
add
cld
cmp
push
sahf
test
shrl
mov
aaa
cmp
adc
xchg
inc
inc
push
cmpsl
mov
and
ds
pusha
addr16
fs
ja
fs
icebp
insb
data16
lcall
cwtl
push
adc
std
jg
repz
or
inc
jno
movsl
xchg
daa
dec
stos
imul
bound
sbb
shrl
sub
xor
xchg
clc
ret
mov
dec
and
sahf
out
xchg
mov
inc
xchg
pop
cmp
dec
insl
aad
insl
sahf
dec
or
popfw
inc
les
mov
push
jnp
imull
xchg
rclb
cmp
cmp
mov
cmp
sti
xor
mul
hlt
dec
gs
jmp
in
loope
repnz
sub
or
push
aad
fdivs
cltd
sbb
or
inc
sub
hlt
cmp
pop
or
shrb
push
cmp
jge
adc
repz
inc
and
sti
ffreep
dec
shlb
sahf
jle
test
mov
sbb
ret
inc
lret
insl
inc
fstps
shlb
jne
cmp
dec
adc
mov
xchg
fstl
ret
push
cmp
xor
sub
jno
gs
push
jno
mov
repz
mov
dec
sub
mov
xchg
push
jnp
mov
mov
mov
xlat
cli
mov
in
mov
or
xchg
mov
imul
ljmp
stos
scas
push
scas
cmp
pop
pusha
cmp
pop
nop
adc
mov
ds
sbb
and
loopne
in
push
repnz
dec
mov
add
jo
fistl
add
scas
and
inc
stc
lods
adc
movsl
lcall
iret
push
cmp
push
sbb
int
mov
ret
mov
stc
add
inc
adc
cmpsl
fnstenv
dec
cmc
push
loopne
add
cmp
push
fldcw
int3
test
inc
out
mov
cmc
shrl
shr
adc
xor
lods
pusha
stos
and
inc
data16
ss
loope
push
mov
push
aad
inc
xor
adc
mov
adc
lahf
sub
inc
loop
pop
sbb
test
incl
test
and
mov
std
adc
or
jmp
les
sub
icebp
lds
jb
pop
sbb
mov
stos
jl
pop
fimull
scas
aaa
xor
inc
in
and
je
mov
xor
lds
ds
out
dec
sub
xchg
icebp
push
movsb
out
popf
and
lea
and
cwtl
in
out
mov
out
jl
mov
fiadds
mov
test
mov
sbb
xor
jge
jmp
repnz
int3
incl
mov
and
lock
sbb
jo
packsswb
std
xchg
mulb
add
adc
std
ljmp
mov
imul
insl
stos
cmpb
adc
int3
mov
jp
adc
add
je
stos
push
xchg
adc
and
out
cmc
add
pop
and
push
cmp
add
js
ficomps
outsb
adc
test
std
fnsave
adc
jne
cltd
jp
push
push
adc
test
addr16
and
adc
leave
push
push
icebp
inc
rorb
dec
adc
xor
cmp
dec
cmpsl
leave
imul
fsubrs
and
dec
pop
pop
pop
push
out
push
adc
clc
mov
addb
lods
out
add
sub
insl
dec
popf
pop
sbb
mov
lds
bound
mov
jle
pop
stos
je
jne
jne
lcall
sbb
push
jl
push
mov
mov
push
aas
cmpb
mov
cmp
sbbl
test
mov
or
push
inc
push
xor
ret
mov
int3
cmp
sarl
pop
sbb
movsb
test
push
test
and
lret
lahf
loopne
and
pusha
inc
or
xor
push
fadd
aas
sub
add
mov
and
push
push
mov
adc
clc
push
pop
jge
adc
add
pop
adc
inc
sbb
xchg
in
adc
and
imul
push
dec
shll
cmpsl
xor
mov
insl
add
lock
pop
in
orb
ret
stc
stos
dec
dec
pminub
pop
pusha
sub
and
sub
scas
xchg
pushf
mov
mov
mov
rorb
xchg
dec
sub
das
outsb
fiaddl
pop
sbb
or
mov
adc
ret
insb
sbb
jb
or
test
int3
mov
sbb
mov
sar
shrb
lahf
fstl
ret
fbstp
sbb
pusha
jnp
sub
sub
clc
cwtl
or
inc
jl
cmpsl
je
inc
lcall
loopne
ret
les
fwait
iret
and
sahf
push
pop
mov
fldl
jo
aad
adc
xor
and
push
adc
dec
cmp
mov
frstor
fstps
sub
adc
int
mov
int
push
mov
push
addl
das
lock
sbb
mov
sub
sbb
mov
aam
imul
orl
pop
xor
ds
ror
loopne
popf
inc
fsubs
mov
jno
jbe
mov
mov
and
cltd
fmuls
scas
shrb
es
in
movsb
push
dec
push
inc
test
cmp
jnp
frstor
test
mov
jecxz
pushf
nop
xor
ljmp
orb
or
sub
aam
or
adc
lret
xchg
scas
lcall
iret
enter
je
aad
pop
pop
mov
sub
lea
outsb
mov
xchg
stos
cmp
mov
xchg
sbb
scas
cld
scas
push
mov
pusha
mov
mov
pop
pop
lods
pop
bound
jmp
dec
nop
mov
pushl
xchg
lds
fiadds
fisubs
nop
sbb
stos
out
sbb
pop
xorl
dec
rorb
cli
dec
xor
out
js
clc
iret
push
int
rclb
adcl
mov
jge
and
xor
lret
xchg
iret
mov
rorb
cmp
or
js
jo
inc
push
sub
enter
jae
push
add
pop
sarl
xchg
enter
cwtl
pushl
fcmovne
scas
cltd
cs
cltd
xchg
leave
movsl
adc
mov
mov
movsb
or
lods
pop
pop
fdivs
lock
mov
or
fcomip
sarl
cmpsl
rclb
inc
enter
gs
push
fmuls
outsb
add
jecxz
outsl
loop
mov
dec
icebp
push
pop
leave
pusha
jg
mov
adc
enter
jp
xchg
fnsave
call
lahf
sub
js
xchg
shll
mov
push
jg
adc
sub
lcall
out
mov
cltd
xor
sbb
and
dec
xchg
jne
jg
mov
js
sbb
in
sub
shlb
xchg
cmp
mov
mov
arpl
sub
aam
mov
xlat
ljmp
mov
je
push
imul
mov
std
mov
cmp
punpckhdq
adc
jo
push
or
je
xor
lret
adc
cmc
out
clc
add
int
ljmp
in
xor
sub
cli
sbb
loopne
repnz
push
sub
mov
loope
bound
test
in
jecxz
push
loope
les
adc
xlat
insb
and
and
out
jns
sti
minps
jg
stos
pop
scas
jle
lcall
imulb
fsubrl
jg
enter
sub
mov
fimull
insl
inc
dec
jo
sub
pop
fldcw
lods
or
or
mov
xlat
jle
fimuls
add
xchg
jns
xor
adc
testl
daa
fwait
loop
xor
xor
pop
pop
and
rcr
mov
insb
mov
cld
insl
out
cmpsb
sub
push
dec
jl
js
xchg
loop
das
xor
dec
jne
jmp
inc
pop
pop
mov
lret
jae
mov
daa
mov
inc
jb
in
popa
mov
mov
mov
mov
push
enter
push
sbb
sbb
sub
outsl
inc
add
jnp
fldcw
dec
jg
xlat
mov
call
and
out
imul
add
insb
lret
outsl
inc
and
stos
inc
mov
imul
sbb
into
and
add
mov
jnp
lea
push
inc
std
fsub
lds
inc
insb
dec
jo
mov
ss
sub
pop
dec
lea
andl
test
in
xchg
mov
lcall
jl
iret
mov
xor
sub
push
insl
iret
push
mov
dec
pusha
sbb
movsb
repz
and
mov
mov
aas
rcr
add
lea
clc
push
cmp
cmp
in
or
push
xchg
test
dec
jae
je
lahf
fidivrs
mov
sub
push
jne
xor
dec
in
xor
cmp
dec
jnp
aaa
negb
hlt
add
mov
push
pop
aaa
outsb
xor
jae
pop
sti
imul
pushf
jae
and
inc
ret
out
jl
push
push
pushf
inc
push
divl
lahf
jle
jge
mov
shl
mov
and
das
aas
or
in
fstpl
mov
sub
sbb
addr16
enter
fadd
ljmp
cwtl
enter
sar
cli
faddl
cmc
leave
xor
ja
fucomp
cmp
and
cmp
push
pop
xlat
repnz
add
pushf
and
sbbl
sbb
loop
mov
sub
insb
jl
mov
mov
add
push
shlb
sub
mov
leave
fisubs
sub
sub
mov
stos
iret
leave
push
fiadds
push
dec
inc
ds
movsl
push
dec
in
add
call
repnz
jecxz
cld
and
or
repz
es
jge
pop
and
push
jo
jbe
test
add
cmpsl
inc
enter
stos
dec
ds
mov
pop
sub
push
gs
inc
jecxz
push
add
repnz
xor
sti
aaa
mov
insb
xchg
xor
dec
stos
aaa
inc
mov
negb
out
jne
push
std
outsl
pop
inc
mov
dec
adcb
ficoms
push
lahf
scas
insb
insl
fdivp
sbb
cmp
ret
jnp
sbb
cs
int
mov
dec
je
sub
or
nop
cld
cmpsb
add
add
push
jle
cmp
jge
adc
xchg
int
mov
shl
adc
cmpsb
dec
ret
sbb
loop
es
lds
pusha
push
mov
cmp
inc
mov
in
inc
int
push
scas
subb
cltd
pop
rol
in
jbe
mov
iret
adc
jne
xchg
fs
xor
adc
pusha
outsb
sti
cmp
inc
aaa
mov
notb
out
popa
add
sub
dec
repnz
sub
mov
fcmovnb
cmp
fidivrl
push
fsubl
mov
idivl
mov
add
sbb
mov
int
cmp
fiadds
pop
push
shll
xchg
call
dec
lret
push
mov
shll
mov
jge
fists
adc
and
push
test
and
es
jecxz
adc
add
lret
pause
push
mov
mov
outsl
testb
sbb
and
fisubrs
bound
loope
test
dec
shll
sub
add
inc
dec
or
xchg
sahf
xor
jne
sti
fwait
lcall
cld
ror
sar
xor
dec
jb
and
pop
icebp
mov
mov
enter
mov
mov
add
out
rcrb
add
out
outsb
loop
push
cmpsl
and
iret
incb
add
sub
inc
xchg
sub
cli
jge
testb
adc
pusha
push
jle
adc
add
add
cld
inc
xchg
push
mulb
mov
cmp
jbe
insl
sbb
loope
dec
mov
dec
test
fs
cmp
mov
jmp
inc
dec
push
pop
fdivrp
hlt
push
rcl
push
outsb
fldenv
pop
push
push
mov
loope
and
ds
dec
addb
mov
add
xchg
mov
sahf
stos
int
jnp
or
ffree
divl
sbb
sarb
mov
jecxz,pn
negb
cltd
and
in
mov
adc
adc
sub
push
cld
idivb
gs
lcall
mov
dec
sbb
loope
lods
xchg
and
pop
es
in
jg
xchg
xchg
mov
repnz
mov
mov
pop
mov
test
push
sahf
bound
test
pop
mov
ficompl
imul
jecxz
adc
jle
scas
mov
fsubrs
add
adc
call
imul
loope
mov
mov
ljmp
ret
cmpb
addb
and
xchg
xchg
add
jge
jae
sbb
lock
mov
push
xchg
scas
cmp
fadd
aaa
ja
das
dec
xor
fadds
xchg
sbb
push
cli
adc
stc
add
test
sub
in
add
jmp
dec
fistps
scas
sub
fsts
popa
pushf
imul
sahf
repnz
imul
inc
mov
pop
adc
loop
stos
cld
mov
adc
add
inc
push
enter
lea
es
call
rcll
sbb
stos
insl
imul
xchg
mov
mov
das
push
adcb
mov
mov
adc
dec
imul
xchg
test
ret
test
sub
sti
lahf
scas
loopne
mov
outsl
mov
mov
sbb
and
fdivl
fdivs
sbb
ret
xor
jecxz
and
sub
mov
mov
sahf
cmp
mov
int3
aam
xchg
and
xlat
mov
mov
jne
dec
ret
xlat
int
cmp
mov
mov
mov
xor
mov
push
xchg
and
lds
cmc
inc
cli
push
dec
mov
je
xor
or
jmp
aas
xlat
stc
sar
add
sub
cmpsl
push
cltd
or
mov
push
jbe
lahf
jnp
rcrl
or
ret
jnp
shr
inc
test
dec
mov
outsb
decb
xchg
testl
outsb
in
mov
cld
sbb
sub
or
ja
rcrb
sbb
into
dec
jg
sbb
shrb
and
push
and
lea
ret
aad
test
nop
cs
dec
enter
rcl
sub
inc
test
cwtl
pop
jb
add
mov
shll
insb
push
movsl
cmpb
es
xor
test
xchg
or
xchg
in
data16
mov
fiaddl
ss
and
cmpsb
insb
or
push
out
je
mov
jmp
negl
push
mov
or
mov
shll
mov
dec
mov
xor
jp
les
mov
push
adc
pop
sbb
pop
cmp
popf
stos
ljmp
inc
mov
call
sub
push
dec
and
popf
adc
out
or
adc
fldl2t
mov
or
insb
xor
in
popa
enter
sub
pop
or
xor
lock
sub
xchg
rcrb
fildl
adc
pop
dec
jmp
lahf
pop
enter
pop
adc
and
sbbb
mov
cmp
fstpl
pop
mov
jl
sub
jb
adc
xorl
push
inc
sub
pop
add
mov
test
notb
mov
mov
sahf
daa
nop
adc
ss
add
imul
mov
add
loope
mov
push
testl
mov
jne
bound
enter
not
test
adc
mov
ffree
arpl
pop
dec
ss
xor
fs
les
mov
js
or
jmp
repnz
and
not
andl
popl
daa
dec
jecxz
out
or
adc
adc
leave
call
cmpsb
mov
les
sub
cwtl
xchg
aad
stc
xchg
repnz
arpl
or
push
pop
mov
mov
push
pop
lds
add
ss
sbb
or
xor
loope
adc
adc
jno
pop
jmp
jae
icebp
sbb
jae
insb
andl
jne
stc
push
sbb
sbb
pop
pop
or
cmp
addr16
or
fsubrs
jb
data16
push
sbb
lcall
stos
pop
mov
xor
mov
push
adc
cmc
pop
cld
into
and
pop
sub
iret
cli
push
inc
and
out
jle
in
imul
jg
add
addl
push
sub
into
fildll
ds
pop
add
je
sub
test
iret
push
pop
and
adc
out
push
cmp
pushf
outsl
sub
daa
dec
loop
fdivr
adc
loope
cld
mov
mov
or
sbb
adc
in
addr16
inc
dec
divl
and
mov
xor
jg
je
out
aaa
push
xchg
sbb
jg
loope
mov
adc
or
iret
xlat
mov
sbb
icebp
rcrl
mov
xchg
jle
daa
and
or
int
mov
cmpsl
lods
call
mov
xchg
push
mov
inc
cli
sbbl
and
lret
push
add
das
xor
xlat
push
or
std
bound
push
xor
cmp
inc
in
enter
outsl
fisubs
shlb
mov
leave
fdivrs
imul
sub
ja
loope
dec
mov
lods
repz
jbe
add
xchg
cmpsb
mov
loope
sub
adc
push
mov
movsb
mov
and
sub
sbb
mov
push
in
dec
and
or
mov
xchg
jle
sahf
xchg
inc
andb
movsl
pop
cmpsb
imul
iret
cmp
inc
loope
rcrb
mov
pop
push
dec
mov
ret
jbe
imul
in
sahf
icebp
or
jne
scas
push
pop
imul
rcrl
add
mov
cmp
test
fmul
loop
cmp
ss
xor
idivb
xchg
jecxz
cld
cld
fsubl
popa
cld
jl
adc
jge
je
sub
rep
push
xor
dec
mov
jnp
add
add
in
mov
stos
ret
stos
sbb
sbb
sbb
and
mov
push
jb
cltd
insb
add
xlat
pop
scas
cli
das
jo
in
aam
xlat
loop
jp
ss
div
movsb
push
mov
cmp
add
sarl
mov
jle
nop
mov
pop
hlt
fdivs
dec
sbb
outsb
pop
mov
scas
gs
xchg
std
ss
fimull
cmpsb
addr16
pop
ret
jns
xchg
mov
jg
or
pop
pop
xchg
jg
jo
loop
xor
lock
pop
cltd
cmc
xor
icebp
add
iret
mov
mov
dec
inc
popf
je
rorb
aaa
pop
jns
andb
dec
push
mov
and
mov
jo
ss
std
mov
insb
fsubr
pop
cmp
andb
mov
cmp
and
aad
arpl
test
sub
lods
clc
dec
and
xchg
sbb
lret
pop
sti
outsl
hlt
jge
jnp
xchg
push
in
jae
scas
mov
dec
lret
adc
test
outsb
mov
les
inc
push
cli
mov
test
mov
push
sub
scas
sbb
dec
and
mov
int
ret
jge
inc
sbb
or
fsubrs
and
dec
cmpsl
or
pop
or
rorl
mov
ds
cmpsl
ret
bound
pop
xchg
xor
add
cld
scas
mov
inc
lcall
jno
push
test
or
push
add
pop
lea
ja
ss
out
rcr
dec
test
or
clc
jnp
pop
fcoms
cmp
add
test
imul
mov
push
and
xlat
adc
pop
mov
stc
inc
jne
pushf
pushf
ret
xor
cwtl
mov
ss
outsb
pushf
jns
repz
adc
inc
sub
rorl
sub
adc
inc
xor
out
jp
jmp
pop
mov
inc
outsl
mov
sahf
xchg
movsl
add
xchg
inc
and
fstpl
int3
mov
pop
insl
mov
fiaddl
nop
sbb
sub
adc
fucom
xor
mov
dec
xchg
sub
push
rcrb
outsl
ror
cld
movsb
rcl
or
aas
and
pop
jle
sub
pop
xor
cmp
mov
imull
aam
icebp
inc
inc
mov
test
insb
jb
adc
push
xchg
jl
imul
jp
mov
mov
add
es
xlat
movsl
int3
lret
cmp
or
jne
lock
jmp
sub
dec
inc
testb
icebp
sbb
adcl
enter
out
call
iret
pop
xchg
cld
push
or
add
lcall
inc
dec
cmp
rolb
xchg
adc
push
sbb
adc
xchg
fstp
mov
add
repz
dec
pushf
and
add
movsb
lret
incl
push
xor
add
cltd
mov
mov
aad
jns
in
test
xor
mov
cmp
hlt
jecxz
in
sub
movsb
vmovlps
fidivrs
cmp
jecxz
in
fldt
mov
decl
jo
jae
scas
add
or
jecxz
add
jmp
rcll
in
jle
jge
pop
shrw
fcoms
fwait
pop
or
imul
dec
sbb
enter
jmp
inc
pusha
fwait
data16
jmp
mov
jp
lret
jle
jae
jno
shll
enter
loope
xorl
mov
fldt
adc
lods
lcall
int3
push
adc
mov
dec
mov
out
lock
push
or
idivl
xor
iret
orb
lcall
xchg
and
out
sarb
inc
pop
int3
repnz
test
insl
mov
mov
imul
jg
inc
inc
movsl
nop
xor
stos
sbb
iret
cmpsb
rorb
lahf
xlat
and
adc
jo
lods
mov
cwtl
mov
xor
gs
xchg
xchg
jb,pt
inc
jmp
clc
outsb
xchg
or
xchg
cmp
fcoml
and
mov
clc
mov
adc
cmpsb
insb
outsl
ret
dec
inc
aam
loope
jmp
fdivr
loop
jae
or
lret
loop
jnp
inc
xchg
adc
loope
inc
jg
or
test
iret
enter
push
mov
xchg
jg
mov
sbb
lret
dec
mov
xchg
enter
adc
cmp
movsb
rcrb
fidivl
sub
loop
pusha
jge
es
xchg
dec
les
iret
xchg
cmp
dec
iret
and
lahf
pop
je
pusha
loopne
sub
outsb
faddl
mov
mov
movsb
sub
shl
stc
sub
ljmp
dec
stos
icebp
out
xor
pusha
out
push
xor
dec
pop
cmc
inc
icebp
xor
aas
dec
sbb
pusha
xor
inc
incl
push
adc
js
cmp
iret
mov
daa
inc
push
loop
or
mov
jmp
mov
ficoml
and
cmp
les
mov
adc
push
mov
xor
mov
pop
out
dec
out
push
jns
and
in
mov
mov
pop
push
scas
movsb
push
fst
insb
ret
test
adc
pop
cmpsb
aaa
sbb
orb
and
lcall
js
or
aad
push
cmpsl
xor
mov
test
dec
fmul
mov
mov
fcomi
sub
push
inc
shll
clc
and
xlat
sub
test
jl
fsubl
lods
xchg
adc
enter
push
lcall
into
sub
sub
into
test
adc
loopne
aaa
inc
scas
xchg
jmp
es
cmp
mov
pop
add
popf
jle
outsb
inc
mov
push
paddq
push
scas
fidivs
movsl
add
sbb
aaa
shr
movsb
clc
xchg
sahf
cld
jb
add
ljmp
dec
mov
inc
or
mov
mov
scas
mov
insl
pop
out
imul
and
dec
arpl
cmp
loop
data16
popf
and
ds
mov
fadds
push
fldl
mov
push
stos
pop
push
sbb
test
mov
leave
jl
xchg
stos
out
xchg
or
add
sub
inc
mov
pop
sbb
repz
shl
jge
lds
xchg
xchg
aaa
outsb
and
rorb
gs
mov
add
call
filds
sub
fsincos
fadds
cmp
jp
test
fcmovb
mov
leave
xlat
xchg
xchg
push
cmp
jge
xor
cmp
sarb
mov
pop
jecxz
adc
lret
dec
mov
jb
lahf
jmp
cmp
fbstp
out
xor
rcr
mov
aas
lret
cmp
or
xchg
adc
fdivrs
mov
inc
add
out
inc
adc
or
mov
int3
pop
shl
cli
enter
out
pushf
push
adc
rcll
pusha
mov
cmp
mov
out
out
cmpsl
mov
or
outsb
sub
lahf
mov
jo
cmp
dec
aam
inc
call
fcmove
pop
test
testl
stos
adc
jnp
hlt
cld
cli
or
dec
push
cld
mov
rcrb
cmp
xor
sbb
adc
push
cmpsb
mov
xor
test
andl
popf
test
arpl
rol
inc
sbb
push
jae
sbb
ror
movsb
sub
mov
call
out
ret
out
push
insb
rcll
fistl
test
movsb
xorb
imul
in
jmp
lods
mov
and
negl
or
dec
fldenv
xor
push
push
and
push
push
mov
mov
test
sbb
sub
jmp
xor
and
cmp
push
test
int3
call
pop
dec
repz
push
sti
jge
xchg
pop
or
dec
mov
dec
push
inc
add
lea
movsl
inc
insb
das
loopne
lret
dec
pushf
adc
pop
push
dec
mov
pop
and
faddl
push
in
and
add
adc
adc
movsl
sbb
inc
sub
inc
cmpsb
jp
mov
das
cs
in
and
sti
mov
xlat
xchg
mov
dec
cld
mov
and
fistpll
pop
loope
mov
aad
mov
filds
shrl
mov
sti
push
xchg
scas
sub
cmc
inc
in
and
xchg
ret
aam
fdivp
jae
outsb
dec
test
jno
rorl
push
jnp
aad
mov
push
adcl
ja
jmp
jnp
lods
and
imul
add
sbb
popf
dec
adc
bound
lods
pop
fbstp
fiadds
inc
dec
or
and
xor
sbb
add
dec
cld
mov
sbb
jg
inc
fwait
cmp
cmp
push
cmp
add
repnz
pop
jmp
xor
jns
out
push
dec
xchg
mov
fcomps
dec
stos
mov
test
pop
inc
lds
cmp
cli
mov
in
add
adcl
pusha
xchg
int3
jae
frstor
mov
cmpsb
pop
mov
data16
mov
push
lds
loope
sbb
sbb
cmpsl
stc
stos
mov
scas
inc
cmpsl
cmp
mov
pop
cltd
pop
ds
nop
mov
sub
jg
shrb
mov
push
fstpt
dec
and
out
das
stos
iret
fisttpl
test
cmp
xchg
dec
jg
ds
lcall
jg
lods
int
inc
rorl
pop
or
mov
sbb
add
clc
mov
call
fs
xchg
and
push
push
les
mov
fdivrs
inc
popa
sbb
out
mov
aam
jne
add
adc
sahf
rolb
and
pushf
xlat
insl
mov
xchg
jle
push
adc
std
push
push
repnz
pop
scas
repnz
inc
test
mov
dec
inc
shll
stos
mov
test
xor
dec
stos
jne
test
pop
and
ret
mov
pushf
mov
mov
dec
adc
mov
inc
repz
mov
std
test
pop
xor
mov
js
jo
xor
pop
jbe
dec
xchg
inc
cmp
out
aad
stc
cmp
mov
cmp
testl
stc
sti
data16
cmc
cld
mov
xor
fildll
or
bswap
fidivrl
push
hlt
stc
jae
sub
pusha
fadd
push
out
jo
pop
xor
mov
mov
ret
mov
sub
pop
dec
leave
sbb
ss
fcmovnu
popl
imul
cmc
mov
shlb
xor
sub
push
inc
loope
cmp
sub
pop
insb
in
mov
sbb
dec
mov
fmuls
stc
xor
in
cmp
lds
dec
in
shl
jl
loop
cmp
or
enter
mov
popa
ss
mov
xorl
lods
sahf
lret
add
add
add
fsubs
jecxz
and
lds
dec
dec
inc
xchg
bound
mov
xchg
in
push
mov
push
imulb
xor
pop
rcll
mov
insl
dec
xchg
lahf
add
lock
repz
rorl
pop
subl
rcrl
jl
xchg
sub
lods
sub
loop
add
jecxz
sti
pop
sbb
cmp
popa
jge
dec
dec
imul
and
or
add
mov
add
lret
and
insb
sub
in
ret
sbb
out
std
aas
nop
mov
and
sbb
jle
iret
dec
push
lahf
jbe
pop
fimuls
sarb
fdivl
and
push
sti
dec
out
xlat
out
jmp
push
cli
ljmp
insb
dec
negl
stc
lea
inc
mov
jbe
mov
push
adc
int3
jecxz
xchg
ljmp
scas
ljmp
sub
lods
cltd
or
es
xor
fisubrl
jo
push
hlt
cmp
nop
adc
jl
loop
push
mov
lock
inc
cmpsb
push
sub
loopne
arpl
repnz
clc
push
int3
ret
out
xor
pop
pop
sub
mov
cmpsb
pop
sub
or
and
fdivrs
in
and
leave
sub
mov
and
pusha
mov
or
mov
stos
fiadds
pop
push
push
pop
xor
repnz
add
mov
mov
mov
xchg
cmp
cmp
pop
add
pop
je
push
xchg
loope
nop
repz
clc
sub
pop
lods
cmp
imul
dec
je
clc
das
xchg
in
clc
stos
mov
jns
push
inc
adc
stos
int
push
pop
ficoms
xchg
fcoml
aas
inc
ret
icebp
inc
xor
cmpsb
in
movl
aad
js
sub
imul
fbstp
cmp
lods
sbb
xor
bound
jmp
inc
push
pop
cli
scas
mov
int
into
gs
jno
int
adc
aad
mov
jo
jle
adc
cmc
jle
mov
shlb
loop
add
rcll
mov
in
test
rol
sub
call
jle
sbb
sbb
ss
lcall
dec
dec
dec
scas
pop
jne
pop
add
push
enter
jno
fsubrl
inc
lcall
sub
push
out
jmp
mov
and
inc
test
and
jno
jmp
ret
xor
int
xchg
cmp
cmp
rclb
inc
and
pop
pushf
inc
repnz
mov
pop
dec
sub
loopne
xchg
scas
jl
push
sbb
outsb
pop
inc
adc
pop
pop
sub
loope
mov
or
mov
movsl
aad
pop
fucomip
std
jne
pop
es
hlt
mov
cmp
lods
xchg
inc
add
clc
out
lahf
push
xchg
cmp
adc
sbb
xor
push
pop
shll
rcrb
mov
dec
mov
jnp
push
bound
leave
fld
aas
mov
mov
cwtl
cld
sbb
addr16
push
sbb
xor
sti
sub
bound
adc
enter
repnz
test
xchg
int3
out
orb
cltd
movsl
and
mov
xchg
mov
dec
xlat
imul
xor
test
mov
jne
cmp
or
int
dec
out
out
pop
mov
jle
out
enter
sbb
fbld
lds
in
sahf
je
add
pop
add
push
sbb
add
lock
ds
mov
cld
enter
lret
inc
add
push
stos
jl
and
jmp
mov
sbb
or
int3
pop
jge
mov
add
adc
mov
adcl
jle
or
out
add
idivl
lea
out
dec
xchg
pop
iret
outsb
sarl
push
push
xchg
out
stos
es
pop
ret
mov
lret
cmp
incb
lahf
jnp
movsl
int3
cmpsl
hlt
inc
popa
mov
mov
pop
jl
mov
insb
movsl
imul
cmpsb
mov
and
imul
cwtl
repnz
sub
dec
std
xor
mov
insb
mov
cli
inc
popf
mov
add
or
pop
xchg
xabort
in
push
in
xor
loopne
ret
insb
xchg
push
add
push
enter
shrb
jge
es
pop
jne
mov
nop
popa
xchg
stc
lahf
xor
add
add
cmp
xor
outsl
add
add
inc
mov
lods
xor
cmp
or
jnp
pop
inc
int3
fsub
bound
mov
mov
mov
xor
movsb
into
std
add
out
shlb
adc
mov
test
dec
cmp
icebp
testl
sbb
adcl
pop
dec
loop
push
push
push
dec
cmp
arpl
lods
mov
jl
adc
mov
mov
pushf
add
mov
nop
ret
add
jmp
mov
test
fcmove
nop
adcb
dec
in
xlat
sbb
dec
add
sub
xlat
xor
xchg
jp
pop
mov
jecxz
xorb
pop
fcoml
push
movsl
js
aas
test
lods
pop
sub
cmpsb
jecxz
lret
scas
push
lock
outsb
or
add
xchg
or
into
xchg
xor
jecxz
inc
test
pop
fcmovbe
int
cmp
mov
xor
push
mov
arpl
aad
add
pop
fadds
test
ret
xchg
xor
scas
xorb
jns
rcr
xor
mov
cmp
ret
mov
cmp
dec
fs
cs
and
xor
or
test
aam
add
adc
xor
andb
lods
jl
je
jno
es
dec
int3
mov
cmc
xchg
cs
dec
outsl
and
loopne
in
or
mov
in
std
fisubs
add
push
push
push
push
jl
sub
out
mov
stos
stos
fsubs
push
test
aam
imul
imulb
sbb
adc
add
es
ja
and
inc
mov
int3
xor
mov
dec
jnp
mov
and
pop
fldt
mov
jb
nop
jne
mov
xor
ret
jb
push
add
or
add
aaa
addr16
enter
popa
loopne
sbb
add
push
add
or
fists
adc
xchg
lret
cmp
test
dec
cmp
je
imul
or
push
lahf
mov
leave
scas
mov
push
jl
jnp
scas
movsb
lock
rorb
testb
andb
jp
inc
loop
shrb
xchg
shll
jbe
cmp
lahf
bound
jge
pop
pop
mov
or
mov
xor
cmpsb
pusha
pop
out
negl
xchg
adc
xor
loope
fidivrl
inc
dec
popa
inc
xlat
cmpsb
inc
mov
orl
outsl
rcrb
push
gs
in
std
dec
lret
push
mov
push
xchg
cmp
dec
in
sub
movsl
mov
movsl
adc
mov
loope
pop
xchg
xchg
iret
xchg
mov
push
cmp
or
out
xchg
fucom
jae
mov
push
cmp
popa
mov
in
mul
icebp
shlb
and
data16
mov
sbbl
xchg
xor
pop
fwait
push
lcall
icebp
daa
adc
shlb
je
out
push
mov
cwtl
call
leave
aas
stc
jge
jge
xcrypt-ctr
cmpsl
pop
xchg
mov
shl
adc
cld
jbe
xor
imul
in
les
dec
xchg
push
lods
push
or
inc
add
adc
push
adc
lock
dec
inc
test
dec
arpl
shlb
add
popf
stos
in
fsubrl
bound
arpl
and
stos
test
test
cltd
xorl
outsl
xchg
pop
out
and
sbbl
add
jno
cmp
mov
clc
out
lods
repz
xlat
push
xlat
jo
enter
cwtl
jnp
fidivrl
loopne
cmp
sub
loopne
adc
nop
cmpsl
and
mov
push
inc
out
mov
add
ja
jge
bound
add
cmp
pop
and
jle
push
lds
pop
mov
dec
mov
test
xor
cmpsb
dec
push
fistps
mov
arpl
mov
jp
inc
jecxz
mov
stos
and
cs
pop
mov
mov
addb
iret
int
sbb
dec
aas
push
jle
adc
rcrl
mov
pop
pop
pop
ret
dec
lcall
adc
bound
pop
fscale
xor
xchg
lock
xor
dec
shlb
mov
ret
cmp
push
xchg
push
xrelease
in
dec
mov
mov
push
add
xchg
push
sbb
pushl
mov
icebp
push
pop
add
mov
addr16
cmp
sub
xor
xchg
jecxz
fidivs
jecxz
pop
fsin
dec
mov
repnz
inc
pop
add
push
cmp
pop
mov
test
enter
int3
jbe
jg
dec
out
imul
aaa
cli
mov
incb
movsb
nop
ret
mov
not
xchg
dec
insb
test
dec
inc
pusha
inc
and
std
pop
xchg
outsb
out
cmp
dec
mov
test
xchg
jne
push
dec
lcall
cld
add
add
int
fidivl
and
pop
mov
xchg
and
cmp
mov
push
adc
test
mov
push
pop
arpl
out
loop
out
fwait
dec
fists
cmp
iret
sub
call
mov
xchg
fsubl
andl
jne
xchg
adc
insb
xchg
cs
mov
adc
mov
fsubr
test
mov
mov
push
fmull
jmp
mov
mov
jmp
adc
add
adc
mov
fucomi
cmpsb
out
and
pop
enter
cmp
inc
xchg
das
add
dec
fsts
pop
out
dec
sub
lds
jmp
setns
jo
fsubrp
call
sahf
fiaddl
mov
orl
pop
addr16
sbb
jb
dec
inc
insb
or
loop
test
popa
cmp
and
push
inc
push
adc
roll
push
xor
push
fdivs
cmp
das
fistpll
lcall
mov
sub
jmp
sub
fnstenv
mov
lcall
xchg
ss
arpl
mov
xchg
mov
clc
hlt
lea
std
xor
shlb
jo
mov
push
add
push
jg
add
push
and
rcrl
inc
fistps
cwtl
push
xlat
adc
mov
ljmp
pop
int3
ret
jg
fcmovnb
testl
scas
mov
stos
je
mov
hlt
jmp
shrb
mov
cmovs
or
xchg
fimull
and
ljmp
js
pushf
shrl
loopne
pop
sbb
mov
or
cmp
or
out
xchg
sti
fwait
arpl
mov
pop
mov
cmpsl
lods
push
mov
dec
ficoml
push
out
shll
scas
adc
jmp
orl
cmp
mov
test
cmpsl
inc
jns
mov
shl
inc
lret
push
xchg
aam
imul
push
lahf
sti
imul
xchg
pop
adc
out
cli
les
jg
push
fdivrs
jnp
call
mov
sub
push
sub
icebp
cwtl
and
mov
stos
dec
jne
mov
inc
xor
xor
outsl
pop
mov
jb
fisubrl
rolb
pop
mov
ror
call
jmp
cli
pop
xchg
xchg
jge
and
fnstcw
sti
and
dec
push
jb
add
push
and
cmp
jns
pop
mov
push
jmp
ficomps
adc
mov
mov
xor
popf
data16
pop
fucomi
fsubl
dec
pop
cmp
push
mov
xchg
ja
pop
dec
lret
rolb
pop
add
out
push
aad
ljmp
xchg
mov
jecxz
pusha
jbe
mov
fxch
ljmp
add
idivb
out
inc
mov
pushw
out
fwait
lahf
cltd
rcrb
arpl
cmpsb
mov
out
loope
clc
mov
or
icebp
cmp
je
push
fwait
into
inc
xchg
pushf
and
int3
adc
sahf
mov
mov
and
ja
mov
mov
push
out
or
out
cmp
cs
enter
inc
sahf
xchg
test
cli
dec
rcrb
call
hlt
jg
dec
push
rclb
push
lods
test
push
das
or
fabs
or
in
or
leave
out
pusha
xor
jle
mov
mov
fwait
arpl
jp
aam
adcb
pop
push
jnp
inc
sbb
sarl
in
pop
mov
mov
xchg
xchg
pop
sub
or
lahf
pop
fndisi(8087
adc
sahf
lret
jge
pop
xchg
mov
sbb
cmp
fistl
xor
pop
inc
push
and
fcompl
fsts
push
movsl
jg
out
xchg
or
jmp
or
lahf
adc
ftst
mov
mov
adc
lret
jge
sub
arpl
mov
lods
in
jns
xchg
popf
call
sub
cs
cmpsl
pop
imul
mov
mov
out
rol
inc
pop
xchg
iret
fdivl
mov
lock
jns
jne
pop
loop
pop
out
hlt
cmp
mov
push
sbb
cld
rcrb
lods
leave
inc
jb
mov
test
shl
jmp
mov
mov
inc
pusha
or
leave
sub
or
lcall
bsr
lret
mov
loop
lret
cmpl
sbb
bound
and
ja
sarb
jo
mov
or
cli
push
or
jno,pt
jnp
xchg
xchg
sbb
push
fwait
mov
aam
xor
inc
es
adc
mov
int
jae
add
out
pushf
bound
addr16
adc
mov
aad
cmp
pop
shrd
pop
jp
and
push
stc
fwait
rcrl
mov
pop
es
adc
sbb
shrb
add
and
or
cli
lods
or
sbbl
cmp
mov
jp
mov
sbb
xlat
push
dec
cld
insb
push
dec
imul
testb
dec
sbb
iret
pop
or
daa
push
ret
arpl
in
mov
data16
std
cmpsb
ret
xchg
or
xchg
push
mov
out
out
sbb
adc
push
fmull
cwtl
in
pop
add
sub
pop
popf
mov
into
push
fsts
repz
xor
jl
test
mov
dec
push
lea
andl
inc
lea
or
sbb
xchg
xor
leave
in
add
inc
xchg
cmp
push
and
fsubs
pop
loope
fcompl
xchg
dec
lahf
and
push
test
jbe
ss
jg
ljmp
jnp
icebp
gs
pop
mov
popa
jns
xchg
and
sub
jbe
in
enter
adc
aas
xor
in
aas
cli
dec
aam
movsb
fcomp
fsubs
cltd
inc
pop
clc
xlat
push
mov
inc
inc
mov
mov
xchg
xlat
arpl
push
in
fs
jbe
pop
js
xor
xor
aaa
into
test
push
xor
call
mov
push
jp
fisubrs
or
sub
or
push
stos
insb
cs
pop
ja
jge
pushf
loope
in
pop
push
adc
fs
jae
jmp
repnz
sbb
xchg
xchg
insb
pop
sahf
rcrb
jl
mov
les
sbb
cmp
mov
dec
mov
lods
enter
call
stos
push
xor
jl
jl
int3
cmpsl
nop
xor
mov
lcall
push
test
leave
push
pop
movsb
dec
fidivs
sti
cmp
movsb
pop
sub
mov
sbb
jne
add
mov
xor
add
jnp
arpl
fldl
xorb
jb
mov
aam
add
dec
fistpll
inc
ss
ss
loop
loop
nop
cltd
subb
fwait
int
pop
jb
pusha
xchg
mov
mov
cmp
inc
dec
scas
mov
data16
mov
aaa
fbstp
and
cmp
loop
je
mov
popa
cmp
and
js
dec
cmp
xor
push
loope
inc
shlb
in
sti
push
add
xchg
push
ds
mov
adc
adc
lcall
mov
cmp
lds
addr16
in
push
inc
popf
stos
aas
push
bsf
dec
push
jns
outsb
into
stc
ret
imul
sub
out
add
sub
dec
mov
cmc
cld
fnsetpm(287
and
adc
and
loopne
mov
testb
pop
add
add
cmp
pop
ret
arpl
sbb
jae
add
dec
push
jo
je
push
inc
inc
andb
lahf
nop
mov
push
iret
cmp
adc
add
xchg
out
jae
lea
ljmp
jbe
jmp
cmp
mov
push
addr16
movsb
xor
dec
mov
sahf
cmp
fisttpll
ret
cmp
add
cmp
push
ds
out
repz
add
mov
cmp
pop
adc
adc
xorb
push
push
fcomi
xor
jmp
xchg
jmp
es
inc
mov
pop
mov
test
jl
inc
mov
xor
inc
outsl
hlt
call
and
flds
sub
inc
jmp
testl
jb
ja
loopne
aaa
adc
hlt
jecxz
xchg
fidivl
pop
and
and
aas
inc
xor
fiadds
jo
cmc
adc
push
lea
fistpl
jecxz
mov
add
lret
and
push
arpl
fucom
nop
aaa
cmc
std
mov
sti
pop
jge
cli
pop
aaa
and
pusha
sti
xchg
lret
testb
dec
pushl
lods
movsl
jno
xchg
movsl
jne
daa
in
outsb
data16
dec
hlt
int3
lcall
enter
mov
stos
ret
ret
sub
jmp
jb
notl
ss
push
sbb
mov
shrl
pushl
loopne
add
and
ds
ja
inc
jno
dec
xor
dec
in
jp
jecxz
push
outsb
pop
aas
sbb
inc
xor
or
fldcw
mov
loope
adc
les
xor
dec
test
scas
in
xchg
subl
sbb
jmp
test
or
repz
std
cmpsb
add
in
insl
sub
cwtl
lahf
xor
sub
loop
and
cmpsl
dec
and
push
add
push
jle
cmpsb
inc
in
repz
loop
pusha
xchg
add
sbb
mov
adc
mov
pop
cmpl
mov
js
pop
shrl
xlat
mov
aaa
cmp
aad
cmpsl
push
jmp
push
test
and
adc
les
sti
mov
xchg
and
insl
repnz
loopne
jne
cmp
jge
add
push
dec
inc
mov
shl
pop
add
rcrb
fnstcw
or
or
push
js
xlat
xchg
fadd
jns
push
adc
insl
add
fmull
ret
stc
popf
lret
fstpt
mov
cltd
cmpsb
mov
out
or
dec
sbb
lcall
and
popa
adc
loope
lods
inc
ss
or
jns
lret
jmp
adc
scas
add
add
andb
ja
je
inc
dec
xchg
popa
lcall
sbb
bound
xor
xchg
test
push
aam
lret
aaa
movsb
jle
ss
mov
cmpsl
mov
xchg
pop
es
mov
fs
ja
jle
fisttps
xor
div
lods
pop
punpckhbw
stos
push
cmp
sbb
lret
test
lea
pop
sti
xchg
in
ret
clc
or
jp
push
shrb
stos
or
push
in
add
fstps
cmp
cmp
xchg
push
xor
popf
arpl
std
xchg
repz
loop
lds
js
xchg
pop
insb
outsb
jns
stos
lcall
fistpll
xor
iret
std
mov
add
out
movsb
mov
sbb
mov
push
mov
jbe
imul
cs
repnz
iret
lods
push
mov
movsb
cmpsb
cmpsl
bound
adc
cld
sbb
lahf
sahf
loop
mov
nop
sub
mov
enter
ja
dec
ds
cmpsl
stos
shlb
adc
dec
cltd
ficompl
jmp
cmp
lods
mov
das
outsb
push
data16
jmp
les
pop
adc
aam
mov
mov
mov
sbb
adc
js
aaa
or
aam
sti
adc
aam
and
rcll
pop
je
aaa
je
mov
push
push
add
mov
push
loop
pusha
getsec
shrl
repnz
xchg
adc
xchg
lahf
xchg
mov
jns
cwtl
sub
push
mov
pop
repz
imul
and
pop
sub
scas
cmp
fimuls
shrb
xchg
jl
das
dec
push
loopne
or
movsl
pop
mov
mov
movsl
fstp
int
add
jnp
test
aas
fistpl
sbb
aad
dec
sub
mov
push
pop
and
shlb
int3
adc
push
xor
pop
and
or
push
ljmp
pop
add
mov
cmp
adc
xlat
xchg
mov
mov
arpl
jne
je
jge
xor
and
lods
or
dec
mov
jecxz
test
incb
jae
lahf
es
mulb
bound
push
lds
imul
jnp
ficoms
idiv
add
adc
fnstsw
loop
mov
mov
inc
and
cmp
cli
insl
jge
int3
xchg
pop
jb
flds
xchg
std
mov
mov
cmp
mov
push
xor
inc
sbb
sbb
testb
rcrb
inc
mov
adc
lods
mov
rcl
jmp
ss
fwait
lcall
call
das
dec
aaa
movb
outsb
fdivr
push
xchg
cld
cs
and
pop
cmp
and
sbb
fxch
iret
adc
jg
sub
sbb
ret
decl
lcall
mov
dec
jns
push
icebp
dec
cmc
loop
dec
pop
mov
sub
sub
jae
cmp
sub
adc
sub
mov
dec
xchg
lods
subb
push
fistpll
mov
push
dec
pop
test
pusha
mov
popa
ret
das
out
cli
jp
iret
dec
aam
and
cwtl
mov
ljmp
dec
fbstp
lods
into
pop
add
aad
jnp
arpl
mov
in
sahf
dec
movsl
cmp
mov
jecxz
shl
fisubs
or
mov
cs
push
mov
and
repz
mov
dec
es
jne
loopne
sub
cmp
dec
xor
stos
ret
movsb
das
das
or
add
out
and
adc
inc
fsubrs
mov
ret
imul
in
and
cmpsl
rclb
xor
mov
test
inc
adc
rcll
sahf
das
mov
out
dec
jmp
test
outsb
lcall
and
pop
xchg
xchg
icebp
jo
xor
cli
ficoms
lods
dec
dec
loopne
mov
mov
add
sbb
movsb
pop
cmc
jnp
movsb
nop
inc
cli
cs
push
out
fst
imul
mov
mov
add
pop
jns
xchg
fstps
aaa
insb
pop
cs
lea
mov
mov
fildll
test
push
pop
daa
mov
int3
movsb
test
test
or
insb
pop
xor
mov
dec
xlat
mov
xor
ret
mov
jo
add
pop
xor
pop
jge
inc
cmp
cmp
aas
mov
arpl
mov
and
mov
cmp
xchg
pop
push
aaa
lahf
inc
out
add
hlt
movsl
add
xorb
dec
pop
cltd
inc
iret
int
jns
push
jno
sbb
jne
cs
xchg
sbbl
adc
pop
ret
xor
mov
sbb
and
pop
fcoms
out
xchg
subb
push
imul
xchg
pop
dec
sbb
sub
aam
and
lahf
xor
ljmp
mov
out
faddl
mov
mov
mov
bound
scas
mov
or
cmp
jge
or
repnz
data16
cmp
nop
dec
fwait
test
push
dec
jle
sahf
sub
xchg
add
sbb
rcll
repnz
movsl
adcl
mov
test
jae
sub
ficomps
xchg
inc
loope
fdivrp
add
cmp
subb
lock
push
pop
lea
pusha
loop
repz
mov
fwait
aad
mov
addr16
dec
daa
loop
scas
cmp
xor
and
mov
jne
pop
mov
xchg
mov
jge
sbb
jecxz
push
ja
mov
es
pop
dec
dec
push
movsb
dec
and
sahf
das
jecxz
int
jns
jp
jg
push
sqrtps
inc
lods
rorb
push
inc
sub
fwait
pop
insl
add
mov
sbb
push
jmp
pop
ss
lods
cwtl
aad
push
mov
mov
and
or
in
mov
pop
test
adc
jecxz
jg
out
inc
test
stc
insl
cmp
adc
test
pop
and
jno
mov
test
ljmp
gs
rcl
mov
jle
clc
repz
das
rcrb
dec
add
adc
es
fisubrl
sbb
mov
jbe
cmpsl
xchg
sub
jns
rclb
push
jecxz
cs
decl
ja
sub
js
sbb
sarb
jne
jb
adc
lea
mov
xor
xchg
add
mov
arpl
xor
pop
or
hlt
add
fnstenv
testl
aaa
push
pop
lret
pop
lds
js
out
push
xchg
loop
ret
iret
xchg
jo
dec
jno
gs
add
mov
pop
dec
or
xor
cmp
push
or
out
pop
mov
in
fsubrl
pop
add
mov
popf
mov
mov
inc
jb
js
jbe
adcl
test
repz
or
lock
or
jmp
std
in
cmp
fwait
aam
xchg
xchg
in
jno
rolb
cmp
push
jns
les
aad
into
sub
fwait
pop
test
lret
push
push
add
scas
pop
jg
lods
lods
sbb
and
and
pop
loop
clc
mov
aas
dec
call
push
insl
xor
jle
mov
jno
dec
cld
outsl
gs
es
or
and
mov
cli
inc
aaa
xchg
add
mov
lret
adc
jns
adc
out
rclb
or
in
mov
pop
jp
call
jle
jae
adc
bound
pop
add
addl
inc
or
and
add
aam
cmpsb
andb
jns
sbb
std
cmp
adc
test
and
std
sub
or
popf
mov
test
out
lea
out
orb
sub
lds
insb
les
inc
cld
mov
push
ret
and
or
or
xor
pop
hlt
movsl
sbb
add
into
cli
pop
dec
mov
fyl2xp1
dec
jmp
xor
jo
in
das
inc
sub
ljmp
mov
sbb
xor
and
jg
mov
mov
jle
mov
inc
push
loopne
daa
dec
outsl
mov
movsb
xchg
push
jmp
out
and
inc
xor
pop
jne
jo
lds
sbb
adc
mov
dec
or
scas
sbb
push
mov
in
fnstcw
lods
jmp
push
inc
pop
call
fsubrs
jp
daa
mov
mov
popa
lods
ss
add
inc
ror
filds
lds
xchg
fistpll
sbb
pop
xchg
mulb
ret
push
fisttps
xchg
sub
cmp
loopne
xor
nop
int
mov
xchg
jo
inc
fs
sbb
adc
xchg
repnz
fcompl
ret
mov
dec
xor
mov
aaa
call
decb
int3
pop
cmp
movsl
fs
dec
push
mov
mov
std
pop
lea
push
lcall
jge
fildl
les
push
cltd
mov
sti
or
add
push
inc
or
and
jns
loopne
pusha
xorb
add
inc
adc
mov
sbb
hlt
scas
push
cmp
mov
dec
sbbb
mov
push
cmp
scas
sub
test
je
pop
and
or
icebp
in
int3
dec
shr
ljmp
xor
lcall
sub
xchg
shll
das
imul
jo
mov
or
pop
hlt
inc
jo
jb
lret
gs
repnz
xlat
sub
jno
jl
push
iret
mov
out
and
sti
cmp
add
pop
jge
sbb
dec
arpl
xchg
mov
push
je
sti
xchg
fsubrl
ja
push
imul
fcmovnbe
or
setns
mov
notl
loopne
jmp
ffree
jg
inc
ljmp
mov
popf
adc
pushf
or
cltd
fisubrs
pop
sahf
out
xor
rolb
add
add
mov
pop
or
inc
mov
xor
cltd
repz
xchg
jnp
mov
or
sahf
xor
fs
sbb
icebp
loop
sti
add
rorb
dec
shll
fisubs
shl
out
push
lcall
cmp
mov
insl
push
mov
adc
mov
lds
ja
push
mov
pop
and
loopne
scas
aaa
pop
inc
fs
addr16
sub
adc
int3
add
scas
cmpsl
enter
cmp
and
mov
jle
jno
fdivs
mov
fistpll
pusha
idivl
jo
in
test
enter
jns
inc
mov
cld
sub
or
or
out
je
fidivrs
mov
jle
lret
fbld
aaa
sar
out
ljmp
jae
repnz
sbb
popf
cmp
jnp
mov
in
shlb
dec
sbb
dec
or
fnstcw
das
clc
stc
add
sub
loopne
dec
pop
lcall
jne
loop
xchg
mov
add
jbe
fbld
jbe
push
inc
mov
pop
fsubs
out
out
roll
add
and
inc
push
ror
or
inc
movsb
fidivs
lods
incl
adc
or
adc
pop
shll
cltd
sbb
xchg
jecxz
mov
sbbb
daa
jbe
sub
aam
scas
fdivrs
mov
into
pusha
nop
int
dec
cbtw
dec
inc
in
test
pushl
xchg
sub
pop
cs
dec
sti
xchg
cmp
daa
xchg
daa
lret
inc
cmp
pop
subl
and
jbe
jmp
and
add
sub
add
xchg
out
cmp
leave
aad
push
insl
outsl
jnp
int
jle
lahf
sbb
mov
cmp
add
outsl
add
aas
cmpb
ljmp
cld
aas
xlat
ficomps
shlb
mov
aas
bound
sub
repnz
push
xchg
dec
jnp
divl
mov
sbbb
add
inc
nop
push
xor
or
jbe
ds
rcrb
jns
cwtl
jmp
dec
xchg
xlat
fwait
adc
dec
mov
stos
xchg
dec
std
mov
mov
into
imul
cmp
das
mov
in
mov
js
das
adc
jbe
mov
insl
popa
dec
fildl
data16
ud0
cmpsl
pop
imul
fdivl
xchg
xchg
or
and
xlat
fcmovnb
push
movsl
mov
sbb
push
add
mov
cmpsb
mov
add
mulb
call
ljmp
jmp
out
xlat
inc
repnz
nop
call
sti
mov
loope
lahf
cmp
pop
cltd
mov
xor
mov
push
aam
out
mov
or
jmp
jg
bound
or
cmp
sbb
inc
sub
push
mov
outsl
jae
mov
fucomip
sar
mov
inc
mov
or
in
fstl
dec
add
jg
or
mov
push
add
pop
popa
fbstp
dec
push
adc
addl
sbb
xor
sub
in
aas
pop
fisubrl
ljmp
out
mov
lods
sbb
inc
and
int3
cwtl
sbbl
shlb
adc
adc
mov
jl
arpl
jge
je
rolb
and
int3
rorb
jns
cmp
in
add
leave
out
addr16
cmc
aad
sbb
push
adc
push
jb
dec
xchg
cmp
jge
sbb
jmp
mov
jle
pusha
inc
mov
andl
inc
popa
aad
add
fmuls
popf
pop
jg
mov
inc
cmp
sti
pop
fs
pop
cli
out
add
pop
add
mov
xor
mov
adcb
xchg
dec
mov
scas
mov
mov
sub
push
out
pop
rcr
xchg
mov
outsl
lret
inc
shlb
out
pop
dec
repz
fnsave
lret
or
into
mov
xor
xchg
lods
and
xchg
insl
jne
adc
mov
rorl
mov
pop
jnp
in
mov
dec
mov
mov
mov
fdiv
mov
dec
push
push
inc
adc
scas
pop
xor
and
and
outsl
pop
push
dec
add
xor
je
mov
je
cmc
sub
and
dec
lods
test
sub
out
movsl
arpl
ficoml
fisttpll
adc
pop
jo
mov
adc
push
cmp
dec
adc
mov
insb
cmpsl
cmp
sub
mov
les
mov
inc
adc
mov
outsl
mov
jl
push
jmp
stos
xchg
scas
popf
push
jns
xchg
push
mov
jbe
dec
mov
into
cmp
adc
pop
xor
int
ss
mov
rcrl
shr
sbb
in
sbb
repnz
mov
insb
out
or
addr16
pop
sbb
mul
dec
or
adc
pop
mov
adc
and
inc
jle
adc
xchg
lret
xchg
dec
jp
mov
sti
test
mov
js
insb
arpl
inc
add
and
mov
cwtl
pop
in
outsb
xor
stos
mov
std
xchg
addr16
in
or
add
add
xor
out
push
cmp
mov
in
repnz
mov
fdiv
aad
jae
fs
incl
jae
mov
leave
push
jmp
hlt
lods
cld
adc
and
xchg
or
cs
scas
pop
mov
pop
xor
cltd
push
aad
and
add
lds
pop
mov
or
jo
dec
or
ret
inc
fstps
sti
lds
inc
or
out
movsb
imul
cmp
cmpl
loope
mov
flds
xchg
in
fadds
jecxz,pt
mov
pop
pop
add
das
jg
jecxz
inc
sbb
jmp
mov
addb
push
cmp
cltd
jno
lods
push
cli
adc
ret
pop
adc
push
fcoms
jb
mov
repz
fistpl
pop
dec
es
into
xor
popa
mov
inc
jmp
push
fbld
xor
testb
inc
adc
insl
scas
pop
cmp
xorb
sub
cmp
pop
sbb
jae
push
push
and
movsb
mov
or
dec
push
push
dec
lods
das
sbb
jo
inc
inc
pop
icebp
cmp
jb
adcb
pushf
out
insl
jae
add
clc
add
sbb
insb
xor
lcall
clc
sbb
add
loop
lea
ud2
int
dec
xor
cmp
jp
and
popa
jl
clc
je
mov
test
jno
rcll
pop
cwtl
mov
mov
or
sub
lea
sbb
xchg
push
and
fdivrs
mov
xchg
leave
lret
jb
jecxz
test
push
jge
dec
inc
out
xchg
jns
sbb
lcall
out
stc
jnp
es
call
js
sahf
fstpl
lahf
cmp
adc
mov
ds
inc
loop
nop
fwait
addl
call
inc
xchg
pop
jbe
add
sbb
scas
test
lret
sarb
jbe
sub
shlb
xchg
dec
pop
mulb
pop
pop
ret
sahf
sarl
cmpsl
ljmp
rcll
dec
add
pushl
cmc
mov
push
clc
xchg
mov
enter
mov
and
xor
stos
int3
fwait
daa
movsb
mov
xor
mov
push
or
inc
jecxz
stc
push
into
sbb
and
mov
jns
jl,pt
dec
es
and
xorb
nop
and
cmp
adc
mov
lret
popa
xor
div
inc
out
leave
outsl
inc
iret
nop
adc
aaa
repz
aaa
cld
pop
lock
sub
xchg
rcr
fbstp
fiadds
jno
sti
cwtl
pusha
data16
jle
add
jbe
xor
inc
mov
stos
xorb
pusha
js
fmul
std
mov
ret
and
mov
push
repz
sti
cwtl
loope
pop
pop
cmpsb
sti
mov
mov
sbb
or
xor
ja
js
mov
xchg
ds
in
lods
mov
data16
mov
push
lods
xchg
and
loop
out
xor
out
pop
ss
pop
mov
out
cmp
push
sub
mov
hlt
mov
pop
cmp
jmp
inc
push
mov
xchg
imul
pop
push
out
pusha
jne
jbe
andl
add
in
push
cmp
std
scas
xor
pushf
mov
mov
sbb
daa
call
mov
jle
lret
xchg
inc
sbbl
es
fisubl
pop
mov
xor
loop
mov
fcomps
pop
movsl
cli
inc
xor
jno
push
mov
shlb
mov
mov
into
hlt
aad
jp
inc
jl
pop
sar
inc
jecxz
inc
fcmovbe
addr16
push
dec
loope
ja
mov
cmp
push
sub
xor
jb
pop
jg
stos
call
shrl
push
adc
cld
xor
dec
mov
dec
cmp
pop
sbb
jbe
sub
mov
cli
pop
cltd
insl
pop
adc
loope
in
fsubs
mov
aam
inc
push
pop
ja
jo
mov
scas
ret
jp
sub
sub
int3
jmp
hlt
mov
fsub
mov
iret
xchg
ret
stos
inc
ljmp
mov
push
sbb
push
inc
rcrl
ljmp
add
aas
or
sub
inc
sti
pop
arpl
jp
lods
xchg
icebp
pusha
mov
mov
add
jae
pusha
inc
jmp
and
jp
jne
inc
clc
or
and
jmp
mov
dec
xchg
stos
jns
pusha
adc
adcl
mov
adc
dec
ret
mov
outsb
pop
mov
inc
call
pop
imul
pushf
divl
jmpw
call
mov
adc
lea
fsubs
push
cmc
fcomi
cmpl
xor
out
je
inc
ss
jle
imul
push
xor
jl
ljmp
dec
mov
xor
sti
sti
popa
and
loop
dec
and
sarl
mov
add
sub
ds
fucomp
idivl
ljmp
sub
sarl
jg
cmp
sti
and
popa
adc
push
or
cmp
adc
jb
out
jg
add
test
jecxz
mov
adc
and
adc
lods
repz
sub
xchg
mov
jmp
sbb
orl
inc
std
dec
xor
mov
jge
outsb
test
ror
test
movsb
hlt
and
paddsb
jle
imul
daa
fst
out
into
push
call
subb
fldenv
pop
cmp
push
out
mov
lret
out
sub
xchg
sbb
mov
cwtl
in
mov
loope
push
ja
xor
jnp
test
scas
mov
cmp
pop
aam
xor
dec
mov
aam
repnz
pusha
push
pop
daa
mov
mov
sbb
xchg
pop
adc
xchg
mov
add
fistps
xchg
mov
out
loope
sti
mov
pop
xchg
adc
popa
mov
xor
jmp
jp
dec
jecxz,pt
dec
or
icebp
arpl
xchg
imul
mull
gs
cli
push
dec
repnz
mov
mov
mov
into
xor
or
fdivs
repnz
in
aam
cmp
sub
lods
inc
inc
pop
insb
js
jae
mov
lock
outsl
inc
loop
sbb
cmpsl
dec
inc
cltd
mov
jmp
xchg
pushf
sbb
jne
popf
add
inc
shrl
jge
in
cmp
dec
inc
adcl
mov
cmc
ret
or
dec
sbb
xchg
cltd
adc
add
cmp
sbb
pop
xlat
or
loopne
ljmp
out
stos
sub
jb
adc
hlt
fiadds
imul
sub
jae,pn
dec
stos
jb
ret
into
out
jge
jl
sub
cmp
sahf
scas
cmpb
divl
mov
sbb
ficoms
sbb
push
jecxz
xchg
mov
js
or
adc
pop
push
add
and
xor
jmp
cmc
mov
lds
aaa
jnp
push
lea
sahf
enter
push
jnp
pop
sti
push
jae
xchg
push
stos
cmc
test
ljmp
sub
out
sub
adc
ret
in
xor
push
sub
inc
mov
mov
rclb
push
xchg
mov
movsl
mov
cmp
inc
iret
rcrb
movsl
jnp
add
pop
in
push
jne
xchg
in
sbb
adc
out
jo
mov
rolb
loope
iret
xor
cwtd
int
pop
jp
push
inc
xlat
push
push
lock
mov
aas
jecxz
lea
or
mov
mov
xchg
dec
and
mov
stc
ljmp
mov
int
out
imul
lahf
xor
iret
leave
sbb
lods
sub
mov
mov
dec
cmp
aam
push
add
clc
sub
xchg
sub
nop
jmp
leave
xor
arpl
mov
jnp
fs
xchg
fistpl
push
out
xchg
sbb
mov
and
xchg
dec
addr16
jge
fisttpl
mov
pop
and
sbb
in
mov
lods
xchg
inc
movsb
insb
test
pop
loopne
es
xchg
jo
inc
pop
mov
cs
dec
ret
iret
cmp
out
cmpsl
out
repnz
maxps
pop
aas
popf
imul
push
popa
lahf
jbe
movzwl
push
mov
mov
jp
fmul
cs
add
outsl
daa
xor
jge
scas
jo
push
aaa
inc
repnz
pop
outsb
pop
push
fnsave
lret
or
cmp
outsb
xchg
cltd
mov
insb
add
and
dec
mov
add
push
insl
xchg
mov
lret
pusha
gs
ret
int3
dec
sbb
or
lcall
jns
dec
in
xor
ret
imul
mov
jb
mov
pop
xchg
clc
jo
iret
js,pt
jb
cmpb
xchg
adc
pop
stos
cmp
xchg
fdivr
lods
lods
jl
add
subl
inc
pop
dec
add
jmp
push
arpl
mov
pop
ret
add
incl
sub
gs
xchg
dec
js
cltd
pop
outsl
cmp
push
fsubrs
and
xor
dec
pop
mov
xchg
div
sub
cmc
imul
test
movsl
and
cld
sub
mov
xchg
mov
inc
mov
std
jne
push
jbe
or
scas
imul
mov
fdivrs
mov
test
icebp
iret
sbb
mov
mov
stos
icebp
jg
xor
ret
push
mov
mov
aad
pop
imul
sub
sbb
test
xchg
lds
and
and
mov
add
and
sbb
lcall
les
loopne
ds
add
push
push
ss
and
pop
icebp
stos
mov
xchg
sub
into
fisubl
rol
lret
pop
jl
mov
cmpsl
xor
mov
and
adc
out
pop
xchg
xlat
es
loope
push
mov
lock
dec
fwait
push
dec
fwait
lahf
in
mov
shll
jbe
in
jo
movsl
fimull
flds
inc
mov
es
lar
shlb
icebp
xor
inc
lcall
out
or
mov
add
test
adc
dec
dec
xor
shrb
push
sub
and
jmp
leave
mov
push
repz
incl
js
into
lret
out
mov
mov
dec
stos
mov
mov
fdivrl
into
sub
js
mov
jne
pop
xchg
or
inc
cld
jmp
mov
cmp
xchg
sbb
mov
daa
in
mov
dec
dec
pop
in
rolb
mov
dec
notb
aaa
adc
les
push
ss
push
fnstcw
lds
adc
loopne
mov
mov
xchg
stc
loope
cld
mov
jmp
sti
fs
push
mov
and
scas
or
cld
test
adc
and
push
shrl
sar
ret
into
ds
enter
ret
ljmp
mov
lds
mov
add
mov
loope
mov
mov
jns
and
or
into
orl
push
push
add
sbb
jl
cmp
pop
pop
xor
mov
fsubrp
xor
leave
mov
clc
loopne
data16
push
insb
push
ds
sbb
cwtl
jmp
scas
insl
in
mov
int
sub
dec
aas
movsl
xor
mov
rclb
rol
add
push
int3
sub
xchg
mov
fcomip
jno
stos
fucom
sbb
ss
shll
lea
aam
cmc
xorb
lret
push
sub
mov
dec
js
jb
xchg
in
pop
or
xor
jp
daa
jae
pop
iret
lcall
add
js
inc
xchg
sbb
xchg
or
and
sub
adc
pop
pop
mov
rcrl
fstl
dec
xor
xor
pop
out
mov
mov
xchg
mov
pop
jl
inc
fcmovne
sti
cli
xchg
cmp
dec
gs
ret
aaa
pop
dec
mov
fwait
cmpsl
inc
mov
add
fcomps
iret
imul
jne
test
xor
add
test
mov
xor
add
inc
xor
lcall
lock
xchg
bound
fcomi
fwait
pop
jmp
fsts
adc
sbb
jbe
xor
imul
shr
mov
pop
enter
shrl
cmpsl
stos
lcall
mov
adc
mov
xor
fcmovnbe
xchg
xor
sbb
mov
cltd
xor
aad
nop
push
movaps
in
mov
push
pop
mov
insb
lock
lcall
pop
push
sbb
fldenv
and
imul
popf
jg
out
xor
push
pop
inc
cmpsl
cmpsl
lock
fstpt
lahf
mov
lods
mov
or
stc
adc
int
sub
inc
pop
mov
and
int
testl
pop
adc
lret
pop
es
and
mov
add
cmp
push
adc
jge
test
scas
xchg
sub
lods
mov
or
or
mov
xchg
xlat
popa
shrb
fldt
insl
inc
mov
pop
pop
in
jno
leave
add
dec
repnz
sub
cmp
fdivrp
xchg
xchg
test
sbb
movsb
xor
in
dec
or
rcll
mov
xchg
je
cli
lock
xlat
mov
push
inc
mov
jb
xchg
pushf
pop
dec
mov
sbb
inc
adc
ret
mov
xlat
mov
adc
outsl
jmp
es
inc
mov
push
add
icebp
xor
jae
dec
and
sbb
push
push
popf
icebp
popf
inc
nop
mov
ss
push
cmp
jge
jne
pop
xlat
sub
bnd
xchg
jbe
lcall
or
stc
fisttpl
xchg
mov
sbb
sbb
cmp
pop
cmp
ret
xor
stos
pushf
arpl
adcl
xchg
and
call
xor
icebp
rcr
mov
lods
sahf
push
dec
or
sub
fidivrl
mov
outsb
inc
jbe
mov
les
aaa
push
cltd
bound
dec
or
cmp
mov
sbb
and
xlat
outsl
js
cmp
jl
xchg
ds
sub
jae
int
ret
call
js
pop
mov
xchg
push
fcos
cmp
jo
stos
cmp
mov
aam
std
sub
imul
cmp
stos
jl
div
push
popa
aaa
ficoms
in
dec
mov
stc
pop
jmp
push
jg
and
mov
mov
rorl
loope
and
jb
sub
push
rcrl
push
adc
mov
arpl
test
xchg
popa
dec
pop
cmp
jne
scas
test
xchg
mov
stos
xchg
sbb
mov
je
cltd
lret
loopne
inc
xor
scas
sub
filds
dec
mov
pop
jg
popl
ret
sbb
add
imul
icebp
out
lcall
pushf
inc
add
dec
movsb
mov
sub
sti
add
pop
stc
leave
stc
in
cmp
push
and
mov
inc
mov
in
pop
mov
pop
cmp
mov
ds
hlt
orl
scas
scas
sahf
sbb
dec
ljmp
push
test
fdiv
push
fs
test
mov
xchg
cli
into
into
clc
or
std
and
xchg
lahf
add
jmp
out
sbb
add
insl
jp
aad
mulb
xchg
outsl
push
xor
sub
lret
int3
xchg
xor
xor
jge
test
push
and
cmp
pop
pop
add
ja
ljmp
sub
push
fdivs
stc
addr16
push
or
enter
das
aad
fsubl
das
cwtl
jb
call
enter
inc
add
movsl
xor
lahf
jne
xchg
xchg
lock
ret
or
out
mov
aad
cs
dec
pop
lea
cmp
enter
or
pushf
push
insl
daa
ds
dec
dec
adc
adc
clc
shrb
sar
rcll
cltd
or
dec
pop
pop
in
mov
int
and
dec
and
enter
push
add
aas
pushf
ja
inc
jns
xchg
lds
xor
dec
pop
jmp
inc
add
or
popf
jmp
push
mov
out
cmp
mov
hlt
cmpsb
cmp
xor
push
push
sbb
push
jmp
addr16
test
inc
cwtl
pop
jb
jge
mov
cmpsb
inc
push
fadd
or
fsubrl
cmp
sbb
test
cmovb
push
cmp
jnp
in
jp
in
xor
and
add
dec
pop
cmc
dec
lds
or
pop
movsb
and
push
enter
jno
inc
mov
pushf
xchg
fchs
or
pop
adc
xor
sbb
and
stos
out
jo
ficoms
loopne
gs
jmp
ja
dec
dec
and
sahf
fistl
pop
test
and
in
mov
jmp
xor
inc
stc
outsb
push
cmp
clc
call
scas
div
or
addr16
jmp
nop
push
shr
lock
dec
repnz
imul
sbb
leave
jp
rcrl
sbb
or
pop
movl
xchg
sub
pushf
adc
cmc
enter
je
lock
pop
sub
shr
inc
daa
or
incb
or
and
addr16
cmpb
mov
ss
icebp
mov
sbb
inc
sub
outsb
push
and
test
inc
adc
test
ret
push
inc
xchg
nop
and
shll
inc
loope
and
or
jns
data16
mov
test
test
loope
mov
in
add
aas
and
push
inc
dec
scas
je
cmp
xchg
adc
xor
outsl
insl
add
xchg
dec
fdivl
std
mov
dec
mov
add
mov
dec
mov
ljmp
call
insb
sti
and
fimuls
repnz
std
cmp
jmp
call
adc
flds
and
stos
fbstp
jbe
mov
in
jle
sub
sbb
fnstsw
push
ljmp
adcb
sbb
inc
mulb
jno
inc
or
jmp
int
test
sbb
jno
push
outsb
push
pop
stc
pop
adc
std
add
jge
push
fs
and
rorb
test
ja
sbb
ret
mov
ds
cmpsb
fsubrl
xor
inc
dec
xchg
dec
repz
mov
pop
jl
cmp
mov
sbb
in
in
sub
repnz
jg
mov
aad
jg
mov
mov
push
adc
flds
popa
inc
xor
jge
add
loope
test
push
je
jae
push
jno
cmpsb
stc
mov
xor
loope
jg
out
lock
lcall
aam
xchg
adc
push
pop
popa
add
jle
nop
iret
test
mov
lret
cmp
mov
cmp
shl
popa
or
out
ficoms
in
bound
daa
sbb
add
inc
std
xor
lods
test
aaa
movsb
fisubs
insb
inc
mov
negl
cs
out
in
sub
dec
mull
pop
jns
cmp
bound
sti
lock
pop
xor
lods
into
xor
out
out
out
cmp
mov
xchg
or
jae
jp
sbb
and
jmp
jmp
jl
out
mov
xchg
jmp
dec
mov
mov
ret
sbb
cmp
arpl
mov
add
pop
xor
mov
mov
push
add
movsb
int
cmc
inc
adc
xchg
test
pusha
cltd
sbb
leave
mov
cmp
daa
daa
adc
inc
dec
or
arpl
fsubs
es
out
dec
push
pop
imul
fnstsw
pop
loop
cmpsl
mov
adc
fisubrl
rcrb
jl
mov
jecxz
fwait
push
ficoms
orb
jg
sbb
insl
pop
mov
xchg
pop
push
push
dec
jbe
pop
insl
jbe
cli
sub
out
ss
inc
notl
mov
repnz
lods
adc
mov
inc
pop
movsb
adc
ficoml
lret
sahf
xor
stos
mov
cmp
xor
es
popf
jg
push
loopne
push
ljmp
mov
mov
sbb
filds
pop
movsl
fsubrl
insl
or
cmp
xchg
fwait
xor
out
aad
push
jae
mov
outsl
lds
scas
or
mov
dec
lods
mov
xor
fnstsw
fistpl
adc
inc
clc
adc
fs
and
clc
int3
test
popf
orl
or
cltd
movsb
push
or
or
inc
xor
jp
dec
shlb
pop
icebp
add
ds
mov
addr16
and
in
into
sahf
scas
push
lock
add
mov
sub
push
lods
mov
mov
fdiv
pushf
ljmp
mov
call
or
xchg
in
and
adc
push
push
fdivl
fdivl
mov
mov
sbb
adc
int
fldl
dec
jecxz
mov
sti
sub
jbe
sub
arpl
push
jge
add
call
ja
jmp
xchg
inc
mov
outsb
jg
lret
out
fistps
inc
mov
dec
int3
ss
loopne
loopne
cmpsl
push
xchg
mov
insl
lock
xchg
mov
in
fistps
jl
push
push
jmp
jp
jnp
mov
js
adcb
in
rorb
sub
pop
mov
sbb
sti
lret
ja
inc
rolb
cwtl
insb
scas
push
mov
mov
stos
jle
pop
sti
lret
add
js
xchg
in
nop
jmp
repnz
test
aam
and
push
pushf
andl
xchg
outsl
sbb
sbb
cmp
and
mov
pop
loope
or
cmp
imul
sub
cmp
mov
aaa
push
pusha
push
push
stc
scas
adc
pop
push
cs
inc
scas
adc
mov
sbb
movsb
mov
jb
jb
fcoms
inc
inc
push
repnz
lcall
cmp
pop
mov
es
filds
test
cmp
adc
inc
shll
jo
or
mov
lds
sti
sub
or
pushf
pop
leave
mov
movsl
cmp
test
sbb
adc
adc
push
mov
jle
pop
stc
pop
mov
adc
lock
hlt
pop
cmpsl
cmpsl
add
mov
sti
dec
push
fucomip
subl
push
dec
test
aam
adc
pop
lret
into
mul
pop
jecxz
int
data16
add
sub
stos
out
push
ret
mov
inc
mov
sbb
in
push
mov
orl
mov
iret
lret
je
loop
shl
jecxz
jge
add
cltd
cli
add
arpl
push
aad
fwait
or
sub
clc
inc
mov
gs
clc
inc
jge
imul
adc
mov
pop
js
or
icebp
mov
or
push
pop
daa
fwait
rcrb
mov
sbb
cwtl
loop
jo
loopne
push
mov
adc
lods
into
lahf
add
cmpsl
sub
cs
add
add
and
sub
lock
subl
shll
lret
mov
insb
lods
into
leave
scas
push
cmp
loope
push
aam
jge
insl
daa
xchg
dec
movsb
mov
test
les
js
sub
mov
mov
cmp
popa
movsb
mov
std
jb
popa
xchg
dec
and
lods
add
mov
ret
cmp
sbb
inc
mov
shrb
pop
push
int3
jbe
and
jmp
jg
out
or
cmp
mov
cltd
jnp
scas
and
mov
sarl
cmpsl
icebp
or
mov
mov
push
fwait
iret
shlb
fsubl
mov
test
je
arpl
or
jecxz
test
test
inc
dec
mov
sbb
cmp
loopne
jge
xor
sub
js
inc
xor
dec
repnz
stc
inc
jae
es
sbb
sub
add
adc
mov
leave
lret
pop
insb
insl
lret
gs
call
test
push
adc
outsl
aad
push
push
vmwrite
jnp
loopne
pusha
daa
pop
pop
jl
lods
cmp
out
sbb
inc
je
fnstenv
mov
or
xor
pop
adcl
sub
xor
jo
push
adc
adc
mov
loop
push
xchg
ret
xchg
in
imul
cmpl
adc
xor
sbb
jmp
jae
xchg
repnz
xchg
mov
xor
sub
out
imul
push
inc
pop
pushf
pusha
push
jmp
dec
orb
stc
mov
mov
cmp
add
push
mov
shrl
sbb
int3
xchg
xchg
cmpsb
ljmp
mov
mov
cltd
pushf
pop
in
imul
std
ljmp
dec
out
or
mov
int3
xor
inc
push
mov
jmp
lock
mov
test
sar
scas
cmp
rcll
adc
dec
and
dec
sbb
push
iret
xchg
sahf
stc
fnsave
mov
dec
movsl
cld
fwait
add
icebp
push
pop
in
jp
subl
adc
fistpl
shl
loopne
sbb
data16
shll
jl
cld
pop
hlt
xchg
xchg
mov
adc
gs
movsl
stc
dec
cmp
sbb
faddl
ret
sbb
popf
add
cmp
imul
cmpsb
xlat
outsl
repz
jbe
add
and
loope
in
jle
and
pop
mulb
xchg
sbbb
jecxz
pop
push
lods
sbb
aas
not
xchg
test
sbbl
lcall
fmull
ret
test
ja
push
andl
cwtl
adc
adc
scas
jmp
push
cltd
movsb
iret
shll
xchg
push
andb
mov
mov
popf
das
mov
pop
pop
fstpl
ret
xchg
and
nop
pop
mov
into
sub
mov
jns
pop
mov
out
pop
lret
and
push
cmp
sbb
or
int3
jg
iret
fwait
and
jne
push
mov
mov
jo
sahf
loope
or
dec
fldl
cmpsb
sub
mov
xchg
pushl
lea
jl,pn
roll
andb
sti
cmc
test
mov
cltd
orb
popa
jg
add
sar
push
lds
pop
movsl
or
jle
out
repnz
push
cltd
outsb
aam
cmpsb
fldcw
or
ss
dec
lret
ret
mov
loope
cmp
xor
lods
cld
jno
ss
pcmpgtd
fistps
jg
jo
pop
lcall
xor
fbld
add
sub
dec
mov
addl
mov
ror
or
push
out
gs
int
out
adc
loop
test
sbb
and
xchg
iret
mov
nop
push
aas
xchg
popf
mov
pop
sbbb
mov
lods
ret
cli
scas
mov
arpl
mov
xchg
shlb
int
ror
lret
push
sahf
mov
mov
adc
cmp
pop
push
aad
jecxz
jecxz
lock
scas
leave
fsubr
repz
icebp
loop
jne
pop
in
sbb
adc
mov
cmpsl
xchg
rcr
out
test
cld
jnp
insl
cmp
add
dec
cwtl
nop
jle
out
mov
pop
push
jg
incb
pushf
scas
jnp
push
inc
mov
sbb
inc
pop
add
ja
cmp
loop
xchg
insb
jmp
in
js
lock
pop
sbb
xor
test
bound
pop
add
outsl
xchg
mov
mov
mov
or
ror
push
mov
inc
lods
lahf
fnstcw
dec
mov
in
jp
cmpsb
jno
cmpl
lods
add
loope
fwait
les
dec
sbb
cmpsb
jbe
shrl
lcall
xorl
flds
or
mov
lods
lods
movsl
mov
aas
test
pop
adc
xchg
enter
push
popa
mov
addr16
fs
out
int
mov
mov
sub
sbb
out
mov
pop
aad
mov
jecxz
dec
fs
sbb
pop
mov
movsb
cmc
in
xor
lods
repnz
mov
cs
ja
rolb
in
and
addr16
and
lods
xchg
xchg
in
movsb
jae
jmp
xorb
mov
mov
movsl
test
popf
out
add
cwtl
lahf
cwtl
in
es
in
xchg
test
ret
xchg
cmp
sbb
sub
fmulp
cli
sub
xchg
adc
adc
mov
jl
adc
repnz
jnp
jl
shrl
dec
inc
lea
les
dec
adc
ficompl
fnstsw
fs
push
addb
es
out
sub
and
sub
inc
stos
and
test
scas
insb
pop
mulb
js,pt
mov
pusha
cmp
loopne
add
jb
mov
inc
mov
cmp
sub
lea
or
out
dec
dec
xchg
mov
jbe
push
sysret
repnz
pop
movsb
icebp
rorl
sarb
dec
ss
mov
pop
push
sub
jb
lods
mov
in
aas
out
mov
inc
pop
or
jle
sbb
push
ret
jg
mov
mov
out
ljmp
fwait
mov
gs
shlb
push
mov
xor
add
aaa
pop
inc
dec
add
sahf
cltd
xchg
enter
jmp
inc
cmc
loopne
sub
imul
je
movsl
addb
or
and
in
test
or
push
outsl
push
pop
outsl
sub
cmp
aas
xor
daa
lock
dec
adc
lcall
fsubrs
adc
or
push
sahf
cmp
mov
loope
jnp
mov
movsl
pop
into
and
fldt
and
cmpsl
scas
pop
adc
jge
jno
scas
adc
subl
cmpsb
inc
dec
pop
loope
pop
push
cmp
cltd
pop
sbb
push
or
cmpsl
je
jmp
int3
cmpsb
pop
or
cmpb
mov
fisubrs
adc
hlt
rcl
or
iret
je
nop
xchg
jmp
adc
dec
mov
or
or
mov
imulb
lock
sub
pop
rcll
mov
cmp
out
add
sub
lds
dec
imul
ljmp
push
sahf
mov
and
pop
in
dec
cmp
sub
mov
dec
imul
btc
ja
push
or
inc
loope
cmp
icebp
out
sbb
shrb
sub
dec
fmul
push
add
aad
mov
repnz
add
loop
leave
ljmp
push
cmpsb
shr
push
add
xor
jge
cmp
cmp
scas
mov
dec
pop
push
out
cltd
dec
mov
jo
push
mov
test
mov
or
outsb
mov
jno
mov
dec
mov
aaa
push
and
add
cld
and
popa
or
in
adc
das
inc
mov
sahf
cmp
mov
popl
fwait
movups
popa
mov
lret
jmp
icebp
lods
popa
and
cs
insb
fcmovnbe
jbe
fiadds
in
out
fidivrs
gs
adc
inc
xchg
ja
mov
adc
out
mov
outsb
popa
int
lcall
jb
cmc
mov
ja
sahf
pop
adc
adc
ret
movsl
or
in
insb
popf
jmp
andb
mov
mov
mov
sub
mov
fbld
mov
fwait
xlat
adc
pop
mov
mov
movsb
sub
cwtl
in
sub
and
cli
cmp
sbb
jb
sbb
repz
xor
mov
aas
lds
sub
pop
adc
inc
pop
cmp
lahf
add
sbb
sub
xchg
dec
or
rol
out
inc
lcall
mov
rclb
jbe
sub
pop
cmc
push
pop
cs
lea
inc
inc
lock
aam
fcoml
das
push
and
xor
push
xlat
inc
mov
test
rorb
xchg
out
sbb
mov
push
pop
pop
fwait
popa
cmc
or
enter
testl
cmpsb
xor
mov
cmp
in
xchg
push
and
inc
xchg
movsb
add
cmp
loope
xchg
icebp
mov
adc
jns
cmp
lds
push
mov
dec
sbb
pop
dec
es
in
dec
jbe
pop
xchg
xchg
or
xchg
cmp
leave
jnp
inc
inc
fwait
add
test
xchg
jmp
cmp
out
cmp
and
inc
xchg
dec
pop
stos
mov
pop
loope
mov
jns
movl
imul
xorb
mov
nop
fiadds
out
dec
ret
adc
fst
inc
sbb
stos
aas
mov
jmp
pushl
in
mov
jns
lods
xor
adc
shr
xlat
xchg
aam
xor
adc
ja
hlt
and
ret
fwait
cmp
fmulp
pushf
jp
jne
shlb
mov
push
lret
scas
aaa
lock
hlt
loope
call
sbbb
bound
out
sub
out
out
cmpl
inc
dec
ljmp
mov
out
fnstcw
or
data16
jns
mov
sub
jg
in
ds
movsl
sahf
insl
mov
cmc
jns
inc
cli
add
aam
mov
imul
sub
lods
xchg
pop
fisubrl
mov
xchg
rclb
mov
sbb
sbb
xchg
clc
pop
imulb
push
ljmp
sbb
bound
sub
sub
jae
xchg
dec
jmp
pop
loope
mov
aam
xor
inc
lock
fimull
bound
add
sar
sbb
sbb
xchg
adc
sbbl
push
xchg
and
xor
fwait
push
testl
inc
inc
xchg
imul
pop
fstps
out
fistl
insl
or
inc
cmpl
dec
xor
addr16
imul
outsl
dec
cltd
fisubrs
pop
lcall
dec
aas
add
ficomps
out
push
push
call
mov
insl
aam
ds
lcall
xorb
ds
lock
mov
sbb
jg
xchg
lods
cld
dec
std
cmp
loope
mov
cwtl
jmp
out
jb
or
add
mov
adc
mov
imul
cmpsb
je
je
fistpll
sti
inc
dec
xor
jbe
cs
leave
adc
push
test
adc
add
outsl
lcall
jmp
ret
push
scas
addb
jecxz
jecxz
repz
push
lods
test
or
rol
mov
sarl
mov
jg
mov
push
jne
push
jns
scas
ja
notb
cmp
popa
fists
inc
xchg
jl
mov
xor
pop
add
test
xor
loope
sbb
adc
push
jl
add
mov
loop
xchg
nop
ja
push
popa
sub
sarl
xor
adcl
std
xorb
mov
addb
repz
pop
jne
mov
imul
sbb
and
popa
mov
cmp
test
bnd
sbb
imul
das
or
jns
lahf
adc
lret
or
cmp
pop
arpl
add
shll
sbb
test
jnp
jb
movsb
mov
decb
add
fidivs
mov
xorl
outsb
imul
sub
imul
pop
fstpt
inc
mov
dec
cmc
mov
or
pop
push
movsl
loope
fcompl
inc
cmc
out
mov
sbb
dec
out
mov
aaa
repnz
loop
jmp
rol
sti
pop
adc
mov
pop
popa
xchg
dec
orl
dec
repz
sbb
cmp
mov
or
jge
and
rclb
ror
popa
jne
dec
push
jb
xor
fs
lcall
test
test
das
test
jg
add
dec
ss
in
out
pop
mov
xchg
je
add
xchg
xchg
sbb
cmp
xchg
fsubr
pop
sbb
out
fstps
aad
pop
mov
aam
pusha
int
xlat
sti
push
xor
jmp
pop
je
xlat
and
xchg
test
xor
xor
cmpsl
pop
daa
adc
xchg
jg
aaa
lret
decb
mov
ljmp
mov
fwait
js
lea
addl
jmp
inc
mov
imul
fadds
call
stos
scas
and
insl
ljmp
sbb
leave
icebp
sub
push
nop
movsl
fcoml
out
stos
and
cmp
lods
fs
cli
ja
dec
jno
push
mov
mov
in
push
jg
jo
clc
inc
cwtl
sub
push
or
rorb
in
inc
cmp
add
add
aad
shll
js
cmp
or
sub
in
nop
inc
ds
jae
repnz
rcr
dec
xchg
xchg
ret
and
stos
icebp
lds
dec
stos
repnz
idiv
mov
iret
in
push
jnp
mov
inc
adc
mov
and
js
lods
pop
pop
sub
xor
insb
insb
lret
mov
lods
lret
das
adc
imul
mov
xchg
outsl
mov
ljmp
cmp
fsubs
fimull
pop
adc
xchg
and
movsb
jp
adc
icebp
xor
rolb
adc
jne
xor
mov
sbb
cmp
cmp
in
mov
dec
call
cmp
movsb
mov
add
jmp
lock
rolb
cmp
lahf
js
outsl
push
imul
out
imul
daa
popf
mov
push
aam
cltd
sub
pop
outsb
test
mov
gs
test
popf
into
cmp
roll
push
dec
mov
imul
ljmp
mov
loope
add
pop
ss
in
add
je
pop
outsl
mov
inc
cltd
arpl
jbe
adc
jge
and
lods
mov
pop
xor
pop
xor
divb
fildl
iret
mov
in
jle
ret
xor
pusha
push
mov
nop
pop
imul
xor
mov
cmp
add
jns
mov
jg
jne
xor
pop
nopl
ljmp
lock
loop
mov
daa
or
or
sub
xchg
shr
jmp
or
int
jmp
into
push
loopne
xchg
or
movsb
inc
scas
sti
push
loopne
mov
subl
icebp
jb
pushl
pop
in
movsb
das
jns
shrb
mov
data16
fisttpl
pop
ret
cli
mov
cmp
push
push
push
js
fldpi
or
and
scas
mov
push
mov
lds
mov
push
loop
mov
xchg
cmp
loope
stos
adc
lret
ja
cmp
cmp
movsl
fdivp
outsb
jno
inc
loopne
pop
adc
lock
ds
cmp
mov
loopne
dec
ja
aad
lock
lods
enter
loop
test
incl
call
jmp
pop
push
push
outsl
cmp
test
cmp
mov
push
jmp
pop
mov
add
mov
xchg
ja
pop
push
mov
das
mov
loop
xchg
imul
dec
jmp
pop
xor
test
or
inc
in
adc
sbb
lret
xchg
or
push
stos
push
mov
adc
xchg
lahf
push
daa
mov
stos
dec
icebp
js
sti
cs
rorb
push
or
xor
pushf
mov
lret
jne
cmp
xor
pop
icebp
int3
cmp
rorl
jge
xor
and
mov
insb
pusha
add
xchg
lds
mov
ret
pop
mov
in
cltd
inc
or
xchg
in
xchg
push
mov
jle
loopne
fnstcw
dec
lock
nop
fmuls
aas
in
pop
es
cmpsl
xchg
fcompl
jne
xchg
mov
xor
insb
jne
je
icebp
inc
sahf
jge
out
push
mov
in
lds
adc
addr16
fst
pop
imul
iret
or
or
incl
dec
mov
sub
xchg
jo
xor
push
sub
push
test
dec
dec
pop
ja
pop
gs
jp
mov
push
and
xorb
inc
sub
mov
pop
jp
out
push
jbe
cmpl
jmp
or
sbb
xchg
dec
pop
or
fists
iret
fldt
nop
xchg
adc
xchg
mov
mov
mov
jnp
pop
push
inc
gs
pop
fwait
ret
subl
sbb
adc
or
aam
pop
sti
jns
fs
jecxz
fbstp
pusha
ja
xor
test
add
mov
jns
inc
fsts
jp
add
mov
pop
xchg
aaa
loope
mov
pop
mov
cmp
mov
add
leave
arpl
pop
repz
addb
jp
jl
xor
gs
push
xchg
call
mov
lods
xor
adc
jns
cmp
and
int3
fistpll
xor
imul
cmc
or
cmp
xchg
fs
add
mov
aaa
mov
in
push
mov
fiaddl
in
roll
scas
fs
or
xchg
aad
or
pop
or
ss
inc
cmp
cli
test
pop
or
jae
adc
lods
mov
sbb
dec
scas
push
mov
and
ret
mov
adc
scas
inc
and
call
clc
int3
inc
xlat
mov
fidivrl
push
inc
mov
ret
or
outsl
stos
test
pop
xor
push
andl
std
adc
jb
sbb
lcall
sbb
int3
das
jae
dec
or
mov
xor
inc
daa
mov
xorb
push
inc
mov
mov
add
lret
bound
mov
mov
out
or
sub
add
shll
lret
adc
xor
arpl
rorl
es
cwtl
es
sahf
inc
dec
into
dec
flds
scas
jno
sbb
sti
and
mov
xor
pushf
pop
lret
jne
jns
lds
lret
xor
cmp
or
jno
xchg
imull
ds
btr
or
mov
daa
adc
out
xchg
int
sbb
lret
bound
push
xrelease
icebp
enter
sbb
mov
jb
cmp
pop
fsubs
popf
fs
out
in
dec
aad
mov
or
mov
or
mov
push
inc
xor
stc
aam
pop
pop
fnsave
inc
sub
and
inc
inc
imul
jbe
push
lahf
sbb
mov
pop
pop
icebp
leave
sbb
mov
rorb
in
xor
test
mov
push
inc
xchg
das
test
ljmp
pushf
adc
mov
adc
jmp
cmpsb
and
and
pusha
into
es
fwait
sbb
stos
out
in
jo
dec
hlt
jg
scas
or
ret
ret
cmpsb
push
xchg
mov
imul
aad
adc
inc
es
and
test
int3
mov
push
sbb
aam
punpckhdq
sbb
lock
arpl
cmp
add
mov
and
int
mov
lret
xor
mov
jno
xor
fmull
lds
loope
jne
pop
jno
mov
mov
mov
repnz
or
sub
or
mov
mul
adc
or
into
negl
clc
orb
xchg
and
insb
push
or
cmp
add
xchg
fstp
lea
das
pop
stc
pop
sbb
test
pushf
xchg
popa
notl
loope
jmp
jb
sbbb
inc
hlt
and
add
push
and
insb
adc
jbe
mov
or
add
fadds
scas
scas
nop
add
xchg
test
cmp
sbb
jns
mov
cmp
aad
xlat
sub
aaa
mov
fucomip
cmc
sub
mov
or
movsb
jmp
ret
addr16
add
jne
icebp
les
jo
call
inc
aam
dec
lcall
das
ja
sahf
cmp
daa
loop
xor
cli
pop
push
lahf
jnp
aad
in
movsl
sbb
pop
push
sbbl
nop
add
mov
mov
in
ret
repnz
and
adc
adc
jae
lret
outsl
adc
lcall
fists
lock
aam
mov
jnp
xor
outsl
dec
mov
push
mov
sub
add
cmpsl
push
pop
pop
mov
cmp
xchg
in
pop
fistl
fadds
rcll
mov
cld
add
imulb
shlb
popf
testl
adc
and
sbb
dec
clc
adc
jge
cmpsl
std
fldl
movsl
out
movsb
pop
aad
aaa
aas
adcb
xchg
xchg
mov
mov
sub
push
xlat
mov
loop
pshufw
dec
jmp
sbb
adcb
push
lock
jae
push
cs
adc
xor
jnp
rclb
int3
fdivrp
clc
stos
mov
or
cld
jne
ljmp
in
data16
jb
push
add
inc
sbb
ja
xchg
scas
jb
mov
icebp
insl
lock
gs
and
addr16
xchg
mov
jb
pop
jle
fstp
call
idivb
das
sbb
mov
push
pushf
jge
cmp
push
cwtl
test
and
adc
into
pop
inc
leave
or
pop
out
repnz
popf
mov
dec
mov
movl
inc
mov
andl
or
jne
aas
sbb
sub
add
clc
mov
insl
mov
inc
testb
mov
jp
adc
mov
mov
les
mov
xor
sub
gs
stc
fmuls
in
push
test
pop
repnz
test
in
lcall
adcl
es
icebp
shl
cmp
imul
dec
jnp
in
adc
push
jl
ja
sub
es
mov
pop
aas
jl
sbb
popa
outsl
stos
and
jmp
jb
and
jbe
dec
jp
cmpsb
fsubs
pop
dec
insl
test
js
pop
sbb
mov
xor
hlt
in
insl
out
jmp
stc
jmp
or
cmp
mov
test
mov
repz
nop
fs
rorl
mov
scas
and
loop
inc
test
enter
cmp
xor
mov
rcll
in
pop
int3
call
inc
fidivrs
and
xor
ret
iret
xor
repnz
xor
inc
pop
add
sbb
into
push
addl
mov
sti
fs
insl
cmp
sub
stos
std
stc
jle
sbb
dec
mov
mov
jecxz
inc
push
std
push
pop
stos
jbe
mov
xchg
dec
and
pushf
mov
sbb
stc
repnz
add
pop
negl
ja
in
sub
xor
pusha
mov
mov
cmpb
push
cmp
test
mov
add
push
mov
push
addl
cmpsl
mov
fldt
xor
orb
ficoms
inc
lahf
shr
mov
js
js
mov
or
mov
test
push
cmc
sbb
and
rorl
stos
pop
pop
sub
insb
sbb
scas
popa
and
jecxz
js
pop
aad
addl
dec
mov
in
rorb
in
orb
ret
adc
xor
enter
mov
outsb
add
stc
imul
xor
lahf
out
lret
inc
movsl
fsubs
arpl
cli
jecxz
jge
jnp
hlt
dec
fists
arpl
mov
mov
pop
out
dec
ss
or
aas
pop
mov
pop
push
pop
out
int3
push
iret
lret
imul
in
push
jbe
xor
lcall
fwait
or
stos
hlt
lcall
in
dec
cmpsb
sbb
leave
out
cmc
gs
fwait
mov
jg
inc
push
mov
cli
sbb
movsb
inc
sbb
mov
imul
int
loopne
adc
cmpl
push
add
mov
xor
xor
rcr
push
sti
mov
sahf
adc
shll
shrb
stos
and
mov
rcrl
push
mov
cmc
popf
fcmovnu
sub
mov
jecxz
arpl
iret
std
fmuls
ret
cmp
rclb
lea
enter
mov
push
push
xchg
pop
and
push
lock
jns
cmpb
mov
sub
sub
jne
or
fbstp
add
mov
shr
cmc
adc
clc
hlt
sbb
add
push
dec
loop
push
add
movsb
repnz
mov
mov
jb
data16
cli
jns
and
imull
shrl
les
iret
mov
cld
test
push
push
out
test
in
mov
sub
ss
sbbb
scas
sub
sub
mov
mov
mov
ficompl
mov
mov
stos
shrl
aaa
sahf
repnz
mov
imul
imul
loope
xorb
mov
daa
xchg
xor
movsb
dec
in
inc
sbb
and
jbe
add
popa
mov
dec
xlat
and
loopne
or
jecxz
lock
in
aam
dec
xchg
mov
lea
sbb
inc
adcb
jle
test
test
stc
fnstenv
js
shl
shlb
push
mov
imul
imul
mov
inc
shrb
daa
add
pop
sub
fs
pop
stos
adc
loopne
push
sbb
je
jbe
and
push
stos
xor
es
loopne
andb
std
pop
movsl
enter
nop
mov
outsb
mov
enter
outsb
out
dec
jg
jmp
lds
inc
in
movsb
je
jle
push
fnstcw
pop
jns
mov
xor
test
inc
fwait
jl
js
insb
jp
cmp
sub
in
loope
sbb
dec
repnz
pusha
repnz
push
mov
and
icebp
rcl
sub
lods
or
mov
mull
ja
sbb
xlat
xchg
dec
ffree
fmull
cltd
es
cltd
jno
adc
sub
mov
jae
jnp
xlat
pusha
mov
add
fists
jecxz
pop
mov
mov
insl
mov
xlat
mov
sub
adc
out
dec
xchg
lods
leave
inc
cltd
cli
jmp
xor
mov
pop
xchg
mov
cld
push
out
sbb
std
jns
mov
bound
test
pop
es
jge
inc
lahf
pop
arpl
lds
stos
xchg
lahf
sub
and
xchg
xor
cmp
sahf
dec
dec
push
xchg
cmp
dec
inc
inc
jnp
add
inc
mov
xchg
mov
sbb
lods
mov
testb
arpl
test
xchg
mov
xor
mov
je
jge
jb
pop
push
pop
add
mov
subl
cmpsl
mov
test
stc
mov
and
leave
jecxz
dec
add
sub
scas
frstor
sbb
xchg
and
or
push
pusha
and
mov
jnp
xor
push
add
mov
dec
or
sub
jge
lret
call
mov
popa
cmpsb
dec
push
fisubrl
fstpl
sbb
xor
ror
aaa
ffreep
das
pop
leave
setle
mov
push
push
out
cltd
or
dec
cwtl
mov
xor
cltd
gs
jecxz
out
mov
enter
jg
cmpsl
mov
cli
mov
addr16
lahf
movsl
std
in
pop
mov
jns
loop
mov
insb
stos
push
xor
scas
or
enter
cmpsb
loop
cmp
shrl
mov
fldt
dec
push
cmc
inc
sbbl
std
imul
leave
mov
mov
dec
aas
inc
cmp
mov
lods
pop
nop
adc
std
mov
xchg
cmp
ffree
and
pop
sar
mov
add
jno
leave
inc
div
jl
lods
jb
imul
addl
mov
lock
jecxz
cmpsl
cmpsl
sub
sahf
je
and
inc
jecxz
add
mov
out
flds
xlat
mov
movsb
xor
setne
imul
ret
das
ja
or
inc
shll
cli
sub
ljmp
sbb
and
inc
or
pop
shlb
cmp
gs
clc
cli
add
mov
mov
or
scas
dec
gs
push
clc
jmp
mov
jo
testl
adc
xchg
or
xchg
dec
pop
push
insl
sub
cmpsb
int3
push
lcall
xchg
xor
inc
movsb
push
lea
push
mov
fwait
pop
xchg
or
ljmp
gs
mov
and
ja
enter
xor
add
orl
xor
icebp
jb
out
cmp
and
jmp
dec
gs
push
or
jno
fcomps
sbb
je
gs
sahf
scas
jmp
or
andb
xchg
inc
cmp
out
lahf
or
aad
lret
mov
and
lret
imul
mov
jp
or
adc
mov
mov
adc
push
inc
js
cmp
push
lahf
xor
loopne
push
mov
xchg
mov
pusha
hlt
or
xchg
mov
loopne
fisubrs
xor
scas
adc
cmpsb
int3
fisubs
sti
mov
dec
xor
pop
popf
dec
scas
psubusw
add
inc
xchg
mov
add
adc
pop
cs
cmpsb
pop
test
loopne
cwtl
and
cwtl
cwtl
dec
adc
adc
popf
int
sub
arpl
jmp
popf
xchg
pusha
inc
inc
fs
jmp
mov
xchg
repnz
out
add
sbbb
mov
and
cmp
adc
push
dec
ret
or
xchg
push
lretw
sbb
xor
cs
out
lret
jne
sub
pop
adc
xor
push
std
push
in
mov
add
lods
je
cmp
sbb
cmp
xor
mov
cli
aam
cmp
ss
es
jle
scas
jl
and
sbb
pop
in
orb
pop
clc
ljmp
stos
int
sub
pop
sub
xor
jge
imul
insl
stc
push
imulb
mov
sub
scas
mov
lods
cli
in
jle
aaa
loopne
jp
cmp
jmp
andl
push
out
mov
inc
sub
push
mov
test
and
mov
in
clc
adc
clc
std
sahf
mov
add
fldenv
icebp
dec
sbb
xchg
scas
cmpsb
aaa
pop
and
push
sbb
in
dec
std
insl
jno
pop
shl
dec
les
sbb
subb
mov
and
push
sub
ret
mov
mov
leave
int
lret
adc
aad
sub
and
ficoml
ljmp
cld
xlat
insb
mov
or
mov
adc
inc
fbstp
into
xchg
mov
jno
dec
decb
pusha
mov
pop
into
add
aam
and
shll
iret
push
push
cmc
add
shll
test
lcall
add
ljmp
repz
js
push
xor
daa
int3
test
stos
push
shlb
adc
or
jnp
xchg
xor
dec
pop
decl
mov
mull
fldenv
dec
jmp
mov
dec
or
jne
jo
xchg
push
xor
or
dec
cmp
js
hlt
fadds
xchg
xchg
inc
fwait
push
cmp
inc
aad
xchg
repnz
mov
sub
std
xor
push
mov
or
filds
iret
adc
sbb
pop
aaa
or
pop
lds
xlat
lcall
cltd
out
adc
jne
or
fnstcw
jle
pop
jae
mov
out
xchg
outsb
and
fsubrs
pop
test
lret
loop
test
movsl
lret
idivl
pusha
mov
mov
mov
push
dec
xor
jmp
popf
push
lea
aad
sahf
or
dec
mov
or
adc
loop
dec
out
mov
aas
jecxz
mov
inc
jae
not
xor
and
repz
fsubrl
cli
jmp
mov
pushf
push
sbb
enter
jmp
lea
movsb
mov
jg
dec
jge
xor
movsl
imul
lret
adc
icebp
jno
out
dec
movsb
out
mov
scas
rorl
dec
xchg
dec
leave
sbb
sbb
sub
push
push
rolb
dec
push
xchg
outsl
lret
test
push
mov
data16
sbb
cmpsb
xchg
stos
cs
js
rol
testl
jns
sub
xor
jb
iret
add
xchg
jo
xlat
xchg
xor
movsl
add
in
aad
fisubrl
push
inc
fisubl
push
xor
xchg
scas
jp
out
push
aam
inc
jp
or
adc
stos
outsl
movb
movsb
mov
xchg
lahf
add
mov
jo
add
imul
movb
inc
ret
outsl
mov
and
rorl
cmpsb
lcall
inc
inc
test
mov
int3
aaa
popa
jg
std
jb
stos
xlat
pop
cmpsl
dec
add
sub
mov
ja
lock
dec
aas
pop
into
lods
adc
mov
ljmp
sbbb
inc
cmp
push
mov
into
mov
xchg
push
jne
data16
xor
out
insb
bound
scas
xchg
fdivs
in
mov
ret
insl
push
dec
rol
dec
jp
dec
xor
xor
mov
test
pushf
roll
js
scas
pop
jbe
xchg
add
jne
add
data16
outsl
ja
pop
std
aas
dec
pop
jge
or
push
pop
lock
cltd
pop
mov
loope
xchg
cmpsb
pop
jb
mov
fcompl
adc
pusha
dec
push
mov
sub
pop
jns
ret
dec
mull
inc
sahf
arpl
fildl
push
mov
jno
sub
sbb
sbb
test
pop
ss
je
lret
dec
dec
jae
mov
jno
xor
daa
inc
je
pop
xchg
jg
add
out
pop
mov
cmp
std
arpl
hlt
mov
inc
jbe
in
loopne
daa
shrb
sub
cmp
xchg
pop
jae
adc
pop
xchg
push
or
lods
hlt
mov
and
shl
sbb
lock
sti
lds
inc
add
mov
push
jmp
xor
or
xchg
xor
and
jle
jae
pop
int
sbb
dec
lds
sub
ret
push
mov
dec
xor
insb
int
dec
mov
push
xor
enter
addr16
loopne
fdivr
fs
mov
sbb
out
movsb
adc
pop
ss
xchg
out
out
inc
or
jecxz
test
pop
add
jl
out
mov
push
in
rorb
decb
jg
sbb
sti
jnp
cmc
inc
cmp
cltd
hlt
std
iret
or
stos
popa
cwtl
insl
int3
and
adc
fsts
or
std
and
and
sti
push
jns
shrb
std
push
rol
loope
in
jg
sbb
adc
sub
fistps
fsts
or
xlat
aaa
dec
int3
in
jle
push
stos
ret
push
gs
gs
jge
arpl
mov
xchg
in
pop
jp
push
out
adc
mov
mov
jae
sbb
fisubl
test
bound
shll
call
repz
in
fs
je
lods
int
mov
xchg
push
scas
inc
popf
lret
in
es
mov
cmpsl
aam
adc
jae
push
sbb
jae
clc
push
lret
movsb
mov
jge
and
rorl
jns
mov
hlt
scas
aas
sub
enter
and
sbb
jmp
lahf
xchg
fldt
cmp
jo
pop
rorb
iret
xor
adc
jmp
add
jl
loop
xchg
pop
repz
sub
pop
cmp
cli
into
mov
lret
pop
sbb
pop
sub
xorl
maskmovq
testl
xlat
pop
icebp
shlb
loop
cmp
adc
imul
out
fabs
and
and
es
iret
pop
or
loop
mov
popf
lods
xchg
xor
mov
jl
sbb
cli
movsb
testb
jmp
jecxz
popf
lahf
das
cmp
mov
dec
test
daa
pop
out
sub
xlat
hlt
cltd
icebp
std
sub
aas
loop
push
add
jae
pop
xchg
sbb
adc
pop
stos
jge
cmpsb
fstpl
shll
jo
mov
pop
aad
leave
mov
and
inc
mov
fdivs
pop
fs
ds
movsl
into
cmp
ja
and
push
xchg
jns
scas
shrb
inc
cmpsl
or
push
mov
cmp
xor
jns
mov
inc
mov
mov
add
push
ret
in
stos
or
mov
xchg
test
xor
and
fdivrl
ja
repnz
leave
adc
sub
push
jae
lcall
scas
jne
loop
xor
sub
add
mov
inc
mov
loope
jb
dec
mov
in
imull
lods
push
sbb
lret
daa
vsqrtpd
xchg
int
in
int
lahf
mov
call
dec
dec
jp
aad
pop
jno
sub
mov
pop
dec
aas
loop
daa
or
es
add
inc
mov
mov
sbbl
dec
hlt
or
xor
lahf
aad
jnp
loop
enter
mov
dec
cmp
aaa
ret
shr
mov
mov
add
test
add
inc
push
sbb
xchg
sbb
dec
jmp
es
xchg
clc
mov
cwtl
cmpsb
push
mov
fwait
or
ret
sbb
xor
jbe
out
xchg
inc
dec
xor
or
pop
dec
and
andl
xor
pop
jo
pop
pusha
mov
or
clc
mov
sbb
pop
mov
and
mov
add
mov
dec
dec
adc
repnz
push
fidivrl
mov
ficomps
lret
mov
dec
stc
addr16
test
mov
mov
cmp
mov
cmp
je
mov
lret
or
cltd
jo
dec
xchg
jo
sub
leave
pop
daa
loope
dec
and
sub
in
lcall
mov
aas
jg
mov
cli
repnz
popa
jecxz
sub
and
push
icebp
mov
cmp
lock
mov
loop
ss
pop
fcoms
das
out
popf
mov
data16
dec
add
mov
jae
pop
pop
pop
loop
mov
not
mov
cwtl
pop
dec
ja
mov
pop
pusha
iret
lock
imul
fwait
dec
pop
test
xchg
xor
fnstsw
pop
sbb
loop
cmpsl
out
lahf
ret
hlt
fstps
pop
cmp
les
andb
jecxz
mov
adc
dec
mov
xchg
push
pusha
aas
sub
outsl
repnz
inc
bound
sbb
or
out
ja
adc
push
jg
cltd
pop
jl
mov
aad
and
inc
jo
pop
sti
mov
movsl
sti
add
fisubs
scas
adc
xchg
xlat
pop
mov
jnp
divb
cmp
and
repnz
cli
enter
ficompl
or
mull
dec
push
cld
pop
cmp
rcl
cmp
xor
gs
push
mov
add
addr16
inc
pop
cmp
imull
pop
inc
add
shll
xchg
dec
fnstsw
dec
xor
js
into
xorb
gs
into
hlt
jns
fucomip
fcmovnb
pop
arpl
adc
push
loop
nop
push
xchg
sbb
pusha
fstl
adc
shrl
mov
roll
dec
movsl
pop
dec
test
je
adc
repz
cvtps2pi
mov
push
add
pop
mul
lahf
movsb
inc
pop
push
pop
cmp
mov
bndldx
jnp
pop
mov
incb
mov
push
sub
fcmovb
ficomps
in
aaa
arpl
ljmp
std
les
mov
daa
out
sbbb
inc
adc
add
or
pop
fs
jae
add
mov
icebp
sbb
dec
mov
out
adcl
dec
dec
xor
dec
xchg
or
ljmp
push
das
sbb
jmp
aam
mov
fiaddl
mov
les
dec
cld
adc
gs
mov
jnp
or
pop
dec
enter
dec
lret
mov
and
jl
stos
loope
in
xchg
sub
repnz
sbb
scas
jmp
push
push
movsl
sub
lahf
dec
in
pop
jecxz
insl
arpl
jle
mov
sbb
movsb
mov
push
test
aas
and
mov
fadds
arpl
aas
jl
lock
ret
pop
xchg
push
loopne
adc
push
jo
scas
out
cmc
xchg
sbb
fiadds
xchg
bound
xor
or
aas
add
xor
mov
mov
in
sbbl
xchg
adc
imul
test
inc
pop
hlt
and
or
out
jns
ss
pop
push
xchg
movsl
xchg
or
mov
pop
orb
push
shll
in
sbb
fisubl
iret
or
negb
mov
stos
repnz
jo
jns
iret
add
mov
jge
imul
sub
out
into
sub
loopne
mov
cld
sbb
hlt
loope
movsl
out
in
xchg
leave
into
addr16
jp
mov
pop
push
arpl
and
sbb
scas
push
mov
push
push
gs
xor
jl
sub
cmp
mov
jecxz
test
push
and
das
sbb
in
test
adc
sub
push
insb
rorb
jae
popf
lea
pushf
adc
es
fwait
xchg
jmp
leave
mov
sub
in
pop
dec
jge
pop
cmp
clc
jge
cmp
or
xchg
fwait
sbb
jne
mov
mov
repnz
outsl
icebp
lret
mov
jb
mov
add
mov
stos
jae
dec
and
or
int
pusha
in
aas
add
xchg
inc
popf
aam
xchg
lea
shr
lret
mov
inc
mov
adc
je
in
sbb
leave
aam
lcall
xorb
sub
xlat
sbb
insl
push
sti
loopne
push
mov
sub
jg
dec
in
int
cmp
sahf
scas
or
pop
jb
nop
sbb
add
xchg
sbb
popa
push
add
sarb
jg
cld
cltd
add
in
sbb
mov
fnstenv
mov
dec
add
or
add
push
inc
adc
inc
and
lds
repz
sbb
daa
adc
int3
xlat
scas
jge
enter
mov
add
add
dec
mov
scas
xchg
pop
cmp
mov
ss
nop
leave
popf
sarl
fcmovbe
mov
and
aad
mov
js
mov
std
es
dec
cmpsl
sbb
mov
mov
or
mov
or
dec
je
adc
jne
inc
xchg
or
add
xor
andl
push
scas
inc
and
xor
aam
cmpsl
xchg
sub
lods
cmpsb
jae
lret
scas
scas
lahf
jb
pushf
add
cmp
movsl
mov
enter
out
dec
sub
push
leave
mov
stc
lret
pop
cmp
pop
int
pop
lcall
pop
mov
sub
movsb
gs
ds
pop
xchg
out
addb
mov
lods
xchg
xor
add
pop
movsl
out
adc
lcall
sbb
in
and
cmp
sbb
xchg
cmp
stos
mov
mov
mov
mov
xlat
stc
xor
pop
cmp
inc
test
fiadds
sub
cmp
test
shrb
cmc
inc
add
rcl
out
push
shl
ss
mov
test
scas
bound
sbb
inc
out
ljmp
inc
rorb
lret
and
mov
push
mov
mov
ret
sbb
add
xchg
cmpsb
cmpsb
test
cwtl
cmp
dec
dec
push
mov
dec
fsubs
bound
cmp
fwait
aas
cmc
push
xchg
hlt
popa
mov
push
mov
loopne
cmp
sbb
jb
push
dec
div
adc
pop
adc
pop
jecxz
pop
push
nop
inc
aam
outsl
jnp
aam
mov
sti
push
imul
xchg
dec
es
test
lcall
and
test
test
add
add
repnz
test
add
jle
sbb
and
loop
addr16
orl
out
aas
lea
mov
inc
inc
mov
and
addr16
lcall
out
stos
adc
popf
adc
lahf
cmpl
sti
popf
loop
xchg
aam
bound
mov
test
and
adc
jae
push
pop
jne
rep
xchg
dec
sti
or
sbb
pop
mov
mov
pop
stc
ljmp
ret
adc
cmp
int3
rclb
sarb
inc
mov
insl
mov
nop
sub
cli
push
add
int3
dec
daa
fcmovu
inc
int
out
add
jl
jl
xchg
fucomp
cmp
adc
popa
mov
jmp
push
or
cld
cli
iret
mov
mov
popa
pushl
push
cmpsl
mov
ljmp
xchg
xchg
divps
and
cld
pop
xorb
dec
inc
lods
xor
jecxz
roll
faddp
dec
and
es
gs
dec
loop
into
push
fwait
mov
xchg
fsubrl
lret
cmp
imul
cwtl
xchg
inc
jmp
inc
out
push
int3
mov
inc
rcll
bound
jo
aas
push
popf
add
aaa
cltd
add
fiadds
push
mov
mov
iret
push
or
fistpl
jns
ja
xchg
and
lea
cmp
int3
and
leave
rorb
daa
xchg
ds
jl
mov
sbbb
mov
add
fwait
pop
add
pushl
jns
shrb
aad
mov
pop
rorb
aas
dec
sbb
iret
xchg
in
das
mov
inc
mov
cltd
sub
inc
inc
mov
cwtl
rorl
mov
or
and
pop
or
insl
dec
sbb
inc
jl
adc
xchg
push
push
xchg
adc
cmp
ret
in
pop
sbb
nop
out
int
lods
inc
cmpsb
push
cmp
or
stos
pop
subb
mov
in
pop
mov
mov
push
pop
test
mov
stos
pop
iret
push
mov
rcrb
rorb
xlat
push
nop
stc
adc
inc
jbe
iret
ss
jl
xor
xor
mov
pop
pushf
faddl
pop
mov
push
dec
add
repz
cli
cmpsb
pop
mov
insb
pop
cli
or
sbb
jl
ljmp
out
jb
push
nop
jp
xchg
cwtl
lcall
rcrb
ds
cltd
outsb
leave
jecxz
dec
pop
jnp
push
je
sbb
ljmp
imul
lods
or
dec
mov
jne
inc
enter
xchg
fwait
test
add
lret
add
imul
fsts
dec
pop
xor
stos
xchg
xchg
arpl
or
cmpsb
adc
ficomps
mov
xor
fucomip
and
fistpl
cwtl
outsl
pushf
clc
test
push
add
xchg
add
inc
call
add
lcall
jo
and
xor
mov
cmp
fldcw
imul
sti
hlt
xor
mov
inc
mov
shrl
pop
incb
pusha
std
cmc
and
cmp
aam
xchg
add
pop
pop
imull
mov
ret
mov
insb
push
sbb
out
and
test
fcmovnbe
lcall
cmp
outsl
clc
lahf
arpl
scas
or
and
xor
mov
sub
jne
sub
xchg
into
mov
sub
push
pop
mov
std
div
dec
pop
loop
mov
cmp
repnz
add
dec
pop
ret
push
push
inc
outsl
pop
mov
repz
inc
sbb
test
xor
push
daa
leave
inc
js
add
aam
push
lret
mov
pop
rorb
jnp
add
xor
dec
int
lret
jg
sbb
xorb
and
jp
cmc
imul
mov
dec
jb
imul
shlb
xor
push
hlt
sbb
in
push
in
out
inc
cli
ffree
add
test
cmp
push
sbb
pusha
inc
movsb
mov
inc
xchg
fcmovb
cmp
popa
xlat
and
pop
lcall
loop
dec
cld
cmp
xorb
ret
movsl
mov
cmp
in
hlt
pop
dec
jle
cmpl
rcr
cmp
adc
cld
add
fdivrl
jl
enter
loop
fisubrs
jecxz,pt
xor
repz
mov
cli
xor
dec
mov
cmp
imul
xchg
add
xchg
and
and
fstpt
adc
push
mov
pop
xchg
sbb
repnz
sbb
insb
sub
cmc
pushf
loopne
fsubl
mov
or
jmp
int3
xchg
sbb
sub
mov
xor
rcl
lock
dec
xorl
push
inc
fisttpl
pop
pop
test
cwtl
loopne
jb
lock
dec
xor
adc
add
cmpsl
outsl
mov
push
push
xor
insl
arpl
bound
pusha
inc
pop
mov
mov
sbb
call
aas
adc
iret
push
jge
push
inc
dec
jle
in
icebp
rcrl
mov
or
dec
ljmp
inc
jp
xchg
sub
outsb
aaa
fwait
jmp
loopne
sbb
inc
pop
push
mov
enter
inc
xor
mov
ja
adc
pop
cld
mov
and
and
sbb
cmpb
sub
xor
add
aad
adc
sahf
insb
imul
jno
mov
xchg
enter
nop
icebp
or
add
pop
and
ljmp
mov
jo
pop
hlt
pop
fst
sbb
sub
stos
dec
movsl
das
dec
loope
and
inc
fcom
cwtl
xchg
lcall
adc
cmc
fdivr
fs
sbb
rorl
cli
sub
adc
bound
mov
rolb
pcmpeqw
and
adc
sbb
pop
int
lret
jge
sub
adc
adc
insb
std
icebp
adc
sahf
dec
movl
lret
nop
push
fisubrl
mov
jmp
or
sub
mov
inc
xchg
lea
sub
push
adc
cmp
xor
cmpsb
in
iret
addb
adc
aad
stc
push
testb
cmp
test
insb
cld
jbe
adc
adc
push
and
dec
dec
movsl
gs
push
gs
loopne
loope
mov
jecxz
pusha
dec
repz
je
sub
outsl
ljmp
and
cld
bound
adc
mov
jle
pop
in
sub
jnp
test
jo
les
lret
jnp
mov
adc
xor
out
cmp
fsub
sbb
push
pop
jge
iret
dec
lret
out
dec
lods
ds
and
mov
lret
addl
mov
sbb
sbb
sbb
or
pusha
or
xchg
lods
incl
test
stos
sahf
push
in
sbbl
outsb
pop
fptan
sub
in
insl
int3
mov
mov
inc
popa
cmp
pushf
in
daa
sub
inc
xor
adc
fdivl
xchg
daa
int
push
cmp
in
sarb
fldt
dec
pop
stos
dec
sub
ss
leave
cmpsb
sarl
ljmp
cmc
push
in
or
loopne
and
pop
or
sarl
push
mov
xor
scas
sahf
pop
mov
add
pusha
push
sub
lods
xchg
mov
mov
inc
shr
repz
aad
psubq
xchg
mov
pop
imul
test
xorl
sub
pop
mov
lahf
in
xor
xchg
push
push
and
xchg
add
lods
orb
stos
push
mov
lret
ret
imul
mov
pop
push
and
xchg
mov
mov
xchg
cli
call
mov
lea
cmp
movsl
xchg
arpl
cmp
fs
jno
add
outsb
mov
jbe
fbstp
xor
push
jno
addr16
and
out
popl
sarb
adc
addr16
mov
sub
inc
xor
jo
ficoml
loopne
cwtl
hlt
popf
sbb
push
lahf
and
mov
pop
lea
pop
mov
cwtl
push
pop
sti
xor
xor
in
rorl
sbb
mov
dec
loope
das
lods
cmp
shrl
popf
movsb
push
and
push
sbb
jge
hlt
sbb
add
ljmp
inc
mov
mov
cmp
dec
loope
pushl
fwait
aam
lcall
mov
daa
nop
cli
loope
mov
iret
lcall
call
mov
sahf
inc
sbb
sbb
pop
les
jl
mov
cmc
into
outsl
dec
leave
sbb
add
or
sti
sbb
sub
xchg
sbb
cmp
repnz
and
pop
mov
sbb
xchg
sbb
icebp
xchg
js
mov
xor
xchg
pop
jecxz
js
imul
faddl
pop
mov
loopne
dec
xor
xchg
add
in
mov
std
jae
mov
ficompl
arpl
cmp
movl
test
push
cmp
sbb
dec
arpl
jg
ficoml
sbb
in
push
inc
popf
push
cmp
shl
into
push
xor
test
jns
cli
stos
stc
dec
sahf
fbstp
sub
fcmove
lahf
and
mov
or
inc
fwait
movsb
xchg
dec
mov
lods
lods
cmc
xchg
jge
cmp
stos
pop
out
dec
push
insl
fisubs
jae
jecxz
stos
iret
ds
mov
fdivrs
int3
mov
lea
outsb
popa
lcall
inc
sahf
in
cmp
xchg
jmp
rolb
xor
adc
out
jb
xchg
js
cmpsb
mov
mov
cmpsl
inc
sti
lcall
cmpsl
fiadds
in
test
ds
sub
movsb
jg,pn
and
shlb
imul
pusha
mov
cmp
mov
mov
paddq
shrb
push
cmp
imul
icebp
stc
movsl
cwtl
mov
inc
inc
mov
es
pop
pop
cld
mov
in
add
faddl
je
sbb
sub
dec
shlb
lahf
movsb
pop
ret
or
mov
xchg
fistps
mov
iret
jno
dec
flds
inc
fisttpll
add
mov
jmp
inc
in
scas
jne
mov
xor
xor
xchg
xchg
or
lret
xchg
cwtl
inc
bnd
xor
and
lret
jmp
scas
inc
aas
mov
in
mov
fmul
mov
lea
dec
push
and
jbe
in
push
xor
and
jb
insb
pop
or
push
cld
inc
outsl
ds
mov
dec
dec
out
loope
sahf
mov
in
jge
xor
xlat
jbe
push
outsb
cmpsb
pop
test
push
pop
pop
sub
pop
ret
int3
push
nop
in
push
xchg
test
in
add
scas
shl
lret
sti
addr16
add
and
mov
or
imul
adc
loopne
lea
adc
call
ds
and
mov
shrl
dec
mov
enter
fildl
enter
cmpsb
daa
jae
sbb
adc
fldln2
adc
and
mov
and
pop
mov
shll
repz
dec
incb
in
fnstsw
push
movsb
lods
inc
arpl
scas
xchg
shlb
fcomp
inc
lcall
clc
cmc
mov
aad
negl
xor
dec
or
jl
sbb
push
cmc
mov
cmc
dec
xor
xlat
shl
loopne
pop
sub
dec
xor
loopne
repz
andl
mov
mov
dec
inc
daa
imul
mov
or
inc
cwtl
pusha
testl
addr16
fs
dec
setle
xchg
jle
xor
mov
or
in
enter
push
repnz
mov
iret
adc
test
pop
addr16
push
jl
dec
lcall
dec
push
fwait
movsl
mov
fisttpl
daa
gs
mov
xor
ret
imul
push
xchg
fists
xchg
out
cmp
shl
in
mov
leave
cmp
addb
sbb
mov
lret
call
jg
add
mov
out
sar
shlb
outsl
fwait
sbb
fimuls
rclb
out
inc
inc
jp
add
lods
and
xor
addr16
adc
loopne
push
mov
or
inc
jg
xor
rclb
push
mov
fidivs
push
push
stc
int3
imul
das
dec
cltd
loope
jl
roll
dec
addr16
jge
cld
pop
in
xor
pop
jl
imul
out
test
jecxz
cmp
dec
or
sub
ss
pop
mov
popf
outsb
jb
sbb
cli
leave
xor
cmp
push
sub
inc
repnz
adc
enter
sub
jnp
push
fwait
div
clc
jge
dec
push
insb
in
dec
js
pop
test
cltd
push
loope
inc
lods
lea
aam
and
and
out
and
xchg
ljmp
jb
jmp
loop
movsb
cmpsb
cmc
push
mov
dec
rol
mov
cmc
notl
add
imul
das
sar
les
xchg
cltd
rclb
mov
inc
test
mov
sbb
lea
imul
and
add
pop
and
push
ret
and
sub
sbb
xlat
dec
clc
fisttpl
mov
lock
rorb
fadds
sti
sub
jno
cli
adc
pusha
dec
lahf
inc
js
pop
sbb
decl
push
pop
sub
outsb
inc
fcmovne
ret
sub
or
inc
xchg
mov
sahf
leave
xchg
arpl
scas
dec
sti
push
fsubl
pop
mov
mov
xchg
add
sub
push
cmpsl
adc
sub
mov
cmp
add
jl
dec
sbb
js
jns
mov
lock
rol
aad
ficomps
cld
roll
outsl
sub
adc
scas
aad
sbb
call
pusha
jo
negb
fs
push
test
push
jne
lods
jne
cmp
push
dec
and
test
mov
jne
jmp
or
hlt
pop
scas
inc
daa
loopne
les
push
inc
adc
bound
dec
adc
ret
dec
cli
fsub
repz
dec
inc
push
cmp
mov
add
mov
or
imul
test
leave
inc
lret
in
imul
sub
lock
jge
mov
jno
sub
lds
leave
enter
lods
lret
js
je
xchg
jo
stos
adc
push
rcl
mov
push
daa
push
mov
sbb
or
xor
push
mov
mov
sbb
insl
sub
dec
fcmovu
in
aam
repz
jae
and
and
xchg
lods
lock
mov
sub
outsl
es
ljmp
mov
out
imull
out
ffree
les
pop
sub
outsb
or
push
inc
pop
lea
ds
movsb
aad
pusha
incl
aam
inc
jl
or
jne
dec
or
ret
and
or
xor
pop
fwait
or
push
jne
addr16
ljmp
cltd
ljmp
movsl
sbb
pusha
shrl
inc
cmp
sub
mov
dec
or
push
arpl
xchg
rclb
jle,pt
xor
popa
loopne
test
fwait
stc
cld
out
fcoml
or
mov
fwait
emms
cmp
or
stc
jecxz
outsl
push
cmp
push
mov
pop
ss
push
ljmp
lea
inc
push
in
je
shr
sub
out
xchg
arpl
and
leave
in
scas
or
stos
mov
es
jbe
aam
jp
scas
mov
cmp
rorb
sti
lret
mov
test
or
add
mov
stc
shll
jns
push
jno
or
pop
les
jmp
mov
cmp
fwait
insb
xor
push
inc
popa
movsl
pop
loope
push
retw
or
sbb
jl
pop
aaa
or
sbb
aad
dec
sahf
in
popf
add
fstps
mov
sbb
push
orl
push
mov
pop
daa
sub
test
push
inc
sub
pop
xchg
int
lock
stos
sahf
mull
mov
mov
sub
repz
pop
jg
sub
jl
push
mov
call
push
fwait
lods
fildl
push
inc
fwait
jo
dec
popa
push
stc
das
lahf
or
adc
sbb
fwait
lods
dec
ja
pop
xor
cmp
cmpsl
jmp
adc
push
lods
mov
nop
andl
inc
cmp
xor
cwtl
mov
inc
inc
jae
sbb
cmp
nop
cwtl
stos
inc
cmpsl
inc
test
data16
pushf
repz
push
ljmp
jae
add
rolb
mov
iret
dec
pop
dec
jle
rorb
je
mov
out
nop
sub
shll
lret
loopne
sub
fiadds
scas
add
data16
cmp
fyl2xp1
cli
push
arpl
aam
subl
jecxz
repnz
push
pop
les
xlat
xchg
repnz
and
xor
fwait
inc
cmpsl
loop
pop
in
sbb
mov
pop
mov
jmp
rol
test
mov
mov
sub
push
dec
jge
dec
in
arpl
pop
push
jb
arpl
movsl
xorl
pop
lock
and
mov
push
sbb
js
daa
stos
mov
push
xchg
add
sysexit
and
push
mov
fbld
mov
dec
in
add
test
fistps
ficoms
sahf
fdivl
popa
test
testl
lret
lret
les
pop
or
jns
call
fstpl
mov
cmp
in
push
add
and
inc
mov
adc
loopne
test
addr16
into
cmp
push
and
movsl
add
push
cmp
add
mov
xchg
in
aaa
inc
cmp
push
insb
inc
inc
arpl
decb
shrd
cmc
stos
insl
jns
aam
rcrl
or
dec
xor
mov
pop
xor
adc
cmp
mov
popa
mov
cs
xchg
xorb
pushf
rolb
add
in
mull
shrb
pop
adc
sub
ja
push
test
imulb
sub
push
popa
pop
mov
push
inc
repz
and
out
test
or
cmc
rcrb
shll
cli
inc
cld
enter
shll
dec
call
pop
jo
pop
dec
mov
cs
cmp
pop
out
lahf
mov
cmpsl
xlat
int
pop
pop
out
sbbl
ficomps
jne
nop
rorl
cmp
aam
push
ror
mov
cmovl
push
xor
dec
ss
push
mov
push
shlb
xchg
or
cmp
repz
loop
jo
jmp
sub
jmp
icebp
jnp
dec
mov
lods
xchg
cs
nopl
out
gs
dec
cs
add
call
mov
lret
jl
fs
jnp
loopne
and
mov
pop
fisttps
push
jp
clc
iret
and
add
loopne
xor
clc
sbb
adc
dec
popa
hlt
sbb
add
repz
aaa
cmovp
jge
mov
jns
cwtl
inc
test
mov
test
dec
shlb
jecxz
iret
jne
in
xor
sbb
rolb
out
subl
cmp
negl
mov
pushf
aas
mov
pusha
mov
push
dec
adc
fcoms
xor
cli
out
xchg
aas
xor
and
cmpsl
lea
mov
das
and
out
and
sub
lcall
ds
icebp
mov
rclb
andb
sbb
cltd
sbb
sarl
xchg
jecxz
xchg
daa
sub
mov
out
pusha
and
popa
rcr
aad
sub
insl
addr16
mov
adc
test
sbb
xlat
gs
out
bound
jl
sub
push
pusha
mov
push
mov
xchg
jl
shlb
jmp
lea
cmp
ss
subb
sub
mov
cmpxchg
and
popf
inc
cld
insb
cmc
dec
jl
add
pop
mov
push
je
sbb
aaa
inc
fcomps
sahf
inc
lea
out
icebp
testl
arpl
pop
outsb
xchg
cmc
aad
mov
inc
mov
adc
lret
test
int3
aam
les
fsubrl
js
mov
pop
pop
fs
aam
push
sub
dec
xchg
orb
cmp
sub
and
xchg
lea
push
cltd
adc
nop
jg
aam
sahf
lods
dec
sarl
movsl
cmp
mov
xchg
inc
lods
push
sti
mov
xor
js
cmp
fs
pop
dec
and
pop
enter
aas
jnp
cmpsl
icebp
xchg
inc
jne
mov
mov
sub
cwtl
jno
sbb
mov
cmpsb
sub
aas
inc
popf
mov
cmp
jns
cmp
das
pop
adc
inc
int
movsb
pop
movsl
and
inc
jp
adc
stos
icebp
xchg
add
int
or
lods
pop
mov
sub
in
movsl
jl
inc
add
sbb
out
sbb
cmp
aaa
lcall
lcall
sub
sub
js
clc
repz
and
or
mov
lea
mov
in
xlat
in
mov
jmp
rclb
inc
sub
jnp
pop
jmp
mov
mov
dec
adc
daa
or
inc
dec
fadd
les
xlat
iret
dec
jg
sahf
pop
movsb
leave
push
sub
cmp
mov
push
and
cmp
inc
sub
and
pop
arpl
pop
lods
pop
iret
enter
stos
mov
outsb
sub
call
add
sahf
faddl
mov
mov
aas
daa
sbb
mov
jb
add
pop
stos
in
or
rcr
subl
sub
pop
pop
inc
movsl
mov
ds
js
sub
js
into
add
gs
and
cmpsl
mov
imull
ficoms
loope
clc
cmpsl
test
mov
shl
push
add
mov
add
sub
call
jne
clc
sbb
cmp
xchg
scas
jle
cmp
dec
or
mov
cmp
mov
ja
lods
mov
shld
mov
jae
inc
mov
sbb
adc
cmp
in
in
cmp
mov
or
jmp
arpl
mov
sahf
mov
mov
sub
into
fdivl
movsb
pop
jb
popa
lcall
test
mov
pop
adc
push
scas
mov
xor
and
repz
mov
outsb
pusha
pop
bound
inc
xor
faddl
adc
jbe
push
mov
pop
sbb
cmp
dec
arpl
outsl
jge
sub
outsl
adc
adc
push
cmp
ds
push
pop
lock
mov
cli
aam
ret
call
jge
sarb
cwtl
shlb
fnstenv
rcll
iret
xor
mov
mov
mov
lods
adc
aaa
cmpsb
adc
inc
pop
jmp
inc
je
fucom
and
lods
incl
scas
cwtl
cmpsb
mov
dec
mov
daa
ljmp
sbb
jmp
inc
sub
je
mov
jbe
arpl
fadds
inc
inc
insl
fs
add
sub
adc
bound
add
inc
pop
sub
repnz
rcrl
cmpsb
loope
jmp
into
mov
sbb
les
and
in
dec
add
pop
jbe
xchg
nop
jle
xchg
aad
ljmp
add
inc
mov
test
pushf
mov
jbe
jbe
xchg
popa
push
cs
pop
pop
pop
xchg
ficomps
lret
fisubrs
ret
adc
mov
and
lea
mov
xchg
test
test
lcall
push
jp
mov
dec
enter
push
ss
pop
mov
mov
xchg
leave
sbb
inc
push
push
mov
xchg
jo
pop
enter
mov
test
sub
in
test
mov
inc
call
mov
inc
dec
sub
pop
nop
mov
pop
iret
adc
mov
push
push
orb
xchg
adc
mov
or
adc
cli
sbb
sbb
or
arpl
lcall
and
fldl
mov
push
mov
cmpsb
fisttpll
aas
and
jp
lret
pop
sbbb
lret
icebp
lahf
pushf
cmp
lods
loope
rol
and
nop
pop
out
pop
xor
ds
xor
sub
pop
inc
jbe
dec
mov
cwtl
sub
mov
sub
jne
sbb
pop
test
fisubl
cli
add
push
addr16
inc
and
push
je
xor
cmpsl
and
and
les
popa
pop
je
sub
pop
mov
lock
nop
xor
in
incl
mov
xchg
lods
in
inc
lds
ja
dec
jb
pop
push
xlat
sbb
pop
rcll
or
mov
or
das
mov
jbe
mov
shrb
cmp
inc
stc
jl
push
xchg
clc
outsl
mov
jmp
pop
fst
cmpsb
sub
dec
and
mov
enter
icebp
xchg
or
cmp
xor
fucomp
mov
inc
mov
mov
jle
inc
sbb
ljmp
das
xchg
popf
lret
and
rcrl
pushf
movb
mov
inc
adc
cwtl
pushf
out
jmp
dec
fisubs
jb
mov
push
outsb
jnp
mov
cmc
mov
out
xchg
add
in
loope
sbb
push
or
push
push
xchg
dec
jno
stos
push
dec
leave
pop
cli
add
scas
mov
mov
ret
jl
fisubrl
dec
fsubrl
and
mov
xchg
daa
mov
adc
xlat
ljmp
or
fldl
orb
mov
jbe
das
sub
mov
xor
outsb
ja
out
inc
mov
push
dec
in
dec
hlt
dec
lods
xchg
mov
add
daa
xchg
mov
or
add
dec
ficoms
jp
in
ss
mov
adc
push
shrl
sbb
xchg
mov
and
pop
inc
rcll
bound
aad
adc
cld
jb
xor
dec
fmul
int3
inc
add
push
jmp
lret
adc
jp
rcll
jne
fdivr
jnp
xlat
add
push
or
js
mov
in
test
pop
cmpb
pop
mov
enter
mov
test
dec
imul
mov
lret
pop
cmp
movsb
in
mov
cld
addl
imul
inc
popa
loop
add
push
movl
pop
and
lret
lcall
or
jno
ja
adc
inc
mov
cmp
sub
icebp
xchg
ja
inc
sahf
test
mov
inc
pop
out
iret
jecxz
fsubrs
movsl
pop
mov
mov
dec
clc
mov
pop
loopne
or
xchg
mov
xchg
sub
xor
xor
pop
jo
cmp
cmc
lods
call
aaa
mov
mov
std
sbb
addr16
notl
add
sbb
stc
cmp
cwtl
int3
cmp
fsubr
loop
and
xchg
icebp
jle
mov
xchg
xor
test
std
mul
pop
xchg
mov
push
push
ss
movsb
mov
sbb
push
xor
inc
or
xor
mov
jae
test
push
cmp
or
fidivrl
pusha
mov
adc
repz
or
pop
sub
mov
mov
clc
adc
add
pop
scas
call
sbb
mov
and
data16
sarb
lret
push
test
xchg
repnz
in
loop
ret
dec
adc
push
fiadds
jle
mov
rcr
ljmp
hlt
or
pusha
mov
mov
xchg
jbe
xlat
fisttpl
test
cmc
push
sbb
in
lcall
adc
sti
push
js
push
out
fincstp
pop
outsl
out
sub
out
aaa
add
hlt
and
xchg
cmc
clc
jmp
mov
and
jecxz
and
ds
sbbb
jle
sahf
cmp
mov
outsb
sub
ret
mov
pushf
jecxz
adc
jnp
pshufw
stc
adc
pop
rcrl
cltd
push
xor
addb
push
cmp
mov
and
icebp
push
mov
fstpl
and
call
sbb
int3
es
sub
ss
cmp
push
xor
add
mov
mov
aad
and
mov
aad
xchg
leave
imul
ds
sbb
xchg
adc
cmpsb
push
or
xchg
jecxz
popf
mov
aam
inc
push
stos
mov
jbe
clc
jecxz
jo
sti
push
cmp
mov
sbb
lret
jecxz
mov
lahf
lea
jge
mov
andl
push
adc
rorb
popf
mov
loopne
add
xchg
ret
dec
mov
push
cmp
rorb
mov
inc
push
incb
ss
add
imull
adc
out
xor
mov
fistpll
jbe
in
stc
cmpsb
lcall
xchg
arpl
jbe
jns
jmp
ret
out
jmp
adc
fs
add
mov
mov
inc
insl
adc
loop
sbb
add
idivb
daa
fisubl
test
jl
xchg
add
jb
int3
cmp
push
dec
rorb
jmp
inc
inc
bound
xor
cmp
dec
call
je
xor
neg
and
xchg
in
lods
xchg
fprem
cmc
push
jbe
add
dec
pop
mov
mov
push
js
in
movl
pop
mov
xchg
outsl
call
enter
sub
shrl
ret
imul
rol
xchg
ss
push
add
sub
xchg
ss
xchg
popf
add
sbb
mov
sbb
pushl
mov
arpl
ret
rcll
pop
sbb
es
testl
jno
mov
inc
roll
pop
ja
int3
cmp
mov
into
scas
pop
xor
cs
shll
sub
test
and
das
xor
mov
pop
je
clc
mov
cmp
arpl
push
mov
mov
bound
fistpl
mov
mov
inc
xchg
cmp
scas
lea
sub
popa
stc
ret
pop
or
cmpsl
ss
sbb
push
lcall
dec
adc
mov
pop
iret
outsl
sub
dec
xchg
add
inc
lahf
sub
pop
popa
or
pushf
xchg
std
ret
jp
gs
jae,pt
push
in
movsbl
jne
sbb
mov
scas
sub
cmp
test
adc
test
dec
and
inc
lea
aad
daa
stc
je
lds
inc
push
mov
xor
push
and
xorb
scas
xchg
ret
cmp
cmp
pop
sarl
xor
mov
fidivrs
in
pop
negl
or
sub
daa
jecxz
rcrl
aad
mov
pop
xlat
mov
in
loope
pop
movsb
scas
aas
stos
ficoms
call
jno
inc
xor
daa
xor
in
lods
mov
add
iret
cld
mov
lahf
mov
xor
jg
daa
sti
jb
sub
imul
icebp
out
loopne
lcall
sbb
pop
inc
push
loope
adc
and
sub
add
cmp
xor
rorb
hlt
or
cld
inc
popf
ss
jbe
adc
sti
lods
jno
sbb
mov
repz
mov
mov
mov
xor
daa
faddl
les
push
movsl
dec
sarb
iret
mov
mov
loopne
iret
sti
mov
mov
out
dec
lret
xor
insl
dec
cmpb
out
pop
nop
jl
lds
mov
add
in
inc
dec
imul
adc
or
or
das
outsb
add
scas
mov
pop
push
stos
sub
pop
mov
pop
mov
inc
jne
mov
push
mov
loop
mov
jnp
rcll
data16
mov
dec
mov
ds
rol
dec
les
shlb
test
push
or
adc
mov
inc
adc
sub
pop
fwait
rorb
insl
push
cmpsb
inc
pusha
jns
pop
add
ret
jo
jnp
pop
enter
or
push
or
and
pcmpgtd
dec
js
inc
mov
jbe
mov
rorb
xor
mov
mov
xor
loopne
cmc
and
or
and
fwait
mov
outsl
fwait
das
out
add
movsl
stos
aam
ds
in
add
in
pop
cs
clc
mov
addr16
xchg
test
movsb
push
pop
out
push
aam
daa
pop
cmp
push
jmp
andl
jle
insb
shr
and
lock
or
iret
jae
movsl
cmp
mov
jmp
sbb
test
push
pushf
sbb
xor
shll
push
jecxz
mov
xor
cmpsl
cmpb
lock
xchg
test
mulb
and
mov
out
dec
mov
jmp
fnstsw
cmp
jo
aad
jno
cmpsb
ljmp
test
fbld
ja
add
fwait
jl
pop
add
daa
mov
pop
pushf
sbb
or
jecxz
cmp
adc
testl
add
xchg
sbb
inc
pop
xor
popf
mov
cld
add
mov
dec
clc
mov
xor
xchg
inc
pop
push
loopne
mov
pop
adc
fimull
push
push
stos
mov
mov
in
push
cltd
pop
test
jp
ss
out
pop
fmul
push
movntq
xchg
adc
sbb
mov
cmp
pushf
jmp
add
push
test
or
fadds
and
lret
push
push
cmp
sbb
adcb
insl
jp
call
sub
pop
inc
jae
and
add
xchg
popf
ret
ljmp
mov
inc
je
adc
and
or
pushl
mov
and
xlat
in
inc
push
sbb
inc
call
xchg
push
inc
sbb
xor
xchg
push
out
and
add
pusha
add
mov
imul
lock
into
sub
lret
and
mov
xchg
mov
push
add
sub
sub
add
dec
mov
mov
or
cmp
out
push
insb
lahf
adc
mov
mov
cmp
pop
scas
xorb
js
das
cmp
addr16
leave
cmp
ficomps
mov
cwtl
pop
and
jnp
sahf
dec
ja
add
mov
sahf
insl
jne
stos
stc
jne
jg
inc
sub
jp
jno
out
xor
popa
fstl
das
jmp
ds
dec
pop
push
dec
jnp
in
cmp
andb
mov
mov
pop
les
pushf
and
pop
cwtl
fwait
mov
push
roll
pop
cmpsl
fisubl
je
dec
mov
rol
push
jno
push
sub
jne
call
jle
gs
cs
inc
and
incb
ja
cmpb
xchg
jg
cwtl
mov
dec
jnp
jbe
dec
sub
mov
pop
aas
hlt
ljmp
mov
sub
jge
enter
pop
int
sbb
and
add
call
inc
xor
or
xchg
lock
gs
mov
jns
adc
dec
aam
mov
mov
mov
jae
sbb
mov
pop
add
pop
subl
sub
mov
jno
repz
and
mov
ret
inc
shrl
inc
lods
sti
lock
inc
iret
and
les
sub
lcall
and
int
xchg
pop
adc
out
or
rep
adc
sbb
xchg
inc
inc
popf
stc
rcrb
std
cmp
push
and
mov
mov
add
jp
addr16
pop
xchg
mov
cmp
scas
leave
sub
xor
repz
pop
sub
jp
or
xchg
add
movsb
das
int3
xor
lcall
xchg
mov
or
lods
mov
xor
xchg
iret
xchg
fcomps
loope
xchg
lods
cmp
ret
mov
pop
cld
pop
insb
adc
push
xchg
and
dec
leave
and
and
push
push
mov
lret
shrb
adc
and
adc
out
and
jnp
fimuls
jno
pop
in
mov
mov
incl
mov
mov
out
fwait
daa
aad
mov
sub
jb
mov
push
fidivl
push
pop
daa
cmp
lret
cmpl
push
js
lds
xchg
jo
dec
mov
pop
cld
pop
adc
lea
inc
aad
xchg
xchg
adc
ret
sub
jo
scas
dec
stos
out
rorl
push
jecxz
dec
rcrb
jl
adc
repz
mov
js
mov
in
adc
cltd
ret
dec
jnp,pn
mov
mov
fldcw
inc
xor
cmp
pop
or
dec
mov
lret
adc
xchg
fsubp
inc
test
rolb
call
push
or
xchg
xchg
sub
sbb
insb
xor
mov
cmp
mov
mov
or
sbb
decb
movsl
iret
in
mov
ret
mov
jne
mov
mov
or
or
jns
popf
pop
mov
xchg
add
insl
pop
sub
pop
jbe
leave
push
lret
xor
jecxz
hlt
stos
cli
pop
jp
sub
sahf
or
jo
pushl
mov
adc
push
psrlw
dec
rcll
xchg
lahf
mov
aam
dec
inc
push
xchg
mov
mov
mov
incl
push
shlb
mov
pop
sbb
and
jno
or
lahf
push
out
adc
pop
insl
sub
jns
add
mov
push
jp
xor
mov
rclb
imul
out
xor
mov
push
divl
clc
test
jae
aad
jne
movsb
xor
or
jns
push
dec
jb
dec
jnp
mov
xchg
outsb
and
addb
insb
push
mov
jnp
mov
cmpsl
loopne
in
mov
in
and
xor
mov
jl
push
imul
lcall
inc
notl
mov
pop
sub
add
insb
repnz
xchg
cli
iret
lods
mov
ret
mov
add
sbb
sbb
aaa
jae
adc
lock
push
xchg
stos
test
mov
mov
xor
pop
mov
popa
ljmp
cld
lret
or
je
jp
cmc
test
inc
dec
stc
cmp
sbb
popf
test
cld
mov
enter
ret
mov
sbb
lea
cmpb
sarb
xchg
adc
lods
mov
iret
mov
shlb
mov
incl
xor
repnz
fwait
sub
adc
or
pop
jmp
mov
xor
sub
fucomip
mov
add
fsubr
leave
movsb
enter
jmp
out
adc
shrb
mov
lods
lea
or
fisttpll
jecxz
and
xlat
jmp
dec
test
call
inc
das
dec
jle
dec
fsubr
lock
in
mov
xchg
mov
stos
push
mov
add
inc
es
cltd
inc
xchg
add
insb
sub
push
lahf
and
das
faddl
dec
push
loop
pop
nop
in
jg
stc
in
inc
rol
mov
xchg
bound
lods
push
xchg
rcrb
ljmp
shld
mov
in
loopne
loopne
xorl
mov
and
aas
xchg
and
xchg
jae
sbb
out
rol
lahf
push
dec
or
pop
dec
mov
sbb
or
test
addr16
pop
sbb
insb
sar
sahf
xor
iret
xor
mov
mov
sbb
pushf
jnp
xlat
jbe
mov
adc
add
add
mov
enter
sbb
mov
push
lret
test
jmp
fwait
rorb
mov
mov
sti
push
fdivrs
pop
nop
adc
mov
cmpsl
int
jmp
jo
in
push
icebp
int
cli
daa
pushf
cld
andl
arpl
push
stos
xchg
mov
push
mov
and
sub
add
jne
adc
jle
enter
xor
sti
sbb
fnstcw
in
push
cmpsl
pop
lods
dec
pushf
pop
mov
cmp
cld
cmp
sub
andb
lahf
add
mov
push
sti
out
fcmove
xchg
subb
jmp
mov
adc
push
sub
cmpsb
inc
ljmp
jle
sub
push
testb
ret
adc
sbb
std
leavew
aaa
mov
mov
xchg
popa
das
jp
rcll
cmpsb
iret
push
cmpsl
idiv
pop
pop
cmp
fadds
add
push
std
jae
sub
dec
or
inc
lock
in
divl
into
int3
mov
jecxz
and
sbb
jl
into
in
or
jo
ret
lcall
push
mov
jb
pushf
mov
push
sbb
sar
adc
movsl
inc
cmp
dec
stc
inc
lds
bnd
mov
adc
jp
mov
rcll
mov
mov
pop
dec
ja
pushf
push
movsb
jp
cwtl
or
pusha
add
xor
repz
dec
lock
push
cmp
gs
add
lret
roll
lcall
sbb
lods
into
cmpsl
adc
in
andl
cmp
push
dec
int3
dec
cmp
cmp
movl
ljmp
sub
lahf
jg
mov
xchg
cmp
add
xchg
arpl
inc
jecxz
mov
lcall
lret
push
btc
jl
sbb
xchg
dec
cmp
ret
nop
push
inc
mov
xlat
fidivrs
pop
push
insb
fwait
xchg
push
mov
sub
orl
popf
inc
jmp
roll
add
lcall
icebp
cmp
xor
adc
mov
sub
sub
pop
test
xor
xor
ret
aaa
add
loop
inc
pushf
loop
push
mov
cwtl
mov
or
xor
mov
out
fcomps
inc
jne
mov
lcall
ret
out
fisubs
or
stos
inc
fistpll
popa
xchg
mov
inc
cmp
pop
xor
sbb
aam
xchg
stos
fimuls
sahf
pop
pop
nop
inc
call
insb
push
xchg
mov
outsb
nop
sub
push
je
mov
inc
repz
mov
lock
jno
jb
vpsubq
dec
arpl
mov
xchg
lock
jecxz
xor
or
lods
cmp
out
into
sub
std
mov
int
sub
pop
sbb
xor
in
divl
pop
cltd
push
or
push
scas
mov
inc
xchg
xchg
incb
or
cmp
ljmp
insl
cltd
mov
push
loop
cltd
les
cmp
stos
sbb
es
call
aaa
cmc
dec
aam
das
dec
push
pop
outsb
xchg
loopne
je
in
push
rclb
pop
test
and
inc
and
adc
or
ret
jp
mov
and
xor
sub
add
mov
lret
insl
call
lret
fsubr
jmp
dec
imul
jne
inc
inc
mov
enter
and
or
mov
outsb
popf
shlb
lcall
test
cmpsl
mov
mov
scas
out
mov
int3
fwait
jae
shlb
gs
es
repz
push
jmp
pushf
test
sub
pop
movsb
out
lock
sbb
sbb
sarl
mov
pop
pop
mov
inc
inc
repnz
jmp
arpl
shll
add
push
int3
xchg
adc
pusha
fs
and
ror
mov
cmp
in
loope
mov
dec
mov
mov
pop
adc
sbb
jbe
mov
xor
shll
scas
xchg
and
xchg
inc
jecxz
mov
mov
stos
sbb
and
cmp
mov
mov
cltd
mov
rclb
mov
pop
and
push
cmpsb
scas
and
xorl
jle
or
inc
sub
icebp
roll
add
push
pop
insb
jle
xor
aam
mov
or
test
cmpsl
and
adc
pop
sub
daa
dec
ds
int3
mov
sbb
xchg
pop
sbbl
sub
push
pop
or
jne
jo
push
cld
test
bound
mov
popf
mov
clc
dec
leave
test
inc
jb
push
mov
mov
outsl
cltd
push
stos
jl
scas
cmpsl
jnp
push
xchg
jno
cwtl
arpl
imul
outsb
incl
outsb
into
sub
jl
arpl
in
sbb
dec
add
aas
pop
mov
jecxz
mov
pop
jle
inc
pop
dec
ds
add
or
mov
pop
pop
comiss
mov
out
inc
sbb
cmp
sub
mov
repz
push
lock
adc
jb
cltd
push
mov
int3
outsl
les
and
fisttpll
mov
cmp
push
out
cld
lret
and
inc
and
mov
mov
dec
btc
add
stos
jg
mov
leave
xchg
bound
jns
rcrb
sub
out
push
mov
xor
push
sbb
dec
mov
dec
push
mov
sbbl
hlt
or
shrl
int3
adc
clc
xlat
test
pop
pop
popa
adc
jb
gs
cmp
push
dec
aam
call
outsb
outsb
sbb
sub
std
mov
ficoml
pop
mov
sbb
std
cmc
cmp
xchg
mov
cmpsb
push
mov
sti
std
imul
sbb
mov
test
inc
mov
dec
mov
push
jns
dec
inc
xor
mov
sbb
mov
test
insb
imul
fsubs
xor
out
into
xor
rclb
rcrl
push
xchg
outsl
inc
sub
xlat
in
cmpsb
shlb
imul
fiadds
ljmp
dec
gs
adc
mov
rcrl
sub
in
andl
jnp
mov
sub
mov
shll
mov
sbb
cwtl
cmp
scas
mov
cs
das
lahf
pop
mov
mov
mov
int3
push
push
jbe
les
cmp
adc
ja
out
jg
push
or
fldenv
cmp
add
add
add
aas
iret
gs
adc
movzwl
shrl
inc
cltd
mov
lods
lret
movsb
lods
shll
xchg
pushf
adc
js
pop
inc
outsl
in
fcoml
int3
mov
pop
xchg
push
mov
cltd
das
loopne
cmc
test
test
mov
pop
call
leave
and
mov
push
xor
adc
add
lret
fistps
lds
enter
les
sbb
sbb
xchg
cmp
rclb
enter
sbb
xlat
fidivrl
sbb
jb
sbb
mov
repnz
push
sub
pusha
lahf
popa
and
iret
insl
out
add
jmp
cmp
shlb
leave
and
xchg
push
dec
pop
into
xchg
sbb
mov
mov
out
aas
sbb
in
mov
outsb
bound
dec
rorb
in
pusha
xchg
fistps
dec
push
popf
loop
dec
leave
shlb
cmp
adc
xchg
jae
imul
lcall
lahf
addr16
mov
sbb
cmp
lcall
cmp
cmp
in
ss
xchg
mov
aam
stc
adc
dec
andl
inc
outsl
dec
add
jge
cltd
daa
lods
mov
fstpt
xchg
cmp
and
imul
push
mov
cwtl
mov
xchg
add
or
rorb
push
std
ljmp
jns
jp
out
xchg
pop
inc
lods
add
mov
mov
sarb
popf
iret
test
inc
mov
jecxz
in
stos
cmp
inc
nop
dec
sub
in
add
movsb
or
push
mul
iret
dec
mov
aas
mov
add
mov
or
out
loope
adc
jmp
jmp
adc
mov
fwait
testb
mov
test
xor
out
dec
cltd
jb
pop
inc
add
in
fs
mov
push
cmp
or
movsl
xor
and
fisttpll
cli
popf
xlat
insl
loope
push
aad
push
add
outsb
sbb
or
out
pushl
push
sbb
sbb
push
pop
push
cmp
push
shl
and
sub
shrl
xchg
sbb
lods
jo
cwtl
scas
ret
js
mov
aaa
add
clc
sbb
mov
int3
jb
mov
shl
inc
dec
cmp
inc
repnz
into
and
cli
inc
andl
jmp
xchg
insb
mov
imul
mov
dec
mov
repnz
repz
int3
push
pop
fistl
pop
ss
mov
xlat
stos
sub
in
sbb
sbb
push
out
addr16
and
jns
jnp
push
lds
shlb
ljmp
int3
cli
out
mov
in
push
add
jmp
add
repz
add
push
sub
mov
xor
sub
shlb
sbb
sahf
pop
adc
mov
lret
mov
aad
push
fdivr
cmp
shl
add
repz
out
scas
sbb
push
gs
inc
dec
jne
outsl
sbb
dec
jp
mov
xor
ret
push
dec
mov
int
jne
push
daa
cltd
add
imul
loope
xor
xor
xchg
repnz
clc
mov
out
mov
push
and
iret
int3
sbb
rorb
push
popf
insl
ljmp
lock
sarb
fs
pop
imul
scas
or
xchg
daa
test
sbb
jge
cmp
sbb
mov
fisubrs
cmpsb
push
out
test
stos
pop
and
test
daa
iret
inc
cmp
push
sub
in
dec
inc
jne
or
xor
xchg
aam
adc
aaa
xchg
jno
jne
outsl
lods
jge
or
fucomip
je
mov
mov
lea
dec
pop
cltd
lret
mov
xchg
add
cmpsl
pop
mov
xchg
rcll
and
mov
dec
fisttpl
fistpl
xor
sti
add
inc
mov
lea
cmp
cmpsb
xchg
inc
mov
pop
out
arpl
loope
jge
out
push
insl
out
jge
xor
push
test
inc
neg
pop
dec
cmp
jne
mov
or
fsubs
pusha
cmp
stc
in
aas
int
hlt
cld
leave
out
sub
scas
push
push
fidivl
aad
ja
ljmp
arpl
fiadds
repnz
inc
ror
sbb
in
inc
xorps
jecxz
add
pop
repnz
imul
rclb
mov
leave
xchg
or
sub
sbb
pop
hlt
aas
movsl
outsl
imul
xchg
adc
fisttpll
mov
pop
xor
out
ret
jnp
or
adc
test
js
sub
pop
lcall
les
fldt
sub
lahf
aaa
sub
pusha
mov
or
out
imul
iret
dec
loopne
lods
stos
movsl
cmp
js
out
adc
dec
inc
pop
sbb
outsl
jno
jmp
js
popf
xchg
fnstcw
xchg
xorl
jb
clc
lcall
fwait
lret
int3
out
popa
cmpsl
ss
clc
fs
push
lcall
sbb
push
add
int
clc
outsl
data16
xchg
ret
mov
or
push
fwait
xchg
cmpsl
ja
push
in
jmp
xchg
enter
mov
jo
in
xchg
push
mov
push
fdivl
add
aad
sbb
xchg
int3
mov
out
pop
sub
add
test
out
fstl
bound
pop
loop
dec
mov
daa
outsb
push
aaa
ret
hlt
idiv
xor
xor
sbbl
jbe
jmp
xchg
xor
sbb
in
or
mov
mov
jmp
pop
iret
fildll
pop
mov
pusha
push
jge
imulb
popa
repz
in
and
adc
pop
jl
xchg
adc
ret
aas
mov
jo
cmc
jb
pop
sarl
es
pop
xor
jb
pusha
repnz
imul
and
lahf
notl
clc
mov
in
push
mov
sub
out
dec
and
adc
mov
jno
adc
mov
and
data16
and
add
mov
or
in
lods
fisttps
in
popa
loope
mov
outsl
iret
push
outsl
ljmp
or
enter
rorl
adc
adc
cmp
imul
xchg
shr
lds
lods
or
fldenv
sbb
inc
push
xchg
lds
rcrb
movsl
shl
jle
push
rcl
cmpsl
push
sub
cld
and
icebp
and
sbb
push
lds
push
xchg
ss
nop
scas
jge
mov
lods
cmc
aad
inc
and
push
dec
imul
loopne
mov
push
pop
mov
orb
stos
inc
mov
ret
lods
mov
cwtl
rolb
ds
rorl
daa
rcll
out
xchg
push
lahf
and
shrb
xchg
and
xchg
test
out
adc
sub
jo
int
in
sbb
fwait
add
repnz
loopne
jge,pn
adc
pop
mov
movsl
imul
add
je
add
push
aad
xchg
popa
jmp
hlt
jg
mov
sub
inc
int3
dec
xchg
test
jle
fstpt
and
jmp
jmp
jl
and
mov
and
mov
mov
cmp
cmpsb
clc
jae
xchg
or
and
mov
ja
xchg
or
push
push
jno
add
lods
idiv
cmp
mov
xor
push
dec
popf
pusha
pushf
pop
insb
mov
mov
rorb
out
gs
inc
lret
cwtl
fbld
lods
pop
pop
mov
lock
insb
fucomi
jbe
fdivrp
mov
sbb
aaa
mov
add
or
dec
aad
inc
test
and
mov
stc
outsb
dec
xchg
fistps
adc
sbb
push
add
test
pushf
js
fs
mov
std
in
sub
jne
sti
fwait
clc
mov
inc
dec
xchg
out
fcoml
cmpsl
inc
imul
ss
repnz
pop
jge
jno
xchg
push
jecxz
pop
cmpl
nop
mov
mov
xor
mov
call
mov
mov
adc
pop
and
inc
xor
push
xorb
mov
jmp
and
pop
ljmp
pop
and
adc
xchg
sbb
inc
adc
into
or
enter
sbb
sbb
lcall
stc
inc
dec
outsl
lock
loopne
aaa
xchg
lahf
pop
popa
bound
jge
cmp
insb
and
pushf
lret
enter
icebp
lods
inc
test
add
jecxz
pop
and
dec
lahf
test
or
xchg
icebp
mov
stos
lea
push
jl
push
cmp
and
inc
mov
pop
mov
insl
xor
xor
sub
push
push
mov
enter
xor
insl
in
iret
jns
fcomps
jmp
xlat
push
gs
filds
dec
fildl
add
xchg
rcl
add
roll
jle
add
sarl
cmpsl
sub
dec
repz
adc
hlt
aaa
imul
lods
mov
or
pusha
add
rolb
and
test
mov
repz
mov
ret
fiaddl
int
cld
and
out
mov
xlat
sbb
mov
dec
icebp
fdivp
pop
jmp
and
gs
lret
rolb
in
sbb
push
jo
lds
loop
scas
push
xchg
xor
xchg
dec
movsb
bound
outsb
int3
add
push
jl
in
movsb
movsb
push
push
dec
mov
and
pop
daa
ja,pn
jmp
mov
loope
sbb
cwtl
mov
cmp
repnz
lcall
inc
stos
ds
jns
jae
pop
in
jno
jnp
roll
pushf
leave
xchg
dec
pop
add
pop
pop
pop
icebp
dec
insl
out
jmp
add
leave
cmp
sbb
aad
stos
push
jns
sbb
lret
mov
mov
sahf
test
addr16
aas
cli
mov
jle
dec
notb
add
xchg
add
add
and
ljmp
je
sti
mov
andb
inc
clc
inc
dec
outsb
mov
call
mov
incl
in
inc
mov
jecxz
mov
mov
cmpsl
xchg
test
fwait
inc
enter
daa
ret
popa
inc
cmc
movsb
mov
arpl
mov
pop
sti
sti
fdivrl
rcr
sbb
js
or
cld
dec
mov
push
shll
lret
adc
and
test
imul
and
xchg
cwtl
dec
push
and
push
aam
pushf
cli
pop
jne
pop
mov
out
push
in
sub
xchg
adcb
xchg
dec
dec
jg
mov
imul
inc
out
lret
cltd
dec
adcb
leave
lahf
sub
jbe
andl
push
adcl
xor
push
ret
leave
xchg
sbb
pushl
mov
iret
pushf
cmp
jb
mull
movsb
stos
push
xor
ss
outsb
mov
inc
incb
fnstsw
cld
add
sarl
shll
insb
mov
lea
outsb
pop
arpl
std
jecxz
jb
aam
daa
mov
outsb
aas
add
stc
stos
imul
orl
jbe
dec
negl
loop
sbb
pop
iret
sbb
lcall
jg
shl
imul
sub
pushf
mov
cmp
push
ljmp
fld
cmp
pop
rorl
jnp
xchg
cmp
jp
into
fcomi
pop
icebp
iret
inc
inc
out
int3
movsl
mov
jb
ret
aad
pushf
into
push
xor
pop
dec
mov
mov
cmc
xchg
gs
push
insl
enter
fildll
popf
js
cmp
inc
pop
and
cmpsl
cwtl
xor
adcb
xchg
jo
inc
jg
xor
xor
mov
mov
and
xchg
ss
dec
mov
cmpsl
inc
mov
mov
xor
mov
mov
into
mov
in
mov
das
lods
andl
sub
fs
inc
loopne
mov
mov
mov
loopne
out
sbb
push
daa
xchg
dec
inc
fisubrl
cmp
mov
inc
iret
fiadds
and
xor
addb
lahf
fisttpll
js
bound
nop
test
add
daa
jno
pusha
mov
and
ret
sahf
jnp
sbb
xor
out
add
popf
inc
adc
leave
jne
addr16
cltd
clc
jecxz
pushf
data16
loopne
jp
xchg
aam
jg
stc
paddb
xchg
ficoms
insl
sub
movsb
sub
adc
sub
push
pushf
jmp
loop
int3
jne
loopne
mov
scas
notb
bound
mov
mov
mov
mov
pop
xchg
push
push
lea
cmpsb
jns
sub
arpl
mov
push
jmp
insl
mov
mov
nop
inc
cmc
dec
inc
push
jle
add
adc
or
mov
cmpb
xchg
hlt
or
fucom
hlt
pop
es
daa
in
or
out
sbb
stos
push
dec
mov
add
or
pushf
or
lock
mov
inc
mov
loope
repz
decl
into
add
xchg
cmp
mov
es
sub
jnp
scas
mov
sbb
inc
movsl
fadds
dec
std
pop
pop
mov
sar
dec
addr16
add
out
jg
pop
mov
xor
xor
int3
popa
imul
aaa
pop
pop
add
call
cmp
lret
mov
jge
add
mov
adc
xor
add
cmp
in
roll
add
fisttps
jp
jns
cwtl
push
sbb
out
subb
pop
fs
mov
call
rorl
xchg
shlb
sti
mov
sbb
sti
dec
inc
adc
in
insl
lock
lcall
out
jecxz
icebp
cld
movups
je
leave
int3
adc
shlb
adc
mov
clc
push
add
pop
rcrb
in
fnstcw
adc
and
in
xchg
xchg
lds
sti
jne
imul
push
aaa
mov
xchg
fnstsw
clc
lea
lret
ja
add
dec
fsubl
or
popa
push
addr16
sub
in
jge
jmp
add
lcall
ljmp
mov
pop
cmp
xor
fisubs
sbb
mov
loop
shll
mov
clc
or
filds
xor
lcall
sarb
adc
push
jno
push
push
inc
or
repz
push
jne
jnp
xchg
push
and
in
rorl
lods
mull
mov
push
jecxz
cs
in
push
add
pop
pop
shr
leave
pop
test
iret
push
sub
sbb
cmp
pusha
test
dec
push
cli
xchg
jb
das
mov
std
test
dec
leave
call
arpl
movsb
push
enter
sub
pop
cmp
push
mov
pop
jnp
movsb
lods
mov
js
rcl
ret
or
add
mov
sbb
mov
clc
or
xor
cmp
mov
mov
xchg
mov
roll
mov
cwtl
flds
shlb
and
fldln2
pop
jne
out
xor
sub
popf
es
sahf
push
jns
stos
pusha
iret
push
insb
das
jp
inc
jmp
jl
or
add
or
icebp
test
fwait
test
sbb
imul
adc
movsl
inc
jecxz
out
fbstp
xchg
adc
pop
jbe
jg
in
lods
xchg
sub
cmpsl
mov
sbbl
bound
lock
adc
test
andl
add
test
test
and
addb
hlt
out
fidivrs
xchg
mov
jle
ds
jb
push
mov
ret
loopne
fistpl
xchg
add
mov
dec
adc
cmpsb
xor
lret
seta
nop
stc
movsb
shlb
out
lcall
neg
jae
cmpsb
adc
roll
popf
mov
fsubrl
or
sub
fistpll
fstps
cmpsb
les
adc
push
jae
imul
fisttpll
push
test
hlt
fimull
pop
nop
mov
adc
and
mov
cmp
xor
fstl
sbb
push
add
add
adc
imul
outsl
ret
mov
xlat
lock
roll
cld
push
cmovno
sbb
mov
mov
jg
movsl
in
dec
dec
lock
pop
popa
nop
add
lock
push
inc
insb
out
pop
icebp
fnsave
and
pop
bnd
xor
mov
adc
enter
or
loop
clc
in
add
sub
pop
xchg
mov
xorb
sti
ljmp
andl
repnz
or
stos
mov
fs
lret
pop
aaa
inc
cmpsb
pop
repnz
pop
mov
and
dec
xor
mov
rorb
sahf
inc
xor
inc
jmp
ret
adc
mov
jb
sub
bound
sbb
in
mov
inc
inc
jl
adc
out
outsb
repnz
pop
xor
stos
jl
inc
xchg
xchg
inc
xchg
fs
or
mov
cwtl
cmpsl
test
xor
leave
test
push
aaa
loop
cli
push
mov
popa
jmp
or
xchg
cmp
pop
jnp
ret
leave
shrb
adc
pop
push
cli
ficoml
sub
pop
dec
leave
mov
out
push
mov
jmp
pop
cmpsb
push
ja
fsubr
push
cmpsl
lds
jmp
pop
inc
aaa
cld
jnp
testl
push
or
sarl
sbb
movsb
mov
jns
jno
add
stos
fstl
inc
push
xchg
fbld
call
ja
mov
dec
cli
sub
jo
mov
and
rorl
ret
lds
loopne
jnp
lret
movmskps
xor
arpl
xor
push
jns
adc
push
or
mov
call
mov
arpl
push
push
and
ja
adc
shrb
mov
push
cwtl
rorl
mov
mov
push
mov
imul
xchg
mov
push
enter
scas
mov
test
mov
lock
es
shll
int3
cmp
or
test
lret
xor
in
mov
imul
out
xor
add
inc
int
or
rclb
xor
xchg
and
stos
pop
push
fs
addl
mov
and
std
sbb
inc
push
addr16
mov
adc
stos
xchg
imul
ljmp
push
mov
pop
iret
push
popw
cmp
xor
nop
mov
push
leave
sbb
xchg
mov
movsb
dec
imul
outsl
inc
in
idiv
icebp
sti
adc
shlb
xor
lock
sbb
xor
rclb
or
lret
xchg
std
and
or
icebp
insl
lret
mov
into
lahf
insl
fdiv
rcr
jnp
jae
out
fxch
pop
adc
or
sbb
aas
mov
jns
mov
into
sbb
mov
frstor
jo
repz
and
sti
sbb
fwait
cwtl
das
xchg
ja
jl
mov
loop
mov
insb
out
outsl
ret
pop
ds
loope
push
jb
add
data16
inc
pop
mov
sub
push
js
popa
in
notb
jge
inc
adc
xor
lahf
jmp
cmp
imul
arpl
clc
sub
xchg
and
pop
cmp
push
xchg
add
jmp
sub
ds
xlat
mov
bound
and
fidivrs
sbb
daa
inc
shll
jnp
sarl
movsl
jo
push
mov
in
jb
inc
push
jp
hlt
leave
cmp
adc
js
nop
push
inc
and
mov
jg
sti
in
push
sub
and
mov
call
jo
xor
mov
mov
addl
push
lret
aam
pop
shr
popa
movsl
push
sbb
dec
dec
pop
dec
dec
jb
pop
fcoml
ret
sbb
mov
test
ja
fcoms
rclb
test
out
inc
dec
std
les
bound
lcall
leave
and
popf
jmp
icebp
pop
dec
xor
lods
dec
mov
lcall
inc
notl
data16
cld
pusha
mov
adc
stos
nop
mov
inc
fistpl
pop
jo
xchg
out
and
int3
mov
push
dec
xor
icebp
fistpll
pop
inc
xchg
mov
dec
mov
xor
sarb
push
mov
sbb
orl
inc
adc
shlb
sbb
cld
popf
popf
mov
std
xchg
faddp
fisubrs
std
xchg
dec
push
out
sub
mov
repnz
call
nop
sub
dec
push
lea
pop
mov
or
rorl
sahf
mov
outsl
pop
dec
imul
ret
adc
mov
cmp
mov
push
cmpsb
int3
loopne
int
mov
xchg
gs
push
insb
jle
cld
sarb
adc
or
popf
sbb
adc
testb
aam
scas
mov
imul
sub
bnd
loop
cld
rcl
fs
inc
rorb
xor
mov
or
cmp
push
dec
and
sbbb
test
jae
andb
mov
mov
insl
cmpsb
test
dec
stc
out
xchg
xchg
push
cmpsl
outsl
xor
mov
inc
pusha
shrb
fdivrl
dec
fs
ja
shlb
cmp
roll
pop
inc
mov
dec
fwait
rcrb
xchg
loop
rorb
imul
dec
daa
int3
inc
daa
pop
or
xor
cltd
add
test
push
push
mov
jno
test
in
jp
xchg
jg
adc
sbb
xor
mov
rol
inc
push
push
je
pop
dec
sbb
inc
jne
divl
rorl
add
inc
pop
leave
daa
sahf
jmp
xor
lahf
mov
arpl
pop
sbb
call
stos
jmp
mov
push
popa
mov
add
pop
pop
pop
cmc
xlat
hlt
sahf
inc
jb
xor
push
lahf
dec
dec
in
xchg
mov
lock
xor
mov
lea
xor
mov
je
xchg
enter
push
pusha
xchg
gs
mov
xlat
jb
daa
cmp
movb
stos
xchg
mov
xchg
sub
imul
mov
mov
sti
incl
dec
out
iret
mov
jmp
lahf
outsb
addr16
xor
jg
mov
inc
call
inc
mov
mov
out
add
mov
cmpsb
jne
gs
mov
outsb
idivb
add
popa
xor
addl
out
inc
arpl
or
in
xchg
loope
movsb
loope
int
arpl
or
lock
mov
and
mov
cmpsl
rcrl
pushf
push
mov
clc
mov
mov
jne
pop
cmp
je
sub
imul
xchg
cwtl
cmpl
mov
jl
cmp
push
push
lcall
xor
adc
push
sub
stos
cmp
dec
cmovle
aad
or
movsl
fildll
fists
jecxz
add
movsb
adc
mov
fwait
enter
push
mov
dec
push
dec
pop
or
int
int3
stos
cld
lcall
cwtl
mov
je
rcrb
jg
outsb
lods
and
jno
mov
fldcw
dec
aam
scas
cld
popa
test
cwtl
add
les
nop
out
lahf
xchg
sbb
inc
repnz
addr16
insl
daa
fidivs
repnz
fistpl
test
jne
adc
xchg
cs
mov
pusha
fsubl
sbb
sbb
ljmp
dec
cmp
out
mov
int3
and
cwtl
int3
mov
xchg
lock
add
cs
std
sbb
or
sub
fistl
nop
mov
fwait
dec
cmp
xor
cli
pushf
jne
cwtl
movsl
gs
shlb
sub
pop
sti
fisttpll
pop
jb
mov
lods
xchg
and
xor
sub
or
mov
jl
pop
mov
pop
sbb
dec
xchg
addb
cld
pop
mov
idiv
nop
mov
inc
jg
in
pushf
outsl
ret
cmp
push
mov
bound
inc
aaa
stos
call
cmpsl
lods
add
cmp
xor
push
mov
mov
or
xchg
sbb
les
icebp
push
xchg
push
lret
inc
ljmp
mov
pop
jge
aaa
fisubs
test
cmp
stc
leave
shl
sbb
in
add
dec
push
mov
and
lds
adc
ret
mov
push
mov
lret
jmp
ficoms
sub
jp
loopne
push
mov
adc
push
pop
xor
and
insl
or
push
dec
push
int
pop
mov
sbb
pop
std
add
dec
ret
xchg
push
push
push
lcall
sub
scas
jbe
mov
je
mov
xchg
mov
push
cmp
flds
jle
sar
pop
xchg
arpl
xchg
cmp
lret
inc
test
sarl
sub
icebp
test
mov
push
jne
pop
sub
es
das
jbe
adc
and
in
and
inc
and
cmp
loopne
hlt
pushf
jo
sbb
mov
mov
dec
xchg
mov
inc
movsb
mov
jnp
in
pop
pop
outsb
and
in
push
push
scas
push
xor
push
mov
aam
nop
pop
xlat
adc
das
adc
test
stos
pop
inc
jno
out
mul
data16
ds
cmp
push
pop
xchg
mov
sub
inc
popf
gs
sub
sbb
add
inc
rol
pop
pop
jb
xchg
std
or
adc
push
hlt
push
cmc
fstpt
outsb
lcall
jo
andl
fcmovb
into
test
repz
cmc
fwait
xlat
andb
aad
xchg
lods
loopne
add
pop
dec
add
sub
mov
movsb
mov
or
insb
inc
sbb
pop
and
loopne
sub
or
icebp
jp
xor
dec
in
dec
add
in
adc
aad
mov
inc
push
arpl
fwait
and
out
adc
fcomp
rcrb
adc
out
inc
mov
sbb
pop
inc
cmpsb
cmp
mov
xlat
lret
lcall
mov
pop
fs
inc
test
xchg
jb
fcomps
lcall
xor
push
ss
int
xor
stos
out
leave
jge
out
pop
adc
jne
xlat
mov
fadd
push
dec
movsl
xor
jecxz
daa
lret
adc
or
insb
adc
xchg
stc
push
xchg
xchg
shll
aas
pop
hlt
jp
add
jmp
fiadds
aam
fsubl
inc
icebp
sbbb
sbb
jbe
fldcw
adc
aad
ds
adc
shl
adc
sbb
sbb
pop
int
mov
shlb
jmp
fldenv
fistpll
and
cld
in
lods
shll
mov
insl
out
clc
push
push
xor
push
pop
sub
fdivl
xor
push
cld
idivl
test
add
cmp
or
orb
sub
sbb
lds
les
mov
jmp
or
pop
leave
add
jmp
lods
cmpl
xlat
data16
gs
and
cmp
das
add
push
daa
shrl
pop
add
dec
xchg
scas
xor
mov
out
add
xchg
lock
jecxz
test
mov
movsb
push
cmp
sub
cwtl
inc
fnstenv
in
push
inc
insl
stos
sarl
fsubs
in
dec
scas
xchg
dec
shlb
movsl
outsb
dec
fdiv
frstor
jno
scas
pushf
and
out
mov
shll
mov
cmc
sbb
lods
fcomps
jnp
jbe
stos
sub
inc
mov
aas
push
push
divb
sahf
fimuls
les
arpl
pop
insl
xchg
call
out
out
popf
scas
gs
adc
pop
mov
scas
push
lahf
sub
jle
ss
inc
in
int3
add
xor
cmp
or
jbe
adc
es
lcall
lds
push
adc
andb
push
xchg
in
inc
jmp
cmp
mulb
test
cli
mov
xchg
sbb
fdivs
jl
fisubs
inc
mov
or
mov
dec
stc
add
out
aas
popf
fistpll
mov
jge
mov
out
imul
movsl
push
pop
gs
aam
jno
and
add
nop
or
jbe
adc
push
pop
movsl
jnp
jmp
push
rcll
jl
pop
call
jne
mov
pop
jns
add
lock
sbb
mov
mov
push
movsb
je
mov
mov
add
xchg
mov
das
idivl
and
inc
lret
inc
cs
mov
test
loopne
das
xor
or
iret
add
xor
rolb
sbb
lcall
mov
sbb
adc
sti
push
dec
cmp
jp
xchg
rolb
dec
enter
add
xchg
pop
sbb
adc
dec
sub
lea
ljmp
pop
idivb
sbb
notb
aam
jge
insl
lock
jmp
xchg
or
pop
push
test
jo
adc
sbb
jb
xchg
clc
std
pusha
inc
push
leave
sub
xchg
nop
mov
test
dec
xchg
mov
cmp
or
mov
pusha
les
or
in
aam
xor
xchg
mov
aaa
dec
mov
jne
fisttps
enter
stos
sbb
mov
pop
mov
pop
cld
out
sub
mov
pop
inc
lods
jg
sahf
jg
jp
incl
sub
mov
aas
pop
xor
das
pop
ja
ss
mov
dec
cs
xchg
fcomps
xor
mov
dec
stos
and
sbb
dec
push
fwait
and
into
push
xor
push
inc
pusha
mov
mov
and
pushf
xor
cli
mov
dec
test
push
xorl
add
xchg
jnp
sbb
movsb
movsl
dec
scas
rcr
or
in
fs
pop
adc
pop
into
cli
sub
sub
mov
insb
push
sub
fucomip
cmp
fs
xchg
sbb
and
icebp
cmp
cltd
popl
lret
arpl
xchg
add
iret
addr16
and
movsb
mov
sarl
inc
mov
lret
pushf
fmull
inc
cmp
or
testb
sub
iret
xor
fbstp
cmp
fsubs
xor
jmp
fisubl
lcall
jle
lret
movsl
dec
and
mov
and
int3
bnd
xchg
jo
loopne
pop
sbb
sbb
stc
jp
fwait
ja
fst
stos
out
pop
int3
mov
jns
aad
fnsave
and
bound
ficompl
mov
lods
fwait
scas
cmp
mov
aam
push
stc
cs
cwtl
pop
jl
ret
and
rorl
fidivs
lret
add
dec
add
ds
ja
add
bound
sub
sbb
mov
sub
mov
add
fimull
mov
pop
ds
lcall
mov
xor
inc
sub
xchg
jns
fs
pop
jo
jbe
ss
icebp
jecxz
repz
cmpsb
cmp
daa
lea
add
pop
je
add
test
or
xlat
ja
std
jp
ja
mov
xchg
mov
sbb
or
xlat
vcvtpd2psy
dec
push
sbb
or
adc
idiv
aaa
into
fiaddl
pop
js
mov
push
outsb
dec
pop
sub
add
aam
sbb
js
jecxz
add
clc
fs
aas
cmp
jge
add
pop
lret
and
or
adc
add
dec
cltd
fdivs
add
xchg
xor
subl
mov
gs
test
lods
test
adc
call
out
pop
dec
rcrl
add
jp
cmp
or
mov
mov
adc
pop
int
push
les
popf
xorb
pop
andb
cmp
dec
daa
repnz
jb
mov
fdivs
fwait
inc
pop
inc
xor
cmp
mov
inc
test
adc
mov
cmp
xchg
cltd
pop
sub
and
xor
in
lret
sbb
in
in
cmpsl
xor
aas
sahf
pop
jge
mov
xor
test
push
jae
mov
cmp
lcall
scas
xchg
add
adc
dec
int3
mov
mov
call
and
cli
into
push
jno
dec
xchg
mov
push
sub
pushf
mov
mov
es
out
sti
sub
ret
xchg
jmp
sub
push
cmpsb
inc
ljmp
mov
shll
lods
and
fcompl
dec
ds
dec
dec
stc
sbb
mov
out
mov
sub
insl
sbbb
dec
xor
insl
mov
xchg
and
jo
mov
sub
data16
mov
sub
icebp
scas
fmull
sbb
cmp
pusha
mov
or
fiaddl
xchg
jns
ljmp
fcomps
stos
adc
xor
pop
daa
popa
and
fists
xlat
scas
mov
inc
fidivrl
or
cmp
xchg
in
pop
in
pop
add
fwait
mov
iret
mov
adc
xor
fimull
or
lahf
sub
or
orl
aam
and
rcl
mov
insl
dec
enter
jne
adc
adc
xor
iret
stos
dec
push
cmpsl
inc
mov
push
mov
in
fs
sbb
xrelease
jb
push
sahf
lods
jno
and
out
sbb
jne
icebp
jp
jne
idivl
push
push
and
ss
xchg
dec
loope
mov
int3
mov
xchg
scas
dec
addr16
imul
lret
lret
fidivl
mov
mov
aas
jnp
sbb
cwtl
call
sti
lock
adc
or
stos
movsl
sbb
lock
pusha
gs
jae
add
mov
inc
jmp
inc
push
pop
movsl
xchg
aad
movlps
pop
inc
imulb
push
or
mov
cmp
sub
dec
or
xor
mov
xor
jmp
push
and
and
sub
mov
loopne
cmp
rolb
xor
movsb
fnstsw
roll
movsl
imul
add
aas
sub
cli
or
sti
mull
dec
aad
dec
lds
cmp
dec
pop
out
pop
jge
cmp
dec
push
scas
stc
push
jne
xorl
mov
cmc
jns
adc
mov
mov
inc
stos
pushf
data16
adc
sbb
es
ja
add
leave
mov
xchg
js
test
scas
dec
push
or
push
adc
mov
xor
insl
or
inc
ffreep
mov
movsl
jmp
popa
je
movsl
int3
mov
sub
jne
je
lds
fwait
repnz
idiv
aas
lea
pusha
xchg
mov
pushf
push
jmp
cli
add
out
andl
loope
xchg
xor
lahf
cmp
lcall
stc
aam
adc
mov
lahf
test
scas
xchg
xchg
pop
stos
stos
pop
mov
mov
cmpsb
je
mov
repnz
in
push
mov
insb
bound
push
in
xchg
dec
inc
stc
or
out
movsb
add
sub
push
xor
fstpt
addr16
mov
sub
sub
faddl
mov
jns
jmp
jns
cmc
xor
inc
repz
mov
sti
xchg
pop
jp
pop
jge
mov
pop
cmpsl
data16
pop
mov
push
lcall
adc
and
pop
or
dec
sbb
mov
std
lret
into
adc
insb
sub
adc
test
std
out
adc
adc
in
fwait
pop
bound
sub
loopne
push
dec
faddp
sub
addl
add
pop
add
and
ljmp
or
out
imull
pop
imul
addr16
leave
std
or
fwait
ret
cmp
cs
stc
push
fimull
sub
aam
scas
sub
enter
loop
jp
mov
dec
insl
jne
nop
sbb
cmp
xor
imul
mov
shrb
in
sbb
cli
bound
scas
pop
pop
pop
sub
cmp
lds
xchg
mov
gs
ret
stc
inc
add
roll
fwait
jbe
mov
and
lret
mov
jle
int3
ja
xchg
bound
ret
xor
sahf
int3
dec
or
cltd
pushf
in
mov
shr
and
scas
std
jg
mov
xchg
pop
push
insb
ss
idivl
sbb
sub
xor
and
pop
aaa
or
xchg
lahf
push
cmc
and
out
ret
cmp
mov
sbb
shlb
xor
pcmpeqw
mov
dec
push
cmpsb
data16
cmp
jmp
mov
inc
leave
rcr
mov
pushf
mov
popf
xchg
sub
hlt
pop
in
hlt
adc
scas
frstor
mov
add
roll
mov
jmp
sahf
cmpsl
loop
rcll
cwtl
xor
sbb
cmp
adc
imul
jne
movsl
aas
push
mov
test
stos
dec
jge
ret
mov
fbld
or
out
jge
cmpsl
xchg
cmp
test
je
inc
pop
iret
rcr
sbb
or
and
push
mov
xor
das
xor
pushf
or
dec
sub
rcll
cwtl
ret
lret
add
cmc
decl
and
adc
push
mov
pop
mov
mov
dec
inc
leave
pusha
or
icebp
sub
xlat
jns
lds
adc
ret
cmp
mov
inc
out
pop
loope
xor
cmp
or
sbb
ljmp
aam
cli
dec
test
les
xchg
or
jmp
mov
pop
sarl
xor
lcall
dec
imul
lcall
fisubrl
call
addr16
ret
xor
call
sbb
pop
daa
fisttpl
mov
pop
mov
mov
mov
sbb
xchg
fcmovbe
push
dec
ljmp
xor
lock
dec
insl
dec
fdivl
or
inc
out
push
out
xor
sub
cmc
pop
sub
adc
pop
xorl
popa
dec
xor
fildl
scas
rorl
fidivrl
inc
fistl
fstps
xor
das
andb
xor
xor
lahf
jnp
dec
sub
orl
jle
dec
ljmp
adcl
pusha
mov
cmp
ret
daa
xchg
mov
lods
sti
mov
push
pop
rcll
das
int3
ss
lcall
jmp
test
imul
or
call
xchg
xor
mov
or
or
jns
and
ret
cwtl
enter
cmpl
push
insb
or
adc
repnz
xor
xlat
mov
sbb
cwtl
pop
mov
mov
pop
push
add
pop
fildl
or
mov
and
or
sbb
mov
pushf
imulb
ja
loopne
popa
xor
xor
stos
xor
mov
sahf
sbbl
xor
pusha
pop
push
stc
lock
je
pop
stos
xchg
inc
add
inc
arpl
movsl
inc
add
mov
es
mov
adc
mov
add
aas
packuswb
push
clc
lcall
gs
hlt
xor
inc
mov
sbb
mov
adc
fisttpl
sbb
lock
icebp
xchg
pop
adc
fstl
jmp
loop
or
fnstenv
pusha
popa
je
fisttpll
loop
ret
xchg
dec
fistl
jne
sub
cmp
mov
add
sbb
jno
fsubl
sahf
mov
pop
jp
mov
mov
xchg
lods
repnz
rclb
mov
adc
cld
or
mov
jmp
add
das
std
daa
or
add
inc
push
xchg
sbb
dec
dec
lahf
xor
pop
jmp
movsl
inc
insb
fcmovb
xchg
aad
popf
mov
fwait
mov
inc
imul
and
in
arpl
insb
std
cmp
mov
lods
orb
jnp
mov
out
or
jecxz
std
add
pop
lock
cmp
bnd
and
jge
sub
add
push
sti
leave
adc
lcall
js
ja
das
imul
dec
into
xor
pop
jno
push
cmp
mov
push
jno
repz
rorb
push
adc
add
mov
dec
call
push
inc
push
popa
arpl
xchg
mov
mov
outsl
cmp
xor
roll
mov
adc
push
decl
loop
add
int
mov
pusha
in
in
pop
out
aad
dec
gs
xorb
sbb
out
sub
xor
add
aam
sub
ljmp
mov
test
repnz
jmp
les
xlat
mov
xor
dec
sbb
sti
jno
dec
xchg
cmp
or
enter
leave
add
pop
push
pop
jecxz
mov
or
xlat
rcl
pop
cld
es
and
pop
jp
add
ljmp
mov
xchg
stos
or
repz
inc
movups
xlat
adc
ret
sub
lret
mov
jl
nop
lret
mov
imul
nop
js
dec
xor
adc
xor
jo
cs
mov
sbb
jbe
or
std
push
push
sub
inc
inc
xor
sub
or
in
movsl
movsb
pop
dec
adc
hlt
ljmp
aam
add
cld
cmpb
nop
and
mov
sti
mov
aam
in
xchg
fdivrp
cwtl
mov
and
mov
outsl
and
or
mov
xchg
test
xor
push
pop
and
push
dec
cmp
xchg
stos
dec
add
arpl
iret
xchg
out
stos
pop
lret
repz
bnd
and
dec
enter
mov
popa
push
fsubrs
cs
cmp
je
xchg
dec
fidivl
push
sub
nop
cmp
imul
pop
sbb
daa
cmp
sub
in
dec
xor
sub
lods
pop
cmp
lcall
rorb
jp
xchg
xchg
loopne
cmp
push
push
mov
loope
and
adcl
fidivs
std
or
in
xor
in
or
xchg
aaa
sub
in
sub
or
fistps
jle
sbb
sub
and
sub
mov
sbb
jmp
pop
inc
lahf
mov
out
or
xor
adc
das
lods
xor
push
adc
mov
fdivrl
movsl
insb
shlb
or
aaa
pop
jbe
call
shlb
ficompl
jecxz,pt
xchg
call
mov
cmp
mov
mov
fsubs
xchg
xchg
sbb
or
dec
sub
xor
daa
inc
lea
jno
popa
mov
or
push
mov
das
and
lret
pop
xlat
aad
repnz
outsl
rorl
mov
mov
pop
mov
pop
fists
mov
xor
aam
lods
and
mov
int
rolb
dec
in
bound
cltd
xor
inc
xor
jne
pusha
mov
das
jge
inc
inc
mov
in
inc
sub
push
adc
and
jp
add
mov
out
jle
sub
sbb
iret
imul
fwait
mov
fistps
nop
roll
fsubrp
movsl
add
cmpsb
sub
js
add
sbb
lea
inc
jbe
push
jne
mov
je
cmp
inc
int3
leave
ljmp
ds
add
insl
adc
mov
mov
sub
jg
std
mov
jle
mov
xor
push
int3
cmpsl
rcrl
sub
mov
mov
pop
mov
push
add
sub
int
cmc
mov
notl
lret
pushf
mov
inc
jnp
dec
push
repz
sbb
sub
jle
jl
sbb
jbe
jecxz
mov
outsb
icebp
add
fucomip
sbb
mov
xor
mov
ds
mov
pop
dec
addr16
add
push
lahf
lcall
ret
or
test
jb
lret
mov
ficompl
mov
lods
sub
out
je
mov
outsb
push
adc
sub
les
pop
pop
loopne
jbe
sbb
iret
mov
sub
sub
xchg
dec
jb
inc
sub
sub
inc
jnp
jb
ret
enter
repz
rclb
mov
or
mov
mov
loop
xlat
js
repz
iret
push
lds
repnz
mov
pop
dec
sbbb
jmp
inc
insb
ret
or
cmpsl
sbb
cmp
sub
imul
xchg
fwait
pop
pop
xchg
pop
cwtl
push
mov
js
ret
sub
mov
pop
adc
divb
jb
adc
notb
insb
cwtl
loope,pt
cmp
dec
movswl
imul
jle
leave
push
xchg
int3
lret
mov
and
push
xor
scas
addb
movsb
and
fldenv
and
or
nop
movsb
sahf
icebp
fs
jmp
daa
jle
add
sub
dec
xor
sub
push
dec
mov
gs
es
rorb
in
sbb
sub
fmull
ljmp
imul
test
sbb
push
push
cli
dec
lahf
shrl
inc
cmovb
xor
pop
dec
test
mov
mov
iret
sub
popf
xor
xor
mov
jb
outsb
es
pushf
push
jl
cmpsb
clc
inc
add
call
hlt
sbb
cmpsb
and
xlat
cwtl
jne
pushl
and
mov
pop
xor
iret
mov
loop
sti
rcll
idivl
cmp
stc
jns
cmp
scas
leave
adc
mov
or
inc
shll
lcall
imul
das
push
loop
out
mov
jno
aam
xchg
push
mov
push
leave
out
add
xchg
fcompl
inc
push
nop
cmpsb
in
repnz
fucomp
mov
insb
sub
and
mov
xchg
push
sbb
pop
clc
ret
imul
ret
dec
xchg
lahf
add
aam
and
inc
push
lret
mov
push
loope
stos
xor
outsl
dec
mov
push
push
jmp
cmpb
add
movsb
aaa
mov
pushf
xor
fs
shll
or
imul
sub
nop
push
adcl
sub
push
rcrb
or
movsl
sbb
mov
inc
sub
add
jns
inc
fnstcw
jl
ljmp
faddp
jmp
xchg
bound
xchg
or
xchg
lea
pushf
insl
outsl
shlb
pop
xor
xor
push
mov
ffreep
stos
and
mov
adc
outsb
pushf
imul
sub
dec
fldl
imul
or
mov
add
fadd
add
ja
out
xchg
mov
jmp
mov
mov
jnp
cmp
sbb
or
aaa
scas
insl
xorl
test
cli
mov
aam
mov
in
cmp
shlb
out
dec
sbb
add
test
xor
mov
sahf
mov
add
pop
mov
movsl
push
jmp
cwtl
into
xor
sub
aaa
ss
mov
adc
out
iret
sub
das
cmp
mov
cmp
add
in
aas
or
sahf
push
sub
and
mov
std
pusha
ljmp
outsl
inc
cmpsb
rol
cmpsl
notb
add
pop
in
or
sub
ret
ljmp
or
movsb
push
add
ffreep
mov
rol
inc
add
negb
add
out
cmc
push
push
ljmp
xchg
inc
je
cmc
mov
pop
repnz
dec
push
jg
out
mov
jne
hlt
pop
iret
pop
inc
std
xor
jno
add
mov
popf
in
call
lods
pop
inc
movsb
jae
out
push
shlb
in
push
mov
repz
lods
fmull
push
pushf
ljmp
mov
push
pop
hlt
cmpsl
popf
mov
add
fcmovbe
mov
jl
xchg
and
ds
and
add
dec
jo
insl
ret
or
imul
loop
mov
es
gs
xor
out
mov
notb
cmp
test
mov
inc
call
dec
mov
out
sbb
add
and
mov
add
stc
and
pop
mov
int
push
xlat
xor
push
cmpl
jg
insl
enter
cmpsl
jbe
addr16
adc
loopne
stos
fnstsw
dec
mov
ret
jne
mov
or
mov
cmp
and
pusha
push
mov
sub
xchg
hlt
add
pop
fdivr
out
xor
xor
cltd
or
mov
movsl
aas
cmp
into
out
pusha
lods
cmc
mov
mov
mov
xchg
lcall
inc
lods
mov
subl
push
nop
jbe
inc
mov
xor
mov
or
lock
cmp
mov
hlt
inc
sub
incl
inc
movsb
enter
xlat
jg
movsb
sahf
jp
fwait
push
pop
ljmp
xor
rcl
clc
int
ret
sbb
sub
ds
lods
push
vmovaps
or
movsl
stos
xchg
mov
mov
test
stos
arpl
shr
pop
pop
jnp
call
mov
lds
cld
pop
add
jne
pop
adc
ljmp
xor
ret
stc
add
sbb
in
pop
add
iret
push
aas
pop
cli
scas
push
ret
das
xorl
xchg
cli
push
or
pop
popa
push
aaa
ds
out
mov
fwait
call
fwait
mov
dec
dec
ljmp
leave
jg
and
scas
int3
jmp
ret
or
pusha
ret
cmp
jl
test
or
rcll
dec
inc
add
stc
sub
adc
xor
inc
sahf
enter
or
in
jae
mov
js
push
movsl
test
loop
pop
dec
add
insb
jmp
outsb
test
dec
push
cmp
cmp
add
mov
shl
and
ja
stc
ss
testb
mov
mov
pop
lea
pusha
or
and
stc
xchg
sbb
jecxz
xorl
sub
mov
cmp
ss
scas
dec
insl
sbb
stos
mov
push
jae
xchg
loope
pop
xchg
mov
inc
fs
bound
ljmp
jbe
or
push
out
jl
or
shlb
inc
mov
push
addb
mov
dec
insl
push
jo
pop
pushf
jle
sbbb
cld
loopne
xchg
mov
fs
lods
hlt
jbe
push
arpl
cltd
mov
dec
sbbl
mov
jl
inc
jo
mov
pop
xor
push
aaa
jo
mov
hlt
push
cmp
fsubr
repz
xor
stos
or
sbb
add
ja
stos
sub
fisubl
loopne
lret
ljmp
es
cmp
ret
mov
out
mov
les
jecxz
inc
pop
mov
scas
popa
or
scas
popf
loope
lea
arpl
movsb
push
in
sbb
push
roll
divl
inc
fwait
enter
popf
mov
ficomps
and
clc
and
subb
test
je
cltd
mov
sub
gs
into
jnp
je
sub
xor
loope
xchg
aad
inc
xor
xchg
js
test
pop
pushf
xchg
outsb
mov
ja
xchg
mov
cmc
add
leave
mov
sub
add
mov
inc
dec
jno
pop
sbb
dec
inc
mov
inc
xor
or
mov
jl
jb
jge
push
shll
lea
mov
cmp
add
popf
or
daa
js
jae
jp
in
pop
sti
fs
leave
sbb
jns
stos
cli
test
xchg
xor
pop
fsubr
adc
mov
fistpll
or
xor
mov
xor
jns
lahf
dec
inc
sbb
sbbb
lahf
or
minps
leave
mov
or
imul
xlat
pushf
adc
pop
or
jecxz
add
mov
popf
jmp
push
cmp
test
add
mov
mov
or
push
or
mov
faddl
and
loopne
mov
movsb
and
repz
dec
and
pop
out
cwtl
hlt
fdiv
mov
imul
inc
movsl
fists
cmp
mov
mov
push
les
sbb
jnp
hlt
mov
xor
pop
stc
movsb
lds
xor
into
rcr
lods
das
pop
jp
jo
into
pop
push
push
jl
mov
or
cwtl
dec
ljmp
in
xor
inc
enter
imul
xor
mov
jne
jg
mov
call
sub
movsl
xchg
leave
cmp
push
sets
dec
jmp
mov
mov
daa
jnp
sub
sub
jnp
imul
ljmp
lea
int3
movsl
adc
test
lret
xchg
pop
push
or
out
pop
push
mov
decb
scas
fidivrl
arpl
cmpsb
ljmp
sbb
mov
insl
add
push
xchg
popa
cli
je
test
gs
dec
cmpsl
sub
imul
shlb
push
popa
jp
fldenv
call
lock
fsubl
aad
push
xchg
ja
divl
pop
shr
push
inc
cmpb
or
fsubrp
adc
inc
add
icebp
js
add
stc
dec
insl
addr16
inc
xchg
mov
or
cwtl
mov
push
adc
hlt
adc
sbb
mov
add
sbb
xchg
mov
popa
lea
data16
lock
sub
stos
pop
mov
xor
inc
add
enter
add
repz
ficomps
cmp
iret
mov
outsl
inc
insb
ja
pop
fucomp
push
ret
dec
stos
dec
test
jnp
adc
xchg
repz
dec
cld
dec
mov
int
pop
push
xor
cmp
mov
pop
scas
sub
lds
scas
test
arpl
mov
int3
fstpl
fstpl
fwait
movsb
mov
dec
std
mov
arpl
xor
mov
fimull
bound
ds
mov
mov
and
das
sbb
imul
xchg
inc
ljmp
sbb
sbb
xchg
push
push
shll
dec
mov
cmpsb
out
dec
pop
sub
inc
inc
hlt
pop
cmp
sbb
push
xor
imul
sarb
sahf
decl
sub
scas
add
dec
in
push
xor
inc
sbb
or
fcoml
mov
je
or
add
adc
je
pop
mov
or
stos
xchg
imul
fs
orl
cmp
les
sub
call
enter
mov
mov
and
lea
fsubr
push
repnz
in
add
lods
cs
pop
add
cmp
out
not
add
rcrl
or
arpl
vminss
push
iret
pushf
mov
cmp
js
mov
adc
cmp
pop
mov
lahf
push
pop
popf
push
movsb
cmpsl
leave
mov
mov
pop
sub
inc
xchg
xor
cmpsb
negb
scas
cld
xchg
mov
dec
cmp
scas
jl
sub
decl
out
ljmp
stc
add
push
dec
sub
js
push
push
mov
gs
dec
in
xchg
mov
xchg
cmp
cmp
insb
lret
cli
fldln2
gs
out
pop
popf
mov
jg
push
mov
inc
popa
add
cmc
pusha
add
icebp
adc
fisttpll
push
movsl
inc
mov
fldl
loope
sub
push
add
mov
add
loope
loop
lahf
or
test
jno
lea
push
or
lds
pop
pop
dec
jns
lds
dec
or
repz
sub
movsb
pop
lds
mov
loope
lods
loopne
in
pop
pop
jl
test
clc
sub
push
jecxz
nop
add
pop
cmc
jecxz
mov
fisttpl
mov
sbb
cmp
sub
pand
icebp
popf
iret
xchg
cld
into
and
push
and
pop
sub
jg
stos
aaa
adc
andl
loopne
ljmp
dec
or
mov
hlt
or
sub
scas
add
shr
bnd
lds
jbe
sbb
bound
call
je
pusha
out
cmc
out
sbb
xlat
outsb
ss
ss
mov
xchg
sub
pop
cwtl
movsb
push
mov
in
xchg
push
adc
sbb
add
jle
mov
scas
sbb
mov
push
arpl
push
jne
cs
and
and
push
mov
aas
dec
mov
jne
bound
xor
stc
pusha
sub
dec
xchg
and
orb
dec
push
int
xchg
and
aad
sti
js
int
xlat
add
pushf
xchg
in
dec
xchg
push
mov
cmc
cld
mov
pop
sahf
jge
decb
sbb
popf
cld
jge
pop
cmp
fdivl
outsl
lahf
loopne
pop
xor
mov
imul
lcall
xchg
out
mov
das
cmovge
sbb
repnz
pop
inc
sbb
aaa
std
jp
dec
sub
push
stc
test
aad
mov
push
mov
jb
mov
inc
jmp
aas
subl
addb
add
in
in
inc
mov
sbb
jmp
cmp
pop
jb
out
adc
pop
sub
jnp
mov
adc
adc
cmc
shll
lods
jp
cs
jb
cmpsb
pop
dec
in
sahf
sahf
pop
popa
or
pop
jo
mov
and
pop
mov
out
mov
xlat
dec
add
add
push
pop
dec
or
iret
push
mov
or
repnz
xchg
mov
movsb
cmp
cmp
outsl
push
jecxz
dec
mov
data16
xchg
xor
jo
popf
scas
sub
hlt
fisttps
lods
cwtl
xor
ja
popf
adc
or
xchg
and
mov
or
mov
ret
mov
mull
sub
xchg
push
cmp
push
out
add
ljmp
jl
daa
loop
and
mov
frstor
xchg
pop
stos
arpl
test
enter
jmp
testl
ds
jl
xor
or
movb
aas
xchg
pop
or
stos
xor
jae
add
leave
out
in
cmp
mov
xor
loope
addr16
pop
test
cmovs
push
pop
mov
scas
pop
jbe
ret
aam
mov
pop
add
and
cmp
pop
adc
in
lahf
inc
sbb
adc
cwtl
fs
dec
sub
jp
pop
cwtl
bound
and
jp
lahf
dec
imul
pop
gs
subl
jecxz
add
and
mov
fbstp
data16
xchg
xchg
push
pop
aam
movsl
stos
fldt
mov
ret
lock
dec
mov
mov
sub
jle
or
shrb
sbb
stc
sub
jae
cmpsl
popa
jae
add
sbb
ret
imul
add
test
sarb
mov
andl
scas
mov
lret
dec
in
popa
stc
inc
mov
fldcw
sbb
push
add
jae
xchg
inc
psubb
xorb
in
test
mov
jg
xchg
mov
pusha
imul
xchg
into
push
clc
jg
jle
shll
mov
pop
in
mov
cmc
mov
aad
mov
mov
out
mov
lret
mov
cltd
or
rcr
adc
fildl
sub
xchg
push
pusha
jo
andb
sbb
lods
mov
jo
or
fnsave
test
pop
lret
int
mov
add
push
push
mov
leave
jnp
adc
mov
imul
xchg
scas
inc
cmp
xor
add
and
cmp
jle
das
cs
and
in
sbbl
enter
lahf
and
cmp
cmp
cld
in
imul
inc
lods
loopne
loop
sub
iret
adc
pop
add
dec
jne
in
repz
lret
inc
push
or
mov
mov
iret
xor
cmc
loop
outsl
lahf
popf
or
repnz
scas
xor
insb
fs
bound
dec
add
jmp
sub
mov
scas
mov
inc
and
cs
jne
icebp
inc
cmp
sbb
push
xor
imul
cmp
out
js
das
and
sarl
rcrb
in
subl
mov
cmp
addr16
out
xchg
aas
xchg
dec
sub
mov
cli
incb
push
sbb
les
leave
jb
addr16
je
or
call
aad
out
xlat
fisttpll
jge
dec
inc
xchg
jo
cmp
mov
inc
je
pop
xchg
mov
pop
inc
mov
or
aaa
fcmovu
and
insl
js
ror
daa
inc
inc
push
rorb
cmp
xchg
cmc
sub
mov
sub
add
loop
mov
jne
insl
dec
dec
insl
out
mov
movsb
scas
aaa
jecxz
cmpb
mov
lea
mov
repz
repnz
aas
add
popf
outsl
mov
mull
adc
shlb
sbb
lods
cvttps2pi
jae
fidivrl
in
test
sub
xchg
jl
add
cmp
jo
into
out
inc
jmp
aaa
ret
movsl
jo
and
inc
cmc
adc
sub
pushf
push
std
push
outsl
iret
int3
push
xchg
lahf
cmp
xchg
dec
mov
mov
xchg
decb
das
daa
and
mov
std
and
pop
dec
dec
cld
xor
inc
mov
pop
inc
loop
push
nop
jmp
jg
pop
inc
aas
lock
sbb
popf
mov
mov
adc
cwtl
or
imul
jns
or
pop
test
adc
in
arpl
or
lcall
cmpb
popa
loop
jnp
jnp
mov
cmp
mov
xchg
mov
add
pop
sti
dec
push
rclb
inc
add
pop
lods
add
jecxz
into
push
jp
xchg
out
cmpsl
pop
push
cmc
clc
lcall
dec
aad
arpl
xor
add
imul
mull
std
hlt
jl
rcrb
testb
jno
cltd
outsl
xchg
fcom
rcl
lock
pop
pop
and
imul
cmp
push
mov
jge
aaa
out
adc
lea
jns
adc
rcrb
mov
push
outsb
push
fucomip
xor
xor
aad
or
or
xlat
mov
push
adc
push
fwait
add
es
inc
aas
mov
insb
lret
push
shll
cmp
cmp
pop
addr16
push
push
imul
adc
mov
jp
xchg
push
xor
and
arpl
pop
stos
or
std
imul
pop
imul
lret
or
jae
push
mov
sbb
jae
adc
lock
out
xchg
out
arpl
pop
out
push
imul
into
sub
and
ss
pop
push
xor
cltd
dec
cld
jg
jmp
je
insb
pop
pusha
dec
in
sub
aad
xchg
mov
lcall
mov
js
sub
mov
push
sbb
std
jp
out
in
jl
and
sbb
jae
rolb
jmp
imul
movsl
xchg
movsl
notb
pop
stos
cltd
vmovaps
push
cmp
jle
leave
fmull
lret
cmp
stc
mov
mov
sub
xchg
decb
lcall
pop
jl
loop
ret
jge
insb
fnstenv
arpl
loop
ret
fnstsw
out
sub
cmp
aad
xchg
aam
popa
sbb
mov
xchg
jle
inc
xor
ss
or
sub
lock
jg
xchg
leave
push
xchg
je
sub
into
sub
adc
sbb
mov
jg
std
pop
xor
cmc
insl
sbb
dec
adc
xchg
jne
shlb
addr16
fildll
call
shlb
jnp
in
imul
js
xchg
add
adc
imul
sub
adc
cmp
test
movl
xor
lret
dec
jbe
jo
push
jp
push
clc
pushf
mov
jns
scas
in
rcrl
ffreep
js
aad
add
dec
imul
mov
jmp
lods
pop
mov
in
inc
int
stc
dec
enter
push
rcl
mov
push
orb
outsb
pusha
popa
add
lods
push
shll
inc
push
xor
or
mov
push
push
fcoms
lock
cmp
fwait
in
xor
lahf
adc
xchg
dec
nop
jns,pn
xchg
push
pop
inc
xor
loope
cmpl
add
scas
mov
mov
cmp
xchg
and
jnp
mov
into
inc
or
sbb
lcall
jle
xchg
popf
scas
loope
cmp
fistpll
test
mov
or
dec
inc
insl
addr16
lods
ss
mov
fldt
push
mov
int3
push
and
aas
fisubrs
gs
negl
jnp
scas
xchg
cwtl
bound
xor
ja
iret
add
xor
mov
fisubl
mov
into
inc
lret
mov
cwtl
mov
and
movntps
jne
iret
jo
dec
dec
pop
sbb
mov
sub
stos
fnstsw
loopne
nop
test
sub
xor
cs
mov
insl
inc
cmc
xchg
das
sub
imul
mov
outsb
mov
orl
xor
and
sbb
fstpl
pop
sahf
sub
jp
cli
cs
mov
fs
lods
jno
add
sub
cmp
jecxz
mov
out
sahf
gs
xchg
incl
mov
pop
pop
data16
adc
pushf
push
nop
sahf
sbb
fsub
mull
xor
jmp
mov
nop
adc
ret
mov
inc
push
pop
xchg
mov
jae
popa
xlat
sahf
add
or
lea
nop
or
add
and
cmp
push
sbb
sub
or
jg
pop
ficoms
aad
lods
jg
enter
clc
pop
enter
mov
das
xchg
adc
add
pop
xchg
fldl
lea
daa
pop
push
jle
jg
int
cmp
cmpsl
adc
rolb
adc
arpl
stos
jo
or
das
enter
rcrl
mov
fwait
add
cmpsl
mov
outsb
sbb
lods
out
cwtl
sub
sub
sti
loopne,pn
call
aad
cli
dec
mov
and
push
pop
sub
roll
jbe
fwait
mov
lock
mov
adc
inc
xchg
jl
cmpsl
test
jns
stc
push
std
mov
fmuls
fsub
ffree
fcmovb
xchg
iret
imul
out
pusha
stc
jg
adc
mov
test
daa
pop
adc
out
arpl
xchg
dec
inc
push
lods
fiaddl
mov
repz
jne
call
push
xchg
or
dec
lahf
jno
mov
and
xchg
pop
stc
xorb
xchg
mov
adcl
aad
adc
cmpl
inc
pop
movsl
sub
ss
dec
fnstsw
call
cli
cmovns
xchg
fdivrl
outsl
ret
inc
adc
adc
jmp
sbb
xchg
pop
or
filds
scas
jb
mov
call
imul
in
imul
pop
cltd
add
mov
outsl
xlat
in
xor
or
inc
lahf
fnstenv
xor
jb
insl
and
mov
dec
sub
sbb
inc
lock
aas
and
jle
test
mov
inc
xchg
jp
dec
enter
adc
push
scas
lret
in
cs
sub
es
xchg
ljmp
out
outsl
sti
xlat
push
shrb
andl
xchg
dec
bound
popa
stos
lret
and
mov
mov
cmp
dec
pusha
addr16
or
mov
ret
add
mov
sbb
fdivs
mov
lods
scas
iret
jp
outsl
xchg
or
inc
or
xchg
mov
data16
mov
imul
sbb
fstpt
out
push
pop
adcl
movd
ja
push
jb
dec
adc
dec
insl
mov
sbb
sarb
fsubrp
mov
or
jecxz
arpl
mov
je
int
into
inc
sahf
scas
push
inc
mov
subb
pop
mov
xorl
jb
adc
or
clc
pushl
xchg
out
jp
ret
repz
das
sbb
jo
lds
xchg
adc
inc
push
js
xchg
in
loope
cmp
sbb
dec
divl
imul
or
jp
xor
inc
pop
mov
mov
in
add
bound
add
out
gs
mov
rorl
cmpsl
das
sbb
aaa
mov
xchg
pop
in
xchg
dec
loope
aam
push
sbb
mov
pop
and
movsb
mov
jo
mov
jl
sub
lock
cmc
lods
dec
pop
jo
dec
fiaddl
lds
pop
inc
push
or
and
sbb
mov
push
lea
dec
fidivs
jle
cmpsl
mov
int
lock
add
xor
aam
mov
pop
xchg
scas
pop
rcl
dec
and
daa
sub
or
fimuls
les
dec
sbb
mov
std
cwtl
dec
and
repnz
push
mov
jo
les
sbb
pop
mov
mov
jbe
mov
pop
ljmp
int
cltd
fnsave
movsw
popf
sub
imul
mov
push
aam
sub
in
es
mov
lcall
add
pop
mov
pop
push
fwait
lcall
push
mov
xor
daa
enter
mov
ja
xchg
adc
adc
outsb
div
arpl
push
sbb
cmp
mov
jo
mov
push
aad
mov
mov
icebp
dec
pop
and
pop
pop
push
lds
add
jecxz
inc
inc
fistps
adcl
fidivl
push
jb
mov
in
loopne
orb
inc
loopne
lret
inc
popa
ja
sahf
xor
add
in
in
pop
xor
in
jl
sahf
add
push
enter
jns
dec
ss
xor
fistl
arpl
shll
push
psadbw
or
int3
sub
and
push
jns
or
jecxz
call
jle
in
shl
cmp
sub
aas
xor
xor
sub
cmc
mov
pop
daa
dec
xchg
or
ds
sub
add
daa
hlt
dec
cmp
fwait
inc
testl
push
jle
jecxz
ret
mov
mov
sub
cwtl
test
mov
mov
ds
lret
das
or
add
and
push
fsubr
inc
popf
nop
rcl
mov
pop
or
xchg
inc
sub
push
mov
int3
in
xchg
push
xchg
jle
aaa
int
dec
in
mov
ds
popa
dec
mov
adc
dec
clc
adc
mov
xchg
cs
pop
pusha
adc
pop
insb
cmp
dec
push
pop
mov
push
icebp
adc
ret
inc
xor
cmp
push
test
xchg
mov
and
jbe
xlat
ja
push
xchg
xor
add
lret
or
out
rolb
or
xlat
test
test
mov
mov
push
ror
and
mov
loop
jge
jae
pop
aas
fxch
js
dec
push
push
shlb
push
mov
push
mov
sahf
imul
jbe
nop
mov
adc
push
pushf
mov
stc
cltd
jmp
inc
cs
imul
adc
or
decl
jmp
aas
adcb
xor
cmp
push
push
inc
adc
cmp
daa
test
push
mov
and
ljmp
orb
stc
sub
les
lods
xchg
adc
adc
sbb
jb
jns
loopne
sbb
icebp
out
add
repz
fdivrp
sahf
mov
mov
push
sbb
jnp
jne
repz
pop
fistpl
movsb
ja
jmp
cmp
adcb
into
xor
movsb
icebp
cmpsl
mov
stos
test
jns
stc
inc
sub
and
xlat
cmpsb
add
aas
scas
mov
pop
mov
ficompl
cld
mov
pusha
das
and
dec
cltd
push
pop
jecxz
inc
inc
rolb
xchg
xchg
pop
push
mov
shll
ret
int
push
into
jne
mov
xchg
sbb
cmp
pop
aas
sahf
jnp
imull
mov
movsb
push
xchg
xchg
shl
cmp
add
add
dec
xor
xor
js
jecxz
inc
cmp
mov
cmpsb
push
js
sub
push
mov
int3
test
dec
xchg
cmp
push
sahf
minps
scas
in
inc
add
ljmp
js
add
cmp
adc
pop
mov
jne
sub
inc
push
scas
mov
sub
mov
adcb
bound
loopne
lods
jnp
es
ss
pop
incl
sub
fnstcw
mov
add
notb
xchg
test
ss
jbe
addr16
das
loop
mov
xor
pop
sub
lods
sbb
push
ret
jbe
mov
mov
popf
and
movsb
arpl
pop
rcr
mov
push
sub
movsl
xchg
push
aad
inc
sbb
jb
xchg
or
icebp
jbe
inc
stos
mov
pop
push
ljmp
cltd
fwait
test
mov
fcmovbe
xor
es
dec
sbb
dec
cmpsb
dec
add
scas
push
lea
imul
cmp
inc
mov
fcompl
in
dec
add
cmc
pminub
call
add
pop
push
cmpsb
loope
xchg
mov
push
repnz
push
xor
cmp
ja
pop
or
loope
fnstsw
cwtl
cwtl
idivb
push
gs
add
les
push
negb
adc
sbb
into
sub
in
leave
pop
cmpsb
outsb
jg
jb
sarl
insl
insl
inc
inc
xor
dec
cld
pusha
lock
jl
mov
push
lret
pop
xchg
mov
testb
dec
xchg
mov
pop
lret
data16
xchg
pusha
into
idivl
inc
jp
insb
hlt
mov
jnp
lret
shlb
enter
sub
pop
cmp
sti
or
rorb
rol
je
test
insb
in
sub
fcomip
stos
lcall
cmpsb
mov
negl
mov
stc
loope
imul
rcrl
mov
mov
repnz
jbe
dec
sbb
cmp
pushl
int3
inc
push
push
jno
mov
nop
mov
mov
fldenv
mov
jae
cmp
jne
jnp
lahf
movsl
sub
and
insl
data16
orl
scas
jne
dec
pop
int3
mov
mov
and
jmp
jg
xor
or
sbb
js,pn
sbb
lea
adc
and
cmc
push
push
inc
add
ret
add
lret
fistps
lods
test
xor
ja
lods
add
mov
repnz
arpl
loope
cmpsl
stc
rolb
call
inc
and
adc
mov
das
push
sbb
dec
sbb
cltd
enter
ja
fnstenv
add
dec
push
mov
mov
xor
jbe
nop
add
adc
sub
inc
fists
xchg
adc
nop
add
movsl
aam
lret
xor
out
and
and
jae
cmp
sub
adc
mov
inc
arpl
movsl
out
adc
inc
std
jnp
mov
cltd
sub
pop
lahf
ret
pop
fs
outsb
jnp
jl
mov
loopne
xchg
cs
std
je
mov
in
xchg
lods
pop
ds
out
in
and
sub
imul
jge
flds
add
push
in
insb
xchg
aas
movsb
dec
or
xchg
cmp
push
xchg
sub
test
nop
cmp
repz
jnp
stos
and
adc
push
addl
lcall
mov
xchg
lods
fmull
mov
mov
add
xchg
mov
cltd
cmpsl
mulps
addr16
xor
and
movsb
mov
cmpsl
adc
mov
mov
sub
das
loopne
mov
movsl
cmpsl
dec
fidivl
inc
xor
test
addr16
lock
sub
mov
loopne
fsts
add
mov
jno
add
mov
inc
cmp
pop
ds
into
mov
adc
fmull
jno
mov
leave
andb
jns
popf
adc
inc
lcall
jmp
sahf
aas
outsl
sti
js
out
ljmp
sub
jbe
adcl
mov
not
push
ljmp
mov
xchg
xor
cmpb
mov
movsb
test
cmp
jg
mov
test
insl
cmc
popf
into
push
lret
cld
cwtl
xchg
rcr
xchg
out
mov
xchg
or
nop
cmpsb
adc
mov
pop
aam
mov
mov
ja
xchg
popf
gs
daa
or
lock
mov
dec
dec
bound
cltd
ljmp
add
push
mov
adc
cmc
xor
xchg
aam
cwtl
inc
sub
andl
inc
mov
int3
ret
dec
push
push
cmc
xor
out
xor
lods
in
gs
pop
int
jle
cmc
cmpsb
call
sub
testl
mov
dec
xlat
push
inc
iret
pusha
scas
add
test
test
int3
in
add
sbb
lea
adc
decb
mov
inc
jp
xchg
cld
dec
adc
push
pop
sbb
mov
jmp
adcl
incl
mov
mov
rorb
pop
jmp
les
xor
inc
adc
xchg
pop
fldenv
push
adc
cli
jo
push
jmp
arpl
fwait
popa
fwait
mov
push
xchg
scas
cmp
jl
aas
xchg
cmp
pop
dec
push
xchg
push
jo
mov
lea
scas
lret
cs
cmp
xor
and
cmpsb
outsb
mulb
sbb
pop
mov
cmc
mov
adc
jecxz
mov
shl
call
andl
roll
inc
subb
add
cs
adc
fsts
or
sub
mov
repnz
cmpsb
fnstsw
aas
pop
test
add
shrb
sahf
test
mov
jne
decl
addr16
sbb
divl
cmp
jbe
push
add
loop
incb
fsubrs
xchg
adc
mov
rorl
mov
push
push
dec
js
fimull
dec
mov
fisubs
xchg
in
js
testl
sub
xlat
aaa
xchg
or
pop
outsl
push
sub
rol
adc
orb
pop
pusha
mov
std
sub
xchg
test
xchg
lret
pop
ljmp
jl
cltd
testl
shr
lds
lea
mov
xchg
mov
movsl
ret
dec
pop
arpl
jns
in
mov
lods
dec
dec
xor
cmp
cmp
and
pop
xchg
fmul
mov
mov
je
es
dec
xchg
ss
jmp
sbb
jl
ret
xchg
xchg
jno
mov
ror
stc
sahf
sbb
adcl
sub
push
xchg
push
inc
out
add
push
rolb
mov
insb
lds
xlat
in
mov
add
jbe
ss
ret
jg
mov
adc
add
dec
sub
pop
add
test
fistps
jns
in
adc
adc
imul
into
out
push
ror
sub
notb
mov
iret
test
cmp
clc
sbbb
rcll
and
out
cmp
inc
inc
pop
ret
mov
rcrl
add
sarl
mov
adc
or
mov
xlat
les
ljmp
aas
into
inc
mov
push
or
xor
mov
add
sub
das
std
mov
mov
cmp
jg
out
mov
jmp
mov
test
test
aad
call
sub
sbb
in
jnp
mov
mov
mov
add
pusha
add
int
in
addb
inc
cmc
call
lods
sar
add
lock
add
pop
sbb
or
add
jno
xor
xchg
rorl
dec
aas
cmp
rclb
lods
or
gs
add
dec
imul
jo
mov
adc
inc
std
lret
adc
and
outsb
mov
stos
and
out
loopne
sbb
xchg
lret
addr16
mov
sbb
arpl
add
repnz
jmp
lret
jno
inc
xor
sbbb
les
xchg
jp
add
xor
iret
cmc
and
mov
test
xchg
fmuls
xor
cltd
js
cmpsl
mov
into
aad
cmp
or
or
adc
inc
in
sub
and
dec
cmp
sbb
cmp
mov
sub
mov
divl
mov
daa
cwtl
mov
ljmp
push
inc
addr16
popa
add
daa
mov
xchg
and
push
scas
cmp
ljmp
dec
adc
mov
pop
mov
mov
jbe
xor
rolb
rcrl
mov
inc
in
arpl
push
cltd
sahf
push
clc
ret
mov
mov
je
mov
repz
mov
jmp
stc
fucomi
in
shrb
xchg
sbb
mov
mov
jno
xor
mov
test
in
xchg
mov
icebp
jns
xchg
les
xchg
mov
aam
mov
jmp
ret
mov
dec
cmp
xlat
push
xor
xlat
xor
push
outsl
or
mov
fisubrs
lret
hlt
js
jle
cmp
imul
test
in
loope
lcall
mov
shlb
fincstp
xor
jb
cld
push
mov
cmp
mov
in
insl
imull
mov
and
aad
jo
mov
daa
cld
cmp
test
cwtl
sahf
add
scas
jo
sub
jle
add
jp
mov
push
jge
ss
and
test
xchg
loop
out
xchg
lds
adc
lds
mov
jae
fstps
mov
aad
cmpb
inc
rorb
mov
movl
pop
jo
inc
lea
call
mov
mov
dec
scas
push
dec
out
mov
cmpsl
jnp
jae
jg
test
test
inc
or
decl
dec
pop
mov
mov
fldt
aam
mov
imul
xor
push
dec
push
outsl
andl
cli
dec
mov
negl
jmp
in
lea
insl
in
add
bnd
insl
cli
jb
dec
popf
cmp
rcll
cli
insb
das
xlat
cld
inc
mov
mov
test
repnz
xlat
loope
and
xchg
add
and
add
mov
xlat
into
xor
dec
push
push
leave
pop
mov
inc
dec
std
jns
mov
lahf
subb
push
in
movsl
and
movsl
imul
jmp
imul
cld
mov
jmp
and
mov
or
cltd
ret
xchg
and
dec
sbb
insl
add
jno
fsubl
aaa
stc
mov
fmull
push
out
hlt
add
mov
jge
dec
popa
pushf
sub
movsl
and
leave
outsb
rclb
movsl
inc
addr16
xchg
or
push
pop
rcl
mov
mov
mov
test
mov
sub
stos
and
pop
xchg
mov
scas
jns
pop
sub
addr16
cli
inc
cmp
out
cmp
dec
ret
negl
pop
xor
and
cmp
iret
mov
dec
mov
xlat
jnp
mov
inc
xchg
xchg
cmp
aad
rclb
icebp
cmp
test
int
test
xchg
cmc
sub
xor
jbe
jb
mov
jnp
pop
cmp
lret
xor
fists
sbb
xlat
ss
sbb
push
divb
cmpsl
dec
bound
negl
cld
in
pop
dec
lcall
arpl
inc
sub
pmaxsw
scas
push
lcall
and
sub
hlt
lahf
mov
hlt
pop
cmpl
orl
mov
das
popf
cmpsb
xchg
push
mov
outsb
neg
pop
cmp
test
and
rcrl
into
mov
inc
je
push
jg
fs
out
push
xchg
js
stos
xor
test
cs
add
mov
push
push
insl
xor
fcoms
imul
aas
xchg
sub
push
pop
jne
ret
sbb
lods
bound
stos
adc
mov
mov
imul
pop
pop
jnp
mov
bound
cmp
imul
in
mov
es
cmpsb
cbtw
or
mov
xchg
xchg
jecxz
mov
mov
mov
lods
pop
jle
lea
outsl
repz
pop
jmp
ret
add
and
push
cmp
xchg
rclb
std
lods
lods
mov
or
add
pop
ds
cmpsb
in
inc
outsb
stos
mov
cmpsb
lahf
xor
stc
outsl
test
xor
jbe,pt
outsl
cmc
scas
lret
sub
ret
lods
adc
push
cmp
out
sbb
mov
cli
cltd
hlt
xchg
les
pop
orl
sbb
inc
les
mov
mov
arpl
jnp
xchg
lcall
push
jbe
out
xlat
pop
mov
pushf
outsl
stos
lods
add
enter
push
mov
jnp
int
ljmp
jne
lea
jle
ja
xor
shrl
out
movsb
daa
dec
loope
jo
push
jo
fwait
jl
adc
xorl
push
xchg
cmp
aaa
jl
in
enter
rep
cmc
inc
sub
rcrl
push
push
ficomps
imul
in
pop
int3
data16
in
icebp
mov
aas
imul
mov
cmp
mov
sub
or
int
jnp
sbb
pop
cmp
loopne
mov
outsl
movsl
sub
arpl
rcll
dec
cmpsl
test
pop
dec
push
mov
daa
xchg
popa
stos
push
loop
and
ss
fcomps
or
mov
lcall
pop
js
adc
out
pop
jbe
cmpsl
jae
test
push
pop
cwtl
adc
negb
pop
push
mov
test
dec
daa
lea
orl
bound
arpl
pushf
flds
iret
and
sub
cmp
cmp
std
es
inc
or
ss
lret
xchg
jbe
xor
addr16
sbb
cmpsl
mov
sub
cmp
out
test
mov
cmc
pop
xlat
cmp
mov
pushf
xchg
jmp
push
fs
xchg
jb
js
aas
sbb
mov
out
les
cmpsb
adc
loopne
jg
test
movsl
and
fwait
mov
fists
push
shrl
pusha
test
out
cmp
and
lods
fmuls
add
sub
or
sub
lahf
testb
out
xchg
xchg
daa
outsb
les
mov
ret
xor
shrb
mov
ss
fsubrs
add
test
jne
push
mov
dec
pop
lock
pop
stos
hlt
sbb
cmp
mov
mov
cwtl
push
xor
add
adc
mov
pop
loop
cwtl
lods
hlt
sbb
test
sbb
pop
jmp
ljmp
pop
pop
fs
leave
sahf
cmpsl
ljmp
das
xor
imul
jb
cld
stos
dec
and
daa
push
and
cmp
fwait
sbb
ret
mov
je
jnp
fwait
sar
cmp
scas
out
mov
sbb
or
add
mov
clc
js
dec
iret
and
or
lock
subl
aam
mov
mov
sbb
dec
bound
movl
or
mov
pusha
lret
xor
repnz
mov
clc
cmc
xor
outsb
xchg
test
cmp
push
ffreep
mov
xlat
mov
shll
testb
push
push
xor
shlb
push
pop
scas
pop
out
lods
dec
mov
and
dec
adc
sub
call
call
les
jle
inc
in
mov
inc
call
fistl
orb
stos
and
pop
mov
int3
mov
xor
mov
stos
jl
ficoml
cmpsb
insl
pop
test
cmp
test
xchg
jle
xchg
lods
sub
jmp
shll
lods
hlt
std
jmp
jno
xchg
inc
loopne
inc
and
addr16
test
xchg
sti
push
insl
sti
aad
into
fwait
pop
adc
shlb
insl
lea
test
dec
jg
jae
push
outsl
push
jno
xor
pusha
popa
fisubl
movsl
sub
jne
imul
iret
lds
sbb
xchg
jb
in
stc
sbb
mov
aad
lods
pusha
enter
movsb
xchg
enter
add
stos
not
repnz
inc
test
rcl
cmpsb
push
push
iret
lcall
stos
cltd
jge
jne
call
test
dec
aaa
popf
jo
pop
ret
push
push
mov
iret
cmp
or
mov
mov
jg
xchg
inc
insl
rorl
cwtl
test
test
out
mov
pop
fisubl
mov
sbb
ljmp
mov
loopne
cmp
xchg
sahf
xor
in
fwait
stos
blcs
xchg
popa
add
dec
out
mov
mov
mov
fxch
imul
stos
cmc
pushf
leave
xchg
das
jae
mov
mov
repz
sahf
dec
int3
inc
imul
lret
cmp
pop
jg
mov
xor
jno
pop
sub
pop
loope
test
push
dec
fimull
int3
fucomip
mov
dec
out
arpl
add
or
dec
hlt
sub
xchg
add
inc
xchg
pop
adc
sbb
je
adc
adc
in
sbb
push
dec
cli
jb
sbb
je
sbb
dec
sbb
fucom
fwait
std
add
jne
out
sbb
dec
push
sbb
repz
push
xchg
push
aam
loope
mov
jns
cmpsb
push
test
sub
out
scas
mov
inc
out
jo
dec
bnd
fimull
add
addr16
push
push
out
push
push
and
fwait
xor
add
dec
mov
jge
mov
out
push
mov
pushf
xlat
push
std
cmpsl
data16
mov
or
das
fcmovnu
pop
jge
xchg
es
sbb
sbb
das
aaa
mov
sub
clc
jno
daa
adc
sbb
mov
insb
mov
pop
ror
push
mov
pop
hlt
jno
ret
rolb
loopne
flds
aam
pop
and
imul
outsb
jp
push
push
cwtl
lret
add
dec
mov
add
jle
push
sbb
add
dec
inc
cmp
pop
in
mov
push
mov
sbb
outsb
or
mov
jmp
xor
mov
insb
pop
and
loopne
push
inc
push
lock
cmpsl
js
lds
push
enter
iret
jns
insb
mov
xor
in
out
bound
and
xlat
ffreep
lds
pop
ds
dec
and
popa
sub
idivb
enter
in
inc
shl
or
cwtl
fsubr
jle
sar
xor
movsl
in
repz
sbb
or
xlat
testb
dec
popa
out
xlat
imul
sub
test
icebp
and
push
pusha
xchg
adc
js
xor
push
push
insl
loopne
stos
xor
cmp
lock
enter
fsubr
xor
sbb
loop
sub
pushf
pusha
ljmp
loopne
aas
cmc
xchg
fisttps
loope
dec
out
and
hlt
push
push
and
dec
or
stc
ja
test
pop
inc
xchg
sub
push
jge
or
fisubs
inc
loop
fidivs
push
loop
vphaddbw
clc
xchg
xchg
jecxz
jmp
xor
jle
mov
inc
add
adc
jl
xchg
sub
cmp
into
test
call
and
mov
xor
ret
insl
adcl
jns
popa
and
pop
shl
adc
jne
dec
mov
ret
mov
mov
scas
into
movsl
adc
movsb
inc
daa
pop
dec
cmp
addr16
dec
jae
jmp
inc
lds
scas
aam
test
mov
pop
and
jbe
rorl
imul
and
inc
mov
stos
mov
mov
daa
jl
or
cmpsb
push
jle
aam
cltd
mov
out
sbb
sub
arpl
pop
addb
repz
mov
pop
add
cmp
jne
ficompl
jmp
xchg
das
cmp
popa
adc
add
cld
pop
bnd
pop
lods
icebp
sub
xor
xor
xlat
or
out
pusha
xorb
in
js
lea
int
add
test
pushf
add
dec
mov
pop
mov
in
lock
mov
push
adc
add
push
or
fsin
mov
call
lcall
addl
add
add
xor
je
cltd
lret
xor
inc
inc
dec
dec
clc
ret
mov
cmp
adc
insl
call
xor
daa
jnp
pop
dec
pop
iret
and
ljmp
push
push
mov
push
pop
jp
dec
mov
sbb
shrl
sub
cs
int3
pop
pop
cwtl
mov
enter
push
sbb
jg
daa
pop
sub
pop
cmp
sbb
push
pushf
add
test
cld
lds
neg
xchg
faddl
je
sub
dec
or
test
inc
aam
sbb
je
jmp
aas
dec
inc
or
jne
adc
inc
cmpsb
jne
sbb
aad
adc
stc
into
popa
std
jns
or
sub
sbb
icebp
cmp
xchg
ror
gs
fsubrl
inc
push
inc
jne
mov
ja
inc
iret
jnp
inc
dec
test
stos
mov
cmpsb
push
mov
mov
mov
dec
outsl
xchg
nop
jbe
mov
ds
in
ds
das
jns
js
mov
add
cmp
push
sahf
inc
movl
and
mov
push
jbe
push
and
daa
cmp
cltd
ret
add
mov
push
outsl
cmpsb
fnstenv
mov
mov
out
cld
test
ror
jbe
jno
cmp
cmovge
jns
pusha
adc
ds
cmp
jmp
scas
mov
add
xor
lcall
add
xchg
push
es
jle
mov
xchg
cmp
xchg
push
pop
adc
lods
repz
cmp
fdivs
mov
jle
sbb
loope
push
lret
mov
or
and
adc
push
mov
repz
in
fwait
cltd
iret
mov
lock
test
xchg
insb
pop
jb
insb
mov
lds
aas
daa
mov
sarl
lock
shll
add
mov
in
pop
sbb
jb
cmp
rcrl
cli
jbe
mov
out
js
mov
xor
pop
mov
push
add
mov
mov
xor
lock
ret
gs
xor
jle
fmul
ljmp
int
scas
xchg
cmp
mov
or
stos
xor
cmp
xchg
sbb
add
outsb
insl
pop
lods
out
outsb
dec
cmp
mov
mov
push
fsts
popf
mov
cmpsl
cmc
outsl
aaa
rcrl
leave
repnz
dec
lock
or
insb
adc
ret
jl
fisubs
insb
orl
ret
adc
rcr
mov
inc
aam
bound
mov
dec
fwait
mov
dec
xchg
mov
inc
push
dec
mov
sub
aad
nop
cmpl
repz
in
pop
inc
call
mov
clc
jmp
and
inc
mull
mov
sub
lahf
sbbl
dec
cmc
add
into
sbb
testb
jle
pop
cmp
stos
loop
push
cmc
sbb
stos
adc
push
lahf
mov
loop
icebp
and
dec
fisttpl
icebp
out
mov
jge
pop
in
xor
gs
daa
lds
dec
scas
les
frstor
pop
push
in
push
cmpsb
push
xor
fists
and
faddl
fwait
mov
sahf
mov
xor
outsl
mov
lret
aad
arpl
cmp
xchg
ret
cmpsl
sub
push
mov
cmp
dec
fstpt
inc
pop
les
addr16
inc
pushf
push
es
push
mov
rcll
ret
jns
repz
mov
inc
inc
out
jnp
filds
add
jg
sub
push
ret
inc
adc
lret
movsb
leave
pop
inc
clc
testl
push
arpl
fistl
xchg
inc
or
mov
gs
test
into
pop
clc
dec
sti
leave
add
pop
mov
cmp
aas
jl
enter
orl
mov
cmpsl
leave
cmp
xchg
pop
les
dec
xor
ds
lds
jno
pop
sbb
xor
in
adc
cmc
push
pop
ret
pusha
fwait
out
sub
ljmp
loopne
push
testb
pop
hlt
idiv
not
xchg
stos
and
and
into
add
ficompl
pop
mov
mov
cmp
scas
xchg
mov
int3
sahf
xchg
cmp
pop
jnp
icebp
roll
loop
mov
fs
pusha
mov
xchg
ret
push
repz
pop
xchg
hlt
and
insb
dec
cmovb
lret
jg
sub
insl
adc
xor
lret
jo
mov
icebp
xchg
test
pop
xorb
xchg
ficoms
mov
pop
mov
stos
xor
int3
aaa
arpl
inc
int
add
xor
inc
mov
insl
xor
push
sarl
dec
push
mov
loope
push
mov
cld
jb
add
insb
mov
cmp
cli
mov
fnstsw
pusha
nop
pop
sbb
xor
fisttps
gs
mov
mov
aad
pop
insb
dec
pop
jb
test
jge
cwtl
rcrl
ds
jl
in
pop
inc
dec
out
push
ljmp
cmpsl
jno
movsl
out
mov
ds
jne
test
ja
shl
test
adc
mov
push
push
push
leave
mov
mov
push
lock
xor
push
cmp
scas
mov
or
jno
fmull
scas
and
outsl
andb
mov
pop
push
xchg
fstpt
jo
mov
jp
inc
fmuls
mov
testb
mov
mov
dec
out
out
adc
pop
fadd
mov
lcall
cmp
das
loope
lds
loopne
jl
jl
xchg
xchg
pop
inc
daa
es
lea
stc
std
int
jnp
fcmovnbe
adc
leave
mov
loope
loope
jnp
aaa
mov
test
or
in
arpl
xchg
add
jp
loope
lock
repnz
and
add
xor
inc
sbb
ss
sti
lret
adc
push
js
and
add
cmp
stos
ret
jbe
outsb
mov
sbb
test
mov
mov
sbb
and
imulb
mov
fwait
data16
adc
stos
inc
scas
pop
xor
and
sbbb
mov
xor
fs
dec
ljmp
dec
xlat
lock
inc
add
fsubs
xor
xchg
das
je
fs
cmpsl
jecxz
out
outsb
mov
sbbb
fsubrs
sub
or
mov
xor
mov
mov
mov
xor
scas
mov
cltd
cltd
sbb
aaa
shrl
sub
inc
and
aas
jecxz
mov
lret
sub
cmpl
sbb
add
push
inc
in
lahf
adc
shlb
loope
mov
cmp
xchg
sub
ljmp
popf
dec
dec
std
adc
push
add
push
dec
aaa
int3
stos
rcrl
sbb
or
dec
jg
sub
cli
or
sub
in
mov
lcall
popf
inc
add
cmp
add
ljmp
mov
out
xchg
into
jecxz
sarb
mov
in
jb
pop
pop
mov
cmpsl
jbe
out
inc
fildll
cwtl
mov
shrl
jns
shl
imul
and
sahf
inc
jl
test
push
adc
movsl
inc
push
and
or
add
bnd
mov
outsb
xor
adc
mov
popf
sbb
and
test
push
mov
ret
xchg
dec
loope
cmp
in
push
cmp
enter
ss
pop
pusha
popf
dec
cmc
call
mov
outsl
mov
cmpl
mov
mov
pop
ficoml
ja
movsl
jne
es
sbb
fldcw
fs
add
pop
in
aaa
xchg
fnstsw
dec
push
and
adc
ja
xor
loop
mov
mov
and
test
addl
xchg
sarb
xor
movsl
fistl
cwtl
adc
sbb
sbb
test
add
lcall
push
inc
hlt
pop
xor
mov
and
or
dec
xchg
sbbl
movsb
ds
insl
cmp
mov
push
mov
xchg
imul
mov
pop
inc
add
idivb
jo
push
xor
dec
xchg
push
sbb
adc
xchg
inc
add
jge
test
movsb
xchg
push
mov
sarb
xchg
mov
pop
call
sbb
repnz
mov
loopne
mov
or
mov
movsb
jns
cmp
push
mov
add
in
inc
nop
sbb
cli
add
and
mull
fistl
jge
inc
iret
sbb
xorl
scas
pop
inc
inc
int3
adc
mov
and
in
repnz
adcl
inc
mov
mov
repz
sbb
push
ret
popf
dec
sub
daa
cmp
dec
iret
pop
std
add
jo
or
adc
repz
or
shll
loop
push
cmpsb
dec
mov
and
ret
dec
mulb
mov
out
or
fistps
jo
fnsave
cwtl
sub
ds
cmp
stc
cmp
sti
loop
fiadds
scas
jmp
in
pop
sub
and
repnz
repz
imul
daa
scas
sbb
sarl
orl
and
in
cmp
js
shlb
and
out
jns
mov
push
outsb
addr16
movl
lds
and
cmp
mov
xor
test
jno
mov
cmp
adc
or
lea
in
lret
roll
xchg
outsb
adc
mov
popa
add
adc
jbe
cmc
mov
jnp
int
cmp
ja
aad
jmp
and
sti
push
dec
pusha
sbb
lret
fists
mov
icebp
mov
andb
call
xor
dec
jbe
cmp
lret
xlat
dec
daa
mov
jnp
js
adc
les
lret
jg
mov
fcmovnu
xchg
xor
lods
jns
fcomps
push
dec
push
ss
jl
lock
divb
xor
lea
add
or
pop
bound
data16
push
es
jbe
sbb
inc
movsb
sub
jecxz
jmp
out
pop
shlb
pop
dec
andl
inc
fisttpl
lods
adc
in
inc
cmp
lock
mov
push
push
jbe
xor
pop
fsubl
mov
mov
and
dec
xor
jae
xlat
xchg
imul
lahf
xchg
ss
out
loopne
mov
xchg
test
and
xchg
or
inc
cld
aad
pop
sub
pop
in
cltd
mov
add
stos
lods
push
lds
outsl
dec
mov
cmp
loope
sub
in
sti
sbb
bound
iret
pusha
repz
cld
sub
je,pt
aad
xchg
test
pop
mov
pop
xchg
xor
mov
es
mov
push
inc
jae
outsl
cmp
lret
shrl
dec
adc
punpcklbw
mov
lds
icebp
xor
icebp
cwtl
daa
cmpsb
pop
jno
push
jl
push
inc
call
push
movb
or
dec
stos
jns
ja
add
inc
icebp
loop
or
out
mov
and
mov
outsb
sbb
in
ret
lock
mov
jbe
and
xor
stos
es
sub
mov
movsl
movsl
inc
or
mov
jp
test
bnd
dec
inc
ret
mov
jns
mov
push
jle
pop
lods
dec
pop
aad
fistl
sbb
call
hlt
jmp
mov
and
adc
pop
jae
inc
xor
and
out
repz
out
imulb
das
or
js
rorl
mov
dec
and
shlb
push
mov
and
ret
cmp
fidivl
adc
fstl
daa
xor
mov
mov
ss
pushf
loopne
sub
iret
jne
popf
orb
jae
shl
adc
js
push
dec
jae
push
cltd
mov
gs
dec
jle
add
mov
inc
pop
loopne
jbe
loop
sar
mov
arpl
dec
and
or
out
or
and
inc
and
or
inc
aas
shrl
mov
out
add
orl
xor
jbe
pop
movsl
xchg
fcoms
ds
shrl
insb
add
jo
or
mov
fwait
movsl
scas
sbbb
xor
push
push
lock
cwtl
pop
sub
xor
out
and
mov
xor
shrb
cmp
add
stos
shrb
aas
push
mov
and
and
fwait
cmp
test
cli
jle
jne
mov
mov
inc
andb
dec
push
mov
sub
sbb
mov
aaa
jecxz
bsf
xor
subl
scas
fwait
sarb
mov
push
cli
or
push
xlat
pop
mov
xor
pop
std
add
je
and
clc
fwait
aad
es
aad
pop
cmp
jle
repnz
mov
das
lods
roll
jmp
jae
lock
sub
int3
popf
xor
lods
fs
sbb
sti
xor
ja
push
test
iret
rcll
or
out
inc
leave
add
and
cs
test
jl
negl
inc
clc
cmp
jecxz
movsb
or
cltd
test
outsl
ret
add
or
inc
or
and
repnz
jmp
jp
cmp
popf
jb
notb
lock
pop
insb
mov
sbb
dec
pop
inc
add
jmp
xor
mov
popf
sub
adc
in
aas
insb
adc
mov
and
xchg
pusha
lock
in
addb
push
add
shlb
das
aaa
pop
sti
mov
andb
push
sbb
cmp
mov
test
fbld
and
pop
mov
or
in
and
outsl
cwtl
mov
sub
scas
sbb
xchg
icebp
or
mov
jnp
jo
adc
icebp
outsb
cmpb
incl
jnp
add
addr16
add
cs
sahf
sahf
inc
lcall
push
xor
fldz
sub
or
inc
or
testb
in
aas
jmp
add
xor
sub
push
das
into
mov
and
scas
insb
fisubrl
dec
jnp
data16
mov
xchg
outsb
xchg
xchg
int
add
mov
sbb
mov
push
leave
mov
mov
scas
mov
sti
xchg
ret
or
add
ljmp
test
xchg
sahf
fwait
adc
data16
dec
add
sub
mov
jne
sub
aad
dec
cmp
and
adc
mov
inc
sbb
out
int3
push
cmp
into
mov
jecxz
xchg
mov
push
ficoml
scas
sbb
fldt
and
or
fcoml
mov
pop
push
insb
ss
sbb
shll
mov
imul
inc
jo
or
xchg
xlat
xor
jo
add
adc
mov
push
ja
out
xchg
fs
mov
pop
push
jb
mov
out
push
jnp
xchg
xchg
repnz
bound
and
add
push
xor
jnp
es
lcall
push
jl
ljmp
jno
arpl
jno
popf
insb
clc
xor
add
call
sub
ret
sbb
sub
xchg
cmpsl
aam
pop
xchg
imul
and
fistps
push
xor
lcall
ds
cmp
add
or
xchg
jno
test
nop
loopne
jg
xchg
cld
popa
call
push
dec
aam
and
out
jne
test
rorb
arpl
cmp
popa
push
xchg
xchg
xor
xchg
movsb
push
outsl
mov
cltd
icebp
sub
mov
iret
push
sbb
cmp
lret
sahf
mov
pop
dec
and
push
or
out
jmp
or
fildll
and
aas
call
push
gs
aam
adc
lock
in
jne
mov
and
fstps
xchg
je
xchg
jbe
repz
add
int
jns
jge
jp
dec
lcall
aam
arpl
jecxz
or
arpl
sahf
push
repz
pushf
mov
push
xor
and
scas
pop
dec
jno
cmpsb
mov
sahf
add
je
out
jo
or
leave
je
orb
adc
sahf
xorb
ljmp
cld
xor
push
ds
repz
jg
dec
cmpsl
dec
mov
aaa
sahf
push
xchg
xchg
push
adc
add
or
push
xchg
ret
adc
mov
jmp
sbb
dec
dec
dec
mov
push
mov
push
pop
xor
scas
lret
mov
insb
hlt
mov
push
cmc
inc
and
jo
pop
push
outsb
cmpsl
mov
inc
call
push
jns
mov
daa
orps
shlb
or
pop
inc
or
out
pop
xchg
in
dec
mov
push
lods
xchg
or
mov
shlb
xchg
scas
xlat
fsubrs
jmp
movlps
adc
mov
hlt
sarl
ret
lea
stos
push
inc
roll
stc
push
lea
lcall
sbbb
das
add
or
adc
push
outsb
cmp
mov
xchg
push
imul
adc
push
clc
dec
pop
and
mov
int3
pop
mov
enter
mov
lcall
out
jle
out
push
xlat
test
xchg
lods
sub
and
xchg
xchg
cltd
bound
lret
std
stos
pop
cs
mov
fnsave
in
jp
aas
fnstenv
jne
test
int3
xor
orl
pop
ret
popf
sub
dec
jbe
fwait
mov
addl
mov
push
arpl
mov
sahf
int
out
mov
jl
or
test
add
in
dec
push
sub
mov
sbb
and
xor
cs
mov
mov
inc
dec
pop
and
lret
in
scas
dec
and
xorb
je
dec
mov
mov
add
sub
in
cmovs
xor
jecxz
cltd
enter
pop
pop
sbb
mov
aam
sbb
nop
or
jle
fwait
mov
push
mov
inc
scas
xchg
xor
mov
fcoml
jg
mov
add
mov
icebp
pusha
sub
filds
adc
pmovmskb
test
add
mov
pop
xchg
int
ret
rol
orb
cmpsb
out
or
sub
in
or
insl
xchg
sub
enter
fldcw
sbb
test
jl
icebp
sbb
cltd
ljmp
mov
pop
xchg
xchg
pop
popf
xlat
fdivrl
or
into
add
inc
std
in
mov
xchg
dec
in
mov
jle
pop
ret
sbb
imul
dec
mov
fidivs
mov
cmpl
xchg
lods
test
imul
data16
push
mov
lret
or
mov
rolb
add
sbb
dec
mov
stc
dec
push
rcrb
enter
sbb
mov
fcomps
xchg
xorb
in
sbb
xchg
sub
aaa
add
sub
ds
dec
fidivrs
int3
ja
adc
inc
push
fsts
pop
pop
or
mov
or
cli
pop
out
je
and
in
push
pushl
push
adc
ljmp
sub
insb
pop
and
loop
fisttps
adc
shlb
or
jae
fyl2x
das
and
jg
cs
inc
sub
jb
es
push
dec
bound
sbb
mov
mov
adc
aam
jge
shl
out
shrb
pop
mov
aam
pop
or
mov
mov
add
lods
mov
rcl
test
in
lds
aam
jmp
fldenv
shrl
lods
mov
mov
lcall
add
add
loopne
sbb
xchg
or
sub
mov
loope
addl
fisubs
and
jl
mov
inc
add
cmpsb
out
data16
fnsave
mov
sub
push
outsb
fldcw
nop
lods
lahf
mov
mov
lods
or
adc
jae
push
cmp
mov
es
mov
aad
cmpsl
push
aad
dec
jo
fnstsw
fimuls
pop
jae
adc
dec
loop
mov
ljmp
adcl
imul
imul
out
out
inc
and
jmp
les
idiv
or
fs
xor
xchg
enter
hlt
mov
sarl
jecxz
lret
or
nop
scas
rolb
mov
imul
xchg
inc
es
sbb
into
movsl
pop
repnz
adc
or
loop
pop
imul
cmc
hlt
add
ljmp
pop
xor
mov
scas
jp
sub
cmp
sbb
push
pop
jnp
sub
std
push
ret
call
fldenv
test
into
push
call
xlat
cmp
jle
in
or
aad
mov
pop
shlb
test
xor
sub
add
sbb
pop
addl
mov
std
add
ret
aas
sbb
inc
mov
shr
mov
jge
inc
sub
adc
hlt
jge
mov
mov
ja
mov
pushf
sub
xor
sub
and
add
clc
sbb
inc
xchg
sub
test
rcr
insb
loope
xchg
mov
insl
shll
dec
dec
cmp
pop
mov
lods
mov
and
mov
cmp
out
add
xchg
inc
loope
push
cmc
fwait
in
xor
xchg
and
push
jo
adc
arpl
sub
ds
mov
dec
pop
mov
cmp
enter
fistpll
adc
mov
xchg
lahf
mov
ds
sub
jl
test
inc
jne
dec
dec
loope
mov
sbb
xchg
xor
jle
ret
shlw
jns
shll
sbb
inc
addr16
fwait
add
xor
jae
dec
aas
icebp
mov
shll
jno
sbb
mov
lret
ret
pop
lret
mov
sti
mov
push
mov
nop
aaa
or
or
add
adc
push
adc
dec
pop
and
rolb
enter
fistpll
imul
mov
dec
js
adc
aam
and
ja
sahf
pop
mov
pusha
addr16
dec
add
stos
stos
ds
mov
xchg
pop
sbb
stos
lret
shll
int3
outsb
push
sub
add
mov
je
sub
dec
leave
pop
loope
or
xor
into
push
ss
aam
push
icebp
xchg
cli
popf
adc
lcall
dec
sub
jmp
clc
pop
bound
xchg
dec
fiadds
mov
int
andl
inc
sbb
pop
aaa
sub
gs
fcoml
jge
sbb
xor
inc
aas
lret
iret
insl
popf
daa
popa
push
ljmp
cmp
mov
sbb
mov
jge
rorb
cmp
ss
int
nop
or
mov
ljmp
jbe
adc
jge
or
in
jne
loop
mov
mov
push
iret
pushf
call
jp
enter
fiaddl
jp
sbb
lods
imul
mov
push
repnz
loope
lock
push
aad
js
fcmove
or
insb
jmp
jno
loop
cmp
lds
dec
pop
das
fimuls
rcrl
xlat
jns
dec
rclb
dec
iret
sub
cmp
mov
in
stos
ljmp
into
xor
in
mov
rcrb
aaa
mov
jmp
repnz
dec
sahf
xchg
xchg
repz
jb
dec
and
lret
adc
movsl
mov
xlat
jne
xorb
orl
int
mov
mov
jg
icebp
xor
ljmp
adc
inc
adc
dec
in
mov
sub
rcrl
loope
mov
jo
push
in
mov
jae
adc
test
mul
mov
or
sub
inc
inc
mov
lds
stos
out
push
scas
pop
inc
push
bound
in
in
stos
add
daa
divl
aaa
test
sub
das
ret
jo
sub
pop
mov
or
adc
mov
xor
pusha
sub
or
ja
pop
icebp
push
cmpb
mov
jmp
adc
sbb
mov
jns
stos
cmc
add
stc
jo
push
mov
add
inc
pop
mov
loopne
cmp
xor
decb
lds
push
scas
cwtl
inc
les
cmp
mov
adc
pop
popa
xlat
std
fnsave
sub
inc
push
aas
push
dec
lods
vpsrld
mov
xchg
xchg
sub
push
xchg
and
and
jle
in
scas
sbbb
test
in
pop
pop
jle
inc
dec
filds
sub
gs
xor
cmp
mov
inc
mov
inc
fmull
inc
xchg
jne
das
cld
cmpsl
jne
insl
inc
js
in
xchg
repz
leave
mov
or
cmpb
imul
add
lods
mov
xor
hlt
and
pop
ds
into
arpl
inc
cmpsb
inc
push
inc
mov
lock
cmp
adc
jno
repnz
inc
push
outsl
push
les
testb
mov
sbb
jl
mov
out
or
push
xchg
flds
jae
insl
push
mov
adc
insl
adc
rorb
movsl
js
xor
imul
adc
test
scas
or
adc
push
mov
push
adc
and
int3
insb
cltd
enter
mov
in
dec
testl
shll
xor
dec
imul
es
cs
lea
notl
das
and
mov
push
in
and
cmp
adc
xchg
jmp
mov
cwtl
xchg
cmp
push
push
push
sbb
sbbb
inc
das
mov
les
lret
js
aas
lods
das
mov
dec
and
jle
mov
mov
jg
push
cmpsl
sbb
and
cmp
jne
dec
push
xor
out
sbb
xchg
enter
jb
jo
je
mov
cmpsb
das
imul
lods
sahf
mov
call
and
and
hlt
ds
popf
mov
jo
mov
cltd
dec
jae
scas
shll
sbb
dec
ret
pop
cmc
daa
mov
sti
mov
or
loopne
arpl
fidivrs
add
mov
shl
out
dec
aam
ret
pop
xchg
lods
ds
shll
aad
lods
cmp
fwait
sbb
push
dec
adc
ret
fdivl
jb
pop
xchg
dec
popf
iret
inc
add
cmpsl
sbb
outsb
std
cmpsl
enter
aam
cmp
jg
out
scas
push
pushl
mov
mov
int3
push
test
mov
dec
add
sub
add
popf
dec
popf
nopl
stos
mul
shrb
mov
repz
mov
fstl
mov
sub
xchg
sub
adc
into
xchg
sub
cmp
sti
inc
mov
movsl
mov
in
inc
jl
call
adc
jne
cld
xor
or
sub
xlat
sahf
sbb
stc
js
shl
pop
andb
rorb
cmp
mov
pop
add
push
std
outsb
mov
jle
mov
xchg
mov
pop
cs
loopne
push
cmpsb
xchg
and
cli
mov
xchg
push
imul
call
push
cmp
mov
out
add
mov
cmp
out
lods
nop
cmp
pop
jg
xor
ficomps
jns
dec
or
mov
mov
andl
mov
or
sbb
jae
xchg
add
xchg
loopne
lods
xor
loopne
inc
stos
loopne
leave
lds
dec
xor
pop
lods
js
jecxz
leave
scas
cmp
mov
jns
adc
or
popa
fs
or
mov
je
ficoml
dec
mov
outsb
jecxz
nop
cmp
push
mov
test
out
popa
push
loope
or
xchg
pop
mov
push
mov
mov
mov
sahf
inc
stc
outsl
popl
out
leave
lret
scas
push
mov
cwtl
scas
dec
mov
call
lcall
jns
int3
xor
mov
xchg
push
test
push
imul
add
call
pop
mov
push
lret
in
test
ret
fldt
fwait
add
call
jmp
cs
in
push
or
shrl
shl
xor
cmpsl
movsb
ret
lret
push
enter
dec
arpl
push
mov
sub
xor
pcmpeqd
in
rorb
mov
add
mov
mov
jo
aam
incb
test
mov
xchg
jo
fwait
in
jbe
rcrb
ret
dec
std
out
jle
fildl
mov
nop
ljmp
je
or
jge
in
movsl
jp
js
addr16
fistl
ja
es
ss
shrl
out
fnstenv
mov
xchg
jle
lock
outsb
clc
jne
cwtl
push
or
gs
add
dec
test
push
sub
call
dec
cmpl
push
and
cmp
lcall
into
ss
imulb
out
adc
dec
iret
add
sbb
sub
aad
mov
loopne
rolb
repnz
out
scas
pop
iret
out
and
in
inc
mov
addr16
shll
in
dec
cmp
roll
cmp
lds
jo
dec
sub
pusha
popa
insl
mov
mov
jle
mov
std
divb
jge
xlat
mov
into
adc
sbb
jo
aas
aad
pop
sbb
andb
test
movsl
cmp
adc
sbb
dec
xlat
addr16
incl
jne
pusha
pop
js
sbb
lods
in
into
mov
lret
sub
jle
loope
push
xchg
scas
xchg
or
lods
push
aam
xlat
push
push
jmp
adc
adc
pop
pop
pop
test
clc
mov
call
stos
imul
sbb
mov
and
sbb
inc
shrl
add
ds
rorl
xchg
dec
jnp
imul
movl
test
add
mov
shl
push
loopne
mov
test
repz
xlat
sub
sub
movsl
orl
lock
cmpsl
jns
add
mov
mov
adc
in
push
and
ljmp
pop
add
shr
aas
sub
pop
clts
jb
push
dec
in
lcall
push
mov
cmpsl
cmp
call
mov
push
cmp
inc
jo
xchg
and
mov
mov
jbe
mov
bound
lcall
jne
imul
and
xor
add
jmp
xorb
cmp
scas
lret
jae
imul
add
roll
mov
or
cld
jnp
sti
inc
mov
aas
and
js
and
fistpl
lods
cmpsb
gs
cmpb
sub
mov
dec
fmuls
mov
es
sub
lcall
bound
mov
push
aam
addr16
movsb
mov
leave
add
dec
test
adc
jle
inc
ret
xchg
test
insb
js
xor
sub
or
push
add
sbb
xchg
movb
sub
push
mov
jns
fadds
movsb
in
pop
sahf
cmp
sub
ret
inc
not
sbb
sti
cmp
loopne
lcall
pop
arpl
or
test
sti
sub
fldcw
mov
xchg
movzwl
filds
enter
movsl
cmc
repnz
or
lahf
rcr
jmp
push
push
inc
mov
mov
call
fldlg2
adc
mov
add
stos
jnp
mov
adc
xchg
adc
clc
loop
cmp
clc
repnz
push
inc
insl
pop
mov
mov
xor
push
outsl
pop
cmp
imul
jle
add
adc
in
mulb
push
mov
mov
cltd
push
dec
fcoms
xor
mov
push
aas
cmp
cs
pop
inc
add
ret
inc
pop
push
lahf
push
adc
rcrl
or
rorb
data16
daa
scas
lea
mov
pop
lds
dec
xchg
cmpb
jno
pushf
mov
or
add
pushf
or
pop
in
mov
aad
scas
xchg
mov
jl
in
stos
leave
sbb
in
mov
or
loop
fidivrs
ss
lcall
sahf
adc
xorb
pop
aam
xchg
addr16
add
sbb
lock
fisubrl
xchg
cwtl
or
jl
xchg
nop
cmpsb
push
sbb
cs
movsl
mov
add
jge
imul
sbb
mov
dec
fstpl
dec
sub
or
mov
dec
xchg
fidivrs
sarl
cmp
shlb
xor
aam
divl
ljmp
pop
gs
adc
push
jne
inc
sub
sbb
add
push
adc
xorb
jno
dec
and
dec
out
push
pop
mov
and
outsl
jg
insl
add
mov
aam
xor
movsl
arpl
notl
ds
push
shrb
lcall
and
xchg
push
mov
ljmp
fiaddl
cmp
mov
int
push
dec
push
ds
sub
sahf
and
add
jae
mov
fldenv
and
hlt
data16
lods
dec
add
sbb
shl
into
test
cmp
inc
add
je
bound
in
sub
or
in
jg
push
push
jb
lahf
mov
adc
outsl
lret
into
jecxz
push
es
fadd
lcall
push
dec
dec
xor
rcr
pop
lcall
lea
fimull
addr16
dec
cli
vmptrst
ljmp
or
rorl
scas
outsb
mov
ret
cmp
jg
lods
popf
xchg
lahf
leave
and
adc
mov
sbb
sbb
dec
cmp
loopne
mov
lcall
xor
pop
jnp
and
pushf
jbe
push
pop
sbb
mov
add
aam
ss
or
out
or
fadds
popa
test
inc
jg
arpl
shrl
imul
mov
test
loope
outsl
lret
dec
icebp
popf
cmp
andl
pop
push
cmpb
mov
pushf
rolb
clc
xchg
mov
cmp
xchg
xor
mov
or
loope
fs
mov
and
sti
sarl
dec
rcrb
daa
push
imul
add
loopne
push
mov
shr
adc
stos
call
or
sub
jmp
cmpb
clc
cwtl
xor
and
push
pop
in
incl
aas
xchg
pop
negl
mov
cmp
mov
dec
cmpsl
out
xor
adcl
pop
pop
icebp
dec
popa
pop
pop
mov
and
jl
cwtl
xchg
shlb
add
mov
loope
add
or
pop
dec
lcall
call
mov
cltd
in
pop
loope
sbb
adc
or
pop
movsl
pop
and
or
cltd
in
scas
leave
mov
pop
add
inc
cli
add
js
jmp
in
ja
subb
dec
pop
popa
push
or
and
sub
sbb
stos
adc
les
into
les
in
or
sbb
imul
test
sarb
mov
mov
int3
imul
cmp
cmpsl
rorb
ljmp
cmp
in
fsubl
fsubrl
push
xchg
dec
pushf
sbb
mov
mov
sub
mov
fsubrs
aad
flds
adc
movsl
cmp
push
jp
xchg
ss
loope
pop
sbb
push
fisttpl
mov
jmp
or
adc
sub
sbb
movsb
es
adc
cmp
pushf
cltd
push
push
sub
imul
pusha
std
sahf
sub
mov
mov
gs
scas
rclb
scas
aam
mov
iret
pusha
lea
ljmp
lods
pop
xchg
and
popf
pushf
mov
mov
push
dec
adc
test
test
icebp
lock
insb
adc
stos
nop
push
mov
xor
nopl
lret
lods
cmp
dec
pop
sub
xchg
cmp
inc
jno
add
push
jecxz
mov
test
jne
jp
xor
daa
pop
flds
ffreep
cmp
jge
mov
inc
pop
sub
push
filds
clc
cmp
xchg
or
test
mov
mov
sbb
cmp
addr16
add
subl
cmc
call
mov
mov
ljmp
lds
sbb
push
add
dec
and
mov
mov
sub
adc
lds
pop
cmp
pushf
pop
movsl
xchg
mov
inc
xchg
test
mov
dec
add
ljmp
pop
jns
pop
pop
inc
movsl
sahf
dec
mov
rcr
ret
cmpsb
push
cwtl
pop
xor
pop
clc
fcoml
adc
mov
test
mov
rcrb
test
add
je
int3
add
or
push
sti
leave
xchg
mov
out
andl
test
popa
sbb
add
mov
mov
loop
jns
or
int
xchg
jmp
mov
lret
mov
jle
jb
repz
fistpl
roll
jp
jmp
rcrb
loop
xchg
xchg
call
test
inc
outsb
add
pop
mov
dec
mov
xchg
movsl
jmp
jne
sbb
add
sub
dec
lods
and
xor
or
and
adc
pop
mov
sub
test
mull
out
fwait
jno
dec
out
jmp
dec
xchg
test
cs
hlt
mov
jnp
into
movsb
pop
pop
mov
pop
xchg
cmp
das
inc
inc
and
add
das
mov
dec
cwtl
push
mov
xlat
imul
mov
stos
movsl
repnz
mov
mov
jl
sbb
jg
add
ds
or
push
sub
ret
fwait
push
push
xor
enter
lret
jge
cmp
mov
orb
push
out
mov
imulb
pushf
imul
fists
enter
or
mov
mov
add
xchg
test
xchg
ja
fdivs
fisubrl
mov
scas
out
mov
movsl
pop
push
inc
and
rolb
cli
mov
mov
push
lock
popa
rol
shll
enter
xchg
cli
movsb
mov
mov
scas
fdivrs
sub
mov
push
inc
dec
fisubl
test
shlb
stos
dec
jl
inc
jg
lret
push
je
das
lret
jb
icebp
daa
mov
push
dec
fsub
cmp
inc
ds
jbe
mov
xchg
cmp
mov
add
out
pop
sub
popa
xadd
adc
test
sbb
cmp
xor
out
sbb
out
adc
loope
stos
jnp
lahf
xchg
push
gs
xchg
lea
push
imul
adc
sbb
test
add
ss
pusha
pop
cmpb
idivb
cmp
aas
dec
push
jne
cmpsb
in
adc
insl
adc
lret
test
popf
sti
movl
aam
es
pop
imul
adc
mov
xor
subb
sbb
jnp
mov
rcrb
dec
imul
aaa
popf
sbb
js
jmp
fldcw
mov
addr16
jg
mov
call
cmp
es
adc
dec
jg
leave
pop
mov
cld
mov
inc
push
inc
cmc
aas
jge
sub
and
dec
jmp
mov
push
aad
or
movsl
testb
push
sahf
add
adc
add
insl
mov
pop
int3
iret
jbe
std
adc
push
cmp
add
sub
mov
fstl
pop
and
test
cmc
rorb
lea
sbb
adc
mov
push
sahf
push
pop
test
frstor
mov
and
inc
pushf
repnz
mov
cwtl
mov
inc
data16
xchg
aas
mov
leave
arpl
sahf
nop
pop
iret
push
rorb
xor
xchg
pop
es
xchg
add
push
xchg
dec
push
push
adcb
ds
sbb
ds
je
mov
or
cltd
cmp
mov
mov
jl
push
mov
jb
vpavgb
mov
bound
xchg
dec
orl
pusha
stos
out
arpl
mov
push
repz
jl
jg
xlat
push
jl
xor
or
pop
mov
stos
add
jl
outsl
dec
cmc
bound
mov
repnz
inc
dec
das
xchg
or
jb
or
stc
push
rcl
mov
scas
push
push
pop
jle
jl
imul
and
or
lcall
xor
loopne
insb
jl
lea
mov
insl
inc
mov
pop
fcompl
mov
mov
loopne
and
sbb
and
test
pusha
gs
fcomps
push
jmp
cmp
bound
xchg
push
adc
ljmp
cmp
add
idivl
jle
push
stos
jecxz
scas
iret
mov
push
inc
jne
xor
and
mov
fisttpl
or
or
add
mov
movsb
out
pop
inc
out
imul
nop
sbb
cltd
xor
dec
adc
inc
fidivrl
call
sti
sahf
pusha
icebp
dec
aaa
dec
adc
sub
bound
adc
in
xchg
aas
mov
pop
xchg
loop
ja
lret
mov
cli
cmpsb
cmc
xor
push
shlb
cmp
test
mov
loopne
insb
imul
mov
mov
pop
add
jg
adcl
mov
lods
outsb
fisubl
push
movsl
xor
ret
push
cltd
out
xor
xchg
adc
outsl
pop
pop
fsts
inc
sbb
hlt
lds
add
sub
adc
data16
adc
dec
xor
sub
and
mov
in
enter
cmp
push
mov
jo
inc
jbe
mov
incb
std
call
add
push
pop
xor
push
ret
pop
test
mov
mov
movb
ret
add
xchg
daa
insl
iret
sbb
lds
pop
cli
fldl
das
adc
shll
mov
mov
dec
pop
xor
push
xchg
lret
add
pushl
mov
mov
sbb
daa
std
push
ret
es
mov
dec
cmpl
add
sti
jnp
gs
loop
lock
sub
jle
mov
pop
inc
sub
xor
jl
js
nop
mov
adc
lods
call
ljmp
daa
outsb
stos
inc
jl
repnz
mov
mulb
insb
out
daa
data16
mov
aas
inc
add
cwtl
lcall
cmpb
add
aam
push
add
sbb
mov
mov
pushf
xor
push
sub
inc
and
cwtl
fisubrl
mov
test
xchg
out
push
jmp
adc
cli
cmovnp
fistpl
push
insb
cld
arpl
clc
add
lcall
add
jno
adc
jmp
push
jae
jg
cltd
div
cmp
and
pop
test
lods
push
sbb
enter
xchg
adc
sbb
mov
dec
adc
leave
and
fistl
xorl
add
push
xchg
add
jge
cmp
mov
mov
aad
xor
dec
xchg
faddl
in
jge
dec
fucomi
xchg
add
js
int
xchg
jecxz
test
push
fsubs
iret
subl
add
ds
ds
mov
push
and
dec
dec
loopne
fisttpl
out
cld
mov
push
push
roll
dec
xor
sbb
clc
add
cld
cld
cmp
xor
je
ret
int
adc
jp
push
xchg
out
clc
sbb
or
inc
adc
sti
in
xor
push
lret
sub
dec
and
out
or
and
mov
cmc
scas
dec
fwait
aaa
sub
push
xor
mov
imull
cltd
loopne
mov
dec
jne
push
rcrb
outsb
sub
push
fdivl
sub
xor
inc
mulb
xchg
loop
cmp
pop
outsb
jb
mov
dec
movb
das
scas
mov
flds
sbb
sub
mov
test
hlt
adc
lret
pop
inc
out
inc
cltd
test
xorb
inc
ret
sbb
das
xchg
xor
xchg
clc
pushf
leave
cwtl
cs
outsb
subb
push
dec
mov
jecxz
dec
aam
or
movsl
pop
dec
pop
and
scas
push
xchg
mov
jecxz
dec
ds
add
lods
jmp
pop
nop
popa
fnsave
clc
push
aas
dec
jae
cmp
xchg
pusha
out
dec
out
cmp
xchg
inc
cli
pop
cmpl
out
xor
mov
mov
mov
dec
pop
dec
movsb
adc
adc
js
push
xchg
call
fsubs
cmp
dec
lods
adc
add
xchg
mov
js
or
pop
dec
xor
pop
dec
aaa
add
jle
xor
ret
fmull
rcl
push
push
aad
add
enter
mov
popa
or
inc
add
add
dec
ljmp
mov
and
push
jp
dec
mov
pusha
lock
mov
out
push
pop
jp
sub
movb
or
mov
maxps
movsl
in
pop
or
shll
nop
adc
dec
mov
ret
mov
sub
mov
dec
dec
dec
adc
add
stc
cld
add
int
int3
ljmp
cld
xor
xor
adc
mov
cmpb
dec
inc
in
xchg
aaa
add
cmpsl
cld
jle
int3
mov
das
in
push
jo
mov
out
or
cwtl
testb
loopne
xchg
push
push
xchg
in
movsl
dec
pcmpgtw
mov
mov
mov
inc
lretw
cmpsl
std
mov
pop
lds
xor
adc
shrl
test
shrb
fdivrs
repz
and
aas
sub
push
dec
push
orl
js
test
ds
aas
lock
cs
jp
call
adc
inc
push
loop
mov
lcall
in
fnstenv
fstpl
sahf
mov
mov
dec
push
xchg
jo
insl
push
sarl
je
or
jb
loop
clc
push
test
jnp
push
adc
push
dec
dec
popa
push
adcl
loope
addb
push
xor
int3
xor
xor
mov
mov
insb
loopne
into
dec
inc
cwtl
lret
add
dec
xchg
stos
mov
sbb
xchg
xchg
or
jl
repz
xorl
in
sar
mov
js
cli
inc
dec
or
mov
xchg
fildl
aad
repnz
jae
push
add
fs
ljmp
pop
adc
aaa
jl
dec
add
pop
cmp
pop
push
in
imul
shll
orl
ljmp
les
push
loopne
push
lcall
rcrl
mov
dec
and
fwait
pop
mov
scas
xorl
hlt
test
imul
mov
int
adc
push
fsubrp
scas
fs
aaa
out
cmp
and
insb
jmp
xor
jl
outsl
pop
add
call
jbe
mov
out
ja
js
push
pop
xor
fwait
cmp
test
push
call
into
iret
movsl
lcall
outsb
xchg
sub
mov
daa
mov
aaa
cmp
sub
fmul
sub
adc
push
push
or
cmc
bound
xchg
or
inc
les
add
jecxz
movsb
sbbb
jne
stos
jmp
jbe
jno
movl
movsl
movsl
mov
xchg
jmp
cltd
aam
xchg
je
fsts
push
aad
rcl
cmp
add
cmp
int
xlat
fwait
push
scas
jmp
xchg
jg
stos
pop
or
out
mov
push
daa
xor
cmp
cmp
xchg
cmc
inc
pop
mov
xchg
cmp
push
inc
adc
mov
mov
mov
and
into
mov
lods
fidivl
pop
popf
inc
incb
xchg
mov
jae
pop
testl
sub
cmc
xor
jp
sub
js
lret
cmpl
add
hlt
sub
sbb
push
xchg
fistps
ret
or
hlt
dec
loop
fstl
mov
bound
stc
push
xchg
dec
add
sbb
mov
int
fsubrs
mov
xlat
es
mov
sub
push
aaa
cmpsl
fcomps
sbb
cmp
mov
inc
ficoms
jle
ret
inc
dec
lret
imul
sbbb
push
add
clc
pop
mov
pop
cmc
mov
les
dec
or
add
repnz
xlat
sbb
add
div
pop
leave
dec
pop
test
sbb
jp
lret
call
repz
pop
sbb
sarl
nop
leave
xor
arpl
add
outsl
insb
cmp
jae
aas
add
lods
mov
jo
sbb
cmpsl
stos
and
int
adc
sbb
repnz
push
ljmp
and
pusha
int3
xor
in
xchg
pop
cmc
les
pop
aad
scas
mov
outsb
mov
push
xchg
fstps
sbb
scas
ficoml
pop
xor
push
inc
ss
and
popa
mov
pusha
xor
incb
jbe
jnp
clc
cmp
mov
push
test
hlt
testb
mov
pop
je
sbb
int
xchg
bound
cmp
lock
mov
test
in
iret
inc
jnp
cmp
inc
inc
mov
mov
rol
mov
and
push
cmp
pop
in
inc
adc
push
jg
lods
and
scas
mov
pushf
je
repnz
fninit
std
pop
outsb
fwait
mov
ss
mov
push
sub
xchg
test
dec
sbbl
addl
cmp
outsl
push
mov
jecxz
in
push
cmc
xor
cmc
fdivrs
cmp
ja
add
pop
mov
jno
imul
pop
jp
in
hlt
roll
mov
iret
or
dec
dec
call
jge
sbb
lahf
xchg
movsb
iret
hlt
out
push
pop
push
vmovupd
xchg
nop
insb
and
aaa
pop
dec
mov
ret
in
icebp
hlt
jbe
inc
mov
pop
xor
stc
popa
mov
dec
jbe
bound
cltd
loopne
xchg
xchg
adc
mov
mov
loop
mov
add
sbb
dec
bound
fidivrs
mov
fstl
cmp
imul
xor
out
cmp
cmpb
adc
or
dec
scas
inc
inc
dec
stc
dec
xchg
pusha
push
xor
xlat
jne
adc
mov
cwtl
mov
movsl
sbb
sbb
add
jns
inc
mov
mov
out
ss
test
inc
daa
push
sub
dec
or
iret
and
imulb
imul
sbb
mov
insb
cmpsl
cmp
mov
mov
xchg
mov
mov
cmpsb
in
addr16
pop
or
fwait
mov
mov
xchg
std
test
imul
add
out
clc
pusha
rcr
mov
sti
in
sub
mov
or
mov
xchg
call
push
addr16
jnp
add
clc
pop
es
add
adc
movsl
les
jl
or
or
mov
sub
shr
adc
xchg
gs
push
shll
xor
sub
rcrb
data16
xchg
dec
cmpsl
lahf
mov
jle
ret
mov
into
inc
aad
push
jge
mov
out
adc
out
xor
xor
movsb
and
stos
daa
sar
pop
push
or
insl
sub
ljmp
add
leave
xchg
lds
lret
dec
lret
or
pop
add
scas
or
icebp
sbb
sbb
jmp
pusha
fistps
repnz
push
mov
jecxz
mov
repnz
add
mov
shlb
dec
incl
ljmp
fcmovb
xchg
ret
mov
std
push
divb
jb
iret
out
lock
jmp
sbb
rorl
aas
out
data16
lret
and
jne
pop
add
push
dec
stos
lret
test
testb
jg
notb
cmpsb
imul
pop
cmp
pop
rclb
sbb
add
mov
inc
xor
mov
movsl
out
ss
mov
mov
inc
incl
in
outsb
mov
ret
xchg
adc
fidivrs
stc
dec
pusha
xor
into
imul
stos
mov
push
jno
push
or
mov
lods
xlat
adc
negb
xor
jns
mov
xor
adc
fcomps
int3
adc
orb
outsl
push
pop
sbb
add
mov
in
fnstcw
cli
call
jge
inc
xchg
enter
js
outsl
xchg
and
and
pop
lods
pop
jne
mov
jns
in
je
jle
fistpll
pop
xchg
mov
mov
mov
lods
inc
fucom
mov
xchg
or
xchg
loop
pop
mov
and
cltd
cltd
fldl
shr
mov
xor
jge
push
mov
add
imul
jns
dec
inc
aam
bound
pop
adc
pop
in
push
leave
and
aad
dec
sahf
daa
sub
adc
jb
push
dec
or
xor
fimull
push
aaa
mov
xor
jne
mov
cmpsl
fwait
sub
leave
fdivl
sbb
int3
jne
and
lea
enter
shl
mov
pop
or
test
xchg
lods
stos
popl
scas
dec
rclb
push
and
in
and
fisubrl
add
jns
mov
clc
cmp
loopne
adc
icebp
mov
push
outsb
xchg
jne
push
scas
out
jae
push
inc
xchg
dec
scas
addr16
mov
test
jbe
dec
ja
ds
cmp
les
sahf
mov
testb
aad
rclb
cmpsl
negl
fdivrl
sbb
call
xchg
jno
std
cli
jns
outsb
bound
imul
ds
ja
dec
lcall
xor
inc
mov
xchg
clc
in
cwtl
imul
cli
out
roll
ss
inc
test
ret
or
pop
sbb
jo
arpl
stc
add
cmp
imul
mov
sarl
loope
mov
popa
lahf
inc
push
xor
es
jp
mov
dec
cltd
stos
pop
out
cmc
sub
aam
mov
orl
sahf
popf
sbbl
aad
xorb
push
mov
ret
xchg
add
jo
es
stos
jne
and
jg
loope
ljmp
or
push
or
repz
push
cmp
mov
sti
mov
sbb
push
int3
divb
xchg
rolb
mov
cmp
sub
and
ljmp
jne
jno
addb
sbb
mov
and
push
push
in
sarb
testl
aas
sbb
fiaddl
fdivrs
cmp
pop
mov
push
push
fwait
and
outsb
les
outsb
je
pop
xor
insl
jge
adc
jo
icebp
cltd
and
mov
jl
mov
cli
rorl
mov
jbe
fildll
mov
or
gs
fwait
nop
mov
add
sbb
dec
rorl
sti
pop
ret
leave
sbb
pop
out
mov
sub
mov
xor
add
sbb
add
sbb
in
testl
push
mov
bound
dec
shrl
insb
pop
mov
jecxz
fistpll
xchg
cmp
movsl
notb
fwait
insl
cmp
cmp
lods
jno
and
int
dec
pop
sarl
or
lods
and
push
ret
xor
mov
pop
push
arpl
ja
mov
xchg
je
scas
aas
mov
dec
mull
rep
ljmp
push
dec
adc
xlat
mov
push
test
inc
subl
mov
adc
ret
idivl
cmp
daa
mov
iret
push
cwtl
sbb
lret
sbb
dec
xor
pop
adc
pop
xchg
and
xor
dec
loope
insb
ret
test
jg
lcall
in
xchg
mov
dec
stos
push
and
pop
sub
pop
shll
stc
clc
mov
xchg
testb
adc
ret
pop
jns
dec
push
aam
inc
xorl
sbb
in
xor
inc
cmpb
enter
push
inc
mov
aas
test
add
jne
dec
xchg
jmp
popa
jg
clc
call
fistps
call
mov
jbe
mov
push
dec
jne
xchg
cmp
imul
jne
rclb
mov
sub
in
inc
inc
inc
andb
push
iret
lret
and
mov
dec
adc
push
daa
pop
mov
adc
xchg
ljmp
icebp
adc
rorb
loop
pop
cmp
popf
pop
icebp
dec
adc
test
movsb
jl
test
cmp
xchg
fnsave
push
leave
lret
subb
inc
subl
xor
sarb
mov
mov
cli
popa
icebp
sbb
nop
cmpb
inc
scas
mov
push
in
pop
in
push
push
push
scas
push
add
popw
sbb
xchg
dec
fdiv
ror
enter
fisttpll
pusha
sbbl
adc
jmp
and
inc
xchg
and
scas
pop
ljmp
sub
imul
cltd
xchg
or
test
inc
push
pusha
int3
mov
push
xor
das
push
push
push
push
push
fldcw
cltd
ss
pushf
mov
out
adc
std
dec
or
outsb
push
mov
mov
sub
or
cwtl
or
arpl
gs
add
jb
jns
enter
jo
dec
ja
cmp
jge
outsl
shrb
or
sbb
add
rcr
pusha
rcrb
xchg
addr16
repnz
pop
call
jno
cmp
jbe
jno
jl
in
sub
cwtl
or
sub
cltd
mov
test
lret
jecxz
pusha
lock
enter
add
call
pop
jle
sub
jmp
rorb
xchg
jg
cmp
stos
sbb
push
aas
js
inc
lahf
inc
es
loop
mov
mov
mov
popa
mov
pushf
xchg
in
or
mov
and
pop
jne
test
rclb
xchg
jmp
inc
mov
cmp
xchg
daa
rolb
cmpsl
pop
outsl
inc
enter
jb
jle
jne
in
out
ss
xchg
and
inc
push
xor
mov
sub
cs
lods
mov
mov
pop
or
sbb
ds
or
mov
test
add
jle
push
push
add
mov
pusha
loope
mov
gs
jg
jae
mov
stos
leave
jbe
into
dec
or
cmp
mov
mov
int3
imull
ja
sti
sti
add
das
sti
xor
cld
dec
xor
lods
push
insl
cmpsb
mov
in
out
adcl
in
xor
rcl
movsb
addr16
mulps
movsl
mov
jnp
mov
mov
adc
adc
adc
inc
outsb
hlt
aam
jmp
lods
int
mov
sub
jae
and
dec
push
lea
and
lea
cmp
mov
mov
xor
fiadds
add
add
enter
xlat
popf
push
dec
outsl
pop
jno
adc
sbb
stos
dec
popa
jno
in
clc
cltd
jle
roll
lcall
add
mov
cwtl
push
add
jae
orl
mov
push
adc
lds
dec
dec
dec
jb
pop
mov
adc
es
cmc
mov
xor
cltd
adc
or
inc
and
cmpsb
xchg
inc
inc
adc
stc
pop
or
cmp
aam
stos
sub
mov
ss
test
call
pop
in
xor
jb
imul
gs
addr16
imul
mov
imul
shlb
mov
mov
pop
outsl
inc
dec
jno
in
rsm
mov
cmp
pushf
lret
fisubl
add
xor
pop
jg
test
cmc
jne
mov
cmp
int3
pushf
jae
jnp
push
jns
cmpl
jne
int
cld
jo
ss
fwait
enter
pextrw
gs
mov
pop
cmp
push
fwait
push
jl
inc
adc
pop
sub
fnstenv
sbb
mov
mov
int
cld
lahf
int
push
dec
pusha
inc
repnz
cmp
popa
std
dec
add
loopne
pop
cwtl
icebp
xchg
pop
sub
pop
scas
daa
add
jg
pusha
xor
paddd
add
push
orl
and
pop
dec
out
xor
add
add
loope
test
jg
popa
cmovp
cmc
nop
sbb
mov
stos
in
das
rcrl
xor
or
movsl
movsb
scas
sbb
inc
loopne
roll
insl
loope
rcrb
dec
cmpsl
mov
jns
sbb
fstpt
les
mov
ret
je
scas
sub
mov
inc
je
pop
into
and
sbb
out
push
dec
into
pop
shll
mov
jae
call
les
jp
mov
pop
sbb
or
ret
adc
lret
add
sbb
mov
cmpsl
mov
repz
or
iret
test
add
or
xchg
sbb
and
pop
incb
insb
adc
cmpsb
fwait
jbe
push
jno
pop
or
adc
orl
sub
lds
out
cmc
jbe
mov
xlat
mov
enter
jp
sbb
pop
mov
fs
insb
in
sub
cmp
cmc
inc
mov
mov
andl
mov
push
stos
push
jecxz
mov
or
imul
jle
jg
mov
movsb
pop
pop
movsl
pop
dec
xchg
std
mov
cmp
xchg
ror
icebp
arpl
js
daa
jecxz
add
mov
sub
inc
pop
and
rcrb
sarl
shlb
cmp
fists
imull
jbe
push
cmc
movsb
je
mov
aam
aaa
shr
andb
icebp
ja
add
int3
dec
inc
filds
in
jecxz
mov
xchg
mov
push
mov
mov
mov
add
push
adc
push
ret
pusha
cmp
push
movsb
jmp
vmovntps
add
test
mov
mov
jb
je
sbb
sbb
sbb
add
push
jbe
enter
bound
lds
je
out
call
ret
out
das
daa
mov
sbb
icebp
pop
gs
out
jecxz
lea
cld
in
sub
loop
cltd
ds
xor
mov
cmp
lods
ljmp
sub
xchg
in
and
lock
add
data16
jnp
fldt
imul
xor
add
inc
add
adc
push
ljmp
cmp
cltd
js
inc
aas
sarb
lods
push
pusha
mov
dec
lds
into
xchg
js
add
pop
lds
jnp
fmuls
xchg
jecxz
movsb
mov
mov
aad
test
xchg
cmc
int
popa
sbbl
lret
add
or
stos
push
das
out
ror
stc
shlb
dec
and
aaa
mov
cmpb
into
push
xor
ret
xor
sbb
sbb
movsb
cmp
dec
xchg
data16
std
es
fwait
mov
scas
adc
mov
xor
lret
gs
std
pop
rcrb
cmp
xorb
xchg
imul
shr
mov
orl
aas
pop
mov
test
jns
popa
cwtl
dec
add
dec
adc
sbb
inc
addl
lods
sti
fs
and
mov
sbb
fisubrs
out
push
add
dec
sub
jne
ja
and
sbb
sub
fwait
imul
icebp
bound
gs
mov
mov
lret
inc
scas
push
cld
subl
sbb
dec
rclb
imul
sbb
dec
shrl
imul
rcrb
scas
les
popf
sbb
xchg
stos
xchg
mov
insl
add
mov
xchg
shll
sbb
xor
aas
mov
ds
lahf
or
mov
dec
popf
in
lods
xor
fiaddl
mov
xchg
add
pop
push
inc
xor
sbb
lods
cld
sbbl
fs
fistl
jmp
push
and
xchg
mov
iret
mov
cmp
js
jl
xchg
and
addr16
pop
lret
stos
insl
mov
mov
sahf
repz
mov
test
xchg
shlb
and
push
dec
or
dec
ljmp
cmp
popa
je
dec
adc
mov
xor
mov
dec
scas
ret
fdivrl
inc
sub
test
lds
adc
mov
leave
dec
inc
lds
loopne
sbb
cmp
outsb
test
imul
rclb
jns
push
fwait
lahf
mov
sbb
mov
fwait
test
jo
push
jmp
cmp
mov
aas
pusha
pop
lret
je
das
xor
iret
xchg
clc
add
gs
push
xchg
xor
mov
pushf
lret
popa
pop
xor
mov
push
out
fists
sbb
sub
aad
data16
scas
xor
mov
insl
xor
into
leave
in
movsl
jmp
adc
push
inc
or
nop
loope
and
dec
out
push
test
jge
push
push
imul
popa
dec
leave
bound
ret
aas
insb
lock
in
or
int3
into
movd
int
jo
adc
xor
jb
mov
sbb
seta
cs
es
call
test
add
lds
lds
push
out
mov
pop
test
and
jne
loope
out
pop
mov
pusha
enter
into
xchg
sub
xor
lods
aas
jp
filds
push
dec
lods
xchg
add
inc
jb
fsubl
or
mov
cltd
mov
jno
sub
arpl
xor
mov
int
rolb
stos
paddw
sbb
push
xchg
and
adc
jo
daa
dec
mov
arpl
dec
pop
xor
jl
push
pop
je
iret
fsubrl
push
inc
and
sarl
loopne
leave
loop
push
loop
cmp
jns
xchg
mov
push
xor
outsb
mov
rol
and
das
mov
adc
push
sbb
insl
dec
push
dec
cwtl
mov
call
mov
call
loope
arpl
add
sbb
in
aaa
movsl
out
mov
mov
popf
popa
dec
mov
adc
lret
cmp
pop
lods
mov
mov
les
aaa
sti
cs
lret
push
or
mov
xchg
adcl
les
movsb
iret
and
cmp
sbb
xchg
inc
mov
shr
jno
and
pop
clc
cmp
mov
mov
std
and
in
out
mov
icebp
pop
aam
fildl
xchg
cmpb
adc
cmp
aaa
mov
fwait
ss
loope
fisubrs
stc
sub
push
xchg
mov
repz
add
call
out
jge
popa
jb
xchg
xor
sbb
fadd
cmpsb
mulb
icebp
adc
xchg
sub
pop
sbbb
push
xor
push
mov
push
inc
mov
hlt
and
inc
cltd
mov
pushf
sbb
push
adcb
xor
scas
sub
and
mov
adc
cmp
mov
xorb
repz
incl
out
cmp
dec
push
das
xchg
dec
add
test
arpl
xor
and
pop
xor
adcb
fadds
daa
in
loop
cs
xchg
mov
cli
vpshab
movsl
cmpsl
ljmp
dec
cmp
fbld
xor
mov
and
in
lcall
pop
ret
mov
and
cmpsb
lds
ret
pop
mov
inc
int3
mov
fs
push
dec
inc
and
out
sbb
adc
xchg
icebp
loope
in
xor
xor
sub
mov
test
data16
jae
ret
pop
loope
scas
loope
mov
ljmp
nop
lahf
pop
pop
shll
in
xor
sub
in
xchg
sbb
ja
mov
fadd
push
loopne
inc
hlt
mov
xchg
jno
pop
mov
in
mul
fs
int3
sbb
jle
lret
cs
popf
sbb
cmpsb
fbld
and
je
xchg
setne
mov
push
leave
sbb
add
aam
pop
out
sub
rorb
add
test
add
lea
push
sbb
jno
cmpsl
loopne
mov
scas
jo
cmp
mov
push
nop
xchg
cmpsb
cmpb
add
movsb
fdivs
inc
lods
sub
mov
xchg
outsl
insb
jo
lahf
imul
aaa
popf
inc
sbb
adc
inc
outsl
lock
cmpsb
scas
pop
repnz
in
int
mov
and
jecxz
xchg
xchg
imul
andb
cmp
js
mov
inc
cmpsb
mov
mov
and
sub
shlb
add
pushf
add
int
xchg
repz
and
pop
or
jp
stos
mov
out
mov
mov
mov
int3
mov
imul
insb
and
mov
or
adc
jmp
std
loop
sub
std
shlb
push
push
mov
push
xlat
imul
in
xchg
leave
ljmp
std
ss
sbb
mov
pop
jne
cmp
stos
mov
popa
add
out
gs
add
xor
outsb
xchg
xorb
xchg
push
mov
add
xlat
sub
int
push
in
and
xor
dec
gs
xchg
adc
iret
mov
cmp
pop
imul
stos
and
mov
pop
xchg
dec
xor
icebp
cmpsl
push
push
outsb
scas
xor
mov
test
fisttps
mov
lret
mov
das
jge
mov
xchg
int
xchg
fwait
and
jmp
test
bound
mov
xor
jno
fmull
push
enter
insb
xlat
xor
js
icebp
mov
mov
pop
mov
push
scas
sbb
push
pop
lret
loope
sahf
dec
aam
je
mov
cld
lods
mov
test
lods
mov
int
inc
divl
pop
in
or
dec
inc
inc
ss
ficompl
ret
jne
mov
and
ret
cwtl
fcmovnbe
call
xchg
cmpsb
in
add
sbb
out
lcall
jne
xchg
add
testl
loopne
push
and
or
sub
cld
aam
jnp
into
adc
test
push
mov
loope
int3
js
sti
lock
mov
jb
cmp
xchg
jge
mov
mov
dec
and
cli
ja
mov
cltd
ds
movb
inc
fnstenv
pop
ret
dec
sub
jne
push
add
lods
sub
ljmp
jmp
sbb
xchg
jl
ffreep
movsl
mov
sahf
cmp
stos
jmp
dec
pop
push
les
xor
test
push
sbb
iret
jg
in
js
jecxz
adc
frstor
adc
fistps
lea
push
jo
lock
jne
sbb
dec
or
mov
push
sub
pop
fbstp
roll
ret
mov
ljmp
pop
sbb
and
lret
out
int
aaa
fld
xchg
xchg
xor
mov
orl
hlt
scas
rclb
fimull
out
cmpl
in
sbb
add
cmc
mov
fldl
mov
and
ljmp
dec
mov
jecxz
or
mov
mov
cs
pop
test
push
xor
and
xchg
push
and
mov
cltd
xor
testl
mov
mull
push
inc
or
push
stc
push
jbe
addb
jbe
mov
push
pop
test
aad
mov
push
cwtl
loop
adc
movsb
xchg
test
jae
je
daa
push
pop
je
or
divb
lahf
cli
arpl
addl
pop
mov
loopne
cmp
push
sub
add
adc
xchg
xchg
test
popf
lldt
aaa
sub
ljmp
je
repnz
ret
push
fdivs
bound
push
cwtl
push
cmp
out
test
and
out
imul
add
in
xchg
and
xor
adc
add
mov
out
sahf
xchg
xchg
mov
movl
mov
imulb
imul
mov
cmp
xor
adc
mov
or
xchg
mov
leave
push
scas
stos
pusha
lods
loop
xor
movsl
imul
add
inc
jo
push
out
push
pop
pop
pop
xor
cmp
dec
lcall
aad
rol
mov
adc
in
inc
fwait
cltd
inc
sbbl
cmp
or
adc
rcrb
mov
cmc
cs
and
les
lds
and
push
xchg
push
sbb
lock
orl
out
repnz
sti
or
std
and
int3
jle
mov
mov
and
xchg
and
enter
in
mov
cmp
jecxz
cmp
xor
jle
mov
call
sub
adc
sbb
ret
push
cltd
jo
dec
call
push
push
jne
imul
or
fs
fisubrl
jge
ss
jae
push
mov
cmp
addb
ds
xchg
lods
lret
lret
outsb
daa
mov
dec
mov
xor
dec
out
dec
inc
fcmovb
call
in
sub
mov
cltd
push
cmpsl
and
dec
shl
pop
xchg
dec
shl
sbb
stc
aad
xchg
or
std
cmp
mov
xchg
adc
test
push
leave
pop
imul
lods
shlb
pushl
aad
xchg
scas
frstor
xchg
sarb
mov
ret
push
popf
xchg
and
jne
xchg
pushf
xchg
popf
addb
push
out
inc
imul
xchg
out
mov
arpl
lods
jns
popf
xlat
out
lods
xchg
call
jbe
sbb
stc
or
add
cs
ficoms
xor
ret
mov
jl
or
repnz
xchg
imul
xor
roll
push
inc
roll
shll
or
or
aad
dec
pop
enter
sbb
ss
daa
pusha
test
orb
popa
pop
insb
cltd
icebp
dec
xlat
push
leave
sbb
lret
pop
leave
sbb
popf
les
stos
add
aas
sbb
es
lods
stos
jle
stos
cmp
mov
pusha
sbb
repnz
arpl
int3
test
cmpsl
outsb
mov
or
fs
loope
bound
fnstenv
xor
xchg
or
mov
mov
shll
leave
add
pop
ret
inc
arpl
popa
lret
scas
iret
push
sub
mov
leave
sub
mov
jbe
mov
aam
aas
push
mov
repnz
jge
js
jb
cld
or
xchg
jno
stos
pop
ret
sbb
mov
cli
aad
lret
std
dec
jnp
or
test
cmp
lods
call
shll
enter
push
in
push
out
dec
sbb
gs
gs
mov
in
mov
notb
fs
mov
lock
lea
xchg
push
cmp
jns
dec
js
out
push
mov
out
repz
xchg
add
cltd
pop
inc
inc
mov
test
mov
ret
mov
mov
ja
stos
loopne
pop
jl
pusha
jbe
ficoml
test
dec
push
orl
jmp
and
arpl
xchg
lea
and
pop
add
popa
dec
les
stc
push
xlat
lret
mov
cmp
push
popa
rcll
loopne
xchg
int
pop
ret
ss
mov
nop
inc
jb
sub
pop
xor
sbb
push
lret
les
arpl
xchg
arpl
into
jne
add
leave
bound
push
aad
lods
clc
add
pop
call
sub
popa
sahf
sub
pop
push
popa
add
ljmp
or
sub
iret
mov
xlat
gs
ss
loop
outsb
xchg
dec
cmc
inc
add
add
iret
repz
dec
push
mov
shll
addr16
xchg
out
out
shlb
pop
jp
das
repz
mov
sub
mov
movsl
jge
cmpsb
lea
xlat
arpl
xor
hlt
ret
sti
jb
flds
in
mov
test
dec
repz
stos
mov
inc
test
mov
lods
std
cwtl
outsb
and
pop
out
sbb
mov
pusha
add
ds
sbb
dec
adc
sbb
imul
hlt
inc
nop
xor
lahf
mov
xorl
imul
xor
nop
shlb
es
push
dec
mov
clc
aad
mov
loope
mov
lcall
xchg
cmp
decb
mov
push
push
mov
std
add
xor
adc
xchg
mov
mov
pop
iret
arpl
std
scas
jb
loope
mov
jb
sub
scas
outsb
test
mov
mov
or
mov
shrb
dec
mov
or
dec
dec
sbb
pop
aad
mov
adc
dec
sbb
xlat
popf
jne
push
fcmove
xchg
ret
nop
pop
scas
and
inc
xchg
ds
cmc
int3
fistps
das
je
incl
loopne
outsb
mov
fldpi
pop
sbb
jnp
mov
pushl
test
cwtl
leave
mov
inc
jnp
mov
push
es
repz
mov
mov
jns
icebp
addb
mov
sbb
testb
fs
sub
xchg
repnz
inc
jnp
and
repnz
mov
sub
cltd
xchg
push
movsb
xor
fistl
hlt
push
push
lea
in
stc
add
ljmp
mov
nop
push
or
pop
lods
lahf
dec
fucom
test
inc
dec
cmp
leave
call
and
jge
gs
mov
into
pop
scas
mov
cli
mov
mov
sub
mov
into
ficoml
in
dec
and
inc
or
aad
sub
gs
lods
call
push
addr16
aad
fstps
mov
adcl
imul
arpl
sub
or
cmp
outsl
sbb
sti
cmp
adc
pop
xchg
sub
leave
popf
daa
repnz
cld
sub
pushf
je
jl
jge
push
jg
aaa
sub
pop
fadds
ror
sbb
jbe
push
clc
cmpsl
jle
fldcw
mov
pop
movsl
push
xchg
bswap
mov
dec
adc
dec
inc
or
jle
les
add
pop
inc
daa
testl
aad
pushf
imul
cmp
dec
mov
jecxz
pop
or
cmp
mov
jg
sub
into
cmpsl
adc
es
testb
fists
test
jle
pop
mov
call
mov
pop
aas
fnstcw
fidivl
jl
jne
test
jle
mov
cs
std
imul
xchg
push
mov
icebp
sub
pop
andl
test
mov
mov
iret
cmp
les
ds
repz
lret
addr16
or
mov
sbb
repnz
or
lcall
xor
cs
pushf
fldcw
cltd
je
sti
leave
mov
sub
ljmp
fnstenv
shlb
sbb
pop
jnp
in
das
lods
jecxz
in
in
sbbl
add
ds
jno
or
adc
jae
pop
sub
mov
inc
cvtpi2ps
pushf
pop
movsl
jbe,pn
mov
movsl
aam
gs
dec
add
cmp
aas
cmc
pusha
outsl
xchg
pushf
dec
sbb
lock
jle
mov
hlt
lret
add
add
sub
add
sarb
cmp
les
xor
adc
ljmp
dec
loope
cld
inc
loopne
sbb
imul
lods
inc
add
rclb
and
daa
xchg
lock
fldenv
jbe
cld
hlt
idivb
notb
cltd
mov
cmp
outsb
fwait
and
or
push
cmpl
fisubs
cltd
into
mov
sub
dec
cmp
sub
add
test
lods
lret
movsl
nop
inc
sub
mov
stos
test
jns
pop
mov
les
xchg
cmp
mov
mov
inc
jo
dec
lods
gs
xchg
mov
mov
adc
cmpsl
test
pop
out
inc
xchg
iret
xchg
inc
test
mov
or
fxam
jne
sub
outsb
lods
test
rolb
and
mov
dec
ds
loopne
xor
popf
out
xor
in
sub
loope
and
in
xchg
mov
std
rcrl
repnz
fdivrs
mov
shll
daa
push
cmp
xorb
pusha
or
lcall
in
out
adc
ds
jnp
adc
lods
notb
lahf
aas
roll
shrl
cltd
pop
add
sbb
cltd
jp
pushf
test
and
mov
sbb
push
mov
mov
sti
call
cmp
jg
dec
mov
jnp
lcall
rcr
pop
dec
adc
pushf
sbb
fiadds
fsubs
cmpsb
sub
xlat
cmp
je
fwait
andb
mov
adc
mov
xchg
jb
push
nop
emms
clc
mov
xchg
bound
sbb
ljmp
sbb
push
add
neg
push
rclb
cmpsl
aaa
fwait
jmp
pop
clc
add
xor
and
adc
sub
add
push
scas
bound
and
stc
and
scas
fadds
and
dec
jne
std
push
and
mov
pop
out
jp
fisubs
jmp
xor
xor
enter
imul
sub
pop
add
adc
xchg
pusha
cmp
ss
dec
inc
mov
and
sub
and
xor
sub
add
in
mov
sbb
aad
dec
mov
jne
push
adc
shr
test
dec
jns
xorl
cmp
in
mov
lock
movsl
add
dec
xor
or
sub
jl
push
mov
add
cwtl
es
sarl
inc
xor
cmpsb
sti
pop
cli
fstps
in
add
jnp
rol
jb
decb
mov
notb
xor
outsl
cmp
pop
fdivp
or
ja
xor
push
or
xor
mull
mov
jl
or
cmpsl
scas
in
std
cmp
lret
js
xchg
or
lret
cs
sbb
or
xor
jo
mov
outsb
mov
adc
insl
out
lods
and
fists
aaa
leave
movsl
ret
outsl
sahf
sub
int
jae
dec
mov
lds
mul
sbb
push
outsl
sbb
lods
in
push
add
cs
jp
and
xor
inc
sbb
xchg
push
mov
fimuls
sbb
dec
stos
das
and
cmp
sbb
es
pop
dec
or
test
es
stos
iret
sub
push
and
out
pop
dec
in
jns
scas
rorb
xchg
push
fldt
andl
push
push
inc
and
clc
mov
sub
shll
test
add
pop
inc
and
cs
sbb
fistps
adc
sbb
dec
push
js
call
adc
shrl
and
push
xchg
push
xchg
inc
pop
sub
cld
mov
and
leave
mov
imulb
or
lcall
dec
test
jnp
xchg
adc
adc
sub
scas
pop
jl
push
setbe
fildl
jns
and
mov
lock
xor
cmp
out
or
call
xchg
mov
add
daa
sub
out
ret
push
pop
xor
push
mov
push
inc
divb
outsl
pop
cmp
xchg
shll
movsl
mov
clc
jno
lds
pop
xor
xchg
js
or
mov
dec
and
and
push
jno
xchg
inc
clc
xchg
int
pop
mov
sub
nop
xor
sub
out
arpl
xchg
stos
and
lea
daa
sub
lea
outsl
jns
or
lea
imul
xchg
rorl
or
xchg
ds
sahf
repz
leave
mov
mov
addr16
call
inc
pop
imul
adc
push
imul
add
int
in
dec
or
xor
xchg
lret
dec
pop
dec
pop
sahf
mov
js
inc
sub
add
dec
sti
adc
mov
arpl
add
ds
stc
xchg
in
or
fisubs
inc
fucomi
icebp
jl
cmp
mov
pop
adc
fcomps
lret
mov
xor
movsb
out
pop
cwtl
cmp
dec
mov
das
stos
nop
pop
mov
sahf
or
test
push
call
fdivl
repz
jns
test
mov
out
jne
das
push
aaa
cmpsb
divb
mov
shlb
repz
stos
add
push
push
cmp
adc
cs
fcmovnbe
hlt
inc
fimuls
inc
ret
outsl
loopne
and
push
mov
mov
sub
imul
scas
ds
test
test
ss
in
leave
add
or
insb
into
mov
cmp
or
sar
jp
imul
inc
and
int3
push
loopne
insl
inc
push
fisttps
stc
jl
xor
cmp
xchg
add
jge
sub
mov
test
shl
scas
jg
push
fldt
xlat
and
addr16
inc
push
and
pop
or
jnp
sahf
movsl
imul
pop
cwtl
in
mov
out
int3
push
mov
fmuls
mov
rcrb
add
adc
loopne
sbb
daa
add
adc
or
and
pop
sbb
jle
fcmovne
push
push
cmpsl
and
inc
xor
xor
daa
es
fwait
mov
in
push
mov
lock
fwait
dec
pusha
les
cmp
sbb
mov
xchg
outsl
add
popa
mov
xchg
adc
xlat
pop
mov
movsl
inc
push
into
add
orb
mov
xchg
and
pop
cmp
outsl
outsl
sbb
mov
xchg
sbb
and
add
gs
sub
stc
sub
aaa
adc
adc
aaa
cmp
iret
push
xor
push
ja
ret
push
fimull
xchg
jg
xor
dec
or
cmc
adc
cmpsb
cwtl
mov
cmc
lret
ret
pop
mov
pushf
aam
push
add
rcrl
fnstsw
subl
sbb
xor
lcall
notl
leave
jle
xchg
out
imul
or
enter
iret
inc
xchg
xchg
rcll
shlb
test
insb
push
xor
jg
sub
xorl
fisttpl
data16
enter
cwtl
dec
or
cwtl
ror
jns
shlb
sbb
and
shlb
and
sub
pusha
jne
push
push
push
hlt
sub
mov
outsb
in
cmpsl
imul
iret
loop
scas
sub
add
dec
push
imul
rcrl
test
xor
js
sbb
mov
es
dec
mov
std
add
jnp
pop
fistps
js
dec
lock
and
cmc
out
loopne
mov
cmc
call
test
pusha
bound
test
stos
cltd
adc
out
dec
rol
pop
daa
movl
ret
xor
daa
push
sub
int3
xchg
adc
push
adc
scas
lea
pop
mov
and
add
popf
add
dec
insb
pop
out
ret
jb
inc
insb
mov
adc
repz
adc
cmp
fldcw
into
adc
insb
hlt
outsl
call
mov
movsb
push
ret
sub
dec
inc
movsl
imul
pop
mov
mov
nop
bound
push
pusha
fwait
das
push
mov
xor
adc
cmpsl
in
xchg
leave
lods
testl
and
push
inc
fcmove
push
sub
hlt
cmp
and
jne
pop
push
aas
sub
sub
mov
leave
int
cmp
push
lods
cmpsl
stos
dec
int3
push
movsl
mov
loope
cwtl
in
mov
xchg
stos
fwait
pmaxub
xchg
sub
mov
adc
scas
repnz
ljmp
in
lds
inc
and
sbb
cmp
adc
aad
push
or
xchg
pushl
jae
js
mov
test
lods
rcl
lahf
punpcklwd
pop
lock
adc
nop
and
sbb
mov
shlb
data16
dec
xchg
xor
dec
push
ss
jae
shll
push
cmpsl
leave
in
inc
stc
push
je
testl
mov
sub
adc
ret
add
jns
jle
push
test
shrb
hlt
ja
push
orb
nop
lret
mov
push
aad
pushf
test
pop
fs
cwtl
ds
jo
insl
mov
mov
xchg
cmp
xchg
pavgw
mov
call
xchg
jne
inc
test
dec
lds
and
das
mov
ss
ret
jae
imul
scas
jecxz
inc
mov
mov
dec
pop
popf
mov
xchg
out
mov
rclb
xor
imul
jns
or
hlt
push
dec
push
int
dec
shll
loop
add
bound
ret
xchg
cmpsb
shlb
fwait
push
mov
pop
cli
inc
std
fwait
dec
pop
test
shr
lret
cmpsb
sub
test
mov
push
adc
push
inc
addl
xchg
jno
out
jne
jns
jnp
daa
pop
ds
push
pop
mov
icebp
movsb
sub
dec
or
aam
rcrl
shl
in
add
pop
loope
stc
mov
jno
adc
jecxz
mov
mov
sbb
aas
pop
and
pop
mov
cwtl
mov
in
lock
xor
mov
lret
enter
cwtl
jl
loope
jp
mov
into
push
mov
dec
jnp
jp
mov
repz
outsb
nop
test
fwait
or
scas
or
fwait
mov
je
or
scas
push
pop
scas
and
bound
shr
jne
or
cmp
mov
sub
out
jns
mov
add
std
pop
cmpsb
and
imul
popl
notl
int3
add
in
das
xchg
or
inc
ficomps
bsf
call
sub
pavgw
or
out
icebp
out
jbe
xor
xchg
mov
stc
inc
popa
cli
add
mov
jg
xorl
stc
add
in
pop
bound
mov
shl
push
dec
imul
xchg
ficomps
cli
pop
mov
push
sti
adc
mov
addr16
loopne
cli
cwtl
fidivrs
scas
cwtl
std
psubsb
aam
jle
adc
cmp
push
mov
pop
fdivrs
jmp
mov
jle
xchg
pop
jle
cs
cmp
enter
xor
or
pop
outsb
xchg
or
test
in
gs
mov
pop
jecxz
insl
fsubrs
test
mov
adc
cld
js
cwtl
aaa
pop
decb
test
xor
adc
decl
into
pushf
cltd
pop
jb
sub
adc
inc
iret
cltd
mov
inc
jae
push
pop
jge
push
into
sub
scas
ret
push
push
lcall
add
aad
scas
pop
or
lods
adc
ss
dec
rorb
mov
cs
movsb
xchg
mov
popa
data16
mov
push
mov
gs
mov
inc
nop
aaa
in
stos
popa
mov
adc
arpl
popa
jl
cmp
inc
adc
push
imul
stos
dec
jge
push
jns
jge
sahf
mov
pop
sub
xor
in
adc
popf
cmp
cmp
stos
scas
mov
push
or
or
or
jnp
les
push
and
xchg
mov
mov
mov
mov
inc
xor
out
mov
repnz
aam
inc
add
js
bound
xchg
in
mov
int3
or
add
adc
pushf
out
add
jl
fsubs
subl
mov
testb
daa
divb
je
loop
aam
or
dec
sub
and
pop
repnz
aam
cmp
std
and
mov
or
xchg
jg
cmp
xor
rorl
xchg
imul
cs
mov
lret
sbb
mov
add
int3
fstpt
lahf
sti
adc
cmp
fists
mov
ja
faddp
nop
mov
sub
lcall
mov
dec
fptan
icebp
imul
jns
xchg
mov
sub
adc
inc
ret
mov
pop
mov
dec
outsb
es
scas
or
inc
mov
stos
aas
dec
test
xor
lea
add
adc
lcall
sbb
test
cmp
cs
push
sub
jl
mov
es
pop
add
mov
add
push
inc
jae
mov
iret
sub
jp
mov
subl
mov
inc
icebp
and
dec
ficoms
mov
adc
and
rcrl
outsl
hlt
into
ret
sbb
test
mov
test
push
xchg
test
popf
mov
cwtl
add
mov
inc
popl
cmp
scas
or
sbb
mov
sbb
add
lods
inc
and
push
jp
repnz
jnp
pop
clc
cmpsl
sub
lock
and
cwtl
sub
inc
sbb
pushf
lods
pop
nop
aad
cld
lods
loopne
jne
cmp
sub
loopne
pushf
pusha
insb
jp
jnp
adc
out
negl
jne
mov
sbb
ret
sbb
pushf
lods
mov
pop
cmpsb
adc
and
daa
mov
into
jge
cmpsb
sbb
mov
cwtl
add
inc
stc
add
mov
popf
hlt
lods
jg
mov
cmp
stc
mov
adc
ret
push
and
inc
pop
dec
loope
int
jnp
lods
movl
lahf
fsub
add
rclb
inc
pop
pop
adcl
push
sub
sub
call
sbb
mov
jae
rcr
nop
xchg
dec
cltd
fwait
bound
pushf
push
jns
mov
les
mov
push
lds
pushf
test
add
and
fdivrl
pop
fldcw
xor
mov
aas
dec
adc
fidivrl
sub
fdivs
imul
jg
pop
mov
adc
mov
dec
daa
in
hlt
dec
push
adc
xor
scas
mov
pop
loop
mov
mov
pop
loope
jmp
jb
inc
mov
scas
inc
add
adc
iret
int3
fcomps
xor
cmpsl
sar
enter
ljmp
inc
movsb
iret
mov
xchg
hlt
in
inc
xchg
push
clc
push
ret
jecxz
dec
add
sbb
ret
dec
mov
in
pop
std
enter
in
push
lods
in
add
cwtl
push
scas
push
adc
add
rcll
sbb
movsl
call
loop
inc
cmp
outsl
adc
into
in
ret
repnz
xor
and
sarb
mov
jge
mov
pop
imul
arpl
adc
in
faddp
mov
adc
adc
mov
cmc
inc
fs
decl
and
scas
scas
sbb
scas
xchg
push
lret
cmp
insl
lods
pop
movsb
movl
pop
xchg
stc
lret
jnp
cld
insb
sbb
hlt
call
or
sub
aaa
movsb
lret
mov
roll
repz
ljmp
cmp
daa
mov
pop
jb
mov
cli
addb
cmp
jnp
fnsave
mov
xchg
mov
xor
mov
shll
jo
mov
pusha
xor
jle
mov
pusha
and
pop
aas
xor
dec
pop
hlt
lods
call
push
movsl
js
push
inc
insb
or
lret
mov
cmpsl
lods
insb
loop
aas
push
int3
stos
push
fs
sbb
xlat
aaa
mov
popa
into
xchg
add
xchg
in
xor
xor
push
loope
or
pop
xlat
loop
xchg
or
jg
dec
shll
dec
jo
fmuls
cmp
inc
ljmp
aas
push
fidivs
dec
mov
imul
xchg
xchg
jbe
xchg
adc
xchg
push
cmpsl
decl
repz
pop
and
sahf
fistl
lret
call
icebp
jmp
mov
sbb
mov
jb
jae
divl
push
pushf
ss
jnp
notl
pop
enter
add
inc
xchg
pusha
dec
gs
adc
sub
call
jmp
fnsave
and
fstl
mov
xchg
jns
sub
inc
stos
adc
pop
es
sbb
stos
or
hlt
push
ljmp
fwait
ss
psrlq
push
popa
mov
cmp
clc
out
mov
inc
leave
mov
cld
jo
push
push
je
cmc
cld
push
fwait
hlt
insl
dec
add
in
jo
ret
add
pop
jb
adcb
jae
lods
push
mov
mov
jg
inc
xor
sub
cltd
sahf
cmp
mov
addr16
inc
pop
push
fbld
out
pushw
push
mov
cli
cmp
and
push
mov
lods
bound
add
sub
adc
icebp
aaa
inc
cmp
mov
test
shr
aam
push
inc
loop
ror
mov
xor
mov
adc
pop
pop
loope
mov
pop
lret
clc
and
std
into
das
sbb
sub
in
lea
nop
repz
cwtl
mov
jno
out
cmp
popa
jmp
adc
stc
fnclex
jnp
push
aaa
xchg
ja
mov
jbe
mov
dec
push
cli
jo,pt
cmpsl
push
arpl
and
jo
push
push
cmp
and
xchg
lret
inc
pop
mov
lret
mov
int3
dec
inc
movsb
mov
int3
aas
add
xchg
sbb
outsl
cmp
xor
int3
movsl
mov
testl
out
test
outsb
ljmp
mov
lahf
jbe
push
jae
sbb
cmp
repnz
adc
sbb
enter
inc
pop
int3
shll
cmpsb
js
push
jno
pop
out
pushf
sub
inc
xor
in
ja
push
xchg
dec
cmp
mov
pop
repnz
shrb
xchg
jle
xlat
daa
hlt
les
stos
rclb
data16
leave
sti
into
cltd
mov
cmp
mov
xor
scas
jle
add
popa
dec
mov
push
sti
add
sub
or
jl
jmp
sbb
popf
es
test
stos
or
pop
js
pop
in
js
in
loope
adc
xor
std
rorb
stos
repz
stos
stos
je
mov
mov
in
push
or
and
or
and
nop
dec
mov
jmp
in
rcll
aad
inc
test
mov
cmp
pusha
sbb
xor
xchg
jno
aam
xchg
jecxz
mov
das
mov
jno
cmp
inc
ja
fdivs
ss
xchg
rcl
xchg
sbb
out
push
cmc
popf
and
mov
push
xor
mov
xchg
push
pop
push
pop
icebp
xchg
push
sub
fildl
push
dec
adc
mov
cmp
inc
fists
jno
movsb
jle
xchg
js
mov
jns
loopne
cmp
dec
fwait
iret
fwait
or
icebp
je
mov
jnp
fidivl
or
int
data16
fmulp
dec
jp
adc
test
shrl
inc
cmpsb
out
or
dec
bound
pushl
sbb
repnz
sbb
sub
cmp
fcomps
or
call
jle
lods
cmpl
iret
in
ret
into
pop
push
dec
add
or
or
mov
scas
and
xacquire
and
jbe
test
and
fldenv
and
ss
or
rcrb
mov
jle
push
fldenv
xchg
and
jno
cmp
popa
mov
stos
fs
fsin
jne
push
ret
mov
adc
decb
cmpsl
push
pusha
pop
add
fldenv
sbbb
addr16
dec
mov
sbb
mov
jb
push
pop
mov
call
lcall
out
add
fisttpll
sarl
and
add
sbb
pop
into
cmp
or
int
and
mov
in
jo
dec
fcomp
movsl
leave
pop
pop
les
dec
inc
enter
pop
xchg
fldl
add
push
add
mov
mov
pop
sub
shrl
xchg
jae
and
cs
jp
insb
mov
xor
sbb
pushf
fsubrs
nop
xor
xchg
jp
jmp
in
jb
fiaddl
decb
push
mov
insb
and
mov
mov
mov
popf
cmp
add
int
mov
sbb
sahf
dec
jg
lock
inc
push
mov
inc
jg
push
lret
push
push
mov
call
adc
arpl
ret
push
sub
xchg
or
xchg
popa
cmp
popf
mov
ret
mov
orl
in
mov
insb
mov
fs
out
ss
jmp
insb
jecxz
ss
out
cmp
aaa
inc
push
mov
xchg
push
sbb
aam
push
xor
out
xor
dec
jp
xor
push
outsl
xchg
dec
jg
jmp
jnp
mov
or
std
mov
outsl
sub
sbbl
lret
or
sub
leave
add
xor
jle
shr
mov
mov
cmp
lahf
xchg
mov
das
mov
icebp
sub
cli
les
sbb
es
mov
or
ret
scas
and
push
mov
jnp
fdivrl
je
fwait
cmc
or
cmc
adc
pusha
scas
xchg
stos
mov
ret
cmp
or
add
fsts
fimull
aad
jmp
scas
in
test
int
aam
xchg
jo
xor
inc
push
pop
nop
int
ljmp
xchg
lds
mov
incl
sbb
es
in
scas
cmc
mov
outsb
pop
idivb
mov
xchg
lss
aam
cli
jecxz
inc
xchg
dec
lock
sbb
cs
xor
push
mov
push
in
aas
cmpsl
sub
out
pop
push
add
mov
fidivl
xchg
jb
loopne
add
mov
xlat
insl
pop
xchg
out
or
add
lea
add
jg
mov
xor
mov
sbb
stos
or
mov
flds
iret
jne
or
call
ficomps
cmpsl
rolb
das
mov
xchg
and
cs
and
pusha
sarb
jae
mov
ja
rol
decl
dec
loopne
outsl
loope
mov
repz
mulb
lret
nop/reserved
inc
fstpt
xor
jb
out
outsb
insb
ja
mov
es
cwtl
pop
push
mov
cwtl
sub
out
cmp
inc
jge
pop
mov
imul
add
inc
stos
in
and
es
jmp
mov
mov
jl
xchg
cmpsl
dec
inc
test
lcall
xor
jne
dec
add
mov
ds
inc
adc
repz
add
movsl
mov
sub
push
inc
scas
out
jo
adc
jmp
fs
sarb
xchg
scas
xor
mov
xor
loope
inc
bound
mov
jns
xor
push
aam
dec
cli
lock
jnp
fs
imul
push
stos
jns
daa
jno
sub
imul
sub
popa
cmp
repnz
mov
imul
mov
insl
add
fiadds
frstor
dec
push
or
lret
lret
jns
adc
ret
aad
pop
arpl
or
jge
out
mov
push
sub
or
fs
in
inc
cmc
inc
or
repnz
in
mov
data16
xlat
ret
shll
jns
leave
xor
sub
scas
scas
es
cmpsl
jmp
in
int3
xor
out
xlat
mul
int3
sbb
mov
adc
pop
rcll
and
sbb
dec
repnz
inc
int
out
dec
pushl
mov
daa
mov
icebp
es
jne
xor
bound
push
jae
popa
fcomi
inc
ljmp
mov
pop
sub
and
dec
daa
push
faddl
sub
mov
mov
hlt
mov
mov
pusha
aaa
jae
fmull
loope
jp
pushf
rdmsr
inc
aam
movsb
add
push
or
repnz
mov
pop
pop
or
out
inc
or
mov
and
pushf
and
pushf
fsubs
addb
cmp
or
daa
popa
pop
push
mov
je
push
jg
mov
sbb
les
stos
xchg
ret
adc
andb
cmp
mov
mov
jno
adc
push
in
loopne
nop
lds
push
sbb
in
push
push
les
das
test
sti
cmp
repnz
test
leave
out
pop
add
inc
loope
shl
pop
aaa
hlt
xor
jmp
xor
stos
or
xor
xor
adc
or
xorl
fwait
shl
mov
inc
cli
pusha
inc
fs
xor
lret
test
loope
mov
imul
js
dec
xchg
pop
add
adcl
iret
je
call
rcll
pop
cmc
cmp
sub
xchg
imul
pusha
outsb
xor
lock
xor
faddl
jecxz
pusha
xchg
xor
mov
or
cltd
push
xlat
push
call
mov
popf
cmp
adc
je
mov
pop
add
shr
mov
clc
out
or
in
push
movsb
xchg
mov
sub
mov
test
push
mov
push
lcall
and
dec
cmp
cmpsl
pop
xchg
lods
cmp
out
xchg
push
add
sbb
pop
mov
sbb
fisubs
and
out
jle
sbb
dec
add
fisubl
repz
sub
in
loopne
ret
xchg
adc
pop
fsubr
mov
mov
scas
inc
pushf
jg
lock
cmp
xchg
and
movsb
push
inc
movsl
outsl
xor
ss
out
pop
inc
clc
call
and
sbb
jo
sbb
mov
mov
and
filds
cmc
pushf
or
icebp
pop
and
imul
lahf
mov
imul
push
jo
aam
jmp
loope
in
movsl
push
ljmp
cmp
cmpsb
repz
mov
jg
pusha
mov
xor
mov
dec
mov
pop
inc
lock
jbe
cmp
mov
push
ljmp
ja
scas
loope
outsl
mov
xchg
xchg
int3
mov
dec
popa
or
mov
pop
aas
mov
xor
cmpsl
lods
cmp
mov
sbbl
rorb
in
pop
addr16
das
int
call
insb
dec
mov
test
fcoms
fsubrl
or
mov
mov
popf
stos
stc
mov
cmp
loope
pop
out
or
jge
cmpsl
sub
inc
xchg
xchg
hlt
xlat
es
lds
popf
mov
inc
outsb
dec
pop
sbb
inc
loopne
movsb
fisttps
int3
add
cmpsl
shlb
and
mov
test
adc
in
jb
or
outsl
add
mov
cmpsb
test
sub
in
push
adc
adc
pop
mov
faddp
mov
sub
sub
mov
int
test
adc
pop
bound
mov
pop
mov
lea
pop
cmp
lds
or
mov
in
cmp
pop
sub
fs
mov
mov
or
aam
popa
mov
add
hlt
inc
mov
pop
popf
hlt
mov
xchg
js
sbb
mov
negl
fstps
adc
inc
lcall
push
mov
movsl
xchg
ret
sub
xchg
add
call
jbe
add
roll
add
and
xchg
mov
lahf
in
loope
push
adc
rcrb
stos
and
push
jp
cli
jle
add
add
push
xlat
addb
jmp
inc
xchg
dec
mov
cmp
aad
pop
mov
and
ficoms
xchg
sub
ja
push
mov
add
mov
outsl
xor
cmpsb
in
lret
test
sbb
insb
cmc
and
inc
lret
add
imul
lahf
jnp
cmpsl
mov
fcmovnb
xchg
sub
fnstcw
in
push
std
add
in
dec
pop
addr16
cmpsb
and
lret
ret
mov
nop
mov
inc
mov
pop
sub
rol
pop
enter
imul
in
mov
ficoml
cmc
fmull
rolb
hlt
rolb
add
sbb
outsb
mov
mov
jl
pushf
out
sarl
and
lahf
movsb
mov
shl
inc
adc
fdivl
mov
mov
xchg
jnp
dec
dec
pop
je
mov
pop
mov
imul
fists
hlt
rcl
push
iret
mov
xor
std
mov
or
xor
cmp
or
jge
popa
xor
sbb
cmp
xchg
sbb
stos
fisubrl
push
lods
das
int
les
inc
xchg
into
mov
ficompl
and
mov
dec
repz
ja
xor
pop
es
outsb
mov
fidivrs
xlat
jne
mov
xchg
fsts
jno
es
scas
push
jp
add
repz
xor
xlat
cmp
call
mov
ret
jge
fisubrl
pop
inc
es
add
jmp
and
mov
loopne
sbb
int3
cmp
out
scas
mov
sub
sbb
adc
or
fbstp
dec
dec
shll
lret
sahf
jge
or
ficompl
pop
jb
or
clc
push
imul
dec
fwait
pop
stc
xor
xchg
push
lahf
xor
cmp
lcall
lock
xor
pop
dec
dec
popf
lds
pop
movsl
cmp
mov
nop
repnz
sbb
sbb
lods
fwait
rcl
test
pop
lds
adcb
dec
inc
and
sub
cmp
mov
dec
add
lods
add
mov
repnz
sbb
insl
jp
imul
test
mov
jp
rolb
cmp
sbb
orl
hlt
xor
mov
loopne
mov
mov
mov
xor
lds
div
rcll
xchg
addr16
cmpl
negl
mov
aas
push
aaa
jle
mov
lahf
fmull
xor
xchg
sbb
dec
fwait
and
into
pop
jnp
push
scas
stc
jno
sbb
push
or
sub
in
mov
js
fisttpl
outsb
loop
call
or
mov
jge
mov
add
mov
ljmp
stc
lds
mov
xchg
adc
pop
je
xor
adc
mov
xchg
cmp
jbe
xor
pop
daa
pusha
and
fists
cs
aas
insb
cmpl
dec
rclb
lahf
les
and
xor
xchg
bound
lret
sarl
sub
sub
sub
and
inc
jl
lock
inc
add
lret
addr16
mov
push
pop
mov
dec
mov
jbe
sub
xchg
std
and
repnz
xor
pop
pop
rcll
test
pushl
test
push
dec
cli
subl
test
xchg
pop
xchg
sub
inc
add
inc
aad
nop
lcall
push
imul
stc
pop
nop
lea
ds
pop
shll
arpl
mov
sub
pop
xchg
test
dec
je
xchg
pushf
inc
lock
pop
cmc
scas
cwtl
fs
dec
cmp
cmp
jle,pn
pop
push
pushf
in
or
into
xor
divb
or
out
out
push
sahf
int3
mov
xor
ret
and
je
pop
xchg
push
leave
hlt
push
addb
xor
stc
nop
out
pushf
xchg
subb
sbb
and
adc
into
add
popf
leave
or
dec
xchg
fdivrl
and
rorl
xchg
frstor
cwtl
push
dec
mov
lret
mov
das
out
rcrl
hlt
adc
leave
jno
mov
out
mov
aam
cltd
lods
js
adc
mov
sub
mov
adc
dec
ja
mov
mov
mov
cmpsb
inc
je
add
push
and
dec
sahf
je
sbb
loopne
dec
or
inc
cmpsb
fwait
xor
test
inc
mov
xor
adc
sbb
add
jg
jp
jnp
fcomps
enter
mov
xchg
add
mov
mov
sub
mov
sbb
mov
int
idivb
outsl
mull
lret
sub
addr16
lret
mov
cwtl
cmp
add
mov
test
sbb
lock
out
adc
mov
mov
outsl
mov
pop
mov
pusha
pop
pop
aaa
fcomps
imull
fdiv
dec
mov
mov
or
sbb
sbb
xchg
add
push
iret
mov
or
add
mov
lea
xchg
mov
test
or
clc
repz
cmovns
popf
cmp
test
push
andb
and
out
jnp
addr16
sbb
and
xorl
loop
les
pop
add
jge
jbe
pop
sbb
outsl
into
dec
and
ja
jg
push
in
rclb
mov
adc
negl
xorb
adc
cmp
inc
pop
mov
jnp
out
xor
fwait
xor
aam
inc
cs
jecxz
dec
jo
shll
fsubrl
mov
mov
mov
jne
mov
das
mov
shll
out
lret
out
fstl
mov
repz
xor
jg
jo
test
out
iret
jae
imul
into
inc
cs
into
adc
cmp
add
dec
popa
lock
loope
and
les
xor
mov
nop
sti
rorb
hlt
jl
cmpsl
push
movsb
je,pt
or
cwtl
cmp
add
bound
jle
je
xchg
mov
stos
fisubs
add
adc
mov
adc
cs
clc
shl
std
sbb
dec
popa
into
ja
popf
push
out
sub
lret
and
ja
shl
mov
xor
push
mov
and
lahf
xchg
push
pop
jle
dec
mov
push
dec
fcoms
mov
int
xchg
int3
aam
jl
add
adc
and
xor
pop
adc
push
mov
stos
sbb
mov
ds
divb
inc
mov
sbb
and
and
mov
sub
lea
pusha
int3
divl
lea
inc
fsubp
insl
insb
pop
loopne
lock
cmp
jns
jnp
bound
xchg
out
shrl
in
cltd
sbb
sti
mov
cmp
add
xor
jne
ljmp
and
xor
cmp
push
nop
jb
repz
or
sbb
push
ds
jb
inc
dec
mov
and
test
push
ror
inc
push
pop
int3
arpl
mov
sti
mov
test
lahf
mov
jl
arpl
stos
push
dec
mov
and
pushl
dec
push
mov
jnp
js
add
jnp
jno
cltd
pop
hlt
xor
lahf
nop
dec
dec
sahf
dec
lcall
mov
adc
icebp
and
or
aad
repnz
ficoml
jecxz
mov
and
or
xor
mov
popa
rol
or
lds
xchg
into
insb
adc
sub
xor
test
in
mov
ja
mov
xchg
push
push
lret
stc
inc
fcomps
push
xor
push
lock
in
xchg
clc
mov
test
out
iret
add
or
inc
pop
das
in
mov
leave
add
jae
mov
or
push
mov
cmc
adc
out
test
int3
aad
push
lea
int3
jecxz
mov
adc
fldl
faddl
pusha
adc
xchg
fldl
rcrb
in
leave
sti
lcall
cmovl
xchg
daa
jae
rcrl
dec
xchg
lahf
cs
and
jecxz
or
rolb
icebp
add
add
inc
pop
add
stc
pop
mov
mov
movsl
fisttps
adc
out
xchg
jmp
mov
arpl
mov
fbstp
dec
cmp
sbb
jge
lods
pushf
adc
arpl
hlt
scas
mov
inc
mov
xor
push
adc
aad
das
scas
in
gs
imul
cmpb
movl
jmp
push
les
mov
sbb
push
mov
cmpsb
push
adc
jge
mov
ja
add
push
lock
sbb
adcb
dec
rorb
xor
xchg
pop
cmp
sbb
sub
pop
shrb
inc
enter
push
fldl
fwait
add
push
loop
out
and
popa
push
lret
ja
jle
fs
pop
call
inc
cmp
sub
add
call
xchg
inc
push
aad
inc
test
rcll
lret
inc
into
inc
das
outsl
mov
repz
popa
pop
adc
push
orb
fwait
imul
lea
int
push
cmp
shll
insl
pop
xchg
xlat
cmpsb
hlt
lods
sbb
mov
push
int3
dec
lods
mov
mov
lahf
mov
or
call
or
sub
push
or
push
je
stos
fsts
adc
push
leave
jnp
cmp
popf
inc
inc
icebp
in
mov
xor
icebp
shll
into
sub
xchg
mov
in
sbb
add
fwait
xor
aam
jge
xor
scas
les
push
rol
nop
nop
addb
dec
mov
bound
out
daa
das
cmpsl
sbb
xchg
add
dec
lods
sbb
add
inc
xor
xchg
jle
lcall
cmpsl
pop
repnz
adc
xchg
movsb
leave
dec
psraw
fwait
mov
and
insb
scas
lock
sbb
je
cmpsl
ret
xchg
je
clc
stc
bound
es
adc
ljmp
lret
jg
sti
arpl
push
add
loopne
sbb
sbb
adc
js
add
xchg
pop
push
xor
mov
push
cmpsb
inc
xor
outsb
xchg
sub
sbb
xchg
or
xchg
int3
fwait
inc
mov
xchg
or
or
pushl
xchg
push
orl
nop
adc
cmpsl
dec
jns
xor
push
xlat
or
sbb
cmpsb
cltd
xor
jnp
popa
pusha
insb
mov
pop
dec
push
push
call
in
imul
frstor
mov
nop
cld
lcall
idivb
dec
xor
mov
pop
cmp
push
insl
pop
fnstsw
sbb
popf
iret
xchg
mov
or
outsl
rol
cmp
rol
jbe
xor
or
addr16
repz
dec
scas
xor
insb
pop
adc
ret
mov
aam
inc
mov
dec
fs
xor
push
pop
jbe
add
fucomip
cmp
xor
cs
mov
les
ss
and
dec
daa
jg
push
sub
in
xchg
test
push
data16
pop
mov
sahf
push
jbe
repz
lret
jmp
incl
loope
xchg
nop
mov
scas
or
and
push
cwtl
or
pushf
cmp
iret
and
sahf
call
mov
shlb
out
inc
sbb
xchg
aas
jo
pop
das
push
pop
mov
stos
test
in
in
mov
js
jb,pt
push
fwait
or
mov
cmpsb
pop
lods
enter
bound
cs
adcl
jo
sbb
push
in
xorl
cmp
cmpsb
mov
fisttps
insb
gs
pop
in
jo
arpl
in
pop
imul
xor
xchg
rcrb
cmc
in
dec
push
std
ud1
mov
push
je
lahf
sbb
ret
out
jno
xlat
fxch
mov
mov
add
fcompl
fs
sub
ljmp
les
add
xchg
mov
sub
and
xchg
out
adc
xchg
lret
jle
mov
faddp
mov
xchg
lods
mov
mov
cwtl
xchg
hlt
xor
dec
out
mov
dec
in
pushf
jb
icebp
sbb
loopne
ffree
pop
pop
or
jg
sub
mov
icebp
sbb
jmp
and
ret
jmp
sbb
push
pop
mov
and
testb
xor
inc
xlat
jl
int
push
or
out
stos
sbbb
mov
out
out
movsl
and
stc
hlt
gs
mov
jo
push
sahf
inc
fwait
sbbb
in
jl
jle
das
in
aas
adc
aas
insb
mov
lods
repnz
icebp
add
jmp
fstpl
cmc
sub
jle
cmpsb
shll
jp
sub
mov
cli
in
jnp
aas
int3
push
xchg
rcll
loop
in
es
pop
sar
push
ja
test
inc
push
mov
sbb
inc
jb
sarb
mov
pop
cmp
jge
test
xor
or
or
gs
xchg
repz
dec
call
xchg
adc
cld
jg
lds
stc
sub
sbb
or
inc
adc
mov
jne
or
and
inc
jae
xchg
mov
cmp
jo
ja
jg
jg
cmpsb
and
mov
adc
out
adc
call
jne
add
sbb
cwtl
jne
aas
mov
xor
inc
inc
testl
inc
xor
push
cmp
jmp
test
adc
or
in
stos
dec
push
ret
cmpsb
mov
inc
push
shl
pop
xor
pop
pop
fimuls
lods
jp
ret
popf
popa
dec
and
aas
shlb
push
mov
jo
fiadds
iret
xor
orl
shl
adc
add
cmp
dec
or
add
jle
lea
dec
lds
dec
imull
xor
sub
andl
fsincos
ss
es
pop
or
cmc
std
iret
fbstp
mov
pusha
test
std
push
adc
mov
test
divl
lods
mov
mov
and
add
arpl
mov
sub
jnp
cmpb
add
or
mov
jmp
scas
stc
adc
dec
clc
pushf
cmp
jo
pop
pop
xchg
push
cmp
andb
pop
scas
cs
dec
inc
pop
or
xlat
push
xlat
mov
leave
adc
cvtpi2ps
push
fwait
roll
stos
rcrb
mull
das
outsl
pushf
mov
mov
add
dec
lahf
aaa
cmpsl
insb
fists
sbb
and
and
lds
fstpt
gs
jno
pop
mov
jle
mov
das
divl
mov
jp
inc
mov
jle
mov
cmp
push
adc
push
mov
loope
sbb
cmpsl
xor
imul
andb
jle
out
lds
xchg
add
pop
add
adc
cld
add
addr16
sub
pop
jg
jae
xchg
cmp
icebp
xchg
jb
mov
fistps
idivl
fnsave
insb
jo
fs
mov
xlat
dec
scas
test
sti
mov
push
es
mov
xchg
jb
fs
push
dec
rcrb
xor
out
flds
cmp
xchg
out
xor
lret
cwtl
jge
mov
mov
dec
mov
rcll
lea
lahf
sub
pop
add
stos
aam
cs
fs
push
nop
add
add
mov
pop
mov
sarb
jle
jmp
jo
daa
ljmp
cmp
leave
pop
jnp
jmp
adc
rcll
jg
sub
movsb
inc
sbb
out
jg
negb
dec
jp
es
push
dec
mov
pop
and
pop
xor
lods
insl
lock
jl
pop
divps
cvtpi2ps
int
xor
inc
pop
ds
add
jae
pop
fidivrs
lds
mov
or
lret
sarb
ret
imul
inc
data16
jmp
add
je
push
pop
xchg
xor
sbb
jns
lds
movsl
int
orl
lock
test
je
in
inc
sbb
dec
stos
shr
sbb
insb
insb
out
xor
mov
dec
push
mov
stos
aas
add
add
orb
popf
arpl
mov
inc
insb
bound
stos
lea
lea
inc
dec
cmpsb
mov
adc
dec
push
jo
das
jg
stc
mov
stos
push
pop
push
jl
and
mov
sahf
es
push
pop
rorb
fcmovnu
and
mov
roll
mov
test
push
sub
pop
data16
push
stos
inc
jge
ret
sub
mov
mov
out
push
xor
aas
inc
cli
adc
sub
loopne
scas
dec
call
add
cmp
mov
cmp
ret
sub
dec
push
inc
mov
mov
or
add
insl
xchg
jmp
pop
into
bound
xchg
jge
shll
inc
push
stos
bound
hlt
mov
mov
mov
aam
xchg
jecxz
fs
leave
xor
sti
inc
add
inc
in
loopne
lods
mov
add
leave
or
xchg
outsl
push
addr16
sarl
xchg
pop
clc
ljmp
or
sub
sbb
add
xchg
fcomi
mov
mov
mov
aam
adc
aas
bound
lahf
ljmp
push
call
pop
push
mov
out
ljmp
add
out
fwait
add
mov
test
loope
pop
aas
popa
jns
inc
pop
jno
dec
cs
flds
imull
sbb
ror
inc
jle
test
xlat
imul
lods
js
sbb
mov
and
jmp
out
ja
aad
sub
adc
or
lcall
das
addr16
push
ss
lcall
ficomps
pcmpeqw
jle
incl
sbb
cltd
fucomp
mov
out
xor
arpl
add
out
adc
cmpsl
notb
leave
or
xchg
std
lret
mov
imull
shr
lock
in
in
push
jge
jecxz
leave
fsubr
ficoms
mul
mov
and
lods
dec
stos
imul
int3
adc
lock
mov
iret
cmp
sbb
push
add
mov
in
cwtl
mov
or
bnd
aad
xchg
and
popf
inc
push
rolb
adc
aas
cli
fmul
bnd
adc
mov
out
cmpsb
cmp
jbe
add
bound
xchg
cltd
xlat
or
test
xorl
push
mov
icebp
xor
inc
mov
xchg
jmp
jg
cmp
mov
mov
xchg
pop
or
fbstp
cmp
mov
dec
decb
adc
cmp
dec
insb
inc
dec
pop
in
sti
sbb
pop
or
inc
rcr
push
cld
adc
mov
imul
mov
jl
xchg
cli
inc
and
cwtl
add
mov
cltd
mov
xor
cmc
adc
scas
aaa
or
mov
ljmp
or
or
lcall
mov
push
js
inc
scas
arpl
shufps
popf
mov
jmp
cmpsl
addr16
mov
pop
sbb
mov
adc
leave
fcoms
rcr
xchg
mov
jl
jge
mov
mov
out
jb
mov
mov
imul
push
scas
fiadds
mov
in
jecxz
bound
mov
add
inc
loope,pt
pop
icebp
fcomp
lret
xchg
xor
fdivs
shlb
dec
int
shl
outsl
lock
ljmp
or
mov
xorb
sarb
push
add
subb
aas
lcall
cmpsb
cmc
lds
xor
xchg
loopne
hlt
adc
inc
int
push
adc
sahf
jmp
add
inc
inc
lea
test
js
mov
pop
repnz
add
rcr
adc
dec
push
sbb
test
test
nop
or
jmp
adc
xor
fldt
popa
and
es
xchg
enter
in
test
inc
ljmp
pop
and
push
lret
mov
dec
sbbl
jns
xor
jnp
jge
insb
clc
push
inc
pop
lds
xchg
hlt
cmc
and
aad
pop
repz
sub
sbb
arpl
add
dec
jnp
pop
arpl
test
jl
xchg
ljmp
test
scas
pushw
xor
mov
mov
mov
imul
stos
and
push
push
negb
sbb
aad
scas
cmpsb
bound
rcll
jno
insb
test
bound
rcll
adc
insb
mov
push
inc
loopne
into
jl
mov
xchg
adc
inc
test
iret
int3
dec
into
pop
dec
movsl
push
xchg
push
jl
or
gs
sub
das
xchg
pop
in
mov
and
and
clc
dec
test
js
dec
nop
jnp
inc
sahf
dec
and
push
movb
push
scas
dec
pop
dec
out
movsl
lea
jecxz
addr16
mov
mov
xchg
lock
xchg
sbb
add
or
pop
rcrl
cmp
xchg
lods
stc
in
pushl
mov
scas
shll
jl
mov
jno
testb
or
cmp
test
lods
enter
rcll
xchg
sbb
mov
stos
dec
js
mov
jae
ret
out
sub
inc
out
sub
popf
lcall
divl
inc
sub
mov
rcrb
rclb
loope
sbb
nop
jge
mov
scas
stc
fmull
aad
jbe
dec
dec
je
inc
xchg
icebp
xchg
sub
sbb
dec
iret
sub
fs
push
test
push
push
cli
imul
fwait
cmp
xor
sbb
xor
in
xchg
xchg
aas
lods
push
shl
sub
sahf
icebp
ret
ret
push
mov
in
sub
mov
es
adc
pop
pop
add
adc
xor
call
mov
popf
stos
fsubrs
adc
push
mov
pusha
les
mov
aas
xor
dec
ficoml
sbbl
decl
inc
in
inc
inc
adc
sti
sub
xor
fidivl
push
pusha
xlat
hlt
lret
fidivs
in
adc
ret
pop
adc
addb
imul
mov
cmp
mov
pop
outsl
adc
jmp
mov
out
push
sbb
pop
inc
jg
repnz
fisttpl
add
xchg
push
pop
es
inc
pop
inc
in
add
jl
lcall
pop
popf
mov
enter
out
mov
movsb
lahf
mov
pop
insl
push
aas
dec
inc
cmpsl
xor
mov
sub
adc
pop
popa
mov
sub
xor
fwait
and
jg
cmpsl
and
jp
inc
xchg
bound
and
adcb
inc
iret
xchg
in
stc
jno
movsl
inc
mov
and
mov
cmpsl
cmp
insl
push
cmp
or
jno
nop
adc
inc
dec
pop
fnsave
out
int3
pop
out
sbb
pop
movsl
adc
ljmp
scas
jno
sub
lods
xchg
cmp
jle
sbb
out
mov
shr
xor
shl
hlt
jno
in
insb
inc
jbe
xor
mov
rep
jl
add
xor
push
addr16
push
mov
popf
push
std
aaa
addr16
lods
pop
jns
add
sbb
mov
xchg
sbb
fnsave
jmp
int3
sarl
dec
in
imul
xchg
outsb
ja
ljmp
add
or
pop
push
xchg
mov
nop
sarb
add
mov
xor
cmp
jae
and
pop
sbb
imul
stc
jb
fs
test
aam
push
inc
add
lods
xchg
stc
xchg
shl
daa
lahf
lds
add
add
push
dec
insl
andl
hlt
aam
in
test
pop
cmp
hlt
jmp
movsb
lods
in
add
pop
push
in
mov
add
xlat
xchg
sbb
sub
xchg
xorl
popf
stos
and
mov
insb
es
dec
dec
pop
xor
mov
addb
fnsave
xor
imul
inc
aam
into
add
mov
push
pop
cmp
xchg
pop
in
push
out
int3
mov
test
je
jmp
pop
stc
cmp
loope
push
xor
cmp
mov
or
cmp
pop
and
xor
lods
mov
inc
addl
icebp
add
xchg
adc
cmc
sbb
shrl
xor
movsl
pusha
enter
pop
rorb
dec
and
inc
ds
in
aaa
jl
stos
push
pop
sbb
and
sub
neg
or
xchg
cmp
xchg
or
jecxz
fistpl
jg
cmp
lret
sbb
push
mov
pop
adc
fxch
out
out
jge
pop
lea
xor
push
pop
data16
idivb
lock
lret
mov
jp
sbb
repnz
dec
dec
fmul
mov
repz
cmp
mov
rcl
or
mov
push
imulb
jne
sahf
outsb
icebp
shr
dec
int
fisubs
sub
push
adc
mov
nop
lods
dec
mov
subl
es
jp
imul
adc
fsubrs
xchg
vpunpckhqdq
add
out
insb
xor
push
shl
arpl
cmpb
jae
in
sbb
arpl
adc
lods
ds
insb
iret
dec
inc
sbb
ret
jmp
xorb
rol
loopne
mov
scas
repz
inc
popl
mov
fisubs
jecxz
mov
cmp
scas
lock
ss
sbb
jl
shll
push
adc
xchg
add
mov
daa
imul
ret
mov
out
scas
inc
push
xor
fdiv
jle,pn
aas
push
in
cmp
jne
or
pop
jg
xor
adc
adc
stos
outsb
or
lret
bound
push
dec
outsl
xor
out
push
push
gs
les
daa
sbb
outsl
jmp
shrl
and
rcl
xchg
xchg
lea
shrl
mov
add
push
daa
adc
lods
repnz
js
stos
shrl
inc
or
dec
sahf
stos
xchg
mov
jo
mov
movsb
xchg
push
jb
push
arpl
rcrl
insb
lret
ror
dec
sub
je
jb
popf
jnp
mov
or
mov
mov
out
jno
mov
xchg
addr16
xlat
jnp
out
add
mov
jno
cmpsb
pusha
iret
fbld
mov
cmpsb
lret
mov
pop
scas
scas
sbb
or
shl
add
cmpsb
and
fyl2x
dec
pushf
bound
mov
jecxz
pushf
mov
shlb
test
or
scas
std
andl
filds
lret
out
mov
test
in
outsb
sub
and
xor
mov
sbb
fldcw
jno
cli
xchg
jmp
or
cli
xchg
push
push
movsb
fbstp
xor
push
lds
movsb
inc
mov
pop
popfw
cmp
pop
xor
mov
jl
lea
or
lock
lea
sbb
jae
cmp
mov
add
xchg
cmp
out
shlb
sub
mov
push
or
icebp
inc
shll
dec
popa
push
jmp
fs
jmp
pop
sub
inc
xor
adc
rcr
jns
stos
jne
or
mov
inc
cmp
add
leave
scas
add
data16
sbb
aaa
lahf
xor
imul
and
xor
pushf
fstp
xchg
daa
add
sub
in
sbbb
ss
fwait
add
ret
outsl
in
cwtl
cmp
sbb
inc
repz
xor
inc
push
loop,pt
adc
fucomip
jle
mov
sbb
mov
icebp
lea
int3
iret
lods
push
xchg
nop
pop
loopne
addb
cmp
ds
js
loope
push
test
imul
inc
and
xor
mov
push
pop
push
sahf
popf
add
mov
or
das
inc
xchg
push
test
out
xchg
outsb
shl
les
add
pop
addr16
iret
sbb
rclb
mov
ret
jge
dec
mov
add
mov
mov
mov
pop
dec
push
scas
lods
push
mov
sub
fmuls
dec
or
pop
out
ja
push
add
das
rol
and
inc
lret
es
les
scas
pop
or
pop
sarl
sbb
inc
push
sahf
fwait
hlt
inc
sub
xchg
out
and
std
and
bound
cli
cs
sbb
xchg
adc
icebp
xchg
rorl
into
xchg
sub
sub
add
pop
inc
cwtl
in
sbb
adc
adc
ljmp
shll
imul
rol
int3
inc
mov
sub
adc
mov
mov
or
enter
fmulp
aad
pop
pop
mov
adc
add
sbbl
lods
jmp
push
movsl
xchg
jecxz
push
stc
push
adc
inc
mov
insb
in
xchg
aas
pushf
stc
mov
adc
int3
push
adc
pop
leave
pop
outsb
push
cmp
xchg
mov
jmp
stos
or
incb
fwait
pop
and
out
leave
lret
out
jns
bound
mov
xor
sub
mov
pop
hlt
in
cwtl
pop
es
xor
xchg
bound
mov
je
loop
jns
mov
and
dec
push
ja
inc
iret
push
fcoml
incl
in
push
adc
adc
push
hlt
aad
push
clc
ljmp
cmpsl
hlt
mov
or
outsb
mov
ss
jo
adc
aaa
dec
les
jbe
icebp
outsl
and
xchg
pop
adc
sbb
xchg
cmp
iret
xorb
sbb
jle
ss
shrl
aad
movsl
mov
movsl
dec
daa
outsl
adc
das
movsl
insl
outsl
int
mull
insb
outsl
mov
pop
mov
ret
xor
mov
mov
ds
inc
cmpsl
ss
push
jb
std
mov
push
xchg
sbb
pop
insl
xlat
pusha
add
xchg
test
and
mov
jmp
push
push
ds
out
mov
mov
jecxz
xchg
lretw
and
outsb
sub
mov
jge
scas
adc
insb
negb
inc
ja
sti
jg
adc
adcl
mov
in
dec
xor
in
push
mov
sub
mov
cs
addr16
nop
cltd
es
dec
je
pop
cmpsl
lcallw
or
imul
xchg
pop
xchg
enter
pop
sub
adc
sahf
lock
mov
lret
pop
bndldx
in
setb
insb
data16
fndisi(8087
or
data16
aas
mov
stos
cs
es
or
icebp
xor
push
and
out
mov
in
sarb
push
popl
or
dec
fs
fisubl
insl
sub
xor
punpckhdq
adcb
mov
add
jmp
push
cmc
xor
icebp
xlat
sahf
in
inc
test
add
dec
or
xchg
loope
ficoms
xchg
add
add
testb
adc
pushf
cmp
inc
loopne
xlat
jle
lock
insl
jl
cwtl
std
jmp
or
jmp
repnz
mov
push
inc
pop
repnz
and
fstpl
hlt
in
mov
data16
mov
mov
das
jecxz
rclb
in
cs
ss
push
mov
lods
xchg
fldt
add
rcr
inc
mov
jne
mov
stc
mov
pop
xlat
mov
jge
inc
imul
stos
popf
mov
pusha
or
adc
hlt
insl
pop
dec
aam
aaa
mov
sar
or
inc
sti
mov
sbb
sbb
xlat
mov
addl
mov
daa
sub
sub
or
loop
ljmp
scas
xor
adc
push
mov
rep
jecxz
mov
ja
pusha
push
jne
addr16
loope
movsl
je
mov
jg
mov
xchg
inc
mov
outsl
sbb
cmc
daa
or
imul
aaa
cmp
add
mov
and
shrl
mov
std
shrl
stos
add
test
add
xorl
xor
fimuls
mov
add
adc
cwtl
daa
movsl
mov
mov
sbb
cmpxchg
test
out
and
enter
xor
jecxz
imul
scas
rcr
mov
int
mov
xchg
add
test
jae,pt
xlat
nop
xchg
pop
xchg
clc
mov
jp
mov
mov
sbb
enter
rorl
arpl
mov
push
cmp
adc
movsb
cmp
sbb
repz
stos
push
call
test
pushf
out
ja
pop
xchg
adc
mov
push
stos
iret
xchg
cmp
cmc
cmp
inc
inc
mov
pop
adc
sbb
jnp
sbb
sbb
xor
jns
pop
insb
gs
cmpsb
mov
flds
push
cld
pop
jg
mov
push
int3
jno
cld
or
xor
loopne
push
out
inc
cld
test
fs
pop
test
inc
adc
insl
test
dec
fdivp
iret
and
dec
insb
ja
or
and
dec
mov
mov
lds
and
push
push
xchg
in
jmp
mov
das
ljmp
stos
inc
mov
add
xor
jbe
jo
stos
stc
pop
or
adc
ljmp
int
and
repnz
mov
mov
bound
mov
or
andb
jmp
call
xor
pop
add
iret
pop
sub
sbb
xchg
mov
mov
mov
pop
jns
ds
addr16
jle
or
jno
in
push
pushf
mov
loope
push
inc
out
xchg
and
jns
or
lods
lret
sti
or
lea
pop
js
shll
mov
mov
mov
lock
je
int3
add
xor
mov
es
dec
sub
mov
repz
dec
cmp
setp
xchg
fwait
xor
xchg
jno
sbb
mov
mov
and
jp
pop
ficoms
push
mov
adcl
mov
fstps
jmp
xor
adc
inc
shl
xorb
data16
cmp
mov
or
daa
lock
adc
outsl
arpl
adc
sbb
mov
jl
add
jnp
out
and
add
jecxz
jno
jne
jle
or
sub
imul
jle
and
scas
dec
mov
testl
aas
popa
or
adc
lods
sti
mov
dec
aas
dec
cmpsl
mov
sbb
push
pop
scas
popa
pop
mov
mov
lea
push
andb
pusha
sbb
or
lcall
and
jb
pop
cmp
gs
stos
or
fidivrs
sbb
inc
mov
popa
shrb
jae
inc
mov
push
inc
ss
js
cmp
outsb
add
lcall
sarb
bound
gs
insl
out
push
sub
mov
ss
fisttps
movsl
movsb
mov
jl
cs
cld
in
mov
mov
mov
popf
and
sub
das
or
cmp
cltd
test
add
mov
pop
sub
jns
scas
out
xorl
xor
lahf
cmc
arpl
ret
icebp
xchg
push
int
repz
test
stos
shll
leave
out
sbb
mov
xchg
insl
inc
jmp
imul
jno
push
add
jecxz
icebp
iret
push
or
sub
sbb
repz
fcmovne
jp
data16
adc
shrb
rorb
lret
test
pop
inc
or
mov
mov
in
jecxz
in
sub
cwtl
shll
loope
int3
push
faddl
xchg
pop
fnstenv
mov
pushf
push
xor
cmp
fdiv
js
test
rcl
in
je
xchg
insl
push
fsubs
mov
mov
mov
xor
in
mov
inc
es
inc
fistpl
cmp
mov
test
test
sbb
lcall
iret
mov
out
and
fs
pop
sar
adc
sub
cmp
aad
jb
ss
xor
cmp
mov
push
emms
stos
outsb
test
lds
fistl
mov
nop
xlat
outsl
inc
lcall
or
out
inc
pushw
xchg
add
mov
xchg
sub
cld
fwait
cltd
lock
dec
jl
jp
inc
cltd
dec
nop
mov
mov
xchg
repnz
xlat
dec
add
push
ret
imul
shll
adc
out
loope
cmc
inc
dec
pusha
add
xor
and
test
into
pop
inc
lret
sbb
push
inc
dec
aaa
and
rclb
movsb
fcmovnbe
repz
jge
or
xlat
jae
mov
ret
sbb
cmc
adc
cmpb
inc
fstpl
push
outsb
or
sub
xchg
int
cmpsl
repz
or
jge
inc
incl
sub
pop
sub
leave
push
aas
pushf
in
and
popf
pushf
push
dec
pop
or
dec
fiadds
or
jno
lock
sbb
push
inc
lods
mov
push
stos
pop
or
adc
mov
xor
mov
mov
inc
mov
xchg
jbe
inc
nop
movsb
stc
imull
pop
out
add
pushf
push
xor
inc
pop
mov
xor
mov
cmp
ljmp
repnz
and
outsl
add
pop
mov
adcb
add
fists
xchg
or
daa
clc
push
aas
into
xchg
insl
xchg
jne
jns
pusha
mov
jmp
jp
outsl
out
pop
scas
add
xor
pushf
outsb
sub
stc
sub
sub
dec
dec
lock
loop
mov
and
mov
push
es
cwtl
addr16
incl
lahf
rcr
adc
or
enter
in
xchg
cmpsl
lcall
sbb
aam
cli
cltd
cmpsl
dec
sbb
jne
xchg
jmp
jge
ja
dec
push
xchg
stos
dec
mov
out
mov
push
orb
int3
stos
xchg
scas
insl
xchg
add
sbb
add
testl
out
stos
dec
rorl
xor
icebp
xor
inc
gs
sub
test
cli
dec
push
jl
xorb
cmp
arpl
mov
mov
mov
aas
call
rclb
push
out
cmpsl
cmp
sbb
jmp
lods
jo
push
and
jecxz
adc
stos
addl
dec
pop
into
movsb
xchg
jg
cmpb
lea
dec
mov
lretw
inc
sub
pop
pop
out
and
jp
jo
scas
bound
fldenv
out
lds
xchg
sbb
fcoml
jecxz
push
dec
mov
lock
fidivs
sub
sbb
push
fadd
inc
xor
dec
cmpsl
adc
aam
aas
stos
cmp
mov
arpl
fdivl
out
sbb
inc
adc
int3
fldenv
lea
ds
and
adc
and
clc
add
repnz
cmp
cmp
push
dec
enter
jno
dec
arpl
add
push
bound
adc
push
ja
mov
ja
add
popf
sbb
mov
inc
fstpl
shll
sti
xorb
pop
shlb
lods
test
push
mov
ss
jg
movsb
loop
and
push
pop
cmp
jge
xchg
cltd
ja
push
lret
mov
movsl
jae
out
pushf
pushf
adcb
mov
rcl
cltd
xchg
sub
mov
mov
inc
cltd
mov
push
test
aad
sbb
fbstp
xor
fldenv
and
aam
popf
jno
mov
xlat
mov
outsl
xchg
movsb
push
mov
cmpl
in
push
add
pop
fidivrs
aas
push
add
iret
shll
add
cmp
repz
adc
fwait
mov
mov
scas
ljmp
sbb
nop
fstpl
call
pusha
inc
or
push
loop
cmc
hlt
out
adc
sbb
dec
mov
inc
adc
and
add
pop
shll
clc
and
lods
mov
cmc
mov
jle
xchg
xchg
dec
mov
xchg
sub
mov
xor
in
sarb
add
test
cltd
stos
fcmove
sbbl
pop
jge
pmaxsw
and
inc
xchg
in
sahf
xchg
xchg
bound
int3
or
add
push
mov
xor
sti
adc
cld
ret
push
scas
call
sbb
les
dec
mov
push
jo
or
cmp
popf
inc
inc
mov
mov
test
mov
dec
testl
mov
sbb
and
lcall
in
addl
stos
fildll
lods
leave
inc
pushf
adc
sbb
fs
mov
in
scas
sub
sub
xor
pop
pop
gs
in
mov
mov
push
pop
fs
or
stos
pop
loop
sub
mov
rcl
cmp
sbb
ss
sbb
daa
cs
js
push
test
ror
sbb
xchg
scas
mov
mov
mov
jns
into
sbbb
ret
xor
imul
mov
daa
clc
je
cmpsb
push
lock
and
testl
imul
lock
jg
push
int3
mov
lcall
fdivs
and
mov
adc
push
aam
push
sub
int
dec
sub
sbb
or
stos
outsb
les
cmc
and
out
imul
mov
insl
xchg
sub
rcl
xor
jp
xchg
xlat
ret
scas
cmp
push
add
sbb
or
cmp
stos
and
aaa
fsts
mov
sub
insb
mov
aaa
shrb
mov
cmp
inc
xor
mull
das
ret
adc
mov
cld
cmp
icebp
je
addl
loop
xorl
pop
outsb
mov
out
nop
sub
mov
jae
je
fs
and
jns
stos
add
jmp
fsubr
lcall
add
fs
in
inc
add
fsubrs
and
cmpsb
hlt
pop
xchg
push
bound
cltd
cmp
push
cmp
dec
mov
mov
pusha
jl
fisubrs
sub
in
lcall
cmc
add
sbb
mov
cwtl
out
movsb
icebp
int
icebp
pusha
mov
fwait
inc
fadds
cli
xchg
sub
sub
es
inc
xchg
cmp
insl
idivl
pop
xorl
add
add
insl
lods
xor
std
push
nop
icebp
fidivl
xchg
rorl
sbb
push
xor
test
cli
call
repz
push
mov
dec
aam
dec
sahf
cmpsl
add
rcll
push
out
xchg
addb
sbb
lret
mov
int
mov
idivl
into
ret
shrb
push
popf
jge
adc
stc
cmp
or
mov
inc
pop
cmpsl
lret
and
dec
inc
fdivrs
popa
in
jns
in
mov
pusha
ret
rorb
push
xchg
xchg
push
popa
inc
dec
test
dec
sub
out
scas
xchg
pop
inc
stc
or
les
dec
fs
pop
enter
add
daa
pop
mov
push
cld
int3
jns
mov
push
add
call
fcmovnbe
push
mov
jb
adc
cmp
es
and
or
add
loopne
xchg
dec
mov
mov
mov
out
out
ret
or
cli
repnz
push
es
pop
jmp
fistps
ret
outsl
jecxz
outsl
test
xchg
scas
mov
xor
push
cmp
mov
test
and
xor
cmp
xchg
jbe
bound
dec
adc
push
hlt
mov
stc
sbb
jbe
or
scas
arpl
and
in
inc
cmp
pop
jle
mov
or
cmp
jp
inc
or
cmp
popa
sbb
cli
xorb
push
and
jno
cmc
imul
add
stos
das
pop
pop
sbb
test
nop
ret
loopne
push
es
inc
jp
cmp
popf
push
sahf
xchg
cmpsl
mov
test
fnstsw
mov
fdivs
pop
shlb
inc
out
mov
andb
sub
xchg
in
and
aas
popa
aam
lds
mov
stos
popa
into
faddp
and
and
jecxz
es
jmp
iret
cmc
xor
cmp
push
cmp
shlb
and
jo
jle
adc
out
pop
fistl
mov
ja
jmp
jg
pushf
out
inc
cli
jl
cmp
fbstp
jnp
jg
sbb
sub
insb
cmp
fsub
ficoms
and
sahf
in
inc
mov
xor
ret
jno
flds
dec
outsb
dec
roll
loop
into
popf
adc
ja
ja
mov
mov
xchg
packsswb
dec
in
dec
jge
ret
dec
pop
out
cmpsb
sbb
mov
sub
or
push
out
fisubs
cmp
adcl
ss
lea
xchg
dec
lret
pusha
or
orl
push
mov
cmpsb
out
outsb
or
push
in
pop
daa
cmpsl
mov
mov
jno
xor
aad
andb
cmpb
mov
cmp
dec
aaa
push
mov
mov
jbe
fisubrl
pop
or
mov
push
orl
decl
fldl
cmc
int3
or
or
xchg
dec
nop
and
fcoml
mov
popf
mov
xor
sbb
jecxz
cli
lds
sbb
lret
daa
stos
sub
xor
shl
popa
jae
mov
sbb
mov
push
cmp
int3
add
cmpsb
cmp
clc
ljmp
push
dec
dec
imul
mov
iret
leave
mov
cld
dec
outsb
push
loop
dec
fsubrl
sub
sti
sti
or
mov
sbb
stos
pop
test
mov
add
leave
inc
dec
and
push
es
cmc
aad
into
cmc
ret
out
mov
xchg
mov
jno
popf
lcall
fsubrs
cltd
pop
cmp
scas
ret
and
cmp
and
data16
push
addr16
fmuls
arpl
movsb
or
into
call
jo
and
cltd
mov
dec
sti
ja
jmp
ds
push
sar
cmp
sub
ja
cli
jno
pop
jge
popa
movsl
out
int
cltd
adc
dec
cmp
sbb
pop
aas
cmpsb
or
arpl
sbb
pusha
lea
push
insl
mov
fs
js
lcall
or
fcompl
push
jp
jbe
or
js,pt
adc
arpl
in
pusha
mov
jecxz
pop
and
jmp
and
lds
ss
cs
mov
fstpl
por
test
sahf
xor
add
push
aas
pop
jns
sub
mov
xchg
fsub
mov
and
sbb
mov
jp
xchg
jle
push
sarl
repz
and
outsb
cs
cmpl
mov
fadd
jb
fcos
repz
leave
mov
jp
inc
popf
mov
lcall
and
push
xorl
cmp
rorb
xlat
sbb
mov
cmc
mov
sub
jnp
xchg
sbb
out
inc
dec
pop
mov
cmp
mov
pop
fs
or
jnp
pusha
das
push
inc
js
das
jl
les
xchg
ds
mov
mov
andl
lret
xor
fwait
adc
lea
xchg
ret
inc
mov
js
cmp
dec
lahf
cmp
xchg
or
jne
push
mov
mov
mov
fadds
sub
mov
insb
outsl
imul
push
addr16
cmc
imul
jge
cmp
adc
dec
sub
pop
pop
jmp
sub
sub
rcrb
mov
nop
push
lods
jmp
scas
iret
shlb
cmpsl
popf
sub
push
dec
sub
and
jo
fwait
adc
or
pop
lcall
gs
aad
dec
in
rcr
pop
in
mov
not
rdmsr
out
xor
jecxz
lds
mov
les
xor
repnz
js
inc
push
popa
pop
and
pushf
adc
in
notb
mov
fisubrl
push
shl
sahf
lcall
int
out
inc
lcall
cmp
paddusb
in
and
jnp
cmp
jle
mov
jns
mov
sbb
push
out
xchg
jae
inc
jp
xlat
push
inc
sahf
les
out
sub
push
daa
xor
mov
mov
mov
mov
or
dec
movsl
jp
imull
dec
das
add
sub
repnz
mov
outsl
enter
cmp
add
cmp
pop
sbb
daa
adc
in
xchg
inc
jbe
lea
sub
hlt
negl
mov
push
ja
lds
into
popf
pop
popf
jne
das
sub
dec
adc
insb
or
pop
and
stos
fistpll
jnp
sbb
xor
inc
std
sti
or
xchg
mov
lret
jle
cwtl
cmpsl
rol
lds
mov
xchg
or
imul
jae
inc
xorl
xlat
push
mov
mov
rclb
mov
cmp
ror
movb
xor
add
repz
mov
dec
popf
fst
mov
js
bnd
roll
adc
mov
dec
js
aas
icebp
or
jge
scas
push
mov
pop
pop
adc
in
and
xchg
sbb
ret
jmp
cmc
leave
cmc
fisubl
dec
and
pop
xchg
pop
les
sub
dec
out
ret
mov
repnz
addl
push
out
call
orb
sbb
sub
xor
or
jo
xchg
dec
xchg
fadd
fstps
push
xchg
mov
orl
inc
push
ds
jp
or
das
aas
insl
cmc
ds
inc
lods
add
mov
xchg
adc
movsb
cmp
or
jae
adc
orb
ret
mov
ljmp
insb
add
sub
in
pop
arpl
push
js
adc
clc
ss
pop
mov
mov
loop
je
out
gs
jae
jp
cwtl
cmp
scas
jg
adc
fistl
out
pop
sbbl
data16
and
pop
lds
jmp
or
cmp
fists
rorl
and
adc
lret
sbb
add
out
stos
out
inc
loope
sbbb
mov
fbld
mov
adc
add
push
movsl
sbb
lock
pop
shrb
and
loopne
repz
dec
fiaddl
push
jo
clc
sub
add
sarl
mov
cmp
popf
cmpsl
stc
cmpsl
push
pop
push
jmp
jecxz
pop
aas
push
int
cltd
sub
push
inc
stos
mov
or
push
xchg
jg
or
or
add
pusha
sahf
mul
fstl
jo
lds
adc
aas
xor
cld
sbb
popa
insb
mov
out
add
mov
mov
int3
push
popf
loope
test
pop
aam
jmp
mov
test
ds
pop
jle
ja
inc
inc
push
daa
and
cmp
sbb
xchg
push
repnz
cmp
pop
out
adc
or
adc
fnstenv
sub
sub
xor
jle
jecxz
and
push
icebp
aam
pop
data16
ret
sub
xchg
add
inc
add
pop
sets
and
push
pop
cmc
adc
sbb
dec
not
xor
fsts
jp
sahf
cmp
inc
pushl
icebp
and
jle
mov
dec
fcoms
sbb
fcmovnu
mov
imul
lea
xchg
sbb
mov
add
es
add
pop
adc
inc
push
int
lea
cmp
imull
xor
push
ficoml
movsl
mov
add
iret
fsubr
jmp
dec
add
sbb
dec
mov
ss
mov
ret
imul
inc
and
jae
les
xor
xor
jmp
dec
pusha
push
dec
sub
or
in
sar
pusha
hlt
push
and
jns
pop
and
and
andl
mov
mov
mov
ret
pop
lods
jmp
cmpsb
in
ss
cltd
scas
cmove
ja
xor
lock
scas
adc
mov
imul
mov
mov
test
out
cmp
xorl
fucom
mov
mov
cmpl
sub
sub
iret
test
mov
sbbl
mov
sub
andl
fs
add
mov
push
mov
mov
sarb
inc
flds
mov
sbb
push
dec
imul
add
std
add
fistps
add
cltd
xchg
inc
mov
push
pop
ja
xorl
lcall
pop
push
jmp
sbb
sbb
or
out
adc
mov
test
xchg
cmp
cmpsl
outsb
lods
fstl
outsl
leave
imul
sahf
and
push
das
sti
xchg
jnp
pop
cmp
mov
sbb
or
lret
push
dec
insb
iret
add
cwtl
popf
arpl
sbb
pusha
sbb
insl
outsb
mov
jo
icebp
jnp
imul
sarl
jo
mov
sbb
mov
push
je
repz
out
xor
rcl
mov
mov
das
or
cld
stos
xor
test
and
frstor
int
dec
hlt
jnp
cmpsl
xor
push
adc
mov
xchg
cmp
hlt
sbb
mov
test
or
xchg
jb
daa
int
mov
stos
add
cmp
jbe
das
xchg
push
cmp
test
stc
mov
ss
cmpsb
fwait
pop
mov
int
jne
ret
adc
std
push
sub
xor
dec
sub
lea
mov
cmp
cltd
mov
inc
mov
das
shrb
mov
xchg
cmp
lock
int3
pop
mov
sub
test
lahf
insl
lds
pop
mov
dec
into
push
jecxz
test
rol
cmc
int
and
int
pop
inc
xor
test
imul
daa
pop
ds
mov
pusha
jbe
sti
cmp
push
test
sub
jmp
add
in
jl
mov
pop
hlt
or
lret
push
adc
sbb
mov
mov
mov
jnp
cltd
xchg
int3
pavgb
arpl
cmp
lret
inc
jb
in
lcall
pop
pop
fst
int3
jns
mov
fidivrl
cld
adc
mov
sbb
scas
movnti
pop
pop
into
cmp
js
dec
push
imul
cmpsl
pop
sbb
out
out
mov
adc
pushf
std
pop
xor
push
pop
mov
icebp
aam
imulb
dec
jl
sbb
xor
rorb
insb
enter
movsl
cli
es
or
sbb
dec
stos
lds
fdiv
test
dec
ljmp
sub
aas
js
out
mov
gs
mov
int3
pop
faddp
dec
cwtl
stc
rclb
enter
mov
jle
jne
jae
bound
push
jo
cmpsl
jno
xchg
sbb
mov
mov
mov
pop
cmpsl
pop
insb
sbb
xchg
and
scas
sub
and
pop
addr16
xchg
imul
imul
pop
les
mov
pop
das
shrb
lret
sbbb
jnp
adc
inc
not
outsb
and
xchg
aas
xchg
xor
cmpsl
sbb
dec
clc
mov
inc
insl
add
push
sbb
loopne
xor
xorl
lahf
push
xor
xchg
fxch
adc
das
cmpsl
js
fnstsw
xcrypt-ecb
cmpsl
dec
lock
scas
shr
mov
add
cmp
adc
mov
stos
cmp
mov
push
nop
inc
adc
out
je
aas
cmc
dec
inc
arpl
bound
rolb
mov
imul
aas
pop
js
dec
in
arpl
and
repz
pusha
adc
fsubrl
mov
shr
sbb
in
push
xor
and
iret
mov
aad
movsb
leave
sub
xlat
stos
int
sub
jo
arpl
mov
jmp
mov
cmpsl
movsl
push
sbb
push
adc
push
sub
aas
vmaxsd
imul
xchg
test
sbb
cmpsb
or
pop
pop
add
ret
in
test
xchg
out
pop
stos
pusha
shl
mov
inc
test
imul
mov
push
adc
adc
or
cmp
cmpsb
je
es
movsl
mov
xor
loope
adc
loopne
inc
cmp
adc
mov
mov
push
out
pop
ja
outsl
xor
xchg
push
mov
bound
and
mov
mov
push
add
test
es
xchg
imul
incl
xchg
jns
test
in
xchg
stos
jbe
xor
es
in
mov
mov
aad
fmull
pop
mov
cmp
cmp
incl
ret
sub
hlt
lea
arpl
in
dec
xor
add
lds
pop
repnz
push
inc
and
int
loopne
out
das
mov
inc
pop
jb
or
dec
imul
fiaddl
mov
stos
sti
mov
fst
movsb
cmp
xor
rclb
dec
lcall
inc
mov
sbb
and
sahf
jno
mov
push
sbb
int3
push
xadd
daa
inc
push
mov
adc
xchg
push
and
pop
add
in
sbbl
add
cmp
push
adc
testl
fidivrl
es
xchg
jle
ljmp
jge
push
test
lcall
ret
push
dec
pop
add
sbb
or
arpl
popa
mov
lock
mov
daa
fnsave
movsl
and
and
test
sub
call
cmp
fs
daa
jae
ja
repz
in
jmp
cmc
jg
nop
arpl
scas
into
jle
mov
mov
nop
test
inc
imul
pop
icebp
xchg
pop
sahf
push
andl
mov
xchg
in
data16
xor
adc
xchg
ret
sbbl
in
sbb
pop
fdivrp
lock
xchg
fucom
mov
in
jno
mov
sbb
pop
in
iret
jg
xchg
add
out
in
shr
push
push
cmp
pop
xor
cmp
sbb
popa
scas
sub
adc
add
jmp
push
dec
mov
mov
fstps
sub
out
mov
mov
test
sbb
movsb
dec
insl
push
mov
xlat
add
dec
adc
cmp
fidivrl
mov
add
cmc
mov
adc
test
pop
pop
fiadds
cmpsl
rcrb
loop
push
xor
test
notb
orb
fildl
jns
fyl2xp1
loope
je
push
cltd
adc
or
or
js
sahf
stos
pop
addl
dec
imul
mov
into
lods
xor
inc
adc
and
js
pop
test
rcl
xchg
movsl
or
pop
sub
aad
push
lods
jo
out
mov
jbe
push
xchg
and
clc
rol
mov
or
loopne
dec
or
shl
test
scas
lret
lea
sti
out
mov
push
aam
inc
sbb
popa
popl
lea
rcrl
lods
movsb
jo
movntq
jge
adc
pop
das
into
int
pop
scas
dec
rcrb
pop
mov
ljmp
sti
push
seto
mov
lea
movb
scas
jge
bound
stos
xor
dec
das
fmuls
adc
ja
push
jle
fs
dec
out
jb
insb
push
aad
mov
pop
lahf
sahf
dec
dec
jmp
sub
jns
ljmp
xchg
repz
iret
jae
sbb
outsl
inc
mov
mov
fisubs
test
adc
enter
xchg
outsb
jge
pop
push
in
or
xor
in
sbb
insl
jae
jns
inc
ss
mov
ja
mov
daa
sahf
lahf
aaa
aam
add
sbb
iret
out
orb
jmp
cli
add
ja
push
mov
into
inc
in
je
jbe
mov
daa
daa
push
cmpb
popa
aad
outsb
fiadds
cmp
ljmp
mov
adc
dec
ljmp
jl
xchg
ds
push
leave
or
cmp
xorb
xchg
or
sub
es
pop
and
fisubs
jmp
mov
mov
xchg
pop
add
out
ss
cli
js
cmpsl
leave
in
fwait
clc
cli
xchg
adc
nop
xchg
jae
push
pop
sbb
outsl
ja
int3
adc
mov
xor
loopne
cs
mov
push
add
mov
push
lods
xchg
push
push
mov
or
movsb
inc
mov
pop
lret
iret
dec
mov
arpl
adc
mov
jecxz
push
shrb
add
mov
inc
cmp
mov
add
es
loop
out
or
xchg
push
icebp
jmp
sbb
add
pop
in
rcrb
loop
and
push
mov
aad
jno
mov
pop
aas
ds
dec
mov
cmc
sti
inc
cmp
sub
daa
shll
pop
sub
int3
dec
fnstsw
pop
test
std
mov
pop
cmp
in
stos
lods
mov
lret
push
dec
repz
jmp
scas
or
push
pop
popf
jo
scas
inc
add
aas
dec
pop
pop
jmp
mov
adc
cmp
cmp
cmp
lock
arpl
insb
in
mov
xchg
mov
enter
pop
and
das
adc
test
insb
jo
mov
dec
testb
xchg
mov
fisttpll
inc
dec
xor
sbb
mov
nop
pusha
xchg
in
xor
xchg
inc
popa
mov
dec
jl
cltd
mov
call
xchg
cmpsl
adc
out
in
cmpsl
adc
je
nop
sub
lds
daa
mov
test
in
lcall
and
out
mov
sbb
xor
pushf
mov
inc
shr
decb
xchg
into
lock
sub
push
hlt
addr16
xchg
fidivrl
mov
inc
and
cmp
cs
or
jecxz
cmpsb
adc
cld
and
pop
sub
dec
inc
adc
rol
pop
mov
clc
mov
sbb
mov
or
mov
stc
adc
repnz
lea
cld
adc
pushf
and
lcall
pop
mov
lods
ret
pop
ss
xorl
sub
mov
cmp
xchg
fisttpll
cmp
aas
shl
adc
lods
add
std
jno
jno
dec
stc
mov
or
add
cmp
mov
jmp
aad
ror
mov
or
cmc
int
lcall
popa
sar
cmpsl
cmp
push
push
jbe
test
enter
add
shrb
cmpsb
jle
call
dec
jmp
jecxz
aad
xlat
mov
jns
lret
bound
incl
icebp
in
cmpsb
rcll
outsb
fidivl
or
ja
sub
mov
aas
mov
shrl
add
flds
lret
sbb
test
adc
inc
and
aaa
js
arpl
loop
jo
ljmp
stc
insb
and
sub
clc
scas
lods
pop
push
jnp
aad
or
adc
ja
push
pop
adc
arpl
jno
xor
mov
mov
sbb
xchg
push
cmp
push
sub
push
sbb
and
js
adc
dec
pushf
ret
iret
xor
cmp
mov
inc
mov
cwtl
cmpsl
cmpsl
and
and
addr16
cmpsl
les
cs
mov
xor
lret
sbb
add
mov
es
popa
cmp
sahf
sbb
jge
pop
pushf
andb
xlat
sub
shlb
mov
stos
xlat
xchg
fdivrs
adc
jmp
sbb
incl
mov
mov
sbb
pop
lret
inc
add
lahf
dec
outsb
mov
push
jns
pop
inc
jmp
push
test
ljmp
sbb
test
add
push
inc
xor
mov
fmuls
je
jl
in
lods
call
sub
mov
sub
add
hlt
lods
and
hlt
dec
xor
push
outsb
push
out
mov
xchg
add
push
xchg
pop
xor
in
ja
lea
mov
lcall
add
aam
test
push
mov
ss
std
push
jp
sub
arpl
xchg
repz
dec
fwait
adc
fwait
or
scas
mov
out
dec
xor
xor
add
lret
jne
popf
adc
arpl
add
decw
pop
lock
lcall
xchg
sbb
stos
sahf
sub
fsubl
jg
cmp
cmovae
lock
stos
lret
pushf
dec
daa
repnz
orl
sbbb
pushf
jb
adc
push
arpl
test
sarl
mov
pop
mov
mov
dec
ljmp
scas
jmp
adc
fildll
xchg
pop
les
stos
sbb
loop
out
cld
xor
leave
mov
hlt
adc
add
and
xor
jns
pop
arpl
push
xor
lods
xchg
push
mov
mov
add
arpl
add
lods
push
and
mov
test
sbb
test
pop
cmp
inc
add
jecxz
sbb
pop
jmp
enter
sbb
jb
into
mov
fmull
xor
js
sarb
mov
lods
jbe
arpl
aam
xchg
iret
ret
insb
cmp
add
into
dec
lods
or
add
iret
fxam
scas
ret
cmc
inc
pop
cmp
sbb
cmp
mov
ret
mov
jns
les
xchg
mov
aaa
jle
imul
jl
push
pusha
outsl
sarb
arpl
leave
movsl
adc
add
fdivrl
cmc
out
imul
cld
jge
xchg
outsb
mov
pop
in
dec
mulb
push
lods
lods
fcoml
lds
xchg
fstpl
es
cli
sbb
mov
loope
test
out
dec
fsubrs
pusha
pop
and
loope
fdivrl
ret
imul
jl
rclb
pop
clc
lock
loope
mov
negl
cld
sbb
imul
pop
scas
add
pop
xchg
add
xchg
mov
pop
cmpsl
jle
decb
xor
frstor
push
ret
shr
les
ret
sub
mov
and
aaa
add
mov
lds
xor
into
ljmp
imull
pop
mov
out
dec
stos
xor
enter
jno
sbb
xchg
pop
mov
dec
outsl
cmp
pop
inc
mov
jmp
loop
mov
add
cltd
adc
adc
inc
inc
mov
test
ret
add
lock
mov
imul
add
mov
daa
mov
dec
xor
adc
cmp
jne
mov
xor
sbb
sub
movl
in
push
lods
cmc
cmp
scas
or
inc
inc
and
dec
xchg
add
pop
xor
cmp
inc
jmp
and
int3
or
dec
stos
mov
dec
popa
xor
mov
dec
mov
ja
push
lret
out
pop
xchg
sahf
imul
sbb
test
mov
xchg
fiadds
pop
pop
add
aad
jmp
arpl
xor
add
repnz
enter
mov
nop
pop
sbb
fildll
xor
push
mov
pusha
adc
and
imull
ret
lcall
rcrb
xchg
cmp
cmp
lds
sub
rorl
xor
jge
sbb
mov
cmc
sub
xlat
cmpsb
je
and
out
xchg
lcall
mov
xor
gs
adc
xchg
xor
mov
push
mov
xchg
adc
int3
lods
adc
push
pusha
add
mov
or
lods
jns
sub
movsb
sub
and
inc
dec
lahf
and
jbe
pop
inc
inc
push
jecxz
cmp
iret
add
cmpsl
movsb
push
sbb
jno
jo
jg
jns
inc
push
xchg
inc
mov
inc
ret
jo
lahf
xchg
test
inc
add
fidivrs
ret
ljmp
push
xor
and
jae
and
cmp
or
mov
jmp
cmp
icebp
test
add
ds
lods
outsl
xchg
cltd
ljmp
mov
adc
push
mov
or
decb
jl
addl
add
ficoms
idiv
cmc
inc
and
jp
ret
adc
and
fs
dec
mov
jp
push
sub
push
aad
sti
push
aad
sbb
dec
cld
xor
pop
popf
push
outsb
pop
insb
pop
cmp
lret
mov
push
repnz
push
leave
mov
imul
movsb
test
adcl
pushf
mov
clc
aaa
addr16
jge
push
arpl
lods
loope
push
xor
sarb
pop
cld
aas
cmp
cmc
xchg
cmc
inc
dec
mov
sub
mov
push
mov
cmc
dec
ret
dec
repnz
repnz
scas
je
pop
sbb
or
or
xchg
rcl
lods
scas
shrb
imul
rclb
cmp
ret
or
fs
cmp
cltd
dec
cmc
xchg
cli
mov
nop
jnp
sti
and
cmp
mov
push
xchg
out
ss
jno
and
add
adc
std
jp
sbb
neg
fnstcw
jp
mov
lods
int3
inc
mov
jge
lds
pop
test
out
mov
aas
xor
dec
jl
lock
jo
jno
adc
mov
add
mov
test
inc
popf
push
push
sbb
das
orl
lahf
rep
out
pop
cmp
xor
jge
incb
in
lock
fcoml
in
or
outsb
xchg
out
lret
mov
jns
or
lock
jo
iret
cmp
fimuls
pop
or
movsb
push
frstor
ss
pop
push
and
std
testl
loop
jg
inc
xor
jg
lods
mov
out
arpl
dec
test
mov
xor
jb
and
imulb
mov
filds
cmp
sub
xchg
cltd
inc
push
dec
pusha
or
insb
stos
mov
xchg
pop
adc
jecxz
sbb
sbb
dec
push
rol
pop
ficomps
mov
mov
adc
orb
iret
and
add
jne
adc
or
add
addr16
incl
stos
jecxz
enter
jp
lcall
adc
fmull
imul
mov
icebp
or
add
fld
pushf
ss
ret
xor
push
sbb
rclb
popa
fmuls
mov
sbb
dec
xchg
xlat
cmc
out
mov
icebp
cmpsb
jl
pop
rcrl
outsl
mov
ret
jbe
js
orb
pop
stos
outsl
repnz
inc
sbb
shrb
adc
movsb
adc
cmp
pop
xchg
pushf
fucom
adc
jnp
or
dec
or
shlb
rcll
adc
jns
mov
adc
cmpb
push
rcpps
mov
and
push
mov
xor
xchg
in
xchg
ss
call
add
push
hlt
lods
add
jl
mov
add
cmp
pop
mov
faddp
inc
out
xor
lret
push
push
outsb
mov
divb
pop
mov
inc
notb
movsl
test
out
ret
ret
jg
inc
leave
dec
in
mov
push
pop
jp
scas
or
lods
push
jns
add
fdivl
push
push
stos
mov
clc
stos
jbe
or
int
lret
test
ret
sbb
insl
sbb
into
movsl
lcall
mov
sti
dec
psubusw
test
adc
pusha
ret
or
call
inc
pop
inc
push
sti
arpl
sub
mov
insb
mov
dec
and
pop
inc
inc
push
test
mov
in
sbb
xor
mov
enter
cs
push
pop
mov
adc
mul
jbe
das
nop
sub
in
mov
fyl2xp1
cmp
dec
pop
mov
push
xor
adc
jno
movsl
test
insl
mov
cwtl
ja
call
rcll
dec
mov
and
adc
xchg
call
mov
pop
sub
insl
mov
jo
insl
inc
pop
fs
sub
push
sub
pop
test
es
loopne
aas
xor
fsubrl
mov
lcall
pop
lahf
fsubl
xor
and
pop
or
jecxz
fwait
scas
sub
imul
mov
filds
lret
cli
loope
or
mov
push
jle
loopne
pop
fwait
icebp
mov
roll
pusha
jge
insl
dec
mov
add
mov
fadds
xlat
push
jp
jne
imul
jmp
pop
dec
and
push
xor
aas
aam
xor
in
jl
push
lcall
dec
xchg
rolb
push
push
lock
mov
xor
dec
aaa
test
dec
pop
leave
and
sub
pusha
mov
or
call
sbbl
jmp
push
jp
jge
shl
int
aaa
scas
pop
pop
pop
or
icebp
notb
push
inc
shrl
setns
dec
or
xchg
push
ret
ret
aad
imul
arpl
sbb
pop
insb
aas
mov
shrd
fbstp
mov
aaa
jnp
test
push
push
sub
mov
aam
imul
add
and
mov
mov
mov
repnz
jl
sub
xlat
mov
add
cld
es
sub
mov
shlb
mov
jge
out
cmc
and
xchg
and
mov
xchg
enter
test
std
sbb
inc
cmpb
jle
pop
jmp
dec
xchg
dec
and
and
pop
stos
dec
mov
dec
ja
ds
repnz
pushf
pop
das
jp
call
pop
add
lds
iret
addr16
jmp
pop
mov
bound
push
and
adc
xchg
inc
fists
mov
xchg
fisttpll
and
test
xchg
or
insl
inc
and
pop
push
and
les
pop
cmc
inc
mov
nop
aad
out
pop
lea
dec
dec
gs
inc
test
cltd
or
stos
xchg
add
or
mov
and
sbb
into
jo
test
mov
in
cwtl
in
pop
fisubrl
mov
pop
int3
dec
mov
push
pop
pop
sti
mov
adc
icebp
xor
popa
aas
pop
out
xchg
out
stos
mov
in
push
push
or
enter
adc
loop
jl
nop
dec
or
addl
lds
std
jg
les
mov
jae
sub
ljmp
sti
mov
xor
mov
mov
jmp
out
iret
adc
mov
push
sub
std
leave
aas
incl
adc
lcall
xchg
pop
test
scas
adc
sbb
inc
dec
cmp
sbb
mov
sbb
ss
add
loopne
in
cmp
xor
mov
mov
sbb
lds
sub
out
in
push
jp
pushf
scas
jge
cmp
jmp
dec
movsl
cmpsl
adc
and
insl
sbb
mov
pop
or
pop
test
fwait
add
xor
lcall
jmp
cmp
ds
sti
divl
or
adc
int
out
adc
out
pop
mov
cld
shrl
sbb
dec
inc
push
sahf
mov
loopne
add
or
lods
jo
or
cmp
daa
js
xchg
ja
fsubrs
xor
jg
imul
mov
leave
outsb
inc
rclb
outsl
adc
test
xor
test
push
scas
test
mov
jbe
cmp
add
adcl
adc
mov
stos
xor
adc
cmp
cmp
push
in
cmp
loop
xchg
movsb
fcompl
lret
add
sub
dec
lea
cmp
repnz
pop
shrb
popf
and
shl
repnz
pop
jb
jo
dec
inc
add
add
imul
stc
adc
pop
sbb
mov
aam
outsb
fsubs
pop
lds
lea
or
out
loopne
and
jl
aam
adc
mov
sbb
xchg
mov
or
rolb
rorl
adc
mov
fisttpl
push
out
pop
xor
lcall
shl
stc
jle,pn
mov
rcl
cmp
add
das
outsb
or
fcoms
sbb
add
and
adc
stc
xchg
push
cwtl
cs
out
aas
cmpsb
jbe
pop
pop
jg
cmp
dec
outsb
cmpsl
fwait
nop
and
ret
add
lcall
pop
mov
testb
out
inc
jl
or
push
insl
lods
gs
nop
pusha
xchg
xor
push
pop
jg
inc
and
dec
stos
divb
xchg
pusha
fnstcw
mov
ds
inc
inc
lods
cs
jle
filds
lret
popf
insl
xchg
shl
add
filds
jbe,pt
notb
nop
iret
insb
ret
xor
mov
aaa
mov
test
bound
xchg
outsb
in
repnz
or
sub
mov
cmp
and
int
inc
sti
adc
test
scas
mov
sahf
call
ror
or
fsubr
jmp
data16
int3
test
popa
mov
add
mov
mov
jne
addr16
xor
add
addr16
xor
stos
push
lock
lods
dec
sub
leave
mov
dec
xchg
cmp
cltd
stc
mov
lret
mov
or
loope
aas
int
mov
mov
fisttps
andl
inc
test
fsubrs
cmp
xor
stos
jnp
insl
xor
clc
out
aaa
pop
jno
or
dec
cmp
test
push
ret
pop
cmc
imul
inc
jge
in
fisubrl
add
xor
sub
call
jae
or
test
pxor
movnti
inc
jle
dec
fcoml
ss
sahf
test
jl
aaa
mov
cmp
lock
jl
mov
jnp
cld
insl
mov
push
push
mov
mov
repz
pop
stc
arpl
outsl
call
xor
fdivr
movsl
loopne
or
dec
mov
or
ss
sub
mov
mov
popf
sub
insl
jl
sahf
in
jnp
repnz
pusha
dec
fdivrs
xchg
cld
repz
aam
adc
push
mov
mov
or
imul
cwtl
mov
xchg
jecxz
pop
jmp
adc
mov
dec
add
fs
aad
mov
test
push
loopne
mov
cmp
sti
xchg
stc
jg
into
or
stos
nop
xchg
out
pop
mov
add
sub
jp
cmpsl
int3
insl
test
inc
ficoml
fiaddl
movsb
fldt
scas
lods
sbb
lods
lcall
sub
push
inc
and
mov
mov
mov
ljmp
jnp
loop
sti
out
ljmp
lds
test
jle
stos
push
rolb
loop
adc
xchg
mov
loop
pushf
push
subb
and
inc
loope
add
test
mov
jae
shll
test
imul
hlt
mov
jae
inc
mov
les
aad
xor
mov
push
mov
pusha
xchg
xlat
mov
popa
xchg
push
repnz
pop
push
lods
leave
insl
or
in
inc
sub
fildl
sub
fsubrl
mov
cmp
jl
ljmp
xor
push
push
adc
sahf
jecxz
mov
pushf
movsb
fsts
fbld
mov
sub
inc
xchg
call
push
cli
roll
movsl
leave
popf
or
fwait
jmp
adc
or
dec
das
push
test
addb
lds
jmp
xchg
add
stos
push
inc
cltd
sbb
mov
daa
mov
mov
cmpsl
pop
outsl
addr16
leave
and
pop
out
push
idivl
add
loope
dec
movsb
out
gs
or
fidivl
jge
bound
pop
mov
or
add
xchg
fsubs
add
jnp
cltd
inc
andw
and
sbb
ficompl
test
mov
movsl
ret
std
stos
push
push
lds
jmp
lods
dec
mov
loope
mov
test
sbb
icebp
das
add
in
dec
sbbl
loop
adc
mov
adc
aam
mov
cmpsb
stos
enter
imul
xlat
mov
mov
daa
aad
int
ljmp
fisttpll
call
xor
idivb
push
dec
mov
lods
add
movsb
test
mov
xchg
or
mov
je
dec
inc
mov
add
cltd
mov
fs
ljmp
sbb
push
jae
aaa
hlt
fdivrs
imul
cmp
mov
mov
or
aaa
xchg
mov
paddd
sub
loope
negl
push
push
sti
enter
jne
mov
jmp
std
cmp
jle
dec
adc
push
mov
shlb
xor
xchg
aad
dec
dec
adcb
adc
popf
mov
add
xchg
xchg
ss
loop
testb
pop
mov
fcoms
push
fcompl
inc
xchg
sub
mov
jmp
pop
dec
sbb
loope
mov
jns
sub
fdivs
and
sub
jle
mov
test
push
jns
dec
daa
pop
pop
ss
pushf
mov
inc
mov
test
push
push
orl
int
xrelease
xchg
addr16
jp
es
mov
mov
mov
dec
and
or
in
aas
pop
bound
push
ja
out
in
outsl
daa
inc
das
test
or
aam
sbb
gs
pop
dec
mov
xchg
xchg
fildl
cli
pop
mov
lcall
pop
dec
push
test
fdivrl
ret
push
pop
dec
fistpll
and
xorb
fstpt
add
and
sbb
sub
lods
ss
dec
jmp
pop
insb
js
add
pop
test
mov
xchg
jmp
pushl
mov
inc
mov
mov
jae
fxch
and
cmp
nop
mov
ja
or
jnp
add
fistl
and
lods
mov
pop
inc
clc
mov
ss
shrl
xor
and
out
sbb
mov
inc
cli
shlb
xchg
mov
fiadds
or
adc
addr16
fistpl
and
mov
sbb
cmpsl
sbb
add
xchg
push
daa
pushf
mov
pop
mov
xchg
adc
stos
or
cwtl
pusha
push
sbb
push
push
mov
es
pushf
and
sub
dec
mov
jp
fsubp
sbb
loopne
scas
cmpb
daa
inc
push
xchg
cld
add
imul
adc
fs
cmp
xor
xchg
sub
stc
mov
or
pop
mov
dec
or
cmp
adc
mov
pop
adc
mov
or
push
adc
cmp
es
xor
push
in
push
mov
mov
sbb
pop
mov
repz
push
lods
inc
subl
jne
adcb
cs
mov
push
push
cmp
lods
lods
js
imul
inc
clc
jp
fisttpll
adc
clc
decl
xchg
pop
arpl
mov
or
push
sarl
and
decb
add
cwtl
pop
sti
and
enter
ja
dec
fadd
add
repz
stos
add
push
inc
pop
leave
gs
arpl
loop
inc
arpl
jnp
std
sub
mov
and
fnsave
jae
stos
lock
mov
jbe
lcall
sub
loope,pt
inc
or
inc
sbb
fs
call
enter
fstpt
or
aaa
arpl
jmp
lea
xor
mov
jno
call
and
pushf
dec
shlb
lds
push
out
or
cmc
lea
fsubrs
xor
ja
sbb
xor
icebp
and
sub
xor
nop
in
cmp
jno
and
dec
or
push
clc
dec
das
enter
sub
push
pushf
mov
scas
inc
or
xor
mov
popf
mov
in
sti
push
xchg
cvtpi2ps
lret
xchg
push
popf
ret
addl
ret
xor
mov
xchg
dec
daa
ficoms
rep
loopne
sbb
je
neg
daa
scas
test
push
in
push
std
jmp
popa
lds
dec
push
dec
in
mov
inc
dec
popf
mov
inc
in
mov
sub
das
xchg
sub
mov
lods
fsubrs
or
sbb
adcl
push
test
popa
push
mov
call
mov
add
xchg
daa
xor
rcll
mov
add
xchg
xchg
push
loope
push
or
push
lea
or
pop
jecxz
mov
sbb
dec
arpl
movlps
xor
adc
xor
pusha
bound
je
push
mov
dec
in
sti
mov
mov
test
or
scas
cmpsb
pushf
inc
fisubrs
mov
push
push
aas
rcrb
mov
xchg
aam
mov
and
xchg
jo
lretw
mov
sub
xchg
gs
lea
jl
sbbl
ds
cld
mov
into
shll
pop
push
xor
mov
in
pop
mov
aam
mov
int3
out
icebp
cmpl
lahf
and
mov
jl
push
insl
and
push
adc
add
or
mov
dec
js
icebp
pop
es
inc
dec
push
gs
xchg
movsl
jo
and
pop
out
out
lods
dec
shr
jecxz
inc
pop
je
ret
lock
pop
popa
jp
or
cld
and
iret
mov
fsubp
cmp
inc
cmp
out
xchg
inc
jg
mov
cs
mov
dec
dec
add
dec
add
adc
stos
hlt
aam
and
leave
sbb
roll
add
dec
sbb
sbb
outsb
jb
outsb
scas
lea
mov
pop
int3
mov
pusha
mov
push
pop
sahf
push
push
push
aaa
imul
out
add
mov
imul
pushf
loopne
lods
pop
out
or
inc
xorb
insl
loope
iret
cmp
mov
icebp
mov
int3
mov
hlt
jb
sbb
sbb
out
shll
xor
test
mov
sbb
inc
pushf
cmp
or
push
bound
dec
imul
mov
bound
int3
scas
iret
js
xor
sub
jp
pop
in
ss
sbb
and
lcall
sbb
sub
pop
push
sbb
mov
cltd
and
bound
push
pop
jb
shll
push
mov
sbb
lret
mov
jo
mov
and
int3
bound
and
adc
bound
fildll
pop
cmp
loopne
xor
daa
lods
loope
pop
xor
in
fldcw
ds
dec
ds
inc
lea
sub
aaa
jnp
jmp
pusha
cmpsl
aam
or
add
cmp
inc
push
jp
cmp
mov
ret
mov
sti
das
aam
sbb
jo
jl
and
out
push
into
ficoml
jl
leave
xchg
jns
lret
das
cmp
inc
sub
cmp
jo
mov
cs
mov
sbb
and
loope
lods
inc
mov
enter
popa
adc
push
cmp
mov
incb
sbb
lds
dec
dec
mov
addr16
lahf
push
stc
sbb
and
test
out
pop
cs
pushf
stos
sarl
popa
test
stos
xor
popf
sbb
stc
leave
and
mov
xor
ja
cmpsb
lods
and
sbb
test
xor
outsl
push
mov
shl
xor
gs
pop
add
dec
push
jo
cmp
pop
push
inc
jb
xchg
sbb
or
lret
lods
and
daa
add
inc
lcall
call
std
push
icebp
insl
lcall
xor
inc
add
push
out
mov
lods
jecxz
nop
mov
mov
int3
cli
loop
xchg
adc
pop
fcmovnb
jle
mov
dec
shll
jne
xchg
sarb
push
mov
mov
push
xchg
test
repz
mov
mov
addr16
sub
add
xchg
adc
fiaddl
test
into
xor
stos
scas
adc
push
or
jbe
nop
pop
add
shlb
push
mov
hlt
insl
in
sub
imul
repz
push
sbb
mov
movsb
cmpsb
popf
push
pop
icebp
xchg
fdivrs
rolb
fistl
mov
int
nop
cmp
insl
and
xlat
inc
ss
sbb
rcrb
xchg
mov
daa
jge
jnp
inc
lahf
push
jnp
cmpl
cmc
jge
es
push
insb
push
sbbl
mov
xor
jmp
cli
mov
adc
mov
sti
mul
ficompl
out
pop
data16
shlb
call
negb
sbbb
jb
jno
sbb
je
xchg
sarl
shll
mov
adc
pusha
or
je
arpl
sbb
fadd
daa
add
sbb
sub
jl
fimull
cltd
lds
shlb
pop
lea
sub
jl
movsb
sub
push
stos
mov
mov
xor
clc
inc
xchg
lahf
mov
aaa
jecxz
into
call
xchg
dec
add
pusha
dec
lret
loopne
stos
repnz
cmp
movsb
jle
stc
mov
in
repz
xor
nop
fisubrl
or
das
xchg
sti
out
test
in
add
dec
cmp
sub
or
jge
in
jb
test
dec
push
jb
fmull
cmpb
ljmp
paddsb
mov
call
mov
and
mov
std
cmp
hlt
fistpll
inc
insb
mov
cmp
push
ss
sub
inc
cmp
xor
jo
sbb
mov
fbld
stos
loopne
in
mov
loop
xchg
pop
xchg
mov
mov
jno
xor
pop
pop
inc
pusha
lret
sub
sbb
call
sub
cmc
mov
cld
sti
xor
js
xchg
push
ret
sbb
sub
aad
cld
nop
testl
mov
outsb
dec
mov
or
jge
int
inc
push
jp
push
ljmp
sbb
sahf
mov
add
fistl
fnstsw
rolb
pusha
xchg
sbb
rorb
bound
dec
clc
out
sub
mov
iret
in
pop
jge
popa
inc
jg
xchg
jae
lds
aad
lahf
jmp
fmul
rcrb
mov
and
js
adc
cmpsb
and
clc
ret
adc
pop
xlat
int3
mov
dec
loope
cmp
jb
insl
out
inc
jmp
xchg
add
cmpsl
mov
jl
adc
xor
pop
lret
pop
jl
xor
xor
or
pop
ret
imul
pop
xchg
add
mov
outsl
cmp
sahf
jno
xchg
notb
inc
or
pop
xchg
pop
div
out
jo
popf
inc
adc
cwtl
bnd
bound
fisubrl
aad
mov
push
or
cli
cmc
fldenv
mov
cmp
xchg
or
mov
cs
sub
cmp
cmp
lcall
pushf
mov
adc
cmp
xchg
lret
add
mov
roll
aas
cmp
mov
push
test
inc
cltd
mov
roll
push
jne
dec
add
dec
pop
dec
pop
add
je
mov
jb
mov
push
cld
pop
pop
sub
jl
shrb
xchg
jo
cmp
push
inc
mov
and
jb
out
out
les
mov
cmc
xchg
fimuls
sub
cwtl
pop
adc
jbe
mov
and
add
mov
data16
ret
mov
aam
movsb
mov
add
hlt
sub
sub
mov
outsb
or
pop
lock
popf
push
or
pushf
pop
jo
scas
adc
rcrl
cmc
or
ud0
xchg
add
xlat
pop
mov
out
mov
jb
jmp
adc
out
mov
cmp
aad
inc
je
in
mov
xor
push
ss
mov
sbb
mov
subw
scas
sbb
std
dec
shll
push
cmp
fisubrs
cmp
dec
and
xchg
cli
int
imul
and
loope
scas
sub
add
daa
push
push
add
add
daa
dec
lea
cmp
jp
out
xchg
out
sbb
popa
mov
sub
mov
cmc
repz
fldl
sbb
mov
mov
stos
mov
jno
std
fld
imul
les
dec
gs
ret
mov
shlb
in
std
into
pmaddwd
jo
or
and
xor
imul
push
pop
mov
push
pop
push
movsl
out
jmp
movsb
lods
pop
xchg
jbe
addl
xor
mov
jp
out
xchg
iret
jecxz
pushf
sti
fistps
mov
fbstp
mov
sub
adc
je
jbe
sbb
cltd
mov
cmp
sarb
mov
add
xchg
fldt
inc
xchg
mov
push
pop
aad
and
or
and
lret
pop
loop
jne
jmp
leave
mov
sub
cmp
sub
add
movsl
inc
pop
icebp
mov
or
add
jne
adc
adc
out
push
jle
arpl
sbb
and
inc
pop
cmpsl
sahf
adc
ss
in
fistl
clc
pop
jbe
rclb
add
mov
dec
aaa
loopne
test
jne
arpl
popa
adc
cmpsb
popf
jne
sbb
adc
test
in
add
sbb
enter
mov
pushf
cmp
ljmp
sbb
ja
loopne
lea
imul
rcrl
mov
outsl
scas
xchg
enter
mov
cmp
out
hlt
and
cmovae
cmp
xor
cli
clc
push
xchg
lock
add
imul
pop
fwait
test
clc
add
popa
pop
cmp
scas
aaa
jmp
daa
cltd
rcl
push
cltd
dec
adc
push
in
lcall
lods
arpl
leave
sub
inc
mov
inc
sbb
movsl
rcll
dec
adc
subl
data16
mov
xchg
scas
fbstp
and
add
mov
xchg
adc
lret
les
cmpsb
cmp
mov
xchg
lds
test
outsb
add
stos
pop
test
mov
cmp
das
sub
daa
les
lods
pushf
pushf
cmpsl
into
dec
roll
dec
dec
sbb
sub
and
ja
sbbb
loopne
inc
pushf
out
or
pop
sarl
add
jne
test
rcrb
aaa
jp
loopne
xchg
in
aad
cmp
frstor
xchg
es
jo
fistpl
cmp
mov
test
rolb
shl
pop
adc
mov
mov
mov
js
mov
xor
sub
sub
popf
cmp
pop
loope
dec
inc
lods
sub
ret
adc
fdivl
mov
imul
lods
mov
orl
dec
jl
dec
jmp
xchg
je
mov
mov
scas
aad
add
lds
push
negl
cmpsl
loope
push
xchg
and
ds
in
fs
xchg
xorb
cmp
xor
cmpsl
lahf
sti
jnp
lcall
xor
imul
dec
ja
aad
and
les
outsl
fsts
std
mov
mov
outsl
adc
sbb
mov
inc
outsw
xchg
enter
adc
notb
das
inc
jns
add
mull
lds
dec
arpl
push
cmp
dec
ja
mov
sub
cmc
jno
mov
andb
jmp
jo
clc
xchg
enter
fidivrl
mov
xor
lds
or
inc
push
aam
adc
or
loopne
mov
inc
inc
dec
cs
sub
sbb
mov
dec
iret
test
ja
std
pop
adc
jl
dec
mov
cmp
inc
and
xchg
inc
pushf
push
xor
mov
jo
scas
iret
mov
cmp
inc
adc
es
ffree
lahf
in
and
jo
add
or
cmp
les
call
out
arpl
ja
or
int
mov
cmp
das
add
dec
dec
inc
call
sub
enter
adc
int
jmp
leave
mov
sbb
lods
rcll
xlat
mulb
addl
pop
pusha
fcomi
pop
push
and
adc
inc
xchg
outsb
add
imul
cmp
inc
xchg
xchg
repnz
add
xor
and
cmpsl
jae
out
pop
cmp
ss
dec
lret
test
mov
imul
fildl
js
mov
mov
fmull
push
cli
cmpsl
cltd
mov
and
xor
out
cmp
mov
push
fimull
mov
insl
push
mov
mov
fwait
push
mov
pop
xchg
cli
and
or
ja
jle
jo,pt
cmp
data16
mov
inc
or
test
mov
cmp
mov
xchg
sbb
sarl
mov
rcl
pop
test
jecxz
insb
es
add
cwtl
mov
dec
push
xor
and
pop
mov
pop
pop
xchg
xor
pop
add
frstor
outsl
xor
push
in
sbb
pop
pop
or
scas
test
sar
test
dec
or
sbb
push
fisttpll
shlb
cli
push
push
outsl
lret
inc
inc
adc
inc
xchg
aaa
lock
scas
or
flds
xchg
sbbl
repz
inc
push
jmp
cvtps2pd
fsts
rorb
jae
lods
sbb
cmp
bnd
dec
stos
xor
test
mov
loop
inc
bound
subw
jg
movsb
xor
lock
data16
xor
pop
jns
xchg
mov
mov
ja
icebp
fnsave
pop
jge
sub
shrb
add
cmp
pop
dec
ret
cli
call
and
aaa
in
xor
icebp
in
inc
or
out
jae
loopne
cmp
bound
pop
mov
xchg
cltd
add
hlt
fs
mov
and
imul
pop
xor
test
lods
dec
hlt
clc
xchg
int3
jae
mov
push
cmp
mov
sbbl
pop
pop
mov
leave
inc
adc
push
xchg
les
mov
cld
jecxz
pop
scas
fcomp
pop
pushf
inc
test
shr
jmp
in
ds
sub
scas
xchg
cs
push
gs
or
mov
xor
add
and
and
mov
and
jp
xchg
clc
scas
lea
mov
and
rcll
pop
insb
mov
es
stos
das
stos
xchg
mov
inc
jno
adc
or
rcl
aas
or
sbb
mov
cmc
fadds
lret
pop
sub
cmpsb
cltd
jl
dec
loopne
imul
fsubr
or
fdivs
add
jg
bound
add
jl
lock
mov
fidivrs
jge
cmp
mull
sub
hlt
aam
fsubl
cmc
pop
and
das
outsb
movsl
pop
hlt
movntq
out
fdivrl
xchg
mov
xchg
xchg
rol
xorl
movsb
fdiv
rcl
or
pushf
in
dec
and
cmp
jecxz
addr16
cld
xor
enter
inc
lahf
mov
pop
fisubl
mov
mov
loop
cmp
ss
sbb
daa
lds
pop
mov
dec
lahf
rcrb
xchg
add
sub
clc
daa
cmp
mov
push
sbb
or
mov
jne
jp
lock
cmp
icebp
loopne
push
jbe
mov
sub
mov
mov
jo
pop
test
aam
jecxz
pushf
out
incl
sahf
and
sbb
rcrl
inc
mov
in
ljmp
push
inc
daa
pop
mov
ds
fidivrs
mull
cld
into
xchg
std
push
cmpb
sbb
data16
test
test
push
mov
loope
out
int3
cltd
xchg
mov
mov
loope
xor
push
mov
jbe
mov
push
test
js
es
fwait
mov
cmp
ss
and
scas
ds
in
adc
pop
mov
inc
cmp
or
inc
xor
dec
daa
imul
jge
enter
dec
lea
dec
pop
mov
shlb
and
daa
imul
and
push
jmp
lcall
xchg
add
xchg
pop
das
das
jecxz
push
adc
pop
test
adc
lods
mov
jb
adc
jo
popa
jnp
jecxz
sbb
test
pushf
add
roll
fwait
stos
push
pop
sar
sahf
in
xor
mov
mov
mov
lea
shll
insb
pusha
in
fistpll
sbb
insb
hlt
dec
test
cli
das
lea
fs
mov
insl
jbe
pop
jp
popa
jmp
inc
ljmp
pop
add
cltd
mov
dec
clc
pop
or
fcompl
lods
ret
sub
outsb
sub
icebp
in
sahf
sub
clc
je
outsl
mov
inc
push
ljmp
into
sub
cld
add
add
cmp
sbb
xchg
inc
sahf
jmp
in
pop
mov
xchg
push
xchg
gs
push
out
fisttpl
inc
dec
mov
xchg
les
push
lcall
mov
dec
pop
inc
int3
sbb
cwtl
and
nop
mov
pop
icebp
adc
push
mov
pop
aam
inc
sub
push
jl
out
inc
mov
jge
testb
mov
xor
sub
inc
push
mov
mov
sub
add
cmc
out
mov
in
xlat
inc
mov
dec
lret
mov
outsb
into
in
push
inc
mov
xchg
dec
add
jge
push
cmp
inc
mov
xor
jg
and
andl
xor
jae
test
jne
push
mov
xchg
jne
out
clc
movsl
pop
cli
les
in
dec
outsb
adc
les
dec
push
pop
dec
or
sub
test
mov
dec
sub
mov
sub
xchg
clc
insb
arpl
inc
xchg
sti
pop
stos
ffreep
sub
adc
ret
enter
stos
cmp
xor
mov
loopne
mov
xor
jns
insb
insl
jnp
add
cld
arpl
cwtl
scas
imul
fs
inc
notb
sbb
stos
dec
xchg
sub
lods
and
cmp
enter
pop
mov
aaa
bound
aaa
cmp
arpl
jo
loope
mov
add
subl
test
add
test
dec
jne
cltd
in
notb
ficoml
fsts
sti
sub
pop
push
jo
mov
ss
dec
mov
and
xchg
lock
inc
xchg
or
xor
jmp
push
sub
adc
ret
shrb
scas
iret
sbb
cmp
xchg
dec
ret
pop
ss
std
popa
das
mov
xor
xchg
aas
inc
or
movsb
popf
sbb
jmp
xchg
jae
in
xor
in
fisubrl
ret
das
data16
ficompl
repnz
das
xchg
fwait
xlat
aaa
mov
or
fisttpll
jb
jo
icebp
sbb
ljmp
mov
stos
ja
dec
push
cwtl
fidivrl
cmc
jp
stos
sub
imull
mov
int3
fisttpl
jbe
xchg
inc
cltd
mov
fcompl
jmp
pop
adc
das
movsb
ret
add
add
mov
lds
repz
mov
mov
insb
mov
inc
aam
jnp
mov
daa
xchg
out
cmovs
int
jb
out
pop
sbb
mov
std
pop
cmpsb
inc
push
cmpsl
jae
scas
add
ds
xchg
aad
add
adc
xchg
imul
xchg
mov
lods
or
dec
mov
inc
test
cmp
in
push
and
jmp
test
lock
sbb
pushf
adc
rcrl
mov
insb
lret
fs
popf
bound
clc
mov
cltd
test
shll
testb
dec
icebp
adc
lcall
ret
int3
divl
lret
cmp
pop
mul
nop
pop
or
in
mov
inc
lret
jle
popa
mov
and
dec
in
nop
adc
ja
adc
loopne
movsb
movsl
mov
loopne
pop
lock
insb
cmp
or
xlat
mov
out
mov
or
adc
pop
pop
mov
sub
cmp
bound
jne
enter
add
repnz
add
stc
data16
neg
test
jns
cmp
sbb
mov
data16
and
imul
cltd
push
cmpl
das
pop
xor
xlat
cmpl
or
adc
adc
sub
lahf
pop
jmp
xchg
push
fnsave
pop
mov
and
aas
pop
stos
call
shrb
mov
fists
jg
mov
sti
adc
xchg
addr16
add
cli
lock
imul
out
push
ret
in
cwtl
popa
jbe
dec
aad
bnd
daa
sbb
pusha
cs
push
dec
loop
and
stos
outsl
sahf
fs
pop
repz
outsl
icebp
jns
rcl
ljmp
in
jmp
xchg
iret
negl
dec
movsb
sub
pop
add
jecxz
mov
rcrl
push
add
push
int3
flds
push
pop
or
cmp
and
aad
fdivs
shl
callw
orb
cs
movsl
nop
adcl
jge
popf
pop
mov
test
cmpsb
cmpsl
sub
hlt
cmp
imul
sarl
movsl
arpl
int3
aad
adc
mov
push
rcrl
xchg
int
scas
xchg
loope
ret
sbb
lcall
mov
pop
xchg
lahf
imul
adc
pop
femms
in
mov
sub
mov
sbb
xchg
popa
lods
mov
loop
dec
sti
mov
add
std
dec
xchg
mov
jle
call
fsubs
push
enter
and
sbb
xchg
imul
pop
dec
fidivrl
jp
je
pop
or
hlt
cmc
cmp
in
rcll
mov
das
mov
int3
push
cltd
xchg
mov
rolb
in
scas
and
in
push
into
pushf
in
mov
inc
pop
jno
nop
add
pop
jb
popf
aas
lods
rclb
jecxz
out
je
je
adc
mov
addr16
cmp
sbb
mov
bound
cmp
jo
or
or
lods
mov
mov
mov
xor
imul
insb
movsl
mov
lods
or
xchg
pushf
and
jne
std
push
add
call
popa
mov
push
mov
pop
inc
dec
sub
inc
push
mov
leave
lret
add
aaa
jno
arpl
lea
or
jecxz
in
xchg
and
bound
or
shrl
hlt
xor
fimuls
or
iret
aad
inc
lods
dec
mov
adc
cmp
xchg
je
cmp
sub
das
out
popf
out
pop
repnz
jecxz
call
popf
ja
test
xchg
jecxz
mov
push
sub
movsb
mov
int
and
sub
jg
mov
bound
cmp
adc
mov
jo
mov
mov
test
insb
nop
xor
adc
jo
cmpsb
push
ljmp
lods
sbb
push
add
jmp
push
inc
sti
aas
xor
out
incb
mov
hlt
sbb
xlat
pminub
cmp
xor
inc
cmpsl
sarb
xchg
sti
and
ficoml
into
fdiv
outsl
insb
push
inc
adc
sbb
pusha
decl
inc
jp
xchg
jo
fstpl
dec
jne
cmp
inc
cmp
repnz
dec
imul
cmpl
aam
push
cmp
ljmp
adc
ljmp
int3
dec
or
push
imul
mov
pushf
mov
push
pop
cmpb
xor
push
pushf
movsb
mov
jbe
mov
inc
rcrb
xchg
scas
pop
out
push
mov
mov
cmp
add
add
insl
loopne
sub
test
sahf
jg
enter
inc
push
mov
icebp
jmp
xlat
sub
stc
popa
xor
pop
test
clc
daa
out
mov
mov
inc
dec
in
inc
ficompl
cmp
mov
lea
jbe
aad
sbbb
mov
sbb
pop
adc
test
add
lret
lret
mov
daa
sub
andps
adc
into
push
sub
fs
add
add
icebp
jle
fsubrs
popf
adc
fs
push
dec
push
jo
mov
add
in
test
je
fs
fwait
outsl
mov
mov
popf
test
xchg
imul
repnz
test
hlt
leave
adc
add
aam
dec
enter
cmp
test
xor
jae
leave
lds
into
call
sub
lods
outsl
mov
or
push
in
cmp
repz
mov
pop
sbb
mov
inc
aad
ror
dec
cmpsl
sahf
mov
cmpsl
cmp
cli
negl
pop
das
pop
cltd
fists
jno
stos
or
pop
sti
mov
inc
aam
push
out
mov
xchg
mov
sub
imul
dec
jb
or
incl
jb
enter
pushf
aam
pop
xor
movsl
ss
jge
fstpt
fidivrs
loope
icebp
jp,pn
push
mov
and
into
imul
cltd
hlt
fidivrl
and
xchg
mov
insl
cmp
outsl
jmp
jb
or
inc
stos
sub
fildll
xchg
cmpsl
call
mov
adc
xchg
addr16
push
shr
pop
xor
mov
movq
inc
sbb
stc
adc
in
mov
xchg
stc
fistpll
int3
daa
sti
lds
call
addps
inc
in
adc
lahf
jae
or
sub
sbb
push
ja
bound
imul
pop
jne
mov
sub
mov
lret
xor
orb
add
ljmp
jbe
mov
inc
aaa
fldl
pop
sbb
and
stos
xchg
xor
xchg
daa
fidivrl
movsb
rclb
mov
paddw
jb
sub
cmp
mov
dec
dec
cli
rcr
ds
and
popf
notb
xor
push
jbe
cltd
sbb
lea
add
rorb
sub
pop
add
test
pop
push
hlt
xchg
jle
ret
push
push
adcl
sub
divb
sub
push
and
ret
in
mov
mov
fisubl
pop
hlt
hlt
mov
and
mov
pop
and
push
dec
fnstenv
fimuls
sbb
sbbl
std
jmp
or
dec
sbb
clc
inc
xor
ret
in
fimull
cmp
out
cwtl
fnstcw
pop
pop
xlat
xor
mov
jg
push
pop
std
test
out
outsl
aas
jne
dec
movsb
jne
test
mov
xor
xchg
pop
mov
fdivs
mov
fmulp
int3
popf
cmp
sbb
test
test
mov
sbb
push
xchg
test
inc
dec
cmp
stos
into
sbb
sbb
or
loop
stos
adc
decl
lods
ljmp
enter
mov
or
data16
xchg
cwtl
pop
dec
cmp
mov
pop
mov
ja
cld
ret
xchg
xchg
pop
std
push
mov
inc
fdivl
aad
dec
and
inc
inc
popa
mov
push
andl
into
int3
shl
cmp
mov
ret
fisttps
jl
mov
sub
stos
mov
ds
cmc
movl
std
push
dec
or
cwtl
icebp
sub
loop
pop
imull
mov
mov
push
dec
sbb
push
pop
test
ret
push
cmp
mov
inc
lret
lock
je
rorl
hlt
idivb
push
xlat
or
in
xor
or
mov
push
inc
stos
sbbl
sbb
int3
imul
xchg
dec
retw
insl
testb
mov
dec
mov
xchg
hlt
jmp
int
pop
jae
inc
lahf
and
ljmp
in
push
rorb
xor
inc
jo
lret
jo
sbb
out
jb
popf
lds
les
jmp
pop
jle
lret
ljmp
jnp
mov
jbe
adc
cmc
loope
xlat
and
insl
mov
mov
and
push
add
outsl
pop
sahf
shll
xor
cli
jae
push
push
xor
outsl
test
and
push
das
iret
jb
push
pop
xor
faddl
pop
mov
xor
cmpsl
push
push
xchg
imul
mov
pop
imul
in
test
in
sub
popf
out
mov
jns
ljmp
and
push
loop
ret
jbe
inc
fldenv
mov
xor
adcl
xor
aad
cmpxchg
insb
and
loop
adc
les
pushf
push
sub
jne
clc
push
push
xor
rcll
pop
hlt
out
popf
jnp
aad
sbb
cmp
dec
addr16
mov
inc
push
mov
movl
iret
xor
and
xchg
jo
dec
test
jmp
lea
sbb
jge
and
bound
je
imul
sub
fstl
xchg
out
fsubl
out
aas
sbb
dec
testb
sub
pop
push
imull
insl
shlb
pop
shrb
pop
cmp
arpl
and
jnp
das
jo
mov
mov
call
or
fsub
sub
mov
shll
jae
inc
sbb
inc
xor
push
push
and
xchg
add
push
add
lcall
aad
xlat
pop
and
inc
fwait
push
ss
repnz
imul
pop
and
inc
inc
xchg
cmp
mov
sbb
adc
push
jo
dec
sbb
push
ret
cs
and
mov
adc
xchg
lods
outsb
pop
jne
out
cmp
out
fisubl
xchg
sub
push
clc
mov
incl
fwait
pop
cmp
add
sub
fsubrp
cmpsl
lcall
or
mov
mov
mov
push
jle
jns
insb
aam
mov
adc
loope
js
and
leave
jae
test
shl
dec
pop
mov
mov
add
inc
ret
movsb
push
sbb
adc
dec
mov
fistl
hlt
adc
stc
or
popf
hlt
mov
mov
push
sub
ffree
dec
jns
xor
movsb
cmc
sub
dec
scas
popf
xor
push
bound
sub
jmp
int
dec
pop
and
xchg
dec
push
xchg
movsb
pop
jbe
and
repnz
sub
movsb
aaa
mov
loop
push
sub
or
jmp
jle
in
aad
mov
adc
repnz
xchg
dec
aaa
movsb
sbb
sbb
jecxz
mov
inc
cmp
addb
fwait
push
mov
fidivl
inc
dec
shrb
f2xm1
cmp
cltd
ret
sti
xchg
push
xor
jo
jbe
inc
xchg
xor
jge
lea
xchg
rcl
test
nop
test
push
aas
add
cmpsl
enter
xchg
addb
sbb
add
pop
add
es
cmpsb
push
in
in
jns
adc
mov
out
in
sbb
ret
aas
addr16
adc
mov
add
fcoml
jnp
mov
fstpl
fisubrl
icebp
rolb
mov
push
adc
test
mov
push
out
sbb
fiaddl
insl
dec
fists
jno
pop
pop
dec
sub
mov
xor
or
leave
or
cmc
loope
scas
sub
or
loop
mov
adc
adc
popa
jae
insl
loope
lods
lea
aam
mov
mov
mov
pop
rcrb
adc
cmpb
ret
inc
fbld
cmpsb
loopnew,pt
mov
dec
loop
or
jne
cmp
ja
mov
xor
inc
or
jmp
in
iret
mov
jae
or
mov
movsl
shll
mov
cmp
iret
es
cmp
sub
cs
fmul
test
imul
sbb
adc
inc
rorl
mov
pop
dec
ja
push
jb
gs
dec
or
xchg
jnp
jmp
outsb
cmpsl
mov
xlat
pop
push
or
or
ljmp
scas
xor
inc
sub
jle
les
xor
adc
jge
push
cld
fdivrs
mov
inc
fldl
fildll
push
stc
xor
cwtl
repz
and
stc
sbb
lret
inc
in
xchg
jmp
xor
icebp
es
repz
pop
rorb
outsl
movsl
stc
in
sbb
lret
enter
addr16
dec
sub
mov
int3
repz
in
movsl
out
nop
jae
imul
push
addr16
mov
jb
jnp
sub
xor
rclb
rclb
xlat
stc
or
or
adc
lods
aaa
and
fs
int3
aad
movsb
jbe
sub
xor
shrl
xchg
mov
pop
lods
decl
mov
push
mov
rcr
nop
fmull
mov
xchg
xor
pushf
lods
pop
sub
pusha
sar
rcll
cmp
test
and
mov
xchg
xor
fwait
mov
pop
movsl
aam
xchg
dec
repnz
shr
pop
ret
fmull
sbb
cmpsl
outsl
push
push
sub
mov
xchg
loop
add
and
and
mov
rorb
or
in
mov
or
jnp
fildll
add
mov
mov
dec
cmp
push
pand
pop
cmp
jp
shll
pop
sbb
clc
aaa
in
js
out
inc
pushf
jmp
jnp
cs
fisubrs
cmpsl
pop
dec
push
in
and
inc
movsl
call
mov
insb
xor
sbb
sub
xchg
sbbl
movsb
test
stos
jb
mov
sub
or
lret
enter
jae
lret
lods
jae
add
sbb
in
push
outsl
push
push
adc
push
xchg
jnp
sbb
push
fistps
shrl
cmpsb
sub
pop
sar
and
das
jge
mov
mov
ds
or
fs
lods
cmp
inc
out
or
jl
or
lahf
stos
std
insl
lret
sub
mov
fldcw
shlb
and
add
and
out
pop
jecxz
fsubrl
xlat
addr16
push
mov
mov
shlb
imul
push
loop
enter
fstps
sub
rorb
jp
addl
cltd
mov
and
outsl
sahf
out
fildl
loopne
cltd
pop
sbb
insl
cmp
sbb
mov
xor
mov
cmp
out
push
inc
scas
sub
mov
xchg
es
xchg
dec
pop
push
negb
stc
pop
and
inc
lea
mov
pop
arpl
ljmp
inc
sbb
and
push
gs
mov
fadds
xchg
jne
mov
push
cs
jle
rclb
lret
std
xor
fnstcw
add
das
xchg
bound
adc
repnz
bound
jno
js
adc
es
and
cltd
insb
mov
pushf
xchg
inc
stc
addr16
subb
pop
push
imul
cs
subl
scas
icebp
pop
mov
push
rorl
xor
das
divb
jl
cmp
addb
dec
mov
repnz
in
mov
push
jecxz
and
add
imul
sbb
mov
sub
pop
mov
fidivs
fcomp
and
outsb
mov
aas
insl
adc
lods
mov
xchg
into
aaa
mov
loopne
pop
sbb
je
cmpsb
ret
and
sub
mov
jnp
stc
aas
dec
mov
int3
jbe
lahf
sub
cwtl
pop
pop
pusha
fcompl
pusha
cs
mov
fistpll
mov
mov
xor
jmp
xchg
rorl
push
jge
push
adc
js
xchg
dec
or
mov
xchg
shrb
orb
std
leave
addr16
sub
pop
jmp
rol
dec
std
rcll
or
std
stos
push
jo
rcrl
cs
and
push
mov
add
ljmp
jbe
sub
sbb
rcll
mov
jl
pop
jbe
add
cmp
setbe
or
push
or
subl
jecxz
xchg
pop
mov
cwtl
sbb
mov
mov
fs
dec
push
int3
ja
cmc
mov
or
iret
mov
repnz
xchg
mov
mov
xchg
dec
sub
mov
push
push
sbb
xchg
popa
pop
subb
aad
imul
sti
sub
jmp
movsl
repnz
repz
lret
add
jns
daa
sahf
shll
dec
sbb
aaa
mov
shrl
sbb
push
test
pop
and
stos
bsf
fdivrp
sbb
lock
push
fcoml
fstl
or
enter
fs
es
mov
out
pop
push
repnz
dec
arpl
inc
push
adcb
mov
pop
out
adc
cmp
pop
jbe
sbb
cmp
out
pop
cltd
jae
inc
movsl
cwtl
gs
repz
in
mov
jbe
or
or
test
or
insl
add
mov
adc
sub
fsubrs
mov
rep
in
cmp
fsubrl
lea
adc
push
icebp
fcmovu
aad
add
jg
in
dec
out
xchg
cmc
push
lds
or
js
fdivrl
adc
or
fwait
ljmp
ret
push
fwait
shr
out
sbb
cld
mov
xchg
jno
pusha
js
push
jp
pusha
jae
out
lods
push
data16
sbb
outsb
cwtl
pusha
mov
fs
adc
mov
add
xchg
xor
int
inc
notl
lock
lods
int
jno
gs
sub
dec
cmp
fstpt
mov
mov
push
out
orl
add
ja
js
pop
pop
sub
stos
shrl
jge
sub
outsb
jbe
sti
aad
gs
movsb
imul
ja
xchg
movntps
fsubrl
add
popf
adc
leave
insl
icebp
leave
xor
pop
mov
adc
and
fucomp
int
xchg
lahf
lahf
insl
sub
xor
sub
xor
imul
ja
push
es
push
rolb
jp
js
enter
xor
inc
fldl
arpl
xor
pusha
inc
cltd
outsl
fdivrs
cmp
clc
out
loopne
repz
mov
js
call
nop
jmp
jle
or
xchg
pop
fwait
pop
push
push
jmp
dec
push
test
leave
dec
sbb
out
mov
mov
push
loop
adc
add
and
int
mov
fmuls
and
xor
das
jae
mov
mov
mov
sbb
adc
push
jle
leave
sub
test
inc
mov
lret
cmc
imulb
pop
mov
jb
mov
andb
mov
in
cmpsl
jge
sbb
fdivs
ljmp
pop
mov
and
cmp
sahf
push
adc
ss
fcmovb
std
arpl
add
add
stos
or
mov
orb
inc
xchg
xchg
pop
out
jl
sub
out
movsl
xor
mov
xchg
dec
or
inc
and
push
std
adc
sub
loop
jmp
fcmovnbe
xlat
xor
scas
push
out
sbb
jo
mov
xchg
movsl
loop
pushf
jl
sbbl
pop
sub
jae
insl
std
int
and
arpl
mov
ja
mov
dec
cmp
xchg
add
pop
xchg
mov
nop
jbe
xor
sbb
cmpb
cwtl
or
or
in
fbld
test
ss
loopne
push
xlat
div
push
mov
push
das
lea
pushl
cmp
int
xor
adc
cmp
shll
lods
imul
cmpsb
lock
sub
push
lahf
sbb
fldl2t
movl
xchg
pop
push
xor
mov
and
jno
or
je
push
dec
push
dec
and
in
xchg
adc
pop
cmp
outsb
pop
cwtl
and
fstl
mov
jae
mov
popa
jle
adc
pop
pop
inc
pop
in
stc
inc
rolb
pop
int3
movsb
mov
cmp
test
adc
pop
pusha
dec
mov
mov
sub
sub
das
mov
push
mov
mov
or
in
xchg
inc
outsl
and
mov
jo
pop
rorl
stos
jno
mov
into
je
loop
jl
mov
jle
ret
das
sbb
pop
pop
jb
fbld
pop
jne
outsb
adc
xor
jne
mov
add
out
jmp
mov
jnp
or
push
adc
clc
inc
push
xchg
mov
add
ror
pop
cmc
add
sbbb
inc
pop
shl
std
cmpsl
cs
aas
add
sarl
dec
std
ret
lds
dec
sahf
xor
insb
lods
xchg
testb
rcr
icebp
fs
or
push
mov
adc
insb
push
jg
inc
mov
stos
cld
test
lds
clc
ja
pop
jmp
mov
sub
mov
jo
scas
les
jge
sub
out
xchg
incb
xchg
loop
rorl
add
lods
ja
popl
in
imul
jb
in
jmp
repnz
movsl
imul
jp
insb
sub
jmp
add
rorb
cmc
add
addl
lret
add
das
test
das
xor
jmp
jbe
lods
dec
inc
ss
and
dec
daa
mov
sar
jbe
cmp
dec
les
pop
and
pop
jp
fsubrs
xchg
out
adc
stos
les
lcall
dec
add
negl
outsl
mov
clc
out
scas
adc
into
push
pop
dec
mov
popf
test
xor
xchg
xchg
popf
xlat
cmp
in
inc
add
stos
sbb
lea
notb
cmp
bnd
ljmp
xchg
pushf
sub
loop
dec
cmp
inc
in
xchg
jae
xor
shll
push
jmp
cmpsb
sub
leave
or
jae
sar
ret
call
jno
jg
lods
jb
mov
push
inc
xor
sub
stc
and
mov
shrl
in
ljmp
rcrb
pop
ret
lods
fcoml
pop
and
fadds
cld
inc
jb
fdivr
cwtl
and
movsb
aaa
push
mov
mov
arpl
cltd
sahf
xor
jecxz
movsl
movsb
loope
test
xchg
mov
xchg
cmpsb
inc
mov
nop
mov
dec
pop
sub
xor
sub
shll
and
mov
dec
mov
icebp
sar
inc
sti
bound
ss
sbb
aam
adc
or
out
sbb
clc
mov
lea
sub
pop
ds
inc
push
mov
pop
xor
lcall
das
xor
push
add
cmp
js
inc
or
in
in
cs
adc
je
mov
fst
js
sub
cs
stc
sub
stos
mov
sub
test
push
jae
or
loop
add
dec
aaa
jle
jno
mov
testb
lcall
in
fwait
xchg
hlt
inc
es
ds
lret
repnz
aas
cmc
jge
or
add
xchg
cmp
fsubl
jno
neg
push
out
cmp
cs
adc
cmc
loopne
lods
sub
cltd
inc
xor
jge
mov
dec
out
sarb
imul
sti
inc
adc
fnstcw
outsl
jp
mov
jge
dec
scas
and
cmpb
jmp
xchg
or
ss
jb
into
es
int
xchg
add
pop
sbb
or
sahf
jo
xlat
lds
std
mov
popf
out
mov
cmc
movsb
loope
sbb
insl
js
imull
rclb
addr16
int
loop
jp
mov
mov
mov
in
stos
in
or
sub
jp
xor
cmp
pop
mov
or
xlat
push
and
jp
push
sub
and
lds
popa
ja
ss
ds
pushf
mov
mov
data16
nop
jle
xor
xchg
sbb
test
lahf
cltd
adc
xchg
shll
inc
adc
mov
lds
xor
adc
mov
jns
pop
mov
sbb
arpl
out
cmpsl
cmp
push
fstpt
ror
sahf
adc
ljmp
loopne
lret
lds
je
gs
push
sbbl
fwait
je
mov
push
movsb
inc
pop
cmp
mov
jb
je
push
orb
aad
add
test
rorl
add
push
xor
test
and
and
sahf
ret
jecxz
jl
add
enter
arpl
add
pop
js
and
sub
jns
ljmp
pop
mulb
mov
sub
xor
repz
add
mov
hlt
add
jno
lahf
cli
push
lds
bound
fabs
lods
jle
loop
inc
push
push
shl
loop
fwait
test
bound
mov
or
fcomip
movsl
and
out
push
js
push
xchg
daa
xchg
sahf
pop
add
xchg
sbb
sbb
fwait
add
or
aad
loope
aaa
inc
movsb
xchg
cmp
data16
mov
fs
aaa
fldenv
mov
shr
pop
fdivrl
inc
push
jb
sub
sahf
xchg
rclb
sti
dec
pusha
aaa
cmp
sbb
sub
or
push
incl
fs
insl
addr16
sbb
call
mov
sahf
adc
jl
lret
pop
cmp
xchg
mov
inc
xchg
loop,pn
inc
mov
add
sbb
rcrb
push
stos
movsl
jae
mov
xor
cli
insl
lcall
std
and
cmp
jl
adc
xchg
mov
vpshuflw
jmp
inc
insb
cmp
mov
stc
fwait
sbb
lcall
pop
imul
adc
insb
imul
out
in
jne
sbb
or
pushf
call
add
push
aas
fcomps
int3
mov
or
xor
lret
mov
ljmp
fyl2xp1
pusha
inc
sarl
add
out
and
shrb
inc
test
sub
mov
pop
xor
loope
push
pop
mov
das
cmp
cwtl
xor
mov
lahf
or
sbb
clc
xor
xor
sahf
dec
and
data16
fistpll
repnz
cmpsb
fwait
test
cmp
add
shlb
mov
leave
fbstp
testb
popf
divb
nop
inc
inc
dec
int3
das
dec
xchg
stc
jbe
test
add
dec
mov
cltd
in
and
or
gs
sbb
loope
gs
adc
xchg
lahf
jo
sbb
xchg
rclb
xchg
es
mov
aad
shr
ficoml
jl
lret
sub
cli
push
arpl
add
frstor
out
xor
call
outsb
fs
sarb
mov
aaa
add
sub
pop
and
fidivrs
mov
outsb
adc
mov
cwtl
add
test
loopne
push
idiv
cmp
mov
adc
mov
sub
pop
dec
add
sub
int3
mov
mov
xchg
shll
xor
xchg
push
les
movsb
mov
lea
lahf
and
movsb
rep
pop
pop
mov
adc
ljmp
insb
mov
fdivrp
stos
nop
testl
cmp
push
aam
pusha
mov
push
xchg
jl
mov
mov
ljmp
movsl
insb
out
arpl
xchg
inc
pop
mov
stos
lock
imull
xor
ss
cs
faddl
shlb
cmp
cltd
mov
xorb
std
ss
and
inc
mov
mov
cmpb
push
push
fldl
or
fisttps
mov
add
or
insb
out
inc
mov
enter
icebp
sbb
jno
cwtl
push
test
xor
repz
cmpsl
sbbb
out
lock
cmp
adcb
popa
dec
int3
jmp
xchg
mov
xor
cmp
sub
mov
pop
add
cmp
add
rolb
mov
je
lahf
rorb
jmp
in
and
repz
loope
mulb
and
ffreep
sbb
and
in
mov
mov
xor
cmp
dec
inc
jne
adc
lret
test
lods
rcr
mov
jp
lret
mov
mov
pusha
pop
mov
sub
xor
xchg
mov
sub
or
test
push
lret
ficoms
dec
sbb
movsl
adc
jnp
in
outsl
push
fwait
pop
lock
xor
push
mov
jne
ss
pop
cmpsl
push
pop
mov
push
adc
inc
in
xor
rcl
scas
jge
cmp
fcmovb
in
jnp
aas
leave
jp
push
adc
mov
lds
das
xchg
add
cmp
iret
sarb
adc
jp
into
mov
ja
dec
sub
stos
mov
inc
rcll
fisttps
aaa
test
xor
xorb
xor
jp
pushf
xor
cmp
mov
pop
mov
data16
movsl
xchg
sub
push
cmpb
pusha
enter
cmpsb
popa
andb
xlat
push
outsb
mov
jg
fsubrs
loop
mov
mov
jnp
mov
xchg
dec
jecxz
cmc
push
add
pop
mov
jmp
cmp
inc
xchg
sub
push
mov
mov
mov
test
pop
test
mov
push
insb
pop
pop
mov
add
mov
sub
ss
xchg
xor
popf
mov
test
clc
lret
add
jg
ss
rcrl
push
inc
repnz
insb
int
mov
mov
dec
outsl
add
sub
push
jmp
call
push
popf
sahf
jns
pop
xor
sti
push
dec
xchg
sub
int3
xorl
aad
pop
lcall
insb
sbb
push
dec
cmp
adc
jmp
sub
sbb
mov
xchg
cmpsb
sub
sub
dec
add
std
out
lods
lods
sbb
ret
push
subb
add
xchg
outsb
push
jmp
dec
dec
bound
and
add
cmp
mov
clc
lahf
adcl
call
mov
push
icebp
flds
xor
xchg
mov
cmp
out
enter
stc
imulb
cld
test
sub
mov
stc
test
cmc
inc
push
cmpsl
xchg
mov
jmp
cmp
fisubrs
xor
xchg
mov
push
and
jae
loope
test
xorb
jl
mov
pop
push
sti
clc
sub
jo
push
je
sbb
loopne
xchg
lret
popa
inc
mov
xor
sbb
mov
xor
ds
rorb
and
lods
push
imul
fists
daa
fdivs
in
mov
mov
pop
xchg
mov
dec
sub
push
inc
cmp
mov
lock
clc
inc
or
iret
shll
mov
adc
sub
pusha
ljmp
jnp
xchg
aas
or
and
dec
je
movsb
dec
push
in
test
xlat
inc
stos
mov
cli
sub
hlt
loopne
into
inc
mov
lret
into
xchg
add
movsl
ds
mov
push
mov
pop
fwait
dec
es
jmp
in
iret
add
and
and
gs
dec
dec
fsubp
ljmp
icebp
movsl
sbb
mov
or
in
dec
nop
mov
inc
rol
and
adc
or
test
testl
test
mov
out
add
in
xchg
adc
adc
in
inc
xchg
xchg
call
sahf
add
jmp
lret
adc
or
les
push
add
cmp
loope
mov
out
pop
add
sbb
lcall
xchg
iret
jbe
jge
dec
cmp
dec
ret
fs
and
or
sub
enter
cmp
jecxz
out
std
lcall
or
inc
or
push
xor
xlat
data16
dec
xchg
xchg
sbb
push
dec
xor
add
cmpsb
cmp
cld
hlt
loopne
hlt
lds
daa
mov
pop
or
in
mov
stc
cmp
jne
out
fwait
scas
push
push
push
add
cmc
xchg
decl
mov
jle
xor
dec
rcr
lret
sti
lea
in
dec
jg
cwtl
pop
jl
lds
outsb
and
jge
sbbl
stos
inc
fwait
inc
lods
cmp
push
inc
jo
cwtl
xor
dec
sahf
imul
rcrb
int3
sbb
mov
add
xchg
pop
dec
push
in
loop
fcoml
es
cwtl
mov
into
lea
jo
xchg
jecxz
rorl
mov
jle
push
scas
jmp
cmp
lret
mov
cmp
inc
inc
movsb
mov
mov
insb
int3
decl
cld
aas
push
sbbl
stos
leave
nop
in
arpl
mov
or
subb
leave
lfs
fldcw
mov
arpl
repnz
jno
mov
pop
or
cld
mov
xor
add
inc
in
mov
xor
push
and
inc
mov
pop
fisubs
insb
inc
push
rolb
xlat
ret
icebp
in
push
test
test
mov
pop
sti
aas
rorb
stos
and
stos
ret
lea
xchg
into
setae
lock
cmp
dec
ret
leave
not
sbb
pop
xchg
lahf
dec
js
insl
adcl
les
lea
sbb
and
orl
add
pop
ficoms
xor
fwait
xchg
add
insb
dec
psllw
xchg
push
push
test
mov
fwait
lcall
mov
gs
xchg
xchg
push
and
in
adc
aaa
push
cmpsb
and
mov
add
out
mov
dec
sub
xchg
iret
push
aas
insl
cmp
insb
les
fistl
pushf
pop
mov
aaa
test
dec
int3
rorb
push
rolb
push
and
fcmove
pop
and
movsb
push
inc
je
in
repnz
mov
sub
or
fucomip
jbe
sbb
lock
jno
lret
xor
ss
lahf
pop
psrlw
jl
jb
ja
rcll
adc
jl
stos
or
fwait
pusha
push
rcr
mov
jge
jno
out
push
mov
cwtl
rcrb
cmp
jl
imul
push
sbbb
mov
sbb
fstl
mov
or
add
push
scas
aas
xchg
xchg
jg
scas
addl
push
ss
iret
jle
fmuls
mov
in
into
cmp
xor
sbb
xchg
sub
sbb
push
shrl
pushl
cs
popf
fistps
fwait
dec
movsb
sbb
in
sbb
shlb
dec
mov
sub
stos
sahf
stos
notb
repnz
and
add
neg
or
inc
imulb
rorl
mov
fstl
inc
lea
fistps
cmovb
ret
popa
xor
int
cmp
push
out
ljmp
push
lods
xchg
repnz
xchg
or
mov
test
sub
jge
mov
xchg
inc
stc
fbld
enter
adc
and
lds
js
cs
jmpw
daa
dec
addr16
pop
iret
cmpsb
adc
nop
popf
pop
jg
mov
ret
jbe
sbb
jecxz
xor
leave
ja
xchg
lods
push
adc
inc
adc
lret
btr
es
xchg
pop
jnp
pop
mov
cs
push
mov
cmp
fstpl
or
insl
xchg
sbb
cmp
push
xor
ja
cmpsb
iret
sub
mov
add
inc
idivl
shll
inc
cmp
inc
pop
dec
or
push
pop
in
adc
in
pop
dec
pop
icebp
sbb
push
je
fstpl
mov
pop
pop
cmp
xchg
lea
out
ljmp
lock
fistl
xchg
sbb
jp
orb
loope
push
xchg
dec
lea
mov
inc
lock
imul
out
ljmp
fcmovb
imul
xor
xor
cmp
pop
lea
adc
xor
sysenter
jbe
pop
cli
loope
push
inc
mov
push
inc
iret
xor
xor
ficoms
cmpsb
jo
push
xchg
dec
and
mov
mov
in
cld
cmp
es
movsb
mov
jl
rclb
inc
js
cmpl
test
sti
imulb
rcrb
mov
mov
or
fdivl
xchg
int3
mov
mov
lea
and
cmpsb
mov
pusha
lret
daa
dec
jb
ret
cmp
cmp
pop
jmp
out
inc
inc
dec
repnz
fidivrs
inc
jg
ja
xor
fdivrs
ds
push
sahf
in
and
sbb
loopne
mov
and
xor
pop
add
push
and
ror
adc
pop
arpl
cmp
sub
hlt
aaa
cwtl
xchg
jbe
dec
hlt
adc
pop
scas
adc
dec
repz
xor
lds
stos
int3
lock
push
imul
enter
ror
push
aaa
aam
mov
rcrb
pop
sub
shrb
mov
lods
adcl
push
push
pop
inc
or
andb
pop
addr16
fildl
push
xchg
ss
inc
xchg
outsb
mov
push
outsl
pop
sbb
mov
icebp
arpl
psllq
scas
push
inc
cmp
jno
dec
aas
aam
and
mov
jmp
rclb
push
cmc
das
in
mov
mov
pushf
adc
into
stos
adc
rorl
stos
add
jne
jns
mov
call
push
cmpsb
sub
push
out
xchg
push
mov
jp
push
pusha
outsb
mov
lods
aas
in
std
shrl
cmp
push
push
aam
fwait
mov
dec
xchg
mov
mov
icebp
ja
movsb
add
or
into
jbe
mov
out
xor
adc
sub
in
mov
jnp
mov
lret
ss
cmp
enter
add
or
pop
movsb
fwait
jecxz
or
inc
imul
cmp
xor
cwtl
add
rcrb
mov
test
xchg
pop
jo
sbb
mov
lea
imul
sarl
push
shl
test
insb
std
mov
push
inc
lahf
mov
push
xchg
add
and
push
and
cmp
arpl
je
cltd
add
push
sub
sub
scas
fsubs
mov
sub
insl
xchg
fstpl
cmp
movsl
outsl
add
lods
lahf
push
xchg
push
dec
clc
stos
ja
cmc
lret
or
adc
shlb
mov
cmp
sbb
and
mov
jecxz
and
jl
dec
pop
sahf
sub
pop
jno
mov
dec
mov
sbb
or
mov
mov
pop
pop
outsb
sbb
jge
mov
mov
mov
adc
daa
in
lock
je
jno
jbe
int3
nop
sub
jae
aas
sbb
dec
cmp
or
or
fadd
sbbb
cpuid
mov
jmp
xchg
in
cmp
push
fstl
lret
in
ss
rcrl
pop
cli
fsubrl
popf
xchg
push
and
and
cld
push
loope
rcll
stc
jl
mov
in
sbb
sbb
insl
mov
lahf
cs
dec
push
xchg
movsb
xor
dec
lods
cltd
nop
xchg
in
ret
cli
cmpsb
iret
dec
mov
in
dec
sub
out
test
sbb
cmp
dec
or
sbb
sub
mov
push
mov
in
leave
or
repz
mov
and
cmpsb
mov
adc
cmove
lret
mov
ret
sub
js
or
das
cwtl
adc
shrb
or
rcrl
xchg
push
mov
ljmp
mov
jecxz
cmp
js
jo
or
das
sti
call
mulb
cmc
aaa
outsl
mov
mov
sub
pop
mov
cwtl
movsb
or
mov
in
pop
jae
aaa
add
xor
mov
pusha
push
mov
insb
adc
mov
or
bound
fidivl
popa
out
les
sbb
mov
stos
mull
xchg
cmpsl
or
shlb
adc
adc
fstpt
push
inc
sti
mov
out
xchg
nop
icebp
lock
push
push
cwtl
add
jg
cli
sub
mov
add
dec
push
int3
pop
lods
call
dec
push
pop
es
ss
mov
sub
inc
ret
adcb
dec
dec
fscale
jmp
jp
sbb
es
scas
sbbb
cmp
push
in
sub
inc
or
ljmp
into
pop
lods
js
fiadds
mov
adcb
add
ljmp
push
iret
mov
arpl
frstor
cmp
gs
lock
fstps
push
xchg
lret
nopl
mov
add
xor
sbb
repz
fimull
add
test
repz
dec
dec
adc
mov
and
sti
mov
jmp
mov
aad
fcmovbe
sub
dec
test
aam
sti
adc
pop
out
mov
into
or
xchg
cmp
jmp
and
into
mov
jnp
call
ljmp
stc
add
sub
stc
lret
les
ja
mov
sbb
popf
mov
sbb
sub
add
scas
iret
loope
iret
cltd
inc
adc
or
fmull
mov
in
push
shrb
inc
or
sub
or
push
add
les
mov
mov
push
and
pop
cmpsb
inc
insl
push
in
add
sbb
inc
loope
enter
sub
xor
test
mov
xorl
mov
sbb
es
imul
in
stos
and
or
ss
iret
mov
sub
out
stos
xor
inc
shlb
fdivrp
mov
sbb
pop
test
dec
into
inc
pop
mov
icebp
cld
xlat
out
mov
lods
adc
out
jae
pop
add
out
dec
mov
dec
cmp
xor
and
or
pop
dec
jl
test
dec
dec
add
mov
add
adc
cwtl
cmp
into
and
mov
mov
jmp
fildl
fbld
sub
loopne
into
mov
subl
dec
mov
pop
es
ja
stc
cmp
pop
dec
je
pop
or
andb
inc
lock
ja
pop
or
popf
xor
ret
mul
mov
add
jp
data16
int
jae
inc
sbb
cwtl
movsl
inc
inc
mov
das
and
cld
inc
adc
fs
roll
cmp
lods
mov
dec
jae
pop
aas
testb
lahf
pop
lds
sub
out
std
push
mov
pop
test
push
aad
cmp
pop
push
mov
push
imul
inc
repz
sbb
add
mov
test
pop
sub
pop
adc
jbe
xchg
stc
xchg
in
xchg
push
push
sti
or
pop
test
ret
pushf
call
dec
cmp
js
inc
fnstsw
sub
sti
dec
xlat
clc
xchg
pusha
inc
push
jo
js
push
mov
pushf
clc
fistps
cmp
mov
xchg
pushf
adc
sarb
mov
cmp
mov
add
add
mov
movsl
mov
xchg
add
push
sub
push
jno
mov
popa
sbb
pop
jmp
add
cwtl
inc
in
jne
sub
icebp
test
dec
in
clc
das
xor
push
int3
and
jno
int3
inc
in
pop
into
sbb
pop
add
cmp
lret
cmpsb
sub
or
ss
test
pop
mov
push
sbb
mov
call
push
or
pop
adc
ds
ret
ret
mov
xchg
inc
pop
repnz
jl
sarb
mov
rcrb
test
mov
stos
inc
sbb
sbb
hlt
add
aaa
push
fdivrl
fldenv
outsb
std
test
lret
mov
jno
imul
cld
dec
xchg
and
pop
pop
outsl
sbb
loop
xchg
rcll
xchg
js
or
loop
jmp
xlat
xor
adc
xchg
ret
in
insb
dec
movsl
stc
sbb
lock
repnz
sti
rorb
cld
cs
test
ficoml
cwtl
ss
mul
jecxz
fidivs
loop
loop
hlt
rorb
testl
stos
pop
push
imul
jge
popa
inc
mov
inc
add
dec
cmp
cwtl
imul
inc
cmpsb
jnp
leave
xor
lret
mov
dec
mov
popf
lods
sub
add
lods
add
clc
add
mov
fidivs
cmp
clc
add
jecxz
and
jle
sbb
fdivl
leave
mov
out
adc
sbb
nop
in
movsb
loope
lods
push
jb
pop
dec
and
and
imul
xchg
movsl
mov
push
pop
dec
pop
sahf
into
fcmovb
cltd
lcall
jecxz
mull
out
iret
addb
imul
insl
dec
dec
and
aad
ss
in
add
aaa
gs
pop
add
imul
dec
xchg
sbb
sub
push
adc
bswap
push
push
inc
mov
add
push
mov
mov
je
cmpsb
mov
cmp
jle
sub
pop
fsubl
adc
inc
int
mov
pop
std
push
add
jo
stc
jecxz
lcall
sbb
int3
and
mov
int3
subb
or
je
push
movsl
sub
add
jne
push
cmc
out
cmp
and
mov
add
out
xchg
jnp
push
mov
pop
pop
jnp
imul
addr16
dec
loop
cwtl
mov
mov
or
cmc
push
cmp
mov
nop
mov
movsb
or
inc
nop
push
ror
jnp
inc
lret
push
pop
pop
pop
out
cmpsb
jle
mov
pop
cli
mov
add
inc
add
imul
or
xchg
shll
cwtl
lahf
movsl
push
fwait
mov
xor
sub
xlat
rorb
sbb
xchg
lret
jb
lea
cs
or
and
in
jne
out
leave
add
mov
std
in
gs
lret
pop
ljmp
addr16
inc
in
dec
sbb
pop
jg
mov
cmp
and
fsts
mov
out
cmpsl
stos
shll
sahf
adc
pop
out
insb
dec
fwait
and
in
jo
jbe
and
or
ljmp
ds
jle
mov
sub
imul
mov
mov
mov
pop
inc
aam
lcall
outsl
test
jns
or
jmp
jp
in
xchg
mov
sub
mov
rolb
mov
lods
fbstp
lds
fwait
push
pop
fldl
ret
add
dec
add
push
pop
push
fbstp
lret
jmp
scas
in
incl
sbb
mov
sub
scas
push
xchg
pop
imull
mov
jne
xor
outsl
fsubrl
mov
daa
cmp
cmp
loopne
mov
and
ss
jle
mov
pop
jae
fisubs
and
sub
icebp
test
fwait
cmp
hlt
mov
arpl
mov
js
add
mov
xchg
pusha
push
adc
in
int
xor
or
sbb
adc
sbb
pop
sub
inc
and
and
test
or
inc
movb
jge
jns
adc
jp
rcr
dec
sbb
push
cli
rolb
cld
mov
adc
mov
dec
jmp
fdivrs
and
lahf
xor
int3
pop
mov
repz
in
fwait
xor
cmp
xchg
jp
xlat
pop
jle
out
add
stos
popa
inc
sbb
repnz
scas
dec
jb
or
or
dec
inc
mov
mov
int3
inc
dec
push
stc
hlt
sbb
mov
in
and
or
into
push
into
addr16
inc
sbbb
or
sub
outsl
sub
insl
enter
adc
push
test
into
mov
jle
cmp
jno
jge
ds
popf
outsb
jl
movsl
sti
cmpsb
in
add
in
inc
call
sbbl
out
mov
adc
jmp
xorl
fidivrs
in
repz
outsl
push
inc
adc
sub
insb
inc
mov
mov
cmp
cmc
pop
sti
push
loop
jl
xchg
data16
add
lods
divl
mov
mov
dec
mov
lahf
rcl
jmp
xor
push
dec
movsb
stos
stos
fwait
mov
subl
mov
and
aam
lock
shr
pusha
sub
ret
mov
xchg
popa
daa
add
or
scas
test
nop
clc
push
popa
fsubrl
and
std
mov
sub
daa
xchg
outsb
inc
mov
inc
in
imul
pop
inc
pusha
fs
cltd
stos
xor
mov
jmp
adc
add
sub
xchg
inc
aas
dec
adc
mov
jmp
es
mov
ret
pop
stos
pop
enter
insb
aaa
mov
ss
sub
mov
or
mov
subb
movsb
xchg
sbb
sahf
inc
jbe
ds
imull
add
shlb
and
in
rolb
call
jp
imul
movsl
mov
dec
inc
sbb
mov
push
lds
cmp
mov
sub
adc
add
hlt
shl
scas
fdivr
test
cwtl
popf
add
aaa
je
mov
bound
jne
sub
rcr
inc
push
add
insl
sbb
in
pop
pop
fiaddl
dec
sbb
add
xor
loopne
scas
inc
xchg
cmp
pop
cmp
leave
dec
or
sbb
inc
xor
jnp
movsl
push
mov
mov
xchg
dec
jp
outsl
mov
scas
jmp
repnz
and
dec
stos
jns
je
mov
aad
outsl
pop
outsl
lods
push
and
popf
and
cwtl
push
and
cld
mov
lods
mov
pop
outsb
and
dec
bound
popf
outsb
enter
in
pop
cmp
loop
pop
imul
ds
mov
outsl
adc
add
insb
push
push
mov
adc
adc
je
mov
lds
dec
insl
adc
test
mov
dec
jbe
popl
dec
clc
mov
stc
mov
jne
cwtl
ret
mov
pop
shrl
popa
jne
mov
xchg
fnsave
jmp
lret
ja
out
aaa
jne
orl
lcall
int
rcrl
movsb
cli
in
loope
imul
add
or
std
pop
or
fldt
lods
xchg
daa
inc
mov
xor
cmp
scas
jle
insb
inc
jle
sub
cmp
sti
mov
dec
dec
loop
push
stos
xchg
lahf
inc
loope
adc
inc
xchg
jae
mov
dec
aad
jnp
jnp
xchg
sbb
ljmp
fbld
push
mov
jo
aad
xchg
mov
cmp
mov
dec
pop
bnd
insl
jle
incl
ljmp
or
sahf
nop
mov
adc
jne
imul
xchg
inc
jp
rcl
hlt
cmpsb
test
xlat
cmp
js
lock
repz
xchg
sub
pop
mov
xchg
push
mov
rcrl
in
xchg
pop
and
ror
mov
and
add
lret
test
ror
mov
nop
mov
push
shrl
adc
scas
sub
inc
dec
sub
loope
pusha
mov
lock
xchg
jne
xor
js
int3
inc
fldl
jl
cli
xchg
fcomps
push
enter
xchg
int
iret
inc
fwait
cmp
pop
pop
imul
sbb
mov
lods
rolb
mov
mov
sbb
xchg
popf
inc
cltd
mov
xchg
pop
xor
fiadds
outsb
int3
xchg
and
out
push
ror
mov
xchg
and
xchg
xor
int3
mov
std
in
cmpsl
pop
gs
imul
mov
adc
repz
jne
aam
or
ss
or
adc
add
rorb
sahf
mov
mov
and
scas
outsb
jo
minps
out
jl
test
push
jne
scas
pop
ret
arpl
filds
sar
mov
cli
mov
pop
cmp
les
cmp
push
roll
ffree
push
jno
inc
aas
imul
adc
cli
stos
pop
jmp
inc
scas
call
cmpl
sub
ds
cltd
jmp
pop
stc
aaa
cld
push
jmp
data16
decl
iret
adc
add
outsl
fisubs
lcall
mov
jae
stos
add
jae
jmp
pop
mov
lea
in
or
xor
out
cmpsl
pop
xor
pop
sub
insb
movsb
scas
lods
adc
jle
push
xchg
out
aas
pop
jge
pusha
mov
push
daa
mov
repnz
add
test
jp
cwtl
popf
jae
jle
push
mov
add
sub
jle
mov
xor
test
mov
out
sbb
inc
mov
xor
imul
cmp
jne
jg
int3
mov
inc
pop
pop
clc
test
push
fstl
mov
adc
movsb
mov
stc
movsb
cmp
inc
divl
xchg
mov
ret
repz
pop
and
lea
inc
and
mov
inc
jmp
jmp
pop
push
lret
jge
int
daa
inc
cmp
std
or
cs
out
ja
mov
lret
adc
push
xchg
cli
or
outsl
dec
icebp
leave
mov
cmovbe
inc
xor
mov
pop
and
insb
mov
pop
lret
lods
pop
push
sub
ljmp
jp
xor
or
rcrl
jo
orl
loopne
jge
call
insl
icebp
fst
sbb
push
fnstcw
lods
push
xor
insb
fmuls
and
jmp
dec
sti
mov
out
out
stc
ss
jmp
mov
add
push
enter
xchg
ljmp
mov
nop
push
push
xor
cmp
push
lods
das
nop
jbe
mov
mov
jecxz
imul
bound
and
scas
jns
sarl
out
icebp
out
outsb
mov
push
cmp
adc
and
in
mov
stc
lcall
arpl
xchg
cmp
sbb
fdecstp
xchg
lcall
push
push
jp
mov
inc
xchg
xchg
fcoms
pop
repnz
and
out
and
lahf
add
addl
jbe
lods
movsl
popf
xor
cmp
xchg
cmp
in
pop
sub
cmp
in
int
push
mov
jl
mov
insl
mov
mov
add
out
and
cli
push
hlt
mov
or
xor
dec
sbb
loop
add
rcrl
xor
add
xor
ja
inc
test
lock
fldt
fwait
repnz
mov
or
pop
inc
mov
daa
das
lcall
in
pop
sahf
test
and
cmp
pop
cs
and
add
jns
ljmp
cmp
arpl
les
add
mov
lods
stc
popf
adc
mov
imul
push
cmp
cmp
dec
sbb
mov
mov
outsb
mov
fldl2t
jns
sub
loope
js
cmpsb
divl
jmp
shll
mov
mov
add
imul
ja
xchg
inc
sbb
or
dec
sbb
mov
pop
pop
stos
jo
inc
mov
add
push
pop
jns
or
xchg
jge
loopne
fcmovu
lcall
movsl
mov
xchg
push
ds
pop
sub
dec
lret
addr16
leave
std
incl
inc
pop
nop
mov
loopne
xchg
xor
into
jg
jge
shll
fcmovu
mov
filds
inc
cmp
and
push
sbb
fstp
mov
xchg
fistpl
jbe
out
push
push
imul
inc
xchg
arpl
cli
shrl
sarb
xlat
lods
pop
jge
das
out
mov
rcrb
push
test
outsb
lods
inc
pop
lret
add
je
mov
repnz
xchg
movsl
lcall
sub
pushf
repnz
cmp
pop
cli
lcall
cld
mov
xchg
cmpl
xchg
pop
add
mov
cmpsl
cmp
and
int3
lods
push
ds
cltd
push
or
rcrl
pushf
xor
push
stc
xchg
lret
jbe
pop
mov
xlat
shl
mov
xchg
inc
cmp
cmpsl
lock
cltd
cmpsl
jne
es
test
dec
xchg
inc
sti
mov
add
or
mov
std
inc
push
sbb
pop
dec
in
dec
adc
xor
shrl
mov
int
pop
push
cmp
in
pop
sub
cmp
pop
out
adc
lds
jno
cmp
cmc
mov
hlt
push
lcall
push
mov
nop
xchg
data16
inc
adc
jecxz
sub
data16
jb
lods
jecxz
cli
cmpl
test
and
rcrb
shll
inc
int
and
inc
pusha
mull
and
or
jo
sahf
jo
adc
adc
cld
out
insl
xchg
lahf
jns
sub
xchg
pushf
outsl
and
pop
jbe
test
test
jnp
jl
das
into
fmul
out
pop
and
lods
stos
jns
mov
ret
pop
push
cmc
cmpl
jp
xor
mov
and
mov
and
push
int
mov
in
sahf
ss
enter
fiadds
inc
out
sbb
jp
jg
ljmp
cmpsl
dec
jno
pop
xchg
dec
sub
mov
adc
and
xlat
ljmp
lret
leave
xchg
clc
sub
push
cld
or
ds
notb
lret
xchg
pop
lcall
push
loopne
sahf
mov
sub
xlat
cmc
loop
or
call
add
mov
push
inc
pop
xor
mov
push
inc
rolb
test
jp
pop
mov
aaa
xchg
adc
jge
enter
icebp
cltd
movsl
adc
scas
insl
scas
repnz
arpl
inc
adc
and
cmpsl
push
jg
ds
testb
pusha
imul
jae
mov
add
cmp
pop
jmp
mov
daa
add
sti
sbb
icebp
cmp
mov
push
ja
push
mov
push
push
popa
lcall
loope
ja
dec
out
jge
ficoms
add
mov
pop
sar
sub
adc
or
cmp
adc
ret
mov
fnsave
add
pop
sbb
fwait
or
mov
rcr
roll
mov
mov
sbb
xchg
add
fdivl
sub
pop
or
inc
push
decl
subl
ss
lods
adc
jmp
popf
int
or
mov
push
mov
test
mov
cmp
daa
mov
adc
lret
adcl
xchg
mov
addr16
je
jl
loopne
push
lock
test
xchg
jne
fnsave
push
mov
pop
dec
fwait
xchg
add
cmpsl
cmova
into
mov
jl
insb
jge
outsb
popa
mov
mov
pop
movsb
sbb
add
add
sbb
iret
or
or
mov
mov
ds
mov
pop
lret
stc
repz
jnp
dec
ss
push
fdivrl
adc
loopne
sub
int
adc
fistpll
test
push
in
imul
call
push
imul
loop
ror
xchg
pushf
into
lcall
fisubs
lock
in
or
in
ljmp
into
fbld
aas
fsubrp
push
out
fstpt
sbb
xor
pop
rol
inc
add
pop
mov
xor
in
cmc
leave
mov
sub
xlat
adc
stos
and
lds
mov
loopne
cmpsl
add
xlat
ds
js
lods
inc
popa
outsl
lods
ja
mov
movb
jmp
fisubs
jge
ror
mov
aam
cmp
jns
and
lds
out
std
sbb
xchg
dec
popa
scas
ss
pusha
insb
loop
lcall
jns
push
xchg
call
mov
sbb
cmp
xor
out
in
add
mov
mov
xor
xor
dec
into
rcl
xor
insb
sbb
iret
jb
sub
xchg
sbb
cmpl
pop
and
enter
inc
sub
adc
pushl
jae
dec
cld
mov
test
cmp
and
enter
ja
ss
or
sbb
xor
or
sub
xor
out
push
or
imul
sub
sub
in
or
sub
add
push
int
mov
xor
aam
dec
out
or
hlt
push
sbb
mov
leave
cs
cmpsl
fdivs
cwtl
dec
andl
les
sub
mov
inc
lcall
adc
mov
mov
sbb
scas
dec
ret
rolb
sar
mov
jb
shr
cmpsl
push
mov
enter
rclb
pop
mov
fisubl
mov
nop
testl
imul
jo
push
pop
dec
dec
dec
or
jg
popf
loopne
pop
xor
sbb
int
stc
int
jmp
inc
xchg
lret
push
jg
add
pop
sbb
xchg
ret
push
fisttpll
aaa
rcl
inc
jle
cmp
addr16
push
stos
jmp
jecxz
mov
ficomps
cmp
or
aam
fidivrs
adc
mov
add
arpl
aas
outsl
pop
jmp
inc
pop
push
cmp
mov
mov
aaa
fdivrp
xchg
stc
popa
or
mov
ljmp
mov
sbb
fwait
sbb
jnp
stos
leave
stc
je
fst
xor
push
sub
fimuls
adc
loopne
dec
cmpsb
push
adc
ret
jl
int
in
inc
jo
cmp
aas
cmpl
es
idiv
and
or
pusha
add
leave
jae
mov
sbb
dec
mov
rcrb
dec
push
sbb
sbbb
adc
test
iret
jmp
sbb
mov
mov
xchg
fisubrs
imul
lret
negl
hlt
jb
jle
mov
popa
mov
sub
xchg
cs
cs
mov
pop
fdivrs
mov
inc
es
jmp
or
aam
stc
xchg
les
jp
popf
push
call
pusha
lahf
out
aad
mov
stos
mov
ja
mov
sbb
mov
cmpsb
insl
cmpb
xlat
inc
sub
dec
or
in
stos
cmpsb
out
pop
push
jl
inc
iret
mov
sti
test
pop
inc
mov
int3
jb
pop
and
arpl
out
dec
adcb
lahf
int
in
xor
rorb
shlb
adc
xchg
sub
add
test
mov
or
mov
cmp
ffreep
cmpsl
mov
push
mov
rclb
loop
push
aaa
sbb
xor
push
mov
scas
mov
xchg
add
xchg
lret
mov
xchg
pop
inc
mov
push
inc
or
inc
cmpl
outsl
jg
data16
push
adc
es
iret
sbb
in
or
sbb
sbb
mov
xchg
inc
stos
shll
cld
sub
mov
test
loopne
stc
mov
sar
pop
sub
pop
ret
pop
xchg
mov
sbbl
sahf
jo
loopne
inc
lret
enter
rolb
pop
or
or
out
and
mov
cmp
mov
push
cmp
sbb
es
xchg
stos
inc
mov
sub
hlt
leave
fcoms
repnz
ds
cltd
add
inc
jbe
gs
and
mov
sub
cmp
pop
fmuls
adc
cmpsb
mov
int3
cmpb
mov
and
test
push
loop
inc
or
test
mov
jae
out
shufps
rorl
repz
stos
push
push
clc
adc
mov
dec
cmpsb
inc
lahf
mov
test
push
orl
or
cmpsb
mov
inc
mov
jmpw
lds
in
jecxz
mov
int
les
jmp
push
pop
out
inc
imul
dec
add
mov
adc
scas
jmp
les
xor
cmp
out
pop
fmull
cli
in
pop
adc
sub
cwtl
insb
mov
xor
cld
pop
lods
xlat
loope
inc
insl
ficoms
dec
pop
xchg
pop
int3
cld
clc
adc
enter
mov
icebp
clc
xchg
inc
in
loopne
push
push
stc
shrb
inc
mov
or
inc
sub
je
fwait
sbb
push
xor
jo
mov
andb
mov
jbe
lods
and
data16
sbb
shrd
test
push
mov
clc
add
aas
out
add
shrl
dec
aas
push
xlat
mov
pop
push
pop
iret
fldenv
insl
or
push
adc
movsl
sbbl
jae
icebp
scas
push
adc
mov
fldcw
pop
and
cmp
mov
xchg
pop
cmpsl
dec
sbb
std
and
test
or
das
dec
mov
inc
scas
leave
out
xorb
dec
notb
sub
xchg
dec
ss
mov
and
int3
mov
test
pop
nop
mov
cmpsl
xchg
xchg
cmp
jno
fs
loop
repz
mov
or
lret
bound
aas
imul
loope
adc
jmp
xchg
int
push
insb
cwtl
pop
dec
push
cmpsl
icebp
xor
mov
outsb
movl
push
push
and
ds
jp
and
or
scas
subb
xchg
push
ret
leave
pop
test
xchg
stc
mov
into
mov
sbb
add
outsb
cmpsb
test
inc
jno
mov
push
mov
bound
dec
cmpb
xchg
xor
mov
add
in
movsb
imul
je
mov
dec
xor
cmp
ljmp
je
daa
cwtl
das
test
sub
aam
inc
pop
jns
push
sub
decb
out
push
adc
fisttpl
xor
mov
sbb
dec
mov
add
xor
jae
cmp
ret
xor
mov
stos
enter
enter
rolb
movsb
out
inc
xor
nop
addr16
sub
clc
ja
sub
sti
xor
jg
out
fwait
sub
jge
xor
icebp
es
sub
add
shl
lcall
xchg
gs
push
jg
jl
dec
cmpsl
rorb
test
or
cmp
mov
xor
mov
sbb
adcb
in
mov
fidivl
movsb
sbb
cmp
rorl
jne
shll
jb
sbb
ljmp
or
sub
imull
xorb
adc
push
cld
call
push
and
lds
jle
bound
out
fidivs
mov
dec
in
outsb
iret
sub
negb
add
ret
cmp
pop
mov
mov
cwtl
in
cmp
fcomps
xlat
pop
insl
lds
dec
push
adc
xor
inc
aas
and
xor
add
sbb
jo
xor
pop
negb
ja
popa
aaa
mov
mov
cmpsb
into
add
cmpxchg
mov
or
sbb
enter
ret
xchg
popf
adcl
or
cld
aam
in
add
rsqrtps
rcrl
or
adc
adc
adc
daa
xchg
xor
jmp
hlt
fwait
xchg
fbld
mov
mov
outsl
or
xchg
jl
out
push
jno
out
jb
jno
in
es
cltd
popl
jmp
xchg
xor
aad
cmp
out
mov
or
test
addb
mov
sarb
fwait
xchg
xor
xchg
dec
cmpsb
lods
lcall
pop
lds
xchg
loope
jl
cmp
sti
jno
sahf
lret
divl
and
push
push
cmp
pusha
leave
mov
rcrl
loope
pop
xor
xchg
jg
dec
cmc
cmc
aaa
inc
lahf
dec
iret
sahf
loopne
or
add
in
xor
cltd
add
cmc
scas
inc
mov
cld
inc
repnz
mov
pop
ret
push
xchg
pop
imul
mov
pop
in
add
pop
jp
xchg
bound
add
sub
cmpsb
adc
xchg
xchg
mov
or
mov
stc
or
sbb
push
std
sbb
mov
xchg
sub
push
and
add
mov
pop
add
mov
xchg
and
pusha
pusha
xlat
aam
xor
cmpb
dec
ss
pusha
out
inc
out
dec
rcll
call
pushf
insl
sbb
out
rdmsr
out
xchg
sbb
xchg
adc
sbb
in
mov
push
cmp
sbb
hlt
testb
pop
mov
fimuls
xor
aad
cmp
aad
popl
cld
push
push
addb
ljmp
fidivs
cwtl
mov
lds
ror
mov
out
mov
push
insb
loopne
js
movsb
loopne
push
inc
in
sub
inc
xchg
pop
test
mov
dec
mov
das
ficoml
pop
cmp
in
mov
jns
in
or
in
add
push
sbb
pusha
pop
iret
js
pop
test
push
adc
arpl
bound
hlt
mov
mov
adc
popa
cld
into
repnz
cmovns
mov
loop
cmovo
mov
das
and
fmuls
jmp
xchg
rclb
pusha
ja
or
clc
sub
aad
push
clc
mov
pop
stos
test
lds
mov
out
out
dec
dec
loop
or
fwait
push
jmp
fisttps
sub
dec
push
stos
imul
mov
sbb
stc
and
enter
sahf
xchg
push
adc
stc
push
or
das
jg
pop
xchg
adc
jbe
or
jl
push
add
dec
mov
pushf
add
push
pop
dec
sbb
out
xlat
cld
add
popa
xchg
push
adc
pop
dec
aad
mov
and
ss
jmp
out
lcall
dec
inc
mov
push
sarl
repnz
icebp
dec
jae
jge
test
lea
int3
leave
mov
add
gs
mov
xchg
fbld
sbb
loopne
lock
or
pop
negb
addr16
in
dec
es
dec
cmp
out
jnp
sub
dec
test
pusha
add
xor
push
mov
nop
pop
xor
add
mov
pop
cmc
cmp
mov
cmpsl
sub
sti
add
je
pop
lcall
test
lods
push
push
mov
mov
out
sub
jne
add
sbbl
jge
out
pop
mov
je
ficomps
fbstp
out
lods
orl
mov
xor
adc
pushf
daa
cwtl
dec
push
adc
sbb
mov
lds
cmp
adc
lds
push
loope
sarl
sub
andb
push
jns
inc
push
nop
mov
scas
mov
mov
mov
rolb
iret
insb
aaa
test
test
add
mov
and
aas
loopne
mov
push
push
sub
repz
lods
call
popf
inc
xor
mov
or
insb
push
mov
push
jne
aam
mov
mov
test
and
xor
in
fwait
xchg
inc
push
stos
test
sbb
xchg
pop
push
push
xchg
mov
or
sbb
mov
out
stc
add
cltd
push
inc
or
sbb
push
test
jl
loope
rcl
xor
jno
cs
fsubl
dec
push
arpl
mov
pop
lcall
ret
test
add
jne
pop
rorb
xor
in
loop
ficoms
icebp
aas
adc
test
fsub
mov
xor
and
adc
mov
test
into
js
std
iret
cmpb
lods
mov
out
xchg
test
and
shr
in
cmc
cmc
mov
xchg
lret
mov
push
pushaw
mov
add
ljmp
and
es
and
add
inc
inc
xchg
es
sbb
sti
jecxz
add
inc
adc
test
arpl
lods
rcrb
in
mov
adc
lahf
out
pop
xchg
in
dec
pop
mov
add
shl
in
push
js
mov
mov
ficomps
imul
add
movsb
hlt
or
sub
test
popa
aas
mulb
adc
insl
mov
cmp
sub
mov
pusha
adc
ljmp
and
cmp
lahf
outsl
int
and
pop
or
mov
mov
mov
mov
int3
mov
call
sbb
fdivrl
or
or
push
insb
loop
std
mov
mov
mov
pinsrw
je
cmp
pop
cmp
out
sti
mov
fstl
iret
movsl
fmul
cmp
mov
hlt
cmp
test
mov
mov
dec
popf
cmpsl
cmpb
mov
push
in
add
inc
out
ss
cwtl
jnp
or
lret
das
jg
rcrb
pop
mov
sbb
sub
sbb
xor
mov
jne
enter
sbb
push
loopne
and
pusha
enter
xor
mov
ljmp
mov
xor
dec
inc
negb
inc
mov
pop
sahf
testb
mov
loop
cmp
push
mov
lock
aaa
mov
push
nop
shl
pop
xchg
orb
mov
jl
push
mov
pop
inc
mov
and
repnz
or
pop
andb
jo
mov
lods
adc
mov
rcrl
dec
xor
cmp
faddl
inc
sbb
jno
xor
popa
enter
test
fidivrl
or
pop
xor
mov
or
ret
loop
aam
cmp
ret
dec
mov
pop
orb
jle
sbb
xor
jg
jno
mov
and
mov
rcrb
cmp
push
imul
test
or
inc
imul
pop
lods
jmp
orl
push
and
rclb
out
dec
and
mov
push
lods
cmpsl
ror
nop
cmp
ljmp
xor
and
fbstp
sbb
sub
mov
mov
test
mov
sbb
in
icebp
inc
arpl
sub
int
dec
rcl
jl
cwtl
mov
nop
xlat
or
push
into
sbb
imul
pop
dec
xchg
cltd
or
sahf
sbb
stc
mov
mov
aad
pop
xchg
pop
int3
sti
aad
push
arpl
jg
xchg
mov
insb
in
add
or
nop
pushf
pop
xor
flds
and
cmc
or
jmp
outsl
push
sbb
das
xor
pop
mov
lods
xor
fnstenv
dec
mov
add
mov
outsl
mov
ja
or
movb
subb
je
add
fucomp
orl
movsb
loopne
mov
fcompl
pop
fiaddl
inc
sub
cmp
mov
sahf
sub
cwtl
mov
insb
xor
loop
adc
jne
mov
enter
xchg
cltd
dec
inc
jge,pn
fistps
mov
cmp
xor
cmc
movsl
inc
imul
enter
sti
adc
std
add
test
add
ds
mov
aaa
inc
cmpsl
nop
bound
inc
mov
dec
fstps
in
pop
add
pop
jecxz
or
test
popf
xlat
mov
scas
and
aaa
popf
inc
aam
pop
lret
mov
pop
jge
loop
inc
aam
stos
pop
arpl
jg
rorb
dec
sbb
push
xchg
sbb
aad
iret
lods
ss
data16
fs
mov
or
popf
dec
and
and
mov
scas
mov
sub
xor
nop
add
lds
inc
mov
cwtl
repz
inc
xchg
cltd
scas
mov
sub
clc
xchg
mov
cmp
mov
mov
lcall
scas
rcrl
push
sbb
sub
test
add
cmpsl
add
ret
rcrb
call
xor
iret
mov
xor
lods
aas
pop
mov
out
and
jg
loopne
pop
leave
insl
jne
idivb
rcrl
xor
push
or
push
dec
shll
outsb
xchg
or
out
scas
out
ja
and
enter
or
add
arpl
and
xor
sti
lds
pop
or
scas
inc
mov
subb
mov
pop
bound
push
inc
lahf
arpl
scas
cld
rol
in
aaa
fsubs
movsl
pop
arpl
xlat
pop
xchg
jp
fimull
pop
xchg
inc
dec
test
jo
xchg
push
jae
sub
lcall
das
fs
dec
fwait
xorb
or
aas
mov
popf
pop
adc
dec
arpl
xor
insb
mov
insl
data16
iret
arpl
xchg
or
mov
pop
add
pop
sti
dec
adc
mov
xchg
leave
xor
or
aaa
jno
xchg
ret
push
cmp
mov
jmp
or
xchg
loopne
cmp
cmp
push
pop
out
mov
sub
cli
push
adc
xchg
jp
mulb
xor
aad
push
mov
mov
mov
jmp
xor
ror
sarl
repnz
xchg
aas
insb
fs
add
push
and
add
out
xchg
dec
in
out
aam
add
cmp
les
andb
arpl
lods
and
push
or
js
jne
cwtl
rol
sbb
push
aam
lock
rcl
jl
psubusw
test
pop
push
cli
or
ljmp
sbb
outsl
jp
push
out
jns
inc
test
shlb
push
lods
mov
sahf
add
incb
pop
mov
std
int
outsb
sarl
std
fidivrs
mull
fs
subl
adc
je
jecxz
xor
lahf
and
xor
mov
lret
clc
cmp
dec
popf
int
fstpl
test
dec
inc
out
inc
daa
inc
push
std
fbld
cltd
adc
orb
clc
aaa
shll
inc
xor
into
adc
mov
jno
add
stc
inc
push
test
dec
adc
sub
pop
inc
jo
popf
dec
push
dec
addl
iret
mov
aaa
jbe
mov
pop
pop
fsubp
mov
inc
ljmp
data16
pop
stc
mov
or
cs
jnp
push
fsubs
adc
jmp
xor
lahf
or
into
and
stos
in
cmp
cmp
mov
sbb
dec
mov
sub
or
mov
insb
push
adc
jmp
into
inc
lods
xchg
adc
int3
adc
xchg
jg
hlt
mov
push
into
scas
pop
ficoml
popf
xchg
inc
icebp
enter
les
push
dec
inc
fists
push
sub
cltd
or
lahf
mov
shrb
mov
jge
popf
push
and
or
pop
fwait
jmp
out
test
add
dec
loopne
fmulp
xchg
in
popa
or
aad
mulb
in
cmp
or
test
lods
sbb
jg
pop
cmp
sub
or
jnp
dec
addl
xchg
jne
or
mov
divl
imul
es
lods
sti
mov
ss
outsb
mov
sahf
cmc
fidivrs
push
pop
in
pop
fmuls
lods
cmp
and
arpl
add
das
inc
and
mov
xor
movsl
cmp
xchg
xlat
in
mov
lret
add
les
fwait
sbb
dec
push
imul
out
jbe
cltd
sub
and
push
pop
divb
cmpsl
stos
xchg
fwait
repz
cmpb
or
cltd
or
jl
cmp
or
xor
lret
lds
or
into
lods
adc
mov
or
sbb
ds
inc
clc
into
pop
mov
testb
jne
and
dec
push
add
outsl
lods
into
push
nop
stos
push
rcr
sub
push
dec
ljmp
stc
rclb
mov
std
mov
adc
outsl
jp
cmp
jae
fidivrl
xlat
xor
out
dec
xlat
je
adc
jecxz
mov
call
jne
cmpsb
xor
iret
push
or
repz
js
lods
cmp
mov
cld
mov
sbb
jne
pop
nop
mov
sub
jne
fnstenv
bound
mov
xor
out
insl
dec
repz
fadds
incb
mov
rcr
in
je
mov
cltd
enter
dec
dec
rcrl
or
or
mov
movb
jp
or
cld
add
add
sub
fucom
fldl
mov
imul
ds
push
test
and
lock
daa
in
repz
push
js
test
jnp
icebp
icebp
in
aaa
xlat
aad
cli
movsl
mov
and
ljmp
addr16
movsb
jecxz
push
cmpsl
push
outsl
xchg
cli
out
lahf
mov
cmp
cmp
sub
inc
lds
jle
push
mov
repnz
out
xchg
adc
sub
pop
sbbb
subb
add
imul
and
xchg
push
lods
xchg
mov
mov
stos
cmp
sub
cmpsb
enter
xchg
or
bound
jnp
mov
dec
or
mov
js
aas
fdivs
popa
lea
loop
daa
sbb
sub
mov
outsl
xchg
and
sbb
push
xchg
shl
add
inc
xor
push
and
push
pop
int
sub
pop
fdivs
sub
movsb
das
push
adc
inc
xchg
jno
rorb
repnz
cld
pop
mov
es
mov
or
mov
push
push
mov
adc
clc
sbb
mov
mov
das
es
sti
mov
pop
fwait
dec
in
out
fdivs
jns
js
das
inc
inc
mov
stc
out
cmp
cmpsl
fisubs
push
mov
cli
add
jns
jno
mov
push
outsb
mov
rcl
ja
ret
inc
pop
stos
insb
add
not
jg
jns
xor
lret
in
cmp
stc
loopne
les
xchg
inc
or
xchg
sbb
cpuid
xor
mov
ffree
xchg
push
dec
incl
stc
mov
es
movsb
inc
sbb
pop
int3
sub
pop
jo
incb
jle
sub
inc
addr16
lock
in
iret
cmpl
in
jle
fildl
jo
lea
push
pop
pop
pop
dec
mov
lods
xor
xchg
jg
lods
sub
out
push
mov
movsl
jl
je
lods
fistl
push
inc
cmp
push
mov
push
add
pop
test
and
add
mov
mov
push
jnp
mov
clc
psubsw
lds
mov
xor
js
or
jp
ss
pop
jl
jo
mov
shrl
jbe
cmp
mov
xlat
pop
xchg
leave
mov
and
int3
ja
lret
xchg
pop
mov
das
pusha
out
js
imul
add
imul
in
inc
inc
loope
push
pusha
lods
lods
fistpl
push
pop
lret
add
sbb
push
xor
into
shrl
mov
sbb
mov
insb
or
jne
in
frndint
jp
cmpsb
mov
cs
mov
push
sub
test
movsl
cmp
mov
jl
sbb
push
dec
es
inc
imul
push
decb
add
lods
imul
test
sti
lods
clc
stos
scas
jl
std
or
insb
repnz
mov
cmc
jge
sub
mov
cmp
push
jecxz
je
bound
jnp
cmpsl
sub
shrb
push
jo
jb
mov
pop
push
lds
mov
sub
repz
adc
bound
sahf
mov
sti
xor
pop
daa
gs
adc
xor
and
mov
pop
pop
pusha
pop
mov
or
cs
add
xchg
imul
icebp
pushf
dec
in
es
rclb
mov
jecxz
outsl
sbb
xor
or
xchg
dec
fwait
adc
mov
push
sbb
dec
pushf
lods
add
cmp
js
into
sbbb
jg
shlb
xor
dec
add
mov
jl
nop
push
cmp
lret
xlat
fwait
test
icebp
repz
inc
or
test
sub
mov
ret
mov
loopne
add
sub
cmc
adc
sub
mov
pop
xchg
arpl
pop
xchg
xchg
jp
notl
mov
mov
push
data16
adc
pop
out
mov
adc
dec
jg
shll
cmpsb
jnp
lret
add
or
test
xchg
cmp
lock
push
leave
lret
and
jl
shlb
dec
in
loopne
mov
dec
jp
cs
stc
jb
clc
jl
out
xor
insl
inc
inc
out
inc
or
xor
fisttpl
sbb
clc
testb
mov
sti
fwait
push
repnz
pushf
xor
rcl
xchg
fstp
scas
aas
sub
aam
mov
fldcw
adc
sub
pop
and
lahf
into
mov
js
test
lret
cmp
pop
push
leave
sbbb
imul
cli
sbb
fsubrs
mov
loop
jbe
js
mov
inc
jle
inc
mov
mov
outsl
push
inc
mov
nop
ss
data16
adc
jbe
inc
fs
jno
mov
cmc
dec
adc
popa
addr16
fsub
sub
xchg
rorl
sti
pushf
adc
xor
cmp
arpl
test
cmp
push
jge
in
scas
ds
and
xchg
or
add
dec
mov
in
fstl
inc
or
add
mov
test
popa
or
fnsave
in
xor
arpl
out
add
pop
pop
ja
inc
stc
cmp
sub
mov
mov
sbb
lods
popa
notb
add
daa
icebp
lret
testl
inc
and
movsl
sbb
push
std
lods
fmull
aaa
fstenv
fs
ret
push
mov
fmul
mov
add
das
fmull
mov
cmp
fsubrs
or
mov
out
js
dec
inc
leave
scas
cmp
pop
adc
gs
push
ss
loopne
das
js
dec
adcl
xchg
pop
pop
int3
mov
enter
cmpsl
popa
ret
adc
nop
stc
sub
mov
mov
das
or
pop
dec
in
bound
fs
add
das
fnstsw
sbb
imul
in
fistps
xchg
scas
pop
fcom
outsb
je
mov
push
add
popf
popa
lds
sbb
inc
gs
fwait
push
pop
sub
fdivl
into
leave
xlat
je
das
inc
jo
xchg
mov
das
ret
clc
xchg
add
jno
cmpsb
mov
mov
pop
es
jg
xlat
test
add
push
mov
jae
scas
movl
push
dec
pushw
add
ficoms
imul
sub
lock
mov
adc
int3
xor
mov
jb
andb
push
into
mov
addl
das
pop
xchg
in
adc
lret
inc
leave
testb
jp
rcrb
push
cs
mov
mov
dec
xchg
scas
cli
push
repnz
fwait
mov
mov
push
mov
adc
dec
mov
gs
sub
add
mov
xchg
sbb
test
pop
sub
or
mov
pop
sbb
sbb
mov
add
and
stos
shl
and
lret
int
sahf
fldt
adcl
decb
ljmp
sbb
cs
pusha
les
or
pop
pop
xor
push
mov
push
sti
aas
cmpsb
idivl
or
add
test
or
divb
mov
sbb
loop
add
dec
sub
into
movsb
lods
add
stos
or
jne
mov
pop
mov
lea
sbb
xor
mov
jb
pop
mov
sub
jge
insl
mov
inc
xchg
shrl
adc
int3
mov
lods
sub
inc
movsl
or
cltd
aad
out
inc
dec
movsl
into
mov
mov
pop
cmp
sub
and
or
mov
add
popa
cli
push
or
das
and
xchg
mov
imul
add
jecxz
push
mov
add
cld
push
arpl
and
leave
aam
arpl
cmc
sbb
xchg
jnp
xor
mov
scas
pop
nop
test
add
push
popa
jb
pop
mov
push
and
adc
adc
adc
inc
jnp
jecxz
imul
outsl
out
or
or
pop
xchg
and
aas
cmp
lret
xlat
arpl
xchg
mov
jne
mov
pop
cmpsl
fdivrl
cli
addr16
stc
std
insl
aaa
lods
lret
xor
push
cli
gs
mov
sub
cmpsl
xor
loopne
int3
repnz
xchg
pop
mov
push
xchg
repnz
sbb
or
nop
xchg
or
push
or
cmc
sarb
pop
sarl
push
fisubrs
or
fisubrl
mov
popa
dec
or
push
xchg
push
adc
xor
inc
mov
xchg
dec
mov
fildll
lea
cmp
fimull
mov
rorb
imul
mov
outsl
stc
and
mov
or
in
add
setge
xchg
pop
in
mov
pop
cmp
sti
movsb
dec
sahf
add
jg
dec
hlt
stos
in
and
push
inc
dec
inc
loope
inc
pop
outsb
repnz
jp
data16
in
add
and
cmc
and
popf
sub
mov
loop
dec
ljmp
cmp
inc
mov
jecxz
ja
int
ret
lret
outsl
in
xchg
sbb
mov
movsl
adc
inc
leave
inc
je
sbb
sti
or
pop
popf
mov
in
in
xor
pop
dec
dec
add
daa
push
sbb
inc
mov
add
ret
sbb
out
push
fcmovnbe
jo
mov
push
jnp
testb
lea
cmp
into
mov
cld
cmp
in
aam
call
int3
pop
jecxz
and
nop
sub
jo
xchg
cmc
jle
mov
cmpsl
ja
mov
mov
neg
jl
jns
test
ds
jmp
or
adc
ss
je
push
xchg
add
jp,pt
and
in
loope
jg
cwtl
sbb
xchg
pop
xor
es
rolb
inc
push
mov
or
loop
fstps
adc
pop
inc
sub
daa
xchg
or
rcrb
jae
in
lea
add
fiaddl
add
add
nop
push
push
notb
mov
xchg
xorl
push
int3
pop
jb
ss
cs
xchg
or
sub
sbbl
push
mov
xlat
cmp
aam
movsb
shll
je
nop
and
js
dec
inc
push
in
xchg
inc
inc
imul
cmc
movsb
addl
jbe
std
or
je
lods
and
insl
daa
pop
add
aas
repnz
jns
jmp
mov
lret
sti
push
fsub
jle
xchg
pusha
pop
cmp
aas
popa
or
js
jne
adc
mov
movsb
adc
pop
xchg
adc
outsb
mov
dec
dec
jecxz
pop
mov
xchg
xchg
and
ret
aad
mov
rcrl
aaa
rcl
push
in
clc
and
sti
mov
stos
cld
mov
movsb
xlat
sbb
push
lahf
data16
add
filds
dec
pop
pop
xor
jp
dec
movsl
xchg
fildl
fs
adc
mov
mov
push
stos
mov
pop
jmp
cmc
xor
rolb
and
add
cli
and
lds
jbe
or
mov
jmp
dec
fisubrl
test
inc
insl
imul
test
mov
cmpsl
jne
push
neg
and
xchg
lcall
je
out
push
add
mov
push
sar
push
mov
insb
xor
ss
or
pop
stos
rol
das
mov
out
sub
incl
add
adc
jns
adc
mov
adc
popf
push
jmp
mov
mov
pop
add
jg
push
jge
sbb
stos
insl
jp
xlat
pop
jae
repnz
rolb
sbb
or
pop
aas
aaa
mov
inc
push
sbb
daa
adc
ja
xor
in
popa
out
test
pop
andl
push
imul
aad
mov
sahf
je
scas
or
fs
mov
cld
sub
add
cmp
cltd
shll
mov
es
mov
push
loop
jge
cmpsb
in
inc
insb
pop
jle
sbb
cmp
push
sub
flds
in
or
iret
fwait
gs
or
out
sbb
movsl
call
ja
mov
leave
fdivrp
or
cmp
aam
aad
sar
adc
ret
sbb
cwtl
mov
or
shrb
outsb
je
xor
jmp
dec
call
cmpl
rcll
lock
stos
lds
xchg
jmp
lret
mov
pop
rcrb
cmp
enter
mov
sbb
cmp
cmp
mov
add
xor
fnsave
mov
sahf
cmp
mov
pop
pushf
mov
imul
aad
stos
into
mov
sub
cmp
imul
repz
sbb
pop
daa
adc
mov
mov
sub
outsb
aad
lock
push
dec
ret
insl
das
rcll
xor
pushf
fwait
in
cmp
adc
push
jecxz
jmp
mov
jg
xor
outsl
cmp
xor
pop
inc
loope
mov
lods
sub
mov
cmc
push
clc
xor
das
fsubs
sbb
fdivr
repnz
outsb
pop
cld
popa
mov
pop
xor
shll
xchg
dec
sbb
jae
scas
ja
jmp
cs
jp
lods
ds
fcomp
jno
loopne
cli
hlt
mov
popf
mov
mov
mov
stos
or
pop
sbb
fidivrl
popa
test
outsl
dec
dec
jae
jb
mov
jno
adc
out
push
fucomp
lock
or
shl
pop
dec
rcr
mov
add
dec
fsubrs
sbb
out
cs
cmp
ss
test
mov
sahf
aas
mov
pop
sub
std
rolb
pop
mov
mov
xchg
imul
mov
cmp
into
xchg
hlt
xor
mov
mov
push
aam
imul
mov
call
imul
mov
jo
loopne
xchg
arpl
filds
or
imul
cmp
push
out
cli
dec
in
dec
cmc
xor
outsl
or
dec
add
insb
dec
in
test
pop
out
or
adc
cwtl
or
inc
sub
jl
movsl
xchg
rcll
adc
pop
mov
mov
stos
cmp
enter
leave
outsb
mov
ja,pt
rcl
clc
push
jo
inc
mov
shl
movsb
out
lock
int
ds
roll
mov
cmp
sub
mov
aas
loopne
adc
nop
mov
mov
callw
mov
wbinvd
cltd
loopne
xor
mov
and
cld
sbb
lock
aas
daa
adc
and
divb
inc
sbb
xchg
push
sarl
sbb
lds
andb
push
jmp
xor
popa
inc
jge
inc
sub
adc
mov
sbb
out
cmp
pop
mov
and
call
inc
inc
lods
xor
loopne
mov
push
aad
pop
mov
repz
popa
pop
insb
cmpb
jmp
test
in
sbb
mov
jle
sub
push
out
jo
and
out
lret
ret
mov
in
xor
notl
rcll
cmpsl
and
or
fisubs
ret
pop
mov
out
jmp
popf
dec
jbe
push
jb
dec
mov
inc
sub
je
or
out
imul
mulb
sub
call
js
mov
fcompl
std
into
frstor
mov
cmp
shl
loope
or
mov
or
xchg
jl
inc
int3
mov
loope
jo
frstor
xor
sti
adc
imull
pop
mov
outsb
in
call
add
mov
loopne
lret
test
adc
orl
push
mov
sub
xchg
outsl
jl
mov
inc
rol
inc
adc
ss
rolb
popf
fstpt
lds
leave
arpl
or
hlt
jae
xchg
xor
lock
cltd
jecxz
pop
push
push
add
int
cmp
ss
nop
inc
mulb
xchg
stc
hlt
adc
cmp
inc
and
in
shr
fldenv
cltd
push
mov
xor
mov
xchg
mov
ret
les
ljmp
push
movsb
pusha
into
xchg
ljmp
mov
push
adc
dec
mov
dec
aaa
pop
push
fisttpl
int3
fcomi
xchg
ficomps
mov
ja
inc
pop
sub
inc
and
pop
inc
adc
in
addl
sub
ret
aad
gs
aad
popa
jle
arpl
into
and
or
mov
pop
repnz
mov
pop
in
lret
adc
pop
hlt
sub
inc
outsb
ret
sbb
imul
xchg
or
xchg
sub
loope
in
dec
insb
dec
loopne
sahf
xchg
push
dec
cmpsb
xchg
dec
push
stos
push
xlat
std
xor
and
xchg
lea
and
xchg
or
jnp
int
loope
mov
outsb
add
pop
pop
push
xchg
cli
or
daa
pop
adc
outsl
loope
push
adc
ret
aaa
aam
cmp
insl
insl
inc
inc
pop
or
fstl
and
or
jo
inc
or
pop
sub
jno
sti
stos
or
addb
fldl
lcall
cmpsl
cmp
popa
repnz
xchg
test
orb
add
or
push
adc
adc
xlat
jmp
and
mov
adc
sbb
and
push
cmpsl
popf
lods
data16
mov
cmp
inc
mov
test
lds
pop
cld
mov
dec
push
into
cmp
addr16
rclb
xchg
mov
jp
pop
add
dec
mov
cmp
sub
out
movsb
xlat
stos
cli
repnz
xchg
stos
pop
hlt
push
and
movsb
ja
push
mov
jne
mov
ss
cmpsl
repz
shrl
sub
jp
sbb
push
sbbl
outsl
push
mov
pop
xor
je
inc
pop
movzbl
push
jnp,pt
test
mov
sub
mov
aad
or
add
cmp
clc
add
std
adc
ljmp
xor
push
mov
popf
imul
mov
xlat
insl
mov
insb
lock
cwtl
adc
outsl
mov
popf
test
hlt
mov
xchg
mov
fisubs
push
popf
dec
fldl
cmpl
pop
push
insl
ss
je,pn
dec
adc
les
xlat
mov
faddl
shlb
rorl
adc
push
xchg
pop
jg
xor
inc
mov
rcll
pop
dec
jmp
add
pop
incl
and
jp
lahf
sarl
adcb
ja
sbb
movsb
mov
mov
push
roll
mov
lods
stc
adc
les
cmc
cli
into
jge
xchg
cmp
mov
lods
mov
ret
repz
dec
and
or
rcll
sub
inc
enter
pop
ret
int3
cmp
sub
cmp
xchg
jnp
daa
jae
into
adc
adc
push
or
movsb
pop
push
or
popf
sbb
push
add
das
test
dec
in
mov
push
mov
loopne
add
aas
loop
and
pop
cltd
inc
mov
mov
lcall
xchg
mov
ljmp
mov
out
mov
xor
iret
xor
inc
clc
lahf
sbb
mov
adc
sbb
cwtl
and
iret
cltd
cwtl
ret
sub
xchg
enter
sbb
push
mov
sti
sbb
pop
jge,pt
push
roll
xorb
mov
dec
ja
or
icebp
stos
es
bound
push
xor
mov
fstpt
mov
push
sbb
lods
aaa
mov
mov
pop
daa
inc
add
int
rolb
insb
jl
addr16
cmc
adcl
sahf
push
shrb
std
mov
adc
mov
dec
test
jo
jns
add
out
cwtl
xchg
jns
sub
loop
nop
test
push
and
add
jno
or
stos
rcl
dec
je
xchg
arpl
fldenv
mov
jmp
call
xchg
movsl
rcll
cs
mov
mov
out
int
xchg
cmc
cltd
lret
shll
jne
dec
mov
inc
jnp
clc
aam
gs
dec
pop
or
xchg
jp
inc
mov
rep
cld
and
adc
mov
stc
push
sbb
cmpsb
int3
mov
orb
xchg
mov
mov
out
das
xchg
mov
incl
lock
repnz
icebp
hlt
aaa
test
inc
hlt
ret
aaa
jbe
push
mov
out
jecxz
iret
pushf
popa
test
adc
cmpsl
pop
xor
push
mov
inc
stos
ss
inc
arpl
aad
int
movsb
push
jg
and
jecxz
and
repnz
sahf
incl
jb,pn
cmp
inc
dec
rol
cwtl
cmp
mov
ds
cmp
jb
ret
cmp
fisubrl
loopne
cwtl
outsl
inc
mov
cmp
adcb
xchg
push
cmp
in
adc
andb
movsb
hlt
cli
or
js
test
xchg
add
in
aaa
pop
in
fdivrs
pop
pop
ret
clc
inc
inc
and
shll
outsl
ret
dec
push
push
mov
cs
jbe
mov
push
popa
jbe
mov
jns
xorb
rsqrtps
push
jnp
ss
pop
xor
and
and
popa
or
cs
mov
decl
mov
push
add
cmp
pop
mov
fisubrl
xchg
sbb
dec
push
jle
cli
and
sbb
ja
add
addr16
in
cmpsb
outsl
cld
mov
imul
mov
push
int3
pop
mov
dec
mov
jle
xor
jmp
popa
sbb
sarl
lahf
pop
popf
ljmp
fsubrl
mov
int3
stos
fadd
xor
inc
pop
add
xchg
test
lods
ljmp
lret
or
mov
test
push
fldl
out
arpl
or
insb
xor
and
fdivrs
sub
clc
out
pop
bound
xchg
pop
scas
lret
ret
adcb
cli
cmp
js
mov
cmp
xor
std
inc
int3
popf
mov
insl
enter
clc
sub
ss
mov
mov
test
sub
jmp
or
dec
sarl
aad
mov
jae
xor
pop
imul
push
fs
test
int
cmp
pusha
divl
cmp
xlat
int3
scas
push
jp
mov
push
cmpsb
xorl
ret
dec
bound
lods
movl
in
mov
hlt
push
int
pop
pop
and
push
mov
and
hlt
clc
stos
mov
vcvtdq2ps
insl
testl
roll
dec
lcall
inc
subl
subb
adc
cs
xchg
pop
push
mov
cmpsl
mov
cmc
test
pop
xor
cmpsb
mov
mov
add
movsl
ja
pop
dec
mov
jmp
xchg
xchg
pop
jge
es
pop
leave
jmp
stc
int3
cmp
add
nop
fsubs
inc
mov
sti
sub
dec
stos
outsl
jecxz
pop
xchg
xchg
cmpsl
rcrb
aam
mov
in
fidivrl
or
enter
sbb
xor
and
pop
mov
lahf
imul
inc
cli
mov
pop
xor
mov
jl
sub
cmp
cwtl
add
rcl
lods
cmp
call
inc
aas
xchg
sbb
mov
mov
ficompl
jecxz
cld
iret
and
mov
js
rcr
add
pop
mov
addr16
cmp
cmp
push
jo
das
movsb
test
sti
out
mov
arpl
out
mov
in
fstenv
mov
hlt
lods
clc
js
in
shlb
ret
mov
popa
mov
pop
dec
pop
in
fistpll
test
in
mov
push
mov
adc
scas
fmuls
in
inc
xorl
mov
pop
repz
cwtl
cmp
enter
xor
push
aas
jecxz
jg
mov
arpl
fstpl
mov
out
popf
push
inc
ret
sub
ljmp
adc
adc
out
sbb
movsl
add
cmpsl
je
inc
mov
sub
loope
push
outsl
or
subl
adc
mov
test
mov
ljmp
mov
stos
ret
sub
xlat
insl
xor
mov
xchg
or
cld
movsl
cmpb
push
std
lods
lock
decl
ret
pop
push
inc
xor
loop
lea
sub
xchg
jecxz
mov
enter
and
push
repz
addl
mov
sbb
xor
pop
jl
lcall
xchg
dec
lret
cvtdq2ps
push
cmp
push
insb
daa
test
cmp
jmp
lods
push
pusha
mov
cmp
jnp
test
mov
sub
xlat
dec
scas
and
mov
xchg
icebp
fstp
stos
rol
pop
mov
bound
stc
or
mov
andb
pop
mov
dec
inc
mov
dec
dec
mov
cmp
pushf
test
shll
jo
in
imull
cmp
or
in
xchg
rcrb
cmp
jns
xor
jo
pop
ss
push
push
mov
arpl
mov
ficomps
int3
stos
sub
lret
add
fwait
ljmp
xchg
pop
arpl
push
adcb
stc
sbb
pop
fwait
push
mov
xchg
sub
sbb
xchg
cmpl
dec
push
xor
lods
out
xchg
push
in
push
jo
sbb
sub
pusha
sti
into
stos
movb
into
ja
test
lods
rolb
cmpsl
loop
js
dec
ljmp
add
ret
es
pop
lods
aam
push
inc
js
shlb
sbb
jle
or
sub
cli
lcall
es
in
inc
insb
rcl
aad
loop
ret
jnp
mov
mov
mov
dec
jmp
cmpsb
das
outsb
jmp
mov
cmpl
aam
mov
jg
je
movsl
push
cmc
es
push
xchg
mov
test
mov
lahf
jns
xor
enter
pop
jmp
add
or
adcb
fadd
sbb
roll
das
pop
xor
xor
nop
bsf
lret
mov
leave
shrb
xor
inc
sbb
fstps
ret
stc
mov
lret
pop
rcr
lahf
jb
call
jle
test
lods
mov
dec
fidivs
das
push
outsl
in
dec
out
cmp
adc
in
or
add
pop
xchg
daa
or
pop
in
pop
mov
or
jge
testb
mov
pop
sarl
sub
movsl
stc
or
inc
lahf
es
pop
sub
mov
or
xor
les
push
iret
call
imul
push
notb
add
pop
jmp
mov
dec
mov
ds
jb
cmpsb
neg
mov
sub
out
outsb
or
cwtl
mov
div
pop
popa
inc
stc
adc
mov
jp
xor
mov
lods
xor
loopne
add
cmpsl
stos
fists
je
aam
pop
mov
jnp
int
faddl
shlb
arpl
sbb
xor
mov
jmp
loop
jb
movsb
add
mov
push
xor
in
fldcw
push
and
mov
movsl
lahf
fucomi
sub
add
adc
test
adc
fstpl
mov
jns
fdecstp
in
mov
mov
aaa
push
test
xor
jae
cmpsl
sbb
cmp
stc
mov
mov
xchg
addr16
fstpl
scas
jp
add
dec
mov
lcall
inc
xchg
roll
mov
scas
add
insl
push
imul
in
sbb
dec
das
sti
jb
xorb
sbb
jb
aas
leave
rcrl
ljmp
sahf
popa
xor
aam
andb
aad
inc
xchg
ret
outsl
int
cmpb
mov
pop
add
adc
gs
push
push
add
roll
jno
mov
popf
loopne
jnp
add
fiadds
cltd
xlat
sarb
jl
scas
prefetcht0
pop
iret
inc
push
sub
jno
mov
ficoms
adc
inc
and
push
dec
cmp
out
push
nop
daa
cmpsb
jns
jmp
outsl
adc
js
sarb
push
mov
sbb
rcrl
push
rorl
incb
insb
cld
adcb
fldpi
cmp
mov
ret
push
push
sub
mov
mov
int3
shll
outsb
jne
test
movsl
ljmp
mov
test
bt
test
xchg
fwait
std
lock
test
dec
jbe
mov
cmp
icebp
in
mov
jg
push
xor
inc
int3
add
int3
into
push
add
int
sti
add
dec
aad
rorl
mov
stos
sub
pushf
jnp
lea
ret
add
pop
repz
inc
adc
cltd
vpshuflw
ljmp
into
lock
xchg
int
bound
lea
xchg
inc
lahf
xlat
insl
push
gs
mov
loopne
lods
add
adc
and
cli
roll
loopne
das
lods
cmp
adc
andb
popf
cmp
cmp
push
dec
pop
daa
inc
sub
push
mov
clc
out
lcall
fsub
fcom
scas
mov
cli
push
sbb
add
test
cwtl
repz
ja
or
push
outsl
mov
pop
cmp
jmp
and
add
dec
movsb
add
outsb
fisubs
push
fisubl
shrb
jmp
in
and
sbb
mov
mov
in
cs
cmp
lcall
in
into
cmp
pop
jnp
sub
cwtl
sarb
mov
mov
imul
dec
sbb
sub
jmp
push
jp
aam
adc
std
pushf
sbb
xlat
das
jp
mov
mov
mov
mov
push
sahf
cmp
jmp
sbb
arpl
mov
mov
sub
xchg
cmc
aam
insl
cmp
push
cmc
dec
loope
popa
pop
in
sbb
notb
xchg
mov
stos
ja
iret
or
cmp
jp
fidivs
xor
jmp
mov
rorl
mov
test
aam
loop
jae
sahf
mov
lods
mov
ss
sbb
ror
inc
fucomi
pop
and
jmp
jns
add
pop
je
add
add
incb
aaa
mov
or
inc
inc
inc
lea
lcall
sbb
push
loope
fs
stc
roll
pop
cld
sub
out
sub
add
pop
or
adc
lret
stos
inc
push
cs
fnstenv
or
mov
inc
mov
cli
add
gs
push
sbb
int3
sahf
outsb
stc
cmp
sub
inc
addr16
test
mov
pop
sub
inc
sub
dec
lods
xor
pop
xor
mov
mov
popa
test
xchg
pop
mov
aas
imul
inc
add
std
add
sub
add
push
mov
fwait
pop
xor
push
pop
mov
ret
xor
gs
int
scas
mov
lods
jle
fisttpll
mov
xchg
jecxz
xchg
dec
mov
xchg
sbb
mov
mov
test
fwait
mov
decl
pop
pop
jg
add
add
push
sbb
inc
jns
lock
das
sub
jno
xchg
mov
or
call
lret
in
pop
fdivs
std
add
mov
dec
cmp
mov
negb
jns
sub
push
pop
lds
xor
int3
scas
ja
mov
xchg
dec
dec
popf
ds
cs
sub
inc
std
les
bound
dec
mov
or
inc
fdivrl
mov
ds
ds
jbe
out
stos
add
ja
xchg
mov
incb
mov
mov
clc
rclb
sarl
std
sub
xchg
or
jae
cmp
lret
lock
mov
in
inc
fmul
lcall
inc
scas
adc
dec
outsl
fstpl
int
and
sbbl
lods
mov
pop
mov
cmp
pop
nop
movsl
sub
out
lock
lcall
test
and
iret
loopne
mov
icebp
xchg
mov
push
insb
imul
dec
mov
or
test
cmp
scas
sbb
mov
xchg
fbstp
xor
and
mov
adc
inc
dec
addr16
mov
xorl
dec
pop
mov
mov
and
cmp
pop
cmp
jp
aas
insl
add
shll
pop
push
or
push
xor
sbb
es
and
pop
pop
mov
sub
dec
jg
push
pop
sbb
adc
inc
or
icebp
xorb
ror
pop
sub
dec
lea
sub
pop
pop
cmpsl
stc
cmpsb
mov
push
mov
nop
pop
mov
push
push
icebp
es
adc
jg
pop
movsb
stos
jl
mov
adc
into
pop
fistpl
inc
lcall
pop
out
mov
scas
mov
enter
adc
xchg
mov
or
movl
push
sti
mov
cwtl
mov
push
andb
imul
loopne
jnp
inc
ljmp
cmp
adcl
push
mov
cmc
jb
jecxz
xor
call
imul
jne
mov
push
sbb
sbb
cmp
ret
iret
rcrl
push
jae
xlat
pop
or
push
rcll
mov
jne
cmp
mov
std
mov
xor
jp
adc
mov
cmp
adc
pop
es
add
sub
shlb
jge
pop
cwtl
idivb
pop
xchg
or
loopne
or
or
dec
or
mov
cmpsl
into
dec
and
push
dec
mov
dec
mov
scas
mov
or
sbb
int
rol
push
in
lret
cmp
into
pop
jg
push
ret
loopne
das
push
iret
daa
int3
add
cmp
push
sbb
mov
cmp
pop
or
cltd
dec
sub
aad
xchg
enter
aaa
push
iret
pushf
or
fsincos
lcall
xchg
jnp
or
mov
pop
jmp
pop
xchg
lret
jge
mov
pop
outsb
adc
and
mov
clc
filds
sbb
add
push
push
adc
aaa
mov
aas
out
aas
movsb
ror
incl
fsubp
mov
pop
gs
xor
and
bt
call
sbb
mov
fidivl
aad
cmp
in
fprem1
push
xor
pop
mov
insl
test
shrb
mov
test
addr16
or
aas
repz
mov
movsb
jl
xor
xchg
mov
lods
mov
and
xchg
push
inc
nop
loop
push
mov
mov
jle
sarl
out
xchg
dec
and
insl
xor
adc
sub
ds
call
imul
add
mov
sbb
sti
mov
xlat
stos
mov
ds
adc
sahf
fwait
pop
xor
out
flds
repnz
shll
leave
stc
jbe
aam
fstp
sbb
xor
sbbb
or
add
lret
mov
movsb
or
jae
jnp
add
and
leave
and
inc
icebp
mov
out
dec
imulb
jns
loopne
int3
fstl
jle
stos
mov
inc
or
xor
pusha
cmpsl
xchg
mov
inc
loope
ljmp
negl
sti
or
or
test
inc
dec
sbbb
movsl
dec
jns
jl
imul
clc
jecxz
inc
adc
dec
push
sub
in
les
inc
jne
add
adc
push
cmp
push
mov
cmp
add
add
mov
push
lret
inc
sbbb
cmpb
call
insl
xchg
push
sahf
sbbb
repz
add
ret
xchg
les
pop
adc
stos
in
push
lods
in
cli
dec
ret
jnp
mov
push
dec
sub
scas
popa
pop
xchg
movsb
out
pop
aas
inc
xchg
incb
sbb
add
stc
cmpsl
ljmp
call
fcmovnb
inc
mov
sbb
mov
cmpsb
testb
sbbl
mov
mov
xchg
lret
mull
insl
add
cld
mov
cs
dec
lock
int3
ret
in
push
push
adc
cli
push
xor
lahf
repz
mov
negl
sbb
fcmove
ret
push
add
and
test
jge
sbb
into
shrb
pop
jle
cwtl
sbb
mov
mov
aad
or
jg
jp
mov
imul
sahf
push
aad
push
sbb
add
fcompl
lahf
out
adc
add
ds
in
and
ljmp
pop
sub
xlat
xor
lea
loope
adc
out
into
inc
push
and
test
dec
in
ret
jne
pop
add
dec
and
or
and
addr16
frstor
pop
stos
pushf
cltd
mov
pushl
test
repz
lret
out
cmp
loopne
testl
in
adc
jmp
sbb
xchg
into
in
scas
add
sub
xchg
xorl
sti
lret
jbe
and
ja
or
lods
rcl
lret
js
cmpsb
jle
adc
movsb
cs
adc
andb
scas
aad
push
adc
pusha
testl
jne
jbe
pop
testb
dec
push
rcrb
mov
dec
std
fsubs
insb
xchg
sbbb
mov
test
add
fistl
ficompl
xchg
jp
inc
sbb
push
in
dec
push
xchg
or
inc
sub
mov
scas
repz
xchg
sub
cmp
icebp
aas
test
stos
sbb
sti
jle
mov
fcompl
outsb
sbb
jns
mov
notb
stos
out
sbbb
pop
sti
sbb
arpl
ljmp
mov
daa
push
lret
push
sub
out
xchg
mov
cmpsl
pop
xor
fwait
pop
pop
mov
pop
jns
sbb
cmpsb
bnd
nop
insb
stos
insb
mov
in
arpl
test
gs
jno
mov
xchg
mov
xor
xorb
sub
enter
lods
pop
dec
add
mov
mov
ret
rcl
xchg
lret
les
pop
aaa
xchg
xor
aas
xlat
negl
cmp
arpl
test
pop
js
lods
lahf
inc
and
in
mull
or
jbe
stos
mov
call
add
daa
cmp
andb
nop
pop
movsl
loope
or
repz
add
mov
or
es
das
sbb
cmc
rclb
lret
inc
push
mov
bound
mov
xchg
inc
lcall
jns
sub
sbb
icebp
mov
pusha
ret
test
call
jmp
sti
out
gs
pop
mov
aaa
cmp
ds
shr
lods
lret
sbb
ljmp
movl
lods
cmc
jg
and
aad
mov
lret
lock
ja
fs
sub
jecxz
inc
adc
pop
pop
inc
mov
push
mov
pop
in
add
in
sbb
imull
xchg
xor
inc
jg
aaa
lret
mov
loop
mov
data16
dec
mov
setb
sbb
add
xor
pop
into
ljmp
pusha
clc
xchg
xchg
cmp
popa
stos
int3
je
icebp
out
cwtl
dec
frstor
fbld
rclb
push
frstor
push
push
push
pop
add
push
inc
cmpsb
cmp
jmp
lret
fsts
repz
xor
rol
rol
jmp
repz
sbbb
and
mov
in
cmc
mov
pop
push
aad
ds
add
xchg
push
lret
in
jge
jb
pop
xor
gs
adc
push
xchg
mov
xchg
sti
fcmovnu
and
ljmp
jne
call
ja
ljmp
mov
cli
push
dec
fnstenv
popa
test
movsl
jb
pop
int3
ret
mov
and
and
xlat
fldl2t
mov
xchg
lahf
mov
xbegin
pop
mov
mov
push
xchg
sbb
xchg
lds
mov
push
push
cmp
adcl
xchg
cs
es
mov
sbb
fsts
cs
mov
fiaddl
and
das
bound
call
cmpb
xchg
jbe
lock
push
out
in
mov
adc
push
or
out
cmpsl
mov
jns
insb
das
xchg
out
lret
or
in
cmp
shlb
sub
jo
sbb
ret
or
inc
jp
imul
js
mov
cmp
incb
lock
aas
outsl
add
cmp
test
std
mov
mov
test
add
xchg
sub
pop
or
sub
add
add
adc
test
roll
sub
repz
clc
cltd
push
jo
gs
pop
adc
inc
aaa
adc
inc
jp
mov
xor
out
popa
jle
mov
jnp
mov
xor
dec
adcl
adc
pusha
xor
nop
psrad
repz
aas
mov
repnz
in
fldenv
jle
dec
lock
mov
vsqrtsd
rorb
imul
inc
mov
dec
cltd
push
bound
sbb
push
cltd
leave
ficomps
xor
xchg
adc
inc
clc
xchg
loope
out
mov
jl
pop
pushf
push
add
in
mov
fsubl
and
or
fistpl
pushf
sbb
lods
push
jmp
mov
bound
push
lods
imul
adcl
push
test
lods
mov
xor
cmp
ret
outsl
and
cli
dec
add
mov
orb
push
sbb
dec
lods
bound
fadd
xorl
jae
stc
xor
gs
add
jo
cmp
cmp
inc
imul
ja
mov
sbb
and
mov
popa
leave
cmpsl
jae
in
dec
fcoml
enter
mov
out
xor
mov
pop
jne
xchg
outsl
bound
mov
adc
xchg
flds
sbb
fsubrl
push
xchg
push
mov
popa
pop
clc
sbb
and
sbb
mov
subb
inc
sub
insl
inc
cmp
cld
pop
cmc
cltd
outsb
sahf
pop
stos
ja
dec
jmp
sub
and
loopne
test
aas
or
into
mov
mov
push
push
cmpsl
lcall
sub
into
or
push
jle
sbb
iret
mov
xor
or
push
or
mov
push
std
fbstp
fldl
and
xlat
mov
fsubp
xor
std
sahf
ljmp
out
push
lahf
xchg
in
add
mov
lret
inc
dec
cs
and
mov
mov
push
mov
jo
cs
ficoml
jb
or
add
mov
pop
push
loop
clc
in
jne
or
in
ljmp
cmp
push
lods
mov
shrl
lret
hlt
fnstcw
shrb
fmul
sahf
inc
scas
push
dec
mov
add
mov
push
cs
fists
jno
mov
cld
lcall
adc
pop
int3
mov
cmpb
stc
or
jne
iret
fdivrl
xchg
in
sub
dec
adc
sub
add
jl
loopne
jge
imul
aam
xor
and
sbb
jo
lahf
xchg
xchg
mov
or
add
pushf
push
roll
test
dec
cmp
mov
jle
gs
cmp
jns
inc
fstp
and
lcall
adc
lret
dec
sti
je
jbe
xchg
or
fcomp
sub
ss
jno
dec
das
inc
stc
mov
jae
cmp
mov
mov
rcrb
push
rcl
mov
adc
stos
mov
and
lcall
push
xchg
jmp
and
dec
test
mov
test
scas
out
leave
jl
int3
imul
mov
adc
pop
jb
xchg
insl
mov
xchg
daa
dec
aas
inc
es
sti
daa
jnp
xor
sbb
add
xchg
and
mov
dec
jb
stos
int
mov
add
fdivrp
test
sub
sub
dec
repz
lock
mov
clc
pusha
adc
jl
arpl
data16
mov
mov
daa
icebp
sub
mov
mov
lret
scas
ret
mov
cwtl
out
xor
pop
lods
loopne
sub
jnp
orl
cli
gs
daa
jae
add
lcall
cli
lcall
shrl
mov
sub
sbb
outsl
cmp
push
lods
fistpll
sbb
xor
inc
jno
outsw
mov
popa
mov
sub
adc
scas
mov
outsl
push
mov
inc
add
jl
popa
outsb
movsl
into
lahf
leave
dec
inc
mul
mov
fs
jnp
aam
adc
lock
cs
ja
dec
leave
dec
xchg
js
mov
mov
xchg
sbb
dec
jl
out
movl
testl
jecxz
mul
sbb
test
inc
insl
or
icebp
pop
ret
gs
cmp
mov
mov
or
outsl
mov
mov
adc
lcall
loop
js,pn
leave
jmp
ja
loop
leave
pop
adc
dec
insl
outsl
jno
mov
iret
jbe
lods
xchg
cmp
out
lods
mov
loopne
cwtl
and
aas
cmpsb
pop
ret
pop
loope
inc
addl
jle
mov
arpl
mov
mov
iret
stc
out
mov
les
shrb
int
push
add
pop
fldenv
inc
fadd
pop
jo
jge
aas
out
ficoms
ds
rorl
push
jnp
xor
dec
out
test
mov
adc
push
add
mov
cmpsl
sub
ljmp
xchg
insb
xchg
and
dec
jae
mov
cmpsb
push
mov
mov
jmp
ja
jmp
rcrl
movsl
mov
test
sahf
cwtl
pusha
xor
cmp
aaa
mov
dec
jmp
or
or
pop
call
mov
nop
insl
cmp
dec
adc
push
lods
cmp
push
mov
notb
xchg
cmpsb
add
iret
push
dec
je
add
lods
cmp
dec
push
fcoml
loopne
lahf
jnp
push
mov
jno
fmulp
dec
out
push
bsf
call
jae
push
inc
push
cmpsb
add
pop
je
stc
shrb
orl
sbbl
mov
in
mov
mov
cmp
add
xchg
mov
sbb
xor
test
push
roll
mov
inc
push
mov
jae
add
scas
cmp
mov
jb
adc
mov
mov
inc
jge
test
in
inc
pushf
dec
xor
push
in
mov
cmpsb
jge
fsubrs
push
mov
jo
outsl
lods
pop
imul
cmp
es
jmp
xchg
fstpt
hlt
hlt
aas
xchg
in
mov
jg
das
sbb
or
cld
dec
and
push
sub
xor
mov
pop
xor
dec
dec
in
pop
mov
push
jmp
sbb
bound
or
jle
push
subb
add
std
xor
adc
lret
mov
dec
adc
dec
adc
out
pop
xor
push
xchg
mov
mov
inc
scas
mov
std
aam
mov
mov
add
mov
popl
call
sub
cmpsb
xor
and
or
in
dec
fs
sti
push
add
pop
jmp
xchg
mov
inc
cmpsl
dec
jg
adc
inc
lods
push
and
cmpsb
repnz
mov
cli
shrl
push
jne
jns
sbb
sub
hlt
loopne
mov
loopne
call
cmp
scas
into
fldt
inc
xor
pusha
and
jle
ret
adc
inc
loopne
push
mov
pop
xchg
pop
mov
or
das
movsb
cltd
and
out
adc
insl
aam
mov
out
cld
lret
popa
push
ret
out
add
clc
out
bound
ret
xorl
jle
or
sub
fcoms
add
push
xor
loopne
push
stc
lds
popf
jb
iret
out
idivb
sbb
cs
inc
lret
xor
add
sahf
stos
xor
cwtl
jo
pop
push
or
mov
push
lea
es
nop
mov
lods
int3
mov
stos
cmp
subps
mov
fst
mov
jp
mov
andl
mov
pop
rorl
lods
and
jg
test
mov
dec
test
repnz
mov
mov
jl
xor
inc
inc
and
jae
lcall
data16
xor
repnz
inc
xor
push
pop
leave
cmpsb
and
jp
or
mov
fwait
mov
pop
stos
daa
xor
inc
adc
pop
sub
mov
sti
push
jns
pop
mov
cli
stos
sub
pop
out
int3
test
lock
or
lea
mov
fs
pop
outsl
les
cmp
mov
mov
fwait
add
xor
mov
adc
jmp
sbb
pop
jae
xchg
into
aaa
rcrl
sti
adc
cmpsb
movsb
cs
ss
popf
iret
jo
cmpsb
ficompl
jecxz
out
and
out
push
outsb
sub
jp
stc
fcompl
clc
test
std
test
stos
sbb
push
xor
xchg
aam
dec
out
pop
aaa
cmp
inc
out
lods
jp
cmp
fwait
pop
mov
add
pop
jg
push
cmp
push
dec
sub
scas
ficompl
pop
enter
outsb
out
cmp
sarb
jno
fidivrl
xchg
sbb
pusha
in
mov
pop
pop
and
imul
pop
pop
shlb
addr16
pop
xchg
stc
mov
sub
into
pop
push
add
inc
fsubrl
jecxz
jae
dec
sbb
xchg
push
cld
or
push
subb
aad
sbb
adc
sbb
adc
push
mov
mov
lret
xchg
sub
xchg
xchg
leave
mov
cmpsl
and
pop
xor
xor
fisubl
xor
insl
inc
add
mov
cmp
std
stc
or
mov
pusha
sti
pop
dec
imul
push
and
mov
mov
popf
mov
xchg
push
jmp
adc
lret
in
fstl
nop
sbb
and
scas
inc
stc
push
jns
mov
loope
mov
push
daa
xchg
sub
ret
es
xchg
loope
or
mov
jae
es
sahf
dec
mov
rclb
mov
inc
push
lret
test
lods
pop
inc
sub
xlat
fstl
push
data16
pop
mov
and
leave
fdivl
sbb
andb
cmc
or
jns
into
sti
test
mov
in
cwtl
push
int
ljmp
pop
jbe
lea
mov
and
loop
or
xchg
mov
dec
lcall
jp
or
jb
js
pop
xor
hlt
ds
popa
pushf
out
ljmp
xorl
das
out
xlat
adc
je
xchg
jo
pop
pop
xchg
test
into
and
or
mov
leave
mov
xchg
sbb
test
test
cmpsl
lods
lret
stos
mov
sbb
popa
push
fdivr
jns
push
add
loope
das
xchg
mov
mov
jp
es
pop
inc
push
xchg
dec
das
imul
mov
and
jmp
xchg
leave
and
lcall
out
jle
pop
jecxz
cmp
pushf
and
jmp
popa
cld
add
fcmovb
outsl
adc
dec
mov
xor
and
mov
rol
add
add
popa
xchg
add
lret
cmp
pop
in
jne
lahf
psraw
out
mov
popf
pushl
mov
mov
insb
dec
das
xor
pop
stc
sbb
lds
fistpll
xor
mov
das
negb
mov
xchg
insl
xchg
xor
adc
adc
xchg
and
cmp
orl
push
lods
shrb
jo
jo
push
jp
lods
pop
scas
mov
mov
sub
and
sarl
pop
mov
pop
mov
pop
jnp
in
je
xor
sub
mov
cmp
adc
mov
sti
lret
loopne
adc
dec
gs
pop
mov
jo
and
lcall
mov
sbb
xchg
xor
adc
push
xorb
movsl
inc
push
sub
xchg
mov
test
rcrl
push
test
xor
sub
cmpsl
dec
sub
in
int
mov
jo
cltd
ficomps
sbb
popa
out
or
fimuls
sbb
and
fwait
jnp
data16
cmp
dec
jmp
adc
insl
imul
shr
inc
xchg
ficomps
test
mov
cmp
xchg
loopne
leave
mov
dec
lret
cmpl
sub
or
out
sub
cmp
fucomp
int
mov
or
lret
or
ficoml
push
pusha
out
xchg
dec
xor
and
jg
stos
xchg
lcall
xlat
arpl
xor
xchg
aad
je
add
sbb
push
bsf
cs
lods
jae
in
in
mov
pop
cmp
orb
mov
aaa
pop
pop
jno
test
in
inc
faddl
mov
nop
or
test
add
sti
fwait
push
xchg
jno
cmpsb
jne
insl
ret
lcall
out
sbb
les
sbb
movsb
xor
xor
xor
dec
push
push
adc
push
ret
jp
insl
inc
nop
push
fwait
sub
aad
pop
mov
nop
xchg
push
rcrb
fcos
and
adc
add
out
pushf
fistl
in
subb
mov
fidivs
inc
aad
mov
mov
je
and
mov
dec
pop
mov
inc
loop
test
subl
test
inc
xchg
cmp
xchg
push
cmc
loope
es
sti
and
push
pop
ss
mov
pop
cmp
pop
sbb
cmp
mov
scas
in
adc
xchg
repnz
daa
std
sbb
cmp
jae
imulb
imul
or
mov
ret
jno
imul
push
mov
mov
inc
leave
outsb
sub
imul
sbb
ja
or
adc
das
and
jne
popf
enter
loope
pop
sbb
cmp
iret
je
xchg
arpl
xor
jnp
iret
or
js
ret
mov
lret
add
dec
test
push
fcmovne
enter
push
sub
sub
fwait
pop
int3
lods
sbb
or
and
ret
fwait
lods
out
leave
mov
pop
fdivs
jbe
and
inc
mov
xchg
loopne
pop
stos
lretw
xor
testl
sbb
push
arpl
stos
sub
iret
push
clc
out
adc
int3
insl
xchg
addl
dec
daa
adc
dec
inc
adc
ja
xchg
xor
pushw
aas
subb
inc
jp
cmc
lock
in
or
cmpsl
pop
in
or
into
lods
or
xor
lods
xlat
fsubrp
int
inc
push
mov
test
stos
pop
jbe
stc
test
cwtl
pop
jnp
ds
in
lcall
fs
lds
xchg
mov
push
pop
cmp
fwait
mov
adc
decb
inc
icebp
nop
iret
or
inc
push
jle
add
ljmp
sbb
sbb
cmpsl
les
sbb
loop
jo
and
adc
popf
rolb
push
jb
push
enter
sub
inc
cmp
cwtl
sahf
pop
shlb
ror
mov
rorl
jnp
inc
push
add
and
mov
push
cmp
movsb
cld
mov
movsb
sbb
call
jecxz
xchg
push
inc
jecxz
push
mov
dec
mov
and
out
sbb
xlat
add
fstps
fcoms
xor
rorl
sbb
mov
orps
or
movsl
jne
int
xchg
pop
les
xchg
outsl
mov
inc
push
or
shrb
notl
out
mov
mov
mov
cli
cmp
ss
mov
je
popa
inc
imull
jae
adc
and
mov
pop
sub
bound
push
cwtl
cli
lods
popf
int3
dec
xor
jle
mov
sbb
leave
push
ljmp
les
pop
in
in
or
test
dec
pop
push
xor
add
mov
push
js
pusha
scas
fistpl
loope
test
pop
jo
inc
add
or
loope
mov
fistps
adc
aad
lock
xlat
xchg
out
inc
inc
push
jno
jne
dec
jbe
inc
add
outsb
sbbl
roll
mov
bound
aas
mov
sub
inc
roll
fdivrl
mov
mov
popa
stc
mov
mov
iret
out
cmp
cmp
in
mov
sub
insl
pusha
filds
insl
push
loop
fyl2xp1
lock
sub
sbb
xchg
sti
dec
mov
inc
and
xor
ret
inc
les
popa
adc
xchg
jns
pop
or
daa
insb
xlat
inc
xchg
sti
jbe
movsb
inc
dec
mov
jne
leave
pop
lock
pop
pop
add
pop
int
imul
inc
pop
in
cmp
xchg
push
je
xchg
lods
dec
int
dec
push
mov
idiv
sub
or
incl
loope
fnstsw
aaa
sub
cmp
rcl
mov
test
sbb
fs
push
xchg
pop
je
pop
outsl
imul
mov
push
ja
dec
jg
or
outsl
aaa
jmp
subb
int3
xchg
insb
xor
sbb
scas
sub
mov
int
xor
fs
jne
pop
ss
into
and
and
mov
jbe
insl
test
pusha
cltd
jge,pn
push
popf
pop
push
and
bound
dec
int3
cmp
fistpll
xlat
fnsave
xchg
jne
in
dec
xchg
cmp
add
sti
pop
inc
push
mov
test
inc
outsb
out
add
and
pop
sbb
int
xchg
and
in
push
pop
fs
and
lea
mov
sarb
out
test
ljmp
sub
xchg
and
push
cld
adc
dec
mov
mov
icebp
mov
dec
hlt
xchg
xchg
pop
or
je
fwait
hlt
xchg
movsl
clc
dec
mov
lahf
sub
scas
loop
xchg
pushf
jl
movsb
test
lret
and
inc
mov
sub
inc
add
xchg
in
inc
subb
fwait
inc
or
arpl
lods
insl
sub
les
cmc
jl
xchg
aas
and
sbb
xchg
mov
mov
xchg
in
inc
popa
das
flds
ds
mov
adc
gs
dec
shlb
cltd
ds
je
jne
aam
arpl
xor
jns
cmp
add
and
mov
mov
push
push
imul
jp
lea
sbb
dec
sub
mov
push
sbb
and
jbe
push
xchg
movsl
jmp
pop
pop
and
loop
xchg
jge
cmc
dec
jne
fstps
popf
xchg
jl
add
divl
sahf
adc
ljmp
insb
div
fwait
sub
cmpsl
add
insl
rcl
xchg
mov
fisubs
outsb
loop
lods
fiaddl
imull
add
js
lds
sbb
addr16
xchg
add
xchg
gs
and
pusha
lds
add
and
push
gs
pop
inc
aad
push
mov
sbb
mov
mov
lock
into
pusha
cmp
fiadds
fstl
lret
mov
xor
pop
ljmp
sub
adc
pop
fs
das
jbe
inc
and
jl
xchg
pop
jbe
or
sbb
or
fxch
cmp
scas
das
testb
sbb
inc
fildl
adc
insb
add
xchg
push
cltd
lds
push
iret
dec
fsubrs
mov
push
int
in
cmp
push
add
cmpsb
push
dec
stos
test
mov
lcall
jg
xchg
fwait
push
iret
or
inc
in
dec
sbb
movsb
dec
sub
or
cmc
xor
cmpsb
xchg
pop
mov
pop
adc
pusha
cli
pop
in
xchg
sbb
jno
inc
mov
inc
mov
call
scas
cmpsb
divb
int3
push
cmp
leave
int
sub
mov
nop
jge
roll
dec
enter
xchg
je
aaa
test
cvtps2pi
loope
jo
ret
std
aas
jle
mov
stc
les
lcall
lcall
and
xor
lds
dec
cmc
inc
std
imul
adc
sub
hlt
and
push
out
dec
xchg
fidivrl
addl
or
push
mov
xchg
dec
mov
popa
push
xchg
in
fildl
sub
pusha
gs
ss
into
aad
int
lds
lods
fs
loopne
scas
pop
fdivp
in
xchg
inc
cmpl
das
cmp
hlt
outsb
mov
negl
sbb
popf
push
adc
add
sbb
and
sub
sbb
cmp
mov
ret
mov
lret
cwtl
jg
mov
fisubrs
pop
ljmp
std
ljmp
in
mov
out
das
xchg
mov
or
xor
aad
shlb
inc
mov
aam
or
lret
aas
leave
pop
inc
roll
jmp
push
addb
lcall
clc
sub
int3
test
cmp
sbb
sub
movsl
pop
rorb
incb
and
or
arpl
stos
pushf
jecxz
orb
pop
rorb
sbb
and
insb
inc
in
cltd
jmp
shll
cmp
mov
sub
pusha
sub
orl
movsl
mov
cmc
jl
fildll
in
test
sbb
pop
call
cli
roll
push
hlt
orl
in
pop
ret
add
push
jmp
mov
fs
pop
cmpl
testl
call
inc
sub
stc
sbb
xchg
xor
inc
je
dec
std
fwait
mov
daa
insl
and
cmp
dec
or
enter
les
jmp
and
xchg
sqrtps
xor
mov
lret
inc
dec
cmp
mov
mov
sbb
clc
iret
mov
pop
mov
and
push
dec
inc
aaa
push
pop
and
or
fwait
mov
insb
mov
sarb
movsl
pop
sbb
cmp
jl
sbb
in
fs
test
scas
xchg
into
fstps
pusha
in
adc
mov
cmc
xchg
hlt
aam
push
repz
pop
xchg
jbe
shl
jno
add
outsb
cmc
push
test
or
mov
add
sbb
leave
or
clc
jae
mov
movsb
clc
iret
jb
lods
pusha
lock
std
pop
and
jb
add
mov
mov
in
fimull
push
inc
sub
mov
sub
in
adc
jl
cs
imul
xor
imul
addr16
pop
xor
inc
mov
xor
pop
aam
inc
adc
jae
cli
mov
ja
mov
out
sub
sub
sbb
icebp
push
pop
or
outsl
cmc
jmp
lods
jns
add
xchg
insl
cwtl
sub
xchg
in
mov
cmc
jne
test
inc
pop
es
mov
scas
add
xor
pop
xchg
js
mov
jp
push
adc
lods
in
jo
push
ret
cltd
cmpsb
add
xchg
mov
out
inc
clc
push
sbb
das
xchg
call
lahf
and
add
fildll
mov
mov
imul
outsb
or
fdivs
mov
cld
sub
cmpsb
sbbl
and
cmp
xchg
rcrl
dec
inc
dec
dec
adc
inc
adc
pusha
push
stos
pop
fsubrl
sub
and
daa
mov
test
pop
sbbl
fwait
pushl
jge
lahf
jg
mov
fwait
adc
scas
xlat
mov
ss
test
pop
subl
inc
outsb
sub
in
push
dec
scas
pop
pop
sbb
fcmovnbe
jl
movsl
xchg
shrb
dec
xchg
scas
dec
mul
adcb
push
xchg
int3
mov
jmp
push
cs
push
cld
add
test
and
inc
pop
dec
hlt
and
jo
dec
inc
mov
aad
push
je
mov
test
enter
mov
data16
test
add
dec
xchg
and
xor
stos
aas
xchg
fadd
xchg
cmp
mov
aad
lods
mov
inc
and
cld
inc
fimull
sub
gs
ja
inc
push
jns
gs
jae
sbb
pop
fisttpl
inc
adcb
rclb
push
push
int3
push
pop
mov
insl
hlt
or
lret
cli
mov
adc
push
test
or
jg
xchg
xchg
rcrl
popf
mov
leave
or
mov
mov
pushf
mov
dec
decl
sub
cmc
pop
ficomps
sbb
jle
mov
add
mov
loope
mov
stos
pop
sub
ds
adc
cmp
inc
stos
mov
gs
nop
jl
jo
push
out
xchg
sbb
mov
mov
outsl
rcrb
jns
lods
mov
dec
mov
or
add
popa
cltd
push
pop
inc
lock
fnstsw
hlt
dec
andl
dec
jae
add
xor
mov
test
or
movsl
fbstp
aad
movsl
pushf
out
fildll
lret
cmp
call
add
sub
sbb
dec
fldl
movsl
inc
jle
addr16
jbe
jo
stos
push
cmpsb
ljmp
jp
repnz
push
inc
and
arpl
add
into
lret
int
xchg
cld
mov
jmp
into
daa
xor
ljmp
rcl
cmp
cltd
in
aas
ljmp
add
or
mov
cmpsl
loop
clc
adc
dec
inc
add
xor
mov
popf
mov
jb
add
scas
or
in
cmp
adc
sbb
pop
sbb
mov
or
loop
ficoms
stos
xor
adc
push
push
mov
ljmp
and
xor
scas
es
out
adc
arpl
incl
les
stc
aaa
push
xlat
cmp
lret
loopne
ret
xchg
adc
cmp
pop
add
xchg
pop
push
mov
lcall
mov
pushf
xor
cmpsb
xchg
add
or
sarl
cmpl
pop
inc
sub
in
cmp
lahf
cmp
js
and
mov
and
mov
add
cmpsl
std
movsb
pop
fisubl
call
movsl
lcall
fcmovnb
daa
sbb
int3
aaa
xor
mov
jae
dec
xchg
mov
pop
repnz
insb
out
sbb
cwtl
dec
scas
daa
lcall
div
pop
insb
pop
push
or
pop
sbb
dec
enter
je
dec
jae
cltd
jle
movsb
test
les
inc
les
imull
in
addb
xchg
mov
jae
xchg
pop
sub
testb
in
stos
loope
lods
mov
lcall
xor
add
sahf
aaa
in
test
pop
xor
scas
adc
rcrb
pusha
or
cmp
dec
mov
mov
test
bound
loopne
mov
jecxz
test
arpl
js
jbe
pop
pushf
lahf
ret
sbb
sub
and
inc
sub
adc
or
push
xlat
pushf
and
dec
sub
push
test
rcl
test
or
push
dec
hlt
xor
test
or
rdpmc
jmp
or
or
jb
sub
popf
sub
push
mov
mov
popa
dec
xchg
imul
jnp
add
jbe
xchg
pop
dec
ret
fisubrs
cmp
sub
nop
xor
lahf
sub
inc
mov
xor
fisttps
pop
out
fwait
pop
sbb
push
xor
cmp
ljmp
sub
pop
jecxz
adc
nop
pusha
iret
insl
gs
aaa
ljmp
mov
movl
xor
aad
lods
and
cld
scas
pop
pminub
outsb
dec
es
jb
arpl
jbe
insl
mov
out
pop
cmc
push
lock
test
mov
push
inc
jne
movb
pop
push
das
bnd
add
inc
mov
cmp
lret
jbe
cld
dec
stos
lods
add
jae
js
jmp
push
fiaddl
sub
cmc
xchg
push
shl
imul
push
sub
dec
sbb
pop
in
cmp
insb
std
stc
gs
in
sub
in
xor
pop
divb
mov
ficoms
test
subb
mov
mov
mov
pop
in
into
mov
mov
jecxz
sub
pop
ja
and
cwtl
repz
push
pop
mov
inc
and
test
mov
sub
mov
jne
mov
data16
lds
add
xlat
add
imul
cs
push
movsl
mov
sbb
xor
or
daa
pop
test
cwtl
inc
loopne
pop
ds
shl
push
mov
fsincos
xor
rorb
mov
xor
adc
lea
pop
and
sbb
and
or
repnz
repz
xchg
mov
test
sti
shl
jg
adc
push
fwait
sub
mov
sub
push
cwtl
pop
test
rclb
in
fstp
dec
mov
pop
stos
aaa
dec
in
cs
rcll
aas
out
pop
add
dec
loop
cmp
fst
scas
fisttpl
and
shll
jecxz
pushf
cli
subb
push
xchg
das
in
jmp
mov
popa
mov
xchg
pop
loop
stos
sbb
push
push
pop
xchg
aam
enter
dec
repnz
cli
jecxz
mov
sbb
jmp
or
imulb
mov
add
jnp
xor
movsl
or
loopne
dec
rorb
fdivrl
sub
pop
pop
mov
sti
popf
pop
loop
jp
push
iret
sub
arpl
lock
bound
jmp
andb
and
mov
inc
mov
adc
ret
pop
jg
jge
std
cmc
lcall
icebp
imul
sbbb
les
dec
pop
mov
jb
xchg
xchg
jno
cmp
jno
fmuls
xor
in
imull
mov
cmp
sbb
inc
es
fwait
cmp
fcmove
and
dec
into
mov
mov
inc
jnp
inc
dec
mov
xchg
cmpsb
jle
int
mov
push
mov
mov
shll
popl
inc
call
sbb
xchg
movsb
sbb
xor
cwtl
mov
aaa
xlat
mov
in
sub
mov
mov
je
mov
jns
add
xchg
mov
dec
sub
lahf
loop
add
xlat
hlt
test
inc
push
cs
jmp
mov
mov
push
jne
popf
sti
rcrb
or
fidivs
iret
mov
dec
dec
pop
aad
scas
sti
in
adc
or
in
add
lret
sub
mov
push
xchg
subl
in
fldcw
mov
leave
jb
loope
es
mov
andb
test
std
daa
xchg
adc
jle
cmp
mov
xchg
xchg
sub
adc
lods
xor
sub
enter
add
insb
add
scas
js
dec
mov
and
fmuls
mov
lret
push
decb
fmuls
jbe
outsb
or
add
mov
mov
pop
in
sub
testl
test
pop
dec
cli
sbb
mov
mov
inc
popf
pop
add
and
mov
and
adc
push
out
cmc
sub
inc
pop
rcll
stos
cmpsb
xchg
negb
cmp
pop
or
sbb
mov
mov
stc
pop
insl
cld
stos
mov
jnp
mov
in
cld
mov
sbb
nop
andl
mov
ljmp
xchg
bswap
ds
cmp
sbb
sarl
add
and
or
push
pop
and
add
outsl
cmp
mov
jge
lds
sahf
sub
and
sbb
push
clc
sbb
mov
xor
lret
sbb
xor
cmp
popa
jl
mov
mov
mov
lret
jle
testb
mov
lods
cmc
test
mov
in
and
mov
add
lock
mov
xchg
ror
scas
xor
jns
xchg
pop
jmp
adc
loopne
adc
mov
in
ret
dec
fs
out
jne
and
rcll
adc
bnd
das
jno
daa
aam
lods
out
cmpsl
mov
inc
pop
sub
lods
add
cmpsb
jae
loopne
or
and
inc
sub
cmpl
sbb
push
mov
pop
sub
fwait
xor
cmp
je
ss
cltd
mov
mov
outsb
fistl
fmul
adcb
inc
flds
stos
add
ja
in
add
pop
sub
mov
pop
push
xchg
or
insl
subb
mov
xor
add
test
inc
mov
out
lahf
sub
push
pusha
inc
pop
push
inc
out
xchg
mov
mov
imul
or
insb
adcb
mov
data16
inc
sbb
arpl
cmp
sub
pop
mov
push
xlat
addr16
jmp
lea
cmp
lock
out
mov
push
and
jno
xor
pop
cmp
hlt
and
add
mov
popf
and
and
out
or
jne
lcall
fiadds
sti
xchg
mov
sahf
into
xchg
or
cmpsb
es
mov
mov
cmp
dec
mov
sub
lock
inc
test
test
imul
lret
xchg
add
cltd
iret
jl
loop
nop
add
hlt
adc
fcmovnu
adc
insb
cld
clc
inc
bsr
pop
ficoms
out
adcl
test
loopne
jne
jne
or
jb
inc
pusha
inc
gs
adc
push
jb
ficompl
jo
cmpb
rcll
scas
dec
loop
mov
insb
aaa
cmp
jl
inc
mov
add
mov
stos
or
ficoms
and
inc
js
dec
lret
loopne
movsl
or
aad
enter
inc
cmc
lods
outsl
cwtl
push
mov
xchg
sub
jmp
push
mov
fwait
mov
rorl
lret
dec
pop
inc
movd
jmp
mov
mov
rcrb
cmpsl
push
mov
pop
lret
add
cmp
lock
jle
xorl
inc
adc
push
leave
xor
jne
dec
jo
cltd
ror
cltd
outsb
incb
movb
or
notl
mov
in
sahf
xchg
or
fs
dec
lcall
dec
mov
sub
inc
mov
repz
stos
clc
dec
add
enter
lahf
jp
popf
lock
and
sahf
les
add
or
cmp
shrl
push
sahf
mov
xor
lcall
test
adc
inc
sbb
sub
cmp
pusha
lcall
mov
mov
je
call
cmc
jo
in
bound
sub
clc
and
and
scas
jae
icebp
mov
pop
jle
ja
inc
es
xchg
popa
insl
dec
imul
loopne
pop
dec
push
popa
cli
mov
insb
test
outsb
xor
inc
xor
in
jmp
cmc
je
daa
sti
mov
ljmp
dec
inc
jo
push
xchg
popl
inc
xor
in
fistpll
pushf
jp
lret
pop
or
or
test
mov
jno
int
stos
sahf
sub
xor
sub
cli
nop
imul
push
jmp
jl
es
mov
and
scas
push
xchg
mov
cmp
movsb
andb
in
pop
cltd
insl
lock
mov
sbb
call
jne
mov
mov
cmpsl
jmp
js
sbb
add
out
jmp
out
lds
jne
lods
push
mulb
pop
and
pop
dec
int3
icebp
sahf
lock
inc
fstl
sbb
test
jno
pop
sub
cmp
mov
sub
outsb
notl
xchg
pop
xor
aad
xchg
out
imul
sub
stos
inc
xchg
test
inc
fbstp
mov
and
loop
sahf
enter
movl
inc
jl
dec
xchg
cltd
push
sbb
rcl
adc
sbb
dec
mov
push
loopne
lea
sti
cmc
push
jge
xor
test
stos
xchg
out
or
imulb
pop
hlt
push
shl
sar
xor
out
add
mov
sbb
test
les
push
test
adc
dec
dec
push
mov
repz
inc
mov
inc
stc
inc
cmp
xchg
mov
fsubrs
xlat
hlt
jmp
xchg
ja
pop
sub
leave
cmc
mov
pop
push
fimuls
das
add
adc
enter
enter
or
ret
sbb
pop
jns
mov
loop
imul
pop
dec
mov
dec
lock
lahf
push
mov
dec
or
in
jge
outsb
jl
sub
push
adc
or
in
out
inc
int3
ret
sarb
adc
pop
in
push
push
add
or
lods
mov
hlt
xor
cltd
incb
imul
pop
jge
jo
pushf
lods
mov
es
sub
xchg
nop
mov
test
or
xor
jns
sarl
jge
mov
ss
and
xor
aad
sub
movsl
leave
sub
sti
test
mov
test
and
jl
cmpb
mov
sbb
ss
mov
push
pop
nop
push
les
ljmp
lret
sub
pop
pop
dec
out
jbe
iret
or
lock
int
or
dec
mov
insl
sub
adc
push
out
jb
sbb
adc
sub
xor
jb
push
sbb
dec
sti
mov
mov
testl
je
dec
int
jb
mov
mov
inc
daa
jmp
mov
fwait
das
pop
out
lret
mov
pop
daa
push
inc
add
jns
jmp
xlat
in
mov
stos
fisubl
cmp
mov
add
push
jge
lds
and
mov
lahf
in
mov
inc
adc
push
pop
mov
out
mov
out
sbb
sbb
repnz
xor
push
andl
cltd
push
lahf
mov
jno
cmp
jl
pop
int3
adc
and
imulb
mov
adc
inc
cmp
add
ljmp
dec
pop
fldt
mov
cltd
ja
enter
sub
adcl
add
iretw
rcll
pop
adcb
out
cmp
and
jo
sbb
sbb
nop
icebp
test
xor
jl
jb
sbb
add
int3
cmp
push
rep
and
mov
add
arpl
sub
mov
push
add
jge
push
jp
cmpsl
and
nop
adc
jmp
push
push
pop
in
out
mov
out
aas
mov
inc
enter
push
aad
xchg
fmuls
mov
rolb
jb
js
icebp
xor
cmpb
push
lods
clc
inc
and
xchg
ljmp
cmp
mov
cli
ds
sar
xchg
rcrb
mov
stos
mov
aaa
xchg
pop
push
dec
pop
xchg
mov
iret
lods
or
or
outsl
pop
or
pop
pop
inc
pop
aaa
xchg
sub
sbb
xor
and
push
xchg
xorl
add
dec
movsl
inc
incb
cmpl
cld
dec
cmp
push
xor
lret
mov
dec
inc
mov
cmp
push
inc
cld
pop
cmp
dec
mov
xchg
call
incb
daa
lcall
mov
adcb
shll
sbb
je
push
sti
fsubrs
mov
lret
push
stos
pop
push
data16
addr16
inc
push
neg
and
add
outsb
mov
dec
add
xor
ds
fmulp
dec
aam
mov
daa
push
fidivl
mov
push
rorl
shl
out
push
mov
or
test
lock
jns
jb
incb
jb
sub
loopew
mov
jae
inc
je
mov
add
sahf
mov
lock
jno
sub
cmp
mov
enter
fwait
imul
xor
cmp
cld
pusha
sbbb
inc
test
sahf
adc
push
mov
aas
xor
push
stc
add
jp
imul
jp
push
clc
out
lcall
addr16
aam
shll
cmpsb
jmp
inc
mov
das
lret
into
inc
jno
mov
sub
in
jno
jmp
jmp
aas
test
or
push
aaa
out
jbe
call
fiadds
push
xor
loope
jnp
fdivp
jbe
sbb
cmp
pop
fs
gs
stc
stos
lea
jbe
xlat
pop
je
push
sub
push
sbb
and
outsl
lahf
pop
das
adc
mov
sub
hlt
cwtl
sub
insb
sub
pop
xchg
pop
fistpl
mov
jnp
push
dec
imul
and
push
dec
dec
hlt
arpl
xor
sahf
fldenv
fsubs
icebp
inc
adc
mov
cmp
mov
jmp
adc
push
push
cmp
clc
in
xchg
cli
xlat
call
cs
repnz
lret
jge
lds
ficoms
jle
xor
mov
inc
daa
shlb
hlt
adc
aaa
pop
addl
pop
sub
sbb
fdivrs
and
mov
jbe
cs
inc
popa
sbb
inc
mov
aam
test
jbe
mov
pop
sti
ds
in
add
test
sub
pop
aad
popa
xchg
ljmp
mov
push
cmp
jns
jb
inc
notb
cmp
data16
or
pop
or
jecxz
mov
inc
pop
lds
into
sbb
leave
and
and
hlt
dec
push
mov
sarl
jl
or
push
jbe
daa
xor
fsubs
mov
xchg
pop
ret
scas
sbb
and
mov
xchg
push
dec
pop
outsl
sbb
mov
inc
cmpsl
push
jge
xchg
pop
fldenv
scas
and
shlb
adc
jmp
xlat
loopne
out
sti
add
jne
pop
fidivrl
inc
dec
lret
inc
sbb
sub
pusha
pop
inc
aad
xchg
cmpb
js
pop
jae
mov
xor
stos
jnp
dec
pop
mov
stos
ret
and
and
sbb
and
inc
or
aam
xor
push
sbb
mov
add
imulb
jnp
mov
loop
mov
cwtl
mov
ret
imul
mov
sbb
aam
shrl
in
xchg
cld
std
sub
fdivl
xlat
mov
mov
int
sbbb
pusha
pop
jle
jl
cmp
adc
scas
data16
jecxz
mov
xchg
es
mov
sbb
sub
cmp
cltd
push
fwait
rorl
add
fidivrl
loopne
vcvtpd2dqx
clc
pop
iret
out
dec
xchg
pop
mov
xchg
add
cmc
stos
mov
icebp
xchg
scas
ss
in
jl
or
fcoms
cmc
stos
jge
pop
mov
std
cmp
xabort
sti
cmpsl
mov
or
xor
xchg
adc
mov
xor
out
test
dec
and
call
ljmp
daa
cmpsl
push
lods
fbstp
fcomps
inc
out
andb
push
adc
mov
loop
xor
dec
and
out
jbe
jg
mov
add
inc
sbb
popf
sti
inc
lods
subl
cmp
add
stos
xor
add
jbe
movsb
or
sbb
aam
add
push
popl
mov
js
xor
pop
add
push
jp
xor
ljmp
sub
mov
and
loopne
das
mov
inc
sbb
mov
sub
push
or
push
inc
insb
cli
cmp
add
xchg
xor
ja
push
push
fs
pop
or
notl
testl
dec
inc
nop
mov
cmpsb
sbb
sub
not
xchg
fucomp
movsl
adc
mov
popf
push
mov
imul
out
in
pop
repz
aaa
nop
mov
add
cmp
fmulp
cmpb
mov
cmp
xchg
cmpsl
or
push
adc
xlat
sbb
icebp
insb
and
mov
stos
testl
ss
fists
push
mov
cmpsl
pusha
mov
and
es
mov
mov
out
test
pop
mov
mov
adc
xchg
sbb
ja
xor
fdivs
mov
cmp
sbb
ja
dec
call
les
adc
fwait
cmp
aad
inc
adc
xchg
fidivs
addl
or
lahf
fiaddl
jle
cmp
cmpsl
mov
sub
lahf
je
loope
daa
jb
or
xchg
sti
mov
cmp
push
or
jns
push
jle
mov
scas
bound
mov
jmp
movsb
cmpsb
aas
xchg
mov
enter
fsubrs
leave
fucom
sub
popf
iret
pop
cli
pop
in
adc
push
aam
push
xor
xor
jb
arpl
sub
xchg
inc
jmp
int3
sbb
loopne
lret
pop
sub
sbb
jle
jo
or
loope
cmp
lcall
sarb
push
cmpsl
loope
in
inc
cmp
and
and
imul
loope
push
rcll
js
mov
cmp
inc
mov
adc
fnsave
icebp
mov
sbb
adc
pop
xor
jne
mov
adc
gs
hlt
arpl
cmpsl
test
icebp
addr16
repnz
fcomi
sbb
jo
jno
mov
dec
adc
pushf
xchg
loopne
stos
orl
inc
inc
or
adc
fcmovnbe
mov
dec
pop
cmp
push
stc
in
inc
cld
xor
jg
mov
push
fdivrl
sub
lods
sbb
dec
call
sahf
lahf
pop
loop
or
jge
call
mov
push
lock
xlat
es
mov
and
jbe
push
ja
sbb
dec
ficompl
mov
repnz
mov
inc
out
mull
btr
scas
or
insb
int
mov
xor
fwait
xlat
push
mov
shl
mov
sbb
sbb
stc
jmp
pop
dec
cli
inc
in
fdivrl
dec
push
mov
sbbl
dec
inc
xchg
loopne
flds
jb
xchg
lahf
mov
ret
push
test
xor
sbb
sub
and
cmp
enter
add
shlb
enter
mov
stos
pop
jno
daa
negl
adc
or
aaa
jb
push
mov
push
fdivs
sbb
stos
data16
std
ljmp
shrb
mov
int3
mov
jg
mov
ret
in
xor
in
into
mov
dec
pop
ljmp
cld
aaa
das
sbb
jecxz
mov
roll
call
push
sbb
adc
pop
movsl
push
mov
ds
pop
pop
or
out
js
test
orb
push
faddl
lret
popa
cmp
jae
mov
leave
dec
test
xor
fdivrp
add
lahf
mov
fbld
and
call
lret
and
ret
je
xor
imul
inc
pusha
ret
cltd
test
ljmp
dec
push
shlb
out
es
repz
mov
jns
movsl
push
movsl
mov
dec
aas
mov
xor
xlat
push
xlat
jbe
iret
dec
dec
in
cmpsl
mov
push
adc
jns
call
leave
push
or
mov
mov
movsb
out
cmp
in
jno
sub
aad
insb
push
js
sbb
sbb
pop
xor
repnz
push
scas
lods
icebp
xchg
lds
in
mov
ficomps
in
jge
cwtl
mov
pop
sub
push
cmp
cli
lcall
push
rcll
mov
fwait
sub
jmp
test
jns
push
inc
jno
cltd
insb
frstor
hlt
mov
shll
stos
data16
and
cmc
scas
imulb
jne
mov
out
xor
sbb
loopne
sahf
pop
sub
aas
roll
mov
enter
xor
dec
rclb
sub
test
imul
cmp
xchg
mov
pop
out
clc
sarb
dec
mov
and
fbstp
pushf
push
out
in
mov
rclb
push
pop
dec
bound
cmp
in
mov
sbb
mov
inc
sub
xchg
mov
repnz
xor
scas
into
lods
pop
into
repnz
sub
out
inc
ret
dec
mov
or
xor
mov
out
add
and
ja
popf
ss
or
and
dec
add
jle
loop
xor
sbb
movsl
out
lret
js
int3
std
mov
pop
psubusb
mov
imul
lods
sarb
push
xchg
iret
sbb
mov
imul
mov
fcomps
xchg
lret
xchg
jo
fdiv
enter
inc
xchg
sahf
mov
ss
adcl
pop
divl
and
add
rcr
add
incb
cmc
inc
cwtl
cmpsb
dec
pminub
jbe
call
pop
or
mov
mov
cmp
and
out
movsb
popf
add
add
or
pop
xchg
and
jg
or
dec
pop
cmpsb
rcr
fxch
sub
inc
jno
pop
incl
mov
sbb
je
dec
repz
adc
xlat
cltd
mov
fwait
and
lahf
inc
ficoml
and
aas
xor
xor
adc
and
in
ret
jmp
call
les
stos
jle
cmpsb
inc
dec
ret
icebp
push
aaa
xorb
aas
add
outsl
xor
or
fcompl
dec
mov
fs
outsl
loope
push
into
and
in
lods
gs
jmp
push
in
mov
test
movsl
addl
divb
loopne
xor
in
cwtl
int3
xchg
mov
push
int3
cmp
jns
mov
xor
xchg
mov
xor
inc
scas
inc
mull
mov
sbb
cltd
loope
mov
push
cmp
shll
dec
mov
movsb
lea
mov
test
into
bound
repnz
push
inc
outsb
hlt
mov
into
insl
push
jno
mov
sti
test
daa
idivb
inc
add
xlat
lods
mov
insb
scas
push
inc
out
push
pop
or
or
xor
leave
pop
mov
inc
jae
in
jne
stos
xor
lea
imul
jno
ljmp
xor
fs
sub
jne
and
push
push
fnstsw
sub
enter
repnz
push
hlt
leave
ds
mov
in
dec
jmp
jge
cmpsb
adc
push
pushf
repnz
push
xchg
pushf
mov
sub
and
and
mov
out
add
imul
or
pushf
mul
out
imul
clc
insl
jbe
je
xchg
lods
pop
roll
mov
mov
test
pop
inc
cli
insl
call
cltd
pop
push
pop
cltd
aaa
and
sub
not
mov
iret
push
or
ljmp
sbb
out
xchg
in
arpl
andl
and
insl
inc
ret
sbb
inc
std
lds
pop
ja
stc
movsb
lods
push
fisubrl
adc
lret
cmp
movsl
jp
dec
xor
fidivs
incl
push
sub
loopne
fwait
xchg
dec
add
mov
cli
mov
push
sahf
cltd
clc
mov
lods
pop
fidivl
cmp
scas
or
pop
in
jg
sti
dec
stos
or
adc
imul
dec
mov
sub
inc
les
push
lods
and
fdivl
and
loopne
mov
jge
lea
mov
push
test
imul
rcrb
loop
xor
scas
mov
inc
aaa
in
rolb
js
repnz
sbb
call
popa
or
outsb
inc
adcb
cmp
adc
fwait
imul
lahf
xchg
inc
dec
cmp
stos
in
mov
add
mov
xor
cmpsl
add
idivl
push
out
fcomps
lods
xor
jnp
mov
imul
jecxz
add
cmp
lret
inc
stos
or
mov
sub
mov
mov
mov
xor
rcr
andl
in
pop
stos
popf
data16
xchg
adc
call
cmp
loopne
test
roll
pop
subb
jp
jmp
xchg
or
jne
scas
or
into
xlat
std
mov
add
icebp
mov
aam
mov
cld
fsubrl
and
lahf
push
leave
sahf
gs
shrl
hlt
adc
ss
pop
add
lods
imulb
es
hlt
fcompl
xchg
popf
push
add
loopne
arpl
xchg
jecxz
add
inc
add
mov
rclb
xchg
int
add
push
inc
out
scas
iret
cld
aas
pusha
clc
push
mov
sub
xor
mov
jmp
inc
insb
inc
mov
jne
xor
mov
push
sub
adc
mov
lods
imul
sub
test
push
and
push
sbb
and
shlb
roll
jo
mov
test
adc
mov
add
cwtl
dec
push
test
push
push
mov
push
pop
adc
mov
rcrb
shrb
fdivs
sub
inc
xchg
loop
xchg
mov
test
fs
out
outsl
push
lods
mov
in
jl
fisttpl
inc
jb
punpckldq
test
scas
arpl
lret
mov
pushf
xor
inc
adc
add
jge
xchg
dec
jb
mov
jno
addb
sub
push
jns
sub
and
or
mov
jmp
sbb
xor
std
inc
mov
ss
test
adc
cld
xchg
js
pop
cmp
xor
sub
decl
mov
or
mov
adc
iret
lods
pop
push
movsb
out
xchg
fidivrl
sti
inc
test
sub
sbb
aam
lea
xor
mov
adc
int3
aas
data16
adc
dec
popa
fcompl
inc
enter
mov
cmp
jo
jno
arpl
ret
lret
xor
pop
daa
in
in
mov
out
cmovge
fcompl
aas
sub
pop
daa
dec
imul
loope
add
mov
jmp
das
repnz
xchg
pop
popf
mov
xchg
jnp
imul
cltd
adc
nop
pop
add
fisubrl
mov
addl
das
dec
outsb
push
loope
xchg
add
movsl
jmp
pop
adc
fimull
jle
inc
xchg
push
out
rorb
mov
flds
dec
andl
cmp
sbb
adc
jp
roll
repnz
aaa
shr
mov
push
push
fdivp
aas
rcrl
mov
int3
push
ss
divb
push
and
stos
sub
ret
lods
bound
lret
sbb
loope
cmp
mov
mov
gs
rolb
sbb
mov
sub
lahf
push
jb
js
mov
rcr
fisttps
lock
icebp
sarb
xor
fsubrs
sbb
repz
aam
imul
dec
ljmp
divl
and
sub
jl
cmp
dec
xor
or
nop
rcr
cltd
stos
mov
cwtl
js
shll
rolw
fdivs
sbb
cli
aaa
shr
std
push
enter
es
push
stos
shr
jb
mov
adcl
xchg
cmp
or
xchg
push
enter
fs
push
jle
pop
sarl
iret
mov
mov
gs
inc
jae
jecxz
cli
daa
js
jp
pop
mov
sub
inc
jae
mov
ret
lret
insb
jl
sti
xor
std
lret
dec
xchg
mov
sub
xor
repnz
lds
mov
call
into
dec
inc
ds
dec
test
push
and
ficoms
int
das
outsl
lds
jb
int3
aam
sbb
or
mov
jb
sahf
jl
das
xor
jle
mov
test
inc
sbb
adc
xor
insb
arpl
push
ljmp
stos
sub
push
sub
test
pop
int3
mov
bound
cmp
sbbb
out
das
push
pop
cmp
lea
les
fiaddl
loopne
fldcw
paddsb
fnstcw
lcall
xchg
pop
repnz
lret
mov
and
mov
jecxz
loop
add
arpl
dec
mov
imul
xchg
add
pop
inc
das
xchg
jl
and
in
movsb
movsb
adc
sbb
jecxz
mov
adc
cmp
in
dec
add
adc
int
in
rcrl
je
xor
add
xor
popf
push
inc
jecxz
in
jne
pop
cmpsb
test
or
out
add
repnz
cmp
push
outsl
sub
xchg
xchg
xlat
insl
mov
incl
loop
xor
push
test
jmp
mov
push
mov
ret
ja
movsb
in
add
loope
push
outsl
int3
scas
push
iret
fs
and
add
jbe
mov
addr16
aas
cmp
scas
mov
add
add
fcoml
in
icebp
mov
dec
ds
jns
or
loope
cmpsb
and
and
addb
rcll
mov
lret
sti
ljmp
push
mov
clc
lods
lods
mov
xor
cmp
cmpsb
push
loop
sub
gs
pop
or
fisubl
add
xchg
mov
pusha
sub
ds
pop
add
add
add
out
mov
xlat
mov
push
loop
in
insb
mov
mov
adc
into
or
pop
mov
pop
arpl
add
lret
jmp
rorb
scas
mov
jo
fstpt
push
mov
sahf
gs
cli
pop
cmp
test
jno
sub
mov
jbe
pushf
push
cmp
fadd
jb
rcrb
push
mov
mov
adcl
inc
lock
adc
pop
jp
je
mov
mov
xor
faddl
cli
push
dec
cmpsl
or
sbbl
insl
xlat
aad
repnz
push
jecxz
mov
hlt
xor
adc
push
add
pop
daa
lret
hlt
fdivrp
stos
popf
xchg
arpl
insb
cmp
dec
pop
arpl
inc
mov
jmp
ljmp
add
stos
icebp
outsb
rcll
fnstcw
loope
push
ja
lock
sbb
in
sub
mulb
adc
les
cld
add
mov
stos
push
lock
dec
jno
xor
inc
cmp
inc
ja
xrelease
iret
pop
lods
cmp
loopne
xchg
inc
inc
dec
fdivrs
hlt
mov
mov
in
add
rcrb
ja
sub
jp
sub
xor
subl
mov
scas
adc
inc
and
add
insl
lods
mov
ljmp
inc
in
popf
mov
imul
jb
mov
cwtl
lds
cmpsb
push
fdiv
lea
fwait
dec
aas
sbbb
pop
inc
push
mov
ss
movsl
jp
xchg
or
outsl
xchg
cld
push
add
push
lock
cli
xorb
xchg
shll
mov
stos
ret
jmp
data16
imul
sbb
xchg
sarl
mov
push
repnz
fldl
sub
mov
ss
leave
pop
jl
pandn
fwait
xchg
pop
cld
mov
mov
xchg
sbb
and
stos
ja
and
and
test
insl
push
fstps
loopne
dec
push
mov
mov
sbbl
cmp
stos
add
jmp
push
fiadds
cwtl
ret
sbb
xchg
xor
pop
ffree
or
dec
dec
pusha
mov
mov
bound
push
adc
imul
sbb
in
push
jmp
je
popa
cld
rcr
mov
jno
or
sub
mov
mov
cmp
pop
and
jmp
mov
jno
and
mov
and
mov
out
xor
xchg
aaa
imul
dec
out
inc
les
adc
in
or
js
int
aam
mov
roll
xor
in
ret
jno
xchg
sub
adc
int
xor
inc
ret
cmp
or
inc
jmp
clc
roll
pop
lock
mov
in
jo
gs
sub
roll
rcrl
xchg
sahf
mov
sbb
jle
sub
fdivs
and
pop
pop
xchg
dec
xor
imul
cltd
jbe
xor
sbb
insb
stos
loope
aad
pop
movsb
or
mov
je
push
dec
cmp
fildl
cmp
or
out
jns
xorb
xor
sahf
fwait
fs
cmc
adcl
mov
bound
in
jle
scas
inc
cmp
aam
jg
lret
iret
subl
lds
rol
repnz
popa
cmc
aad
fwait
iret
mov
push
notb
and
pop
xchg
in
lea
gs
xchg
dec
stos
mov
outsb
cmp
mov
or
sbbl
push
mov
mov
push
dec
jnp
aaa
sahf
push
test
or
out
stos
aad
aaa
push
clc
pop
dec
loopne
rcrb
lock
lods
in
cmc
or
xchg
adc
loope
ljmp
int3
into
bound
xchg
cmp
insl
xchg
mov
jbe
out
cwtl
lcall
ja
push
jl
cmp
and
popf
mov
add
sub
in
ljmp
imul
xchg
or
sub
lahf
or
adc
and
mov
xchg
ja
fsub
outsb
aas
or
dec
add
idiv
jp
popa
jb
cmp
mull
inc
xlat
jno
lds
std
ror
cltd
loop
mov
and
out
push
pop
mov
push
shl
insb
mov
or
jl
mov
pop
xchg
mov
jg
fldcw
repnz
out
int
into
inc
shr
pop
mov
in
pcmpgtd
in
mov
pop
mov
imul
rcr
scas
pushf
cmp
scas
mov
add
popf
or
fsubrl
mov
xor
mov
push
scas
ss
mov
jb
xor
test
cmp
pushf
test
out
outsl
jg
mov
adc
loope
fistpl
pshufw
cmpsl
loope
loop,pn
ljmp
stos
inc
cli
fmul
mov
xchg
or
and
aam
aaa
xchg
inc
xor
in
cmpsl
sub
int3
aam
lcall
xchg
and
sub
lea
into
fldpi
jp
sub
dec
mov
je
xor
inc
imul
scas
pop
push
dec
les
cmp
scas
addr16
sbb
push
js
mov
in
repz
dec
cmc
mov
rolb
push
loop
mov
xchg
out
arpl
xchg
and
shlb
mov
std
push
subl
out
stos
js
bound
loop
pusha
xchg
inc
add
aam
sbb
lret
and
shll
push
and
xchg
adc
test
jl
add
mov
in
imul
cli
mov
lret
imul
bound
popa
adc
dec
push
inc
aas
stos
fnop
mov
sbb
or
pop
push
leave
inc
stc
sbb
shl
xchg
test
mov
xchg
pop
pop
shlb
cwtl
push
in
arpl
fcoms
and
jp
sbb
inc
fistpl
push
mov
leave
movl
mov
mov
add
push
jae
mov
xor
mov
repz
xlat
push
xor
fstl
adc
iret
imul
and
fimull
pop
adc
adc
gs
inc
pop
mov
mov
mov
xor
mov
push
in
gs
and
push
push
sti
add
mov
xor
lds
cmp
mov
pop
pop
jb
addr16
arpl
orb
in
add
mov
roll
mov
or
cld
cmp
mov
and
mov
or
in
xchg
xor
cltd
xchg
stc
stos
ja
dec
push
sub
cmp
pop
pop
decb
xchg
int
nop
mov
incl
sub
cltd
fs
jle
dec
mov
sbb
enter
mov
xchg
push
cmc
adc
push
lock
cmp
mov
call
pop
inc
lea
add
xchg
sub
test
shlb
mov
imul
insl
xchg
xchg
jle
adc
iret
pop
mov
xchg
jle
bound
push
jae
stos
outsl
out
mov
cli
inc
enter
cwtl
mov
or
aad
mov
mov
pop
decb
inc
cmpsl
push
adcb
xchg
pusha
push
es
movsl
add
or
fisubrs
dec
aam
cmp
fsubs
mov
and
pop
lahf
inc
mov
lcall
jle
pop
adcl
filds
mov
lock
std
sahf
int3
imul
xor
mov
stos
in
aad
mov
mov
sub
fcmovbe
push
lea
push
iret
inc
fildl
xlat
jae
pop
xor
test
stos
pushf
xor
adc
jge
scas
lret
test
cmp
clc
lods
mov
add
xchg
xor
addr16
pop
mov
orb
incb
jecxz
pop
scas
pop
fsubp
push
imul
mov
adc
int
fisubs
mov
addr16
cmpsb
or
mov
mov
jnp
adc
cli
and
cwtl
mov
std
insb
push
sti
mov
add
pop
sub
out
rcll
loop
xchg
cmc
test
cmp
pop
pop
movsb
cwtl
xor
roll
xor
xor
add
nop
mov
mov
add
icebp
xor
shrb
mov
xor
and
xor
inc
jb
and
cmp
out
cmp
loope
pushf
sbb
pop
push
sbb
mov
and
jb
lea
push
sti
jge
fdivr
jnp
ss
js
scas
sbb
loop
enter
sbb
sbb
and
xor
and
inc
mov
add
jecxz
inc
shlb
neg
pop
mov
es
loope
xchg
mov
or
push
xor
inc
push
or
fiadds
xor
or
sbb
cmp
rcrl
xchg
hlt
jno
add
imul
outsl
mov
pop
jecxz
nop
xchg
call
leave
pop
ljmp
sahf
stos
mov
fmulp
mov
jl
sub
xchg
fs
or
sbb
orb
inc
pop
insl
stos
dec
mov
inc
pusha
jle,pt
xor
pop
mov
mov
rcr
add
push
out
xchg
aam
jmp
xchg
and
dec
dec
pop
cmp
cmp
daa
cmp
xor
pop
xchg
in
lods
add
push
xor
shrl
je
inc
mov
dec
outsl
or
push
push
sbb
push
adc
lcall
gs
jmp
into
insl
pop
cmp
pop
sub
fsubr
imul
mov
mov
sbb
adc
sub
cmpsb
in
mov
pop
mov
cmpb
push
and
pavgb
aas
bound
push
dec
jae
jne
scas
insl
inc
xchg
mov
repz
sahf
xor
inc
pop
or
mov
out
hlt
xor
mov
test
lahf
repnz
push
adc
xor
mov
push
in
lahf
sarb
inc
or
sbb
scas
dec
mov
sbb
xchg
push
jns
add
aaa
push
call
or
cmp
cmpsl
aad
gs
fdivrs
jle
pop
out
xchg
sub
test
or
and
jmp
outsb
addr16
es
loop
cmpsl
rcrl
pop
in
and
fs
pop
mov
or
cld
xor
fsubrl
push
imul
xchg
cmpb
insb
mov
int
xchg
sbb
and
cmpsl
ficompl
and
mov
call
cmpsl
xchg
mov
ret
sbbl
lea
das
faddl
jmp
stos
jne
pop
jb
out
movsb
xchg
out
stc
aad
adc
scas
loopne
daa
jbe
pushf
aam
fadds
rcrb
adc
add
mov
mov
sti
pop
xor
mov
scas
add
cmp
out
sbb
sbb
and
enter
cmp
sbb
sub
pop
xor
movsb
movsl
popf
stos
sub
jmp
int3
ss
lods
pop
add
mov
movsl
pop
xchg
dec
call
jge
pop
jns
ret
jl
mov
mov
or
jl
xchg
jae
outsb
pop
adc
out
cld
popa
scas
mov
cmpsl
fdivl
stos
mov
fstps
test
ret
shl
or
push
and
out
insb
popa
pop
mov
adcb
lock
jnp
sub
ds
mov
jge
or
bound
push
mov
pop
lods
push
push
and
mov
pop
cmpsl
mov
lds
mov
mov
out
mov
out
sbb
das
and
add
jg
push
lahf
sub
pop
or
ret
in
pop
lahf
mov
into
outsl
fcomps
jae
nop
push
or
inc
movsb
sti
movb
subl
jmp
aam
imul
pusha
cld
inc
xchg
fisubrs
push
imul
insb
xor
sbbl
pusha
lds
movsl
sbb
pusha
jo
fistpl
insl
inc
adc
rolb
enter
add
and
jmp
mov
pop
or
stc
or
jo
shrb
push
outsl
mov
or
mov
in
cld
cltd
or
lds
push
outsb
mov
pushf
or
or
std
mov
and
in
je
mov
mov
xor
stc
pushw
test
xchg
push
loop
inc
aam
sahf
shlb
stos
jno
leave
lret
data16
ja
add
cmp
enter
adc
movsl
mov
and
mov
roll
inc
mov
push
rcl
sub
mov
push
loopne
out
ds
loop
lret
in
xor
add
rolb
sbb
jp
fwait
scas
or
imul
xchg
jmp
push
pop
and
dec
mov
inc
cltd
shl
lcall
gs
dec
loope
dec
xor
xor
or
adc
pusha
cld
xchg
push
adc
movsb
mov
pop
xchg
xor
call
mov
inc
in
add
xor
lods
setae
nop
mov
loope
sahf
add
lret
push
push
sub
rcll
sub
jge
mov
das
stc
popf
pop
push
xchg
sbb
cmpsb
adc
addr16
jge
jmp
or
sub
fsubrp
insl
insb
pop
jp
adc
stos
insb
addl
push
cmpsb
adc
pop
jg
lret
add
stc
out
pop
adc
inc
fwait
insb
mov
imul
insl
test
leave
push
cld
popf
add
push
leave
sub
lock
insb
lea
inc
ret
and
and
pusha
jecxz
cli
call
sub
movsb
int
lret
push
push
or
push
add
inc
out
leave
cs
pop
xchg
ss
jb
int
sbb
jmp
shrl
fidivs
inc
mov
mov
or
int
jno
cmp
jae
ret
jns
xor
pop
mov
pop
cwtl
jmp
andl
inc
scas
xchg
ds
jbe
mov
add
xchg
jae
cmpsb
leave
pop
sbb
ss
rep
fsubr
fcom
lcall
cmp
es
cli
sbb
xor
sti
sbb
pop
xor
xor
mov
inc
movsb
popa
mov
jmp
loop
pop
inc
mov
push
les
lret
mov
out
or
mov
aas
push
inc
test
sub
mov
jmp
movsb
jle
sbb
icebp
leave
arpl
sub
inc
inc
xchg
mov
sti
adc
fs
ret
xchg
cmp
arpl
and
add
mul
rclb
mov
xchg
aas
jno
pop
inc
ds
lea
in
lock
call
push
jmp
or
nop
jo
nop
inc
lret
ret
xorl
cmp
inc
or
aam
sbb
daa
sbbb
mov
jns
mov
repz
cmp
pop
in
xor
xor
dec
sub
sub
sbb
dec
mov
ja
mov
jl
or
das
mov
loope
neg
je
sbb
pmaddwd
mov
movsl
xchg
test
pushf
lcall
xchg
xor
and
pop
aaa
ja
pop
cltd
fs
mov
dec
adc
leave
mov
int
inc
sarb
push
mov
cld
xchg
ja
dec
xor
mov
btr
test
bound
xchg
mov
push
mov
in
xchg
cs
orl
push
fcoml
pusha
rclb
push
or
call
mov
jp
inc
add
imul
mov
popa
sub
in
bound
inc
cmp
lea
fdivrs
dec
push
jb
aas
cld
mov
push
jl
rclb
outsl
or
mov
xchg
push
xor
in
xchg
icebp
pop
repnz
sub
sbb
bound
adc
add
pop
out
clc
dec
xlat
cmp
adc
push
xchg
sub
nop
sbb
enter
ffreep
cmp
in
in
dec
orl
inc
mov
adc
push
jns
test
jmp
insb
addl
mov
inc
xchg
and
cmpsb
jecxz
test
add
sub
xchg
xor
sbb
repz
sti
and
aas
jg
xchg
arpl
sahf
xchg
mov
lea
inc
js
pop
das
rcrl
orb
mov
xchg
jp
arpl
jae
dec
inc
movsl
dec
out
testl
nop
jae
add
outsb
adc
iret
in
xor
adc
loopne
jge
lahf
in
mov
loopne
adc
fimull
cld
or
pop
sub
test
insl
out
pop
ret
jns
mov
mov
adcl
dec
lahf
add
add
jp
cltd
adc
sub
sahf
adc
int3
loop
sbb
push
int3
lret
imul
mov
and
repz
lea
jmp
push
xor
xchg
push
dec
mov
cmp
mov
orb
popa
aaa
dec
or
sbb
ljmp
fsubp
fnstcw
in
mov
cmc
cmp
imul
jmp
mov
fimull
dec
ret
insb
testl
push
mov
loopne
push
mov
je
mov
ret
cs
add
dec
push
sub
xchg
aaa
sub
sarb
mov
jns
lds
mov
inc
clc
jmp
xchg
repnz
inc
sbb
aas
add
mov
push
mov
lcall
and
nop
jbe
or
dec
push
mov
adc
xchg
cmpsb
aam
xor
push
sbb
xchg
in
sbb
pop
xchg
fiaddl
nop
jno
outsl
jae
repnz
int3
movsb
adc
mov
cwtl
out
inc
jl
jmp
add
ret
and
jl
push
sbb
je
xchg
into
push
test
dec
xor
into
movsb
inc
insb
dec
mov
ljmp
popa
pusha
jns
mov
jp
mov
cmpsb
adc
lods
outsl
push
ds
mov
inc
mov
popa
inc
xor
pop
bound
mov
mov
loop
ja
call
sbb
xor
push
scas
lock
leave
sbb
hlt
lock
lret
out
fcomps
outsl
imul
pop
cmp
scas
cmp
movsl
cltd
out
pusha
pop
or
ljmp
rol
out
outsl
cmpsl
cmp
aad
jecxz
cmpsl
jne
lcall
test
in
mov
adc
jle
cmp
and
fidivrs
fwait
cmp
repnz
xor
lret
shrb
js
lahf
lahf
fidivs
aad
pusha
ljmp
or
mov
fistpll
cmp
cs
lret
in
mov
mov
xchg
add
adc
icebp
stos
cld
mov
xor
inc
xchg
fldl
pushl
and
mov
pop
adc
lods
add
das
push
jns
cmp
push
push
das
pop
pop
push
loop
sbb
xchg
stc
out
fsubl
xchg
lahf
sbb
jmp
sahf
cld
mov
in
cmp
and
dec
xchg
or
inc
in
add
std
cmp
shlb
sub
scas
pushf
lahf
jmp
xchg
dec
mov
ja
jmp
pop
fidivs
fdivrp
fnsave
add
ja
call
test
adcb
mov
ret
push
sub
push
aas
jnp
xorb
arpl
pop
outsl
stos
cmp
inc
inc
test
mov
ret
cmp
repz
or
dec
jnp
sbbb
cmp
movsl
div
cmp
sub
into
cmp
or
dec
xchg
movsb
out
xor
lods
inc
cmp
hlt
push
cmpsb
imul
lahf
push
adc
jp
sbb
and
push
inc
and
mov
movsl
std
outsl
pop
pop
lret
add
je
in
bound
insb
sbb
sbb
pop
imul
mov
ficomps
insb
fwait
dec
movsb
jge
ret
push
cs
adc
adc
in
fsubr
pusha
or
stos
dec
xor
leave
push
cli
ljmp
jmp
out
push
mov
aaa
push
je
lds
xchg
mov
xor
pop
rcrl
mov
cmp
mov
test
mov
ss
insb
or
lock
aam
pusha
xchg
push
cmp
dec
scas
mov
cli
cmp
lock
sbb
and
jl
push
daa
movsb
incl
in
stos
fwait
mov
push
pop
ret
mov
stc
pop
fdivp
out
aas
add
adc
cltd
push
icebp
das
jo
mov
and
mov
push
sbb
mov
inc
js
or
cs
test
push
in
ds
xchg
popa
aaa
nop
cmp
lea
add
xchg
inc
ljmp
pop
adc
hlt
mov
adcl
es
imul
sbb
and
aad
mov
sarl
inc
jb
mov
push
clc
sub
sahf
dec
add
xchg
lret
fbstp
mov
mov
pusha
cwtl
xlat
popf
notl
cmp
sbb
cmpsb
repnz
sbb
mov
sbb
jne
mull
out
xchg
pop
hlt
jg
imul
dec
mov
xchg
scas
inc
push
roll
lods
lret
jb
out
sub
out
xchg
cmp
inc
and
jmp
jne
cmp
fdivrs
stos
adc
fsubs
xchg
shll
mov
leave
pop
mov
push
xor
mov
push
adc
int3
xor
fistl
mov
arpl
mov
push
pop
fsubs
pop
orl
faddl
inc
pop
imul
test
and
mov
lds
loop
shll
sub
add
adc
out
leave
xor
add
mov
jb
lock
xor
es
fs
inc
add
movsb
aaa
dec
mov
leave
dec
xor
int3
xchg
adc
clc
xor
cli
pop
aas
or
push
lods
inc
fs
sbb
loopne
dec
dec
je
cs
adc
jge
daa
push
mov
inc
xlat
test
push
sbb
mov
je
ja
jmp
div
mov
add
xchg
dec
xchg
scas
jmp
xchg
xor
jmp
not
inc
test
adc
mov
push
sbb
lods
jbe
sub
sub
adc
fwait
or
pushf
cltd
sbb
cltd
gs
lods
pop
jo
notl
inc
xor
test
sbbb
cmp
imul
xchg
int3
pop
out
push
lock
imull
or
dec
sub
pop
cmp
cli
and
push
mov
orl
mov
push
sub
inc
jo
inc
out
decl
shl
sub
fcmovnu
and
mov
ret
push
cmp
rcrl
pusha
push
jmp
xchg
mov
or
jns
sti
xchg
mov
dec
cmp
lcall
loopne
pop
pop
loop
mov
loopne
pop
cs
jl
lods
in
push
stos
mov
lret
cltd
push
notb
pop
les
scas
mov
std
and
jmp
sbb
insb
ret
xchg
push
repz
push
call
sbb
inc
in
pop
popf
cmp
xor
and
pop
loop
xor
adc
mov
stos
jl
pop
in
mov
add
push
mov
sub
cli
enter
dec
add
sbb
add
inc
mov
adc
iret
jmp
popa
mov
xor
movsl
lret
mov
cmpl
test
or
das
cmp
sub
adc
jo
data16
aam
xchg
mov
xor
loopne
flds
add
outsl
inc
add
call
cmpsb
jecxz
das
pop
or
decb
scas
out
fsubrl
shrb
xchg
sbb
xor
ret
inc
stos
push
inc
insb
pusha
mov
mov
add
add
sbb
lret
ja
in
sub
popa
xlat
mov
mov
hlt
shrl
test
mov
mov
out
xchg
cmp
in
fsubrl
jae
in
mov
in
les
push
lcall
sub
stos
icebp
xchg
mov
push
jbe
fbld
or
sbb
iret
cmc
mov
shll
jp
out
sbb
lds
movsl
scas
pmullw
pop
mov
test
adc
loope
push
jecxz
fwait
out
lcall
or
out
test
pop
xchg
addb
cwtl
fwait
push
sbb
ret
icebp
roll
hlt
xchg
dec
popf
xchg
subl
roll
cmp
fstpt
nop
inc
cmpsb
rorl
mov
jp
mov
lret
aam
cmpsl
jae
xchg
mov
adc
int
xchg
nop
mov
arpl
cmpsl
push
add
dec
sbb
ljmp
ds
jno
std
sub
xchg
test
or
dec
cs
push
shlb
dec
fadd
sbb
iret
add
out
aad
add
inc
bound
lret
jg
pop
movsb
out
movsb
adc
jo
mov
pop
pushf
push
dec
mov
xor
pop
and
push
xchg
inc
les
xor
lret
add
lret
jns
aas
jo
out
notl
inc
jmp
jmp
mov
mov
fidivrs
lret
or
add
mov
jne
xchg
cmc
cmp
popf
scas
adc
inc
sti
mov
mov
push
in
mov
push
push
sub
leave
xor
imul
jmp
mov
sbb
add
push
outsl
popf
dec
lret
or
dec
cmp
inc
xor
xor
popa
mov
jl
movsb
sub
aas
sahf
pop
cmp
pop
mov
mov
mov
mov
es
mov
and
dec
iret
sbb
cmp
mov
in
cli
les
sub
sbb
lahf
and
cwtl
loopne
jns
jg
in
mov
jle
mov
lds
clc
xchg
rorb
xchg
and
cmp
pop
fdecstp
arpl
scas
mov
push
out
and
dec
stos
nop
dec
mov
xchg
nop
and
daa
mov
mov
jp
mov
insb
add
jno
mov
adc
mov
subl
insl
shl
jmp
sbbl
testb
xchg
lods
jge
stc
bound
sahf
ret
push
sub
jle
xor
push
lret
lahf
xchg
sti
shrb
aad
ljmp
icebp
in
pushfw
arpl
and
lods
mov
pop
cmpl
data16
mov
rolb
mov
movsb
test
lret
stc
fistpl
pop
or
add
dec
cltd
mov
jecxz
mov
pop
mov
push
add
inc
aad
dec
js
push
add
shlb
push
lds
mov
bound
out
mov
push
jb
aam
inc
push
stos
in
addl
andb
psubq
xor
daa
and
outsl
dec
inc
inc
pop
dec
test
sbb
adc
adc
push
or
popa
mov
xor
jno
or
notb
daa
frstor
dec
sbbl
add
xor
repnz
cli
mov
cmpl
sub
fidivrs
mov
mov
stc
xchg
mov
push
cld
gs
dec
stos
test
jp
inc
out
inc
scas
lret
dec
xor
es
and
loope
js
lods
testl
test
jns
pop
mov
mov
jae
ret
jb
imul
insl
push
movd
ret
mov
fldt
jae
push
add
or
pop
fcomps
push
movsl
mov
adc
adc
jae
movsb
cld
fldt
cmpsl
mov
aaa
sbb
movsl
xchg
idivb
mov
imul
mov
xor
arpl
lds
hlt
cmp
aas
dec
cmp
inc
shlb
cmc
bound
int3
fistpl
jbe
nop
pop
fstpl
cmp
mov
fcmovne
lea
cmpsl
stc
sqrtps
sub
sahf
and
rorl
iret
pop
pop
and
fistl
mov
scas
mov
lret
js
adc
stos
lret
stos
push
ljmp
ret
or
inc
das
or
jae
pop
out
jns
cmpsb
mov
fldl
lahf
scas
jae
bound
xchg
mov
sbbl
or
cld
mov
push
and
dec
cmp
inc
adc
lock
cs
sarb
dec
cmpsb
cmp
inc
inc
mov
add
pop
and
movsb
jo
movsb
ret
add
dec
inc
movsl
enter
repz
and
lahf
add
push
mov
sbbl
aaa
leave
inc
nop
sbb
test
popa
outsl
push
dec
sub
loope
sbb
ret
sub
add
jne
inc
decl
repnz
or
push
loop
adc
test
aaa
push
loope
lret
in
xchg
div
scas
and
cmp
int
ljmp
sbb
js
movsb
cmpsl
dec
mov
clc
shrb
mov
mov
add
jmp
leave
xchg
mov
sbb
rcll
adcl
mov
cmp
shlb
xchg
and
or
jno
call
cmp
mov
rclb
add
push
adc
jl
push
cmp
dec
je
inc
insb
and
mov
cld
roll
or
push
cmpsl
mov
int3
xor
jbe
and
leave
pop
pop
rcr
sbb
imul
ret
imul
sub
xor
loope
fcmove
lahf
cmp
repz
clc
cmpsl
daa
pop
push
out
add
lods
or
pop
mov
pop
lds
mov
call
xor
addb
xor
push
or
adc
xchg
sub
inc
cmpsb
mov
inc
loope
loopne
mov
cli
imull
ljmp
outsb
ficoms
xchg
push
mov
lcall
gs
or
fbld
add
inc
nop
in
insl
jg
cmp
sar
xlat
cltd
pop
and
outsb
xor
sbb
push
pop
shll
jb
ret
jae
xchg
ljmp
push
repz
jo
sbbb
shrl
call
mov
jbe
xchg
cli
add
or
mov
mov
mov
mov
notl
add
mov
add
fbld
cmp
xchg
mov
mov
ret
xchg
movsb
inc
repz
icebp
aaa
xchg
mov
adc
dec
xchg
scas
cmpsl
and
les
pcmpgtw
cmp
notb
aaa
stos
js
pusha
shlb
mov
mov
mov
push
push
cli
add
cs
out
add
or
mov
xchg
pop
ret
scas
in
inc
aas
shrb
ja
mov
and
add
div
movsl
stos
jle
sub
add
icebp
mov
gs
into
int3
adc
push
mov
jne
je
jmp
push
pop
xlat
loopne
add
je
js
push
jecxz
out
cmp
ss
mov
push
push
hlt
shr
fsubl
sti
rcrl
loop
rorb
xor
jp
je
xchg
stos
in
and
mov
popf
lret
imul
sbb
scas
mov
gs
fidivs
and
jno
sbbl
push
sbb
cli
test
pop
push
adc
leave
jbe
ljmp
mov
add
push
xorb
les
jl
sarl
xchg
shl
sbb
mov
cmpps
mov
sub
imul
and
jl
xor
cltd
cmpb
and
fldt
incl
std
jg
and
pop
jmp
mov
mov
test
fiaddl
add
xchg
xor
mov
and
leave
cmpsb
sub
push
pop
push
jno
std
cmp
adc
mov
adc
push
push
adc
inc
pushw
test
aas
dec
arpl
mov
movsb
lret
cmp
mov
stos
push
ret
enter
sti
leave
mov
xchg
xchg
or
push
decb
popf
mov
inc
jns
adc
push
das
mov
lea
sub
imul
sub
rcll
icebp
or
jge
pop
inc
or
mov
push
popa
movsb
rcrl
pop
jo
add
mov
mov
movq
jmp
in
jnp
sub
add
xor
push
sbb
roll
mov
shrl
stc
xchg
xchg
or
out
lcall
or
clc
cmp
dec
lahf
lds
mov
adc
adc
sarl
cltd
andl
rolb
adc
mov
aas
cmp
lock
fnsave
sahf
adc
sbb
pop
fwait
add
adc
repz
rcl
fcmovu
cmp
ss
sub
lods
je
and
mov
inc
push
in
int3
shll
lcall
popf
xor
loop
out
in
cmpsb
loopne
adc
jl
sub
inc
in
xchg
outsb
lcall
repz
dec
popf
sub
push
cli
lods
fmulp
adc
movsb
and
jle
insl
adc
and
inc
cmp
mov
mov
leave
ror
pusha
iret
pop
or
clc
cmp
push
repz
pop
jmp
mov
or
lock
adc
loope
push
aas
xchg
roll
mov
mov
jmp
test
loope
push
mov
test
xor
jecxz
movsb
add
out
movb
cld
or
pop
das
jo
adc
push
xor
lods
xlat
and
ds
xor
jo
adc
sahf
pushf
mov
and
push
cld
inc
sbb
dec
ja
sarb
sbb
sbb
loopne
mov
mov
lahf
int
mov
mov
test
andb
fmull
and
push
stos
push
mov
jns
repz
add
jae
in
imul
bound
fwait
xor
cwtl
rcrl
cmp
xor
mov
jae
sahf
ds
repz
mov
jmp
inc
outsl
sub
cmp
xor
leave
mov
divl
pop
mov
insl
pop
ffreep
push
repnz
loope
dec
xchg
data16
jbe
push
insb
mov
xlat
sbb
ss
imul
leave
test
mov
cli
jmp
cmpb
lahf
je
movsb
test
jecxz
dec
cmp
sti
add
mov
push
pop
pop
dec
enter
cmpsb
adc
outsb
or
movsl
rcr
ja
std
mov
pop
mov
and
and
adcb
adc
out
lods
imul
loop
sbb
cs
push
ds
imul
sub
popa
cmp
xchg
inc
and
cmp
arpl
push
imul
std
mov
rcll
sbb
stc
out
fistps
jecxz
jno
test
aas
add
xchg
fsubrl
jne
xchg
popa
xor
and
sub
fnstsw
ret
add
dec
stc
mov
push
bound
bound
add
cmp
add
cmp
jae
out
idivb
enter
stos
loope
sbb
fcmovbe
pop
xor
inc
rorl
data16
mov
cmpsb
dec
xor
and
jp
push
push
shlb
push
push
push
sub
fs
stos
dec
cmpsl
test
ds
ret
cmp
adc
in
and
jl
loope
cmpsb
add
test
inc
dec
sub
inc
cltd
fisubs
dec
pushf
outsl
mov
jne
mov
jge
test
dec
and
push
loopne
fs
mov
call
push
das
aas
test
fmuls
das
flds
es
jp
repnz
fsubrl
orb
out
or
test
loope
andb
push
xor
dec
add
pop
test
push
sub
loopne
into
out
cmp
idiv
push
push
mov
shrb
push
in
orl
jae
in
xchg
cld
jo
dec
pusha
push
mov
push
push
cmp
out
adc
cli
fdivr
loopne
cmp
cmp
popa
pusha
rcrb
sub
pop
dec
and
mov
pushf
in
lret
movsb
mov
ljmp
scas
nop
xchg
rorb
daa
stos
aaa
cltd
iret
cmc
movsb
int
arpl
mov
repz
inc
mov
icebp
addl
dec
pusha
pop
pop
out
subb
xchg
mov
push
jnp
lret
shl
lcall
pop
movsl
rol
pushf
xchg
xor
sub
dec
mov
jb
lcall
sbb
cmpsb
out
push
movsb
mov
out
add
es
fstpt
pop
insb
or
shrb
insb
cmp
push
int
test
add
mov
loope
insb
mov
loop
adc
fimuls
xor
push
add
addb
mov
data16
mov
pop
or
xchg
outsb
cmp
in
and
sbb
add
je
aaa
sub
adc
ret
push
shl
push
cmpl
sub
movsb
jb
jmp
insl
cmp
jecxz
sub
and
pushf
pop
inc
xor
les
mov
fcmovbe
scas
imul
adc
jno
xor
pop
add
andb
adc
cmp
les
jge
daa
out
pop
mov
sub
movsl
jle
mov
mov
push
ds
sub
or
jecxz
adcl
enter
cmpb
lahf
out
sbb
test
addr16
adc
lahf
aas
bound
jbe
lahf
popa
mov
mov
mov
xchg
dec
cmp
cmc
jecxz
xchg
lock
sbb
dec
mov
cli
clc
jne
rcrb
aaa
inc
addr16
into
loop
inc
jmp
in
inc
mov
inc
out
xchg
ljmp
cmp
dec
cmp
adc
into
mov
push
mov
imul
bound
and
fldcw
mov
xchg
inc
andb
movsl
clc
xor
int3
shlb
lahf
arpl
or
or
stos
jecxz
mov
or
cmpsl
inc
pop
shll
pop
fisubrl
mov
mov
decl
jle
stos
pop
sahf
out
stos
mov
bound
scas
es
lret
daa
aad
or
icebp
imul
out
jbe
icebp
mov
adc
inc
jno
sub
stos
jb
clc
push
jg
lcall
idivb
movsl
cmova
add
dec
sbb
arpl
jmp
adc
cld
adcl
mov
in
jae
pushf
pop
iret
push
out
ljmp
fsubl
loop
cld
inc
inc
mov
xlat
xor
mov
jp
jbe
ffreep
repz
js
lock
dec
outsb
xchg
pushf
lods
testb
adc
lds
mov
shl
fsubrp
xchg
lods
push
insb
sahf
in
mov
and
ds
mov
cmpl
cmp
les
jns
jae
xchg
js
and
mov
int
pusha
inc
mov
dec
mov
movsl
and
std
movsb
sub
std
mov
adc
lahf
jbe
or
out
push
mov
in
aam
adc
into
lahf
push
dec
dec
or
pushf
imul
inc
lahf
dec
mov
les
cmp
xchg
out
sub
jno
repz
iret
mov
sbb
outsl
xchg
popa
cmp
jg
jbe
roll
sbb
adc
test
add
hlt
incb
push
push
fadds
sbb
imul
fisubl
fcom
mov
cmpsl
jecxz
or
fisubrs
dec
xor
add
push
jp
mov
pop
or
imulb
xchg
push
lds
cltd
mov
bound
mov
inc
inc
add
push
xchg
movb
mov
mov
mov
std
test
pusha
pop
push
aam
push
call
iret
pop
cmpsb
divl
jge
cmpsl
shl
lret
mov
popa
sahf
addr16
gs
nop
jge
push
enter
cwtl
pcmpeqb
fs
mov
gs
int3
mov
mov
push
rcrl
imul
mov
inc
enter
ja
sub
in
fimull
imulb
es
or
in
nop
push
jns
mov
lret
mov
daa
mov
je
mov
cmpb
add
push
mov
fidivl
leave
stos
int3
add
push
cmpsb
and
test
insl
sub
cmpb
mov
bound
outsb
add
insl
push
repz
push
mov
test
in
js
dec
les
push
or
push
ja
mov
lods
xchg
push
int
mov
finit
inc
aas
lcall
and
jne
outsl
xor
ret
stos
stos
jp
faddp
cmpsb
xor
push
shlb
or
pop
inc
es
or
int3
ret
mov
sbb
mov
xchg
je
push
lahf
mov
pop
dec
addr16
mov
out
pop
or
jmp
leave
mov
inc
test
mov
repnz
lock
or
sar
push
inc
mov
adc
dec
aam
push
inc
enter
jbe
sub
jmp
cmp
inc
cmpsb
scas
rcll
add
inc
xchg
int3
xor
outsb
sub
stc
xor
inc
xor
divb
stc
jns
in
add
mov
or
jbe
cmpsl
jbe
pop
push
mov
outsb
shll
pop
lds
mov
jb
xchg
or
shrb
aad
adc
jg
or
mov
push
cmp
xchg
fwait
test
cmpl
popf
mov
ds
inc
leave
inc
mov
das
outsb
lods
aad
mov
xor
xor
imul
or
xor
fcmovnbe
or
xchg
lahf
push
push
ret
or
push
lods
add
xchg
cmp
pop
cld
stos
mov
js
dec
push
cmc
or
pop
loop
cmpsb
jno
fs
xchg
and
xor
adc
fstp
push
in
inc
dec
adc
and
sub
int3
dec
dec
mov
mov
les
insb
ljmp
jmp
icebp
out
xchg
and
inc
in
adc
lret
das
mov
scas
js
adc
fiaddl
or
test
xor
lock
add
pop
push
jne
cs
add
stos
jno
subb
addb
jmp
fdivs
or
pop
xor
adc
lahf
dec
enter
rorl
shlb
test
stos
ja
pop
cmp
push
jl
mov
stos
jge
in
xor
popf
lahf
cmpsb
clc
test
test
dec
add
mov
and
xchg
sub
lcall
cli
mov
addl
and
int3
push
in
ficoms
inc
icebp
cmp
and
xchg
scas
loop
shrb
sbb
arpl
fwait
mov
stos
sub
dec
loope
ja
outsb
repz
enter
mov
ss
xchg
mov
repnz
lods
scas
dec
ds
mov
jmp
cmp
test
outsb
mov
std
sbb
dec
and
clc
sbb
sub
fbstp
ds
cltd
xor
out
and
movb
adc
and
lahf
lock
orb
js
ja
in
push
mov
fdivs
xor
out
repz
mov
inc
sub
mov
and
add
fcmovu
and
mov
lock
gs
iret
in
imul
fldl2e
jbe
pop
jbe
call
jbe
adc
add
xor
rorl
mov
lock
faddp
aad
out
xlat
sbb
in
jns
dec
pop
jo
push
cli
cmp
adc
repz
xlat
mov
cmp
sub
icebp
addr16
rclb
mov
sbbl
or
xchg
stc
fcoml
xor
iret
je
int3
push
imul
in
pusha
aam
add
jno
ljmp
sub
loopne
push
mov
in
jecxz
icebp
test
lcall
cmp
adc
sub
sti
dec
sahf
fwait
jg
pxor
insl
andl
mov
jg
jnp
jo
push
scas
mov
sbb
push
xchg
jge
movzbl
cmp
and
jb
arpl
sbb
xchg
and
mov
adc
pusha
xor
shll
and
xor
movsb
jp
clc
sti
xor
arpl
mov
insl
and
mov
pusha
scas
xor
popf
lods
imul
movsb
je
push
jnp
aad
xchg
repz
je
fdivrl
imul
and
jp
jg
lret
ret
cs
xchg
adc
cmp
add
fisttpll
xor
jp
mov
cmc
and
jns
decl
cmpsl
lret
xchg
adc
or
add
jge
mov
and
push
push
icebp
pop
sarl
xchg
sahf
jns
ja
pushf
out
fwait
dec
int
inc
sbb
lods
fcompl
mov
cmp
push
mov
in
daa
into
aad
mov
cmp
cmp
mov
and
ljmp
fidivs
js
jns
add
pop
sub
addb
push
nop
cmp
mov
outsl
xchg
out
jb
cwtl
les
mov
into
and
mov
lock
fdivl
adc
add
mov
jb
lsl
sbb
lcall
ret
into
fldcw
cwtl
imul
int3
enter
adcb
pop
mov
jle
pop
mov
dec
dec
mov
scas
push
sub
ret
adc
jp
jne
push
lods
pushf
pop
enter
nop
imul
mov
adcb
pop
jecxz
imul
xor
ja
jp
sbb
xor
push
cld
inc
int3
push
rcll
dec
mov
imul
movsl
adc
inc
je
mov
inc
xchg
idiv
add
fdivp
daa
loope
int3
push
scas
pop
add
lret
js
or
sbb
xchg
ljmp
push
push
lcall
dec
movsb
inc
sub
in
sti
mov
stc
and
negl
pop
jmp
mov
fs
or
jb
nop
nop
das
cmp
and
test
adc
imul
out
mov
sub
ja
test
insb
cmp
mov
inc
shll
enter
fcomps
bound
sbb
jne
lods
and
leave
pusha
mov
mov
adc
pop
ffree
cmpsl
push
mov
inc
loop
mov
cmp
inc
jb
loopne
jecxz
pop
xor
sarb
sbb
jns
adc
adc
inc
inc
or
add
adc
test
sub
pop
lods
dec
pop
adc
in
jbe
inc
lods
mov
mov
mov
or
ja
add
add
mulb
and
push
aad
gs
arpl
add
rcr
shlb
pop
jge
pop
sarl
out
jecxz
gs
mov
ja
sbb
ljmp
loope
xor
sub
cmpsb
pop
mov
mov
fidivs
push
into
js
addl
sbb
sahf
out
adc
xchg
pop
dec
pop
and
loop
mov
aas
or
mov
lret
mov
lret
jle
rorb
and
out
sbb
jl
mov
push
shrb
push
or
mov
pop
mov
int3
push
cmp
add
loopne
stos
cld
mov
push
inc
inc
jp
cmpsl
xchg
nop
ret
pmaxub
popf
mov
mov
jns
mov
dec
xchg
orl
iret
cmp
add
sarl
enter
or
add
cmp
inc
push
roll
pop
pop
fwait
jecxz
xlat
cmpsl
and
lretw
pop
js
lods
jno
or
mov
dec
adc
cwtl
repz
push
mov
mov
fnstcw
ds
xlat
pop
push
mov
xlat
cmp
add
jne
movsb
in
push
jp
pop
data16
in
in
and
movsl
je
sbb
dec
lds
faddl
mov
lods
testl
lcall
mov
push
mov
cltd
mov
test
andl
push
std
mov
decb
adc
int
mov
outsl
ds
or
aas
mov
xor
mov
lret
xor
cmpsb
call
and
pop
int
sbb
xchg
data16
pusha
cmp
shl
outsb
testl
jmp
cmpsl
mov
gs
js
mov
jns
sbb
clc
iret
into
cmp
jmp
xlat
lock
cmpsb
cli
out
ss
fidivrs
stos
std
xor
sub
in
push
nop
sbb
xor
xor
repz
inc
mov
inc
fildl
sub
lods
cmpsb
jl
xlat
push
mov
insl
xchg
cltd
out
bound
in
out
dec
xor
shll
test
jl
xchg
mov
sub
add
ret
xor
add
bound
sti
jnp
sub
fildll
test
or
or
push
dec
fnstcw
jl
mov
addr16
and
aaa
ret
mov
leave
mov
dec
test
inc
insb
fidivrl
js
nop
xlat
sub
mov
jl
mov
push
or
in
xor
inc
adc
in
fisubs
inc
xlat
int3
out
lds
and
jb
mov
je
mov
xchg
pop
dec
add
insb
mov
mov
cwtl
push
sbb
pop
adc
rcrb
xlat
mov
int
test
sub
pop
push
cmp
and
int
leave
loope
mov
pop
sub
mov
dec
xor
and
cwtl
sbb
gs
mov
cmp
repnz
insl
jle
sbb
jge
sbb
jns
dec
sub
or
xchg
sub
in
lds
enter
sbb
rolb
cmp
adc
push
arpl
dec
aam
adc
dec
lcall
and
or
cmp
add
pop
xlat
iret
add
movsl
pop
lea
notl
out
shlb
cmp
test
inc
test
mov
les
or
pop
sbb
or
shll
sub
mov
adc
mull
push
or
cs
sub
nop
fstps
into
dec
xchg
scas
jns
lock
stc
jp
cmpsl
dec
cwtl
out
repnz
mov
dec
scas
out
movsl
loope
cs
xlat
iret
push
jae
mov
mov
and
loop
shrb
inc
sbb
jno
addl
enter
dec
xlat
and
pop
pop
jbe
mov
sub
mov
cwtl
scas
adc
insl
mov
add
mov
xchg
xchg
fwait
adc
push
sub
and
test
adc
pop
fidivrs
cmpsl
jmp
cmp
lcall
cmpsl
mov
loope
ja
lods
lds
mov
jle
push
pop
sbb
int3
adc
push
sub
sub
jno
xchg
jl
jno
push
sub
adcl
or
add
mov
es
insl
add
inc
aas
fsubl
loop
iret
iret
getsec
into
or
repnz
aad
scas
lock
cwtl
cmp
jmp
cmc
sahf
repnz
ljmp
cmpsb
stos
scas
sar
data16
sub
loop
inc
hlt
ret
add
xor
mov
test
mov
arpl
lods
sbb
mov
jno
mov
xchg
push
xor
lods
mov
mov
shr
mov
pusha
pop
pop
and
pushf
dec
sub
mov
and
dec
mov
push
mov
movsb
add
pop
sahf
push
pop
pop
testl
ljmp
fwait
aas
jbe
aas
inc
and
inc
popl
cmp
imul
cmp
add
test
sbb
int
jl
xor
mov
push
dec
popa
adc
mov
pop
repz
dec
inc
or
push
test
sti
mov
fldt
loop
je
les
sbb
fdivrl
jae
xor
in
jne
cmpb
sub
fs
push
push
xor
pop
shlb
push
movsl
inc
fsubrs
add
leave
jmp
aad
out
xchg
jno
shl
adc
sbb
push
dec
icebp
and
push
ljmp
aam
pop
insl
mov
add
mov
sbb
shll
in
push
jmp
pop
and
cmp
testl
cs
adc
cmp
adc
imul
lods
icebp
or
mov
cld
mov
add
lock
pop
xor
or
or
sbb
xor
dec
jmp
sub
sbb
jne
mov
lret
out
rcl
pop
mul
mov
or
xchg
ljmp
inc
out
sbb
dec
mov
pop
imul
jb
mov
arpl
ja
sub
mov
xlat
mov
push
int3
inc
dec
jmp
hlt
jns
out
push
stos
movsb
ror
das
arpl
adc
fs
inc
rcrb
les
push
jmp
cmp
jne
jbe
sub
fcmove
add
xchg
call
mov
int
xchg
xor
and
mov
int
and
lods
pop
arpl
jbe
int
fisubrl
shrb
or
in
inc
outsb
pop
cmp
or
lods
jge
sbb
dec
ret
cmp
mov
xor
shr
add
xchg
ja
push
test
and
scas
push
out
mov
xchg
jne
push
and
stc
in
inc
adc
mov
mov
pop
dec
lcall
mov
push
sbb
pop
repnz
adc
sub
dec
js
adc
shll
sbb
mov
sub
fistpl
xchg
sub
ss
xchg
xchg
mov
xor
mov
mov
sub
bound
loop
into
jge
dec
addl
xor
imul
sbb
or
stos
imulb
xchg
movb
pushf
pop
sbb
outsl
jmp
mov
jo
out
adc
inc
push
jmp
inc
inc
jnp
add
jg
adc
adc
xor
out
mov
dec
pop
and
cmp
push
push
inc
push
or
fwait
les
push
mov
cli
lret
lods
adc
div
orb
push
xchg
mov
adc
aad
adc
stos
cmc
sti
data16
cmp
sbb
push
movsb
call
das
xor
pop
std
jo
sahf
lahf
shl
mov
gs
jmp
fnstcw
das
pop
add
mov
add
push
bound
lea
mov
jmp
lds
loopne
inc
dec
xchg
sti
scas
xchg
xor
inc
es
loopne
das
cmp
fmull
or
push
das
lock
cld
fstpt
ja
adc
movb
gs
jb
lock
icebp
lcall
mov
adc
mov
scas
push
jo
jg
dec
cmp
xor
ss
loop
mov
aam
jle
loopne
cld
aas
int3
mov
add
mov
stos
mov
dec
scas
mov
inc
cmp
push
sub
and
stos
inc
adc
jmp
iret
ljmp
xor
inc
dec
or
mov
call
dec
mov
push
xor
adc
dec
cmp
jno
cmp
jl
jae
enter
popa
dec
and
outsb
insl
inc
in
lods
fsts
lahf
sub
push
xor
psubsb
and
push
ret
aaa
loop
sbb
cwtl
notb
pop
movb
jbe
pop
dec
mov
inc
or
mov
and
fstpt
shll
sub
mov
xchg
cmp
mov
imul
push
gs
in
dec
testb
je
jl
push
push
es
in
loop
enter
or
pop
sub
add
add
inc
jmp
fwait
dec
insl
xchg
mov
mov
fsubl
mov
cmp
sbb
repz
lret
xchg
inc
mov
call
cmp
in
mov
fsubrp
mov
jge
iret
pop
mov
jp
int3
dec
xchg
cltd
test
gs
cmp
lods
jne
add
lahf
inc
insb
movsl
dec
add
ret
rolb
or
dec
imul
pop
dec
push
fstpt
and
xchg
adc
cmpsb
fstpt
lret
add
mov
inc
in
loopne
jb
mov
xchg
adc
mov
inc
pusha
in
pop
add
push
lds
clc
enter
jecxz
mov
pop
movsl
into
mov
or
xchg
cmp
mov
push
lcall
lcall
cmp
and
std
cmp
sbb
xor
xor
and
out
fidivrl
inc
and
jg
cmp
push
mov
popl
in
and
adc
clc
ret
inc
jo
sub
ss
int3
sbb
xor
mov
or
push
sub
mov
push
push
sub
push
les
mov
dec
xor
arpl
filds
cmp
push
dec
jp
cmp
jo
xor
inc
adc
sub
popf
xor
stos
stos
lcall
stos
loope
inc
lret
and
xchg
push
jne
cmp
pop
mov
ja
mov
dec
mov
addl
js
and
add
and
adc
sbb
stos
pusha
lahf
mov
fsubl
add
test
add
jp
jne
pop
mov
pop
test
add
aaa
dec
mov
fidivs
cmp
push
popa
push
lods
test
or
jnp
xchg
and
jg
mov
movsb
adc
pop
cmp
cmp
push
test
mov
lds
fldt
lock
cltd
sar
int
pop
rcll
push
push
mov
std
addb
daa
add
out
daa
add
test
jl
ljmp
jl
or
or
pop
lods
les
xor
aam
data16
push
movsl
icebp
int
lahf
ljmp
cmpsb
int
sahf
cmpsb
mov
test
scas
push
xchg
das
push
negl
repz
std
shlb
xchg
stc
fs
cwtl
andb
js
sub
adc
jp
sub
cmp
mov
jbe
aaa
cltd
mov
pushf
dec
std
xchg
xor
lock
js
lock
imul
sub
enter
inc
jns
std
add
ficoms
adc
mov
movsl
xor
int
daa
jmp
fidivs
jle
pusha
jle
inc
dec
jae
ret
xchg
push
inc
xchg
int3
push
push
clc
jmp
xor
pop
jmp
and
xchg
rorb
xor
mov
push
sbb
xor
sub
loop
push
mov
xchg
test
xor
jg
jl
nop
add
dec
jg
inc
pop
adc
mov
scas
and
and
jl
pop
aam
fidivrl
arpl
adc
add
adc
int3
jl
sbb
push
leave
insl
and
xchg
stos
add
mov
inc
bound
lahf
rclb
xchg
hlt
gs
xchg
hlt
dec
mov
mov
mov
mov
dec
ret
sbb
push
or
mov
sahf
sbb
pop
out
in
jbe
sub
mov
aad
or
daa
mov
sbbb
and
loope
xor
je
xchg
icebp
cmpsb
dec
mov
push
xchg
and
pop
mov
mov
adcb
sub
gs
movsb
sub
add
xor
xlat
push
pop
and
stos
decl
test
mov
cmc
inc
cmp
insl
test
test
mov
add
inc
daa
lea
xchg
xchg
aas
test
add
insl
pop
test
outsb
xchg
mov
cmc
add
fistl
int
push
rorl
ret
js
popf
addb
push
fucom
or
push
pop
and
stos
decl
jmp
aas
mov
ret
rorb
int3
sbb
movsl
pusha
test
mov
xchg
icebp
movsb
add
xor
pop
dec
inc
nop
xchg
test
and
pop
or
xor
mov
lods
test
fcoml
lret
pop
jnp
jecxz
bound
out
pop
fcmovnb
add
pop
lcall
fs
into
pop
mov
cld
sti
movsb
jle
popl
in
pop
jbe
xchg
pop
daa
fsubrp
push
xchg
xchg
into
adc
filds
jne
repz
dec
adc
mov
inc
scas
loope
fstenv
push
dec
push
and
mov
lods
pop
and
pop
mov
call
lret
mov
push
xchg
cmp
hlt
sub
xor
inc
or
in
inc
xchg
stos
cmp
mov
lods
insb
pushf
mov
mov
adc
lret
inc
cmp
push
mov
and
lcall
pop
lret
xchg
sub
fstpt
or
push
stc
test
in
mov
pop
pop
nop
lret
lahf
fstl
jmp
pop
add
mov
movsb
adc
aas
adc
jno
sub
cs
mov
les
jmp
dec
cmpsb
outsl
ja
cmp
imulb
popl
ficomps
ljmp
push
shlb
shll
ljmp
adc
and
rcl
adc
xchg
insl
call
inc
push
inc
jbe
dec
and
add
sbb
dec
pop
ds
cmpb
mov
mov
sar
fistpll
ret
jge
add
outsl
lea
jb
jg
or
data16
pop
stos
std
and
cmp
data16
jne
add
str
dec
sbb
ret
xlat
out
ss
in
adcb
add
mov
lea
adc
idivb
sarl
add
int3
or
fs
jnp
push
or
mov
enter
cmpl
test
in
jecxz
inc
mov
cmp
test
icebp
scas
sub
int
xchg
call
dec
and
sub
in
ljmp
movsl
jg
in
sbb
mov
daa
movsl
and
sbb
and
cmpl
jne
cli
and
jmp
xchg
or
pusha
lret
mov
push
aas
push
jp
pop
lcall
sub
rcl
insb
scas
insb
out
xlat
pop
sbb
test
pop
fsubl
inc
cmpb
sub
push
loope
je
inc
movsl
jmpw
push
loop
js
insb
lret
cmpsb
mov
rcl
jns
add
andb
sbb
add
xor
in
repnz
loop
sbb
sub
dec
filds
sbb
js
jns
xchg
clc
xchg
dec
pop
jb
jmp
dec
mov
out
or
je
aam
dec
and
mov
inc
jmp
sbb
out
aad
rcl
inc
sub
hlt
inc
cmp
mov
mov
cli
in
pop
aas
fildl
mov
sub
lcall
stos
icebp
push
push
jmp
mov
inc
je
jle
fldl
xchg
mov
sub
dec
rorb
add
orb
ds
sbbl
sub
scas
mov
popf
mov
xchg
sbb
andb
pusha
pop
mov
stos
sub
sub
mov
lret
daa
mov
gs
mov
dec
lret
and
neg
mov
pushf
cmp
mov
add
jp,pn
mov
test
inc
rcrb
jge,pt
sub
mov
popf
sbb
jb
xor
subl
imul
sub
mov
adc
pop
je
dec
iret
jo
insb
push
mov
shr
xchg
inc
pop
xchg
imul
ljmp
imul
xchg
ficomps
sti
mov
test
leave
cld
mov
xor
mov
jns
dec
push
add
and
sarb
or
pop
pop
loope
xchg
aad
xchg
mov
fidivrl
repz
mov
xchg
insb
shrl
adc
negl
jl
jecxz
push
inc
push
add
in
in
dec
pop
add
mov
jns
mov
add
xor
or
or
js
nop
aad
nop
push
aad
cld
add
aaa
imul
mov
adc
mov
cmp
or
fidivl
ret
dec
mov
pop
push
xor
mov
xchg
mov
orb
mov
addb
cltd
xor
pop
outsl
adc
pop
xorb
movsb
fsubl
pushf
fsubp
cmc
repnz
xchg
arpl
lods
add
cmp
cmp
roll
adc
in
xlat
xor
mov
sbb
in
divb
add
jnp
fcmove
pop
inc
fldt
lcall
sbb
or
inc
mov
daa
pop
aaa
cmp
cmp
pop
inc
jecxz
push
loopne
movb
out
xchg
mov
addl
cmpsb
in
nop
sub
sub
and
dec
mov
adc
push
dec
arpl
adc
sbb
into
add
and
mov
in
and
mov
shlb
jecxz
fistpl
inc
leave
loopne
mov
pushf
mov
push
iret
hlt
dec
sbb
int
fsubs
cld
pop
es
fiadds
pop
iret
jns
out
sbb
movsl
pushf
dec
sub
add
jno
add
les
or
lods
popa
or
iret
mov
xchg
cmp
inc
popf
mov
enter
push
lret
push
dec
dec
mov
ja
test
clc
add
pop
add
fadds
lock
sub
incb
sub
pop
loope
pusha
outsl
gs
in
pop
ljmp
adc
sub
mov
fs
popa
xorl
mov
jmp
sbb
push
sbb
sbb
js
mov
cli
pop
pop
nop
mov
dec
test
sbb
in
enter
repz
adc
jecxz
iret
and
aaa
aas
cmp
or
out
cmp
jge
push
cmpsb
xchg
addr16
fwait
je
lods
mov
pop
aad
mov
sbb
orb
hlt
std
dec
jne
ss
mov
add
jg
int
mov
mov
xchg
imul
in
mov
mov
push
mov
in
pop
jl
mov
jns
push
aaa
xchg
repz
jns
adc
mov
fisubs
xor
stos
adc
or
sahf
int3
jne
cltd
mov
pop
call
xor
mov
stc
inc
lods
sub
cmc
sbb
cmpsl
mov
popf
imul
fwait
inc
cs
adc
push
or
aad
pop
out
lea
fstpt
xchg
mov
jmp
jl
adc
icebp
cmp
test
insb
jg
jp
or
out
int
push
add
xchg
out
sub
pop
inc
pop
sahf
call
fwait
pusha
hlt
lea
and
jp
xor
adc
xor
add
outsb
retw
ja
arpl
inc
lret
cmpsb
mov
sub
je
mov
stc
aad
test
dec
aad
push
in
lret
mov
subl
mov
sbb
mov
mov
jecxz
xchg
jmp
push
sub
mov
or
sbb
sbb
dec
fistpl
shlb
int
clc
nop
mov
sbb
jge
mov
push
and
xchg
jg
je
xorl
mov
insb
add
mov
inc
flds
mulb
mov
cmp
jno
mov
mov
sub
gs
dec
movsb
cmp
push
fildl
mov
lcall
mov
mov
or
xor
add
cmp
and
mov
push
mov
sub
pop
ja
out
loop
enter
push
adc
pop
push
pop
mov
pop
sub
daa
mov
out
mov
jo
loopne
jb
xchg
xchg
and
mov
pop
arpl
xchg
daa
mov
inc
mov
and
or
mov
inc
xchg
push
loopne
add
mov
fidivl
les
pusha
cmpsl
jbe
push
outsb
inc
fildll
inc
lods
mov
dec
out
cld
mov
push
pushf
push
pop
jle
mov
mov
sub
adc
jbe
xor
lret
test
or
or
xchg
or
repnz
pop
enter
adc
cli
pusha
or
rcll
inc
pop
push
imul
xor
mov
xlat
inc
push
rorl
jne
aam
movsb
ret
adc
in
call
and
repz
fwait
sbb
sbb
mov
dec
mov
loop
sbbb
jle
sbb
dec
mov
mov
stc
lea
mov
push
mov
in
sti
jb
jns
les
and
cmpsl
xor
std
movsl
mov
mov
shll
fimuls
mov
popf
gs
adc
mov
lods
imul
incb
jl
xchg
inc
adc
push
or
mov
dec
push
cs
loopne
and
sarl
in
sub
icebp
jno
xor
cmp
add
arpl
ret
dec
sbb
sahf
lcall
or
jp
pop
add
pushf
insb
or
femms
xor
enter
inc
das
cmpsl
idivl
loope
test
bnd
lret
or
mov
inc
icebp
call
dec
and
sarl
mov
adc
out
cmp
sub
sub
jbe
pop
mov
and
or
fcoms
xchg
push
pop
mov
divb
mov
xchg
popf
sahf
gs
sahf
jno
popa
xchg
clc
add
pop
push
push
xchg
cmc
dec
mov
shrl
mov
dec
or
imul
lods
jne
lea
cmp
in
shl
mov
add
pop
jno
or
pop
inc
push
outsb
mov
mov
push
inc
or
insb
sbb
sub
or
fwait
js
mov
fisubrs
scas
cltd
stos
xchg
stc
add
stc
sbb
int3
add
mov
push
mov
xchg
movl
pop
repz
lds
sti
pop
outsl
xchg
sub
inc
aad
call
mov
ljmp
daa
into
lret
cli
inc
ret
std
pop
sub
insb
jmp
inc
add
lea
stc
xor
shll
negb
decb
aam
mov
shll
clc
mov
dec
cld
sub
fimull
pop
push
orb
mov
jmp
add
jg
pop
lds
push
cmpsl
xorl
jg
orb
cmp
mov
inc
pushf
movsl
mov
cmp
loop
fdivrl
mov
inc
xchg
cmp
sahf
insl
xchg
sub
push
xchg
xor
lods
xchg
dec
jb
push
and
sbb
dec
cmpsl
shrl
or
aas
xchg
dec
or
sbb
xchg
icebp
ds
sarl
or
add
jl
daa
daa
in
pusha
jbe
xor
fistpl
pusha
pop
mov
enter
inc
push
addr16
sarl
push
in
mov
jo
out
icebp
pop
jle
inc
adc
sbb
ret
repz
adcl
enter
test
adc
nop
inc
push
push
insl
insl
out
inc
xchg
sub
test
or
mov
mov
cltd
pusha
jbe
aad
xchg
mov
stos
pop
fwait
sub
in
shll
mov
inc
jb
in
mov
lcall
cmp
lahf
lods
jl
cmc
jae
roll
xchg
xchg
jns
and
sub
bound
test
mov
shr
repz
jb
cmp
repz
int
mov
sti
mov
mov
xchg
jo
add
xor
xchg
xlat
dec
push
mov
lock
jne
pop
sbbb
pop
cmc
mov
lahf
cmp
jle
adc
jecxz
adc
gs
sub
ljmp
adc
or
dec
push
into
mov
cli
or
inc
cmp
in
js
push
jb
out
dec
mov
jle
mov
insb
mov
xchg
jbe
adc
mov
mov
sbb
jl
mov
and
adc
cli
lret
clc
xchg
int
xchg
mov
cli
mov
in
mov
add
pop
js
adc
xchg
push
adc
cltd
fwait
in
ret
jmp
mov
ds
jbe
jl
call
insb
cmp
inc
lock
sarb
or
lcall
fistpll
push
or
rorl
inc
mov
dec
jmp
sbb
pop
jbe
xchg
inc
inc
insb
lock
jmp
fnstsw
aaa
negb
rolb
cmpl
outsl
icebp
sbb
xlat
loope
mov
inc
lret
pop
xchg
jp
out
sub
rcl
mov
xor
in
int
add
repz
cli
pop
subl
lcall
pop
cs
jmp
push
jbe
in
arpl
jo
lods
and
out
mov
or
sarb
sub
fcmovnb
aad
cmp
pushf
cmp
dec
jae
out
dec
mov
xchg
jle
mov
std
lock
add
add
into
stos
xorb
push
loope
xlat
fs
dec
in
fstpl
pusha
sbb
mov
add
inc
lahf
daa
mov
sub
daa
repnz
mov
loop
mov
jne
jge
into
in
mov
sub
jmp
test
jnp
mov
addb
loop
lahf
test
cli
hlt
mov
adc
inc
add
and
int3
movsl
rcr
xchg
sbb
mov
or
cmpsl
sbb
fcoml
dec
pop
ret
outsb
shlb
std
je
cmp
push
pusha
fwait
test
inc
out
movsb
lahf
ss
inc
xlat
ret
inc
xor
rclb
test
mov
nop
gs
jb
mov
lcall
cwtl
loop
mov
popa
hlt
loope
jae
ljmp
cmp
out
comiss
or
mov
aas
stos
dec
mov
cmp
adc
int
cli
sbb
mov
mov
test
leave
jns
fistps
pop
xchg
dec
xchg
inc
cmp
sub
sub
testb
ljmp
fwait
dec
int
subl
push
pop
mov
and
push
fidivrl
xchg
fucom
cld
aam
jmp
stc
pop
add
pop
xchg
fstpl
js
jge
add
or
pop
test
dec
pop
xchg
test
and
adc
cmp
fdivrl
add
cmp
jmp
inc
decb
jp
sub
push
dec
push
fs
sbb
data16
out
inc
mov
mov
pop
and
cs
popa
mov
lock
fsubrs
adc
insl
lret
push
add
in
push
loop
dec
jmp
stos
add
aam
jnp
aad
lods
xchg
adc
dec
mov
sub
dec
xchg
mov
pop
outsb
std
and
popf
outsb
int
mov
xchg
ret
sub
dec
push
outsl
popf
enter
jp
jmp
int
jle
push
sub
cmp
shll
cs
push
mov
insb
sahf
je
out
xor
fildll
insb
pop
call
mov
and
jo
mov
into
jle
mov
push
jge
sbb
shlb
jae
cmp
sbb
outsb
mov
mov
fmuls
cmp
push
pushf
std
pop
xchg
popf
sub
mov
es
cmp
add
dec
pop
sub
hlt
xchg
sub
out
loope
pop
cli
inc
js
pop
fistps
push
jmp
jmp
les
sub
aas
shl
out
out
xor
inc
add
xchg
inc
stos
jg
es
mov
mov
leave
sbb
jae
push
jae
xor
sti
mov
pop
cltd
jle
sbb
inc
xor
incb
sbb
xor
daa
inc
pop
cmp
fnstsw
loopne
jbe
test
push
in
dec
push
and
inc
inc
enter
pop
mov
sbb
inc
or
or
arpl
hlt
jecxz
mov
xchg
test
jg
inc
xor
insb
imul
lret
popa
inc
mov
filds
and
in
das
call
jge
pop
pusha
xchg
and
scas
or
imul
fimull
sbb
lock
pop
cmp
cmp
mov
xor
jo
cli
push
cmpsl
fsubs
aas
in
js
dec
or
lea
testb
pop
mov
lock
and
sbb
add
scas
fdivrp
xor
cmpsb
dec
andb
xor
push
in
fmuls
movsb
repz
inc
cmp
mov
xchg
iret
clc
aad
fimuls
push
pop
sub
push
cld
scas
jae
mov
mov
cwtl
cmp
arpl
cmp
mov
mov
add
cmc
mov
and
adc
incl
and
and
and
or
mov
xchg
xchg
jo
push
lock
mov
shl
sbb
inc
adc
add
jge
jno
push
mov
mov
shlb
push
popf
sti
mov
or
jae
mov
in
inc
xchg
jae
jp
ds
jge
mov
rcll
mov
sub
shll
in
lret
in
pusha
pop
ret
lret
or
jp
leave
mov
mov
adc
add
in
jbe
sbb
icebp
pop
fs
aaa
stc
int3
and
icebp
hlt
mov
out
repnz
outsb
in
xchg
loope
addl
xor
stos
lret
and
ds
daa
or
jmp
fstl
or
jae
inc
cltd
lcall
mov
mov
mov
mov
mov
gs
das
pop
je
lahf
cltd
sub
pop
push
mov
lock
xchg
out
pop
ja
sbb
stos
rorb
and
and
xor
xorb
js
jmp
mov
push
mov
sub
or
fbld
add
fnstsw
adc
mov
sbb
xchg
popa
shlb
fsubl
int
adc
scas
push
das
ja
push
mov
rol
and
dec
jo
mov
out
adc
aad
stc
mov
xchg
cli
pop
in
mov
add
and
call
ss
popf
imul
addr16
outsb
xor
push
in
xchg
push
mov
jns
lods
inc
fildl
lret
jae
sbb
gs
bound
arpl
imul
mov
cmp
cmp
cmp
iret
insl
test
pop
push
dec
in
in
ret
xchg
and
shrb
sbb
inc
insb
dec
jo
test
idivl
leave
pusha
sub
sub
rcll
test
iret
mov
push
aam
and
in
cmc
xchg
pop
cltd
mov
in
dec
mov
xchg
sbb
mov
mov
mov
mov
bound
loop
in
cmpsb
cmp
loop
out
mov
cmp
int
ficoms
mov
mov
es
lahf
mov
push
pop
cwtl
xor
mov
fnstcw
or
or
in
aad
and
and
out
xlat
push
pop
leave
imul
das
out
pop
repz
sahf
pop
aad
ret
dec
sub
mov
movsl
ret
addl
inc
loop
stos
out
rorb
jg
mov
sbb
push
scas
pop
add
syscall
mov
mov
iret
push
jmp
insb
sbbl
pop
in
cli
dec
outsl
test
lds
scas
push
arpl
enter
jle
jle
cmpsl
add
push
jns
arpl
sbb
adc
pushf
cmp
mov
jle
lods
orb
or
cwtl
ljmp
loope
aas
mov
mov
pushf
xor
loopne
loope
mov
imul
aaa
jo
fs
mov
cli
xchg
dec
ds
bnd
aam
pop
aas
sbb
fwait
cmc
sti
fisubs
pop
jp
lods
pop
scas
mov
fidivrl
in
and
iret
xor
scas
xchg
les
pushf
add
cwtl
lock
sarl
loopne
cmp
lds
inc
out
dec
fiaddl
insl
testl
pop
aad
std
stos
test
scas
stos
pop
outsb
lret
mov
ret
sahf
flds
adc
loopne
xchg
popf
adc
push
push
and
int3
mov
inc
xchg
jae
cmc
frstor
cmp
incl
adc
jnp
adc
shlb
ficomps
shlb
dec
popf
movsb
mov
or
sti
adc
popa
stc
ret
sub
loopne
jle
xchg
mov
sysret
fistpll
lea
loopne
cltd
sub
inc
cmp
shl
out
add
outsl
das
ljmp
rorl
sub
sti
and
andl
and
js
inc
shl
mov
xchg
cmp
cmp
cmpsb
dec
js
hlt
pop
sbb
cmp
sti
das
xlat
iret
mull
outsl
dec
mov
shlb
movb
lock
xchg
cmp
int
cmc
lret
shlb
mov
or
xor
xchg
fildll
out
xchg
lret
out
fsubs
adc
jbe
inc
shll
dec
and
or
add
mov
aad
or
xor
xchg
outsb
xor
mov
sub
out
lods
lcall
push
cmp
dec
lcall
jg
jae
mov
xchg
leave
mov
cmpsl
adc
notl
adc
add
lahf
sub
mov
ficomps
push
fsub
pusha
mov
arpl
dec
and
out
loop
lods
insb
into
ljmp
lret
xchg
or
sbbl
sbb
std
add
leave
repz
jne
imul
filds
lds
add
mov
mov
arpl
mov
cmp
loope
pop
push
or
and
and
addr16
nop
and
pop
sar
shlb
shrl
or
fistpl
inc
jns
es
sbb
loopne
or
cmp
arpl
ljmp
dec
out
hlt
sbb
dec
xor
cmp
aam
jg
dec
adcb
lea
mov
pop
rcrl
cmp
xchg
lods
cmp
pusha
out
adc
or
sarb
jecxz
inc
psubusb
sub
std
out
cld
add
add
imul
repnz
sub
lods
out
cli
lret
jo
sub
dec
inc
mov
jns
mov
pop
adc
push
outsb
cmp
or
bnd
cmp
sbb
ds
adc
js
inc
fs
dec
aad
and
push
sub
mov
out
popa
pop
sbb
hlt
mov
mov
mov
movsl
mov
cmp
cmp
shrb
dec
jno
imul
jmp
daa
call
or
aaa
lret
push
push
pop
adcb
sub
stc
lcall
sahf
aaa
hlt
push
icebp
arpl
iret
inc
scas
jp
pop
inc
int
jbe
sub
xor
verw
xchg
mov
push
mov
sub
popf
sahf
inc
xchg
repnz
mov
push
call
and
gs
loopne
jb
and
jno
out
add
or
xchg
repnz
cli
pop
jecxz
fsubr
fnstsw
sbb
loop
jne
push
sub
popa
jle
out
adc
xor
in
test
or
adc
aad
and
bound
dec
fsub
dec
and
lea
mov
iret
jb
ljmp
fldt
lea
ljmp
push
sarb
inc
insb
jle
jp
xchg
lret
xor
das
push
xor
cld
dec
pop
dec
scas
shrl
sub
pusha
aam
addr16
insl
pop
sub
daa
ret
call
movsb
sub
push
mov
adc
jle
mov
inc
aad
js
pop
rorl
jno
lret
pusha
jno
lret
mov
out
or
in
pop
cltd
stc
mov
pop
movsb
and
mov
jle
pusha
nop
insl
and
xor
pop
mov
leave
adc
jge
cmc
push
add
jns
iret
sub
adc
and
pop
bnd
lods
inc
ret
jns
mov
pop
xor
and
pop
fs
adc
push
sahf
int3
mov
jno
sbb
lods
mov
cs
add
ds
xchg
in
pop
add
je
mov
leave
lcall
inc
fstps
sbb
add
add
into
ror
cmpsb
or
xor
subb
sti
into
mov
lahf
dec
not
adc
hlt
mov
push
sbb
sub
fidivs
pop
hlt
ret
mov
mov
arpl
test
pop
shll
mov
xorb
sbb
push
lods
cmp
aas
les
and
sbb
into
xchg
pop
mov
ret
mov
add
ret
jle
push
pop
es
out
ds
inc
repnz
adc
shlb
arpl
xor
cmp
ror
lock
adc
imul
imul
repz
inc
dec
sbb
add
xor
stc
push
xchg
lahf
jg
add
testb
test
adc
and
xor
push
outsb
add
push
jle
stc
inc
adc
movsb
into
adc
test
and
sbb
push
sbb
mov
dec
data16
lcall
shlb
ret
scas
cli
cmpsl
pop
stos
xor
adc
adc
xor
jp
dec
scas
outsb
and
adc
sbb
sbb
jo
jno
inc
sub
mov
xorb
lahf
mov
sar
lods
out
insb
jecxz
test
into
mov
push
imul
outsl
sarb
rcrb
xor
mov
push
cmp
add
lea
cmp
aam
cli
push
pop
or
movsl
adc
dec
add
jmp
test
fwait
xor
enter
push
pop
scas
pop
xchg
jae
mov
mov
pop
std
in
imul
arpl
sub
mov
pop
push
mov
fldenv
sti
in
mov
inc
pop
push
scas
xchg
adc
dec
xor
out
lods
push
xchg
and
and
cmpsb
pushf
out
inc
daa
dec
xchg
out
xor
neg
lea
fcoml
aam
push
dec
addl
outsl
subb
iret
adc
sub
xor
xchg
fucom
cmp
sar
mov
int3
dec
loopne
mov
out
xor
in
mov
and
in
jne
pmaddwd
pop
fdivl
mov
xchg
xlat
mov
outsb
call
mov
test
xor
fstpt
adc
shlb
test
sub
lcall
repnz
mov
test
mov
jb
xor
icebp
les
or
popa
outsl
add
cs
loopne
xchg
insb
ljmp
adc
jns
jbe
mov
lea
jge
inc
scas
in
xchg
mov
push
rorl
sub
push
dec
inc
sbb
ljmp
and
adc
mov
repnz
pop
rcll
ficomps
mov
in
mov
gs
pop
mov
int
mov
inc
pusha
cmpsb
sahf
ss
sbb
add
cmpsl
test
inc
ffree
idiv
mov
in
sub
add
loopne
pusha
mov
push
sbb
out
sbb
pop
hlt
mov
jno
into
cmpsb
loope
les
lods
mov
jp
adc
imul
imul
repnz
iret
cs
mov
mov
pushf
or
inc
pop
xor
adc
iret
mov
jge
aas
int
test
adc
jg
jp
sub
sbb
and
inc
lods
lock
imull
xor
jb
ret
data16
add
fs
je
movsl
jmp
add
insl
hlt
jge
test
mov
roll
mov
push
pusha
mov
test
sub
cmc
in
aad
rcl
daa
pop
xlat
lock
addr16
sbb
ss
mul
adc
jno
add
xorb
sbb
call
aaa
adc
push
rclb
jge
mov
or
scas
sar
mov
sbb
pushf
scas
lods
mov
xlat
push
iret
lds
stos
mov
push
test
pushf
mov
mov
and
ds
sub
pop
mov
movsl
and
add
ret
push
iret
cmp
sbb
rcr
mov
lds
lds
lret
into
bound
mov
pop
mov
hlt
fstenv
pop
test
add
or
out
popa
mov
sbb
jb
or
mov
jns
frstor
jle
cmp
add
out
push
popa
mov
mov
sub
shrl
cmp
inc
test
test
fimuls
std
sbb
mov
mov
dec
dec
fdivrp
fnstenv
shl
mov
add
lret
pop
or
sbb
mov
lock
adc
lret
lahf
loop
add
and
in
cmpl
push
jmp
repnz
push
fwait
inc
jmp
lea
fmul
cltd
add
dec
push
or
ds
repnz
orl
popf
call
or
stos
add
push
inc
lock
mov
mov
cmp
nop
lcall
lret
inc
sub
sahf
dec
scas
push
stc
xchg
test
out
xchg
or
lea
roll
insb
add
popf
cs
mov
stos
mov
cwtl
roll
fldt
dec
jg
jae
adc
cwtl
jp
sbb
das
push
cmpsl
sub
or
sbb
mov
fs
mov
loop
cmp
jmp
sahf
jmp
out
pop
test
pop
cmc
mov
and
and
mov
inc
mov
movsb
xchg
ja
decl
sbb
clc
roll
adc
pop
adc
dec
sub
xchg
push
lret
daa
or
inc
and
or
cmp
sahf
outsb
jg
shr
stc
sub
jecxz
insl
adc
in
adc
sub
out
pop
xor
mov
adc
fmuls
aaa
pop
pusha
mov
mov
into
jne
imul
lods
bound
adc
das
and
test
sub
jmp
or
sbb
inc
ljmp
mov
xor
adc
dec
sti
mov
adc
insb
testl
mov
orl
dec
mov
icebp
lock
cmp
outsl
loop
xor
sahf
inc
pushf
in
in
outsb
push
lret
mov
xchg
shr
vpmadcswd
mov
push
call
fwait
repz
pop
mov
dec
xor
int3
fbld
in
push
mov
shlb
cld
jmp
gs
and
das
fidivs
jb
lcall
loopne
mov
fadd
mov
fstpt
push
aaa
outsl
das
mov
call
test
std
cmpsb
das
pop
aam
mov
xchg
in
cmp
clc
sti
pop
ficoms
inc
daa
mov
adc
rcrl
outsb
jmp
sti
pop
or
cmpsl
aaa
popa
repz
dec
adc
push
shll
inc
inc
xor
inc
dec
out
inc
add
push
sub
xor
in
stos
inc
popf
out
mov
lcall
mov
cld
arpl
test
and
xor
popf
in
mov
jb
call
loopne
fstl
and
cmpsl
popa
lret
add
mov
push
and
ret
jns
in
stos
cmc
or
xchg
arpl
mov
insl
hlt
xor
jae
and
dec
or
dec
jp
jb
shlb
sub
sub
addr16
mov
fcomps
jp
push
add
out
adc
mov
scas
mov
jnp
jle
pop
fwait
and
fcompl
lock
pop
lods
scas
xlat
popa
icebp
lcall
jecxz,pt
cs
movsb
in
add
push
sbb
sub
int
and
adc
mov
imul
jp
dec
add
aam
inc
xchg
add
mov
outsl
sub
gs
clc
mov
push
out
cli
cmc
nop
adc
imul
cmpsl
adc
lock
push
jmp
and
jecxz
mov
mov
jl
push
cmp
mov
ret
ficoms
into
sbb
inc
add
loope
incl
dec
loope
xor
push
arpl
popf
inc
cmc
subb
aad
pop
push
in
cmpsb
cmpsl
xor
insl
ds
bswap
and
add
je
xorb
pop
movsl
stos
inc
subl
ljmp
cld
inc
in
ror
cltd
cmpsl
test
lods
rcrb
out
pusha
in
mov
lods
lock
je
je
mov
push
pop
pushf
decb
mov
pop
xor
std
dec
jb
xchg
es
push
sbb
fwait
pop
or
add
add
and
or
pop
out
ljmp
xlat
mov
js
xor
xchg
pop
inc
xor
lods
popf
jo
pop
inc
pop
push
pop
cmp
je
iret
loopne
mov
add
cmp
cli
sub
ret
lcall
mov
inc
push
shll
insl
mov
adc
pop
cmp
xchg
and
fbld
mov
mov
xor
jae
lea
sub
js
xor
adc
inc
adc
jp
adc
add
mov
lret
cmp
cmpsl
fsubs
dec
push
sbb
xor
cmpsl
xchg
movsl
shll
add
cs
dec
mov
lock
call
lret
and
int3
add
adc
loopne
roll
xor
enter
icebp
mov
xchg
xorl
cltd
lahf
mov
mov
or
out
add
sbb
faddp
insl
fdivp
mull
out
xchg
or
mov
mov
xor
or
xchg
loop
popa
mov
outsl
addl
xchg
lods
jl
sbb
or
sarb
jae
jl
js
fstpt
ficoms
cmpsb
out
scas
xchg
addr16
call
sarl
sbb
ds
enter
out
add
lahf
lret
das
jnp
add
gs
insl
out
mov
jo
movsl
leave
jl
out
pop
add
or
cmp
sti
bsr
mov
mov
aaa
mov
loopne
and
push
les
xchg
sub
cmc
div
pop
dec
fiaddl
xchg
cli
orb
mov
cmp
mov
jge
orl
jp
mov
je
xor
add
orb
xchg
sbb
mov
sub
sti
mov
ljmp
cmp
cwtl
xchg
and
mov
jle
out
xor
pop
mov
frstor
adcl
ja
push
icebp
idivl
and
fiaddl
push
add
xchg
add
fmuls
sbb
pop
dec
inc
outsl
xlat
loop
xchg
jmp
adc
fdivs
stos
cmc
mov
cmp
push
jns
pop
hlt
cmpl
lcall
pop
fldl
and
scas
mov
cld
sub
dec
repnz
jno
xchg
sub
add
or
push
xor
dec
scas
pop
push
push
cwtl
push
daa
test
out
sbb
dec
pop
lahf
adcb
sub
adc
nop
dec
movsb
repnz
imul
xor
xlat
popf
in
cmp
divb
fildl
scas
cwtl
insl
insb
cmc
or
les
xor
inc
aad
repnz
push
icebp
jo
call
mov
or
imul
mov
cli
imul
fdiv
nop
cs
test
mov
pop
mov
add
inc
sbbb
jmp
gs
mov
xchg
rcrb
aam
push
cmp
lcall
dec
stos
sbb
lcall
and
push
and
cmc
inc
xor
fcomp
lea
push
pop
test
pop
movl
imul
jmp
inc
and
jmp
mov
push
inc
push
push
dec
jg
dec
pop
add
or
sub
or
jmp
fwait
sub
jp
loope
push
lock
xchg
mov
orb
xchg
mov
pop
and
js
out
repnz
ret
dec
arpl
jge
gs
push
std
inc
jno
insb
mov
scas
mov
jge
fwait
jbe
push
xorl
in
xchg
fdivr
or
push
ss
repz
in
cli
out
dec
pop
pop
push
mov
dec
add
ja
adc
fstl
popf
idiv
add
adc
sub
es
jecxz
loop
adc
or
fisubrl
nop
xor
pusha
mov
pop
jp
jg
jbe
mov
fdivs
push
inc
jne
jnp
cwtl
mov
stos
in
jbe
scas
imul
adc
jne
cltd
cmp
xchg
aaa
lods
clc
aas
imul
outsb
out
cmp
jecxz
aas
pop
mov
test
xchg
mov
fidivrl
add
pop
jmp
inc
mov
add
mov
or
cwtl
aad
test
addr16
mov
sub
inc
dec
jle
scas
js
stc
sbb
loop
fdivl
data16
int
jmp
push
call
and
pop
mov
push
fwait
xchg
aam
jnp
into
ds
ud1
aam
pusha
sub
and
cmp
scas
sbb
xchg
pop
push
idivl
and
dec
call
dec
mov
rcll
jbe
dec
fstl
cmp
mov
incb
ret
fstpt
jns
dec
bound
and
jb
xor
insl
sub
hlt
add
mov
xchg
shll
call
rorl
jg
add
and
lock
aaa
jecxz
xor
jno
or
shlb
cmp
xor
adc
push
popa
pop
pop
jb
testl
mov
mov
pushf
imul
inc
sub
ficompl
sahf
mov
mov
or
sbbb
mulb
in
jne
adc
ds
movsl
flds
inc
shlb
xor
mov
xlat
push
lcall
push
pop
jbe
decb
and
jae
incb
insl
add
in
adc
ss
icebp
loope
pop
xchg
pop
ficomps
jg
mov
jecxz
add
lret
mov
push
push
fiadds
inc
dec
mov
je
push
imul
adc
ljmp
pusha
fisubl
lods
dec
popf
add
and
or
jmp
pop
xlat
outsb
fildl
mov
cwtl
ja
mov
push
fdivp
popa
jle
cwtl
imul
sbb
shlb
and
xor
test
jecxz
cltd
dec
sbbl
and
sub
inc
test
inc
lods
mov
xor
xlat
lds
and
push
cmp
gs
pop
xchg
add
jmp
scas
js
arpl
cvtpi2ps
pop
cmp
stos
xchg
std
stc
out
scas
add
xchg
xchg
sbb
fsubrp
out
xchg
imul
stc
xchg
inc
mov
rcrl
push
and
add
mov
imul
sbb
movsl
xor
sbb
pop
ja
inc
sub
sub
add
add
shll
or
fbstp
jecxz
push
mov
mov
push
pop
or
lahf
xor
cmp
jb
mov
stos
xchg
jmp
xchg
or
in
inc
stos
xor
sbb
stos
mov
xor
xor
cld
or
adc
sbb
add
and
add
sub
sbb
or
inc
rcrb
adc
stos
imull
cmp
sub
ljmp
cmp
jns
dec
aam
movsb
in
and
push
xor
sbb
jo
aad
cmp
mov
xor
sbb
rcrl
xchg
fisttpl
out
mulb
lahf
outsl
sti
pop
add
pop
mov
fistl
test
lods
adc
pusha
arpl
and
push
cmp
pushf
cmpsl
ucomiss
mov
add
mov
and
fs
setg
cltd
jecxz
add
jno
fs
add
loope
outsl
inc
cmp
lods
xor
sbb
push
es
xchg
sbb
mov
icebp
cmp
jle
mov
sbb
or
sub
or
sub
inc
mov
lods
adc
ret
mov
mov
bound
sarl
push
mov
fisubl
fs
insb
xchg
bound
jo
arpl
sub
cwtl
mov
addr16
push
and
pop
shlb
js
dec
cmp
jns
lret
inc
fldl
addr16
mov
jmp
js
pop
movsb
xchg
enter
add
popf
and
cmpsb
sub
inc
nop
cmpsb
xchg
out
fistps
arpl
jb
dec
jae
push
test
add
jge
cmc
movsb
jo
fs
jno
push
mov
testl
inc
push
xchg
adc
cmp
cwtl
popa
add
mov
loopne
loope
sarb
pop
adc
sub
dec
sahf
mov
mov
in
mov
fucomip
std
jl
addl
add
jge
push
xchg
sbb
imul
push
stos
jmp
jae
pop
in
shlb
inc
fsubrp
lret
mov
adc
out
add
or
sti
add
shl
push
sti
inc
filds
popa
or
shlb
repnz
or
mov
aaa
mov
test
outsb
cwtl
mov
fstpl
fnstsw
pop
jns
daa
lahf
jno
jmp
jle
int3
popf
jg
jo
test
push
xor
sbb
cmpsl
loop
movsl
inc
push
rorl
pop
lcall
into
inc
cmpb
les
stos
out
imul
mov
in
sbbl
gs
or
popl
push
sbb
mov
inc
push
xchg
movsl
bound
stc
xchg
jmp
mov
sbb
cmp
aam
cld
and
repz
fwait
sbb
adc
push
mov
repz
push
cmp
scas
loop
and
fiadds
test
call
or
sbb
pop
jbe
sub
clc
add
int3
lret
mov
sti
jp
movsl
mov
xor
or
mov
aad
popf
call
leave
out
xchg
sub
cmp
aam
loope
pop
daa
jb
insl
cmpsl
fildll
mov
cmp
adc
fwait
movb
inc
xlat
repz
pop
icebp
mov
fisubrs
mov
pusha
inc
out
cmpsb
int3
dec
and
ror
xchg
shlb
mov
popf
xor
pop
mov
fsubl
mov
ret
data16
lahf
xor
jns
sbb
nop
fnstenv
lock
adcb
xor
dec
test
push
pop
cmp
testb
popf
xchg
in
js
orl
mov
jo
je
adc
lock
xchg
push
jae
int
add
inc
adc
xlat
ljmp
or
adc
lret
mov
fldcw
addb
iret
push
jae
sub
cwtl
adc
dec
rol
xchg
jo
and
xchg
mov
loop
arpl
test
xchg
int3
sbb
test
call
testl
cmp
std
push
adc
lods
sbb
test
loopne
test
fwait
mov
xchg
rolb
jmp
lahf
cmp
fwait
cmc
add
cmp
push
adc
mov
ja
lret
jo
ljmp
lock
loope
jno
mov
movsl
shl
scas
xor
add
les
inc
mov
leave
mov
int
jb
push
and
mov
push
push
jp
sahf
cmp
in
clc
add
sbb
insl
loopne
popa
in
inc
inc
icebp
rol
ss
enter
push
cmpsl
or
insl
in
mov
inc
pushf
out
aas
and
into
pop
les
xchg
inc
les
mov
lock
loopne
cmp
and
inc
mov
xlat
xchg
jno
cmc
leave
ficoml
mov
dec
or
fucomi
imul
mov
adc
dec
mov
mov
adc
jl
and
and
xor
xchg
clc
dec
lds
jnp
mov
cmp
push
gs
pop
xor
pop
xchg
adc
or
cld
jmp
push
je
jecxz
mov
add
mov
stc
das
stos
rcrl
push
insl
inc
leave
out
pushf
inc
outsb
pop
push
fists
push
add
jno
bound
mov
mov
mov
mov
popa
push
inc
ror
ds
rol
fnstenv
jle
xchg
lock
mov
pop
mov
xor
jecxz
fnstenv
mov
shll
fimull
icebp
jno
mov
add
faddl
inc
arpl
push
or
ret
add
addl
cmp
stos
xor
pop
pop
jl
jl
add
cli
adc
lea
cmp
andl
xor
cmpl
push
push
add
mov
sbb
cmp
mov
iret
mov
stos
sahf
les
cmpsb
jecxz
sub
fimull
push
jle
add
les
bound
into
ljmp
inc
in
mov
cwtl
outsl
or
icebp
pop
insl
ret
jl
jo
call
pushl
fs
mov
sub
dec
scas
rcll
xchg
rol
lahf
inc
adc
decl
xchg
jnp
jo
add
leave
dec
mov
gs
movsb
jns
mov
mov
jae
daa
pop
imul
arpl
cmpsb
xor
je
adc
jg
or
ret
ficoms
cmpsb
fmull
add
jecxz
data16
pusha
lret
xchg
fstl
jl
sub
push
das
jno
arpl
pop
loope
pop
iret
cli
add
ss
rcrl
mov
mov
icebp
repnz
mov
and
add
cltd
sbb
add
inc
pop
insb
mov
in
data16
sub
aad
nop
push
xchg
fs
add
outsb
cmp
pop
add
mov
jmp
jns
fldt
popf
mov
ud2
mov
pop
ss
mov
and
mov
shrl
jge
adc
sbb
mov
lods
xchg
imul
fstpt
and
pop
ret
dec
mov
jno
sbb
cltd
aaa
lods
mov
aam
jns
aad
leave
lahf
and
cli
mov
aad
push
cs
pop
mov
push
mov
movsl
push
inc
arpl
inc
into
push
stos
int3
fisubs
inc
jge
cli
gs
xchg
xchg
ret
mov
push
or
adc
fidivs
popl
dec
cli
aas
lcall
nop
sbb
arpl
sbb
sub
mov
fwait
xchg
xor
add
push
int
aaa
or
inc
subb
sub
repnz
repnz
imul
push
sub
lods
fwait
imul
int
addr16
mov
outsl
shlb
mov
inc
cmp
sbb
jns
aam
mov
mov
mov
faddl
jne
xor
cmp
jp
lods
std
cmp
pop
adc
mov
in
fsubr
xor
mov
jno
sbb
push
and
jns
scas
fnstsw
out
inc
xchg
loope
fimuls
pop
or
add
out
imul
addr16
loope
adc
out
arpl
outsb
and
dec
js
inc
xchg
inc
call
pop
sbb
adc
add
mov
movl
jp
int
xchg
aam
arpl
scas
add
cmp
movsl
sub
into
xor
mov
movsl
jno
ds
pop
or
or
mov
enter
inc
cmp
pop
and
or
add
cmp
js
xchg
stos
dec
sbb
jecxz
das
sbb
pusha
inc
push
xor
test
sub
out
les
xor
jo
clc
push
sub
inc
pop
push
pop
sbb
in
outsb
jbe
mov
stc
inc
inc
adc
mov
jmp
clc
test
mov
pusha
push
daa
sbb
mov
mov
mov
int3
cmp
icebp
in
dec
insb
mov
add
repz
inc
cmp
sbb
mov
in
jne
cli
rclb
incl
jle
adc
int3
mul
lahf
cltd
add
add
out
cwtl
loope
scas
sbbl
mov
cli
fwait
push
jl
je
pop
adc
ss
fsubs
mov
pop
add
stos
xor
sub
add
lret
mov
ja
cli
push
jnp
pop
js
roll
shrb
out
push
pop
roll
sbb
mov
in
cmpsb
mov
sub
mov
xorb
xchg
sub
aas
jnp
mov
cmc
pop
sub
ss
jecxz
push
movsl
cmc
mov
adc
mov
and
mov
jne
push
pop
ret
pop
mov
rcrl
mov
test
jb
mov
mov
popf
repnz
sbb
jmp
scas
sbb
pop
sar
loopne
sbb
xor
sub
xchg
mov
push
jl
and
mov
xor
call
outsb
cwtl
inc
iret
mov
adc
dec
rolb
fidivs
ja
and
test
dec
shl
mov
aad
pushf
cmp
int3
mov
pop
mov
or
pushf
sbb
call
stos
mov
mov
sub
dec
dec
cmp
mov
jge
shrl
mov
mov
xor
clc
mov
mov
xlat
movsl
fdivr
lock
mov
cmp
sub
mov
div
adc
mov
inc
loop
pop
in
cmp
xchg
mov
mov
sbb
movsl
mov
test
add
dec
loopne
repnz
add
cmp
data16
int
sti
lea
lahf
sub
sar
loop
insb
mov
ficoms
jo
loop
xor
push
lea
nop
or
mov
mov
push
into
xchg
gs
pop
jb
cmp
test
loopne
mov
jbe
insb
or
add
jmp
data16
std
shrb
adc
sbb
mov
movl
xchg
mov
into
lahf
fwait
repz
jp
adc
adc
push
rcll
dec
lods
nop
cwtl
and
xchg
pop
es
cltd
in
mov
repnz
dec
mov
movsb
arpl
icebp
std
mov
loop
fstp
inc
stos
shlb
enter
or
stos
dec
cmpsl
nop
icebp
xchg
test
pop
nop
mov
push
push
adc
add
fsts
test
mov
mov
dec
xchg
xchg
pusha
fiaddl
pop
cmpsb
or
pusha
xor
cmpb
mov
cmc
mov
push
sbb
jbe
movsb
ret
push
scas
xchg
push
add
cmc
push
xchg
std
daa
aam
jbe
decl
adc
into
dec
xchg
out
rcrl
je
mov
adc
mov
pop
mov
icebp
jae
inc
mov
into
les
mov
xlat
cmovo
jb
mov
push
xchg
insb
mov
loop
stc
xlat
nop
mov
add
mov
cli
pop
cmp
cmp
add
addr16
mov
xorl
je
outsl
xchg
add
or
and
push
inc
add
leave
fisubrs
rorb
fs
mov
insl
mov
xchg
and
mov
add
mov
mov
add
sbbb
insb
fbld
inc
sub
call
mov
shrl
out
enter
pop
inc
imul
leave
fisttps
mov
in
test
sub
movsl
lret
push
inc
sub
and
lret
cmpsb
mov
lea
clc
mov
dec
and
dec
push
loope
fistps
int
fisubrl
addr16
lds
cltd
cmp
xchg
mov
jno
gs
mov
adc
push
inc
enter
add
pop
jg
fdiv
jo
cmp
aas
push
mov
push
or
xchg
dec
sbb
cmpsb
mov
jge
imul
mov
repnz
cltd
cli
and
js
jns
pop
mov
cmp
push
lret
int3
sub
jb
dec
arpl
push
pop
mov
dec
cmpsl
out
sbb
int
popf
or
lods
push
out
dec
ficoml
sbb
add
aam
sub
subb
not
xchg
adc
aaa
popa
jmp
clc
in
ds
push
push
mov
es
movsb
adc
jae
mov
xchg
pop
or
leave
cmpsb
sub
cld
int
aas
cmpsl
lret
cmp
cwtl
adc
mov
xchg
adc
dec
shll
inc
xor
sbb
in
ficompl
cmpsb
sti
cld
gs
cmpsb
pop
das
add
pop
dec
movsl
imul
cmp
pop
jns
sbbl
out
cmp
mov
arpl
int3
out
hlt
mov
clc
xchg
nop
pushl
push
mov
addr16
mov
mov
into
jbe
mov
cmpsb
icebp
or
push
fistpl
cmp
pop
add
ja
insb
mov
je
sbb
in
jg
ja
mov
xor
pop
cs
dec
rorb
adc
xchg
and
xchg
daa
or
movsb
ss
mov
mov
arpl
pop
mov
adcl
push
and
mov
ret
js
fisttps
inc
iret
cltd
adc
test
cld
dec
push
cld
dec
mov
jl
mov
push
lret
mov
jge
mov
bound
lods
test
push
insb
js
rorl
stos
cmp
xor
lock
addr16
in
adc
leave
jge
sbb
inc
push
push
push
mov
int3
push
enter
xchg
mov
or
or
cltd
or
mov
add
subb
fsubrs
outsl
add
mov
mov
and
dec
and
mov
js
ret
push
ljmp
int3
xchg
popa
outsl
roll
mov
xchg
das
mov
std
ret
mov
cmp
pop
adc
push
sub
shll
loop
mov
in
aad
adc
jle
dec
jo
inc
das
fcmovbe
mov
pop
ljmp
pushw
fmuls
sbb
scas
std
inc
pop
mov
imul
cmpsb
add
out
pop
mov
add
dec
lock
fistpll
andl
clc
addr16
loope
cmp
fimull
and
stc
jnp
push
xchg
mov
pop
je
bound
sub
xchg
jbe
sbb
subl
cmc
ds
add
inc
gs
push
push
xor
cmp
lods
jbe
je
cli
push
cwtl
mov
and
add
outsb
mov
push
mov
adc
mov
xchg
addl
fidivrl
and
lock
fidivs
xor
or
cmp
stos
xlat
xchg
jae
test
adc
neg
sub
sub
sub
stc
pushf
push
jns
mov
mov
push
cmc
fisubrs
mov
sbb
mov
push
pusha
jg
int
fisttps
test
push
xchg
push
pop
mov
ja
xchg
xor
jae
push
bnd
les
mov
outsb
loopne
sub
sbb
xchg
inc
lds
bound
sbb
push
pop
xchg
or
cmc
fucomp
pop
jno
xchg
aaa
repnz
lret
stos
fucomi
sbb
mov
icebp
test
in
outsb
sub
push
xchg
push
movsl
mov
mov
adc
push
out
ljmp
jae
testb
dec
mov
int
mov
push
scas
push
out
repz
cmpsl
daa
jmp
add
inc
adc
loopne
add
ffreep
jecxz
das
push
add
lcall
dec
xchg
dec
out
adc
scas
xchg
pusha
jne
xor
repnz
scas
leave
lret
roll
mov
loope
icebp
xchg
sarb
mov
xor
icebp
jnp
scas
jp
push
ja
push
mov
hlt
decl
sbb
xchg
shlb
fldt
pop
stos
icebp
rorl
xor
jmp
ret
out
mov
and
shrb
adc
mov
push
movsb
int3
fwait
aas
dec
inc
adc
test
pop
jmp
mov
xor
ds
pusha
cmp
jecxz
fidivrl
jge
adcl
test
cmp
sti
cmp
mov
jns
adc
mov
adc
pop
mov
add
cmc
mov
xchg
popf
xor
push
sub
nop
and
and
stc
bound
cli
lock
cli
add
shl
pop
loop
mov
push
mov
sti
test
fcompl
js
mov
jae
add
jecxz
hlt
imul
dec
mov
inc
negb
add
cmp
dec
popf
inc
xchg
mov
lahf
in
jnp
ja
xlat
xor
lret
push
mov
fcompl
mov
nop
jg
jge
scas
jo
fcmovnb
pusha
push
sbb
jne
pop
jne
push
push
xor
mov
mov
mov
aam
mov
inc
jno
cmp
inc
imul
pop
fdivrs
insl
xchg
or
aas
sbb
xlat
add
lret
lret
mov
ret
aad
cmpsb
pop
sub
movsl
adc
mov
mov
jae
xor
ja
popa
aas
xor
sub
mov
repz
push
sbb
pop
hlt
sbb
std
mov
fdivr
ds
inc
inc
call
cmc
xor
add
pop
in
or
nop
mull
cmp
pushf
mov
int3
mov
cmpsb
dec
mov
sub
popf
hlt
jmp
leave
push
dec
shll
test
or
mov
inc
iret
je
lret
xor
xor
xchg
cmp
fwait
push
jne
repnz
push
mov
ljmp
mov
imul
imul
or
push
add
or
mov
adc
test
aad
mov
add
adc
push
div
mov
test
sub
movsl
sub
aas
sbb
or
push
xor
iret
push
mov
arpl
in
pop
mov
pop
sbb
add
inc
jb
mov
sbb
xlat
testl
sbb
das
jno
fwait
out
sub
les
dec
lock
jl
ret
mov
dec
inc
adc
xchg
add
in
lret
repnz
pop
movsl
clc
xchg
cltd
cmp
add
add
xchg
pop
xchg
pop
ficoms
fistps
loopne
cmp
bound
call
cmp
and
xor
xchg
mov
or
outsb
aaa
sti
push
jo
adc
xchg
adc
repnz
cmp
lods
cmpsl
jmp
adcb
sub
cmp
push
mov
pusha
mov
loop
or
mov
in
adc
rcrb
fiadds
push
mov
or
std
out
adc
and
fisubrs
push
pop
sbb
das
inc
stos
int3
inc
xchg
mov
or
xor
push
cltd
fdivs
arpl
xchg
pop
lock
pop
int3
les
push
add
dec
lods
inc
js
adc
mov
xchg
jo
mov
pop
cli
push
mov
or
mov
push
in
push
xor
into
mov
lods
idivb
jae
jp
mov
popa
aam
jp
and
aad
pop
adc
jb
outsl
fisubl
adc
je
shrl
dec
aad
fcmovnbe
test
fldcw
and
ret
loopne
pop
out
ljmp
push
sti
mov
sbb
push
mov
xor
jg
mov
jg
in
rorb
push
test
pop
mov
outsb
popa
sbb
inc
pop
pop
call
mov
or
ficompl
les
inc
inc
mov
pop
xchg
outsl
pop
mov
test
sbb
xchg
cmpsb
jge
mov
cmp
xor
call
jne
mov
dec
add
fdivr
insl
add
lds
mov
fst
dec
pop
mov
incb
cmp
fs
add
or
ja
call
lock
sti
sbb
out
push
or
and
dec
sbb
negb
fnsave
adc
rcl
call
imul
cwtl
add
add
mov
mov
mov
fstps
cmp
push
sub
push
push
xor
mov
imul
mul
lcall
sbb
mov
incl
hlt
int
push
sub
sub
repz
or
inc
mov
outsb
xchg
ss
sbb
xor
rcll
sti
xlat
in
pop
sbb
ja
xor
imul
std
push
or
sub
aaa
in
add
xchg
mov
rcl
adc
leave
add
les
push
lahf
dec
pop
rolb
push
in
pushf
icebp
push
mov
sub
inc
mov
xor
insb
jecxz
jmp
bnd
jbe
jmp
push
mov
inc
push
lea
push
aad
mov
mov
gs
mov
pop
cmp
adc
popf
aas
mov
arpl
mov
std
iret
std
cmp
insb
sbb
add
imul
pop
popf
jo
icebp
fs
test
int
in
inc
scas
jg
push
nop
movsl
daa
shl
jp
adc
je
cmp
push
gs
xorl
stos
pushf
test
clc
in
aad
and
sar
mov
mov
xor
stos
xor
sar
mov
scas
fwait
xlat
cmp
repz
and
sbb
aas
add
or
pop
xor
addr16
das
jo
ret
pushf
adc
mov
cs
andb
push
addl
sbb
mov
sbb
cmc
or
mov
daa
cmp
js
and
nop
data16
and
fnstcw
repz
fnstcw
in
mov
add
movsl
ja
jge
and
mov
xor
int3
dec
adc
jo
inc
xor
mov
repz
testb
int
lods
pop
stos
in
xor
pxor
jl
ja
add
loopne
fs
and
jmp
roll
and
push
lea
dec
sbb
xchg
pusha
mov
fcomps
andb
cltd
and
out
outsl
jp
mov
sub
ss
pushf
or
mov
dec
jl
pop
or
or
inc
testb
fildl
stos
inc
jno
fadds
pop
push
add
push
pop
addb
adc
test
sbb
scas
hlt
fildll
push
mov
xlat
int
mov
movsl
daa
aaa
stc
jmp
or
push
adc
mov
lahf
push
mov
push
dec
rcrl
sbb
pop
add
mov
pop
push
loopne
cs
in
cltd
push
xchg
in
ret
or
loopne
mov
cs
mov
fs
pop
mov
add
jl
test
dec
jno
div
cld
xchg
lcall
outsl
stos
xchg
lods
push
add
push
ret
inc
popa
imul
mov
add
push
adc
or
jnp
in
stos
andb
mov
push
and
inc
rcrl
addl
lods
ror
hlt
cmpsl
sahf
and
xlat
loop
xor
clc
jae
out
sti
adc
imul
push
rorl
in
push
cmp
scas
pop
pop
test
arpl
frndint
mov
push
outsl
xchg
inc
out
pop
cli
sbb
cmp
mov
shrl
mov
hlt
or
std
push
mov
shlb
push
sbb
xor
xlat
push
mov
enter
enter
mov
sub
lds
jecxz
js
aam
in
pop
das
add
sbb
test
xchg
bswap
mov
outsb
dec
lods
xor
pop
xchg
mov
adc
cltd
fsubrp
in
inc
cmp
mov
mov
test
test
je
lods
mov
rcll
lods
xchg
and
movsb
push
out
fwait
pop
mov
scas
decl
dec
mov
inc
dec
mov
stos
mov
cmpsl
ret
in
lds
loope
mov
jge
mov
bound
lret
adcl
dec
dec
mov
test
add
sub
xchg
arpl
jo
sahf
or
mov
fdivrp
mov
mov
aad
add
into
xchg
pop
cwtl
out
sar
js
cmp
rcll
dec
xchg
les
cmp
daa
sti
leave
adcb
and
mov
loope
movsb
push
arpl
or
leave
sbb
into
dec
out
pop
leave
adc
cld
std
sar
incl
mov
out
mov
sub
cs
push
das
mov
cmp
lret
cmpsl
xchg
jg
data16
dec
hlt
mov
stc
sub
mov
mov
mov
mov
adc
pop
and
loopne
shlb
xor
shr
rcrl
jg
loop
lods
aas
mov
clc
mov
mov
fwait
test
loopne
cmp
out
mov
std
into
mov
mov
pop
lea
ds
mov
push
dec
pop
xchg
in
aas
sub
jg
add
dec
xor
pop
or
ljmp
jg
cmp
aad
and
xchg
adc
lcall
push
jle
push
mov
or
ljmp
fstl
mov
sahf
int
and
inc
jp
jmp
sahf
out
jnp
add
xchg
out
sbb
jb
dec
jle
arpl
mov
jno
pop
xchg
pop
lea
pop
rcll
cmpsb
rorb
imul
push
mov
jae
fsubl
push
dec
les
not
cmp
lea
dec
pop
aad
subl
fiadds
jmp
mov
cmp
icebp
xor
jge
mov
and
cmp
add
sahf
or
jne
add
mov
adc
jae
popf
lret
cs
loopne
mov
iret
jb
lods
imul
and
dec
out
cs
in
xor
ret
mov
int
test
int3
popa
push
sub
add
xchg
lret
out
lods
ffreep
push
cs
mov
xor
gs
bound
stc
lock
cltd
mov
addr16
addl
inc
pop
adcb
dec
mov
insb
cli
je
jmp
adc
and
negl
rcll
mov
rdpmc
outsl
xor
mov
dec
popa
loope
loope
in
xchg
gs
mov
or
mov
std
fisubl
stos
cwtl
cli
into
mov
and
cmp
push
ds
es
fmull
call
daa
inc
add
js
int3
push
dec
push
pop
dec
cltd
xchg
sbb
shr
push
add
shll
das
xchg
lahf
mov
xor
push
lds
mov
test
mov
scas
sbb
mov
add
sub
jnp
xorb
xorb
fs
fcom
sub
lods
lcall
mov
loope
mov
mov
add
push
mov
adcb
jle
add
lds
out
mov
mov
jp
jecxz
out
ja
clc
clc
ds
cltd
xchg
lahf
mov
cmove
sbb
and
and
movsl
sub
fs
in
emms
into
sbb
test
sbb
push
sub
jg
sub
cmc
in
and
lods
pop
xor
cltd
fdivrl
push
fsubp
fisubrl
fistpl
xchg
sbbl
ja
sahf
cs
mov
sub
mov
adc
push
roll
mov
icebp
arpl
xchg
add
push
inc
fisubrl
ja
push
leave
aad
repnz
jo
enter
popa
std
scas
in
arpl
out
push
add
jbe
pop
test
aas
xor
pusha
aaa
pop
in
sahf
arpl
aas
or
daa
jo
pop
ret
mov
or
xchg
sbb
xor
addr16
add
pop
pusha
xor
sbb
out
mov
jnp
sub
test
in
push
cmp
xchg
cmpsl
mov
fdivrl
lods
jno
in
nop
and
pop
out
dec
add
dec
call
mov
pop
cmpsb
ret
sbb
sub
sub
hlt
inc
lret
jmp
xor
decl
pusha
movsb
icebp
enter
pop
cmpl
out
dec
sahf
cmpsl
leave
mov
dec
test
divl
jge
test
add
pop
lea
xchg
mov
and
adc
add
sbb
sub
mov
rorb
or
cmp
lods
lcall
loope
pop
jae
subl
pushf
nop
and
pop
fistps
bswap
pop
add
dec
add
lock
sbb
scas
aas
gs
cmpsl
mov
jge
jecxz
test
out
xchg
push
inc
stc
fld
pop
imul
decl
cmc
mov
cmp
loop
xchg
xchg
inc
icebp
js
out
scas
lret
imul
imul
pop
inc
lahf
cmp
xchg
imul
rcll
idivb
add
std
dec
pop
rorb
aam
adc
sti
cmp
mov
xor
leave
jl
sti
sbb
cltd
xchg
inc
test
cltd
int3
test
clc
test
test
les
int3
in
adc
or
jge
fsubl
arpl
adc
enter
push
adc
les
jg
movsl
dec
cmp
sub
xchg
stos
popa
pop
dec
push
push
enter
or
add
adc
xor
cld
adc
ss
lods
lahf
mov
xor
sub
push
sbb
out
xor
sbbb
loop
xchg
fdivrp
outsb
rcll
inc
call
call
sbb
jno
mov
lods
inc
jge
inc
pop
mov
inc
std
inc
or
shlb
aas
mov
or
dec
lods
popa
jmp
out
iret
cli
sarl
mov
ds
pop
and
mov
lret
mov
cmpsb
cmp
mov
es
int3
repz
push
mov
mov
adc
adc
sub
jmp
std
in
sub
mov
clc
jbe
imull
call
test
cmp
mov
inc
mov
aad
jge
in
shll
mov
jb
push
mov
jns
xlat
mov
xor
ret
mov
stc
jbe
int3
ffreep
cli
add
and
addr16
fstp
and
push
iret
push
mov
test
mov
pop
push
xor
test
pusha
push
or
add
and
sub
ret
verw
adc
movsl
pop
jmp
pop
jge
cmp
hlt
cmp
jae
notb
into
lret
call
jg
cltd
pop
popf
xchg
shll
incl
push
setge
pusha
nop
int
mov
jb
mov
mov
rclb
jbe
popa
daa
fcompp
sbb
iret
dec
add
push
ljmp
rcrb
arpl
or
icebp
shrb
pushf
and
pop
rorl
cmpsl
cwtl
push
cwtl
sub
inc
repz
test
outsl
aam
pop
rcll
stc
outsl
and
test
mov
push
std
pop
ret
pop
adc
jge
jne
aas
pop
xchg
xchg
adc
xor
jb
mov
fidivrs
gs
push
add
sbb
stos
xchg
sahf
and
cwtl
pop
icebp
xor
cmp
cld
test
xchg
pop
adc
adc
xchg
imul
hlt
fwait
je
pop
fistpl
subl
add
aad
out
xor
jbe
lods
sti
test
inc
push
ja
mov
push
lret
xchg
pop
mov
leave
cmp
add
add
xsavec
loope
dec
outsl
loop
push
in
mov
xchg
mov
aam
jnp
inc
add
sub
pop
outsl
jg
push
mov
dec
sbb
lds
mov
in
leave
in
mov
cmpsl
stc
pop
out
jnp
int
aad
out
nop
cld
pushf
aam
inc
dec
aad
daa
imulb
adc
mov
cmp
pop
pop
addr16
dec
ds
sti
leave
cli
cwtl
jns
scas
sbb
adc
and
lock
push
in
pop
cmp
or
imul
sub
push
outsl
add
adc
sbb
into
xor
out
sbb
cmpsb
xlat
sub
mov
addr16
and
push
nop
and
or
mov
and
dec
loopne
xor
and
mov
mov
inc
std
jg
sbb
fdiv
imul
add
popa
sbb
dec
lea
aaa
mov
xor
push
or
lods
or
and
aas
out
or
cwtl
dec
cld
sub
leave
sbb
mov
mov
pop
and
and
xchg
test
jns
pusha
pop
shlb
push
scas
andb
fwait
ja
xor
ror
xchg
xchg
inc
mov
repnz
adcl
cmc
cmp
cld
insb
jg
pop
fmuls
mov
jg
mov
rorl
push
je
rcrl
inc
in
jmp
push
push
gs
lods
retw
aaa
loop
xor
and
pop
jle
lret
lret
jbe
add
ja
pop
ja
cli
jb
icebp
xlat
push
inc
stos
loopne
out
dec
jae
add
mov
hlt
into
cmp
push
cmp
cmp
int3
xor
xchg
fwait
lods
cltd
xchg
inc
cmp
in
and
mov
push
cltd
xchg
jge
insb
loope
add
imul
pop
mov
sarb
push
ljmp
pop
sbbb
sbb
xchg
out
inc
push
add
sbb
and
ja
jecxz
addr16
fwait
sbb
and
xor
scas
fs
xor
dec
xchg
sbb
mov
and
cltd
add
xchg
xchg
hlt
push
xchg
cmp
and
xchg
jnp
pop
push
sbb
cmp
or
daa
ret
dec
xor
in
jl
pop
cld
dec
lret
push
shl
inc
sbb
dec
add
pop
idiv
ret
mov
stos
lods
mov
jne
push
inc
std
into
jmp
enter
or
lcall
js
xor
jb
push
pop
jl
fcoms
shll
js
outsl
cs
sbb
cs
jecxz
xchg
and
pop
arpl
sbb
add
pop
cltd
es
iret
movsl
arpl
and
xlat
pop
pop
xor
test
push
out
inc
mov
mov
outsl
sbb
and
cltd
add
mov
mov
inc
ljmp
movsl
cwtl
xchg
jecxz
imul
inc
addl
jb
mov
ss
dec
lock
add
sbb
lods
jns
push
sbbb
das
xchg
mov
cmpsl
mov
lock
orb
pop
mov
jbe
jecxz
cmp
call
sbb
lds
mov
pop
sbb
stos
xor
call
stc
cmp
jge
pop
loopne
aad
xor
aad
jmp
or
out
push
out
jl
mov
jg
adc
pop
insl
sbb
dec
pop
dec
or
push
popa
popf
or
dec
cmp
stos
bound
rclb
sub
test
jno
pop
repz
adc
jo
mov
inc
cmpxchg8b
aas
lcall
ds
cltd
pusha
xchg
cmp
push
sub
in
icebp
imul
mov
sub
push
fwait
shlb
outsb
add
cmp
inc
sbb
lcall
sbb
xor
pop
pop
cs
cmp
repz
lods
aas
sbb
or
inc
mov
insb
into
and
mov
mov
aaa
mov
mov
punpcklbw
movsb
mov
mov
cmp
loop
push
dec
xor
test
aad
and
xor
mov
cmpsb
call
mov
push
or
or
ret
jb
scas
pushf
lret
fcmovu
adc
push
fs
sub
movsb
repz
xchg
bound
mov
les
inc
mov
sarb
inc
negl
or
aam
mov
add
aad
inc
imul
and
jnp
add
cmp
shll
or
out
data16
mov
xor
adc
add
push
ja
fnsave
pop
fisubl
inc
or
jns
mov
test
mov
nop
fsubrl
lret
adc
iret
es
jg
fisubrl
imul
pop
jo
pop
mov
adc
adc
adc
jo
imul
std
xor
push
ljmp
and
cmp
aas
inc
in
push
jne
pop
sub
mov
sbb
movsl
push
in
jg
add
pop
es
inc
pop
or
sahf
xor
mov
scas
dec
ljmp
mov
movsb
flds
js
xchg
out
cmc
in
dec
cmp
mov
stc
pop
and
fmull
or
sbbb
fsubr
aaa
pop
mov
cwtl
insl
push
cmp
shl
aaa
in
call
jbe
mov
repnz
mov
xchg
imul
xor
ud2
dec
call
shlb
cmp
scas
mov
mov
test
daa
fisttpll
shrl
int3
shlb
xchg
in
sub
lahf
adc
insb
inc
or
mov
dec
inc
sahf
inc
repnz
mov
enter
and
fadd
pop
jmp
lcall
in
cli
xchg
cltd
fbstp
pop
insb
pop
lods
lods
and
pop
int
pop
push
adcl
mov
jo
orl
cmp
jbe
loop
mov
jmp
adc
dec
out
push
mov
push
movsl
lret
cs
xchg
dec
cmpsl
mov
stos
stc
jge
jg
xchg
mov
negl
loop
cli
adc
outsl
sahf
adc
movsl
shrb
mov
cmc
aam
push
enter
add
aam
insb
or
leave
sbbb
dec
fldcw
stos
dec
push
xor
mov
push
test
int
popa
push
popa
xlat
js
movsl
inc
xchg
xor
xchg
vpcmpgtb
int
xchg
scas
leave
xchg
jb
lods
ficompl
push
cwtl
mov
adc
sahf
pushf
mov
aas
dec
cs
sbb
mov
lea
fxtract
jge
add
mov
inc
xchg
sub
adc
nop
mov
and
loop
pop
sub
pop
ljmp
pop
mov
xor
das
bnd
pushf
fistpl
call
aaa
fldt
jmp
dec
jp
dec
pushf
lods
xchg
int
es
xchg
ret
pop
xchg
mov
xor
stos
mov
test
lods
or
and
xchg
inc
movsl
les
pop
jne
and
mov
add
xchg
filds
scas
cmc
rol
push
aaa
lods
lahf
stc
push
push
cmp
jo
neg
push
shrb
inc
and
mov
das
mov
test
xchg
pop
jge
sub
jmp
ret
adc
movsl
dec
push
mov
mov
leave
jo
mov
daa
xor
sbb
lret
test
jnp
jb
subb
mov
push
gs
add
jno
in
inc
mov
mov
lret
int
pop
aad
dec
jo
pop
jns
mov
mov
ret
notb
hlt
xchg
and
push
test
sbb
stos
fs
sub
lods
mov
inc
xchg
xchg
xchg
sbb
push
or
enter
mov
out
lret
pop
notl
imul
or
leave
jae
scas
mov
or
jno
int3
cmp
xchg
and
mov
fnstcw
xchg
nop
out
loopne
popf
pop
xchg
add
das
aas
cmp
xchg
inc
iret
or
lret
shrb
pop
movsl
ret
add
lds
add
popf
sub
xor
into
jecxz
outsb
sub
jmp
adc
test
inc
mov
sahf
mov
push
out
cmp
jno
stc
imul
xchg
test
outsb
ljmp
pop
lods
mov
pop
jo
lods
pop
into
loope
xor
inc
rorb
push
fwait
loopne
fmulp
jo
data16
insl
jmp
arpl
mov
jbe
mov
mov
jp
jp
xor
out
imul
push
mov
out
adc
sub
xor
adc
mov
repnz
mov
xchg
insl
ds
ja
push
jbe
fcoms
lcall
xchg
adc
cmc
cmp
cltd
pop
clc
insb
sbb
sbb
inc
or
pop
add
sbb
sbb
aad
mov
shll
std
outsb
les
push
nop
shrl
cli
jbe
or
into
push
cs
cmpsb
andb
out
or
popf
mov
add
inc
hlt
push
mov
mov
in
push
stc
addr16
ds
jns
mov
push
imul
gs
pop
mov
not
repz
das
test
xchg
add
jnp
fbld
dec
sbb
xchg
xchg
addr16
dec
jge
stc
xchg
add
inc
xor
mov
ret
add
mov
or
mov
stos
insl
sub
or
push
insb
mov
popf
pop
daa
bound
pop
call
jns
aam
adc
push
mov
dec
ret
fmull
in
roll
push
dec
add
push
fs
pop
pusha
xchg
jl
cwtl
inc
fwait
movsb
sub
inc
pop
subl
iret
out
imulb
xchg
inc
push
mov
outsl
out
xchg
and
aas
movsb
sbb
inc
lret
mov
sbbb
ret
fdivs
cwtl
mov
cld
popa
mov
loop
cmpb
pop
hlt
mov
add
push
and
daa
icebp
jne
dec
fdivrl
decl
lods
fxch
sbb
xor
push
fisttpll
mov
add
adc
ja
xchg
mov
xchg
add
pmaxsw
js
sub
xor
sbb
lock
cmp
adc
aam
fimull
push
push
mov
push
and
jno
int
aam
insb
jno
pushf
mov
insl
pushf
jb
mov
inc
sub
outsb
outsl
sbb
sub
and
push
inc
xor
push
js
sahf
shl
inc
ret
push
jo
test
mov
mov
sub
inc
mov
sub
out
sub
push
hlt
cmp
lret
push
sbb
mov
test
mov
shlb
adc
hlt
mov
fcmovb
out
add
imul
lcall
pusha
jne
sbbb
mov
outsl
data16
icebp
sbb
pop
push
rclb
cmp
insl
pop
jbe
mov
xchg
testl
push
inc
roll
pop
mov
std
adc
mov
push
xchg
jle
cmp
out
lods
leave
loope
jnp
jp
shrb
pop
pop
int3
test
pop
pop
push
push
mov
inc
enter
jne
xchg
xchg
dec
repnz
test
sarl
pop
ret
add
fnsave
xchg
mov
xorb
in
iret
cld
lods
pop
popl
loopne
sbb
inc
leave
ja
leave
cltd
nop
sarb
dec
fs
fidivl
add
cmp
lock
cmp
inc
jns
xchg
mov
mov
adc
rcll
mov
sub
pop
mov
dec
std
sub
sarl
xchg
jmp
jge
or
push
int
jo
ss
repnz
mov
or
popa
jg
lock
ret
sub
add
add
xchg
negb
pop
jno
jmp
ret
in
cli
jb
scas
xchg
nop
test
push
jecxz
loopne
divl
xchg
rcrl
inc
idivl
idiv
out
sti
bound
popa
shrl
adc
jp
cmp
xchg
inc
pop
rolb
dec
inc
sub
out
in
dec
ficoms
dec
push
or
loopne
mov
fldcw
aaa
lcall
aaa
rcrl
enter
inc
sub
xchg
das
test
sbbb
out
stos
jnp
and
xrelease
arpl
stos
call
ror
out
mov
mov
cli
pop
sbb
pop
popf
aas
out
mov
insb
mov
jns
jnp
int
push
jb
rorb
inc
les
out
cmp
push
cmp
and
stc
mov
fcompl
push
inc
and
sbbb
pop
xor
fsub
out
cmp
iret
nop
and
lea
push
and
call
ficoml
movsb
mov
adc
filds
fnstsw
xchg
add
outsl
pop
dec
pop
lret
ljmp
jmp
sbb
notl
push
ja
je
setns
mov
mov
mov
lods
push
movsl
inc
inc
push
xchg
mov
out
mov
push
xor
pop
mov
add
push
jne
enter
lods
sub
mov
cmc
outsl
leave
mov
pushf
out
and
sarb
dec
les
mov
adc
jb
mov
rclb
daa
add
nop
push
jae
aad
in
cmc
shlb
mov
adc
lock
pop
push
push
push
or
into
out
pop
mov
jno
or
mov
ss
insb
mov
shlb
cld
pop
cwtl
fdivr
cld
pop
adc
xchg
faddl
insb
enter
mov
push
xchg
and
jmp
xchg
xor
gs
nop
mov
or
test
pop
inc
popa
cli
jne
push
int
sti
xor
fs
ljmp
push
sub
xor
fldenv
out
dec
sbb
rolb
mov
insl
enter
mov
inc
aad
sub
dec
sbb
and
mov
xchg
roll
flds
mov
push
call
push
mov
out
lret
mov
aas
outsb
pop
jl
aad
inc
add
fstl
icebp
adc
scas
jnp
mov
fiadds
add
fldenv
scas
adc
xchg
and
xor
aam
pusha
data16
lcall
ljmp
sbbb
imul
or
cs
ret
pop
leave
movsb
subb
mov
icebp
fs
out
loop
cmp
mov
in
cwtd
push
dec
rclb
sub
test
or
popa
test
cmpsl
pop
sub
es
std
cmp
xlat
lret
mov
or
mov
imul
mov
inc
inc
lret
and
pop
arpl
hlt
lods
xchg
pop
cmp
dec
xchg
std
push
push
pop
pushf
stos
inc
jmp
inc
jo
sbb
xchg
pop
or
test
mov
lods
jnp
pop
fistpll
and
push
inc
icebp
xchg
popl
cmp
sbb
fbld
lods
xorb
repnz
loope
pop
lahf
mov
dec
lret
xchg
xchg
hlt
data16
pop
sbb
sbb
lret
ss
adc
mov
pop
fcmovnu
mov
je
cmpsl
icebp
adc
push
or
out
js
rep
dec
addr16
add
sldt
sub
fwait
xlat
and
dec
inc
push
mov
or
addl
xor
and
mov
mov
xor
and
stos
nop
xor
xchg
sbb
sbb
int
push
call
bound
push
add
jns
fs
dec
or
cmpl
addr16
pop
frstor
orb
cmp
test
gs
test
loopne
mov
mov
int
mov
jmp
mov
scas
pop
push
inc
sbb
mov
sub
dec
stc
imul
test
fwait
out
pop
cmp
in
call
pusha
mov
mov
test
call
mov
xor
mov
jo
inc
lock
push
and
cmpsb
repz
or
sbb
or
fs
dec
mov
out
sbb
mov
jb
movsb
inc
xchg
shrl
imul
rclb
pop
inc
sbbb
dec
push
mov
scas
testl
add
mov
test
mov
mov
aas
imul
sbb
sub
das
mulb
inc
and
xor
dec
mov
push
pop
and
jo
mov
xchg
std
cmp
cli
fwait
leave
insb
cli
sbb
lock
mov
xchg
fstpt
push
add
jp
scas
scas
stos
shrb
pop
cltd
lock
mov
inc
jmp
adc
push
cmp
sub
push
mov
les
arpl
mov
sbb
sbb
mov
adc
dec
outsl
sub
popf
fdivl
xchg
imul
shll
jns
jb
cld
and
shll
xlat
and
iret
xchg
sbb
mov
cli
push
aaa
les
jg
dec
sub
jns
fisttpll
insb
push
mov
jp
jg
jno
pop
call
mov
mov
add
dec
add
cmpsb
xor
lea
and
inc
outsb
bound
fsts
lcall
mov
fdivl
add
cmp
fcomps
dec
out
xchg
mov
shll
adc
mov
frstpm(287
jl
idivl
inc
adc
pop
loop
pop
xor
data16
cmp
inc
out
frstor
sub
bound
adcb
movsb
test
or
cmp
outsl
test
adc
dec
cmpsl
cwtl
mov
aaa
sub
outsl
xor
leave
scas
cmpsb
out
repnz
push
xchg
and
aas
inc
addr16
les
inc
xchg
inc
push
fadds
aas
cmp
fsts
mov
pop
cmpsl
popl
pushf
jbe
inc
jae
inc
push
xchg
pop
xlat
aaa
in
daa
scas
sahf
or
aam
ss
loop
pop
mov
pop
std
faddl
adc
mov
inc
and
add
xor
jl
xchg
pop
sub
push
push
pushf
movsbl
and
or
pop
movntq
rolb
mov
outsb
mov
mov
outsb
mov
inc
jo
shrb
xchg
or
fstps
xor
jge
arpl
repz
dec
subl
push
cmp
or
or
lret
std
insb
js
xchg
test
js
outsl
dec
cmpsl
out
outsl
sub
mov
sbbl
jmp
or
jecxz
fucomip
aaa
jmp
scas
imul
dec
pusha
add
sbb
xchg
pop
pop
and
fldcw
outsb
ret
shlb
outsl
andb
sub
fcmovnb
subb
aas
movsl
test
shl
in
cmp
and
insl
jno
xlat
add
dec
and
pop
stos
ss
push
mov
cmp
add
mov
fcoml
sbb
xchg
stos
stc
hlt
out
nop
aaa
mov
sbb
mov
fiadds
divb
jbe
aad
xor
mov
or
aas
mov
cltd
cs
jno
cmp
jmp
notl
push
xor
pop
pop
rorl
in
test
ja
push
out
jns
jne
ret
push
fisttpl
mov
push
fwait
jnp
adc
push
repnz
mov
xor
xor
jno
mov
in
repz
imul
adc
lds
fsubrs
addr16
dec
and
push
cmp
insl
xor
nop
popa
mov
outsl
arpl
cmpsl
mov
outsl
add
mov
jb
or
cmp
xor
xor
nop
dec
rcr
testb
or
jb
xchg
xchg
xlat
fistpl
adc
xor
cmpsb
xor
push
adc
gs
adc
nop
repnz
mov
notb
add
pusha
arpl
jbe
jo
inc
cli
fs
cltd
stos
xchg
out
lock
or
dec
push
jg
push
clc
in
addr16
jl
pop
and
dec
and
fwait
stos
aaa
shl
lock
fwait
pop
xor
jg
mov
pop
add
push
movsl
push
cmp
cld
je
pop
packsswb
filds
sarl
test
add
jne
mov
mov
add
lods
ds
stos
inc
lret
fisttps
movsb
stc
inc
inc
bound
add
and
and
pusha
dec
fbstp
push
or
push
adc
dec
lock
mov
dec
fiadds
mov
dec
or
sub
lods
xchg
inc
mov
xchg
insb
mov
jmp
jle
and
xor
test
sub
lods
sub
mov
pop
add
mov
cmc
jg
and
cmp
and
sbb
add
inc
or
xchg
jnp
push
adc
iret
jp
out
cmp
dec
add
aam
dec
pop
sub
and
imulb
push
jl
sbb
jmp
pop
fs
shlb
into
add
test
ljmp
dec
mov
add
mov
adc
stos
loop
push
xor
adc
mov
std
xchg
mov
dec
test
aaa
dec
pop
or
mov
dec
jl
mov
fstp
sub
je
xchg
push
js
mov
ret
ret
ret
pusha
pop
adc
popf
pop
outsb
les
mov
lret
pusha
stos
pop
pusha
mov
lock
adc
pop
adc
in
mov
test
ljmp
dec
movsb
adc
cmp
fcomip
loopne
out
pusha
xchg
sbb
aas
arpl
repnz
mov
or
mov
sti
jb
ljmp
out
xchg
stc
xor
add
mov
fidivl
add
jmp
or
dec
cmp
or
ljmp
dec
push
sub
lds
lea
or
leave
xchg
mov
inc
aam
int3
xchg
cmp
pop
icebp
or
add
xor
add
xor
add
mov
clc
cli
out
adc
jle
or
lods
jp
cltd
push
push
ficompl
loopne
sbb
insl
or
ss
rorl
enter
aam
jo
sbb
lock
push
rcll
sbb
cmpsl
push
lock
mov
pop
rolb
sbb
jle
mov
sbb
cwtl
mov
or
or
insl
fmull
andl
mov
or
and
fisttps
stc
cmp
pop
out
bound
pop
mov
popf
pushf
dec
outsb
or
push
imul
mov
sbb
insb
adc
jle
lods
push
push
xchg
iret
inc
ja
jecxz
insb
movsb
into
xor
sbb
movsb
addl
xor
cwtl
jns
and
mov
test
das
adc
shrb
xchg
loope
jnp
insb
mov
cmp
xor
mov
sub
sub
or
lea
in
adc
or
std
xchg
loope
pop
lods
stos
mov
mov
mov
cmp
sub
pop
inc
pop
lret
repz
rcll
pop
not
imull
mov
inc
arpl
std
int3
xor
dec
or
into
fildl
test
cmp
out
mov
adc
push
push
repnz
or
dec
push
mov
rolb
lret
inc
pushf
mov
cmp
pop
mov
mov
dec
ja
jb
arpl
or
jle
jg
sbb
jmp
push
clc
xchg
pusha
dec
arpl
xchg
push
lret
or
js
mov
test
xchg
adc
dec
jo
fdivrl
addb
xor
sub
outsl
hlt
dec
js
lret
mov
cmp
xlat
aad
mov
mov
pushf
push
mov
in
cld
cmp
arpl
inc
ss
or
pusha
icebp
dec
xchg
pop
test
xchg
sbb
and
fmull
out
in
add
fs
arpl
imul
add
mov
xchg
shrb
ss
dec
push
add
pusha
pushf
mov
sub
test
aad
pop
out
lds
mov
ss
ret
push
bound
in
xor
sti
cmc
xchg
xlat
dec
jno
xchg
add
je
xchg
push
aad
sarb
cli
sbb
popf
xchg
xchg
fs
aas
arpl
cmp
out
loop
adc
push
stos
fdivs
push
sbb
lret
xorl
shl
and
cltd
and
daa
jecxz
pop
push
inc
cmp
xchg
test
cmpb
jg
fidivs
repnz
in
cmp
xchg
insb
push
imul
fmul
fs
inc
dec
push
xor
pop
and
div
adc
cli
scas
stc
or
sarb
add
hlt
mov
nop
outsl
lcall
xchg
dec
or
dec
push
fidivrl
cmp
leave
jl
push
popa
lds
subl
jle
icebp
and
mov
sub
lahf
stos
inc
add
dec
lock
stos
push
pushf
outsb
or
pop
xchg
divb
mov
jnp
push
xchg
sbb
insb
stc
stos
loope
jae
bound
outsl
lds
cmp
in
loopne
jge
inc
shlb
bswap
inc
mov
fwait
cmp
sahf
arpl
inc
insl
outsb
or
sbb
imul
in
sbb
dec
pop
rorb
aaa
mov
shll
clc
mov
sub
xchg
mov
mov
ds
add
jb
mov
push
stos
jno
xchg
das
jno
pop
cmc
lret
xchg
adcl
push
rcrl
sahf
in
shr
bnd
and
subb
outsb
dec
pop
out
adc
out
push
cmp
cmpsl
imul
ret
inc
cmpsb
and
xchg
xor
and
dec
sti
mul
sub
ret
out
iret
push
fadd
out
test
pop
push
jecxz
js
test
int
push
inc
fldl
mov
arpl
jb
std
mov
in
pop
fcomp
add
sbb
adc
add
mov
dec
cmp
sub
mov
push
and
test
jno
add
or
sub
adc
sbb
gs
add
inc
loop
mov
push
jge
cmp
dec
jns
xchg
cmpsb
addr16
add
xor
stos
push
or
ljmp
xchg
lret
ror
push
out
stos
xor
mov
sub
pop
shr
xlat
pop
push
pop
inc
test
cmp
subb
dec
adc
dec
jnp
sbb
jmp
loopne
jecxz
fstl
mov
shll
in
into
rorl
test
push
addr16
roll
lret
jp
fiadds
cs
stos
cmpsb
cmp
adc
out
testb
popl
bound
pop
popa
pop
sub
lret
les
jae
int3
enter
fsubrl
xor
orb
mov
enter
out
lods
out
ret
pop
rol
mov
mov
mov
push
in
cmp
in
inc
aas
sub
dec
lods
add
dec
call
lahf
jo
out
pop
push
lret
outsb
push
add
lcall
fwait
sbb
mov
inc
cltd
ffree
imul
scas
cmp
mov
scas
fnstcw
push
cmp
loopne
jecxz
fildll
fbld
fstpl
cmp
sar
int
cltd
jg
addb
jge
jo
sahf
pop
fwait
sbb
dec
mov
dec
shlb
push
xor
popf
ss
ret
aas
jge
push
lods
cmc
mov
lock
cld
mov
in
cmpsb
adc
orl
mov
pop
aam
dec
inc
popf
repz
frstor
jle
and
cmp
mov
push
lcall
push
ss
shrb
add
lahf
imul
pushl
cmpsl
mov
hlt
mov
jmp
andl
xchg
mov
in
fwait
aas
pop
idivl
pop
mov
xor
fs
outsb
xchg
loope
nop
xor
std
fildl
mov
push
mov
sbb
mov
sahf
sarl
and
or
sti
stc
aam
or
mov
ror
lock
jecxz
fldcw
pop
jg
movsl
dec
mov
dec
leave
add
push
bound
cmp
sub
in
and
test
or
arpl
or
aam
push
iret
xor
jae
or
mov
mov
push
aam
lret
into
xchg
sbb
mov
sarl
stos
lds
ljmp
stos
mov
sub
data16
addr16
scas
pusha
ja
dec
and
mov
call
in
mov
pop
lods
leave
mov
mov
pop
jle
and
ret
loop
mov
movsl
jge
push
xor
xchg
push
icebp
enter
mov
jnp
int
or
dec
shrb
push
inc
addr16
jo
in
pusha
or
test
jnp
stos
ja
fcomps
inc
jo
cmp
xor
cmc
mov
sub
dec
mov
aam
cltd
lock
and
sbb
pop
push
test
mov
test
imul
jne
mov
lret
sarl
test
jmp
push
lret
call
subl
pop
cs
xchg
pusha
pop
push
cmpsb
sbb
or
dec
leave
repnz
movsb
movsl
call
cmpsb
fcmove
xor
jae
cmp
dec
std
rcrl
aad
popf
imul
and
sti
jl
mov
adc
cmpb
ds
inc
jns
push
mov
ja
cwtl
xchg
movsb
enter
sub
add
in
sti
push
pop
insb
ja
loope
shlb
push
sbb
inc
andl
mov
loope
inc
cmpsb
ljmp
dec
cmp
dec
cmp
arpl
inc
sub
test
cmp
mov
int
xor
addr16
pop
aas
insl
rcrb
sub
and
bound
cld
leave
lret
sub
ret
mov
xchg
div
jmp
mov
ja
push
rorb
enter
pop
dec
fnstsw
imul
cld
fdivs
sbb
dec
xor
cmp
ret
incb
pushf
adc
push
xchg
adc
cli
adc
loopne
js
daa
sub
pusha
sahf
push
lods
pushf
xlat
inc
fimull
and
cli
stos
sbb
nop
pop
orb
xchg
in
mov
in
sub
ljmp
test
lds
jle
lahf
aas
in
mov
aam
ljmp
or
frstor
ljmp
sbb
or
and
mov
adc
das
push
adc
loop
pop
repnz
sbb
out
mov
jl
test
xor
sub
fistpl
xor
adc
jo
nop
xor
mov
fcmovne
lock
lcall
add
stos
sbb
bound
cmp
sub
in
outsb
fsts
cmp
pop
pop
jge
mov
data16
lods
insb
fcoml
xlat
xor
add
mov
popf
xor
pushf
outsb
daa
push
xor
push
or
xchg
cld
sti
fs
xor
sbb
adc
pop
adc
sbb
mov
inc
mov
xchg
jle
sbb
dec
sbb
sub
xlat
mul
leave
adc
clc
vpunpcklbw
ret
clc
xchg
ret
add
test
mov
aaa
cli
mov
mov
xor
insl
fcmovb
push
and
jg
stos
mov
fisttpl
mov
mov
xchg
lds
adc
lock
push
and
imul
and
inc
mov
movsb
xchg
pop
outsl
rorb
inc
add
push
xchg
movsb
mov
sbb
xor
dec
ret
imul
mov
in
mov
xchg
inc
mov
test
aas
std
popf
loope
add
inc
sub
test
mov
push
outsb
add
in
movsl
stos
dec
add
cltd
gs
sub
outsb
dec
mov
xchg
lock
jns
or
mov
push
or
mov
arpl
mov
mov
mov
sub
mov
jmp
in
sbb
mov
pop
cwtl
mov
gs
mov
mov
push
xchg
mov
mov
rol
inc
icebp
pop
popf
sbb
out
mov
out
add
daa
add
jo
cmp
ljmp
mov
sub
cmpb
push
addr16
pop
sub
inc
leave
test
adc
push
xlat
pusha
js
cmp
in
jae
popf
stc
xchg
clc
push
mov
dec
or
andb
je
test
pop
cltd
pusha
cmp
xor
pushf
ss
outsb
sub
dec
outsb
jle
mov
gs
repnz
add
lock
hlt
adc
setne
mov
fdiv
mov
dec
add
out
out
push
push
xor
sub
popf
pop
sbb
sub
and
xchg
fisttps
in
fcmovu
push
cli
xor
mov
shll
pop
pop
xchg
cmc
xor
or
cltd
inc
jno
fisubrs
stc
dec
pop
jecxz
xchg
arpl
xor
jne
xor
xchg
jbe
and
clc
mov
aaa
or
and
and
jnp
pushf
aad
adc
jno
pop
jae
jle
popf
out
cmp
inc
outsb
mov
lea
scas
xor
push
ja
int
stos
push
cltd
lret
jge
mov
pop
jo
and
push
leave
negb
pop
sbb
adc
adc
int3
stos
imul
and
in
loop
mov
mov
push
fwait
adc
jae
repz
sahf
pop
and
jbe
push
sbb
mov
cld
cmp
in
enter
pop
sub
rorb
add
or
aaa
insb
or
loope
sub
jb
mov
jne
sbb
testl
shll
xor
inc
aas
stos
inc
mov
sahf
adc
push
je
adc
mov
js
stc
fs
cmp
cmp
add
lods
mov
jl
sbb
cmp
ret
push
xor
addr16
pop
sbb
adc
jg
adc
fisubs
popf
sbb
dec
jns
fmuls
nop
xchg
or
js
ret
fisubrs
inc
lods
and
dec
out
shr
outsl
out
and
cli
cli
xchg
outsl
roll
cmp
mov
or
mov
ss
shlb
push
push
adc
sbb
mov
jno
xchg
and
das
add
sub
ss
push
mov
insl
mov
sub
adcl
sbb
add
xchg
int
dec
pusha
pop
mov
mov
jecxz
aam
cmp
iret
stc
xor
out
cmp
nop
lock
mov
bound
out
xchg
loope
xchg
add
imul
loope
mov
push
jmp
cmp
incl
cmp
cmp
mov
insl
mov
push
push
dec
mov
jge
adc
test
mov
iret
dec
xor
add
push
push
sahf
sub
and
jmp
aam
les
cmp
cs
in
lahf
xor
cmpl
test
int
pop
add
popa
pop
xchg
ds
sbb
and
mov
push
mov
xor
sarl
in
mov
rcl
sbb
mov
jnp
jp
xchg
imul
repnz
int3
mov
pop
int3
inc
aaa
cmp
sti
adc
lea
and
pushf
cs
or
xor
dec
add
pop
xchg
cmp
xor
out
dec
push
jb
adc
inc
iret
and
movsl
pop
negl
xchg
shll
roll
ficoms
xorb
lret
cmp
scas
outsl
popf
cmp
sbb
xchg
adc
iret
cmpsl
pop
or
inc
enter
cmp
nop
loopne
cmpsl
ret
dec
fs
add
ror
mov
mov
add
push
mov
adc
sti
rol
ret
xor
add
pop
loop
roll
sbbl
addl
sarl
sub
mov
cmp
pop
pop
pop
pop
or
pop
mov
nop
push
lret
jnp
and
jle
adcb
clc
and
sbbb
xchg
xlat
mov
xchg
popa
bound
out
jae
inc
pop
icebp
mov
insl
sub
ret
dec
movsb
int3
dec
lods
and
stos
pop
mov
push
fdivs
mov
mov
lcall
sqrtps
mov
push
sarl
fbld
sti
mov
insb
jge
idivl
xchg
daa
push
jp
test
das
or
ret
add
inc
out
gs
push
jmp
mov
jbe
int3
fisubrs
xchg
adc
int3
std
aam
pop
add
std
ja
clc
and
lcall
lods
add
lods
mov
aas
scas
ret
adc
xchg
push
xchg
stos
jnp
sbb
jge
mov
ficompl
sub
in
adc
ficoms
outsb
loop
dec
sbb
stos
xchg
or
mov
jbe
ja
xchg
rcll
sar
and
inc
loope
fisttpll
jb
shrl
cmpb
mov
scas
add
data16
inc
xchg
add
sub
xor
cmpsb
add
fmull
add
pop
sub
test
push
ret
in
out
adc
loop
imul
les
mov
call
add
aas
rclb
add
scas
pop
aam
pop
loop
ss
cwtl
push
sub
push
test
sub
dec
out
lahf
loopne
mov
mov
clc
cmpb
xchg
xchg
idivl
leave
mov
outsl
cld
out
int
mov
je
pop
dec
pop
dec
or
sub
shll
sub
mov
sub
ret
lahf
dec
or
ret
adc
pop
insb
xchg
xlat
mov
sar
push
cs
aad
enter
sub
mov
dec
aaa
mov
mov
lods
adc
stos
sbb
adc
add
or
into
xchg
jno
mov
inc
in
js
push
aad
icebp
in
push
xchg
jo
das
cmp
mov
cmc
pop
jmp
mov
ljmp
mov
adc
pop
test
xor
out
add
jnp
mov
lcall
pop
xchg
xchg
leave
jge
test
repz
adc
lret
jg
loope
ljmp
jle
or
sahf
std
sub
mov
dec
mov
dec
push
nop
call
and
mov
rorl
mov
and
pop
orb
jno
sbb
adc
insl
repz
in
inc
inc
jmp
ds
fstps
imul
adc
fwait
and
mov
fldl
jp
ss
repz
adc
test
add
sub
inc
test
ss
or
out
cs
pop
sarl
stos
sub
mov
inc
andl
mov
jecxz
sahf
xchg
mov
cmp
inc
mov
sbbb
repnz
pushf
pop
ret
psrlq
call
dec
jns
cmpl
data16
add
daa
lods
loop
mov
sub
outsl
push
inc
and
frstor
sti
and
or
xchg
mov
mov
mov
jecxz
pop
sbb
lret
pop
icebp
jmp
lret
xchg
jne
dec
lea
adc
inc
add
jo
int3
pop
insb
lods
pop
out
push
jp
jmp
pop
add
and
std
push
insb
dec
aaa
dec
cmp
shrl
xchg
adc
je
and
in
mov
cmp
push
cwtl
fwait
repz
sbb
test
mov
pop
mov
int
and
jns
mov
fwait
pop
daa
ljmp
dec
popa
push
xchg
loop
out
imul
lahf
sti
iret
xchg
push
mov
gs
pop
jg
sub
xchg
mov
mov
pushf
add
fs
out
sbb
inc
lods
rclb
test
xchg
push
movsb
cltd
test
enter
xor
in
aad
outsb
dec
leave
mov
dec
ds
int3
dec
bsr
pop
cmp
es
js
stos
ret
mov
mov
dec
jno
push
mov
mov
push
sub
mov
mov
inc
xchg
ret
test
jnp
loope
sub
insb
pop
pop
push
inc
push
aam
rol
xchg
sti
sti
jp
push
jg
stos
push
shlb
sub
fnstenv
xchg
adc
ret
test
xor
add
lods
or
popl
jmp
lds
out
push
jl
loopne
in
add
nop
in
cmp
xchg
data16
in
and
je
push
inc
js
or
iret
inc
mov
xor
pop
xchg
xchg
stos
xor
push
xchg
lret
pop
enter
lds
push
rcl
lret
push
notl
leave
in
or
jp
insl
mov
dec
sbb
pop
stos
sub
mov
int
je
mov
iret
pop
dec
das
mov
shl
mov
pop
in
add
into
xchg
cld
outsb
pop
cld
add
scas
jno
mov
sbb
pop
ljmp
repnz
cmpsb
aam
dec
pop
pop
fisttps
sub
bound
dec
fcoms
jmp
les
call
out
mov
fistl
pop
jb
shrb
push
gs
and
loopne
add
push
mov
cmp
mov
out
push
jno
pop
fucomp
xor
jbe
jmp
iret
inc
mov
xor
das
adc
mov
lret
lea
adc
jns
bound
mov
stos
clc
push
xor
ds
jne
push
je
test
mov
imulb
lea
and
add
out
add
dec
xchg
lods
ret
sahf
movsl
mov
jnp
push
pop
mov
dec
sti
pop
mov
and
sbb
cmp
xor
xchg
pop
add
inc
add
xchg
mov
or
inc
mov
and
mov
in
and
rcrl
sub
nop
mov
lds
cwtl
mov
or
fcoml
dec
ljmp
pop
lods
mov
pop
lret
je
std
cli
pop
cmpsl
add
add
sub
xchg
repz
and
out
push
cmp
and
jns
mov
sub
cmp
adc
sbb
ret
mov
in
iret
lods
push
pusha
popf
sbb
xor
and
mov
jnp
mov
pusha
fldl
test
inc
in
adc
incb
lock
mov
pop
js
sbb
incl
and
jo
movsl
subl
fstps
mov
mov
xchg
sahf
mov
sbb
jecxz
xor
push
mov
jl
ficoms
sti
push
lret
xlat
sub
mov
fucom
icebp
inc
mov
mov
inc
xchg
lret
fs
aad
or
xor
mov
dec
mov
int3
mov
test
xchg
call
lock
mov
mov
mov
and
mov
dec
cmp
jecxz
dec
jne
dec
fxch
cwtl
lods
sahf
scas
enter
mov
jge
cs
cmp
jae
xorb
pop
mov
decl
aas
pop
cmp
out
cld
pop
popa
lods
push
repz
add
pop
cmc
pop
xchg
pop
jne
fwait
stos
pushf
sub
cmp
es
dec
iret
out
push
pop
adc
lds
arpl
sub
int
daa
adc
push
mov
je
mov
sub
jecxz
and
jno
cmpsb
or
inc
add
imul
push
push
lret
mov
push
cmp
hlt
nop
pop
insl
xchg
sbb
adc
xor
in
outsl
pushf
add
imul
mov
jne
fs
jl
pop
loop
pop
mov
inc
je
inc
xchg
out
iret
and
js
cmc
mov
xlat
or
pop
pop
stos
inc
sbb
fimuls
xchg
xchg
adc
lahf
pop
dec
repz
mov
cltd
pop
dec
test
cltd
mov
sub
hlt
in
in
nop
test
lret
repnz
insb
and
xchg
mov
movl
into
xor
xchg
ret
orl
clc
fisttpl
xor
ficomps
inc
out
inc
aad
jle
mov
mov
xor
fdivp
adc
cltd
cs
xor
push
pop
inc
fisubs
ja
lcall
pop
xor
jmp
add
or
call
inc
jae
mov
testb
or
fmuls
or
mov
pop
in
cwtl
shrl
fwait
cmp
nop
pop
lods
or
push
rep
xchg
mov
sub
sbb
pop
push
daa
inc
xchg
inc
mov
mov
pop
stos
jp
cmp
je
imul
test
cmpsb
insb
pushw
xchg
add
cmpsb
addb
pop
imul
mov
dec
data16
push
push
sbb
dec
xchg
sbb
movsb
mov
jle
sbb
sbb
rcrl
sbb
scas
std
push
fnstenv
movsb
mov
xchg
add
lock
sbb
incb
jnp
mov
mov
iret
mov
push
inc
add
ret
sahf
les
inc
push
rorl
pushf
out
push
sub
dec
push
dec
adc
adc
jle
fdivrl
mov
flds
test
sub
add
mov
ds
jo
hlt
test
add
negb
nop
inc
stos
lahf
inc
sarl
es
out
outsb
push
popa
xchg
sub
sub
clc
clc
ljmp
mov
xchg
addl
push
pop
nop
xor
lea
loopne
mov
mov
push
iret
or
xchg
subb
in
jbe
inc
in
arpl
outsb
push
mov
lods
and
and
mov
call
ja
std
into
mov
xchg
sbb
es
pushf
mov
jmp
push
mov
int3
addr16
out
dec
sbb
sbb
or
test
negb
scas
js
dec
sub
or
inc
pop
sub
xor
flds
scas
push
loope
adc
jbe
cs
hlt
xchg
jo
stos
cmp
clc
rclb
adc
mov
add
jecxz
add
lret
xor
pop
imul
mov
fistps
xor
sar
push
cld
pusha
aad
push
rorl
add
and
nop
outsb
lock
hlt
adc
cmp
pop
pop
jmp
adcb
jl
lea
fwait
lahf
push
push
or
push
std
pop
dec
ret
imul
fnstenv
arpl
push
subl
mov
fsubrs
jbe
xchg
add
xor
jg
push
jl
in
pusha
jge
aad
pusha
cli
cmp
enter
add
push
js
lods
jb
mov
ds
inc
mov
dec
call
call
jmp
clc
pop
stos
jl
sub
jne
ja
push
ljmp
cmp
ljmp
cld
lret
xchg
push
sbb
jbe
aad
add
push
xlat
andb
in
movsl
dec
xchg
jbe
testl
mov
xchg
push
jmp
xor
enter
cmp
mov
mov
rorl
fcoml
loopne
lods
repnz
aad
and
test
add
popf
outsl
xchg
orb
in
inc
fdivs
aas
add
sub
adc
mov
pushf
cmp
nop
out
or
sub
andb
push
push
jns
sarl
into
shrl
sbb
add
mov
outsl
mov
inc
mov
add
sub
push
pop
fsin
lods
jmp
mov
stos
fdivl
aaa
or
cmpl
test
cmp
mov
aad
add
mov
loopne
adcl
or
inc
sbb
mov
and
mov
adc
notb
jb
cmp
negb
repnz
jmp
dec
push
mov
jp
mov
bound
adc
out
sub
in
inc
sub
stc
push
imulb
cmp
mov
mov
inc
les
xchg
lahf
test
or
cmc
stc
pop
popf
mov
lds
push
xchg
insb
dec
mov
sbb
and
imul
cmp
or
pop
xorl
jb
stos
in
xchg
fstl
jnp
sub
mov
sbb
cltd
pusha
in
fldl
andl
mov
gs
ja
fisubs
pop
mov
mov
mov
adc
fisttpll
outsl
dec
mov
out
js
dec
pop
mov
lods
iret
cmp
add
enter
hlt
divb
imul
sahf
jb
and
sub
out
sub
iret
lret
out
ja
pop
mov
sbb
mov
shrb
dec
fdivrs
int3
mov
imul
and
mov
movsl
mov
stos
dec
stos
and
and
cmc
pop
enter
outsl
fistps
addr16
xor
in
imul
std
dec
loopne
and
mov
xlat
jecxz
xchg
roll
shl
mov
addr16
popa
lods
out
mov
iret
cmp
mov
mov
clc
hlt
pop
and
push
push
mov
sar
test
sub
repz
mov
inc
cltd
lcall
mov
mov
out
jns
outsb
xor
adc
inc
sbb
jo
jne
std
mov
jmp
or
je
xchg
in
lock
mov
in
repz
inc
addr16
divl
inc
aas
fdivs
sub
inc
js
hlt
or
xchg
pop
stc
cmp
insb
or
jmp
add
fiaddl
dec
push
jle
movsl
movsl
xor
add
outsb
test
filds
add
mov
mov
pop
or
addr16
rorb
popa
mov
sbb
xlat
add
fisubrs
sub
loop
lret
pop
sbb
jge
xchg
adc
or
pushf
cmp
lret
or
insb
adc
sbb
add
or
mov
rcrl
cmp
imul
dec
fcmove
push
subl
or
test
adc
sbb
daa
negb
daa
xor
cs
xchg
cmp
push
pushf
ret
mov
mov
fwait
loop
call
pop
pop
mov
jbe
mov
dec
out
sbb
pop
dec
xchg
sbb
stos
cmp
and
pop
dec
out
es
add
orb
jge
push
movsb
fistl
xor
lea
mov
in
push
sub
pop
mov
jge
outsl
xchg
sbb
push
outsb
and
std
das
ja
mov
fstpl
icebp
sub
andb
rcrl
mov
loop
jg
pop
cmp
js
lahf
lahf
xor
imul
inc
jbe
mov
ljmp
adc
push
mov
adc
mov
push
add
mov
mov
jae
xchg
addl
cmp
inc
jle
aas
inc
push
and
lods
es
jg
ret
dec
mov
idiv
xchg
imul
shrl
dec
int
and
fsave
xor
mov
lods
sbb
sbb
and
rorl
dec
fnstenv
cmp
lock
jg
outsb
pusha
sbb
cmpsl
imul
imul
dec
or
andl
stc
test
sub
xor
mov
jb
mov
sub
loop
fsts
mov
aam
dec
push
jbe
or
add
jb
pop
jno
sub
iret
pop
mov
shl
inc
jns
lcall
out
jae
faddl
jmp
mov
into
pop
jecxz
sarl
repnz
imul
sbb
mov
ljmp
int
data16
cmpsl
mov
ret
neg
popf
cmp
ret
xor
jle
sub
inc
adc
xchg
sbb
lret
mov
int
aam
mov
cltd
lds
sub
daa
sub
in
scas
push
int
pop
xorl
push
sub
adc
decb
push
cvtpi2ps
fyl2x
loopne
in
repnz
cmpsb
iret
in
cmp
sbb
pop
adc
jmp
mov
outsb
or
jmp
or
lds
mov
out
xor
das
cs
push
fsubs
push
sub
test
test
cmp
push
or
xorb
add
data16
sub
lret
into
push
push
rcl
cmp
subl
out
mov
repz
mov
and
push
adc
xlat
push
dec
cmc
mov
lahf
adc
lret
ljmp
fs
cmp
rorb
lcall
push
mov
inc
push
imul
test
sets
cmp
xorl
inc
jge
imul
ljmp
pusha
into
jl
idivl
js
ret
or
add
out
iret
inc
jle
cmc
and
insb
in
pop
data16
adc
pop
sbb
insb
xlat
mov
test
shll
out
pop
cmp
mov
int3
mov
add
xor
cmc
dec
xchg
loop
or
js
xlat
insl
sbb
icebp
or
xor
fcompl
stc
and
push
jl
dec
adc
andb
dec
sbb
movsl
shrl
mov
sti
lock
add
cmp
pop
jno
test
jg
mov
jecxz
mov
mov
ds
hlt
and
dec
and
ss
fcomip
pop
mov
cmpsb
fisubrs
jno
xor
movsb
dec
ficomps
fistpl
push
mov
mov
in
mov
cmc
sub
scas
xor
sub
or
in
or
adcb
jbe
movsb
lods
lods
shll
in
sbb
xchg
pop
xor
lds
leave
popa
push
cmpb
push
addb
push
jns
call
aad
sahf
inc
jae
out
cltd
mov
in
lock
xchg
rcrb
jle
push
or
mov
jecxz
arpl
adc
fwait
mov
call
mov
fisubl
incb
loopne
scas
xor
orl
pop
xchg
ljmp
and
sub
and
fs
nop
mov
mov
enter
andb
xchg
scas
insl
xchg
sbb
mov
shlb
inc
sahf
iret
adc
test
inc
out
mov
sbb
aam
push
sbb
jle
les
push
idivb
inc
incl
mov
adc
dec
lea
inc
dec
fisttpll
and
ds
idivb
push
mov
pop
mov
push
sub
andb
lea
movsb
int3
mov
mov
rcrb
inc
push
scas
in
movsl
je
jno
sub
es
pop
shll
add
pop
sbb
mov
mov
pusha
and
mov
xchg
pushf
mov
mov
pop
test
adc
mov
outsb
add
mov
jno
or
dec
cmp
mov
divl
mov
and
rclb
inc
inc
arpl
scas
pusha
or
test
or
aam
addr16
adc
imul
or
adc
clc
mov
adc
popf
adc
fdivl
mov
mov
lret
mov
push
js
xchg
mov
sbb
xchg
pop
lcall
std
sbb
sbb
inc
xchg
int
xchg
ja
dec
cmp
enter
call
adc
enter
cltd
and
pusha
push
movb
loope
shll
test
push
mov
mov
xchg
mov
jle
mov
and
sub
vsubsd
addl
push
jmp
outsl
mov
push
push
push
rorb
das
lret
push
ja
cmp
dec
xchg
pop
aas
and
xor
push
in
mov
jmp
push
pop
fiaddl
idiv
clc
jbe
fsubrl
mov
lahf
mov
dec
mov
cmp
mov
fadds
jo
mov
pop
scas
mov
into
shrb
xchg
pop
dec
add
daa
in
ljmp
imul
outsb
test
mov
lods
scas
cmc
add
enter
out
enter
scas
sarl
and
cld
les
mov
addr16
or
fimull
dec
pop
or
mov
repnz
sbb
data16
out
push
or
add
add
push
and
je
push
stos
inc
inc
arpl
xor
and
xlat
push
int
aas
push
loopne
or
ljmp
push
jno
movsl
lret
sbb
jmp
les
int3
cmp
sub
cmc
push
int3
fimuls
pop
xor
push
push
mov
push
out
inc
idivb
xor
xchg
jp
std
aaa
xchg
stos
rorb
fidivl
adc
mov
pusha
push
shll
xchg
xor
stc
push
in
out
shr
shrl
gs
rcr
jae
fidivl
repz
inc
out
shll
into
pextrw
pop
fst
xchg
cmp
fdivs
jg
ds
fidivrs
mov
pop
cmc
shld
test
add
aam
pop
cli
adc
mov
sbb
ja
testl
mov
das
jnp
shl
ljmp
in
stc
pop
cmp
aaa
mulb
xchg
push
mov
cmc
mov
inc
enter
xor
test
dec
mov
jo
adc
pop
push
mov
cmp
mov
or
xor
xchg
dec
jmp
cmp
pop
loop
push
mov
cs
mov
int3
popf
test
fdivp
fsts
add
xor
pop
stc
arpl
xchg
mov
pusha
push
std
sbbb
out
xchg
pop
fstl
lret
cmpsb
pop
push
imul
sub
lea
cmpsl
jecxz
jl
push
ja
pop
add
adcb
jns
fsubl
cmp
mull
lods
or
xor
lcall
leave
les
js
stos
mov
lret
add
mov
push
jne
xor
lret
clc
hlt
adc
or
mov
xchg
fdivp
dec
sbb
fcomps
push
loop
fdivrl
pop
mov
fstp
outsb
loope
aam
js
inc
pushf
xchg
pop
sub
jmp
sub
frstor
jns
pop
sarl
pop
cmp
mov
add
cwtl
sbb
and
jmp
lods
sti
fdivl
cltd
push
repnz
cmp
int3
or
dec
inc
mov
or
cmp
repz
mov
leave
and
bound
mov
adc
xchg
outsl
push
cmc
or
jmp
xchg
pop
dec
inc
imul
pushw
inc
stc
and
popa
xor
add
inc
mov
divb
sbb
xor
dec
mov
mov
pop
enter
pop
ja
mov
mov
nop
push
mov
arpl
mov
out
test
or
inc
dec
push
movsb
lsl
ror
ja
dec
stos
adc
push
and
jnp
jns
in
stc
arpl
dec
mov
jmp
iret
andl
jbe
rclb
add
aas
outsl
sub
jne
adc
dec
jb
push
repz
push
push
cmpsl
push
aad
xor
inc
pop
aad
outsb
push
pop
hlt
jb
pusha
inc
in
incl
cmp
iret
sub
popa
push
repnz
adc
fldt
dec
jnp
cmp
adc
mov
imul
jbe
ja
int
push
aad
out
lcall
mov
add
mov
sbb
shrl
stc
ja
adc
std
mov
and
xchg
roll
jge
mov
fsubrp
or
pop
mov
fwait
out
jnp
cmp
sub
mov
ja
fstpt
scas
fwait
dec
incb
nop
sbb
mov
add
rol
pop
mov
mulb
pop
pushf
adcb
jg
test
out
ss
cmpsb
sbb
xlat
testb
in
adc
sbb
addl
sbb
in
shr
inc
inc
pop
aam
aas
pop
pop
pusha
int3
mov
loop
in
adc
out
sbb
inc
xor
inc
in
out
push
lods
xor
push
push
add
cmpsl
push
dec
and
push
xor
scas
cmp
sbbb
jnp
xchg
loop
mov
mov
call
imul
ljmp
mov
and
lret
or
push
notb
inc
repnz
mov
loope
in
mov
sub
xchg
lea
dec
add
jno
es
enter
test
sub
add
shlb
leave
pop
jg
xchg
xlat
stos
pop
mov
outsl
loop
test
mov
inc
out
pop
addr16
jmp
insb
sub
stos
and
add
loope
cmp
stos
push
je
inc
subl
dec
ss
test
insl
popl
jne
inc
lea
xor
push
repnz
jne
mov
push
push
insb
test
repz
out
fmulp
in
mov
sbb
int3
rorb
test
aam
xlat
ljmp
xchg
jne
dec
mov
lock
adc
jo
mov
jl
push
push
jno
leave
cmp
int
ja
out
mov
dec
in
xchg
sti
jle
pusha
call
pop
decb
je
push
add
cli
jle
push
pop
push
xor
repz
jb
pop
lds
mov
or
test
xchg
mov
inc
ja
pop
and
sbb
dec
das
shrl
adc
int
pop
adc
out
inc
xor
movsb
push
mov
aaa
pop
mov
fwait
loopne
insl
mov
insb
dec
fisubrl
out
push
push
xchg
lahf
xchg
dec
sarb
add
pop
scas
nop
imul
loope
lods
ljmp
inc
lods
test
cmp
mov
xor
mov
mov
cmp
push
dec
xchg
mov
gs
sti
push
test
inc
sbb
jp
pop
lods
dec
inc
xor
mov
or
lcall
push
shlb
les
jl
fsubrl
mov
sub
test
jp
fnstcw
test
iret
cmp
cli
dec
std
jns
dec
fnstenv
or
rolb
subl
or
fs
sti
pop
mov
pop
mov
pusha
mov
and
add
int3
push
js
sbb
out
mov
int3
das
jp
jge
add
sub
lock
adc
rorb
mull
lods
mov
push
mov
mov
call
cmp
mov
mov
mov
mov
push
aam
int3
lcall
into
int3
lock
xchg
jno
rol
cmp
pop
and
cmp
test
cmp
pop
mov
lock
mov
jle
push
inc
scas
imul
ss
and
fstpt
out
iret
mov
xor
or
adc
inc
ss
dec
pop
ret
xchg
loopne
jns
shll
mov
jp
repz
xor
std
push
inc
inc
xchg
imul
pop
shll
pop
outsl
adc
into
push
les
pop
lock
fs
mov
mov
adc
lcall
cmp
jp
ja
and
cmpsb
push
xor
lret
adc
pop
cmp
mov
xchg
inc
aam
notl
cs
test
scas
test
aas
ljmp
lds
test
sub
popa
icebp
inc
pop
movsl
std
shl
int
inc
orl
add
mov
fidivrl
in
loope
push
jl
cmp
xchg
jmp
cmc
sti
stos
push
jno
and
mov
xor
mov
mov
sbb
aam
lahf
cmp
pusha
data16
or
sarb
mov
int3
fdivl
pushl
pop
sbb
mov
push
loop
hlt
add
pusha
jmp
cmp
cwtl
js
sub
lock
jle
in
cmpsl
movsl
or
jbe
in
jno
adc
or
sbb
dec
or
sub
pop
lahf
mov
xor
rcrl
mov
arpl
and
pop
arpl
pop
sbb
mov
and
lods
push
add
pinsrw
call
test
and
fwait
jg
xchg
jecxz
test
out
xchg
xor
insl
sub
xchg
inc
and
sub
rolb
loop
add
ja
mov
xchg
mov
imul
insb
out
or
sbb
scas
adc
aas
pop
xchg
push
add
jmp
jo
and
mov
setnp
dec
aad
mov
sub
popf
dec
cmpsl
in
jmp
xor
loop
dec
jecxz
loopne
aad
xchg
mov
aad
ror
scas
icebp
adc
stc
dec
inc
paddb
adc
je
ret
add
aas
fcompl
inc
sti
fs
dec
icebp
jbe
jne
adc
pushf
add
enter
xchg
andl
add
jl
mov
jg
ret
insl
sbb
sti
int3
push
add
and
daa
pop
ljmp
pop
addl
cmp
sarl
ret
bound
and
into
out
int3
fwait
aad
add
inc
dec
cmp
cmpsb
inc
xchg
fdivr
mov
lds
stc
mov
sahf
ror
inc
out
das
push
pop
xor
xchg
jno
fsubrs
clc
or
testb
push
pop
or
mov
or
add
je
fsubrl
fmul
pop
shll
test
pop
hlt
sub
or
push
ret
fcomps
mov
add
cmpsl
pop
lea
scas
fs
arpl
sbb
out
jge
inc
pop
sahf
pop
nop
mov
arpl
rcrb
push
xchg
inc
lret
iret
inc
mov
fdivrl
sbb
in
fildll
push
insb
lds
pop
mov
inc
xchg
jp
lock
push
dec
sub
int3
push
pop
lcall
pop
addr16
cmpsb
xchg
lret
fsubr
or
inc
adc
or
roll
rcll
and
pushf
std
stos
xor
jns
cs
hlt
xchg
lretw
fs
arpl
cmc
push
mov
movsb
es
les
stos
adc
sbb
sbb
idivl
aam
decl
xchg
mov
inc
in
xor
xchg
clc
std
or
roll
test
js
aaa
xchg
xor
movsl
mov
scas
test
sbb
movups
jp
mov
dec
fistpll
xchg
jnp
loope
test
rcrl
out
insl
mov
jns
test
ss
das
sub
xor
jo
push
mov
iret
out
stos
call
shll
aas
push
cwtl
or
jbe
je
mov
subb
mov
nop
sbb
cld
pop
jne
cmpsl
sbb
inc
cmp
push
in
arpl
call
mov
ss
lret
mov
adcl
fcmovbe
push
sub
adc
and
pusha
add
xchg
outsb
fstl
repz
add
bound
or
xor
stos
rolb
jb
or
in
sbb
orl
roll
test
ret
pop
push
popa
push
aam
dec
flds
cmpsl
in
xorl
aam
pop
push
dec
or
xchg
lret
test
sbb
inc
push
ja
mov
loopne
clc
add
rcrb
add
sbb
mov
je
es
nop
int3
ljmp
xor
in
outsl
jb
jl
out
adc
leave
cli
mov
pop
add
sbb
sbb
push
sub
or
add
insl
cli
sbbl
pop
sbb
sub
fs
mov
insb
orb
cwtl
insl
xor
addr16
into
movsl
gs
insl
sbb
imul
fndisi(8087
enter
xchg
mov
mov
xor
jno
stos
inc
stc
icebp
jno
or
jecxz
sub
cs
xchg
xor
sbbb
inc
sub
out
cmp
shll
jle
adc
jnp
dec
lret
xor
data16
dec
enterw
pushf
jge
pushl
shll
mov
aam
push
ret
cwtl
sub
mov
mov
xlat
dec
inc
mov
mov
inc
cli
lods
xor
shll
mov
pusha
sti
jp
je
outsb
stos
test
inc
push
add
jae
ret
xor
cmp
ja
std
push
jle
enter
add
and
stc
hlt
cld
outsl
insb
xor
push
sbb
pop
push
cmp
xchg
incb
lcall
push
rcrl
insb
xchg
addr16
xchg
inc
loop
and
xor
sub
xchg
test
lcall
xchg
sub
jne
rcrb
or
cmp
call
cwtl
loop
jne
shr
aaa
shlb
repz
faddp
push
sub
fistpll
adc
push
push
add
sub
jo
sub
gs
stos
enter
aaa
xchg
cmp
ss
add
dec
lock
mov
cmpsl
sahf
or
xchg
mov
add
xor
xchg
cmp
sub
std
mov
js
addr16
or
inc
or
mov
jle
mov
std
dec
cmp
mov
cmc
cmp
fistps
jb
push
sbb
lret
lea
inc
cmpsb
pop
sbb
test
jno
fdivl
in
scas
ja
adc
sub
les
xchg
xchg
add
push
sub
push
movsl
add
cmpsb
push
scas
xchg
aad
ja
inc
sbb
push
adc
pop
lret
dec
xchg
les
sub
mov
pop
cmpsb
inc
es
inc
inc
mov
mov
movsb
and
outsb
add
lret
jmp
cli
ret
dec
mov
lcall
adc
jns
push
jl
loopne
adc
jp,pn
into
js
adc
jbe
lahf
jecxz
idivl
addr16
addr16
adc
insl
sarb
stc
mov
pop
es
jg
jle
outsb
adc
mov
loop
cmp
xor
or
out
adc
sbb
enter
mov
je
aad
xor
outsb
pushf
lea
mov
stc
mov
data16
cwtl
loope
les
roll
clc
dec
js
pop
insl
cli
mov
jnp
mov
mov
incl
pusha
popa
cwtl
fldl
add
out
int
iret
repnz
mov
lret
jno
sbb
push
pop
insb
sub
push
inc
adc
mov
add
in
inc
mov
and
negb
sbb
shl
pop
lods
shll
xchg
sub
pop
outsl
adc
cmp
imul
xchg
xor
cmp
inc
rorl
bound
mov
lret
ja
icebp
faddl
stos
clc
cs
inc
dec
pushf
lcall
push
sahf
fadds
inc
jno
sub
das
mov
shrb
inc
mov
inc
jnp
add
and
fists
fmuls
cmpsl
push
sub
enter
in
inc
dec
and
inc
push
xchg
xor
push
add
loopne
xor
popa
cmp
dec
fstpt
je
mov
pop
bound
add
jg
xchg
das
cmpb
mov
insl
js
sbb
cmpsb
push
jge
sub
insl
xchg
in
inc
or
mov
lahf
push
xor
data16
mov
cmc
jmp
xor
lods
mov
xor
xor
bswap
fs
mov
push
addr16
ret
outsl
cmpsl
rorb
cmp
sarb
jbe
push
out
mov
leave
cld
rclb
call
or
xchg
add
cmpsl
and
je
pop
aam
outsb
popf
sbb
repnz
ret
add
push
xor
sbb
cmp
or
pop
inc
repnz
jl
mov
cmp
cmp
push
pop
mov
repnz
es
out
dec
sar
xor
or
sbbb
loop
fwait
popf
sub
adc
repnz
jg
mov
mov
sbb
repnz
sub
inc
lcall
gs
xor
pop
repz
add
fisttps
mov
jno
sbb
stc
jmp
or
fsub
push
aas
scas
xchg
call
sti
stos
loop
out
push
jp
aas
ror
xchg
jmp
adc
sbb
daa
xor
adc
push
jge
mov
rcll
rol
sahf
dec
adc
aas
int
jno
mov
and
jl
repnz
rcrb
jp
adc
lds
add
xor
cli
mov
and
jmp
sub
xchg
out
xor
or
aad
jg
nop
or
rorl
xchg
mov
test
aaa
repnz
leavew
mov
push
imul
jbe
cmp
shlb
outsl
fmulp
std
mov
mov
xor
dec
popa
mov
fcmovnbe
xor
mov
test
mov
pop
dec
inc
mov
rcll
das
inc
loopne
add
aad
lds
js
push
push
and
stc
pop
aam
push
test
sub
inc
pop
inc
test
sbb
mov
and
pop
cmpsl
sbb
cmp
dec
dec
and
add
test
dec
xor
outsb
rorl
jae
test
push
or
ficoml
inc
jbe
cli
push
addl
push
jg
enter
out
fcomip
and
js
pop
sub
cli
imul
and
ss
shll
push
xor
popf
jmp
and
imul
xor
jb
data16
add
jo
push
sbbl
cmp
sbb
test
jb
pop
inc
pop
inc
cmp
xchg
sahf
xor
lds
out
jle
loopne
adc
fildl
xchg
sbb
adc
push
in
ss
and
repz
imul
dec
add
in
loop
ret
dec
sbb
inc
mov
xor
push
inc
outsl
and
out
push
mov
bound
out
lret
adc
xor
mov
inc
ja
push
enter
add
fldt
clc
jnp
add
outsl
imul
lea
cmp
std
inc
lret
cli
ljmp
jge
in
sbb
int
test
pop
test
mov
pop
xor
mov
ja
mov
push
nop
mov
mov
ja
lds
xchg
arpl
aas
mov
xchg
adc
andb
iret
xchg
add
xor
outsb
push
leave
push
dec
rcrl
nop
mov
inc
inc
jmp
aaa
fstpl
mov
fs
divl
jge
ss
xor
in
scas
and
pop
sub
aad
inc
inc
xor
fnsave
nop
mov
inc
daa
fadd
xchg
stc
sbb
outsb
sub
fstpl
pushf
adc
icebp
cwtl
shlb
mov
imul
cmp
sti
add
mov
test
inc
jmp
arpl
ds
test
add
movsl
mov
cmp
stos
imul
fwait
mov
push
fwait
lret
xor
sbb
mov
mov
mov
es
mov
ds
ficomps
int3
xchg
lds
bound
jle
sub
scas
and
push
adc
pop
test
xchg
outsb
arpl
jp
xchg
mov
jmp
daa
js
cmpsl
mov
ljmp
xchg
sysret
ljmp
mov
out
ja
leave
mov
lret
fisubrs
lds
call
mov
adc
push
dec
sub
ret
add
xor
int
xor
fbld
jg
inc
jg
xor
mov
out
test
ret
decl
xchg
push
in
pushf
push
icebp
cmp
xchg
loope
pop
iret
enter
subb
or
insb
adc
xlat
shll
iret
inc
lahf
push
aam
je
popf
add
push
xchg
cltd
xchg
mov
pusha
xchg
mov
test
clc
dec
repz
addb
bound
xor
and
mov
cmp
inc
inc
push
jp
lret
mov
repz
shlb
nop
pop
imul
lds
or
and
cmp
push
xchg
icebp
fbld
shrb
and
pop
popf
in
push
test
xor
jecxz
jne
mov
shrb
inc
mov
lcall
arpl
pop
stos
and
lock
lods
hlt
cmp
in
mov
pop
jle
int3
add
push
mov
push
in
push
mov
adc
stos
mov
addr16
out
fs
in
ret
ret
mov
xor
sbbl
test
add
xchg
adc
xchg
jnp
push
or
pop
add
jnp
ficompl
inc
aas
inc
test
inc
cld
inc
or
xchg
sti
adc
cmp
mov
movsl
add
popa
ljmp
cmpsb
push
out
fstp
cmp
and
push
jne
sbb
scas
enter
test
pop
xor
xchg
stos
and
lods
mov
sti
and
movsl
pop
and
add
dec
mov
add
push
test
stos
pusha
scas
dec
push
push
int3
lods
lds
stc
call
push
pop
push
push
lds
pop
dec
and
jae
fidivrs
int3
add
jae
lcall
push
lahf
cs
sub
xor
das
daa
mov
push
adcl
or
std
cmp
mov
push
sti
ffree
mov
out
or
jmp
fwait
cmc
or
stos
mov
shll
clc
cli
xor
push
mov
xor
jnp
xchg
mov
nop
and
insb
in
ret
xor
mov
xchg
or
icebp
adcb
lahf
jo
push
aad
fucomi
lock
and
push
mov
cwtl
jbe
adc
out
jb
jne
xchg
jle
loop
mov
sub
xchg
rcrl
int
popf
push
and
cmp
add
mov
enter
jbe
mov
icebp
mov
pop
pop
arpl
ds
xchg
shrb
mov
lods
push
mov
je
and
shl
or
push
subb
in
shl
inc
ret
mov
adc
dec
push
repz
xor
push
sbb
into
xchg
jmp
pop
mov
xchg
ffree
mov
adc
xor
test
jmp
loopne
lret
nop
ss
ret
inc
ret
and
push
sbb
xchg
mov
out
adc
das
cld
loope
mov
hlt
test
add
bound
imull
lahf
inc
test
mov
xor
push
inc
test
stc
insb
pop
sub
fwait
sub
xchg
xor
sub
inc
lcall
mov
jns
hlt
nop
push
leave
add
lods
cmp
int
cmp
imul
sahf
hlt
mov
icebp
notb
jns
aas
mov
sub
gs
mov
jmp
pusha
icebp
cmp
ret
in
mov
mov
loope
xor
lret
cwtl
inc
add
cmpsb
shll
ret
sti
mov
outsb
ss
adc
sbb
push
lods
xchg
sahf
sbb
icebp
pushf
sti
dec
xchg
in
lea
mov
pop
leavew
insl
divb
imull
dec
sub
hlt
mov
sub
mov
cmp
mov
mov
sarb
scas
popa
adc
mov
jb
lret
lcall
jp
cs
repz
repnz
or
dec
sbb
jp
push
mull
daa
push
notl
xor
mov
in
jecxz
movsb
or
mov
pushf
rcll
jge
cmpsl
cmp
dec
cmp
sub
jae
stos
test
fldcw
add
adc
outsl
or
fs
fcomps
and
cld
push
mov
pop
dec
repnz
subl
xchg
cld
out
cmpsb
jmp
mov
push
jbe
out
push
subl
cmp
icebp
sub
lock
mov
push
xor
sbb
cmpsl
addr16
fistpll
iret
xchg
out
push
loop
inc
cmp
jge
aad
divps
bnd
testl
insb
add
int
jmp
xchg
fdivrp
stc
in
mov
add
mov
push
cltd
pushf
cmp
jo
dec
sbb
inc
jle
push
inc
outsb
pop
and
cwtl
cs
add
xorb
cld
adc
mov
push
aaa
cmp
jge
cmp
and
inc
or
dec
ljmp
or
ss
int
sbb
ret
dec
imul
dec
mov
movl
add
pop
sbb
lock
iret
inc
lods
negl
ja
push
int3
cmc
lret
dec
loope
add
add
outsl
and
jbe
push
lods
push
ret
mov
dec
jmp
int3
mov
jl
ss
jg
aaa
lock
ret
cli
push
lahf
xchg
push
cmp
mov
aad
inc
popa
imul
stos
test
leave
mov
fdivrs
pop
xchg
test
pop
cmp
jnp
mov
mov
and
pop
std
pop
cmp
mov
xor
repz
pop
pop
cli
mov
ljmp
in
mov
and
dec
out
xchg
dec
aaa
push
mov
lret
ret
cwtl
movsb
push
sub
dec
les
inc
inc
mov
mov
and
sbb
jo
push
push
cmp
adc
and
sub
into
fdivs
push
pop
and
int
jmp
sub
push
ss
fdivrl
add
xchg
pop
int
gs
adc
mov
in
pop
push
push
test
mov
push
jnp
fs
fisttpl
sarl
cmpsb
xchg
push
std
stos
dec
ljmp
mov
push
pop
push
add
lcall
xchg
mov
ss
inc
mov
cmp
cmp
mov
in
jnp
dec
sbb
pop
fstps
sbb
out
movsl
std
and
cmp
ss
push
and
sarl
int3
out
xor
out
ds
insl
jns
adc
loop
testb
ret
aas
push
sbb
pop
rep
pop
ds
inc
lods
push
sarb
cli
pop
sbb
lahf
push
mov
push
adc
add
mov
add
repnz
mov
test
lea
pushl
and
or
xchg
insl
mov
je
jg
sbb
jp
add
or
out
xchg
mov
xor
mov
add
jne
jns
dec
mov
dec
addr16
xchg
or
imul
xchg
outsb
adc
xchg
lret
sub
xor
jl
testl
mov
jge
jnp
movsb
scas
or
cmp
shlb
dec
cmp
rolb
filds
push
sub
mov
cmpsl
sbb
lret
pop
insb
xor
out
xlat
arpl
mov
pop
imul
sbb
pop
popa
lret
cli
jecxz
addr16
cwtl
push
inc
mov
or
or
inc
popa
sub
daa
mov
mov
orb
popf
in
lcall
arpl
cltd
jbe
sarl
pop
mov
cltd
and
rclb
je
rcll
int
inc
push
stos
push
rorb
mov
daa
and
and
addl
test
cmp
sahf
aas
xor
stos
rolb
call
je
sti
mov
out
adc
jp
fxch
xor
mul
imul
lret
push
das
cmp
push
arpl
fiadds
mov
xor
pop
sub
aam
mov
pop
out
sub
or
imul
adc
arpl
cmpsb
jbe
mov
sub
cmc
shl
dec
cmp
rorb
insl
sbb
arpl
jecxz
int
jg
xchg
xchg
lahf
test
test
mov
ret
push
mov
imul
xor
popa
outsb
imul
imul
loope
mov
fsubp
mov
fcoms
and
negl
cmc
imul
int3
je
jmp
cwtl
repz
add
inc
add
mov
jae
cmp
sbb
call
dec
js
push
mov
inc
arpl
enter
push
jo
inc
sbb
cli
clc
int
stos
mov
sbb
push
ficompl
hlt
sub
mov
sahf
mov
push
mov
shrl
mov
dec
jne
inc
add
sub
xchg
dec
xchg
xchg
mov
fnstcw
lret
pop
scas
cmpsb
dec
out
icebp
out
das
pop
push
pop
in
mov
iret
je
mov
das
xchg
int
inc
div
dec
bound
mov
dec
pop
xor
aaa
dec
mov
cmpsb
sbb
fildl
and
adc
test
das
or
mov
insl
mov
sbb
mov
hlt
sub
pop
stc
mov
adc
dec
fdivr
in
test
xor
mov
out
mov
pop
sbb
frstor
xchg
mov
sbb
scas
push
ret
pop
jle
shl
mov
xor
shrb
mov
ds
adcl
outsb
inc
pop
sbb
dec
cmp
dec
and
sbb
mov
mov
lods
iret
xchg
mov
jb
sub
cmp
jle
push
push
sbb
imulb
fwait
pop
dec
jns
adc
stos
test
jmp
jo
test
add
xchg
jne
lods
test
push
out
cmp
pop
inc
and
dec
lds
icebp
xor
sbb
jo
pop
dec
mov
aas
rorb
mov
clc
xchg
enter
jno
jno
fsubrl
hlt
xor
in
jno
sahf
jecxz
xor
es
mov
adc
dec
push
jno
imul
add
pop
aam
movsb
pop
sbb
mov
add
push
or
pop
and
imul
or
push
hlt
mov
sub
sbb
lahf
pusha
push
mov
jb
loop
andl
jbe
shr
iret
jp
cmp
push
test
out
add
sub
mov
or
pop
xor
xchg
add
ret
loopne
push
pop
sub
mov
arpl
jl
sub
sahf
pop
popa
out
xchg
in
aas
inc
aad
das
cmpsl
ljmp
jmp
mov
jne
call
in
add
jno
cltd
and
scas
sbbl
mov
ljmp
cmp
inc
sbb
push
sbb
call
xchg
jle
data16
jb
call
add
test
jmp
jae
in
sub
dec
pushf
cwtl
jg
iret
or
mov
jcxz
jo
mov
jne
or
mov
incl
test
jns
xor
sbb
and
jo
imul
pop
movsb
shlb
jecxz
test
mov
clc
mov
mov
pop
lahf
imulb
push
mov
inc
loope
adc
lock
imul
sbb
add
cmp
sub
sub
scas
pop
std
add
iret
push
pushf
mov
xor
test
inc
dec
test
or
dec
mov
aas
and
inc
inc
jo
ja
adc
std
cmc
inc
mov
lahf
pop
fdivl
repz
sbb
xor
and
sub
outsb
data16
nop
adc
data16
scas
and
insb
std
fdivrp
adc
lds
lods
add
loope
cld
or
mov
jecxz
loope
or
fmulp
test
cs
sub
je
jno
shlb
in
sub
jae
nop
repnz
add
loop
sbb
xor
scas
addb
pop
pop
mov
orb
or
mov
jge
test
pop
xchg
stos
jnp
push
inc
sbb
jo
cmpsb
roll
xchg
stos
push
jge
xor
mov
arpl
mov
and
std
sub
ret
or
arpl
dec
jecxz,pn
jl
add
push
pop
add
cli
in
jbe
int3
cmp
inc
test
sub
lock
sbb
loop
or
bound
lret
xchg
outsl
adc
iret
imul
out
hlt
ss
push
pop
mov
mov
sub
das
push
test
xchg
pop
xchg
icebp
sbb
ret
fdivr
xchg
xchg
mov
outsl
out
xor
sahf
inc
outsl
orb
lret
loop
adc
xchg
jge
sbb
push
sbb
inc
or
call
add
xor
sub
cmp
int
push
push
std
scas
int3
jge
mov
imul
push
lea
les
pop
popl
add
inc
roll
push
jnp
xchg
out
or
add
mov
scas
mov
push
pop
push
pop
add
push
mov
pusha
cwtl
scas
movsb
scas
hlt
cmpl
jnp
sti
mov
jmp
sub
loop
and
bound
inc
decl
hlt
notl
xchg
push
sbb
orb
addb
jp
cli
jns
pop
js
pop
movb
fimull
sti
cli
and
pop
xor
in
add
int3
mov
push
jb
add
and
int
cmpsl
jmp
inc
scas
xchg
popa
je
sti
push
jb
out
popa
fldl
les
mov
icebp
xchg
and
cmpsl
push
adc
inc
aam
aam
inc
hlt
fisttpl
stos
imul
sbb
sbb
cmp
fdivrl
icebp
fistl
pop
movsb
fsubl
in
stc
cwtl
inc
es
pop
mov
dec
aam
sub
and
out
add
jo
sub
sbb
aaa
fistl
lea
xchg
rcrl
xchg
push
jne
jae
cs
ficompl
and
pop
sbb
and
test
rorb
lods
and
jl
mov
pop
rolb
jmp
ret
pusha
popf
sub
popa
adc
push
popl
adc
add
in
xchg
in
inc
call
cmp
adc
inc
int
iret
insb
xchg
stos
jle
andb
test
movsb
push
scas
rcll
scas
aaa
jne
sub
xor
enter
mov
add
inc
mov
sbb
pop
mul
cld
cwtl
dec
imul
aam
inc
cmp
jmp
sti
lods
adc
das
lahf
mov
lock
xchg
test
sub
popa
xor
lret
cld
lods
push
adc
sub
cmpsb
mov
mov
sar
inc
pop
push
or
fnstcw
jl
push
lods
aas
sub
adc
mov
pop
in
or
fs
in
cmc
pop
mov
pop
clc
and
imul
adc
inc
mov
rol
inc
repnz
dec
or
jnp
mov
jp
xchg
divb
sbb
sti
and
push
cmpsl
add
sub
rcl
push
test
iret
outsb
test
jecxz
lds
subb
xor
inc
mov
jge
xor
push
mov
add
loopne
xchg
sbb
sbb
inc
xchg
mov
int
lds
stos
sahf
push
rclb
cld
sahf
popa
ret
shll
and
outsl
inc
daa
rclb
shlb
push
and
movsb
test
iret
dec
cmp
cmpsb
imul
loop
fcomps
sbb
and
jo
fwait
rcrl
cmp
sahf
or
fwait
cmpb
adc
dec
inc
sbb
call
and
push
adc
xor
pop
lock
mov
movsl
mov
xorb
mov
dec
mov
gs
movb
aam
mov
out
adc
cli
fildll
adc
lret
hlt
out
aad
cli
aam
repnz
push
out
sahf
mov
jge
testb
jp
sbb
dec
mov
jne
das
jle
push
scas
pop
andb
iret
or
jge
inc
loope
shlb
xor
fdivr
popl
ret
push
and
popa
inc
cmp
repz
ficomps
or
jge
mov
loop
fsts
xchg
cmc
jge
int
rorb
mov
jl
fcoms
xchg
mov
loope
push
outsl
adc
mov
repz
sub
mov
shrl
push
fnsave
sub
mov
andb
into
jmp
cs
icebp
jae
or
mov
rcll
fwait
and
aad
lods
adc
mov
vpcmpeqq
fcomps
inc
xor
push
sub
mov
cmpsb
call
mov
bound
or
or
insl
sub
mov
cs
data16
fsubs
inc
cld
andb
mov
dec
arpl
icebp
xchg
jns
add
jb
sbb
mov
inc
dec
popf
rcrl
mov
popl
pop
mov
pop
jnp
in
loop
js
sub
out
push
xchg
mov
subl
add
cmp
mov
aaa
mov
ror
js
fwait
outsl
data16
jne
dec
or
imul
aaa
jo
adc
les
rorb
xor
and
and
inc
jae
cwtl
mov
xchg
add
mov
out
jae
incb
fsubl
pop
inc
dec
mov
orl
sarb
je
nop
mov
or
cmpsb
xchg
mov
in
imul
adc
outsb
adc
and
and
dec
sub
xlat
test
in
or
fbstp
mov
cmp
push
ljmp
movsb
scas
jg
divl
lret
xor
rcll
dec
jle,pt
out
push
add
add
sub
out
gs
fwait
xor
in
jg
mov
outsb
xchg
push
adc
jmp
aad
adc
rolb
lahf
sub
pop
xor
lds
dec
inc
push
pop
jg
pushf
push
cltd
cmp
cltd
aam
in
idiv
inc
or
out
dec
mov
aaa
dec
fistpl
inc
mov
mov
mov
mov
add
fs
mov
orl
cmp
xchg
sbb
lret
xor
adc
leave
pop
mov
shlb
push
mov
loopne
pop
mov
inc
sbb
inc
add
aad
mov
js
add
ja
cmp
pop
mov
loope
sbb
or
stos
sbb
cmpsl
and
mov
xchg
push
pop
jbe,pt
scas
mov
jg
mov
lea
sub
cmp
jb
add
jg
adc
push
gs
mov
xor
sbb
ss
xchg
movsl
icebp
push
sub
fistps
les
sahf
ds
inc
and
sbb
mov
dec
dec
sub
adc
stos
ret
mov
push
inc
add
jle
hlt
rorb
push
mov
mov
jp
cmpsw
sub
lea
mov
std
or
inc
jae
lret
lea
mov
pop
loop
fiadds
pop
movb
call
out
jo
or
pop
stos
sarb
pusha
shll
outsl
pop
stc
push
sub
addr16
add
mov
or
and
movsb
outsl
mov
ds
stos
rol
outsl
add
scas
pop
out
xchg
aad
mov
in
mov
into
imul
cmp
mov
iret
cwtl
jg
or
xchg
mov
pop
cmpsb
lock
add
sub
jns
arpl
ja
cmp
dec
lods
jg
rcr
mov
push
imul
push
int
xor
and
jmp
shrl
call
lds
mov
add
les
adc
or
aaa
ljmp
sbb
rclb
hlt
add
out
sbb
lret
cmp
xor
xor
push
rorb
xchg
leave
push
push
mov
adc
and
ja
push
insb
loope
lahf
xchg
cmp
arpl
out
jp
out
xchg
push
push
dec
add
leave
xor
pop
dec
push
mov
repz
push
std
je
push
push
sub
jp
icebp
cmp
mov
push
jnp
aad
jo
outsb
jecxz
outsb
jge
jp
mov
sbb
push
add
lahf
sbb
push
shll
jmp
test
stc
mov
push
andl
lods
dec
inc
jl
sub
icebp
dec
xor
add
sahf
pop
sbb
imulb
loope
dec
fs
in
mov
and
cmpsl
loope
dec
repz
pop
and
xor
jo
mov
out
dec
pop
and
add
and
int3
fiadds
je
jmp
insb
aam
push
mulps
mov
xor
push
std
cmpsb
sub
sti
testl
or
out
or
sub
xchg
and
rcrb
leave
sub
fidivrs
out
jae
xor
xchg
or
fimull
scas
push
aad
int
in
aaa
jae
sub
or
pop
cmpsb
aas
imul
xchg
sub
fsubr
cmpb
mov
and
fld
mov
test
in
sarb
stos
xor
cli
je
or
mov
sbb
repz
out
pop
jns
cmpsl
hlt
js
fnsave
je
dec
out
mov
sub
insb
pop
xlat
push
mov
mov
rorb
push
outsb
jecxz
pop
dec
dec
push
out
mov
loopne
and
mov
mov
inc
sub
mov
out
cs
loope
mov
pusha
xchg
ljmp
cmp
xor
jae
push
push
sbb
das
mov
pop
jo
jmp
shrd
cs
push
cs
push
or
cmpsb
daa
fiadds
orb
inc
jmp
dec
aas
ffree
sub
adc
fdivs
cmp
push
into
pop
mov
std
sub
xor
sbb
shlb
mov
sub
mov
mov
shll
movsl
arpl
ret
jb
jnp
inc
cwtl
xor
push
adc
scas
mov
push
dec
lret
sar
and
fcom
rcrl
push
rorb
cltd
adc
sub
sbb
mov
out
lods
sub
cs
je
fdiv
loope
cmp
inc
inc
sti
push
inc
pop
jns
mov
push
jb
adc
mov
les
mov
push
loope
pusha
add
xchg
out
jp
pushf
out
mov
push
clc
dec
cmpsb
mov
pop
or
and
mov
jns
les
sub
pop
or
mov
adc
mov
push
cmp
fldt
test
dec
xor
jbe
or
dec
or
push
mov
es
cwtl
and
fwait
push
incb
mov
sub
cs
sub
mov
dec
jge
lret
lcall
jl
or
add
scas
mov
mov
sub
mov
fisubrs
aam
aas
loope
es
xor
dec
jae
jle
movsl
fcmove
es
in
xchg
or
stos
inc
or
sub
loop
movsl
inc
pop
xlat
fsub
movsl
int3
adc
xchg
in
ja
hlt
push
inc
notb
sahf
enter
insl
xchg
inc
rolb
adc
popf
sbb
iret
mov
jp
ret
ds
rcrb
xchg
int
add
adc
lods
fstp
xchg
lock
adc
das
xchg
and
andl
rorl
and
andb
cmp
jno
mov
in
jmp
xchg
adc
push
adc
inc
repz
insl
ret
pop
cltd
inc
out
push
lahf
xchg
mov
inc
not
fistpl
cmpsl
xor
pushf
test
das
and
pop
iret
mov
andb
sbb
mov
or
jg
ret
ficoml
adc
push
and
pop
into
int
dec
xor
mov
aaa
movsl
mov
dec
push
ret
xchg
adc
mov
pusha
mov
insb
test
test
lock
add
and
sbb
aas
je
dec
mov
push
stc
xchg
push
cld
outsl
iret
test
mov
xchg
xchg
test
jge
ja
fcompl
jbe
insl
sub
mov
and
push
sbb
xor
cltd
mov
jle
outsl
add
jg
add
insl
enter
and
or
scas
inc
push
loopne
xorl
ret
ja
inc
sarb
ficoml
lahf
mov
mov
push
ret
in
push
ss
jmp
inc
cmp
sbb
cmp
insb
xor
imulb
ja
repz
sbb
adc
pop
mov
mov
inc
enter
pop
ficoms
add
inc
js
dec
fnsave
xchg
or
jae
jle
mov
push
jo
sub
test
rol
andb
bound
cmp
mov
in
dec
xchg
xchg
cli
mov
mov
jnp
or
gs
sbb
jno
dec
cmpl
sbb
sub
arpl
shl
aas
imul
loopne
adc
arpl
movsb
mov
aaa
xchg
mov
hlt
xchg
aaa
or
insl
mov
sbb
rclb
imul
dec
lcall
fcmovu
adc
clc
mov
lods
mov
loop
cli
mov
nop
and
cld
dec
sbb
bound
lret
mov
dec
add
imul
mov
fdivrl
sub
add
mov
mov
pop
pop
ret
jecxz
mov
cltd
out
pop
iret
inc
cmp
inc
xlat
sbb
ret
jnp
jmp
ds
mov
sbb
ret
mov
test
hlt
sbb
cmp
mov
or
cmpsl
scas
mov
or
insl
xchg
pop
jb
dec
out
imul
lcall
cwtl
aad
fst
fisttpl
push
sbbb
add
dec
scas
inc
cli
pop
mov
outsb
roll
inc
mov
mov
js
inc
scas
test
or
mov
enter
inc
push
addr16
sbb
xor
mov
jecxz
adc
and
icebp
push
push
pop
push
cmp
xlat
orl
xor
xchg
jns
adc
cmp
out
notb
sahf
and
cmpl
test
xor
shll
mov
in
mov
out
sub
insl
outsb
sarl
lods
mov
mov
cmpsb
cmpsb
stos
push
in
or
mov
mov
ficompl
xchg
test
push
mov
cltd
popa
sbb
and
repnz
and
xchg
mov
loopne
mov
pop
lods
xor
dec
fsubrs
cmp
push
loopne
inc
jne
in
and
mov
inc
or
enter
dec
or
shrl
mov
or
or
test
js
pop
test
jno
repnz
ror
pop
lret
push
dec
xchg
mov
inc
test
push
mov
sbb
jbe
mov
cmp
inc
dec
push
mov
int3
jl
jnp
adc
ret
cld
pop
dec
xchg
test
lcall
repnz
add
mov
mov
mov
scas
jno
mov
xor
js
push
cmp
cld
subb
sub
test
test
pop
add
push
inc
test
fdiv
vaddpd
sti
into
test
cli
push
repnz
movsb
jmp
xchg
nop
test
mov
and
cmp
pop
mov
mov
loope
pop
add
mov
sbb
xor
dec
jle
cmp
inc
icebp
loopne
sub
daa
je
loope
pop
pop
mov
lock
and
xor
push
sub
jmp
cmp
insb
add
adc
hlt
or
test
adc
adc
in
mov
loope
xchg
push
cmpsl
sbb
inc
lret
imul
add
int
fstpl
rcrb
rcll
xlat
rolb
notl
mov
out
inc
sub
mov
xor
popf
arpl
dec
add
sub
rolb
fisubrs
pop
es
mov
mov
in
outsl
test
addl
dec
mov
leave
jbe
int
xchg
cmp
mov
hlt
add
pop
dec
dec
add
mov
cld
push
stos
pop
inc
ror
jmp
inc
xor
mov
test
lea
fsubrp
out
sar
dec
dec
imul
add
leave
xchg
xlat
add
fbld
and
pushf
aaa
mov
cmpl
sub
push
fnstcw
mov
mov
push
leave
mov
int3
xor
mov
mov
mov
sub
fcomp
icebp
mov
add
or
loope
adc
decl
pop
test
insb
jmp
orl
xor
push
cmc
rcrl
xchg
js
dec
popa
shll
nop
addr16
jb
sahf
lods
idiv
cltd
in
mov
repnz
int3
xchg
xor
xchg
inc
pushf
or
lods
or
cmp
loope
pop
pop
push
push
xchg
add
aam
sbb
shrl
inc
cs
in
outsb
xchg
pop
divl
movb
mov
push
ljmp
outsb
or
sub
and
movsl
push
push
xlat
jg
lods
jg
fistl
or
push
xor
dec
insb
insl
lret
sub
adc
stos
mov
xacquire
enter
rcrl
jb
adc
dec
arpl
icebp
add
jmp
and
adc
push
and
ret
xchg
pop
xchg
push
js
mov
dec
inc
lret
orl
pop
iret
nopl
and
fadd
sbb
dec
push
pop
mov
mov
xlat
push
outsl
mov
stc
sbb
ljmp
int3
pushf
jge
cs
fisttpll
test
enter
cmp
push
sbb
clc
jns
cmp
xchg
dec
jno
fisttpl
inc
repnz
dec
and
gs
push
pop
imull
push
mov
scas
jnp
aas
rcrb
jl
dec
je
lret
lahf
or
in
inc
fwait
out
sbb
push
add
cmp
out
popa
mov
pop
lcall
push
sti
push
lods
pop
jbe
xchg
cmp
icebp
nop
sbbl
std
jg
fnstsw
cmp
or
mov
rorl
ja
dec
pop
sti
hlt
mov
gs
mov
shlb
faddp
jnp
xor
sub
jmp
addr16
push
xchg
lahf
ror
lds
rorl
add
ds
sub
and
push
int
fs
out
dec
add
inc
or
aad
add
jnp
mov
enter
clc
or
addr16
out
mov
clc
jns
lahf
cmp
jb
jne
cmp
imul
sahf
decl
stos
in
add
nop
fwait
add
jmp
fildl
addr16
popa
sahf
push
mov
cmpsb
sbb
aam
mov
xlat
ljmp
int
lods
js
inc
scas
add
jmp
mov
roll
fsubl
iret
xorb
or
test
les
stos
jbe
push
mov
lods
daa
lds
mov
add
data16
loopne
imull
out
test
mov
xor
xchg
fsubrs
in
cs
adc
sbb
jno
test
push
inc
ja
sbb
das
or
xor
data16
mov
sbb
mov
repnz
or
inc
gs
pop
lret
sub
mov
cmpsl
pop
rorl
call
idiv
fmul
mov
push
cmpsb
ret
popf
pop
mov
dec
inc
scas
shrb
or
in
and
dec
aam
adc
push
mov
sbb
lock
add
repz
es
cmp
pop
lods
mov
xor
xchg
xchg
divl
clc
mov
ret
stos
pop
pop
ror
adc
repz
fbld
cmp
ret
sub
mulb
jns
lcall
bnd
cltd
mov
insb
dec
out
xchg
inc
arpl
in
in
mov
decl
and
ds
push
dec
sub
sbb
call
movsb
mov
push
testb
test
sbb
push
sub
fisttps
sub
loope
call
mov
push
ljmp
stos
inc
lret
lds
test
mov
sub
xlat
or
das
adc
push
or
out
pop
xor
repnz
pop
xor
pop
pop
cs
mov
loope
fwait
in
mov
out
ret
and
in
ds
and
addb
mov
popa
leave
and
push
decb
xor
xchg
mov
inc
jg
dec
cli
mov
les
mov
jge
movsb
cli
dec
pop
mov
lret
jne
les
jns
pushf
dec
int
into
aam
imul
cmp
fdiv
xchg
add
jecxz
inc
dec
addr16
out
sub
je
enter
leave
sti
mov
data16
add
xchg
outsb
jne
ret
jle
jns
clc
mov
sub
sbb
lcall
int
fmull
lock
mov
pusha
stos
xchg
cmp
lock
decb
shrl
in
fwait
in
sub
add
cmpl
jnp
jno
imul
cld
cmp
inc
divl
mov
xchg
aas
fidivl
lret
loop
jne
or
leave
lea
mov
xchg
std
adc
sub
loopne
jnp
out
lahf
xchg
sbb
and
xchg
scas
rcrl
loop
mov
lods
dec
xchg
insl
test
adc
inc
mov
test
cmp
cmp
bound
leave
xchg
xchg
pop
push
mov
mov
outsl
insb
mov
mov
test
xchg
jbe
je
xor
or
push
shll
jecxz
xchg
inc
xchg
jmp
pop
cmc
sub
dec
icebp
pop
mov
int
cwtl
sbb
cs
push
pop
dec
sub
fsubr
aam
cmpsb
lret
pop
shrb
pop
out
add
test
lret
and
mov
adc
lods
in
outsl
push
aaa
adc
add
jno
add
lods
das
jecxz
scas
jg
mov
addr16
subb
ljmp
in
movsb
out
or
mov
add
xor
pop
hlt
sbb
shrb
cmc
xor
fs
xor
enter
fists
mov
jb
addb
mov
aam
mov
adc
push
sarl
add
xor
out
jl
popa
mov
dec
fsubl
rol
aas
ret
push
lret
orl
out
lock
mov
ret
inc
mov
mov
or
jnp
push
xor
cmpb
sti
out
pop
or
mov
or
or
outsl
int3
push
pop
ljmp
pop
dec
lret
cmpsl
cmp
push
test
dec
mov
push
dec
repz
inc
xor
inc
lret
mov
pop
cmp
pushl
cmp
dec
jnp
mov
cmp
pop
lock
imul
lahf
stc
pop
mov
push
clc
outsb
xor
mov
mov
scas
je
in
cmpsl
aas
xor
push
push
cmovp
push
cmc
inc
lea
rorl
pop
xchg
leave
shl
ret
mov
andb
push
inc
data16
mov
pop
fcoms
andb
pop
int3
pop
cmp
lods
xor
les
popa
add
adc
js
dec
pop
data16
lahf
dec
inc
leave
mov
out
pop
stc
nop
sbb
and
lock
cmp
stos
fldenv
inc
int
cmp
push
jo
mov
clc
add
fimull
into
cli
dec
xor
cltd
xor
mov
jo
sbb
test
bound
out
movsb
sti
in
cmpl
jb
mov
or
push
xchg
ss
dec
arpl
aas
mov
sti
fmull
das
popl
mov
gs
push
test
mov
mov
out
movsl
mov
fiadds
dec
dec
fimuls
lods
add
clc
sbb
jbe
imul
or
rcr
sub
push
lcall
mov
xlat
xchg
inc
stc
lods
mov
cld
lods
shr
call
lock
inc
into
scas
hlt
xor
stos
jg
movsb
mov
iret
mov
fbstp
je
inc
int3
or
shlb
stc
cli
in
jae
add
mov
add
cltd
scas
jecxz
push
push
mov
sarb
mov
add
mov
daa
ss
inc
or
fildll
dec
sbb
jecxz
iret
xchg
pop
cmpsb
mov
fdivr
xchg
jl
lret
and
adc
dec
dec
cmpsb
pusha
gs
and
inc
loope
pop
inc
or
mov
mov
orl
pop
lock
push
shlb
xor
enter
jae
sbbl
push
or
add
xchg
jg
fimuls
cltd
dec
add
ljmp
push
cld
popl
js
and
int
scas
inc
out
xor
push
int3
nop
add
fldcw
in
das
mov
cmpsl
fbstp
icebp
int
xchg
mov
js
mov
icebp
or
and
pop
pop
xchg
adc
movsl
sub
popa
inc
frstor
and
pop
rorb
mov
sub
aaa
fwait
mov
jne
mov
jne
fsubl
add
gs
inc
ljmp
clc
stos
arpl
scas
dec
push
pop
rcrb
sti
imul
xor
push
das
dec
bound
shlb
push
test
stos
lods
or
mov
sub
push
rorl
rcrb
popa
in
in
cmp
xchg
in
popf
pop
shlb
fs
repz
in
call
mov
sbb
and
cmp
pushf
or
out
mov
jo
push
and
mov
call
push
cmp
push
pop
loopne
fdivs
xor
cmpsl
movsb
std
push
push
in
loopne
out
pusha
shrl
adc
add
test
int3
jbe
sub
repz
mov
dec
bound
adc
aaa
cmp
fst
sbb
inc
ss
nop
lret
mov
xchg
iret
inc
jnp
push
and
outsl
and
lahf
add
sub
popa
mov
mov
jae
sarb
sahf
jge
fcmovne
outsb
clc
pop
xchg
dec
pop
inc
in
cmp
adc
aad
dec
and
xor
nop
inc
insb
adc
mov
mov
inc
movsl
repz
movsl
sub
repz
movsb
daa
mov
pop
ret
movsb
pop
mov
cli
cmpsl
ret
xorl
arpl
adc
iret
cmpsl
pop
sbb
shrl
dec
mov
jb
mov
xlat
xor
pop
jmp
or
out
pop
add
stc
std
mov
xchg
cltd
mov
in
dec
out
add
icebp
push
outsl
mov
or
mov
shl
push
and
mov
ret
sub
shlb
jecxz
or
xchg
imul
popa
mov
scas
pop
lahf
cwtl
shrl
xchg
rcl
loopne
gs
inc
and
mov
mov
loop
pop
push
fsub
mov
sbb
xlat
or
xchg
mov
cmp
testl
mov
push
popa
outsl
xchg
push
push
cmp
and
outsb
push
lahf
repnz
cmp
push
bound
jg
mov
sti
popf
and
inc
sbb
sbb
jo
sbb
mov
or
je
cs
fcomps
xchg
push
sub
xlat
pushf
push
adc
test
aas
insb
mov
movsl
bound
fsubs
cmc
xchg
and
pusha
cmp
int3
scas
jo
xor
sarb
mov
pusha
sbb
mov
jne
cmpl
outsb
inc
push
and
out
mov
cmp
cmp
push
pusha
add
mov
test
jns
test
cmpsl
pop
aad
sub
jecxz
loop
and
lock
test
shlw
or
aas
adc
pushf
out
rorl
xchg
subl
jbe
inc
int
and
lcall
mov
stc
push
gs
mov
out
leave
jl
adc
ret
rolb
cmc
push
lock
rolb
add
ss
and
dec
bound
call
sub
xor
rorb
mov
data16
or
pop
ret
mov
lcall
ret
popf
xlat
adc
mov
cwtl
jp
out
xor
hlt
inc
inc
jle
movsl
fidivs
lret
add
push
push
cwtl
adc
outsb
nop
sub
xor
fsts
mov
dec
ret
insl
adc
or
nop
mov
outsb
cmpsb
add
add
or
data16
mov
rorb
scas
std
xorb
shl
dec
or
int3
gs
addb
lahf
int
mov
push
xor
mov
movsl
test
into
outsl
test
aaa
sub
add
sbb
bound
mov
mov
out
das
adc
jl
ljmp
or
push
inc
aad
gs
je
addr16
cmp
push
cmpsl
or
rcl
xor
jo
cmp
adc
shll
add
mov
adc
call
sti
lock
mov
inc
add
fistpll
cmp
ljmp
les
pop
psubq
call
scas
out
shll
sub
push
in
out
mov
test
dec
enter
cmp
int
cwtl
rcpps
xor
pop
ds
fcom
daa
test
cmpsl
lock
and
rcrl
mov
out
les
test
pusha
es
shrl
xchg
add
movsb
call
clc
xor
xchg
jno
loop
push
movsb
pop
jo
inc
push
jns
lahf
or
mov
lss
mov
jno
in
push
xchg
ret
repnz
push
xorl
shll
inc
arpl
into
dec
addr16
adc
out
aaa
pop
enter
test
subl
pop
xchg
aas
test
pop
inc
lret
ljmp
dec
adc
mov
jmp
push
rorb
shlb
andb
add
sub
pop
or
outsb
dec
jmp
and
ret
jecxz
bound
inc
scas
frstor
test
ss
popf
ljmp
test
imul
jg
push
les
js
stos
push
xorb
fs
fadd
rcll
dec
punpckldq
push
mov
mov
cmp
out
add
call
test
cmc
or
jmp
xor
insl
lahf
stc
or
and
insb
xchg
push
popf
inc
mov
mov
mov
pop
dec
std
mov
sub
mov
push
sbb
in
xor
cwtl
cld
or
out
xor
cmc
cmp
or
repz
shl
imul
pushf
dec
ja
cmp
mov
jbe
cmp
xchg
loope
movsb
repnz
sbb
push
shl
shlb
mov
inc
cmpsl
fmuls
ret
scas
int
in
cmp
ret
adc
std
or
sbb
lods
pop
scas
ss
out
mov
add
sbb
xchg
or
pop
fdivrl
inc
jle
sbbb
xor
cwtl
icebp
pop
in
shr
out
and
mov
xlat
cmp
sub
fistl
stc
xchg
cmp
fisttps
insl
xchg
mov
lock
dec
insl
sti
adc
pop
pop
mov
mov
xchg
test
int3
inc
jg
cs
adc
pop
loope
sbb
outsl
sub
push
arpl
pushf
or
cwtl
orl
ja
add
mov
aas
sub
add
std
mov
out
inc
add
xlat
and
push
adc
movsl
pop
cmc
frstor
fstpl
jmp
xor
mov
jg
dec
addl
idivl
test
lret
and
pop
rcl
cld
mov
test
scas
jbe
insb
sbb
sbb
std
test
cmp
out
push
mov
xchg
fs
pushf
movsl
movb
fbld
mov
adc
jo
adc
pop
adc
cltd
push
arpl
xchg
aas
mov
cmp
jb
cmp
rcr
add
jmp
adc
pop
pop
jbe
sub
pop
xor
repnz
stc
mov
aad
mov
nop
jmp
adcb
mov
sarb
and
jno
cs
inc
sbb
inc
mov
call
dec
push
jno
mov
lods
test
mov
jecxz
mov
mov
mov
pop
cmp
js
jecxz
repz
fimuls
ss
outsb
lea
push
cmp
rcll
push
jecxz
lods
cmp
push
scas
decb
cmpl
dec
incb
lahf
mov
addr16
ret
gs
out
mov
sub
or
push
fstpt
xor
push
cmp
xor
sbb
inc
ret
add
inc
ds
call
loope
mov
mov
rcll
ds
arpl
jb
jmp
push
and
mov
pop
add
xchg
imul
xchg
cli
lods
lahf
notl
dec
int
cmpb
cltd
test
sbb
cli
rorb
xchg
std
xor
and
loop
les
fbstp
addr16
packuswb
dec
mov
cmp
xor
ret
pop
xor
mov
mov
enter
rorl
inc
xchg
test
mov
sbb
adc
add
push
int
and
or
fsubrl
lea
xor
sub
xchg
fsubrs
jg
cli
lods
jnp
pop
dec
fisttpl
movsb
and
mov
int3
dec
push
outsl
push
cmp
mov
jecxz
cmp
test
cld
add
jns
cmp
aaa
or
pop
jge
pusha
stos
jno
adc
push
mov
movsl
xlat
mov
cli
fbstp
ds
test
fwait
sti
xchg
sbb
pop
and
sarb
scas
push
push
mov
in
scas
cmp
repz
dec
pusha
popa
scas
push
pop
repnz
push
and
incl
mov
lahf
lcall
or
lock
aad
or
imul
xor
mov
and
ret
push
mov
cmp
clc
fbstp
or
or
mov
dec
aaa
out
negl
pop
add
jne
jae
in
cmp
imul
pop
mov
dec
arpl
les
and
insb
jg
cmp
adc
xlat
xchg
das
les
adc
shll
popf
in
aas
outsl
cmp
rcrl
xorb
pop
ret
push
cmp
dec
cli
out
lds
xchg
xchg
and
mov
rcr
sub
push
and
sub
jnp
pop
sahf
jno
xchg
movsb
add
and
pop
push
mov
notl
mov
xchg
jnp
cld
and
dec
popf
ss
jmp
mov
lods
mov
mov
sub
inc
addl
insl
shlb
rorb
cltd
cld
fnsave
movsl
and
ret
inc
sub
cs
xor
test
stos
push
in
sarb
ror
mov
imul
aad
dec
mov
xchg
cmp
lret
andl
mov
test
fsubr
add
stos
ret
int
out
pushf
ret
lcall
out
jns
jmp
mov
pop
out
jge
cmpsl
iret
cmpb
cwtl
or
sub
dec
cmp
sbb
out
andb
int3
scas
sti
mov
mov
cmpsl
gs
sub
lret
cltd
cli
mov
cmc
fistpll
sbb
mov
push
pop
out
mov
and
inc
lods
cltd
test
pop
lods
dec
loop
pop
jge
mulb
loop
pop
xor
dec
into
mov
divl
fistps
mov
xchg
lods
sbb
cs
jecxz
subl
out
hlt
add
xchg
xchg
into
scas
dec
push
dec
xchg
rorl
iret
fiaddl
pop
sub
fwait
insl
movsl
jl
mov
cmpb
sub
aaa
xchg
cmp
fisubrl
push
cmp
jmp
shrl
in
and
jo
jecxz
inc
pop
dec
push
cltd
jg
repz
lcall
test
or
addl
pusha
jecxz
loop
insl
xchg
inc
scas
xchg
arpl
lock
pop
loopew
stos
rorl
and
adc
mov
shrl
in
dec
or
hlt
sub
adc
les
mov
inc
push
in
out
sahf
and
or
xchg
inc
sbb
push
and
lock
scas
jl
xor
jae
inc
les
cli
pushl
xor
mov
pop
sub
sahf
xor
inc
jl
enter
scas
lcall
mov
push
xor
add
arpl
loope
sahf
inc
adc
xchg
outsb
int
inc
pop
dec
into
inc
sbb
fistps
fildll
mov
and
push
lcall
lock
divb
cmpsl
sarb
ret
add
les
mov
call
xor
inc
scas
sub
shrb
pop
movsl
add
mov
jp
dec
sbb
xor
in
into
adc
mov
inc
das
scas
mov
leave
popf
xor
pop
fnsave
push
fcmovnbe
cmc
mov
xorl
add
cmp
fbld
shlb
dec
shll
les
aaa
and
dec
stc
imul
sbb
xchg
inc
sub
pushf
movsl
loope
pop
stc
test
shl
pop
adc
jge
or
in
lret
add
rcrb
pop
out
mov
cltd
fwait
ret
out
popf
cmp
inc
mov
mov
into
push
and
or
push
mov
aaa
push
xor
or
arpl
inc
mov
jno
mov
dec
pushf
dec
inc
and
aas
xchg
ftst
jne
sub
cmp
negl
mov
ret
cmp
mov
dec
mov
in
pop
xchg
pop
push
repnz
sub
adc
testb
lock
insl
jge
jmp
mov
rorl
lods
mov
pop
int3
insl
mov
sbb
mov
imul
mov
repz
divb
cmp
test
mov
gs
rcr
push
movsb
enter
jmp
les
call
repnz
fsubl
sbb
mov
aam
sbb
adc
adc
outsl
jb
scas
pop
outsl
sub
mov
stc
push
loopne
inc
aas
ficomps
sub
shl
jae
pop
jg
dec
imul
pop
push
mov
test
cmp
add
imul
push
in
jno
pop
add
cs
test
pop
mov
test
lods
inc
jg
popa
jg
ss
dec
loope
iret
cltd
lcall
out
in
fstl
imull
mov
adc
add
arpl
sbb
andl
or
sub
movb
mov
jns
mov
mov
pop
xor
jns
pop
sbb
addl
inc
and
je
rcrl
dec
js
hlt
mov
outsl
aaa
cwtl
or
rcll
outsb
std
in
mov
sbb
sbb
in
scas
inc
pop
clc
js
out
hlt
cli
sbb
mov
mov
insl
push
xor
mov
xchg
ds
repz
pusha
mov
cmp
jno
push
mov
sti
dec
xor
mov
fdivrs
out
and
ds
addr16
mov
test
aam
dec
cs
in
addb
jno
adcl
das
jg
inc
data16
inc
sti
adc
inc
pop
inc
pop
lods
adc
xchg
cmpsl
dec
mov
push
jo
sbb
std
dec
ss
jns
mov
or
adc
pop
pusha
push
mov
testl
leave
add
enter
xchg
cltd
stc
jecxz
jne
loop
mov
leave
test
stos
clc
mov
je
jb
test
xchg
lods
loope
inc
dec
push
inc
loopne
in
jl
jb
loop
dec
jl
push
mov
aas
add
mov
sbb
pop
push
push
xor
add
pop
jmp
xchg
aam
popf
fbld
stos
movsb
fs
jmp
xchg
add
or
out
in
ja
dec
xlat
fdivrl
test
add
call
and
jl
dec
adc
jmp
xor
cltd
nop
mov
lret
add
push
movsl
xor
test
adc
lods
mov
inc
rcll
inc
xchg
jb
push
test
mov
mov
cltd
insb
out
lahf
jnp
inc
loope
adc
jp
push
fstp
add
shll
cmp
adc
xchg
sbb
comiss
or
mov
mov
adc
popa
lret
hlt
leave
pop
push
cmc
xchg
add
test
mov
or
push
sub
fiadds
inc
adc
inc
notb
mov
or
mov
dec
out
add
mov
mov
add
aam
popa
das
add
sub
jecxz
mov
dec
std
mov
lods
push
repnz
xchg
pop
sbb
inc
xchg
adc
je
mov
and
jge
in
imul
cld
aad
mov
mov
cmp
dec
fisttpll
sub
call
movsl
xchg
mov
cld
rcl
mov
cmp
ja
sub
ret
mov
ret
popa
ffree
mov
popa
loope
nop
mov
lret
mov
cmp
push
add
mov
imul
xchg
or
dec
pop
test
ficoms
jl
loop
sti
push
fwait
icebp
add
pop
adc
bnd
xor
inc
mov
test
arpl
and
xorl
stc
int
leave
outsb
pop
and
and
es
into
outsl
fnstcw
dec
ficomps
imul
fists
xchg
jno
or
icebp
into
je
xor
ret
mov
bound
scas
sub
ret
fisttps
mov
push
dec
lahf
cld
xlat
xchg
add
mov
gs
not
push
insb
push
inc
or
cmpsb
sub
loope
cmp
int3
cli
mov
adc
shlb
jae
pushf
cmp
push
ljmp
mov
pop
lea
inc
mov
ret
aad
fsubrs
cwtl
push
pop
mul
or
push
dec
pushl
pop
sbb
jmp
jg
lods
ret
mov
orb
sbb
insb
push
inc
call
repnz
xchg
sub
int3
and
lods
mov
dec
cmpsb
popa
sub
add
out
incl
lret
out
js
out
mov
repz
int3
or
cmpsl
movsb
push
insb
es
and
clc
nop
into
dec
icebp
int3
decb
dec
data16
lahf
push
adc
lcall
mov
push
sti
enter
xchg
adc
push
insl
pop
add
ret
pop
stos
lret
inc
pop
jo
imul
lock
bound
pop
scas
xchg
mov
dec
scas
ljmp
fildl
pop
daa
jb
jg
mov
or
xchg
mov
inc
out
xchg
pop
popf
mov
movsb
mov
mov
mov
stc
sti
add
rcll
movsb
aad
push
jmp
ffreep
sbb
inc
dec
out
lret
adc
gs
testb
js
xchg
in
loopne
subl
outsb
sub
nop
push
xchg
aas
xor
mov
jno
xor
pop
inc
out
xlat
aaa
fadds
jns
ljmp
dec
push
or
into
mov
push
or
mov
shll
mov
jl
adc
inc
pop
xchg
call
mov
arpl
add
add
or
mov
test
mov
push
ljmp
out
cmpsl
cs
stos
jmp
clc
movsb
dec
fldt
enter
test
pop
aaa
loope
dec
out
xor
mov
mov
push
out
dec
lods
test
inc
mov
push
add
inc
push
jnp
mov
lea
or
rorl
mov
add
mov
lods
je
add
loope
pop
andl
xor
push
xor
pop
ret
aad
pop
xchg
dec
in
in
aaa
pop
sub
cmp
xor
jl
mov
rorb
xor
outsl
mov
jg
sub
pop
pushf
dec
gs
test
and
icebp
xor
outsl
fwait
ret
inc
xor
pushf
lret
mov
out
incb
jp
xchg
xchg
adc
push
bound
lcall
loopne
adc
arpl
or
mov
jmp
adcl
cmp
lret
negb
cld
fwait
imul
jle
mov
mov
sahf
mov
aam
lcall
bound
mov
jg
cmpsb
push
mov
pop
loop
mov
in
xchg
lds
adc
inc
jnp
mov
xchg
pop
or
mov
insb
adc
aad
jp
inc
ret
push
push
jmp
mov
or
mov
mov
fmul
in
push
cmp
xorb
xchg
xor
shlb
lods
dec
sbb
and
fisubl
mov
mov
push
int
jns
nop
jno
xor
jae
mov
inc
push
stos
movsb
ss
test
es
sti
jge
test
call
cmpsl
mov
sub
scas
out
outsl
test
mov
mov
lahf
ds
push
inc
pusha
push
push
xor
cmpsl
idivb
mov
sbb
sub
inc
frstor
lea
push
sub
inc
inc
and
pop
dec
sbb
cwtl
push
push
out
in
fisubrs
dec
mov
into
test
fistps
xor
stos
js
dec
aaa
dec
dec
sti
sar
pop
inc
mov
lret
sub
mov
mov
push
dec
out
daa
push
push
and
mov
dec
pop
pop
push
mov
jecxz
or
aam
push
test
mov
sbb
cmpsl
sbb
push
jb
dec
fimuls
mov
scas
adc
mov
pop
lret
vorps
cltd
ja
insb
pop
jns
into
push
and
movsl
addr16
je
mov
in
stos
sti
mov
psubusw
call
sti
pop
cmc
mov
push
cmp
bound
lret
iret
pop
dec
ss
in
aas
fistps
sarb
inc
mov
jno
popa
pop
in
mov
in
or
sahf
mov
jbe
xchg
fbld
mov
std
lods
or
in
fnsave
inc
cmp
cmpsb
mov
js
sarb
dec
into
mov
fsub
leavew
jmp
leave
lods
je
adc
stos
aaa
rol
mov
das
and
jecxz
pushf
pop
mov
loope
cli
inc
sahf
test
push
adc
dec
insb
fistl
mov
popl
cld
scas
loop
pushf
cwtl
and
ficompl
icebp
xor
test
fsubrp
dec
sti
push
cld
jno,pt
jo
add
sub
lods
scas
test
inc
xor
fsubrs
ret
jnp
inc
xor
ljmp
adc
pop
inc
add
and
addr16
test
js
inc
incl
or
xor
add
cmp
pop
mov
repnz
mov
pop
pop
aam
out
fdivrs
into
loope
mov
add
cmc
jle
outsb
call
es
dec
lret
cltd
pop
sbb
in
ds
xlat
cmp
dec
int
add
mov
repnz
dec
stos
xchg
push
mov
test
sbbb
outsb
cltd
fbld
adc
sub
push
ret
sahf
inc
or
repnz
scas
outsl
sub
adc
push
pushf
pop
test
or
and
xor
sbb
dec
rcrb
push
test
hlt
decb
test
mov
jnp
mov
push
adc
int
fnstsw
mov
push
faddl
push
bound
hlt
adc
gs
out
push
movsb
mov
cltd
insl
or
mov
mov
jo
sbb
insl
add
addb
add
cwtl
shlb
hlt
in
jle
pop
push
inc
mov
add
push
mov
and
incl
push
pusha
xchg
repnz
or
inc
es
xchg
jbe
sub
dec
push
insl
add
icebp
sarb
dec
xchg
adc
jnp
mov
mov
dec
adc
sub
sub
loopne
push
xchg
insb
lret
pushf
popa
and
cmp
add
out
cli
mov
pop
mov
ja
rcr
imul
pop
mov
sbb
rclb
rol
xchg
andl
dec
test
mov
push
sahf
shr
arpl
sarb
in
pop
cmp
outsl
push
pusha
sub
mov
movsb
add
sti
mov
in
andl
pop
pop
sbb
insl
mov
stc
out
push
dec
inc
and
jmp
sar
adc
insb
cmp
or
aam
xchg
mov
push
sub
sti
or
push
out
cltd
xchg
data16
lods
pop
pop
and
mov
dec
fwait
pop
push
add
mov
sbb
fs
mov
xchg
xchg
add
lea
xchg
call
add
fstl
xchg
out
aas
ja
fldl
xor
std
pop
cmp
out
push
or
or
mov
les
jne
sbb
xchg
cwtl
ljmp
mov
sub
pushf
mov
xchg
or
dec
ja
cmc
addl
xor
aas
mov
mov
sub
jno
idivl
xchg
lret
ds
pop
pusha
mov
test
insl
sbb
fidivrl
ret
jno
lret
enter
dec
pusha
xor
mov
push
add
sbb
icebp
int
xchg
out
mov
jns
jb
pop
mov
push
pop
fidivs
mov
xchg
sahf
mov
fwait
fwait
jnp
ret
sbb
dec
stos
jl
out
pushf
lods
scas
call
add
adc
cmp
rcll
outsl
dec
ficoml
or
movsb
mov
sbb
jge
rolw
dec
adc
mov
jge
or
jmp
sub
mov
insl
testb
cmc
in
pusha
pop
mov
lock
data16
mov
pop
xlat
pop
lcall
mov
xchg
mov
mov
mov
mov
xor
sub
in
decb
xchg
out
add
push
jl
jmp
out
pop
sbb
in
mov
xchg
popa
mov
fdivl
dec
dec
lock
cli
insb
jmp
hlt
jbe
imul
rcrl
fisubl
or
outsb
push
out
andb
pop
adc
or
stc
add
sbb
dec
push
fisubs
xchg
jbe
bound
js
in
mov
out
mov
pop
leave
jg
mov
loopne
dec
bswap
lds
inc
mov
and
and
pop
daa
jnp
pop
movl
out
pop
cmp
pop
arpl
lcall
jno
or
test
pop
inc
out
push
inc
aaa
push
lds
fs
jae
cwtl
pop
lret
push
imul
cltd
pop
and
adc
insb
in
xor
dec
dec
lock
test
or
pushl
mov
pop
sbb
inc
fs
mov
mov
mov
adc
add
push
mov
shrl
scas
movsl
repz
jl
int3
jbe
jl
rorb
pop
in
mov
dec
aas
add
jbe
test
mov
add
dec
push
in
fdivrl
cmp
xchg
movsl
push
mov
push
dec
mov
or
stos
in
out
outsb
cmp
cmp
jb
icebp
das
adc
xchg
jmp
xchg
nop
adc
mov
adc
xor
lcall
stc
sbb
loope
divb
lret
scas
shrb
loop
mov
xchg
das
push
jns
push
out
jmp
mov
iret
psubw
push
sbbb
or
push
enter
iret
outsl
xchg
cwtl
lret
jmp
roll
xchg
push
rcrl
rolb
sub
sbb
pop
outsl
popf
xchg
inc
jl
xchg
scas
push
jp
xlat
dec
lcall
je
xor
ds
out
ficoms
aas
gs
aas
ljmp
lahf
fwait
and
or
lret
mov
push
in
adc
pop
test
mov
int3
jg
sub
movl
std
cs
jb
mov
add
mov
cmp
xchg
adc
lahf
mov
aam
mov
pop
fcomps
pusha
daa
xor
push
jno
dec
pop
lahf
add
shrb
jae
xchg
cmp
mov
cmpsb
xchg
push
lret
incl
js
sbb
rorb
adc
ret
sub
sub
cmpsb
insl
lret
outsl
mov
mov
or
cmp
lcall
mov
and
push
nop
lret
sub
adc
andl
xchg
xchg
movsl
test
and
pop
jecxz
jecxz
push
or
shll
shll
cmovo
je
mov
push
push
lret
pop
rcrb
outsb
sub
xchg
mov
std
sahf
push
push
mov
inc
cmp
push
push
fidivrs
mov
in
int3
push
mov
fsubrs
out
mov
pop
jb
call
iret
enter
rcll
sbb
xchg
call
xchg
mov
and
lock
sub
and
loop
push
adc
mov
outsl
jb
xor
and
imul
jns
mov
sarb
add
sub
push
push
mov
xor
and
pushl
addr16
mov
cld
js
cmp
cmovbe
movsb
lret
jmp
xchg
popa
mov
adc
into
pop
xchg
iret
sbb
cld
push
addr16
mov
mov
insb
pop
cmpl
mov
in
mov
lret
repnz
mov
lock
push
ret
jl
sbb
add
icebp
mov
xor
call
movsl
jg
push
pop
and
mov
push
cmp
pop
das
lcall
mov
adc
pop
push
insb
iret
mov
pop
lea
insb
fdiv
xchg
sar
ret
mov
cmp
gs
xor
add
jp
daa
data16
psrld
xor
nop
and
test
aam
mov
dec
push
sub
testb
test
pop
dec
repz
inc
cmp
sbb
adc
adc
divb
in
push
jbe
decb
fwait
out
push
daa
xchg
push
sub
xchg
mov
cli
xchg
jne
aas
dec
rol
cmpl
aaa
into
push
jno
pop
mov
add
mov
pop
pop
or
mov
inc
leave
pushf
test
jp
pop
outsl
adc
push
stc
jg
pop
into
dec
testb
or
daa
jmp
ja
lock
in
hlt
jmp
dec
mov
lods
es
pop
dec
js
xlat
sbb
in
and
xchg
or
je
push
mov
inc
popl
xor
mov
lret
out
ret
notb
cmpsb
popf
mov
in
cmc
push
fs
pushf
fnstcw
scas
test
add
sti
aam
xchg
negl
gs
call
rorb
xlat
enter
cwtl
inc
imull
jg
lea
psubw
cmp
add
sub
mov
scas
fiadds
push
popfw
stc
cmpsl
xchg
bound
cmp
in
imul
mov
or
aad
sub
mov
sbb
jg
test
outsb
rol
or
fisttpll
mov
repz
xchg
add
outsl
call
addr16
xchg
fstps
shrl
lock
cmpb
sahf
popf
push
pop
cmc
mov
push
mov
gs
mov
mov
dec
and
sub
push
mov
addr16
inc
je
out
xchg
mov
int
jg
out
out
enter
or
movsl
enter
xor
push
fistl
sbb
mov
cmp
fistps
push
lret
xor
cmpsl
idivb
imul
pop
jmp
hlt
ds
mov
rorb
or
imull
inc
dec
jno,pt
pop
mov
or
stos
mov
inc
inc
cs
mov
in
addl
aas
loop
xor
xor
adc
mov
mov
stos
inc
add
add
jb
int
jmp
icebp
movsl
sub
dec
jmp
test
fistpll
push
pop
add
stos
icebp
mov
test
lcall
mov
xchg
push
idivb
aad
rolb
xlat
notb
js
frstor
sbb
cltd
movsb
out
push
sub
in
sahf
int
in
mov
xor
sub
or
mov
fimuls
push
out
mov
cmpl
jae
jbe
jno
loop
shl
cmp
mov
pop
fmul
xchg
add
xchg
push
sbb
ret
cs
inc
lret
sti
out
lret
xor
sti
into
pop
in
addl
xchg
xchg
push
xor
in
adc
jle
das
insb
mov
mov
sub
or
xor
adc
pop
jg
rcll
jmp
std
xchg
mov
lods
repnz
add
int3
imul
jge
xchg
movsl
dec
sarb
pop
iret
adc
push
or
outsb
jmp
movsl
scas
mov
movsb
or
xchg
pusha
mov
gs
mov
shll
push
rcr
ljmp
sub
insb
fdivl
shrb
push
cmp
or
mov
dec
outsb
fisubs
pop
jno
loop
xchg
inc
in
scas
lock
das
mov
das
jmp
jo
and
mov
aas
btl
pushf
pop
mov
add
xchg
fcmovnb
cmpsl
inc
sbb
dec
outsl
lods
mov
popa
shrl
or
fisttps
mov
jmp
sti
jp
aas
and
xchg
movsl
cmp
or
push
outsb
adc
and
dec
popa
in
cmp
cltd
xchg
mov
lods
hlt
xor
mov
xor
jno
inc
cmpsl
in
jno
sub
fbstp
pop
xor
jg
push
lcall
mulb
xchg
inc
or
aad
enter
movsl
pop
sbb
and
pop
rcll
pop
stos
loope
adc
mov
iret
adc
movsl
mov
mov
cld
xchg
jge
insl
repnz
fwait
or
shlb
dec
xor
inc
push
out
or
mov
and
sub
mov
sahf
add
out
cwtl
mov
lds
mov
inc
or
add
pop
mov
sub
cwtl
mov
leave
pusha
outsb
pushf
cli
mov
fnstenv
sub
test
data16
jg
dec
gs
test
bound
adc
jne
divl
inc
int3
mov
js
in
pop
dec
daa
xchg
in
test
xchg
test
les
cli
out
std
out
and
cwtl
sbb
mov
jp
mov
test
pusha
pop
add
jne
xchg
sar
inc
push
sarb
loope
push
or
xchg
jmp
mov
jbe
adc
mov
clc
ss
out
test
subl
loope
divb
xor
xchg
out
and
lods
push
subb
in
push
test
cltd
pushf
push
addr16
bound
and
mov
les
in
and
mov
mov
sbb
fwait
fistps
sbb
push
mov
sti
sbb
popf
pop
inc
mov
mov
push
in
movsl
mov
sbb
add
or
xor
mov
add
js
inc
pop
ret
fwait
add
loop
fs
mov
ja
repz
sbb
aad
and
lock
push
push
les
mov
test
or
push
ror
mov
sub
fucomi
cltd
fnstsw
pop
adc
int
cmpsb
int
xchg
xor
adc
dec
jmp
clc
clc
xlat
xchg
cmp
cmp
mov
repz
leave
scas
dec
cmp
or
pop
lret
fimull
pop
lock
enter
ret
or
shlb
fwait
jecxz
push
icebp
aad
and
outsb
pusha
test
xlat
mov
xor
lods
repz
jno
lea
das
jg
hlt
mov
stos
or
dec
lods
cwtl
jbe
into
adc
cld
gs
stc
jp
mov
test
fisubrl
inc
daa
dec
xchg
cld
gs
notl
aad
mov
mov
xchg
dec
add
pop
add
ja
movsb
imul
dec
cmpl
sarl
test
mov
lds
push
aas
scas
outsb
out
ret
fistl
mov
divl
loopne
add
mov
dec
pop
movsl
mov
fwait
adc
stos
fwait
cmp
les
jo
cmp
xchg
xchg
lcall
mov
jmp
stos
xor
ss
fdivrp
push
arpl
nop
insb
jmp
lret
movsb
sti
addr16
cltd
mov
sbb
dec
aam
or
std
xor
jbe,pn
xor
test
lret
lcall
pop
pop
cmp
stc
fildll
xor
in
push
imul
mov
mov
xchg
lcall
aad
jne
xchg
jno
mov
gs
movsl
repnz
xchg
jae
jg
push
lock
push
pop
xor
jecxz
ds
xchg
mov
loop
flds
and
repz
stos
in
dec
cmc
aaa
out
les
add
xchg
test
insb
test
nop
pop
dec
sbb
jo
aam
lret
shr
pusha
push
ret
sbb
imul
or
pop
inc
push
add
loop
pushf
dec
int
xchg
jo
sub
out
xor
dec
aaa
sub
dec
dec
push
push
fsts
ficoms
movsl
xlat
add
stos
push
stos
dec
push
orl
adc
mov
in
jg
les
pushf
adcb
xor
iret
sub
lcall
test
scas
xlat
jns
push
xor
cld
out
ss
xchg
nop
jno
lret
fs
sub
cmp
sbb
incb
test
push
or
xor
incl
inc
shlb
test
add
test
fs
incb
addr16
add
push
mov
push
roll
push
mov
sub
sub
xchg
add
js
dec
jl
sbb
les
lea
push
lret
fcoms
imul
cwtl
popa
subb
jns
lahf
out
cvtps2pi
addb
das
or
insl
aam
icebp
mov
inc
int3
cmp
shrb
cmpsl
mov
add
push
movsb
sbb
mov
in
jae
addb
cs
loop
adc
arpl
xchg
decl
test
sub
or
jbe
mov
popa
mov
pusha
add
jb
notl
jp
cmp
jne
cmp
push
pushf
ja
mov
sti
jmp
gs
jle
cmp
popf
pop
jle
sbb
daa
mov
jmp
fs
flds
outsl
mov
shll
lds
push
fsub
sub
mov
pusha
mov
loopne
push
incb
es
rolb
repz
ss
pushl
roll
xchg
outsb
and
xlat
pop
push
adc
inc
and
lds
adc
lgs
shll
sub
jg
cmp
sub
fs
add
push
push
scas
test
daa
pop
add
xchg
xchg
xor
fmul
movsl
mov
cld
pmaddwd
pop
mov
repz
pop
and
stos
pusha
jno
std
arpl
ret
jg
adc
mov
ud1
lea
mov
and
sub
out
es
pop
xchg
dec
push
pop
add
fistpl
sti
or
sahf
stc
nop
push
dec
dec
fcoms
inc
rorb
aad
jb
pop
cs
inc
mov
mov
cmp
adcb
and
adc
lret
repz
xor
scas
lret
test
call
arpl
cmpb
lret
xchg
add
push
rcll
xchg
jle
jle
hlt
sub
mov
dec
loopne
add
lods
cmp
jnp
in
addr16
xor
lods
pop
fstcw
aas
rol
enter
lret
dec
pop
mov
xor
aad
sbb
insb
nop
pop
int3
fs
dec
dec
jl
stos
cmp
data16
enter
cmp
mov
push
add
call
push
add
or
push
cmp
sbb
xor
and
mov
inc
ja
movsb
jp
jo
mov
mov
sub
cmp
mov
inc
movsl
add
imul
jnp
jmp
adc
jnp
iret
cmp
xchg
loop
mov
movsl
imul
mov
leave
pop
jns
pop
popf
cld
dec
fidivrl
dec
adc
adc
and
faddl
adc
test
mov
dec
lahf
aad
adc
pop
jp
std
pushf
pop
sbb
movsb
xchg
or
inc
inc
add
push
cmc
cltd
push
ss
jp
xchg
jae
push
stc
inc
inc
std
repz
int
and
pop
xchg
xchg
add
unpckhps
push
push
bound
insl
jno
xchg
scas
dec
push
cmp
and
xchg
mov
out
popa
aaa
mov
xor
out
and
arpl
repz
in
jne
cltd
movsl
mov
cmpsb
xlat
adc
inc
fcom
repnz
sbb
pop
rolb
jb
cmp
or
popa
dec
pop
dec
mov
xor
adc
jge
sub
adc
sub
add
fucom
fmull
leave
xchg
push
hlt
mov
cmp
lock
mov
inc
and
add
push
cmp
push
xchg
adc
cmpsb
push
xor
jl
in
jp
pop
fwait
inc
mov
add
xchg
shr
ss
out
jl
daa
js
pop
and
sbb
xor
xchg
mov
aad
jno
push
ja
mov
mov
inc
inc
fldenv
and
pop
mov
xchg
lock
pushf
ficoms
jge
sahf
lret
aas
dec
rcrl
mov
sbb
cwtl
idivl
xor
mov
rcrl
cmp
or
stos
inc
in
iret
fidivs
sub
mov
divb
scas
or
ss
test
dec
movsl
or
leave
pop
arpl
imul
mov
ljmp
and
or
mov
popa
mov
loopne
jnp
inc
call
dec
aaa
xor
loop
sub
push
inc
fidivs
xor
xlat
jg
inc
int
and
mov
pop
inc
popf
ds
push
inc
imul
xchg
mov
adcl
inc
shr
adc
jb
mov
scas
cld
repnz
cwtl
fldcw
mov
push
fldenv
mov
mov
lret
test
iret
jns
mov
xchg
movsl
fs
mov
idivl
in
repz
push
fadds
mov
fidivrl
mov
jne
dec
into
mov
inc
popa
xor
xor
orl
jbe
fsubrl
cmc
in
mov
push
les
fistl
xor
fucomp
fsubs
add
push
inc
pop
adc
outsb
cmp
into
movsl
mov
arpl
push
fs
jae
mov
pop
pushw
xchg
sbb
adc
xchg
add
popa
in
rorl
or
out
adc
mov
outsl
push
push
cmc
mov
daa
notb
sub
jmp
or
dec
fsubl
push
pop
jg
xchg
jno
cmc
dec
mov
dec
jmp
add
test
sbb
xor
xor
xchg
add
pop
iret
cmpsb
xor
jmp
xor
cltd
js
iret
sbb
out
sub
dec
es
pop
add
es
fidivl
and
out
pusha
ljmp
dec
and
mov
out
jnp
and
cmp
sub
mov
call
xchg
or
jge
or
fildll
mov
push
pop
dec
dec
push
or
test
xchg
add
inc
stos
sbb
or
lahf
in
insb
mov
aad
addr16
std
sbb
or
mov
push
push
sbb
inc
stos
cs
movsl
pop
add
imul
sarl
add
sub
in
inc
ss
adc
and
imul
jno
xor
clc
jmp
pushf
stos
scas
roll
cwtl
test
cmp
push
into
lods
or
jle
or
push
adc
add
test
pop
nop
sbb
mov
jns
jl
jae
mov
int
rorb
pop
mov
xchg
bound
imul
sbb
lea
loopne
or
pop
call
ss
mov
scas
dec
and
and
xchg
adc
jg
mov
sub
cld
push
outsb
test
inc
out
movsb
cltd
fdiv
fiadds
mov
mov
mov
jmp
fstps
cmovb
stos
pop
scas
fdivp
shlb
das
movl
jp
sar
and
jo
push
jae
jbe
and
icebp
cmp
popa
or
shl
lcall
test
mov
push
enter
loope
dec
or
xor
cmp
addr16
mov
xchg
orb
mov
fistps
sub
fmul
out
mov
mov
and
dec
mov
cld
lcall
lahf
mov
or
test
jp
adc
ss
stos
aas
add
push
ds
jnp
cs
mov
aas
xchg
sub
scas
add
fisttpll
fucomp
mov
divl
movsl
push
ljmp
flds
dec
push
ds
sbb
ret
aam
adc
movsl
int
popf
inc
rcl
outsb
sub
xor
das
inc
sarl
ficomps
add
out
xor
stos
sbb
mov
push
cltd
xor
dec
jg
mov
daa
mov
sbb
les
test
mov
sahf
hlt
dec
sbb
outsl
bound
push
push
xor
and
fcmovnbe
adc
mov
ret
xor
loope
dec
pusha
or
inc
cli
dec
fisttps
push
inc
lahf
or
mov
lods
repz
pop
lea
mov
mov
jle
jbe
adc
scas
xlat
inc
add
out
and
cmpsl
pushf
mov
adc
out
mov
and
or
lds
pop
imul
cmp
pusha
lea
xor
add
push
mov
clc
push
into
pop
or
pop
sti
pusha
outsb
and
nop
cmp
rcr
sti
stos
mov
popf
lret
pop
and
rcl
xlat
movsb
sbb
fldenv
pop
inc
mov
inc
scas
bound
jmp
jns
ja
jae
jecxz
inc
add
dec
flds
or
cltd
rcl
add
lock
lock
stc
sbb
adc
cmpsb
fs
in
and
inc
hlt
into
dec
orb
xor
jmp
gs
xor
das
mov
push
into
add
pop
and
iret
int3
pushf
and
mov
jb
xor
cld
push
data16
pop
outsl
adc
jno
mov
add
ljmp
sbbb
adcb
insl
inc
mov
dec
inc
mov
lret
aad
sub
stc
in
in
pop
mov
xor
in
fldenv
jns
dec
negb
mov
mov
and
test
adc
rorb
fcompl
std
and
aam
xor
mov
dec
fwait
ds
dec
sbb
sub
dec
add
out
or
cli
xchg
cmpsb
cs
jbe
cmp
pushl
cmpsl
mov
addr16
cmp
cmpsb
xchg
xor
xchg
mov
test
sahf
clc
test
dec
rdrand
test
mov
pop
jno
outsb
loop
push
jmp
and
push
imulb
mov
or
dec
repz
pop
sbb
pop
add
add
add
push
mov
inc
add
addr16
xchg
fwait
mov
pop
bound
push
sub
insb
addr16
test
ss
jmp
add
outsl
ret
pushf
dec
movsl
push
ss
cs
inc
cmp
adc
loopne
test
mov
inc
inc
scas
xchg
or
std
cmpl
add
jnp
push
daa
push
iret
push
xor
stos
inc
lods
cmp
shlb
dec
add
in
inc
ret
enter
cmc
adc
insb
push
mov
ljmp
leave
in
mov
dec
mov
sahf
jg
mov
cmp
push
cli
push
cltd
sbb
adcl
repz
sbb
cltd
out
pushw
test
in
sub
cmpsb
cmp
or
lods
sub
in
cmpsl
mov
add
and
add
mov
aam
or
roll
ljmp
inc
gs
mov
sbb
mov
fisubl
mov
roll
inc
jp
mov
pop
loope
inc
iret
or
xor
cmpsb
cltd
sub
and
pop
jmp
sub
dec
sbb
lods
leave
loopne
sarl
clc
sti
pusha
sbb
popf
idivl
mov
cmp
cmp
sbb
cli
mov
push
and
ret
enter
xchg
add
mov
mov
sub
pop
cltd
test
or
inc
mov
adcl
dec
out
adc
out
out
or
shl
insl
jge
cmp
cwtl
cmc
or
xchg
cld
inc
xor
stos
dec
push
xchg
dec
lret
gs
xchg
sbbb
sub
add
mov
std
stos
and
push
inc
pushf
mov
fdivl
dec
dec
out
inc
pop
out
lds
inc
push
push
leave
mov
lock
xor
jno
cli
int
pop
pop
cmp
push
cmpsl
test
fnstsw
jb
mov
fwait
outsb
mov
push
xlat
lcall
add
lds
loop
add
movsb
sub
inc
mov
stos
fistl
push
in
pushf
out
jno
mov
mov
stos
add
push
mov
dec
insb
fwait
pushf
push
movsl
pop
inc
lahf
inc
je
push
jp
insl
je
cld
and
push
push
push
int3
sbb
dec
enter
imul
adc
mov
jp
xorl
insb
test
js
out
rolb
and
std
lods
inc
or
je
imul
push
dec
inc
fdivrs
test
pop
add
push
lods
clc
pop
addr16
mov
pop
mov
mov
add
icebp
fisubs
sarb
add
xchg
int
xchg
pop
add
xchg
ljmp
or
or
ljmp
into
jae
or
dec
sub
xchg
insl
or
add
dec
daa
mov
aaa
mov
inc
inc
sarb
and
test
jl
movl
pop
mov
or
sbb
adc
mov
addr16
out
and
out
and
xor
in
cld
mov
jno
fcomps
xchg
loopne
mov
fidivrl
push
cmpsb
xor
sbb
loopw
sub
jp
daa
or
add
ret
push
insl
push
or
mov
mov
fisttpll
pop
push
fmuls
int
jp
enter
popf
mov
or
sbb
in
cmpsl
adc
pop
ret
imul
push
fs
xorb
pop
pushf
push
mov
push
cs
scas
sbb
cmc
sbb
icebp
pop
xor
sbb
lret
add
call
jp
cs
mov
shll
add
out
xchg
push
call
fwait
adc
pop
xchg
cmp
sub
xorb
xor
mov
inc
mov
jnp
in
das
insb
push
andl
pop
outsl
int3
mov
xchg
pop
int3
hlt
out
test
mov
add
adc
cmp
insb
lods
std
xor
sbb
mov
adc
retw
sub
loopne
sahf
aam
pop
jb
test
jno
enter
or
push
mov
ffreep
call
add
jne
inc
shrl
push
dec
jnp
push
sbb
call
imul
mov
mov
xor
ror
jge
pop
in
lcall
cmp
push
and
sbb
sbb
lret
mov
lods
xchg
push
and
and
lock
mov
rol
jle
adc
pmovmskb
scas
adc
movsb
imul
push
xchg
add
cmpsb
sbb
sub
cmpb
bnd
inc
adc
add
fnop
popa
pop
mov
adc
jbe
push
iret
cli
fsubrs
clc
push
out
cmp
imul
leave
xorl
movhps
and
push
aaa
fistl
xchg
call
into
and
clc
fmul
push
cmp
jno
add
mov
stos
sbb
lret
sar
pop
lahf
sbb
pushf
movsb
das
lods
loope
pushf
repz
std
sahf
push
int3
cmp
movsl
xor
push
cmp
ds
sbb
movsl
data16
cmp
or
test
sbb
fnstcw
inc
rcrl
test
push
dec
std
sbbb
outsb
shll
movsb
dec
test
mov
les
cvtps2pd
out
xchg
sbb
xchg
rorl
sar
pop
loope
ficompl
and
fwait
in
push
or
jle
dec
add
loope
xor
mov
aad
mov
xchg
sbb
clc
mov
mov
dec
adc
test
or
cmp
xchg
xchg
dec
add
xchg
in
push
or
adc
sarb
sbb
xchg
loope
stos
shl
jecxz
pop
and
sbb
loope
in
push
jbe
cld
pusha
lret
scas
mov
in
add
clc
pop
test
lods
sbb
push
movsl
push
call
cmp
or
mov
and
xchg
lds
into
dec
inc
pop
or
xlat
sbb
aam
ret
popf
and
stos
adc
cld
push
sbb
lahf
aaa
aaa
fwait
repnz
or
sub
sti
test
daa
mov
ljmp
cmp
pop
sti
jle
out
add
jne
fldenv
mov
hlt
in
in
ja
icebp
fldl
cmp
push
cmp
popf
push
les
jae
cmpsb
or
sub
js
xchg
xchg
sbb
rcll
sub
cmpsb
mov
dec
add
mov
cld
aad
call
and
adc
push
push
and
pop
dec
repz
ss
jge
mov
mov
ljmp
lods
sarl
mov
test
dec
jnp
pushf
movsb
outsb
aas
pop
out
imul
sub
add
outsb
mov
faddl
push
cmp
pushl
push
and
scas
orl
fdivrp
jb
sbb
jle
imul
add
lods
pop
jne
mov
mov
fld
cmp
push
cmpsl
ret
daa
xor
or
adc
lea
jns
scas
popa
pop
out
insb
mov
and
push
cmp
dec
add
add
ds
push
imul
out
stos
sbb
sbb
clc
mov
jle
addr16
je
adc
mov
into
out
movsb
mov
xchg
pop
or
roll
and
mov
pop
aas
xchg
mov
jb
cmp
dec
mov
push
iret
out
shll
fadd
pusha
loope
std
mov
inc
fcoms
fldl2e
test
push
cs
sbb
push
sarb
jmp
fwait
into
bound
and
add
xor
adc
popf
dec
mov
push
stos
orl
pusha
push
push
xchg
enter
dec
pushf
arpl
int
xchg
out
pop
out
fsubs
jo
lahf
dec
aam
dec
jp
mov
das
sti
and
and
stos
test
xor
xor
sbb
nop
mov
ljmp
xor
xlat
adc
es
cmc
cmp
cli
pop
cli
test
cmpsl
lahf
push
fdivrs
adc
insb
lock
mov
test
imul
in
dec
add
aaa
outsb
fists
adc
pop
aas
mov
push
xor
icebp
jbe
xor
mov
sub
jmp
aas
aaa
cmp
fs
clc
pushf
popa
and
pushf
or
call
xchg
sub
pop
adc
and
pop
sub
aad
aam
sbb
sbb
fsubp
cmp
stos
call
mov
cmpl
ficoml
dec
ret
inc
jg
testl
scas
mov
int
and
cmp
gs
aad
test
xor
arpl
push
xor
jmp
enter
jno
insl
or
xchg
imul
test
fs
rorb
test
mov
dec
and
pop
outsb
shlb
dec
dec
dec
push
out
mov
loop
xchg
repnz
mov
jne
ret
mov
inc
lea
rolb
ljmp
das
shll
in
popf
sub
insl
bound
xchg
or
dec
mov
sbb
int
ffreep
testl
mov
add
jnp
pop
daa
xchg
cmp
cmp
adc
lss
push
xor
jno
shlb
addr16
xor
sbb
inc
push
adc
and
out
inc
mov
mov
test
cmp
sub
fisttpl
out
jae
or
xorb
jmp
data16
mov
push
xchg
loopne
adc
adc
shrl
sbb
icebp
push
xor
lds
loopne
dec
negl
mov
movsl
shrb
rclb
je
loope
add
into
test
mov
inc
je
call
lea
adc
mov
mov
jmp
jecxz
mov
fdivs
leave
popa
data16
aas
jno
jbe
adc
shlb
stos
mov
pop
clc
std
sub
ror
cmp
mov
xchg
dec
jmp
push
mov
shll
pop
imul
pop
mov
add
push
push
repnz
lret
hlt
pusha
lcall
inc
inc
mov
cmpsl
cmpsb
inc
xchg
cmp
pop
fisubs
xorps
mov
cmp
add
mov
neg
push
push
or
js
inc
xchg
dec
jnp
arpl
or
loop
and
mov
push
sti
inc
fistl
lcall
call
xchg
or
lea
cmp
mov
fcmovnbe
shlb
mov
sbb
fdivrp
xor
xchg
sbb
popf
stos
inc
and
cmp
enter
mov
push
sti
aad
in
mov
fdivp
enter
insb
imul
jecxz
inc
push
roll
sub
adc
ss
push
dec
sbb
mov
mov
mov
sbb
add
pop
xchg
scas
and
adc
jg
insl
and
pusha
xlat
imul
dec
ficomps
out
outsl
cmp
aam
dec
cwtl
mov
or
aad
loop
dec
cmpsb
mov
lea
aas
dec
add
and
xchg
ja
test
push
cld
roll
sbb
adc
xor
jmp
leave
mov
popf
les
fdiv
or
ret
cltd
shrb
and
mov
imul
mov
pop
xchg
add
push
jo
notb
add
push
es
xchg
shlb
out
or
call
ljmp
shrb
sar
arpl
cmp
mov
xorl
cwtl
out
sbb
mov
mov
pop
fisttpll
lea
inc
outsb
or
xorl
dec
mov
adc
lds
jg
arpl
sbb
test
jo
pop
jmp
cmpsb
cmp
or
shrl
pop
clc
sbb
jne
pop
xchg
outsb
sbb
mov
aam
mov
pop
clc
push
iret
aaa
dec
fcmovb
lods
aam
xor
cwtl
jmp
inc
mov
mov
out
shll
jle
fwait
divl
std
jge
jnp
xchg
push
aam
outsb
pop
aas
std
dec
sarb
lods
mov
ret
xlat
adc
sub
fisttps
ret
cwtl
in
aaa
cmp
out
dec
ljmp
arpl
shl
xor
cmp
adc
test
adc
xchg
push
fsub
push
xchg
outsl
xor
arpl
cmp
movsb
mov
cld
jns
dec
cmpl
rcll
lods
test
and
stos
pop
fnstsw
leave
mov
add
or
cmp
add
push
fdivrl
adc
sub
xor
sti
pushf
mov
push
xchg
lea
in
stos
jle
fcoml
jae
addr16
mov
sub
sarl
scas
mov
popa
dec
push
movsl
pop
jge
mov
outsl
movsl
into
repz
loope
jno
out
xchg
adc
scas
dec
sub
daa
iret
in
push
and
xor
jmp
and
cltd
dec
mov
adc
mov
fnstcw
call
dec
sub
je
push
ljmp
scas
test
stos
sbb
mov
lcall
ja
addr16
sub
mov
jle
clc
lea
test
push
cmc
aaa
mov
shl
iret
mov
out
imul
pusha
loopne
rolb
or
aaa
iret
cs
fld1
loope
adc
lcall
jg
aas
movsb
mov
je
and
mov
xchg
pop
repnz
mov
sub
jecxz
inc
mov
adc
pop
in
mov
dec
xlat
push
test
int
pavgw
mov
sub
push
jmp
testl
push
or
fcompl
es
add
mov
fwait
lcall
pop
push
lods
fs
pop
je
push
or
popa
jns
push
fsub
bound
pusha
scas
icebp
rolb
xor
adc
jne
mov
inc
stos
xchg
ret
fucomip
out
pop
shlb
mov
push
add
test
add
mov
cld
sbb
mov
mov
int
aam
jl
mov
add
sbb
mov
leave
add
ficoms
add
push
rcrb
out
push
jno
push
xchg
adc
mov
jo
dec
and
data16
outsl
push
insb
imul
xchg
cmpsb
xchg
cmpsl
incb
inc
mov
or
lret
fidivs
inc
pop
sub
adc
sub
cmpsl
loope
sahf
addb
es
add
mov
popf
xchg
stc
in
jns
mov
inc
and
addr16
sub
jle
aam
imul
dec
jg
subb
loop
adc
in
dec
aaa
push
test
cmp
sbb
cvtdq2ps
xchg
outsl
jp,pn
movsb
pusha
ds
aaa
and
and
dec
xor
ror
xchg
push
add
pop
push
push
dec
int3
add
sub
inc
sbbl
aaa
sub
insb
cmp
mov
cltd
push
scas
xchg
insb
push
push
mov
ret
xchg
out
pop
imulb
push
pop
xchg
divb
mov
nop
add
fmuls
cmp
lret
cli
sbb
jp
mov
loop
jmp
fisttps
or
inc
ficomps
movsb
pop
loop
mov
imul
fs
sar
jmp
mov
jo
or
xor
fwait
aas
out
jecxz
add
in
imul
or
jp
inc
lcall
jne
notl
cmp
pushf
pusha
mov
sub
adc
das
mov
dec
fs
mov
and
out
insb
pop
jle
mov
outsb
sbb
push
mov
fldenv
mov
in
dec
movsl
push
lcall
scas
xlat
in
mov
push
jl
je
add
clc
add
add
data16
out
push
fadds
aam
shll
aaa
push
int
js
cmpsb
push
rclb
sub
xchg
das
mov
aaa
jno
fbstp
pop
in
cmp
insl
mov
inc
xchg
sbb
push
inc
stc
inc
mov
adc
lock
jge
stc
popf
loope
in
xor
mov
inc
aam
inc
or
stos
jno
push
call
cld
vpshuflw
test
in
shl
jp
mov
xor
jbe
sub
inc
rcr
in
push
imul
insl
cmp
mov
in
adc
xlat
sti
ja
es
imul
sbb
lahf
jb
jle
pop
ret
hlt
ret
mov
dec
mov
mov
jecxz
mov
scas
sbb
xchg
and
fdivr
pop
shl
pop
out
jnp
or
int
cmpl
mov
std
sbb
aam
pop
pusha
or
dec
push
stos
stos
mov
lock
jbe
sbb
xchg
xchg
repz
in
test
dec
push
inc
imul
inc
call
jne
daa
push
hlt
jo
adc
std
into
test
pop
mov
pop
pop
cmp
insl
mov
das
xchg
push
popf
rorb
push
and
jle
out
and
stc
lret
into
lahf
jno
fcmovu
cltd
popa
or
dec
mov
ficompl
sbb
test
jmp
lcall
arpl
mov
jecxz
xor
inc
mov
jns
and
cltd
les
scas
and
inc
xor
mov
lods
into
into
loop
loop
mov
in
pusha
movsl
inc
dec
incb
leave
and
add
mov
cmpsb
leave
push
adc
and
aas
inc
jecxz
in
mov
mov
xchg
mov
and
test
dec
add
push
faddl
jle
jge
mov
pop
jae
sub
push
cmp
pop
add
mov
ljmp
jecxz
testl
inc
push
push
lods
mov
out
fsubrl
lods
jno
clc
jbe
aam
adcl
gs
and
adc
popl
jae
call
pop
popf
stos
xacquire
sbb
sti
jbe
fidivs
xor
jmp
or
insb
inc
ret
sbb
or
es
jns
sub
dec
cmp
fstpl
inc
enter
mov
jl
push
fisubrl
in
int
xchg
fld
sub
fidivs
subb
in
mov
daa
das
sbb
push
in
insb
or
int
mov
xchg
hlt
stc
add
cltd
sub
xchg
cs
cmpsl
mov
cmp
call
add
fldcw
jge
pop
fcomp
push
popf
roll
std
jle
ja
stos
xor
shll
push
dec
shlb
xor
mov
mov
mov
push
loope
fbstp
mov
pop
sbb
sub
xor
and
push
dec
mov
mov
sahf
pop
imul
cli
jno
scas
sbb
xor
insb
ljmp
mov
cmp
popa
xlat
mov
sub
xor
fpatan
ja
das
test
fs
sbb
push
pusha
adc
push
adc
fsubrl
ljmp
in
lds
lods
jecxz
add
xor
ret
loope
loop
loope
mov
inc
push
adc
mov
imul
out
inc
in
xchg
adc
pop
adc
sub
out
popf
adc
enter
jge
fsts
arpl
xor
sub
xchg
lea
jmp
jno
cmpsb
jae
cmp
ficomps
outsb
inc
ret
mov
mov
aam
xorl
mov
lret
cs
push
mov
inc
inc
in
jnp
add
mov
loop
cmc
lods
xchg
mov
push
pop
movsl
clc
stos
and
scas
movnti
push
bswap
hlt
repnz
pop
sahf
pop
mov
cmp
mov
add
cmp
pop
divb
call
stos
lods
push
fildl
pop
scas
inc
imul
adc
mov
mov
arpl
pop
adcb
xor
ss
int3
pop
popf
pop
push
mov
aam
adcl
bound
addr16
mov
jns
mov
mov
aad
add
push
dec
inc
push
cmp
popa
push
push
out
ss
xor
mov
repnz
movsb
repz
jmp
pushf
lcall
ss
xor
dec
imul
add
xor
xor
scas
out
xor
and
out
pop
js
push
sub
add
mov
mov
push
cmp
dec
testb
cmpsb
cmp
mov
sub
mov
xchg
mov
js
mov
addr16
jmp
mov
ret
add
jb
sbb
cmp
jle
cltd
dec
imul
in
and
hlt
popf
fnstenv
outsb
jb
xchg
push
pop
or
mov
jecxz
sti
sbbl
pop
add
mov
imul
inc
inc
dec
mov
dec
dec
adc
mov
repz
in
push
je
loope
mov
cli
jmp
ror
dec
mov
cmp
leave
add
rcll
mov
or
jl
mov
mov
xorb
jo
sub
xor
in
sub
mov
xchg
cltd
decb
out
cltd
jno
rol
loop
enter
and
not
dec
jl
jbe
in
out
test
pop
mov
sub
and
pop
jo
mov
andb
dec
mov
sub
rorb
cmp
les
pop
sbb
xchg
and
mov
fwait
idiv
insb
sub
aas
and
cmp
and
jmp
add
mov
mov
xor
and
into
sbb
loop
repnz
test
or
cwtl
pop
jnp
loopne
xchg
movsb
sub
xchg
cmpsb
mov
ret
pop
push
xchg
repz
lahf
lcall
xor
fisubs
arpl
sub
out
and
fstpt
and
andl
pop
imul
aas
and
push
lock
add
cmc
loop
dec
xchg
add
ljmp
pop
ja
add
xor
je
cs
mov
sub
xor
mov
imul
cmp
icebp
ds
sub
enter
mov
arpl
or
xchg
mov
adc
sub
mov
or
rcrb
stos
fwait
ja
out
sub
dec
push
repnz
push
sbb
push
jmp
sub
sbb
pop
push
cmp
popa
jmp
outsl
insl
and
inc
push
and
lret
outsl
inc
add
leave
int
shl
push
imul
jle
ds
xchg
and
dec
sub
pop
bound
stos
pusha
inc
xchg
dec
das
sub
pop
inc
fsubr
pop
std
push
aaa
push
negb
or
add
imull
cmp
decl
int
xor
roll
stos
testl
test
int3
mov
sub
int3
add
push
ds
or
outsl
loopne
sbb
shrl
and
mov
cmp
jmp
sbb
adcl
sub
xchg
sub
add
cmpsb
pop
xchg
popf
sti
dec
inc
cmp
je
cmpsl
or
mov
out
stos
pop
add
shrb
rclb
or
testb
test
xor
inc
dec
aad
dec
lock
pushf
repz
insl
cmpsb
mov
push
jg
sub
ja
ja
pop
imul
push
or
push
and
mov
aam
sbb
push
ljmp
jno
fwait
ret
mov
mov
fcmove
ja
pusha
push
jne
xchg
jbe
insb
pop
mov
in
adc
jg
push
in
negb
out
hlt
pop
insl
mov
xlat
inc
inc
dec
out
lcall
pop
mov
push
push
lahf
outsl
ret
ficoms
cmp
rclb
dec
xor
popa
and
fadds
push
jmp
push
add
out
xchg
dec
jae
out
mov
push
dec
stc
push
sbb
hlt
aam
dec
inc
and
sbbl
repnz
fisubrs
pop
jecxz
push
test
test
stos
out
cmc
jecxz
popf
scas
icebp
cltd
adc
or
ret
lret
cli
mulb
rclb
pop
jb
aaa
shll
sub
push
andl
xchg
pop
ljmp
mov
leave
cmpsb
fs
jae
or
sbbl
mov
mov
aaa
add
cmp
lds
xchg
outsb
mov
mov
repz
or
jbe
fwait
lret
xchg
adc
push
leave
inc
dec
pop
mov
mov
gs
inc
pop
sbbl
pop
xchg
std
fstpt
pusha
popa
movsl
cltd
jns
mov
test
scas
scas
mov
shrb
lret
int
xchg
dec
test
push
in
push
jl
in
or
das
sub
pop
mov
jp
movsl
aas
adc
sbb
xorb
clc
adc
jg
or
xchg
mov
ret
stos
fildl
bound
jo
pop
shrb
xlat
push
data16
cmp
test
ss
lds
pushf
loope
sbb
dec
push
cmp
or
adc
movsl
adc
into
push
sbb
push
das
nop
inc
jns
cli
mov
inc
xor
loope
adc
push
add
mov
test
idivl
push
inc
push
test
inc
xchg
sbb
add
and
jno
fisubrl
and
rcrb
xor
repz
fnstcw
sbb
fnstcw
std
and
into
les
rcrl
sub
inc
cmpsb
xchg
jne
rcr
in
mov
xor
sbb
cmc
out
and
flds
adc
rep
ficompl
fnsave
jnp
or
vmwrite
inc
push
sbb
inc
sbb
hlt
mov
mov
pusha
iret
cmovne
out
jo
mov
out
adc
xchg
mov
or
xchg
rolb
sbb
stos
xchg
dec
stos
mov
sarb
into
dec
lds
inc
mov
mov
xchg
dec
out
test
push
fistl
data16
sub
mov
insb
pop
cltd
dec
jns
push
in
mov
and
sbb
aam
lea
test
lahf
js
sub
or
imull
test
push
jle
les
test
das
mov
xchg
jno
sub
cli
insb
inc
fimuls
jnp
movsl
addl
xchg
repnz
in
cmp
sbb
pop
or
push
shl
push
ljmp
scas
scas
jne
adc
push
jp
push
cmpsb
out
adc
fwait
jg
mov
jle
sbb
add
xchg
xor
mov
lahf
mov
stos
repnz
xchg
imul
mov
mov
loope,pn
push
enter
mov
je
sar
hlt
adc
lcall
leave
adc
jp
sub
or
movsl
mov
cli
add
int3
jnp
cmp
loop
xor
bound
fs
mov
push
cld
icebp
mov
addr16
adc
xchg
mov
sarb
cmp
mov
sub
addr16
jno
mov
xlat
in
jns
pushf
or
jge
pop
flds
and
sbb
outsb
jno
cmpb
jbe
and
xchg
adc
daa
cltd
stc
dec
push
cmpsl
enter
cli
mov
push
sbbb
pop
mov
pusha
inc
mov
and
gs
add
pop
cwtl
fsubrs
into
or
repz
test
add
jne
mov
add
sbb
cmp
add
mov
mov
movsb
mov
xor
aas
sahf
lret
push
scas
test
cmp
and
loopne
sbb
sub
test
push
call
out
pusha
mov
sub
fsubrs
mov
jb
or
sahf
andl
stos
xchg
xor
xor
mov
jmp
xchg
push
add
ljmp
ss
mov
push
addr16
mov
cmp
sbb
sahf
scas
cmpsb
xchg
inc
in
in
pop
adc
addr16
xchg
je
call
sub
push
jbe
cmp
xchg
xchg
cmc
cmp
arpl
push
pushf
loope
inc
jl
pop
mov
enter
xchg
lds
cwtl
mov
loop
mov
stos
out
jmp
insb
inc
inc
into
sub
repz
ret
enter
mov
lahf
mov
mov
jp
pop
lds
sar
shr
jp
ds
push
sub
sub
adc
inc
xor
xchg
out
lcall
sbb
mov
jl
lcall
or
aas
add
xlat
mov
pop
jns
lcall
out
lret
jg
xchg
gs
nop
and
in
ror
mov
es
and
insb
pop
mov
es
hlt
jp
es
xorb
sbb
xor
mov
aam
sbb
and
mov
movb
hlt
pop
jns
lea
repz
sarb
les
cwtl
movsb
xor
and
adc
fmul
jmp
daa
mov
xor
fldl
mov
fwait
jle
out
jnp
inc
jb
scas
int3
mov
and
push
xchg
jmp
out
test
pushaw
cwtl
cmp
dec
popf
pop
pop
insl
fildl
in
and
adc
cltd
ljmp
adc
push
xchg
shll
hlt
cmp
aaa
and
add
and
loop
mov
out
cmp
sub
stc
sti
popa
mov
xor
and
xor
icebp
xor
jp
leave
pushl
in
push
jo
bound
je
mov
mov
cmpsb
cltd
mov
cmpsb
dec
cmp
sub
inc
mov
mov
inc
pop
scas
ljmp
fsts
cltd
pop
pop
pop
jne
imul
mov
jge
xchg
sbbb
sbb
les
lcall
xlat
xor
or
cwtl
es
cs
in
push
sbb
cld
mov
xchg
dec
sub
cmp
iret
xchg
in
sti
rcrl
lahf
sbb
xchg
fisttpl
jnp
sub
xchg
movsl
lods
dec
mov
imul
jbe
sub
les
sub
iret
inc
ror
push
xchg
test
jb
lock
fwait
outsb
jns
adc
inc
pop
outsb
or
sub
lods
or
pop
cmp
divb
push
in
add
mov
loope
adc
mov
out
sbb
lods
inc
mov
sarb
pusha
cmp
popf
sbb
and
call
gs
inc
mov
jmp
aas
mov
das
adc
inc
sbb
push
fists
xchg
ds
xchg
lea
icebp
stos
or
in
cmc
inc
pop
scas
mov
sub
adc
ljmp
sbb
and
mov
sbb
popl
mov
cmp
pop
or
sarb
dec
cmpb
and
cmpsl
ret
sbb
cmc
and
cmp
xor
jp
mov
popa
sub
dec
mov
lahf
jmp
inc
cmpsb
aas
sub
xchg
sub
xchg
lods
jbe
std
or
pop
iret
call
add
insb
nop
jns
in
mov
xor
add
scas
ror
ja
sub
daa
ret
cwtl
jmp
sbb
jl
pop
popf
inc
aam
xchg
cwtl
sbbl
fnstcw
sbb
mov
sti
lret
sub
jne
iret
cmp
pop
xlat
mov
fnstenv
mov
cmp
push
out
xlat
mov
stc
lret
push
dec
lock
shll
push
rclb
sahf
popa
dec
mov
arpl
data16
stc
jno
push
xor
in
test
lcall
sahf
cs
xor
pop
adc
cmpsb
pop
jle
jno
loope
push
add
out
jnp
enter
outsl
jo
inc
push
pop
push
mov
dec
out
cwtl
aad
scas
int
xor
ss
sbb
dec
shlb
cmp
dec
pop
mov
std
add
mov
mov
pop
adc
xlat
xchg
iret
jl
fidivs
and
test
and
lret
gs
das
xchg
pop
js
lcall
pop
jo
xchg
leave
test
cs
lds
inc
or
sbb
lahf
in
aas
inc
xor
mov
or
jno
test
lods
bound
call
lock
mov
int
jl
push
cmp
add
or
fmulp
mov
cmp
iret
jp
add
sbb
and
mov
inc
jns
pop
sahf
cli
and
out
jle
push
jno
subl
sub
aas
add
andb
xchg
mov
fldl
and
xor
push
pop
jae
lret
cli
mov
outsb
jge
mov
movsb
pop
lods
push
cmp
mov
dec
test
mov
mov
add
pusha
adc
sub
xchg
push
xor
mov
adc
xchg
add
sub
mov
stc
fldenv
xchg
mov
mov
popa
inc
push
sbb
push
fadds
ja
xchg
or
outsb
fs
out
cmp
es
cmp
pop
dec
je
scas
pusha
push
mov
mov
mov
js
and
dec
iret
das
xor
lret
push
pusha
xor
mov
sub
into
sbb
jbe
call
xor
pushl
lds
jg
dec
mov
out
push
and
mov
negb
dec
out
jno
test
fcomps
mov
mov
xchg
pop
lret
jl
rcrl
das
lods
repz
int
fs
loopne
enter
xchg
add
into
fistpl
and
xchg
popf
xlat
mov
push
inc
xchg
addr16
out
mov
push
shlb
fists
add
sub
push
mov
insb
lods
mov
cmc
cmc
fwait
movsb
movsb
stos
lods
lods
test
xchg
dec
jb
mov
or
mov
ret
test
loope
push
jbe
push
sarb
sbb
aaa
cmp
dec
pop
fstpt
fs
outsb
daa
aam
jmp
clc
jbe
mov
fisubl
nop
lods
sbb
arpl
adc
ljmp
fcoms
mov
adc
xchg
movsb
jb
fsubl
cmp
inc
imul
clc
and
aad
xchg
out
dec
lods
adc
inc
shlb
xchg
sub
lahf
inc
outsb
xor
mov
out
or
cmp
or
enter
adc
stos
arpl
jg
xor
mov
adc
push
loope
insb
loop
mov
jle
ret
lds
loopne
cs
je
lret
out
mov
arpl
loopne
insb
or
mov
jecxz
in
or
cwtl
mov
cmp
jo
ds
repnz
pop
cmp
inc
stos
les
push
xlat
inc
dec
xor
xchg
andb
xor
mov
popa
repnz
xadd
xchg
ret
lret
xchg
xchg
int
out
jbe
sbbl
push
rolb
push
and
pop
cs
adc
mov
pop
insb
or
add
popa
ret
sarl
mov
xchg
sbb
mov
fcomps
cltd
imul
iret
daa
ljmp
mov
sub
or
push
add
pop
push
rcrb
les
or
lds
xchg
sub
iret
pop
int3
and
mov
cmp
aad
adc
or
push
aaa
and
les
clc
xor
icebp
psrlq
repz
sar
pop
sub
jae
mov
pop
push
mov
inc
and
inc
push
ficomps
cmp
mov
adc
jge
xor
dec
jecxz
cmp
mov
sub
pop
sub
jmp
mov
pop
xchg
movsl
or
jnp
mov
jno
push
pop
js
dec
sub
ret
iret
xor
pop
cmp
and
in
xchg
ss
xor
cmp
xchg
sti
lds
mov
into
repz
sbb
xor
fcoms
push
push
cmp
mov
jb
mov
sti
or
or
fsubs
jno
cmp
scas
cmp
in
jmp
dec
pop
sub
dec
xchg
inc
into
push
scas
arpl
cmp
fnstsw
in
sahf
push
sub
jno
pop
xor
cmp
cltd
mov
mov
cmpsb
icebp
push
loop
pushf
ret
into
cmp
dec
add
xchg
cmove
sub
inc
in
sub
stc
dec
cmp
scas
xchg
cmpb
pop
push
outsl
insl
aaa
imul
ljmp
das
test
lea
and
loopne
sbb
jecxz
je
aaa
push
mov
push
mov
movl
in
inc
fmull
cmp
adc
outsb
pop
jg
in
xchg
pop
aaa
jl
out
fsubl
add
mov
pop
inc
gs
ds
sbb
mov
mov
push
ret
push
cltd
inc
adc
cmp
aaa
or
inc
inc
mov
pop
sti
push
cld
imul
dec
es
xor
xor
mov
mov
fidivrl
sub
pop
bnd
das
ficoms
aam
adc
iret
mov
dec
mov
pop
jae
push
lret
sbb
pop
xor
mov
adc
mov
add
pushf
fwait
imul
mov
push
inc
jmp
jbe
ffree
and
in
cmp
sub
test
push
test
pop
fldt
sub
das
pop
inc
xchg
loop
das
push
lret
push
pop
popf
and
das
push
imul
pop
aam
mov
leave
bound
jle
mov
in
mov
cli
decl
int3
js
mov
add
inc
xchg
js
cmpsl
pop
cmc
cmpb
xlat
lods
repnz
dec
popa
inc
cmpsl
mov
ja
push
lods
jbe
in
rcrl
dec
xor
inc
movsb
test
fldln2
sbb
cmc
popf
dec
pop
mov
imul
or
movsb
call
sub
scas
outsb
loopne
pusha
stos
xlat
push
nop
jno
mov
xchg
mov
hlt
fsubl
test
inc
mov
cmp
and
mov
jo
fs
and
enter
frstors
iret
push
sbb
dec
push
xlat
mov
orb
sub
imul
arpl
insb
mov
or
pop
addl
jle
ss
movb
cmp
fsubs
jb
loopne
dec
xchg
cltd
pop
aad
in
jbe
rol
adc
push
into
pusha
ljmp
xchg
fistl
js
test
push
xchg
add
cmp
ret
popf
dec
in
and
std
and
mov
xor
mov
add
sbb
test
lods
mov
mov
enter
inc
gs
int3
and
in
das
pushf
pop
dec
scas
lds
push
cmpl
and
js
lret
jb
push
cmp
cs
inc
adc
mov
addr16
int
test
test
pop
lds
lret
subl
xchg
jne
pusha
loop
push
jle
fsubr
aas
sbb
add
sbb
mov
test
pop
or
cmpsl
sub
fiadds
xor
jecxz
jae
dec
sbb
test
pop
cld
insb
syscall
jmp
sbb
rcll
xor
mov
adc
ja
es
jecxz
jg
lahf
mov
popf
idiv
and
mov
push
adc
repnz
adc
add
jbe
imul
jmp
aaa
out
fdivs
fsubl
cltd
sub
xor
jnp
daa
mov
mov
mov
iret
jle
jbe
fnstcw
jg
je
cmp
pop
fsubrp
or
es
jne
xor
arpl
mov
xchg
jmp
gs
int3
cmp
data16
in
add
clc
test
mov
pop
ret
sub
and
arpl
ret
and
rcrl
xor
mov
push
jl
mov
mov
mov
les
sbb
mov
cld
lret
dec
loope
test
fmuls
fcmove
mov
cltd
mov
push
loope
sub
loop
and
pop
cmp
jb
xchg
cld
shr
js
sti
jo
cltd
dec
mov
add
mov
mov
cltd
push
test
sbb
xor
jecxz
sbb
mov
nop
or
push
lret
mov
vmaxsd
jecxz
or
xchg
fcmovnbe
lds
mov
push
xchg
ljmp
testb
push
sbb
dec
add
cltd
stos
scas
ljmp
sbb
adc
fs
dec
mov
sbb
subb
jge,pn
repnz
dec
cltd
xchg
sbb
pop
mov
push
jge
mov
and
imul
int3
add
stc
pop
pushf
clc
push
lods
mov
in
insl
cli
and
bound
repz
or
adc
mov
push
sbb
cmpsb
add
rcr
add
dec
mov
sbb
andl
ror
lahf
mov
sbb
xlat
ja
out
lods
mov
cwtl
pop
adcb
insl
ljmp
imul
andl
outsb
fwait
cwtl
jg
aad
push
jbe
xchg
inc
fsubp
repz
arpl
mov
jno
scas
push
cmp
popa
stos
sbb
xor
imul
movsb
xchg
popf
jne
jne
shll
fidivrs
add
jl
push
call
cli
add
dec
xor
inc
push
push
xor
sub
dec
ljmp
or
mov
cmpsl
cmp
in
push
les
inc
adc
push
adc
dec
test
or
in
cli
test
pop
sub
mov
xor
cmpl
jb
dec
rcl
pushf
icebp
and
mov
faddl
add
into
fimull
xchg
xor
loop
jmp
xchg
push
sbb
sbb
mov
outsl
mov
mov
clc
outsl
cli
inc
or
stos
add
push
or
iret
mov
push
ret
mov
xlat
adc
rorb
jbe
push
adc
lcall
xor
imul
xchg
mov
mov
sysexit
ds
sbb
adc
and
mov
push
jnp
push
loope
jo
push
and
arpl
xchg
popf
cmpsb
pop
aas
movsb
or
outsl
inc
mov
dec
scas
push
jne
push
inc
or
fsubrl
inc
pop
scas
sub
movlps
add
inc
adc
lahf
add
ret
dec
ret
xor
inc
lock
dec
xchg
hlt
jbe
or
and
lods
mov
mov
out
jno
call
push
adc
repz
jae
fs
cld
in
sbb
in
and
fbstp
ljmp
pop
pop
loop
and
mov
cmp
addr16
and
mov
inc
ds
or
add
fs
rcr
out
pop
xchg
hlt
mov
cmpsb
xlat
sub
fwait
pop
xchg
xorl
inc
inc
dec
jns
pop
mov
sub
jg
ljmp
sar
or
jne
mov
mov
mov
mov
hlt
pop
std
aaa
rol
inc
mov
stos
outsb
lea
fildl
cmp
cmp
imul
out
ret
popf
fdivrl
jb
std
sbb
inc
push
mov
jle
rcll
inc
shl
repz
mov
out
xlat
pop
push
sub
ss
mov
popa
or
movsl
sbb
inc
xchg
jne
inc
sbb
cmc
xorl
fimull
leave
insl
mov
sbb
dec
jg
pop
aam
addl
popf
fwait
and
push
das
jbe
sti
lcall
pop
mov
enter
jae
cmp
mov
btc
rorb
out
out
andl
adc
rcrl
jge
cs
add
add
jne
jecxz
dec
js
mov
std
outsl
aaa
fnstenv
nop
dec
mov
call
push
nop
jns
jp
xor
adc
inc
mov
adc
fstpl
xor
mov
xor
mov
mov
inc
sbb
test
inc
loope
or
fldt
sahf
ficomps
mov
mov
arpl
jae
shrl
mov
or
xor
fstl
adc
jne
adc
push
or
adc
xor
jecxz
cmc
loopne
sub
or
mov
jae
lahf
mov
jge
ret
push
call
mov
xor
pop
push
mov
mov
pop
stos
lcall
cwtl
adc
jecxz
jle
je
test
push
in
in
mov
call
scas
rcrl
mov
mov
shll
xchg
and
mov
jecxz
pop
cmp
sarb
mov
repnz
dec
xor
fwait
test
cmp
add
mov
in
call
dec
data16
and
mov
pusha
fsubl
jle
add
sbb
mov
sub
orb
jp
cmp
lods
push
shrd
jle
xor
shll
pop
repnz
mov
push
movsl
add
mov
loope
movsb
cmp
adc
pop
push
and
addr16
shlb
jae
mov
jg
pop
ficompl
mov
mov
pop
dec
sub
stc
lcall
xchg
aas
outsl
call
popf
xchg
pmulhw
adc
inc
dec
mov
mov
mov
loop
or
std
in
shll
js
pop
jg
cltd
inc
movsb
js
loopne
mov
rclb
inc
mov
das
adc
insb
jecxz
clc
jae
dec
jns
pop
sbb
adcl
adc
movsb
jnp
sbb
adc
fucomip
insb
das
or
iret
scas
mov
insl
sarl
imul
cmp
lea
jl
pop
dec
movsb
mov
lret
inc
push
cmpsb
sbb
lret
mov
cmp
add
insl
lods
cli
mov
and
test
lea
js
cs
dec
xchg
enter
call
pop
jecxz
cmp
movsl
insb
icebp
xor
hlt
out
mov
inc
addr16
mov
enter
jl
dec
push
lock
add
push
jnp
int3
mov
mov
xlat
sarb
dec
push
push
xor
and
xor
pushl
cwtl
imul
mov
leave
testl
popf
mov
pop
sahf
sub
mov
inc
dec
cmp
mov
mov
adc
add
repnz
jecxz
fmulp
pop
xor
clc
fnsave
repnz
xor
lods
jge
loopne
adc
pop
std
sub
repnz
popa
lcall
push
and
icebp
dec
fwait
call
xchg
cmpsl
pop
jp
jge
cwtl
xor
and
sahf
popaw
mov
shlb
xchg
scas
push
fdivrs
cs
add
ljmp
imul
das
sbb
mov
sub
popa
out
push
cmc
out
lods
mov
xchg
inc
adc
test
mov
sbb
ret
outsb
cld
rol
dec
movsb
ljmp
lods
cmp
mov
mov
test
scas
movsl
decl
out
int
mov
aad
mov
xor
and
int
loope
mov
mul
sbb
aaa
int3
ret
out
int
push
fcoms
aad
inc
xchg
popf
lock
push
cltd
aad
and
fmuls
adc
and
push
in
jne
adc
jle
daa
popf
jo
lahf
fldl
push
mov
or
mov
repz
cmp
out
loopne
dec
popa
jp
mov
lea
mov
and
in
int3
ret
adc
outsb
cwtl
loop
pop
dec
mov
jo
clc
xchg
mov
dec
out
hlt
stc
sub
mov
cmpl
daa
mov
loop
sbb
scas
test
aad
jg
aaa
pop
out
mov
shll
mov
test
bound
mov
call
xchg
push
and
pop
test
fmulp
inc
fnclex
in
and
outsb
xor
adcl
mov
jae
cmp
pop
js
sbb
mov
imul
mov
add
dec
lods
pusha
xchg
add
aam
cmp
cmc
mov
loope
fstpt
cmp
or
lret
inc
cmp
adc
arpl
int3
xor
pop
insl
sub
jmp
jge
or
mov
cs
arpl
sbb
dec
adc
or
pop
daa
and
lock
out
jle
gs
shlb
sbb
inc
hlt
lcall
loopne
add
pop
and
xchg
push
test
addb
cmp
arpl
and
push
mov
xchg
pusha
push
cmovae
cmp
jge
xchg
enter
jp
shll
lret
lea
lock
pusha
sub
push
movsb
aas
dec
sbb
xor
mov
jle
outsb
or
hlt
scas
mov
int3
or
aad
sub
fidivl
into
sbb
lcall
dec
mov
repz
ja
mov
push
in
mov
sbb
sub
jl
pop
imul
pop
jge
cmp
sbbb
xchg
sub
dec
sarb
pop
call
jp
fwait
std
or
jae
add
out
adc
pop
test
imul
cmp
std
inc
movsb
adc
call
shll
xchg
fimuls
adc
mov
jge
test
lods
test
nop
rorb
sub
orl
testl
nop
mov
sub
add
pop
nop
fwait
jle
ja
mov
pop
push
stos
nop
jg
dec
outsb
stos
push
mov
cli
ret
scas
jp
mov
rcrl
mov
mov
xor
cld
pop
push
push
xor
clc
faddl
jno
mov
idiv
jecxz
dec
cmp
nop
jle
mov
inc
in
fcomp
mov
mov
scas
mov
lcall
cmpsl
push
jmp
stos
cmp
mov
dec
mov
dec
outsl
dec
cmpsl
push
repz
ret
lahf
adc
sbb
pop
shll
add
loopne
lret
and
cmp
pusha
dec
cmp
push
mov
add
lods
out
je
data16
jmp
outsl
pop
inc
sub
sbb
xchg
jns
mov
popa
icebp
testb
cmp
cli
and
adc
bound
gs
push
movsl
push
sub
mov
jb
ret
add
clc
add
add
pop
imul
inc
mov
fucom
jbe
idivl
add
mov
aaa
inc
jg
jge
js
pop
xor
xchg
fdivl
fcom
sbb
sbb
ja
leave
add
aaa
loopne
dec
mov
xor
insb
mov
addl
test
pop
push
out
divb
push
and
adc
ret
adc
pop
add
pushf
ljmp
and
jns
ss
in
fldcw
adc
imul
mov
in
sbb
add
into
fisttpll
popf
rcrb
and
fisttps
push
iret
inc
arpl
leave
pop
inc
sar
inc
shlb
mov
std
jb
pop
aaa
cld
inc
or
cmp
pop
and
icebp
mov
mov
sbb
popf
xchg
mov
xor
ljmp
add
out
adc
mov
inc
pop
xor
cmpsb
xor
xchg
xchg
mov
movl
in
inc
mov
cmp
test
add
cli
adcl
test
dec
cmp
sub
and
out
add
add
shl
dec
jmp
popa
mov
mov
int
mov
mov
sahf
inc
sub
in
mov
mov
sub
or
popa
aad
mov
push
mov
std
int3
popa
sub
cmpsl
pop
out
adc
mov
mov
inc
popa
cmp
dec
and
pop
push
imul
shll
arpl
jmp
mov
incb
std
repz
std
push
dec
scas
mov
out
out
dec
out
dec
outsl
divl
mov
jg
adc
mov
adc
lds
push
nop
push
push
dec
das
fimuls
jo
jb
leave
mov
in
mov
sbb
add
icebp
jae
mov
mov
shlb
lahf
test
dec
mov
xor
cmp
xor
push
pop
ds
sbb
insb
push
add
ss
icebp
je
pop
loope
stos
inc
pushf
pusha
mov
pop
jmp
nop
in
rcrl
mov
jo
gs
iret
mov
push
in
cli
xchg
outsl
pushf
sbb
adc
sarl
mov
rorb
in
jle
mov
mov
out
sbb
mov
scas
pop
mov
faddp
mov
pop
adc
outsl
push
sbb
aas
nop
mov
outsb
or
push
cld
data16
pop
dec
or
push
xor
addr16
xchg
xor
mov
cwtl
arpl
negl
dec
jae
cld
notl
movsl
cmpl
clc
mov
jnp
xchg
xchg
ficoms
and
cwtl
sbb
repnz
fdivrs
xchg
xchg
sbb
sbb
mov
outsb
aad
je
mov
loopne
in
and
push
and
dec
mov
jb
lock
xor
sbb
mov
mov
lds
inc
xchg
int
xor
mov
clc
sbb
jbe
sub
mov
jns
add
xchg
pop
aad
mul
or
lock
jno
mov
mov
fisttpll
in
iret
add
ficoms
int
imul
nop
test
add
pop
fldenv
adc
pop
xchg
outsl
popf
aam
outsb
dec
push
repnz
es
or
pop
call
mov
loop
mov
mov
push
mov
sub
push
cs
push
dec
jg
aas
add
push
testb
dec
and
adc
lods
pop
std
fstpl
adc
xchg
movsl
sub
push
test
andl
sbb
test
fs
fidivrs
push
jecxz
imul
adc
fadd
push
js
and
nop
in
jo
sub
daa
std
addr16
add
inc
leave
mov
or
add
mov
dec
xlat
imul
cmpsb
into
mov
push
and
imul
push
and
add
add
out
xor
pop
hlt
loop
mov
mov
cmc
mov
fcmovb
add
push
ss
mov
xor
xchg
dec
std
xchg
adc
mov
lahf
push
hlt
stc
stos
sbb
xor
ja
daa
push
mov
cld
push
scas
add
push
aad
pop
xchg
sbb
adc
xor
scas
mov
dec
out
sub
pop
jle
es
xchg
out
jne
jbe
jl
mov
fldpi
mov
je
sbb
xchg
sbb
dec
movsl
and
and
inc
jnp
int
pop
mov
addl
adc
xlat
loope
imul
inc
sub
pop
pop
jae
or
inc
aaa
mov
popf
inc
inc
pop
inc
mov
cli
mov
jo
add
jmp
enter
mov
leave
push
push
popf
dec
xchg
pop
jo
sbb
movsb
pop
mov
repz
jno
dec
pop
jp
fisttpl
dec
pop
mov
mov
and
ficoml
sbb
push
cmc
inc
mov
pop
andb
cld
rorb
stos
pop
popa
je
dec
fcompp
add
pop
inc
int3
pop
inc
in
add
sbb
out
xchg
jmp
add
stc
sub
adc
rcrl
scas
add
add
cmp
arpl
xchg
fbstp
adc
xchg
push
inc
or
aas
mov
jbe
pop
jbe
lock
je
negl
jae
rorl
push
lods
pusha
inc
jg
inc
xorb
sbb
push
stos
mov
in
mov
jno
lock
mov
leave
lea
call
mov
inc
add
out
daa
shl
pushl
js
cmp
sbb
mov
dec
ret
testl
lods
xchg
cmp
mov
pand
add
jg
jb
pop
pop
aam
jle
shll
mov
repnz
test
loope
fldt
loope
adc
fistpl
push
lods
sbb
mov
mov
int3
lret
mov
pop
dec
add
pop
xor
push
inc
repnz
enter
in
sub
in
push
into
scas
sbb
in
test
stos
insb
adc
ds
mov
and
rcrb
fdivs
lcall
movsb
sub
jle
les
push
stc
mov
cmpsl
sub
mov
dec
dec
lods
mov
es
loop
sbb
testb
stos
hlt
jg
push
pusha
cmp
push
add
lods
leave
std
mov
and
dec
xchg
sub
imul
push
repnz
push
pop
stos
mov
mov
stos
stc
aad
push
mov
add
stos
pop
jecxz
aad
and
cltd
mov
cmp
popf
fidivl
frstor
insl
stos
cvtps2pi
enter
pop
lret
outsl
mov
inc
pop
stc
dec
popf
dec
jmp
mov
rol
leave
adc
mov
faddl
sub
jo
das
and
in
fmull
dec
lret
push
add
fimull
lcall
shl
jl
sahf
fiadds
movsb
push
cmp
xor
sbbb
insb
mov
ja
and
pop
js
mov
movsb
aad
xchg
daa
pushf
dec
dec
mov
mov
sbb
pop
xchg
out
arpl
cmpsb
sbb
sahf
pop
jo
mov
mov
loope
mov
test
fisttpll
cs
shl
mov
cmpsl
in
dec
mov
inc
addr16
mov
dec
sub
mov
aad
sahf
fidivrs
sti
test
or
call
mov
jo
clc
mov
pop
outsb
cmp
inc
mov
jecxz
jge
icebp
sbb
loope
sbb
insb
stos
sub
sub
rorb
dec
mov
loopne
mov
cli
icebp
sbbl
dec
mov
out
mov
cmpsl
lods
popf
cmp
mov
outsb
and
pop
insl
mov
pushf
inc
cltd
lret
lahf
inc
push
cmp
xchg
cmp
icebp
push
push
pop
mov
call
pusha
jecxz
jae
jl
lcall
rclb
test
inc
cmp
pushf
lock
jbe
dec
xor
mov
and
cmp
popw
mov
sbb
in
dec
out
ss
xchg
sahf
imul
enter
rcr
cmpsb
mov
insl
dec
mov
and
pushl
dec
push
push
push
mov
cmpsb
mov
or
cmp
xor
and
out
popa
std
loope
mov
mov
dec
push
inc
lock
xor
sbbb
adc
push
push
mov
leave
cld
push
inc
insb
mov
arpl
stos
notl
dec
push
push
shl
pop
aad
sbb
inc
je
pop
adc
jl
je
aam
xor
xchg
sub
cmpsl
es
pushf
imul
ljmp
clc
repnz
adc
repnz
addl
sub
rcrb
test
cmc
arpl
mov
int
jp
cwtl
xor
sub
mov
lret
test
pop
add
bound
or
js
jle
imul
cli
jl
or
push
inc
pop
jb
dec
outsl
xor
mov
inc
hlt
aad
insb
jl
xchg
sub
dec
jo
mov
sbb
lds
loop
fxch
stos
xchg
popw
xlat
and
cmpsb
imul
fsubs
jmp
nop
sub
mov
xor
ja
adc
movsl
mov
fwait
je
pop
fildll
ja
pop
jno
fwait
pop
pushf
imul
adc
fwait
insb
pop
mov
push
outsb
or
ja
enter
add
in
ja
mov
pusha
mov
cwtl
rcr
orl
lahf
ss
inc
sub
jl
clc
push
add
xchg
cld
mov
pop
mov
aas
subl
dec
ret
push
test
pop
pop
outsb
jecxz
sub
add
dec
xchg
fcompl
push
leave
and
sbb
cmp
mov
adc
mov
inc
inc
into
cmp
jge
test
lahf
mov
jg
out
add
scas
xor
pop
leave
sub
push
jg
faddp
or
cmp
flds
jp
adc
movsb
fiadds
mov
xchg
mov
mov
ja
scas
push
or
popa
add
loop
and
aam
test
lods
fisubs
mov
cld
inc
add
and
pop
sbbl
dec
push
adc
xor
adc
push
xor
lds
cwtl
imul
xchg
cltd
loope
movsb
push
stc
cmp
mov
mov
jo
cli
jnp
test
popf
mov
cmc
sbb
and
loopne
test
cmpsb
ljmp
mov
out
arpl
pop
xor
inc
fnsave
and
mov
lods
aas
in
xlat
pop
movsl
adc
dec
inc
jl
push
jbe
or
xor
inc
inc
int3
das
xor
and
mov
movd
push
js
ficompl
jge
test
lock
push
dec
ret
push
lret
subb
pop
std
scas
pop
push
xchg
add
stos
sub
aad
dec
imul
jnp
dec
popa
and
xor
lcall
inc
insb
fucomip
push
sub
inc
shlb
fcmovnb
sub
shlb
pop
jg
push
dec
insl
dec
add
iret
inc
out
adc
xchg
cs
imul
jp
mov
mov
call
xchg
jl
mov
sub
lahf
mov
and
in
jo
sbb
xor
pop
jae
xchg
ljmp
push
mov
push
scas
jns
lock
push
rol
lock
mov
or
insb
test
jp
cmpsl
sub
cli
cltd
cmp
std
iret
clc
imul
push
jg
adc
jb
rorb
daa
push
or
dec
rep
sbb
sbb
mov
dec
outsb
je
movsl
jno
mov
insb
in
ss
cmp
mov
pop
fwait
leave
sub
repnz
and
jo
and
or
lock
sub
adc
std
popa
test
jnp
pop
push
std
push
mov
jns
pop
pop
shrl
out
dec
ljmp
xchg
pop
lea
adcl
lahf
or
ja
scas
xlat
adc
cmp
jbe
jns
fmuls
push
cli
pop
out
cmc
adc
and
hlt
or
push
js
scas
sti
adcb
dec
popa
fisttpll
add
and
xor
icebp
call
xor
sar
and
and
xchg
andl
aad
pop
clc
jle
fsubrs
aad
aas
outsb
mov
push
out
lock
in
out
pop
xchg
sarb
xchg
sbb
ret
mov
testb
rcrb
inc
mov
sbb
loope
mov
push
lock
push
inc
inc
pop
add
inc
jge
mov
inc
sbb
lret
xchg
xor
movsl
adc
push
pusha
and
mov
sbb
sub
std
mov
mov
hlt
in
push
testb
test
sub
adc
out
mov
out
in
push
js
in
sub
fdivrp
xchg
pop
out
mov
lods
xor
rcrb
cmpsl
inc
or
jecxz
pop
pop
sar
outsl
add
movb
lods
call
and
add
in
popf
or
lods
sbb
pop
and
scas
ja
sbb
jp
inc
pop
inc
repnz
inc
inc
mov
orl
rcrl
outsl
mov
scas
and
jmp
stos
rcl
imul
sbb
mov
loop
or
addr16
sbb
adc
sub
push
cmp
cmc
or
stc
xchg
movsl
out
loop
cmpsb
rcr
rcrl
xchg
out
jo
ret
jne
push
je
dec
mov
dec
ffree
jl
cmp
jbe
out
out
int3
add
sbb
pop
pextrw
mov
dec
lods
pop
jb
pop
ret
fmuls
mov
outsb
mov
mov
add
lods
scas
jne
jle
sbb
addb
xchg
loop
bound
popf
jmp
inc
mov
nop
or
aas
xor
pop
xor
inc
ror
mov
mov
cld
ficomps
pop
jmp
pop
sub
pop
bound
je
xchg
mov
scas
jno
pop
or
testl
aaa
adc
cmc
pop
inc
popf
xor
lock
inc
inc
pop
xchg
add
dec
cmp
mov
lret
mov
in
adc
mov
mov
imul
call
adc
lods
mov
push
stos
pop
inc
hlt
mov
push
adc
je
out
in
pushf
lea
sub
fstpl
addb
xor
xor
loop
or
shll
in
mov
addr16
mov
shll
out
faddl
insb
xor
fnstenv
dec
loope
dec
mov
jp
jmp
xchg
leave
or
and
daa
ds
sub
insl
lret
in
or
test
push
aaa
cmp
push
jns
sub
mov
shll
out
inc
cmpl
cs
jnp
in
iret
and
sub
xchg
dec
mov
ds
movsb
push
cmp
lods
sahf
insb
cmp
cmp
repz
les
mov
push
jns
mov
inc
and
xor
xlat
xor
push
sub
and
mov
aam
dec
out
pop
arpl
test
xchg
aam
pop
and
into
es
cmp
jle
inc
xor
jge
pop
or
cmp
data16
ret
sub
lret
sbb
jg
test
es
int3
inc
mov
shll
cmp
test
jb
cmp
arpl
mov
dec
jmp
sbb
les
push
or
shrl
ud1
inc
or
pop
mov
add
aas
sub
sub
popf
xor
sbb
adc
dec
sbb
lock
or
push
aam
call
pop
xor
inc
icebp
inc
std
pushf
aam
pop
or
stos
inc
mov
hlt
dec
in
xchg
inc
fstpl
not
hlt
xchg
lods
sbb
mov
pop
ljmp
xor
mov
repz
sbb
clc
int
daa
addl
lock
cmp
mov
jb
mov
pop
push
mov
scas
jns
mov
cmp
aad
inc
test
mov
insl
cmp
inc
cli
dec
xor
mov
sti
adc
dec
out
add
negl
cmp
jne
scas
stos
pop
test
fs
xchg
test
mov
or
lods
mov
xchg
jp
fldl
aas
frstor
mov
jge
mov
inc
push
xchg
rcl
lds
sub
mov
decb
outsb
pushf
mov
call
sub
push
mov
jp
mov
jno
and
cmp
mov
or
mov
lock
clc
or
nop
cmpsb
movsb
xchg
mov
sub
mov
inc
sub
push
cmp
adc
cmp
or
insb
push
es
push
pusha
out
push
sbb
jge
xor
xchg
pushf
add
scas
fisubrs
or
xchg
adc
push
push
push
mov
fs
aas
mov
mov
add
push
mov
xor
out
inc
fcompl
fucomp
outsb
jbe
or
shrl
or
insb
popf
lods
push
ljmp
lcall
pop
xor
xor
mov
mov
in
ds
mov
test
mov
and
adc
dec
sarl
push
popf
xor
pop
cwtl
cmpsl
daa
mov
gs
cmp
scas
mov
jl
adc
daa
pop
jecxz
sbb
sub
rorl
add
add
lret
test
sbb
xchg
dec
arpl
sbb
jae
es
mov
pushf
daa
jbe
shll
jg
dec
pushf
push
stos
pop
adcl
jno
adc
cmpb
aaa
fisttpl
addl
stc
xchg
sub
aaa
inc
push
adc
cmp
data16
mov
cmp
push
jne
nop
jl
int3
mov
mov
incb
cltd
lret
jae
and
rcl
hlt
sti
add
imul
std
ljmp
ss
mov
and
mov
pusha
movsb
push
test
inc
addb
loop
push
lock
dec
nop
aas
outsl
or
inc
mov
imulb
adc
push
call
mov
and
or
stos
ljmp
fbld
xchg
cli
pushl
loop
push
test
sbb
loopne
push
cmp
loopne
dec
pop
push
int
aaa
into
or
aad
bound
sahf
je
mov
movsl
sbb
push
xor
dec
push
cwtl
dec
pop
sub
fmull
inc
mov
loope
or
dec
cmp
je
fnsetpm(287
adc
inc
mov
rorl
scas
lods
xchg
icebp
aaa
push
out
cwtl
fcos
leave
ja
jmp
loop
mov
dec
popa
cmc
pop
push
scas
mov
fnsave
mov
sub
stos
fcmovb
jno
jmp
test
push
and
pop
das
cmp
mov
mov
shlb
pusha
push
movsl
mov
jmp
bnd
or
ficomps
push
xor
js
xchg
imull
pop
fdivrs
xchg
add
pop
mulb
repz
mov
sbb
imul
sbb
cmc
lcall
addr16
xchg
xchg
aas
cmpsb
add
cmp
pop
cmp
xor
sub
testb
fwait
mov
jbe
push
aad
imul
ficoml
outsl
pop
les
mov
sti
movsb
test
cld
call
xor
inc
dec
ret
jmp
mov
test
xor
and
mov
sub
cvtdq2ps
mov
pushf
cmp
les
nop
mov
xor
inc
adc
sub
imul
mov
pushf
mov
mov
cmpb
clc
scas
and
jle
adc
jmp
sub
sahf
lds
pop
in
andb
and
jl
xchg
pop
out
aad
sub
pop
dec
jno
jae
cli
mov
movsl
dec
insl
inc
inc
subb
push
fisubrl
push
xchg
adc
daa
cmp
pop
cmp
push
sahf
lcall
cmp
sbb
aam
daa
stc
cltd
cwtl
lods
and
xlat
fld
bound
in
and
lret
sbb
and
arpl
loop
pop
shl
movsl
fs
sub
or
mov
add
xchg
push
int3
xchg
cwtl
ljmp
insb
fiaddl
pop
jo
imul
mov
xor
iret
mov
push
add
xchg
daa
out
inc
test
scas
pusha
mov
mov
or
outsl
fdivl
dec
pusha
rcrl
adcl
push
outsb
xchg
adcl
adc
mov
jo
mov
test
mov
pop
xchg
je
jns
push
and
mov
sti
in
dec
or
adc
xchg
test
adc
cmc
push
aas
hlt
icebp
shrb
and
cmp
sub
sbb
leave
aad
fdivrs
xor
and
scas
decl
ss
pop
out
fs
popf
sbb
jmp
xchg
out
stos
mov
lcall
mov
roll
xchg
fadds
xchg
rolb
push
xlat
mov
cmp
inc
dec
mov
out
jge
test
out
and
test
mov
fidivs
int3
cmpsb
jle
fwait
das
fimuls
orb
mov
imul
icebp
sarb
push
iret
cmc
pop
lods
scas
jne
mov
and
sub
test
lds
nop
push
jge
jnp
push
lret
mov
pop
jge
faddl
adc
or
adc
mov
mov
insl
mov
imul
jp
adc
cmp
fs
and
mov
push
fwait
and
xchg
mov
in
sbb
sub
lcall
stos
lock
jge
cmp
dec
and
sarb
ljmp
out
cld
ret
gs
dec
fisttpll
mov
cld
fwait
inc
les
and
or
xor
dec
xchg
sbb
daa
sbb
xchg
test
inc
push
arpl
adc
mov
xlat
je
push
jno
gs
fcmovnbe
out
test
int3
pop
xchg
adc
outsb
fstl
adc
fstpl
or
mov
aad
cs
mov
nop
mov
movsb
sahf
and
cmp
sub
aas
ljmp
push
data16
sbb
pop
out
loop
js
dec
push
xchg
mov
dec
or
sbb
cmp
fcoms
adc
clc
jae
stos
adc
out
pop
int3
push
xchg
xchg
ja
mov
inc
pop
ss
call
cmpsb
push
in
out
sbb
or
add
adc
mov
loop
int3
add
jbe
push
sub
fs
jbe
mov
mov
fdivrs
fiaddl
stc
push
arpl
pop
mov
or
lds
mov
hlt
lea
loope
ljmp
out
xchg
and
push
icebp
adc
add
shlb
pop
rol
sub
out
jg
fcmovne
dec
data16
pusha
cmp
shr
dec
repnz
aaa
daa
jb
js
jnp
inc
leave
call
mov
dec
adc
mov
add
es
xchg
dec
pop
js
and
mov
xorb
or
movsb
leave
mov
xor
jmp
call
mov
je
pop
adc
mov
outsb
push
and
in
std
movsl
cmp
cwtl
movsb
popf
cld
sbb
bound
mov
das
sub
outsl
cmp
test
xor
aas
add
test
push
pop
jnp
and
xor
insb
inc
jb
loopne
mov
push
jns
pop
mov
xchg
fdivr
mov
pop
jmp
mov
pop
rclb
testb
jp
mov
mov
adc
stos
xlat
adc
fdivl
adc
es
int
jno
in
aaa
fsubrl
xor
ret
dec
fsubr
inc
and
fdivrl
push
and
add
sbb
xchg
fstpt
mov
das
shlb
fstpl
push
into
xor
in
bound
jecxz
or
stos
cmp
xchg
in
sbb
jge
jl
push
add
add
sub
out
mov
les
adc
mov
leave
mov
sub
pop
lock
adcl
movsl
jb
filds
xchg
lods
mov
loopne
imul
and
adc
mov
cs
pop
std
or
xchg
ss
sub
out
bound
shlb
xlat
stos
jge
pop
cli
loopne
push
pop
mov
scas
inc
adc
addr16
push
pop
adc
cltd
adc
hlt
xchg
push
les
push
mov
fs
pop
jmp
jbe
xchg
mov
outsb
mov
adc
xchg
out
xchg
sbb
sbb
mov
fadds
ja
add
fmull
sub
mov
mov
mov
out
insb
push
mov
js
data16
out
xchg
je
repnz
inc
jnp
mov
sbb
dec
sub
xlat
adc
cltd
lcall
add
fcmove
and
outsl
adc
pop
mov
xchg
pop
jge
shrb
mov
syscall
cmp
pop
mov
sahf
adc
loopne
andb
push
mov
ja
arpl
sbb
mov
test
push
mov
mov
lds
fwait
jl
ss
movsl
push
jmp
jns
and
pop
sbb
arpl
push
in
push
pop
aas
clc
inc
in
mov
mov
lods
mov
fwait
sbb
stos
insb
xchg
cmpsl
mov
jae
ficomps
hlt
adc
inc
mov
sub
ret
fldl
test
dec
xor
sbb
mov
pop
ljmp
sbb
and
fisubl
shll
xor
inc
jae
aas
mov
jle
dec
and
mov
xchg
sbb
jle
push
out
loopne
cmp
rolb
and
xor
shlb
inc
cltd
mov
inc
or
idivb
jnp
mov
mov
rolb
imul
dec
fwait
int3
ja
push
inc
cmp
lret
push
stos
roll
jmp
outsb
pop
xor
repz
cld
ljmp
int3
jo
push
mov
add
sbb
filds
sti
outsl
cmp
popf
clc
push
cmp
icebp
fists
xor
xlat
xor
loopne
dec
push
jae
in
sub
loop
mov
inc
outsb
jo
loopne
stos
stos
test
xor
jbe
inc
popa
add
jle
lahf
test
icebp
inc
sub
or
sbb
hlt
stos
imul
sub
push
punpckldq
mov
push
lcall
es
incb
jns
mov
add
addb
jnp
sbb
leave
jae
mov
das
sub
sbbb
fmulp
and
out
mov
inc
or
ret
sub
sahf
int3
fdiv
mov
push
insl
iret
das
jge
out
jns
ror
mulb
js
je
aam
add
cmp
pop
add
stos
pop
mov
sbb
cmpsl
mov
jmp
aas
push
out
or
or
fadds
stc
ljmp
pop
sbb
dec
xchg
sysret
add
int3
ds
add
inc
leave
xor
je
sbb
repnz
ret
pop
sahf
pop
xchg
push
rorb
mov
and
jno
cltd
jbe
sub
popa
cld
pop
cli
mov
insl
jmp
loop
mov
xor
dec
pop
sub
sti
mov
test
add
fdivp
mov
xlat
ret
lret
jp
loop
aam
in
mov
addr16
ljmp
std
cmp
cmp
mov
jmp
fistl
jecxz
add
lods
pop
fsubs
lret
insb
cs
loopne
mov
aad
outsl
ljmp
xor
xchg
in
stc
in
xor
lcall
mov
inc
pop
popa
adc
xchg
and
mull
inc
push
and
xor
daa
insb
dec
cmp
shll
sbb
pop
jge
jmp
loop
mov
and
add
jmp
out
cltd
insl
icebp
cmp
pop
stos
jne
imul
clc
andl
dec
add
dec
hlt
xor
lret
sbb
cs
add
cmp
rol
xor
mov
lret
mov
cld
ljmp
and
xchg
movl
mov
hlt
repz
shlb
ds
test
js
movsb
call
fucom
test
ljmp
jo
lcall
lock
clc
lahf
add
movsb
or
inc
cld
push
popf
stos
jnp
xchg
lret
and
adc
movsl
jg
xadd
test
mov
rsm
push
adc
pop
push
addr16
pop
repnz
cmp
or
nop
mov
inc
lods
adc
les
int
in
mov
sbb
and
leave
jp
cmp
pop
inc
cmp
pop
sub
add
or
mov
and
adc
scas
sbb
xor
adc
ja
lock
pop
add
pop
enter
leave
mov
cld
xchg
filds
scas
in
sbb
arpl
dec
sti
dec
inc
mov
jp
mov
cmp
and
jne
inc
mov
lods
push
fistpll
xchg
jo
mov
cmpsl
out
shll
push
sub
addr16
lahf
pop
cwtl
push
sbb
mov
dec
lea
in
stc
dec
hlt
jle
js
bound
sub
cmpsb
jmp
xchg
in
xchg
inc
push
push
dec
mov
cmpsb
fst
and
test
cltd
sti
pop
jae
js
pop
dec
jae
mov
ja
jge
push
xchg
cwtl
inc
inc
and
xchg
jns
fcmovnu
mov
pop
inc
ljmp
sub
push
push
mov
sbb
filds
stc
adc
bound
ss
mov
fcmovnbe
cmpsb
leave
fdivrs
imul
mov
and
out
es
lahf
inc
pop
scas
add
lcall
xchg
addl
add
xchg
arpl
pop
xchg
or
sbb
sub
imul
imul
clc
stos
lret
andl
add
jl
or
pop
add
mov
std
imul
es
insb
push
outsb
jno
adc
fcomps
std
pushf
sub
jno
in
ficoml
pushf
xor
jp
and
cld
int3
xorb
mov
fs
outsb
add
inc
rclb
sub
add
and
ss
pop
mov
loope
dec
sub
jb
sub
push
jmp
sbb
mov
stos
jmp
lret
in
mov
imul
pusha
jp
pop
pop
subl
daa
mov
sub
mov
icebp
push
cmp
movsl
loopne
sbbl
xor
fsubrl
xchg
sub
cmpsb
xchg
add
loope
pop
jmp
push
sub
mov
mov
xor
cld
jmp
cmpsb
clc
mov
xor
outsl
or
push
popf
aam
mov
lds
addr16
call
pop
xor
rcrb
adc
add
and
mov
add
add
mov
add
sub
push
subl
stos
leave
jns
cmp
bound
push
insl
dec
cmp
in
push
mov
daa
and
jge
xor
in
inc
fbstp
popl
sub
sbb
pushf
lret
dec
add
fimull
int
jp
and
jp
sub
push
sub
mov
scas
popa
loopne
sub
testl
adc
sbb
add
add
cmp
gs
and
fwait
xchg
sub
or
jns
icebp
test
lahf
test
inc
mov
movsb
jnp
fbstp
and
xor
pop
push
mov
mov
push
jmp
add
into
or
or
sbb
add
pop
mov
sub
sarl
or
xchg
xchg
xlat
aaa
xor
mov
ljmp
test
xor
jg
ss
int3
xchg
jne
mov
cld
or
push
push
psrlw
sbb
inc
push
aam
cmp
and
mov
mov
jp
out
mov
je
cltd
dec
ficoml
or
into
push
filds
and
xor
rcrb
in
mov
xchg
mov
int
test
xor
inc
cmp
pop
je
js
xchg
loope
dec
fwait
mov
pop
test
push
xchg
iret
jns
out
sub
lods
cmc
test
aas
dec
cmpsb
adc
data16
in
push
xchg
iret
inc
cmp
xchg
pop
fcomip
fldenv
dec
jecxz
in
add
push
mov
add
cwtl
xchg
xchg
fwait
out
mov
repnz
mov
mov
clc
sub
rol
lock
hlt
les
lret
dec
lods
jnp
jnp
aaa
sub
out
jle
jb
pop
mov
lods
iret
xorl
inc
push
or
fldl
mov
in
mov
sub
imul
mov
test
add
xchg
push
stc
repnz
push
insb
fcomps
and
adc
mov
iret
add
push
sti
jb
xchg
cmp
aas
cmpsl
arpl
insb
mov
xchg
imul
pop
lret
icebp
and
mov
mov
adc
mov
addr16
fstps
movsw
je
shrb
dec
enter
mov
and
mov
es
jb
or
imul
add
pushf
sub
jl
ss
out
notb
mov
mov
xor
lret
add
xchg
inc
and
or
lahf
xchg
mov
mov
out
pop
push
xchg
push
mov
jo
adc
lds
mov
xchg
and
pop
insl
pushf
repz
push
ljmp
inc
xor
sub
pop
lret
sbb
or
daa
pop
sub
fisubrs
sbb
mov
pop
or
enter
lret
adc
mov
loop
out
jae
cmp
jb
pop
xor
fstl
les
imul
xchg
ret
mov
cmpsb
lahf
dec
jp
mov
push
fdivl
test
add
call
mov
loopne
dec
add
dec
data16
dec
loop
testb
les
shl
dec
outsl
pop
push
clc
sbb
rcll
aad
nop
dec
movsb
loope
xchg
inc
pop
repz
cltd
jo
out
das
mull
jle
ljmp
dec
sbb
stos
jmp
je
in
jge
ret
addr16
aas
cmp
mov
cmp
cmp
sbbl
rcr
cli
cmc
mov
out
xor
lret
xchg
fs
test
shll
insb
jnp
das
pop
adc
shr
jnp
aas
xchg
out
repz
fmull
out
addb
adc
jmp
lret
pop
fs
xor
mov
add
js
sbb
pop
out
dec
cwtl
lock
jg
push
push
cmp
sub
or
stos
inc
pushf
out
sub
push
test
xor
cwtl
mov
sub
outsl
adc
mov
sub
fcoml
gs
clc
in
jl
rclb
inc
fdiv
jmp
add
mov
sahf
push
mov
ss
stos
ror
push
je
movsb
arpl
pushl
mov
and
ret
fldenv
sbb
xchg
or
cmpsl
fcom
pop
adc
sbb
sbb
cli
in
jmp
arpl
xor
inc
adc
jae
pusha
sarl
ss
xchg
das
xor
push
jge
popa
fcmovnu
adc
ret
adc
adc
pop
daa
addr16
mov
cmpsl
and
std
or
push
andb
icebp
mov
sahf
in
lcall
push
inc
and
rorl
test
or
icebp
fcoms
dec
iret
pop
mov
add
ljmp
ret
repnz
sub
lods
lods
into
mov
out
mov
mov
or
push
cmp
movsb
pop
jae
or
push
push
inc
mov
lods
aas
repnz
stos
push
popa
jae
push
mov
or
popf
push
pushl
inc
aam
jmp
cmp
ss
jne
jle
test
xchg
sbb
xorb
rclb
lret
add
repz
pop
repz
sub
adc
aas
xor
jne
dec
add
aas
rcrb
xchg
outsl
bound
clc
test
mov
ss
int
dec
mov
repz
pop
lock
ss
ljmp
xchg
rcrl
cwtl
in
xchg
and
iret
shlb
dec
cmp
rcrb
out
movsb
out
xor
mov
xor
test
inc
push
enter
pop
repz
mov
xchg
mov
sub
pop
xchg
push
adc
add
or
test
cmpsb
js,pt
xchg
test
xchg
cltd
mov
jle
imul
adc
jae
scas
fldl
pusha
xor
mov
xchg
ss
aas
iret
imul
xchg
and
xchg
push
dec
int3
mov
pusha
ja
inc
sti
dec
fstpt
out
ds
lret
test
mulb
call
pop
jae
jb
lahf
push
inc
and
xor
js
pop
cli
sub
add
nop
scas
and
xchg
inc
sbb
mov
sub
in
fstp
jo
and
les
into
inc
cmpsb
out
ja
inc
aad
jo
sub
pop
or
mov
ds
xchg
pop
sbb
pop
outsl
inc
mov
js
jmp
push
and
or
test
sub
or
jmp
pop
aad
mov
adc
ds
xlat
xchg
push
sbb
lret
push
adc
mov
mov
push
lods
xchg
movsl
ss
sub
add
pop
push
push
add
std
dec
subb
sti
push
push
xor
ljmp
insb
pushf
je
test
inc
mov
and
movsl
add
sbb
scas
sub
jle
je
les
lret
push
sti
adc
push
mov
fnstcw
stos
push
pushf
mov
aam
xorl
fcomps
scas
popf
movsl
pop
jg
lea
fisttpll
stos
inc
stc
fwait
push
in
mov
shlb
xchg
fisubrs
cmp
rolb
dec
pop
push
clc
push
ds
pop
es
fsubp
jp
movsl
push
push
lock
xchg
jl
mov
inc
pushf
jo
sub
cltd
popf
push
loopne
les
mov
xchg
pop
addl
inc
test
pop
fmuls
dec
or
adc
mov
inc
jnp
mov
int
test
pop
adc
xor
pop
inc
imulb
ljmp
jg
adc
jecxz
pop
sub
in
pop
mov
sub
add
addr16
sub
jle
aas
hlt
xor
cmpsl
sub
add
cltd
or
fsts
pop
inc
adc
xchg
adc
and
test
sub
xchg
jb
inc
adc
mov
cmp
pop
push
es
sti
inc
adc
pop
xlat
jmp
shr
xor
cs
and
hlt
adc
test
pop
push
popf
hlt
orl
add
test
mov
sbb
and
shr
ficoml
testl
cmp
pop
testb
and
addl
fwait
test
jl
sbb
add
popf
roll
and
adc
or
and
rdtsc
aas
and
shlb
fs
fwait
mov
in
out
mov
cmp
repnz
fimull
js
xor
lods
jge
or
xlat
aaa
jle
addr16
shrl
dec
arpl
iret
int
add
dec
iret
and
xor
sti
pop
xor
jo
push
ljmp
pop
cltd
push
lahf
xchg
xchg
cmpsl
fwait
mov
or
orb
mov
in
jb
xorl
mov
dec
jbe
ss
jbe
cld
sbb
pushf
and
sbb
sub
pop
dec
jmp
mov
std
or
mov
flds
comiss
divb
sub
xor
fdiv
dec
ret
fdivp
sbb
jp
cwtl
pop
repnz
xchg
dec
ror
and
and
push
pop
dec
cmp
mov
dec
push
sbb
jg
adc
cld
push
mov
js
jno
mov
movsb
addr16
add
adc
inc
cwtl
xchg
test
scas
push
lods
cli
loopne
pop
stos
lahf
jmp
add
daa
lcall
pop
inc
cmp
sbb
dec
dec
subl
mov
cmp
inc
adc
aaa
adc
mov
in
add
push
lods
sbb
orl
and
add
dec
int3
lcall
pop
mov
js
mov
mov
jmp
sub
dec
aaa
xor
mov
lea
jle
jmp
dec
insl
in
ja
adc
push
xor
dec
hlt
xchg
movsl
mov
mov
test
lret
push
mov
xchg
dec
shll
pop
or
int3
push
pop
or
in
xlat
push
mov
xchg
imul
or
xor
repnz
rol
dec
cmc
dec
inc
inc
mov
jne
mov
imul
ds
push
adc
ja
pop
aaa
in
loopne
mov
fwait
cmp
push
dec
jae
adc
test
scas
clc
ljmp
cmpb
adc
scas
loopne
aam
fldl
inc
push
push
jno
aaa
repz
arpl
insl
mov
jl
shl
jae
idiv
xor
jnp
push
movsb
cmpsl
pop
mov
cmpsl
fwait
gs
xchg
and
dec
mov
jg
testl
mov
jne
lcall
test
mov
test
xlat
sub
imul
cmpsl
cmp
mov
mov
lds
mov
pop
add
orb
inc
incl
shll
stc
adc
nop
int
jns
cld
or
pushf
sub
push
repnz
push
cmp
das
sbb
add
pop
add
and
bound
pop
je
mov
pop
es
les
and
and
repnz
dec
sbb
jl
xorb
sub
rorl
bound
rorb
dec
lahf
or
cmp
or
push
or
pop
cmp
out
add
inc
cmpb
or
fs
adc
add
pop
jmp
adc
push
ds
into
xor
pop
mov
fistl
mov
fwait
inc
jmp
cwtl
fbld
pop
je
xor
mov
sub
fcomps
std
and
dec
xchg
jg
ucomiss
hlt
cmp
or
jmp
aad
adc
andb
pop
dec
inc
in
lret
and
pop
js
in
push
and
pop
ljmp
out
enter
aad
jb
aas
fcoml
ljmp
adc
adc
mov
jge
xchg
enter
fsubrs
rcrb
repz
outsl
sbb
sahf
push
mov
jmp
jnp
inc
lret
jp
pushf
dec
arpl
in
xor
repnz
gs
jae
pushf
mov
es
xchg
xor
aam
cmp
push
into
mov
inc
daa
and
or
xchg
popa
lcall
mulb
sahf
jns
sahf
aas
bound
mov
mov
enter
push
sbb
push
and
add
decl
jno
and
ljmp
movsb
sarl
push
mov
push
ss
outsb
sti
sbb
and
imul
bound
iret
test
xchg
inc
icebp
fisubrs
pop
cld
test
mov
rcll
in
ds
nop
cli
sar
sbb
imul
adc
sbb
push
sbb
sub
insl
out
bound
and
test
cmp
repz
lock
cmp
adc
cmpsb
movsb
inc
in
pop
bound
data16
push
mov
movsl
stc
add
out
or
dec
ss
aas
push
pusha
lock
xor
xchg
add
das
ficomps
push
in
add
pop
jb
pop
mov
out
lock
pushl
and
push
push
ret
shrl
xor
cmp
jp
mov
jecxz
xchg
push
xchg
xchg
xor
xchg
decb
pmullw
sub
add
dec
mov
or
mov
inc
or
in
cmp
push
repnz
or
cmp
stc
mov
sub
push
mov
shl
fdivs
fiaddl
outsl
je
add
jg
cmp
addr16
jne
sub
iret
movsb
cmp
loope
rol
lret
inc
sbb
clc
sub
push
and
les
sbb
fwait
nop
test
dec
outsl
and
std
fisttpll
jmp
or
in
push
out
mov
xor
cltd
int
data16
cmp
test
mov
loop
xor
cmp
jne
xchg
mov
lea
loopne
jbe
inc
add
jne
scas
mov
pop
cwtl
rol
or
je
fstpt
rorl
xchg
inc
jle
imul
cmp
roll
and
and
push
mov
movsl
jnp
sbb
sbb
dec
xchg
enter
in
dec
pop
ljmp
jbe
jmp
test
push
daa
loope
mov
adc
and
dec
push
cltd
adc
outsb
jns
das
cs
ret
xchg
mov
idiv
jl
in
xor
sbb
enter
dec
cmp
pop
lock
ljmp
jmp
out
mov
push
inc
call
imul
or
arpl
sti
ja
or
and
out
je
jecxz
stc
inc
fcmovne
jo
testb
repz
cmp
sbb
leave
jo
das
js
sbb
cmpsb
lods
cmp
mov
pop
cmc
pop
inc
dec
adcl
dec
repnz
xchg
mov
xchg
test
enter
loopne
movsb
movsb
pop
pop
or
jecxz
sahf
inc
add
sbb
jle
fstpt
push
jae
cwtl
test
mov
mov
push
push
iret
mov
aaa
sbb
adc
loop,pt
push
rcrl
mov
sarb
loopne
in
sbb
push
push
jbe
mov
jne
out
addr16
pop
xchg
add
lods
jne
fs
in
lret
xor
test
std
push
aas
lret
mov
lds
xchg
jae
jno
cmp
lcall
aaa
dec
out
in
push
jno
dec
movsl
xor
cs
test
jne
xchg
aam
push
or
and
mov
lret
add
sub
test
fisubs
fisttps
pusha
xchg
jl
mov
loop
loop
xchg
or
popf
out
push
adc
into
andl
xor
mov
lock
ja
jge
popf
pop
inc
rorl
adc
fdivs
test
xlat
mov
aas
cmp
mov
add
jbe
mov
int3
cwtl
sbb
cwtl
mov
in
mov
adc
subl
add
pop
call
cmp
jle
lods
lea
sub
pop
gs
int3
and
cltd
movsl
mov
sti
pop
adc
loop
insb
aad
xor
sarb
or
xchg
inc
cmp
xchg
jae
int3
enter
mov
push
dec
std
cltd
mov
dec
push
adc
call
das
lahf
xlat
mov
xchg
imul
and
inc
fisttpl
mov
out
cmpsl
cmp
xchg
fwait
add
sub
mov
inc
inc
test
mov
out
push
mov
xchg
outsb
or
popf
cmpsb
cmp
cs
into
je
notb
jnp
adc
bound
outsl
leave
inc
daa
cli
adc
daa
mov
loop
add
push
sahf
or
jmp
pop
popa
test
inc
ja
or
lret
shl
pop
pop
jne
dec
sbb
pop
sti
leave
mov
shlb
jae
idivb
add
push
cmpsb
add
push
xchg
cs
sahf
fsts
xlat
movsb
inc
or
mov
stos
test
add
sbb
rolb
or
xchg
mov
mov
and
lods
jne
imul
push
enterw
inc
lea
out
mov
sbb
push
dec
cli
into
mov
pop
push
jb
sbb
movsl
test
jle
cmp
fs
push
inc
es
mov
mov
mov
mov
xor
jp
adc
repz
cmp
and
xchg
mov
add
lds
mov
and
aam
flds
or
sub
cmp
fwait
sub
repz
icebp
insl
inc
or
mov
inc
enter
inc
and
clc
dec
in
idivb
or
jno
xor
movnti
scas
bound
jge
loope
mov
jns
repnz
mov
repz
movsl
mov
add
or
or
dec
mov
out
test
jns
jmp
xor
jbe
fcoms
jmp
push
orb
adc
sub
inc
mov
sti
stos
dec
or
fsubrl
pop
mov
aam
movb
icebp
neg
stc
sub
add
cs
jb
or
pusha
jg
push
or
dec
pop
std
insb
sahf
arpl
sub
jmp
dec
lock
call
add
jo
and
jns
pop
push
fistpll
mov
adc
xchg
mov
divb
dec
adc
dec
movsb
inc
push
dec
lret
stos
adc
jae
jge
sub
pop
and
xchg
xor
scas
pop
mov
mov
xchg
das
arpl
push
and
dec
cmp
ret
and
sbb
xchg
mov
dec
add
mov
filds
pop
daa
les
ret
mov
mov
loopne
mov
mov
dec
xor
mov
mov
scas
and
scas
xchg
xor
in
mov
mov
gs
cmpsl
call
or
lea
shlb
xor
jl
pop
pop
test
pop
scas
in
push
ja
or
imul
mov
rol
xchg
or
loopne
shrl
cmp
add
xchg
push
pop
add
leave
lcall
call
jmp
shlb
pusha
xchg
xchg
fwait
sar
mov
push
add
test
repz
or
inc
pop
das
int3
xchg
mov
adc
push
lcall
enter
out
mov
cltd
mov
ja
inc
sub
loope
adcl
dec
sub
int3
jne
inc
inc
ds
cltd
imull
cmpsl
sarb
pop
add
aaa
jb
add
mov
and
dec
jle
or
inc
scas
jb
jbe
cltd
sub
dec
and
out
out
jae
xchg
inc
nop
fldcw
imul
mov
jg
popa
in
pop
mov
xorb
dec
jnp
test
jge
sarl
lods
cmpsb
lods
push
les
jb
jmp
out
test
out
js
repz
fsubrs
mov
inc
push
add
xchg
or
daa
or
in
jne,pn
jae
xchg
loopne
cmp
lds
mov
jnp
aas
mov
jnp
fs
jmp
adc
push
pushf
enter
jp
xchg
xor
sahf
push
sub
jge
outsl
cmp
or
mov
and
flds
inc
add
inc
xchg
shll
mov
fsubl
inc
pusha
push
aaa
ficomps
mov
or
or
mov
orl
jmp
test
imul
andl
aas
js
movsl
inc
inc
enter
adc
jp
sahf
loop
jnp
mov
arpl
xor
test
mov
leave
sbb
pop
or
jmp
xor
andl
xchg
repz
movsb
dec
ret
testl
xor
mov
mov
xchg
xor
movl
pop
jg
inc
dec
std
sub
jge
jno
inc
orl
imul
lds
or
fadds
mov
mov
scas
sub
orl
sahf
jno
mov
cmp
cli
fcomps
ja
mov
cld
iret
xchg
push
xor
mov
dec
and
add
shlb
cmpsl
sti
inc
daa
jne
adc
inc
stos
xchg
xchg
mov
pushw
dec
push
repnz
dec
lcall
hlt
pop
lahf
jmp
loopne
push
jne
push
mov
gs
mov
fwait
xchg
xor
and
aaa
test
hlt
xor
xlat
dec
testl
push
sahf
jbe
sub
adcb
sbb
cmp
cmpsl
cmp
sbb
xchg
xor
adc
inc
and
lea
iret
into
jbe
lcall
cli
jae,pt
aaa
shlb
pop
pop
lods
jnp
test
js
mov
jecxz
jne
arpl
push
and
jbe
lea
mov
fdivs
mov
rcrb
sub
scas
dec
cmp
scas
inc
out
and
into
pop
test
adc
cwtd
in
mov
cs
fs
cltd
jl
daa
fs
decl
pushf
push
cmpsl
mov
popf
push
scas
xor
shrb
loope
xor
dec
ljmp
cwtl
sub
adc
xor
enter
stos
out
gs
sti
es
imul
mov
mov
int3
ljmp
addr16
or
push
lret
cmc
mov
xchg
ds
mov
lock
hlt
out
pop
pop
sub
test
jbe
sbb
pop
mov
and
aas
jle
out
or
ljmp
jmp
flds
repz
inc
adc
inc
int3
sbb
add
and
mov
daa
xlat
sahf
shl
pop
push
mov
aam
jg
or
pushf
mov
call
dec
cmp
bound
inc
push
arpl
jge
push
dec
roll
jle
repnz
dec
imul
inc
sub
sbb
jmp
or
fcomip
mov
and
cmp
mov
cmc
lods
xor
cmp
movsb
outsb
lret
addr16
inc
mov
movsb
test
push
ficoml
icebp
shrl
cltd
rep
dec
xlat
cld
mov
lds
adc
lods
mov
pcmpgtb
daa
sbb
fiaddl
fdivrl
in
cmpsl
loop
gs
pop
leave
es
fs
push
pop
pop
repz
mov
jno
mov
movsb
mov
pop
out
ds
scas
or
jo
inc
push
pusha
ret
mov
sarl
cs
out
push
fadd
lret
xor
inc
adc
push
nop
cmpsb
mov
lret
xchg
out
rorl
movsb
or
pop
call
jo
cmc
ret
ds
mov
mov
leave
fsubs
sbb
sbb
pop
push
outsl
popf
mov
mov
pop
inc
and
loope
negb
aaa
push
lock
pop
mov
orl
sahf
sbb
sti
mov
mov
inc
cmp
out
adc
adc
test
sub
jg
and
hlt
sahf
mov
jge
push
jle
daa
push
rclb
addr16
push
adc
push
stc
mov
dec
xorb
mov
xchg
es
pop
rcll
jl
mov
push
sbb
scas
add
aam
rcl
xor
xchg
xor
ljmp
cmp
std
out
push
cld
or
or
push
adcb
fnstcw
aas
fsubrp
fmuls
into
scas
jns
lret
sub
and
lcall
sbb
clc
aam
lret
lods
mov
das
inc
mov
push
ret
mov
xor
cltd
stos
and
xchg
xchg
or
pop
push
mov
test
bound
inc
fwait
in
adcb
fimull
test
and
push
sbb
add
cmp
inc
pop
pop
enter
push
hlt
add
mov
sbb
and
push
ret
and
and
cli
out
cmc
adc
ljmp
out
int3
dec
xor
lock
out
stos
aas
mov
xchg
decb
lods
xchg
or
mov
sbb
and
mov
es
and
and
cmpsb
out
mov
or
ret
sahf
mov
adc
aas
mov
or
fbld
mov
pop
jle
add
in
jg
cltd
adc
lds
stos
sbb
jle
frstor
push
dec
movsl
push
inc
add
adc
test
push
mov
lea
imul
and
dec
xchg
mov
jo
jae
push
hlt
mov
call
cwtl
fcmovu
imul
inc
clc
sub
loope
aas
aaa
pushf
adc
sub
lret
mov
fstps
mov
jnp
test
mov
pop
push
cmp
sbb
adcb
call
movsb
in
mov
imul
or
lea
ret
lods
mov
adc
mov
aad
push
pushf
lcall
mov
fidivl
pop
fadds
les
and
inc
insb
rcrl
popa
mov
and
in
nop
inc
xchg
movsb
aaa
fsubp
mov
mov
add
mov
loopne
sub
data16
cmp
push
adc
cmp
jns
adc
cmp
inc
mov
daa
pop
aam
in
lret
movsl
orb
fptan
dec
rolb
adcl
and
sbb
fwait
sbb
popa
cli
ss
sub
and
jmp
test
adc
lret
mov
rorw
pop
push
roll
cwtl
and
add
dec
push
pop
adc
adc
mov
mov
cmpsl
filds
xchg
and
aas
test
in
mov
pop
lret
into
cmpsb
dec
xchg
rcr
xchg
add
in
jbe
and
pop
dec
dec
ret
add
mov
inc
imul
xchg
or
lret
sbb
aad
xchg
adc
sub
xor
mov
dec
dec
idiv
stos
jmp
mull
fdivrs
adc
adc
lcall
dec
cmp
cmp
lods
push
dec
adc
cltd
sub
aad
lret
xchg
lods
aas
jecxz
mov
jl
ja
pop
repz
test
test
scas
or
gs
sbb
pop
loop
int
jbe
lds
pushf
adc
stos
jge
andb
and
fs
xlat
rolb
push
adc
and
and
std
cli
out
push
push
xor
mov
movsl
pop
jnp
cltd
jmp
int
jmp
icebp
arpl
xchg
sbb
push
repnz
push
cmp
sbb
mov
mulb
xlat
in
es
mov
fisubs
inc
mov
pop
cmp
aad
sbbb
jmp
pop
imul
cli
or
xchg
pop
push
mov
sbb
pop
orl
jno
jecxz
sub
sbb
orl
dec
movsl
not
mov
cmp
and
or
test
pop
lret
mov
mov
movsl
lods
mov
jbe
andl
stos
shrl
ja
sbb
push
mov
test
rcrl
and
imul
leave
add
pop
frstor
arpl
fisubrl
fmulp
dec
test
test
push
cmpsb
ds
sbb
roll
mov
jnp
xor
mov
loop
or
inc
push
out
scas
sub
lods
sbb
mov
sub
cmpl
fldcw
fidivs
jnp
xor
insb
in
fwait
lahf
pop
push
xchg
xchg
nop
adc
es
or
hlt
mov
lock
inc
mov
mov
fsubr
nop
mov
movsb
pop
xchg
push
fsts
ja
pop
cmp
dec
fistpll
stos
pop
push
jae
outsb
fcompl
jo
idivl
rcll
cs
imul
mov
pop
jecxz
xchg
scas
outsb
cmp
push
lock
mov
and
mov
mov
inc
hlt
lret
cmp
mov
test
and
xchg
std
rol
and
cmp
pop
xchg
mov
xchg
shrl
sbbl
fisttps
pop
out
lret
mov
mov
idiv
out
inc
lcall
add
pop
jl
testb
int
lds
call
adc
cltd
xor
push
cmp
xor
lock
jne
cmp
jne
and
cmp
inc
mov
mov
adc
xor
in
repz
scas
decl
cmp
xor
inc
insb
push
pop
push
xchg
cs
pop
andl
divb
test
jge
lret
pop
xor
push
add
fstpt
mov
nop
and
xlat
xchg
sahf
sub
adcb
or
dec
lea
add
and
out
dec
lret
push
aam
mov
inc
push
and
ror
jge
or
jnp
lret
movsb
data16
insb
hlt
repnz
pop
pop
es
xlat
or
dec
packsswb
mov
xor
xchg
push
fnsave
add
nop
jne
ja
out
inc
mov
cltd
mov
test
scas
insb
xchg
add
fsubl
dec
jo
sub
inc
or
adc
pop
sub
add
sbb
mov
cmc
mov
add
xor
mov
iret
adc
and
daa
or
jecxz
lea
cmc
or
out
cmp
dec
jl
popl
cmpsb
sub
dec
push
add
jmp
jo
cmc
ljmp
je
pop
inc
cld
jg
push
pop
pop
daa
sbb
pop
mov
pop
jb
gs
daa
cmp
jg
mov
rorl
inc
lcall
jns
mov
scas
cld
lcall
out
movsl
fdivp
lret
and
jnp
cltd
jnp
push
xchg
jl
sarl
jns
pushf
pop
and
pop
inc
scas
add
inc
adc
add
dec
mov
popa
mov
movb
jecxz
push
or
test
and
je
and
stos
pop
xchg
stc
sbb
adc
xor
and
mov
test
sub
out
incl
xor
sti
rcl
or
mov
push
xor
fwait
sbb
subb
pop
pusha
cli
push
nop
arpl
je
imulb
das
jno
adc
mov
test
mov
fcmovu
mov
in
and
xchg
icebp
daa
mov
xchg
mov
adc
mov
sub
aaa
test
movsl
jecxz
jnp
int
cmp
sbb
fldenv
adc
cmp
addr16
out
pop
cltd
adc
and
pop
dec
push
rclb
leave
pop
inc
ss
lahf
mov
repnz
mov
xchg
mov
lods
inc
jns
lods
inc
xor
sbb
sbbb
pushf
dec
lods
je
sub
sub
jbe
lea
cltd
jne
daa
popa
fcoml
jecxz
jge
jbe
pushl
mov
lods
add
inc
test
jge
push
adc
push
stos
clc
inc
dec
inc
enter
cmp
test
inc
or
sbb
pop
fisubl
lahf
and
icebp
jle
test
rolb
mov
subb
sbb
push
cmp
insl
or
out
arpl
cmp
sbb
pushf
inc
enter
in
lret
cltd
and
addr16
cmp
fs
push
mov
mov
out
outsl
rcrl
push
xchg
jno
add
jmp
cmpsb
push
adc
mov
xchg
mov
push
push
in
jns
sbb
push
xor
and
dec
mov
xchg
xchg
movsl
mov
fpatan
fiadds
ss
mov
lcall
arpl
jbe
incl
ret
mov
scas
add
fs
sub
imul
lock
ljmp
and
xchg
mov
outsb
test
fidivl
pushf
jae
jg
jne
add
je
scas
mov
push
jp
sub
bound
imul
ret
xor
inc
in
int3
sti
sbb
push
test
mov
cmp
add
arpl
push
or
adc
lds
adc
mov
sahf
aad
rcrl
jnp
adc
negb
ljmp
push
subb
lock
mov
mov
mov
mov
xchg
ror
iret
pop
iret
dec
std
iret
add
rcl
mov
mov
movsb
dec
push
mov
add
jae
pop
xor
loop
and
repz
mov
arpl
adc
add
and
jg
dec
push
jg
push
or
pop
lret
orb
and
jae
fimuls
pop
insb
repz
stos
jle
mov
aam
inc
mov
dec
test
rcrb
lods
jmp
add
push
xor
insb
adc
sbb
jmp
loope
div
push
lock
and
dec
push
push
inc
mov
mov
mov
or
and
cmpl
mov
or
es
xlat
push
and
mov
pop
call
aaa
adc
and
cmp
lcall
dec
mov
out
jae
mov
gs
pop
pmaddwd
not
jmp
rorl
les
int
clc
sbb
inc
mov
xor
mov
roll
cltd
std
mov
ds
inc
inc
pop
xor
dec
in
clc
into
sarb
inc
xchg
cli
cmp
loop
int
aaa
std
and
cmp
adc
xchg
cmp
mov
push
jbe
mov
mov
xorl
push
nop
imul
push
dec
fidivrl
xchg
rcrb
mov
insl
stos
xchg
and
mov
fs
ret
pop
fsubp
pop
mov
mov
mov
or
ret
lret
sub
movsl
push
nop
push
scas
push
or
jb
ret
sarb
scas
mov
out
inc
add
aad
cmc
jg
xor
cmpsl
bound
xchg
sub
jb
repz
icebp
fildl
das
mov
xor
ret
mov
fadds
xchg
into
adc
xchg
sub
divb
std
push
mov
dec
movntps
je
mov
pop
cmp
lock
push
shll
sbb
fs
pusha
insl
cmp
dec
shl
ret
xorl
xlat
pop
add
imul
xor
pop
sti
add
cld
sbb
inc
loop
sahf
mov
jae
das
mov
sub
sarb
jns
jp
push
mov
jecxz
std
fidivrl
xchg
sub
leave
fsub
test
adc
pop
aad
jp
adc
icebp
push
add
jmp
in
cwtl
mov
inc
xchg
mov
add
adc
mov
imulb
in
jno
mov
adc
or
fstpt
mov
and
cwtl
add
or
pop
jg
ret
lock
cwtl
out
sbb
mov
pop
add
test
pusha
xchg
sub
push
mov
add
cltd
lods
xor
cmp
mov
push
and
outsb
and
lods
sub
stos
popa
enter
mov
outsl
sub
mov
push
daa
add
cld
ljmp
jb
lods
lea
jo
scas
xor
jmp
loope
adc
mov
jnp
js
xchg
dec
add
jg
pop
scas
popf
adc
xchg
or
xchg
jge
in
xchg
roll
ja
sub
adc
rcrb
adc
sete
mov
xor
pop
xor
test
adc
mov
xchg
inc
xchg
jle
mov
or
iret
jae
fsubrs
cmp
jae
movups
data16
nop
movsb
shrb
jp
fstps
adc
add
cmp
cli
sbbl
pop
pop
push
dec
xchg
cli
pop
imul
push
sub
jge
loopne
or
fdivs
lahf
or
int3
cmp
pop
gs
scas
int3
addr16
popa
mov
jl
add
inc
adc
and
mov
dec
cltd
xchg
aas
hlt
jbe
subb
aas
clc
outsb
imul
scas
pop
xor
loopne
paddusw
xchg
movsb
mov
std
push
push
jp
push
mov
or
push
xchg
xchg
cmp
cmp
mov
add
and
sub
inc
movsl
cmpsb
dec
cli
lock
inc
cmc
xlat
rol
mov
cld
xchg
xor
lret
aaa
daa
sub
test
movl
jae
mov
xchg
pop
mov
popf
sti
inc
sbb
xchg
imul
mov
int
mov
mov
stc
int
mov
pop
mov
xlat
es
cmp
rcll
addr16
push
iret
add
int3
test
test
pop
clc
popf
sbbb
outsl
jl
cmc
add
ljmp
or
jl
dec
cmp
and
push
push
dec
subl
adc
push
das
aaa
sbb
and
sbb
cmc
inc
imul
out
jg
fs
push
lock
jo
mov
inc
and
cmp
idivl
and
aas
or
rcrl
lds
mov
mov
bound
mov
and
mov
inc
add
sbb
stos
repz
cli
add
enter
cld
jmp
mov
int3
mov
fs
mov
int3
test
mov
mov
pop
inc
push
push
jmp
dec
mov
enter
filds
pop
stos
sbb
cwtl
sti
push
mov
jo
pop
sahf
mov
insb
and
sbb
or
arpl
loope
pusha
cmpsb
inc
in
cltd
xchg
test
ret
add
mov
leave
mov
ret
cmp
incl
lcall
xor
adc
pushf
mov
cltd
fcmove
gs
xchg
add
movsb
fwait
adc
mov
jmp
sbb
outsl
shl
jns
sub
adcb
cltd
iret
adc
aas
push
mov
push
jg
lret
cmpsl
sub
dec
ja
mov
jae
cltd
adc
mov
lods
fstpt
hlt
sahf
inc
test
mov
scas
movsl
push
andl
out
je
lret
outsl
and
fisubs
push
hlt
aaa
out
outsl
pop
out
sbb
into
repz
add
xchg
jo
xchg
pop
rol
aad
and
out
pop
stos
mov
mov
insl
sbb
xchg
or
mov
hlt
cwtl
xlat
lea
pop
and
imul
and
loopne
mov
fs
adcl
or
shrl
fsubrs
sbb
mov
jl
ja
jmp
mov
loop
and
or
sbb
xor
cmp
jp
sub
lret
xor
out
mov
mov
pop
sbbl
stos
cs
push
dec
out
xchg
xchg
push
jns
jle
mov
insl
mov
xor
sub
leave
jmp
pop
pusha
lods
gs
jp
xor
mov
mov
lret
push
mov
sub
jno
repz
dec
xchg
or
jmp
outsl
mov
out
jnp
cltd
call
mov
and
nop
mov
sbb
sbb
sub
push
aaa
and
repnz
leave
cmc
mov
in
aaa
insl
fnstsw
adc
ret
movsl
xor
aad
sbb
xchg
shlb
and
movsb
fsts
divl
test
test
fwait
adc
mov
stos
push
mov
adc
popa
mov
inc
xchg
daa
fsubrl
jl
lods
add
xor
push
mov
stos
test
lods
stos
repz
sbb
addr16
pop
xor
dec
push
xor
fidivrl
inc
push
es
jb
pop
and
test
dec
add
inc
orl
and
xchg
dec
jle
or
xor
inc
mov
fistpll
xchg
in
arpl
xchg
adc
insl
or
sbb
out
outsl
js
repz
cmp
lahf
sbb
mov
jecxz
mov
fcoml
call
mov
mov
cltd
leave
dec
shl
add
repz
outsl
aam
dec
lods
test
pop
or
out
jl
popa
sbb
dec
movsb
xchg
jecxz
xlat
jle
test
mov
mov
js
xor
pop
or
int
push
clc
lock
jne
and
push
setg
xchg
mov
pop
and
add
ja
xchg
xchg
mov
and
mov
mov
inc
and
mov
sbb
sub
cs
lods
ret
dec
mov
or
adc
std
xchg
xor
jb
icebp
mov
call
outsl
dec
dec
add
jno
pop
or
scas
xchg
jg
call
outsb
dec
dec
mov
push
adc
das
mov
and
int
pop
cmp
not
pop
scas
xchg
dec
sub
jp
test
repz
sbb
adc
and
rolb
rolb
sub
mov
lcall
mov
pop
jmp
mov
cmc
loop
aad
pop
cmp
pop
aas
cld
out
int3
aad
aad
or
push
inc
push
or
rolb
cmp
or
xor
jg
sahf
cmpl
scas
loopne
xor
outsb
mov
or
loope
imul
adc
mov
sub
rorl
cmp
adc
mov
aam
sub
add
pusha
cmp
aam
mov
mul
add
arpl
xor
scas
pop
clc
jmp
cmpb
inc
push
push
and
mov
or
push
int
cmp
pop
rorb
mov
jmp
xor
pop
jnp
imul
sub
inc
mov
ljmp
mov
cltd
push
xchg
mov
pop
ja
lock
mov
notb
aad
cmp
inc
inc
cmpsb
addr16
shll
leave
dec
jle
mov
xchg
sbb
out
adc
clc
test
test
sbb
addl
ficoms
outsl
xchg
jle
test
in
mov
sar
xor
pop
lds
jge
pop
aam
addb
jbe
push
jb
and
dec
mov
imull
leave
inc
jmp
dec
andl
mov
call
jp
jmp
pop
roll
sub
pop
stc
gs
cmp
push
xchg
mov
rcl
add
cwtl
mov
pusha
cmc
pop
ja
sub
sub
mov
fisubrs
iret
hlt
mov
mov
xchg
mov
ljmp
imul
jp
jno
outsl
lcall
pop
pushf
xorb
mov
dec
in
xor
push
out
or
out
orb
mov
jno
jle
jmp
nop
mov
imul
mov
incb
mov
add
inc
push
lods
shrl
lret
mov
mov
mov
and
pusha
stos
sbb
jbe
add
outsb
sbb
pop
mov
aad
lds
add
jo
stos
xchg
lods
add
add
and
cmpsl
adc
in
fiaddl
sarl
shlb
lahf
push
lock
sbb
add
aaa
cs
call
out
push
mov
negl
mov
js
movsb
or
inc
ja
mov
fidivrl
in
push
sbb
xchg
shr
mov
and
cltd
dec
in
outsl
xchg
cli
xor
insb
cmc
dec
cld
ss
or
int
cmpsb
sbb
loop
pop
sti
add
into
xor
shll
clc
paddsw
inc
movsl
push
push
aam
nop
out
fdivl
cld
push
leave
aam
inc
add
pop
into
jno
ja
or
rolb
gs
mov
or
lods
push
xchg
mov
pop
mov
rcrl
addr16
adc
cmp
or
daa
stos
mov
sbb
jmp
cld
xchg
imul
sti
test
mov
pusha
and
fs
out
sub
rorl
dec
dec
test
mov
jnp
add
push
push
jno
sub
sbb
gs
dec
add
push
clc
add
outsl
sbb
int3
call
pop
aas
aam
rcrb
xchg
bound
jge
inc
push
fimull
push
into
pop
lock
jmp
jge
mov
add
imul
mov
lret
mov
pusha
fcoms
fidivl
notl
add
js
fstps
cld
addr16
sub
repnz
add
les
mov
mov
cmpsl
xchg
mov
clc
and
popa
cmpl
lcall
lods
or
push
bound
js
adc
xlat
pop
aas
imulb
push
mov
push
mov
cmp
cmpl
pop
or
hlt
aaa
adc
mov
lcall
pop
and
std
sbb
mov
in
inc
mov
das
das
out
jp
in
pop
or
jb
cmpsl
adc
icebp
adc
dec
ror
repz
pop
roll
inc
stc
xchg
or
mov
xor
rorl
dec
out
rcll
in
inc
gs
or
mov
sti
fwait
and
push
testb
jle
and
inc
cmp
fidivl
loopne
movsb
lods
pop
notb
fsts
mov
rolb
inc
in
cli
mov
jae
jmp
sbb
dec
dec
xchg
mov
pop
out
js
sti
jl
mov
sub
adc
inc
add
add
pop
shlb
mov
mov
jo
lret
jmp
cwtl
shlb
cmp
push
sbb
mov
ret
test
push
sbb
adc
popa
mov
jle
mov
mov
dec
or
clc
mov
mov
xchg
mov
and
dec
out
fstps
aad
inc
or
and
dec
in
mov
cmp
test
lock
idivb
dec
jp
xchg
xor
mov
jbe
sbb
push
clc
aaa
clc
incb
aad
mov
sub
cmp
add
add
data16
xchg
or
pop
daa
jae
ljmp
movsb
les
mov
fcomps
out
xchg
pop
inc
call
lds
xchg
je
push
in
pop
xlat
pushf
add
test
mov
jp
xchg
xchg
andb
push
popf
int
xchg
test
and
adcl
pop
movsb
mov
out
mov
out
add
jb
and
xchg
loop
in
incl
fcmove
shrl
mov
enter
xchg
jge
lret
clc
faddl
or
jnp
int
popa
lds
and
out
in
jl
xor
jmp
daa
and
jbe
or
int
and
dec
push
mov
mov
inc
je
cltd
or
push
cmc
inc
movsl
xor
je
jge
push
mov
pusha
pop
ror
enter
mov
push
xor
push
mov
cmp
or
push
inc
stc
jmp
lock
fstpl
pop
dec
cmpsb
xor
divl
jbe
or
sub
shll
fwait
or
add
lcall
lcall
ds
xchg
into
xchg
mov
lret
nop
cmovae
fwait
fs
repnz
mov
rorb
mov
pop
scas
mov
jge
rol
jb
bound
aad
icebp
xchg
mov
fcmovu
js
aaa
jecxz
mov
push
sub
imulb
mov
push
jg
popa
test
dec
fimull
pop
xchg
rcrb
testl
movsl
inc
push
aam
adc
mov
data16
nop
cmc
and
fsts
xor
sti
cmp
leave
fnsave
push
rcrb
mov
xor
xchg
mov
ficoms
mov
cmp
xchg
movsb
lcall
std
cmp
sbb
mov
cmc
sub
mov
lcall
hlt
out
xchg
dec
sub
aad
mov
data16
repz
daa
add
push
repz
cli
xchg
lods
or
sbb
dec
js
adc
cld
testl
loopne
adc
dec
push
hlt
je
xor
cmp
cmc
das
in
push
out
jns
pop
pop
mov
dec
jle
push
int3
into
lods
add
and
lret
jae
subb
push
aaa
decl
jo
jge
out
mov
dec
rcl
sbb
mov
xchg
sub
imul
pop
stos
sbb
pop
les
or
jmp
jl
or
iret
xor
mov
clc
shlb
ret
in
xor
out
jmp
pop
jae
mov
stos
mov
mov
stc
xor
dec
jbe
pop
and
icebp
int3
into
mov
mov
adc
inc
sub
mov
sub
mov
jmp
push
aad
out
add
lods
mov
inc
cs
cmp
dec
cmp
pusha
push
pop
pushf
and
pop
pop
push
pop
sbb
lock
bswap
mov
out
orb
loope
pop
repz
mov
lea
jne
sub
ret
adc
test
stc
and
mov
inc
sub
mov
xchg
mov
adcb
aad
jp
lds
add
and
jmp
mov
cltd
rcrb
jno
sbb
ret
or
xor
es
inc
into
xchg
inc
out
jg
pop
mov
jp
popf
inc
cmpb
nop
mov
rol
jnp
popf
sti
mov
pop
cmp
push
out
aad
mov
jbe
jne
fisttpl
notl
xchg
cmc
ljmp
xor
jge
jmp
xchg
mov
xor
adc
mov
rorl
fnstsw
mov
mov
xchg
ror
ret
pop
nop
shlb
faddl
push
add
add
xchg
ret
xchg
mov
add
sbb
repz
pop
aam
xor
mov
repz
aas
jae
mov
mov
std
aad
sub
add
adcl
ret
in
or
enter
outsb
jbe
cmpsb
icebp
add
sbb
loop
fisubrs
ret
cmp
pop
or
pop
push
or
out
fldt
xchg
cs
add
add
jbe
xchg
mov
mov
test
mov
push
jns
test
xchg
fwait
mov
mov
adcb
sub
fcoml
xchg
lea
jno
lods
pop
out
shrb
popa
sub
popf
loop
imul
push
xor
rorb
pop
mov
pop
fidivl
fists
push
adc
iret
xchg
sbb
push
add
dec
xor
js
push
cmp
jae
sub
icebp
jmp
das
popf
imul
ret
adc
sbb
push
es
cmp
dec
jmp
sbb
mov
inc
mov
aas
test
adc
inc
mov
mov
sub
ja
in
mov
out
mov
push
arpl
insb
sub
addr16
jl
out
in
jle
jo
shrl
cmp
push
mov
int
mov
outsl
out
add
je
ljmp
aad
fimuls
inc
sub
push
mov
pushf
cmp
imul
fisttps
fnstenv
cwtl
sub
xor
xor
mov
pop
aad
rcrb
test
int3
mov
les
xor
xchg
xor
cmpsb
sbb
rcll
mov
pop
and
shlb
mov
mov
cmp
mov
mov
inc
mov
movaps
loope
sbb
sbb
sub
jge
and
stos
in
push
mov
jo
lret
cs
ja
testl
push
scas
push
test
jb
jmp
icebp
push
cli
inc
test
or
cmpsb
pop
sub
and
ret
mov
fldl2t
xchg
and
icebp
fldl
decl
das
pusha
je
mov
push
daa
nop
jns
pop
mov
fnsetpm(287
cld
and
cmp
mov
pop
jo
mov
cmc
ja
out
leave
fdivrp
sbb
or
fbld
push
dec
jne
lock
jp
or
std
cmpsl
in
ret
pop
fxch
fstpt
cmp
call
or
enter
inc
sarb
mov
cmp
mov
or
push
xchg
cmp
outsl
arpl
sub
ret
test
or
xor
iret
push
jb
pop
pop
sub
jnp
insb
push
jecxz
push
sbb
ja
and
pusha
and
cld
xchg
or
imul
mov
inc
sub
dec
testb
jp
adc
inc
scas
and
jb
xchg
out
dec
les
les
fwait
mov
push
enter
popf
rorb
dec
data16
insl
cmpsl
lods
cli
inc
adc
push
jp
lea
and
lcall
or
xchg
test
xor
test
pop
cmpsb
sub
and
imul
xchg
add
lcall
ret
pop
xchg
rcr
adc
inc
pop
inc
ffreep
push
push
popa
test
mov
bnd
repnz
jne
call
mov
fucomi
insl
cmp
push
lock
call
jecxz
adc
push
xor
fstpt
sub
movsb
imul
add
and
sub
pop
push
mov
add
mov
xchg
push
sti
adc
dec
jp
add
outsb
mov
xor
cmp
adc
push
and
mov
or
inc
pop
mov
dec
cld
mov
test
mov
and
add
add
fwait
popa
mov
mov
arpl
and
out
cmc
sti
xchg
push
jno
std
pop
mov
push
push
add
jae
lea
inc
dec
pop
call
mov
sub
fs
xor
stc
mov
sub
ret
add
dec
sbbb
jnp
arpl
mov
mov
pushf
cmp
shl
mov
push
sub
aas
xchg
cwtl
mov
out
into
or
loopne
xchg
and
aam
sub
bnd
je
xor
enter
push
idivl
test
inc
idivb
lock
sbb
gs
mov
pop
xor
xchg
ficomps
mov
iret
outsb
call
mov
sbb
repz
mov
andl
fcoms
push
frstor
dec
cmp
or
add
jle
addl
xor
inc
and
out
cmpsb
xchg
add
das
pop
fdivs
idivb
int
xor
popl
loop
mov
mov
cmp
xor
cwtl
mov
test
arpl
adc
leave
inc
push
enter
mov
and
inc
lcall
sbb
repz
sahf
cmpsl
pop
lahf
cmpsb
adc
sub
cvtps2pi
jle
sub
sbb
test
shr
rclb
or
enter
mov
pushf
jno
lret
mov
dec
cwtl
in
les
lcall
arpl
or
dec
data16
cwtl
xor
xchg
mov
pop
mov
fcomi
fcoms
stos
inc
pop
pushf
dec
fadds
ffree
and
out
pop
dec
pop
bound
pop
enter
add
es
loop
adc
popa
jmp
std
mov
jno
mov
fcoml
mov
mov
pop
jo
movsb
das
push
test
lcall
ja
sub
cmp
and
and
jno
test
pop
sti
sbb
fs
mov
cmpsb
cmp
jge
or
and
jno
mov
sbb
mov
pop
arpl
xchg
popa
popf
xchg
pop
inc
inc
lock
in
xor
xor
pop
add
push
sbb
fisttpl
push
mov
inc
mov
jns
adc
lods
jl
es
nop
or
jns
add
cmp
pop
mov
mov
repnz
push
cmp
push
mov
inc
mov
push
pop
push
cwtl
ja
cmpsl
mov
ret
mov
ja
js
push
scas
push
int
lcall
rolb
aas
xchg
and
add
fisttpl
xlat
mov
jnp
push
or
lods
adc
and
mov
sub
negb
pop
mov
push
sar
sbb
push
cmpsl
ss
stos
push
in
sbb
in
fldenv
and
sub
cmpsl
xchg
xor
jge
jnp
cltd
jp
std
mov
fmuls
dec
sub
dec
sbb
sbb
movsb
xor
cs
mov
fnsave
test
bound
mov
ds
mov
es
mov
sti
stos
mov
enter
pop
or
cwtl
cmp
stc
sub
fistl
mov
fwait
ss
out
addr16
lock
lock
in
lahf
adc
mov
out
mov
aaa
shll
rcl
push
mov
loope
mov
sub
in
pop
imul
insl
lret
test
out
mov
mov
xchg
and
jecxz
and
and
jnp
xor
in
out
fst
aad
inc
outsl
xor
jmp
lods
dec
cmp
mov
addr16
xlat
jo
sbb
int
scas
mov
and
inc
call
lock
pop
pop
pop
xchg
daa
mov
xor
jmp
inc
andl
in
imul
ret
xor
shl
pop
lcall
insb
push
popl
jl
mov
loop
popf
sbb
and
imul
dec
or
arpl
dec
mov
inc
sahf
adc
sbb
push
mov
pop
mov
jns
pushfw
sbb
mov
into
lds
and
rorl
pop
pop
jecxz
shrl
les
insl
sub
xchg
sti
or
aaa
fistps
and
jl
leave
mov
call
in
sub
inc
stos
push
add
cli
aaa
or
adc
mov
inc
push
xchg
in
mov
fcomp
push
fiaddl
and
lret
shr
xor
mov
and
outsb
or
mov
lds
cmp
add
push
or
and
push
mov
daa
sbb
push
sarb
dec
inc
fstpl
push
popa
cmpsl
shrb
movsl
mov
fisttps
inc
fwait
inc
mov
inc
jne
lods
xor
jno
inc
inc
das
cmp
cli
mov
jb
test
mov
outsl
add
bound
call
outsb
lds
test
bound
stc
sti
xlat
sub
fstpt
jl
lahf
cmp
leave
and
dec
cmp
popa
mov
sub
dec
ret
insl
sub
adc
adc
lea
das
aam
xor
adc
fadds
sbb
xchg
test
cmp
sbb
out
js
shlb
adc
sbb
popf
mov
lds
xchg
in
lret
mov
es
mov
cmpsb
push
imul
iret
lods
fisttpll
xor
mov
mov
inc
add
or
xchg
std
movsb
std
loope
push
divl
xlat
inc
ret
adc
scas
cld
push
dec
adc
pusha
je
icebp
jmp
lods
or
jo
mov
cmp
enter
sti
test
shl
cmp
js
cmc
sub
shlb
add
std
dec
adcb
sbb
shrl
mov
adc
and
push
pop
xor
jge
jg
mov
shrb
sub
orb
mov
cs
addr16
add
cli
or
add
cmc
pop
pop
add
es
gs
mov
adc
out
push
pop
lahf
std
adc
addr16
cwtl
mov
and
sbb
mull
icebp
insl
leave
jle,pn
mov
out
mov
ja
popa
in
call
sub
xchg
or
js
mov
mov
sbb
out
sub
jg
cmc
jge
scas
popa
fdivr
leave
and
insl
stos
sbb
push
sbb
inc
sub
call
popf
sub
mov
sub
faddl
call
cmp
xor
aam
jp
lret
mov
mov
inc
int3
mov
movsb
xchg
incl
aas
rcrb
xchg
roll
inc
dec
or
call
hlt
roll
dec
into
adcl
jne
idivb
je
push
leave
lods
imul
lods
adc
xchg
addl
enter
jp
out
cltd
inc
inc
es
sbb
es
je
fcomi
cmc
ficomps
adc
jb
sbbb
repz
inc
cwtl
push
adc
mov
imul
cltd
push
test
pop
lcall
adc
pusha
leave
cmpsl
test
sbb
xchg
lahf
adc
test
jns
push
lret
sub
fcoml
add
test
imul
cld
orb
lret
stos
xlat
mov
mov
xor
clc
push
pop
cld
jae
pop
stc
sbb
call
mov
and
test
jnp
sarb
out
repnz
xchg
jno
pop
lcall
imul
daa
cltd
int3
push
dec
scas
and
sbb
inc
push
aad
es
push
sub
stc
pop
cld
xor
dec
sbb
out
lds
ja
int3
lock
dec
shl
jne
std
idiv
loop
shrl
mov
repz
pop
test
xor
hlt
testb
leave
sbb
shll
adc
add
shlb
cmp
jb
mov
dec
jp
sti
fsubl
test
lret
lods
mov
dec
dec
mov
inc
push
mov
loop
jne
aad
adc
gs
push
jb
sbb
scas
test
aas
stos
push
push
adc
mov
sub
push
out
mov
xbegin
cmp
pusha
add
aad
cld
jns
arpl
fiaddl
mov
jg
es
mov
shll
icebp
cld
loopne
scas
dec
stc
add
cmpsb
pop
notl
cmpsb
gs
dec
call
dec
or
aad
mov
dec
outsl
bound
mov
or
inc
pop
adc
cmpsl
mov
test
test
and
pop
sub
mov
xchg
push
das
scas
mov
stos
ss
les
aam
arpl
repz
pop
cmp
imul
xchg
lods
sbb
mov
adc
movsl
mov
gs
movsl
pop
imul
lods
sub
cs
cmp
mov
arpl
push
xor
dec
jno
andl
mov
pop
pop
xor
cmp
mov
lock
xor
scas
mov
pushf
fstpt
mov
adc
lahf
shrb
pop
lcall
dec
xor
nop
cmpsl
shl
mov
movsb
test
shrl
dec
jb
stos
sbb
and
cli
icebp
cld
out
inc
cld
push
test
inc
and
cmp
mov
lods
arpl
push
jb
mov
jne
fistl
inc
push
mov
mov
mov
fbstp
or
sub
dec
xor
test
sbb
mov
cmp
cs
jae
push
aaa
push
lods
inc
mov
push
ljmp
jns
sub
pop
lods
jmp
inc
inc
adc
jmp
pop
sub
hlt
sbb
notb
push
nop
sarl
pop
jmp
fists
add
xlat
out
mov
sub
pop
cltd
out
test
testl
sti
lcall
jns
xor
xlat
dec
cmpsb
inc
or
lea
cli
jns
adc
popf
std
push
mov
movsb
enter
ss
mov
jle
mov
push
jmp
mov
lcall
inc
lahf
rcrl
and
xchg
sahf
insb
push
pushf
ds
dec
fdivrl
enter
cmp
sub
add
repnz
mov
mov
cmp
test
sbb
dec
out
sarb
xor
loope
mov
sahf
std
jne
lcall
jb
sbb
fsubrp
shll
mov
push
cwtl
stos
push
js
in
cmp
cld
insl
lahf
push
fldt
dec
xor
scas
bsf
push
jnp
aam
enter
mov
cmpsl
mov
movsl
maxps
icebp
dec
xchg
cmpsb
cmp
pop
xor
and
out
je
xor
xor
mov
adc
and
mov
pop
out
cmp
aam
dec
push
cmpsb
lret
shlb
mov
jno
xor
add
les
pop
cltd
nop
cs
jo
imul
dec
call
cmc
cld
or
cli
inc
movsb
push
stos
pop
push
jae
push
push
mov
mov
mov
and
stc
dec
or
repnz
dec
mulb
push
mov
adc
loop
stc
pop
and
jne
ret
xor
and
push
insl
xchg
in
mov
enter
add
pop
add
cld
out
mov
loop
push
out
movsl
push
push
add
fimull
mov
test
xchg
std
cmpsb
inc
mov
dec
sbb
mov
lahf
sub
les
jae
mov
lahf
mov
inc
inc
rol
add
pop
in
add
subl
cmpsb
inc
pop
mov
inc
sub
repz
aas
dec
cmc
outsb
inc
jmp
jmp
add
mov
push
sub
popa
pop
mov
jg
mov
ds
addr16
test
lds
lock
lods
popl
mov
push
inc
push
mov
xor
in
or
inc
enter
shll
push
and
or
mov
inc
rclb
dec
inc
aam
cmp
mov
mov
repz
mov
int3
pop
fsubrs
stos
xor
out
or
xchg
inc
adc
cmp
cmpb
pusha
shl
loopne
xchg
imul
daa
cmp
repz
add
lods
test
popa
push
push
xchg
iret
out
testl
mov
fwait
insb
ficoml
inc
and
inc
push
xchg
xor
mov
sub
and
in
insl
outsl
lock
enter
popf
out
add
and
add
dec
out
aad
jle
bound
call
fwait
cmpsb
cmp
sahf
cmp
stos
bound
or
arpl
sti
mov
lods
incl
inc
test
enter
fidivl
call
pop
cwtl
mov
test
xlat
sbb
cmpsb
jp
fcmovu
outsb
add
sbb
movsl
decb
repnz
mov
pop
pop
call
push
fs
push
push
pop
into
in
add
cmc
dec
in
dec
out
orb
xor
xor
popf
push
in
mov
xor
push
inc
cmp
push
fists
mov
dec
adc
inc
in
or
xchg
mov
xorl
das
push
adc
movsb
out
add
xor
insb
mov
jnp
lods
cld
add
xlat
pop
xchg
fnsave
adc
xor
push
pusha
add
outsb
push
and
cmc
aad
fstps
and
push
jns
cmp
sub
adc
push
adc
push
popa
out
ss
ror
xchg
ret
xchg
inc
jg
xchg
sbb
fisttpl
stc
lods
xor
daa
clc
mov
repz
mov
mov
xchg
sbb
in
add
cmp
inc
xchg
push
pop
scas
jle
lods
mov
xchg
mov
outsb
mov
cltd
sbb
js
sub
or
inc
dec
push
dec
rolb
popl
out
lcall
or
fabs
pop
das
loopne
stc
inc
shll
and
popf
dec
subb
ret
hlt
mov
jne
xchg
lahf
mov
adc
and
in
push
cmp
xor
fdivr
les
stc
fildl
inc
lcall
add
les
ja
sbb
mov
inc
cmp
data16
pop
or
les
enter
out
xor
notl
scas
xchg
push
xor
cwtl
out
push
push
ja
xor
pop
add
cld
xor
sbb
lret
dec
insl
inc
jmp
xchg
fnsave
lea
adc
inc
subl
inc
pop
cmp
and
ja
jecxz
aas
das
add
imul
fiaddl
dec
mov
clc
mov
ljmp
fcompl
ljmp
dec
jmp
inc
ret
int
xchg
lret
jle
or
out
xchg
ret
jecxz
loope
gs
jb
mov
gs
mov
adc
xlat
push
jecxz
dec
mov
lock
mov
mov
out
push
push
xchg
and
fadd
sub
jmp
mov
xchg
dec
test
lods
shlb
arpl
cmp
push
out
push
jp
push
and
xchg
js
push
sub
push
sub
add
adc
jge
mov
xchg
mov
xor
or
mov
mov
add
xor
aas
cmp
fwait
add
ficomps
jl
imul
jl
mov
xlat
mov
dec
xor
rcr
add
mov
or
pop
cmpsb
nop
xchg
pusha
mov
xor
jbe
loope
sub
cmpsl
or
hlt
std
xorl
and
out
mov
push
cltd
dec
dec
xor
add
xchg
mov
shrb
add
xor
pop
sub
inc
jg
pop
jl
sbbl
rcll
mov
shrl
add
jg
sub
jo
pop
push
mov
jne
lret
out
add
dec
adc
ja
xor
fidivrs
shlb
sub
sub
mov
movsl
and
xlat
scas
push
aad
adc
mov
push
pop
mov
xchg
in
jp
sbb
jae
mov
pop
ficomps
adc
xchg
adc
fcoms
outsl
jno
jg
cmp
fistps
inc
lret
enter
adcl
enter
mov
rol
push
push
stos
sub
inc
daa
mov
dec
dec
stc
lds
out
ret
push
jmp
xor
jge
or
and
xchg
pop
sub
mov
test
shl
scas
insl
mov
popf
mov
jnp
pop
std
lret
or
pop
aad
ja
pusha
pop
aas
and
push
sub
dec
mov
cld
sub
adc
add
mov
outsl
inc
xor
jbe
inc
out
jb
and
sub
mov
mov
leave
nop
fistl
push
pop
push
inc
arpl
adc
lods
adc
aaa
cltd
loop
inc
imull
jno
mov
sti
dec
insl
xor
xor
or
pop
test
lret
sahf
les
add
fdivl
jg
cmp
in
pop
sti
fwait
mov
sti
xchg
sbb
push
rol
mov
xor
xchg
sbb
insl
sub
mov
pop
test
loope
mov
clc
dec
shll
arpl
pop
push
ret
ret
rcll
shlb
test
std
in
pop
inc
mov
push
jnp
push
movsl
mov
dec
stos
or
movsb
or
lea
pop
pusha
cmp
dec
and
and
push
loop
dec
cmp
addl
iret
dec
push
lock
push
jb
lcall
test
xor
loop
loope
mov
push
inc
loop
ljmp
and
inc
sub
pop
sbbb
std
cmpsb
daa
rcrb
sti
movsb
sbb
sbb
inc
dec
scas
aad
test
movnti
sub
or
mov
hlt
mov
cmp
and
lods
shll
incb
xorl
lods
test
mov
cmp
mov
rolb
cmp
inc
lret
mov
cmp
shrl
and
fmulp
enter
jecxz
add
adc
inc
sub
lods
push
xchg
pusha
out
and
lock
incl
xor
into
pop
in
jp
mov
push
xor
lods
xchg
inc
sub
pop
jno
jb
mov
in
cld
jge
jae
pop
mov
rcll
aaa
cmp
push
frstor
test
inc
push
cmc
xchg
out
cmpsl
dec
mov
jbe
mov
mov
jecxz
outsl
jp
xor
mov
inc
aaa
push
mov
call
cmp
xor
sub
std
xchg
scas
xchg
mov
fstpt
sbb
dec
sar
inc
stos
call
pop
cmpsl
andl
insb
jp,pt
mov
push
call
push
arpl
xchg
inc
std
sub
mov
pop
push
adc
jmp
add
iret
cmc
dec
out
cmp
fisttps
rorl
push
out
movsl
aad
loope
outsb
push
sub
lods
loope
adc
icebp
sub
dec
mov
xor
add
rcrb
test
in
pusha
pop
stos
dec
es
dec
mov
mov
fisttpll
das
clc
add
push
jne
xchg
sub
inc
add
xchg
cmpsb
fs
sti
stos
je
push
mov
mov
jbe
lods
inc
cmpsb
sub
outsl
mov
mov
pop
cmc
test
and
int
xchg
fsubrl
movsb
sbb
cmc
pop
cmp
adcb
andb
shlb
sub
adc
stos
xchg
mov
loope
out
jp
adc
cld
dec
sbb
imul
adc
test
cmpsb
xor
xchg
and
sub
or
pushf
jnp
mov
jns
hlt
clc
xlat
fidivrs
mov
insb
loope
dec
push
push
lock
out
lahf
pop
sti
cmp
fstl
push
cmpsl
sti
mov
sub
insb
push
cmpsb
iret
imul
pop
int
cmp
addr16
stc
adc
sbb
pop
mov
pop
into
out
jl
pop
xor
pop
fs
imul
insl
addl
sbb
add
sbb
pop
push
ret
pop
add
aaa
add
sub
mov
xchg
push
or
data16
jo
mov
pop
imul
repnz
je
shlb
bnd
pop
pop
out
mov
xchg
xor
mov
out
jb
std
xor
mov
pop
push
daa
push
xor
int
pop
mov
sbb
push
fnstcw
test
cmp
popa
mov
mov
sub
xchg
andl
mov
les
sub
jmp
or
scas
push
xor
xlat
test
add
mov
sub
inc
and
mov
adcl
fdivrl
and
pop
jp
sub
std
bound
roll
cmpsb
cli
into
add
dec
pop
mov
test
push
sub
enter
or
mov
mov
or
gs
fcmovb
add
cltd
cmc
pushl
cmp
mov
mov
fisttps
das
xchg
insb
mov
lods
inc
pop
dec
add
fcmovnb
xor
test
lret
mov
sbb
addr16
sub
cmp
cmp
fstps
pop
and
and
aaa
jmp
ja
test
into
jl
stc
mov
push
mov
mov
out
repz
ss
add
mov
das
repnz
lret
mov
bound
mov
xchg
stos
pop
mov
mov
cmpsl
pop
push
and
insl
dec
pop
sub
lods
xchg
or
into
add
repnz
mov
ret
jg
and
faddl
stc
xlat
roll
add
push
jp
negb
push
imul
xor
pop
xchg
mov
bound
jb
andl
add
xchg
cld
je
inc
movsb
das
push
in
lret
gs
test
aaa
pop
aad
dec
push
sub
and
aad
xor
lods
dec
sub
rcll
jns
movsl
cmp
ljmp
popf
loopne
mov
gs
hlt
sbb
in
push
aam
fisttpll
xchg
add
inc
in
cmpb
mov
gs
jmp
inc
pop
push
movsl
pusha
xor
sub
lods
fnstcw
clc
and
xchg
dec
fdivrp
jnp
ret
rclb
and
addl
aas
das
pop
cli
jmp
idivb
mov
and
notb
push
push
mov
xchg
cmp
sbb
inc
jecxz
fcomi
hlt
fmull
idivl
xor
shrl
cmp
cmpsb
js
push
jae
out
fmulp
jmp
push
adc
sub
popf
out
or
push
nop
mov
lcall
xlat
jbe
stc
add
adc
cli
lret
scas
or
out
or
mov
sub
sarb
add
mov
sub
xchg
cwtl
dec
or
dec
xor
xchg
inc
jp
jge
mov
inc
dec
call
fistps
xchg
cmpl
add
pop
bnd
popf
in
mov
lds
shufps
push
rolb
ljmp
stos
sbb
sub
pop
cmp
cld
shll
sub
out
mov
test
ljmp
or
cmp
pushf
test
cmp
mov
sahf
imul
mov
loop
mov
call
out
lret
lods
inc
mov
mov
fs
cmpsl
and
hlt
push
cli
jge
aam
sbb
mov
cmp
jno
push
add
aaa
rclb
je
adc
add
ret
mov
inc
mov
xor
enter
daa
mov
and
sahf
clc
xchg
add
test
cmp
adc
ret
push
xor
aaa
jp
adc
dec
icebp
shll
xlat
fidivrl
inc
enter
add
and
push
je
sbb
sub
dec
jecxz
imul
pop
mov
cmp
cmp
jbe
and
inc
lahf
xor
jne
das
xchg
lahf
inc
mov
fwait
test
xchg
mov
jmp
xlat
test
pop
shrb
iret
push
aam
das
mov
mull
mov
mov
mov
inc
cwtl
mov
and
out
es
mov
mov
xor
imul
gs
js
arpl
and
scas
or
push
inc
cli
mov
mov
outsl
fsubs
xlat
hlt
fidivrs
bound
pop
ret
push
mov
cmp
in
sbb
ja
pop
cmp
sahf
addr16
xor
mov
lcall
cmc
pop
mov
sahf
loopne
mov
call
inc
icebp
ret
movsl
test
insl
nop
fdivp
out
test
divl
adc
jg
xchg
loop
ret
outsl
mov
mov
add
push
xchg
pop
sbb
dec
pop
push
sub
xchg
xchg
dec
scas
mov
cmp
xchg
jbe
idivb
aaa
sbb
stc
addb
outsl
lahf
cli
stos
inc
cs
xchg
shll
jno
adc
dec
push
or
sarl
in
xchg
das
dec
ss
stc
jns
das
adc
mov
popa
cld
call
xor
fnsave
push
cmpsl
mov
dec
mov
cwtl
add
imul
fldcw
movsb
fadd
xor
jo
ret
dec
and
xor
sbb
mov
add
lret
push
jnp
out
negb
jbe
adc
push
repnz
xchg
add
movsl
addb
cli
out
fisttpll
dec
sbb
add
jne
add
sbb
sti
test
push
pop
lret
repz
stos
shrb
add
jae
mov
into
or
sub
int
push
adc
xchg
repz
jl
mov
in
sbb
insl
js
mov
inc
sbb
lea
gs
test
leave
mov
aad
fldcw
sbb
insb
or
mov
cmc
cmpw
lock
mov
adc
adc
mov
or
jnp
pop
or
shl
sub
inc
jle
cmp
scas
ljmp
test
mov
fmull
roll
cmpsb
lods
enter
xlat
mov
jmp
inc
in
xchg
or
lock
sub
mov
je
inc
imul
push
adc
jle
lods
xchg
adc
and
daa
pushf
mov
push
xlat
in
out
cmp
mov
cmp
dec
mov
xlat
sahf
subl
ret
jns
shrb
sahf
std
hlt
add
xor
shll
out
jle
jp
fstl
xor
hlt
mov
mov
xchg
or
mov
pop
cmc
inc
xor
mov
pop
adc
inc
push
xchg
jmp
push
jle
inc
mov
mov
push
add
enter
mov
popa
enter
outsb
ret
adc
mov
or
sub
lea
negl
ret
cltd
and
icebp
aad
stc
mov
scas
cltd
inc
div
xchg
bound
xchg
xlat
dec
xor
sbb
test
ljmp
push
push
cmp
jnp
push
in
dec
add
mov
mov
in
sub
notb
mov
xorl
cmp
popf
cltd
mull
out
incl
ja
and
xlat
sahf
lahf
out
push
or
add
sbb
insb
mov
inc
outsl
push
push
cmp
nop
in
push
inc
push
decl
cmp
lods
sub
push
jmp
loopne
lods
call
inc
out
movl
popa
in
jmp
or
push
imul
and
mov
adc
jb
roll
outsb
jo
xchg
pop
sbb
loopne
jge
add
lods
jne
sub
stos
movsl
inc
orb
aaa
iret
add
sahf
xchg
pop
nop
fistpll
cltd
mov
fiadds
lock
mov
std
sarl
gs
mov
cmp
jge
pop
adc
in
dec
and
mov
popa
rcll
call
aam
mov
inc
enter
and
scas
xor
sub
ljmp
and
mov
test
dec
xchg
jae
lock
push
pop
pop
xor
in
aad
adc
lea
push
or
push
add
and
outsl
enter
cmp
mov
add
ja
pop
or
inc
lahf
movsb
fstps
scas
add
fcoml
inc
xchg
pop
fldcw
cmp
sbb
int
push
mov
ret
int
out
out
mov
mov
fdivrs
dec
scas
insb
xchg
test
fidivrl
sahf
std
or
cmc
lea
pop
dec
cwtl
xchg
lods
inc
pop
loopne
rcll
push
jmp
push
push
sahf
fstpl
xlat
push
ret
jae
lods
mov
cmpl
sbb
lahf
xor
shl
inc
jo
jle
lcall
mov
xlat
sar
xchg
mov
ret
rolb
add
fsubrs
cmc
pop
lret
mov
repz
roll
xchg
jnp
rcl
clc
adc
sbb
popa
pop
push
mov
pop
arpl
xchg
lods
xor
into
xor
aas
in
cmp
dec
add
incb
dec
jno
xor
push
dec
out
mov
ljmp
subb
es
sbb
cli
imul
pop
mov
push
xor
mov
addr16
ljmp
push
or
and
adc
test
lret
sbb
dec
lcall
fxch
iret
in
mov
jbe
cltd
jne
mov
and
sti
mov
adc
sub
gs
loop
das
or
jl
adc
xor
pop
inc
in
push
push
das
es
add
pop
movsb
inc
sahf
cmpsl
and
addr16
sbb
mov
push
cmp
sub
push
mov
sbb
push
pop
mov
bound
xor
es
cmp
jne
fiadds
outsl
aas
or
rol
mov
jg
enter
dec
icebp
in
dec
push
cmpsb
test
pop
mov
notl
push
add
mov
rorl
and
fldcw
add
lea
push
stos
mov
repz
and
gs
cmpsl
add
mov
mov
mov
adc
dec
in
das
sub
add
movl
inc
and
or
or
cmp
jae
in
in
cmpsl
fmull
dec
xor
ficoms
jmp
adc
test
push
cli
cmpsl
adc
rolb
push
ret
in
addr16
jb
mov
mov
xorl
jo
ror
pop
xor
mov
cs
scas
push
lret
cltd
pop
jno
jp
lahf
dec
pop
repnz
lods
loopne
or
adc
sub
fsubrs
mov
push
outsl
std
xor
push
repz
loopne
movsl
mov
lock
mov
jno
push
inc
popf
ret
add
shr
aam
mov
shrl
rclb
frstor
and
add
je
stos
pop
outsl
mov
sbb
int3
ss
stos
dec
scas
or
jae
inc
mov
mulb
nop
insb
jno
or
sub
mov
pushf
movsb
inc
popf
lret
insb
mov
push
out
xlat
pop
push
ror
sarl
mov
and
adc
pop
mov
sarl
xchg
cltd
arpl
jnp
sbb
cmpsb
hlt
adc
xchg
add
sub
sbb
cmpsb
out
inc
incb
add
and
in
mov
testb
pop
lea
add
mov
nop
and
push
daa
adc
sbb
sub
nop
mov
mov
xor
data16
mov
scas
and
pop
fcmovu
je
lahf
jo
insb
lods
stos
inc
mov
arpl
stc
rcrl
call
lahf
int3
mov
mov
xchg
sarl
cwtl
arpl
je
stc
sbb
stos
xor
inc
xchg
mov
cmp
pop
adc
mov
mov
cmpsl
fidivrl
popf
sbb
mov
scas
lret
xchg
das
ja
je
cmp
add
push
stc
cld
movsl
ja
aad
adc
bound
cld
jno
pop
dec
sub
mov
cmp
mov
dec
cmp
and
ret
and
mov
sti
sub
rorl
rcrl
cmc
xor
mov
cwtl
adc
mov
loop
mov
xchg
add
jecxz
js
daa
cmpsb
fwait
pop
lcall
mov
mov
loop
ds
pop
test
add
cmc
lock
fdivs
add
test
xor
leave
xor
aam
ljmp
adc
xor
sub
add
ja
arpl
push
mov
mov
mov
xor
les
pop
andb
sub
lea
dec
out
es
inc
sarl
stc
mov
and
cmp
sbb
or
jb
dec
mov
imull
mov
adc
xadd
push
or
mov
jmp
rorb
insl
icebp
das
sub
inc
pusha
mov
pop
in
inc
jge
or
inc
lret
das
jmp
iret
xor
clc
dec
mov
icebp
jmp
jns
scas
add
pusha
mov
insb
pop
in
into
inc
dec
pop
cmp
fidivl
fisubs
inc
movsl
push
ret
out
call
xor
mov
imull
fsts
arpl
icebp
adc
clc
add
mov
cmp
xchg
cmp
adc
or
pushf
and
lods
push
pop
add
jmp
sti
jg
cmp
cmpsl
add
fcomp
xchg
mov
into
pop
loopne
clc
dec
aam
sahf
iret
cmpsw
mov
out
bnd
inc
nopl
into
adc
popl
pop
loopne
xor
hlt
pushf
aaa
rorb
scas
or
inc
pop
pop
fbld
mov
fcomps
and
add
sub
inc
jp
mov
arpl
push
imul
cmp
mov
inc
cld
scas
pop
push
mov
adc
jp
in
cmp
xchg
jne
adc
sub
stos
outsl
dec
in
cwtl
mov
sahf
ljmp
ss
push
adc
fiadds
enter
jno
fs
xchg
jno
and
xchg
push
and
pop
bound
jmp
push
inc
push
sub
mov
adcl
push
mov
scas
mov
or
push
mov
pop
fildl
lea
pop
gs
add
lcall
pop
repnz
fcomi
mov
add
or
push
dec
shrl
into
in
adc
or
push
jno
test
add
into
cmp
mov
addr16
pop
pop
xchg
ret
out
mov
adc
jns
andb
sbb
push
or
and
fisttps
add
leave
stos
lds
sahf
stc
add
jmp
aaa
push
enter
pop
ficoms
out
cld
push
fisubl
test
adc
sbb
add
pop
sar
or
mov
mov
and
clc
sub
cmp
xchg
scas
xchg
mov
mov
repz
aaa
test
or
dec
rorb
aas
jg
push
pop
icebp
adc
sub
rol
add
pushf
xchg
lahf
dec
pop
sub
jle
pop
push
add
push
and
push
pop
xlat
mov
sarb
mov
mov
push
sahf
xor
cmc
test
into
cmpsl
rcl
sub
and
jno
shlb
fstpl
lds
pop
ja
add
lret
jp
jl
cmpsl
sub
repz
aad
or
xor
enter
mov
aaa
shlb
mov
dec
push
pop
xor
les
imul
xchg
mov
lods
sub
cld
sbb
or
push
add
and
jno
sti
aam
dec
outsb
xor
inc
mov
or
cmpsb
mov
ret
jp
cwtl
mov
inc
out
sbb
cmp
les
sbb
push
sbb
xor
dec
add
mov
push
xchg
sub
jns
pushf
sbb
dec
cwtl
add
mov
xor
aas
daa
repnz
sub
pop
leave
mov
xlat
push
or
js
out
loopne
ja
roll
test
add
sub
lods
cmpl
xor
mov
pop
ljmp
jae
cmp
sbb
lods
xor
pop
push
cmp
push
sub
fwait
push
shl
loop
push
lahf
addb
xchg
icebp
out
lods
pop
xor
pop
int
sbb
or
orb
mov
sar
cmp
lret
push
push
jmp
pop
sahf
sahf
mov
fwait
lods
out
mov
push
fsubr
inc
test
shrl
imul
push
adc
je
fcompl
jno
les
push
xchg
push
pop
ficoml
or
dec
mov
enter
test
lea
ds
pusha
mov
mov
decl
cmpb
mov
fimuls
sub
je
in
xchg
mov
aas
or
imul
push
mov
gs
lods
add
xchg
aaa
repz
loope
mov
xor
sbb
call
pushf
push
mov
fdivs
mov
pop
nop
mov
shll
and
stc
hlt
mov
hlt
pop
les
fwait
adc
stc
dec
notl
inc
inc
std
cmp
dec
adc
and
jecxz
test
jl
fxch
push
loop
or
lds
dec
fwait
out
ds
add
adc
mov
add
pop
jmp
xor
std
xchg
int3
mov
pop
jne
inc
je
push
add
es
or
cltd
in
push
mov
xor
add
mov
arpl
xor
cli
dec
inc
data16
pop
sahf
ljmp
ss
insl
fnstcw
xor
cmp
sbb
mov
iret
movsl
mov
clc
or
xorl
or
xchg
add
mov
pop
call
jg
mov
iret
aam
jne
and
arpl
rcr
xchg
xor
push
adc
mov
pop
outsl
xchg
stos
std
add
xchg
fmull
faddl
loope
lcall
out
cwtl
out
or
out
dec
in
mov
fwait
imull
sbb
ljmp
or
add
mov
scas
sub
loope
fildll
push
aas
xchg
xchg
add
and
push
mov
and
cmp
in
or
les
lods
or
push
sbbb
jo
mov
push
and
push
mov
add
gs
lock
cli
xor
loopne
adc
sub
or
js
nop
jle
loope
add
mov
cmpsl
test
je
sarl
mov
cmp
inc
push
mov
dec
xchg
int3
xchg
add
sbb
push
mov
dec
sti
inc
popl
pop
push
inc
sti
fs
rclb
xor
and
dec
adc
scas
jo
mov
add
and
mov
mov
xchg
in
aam
or
int3
jno
jge
sbb
call
jnp
orb
xor
mov
shll
ret
sbb
daa
mov
inc
sbb
fisttps
pop
pop
imul
int
dec
or
test
es
jle
or
test
insb
dec
fwait
cmp
ret
jmp
sbb
shrl
stos
iret
insl
pop
mov
and
hlt
loope
ds
adc
mov
sti
mov
pop
pop
mov
cmpsl
mov
mov
xor
pop
lods
ficoms
xchg
sbb
call
add
in
mov
enter
jp
and
jnp
dec
ret
push
iret
jno
mov
push
mov
mov
pushf
push
push
iret
ljmp
pop
lock
and
movl
leave
xor
test
mov
pushf
scas
enter
fmull
pop
mov
xchg
dec
loop
adc
sbb
loope
ret
fsubp
dec
test
push
xor
and
imul
mov
out
mov
cld
cmp
addb
out
mov
jge
or
sub
mov
add
cwtl
sub
xchg
movsl
xor
sub
je
outsb
pusha
push
and
cmp
mov
icebp
add
ret
mov
into
dec
mov
add
call
iret
fwait
lret
sarl
cwtl
popf
pop
cmp
mov
int
rcr
aad
loopne
jb
ljmp
clc
cwtl
push
push
outsl
test
push
mov
ljmp
ljmp
lea
add
sub
loop
push
sti
nop
sbb
xor
xchg
and
push
inc
jle
adc
ja
leave
mov
or
jnp
out
jge
imul
cmp
inc
nop
xchg
push
in
xchg
insb
insb
pop
int
ljmp
mov
xchg
push
mov
call
fucomi
jecxz
and
and
jmp
inc
leave
pop
fbld
testb
mov
movsb
test
lock
das
stc
sarb
or
int3
sbb
int
js
mov
lods
shll
xchg
andb
aam
js
add
filds
sbb
push
push
inc
adc
dec
dec
pop
push
inc
mov
dec
inc
jns
jmp
mov
mov
xchg
sbb
movsb
pop
push
popa
mov
pop
pop
frstor
std
and
dec
loope
popf
pop
dec
fwait
or
icebp
and
aam
stc
dec
stc
xor
inc
xor
add
je
leave
inc
dec
sarb
call
push
lds
push
mov
fists
aad
icebp
dec
or
push
jno
mov
cli
pop
inc
push
sub
or
add
hlt
jmp
ror
cmpsb
aaa
ja
stos
les
push
dec
adc
sbb
clc
dec
sbb
jne
fbld
add
loop
ficompl
addr16
aad
lret
adc
mov
adc
push
xchg
jo
mov
mov
or
movsb
shrl
mov
divl
adc
push
dec
fbld
pop
or
sbb
fldt
hlt
xor
mov
loopne
dec
rol
adc
clc
scas
mov
sub
hlt
adc
movsb
lock
add
in
inc
jecxz
and
jno
add
add
jle
int
pop
pop
stc
lods
sbb
fisubrs
sub
fdiv
test
or
adc
and
push
ds
inc
cs
pusha
push
test
cmc
lea
aas
jb
data16
rcr
cmp
jl
fdivr
mov
jl
out
adc
push
aam
shl
mov
fcompl
add
into
or
push
push
arpl
lcall
pop
in
dec
pop
cld
int3
jg
mov
test
cmp
cmp
out
dec
rcll
cmp
enter
fimuls
icebp
ss
add
inc
rorl
jmp
in
dec
dec
scas
sbbb
mov
mov
push
stos
adc
testb
mov
pushf
cmpps
sti
pop
sub
fstl
lahf
and
call
outsb
ja
jb
ja
repnz
lret
mov
mov
jge
push
enter
sub
mov
pop
rcr
xlat
dec
sub
psrlw
cmp
jno
fsubrl
xchg
jle
sub
sbb
add
out
test
fcmovu
stc
insb
xchg
dec
insl
inc
mov
imul
popf
mov
mov
repz
aad
in
les
inc
mov
inc
xchg
fs
outsl
inc
nop
and
lods
mov
or
lahf
cwtl
jl
xor
ficoml
mov
jge
and
dec
cmpsl
or
mov
sub
popa
mov
ja
cmp
and
insl
aaa
adc
cmpsb
pop
mov
in
push
inc
sarb
pushf
and
push
pop
inc
add
data16
mov
clc
out
rolb
xor
dec
add
mov
jno
pop
pop
subl
jge
rep
popa
cmp
mov
sahf
dec
popf
rcrb
loop
cmpsb
stos
push
and
mov
cmp
inc
aas
movb
gs
dec
popf
xlat
pop
sti
adc
cmp
hlt
lahf
ret
dec
hlt
mov
push
xchg
in
leave
xchg
scas
lods
addr16
or
add
xor
or
mov
and
in
ret
cwtl
lcall
leave
dec
jne
adc
mov
cmp
test
arpl
test
mov
pop
xchg
push
mull
sbb
test
out
lea
or
stos
push
pop
jne
divb
mov
jmp
jmp
aam
push
or
jo
cvtps2pi
push
add
jnp
sti
cmp
pushf
xor
xor
cmp
rorl
jp
mov
mov
push
inc
xchg
dec
push
int3
sub
xchg
adc
ret
sub
mov
jb
fidivl
popf
imul
push
mov
mov
adc
leave
add
jbe
jno
jb
push
inc
inc
or
cmp
cmpsb
out
lods
js
pop
lahf
push
xor
dec
leave
mov
xlat
xor
movsl
movsw
dec
pop
jl
add
shll
adc
cmp
push
push
adc
into
arpl
mov
fwait
xor
repnz
and
xor
push
mov
sub
scas
rclb
rorb
scas
sub
jbe
jg
or
int
nop
movzbl
push
xchg
sar
fdivrl
xchg
xchg
int3
mov
in
cltd
fisttps
push
fisttpll
pusha
daa
jmp
sti
les
fst
mov
popa
and
jecxz
fiadds
pop
stos
xchg
mov
adc
dec
jnp
cmp
mov
or
ljmp
mov
inc
or
pop
and
adc
or
imul
jg
arpl
push
idivb
stos
sub
jbe
movsl
ds
cli
pop
xor
sbbb
inc
mov
stc
ds
clc
dec
mov
pop
xor
fisttps
mov
push
xor
mov
jnp
scas
add
mov
movsb
sub
pop
lret
dec
cltd
sahf
outsl
push
dec
js
ds
ja
pop
sbb
and
mov
jae
stc
mov
dec
xor
aas
jns
jne
insl
add
or
mov
sub
dec
in
xchg
negb
pop
inc
xchg
fst
add
mov
scas
lods
icebp
and
dec
cmc
cmc
cmp
sarl
xor
adc
popa
xor
fdivrs
cmc
lahf
mov
out
test
xchg
or
cld
ror
fucomp
js
sbb
adc
pushl
notb
fcoms
mov
lcall
jp
ljmp
sarl
mov
pop
test
xor
pusha
sbb
cmp
mov
aaa
shlb
outsb
stos
addr16
xor
jnp
add
fwait
and
inc
repnz
mov
shlb
jecxz
addr16
lock
adc
pop
int
xor
xchg
lock
loope
adc
and
std
jecxz
push
pop
jno
inc
mov
cli
mov
xor
add
call
pop
fldl
push
jnp
fimuls
add
repz
out
lock
jbe
sbb
xor
out
inc
xor
jge
lret
in
pop
pop
mov
sub
ljmp
dec
adc
test
jae
or
or
dec
pop
enter
fstl
mov
mov
std
sbb
les
loopne
inc
scas
out
cmp
mov
lods
js
pop
xor
std
insl
imul
add
push
pop
ss
mov
xchg
xchg
sub
push
lret
es
and
pushf
ret
test
or
pop
out
pop
and
push
imull
andl
stos
xchg
and
or
int3
or
cmp
or
int3
std
loopne
jno
cmp
sarl
int
popa
lods
out
adc
in
xchg
cmp
lahf
hlt
mov
dec
insb
das
jmp
out
clc
sti
xor
push
fimull
lcall
fidivrs
in
loope
les
lcall
arpl
mov
clc
mov
adc
add
push
pop
dec
mov
cltd
cmc
fs
xor
jp
paddsb
and
mov
in
pop
int3
xor
in
loope
in
mov
jp
loop
and
stc
sbb
sub
pop
es
xor
mov
fwait
or
arpl
in
loopne
outsb
aas
push
sub
jg
adc
and
shll
jp
inc
mov
cmp
pop
aam
mov
lock
pop
arpl
in
scas
dec
xchg
jae
jb
cmpsb
clc
dec
fidivl
jbe
mov
cmp
or
cmpsl
jnp
pop
ja
in
push
xor
inc
sub
cli
das
ljmp
push
cmpsb
sbb
xlat
nop
push
sahf
mov
push
negb
je
shll
sti
add
cmpsl
mov
xchg
xor
push
and
dec
mov
cmc
cmpsb
cmpsb
into
aam
or
push
or
cmc
outsb
pop
add
pop
dec
sub
mov
mov
add
dec
dec
cmp
shrl
into
pop
xlat
test
xor
pop
inc
pop
scas
scas
shll
xchg
cmp
bswap
push
xlat
imul
cwtl
mov
inc
push
es
mov
cmc
pop
pop
add
outsl
adc
sbb
loopne
mov
das
test
pop
in
add
xchg
pushl
push
mov
movsb
std
out
adc
cld
loop
gs
les
out
xor
xchg
push
out
jno
adcb
mov
clc
pop
test
mov
sbb
sub
out
sbb
cs
pop
add
cmpb
inc
ficoml
xchg
outsl
mov
jge
push
mov
jns
mov
ljmp
int3
mov
sbb
repz
out
inc
xor
fisttpll
mov
out
cmp
dec
int3
push
inc
xchg
jb
mov
js
fstpt
mov
pop
pop
lods
cmp
inc
jmp
pop
test
xchg
mov
nop
cmpsl
in
outsl
lock
push
push
ss
cmp
insb
xchg
xchg
aad
sub
cmp
cli
sar
xor
adc
aas
addr16
push
jnp
sarl
xchg
mov
insb
int
sub
xchg
dec
mov
test
outsl
push
cmp
push
push
cmpsb
or
xchg
out
push
es
jno
xor
iret
stc
push
mov
add
out
ja
mov
fidivl
out
out
rcl
mov
fs
jmp
dec
je
and
or
xchg
push
dec
sbb
dec
loopne
and
loop
sbb
daa
cmp
enter
xchg
push
mov
jle
add
push
addr16
inc
ret
sbb
repz
xlat
cwtl
mov
pop
mov
pop
ja
sub
jo
mov
push
jb
cmpsl
pop
jo
mov
cmpsl
in
shll
loop
mov
mov
mov
mov
xchg
or
xchg
shl
jmp
cmp
mov
jle
ja
lds
sub
pop
movsl
jg
sub
push
out
test
das
cmp
adc
sar
push
and
outsb
jge
cmpb
adc
test
mov
cmp
inc
pop
test
push
jp
mov
pop
adc
dec
jo
or
mov
cmpb
and
popf
jno
mov
ret
loope
inc
or
jle
jne
xor
lret
jg
out
sub
dec
or
jg
add
xor
and
hlt
aaa
jge
mov
sarl
xor
mov
mov
mov
adc
lret
add
testb
dec
and
xchg
cmpsb
out
push
lods
dec
in
pop
dec
jae
push
sub
dec
mov
pop
cmp
stos
fsubrl
lcall
push
xor
icebp
push
rcr
add
in
outsl
add
loop
in
jg
mov
rcrl
xor
or
movsb
sub
dec
xchg
pop
add
mov
xchg
sti
add
movsl
xor
insb
scas
mov
pushf
push
dec
cmp
andb
xorb
mov
mov
cwtl
stos
fwait
dec
push
sub
test
icebp
xchg
fcomps
xor
adc
pop
aas
das
push
out
mov
loopne
mov
fimull
arpl
jnp
mov
pop
mov
pop
jle
cmp
cwtl
test
pop
fisubs
mov
or
push
mov
fildl
xor
outsl
xchg
jno
in
dec
push
mov
mov
aaa
cmp
mov
fadds
and
mov
std
pop
loope
fbstp
ret
out
es
fstps
xchg
dec
push
popa
aad
jbe
incl
mov
gs
mov
aas
pushf
stc
pop
fildll
push
xchg
subb
inc
mov
gs
rcll
xorb
and
enter
iret
xchg
cmpsl
rolb
and
insb
sub
or
mov
insb
in
lahf
out
pop
adc
mov
lcall
clc
adc
popf
je
popa
repz
jnp
test
clc
int3
jecxz
or
push
shl
inc
iret
out
pop
mov
mov
hlt
mov
jecxz
scas
or
or
mov
sahf
jns
es
inc
ljmp
ficompl
mov
fnstcw
rcrl
xchg
dec
mov
mov
out
dec
mov
imul
push
out
daa
cmp
push
push
neg
in
xor
and
xchg
xor
add
mov
or
pop
les
adc
dec
push
sub
bound
pop
xchg
sub
fcoms
adc
fsubs
cmp
jb
push
inc
aas
data16
mov
cmp
jl
jle
hlt
lahf
push
lods
adc
dec
inc
std
adc
test
add
pop
fs
mov
sub
scas
out
pop
movsl
push
ret
psraw
push
push
sbb
xchg
or
mov
mov
rcr
pop
repz
out
xor
jmp
add
stos
jl
add
shlb
push
inc
lahf
dec
cmp
dec
addr16
mov
add
cmc
shll
pop
or
jecxz
scas
and
repz
dec
xchg
insl
dec
inc
pop
and
dec
or
pushl
xchg
push
ffreep
aas
frstor
cmp
jo
adc
repz
or
jecxz
adc
mov
cwtl
clc
or
int
movsb
dec
lock
sbb
addr16
mov
enter
mov
cmpsl
push
clc
cmpb
push
mov
gs
xor
inc
in
mov
icebp
xchg
std
mov
xchg
aam
lret
stos
decb
xor
rolb
cmp
inc
sbb
pop
jnp
xchg
xchg
sbb
lods
fwait
loop
jno
aas
mov
out
jae
sahf
rolb
jle
inc
fs
scas
or
imul
cwtl
cmp
add
cmp
push
jne
cld
sub
test
les
push
jle
pusha
add
sbb
rcl
add
iret
stc
inc
pushf
ret
scas
ja
dec
hlt
sub
push
sub
pop
pop
jg
mov
jo
das
scas
mov
imulb
mov
std
push
cmp
lods
push
icebp
cmp
stos
es
mov
pop
ds
jge
xchg
inc
pop
cltd
and
scas
sbb
and
aas
pop
mov
bound
xchg
inc
xchg
insl
xlat
jne
push
ds
sbb
push
mov
pop
mov
repz
cltd
sbb
mov
xor
inc
cld
jbe
xor
or
push
int3
mov
pop
pop
xchg
or
fisttps
arpl
xchg
and
adc
mov
sti
mov
push
or
inc
sub
mov
repz
sub
daa
pop
sahf
inc
ss
jle
nop
dec
pop
mov
aad
xchg
mov
stc
mov
fsts
adc
into
jg
xor
out
xchg
and
orl
ret
xchg
mov
sub
xchg
popf
cmpsb
leave
loopne
or
and
stc
push
loopne
ds
lahf
adc
mov
adc
xchg
daa
rcrl
add
jbe
pop
xor
ja
js
rclb
sub
mov
adc
pop
clc
cltd
cmp
dec
int
jge
test
sub
nop
into
divb
and
jnp
cltd
sbb
mov
in
or
popa
inc
ret
jle
jmp
pop
fmuls
mov
mov
xchg
push
into
and
and
mov
jns
test
in
idiv
mov
mov
imul
scas
and
scas
daa
or
or
out
out
pushf
mov
mov
lock
inc
add
cmc
sbb
pop
mov
inc
cmp
ja
or
fiaddl
mov
pop
xchg
out
test
aam
ret
lea
dec
test
bound
cwtl
test
inc
push
add
add
and
fsts
iret
dec
xor
nop
stc
aas
bound
popf
dec
movsb
mov
adc
xchg
into
bound
and
cmp
jle
mov
dec
mov
aam
add
cmpsb
push
push
outsb
lahf
push
mov
cltd
jns
push
push
outsl
gs
mov
ja
out
add
pushf
mov
adc
sahf
inc
jb
cmp
jno
add
jb
mov
adc
and
stos
shll
loop
out
push
fadds
pop
mov
dec
sbb
insl
jns
inc
ror
dec
cmp
dec
pop
cmc
lods
scas
movzwl
test
je
xchg
divl
adc
push
cmp
add
sub
xchg
cs
loopne
loope
mov
xchg
icebp
mov
mov
cmp
loop
notb
sbb
lcall
rolb
mov
clc
outsl
ljmp
insl
dec
adc
repnz
in
scas
lods
out
stos
jg
xor
loope
inc
cld
pop
test
leave
xor
mov
xlat
loopne
pop
pop
xchg
lahf
or
mov
jge
test
mov
mov
mov
sbb
jb
or
or
cmc
cwtl
out
pop
dec
xchg
cmp
cli
cwtl
jns
mov
out
out
and
pop
sub
pop
dec
sti
andl
or
and
aad
aad
clc
shrl
xchg
mov
inc
inc
ja
pushf
outsl
inc
xchg
xchg
dec
adc
pop
cmp
xchg
sub
push
cs
sbb
into
sub
cltd
out
xchg
roll
fldt
mov
testb
les
push
pop
dec
push
jbe
insb
xor
int
cmp
add
bound
cmp
ljmp
xchg
loop
jg
out
mov
js
dec
sub
mov
jecxz
xlat
fbstp
jae
cli
mov
cmpsb
lahf
test
and
cmp
stos
dec
pop
or
leave
adc
nop
les
fwait
add
push
or
int
pop
cmp
int
fs
adc
nop
inc
cmp
push
lods
and
mov
test
mov
push
cmpsb
inc
add
add
hlt
or
loope
pop
add
jo
inc
sub
push
sub
aam
pop
jge
ja
popf
jecxz
cmpsl
fiaddl
stos
sbb
in
push
popa
mov
sti
dec
daa
cmpl
repz
pop
mov
jl
inc
cmp
pusha
adcb
jno
pop
mov
insb
in
sbb
cmp
imul
cmp
pop
sub
das
sbb
mov
test
xchg
xchg
mov
jnp
cmp
inc
push
inc
pop
orl
jnp
loop
je
les
dec
inc
insl
out
fistpll
pop
cmp
mov
pop
shl
push
ret
dec
sbb
pop
mov
bnd
out
stos
rcr
pop
sub
xchg
fwait
mov
cmovbe
sbb
int3
xor
stos
fwait
cmp
or
repnz
or
jnp
mov
clc
pop
popa
push
sbb
subl
xor
out
in
jg
push
xchg
sub
pop
adc
mov
xorb
mov
mov
sahf
les
leave
mov
in
inc
sub
jo
pop
stc
adc
bound
jbe
out
popf
icebp
es
lods
push
adc
pop
popf
or
fsub
jg
or
pop
mov
mov
jl
sbb
das
jo
mov
add
leave
jmp
aam
mov
bsf
jno
xchg
cmpsl
dec
jl
inc
mulb
sub
rcl
jnp
dec
pop
lods
inc
ret
dec
mov
xchg
add
push
pop
les
pop
fwait
inc
in
push
ret
cmp
push
imul
jg
sbb
push
outsl
loopne
popl
enter
adc
inc
cmp
cwtl
fsts
xor
mov
jbe
movb
pusha
lods
stc
add
pop
push
dec
nop
dec
cmp
fcmovne
roll
pop
adc
pop
leave
adc
mov
ffreep
movsb
push
dec
sbb
jne
pop
push
sbb
test
push
popf
call
sahf
ja
inc
or
sbb
into
jo
gs
int
xchg
xlat
xor
sbb
add
xchg
mov
movsb
popf
daa
pusha
hlt
add
lret
jge
xor
repnz
xor
clc
lods
repz
jmp
jnp
sub
sahf
popa
ja
cmp
pop
movsb
xchg
shrl
jae
ja
test
xor
xchg
xor
das
and
insb
dec
das
fisubrs
push
scas
data16
jne
xor
mov
add
dec
push
mov
shr
cld
pop
rcrb
movsl
jmp
lea
dec
movsb
jle
mov
and
orb
dec
fcmove
iret
push
aad
mov
xor
sbb
and
hlt
test
sbb
leave
pusha
lods
sub
mov
cwtl
push
or
aaa
arpl
scas
dec
push
or
rcll
ret
xor
add
sub
xorl
das
ja
js
xchg
mov
mov
xor
rorb
and
mov
das
leave
gs
mov
mov
lea
mov
insl
xor
fistpl
in
jne
push
cmpsb
sub
sbb
mov
pop
sbb
push
mov
mov
adc
sub
movswl
sub
clc
aas
vpshuflw
shlb
jle
sbb
repz
and
push
cmp
mov
arpl
fists
mov
adc
out
outsb
cmpl
cld
test
add
mov
imull
jnp
xchg
add
idiv
test
and
add
cmp
mov
xlat
lds
sub
loope
sub
in
repz
repnz
cmpsl
inc
mov
lcall
fcompl
test
cli
test
subl
pop
push
lret
sbb
sti
sub
lcall
jp
in
outsb
or
addl
jns
adc
fildll
and
dec
xor
mov
mov
sti
xor
push
movhps
inc
fstpl
sar
cmpsl
sbb
or
cmp
and
ljmp
cli
ficompl
fiadds
insl
out
adc
aad
fcompl
and
fwait
das
xor
push
xchg
add
xchg
pusha
pop
movsb
lcall
dec
push
inc
add
and
scas
jp
xor
fistpl
mov
outsb
stos
cmp
adc
enter
pop
lahf
cmp
cmp
sbb
adc
adc
stc
jle
movsl
inc
in
push
shll
arpl
cmp
movsl
mov
aas
iret
dec
jne
out
inc
test
ss
sbb
mov
sbb
idivl
dec
inc
mov
frstor
mov
jle
mov
jp
pop
push
dec
pop
adc
leave
jg
rorl
mov
push
cs
in
in
jnp
dec
inc
arpl
push
push
or
mov
push
or
addr16
add
addr16
ja
xlat
rol
fisttps
adc
nop
push
cmp
sbb
or
pop
lods
cwtl
xchg
test
mov
ret
into
testb
scas
push
addr16
pop
sbb
inc
dec
adc
das
popa
aaa
ret
js
sub
stos
sub
jecxz
or
xchg
sub
js
jmp
push
mov
xchg
xchg
and
lcall
imul
dec
inc
shlb
xor
nop
outsl
sub
add
daa
outsb
jne
or
mov
dec
movsl
xor
int3
push
and
inc
test
mov
je
ss
out
cmp
scas
cmc
add
fisubrs
sub
sub
push
iret
add
mov
repz
out
fdivrp
sahf
out
repz
dec
pop
fisubrs
jmp
jae
sarl
aas
ds
and
jno
insb
fsub
cmp
loope
lods
push
shrl
cmc
lret
mov
add
xchg
sahf
pop
fisttps
mov
outsl
sarl
insb
iret
fimull
scas
sbb
cli
dec
repnz
stos
or
je
stos
mulb
dec
leave
cmp
cmpsl
inc
jb
cld
mov
mov
dec
das
in
push
ret
mov
imul
out
mov
xchg
mov
scas
dec
mov
imul
call
push
cmp
enter
nop
dec
push
cmpb
fs
xchg
inc
outsb
pop
sbb
pop
nop
jle
and
cwtl
jnp
arpl
es
jne
mov
xor
rep
jge
movsw
lds
mov
adcl
add
adc
inc
out
popa
mov
mov
mov
push
orl
hlt
stos
cmp
push
push
clc
mov
sti
pop
fcomi
cwtl
fldenv
pop
cs
xor
add
pop
push
outsl
int3
mov
out
mov
jnp
lods
cmpsb
pop
movb
pop
dec
ret
push
cmp
fadds
push
es
mov
sbb
xlat
movsb
imul
in
jb
and
push
fdivp
xchg
inc
mov
jb
mov
addr16
ja
xor
les
enter
in
aad
ficoml
or
aam
ss
push
sarb
dec
adc
jmp
cmc
lds
pop
xor
push
cmp
pop
rorl
cmc
popa
pop
les
ja
clc
mov
mov
and
pop
jg
sub
imul
mov
sub
inc
jp
sbb
dec
cli
dec
test
lea
push
pop
gs
sbb
ror
cmp
mov
insl
stc
jbe
iret
pop
push
jnp
jae
ljmp
lock
pop
push
jo
movsb
clc
inc
push
pop
or
or
incl
add
cwtl
js
jb
mov
js
mov
mov
jge
jecxz
adc
out
jmp
mov
rolb
inc
aaa
into
add
sbb
inc
push
or
dec
stos
adc
in
xchg
test
add
add
dec
and
push
jmp
adc
jle
movsl
shll
xchg
repz
insl
paddusb
push
adc
repnz
imul
pop
jge
pop
jl
xchg
cmp
cmp
lock
fmuls
pushl
adc
jne
push
push
je
mov
rolb
ljmp
or
pusha
inc
call
aad
jns
xchg
add
sbb
fld
sub
mov
outsb
movsb
lock
adc
push
sub
popa
jecxz
leave
or
mov
das
sub
inc
aaa
xor
mov
jg
in
cltd
icebp
push
jo
inc
sahf
adc
or
loop
cmc
push
les
mov
xchg
insb
xchg
mov
mov
xchg
pop
cmpsb
iret
andl
sub
out
xchg
mov
int
pop
popa
mov
mov
aas
sub
sbb
repnz
and
jp
fcompl
scas
and
shlb
mov
nop
test
push
ljmp
std
jg
lret
bound
int
push
inc
in
or
outsb
shr
fs
and
scas
pop
xor
pop
lret
add
roll
arpl
mov
xor
push
pop
insb
push
fsubrs
jge
std
jp
mov
outsb
pop
xor
mov
out
cs
jnp
je
cmp
jmp
mov
xor
into
addr16
lret
stos
lds
mov
rcll
mov
mov
pop
mov
insl
lcall
lea
push
sub
mov
mov
push
add
imul
fistl
cld
sub
mov
popa
xchg
cmp
mov
aad
adcl
sbb
fs
lahf
call
dec
pop
aad
jne
mov
mov
xor
adcb
and
imul
cmp
push
add
xchg
negl
mov
xchg
jns
bound
inc
push
icebp
mov
pop
pop
cmpsb
lret
xchg
mov
mov
js
cwtl
xchg
outsb
mov
pop
inc
inc
dec
sub
test
fnstsw
adc
pop
mov
jae
mov
and
mov
idivl
pop
lret
scas
loopne
jb
inc
xchg
add
hlt
cwtl
xor
data16
imul
add
stc
push
sbb
sti
xchg
aad
adc
push
fisubrs
xor
lret
aas
scas
test
gs
mov
test
push
dec
das
gs
jae
mulb
loop
shlb
adc
cltd
or
mov
cmp
mov
outsl
mov
rcr
mov
pop
xor
lds
cmpsl
and
or
sub
mov
mov
jbe
or
push
push
pop
subl
mov
xchg
inc
pop
xchg
sahf
mov
push
inc
mov
cmp
rorb
mov
and
mov
lahf
in
clc
sub
aas
lds
cmp
adc
insl
mov
popf
adc
rolb
test
fsubr
and
pop
xor
add
mov
iret
sub
lret
xchg
es
xchg
ficomps
bound
bound
lods
sbb
sbb
cmp
cmp
xchg
scas
ret
inc
jne
iret
push
pop
test
mov
add
rorb
jg
adc
mov
add
and
stos
lret
std
mov
inc
bound
cmc
mov
fdivl
lret
movsl
movsb
stos
jb
minps
lock
loop
cmpsl
mov
mov
mov
jo
xlat
in
mov
mov
push
stos
inc
mov
inc
fcoms
sbb
inc
pop
push
lea
xor
jnp
sbb
sbb
lea
fisttpl
or
and
cmp
pop
pop
cli
sbb
fsubl
insl
repz
loopne
or
fdivr
pop
divb
push
xchg
mov
flds
out
fwait
lcall
mov
cltd
fstps
push
cmp
cmp
xlat
nop
and
xchg
sbb
sbb
push
pop
xlat
adc
mov
mov
mov
pop
add
shlb
jg
mov
stos
imull
inc
xchg
mov
jmp
stc
pop
inc
test
xorb
icebp
mov
and
xchg
pop
scas
pop
lods
test
fidivl
call
scas
mov
cmp
pop
into
pop
call
pop
xchg
leave
ficoml
xchg
sub
xlat
fimull
enter
jg
fcom
xchg
jmp
sbb
fs
mov
ret
popf
arpl
stos
dec
sub
push
loop
pop
js
inc
jo
lods
jl
xchg
stos
xor
mov
pop
pop
addl
lret
sbb
stos
adc
xchg
out
mov
xor
je
add
adc
int
test
aam
cli
dec
stos
push
push
test
repz
sahf
xor
xchg
or
pop
movsb
stos
cmp
adc
push
add
push
sub
dec
jnp
mov
outsl
cwtl
add
pop
sbb
std
loope
sbb
fnsave
test
int
xor
xchg
dec
fdivl
jg
cld
cmp
cli
and
popl
add
aas
decl
enter
stc
inc
test
cli
pop
fs
int3
push
imul
mov
cmp
xchg
fiaddl
push
ljmp
mov
sub
xchg
add
enter
sub
fwait
pushl
adc
pop
push
cmp
cwtl
adc
roll
push
cmpsb
inc
xor
xchg
les
mov
add
dec
popf
mov
mov
imul
clc
subb
insl
rcrl
enter
adc
cmpsb
enter
cmp
sbb
push
xorb
out
push
fs
test
jo
lret
lds
leave
sbb
fwait
mov
sbb
movsb
adc
nop
jmp
sbb
mov
inc
jbe
ret
or
aas
and
out
call
mov
jns
dec
jg
xor
ljmp
sbb
mov
cli
mov
aad
add
add
jnp
and
leave
scas
fbld
xchg
mov
xor
pop
insl
xlat
add
cwtl
cld
mov
movsb
cltd
jg
cmp
rcll
sub
sub
mov
sbb
xchg
enter
cmp
divl
or
addr16
addr16
out
xor
ja
clc
push
fwait
cmp
jg
nop
mov
lods
mov
or
inc
setge
addl
lods
scas
sub
add
lret
pop
rorb
xor
out
jnp
icebp
dec
and
mull
rcrb
ss
xchg
or
or
fucomi
pop
addr16
jmp
xchg
jo
cmp
jecxz
cmp
stos
add
loope
int3
test
ja
loop
xor
loopne
les
movl
movsl
jmp
mov
jbe
add
rclb
aas
cmp
daa
dec
les
lret
lret
sub
mov
jo
ja
push
cmp
jno
lods
sub
inc
inc
mov
adc
mov
rorb
cmp
sub
int
lahf
cmc
imul
and
xchg
cwtl
jb
xchg
nop
push
mov
sub
dec
ret
lcall
mov
sbb
jbe
imul
push
dec
movsl
mov
mov
push
les
adc
lret
je
pop
jno
xchg
and
idivb
adc
cmp
jl
cmpsb
add
cmp
imul
push
pop
cmpsb
cld
push
add
les
in
in
fdivrl
inc
cmpsb
cmp
lea
pop
ds
xchg
cmpb
push
es
pushf
and
push
icebp
jo
outsl
cmp
mov
lock
add
cwtl
mov
sbb
pop
rcll
mov
aaa
jge
lcall
hlt
and
ret
nop
adc
fadd
pushf
add
push
cld
mov
dec
mov
fnstsw
mov
das
outsb
cmc
test
or
clc
add
in
jns
enter
fnsave
xchg
out
lds
xchg
cmp
out
mov
xor
sbb
aas
adc
insl
popf
push
mov
xchg
adc
push
cmp
sbb
mov
or
adc
push
xchg
pop
leave
and
lods
mov
outsl
nop
mov
lahf
adc
adc
repz
loop
test
jbe
enter
mov
inc
jnp
daa
push
push
xor
shlb
mov
xlat
push
xor
inc
cmp
test
xor
idivb
jae
jo
push
sbb
push
dec
pop
sar
push
jle
std
lea
lea
aas
jae
mov
cmp
xor
out
pop
inc
add
andl
push
add
cmp
jne
clc
fwait
jp,pn
bswap
pop
shrl
lock
movsb
int3
imul
scas
sbb
cmp
mov
fcom
inc
ds
xchg
push
imul
bound
and
mov
out
fs
jle
test
scas
push
push
jno
leave
filds
and
test
jo
pop
je
jmp
xor
mov
or
popa
dec
adc
fmuls
or
les
pop
cmpsl
jnp
ret
imull
stos
insl
or
add
clc
push
loop
enter
stos
pushf
push
xchg
push
sub
add
push
fsts
sbb
mov
jge
dec
scas
in
sbb
jmp
dec
jno
das
out
or
xchg
mov
dec
or
movsb
add
xchg
and
iret
inc
mov
cmc
shlb
xor
loope
je
js
xchg
xlat
fidivrl
xor
insl
imul
mov
add
pop
insb
fidivl
mov
jg,pn
dec
jecxz
test
decl
in
dec
sub
jns
mov
push
js
mov
or
lret
push
cwtl
inc
lods
stos
lahf
xchg
jb
nop
dec
mov
add
mov
and
xor
mov
pop
in
cmp
cmp
sbbl
jge
dec
sti
or
jbe
and
outsl
or
mov
ror
xor
xor
ljmp
scas
out
xchg
xor
mov
test
pop
sti
pop
sbb
addr16
jbe
out
fisubs
inc
popa
pop
push
test
inc
loopne
and
neg
decl
pushf
mov
orl
outsb
shlb
sbb
xchg
cli
mov
mov
cmpsb
loopne
lret
std
pop
test
andl
movb
push
aam
aas
xor
cmp
incb
sbb
addr16
jae
repz
lock
shlb
sub
mov
xchg
loopne
mov
sub
mov
xchg
xor
shr
out
hlt
jb
lcall
dec
mov
sbb
imul
ret
xchg
add
adc
lret
sbb
lcall
pop
fldenv
sub
cli
lock
push
lahf
xor
jl
push
cmpsb
mov
pop
and
cli
adc
add
push
lds
dec
cli
adc
orb
xchg
push
pop
dec
push
divl
and
sub
mov
lock
cmpsb
inc
jl
and
or
mov
jno
mov
and
jo
fwait
lret
mov
pop
jbe
add
loopne
inc
arpl
int3
mov
lock
insb
cmpl
repnz
mov
push
xchg
pop
adc
lcall
dec
mov
ds
add
jno
movsl
inc
and
or
adc
xchg
aad
mov
stc
mov
pop
xchg
insb
sbb
in
shrb
cli
mov
shl
test
cli
pop
inc
add
mov
pop
dec
jecxz
test
outsl
mov
cmp
xchg
pop
or
aad
or
sti
mov
aam
out
scas
pop
or
xor
outsb
adc
iret
jl
add
push
xchg
ss
jne
test
mov
adc
xor
arpl
out
es
mov
jl
addl
aas
jae
push
xchg
cmp
jg
ja
pop
lret
jmp
arpl
jno
mov
lret
add
jo
loopne
inc
cmp
in
jge
hlt
into
mov
enter
std
sbb
aad
inc
lea
xor
rcrl
xchg
xchg
in
pop
cmc
fisttpl
jmp
pop
pop
iret
push
sub
xor
js
xchg
sub
out
popf
mov
dec
out
ret
jns
jo
int3
pop
enter
inc
xchg
jp
fidivs
add
push
dec
or
sbb
adc
mov
jp
xchg
fwait
repnz
push
popf
lcall
pop
fldt
cmp
clc
in
pop
and
repz
pushf
xchg
push
test
xchg
mov
jg
lds
ljmp
lcall
call
sbb
jae
xchg
in
push
jae
adc
mov
shlb
movsb
ret
sub
jnp
enter
gs
orb
into
icebp
sbb
int
into
mov
loope
mov
mov
pop
popa
roll
outsl
test
icebp
xchg
push
inc
jge
push
inc
sub
add
pop
sti
pop
in
lea
xlat
adc
cltd
push
clc
cmpsb
lret
lds
jnp
sahf
ds
inc
pop
pop
lcall
fwait
sbb
pop
loop
dec
lea
push
icebp
xchg
enter
dec
push
adcl
add
popf
fwait
js
push
mov
mov
or
push
ret
xchg
test
push
imul
nop
imul
mov
fwait
mov
dec
dec
cmpsb
scas
adc
mov
ja
inc
loope
cmp
cmp
ds
gs
lock
popa
inc
and
adc
sub
adc
rcl
adc
lahf
push
lret
sub
sti
sbb
add
jecxz
inc
pop
adc
mov
cmp
pop
jmp
ljmp
or
push
clc
mov
movsb
inc
pop
or
jg
adc
add
pop
push
es
addr16
sarb
adcl
insl
mov
aaa
in
mov
mov
loopne
mov
add
mov
or
fsubrl
neg
mov
out
and
xchg
test
push
insb
aam
mov
inc
mov
ret
cmpsl
jecxz
cmpl
inc
xchg
idivl
push
adc
jbe
ftst
xchg
jg
xor
add
fbld
jo
jg
mov
dec
mov
push
xor
jecxz
movsl
ljmp
jl
out
js
cmc
add
inc
addr16
jne
xor
rolb
pop
lea
inc
lock
imulb
sbbl
dec
push
adc
popa
or
fdivrp
fwait
std
dec
mov
das
ret
cwtl
stos
jb
push
sub
xor
lahf
fs
data16
mov
mov
mov
dec
pop
inc
int3
mov
pop
add
test
scas
mov
arpl
jmp
jmp
stos
scas
enter
mov
pop
out
add
adc
xor
xchg
mov
out
push
lret
mov
push
dec
inc
mov
pushf
dec
mov
std
add
rclb
stos
xchg
lret
subl
lret
inc
icebp
push
lock
and
sbbb
jns
in
mov
pop
out
sub
jae
cs
inc
mov
mov
js
ret
test
push
pop
fnstenv
lods
sbb
adc
outsl
mov
xchg
ds
out
call
fnstcw
adc
jg
jnp
jmp
or
clc
push
js
sti
push
mov
icebp
stos
shlb
ljmp
push
fcompl
stc
mov
or
ret
jmp
jmp
lret
jp
cld
cmp
cmp
stc
ss
adc
das
int3
and
inc
loop
mov
or
or
sbb
sub
out
xchg
popa
push
jg
dec
mov
and
pop
add
pusha
add
xchg
sub
push
mov
call
cmp
add
gs
cmpsl
nop
sbb
xor
mov
sbb
push
int
test
mov
dec
or
lods
adc
pop
jmp
stos
sbb
mov
push
rcl
enter
xor
das
movsl
add
sbb
les
xchg
jne
add
mov
and
jae
sbb
push
mov
lds
cmp
fcmovbe
cmp
or
mov
inc
jns
add
mov
lret
lods
dec
pop
fidivrs
mov
fidivs
mov
jns
mov
xor
leave
fwait
xchg
lea
aas
push
out
clc
icebp
mov
and
push
lcall
pop
data16
cli
jle
adc
stos
xlat
fstps
out
adc
ds
dec
pop
in
aas
std
or
sbb
int
das
rclb
xchg
cmpsb
fs
lock
leave
vcvtdq2pd
inc
mov
in
lods
call
adc
cmp
dec
mov
iret
cmp
hlt
sti
popa
jg
loope
imul
pop
rolb
pop
shll
add
sub
dec
pop
std
jecxz
int
insl
les
stc
add
aaa
movsb
pop
or
jno
jb
das
pop
jne
or
aas
push
mov
loope
mov
pop
fimuls
xor
cmp
loop
in
stos
sti
mov
xor
cli
sub
cs
dec
out
mov
fwait
mov
push
shr
cmp
test
pusha
or
insb
sbb
push
pushf
jmp
mov
adc
dec
push
push
dec
popa
lea
sbb
lods
into
cld
push
iret
jno
jno
bound
mov
lods
add
les
sbb
pop
imul
jb
jp
aad
inc
mov
and
add
lock
cmp
mov
xchg
inc
mov
xor
xor
add
test
mov
test
jno
adc
mov
ljmp
aaa
movsb
loop
dec
inc
cmp
xor
idivl
fdivs
fwait
or
hlt
push
sub
adc
adc
xor
scas
test
aaa
adc
sbb
push
outsl
push
or
xor
repz
and
mov
cwtl
sub
push
fstps
inc
in
cmp
fwait
arpl
jnp
popa
or
xchg
lcall
or
ret
mov
jbe
cwtl
insl
lock
leave
push
jecxz
jns
mov
or
incb
add
pop
mov
rclb
pop
stos
mov
addl
addr16
in
repz
xlat
or
cmpsl
mov
xor
jo
into
cmpsb
jmp
pop
movsl
push
cmpl
jno
xor
xor
outsl
call
push
fdivr
idiv
push
or
call
mov
adc
int3
mov
dec
jb
add
stc
test
movsb
dec
stos
repz
lcall
or
les
std
dec
fidivs
and
in
fdivr
xor
dec
mov
sarl
mov
jmp
add
mov
add
push
or
xchg
test
icebp
mov
mov
and
hlt
out
mov
call
fstpl
dec
fistpll
fwait
lock
push
dec
pop
cmp
cmp
repz
ret
call
and
mov
and
mov
sbb
or
addl
add
mov
jle
or
jl
jp
add
mov
rorl
jmp
pusha
jae
in
mov
pusha
mov
and
jae
xchg
rcll
add
push
hlt
mov
xchg
sub
shrl
int3
push
or
addr16
push
jmp
leave
push
lods
jbe
cld
mov
fiaddl
flds
loope
outsl
dec
xchg
ret
mov
jb
inc
cli
loope
mov
ljmp
aam
ds
shrl
add
addb
cld
xor
out
repz
dec
loopne
inc
push
sub
mov
icebp
pop
pop
adc
cmp
mov
pop
sti
xor
xchg
shll
jge
xchg
fdivs
ret
lods
ja
mov
xchg
add
xchg
add
pop
into
jle
mov
aas
sub
cmp
mov
xchg
arpl
nop
outsb
add
xor
mov
lret
test
aad
sbb
and
lock
iret
mov
sbb
int
leave
sub
out
fimull
xor
ja
ds
and
incl
mov
fdivl
in
cmp
icebp
ss
ffree
push
mov
iret
repz
das
and
sbb
clc
dec
dec
or
mov
xchg
loop
aas
dec
lods
scas
xchg
pop
inc
xchg
cmc
into
cwtl
or
push
xor
inc
mov
aam
lcall
cltd
add
push
out
out
imul
test
or
testl
jle
jne
icebp
adc
imul
push
repz
mov
fisubrl
add
push
adc
dec
mov
inc
jmp
pop
ss
dec
jp
jnp
or
xchg
jb
notl
sub
sbb
test
inc
in
les
jg
jbe
popa
inc
xor
and
sbb
mov
ret
sti
leave
test
mov
push
sbb
adc
scas
bound
je
xchg
je
push
and
loop
jle
je
mov
or
mov
jb
in
push
imul
and
jnp
aam
or
pushf
jecxz
pop
or
and
cmc
mov
jbe
mov
inc
push
cmc
sbb
jnp
cmp
lds
or
xchg
or
ja
adc
pop
mov
movsl
push
pop
mov
push
dec
nop
pop
ds
ffreep
mov
je
adc
mulb
jg
inc
mov
ds
xchg
imul
dec
test
cwtl
add
lcall
pop
std
leave
mov
popf
shrl
je
mov
mov
fstp
dec
mov
pop
leave
mov
dec
sahf
sbb
stos
jmp
jle
shrl
cmp
cld
mov
push
popa
push
ffree
xchg
or
push
jge
pop
pusha
pop
sbb
jmp
lcall
sub
ljmp
cltd
inc
fisttpl
inc
js
mov
int
xor
out
cmpsb
sbb
movsb
sbb
pop
fwait
das
loopne
in
sbb
mov
enter
test
adc
pop
hlt
jecxz
lea
mov
dec
mov
movsb
mov
test
fcmovbe
or
adc
stos
jae
push
loop
mov
mov
jno
pushw
push
dec
outsl
rolb
add
sbb
sbb
sub
or
insb
lods
cli
jns
pop
ret
inc
adc
aam
clc
mov
mov
mov
ljmp
mov
mov
sub
lcall
mov
and
sbb
push
or
adc
fcoml
jbe
call
add
cwtl
or
jno
or
sahf
incl
in
adc
push
std
ret
les
scas
ljmp
cli
add
rolb
push
push
pop
sub
mov
je
push
jbe
mov
jnp
out
dec
fyl2x
fdivrs
jge
imul
fildl
sub
aad
add
gs
cmp
hlt
movsl
test
mov
imul
fwait
ds
mov
mov
mov
fistpl
ss
lcall
bound
outsl
mov
inc
pop
call
lock
jo
and
or
sbb
stos
pop
mov
jg
and
movsl
jg
fistps
test
mov
pop
mov
xor
lcall
sbb
cmpsb
pop
cltd
sub
jb
add
data16
fmuls
inc
push
popa
rcrb
js
or
popf
sub
loop
outsb
jb
dec
test
mov
int3
pop
jecxz
scas
dec
insb
sbb
cltd
popa
pop
xchg
fadd
jg
mov
stos
jb
jmp
cmpsb
out
add
into
scas
sub
stc
sbb
xchg
mov
mov
push
push
jp
pop
int3
mov
pusha
push
repz
cmp
fsubrs
and
negl
mov
mov
mov
mov
jbe
adc
mov
inc
mov
lods
pusha
inc
push
mov
adc
push
push
aaa
leave
inc
stc
dec
inc
xor
xchg
xchg
imul
insl
jno
add
cmp
cmp
bound
gs
adc
xchg
addr16
aas
mov
lret
mov
inc
and
ss
mov
lcall
sub
scas
inc
test
leave
mov
push
subb
xchg
lods
into
and
pop
and
mov
sub
mov
pop
mov
cwtl
jo
push
adc
jecxz
push
into
lret
repz
outsl
sahf
adc
shl
mov
mov
push
and
outsl
or
js
popf
ficomps
dec
xor
jns
xor
mov
ret
lods
and
mov
sub
add
mov
cs
pop
jb
push
std
popf
jp
sahf
in
xbegin
adc
pusha
ljmp
mov
dec
mov
or
add
movswl
sub
inc
daa
in
sbb
test
js
fidivl
aaa
pop
dec
daa
xchg
loope
rcrl
lea
insl
inc
and
sub
sbb
xchg
push
into
pop
mov
sbb
pop
pop
outsw
jne
out
sbb
mov
or
adc
hlt
bound
add
mov
testl
sbb
shll
call
test
pop
xchg
faddl
pop
stos
movsl
ficoml
push
nop
fiaddl
push
xor
out
xchg
inc
cmp
xchg
push
pop
mov
mov
pop
fs
xor
roll
or
in
cmc
pop
mov
mov
call
sub
ret
in
arpl
rorl
aad
mov
jns
add
lea
shlw
mov
test
jg
cli
pop
mov
stos
sub
sarb
test
cmpl
mov
sbb
imul
addb
repz
add
or
jmp
jo
popw
andl
cmp
add
push
sub
cmp
and
mov
in
aad
mov
xor
mov
ds
jae
fimuls
xor
jne
dec
rorl
test
les
fistpl
fnsave
call
sbb
arpl
mov
mov
cld
or
notb
lds
xchg
fisubl
popa
test
inc
in
das
mov
insl
jb
sbb
sbb
gs
in
xchg
dec
or
inc
stc
push
test
clc
pop
mov
jns
mov
dec
add
loope
testb
cmp
imul
mov
clc
sub
add
inc
imul
jae
addl
mov
testl
jno
inc
sub
push
testl
lcall
imul
add
or
mov
mov
cwtl
jnp
cmp
orb
mov
negb
decb
loop
jle
aaa
xor
dec
gs
movl
scas
scas
repz
pop
jmp
popa
sbb
bound
aad
xor
call
sbb
push
cmp
pop
int
lods
mov
popa
rorb
iret
stos
fisttpl
cmp
in
jne
ss
inc
pop
movsl
in
das
clc
jo
test
xchg
lahf
push
xchg
sbb
outsl
or
cltd
and
add
mov
icebp
sti
cwtl
pop
inc
pop
pop
sub
jmp
mov
subl
scas
jl
sub
xchg
sahf
clc
xchg
sub
dec
dec
sbb
test
icebp
sub
mov
ljmp
inc
loopne
sub
pop
inc
jo
jo
xchg
push
aam
js
mov
out
scas
cwtl
and
movsl
outsb
xchg
repnz
inc
out
cmp
stc
jge
mov
jns
popa
inc
jg
xor
mov
mov
imul
cmp
adc
out
inc
xorb
add
rcr
int
mov
adc
xchg
or
xchg
and
lret
xlat
lcall
jno
sub
mov
mov
pop
imul
fisttpl
rcrl
cmc
mov
push
mov
pop
jns
sbb
mov
subl
ret
imul
adc
fstpl
arpl
aaa
insb
ud0
and
stos
enter
push
int
arpl
mov
xor
movsb
in
sti
call
mov
mov
pop
pop
xor
inc
lods
jne
scas
andb
shrl
jmp
int
push
mov
inc
es
lods
xor
dec
loop
les
inc
or
push
clc
das
outsb
dec
pop
xchg
pop
mov
cmp
test
inc
cli
push
mov
aad
js
stc
adcb
mov
jmp
or
hlt
dec
std
sti
mov
jo
xchg
ds
mov
push
push
stos
and
mov
push
or
dec
sbb
inc
shl
mov
push
push
xchg
mov
push
push
cwtl
inc
xor
sub
mov
mov
lods
leave
sub
lods
and
push
clc
sbb
test
jg
adc
inc
adc
sahf
out
mov
pop
pushf
jo
lds
loop
sub
loop
in
or
pop
imul
nop
ror
cmp
loop
js
nop
insl
fstl
adc
fdivl
jo
dec
adc
scas
push
movsb
jp
add
stc
xchg
outsb
jae
fidivl
enter
fwait
inc
xor
and
and
js
lret
lret
aas
shlb
repz
inc
push
push
inc
lods
mov
into
xorl
popf
mov
and
aad
cwtl
cmp
xor
add
popa
roll
movsb
subl
aaa
popf
insb
je
pushf
push
shll
sbb
lahf
int
pushl
and
add
jo
stos
fnstsw
push
xor
ljmp
pushl
fstps
cmp
adc
add
sub
cmp
aas
sub
out
jmp
gs
imulb
mov
adc
mov
cmp
mov
hlt
in
xor
and
cli
fdivrl
mov
hlt
push
lahf
sbb
mov
cmp
mov
xorl
pop
leave
sub
mov
daa
ja
jmp
cmc
addr16
clc
pop
xor
insl
xchg
mov
sbb
push
bt
loope
adc
add
jb
sbb
pop
cmp
cmpsl
adc
in
mov
addb
cltd
mov
add
arpl
xchg
add
jecxz
sbb
jne
and
mov
les
aad
in
lret
adc
sbb
mov
xor
int3
pop
das
loope
sub
aaa
stc
pushf
inc
add
repnz
insl
cmp
andb
js
rcrb
adc
mov
sahf
mov
dec
dec
xor
pusha
stc
sub
mov
push
or
mov
scas
mov
and
push
add
mov
or
mov
gs
fcoms
mov
jo
cltd
push
cmp
sub
cmp
jb
and
mov
cmc
cwtl
mov
jne
loope
cli
loope
std
lods
or
jle
mov
or
cwtl
fstps
in
adc
test
cmpsb
mov
add
sbb
sub
sbb
push
ja
push
xchg
ret
in
pop
repnz
add
cli
pop
out
xor
daa
ror
mov
mov
imul
ljmp
push
push
mov
iret
aaa
dec
cmpsb
mov
sbb
pop
fs
pop
scas
ljmp
sub
test
jne
in
lea
scas
movsl
push
rcll
pop
fistpll
sti
or
mov
call
in
pushl
aam
outsl
dec
and
jle
cmp
notl
mov
int
cltd
loopne
mov
stos
mov
mov
push
lods
lret
movsl
andb
mov
push
inc
mov
lret
lock
loop
dec
imul
ja
jae
loop
dec
xchg
push
mov
jg
sbbb
fsubl
cmp
fwait
pushf
push
pop
cltd
lods
jg
push
arpl
les
mov
inc
inc
push
mov
les
adc
lds
hlt
push
cmp
pop
in
aam
ss
rorl
pop
or
cmc
sub
ds
in
mov
jno
dec
cmp
shll
lods
outsb
mov
mov
mov
pop
push
push
push
or
fcoml
add
test
jb
jmp
fstpl
iret
and
insb
cmc
test
into
sti
jge
and
mov
adc
pop
repnz
mov
test
add
test
dec
mov
inc
push
in
mov
insb
test
push
jl
fdivrl
jb
ljmp
std
leave
xor
mov
xor
scas
shlb
jb
add
rclb
push
ds
add
dec
shll
add
fwait
cmp
push
rcl
mov
ja
repz
aam
cli
adc
sbb
and
dec
add
mov
xchg
addr16
outsb
push
pushf
stos
out
mov
push
sbb
xchg
imul
gs
and
push
jp
ficompl
add
shlb
jbe
sub
lcall
or
add
lods
hlt
cmp
gs
sub
mov
das
out
push
rcl
mov
lds
xor
xlat
xor
cmc
mov
mov
jnp
sub
cwtl
adc
push
push
pop
scas
cmc
rcl
stc
testl
push
testl
lods
mov
std
rcrl
mov
add
scas
add
jae
mov
mov
or
jb
ja
test
mov
js
inc
dec
sub
inc
lret
es
adc
inc
cwtl
sbb
outsl
repnz
or
jae
arpl
push
shrb
inc
sub
fdivrl
jg
jmp
or
add
cmp
xlat
in
or
sub
adc
xor
cmpsb
sub
iret
sbb
jns
mov
out
shrb
int
je
rcll
xchg
subl
pop
iret
stos
jo
and
in
repz
rcl
stos
adc
lahf
pop
xor
cmp
adc
cmp
mov
add
dec
push
push
jmp
and
rcl
in
ret
sbb
data16
jae
fdivl
adc
cmp
insl
mov
mov
adc
movl
xorl
nop
sbb
fisttps
outsl
movsl
mov
inc
fldt
and
icebp
push
jg
shl
pop
shll
daa
mov
stos
push
lods
dec
mov
dec
inc
cmp
cli
xchg
dec
fidivl
dec
icebp
dec
inc
ror
mov
cmp
iret
cmpsb
popa
out
sub
enter
iret
sbb
leave
sarl
fwait
pop
sbb
cmp
aas
and
pop
icebp
cmp
fs
js
dec
push
jg
push
pop
inc
test
sub
loope
and
sbb
jnp
mov
pop
xor
fwait
lahf
dec
imul
push
inc
decl
sbb
mov
rcrl
insb
xor
cvtps2pi
and
mov
xor
jmp
push
loope
mov
sar
rep
cmp
xor
lds
bound
ficoms
lret
pop
xchg
pop
in
mov
cltd
cli
test
sub
call
cltd
xor
pop
ficoml
sub
jbe
loop
pop
jmp
pop
sub
inc
cltd
mov
xchg
sbb
test
dec
push
pop
fwait
xchg
cmpsl
jmp
lods
xor
push
aaa
inc
sbb
out
imul
inc
lret
fistpll
out
inc
mov
cmp
out
push
aad
and
sarb
jno
hlt
out
or
xchg
ds
lcall
xor
cld
push
leave
scas
pop
xchg
ja
stos
xor
ret
mov
cmc
jecxz
mov
loop
sbb
mov
lock
jo
mov
push
das
add
inc
or
mov
aam
imull
pop
call
icebp
push
int
fs
mov
jl
push
mov
out
adc
or
inc
inc
out
lods
xor
ja
ds
hlt
dec
push
ror
aad
lret
ss
inc
jae
cmp
sub
mov
and
push
mov
push
andb
xor
pop
mov
outsb
mov
push
ror
inc
jb
jle
inc
stos
dec
hlt
xchg
lret
pop
pop
icebp
xchg
imul
data16
es
push
pop
lods
out
jae
test
fsubs
in
add
adc
int
jl
push
xchg
adc
je
jl
jl
mov
xlat
cs
dec
call
stos
xchg
push
cmpsb
stos
inc
rcrb
push
push
mov
cmp
divl
in
testb
addr16
jae
les
mov
push
mov
adc
jmp
cs
adc
clc
xchg
in
inc
ret
loop
push
jno
adc
fcoms
sub
sti
cld
pop
pop
cmp
rorb
push
test
add
lret
add
sbb
xchg
loope
jne
xchg
mov
addr16
imull
xor
add
cmp
insl
jns
xor
push
mov
and
add
jl
pop
in
insb
xor
sbb
adc
inc
rcrb
bound
inc
daa
nop
pop
mov
lds
shrd
adcb
lret
inc
arpl
push
outsb
outsl
xchg
popa
leave
movsb
dec
inc
sbb
cmpsl
jo
pop
stos
cmp
out
push
jne
and
pushf
pusha
sbb
jnp
mov
mov
xor
inc
jcxz
mov
in
mov
ss
mov
repz
xor
imul
cmpsb
pop
and
test
loop
push
rcr
inc
jns
fstps
and
aaa
mov
adc
in
jecxz
sub
xchg
dec
bound
xchg
push
adc
ss
mov
push
sub
idiv
and
push
clc
iret
dec
sahf
pop
push
add
mov
jae
adc
imul
jg
repnz
push
xchg
data16
stos
scas
cmp
test
test
cmp
or
push
sub
aas
xor
mov
idivl
sub
fs
sub
and
push
dec
pop
mov
stos
je
ficompl
stc
push
mov
xchg
ret
or
pinsrw
in
sbb
jg
pop
push
decl
jg
dec
sub
ret
push
daa
imul
mov
andps
aam
dec
testl
push
aas
stos
notb
pop
stos
fldcw
dec
mov
daa
fxch
mov
pop
dec
nop
adc
pop
adc
cmp
out
jle
sbb
in
call
les
mov
cmpsb
sbb
jbe
sub
dec
ret
push
test
jo
subl
add
movsb
cmpsl
jmp
je
sub
push
sti
popa
inc
dec
push
lods
rcr
cmc
testl
aam
jb
mov
cmpsl
jecxz
iret
jmp
in
shrl
adcb
pop
fsubs
stc
dec
outsl
jne
call
test
mov
dec
ss
icebp
dec
pushf
pushl
add
int
dec
sub
in
mov
ret
shrb
shll
ss
out
mov
popf
sub
ret
scas
xor
scas
cld
add
dec
mov
dec
xor
in
ss
jl
jns
and
jl
decb
xorb
divl
imul
icebp
mov
or
lret
test
push
int3
add
mov
clc
scas
xchg
imulb
dec
lahf
fdivl
mov
cmpsl
push
sbb
scas
pop
sub
cmp
lods
mov
out
icebp
sub
je
aam
mov
insb
out
add
and
outsl
movsl
pushf
jmp
mov
je
testb
inc
repz
sbb
cmp
fstl
nop
xor
lahf
stos
pushf
mov
xchg
cli
mov
sbb
dec
xchg
cmpsb
push
xchg
mov
js
mov
jg
movsb
shrb
jecxz
rolb
mov
mov
inc
adc
mov
orl
pushf
sub
jbe
lea
sbb
stc
jl
cmp
inc
cmp
push
xchg
imul
popa
jnp
loope
aas
add
mov
arpl
mov
lcall
scas
and
lcall
stos
mov
cmp
inc
ret
movsb
call
ficomps
dec
rorl
jb
out
push
negl
outsl
outsb
jo
sbb
lods
fistpll
stc
imul
xchg
notb
xor
and
in
mov
jb
lds
mov
adc
lcall
sbb
fdivrl
fwait
movl
cmp
loop
outsb
or
testb
jo
or
mov
in
push
sbb
pop
mov
and
mov
fst
pop
scas
mov
in
movsl
repnz
dec
frstor
into
jae
sbb
popf
divb
push
or
popf
push
ret
lret
outsb
sbb
adc
mov
xor
xchg
jmp
in
test
mov
dec
mov
fs
clc
rorl
out
aam
icebp
imul
pop
scas
fs
loope
xchg
fisttps
push
lds
popa
cs
addb
cld
fdivl
imul
xor
outsb
mov
jae
ljmp
sub
push
scas
movsb
add
fists
add
xor
or
sub
or
jo
dec
adc
mov
leave
sub
xchg
xor
cmp
xor
fldpi
mov
gs
cmp
dec
dec
mov
into
push
out
fimuls
mov
push
jecxz
and
and
add
pop
pusha
sub
push
sti
addr16
stc
rolb
add
sub
and
loope
in
and
and
sub
daa
in
and
pop
jmp
pop
mov
fstpt
push
arpl
sbb
lea
add
fistpll
xor
xchg
movsl
add
push
sub
xor
or
mov
into
sbb
xchg
jle
xor
dec
sub
xchg
dec
inc
mov
stc
scas
pop
js
lods
loop
test
sahf
dec
jno
fsts
imul
rcll
out
xor
and
dec
inc
mov
adc
enter
rcrb
add
cmp
outsb
push
popf
mov
dec
mov
clc
jns
xchg
shrb
sbb
push
inc
mov
ss
jmp
dec
pop
outsl
xchg
aad
out
add
in
or
out
mov
add
inc
mov
shlb
lcall
push
mov
or
sbb
cs
fsubrp
jae
int3
xor
shrl
fbld
in
addl
adc
ds
inc
push
adc
ror
push
xchg
and
incl
cmpsb
mov
popa
fstpl
pop
cmp
adcl
addr16
ret
ret
jnp
icebp
adc
push
push
mov
mov
add
in
addr16
sub
mov
rcrl
jg
sub
add
add
es
jl
jno
pop
cmp
stos
subb
out
xchg
cmp
xor
stos
sbb
icebp
xchg
repz
fadds
pop
add
pusha
movsl
scas
outsl
push
ret
fwait
popa
orb
rorb
cmp
xchg
pop
xchg
fimuls
sbb
sub
out
cwtl
mov
xchg
xchg
cs
fs
mov
mov
mov
cmp
leave
inc
jmp
mov
jbe
in
xchg
add
adc
add
into
rcll
xchg
mov
fsubl
pop
mov
jmp
ret
push
push
cmpsb
rcll
std
popf
iret
out
sar
ret
lods
lahf
inc
scas
mov
movsb
fisttpl
por
cwtl
mov
in
ror
fildl
cltd
enter
mov
or
mov
or
data16
push
dec
pop
mov
xlat
push
inc
push
fistpll
repz
fdivl
sbb
shrb
scas
enter
shl
pusha
shrb
sub
loopne
lds
test
pop
sub
sub
push
fs
lds
outsl
cld
sti
inc
cmpsl
inc
jg
nop
sub
mov
adc
push
cld
sarb
push
cmp
jbe
inc
mov
clc
adc
jb
arpl
std
fnstcw
loope
mov
push
sub
daa
scas
jnp
or
rcl
push
idivl
enter
dec
dec
outsl
repnz
stos
in
jne
mul
sub
sub
sbb
jg
jecxz
add
into
cli
or
not
dec
in
dec
les
add
jmp
push
aas
pusha
xlat
aas
inc
xor
lea
mov
sbb
gs
fmuls
or
nop
or
xchg
lds
es
inc
push
fmuls
cmpsb
lods
int3
xor
pop
fidivs
xlat
orb
jne
adc
iret
dec
shll
xor
ljmp
cmp
jnp
in
mov
in
in
xor
jp
fistps
ja
xchg
int3
inc
sub
pop
adc
dec
or
dec
dec
les
cs
lahf
sbbl
mov
mov
mov
mov
lret
push
sti
jg
add
and
test
xchg
rol
into
pop
xor
in
pop
addr16
mov
clc
cmp
sar
xchg
sbb
mov
bswap
mov
sti
mov
adc
jnp
es
mov
js
loop
cmp
push
lret
arpl
scas
jg
cmp
cli
jno
jge
enter
loopne
or
add
jp
inc
or
mov
push
repz
cli
xchg
jmp
xchg
outsl
or
jge
div
test
cmp
sbb
in
xchg
mov
xchg
loope
fimuls
sub
jne
or
sbb
scas
pop
mov
aas
sbbb
fnstcw
mulb
aam
and
cmp
adc
test
fyl2xp1
mov
mov
scas
push
xchg
das
mov
sub
int
xchg
cmp
loope
pop
ret
push
enter
repz
pop
and
sbb
jno
or
mov
and
mov
test
xlat
cld
daa
out
xor
or
push
pop
aam
push
cvttps2pi
les
outsb
fcmovnb
add
add
push
dec
and
mov
andl
sbb
and
sbbb
pusha
sbb
cwtl
pop
jmp
fldcw
sahf
mov
xor
fisttpl
leave
outsb
movsb
xchg
mov
bound
in
imulb
sbb
int3
mov
push
cmc
push
test
outsb
xor
into
push
ja
sbb
jne
cmp
jae
mov
mov
adc
out
pop
aad
out
jle
mov
aam
test
pop
scas
sub
inc
ds
pop
gs
lock
icebp
dec
fdiv
pop
rolb
or
fnstsw
jno
push
cmp
andps
add
mov
testl
mov
sub
nop
xchg
or
out
pop
jbe
cmpsl
and
pop
stc
pop
pop
mov
test
xor
pop
cmc
and
xor
shrl
inc
into
adc
cs
jbe
jne
jmp
sqrtps
or
pop
or
or
pop
mov
sub
push
add
mov
pop
outsl
push
insl
cmp
shrb
cmc
pop
jbe
cmc
jp
cmpsb
idivb
testb
pushf
inc
pushf
ds
lds
fmuls
jb
movsb
push
xorl
xor
pop
test
cs
imul
lock
mov
inc
fwait
cltd
jle
sbb
sub
sub
iret
out
push
and
incl
sub
jnp
pop
faddl
dec
push
cli
dec
add
xor
nop
dec
xlat
push
popl
or
int
adc
xor
test
xor
repnz
xchg
pushf
fcomp
sbb
iret
pop
test
fldenv
fs
push
push
xor
pop
jp
loope
ss
sub
push
shll
xchg
or
adc
or
ficomps
mov
arpl
popa
push
in
imul
and
inc
fsub
ja
cli
inc
jne
add
xchg
test
cmp
std
lret
xchg
fdivrs
sub
cli
lods
subl
sbb
sbb
jge
rcll
shll
fsubs
and
outsl
out
or
inc
icebp
push
repz
shrl
ret
imul
cmp
and
inc
mov
adc
mov
jb
xor
mov
roll
sub
das
fimuls
xchg
pop
push
or
test
add
stos
jmp
mov
jnp
data16
insl
xchg
test
xor
pop
push
and
test
fisubl
push
push
mov
das
jno
add
xor
cmp
jbe
rcrl
subl
lods
test
push
aas
cltd
in
dec
inc
ljmp
stos
sub
lock
adcl
push
push
cld
xor
test
sbb
add
dec
stc
insb
shll
mov
dec
xchg
xchg
mov
mov
js
clc
gs
loop
cmpsb
jne
subb
inc
mov
inc
xchg
in
xchg
mov
mov
cmp
add
into
mov
lcall
push
mov
dec
add
arpl
push
mov
lret
xchg
repz
cs
bound
leave
cmp
xor
push
sbb
mov
xchg
out
push
and
xor
adc
mov
stos
xorl
push
lods
es
test
bound
ficoml
out
aas
jns
sub
add
cli
fwait
add
hlt
aad
fs
sub
or
mov
push
sahf
mov
add
mov
rolb
mov
jno
daa
ljmp
rorl
cmp
xor
mov
lcall
mov
fimuls
xlat
pop
add
adc
into
lret
mov
push
cltd
inc
inc
lahf
in
sub
cmp
lock
scas
fs
xchg
sbb
inc
iret
lret
jmp
xchg
cmp
pop
aaa
aaa
mov
xor
repz
adc
mov
lea
ja
and
mov
jmp
dec
aaa
jnp
data16
xor
and
inc
xchg
push
in
stos
pop
enter
fldcw
in
mov
add
cmp
cmp
xchg
or
pop
or
cmp
test
sbbb
ljmp
mov
jle
xor
sub
pop
xor
addr16
lret
mov
inc
jmp
mov
pop
mov
in
fidivl
dec
movsl
inc
dec
scas
ja
fwait
dec
lock
sti
ds
mov
inc
mov
sbb
mov
push
stc
jl
clc
sarb
mov
mov
scas
push
lea
pushf
or
inc
pop
js
inc
mov
pop
incb
push
loopne
cmp
mov
sbb
dec
test
cmpsb
jle
mov
pop
xor
fistpl
push
jecxz
test
push
in
test
mov
jnp
dec
pop
icebp
push
in
push
outsl
sub
and
mov
and
inc
or
aas
stc
nop
lcall
enter
push
inc
movsb
cmp
xchg
cmp
xor
cwtl
jne
repz
sub
mov
jbe
inc
nop
daa
jo
ficompl
sbbl
jb
jl
jnp
in
and
xchg
pop
mov
add
aaa
cmp
test
stc
test
rcll
rol
sbb
nop
inc
sbb
dec
push
xchg
mov
aad
mov
call
push
into
mov
pop
insb
jne
hlt
insb
and
push
xlat
aas
push
cld
movsl
add
aas
jno
scas
add
adc
insl
aas
add
in
inc
xor
add
add
fimuls
lahf
push
out
mov
xchg
sbb
xchg
scas
bnd
cs
mov
xchg
mov
movsl
pop
jp
and
add
fwait
ret
pop
hlt
enter
insb
loope
push
outsb
xor
test
xor
movsb
fidivrl
ljmp
dec
lea
leave
and
dec
or
mov
test
ljmp
iret
fcompl
jmp
cmp
mov
cmp
stc
push
add
mov
insl
sbb
cli
mov
dec
out
inc
inc
idivl
add
lcall
repnz
outsb
mov
popf
inc
xor
lret
mov
or
pop
jno
xor
sbb
std
pop
push
mov
push
lret
nop
loopne
ret
xchg
push
pop
js
outsl
xchg
jae
or
pop
pop
push
dec
mov
push
sbb
push
xor
jne
inc
mov
xchg
icebp
push
test
int3
cld
inc
sub
ds
lret
mov
add
push
sub
scas
mov
adc
mov
lret
xor
sbb
dec
pop
cmp
cmc
fs
std
inc
hlt
sbbl
fadd
fldl
inc
inc
jo
ret
xlat
pop
add
sub
jmp
and
sbb
shrb
mov
push
shl
push
rcr
jg
mov
pusha
in
fs
or
xor
ljmp
insl
inc
arpl
call
cltd
test
push
iret
test
jg
mov
das
cmp
cmp
insl
sbb
test
push
xor
mov
xor
aam
mov
mov
mov
xchg
jns
ljmp
xorb
cli
sub
outsb
into
mov
jmp
pop
pop
fnstsw
xlat
jl
lods
xlat
shr
mov
mov
xchg
call
movsl
es
lods
fcmovnb
ret
in
scas
sub
in
mov
push
or
xchg
mov
sub
xchg
dec
sub
andb
aad
sub
fistps
scas
fidivrs
mov
mov
jne
and
out
dec
xor
js
mov
pop
cltd
push
cltd
add
xor
jnp
in
je
loopne
cmp
push
jl
mov
xor
pop
cltd
aam
popf
xor
pop
sbb
cwtl
cmp
loop
dec
inc
sub
jecxz
mov
inc
loop
sub
imul
mov
inc
daa
jecxz
sub
push
imul
dec
ret
sahf
pop
inc
bound
fistps
pop
popa
cmc
daa
or
inc
dec
je
push
mov
add
push
outsl
sarl
ss
loopne
sbb
sbb
leave
pop
fildl
fdivrp
push
dec
push
movsl
ret
movsl
ljmp
scas
incb
sbb
sub
sbb
jae
dec
xor
ret
add
mov
shl
into
or
mov
inc
mov
mov
dec
mov
imul
sbb
push
jb
or
add
pushl
dec
rorb
sti
loopne
incl
in
fisttpl
jnp
daa
outsb
adc
iret
sub
pop
sbb
aad
jge
lds
jnp
jae
inc
rolb
fisttps
movsl
lret
dec
mov
in
outsl
test
ficoml
out
stos
cld
sub
hlt
sbb
sub
add
and
xor
inc
mov
into
fadd
test
sbb
insl
jg
iret
rorb
nop
cli
sti
imul
lea
push
lea
cmp
jbe
inc
xor
cmp
loope
pop
jnp
xchg
mov
jle
out
fs
js
lahf
or
sbb
aad
out
pop
sbb
jge
pop
cmpsb
push
fcom
xor
jnp
mov
pop
outsb
fistps
lcall
push
inc
sbb
lods
addr16
rorl
xchg
and
xor
dec
cmp
xlat
or
std
adc
sbb
aam
sahf
mov
add
sub
fistpll
push
xchg
loope
mov
sbb
loop
aas
loop
add
dec
stos
sbbb
inc
push
cltd
pop
sub
scas
shr
movsl
xor
in
mov
xchg
ret
mov
push
fcomps
pop
mov
sahf
add
std
int
cmc
je
test
pop
sub
outsl
ds
sub
imul
popf
pop
xchg
mov
ja
popf
jecxz
rcr
outsl
sbb
pushf
push
push
push
stos
fs
test
push
lods
scas
and
aas
iret
cltd
fidivs
push
mov
push
jb
cli
mov
sub
add
lahf
jl
add
es
xchg
fsubrl
loope
jno
lahf
sub
aam
cs
idiv
cmpsl
ret
cmpsl
mov
test
xor
inc
pop
sti
pop
cmc
mov
test
int
mov
ljmp
cld
or
pop
imul
arpl
pusha
and
outsb
loop
jb
mov
jecxz
stos
xlat
mov
mov
nop
mov
shlb
shrl
add
inc
imul
loopne
mov
cmp
push
or
dec
or
call
inc
xor
rcl
add
pusha
sarl
roll
sub
outsl
push
xchg
incl
adc
jg
jne
xchg
mov
push
mov
je
sbb
push
scas
xchg
inc
mov
pop
cmc
xchg
ljmp
rolb
fbld
jae
popf
push
jne
lds
lcall
movsl
std
shll
out
cmp
outsb
out
imul
mov
dec
lods
loop
mov
jmp
mov
sub
cmp
mov
cmp
sub
decb
inc
xchg
mov
sbb
or
sub
xor
add
arpl
movsb
sub
push
lock
xchg
roll
pop
lods
jmp
add
aaa
dec
push
mov
sub
sub
int3
das
cmp
out
lahf
xor
fs
xchg
inc
sub
inc
fists
jns
add
dec
dec
outsb
fcompl
xor
arpl
add
or
pop
lea
shrl
js
and
mov
push
movsl
dec
jbe
scas
out
fdivr
jecxz
fcoms
test
out
ja
in
adcb
inc
xor
sub
std
insb
imul
jecxz
rep
push
pushf
pushf
jb
ss
lds
jne
test
cmp
hlt
jno
dec
shrb
fbstp
sbb
sub
mov
and
xor
dec
out
es
sbb
cmc
add
or
mov
cltd
enter
pop
aad
subl
addr16
sbb
adc
dec
push
pop
out
adc
faddl
jno
mov
insb
fwait
mov
pop
ljmp
cmp
sub
test
mov
enter
fwait
cmp
inc
pop
xchg
push
call
inc
mov
jmp
xor
loope
bound
jbe
cmp
inc
js
ljmp
dec
xchg
jmp
je
xchg
pop
movsb
inc
sbb
push
lret
push
inc
jae
std
and
dec
jle
clc
jmp
adc
push
lahf
popf
test
xchg
cs
inc
jle
out
mov
xchg
in
xlat
rcll
and
aad
test
sbb
cmp
rolb
lods
adc
mov
lods
sbb
in
adc
cmc
adc
add
jmp
sbb
mov
andb
push
jmp
pop
aam
inc
mul
sbb
jle
add
xchg
pusha
cwtl
mull
inc
add
adc
out
fbstp
sub
cmpsb
pusha
mov
mov
dec
mov
or
and
mov
xchg
or
adc
cwtl
mov
les
out
aaa
xchg
pushf
mov
loope
ja
ja
mov
ss
bnd
gs
loop
sbb
stos
sub
dec
das
cltd
sti
inc
mov
jmp
ret
scas
sahf
mov
jne
popf
mov
or
push
cmp
popa
inc
clc
cs
pop
bound
dec
mov
mov
xor
adc
xchg
xchg
out
repnz
imul
xor
cmpsl
rcr
adc
lcall
lahf
inc
pop
es
jmp
add
aas
mov
pusha
jns
es
pop
sub
mov
vaesenc
scas
push
inc
mov
bound
and
pop
push
jmp
pushf
push
scas
int
xchg
pop
mov
sbb
fldl
iret
movsb
jnp
lods
addr16
xchg
stc
mov
xchg
xchg
cmp
test
mov
cmc
int
movsl
jbe
push
std
sbb
subb
popf
lea
sbb
inc
xor
cli
inc
pop
ja
dec
enter
ja
jbe
mov
lcall
xor
sub
orb
in
sub
pop
and
stos
cmp
push
xchg
rorb
add
push
adc
pushf
add
mov
outsl
movsb
je
and
faddl
jmp
pop
mov
outsl
clc
or
mov
cmc
insl
js
adc
out
lock
loop
inc
fs
insb
aaa
push
rcrl
cmc
into
notb
test
xor
cli
stos
mov
sub
add
sbb
xchg
add
push
frstor
sub
inc
mov
repz
mov
addr16
inc
fsub
push
pop
fstpt
push
add
pop
mov
insl
inc
out
mov
in
dec
cltd
add
pushf
adc
mov
jo
jle
jne
jb
in
mov
xor
lahf
sub
add
arpl
lret
cmp
data16
mov
add
call
dec
add
xchg
mov
mov
sub
test
fs
add
cmp
lods
lcall
subb
icebp
mov
jb
push
stos
rorl
xchg
push
sbb
jae
dec
ret
cltd
inc
lahf
inc
xor
test
fsubs
jbe
fidivs
js
aam
aas
sahf
mov
mov
rcrb
mov
and
xlat
clc
dec
lcall
mov
lret
test
mov
mov
test
out
into
mov
pop
jge
mov
sub
popf
or
test
roll
ss
shr
iret
and
dec
or
mov
dec
dec
xor
pop
sbb
insb
pop
mov
jae
lods
jge
xor
imul
jae
sarl
enter
pop
sbb
adc
jnp
xchg
mov
es
syscall
lcall
incl
aad
pop
xchg
jno
and
lret
mov
outsb
pop
push
dec
xchg
dec
hlt
je
mov
stos
mov
or
sbb
leave
dec
and
or
fsubrs
push
jae
stos
aam
cs
les
sbb
shlb
mov
out
sbb
push
mov
in
dec
fs
icebp
scas
mov
and
sbb
mov
lock
imulb
repnz
cld
xchg
outsl
pop
xor
sub
xorb
into
cmp
xor
lahf
inc
mov
xor
add
mov
popf
insl
sub
and
jns
scas
cltd
mov
popa
dec
mov
insb
std
cltd
jns
les
dec
inc
xchg
xchg
xor
add
jae
test
push
loope
in
icebp
add
out
stc
push
sub
ljmp
js
xchg
je
sub
xchg
flds
mov
adc
cs
mov
insl
jmp
or
add
imul
jo
lods
xchg
rol
xlat
xor
stos
cld
dec
sbb
pop
sbb
push
mul
aaa
or
inc
andb
pushf
add
in
imul
mov
adc
jnp
sub
sahf
lcall
fwait
or
mov
flds
imul
and
xchg
sahf
cld
push
sub
les
sub
xchg
inc
addb
icebp
pushf
mov
jbe
add
in
mov
jp
bound
jne
xor
or
mov
or
and
dec
cli
xchg
test
push
mov
shrb
iret
mov
jo
mov
and
rorl
ljmp
add
and
sbb
mov
imul
push
or
xchg
out
xor
cld
xor
xlat
xlat
mov
mov
push
fucom
lret
sbb
shr
sub
xchg
xor
pop
inc
xor
or
out
repnz
mov
xor
movsl
lcall
mov
sub
fisttpll
xor
pop
sub
lret
xor
xor
pop
sahf
shll
imul
push
das
sarl
lcall
jbe
scas
dec
aam
sbb
fwait
push
addb
stos
xchg
mov
push
mov
pop
sbbl
pusha
outsl
mov
xor
inc
movsb
cmc
adc
ret
push
lds
icebp
and
add
push
sahf
lcall
movsb
ja
push
jle
mov
cmp
lret
or
out
and
repnz
inc
in
inc
xchg
mov
cli
in
std
cmp
repnz
lds
mov
lock
out
or
loop
sub
aam
out
mov
adc
aas
loope
mov
out
mov
cld
loop
ds
rcll
mov
imul
mov
adc
push
sbbl
inc
xchg
fnstsw
hlt
push
rorl
add
in
aad
mov
mov
in
and
lds
xchg
xor
sarb
in
arpl
aaa
ret
mov
cltd
out
lods
clc
fldenv
push
cmpsb
dec
scas
xlat
add
and
loope
fimuls
jl
daa
jmp
jl
dec
cltd
xor
mov
inc
xchg
out
aad
mov
test
movsl
push
add
push
icebp
jb
mov
jmp
mov
fwait
cmp
mov
inc
negb
nop
aaa
negl
inc
pop
xor
fisttpl
cmc
into
xchg
inc
dec
mov
data16
fistl
rorl
lahf
mov
outsl
and
push
dec
icebp
xchg
aas
push
cmpsl
push
inc
push
pop
leave
shlb
inc
or
pushf
hlt
inc
and
int
cwtl
xchg
sar
cld
notb
pop
fstl
inc
rcl
xor
call
adc
outsl
insb
jae
psadbw
push
test
inc
mov
jl
insl
mov
jmp
in
jae
jecxz
xor
sbb
inc
insl
imul
rcll
sub
dec
pop
inc
jg
hlt
std
cmpsl
push
sbb
test
in
stos
mov
sbb
jl
jns
lret
jne
lea
dec
adc
push
jge
addb
sub
sub
mov
inc
cld
into
xchg
adc
daa
bound
enter
ds
ja
out
push
ljmp
xchg
push
out
in
xor
mov
pop
fidivrl
push
pop
sub
pop
inc
mov
xchg
lcall
cmpsl
repz
push
inc
movsb
cmp
adc
add
cwtl
stos
shlb
xlat
jae
push
aam
push
mov
test
xor
sti
jmp
push
lods
sbbl
mov
push
es
push
lock
push
add
adcb
bound
mov
and
fidivl
jo
dec
outsb
pop
mov
jmp
popa
shrl
sti
mov
mov
mov
and
fisubs
mov
je
lret
jmp
inc
int
ret
xchg
mov
xlat
mov
xchg
rclb
pop
xchg
add
clc
imul
sub
xchg
adc
loop
push
pusha
shl
enter
xor
cmc
jo
inc
cmp
adc
stos
inc
adc
cli
add
in
cmp
popa
xchg
jecxz
xor
pop
mov
test
pop
push
jg
xor
rclb
mov
imul
sub
test
mov
sub
inc
xor
xchg
push
xchg
add
cmpl
add
scas
mov
cli
xchg
mov
popf
ret
outsl
mov
pop
hlt
insl
ljmp
push
pusha
cmp
lock
lcall
call
push
shll
mov
adc
jmp
mov
xchg
dec
mov
gs
inc
movsl
out
inc
mov
scas
jmp
fs
inc
push
sbb
lock
or
xchg
faddl
adc
push
mov
fwait
out
push
push
out
jg
in
repz
shll
rcrl
sub
push
or
movsl
sub
das
stc
lea
or
cltd
lods
and
sbb
add
pop
lahf
jne
inc
movsb
lcall
data16
fistps
arpl
mov
sbb
ffree
cmp
xor
lret
sti
clc
hlt
add
dec
stos
aaa
lcall
jge
lret
cmp
fisubrl
inc
xchg
pop
fwait
ja
mov
ss
out
pop
mov
xor
movsl
test
gs
jb
xor
and
fsubrl
in
mov
sbb
ror
sub
jle
mov
cwtl
or
mov
icebp
iret
rcr
in
mov
ret
ljmp
sbb
and
rcll
int3
mov
or
insl
movsb
cmpsb
scas
into
rorl
out
jno
sbbb
dec
push
pop
movsb
add
xchg
fisubrs
shr
int3
xchg
jle
lock
fadds
inc
pop
test
jl
jne
jl
pop
andb
scas
cmpb
xchg
sub
test
fnstcw
inc
mov
scas
lret
int
ljmp
dec
mov
iret
shr
sbb
adc
inc
lods
sti
cmp
jge
jge
xchg
insb
xchg
mov
rorl
mov
mov
xor
add
fst
icebp
faddl
jl
push
mov
pop
lret
add
cmpsl
mov
cmp
imul
shlb
das
mov
out
popf
mov
and
and
in
popw
xor
inc
jnp
rclb
adc
and
int
mov
mov
rcrl
imul
and
jge
shll
adc
in
ja
dec
inc
rolb
repnz
or
jmp
or
jp
clc
push
addr16
mov
clc
xchg
xchg
xor
ret
ret
pop
xchg
jae
xchg
pop
popa
mov
pop
js
jnp
in
repnz
fistpl
sbb
sti
sub
xchg
movsl
ja
add
cmp
lret
push
sbbb
jmp
leave
jbe
xor
data16
push
or
frstor
push
xchg
xchg
cmp
jmp
mov
fldl
xor
test
xor
pushf
jmp
mov
cmpsb
adcb
arpl
cs
lods
xchg
dec
inc
movsl
add
outsl
int3
cmp
inc
mov
cmp
add
outsb
popa
push
lea
jne
or
out
aad
ss
xchg
bound
js
push
push
lahf
jns
test
data16
xchg
ret
and
loope
or
adc
add
cmpsl
fs
movsl
push
mov
mov
pop
mov
addl
sub
mov
jmp
test
mov
sbb
in
lock
sbb
or
aam
loop
leave
push
pop
fs
pop
push
add
lods
cmc
stos
arpl
sbbl
and
or
into
ficomps
push
daa
jge
movsl
jns
movsl
rol
xchg
jns
add
mov
jo
mov
inc
icebp
pop
push
inc
ja
adc
stos
les
nopl
mov
imul
sub
xchg
pop
or
xlat
mov
popa
mov
xor
mov
arpl
test
and
dec
pop
pop
mov
lcall
inc
ja
dec
cmp
xor
clc
push
rcrb
lret
mov
jb
jne
out
int
pop
fisttpl
mov
lock
mov
inc
shl
adc
dec
jp
daa
sub
jno
pushf
adc
mov
sbbb
jg
dec
inc
xchg
ja
sub
sub
dec
imul
imul
lahf
rcl
push
sub
in
push
dec
push
jg
fwait
mov
mov
add
sbb
pop
addr16
pop
add
sub
xchg
mov
xor
imul
subb
mov
imul
xchg
sub
pop
out
and
jno
leave
fldt
loopne
add
loopne
lahf
ljmp
add
pop
jp
data16
add
test
insl
push
mov
push
mov
fcoml
sbb
push
ss
push
dec
mov
push
cmp
rcrb
loop
popf
xchg
xchg
mov
out
xchg
jmp
cmp
iret
mov
sbb
imul
sbb
lea
or
sbb
push
into
and
gs
cmovnp
xor
jno
lahf
imul
mov
arpl
xor
or
add
aas
xor
sbbl
cmp
sbb
or
mov
jl
fistl
je
rcr
and
mov
mov
sbb
rorb
inc
ljmp
pop
rolb
ret
aad
nop
xor
rorl
leave
loope
cmp
cmp
or
cli
popa
push
das
mov
inc
mov
mov
jge
repz
lds
push
ss
insl
xor
and
leave
jns
mov
imul
shr
jl
lret
push
mov
inc
outsl
or
out
xchg
cmp
loop
xchg
push
cs
loop
push
ja
fnstcw
mov
fstps
dec
movsb
sub
inc
xor
jg
and
lcallw
out
mov
in
push
pop
push
jg
imul
cmp
daa
xchg
inc
test
in
in
ret
push
mov
leave
dec
cmp
mov
xor
fiadds
cmc
inc
test
das
jge
loopne
cmp
push
adc
clc
out
stos
sarb
mov
mov
call
int3
movsl
xor
jbe
fwait
cld
mov
dec
mov
pushl
nop
pop
cld
cmpsl
push
js
cli
fildll
push
loopne
xchg
jmp
cmc
cmc
mov
push
jo
cmp
inc
or
ret
or
ss
pop
mov
pop
sbb
enter
sbb
fidivs
and
mov
lods
pop
adc
jecxz
push
push
fdivl
push
mov
andl
inc
jmp
jg
out
and
in
lret
inc
test
sbb
cmc
inc
jno
pushf
mov
lds
push
mov
xchg
sub
cltd
mov
filds
int
enter
jp
jae
xor
test
ds
xchg
pop
arpl
pop
push
add
fildl
test
pop
mov
xor
sarl
imul
shlb
sarl
mov
pushf
xor
outsl
lret
xlat
dec
aam
pop
std
sbb
outsb
js
add
or
lret
dec
add
repz
xor
cld
shl
stos
add
fs
mov
stos
pop
add
arpl
push
cli
divl
icebp
push
push
cmp
sbb
pop
add
inc
mov
dec
test
mov
xor
sbb
lds
sbb
stc
jo
push
and
stc
aas
in
mov
pop
push
stc
sbb
test
mov
andb
jbe
jbe
add
or
pop
lret
popf
hlt
jecxz
push
cmpsb
test
push
mov
push
jmp
add
xor
jg
jle
popa
sbb
dec
out
aam
xor
pusha
dec
iret
sub
subl
xchg
inc
repz
and
sub
pusha
ficomps
or
adcl
in
jp
cli
inc
arpl
sub
push
push
push
jg
pop
ret
sbb
sub
shr
inc
mov
lea
cmp
sarb
inc
sub
pop
loop
mov
inc
mov
push
pop
andb
jb
pushf
inc
popa
push
xorl
xor
jmp
dec
decl
mov
es
popf
es
test
sbb
fcoms
xor
mov
jo
xchg
add
fdivr
pop
mov
xor
xor
insb
aaa
in
shll
pop
test
push
xchg
inc
mov
sarb
mov
mov
lods
jg
mov
push
adc
ret
nop
testb
xchg
loopne
ja
test
arpl
cltd
xor
repz
push
and
and
cwtl
jg
mov
xor
pop
aas
mov
daa
scas
xor
ret
inc
repz
pop
inc
pop
pop
inc
and
dec
movhps
je
cmpsl
lahf
jp
push
bound
xor
mov
repz
xchg
pushf
add
adc
jge
cmpsb
add
xor
jge
stc
mov
push
dec
aaa
icebp
inc
shll
es
inc
fildl
into
into
sub
inc
add
mov
xchg
shll
sub
pop
jp
out
insb
pop
rolb
bound
lahf
jmp
mov
icebp
add
loop
sahf
xlat
outsl
pop
aaa
cmp
xor
sbb
pop
push
xchg
jno
xchg
or
adc
in
cmp
and
sahf
pop
das
mov
sub
imul
sub
mov
mov
lret
leave
mov
jae
mov
iret
jmp
lock
adc
mov
mov
std
jne
sbb
repnz
sub
shlb
inc
cmp
sbb
and
xlat
mov
lahf
xchg
daa
mov
pushf
sbb
push
andb
and
jecxz
jg
pop
push
push
mov
mov
dec
sbb
sbb
or
outsb
pop
outsl
add
insl
sbb
push
push
bound
xor
out
xchg
jns
out
js
aaa
lods
adc
cmp
outsl
mov
nop
inc
sub
xchg
mov
test
icebp
in
fsubl
mov
es
mov
lcall
cltd
mov
jg
ret
loopne
fdivrs
ss
fstl
sbb
jne
dec
imul
rcrl
pop
int3
fsubrs
mov
sub
test
pop
lcall
test
add
mov
insb
shrw
and
lock
xorb
pop
iret
push
lods
dec
nop
jg
lcall
test
outsl
sub
xchg
add
cmp
loop
in
mov
sbb
in
adc
mov
loope
fisubl
xor
or
pop
mov
enter
scas
insl
mov
std
loope
loop
xor
adc
sbb
popa
fistpl
in
repz
push
inc
cmovo
mov
xchg
xor
sbb
dec
scas
arpl
inc
add
or
orb
lret
jbe
call
das
xchg
gs
fnstsw
out
mov
testl
daa
or
shlb
fldenv
scas
int3
push
shlb
scas
imul
mov
cs
ljmp
push
sub
pop
sub
and
jmp
or
call
std
daa
aad
and
shlb
cmp
inc
and
aas
push
fcos
pop
gs
xor
jns
and
into
lret
in
cli
cmpsb
jb
lods
and
dec
cmp
loope
shlb
and
xchg
into
in
and
jne
xor
lock
xor
adc
xchg
mov
test
stos
divb
xchg
add
xor
add
jl
cli
pop
popa
dec
mov
je
imul
fldt
addb
dec
enter
mov
pushf
dec
in
pop
xorb
aam
int3
jmp
mov
stc
jne
dec
add
and
mov
int3
out
cld
cmc
pop
xor
sub
sbb
movl
sub
cmp
nop
dec
adcl
pop
sub
and
xor
push
push
ja
mov
cmpsb
pop
ret
adc
adc
pop
pushf
mov
cmc
xchg
xchg
adc
jnp
out
xchg
inc
fists
mov
mov
mov
in
cmpsl
xchg
mov
in
iret
ret
mov
mov
cld
cmp
push
pop
pop
push
or
inc
imulb
scas
xchg
and
mov
adc
aas
rcl
mov
cld
dec
popf
sbb
into
stos
daa
push
cwtl
mov
push
fadd
popa
ds
fwait
test
jno
lods
xchg
iret
test
lods
jmp
mov
or
pop
shl
fs
aad
mov
or
mov
shrl
out
enter
or
movsl
adc
push
pop
mov
fstpl
icebp
inc
pop
mov
nop
or
add
int3
dec
shll
int
adc
xchg
inc
cmp
lods
cli
bound
iret
aaa
and
sbb
iret
test
insl
cmp
push
xchg
pop
js
jno
lret
mov
iret
shll
xchg
arpl
jo
mov
into
jge
cld
inc
repz
mov
into
arpl
xchg
scas
mov
decb
nop
daa
adc
sbb
jg
hlt
add
sub
sub
dec
xor
adc
aas
jge
dec
jae
inc
loop
cmp
sbb
imul
and
inc
cwtl
stc
shll
jns
pop
test
loop
jecxz
insb
xorb
out
test
sbb
nop
lock
dec
cmp
mov
pop
mov
shrb
sbb
cmpsl
test
xor
jae
lret
sbb
mov
jae
fsubl
aam
daa
mov
aas
mov
cld
xchg
and
jecxz
push
adc
insb
dec
mov
and
stos
jp
mov
or
or
cmp
icebp
and
iret
mov
push
mov
fnstsw
pop
sub
adc
es
xor
add
xchg
dec
iret
or
fisttpl
adc
sub
sub
daa
js
xor
popf
xor
popf
xor
iret
pop
xchg
int
dec
mov
and
and
in
pop
not
sbb
push
nop
inc
insl
xchg
xlat
insb
das
mulb
adc
fistpll
inc
sti
sub
scas
data16
push
sub
jo
adc
sbb
sbb
mov
test
lahf
mov
shrb
lds
leave
in
sbb
xchg
sub
or
jne
inc
lock
call
jne
jle
sti
mov
adc
lods
stos
sbb
pushf
je
data16
jnp
out
dec
inc
leave
fists
insb
mov
out
dec
cmp
xlat
mov
jl
repz
push
movsb
ljmp
add
inc
ds
adc
inc
dec
nop
lret
xlat
nop
repz
out
or
cmp
idivl
hlt
fstl
ja
addr16
call
aaa
push
jb
imul
aam
outsl
or
jbe
aam
adcl
or
push
fs
ret
mov
out
push
mov
xchg
adc
fs
enter
ret
xor
out
push
movsb
mov
jnp
push
mov
mov
mov
scas
imul
test
push
mov
adc
dec
mov
mov
in
loop
int3
dec
loope
inc
jl
add
mov
push
scas
cmp
pop
ljmp
lahf
movsb
pop
hlt
mov
add
sahf
test
jecxz
xchg
gs
in
dec
push
push
data16
add
jmp
push
fisubs
xchg
or
call
and
add
dec
jbe
cmp
int3
fldcw
jo
cli
addr16
pop
add
and
lea
aad
cmpsb
shl
adc
mov
or
and
scas
xlat
and
cmp
mov
xor
lea
mov
xchg
or
cltd
rcr
adc
mov
andb
inc
int3
ds
cld
inc
addr16
lock
pop
loopne
or
adc
orb
push
mov
ljmp
in
xchg
sub
icebp
inc
inc
ljmp
mov
mov
gs
rcl
lcall
push
fldcw
stc
pop
mov
cmpsb
pop
and
adc
mull
lea
nop
lahf
mov
and
aam
xor
mov
jg
sub
imul
jg
cmp
lods
adc
jecxz
jo
mov
push
cmp
or
sbb
dec
mov
inc
mov
jg
into
sbb
test
adcb
inc
outsb
or
xor
je
dec
pop
adcl
dec
sbb
mov
enter
sbb
outsb
out
cmpsb
fistps
mov
or
mov
mov
fnsave
aad
in
xchg
aad
cmpsb
pop
pop
out
in
stos
fstpl
arpl
daa
popa
cli
scas
mov
mov
adc
jnp
xorl
int
adc
loope
push
xchg
pop
sarb
jp
notl
mov
or
scas
loopne
push
xchg
or
mov
daa
inc
loopne
pop
test
adcl
push
xchg
jns
clc
aas
jecxz
push
xor
xor
imul
inc
out
pop
pop
mov
dec
sub
mov
mov
int3
pushl
adc
mov
jno
lcall
mov
add
fimull
outsl
jns
push
cmp
and
roll
imul
mov
ljmp
xor
leave
push
jo
push
sbb
sbb
rcll
xlat
cmpsb
mov
push
lods
into
mov
les
xchg
mov
stos
fdivrl
cmc
lods
stos
jo
lods
sbb
pop
fidivl
fildl
sub
imul
pop
dec
loop
mov
mov
add
sahf
fs
stc
or
test
jno
add
or
in
sarl
xor
or
and
xchg
sbb
xor
andb
pop
inc
out
popa
ret
push
std
ds
push
dec
add
push
test
fisttpl
xor
jecxz
in
cmp
es
jecxz
cmc
lahf
xchg
push
mov
cmpsb
pop
out
loop
and
pop
xchg
cmpsl
pop
pop
xchg
mov
xchg
push
sahf
ss
cmpsb
mov
sub
je
outsl
sub
loope
popf
loope
add
mov
lock
mov
decb
out
sub
cmp
outsl
mov
xchg
into
daa
push
idiv
xchg
pop
dec
subl
lods
fildll
push
loopne
addb
jne
sub
sbb
std
ds
callw
inc
mov
mov
mov
dec
int3
mov
das
push
adc
repz
cmpsb
pop
mov
loop
sahf
push
iretw
cli
push
lods
pop
sarl
cmp
jg
dec
sub
xor
or
popf
movb
test
xlat
shlb
pushf
xchg
hlt
sbb
cli
fs
insb
repz
lods
mov
inc
aad
mov
mov
and
add
pop
shll
ret
addr16
add
push
mov
mov
ret
mov
in
inc
add
pop
and
outsl
push
test
xor
mov
cwtl
int3
outsb
mov
lock
xchg
fldt
dec
mov
loopne
in
cmp
adc
sub
mov
ret
mov
xchg
adc
push
cmp
int3
imul
jle
mov
rolb
cmpps
scas
mov
jo
in
jae
xor
fimuls
cli
xor
incb
mov
and
add
sbb
lock
xchg
jecxz
ds
out
insl
lret
xor
mov
aaa
mov
mov
sbb
ret
rcrb
mov
mov
xor
xchg
popf
or
repnz
cmp
or
ja
sub
sub
fidivl
mov
jns
lea
or
daa
sbb
and
add
shrb
xchg
movsb
jl
sahf
mov
push
push
xlat
mov
dec
cmp
and
jb
out
xchg
in
push
subb
xchg
daa
pop
adc
adcl
sahf
cs
ret
or
xor
fsubl
dec
adc
xchg
cmp
cmpsb
repz
add
stc
push
data16
mov
mov
and
cmp
out
stos
in
dec
mov
push
push
add
jae
aaa
jbe
movsl
dec
in
pop
mov
adc
mov
sbb
fisubl
out
scas
arpl
adc
pop
movsl
out
and
mov
aaa
popa
push
pop
sub
adc
enter
pop
adcb
push
inc
mov
add
add
or
dec
clc
jne
jl
or
fisubs
fists
lahf
xchg
mov
imull
popa
push
pop
jle
rolb
call
mov
out
into
out
imul
push
mov
aaa
jmp
dec
adc
nop
pop
inc
adc
xor
nop
mov
dec
stc
sbb
mov
inc
add
inc
das
adc
adc
scas
popl
ficoms
sub
aas
rcl
lods
inc
mov
pop
jmp
fdivrs
out
push
addb
xor
data16
ret
xor
loope
adc
mov
mov
into
jo
xor
ficoml
pop
push
pop
push
mov
push
ss
outsb
inc
repz
xlat
out
popa
pop
test
mov
adc
add
fwait
andl
jno
adc
test
repnz
addb
popa
cmc
stc
cwtl
push
mov
aas
mov
add
movsl
push
or
cmpsb
ret
mov
xchg
lret
xchg
movsl
adc
ljmp
ja
out
cwtl
adc
pop
jp
push
inc
pop
icebp
mov
jl
dec
mov
stc
dec
icebp
or
fstps
dec
in
int3
movsb
xchg
xchg
pop
inc
lock
or
xor
in
fdivr
sbb
ja
sahf
loope
mov
addb
popa
mov
jae
mov
add
add
inc
jnp
into
out
lock
xor
mov
mov
in
or
pop
xchg
ret
test
pop
shl
icebp
pushl
mov
rolb
jb
mov
cmp
enter
cmp
negl
add
add
cmp
in
jge
sahf
dec
rcrb
add
js
xchg
push
inc
pop
nop
xchg
adc
insl
inc
aam
sub
fbstp
inc
sbb
fldt
mov
inc
iret
pop
mov
mov
add
and
gs
pop
cmp
fcom
sti
jp
lret
dec
inc
xchg
aas
mov
popf
sub
cwtl
cs
pop
pop
hlt
ficoml
cld
cmp
in
subl
loop
add
inc
cmp
cltd
dec
sarl
xor
jne
pop
xlat
push
stos
adc
adc
hlt
aaa
fbld
or
rorl
movl
xor
pop
sub
fcomi
adc
shrd
push
mov
xchg
pusha
mov
fs
popa
jb
xchg
xchg
adc
cmc
mov
adc
push
xor
xor
mov
test
stc
mov
out
mov
and
cs
and
fisubrs
jns
sbb
add
dec
jbe
pop
jle
push
loopne
fldl
pop
sbb
cli
loopne
into
addb
test
inc
cs
ret
aas
dec
push
in
jg
ds
cltd
adc
add
aaa
jo
pop
addr16
loopne
pop
and
fcompl
xchg
mov
mov
pushf
in
lods
hlt
xor
popa
pop
shrl
outsb
pop
and
jns
lcall
mov
pop
repnz
je
in
bound
test
jns
push
je
fdivrl
fstl
insb
movsb
nop
and
inc
cltd
jle
sbb
js
xchg
jns
aam
mov
out
dec
add
icebp
fstps
dec
nop
out
cmp
jmp
add
in
ljmp
or
jbe
cmp
mov
jecxz
mov
mov
clc
imul
push
push
jmp
jb
fwait
xor
dec
and
loop
in
push
xor
stc
jmp
aas
rcrb
ja
mov
insl
cmp
jnp
dec
out
stos
enter
cmp
push
cwtl
mov
cld
lods
test
mov
add
mov
enter
pushl
adc
mov
lret
xchg
lods
aad
sub
lcall
or
xchg
repnz
adc
cmp
mov
insb
aam
test
out
add
je
and
popa
test
fmull
movsb
scas
aam
mov
mov
jmp
jg
and
cmpsl
sub
dec
lcall
lahf
enter
pop
mov
mov
fdivr
mov
clc
inc
js
hlt
cmpsl
pop
sub
movsl
notl
ds
in
ljmp
dec
fsubrl
adc
xor
push
dec
das
sbb
xchg
xchg
out
jle
rorl
or
cli
fcompl
and
inc
xor
or
pop
xchg
sar
jl
js
test
mov
aam
aas
pusha
jle
inc
mov
inc
push
and
dec
inc
lret
leave
faddl
out
stos
jge
push
inc
mov
cs
jnp
pop
aam
mov
mov
jge
and
or
std
orl
ficomps
pop
pop
hlt
popa
es
cmp
jmp
adc
add
pushf
enter
mov
cmp
mov
insl
xchg
push
push
cwtl
les
xchg
or
jle
xchg
sti
aaa
push
push
push
hlt
into
mov
fcomp
jmp
lea
stc
xchg
add
gs
cmp
mov
jle
jecxz
dec
sarb
pop
js
xchg
push
inc
or
xchg
mov
cli
xor
xchg
push
in
push
push
imul
test
in
mov
cmp
daa
pop
repz
sbb
push
mov
fcomps
pusha
pop
or
dec
mov
or
out
adc
ljmp
and
stc
test
mov
and
in
add
add
mov
or
mov
cli
xor
filds
push
adc
mov
jg
lods
int
sub
pop
imul
cmpsl
sarb
sub
mov
setle
sbb
gs
jge
adc
ja
cmp
arpl
hlt
stos
testb
shrl
cli
loopne
push
mov
cltd
xchg
repz
in
or
jbe
lods
or
fistpl
fildll
sub
rol
nop
shrb
cmp
imull
mov
and
rclb
ss
leave
ds
pop
and
mov
and
push
scas
movsb
mov
cld
or
in
xchg
add
mov
mov
or
push
add
jbe
movb
test
jae
es
jbe
lret
mov
cmc
mov
fisttpll
mov
sbb
mov
inc
pop
test
int3
xor
fmull
mov
es
bound
fld1
inc
jmp
pop
je
psubd
jne
inc
add
mov
jle
fldl
pop
pop
test
ljmp
repnz
ret
addl
inc
push
inc
pop
jbe
or
test
popf
mov
mov
or
repnz
arpl
ljmp
fldenv
test
push
sbb
cmp
sub
mov
std
cwtl
cmc
mov
std
mov
or
mov
scas
add
sti
std
fucom
add
into
add
imul
mov
nop
loopne
test
mov
negl
inc
testb
cmp
cld
or
cs
stos
cmp
clc
sub
pop
lds
jo
and
insl
or
arpl
stc
xor
inc
lods
sbb
jo
loope
aaa
insb
sub
mov
aad
aam
cmpl
push
mov
mov
arpl
xor
pop
xchg
hlt
popf
xchg
fxch
adc
lods
outsl
add
shlb
lds
leave
aam
pusha
mov
mov
sarl
mov
add
lea
std
dec
test
lock
sub
sbb
lods
inc
mov
xchg
add
cli
or
pushf
inc
mov
adc
mov
stc
test
outsl
pop
outsl
dec
lahf
pop
push
jns
sti
jmp
cmp
rcl
jl
stos
inc
test
cmpsl
lods
pusha
leave
fwait
shll
addr16
xor
jne
ja
mov
cmp
add
xchg
add
add
mov
imulb
dec
sub
roll
cs
in
into
adc
and
lcall
mov
mov
cmpsl
je
and
mov
dec
stc
jne
cmp
mov
mov
fsts
adc
shlb
cmpsb
fisubs
dec
imul
subl
out
and
pushf
stos
pop
add
scas
scas
out
push
jecxz
cmp
cmp
out
mov
cmp
xchg
xchg
inc
push
xor
fcmovnb
cwtl
sbb
cs
cmp
iret
out
lahf
or
in
xor
pushf
cwtl
xor
lret
sti
mov
or
xchg
mov
dec
shll
cmp
das
push
rorb
gs
rclb
data16
lds
xchg
std
push
call
bound
aad
testb
pop
movsl
test
cli
mov
outsl
dec
push
movsb
enter
lahf
sub
repz
setbe
mov
adc
icebp
push
dec
mov
sbb
loop
addr16
sbb
flds
into
cmpsb
add
adc
adc
adc
fdivl
jmp
mov
sbb
aad
inc
stos
lahf
mov
lds
test
adcb
mov
mov
xchg
push
mov
pusha
push
sbb
subl
mov
jb
scas
ret
push
repz
sbb
adc
test
dec
jnp
repz
xchg
pop
jbe
cmp
imul
dec
popa
pop
outsl
outsb
xchg
mov
out
mov
fsubrl
or
sub
or
jne
inc
sub
adc
and
ret
test
xchg
push
mov
shlb
orb
xchg
dec
out
aas
pslld
jge
out
xchg
pop
cmp
jo
fidivl
popf
jmp
push
cmpsb
pushf
push
test
inc
xchg
inc
mov
out
inc
idivl
cmp
imul
pop
mov
out
js
scas
xchg
movb
add
pusha
pop
addr16
enter
sub
jecxz
mov
sbb
hlt
imull
inc
xchg
xchg
jb
arpl
and
mov
fadds
sti
pop
jo
movsl
incb
add
jle
jnp
pop
push
or
push
test
aam
pop
fs
push
and
xor
fcmovbe
jl
xchg
push
std
idivb
mov
cmp
outsl
lods
aam
pop
fisubrl
pop
add
sub
lahf
xchg
pusha
pop
mov
orb
mov
aam
fmull
pop
cmp
pop
js
push
push
out
xor
mov
adc
xchg
inc
fcoml
fnsave
fnsave
addr16
out
es
pop
inc
xor
je
enter
sbb
inc
dec
in
in
mov
addr16
xor
shlb
repz
cmp
lret
ljmp
mov
call
jns
mov
and
data16
iret
inc
roll
mov
inc
test
xor
dec
add
xor
int3
dec
lds
fstl
scas
negl
ret
mov
lods
insl
test
fidivrs
adc
scas
addr16
push
jae
adc
je
out
or
xlat
add
mov
dec
dec
jae
mov
pop
cmpsb
and
push
cld
inc
mov
or
fcomps
adc
enter
out
cwtl
test
test
in
pop
push
mov
sub
jne
xchg
xchg
mov
add
cli
inc
push
fdivs
xor
fwait
test
add
test
ds
xchg
hlt
popa
adc
xor
cs
movsl
ret
addr16
push
mov
daa
mov
mov
or
mov
out
cli
dec
lock
jbe
and
mov
decb
or
dec
add
insl
push
cltd
int
mov
push
add
add
ljmp
decl
jl
sub
jmp
push
outsb
rcr
es
push
mov
mov
cwtl
xchg
sub
lret
mov
dec
jno
dec
or
xchg
inc
and
push
in
sub
fidivrl
push
lcall
dec
adc
xchg
lods
inc
adc
loopne
test
and
loopne
jae
pushf
lock
icebp
add
sub
loope
test
add
imul
aaa
aas
and
popf
addr16
les
cmpsb
into
insl
aad
xor
jae,pt
fs
push
les
push
out
sub
pushf
or
lea
jle
ljmp
imul
in
shll
mov
sar
stos
jb
movsb
into
pop
adc
imul
add
inc
pop
div
lock
push
lods
repz
arpl
or
mov
lret
adc
xor
lods
jnp
ja
mov
out
sbb
lock
sti
jns
ss
xchg
xchg
pop
icebp
fistps
dec
loop
out
xor
stos
jp
xor
jb
dec
dec
push
mov
add
repnz
cmp
or
lret
or
jmp
mov
out
je
loopne
push
push
mov
loop
mov
test
xor
pop
call
cmpsb
jge
test
and
aam
add
cmp
mov
pop
xor
scas
inc
aam
mov
sub
push
cmp
fdiv
xchg
xor
adcb
cld
incl
and
fldl
add
push
jp
fcoml
stos
stos
rcrl
and
inc
cmp
jl
orl
outsl
cld
gs
xchg
sub
cmp
push
add
into
mov
push
push
rorl
inc
xchg
in
xchg
out
xchg
pop
repnz
jb
hlt
repz
xchg
jge
cld
sbbb
aaa
push
lds
das
in
mov
xchg
jl
sahf
dec
jp
push
or
cli
repz
push
fists
cmp
dec
jl
or
jmp
in
jno
mov
rol
fidivl
xchg
es
sub
stos
inc
mov
dec
loopne
mov
scas
ficoml
imul
push
sub
jnp
jbe
jae
arpl
jae
sub
shrb
ret
and
inc
hlt
inc
addr16
and
cmpsl
ja
or
dec
xchg
loop
mov
popf
or
cmp
cs
push
in
mov
inc
pop
add
je
sub
push
dec
and
xor
and
pop
arpl
sbb
pusha
cmp
inc
xchg
push
aad
pop
push
xor
cmpsl
pop
repnz
cld
out
pushf
popa
sbb
fidivl
jl
cmp
fnstenv
stos
ja
adc
lods
lcall
out
stc
popf
add
test
dec
mov
and
das
movsl
pop
mov
das
pop
jge
mov
into
pop
rclb
shlb
call
and
loopne
imul
sbb
xchg
orb
packuswb
sbb
dec
into
fcmovnu
lods
fstp
mov
dec
jecxz
sub
jg
sbb
addr16
icebp
push
push
mov
mov
fldt
pop
lods
or
ds
lods
xor
pop
or
xchg
jmp
movb
out
or
or
shrl
out
dec
sub
mov
arpl
cmp
jmp
dec
adc
repnz
push
outsb
xchg
ja
mov
out
not
sbb
sub
adc
movsb
push
fisttpl
ret
nop
mov
cwtl
cmc
fimull
mov
arpl
dec
ja
and
dec
jb
daa
sub
bnd
ja
mov
jg
inc
or
mov
add
insb
mov
xor
pop
mov
popf
cmp
test
call
in
dec
in
fstpl
dec
imul
pusha
sbbl
icebp
imul
rcr
push
pop
sbb
cmp
pop
push
int3
repz
mov
clc
fst
ret
loopne
jae
xorl
jno
and
leave
push
sub
repz
mov
jmp
lahf
jl
xor
xor
mov
push
lock
jp
add
in
and
out
mov
jp
sbb
ret
daa
loop
out
mov
xor
inc
jo
jmp
mov
dec
loopne
xorb
inc
xchg
pop
xchg
mov
dec
inc
adc
ds
jmp
inc
outsb
inc
mov
xchg
mov
insl
add
add
into
adc
std
fidivs
aas
push
in
pop
ja
mov
stos
mov
inc
xchg
stos
xlat
pop
mov
fldt
lahf
xor
mov
shrb
mov
sub
in
rcrl
ja
push
mov
fistps
mov
das
inc
pop
lods
mov
ret
dec
cmp
notb
mov
push
mov
mov
jg
insb
outsl
cltd
fsts
loopne
and
mov
jl
push
xchg
mov
mov
fisttps
out
mov
scas
clc
pop
mov
pop
sbb
mov
xchg
iret
pop
test
jbe
or
push
fwait
sti
scas
sbb
scas
inc
jnp
imul
or
nop
push
xchg
push
test
iret
mov
adc
int
sti
and
push
add
inc
fcmovne
faddl
adc
or
inc
or
js
dec
repnz
or
stos
call
jle
dec
xlat
add
out
and
fidivs
sub
adc
pop
pop
ja
mov
in
repz
lcall
dec
dec
jecxz
ljmp
fs
into
sub
push
pop
lahf
xchg
push
in
movsl
ss
pop
enter
popl
jne
or
pop
pop
jp
mov
dec
adc
std
mov
and
sbb
cmpsl
xchg
mov
roll
dec
mov
or
in
orb
punpckhdq
xor
pop
lret
jne,pt
sub
xor
mov
xlat
fsubr
mov
adc
shrl
jae
xchg
pop
rorl
cmc
xchg
cwtl
fbld
lcall
daa
loop
xor
mov
daa
dec
sub
xchg
inc
sbb
insl
mov
pop
sub
and
movsl
sbb
push
lock
popf
sahf
lods
jl
inc
mov
adc
mov
pushf
enter
fidivs
push
sub
jle
lahf
pop
fsubrl
xchg
sti
xor
sub
push
sti
aas
data16
out
pop
jecxz
fldenv
pop
stc
mov
rol
mov
sub
outsb
add
js
cmp
jl
jle
loopne
test
mulb
stos
and
sbb
lock
ja
sahf
xchg
inc
push
sti
sti
mov
mov
repz
test
pop
xlat
xchg
enter
std
int
inc
add
enter
leave
pop
adc
mov
stc
mov
ret
jo
shl
adc
mov
sti
and
addr16
xor
xor
out
xchg
mov
incb
push
push
jns
movsb
push
mov
js
ret
testl
out
add
scas
orl
push
into
jmp
repnz
cmp
mov
jg
dec
sbbb
shll
data16
mov
mov
mov
pop
daa
xchg
cmc
jmp
sti
pop
pop
and
mov
fsubs
sarl
je
scas
and
adc
jb
in
and
or
cmovg
sbb
xor
pop
mov
pop
fsubrs
jmp
in
cltd
jp
nop
cmp
inc
cmpsl
enter
pop
jl
aas
ret
ds
stos
jb
cmp
add
fistps
pusha
mov
bound
push
mov
push
jecxz
addr16
or
add
add
push
and
neg
popf
popa
out
ror
xor
ret
xchg
test
fadds
cwtl
mov
jbe
dec
push
jbe
add
lea
pminub
int3
jb
in
lods
lods
push
mov
fs
in
dec
movsl
insl
fxam
test
pop
jge
mov
inc
sub
loopne
sub
push
cli
rol
add
hlt
mov
stos
ja
in
or
arpl
test
inc
mov
sahf
mov
xchg
add
or
xor
rcll
and
in
or
push
jb
mov
addb
xchg
mov
fs
mov
xor
mov
jg
jne
xchg
ljmp
or
dec
cld
mov
xor
lcall
rcrb
cmp
loope
rolb
jne
or
testl
jae
push
mov
rcl
cmp
call
or
jg
mov
or
movsl
arpl
xchg
xchg
dec
ficomps
mov
aad
mov
pop
jle
adc
sahf
mov
sbb
mov
insl
or
pop
std
pop
pop
lret
adc
lods
mov
aam
inc
test
dec
sbb
inc
jle
jno
cld
inc
int
les
mov
mov
and
dec
test
jecxz
loop
mov
mov
pop
das
enter
sbb
sub
aas
cmp
and
cmp
subl
pop
cld
ljmp
cmp
icebp
clc
push
adc
rcr
adc
lret
jmp
mov
push
jl
enter
cwtl
stos
je
jge
sbb
sub
stos
mov
neg
repnz
sbb
xor
push
and
mov
cmp
fdivrl
push
rclb
fwait
sbb
jecxz
lcall
adc
xor
mov
aas
pop
cmp
lahf
imul
xor
pop
clc
push
test
xchg
lock
inc
aam
pop
pop
or
push
xchg
bound
lret
loop
out
mov
sti
cmp
dec
fisubs
ljmp
inc
mov
add
or
jno,pn
jl
cltd
popa
pop
sbb
add
mov
add
addb
test
inc
lds
mov
and
jns
loopne
enter
bound
aam
pop
test
lock
and
out
sub
jp
mov
jmp
push
dec
jne
sub
push
sub
or
or
stc
xlat
mov
mov
or
dec
inc
mov
or
or
mov
cmp
cmp
mov
cmp
jp
or
adc
cmp
pop
sub
mov
scas
add
fnstsw
data16
mov
cmp
das
popf
sahf
jno
mov
add
insb
out
fs
or
pop
adc
mov
imul
pop
arpl
sahf
testb
fsubs
call
ret
push
jo
cwtl
jl
sub
subb
and
jbe
shrl
stc
mov
jne
nop
push
outsl
hlt
stos
push
int
cld
push
movhps
andl
stos
and
decb
into
xchg
adc
push
stos
xor
xchg
mov
stc
test
leave
mov
imul
adc
and
lea
and
repnz
aaa
sbb
jmp
xchg
test
cltd
lods
jp
jge
repnz
in
rclb
dec
fistpll
jne
out
sbb
push
sbb
fwait
test
lods
and
data16
jbe
sub
inc
leave
cmc
mov
sti
fcomi
stos
jbe
insl
ljmp
test
or
pusha
pushf
mov
xor
cmp
lock
mov
popf
imul
push
popf
cmp
into
dec
sub
pop
sti
mov
pop
sbb
inc
faddl
pop
emms
in
test
cmp
push
les
add
aas
cmp
jle
sub
orl
mov
jle
cmpsb
shlb
lods
xchg
jo
lods
scas
aaa
fistpl
mov
sub
mov
and
xchg
add
and
xchg
push
test
or
cmp
mov
mul
xor
adc
and
inc
inc
pop
test
lock
hlt
fucomp
inc
or
fstpl
pop
mov
jo
mov
lcall
push
and
sub
mov
ret
adc
insb
cltd
sub
test
sbb
neg
int3
xchg
mov
add
xor
out
xorb
roll
inc
aas
sahf
and
sub
mov
imul
daa
mov
insb
push
int
jl
mov
pop
movsl
dec
outsb
dec
lahf
pushf
js
pop
test
pop
sbb
mov
sbbb
scas
sahf
add
jmp
gs
cwtl
pusha
mov
mov
xchg
imul
mov
or
cmp
dec
pop
enter
adc
dec
jecxz
jb
jne
sbb
xchg
sti
inc
cli
mov
pop
loop,pn
sub
unpcklps
stc
in
push
js
dec
sub
movl
sub
inc
call
rcl
adc
rolb
xchg
push
push
in
js
ret
xchg
push
sub
imulb
lods
js
lahf
aas
rcr
adc
jmp
pop
and
jbe
push
push
lcall
mov
sub
jno
aas
pusha
movsb
insb
inc
ret
xor
xchg
inc
shrb
inc
stc
call
call
pop
rep
xchg
psubb
mov
test
cs
pop
sub
push
mov
pop
in
ja
loope
push
jmp
popf
rcll
fstpt
addb
fidivs
mov
push
cwtl
fs
jnp
jne
add
mov
adc
comiss
jg
cmp
sbb
cwtl
mov
add
jbe
cmp
fadds
xor
cmp
mov
cmp
or
and
sahf
fsub
fs
aam
adc
call
in
nop
rcl
aas
inc
inc
scas
cmp
aaa
popf
mov
sar
push
xor
mov
push
and
loop
sub
icebp
xor
mov
mov
bound
testb
stos
xchg
in
mov
cmp
mov
jo
inc
pop
out
sbb
sub
inc
jl
mov
ja
roll
push
add
ffreep
xor
rorl
xor
mov
add
xchg
sti
loope
fs
xchg
fwait
sub
and
fnstcw
test
outsb
inc
aaa
out
adc
sbb
ficoml
mov
sub
shlb
ret
mov
std
jno
inc
xchg
sti
adc
iret
imul
cmc
mov
sarb
rclb
mov
xlat
das
mov
clc
xchg
sbb
ficompl
mov
xor
xchg
stc
mov
push
pop
icebp
xor
movsb
and
inc
or
les
in
dec
push
push
aam
nop
fidivl
pusha
lret
stos
lcall
mov
scas
lock
outsl
dec
or
popf
cmp
xor
ds
shrb
or
pushl
shl
inc
clc
test
adc
jo
mov
xchg
mov
adc
scas
inc
call
push
sub
inc
jmp
cmpl
lahf
mov
and
insl
mov
cmpsb
sbbb
rorl
dec
fisttps
push
ljmp
lods
inc
add
pop
or
jle
xor
scas
fcmovu
sub
gs
addr16
scas
lret
adc
sbb
adc
add
scas
mov
adc
xchg
inc
pop
jae
xchg
inc
jne
add
add
add
inc
jp
stc
rclb
push
pop
call
mov
adc
push
test
cmp
pop
or
lods
flds
aas
ret
das
push
pusha
es
sbb
jne
mov
test
inc
rcrl
mov
leave
xor
orb
cmp
add
ja
push
sbb
jno
xor
xor
lahf
push
cmp
and
pop
rorb
out
cwtl
xchg
cmp
icebp
idivb
movq
xchg
mov
repz
es
fmuls
out
jmp
push
pop
cli
test
fidivrl
xchg
pop
pop
xlat
fcom
lret
dec
xchg
inc
inc
call
test
jne
int
das
push
adc
outsb
or
loop
and
jae
push
enter
in
jle
pop
push
outsl
addr16
testl
fldln2
ret
imul
inc
pop
ds
in
inc
negl
pop
jl
sahf
mov
scas
xchg
cmp
gs
movsb
pop
icebp
pop
sub
shl
sahf
fs
insb
jp
andl
push
test
test
aad
cld
enter
loopne
adc
jns
sbb
push
outsb
push
int
inc
push
dec
lret
enter
sub
mov
cli
jg
mov
sbb
mov
xor
lock
mov
testb
es
xchg
xchg
xchg
sbb
loope
and
add
fwait
add
adc
pop
int
sbb
or
cmp
mov
add
ja
adc
xor
leave
int
shll
add
push
bound
sti
rorl
fisubrs
xchg
xor
inc
mov
ffreep
loop
lds
ds
pop
cmc
outsl
xchg
cmp
loop
xor
ficompl
sbb
aam
sbb
jnp
sub
push
shrl
int3
or
aam
aas
xchg
shrb
dec
pop
addr16
push
add
inc
pop
mov
ja
jecxz
and
js
pause
packssdw
rolb
imul
xor
aas
push
mov
dec
mov
adc
or
push
js
push
mov
cmp
sub
xchg
adc
xchg
rcrl
push
loope
sahf
fidivrs
xor
and
aam
in
adc
adc
mov
push
fnstsw
in
stos
lods
divl
mov
out
dec
mov
cmp
mov
xor
dec
pushw
jo
ret
mov
sbb
insb
push
or
add
adc
mov
xchg
jnp
and
inc
jne
cwtl
jle,pt
mov
or
rcl
sub
mov
test
xchg
loope
cmp
cmpsl
pop
fs
cmpsb
pop
fwait
das
mov
lret
aam
arpl
jecxz
xor
ret
aam
arpl
adc
ds
dec
mov
mov
adc
leave
xchg
int
or
aad
sub
aaa
dec
lods
jae
fmull
and
fisubs
daa
mov
xchg
dec
jmp
add
fadds
sbbb
dec
ret
push
stc
mov
mov
inc
cmp
shlb
imul
inc
and
arpl
xor
mov
in
enter
mov
cltd
mov
push
aaa
testl
sbb
pop
aas
mov
shl
mov
push
push
rcll
xlat
popa
insl
insb
inc
add
sub
xor
jnp
out
mov
push
xchg
lret
cmpsb
iret
arpl
and
inc
xchg
cmp
scas
mov
loope
and
pop
xchg
scas
mov
adc
jo
rorl
mov
shl
sahf
loop
add
mov
mov
mov
mov
cwtl
aas
push
xor
jp
sub
pushf
mov
jo
pushf
mov
in
cwtl
xchg
pop
jno
cmpsl
xor
stos
das
dec
xchg
sbb
movsb
lods
jae
jmp
cmp
stc
andb
faddp
insl
lahf
push
and
xchg
in
nop
test
xchg
imul
sbb
or
adcb
xchg
shll
test
xor
mov
or
cmp
shr
mov
add
jnp
daa
pop
aas
dec
icebp
inc
adc
lods
ror
xor
aaa
push
in
out
mov
fdivrs
mov
ret
lcall
dec
mov
xor
xchg
addr16
xlat
lds
cwtl
pop
jnp
lret
int
clc
sbb
les
repnz
jae
or
lcall
in
int
cmp
pusha
xor
cmp
dec
mov
sbb
je
mov
je
push
inc
adc
pop
pop
jecxz
ret
jb
add
sub
mov
xor
or
mov
or
push
sub
pop
inc
push
sub
mov
add
out
mov
fwait
mov
xchg
sub
out
jo
push
fdivp
sahf
test
loopne
out
sub
jo
repz
es
les
pop
and
test
adc
ja
mov
movsl
or
jnp
mov
adc
lcall
hlt
add
mov
fdivrl
iret
add
push
lods
xor
imul
cmp
or
jg
out
js
mov
pop
xchg
pop
lock
sbb
and
call
les
push
in
sbb
ss
int
sub
int3
test
lret
adc
inc
fimull
pop
fldt
aad
inc
iret
aaa
jno
cmpsl
fildll
inc
xor
nop
adc
mov
xchg
or
cmp
jne
cmp
repnz
mov
movsl
push
data16
or
in
xor
adc
sbb
push
mov
jae
fwait
and
call
hlt
push
xchg
pop
jge
shl
adc
xchg
nop
xchg
sub
sbbb
dec
inc
iret
lret
sub
xor
fldcw
xor
xchg
and
cmp
adc
sbb
push
inc
xchg
xor
cmp
inc
mov
fwait
movnti
push
or
inc
cmp
insb
nop
jo
loop
mov
xchg
in
movsb
repz
mov
cwtl
dec
ss
leave
jmp
insb
dec
adc
add
syscall
cmp
and
mov
in
pop
cmpb
sub
fcoml
add
xor
jge
aas
add
dec
mov
push
inc
ds
cmp
repz
mov
jo
adc
and
sub
imul
cmpsl
lret
nop
repnz
or
std
outsl
mov
fwait
cmp
dec
adc
pop
mov
xchg
xchg
div
adc
scas
sub
sub
jmp
daa
outsl
or
arpl
outsb
pop
add
cs
cmc
xchg
xor
sti
sub
xor
aam
adc
sub
leave
jns
sub
cmp
das
sub
xchg
leave
dec
adc
das
mov
stos
in
mov
lret
mov
mov
sub
adc
mov
adc
pusha
mov
xor
ds
pop
ds
cmp
push
cs
popa
ss
call
ds
and
add
shrl
in
popf
repnz
leave
hlt
int
inc
and
sub
pusha
or
out
aad
or
or
add
repz
fucomi
sub
mov
jecxz
mov
push
gs
push
cmp
pop
wrmsr
xor
fldl
insl
or
ja
xlat
arpl
mov
fs
jp
mov
cmpsb
mov
inc
dec
clc
sbb
push
mov
addr16
mov
push
push
push
inc
dec
leave
sbb
aam
add
es
sahf
pushf
ficoml
or
sbb
cmp
fidivrs
push
inc
loop
cmpl
pop
or
notl
fiadds
out
cmp
gs
pusha
mov
test
and
dec
jp
push
push
loop
fcoms
sub
xorb
in
add
arpl
scas
lea
fdivl
js
pop
addb
and
insl
sbb
sbb
out
mov
pop
adc
pop
push
pop
sub
push
idivb
xor
xor
mov
sti
ret
clc
cmpsl
sub
ret
stos
push
inc
ret
shlb
ret
inc
adc
subb
fsubp
jno
mov
pop
pop
xlat
ja
mov
outsb
leave
lcall
call
sbb
xchg
xor
idivb
cs
mov
outsl
test
sub
pop
rcrl
in
pushf
cld
mov
dec
rcrb
shr
cmp
jmp
pop
cmp
push
pop
lret
push
mov
xchg
fcmovu
divl
call
xchg
pop
sub
cmc
ja
repz
pop
dec
pop
lock
mov
push
cmp
adc
sub
cs
jns
cwtl
mov
mov
rcrb
xchg
orb
cmp
push
test
xchg
xchg
inc
enter
pop
sub
mov
xchg
mov
jle
mov
dec
shlb
add
sbbb
and
ss
xor
sub
out
je
xchg
sub
fdivrs
add
jle
ror
add
clc
mov
aam
sarb
sub
cmc
stc
xor
negb
jl
cmp
xchg
inc
enter
sar
dec
sahf
insb
sbb
xchg
add
cld
out
subl
mov
clc
movsb
stc
push
imul
sbbb
int
fimuls
leave
lret
in
inc
rcll
push
jp
outsl
mov
clc
outsl
sti
lock
aad
jecxz
mov
int3
pop
call
add
inc
jae
adc
dec
jno
mov
shlb
fwait
dec
fs
add
add
lea
add
add
sub
les
andl
dec
mov
es
or
push
ljmp
icebp
jae
decb
pop
pop
inc
stos
out
fisttps
push
inc
mov
sub
lret
fld
or
fisttpll
ja
mov
xchg
mov
cli
sub
sbbb
mov
sub
inc
xchg
das
dec
xchg
scas
mov
mov
out
and
xor
insb
fstl
sbb
xchg
and
fsincos
shlb
mov
lds
les
sbb
cmp
mov
pop
cli
xor
in
push
fs
jns
cmp
adc
mov
or
mov
sbb
dec
adc
jb
and
in
jo
lcall
jmp
stos
mov
cli
jmp
test
cmp
outsb
pusha
dec
cmp
cld
dec
out
lods
shrb
push
pop
or
jmp
jle
sahf
pop
pop
jmp
scas
insb
push
scas
add
out
test
push
sahf
mov
inc
clc
jo
sbbb
clc
mov
sbbb
xchg
fstps
jle
push
sub
les
inc
push
rorl
jnp
sub
enter
push
xor
ja
push
pop
or
and
sub
loope
scas
or
mov
js
setp
jo
pop
arpl
aam
jb
orl
test
int
enter
test
pop
mov
or
flds
sub
out
jg
das
push
shr
fidivrs
mov
testb
mov
aas
pop
inc
shll
push
jbe
jbe
or
xor
push
mov
cmp
jno
mov
cs
pop
push
inc
js
jb
dec
shll
fiaddl
mov
movsb
mov
call
jl
adc
cmp
pop
mov
testb
mov
or
jns
push
xor
and
pop
xlat
and
pop
push
jno
shrl
gs
sbb
mov
jle
inc
jns,pt
lods
mov
icebp
out
xchg
fisubrl
push
ret
pop
dec
repz
int
in
cmpl
cltd
int
fsubr
testl
dec
pop
mov
cmp
orb
jne
cmp
and
in
jmp
inc
leave
pop
imul
lea
pop
test
xor
or
sbb
shrl
add
mov
mov
movsl
jmp
pushf
outsl
push
sbb
enter
imul
call
sbb
push
lock
and
popf
aaa
adc
add
enter
outsb
cmp
mov
fisubl
ljmp
outsl
sub
pop
loopne
sbb
xchg
xorl
pop
mov
mov
mov
int3
pop
aam
incl
mov
xchg
pop
sub
in
mov
sbb
jo
loope
push
insl
cmp
test
xor
ret
push
test
xchg
xor
xor
cltd
dec
mov
mov
push
bound
fs
pushf
and
js
add
mov
out
add
xchg
inc
adc
xchg
xor
or
js
shll
mov
pop
pop
movsl
sub
xor
mov
movsb
push
mov
dec
call
sub
lcall
popa
inc
jmp
fisttpl
dec
lret
test
pop
pop
in
and
sub
pop
cmp
inc
rolb
push
push
push
dec
pushl
mulb
insl
inc
xor
mov
js
mov
jo
sbb
es
inc
or
sbb
clc
sub
cmp
mov
add
hlt
lea
pusha
dec
out
and
push
ljmp
and
xchg
call
jae
fisubl
popa
pusha
test
into
and
pop
pop
sub
jg
cmp
and
test
test
or
cmp
les
aad
xor
or
add
stos
mov
out
ffree
pop
cmp
lret
cmp
andb
or
push
cmpsb
or
inc
push
xchg
pop
bound
dec
fcoms
mov
stos
mov
or
and
ljmp
mov
aad
gs
sub
sub
fucomip
sar
cmp
mov
ljmp
lods
popf
sti
popf
test
cs
fdiv
lret
adc
push
insl
dec
jmp
xor
ret
pop
hlt
paddw
cmpsl
lret
jp
jge
int3
add
xor
xchg
imul
push
rcrb
jmp
out
popa
pop
and
cld
int3
or
or
and
repnz
bound
adc
jbe
insb
pop
add
in
cld
add
xchg
xchg
lock
dec
add
lret
sbb
add
iret
sub
movsl
lcall
iret
or
xchg
shrb
and
mov
inc
aam
mov
fistpl
sbb
mov
mov
inc
stc
push
js
mov
pop
xchg
inc
popf
notl
mov
loope
repnz
jmp
sarb
sbb
psllw
jp
movsl
xchg
aas
mov
clc
pop
cmpb
jge
sbb
mov
pop
sti
roll
push
imul
inc
add
jmp
cmp
mov
pop
ret
cltd
xchg
pop
fs
pop
xchg
pop
mov
movsl
lahf
in
fcompl
xchg
jle
popf
and
xchg
adc
out
insb
fcmovbe
fdivr
jle
pop
xlat
test
addr16
std
in
mov
std
mov
adc
xchg
jae
movsb
pop
mov
fdivr
xor
into
push
out
xor
or
jl
test
pop
mov
lock
and
test
xchg
clc
jns
fsubl
inc
rcll
lods
dec
ljmp
gs
inc
adc
push
int3
loope
pop
xchg
adc
faddl
aas
ljmp
rorl
outsl
lret
adc
ss
wrmsr
insb
dec
sti
jbe
pop
cmp
test
repz
cli
xchg
icebp
push
cmp
outsb
loopne
jl
fsubs
ja
dec
mov
scas
push
jge
shrb
xor
xchg
jl
xchg
push
adc
cmp
mov
bound
inc
popa
cwtl
out
jbe
xchg
jp
mov
fildll
scas
jle
pop
mov
sbb
jg
add
sub
push
sbb
inc
fstpt
pushf
stos
and
jno
je
fists
call
adc
add
int
sub
fsts
movsb
bound
aad
frstpm(287
inc
lods
push
mov
jns
cmp
and
adc
and
lods
xor
xor
std
mov
js
sbb
inc
dec
emms
cmpsb
call
xor
push
xchg
hlt
dec
mov
pop
adc
adc
mov
inc
push
mov
pushf
aam
dec
loopne
pop
pop
xor
dec
insb
jge
cmp
add
adc
enter
mov
test
cmpsb
jbe
insl
pop
shlb
out
pop
add
shlb
xchg
loope
jle
push
fistl
sub
inc
mov
ljmp
enter
mov
imul
jae
stos
outsl
xor
mov
movsb
xchg
cli
pop
enter
repz
mov
shl
pop
mov
lea
push
cmpl
inc
rolb
fists
inc
popf
push
push
cmp
dec
cmp
ljmp
add
lds
ss
in
jge
inc
mov
adc
and
or
ficoms
sbb
bound
sub
movsl
mov
loopne
xor
cltd
inc
mov
push
cmpsb
xor
out
test
les
adcl
xchg
cmp
sbb
or
add
lock
mov
mov
scas
lret
pop
jno
lcall
push
adc
cltd
cmp
xor
ljmp
clc
and
aaa
jb
cmp
mov
and
push
mov
jmp
sbb
sub
pop
inc
fsubs
cld
dec
pop
mov
test
jo
push
xchg
jecxz
repnz
lods
adc
mov
int
adc
dec
std
mov
pop
loope
add
jbe
xor
jns
pop
xorl
lret
pop
pop
xchg
and
loope
rol
adcl
rcl
mov
out
sbb
lods
add
mov
test
mov
mov
js
jae
dec
sub
iret
enter
mov
mov
xchg
jmp
push
mov
test
nop
iret
xchg
imul
inc
mov
test
mov
and
add
cmp
fnstsw
test
add
adc
jge
mov
lods
dec
xor
hlt
dec
addr16
in
xor
pop
movsl
mov
push
inc
loope
fiadds
insl
movsl
scas
adc
xchg
rcl
sahf
call
or
cmp
int3
inc
fsubrl
inc
jge
pop
in
ljmp
lock
mov
cmp
cmpb
movsl
pop
sub
stc
xchg
mov
sub
out
std
arpl
jne
fisttpl
out
dec
push
sub
stc
mov
add
mov
adc
xchg
push
and
popf
xor
test
cmp
fstl
std
mov
popa
out
int3
and
push
push
cmpsl
cmp
dec
fwait
adc
loope
jb
inc
lret
dec
lret
dec
shlb
jnp
inc
fidivs
sub
rclb
push
inc
adc
push
ljmp
and
dec
pop
inc
cmpb
cwtl
mov
adc
push
xchg
xchg
mov
push
add
scas
mov
sahf
pop
fwait
add
das
lret
and
push
sbb
push
adc
add
orl
sbb
or
adc
clc
push
dec
rol
sub
push
jmp
lods
push
and
mov
jge
mov
or
idivb
add
imull
xchg
add
repnz
das
movl
adc
lds
sub
cmp
repz
push
pop
loop
add
push
clc
icebp
inc
mov
dec
les
xor
mov
fists
push
imul
outsl
imul
mov
push
in
sbb
shll
xor
and
dec
mov
or
outsl
enter
popa
rorl
lret
aaa
mov
push
ja
clc
icebp
daa
and
or
movsl
cmpsb
mov
ss
push
in
cmp
xchg
repnz
gs
xchg
and
dec
jb
call
mov
xchg
mov
flds
push
mov
adc
rcrl
push
adc
fdivrp
pop
imul
xor
fisttps
jge
xchg
push
std
testb
stos
lods
out
xlat
clc
cmpsb
jle
data16
rclb
mov
out
sbb
enter
mov
add
fwait
mov
out
pop
test
jo
jbe
cmpsb
jmp
andl
repnz
cmp
ror
or
jecxz
xchg
leave
out
adc
sti
jo
mov
push
mov
jmp
mov
inc
inc
std
enter
shr
inc
and
push
lods
adc
in
mov
cmp
mov
and
mov
xor
or
inc
pop
nop
xchg
jge
mov
inc
cmp
mov
leave
dec
and
aad
rcrl
inc
cmp
enter
cmpsb
cmpb
push
and
test
push
loop
push
or
inc
pop
xchg
and
lods
rcrl
mov
and
fldenv
inc
mov
push
push
inc
jge
lea
aas
call
pusha
adc
nop
adc
cmp
sbb
xlat
push
mov
pop
sub
jbe
and
faddp
fs
sub
mov
cwtl
ss
push
xorb
ret
inc
inc
jmp
insb
lock
cmp
mov
ret
int
movsb
scas
jge
pop
xchg
jle
cmp
test
pop
scas
mov
mov
mov
scas
mov
imul
and
fsubrs
add
lods
test
fisttpl
xchg
shr
pop
add
and
jb
jno
dec
shll
inc
shrl
jo
stc
jno
mov
inc
js
pop
pushf
push
add
push
dec
mov
push
ljmp
ds
bound
cld
repz
mov
jmp
inc
jmp
sbbl
das
lret
mov
icebp
mov
ljmp
pop
fcomp
adc
pop
sub
push
mov
or
mov
xchg
xchg
mov
and
jnp
iret
mov
push
outsl
inc
mov
and
adc
call
sub
or
out
fisubrl
mov
pop
push
sub
addr16
mov
enter
fisttps
xor
mov
test
imul
loope
out
sub
jl
stc
pop
cs
and
aaa
fnsave
cmp
push
jge
loop
out
inc
addl
mov
adc
insb
das
mov
and
push
lret
inc
loopne
and
fninit
out
rclb
jae
daa
fidivl
ss
outsb
mov
lret
rcll
or
lea
mov
pop
add
daa
xchg
inc
filds
mov
mov
xor
mov
mov
mov
hlt
cs
sarl
gs
xchg
add
add
jbe
push
xchg
mov
sbb
sub
hlt
sbb
mov
jmp
fldcw
sbb
pop
fs
mov
xchg
clc
repz
mov
into
adc
xor
xor
cmp
adc
clc
lea
fbstp
cmp
cmp
mov
les
cs
mov
out
adc
test
dec
add
js
xchg
movsb
mov
pop
adcb
in
mov
popl
daa
cmc
and
mov
sub
xchg
pop
out
pop
mov
mov
xor
dec
std
sbb
outsb
sub
scas
mov
xchg
add
adc
push
adc
shll
xchg
push
adc
sbb
fcomp
in
sub
lahf
sbb
xchg
test
or
rorl
cmp
lea
or
stos
jno
popl
sub
jno
popa
mov
jo
dec
mov
out
mov
pop
dec
mov
mov
mov
or
mov
add
xchg
jp
mov
shll
popf
dec
dec
ds
add
pusha
jo
into
stos
rcrb
shlb
or
pop
mov
in
jns
adc
rorb
decb
xlat
xchg
sbb
rclb
stos
mov
lret
add
pop
scas
lods
add
jo
les
pop
es
xchg
outsb
jbe
incl
pop
scas
sub
dec
xlat
push
jmp
in
loope
pop
pusha
adc
add
rcll
outsl
jmp
lea
jne
jmp
jno
jne
test
aas
jno
shlb
mov
arpl
jp
ret
inc
mov
in
inc
jle
fadds
mov
xchg
pop
ja
test
jo
inc
outsb
test
mov
push
cmp
loop
jne
imul
popf
jle
es
imul
sbb
push
add
test
mov
inc
roll
leave
jbe
pop
jle
in
fwait
and
movsl
jp
lods
mov
add
lods
mov
and
das
xchg
jns
stos
lds
or
jl
xchg
mov
cwtl
mov
stc
sti
dec
push
mov
inc
flds
es
jmp
mov
cmp
or
xorb
outsl
cmp
jno
mov
xlat
dec
sub
push
push
rcrl
adc
or
xor
adc
mov
sbb
mov
jecxz
cmc
xor
faddl
bound
fisubs
or
rcl
inc
outsb
jecxz
mov
pusha
inc
out
inc
popf
out
in
add
cld
or
in
dec
jno
cld
inc
outsl
leave
inc
dec
xchg
bound
int
sub
jb
sbb
xor
rcrb
fdivr
cmp
add
or
jg
insb
das
enter
jge
xchg
int
jl
dec
adc
pop
repnz
into
test
lea
dec
pop
mov
je
xchg
lods
sub
leave
icebp
gs
lock
mov
das
mov
insb
int3
push
push
repnz
xchg
scas
std
sbb
imul
movsl
sbb
shl
and
jno
mov
stos
fcmovnb
cmpsb
inc
stos
jg
mov
cmp
loope
lods
dec
xchg
adc
dec
aas
jl
sbb
jle
pop
cli
mov
add
mov
bound
shll
enter
scas
xchg
bound
stos
inc
mov
rorl
jecxz
jb
pop
lret
scas
pop
cmp
jo
mov
lods
fucomp
test
inc
and
push
adc
inc
or
jae
enter
das
push
out
xchg
addr16
movsl
add
rorb
out
dec
and
ret
push
adc
inc
cmpsl
adc
mov
mov
mov
xor
lods
enter
test
mov
adc
cmc
mov
pushf
inc
mov
push
js
pop
in
jg
ja
mov
outsl
hlt
pusha
mov
shlb
cwtl
mov
test
cmpsb
enter
lods
mov
bound
aad
repnz
add
mov
jge
out
lahf
and
xchg
bound
mov
xor
jns
sub
or
jns
ja
loop
test
cltd
add
add
pop
inc
pcmpgtw
add
stos
push
les
cmpb
mov
push
jnp
scas
subb
aaa
jae
imul
add
jns
dec
cs
jmp
dec
popa
fcom
out
push
mov
out
and
and
les
xor
or
or
cltd
xchg
rclb
sub
cs
pop
sub
xor
cmc
mov
int
cld
jno
xor
scas
mov
lahf
dec
sti
in
lret
push
repz
xor
cmp
sbb
data16
outsb
into
rcll
add
or
es
pop
and
lahf
xor
adcl
fstl
dec
xor
dec
mov
mov
cmpsb
fs
adc
mov
jb
pop
test
jnp
scas
insl
mov
jbe
xchg
pop
inc
stos
xchg
dec
ret
xchg
jge
sbb
scas
stos
push
mov
pop
pop
test
in
xchg
pop
push
push
mov
sbb
or
mov
cld
iret
bound
dec
mov
loop
fs
sub
xor
pop
adc
js
mov
sub
jmp
add
dec
xchg
fnstenv
clc
dec
aam
test
add
shl
shlb
cmp
jae
fs
mov
orl
sbb
mov
aam
shll
dec
mov
int3
nop
xlat
in
shrl
outsb
rclb
in
pop
jmp
addr16
sbb
jo
cmp
inc
xlat
pop
ret
inc
ds
xor
mov
sti
cmp
add
pop
sahf
pop
stc
frstor
adcb
pop
xor
push
fwait
push
imul
sbb
daa
imul
xor
fstpl
fs
andb
bound
xorl
add
ret
les
mov
lods
or
jne
push
mov
push
push
lret
dec
xor
das
mov
push
adc
shrb
and
dec
int
sub
lock
mov
mov
addr16
xchg
dec
jg
push
lret
in
push
and
loopne
stos
mov
clc
cmc
jbe
jl
cmp
imul
or
pop
cmp
add
mov
push
and
jl
pop
jnp
stos
push
popf
in
xchg
cmp
orb
xchg
and
xor
pusha
loopne
jne
mov
fldenv
lahf
lcall
loopne
pusha
xchg
mov
cmp
cli
sub
out
ret
mov
xor
lock
xor
jo
lcall
mov
stos
lahf
arpl
ss
pop
fadd
movsb
lds
cmp
fcmovu
icebp
les
mov
mulb
shll
and
fwait
andl
sarl
ljmp
fs
psllq
ret
xchg
popl
add
cs
sbb
cmc
inc
insl
ret
xchg
cld
popf
mov
add
popf
sbb
gs
cltd
jo
pop
scas
push
pop
sbb
out
sbb
jne
stos
lods
fldenv
jno
jb
sub
lds
sub
ljmp
loopne
pop
ljmp
popa
cld
js
dec
mov
push
mov
and
and
mov
int3
dec
decb
xlat
adc
mov
push
divl
int3
sub
and
dec
mov
dec
imul
mov
pop
push
pop
mov
aam
test
adc
das
mov
fbstp
addl
insl
push
mov
fcoms
pop
out
sbb
addr16
arpl
sub
and
mov
ds
in
sbb
cmp
mov
andl
adc
cs
scas
stos
vmwrite
xchg
cmp
inc
xchg
cmpsb
test
sub
add
pop
pop
scas
dec
push
inc
in
cli
xor
dec
dec
cld
iret
mov
mov
or
divb
mov
les
xor
jmp
sbb
aam
ja
mov
xchg
cltd
add
cmp
mov
loopne
cmp
loop
loop
test
inc
jnp
cmp
sbb
sbb
fnstenv
enter
dec
out
movsl
push
fwait
rol
imul
lds
insl
ficoms
inc
sti
xchg
cld
xlat
mov
addb
inc
fnsave
loope
mov
xor
add
add
mov
adc
xor
and
xchg
repnz
inc
mov
xchg
jp
shrl
sahf
jo
and
push
push
in
mov
arpl
jg
or
mov
push
mov
fcmovnbe
out
lahf
ret
mov
jg
sub
xchg
dec
test
sbb
loope
add
add
inc
add
pushl
sbb
or
ret
add
das
add
lds
cmp
xchg
outsb
jno
xor
lock
ljmp
sub
rcr
and
in
call
scas
add
mov
aas
fdivl
popa
outsl
loope
lock
shlb
sub
mov
push
dec
divl
push
dec
jo
out
bound
lret
sub
sub
cmp
jbe
outsl
cmp
in
popf
lret
push
mov
add
mov
jg
adc
arpl
nop
sbb
pop
lods
pushl
mov
insl
cwtl
in
jmp
or
sbb
jecxz
push
sub
dec
xor
xchg
into
xor
lock
and
jecxz
dec
sub
inc
pop
or
cmp
icebp
adc
xor
adc
aaa
sbb
scas
add
sbb
cwtl
sub
add
mov
push
push
jp
enter
and
nop
ja
mov
in
pop
lods
jo
rclb
fstpl
cmc
sbb
cmp
xlat
push
push
outsl
es
sub
jo
and
cmpsl
and
ss
push
in
sarb
cwtl
cmp
xor
pop
push
popf
stc
std
repnz
xor
ds
add
enter
scas
call
outsl
dec
add
mull
lret
cmp
dec
les
pop
es
pop
loope
pusha
jg
in
out
push
fmuls
push
fs
jle
movsl
jp
inc
inc
loop,pn
push
aad
cmp
ja
fnsave
mov
int3
je
insl
xchg
pusha
and
cmp
mov
ja
repnz
out
sub
je
insb
add
sub
stos
xchg
ret
ljmp
pop
cmpl
out
lcall
xor
add
inc
fmull
lcall
fdivrl
add
jb
lods
cmp
mov
jbe
es
mov
gs
mov
stos
mov
inc
inc
lock
jns
pop
mov
es
icebp
inc
orb
or
mov
in
lods
dec
lret
stos
pusha
imul
daa
icebp
mov
clc
dec
sbb
pop
cmp
add
xchg
pop
xchg
pop
inc
sbb
pop
cmp
in
test
es
int3
lods
sub
inc
scas
stos
ret
mov
mov
adc
mov
or
adc
out
insl
and
jecxz
or
xor
sub
push
xchg
jecxz
adc
mul
xchg
pushf
rcr
jmp
and
cmp
mov
add
in
lcall
and
out
inc
pop
in
imul
add
cmp
push
mov
faddl
cmc
push
pop
push
into
ds
or
cmp
or
cmpsb
and
cmp
out
mov
dec
dec
aad
outsb
popa
jl
or
je
jmp
aam
ds
loope
int
loope
test
mov
add
pusha
lods
cmp
push
out
cmp
dec
arpl
inc
bound
sti
add
jbe
push
xchg
icebp
loopne
fistps
test
jb
flds
das
xor
push
jne
add
sub
xchg
mov
mov
ds
jge
lret
cltd
or
out
adc
or
dec
push
add
imul
mov
pop
cmpsb
bound
mov
mov
dec
jno
ss
dec
xchg
leave
push
lret
jnp
mov
xchg
sarl
jge
sbb
test
mov
out
add
mov
push
and
sar
xchg
sub
leave
or
sub
ret
sti
bound
and
cmp
pop
shr
andb
ds
mov
cmpsb
mov
loop
dec
or
mov
test
not
adc
pop
lock
scas
pusha
clc
je
mov
nop
shr
push
outsb
push
inc
jb
fsubr
std
adc
out
jbe
stos
cmp
les
push
pusha
add
mov
lcall
mov
sbb
xchg
movsb
and
mov
pop
or
push
ds
mov
daa
bound
lea
add
jp
dec
outsb
or
fisubl
add
jge
roll
lock
out
mov
pushf
jge
add
test
push
jp
orl
out
lods
cmp
lcall
mov
cmpsl
mul
ret
sahf
sub
aad
lock
jp
sub
inc
ss
xchg
aas
bound
jbe
sti
dec
push
sbb
loopne
cld
or
jns
and
out
enter
scas
push
pop
mov
sbb
clc
iret
pop
lock
jmp
sub
and
sbb
xchg
and
nop
mov
push
test
loopne
fisubl
pop
scas
or
out
in
xchg
cmp
xor
lock
rclb
cmpsb
xor
adc
pusha
loope
hlt
jae
jno
jo
insl
inc
cmp
outsl
iret
mov
pop
call
xor
fcomps
xor
notl
stos
repnz
mov
xor
repnz
cld
or
dec
or
mov
ss
jns
mov
repnz
jge
pop
sti
push
test
jmp
mov
testl
mov
fmull
mov
leave
mov
inc
sbb
push
adcl
push
aam
insb
sub
adc
shll
or
jne
lea
scas
sbb
stc
in
rorl
pop
test
cmp
mov
dec
or
cmp
add
in
lock
sbb
add
das
fdivs
xchg
repnz
les
mov
mov
pop
mov
jbe
jns
leave
cwtl
mov
adc
inc
pop
inc
popa
push
pop
xchg
xchg
xchg
pop
jb
and
fsubs
lret
icebp
enter
scas
xchg
sub
push
pushl
aaa
push
jmp
inc
iret
aaa
lret
jnp
lcall
sub
leave
inc
iret
cmp
insb
dec
mov
dec
adc
push
push
fdivr
jne
push
mov
xchg
imul
in
mov
in
xor
popl
lret
out
cmp
in
hlt
out
jge
jo
ret
fisttps
sbb
outsb
xchg
pop
fidivs
addl
mov
xorl
dec
out
sbb
push
and
test
adc
add
mov
mov
fists
cwtl
mov
mov
mov
adc
push
stc
dec
or
mov
cmc
mov
mov
push
or
xor
cmp
mov
inc
inc
iret
sti
lcall
into
call
aam
and
lock
add
mov
in
leave
push
mov
out
xchg
mov
mov
cmpb
inc
add
in
and
data16
jnp
pop
add
cmp
cmpsl
ljmp
icebp
les
stc
adc
cmc
addr16
cwtl
pusha
fdivl
push
pushf
and
dec
push
push
ljmp
repnz
pop
pop
lods
imul
jae
faddl
cld
pop
repz
jg
repnz
inc
xchg
adc
add
add
xor
out
xchg
cli
fiaddl
add
dec
test
int3
in
outsb
fiaddl
jae
aad
or
push
xor
mov
dec
gs
jno
push
mov
push
inc
jp
cmp
jo
xlat
xor
add
jns
enter
rcll
push
inc
lds
add
mov
pushf
lock
cmpsb
movsl
lcall
pushl
mov
cltd
iret
insb
mov
imul
sarb
xor
push
pop
dec
mov
icebp
clc
and
jo
pop
mov
mov
not
lret
inc
popf
jg
aaa
add
mov
aad
inc
pop
popa
inc
movsb
jmp
mov
arpl
outsl
mov
jae
inc
xchg
outsb
jle
adc
mov
xchg
dec
push
xchg
jmp
pushf
outsb
jbe
jmp
adc
and
imul
clc
push
subl
lahf
testb
pushf
scas
sub
bound
hlt
jb
sahf
mov
mov
testl
inc
cmp
push
insl
out
stos
in
mov
xchg
xchg
insb
mov
jnp
idivb
or
or
fadds
jbe
jge
xor
cmpsl
xchg
lods
cmpsb
stos
xchg
mov
pop
jbe
nop
xchg
dec
das
adc
or
cld
jnp
in
adc
mov
mov
dec
inc
aad
outsl
xor
mov
cmp
mov
cmp
dec
ds
inc
dec
dec
cmp
cltd
pop
and
dec
xchg
xchg
icebp
push
iret
xchg
ljmp
movsb
js
lock
mov
ficoms
insb
and
xchg
pop
fsubs
fisttpll
mov
and
iret
ds
lods
out
fwait
js
sub
xchg
jb
xor
leave
mov
fisttps
sub
out
popf
test
xor
andb
fs
jae
add
into
pop
subl
ljmp
pop
sbb
scas
mov
lret
inc
add
ja
adc
jp
mov
stos
add
mov
add
lret
push
mov
inc
je
das
in
test
pushf
iret
sahf
dec
add
inc
clc
pusha
loopne
lods
cs
in
sub
leave
push
sbb
scas
mov
xchg
negl
jmp
sahf
aam
cwtl
mov
mov
popa
and
sbbb
push
or
cmp
add
das
mov
pop
lods
dec
pushl
cmpsb
stc
inc
sbb
sbb
les
aad
pop
or
insb
sbb
mov
or
push
icebp
push
xchg
nop
aad
push
negl
adc
cmc
mov
pop
fcompl
icebp
cmpsl
push
outsl
xor
repnz
push
ds
push
lea
mov
lock
cmc
mov
lock
lods
or
pop
dec
rcl
jmp
imul
mov
clc
mov
lcall
add
aaa
mov
call
xor
dec
inc
sbb
iret
int
or
movsb
scas
into
popa
aad
shlb
arpl
enter
add
mov
sub
pop
sbbl
pop
mov
mov
outsl
and
sub
movsl
add
aas
ret
add
int
fldcw
adc
fwait
test
cmp
std
sbb
iret
mov
sbb
sub
gs
jno
xor
mov
and
std
scas
adc
testb
enter
dec
decb
icebp
push
dec
test
in
mov
fiaddl
lret
push
mov
sub
and
je
ljmp
call
fsts
stc
push
arpl
popa
pop
cmc
mov
sbb
add
inc
add
int3
sbb
lahf
outsl
cli
lds
stos
push
xor
push
popf
cmc
sub
enter
cmc
mov
pop
scas
cs
mov
test
pop
scas
lds
scas
sti
stc
sub
in
out
and
fsts
cmpsb
test
jmp
rcr
dec
lods
repz
xor
cmp
cmc
test
jae
cmpsb
dec
popf
xchg
mov
lahf
shll
roll
xchg
stos
xchg
or
insb
push
jbe
lahf
mov
pop
adc
jmp
rorl
adc
sbb
adc
mov
gs
mov
ds
mov
push
lods
fmull
repnz
dec
mov
test
push
sub
mov
and
mov
dec
repz
mov
gs
lahf
pop
mov
pop
and
pushf
icebp
add
jecxz
inc
or
imul
mov
js
popf
xchg
mov
sar
xor
jmp
aam
int3
scas
aas
inc
mov
ljmp
mov
rcl
loope
sbb
jne
repz
arpl
mov
fstpt
shlb
psrlw
adc
clc
adc
rol
mov
repz
clc
adc
mov
int
and
adc
int
mov
insb
xchg
lods
test
lret
std
mov
fs
xor
jbe
int3
fisttpll
or
loopne
lock
loopne
mov
sbb
dec
cmp
mov
xchg
adc
ret
jg
fdivrl
mov
sub
jne
add
shlb
xchg
push
jmp
add
xchg
cmpsl
dec
sbb
xor
fisubs
or
or
and
xchg
mov
mov
sbb
xchg
or
iret
popa
cmp
inc
outsb
std
ror
pushf
adc
cli
mov
push
cmp
jbe
mov
dec
mov
xor
jmp
pushf
or
stos
or
jmp
add
in
dec
ret
sub
mov
mov
adc
sub
adc
es
sahf
clc
sub
dec
mov
ficompl
mov
stos
mov
fcmovnu
dec
push
pop
mov
add
push
and
xor
filds
mov
mov
mov
add
jae
stc
jge
ds
cmpsl
mov
lods
lods
push
and
xor
mov
scas
xor
in
mov
jne
adc
mov
lods
jle
mov
ret
repz
imul
loope
jle
push
xchg
lock
inc
icebp
shrl
call
add
adc
iret
cmp
in
dec
into
sbb
pop
stos
adc
mov
mov
mov
or
cld
ret
test
mov
mov
pop
fisubs
jmp
add
repz
sub
xchg
jb
in
daa
mov
add
nop
repnz
mov
push
pop
push
push
test
stos
jp
cmpsb
mov
cmp
scas
jg
lods
adc
ljmp
aaa
xchg
mul
xor
fimull
or
sub
push
std
jge
daa
data16
enter
aas
mov
dec
pop
pop
mov
cltd
sbb
jno
mov
movsl
or
lods
sbb
mov
xchg
add
popa
fdivr
lea
loop
dec
push
add
insb
mov
sub
popf
sub
jae
inc
xchg
pop
testl
dec
xchg
jae
and
jo
sub
mov
call
insl
dec
into
jl
pop
fdivs
arpl
pop
cmp
push
add
out
xchg
lahf
jle
mov
sbb
sbb
into
scas
out
jp
sahf
mov
or
sahf
pop
xor
and
mov
mov
jecxz
inc
lcall
sub
add
add
xor
out
jmp
jmp
stos
sub
and
aaa
inc
fwait
xor
dec
add
aas
dec
cmp
leave
or
out
mov
xor
mov
hlt
pop
mov
stc
ficomps
pop
icebp
in
and
pop
mov
mov
icebp
mov
push
jno
mov
lods
and
movb
cwtl
in
incl
ret
or
inc
in
pop
rorb
adc
mov
daa
fwait
sbb
fs
and
clc
mov
jmp
xor
ds
sbbb
loopne
lds
sti
loopne
push
inc
push
cmp
mov
je
dec
iret
outsl
mov
mov
in
ret
pushf
enter
sbb
mov
mov
aad
adc
jo
gs
sub
stc
int3
int3
add
pop
data16
sbb
test
stc
xlat
scas
in
jg
lea
imul
pop
push
mov
rcrb
adc
gs
imul
leave
call
dec
push
mov
mov
mov
pusha
cmpsb
js
data16
xchg
fcomi
cmp
cwtl
int
inc
push
inc
jmp
mov
xchg
notl
jae
xchg
lret
int3
scas
fidivs
and
dec
adc
andl
adc
xchg
inc
xor
push
aam
cld
xor
andl
cmpsl
cmc
adc
pop
cmp
scas
cmc
xchg
push
sub
enter
mov
es
pushf
dec
repz
push
ljmp
gs
adc
sub
xor
xlat
test
or
fildll
xchg
mov
in
jg
shrl
add
lods
lock
mov
das
pop
out
and
push
mov
jo
jo
stos
test
push
cmp
pop
dec
nop
sbb
es
sbb
mov
jo
movsl
les
adc
lcall
bnd
test
movsl
bnd
les
pop
cmpsb
in
negl
jo
ds
int
mov
mov
xchg
stos
fsubrl
pushf
outsb
cmovns
xchg
ja
jae
adc
cmp
fwait
mov
aam
jb
cmpsb
inc
sbb
cmpsl
mov
xor
fsts
arpl
mov
xlat
xlat
add
ret
popa
dec
fmuls
xchg
testl
add
aad
jns
mov
mov
lahf
push
fnsave
cwtl
loopne
lret
and
dec
mov
mov
mov
dec
aaa
lret
orb
push
and
dec
data16
adc
mov
mov
outsb
leave
jp
lret
xchg
add
inc
cmp
sbb
ret
insl
mov
dec
imul
push
mov
lcall
sbb
cmp
in
jg
out
and
push
loop
pop
xchg
pushf
pusha
das
hlt
dec
cli
roll
cwtl
jae
dec
push
add
ljmp
lret
fidivrl
xor
jmp
pop
shrb
lock
int
iret
rorl
pop
sub
add
out
test
lret
add
lcall
mov
xor
jle
pop
cmpsb
shrl
pop
cmpsb
inc
jne
repz
dec
pop
adc
jecxz
aad
mov
cmpsb
pushf
das
cmp
cmc
mov
add
fsubp
stos
adc
push
mov
addr16
cmp
aaa
test
das
into
xchg
stc
sbb
inc
test
movsb
pop
fisubrs
cltd
mov
stos
fidivrs
xchg
xchg
fstpt
movsb
mov
ret
mov
add
mov
or
mov
sub
mov
out
rclb
dec
cli
dec
cmp
jl
add
mov
or
dec
xor
shlb
inc
push
push
xor
sub
add
pop
cmp
push
add
fs
bound
stos
dec
mov
add
mov
lcall
xchg
dec
xor
pop
xlat
jge
pop
mov
mov
push
out
sbb
les
decb
sbb
fadds
jno
mov
adc
ja
outsl
and
jmp
imul
and
clc
ret
xor
sti
mov
add
lods
cmp
add
push
dec
fs
outsl
ss
loop
mov
and
cmpsl
leave
xchg
push
fdivrl
idivl
je
pop
lahf
inc
xor
mov
xor
iret
mov
pop
pusha
jl
dec
dec
stos
cmp
nop
shlb
inc
pop
inc
filds
push
and
xchg
loope
adc
scas
dec
in
mov
pop
lcall
into
movb
imul
add
push
rol
mov
cmp
sub
fidivl
movaps
xor
ret
mov
mov
scas
push
bound
sbb
lock
mov
push
mov
pop
and
jecxz
jge
mov
jb
dec
mov
xor
mov
jmp
ljmp
sub
cltd
in
je
ret
mov
sub
stos
hlt
int3
bound
inc
xor
xchg
xor
test
adc
push
insl
lret
mov
push
mov
cld
jg
mov
mov
in
ljmp
and
leave
add
wrmsr
das
push
aas
jb
push
push
aam
addb
mov
or
repnz
or
cmp
ja
lods
loopne
cmp
outsl
fs
ficoml
adc
add
fnstenv
aad
fwait
movzbl
call
jno
inc
adc
bound
loop
mov
jmp
cmc
and
or
pop
mov
jb
mov
lock
sti
mov
add
das
jg
or
popf
mov
xchg
and
push
ljmp
out
call
bound
lock
movsb
cmp
fildl
mov
scas
shll
outsl
out
pop
sub
mov
and
mov
push
sub
loope
mov
pop
inc
inc
inc
adc
out
mov
jmp
dec
enter
jns
sbb
xchg
push
cmp
pop
xlat
aad
jo
mov
mov
outsl
arpl
ret
jmp
testl
lahf
mov
inc
mov
pop
push
les
arpl
fnstenv
jo
xchg
push
mov
imul
add
incb
clc
sbb
les
inc
push
in
scas
jp
fisubl
mov
ja
test
add
add
jg
cli
mov
inc
push
push
sbb
lcall
jno
hlt
ret
cmpsl
xchg
xchg
pop
scas
and
leave
inc
test
in
and
cwtl
idivl
xor
fdivl
mov
push
out
jno
into
pop
sbb
test
in
cld
push
out
or
cmpsl
add
cs
pushf
dec
ret
pop
ret
mov
repnz
and
mov
cmp
mov
ljmp
ljmp
aam
pusha
adc
imull
mov
xor
imul
adc
inc
std
insb
jl
cmc
lahf
pusha
adc
cwtl
loopne
in
and
push
cmp
movsl
loopne
cmpsl
sub
mov
push
xor
lea
incb
or
sbb
les
push
imul
scas
jl
inc
pop
outsl
push
sub
mov
sbb
mov
cs
jno
jnp
push
pop
insb
and
and
add
rcll
mov
sti
xchg
cmpl
call
xor
add
adc
call
or
ret
sbb
adc
add
imul
push
leave
xor
repnz
push
daa
jnp
and
xchg
aam
add
movsl
inc
inc
push
xor
jp
xchg
adcl
inc
mov
clc
jecxz
cmp
dec
jp
hlt
xor
shrl
scas
out
and
pop
and
jno
xor
sti
fsubl
pushl
mov
pushl
push
cmp
mov
hlt
add
movsl
dec
pushf
jb
divl
or
sbb
je
xor
cs
mov
jno
clc
mov
std
jb
mov
sub
jmp
pop
dec
sarl
inc
cmc
xor
inc
in
nop
cmp
dec
mov
dec
add
test
fwait
bound
mov
inc
cwtl
sbb
mov
mov
xchg
push
or
xchg
xor
fstps
out
lea
fidivrs
mov
fld
pop
rcr
mov
dec
xchg
aam
and
in
mov
in
out
shl
je
or
ret
sub
sub
mov
mov
bound
push
jae
repz
pop
lahf
jmp
add
mov
aad
jecxz
jne
add
push
adc
pop
testb
push
bound
or
ds
inc
shrl
adc
nop
shlb
xchg
or
sub
jge
repnz
cld
sbb
mov
stos
adc
stc
fdivrp
jecxz
sub
cmp
pop
or
mov
lea
adc
inc
enter
adc
das
cmpsl
sub
jnp
lods
sub
test
gs
cmc
mov
or
test
out
adc
mov
inc
lods
and
mov
xor
xor
jo
orl
loope
cs
ret
dec
outsb
jo
call
xor
hlt
dec
sub
shll
dec
sbb
push
in
call
adc
jne
js
dec
adc
or
in
movsl
in
pop
dec
inc
scas
add
mov
pop
mov
jg
mov
stos
popa
pop
push
dec
jge
pop
test
add
sbb
mov
data16
mov
mov
and
sbb
insb
nop
in
gs
pop
push
outsl
sub
push
xchg
mov
fwait
mov
mov
adc
nop
xchg
stos
stos
push
push
in
out
mov
cld
daa
or
loop
jns
cmp
lea
shll
in
test
ja
mov
loopne
mov
je
jmp
insb
push
xchg
xchg
push
and
enter
mov
cmp
adc
cmp
sahf
or
push
adc
push
adc
sbb
int3
lret
test
fwait
insl
or
sub
or
sbb
add
es
mov
inc
loop
insl
cmp
pop
outsb
inc
sbbl
jge
adc
call
insl
loopne
push
or
dec
mov
inc
lea
mov
fcom
xchg
adc
sahf
jo
addl
inc
cmpb
movsl
xor
or
or
clc
xor
mov
add
sahf
or
repnz
sbb
push
fs
push
loopne
stos
mov
lods
mov
mov
pop
enter
in
lock
cmp
ret
cs
xor
aas
icebp
mov
loop
in
repz
daa
clc
pusha
or
cmpsb
fdivl
mov
jge
rorb
in
insb
mov
mov
cmp
push
add
lods
or
mov
mov
rorb
icebp
outsl
adc
iret
or
sub
pusha
add
mov
outsl
mov
cld
ja
je
stos
and
js
mov
shlb
adc
sahf
and
jb
jnp
xor
jae
lods
mov
ds
fwait
jns
add
pop
sub
sbb
inc
gs
ds
xor
in
repnz
pop
mov
andb
pop
es
test
mov
jno
mov
cmp
jnp
int
mov
sub
adc
push
cwtl
loop
or
into
hlt
and
js
push
ror
iret
xor
cmp
mov
dec
icebp
jp
shrl
sub
aad
pop
popf
mov
or
push
ficoms
jns
cmp
pusha
xor
jecxz
mov
or
xorb
cli
xchg
dec
add
jmp
push
push
sar
jnp
cmp
lds
ja
lods
cmpsl
mov
ss
in
push
xor
mov
sbb
cmp
cmp
push
inc
or
xchg
shll
leave
and
ss
cli
out
scas
gs
jno
sbb
es
mov
adc
or
jae
into
push
sbb
subb
loopne
push
pop
loope
mov
aad
out
in
loope
dec
mov
fwait
add
pop
mov
sub
in
or
add
jecxz
loop
loope
push
subl
dec
popf
stos
jo
popa
mov
inc
inc
lcall
out
xchg
movsl
outsb
out
sahf
cli
inc
std
xor
sub
out
sub
stos
ljmp
mov
sub
or
jb
sbb
cmp
mov
mov
adc
push
inc
cld
outsl
ja
fwait
inc
js
push
mov
mov
stos
xor
lea
out
lods
sti
ds
das
sbb
cmpsl
test
mov
jl
or
cmp
in
rep
test
xor
enter
push
dec
pop
inc
cmp
movsl
lret
sbb
add
dec
sbb
cmpsb
jb
hlt
loope
sub
xchg
iret
push
sub
movsb
popa
mov
in
loope
cwtl
ss
ljmp
dec
jl,pt
add
pop
inc
jl
mov
aam
push
test
jb
push
dec
pop
adc
push
add
adc
lahf
sub
push
add
fwait
loop
loop
pop
mov
imul
add
hlt
in
mov
movsb
cmp
in
mov
imul
adc
jp
add
mov
mov
mov
mov
dec
cmp
fwait
sub
lods
and
loopne
clc
xor
filds
adc
or
sarb
mov
adc
inc
xor
lock
and
xor
cwtl
xor
mov
das
pushf
sbb
pop
jno
mov
sahf
xchg
mov
jmp
add
pop
ss
xchg
fsts
mov
shll
xor
clc
repnz
lret
sahf
jb
inc
pop
mov
dec
leave
mov
movsb
jl
adc
jbe
jbe
into
mov
inc
jno
mov
sub
mov
cltd
xchg
nop
out
stc
stc
xchg
out
dec
xor
mov
adc
sub
movsb
loopew
mull
test
sub
push
cld
arpl
push
xchg
dec
jnp
mov
jb
mov
clc
cmp
push
mov
sbb
jl
jle
clc
adc
push
lcall
cwtl
lret
out
pop
push
test
imul
or
push
xchg
jno
jl
dec
in
sub
shl
mov
pushf
mov
sarl
push
test
sub
push
ret
mov
shlb
pop
inc
mov
mov
pop
popa
mov
les
out
xor
push
push
mov
data16
fstps
rol
lret
call
fidivl
xor
adc
and
in
and
pop
jmp
push
mov
add
jl
aas
push
stos
add
xchg
popa
push
js
aad
into
adc
sub
pop
pop
shll
lock
xor
xchg
aam
mov
mov
fstl
dec
shll
xchg
cli
ret
push
daa
mov
inc
and
cltd
push
and
add
sub
xchg
iret
lods
pop
rclb
xor
dec
popf
add
pop
pushl
mov
jb
cmp
xchg
inc
lea
into
repnz
lcall
pop
mov
aad
lock
divb
add
and
adc
adc
sahf
mov
sub
rorl
xchg
xchg
xchg
cs
daa
rolb
xchg
icebp
pop
icebp
mov
loop
cli
inc
imulb
nop
js
jp
inc
push
jmp
push
jp
mov
mov
call
rolb
xchg
rcll
cmpb
dec
jnp
push
gs
adc
into
push
xchg
cmp
lods
insl
daa
and
nop
outsb
xor
testl
mov
push
lahf
mov
sub
ret
ret
movsb
scas
lret
or
leave
ljmp
lods
mov
dec
sub
pause
leave
dec
bound
inc
bound
es
pop
loopne
cli
movsb
sub
xor
sub
and
push
std
ljmp
imul
daa
xchg
das
inc
popf
adc
testl
push
adc
mov
jg
movsl
das
mov
repz
cli
cmp
mov
mov
fists
pop
es
rcrb
test
mov
cmp
outsb
loope
js
mov
sub
add
pushf
popf
imul
adc
push
cld
pop
jo
ret
dec
rcll
daa
gs
sbb
mov
push
mov
icebp
sbb
pop
add
gs
data16
mov
xor
into
xchg
int3
std
ja
inc
dec
jmp
in
lcall
imul
pop
adc
adc
pop
mov
inc
add
lds
jae
adc
push
jle
lea
jae
divl
ret
test
jecxz
pop
cmp
out
push
mov
adc
ret
push
xchg
jno
and
sbb
xor
je
or
lock
pop
or
pop
adc
inc
fs
pop
mul
and
dec
sub
lods
nop
call
mov
movsl
cmp
jge
xchg
or
jno
imul
jle
std
or
shlb
or
push
mov
dec
xchg
xchg
push
inc
mov
or
popf
jp
sbb
xlat
mov
and
mov
in
jmp
add
xor
clc
pop
dec
rorl
and
in
pop
aad
repnz
pop
jl
xor
mov
ret
movsl
xchg
mov
in
cwtl
push
fcom
pop
outsl
cmp
lock
push
and
jo
je
pop
shll
cmc
push
movsl
mov
filds
jle
and
adc
in
bound
push
iret
aaa
mov
movsl
mov
mov
gs
jne,pt
lods
ss
xchg
rclb
add
fidivs
lahf
test
out
sbb
outsb
imul
rcrl
push
repz
sti
jle
mov
cmpsb
pushl
loope
and
rol
ljmp
leave
adc
in
ss
rcll
int
pusha
dec
js
mov
add
mov
ret
cli
jmp
dec
mov
iret
stos
aad
or
mov
divb
faddl
xchg
js
and
xor
sub
pop
push
or
xor
test
mov
lcall
stos
dec
sub
fistl
push
add
in
clc
stos
je
aas
mov
inc
mov
push
xchg
ljmp
je
sti
or
popf
cmpsl
jp
dec
adc
scas
push
or
sub
rcrb
mov
icebp
adc
loope
inc
cmpsl
xchg
lock
xor
fwait
stos
inc
sbb
test
je
aam
cmpsl
xchg
sbb
xchg
xor
ss
mov
popa
jmp
push
cmp
icebp
adc
hlt
inc
dec
or
out
loope
mov
or
cmp
pop
into
insl
dec
mov
dec
jl
imul
xor
and
mov
gs
add
mov
cmpsl
in
out
mov
and
mov
mov
mov
jne
xchg
jno
xlat
mov
pop
jecxz
pop
adc
aas
jge
xor
xor
pushf
hlt
jo
pop
xchg
add
dec
out
mov
das
pop
mov
cmp
cmp
out
sub
ret
jp
repnz
cld
push
or
in
mov
stc
sub
clc
std
lock
stc
pop
mov
or
push
mov
pop
leave
sbb
adc
sbb
mov
orb
xor
or
push
mov
push
or
cltd
cwtl
leave
in
jmp
mov
pop
jo
in
xchg
aad
cmpsb
subl
lods
mov
or
shlb
cwtl
mov
into
sub
clc
lret
add
fildl
mov
popf
jne
inc
std
lahf
add
scas
pop
fisubrs
cwtl
jge
add
jo
mov
mov
cltd
decl
cmp
xor
pop
stc
jns
inc
lods
repz
and
dec
sti
lcall
clc
iret
addr16
aaa
fisttpll
cwtl
repnz
add
xchg
cmpsb
je
data16
insl
pop
jne
sub
sbb
enter
imul
fisttpll
push
out
mov
push
jns
adc
adc
scas
fcoms
inc
and
push
mov
pop
pop
sub
cmpsl
leave
push
dec
scas
sub
ds
out
ret
inc
jb
sbb
dec
jecxz
cmp
fsubs
sti
add
fmull
xchg
pop
mov
in
cmc
and
xchg
mov
add
sub
pop
add
scas
inc
sbb
inc
lods
sbbl
das
in
je
test
xor
dec
repnz
sub
es
push
call
das
xchg
repz
jo
adc
jge
mov
shlb
dec
stos
in
push
mov
pop
in
dec
nop
ljmp
xchg
data16
push
jecxz
mov
inc
xchg
daa
xor
in
decl
jno
pop
inc
ds
or
sub
sahf
adc
xchg
bnd
mov
pusha
and
mov
jmp
xor
mov
sbb
jp
mov
inc
or
mov
notl
add
xchg
mov
add
shll
and
ret
jnp
lret
adc
movsb
jns
cld
push
inc
scas
adc
mov
adc
js
sbbb
negb
dec
push
dec
cmpsl
fimull
mov
push
sub
imul
sti
jne
loop
pop
push
mov
test
hlt
into
sbb
add
and
push
sub
jno
push
lods
mov
loopne
mov
pop
xchg
push
add
inc
cmp
adc
adc
or
mov
sbb
add
aam
lret
cmp
xchg
mov
xchg
leave
lret
xlat
push
test
imul
cmp
adc
jg
cmp
scas
pop
adc
jns
ficomps
icebp
mov
or
dec
mov
jnp
xchg
and
xchg
mov
mov
decl
or
bound
inc
add
bound
or
jae
insb
and
sub
push
idivl
mov
sbb
mov
jl
stos
ljmp
xchg
add
xchg
in
fdivrs
cmpsl
hlt
and
or
cmp
lret
leave
pop
mov
in
jnp
cli
idiv
bound
lock
xchg
jae
push
nop
mov
add
lock
enter
adc
bound
mov
sbb
aad
ljmp
mov
jecxz
pop
or
std
push
mov
test
lock
xor
push
pop
popf
dec
xor
sbb
jnp
dec
jbe
ret
add
ljmp
mov
push
sbb
dec
or
jne
dec
repnz
xchg
in
mov
xchg
sbb
outsb
daa
mov
push
test
shrl
jne
jnp
xor
and
mov
gs
sub
inc
in
push
popf
mov
int3
sti
mov
in
pop
out
in
jae
fwait
pop
jmp
ret
in
mov
lods
add
push
lret
pusha
rcl
mov
pop
add
ret
enter
and
push
mov
fwait
mov
or
lock
sbbl
int
test
inc
cmp
xchg
push
dec
jge
cmpsl
ljmp
jns
jne
cmp
jle
stos
sub
inc
xchg
jp
mov
or
pop
inc
mov
xchg
data16
pop
movsl
xchg
xor
cmp
adc
dec
in
pop
pushf
pop
push
out
call
xchg
jp
xor
jb
jl
xor
dec
sbb
sub
lret
mov
inc
jl
push
sti
inc
into
pusha
fs
dec
repz
pop
push
dec
mov
add
enter
aas
mov
xor
pop
xor
cwtl
sarb
sarb
mov
mov
jo
mov
int3
xor
cld
repz
call
mov
mov
mov
scas
mov
mov
push
data16
lcall
adc
xlat
xchg
lds
jmp
mov
inc
jle
test
leave
lret
enter
pusha
adc
js
ljmp
stc
jp
mov
es
mov
and
mov
mov
xor
test
aaa
pusha
cmp
sub
xorb
pop
dec
xchg
enter
pop
cmpsb
push
sub
fsubr
ja
mov
xchg
daa
adc
lret
mov
jg
sahf
push
inc
pushw
test
repz
and
sbb
inc
xchg
andl
sub
jle
cmp
mov
mov
dec
dec
jmp
or
fnsave
inc
stos
in
adc
lret
jp
fisubl
and
xchg
addl
adc
jp
mov
mov
pushf
fnsave
xchg
andb
les
out
inc
jne
or
loope
arpl
call
inc
and
jbe
aad
dec
xchg
xchg
sub
aas
dec
mov
adc
movsb
push
xchg
lea
push
sti
dec
xor
jg
sbb
out
in
das
sbb
jge
ljmp
mov
pop
loope
loop
jmp
daa
jle
pop
inc
mov
aaa
or
hlt
jle
insl
gs
push
mov
imul
jae
jnp
fstpt
mov
mov
outsb
test
popf
pop
pop
roll
add
out
xor
scas
repz
pop
clc
and
iret
xlat
pop
lahf
or
adc
push
dec
test
fs
pop
out
dec
mov
inc
nop
iret
hlt
adc
int3
mov
mov
mov
cld
cmp
mov
cmp
mov
int3
fcomi
sbb
push
test
ret
cltd
mov
push
lods
js
xchg
scas
xchg
mov
mov
jnp
sbb
jne
xor
das
adc
movsb
imul
in
lcall
cld
ficompl
int
dec
xchg
mov
scas
imul
mov
lahf
adc
out
stos
inc
sub
adc
bound
aad
cmc
in
pop
stos
lahf
into
aas
dec
fisubrs
inc
xchg
mov
roll
jae
pop
xchg
or
sub
jnp
outsb
and
xor
push
fildll
fsub
out
and
test
addr16
sbb
or
adc
pop
enter
test
mov
outsb
data16
adc
nop
insl
mov
or
mov
dec
dec
mov
fldcw
fdivs
mov
fs
cmp
fnstsw
sub
and
mov
stc
out
jg
mov
and
imul
sbb
cmpsl
leave
mov
sub
xlat
add
adc
stos
adc
stc
js
mov
dec
push
rorl
bound
aaa
jb
stc
jge
cmp
lea
lret
or
into
cli
add
icebp
xor
je
lods
rcr
repz
pop
mov
mov
xchg
add
clc
cli
inc
leave
sahf
stc
enter
ret
clc
cmpsb
repz
mov
clc
cmpsb
dec
js
inc
push
nop
mov
adc
jae
push
ret
mov
or
or
cmpsl
and
dec
push
js
lock
shll
inc
fcmovne
stos
xchg
mov
sub
jae
int
xchg
xchg
repnz
rcl
mov
or
sbb
das
inc
int
cmp
data16
jp
into
negl
lock
test
inc
imul
cmp
push
fs
js
cmp
hlt
dec
pop
cwtl
cld
outsl
repz
dec
dec
xchg
inc
enter
mov
sub
icebp
icebp
out
or
scas
scas
cli
inc
imul
decl
ss
lods
adc
and
into
arpl
add
call
sti
xor
jae
mov
pop
xor
inc
sbb
out
shlb
mov
and
dec
cmp
leave
sahf
push
mov
pusha
mov
sarl
loop
add
imul
xchg
in
clc
inc
lds
nop
aam
adc
into
inc
enter
movb
daa
and
push
daa
test
in
jmp
loope
pminub
pusha
popa
inc
xchg
inc
popa
mov
out
jmp
fistl
inc
sbb
pushf
cwtl
xchg
das
in
call
insl
fistps
clc
jg
add
jp
cmp
sysret
lods
out
sbb
movl
movsl
lahf
cmp
inc
xor
xor
and
jp
xchg
out
test
inc
lcall
je
mov
or
in
jecxz
ret
jns
mov
int3
stos
jg
ja
cwtl
dec
pop
add
ret
clc
cmp
mov
addr16
sub
mov
cltd
bound
stos
inc
test
loop
hlt
pop
test
fadds
dec
dec
add
pop
inc
push
mov
pop
loop
cltd
in
or
mov
pop
fsubp
addr16
mov
imul
dec
fdivp
jmp
test
into
mov
pop
push
cmp
shrl
fists
push
jecxz
movsb
cltd
in
rcl
mov
pop
mov
scas
filds
test
cmp
mov
enter
sub
rcll
adc
or
roll
adc
fisubrl
pusha
aaa
movsb
xor
daa
dec
sar
xchg
pop
push
mov
sub
or
push
xchg
les
dec
cmpl
push
out
sar
pop
or
movsl
les
rcrl
pushf
dec
sbb
push
iret
cmc
or
aam
xor
cltd
in
mov
data16
mov
pop
sub
pop
sar
repz
xor
inc
or
push
xor
arpl
je
cld
dec
out
rcrl
imul
pop
test
hlt
inc
pushf
aam
or
popf
das
lods
arpl
add
or
xchg
sub
aad
rclb
movsb
outsl
push
xchg
mov
nop
addb
jbe
xor
lret
out
out
dec
fimull
lcall
ret
out
fcom
ret
xchg
cld
sub
push
leave
mov
push
lods
mov
test
lock
jmp
mov
shl
xor
in
dec
sub
adc
sbb
cmpsb
mov
push
jg
xchg
or
mov
cs
mov
dec
loope
sub
dec
sahf
aad
sbb
sbbl
dec
inc
lods
gs
sbb
imul
sbb
xlat
loope
jg
or
das
pop
ja
dec
out
loop
js
data16
dec
add
es
xor
and
fsubs
add
or
mov
push
add
dec
int
mov
xor
adc
fldenv
js
out
jb
pushf
aam
mov
lret
cmc
fucomip
stos
xor
mov
xor
ljmp
or
mov
jge
mov
push
repnz
jecxz
gs
xchg
or
mov
jmp
inc
fs
sub
lcall
mov
jmp
cmp
iret
in
dec
iret
shrb
dec
push
test
push
xchg
divb
xor
out
repz
fbstp
push
xor
xor
cli
movsl
inc
push
mov
fldenv
pop
mov
jo
rcrl
cld
fnstenv
cwtl
sahf
stc
and
arpl
mov
insb
or
jae
and
call
sbb
pop
push
fwait
ret
adc
cmp
jp
push
mov
fs
sbb
sbb
sbb
mov
repnz
sub
ljmp
or
and
shrb
mov
in
out
xchg
icebp
xchg
movsl
cld
push
jbe
push
cmpsl
adc
out
sbb
lods
repnz
jmp
test
stos
add
pop
test
adc
in
mov
je
daa
dec
jg
js
sarb
sbb
enter
cmp
push
out
xchg
jg
ret
xchg
adc
fincstp
jo
enter
mov
shrb
inc
repz
cmp
cs
popa
jl
ret
and
movsb
mov
sub
mov
jg
or
sbb
into
mov
pop
rorl
fidivrs
jmp
in
pop
or
mov
lock
test
js
ds
aaa
pop
aas
data16
mov
mov
mov
mov
xor
dec
ret
push
adc
movsl
cli
rcl
mov
int
ret
imul
push
add
or
inc
rcrl
shlb
fmull
jl
xor
or
mov
fwait
sbb
fidivl
test
scas
das
push
sub
insl
adc
cmp
push
outsb
mov
cmpsb
test
dec
shrl
pop
bound
pushf
and
sub
in
mov
dec
repnz
mov
std
cmp
stos
pop
xchg
loopne
mov
push
std
bound
sub
and
sub
pop
dec
pop
cltd
subl
add
xchg
xor
jmp
roll
jg
outsl
push
insb
outsb
sbb
cmpl
mov
xchg
rcrl
arpl
loop
sub
jp
cltd
and
fisubrl
pop
cli
scas
imul
std
jp
inc
sbb
push
lock
sub
cmp
fldl2e
leave
insb
push
mov
push
lods
aad
add
adc
es
movsl
jge
fstps
pop
fs
repnz
scas
xchg
mov
sub
sti
xchg
push
xchg
stos
add
js
test
xor
inc
jno
pop
adc
sbb
stc
mov
pushf
push
hlt
scas
mov
scas
sbb
dec
mov
xchg
aas
test
fisttps
pop
call
mov
imull
push
jmp
scas
inc
popa
enter
daa
into
shlb
adc
repz
or
aam
pushf
cmpsb
jb
cmc
sahf
xor
pop
sbb
pop
iret
pop
sbb
sbb
and
pop
adc
stos
xchg
test
and
xor
jl
jo
call
mov
mov
cmp
popf
inc
xchg
clc
xchg
fidivl
jae
add
outsb
xchg
mov
cwtl
lahf
add
lea
mov
imul
mov
push
push
dec
mov
jb
or
pop
stc
cmp
xor
inc
jle
cwtl
pop
mov
out
and
test
push
adc
mov
fisubl
popf
sbb
data16
and
pop
adc
sub
pop
add
in
sbb
cmp
add
xchg
or
loopne
jae
inc
addr16
xchg
xor
mov
cli
dec
out
mov
cs
fcomi
mov
adc
add
add
out
xchg
loopne
mov
in
xorl
clc
in
inc
add
jae
imul
adc
mov
push
and
sub
sbb
and
mov
jne
mov
jnp
inc
mov
and
xchg
dec
add
dec
push
popa
scas
notl
adc
add
leave
dec
popf
and
lds
nop
loop
testl
enter
push
pop
mov
xchg
aad
cmp
in
outsb
scas
push
or
pop
cmp
pop
jg
outsb
jge
daa
nop
jnp
lret
lock
lods
jge
inc
imull
movsl
adc
jge
scas
jne
and
insb
ds
sbb
sbb
out
jbe
data16
pop
test
fstpt
push
stos
addr16
aas
fidivrl
push
notb
xor
inc
data16
hlt
pop
daa
movsl
test
into
es
and
int
mov
test
mov
jmp
mov
fnstcw
js
test
cmp
xor
push
sahf
or
ret
add
stos
cmp
hlt
inc
in
and
testb
insl
mov
mov
sub
mov
sub
incl
mov
add
jbe
xor
inc
inc
sbb
ljmp
jae
add
inc
pushf
orl
loope
aam
sar
cmp
loopne
ds
movsb
mov
enter
jmp
jae
push
jmp
aam
push
add
push
sub
scas
stc
call
lcall
mov
sbb
mov
movsb
jle
add
xchg
int
pop
and
ffreep
loopne
mov
pushl
and
push
test
daa
insl
es
repz
pop
add
mov
push
sahf
add
push
add
xlat
test
and
add
and
fbstp
scas
shrb
sahf
cmp
leave
lds
movsb
xchg
stc
push
shrl
hlt
push
jg
xor
dec
mov
mov
popa
test
adc
jecxz
call
in
es
out
out
fs
or
aam
mov
adc
sub
icebp
cmp
lods
jno
dec
aam
stos
jb
ljmp
pop
int3
arpl
mov
push
pop
cmp
pushf
out
inc
inc
jl
sbb
sbb
ret
pop
and
xchg
push
aaa
mov
push
mov
sbb
or
mov
fimuls
rcrl
testl
aam
jo
xchg
push
ss
push
fs
fildl
scas
xchg
xchg
cwtl
dec
sbb
mov
mov
mov
cltd
bound
xor
sub
sbb
pop
stos
push
mov
dec
cmpsl
dec
xor
add
inc
in
icebp
stos
shrb
xchg
jb
xor
adc
bound
stos
cmc
jecxz
jae
insl
dec
mov
loope
les
std
fistps
pushf
dec
sbb
xchg
aam
outsl
push
in
int3
out
lcall
pusha
dec
movsb
sbbb
lcall
xchg
ret
inc
adc
xor
fs
fcmovbe
push
sahf
pop
sbbl
jb
fistpll
lea
jnp
cmp
add
push
adc
shrb
ljmp
pop
and
in
mov
jnp
mov
mov
push
inc
testl
add
jns
jmp
adc
adc
cmc
cltd
and
add
pop
movsl
rclb
mov
hlt
pop
mov
imul
ret
adc
dec
loop
pop
shll
or
xchg
fnstcw
push
test
pop
ficomps
lods
cltd
cmpsb
xlat
sahf
xchg
call
mov
jg
jmp
cmc
sbb
data16
sti
mov
push
clc
sub
cmp
lcall
testb
dec
cmovbe
xor
push
push
xor
mov
and
imul
pop
mov
enter
lds
data16
call
jecxz
ret
add
std
ret
dec
scas
xlat
or
pop
push
orl
sbb
test
iret
xchg
push
aad
gs
inc
sbb
mov
cmp
cmpb
movsl
adc
and
pop
fisttpl
ret
lahf
in
push
adc
xor
loopne
fwait
fs
fcoml
cmp
pop
std
jne
push
icebp
inc
sbb
jno
fildll
das
arpl
xor
adc
inc
inc
adc
hlt
leave
ljmp
sub
out
cltd
sbb
sub
andb
mov
jne
mov
cmp
jns
popa
ds
int
pop
fs
cmp
insb
enter
push
inc
loope
ss
sar
or
xor
xor
out
xor
cli
push
scas
push
adc
mov
lret
test
jge
mov
notb
test
cli
sub
add
jp
mov
enter
sarb
and
repnz
fwait
aas
cmp
or
push
xor
jmp
stos
subb
mov
pop
adc
repnz
sub
xchg
adc
ja
imul
in
dec
push
iret
push
adc
in
lcall
arpl
xchg
sub
je
into
pop
mov
mov
aaa
rolb
sub
fnstsw
adc
pop
int3
lret
loopne
jle
add
loopne
jo
insb
push
mov
sti
in
dec
inc
test
nop
test
scas
jmp
imul
call
jbe
dec
pop
aam
jmp
outsl
repz
inc
subb
pop
pop
ds
pushf
push
mov
push
or
imul
dec
or
ret
pushf
xor
outsb
push
lcall
je
mov
xchg
test
pop
stc
loop
leave
xchg
inc
xor
sub
in
jo
ret
les
ja
sub
xchg
fdivs
or
push
lds
test
out
nop
orl
in
adc
out
sub
sub
pop
adc
rcrb
adc
push
es
jg
add
adc
jl
dec
test
fs
insb
ds
pop
cld
or
lods
sub
std
cmp
dec
data16
xchg
lcall
and
push
loope
and
add
lods
jbe
mov
inc
mov
out
jg
int
test
sbb
bound
test
shrb
cmp
lahf
adc
xchg
js
cmpsl
bnd
push
loope
jnp
xchg
mov
idivl
jl
icebp
and
push
xor
scas
jp
decb
dec
dec
fdiv
or
push
add
lahf
mov
jae
inc
iret
cmp
pop
sahf
cmp
cmp
mov
jmp
jle
and
js
mov
cmp
cmpsb
inc
inc
mov
sbb
sti
mov
or
ror
add
jmp
adc
pop
scas
pop
out
sahf
push
movsb
xchg
lea
popa
jmp
ret
fidivrs
mov
inc
aam
and
inc
mov
cs
insb
push
movsb
jmp
push
loopw
add
bswap
andl
cmpsl
adc
jge
inc
push
xor
mov
add
pusha
imul
insl
inc
xlat
ds
push
int
mov
inc
jmp
fldl
je
lods
icebp
mov
adc
mov
pop
rorb
mov
cmp
fdivl
dec
xchg
and
pop
repz
dec
push
xor
arpl
inc
xor
icebp
and
or
das
iret
cli
xchg
mov
fildl
pop
inc
push
xchg
and
mov
push
sti
data16
mov
int3
test
js
cs
lret
add
loop
or
scas
ret
loope
das
add
arpl
cwtl
sti
xchg
in
shrl
cwtl
mov
xlat
pop
xor
inc
gs
dec
nop
pop
out
pop
into
xchg
ljmp
fst
adc
xor
jg
mov
daa
jp
jecxz
scas
pop
sub
adc
pusha
aas
fldt
mov
jns
mov
xor
filds
dec
pop
jle
stos
jp
or
ret
sub
ja
fwait
adcb
sub
stos
xchg
push
jbe
cwtl
imul
cmc
adc
sub
stc
cmpsb
sbb
sub
xchg
cmp
mov
add
outsb
gs
inc
repz
movsl
xor
insb
xchg
mov
stos
movsl
ret
xor
out
ret
in
out
cmp
jns
cmc
outsl
daa
cmp
cmp
std
shll
hlt
outsl
out
push
push
mov
mov
pop
mov
push
pop
std
out
sahf
sub
cmp
dec
sub
fmuls
adc
outsb
aas
adc
xor
xchg
pop
call
pop
lahf
lahf
nopl
mov
hlt
fwait
xchg
sbb
jbe
mull
adc
dec
sbb
inc
push
sbb
out
and
dec
in
add
adc
pop
cmpsl
aad
push
cmp
in
inc
daa
adc
out
iret
push
sbb
testl
sbbb
add
lret
pop
arpl
out
mov
or
add
xor
fstps
mov
lea
mov
mov
add
mov
sub
mov
push
loope
xor
mov
and
jno
int3
sbb
cld
mov
cmp
and
aas
lock
xchg
push
mov
testl
popa
ljmp
push
ljmp
sub
lds
fnstsw
test
add
mov
cwtl
repz
mov
xchg
xor
les
cmp
pop
dec
sub
fnsave
lret
xchg
stos
push
call
lret
push
and
cmp
dec
repz
sub
pop
push
inc
cmc
inc
pusha
jge
addr16
bnd
imul
sbb
sbb
fisubs
inc
sub
dec
das
mov
adc
ja
aaa
dec
fwait
pusha
inc
add
in
add
out
xchg
mov
das
mov
stos
add
sub
sbb
ljmp
mov
movsb
jmp
add
loopne
push
cmp
inc
pop
fdivs
cli
fstpl
mov
xor
je
xor
or
xchg
clc
xchg
cld
fldenv
cmp
xchg
repz
or
inc
js
hlt
jmp
sahf
mov
xchg
sub
pop
add
push
outsl
cmpl
or
js
add
mov
and
loopne
inc
sub
enter
xchg
lret
adc
pusha
addr16
jp
insl
orb
das
lds
adc
pop
stc
fidivrs
data16
sub
mov
xchg
jmp
sub
sti
insl
or
in
xchg
scas
fwait
aad
add
nop
xor
xchg
es
pushl
xor
mov
add
mov
popa
rcl
mov
inc
or
lahf
shrl
daa
push
mov
rclb
push
inc
subb
mov
inc
jmp
lret
xchg
insb
adc
xchg
cmc
mov
jle
sub
and
mov
aaa
cs
cmp
push
adc
mov
sub
pop
sbb
xchg
xor
mov
in
jl
lock
sbb
cmp
dec
and
jb
inc
xor
loopne
mov
sbb
sahf
ljmp
sbb
lods
jb
jno,pn
mov
std
xchg
cmp
push
leave
xchg
dec
jmp
stos
arpl
xchg
push
adc
dec
popa
xor
mov
cmp
fldt
sbb
sbb
adc
pop
mov
sub
fucomi
or
fbld
movsl
subb
or
paddd
mov
fsts
jp
add
hlt
cmc
ss
push
mov
push
jns
aad
xor
cltd
insl
repz
and
stos
out
ret
rcrl
lahf
or
mov
imul
rcll
mov
mov
rorl
sbb
mov
mov
adc
mov
and
in
ret
mov
out
xchg
scas
push
ret
sbb
shlb
cmc
pop
jb
xchg
inc
rcr
mov
sub
loope
mov
xor
enter
mov
push
pop
stos
adc
dec
les
pop
and
imulb
in
jo
movsl
mov
mov
jg
xchg
jbe
cmp
adc
nop
push
out
imul
pop
sub
xor
push
rcll
sahf
and
ds
and
jecxz
roll
push
mov
dec
in
loopne
push
sbb
sbb
jne
pushf
fsubs
adc
imul
roll
pop
and
mov
int3
add
add
dec
mov
pop
hlt
cltd
std
cs
js
mov
decb
mov
out
xchg
xor
movsl
jmp
jp
jmp
mov
int3
mov
jns
push
es
enter
push
outsl
jecxz
sbb
out
addl
arpl
push
mov
cwtl
fsubl
test
mov
xchg
inc
repz
mov
clc
cmp
push
xchg
and
leave
shrl
pop
cli
adc
pop
jmp
lret
movsb
push
rolb
loop
pop
aaa
sbbb
pushf
cmp
pop
ficoms
mov
insb
in
push
xchg
xchg
inc
push
ljmp
movl
mov
sbb
leave
cmp
jnp
out
imul
add
xor
ret
jp
dec
jbe
sub
pop
test
cli
sub
fmuls
es
mov
mov
adc
test
gs
cmp
insl
jno
cli
sub
push
iret
add
test
fisttpl
into
lret
lret
or
dec
mov
ss
or
xlat
inc
js
or
mov
daa
push
scas
push
mov
imul
cmc
and
sub
xchg
xchg
out
and
in
adc
or
repz
out
jne
inc
pop
xchg
sbb
sub
icebp
adc
loopne
movsl
stos
insb
sub
loopne
push
pop
scas
and
test
sub
sub
pop
pop
sahf
cli
subb
push
or
jmp
out
sarb
dec
mov
outsl
test
jle
mov
into
shll
mov
out
jno
sub
xor
jge
fnstsw
xor
ret
aad
and
cmp
testl
xchg
jmp
mov
cmp
xor
jg
mov
sti
imulb
js
fwait
outsl
push
jbe
or
add
xor
ret
lods
mov
and
test
sbb
addr16
rcll
leave
mov
mov
and
jae
mov
insb
cwtl
pop
jl
sbb
xchg
lods
test
mov
push
leave
sarb
mov
repz
add
push
cwtl
mov
pusha
xorb
add
scas
sub
inc
int
jb
test
in
repz
or
paddsw
adc
xchg
imul
lods
sbb
pop
popa
jb
mov
or
notl
mov
cmp
pusha
loopne
data16
xor
ret
adc
xor
out
jge
aaa
and
add
stos
movsb
dec
loop
fwait
dec
mov
xchg
sub
out
xchg
iret
fwait
ret
mov
pop
sub
stos
insb
stos
je
mov
repz
arpl
into
add
enter
adc
mov
or
cwtl
push
popf
inc
sbb
std
out
mov
sub
bound
pusha
jno
jle
add
mov
mov
inc
sub
andb
scas
jmp
cmp
leave
jae
xchg
xor
pop
lea
mov
imul
inc
cmp
idivl
mov
es
in
jo
sti
add
lret
xlat
xchg
pop
aaa
cwtl
int3
mov
mov
mov
sbb
mov
push
push
faddl
hlt
pop
push
into
jle
orl
cmp
xchg
arpl
sub
mov
lret
push
aaa
fisubrl
mov
dec
push
mov
jmp
decl
pop
daa
fwait
jle
bound
dec
jbe
pop
clc
xor
adc
sbb
sahf
psllq
movsl
rclb
add
mov
mov
test
fcompl
sub
jae
or
fwait
sub
pop
std
cmp
movsb
mov
add
ds
movsl
mov
sub
inc
dec
movb
xor
fdivr
dec
jp
push
sub
mov
cwtl
jp
stos
add
lcall
loope
mov
jge
sbb
sbb
in
pop
pop
jnp
adc
andl
lcall
sti
lret
jmp
sub
lods
repz
scas
adc
ja
cmp
or
xchg
es
push
hlt
mov
push
add
sbb
jle
nop
ds
test
mov
add
loopne
jb
data16
in
dec
jmp
dec
cmp
adc
add
hlt
aad
mov
and
push
xchg
or
pushl
rorl
sti
jne
or
iret
sub
hlt
cmpsb
mov
testb
jno
cmpl
jg
mov
cmpsb
fs
adc
sbb
sbb
xchg
sub
mov
adc
xchg
outsb
push
pop
adc
mov
dec
call
insl
add
sub
imul
bound
adc
or
ljmp
les
loopne
ss
rcrb
jle
stc
call
outsb
mov
or
test
push
in
cld
lea
xor
xchg
adcb
mov
cli
std
fidivrs
cld
in
jp
clc
pop
sub
mov
jg
sub
movl
mov
pop
enter
push
cmp
inc
andb
jecxz
adc
cmp
pop
fwait
sbb
fisubrl
xlat
call
je
cli
jp
xchg
and
in
ret
and
sbb
mov
ret
mov
xor
sti
lods
sub
cs
push
outsb
mov
inc
jmp
cmovg
ljmp
dec
icebp
lods
mov
into
or
pop
scas
cmp
imul
mov
mov
fxch
inc
cmp
sub
iret
jae
jb
gs
out
das
and
fdivrs
bound
sbb
loop
jo
icebp
call
jns
adc
dec
push
lea
mov
mov
es
loopne
xchg
loop
cltd
mov
jns
add
sbb
sbb
fbstp
idivl
test
mov
dec
stos
sti
jnp
insl
cmc
sbb
lahf
fwait
xor
stos
gs
movsl
loopne
daa
in
dec
pop
sbb
ljmp
sub
cmc
pop
in
in
pusha
adc
push
and
inc
mov
repz
adc
xchg
pop
pop
shrb
jge
xchg
stos
fisttpl
xorb
mov
repz
ljmp
cmpsb
push
call
or
inc
jge
pop
cmp
push
inc
into
mov
and
ds
lret
push
jp
ds
mov
or
addr16
adc
out
mov
or
xor
adc
cmp
rorb
cmp
pop
sarl
je
mov
hlt
or
loop
push
sub
xchg
movsl
sbb
addl
push
hlt
scas
outsl
scas
ret
adc
push
loopne
and
enter
mov
scas
adc
std
mov
pusha
jbe
push
cmpsb
push
das
jge
sbb
enter
pusha
sub
inc
js
mov
arpl
in
push
scas
or
jae
cld
add
movsl
jecxz
int3
sub
ljmp
jl
test
or
push
pop
into
or
mov
leave
mov
mov
xchg
dec
mov
icebp
es
and
lods
imul
shll
jg
add
mov
xchg
jne
jp
mov
or
pusha
jnp
sub
adc
cltd
jmp
mov
stos
adc
or
rol
jmp
movsb
inc
in
jg
cmp
or
ret
or
arpl
push
pop
shrl
dec
or
gs
outsl
leave
push
sub
jb
jecxz
test
sbb
dec
xor
popa
icebp
push
out
ss
shrb
cmp
add
loopne
jae
mov
add
mov
push
mov
and
fwait
roll
and
or
mov
shrl
arpl
mov
aaa
iret
jno
jmp
pushf
cmp
leave
jle
and
jno
hlt
xchg
pop
xor
fidivl
push
idivb
cmp
mov
mov
push
sar
cli
xchg
push
jmp
outsb
sbb
scas
cmc
pop
xorl
and
adc
icebp
cmp
cmpsl
stc
inc
xchg
push
pop
jo
add
movsl
push
fs
in
xchg
into
stc
or
imul
mov
xchg
mov
mov
ss
adc
mov
mov
jp
gs
insb
cmp
mov
popf
dec
mov
pop
sbb
mov
loope
cltd
orl
enter
push
fcomps
pop
mov
lret
dec
push
loope
jmp
bound
lods
nop
lods
imulb
dec
stc
dec
int
call
orl
scas
std
aas
fwait
leave
ja
mov
cmp
jg
je
cmpsb
cld
cs
out
pop
pop
jne
inc
in
ret
cwtl
sti
add
pop
push
aas
and
cwtl
sub
fidivrs
scas
insb
into
mov
insb
cmp
popa
adc
jns
cmp
pop
xor
adc
xchg
mov
stc
mov
push
leave
or
push
inc
scas
ds
mov
std
adc
out
dec
push
mov
rcpps
incb
pop
lret
enter
sbb
repnz
insb
xor
mov
and
lret
mov
mov
add
in
dec
enter
adc
push
add
imul
aam
pop
jle
dec
push
lcall
js
shrb
mov
in
andb
adc
mov
mov
in
pop
push
enter
or
add
fisttpll
jnp
push
fimuls
adc
inc
insb
js
in
lahf
shrb
into
fsubrs
or
mov
shll
push
movsl
dec
dec
sbb
jle
mov
insl
mov
bswap
add
dec
inc
aam
fbstp
lods
gs
loopne
sti
jl
jnp
scas
dec
sti
xchg
scas
out
ljmp
jo
or
pop
imul
mov
sbb
adc
pusha
stc
in
lods
jno
jnp
mov
mov
sti
pop
testl
ljmp
fisubl
push
mov
in
pop
out
cmp
jmp
mov
stos
imul
jecxz
pop
xor
ret
push
add
dec
cmpsl
pop
jb
popa
cmp
cwtl
xadd
add
shlb
adc
setbe
loop
sub
cmp
inc
pushf
cmpsl
lock
mov
jge
aad
mov
xchg
sbb
xchg
pop
ret
test
adc
dec
adcl
lds
sub
es
sub
mov
sub
mov
pop
or
pop
mov
adc
aaa
in
adc
cmp
stos
cmpsl
pop
pop
pop
leave
xor
inc
dec
and
add
push
cltd
movsb
imul
aad
adc
sub
ret
lahf
lds
inc
aad
mov
dec
lea
cld
mov
in
mov
sbb
cmpsb
push
arpl
adc
push
mov
pop
aad
push
sarb
je
mov
nop
inc
jno
imull
insl
mov
push
or
xchg
pop
and
dec
mov
cmc
scas
or
in
test
cmp
and
ljmp
xchg
in
cld
mov
loope
jae
mov
inc
loopne
inc
insb
adc
fstps
mov
nop
stos
cmp
cli
pop
or
gs
test
fdivs
pop
cmp
sub
lcall
out
call
adc
and
lock
or
jmp
jmp
or
sti
lret
or
les
stos
pop
stc
xchg
aaa
cwtl
outsb
loopne
insl
scas
popfw
mov
sti
aas
mov
jno
xchg
loop
neg
lods
sbb
cmc
testb
mov
sub
pop
push
jb
imul
je
imul
nop
les
shll
stos
orl
adcb
sbb
sub
sbb
fstpl
mov
mov
movsl
lods
int
sub
add
repz
sbb
inc
jae
jne
in
jo
xor
xchg
out
push
push
mov
imul
out
sbb
mov
aad
push
popa
daa
add
jecxz
fwait
sub
std
mov
dec
lods
dec
pop
fldl
jae
add
pushl
sub
cmp
pop
cmp
push
mov
mov
stc
fimull
mov
adc
xchg
or
adc
mov
mov
jle
data16
sbb
cmp
sbb
cmp
in
dec
fdivp
xor
sbb
test
xor
rorl
mov
inc
push
cwtl
and
les
mov
int
inc
sub
pop
pop
leave
into
arpl
call
loop
jae
ret
mov
pop
js
addr16
jbe
mov
add
inc
mov
fwait
adc
sub
and
jp
jl
push
loopne
leave
mov
xchg
iret
scas
sub
add
pop
sbb
mov
cmp
int3
jnp
repnz
pop
das
sub
xchg
add
push
mov
rorb
and
sub
push
jno
call
decl
in
test
and
jge
fimull
pop
test
xlat
and
repz
push
adc
aam
hlt
lret
push
push
jle
jns
lock
mov
fimull
lret
les
mov
jno
push
sub
fs
shlb
frstor
daa
ja
adc
fsincos
dec
mov
xor
popf
mov
or
lahf
push
cmp
lods
andb
incl
jns
lock
xchg
pop
popa
adc
outsb
pop
in
sti
call
sub
mov
sub
sahf
aas
mov
rcrb
loop
xchg
mov
pushf
or
sub
stos
xchg
cmp
xchg
xor
inc
dec
sub
subb
int3
fiadds
std
add
imul
and
cli
sarb
popf
sbb
push
mov
adc
pop
cltd
pop
sbb
scas
push
test
jle
push
inc
movsb
mov
add
mov
sub
push
jbe
push
cmp
lock
or
cmpb
sub
or
jle
pop
test
and
lret
xor
cmc
mov
sub
cs
mov
xor
jge
popa
fdivrs
popf
xor
mov
aas
adc
fistl
mov
test
popf
jbe
scas
dec
cmpsl
add
sbb
insb
movsl
jmp
adc
mov
ret
iret
outsb
js
sti
cltd
stos
out
jb
xchg
pop
stc
xor
add
xchg
lods
gs
icebp
dec
cmc
arpl
les
mov
mov
nop
pop
cmc
cmp
sub
outsb
cmp
sbb
test
mov
xchg
repz
test
add
repnz
push
stos
adc
rorl
js
mov
call
test
dec
filds
sub
test
mov
aam
mov
dec
inc
adc
jg
icebp
cmp
test
arpl
lcall
ss
insb
adc
das
push
mov
ljmp
sbb
xchg
scas
mov
push
aas
add
cmpsb
mov
mov
push
pop
dec
fwait
cltd
scas
hlt
or
stos
jecxz
nop
test
imul
xor
incl
add
cli
lds
and
rorb
cmp
and
stc
jb
xor
dec
into
inc
dec
les
hlt
sbb
xor
addr16
lods
push
adc
push
sbb
lds
xlat
jno
inc
movsl
push
cmp
dec
push
fstpl
mov
or
stos
sbb
xor
pop
push
adc
mov
mov
mov
repz
sti
mov
lret
jne
int
cmp
dec
jmp
xchg
ret
sbb
filds
mov
mov
data16
mov
pusha
mov
sbb
jne
push
out
pop
sbb
arpl
pusha
cmp
jecxz
rcl
in
inc
outsl
ret
sub
ret
add
loopne
push
cld
ror
adc
or
dec
cli
jg
jg
xchg
or
mov
cmp
ljmp
mov
data16
pop
test
push
hlt
pop
in
xchg
jmp
sbb
ret
loop
or
xchg
in
cmpsb
mov
stc
lods
fwait
adc
sbb
cwtl
inc
add
sbb
xor
pop
aas
loopne
rcrl
dec
xor
ljmp
sbb
sbb
inc
ja
out
fiadds
scas
popf
lods
int
mulb
clc
xchg
les
gs
jecxz
pop
pop
jecxz
xor
subb
ret
in
mov
dec
xchg
inc
std
xor
inc
inc
movsb
scas
cld
cmp
aaa
mov
mov
mov
addr16
mov
shrb
aas
adc
inc
xchg
mov
stc
or
pop
imul
jne
daa
lret
mov
loop
rcr
nop
mov
adc
dec
das
push
int3
popa
cmp
imulw
xor
mov
jne
loop
inc
fcoms
insb
pop
repnz
xchg
not
sarl
arpl
xor
out
mov
mov
pusha
es
push
pop
jg
js
test
jmp
xor
lret
ljmp
and
jb
mov
jne
imul
pushf
xchg
outsl
sub
add
mov
jecxz
mov
mov
jns
jae
xchg
cwtl
dec
sub
loop
push
jo
push
pusha
js
repz
leave
sub
mov
mov
push
pop
movsl
fs
test
sbb
pop
test
bound
xchg
lock
mov
cmp
repnz
fstps
add
pop
jecxz
jnp
fnstenv
cmpsb
dec
lcall
inc
scas
cmp
or
in
adc
orb
jmp
fcoms
add
std
stos
in
jns
mov
mov
add
mov
push
pop
testl
pop
and
cmp
lret
nop
les
add
sbb
mov
aas
or
pop
test
dec
adc
mov
push
mov
push
cmp
movb
sub
push
rorl
test
bound
adc
int
stc
in
ja
repnz
loopne
mov
adc
loope
xor
cmp
call
icebp
pop
xor
mov
dec
mov
fwait
sbb
scas
mov
add
ficomps
xchg
sbb
loope
cmp
sar
outsl
fld
sbb
fxch
lds
jp
std
dec
addr16
push
mov
mov
pop
or
adc
imul
loop
lds
in
outsb
push
negl
clc
aas
cwtl
xchg
inc
push
add
dec
push
aaa
and
jno
icebp
test
lcall
inc
xchg
inc
repz
imul
popf
loop
out
loop
jae
ficompl
add
hlt
mov
fadd
and
cld
mov
push
test
nopl
inc
push
adc
sub
les
repnz
orb
or
push
lock
dec
pushf
daa
lcall
ret
int3
test
inc
mov
sbb
ds
loope
test
ret
sbb
outsb
mov
xchg
popf
or
fs
mov
imul
jp
xchg
imul
cld
cmpsb
lcall
jnp
mov
bound
push
and
rclb
inc
loopne
push
fcomps
xchg
adc
outsl
mov
inc
hlt
in
mov
inc
mov
sbb
sub
and
mov
addr16
lods
sti
fidivrs
sbb
pop
call
mov
pop
add
addb
in
nop
adc
loop
imul
mov
fimuls
add
xchg
mov
pop
jnp
jb
lret
lret
outsb
add
pop
loope
lcall
clc
push
lahf
ret
gs
in
xchg
pushf
jecxz
ds
inc
pop
pushf
outsb
test
push
fiaddl
xor
fwait
or
pop
sub
xchg
jae
dec
pop
pop
or
cmc
ss
std
push
sbb
lcall
and
stos
adc
push
aam
sub
mov
leave
dec
xor
mov
sti
sbb
jmp
hlt
inc
mov
jecxz
lret
jecxz
dec
das
lods
hlt
es
xchg
adc
sbb
mov
push
loopne
clc
xchg
lret
cmp
push
adc
mov
jmp
sub
sbbb
loopne
aam
adc
call
jl
push
add
movsl
xchg
mov
push
out
aas
sub
pop
out
mov
and
cmp
mov
jge
outsl
rorb
mov
add
add
arpl
pop
in
jo
xchg
popa
loope
mov
adc
mov
and
lcall
adc
fcmovnbe
lods
adc
inc
lock
jae
mov
sub
call
push
mov
das
push
push
pop
fisttpl
int
test
xor
stos
cmp
mov
dec
aad
enter
mov
iret
inc
nop
mov
or
jg
pop
lods
sti
inc
iret
repz
out
xor
fcmove
and
out
inc
inc
enter
in
js
fsubr
mov
cs
push
cs
sti
ja
push
arpl
push
mov
cmpsl
les
or
add
add
rcrl
xchg
lcall
fwait
dec
mov
imul
daa
cwtl
jne
adc
or
pop
hlt
push
push
mov
popa
inc
arpl
add
jb
lods
ja
or
dec
mov
sub
pop
mov
ss
xchg
jl
sub
inc
fidivrl
add
adc
insl
pop
flds
jge
sbb
ljmp
ljmp
and
divl
dec
lods
dec
fwait
gs
sbb
or
xlat
push
pusha
and
in
int
popf
xchg
data16
ljmp
push
pop
mov
mov
cmp
or
sarl
jne
push
icebp
sbb
sbb
inc
aaa
xor
mov
ljmp
sbb
ret
adc
addr16
inc
inc
movsb
xor
xchg
outsl
into
data16
sbb
jmp
pop
addb
sbb
xchg
daa
cld
xchg
cmp
sub
xchg
aaa
cwtl
call
jmp
xchg
push
xlat
cmp
sbb
bnd
iret
arpl
fildll
sub
sbb
adc
ret
add
push
arpl
ret
push
pop
rcr
les
cmp
sub
es
adc
mov
jne
sbb
cmp
jne
adc
out
icebp
or
and
cmp
imul
dec
loope
xor
cld
call
sbb
mov
add
jne
mov
mov
mov
cld
aam
cli
cmpsl
mov
mov
popf
clc
push
pushf
cs
cmp
in
push
adcb
inc
pop
enter
inc
test
dec
sbb
jl
lcall
lret
lods
rol
jmp
mov
subl
insb
dec
add
fmulp
and
fisubrl
stc
push
sub
sbb
push
cmc
roll
push
jae
dec
xchg
mov
insl
ljmp
ret
filds
jle
jae
test
sti
pop
inc
stc
sub
fildl
outsl
imul
inc
push
mov
in
dec
fisubrl
mov
mov
fcompl
mov
inc
stos
ja
pop
and
mov
or
scas
cmp
or
dec
pushf
test
mov
out
int3
mov
mov
inc
jg
jp
subb
fucom
add
scas
sub
mov
lcall
sub
shrd
xor
dec
lret
lods
mov
clc
notb
in
xor
out
jae
lods
xor
adc
mov
inc
mov
push
mov
popf
pop
mov
inc
mov
pop
xchg
and
pop
xchg
and
jmp
shrl
xchg
sub
xor
xchg
and
dec
add
push
inc
cmp
jns
pop
and
cmp
or
in
rorb
cwtl
add
adc
jp
fnsave
mov
movsl
add
pop
loope
int
jne
lcall
lods
popf
ds
movsb
xchg
cli
mov
mov
das
fistpl
mov
addr16
jno
sbb
inc
inc
mov
inc
sub
jg
xor
inc
push
cmp
lret
lods
movsl
addr16
xchg
int3
add
adc
dec
push
stos
popa
jbe
addr16
lea
in
adc
cs
dec
js
out
push
movsl
xor
jbe
or
js
iret
jno
sbb
insb
test
out
aas
push
out
rol
jo
test
push
inc
outsl
cli
inc
mov
xor
data16
adc
mov
jg
cmp
hlt
arpl
js
daa
lods
test
mov
out
cmp
lret
mov
mov
es
les
movsl
fwait
ja
mov
cli
mov
jp
jg
xchg
fs
sub
dec
xchg
out
std
cmp
ljmp
ds
imul
sbb
out
lret
xchg
pushf
adc
nop
mov
sbb
cwtl
shlb
rcll
divb
sbb
imul
cs
mov
sbb
sar
dec
push
cmp
xlat
ja
cmp
sub
stc
sarl
dec
mov
jnp
add
or
mov
push
dec
cli
adc
out
or
imul
sahf
stos
adc
pop
out
or
pop
rcll
test
ljmp
sbb
jmp
daa
and
sbb
jmp
adc
scas
cwtl
mov
fadd
inc
leave
in
xchg
test
xor
sub
mov
or
inc
test
popf
pushf
aad
test
push
push
rorb
loope
jmp
jmp
push
sbb
mov
xor
sbb
pop
daa
mov
push
sub
aas
cmp
jl
dec
cmp
add
and
xchg
jb
add
pop
pop
xchg
push
xor
xchg
cwtl
out
xchg
mov
lret
lds
int3
cmp
fidivrs
cmpsb
adc
not
xchg
inc
icebp
push
pop
arpl
aas
loope
push
push
sbb
sbb
xchg
test
lcall
pushl
pop
xchg
mov
mov
mov
inc
push
push
shll
push
pusha
ljmp
mov
mov
jno
cmpsl
sahf
das
xchg
jnp
mov
pop
xchg
mov
ror
hlt
ds
xor
xchg
test
cmpsb
ficoml
imul
dec
movsb
mov
mov
lret
fstl
icebp
out
mov
cmp
push
jns
adc
adc
mov
pop
cmp
incw
stos
or
sahf
jns
repz
and
inc
add
lret
mov
mov
inc
or
lods
das
push
out
mov
sarl
cmp
shr
into
roll
fstl
xlat
cmp
add
inc
roll
mov
lods
dec
pop
sbb
sbb
movsl
mov
aam
mov
daa
xchg
and
add
xchg
push
mov
es
nop
jno
call
ja
call
test
shll
pop
clc
popf
movsl
mov
clc
and
dec
xor
sbb
bound
pop
test
out
mov
xchg
loop
mull
cwtl
xchg
in
xor
sub
adc
push
mov
mov
mov
push
pop
jns
jmp
pusha
add
imul
std
out
jmp
aas
mov
mov
test
or
push
scas
arpl
inc
jge
aad
mov
mov
jnp
or
lahf
mov
xchg
mov
or
ja
shll
cmp
mov
imul
mov
ret
decl
jns
mov
pusha
push
xchg
fisttps
xor
scas
cwtl
scas
push
fsubs
adc
cmp
jno
fidivrs
mov
inc
das
adc
inc
or
and
adcb
cmc
push
pop
mov
or
dec
adc
cli
xchg
pop
out
ret
jnp
roll
add
push
sbb
cmp
add
cmp
adc
vmwrite
inc
addl
push
cmpsb
inc
lret
js
jmp
stos
addr16
cmpb
inc
add
add
pop
inc
movsl
cli
mov
jl
xchg
jmp
add
sbb
sbb
mov
jb
das
les
and
sub
adc
fldl
in
and
inc
push
mov
or
mov
sub
xor
icebp
xchg
and
and
jp
js
pop
and
addr16
inc
jmp
sbbb
in
fsubr
or
ret
decl
jl
mov
or
ret
jecxz
pop
pushf
inc
push
push
mov
jae
push
inc
aaa
push
xchg
decl
movl
fstps
add
loop
insb
iret
sar
out
sti
jno
push
push
mov
push
inc
cld
mov
mov
jg
adc
inc
add
or
popf
push
add
push
push
addb
sbb
or
subb
cwtl
mov
pop
sub
fldenv
shrl
mull
and
mov
sbbb
pop
das
enter
pop
in
or
imul
jg
jbe
lgs
adc
sub
lret
repz
insl
add
or
sbb
mov
push
pop
pop
push
push
testb
jnp
xorl
sbb
stos
cmpsl
pop
out
mov
int
es
insl
pop
cmc
sbb
xor
cmp
mov
mov
push
push
xlat
add
mov
xchg
cli
test
in
sub
sbb
pop
xchg
mov
ffreep
or
ret
fs
push
add
iret
mov
popf
add
lods
ss
iret
mov
mov
inc
sti
mov
imul
mov
aas
mov
divl
movsb
cltd
scas
cwtl
mov
cmc
pushf
lods
xor
xchg
jno
cmp
cli
roll
imul
add
jecxz
sub
jg
sbb
pop
jge
adc
test
jle
daa
idivb
pop
lds
mov
dec
add
ss
push
lret
enter
fnstsw
push
cld
call
lahf
push
jo
mov
inc
xchg
incb
in
cmp
xor
pushf
jnp
jo
lods
mov
mov
mov
hlt
jbe
mov
xchg
cmp
fcoms
jp
addr16
or
add
adc
movsl
push
or
lret
fdivrl
insl
scas
clc
push
jmp
arpl
int3
cmpsl
addr16
pushf
jno
icebp
pop
sub
iret
push
rcrb
rorb
mov
cwtl
ficompl
fistl
or
cmpsl
scas
mov
in
dec
pusha
pop
fnsave
lods
mov
sub
ja
movsl
sbb
aas
mov
and
mov
lret
call
scas
out
pop
jge
out
add
and
push
dec
mov
hlt
cltd
bound
mov
dec
ret
pusha
cmp
pop
mov
dec
pop
lods
cmc
cmp
insl
push
cmp
jne
cli
and
bnd
std
sub
xchg
imul
outsb
pop
in
push
inc
in
lcall
repz
push
push
mov
xchg
fmull
dec
in
fwait
add
mov
loop
test
sbb
outsl
jno
push
addr16
out
mov
divb
inc
jns
insb
sub
mov
pop
mov
adc
mov
mov
dec
fs
cmp
pop
dec
dec
or
or
push
sahf
insl
adc
mov
pushf
inc
jecxz
dec
shl
aam
xchg
les
pop
lds
jge
repz
or
rcrl
fnsave
push
xor
cmc
iret
mov
jmp
notb
pop
adc
orl
mov
dec
inc
fldt
mov
aaa
js,pn
outsl
notb
ret
mov
sub
sbb
jbe
pop
push
push
aam
mov
xor
js
in
incl
cmp
es
adc
ljmp
test
cs
mov
and
mov
dec
push
adc
pop
mov
sub
or
fdivl
xchg
pop
cmp
dec
lahf
fnstenv
mov
or
adc
xor
and
and
mov
inc
dec
or
aas
popf
push
aam
lods
lock
cld
xchg
les
cltd
fwait
pusha
xor
push
dec
add
and
xchg
push
out
aam
outsl
mov
lcall
jle
insb
shl
loopne
movsl
adc
push
dec
fwait
jle
mov
popaw
dec
loopne
es
xchg
repz
orl
xchg
icebp
sahf
mov
int3
mov
div
xchg
xchg
nop
mov
aam
sub
out
dec
xchg
xchg
pop
sbb
pop
fdivl
jmp
insb
fbstp
fdivs
faddl
jno
mov
sub
je
retw
movsl
dec
xchg
div
pop
add
and
xor
jl
inc
push
jle
sub
imul
repz
sbb
and
mov
mov
cld
xor
repz
or
push
lahf
mov
or
push
sar
mov
call
stos
outsb
xor
fmul
mov
cmpsb
jns
or
bound
or
fiaddl
sub
adc
mov
pop
lret
xor
iret
mov
aam
ss
sbb
incb
add
dec
sbb
lret
ljmp
xchg
push
fs
nop
mov
pop
sar
pop
ss
sub
mov
pushf
je
xchg
je
fbstp
inc
vminpd
movsb
sbb
rorl
adc
shlb
push
sti
aas
adc
cltd
or
fiadds
outsl
mov
and
xchg
paddusb
rcl
mov
aam
inc
jecxz
out
sbb
jmp
and
mov
cmp
add
mov
and
sub
mov
sub
dec
jo
mov
add
jbe
pop
gs
je
je
mov
gs
sti
sub
aas
inc
add
scas
int3
cmp
sub
mov
adc
dec
cmp
add
je
mov
popf
push
jbe
add
mov
ds
adc
lods
xor
xchg
call
mov
ja
cmp
shl
pop
inc
outsl
mov
mov
sti
hlt
scas
shl
les
xor
clc
sahf
jns
add
cmp
es
add
test
mov
mov
dec
mov
out
pushf
and
push
pop
je
leave
xchg
and
ficoms
or
ja
lds
test
inc
push
int3
pop
fstps
enter
out
call
pop
sub
jnp
cmp
xchg
es
call
mov
movsb
sub
in
sub
or
pop
sub
jbe
nop
je
aam
scas
mov
test
push
rclb
jecxz
fidivrs
loope
das
add
lahf
dec
ds
outsb
mov
pusha
lcall
std
negl
adc
or
and
inc
lcall
jne
add
aas
sbb
int
ss
mull
jnp
mov
dec
data16
mov
sub
xchg
idivl
pop
add
rcl
leave
sbb
loopne
sub
lods
cmpsb
jp
mov
xchg
xor
xor
out
mov
scas
pop
inc
mov
int3
sbb
orb
repnz
lods
cmp
popl
data16
jecxz
subl
mov
or
movsl
dec
or
xchg
hlt
fistpll
movsb
popf
outsb
sub
mov
into
cmpsb
mov
nop
mov
jbe
jle
inc
lahf
or
jo
sahf
or
aaa
andb
adc
popf
sbb
or
out
adc
out
ret
mov
cmpsb
pop
and
inc
cli
inc
cwtl
adcl
mov
imul
ret
xlat
mulb
scas
adc
inc
mov
loopne
addr16
cmp
addr16
and
and
mov
lcall
cmpsl
dec
lret
outsb
dec
jnp
int3
add
fwait
lahf
cltd
cli
rol
sub
mov
xor
dec
mov
fldenv
jl
add
fsubrl
or
cmp
pop
pop
rclb
pusha
push
lret
in
int
cli
and
cmp
insb
push
aad
pop
ret
adc
mov
rcll
test
les
les
clc
adc
stos
loopne
mov
jne
test
xor
xchg
adc
sub
xor
jno
ficoms
xchg
aad
shl
sub
mov
addr16
inc
stos
push
jns
mov
push
mov
shl
cmp
test
pop
pop
pop
insb
pop
stc
push
jae
lock
call
jbe
insb
push
or
lahf
inc
or
add
inc
jmp
mov
mov
std
and
in
stc
stos
adc
sbb
ret
add
and
sbb
sbb
fnstenv
fs
aad
push
pop
aam
jp
mov
fdivs
cmpb
sbb
shlb
int3
mov
pop
outsb
mov
sbb
insb
cld
sbb
faddl
stos
fs
xor
mov
fbstp
or
jb
xor
jecxz
cmpsl
adc
fnstenv
loop
nop
or
pop
jecxz
sub
xor
icebp
sub
loopne
icebp
je
xchg
lea
andl
mov
mov
or
mov
sub
outsb
and
gs
cmpl
les
adc
pop
inc
pop
shr
incl
fsts
gs
mov
fildll
mov
inc
dec
scas
sarl
mov
add
fs
subl
jbe
ljmp
mov
arpl
xchg
cwtl
dec
jns
pop
clc
mov
out
testb
or
and
pop
gs
sahf
jo
insl
sbb
outsb
subb
rcrl
add
cmc
fdivrs
push
xchg
movsb
out
xor
dec
jecxz
fwait
in
cmc
popf
ret
jb
mov
scas
cld
jle
mov
ja
add
clc
xchg
mov
clc
dec
shlb
push
jnp
add
add
sub
push
dec
fbstp
and
mov
mov
sahf
scas
cmpsl
mov
inc
loop
fisttpll
xchg
mov
popf
sti
in
dec
pop
bound
jecxz
mov
pop
orl
xlat
gs
or
jbe
jge
sti
fbld
cmp
aas
sarl
mov
cmp
sub
sbb
mov
mov
inc
das
jbe
cmp
jecxz
adc
daa
jl
pop
or
pop
jmp
dec
incb
loopne
add
cmp
pop
pop
push
std
and
outsb
std
xlat
dec
inc
dec
fwait
pop
pop
movsb
daa
jns
andb
jp
mov
push
inc
inc
bound
cmp
shlb
fisubs
es
sbb
push
xchg
lret
jecxz
fimuls
sub
scas
scas
popa
aad
xchg
xchg
adc
adc
fcmovnbe
lahf
push
mov
aam
int3
mov
repnz
aas
add
dec
push
adc
jmp
dec
push
jge
sub
js
fcoms
ja
mov
inc
sub
jb
test
movsl
shlb
mov
dec
mov
add
orb
cli
cmp
mov
cmp
xor
dec
scas
cmp
jnp
inc
mov
push
xor
scas
jnp
fists
pop
jge
inc
xchg
addb
jp
or
push
call
adc
jmp
inc
inc
ja
test
inc
aas
stos
rolb
mov
sub
jp
pop
imul
push
mov
call
aaa
jp
dec
mov
mov
xchg
xchg
pop
sbb
and
sbb
cs
sbb
and
enter
das
aam
outsl
mov
lcall
xor
mov
std
pop
and
push
cltd
cltd
addr16
mov
ljmp
sbb
pusha
or
lock
adc
test
out
adc
lock
cltd
aas
test
fcomip
mov
aas
pop
pop
cmpsb
adc
mov
adc
adc
dec
adc
movsb
int3
sahf
dec
addr16
and
lret
inc
loop,pn
cwtl
jbe
or
cmp
mov
loop
mov
mov
dec
push
add
repz
dec
out
loopne
sbb
xor
or
or
jns
push
xchg
lahf
ss
nop
pop
mov
inc
and
push
dec
dec
cmpb
loop
dec
cmp
repnz
fistps
ds
daa
leave
aas
test
and
xor
pop
xchg
leave
out
sbbl
bound
add
pop
sbb
fucomp
lret
jns
setge
sub
outsl
mov
or
push
in
jp
out
sub
aad
or
mov
mov
or
mov
push
rcr
xchg
int3
aaa
xorb
movsb
mov
test
mov
mov
xchg
adc
in
sub
fmull
or
cwtl
cli
sub
out
and
xrelease
mov
add
xorl
clc
push
jmp
push
push
fidivrs
dec
xor
jne
or
jmp
add
rolb
notl
mov
mov
out
jge
inc
stos
sub
dec
cmpsb
cmp
outsb
or
mov
adc
fsubr
movsl
idivl
inc
daa
ja
aaa
sbb
fisubl
out
ja
xlat
mov
mov
into
adcl
sahf
push
and
in
pop
mov
lcall
leave
mov
in
call
dec
shrl
sbb
mov
push
outsb
xchg
mov
inc
inc
jge
cli
cwtl
es
movsl
adc
lock
sub
mov
sub
pop
in
outsl
push
jbe
and
pop
xlat
in
movsl
in
cmovns
inc
outsl
and
fcoms
sbb
ficompl
shrl
push
mov
inc
cmpsl
mov
fldcw
std
test
out
test
aas
rcll
dec
aas
push
jecxz
test
push
fidivs
mov
cltd
lock
push
clc
push
pop
js
xchg
xchg
cltd
pop
cmp
into
fwait
pop
clc
arpl
jne
or
jbe
ds
aam
jo
mov
fs
add
mov
sbb
test
je
stos
mov
outsl
push
test
pop
addl
loopne
mov
int3
scas
bound
loopne
fisubrs
xchg
mov
add
xchg
pop
cmpsb
or
sbb
or
push
mov
cmp
movsl
mov
aaa
insl
xchg
sbb
jmp
sbb
pop
aam
mov
cwtl
neg
jge
mov
push
adc
push
sarl
xchg
xchg
int
jnp
popa
xlat
mov
mov
dec
enter
or
push
sub
sbb
orl
sbb
sbb
into
out
popa
incl
in
pop
jo
and
rcrb
loop
xchg
sti
xchg
and
popa
fldenv
inc
stos
mov
pop
stos
stc
jp
mov
fiaddl
pushf
enter
imul
jl
mov
sbb
xchg
popa
push
mov
sar
xchg
sbbl
dec
mov
bound
pop
jo
jge
sahf
add
mov
push
ja
std
scas
jge
ljmp
cs
adc
fldenv
adc
jp
adcl
loopne
and
jns
sbb
sbb
xor
dec
xor
push
aaa
pop
test
fcoms
movsl
test
int3
insb
fmull
mov
rorl
mov
inc
mulb
out
add
mov
in
cmp
cmc
pop
fnclex
fists
sbb
addr16
mov
insl
movb
adc
inc
push
scas
xor
cmp
push
or
lods
shlb
test
mov
jo
pop
mov
hlt
ja
dec
leave
pop
cmp
test
cltd
xlat
adc
pop
jl
cmp
loop
and
stc
adc
sub
add
sub
daa
sub
mov
jne
hlt
push
mov
push
jle
inc
icebp
setb
push
mov
push
mov
cmp
fidivl
push
mov
pop
pop
dec
icebp
cli
adcb
dec
sub
fisttps
inc
stos
pop
enter
inc
loope
rol
popa
mov
inc
lods
lret
loope
push
iret
lcall
mov
dec
cwtl
push
int
pop
movsb
xchg
xchg
sahf
add
arpl
das
xchg
iret
inc
lret
dec
jecxz,pt
shr
cs
xor
ja
jnp
lret
pop
cmp
cmp
xchg
in
pop
das
push
pop
jnp
or
mov
or
push
fucomi
movl
or
addb
orl
mov
pop
and
cmpb
mov
jno
movsb
mov
out
sbb
in
cmpsb
xchg
or
clc
mov
leave
loope
adc
lods
cli
jne
lea
jp
pop
mov
sub
scas
pop
add
pushf
pop
push
scas
mov
cmpsl
cltd
jp
clc
push
stos
test
test
cmpb
pushf
cs
fimuls
jp
cs
in
xor
jmp
clc
lea
subl
xchg
filds
push
cmp
inc
ljmp
and
jmp
jecxz
les
mov
out
xchg
mov
insl
scas
add
xor
jecxz
out
ret
mov
sbb
xor
ljmp
insl
das
pop
or
push
imul
mov
adc
sub
int3
mov
pop
scas
lahf
add
jecxz
add
cmpsl
mov
iret
shl
dec
sarb
mov
push
dec
push
sbb
dec
xchg
inc
cmp
jns
dec
lahf
out
mov
jg
cli
xchg
inc
push
rcl
mov
jge
stos
push
cltd
jmp
xchg
les
in
mov
pop
int
lock
dec
jo
leave
or
test
sti
mov
push
lahf
mov
loop
xchg
test
loope
mov
repnz
inc
push
or
push
dec
fimuls
push
jg
aas
push
ret
pop
sbb
pop
scas
cmova
lret
mov
pop
sub
rclb
xchg
test
loopne
add
mov
out
add
or
adc
xchg
or
xlat
sti
iret
mov
and
and
insb
cmp
loop
xchg
sbb
mov
mov
jo
lret
into
mov
lea
or
cmpsl
push
in
rorl
in
cmp
pusha
jo
call
hlt
pmuludq
jb
adc
inc
cltd
movsl
mov
xchg
sub
frstor
fidivrl
jp
jle
and
test
dec
mov
int3
push
jne
loope
pop
or
mov
mov
dec
adc
mov
dec
mov
jno
fwait
incl
out
sbb
cmpsb
test
push
add
mov
push
in
pop
xlat
xlat
sbb
dec
outsl
lret
mov
mov
push
es
adc
out
sub
gs
and
adc
rorb
stos
push
jae
insl
insb
mov
daa
sbb
push
mov
jge
outsl
push
sti
leave
data16
lcall
iret
sti
mov
out
mov
aaa
push
mov
push
out
and
out
out
cmp
adc
jmp
ret
rol
jmp
dec
pop
movsb
adc
inc
pushf
outsl
jae
imul
mov
pop
mov
fimuls
add
in
mov
push
sbb
in
fwait
push
dec
mov
lods
sub
mov
mov
leave
jecxz
addr16
xchg
mov
xchg
pop
inc
jne
sub
out
cmpsl
add
pop
dec
push
lods
es
dec
inc
aad
pop
push
sub
dec
sbb
pop
add
mov
add
out
outsb
xor
incb
std
adc
adc
mov
sarl
out
pop
orb
or
pop
inc
mov
inc
das
jnp
sub
and
jmp
cmc
dec
clc
loope
and
fcomps
popa
cltd
cmpsb
or
or
sub
sub
push
movsb
cmc
test
pop
cwtl
vpcmpgtw
add
ficoms
rorb
mov
jmp
cmc
sbb
pop
jmp
pusha
int3
cmp
js
lods
adc
xchg
dec
cmpb
push
xchg
pop
jne
dec
mov
add
out
xchg
das
notl
js
xchg
jg
mov
jbe
addr16
push
xor
or
loope
and
ljmp
aad
outsb
mov
jge
sar
fabs
push
pop
sub
ja
sub
lds
cmp
ret
mov
and
shlb
shl
popf
jmp
test
inc
dec
push
add
pop
inc
mov
jle
clc
xor
sub
popa
push
xchg
cltd
stos
or
daa
adc
cmp
andl
out
fisubrs
in
mov
in
sbb
andl
or
testl
mov
jg
push
push
sub
push
mov
sub
pop
sbb
mov
jle
cld
ret
sub
lods
out
insb
mov
test
dec
mov
pusha
dec
mov
fwait
hlt
push
insb
cwtl
cli
sbb
push
and
sub
xor
or
fstl
or
fdivr
lods
or
pop
mov
data16
jne
adc
les
push
and
roll
int3
popf
lds
add
add
repnz
mov
sahf
test
sub
push
mov
push
xchg
xlat
ljmp
dec
xor
jmp
inc
aad
call
outsl
movsb
out
jg
ficomps
add
dec
adcl
add
xchg
or
dec
push
inc
daa
push
adc
push
daa
xor
mov
outsb
xor
pop
lods
out
clc
movsl
push
sub
push
fsubr
sub
inc
ss
addr16
orl
rorl
adc
push
fadds
pusha
mov
call
je
or
xorb
in
mov
xor
loopne
int3
movsl
shl
mov
call
xor
adc
loop
movsb
xchg
insl
dec
aas
fldenv
xchg
cli
dec
jo
dec
lcall
sbb
shrl
out
popa
insb
leave
test
insl
sbb
cmp
movsl
pop
addr16
enter
imul
lahf
insb
lea
in
jb
arpl
dec
sub
push
jmp
test
mov
subl
clc
fnstsw
mov
ljmp
inc
popf
xchg
adc
or
push
shrb
xchg
lret
ret
int3
sub
lahf
test
mov
jnp
adc
jb
in
cli
ljmp
cli
jl
dec
push
bound
cmp
ja
mov
mov
repz
ja
pop
stos
xchg
loope
iret
int
outsl
stc
inc
shll
aad
movsb
mov
arpl
jbe
pop
out
nop
nop
mov
daa
ljmp
int
fldenv
and
out
push
mov
jne
shrb
mov
add
int3
js
popa
push
xor
ds
cmp
dec
sbb
out
push
test
mov
incl
fdivl
pop
iret
sbb
aaa
mov
ja
adc
mov
jb
xchg
add
jo
sub
shlb
ret
shr
imul
cmp
jp
fildl
pushf
std
push
fistpl
dec
imul
add
cmp
mov
aaa
jno
push
and
in
or
popa
jl
cmovbe
or
mov
jns
arpl
push
in
sub
lret
xchg
loop
daa
fimuls
mov
cld
in
fs
ds
test
shll
push
add
into
cltd
das
int3
jl
sti
imul
inc
shlb
adc
mov
add
pop
arpl
addb
dec
mov
or
daa
iret
push
jle
fcmovne
lahf
fistps
mov
js
mov
fs
add
sub
scas
push
test
inc
dec
fsubl
sbb
rcl
mov
ljmp
mov
or
data16
add
fists
iret
jno
mov
std
in
es
mov
mov
xor
sbb
dec
pop
sbb
rcr
mov
add
jo
sub
repnz
add
pop
dec
movsb
inc
jmp
test
ja
pushf
mov
adc
data16
inc
jnp
rcl
hlt
data16
mov
jb
cmp
dec
mov
andl
xlat
lock
xchg
aas
and
mov
iret
sub
imulb
inc
dec
push
pop
sub
inc
mov
out
std
adc
jge
mov
xchg
movsb
push
lret
pop
cmpsb
xlat
mov
fdivl
sbb
or
mov
insb
rcrb
inc
jae
or
jecxz
test
lahf
cmp
mov
push
xchg
arpl
lods
insb
sbbl
in
out
add
das
addr16
fs
xchg
shrb
xor
nop
sub
movsb
mov
test
sub
les
pop
outsl
pop
adc
sub
cmp
xchg
fdivrl
sahf
adc
mov
out
pop
insb
out
and
pop
dec
xchg
add
rcll
stc
push
aam
push
mov
push
repnz
mov
add
imul
ss
push
cmp
mov
add
adc
mov
mov
mov
push
ljmp
mov
jl
cmp
push
dec
in
mov
jmp
pushl
sbb
test
inc
push
push
out
sbb
scas
adc
jmp
iret
jmp
aad
jmp
in
lret
jae
cmc
and
leave
and
cmp
pop
sub
cmp
jl
out
lcall
cmpsl
cs
cmp
cwtl
and
fnstenv
xchg
pop
pop
sahf
or
inc
push
aas
adc
push
sbb
or
mov
sub
js
sub
iret
xchg
push
jb
adc
mov
pop
dec
out
jp
dec
xchg
popf
inc
sub
xorl
nop
adc
adc
jno
in
jp
bound
inc
orl
cmp
cld
cmp
and
jp
wbinvd
push
data16
sti
push
adc
inc
mov
pop
xor
xchg
mov
insl
mov
addb
push
xor
sub
imul
and
sub
add
jno
in
repz
mov
fstpt
mov
push
cmp
dec
cwtl
aas
ja
ja
fisttpl
sbb
push
lret
dec
mov
stos
lods
xchg
mov
push
adc
or
add
jecxz
test
jmp
mov
push
mov
int
fcmovne
xchg
outsb
or
dec
cmp
in
pop
popf
ret
je
mov
sbb
sub
xor
inc
xor
inc
xlat
mov
mov
and
pop
arpl
and
icebp
lea
fwait
je
dec
cmp
lea
neg
insl
fwait
add
inc
adc
xchg
inc
dec
cmpsl
sbb
icebp
push
add
dec
daa
push
xchg
or
mov
into
sub
mov
dec
adc
in
mov
lahf
sbb
test
sub
and
or
into
int
add
andl
mov
fisttpll
lods
jmp
ret
les
lock
in
jmp
cwtl
sbb
mov
adc
lds
and
fldenv
sbb
xor
mov
adc
pusha
cmp
out
mov
and
add
push
fcom
notb
pop
and
mov
fldenv
je
mov
add
mov
mov
das
movsl
jns
div
shrb
sahf
mov
clc
sbbb
sub
or
jmp
push
inc
jle
ja
adcl
test
jns
xchg
movsl
push
pop
xchg
es
mov
mov
daa
xorl
inc
mov
addr16
mov
jo
aas
mov
inc
adc
sbb
loop
imul
inc
jnp
adc
les
or
mov
cmp
jnp
jb
movsb
adc
mov
inc
clc
repz
roll
dec
pop
and
cs
mov
xor
fldcw
call
pop
test
lods
lods
inc
xchg
stos
dec
fstl
cli
cmp
scas
mov
ret
jns
fwait
loopne
sbb
rclb
mov
mov
mov
sub
movsl
lret
inc
xchg
mov
leave
pop
pop
aad
sbb
test
xor
or
ds
mov
cmp
adc
jnp
inc
lret
fsubs
iret
testb
xchg
in
jne
das
adc
data16
lods
bound
xor
sub
icebp
jmp
push
jo
lods
into
outsb
sbb
add
sti
rorl
sbb
jae
bound
mov
or
xchg
push
insl
testl
push
sub
rclb
inc
andb
icebp
adc
mov
adc
movsb
bound
mov
ret
flds
push
inc
and
test
adc
and
adc
sbb
dec
filds
push
gs
cld
shll
xchg
cmp
dec
push
ret
add
ret
push
iret
negb
pop
or
aas
pop
lods
or
pop
add
loop
fmul
cmp
pushf
inc
sub
notb
cmc
cmp
imul
repz
aas
pop
and
imul
mov
pop
or
ja
lods
clc
pop
adc
mov
scas
jle
jp
mov
in
fmull
into
sub
notb
psubsw
and
fidivrs
mov
neg
xlat
orl
std
cmp
or
xchg
lahf
cmp
push
pusha
movsl
mov
or
mov
sbb
push
andb
push
sub
adc
stos
sub
shll
lock
dec
xchg
loop
jns
rcr
sbb
ss
mov
int
cmp
mov
inc
or
inc
cli
push
sahf
daa
adc
or
std
fucomip
ret
shr
sbb
cltd
adc
mov
xchg
push
push
xchg
lcall
jns
jl
cmp
dec
pop
mov
sbb
mov
jne
popf
imul
push
adc
fisubl
enter
inc
xchg
push
inc
or
adc
adc
add
pushf
imul
push
test
lods
adc
adc
cmp
stos
fstl
test
add
sbb
mov
lods
nop
sahf
mov
out
outsb
xchg
mov
mov
cmp
push
cli
cmp
sbb
dec
je
sub
mov
ret
in
dec
mov
xchg
insb
xchg
adc
enter
out
sbb
subl
jecxz
mov
xchg
fwait
adc
int
inc
cmp
aam
mov
mov
jbe
cmp
shrb
sub
cmp
pop
test
mov
and
shlb
add
mov
test
add
stos
dec
insb
cld
das
cwtl
dec
pop
scas
lods
dec
fs
xorl
dec
and
or
stos
and
mov
and
push
pusha
call
pushf
xchg
in
mov
pop
cs
leave
cmp
outsl
rcll
out
jecxz
loope
sbb
cmpsl
jmp
pop
jge
inc
jg
jg
pusha
or
push
push
xchg
xchg
add
mov
adc
sbb
cwtl
aad
pusha
adc
test
stos
inc
pusha
lret
test
pop
dec
and
icebp
sub
mov
adc
sbb
xor
out
inc
sub
in
rcrb
or
imul
jg
push
xor
das
xchg
out
xchg
mov
outsl
inc
ret
mov
or
lods
lret
jbe
mov
addl
inc
sbb
fs
ja
push
pop
inc
xor
test
dec
jecxz
mov
or
orb
adc
out
test
mov
xchg
inc
and
jp
lret
push
call
xor
cmc
add
pop
and
push
or
mov
dec
bound
xchg
inc
inc
stos
add
sub
mov
mov
cs
sbb
pop
cwtl
or
add
cmc
arpl
je
add
insb
pop
mov
cltd
xchg
dec
ljmp
cmpsb
sub
add
movsl
fiaddl
dec
xor
rclb
mov
fisttpll
aaa
lret
out
inc
xchg
ljmp
cs
outsl
pop
iret
sbb
idivl
pop
dec
outsl
shrl
icebp
aaa
addr16
stos
stos
push
mov
and
and
add
adc
imulb
scas
icebp
sbb
add
adc
jmp
mov
sub
xchg
mov
sahf
push
notb
xchg
fbld
lahf
scas
out
mov
ja
insb
aaa
test
jmp
mov
xor
cmp
mov
push
iret
mov
sub
stc
inc
jp
movsb
pop
lods
adc
cmp
mov
mov
je
in
mov
mov
nop
or
ds
ror
jle
enter
shlb
outsb
push
sub
xchg
ss
inc
mov
pslld
inc
mov
sbb
or
mov
and
or
cmc
cltd
insb
jle
rol
add
xchg
push
lret
jnp
dec
xchg
push
xchg
mov
ret
outsl
imul
lret
xchg
stc
pop
mov
dec
idivb
jge
int
icebp
sub
out
or
lods
jge
daa
or
jnp
scas
inc
cmp
mov
sub
xchg
dec
icebp
and
shlb
loop
adc
pop
add
adc
dec
mov
in
inc
or
sti
insb
add
mov
shlb
and
jmp
adc
lods
cltd
cli
outsl
mov
shl
dec
loopne
movsl
aas
jg
andb
sub
jecxz
mov
popa
js
in
rorl
cld
push
ret
xchg
push
add
xor
mov
jmp
imul
fistpll
jno
jnp
xchg
jge
loope
pop
into
decb
out
jo
arpl
in
test
push
out
mov
and
push
cmp
jb
jle
pop
xor
loop
in
stos
loop
xchg
push
rolb
xchg
xchg
notl
push
jnp
sub
and
jbe
add
xchg
or
andl
pop
jle
jmp
stc
lods
or
stos
in
xchg
push
fwait
push
data16
dec
sub
sub
push
enter
xor
sub
xlat
je
mov
rolb
sahf
inc
pop
adc
mov
aad
fcoms
mov
sbb
mov
pusha
call
jmp
pop
pusha
dec
mov
mov
pop
ret
lods
test
sub
jne
dec
incl
orb
aaa
cmp
mov
nop
shl
jbe
popa
aad
sub
imul
dec
stos
or
push
notb
mov
xchg
les
xchg
mov
cmc
cmp
pop
rcll
stc
test
lcall
inc
jecxz
loope
or
out
jge
dec
push
ret
popa
test
dec
stc
filds
sub
xchg
out
sbb
jns
dec
lods
loop
leave
and
out
loopne
sahf
fs
mov
cmp
adc
loopne
in
xchg
or
cld
add
push
aad
dec
mov
xchg
sbb
jbe
jo
inc
add
pop
repnz
jnp
call
jg
lock
jb
push
push
je
or
xor
and
mov
test
jo
shlb
out
fimuls
call
mov
pop
xor
les
ss
xchg
adc
pop
shrl
dec
mov
and
adc
inc
ljmp
and
in
dec
mov
scas
insb
andb
dec
aas
mov
fldt
fnsave
fadds
jge
in
mov
adc
add
adc
cmp
and
mov
out
inc
mov
pop
lret
dec
push
and
mov
cwtl
rep
cs
push
aaa
jno
cmp
popa
addr16
pop
test
mov
cmc
hlt
or
call
or
add
movsl
dec
and
jo
leave
xchg
fdivrs
pop
pop
roll
cs
in
shl
mov
mov
ss
xchg
pop
pop
and
je
lcall
loope
and
pushf
mov
or
ja
dec
add
and
sub
push
in
sets
inc
test
adc
popf
add
add
sarb
loopne
jns
sti
rorl
inc
test
jno
out
lret
sbb
or
dec
push
sbb
adc
scas
xor
aaa
lret
pop
daa
ficoms
rorl
adc
sti
lods
insl
inc
add
pop
push
insb
clc
ror
lret
incl
sub
repnz
add
addr16
inc
enter
arpl
insb
popa
daa
in
pop
add
pop
sub
pop
mov
cltd
addr16
mov
orb
in
and
fistpll
pop
out
xchg
sub
inc
xchg
sub
aaa
and
repz
mov
sbb
lret
cld
mov
jmp
and
cmp
and
test
ret
or
xor
mov
shrl
inc
icebp
decb
arpl
imul
repnz
adc
fistps
testl
es
iret
fwait
adc
loopne
mov
push
push
xchg
adc
lea
inc
cmp
jns
inc
mov
js
mov
mov
mov
nop
push
lret
xchg
mov
cmp
xchg
and
iret
and
clc
jo
pop
xor
sbb
mov
cmpsl
pop
lock
mov
push
fistpl
pushf
in
or
or
imull
sub
adc
push
cmc
hlt
out
adcb
ret
add
pop
xchg
mov
insl
inc
sub
jge
xor
push
in
or
pop
lret
es
ja
stos
cltd
push
mov
ljmp
imul
into
out
xchg
inc
inc
push
mov
push
pop
rcrl
cmp
shlb
lret
sbb
jae
cmp
jns
dec
xchg
in
scas
xor
div
add
ret
loopne
pushf
push
movsl
or
xchg
add
addr16
jno
dec
rclb
je
add
sub
inc
andl
lods
sub
mov
js
inc
sbb
lock
in
stos
js
sbb
pop
scas
sbb
outsl
push
movsl
insl
dec
sub
sbb
jp
ret
lds
or
cltd
clc
sbb
dec
dec
add
sub
xchg
cmp
adc
or
dec
out
fadds
push
fisubl
jmp
push
jnp
js
dec
test
lret
mov
js
cmp
ljmp
add
cmp
xor
pop
outsb
jnp
sahf
flds
sarl
into
fldt
mov
stc
rcl
pushf
sub
out
xor
shrl
stos
faddp
data16
stos
add
fwait
cmpsb
mov
stc
int3
stos
sbb
subl
sub
sbb
mov
repz
lcall
in
outsl
jge
lret
adc
pusha
lahf
setl
fcomps
adc
inc
mov
movsl
lcall
mov
std
mov
mov
add
dec
ds
ljmp
push
int3
mov
mov
into
js
shrl
jnp
and
add
jns
jnp
sarb
and
ja
out
xor
in
fildll
add
sbb
lret
mov
lahf
pop
xchg
in
inc
add
rcr
loopne
mov
xchg
push
je
leave
sub
or
inc
fsubrs
enter
jmp
sbb
data16
hlt
mov
inc
int
jbe
jg
dec
popf
pop
pop
lds
imul
push
pop
cli
clc
imull
push
xlat
repnz
gs
ds
mov
clc
adc
push
shll
ficomps
orl
xchg
push
icebp
subl
scas
add
push
mov
mov
jo
xchg
pop
cltd
fincstp
imul
xchg
dec
mov
jne
sbb
inc
jl
push
daa
fsts
mov
cltd
out
ret
pop
lret
inc
xchg
shl
loope
out
pop
pop
cmc
das
in
aad
sub
pmulhw
pop
popa
xchg
add
je
iret
nop
xor
pop
fwait
rcl
loop
fidivs
pop
out
loope
popa
inc
cs
lea
test
jecxz
push
stos
mov
pop
aad
out
xchg
cmp
cmp
cld
add
divb
mov
cmp
sbb
in
add
xchg
and
or
jmp
sbb
bound
mov
mov
push
pop
cmp
xchg
sub
jle
mov
and
sbb
scas
int
pop
mov
pop
adc
mov
sahf
aaa
add
loopne
inc
or
or
fisubrl
insb
sti
les
push
dec
mov
mov
test
imul
jge
ret
jb
out
cmp
mov
dec
loop
in
inc
mov
aad
testb
fbstp
test
jge
xlat
mov
das
imul
adc
cltd
insl
rolb
iret
aaa
add
mov
aam
daa
mov
push
into
pusha
pop
push
xchg
dec
xchg
subl
or
pop
xlat
fidivrl
insl
scas
addb
jecxz
xchg
cmp
jg
lods
cmp
sub
popa
lret
sbb
xchg
mov
xchg
mov
xchg
lds
les
push
xchg
mov
dec
pop
fnstcw
push
push
fsub
adc
shlb
test
sahf
dec
mov
pop
jo
jo
test
loopne
mul
xchg
shrl
inc
or
push
lret
incb
or
ret
and
and
in
in
xor
pop
je
push
inc
mov
fmull
int
cltd
xor
addr16
push
outsl
mov
out
ret
addl
shrl
popf
ds
clc
mov
mov
mov
push
mov
outsb
test
jl
cmp
inc
mov
sarl
or
loopne
movsb
cli
cmp
push
filds
stc
adc
ret
and
pop
daa
jae
push
outsl
push
xchg
mov
xchg
mov
int
scas
lods
dec
and
xor
lahf
xor
xchg
in
jo
push
mov
jno
sahf
mov
jle
mov
mov
icebp
mov
add
and
inc
mov
sub
and
in
cld
sti
scas
cli
jge
mov
lret
mov
cmc
inc
inc
adc
mov
jb
pop
negb
push
dec
imul
mov
dec
jge
jge
mov
push
andl
jg
sbb
jecxz
daa
lret
aaa
cli
mov
ret
mov
xchg
dec
mov
clc
rolb
jge
mov
popf
in
cmc
loop
xchg
lea
jbe
bound
dec
jo
jle
sbb
inc
cmp
frstor
sub
js
fnstcw
sbb
sub
inc
inc
sub
adc
sub
sbb
push
mov
js
push
into
mov
imul
out
stos
sbb
mov
fs
and
stos
testl
and
mov
movsb
add
jmp
add
sub
out
enter
sahf
sbb
push
cld
test
mov
aam
xchg
pop
pop
stos
les
out
adc
fsubrp
shl
dec
shrb
xchg
add
xchg
xor
loop
das
adc
mov
loopne
loopne
mov
xor
or
movsb
fidivl
cmc
or
pop
pop
shl
lds
pop
push
dec
xor
das
jle
xchg
push
jge
push
pop
sub
mov
pop
aas
xor
fstpt
ja
test
xchg
ljmp
test
add
mov
addr16
sti
insb
fs
mov
js
insb
call
jno
mov
push
mov
ret
jp
jno
mov
pop
repz
dec
dec
inc
or
movsl
outsl
and
int
dec
inc
xor
push
dec
mov
adc
pop
dec
mov
add
fisttpl
cmp
jns
mov
in
cs
les
jbe
sbbl
clc
pop
push
stc
icebp
add
push
sub
jbe
sti
nop
rclb
cli
leave
ret
out
es
sbb
sub
shl
ljmp
pushf
inc
in
lret
andb
xchg
sahf
pop
addl
movsb
add
stc
add
pop
cmp
arpl
ljmp
popf
mov
arpl
stos
dec
test
pop
fisubrl
mov
mov
loopne
xchg
mov
xor
lret
pop
mov
pusha
insb
push
or
pop
ljmp
mov
mov
dec
fwait
adc
aas
or
or
movsb
adc
mov
es
lock
mov
jecxz
popa
adc
adcl
stos
daa
out
xchg
or
mov
ljmp
call
out
push
movsl
pushf
js
outsb
sbbb
mov
jbe
sbb
push
push
cmpsl
jb
push
out
das
dec
aaa
cmp
loopne
popf
out
aaa
ss
int3
sbb
aad
popf
cltd
dec
das
mov
jo
push
inc
outsl
pushf
dec
scas
rcll
insb
pop
mov
adc
cmp
jae
icebp
addl
repz
bound
adc
adc
call
pushf
xor
dec
rcl
sbb
stos
mov
mov
jno
jg
sbb
push
in
movsb
xor
inc
cs
lea
mov
add
xor
cli
fisubl
ds
push
lods
out
daa
imul
cltd
aaa
cltd
mov
sbbl
in
sbb
inc
xor
mov
lock
cmc
push
sbb
stos
mov
sbb
add
mov
push
mov
or
ss
inc
in
ffreep
and
mov
push
aam
push
mov
push
mov
mov
pop
in
dec
ja
dec
insl
repz
sub
addr16
sbb
cmp
jle
int3
xor
jmp
mov
and
xor
xorb
loope
mov
test
std
jl
mov
jbe
les
jns
stc
xor
jp
sbb
cmp
mov
bound
xor
sbbl
and
inc
idivl
adc
stos
lods
pusha
sub
or
and
je
cwtl
addl
jmp
aam
lock
sbb
sub
jno
cmp
and
cmp
repnz
fidivrl
inc
ret
fsubrs
out
out
cld
jns
test
sbb
add
pushf
jno
test
mov
jle
dec
mov
pop
push
int3
jne
cmp
jnp
xor
adc
push
inc
lods
mov
lret
int3
fwait
insl
xchg
push
and
mov
push
sbb
repz
je
bound
push
cld
movsb
or
cmpsb
enter
dec
xchg
cmp
push
add
push
pop
cltd
mulb
cmp
and
dec
cmp
jp
cltd
js
cmp
or
shll
icebp
fldcw
into
add
add
jb,pt
xor
das
popa
cmc
mov
cltd
dec
pop
in
pusha
in
jno
and
cli
xor
jle
cmp
mov
rolb
sbb
xor
fcompp
std
fstp
pop
mov
in
push
in
sahf
faddl
sub
and
jl
push
push
mov
pop
shlb
push
out
add
popf
jg
jle
sti
pop
mov
in
sub
jmp
mov
mul
xor
or
push
in
fdivs
add
mov
and
test
and
push
call
sub
xor
inc
adc
cmpsb
shrb
sahf
ljmp
mov
loopne
jb
xlat
jo
pop
cmpsb
inc
test
inc
inc
sub
inc
loop
stos
adc
mov
outsb
gs
ret
ds
cwtl
sbbb
sbb
fs
sub
xor
movb
xchg
or
lcall
repnz
add
dec
lret
neg
cs
or
data16
add
or
pop
mov
jb
or
dec
les
push
adc
dec
dec
int
inc
fwait
loop
xorl
mov
cmp
data16
sub
pop
and
mov
lcall
inc
sbb
enter
lods
push
push
xor
cltd
jnp
lods
jae
pushl
cltd
or
mov
cmpsl
outsb
andb
hlt
sub
add
jge
push
ss
add
sbb
pop
cmpsl
adc
inc
push
mov
int3
or
jae
lds
cld
stc
mov
dec
add
test
pop
movsl
aas
cmc
test
idivb
pop
jmp
sbb
adc
jl
mov
and
cmc
fcomi
push
jnp
std
or
jle
js
push
jecxz
inc
pop
jmp
subb
and
test
subl
jo
inc
adc
test
mov
lods
sub
xor
dec
sbb
adc
enter
inc
cs
loopne
es
xchg
cmpb
jmp
std
pop
jo
rorb
add
jno
cltd
arpl
sbb
or
cli
xchg
mov
sub
cmc
cmp
pop
sahf
stos
out
mov
mov
ds
stos
add
repnz
sub
and
dec
jmp
jge
in
sub
xorl
push
aam
push
cld
iret
mov
add
enter
in
xchg
mov
mov
or
and
xchg
push
mov
js
pop
fcoms
pop
lods
cmp
dec
inc
dec
sbb
sahf
lahf
sub
xor
scas
pop
xlat
mov
xchg
stos
in
repnz
xchg
mov
sbb
and
sub
dec
mov
xchg
subl
jb
cmp
push
add
jmp
jbe
stos
cmpsb
lock
arpl
and
nop
jecxz
js
mov
sub
dec
sub
das
xchg
mov
inc
mov
mov
inc
xor
ss
outsb
jb
ret
mov
jl
jno
lock
push
pusha
push
adc
pop
bound
or
mov
mov
incl
aad
mov
add
js
mov
cmp
std
jl
or
mov
adc
cmp
mov
mov
js
adc
pushf
mov
sahf
mov
xlat
fucomi
pop
or
hlt
out
jl
jecxz
xor
sub
mov
in
mov
test
sbb
mov
and
in
and
xchg
dec
xorl
pop
cmp
ja
out
ss
sub
dec
decb
xchg
sarl
sbb
rclb
adcl
out
or
movq
cmp
cmp
sub
cmp
mov
adc
cs
out
pop
inc
add
inc
pop
add
push
mov
arpl
jno
pusha
addb
jecxz
inc
push
ss
adc
xchg
clc
sub
dec
xor
pushf
dec
test
xlat
push
mov
mov
int3
hlt
test
es
cmpsl
outsb
lret
jg
mov
fdivrs
sti
jae
mov
das
pop
xchg
mov
daa
test
mov
mov
aam
dec
sbb
lret
movsl
shll
iret
icebp
add
imul
rolb
jl
cmpl
add
xchg
sbb
xchg
mov
movsl
xchg
std
jl
jns
add
xchg
int
sbb
out
int3
sbbl
iret
repnz
push
mov
mov
mov
lods
fisubrs
or
ss
fildl
pop
out
shr
rorb
lret
fsubr
fimuls
lret
and
mov
cmp
xchg
scas
mov
je
adc
push
out
jecxz
xor
ljmp
stc
subb
sarb
pop
outsl
inc
hlt
fcoml
js
out
or
fucom
dec
ret
aaa
mov
cs
dec
xchg
jnp
das
jp
mov
sub
or
leave
andnps
test
add
mov
cmpsl
ds
mov
divb
adc
push
xor
adcl
mov
xor
sti
into
pop
pop
pop
daa
jg
dec
push
push
add
and
scas
popf
test
imul
ret
lcall
mov
add
sbb
out
push
je
sub
outsl
xchg
mov
addr16
cmp
dec
and
loope
daa
popf
sahf
xchg
add
mov
cmp
jecxz
fidivrl
cmp
mov
xor
in
int3
fldenv
jg
out
mov
cmpsl
add
popf
es
cmp
mov
jg
stc
sub
dec
inc
mov
scas
cmp
movsb
adc
test
repz
or
push
int3
adc
cmp
push
add
xor
xchg
fisttps
add
and
dec
cltd
push
rol
in
mov
mov
lret
fcmovb
inc
aaa
sub
orb
mov
cmp
sub
adc
jl
bound
daa
sub
lret
fidivrs
mov
fsts
sarl
daa
out
xchg
adc
mov
pop
pop
stos
jo
test
xchg
scas
inc
xor
push
pop
mov
lahf
sbb
cli
inc
cmp
mov
jg
xchg
adc
insl
scas
pop
popw
adc
mov
mov
movsl
pop
mov
mov
mov
jl
test
and
shrl
daa
xlat
push
fistpll
dec
lcall
adcb
jno
jne
mov
jp
xchg
cmp
mov
jae
icebp
adc
addb
jl
fildl
roll
mov
xchg
sub
lret
imul
aas
mov
sbb
iret
pop
mov
add
imul
lcall
cltd
push
call
cmp
pusha
ficomps
add
std
fsubrs
rorl
dec
sbb
jmp
into
mov
add
dec
inc
sti
in
xchg
das
in
inc
jmp
add
insb
inc
cmp
roll
data16
scas
sub
and
js
xchg
loope
xchg
ret
in
push
jo
jb
scas
cmc
orl
xchg
add
pop
call
dec
xchg
mov
jb
or
repz
outsb
mov
jmp
xchg
adc
adc
aaa
adc
int
sbb
cwtl
xlat
xor
mov
push
cmp
jae
mov
sub
pop
ljmp
inc
mov
je
bound
mov
lock
mov
add
ja
fsts
inc
cmp
inc
mov
jns
add
lods
xchg
ss
mov
add
jp
divb
gs
cs
xchg
cld
add
rorb
idiv
icebp
push
sub
fidivrl
mov
aam
shrb
mov
add
mov
jo
cwtl
fucomi
cmpsb
call
imul
sub
pop
cmp
xchg
pop
dec
jg
xor
cltd
jle
sbb
cmp
jmp
push
adc
pop
mov
mov
adc
shlb
dec
in
les
inc
jge
add
jns
fdivs
insl
cmpsl
ds
adc
fisubrl
shrb
loop
leave
cmp
setp
inc
jecxz
xor
xlat
ficoms
cmp
cmp
or
and
cmp
cmpsl
inc
and
out
cld
sti
dec
lret
outsl
in
mov
jle
pusha
cmp
js
aam
sbb
or
fmull
xor
les
sahf
inc
jo
fsts
cs
stos
dec
into
call
and
jns
fcomps
js
sbbb
xor
arpl
stos
inc
dec
mov
sub
pop
jns
lret
mov
jae
mov
test
iret
pop
pop
adc
fnstsw
and
or
cmp
adc
subl
mov
inc
xor
pop
mov
cli
push
xchg
jge
jmp
xchg
cld
adcb
cmp
jne
inc
rorl
mov
fildl
and
lahf
bndstx
mov
ss
fmull
les
inc
inc
cmc
test
sbb
jo
lahf
mov
xchg
xchg
scas
jl
test
add
inc
lret
fdivrl
int3
adc
mov
repnz
inc
rclb
arpl
int
push
pop
aas
out
out
gs
into
sbb
push
shlb
xor
adc
push
dec
jae
and
and
sbb
xor
out
aas
call
int
das
ss
int3
repz
es
jo
lahf
jle
lcall
dec
sbb
mov
inc
out
push
pop
push
test
adc
enter
xchg
lock
in
xor
mov
mov
pop
xchg
enter
lret
ljmp
dec
out
cmpsl
mov
or
mov
adc
push
jmp
sbb
popf
mov
inc
movsb
and
mov
adc
mov
mov
cltd
cmpsb
cmpsl
ds
iret
mov
jle
mov
mov
shrb
sbb
sbb
sub
xor
loopne
sahf
jo
dec
inc
and
movsl
jge
outsb
ja
cmp
iret
dec
pop
dec
sub
mull
mov
addr16
shlb
push
add
lret
cmpsl
jns
xchg
outsb
gs
inc
cmovns
mov
fwait
sub
add
adc
fnsave
lds
inc
cmp
jg
data16
int
or
inc
mov
mov
sub
mov
xchg
or
xchg
or
scas
shr
and
xchg
ror
hlt
out
push
popa
fsts
aam
mov
movsb
stos
aam
ds
out
sbb
sbb
ljmp
dec
gs
lret
ret
sbbl
lret
or
fiadds
pop
add
cmp
push
add
sbb
xchg
aam
mov
inc
testl
inc
sub
adc
adc
aas
iret
adc
mov
jnp
or
lock
push
mov
scas
inc
push
out
lret
mov
out
sbb
leave
mov
mov
cs
push
mov
xor
mov
lret
xor
inc
mov
stos
mov
add
sub
into
pop
aam
mov
dec
stc
hlt
hlt
xor
nop
push
movsb
cmc
lcall
push
jno
sub
out
adcb
dec
int3
gs
push
jae
les
pop
pushf
push
and
jp
cmpsb
sub
pop
sbb
inc
jno
cmpsl
add
repnz
xchg
ljmp
mov
mov
inc
shlb
inc
pop
xchg
and
adc
out
xchg
cmc
fcomps
mov
adc
sub
mov
push
out
pop
lds
inc
testb
and
xchg
add
add
js
mov
cwtl
repnz
sahf
test
ds
mov
add
mov
fs
je
jns
dec
sub
or
add
js
jmp
xchg
mov
out
shrb
iret
and
in
dec
mov
dec
xchg
leave
data16
and
scas
jle
push
cmc
xlat
das
outsl
ret
dec
push
aaa
dec
sarl
hlt
je
addl
fstpt
sbb
dec
ficompl
xorl
fistpll
enter
and
xorb
jnp
cmp
pop
out
sbbb
test
mov
shrl
cmp
inc
sti
in
mov
addr16
jb
and
movsb
sbb
hlt
jle
repz
jae
aas
sub
or
mov
cmp
xor
fsts
mov
lock
scas
adc
jbe
mov
jnp
and
mov
loopne
dec
jl
sub
sub
aad
ds
xchg
shl
ljmp
idivl
cmpsl
sub
jno
inc
dec
scas
fcom
ja
xchg
pushf
xchg
xlat
xor
jmp
rcll
addr16
jp
scas
or
fisubl
and
inc
xchg
jp
or
mov
aas
outsl
or
cmpsb
fnstsw
mov
in
iret
insb
lods
cld
in
inc
addr16
mov
pop
insl
or
sarb
pop
ret
and
or
test
pop
push
cmp
jp
sbbl
push
iret
insb
adc
dec
xchg
sub
out
fisttpl
and
orb
nop
add
pop
leave
pop
sub
pusha
xorb
rcrb
push
sbb
dec
push
xchg
mov
outsb
out
cmp
insb
ds
fmull
addr16
aaa
xchg
lds
pop
sub
push
std
sbb
cwtl
mov
cld
lcall
ja
jmp
xor
adc
sbb
sbb
arpl
aas
add
arpl
adc
rcrl
push
mov
inc
imul
pop
lret
fdiv
gs
fucomip
xor
ds
insl
push
adc
sbb
pop
jb
adc
xor
out
test
inc
cld
xchg
bound
fldenv
or
into
sub
mov
adc
inc
cmpl
sbb
das
and
mov
add
xchg
push
push
xchg
test
mov
sbb
test
sbb
cli
cmp
test
pop
adc
in
or
aad
xchg
jmp
sub
add
sbbb
pop
inc
iret
push
outsl
sub
xor
xchg
mov
and
arpl
loopne
mov
dec
out
sub
inc
lcall
cmpsl
mov
ds
dec
pop
pop
out
cmp
mov
inc
push
push
lds
push
test
dec
push
xchg
mov
jmp
push
movsl
lahf
rcr
push
sbb
inc
push
mov
jo
or
adc
jge
or
inc
aad
sub
cmp
fisubl
xor
pushf
xor
push
adc
std
repnz
dec
adc
lahf
out
into
push
ds
loope
movsb
mov
iret
nop
cmc
ljmp
int3
sti
negl
fmull
sub
dec
ret
or
xor
push
push
fiaddl
pushf
daa
sub
daa
xor
shrl
push
ret
sbb
add
or
stc
ret
sti
add
xor
aam
jmp
int
or
clc
jae
notb
lds
add
les
aad
cmp
stos
dec
and
scas
jno
sbb
je
int
sarb
out
lods
inc
ja
add
cmp
jbe
mov
fnsave
push
ret
jg
dec
out
je
pop
sub
or
add
icebp
mov
test
push
cmp
les
test
insb
or
mov
gs
xor
or
outsl
inc
cmpsl
sbb
dec
inc
jmp
je
dec
insl
mov
cmc
push
push
sub
arpl
les
fisubs
sarl
pop
adc
pop
mov
xor
jp
xor
cmp
cmc
insb
in
dec
fdivs
push
mov
jnp
xchg
std
push
jmp
out
xchg
jp
pop
jecxz
cmp
stc
gs
push
adc
xor
adc
mov
aaa
and
or
fildll
push
mov
pop
fbld
jne
pop
loopne
adc
jbe
cmp
fbstp
and
xchg
or
push
pop
cltd
icebp
sbb
rclb
nop
adc
jbe
divl
roll
fcoml
adc
callw
push
mov
in
or
lret
or
imul
pop
xchg
adc
add
or
jecxz
dec
cld
nop
inc
ss
mov
lods
sub
push
inc
mov
cmc
xlat
xor
out
jp
idivb
dec
sub
test
enter
xor
cli
test
es
mov
sbb
cmpsb
sub
call
pop
push
pop
popf
stos
clc
clc
fisttpll
push
push
jae
inc
jns
pop
outsl
pusha
add
lock
std
fstps
loopne
daa
mov
mov
jo
adc
fsubs
int
mov
jne
xor
or
enter
add
setnp
aad
add
and
add
and
xchg
rorl
inc
fiaddl
xorl
jge
cmc
add
and
mov
mov
push
jecxz
dec
mov
aam
insl
cmpsb
sahf
sub
push
xor
push
push
ret
cmpsl
adc
ds
pop
fwait
jg
jge
sbbl
in
dec
mov
pusha
mov
push
sti
arpl
ljmp
std
and
out
repnz
mov
gs
dec
shrb
shlb
push
dec
mov
out
push
xor
jg
pop
fwait
roll
sub
pop
cmp
push
add
fcmovnb
jne
pushf
mov
push
inc
sbb
in
fimuls
or
mov
sahf
enter
int
add
icebp
jl
push
mov
lahf
aad
sbb
cmp
jp
xor
ss
jle
test
popf
cmc
and
repz
out
cli
pop
loope
mov
jno
cmp
divb
mov
daa
push
or
cmp
adc
in
dec
jo
push
pop
mov
fmuls
push
and
push
movsl
mov
test
arpl
adc
aaa
lea
popa
in
cmpsb
arpl
xor
inc
push
or
int
lods
ret
aaa
repnz
imul
imul
push
cmp
lds
xchg
ljmp
xchg
push
cmc
pop
enter
fldl
dec
inc
mov
jne
das
xor
roll
aad
mov
push
sbb
in
adc
imul
jae
jmp
mov
mov
cmc
add
adc
inc
jge
push
jno
cmp
in
divb
push
test
adc
js
popf
ja
mov
xchg
jge
rcl
inc
test
jecxz
dec
mov
ret
or
fwait
clc
adc
sbb
fisubl
xchg
mov
add
or
sti
insb
sahf
mov
inc
cmp
push
cmp
or
movsl
push
inc
in
push
aas
imul
jmp
mov
mov
vandps
inc
arpl
or
lock
ds
outsb
jecxz
mov
and
sub
adc
popf
sub
pop
cmp
sbb
inc
mov
jp
pop
mov
gs
mov
and
shlb
das
leave
mov
pop
outsb
push
not
loopne
ret
pusha
pop
mov
insl
popa
test
sub
stos
stos
divb
jmp
fisubl
int
sub
mov
and
int3
adc
cmp
shll
push
inc
lret
add
or
shll
jns
cmp
aaa
out
xor
inc
movsl
inc
ficoml
int3
jmp
lds
push
push
js
mov
insl
cmc
mov
mov
js
out
ja
sbb
xor
sbb
pop
mov
hlt
sarb
jne
int3
and
pushf
insb
pop
leave
pushf
leave
aad
push
scas
mov
test
push
loop
pop
push
inc
inc
and
stos
xor
sbb
mov
pop
and
js
xchg
inc
push
jle
dec
mov
fcomi
xor
cmc
or
dec
and
push
mov
out
sarb
test
mov
dec
dec
mov
ja
loopne
cmpsb
push
pop
xor
pop
mov
adc
or
into
out
movb
inc
rcrl
push
mov
dec
mov
bound
sub
jb
insb
jbe
and
fiadds
jmp
and
mov
push
lds
adcl
or
and
hlt
add
cmc
mov
movsb
outsb
dec
mov
sbb
js
mov
aam
jnp
dec
je
cli
je
add
arpl
mov
stc
adc
pop
loope
test
jmp
xchg
bound
mov
pop
cmp
jne
mov
and
rorl
shl
jo
rclb
lods
cmp
into
cmp
inc
out
arpl
in
adc
and
dec
inc
stc
mov
and
push
xchg
sbbb
fstl
jmp
fwait
or
cmp
test
mov
add
pop
imul
cwtl
loope
pop
loope
push
sbb
or
mov
add
mov
std
add
and
sti
dec
jnp
or
sahf
cmp
rcll
das
repz
inc
lods
int
cs
push
fmuls
mov
daa
mov
jns
mov
roll
insb
push
xchg
leave
push
outsb
into
xor
dec
mov
pop
push
push
cmpsl
ljmp
and
pop
push
cmp
das
ffreep
aad
pop
dec
jmp
and
push
push
mov
fistl
sub
popf
or
adc
call
mov
add
popf
jecxz
push
adc
jmp
iret
jns
loopne
pop
pop
repnz
xchg
cs
xor
out
and
pop
jl
insl
mov
lods
shlb
outsb
and
loopne
aas
in
xor
sbb
mov
lea
lret
repz
out
scas
test
addr16
sub
cmpsl
rorl
ljmp
outsl
arpl
pop
or
sub
cld
bound
test
mov
rorl
inc
push
mov
fsubrl
ret
cmp
dec
pop
mov
adc
shl
pop
popf
lock
jle
jbe
gs
rolb
lcall
icebp
jle
test
jno
mov
imul
js
popa
call
lret
pop
jge
bound
cmpsl
mov
test
pop
sti
xchg
add
dec
lret
sahf
addr16
cmp
sbb
mov
call
xor
push
cmp
xchg
inc
mov
popf
std
or
cs
mov
in
sti
fcmove
xor
mov
data16
pop
push
ss
or
push
jl
pop
int
add
stc
sahf
aad
jle
rcll
test
notb
mov
leave
dec
add
addr16
enter
jp
data16
out
adc
add
test
jae
and
sbb
insl
scas
mov
ret
and
lods
xor
or
sbb
lock
dec
xor
jle
ss
cmpsl
ret
xchg
inc
dec
inc
roll
pop
mov
mov
daa
sbb
cltd
inc
lret
ret
push
sti
mov
cmpsl
jmp
pushf
jmp
push
into
dec
xor
jns
fcmovb
aad
out
adc
nop
sbb
aaa
nop
push
jo
lea
pshufw
and
xchg
pop
jge
dec
xor
push
loop
jmp
sahf
inc
jbe
daa
mov
push
or
loop
mov
sub
add
dec
mov
xor
dec
push
sub
loope
pop
aaa
bound
xor
lods
mov
mov
push
lds
out
mov
add
xchg
movsl
data16
jge
inc
xor
out
fdivrl
ja
push
mov
jbe
inc
cmp
mov
add
jo
sbb
scas
mov
adc
sbb
cmp
and
lea
lret
push
inc
icebp
sbb
inc
insl
dec
scas
mov
movsb
or
shll
out
inc
dec
aam
pop
loopne,pt
adc
jo
sarb
in
dec
test
cmc
mov
sbb
sbb
dec
xchg
lock
jnp
into
mov
std
sbb
dec
in
pushf
dec
shlb
lret
stos
ss
loopne
push
jno
inc
rcll
push
push
adc
movsb
aam
push
lahf
psubusb
inc
push
mov
loopne
in
jp
xor
sbb
inc
pop
lret
pop
mov
pop
das
std
arpl
or
sub
jmp
out
jo
mov
cld
mov
jle
test
fcomps
out
jnp
in
jmp
ret
lret
lods
popf
mov
push
jb
lock
les
or
xor
ret
xor
movsb
xchg
adcl
aad
call
lock
mov
push
int3
icebp
loope
rcrl
aad
xchg
xchg
dec
inc
pop
mov
add
cmc
dec
stos
repnz
sbb
pop
fldenv
int3
cmpsb
xchg
jl
xchg
cs
mov
hlt
loope
and
leave
lds
push
mov
inc
or
mov
fxch
xchg
and
in
aad
jle
push
jmp
sub
out
sub
mov
cmp
orb
and
ficomps
ja
inc
into
xchg
aas
push
sub
testb
push
and
shrl
popa
sbb
cmp
mov
mov
xchg
add
push
das
test
cmp
cmp
stos
push
loopne
enter
shlb
dec
xchg
cmpl
in
mov
test
cmp
insl
adc
dec
ret
insb
les
xchg
cmp
shll
unpcklps
jae
test
inc
inc
xchg
fcoms
sarl
xchg
ljmp
mov
jae
loopne
add
daa
push
fmull
mov
das
lcall
stos
jnp
lods
push
pusha
hlt
ret
fwait
cli
or
push
out
add
jecxz
ret
addr16
adc
xchg
imul
pop
popf
adc
adc
mov
sti
sarb
jne
lret
pop
cmp
hlt
adc
dec
aaa
sub
aam
xchg
lahf
roll
mov
dec
adc
sbb
fisubrs
mov
adc
shll
sti
fsubrl
push
ret
xchg
insb
mov
imul
xchg
sti
sbb
and
and
add
outsl
xchg
jl
jnp
in
jae
jnp
pusha
push
imul
inc
mov
push
inc
out
add
popf
mov
punpckldq
out
sbb
push
dec
mov
cmp
clc
mov
xchg
xor
cmp
addr16
movsb
imul
add
and
jl
jnp
dec
dec
mov
ss
xor
mov
fld
adc
sub
mov
fnsave
cmpsb
cmpsl
add
sbb
and
scas
jge
shrl
mov
andl
add
pop
shll
mov
push
cli
jge
test
pushf
pop
bound
mull
dec
repnz
mov
int3
js
push
loopne
movsl
adc
movsl
in
loopne
frstor
inc
sahf
xchg
notl
add
inc
testl
je
mov
sub
addr16
popf
lcall
mov
movsb
adc
cli
mov
or
test
xchg
cmpsb
insl
fyl2xp1
movsl
or
xor
les
pop
adc
xchg
mov
xchg
dec
repnz
cltd
icebp
in
push
mov
insb
cwtl
int3
push
jbe
scas
imul
cmpsl
cmp
inc
hlt
jno
inc
add
loopne
insl
cmp
xchg
gs
mov
test
dec
adc
mov
xor
dec
out
js
mov
mov
leave
push
mov
jle
sub
pop
call
rcrb
andb
sub
out
inc
decb
lret
mov
nop
repnz
das
jns
fcoms
dec
cmc
jne
test
mov
push
loopne
ret
aaa
pop
pushl
nop
push
and
push
fwait
or
in
lret
sbb
repz
mov
andl
das
or
popf
into
push
sahf
mov
cld
or
aam
sub
lock
jl
inc
push
mov
and
mov
stos
mov
scas
sbb
inc
pop
mov
dec
dec
jo
add
jmp
cmpsl
jnp
shlb
add
jns
iret
or
orps
pop
idiv
lret
frstpm(287
mov
popf
mov
adc
xchg
and
push
xor
mov
fimull
loop
test
cmp
jne
repnz
fmul
dec
jle
cmpsb
in
sbb
add
shll
mov
mov
sub
adc
or
jg
cs
mov
mov
adcl
repnz
cmp
pop
cmovs
aam
outsl
cmp
fisttpl
pop
mov
mov
outsl
adcb
add
adc
cmp
cmc
in
sbbl
in
xchg
jp
lahf
jge
loop
mov
insl
dec
fs
popf
nop
jns
inc
push
das
mov
fcoml
aad
jno
mov
rcr
jp
jne
das
nop
loope
add
xchg
dec
fiadds
repz
outsl
sub
jecxz
movsb
incb
dec
les
stc
xchg
dec
xor
inc
lcall
fistpl
jl
out
test
or
mov
mov
cs
pop
fstps
ret
jnp
out
add
inc
lods
xchg
sti
clc
mov
enter
aam
sub
push
and
rorb
jp
lock
int3
jns
hlt
aad
js
nop
jle
shlb
mov
mov
mov
insl
cmp
mov
mov
outsl
pop
inc
hlt
inc
jne
gs
lock
cwtl
stos
inc
xchg
daa
dec
jle
in
cmp
jbe
dec
sbb
mov
outsb
pop
mov
sbb
mov
fnstenv
jns
scas
popf
pop
fstpl
cltd
dec
and
outsb
xchg
cmp
sub
push
repnz
jecxz
cltd
mov
lds
ljmp
lahf
fildll
es
adc
dec
pop
aaa
pop
adcb
nop
fists
jae
iret
cmpsl
jmp
stos
jp
mov
xchg
jnp
dec
enter
inc
or
jne
jns
push
sbb
push
dec
out
pop
cli
stos
cwtl
jge
cmpsl
in
in
fldt
stc
and
mov
inc
mov
call
xchg
scas
pop
sarl
xor
and
xor
int
jnp
addr16
fwait
jb
repnz
mov
adc
xor
aas
pusha
fwait
lods
les
mov
sub
into
add
or
xlat
xchg
aad
sub
or
jmp
sub
jmp
mov
imul
ds
jl
syscall
mov
add
out
adc
dec
sbb
popa
pushl
mov
add
in
add
mov
push
mov
jp
loope
mov
push
dec
out
daa
loopne
push
ret
mov
push
adc
repnz
add
jge
push
test
adc
cmp
dec
in
xchg
push
jns
cmp
std
push
xor
lret
lods
sub
mov
jnp
sub
in
adc
cmp
inc
pop
ret
lods
cmp
out
adc
sahf
pop
sub
mov
sub
and
mov
mov
sar
imul
xor
pop
mov
pop
stos
sbb
insl
aas
mov
aas
lahf
fwait
mov
pop
xor
xor
adc
into
rolb
stos
fimuls
daa
cmp
cmpsl
pusha
hlt
ja
mov
or
je
pushf
repnz
cli
insb
mov
outsl
daa
adc
stc
dec
and
jmp
pop
cld
add
stc
jmp
repz
add
fdivs
rcll
bound
jecxz
out
cmp
mov
loop
jnp
pushf
test
outsb
dec
add
ja
or
cs
fstps
cmpsl
mov
dec
pop
add
popf
cmc
call
rcll
push
cld
mov
cwtl
push
jmp
lcall
cmp
add
fcomps
outsb
in
or
sbb
cmpl
repz
imul
cli
inc
add
cmc
sahf
int
lcall
lcall
cmc
dec
cmp
jae
std
sub
push
and
pushf
mov
iret
aas
outsl
adc
les
imul
adc
movsl
lahf
sbb
mov
sbb
sti
in
daa
outsb
mov
dec
mov
push
ljmp
popf
mov
jb
je
push
ss
xor
leave
cld
xchg
xlat
mov
mov
fsts
pop
push
jecxz
inc
push
add
cld
arpl
jecxz,pn
xor
aas
out
lds
cmpsl
jmp
fdivr
mov
lock
decb
and
lret
jle
std
pop
add
xchg
jns
test
mov
xchg
mov
bound
pop
ret
jl
std
subl
pusha
or
mov
pop
jbe
pop
in
dec
shr
scas
push
sti
fimull
aas
fidivl
xor
xor
inc
adc
xchg
xor
or
roll
dec
popf
rclb
ss
jb
sbb
fdivr
cmp
mov
cmp
mov
rorl
loop
je
xchg
adc
cmpsl
push
adc
clc
dec
fwait
cmp
cmp
pop
sbb
add
testl
pop
jp
jmp
mov
mov
ds
or
cmp
or
cmp
or
or
sub
cltd
aas
cmp
fldenv
imul
je
scas
xor
adc
bound
hlt
lret
sbb
fs
out
cmp
in
pop
xchg
jbe
pusha
call
addr16
data16
enter
pop
and
and
push
and
jmp
inc
lret
mov
cld
leave
adc
and
popa
ficomps
andb
add
jge
das
daa
icebp
shll
aas
fstpl
rcrl
loope
mov
das
shll
add
cmp
cmpsb
mov
xchg
pop
cltd
cli
movzwl
lods
or
nop
call
jl
xchg
sub
int3
xchg
cwtl
scas
mov
orl
jns
mov
jbe
dec
xchg
add
add
mov
outsl
imul
bound
pop
mov
mov
test
shll
lock
jns
lahf
cmp
mov
lcall
push
in
stos
cmc
xchg
mov
mov
fyl2xp1
mov
sbb
and
jl
sbbb
pop
dec
stos
sbbl
pop
pop
pop
xchg
imul
push
call
jg
outsb
cmp
cs
dec
inc
divl
push
lock
jno
loope
jmp
inc
test
inc
jne
pop
movntq
bound
and
icebp
incb
sub
in
dec
jecxz
dec
addr16
test
test
test
js
push
paddusb
fs
add
out
subb
xchg
sub
xor
pop
lds
push
in
xor
push
out
and
scas
mov
test
mov
cs
enter
inc
and
mov
mov
push
les
daa
xchg
cmpsb
and
push
inc
aam
out
and
or
and
xchg
rclb
mov
imul
sbb
push
leave
adc
sub
xchg
fisubrs
ret
xor
jo
dec
mov
add
popa
pop
push
shll
mov
jae
mov
push
cli
int3
xchg
push
rcl
inc
adc
inc
sub
xchg
test
insl
clc
mov
in
shll
out
sbb
pop
ret
push
adc
xchg
fidivl
sbb
sub
mov
outsb
xchg
or
andl
test
lcall
imull
and
jle
mov
mov
pusha
popa
mov
sarl
mov
mov
in
inc
dec
push
sub
lock
inc
push
mov
adc
sub
rorb
ja
mov
xchg
call
xor
sbb
int3
sbb
lret
mov
shrl
scas
adc
in
push
sub
hlt
arpl
adcl
mov
dec
loop
bound
lock
cmpsb
incb
jmp
or
mov
stos
loop
rcll
mov
lea
or
pushf
stos
cmp
jle
push
mov
dec
cltd
out
pop
adc
icebp
cmp
fildll
jp
pop
mov
push
icebp
lahf
daa
clc
adc
dec
mov
clc
lcall
inc
jge
pop
ret
and
jg
scas
scas
outsb
call
sti
cmp
add
and
push
pop
lcall
push
inc
xlat
add
fsub
insb
or
js
jmp
sub
jle
out
push
sahf
jae
je
pop
cmpsl
sbb
mov
int3
or
xlat
xor
fiadds
xchg
scas
mov
arpl
jbe
xchg
push
repz
loopne
mov
push
insl
cld
bound
inc
mov
pushf
mov
jmp
push
xor
mov
jmp
imulb
push
xchg
loop
ret
rcll
xchg
xchg
outsb
and
sub
add
cwtl
xchg
mov
mov
rcrl
sub
addl
mov
cld
bound
outsb
xor
rclb
lods
mov
repnz
xchg
jns
pop
cwtl
mulb
mov
mov
scas
jge
sub
fsubr
mov
aaa
fcompl
mov
pop
xchg
les
negl
push
outsb
leave
mov
aad
push
scas
jnp
push
je
push
inc
inc
fidivs
fwait
add
or
out
xchg
or
push
push
outsl
movsb
cmp
in
sub
mov
popa
aas
push
mov
out
sbb
stos
in
cmp
mov
push
dec
adc
js
pop
lahf
lds
dec
push
dec
pop
aam
push
shr
in
cmpsb
fabs
cs
iret
mov
sbb
clc
jge
push
je
int
inc
dec
imul
shlb
xor
sbb
inc
fwait
outsl
pushf
lret
testl
sub
pop
iret
inc
ljmp
mov
loopne
test
and
xchg
pop
jp
popa
push
mov
cmc
and
adc
lret
cli
lea
mov
inc
bound
ss
sub
daa
pop
xchg
push
inc
ja
lahf
xchg
in
ds
movsb
mov
stos
loope
xchg
add
in
js
ret
je
fwait
inc
repnz
addr16
ror
jl
int3
movsb
sub
es
movsl
dec
out
daa
xchg
fcomps
lock
xchg
mov
mov
jnp
push
ret
pop
in
cld
loopne
int
sahf
add
stos
rcrl
stos
push
nop
je
add
jp
and
dec
jo
es
out
shlb
std
jp
mov
push
inc
mov
scas
addb
add
mov
rcr
inc
adc
pop
push
loop
mov
jmp
ret
loop
xorl
stc
sbb
push
clc
jecxz
push
sub
insb
sti
insl
iret
or
fxch
lahf
stc
and
iret
mov
xor
lcall
fucomp
fcompl
aaa
out
and
movsb
xchg
push
repnz
stos
loop
arpl
mov
cmp
mov
jle
inc
dec
out
xor
pushf
inc
je
cmp
dec
lds
rol
movsb
lahf
sbb
jb
fs
sub
pusha
int
mov
adc
popf
test
lds
inc
jns
add
cltd
fidivrs
xor
fwait
mov
adc
push
hlt
pop
xchg
jo
testb
adc
gs
adc
insl
sub
or
or
fs
leave
mov
dec
ja
and
fwait
jmp
out
push
cmp
add
xor
jne
out
cmc
add
adc
out
push
mov
push
add
test
pushf
pop
loope
mov
mov
xchg
mov
enter
pop
and
adc
add
loopne
dec
dec
cmp
je
sub
call
mov
or
lcall
lret
out
mov
inc
mov
scas
ds
ljmp
mov
test
out
mov
sub
cmpsb
je
sahf
stc
lock
xor
pop
icebp
enter
nop
sbb
cmp
sbb
stos
stc
inc
cmpsb
mov
jp
xchg
push
xchg
jmp
lret
jns
mov
and
cltd
jbe
mov
lea
sti
mov
inc
inc
insl
rcr
imul
or
aam
sti
gs
insb
and
sub
push
pusha
add
jl
lods
pop
imul
dec
int3
dec
dec
or
in
das
cmp
push
push
pusha
xor
jnp
mov
ficoms
into
jnp
js
inc
adc
pushf
xchg
jp
scas
cmpsl
hlt
xor
ljmp
ja
sarb
out
or
mov
push
dec
xchg
mov
fidivl
cmpsb
add
mov
fldt
repnz
loopne
jo
in
div
data16
push
loop
loop
jmp
push
incb
cmpsl
aaa
dec
jmp
fistpll
and
cmpsl
ljmp
imul
loop
jmp
fisubl
cmp
sti
in
movsl
subb
pop
mov
adc
xchg
or
fimuls
mov
pusha
fwait
std
inc
jo,pt
sbb
je
leave
jg
or
lret
mov
push
inc
ds
xor
jns
pop
fwait
mov
test
into
pop
ljmp
mov
xor
dec
mov
xchg
push
aas
xor
mov
clc
adc
stc
mov
mov
cmp
fdivl
cltd
stc
nop
jb
aaa
mov
ja
rcl
hlt
call
xor
adc
mov
mov
iret
jo
push
cmp
pop
push
jg
adc
nop
mov
mov
les
push
cs
and
xchg
iret
xchg
ret
rorl
mov
mov
adc
cmp
lret
cmp
mov
mov
repnz
flds
ljmp
sbb
out
cmpsb
pop
dec
sarb
mov
pushf
dec
insb
mov
xchg
adc
push
pusha
cmp
aaa
sbb
push
mov
mov
jge
fucomi
adc
jbe
jmp
dec
mov
mov
je
push
push
pop
es
fidivs
mov
lods
and
and
xchg
cwtl
push
xchg
mov
cmp
nop
sbb
jnp
addr16
je
pop
adc
sub
sub
andl
sarl
cmp
in
in
test
sbb
es
rcr
dec
lods
shll
fdivs
adc
inc
nop
pop
push
out
cmpsb
aam
inc
push
adc
rorl
sbb
dec
fcmovnbe
push
lahf
or
insl
arpl
xchg
testl
xchg
push
pop
pop
cs
ja
fistpl
insl
call
push
mov
cmc
aad
adc
mov
les
ret
mov
jns
test
pop
je
mov
fistpl
xorl
xchg
xchg
mov
pop
sahf
lahf
dec
out
mov
pop
add
std
inc
scas
mov
mov
daa
popf
gs
mov
push
cmp
sar
scas
test
jns
jle
cld
or
push
push
pop
mov
int3
loope
add
int
and
sbb
mov
xchg
sbb
pop
sbb
leave
xchg
ficomps
jne
rorl
fs
sti
mov
mov
stc
scas
push
outsl
mov
pop
negl
sbb
adc
gs
loope
inc
sbb
push
mov
repz
enter
shll
arpl
sbb
cmp
xor
sti
js
adc
cmpsl
test
test
cs
std
mov
adc
and
dec
ror
jecxz
dec
or
sbb
add
jns
movb
dec
test
jne
dec
mov
xor
and
xchg
push
outsb
aam
jge
jmp
sub
jo
insb
lds
or
sbb
std
adc
lahf
adc
dec
cmp
pop
mov
inc
mov
jmp
insb
fstpl
push
fwait
and
fcom
test
jecxz
dec
jnp
xor
jns
cmp
and
rcrb
adc
orl
outsl
lea
adc
cmp
inc
push
repz
jl
out
dec
push
inc
mov
pop
dec
or
jno
sub
test
shr
pop
ret
aad
fdivs
enter
and
icebp
pushf
addb
int
lods
jae
jo
hlt
jle
ss
and
into
bound
lea
cwtl
cmp
loope
es
sarb
mov
rcrb
test
and
fisubrl
add
int3
icebp
sbb
jo,pn
ljmp
mov
mov
fldenv
out
sub
mov
and
movsl
stos
sub
mov
jno
shr
and
sbb
test
cmpsl
jecxz
jge
sub
sbbl
mov
xor
push
imul
fdivl
mov
in
mov
mov
xchg
jp
and
lret
nop
js
aas
mov
sahf
jmp
outsl
sub
add
fldt
in
in
and
cvttps2pi
adc
push
inc
insb
sbb
loop
jae
or
dec
nop
jne
cltd
cwtl
push
push
into
out
cmpsb
int3
sub
dec
inc
xchg
xlat
xor
push
sub
xor
movsl
pop
xor
cmp
jns
lret
lahf
out
mov
jne
or
add
sbb
xor
pushf
das
push
xchg
sub
or
push
adc
andl
adc
shll
xor
pop
sub
lock
mov
pushf
adc
aad
bound
adc
popl
data16
dec
ljmp
jb
dec
popf
sub
add
inc
inc
mov
and
sarl
xor
add
fdivrs
and
test
imul
mov
pusha
jns
push
fucomip
xor
mov
pop
sub
sbb
into
sbb
loope
or
rcll
nop
xchg
inc
pop
adc
movsb
mov
pop
test
push
mov
push
add
sub
icebp
and
lods
sbb
in
fisubrl
je
clc
jl
int3
scas
jecxz
lods
call
gs
ss
fxch
ss
xor
es
lcall
push
and
mov
mov
loopne
out
imul
shll
or
inc
stos
xchg
jl
addr16
scas
mov
push
sbb
orl
mov
lret
fadds
dec
cmp
cwtl
mov
lea
lret
lret
push
xor
out
xchg
xchg
and
repz
push
in
push
mov
test
aam
iret
dec
mov
jl
imul
ret
daa
sbbl
cli
xchg
mov
mov
pop
mov
jne
fbstp
and
dec
dec
pop
out
mov
int3
adc
xacquire
jg
dec
notb
ret
data16
sub
hlt
xlat
scas
jg
add
cs
in
jle
iret
xchg
stc
sub
cmp
call
mov
or
aad
push
ljmp
and
insb
pop
cmp
mov
out
leave
sahf
inc
aas
mov
mov
xor
add
js
popf
fwait
or
popf
sub
mov
lahf
or
and
mov
mov
add
inc
mov
cmp
mov
inc
xor
xchg
inc
mov
mov
repz
jbe
leave
mov
pop
js
adc
add
repnz
iret
or
neg
push
and
cmp
adc
popa
repz
sub
mov
mov
enter
scas
insl
shlb
jb
and
pop
cltd
pandn
mov
xlat
jo
cmc
xchg
jne
adc
or
stos
sbb
adc
jle
fwait
pushf
dec
dec
std
add
mov
bound
push
inc
jns
pusha
int3
out
cmp
cmp
xchg
inc
fs
addr16
in
ret
lahf
pop
dec
cmpsl
lgs
adc
sarb
adc
mov
dec
pusha
lcall
sub
mov
je
pop
fwait
jle
adc
mov
mov
mov
sbb
repnz
push
ret
pop
push
or
inc
je
fsubr
roll
add
cmp
mov
cmp
push
mov
lea
ljmpw
test
mov
insb
je
movsl
outsl
mov
sahf
sub
test
out
outsb
fcoms
in
sub
fbstp
push
in
add
sbbw
test
rorb
xor
mov
fwait
mov
mov
sbb
push
jo
jg
into
lret
push
lcall
add
or
dec
mov
mov
xlat
ja
sbb
out
push
pop
aam
cmpsb
cmovns
imul
out
cmpsb
sarl
inc
jecxz
cmpsl
xor
pop
cs
adc
stos
xor
mov
ficomps
xor
fs
mov
mov
repz
cs
mov
pop
push
int3
stos
and
fs
xchg
pop
sub
mov
rcl
dec
jl
sbb
and
jns
jbe
dec
mov
aaa
sbb
mov
pop
and
pop
inc
push
sbb
cmp
push
iret
inc
mov
ja
or
ja
jmp
movsb
shrl
xor
call
push
call
imulb
jo
rclb
jno
fbstp
and
push
push
addr16
pop
pop
daa
inc
xor
movb
orl
es
je
fmuls
cmpsb
es
in
aad
aad
sub
in
popa
xchg
test
int3
fidivs
xchg
mov
test
push
or
jge
jb
xlat
pop
mov
and
out
cmc
jnp
inc
repz
xchg
mov
hlt
push
lds
test
cmp
mov
sbb
mov
stos
sub
rcll
push
push
xor
in
test
mov
inc
or
adc
mov
test
or
inc
sbb
out
dec
sbb
in
fldt
mov
jbe
mov
test
mov
mov
sarb
add
sahf
jnp
icebp
pop
add
loop
mov
pop
sbb
pop
jge
mov
sub
lahf
and
pop
mov
mov
std
fs
fs
adc
ds
popl
inc
jl
hlt
adc
xorb
pop
clc
std
sbb
add
repnz
stc
shlb
sbb
bnd
movl
aam
mov
leave
jmp
imul
sbb
adc
outsl
aam
icebp
or
cmp
push
outsl
ljmp
jg
insb
inc
pop
add
sbb
add
jmp
push
sahf
xor
out
sbbb
push
cmpsl
int
ret
push
fisubs
cmp
sbb
mov
pop
fs
push
jmp
aas
jo
cmp
cwtl
fsubs
push
ljmp
xchg
pushl
je
inc
imul
push
jbe
sbb
mov
add
loopne
gs
lods
icebp
inc
sarl
add
data16
sbb
pop
adc
insb
pop
mov
test
or
das
sahf
stos
cmp
cmpb
xchg
jge
jnp
notb
xlat
out
test
dec
rcll
inc
pushf
lock
sub
in
push
inc
inc
sub
cli
mov
xchg
cmp
call
fidivrs
pop
test
pop
and
mov
js
xchg
jnp
test
sti
aad
pop
push
negb
enter
je
dec
jae
add
or
mov
mov
and
lahf
enter
inc
mov
and
mov
xchg
xchg
dec
jns
out
out
push
icebp
sub
daa
inc
pop
sarb
mov
mov
mov
add
jg
scas
jne
mov
cmp
xchg
insl
dec
ret
xor
xchg
push
clc
dec
jb
adc
sbb
sbb
mov
xchg
mov
mov
iret
xor
hlt
push
mov
or
int
xor
jb
inc
leave
jae
rcr
icebp
cmp
js
test
out
icebp
add
notl
addb
ja
sahf
pop
lret
mov
rorb
fdivs
sbb
icebp
xor
stos
lods
fisubrl
shll
pop
sub
xchg
mov
cltd
call
and
xchg
jge
lods
dec
cmp
inc
mov
sbb
into
data16
or
mov
jge
insl
fcmove
mov
sbb
mov
xchg
xlat
push
and
out
jb
mov
lret
cwtd
inc
add
pushf
dec
inc
jne
imul
cltd
or
dec
addb
sub
ljmp
arpl
faddl
scas
pop
rolb
inc
push
and
das
mov
lret
testb
adc
push
cmp
adc
pop
add
mov
sbb
lock
mov
jb
jne
repz
jae
inc
jmp
aam
jmp
sub
repnz
rcrl
addr16
lret
adc
xchg
stos
mov
inc
pop
dec
stc
cmpsl
out
mov
mov
and
jle
cmp
dec
and
andb
add
cmp
and
and
xor
lea
std
jge
movsl
lds
dec
mov
jnp
cltd
adc
inc
les
xor
bound
jns
adc
imul
mov
mov
push
cmc
jmp
outsl
inc
dec
ret
cmp
and
jp
fs
rolb
sahf
mov
xorb
or
in
scas
out
or
pop
sub
sarb
mov
rorl
mov
imul
lock
data16
push
out
mov
cld
mov
cmp
mov
and
inc
rolb
popa
jl
aad
jae
jb
xor
adc
cli
iret
add
jne
ds
aam
xchg
push
ret
in
or
mov
dec
and
movsb
pop
ficompl
mov
dec
mov
sub
mov
fucom
jmp
loope
inc
or
roll
add
dec
add
push
mov
jno
in
and
lahf
mov
mov
pop
scas
ror
cld
dec
cmp
xchg
inc
mov
pushf
jnp
xchg
enter
js
mov
push
shrb
incb
scas
aam
roll
notl
fs
in
xor
xor
sub
scas
fwait
adc
ret
jl
xchg
out
sar
rcrb
push
pop
pop
das
loope
lret
loop
sbbl
shrl
ret
jl
lret
xchg
xchg
mov
jp
divl
hlt
mov
cs
lahf
pop
pop
xor
or
mov
sub
and
cmp
shrl
jbe
dec
cmpsb
sub
xor
dec
push
inc
mov
dec
mov
ret
orb
dec
cs
rorl
lcall
orl
xor
add
out
dec
dec
orl
aas
jne
jle
outsb
mov
lcall
aad
jno
mov
jns
icebp
push
enter
fisubrl
mov
mov
push
and
pushf
mov
fbstp
pushf
push
mov
dec
out
and
shll
mov
push
xchg
push
les
out
movsb
sahf
mov
aad
outsb
mov
and
ret
clc
xchg
sbbl
test
fildl
sbb
pop
dec
into
push
or
arpl
pop
imul
inc
mov
jle
adc
xchg
adc
push
sbb
xor
loop
data16
jae
in
orb
cmp
in
xchg
loope
xchg
dec
jmp
ret
lahf
in
or
mov
popa
call
test
hlt
fsubs
sub
rolb
adc
mov
loopne
inc
lret
cli
xor
cltd
mov
bound
lahf
xchg
sbb
pop
jae
pop
inc
jmp
ret
adc
dec
add
push
call
add
imul
cmc
jo
cmp
ljmp
mov
fprem
stos
add
out
insl
adc
xchg
frstor
div
adc
sti
pop
repnz
xchg
loop
stos
ja
mov
ljmp
cli
mov
hlt
push
inc
stos
pop
shl
in
daa
enter
shl
cmpsl
loop
sub
mov
fmull
jg
sbb
sti
xchg
mov
inc
jecxz
sbb
mov
mov
pushf
mov
xor
mov
adc
sub
jg
repnz
out
lahf
push
push
sub
pop
xchg
jle
sbb
iret
xchg
cmpsb
bound
or
and
cmp
mov
lock
cs
pop
clc
popa
mov
inc
lods
int3
fldl
cmpsl
lahf
into
push
and
js
push
add
jecxz
stc
lds
das
or
adc
adc
sub
jnp
jg
lea
xor
pushf
insb
arpl
sub
lret
pop
mov
adc
repnz
enter
rcr
test
mov
sbb
jle
stc
lods
mov
mov
pushf
push
ret
sti
sarl
icebp
jecxz
les
sbb
add
icebp
mov
push
out
adc
ret
jbe
loop
mov
xchg
sub
data16
mov
imul
sbb
mov
popa
adc
xchg
xchg
push
dec
fisttpll
add
xchg
aam
bound
cmc
jl
xor
lahf
pop
adc
inc
dec
mov
bound
push
jo
add
fldl
push
cmp
dec
pop
btc
ss
addl
cmovns
repnz
pushf
mov
or
xchg
stos
inc
xchg
jmp
fdivrs
ds
in
mov
dec
xor
rolb
cmp
daa
push
mov
mov
out
mov
fisubl
dec
movsl
rep
mov
aas
lea
rcrb
je
repz
add
ljmp
lods
cwtl
inc
or
dec
sbb
cs
ljmp
shlb
sbb
notb
pop
push
nop
ffree
xor
cwtl
mov
jnp
orl
mov
cmpsl
mov
sub
lock
outsl
cs
add
jne
cwtl
test
jne
and
lahf
fs
jo
ja
jbe
popf
lret
pop
out
fildll
clc
dec
sti
stc
sub
jb
stos
cwtl
or
xlat
jns
add
jmp
je
dec
mov
pop
sarl
loopne
cmp
jns
mov
outsl
cmp
cmp
fidivrs
lret
out
iret
xchg
mov
sbb
repz
dec
mov
adc
and
mov
inc
push
jns
hlt
cmp
lret
lock
fwait
icebp
xchg
dec
ljmp
xchg
lret
fstl
iret
adc
sbb
fcoms
out
shll
inc
movsl
pusha
dec
notl
data16
mov
leave
ret
es
push
sbb
scas
inc
inc
and
push
mull
pop
pop
sarl
jae
and
hlt
xchg
pop
loopne
jp
ret
add
jae
std
jl
lcall
inc
add
aas
stos
lcall
out
mov
daa
inc
jl
xor
xor
sti
dec
int
orb
push
jns
add
movsl
mov
adc
add
mov
push
add
sbb
je
popa
dec
outsb
decl
add
leave
mov
jb
aam
fdivrl
pop
add
push
pop
push
push
jne
inc
addr16
push
mov
mov
inc
mull
call
movb
xchg
in
sub
iret
out
mov
jae
adc
imul
mov
jle
jb
sahf
test
inc
bound
dec
dec
leave
adc
clc
xor
adc
xchg
dec
and
stc
xlat
sarl
push
loopne
jnp
or
pusha
fisubl
adc
lock
inc
adc
jae
imul
mov
outsl
dec
lea
push
test
sbb
sarb
jno
mov
push
test
popf
xor
movsb
push
and
imul
notl
pop
adc
imul
push
cli
pop
lcall
adc
sbb
dec
jmp
repz
push
pop
fildl
imulb
cmpsl
pop
insb
in
ljmp
mov
movsl
mov
rcrb
hlt
hlt
mov
out
add
dec
loop
xchg
xor
xor
gs
scas
in
fstpl
xor
fwait
outsl
jns
bound
in
in
loope
jge
popf
ret
out
das
in
loope
loopne
xor
xchg
shr
dec
pop
ja
jle
mov
cmp
pop
xor
adcb
mov
insb
mov
das
test
ss
es
fidivrs
mov
mov
lret
test
loopne
or
cli
sbb
inc
test
popf
add
push
mov
xlat
mov
outsb
movsl
imul
popf
jle
in
lods
dec
jp
xlat
cmc
loop
sub
xchg
sub
mov
inc
int
inc
lahf
ja
jnp
fidivrs
jle
mov
enter
fimull
les
arpl
xchg
lds
ficoml
pop
lcall
push
inc
pusha
les
dec
roll
xor
pop
lods
pop
push
push
mov
out
pop
ljmp
cld
or
jae
addr16
repz
mov
xchg
fwait
pop
lcall
xor
hlt
daa
jmp
adc
popl
jecxz
mov
in
and
push
inc
adc
push
loop
sarb
xor
adc
sbb
pop
inc
mov
jo
push
xchg
pop
call
movsl
dec
sub
aam
xor
and
stc
jmp
out
sub
data16
pushf
cmp
push
into
aaa
push
cmp
sbbl
mov
lahf
mov
mov
mov
cwtl
test
mul
movsl
shr
cwtl
or
pop
call
outsb
jne
pushf
or
call
insl
cwtl
jmp
pop
popa
jnp
cwtl
xchg
sub
adc
jae
repnz
hlt
rol
add
add
inc
mov
jo
jbe
mov
xor
das
jb
mov
test
mov
scas
fistps
sub
sbb
dec
xor
fstps
xchg
mov
mov
daa
fstpt
pop
mov
push
movsb
xchg
jl
mov
lcall
loopne
inc
mov
xor
int3
mov
push
dec
mov
repz
daa
out
cmp
adc
jecxz
loopne
into
cmpl
fdivl
stos
push
aaa
mov
adc
inc
shlw
shr
test
jae
int3
cld
cwtl
dec
ret
or
in
arpl
inc
xchg
mov
xor
lods
jle
mov
mov
and
pop
mov
sbb
jecxz
mov
jno
stc
mov
imul
ficompl
lods
cmovle
xchg
sub
sub
jnp
pop
push
out
stos
xor
inc
in
xchg
xchg
outsb
sub
push
or
outsb
cmp
xor
orb
imul
jbe
push
pop
cmc
and
mov
pop
dec
scas
pop
fadd
xorb
pop
push
ljmp
dec
inc
aam
adc
leave
ret
or
mov
in
scas
push
cmp
mov
aaa
mov
cmpsb
dec
out
sub
add
xchg
mov
inc
into
mov
mov
pop
in
lahf
add
mov
hlt
push
pop
mov
ljmp
adc
das
out
divl
movsb
dec
repnz
test
push
dec
pop
push
and
mov
add
mov
stos
addb
lods
loop
pop
push
data16
mov
sarb
mov
imul
sbb
push
adc
sbb
and
movsl
roll
arpl
push
push
jg
leave
pusha
xchg
pop
stos
push
cld
cmp
nop
stc
and
push
sub
mov
mov
cmc
mov
scas
std
adc
int3
and
inc
pop
add
in
lcall
stos
enter
leave
les
sub
sbb
cmp
xor
push
inc
sub
call
scas
negl
sbb
dec
mov
incb
cmp
jmp
inc
test
sub
cltd
fidivs
jle
rcrb
je
push
stos
ja
test
adc
inc
mov
cltd
ret
inc
xchg
inc
fcompl
cli
mov
inc
enter
in
call
ss
out
cmpsl
sbb
adc
sar
jmp
insb
push
pop
mov
shlb
sbb
into
mov
pop
pop
or
notb
sub
pop
mov
and
fidivs
dec
xchg
jnp
or
shlb
mov
fldenv
inc
xchg
roll
pushl
icebp
imul
setle
jmp
cltd
push
push
dec
add
stos
stos
sbb
sub
cmp
sub
icebp
inc
es
and
push
jne
inc
in
mov
shrl
lret
cmp
or
cmc
fwait
dec
adc
lds
mov
insl
fwait
dec
ret
test
rol
lds
enterw
dec
fcmovu
or
jo
std
fwait
or
pop
mov
mov
ja
jle
jne
pop
cmpsb
lock
not
push
jns
fistpll
loop
int
inc
mov
pusha
and
cmp
inc
pop
cmp
movl
fs
jbe
sti
inc
es
mov
in
sbb
mov
test
nop
orb
pop
popf
rclb
test
clc
mov
sbb
enter
xchg
int3
ror
es
cli
mov
dec
cmp
jmp
cmp
dec
cmp
subl
cmc
sub
iret
shlb
cli
and
dec
hlt
jo
add
ljmp
pusha
mov
cmpsl
aam
mov
adc
idivb
and
scas
mov
popa
pop
fs
dec
mov
sub
add
push
aad
out
out
push
aad
icebp
pop
sbb
push
xchg
cltd
ss
mov
sub
stos
stos
xchg
cltd
rcrl
out
hlt
pop
xlat
push
movsb
cmp
cmpsw
lea
sub
cmp
cmp
mov
out
and
imul
stos
mov
test
pop
push
rcll
gs
popl
xor
and
daa
sub
add
enter
mov
sbb
and
jo
shlb
pop
sbb
incl
cmp
xchg
aas
inc
mov
ss
cmpsb
jge
pop
jmp
and
movl
jmp
outsl
ret
sarl
int
cmp
mov
divl
faddl
mov
cld
adc
xchg
xchg
pop
lahf
and
loopne
outsb
or
stos
sbb
jnp
ret
dec
les
mov
mov
loope
enter
into
push
outsl
push
pop
xlat
mov
sbb
mov
inc
pop
mov
mov
int
mov
jp
lret
mov
fsub
mov
or
xor
xor
imul
repnz
sub
cli
mov
in
sub
mov
xchg
adc
stc
mov
add
sti
movsl
ja
andl
scas
dec
mov
orb
lahf
cmp
int3
in
faddp
lcall
cmp
push
dec
pop
push
and
push
call
adc
fisttpll
test
inc
lret
adc
sti
ficoml
inc
fistpll
cltd
adc
sti
in
pop
dec
popa
cltd
pop
xchg
xor
lret
lods
notl
pop
add
add
sbb
push
jno
mov
sub
jecxz
fcmovnb
sub
inc
in
sti
sbb
mov
insl
xlat
cwtl
mov
inc
xchg
mov
cmpb
mov
pop
push
das
adc
gs
pop
pop
pop
and
push
clc
mov
push
adc
push
adc
xchg
jnp
adc
das
btcl
xchg
pop
shll
enter
mov
out
lret
and
push
ljmp
jo
nop
sub
fldl
xorb
int3
arpl
cltd
clc
xchg
or
push
jl
jecxz
das
popf
mov
ja
xchg
push
mov
pop
or
stos
xor
pop
jecxz
fdiv
dec
aas
add
or
loopne
and
std
cmp
inc
scas
and
fs
je
lret
push
or
xor
pop
fistpl
scas
notl
das
ja
mov
mov
xchg
add
sub
testb
cli
pop
mov
pop
psrlw
int3
add
shlb
icebp
in
pusha
jmp
idivb
xchg
dec
rsm
ja
xchg
arpl
pop
jle
xor
faddl
lods
jbe
ret
add
mov
dec
xor
loope
inc
xchg
stos
push
jmp
push
lret
aad
mov
outsl
cmp
outsb
mov
adc
cmpb
jecxz
mov
in
push
sub
jl
push
lock
les
scas
jo
sub
enter
fnsave
aam
push
sbb
jecxz
dec
jecxz
mov
mov
rcrb
and
cmpsb
jae,pt
xchg
fsubrs
push
out
fiaddl
mov
xorb
outsb
sub
lods
xor
imul
inc
xor
fwait
xchg
mov
xchg
lret
adc
pop
pop
mov
aad
es
push
pop
cmpsl
aad
popf
cmp
xchg
test
mov
ffreep
shl
fadds
sub
sub
jg
mov
data16
pop
jg
pushf
adc
add
mov
imul
push
push
arpl
in
sarb
or
sarb
mov
std
mull
stos
pop
fldenv
es
and
sahf
fs
cmpb
lret
sahf
jge
mov
sbb
cmp
jnp
mov
leave
into
jne
in
int3
mov
and
int3
sbb
movsl
stos
loope
push
sar
sub
xchg
adc
mov
xchg
mov
ret
int3
mov
orb
inc
jns
lea
pop
inc
sbb
inc
push
into
add
inc
das
test
cmc
pop
movsb
pop
or
xchg
nop
and
sub
and
loop
add
shll
nop
mov
clc
xchg
aam
mov
mov
dec
xor
xor
mov
cs
add
mov
in
pop
dec
add
out
lcall
jl
repnz
pusha
iret
movsb
mov
adc
add
xchg
pop
push
xor
andl
das
mov
xor
cmp
or
loop
jns
mov
ret
xlat
jae
sbb
xchg
test
data16
scas
scas
lock
push
daa
mov
jle
add
gs
sar
add
mov
dec
cmpb
int3
out
std
pop
incl
and
rolb
in
loopne
lret
ljmp
aaa
dec
pop
mov
mov
pushf
mov
sbb
fs
cwtl
jbe
pop
ret
push
inc
aas
lods
mov
decb
leave
and
cmp
cmp
out
inc
and
mov
xor
out
sbb
cld
inc
test
std
into
jne
ds
jmp
add
pop
add
imul
or
in
sub
pop
aam
pop
mov
sub
mov
repnz
cld
xchg
loope
inc
inc
cmp
cmp
pushf
fsubrl
in
jnp
insb
call
mov
cmpsb
dec
push
lcall
js
or
jno
add
adc
incl
jecxz
in
push
pop
std
mov
mov
lods
mov
push
mov
jnp
cmp
sub
mov
jns
adc
popf
pmaddwd
mov
gs
fadd
aam
dec
ret
imulb
jo
sbb
xor
enter
aas
hlt
xor
cmp
push
adc
sub
lahf
add
cmp
fcmovbe
push
aas
int
iret
mov
mov
hlt
inc
mov
jge
inc
pop
or
pop
mov
add
jno
int3
outsl
fcomps
cmpsb
push
fdivr
pop
and
jae
pusha
int
data16
xchg
cmpsl
cmp
push
mov
xor
insb
repnz
xchg
fstpt
ret
mov
push
sub
push
dec
stc
and
mov
xchg
fstpl
in
mov
dec
addb
hlt
int3
cmp
cmp
jns
mov
inc
fsubrs
pop
pop
lds
lahf
inc
xchg
out
pop
int
inc
jo
and
shll
loopne
sbb
imul
fbstp
xor
dec
sbb
fldt
popl
pop
faddl
add
js
mov
jmp
popa
or
dec
movsl
daa
icebp
xchg
cwtl
aas
dec
push
and
mov
adc
or
lahf
mov
pop
sbb
pushl
push
gs
push
jecxz
lods
mov
sub
out
pop
les
pop
or
std
in
repz
add
dec
jo
scas
inc
inc
dec
cs
and
inc
lea
mov
dec
in
mov
xchg
inc
sub
sbb
rcl
cmp
and
pop
je
dec
mov
cld
add
mov
mov
mov
sahf
cltd
call
fxch
movl
mov
cwtl
arpl
int3
ss
push
sbb
push
out
lret
fldl2e
rorl
mov
sub
jg
add
bound
movsl
movsb
cwtl
jnp
cwtl
inc
jmp
addb
fwait
loopne
not
and
mov
pusha
ret
imul
aad
mov
nop
stos
sbb
out
jb
js
pusha
stc
sti
out
or
jb
fmull
rclb
cmpsb
dec
dec
hlt
cmpsl
mov
push
and
jle
fs
es
aad
inc
mov
fs
loopne
sarl
lods
fadds
inc
cs
jmp
orl
pop
mov
in
jmp
ljmp
pop
sbb
mov
sbb
ss
outsl
mov
out
dec
dec
sub
pop
add
mov
sbb
inc
and
and
jle
in
xchg
add
out
adc
add
pusha
bound
cmp
leave
rcrl
lret
push
or
inc
sub
mov
dec
mov
and
inc
dec
lret
dec
scas
cld
sub
jge
sub
gs
lds
inc
cmc
js
enter
jno
add
lret
adc
inc
int
scas
scas
cmc
dec
mov
aas
mov
add
cmp
push
mov
movsb
dec
lret
and
arpl
sub
sub
sub
and
orl
pop
jno,pt
movsl
clc
adc
pop
inc
fisubl
mov
or
leave
cmpsb
mov
cmp
sarl
in
outsl
outsb
lods
pop
ljmp
jle
jmp
imul
test
iret
or
imul
jecxz
push
sub
mov
ja
xchg
mov
cwtl
mov
loopne
mov
inc
push
pop
or
daa
cmpsb
addb
imul
inc
lret
fwait
adc
cmp
std
or
sub
shlb
cmp
lahf
pop
repz
imul
arpl
scas
mov
roll
rcr
cmpsl
adc
fiaddl
xor
aad
dec
and
jp
sbb
addb
out
and
jl
and
push
mov
dec
mov
mov
sbb
inc
mov
sahf
rcr
lret
mov
jb
les
or
sahf
outsl
sub
mov
and
int
or
mov
sbb
ficoml
outsl
test
mov
int
sahf
pop
loop
nop
cmp
dec
sub
push
rclb
adc
mov
movsl
xor
adc
xchg
call
lods
ret
fstpl
cmp
xorl
mov
pushf
mov
push
jg
mov
je
sub
testl
xchg
call
xor
nop
add
xchg
add
adc
stc
ss
lcall
mov
inc
shrb
insl
xor
mov
daa
mov
out
test
mov
jnp
cmp
dec
gs
jg
scas
ljmp
stos
push
mov
jns
jecxz
in
std
sarl
fstpl
adc
orl
cs
jae
rcll
mov
push
lret
mov
pop
mov
stc
sub
aas
push
adc
xor
shr
repnz
movsl
leave
jo
ror
out
stos
shl
loopne
ja
imul
and
xchg
pop
cmp
or
and
call
subb
push
test
xchg
xor
test
dec
gs
ja
or
inc
sbb
movsl
cmp
cmc
dec
sub
cmp
aam
in
lcall
and
aad
add
sbb
cmpb
sub
xchg
sbb
mov
sti
ret
lcall
test
dec
or
arpl
mov
incb
and
add
pop
add
fildll
pop
inc
call
inc
outsl
adc
in
xchg
int
imul
push
sub
data16
fnstcw
bnd
outsb
mov
cmp
push
or
add
pop
or
hlt
cmp
sti
fisubl
xor
outsl
xor
add
jb
add
pop
roll
pop
iret
jbe
cli
pop
dec
ja
scas
clc
dec
stos
aas
lret
movups
dec
dec
mov
sbb
mov
stos
fucomi
mov
and
scas
loopne
jge
dec
push
jle
or
push
cmp
es
rolb
je
push
or
les
loope
mul
pop
shr
inc
sahf
push
jecxz
xor
and
imul
jecxz
pop
dec
out
iret
pusha
fs
leave
repz
or
daa
cltd
sbb
adc
je
loop
mov
or
pop
inc
lcall
jae
leave
mov
pop
dec
mov
xchg
negb
mov
mov
mov
adcl
or
fdivp
mov
mov
scas
xchg
sahf
rcr
pop
push
movsl
test
aad
mov
mov
mov
mov
in
rorl
stc
dec
xor
enter
mov
mov
jmp
dec
xor
mov
cwtl
addr16
test
and
mov
or
cs
sub
stos
outsl
pop
loop
inc
mov
test
and
push
hlt
jp
xor
and
sub
mov
xchg
adc
into
cwtl
cmp
ss
int3
icebp
adc
jns
stos
mov
dec
push
inc
popf
lret
and
pop
popl
xor
out
cmp
mov
inc
and
xor
lods
dec
insb
pand
or
jae
mov
jno
popa
enter
adc
add
sarb
mov
std
inc
scas
pop
jb
ljmp
pop
sub
int
inc
enter
xchg
int
sub
fwait
lods
jmp
xchg
arpl
cmp
mov
xor
jg
add
test
int
scas
inc
shll
sub
lahf
cmp
mov
mov
dec
dec
mov
insb
cmp
das
sahf
mov
lcall
icebp
je
push
aad
inc
mov
hlt
imul
lods
das
mov
adc
mov
icebp
cltd
add
jae
les
pop
xchg
daa
shl
push
jecxz
mov
aaa
pop
xor
pop
notl
xchg
shll
mov
jl
inc
adc
cmpsb
cmp
test
pop
lds
push
and
cmpsl
in
jl
lock
xchg
or
stos
dec
lds
and
jg
repnz
sbb
jnp
mov
jle
add
pushf
xor
stos
pop
push
push
mov
out
das
ficoml
inc
pop
dec
test
xor
aas
xor
add
cs
sti
dec
add
inc
sbb
push
and
bound
cmp
add
testl
fsubrl
sbb
adc
outsb
mov
push
pop
inc
cmpsb
sub
jge
pop
rcll
xlat
idivb
xor
fwait
add
ss
js
fisttpl
xchg
adc
jp
jg
sbb
or
fs
inc
ljmp
popa
pushl
mov
jp
enter
add
and
jmp
cmp
test
lds
inc
pop
pause
cmc
inc
imul
pop
out
rolb
test
pusha
push
fmull
lods
sbbl
cmpsl
and
in
adc
out
mov
loopne
call
ljmp
stc
popa
andl
popf
sub
imul
push
loopne
hlt
fidivrs
dec
pushw
push
dec
arpl
fs
push
testb
fmull
shrb
cltd
push
sub
fs
dec
pop
xor
dec
jns
cmp
push
arpl
inc
jl
jo
test
ja
cli
dec
add
les
cmp
movb
fsub
mov
leave
jmp
test
pop
dec
xor
add
push
jg
adc
xor
mov
push
imul
subl
fcoms
ds
push
and
pop
push
fs
push
imul
movsl
cmp
lock
mov
or
scas
shrb
repnz
into
add
push
mov
test
int
jno
mov
imul
cmp
push
or
lods
pop
cmp
dec
mov
mov
mov
xchg
mov
dec
adc
xor
mov
sti
insb
shll
xchg
sub
push
fdivrs
pop
lcall
pop
sub
fbld
xchg
dec
cli
xlat
test
mov
arpl
mov
xor
pop
inc
xchg
rorb
add
push
pusha
jmp
cmp
inc
pop
mov
stos
add
adc
adc
jns
test
jge
xchg
xchg
or
lcall
jne
and
lods
out
xchg
lock
in
pop
bnd
out
inc
xchg
mov
mov
incl
add
aam
sbb
fisubrs
movsb
jp
pop
cli
jns
sub
in
mov
sub
bound
fs
rcl
pop
sbb
sbb
xchg
or
jnp
xchg
cltd
ds
adc
sbb
je
mov
insl
adc
push
daa
and
test
loope
pusha
es
push
dec
cli
scas
pop
xor
add
push
in
sbb
cmp
dec
inc
inc
fimuls
inc
fmull
sub
test
dec
xchg
add
xor
aas
xchg
jae
cmp
dec
cmp
dec
mov
mov
xchg
mov
pop
push
mov
push
aad
jb
pop
jb
cmpsl
incl
outsb
or
pop
mov
lods
arpl
fld
xchg
jp
gs
cmp
stc
hlt
lret
movsl
mov
sub
outsl
xchg
fldenv
xchg
inc
cmp
jge
and
bound
popf
mov
cmp
lahf
push
mov
std
mov
or
dec
pop
sub
loop
mov
pop
dec
outsl
jmp
sbb
fistpll
sub
mov
mov
xor
aas
mov
xor
sahf
loope
dec
push
inc
push
inc
in
push
fnstcw
xor
mov
add
lahf
jb
loope
stc
inc
lods
rorl
mov
ljmp
or
callw
jb
fnsave
sub
jmp
sbb
cmpsb
clc
xor
bound
sbb
dec
fcoms
push
loopne
out
rclb
cmp
sahf
stos
xor
add
loopne
popf
jne
inc
cli
subb
mov
out
and
push
imul
jmp
dec
ss
enter
mov
cs
mov
pop
push
test
test
in
mov
nop
dec
xchg
adc
pushf
pop
sbb
or
mov
add
data16
sub
jmp
mov
mov
xor
int3
inc
push
idivl
cmp
sbb
or
or
push
stc
scas
pushf
sbb
fs
pop
cld
gs
or
pop
roll
cmp
clc
inc
pop
shl
fadd
imul
lahf
shlb
mov
iret
sbb
ljmp
or
mull
and
rcrb
loopne
mov
orb
hlt
movsl
rcrb
push
and
jl
mov
jno
cltd
in
aad
pop
jle
rorb
push
pop
pop
sub
int
pop
mov
sbb
ret
adc
xchg
test
outsb
test
mov
ficoms
jle
hlt
fdivrs
mov
mov
in
movsb
jecxz
std
cli
in
xchg
ljmp
je
mov
xor
clc
pop
inc
or
pop
xor
movl
push
cmp
test
inc
nop
icebp
iret
aas
ret
fimull
shrl
jmp
jnp
mov
ret
imul
fldl
test
test
fs
xchg
outsb
fsub
movsb
pop
daa
hlt
adc
outsb
vcmppd
sbb
fucomp
mov
aad
jb
inc
cmp
jp
pushf
leave
mov
jge
in
loopne
sub
jnp
andl
push
in
mov
xchg
data16
icebp
gs
mov
cmp
or
js
fwait
prefetch
or
inc
mov
and
sti
and
mov
shlb
in
xor
rcl
inc
int
adc
popa
mov
sbbb
push
jno
enter
icebp
addl
cmpb
cs
xlat
shlb
or
imul
and
inc
jp
push
mov
xor
and
shr
adcb
insl
cwtl
insl
dec
add
inc
movsl
inc
push
xchg
ja
es
loopne
bound
jae
mov
mov
and
mov
test
or
fidivs
xchg
aaa
popa
pusha
mov
pop
andb
dec
mov
pop
inc
mov
loop
test
sbb
sub
shll
jb
call
cmc
dec
cmp
rolb
add
je,pn
popa
adc
mov
test
icebp
pop
xchg
push
mov
jno
into
mov
mov
lahf
sub
mov
pop
dec
sbb
jl
inc
imull
push
mov
add
mov
fmull
cld
es
adc
scas
mov
out
pop
outsl
xchg
jge
mov
dec
aad
and
das
cli
pop
mov
mov
sbb
inc
jle
aam
push
mov
xor
sub
inc
rcr
nop
adc
rolb
lahf
pop
popa
cmc
push
adc
push
lock
pop
stos
int3
stos
lea
add
sub
mov
pop
cmp
lahf
aam
je
ds
hlt
jle
fstps
popa
sbb
cmp
mov
or
imul
fbstp
pop
in
adc
das
scas
hlt
xor
in
xor
adc
jle
out
add
push
popf
xchg
sarb
jo
jle
sarb
add
cmp
mov
movsb
sbb
xchg
cmp
dec
dec
pop
or
or
mov
sahf
mov
dec
dec
aad
lret
cmp
int
dec
cld
cmpsb
scas
gs
out
push
pop
jp
ret
jmp
imul
movsl
jg
push
out
sbb
out
jmp
pop
sub
aaa
stos
xchg
cmp
loopne
push
loop
dec
ja
ret
fld
inc
mov
cltd
mov
int3
mov
popf
mov
xor
cs
popf
scas
out
int
or
clc
shlb
sub
and
insl
pop
lods
jmp
push
inc
xchg
sbb
inc
jno
nop
mov
stos
iret
aaa
ljmp
ret
scas
adcl
sti
sbb
enter
xor
int3
fadds
bound
int
lea
push
jp
pop
into
fs
in
mov
mov
jbe
jmp
movhps
ret
cs
inc
dec
cli
fwait
xor
push
push
sbb
in
add
add
nop
pop
push
pop
clc
clc
dec
push
cmp
cmovae
add
xchg
inc
push
ret
jb
pop
fstpl
enter
inc
imul
adc
xchg
aam
mov
inc
mov
mov
xor
xor
mov
sub
js
and
in
and
data16
popf
dec
add
adc
shll
out
adc
pop
and
sub
mov
pop
xchg
loop
xor
out
and
popf
bound
xor
out
push
sub
jp
jne
xor
push
loopne
pop
in
or
push
pop
jne
xchg
adc
stos
daa
pop
idivl
jbe
or
outsb
mov
or
addr16
sbb
push
or
inc
int
pusha
adc
push
cmp
test
addr16
outsb
scas
cltd
aas
fisubl
or
or
std
sub
imul
jge
xchg
mov
dec
push
cwtl
dec
cmp
test
cld
int3
inc
mov
out
dec
xchg
addb
and
mov
cld
int3
jle
jnp
pop
push
add
divl
jb
dec
sbb
mov
int3
or
fisubrs
dec
lret
xor
lock
scas
shll
dec
jecxz
push
xlat
cmp
sub
mov
push
je
fsubr
out
and
cmp
mov
imul
addr16
sti
jno
cmpsl
mov
push
pop
xorb
push
inc
xor
cwtl
cmp
pop
mov
not
mov
inc
push
add
pushf
dec
or
adc
lds
sub
and
xor
fwait
roll
movl
shrd
and
mov
lea
mov
cmpsl
lcall
pop
bswap
lcall
repz
xor
aaa
ret
int3
sub
xchg
jne
outsb
and
in
pandn
sbb
xor
int3
pushl
mov
notb
pushf
loope
ds
mov
xchg
xor
sbb
lods
hlt
jno
sbb
pop
fsubrl
or
lahf
dec
sub
mov
adc
cmp
adcl
push
in
sti
adc
push
jge
data16
cmp
js
dec
pop
ds
out
xchg
push
sarb
adc
sti
and
pop
xlat
cmp
mov
cmpsl
idivb
mov
ljmp
dec
push
aas
sbb
enter
insl
cmp
mov
mov
rcll
clc
sbb
mov
mov
adc
inc
scas
out
fidivrl
negl
jbe
xchg
mov
call
cmpsb
xor
ja
in
inc
pushf
sti
jg
or
mov
sub
pop
out
and
push
adc
aas
push
pusha
sarb
jae
outsb
xor
std
bound
gs
adc
aaa
les
jecxz
push
cmp
mov
repz
push
and
or
and
sub
sub
lock
mov
aas
jbe
sahf
in
movsl
icebp
jl
mov
push
bound
mov
dec
push
cmp
lret
mov
sbb
push
inc
nop
dec
stos
mov
mov
rcr
xor
jns
and
push
outsl
outsb
loope
or
fs
loop
jl
or
notb
xlat
in
cli
cmp
in
lock
les
mov
inc
push
jne
lea
inc
inc
push
into
inc
sbb
jg
adc
ss
adc
fs
not
push
mov
mov
push
pusha
xchg
add
mov
enter
push
mov
push
mov
xchg
push
test
insb
mov
cmc
jmp
stos
adc
pop
insb
mov
lahf
subl
inc
nop
inc
in
and
add
mov
jmp
negb
xchg
add
sbbl
jge
adc
mov
or
hlt
adc
pop
dec
jg
in
mov
aaa
in
mov
inc
jg
mov
xor
mov
fxam
cmp
sarl
or
add
imul
scas
mov
popa
adc
inc
cmp
mov
push
adc
jg
jae
insl
idiv
mov
push
lock
mov
jae
cld
ret
nop
cmc
adc
add
fs
sub
std
fldcw
leave
push
inc
orl
sbb
mov
xor
lahf
push
fwait
mov
xchg
cs
or
pop
jg
cmc
xchg
jge
add
xor
or
out
rorb
mov
cs
sbb
test
sub
stc
add
lds
cmp
cmp
and
les
push
mov
lock
cmp
stos
push
inc
idivb
cltd
out
jecxz
pop
jmp
insb
and
test
fs
aas
and
ds
or
xor
mov
push
add
js
test
gs
add
add
xchg
sub
ret
addr16
pop
lahf
dec
rolb
sub
imull
mov
xchg
mov
cli
ljmp
mov
push
test
pop
fs
add
call
push
js
cli
jmp
neg
cmp
repz
pop
ds
jbe
lock
jle
mov
fildll
shrl
lods
mov
push
sbb
xchg
push
idiv
mov
mov
push
iret
lds
sbb
fcomps
add
xchg
jmp
jecxz
mov
lret
loope
xchg
xor
in
mov
dec
bound
pop
cmp
iret
and
mov
repz
cmp
imulb
loope
insb
insl
jecxz
ss
push
fdivl
fcoml
xlat
int
lock
cs
jae
pop
insb
jle
daa
arpl
mov
lods
shufps
push
xor
add
xchg
or
push
adc
ret
test
xor
je
mov
stos
out
jp
mov
call
cmp
mov
sub
popf
data16
jnp
mov
daa
mov
or
int
jnp
les
sbb
sub
hlt
cmc
arpl
mov
or
add
cmc
icebp
std
sub
pushf
add
iret
cmp
xlat
ret
shlb
loop
gs
cs
stos
adc
icebp
mov
pushl
addr16
sub
push
adc
xchg
fsubrl
loop
shrl
sbb
sti
insb
scas
mov
ljmp
aas
mov
and
sub
cmc
inc
test
push
inc
or
pusha
dec
aaa
mov
mov
push
rcrb
cli
sbb
jp
push
add
leave
daa
inc
jbe
xor
cmp
mov
mov
lcall
adc
hlt
sbb
addr16
jnp
xchg
shl
loopne
sar
sub
pop
sbb
ret
push
or
mov
ja
or
jmp
and
ret
add
or
loopne
sub
ret
push
xor
mov
ds
mov
testb
loop
add
and
push
jle
push
pop
dec
mov
popf
fsubrs
dec
inc
lea
insb
icebp
adc
js
cmpsl
in
outsl
out
push
mov
rcl
and
xor
popa
popf
lret
das
mov
push
jle
adc
jo
daa
mov
push
das
iret
fmul
or
jbe
cmp
cmpsb
inc
cpuid
std
xchg
adc
pop
cmc
cltd
push
xchg
sarb
ficomps
into
rcll
push
rclb
addr16
cvttps2pi
mov
lcall
adc
kortestw
rorb
mov
push
push
hlt
sarl
push
test
cli
jae
add
stc
mov
cmp
ret
or
pop
sbb
jo
in
add
mov
stos
dec
push
lahf
cli
jns
add
loop
sti
mov
push
dec
je
push
push
lods
pop
mov
lret
nop
push
jge
add
or
scas
test
fwait
pop
inc
add
mov
or
ja
xchg
inc
std
xchg
mov
das
ficoml
test
push
add
jb
push
imul
add
mov
push
xchg
aaa
outsb
pop
jp
or
pop
nop
push
sub
enter
jl
dec
dec
fwait
jbe
test
in
mov
mov
push
lret
xchg
push
push
scas
insl
push
ljmp
ret
adc
fistpll
fwait
aad
nop
cmp
and
cmp
out
lahf
xchg
jecxz
hlt
loopne
ja
push
dec
shr
xor
mov
pop
fdivrs
cmpl
push
add
in
sbb
and
dec
xchg
push
call
mov
or
push
movsb
pusha
pop
jnp
mov
sbb
test
aad
ret
ljmp
lock
outsl
bnd
jbe
mov
rorl
fstl
sub
mov
mov
scas
stos
xchg
xor
fidivs
scas
mov
or
ljmp
and
aad
icebp
enter
xor
sbb
divb
je
sbb
imul
scas
jp
dec
ficompl
push
inc
xchg
add
es
mov
or
int
test
in
in
sbb
enter
mov
push
enter
rol
pop
xchg
cld
enter
or
addr16
adc
mov
mov
adcb
xor
adcl
js
fisubs
xlat
shll
jb
call
and
cwtl
push
and
mov
ret
test
jns
lods
mov
test
and
mov
xchg
mov
popf
push
push
dec
dec
stc
jbe
inc
sub
cmp
add
xchg
lahf
mov
loope
mov
cwtl
jecxz
movsb
add
add
xor
mov
cs
es
pop
daa
adc
dec
call
icebp
and
scas
cmp
mov
fisubrs
clc
outsb
inc
rorb
sarb
sub
xor
pop
and
jle
insl
sub
jg
sub
mov
dec
pop
pop
into
fdivl
push
pop
jb
cmpsb
pop
inc
in
cmp
or
adcl
shlb
inc
push
in
inc
mov
lret
ljmp
into
jbe
mov
sbb
into
mov
lods
cltd
and
hlt
sbb
push
inc
cmp
or
roll
and
pop
xchg
push
dec
mov
pop
dec
ret
outsb
xchg
in
data16
popa
lods
lcall
ja
push
pop
jle
arpl
fidivrl
pop
jge
jp
adcb
xor
scas
jmp
lcall
push
xor
lods
sbb
arpl
fs
adc
cmpsb
sub
push
div
jb
dec
clc
cmc
aaa
insl
gs
pop
sub
je
into
xchg
pop
and
fisubs
jge
jge
or
adc
sub
dec
into
cltd
ret
aam
mov
fcmovbe
stos
pushf
insb
popf
jne
pop
sbb
inc
mov
orb
push
inc
nop
insl
scas
daa
fcmovnu
aaa
pop
and
add
unpckhps
add
lds
jle
xchg
icebp
test
mov
dec
xchg
mov
cmp
loopne,pn
test
mov
clc
loope
and
push
push
into
inc
in
and
mov
inc
orl
stos
mov
scas
fstpt
repnz
push
lock
movsb
inc
out
scas
fnstcw
bound
inc
int3
pop
in
sub
fistps
xchg
push
in
mov
sub
hlt
test
pusha
push
sbb
loop
xor
push
mov
cmp
icebp
popf
test
xchg
fisubs
mov
mov
push
dec
inc
divb
cmc
mov
push
adc
jne
stos
mov
in
mov
push
cli
jb
pop
push
test
pop
aaa
jmp
xchg
aad
mov
ret
mov
inc
movsl
popf
or
sbb
andb
pop
pop
sbb
in
jp
aaa
in
xchg
sti
dec
dec
insl
subl
pop
push
loop
test
cld
pop
cmp
ret
pop
cwtl
pop
dec
pushf
or
dec
mov
push
je
mov
test
mov
xchg
dec
pop
xchg
cld
xchg
sti
shlb
and
pusha
out
arpl
out
jp
adc
aas
dec
cmp
clc
lret
cmc
push
cwtl
cld
gs
sub
scas
jge
pusha
xchg
cs
pop
fidivrl
adc
inc
lds
xor
inc
mov
sysret
add
cwtl
dec
imul
nop
adc
enter
push
scas
add
lret
mov
add
je
lods
or
stos
lcall
loop
mov
and
add
cli
jp
pop
je
mov
incl
add
xlat
or
add
or
pop
pop
inc
les
insl
sahf
mov
xor
lods
sbb
push
inc
push
test
aas
int
lcall
pop
add
jl
movsl
pop
lcall
adc
mov
pop
data16
lock
fwait
xchg
sub
cltd
outsb
push
loop
daa
rorl
aam
addr16
arpl
dec
mov
pop
xchg
decb
popf
cmp
xchg
cmp
stos
sbbl
out
adc
test
sahf
xor
fsubrl
mov
jle,pt
add
lret
adc
cmc
je
push
movsl
mov
js
adc
jo
loope
or
mov
ja
test
and
in
sahf
mov
push
mov
mov
js
decl
sarb
cmp
daa
xchg
lcall
jg
push
pushf
out
popf
in
jecxz
insl
aas
fucomi
jg
outsl
jg
mov
xchg
gs
sbb
sti
dec
mov
xchg
push
imul
rcrb
sbb
jmp
into
and
pop
push
push
sub
mov
dec
cmpsb
or
pusha
adc
add
fidivrs
sbb
out
xchg
xchg
mov
cmp
mov
clc
lock
mov
jg
fcoml
or
cwtl
cmpl
es
daa
push
movsl
xor
dec
and
inc
inc
jnp
or
lret
adc
mov
imul
movsl
xchg
por
outsl
inc
iret
lock
jecxz
mov
push
rorb
or
jmp
xlat
data16
lcall
scas
and
ja
mov
clc
pop
dec
ja
arpl
add
dec
sub
sti
jbe
xchg
xchg
adc
inc
mov
aam
fwait
or
jecxz
insb
sbb
test
cmp
or
or
into
xchg
out
mov
int3
rorl
cmp
dec
jg
jl
and
and
dec
out
in
outsb
jae
mov
daa
pop
fstp
data16
fistps
push
fistpll
mov
jle
std
aad
lret
mov
bound
popa
push
adc
cwtl
sub
test
pop
aaa
jp
inc
mov
xchg
adc
outsl
xor
mov
ja
mov
pop
test
sbbl
data16
mov
into
arpl
stos
lods
hlt
xchg
pusha
push
add
xor
pop
test
sbb
rcrl
fildll
out
or
xchg
mov
cltd
das
dec
inc
fdivrl
loop
sti
mov
push
es
out
jo
mov
lods
out
push
inc
ss
adc
hlt
paddb
clc
mov
imul
xor
ljmp
test
je
sub
test
fimull
jle
adc
and
js
adc
lret
mov
mov
xchg
add
gs
ss
pop
fwait
leave
mov
mov
cmp
lcall
adc
lods
xor
mov
ret
cltd
push
inc
std
leave
push
movsl
adc
dec
adc
enter
rorb
lcall
jp
mov
inc
test
pushf
xchg
inc
loopne
sub
dec
sub
fcoml
pop
cltd
sub
clc
pop
div
outsb
in
or
dec
jge
jbe
scas
add
out
cmpsl
xchg
mov
insl
ret
sbb
pushf
adc
sahf
push
jmp
cmc
jb
bound
ds
mov
aaa
pop
pusha
sub
mov
xchg
in
xchg
call
sub
jl
push
inc
and
loopne
aaa
push
in
mov
or
jnp
mov
xchg
mov
xor
call
xchg
fnstenv
inc
leave
adc
lcall
data16
shlb
mov
push
adc
xor
popl
rolb
and
shl
repz
jp
test
aas
mov
hlt
popa
movsb
enter
cmp
ss
adc
lods
dec
arpl
push
inc
adc
jecxz
imul
add
hlt
movsb
mov
and
test
or
repz
lods
popa
mov
inc
xchg
dec
sub
orl
addr16
xchg
cs
in
push
dec
mov
push
pop
add
rorl
xor
andl
and
add
ja
add
cltd
aad
mov
xor
cltd
in
stc
pop
js
int3
das
xor
sbb
pusha
lcall
test
les
test
dec
decl
pop
push
jae
pop
or
setnp
mov
loope
sbb
ffreep
cmp
jno
pushl
decb
jo
test
pop
out
xchg
cli
enter
lock
orl
push
inc
xor
pop
push
adc
push
jge
call
xchg
mov
lods
loop
xchg
movsb
lods
jle
popf
cmp
mov
ficoms
loop
pop
add
cli
cmp
les
repz
cwtl
cmp
loope
jb
or
inc
dec
hlt
xor
nop
in
bound
dec
pop
scas
das
or
lods
fcoms
sbb
mov
cmc
mov
idiv
sti
lock
gs
mov
mov
das
js
push
adc
cmp
cmc
cmpsl
lods
mov
push
mov
test
mov
pop
add
mov
mov
addl
lock
into
int3
int3
int
rclb
pushf
xchg
hlt
add
sbb
xchg
push
mov
jecxz
in
push
dec
ficoms
jne
arpl
add
loopne
or
inc
mov
pop
mov
sub
pop
or
fsts
jp
cmc
jns
jns
sub
popf
addr16
mov
and
incb
popf
or
outsl
sbb
jnp
add
xor
hlt
movsl
pop
jne
aas
es
sbb
jmp
or
and
jnp
inc
sahf
or
or
fadd
pop
lret
movntpd
lret
lcall
out
ljmp
fstpt
and
shrl
or
les
mov
clc
sbb
xor
sbb
and
cltd
test
adc
adc
mov
add
jns
xchg
pinsrw
loopne
xchg
adc
dec
sub
and
std
inc
add
push
fistl
dec
int3
inc
pop
inc
xor
sbb
aaa
mov
push
bound
mov
sbb
sarl
and
mov
lds
fs
jne
sub
lods
shrl
xor
mov
jae
mov
xor
jo
jns
push
cmp
push
in
lods
sti
repnz
cltd
jae
test
cmp
sbb
xor
movb
push
test
ret
mov
aas
in
idivl
lret
popa
mov
inc
dec
sub
sub
pusha
push
push
lods
and
add
jmp
sub
jb
enter
adc
and
dec
imul
gs
and
xchg
cmp
push
mov
and
andl
mov
cli
cmp
jnp
sbb
mov
insb
xchg
adc
sbb
int
cmpsb
daa
subb
fs
fs
loope
mov
cmc
mov
and
xchg
xchg
shll
add
ss
test
inc
lahf
mov
out
lret
dec
or
or
push
jmp
xor
cwtl
xlat
sbb
inc
in
out
push
jns
pop
shrb
fwait
mov
shll
ds
cmc
dec
push
enter
outsb
adc
adc
xchg
lods
xor
mov
adc
cs
xchg
cmpsl
add
aaa
in
jg
cwtl
lds
sbb
and
push
or
mov
push
xchg
dec
sub
pop
xlat
xor
push
jp
mov
and
fildl
sub
je
xor
cmp
dec
into
jp
fwait
or
xor
cli
sub
jmp
inc
lods
sub
push
dec
aad
imul
xchg
insl
xchg
mov
sbb
aad
xchg
test
pop
mov
outsl
xchg
and
popa
and
movsb
out
loopne
adc
stos
enter
notl
mov
stc
in
ds
and
push
cwtl
insl
push
cmp
and
and
pop
pop
push
mov
arpl
jle
loop
pop
mov
cmpsb
mov
inc
xchg
cmp
les
mov
sbb
fnstsw
bound
sub
jl
dec
aam
xchg
lods
mov
enter
sahf
jno
out
and
inc
call
enter
mov
or
cmpl
dec
cs
and
gs
ret
popa
cltd
mov
cmp
in
mov
mov
ss
dec
cmp
cmc
popa
jle
lcall
into
or
aas
mov
push
in
jae
out
call
aam
and
adc
or
push
ret
daa
jne
dec
leave
outsb
adc
fcom
pusha
xchg
in
xor
lcall
lea
mov
mov
pop
sti
mov
icebp
test
sub
cmp
add
lcall
sbb
call
stos
out
jl
mov
pushf
jmp
cli
cmp
and
mov
xchg
and
dec
cmp
pop
or
scas
mov
lcall
fwait
leave
mov
aas
incb
pop
xor
jecxz
sahf
jb
out
mov
add
jo
cmpl
scas
insb
mov
mov
inc
dec
add
adc
sti
cmpb
push
mov
jb
fnstenv
pop
jnp
or
xor
cmp
lds
out
mov
dec
xchg
cwtl
js
sub
aad
pop
ret
xor
pop
in
mov
sbb
gs
leave
std
popf
ds
mov
mov
jnp
stos
mov
push
ljmp
cmpsl
adc
ret
xchg
mov
hlt
sub
adc
cltd
dec
pop
cwtl
mov
sbb
cmp
push
enter
lods
push
mov
iret
je
popa
aas
mov
scas
xchg
lds
inc
push
movsl
jmp
call
ss
push
and
xchg
imul
iret
mov
cmc
call
mov
cwtl
ret
movaps
les
mov
dec
arpl
aaa
cmp
or
xchg
sub
mov
inc
cmc
call
shl
mov
pop
fcoml
cmp
push
mov
dec
int
adc
das
xacquire
xchg
std
mov
ret
scas
out
jb
xchg
aad
xchg
inc
mov
les
mov
mov
in
adc
std
xor
cmpsb
cs
fld
xor
sub
or
pop
rolb
jp
cmp
mov
call
mov
xor
add
jge
dec
sbb
stc
and
cmpsb
shrb
enter
lods
mov
outsl
xchg
inc
jno
sbb
stos
rolb
jg
and
and
sbb
push
clc
mov
mov
imul
sbb
and
or
retw
cmp
aas
lock
push
xchg
ret
jno
pop
adc
sub
push
mov
inc
xchg
test
movb
sub
adc
cwtl
dec
mov
mov
or
gs
adc
xchg
jbe
add
xor
in
outsb
mov
aaa
add
daa
in
cmpb
add
into
les
in
mov
inc
adc
jne
das
inc
lret
add
sbb
stc
push
jmp
sbbb
push
int
jne
insl
cs
push
fwait
adc
xor
push
fisubs
fs
ror
and
in
subl
shrl
push
adc
jne
rol
cli
insl
es
sub
clc
xor
jg
hlt
stos
ret
and
jmp
mov
xchg
dec
loope
mov
jo
add
mulb
nop
lds
shll
cltd
cmp
sti
out
pushf
inc
xor
leave
sbb
mov
jo
jle
adc
mov
stc
cmp
sbb
loope
pop
fldenv
adc
sbb
loop
jmp
adc
in
mov
ljmp
jnp
and
adc
or
stos
or
xchg
xor
je
cmp
sbb
nop
push
neg
jle
inc
push
sbb
divb
inc
leave
loope
and
jl
inc
jle
jns
push
in
mov
testl
mov
ds
sbb
adc
insl
out
xchg
xchg
jg
pop
cmp
pop
jns
les
cs
sbb
outsl
imul
mov
mov
stos
add
inc
cwtl
mov
cmp
call
dec
jle
or
sarb
call
jne
jno
movsl
inc
pop
loopne
lahf
cmpsb
aam
push
imul
arpl
dec
add
pushf
cmp
pop
xor
jne
loope
icebp
xchg
inc
fcoml
jne
mov
add
jp
mov
inc
shll
xor
push
nop
add
adc
and
adc
loope
enter
xlat
shrl
repz
mov
jo
and
pop
lea
xorl
or
sarl
mov
dec
mov
fdivrs
push
and
xlat
in
repz
das
aam
movsl
fucomp
jne
testl
dec
jbe
xchg
lcall
insl
adc
in
sbb
add
inc
cmpsb
sbb
xchg
ds
push
int3
mov
pop
stos
mov
out
sti
out
icebp
adc
and
mov
jecxz
imul
lret
std
dec
sub
xlat
outsl
cmp
in
inc
data16
out
jmp
mov
jl
dec
repz
scas
arpl
dec
iret
out
push
add
mov
loope
push
stc
mov
add
lret
mov
cmp
fs
mov
outsb
sbb
ret
aas
lret
ret
fildll
jo
inc
iret
popf
insb
push
fwait
loop
rolb
aam
icebp
cs
jmp
mov
jl
xchg
dec
rol
fistps
mov
sub
adc
xor
cld
stos
popa
xor
cmc
call
mov
cmp
lods
add
mov
adc
into
scas
lods
das
out
or
push
xchg
jb
outsl
ja
dec
imul
cwtl
rolb
clc
dec
xor
movsb
mov
js
loopne
add
int3
or
je
mov
lret
cli
mov
and
push
pop
mov
dec
jno
xchg
adc
fwait
jmp
arpl
push
ljmp
cltd
inc
sub
cmpsl
imul
inc
mov
addr16
cltd
jle
rorl
adc
pop
iret
adc
mov
mov
pop
xchg
inc
mov
sub
sub
fwait
mov
push
xchg
adc
mov
mov
sbb
outsl
sbb
inc
cmova
jns
sub
and
inc
mov
dec
mov
out
les
push
cmp
cmpl
sbb
adc
movsl
push
add
aam
rcrb
xor
in
mov
mov
pop
adc
rcr
mov
outsb
fwait
enter
out
jge
stos
sarb
enter
out
jge
pop
pop
fisubl
pusha
outsl
lea
sbb
jecxz
pop
or
arpl
push
cmp
popf
mov
pushf
lahf
dec
leave
jge
inc
jmp
push
out
cmp
cmc
push
or
fdivrs
push
movsb
fucom
cmpsl
jne
xlat
adc
inc
hlt
icebp
pop
imul
lea
xchg
jge
inc
mov
xchg
xchg
pop
test
fisubrl
dec
xchg
cmpl
sub
cld
cmc
jecxz
ret
lea
sbb
adc
imul
dec
icebp
push
fistpl
mov
adc
add
test
test
add
sub
sub
fbstp
pop
jg
or
call
daa
adcl
addr16
cmp
push
push
lock
je
cmp
or
bound
mov
fmul
cld
enter
xchg
fs
add
jl
sub
jecxz
fs
push
inc
aam
sub
scas
mov
inc
mov
popa
pop
decb
nop
push
add
cmp
scas
mov
mov
xchg
shr
ret
lea
pop
pop
test
ds
aad
and
xchg
lret
repnz
jae
test
mov
call
pop
out
pop
pop
mov
cltd
mov
lret
mov
pop
jp
sahf
adcb
add
inc
aas
inc
jl
xchg
mov
in
dec
popa
stos
dec
inc
scas
shlb
scas
mov
out
mov
aad
fs
lcall
cwtl
xchg
nop
cmpsl
add
bound
jmp
pushl
xchg
cmpsb
fiaddl
xor
jno
dec
xor
dec
sub
popa
dec
repnz
sbb
cmp
push
adc
shl
cld
push
int3
or
fadds
mov
xlat
cmp
sub
cld
pop
dec
pop
sub
inc
int
push
adc
push
mov
je
lret
ljmp
pop
sbb
out
cmp
add
dec
testl
sbb
adc
xor
dec
mov
inc
shlb
fs
mov
adc
pop
pop
in
fwait
xor
movsl
ljmp
adc
lret
cmp
jl
add
clc
idivb
jl
sub
scas
pop
push
mov
xor
ja
addr16
push
pop
add
repnz
jl
popf
arpl
das
and
leave
cmpl
lret
mov
xor
ds
repz
ror
leave
pop
lahf
cmpsl
movsl
jp
stos
xchg
scas
mov
sbb
fidivl
je
xchg
xchg
inc
scas
mov
imull
xchg
inc
cli
xchg
js
dec
mov
mov
mov
out
cmpsb
mov
sbb
hlt
loope
dec
push
xor
pop
inc
outsl
leave
inc
loopne
push
scas
pop
fimuls
adc
clc
inc
loopne
cmp
and
fucomp
push
or
sub
xor
ja
cmp
sti
jge
mov
cltd
pop
mov
pusha
scas
fadds
sub
xor
sti
adc
pusha
jae
add
dec
cmp
les
xchg
cwtl
test
divb
or
jg
pushf
xchg
ficompl
adcl
pop
in
push
xor
fldenv
addr16
dec
push
add
fisttpll
outsb
pop
cmc
mov
bndldx
imul
daa
fadd
push
jns
adc
cwtl
rcl
sahf
fucom
add
lea
and
push
mov
mov
mov
stos
les
cs
inc
cmpsb
jl
aaa
xchg
sub
movsb
or
push
mov
jb
dec
sub
pop
cmp
fistps
lods
xor
addr16
lock
sub
cmp
mov
dec
pop
push
adc
jl
stc
mov
loopne
movsb
fs
scas
lcall
xor
pop
fs
je
jle
pop
jmp
cld
dec
sahf
fmul
loope
fidivrs
lea
lcall
divl
and
arpl
or
clc
jo
xchg
pusha
push
in
fldl
sbb
sub
jno
or
dec
cmp
js
mov
pop
jae
pop
jl
es
mov
jl
mov
jp
sbb
sbb
push
aad
inc
lds
pop
add
mov
shll
mov
inc
rolb
sub
sbb
pop
stc
test
insb
xchg
cmpb
sarl
mov
imul
pop
adc
jmp
pop
int
pushf
cmc
dec
mov
idivb
rcrb
sub
loop
and
movsb
sbb
push
cld
fidivs
mov
clc
jle
test
test
mov
push
jnp
loope
jae
fcoml
add
loope
cwtl
pop
xchg
stc
out
mov
mov
jmp
jl
scas
fldenv
push
add
decl
je
dec
mov
jb
push
pushf
jno
xchg
cwtl
les
lret
cmp
in
addr16
xchg
jmp
mov
mov
fs
fs
fimuls
outsb
inc
daa
insl
dec
sub
sub
mov
inc
pop
clc
add
push
pushf
into
fwait
mov
subl
lret
adc
mov
sbb
loopne
pop
int3
jp
fs
ret
pop
in
outsb
fisttps
outsb
jp
push
mov
mov
aad
js
pop
test
lods
add
repz
std
pusha
fsts
add
dec
pop
loop
lret
ficoms
mov
js
addr16
pop
jecxz
icebp
pop
sarl
mov
xor
jae
ret
outsb
sti
mov
cmpl
scas
push
mov
mov
hlt
xchg
in
add
into
lahf
mov
jnp
pushf
loop
shrl
pushf
push
pop
cmp
pushf
push
lods
js
bound
sahf
inc
cmp
lods
sub
cltd
xchg
rcll
pop
fxch
push
test
incb
daa
out
mov
fbstp
sqrtps
rol
dec
add
add
adc
mov
ret
cli
lcall
test
pop
aas
and
leave
pop
adc
dec
sub
ss
out
dec
mov
push
push
in
cmp
jbe
jo
and
jecxz
xor
jbe
add
mov
outsb
mov
jle
mov
or
daa
and
repnz
in
fidivrs
gs
in
aad
adc
pop
inc
pop
sub
inc
push
lret
das
mov
aas
pop
sbb
scas
and
jo
mov
fisubrl
pop
sbb
jmp
or
cmp
add
ficomps
test
in
push
xor
mov
cmp
out
mov
xchg
loope
fidivs
mov
inc
fwait
loopne
xchg
fstpl
mov
repnz
ficomps
inc
test
aam
sar
pop
and
mov
adc
sahf
mov
sub
mov
addb
jecxz
lret
ds
jge
es
and
or
jno
into
mov
ljmp
aaa
xchg
add
mov
out
jb
cmp
or
jle
inc
cmovo
ficoms
bound
pop
mov
lods
sbbl
clc
repz
shrb
xor
ret
mov
cmc
fmuls
mov
rcl
pop
iret
inc
test
cmp
cmp
ss
sub
data16
jne
aaa
pop
xchg
xchg
or
add
jecxz
mov
inc
loop
insb
cltd
fs
or
mov
aaa
in
filds
cmp
mov
sub
pop
add
cld
into
adc
mov
jg
ss
test
jns
xchg
shll
cmp
add
jge
les
movsb
add
jl
and
jbe
imul
movsl
jg
push
push
lcall
jmp
hlt
adc
mov
addr16
xor
xor
jbe
sbb
sbbl
movsb
cltd
in
jo
push
fiaddl
hlt
scas
xor
mov
rol
mov
or
aam
ljmp
pop
aam
push
xchg
pop
pop
or
shr
sahf
lret
loopne
push
in
add
repnz
clc
lds
cmp
cmp
adc
call
test
mov
mov
add
lock
cltd
xor
fsubr
fwait
mov
xchg
mov
xchg
dec
shll
jle
popa
jecxz
movb
xor
popf
bound
xor
xor
mov
cmpb
aad
fcmove
cmpsb
aas
and
cmpsl
enter
adc
pop
jecxz
jl
xchg
repz
bsf
call
xor
sub
sub
add
add
sarb
bound
div
push
shlb
pusha
pop
add
not
dec
cli
mov
leave
dec
xchg
adc
pop
dec
nop
jle
jnp
sti
push
in
jmp
pop
or
fcmovnbe
ret
iret
lret
dec
mov
into
dec
aas
lods
popf
pop
xor
fst
dec
stc
jecxz
lcall
ret
add
add
adc
int3
dec
mov
inc
add
in
sub
fdivs
mov
cmc
incb
es
scas
jp
adc
xchg
xor
popa
aas
mov
gs
mov
or
dec
das
pusha
inc
add
xchg
scas
sub
mov
arpl
loope
xchg
pushf
stc
scas
lods
adc
faddp
jecxz
push
lea
clc
out
jecxz
push
scas
inc
sahf
sbb
jmp
and
fld
adc
lahf
pop
push
fimuls
ret
add
jg
rorb
jb
or
rcrb
cld
mov
shlb
inc
inc
aas
mov
jle
fnsave
jae
shrl
sbb
ds
cmp
stc
mov
xor
jp
adc
mov
mov
adc
and
push
fisttpll
inc
pop
dec
add
add
mov
loopne
xor
outsb
inc
je
daa
mov
and
add
insl
inc
cs
pop
test
ret
cmpsb
int3
out
jo
push
arpl
xlat
pushl
inc
jg
pop
repz
test
aaa
add
into
fcmovb
push
cld
jns
inc
mov
std
ret
insl
inc
imul
fldl
xchg
fstl
mov
les
test
add
or
xchg
cli
xchg
pusha
cmp
addr16
or
cld
ds
and
mov
rcll
push
or
xchg
cmp
adc
adc
pop
out
call
aam
mov
jmp
data16
ljmp
pop
pop
or
mov
out
xor
imul
xor
adc
push
xor
xor
push
imul
mov
pop
bound
sbb
jbe
jo
pop
jp
jl
fadd
std
cmp
mov
cmp
out
add
daa
push
ret
rolb
pop
cmp
or
lret
mov
or
jne
mov
int3
dec
mul
scas
int
jbe
adcl
mov
jnp
cmp
xor
adcb
and
xor
push
repnz
pop
jmp
inc
cmpsl
in
push
test
dec
pop
imul
or
add
into
xor
push
daa
mov
repnz
add
enter
jmp
out
loopne
pop
inc
pop
and
mov
js
ret
mov
lret
cltd
sub
pop
mov
mov
mov
pcmpgtb
sub
repnz
clc
fidivrs
push
cwtd
mov
and
ficoml
divl
inc
scas
ljmp
pop
lock
nop
inc
mov
sub
leave
xchg
mov
stos
shll
scas
jg
or
mov
or
movsl
mov
subb
pusha
cwtl
and
psraw
cmp
add
in
mov
out
inc
inc
enter
fldln2
pop
jecxz
call
dec
pop
ss
outsl
cmpsl
fs
pop
fisttpll
push
jg
gs
rorb
mov
mov
aaa
pop
dec
enter
out
rclb
jb
dec
inc
sub
dec
mov
ja
xchg
and
jl
jecxz
adc
inc
mov
pop
pop
lret
stos
inc
xor
call
mov
iret
sahf
jl
out
sub
shll
ret
aad
scas
and
dec
jp
inc
xchg
div
mov
lcall
inc
sbb
cmpl
imulb
push
xchg
mov
fwait
xor
cmp
cmpsl
inc
aad
nop
xchg
mov
dec
add
lret
dec
dec
sahf
cmp
pop
ret
out
cmpsb
adc
lret
jb
lods
pushf
mov
lret
iret
or
into
test
imul
ret
popf
dec
sbbl
xor
scas
add
faddl
push
jp
sbb
sbb
and
icebp
outsl
shlb
lock
test
inc
dec
sarb
enter
shll
mov
push
mov
aaa
jae
xlat
data16
xor
shlb
cmp
fs
dec
dec
scas
mov
push
inc
mov
push
mov
jnp
sbb
and
and
mov
adc
fs
es
sub
push
mov
sub
ret
mov
sub
cmp
lods
jne
loope
jle
cmpsl
aam
pop
and
add
test
sbb
push
idivl
fsub
insb
inc
mov
push
outsb
jns
sub
xchg
std
stc
sub
cmpsb
shr
fnstsw
pushf
shr
and
sub
out
inc
mov
push
iret
aas
bound
mulb
cmp
sub
jl
pop
mov
and
leave
sub
mov
clc
add
scas
xor
mov
shlb
sbb
pop
test
push
outsl
dec
mov
xchg
adc
test
push
or
mov
cld
dec
in
fisttpl
cmp
cld
cltd
das
mov
dec
out
add
pop
ds
ss
mov
adc
fidivs
lds
jp
sbb
push
or
or
fnstenv
jns
dec
sub
sbb
aas
push
push
inc
dec
icebp
and
lcall
sub
repz
pop
lods
jecxz
and
adc
std
pushf
imul
jg
test
mov
cld
enter
cmpb
xlat
mov
clc
push
sar
out
mov
popf
dec
std
out
insb
pop
push
insl
inc
add
aaa
mov
out
lea
aad
enter
pop
and
inc
fxch
push
pushf
jg
scas
push
imul
ss
enter
inc
mov
cmpsl
test
sbb
inc
lods
js
lock
sub
jns
xchg
fsubl
adc
mov
pop
cmc
xchg
mov
or
mov
mov
sub
cli
enter
add
pop
pop
popa
pop
gs
jg
pop
lret
ljmp
iret
sbb
repnz
mov
jmp
enter
insl
fcoml
jp
mov
out
lret
or
inc
push
fwait
mov
pusha
in
adc
loope
repnz
data16
xlat
cli
mov
lds
jmp
aam
sub
xchg
xchg
or
pop
js
pop
fstl
sub
sahf
mov
data16
xchg
cmp
leave
push
cmp
aas
dec
jecxz
dec
cmp
xchg
and
inc
sub
cmp
xor
pop
dec
sti
lret
je
gs
push
lcall
fistpll
mov
mov
xlat
jl
push
dec
inc
cmc
mov
and
mov
call
sti
mov
cmp
es
sbb
adc
xchg
in
pop
push
pop
sub
lcall
jecxz
std
xor
aam
and
out
cltd
lret
addr16
loope
stos
add
roll
aad
dec
pushf
mov
cmp
lcall
repnz
pop
movsl
xor
je
stos
mov
cmp
push
add
jle
cmp
enter
xor
and
int3
hlt
mov
movsb
movsl
cmpsl
mov
ljmp
or
cmp
mov
leave
pushf
pusha
xor
mov
movsl
or
push
lahf
lret
roll
mov
pop
push
orb
mov
pop
mov
xchg
or
lds
push
lods
shl
mov
int3
fmuls
imul
cld
add
std
roll
push
adc
rcll
sti
and
sbb
and
movsb
adc
rolb
stos
in
dec
cmpsb
jb
mov
stc
pop
mov
inc
add
aad
dec
or
adc
xor
pop
inc
arpl
lahf
mov
in
mov
adc
sbb
push
pop
int
scas
mov
pop
mov
fs
lret
lock
cmp
add
mov
aam
ds
mov
int
adc
and
and
cs
fwait
ret
cld
inc
lods
fistps
jmp
cmp
fisubrs
mov
rcrl
in
lret
adc
sarl
jg
stos
ret
sahf
fcmovnu
push
mov
pusha
jbe
inc
out
push
sbbl
mov
xchg
cmp
or
jl
pop
loopne
cmp
cmpsl
cltd
icebp
es
sahf
dec
jo
lock
mov
jl
xlat
adc
mov
pushf
inc
or
sub
lret
outsl
or
pop
popa
test
leave
stc
jb
cmp
pushf
and
call
push
mov
and
jnp
or
xchg
push
and
int3
adc
aad
jmp
xlat
and
sub
add
xor
mov
push
mov
gs
xchg
mov
sub
or
fs
stos
popf
cmp
add
and
fisubl
pusha
fsubs
xchg
or
addr16
cs
xor
ja
int3
out
cld
add
mov
cmp
push
mov
mov
mov
jmp
sub
sbb
hlt
xor
add
or
aas
cld
sbb
cmpsl
lret
jno
test
and
movsl
push
adcl
les
in
ja
mov
int3
adc
sub
test
mov
rcrb
sub
mov
sbb
add
or
pop
lea
adc
popa
or
fisttps
mov
mov
fcompl
add
div
mov
and
adc
and
call
mov
loopne
clc
add
loop
pop
jg
rclb
mulb
push
adc
mov
xchg
fs
jae
movups
mov
jnp
jmp
pop
sahf
in
mov
rorl
push
mov
pop
xchg
pusha
adc
stos
push
pusha
out
out
cmp
pushf
and
push
and
or
and
sub
xlat
adc
adc
xorb
sar
cwtl
dec
jmp
xchg
enter
lods
cs
or
jecxz
neg
inc
lods
dec
jae
int
fisubrs
xor
and
xor
mov
pop
cmpsb
leave
mov
mov
icebp
inc
and
cmp
cmp
popa
jno
xchg
dec
jb
push
sbb
test
aas
movsb
mov
adc
push
subb
lcall
adc
mov
jecxz
popf
pop
xchg
test
mov
popa
daa
inc
jnp
add
pop
or
stos
mov
push
lret
fsub
cmpsb
pop
movsl
shlb
mov
jg
mov
or
jbe
inc
mov
pop
imul
jae
fs
lock
loope
movsl
adc
dec
sub
fwait
mov
and
push
mov
inc
hlt
push
xchg
in
mov
shlb
mov
movsb
mov
idivb
dec
je
outsl
or
fnstsw
subb
imul
cmp
xchg
add
inc
push
adc
mov
xchg
jmp
cmpsl
and
outsl
push
les
sbb
xchg
mov
jnp
sbb
add
inc
sahf
cmp
ja
sub
add
das
pop
adc
sub
cs
inc
adc
loopne
rorl
xor
push
rorl
test
lock
or
shlb
cmc
nop
gs
adc
jecxz
xor
pop
inc
push
and
lret
fcmovu
jmp
insb
hlt
stos
data16
adc
hlt
movl
cld
in
lock
or
int
std
adc
icebp
fstp
pop
cld
cmp
ret
je
cmpsl
mov
push
in
aad
xchg
je
jle
push
dec
sbb
lock
jns
cmp
push
test
xchg
out
jbe
mov
cmp
mov
imul
scas
loop
and
mov
add
or
shlb
addb
xchg
insl
mov
fidivrs
ja
cmpsl
xchg
xchg
mov
sbb
jnp
pop
call
jne
fnstsw
inc
push
lds
inc
push
adc
ffreep
stos
mov
iret
jbe
aam
cld
mov
insb
mov
movsb
mov
icebp
push
jmp
or
mov
pop
stos
dec
jecxz
and
je
jmp
or
dec
mov
fildl
lds
cwtl
out
neg
cmp
mov
pop
jae
mov
xchg
jmp
fisubl
in
inc
adc
test
xor
bound
lock
push
push
pop
mov
cmpsb
cmp
sbb
incl
bound
sahf
mov
pop
mov
hlt
adc
loope
repz
rcll
or
adc
jge
shrl
mov
jp
inc
push
test
xchg
dec
sbb
ret
mov
jo
loopne
pop
mov
jne
sub
sbb
std
xor
mov
xchg
enter
and
push
push
into
and
fadds
sbb
pop
sbb
and
std
mov
fisttpll
mov
inc
push
jns
dec
sahf
push
adc
gs
inc
adc
out
andb
push
dec
mov
cli
push
outsl
hlt
nop
jno
ret
lcall
and
mov
dec
push
adc
xor
sub
jmp
xor
mov
mov
lds
sub
mov
inc
jb
jge
jno
pop
ret
test
rcll
push
pop
push
dec
xchg
pop
psubusb
das
icebp
xor
lods
rcrl
cmc
imul
jae
sbb
ret
int3
pop
mov
cmp
nop
push
movsl
mov
insb
movsb
xchg
and
pop
lret
add
dec
ret
out
sbb
popa
add
xlat
ss
aam
pop
cmp
int3
sbb
in
add
mov
xchg
gs
cmp
shlb
pop
das
pop
je
push
fistps
mov
cwtl
and
les
jl
mov
jbe
hlt
gs
push
cmp
scas
add
aam
push
fisttpll
inc
lea
pop
rolb
das
sahf
in
push
rorl
popf
push
pusha
data16
and
cs
sahf
movsb
xor
sbb
xchg
mulb
pop
jno
mov
inc
xor
sbb
ret
leave
hlt
cmp
push
addr16
inc
out
add
ljmp
cltd
data16
cwtl
mov
cwtl
imulb
dec
rcrb
mov
movsl
mov
xchg
xchg
outsb
ljmp
std
pop
xchg
xchg
pop
adc
fs
mov
outsl
xchg
cmc
outsl
in
idivb
arpl
leavew
xchg
lea
ret
push
int
sbb
jmp
mov
arpl
and
xchg
xor
xchg
bound
jp
scas
cmp
clc
adc
sbb
mov
cmp
cld
addl
unpcklps
pop
imul
jmp
mov
inc
imul
dec
idiv
lret
into
loop
cmp
mov
out
stc
test
out
sbb
scas
lcall
pop
add
int3
jnp
pop
fidivrl
sbb
dec
pop
adc
xor
lods
addr16
frstor
insb
adc
fsts
cmc
add
shrd
in
add
or
enter
orl
loopne
pop
movsl
inc
insl
or
push
scas
xchg
xor
addr16
lods
sub
jb
dec
inc
add
scas
mov
pusha
xor
or
mov
iret
adc
lahf
movsb
enter
push
scas
insb
ret
sub
xor
sub
daa
leave
mov
jle
dec
jnp
mov
mov
ss
inc
dec
push
lods
pop
call
sub
repnz
or
jecxz
bound
popf
aaa
test
dec
popl
mov
pop
dec
out
jmp
pusha
pushf
push
stos
dec
sti
sahf
bts
push
cmpsb
in
fidivs
mov
inc
adc
or
jbe
push
lcall
or
js
ffreep
dec
insb
shl
jecxz
leave
jmp
js
and
adc
or
or
push
lds
push
clc
je
call
adc
arpl
ljmp
pusha
xor
pop
xchg
pusha
in
mov
fs
int3
movsl
rcrb
pop
popa
stc
mov
jp
popl
fisttps
jmp
mov
fld
mov
inc
ss
and
xlat
cmp
xchg
mov
add
sti
test
pop
xchg
inc
repnz
inc
pop
stos
repz
or
inc
pusha
in
push
sti
push
jnp
addl
or
pop
mov
lret
push
int
push
jge
or
ret
inc
int
inc
aas
fiaddl
xor
adc
xor
out
xor
int3
and
lods
xchg
pop
mov
add
rolb
popf
jge
xlat
xchg
loope
dec
dec
jns
mov
int
add
mov
sti
adc
gs
aaa
out
inc
xor
xor
dec
xchg
dec
inc
mov
xorb
gs
jb
xchg
int3
rclb
xchg
add
mov
xor
enter
dec
test
mov
jns
adc
in
sub
cmp
loop
aad
dec
push
add
test
lcall
xchg
cltd
or
or
mov
jnp
in
sbb
push
test
adc
or
add
push
cmpsl
sarb
cmp
sub
push
stos
xor
cld
scas
and
mov
out
es
jne
push
xchg
std
and
mov
sub
test
stos
dec
imul
iret
push
pop
xor
leave
pop
int
jne
nop
jecxz
xchg
insl
je
loopne
es
repz
pop
addb
call
es
xlat
dec
loop
les
inc
hlt
xor
pop
push
and
daa
mov
xor
movsb
fmulp
jmp
mov
lods
mov
and
lahf
xchg
iret
andb
loope
sub
vpmacssdd
bound
pop
out
shll
or
das
sbb
mov
dec
fs
mov
push
xchg
mov
mov
scas
cld
ljmp
push
pop
inc
lahf
or
aad
loop
xchg
fimuls
in
jge
in
push
into
xor
push
shl
icebp
sub
add
gs
xorl
mov
ljmp
and
push
imul
xlat
std
in
jle
pop
insl
adc
sti
pop
insl
push
pop
inc
adc
xor
xor
js
jnp
pop
xchg
in
mov
pop
je
cmp
test
lock
roll
fisubrl
inc
stos
sub
add
cmp
mov
loopne
mov
inc
dec
rcrl
rorl
and
xor
dec
rol
nop
sbb
xlat
xchg
orb
scas
push
je
stos
das
loopne
dec
out
in
jg
sbb
pop
mov
and
inc
enter
test
xchg
and
incb
inc
ret
pop
sub
stos
mov
push
add
mov
mov
sahf
adc
jl
repz
loopne
repz
jb
fwait
and
sub
fildl
mov
bswap
cld
cmp
loope
mov
fstpl
je
mov
addl
push
xchg
pop
nop
scas
xchg
lock
sti
in
cmp
sub
cmp
dec
fwait
jecxz
or
pop
in
mov
test
mov
popa
mov
psadbw
lods
stos
mov
cmp
push
pop
jl
fdivrs
mov
mov
mov
cmp
jno
andl
enter
imul
push
test
insl
xchg
jno
int
movsl
mov
mov
and
insb
ss
test
cli
jl
dec
rorb
adc
jle
xlat
sbb
cmp
les
ljmp
aam
adc
js
ss
mov
add
mov
les
mov
aas
pop
fwait
cmpb
jnp
loopne
xchg
shrb
pop
repnz
pop
jl,pt
aas
mov
mov
popa
adc
xchg
das
dec
jb
mov
sub
mov
mov
jmp
aad
cli
dec
cmp
daa
inc
lcall
cmp
orb
scas
loope
or
jno
sbb
or
xor
shrl
xchg
mov
lcall
push
popa
push
jp
dec
push
movsl
jb
nop
push
jns
mov
sti
lds
bound
rcll
cli
cwtl
pushf
xor
or
jno
xor
inc
das
jbe
sarl
mov
jno
cwtl
lock
inc
mov
or
pop
pop
push
cmp
sbb
xchg
cmc
or
mov
add
iret
ja
jnp
fwait
and
mov
and
sar
or
loop
jp
xchg
sahf
in
adc
cs
sbb
icebp
inc
faddp
daa
gs
lahf
push
lock
das
dec
push
push
inc
adc
scas
andb
push
cli
mov
adc
add
repnz
push
adc
jnp
add
js
mov
je
jne
ljmp
jmp
sbb
fsubl
ja
or
xchg
mov
sub
nop
scas
jg
inc
fsubr
push
aam
and
pushf
push
jbe
mov
sbb
mov
mov
iret
shlb
in
pop
fdiv
xor
loop
cmp
push
incb
lahf
leave
fbstp
sbb
xor
push
inc
push
popf
push
cmp
cmp
lret
outsb
mov
js
loop
dec
dec
pusha
out
push
pop
add
jbe
sbb
stc
xor
jb
lods
mov
fwait
cmpsl
inc
stc
out
in
loop
stos
imul
rclb
aam
cmp
xchg
stc
mov
ja
call
sbb
cmpsb
add
ljmp
mov
stc
mov
sbb
aad
dec
sub
out
jmp
das
aam
jg
lea
rorb
xchg
call
dec
fsubrl
enter
jg
aaa
sbb
aaa
or
push
pushf
inc
push
cltd
push
shl
mov
mov
int3
dec
xor
sbb
call
xchg
test
sub
repnz
cmc
call
loopne
xchg
xchg
je
repz
jg
int3
push
fldt
andl
inc
stos
or
and
cltd
ljmp
sbb
loope
cmpl
psubusw
xor
xor
fwait
jbe
movsl
scas
adc
mov
imul
fs
xor
jl
jne
in
pushf
cmpsb
inc
xchg
das
pop
sub
xlat
loopne
push
sub
clc
dec
xor
jl
hlt
cld
cmp
shll
leave
repnz
mov
push
dec
mov
add
cs
inc
cwtl
cmp
sahf
xchg
stos
pop
fucomi
cwtl
cmp
fcom
out
mov
mov
fstl
jle
in
push
sub
sbb
lock
nop
int
loope
je
outsb
lods
add
enter
insl
push
lret
jmp
es
repz
xchg
lds
sub
lock
popf
dec
cmp
cs
push
cmp
xchg
test
sub
pop
pop
pop
sub
lods
mov
mov
inc
push
push
and
sub
pop
mov
jnp
test
jg
xchg
dec
out
adc
lds
jae
xor
mov
call
xchg
test
scas
xchg
cmp
sub
sbb
into
cmp
dec
xchg
pop
lds
test
mov
mov
dec
inc
ds
push
je
push
xchg
addr16
mov
aaa
mov
jp
mov
stos
and
or
jne
popf
jo
fdivl
pop
and
add
dec
shrl
inc
sub
pop
mov
mov
add
mov
jmp
in
int
mov
popa
adc
lret
mov
cmc
and
sarb
lods
xchg
push
xor
cmp
and
xchg
mov
fs
inc
mov
mov
out
lds
mov
inc
in
lret
fistps
lcall
stc
sbb
dec
les
dec
into
jl
xor
xchg
sbb
jg
cltd
cltd
cwtl
jne
push
cmc
mov
ja
pop
jmp
push
jecxz
outsb
adc
mov
aaa
pop
xor
lods
ss
pop
lret
and
decl
pop
in
mov
test
repnz
loopne
mov
js
lcall
pop
mov
cmpsb
loopne
bound
hlt
xor
push
adc
decl
fisttps
add
inc
lret
rcr
fidivs
ljmp
add
xor
jge,pt
sarb
inc
hlt
ret
pop
mov
mov
stc
dec
pop
push
popa
adc
jb
dec
push
test
test
cltd
push
shlb
ds
lret
pop
jo
stc
enter
mov
mov
adc
aad
hlt
stos
test
sbb
adc
arpl
das
sahf
jg
push
mov
clc
inc
or
arpl
cmp
jbe
in
mov
out
in
sub
lcall
adc
sar
dec
faddl
jmp
dec
push
xchg
sub
insl
test
adc
inc
ljmp
pusha
adcl
sub
sub
movsb
cmc
pushf
adc
in
ljmp
mov
mov
arpl
cmpsl
iret
stos
pop
mov
adc
pop
jp
mov
mov
inc
imul
inc
nop
mov
inc
test
inc
cmc
test
mov
aas
aaa
ljmp
xor
add
int3
iret
dec
pop
dec
pop
repnz
adc
fs
lret
sbb
mul
mov
dec
sub
dec
or
scas
add
mov
push
or
jmp
xor
clc
lock
xor
sbb
aam
xchg
insl
shll
arpl
rcrl
xor
pusha
aas
out
arpl
push
and
cmp
mov
loope
clc
ljmp
addr16
in
ss
addr16
andb
cmp
neg
lcall
xchg
rcrl
mov
test
push
mov
mov
inc
mov
leave
jbe
sub
testl
pop
insl
dec
std
insb
lahf
cmp
or
mov
add
inc
addr16
adcb
stos
test
sbb
or
add
in
mov
adc
mov
dec
lahf
inc
ljmp
jmp
mov
mov
jecxz
insl
sub
mov
ret
inc
dec
roll
push
jno
dec
icebp
cmp
dec
scas
xchg
gs
aad
push
popf
pop
incl
decl
add
ror
ret
pop
jecxz
push
add
out
stos
mov
fisttpl
stc
je
cwtl
repz
addr16
inc
loop
idiv
inc
push
out
or
push
fdivrl
lret
repnz
xchg
outsl
and
les
inc
cli
fwait
nop
pop
std
int3
lea
cmp
xchg
mov
out
out
lahf
sbb
fxch
dec
push
test
push
cmpsb
add
jb
je
pop
loopne
int
stc
push
push
cld
popf
mov
add
mov
xchg
stos
lcall
outsb
pop
xor
jle
leave
jmp
or
cmp
add
adc
loope
mov
pop
or
dec
nop
repz
inc
dec
jae
and
mov
scas
testl
mov
add
xlat
and
bnd
je
xchg
inc
jg
jmp
mov
out
xchg
lret
pop
mov
pop
outsl
scas
push
inc
pop
mov
das
sbb
mov
mov
fiadds
cmp
mov
iret
dec
hlt
inc
push
sub
insb
outsb
test
lods
cmc
int3
and
popf
test
int3
mov
lock
add
lods
in
or
pop
stos
xchg
lcall
nop
inc
jo
ss
push
xchg
clc
jbe
sarb
xor
out
xor
fstpt
jge
mul
or
or
loope
je
insb
fisubrs
push
cmc
lds
hlt
je
xor
pop
add
and
or
leave
insb
adc
xor
xor
inc
pop
jno
stos
mov
cmpsl
push
jl
shrl
xchg
sub
xchg
mov
push
pusha
int3
push
and
mov
in
rclb
pop
cs
xor
scas
and
push
std
dec
fisubl
out
lahf
adc
into
sbb
sahf
fdivl
cs
mov
cmp
cmpsl
push
and
shll
stos
sbb
lea
lret
arpl
adc
int
jg
xchg
pop
test
cltd
cmp
sti
mov
addr16
pop
pop
aaa
pop
jo
dec
aas
outsl
cwtl
or
cld
adc
dec
test
out
cli
cli
std
scas
mov
mov
out
adc
jle
lcall
popf
wrmsr
push
leave
popa
inc
and
inc
cmp
lret
es
bound
mov
orb
test
not
mov
push
sarb
dec
outsb
xlat
cwtl
xchg
lds
push
jmp
lods
mov
shll
push
mov
push
dec
cmp
jecxz
mov
repnz
dec
and
or
sbbb
xor
sbb
push
ret
jbe
lods
insb
jle
stc
add
aas
testl
cmpsb
jg
int3
cltd
lret
cltd
lods
dec
aaa
outsl
scas
adc
pop
xchg
scas
cmp
xchg
popa
mov
ljmp
js
dec
in
xor
fbstp
sahf
sbb
mov
jmp
fld
pop
pop
cltd
es
ss
jmp
cmp
clc
aam
mov
sti
inc
inc
mov
test
sub
js
dec
jg
pop
iret
jne
rolb
mov
dec
inc
xchg
js,pt
outsl
or
push
jle
adc
in
loope
push
fcomp
push
adc
mov
movsb
inc
xchg
les
addr16
sbb
adc
stc
daa
xor
incb
push
mov
push
iret
add
sub
iret
sbb
das
mov
or
stos
xchg
lret
inc
addl
bound
push
inc
or
cmpsl
popa
movsb
hlt
pop
adc
and
shl
loop
insb
and
outsb
jp
out
mov
jae
sbb
pop
cs
xchg
repnz
imul
sti
sahf
ret
sub
leave
std
push
fsts
or
or
inc
sti
xor
sub
stc
iret
and
aas
push
in
jo
jno
pop
std
out
add
shlb
xchg
mov
and
ret
mov
mov
imul
push
stos
adc
mov
add
add
out
jl
mov
xor
sbb
test
lcall
push
dec
push
sbb
out
data16
ss
cmpsb
stc
int
push
lock
lahf
mov
jp
lret
pop
push
filds
jp
out
cmpsl
or
inc
repz
mov
lock
in
stc
push
mov
popf
repnz
mov
cmp
pop
pop
imul
cmp
lcall
div
fsub
mov
rcll
rclb
xlat
and
int3
mov
cmp
hlt
xchg
push
sbb
mov
jge
in
mov
ja
or
aaa
dec
lcall
hlt
cmp
lock
sbb
cmp
dec
or
addr16
xchg
ret
xchg
push
or
shrb
push
loop
cmp
shrb
pop
enter
inc
iret
sbb
lds
std
outsb
cmp
dec
mov
dec
jle
hlt
in
or
cmp
lcall
inc
nop
pop
dec
sahf
pop
loope
div
andl
or
inc
fsub
xor
xchg
jmp
xor
push
in
adc
mov
imul
xor
mov
sbb
pusha
lahf
ss
xchg
nop
push
jns
call
loopne
sub
add
jns
fidivs
push
ds
addr16
dec
pop
sub
orb
xor
xchg
and
fsts
arpl
mov
lret
add
fisttps
loop
adc
xor
jne
lock
pop
and
push
mov
test
adc
cmp
aas
ret
xor
inc
addr16
jge
jle
lods
decl
inc
fdivl
repz
mov
adc
cltd
rorl
mov
neg
xorl
push
lret
xlat
in
sub
or
imul
mov
dec
cmpl
pop
imul
stc
cmc
xchg
sbb
nop
sub
lea
push
push
jo
pop
shl
loope
dec
dec
sarl
lcall
in
xor
jbe
dec
xchg
in
fmuls
jb
lods
pop
lods
daa
sbb
xor
iret
in
loopne
add
mov
ja
adc
inc
and
and
mov
lret
jge
dec
jbe
lods
jb
pushf
enter
inc
lret
not
mov
push
movsb
cmp
lret
mov
pusha
pushf
loope
bound
test
lret
mov
add
fcompl
in
xchg
mov
out
fwait
mov
or
add
fs
dec
mov
fsubl
inc
cs
push
cmp
mov
cmp
fists
mov
fildl
mov
popa
push
xchg
push
or
mov
sbb
sbbl
cld
enter
or
sub
aas
add
mov
or
subb
cli
xchg
pop
leave
sbb
test
fs
xchg
xchg
sub
pop
and
cmpsb
mov
push
insl
lds
pushf
xchg
loop
rol
into
inc
das
xor
push
je
ret
mov
xor
mov
test
sub
pop
test
mov
mov
mov
loopne
das
fmul
gs
sbb
fdivs
sub
and
xor
fdivrs
sub
popf
lcall
jge
sub
mov
mov
mov
iret
push
sub
pusha
ret
push
leave
fcoml
cmpsb
sbb
lcall
pop
imul
stc
out
inc
fildll
lods
mov
pop
mov
cmc
mov
mov
xchg
xor
jns
jns
dec
pop
stos
test
cltd
push
popa
outsb
add
pop
sbb
sbb
shlb
sbb
mov
dec
inc
dec
dec
rolb
inc
shl
push
icebp
push
ret
xor
mov
gs
cmp
cmp
pop
pop
mov
lds
negb
lahf
in
add
push
add
adc
adc
lcall
push
andl
fwait
and
and
mov
fcmovnbe
pop
shll
ja
mov
mov
sti
popf
xchg
inc
mov
mov
and
sbb
and
mov
pusha
sub
adc
daa
add
inc
mov
lahf
rolb
mov
in
loope
sar
ror
nop
mov
jmp
or
js
data16
ljmp
int
and
lds
insb
adc
lods
mov
mov
fcoms
test
jge
test
xor
jns
std
pop
sub
push
mov
imul
lahf
mov
gs
cmpsl
cmp
dec
adc
out
stos
imul
xchg
mov
les
mov
insb
test
push
sbb
pop
mov
sub
dec
mov
out
scas
test
sub
ret
inc
inc
xor
inc
cmp
popf
lock
insl
mov
sti
scas
mov
pusha
movsb
dec
jmp
jecxz
pusha
fisttpll
popf
bnd
and
xchg
fld
mov
testw
je
lcall
sarb
dec
xchg
popa
mov
xchg
or
and
xorb
nopl
jmp
dec
sub
lds
and
xor
enter
jns
sub
jns
xor
dec
rcr
lahf
xchg
and
aam
cmp
mov
subl
sbb
adc
daa
mov
adc
mov
lds
pop
and
daa
and
mov
into
jg
imul
cmpsb
adc
xlat
out
push
add
push
mov
aaa
jae
mov
enter
push
pop
mov
aam
pop
mov
imul
popf
outsb
cwtl
push
daa
and
xchg
divl
icebp
dec
shll
and
cmp
ffreep
ja
sub
loope
sbbl
mov
xor
inc
ret
lret
cltd
adc
inc
jmp
repz
mov
loopne
push
mov
test
out
call
sbb
jns
test
icebp
xor
dec
int
dec
pop
cli
aaa
push
adc
pop
xchg
clc
imul
dec
out
int3
out
mov
dec
mov
fildll
inc
cld
xor
sarb
cmc
sbb
int3
gs
lods
int3
jg
jne
out
adcb
hlt
shlb
adc
and
inc
cmp
mov
lahf
push
inc
mov
add
aaa
push
mov
ja
gs
xchg
gs
cltd
mov
add
andl
dec
repz
lahf
lds
cmp
push
fisttpll
pop
mov
out
sahf
out
ljmp
push
mov
push
pusha
loope
in
pop
xchg
push
add
stc
xchg
les
fadds
lret
add
jge
pop
inc
cmp
scas
dec
push
jmp
mov
xchg
stc
cmp
aas
push
hlt
imull
mov
ds
fisttpl
loop
je
scas
mov
insl
push
cmpsl
aas
mov
add
data16
push
xor
popa
negl
dec
or
ja
aam
or
movsb
push
or
sbb
inc
fcmovnbe
push
sub
bound
pushf
pop
cmp
pop
cld
inc
pop
sbb
sub
sbb
lret
imul
lcall
xchg
lahf
out
push
es
cmpsl
xor
les
orl
or
pop
fcmove
jb
shlb
outsl
mov
adc
adc
int3
dec
mov
pop
or
cld
outsl
out
and
inc
fsub
ss
std
scas
mov
jl
dec
in
push
les
push
xor
dec
adc
and
mov
mov
inc
sub
dec
gs
movsb
push
cmc
pop
rol
movsb
adc
add
push
pop
jbe
add
xor
jns
sbb
mov
dec
adc
dec
sub
dec
pushl
and
jbe
fisubl
mov
dec
stos
pushf
int
int
daa
stos
adc
outsb
jo
xchg
sub
bound
addr16
pop
or
into
test
cwtl
ret
or
mov
push
and
btr
dec
fisubs
lods
mov
stos
aam
sbb
insb
fwait
xchg
mov
aaa
and
test
add
les
mov
xchg
cwtl
popf
test
push
out
popf
add
mov
pusha
pop
pop
jl
nop
xor
hlt
or
jl
test
lock
jl
jl
lcall
mov
pop
shr
add
jno
decl
ss
sbb
sbb
je
test
add
sub
mov
sbb
dec
loopew
mov
inc
jbe
sub
dec
and
iret
lret
cltd
or
rolb
push
and
cltd
test
std
fs
pop
xor
push
ret
jae
pop
imul
cmp
mov
and
scas
ss
inc
mov
sbb
and
stos
in
fdivl
cli
mov
sbb
push
dec
inc
push
push
iret
idivb
push
loopne
jnp
and
cmp
testb
clc
mov
cmpsl
sbb
xchg
jl
decl
inc
shll
cmc
push
inc
and
scas
xor
scas
enter
jmp
mov
fistpll
xor
mov
insb
mull
jge
jmp
imul
sbb
dec
mov
cmc
xchg
into
pop
pop
dec
sbb
loope
das
movsl
cmp
cmp
or
cmpsl
mov
ret
dec
aaa
mov
ret
mov
cmpsb
lods
enter
rorl
in
jbe
push
daa
repnz
repnz
and
jg
cli
mov
gs
jbe
addl
jo
pop
and
mov
jb
clc
mov
lret
inc
lret
adc
mov
dec
mov
cmp
xchg
push
jp
je
cmc
addr16
xchg
sub
iret
ja
into
lcall
mov
add
or
mov
ljmp
jne
cmp
inc
cld
cmp
lcall
or
cmc
shrl
jmp
lea
xchg
mov
push
sbb
cld
mov
mov
sub
cli
xchg
cmpsb
add
or
inc
adcb
add
sbb
sub
std
loop
cld
and
mov
out
ds
fimull
jbe
or
fidivrs
dec
test
hlt
pop
bound
cld
push
sub
addr16
push
test
call
imul
and
in
mulb
push
or
add
test
push
mov
scas
mov
or
movsl
push
sbb
ljmp
sub
inc
xor
inc
idiv
add
cltd
cmpsb
sub
push
out
aas
mov
bound
lret
sbb
pop
aad
mov
sub
mov
sti
cmc
shll
xchg
cwtl
add
out
loopne
sbb
stos
je
ss
aad
inc
movsb
jnp
dec
cmp
cmpsb
push
cmp
adc
adc
sahf
test
sbb
xor
and
lea
imul
add
xor
lret
mov
pop
and
or
sbb
mov
cmp
insl
stc
xor
mov
jo
mov
sub
cltd
xlat
clc
dec
lock
aam
mov
gs
jle
pop
in
dec
aas
push
subb
pop
imul
xor
add
push
leave
xchg
push
in
pusha
mov
enter
ss
sub
add
sub
mov
dec
int
xchg
push
ljmp
add
jbe
stos
lret
repz
inc
test
inc
jp
and
push
cmp
and
ficomps
pop
ret
cmp
int
adc
mov
movsb
into
xor
push
push
or
dec
pop
repz
sti
adc
jns
pop
fidivrl
enter
jmp
sbb
fnsave
and
stos
in
mov
add
sbb
mov
orb
or
and
inc
stc
fimull
sbb
push
popa
cli
xchg
pop
pop
int
cmp
or
sub
ret
int
lret
pop
cmpsl
push
or
sbb
fmul
and
sbb
cmp
iret
jmp
cmpsl
push
jmp
or
and
mov
bnd
into
fsubrl
mov
dec
lret
push
cvtps2pi
fimuls
push
and
lock
aas
push
nop
scas
or
sbb
and
out
inc
mov
mov
iret
xchg
and
aaa
scas
ljmp
int
dec
lods
mov
pop
dec
roll
adc
iret
fiaddl
sbb
mov
add
enter
inc
and
jg
add
in
test
call
cwtl
mov
and
xchg
and
xchg
push
sbb
inc
test
or
mov
cmpl
mov
sub
xchg
ret
movl
cmp
push
mov
popf
fwait
cmpsb
adc
jg
add
cmc
jb
mov
insb
jbe
insb
movsb
sar
xor
xlat
imul
fidivrs
ljmp
jl
jne
shrb
jno
or
jnp
test
lahf
call
adc
push
xchg
mov
xchg
stos
dec
movsb
mov
pop
dec
addl
mov
cltd
repz
jns
ss
adc
push
xchg
cmp
jg
push
mov
mov
cld
sbb
shr
push
xchg
andb
pop
sbb
out
addb
cmpsb
les
decb
lret
add
lahf
dec
push
js
in
fwait
lahf
mov
jbe
jp
jnp
movsb
xor
sub
xchg
xor
mov
and
jmp
mov
xor
cmp
ss
cmp
or
aam
adc
inc
out
add
outsl
dec
jecxz
mull
pop
into
sbb
add
xor
daa
loop
pop
jo
pop
fcompl
pop
pusha
sub
mov
mov
inc
daa
into
int
dec
ja
ljmp
inc
and
inc
scas
sbb
sar
stos
jge
insb
fwait
jge,pn
mov
pop
or
loopne
fs
mov
outsb
push
in
mov
stc
cmp
flds
xchg
mov
mov
sub
inc
or
cmp
loopne
sahf
sub
push
dec
jg
adcb
aas
and
pushf
shl
inc
adc
negb
lods
shll
sahf
movsl
mov
scas
add
in
xchg
dec
sti
out
and
popf
jne
sbb
outsl
pop
mov
lea
mov
cmp
jbe
data16
call
sub
or
das
cmpsb
push
mov
adc
lods
divb
jb
jp
mov
inc
sbb
sub
or
xchg
mov
adc
xlat
xchg
into
loop
add
into
and
mov
lret
call
mull
call
into
nop
adc
mov
inc
pushf
cmp
and
or
pop
sbb
xchg
mov
adc
mov
push
ret
push
cld
push
xor
pop
or
xchg
or
ds
dec
loop
jp
shll
lahf
fsts
pop
pop
adcb
call
xor
pusha
jnp
push
imull
jns
nop
ja
xchg
inc
icebp
xchg
xchg
inc
sbb
rcll
and
test
cld
nop
cwtl
aas
push
mov
push
sarb
aad
jb
sbb
jg
mov
es
sbb
mov
mov
add
dec
mov
stc
adc
cmp
lods
pop
xor
jmp
gs
adcl
inc
xchg
testl
or
sahf
xchg
add
outsl
mov
jecxz
sbb
gs
cmpsl
push
shll
and
xor
push
nop
ljmp
adc
dec
imul
scas
mov
mov
cmpsl
fsqrt
dec
fwait
lret
out
ljmp
sub
imul
sub
sahf
insl
xchg
pop
sti
push
mov
dec
mov
cmc
cmpsb
in
dec
mov
fs
adc
mov
ret
dec
or
pusha
mov
xchg
ret
imul
lock
xlat
sub
push
popf
lahf
mov
xchg
inc
and
in
push
xchg
inc
fwait
pop
jecxz
not
push
sbb
lea
pop
repz
push
pop
xor
stc
fs
mov
mov
push
lds
inc
jmp
and
dec
push
adc
loopne
icebp
shlb
fisttpll
inc
cld
lods
mov
pop
pop
ljmp
test
dec
jg
pop
clc
inc
push
popf
or
outsb
add
jp
jge
addb
xchg
aam
bound
jp
jg
xchg
nop
loopne
adc
mov
add
push
enter
pop
and
out
mov
cmpsb
pop
mov
loope
stos
fwait
cmp
fcompl
dec
sar
addr16
adc
push
mov
in
xor
lahf
clc
pop
cmp
in
popa
sbbl
xor
lock
imul
sub
add
xor
mov
popf
mov
ror
mov
jnp
cmpb
push
add
push
clc
outsl
imul
outsb
scas
xchg
in
xor
imul
add
push
mov
push
sti
pop
sbb
or
mov
leave
mov
dec
movsl
pushf
out
sub
imul
cmpsl
or
mov
inc
sbb
mov
fwait
imul
xchg
std
cmp
int
lret
rorb
aam
test
movsb
in
push
fdivrl
fwait
mov
push
out
add
repnz
in
divb
push
movsb
xchg
test
mov
xchg
jno
mov
arpl
cmpsl
aas
fsubrs
dec
mov
pushf
fs
push
add
mov
test
mov
mov
xchg
iret
xor
faddl
sarb
jmp
popa
adc
insb
jo
push
mov
ret
or
push
das
add
sbb
add
pop
mov
sub
mov
loopne
arpl
clc
jle
mov
test
sti
dec
jnp
es
inc
and
je
ja
loopne
mov
insl
sahf
push
jns
mov
inc
stos
aas
mov
fidivrs
xchg
and
movb
pop
mov
pop
dec
and
or
loop
aad
mov
stc
ret
xorl
push
fcmove
pop
mov
lock
sub
adc
pop
fimull
and
in
cltd
adc
push
jo
add
stos
inc
stc
add
inc
pusha
fnsave
xlat
push
xor
sahf
sub
or
mov
loopne
lcall
mov
mov
rcrl
popl
mov
popa
sbb
sub
dec
loope
push
es
out
adc
cmp
adc
bound
jp
jns
mov
sub
aad
imul
mov
test
and
test
xor
jbe
xchg
or
ficoms
call
scas
pop
aaa
push
test
adcl
je
jp
push
pop
mov
js
mov
mov
dec
sub
call
xlat
dec
test
push
insl
out
sub
imul
test
out
cltd
lcall
mov
test
daa
loopne
sbb
cli
insl
fsubl
xchg
in
xor
jbe
js
es
mov
inc
mov
mov
jmp
out
ja
cmpsl
stc
pop
mov
push
and
rorl
sub
add
shll
pop
mov
loope
out
jmp
test
in
cmp
shrl
stos
ss
cltd
pop
mov
shll
popf
xor
iret
inc
pusha
xor
andl
cmp
jns
push
std
ret
xlat
push
fadds
lods
dec
pusha
out
add
mov
mov
shrl
add
popa
mov
sbb
add
cmc
nop
cmp
jo
adc
out
xchg
and
movsb
popf
aaa
inc
push
cmpsb
fcompl
jb
clc
test
divl
cmc
cmc
jo
mov
push
ds
and
mov
mov
test
repnz
adc
push
mov
jp
cmp
cwtl
loope
fmuls
jae
adc
ret
hlt
movb
pop
mov
andb
fsubrl
push
hlt
jnp
addl
cmp
inc
fcmovnbe
sti
jno
jmp
mov
push
sbb
pop
push
add
mov
jo
test
das
dec
cs
sub
movsb
jecxz
cwtl
nop
mov
mov
stc
gs
xor
leave
xlat
or
test
repz
shrb
jns
xor
add
gs
aam
xchg
mov
adc
cs
divl
mov
loope
je
jbe
fists
js
push
mov
pop
cmpsb
cmpsb
cs
sub
in
mov
call
inc
jecxz
imul
pop
lret
popa
out
xchg
cmp
push
fildl
in
inc
jne
mov
xorb
adcl
je
iret
shld
out
insl
add
into
js
movsb
pop
pop
frstor
sbb
arpl
lea
jmp
xor
loopne,pt
mov
add
loope
outsl
mov
je
dec
popa
mov
shll
movsl
pop
and
pop
daa
insb
insl
fsubl
clc
ficoml
aaa
xchg
enter
inc
and
mov
pushl
mov
push
bound
cmpsl
ds
and
push
push
bound
arpl
pop
add
inc
mov
lods
push
push
insb
mov
jne
movsb
push
or
push
ret
aas
pop
je
sarl
cli
out
test
xchg
inc
cmp
out
mov
dec
sbb
je
push
mov
mov
sbb
xchg
daa
fistpl
push
adc
pushf
aas
lret
dec
gs
cmpsb
sarl
sbb
adc
jp
and
adc
push
jb
inc
push
inc
cmp
lea
pop
outsl
test
insb
int3
mov
cmpsb
cwtl
mov
dec
pusha
jp
inc
sub
fadds
divl
adc
mov
adc
push
xchg
mov
out
mov
rorl
push
mov
mov
pop
leave
loopne
dec
sbb
shll
or
enter
iret
push
mov
repz
push
push
dec
and
movsb
data16
ficomps
jmp
sbb
mov
adc
mov
inc
dec
dec
jl
jno
mov
jg
inc
or
fisttps
sub
add
pushf
sti
rcrb
dec
mov
int3
cmpsb
push
loopne
xchg
dec
in
lock
jno
xchg
ja
andl
dec
push
sbb
nop
fistl
ljmp
push
cmpsb
inc
mov
decl
std
iret
dec
cmp
out
push
int3
inc
cmp
mov
lock
add
into
aas
sub
test
stos
imul
cwtl
sub
subb
push
ljmp
shll
push
pop
sub
imul
pop
call
fmul
pop
ja
les
sarb
xor
aam
adc
mov
push
xchg
push
sbb
test
inc
sti
jmp
dec
sub
jecxz
sub
jmp
mov
ficompl
adc
adc
jns
pop
stos
inc
push
lds
data16
push
mov
outsl
in
xor
call
orl
data16
pop
hlt
push
rcrb
test
cwtl
sub
xor
loopne
gs
add
pop
jo
sub
ljmp
sub
fildl
xor
movsb
xchg
lock
dec
inc
and
and
inc
dec
push
xchg
jge
adc
fs
push
mov
cmp
cmpsl
add
push
pop
push
scas
or
inc
xor
int
lds
popa
ret
cmp
add
dec
stos
es
fldcw
mov
mov
out
fsubrl
ljmp
xchg
cmpsb
mov
mov
cmp
and
mov
mov
xchg
mov
xor
int
int3
jb
adc
mov
jp
addr16
mov
scas
lea
inc
pushf
push
ret
cwtl
cmp
mov
pop
xlat
out
sbb
mov
mov
stos
movsl
xchg
sub
cmpsb
and
lcall
and
int3
adc
cmp
jo
jns
jb
ss
dec
jecxz
test
out
ds
pop
mov
jge
mov
repz
aad
pop
scas
aam
sbb
inc
lret
test
loop
adc
xchg
push
jb
ret
mov
cwtl
mov
adc
es
inc
fstpt
inc
mov
fwait
shrl
inc
jg
popf
xchg
inc
mov
pop
mov
lods
negl
test
fistpl
mov
mov
in
idiv
cmpsl
mov
scas
imul
out
mov
fwait
lret
adc
push
mov
fwait
xor
mov
xor
xchg
xor
or
add
loopne
push
mov
jge
nop
inc
cs
das
or
push
fidivrl
js
lret
mov
push
lret
fcomps
loopne
mov
sbb
fisubs
pop
int3
mov
daa
push
insl
push
mov
mov
mov
push
xchg
pop
xchg
sbb
xor
jmp
cmp
in
sub
cmc
or
add
rcl
sub
fwait
jno
and
pop
mov
xor
lret
mov
mov
sbb
adc
jle
add
push
fdivr
inc
mov
std
cs
nop
adcb
cmpb
scas
cmp
cs
popf
aam
cmp
push
hlt
sub
cmp
movsl
lods
sarb
xor
arpl
mov
dec
test
sbb
imul
or
and
adc
or
movsl
fs
xchg
gs
fldcw
inc
adc
test
iret
mov
jo
insb
cmp
dec
mov
ljmp
sub
sbb
push
xor
in
or
loopne
jne
aas
fdivrs
xchg
dec
mov
pop
jg
add
in
mov
push
mov
repnz
repnz
cmp
stos
shlb
xor
add
jb
hlt
cmpsl
int3
test
mov
jg
pop
inc
push
push
ja
mov
repz
jp
mov
add
mov
pop
jne
inc
lahf
shll
insb
leave
dec
leave
pop
xchg
repnz
sbb
sahf
ljmp
inc
lcall
sub
cli
sub
dec
xchg
enter
ja
xchg
hlt
sub
loop
les
cld
inc
mov
and
int3
add
mov
ficoms
inc
sti
fnsave
inc
inc
xchg
jmp
mov
pusha
dec
flds
xchg
dec
push
std
inc
xor
jl
cmpl
sub
mov
cmpsl
mov
outsb
jns
adc
js
movsb
or
mov
jnp
mov
add
lret
das
adc
popf
je
or
std
add
out
jmp
jae
jb
lock
les
sub
and
jle
dec
popa
and
imul
fdivrl
jbe
sti
leave
and
dec
test
adc
jecxz
imul
aad
jo
sbb
xchg
pop
test
xbegin
pop
mov
jg
inc
cld
cmp
call
test
dec
mov
mov
or
and
xchg
mov
or
in
push
movsl
test
arpl
xchg
mov
test
pushf
mov
jne
or
xchg
ss
aaa
out
pop
repnz
fnstenv
and
shrl
adc
out
out
enter
push
cltd
inc
pop
out
rclb
jmp
mov
es
push
loopne
or
mov
test
xor
das
cmp
enter
in
pop
cmp
in
rcl
mov
loopne
enter
and
sub
bound
gs
daa
movsb
ja
cmp
cmpsl
dec
jae
jo
es
lods
fsubl
xchg
lods
loop
adc
and
cmp
xlat
sbb
xchg
addb
mov
mov
add
add
mov
jecxz
popf
and
mov
popa
fsts
dec
sarb
xor
loopne
dec
cmp
push
xorl
mov
jbe
mov
call
popf
gs
push
mov
decl
cmp
dec
orb
inc
inc
lret
xor
ror
cmpsb
iret
nop
jle
and
push
pop
mov
fists
pop
pop
test
popa
fadd
jb
push
movsb
mov
add
cltd
gs
sbb
rorl
cli
and
dec
stos
lret
push
sub
add
ja
popf
add
test
pop
jno
add
xor
ljmp
sub
hlt
sbb
push
pop
faddl
nop
int
mov
ds
daa
inc
add
jecxz
push
pop
xchg
or
aas
stos
mov
out
or
sbb
and
outsb
cwtl
push
das
outsb
xlat
mov
outsb
xor
adc
xor
mov
ljmp
pop
test
test
sbb
push
mov
lods
add
mov
mov
adc
gs
pop
jg
mov
fs
cmp
mov
push
adc
inc
mov
inc
dec
inc
mov
shr
out
ficoms
sbb
out
jmp
add
xor
pop
pushf
pop
loop
outsl
cltd
dec
pop
mov
js
cmp
sarb
push
test
in
push
push
out
ljmp
int3
xor
cmp
addr16
shlb
jno
jge
inc
out
add
fimuls
push
jbe
cmp
les
xor
push
inc
mov
sub
test
pusha
call
adc
adc
imul
mov
xor
pop
fstps
fistps
cmp
imul
push
outsb
xor
insb
scas
pusha
jnp
add
stos
dec
nop
jge
gs
jno
xlat
sbb
lds
or
or
sbb
out
cmp
jecxz
pop
pushf
fstpl
lock
push
add
push
adc
arpl
pusha
je
cwtl
jmp
pop
es
pop
les
test
lcall
dec
jno
xchg
movsl
mov
sub
inc
pop
cmp
out
sub
mov
jle
filds
adc
mov
in
das
lcall
and
cltd
adc
movsb
adcl
sbb
roll
lods
popa
jb
lods
divl
sbb
scas
adc
mov
call
cmp
cmc
insl
stc
clc
fwait
jg
jmp
mov
sbb
xchg
ja
jbe
sbb
movsl
insl
and
mov
loop
mov
ss
mov
pop
cltd
xadd
xchg
add
push
mov
lea
addb
lods
in
fdivrl
scas
mov
cmp
sbb
mov
inc
lods
push
aaa
sahf
mov
xor
pop
jno
cmp
mov
jno
adc
cmp
pop
int3
push
addr16
xor
loope
push
push
ljmp
jo
and
mov
stc
jl
push
int3
aaa
popl
dec
inc
jns
in
or
and
insb
xchg
lret
data16
adc
or
inc
addr16
jb
cs
fbld
out
xor
mov
outsb
pop
adc
mov
jp
xchg
jae
and
xor
fidivrl
ret
sbb
jns
pop
fisttpll
pop
roll
dec
push
and
mov
inc
or
gs
ljmp
xchg
push
out
mov
jno
sub
cmpsl
sub
add
shl
inc
sub
mov
scas
leave
mov
popa
mov
das
mov
mov
adc
cmc
push
shl
in
xchg
dec
movsb
loop
jge
outsb
mov
mov
mov
bound
cmp
lea
daa
out
mov
adc
or
cmpsl
sub
into
or
and
dec
sub
pushf
sahf
and
out
out
test
bound
jp
mov
scas
jle
imul
test
out
enter
sub
ljmp
loope
out
test
mov
or
jge
xchg
push
pop
cmc
pop
daa
pop
dec
cld
xor
cmc
ret
add
in
push
xchg
xor
add
adc
in
cld
adcb
jmp
call
xchg
stos
sahf
dec
dec
jae
sbb
mov
outsb
xchg
call
js
pop
aas
mov
or
pop
mov
iret
jns
pushf
ljmp
daa
daa
jge
mov
mov
jae
mov
es
push
sbb
mov
mov
cwtl
inc
cmc
test
mov
pop
mov
push
pop
iret
pop
sar
adc
js
mov
inc
lcall
push
add
roll
mov
out
aad
out
fucom
push
in
and
rclb
das
pop
mov
into
add
or
jne
xchg
dec
fdivrs
jnp
je
cmp
pop
lock
inc
fadd
push
and
daa
jae
or
jbe
pop
std
in
and
nop
icebp
hlt
lods
sbb
movsl
sub
int
les
je
addr16
rorl
popa
cs
mov
jge
ret
rcrb
cmp
xor
test
test
aaa
mov
movsb
or
or
push
clc
sub
adc
add
add
std
imulb
cli
aas
ljmp
aaa
inc
push
add
sub
pop
and
adc
scas
dec
clc
lea
call
cmp
cmp
xchg
pop
mov
or
retw
iret
lcall
mov
mov
add
ret
inc
mov
test
fcomip
jecxz
add
mov
jl
js
shrb
inc
push
and
call
js
add
mov
scas
add
mov
inc
jbe
ficompl
mov
mov
dec
cmp
inc
jne
adc
leave
ljmp
xorb
adc
dec
add
scas
repnz
push
mov
jne,pt
mov
pop
inc
add
push
test
sbb
and
jbe
movsb
mov
js
out
push
into
xchg
lods
pop
test
add
jge
lods
test
cs
sahf
shlb
dec
outsb
in
jecxz
pushf
xchg
jge
pop
inc
les
lcall
cmp
pop
inc
rorb
cmpsl
sub
inc
lret
xchg
push
int3
push
cmc
push
movsb
cmc
inc
mov
add
sub
mov
mov
int
and
and
fnstenv
dec
add
jae
cs
out
out
movsl
clc
fstpt
in
das
jae
aas
xor
movb
adc
jae
into
or
ljmp
imul
add
out
popf
add
sub
mov
jnp
pop
and
and
push
cmpl
sti
add
sbb
out
js
iret
xchg
sarb
shr
push
sarb
cld
mov
adc
imul
sbb
jl
aam
push
push
pop
in
orb
cmp
pop
add
imul
pusha
jge
pop
lea
sub
or
xchg
mov
and
mov
repz
sub
pushf
notl
rclb
js
mov
out
fldl
xor
mov
sbb
dec
lcall
mov
add
mov
lahf
pop
add
mov
sub
scas
xchg
lds
cld
pop
adc
mov
jae
cmp
cwtl
push
xchg
insl
adc
pop
pop
xor
lds
jge
addb
or
or
in
add
add
pop
mov
xor
xlat
xor
xchg
cmp
lret
sub
pop
pop
jg
mov
popf
es
int
and
lahf
rcrl
fsubrl
jns
imul
ret
jo
out
cld
gs
stos
xchg
inc
cltd
jp
jmp
out
mov
push
xor
xor
lea
rcll
jle
mov
inc
data16
ret
or
das
and
lea
cs
add
mov
dec
jecxz
in
pop
push
pop
cmpsl
cld
cld
cmpsb
test
cmpsb
cmp
arpl
xchg
inc
jbe
in
push
dec
adc
sti
aad
cmp
js
popa
insl
lret
daa
ret
xor
sub
inc
mov
sahf
jle
lret
inc
xor
pushf
cs
sbb
or
mov
fdivrl
adc
cmc
fs
cs
sub
ljmp
jmp
leave
cwtl
aad
mov
mov
cmp
xor
mov
sti
push
and
push
jo
test
lahf
or
jae
adc
mov
mov
cltd
or
jo
mov
fisubrl
inc
mov
pop
incb
add
adc
dec
dec
ret
es
inc
fsts
outsl
xchg
push
loopne
cltd
lret
push
lea
repnz
xor
jb
scas
and
rolb
mov
push
dec
pop
dec
push
mov
mov
pop
loopne
mov
push
shrd
inc
or
fsubs
mov
loopne
pop
adc
ret
mov
dec
daa
repz
dec
hlt
mov
push
aas
cmp
mov
jno
and
and
inc
lahf
hlt
lea
addl
adc
into
loop
addr16
push
pop
or
fnstsw
mov
mov
mov
clc
adc
pop
xchg
pop
stc
pop
in
cmpl
pop
loope
lods
in
or
out
xchg
test
stos
xlat
mov
ret
sub
xchg
add
fldpi
push
lods
mov
fbstp
test
push
leave
cmp
sbb
jg
cmpsb
loopne
sar
js
or
in
or
in
shlb
xchg
lea
dec
or
ja
out
popa
pop
xchg
mov
dec
mov
mov
hlt
cmc
es
push
es
lret
push
daa
imul
loope
loope
jp
lods
ss
rol
mov
jle
dec
out
std
mov
mov
jnp
add
mov
pop
and
mov
loope
and
fisttpll
xchg
sbb
subb
sub
cmc
ja
sbb
dec
xlat
push
arpl
hlt
or
hlt
xchg
mov
mov
out
ret
xor
lods
dec
rorb
pop
loopne
inc
adc
ret
push
stos
orb
addr16
rolb
out
sbb
call
cmp
and
pushf
sub
sbb
daa
lods
lcall
aaa
xor
mov
push
inc
push
lahf
jl
filds
adc
fisubrl
fldenv
sbb
in
int3
fwait
sbb
jle
popf
shll
std
popa
ljmp
cmp
or
in
test
sub
nop
fcompl
scas
or
mov
jno
mov
push
lret
cmp
mov
call
inc
push
mov
lret
jno
and
test
pop
or
or
add
sbb
mov
push
jns
mov
in
mov
push
loop
sbb
jmp
or
sub
lds
mov
mov
arpl
inc
ss
or
out
xor
xchg
gs
cmpsb
mov
fsubs
cwtl
sbb
cmp
repnz
xorb
mov
pop
lret
or
decl
enter
add
icebp
pop
pop
aas
psubq
add
sub
adc
fcoms
xchg
fstpl
pop
push
sti
or
mov
pusha
int3
lock
nop
cwtl
mov
xor
push
cmp
sbb
lret
cmp
popf
int
je
cmp
push
lods
orl
xchg
push
ds
xor
scas
js
xchg
push
mov
std
sbb
dec
mov
push
push
repnz
inc
scas
pop
divl
and
stos
mov
jae
inc
out
xor
mov
mov
inc
pop
sub
push
jg
or
addr16
fldcw
out
push
enter
test
sarl
mov
scas
mov
push
xor
pop
loop
inc
mov
adc
dec
inc
sbb
dec
dec
popa
movsl
lds
fadd
hlt
xchg
insb
inc
dec
dec
aaa
in
sub
ljmp
out
xchg
mov
int
test
cmpsb
mov
mov
inc
fists
and
test
mov
test
int3
lret
insb
fstps
cmp
mov
mov
iret
cwtl
or
xlat
dec
cli
aad
sbb
inc
mov
out
dec
xor
addb
cmpsb
xchg
or
addb
es
and
dec
inc
jnp
std
push
cwtl
add
cmp
xchg
fsubr
movsl
adc
loop
xchg
shll
fs
outsb
cmp
inc
lret
xchg
rcl
add
and
add
mov
ljmp
pop
cmp
jbe
loope
add
clc
movsl
dec
jg
gs
popa
aaa
inc
idivl
inc
add
mov
jmp
mov
int
insl
pusha
dec
dec
inc
stos
inc
dec
and
and
mov
loope
mov
jp
shr
jp
cmp
pop
cmc
mov
lcall
out
jns
mov
push
jp
and
enter
add
and
outsl
mov
mov
mov
in
lock
pop
clc
mov
mov
fs
adc
inc
or
dec
mov
movsl
xchg
lea
stc
xchg
icebp
imul
cli
jb
mov
stos
cmp
fidivrl
xchg
xlat
scas
frstor
jno
scas
pop
pusha
push
js
pusha
ljmp
xchg
jmp
push
add
out
cli
jo
pusha
add
dec
std
jge
out
shll
adc
mov
push
xchg
std
push
adc
mov
add
cmp
out
jg,pt
jns
repz
test
cmp
imull
jb
jmp
sub
incb
test
fisubl
sbb
fbld
and
or
mov
mov
jmp
mov
rcl
pop
adc
int
add
inc
jno
cmp
aas
xchg
scas
inc
add
adc
imul
cld
incl
or
xor
jne
stos
sub
aas
mov
fwait
cmp
mov
jno
fst
cld
int
fwait
gs
std
jge
pop
aaa
icebp
jne
rorl
mov
fnsave
movsb
add
scas
and
cmp
xlat
nop
lea
or
mov
sbbl
popa
int3
push
mov
fisubs
insl
dec
mov
jmp
cmp
cmp
movsb
adc
das
out
out
mov
inc
js
imulb
xor
mov
movsb
stc
pop
lods
dec
push
jmp
mov
xor
fs
mov
fdivrl
xchg
jne
pop
loopne
mov
fsub
pop
mov
out
imulb
ret
mov
add
ja
fwait
mov
outsb
das
orl
xor
dec
cld
lock
push
mov
xor
mov
jns
mov
ds
sub
inc
push
push
xchg
push
inc
add
scas
push
mov
sub
test
cmp
shll
inc
lods
inc
mov
xchg
pop
sar
inc
sbb
sub
xchg
push
adc
xchg
nop
ljmp
mov
xor
lcall
xchg
dec
lahf
sub
add
outsl
das
bound
add
and
dec
push
mov
cmp
inc
sbb
dec
pop
arpl
push
jb
xchg
push
and
and
cmp
mov
adc
xor
mov
fst
clc
stos
xchg
ds
cmpsl
scas
adc
jns
outsb
add
pop
icebp
data16
adc
jg
adc
inc
rolb
cli
outsl
mov
push
outsb
movsl
push
fisubrs
and
stc
ss
movaps
arpl
in
jns
xor
dec
xor
sahf
add
hlt
hlt
into
sub
cs
or
decl
dec
push
or
push
push
cmc
dec
jecxz
xor
xchg
aam
mov
xchg
je
mov
add
add
out
cmp
mov
pop
call
movsl
pop
insl
adc
or
fbld
sbb
push
cmpsb
jno
cltd
popa
shl
pop
jmp
lods
dec
push
and
test
bound
imul
into
fwait
std
clc
mov
sbbl
imul
push
jmp
jno
fidivrs
repz
das
daa
push
jmp
mov
jno
sub
ljmp
xor
pop
push
icebp
jns
adcb
sahf
aam
lret
pop
daa
jle
les
cmpsl
cmp
add
push
mov
xor
sub
daa
push
inc
mov
push
test
cmp
mov
and
cmp
jae
adc
adc
xor
ja
jmp
mov
inc
lods
sbb
mov
mov
mov
sub
adc
and
stc
pop
std
ds
jbe
loopne
test
aad
cmp
lock
movsl
cwtl
mov
jecxz
push
adc
andl
out
orl
dec
mov
lock
push
sbb
mov
mov
pop
cmpsl
cmp
lock
adc
cmpsl
mov
push
dec
rcll
inc
push
loopne
mov
lahf
jle
pop
in
outsl
inc
ss
fimuls
mov
inc
jb
testb
add
jno
shrb
addl
xor
nop
xchg
xchg
cmc
loop
push
outsl
fistl
cmp
mov
push
dec
jb
stos
in
jo
mov
xor
add
jle
mov
cltd
cli
sub
jnp
inc
stc
push
inc
mov
fstpl
xchg
lcall
out
add
ret
insb
je
and
or
ja
mov
or
out
jne
stos
push
push
insb
repz
incl
daa
xor
pop
popf
pop
js
inc
jp
dec
mov
fimull
ret
out
jne
test
pop
testl
pop
inc
dec
fwait
inc
sbb
loop
xor
call
pop
clc
sarl
jg
or
pop
stos
sub
pop
mov
lret
mov
mov
cmc
mov
inc
adc
std
pop
add
pop
sahf
sbb
pop
add
mov
les
add
xorb
cld
sbb
rcll
mov
outsl
mov
rol
fistps
add
leave
cmc
adc
out
mov
ret
lcall
cwtl
push
sub
repnz
and
xor
das
dec
sub
repz
fldcw
pop
sub
xchg
ljmp
sti
gs
xor
in
or
int
lret
sub
inc
dec
mov
xor
xchg
fisubl
stos
popa
mov
lock
or
hlt
mov
lods
scas
movsl
aaa
add
loop
das
adc
and
jb
das
test
or
daa
nop
int
lret
shlb
idivb
mov
in
lret
push
mov
xor
xor
lret
inc
jno
fsubs
dec
cmp
push
push
jb
sub
or
push
push
inc
adc
andb
lret
mov
icebp
imul
sbb
insb
xor
mov
test
outsl
das
dec
scas
xchg
movsb
jl
sub
sbb
fimuls
jle,pt
xor
mov
jo
mov
add
repnz
pop
lret
addps
push
lahf
insb
mov
sub
ret
cmp
or
stos
xlat
inc
adc
mov
mov
sbb
cmpsb
mov
add
loop
in
inc
push
mov
lock
stc
jmp
test
cli
out
push
dec
cmp
out
or
xor
jl
incb
ja
push
fldt
jg
iret
negl
int
hlt
add
mov
and
rol
adc
mov
push
fmul
jnp
ret
out
and
call
add
nop
lods
xchg
xor
hlt
push
adc
fcoml
mov
jg
daa
shrl
pop
xlat
push
out
mov
repz
push
notb
test
out
out
and
scas
rcl
sbb
clc
hlt
jo
insb
sar
sub
out
call
jg
aam
stc
dec
sub
cs
fwait
repz
ret
mov
aas
add
int
add
jle
or
lods
imul
jg
cmc
out
cld
scas
idivb
mov
out
dec
ror
mov
pop
test
outsl
mov
cmpsl
ja
jne
cmp
or
dec
add
scas
inc
mov
lock
testb
jnp
in
cs
bound
ret
jae
inc
jns
and
add
mov
add
sti
xor
insb
js
push
je
pop
mov
cwtl
xchg
insb
xor
pop
call
pop
or
lock
jnp
int
stc
dec
inc
jge
cmpsb
scas
mov
mov
je
ds
jl
fsubl
sahf
cmp
add
adcl
jne
xchg
and
popa
aas
jbe
pusha
fxch
imul
fbstp
push
inc
push
cs
leave
xchg
imul
or
sub
ret
ds
aam
addr16
std
out
lret
xchg
xchg
add
dec
push
fildl
sub
in
xor
insl
mov
jbe
pushf
loop
rcrl
push
lret
mov
loopne
inc
out
addl
mov
les
mov
lods
pop
popa
jmp
ljmp
cltd
insl
mov
mov
mov
std
mov
push
outsb
dec
sahf
mov
popf
aam
sub
popf
clc
ja
std
pusha
mov
arpl
aas
and
xchg
add
add
dec
adc
pop
cltd
and
jbe
xchg
jne
lcall
pop
imul
sub
je
out
rolb
pop
test
sti
inc
pop
cmp
mov
out
cmc
sub
jecxz
dec
loope
aad
dec
test
int3
sarb
cvtps2pi
popf
sbb
clc
out
sbb
adc
push
and
inc
and
rol
nop
cli
or
pop
jb
incl
add
jno
xchg
fisubl
cld
adc
and
in
pop
sub
sti
or
cmc
add
imul
cltd
push
outsl
xchg
inc
test
sub
or
daa
movsl
push
hlt
mov
out
popa
pop
pop
and
inc
rclb
ds
inc
push
and
lea
std
int
sbb
addr16
ljmp
jae
add
xchg
loope
and
adc
xchg
incb
sub
jbe
jbe
jb
add
outsl
mov
lahf
int
add
mov
mov
inc
mov
mov
mov
mov
ret
xchg
in
fnsave
jg
add
and
adc
addb
das
xchg
call
ret
scas
or
imul
cmp
push
stc
into
mov
int
in
mov
stc
lds
inc
fcmovnb
int3
xchg
ret
mov
xchg
push
sti
ficoms
in
add
push
push
sbb
mov
xor
nop
push
nop
and
fnstsw
hlt
lds
cmpsl
int3
inc
mov
mov
jmp
jle
push
push
adc
mov
lea
prefetch
sbb
jp
cmp
movsl
jl
ret
sub
lea
mov
dec
xor
hlt
and
and
sahf
add
inc
push
xchg
jl
ss
ds
sub
cmp
mov
dec
in
pop
dec
push
testl
xor
inc
or
mov
cmp
mov
addr16
inc
mov
cwtl
rcrb
ss
adc
cs
lods
or
jno
cmp
lret
in
and
inc
andb
rorb
mov
pop
xchg
mov
sbb
sbb
scas
push
inc
sub
push
push
jge
negl
or
or
cmc
test
cli
dec
jle
xchg
stc
dec
mov
loop
xor
fisubl
sub
dec
pop
sbbl
fistl
outsl
dec
xor
pop
adc
xchg
ret
xlat
inc
cmp
repz
mov
mov
lea
adc
imull
sub
call
or
push
popa
or
rolb
orb
and
mov
and
add
add
dec
or
fldl
fwait
cmp
mov
push
adc
fcom
hlt
scas
fs
xchg
mov
mov
and
stos
lea
adc
loope
dec
rcll
push
cmp
adc
test
insl
cs
pushf
and
out
push
mov
pushf
mov
mov
dec
addr16
dec
dec
addr16
add
xor
push
out
fiaddl
mov
leave
pop
gs
mov
mov
and
dec
add
xor
lock
int3
pop
or
call
call
mov
mov
or
stos
outsb
cmp
test
mov
sub
adc
call
icebp
dec
dec
lock
fs
mov
inc
call
sub
cld
icebp
and
negb
mov
lcall
loopne
xchg
add
and
in
dec
push
and
dec
adc
test
push
cmp
sbb
push
pop
adc
jo
mul
int3
aas
jno
mov
xchg
sbb
cwtl
scas
lods
daa
mov
mov
inc
je
xchg
xor
stos
fimull
adc
pusha
loop
or
pop
into
into
mov
adc
cmp
mov
inc
popf
lea
in
ds
cmp
daa
sbb
dec
ret
or
sti
pop
lret
out
gs
xlat
inc
scas
sbb
cmp
ljmp
adc
jnp
stos
xchg
dec
test
add
shrb
mov
dec
out
out
xor
sub
push
in
mov
sub
insl
sahf
mov
inc
js
mov
add
jecxz
es
or
in
inc
mov
dec
enter
js
lds
cwtl
or
cli
cmc
push
mov
mov
xor
mov
sbb
fst
xor
mov
jmp
orb
and
inc
cmp
push
fcoml
adcb
add
imull
pop
cmp
pop
xchg
and
stc
lcall
mov
stos
or
nop
addr16
rorb
xor
jnp
cmp
ljmp
adc
xchg
dec
call
ss
push
or
mov
mov
jne
mov
cmpsb
fwait
pop
xchg
push
ljmp
inc
arpl
pop
mov
xor
ljmp
nop
out
mov
mov
pop
je
lods
test
stos
dec
std
lcall
mov
out
pop
xor
xchg
lods
pop
xor
inc
push
enter
jle
and
addr16
andl
mov
stc
or
lahf
cmp
pop
cmpsl
movsl
fiaddl
adc
and
fs
pop
cmc
addr16
insl
test
call
mov
lahf
rcrb
imul
or
in
dec
insb
pop
fdivl
jns
or
fmul
loop,pt
sbb
push
adc
pop
xchg
cmpsb
xor
out
dec
push
loopne
test
xchg
daa
addb
cld
sahf
fdivrp
sarb
loopne
cli
rcl
and
in
cs
pop
imul
cwtl
ja
lret
add
out
fucomp
ja
and
in
or
sbb
mov
jp
fsts
cld
es
inc
sub
cmpsl
add
in
xor
jl
stc
fidivrs
push
pop
aaa
dec
xorl
sbb
ret
jno
cmp
fcom
arpl
xchg
sub
ss
pop
in
mov
fidivrl
enter
push
imul
jle
sub
jmp
mov
inc
repz
and
adc
int
pop
pop
je
lret
lods
int3
dec
ret
add
push
jmp
dec
shl
cmp
sti
mov
cvtpi2ps
sub
mov
pop
shrl
out
mov
sub
cmp
in
orl
fldl
mov
addr16
sub
mov
pushf
data16
popf
mov
cmp
fwait
mov
cwtl
mov
subb
movsl
mov
inc
cltd
movsb
inc
mov
xlat
dec
mull
jl
negl
mov
cmpl
add
xchg
jb
cmpsl
mov
dec
xchg
loop
mov
jle
push
xor
int3
mov
jge
cmp
popf
repz
repz
adc
lds
cmp
mov
pop
faddp
cmp
dec
clc
fs
in
or
add
xchg
add
sub
xchg
mov
adc
out
jle
jg
loope
add
mov
inc
hlt
cmp
pop
and
mov
lea
mov
in
inc
je
in
pop
in
xor
cltd
rcll
fcmovu
in
mov
sbb
cwtl
outsb
popa
mov
mov
enter
rorl
dec
and
pop
leave
jne
pushf
aaa
cld
mov
ja
int3
stos
out
or
int3
addr16
idivb
mov
jmp
mull
insb
mov
stos
push
push
xlat
mov
add
push
or
leave
xchg
sbb
push
mov
out
loope
imul
jmp
rcrb
or
dec
fmull
ror
clc
stos
inc
and
jmp
and
cli
mov
dec
flds
bound
int3
pop
test
add
mov
iret
cmp
scas
mov
push
xchg
or
mov
out
int3
push
sbb
fimull
dec
mov
pop
xor
dec
arpl
notb
mov
xchg
int
add
jb
popf
rol
in
adc
aas
push
testb
lock
inc
outsl
mov
ss
adc
xchg
cs
rcl
repnz
lods
inc
addr16
mov
dec
arpl
aaa
mov
ja
and
xor
mov
add
stos
pop
mov
jp
pushf
ja
lret
cltd
aad
int
dec
xchg
movsb
adc
cmc
adc
into
testl
shll
idivl
in
loopne
jge
push
adc
mov
mov
cs
je
hlt
sub
add
or
cmp
out
in
push
push
sti
faddl
loopne
mov
sti
add
mov
pop
fcmove
shlb
mov
sarl
add
jge
jg
inc
adc
aas
data16
shr
ret
cmp
lods
movsb
push
mov
sub
xor
jmp
int
lods
mov
testb
cli
pop
mov
add
jmp
or
sbb
mov
jg
insb
cmp
repz
mov
dec
scas
adc
sub
jne
add
jne
pop
jmp
stos
pop
loop
jbe
pop
xchg
imulb
test
inc
xor
call
lret
rcl
sbb
and
aaa
sbb
xchg
xor
imull
cmp
inc
test
andb
lret
jne
inc
and
arpl
test
out
sub
lret
pop
imulb
fwait
cld
jb
cmc
add
rcrl
xorl
or
clc
test
or
cltd
fs
pop
mov
pop
jmp
pushl
das
ret
pop
pop
pop
adc
add
push
imul
xchg
ja
jecxz
out
cmpsl
mov
imul
lahf
lret
lcall
pop
cli
movsb
xchg
lret
mov
push
cltd
dec
aam
push
data16
mov
int
push
add
mov
loop
lret
bound
xchg
and
rorb
jae
rcrb
dec
mov
lcall
cmp
adc
clc
push
push
dec
and
push
and
push
inc
movsb
in
out
xchg
fidivs
jmp
push
pop
test
ss
add
nop
out
mov
rcl
sbb
dec
lods
fldenv
aam
adc
lahf
addr16
adc
cmp
pop
and
adc
mov
add
popa
orl
pop
fisubrl
sbb
and
mov
imul
shl
pop
xor
test
xchg
cwtl
js
mov
inc
nop
xlat
out
jle
hlt
pop
sbb
inc
dec
mov
or
dec
xor
popl
loope
gs
mov
icebp
pusha
and
add
lods
ret
fmull
in
mov
subl
mov
clc
daa
movsl
mov
in
cld
mov
pop
dec
arpl
push
out
dec
xchg
outsl
mov
pop
shlb
sahf
push
cmp
inc
cmc
fwait
cli
dec
mov
inc
stos
xor
add
mov
sahf
cmc
je
fdivl
rcrl
add
or
xor
and
sub
addr16
cmp
mov
mov
arpl
movsb
pop
dec
cmp
push
lock
push
imul
xchg
mov
cmpsb
jmp
dec
fdivrs
sbbl
das
jecxz
adcb
mov
out
lods
scas
pusha
rcll
shrl
mov
fldl
xchg
ljmp
pop
mov
xor
mov
dec
jecxz
mov
int3
mov
push
into
inc
addr16
movsl
incl
xchg
sub
mov
daa
adc
xchg
sub
jo
dec
dec
fldcw
testb
cli
pop
xchg
mov
cmp
sub
sub
push
add
dec
repz
das
or
xor
pop
push
adc
add
adc
in
inc
or
xchg
xchg
mov
add
scas
jbe
cmp
jae
cmp
enter
in
xchg
je
xlat
psrad
icebp
dec
mov
xor
mov
jne
insb
lret
mov
lret
fiadds
mov
es
data16
adc
sbb
sub
mov
repz
mov
ljmp
outsb
xor
xchg
dec
imul
sub
cmovno
aaa
das
psllw
sub
inc
scas
jb
add
pop
pop
xchg
mov
orb
in
lods
fisubrs
rcrl
lock
cmpsl
dec
ret
rcr
push
sub
jnp
ret
aas
mov
imul
push
fistpl
mov
cmpsb
hlt
xchg
je
xor
jecxz
push
jb
xchg
and
dec
repz
mov
out
fwait
into
loope
fdivs
into
adc
sar
sbb
dec
sbb
push
out
jns
xchg
loope
mov
ja
inc
out
inc
inc
ffreep
xchg
not
dec
cltd
loop
lods
dec
sbb
dec
lcall
cmpsl
cmpsl
pop
sbb
arpl
lea
mov
add
mov
stos
mov
in
aam
clc
or
inc
fs
cld
push
mov
repnz
ds
adc
xchg
call
shrb
xor
mov
ljmp
shll
mov
mov
or
into
sbb
jg
mov
cld
push
sub
jb
shll
popa
shr
mov
push
sub
adc
clc
push
clc
fidivl
mov
in
adcl
out
int3
insb
cmpsl
fidivrl
adc
pop
jge
stc
lods
adc
popa
cmc
lods
xchg
jb
outsb
or
orb
add
shrb
cwtl
push
mull
mov
jle
mov
push
adc
rcrb
cmp
idivb
push
add
notl
push
aam
lcall
cli
inc
mov
mov
in
kaddb
pusha
push
xlat
mov
aas
sbb
sub
jle
scas
jo
imul
push
push
mov
lret
movsb
pusha
int
push
ja
rolb
mov
test
dec
mov
dec
xor
mov
outsl
pop
push
into
xchg
dec
xor
mov
icebp
push
inc
inc
fsubrl
stos
jae
stos
push
jmp
xchg
or
ja
imul
xor
fdivrs
testl
in
aaa
lea
sub
negb
rclb
push
xchg
or
mov
jae
loop
adc
xchg
dec
in
mov
aas
aam
push
testl
rcrl
add
push
shr
xchg
or
out
ret
xchg
xor
or
push
call
out
inc
jne
ret
and
das
mov
mov
adc
jp
sbb
or
fstps
ret
sub
and
pop
fbstp
xlat
subb
adc
out
adc
mov
lock
xor
sub
popa
test
pop
push
adc
mov
aas
pushf
jg
test
movsb
cmp
or
add
and
movsl
stos
sahf
push
and
push
out
loope
cli
mov
inc
xchg
push
daa
bnd
sub
test
das
mov
add
psubsw
xor
cmp
jl
xchg
pop
addb
shl
lret
cs
push
stos
sarl
cmp
xor
pop
stos
jp
out
lcall
push
mov
mov
add
movsb
and
movsl
lret
xor
and
or
out
imul
mov
nop
mov
std
xor
shl
and
negl
cld
or
addr16
and
lods
push
push
xchg
push
dec
outsl
leave
inc
pop
subl
movsl
mov
add
lret
fstpt
int3
cli
xchg
jle
add
pop
or
mov
test
sbb
add
jnp
mov
or
push
xrelease
sub
dec
mov
add
xor
rcll
xor
clc
stos
and
sub
adc
mov
pop
cwtl
fstpl
push
subb
mov
sub
push
jle
push
push
and
jle
pop
and
push
lods
xorb
bound
cli
cmp
in
lock
xor
imul
push
scas
add
push
sub
and
mov
les
jae
mov
iret
xchg
mov
pop
clc
test
adc
lea
adc
cmpsb
xchg
stos
sbb
inc
jg
xor
add
fcomip
icebp
and
mov
cmpsl
pop
xor
pop
sti
cli
push
outsb
adc
test
in
and
and
add
cmp
pop
test
and
arpl
pushf
stos
pop
xchg
in
jbe
and
or
mov
push
jo
xor
xchg
stos
gs
enter
inc
leave
arpl
ret
pop
or
repz
sbb
int
or
pushf
adc
les
and
push
adc
lcall
or
and
jae
adc
inc
add
aaa
cmpb
inc
cmp
movsl
aam
xchg
mov
cmp
and
xchg
mov
out
push
jmp
and
lods
jle
gs
sub
pop
fimuls
mov
ds
fildl
and
shlb
mov
xchg
pop
mov
mov
ret
inc
jno
jle
mov
shl
xor
test
jmp
adc
jo
cli
push
and
rolb
pop
out
pop
jbe
into
es
dec
js
out
mov
lahf
mov
cltd
adc
orb
divb
pop
add
pop
aas
cltd
sbb
dec
dec
and
mov
fcomip
jnp
mov
aaa
test
push
adc
push
xor
jmp
clc
fwait
lcall
rol
mov
aaa
nop
enter
jmp
jg
sub
movb
mov
outsl
inc
adc
or
jge
ljmp
fstps
cli
jle
into
push
movzwl
scas
rcr
add
ds
scas
roll
fdivrl
fs
jg
mov
in
mov
shl
sbb
push
stos
cld
cmpsl
pop
jo
movsb
lods
gs
cli
or
cmp
jae
hlt
lods
add
mov
out
mov
pop
mov
movsl
or
scas
nop
aas
add
pusha
xor
out
call
enter
xchg
pop
pop
lea
addr16
lahf
pop
jg
pop
pop
jb
dec
pop
or
mov
insl
loop
cmp
push
in
fs
mov
das
insb
mov
es
or
out
sbb
ror
mov
in
xlat
cli
cli
icebp
in
add
out
and
out
jne
dec
cmp
inc
inc
sbb
xor
lcall
inc
orb
sti
xchg
push
cmp
mov
jmp
mov
push
movsb
push
mov
sbb
mov
rcrl
imull
sbb
lea
bound
dec
pop
push
xor
mov
mov
add
push
aam
shrl
jbe
sarl
scas
and
out
pusha
push
inc
sarl
inc
fistpll
and
and
add
pushf
add
push
adc
jl
push
loope
cmp
sahf
fidivrs
xchg
xchg
push
jg
add
aam
cmp
cmp
in
dec
dec
push
daa
imull
aam
jno
add
push
dec
leave
cmc
dec
aas
mov
and
outsb
sub
or
out
cmp
lea
out
ret
push
iret
mov
js
movsl
loopne
mov
adc
loope
jnp
xchg
pushf
dec
push
adc
sbb
shl
push
add
mov
pop
mov
adc
ljmp
mov
inc
lret
or
or
sub
push
scas
cwtl
pop
into
xor
test
pusha
int3
sti
jecxz
add
aaa
shll
adc
jmp
jae
pop
xchg
cmc
data16
pop
lds
push
jb
cltd
xchg
dec
test
iret
loop
lock
add
aam
adc
pop
and
or
gs
push
fbstp
push
mov
outsb
push
stc
sub
stos
adc
sbb
or
or
fdivrs
and
fisttpll
fstpl
push
dec
push
push
sbb
out
inc
mov
cmp
push
stos
fdivs
mov
andl
sub
sub
lret
jmp
outsb
jge
or
adc
push
mov
fs
xchg
inc
cwtl
adc
loop
ror
dec
pop
aad
push
dec
cmc
cmc
ljmp
mov
pushf
xor
pop
mov
je
decl
dec
cs
bound
inc
aas
push
sti
outsl
out
pop
repz
add
sub
bound
mov
mov
sub
popa
push
adc
cmp
std
hlt
mov
adc
mov
jl
hlt
outsl
cmp
xchg
rcl
xor
in
cld
cmp
roll
mov
movsl
cwtl
mov
shrb
loop
fists
sub
or
pusha
js
cmp
hlt
pop
and
adc
leave
pop
push
add
mov
lret
lods
xor
sub
aas
dec
xchg
cs
jne
lods
ss
dec
scas
jp
dec
sbb
mulb
lahf
sarb
mov
cwtl
add
ljmp
and
sub
dec
push
cli
xchg
sahf
sahf
push
fildll
add
out
cmp
pop
mov
cs
push
jbe
test
addl
cld
mov
jge
mov
nop
andb
sti
mov
mov
add
add
add
mov
jnp
scas
xor
mov
lock
push
add
push
mov
cmp
rorl
stc
cmp
dec
xchg
add
lea
jo
aam
mov
into
inc
test
les
dec
lcall
stos
clc
out
xchg
popf
mov
xchg
sbb
mov
push
cmp
cmp
repnz
sahf
sbb
test
sub
inc
arpl
or
mov
dec
iret
adc
jbe
testb
sarb
icebp
adc
lods
aad
pop
adc
sti
xchg
inc
xor
shr
xchg
lret
mov
cmp
cmp
aaa
dec
scas
push
subb
test
dec
jecxz
or
imul
lcall
xor
insl
inc
je
mov
xor
mov
dec
dec
inc
pusha
mov
stc
mov
sub
fisubl
cmp
stos
pop
daa
xlat
int3
or
cmpxchg
dec
pop
popf
jb
inc
testb
push
cmp
fwait
repnz
imul
fstpt
int
movsb
xlat
cmpsl
leave
pop
mov
mov
push
ret
sti
jecxz
and
sub
xor
cld
pushf
add
add
stos
xor
pop
fwait
pcmpgtw
jle
mov
adc
in
fildll
mov
pop
xchg
shll
and
sbb
xchg
xchg
in
jle
mov
out
sub
dec
lods
mov
rclb
into
cwtl
lods
cmp
jae
dec
jmp
sub
xor
inc
cmp
repnz
scas
mov
xor
jmp
lahf
daa
gs
mov
pavgb
hlt
and
xchg
gs
sub
push
inc
inc
stc
aaa
lcall
mov
leave
mul
xor
ret
dec
das
inc
jbe
adc
fimull
leave
push
jecxz
pushf
mov
pop
mov
rcll
sar
add
mov
mov
popf
and
push
xchg
xor
xchg
ret
subb
stos
sub
jmp
add
inc
xor
fs
jne
xchg
cltd
add
cmp
jno
and
add
ror
stos
cltd
cmp
bound
mov
leavew
clc
inc
mov
je
push
test
loope
cli
in
enter
inc
push
cwtl
out
dec
mov
in
sti
cmc
je
sub
in
hlt
into
add
cmp
pop
mov
inc
cmp
gs
jmp
cltd
jne
test
mov
mov
popa
aas
sub
xchg
hlt
push
pusha
add
pop
ret
iret
cmpsb
mov
sub
push
fs
jge
pop
lcall
cmp
mov
mov
sbb
pop
jns
sbb
test
jmp
lahf
xchg
ja
outsb
int
add
fwait
decl
call
inc
xchg
and
fcomi
hlt
imul
xor
arpl
xchg
data16
mov
or
out
mov
lea
lahf
jnp
cmc
loop
jo
pop
bound
mov
out
les
pop
lret
popf
cli
enter
leave
lahf
imul
aam
icebp
adc
inc
cmpsb
iret
sbb
sbb
lea
push
outsl
and
icebp
or
pop
sub
jle
mov
sub
sbb
cmp
adc
cli
mov
pop
cmpb
pop
out
test
lods
pop
fwait
inc
inc
mov
sub
sahf
and
rcrl
pop
into
pop
add
inc
jb
pop
mov
aam
stos
ljmp
push
push
jge
cmc
scas
or
xor
xchg
xor
xchg
imul
sarb
rorl
cmp
je
sub
fdivl
push
stos
fnstenv
push
and
sahf
push
andb
push
outsb
jns
xchg
mov
cmp
add
add
sbb
mov
sub
jle
xlat
test
push
adc
mov
inc
add
fisubrs
nop
bound
pop
imul
imul
out
loop
ret
out
addl
jae
mov
xchg
sub
add
jge
lahf
cs
test
fldenv
pop
add
mov
adc
push
mov
or
dec
jo
in
mov
xlat
xchg
adc
hlt
mov
repz
jae
push
aam
push
inc
sti
sub
mov
arpl
cmp
cmpsl
xor
jmp
dec
repz
xchg
sub
and
sub
xor
neg
mulb
push
mov
hlt
lahf
jo
pop
xor
cwtl
add
test
adc
movsb
mov
dec
shrb
xor
jns
pushf
scas
or
inc
and
sahf
aaa
push
pop
and
add
ret
jmp
lods
jmp
cmpsl
and
fnstenv
inc
add
xor
test
pop
sub
inc
push
fs
cmp
and
std
js
in
rclb
or
or
rcrb
out
adc
cmc
and
int3
cmp
jge
push
jg
das
add
test
in
addr16
scas
push
aas
add
add
inc
pop
test
rorb
inc
popa
xchg
cwtl
push
cmp
lahf
cli
leave
xchg
dec
mov
aas
popa
scas
add
ss
mov
jecxz
in
rorl
enter
mov
mov
mov
dec
imul
fnsave
test
test
xor
sub
scas
sahf
mov
mov
test
push
mov
mov
enter
and
out
bound
mov
cmpsb
ds
add
xchg
mov
in
jp
nop
sub
ds
in
mov
jns
add
pop
stos
das
loope
xor
xchg
cmp
jne
sbb
inc
mov
es
mov
test
adc
les
scas
loopne
xlat
jne
jo
ret
aam
clc
lods
jmp
stc
imul
idivb
sbb
cltd
ds
je
shll
loop
xchg
and
dec
cli
sbb
inc
xchg
cmp
lret
add
sbb
pop
imul
pop
mov
int
shll
movsb
push
push
inc
push
sahf
inc
dec
cmp
int3
jge
aam
test
icebp
fsub
hlt
enter
pop
shrl
jmp
xchg
inc
shrb
sti
xchg
jmp
lcall
pop
push
dec
icebp
sbb
add
pop
sbb
xor
int3
cwtl
nop
pop
adc
mov
pop
incb
xlat
xlat
xlat
sbb
and
daa
int3
xchg
push
lods
sub
in
popa
into
adc
loope
pusha
or
mov
enter
cli
cmp
mov
jmp
push
pop
mov
stc
testb
mov
jecxz
ds
out
pop
arpl
jl
mov
cmpsb
jne
repnz
mov
out
dec
ljmp
scas
arpl
xorl
inc
insb
insb
adc
push
loope
mov
daa
add
fs
outsb
pop
mov
fnstsw
pop
push
sub
inc
adc
cmc
test
push
insl
scas
dec
and
lods
out
mov
add
jbe
mov
jns
cltd
decl
jecxz
ja
loope
and
inc
adc
sahf
or
stos
mov
pop
jo
add
cltd
mov
mov
daa
push
adc
loopne
jb
int
imul
clc
cwtl
jg
jne
cwtl
fs
clc
ret
call
out
push
jmp
or
jns
mov
jbe
andl
xor
push
test
lods
sbb
ja
and
xchg
out
cmp
push
roll
mov
outsb
int
fcoms
sbb
add
mov
lcall
push
add
push
and
or
arpl
pop
pop
lea
xor
imul
lret
nop
cltd
jg
clc
inc
into
lret
xor
push
gs
or
loopne
or
jo
push
movsl
jb
add
and
out
xchg
or
jl
jmp
push
sub
lcall
xor
xchg
adc
jne
lds
sbb
cmp
cmpsb
iret
fwait
out
add
imul
bound
or
cmpsb
pusha
pop
jns
lret
push
jl
jo
mov
inc
scas
dec
push
sub
movsl
inc
test
jno
cmp
fucomi
and
fadds
xorl
pop
xchg
mov
mov
arpl
pop
std
fwait
or
outsl
sahf
repz
mov
or
adc
inc
mov
mov
stc
jmp
mov
jecxz
mov
leave
push
jp
push
flds
into
movsw
int
sub
sub
jg
cld
les
cmp
or
jmp
call
mov
out
andb
sbb
incb
inc
fcmovu
cwtl
dec
movsl
iret
hlt
jmp
mov
add
fldt
and
jns
pop
push
xor
adc
in
push
pop
pop
xor
push
lea
dec
jecxz
jne
out
movsb
hlt
sub
sti
out
icebp
sbb
stos
cmp
sarl
popa
subl
cmpsb
xchg
and
loop
mov
loop
ljmp
lahf
or
cli
popf
mov
hlt
mov
add
adc
addl
in
das
je
negl
mov
add
fiaddl
cs
xor
ja
xchg
test
xchg
lods
pop
adc
and
movsl
js
loop
int3
push
mov
lret
jo
dec
out
pop
ja
imul
jge
in
insl
inc
push
mov
in
mov
ficoml
sub
scas
push
int3
xor
lcall
cmp
jo
ret
and
add
and
orl
je
in
mov
stos
push
sub
and
xchg
or
and
ljmp
clc
jmp
dec
aaa
out
push
or
lods
pop
int3
pop
jne
mov
xchg
sahf
imul
imul
rorl
sbb
pop
aam
dec
insl
test
or
push
push
or
push
jb
and
cmp
push
sub
dec
cli
cmp
leave
sarb
sub
inc
fildl
repnz
gs
negl
mov
ljmp
sbb
cmp
test
lds
cli
xchg
dec
xor
shll
arpl
and
ficomps
push
xlat
xchg
inc
gs
jmp
cmpsb
fld
adc
pushf
sbb
mov
cmp
popfw
xchg
dec
cld
popfw
xchg
sbb
push
es
push
xor
test
cmp
das
fwait
cs
mov
outsl
jno
mov
push
lock
xchg
sub
call
repz
in
ret
aam
mov
inc
loopne
test
and
fstpl
pop
or
mov
jbe
lea
cmp
ljmp
aas
dec
lahf
xor
xor
fdivr
sbb
pusha
jecxz
out
leave
adc
mov
daa
dec
outsl
nop
rolb
pop
pop
inc
mov
sti
and
jnp
and
dec
jmp
push
push
jp
and
gs
jge
xor
mov
pop
jge
fildll
out
aas
mov
cmp
bswap
sbb
pop
xchg
lret
aad
xor
sahf
or
or
cmp
and
mov
rolb
ljmp
popf
push
repnz
scas
xchg
shlb
pop
gs
push
or
jno
popa
push
jge
mov
jg
pusha
test
stos
shrb
in
in
pop
lahf
pop
pushf
popa
mov
jl
add
cmp
movsl
dec
fcomp
cmp
mov
enter
in
xor
jae
mov
das
test
xchg
mov
jne
pop
or
arpl
inc
pop
cmp
insl
bsr
jae
mov
movsb
inc
aaa
sub
adc
lods
mov
add
lcall
jo
jns
sbb
push
std
ret
mov
out
fsts
mov
mov
pop
cmp
icebp
pop
pop
push
lret
xchg
aaa
sub
stos
mov
mov
inc
outsb
push
xchg
jae
jne
roll
loop
fisubrl
push
data16
cmp
jecxz
into
jg
sti
jmp
loope
stos
push
jecxz
mov
mov
push
dec
lea
lods
les
sbb
push
cmp
mov
ljmp
xlat
push
and
cmpsl
sbb
jg
ja
pop
imul
mov
inc
adc
js
loope
cmpsl
dec
cld
pop
mov
mov
jge
xor
fdiv
push
pushf
mov
dec
lahf
pop
sub
or
cld
inc
add
loopne
hlt
pushf
push
sub
cmp
sbb
iret
shlb
xor
imul
push
jp
lea
nop
in
andl
cmp
jmp
fnstcw
out
xchg
or
mov
and
jecxz
xchg
rclb
pop
push
test
mov
mov
lcall
or
sarb
sbb
in
stos
mov
cmp
ss
push
das
std
data16
pop
mov
xchg
gs
jg
mov
jmp
adc
out
xchg
mov
cltd
push
cmp
sbb
or
cmpsb
and
fadd
cmp
mov
inc
jg
add
sti
inc
push
fmulp
jmp
in
dec
push
jl
pop
and
in
sub
pop
adc
add
scas
fildll
ret
sbb
add
push
mov
pop
lea
jp
pushf
jp
push
cld
push
push
lds
sbb
jae
mov
jne,pt
jb
jl
mov
push
clc
jo
int3
sbb
lods
pop
ja
mov
repz
decb
xor
cmpsl
cmp
into
adc
jns
add
cmpsl
sbb
mov
mov
xchg
mov
sbb
ja
rorb
rolb
mov
movsb
lock
mov
pop
push
insb
loop
les
xchg
mov
repnz
sbb
or
addr16
add
jle
data16
adc
scas
daa
in
ja,pn
ljmpw
mov
adc
sbb
mov
lock
dec
aam
daa
fcmovnu
iret
xchg
mov
pop
insb
fmuls
xor
lret
or
dec
js
lcall
mov
mov
lahf
into
or
pop
mov
cmpsb
fs
repnz
pop
mov
fwait
dec
adc
jmp
mov
bound
or
stos
test
icebp
or
mov
ret
mov
imul
icebp
dec
xchg
gs
jb
pusha
dec
fldl
ja
dec
hlt
xchg
add
leave
aas
jge
mov
xor
jl
and
push
push
mov
loopne
cmp
ss
daa
push
inc
dec
mov
xchg
lret
loope
jmp
sub
notl
mov
les
push
fistl
mov
push
shrl
add
cli
sti
test
mov
pop
rclb
ret
test
dec
sub
dec
xchg
pop
add
test
fxam
cmp
int3
test
and
mov
test
loop
add
enter
or
add
out
xchg
bt
test
push
or
push
sarl
std
insl
push
in
jo
adc
dec
jecxz
fisubl
jns
dec
mov
enter
mov
xchg
scas
dec
out
cmpl
mov
outsb
addr16
mov
lods
test
cmc
mov
sbb
int3
out
addb
adc
xchg
xor
jae
call
sub
jne
xchg
cmc
jns
shl
cmp
push
sub
xor
std
repnz
into
add
cmpsl
push
xlat
cmp
inc
sub
or
xchg
jge
test
xorl
into
jle
jmp
mov
jg
mov
insb
jbe
and
mov
or
fmull
or
push
lods
shlb
cmp
pcmpeqb
mov
dec
test
repnz
repz
das
ja
arpl
repz
pop
cmpsl
or
popa
subb
pop
mov
sub
cltd
ret
outsb
lcall
mov
iret
pushl
sti
imul
mov
mov
inc
cmp
popf
test
pop
xorl
jne
cmp
in
jns
test
sahf
clc
mov
dec
lds
dec
and
sub
cmp
sahf
loop
sub
fmull
sbbl
psllq
cli
and
pop
pop
popa
pop
aas
cld
inc
scas
and
mov
mov
add
mov
and
jae
scas
fstpt
sub
into
cli
adc
or
mov
fisubrs
loope
jg
xchg
push
shlb
loopne
stos
push
lret
or
ds
imull
push
arpl
cmp
incb
add
in
rcrl
jbe
xor
dec
xchg
clc
std
push
sub
mov
sarb
ret
and
mov
xor
ds
fsubr
jg
gs
and
lea
or
fistps
popf
push
adc
and
std
adc
ja
rcll
pop
aaa
dec
mov
into
add
setg
cli
sbb
lret
mov
sub
jmp
jbe
add
mov
adc
movsl
add
pushf
mov
loope
icebp
adc
stc
adc
push
lods
xchg
dec
dec
jge
jl
aam
sbb
gs
push
loope
or
dec
pushf
shlb
lea
in
add
loop
lret
dec
cmp
cwtl
xchg
adc
jge
jmp
test
cmp
mov
outsl
and
bound
mov
sbb
xchg
test
jmp
les
sub
jae
ficoms
or
sbb
pop
add
lock
out
pop
pop
jbe
push
out
and
and
xchg
jp
sete
subl
js
loop
int3
popa
dec
inc
bound
aad
sbb
testl
pop
jl
jecxz
mov
movsl
inc
sub
stos
test
push
cwtl
pop
add
mov
insb
movsb
repz
inc
or
in
adc
gs
int
inc
or
sahf
mov
lahf
lds
stc
push
jle
add
mov
sub
jne
scas
jae
push
stos
adc
mov
xor
hlt
ss
lock
pushl
into
jecxz
loop
repz
in
sbb
ss
aaa
pop
mov
jnp
stos
mov
inc
mov
xchg
jge
pop
test
mov
loopne
out
inc
mov
sub
mov
les
iret
xchg
lret
sub
inc
pop
imul
mov
or
xchg
leave
clc
pop
jns
fsubrs
and
outsl
into
repz
add
adc
xchg
cmpsb
insl
cli
movsl
xchg
std
test
cmc
stos
jb
dec
lcall
adc
xlat
dec
into
push
mov
push
xchg
negb
xchg
add
jmp
scas
mov
jns
mov
movsl
xor
ja
jp
bound
jl
cmp
push
testl
cld
dec
add
loop
and
add
mov
dec
daa
decb
cmpsb
mov
fisubs
mov
sar
inc
jo
mov
add
fwait
daa
or
xchg
int3
loopne
fldt
ret
xor
inc
outsl
pusha
gs
cmpsl
clc
xor
push
rorl
repz
lret
cmp
sarb
add
inc
push
dec
mov
mov
adc
sub
ficomps
pop
int
test
inc
add
mov
xchg
adc
outsb
adc
add
pop
jnp
push
scas
and
or
fdivrp
inc
xlat
xor
xchg
inc
adc
cmpsl
pop
shlb
jb
lods
in
icebp
mov
push
in
adc
mov
sub
mov
and
mov
jmp
dec
ja
imul
jno
mov
daa
jge
enter
sub
lds
lret
and
fiaddl
xor
or
dec
xor
lcall
xor
repz
mov
sbb
lea
int
jb
inc
sbb
lock
pop
xchg
ljmp
jbe
pop
add
pop
push
fimull
pop
sub
sbb
fcompl
add
or
cli
pop
aam
sub
in
xchg
adc
retw
push
add
xor
add
aas
cmpsb
push
xchg
xor
aam
gs
repnz
outsl
shrl
cmc
and
sub
mov
pop
popf
shrb
gs
jae
outsb
call
out
and
mov
xlat
and
popa
fstl
mov
out
fwait
hlt
clc
or
rorl
leave
mov
pop
xchg
rclb
sbb
or
adc
inc
mov
fimull
jl
mov
sub
out
lcall
adc
repnz
mov
adc
xchg
mov
push
test
in
loope
clc
test
sbbb
xchg
cmp
cwtl
pshufw
adc
outsl
jno
jecxz
or
insb
push
adc
imul
js
xchg
xorb
sub
adc
add
mov
cmp
in
or
jno
xchg
pushf
test
mov
jne
jbe
and
xchg
lret
js
jg
fdiv
mov
adcl
or
addb
jle
inc
add
das
mov
mov
sub
jns
push
xchg
je
sub
je
pop
fs
test
out
ss
inc
mov
xor
cmp
sbb
pandn
shr
ja
out
stos
mov
repz
lret
out
pop
cltd
pop
push
xchg
mov
popf
daa
lods
lahf
pop
ret
minps
xor
sbb
fwait
mov
xchg
ficoml
addb
pop
ret
sub
icebp
sub
out
cli
std
cmp
adc
out
mov
stos
inc
mov
xor
jb
aaa
and
mov
fisttpll
jmp
sub
imul
push
aas
dec
stos
test
pop
fnsave
mov
mov
push
mov
sbb
pusha
pop
lahf
bnd
jne
pop
xchg
or
lret
jg
fdivrp
mov
add
sbb
imul
ret
stos
shll
nop
xor
dec
aas
bound
push
jge
inc
ret
jns
dec
les
or
test
pushf
negl
incl
and
push
push
mov
and
mov
or
xchg
or
aaa
xor
inc
xor
adc
xor
out
popa
dec
push
outsl
sti
scas
jle
mov
jmp
mov
outsb
lret
sbb
ja
sub
aas
sbb
sub
jg
sahf
test
sub
stc
cmc
sahf
push
es
sbb
xor
push
pushf
adc
ds
iret
xchg
jmp
sbb
aam
lods
push
inc
push
xchg
xchg
cmp
out
popf
lock
pushf
mov
fldcw
lcall
inc
mov
hlt
jb
fstpt
hlt
cmp
xor
ss
movsl
add
sub
dec
lahf
pop
mov
outsb
leave
outsb
pop
push
test
and
in
ret
hlt
mov
push
jnp
jns
aam
fwait
and
push
jmp
xor
test
mov
adc
xchg
out
jo
adc
rol
int3
and
mov
sub
or
pop
cmc
lock
jne
pop
mov
mov
mov
clc
sti
out
inc
xchg
mov
rolb
fsubs
dec
out
push
idivl
fcompl
or
add
ljmp
xor
jmp
xor
mov
insl
int
inc
and
pop
mov
jge
and
mov
inc
xor
mov
popf
cmp
inc
loope
lcall
lret
rcrl
daa
sub
jmp
push
in
sub
test
dec
lret
pop
sub
mov
int
rcrl
mov
pop
adcb
xor
or
inc
pop
jmp
fisttpll
xchg
aaa
and
pop
mov
mov
mov
lock
enter
cli
movsl
popa
sub
in
fstpt
hlt
pop
pop
pushf
dec
jmp
push
sub
repz
mov
lds
jb
sti
shr
pop
int3
pushf
mov
mov
pop
mov
jmp
sbb
mov
inc
jg
fs
jecxz
jg
xchg
or
negl
xchg
les
xrelease
int3
xlat
and
add
dec
push
jbe
xchg
adc
dec
mov
div
shll
mov
imul
shl
std
add
sarb
scas
push
mov
mov
or
adc
sbb
dec
push
xor
ficoml
inc
cmpsl
mov
mov
mov
cmpsb
pop
or
jbe
mov
jb
insl
push
push
jae
pop
scas
sbb
fcoml
aad
movsb
mov
subl
mov
add
pop
dec
bound
adc
inc
mull
mov
mov
out
xlat
in
push
bound
movsb
insl
xchg
dec
add
mov
movsb
lea
enter
or
aad
push
add
jne
ljmp
sbb
add
jb
pop
push
xlat
jo
icebp
jae
add
cmp
repnz
cmpsl
adc
cmp
jb
aas
fnop
in
push
out
fs
sbb
pop
pop
clc
insb
sub
xchg
ds
push
test
add
jp
scas
or
sti
leave
or
xor
add
shlb
loop
push
sbb
sahf
outsb
jecxz
jl
sub
in
arpl
adc
cmp
jge
adc
push
mov
stc
jno
fwait
lock
movsb
shrb
or
mov
sub
imul
shr
adc
repz
gs
fiadds
mov
in
jns
imul
jl
arpl
dec
jp
mov
test
xor
adc
xor
orb
in
mov
mov
loope
in
lods
test
bound
in
xor
hlt
adcl
popl
pop
bound
daa
lahf
and
and
mov
mov
cli
lods
or
aad
sbb
shrb
jmp
xchg
push
sub
fildll
and
fildll
inc
mov
push
jp
in
imul
pop
pusha
xchg
movsb
xchg
testb
in
insb
lcall
mulb
fistl
addr16
sub
and
xchg
ljmp
push
int
mov
clc
cmpsl
hlt
mov
sub
and
popa
pusha
rorb
push
mov
mov
jne
push
lods
sub
inc
jbe
inc
push
add
xchg
cli
inc
adc
mov
mov
dec
mov
cmc
mov
fldt
movb
int3
aad
cmp
popa
cld
sbb
enter
pusha
mov
test
sub
sbbb
test
add
inc
lret
jge
test
cwtl
stc
cmpsl
cld
inc
test
and
in
pop
jp
movsb
ret
push
xchg
inc
fistpll
dec
or
movsl
lods
loopne
inc
add
jae
add
outsb
xchg
test
push
push
inc
jno
gs
repnz
testb
cmpsl
pop
cmp
fs
insb
lock
inc
hlt
jb
jae
pop
push
orl
leave
pop
jmp
xchg
mov
ret
jne
scas
les
scas
dec
sbb
sub
and
loopne
aaa
outsb
cwtl
adcb
and
shrl
cs
push
int
out
dec
sub
in
nop
lock
pop
test
mov
xor
jae
das
pop
mov
jns
pop
sbb
xchg
arpl
xor
shll
icebp
or
inc
dec
lock
jne
cmp
jae,pn
adc
push
add
aaa
and
mov
sbb
xor
dec
mov
fisubs
stos
orb
fisttps
insl
mov
loopne
outsl
pop
sbb
shl
repz
jge
aaa
pop
test
lock
addb
sarb
popa
insl
loopne
sub
fidivrs
jne
mov
push
lret
sbb
call
add
sbb
cmp
adc
xrelease
ljmp
hlt
mov
data16
or
adc
cld
adc
inc
pop
mov
shl
jno
rol
sbb
mov
out
ret
mov
es
jae
into
push
fiaddl
push
out
add
iret
xchg
negl
jne
pop
push
inc
or
mov
movsb
adc
lret
or
xchg
std
mov
fildl
fstps
or
adc
insb
jle
fldcw
aaa
daa
dec
mov
cmpsb
repnz
mov
andl
mov
imul
into
or
stc
rcrb
add
add
nop
mov
mov
add
add
mov
sbb
cltd
cld
inc
ficoms
mov
mov
pop
repnz
fnstcw
mov
add
adc
cmp
fdivp
adc
push
adc
xor
pop
push
ss
push
clc
cwtl
insb
sub
push
adc
jbe
mov
lret
aaa
and
out
lds
test
jmp
aam
jb
jno
andps
xor
adc
aaa
ret
add
jno
jecxz
inc
icebp
dec
repnz
adc
int
sarb
xchg
pop
cmpsb
add
shlb
or
xor
mov
out
cmp
and
push
sbb
je
mov
mov
into
pop
cmpl
fimuls
jle
pop
mov
scas
aaa
push
outsl
pop
js
sub
ss
inc
cmp
pop
and
mov
push
pop
mov
shlb
mov
bound
mov
enter
jb
mov
mov
push
jge
pop
xor
lods
ljmp
push
or
stc
gs
fs
scas
ss
cld
cmp
int
mov
aaa
fmul
ds
idivb
and
sub
les
jecxz
sbb
shlb
into
or
jbe
out
mov
nop
pop
mov
jle
sub
or
dec
clc
xchg
ljmp
lods
xor
inc
nop
add
sub
outsb
ss
cltd
dec
push
dec
add
cmp
sbb
pushf
adc
sahf
add
cs
cltd
xor
loope
jnp
cmp
loopne
stc
xchg
push
test
inc
mov
dec
or
leave
jmp
dec
mov
sub
push
mov
and
inc
stc
in
or
dec
add
push
mov
jge
aas
sbb
arpl
fiadds
xchg
sti
sbb
lods
test
cwtl
cmp
out
bound
adc
scas
mov
cmp
cld
stos
or
mov
push
sub
ret
fs
nop
lcall
cmc
pop
rcrl
or
mov
outsl
mov
stos
rcll
leave
in
outsl
push
daa
xlat
add
inc
push
and
push
jl
enter
and
mov
mov
or
add
sar
and
out
jo
jae
inc
jns,pt
mov
ds
faddl
sbb
add
add
and
and
mov
mov
dec
dec
rorb
inc
xchg
jne
cwtl
sub
sbb
in
sti
xchg
dec
mov
jns
add
iret
add
lods
loope
in
dec
jle
cmc
xchg
pop
or
xchg
dec
sub
in
test
ljmp
cmp
push
push
out
xor
nop
js
sub
or
loop
push
pushf
and
daa
lock
pop
cmpsl
inc
lock
sahf
bound
push
dec
xor
arpl
jle
pop
inc
jo
mov
mov
cmp
addb
data16
sub
jnp
xchg
mov
dec
dec
pop
orl
mov
inc
inc
data16
mov
add
js
or
test
and
jl
add
lds
or
jo
fcmovnb
xchg
push
xor
jmp
push
test
cmp
push
loope
subb
xlat
aam
in
push
push
mov
shll
bswap
push
sbb
add
pop
sub
dec
stos
sub
xor
inc
aas
pop
movsl
cmp
add
lcall
data16
or
cmpsb
dec
cmp
fildll
shrb
add
or
push
fisubl
into
mov
sbb
cld
or
xor
repz
out
pop
lods
lahf
add
adc
sub
jl
jns
into
fucomp
sub
fs
jmp
adc
loopne
push
stc
push
insb
fidivrs
push
out
and
sbb
in
push
insb
shrb
xor
out
and
fistpll
inc
xlat
push
mov
andnps
cwtl
and
daa
int
outsb
mov
xchg
mov
dec
out
push
mov
push
pop
sbb
xor
add
int
or
cmp
mov
push
out
insl
jne
mov
leave
pop
js
xor
dec
mov
push
mov
mov
js
jg
dec
jns
ss
imul
lea
lcall
hlt
jnp
dec
push
adc
mov
pop
pop
movl
inc
push
push
pusha
sbb
repz
fstps
add
lock
loope
sbb
ljmp
fucomp
push
sub
dec
lcall
adc
rcrb
ja
orl
xchg
jno
sbb
imul
nop
repnz
popf
adcb
xchg
lret
test
adc
jle
rol
in
mov
mov
add
or
mov
push
fdivs
xchg
decl
sbb
leave
jp
call
out
idivl
push
ja
insl
subl
or
xchg
sbb
jp
cmp
js
negl
in
mov
cmp
pop
xor
test
mov
mov
xlat
pop
out
hlt
int3
mov
or
and
cmp
mov
cltd
xchg
inc
imul
pop
div
out
fsts
and
insb
sub
int
aaa
pushf
lods
cmp
fidivs
sub
or
imul
iret
cmpsl
stc
rcrb
std
xor
int
adc
or
imulb
mov
icebp
jae
adcl
jmp
fnstcw
mov
je
jnp
jno
jns
sbb
pop
fstps
jb
add
xchg
mov
lahf
push
cmpsb
inc
sub
add
sub
or
or
and
cwtl
adc
sahf
jno
in
push
fstl
out
cld
daa
insl
pop
fstpt
scas
adc
jbe,pt
into
or
adc
pop
lahf
add
mov
fldt
xor
xchg
push
sub
add
inc
jmp
arpl
dec
adc
push
int
add
imul
movsb
andl
inc
adc
dec
and
adc
outsb
dec
sbb
and
sbb
insl
gs
jmp
out
sub
mov
out
shlb
mov
jo
dec
stos
push
insb
push
mov
in
lods
insb
loope
adc
in
out
cmp
mov
or
and
das
xchg
jl
add
roll
pusha
ret
xchg
je
push
imul
xchg
pop
jmp
rcrb
insb
test
dec
sub
fildl
xchg
outsb
push
aam
mov
aam
inc
cwtl
jno
sub
shlb
cmp
dec
cmc
fildl
adc
sbb
leave
or
jmp
push
pop
shrb
add
inc
mov
mov
push
adc
mov
and
pop
dec
pop
shll
jb
outsl
movsl
sub
sub
fdivrs
sbb
inc
pop
dec
mov
jmp
mov
mov
fcoms
adc
mov
gs
sbb
and
das
jmp
xchg
dec
and
iret
pop
ds
xor
add
add
and
mov
subps
insl
inc
call
shr
xlat
or
mov
rcrl
repz
std
or
mov
inc
enter
add
jns
jae
aaa
adc
outsl
fs
push
fs
stos
jnp
enter
fidivrs
hlt
insb
push
mov
xchg
inc
lea
fidivrs
test
andb
pop
dec
inc
addl
pushf
pop
xor
js
xchg
jbe
sub
and
adc
xchg
loope
mov
iret
mov
add
mov
add
sub
dec
test
or
pop
imul
xchg
push
js
std
mov
and
in
jge
faddp
push
loop
daa
aas
mov
xchg
inc
enter
sarl
cltd
daa
fs
rorb
mov
or
cmp
pop
daa
pop
cmp
movsb
adc
sbb
bound
fs
icebp
aam
and
inc
mov
fidivrl
ret
lds
rcrb
outsb
mov
jg
stos
xchg
push
sbb
dec
cmc
gs
fisubrs
adc
jp
jp
xchg
push
mov
sub
popa
xchg
xor
dec
adc
insb
sbb
outsl
dec
mov
andl
es
xchg
cmp
loopne
testl
or
and
imul
add
add
int3
xor
sbb
and
dec
leave
jecxz
incb
scas
adc
into
rolb
xchg
mov
push
in
adc
cmp
jp
les
xchg
push
stos
stc
mov
insb
test
add
push
jmp
xor
cmp
fs
leave
cmp
ja
repnz
push
icebp
xchg
and
or
adc
sti
inc
fs
mov
mov
lock
imul
scas
fstpt
jno
xchg
push
adc
dec
adc
cmp
sbb
ds
test
shll
scas
inc
imul
enter
fiadds
cmp
add
push
and
xchg
movsl
push
stc
fsubrp
sti
add
insl
test
stc
test
mov
ja
loop
jae
sub
xchg
in
pop
push
mov
or
jb
jbe
mov
or
or
pop
or
cmp
mov
int3
or
inc
xchg
stos
pop
mov
mov
and
insb
mov
ja
jmp
test
xchg
lock
dec
mov
xchg
cwtl
sbb
fsubrs
fwait
and
mov
mov
iret
insl
in
and
lods
inc
adc
lcall
in
push
push
fbstp
js
cli
jo
push
push
xchg
cmpsb
outsl
jns
arpl
adc
ljmp
lret
data16
leave
loop
push
sbb
and
xchg
inc
jecxz
imul
push
enter
fisttpll
push
push
xor
imul
add
test
fsubrl
xchg
into
inc
lock
inc
mov
dec
adc
je
or
push
push
mov
test
ret
popf
xchg
push
and
adc
or
xchg
or
mov
xchg
jl
and
add
add
inc
lret
pop
push
mov
les
jge
xchg
sbb
pop
xchg
scas
pop
into
mov
pop
test
and
jmp
lock
xor
fbld
data16
sbb
adc
addr16
mov
arpl
cmp
roll
sbb
nop
loope
mov
aas
cmp
hlt
lret
mov
cmpsl
mov
divb
push
mov
imul
dec
and
aad
fwait
mov
sub
cld
ret
xor
aas
dec
pop
nop
jge
sub
adc
mov
cld
xchg
sbb
pop
mov
push
jp
mov
je
mov
loop
jl
jb
adc
xlat
pop
dec
popf
cmpsb
iret
fldl
shlb
pushf
cs
sub
ja
nop
popf
pop
xor
cmp
dec
sub
jns
outsl
pop
lret
mov
out
mov
fbstp
push
jle
mov
jns
jmp
aas
fcoml
js
out
push
lods
sbb
ja
cmp
sbb
add
sbb
lock
lret
jge
les
loope
sbb
pop
bound
push
cmp
cmp
out
pusha
cmp
fwait
dec
sbb
mov
movsl
jp
aaa
ljmp
lods
mov
jp
mull
into
in
inc
sbb
mov
sub
call
cmovne
cli
enter
pop
adc
adc
jo
fimuls
inc
sbb
lret
negl
aam
adc
adc
mov
lahf
jg
stc
test
and
cli
adc
mov
rcrb
xchg
mov
adc
cmpsl
aas
imul
ljmp
flds
sti
test
pusha
and
jmp
sub
popf
xlat
adc
or
xor
mov
cwtl
cmpsl
xchg
es
mov
mov
cmpsl
rcr
sbb
into
and
aas
jbe
mov
pop
add
inc
add
sub
add
or
ret
dec
sbb
test
sahf
push
mov
pop
jae
bound
inc
daa
test
pop
pushf
xor
sub
test
jle
xchg
pop
mov
les
and
das
push
je
insb
mov
jge
jb
sbb
push
sarb
inc
mov
jg
push
push
adc
addr16
sub
fistpll
jnp
mov
out
sbb
jmp
sub
aam
push
xor
pusha
sub
pop
mov
aad
loop
cld
outsl
push
ljmp
dec
imul
mov
popa
dec
push
jo
pushf
lret
cld
loope
pop
adc
mov
aam
pop
jge
mov
call
mov
andl
cs
xchg
cmc
push
push
insb
pop
imul
addb
dec
cmp
xchg
mov
rcr
cs
sbb
sarl
lods
mov
mov
int3
sbb
mov
fldenv
cltd
push
push
mov
adc
stos
jns
je
das
sub
imul
mov
jno
cld
mov
sub
mov
mov
insb
and
xor
ljmp
jbe
in
add
adc
in
repz
mov
sbb
test
sbb
add
dec
mov
imul
add
push
inc
test
scas
adc
lret
mov
cmp
adc
fs
push
push
das
mov
xchg
outsl
ds
scas
xorl
sahf
std
pusha
into
call
ret
xchg
pop
push
xlat
loope
into
out
ds
cli
mov
sbb
popa
cmp
les
sahf
jbe
call
add
sub
inc
push
pop
xchg
dec
pop
in
or
pop
mov
leave
cmp
lock
icebp
adc
xchg
jecxz
mov
jne
sub
inc
mov
push
jne
lock
out
cwtl
xchg
je
lods
and
ja
cmc
push
adc
into
daa
mov
ror
lcall
out
push
pusha
inc
and
xchg
mov
clc
movsb
push
sub
nop
jmp
daa
mov
shll
jmp
push
aad
xlat
es
mov
lcall
push
mov
mov
push
xchg
pop
scas
in
fdivl
mov
repz
cmp
mov
mov
xchg
std
mov
and
mov
pop
int3
xchg
mov
sub
shr
add
sbb
and
mov
xchg
or
scas
aad
mov
ficomps
xor
or
pop
sbb
xor
loope
sbb
pop
jne
test
add
aam
pop
fstpt
adc
push
fsubr
orb
push
mov
jno
inc
scas
adc
outsb
add
jno
fadd
xor
mov
cmp
jbe
stc
xchg
jae
mov
xor
sahf
insl
fimull
push
and
xor
dec
in
push
push
xchg
les
pop
xchg
or
inc
cmp
scas
mov
cmp
leave
in
add
fadds
out
movsb
out
es
outsb
cmp
jl
or
adc
enter
jp
mov
mov
lcall
jl
pop
dec
int
pop
js
mov
mov
push
movsb
inc
and
movsl
int
mov
push
loopne
arpl
push
imull
mov
ret
stos
push
aad
pusha
pop
ja
dec
test
dec
dec
aas
pop
rorl
sub
mov
into
roll
fdivp
sti
dec
dec
sub
sbb
mov
push
je
mov
fldl
cmpsb
lods
cmp
je
push
dec
arpl
xor
lret
hlt
dec
sbb
add
sahf
test
imulb
andb
cli
hlt
jo
xchg
jle
shlb
insl
and
xchg
leave
loop
push
push
push
scas
jne
mov
xor
in
es
cmp
adc
adc
mov
jmp
out
adc
inc
dec
adc
adc
mov
gs
pop
push
push
test
mov
xor
push
leave
lods
inc
mov
scas
divl
mov
pushf
mov
scas
rol
xor
in
lahf
adc
sub
mov
cmp
push
jo
and
enter
mov
aaa
outsb
xchg
fisubl
out
in
cmpsl
and
insb
ds
ja
sub
shl
or
fisubs
aad
call
pusha
mov
andb
loope
fistl
push
fcomps
dec
dec
imul
ja
xor
addr16
jb
addr16
or
mov
adc
adc
inc
and
cld
sbb
sbb
inc
push
stc
inc
add
fwait
pop
test
push
popa
arpl
sbb
pop
rcll
loop
mov
xchg
inc
test
lret
insb
clc
clc
int3
mov
pusha
or
pop
and
mov
add
adc
out
in
mov
cmp
movsb
and
jns,pn
fs
fs
dec
lcall
jnp
push
das
jge
inc
pushf
sub
or
sbb
popf
idivl
mov
aad
push
sarl
mov
out
mov
lea
or
xlat
fs
aas
loop
push
sub
adc
insl
push
push
or
sbb
cmp
jno
jne
out
xor
push
inc
scas
push
xor
mov
pusha
popa
popa
addr16
jmp
sti
ret
jecxz
pop
int3
movsb
push
mov
xlat
sub
andl
cs
or
sub
scas
adc
popf
les
out
sahf
and
clc
cmpsl
jecxz
mov
jle
jae
lret
in
dec
shr
sub
sbb
stc
andb
mov
dec
push
push
scas
jmp
sub
sbb
xchg
add
jmp
and
cld
adc
jge
out
inc
dec
sbb
add
pop
cmp
ljmp
mov
sub
popa
sbbl
jecxz
fisubl
loopne
jne
mov
aaa
adc
shll
loop
push
push
fdivrs
sbb
insl
rolb
mov
lea
sub
or
mov
aas
and
call
xchg
sub
imul
and
mov
sbb
roll
movsb
ja
adc
xchg
lds
popf
push
stos
cmp
cld
ljmp
aaa
dec
jmp
jnp
shll
xchg
push
lret
mov
mov
push
lods
lods
pop
adcl
imul
mov
jmp
js
and
lea
push
adc
fdiv
add
aas
in
xor
fchs
call
in
sub
movsl
lock
jne
xchg
push
lcall
push
xlat
cmp
xchg
and
repnz
lret
icebp
out
sbb
or
push
outsb
sbb
imul
or
cmpsl
push
lret
pop
out
repz
jmp
inc
cwtl
xor
jge
cli
mov
lcall
out
add
mov
lock
and
adc
cmpsb
jge
icebp
xchg
xchg
das
push
or
lea
mov
pushl
popf
mov
iret
test
cmp
outsl
cmp
divb
hlt
ret
push
loope
loopne
or
xchg
cmp
mov
fucom
imul
fdivs
leave
rcrb
dec
cmpsl
jmp
dec
aam
mov
or
xchg
push
aaa
jmp
cmpsb
lcall
daa
xchg
cltd
mov
test
sub
add
outsb
or
mov
pop
xlat
jecxz
cmpsb
push
push
scas
inc
sbb
jge
sahf
jo
add
push
sub
les
inc
idiv
jl
nop
lods
popa
jg
jg
xchg
daa
lods
ja
xor
out
outsb
ja
jnp
lods
cld
imul
out
int
pop
stos
and
dec
sub
xlat
adc
or
cltd
dec
dec
dec
mov
push
adc
sbb
ds
cmp
pop
test
push
arpl
mov
pop
aas
add
inc
test
jecxz
mov
sbb
out
pop
cmp
fsts
jle
jle
aam
scas
in
xchg
mov
push
and
add
push
inc
jno
pop
repnz
imulb
pop
fwait
mov
outsl
xchg
and
daa
push
clc
fcoml
test
sbb
nop
xchg
mov
fsubrs
pop
mov
cli
mov
dec
push
add
sub
xor
push
out
sub
cmp
mulb
mov
push
push
je
test
mov
cmp
ja
scas
gs
int3
mov
cmp
jmp
and
jbe
fwait
mov
cli
jbe
addr16
sub
pop
pop
je
insl
add
lock
mov
cmp
jnp
fwait
cmp
dec
dec
xor
cmp
stos
xchg
xchg
adcl
aad
je
std
or
push
pushf
insb
mov
mov
xchg
inc
fyl2xp1
je
hlt
fdivs
aad
cs
ret
in
daa
push
jbe
cwtl
mov
mov
les
je
xor
pop
cmp
pusha
xor
push
mov
push
sub
mov
insb
pop
movsb
sbb
or
mov
sbb
aam
pop
es
insl
shlb
in
fwait
mov
daa
inc
pop
ja
adc
stos
sub
shll
xor
mov
movsb
cwtl
mov
add
outsb
adc
repnz
lret
push
das
xchg
lahf
push
mov
mov
jnp
mov
shrl
dec
mov
mov
fldl
imul
test
loopne
adc
movsb
pop
arpl
pop
mov
loope
cmp
mov
or
pop
js
call
pop
sub
adc
push
les
fucomip
xor
stos
pushl
mov
xor
mov
ja
dec
sbb
xchg
sbb
xchg
xor
repz
daa
mov
fldl
and
int3
sbb
xor
xchg
cmp
das
push
mov
add
int3
sub
scas
mov
daa
clc
rolb
push
jne
sub
sub
stos
push
jae
filds
push
div
xlat
push
and
adc
inc
or
mov
adc
sbb
pop
or
or
aam
adc
jnp
cmp
int
stos
jge
mov
cli
jb
gs
sbb
and
outsl
gs
jbe
popa
sub
lret
dec
dec
mov
and
push
repnz
test
dec
add
jmp
and
adc
stos
sbbb
push
mov
inc
ljmp
pop
ljmp
cmp
gs
jns
inc
pop
pop
cltd
orb
cmp
aaa
inc
sub
cwtl
int3
mov
and
and
sub
add
mov
xchg
test
nop
mov
mov
or
in
push
jns
pop
scas
inc
push
pop
or
int
cmc
adc
mov
imul
push
jge
push
xor
adc
dec
pop
mov
jb
sbb
shrl
nop
out
out
cmpsb
mov
enter
xor
push
pop
scas
xchg
notl
dec
pop
fstl
test
jne
lret
or
push
jbe
imul
pop
clc
std
inc
repnz
push
cwtl
add
sbb
inc
in
push
addr16
xchg
out
mov
push
lret
imul
dec
insl
mov
add
lock
mov
push
fmul
xchg
or
push
mov
lods
mov
sbb
dec
stos
pop
test
mov
sti
mov
push
lcall
in
jecxz
jnp
sti
or
inc
inc
push
sub
in
shll
sub
jns
sahf
cli
dec
dec
in
fdivl
in
push
fsubrl
int
sbb
lcall
mov
inc
inc
repnz
pop
and
mov
mov
push
xor
arpl
and
nop
sbb
mov
pop
lret
sub
je
mov
pop
in
lods
xor
mov
les
push
adc
ljmp
sub
inc
adc
mov
cld
insl
out
lret
shlb
es
in
pop
mov
sub
test
push
cwtl
test
mov
loop
stc
test
xor
imul
xor
xchg
and
xchg
fxch
sbb
jmp
fst
push
fnsave
loopne
mov
fisttps
pop
and
test
lods
imul
dec
aaa
les
je
cmpsl
stc
add
and
xchg
clc
push
xor
jmp
mov
ss
pcmpgtw
adc
lret
test
pop
repnz
mov
call
insb
stc
in
xchg
jns
inc
push
push
pop
push
lds
cmp
adc
pushf
sqrtps
stc
pop
idivb
ja
xchg
jo
jmp
mov
push
lret
call
inc
jbe
sbb
mov
je
lea
movb
mov
mov
loop
addb
and
jmp
aas
pop
shrl
aaa
mov
leave
loop
iret
and
imul
int
add
add
sub
fcoml
jecxz
push
mov
push
icebp
je
stc
hlt
cli
aam
push
pop
cmc
mov
jno
lret
mov
clc
jg
cs
fsubrs
ret
cmp
dec
jl
ret
sbb
addr16
in
adc
xchg
fbstp
mov
int3
push
shrb
pop
movsb
xor
mov
aam
inc
xchg
call
stc
test
inc
movsb
jae
adc
int3
rorl
ror
cmp
cmp
in
cltd
push
xor
out
push
jmp
mov
mov
insl
gs
sbb
pushf
dec
aaa
das
leave
cwtl
lahf
mov
jo
pop
mov
std
mov
outsb
or
add
xorb
xchg
mov
jne
test
test
incl
loop
arpl
xchg
mov
dec
cli
cmp
push
jp
stc
daa
push
or
adc
and
rorl
or
into
mov
out
loopne
mov
inc
add
add
mov
pop
shlb
lret
xchg
jmp
mov
or
sub
mov
rcll
inc
xor
xor
je
push
adc
ret
int
out
cmp
into
mov
into
jp
ret
arpl
lock
test
mov
lea
int3
loope
ftst
sub
cmp
lahf
sahf
mov
xchg
push
or
xorb
sub
loope
pop
push
sub
mov
jns
pop
add
mov
or
shlb
xchg
push
js
outsb
or
jb
inc
out
faddl
and
mov
sub
mov
das
notb
xlat
push
cmpl
push
shrb
and
xlat
mov
fistl
sub
enter
pop
mov
pop
xor
lahf
in
or
xchg
insl
sub
stos
in
jl
je
mov
enter
inc
dec
daa
dec
dec
pop
and
cld
pushf
imull
in
in
push
mov
in
lret
push
jo
push
jmp
mulb
add
mov
movsb
arpl
or
in
push
mov
jno
insb
mov
sarl
imul
cmp
inc
mov
das
test
or
rcll
mov
out
into
outsl
inc
hlt
cwtl
xchg
xchg
xchg
jbe
imul
test
mov
pop
pusha
mov
int
jmp
jae
popl
inc
mov
adc
mov
fcoms
lds
fnstenv
jg
inc
sub
imul
inc
dec
lods
mov
dec
cltd
adc
xchg
sub
lea
js
jecxz
mov
lret
cvtps2pi
sahf
ret
or
push
xchg
jg
adc
in
shll
int
cmp
fadd
jbe
clc
push
std
pushf
mov
test
adc
inc
xchg
mov
das
add
lcall
and
outsl
jmp
popw
test
jne
push
ret
dec
fistpll
test
pop
lods
int3
jg
xchg
sub
and
dec
sub
jnp
fcomip
adcl
mov
xchg
mov
cmpsb
jl
and
stos
inc
dec
add
sbb
test
ss
loopne
mov
test
scas
mov
mov
cmpsl
add
add
and
shll
movntq
or
mov
jle
sbb
in
testl
adc
jo
sahf
inc
loope
fisubrl
cltd
and
frstor
out
mov
icebp
adc
fwait
ds
adc
push
int
js
imul
das
inc
repz
punpckhdq
mov
jmp
inc
shl
adc
jbe
andl
ljmp
ljmp
dec
and
icebp
loope
movsb
sbb
ret
or
dec
popa
shlb
daa
pushf
pop
pop
sub
cmp
bswap
or
out
lcall
mov
push
push
pop
mov
cltd
xchg
add
roll
fdiv
fcomp
popf
pushl
jmp
ffreep
push
and
lea
adc
pop
or
adc
mov
inc
ljmp
mov
mov
icebp
xchg
pop
repz
mov
int3
mov
mov
push
mov
sahf
push
pop
push
xor
xchg
or
ja
data16
mov
lret
faddp
movsb
and
jnp
sbb
sti
arpl
mov
int3
jo
cmp
imul
and
lcall
js
andl
push
in
cmpsb
test
lret
mov
lret
adc
mov
rcr
or
outsb
push
sub
ret
shlb
stos
scas
jo
ljmp
xchg
test
testb
inc
das
outsl
dec
stos
div
mov
jecxz
xor
mov
imull
test
fimull
fldt
add
orb
scas
xchg
fs
cmp
nop
mov
mov
xchg
inc
test
or
mov
push
push
fcomps
cmp
mov
cmp
push
rorb
test
sub
push
jae
rcrl
jg
outsb
mov
adc
xchg
cwtl
jmp
add
negb
nop
add
es
aad
popf
push
loopne
lods
imul
outsb
and
into
pop
cmp
jg
jns
inc
or
cmpsl
xchg
cmp
pop
push
and
push
or
cmp
cmp
push
mov
mov
pop
and
push
scas
daa
mov
ffree
mov
add
stos
pushl
cmc
sbb
xchg
sbbl
aam
or
rcrl
sarl
insl
sahf
orb
jl
imul
pop
pop
inc
cmpsb
push
fldenv
cwtl
nop
push
push
mov
test
sub
mov
xchg
inc
mov
and
mov
setnp
mov
subl
insb
xchg
decl
adc
inc
jae
pop
and
dec
jne
jmp
repz
xchg
dec
fbld
mov
pusha
or
aas
and
repnz
pop
mov
sbb
mov
xchg
cmc
jnp
or
clc
call
mov
push
icebp
arpl
sub
pop
data16
adc
add
cmp
xchg
xor
inc
testb
aam
pop
adc
mov
sbb
test
cmp
or
inc
fwait
aad
sti
cmpsl
jae
pop
jle
sub
mov
cmp
dec
jp
cmc
jecxz
jae
adc
cmpsb
xchg
mov
test
mov
and
shlb
pop
push
test
cltd
out
push
out
loop
push
insb
jmp
cmp
inc
sti
mov
out
stc
cmp
cmc
imul
stc
lock
jns
dec
dec
pop
pcmpeqb
mov
int3
dec
ljmp
test
cmp
outsl
lcall
rcrb
out
inc
lods
andb
and
stos
sub
shrl
inc
xchg
inc
xchg
push
outsl
out
std
test
or
sub
xor
xchg
jge
pop
dec
jmp
sub
xchg
or
mov
lcall
das
adc
mov
or
hlt
inc
dec
push
bound
push
test
lcall
out
sti
insl
rcrl
popf
dec
dec
inc
repz
pop
imul
xor
shlb
test
pop
popa
and
xchg
into
aas
push
gs
mov
insb
out
pushf
push
neg
movsl
and
es
movsl
pop
adc
jae
or
and
jge
xchg
ss
cld
push
sti
xor
inc
push
cmc
jbe
pop
lods
repnz
aam
or
fadds
in
rorb
xchg
or
test
dec
nop
test
lods
aas
ret
jb
test
loope
xchg
sub
nop
mov
pop
mov
cmp
ficoms
lods
stc
push
xchg
push
popa
pop
adc
arpl
ror
lea
dec
stc
imul
cwtl
mov
in
dec
insb
imul
iret
stos
subl
negb
lods
call
lods
in
fadd
daa
nop
jg
xchg
enter
divl
inc
cmp
lret
jl
ljmp
dec
gs
notb
loope
test
roll
sbb
dec
and
cmpsb
push
and
andnps
iret
icebp
cmpsl
sbb
cmpl
aam
gs
mov
andb
mov
mov
dec
mov
jl
icebp
outsl
int3
subl
rorl
je
repz
lods
fndisi(8087
add
jb
icebp
daa
shrl
jns
decl
mov
mov
popf
mov
mov
mov
daa
sub
lods
in
and
add
push
addr16
fbstp
test
in
insb
cmc
jg
push
sub
xchg
xor
and
fcoms
ficompl
sti
lahf
imul
xchg
or
scas
add
sbb
std
pop
jecxz
pop
jle
xchg
bound
leave
scas
jge
sub
xchg
cmp
decb
ficompl
pop
sbb
xor
cli
mov
pushf
and
mov
adcl
mov
dec
test
ret
out
add
xlat
test
lcall
mov
int
fidivl
mov
ljmp
dec
mov
push
push
pusha
loope
and
ss
xacquire
sarb
xor
gs
mov
mov
dec
into
push
fsubs
inc
lods
fdivs
cltd
je
pop
mov
add
not
sub
sbb
bound
sbb
stos
sarl
xor
or
lret
push
ss
testl
fmuls
fldt
jmp
fbstp
jnp
mov
jl
lock
mov
addr16
int3
mov
xorb
rcl
arpl
mov
add
jg
in
sub
mov
aas
test
scas
insb
seto
mov
push
dec
mov
sbb
jecxz
push
inc
or
adc
mov
into
insb
xchg
pusha
testl
shll
shrb
ss
adc
mov
shrb
lods
jo
or
test
jecxz
in
orps
ds
out
xchg
mov
sti
pop
and
shlb
das
xchg
sahf
pusha
xchg
or
insl
inc
call
into
rcl
sti
push
push
mov
xchg
insb
nop
ds
xor
cs
ljmp
js
imul
xor
adc
cmp
aaa
js
mov
cli
push
pop
mov
cltd
in
int3
aam
je
loope
outsb
push
incb
push
mov
jg
jb
jo
jmp
imul
fucom
aad
lahf
pop
sar
orb
mov
loop
or
repz
pop
test
push
xchg
xchg
or
jp
std
and
lcall
neg
aad
push
scas
loopne
push
jmp
jb
sub
enter
shlb
and
lcall
lea
lods
cmc
jecxz
outsb
sub
jb
dec
push
xchg
lret
out
sar
popa
stc
jp
pop
aas
into
mov
jl
aaa
aad
mov
jno
sub
pop
jo
mov
cs
int3
roll
jb
aas
mov
mov
dec
popa
cmc
and
or
je
test
mov
xchg
into
loope
mov
adc
sub
call
fsubrs
sarb
fstpt
jo
add
jle
mov
sub
aad
and
mov
fistpl
push
xchg
add
ljmp
or
cmpsl
jmp
ret
mov
xor
or
inc
lock
add
cmp
jns
fst
in
xor
jmp
jne
fstps
insl
push
loopne
loopne
pop
pop
mov
lock
xor
jg
cmp
int
jae
call
fiaddl
push
adc
sub
hlt
cmp
xchg
jecxz
add
jo
mov
rcrb
or
inc
push
outsl
sub
cld
test
mov
das
pusha
dec
notb
iret
cwtl
orl
mov
pop
int
inc
mov
pop
jl
push
lods
sti
cmp
pop
jp
sub
push
out
lea
leave
push
add
mov
arpl
scas
fwait
lods
fwait
iret
push
movsb
inc
lahf
mov
cmp
push
jmp
sti
stc
repz
iret
and
push
pop
mov
sbbb
xor
sbb
jo
ret
xchg
push
mov
sub
mov
jmp
dec
arpl
repnz
mov
mov
dec
jae
ljmp
cltd
rol
cmovo
cmp
outsb
jbe
inc
mulps
daa
int
lods
cmpsb
por
sbb
push
jp
test
into
lcall
push
sbbb
adc
rcll
fisttpll
icebp
fsubp
lds
push
dec
cmp
cmpsl
repnz
xor
test
jno
xor
loopne
std
lods
dec
ret
inc
push
decl
inc
mov
xor
popa
push
jge
cmp
lods
sub
sbb
adc
mov
scas
xor
inc
inc
cwtl
andl
dec
adc
sub
xchg
aaa
shrb
mov
lds
lcall
mov
jge
lret
repz
pop
push
cmc
mov
and
ret
mov
stos
data16
push
shll
movsl
add
scas
inc
add
mov
lods
jle
adc
cmp
mov
pusha
or
mov
sbb
pop
jmp
dec
cmp
dec
xchg
sub
jno
mov
stos
mov
icebp
pop
sbb
mov
adc
iret
fmuls
stos
int
dec
imull
jnp
out
mov
fdivr
mov
loope
arpl
adc
sarl
sbb
int
fadds
dec
repz
mov
jge
push
test
test
dec
xor
in
xor
mov
xchg
in
jnp
mov
mov
jae
xchg
fs
or
xor
push
or
pop
lods
add
adc
inc
bound
push
loopne
icebp
gs
lock
popa
pushf
imul
xor
jl
mov
adc
imul
mov
aas
sub
xor
fdivl
out
dec
dec
push
jnp
lcall
mov
lret
xor
cmp
push
fwait
cmpl
push
bound
and
jecxz
lods
mov
sbb
in
test
daa
test
mov
divl
jae
sbb
xchg
pushf
xor
xchg
call
jbe
fcompl
nop
sbb
xor
sub
call
xchg
xor
in
xor
jo
add
ss
push
addl
psllq
add
mov
dec
sarl
mov
xchg
out
xchg
repnz
jno
jl
mov
or
loop
ret
push
pusha
add
icebp
fucomip
aad
scas
pop
fiadds
fistpll
and
aad
jle
lods
das
insb
insl
pop
and
hlt
xor
in
add
xor
lods
fucomip
adc
push
mov
pop
rolb
adc
roll
sbb
xor
sub
jle
jge
push
adc
aam
cwtl
out
mov
cmc
add
stc
mov
jne
mov
adc
cmp
ret
lret
inc
add
sbb
gs
fst
and
mov
mov
loop
popa
repz
jge
and
mull
xor
mov
hlt
fxch
ja
cwtl
jb
std
call
enter
sbbb
push
rcrl
fs
cmp
aaa
out
xchg
ficoms
jg
adc
xchg
sbb
pop
outsb
inc
movsb
mov
sbbl
ficompl
aam
pop
arpl
sbbl
stos
pop
les
adc
popa
mov
rcll
in
lea
push
ss
jg
dec
sbb
outsl
add
test
and
mov
add
cmp
xor
imul
arpl
mov
push
and
pop
stc
and
push
cmp
adc
mov
jp
add
mov
imul
xor
push
aam
ret
out
jae
cltd
mov
imul
sub
dec
std
orb
mov
add
sub
adc
int
cmpsb
outsl
repz
movsb
pop
cltd
pop
dec
lret
xor
mov
mov
aam
xchg
and
mov
sub
push
loope
adc
cmp
inc
es
subl
stc
jg
lods
lods
sbb
aad
cmpsl
sbb
ja
mov
pop
stc
imul
lods
adc
popa
adc
mov
cmpsl
hlt
mov
lret
fwait
sar
movsb
sahf
sub
outsl
les
adc
push
cmp
ficoms
or
hlt
cmp
dec
out
pop
not
leave
in
dec
inc
xchg
arpl
jns
mov
flds
in
sub
das
cmpsl
adc
xchg
jo
jl
xor
inc
aam
f2xm1
in
push
mov
lods
shll
pop
inc
addl
pop
push
sub
jne
cwtl
stos
scas
repz
ja
test
stc
sub
mov
adc
xchg
mov
adc
adc
add
fbstp
cld
push
imul
mov
adc
lds
movsl
sbb
cwtl
mov
ret
add
lds
out
inc
call
or
hlt
test
lods
sbb
call
gs
ljmp
in
adc
dec
xchg
xchg
cmpsb
iret
dec
sbb
out
out
roll
lahf
mov
lock
test
or
xchg
aas
in
pop
or
shlb
push
data16
imul
fstp
jmp
test
add
inc
sti
mov
shrl
movsl
fcom
jg
pushf
sub
or
repz
aaa
arpl
xor
dec
imul
inc
push
push
dec
rcr
shll
dec
pop
push
gs
dec
add
cmp
cmp
push
mov
adc
movsb
mov
enter
fmull
push
inc
imul
sbb
enter
adc
push
repz
jle
push
add
loopne
mov
push
iret
push
das
mov
mov
pop
das
addl
outsb
sarl
or
mov
imul
sti
ret
dec
in
dec
je
cltd
test
xchg
aaa
outsl
mov
mov
repnz
jge,pn
and
xor
adc
pop
sub
push
mulb
and
mov
loop
loopne
icebp
jecxz
nop
cwtl
dec
pop
inc
inc
int
sbb
cmp
icebp
xor
fxam
rep
mov
xor
add
and
jl
rol
pop
lret
shlb
add
sbb
cmpsb
xchg
mov
mov
lret
sbb
jle
mov
flds
jb
mov
xor
aaa
daa
movsl
imul
sbb
std
jle
sbb
ljmp
mov
and
jmp
sbb
jecxz
push
xor
mov
mov
in
inc
and
push
jb
sbb
sub
outsl
mov
test
inc
sbb
mov
stos
inc
cmp
dec
popa
les
inc
stos
push
mov
and
loope
arpl
insl
xchg
clc
es
or
or
cmp
mov
push
add
enter
jmp
div
aas
xchg
rorb
ljmp
mov
inc
mov
cmp
pop
dec
iret
fwait
cld
mov
and
push
cs
add
aaa
sbb
repz
cmc
push
subb
clc
mov
pop
hlt
inc
jbe
cmp
adc
push
rclb
fsubs
stos
fcompl
pusha
sbb
rorb
scas
roll
aas
sub
push
pop
cmp
lret
or
jne
adc
dec
sahf
push
and
sub
repnz
ljmp
fcmovnu
cmp
iret
xor
pop
mov
sbb
inc
mov
cs
lock
lcall
mov
cmp
mov
iret
mov
inc
push
rcr
cmp
fwait
cli
mov
test
jecxz
mov
add
test
andl
push
cmp
pop
mov
mov
in
pop
jmp
or
inc
xlat
and
add
dec
sbb
imul
cld
shll
sub
les
loope
add
movsl
divb
jbe
xchg
mov
or
push
cmp
xorb
mov
cmp
cwtl
cli
invd
mov
adc
sti
mov
fs
xor
mov
push
mov
int3
fistps
adc
push
fildll
mov
or
sbb
test
and
jns
sbb
and
sbb
dec
push
div
inc
adc
test
xchg
movsl
jo
insl
loope
cmpsl
sbb
js
xor
lods
push
push
mov
and
iret
out
arpl
aam
in
shrl
xchg
push
pop
pop
pushf
cmpsl
in
cmp
dec
in
inc
mov
jne
push
lock
int
popa
sbb
lea
mov
inc
xor
rclb
xchg
pop
cmp
out
dec
mov
add
or
sub
mov
xlat
dec
dec
insl
or
mov
es
out
sub
pop
pop
mov
sbbl
xchg
inc
inc
cmc
inc
pushf
jno
or
mov
adc
inc
int
lcall
mov
scas
pop
xor
fisubl
adc
in
imul
or
xor
xor
imul
push
mov
sub
stos
sub
in
call
mov
mov
sub
pushf
pop
sahf
sbb
and
std
movsb
test
and
fiadds
ja
xchg
cmp
dec
stc
cmpb
repz
jge,pt
out
dec
mov
mov
cmc
mov
in
addb
mov
daa
rolb
xchg
fs
ret
xchg
idiv
mov
xor
lahf
pop
xor
ja
push
fldz
lret
push
mov
xor
cmp
ret
xchg
mov
nop
xor
sub
jg
dec
cmp
jbe
push
loop
pusha
data16
or
fistpll
adcl
gs
adc
cmp
mov
sbbl
add
pusha
sbb
leave
push
push
mov
leave
pushf
stc
arpl
and
imulb
and
push
xlat
imul
mov
add
rcr
adc
lcall
add
cmp
or
call
and
jb
pop
mov
cmpsb
cmc
jae
lods
mov
lds
popf
dec
shrb
push
push
mov
std
mov
lret
mov
mov
mov
push
outsl
dec
xor
xor
popf
mov
mov
cmpsl
stc
aas
shrb
imul
insl
roll
int3
repz
fisttpl
xor
das
mov
mov
push
push
js
sub
loope
loope
jg
xor
fs
inc
data16
jp
add
iret
mov
repnz
js
shll
sbb
aad
push
movsl
bound
push
lods
mov
fs
scas
imul
lock
jne
adc
jb
add
fnstsw
fwait
icebp
lods
xor
add
xor
add
mov
call
lea
add
xchg
dec
jne
imul
mov
aad
sbb
sub
outsl
loop
mov
sbb
inc
inc
xor
cmp
xor
push
leave
and
mov
mov
inc
test
mov
xor
fimull
push
mov
push
pcmpgtw
pop
movsb
pop
sbb
outsl
in
js
daa
sub
mov
push
movl
ljmp
pop
sarb
leave
int3
lods
mov
inc
cli
mov
pop
sar
test
lcall
push
loopne
adc
pop
ljmp
xor
dec
fldl2e
out
or
repz
mov
js
cltd
dec
push
test
out
dec
dec
jnp
pushf
lods
sub
addl
mov
inc
sti
mov
test
in
imul
jo
arpl
push
sbb
jbe
adc
mov
pop
mov
push
inc
shrb
test
or
adc
xlat
cmp
lahf
test
ss
mov
fstpl
sbb
into
adcb
inc
adc
add
iret
dec
push
xor
rorb
sub
nop
sub
fs
adc
xor
push
data16
adcb
dec
fcomps
mov
adc
mov
xchg
sub
adc
adc
std
icebp
insb
pop
xchg
pop
cmp
xchg
fnstcw
mov
pop
dec
push
inc
lret
dec
cmp
jne
xchg
cmp
daa
loope
ss
jecxz
mov
mov
imul
fisttpl
negl
jae
adc
das
adc
les
jbe
or
popa
xchg
or
jo
mov
ja
pop
cmp
dec
iret
jmp
jno
push
nop
stos
inc
scas
outsb
lret
pusha
clc
jno
mov
dec
ret
push
xchg
cmc
pushf
push
xlat
and
int3
pop
jp
cmc
enter
stc
bound
mov
scas
push
outsb
push
mov
cmp
ljmp
fdivl
les
sar
in
cmpsb
fwait
cmpsb
bnd
mov
pop
dec
sbb
incl
data16
mov
dec
cmc
push
mov
test
jae
pop
inc
lret
mov
iret
xor
mov
mov
and
jge
testb
inc
add
add
int3
push
sbb
sub
mov
outsb
lcall
mov
xor
imul
sbb
cmp
sbb
clc
sbb
arpl
adc
shrl
xor
dec
jno
lods
insb
imul
insl
imul
mov
iret
movsl
rorb
out
cmp
aad
imul
out
mov
sahf
repnz
mov
in
in
and
ficompl
cmpsl
mov
and
mov
adc
and
and
push
pop
push
jo
xchg
movsb
cmc
mov
sub
pop
mov
push
cld
add
add
jo
ds
cmp
xor
ja
int
cmp
pusha
xor
xlat
ljmp
cltd
call
xorb
pushf
fiadds
dec
pop
mov
adc
jmp
inc
xor
mov
jbe
leave
mov
enter
sbb
cmp
pop
pop
outsb
push
inc
jge
into
jno
movsb
imul
jg
inc
je
inc
mov
aas
mov
adc
cmpsb
mov
sub
mov
in
stc
jb
dec
out
xchg
lds
jle
mov
mov
test
adc
fidivrs
sbb
or
aaa
add
dec
xorb
xchg
sahf
ss
mov
or
xor
dec
popa
lock
mov
clc
pop
adc
ja
aas
ja
dec
ljmp
inc
cmp
arpl
adc
mov
ljmp
mov
lds
cmp
jb
cld
add
ret
jg
aam
js
pop
mov
cmp
adc
fisttps
inc
fadd
mov
mov
adc
jp
and
int
insl
adc
mov
scas
dec
fs
les
adc
es
and
mov
rorb
cmc
push
bound
jbe
lret
lcall
mov
int3
mov
or
daa
faddl
outsl
jnp
fcom
arpl
out
mov
mov
std
mov
mov
sahf
frstor
in
mov
loop
mov
fwait
stos
xchg
mov
inc
call
inc
sbb
pusha
push
pop
inc
test
fimuls
outsb
mov
test
cltd
testb
pop
aaa
push
push
adc
loopne
fldl
or
mov
rcrl
dec
inc
je
mov
sub
test
jp
lret
dec
push
stos
mov
dec
fidivs
lret
push
shll
je
xlat
dec
adc
or
cmpsl
dec
lods
pop
mov
fs
imul
lds
lea
lcall
xchg
or
push
shl
rcl
inc
inc
jbe
f2xm1
mov
xlat
lods
test
sub
ffreep
into
add
js
das
mov
push
sub
sub
and
icebp
sub
add
sub
dec
xchg
mov
push
cmp
sub
scas
test
mov
lock
inc
xchg
out
es
cmp
mov
fisttpll
loopne
imul
xchg
jmp
mov
dec
stos
pusha
dec
sub
add
int3
repz
pusha
je
outsl
scas
xchg
lds
sub
inc
inc
xor
jmp
cmpsl
arpl
pop
in
mov
adc
adc
add
and
bound
or
cmp
jecxz
aam
mov
xchg
int
mov
ret
mov
nop
movsb
sub
mov
aam
xlat
cld
push
into
pop
outsl
stos
add
pop
mov
adc
nop
push
out
cmp
push
sub
mov
fwait
sub
popf
inc
add
push
dec
fstpl
std
adc
ret
mov
js
or
push
fdivl
push
xchg
pop
nop
dec
jns
in
or
iret
loopne
pushl
pop
add
ret
mov
jae
cmpsl
sbbl
add
push
jmp
pop
dec
je
and
sbb
sbb
clc
shr
adc
xchg
and
dec
pop
rcrl
push
mov
sbb
inc
jge
or
push
push
and
inc
xor
push
in
cmpsb
sahf
loope
xchg
imul
pop
aas
cmc
jno
cltd
push
pop
scas
in
std
adc
aam
and
adc
scas
sbb
pop
mov
movl
addr16
push
in
mov
lcall
outsb
sahf
aaa
fldl
xor
sti
jp
data16
stos
stc
bound
inc
movsl
mov
and
fucom
fs
xchg
addl
stc
mov
push
inc
sahf
sbb
push
mov
and
and
pop
rcl
push
push
add
psubb
cli
cmp
pop
mov
lea
cmp
fs
outsb
fmull
push
aad
or
mov
rcl
nop
lret
ljmp
mov
xor
mov
or
add
in
ret
addb
shl
aaa
sub
je
fdivrs
loope
mov
sbb
adc
push
out
and
xor
std
icebp
sub
cmp
sub
dec
mov
mov
stos
mov
ja
ficomps
addb
push
cwtl
jns
cmp
mov
shll
dec
push
xchg
cmp
enter
xor
mov
mov
pop
inc
xor
cmp
pop
out
addr16
push
mov
sbb
lds
add
out
and
mov
shl
sub
jp
inc
out
jmp
out
push
ret
in
xchg
jg
xor
in
daa
fcom
mov
jbe
mov
pop
call
inc
andb
inc
lea
jnp
imul
iret
data16
adc
movsb
lret
jne
icebp
pop
repz
and
sti
cs
xor
push
ret
or
mov
jge
subb
push
dec
xchg
push
dec
xchg
adc
dec
xor
popa
addb
add
or
pop
mov
pop
sbb
push
cmp
jp
xchg
int
cmp
aaa
push
xchg
sarb
sti
cmp
scas
mov
popf
inc
jmp
pop
and
test
or
sahf
stc
sbb
mov
les
dec
adcl
fstps
sarl
push
and
popf
xchg
adc
inc
daa
adc
js
mov
mov
into
arpl
cmp
pop
add
add
adc
jae
cmpsl
insb
int3
rclb
loope
cmp
int
mov
sub
inc
sahf
mov
pop
test
push
or
rcl
test
mov
or
fwait
enter
jb
decl
dec
lret
arpl
dec
inc
fsubl
das
lea
sbb
loopw
push
into
xchg
mov
ss
mov
cmp
add
mov
mov
in
jae
xlat
xor
pop
out
adc
sahf
pop
iret
jae
sub
stos
or
mov
or
popa
in
enter
jne
mov
mov
and
in
sbb
addr16
cli
ds
leave
pop
sub
sub
shl
cmc
or
jno
dec
fsts
adc
js
xorl
cmp
cmp
arpl
test
mov
fs
adcl
cmpsb
adc
iret
xor
pop
daa
sub
xor
nop
add
inc
add
cmpsb
xchg
and
push
repz
cld
les
mov
mov
lods
rorl
fwait
dec
push
incb
testb
lds
adc
inc
arpl
pop
outsb
or
fcoms
fwait
scas
and
xchg
shr
adc
addb
es
cli
pop
test
jl
inc
pop
hlt
push
add
fistps
jno
adc
in
xor
dec
jno
cmp
rorb
push
sub
adc
push
sub
dec
leave
in
sub
adc
pop
or
fiadds
sarl
lret
sub
or
movsl
scas
and
movsb
pop
cmp
pop
add
imul
mov
or
stc
shlb
lods
lods
mov
lods
jp
fidivl
cmp
mov
sub
fiaddl
js
xchg
in
push
stos
mov
idiv
push
xchg
aaa
shr
fstpt
daa
xchg
imulb
sti
mov
cmp
push
sahf
mov
push
mov
mov
cmp
xor
aaa
add
inc
outsb
mov
xchg
pop
nop
std
and
ja
add
xor
insb
push
jbe
push
test
jno
mov
loope
sub
jl
push
and
push
and
sbb
and
sub
cmp
pushf
mov
inc
idivl
mov
dec
jle
sbb
pop
xor
test
sbb
adc
push
pop
add
adc
into
leave
fiadds
fdivl
sub
aas
add
mov
add
inc
mov
adc
and
aas
and
lret
scas
sbb
pop
insl
mov
jmp
sub
pop
dec
bound
lods
add
push
ficoml
jmp
push
and
lret
clc
rorb
clc
sbb
adcl
es
sub
xchg
lds
inc
xchg
aas
enter
xchg
dec
nop
and
or
cmp
imul
test
mov
shrb
inc
jns
sar
bound
stc
jecxz
push
xchg
mov
pop
mov
aas
jp
out
test
test
daa
xchg
mov
orl
lods
dec
add
roll
jg
shll
fs
movhps
popf
adc
clc
jmp
cmpsb
sub
sbb
fadds
push
fsubrl
testb
pop
hlt
inc
cmp
cmpsl
dec
je
les
jb
pop
xchg
pop
inc
add
vmovsd
leave
test
imull
push
or
mov
adc
sbb
push
cmc
js
popf
sbb
xor
push
mov
jl
push
push
clc
and
sbb
dec
mov
push
stos
scas
popa
js
icebp
mov
push
rcrb
fidivrl
aaa
icebp
aaa
xor
aad
adc
sbb
fsubr
call
mov
mov
add
fs
imul
fisttpll
scas
xchg
jge
or
jo
push
dec
bswap
es
shll
jg
shrl
fisttps
jl
les
ficompl
push
xor
cli
outsl
mov
or
mov
xchg
mov
mov
cltd
pop
xchg
pop
add
movsl
les
inc
in
pop
push
mov
out
dec
aaa
xchg
mov
repnz
add
enter
sbb
and
inc
or
and
push
js
adc
dec
icebp
jns
daa
in
xlat
test
pop
hlt
pushf
dec
sbb
dec
popf
jnp
ds
sahf
movsb
sahf
fidivrs
iret
dec
in
inc
aaa
dec
xor
pop
pop
mov
sbb
sbb
push
adcb
sub
fsubrl
sub
or
aad
cmp
adc
in
rcr
jae
cmpsb
inc
push
fnstenv
push
push
jae
inc
stos
cmp
sub
adc
leave
imul
pop
dec
test
repz
cmp
or
sbbb
mov
arpl
and
sub
test
or
dec
sub
xor
add
adc
push
xchg
pop
and
xchg
fcmove
mov
jns
es
gs
push
out
xchg
ja
sub
inc
out
push
in
jmp
inc
leave
inc
mov
repz
xchg
lcall
mov
inc
push
pop
loop
out
lea
jg
dec
rorl
in
in
jnp
add
add
scas
mov
xchg
pop
sbb
or
cmp
push
adc
test
xchg
fbstp
lods
test
jp
pushf
pop
sarl
adc
int3
pop
cmp
push
mov
lret
sub
jnp
rcll
roll
jl
fiadds
in
xor
jae
add
pushf
inc
xchg
sti
jp
jno
jo
fimuls
and
repz
mov
in
pop
hlt
xchg
aad
mov
aad
pop
dec
and
push
sti
lahf
mov
mov
lahf
mov
pop
outsb
loopne
dec
rolb
shll
outsb
pop
shll
mov
les
sbb
insl
dec
add
ljmp
xchg
js
cmp
jp
mov
enter
xchg
mov
xchg
aas
loop
jmp
dec
out
pop
jne
mov
mov
cmc
xor
jnp
lods
inc
das
pop
and
add
push
in
pop
test
inc
aad
jl
cs
out
cmp
imul
cwtl
shll
popa
lods
lods
pushf
inc
or
mov
out
scas
inc
mov
xchg
jl
cwtl
loope
mov
js
pop
aam
jne
xor
ret
dec
jno
jmp
sub
cmp
xchg
out
test
mov
jo
jge
popa
push
dec
arpl
sub
pop
xchg
mov
fwait
sub
fcompl
push
xor
or
stos
imul
dec
iret
lahf
mov
push
cmp
xorb
nop
cmpsb
xchg
aam
lcall
xor
or
bound
mov
daa
cmp
mov
dec
push
or
test
ss
xor
pop
js
iret
out
jnp
out
inc
outsl
adc
mov
adc
pop
int3
js
sub
xor
incb
daa
and
xchg
pop
outsb
mov
jb
outsb
stos
and
clc
sub
ss
inc
xor
repz
inc
dec
add
jae
mov
xor
pop
lods
cs
outsl
jmp
cmpsl
push
and
mov
and
shl
cltd
and
das
aas
fistps
add
addb
xor
jnp
mov
outsl
lea
inc
insl
cs
cmc
jo
popf
or
push
iret
and
or
lods
mov
jp
cmp
dec
or
pop
icebp
xor
jg
add
mov
test
loopne
and
pop
ja
or
pop
xchg
push
and
sub
movsb
jge
aad
xchg
dec
outsl
fucomp
test
je
xor
pop
ret
adc
stc
bound
daa
add
mov
mov
ja
test
cmp
mov
arpl
or
cmpsl
hlt
dec
gs
into
mov
sbb
out
xorb
pop
or
xchg
mov
or
sub
call
loopne
addr16
movsb
rorb
sub
inc
std
loop
mov
jb
bound
fucom
add
sub
jb
cmp
cmp
adc
cltd
sub
pop
mov
xchg
insb
pop
sub
mov
test
pop
xor
dec
ror
mov
es
in
jge,pn
mov
push
std
cld
pop
fcomps
cltd
jp
cmp
lret
mov
pushf
pop
dec
or
sub
sbb
in
adc
es
inc
adc
fnsave
test
push
sbb
cli
mov
mov
daa
or
push
push
pop
jl
sub
pop
mov
push
or
jecxz
pop
ss
adc
bound
shrb
mov
stos
cmp
jmp
imul
fwait
sarb
dec
pushf
and
mul
stos
popf
enter
fcomps
push
push
mov
test
mov
mov
jne
push
outsb
shrl
inc
add
aam
jecxz
push
stos
mov
mov
xchg
stos
mov
push
mov
fwait
jmp
xorb
xor
add
sarb
xchg
loop
test
inc
jp
call
xor
jb
xchg
xchg
cli
sbb
lds
xchg
sahf
xchg
imul
ljmp
fistl
adc
mov
fwait
dec
popf
push
xchg
daa
dec
imul
icebp
sub
fwait
lds
jp
lods
sbb
outsl
sbb
dec
out
std
sti
inc
test
into
cmp
rorb
mov
push
fmul
cmp
lods
or
xchg
push
lret
jecxz
jle
loope
fadd
inc
stos
xor
jnp
xchg
popf
fdivr
add
test
mov
cmp
mov
jns
push
mov
out
jp
add
jmp
push
loope
lcall
adc
in
ss
aad
fsts
mul
adc
dec
shlb
out
xlat
popf
in
out
insb
inc
clc
out
adc
loope
jnp
adc
xchg
mov
in
in
add
int
fnstcw
xchg
test
leave
aas
mov
jg
fcmovnbe
cmc
pop
mov
into
xor
out
out
enter
enter
jge
xor
adc
das
or
push
icebp
mov
pusha
xor
scas
rorb
or
mov
loope
mov
and
into
inc
and
and
mov
pop
test
test
cmp
ds
mov
pop
in
sahf
cmp
lea
rolb
pop
and
pop
cmp
push
dec
xchg
mov
xchg
or
fs
push
lret
mov
mov
mov
push
xchg
push
push
in
jae
push
mov
dec
test
cwtl
push
lret
out
sub
fld1
pop
xchg
stc
mov
pop
mov
clc
mov
sub
jo
push
sbb
or
lcall
pop
add
jb
pop
push
mov
fisttpl
mov
jle
mov
dec
jns
decl
sbb
inc
iret
and
jp
dec
lret
mov
loop
fsubrl
cmc
ds
adc
sbb
push
add
fisubrs
or
loop
mov
jno
aad
stos
cmp
pop
pop
outsb
aad
xor
lods
aad
add
cmpb
call
daa
hlt
gs
xchg
jne
rorb
mov
mov
and
popf
test
stos
xlat
jge
mov
loope
in
cmp
movb
lock
imul
adc
xchg
mov
push
mov
push
xchg
je
mov
inc
aaa
mov
adc
rclb
jbe
pop
sub
bound
inc
ds
cmp
stos
inc
mov
clc
aad
ficoml
popa
lds
scas
inc
inc
mov
dec
push
dec
jl
popa
mov
sbb
push
lcall
int
inc
pushf
jg
test
fwait
sub
push
and
pop
cvtps2pd
mov
stos
mov
inc
push
je
and
push
fcmove
sub
out
ret
sub
mov
sbb
or
push
pop
stos
in
popa
aas
jb
sub
lret
js
fs
popa
test
jp
loop
and
pushf
mov
popa
sbb
cmpps
jl
imul
cld
add
mov
les
ret
sbb
stos
shll
outsb
je
and
test
adc
push
xor
ret
xor
sti
jp
xor
mov
add
call
scas
bound
mov
push
jne
pop
enter
cmp
sub
test
imull
enter
sar
lcall
mov
int3
lret
pop
sub
test
cmp
cld
ljmp
mov
in
jmp
test
push
add
inc
ror
jg
jbe
pusha
push
mov
adc
mov
adc
push
add
add
push
add
fwait
cmc
out
mov
xchg
cwtl
fbstp
add
mov
mov
aaa
rorl
pusha
push
and
notb
xchg
xor
push
jno
adc
push
cmpb
jnp
dec
push
inc
push
jbe
nop
loop
jae
push
cmpl
jle
ret
testl
fistps
adc
xchg
and
xchg
lret
stos
popf
imull
aaa
adc
insl
filds
icebp
loope
pop
adc
push
jno
inc
jb
fistps
scas
add
pop
dec
jg
add
stc
mov
enter
inc
jle
add
arpl
arpl
lods
adc
int
or
dec
in
decb
daa
inc
mul
push
lahf
cli
pushl
mov
mov
mov
pop
call
fbld
iret
or
insl
add
aas
leave
sbb
cwtl
cmpsl
outsb
mov
mov
enter
push
stos
xor
adc
cmp
call
sub
mov
imul
js
ffreep
insb
out
xor
xor
stos
pop
and
test
or
dec
jb
or
testb
pop
or
sbb
and
mov
and
repnz
jg
push
mov
cld
lods
jmp
dec
mov
xor
sarb
aas
in
and
push
pop
ss
add
arpl
test
push
std
adc
stos
ljmp
inc
xchg
xlat
or
or
jno
pop
roll
test
sarl
mov
std
add
mov
mov
cwtl
cmpsb
loopne
jb
add
js
mov
hlt
leave
push
cltd
aas
inc
lcall
test
nop
pushf
loope
aam
jl
push
jmp
adc
mov
insl
pop
enter
inc
nop
stos
fnclex
fcoms
pop
xchg
adc
loop
mov
dec
adcl
xchg
fwait
mov
jmp
xor
cli
lret
jns
mov
inc
leave
ret
or
repz
das
xor
dec
adc
data16
sbb
pop
in
sarb
out
test
xchg
fisttpl
and
fucom
lods
dec
mov
mov
clc
and
inc
and
mov
or
ret
orb
adc
xor
pop
cmpsb
xchg
xchg
in
leave
jg
enter
lods
xchg
xchg
pushf
pop
insb
xchg
inc
adc
arpl
push
iret
inc
ja
or
add
adc
xchg
in
js
xor
loope
flds
enter
jp
push
pop
leave
mov
inc
pop
jne
mov
aas
mov
add
fs
imul
dec
fs
add
mov
push
xchg
call
scas
imul
lret
sbb
out
data16
es
scas
sbb
fcompl
out
pushaw
js
iret
flds
scas
sub
cmp
dec
movsb
xchg
lea
sub
jmp
popa
xchg
aam
adc
inc
loop
sub
add
insl
mov
loope
mov
repz
mov
dec
lea
repz
xor
sbb
cmp
mov
adc
push
jecxz
ret
lds
out
sub
outsb
sub
in
incl
or
xchg
sbb
mull
xor
jmp
sbb
push
push
movsl
not
sub
mov
or
les
enter
adc
lret
or
cmp
add
xchg
inc
sub
jle
das
test
loope
sbb
lcall
inc
xchg
je
adc
ds
push
dec
sti
pop
jno
push
inc
mov
mov
into
pop
adc
lcall
and
lock
push
inc
push
sub
sub
in
push
push
jo
jge
bound
mov
fs
rep
mov
adc
addr16
aaa
test
mov
lahf
aad
nop
mov
cmp
iret
xchg
stos
ljmp
out
adc
mov
int3
and
nop
xchg
inc
idivl
mov
into
cli
sbb
ds
int3
push
sbb
and
fs
jbe
adc
mov
and
adc
push
adc
inc
pop
pop
xchg
fcoms
insb
outsb
pop
out
pop
cmp
lods
in
sti
ljmp
gs
add
cld
out
ds
pop
or
adcl
inc
push
cmp
inc
or
mov
cld
push
arpl
mov
in
pop
outsl
jae
and
ret
stos
lock
out
lret
sbb
scas
lret
xor
icebp
ret
cmpsl
or
dec
scas
pop
jmp
out
jge
mov
jmp
lods
push
xchg
and
and
xchg
pop
pop
fldenv
loopne
out
into
and
jmp
mov
sbbl
ficomps
insb
idivb
push
repz
aam
lds
sbb
das
sbbb
pop
mov
mov
outsb
push
xchg
mov
movsl
aaa
xor
rolb
inc
test
sahf
pop
repz
push
inc
or
push
test
jne
mov
adc
jnp
loopne
adc
dec
or
pusha
out
push
popa
sub
jmp
test
mov
test
mov
or
or
mov
cli
adc
pop
outsl
inc
leave
pop
lret
or
and
lahf
lock
adc
inc
mov
in
movsb
js
and
ja
jg
in
add
mov
lret
loopne
pop
clc
or
xchg
mov
inc
jb
and
jl
js
cmpsl
mov
sbb
push
phaddw
andb
push
push
test
out
dec
fsts
push
dec
subb
loop
fsubs
jge
rorl
push
fiadds
sbb
cltd
sti
outsl
pop
mov
lods
xor
pop
adc
in
xchg
je
sub
xchg
shr
outsl
aas
pushw
ja
cmp
pop
arpl
sti
setp
and
sub
xchg
inc
push
lock
dec
jmpw
push
sbbb
pop
lret
or
xor
and
cmc
jns
pop
rcrl
jne
sbb
cmp
mov
fwait
push
cwtl
test
inc
push
cld
repz
cmp
hlt
mov
push
xchg
int
dec
movsb
and
sbb
dec
jle
sbb
sarl
ss
arpl
push
jecxz
sub
popw
cmp
cmpsl
pop
fldt
ljmp
mov
cmp
faddl
shrb
lock
or
cld
mov
test
mov
stos
inc
sbb
cs
arpl
cltd
push
ffreep
fisubrl
loop
jp
aam
mov
push
pop
sub
test
stos
inc
rep
adcb
xchg
cmpb
pop
ja
imul
or
add
jge
mov
or
mov
ret
fcmovbe
rolb
lods
xor
insl
call
pop
xlat
and
std
xchg
les
out
test
jno
push
sub
je
int3
int3
popa
ds
add
mov
rorb
ret
fidivrs
pop
loopw
repz
fisttpl
enter
adc
gs
sbb
mov
add
pusha
inc
mov
xlat
and
cli
inc
adc
mov
add
cltd
inc
enter
ror
out
lods
ret
subps
ljmp
stos
fisttpll
cmp
pop
je
inc
dec
clc
popa
xor
bound
xlat
sbb
xor
push
pop
lret
xor
xchg
in
inc
les
mov
mov
mov
sbb
aas
cmp
dec
scas
cli
xor
aad
stc
insb
jo
out
fisttpll
cmp
sub
scas
sbb
addr16
stos
fistps
cmp
push
fsubs
jae
adc
cmp
dec
mov
xchg
loop
push
mov
xor
mov
cmp
mov
xor
or
mov
mov
cwtl
out
mov
push
clc
sub
sbb
add
fidivrs
mov
mov
fcmovu
insl
xchg
or
frstor
stos
cmc
hlt
in
xchg
out
mov
pop
dec
jns
sub
pushf
dec
imul
sbb
fimull
arpl
mov
pusha
xchg
mov
push
popa
xchg
xlat
adc
pop
sub
bound
xchg
mov
insl
xchg
push
movsb
ftst
addb
jbe
sarb
xchg
mov
into
out
sbb
push
cmpsw
gs
cs
gs
sar
pop
jb
xchg
int3
movaps
mov
adc
stos
insl
pop
ljmp
insl
add
sub
sub
ljmp
ds
xorb
shl
add
xchg
movsl
addr16
sub
loope
jge
test
pop
divb
jb
xchg
xor
cmc
and
push
test
inc
loopne
out
repnz
loopne
dec
pop
loope
mov
dec
sbb
pop
cmpsl
sbb
mov
mov
mov
adc
jle
dec
inc
or
pop
pop
pop
dec
adc
stc
lea
sbb
jbe
lret
dec
call
lcall
add
mov
mov
mov
nop
push
and
scas
popf
loope
lea
add
push
ss
pop
pop
decl
test
push
mov
jno
mov
lock
sub
cmp
or
insb
popf
in
sbb
jbe
fs
outsl
std
mov
iret
push
andl
mov
enter
or
test
rcrl
cli
sbb
pop
popa
call
and
xchg
shlb
ss
or
mov
pop
ret
push
pop
mov
cltd
xchg
mov
cmp
repnz
jne
aad
inc
lock
pop
movsb
aaa
in
scas
fsubrp
outsl
cmp
movsb
and
sahf
cmpsl
xor
cli
aad
fwait
mov
out
fsubrl
std
cmp
aaa
mov
xchg
hlt
stc
jl
leave
outsl
cltd
inc
cld
fiadds
test
sbb
add
imull
cmc
call
addr16
mov
pop
xchg
lea
jne
popf
or
push
mov
imul
scas
adc
movsb
inc
movsb
jp
sbbb
mov
and
push
cltd
push
fwait
stc
aaa
inc
jne
or
add
sbb
dec
dec
jo
pusha
mov
xor
cmp
xor
cmpsb
das
mov
lock
js
nop
das
jecxz
scas
cli
pop
jmp
mov
sbb
add
xchg
inc
add
add
inc
lret
mov
ds
movsl
lret
fadds
add
jae
push
imull
test
sub
bound
fdivrl
popa
xor
jo
inc
jmp
push
out
adc
sahf
cltd
or
shrl
gs
adc
mov
or
cmpsb
icebp
sub
jmp
rolb
inc
lret
cmp
sbb
mov
xchg
push
push
rcl
mov
cli
movsb
adcb
orb
rorl
std
inc
mov
out
pusha
pop
into
sarl
xor
adc
addb
pop
dec
dec
into
lea
pusha
xchg
int3
xchg
rolb
loope
push
in
push
inc
aas
popf
mov
movsl
mov
fs
stc
int
and
pop
rorl
sahf
pushf
insb
lods
test
mov
xor
insb
ds
loop
popf
jnp
xor
push
mov
shlb
mov
push
jns
adc
add
mov
and
movsb
jns
cmp
jns,pt
inc
enter
jp
mov
lods
and
stos
mov
sbb
mov
cmp
out
jbe
mov
fcoms
push
jmp
imulb
push
dec
jo
add
xchg
and
fwait
inc
xchg
test
sbb
js,pt
lock
push
incl
sub
pushw
mov
lods
fs
xchg
xor
cmpl
lock
mov
xchg
ss
pushf
xchg
sbb
outsb
cli
dec
mov
push
or
add
mov
sbb
in
push
sbb
cld
lret
sub
cmpsl
xor
mov
out
cmp
jns
js
push
jmp
out
xchg
stc
dec
and
int3
hlt
and
mov
mov
push
and
stos
ds
rolb
outsb
mov
outsl
xor
xlat
mov
mov
mov
jnp
add
stos
or
push
test
mov
es
sbb
mov
mov
and
push
aaa
sbb
test
dec
inc
and
test
mov
pushl
xor
jnp
xor
testl
add
insl
rorl
xor
adcb
les
test
mov
adc
das
cs
fs
test
push
pop
sbb
add
jmp
fs
xor
leave
xchg
push
inc
imul
stos
inc
add
mov
aaa
and
push
add
test
sub
xor
shl
nop
out
jge
jo
scas
jg
push
out
cld
fsubrs
lods
dec
jecxz
rcr
lret
sti
sarl
ljmp
add
xchg
leave
sub
cmpsl
lods
push
int3
data16
aad
and
sbb
adc
sub
xchg
mov
aaa
test
movsb
pop
enter
mov
das
jl
lahf
adc
movsb
int
lods
mov
sub
push
mov
jp
xchg
or
movsb
mov
lea
mov
mov
icebp
cmp
jnp
inc
sbb
xor
mov
test
das
or
xchg
adcl
inc
mov
sahf
cwtl
push
cmp
push
inc
jle
call
xchg
and
cmp
pop
push
xchg
cmp
inc
fstpt
movsb
out
popf
addr16
inc
mov
jbe
and
mov
adc
dec
aas
outsb
call
and
push
lods
aad
cmpl
lcall
xchg
imul
aam
movd
push
mov
jo
lret
loop
pause
inc
outsl
push
ficoms
loop
push
push
xchg
push
cmpsl
sub
xchg
ficoml
mov
pop
in
mov
in
pop
frstor
jmp
cs
ret
pop
aas
les
xor
data16
lcall
shlb
push
mov
mov
jno
sub
fiaddl
lods
test
lcall
imul
fsubrl
lods
xor
xchg
cmp
xlat
xchg
insl
repnz
call
ja
add
imul
outsb
bound
sbbl
pop
sbb
sahf
jge
xchg
es
mov
sahf
out
mov
jl
add
out
adc
out
inc
in
sbb
dec
out
bound
fdivs
popf
mov
pop
repnz
imul
lahf
sar
test
and
add
jle
mov
leave
ret
inc
ret
jl
adc
ret
cmp
sbb
inc
ror
sbb
cmp
jp
cmpsl
ficoml
mov
inc
pushf
icebp
repz
jne
xor
test
xchg
push
inc
int
adc
push
lds
inc
cs
push
fs
cld
movsb
sub
inc
inc
push
daa
pop
rcrl
adc
dec
push
sbb
out
add
xchg
adc
pop
mov
add
xor
inc
fbstp
call
ror
inc
mov
es
mov
cmp
cmp
cwtl
adc
dec
fldt
add
popa
sub
mov
loope
push
mov
push
push
xor
add
addw
sub
mov
iret
lret
inc
dec
mov
xor
movsl
sbb
mov
iret
rcrb
push
jl
mov
das
cmp
imul
out
xchg
ss
jbe
fdivs
fnstenv
push
push
int
or
cmpsb
add
pop
stos
test
mov
loopne
inc
push
subb
and
out
ljmp
jecxz
gs
mov
cltd
cmpsb
repnz
or
int
lahf
lds
enter
orl
inc
mov
test
mov
cld
mov
call
add
dec
cmp
or
das
jne
pop
test
sub
add
cmp
push
or
cs
mov
cmpsb
imul
fcompl
xor
jne
rol
fistpl
in
dec
or
aam
adc
fwait
arpl
int3
test
pop
pop
push
hlt
mov
push
lret
mov
notl
inc
sub
arpl
mov
xchg
ss
pushf
push
lret
mov
or
ss
shlb
stos
mov
jb
or
cltd
fs
sbb
and
sbb
pushf
out
adc
int3
xor
cmp
dec
loop
lahf
push
lea
dec
sub
pushf
fs
pop
sbbl
js
mov
jmp
mov
xor
xchg
dec
jno
movsb
call
out
cli
jg
adc
mov
mov
lcall
lds
jge
and
hlt
lods
int
sub
in
popf
inc
cmc
xchg
fists
dec
dec
jne
imul
jecxz
les
add
into
mov
sub
adcb
stos
out
jo
pop
adcb
pop
xchg
xchg
mov
mov
mov
scas
jns
mov
arpl
dec
sub
addr16
xor
scas
mov
sub
es
mov
fsubr
inc
cmp
int3
stos
sbb
jmp
push
dec
rolb
add
rcrb
pop
lods
rclb
inc
jbe
mov
jmp
mov
movsb
mov
xlat
lods
cli
add
hlt
mov
call
stos
out
cmpsl
inc
int3
jne
dec
lock
out
loope
adc
xor
sahf
dec
or
cmp
jbe
das
in
call
stc
mov
xor
out
fwait
stc
xlat
icebp
rorl
mov
aad
std
xor
movsl
mov
adc
int3
inc
shlb
fnstenv
sub
imul
mov
pop
int3
repnz
dec
pop
add
lret
dec
adc
dec
stos
lret
mov
or
idivl
mov
popa
add
nop
or
fwait
xchg
ret
mov
inc
cmp
mov
loop
push
icebp
add
mov
cld
xor
bound
xor
jns
aas
pop
mov
gs
fdivs
pop
and
adc
sbb
xchg
mov
dec
xchg
jle
lea
mov
lahf
subl
pusha
pop
inc
xor
mov
stc
jb
xorb
lcall
repz
push
popf
out
cmpsb
aad
sbb
insb
inc
pop
pop
mov
arpl
bound
push
dec
adc
push
in
inc
arpl
clc
cmp
xor
movsl
sahf
xchg
cs
data16
fwait
push
xchg
loopne
call
imul
pop
jmp
mov
adc
orb
sbb
cmp
dec
cli
test
loopne
mov
xor
scas
icebp
sti
shlb
pop
mov
cmp
enter
and
mov
rorb
mov
inc
cld
pop
in
cli
nop
lea
push
mov
xchg
movsl
mov
fwait
testb
pop
iret
sbb
ret
push
fidivl
enter
stos
mov
aam
pushf
pop
popa
loope
dec
sub
bound
xor
jb
xchg
mov
testb
mov
xor
pop
daa
nop
les
xchg
ds
adc
xchg
dec
xor
imul
pusha
mov
lds
ficoml
cmp
mov
out
inc
jbe
lods
call
push
sbb
enter
pusha
je
daa
shll
mov
jge
dec
mov
hlt
jae
rclb
out
lret
rol
pushl
lret
lcall
xchg
cli
jbe
mov
sbb
jno
aaa
push
mov
fcmovu
xchg
xchg
mov
pop
roll
int
jns
das
pusha
loopne
mov
lods
jmp
es
shrb
ss
fidivl
rclb
lahf
push
decl
pop
inc
jb
fs
add
xchg
in
add
gs
jb
cmp
loopne
cmp
push
cmp
add
dec
push
mov
mov
sar
jno
dec
in
xor
out
mov
movsb
add
imul
add
add
mov
call
xchg
pop
loop
adc
inc
pop
mov
les
sbb
negl
jp
pop
xchg
push
cmpsl
ficomps
xor
sti
cs
inc
mov
jns
and
punpcklbw
cltd
insb
xchg
mov
scas
mov
jg
dec
subl
inc
and
add
iret
imul
push
scas
push
jbe
shrb
mov
pop
cld
pop
cmp
pop
hlt
xchg
jl
lahf
jb
ficoml
push
mov
inc
ror
mov
push
mov
xor
or
mov
das
or
xchg
jg
mov
mov
in
pusha
imul
pop
insl
in
cmpsl
push
rcll
loope,pt
sub
dec
push
fstpl
movsl
outsb
ret
cld
sub
jnp
repz
in
sub
ja
dec
mov
adc
sbb
lret
outsl
out
scas
or
cmp
cs
pop
inc
loope
dec
jmp
add
xor
stc
pushf
xor
in
sbb
xor
dec
iret
seto
xchg
sub
es
sbb
clc
lods
ficompl
std
mov
fisubs
incl
movsl
dec
xchg
jbe
outsb
icebp
and
pusha
test
int3
mov
dec
sbb
add
jb
in
xchg
iret
ret
xor
push
mov
dec
fdivl
les
xchg
dec
sub
bound
and
mov
test
imul
jmp
cmpsl
out
xchg
adc
cltd
lea
ds
dec
xchg
mov
xor
sahf
push
test
pop
dec
xchg
repnz
sahf
in
mov
jp
addr16
mov
mov
xchg
or
leave
mov
jbe
add
push
fsub
xor
push
mov
aaa
dec
mov
inc
aas
ret
add
jnp
jae
jbe
inc
js
xor
iret
inc
push
aaa
std
lds
xchg
and
push
fcomi
sbb
sbb
push
mov
or
fstp
sysexit
jmp
inc
movsl
cmp
test
mov
adc
xor
adc
pop
pop
popf
pop
les
stos
inc
cmp
mov
or
jns
inc
xor
xor
icebp
in
out
and
sbb
xchg
push
sbb
push
out
dec
movsb
mov
mov
mov
stos
ss
pop
mov
mov
mov
orb
push
xorb
test
daa
test
loop
lahf
test
mov
fs
mov
call
outsl
or
test
pop
or
pop
scas
adc
fisubl
sub
repnz
clc
int3
movsb
dec
lea
inc
adc
mov
insb
push
pushf
lcallw
push
hlt
repz
mov
je
hlt
fwait
and
lahf
stos
loopne
xor
mov
sbb
mov
in
or
rolb
xchg
loop
in
add
xchg
mov
subl
enter
in
hlt
daa
test
shr
pop
sti
filds
icebp
and
loopne
xchg
lods
mov
cld
call
inc
mov
bound
inc
ret
xor
ja
add
jo,pt
je
cmc
scas
push
xlat
dec
sub
test
mov
fisttps
and
sub
fwait
imulb
int
sbb
out
add
mov
adc
xchg
cmp
cmp
out
push
or
sub
mov
iret
insb
cwtl
and
add
xor
jnp
mov
pop
iret
and
in
lcall
cmp
ret
dec
mov
xchg
ss
adc
pop
adc
outsb
mov
inc
mov
shrl
xor
into
add
push
push
lret
leave
lea
fsubrl
cmpb
push
jbe
dec
lret
mov
cmp
jno
je
sub
clc
mov
and
mov
insb
mov
outsl
outsl
mov
data16
jge
cmc
insb
mov
add
lret
mov
jne
pusha
lret
test
lahf
xor
pop
push
mov
in
fisubs
push
cmpl
test
jo
int
mov
lock
insb
adc
cmp
nop
push
inc
scas
adc
hlt
jge
mov
in
test
jns
inc
jge
ficoml
stos
jno
fnstenv
rcll
mov
mov
js
loope
loop
and
or
and
int
add
jp
popf
lahf
xlat
icebp
mov
jo
into
mov
mov
cmp
movsl
sbb
fstpt
xor
sub
add
adc
push
add
divl
flds
dec
frstor
imul
fdivr
mov
fwait
mulb
popa
or
in
ficompl
jo,pt
cltd
loope
sbb
xchg
inc
inc
add
cmp
fldcw
addb
xor
test
jb
mov
inc
adc
jae
imul
gs
in
leave
loop
dec
cltd
xor
call
test
repnz
push
into
clc
leave
out
jmp
cli
shlb
mov
mov
out
outsb
imul
hlt
popf
mov
inc
cmp
es
xchg
repz
add
or
into
xorl
sub
fdivrp
sbb
mov
mov
cli
ja
cmp
ficoml
mov
mov
ss
mov
push
stc
adc
mov
mov
stc
push
and
xchg
sbb
dec
fs
loop
push
lret
xchg
repnz
loopne
mov
jae
in
clc
cmp
lods
fs
dec
movsl
jle
mov
shl
je
mov
out
in
pop
inc
inc
lcall
xor
repz
in
loop
pop
cmpl
jmp
jnp
push
sub
popf
cmp
mov
pop
call
es
xor
fucomip
lock
mov
sub
leave
popf
sbb
pushf
out
mov
in
andb
inc
jo
out
sbb
mov
adc
adc
xchg
adc
icebp
mov
out
pop
aaa
mov
sbb
dec
jae
mov
cmp
pop
testb
jg
loop
int3
sahf
mov
sub
add
pop
lret
popf
mov
out
pop
out
or
decl
pop
xchg
jg
scas
mov
rorb
mov
jno
xor
xlat
nop
loope
test
sub
or
sbb
or
xchg
inc
pop
mov
mov
out
dec
in
inc
jns
mov
out
subl
cli
outsl
je
subb
les
movsl
iret
imul
or
test
aam
ret
cmpsl
jnp
rcrb
stc
pop
cs
or
or
adc
pushf
jns
xor
std
mov
lods
mov
clc
cmp
in
xchg
xchg
loop
xchg
sahf
xor
xchg
pop
and
lret
scas
testb
lods
cli
ljmp
dec
repz
into
xchg
xchg
inc
addr16
adc
push
xchg
int3
jl
xchg
jb
sbb
xchg
inc
or
sbb
inc
std
mov
xor
sbb
jmp
pop
pushf
inc
rcl
jae
call
cmpsl
cmp
outsl
adc
adc
ss
push
or
nop
push
xchg
jl
lds
pop
push
test
lock
mov
jns
pop
sbb
xor
fadd
xchg
cmc
out
mov
into
outsl
mov
mov
jnp
jae
arpl
enter
mov
add
int
ss
pop
clc
xchg
in
dec
sti
mov
fs
sar
les
arpl
repnz
xchg
nop
mov
lea
popa
push
and
add
dec
or
sarl
push
mov
pop
cs
shlb
push
jp
movsl
or
aas
sub
or
sbb
xchg
aad
insb
push
in
jno
sub
mov
xchg
fwait
data16
push
fs
and
bound
add
lds
pop
test
pop
push
sub
int
decl
jg
adc
pop
rorb
clc
mov
mov
mov
xor
xor
in
decl
hlt
adc
push
inc
iret
mov
add
mov
and
mov
inc
inc
clc
enter
pop
jge
and
mov
pushf
je
mov
pusha
addr16
xchg
movsb
sub
mov
sbb
ljmp
daa
mov
jb
int
xor
adc
scas
sub
int
out
leave
pop
outsb
stc
hlt
add
mov
lods
adc
pop
lcall
add
xchg
hlt
ljmp
mov
add
mov
pop
push
sub
jl
in
std
mov
add
aaa
out
or
inc
pop
jb
ffree
das
pop
mov
xchg
jecxz
popa
add
pop
mov
sbb
inc
pop
icebp
nop
jecxz
das
pushf
push
jae
ljmp
imul
js
push
push
jo
stc
dec
xchg
gs
jne
ret
or
mov
popf
jnp
cmp
scas
push
icebp
fistpll
idivl
lods
sub
sbb
bound
or
dec
sbb
xchg
push
imul
bound
ret
and
sub
imul
popa
jg
rorb
mov
mov
jg
mov
iret
shrb
lret
loopne
and
fidivs
cwtl
sub
lods
cmp
inc
insb
push
push
cmp
pop
lret
jl
mov
adc
jmp
sbb
push
pop
test
add
hlt
cmpsb
outsl
jbe
jne
jmp
pop
jne
inc
stc
dec
popa
push
hlt
xor
mov
out
inc
shlb
in
lcall
ret
ds
ja
pop
cmp
shrb
mov
test
push
mov
or
fnstenv
scas
movsb
xchg
mov
sbb
das
dec
scas
adc
aaa
push
stos
lods
sub
jae
jo
jecxz
and
mov
pop
pop
push
cwtl
fwait
pop
sub
sbb
dec
ja
stos
mov
xchg
xchg
stos
sbb
fildl
gs
cmp
adc
xlat
mov
je
cmpsb
out
add
fdivrs
sub
push
test
mov
cmp
mov
xlat
insl
or
fdivr
add
xor
xchg
das
push
inc
dec
xor
jmp
jecxz
adc
shrl
lret
stos
push
mov
test
fsubrs
shll
mov
fwait
int3
and
call
iret
aas
lahf
mov
xor
and
adc
int3
push
mov
cwtl
out
push
dec
inc
and
out
push
or
sbb
iret
imul
rolb
jae
push
enter
fwait
mov
daa
pop
ficoml
xchg
adc
cmp
pop
fstl
pusha
ds
mov
cltd
xchg
push
hlt
movsl
mov
push
inc
adc
hlt
mov
push
xchg
sbb
fists
sub
pop
mov
int3
dec
sarl
mov
cmpb
nop
hlt
es
cs
fsubl
pop
sbb
es
lods
dec
cwtl
jp
sahf
mov
push
pop
mov
addr16
inc
jae
addr16
bound
jge
in
fs
ds
shrb
cwtl
cmp
xor
cmc
add
daa
adc
dec
add
jp
loopne
push
loope
sar
dec
and
jecxz
pop
pop
cmp
lea
fbstp
sti
dec
sahf
jmp
sbb
add
mov
push
das
in
mov
movsb
arpl
loop
adc
mov
and
mov
inc
xor
fnstcw
loop
fmuls
lock
call
sub
xchg
into
into
mov
bound
movsl
stos
int
js
pop
or
and
loopne
insb
jecxz
fidivl
fdivs
repz
xlat
push
xor
or
fsubs
cmp
mov
icebp
lret
aam
test
jl
sti
lret
and
mov
adc
loop
or
loop
gs
rcll
mov
mov
xor
push
pop
sbb
test
jge
outsl
shll
adc
stos
out
cmp
mov
pop
jnp
outsb
fs
sti
xorl
popa
gs
dec
outsb
stc
add
cmp
ret
xor
lods
subl
cmp
jl
push
cli
sar
and
jb
icebp
mov
outsl
add
in
mov
inc
pop
in
sahf
cltd
jmp
xor
movswl
push
mov
inc
sbb
hlt
jecxz
test
add
mov
cmpsb
inc
mov
jne
pop
adc
popa
xor
stos
dec
sbb
scas
sbb
sbb
mov
imul
pop
shl
pop
idivb
sub
outsb
stc
loopne
add
and
jnp
xor
push
jmp
nop
idivb
sahf
or
inc
xchg
popf
cmpsb
call
aaa
jp
stc
in
ss
daa
mov
loope
int3
jg
dec
inc
imul
ljmp
push
andb
and
leave
mov
stos
imul
mov
adc
in
push
cmp
xor
jo
adc
mov
pop
fmull
pmaxsw
jle
cmc
xchg
adc
xchg
ds
jae
ljmp
outsl
out
sub
xor
jb
add
roll
add
mov
and
jmp
pop
pop
rorl
pushl
xchg
das
jecxz
cmp
pushf
dec
jmp
push
or
fidivrs
push
sub
sbb
push
ljmp
lods
sbb
das
sbb
sub
movsb
cli
leave
add
test
bound
push
mov
or
sti
popa
mov
fmuls
cmp
loop
and
pop
and
pop
sbb
push
jl
in
es
push
lret
adc
pop
insl
inc
rorl
mov
adc
daa
fnsave
push
negl
ficomps
xor
xchg
aad
test
add
pop
aas
cmpsb
inc
xor
jno
fsubrl
hlt
subl
xor
xchg
cmpsb
inc
cmpsb
mov
js
iret
xor
fs
bound
add
jae
jnp
sti
or
cld
and
dec
mov
in
aam
mov
je
dec
test
adc
bnd
jg
pop
mov
out
lock
cmp
xor
add
jmp
mov
outsl
pop
jno
add
cmp
test
ret
dec
push
and
popf
inc
push
push
adc
dec
nop
popf
jb
sbb
sbb
movsl
or
ret
jmp
stos
sub
insl
mov
sub
jmp
push
jns
jmp
dec
mov
pushf
sub
iret
push
sbbb
mov
sti
jne
jg
pop
inc
pop
cli
ja
adc
xchg
mov
sub
test
mov
jle
xchg
lret
pusha
sbb
scas
and
gs
xor
int3
mov
rclb
mov
adcl
loopne
dec
sub
shlb
mov
rcrl
cs
jg
mov
stc
jecxz
insl
xchg
aas
inc
cmpsl
jae
inc
pop
insl
test
ret
xor
push
out
cmp
dec
mov
sub
push
in
push
mov
movsl
xchg
or
add
cmp
add
jne
cmp
dec
pusha
cmp
push
jg
fldl
and
xorl
decl
xor
fsubs
lods
adc
pop
aas
mov
push
lds
addb
jl
loopne
dec
mov
loopne
pop
mov
mov
cmc
cmp
sbb
mov
arpl
cmp
in
pop
push
sbb
cwtl
add
data16
sbb
test
cmp
sbb
xchg
mov
push
jmp
cld
cmc
jb
cwtl
dec
adc
sub
push
dec
pop
or
pushf
push
popl
xor
pop
jae
mov
mov
scas
in
mov
jb
jb
imul
jne
jbe
aas
lock
inc
jg
sbb
mov
pop
mov
and
inc
mov
dec
loop
add
mov
incb
jbe
pop
mov
aam
dec
mov
inc
lcall
pusha
dec
out
push
pop
push
lea
popf
push
lret
std
ret
fistpll
fnstenv
xchg
std
aaa
lock
outsb
xor
cmpsl
sahf
push
push
lock
rcr
add
pop
nop
and
negl
mov
scas
call
jge
mov
cmpsb
and
lahf
repz
aam
push
idivl
ljmp
xor
jle
push
ret
adc
test
cmpsb
addr16
cmp
cmp
mov
sbb
arpl
push
jnp
in
insl
pop
aam
idivb
je
xchg
js
xchg
mov
jge
xor
mov
das
push
addl
pop
lret
pop
mov
mov
outsl
fdivr
stc
test
inc
inc
xchg
scas
cmp
jae
mov
sahf
cld
ret
cmp
shrb
sub
mov
adc
sub
add
adc
xchg
jnp
cmp
xchg
mov
mov
pop
fiaddl
xor
inc
push
cld
lcall
test
mov
push
das
punpckhbw
mov
mov
jnp
sub
fmull
incl
int3
icebp
lcall
sub
mov
and
mov
popa
pop
inc
jmp
xor
call
inc
lods
dec
mov
dec
mov
movsl
mov
fmuls
mov
adc
and
int3
stc
and
dec
js
insb
into
outsl
inc
xchg
icebp
inc
aam
icebp
pop
and
mov
test
adc
fmulp
data16
jb
jp
xor
cltd
enter
mov
aad
std
mov
cli
in
pop
scas
dec
imul
lahf
pop
cltd
fcom
mov
jg
cmc
jge
lret
loop
mov
adc
insb
adc
iret
lahf
sub
jge
aam
add
inc
and
cmp
xchg
fbld
adcb
or
push
dec
xor
push
push
dec
fcompl
sbb
pop
xchg
dec
dec
pop
dec
andl
jg
lcall
dec
push
lock
negl
idiv
pop
sti
push
mov
xchg
dec
dec
rcl
lret
lret
xchg
mov
jmp
test
pop
icebp
sbb
dec
pop
and
xchg
sbb
inc
add
mov
in
mov
inc
mov
push
or
in
cmpsb
mov
iret
mov
int3
hlt
push
dec
xchg
sbb
or
rcrl
sub
xor
or
and
sbb
push
sbb
aas
pop
add
jg
imul
lods
std
add
stc
push
jle
mov
pop
push
roll
scas
inc
in
sbb
stos
dec
cs
ljmp
shlb
pop
mov
dec
sbb
outsl
inc
push
xchg
aas
or
cmpsb
inc
xor
adc
out
fs
loopne
jno
cmp
test
adc
push
push
rcl
pop
mov
aas
call
and
cmp
sbb
adc
ds
outsb
push
jecxz
mov
push
push
pop
inc
add
xor
js
push
adc
cld
jnp
punpckhwd
addr16
insl
sahf
lods
adc
cmp
adc
jnp
mov
pop
loope
int
inc
aad
jae
mov
and
cltd
jns
xlat
mov
jnp
xchg
aas
test
adc
mov
jnp
xchg
mov
scas
dec
xchg
ret
shll
xchg
xchg
cmp
xchg
push
cltd
in
shl
inc
sbb
sub
xchg
xchg
dec
sub
dec
es
jge
pop
fisubl
inc
insb
stos
cmc
fisttpll
scas
lret
lock
mov
int3
cmpb
push
mov
cmp
mov
pushf
mov
bound
out
cmp
jecxz
shl
lahf
sub
mov
in
push
push
arpl
bound
aaa
add
push
icebp
ror
in
dec
adc
das
mov
adc
jo
arpl
into
stos
call
xor
addr16
inc
mull
clc
mov
in
incl
gs
cmp
loop
jmp
cld
add
jnp
jl
inc
inc
test
call
inc
stc
sti
mov
fldt
lret
das
push
aaa
jl
in
out
xor
testb
and
mov
mov
loope
and
outsb
push
aam
out
cwtl
movsl
rorl
mov
fwait
lret
dec
popf
add
xor
pusha
stc
jo
movsb
out
dec
ret
mull
iret
cmc
add
add
dec
dec
jge
loope
imul
das
dec
gs
or
xchg
subl
cmp
sub
push
xchg
fchs
stos
insb
sarl
sub
inc
insl
insb
adc
mov
sbb
mov
mov
jbe
and
repz
cmc
out
pop
pop
fnsave
xor
mov
test
in
out
add
test
pop
push
xor
jno
push
arpl
sub
rclb
cmp
mov
repnz
hlt
aad
fisubrs
lcall
xor
pop
icebp
mov
aam
adc
and
mov
fs
lahf
stos
mov
inc
sub
out
fadd
out
or
xchg
push
dec
add
mov
cmpsl
hlt
mov
or
sti
test
sbb
aam
cmp
xchg
xchg
repnz
add
push
orb
in
sbb
mov
dec
xor
sahf
add
lahf
out
add
sbbb
cmpb
dec
popf
pop
pusha
add
sahf
cmc
xor
sti
mov
jno
dec
pop
rolb
cli
push
jne
adc
or
ja
popa
lods
add
mov
fstpt
or
lret
pop
repz
pop
xchg
movsl
rcll
inc
mov
pusha
ljmp
rol
xor
sbb
lcall
xchg
popa
div
jb
pusha
xchg
test
movhps
adc
ret
sbb
sub
jb
popa
orb
mov
cmpsl
pop
push
sahf
lret
cltd
jmp
andb
mov
mov
xor
and
stc
lea
imul
dec
sbb
jecxz
jle
pop
sbb
jmp
shlb
fsubl
dec
sub
or
testl
mulb
pop
push
dec
or
fnstenv
adc
or
popf
mov
mov
sbb
cwtl
test
add
push
out
roll
sub
xchg
pusha
mov
outsl
and
dec
inc
push
sbb
pushf
movsb
and
lcall
stos
out
sbb
adc
sbb
mov
movsl
mov
xchg
pushf
and
dec
inc
jl
int3
les
lret
ret
icebp
fwait
pop
jmp
add
adc
loopne
adc
adc
test
outsb
andl
movsb
out
js
mov
pop
movsb
repz
scas
inc
mov
repnz
fiaddl
sbb
sbb
xor
adc
test
call
addr16
mov
std
push
loop
lock
mov
mov
loope
cmc
xor
pop
inc
mov
in
packssdw
stos
or
icebp
insl
lds
inc
scas
mov
jle
mov
popa
sub
inc
and
ljmp
in
mov
push
test
inc
fstpl
pop
insb
cmp
pop
sub
pop
add
push
adc
mull
shrb
ja
pop
int
lfs
jl
xchg
xor
pop
inc
fcmovnu
ret
push
inc
mov
dec
mov
and
pusha
test
jl
push
pop
shll
aaa
arpl
movsl
dec
xchg
rcll
sahf
jmp
scas
dec
loop
dec
mov
add
dec
in
test
nop
add
sbb
pop
insb
wrmsr
cs
mov
mov
outsb
rclb
sbb
scas
fisttps
daa
fdivl
jg
sar
xlat
sbbl
mov
inc
or
in
cld
rorl
fwait
imul
movsl
xchg
pop
xchg
outsb
adc
push
fldl
jbe
jp
stos
cmp
sub
ljmp
lds
in
push
repnz
mov
jbe
jbe
sub
xchg
stc
pop
adc
loop,pn
cmpsb
test
aad
rcr
jns
fisttps
loop
xlat
repz
and
jg
fistpll
dec
sub
pop
mov
and
mov
add
pusha
sub
rorb
mov
cli
sahf
lret
inc
shl
data16
inc
pop
xor
addr16
es
jp
std
jne
jg
repz
outsl
inc
out
mov
and
push
and
inc
jb
pushf
push
int
leave
fdiv
js
adc
push
std
enter
in
adc
gs
lcall
lret
fldl
adc
dec
lret
push
cmp
pop
nop
jl
test
xchg
stc
int
sahf
adc
add
xchg
rcll
int3
bnd
cmp
push
mov
mov
cli
push
push
jle
add
daa
shll
lods
pushf
cmp
sub
lds
dec
aas
jmp
cmpsb
mov
pop
pusha
adc
jo
insb
cmp
dec
xchg
ljmp
test
add
push
fsts
xchg
lret
adc
cld
sbb
sbb
aam
inc
mov
test
loope
jl
ficompl
stos
xchg
jae
and
mov
repnz
es
scas
push
adc
out
pop
cs
repz
out
push
fldt
lea
mov
arpl
hlt
mov
adc
jb
or
push
rcll
mov
mov
xchg
jne
pusha
add
adc
push
mov
in
mov
xchg
xchg
pop
push
cs
mov
pusha
sub
shll
popf
push
enter
inc
inc
or
inc
sbb
inc
pop
out
ss
jle
mov
lods
dec
pop
sbb
pop
dec
orl
push
loope
sbb
fsub
inc
dec
push
fdivp
out
jl
jmp
dec
outsb
outsb
xlat
pop
pop
das
jno
clc
paddsb
loopne
loop
fbld
add
rol
sahf
adc
push
or
jb
cs
shl
std
lahf
daa
loopne
in
mov
lahf
xor
pop
insb
stos
push
out
gs
and
inc
in
and
pop
and
and
push
mov
add
subl
push
arpl
jge
push
in
cmp
adc
xor
das
clc
rcll
movsl
rorl
idivb
mov
push
jge
popf
repnz
bnd
std
add
mov
inc
xorb
mov
pushf
outsl
adc
dec
bound
mov
cmp
jecxz
or
push
out
pop
fdiv
pop
int
cmp
out
inc
xor
incl
or
repz
lret
sar
dec
int
lret
pop
fcompl
cmp
jbe
test
sub
cmp
stc
jle
adc
outsb
loop
orb
andl
mov
cmp
adc
bound
inc
cwtl
and
inc
pop
sbbb
adc
jle
sti
stc
and
insl
mov
andl
inc
mov
push
mov
jnp
lods
gs
mov
popa
addr16
mov
push
hlt
push
ja
and
add
fimull
clc
dec
push
jb
sub
dec
or
cli
push
xchg
cmp
aam
fdivrl
int
cltd
xchg
popa
dec
lret
scas
jl
mov
mov
inc
andl
fisubrl
sbbb
or
pop
in
insl
sub
push
test
lret
cmp
hlt
push
aam
sbb
adc
lods
hlt
bound
dec
test
loop
addr16
mov
rorl
js
imul
sbbb
pop
mov
or
mov
jae
xchg
int3
out
add
mov
popa
adc
xchg
nop
ja
les
adc
push
std
sbb
ret
cmp
ret
jae
pop
dec
xor
fcmovb
mov
subl
dec
lock
sbb
rclb
xchg
push
push
jb
sub
dec
add
push
xor
aas
jne
or
daa
sub
ds
test
insb
pushf
jmp
mov
xor
mov
dec
mov
mov
inc
jle
test
xchg
ds
push
adc
sub
int
xchg
sahf
cwtl
dec
inc
out
mov
shl
mov
movsl
mov
lods
and
or
inc
daa
xchg
call
lods
stos
scas
mov
ds
rcrl
add
pop
cmc
fwait
jecxz
or
cmovae
inc
push
dec
mov
data16
shrl
mov
cmp
pop
ficoms
aaa
push
pop
and
jmp
pusha
jge
jmp
inc
push
fnstcw
shrb
mov
jp
cmc
scas
fidivl
sub
gs
cld
inc
lret
sti
orb
jns
xor
pop
data16
sahf
mov
push
lds
cmpsl
rcrb
jbe
data16
rolb
pusha
mov
or
lea
xchg
jae
sub
mov
in
push
push
fwait
and
mov
cmpsb
mov
cmc
mov
outsb
xlat
fimuls
mov
mov
jecxz
xlat
cmp
jle
and
mov
mov
cwtl
xor
jns
sti
add
mov
mov
push
and
jmp
mov
xchg
lods
cmc
bound
ss
mov
insl
faddl
fadd
cltd
xor
jo
inc
ja
mov
mov
int3
jae
xchg
call
adc
sti
or
push
fmuls
push
jl
insl
xor
adc
mov
aad
cmp
call
and
out
jno
xchg
dec
add
loope
add
fnstenv
ficoms
shlb
bound
int
and
aaa
stc
je
fldenvs
aad
mov
scas
stos
shrb
mov
xor
add
enter
mov
mov
pop
xchg
sahf
pop
pop
in
mov
shll
or
xchg
xchg
movsb
hlt
je
adc
cmp
or
adc
mov
cli
ds
decl
and
lods
gs
cltd
jp
inc
loope
clc
xchg
pop
test
ds
sahf
repz
inc
aaa
jg
jns
cmpsl
pop
int
out
fsts
fs
sub
and
hlt
pop
xor
mov
pop
jg
push
mov
cmp
rorb
scas
mov
jbe
adc
lcall
mov
jbe
or
xchg
pop
cmp
cmp
mov
lret
fdivp
push
xchg
pop
arpl
jge
pop
scas
int3
rclb
lods
mov
es
inc
xor
data16
dec
xchg
cmp
fists
cmp
mov
les
adc
pop
inc
ja
cmp
psrad
mov
cmpsl
out
cmp
adc
pop
inc
aad
lcall
aaa
icebp
sub
xchg
sar
jl
mov
pop
aad
push
dec
mov
adc
add
repz
dec
add
cmp
sub
popa
lret
inc
sbb
add
and
sub
pop
call
add
rcll
lds
cmp
enter
cs
mov
sbb
xchg
jb
or
sub
fimull
inc
imul
mov
mov
out
adc
or
xchg
ss
rorb
push
mov
mov
xchg
push
sub
mov
and
imul
scas
mov
xchg
fdivrp
adc
cwtl
aam
pushf
pop
sub
movsl
andl
fninit
in
cmp
dec
test
aad
jns
push
jg
fsubp
enter
sbb
xchg
jg
add
pushf
dec
pop
and
fwait
repz
lock
ljmp
adc
mov
mov
in
lods
pop
movsl
fwait
or
jo
aam
xor
jnp
add
clc
unpckhps
jmp
repnz
pop
hlt
sub
stc
adcl
sahf
push
je
out
cmc
pop
mov
mov
shrb
movsl
shl
push
push
xchg
fld
pop
sub
aam
dec
imul
icebp
cwtl
xchg
push
add
test
push
xlat
pop
jg
mov
loopne
in
in
mov
push
mov
aaa
push
adc
cmp
pop
lods
push
sbb
mov
mov
inc
sbb
je
out
jne
fdivrp
rorl
sbb
test
enter
outsl
and
push
icebp
cmp
movsl
push
inc
das
inc
lea
xor
sub
dec
cs
xchg
flds
mov
popf
jb
jb
mov
hlt
ljmp
aaa
leave
add
ss
push
loopne
push
out
dec
lock
aas
outsb
lods
push
mov
mov
sbb
sub
subl
mov
and
xor
sbb
sbb
mov
mov
lods
pop
pop
inc
push
cmp
fsubrl
or
pop
push
int3
push
dec
jmp
mov
mov
lcall
enter
or
icebp
xor
jnp
mov
sbb
mov
sbbb
inc
in
pop
shrb
add
mov
in
dec
pushf
and
mov
jmp
lods
popa
mov
jle
fstpl
xor
cmp
int3
xor
pop
imul
xchg
popl
push
jecxz
sbb
sbb
out
or
mov
jne
sbb
mov
jl
mov
stc
popf
adc
add
orl
loop
adc
or
popa
ss
mov
das
sub
jbe
loope
jo
sub
mov
ja
call
xchg
out
bound
fistpll
pop
cltd
mul
insb
inc
xor
mov
mov
cld
cmpsl
in
pop
fldt
data16
inc
push
xchg
iret
mov
mov
pushf
into
out
cmp
jae
dec
fnsave
fistps
cmc
js
pop
ja
mov
cmp
leave
emms
sub
out
and
xor
loope
andb
hlt
cwtl
lods
add
cltd
fisubrs
popa
xor
fistpll
sarl
inc
jne
out
xor
aam
xchg
fwait
and
dec
mov
scas
nop
scas
loopne
jb
rcrb
sub
nop
push
insl
loop
fwait
xorb
push
sub
ja
add
or
lret
jle
test
and
cmp
call
in
fs
add
cwtl
add
inc
xchg
mov
shl
scas
sbb
xchg
outsl
lds
sub
shll
dec
xor
sub
stc
aad
push
out
xchg
pop
pop
jl
pushf
shrb
cmpl
mov
cld
mov
lret
mov
inc
cmp
sbb
outsb
lret
dec
xchg
cmpsl
test
push
cmpsl
mov
push
cmp
and
testb
outsl
rcrl
jecxz
xor
jb
xchg
fwait
outsl
jmp
mov
and
fbstp
divl
dec
addr16
loope
xor
mov
mov
and
mov
jno
loopne
push
jecxz
push
dec
inc
fisttpl
js
or
xchg
mov
out
cmpsb
movsl
aas
mov
cmp
repz
mov
add
lahf
xor
cmc
cmp
sti
jmp
xor
insb
into
push
inc
mov
mov
add
cli
ja
in
cmp
test
shll
cltd
mov
pop
jle
jecxz
mov
inc
rolb
movsl
xor
mov
add
fidivs
mov
inc
pusha
insl
ret
mov
inc
lods
sbb
mov
xor
lcall
push
jns
scas
cmpl
mov
jmp
ret
jmp
xlat
fldln2
mov
aaa
je,pt
daa
test
shll
adc
andl
iret
push
jmp
adc
or
mov
cmp
fsts
out
filds
cmc
rcll
cmp
ds
adc
pop
push
sbb
inc
lahf
cmp
pop
mov
ljmp
push
pop
loope
roll
daa
adc
repz
mov
stc
cwtl
data16
push
push
repz
jg
xor
adc
call
scas
jnp
int
popf
shrl
hlt
sub
pop
mov
lods
fcomps
or
cmp
data16
xchg
adc
push
pop
pop
je
mov
mov
in
mov
mov
xchg
movsb
pop
lods
movsb
jno
cmp
gs
shlb
fs
pusha
in
dec
push
xlat
in
inc
imul
xchg
mov
sub
push
pop
lahf
push
adc
mov
xchg
inc
ret
leave
inc
mov
dec
cmc
mov
data16
outsl
pop
rcll
in
loope
mov
mov
movl
jns
stc
mov
add
inc
cmpsb
pop
jne
test
pop
mov
into
sbb
out
test
push
xlat
xchg
in
daa
fidivrs
sub
imul
inc
enter
inc
mov
outsb
cmp
pop
sub
xchg
cltd
imul
int
jl
icebp
adc
dec
sub
and
add
clc
stc
cmpl
lea
int
test
das
fwait
repnz
ds
inc
jg
outsl
fnsave
insl
pavgb
pop
pop
mov
lea
cmc
xchg
ficoml
pop
test
sti
cmpsl
adc
enter
fs
ljmp
add
and
push
pop
push
les
mov
fstl
mov
inc
test
xor
xchg
cld
dec
inc
adc
rcrl
mulb
dec
call
adc
stos
mov
insb
je
push
movl
loopne
push
or
xor
sub
sbb
or
mov
mov
fidivs
call
shrl
test
dec
jb
xchg
cli
and
sbb
pop
test
mov
je
jmp
add
xchg
les
divl
mov
jb
pop
xchg
pop
rcr
xchg
add
repnz
shll
fistl
ret
test
je
imul
ljmp
push
pop
movsb
out
in
test
movsb
or
jecxz
stos
jmp
lret
add
bound
sbb
cmc
popf
or
adc
and
dec
jecxz
pop
pop
cld
daa
or
mov
mull
mov
loopne
xchg
ja
aas
and
dec
popf
daa
les
cmp
out
xlat
aad
pop
add
jmp
jae
ljmp
jbe
mov
and
inc
loope
push
or
jb
aam
cmp
scas
inc
test
inc
daa
jns
jne
jge
cli
pop
dec
push
jbe
jbe
sbb
dec
xor
push
cs
pop
mov
dec
sbb
sbbl
clc
js
xor
cld
out
mov
mov
lcall
icebp
inc
roll
cmp
mov
sbb
push
pop
or
arpl
jp
push
mov
adc
scas
mov
pop
and
das
ss
insb
aad
mov
outsl
std
jl
sub
enter
dec
adc
add
nop
inc
out
aas
enter
mov
clc
mov
jno
stc
xchg
sbb
pushf
loope
mov
jmp
xchg
adc
rcr
int3
inc
movsl
jge
stos
cli
adc
sub
jp
not
inc
outsb
sbb
xchg
push
jmp
out
xchg
lret
push
cmp
loopne
lahf
scas
stos
adc
and
jle
mov
lret
and
imul
xor
adc
adc
dec
push
push
adc
rcll
aam
les
insl
rcrl
xchg
pand
jae
fldt
adc
out
dec
cmp
insb
push
add
outsb
pop
stc
add
inc
sahf
inc
aaa
and
adc
ss
pushl
stc
or
xchg
xchg
fbstp
and
loopne
push
outsb
push
enter
cmp
insl
outsl
ficoms
shl
wrmsr
push
in
add
pop
test
ret
push
loop
push
jbe
rcll
mov
aas
jb
pop
sub
or
push
data16
mov
cmp
pop
test
adc
pop
jle
cld
scas
push
fs
loope
rclb
aaa
out
inc
and
test
adc
jb
stc
mov
in
in
imull
mov
mov
cmp
push
out
add
mov
jnp
xor
xchg
inc
gs
loopne
gs
leave
cwtl
fistpl
into
repnz
sub
out
bound
loopne
lods
pop
mov
pop
sub
or
test
insl
push
lods
movsl
ds
sub
and
or
or
lret
pop
rolb
fcoms
pop
cmc
popf
xor
clc
arpl
scas
xchg
mov
dec
or
mov
mov
xor
dec
xor
adc
pop
lahf
fs
cwtl
sbb
sbb
cld
push
jnp
inc
push
std
cld
lea
dec
test
scas
and
andw
movsb
mov
movsb
pop
loop
shl
xchg
imul
sub
imul
jle
nop
aam
xchg
sub
imul
sbb
dec
pop
dec
xchg
mov
sub
pop
leave
adc
cmp
cmp
mov
repnz
fdivr
lret
gs
inc
inc
daa
mov
lods
mov
loope
aas
cmp
pop
mov
cmc
gs
push
test
lea
or
pop
xchg
cmp
add
inc
ja
test
jne
sub
icebp
test
jle
sahf
movsl
lods
ja
sub
jge
cwtl
xchg
sub
push
ffreep
sbb
pop
imul
mov
fwait
add
sub
dec
icebp
mov
rclb
add
xor
ret
push
jmp
pusha
data16
mov
jnp
mov
pushf
test
add
mov
loop
pop
insl
pop
jb
cltd
test
cmp
and
je
xchg
andl
mov
jbe
xor
ret
jno
pop
fwait
sbb
andl
push
mov
inc
pop
ret
outsb
test
pushf
or
pop
mov
push
test
adc
mov
sub
inc
sbb
into
mov
add
jle
loope
shrl
sub
xor
pop
in
pop
popa
mov
xor
mov
adc
mov
cmc
enter
fsubr
dec
ljmp
test
mov
nop
mov
add
push
push
xor
push
adc
in
or
sub
pop
out
int
xchg
push
dec
adc
cmp
outsb
in
pop
add
addr16
out
std
xor
add
loopne
rol
jmp
add
mov
pop
cld
in
push
ja
addb
mov
mov
fldenv
push
fisubs
out
dec
loop
loope
adc
rcrl
push
je
loop
test
jae
cmpsb
dec
push
in
aas
pop
xor
sub
lods
xchg
addr16
pop
ss
or
xchg
or
dec
mov
and
ja
and
sbb
lret
sbb
pop
mov
sub
adc
add
mov
iret
or
xor
movups
and
mov
jne
xor
or
insl
push
ret
jle
mov
xchg
jnp
scas
push
inc
dec
ffreep
sbb
sti
fsub
pop
xlat
add
mov
inc
lahf
xorl
in
xchg
push
leave
mov
dec
and
shll
faddp
ljmp
daa
pop
add
scas
arpl
and
mov
cmp
push
or
fwait
mov
fadd
push
out
inc
adc
popf
mov
inc
inc
jnp
sbb
dec
testl
enter
les
fisubrl
notb
into
pop
shlb
pop
jmp
fxch
test
insb
fwait
inc
fwait
mov
inc
jno
andb
in
sahf
sub
out
mov
sub
ret
cs
sub
mov
mov
icebp
leave
cmc
ja
in
ds
add
pop
mov
insb
lock
mov
pushf
or
or
rcll
mov
mov
sbb
mov
gs
outsb
push
push
pop
cmp
jmp
xchg
ja
fs
lcall
lock
sbb
ds
sti
loope
mov
out
lds
stos
testb
enter
xchg
aad
pushf
inc
stc
cmp
lock
pop
mov
and
push
pushf
ja
mov
repnz
cmp
and
in
mov
loope
aas
dec
out
pushw
sbb
mov
lock
addl
mov
test
jmp
and
xlat
rolb
mov
aad
arpl
enter
fstpl
push
cmp
inc
sub
lahf
xchg
cltd
hlt
ret
mov
clc
pop
or
xor
mov
sahf
xlat
push
sbb
imul
out
sub
pop
test
sbb
ret
ss
sarl
adc
adc
lret
lods
lahf
xchg
ss
mov
in
jp
mov
push
mov
stc
push
push
shll
not
mov
inc
mov
jmp
stos
hlt
pop
cmpsb
dec
nop
outsl
or
fdivrs
cmpsl
push
push
push
lea
add
inc
push
cmp
xchg
loopne
in
mov
push
mov
add
bound
push
adc
pop
sub
int3
cmp
jo
leave
shl
out
shlb
cmp
lds
loopne
dec
negl
push
jle
int3
mov
mov
fdivl
push
pop
ret
fucomi
inc
mov
cltd
mov
push
cmpsl
je
xchg
mov
mov
iret
out
adcl
cltd
icebp
andl
scas
inc
sbb
arpl
dec
daa
mov
mov
push
mov
mov
fidivrs
in
mov
rcrb
mov
dec
sub
cwtl
sar
test
rclb
add
mov
jg
popa
push
sbb
notl
sub
push
push
lcall
lret
in
mov
aam
pop
aam
mov
mov
mov
cmpb
dec
inc
mov
fimull
inc
into
mov
lcall
or
lahf
cld
dec
or
push
sbb
lahf
mov
hlt
inc
push
sbb
lcall
in
ljmp
jno
or
mov
jb
imul
jbe
dec
sahf
lret
iret
fdivr
ret
dec
pop
vmovaps
xor
add
outsb
pop
je
xor
mov
out
scas
sbbb
scas
jno
add
stc
jo,pt
ficompl
and
loop
mov
pop
and
fabs
and
adc
sub
jnp
nop
aaa
xchg
and
xchg
fildll
sti
dec
jnp
clc
cmp
aad
lret
incl
cmp
jp
mov
cmp
sbb
xchg
mov
movl
and
rcr
dec
call
or
divl
lahf
inc
test
leave
xlat
mov
std
mov
inc
loop
mov
push
or
mov
mov
jg
popa
sub
xorl
insb
test
pop
mov
mov
rcll
sub
mov
out
add
xor
xchg
xchg
fisubrs
icebp
xor
add
pop
pop
xor
add
push
mov
lds
sarb
cld
or
movsb
fnstenv
fisttps
das
mov
xor
add
pusha
jmp
int3
test
js
clc
test
cltd
pop
outsb
xchg
stos
xchg
push
cmp
por
push
rcll
aas
shll
cmpsl
inc
ffree
bnd
dec
in
jnp
popa
movsl
es
outsb
or
pop
and
push
cmp
imul
dec
xchg
adc
cs
push
or
pop
inc
pusha
pop
out
adc
add
lods
fwait
cmp
push
cmp
iret
loopne
cli
out
push
jmp
sbb
sbb
inc
jp
sbb
orl
in
lock
xor
mov
stc
and
faddl
sahf
xorb
and
xchg
adc
sbb
jp
cmp
jno
movntq
mov
lcall
fwait
or
dec
sub
sbb
test
cld
shl
pushf
inc
mov
lret
xchg
push
jns
les
and
shrl
inc
mov
dec
push
outsb
and
cmp
mov
cltd
arpl
insb
push
cs
sub
or
loop
fs
inc
outsb
stc
jne
ret
jns
cmc
imul
in
xchg
mov
fidivl
add
ret
or
jmp
jl
xchg
or
into
fwait
jbe
pop
sub
jmp
rol
lock
hlt
daa
arpl
add
push
cmpsb
fwait
js
imul
lods
and
incb
daa
cmp
orb
mov
xor
cmpsl
mov
xchg
jnp
adc
inc
mov
dec
xor
jp
mov
aaa
adcb
fstpt
mov
jnp
mov
bound
xchg
pop
mov
orb
sbb
call
outsb
mov
aas
push
push
push
push
out
mov
cmp
stc
mov
mov
nop
push
and
mov
jae
jge
pop
dec
lods
iret
cmp
rorb
xor
xchg
notl
sarb
test
pop
mov
mov
add
rclb
inc
pushfw
push
dec
mov
inc
leave
lods
mov
inc
cmp
inc
xor
jno
xchg
cmp
jb
inc
and
lds
shlb
pop
iret
popa
movsw
jge
in
das
adc
hlt
in
sub
adc
inc
stc
lock
mov
jp
in
fstl
das
mov
or
mov
mov
dec
test
or
mov
inc
sbb
push
xlat
mov
cmpsb
dec
sub
or
and
add
jle
insl
jp
ljmp
adc
sbb
cltd
add
xor
in
test
loop
sub
inc
mov
xor
fstpt
add
or
ja
roll
outsl
mov
inc
lock
aad
lahf
push
inc
jmp
je
bound
sub
or
sbb
push
sbb
jo
sub
pop
adc
clc
sbb
stc
lods
jmp
rclw
jle
cli
and
imul
and
fwait
jno
lret
sbb
pop
sbb
ja
aas
xchg
cmpsb
pop
sbb
xchg
lahf
xchg
and
dec
inc
decl
jmp
icebp
call
sub
dec
or
sub
inc
dec
dec
adc
lcall
movsl
push
loope
fwait
xlat
sub
popf
adc
ret
mov
iret
xchg
shll
ret
in
pop
jmp
in
cltd
cmp
dec
mov
jns
cltd
fs
add
push
xchg
inc
push
std
mov
das
mull
pop
into
jmp
push
inc
mov
push
adc
add
rorl
leave
adc
imul
sbb
pop
bound
mov
dec
lahf
aaa
aad
in
and
cwtl
pusha
pusha
jbe
push
call
idivb
mov
cmc
or
push
fisubrl
ja
adc
push
insb
sti
in
xchg
xchg
repz
pop
shll
pop
in
mov
adc
xor
fnsave
push
and
fstps
das
loop
fnstcw
add
out
popa
mov
cmc
sbb
mov
dec
addr16
fsubrs
cltd
popa
enter
sub
mov
test
mov
aaa
test
jno
or
cli
repz
push
aad
and
push
ds
dec
lock
icebp
jp
pushf
or
outsb
call
jp
xor
mov
push
xchg
inc
jmp
mov
insb
dec
imul
aas
jmp
aad
adc
push
test
cld
jae
leave
test
xchg
arpl
test
xchg
sbbl
pop
xchg
fmulp
lds
inc
and
or
inc
mov
insb
adc
cltd
xor
popa
test
fnstenv
or
inc
mov
lds
movsb
pop
popf
xchg
mov
lock
js
xchg
inc
outsl
stos
std
cmpsl
or
push
fsubrl
fucom
dec
push
bound
lcall
pop
sti
lock
arpl
dec
jnp
loope
xchg
mov
lods
mov
les
sbb
xor
arpl
xchg
jb
adc
and
sbb
test
sbb
test
jb
divl
xchg
jnp
data16
xor
jg
adc
mov
xchg
jp
mov
sbb
aaa
push
mov
aas
into
adc
leave
sbb
push
ja
popf
roll
mov
sbb
jl
mov
push
repnz
add
cmp
push
rorb
cmc
imulb
aaa
pop
sahf
or
mov
call
sub
js
stos
sub
dec
sbb
xchg
jge
adc
mov
push
imul
inc
ficomps
into
popf
adc
push
in
mov
hlt
push
mov
sub
push
gs
pop
cmp
in
dec
jmp
sbb
js
sti
loop
add
ss
push
in
mov
mov
mov
jo
pushf
pop
popa
mov
in
cmpsl
inc
cmp
mov
jae
je
leave
xlat
add
ja
add
add
call
stos
xor
out
sbb
push
push
xor
pusha
sbb
icebp
aas
mov
fisttpll
jne
push
mov
add
mov
ret
scas
xchg
xchg
fcmovu
arpl
xor
adc
loopne
mov
push
jmp
xlat
pop
sbb
sbb
push
cmp
cmc
into
dec
scas
jmp
loopne
add
lock
loopne
adc
lahf
mov
push
cmc
xchg
mov
mov
inc
data16
setg
popf
jecxz
sbb
icebp
fimuls
xchg
push
lods
push
jbe
pop
push
sbb
push
push
dec
orl
int
push
dec
fmull
cmc
mov
outsb
jns
sbb
jno
lcall
shr
testl
push
adc
js
or
rclb
cltd
and
add
mov
add
aas
push
les
enter
test
add
pop
sub
test
pop
lea
adc
lahf
les
nop
cmc
fdivl
jne
clc
int
adcb
mov
aas
push
sbb
js
in
psrlw
mov
xchg
pop
cmp
add
sbb
lea
dec
loope
cwtl
ds
push
push
inc
mov
mov
xchg
insl
jle
sahf
idivl
mov
repz
cmp
sahf
cmp
pop
jne
mov
sti
movsb
movsl
jo
cmp
ss
add
mov
adc
ror
push
xor
pop
dec
mov
mov
and
scas
pop
and
adc
adc
shlb
out
out
mov
sbb
add
dec
mov
icebp
lock
xchg
ss
pop
fidivl
imul
mov
add
nop
xlat
and
lahf
jno
es
pop
pushf
das
popf
jg
add
jns
push
mov
fisttpll
hlt
fimull
push
jmp
outsb
dec
jnp
bswap
jae
rcr
clc
push
scas
popa
flds
mov
or
cmpsl
out
ds
and
pop
dec
popa
mov
add
xor
fs
cmpsl
cld
mul
sbb
jp
test
xchg
jle
fsubrp
xchg
add
or
imul
nop
xchg
pop
movsl
sub
xchg
add
cmpsl
add
mov
add
jg
lock
mov
std
pop
fsubrs
and
xchg
ja
sub
icebp
vaddpd
notl
fsts
call
pusha
sbb
cs
imul
or
add
xor
loope
xor
xor
sbb
inc
sbb
or
mov
sbb
loope
adc
in
call
add
dec
xor
movsb
mov
pop
push
sub
arpl
test
fcmovnu
lods
mov
pop
and
jns
mov
add
stos
scas
cltd
shlb
fistps
add
jbe
mov
aam
add
pop
dec
and
aad
pop
jmp
in
mov
pop
cmc
lock
mov
jno
and
mov
jge
xchg
xchg
fsubr
mov
jb
sbb
xchg
pop
mov
enter
in
dec
sti
sbb
into
xor
lret
xchg
into
mov
aad
cwtl
pop
out
repnz
ja
popf
test
test
test
sti
adc
add
inc
adc
jg
sbb
lret
aad
cmc
mov
jp
int
xor
stc
cli
stos
rcrl
mov
mov
pop
test
push
sub
std
push
pushl
or
or
jno
inc
push
ret
ja
mov
sub
push
in
pop
mov
xchg
mov
jmp
mov
divb
gs
inc
addl
les
sub
js
push
push
and
test
inc
sub
clc
into
pop
mov
pop
loope
inc
fimuls
sbb
jle
sbb
or
std
idivb
mov
lahf
xchg
or
repz
and
cwtl
jp
cmp
popa
hlt
mov
cmp
ret
dec
jne
divl
ds
lods
rol
loope
imul
sbb
push
hlt
sbb
cwtl
cmc
cmc
enter
push
push
in
enter
xchg
stc
or
std
fiaddl
outsb
jb
dec
mov
sbb
mov
mov
and
push
ljmp
in
mov
mov
out
in
out
icebp
pusha
sbb
aaa
pop
adc
rolb
add
sbb
pop
in
xchg
jl
mov
dec
negl
filds
push
mov
inc
sbb
mov
rorl
gs
shl
pop
jl
fdivrs
pop
and
inc
adc
shrb
jl
sbb
lea
stos
testl
shl
mov
mov
add
sub
lods
xor
mov
inc
adc
fdivr
dec
filds
sbb
testl
jae
rep
lcall
in
add
fs
pushf
mov
mov
in
stos
sbb
std
push
mov
in
fists
leave
cmp
js
and
outsl
stos
jmp
mov
jecxz
movsb
mov
arpl
jo
push
mov
adc
stos
or
dec
pop
js
ds
ffreep
sbb
adc
inc
and
lds
cmp
aaa
inc
xor
popf
movsl
push
testb
into
clc
pusha
out
cmp
int3
sbb
cmpsb
jmp
sbb
insl
pop
pop
inc
mov
push
mov
or
incl
out
add
sahf
mov
nop
mov
fcmovnu
pop
pcmpgtd
lahf
mov
and
loop
imul
mov
push
cs
mov
xchg
jmp
orb
xor
clc
or
mov
dec
mov
sub
push
cmpsl
mov
jg
push
movsl
mov
arpl
inc
lock
cmp
adc
rolb
lret
cli
jbe
xor
sub
js
adc
mov
les
dec
or
sqrtps
mov
dec
mov
in
inc
mov
inc
icebp
jb
dec
lock
iret
ja
dec
cmpsb
mov
mov
aas
outsb
pop
test
adc
mov
sub
out
pusha
aad
xor
jle
push
lahf
cmc
popf
fcmovnb
cli
xchg
repnz
jnp
ror
dec
cmpxchg
test
jmp
std
adc
sbb
inc
inc
bound
or
or
jne
jb
and
popa
in
cli
mov
ds
add
mov
sub
cmp
or
jne
mov
ret
xchg
aaa
dec
cmp
dec
mov
mov
mov
fld
pop
mov
daa
jecxz
test
jae
sbb
out
sbb
adc
es
xor
bound
repz
lock
push
scas
jle
mov
addr16
pop
sahf
roll
dec
repnz
imull
mov
loopne
xchg
xchg
ss
mov
divl
int3
mov
nop
fists
lret
ret
mov
js
and
mov
mov
or
scas
push
nop
add
xchg
sub
aaa
js
arpl
jecxz
jbe
pop
idivb
cmp
xchg
inc
fistps
xchg
pusha
enter
lock
push
cmp
daa
test
and
ds
aad
xor
je
das
and
scas
es
jle
bound
lods
push
lea
push
cmpsb
push
or
sub
popf
lods
xlat
dec
add
into
call
mov
mov
inc
ret
stos
dec
icebp
in
sbb
or
push
push
dec
mov
pusha
push
xor
cmp
sub
icebp
fdivl
mov
mov
divl
push
cmpsl
xor
mov
leave
jle
ret
repz
clc
mov
xchg
call
iret
mov
xchg
pop
jg
stc
mov
push
inc
jle
dec
and
pop
pushf
lret
cmpsb
jge
icebp
cltd
icebp
xchg
pop
or
imul
mov
cmpsl
jg
sub
loop
jg
cmp
mov
jge
sbb
mov
int
fdivrs
mov
loopne
cltd
out
sbbb
fdivs
outsb
sub
adc
clc
fidivrl
xor
xchg
stos
in
ja
push
ss
jb
jp
test
out
in
mov
push
cmp
dec
adcl
cmpsb
push
out
push
rolb
popf
fistl
push
push
ljmp
mov
loope
outsb
inc
mov
lcall
sti
sbbl
and
in
data16
dec
sahf
lea
sub
cmpsb
pop
sbb
arpl
push
mov
loope
jle
in
inc
test
jmp
push
pop
mov
call
add
scas
cmc
aad
adc
xor
adc
cmp
cmp
test
mov
jns
sarl
lret
mov
sbb
insb
movsb
imul
insb
xor
push
dec
out
pop
mov
pushf
jae
pop
push
xchg
daa
mov
add
into
fsubs
cwtl
xchg
push
outsl
in
mov
jmp
cmp
call
push
out
nop
enter
jns
in
mov
add
fnstsw
cmp
mov
push
jecxz
arpl
mov
push
adcl
or
and
arpl
movsl
jle
fcomi
jae
sbb
lods
xor
inc
jp
loopne
outsb
ja
xchg
pushf
sub
ljmp
or
mov
jns
pop
outsb
jne
jns
mov
jno
fldcw
push
sub
xchg
icebp
cld
sub
xor
pop
pop
pop
mov
pop
pop
sub
sbb
pop
mov
lret
mov
mov
jg
adc
fsubrs
or
pop
push
ret
mov
in
and
push
mov
mov
shll
out
inc
mov
sub
outsl
push
insb
gs
mov
or
and
sbb
or
or
js
cmpsl
popa
adc
cli
mov
es
xor
test
dec
xchg
jo
xchg
popf
xchg
xor
fstpt
loope
iret
out
push
push
popa
xor
adc
mov
jnp
adcl
inc
dec
dec
stc
add
and
xchg
sub
xor
xor
das
pop
jl
add
mov
int
cmpsb
stos
push
stos
push
pop
dec
mov
mov
insb
push
popa
sbb
ret
sub
and
sub
movsl
xor
std
xchg
into
add
fimull
ljmp
adc
iret
push
add
and
aas
add
fbld
mov
pop
je
inc
sbbb
push
adc
adc
fwait
dec
sti
or
icebp
in
mov
aad
inc
jle
mov
cmpsb
inc
cmpsb
mov
cmpsb
stos
mov
pop
jecxz
mov
lret
subl
push
adc
dec
push
jge
call
mov
aas
in
stos
movsb
jp
rcll
int3
in
out
bnd
cmp
sbb
iret
and
inc
dec
mov
popf
pop
cli
je
adc
jnp
aas
es
or
test
out
adc
lock
add
xchg
xchg
inc
sbb
fwait
test
shl
xchg
sub
ret
mov
adc
mov
xchg
push
out
sub
jge
add
mov
gs
aas
lahf
inc
das
mov
pop
icebp
pop
mov
add
stc
jg
lea
je
stos
mov
jle
shr
cmpsl
imul
sbb
pop
sbb
mov
shlb
dec
call
ds
popfw
and
and
adc
popl
jl
outsb
fsubrs
xlat
push
sarl
jp
and
sub
add
mov
push
cmc
ret
xor
cld
js
jg
clc
mov
aad
sbb
bswap
push
cld
repz
xrelease
lods
or
lret
cmp
aam
stos
dec
fistpll
mov
adc
ds
mov
out
test
in
jmp
out
scas
mov
dec
test
mov
daa
mov
outsb
hlt
fdivl
xchg
mov
les
pop
mov
testb
daa
addr16
bound
add
rcl
adc
aaa
sub
xor
inc
pop
adc
int3
sarb
popf
lods
ss
fwait
pop
loop
push
sub
pop
mov
inc
lret
cmpsb
adc
lods
lods
jecxz
sub
dec
movsl
pop
cli
jmp
and
xchg
adc
push
dec
pop
sbb
xor
pushf
fdivrs
mov
dec
stos
pop
std
push
push
pusha
mov
sbb
push
cmp
xchg
shll
or
iret
jnp
lods
movsl
scas
es
push
icebp
cmpsb
popf
sub
sub
sbb
and
jbe
adc
fwait
out
pop
xchg
fisubl
movsl
or
popa
inc
mov
int
jecxz
stos
mov
jo
jge
scas
cmp
iret
std
adc
insb
mov
andl
sbb
inc
cmpsl
jecxz
or
dec
loopne
mov
es
mov
inc
cmc
stos
xchg
ds
pop
push
push
nop
cmp
into
jae
mov
addr16
sti
loop
jle
out
loope,pn
push
sbb
mov
cmc
or
jle
inc
mov
rcll
in
xchg
mov
inc
sbb
icebp
cmpsb
test
js
arpl
lods
mov
inc
pop
in
mov
xor
fadds
scas
fdivl
pop
dec
jno
xor
movb
lds
outsb
pop
repnz
int
xlat
orl
cmp
data16
lret
xchg
ret
xchg
dec
in
sub
sub
fiaddl
neg
outsl
sahf
mov
xor
lret
cmpb
xchg
data16
lret
xor
lea
scas
push
dec
push
mov
js
jge
in
adc
nop
fdiv
test
test
xchg
inc
mov
or
adc
shlb
jb
push
inc
int
inc
push
cmpb
jg
pop
stc
pop
aad
sbb
sbb
jecxz
xchg
or
xor
out
xchg
outsb
ds
cli
shlb
sub
inc
pop
xchg
lods
in
gs
mov
xor
mov
adc
inc
pop
sbb
dec
shlb
push
lods
cs
mov
bound
adc
fldcw
sbb
dec
pop
inc
mov
notb
jnp
cmp
insb
jns
add
mov
cld
bound
pop
stos
test
jmp
jle
shll
repz
jmp
shlb
pop
inc
in
pop
in
shlb
loope
pop
es
cmp
stos
fisttpl
dec
sbb
cmpsl
out
and
sbb
jne
cmp
mov
mov
jno
adc
xor
rclb
jb
inc
ljmp
mov
push
or
int3
stc
xor
or
push
sbb
test
mov
xchg
pop
adc
data16
cltd
push
loopne
xchg
and
fimuls
data16
lock
in
mov
pop
dec
dec
jo
pushf
push
dec
popf
jge
outsb
ret
inc
lds
fcoml
std
mov
std
push
popf
mov
fwait
aas
lret
gs
iret
add
aaa
out
mov
out
push
adc
sbb
sbb
jae
pop
adc
jnp
cmp
sbb
sub
fs
jecxz
imul
je
sbb
inc
adc
je
xchg
adc
test
out
jge
and
pop
fs
jae
cli
aad
cltd
push
or
sub
mov
inc
mov
dec
in
mov
loop
enter
mov
jp
test
mov
scas
jae
jle
xor
sahf
lods
or
pop
or
pop
jo
je
jnp
cmp
movsl
mov
sbb
cltd
mov
data16
push
std
cmc
lods
add
dec
lret
pop
fsubs
bound
js
mov
fisttpl
ret
ljmp
cmp
or
je
mov
jno
bound
fisubl
and
lock
xor
dec
ljmp
loop
pop
bound
push
xor
sahf
inc
dec
sub
xor
bound
test
and
je
xchg
popf
xchg
push
mov
jno
jmp
or
mov
lods
adc
pusha
rclb
imul
stos
nop
sub
dec
rclb
or
jne
mov
stc
jecxz
sbb
fnsave
cmp
push
stos
add
jge
xchg
inc
adc
outsl
sub
insl
enter
jge
and
cltd
and
aam
and
icebp
orb
leave
pop
inc
inc
sti
cmp
mov
dec
mov
fucomip
repnz
cmp
outsb
aas
inc
mov
push
testl
and
mov
stc
sub
sarb
adc
and
outsl
rcrl
xchg
repnz
jns
jbe
outsb
xchg
xchg
mov
scas
mov
sub
aad
add
lret
jb
adc
popa
xchg
mov
push
movsb
adc
xchg
pop
adc
test
jmp
mov
sub
pop
inc
mov
mov
scas
cs
popa
push
nop
push
lds
das
push
jmp
xor
scas
mov
icebp
roll
sub
adcb
dec
arpl
push
repz
insb
mov
mov
test
inc
pop
int
push
add
mov
pop
sbb
mov
jne
nop
pushf
inc
lock
jae
sub
xor
cld
dec
mov
movsl
cltd
out
xchg
mov
out
cmp
mov
pushl
pusha
cmpsl
push
cmc
enter
sarl
les
adc
in
test
xor
dec
jg
imull
and
aad
dec
aaa
push
dec
xchg
testl
outsb
or
int3
push
pop
add
cmp
add
jns
push
js
adc
pop
mov
fstps
andl
jb
add
loopne
sub
aaa
jae
pop
push
data16
lods
repz
jno
pop
push
adc
icebp
sub
insb
or
ss
loop
cmp
test
js
pop
out
data16
pop
jle
pop
mov
sti
shlb
pop
or
fs
jle
fidivrl
mov
ja
pop
push
mov
ret
out
adc
insb
pop
inc
inc
dec
and
adc
cli
stos
jmp
cmp
or
pop
sahf
mov
sbbl
xlat
mov
inc
and
and
cs
and
mov
ds
cmp
sbb
fmuls
xchg
mov
rcl
fadds
inc
cmc
adc
hlt
imul
rcrl
fimuls
xor
push
mov
sti
jne
add
inc
inc
ror
jp
cmp
test
inc
or
fadd
out
xor
sbb
daa
xchg
and
fnstenv
mov
jecxz
xchg
xor
dec
ficoms
ret
mov
mov
ss
adc
jae
shll
outsb
push
ret
push
inc
cmpsl
dec
pop
mov
xor
test
mov
mov
push
rolb
mov
in
into
shlb
lds
mov
cmp
sub
cli
jbe
or
mov
dec
pop
in
hlt
fldl
sbb
ss
rolw
int
mov
mov
sub
pop
pop
aas
andl
inc
stos
lret
jns
jo
test
sbb
mov
test
and
xchg
insl
pop
insb
lret
shrl
cmp
mov
mov
push
mov
rcrb
mov
cmp
ror
push
icebp
int3
jl
mov
push
or
insl
pop
push
ret
push
jnp
aaa
sub
loop
xor
xchg
lock
hlt
shl
scas
and
rcl
pop
fisubs
in
rorl
data16
add
iret
pop
lcall
loopne
das
sub
cmpsb
sbb
push
push
loope
pusha
cmp
mov
add
test
or
outsl
xor
or
lret
jg
out
and
jne
or
mov
jae
lock
insl
mov
xchg
push
jo
nop
fwait
sub
repnz
or
xchg
loope
sub
loop
and
or
out
mov
movsl
adc
xchg
push
pop
icebp
or
repnz
jo
ja
je
stos
sbb
mov
out
adc
adc
sbb
lock
test
test
inc
aas
pop
sbb
jo
enter
sti
insl
jmp
sbb
add
clc
adc
lea
and
mov
push
mov
fnsave
dec
push
loope
adc
push
adc
jno
lods
push
gs
jl
in
mov
mov
nop
aam
ds
mov
loope
stos
cmp
inc
adc
sarb
ror
jo
nop
xchg
fs
mov
add
dec
movsb
in
cli
scas
adc
xchg
enter
rol
js
xor
mov
push
push
push
leave
insl
mov
into
addr16
loop
scas
sub
lcall
and
psrad
xor
in
sbb
push
add
dec
cmp
push
dec
push
xor
inc
cltd
mov
sbb
xor
insl
inc
jg
mov
mov
dec
mov
rclb
dec
sub
gs
test
mov
pop
aam
imulb
mov
jmp
xor
push
sbb
mov
mov
pop
shll
inc
xor
push
cmc
ficompl
mov
testb
jne
dec
insl
push
lahf
jge
mov
pop
xchg
sti
mov
lcall
xor
push
stos
mov
dec
pop
fisubs
repnz
ret
fistpll
sbb
int3
xor
mov
loope
jo
je
push
adc
cli
pop
int3
jb
stos
test
xchg
xchg
out
and
add
jl
leave
imul
and
mov
insl
jno
push
xchg
xor
xchg
lds
in
sbbl
fidivrl
pop
neg
loope
aam
stc
pop
out
call
movsl
or
mov
jecxz
cmpsl
aaa
pop
imul
sbb
je
jge
test
add
repz
jnp
cmp
fnstenv
dec
sarb
pmulhuw
test
fidivs
adcb
bound
add
js
out
insb
push
push
pop
add
loop
andl
sbb
jnp
pop
xor
jb
pop
test
gs
ret
xorl
fld
sub
inc
enter
push
faddl
scas
and
dec
movsl
or
aad
mov
lods
out
ret
ds
mov
push
incl
roll
cmp
jg
movsl
cwtl
adc
in
je
add
data16
mov
jg
add
cmpsb
pop
sbb
jg
roll
jge
mov
int3
jnp
push
mov
mov
pop
and
or
stos
jge
out
inc
test
aaa
jecxz
xorl
inc
mov
dec
jmp
add
icebp
mov
jge
sbb
dec
cli
movsl
hlt
mov
xchg
out
jge
add
sub
add
mov
loope
and
cmp
push
push
and
sbb
aaa
push
cwtl
push
decl
inc
lcall
cmp
mov
popa
mov
mov
in
dec
stc
dec
pop
mov
xchg
bound
out
ret
data16
adc
rorl
insl
dec
fnstenv
insb
sbb
push
cmpsl
hlt
dec
inc
je
adc
test
lods
dec
xor
inc
push
pop
pusha
into
xor
imul
xchg
dec
jmp
add
aam
add
add
mov
xchg
aas
fcompl
or
mov
jb
sub
aas
mov
cmpsl
push
adc
roll
cwtl
insb
or
push
inc
mov
ds
push
mov
iret
loop
les
sbb
lock
pop
xchg
push
stc
mov
mov
pop
adc
mov
jge
out
xchg
jbe
ret
cmp
and
sub
shrl
arpl
inc
cmp
jg
dec
imul
mov
hlt
shl
pop
aam
xchg
dec
sti
inc
fcmovnb
jmp
stos
sub
lods
mov
pop
sbb
mov
or
aad
push
outsl
into
push
push
dec
xor
cmp
mov
sbb
push
sub
sbb
jl
fcos
mov
add
mov
sbb
lock
iret
fsts
jl
ja
icebp
scas
add
cmpsb
xchg
fistpll
jecxz
xor
or
add
pop
sar
inc
mov
or
mov
jns
add
out
dec
jecxz
push
test
std
movsb
sub
xchg
cwtl
lcall
xlat
inc
data16
mov
jno
loope
push
jno
lea
outsb
sti
stos
adcb
jnp
push
add
bound
push
mov
sbb
in
subl
mov
push
push
andb
inc
fbld
add
mov
xchg
mov
dec
adc
test
lahf
ja
leave
ljmp
inc
dec
aaa
pop
adc
std
das
mov
mov
jmp
xor
mov
mov
das
mov
sbb
push
insl
xor
cmc
push
inc
enter
jmp
mov
dec
dec
push
mov
test
inc
into
xchg
lret
lods
in
dec
iret
jge
jecxz
mov
ret
mov
xchg
lea
jno
pop
sub
dec
jnp
rcrl
cltd
shlb
jl
sub
sbb
leave
popa
dec
cmp
sbb
push
xor
mov
mov
inc
mov
testl
lds
sahf
xor
sbb
push
out
push
pushf
lock
push
inc
cmp
push
outsb
lods
mov
ret
push
mov
jb
pusha
sahf
mov
popf
lods
scas
xor
mov
xchg
outsl
push
xchg
pusha
icebp
std
pop
lods
jo
mov
mov
and
imul
ret
jecxz
orb
dec
stc
mov
insb
jns
xchg
pop
incl
inc
jmp
lds
lods
xlat
push
jns
cltd
inc
jle
stos
clc
xor
ds
pop
test
mov
add
daa
aad
data16
lds
fistpl
push
fstl
imul
div
cmp
dec
in
inc
xor
loope
jg
adc
jae
test
in
imul
hlt
cmc
or
fimull
ret
cmp
jo
inc
bound
fdivrp
mov
dec
in
imul
movsb
std
int
pusha
adc
add
or
xor
repz
mov
add
xor
lret
jecxz
orl
xchg
mov
xchg
cmpsb
inc
mov
outsb
jecxz
fwait
jmp
push
pop
lock
inc
xor
frstor
lret
pop
repnz
dec
shrl
sbb
hlt
out
lods
adc
fistpll
adc
and
fwait
sub
jl
fisttpl
int3
adc
mov
daa
jns
sub
lahf
add
xor
es
out
test
push
lret
jmp
sarb
outsb
cmp
fwait
sub
ret
adc
inc
mov
pop
xchg
cmpb
dec
push
cltd
cmp
das
jecxz
out
out
sub
add
loope
ret
das
fs
inc
into
int
in
jno
pop
arpl
xchg
stc
xchg
push
jne
cmp
js
inc
sbb
ret
push
stc
mov
add
and
stos
mov
movsl
xchg
icebp
pop
addl
loope
sahf
aaa
xchg
mov
mov
adc
fnstenv
test
push
stc
add
push
sbb
sub
jecxz
adc
popa
daa
in
xchg
ss
arpl
mov
sbbb
ret
loop
jmp
xor
xchg
fistpl
xchg
inc
pop
mov
or
inc
ds
movsb
or
cld
or
mov
mov
fmull
lods
andl
es
sub
add
scas
xor
and
inc
out
and
mov
jg
jo
bound
lcall
push
or
stc
mov
pop
leave
sbb
clc
inc
add
es
fs
or
xor
sti
mov
sti
pop
lods
leave
add
jmp
cmp
movsb
rcrb
pop
xchg
push
jae
jnp
sbb
or
fisubrl
test
fisubl
push
movsb
inc
idivb
push
xor
fs
xor
mov
cmc
mov
add
or
pop
sub
xor
mov
ss
fistpll
scas
pop
mov
add
xchg
fs
stc
lods
or
xchg
jl
ret
inc
enter
mov
mov
insb
adc
inc
lret
iret
inc
sub
or
scas
sahf
push
into
or
movsl
shl
aad
outsb
xor
mov
sub
test
lea
ds
scas
aad
fmuls
adc
inc
cmp
mov
add
test
inc
push
idiv
and
dec
adc
sbb
adcb
fnstcw
idiv
mov
xchg
push
aam
mov
sbb
dec
xchg
sbb
adc
lret
jl
inc
mov
mov
xor
sahf
enter
shl
test
iret
call
jge
pop
mov
lods
leave
hlt
je
mov
xor
out
xchg
popa
outsb
inc
into
jl
mov
sub
loop
rorl
and
mov
aam
sub
xor
enter
dec
push
das
and
adc
lods
mov
xor
inc
push
shrl
bnd
jmp
jno
arpl
decl
ret
inc
lret
cmp
mov
lahf
sti
cmp
rcl
pop
push
jmp
adc
mov
aaa
sbb
and
mov
dec
jg
inc
leave
aad
out
push
negl
rcll
pop
imul
dec
loopne
xor
jl
xchg
in
in
or
mov
loopne
push
in
addb
fnsaves
lds
xchg
loope
lret
bound
shrl
xor
fabs
sbb
test
mov
xchg
pusha
sahf
add
inc
push
jge
test
adc
int3
test
incl
push
punpcklbw
in
mov
jp
je
aam
and
adc
mov
insb
inc
cli
jns
movsb
test
addr16
nop
cmp
in
sahf
cmp
dec
out
stos
sti
or
testb
arpl
fists
jo
ret
fdivl
je
dec
adc
outsl
imul
nop
repnz
stos
dec
fidivrs
inc
pop
loop
or
lret
rcrl
mov
clc
xorl
adc
pushf
sbb
imul
sub
mov
push
outsb
sbb
jmp
iret
ja
mov
aad
dec
nop
xchg
mov
into
dec
sar
cmpsl
inc
sarl
lods
ljmp
sub
push
and
fwait
divb
in
fstpt
scas
imul
ret
inc
call
mov
pop
in
cmp
mov
push
xchg
fisubrl
popfw
fistps
outsl
pop
fwait
xor
cwtl
and
std
push
ljmp
sbb
pop
lret
sbb
jbe
repz
adc
leave
cmp
cld
xor
inc
rcrb
mov
mov
popa
movsb
and
xlat
fsubs
cmp
stos
aaa
int
mov
repz
and
pop
add
jl
push
cmpsb
mov
int
push
jle
lret
inc
sbb
inc
lret
pop
or
jmp
dec
jmp
imul
cmp
adc
dec
mov
fadd
fstpt
xchg
inc
jmp
jns
call
stc
jnp
stc
xchg
loop
fwait
inc
sub
lret
cltd
adc
pop
xor
adc
mov
out
mov
xchg
jle
aam
mov
adc
stos
and
xorl
outsl
lock
dec
mov
nop
add
js
jne
mov
imul
push
jp
sahf
les
jge
scas
lods
push
negl
jmp
cli
jne
jns
cpuid
fcomps
pop
dec
jge
cmp
popa
pop
in
pop
mov
adc
lods
jo
mov
sub
jecxz
fsubs
mov
aas
fidivl
jmp
sub
jl
xchg
pushf
addr16
inc
pop
dec
mov
test
es
mov
fildl
imul
int3
imulb
mov
icebp
arpl
fiadds
inc
loop
add
lods
jae
pop
pop
xlat
jae
add
and
fiadds
scas
decl
hlt
adc
add
je
in
hlt
cmp
cli
xchg
test
adc
movsb
xchg
jl
inc
cmc
cltd
fucom
lea
stc
jle
cmp
sbb
addl
popf
rclb
incl
mov
jbe
xor
call
xor
add
mov
jno
dec
dec
xchg
add
lea
addr16
in
cmp
ja
mov
dec
pop
outsl
xchg
aaa
cmova
mov
add
pop
cld
aas
mov
add
and
mov
push
inc
subb
xor
inc
pop
push
or
ljmp
push
movl
icebp
dec
xchg
pop
loope
pop
mov
mov
inc
loope
xchg
cmc
outsb
loop
cmp
scas
mov
loopne
test
ja
and
mov
dec
in
rcrb
es
addr16
rcrl
mov
xlat
leave
das
enter
fidivrs
dec
shl
jmp
jns
test
and
inc
pop
xchg
jnp
xchg
mov
cmpsb
fnstsw
inc
jnp
out
pop
xor
and
xchg
sbb
out
mov
jge
in
cmp
pop
movsl
packssdw
call
xor
jl
pop
push
mov
shl
mov
bound
les
mov
cwtl
pop
adc
push
xchg
lods
dec
mov
js
rdtsc
jae
lea
mov
insl
cmp
jg
mov
jae
push
ret
fxch
jo
sub
cmpsl
in
xchg
mov
loope
int
cmpb
inc
push
mov
fisubrl
jne
push
push
xchg
loop
iret
pop
out
pop
sbb
pusha
add
pop
pop
movsl
stos
sbb
aad
and
dec
mov
xchg
lret
xor
sbb
popf
das
arpl
push
shr
fisubrs
sbb
xchg
or
in
repnz
cwtl
iret
xchg
outsl
mull
fmuls
stos
cmp
pop
push
xchg
test
js
out
mov
icebp
push
mov
lds
mov
mov
jg
lret
jmp
cltd
lods
add
push
mov
sbb
xor
add
cmp
xchg
ljmp
cmpsl
cli
push
adc
push
dec
jmp
xor
daa
mov
dec
ds
xor
rcrl
addr16
std
pop
daa
test
fstpt
inc
outsl
sbb
mov
pop
fcomps
lahf
aas
inc
into
sti
mov
inc
push
sarl
inc
outsl
sbbb
jne
sub
push
mov
pop
add
sub
xor
or
cltd
jecxz
ja
or
mov
cwtl
push
dec
inc
scas
push
fs
pop
scas
sbb
and
mov
add
xor
jb
pop
into
ja
test
pop
jge
xchg
out
pop
jae
add
add
leave
lods
addr16
pandn
jno
dec
cwtl
push
jmp
je
lock
popf
mov
mov
push
push
pop
in
sub
xor
pop
std
ds
fmull
xor
mov
xchg
adc
sbb
sbb
ljmp
clc
mov
mov
sub
outsb
cmc
jbe,pn
pop
jns
add
pop
fistpll
xor
icebp
mov
pop
sbb
test
jo
fistpll
insl
aaa
push
jge
adc
enter
inc
push
dec
jns
loopne
add
mov
xchg
std
xchg
mov
and
sub
add
pop
xchg
addl
imul
cmpsl
mov
xor
add
or
movsl
mov
pop
mov
xchg
fists
mov
mov
shll
push
or
push
sub
jne
cld
jae
cmpsl
and
inc
xorb
jge
mov
mov
jns
pop
xor
jae
sub
mov
push
leave
aaa
push
cmc
mov
and
fadd
jae
jno
sub
pop
sbb
pop
scas
gs
mov
stc
outsl
jnp
add
push
adc
ja
mov
das
cmp
insb
cltd
xchg
dec
int
fs
sbb
push
pop
sub
das
inc
js
mov
mov
push
test
enter
es
scas
xchg
add
sbb
pusha
cmp
push
or
add
das
gs
nop
fadd
add
sbb
adc
add
not
push
push
mov
popf
lds
jge
xchg
cmpsb
es
pop
and
cmp
jp
jle
xor
cmovle
jp
decl
sub
mov
and
or
mov
or
jmp
push
or
mov
xchg
arpl
mov
cli
mov
fwait
add
mov
shrb
ffreep
add
std
lods
inc
jo
dec
loope
add
dec
dec
sahf
mov
cld
sub
add
fstps
sbb
lcall
insb
ja
hlt
inc
jmp
xchg
cmc
cli
ret
xor
sbb
scas
clc
ror
ds
sub
mov
or
shlb
and
insl
push
mov
adc
call
mov
xchg
cltd
or
mov
dec
sub
in
and
jnp
sti
mov
mov
insb
ret
aaa
mov
andb
add
stc
xchg
push
cmc
repz
lahf
inc
into
stc
sbb
push
jg
xlat
lea
mov
sti
xchg
and
jb
loope
pop
xor
data16
push
arpl
cmp
faddl
cvtdq2ps
out
pop
out
cmp
cmpl
push
inc
mov
dec
sbb
ret
loop
mov
adc
jno
jns
mov
repz
addr16
test
push
pusha
push
or
mov
inc
jecxz
sbb
lock
pop
mov
cs
mov
mov
inc
out
xchg
xchg
imul
dec
test
push
pop
lods
mov
movsl
inc
push
imul
orb
mov
jbe
loope
adc
mov
popf
add
cmpb
cmp
push
inc
push
pushf
jg
mov
jae
add
icebp
xor
xchg
dec
shll
popa
pushf
outsb
fmul
or
xchg
lcall
sarl
test
mov
aaa
pop
ret
pop
push
bound
jmp
sti
and
fsts
jb
les
and
cld
push
mov
lcall
xchg
pop
pop
imul
mov
mov
fisubl
inc
add
mov
js
rclb
data16
ret
xchg
inc
jnp
xchg
pop
jb
push
jecxz
lcall
lret
jl
mov
dec
adc
mov
lods
fmull
pop
push
sub
dec
mov
or
add
lea
sbb
push
mov
add
ljmp
stos
adc
test
insb
add
adc
lea
lcall
or
xchg
cmc
cmp
popa
sahf
or
aas
cld
cmp
inc
mov
inc
mov
insb
mov
arpl
mov
test
mov
cmp
sbb
add
insl
inc
in
pushf
cmp
and
sbb
test
iret
add
lds
mov
shlb
insl
jb
xor
pushl
pop
leave
es
cmp
dec
repz
cmp
je
jmp
add
ja
movsl
xchg
mov
arpl
fwait
je
mov
jp
xchg
sbb
and
bound
mov
cmp
jo
js
lcall
cmp
lea
add
push
and
dec
sti
push
adc
jbe
stos
cmp
jbe
scas
pop
pop
icebp
sub
int3
in
dec
pop
inc
push
dec
test
or
int
jae
push
inc
inc
cmp
popa
dec
lea
mov
sti
and
mov
popf
loopne
ljmp
jbe
push
pop
mov
aas
inc
imul
fildl
xchg
imul
sbb
outsb
icebp
fwait
mov
adc
out
nop
jg
int
add
push
jne
jns
das
sub
test
addr16
and
or
sbb
adc
gs
sar
movsl
iret
xor
push
xchg
in
sbb
ds
data16
ficompl
ror
adc
lea
push
fnstsw
pop
add
aad
loop
loop
cltd
fstpl
test
pop
fucomip
cmp
mov
and
dec
mov
push
jp
outsb
adc
stos
dec
popf
xchg
shl
cmpsb
pusha
dec
push
push
lahf
dec
xchg
mov
xor
sub
mov
ret
ret
test
and
dec
adc
inc
push
xchg
call
lods
data16
push
mov
jno
pop
shll
mov
orl
jge
aam
lods
fwait
jae
pop
add
push
mov
movsb
popa
mov
data16
push
inc
xlat
inc
push
int3
pushf
inc
outsl
lock
mov
pop
push
add
mov
mov
cmp
jo
mov
sub
in
pop
sub
or
mov
leave
je
addr16
pop
jmp
xchg
push
xorb
pop
mov
movsl
push
mov
iret
xor
nop
and
out
sbb
sub
jbe
mov
inc
fisubrs
dec
in
push
adc
sbbb
xor
jmp
out
popf
add
lock
cmp
stos
jne
jbe
dec
jne
xor
clc
pop
stos
into
addb
adc
mov
sbb
jl
out
xchg
mov
insl
in
ss
jecxz
dec
push
aaa
loope
pusha
cli
les
xlat
out
or
adc
test
add
jle
test
cmp
cmp
adc
fisubs
and
lahf
xchg
lods
adc
lret
jae
and
stos
pop
cwtl
sub
sub
aad
and
pop
mov
ja
mov
out
jp
add
lds
adc
cmp
sub
xor
dec
fisttpll
xchg
das
cmp
aad
lret
loope
push
faddl
fcomip
ja
xor
or
dec
jnp
adc
mov
ljmp
daa
aaa
sub
lahf
xor
aaa
addr16
arpl
lea
jmp
test
dec
in
je
fwait
lret
shrb
outsl
push
ja
andb
test
aad
hlt
divb
jle
cld
cli
test
mov
and
enter
ds
lods
mov
and
and
lods
fisubrs
cli
test
mov
ljmp
pop
lds
cli
mov
inc
lret
sahf
rorb
dec
xor
add
bound
das
xchg
sbb
in
dec
rolb
pop
rcr
add
into
and
aaa
mov
mov
test
jbe
add
shlb
sbb
xor
nop
inc
mov
hlt
sahf
lret
push
aam
test
in
jge
div
mov
je
or
addl
push
cmp
in
mov
in
repz
or
jae
movsb
dec
fistl
jae
inc
iret
sbb
cmp
into
adc
lret
in
pop
shll
push
sbb
test
xor
dec
xor
mov
loopne
test
jmp
mov
pop
inc
ja
test
iret
scas
movsb
and
pop
sbb
ljmp
pop
cwtl
mov
outsl
out
outsb
inc
mov
sbb
addb
out
jle
aam
std
xor
pop
les
and
std
adc
jb
out
jge
lret
ja
mov
push
repnz
xchg
movsb
pop
fstpl
notb
filds
frstor
sbb
sbb
daa
mov
mov
shrl
mov
imul
fwait
out
les
pop
jle
xor
outsb
mov
push
and
push
push
adc
lods
add
xor
std
cmp
mov
insl
adc
dec
rol
aas
roll
mov
jp
xchg
sub
repnz
pop
fsubrp
in
das
pop
push
ja
adc
pop
sbb
lock
push
sub
cmpsb
adc
pusha
push
mov
dec
mov
push
add
mov
jns
jbe
xchg
into
pop
insb
xlat
mov
ret
lahf
pop
in
shlb
mov
ret
sarl
leave
arpl
enter
inc
fdivp
fucomi
fnstcw
adc
pshufw
inc
inc
daa
dec
jp
add
inc
je
push
cmp
jne
xchg
lods
lea
cli
jns
aas
mov
adc
popf
sarb
das
adc
ror
xchg
or
add
mov
mov
or
pop
or
jmp
add
cmp
aaa
adc
sub
fdivp
cmp
bound
jle
bswap
cmpsb
out
test
pop
dec
adcb
jl
aas
aas
lods
mov
add
jns
inc
dec
mov
das
ret
cmp
lahf
cmc
repz
inc
cmpsb
xchg
scas
je
dec
jl
fisttpl
pusha
cmp
inc
adc
into
jbe
das
add
add
pop
movsb
pop
call
nop
ja
sti
cmpsb
fisttpl
fld
xchg
pushf
xor
xorb
popf
cwtl
mov
ds
dec
mov
cmpsb
sub
and
idivb
addb
mov
jo
mov
cld
push
cli
outsl
mov
sbb
fisubl
xor
push
fs
jne
test
jg
cwtl
aaa
icebp
mov
loope
mov
jb
mov
lea
and
lock
lret
or
xor
xchg
fiadds
lods
push
pop
sub
xor
xchg
pop
std
or
or
jo
push
lods
cltd
test
out
sti
jb
bound
clc
enter
or
mov
loop
add
jmp
popf
pop
dec
leave
add
xchg
sti
cmp
pusha
push
jmp
lods
cmp
sub
and
pop
jmp
pop
dec
mov
cltd
pop
jle
loop
test
adc
and
imul
sbb
or
lret
fistl
inc
mov
xchg
fiaddl
scas
and
leave
gs
jnp
test
insl
out
add
sbb
sar
subb
notb
lret
adc
pop
insl
mov
dec
pop
inc
inc
or
or
xchg
jne
xor
js
sahf
int3
sbb
sbb
adc
repnz
lret
dec
mov
es
xor
mov
cli
testl
inc
ror
sbb
addr16
and
cli
test
jp
rorl
adc
jmp
mov
movsl
decl
mov
push
add
lock
loopne
lea
adc
cmc
inc
and
cmp
and
sbb
mov
jo
sub
test
insl
lret
pop
pop
movl
cmp
aad
dec
or
sbb
sbb
and
pop
sbbb
outsb
or
out
inc
dec
adc
cmpsb
nop
out
mov
and
jno
lods
stos
iret
sbb
inc
mov
lret
add
push
push
pop
shll
pop
mov
daa
mov
cwtl
out
push
jmp
shl
xchg
cwtl
pop
das
test
pushf
mov
arpl
int3
ss
add
jle
xchg
pop
loopne
mov
inc
pusha
mov
xor
out
aaa
xchg
repz
into
mov
stos
out
rorb
pop
pushf
fidivrs
jns
xchg
or
js
ret
addr16
adc
fstl
xchg
aam
ds
cmp
movsl
sub
jp
adc
xchg
stos
lcall
sub
mov
cmc
into
rclb
xor
gs
out
xchg
scas
clc
jp
cmpsl
pop
pusha
dec
mov
testl
hlt
clts
es
fisttpl
sub
inc
mov
cmp
imul
imul
mov
call
mov
imul
mov
subl
addr16
shll
cmp
cmp
xchg
dec
inc
inc
add
loope
adc
sub
je
dec
sti
fwait
addb
or
mov
jle
aas
cmp
or
fdivs
loope
sub
push
xchg
xchg
sahf
add
mov
aad
sbb
enter
outsl
loop
mov
test
push
out
clc
daa
sub
fdivs
daa
lret
jnp
stc
sbb
add
lods
ss
lret
les
data16
enter
mov
dec
fistpl
ret
and
add
pop
data16
inc
insl
fstpl
xchg
xor
cmpsb
sub
fcmovb
jl
or
dec
sbb
out
es
or
mov
dec
std
imul
mov
scas
aam
xlat
iret
push
mov
pusha
xchg
ja
pusha
jae
mov
lods
xchg
mov
dec
pop
mov
sub
aaa
test
cmc
hlt
dec
sbb
and
pusha
xor
cmp
jecxz
mov
dec
or
out
mov
mov
push
imull
cmp
inc
testl
push
cmp
sub
cwtl
push
mov
cmp
sub
xor
sub
outsl
adc
ja
aad
lcall
cld
sahf
cld
iret
icebp
jae
jnp
inc
mov
std
jmp
inc
or
bound
inc
xchg
push
xchg
pop
pop
lods
xor
mov
push
pop
inc
daa
jnp
jno
cvtps2pi
push
inc
icebp
bound
stc
sub
jmp
push
sbb
cmp
test
push
rcrb
cmp
cmp
jp
or
insb
rorb
adc
scas
mov
sbb
roll
and
pop
jge
gs
mov
push
and
js
sahf
aaa
mov
into
jne
rclb
mov
xor
loopne
pushf
cltd
dec
sti
cmc
pop
dec
mov
xchg
nop
dec
dec
xchg
inc
fnsave
adc
pop
inc
push
imul
das
test
fcos
inc
iret
lods
inc
leave
test
jp
mov
out
jmp
push
leave
mov
mov
push
popa
stos
sub
lret
mov
sahf
filds
jno
lds
stc
aas
mov
or
mov
dec
out
daa
mov
push
push
int
and
shr
or
or
mov
lcall
mov
repz
push
jmp
sub
pop
push
pop
push
icebp
bnd
testl
int3
ja
dec
push
lcall
addb
outsl
mov
xor
sbb
add
xchg
int
cld
int
sbb
mov
mov
in
mov
xorl
fidivs
sub
outsl
lock
cmp
data16
pop
adc
mov
stos
cmpsb
imul
es
dec
ss
cwtl
adc
mov
orb
pop
cld
aad
jg
icebp
ss
testb
push
or
jno
call
in
cmp
sub
push
xchg
testl
xor
das
inc
das
enter
sub
mov
add
cli
mov
or
push
mov
fsubrp
popf
inc
mov
jp
jne
dec
hlt
mov
shlb
sarb
xchg
repz
scas
rolb
arpl
inc
loope
cwtl
fcomps
jae
inc
and
fisubs
adc
shll
pop
std
icebp
lds
sti
and
add
pop
or
or
negb
js
popa
stos
inc
add
and
popa
pop
jae
xchg
inc
cmpsb
fcmovnu
and
pop
fisttpl
xchg
loopne
cs
xor
mov
leave
ret
sub
jo
push
movsb
in
inc
sub
into
pop
dec
sbb
jecxz
test
lock
add
jb
clc
neg
in
test
pop
sub
ljmp
push
sahf
or
and
fidivs
inc
int
mov
and
scas
hlt
leave
repnz
es
imul
cltd
push
test
xchg
int3
ror
cmpsb
out
cmp
or
jmp
test
aad
cmpl
jne
jp
push
and
sarb
push
daa
jle
mov
lock
call
inc
mov
mov
dec
dec
lret
lret
mov
pop
or
pop
sub
lods
mov
lcall
flds
ljmp
xor
or
loopne
insb
cmp
jecxz
ss
fadds
fsubl
xor
ljmp
mov
push
xor
scas
icebp
loope
mov
xchg
divl
jb
clc
push
jnp
adc
adc
out
int
and
dec
xchg
out
mov
rorb
mov
in
js
loop
int3
popf
cmpsl
pop
and
dec
popf
push
push
xchg
shrb
je
mov
iret
fs
dec
clc
adc
fcoms
sub
push
pop
push
in
rcrl
aaa
inc
in
dec
jg
fildll
cmpsb
add
mov
sbb
inc
mov
iret
cmp
lock
test
xchg
inc
loope
mov
test
lahf
pop
test
pushf
icebp
xchg
mov
mov
daa
imul
pushf
mov
push
pop
sub
addr16
aas
repz
insl
pusha
sahf
rorl
lods
jae
cli
jg
scas
or
aam
push
out
fistpll
pop
jne
xchg
js
mov
inc
sti
frstor
jo
push
lds
push
lret
xor
dec
or
inc
rclb
lods
mov
pop
std
nop
and
lods
pop
xor
cwtl
fbstp
inc
sti
shl
inc
shlb
pop
jge
inc
sbb
es
jl
jne
hlt
popf
or
mov
mov
out
sbb
add
jne
xor
jns
pop
scas
push
cmp
xchg
sbbb
popa
jnp
push
addr16
cmc
xchg
mov
rclb
cmc
pop
rcrb
lcall
daa
aaa
push
fs
add
jp
mov
add
dec
pop
inc
loop
xor
inc
mov
in
mov
js
or
movsl
and
enter
cld
xchg
aam
mov
push
sahf
mov
out
inc
das
or
pop
jbe
and
xchg
jl
fnsave
out
push
data16
inc
in
lds
xlat
pop
in
ds
mov
push
add
jl
fbstp
outsb
inc
jl
push
sub
jbe
mov
xchg
in
je
lds
push
mov
jge
xchg
insl
mov
or
mov
or
sti
jo
test
jb
pop
sub
lods
mov
ret
mov
pop
mov
mov
mov
add
scas
and
nop
sub
imul
fisttpll
jo
mov
jne
push
out
and
in
stos
movsb
lret
scas
push
cwtl
mulb
jbe
mov
and
cmp
sub
ss
subb
sub
addr16
shlb
imul
dec
je
sub
add
jge
mov
and
sbb
test
or
repnz
adc
addr16
ret
popf
loope
ret
cld
or
in
aam
mov
adc
outsb
cmp
jnp
add
stos
xlat
jnp
add
sarl
sub
das
mov
adc
inc
jge
icebp
mov
lock
push
cwtl
jg
clc
jo
stos
fcoms
jo
xor
pop
mov
rolb
inc
fiadds
xor
xor
mov
mov
mov
sub
push
push
lcall
push
mov
dec
lock
std
fcoml
mov
es
clc
js
xchg
and
js
mov
in
xchg
add
inc
shlb
incl
ret
bound
out
xchg
roll
leave
xor
aas
ja
cmpsb
iret
psubsw
aam
sbb
pop
add
mov
jl
dec
mov
xchg
mov
movsl
insb
jbe
aad
add
int3
sbb
imul
imul
xchg
sbb
lds
and
and
shll
vphaddwq
ljmp
jae
not
pop
pop
xchg
arpl
dec
cs
adc
adc
dec
jae
cmp
sahf
cmpsl
mov
mov
mov
or
inc
mov
xchg
mov
jle
xchg
dec
mov
inc
sub
and
es
fs
vpsadbw
int3
lds
arpl
les
xchg
insb
inc
mov
cli
push
jae
lret
push
aaa
xchg
fists
adc
shrl
pushf
cmp
subb
adc
xchg
pop
dec
call
inc
cltd
dec
xchg
sbb
sub
inc
std
or
or
xor
ret
push
les
pusha
cmp
stc
or
xchg
pop
shl
and
sbb
add
idivl
push
xchg
jnp
bound
xlat
xchg
test
data16
movsb
lock
xchg
in
bound
sub
ds
xchg
dec
pop
sub
shlb
lods
dec
sub
xchg
test
or
sub
fbld
mov
ffreep
add
lods
int3
roll
and
jecxz
pop
popa
dec
mov
les
cld
out
or
ja
hlt
aam
jp
adc
fsubp
aaa
jno
sahf
rcrb
in
push
aad
movsl
notb
add
pop
pop
mov
xor
jno
pop
fisubl
and
or
dec
mov
movsb
lea
aaa
pop
ret
lea
js
jl
xchg
cli
ret
and
test
pop
out
cli
push
jmp
push
hlt
xchg
mov
lock
mov
addr16
jb
dec
in
cltd
cmpsl
mov
mov
mov
aas
out
out
insl
adc
dec
lret
dec
out
adc
cmpsl
mov
stc
adc
mov
lret
or
mov
dec
inc
mov
loopne
dec
cmp
icebp
jl
jmp
mov
xchg
mov
add
out
mov
sbb
iret
or
push
roll
fnstcw
mov
gs
lret
mov
in
cmp
sahf
imul
mov
dec
adc
and
out
cld
dec
adc
xchg
mov
jno
mov
push
test
ss
pop
ljmp
push
pop
inc
clc
jb
arpl
push
push
test
mov
xor
mov
mov
mov
rorb
push
repz
mov
scas
dec
pop
or
aad
leave
and
mov
or
pushf
cmpsb
xchg
sub
and
cmp
xchg
leave
test
mov
mov
movsb
sub
mov
sbb
push
add
pop
sbb
jnp
addl
insl
push
pop
ljmp
mov
movsl
repz
rolb
dec
test
pop
inc
sub
jecxz
addr16
pop
fbld
and
cmp
insl
pop
pop
pop
testl
adc
dec
push
dec
mov
loope
jb
outsl
icebp
leave
ret
jae
jbe
ds
bound
mov
cltd
push
in
orb
pop
sub
mov
rcll
lods
addr16
andl
fs
xor
sub
enter
cmpsb
or
addb
ja
ss
mov
sbb
in
and
fnstsw
jb
dec
mov
jae
fmul
test
std
xchg
jecxz
mov
dec
frstor
aad
imul
imul
and
insb
sarl
or
ffreep
adc
ja
mov
fcomip
xor
sub
insb
movsl
cmpsb
and
inc
mov
in
push
push
xor
rcr
mov
subb
jno
imul
mov
add
mov
and
fs
jo
ljmp
xchg
fisttpll
xchg
std
inc
fimull
int3
mov
cltd
lods
loopne,pt
push
adcb
into
mov
or
pushf
jo
lcall
fstl
sbb
jns
out
inc
adc
pop
pop
xchg
popa
cmp
mul
das
mov
test
add
ja
mov
cmp
addr16
jge
cmpsl
push
mov
xchg
ret
gs
out
push
and
push
in
mov
jae
pop
adc
and
xor
jne
dec
push
iret
or
movsl
jp
cmc
and
pop
push
fdivr
push
cmp
das
lret
or
arpl
xchg
mov
add
ret
fldl
das
cmpsb
pop
sbb
cmp
cmp
push
sbb
imul
xlat
mov
jle
pop
lds
jmp
test
xlat
mov
arpl
mov
outsl
xor
xor
mov
imul
lods
sub
enter
imul
fldt
sub
pop
cmc
sub
sub
cwtl
mov
je
sbb
jp
push
mov
pop
mov
std
mov
movsl
mov
shll
pop
out
arpl
cmpsl
movsl
dec
mov
sbb
arpl
loope
pusha
push
movsl
sub
mov
cld
test
gs
sti
insl
call
scas
sbb
pusha
bound
inc
and
mov
mov
addr16
rolb
dec
sbb
cmp
jnp
jne
sub
sbb
mov
xchg
mov
andb
dec
imul
mov
inc
in
cmpsb
pop
lea
mov
sbb
add
and
dec
orb
jbe
or
xchg
clc
orb
mov
addr16
pop
shlb
mov
insl
aas
fs
inc
mov
xor
dec
cmp
or
gs
lcall
or
leave
test
test
inc
dec
lods
idivb
sub
sarb
or
xchg
sbb
ds
sbbl
jae
into
aam
push
push
xchg
mov
rorl
stos
sbb
add
ss
add
push
jg
nop
aas
dec
mov
mov
mov
arpl
sbb
mov
sar
sub
pop
mov
sub
jg
neg
jns
ret
jmp
loopne
sub
lret
les
adc
push
std
mov
sbbb
dec
mov
inc
pop
cmp
mov
and
repnz
lgs
sbb
fwait
mov
je
pop
roll
leave
dec
add
pop
sub
or
push
clc
push
dec
xchg
push
jo
mov
xchg
jge
sti
xchg
xchg
push
fwait
mov
rclb
jl
rcll
xchg
icebp
lret
and
sbb
test
add
enter
mov
pop
fwait
sub
jecxz
jmp
scas
movsl
stos
add
or
mov
push
dec
xchg
xor
ds
int3
inc
ret
xchg
pop
ret
loope
lock
pop
cmpsl
inc
xchg
in
out
int
movsl
dec
pop
add
mov
pop
les
fs
jle
sub
pop
ljmp
jecxz
mov
or
enter
jle
sarb
int3
stc
in
jecxz
inc
pop
cld
movl
fninit
in
jne
xor
xlat
xchg
lret
xor
or
jno
ret
push
adc
hlt
and
loope
add
dec
repz
sbb
fldl
mov
or
pop
cmp
adc
cmp
and
mov
cmpsl
and
push
xchg
out
orl
aam
or
push
xor
xor
inc
mov
cltd
dec
fsubrl
gs
xor
ret
out
movsl
mov
sbb
or
cmc
popa
imul
jne
arpl
ss
or
add
dec
lods
mov
jle
dec
cs
das
push
sbb
mov
ret
call
push
and
inc
pop
sbb
pop
jne
mov
push
pop
test
fistpll
or
adc
cltd
fdivr
je
ret
mov
jmp
daa
inc
movsb
lret
dec
add
mov
cld
fidivs
jle
inc
fdivrs
mov
lcall
dec
push
dec
cmp
fwait
sahf
sub
jl
mov
sahf
adc
mov
inc
push
loopne
imul
dec
push
sub
shlb
loop
cld
fyl2xp1
push
cmc
fisubrl
in
mov
sti
pop
or
decl
jbe
outsb
pop
int3
push
popa
cmc
repnz
ljmp
sbb
fld
fs
xor
movntps
inc
test
sbb
sub
push
mov
scas
push
jmp
adc
adcl
pushf
adc
add
incb
out
je
lret
inc
loope
scas
add
dec
je
fwait
out
sbb
mov
pop
es
sub
adc
ja
cmp
repnz
pop
pop
adc
les
rcrb
cld
xor
or
add
cmpsl
addb
push
xchg
mov
pop
movsl
shlb
mov
add
xor
adc
out
jns
mov
add
xchg
mov
xchg
jbe
jnp
iret
or
pop
pop
mov
icebp
test
or
pop
insb
stos
enter
popf
in
jl
mov
mov
xchg
fistpll
mov
into
and
out
cli
jb
jp
mov
adc
ret
in
adc
hlt
mov
jle
in
fisubs
int
movsl
les
cmovb
out
dec
in
sbb
stos
or
mov
jo
popf
gs
sbb
test
test
push
jmp
es
test
inc
mov
pop
and
inc
dec
les
jge
popf
and
sbb
mov
dec
jbe
mov
cld
jae
dec
jae
cwtl
lock
stc
fiaddl
mov
sbb
adc
mov
ljmp
or
fildll
scas
aam
jle
or
sub
xchg
xorl
xchg
loopne
add
jno
inc
pusha
xchg
jbe
cmpsl
inc
fsubl
cld
pop
js
or
jns
jno
push
lret
push
mov
or
xor
fisttpl
stos
mov
mov
out
xor
js
cmovl
loop
sub
cwtl
fiadds
sub
inc
mov
insb
jg
test
cmpsl
push
dec
or
out
jle
iret
fwait
push
jl
mov
lds
aas
add
push
add
hlt
fdivrl
loope
dec
dec
sbb
in
repnz
xchg
jl
mov
in
addr16
inc
lods
mov
movsl
jns
mov
addl
lock
push
aaa
mov
lock
xorb
xor
jmp
ja
inc
add
mov
mov
mov
jle
xchg
and
push
jne
cmp
out
lcall
pop
or
in
and
mov
cltd
inc
cmpsb
push
push
and
add
sbb
push
sub
daa
sub
xchg
loopne
inc
sub
xchg
push
cltd
adc
scas
mov
js
fs
pop
leave
or
dec
call
popa
pop
lods
mov
pop
lock
ficompl
mov
adc
and
sub
fwait
push
inc
ja
stos
jnp
mov
cmpsl
scas
scas
outsl
xor
loopne
or
sarb
in
outsl
in
fcoms
fucomi
fstpl
insl
out
dec
mov
sti
arpl
fwait
hlt
imul
add
push
aad
dec
sti
add
xchg
insl
wbinvd
data16
add
das
cld
mov
adc
lea
nop
ret
lret
out
std
shll
inc
sub
jns
stos
jae
ljmp
xor
xor
ret
cltd
sarb
pop
imul
xor
inc
popa
xchg
pushf
mov
rorb
mov
push
bound
lret
shr
or
imull
pop
sbb
push
stc
pop
inc
cli
mov
mov
mov
call
push
cmpsl
xchg
mov
jnp
daa
sub
mov
insl
sbbl
stos
aad
dec
repz
xchg
cltd
xlat
and
sbb
inc
les
xchg
lcall
xchg
stc
jg
pop
mov
sbb
or
decl
inc
cltd
mov
dec
mov
cmp
fcompl
imul
fsubs
movsw
and
leave
sub
pushf
jp
xchg
leave
sbb
pusha
je
mov
or
jo
jle
sbb
jmp
ret
aas
lds
movsb
aam
fisubrs
jle
mov
clc
inc
testl
daa
insb
push
mov
lcall
fists
sub
aad
xor
push
mov
mov
mov
je
mov
loopne
jnp
mov
or
xor
xchg
lods
test
shrl
loop
sbb
cmp
mov
add
adc
push
aaa
mov
adc
push
dec
push
popf
subl
insb
mov
mov
sti
xchg
jp
loope
loope
mov
push
xor
push
jmp
or
fmull
lods
xchg
or
lods
in
or
push
adc
in
push
sbb
leave
lret
push
test
xor
mov
fisubl
inc
pop
jle
xlat
iret
mov
sbb
dec
out
and
int
xor
mov
push
cmp
std
or
jmp
pop
and
xor
jl
lock
or
imul
aas
loop
lahf
mov
or
xor
aad
cli
mov
gs
jne
pop
adcb
mov
xlat
jne
test
mov
fld
fcmovbe
scas
iret
pop
jmp
mov
inc
push
leave
in
push
pop
pop
add
xchg
push
fldt
sarl
mov
into
test
and
inc
or
and
shlb
mov
and
and
jae
icebp
sbb
pop
or
je
jge
js
fldt
push
jno
xor
jg
or
das
shrb
and
repnz
addl
imul
lahf
es
ljmp
mov
and
inc
sub
add
adc
subb
lds
in
nop
jb
clc
push
xchg
sub
xor
in
xor
fadd
dec
sahf
cmp
mov
testl
jns
push
jp
arpl
mov
sbb
icebp
sub
and
pop
pop
mov
leave
xchg
cmp
xor
push
loop
fmuls
ror
fdivrp
js
dec
stos
push
repnz
add
lds
leave
ljmp
adc
aaa
and
cli
hlt
test
push
pop
cmp
pop
mov
adc
rorl
xor
and
loope
mov
lods
pop
iret
pop
mov
sbb
sub
icebp
mov
cmp
cmp
leave
push
sbb
fucomi
inc
inc
mov
xchg
into
and
or
cmp
and
xor
icebp
sbb
rorl
xchg
sub
jmp
xchg
sbb
lock
loope
cmpsb
mov
jno
mov
inc
jnp
popf
shll
ret
je
dec
or
adc
subl
or
ret
pop
add
jge
js
or
rcrl
xchg
scas
dec
mov
fs
mov
pop
or
pop
nop
in
cwtl
rol
xchg
dec
cmc
jecxz
sub
push
in
mov
sub
scas
cltd
dec
cmp
test
popl
sub
rorl
shlb
push
test
pop
pop
mov
and
mov
lock
mov
arpl
pop
and
sbb
cmp
and
cmc
pop
pop
fwait
hlt
dec
dec
pop
sti
aas
mov
test
cmpb
xor
jge
aad
mov
adc
mov
push
decb
adc
mov
sub
mov
lcall
lahf
mov
jno
dec
push
pop
fistpl
repz
mov
mov
inc
pusha
test
imul
loopne
push
int
xchg
jne
and
mov
or
inc
add
pop
shlb
int3
mov
mov
arpl
notl
and
jb
cli
add
stos
imul
dec
ret
leave
xchg
push
lods
in
mov
scas
add
push
mov
cmp
push
xchg
data16
pop
std
js
fwait
inc
or
and
mov
jp
fdivrs
cltd
outsl
out
jne
xor
rclb
pop
and
les
jle
jne
jge
push
in
sub
inc
add
pop
mov
andb
scas
push
xor
jbe
sub
xchg
js
sbb
sbb
sub
pop
inc
xor
xlat
add
inc
mov
pop
and
das
mov
cwtl
sub
xchg
fcomi
or
push
xchg
dec
push
and
push
test
adc
inc
fcmovbe
pop
aaa
sbb
rclb
inc
shl
xchg
leave
or
pop
xor
pop
sub
pusha
and
fisttpl
stos
mov
cmpsl
add
imul
ret
cmp
mov
in
mov
push
sub
push
push
and
fdivl
sbbb
stos
rol
adc
mov
das
cli
outsb
aam
in
jg
mov
sbb
subb
mov
ret
lret
in
mov
pop
cltd
inc
sbb
push
lcall
shrl
inc
ds
mov
lds
dec
push
sub
fwait
push
add
pop
and
fs
sbb
or
pop
cmp
es
inc
popa
jg
ds
rolb
pop
lds
les
enter
push
ljmp
push
jmp
aad
daa
imul
notb
shlb
jno
shll
sub
pushf
in
ud1
insl
daa
jg
lock
cmp
xchg
lds
aam
and
mov
jle
into
or
int3
das
in
es
mov
xchg
lods
orb
out
and
pop
incb
pop
add
adcb
sbb
sbb
insl
fsubl
mov
cmpsl
xlat
andb
int
vmwrite
fdivrs
dec
push
stos
mov
outsl
mov
mov
xor
or
pop
pop
mov
clc
jb
pop
test
push
or
shlb
cmpsb
fldz
pop
shll
mov
push
int
icebp
leave
mov
arpl
inc
push
sub
sub
ja
xor
and
fsubrl
dec
xchg
mov
jo
lods
test
inc
push
xor
out
test
push
es
push
pop
pop
jecxz
or
imull
xchg
mov
jmp
pusha
inc
xor
pop
enter
inc
and
arpl
mov
push
mov
fildl
cmp
fisubl
and
jb
or
cmpsl
push
inc
out
repz
test
dec
xchg
mov
je
fstps
sbb
test
inc
stos
stc
into
push
add
shr
orl
fwait
and
ds
xchg
je
inc
lret
mov
cmp
lahf
lret
das
xchg
popf
mov
mov
xchg
mov
sub
mov
je
push
xor
test
push
js
mov
pop
mov
lahf
xor
and
or
mov
inc
das
xlat
jle
movsb
xorl
es
add
or
adc
or
and
jg
or
mov
cmc
movsb
decb
bound
sti
sub
ljmp
mov
in
push
mov
push
int3
fsub
addr16
es
or
je
xor
outsl
sub
jg
inc
push
js
dec
lea
pop
xor
repz
lock
add
das
movsb
les
test
add
adc
les
pop
sub
aam
ret
cs
xor
jl
sbb
push
add
cmpsl
and
push
and
sar
gs
ja
movsl
xchg
fadds
jle
push
sub
gs
stos
jge
jecxz
sub
sub
aas
int
imulb
and
stc
add
jne
icebp
pop
lahf
mov
scas
mov
rol
mov
sbbl
inc
fisttpll
adc
leave
mov
in
sti
stc
push
xor
push
pshufw
addr16
jo
mov
dec
cwtl
in
xor
fisubl
lret
jle
int3
mov
and
push
xor
pusha
jbe
fcomps
mov
sub
nop
lcall
cmp
ret
mov
test
std
xchg
push
or
push
pop
mov
push
out
cltd
out
loope
mov
nop
add
push
sbb
jg
xor
mov
mov
mov
stos
dec
dec
sub
lret
dec
mov
hlt
ds
stos
dec
push
scas
dec
iret
cld
and
movsb
pop
lea
divb
pop
xchg
js
fmull
ljmp
lret
cmpb
outsl
add
mov
fwait
lock
inc
mov
fisubs
test
dec
adc
add
or
cli
push
mov
adc
mov
sti
je
mov
movsl
popa
push
sti
loope
sub
xchg
sbb
iret
test
mov
ds
scas
lock
subb
std
dec
je
notl
fdivrs
cmc
lcall
push
mov
rorl
or
and
xor
adc
andb
adcb
jmp
lahf
fdivrl
popf
jle
stos
mov
cli
hlt
je
and
push
aam
imul
jg
push
aad
adc
cli
or
int3
cwtl
cltd
mov
sub
cld
out
xor
mov
pop
shlb
jmp
aam
iret
loopne
shl
adc
push
lret
sahf
pop
push
add
or
sbb
cs
fwait
sahf
sbb
popa
clc
test
ret
in
mov
loopne
jecxz
or
sbb
mov
pop
adcb
outsl
cld
or
adc
shrb
test
loopne
adc
imul
leave
push
xchg
ret
xor
stos
imul
jge
fisubs
sarl
mov
jo
ret
aaa
xor
stc
cmp
cmp
xlat
outsb
imul
pop
cld
pop
xchg
sbb
push
shlb
in
test
xchg
xchg
in
dec
xchg
icebp
ret
inc
mov
jp
repnz
fwait
pop
cli
sub
pop
les
movsl
mov
test
ljmp
aaa
push
sti
fiaddl
lahf
cltd
mov
cli
aas
fdivrl
cmp
inc
test
jbe
jae
jg
sarb
and
jns
dec
lcall
pop
in
inc
and
inc
enter
aaa
jbe
jns
sbb
pusha
pop
push
and
sbb
inc
push
pop
mov
sub
ja
and
daa
pop
push
mov
stc
mov
lds
cmpsl
inc
add
test
mov
shr
sbbb
xchg
cmp
dec
adc
xchg
add
jmp
xchg
test
add
test
dec
lods
bound
cld
xchg
mov
in
mov
cmp
and
leave
xor
les
xchg
cwtl
icebp
mov
and
int3
dec
repnz
jne
mov
ss
lcall
lret
xchg
or
add
and
imul
test
imul
pop
cmc
mov
cli
inc
mov
add
dec
pop
in
imul
lods
imul
xchg
mov
xor
outsl
gs
add
repnz
inc
hlt
pminub
aaa
sbb
adc
dec
pop
incl
mov
flds
pop
cmp
jae
out
aad
repz
lods
mov
dec
insl
sar
mov
pop
or
arpl
mov
aas
add
jns
fs
cmc
push
outsl
movsb
xor
mov
rorb
mov
push
xor
insb
xchg
scas
leave
fbld
and
jmp
and
pop
in
clc
jns
add
cmpsl
dec
xchg
mov
adc
dec
xchg
mov
adc
xor
subb
outsl
insl
pop
mov
outsb
jbe
movsl
cmp
pop
ret
inc
ret
lcall
sub
call
cwtl
adc
cli
mov
sahf
test
mov
dec
push
imull
mov
rol
pusha
lcall
mov
push
and
sub
sbb
xchg
jno
sti
and
jbe
jnp
jle
dec
xor
fstpt
or
fildll
add
inc
inc
notl
pop
xor
fnstsw
dec
fdivrs
add
cmp
cmpsb
lahf
cld
fldcw
sahf
dec
sarb
pop
nop
mov
sti
ret
add
call
xor
fldenv
sbb
dec
xor
aam
dec
rol
add
in
idivl
popa
xorb
movsl
aas
mov
mov
ja
repnz
fwait
mov
adc
jge
add
xor
mov
pushl
mov
imul
mov
xchg
fcmovnb
mov
mov
repnz
jo
repnz
mov
and
repnz
pop
pop
push
fwait
mov
jno
lds
in
fsubr
aas
xchg
ja
cmp
jno
inc
push
jmp
gs
ss
sbb
mov
xor
lcall
adc
test
dec
xchg
aad
mov
rep
jno
add
xchg
pop
or
stos
add
nop
pop
adc
lcall
and
mov
aam
or
fmulp
sarl
mov
inc
xor
adc
fnsave
inc
jno
sub
fmull
mov
and
cmp
test
int
jb
xchg
adc
ja
jle
filds
xchg
mov
in
aad
clc
inc
sbb
mull
or
mov
insl
fwait
mov
aaa
or
xor
fwait
jg
dec
xlat
xor
popa
mov
scas
mov
sbb
arpl
xchg
and
flds
pushf
jb
lock
repz
shlb
xchg
mov
nop
clc
addr16
test
jb
sbb
sti
insb
add
push
daa
xchg
clc
sbb
pushf
jg
pushf
add
xor
add
or
out
sti
xchg
push
loop
outsl
loopne
add
addb
cld
push
dec
je
pop
enter
lea
lret
or
jge
ret
xor
aam
adc
jle
out
into
insl
test
cmpsl
jecxz
xchg
jns
cs
roll
mov
add
cltd
stos
je
push
lahf
add
fwait
mov
pop
push
push
or
or
dec
adc
mov
xchg
xor
mov
sub
add
inc
mov
sahf
mov
pop
or
or
sti
mov
sbb
dec
lds
dec
mov
lret
cmp
jmp
cli
dec
icebp
xor
idiv
daa
les
addr16
mov
or
std
ss
pusha
es
pushf
in
aad
push
stos
dec
inc
add
jp
sbb
jo
lret
cli
push
xor
ja
fimuls
mov
add
aas
add
leave
pop
mov
sbb
outsl
dec
outsl
cld
mov
movsl
lret
pushf
mov
jle
cmpsb
push
mov
out
xlat
cmpsb
sub
lahf
adc
push
dec
add
sbb
in
shr
jo
xchg
mov
or
add
sbb
ss
arpl
pop
aas
andl
add
fsts
push
push
in
cmp
shrl
test
shlb
jecxz
xor
daa
inc
pop
hlt
test
loopne
jnp
xor
roll
stos
lea
cmp
mov
hlt
cld
sbb
aaa
or
push
mov
push
adc
ljmp
inc
addr16
or
mov
jns
test
pop
in
sti
arpl
ficompl
loop
ror
fbstp
mov
jno
adc
pop
sti
mov
sbb
ljmp
adc
insb
xchg
and
jmp
sub
test
std
mov
mov
mov
pop
jmp
fisttpl
out
insl
adc
sarl
out
jo
pushf
in
loope
stos
cmp
in
adc
loope
sbb
sub
push
sub
sbb
repz
add
inc
cli
aas
and
pop
sbb
sarb
imul
mov
sub
xchg
xchg
xchg
fwait
cmp
push
test
dec
int
xor
nop
mov
rcll
loopne
push
xor
aam
jns
mov
adc
push
js
into
or
in
add
and
in
scas
or
jl
shll
mov
lahf
stos
sbb
xchg
es
mov
bound
mov
push
out
outsl
fsts
pop
fcomps
cmp
lret
xchg
in
xchg
dec
xchg
out
inc
rclb
xchg
push
push
dec
add
jne
push
xchg
sbb
jnp
sub
cltd
sti
mov
daa
mov
iret
xchg
mov
lret
les
jnp
pop
push
sarl
xor
lcall
sbb
js
mov
inc
icebp
and
lds
mov
xchg
negb
inc
jmp
sarb
int3
or
push
push
outsl
stos
iret
ljmp
xor
movl
rolb
mov
mov
jl
call
mov
add
out
or
out
cmpsl
cld
sub
scas
clc
mov
pop
mov
pop
inc
icebp
leave
repnz
jb
andl
dec
and
pop
loope
xor
and
inc
and
jns
cmc
inc
add
rorl
mov
mov
mov
les
pop
mov
bound
repnz
mov
xchg
mov
sbb
xchg
xchg
push
xchg
sar
add
jae
dec
cmp
xchg
sub
sahf
lcall
add
sbb
sub
enter
add
add
cmpsl
js
jge
lods
xor
lret
stos
push
iret
jno
enter
dec
or
inc
call
pop
out
ljmp
adc
ja
popf
dec
xchg
or
in
jnp
lods
xor
dec
inc
adc
xchg
daa
leave
mov
inc
sbb
and
mov
and
cld
aas
filds
jle
ja
les
in
in
mov
je
fiaddl
and
mov
ja
push
test
adc
xorb
sbb
je
rorl
xor
rclb
bound
mov
repnz
pop
cmp
xorb
fsubl
ficoms
cmp
dec
stos
xor
mov
popf
leave
dec
sub
add
inc
sarb
jne
sub
push
xor
inc
mov
ret
dec
ret
push
push
fs
lret
and
dec
notl
sbb
jae
cmc
pop
cmpsl
sbb
ficoms
in
cs
jbe
in
jecxz
imul
xchg
lret
pop
cmp
pop
inc
sub
in
sbb
inc
mov
into
daa
jp
sub
cmp
dec
pop
fdivr
jnp
cs
popf
dec
hlt
ja
fwait
stc
or
pop
push
xor
cmpsb
orl
scas
cmp
mov
push
add
notl
lcall
jno
mov
sub
inc
lds
lcall
je
jnp
aas
mov
in
into
sub
aam
sub
aad
dec
sub
imul
xchg
mov
sbb
call
mov
addr16
pop
xchg
jl
adc
std
lret
dec
mov
add
or
sub
sbb
decl
dec
add
fildll
xchg
dec
shr
test
adc
pop
iret
shl
sub
addr16
mov
xchg
sub
add
aam
jmp
adc
lds
insb
mov
test
insl
ficomps
js
lcall
mov
aam
test
mov
rorl
std
jno
and
sbb
movsl
add
ret
and
adc
sbb
nop
shrl
jae
sub
rorb
sarb
jb
jnp
aad
daa
mov
and
add
and
add
xor
adc
xor
mov
ret
push
mov
sahf
xor
push
in
cld
jnp
fstpt
mov
fiaddl
and
cltd
enter
ss
xchg
jne
mov
int3
mov
mov
adc
add
aam
xor
jae
imul
repnz
std
lret
sbbl
inc
sbb
jo
fwait
iret
in
dec
mov
push
add
frstor
out
cmp
jnp
sbb
repz
adc
sar
je
repz
push
jbe
and
cmp
dec
inc
lods
out
aaa
subb
mov
inc
lods
inc
std
test
and
jecxz
cmp
or
mov
sub
mov
jb
or
mov
mov
adcb
mov
inc
or
nop
inc
jnp
xchg
push
push
js
imul
test
dec
pop
ret
xchg
jl
fs
and
js
or
push
cmp
cmp
cld
push
mov
daa
lcall
clc
pop
in
jo
lds
rcll
ret
in
aas
sar
mov
cltd
sub
jnp
mov
mov
and
pushl
jge
mov
dec
mov
pop
icebp
dec
sbb
ss
add
mov
push
dec
imul
adc
dec
loopne
mov
cmp
int
dec
das
xor
mov
enter
adc
inc
push
movsl
dec
sbb
and
outsb
and
sub
xchg
cmp
les
fcomi
shlb
cltd
sbbb
inc
mov
jae
push
test
test
in
cmc
sub
xchg
addr16
jno
punpcklwd
push
xor
push
xchg
and
out
mov
popf
mov
inc
pop
add
pop
cltd
add
int
lods
cmp
arpl
inc
divl
mov
shlb
icebp
ja
shrl
push
mov
in
repz
sahf
sbb
or
xchg
gs
and
bswap
test
push
andl
mov
iret
mov
cmp
mov
ja
aam
dec
and
clc
inc
scas
or
xorl
lds
rcrb
mov
out
add
sbb
out
mov
xlat
fisubl
rolb
out
test
jecxz
outsb
or
inc
das
xchg
ss
ja
adc
xlat
push
and
sti
frstor
mov
inc
fisttpl
movlhps
inc
dec
loop
inc
movsl
mov
bound
adc
add
cmp
call
mov
rcll
loop
jb
add
lods
mov
int
inc
push
jbe
int3
xchg
jmp
jmp
mov
adc
roll
or
rcl
sub
sbb
sbb
sbbb
sarb
movsb
jo
sti
pop
jns
cld
loopne
mov
cmp
jo
sar
in
in
nop
ret
call
sarb
mov
jnp
xor
out
out
pop
aad
jle
cwtl
lods
xchg
dec
xlat
incb
push
scas
fisttps
dec
inc
roll
sbb
and
stos
mov
add
sarb
movsl
mov
adc
push
jno
stos
mov
rep
mov
shrl
cmp
sbb
insl
test
mov
test
push
ljmp
aad
test
ret
sbb
mov
stc
pop
fisubl
and
pop
adc
andl
jbe
pop
jecxz
loopne
test
pusha
aam
jnp
or
jo
sub
xchg
mov
movsb
enter
inc
pop
jno
loope
das
and
frstor
mov
mov
cld
xchg
mov
or
ljmp
jne
mov
xchg
push
addps
mov
push
pop
int3
pop
or
jmp
cs
mov
into
cmpsl
jbe
mov
dec
ficompl
cmpsb
or
cli
adc
or
lret
push
sub
leave
xor
addr16
lahf
mov
ds
push
aaa
inc
jl
pop
fsubrs
fstps
and
iret
dec
je
aas
inc
sarb
sti
fsubs
in
clc
xor
shrb
cmpsb
out
jbe
pop
push
ret
mov
aas
inc
dec
into
sbb
das
sub
xor
sub
pusha
stos
push
loopne
add
or
push
mov
test
clc
mov
xchg
pop
rcrb
je
sbb
pop
pop
filds
sar
adc
pop
xchg
lea
insb
sub
mov
adc
jno
push
sahf
mov
pop
std
mov
out
inc
jecxz
add
mov
adc
mov
in
in
data16
and
dec
inc
mov
jno
fstl
and
push
popa
dec
mov
inc
popa
mov
rcr
addb
out
dec
ds
std
xor
push
mov
int3
mul
jp
jbe
and
push
clc
jmp
inc
and
lds
xchg
aam
adc
ds
iret
decl
dec
dec
sub
neg
movsl
int3
push
add
ret
adc
nop
jb
out
push
ja
int
mov
aad
sbb
popf
cli
pop
cmp
pop
cmp
addb
lret
movsb
and
push
fcmovnu
into
mov
mov
sub
lea
lods
xchg
mov
call
out
mov
les
pop
xchg
ja
int3
movsb
insb
or
aam
jl
adc
pop
dec
adc
add
and
or
mov
sbb
push
orl
leave
hlt
sbbl
jb
leave
push
int3
mov
jmp
or
sbb
xchg
shrl
mov
jg
mov
scas
lds
lret
push
std
bound
fs
sbb
push
adc
jle
hlt
scas
pop
mov
adc
testl
movups
les
aam
lcall
popl
pushf
jns
mov
cmp
fdivr
popa
push
repz
xor
xchg
mov
mov
jbe
sub
and
xchg
add
xchg
loop
xchg
fsubrs
nop
jle
insb
mov
xor
jo
xchg
and
push
sbb
ret
mov
mov
aam
mov
stos
insl
shrb
fdivr
aas
movsb
cli
imul
ret
jle
pushl
adc
mov
pushf
int
mov
das
cmp
inc
inc
sarb
rcll
cmp
mov
cmp
lcall
xchg
add
ljmp
popa
sbb
mov
mov
jp
lods
mov
push
lret
lcall
test
js
shl
lcall
aas
pop
pusha
sub
outsl
cmp
cmp
mov
mov
lcall
xor
sub
leave
fcompl
fwait
mull
mov
ja
shll
add
int
in
insb
test
loop
or
repnz
in
fmull
not
sbb
stos
and
push
pop
es
push
cli
test
popf
jecxz
loop
sub
inc
scas
pop
iret
mov
nop
add
mov
sub
into
jne
movsb
fwait
js
push
jns
push
mov
xor
xlat
jns
sub
int3
lods
sbb
adc
fdivr
jb
clc
xor
or
sbb
rorb
or
rorl
or
push
jecxz
and
adc
mov
jmp
rorl
push
mov
mov
loopne
or
icebp
repnz
xorl
sbb
shrl
shl
cmp
mov
mov
inc
inc
aad
cld
xchg
and
in
push
xchg
repz
in
pusha
leave
xchg
insb
fidivs
call
loop
jne
mov
repz
add
dec
cmp
xor
pop
and
add
rclb
dec
daa
sub
mov
xlat
xchg
repnz
jns
inc
xor
mov
lds
bound
das
test
popa
xchg
sub
fwait
in
scas
in
lret
gs
cmpsb
jbe
mov
cmp
mov
push
loop
negl
add
inc
int
mov
repz
jne
adc
fistpll
push
clc
inc
push
jb
cmpsl
roll
cmp
add
xor
adc
es
ljmp
test
int
hlt
lock
xor
dec
jns
xor
adc
ret
dec
inc
jne
ficoms
test
mov
xchg
insl
cmp
xor
mov
xor
rcll
xchg
dec
add
std
mov
je
xchg
inc
jnp
mov
xchg
push
mov
fs
jle
sub
je
mov
sub
aas
enter
dec
sbb
add
ds
pop
fisubs
fsubr
or
push
lret
clc
in
loope
inc
call
cld
jecxz
sar
rorl
addl
xor
pushf
inc
addr16
sub
sub
or
push
mov
sti
dec
mov
or
fistps
mov
ss
push
and
pop
mov
xchg
shll
mov
fs
jo
insl
pop
je
sub
loopne
cmp
mov
aaa
into
ret
push
lods
outsb
lds
sarl
sub
jne
push
popa
adc
cmp
shlb
add
and
ret
mov
loop
out
loopne
sub
inc
adc
mov
cs
adc
jg
dec
out
jno
jge
in
outsb
out
das
pop
test
or
push
lods
mov
mov
xor
mov
int
lea
pop
enter
iret
mov
xchg
int3
mov
add
sub
shr
into
test
sub
out
out
cmc
rcr
ljmp
adc
sbb
jo
cmp
iret
cmpsl
ret
and
lods
shl
and
pop
ds
add
fcompl
add
and
and
test
sub
bound
sub
xchg
push
cwtl
mov
es
push
outsl
gs
pop
test
inc
pop
fwait
or
xor
sahf
popa
mov
xor
gs
mov
sbb
sub
xor
test
push
addr16
in
push
loop
loope
mov
repnz
ret
jno
scas
stos
insl
divb
ret
jmp
pop
out
aaa
mov
fs
insl
pop
push
mov
inc
pusha
jb
insb
jno
cmp
pop
lret
add
sbb
xchg
out
jle
sar
push
jno
fimull
test
jnp
inc
mov
sbb
pop
mov
or
lds
enter
loopne
icebp
xlat
lock
mov
enter
and
cltd
aad
mov
fistl
lea
add
and
or
shlb
mov
sub
lods
in
add
std
add
sbb
test
jae
test
dec
push
xchg
mov
or
repz
scas
daa
xchg
jge
xchg
imul
add
mov
jg
std
stos
hlt
pop
negb
outsl
add
lods
insl
mov
scas
insb
adc
jns
xchg
xor
sub
repnz
push
pop
addr16
into
lds
sub
ljmp
rcr
push
jo
fisttpll
test
mov
arpl
or
sti
cwtl
int3
pop
imulb
jp
in
add
mov
mov
cs
mov
out
sub
cmp
mov
mov
int3
bound
daa
jle
rorl
addl
cmp
cmp
pop
rcl
jne
mov
movsb
inc
dec
mov
rorl
pop
or
loope
cltd
fidivs
mov
dec
ret
inc
in
xor
cmp
mov
sarb
xchg
icebp
bound
and
push
mov
fidivs
sub
sbb
out
mov
and
xchg
sbb
aam
add
das
and
cmp
out
arpl
mov
mov
mov
out
sahf
mov
push
push
cs
lock
adc
pop
dec
mov
in
rorl
sbb
adc
sti
mov
adc
fwait
shrl
and
adc
lret
push
shl
mov
jns
inc
aam
inc
ljmp
adc
sti
push
stos
imull
dec
das
inc
push
mov
bt
pop
in
mov
push
shrb
jne
jno
mov
cwtl
scas
dec
sub
pop
loope
mov
inc
xchg
push
cmp
jmp
fildll
stc
sarl
sub
sbb
mov
or
push
mov
cmp
jae
and
sbb
mov
pop
movsl
insl
jae
addr16
scas
and
aad
aas
subb
pop
mov
testl
mov
add
inc
imul
and
push
jge
dec
je
gs
lods
add
rcr
leave
adc
cmp
sbbb
mov
cmp
sbb
cwtl
fwait
imul
bound
xchg
test
leave
pushf
fidivs
push
jns
imul
inc
jmp
out
nop
sbb
xlat
sub
or
push
ljmp
inc
xchg
dec
and
mov
push
mov
shl
sub
and
sahf
dec
ds
add
sub
loop
mov
mov
or
or
shlb
xor
ret
cmpsb
mov
xor
sub
pop
fwait
int
dec
mov
push
xor
mov
stos
push
test
fwait
mov
inc
lea
imulb
imul
add
daa
ret
hlt
xlat
js
out
imul
xchg
jbe
out
loop
cmpxchg
mov
push
or
xchg
xchg
inc
ror
dec
mov
xchg
decl
dec
jae
incl
adc
gs
xor
push
sub
mov
cmc
adc
cmp
mov
ja
pop
dec
aaa
fsubrs
clc
sahf
add
daa
pop
stc
scas
sub
dec
cmpsl
sbb
jmp
popf
jg
or
sub
js
xor
nop
sub
cmc
shlb
clc
dec
out
and
or
rcll
out
dec
mov
mov
and
movsb
addr16
pop
and
into
insb
int3
mulps
xor
cld
nop
push
xor
imul
enter
inc
cwtl
or
sbb
addb
sbb
xchg
rorb
les
push
xchg
xchg
pushf
lea
loope
jl
jns
add
loope
xor
mov
sub
push
mov
adc
daa
inc
out
nop
or
dec
cmp
xchg
repz
jp
in
int3
stos
cmpb
mov
fcoms
sbb
jb
jmp
add
push
cbtw
mov
sbb
outsl
lret
add
mov
jmp
mov
sub
mov
addr16
loop
mov
inc
push
shlb
pop
or
push
sbbl
mov
add
adcl
xor
loop
push
fiaddl
dec
imul
add
mov
xor
dec
enter
jnp
sub
ret
mov
xlat
stos
sub
ljmp
add
lahf
gs
jo
cmc
in
testb
lods
imul
out
loopne
xor
mov
ljmp
mov
fistl
loop
xor
or
or
cld
sub
jmp
cmpsb
lods
test
jno
pop
pop
cmp
in
cmp
rcr
push
cmp
cs
add
mov
test
sarl
sub
adc
std
adc
mov
sub
movsb
cli
mov
into
mov
aad
inc
mov
add
mov
add
mov
cmp
lock
or
bound
xor
dec
push
fidivs
push
ret
pop
cmpsl
or
in
cmp
lret
jmp
cld
or
sbb
jmp
outsl
je
inc
pop
and
out
adc
mov
jne
dec
popa
add
push
push
sub
test
pushf
xor
cld
mov
inc
fcomp
inc
and
frstpm(287
into
add
sti
pop
mov
pop
or
add
sub
xor
push
add
mov
loope
mov
sbb
jmp
mov
inc
fwait
push
insb
dec
pop
or
jge
shlb
mov
icebp
sahf
dec
into
insb
pop
add
xchg
hlt
sub
les
mov
fcoms
lahf
jl
mov
inc
cld
mov
xchg
test
sub
arpl
push
js
add
cmpl
nop
jl
mov
xor
pop
aam
call
add
push
int3
inc
addr16
dec
mov
bound
adc
rcl
or
nop
js
sub
jp
fwait
push
adc
dec
mov
mov
dec
icebp
or
test
cs
push
adc
cli
sub
arpl
fimuls
add
push
and
fisubrl
mov
mov
xchg
icebp
push
or
sbb
fistl
xlat
movsb
cwtl
jne
ret
inc
mov
or
aam
aad
jg
punpckldq
iret
cmp
push
repnz
dec
cmpb
push
imull
sbb
in
dec
in
pop
arpl
or
sbb
test
lea
xor
cmp
test
xchg
dec
mov
cld
cmp
loope
lock
in
nop
mov
xchg
sub
push
dec
inc
mov
xor
mov
xchg
lock
inc
test
test
fiaddl
add
cmp
cltd
rcrl
jecxz
xor
in
push
xchg
lret
cmpb
push
sub
jb
mov
daa
mov
nop
fstl
adc
in
or
adc
xchg
popf
sub
and
into
xor
cmpsl
sahf
jnp
inc
lahf
xor
mov
insb
mov
rcrl
push
repnz
and
cld
jae
pop
ja
fistpll
js
cli
outsl
jb
mov
cld
jbe
and
rorb
cmp
sub
xchg
es
rep
jmp
rcl
loopne
out
jecxz
mov
movsb
sub
pop
xor
call
cmpsb
movsb
sahf
jb
xchg
das
mov
mov
std
popa
dec
xlat
add
jb
shrb
dec
and
decl
push
dec
cltd
inc
pop
cli
dec
sahf
lret
inc
pop
xlat
cmpsl
sub
iret
hlt
ljmp
pop
stos
xlat
imul
fs
jns
push
les
xchg
movsb
pusha
sahf
repz
mov
incb
cli
mov
sub
in
test
dec
mov
jle
je
test
mov
jno
sbb
sbb
jo
mov
sarb
inc
and
pop
shr
imul
enter
icebp
jne
sbb
xchg
fs
into
cltd
pop
sub
mov
aas
inc
xor
stos
sbb
je
movsl
fidivrl
pop
enter
movsl
not
das
shl
pop
push
push
jmp
and
pushf
inc
fwait
add
add
mov
pop
add
ss
jmp
lods
arpl
dec
xor
bound
jmp
adc
jg
movsl
add
ret
or
xlat
stc
push
push
bound
push
add
aad
dec
leave
mov
pop
cmpsb
and
mov
mul
cmp
das
scas
dec
push
push
lock
jbe
jo
cmp
mov
mov
jns
push
jecxz
cmp
mov
adc
or
lret
lods
xchg
dec
incb
mov
jbe
push
in
xchg
test
test
push
aas
mov
lahf
sbb
jp
pusha
in
rcrb
movsl
gs
xchg
mov
and
xchg
dec
dec
jge
es
negb
mov
hlt
sbb
stc
rcrl
jle
iret
mov
mov
shr
lea
jns
stos
xchg
loope
sub
ret
inc
lds
loopne
sbb
repnz
outsb
xchg
dec
scas
outsb
cmp
mov
cmpsb
clc
inc
test
in
ss
test
stc
push
sbb
fidivs
out
push
sbb
xor
push
int3
scas
ja
into
and
jmp
pushl
push
sbb
scas
fsubrs
int
js
mov
icebp
lret
ljmp
ja
pop
sbb
out
daa
xchg
pop
stc
xor
aaa
insl
adc
sbb
bound
mov
movsl
xchg
or
cmp
dec
lcall
mov
cmp
lock
insl
stos
shll
shl
jmp
cmpl
rcll
xchg
inc
dec
test
or
test
mov
push
je
cltd
loope
sub
xchg
orb
inc
sbb
cmp
cmpsl
xchg
pop
sbb
data16
xchg
rol
pop
xchg
sti
or
pop
inc
pop
lods
jp
jnp
pop
jne
cwtl
inc
dec
stc
hlt
mov
imul
jbe
lods
add
clc
addb
xchg
cwtl
mov
push
lods
mov
add
mov
dec
das
ljmp
das
daa
xor
cs
or
inc
add
xor
sbb
dec
push
arpl
addr16
mov
out
dec
adcl
aad
jmp
jne
jbe
pop
bnd
addr16
and
xchg
fisttpll
aam
xchg
pushf
jmp
int
pop
xlat
fadd
mov
xlat
test
out
mov
insl
and
cmpsl
or
lcall
xor
jmp
fisubrl
mov
idivl
xchg
cmp
fimull
add
mov
inc
rcll
jmp
lcall
pop
lcall
and
iret
and
add
inc
stos
xor
stos
mov
adc
pop
xor
and
push
mov
fstpl
in
mov
scas
jge
ss
outsl
jecxz
inc
push
fst
out
popf
adc
in
mov
xchg
psubb
mov
lahf
idivl
in
cltd
sbb
sub
inc
sti
test
cmp
aas
rcl
mov
decl
ret
and
lods
pop
inc
fs
adc
mov
shrb
and
scas
nop
pop
aad
data16
adc
cmp
cmp
sub
sarl
or
stc
arpl
loopne
or
jae
sub
mov
sarb
sbb
dec
in
shll
out
shlb
stos
inc
mov
lret
lods
je
pop
sbb
inc
sub
or
and
js
jo
outsb
shlb
dec
in
xlat
data16
xor
mov
arpl
jnp
sub
mov
push
loop
lret
pop
add
jp
je
mov
push
xlat
jecxz
outsb
dec
rclb
mov
stos
aad
call
adc
jmp
subb
lods
insb
stc
xchg
jecxz
inc
or
leave
fdiv
pop
push
sub
push
push
add
push
and
or
daa
cmp
fabs
int
xchg
stos
sub
cmpsl
sbb
sbb
mov
inc
add
inc
mov
add
test
mov
pop
std
or
jg
cmp
dec
xchg
mov
sub
aas
int3
lods
push
arpl
rol
dec
fadds
jne
pushf
andl
and
add
sahf
sub
adc
mov
gs
in
jecxz
fucomi
data16
les
jne
addr16
jae
adc
out
dec
jl
test
int
fsts
hlt
fcoml
stos
popa
cmp
stos
fldcw
icebp
std
push
and
sti
inc
daa
lea
mov
push
stos
xlat
cmp
sbb
jno
ficoms
push
push
push
out
movsb
fimull
loopne
xor
mov
jae
add
mov
or
repnz
jns
leave
inc
mov
in
test
out
mov
gs
push
and
mov
push
ja
and
das
dec
jmp
dec
lret
jnp
adc
mov
test
sbb
sbb
mov
hlt
and
and
add
je
in
push
jl
push
pop
rclb
ret
rorb
xchg
cli
jo
adc
aas
outsl
bound
mov
jno
pop
xor
rcl
fbstp
iret
mov
push
dec
loope
sbb
clc
lods
pop
loopne
and
sub
into
movsl
fistpll
sub
lods
and
adc
sbb
mov
imul
sub
pop
lods
bound
mov
call
add
xor
mov
mov
cld
jns
xchg
jp
bound
mov
inc
mov
push
gs
xchg
fnstsw
imul
or
and
ja
std
jg
cmp
dec
int
cltd
mov
cwtl
loopne
jno
sbb
outsb
add
add
push
stos
pop
fs
orb
push
mov
push
dec
push
pushf
jnp
out
dec
mov
stos
pop
lret
jl
in
xor
rol
int3
mov
call
dec
add
fwait
scas
fldenv
cmp
cmp
shr
and
loope
sbb
mov
sub
arpl
pop
pop
arpl
push
rorl
sti
pop
add
out
mov
add
sbb
mov
incl
or
frstor
xchg
and
mov
lock
jge
xor
jnp
fwait
lahf
mov
cs
decl
mov
scas
push
mov
pop
movsb
adc
and
test
push
call
aam
sbb
jne
aad
cmpsl
call
pop
mov
inc
add
lcall
shrl
mov
inc
sbb
call
xchg
leave
in
xlat
jno
ljmp
inc
adc
pop
pop
scas
mov
sub
pop
mov
cmpsl
lret
outsl
stos
adc
pushf
mov
outsl
pop
dec
xchg
clc
insl
xchg
in
ficoml
mov
dec
in
sbb
subl
cwtl
jbe
fiaddl
adc
stc
aaa
cmp
jl
jecxz
popf
pop
int3
pop
jle
mov
hlt
mov
cmc
icebp
jl
ret
repnz
and
bound
rorl
sub
adc
imul
jecxz
int
cmp
dec
sti
dec
jne
dec
cmp
arpl
and
out
aam
xor
in
lret
push
stc
jb
jo
mov
push
sbb
xchg
les
sub
imul
sub
test
sub
imul
lods
push
sbbb
fisttpl
shrl
sbb
mov
fstpl
mov
nop
sub
sub
xchg
pop
mov
fldenv
jg
pop
or
sbb
aas
jno
mov
mov
test
lcall
inc
dec
jmp
xlat
aaa
adc
loope
push
mov
enterw
lret
icebp
or
pop
add
xorb
push
arpl
int
and
jno
ret
imul
movsl
aaa
out
test
push
fistps
arpl
cmp
lea
push
sbb
pop
sub
cli
inc
pop
push
inc
push
jb
adc
sbb
fmuls
or
or
add
fs
xchg
fmuls
xor
pushf
in
popf
xchg
out
mov
nop
test
in
adcl
ja
jns
pop
inc
scas
xor
out
and
rcrl
aam
jbe
push
adc
inc
out
ret
and
dec
cld
add
cwtl
push
adc
inc
test
cltd
cmp
pop
mov
mov
pop
fstpt
adc
test
mov
call
fistpl
push
popa
stos
sbb
aas
pop
push
std
mov
inc
or
aad
fdivl
xor
lds
lret
test
js
or
pop
xor
sbbl
dec
stos
sub
adc
insb
enter
movsb
insb
imul
adc
xchg
lds
jo
jg
and
add
sti
xor
jecxz
hlt
push
or
xor
mov
adc
jbe
je
inc
aam
fnsave
les
xchg
test
pushl
cmp
nop
sub
jns
imul
dec
call
andl
push
bound
shll
pop
push
sbb
push
fdivs
sbb
std
jae
insb
out
xchg
dec
inc
mov
add
xchg
pop
cmp
sbbb
aaa
inc
jo
cmp
out
cmc
rcrb
jnp
mov
loop
mov
daa
lock
and
lock
insb
int
xchg
inc
into
fs
push
sbb
mov
inc
mov
jbe
hlt
jns
push
cmc
outsl
lret
cmpsl
aad
subb
push
jo
mov
fadd
push
mov
into
push
js
inc
jb
add
xor
sub
xchg
pop
sbb
and
mov
inc
mov
arpl
cmpl
mov
sub
out
adcl
adc
jmp
repnz
pop
mov
push
bound
inc
fildll
aam
negb
roll
out
repz
mov
in
out
inc
mov
sbb
fwait
xor
and
int
shrl
int
push
lea
mov
or
lcall
mov
out
sub
popa
lret
pop
inc
das
jge
adc
lahf
mov
mov
jl
push
ss
out
loope
cli
and
and
imul
repz
xchg
pop
inc
and
pop
jno
xchg
pop
or
adc
in
dec
cltd
mov
lahf
cltd
iret
and
movsb
addl
mov
ss
dec
bound
rorb
int
mov
sbb
jns
xor
sub
and
adc
jg
mov
mov
movlhps
out
mov
int
inc
ljmp
pop
pusha
out
dec
shrb
xor
test
push
fdiv
mov
mov
mov
aad
xchg
xor
imul
xchg
or
xchg
push
inc
mov
jb
daa
insb
pop
icebp
pusha
arpl
imul
push
bnd
sbb
fdivrs
scas
fmuls
movsb
test
xor
popf
jns
or
movsl
jno
add
mov
jb
scas
icebp
sbb
mov
inc
xchg
jl
add
fisubrs
stc
inc
lret
out
in
jae
add
std
sbb
ficompl
std
dec
push
pusha
lcall
sbb
cmp
xchg
int3
std
and
inc
popa
cmp
mul
pop
push
jns
xchg
jp
inc
rcl
pusha
sub
in
sti
xchg
add
jmp
add
cmp
adc
sbb
xor
dec
dec
loop
aad
push
bound
cli
xor
xor
fildl
cmp
mov
scas
push
ret
jge
stos
les
fwait
int
push
add
add
jecxz
sub
hlt
mov
cmp
repz
int
scas
js
das
or
loop
mov
div
and
gs
sbb
mov
pop
and
jp
test
in
push
xor
xchg
jbe
adcb
mov
lea
add
outsb
test
pop
adc
xlat
xchg
fisttpl
pop
sbb
movsl
cmp
lcall
xchg
repz
dec
jmp
dec
or
push
mov
lods
mov
lea
mov
scas
cmpb
lahf
mov
test
lret
fnsave
add
push
fldt
dec
adc
insb
mov
and
and
rcll
out
bound
jge
pushf
cmp
in
pop
test
icebp
lds
out
mov
in
scas
shll
loop
sbb
std
cmp
ret
popa
in
cli
sahf
pop
adc
mov
pop
fistpl
push
xor
or
testb
cmp
and
imul
mov
add
imul
xor
mov
subb
and
inc
sahf
push
mov
dec
jle
xchg
xorl
dec
sub
push
fsubl
ljmp
hlt
das
adc
cmpsb
fadd
arpl
jp
rcr
test
sub
cld
fs
insl
lock
stc
cmp
mov
lret
jg
lahf
sar
in
sbb
push
idivb
adc
cmc
rclb
imul
stc
aaa
scas
mov
push
xor
outsl
es
cmp
aad
mov
sub
lds
aaa
sbb
cmc
lods
cltd
xor
fs
js
inc
pop
dec
push
or
inc
adcl
sbb
mov
stos
pop
inc
test
addr16
lods
aaa
gs
mov
cmp
xchg
adc
lcall
and
sti
push
xor
stos
add
sarl
or
les
gs
dec
and
mov
into
lret
lret
push
ret
push
xchg
sub
lds
jecxz
std
ret
out
jne
inc
cltd
jbe
scas
in
fwait
push
sub
insb
jg
movsl
mov
add
add
shrl
adc
stos
push
sahf
mov
out
outsb
sub
dec
sbb
mov
adc
lock
aam
punpckhbw
sti
rorb
inc
shrl
dec
jge
pusha
dec
int
fadds
push
mov
ret
aam
and
repz
leave
push
aad
ffree
imul
pop
dec
push
mov
ss
cmpsl
push
ret
aaa
popa
test
in
movsb
and
jg
and
inc
clc
out
mov
popa
aas
dec
inc
test
insb
sub
aas
mov
mov
jle
decb
lods
stc
stos
fstpt
push
popa
outsl
sbb
call
mov
mov
les
cmp
pop
cmpsl
mov
push
cmp
jno
cmc
cmp
ss
leave
ret
jae
int
jecxz
add
ret
in
popa
je
mov
xor
mov
lret
jg
pop
gs
mov
mov
push
mov
out
mov
ss
mov
out
sbb
stc
hlt
mov
lcall
aad
cmp
scas
sub
cltd
fstpl
mov
mov
inc
pop
inc
pushf
fidivrs
aam
sub
loope
jbe
mov
sahf
or
stos
mov
xor
cltd
ja
ss
test
std
leave
int
and
fldcw
ds
insb
sbb
rolb
jns
pop
add
inc
and
out
push
cmc
sbb
inc
test
lock
rcrl
je
cmp
push
sbb
fldl
push
push
fs
pop
js
sub
sub
decb
xor
in
ret
loope
test
je
cli
insb
inc
jb
add
stos
frstor
call
das
pushl
mov
in
push
cmp
scas
in
push
xor
adc
mov
dec
jg
jbe
xchg
aas
xchg
mov
xor
adc
jle
lock
pop
sub
push
lds
pop
inc
ds
jno
or
lods
aas
mov
inc
shrb
ds
fsts
add
int3
xchg
jp
fs
push
shll
xor
nopl
jnp
scas
mov
pop
mov
xor
dec
pop
cmpsl
movsl
mov
pop
shll
cmpsb
and
inc
jno
mov
lods
gs
mov
repnz
aam
add
pop
mov
outsb
jmp
mov
push
sub
popf
sahf
mov
push
mov
xchg
mov
mov
xchg
jl
mov
out
jns
movsl
cmp
mov
inc
jne
adc
pop
push
pop
fdivs
out
pop
dec
mov
sysret
fsubrs
loopne
xchg
cmp
jbe
outsl
es
pop
mov
sub
les
shlb
mov
xchg
fists
push
lock
cmp
in
repnz
mov
stos
repnz
lea
in
and
imul
jmp
repz
add
daa
mov
cli
sbb
mov
popa
cltd
xchg
aas
jle
or
adcb
cld
fs
inc
mov
fimuls
pop
mov
and
scas
lods
iret
ja
adc
mov
test
mov
inc
orl
sub
popa
mov
addr16
mov
mov
fistl
je
test
dec
negl
mov
cmp
pop
mov
subl
addb
jns
into
sub
jne
jl
pop
inc
iret
pop
and
dec
out
inc
ds
cli
push
mov
nop
mov
push
pop
pop
popa
or
add
mov
or
and
mov
sbb
js
repz
cwtl
into
imul
and
xor
stc
mov
inc
js
xchg
ja
jg
dec
jb
bound
dec
or
and
jle
sub
lret
sbb
test
aad
rcrl
push
sub
cltd
fs
pop
mov
cmp
and
add
xor
fisttpl
mov
xor
sub
cld
je
rorb
cmp
fxch
movsb
loope
pop
jnp
mov
push
call
icebp
mov
ffreep
icebp
sar
movsb
pop
adc
or
dec
cmpsl
and
jmp
loope
leave
adc
xor
lcall
and
cmp
cmp
decl
std
add
in
test
stos
fildll
into
mov
call
xchg
jbe
fcompl
sub
adc
cwtl
add
mov
sub
cmc
push
fwait
shlb
add
xchg
adc
xchg
repz
add
cmpl
outsb
pxor
pop
inc
pop
adc
adc
adc
stos
cmpsb
sarb
pop
lahf
stos
mov
mov
mov
inc
pop
out
add
xchg
add
je
mov
add
pop
gs
xchg
xchg
and
jnp
mov
mov
sub
ds
iret
loopne
mov
insl
fcoms
std
cmpb
in
mov
fst
and
test
cmp
mov
in
adc
enter
mul
icebp
lahf
or
lahf
movb
stc
inc
insl
sbb
xchg
ljmp
imul
jo
push
jge
push
dec
add
negb
cmp
xchg
xor
push
push
aam
sub
fdivrp
jbe
repz
je
int
mov
add
imul
cmp
addr16
adc
ds
and
xor
dec
aaa
out
leave
push
sub
imul
xchg
jno
jo
mov
push
inc
dec
cmp
call
call
xchg
sbb
mov
xor
ja
sahf
inc
or
fadd
rcrl
jae
xchg
or
mov
xor
mov
or
and
adc
out
sub
fists
jne
addr16
imul
jl
sub
inc
sub
rorb
push
outsl
jp
movsl
or
loopne
in
ret
and
icebp
dec
jle
xor
fcmovnu
cmp
shll
adc
rcll
push
pushf
xor
xchg
dec
pop
sbb
es
dec
lcall
dec
jle
imul
add
sbb
daa
pop
out
inc
das
adc
xor
fisubrl
jo
mov
and
jmp
stos
adc
inc
jg
lahf
fcmovnb
aad
out
push
pop
cld
sahf
mov
ret
sti
lods
cmp
outsl
lret
pop
mov
in
push
loope
dec
sbb
rorb
push
je
lcall
or
or
sbb
dec
outsb
gs
cld
xchg
push
into
test
xor
jns
sub
jno
mov
jo
into
movsl
dec
sub
rcll
adc
fiaddl
in
sub
mov
jg
sub
add
pushf
insb
mov
cmp
movups
pop
pop
cmp
xchg
in
dec
loop
sub
jae
and
addb
aad
popf
push
sbb
sub
xchg
fsqrt
gs
clc
pop
aad
mov
pop
push
mov
cmp
cwtl
inc
test
jmp
jnp
imul
lock
jno
xchg
xchg
adc
sub
call
dec
push
xchg
sub
dec
pop
adc
pop
xor
call
les
in
mov
lods
pop
xor
hlt
cltd
and
popa
and
add
stc
and
pop
xchg
mov
pop
test
in
ror
cmp
xor
sub
sarl
jp
out
loope
stos
femms
mov
das
xor
scas
mov
stc
pop
inc
std
loop
jb
jne
pushf
push
jne
imul
sub
xchg
out
xchg
jbe
insb
imul
pop
xor
mov
flds
in
gs
pusha
push
pop
xor
mov
fsincos
roll
popf
shlb
bound
stc
jae
cli
adc
cmp
lahf
mov
clc
push
jo
add
fidivrl
sbb
push
imul
int3
dec
call
iret
mov
aam
inc
lods
int
repz
push
jmp
nop
sub
mov
popa
rorl
int3
push
cmp
addr16
lcall
fldt
pop
push
in
lods
pop
push
add
pop
call
mov
sbb
jge
and
fimull
mov
rol
adc
push
xor
insl
dec
out
pop
dec
int3
cmpsb
adc
cmp
sub
sbb
pop
gs
loop
movsb
xchg
jmp
push
jp
cmc
sbb
out
insl
andl
int3
add
insl
and
leave
test
jmp
outsb
pop
jp
sbb
mov
push
cmpl
jg
sub
cmpsl
imul
mov
sub
imul
mov
ja
sahf
mov
jge
mulb
shrb
xor
pop
repnz
in
push
mov
add
push
sub
imul
xor
xor
mov
inc
xor
mov
inc
test
push
bnd
or
jmp
mov
mov
mov
mov
mov
push
popf
and
sarb
push
in
push
pop
push
out
pop
gs
dec
push
popa
stc
pop
int
cli
cwtl
xor
jmp
sbb
cmp
bound
jmp
loope
pushf
cmpsb
leave
ret
mov
imul
inc
and
lret
push
mov
jp
xchg
sarb
int3
pusha
test
hlt
or
mov
jp
out
and
les
lcall
mov
or
lret
int3
cmpsl
push
stos
js
push
xor
inc
xor
mov
inc
loopne
filds
std
cmp
sbb
cwtl
adc
or
test
xor
jecxz
xor
and
loope
cmp
lods
popa
cld
inc
or
adc
cld
dec
cwtl
jp
fldt
nop
adc
mov
adc
mov
sbbb
popa
mov
cld
inc
xor
xchg
push
jge
int3
mov
push
cmpsb
adc
dec
cltd
je
mov
adc
dec
cmc
pop
jg
lcall
fxch
test
enter
mov
adc
add
or
or
and
sub
mov
test
xor
inc
pop
cmp
sub
ja
jo
sbb
sbb
ret
popf
mov
pop
cmp
inc
push
enter
cmp
ret
push
mov
aas
das
stos
rolb
adc
cmp
ret
dec
arpl
adc
lcall
mov
and
popa
ss
roll
sub
mov
mov
cmp
fucomip
scas
xchg
adc
cmp
jmp
ja
mov
lret
lahf
jae
or
out
lods
in
pop
cltd
mov
lret
cmp
jle
or
iret
cmp
rcll
adc
jo
mov
or
hlt
pop
push
fidivs
es
or
sub
sbb
sub
testl
pop
movl
outsb
mov
and
insl
jne
out
add
or
fsubrl
cld
stos
enter
jb
sti
mov
or
fwait
decb
jmp
aas
push
inc
adc
out
sub
ljmp
sbb
les
dec
insb
rcll
cmc
lret
mov
xchg
or
fnstsw
imull
data16
pop
mov
cmp
push
lret
rolb
outsb
inc
test
in
dec
sti
mov
rol
fwait
adc
ja
fcmovu
test
cmp
dec
stc
xchg
scas
add
dec
stos
sarl
mov
rcr
xor
inc
repz
sub
push
jns
cmp
mov
int3
cltd
gs
ret
js
adc
pop
mov
into
test
loopne
std
xchg
mov
jns
fldl
mov
cmp
out
fsts
and
rolb
repz
adc
clc
gs
imulb
lret
lea
jg
mov
add
imul
mov
mov
sub
arpl
jl
sub
jno
inc
sbb
push
xor
ds
or
aam
and
and
xchg
outsl
adc
hlt
add
cmp
hlt
ss
pop
mov
inc
lds
cmp
jp
xchg
adc
xchg
sub
es
push
into
scas
xor
cwtl
pop
insb
data16
iret
or
outsl
fldt
js
aad
mov
or
jno
frstor
ret
or
bound
push
and
test
and
sbb
or
adc
in
pop
imul
inc
or
mov
notb
loope
and
add
jno
scas
outsl
pop
xchg
not
fwait
push
jp
cmp
fdivl
xchg
fcmovb
loopne
cmp
or
xchg
jbe
inc
adc
mov
jnp
push
ficompl
aas
test
testl
xchg
xchg
aad
loope
ret
stc
pop
imul
js
cwtl
pop
int
mov
xor
pop
dec
add
shl
xlat
mov
bnd
inc
into
mov
aam
in
mov
lods
rep
jnp
shl
pop
xchg
mov
xor
rcl
es
icebp
push
jno
fs
jmp
loop
ret
mov
adc
outsl
cmpsb
loopne
jb
repnz
test
lock
in
sbb
mov
dec
sub
in
imul
lcall
mov
mov
inc
cmp
pop
push
shl
into
lds
mov
icebp
ds
fwait
je
jg
loopne
mov
stos
fld
data16
adc
out
pop
adc
in
push
das
ds
or
push
cmp
push
loopne
jmp
call
add
pop
repnz
sub
sbb
jge
outsb
lds
push
sbb
mov
mov
aam
xchg
push
out
daa
push
in
test
mov
stos
fistl
sti
mov
push
mov
dec
daa
es
xchg
jne
inc
mov
aam
mov
scas
popa
repnz
out
add
xor
dec
xchg
fs
shlb
mov
in
cmpl
adc
in
xchg
cmp
mov
xchg
inc
mov
cmp
jmp
mov
loop
inc
ret
jmp
or
adc
dec
sbb
add
pop
pop
stos
inc
das
jmp
push
imul
lock
jp
push
scas
mov
cli
mov
dec
adc
aad
add
mov
and
jmp
enter
sarl
adc
sbbl
jb
les
fisubs
das
xchg
pop
cmp
jns
fisubs
mov
dec
jae
scas
loopne
lret
cmp
in
xchg
jno
addr16
pop
cld
mov
push
mov
sub
negl
outsl
mov
flds
aam
pop
inc
pop
out
and
scas
movsl
sbb
andl
xchg
sahf
dec
rorl
leave
add
or
mov
lock
xor
adc
push
icebp
aaa
jns
repnz
loop
pop
pushfw
cwtl
std
and
pop
jae
test
into
or
jp,pt
mov
add
xor
add
xlat
push
aam
inc
jge
pop
or
nop
pushw
in
lret
mov
jp
mov
popf
inc
outsl
jbe
insl
jb
movsb
jmp
loope
mov
cmp
sbb
repz
push
pop
xor
pop
scas
sbb
xor
std
and
addr16
hlt
mov
sbb
sbb
nop
push
sbb
xor
iret
jae
data16
mov
int
jb
jmp
gs
pop
hlt
push
lret
imul
call
pusha
cmpsb
sbb
adc
loop
leave
mov
xchg
movsb
out
pop
pop
inc
mov
jno
outsl
dec
repnz
mov
and
sub
jb
in
lret
mov
mov
aas
lea
pmulhw
ljmp
mov
imull
mov
ss
cmpsl
shll
cmp
xchg
cmovnp
jl
test
push
pop
jg
nop
xlat
jle
jbe
bound
mov
data16
jns
lock
xchg
sbbl
cs
jp
and
jmp
adc
push
push
xor
les
dec
stc
ret
ds
lcall
sbb
addl
cmp
aas
mov
test
filds
add
push
jno
dec
mov
mov
push
dec
mov
jmp
imul
push
push
adc
ja
mov
push
insb
adc
sub
mov
int3
adc
xor
das
mov
lds
xor
divl
arpl
lahf
or
inc
push
mov
and
insl
jmp
dec
das
test
in
mov
hlt
mov
mov
mov
mov
and
out
es
xor
add
jbe
adc
fwait
scas
xchg
stos
enter
aam
sub
scas
jbe
fcmovnu
out
mov
push
sub
lahf
jo
scas
jno
adc
mov
push
fldl
dec
xchg
xor
shll
adc
out
ret
hlt
xor
fs
dec
add
add
int3
lret
pop
sti
int3
xor
push
arpl
dec
sarb
call
pop
inc
sbb
repnz
add
mov
insl
fstl
xchg
mov
stos
outsb
adc
pop
in
pop
push
sbb
cwtl
or
rorb
mov
cltd
lods
dec
mov
sub
pushf
mov
stos
fldenv
inc
adc
xchg
xchg
mov
fisttpll
imul
pushf
jns
imul
in
das
cmpsl
and
mov
loope
or
sbb
dec
jne
inc
gs
popf
and
aas
inc
test
xchg
xor
dec
dec
mov
lret
cmp
push
bound
inc
and
push
mov
sbb
fwait
mov
push
mov
clc
pushf
and
xorb
and
pop
xor
fidivs
popa
in
sub
push
jecxz
push
add
jge
or
sbb
into
dec
enter
aaa
lret
xchg
jmp
sub
push
jo
dec
add
out
hlt
test
fs
int
sbb
sbb
repz
hlt
hlt
enter
add
adc
xchg
xchg
sub
inc
and
std
push
push
jge
jecxz
pop
add
inc
jp
es
pop
mov
das
out
push
inc
xorb
mov
or
scas
mov
xor
mov
mov
sub
ss
mov
pop
insl
and
movl
add
jns
mov
push
insl
outsl
mov
das
addr16
mov
iret
in
sub
mov
bound
xor
out
and
sbb
outsb
enter
xor
sbb
xchg
scas
ja
arpl
or
mov
sub
loopne
and
aad
mov
rcl
loop
sbb
dec
into
dec
cmpsb
int3
jb
arpl
fsubp
jecxz
mov
mov
xor
nop
push
rdpmc
inc
mov
lret
fwait
cmp
shrb
cld
outsb
xchg
cmp
mov
jnp
inc
dec
pop
inc
dec
fwait
inc
fdivrl
jnp
jns
outsl
mov
pop
daa
mov
ret
mov
jl
jg
mov
in
sbb
scas
es
xor
stos
xor
imul
enter
or
and
mov
xchg
dec
fistl
sbb
cmp
stos
das
add
test
cmp
jnp
inc
daa
pop
push
lods
mov
stos
enter
test
mov
xlat
push
xchg
incb
and
sbb
mov
cmp
in
pop
fnstenv
cmp
ja
or
sahf
and
lods
cli
add
lret
inc
ss
or
imul
sti
mov
ret
mov
pop
mov
push
xor
mov
rorb
repnz
mov
scas
clc
pop
out
jns
or
push
or
clc
subb
popa
movsl
lods
inc
loop
push
lcall
icebp
iret
add
scas
mov
rol
insb
data16
dec
cld
aad
sub
enter
fnstenv
sub
and
test
jns
xchg
jmp
inc
rol
iret
inc
xor
movsb
and
xchg
mov
pop
lea
xchg
ficompl
fistl
mov
fdivl
mov
jno
or
adc
xor
dec
sbb
into
push
push
dec
clc
dec
add
mov
sahf
pop
cmc
jns
xchg
scas
add
xchg
add
clc
stos
pop
and
vpmacsdql
inc
ror
xor
cmp
ret
inc
pop
lods
sbb
hlt
xchg
mov
mov
push
push
dec
dec
inc
bound
mov
mov
sbb
xor
inc
int3
pop
cmp
mov
adc
and
sub
jno
icebp
rclb
push
orb
popf
hlt
and
dec
scas
sub
and
pop
inc
and
outsb
test
int3
push
xor
and
xchg
dec
flds
iret
adc
add
cmp
xor
outsl
test
iret
js
lods
sbb
loopne
addr16
push
dec
jnp
insb
cs
js
enter
sti
mov
daa
sub
in
int
out
mov
lahf
add
enter
and
jae
pop
jl
leave
sbb
lock
int
leave
xorl
in
xchg
pop
mov
xchg
mov
sub
sti
icebp
out
mov
in
fdiv
mov
sub
xor
xor
fisubrl
jbe
or
insb
mov
push
push
fists
or
xchg
mov
cmp
mov
lret
out
inc
psllw
jg
dec
jne
and
sbb
dec
sysret
fistps
rclb
negl
and
lret
mov
inc
pop
mov
and
inc
dec
rcr
sbb
jae
rcl
das
call
lret
lea
xchg
int3
xchg
add
xor
rcrb
push
lea
out
jb
mov
aad
cmp
mov
fidivrs
adc
xor
mov
ret
dec
inc
addr16
iret
lods
aam
movsl
cli
inc
sub
ret
or
insl
sbb
cmc
out
or
sub
add
sbb
adc
jp
pop
test
and
or
shll
pop
mov
out
sub
pop
jo
imul
push
fwait
and
roll
arpl
jo
or
inc
idiv
jmp
xchg
rolb
xor
sbb
sub
nop
inc
jp
loopne
outsl
cmpsl
push
insl
aas
add
ljmp
xchg
sti
dec
jnp
jl
int
mov
push
cs
and
insl
lods
addr16
lahf
mov
fcompl
mov
jno
inc
cltd
fwait
nop
sub
push
insl
push
push
push
and
sbbb
push
cs
xor
add
lret
pop
or
loopne
adc
jg
fsts
sub
jmp
test
je
ret
jecxz
hlt
outsl
and
cwtl
iret
les
jbe
add
and
pop
popf
jl
cmp
insb
sbb
xchg
inc
fwait
in
jb
jl
or
and
cmpltps
mov
out
mov
mov
pop
add
sub
out
roll
leave
xor
lcall
adc
dec
scas
mov
sti
bnd
pop
add
mov
pushf
jge
test
aad
cli
roll
sbb
mov
push
fisttps
notl
subb
mov
call
popf
xor
mov
and
and
jl
popf
or
xchg
pop
mov
push
scas
sbbb
inc
es
dec
repnz
sub
push
sub
add
or
push
mov
es
insb
inc
lds
out
and
insl
and
push
std
sbb
pop
cld
scas
in
std
jmp
sbb
xchg
mov
pop
sbb
shlb
cmp
dec
loope
and
adc
jl
fwait
sub
test
mov
ret
mov
pop
fsub
xchg
scas
shrb
lods
jl
add
loopne
ret
nop
mov
lret
pop
jne,pn
clc
aas
aam
lret
jl
push
daa
pop
cld
adc
scas
scas
sbb
adc
enter
sbb
roll
push
dec
bound
je
mov
mov
stos
push
dec
adc
adc
push
mov
xlat
pushw
jno
or
insl
or
cmp
sarb
testb
out
imul
repnz
out
cmpsl
test
push
pop
paddq
mov
outsl
and
in
fucom
icebp
and
mul
inc
or
fs
lret
push
pop
push
fbld
outsl
mov
enter
adc
gs
dec
sti
or
js
je
cmp
fistpl
cmova
sbb
mov
loope
add
jg
call
push
das
enter
pusha
xchg
pushf
mov
and
push
and
xchg
mov
stos
jg
mov
adc
and
arpl
cmp
sbb
mov
lret
inc
arpl
fdivl
ja
push
mov
push
int
aad
mov
aaa
mov
das
mov
xor
daa
pop
call
pusha
xchg
scas
das
lret
push
mov
imul
movsl
or
bound
xchg
addr16
xchg
pop
iret
push
popf
dec
shrb
repnz
pop
negb
xchg
in
ljmp
in
xor
ja
push
gs
mov
pop
inc
inc
repnz
mov
mov
adc
xor
push
leave
mov
inc
jns
stos
cmp
test
out
sbb
sub
loopne
or
jp
jae
xchg
jp
stc
rcll
insb
push
adc
in
pop
aas
sub
dec
mov
xor
jnp
ja
pop
mov
push
mov
out
push
pop
xchg
arpl
mov
fs
movsl
xchg
icebp
cltd
mov
adc
inc
fidivrs
mov
loop
loope
push
inc
mov
xchg
push
outsb
dec
sbb
movl
out
popl
outsl
pop
int
ja
daa
ja
faddl
mov
sub
push
das
inc
xchg
push
xlat
inc
clc
mov
xchg
jne
mov
cmp
xor
gs
mov
rorl
test
in
xor
add
out
push
popf
lods
and
mov
push
or
jno
inc
mov
mov
jge
jne
adc
push
fisubs
push
ficoml
in
mov
subb
push
outsl
lss
stos
mov
adc
stos
jmp
pop
stc
and
mov
je
pop
inc
out
and
imul
jle
in
xor
fnsave
sbb
inc
xchg
xchg
dec
test
sub
or
jge
das
lahf
push
icebp
testl
push
iret
pop
mov
jl
subb
xchg
xchg
insl
sar
lahf
inc
sub
fsubrl
insb
mov
jp
mov
mov
ja
lock
imul
lret
shll
aas
fisubrs
cmpsb
sbb
or
mov
clc
sbb
je
leave
sbb
ret
cli
out
fidivrs
mov
sbb
int3
mov
jb
dec
cltd
add
mov
sbb
xchg
xor
mov
add
pop
fidivl
xchg
add
mov
int3
dec
shrl
push
or
sahf
sub
pop
sbb
cmp
push
test
das
sub
imul
xchg
push
aaa
lcall
jl
jl
andl
fidivrl
call
xchg
xchg
lock
cli
sti
and
mov
mov
dec
icebp
jo
cmp
xor
sub
out
jo
out
cmp
fxch
mov
mov
or
rorl
mov
mov
xchg
sbb
jl
mov
dec
scas
fidivrs
mov
adc
pop
sahf
mov
stos
ret
adc
popa
cmpb
pusha
sub
pop
push
sti
nop
addr16
subb
push
fwait
fs
dec
into
cmp
xorps
lock
outsb
ja
push
shll
mov
aaa
pushl
mov
cmp
push
xchg
mov
xor
js
add
sti
fcomi
inc
jae
adc
jecxz
aas
ljmp
dec
lods
mov
inc
scas
mov
hlt
xchg
sbb
das
jnp
in
loopne
icebp
cmpsl
sbb
out
mov
sbb
lret
iret
mov
mov
mov
out
test
mov
scas
jne
rol
inc
loop
xchg
mov
lods
icebp
jp
inc
pop
fildl
mov
jge
xchg
push
sbb
les
insl
arpl
push
sbb
mov
mov
mov
mov
xor
fmul
and
sub
insb
pop
imul
inc
jbe
xor
lcall
mov
lret
call
push
imul
and
dec
dec
fisttps
and
pusha
fidivrs
mov
add
mov
std
push
leave
arpl
insb
cmp
push
push
pop
pop
jns
push
roll
fmul
addr16
xchg
push
lret
aaa
mov
mov
repnz
mov
dec
and
aaa
imul
fldcw
sbb
inc
jns
fstpl
xchg
inc
push
sub
leave
hlt
mov
cli
gs
outsl
leave
sbb
imul
rclb
arpl
adc
pop
xchg
mov
mov
movsb
movsb
dec
xchg
mov
lods
in
or
cli
subl
mov
inc
mov
pop
outsb
push
mov
or
add
dec
test
xchg
inc
scas
iret
or
jle
in
js
xor
jge
xor
add
pop
xlat
repz
push
sahf
or
test
mov
int3
dec
lea
daa
dec
out
ja
add
je
add
lea
insl
xchg
lods
sub
jnp
pusha
nop
push
and
jbe
mov
in
icebp
or
sub
cmp
mov
cmc
cmp
sub
adc
cmp
outsb
mov
fcom
xor
rolb
mov
icebp
adc
xor
mov
popa
lret
mov
cld
sarl
mov
fisttpll
mov
jo
mov
sarb
test
dec
push
mov
daa
out
cmpsl
imul
mov
loop
jnp
xlat
test
inc
lds
pop
addb
ds
push
mov
stos
in
rol
mov
mov
push
mov
inc
push
jle
inc
mov
adc
and
sbb
push
pop
sub
data16
pop
ds
push
stos
mov
fstpt
popa
cmp
in
sub
ljmp
in
aad
call
nop
pop
dec
push
cmpsb
add
clc
sbb
and
in
jae
xchg
and
cld
adc
in
cs
xchg
mov
jo
xchg
dec
cmp
std
mov
pop
jne
aaa
sub
xchg
lock
xor
test
enter
add
push
jle
out
lahf
lock
add
jns
mov
mov
popa
add
xor
push
lcall
sub
mov
xchg
mov
xchg
and
pop
aas
cmc
xchg
cmpsl
or
xchg
out
mov
jecxz
xor
mov
movsb
pop
xchg
and
jl
pop
nop
addr16
inc
std
loopne
scas
add
pop
outsl
cmp
jns
cmpsl
dec
jle
or
xchg
pusha
call
add
push
sbb
inc
xor
insl
gs
add
lret
stos
dec
popa
cli
inc
or
inc
fs
mov
fstps
pop
loop
xchg
sbb
xor
add
mov
sbb
sbb
push
movl
jne
addl
popf
aas
fsub
insl
pushf
cmpsl
clc
pop
jle
mov
arpl
dec
pop
aam
inc
cs
test
push
or
cmp
arpl
pop
iret
ja
xchg
xorl
pop
aam
jge
mov
jb
lret
fs
ror
or
arpl
adc
sbb
jae
sbb
add
jmp
pop
cmp
movzwl
mov
mov
fwait
or
cmp
mov
xor
repnz
push
pop
xchg
xrelease
mov
repz
xlat
cmp
add
scas
xor
pop
mov
and
pop
inc
lock
sahf
push
xchg
scas
out
push
hlt
xor
popa
insb
push
xchg
mov
push
xlat
jmp
inc
stc
repz
cltd
rol
ret
jno
push
gs
add
nop
jp
lret
mov
push
jge
mov
mov
sbb
mov
mov
jb
out
test
pop
pop
cwtl
mov
xchg
mov
xor
adc
sbbb
inc
mov
scas
movsb
push
rolb
pop
jno,pt
je
push
adc
adc
shll
stos
repnz
or
test
popf
aas
fstpt
mov
mov
aas
popf
fisttps
sub
pop
ljmp
gs
scas
imul
lahf
fistpll
iret
push
aaa
insl
repnz
pop
loope
mov
clc
adc
int3
push
daa
mov
cltd
or
push
dec
or
mov
test
cmpsb
add
xchg
movsb
xchg
popl
mov
test
aaa
jmp
dec
cld
or
imul
add
ja
fdivrs
add
jo
xchg
or
jge
je
adc
xchg
outsb
or
outsb
in
dec
add
out
lods
lods
rcl
xchg
mov
dec
inc
lods
add
mov
icebp
scas
xchg
popa
xchg
pusha
cmp
or
mov
loopne
inc
push
xchg
push
and
jmp
in
push
dec
jae
mov
mov
test
out
inc
pop
dec
out
test
lds
jecxz
push
imul
pop
push
push
pop
pop
cwtl
fpatan
or
hlt
adc
or
mov
dec
mov
dec
cmp
pop
push
mov
divl
mov
sti
testb
ja
xchg
pop
inc
aas
int3
movsl
push
loopne
jmp
dec
mov
sub
sarl
add
jne
and
mov
mov
lret
es
cmp
cltd
push
push
arpl
cmp
test
jp
addl
movsl
sbb
rcll
or
jmp
fadds
or
or
xlat
pop
je
aad
daa
adc
pop
or
stos
pop
movl
insl
insl
dec
je
sbb
xchg
lock
push
xlat
mov
sub
xchg
or
add
inc
push
loop
cmp
jp
cmp
xchg
repnz
movsb
sbbb
add
ja
push
dec
ss
cmp
mov
sbb
les
bound
pcmpgtd
into
add
ds
and
ret
clc
pop
cmp
push
ja
push
ljmp
fildll
jmp
inc
xchg
filds
ficompl
test
imul
pop
add
pop
inc
mov
jae
mov
dec
sar
or
fwait
xchg
push
dec
xchg
inc
pop
inc
subb
cs
adc
jne
les
jne
lea
push
sbb
xlat
adc
lds
pop
jmp
in
pop
mov
jne
push
lock
add
xchg
xchg
imulb
sbb
outsb
dec
pop
mov
js
cld
add
es
negb
xor
orl
and
mov
stc
scas
mov
sub
inc
and
sbb
and
mov
sbb
mov
or
je
mov
xlat
jns
mov
mov
fstpl
jle
aaa
shlb
ljmp
mov
js
mov
sbbb
cmp
pushf
iret
adc
and
push
cs
pop
pusha
popf
mov
mov
arpl
fcmovu
cmpsb
clc
push
dec
test
or
sti
and
jp
aas
adc
ret
jl
xchg
loope
jle
scas
dec
bound
push
ret
out
in
test
mov
sub
outsl
and
pop
cmpsb
popa
pop
mov
testb
xor
loope
xchg
push
outsl
jmp
filds
movsb
and
add
rol
cmpsl
jno
jmp
ret
cwtl
mov
pop
lea
mov
push
sbb
fcoms
xor
jecxz
xchg
mov
outsb
pop
push
jne
not
fs
lret
lock
arpl
inc
cmpl
push
add
loop
jecxz
out
jl
iret
xlat
push
add
jmp
dec
leave
sbb
loop
outsb
and
shll
jb
sahf
adc
cmpsb
adc
pop
sbb
out
out
in
movsl
lcall
in
outsl
mov
les
push
cmp
mov
out
sahf
lock
les
into
cmp
xor
scas
ret
adc
repz
inc
enter
mov
dec
mov
sbb
sub
add
test
incb
cli
lods
sub
xor
or
and
mov
push
adc
and
hlt
mov
sbb
jae
lret
jg
lods
movsl
pop
sub
mov
aad
mov
push
cmpsl
dec
mov
jecxz
es
ljmp
dec
pop
lock
push
mov
push
or
cmpsb
movsb
xchg
lret
ss
push
and
mov
xchg
js
sbb
mov
or
push
cmp
lcall
leave
ds
jmp
dec
roll
jp
scas
xor
loopne
loop
jmp
mov
push
rol
xchg
push
test
outsb
stos
popa
nop
fstl
hlt
add
mov
jge
sbbb
arpl
test
adc
dec
jmp
or
in
xchg
dec
fisubs
dec
ficoml
mov
shl
mov
push
div
scas
iret
jns
mov
aas
sti
test
mov
shl
fidivl
movsl
push
scas
add
incl
ficomps
dec
adc
les
leave
and
addr16
and
iret
lahf
out
call
sbb
push
iret
sbb
sbb
and
cmp
fnstcw
fwait
loope
pop
pusha
gs
scas
test
pop
bound
mov
mov
xlat
xchg
xchg
xchg
mov
lahf
std
cltd
adc
jg
addl
mov
mov
out
inc
pop
ret
je
arpl
jne
inc
ds
movsl
push
xor
shll
outsl
das
or
sub
sbb
divb
and
dec
mov
jb
icebp
movsb
loop
stos
imul
push
stos
mov
roll
dec
sbb
cld
lea
add
out
dec
pop
sub
leave
push
jne
scas
cmp
mov
aas
and
cmp
int3
add
sub
sti
aas
inc
popa
sub
add
xchg
enter
mov
out
mov
sbb
aaa
lea
push
in
mov
inc
or
jae
xor
fsubp
push
aad
jmp
mov
loop
sbb
xchg
ljmp
loop
rolb
jb
test
push
dec
fcoms
push
xor
adc
adc
dec
inc
cld
arpl
cmp
push
push
inc
xchg
loop
outsb
int3
cld
rcrl
repz
sub
subl
jl
popa
jle
stc
icebp
insw
ss
cmc
jg
add
cmp
jne
push
jg
imul
mov
sti
mov
rcll
dec
adc
data16
addl
jns
rcr
jno
sbb
test
xor
sbb
scas
or
je
sbb
mov
cmp
pop
sti
sbb
xor
inc
aam
push
mov
mov
jecxz
push
fiaddl
mov
mov
fldl
shll
xchg
xchg
xchg
and
cli
pop
mov
mov
push
loop
andb
popf
ss
mov
stos
aas
mov
pop
loope
iret
insb
mov
pop
mov
leave
in
fld
insl
push
subl
je
and
and
loop
mov
sbb
pop
lret
dec
pop
pop
xchg
hlt
aam
dec
lcall
in
es
push
incl
sub
popa
jae
test
mov
xchg
push
subl
ret
pop
sub
mov
sahf
dec
dec
and
enter
shlb
in
outsb
pop
in
inc
or
outsb
pop
push
xorb
add
repz
ljmp
inc
mov
jmp
ss
pop
dec
cli
xchg
sbb
scas
sbb
inc
lret
stc
insb
xchg
lahf
sbb
push
into
or
and
fdivp
push
xlat
push
sub
mov
imulb
js
subl
jg
lcall
sbb
add
sub
out
loop
and
das
fwait
sbb
shrl
mov
ret
add
dec
in
sub
push
pusha
cmp
mov
lds
lods
lock
bound
fldcw
xchg
add
out
ljmp
lahf
nop
sbb
mov
or
hlt
arpl
add
jno
dec
and
pop
add
jmp
sbb
or
test
sbb
push
xor
clc
icebp
sbb
pop
inc
cltd
out
adc
sub
lcall
mov
sub
push
xchg
lods
subl
jns
xor
stos
or
lods
mov
jge
fiaddl
xorb
mov
popf
addr16
into
push
enter
mov
jo
subb
dec
movsb
pop
inc
inc
jmp
add
push
pushf
adc
in
repz
push
adc
pop
cmp
add
movb
add
lcall
push
ficomps
sbb
inc
ljmp
dec
nop
mov
mov
int
and
scas
rorb
mov
arpl
push
jg
std
iret
stos
and
sub
loop
insb
xchg
xor
aaa
fcomi
in
outsl
cltd
call
adc
out
push
out
xor
sahf
gs
and
mov
and
outsb
mov
xchg
js
cmc
sbb
dec
dec
sbb
xchg
add
in
push
stos
stos
lds
outsb
comiss
mov
inc
xor
adc
mov
mov
pop
out
jp
sbb
jg
and
push
fs
add
mov
lock
jo
cmpsl
cmp
sub
adc
or
fwait
add
or
push
mov
lds
dec
ret
xchg
lahf
inc
mov
xchg
mov
out
outsb
pop
test
pop
jg
mov
mov
mov
bound
sbb
andb
or
leave
shlb
xchg
pop
out
aas
fwait
movsl
or
fs
call
enter
dec
movsb
repz
or
nop
jbe
idiv
clc
jno
test
cmovl
cs
cmpsl
mov
or
imul
stos
pushf
inc
das
mov
or
sbb
call
mov
sbb
cmp
jl
stos
popf
push
mov
mulb
add
or
pop
in
in
iret
mov
sub
fsubl
aaa
js
push
xchg
mov
aas
sar
inc
mov
mov
notl
mov
repnz
pushf
js
add
lret
mov
jmp
es
or
dec
adc
or
jg
jb
inc
xchg
scas
add
enter
pop
dec
out
out
push
insb
sub
mov
mov
jae
repz
and
mov
xchg
popa
cwtl
cmp
cmp
sbbl
dec
dec
test
push
jo
lods
cli
jp
cmpsb
jae
in
adc
pop
ss
xchg
mov
out
xor
mov
lea
or
push
rcl
test
fwait
push
lods
and
test
mov
stc
inc
cmp
mov
ret
sbb
adc
cli
jl
int
push
pop
cmp
enter
clc
orl
flds
fiaddl
add
icebp
dec
filds
dec
in
pop
sub
pop
scas
pop
scas
cmp
outsb
adc
jecxz
jl
mov
sbb
js
loopne
sub
loope
xchg
clc
add
jne
stc
cmpsb
pextrw
jne
sbb
sbb
out
mov
mov
mov
cmpsb
sbb
jne
ljmp
outsb
cltd
scas
lret
sbb
add
xchg
mov
and
mov
xchg
ja
xchg
mov
jbe
dec
mov
pop
lahf
icebp
daa
movsb
test
lret
cmc
pop
pop
jns
clc
jb
sub
lea
jae
pop
jnp
push
in
push
jnp
push
sbb
jg
fistpl
test
shll
jne
rol
cli
or
dec
mov
xor
cmp
popf
ret
or
pop
inc
scas
sahf
mov
aad
aam
aaa
jmp
imul
mov
lock
mov
mov
and
mov
out
stos
hlt
sub
arpl
push
xor
cmp
pushf
pop
repnz
out
push
stos
loopne
cmpsb
mov
cltd
adcb
mov
arpl
sbb
addr16
iret
sti
and
icebp
fadd
jnp
pop
insl
into
xor
and
mov
cmp
cmp
out
xchg
cltd
lock
into
lahf
repz
scas
adc
push
lock
mov
mov
mov
cld
mov
pop
lcall
mov
cmp
xchg
je
cmc
adc
cmp
xorl
jbe
and
mov
negl
mov
adc
jge
in
sbb
xchg
inc
cmp
or
std
cmpsl
jl
jge
add
adc
ret
aaa
outsb
adc
mov
xor
mov
test
sbb
inc
xorb
xchg
lock
into
xor
pop
xor
add
push
dec
sub
and
rclb
add
iret
xchg
aaa
inc
pop
imul
mov
in
imul
ret
inc
je
movsl
lock
xchg
es
mov
mov
xchg
xor
mov
mov
lock
jb
or
or
dec
xor
pop
or
sbb
in
sub
ss
stos
inc
cmp
test
pop
test
sub
fdivrl
lea
mov
into
ss
std
sahf
push
cmpsl
pop
add
gs
mov
in
and
sub
fcoms
push
cmp
push
frstor
and
inc
out
int3
inc
dec
jge
xor
in
cltd
aad
or
test
ja
and
inc
cmp
jae
mov
cld
xor
xor
insb
icebp
push
or
push
ds
mov
jle
add
nop
std
pop
mov
sub
mov
inc
inc
xchg
fs
sahf
jle
xchg
adc
sub
jo
shrb
xchg
mov
push
movsl
lret
and
lock
inc
imul
loopne
cs
dec
ljmp
mov
lods
pop
in
sahf
fiadds
mov
jns
pop
and
add
pop
int3
xor
inc
add
movsb
push
mov
jb
cltd
cmc
cmp
shll
mov
fmull
sub
iret
and
cmp
lret
pop
lods
mov
lods
cltd
dec
adc
imul
hlt
or
sub
rol
int
aaa
repz
fidivrl
sbb
mov
push
push
outsb
fmuls
mov
add
negb
pop
inc
dec
ljmp
xor
pusha
dec
sub
outsl
add
arpl
jl
push
jle
mov
fildl
sbb
stc
in
pushf
es
setns
push
xchg
dec
hlt
lret
mov
pop
std
add
fcompl
mov
push
xchg
jg
lret
cli
adc
mov
es
loop
mov
xor
fnstsw
inc
daa
sbbb
and
jb
pop
fbld
xor
cld
mov
pop
out
cmpsl
cs
inc
lock
mov
mov
push
out
rcr
fwait
mov
mov
add
sub
movsl
push
fisubrl
jbe
cs
add
dec
pop
push
sbb
adc
pop
adc
mov
stos
in
ficomps
cli
sbb
fistps
jne
cmp
cmp
push
sbb
xor
dec
in
adc
and
pop
push
add
cmp
push
call
dec
pop
push
or
adc
scas
stos
mov
xor
cmpsl
loopne
xor
dec
ret
dec
ffreep
mov
adc
call
repnz
or
inc
xor
push
jbe
idivb
ss
mov
sbb
test
mov
sbb
mov
mov
jnp
scas
bound
xchg
and
add
clc
xchg
xchg
lret
call
shlb
lcall
cmpsw
clc
je
jmp
push
negl
imul
je
loop
stos
in
out
or
lock
cwtl
push
orb
fdivr
mov
push
dec
std
insb
inc
mov
mov
rolb
add
xchg
and
das
dec
sbb
cmpsb
and
push
dec
ss
idivl
scas
dec
in
das
or
lods
push
cmpl
mov
rclb
dec
testb
jge
fstp
loopne
stos
sbb
in
pop
ds
ss
leave
test
lret
daa
mov
stos
or
add
jg
pop
jecxz
popf
mov
mov
or
nop
cld
adc
aad
ja
push
addr16
mov
jns
es
ljmp
loop
add
popf
in
cs
mov
fsubl
test
mov
test
jno
mov
outsb
ja
ja
cmc
push
mov
cwtl
out
dec
adc
rcll
jecxz
pusha
push
int3
les
xchg
in
stc
dec
sub
fdivrs
cmp
lret
sub
icebp
pop
pop
xchg
icebp
aaa
mov
popa
mov
mov
push
cltd
out
xor
jg
xchg
ret
push
rolb
xchg
andl
inc
ljmp
ss
out
mov
xor
les
inc
imull
aad
add
sub
xor
adc
sbb
call
je
mov
fstpl
scas
add
idiv
js
jo
sarb
ja
loope
les
add
rcrb
add
in
out
ret
out
int
mov
dec
cli
mov
jg
jbe
and
jns
xchg
and
das
or
push
dec
mov
add
mov
aam
inc
pop
stc
lret
sbb
jo
sub
jecxz
lea
jno
outsb
sbb
adc
sbbb
ljmp
mov
dec
enter
pop
fcmove
data16
enter
cmp
add
pop
in
sub
loop
and
mov
push
pop
add
jnp
repz
aaa
push
or
loope
push
into
or
xor
pop
pop
jno
mov
mov
in
push
fdivs
fcmovnb
stc
rcr
sub
mov
pusha
mov
mov
push
and
fsub
arpl
popa
mov
dec
cmp
mov
iret
xchg
nop
jb
stc
add
mov
jb
adcb
jno
mov
jae
sbb
int3
xorl
xchg
cmp
out
fwait
ret
enter
xchg
add
aam
mov
mov
cmpl
aam
popa
mov
xorb
cmpsb
dec
outsb
jae
cmp
pop
daa
mov
out
pop
xor
mov
push
inc
sub
lcall
pop
leave
lret
or
and
push
testb
xchg
add
js
mov
jne
push
repnz
jbe
fbstp
dec
xorl
sahf
jmp
and
jne
leave
ss
push
rclb
jmp
mov
jl
dec
cmp
ja
test
xor
pop
xor
jo
test
sub
pop
std
mov
imul
js
dec
sbb
or
jo
sbb
scas
in
nop
mov
xchg
mov
call
addr16
or
xchg
or
ret
inc
push
and
mov
xchg
xchg
std
xchg
push
fimull
cmp
jmp
pop
subb
mov
movsw
fwait
loop
ljmp
lea
or
mov
pop
mov
aas
lcall
into
scas
fs
or
xor
outsl
int
or
lods
push
add
repnz
pusha
push
test
jae
sti
pusha
jne
jecxz
mov
mov
pop
jo
inc
int
pop
sub
inc
ret
pushf
adc
sub
add
pop
adc
imul
shrl
test
cwtl
push
testb
lcall
mov
inc
test
add
jp
insb
cmp
test
xor
or
mov
jmp
or
lret
xchg
jmp
mov
push
outsl
out
inc
dec
push
arpl
movsb
jbe
mov
imul
aaa
lret
sbb
jg
sbb
scas
fdivrs
mov
ret
out
arpl
pop
mov
ret
into
xchg
add
jae
arpl
inc
push
adc
or
inc
and
pop
daa
ror
arpl
xchg
nop
and
xchg
sbb
lea
mov
imul
sub
imul
dec
lock
dec
pop
dec
insb
shrb
lods
int
xchg
jb
cmp
jns
xchg
adc
sti
xlat
pop
mov
xor
and
stos
cltd
ja
xor
popl
sub
dec
push
pop
hlt
dec
loop
sub
jmp
shr
popf
xchg
mov
mov
loopne
clc
lock
out
ljmp
jecxz
jno
nop
roll
into
inc
sub
mov
pop
cmp
cmp
push
loop
xor
and
push
inc
nop
mov
push
inc
push
xchg
cwtl
jg
clc
popf
lahf
and
cmc
sar
cmp
inc
lahf
out
pushf
dec
cmc
jge
dec
and
ljmp
mov
mov
dec
cli
jae
lock
lea
adc
popf
enter
fldenv
test
stc
mov
addl
jg
ficomps
out
stc
lahf
jl
jg
fdivrl
in
inc
inc
cmc
popa
mov
shlb
jge
sbb
xlat
jne
mov
cmc
dec
sub
cmp
cmpsb
or
test
sub
or
je
aad
mov
out
stc
loopne
xchg
push
lcall
mov
cmp
iret
fsubs
mov
xchg
shrb
dec
and
sahf
add
cmc
ret
jge
imul
pop
or
push
pushf
lcall
inc
aas
sbb
push
mov
mov
leave
orb
clc
and
dec
inc
movsb
lea
aam
mov
jle
fwait
sarl
rolb
jbe
mov
daa
mov
shll
lds
dec
or
jle
sti
subb
adc
in
shrb
fcomps
and
ret
andb
jge
lret
mov
aaa
xrelease
bound
pop
addr16
and
dec
mov
shll
in
adcb
mov
push
in
jecxz
iret
jp
cli
sub
xor
mov
and
mov
inc
or
pop
into
cmp
cli
xlat
stc
leave
or
pop
gs
fcmovnb
shlb
adc
cmp
xor
aad
push
push
or
jg
das
and
insl
subl
dec
fistpll
or
out
pop
mov
xchg
dec
imul
add
dec
jmp
int3
ds
insl
jno
cld
xchg
fs
addr16
xor
mov
inc
loopne
mov
lahf
xlat
fwait
mov
imul
jg
scas
cwtl
pushf
sub
mov
add
rcrb
pop
jnp
mov
pusha
lea
pop
ret
bound
sbb
and
lret
fucomp
push
pop
xor
pop
inc
ror
adc
inc
movsb
cli
xor
clc
lock
jle
mov
pop
push
in
out
cmp
push
filds
push
adc
arpl
jle
jmp
cmp
push
aas
fisttpll
movsl
pop
lds
dec
push
sbb
mov
mov
xor
jne,pt
clc
cwtl
loopne
sbb
sub
idivb
jp
xchg
add
add
pop
lods
sub
out
imul
push
call
fildl
lods
rcr
daa
xchg
cld
mov
dec
pop
out
xchg
or
xchg
sbb
xorb
aas
add
ljmp
cmp
xor
cmp
or
cmpsl
sub
inc
add
dec
inc
jecxz
dec
int3
into
xor
or
mov
mov
fidivs
ds
shll
cli
out
in
jb
loopne
mov
sub
adc
xchg
add
sahf
xchg
mov
xchg
loopne
jno
stos
pop
adc
lods
ja
xor
or
imul
jae
ret
xchg
inc
adc
pop
pop
add
testl
inc
jmp
jbe
lahf
mov
bound
jno
cmpsl
mov
nop
pop
xor
lret
into
arpl
bound
test
add
fwait
repz
ljmp
icebp
and
fstpt
lcall
dec
test
popf
or
and
popa
std
ret
mull
cmp
dec
dec
pop
mov
xchg
das
or
outsb
lea
jecxz
or
ds
gs
shr
jge
jmp
jge
mov
lret
cmpb
mov
mov
lret
xchg
out
andl
or
and
and
or
sti
cmp
xor
dec
loopne
mov
jb
adc
scas
lret
mov
sar
xchg
stc
inc
lea
mov
and
jno
clc
out
clc
incb
push
outsw
loop
xchg
sub
gs
std
pusha
or
sub
cwtl
mov
jecxz
and
insl
xor
sbb
mov
std
je
cmpsl
jmp
cltd
and
add
rcrb
mov
sbb
jb
inc
in
fcmovnbe
mov
and
sub
fincstp
call
dec
orl
icebp
xchg
cmp
add
jb
daa
jno
movl
cmp
inc
jae
pop
lods
idivl
sbb
sub
in
out
rol
into
lahf
and
ds
jmp
inc
lahf
out
lret
inc
fidivrs
or
add
popa
mov
push
push
jbe
mov
arpl
imul
xchg
into
inc
push
je
mov
dec
mov
xchg
adc
pop
xchg
mov
pop
into
jle
sti
and
inc
jbe
pop
xor
gs
adc
push
mov
push
adc
adc
stos
clc
cmpsl
out
pop
sub
cs
enter
mov
rcrb
ficoml
scas
mov
cltd
cmp
movb
rclb
add
cwtl
int3
out
mov
pop
in
in
mov
std
int
repz
dec
adc
dec
into
fldcw
adc
mov
jmp
rcrl
mov
lea
inc
adc
arpl
dec
cmp
jl
sbb
out
pusha
add
movsl
or
xlat
test
xchg
test
stc
xchg
insl
and
addr16
and
dec
pop
cwtl
or
mov
pusha
mov
imulb
jmp
adc
shll
aaa
fstps
loop
int
cmp
int
xchg
movswl
mov
bound
xchg
jp
in
std
dec
jne
xor
mov
sub
mov
push
call
notb
jbe
ss
jo
xor
inc
mov
cmp
enter
sub
bound
xor
pusha
adc
test
mov
fsts
cmp
nop
push
jbe
enter
pop
mov
push
rdmsr
pop
mov
icebp
test
stos
inc
mov
ret
call
or
loope
push
outsl
cmpsb
mov
push
inc
and
aam
jb
dec
outsl
arpl
lock
subb
int3
xlat
loope
mov
enter
decb
incb
in
cmp
or
cmp
into
dec
cld
or
mov
adc
adc
inc
insb
enter
outsl
les
jg
out
aad
lock
imul
sub
lret
jno
mov
push
pop
lret
adc
repnz
add
mov
leave
les
cmc
sbb
addb
and
mov
shlb
pushf
push
xchg
call
outsb
sub
sub
ja
mov
inc
dec
pop
aas
mov
cmpsl
jp
outsl
pop
cmp
adc
cli
dec
sbb
insb
mov
sti
lods
mov
pop
cmpsl
mov
out
cmp
dec
inc
insb
ljmp
pop
jb
cs
mov
adc
int
movsl
in
insl
mov
add
pop
sub
cmp
and
jbe
pop
std
dec
cmp
aaa
ror
daa
sbb
test
xorl
ja
out
mov
call
jl
jo
mov
dec
out
leave
or
pop
pop
or
nop
xchg
lock
cs
mov
add
lcall
iret
pop
les
cmp
aaa
push
repz
or
out
xchg
test
mov
dec
movsl
and
ss
sbb
outsb
sbb
add
jmp
and
sub
ljmp
arpl
dec
rorl
pop
mov
mov
mov
cs
int3
mov
pusha
mov
mov
mov
pop
and
pushf
dec
test
push
sbb
mov
lcall
mov
xchg
dec
lea
and
xor
dec
shll
loopne
inc
pop
push
orb
add
xor
imul
xchg
ret
push
mov
sbb
roll
ss
mov
test
sarl
mov
cmpsl
xor
push
std
mov
in
cmpsb
scas
out
ljmp
push
push
decb
xchg
and
adc
adc
aam
cltd
xchg
into
cmp
pop
jl
test
lea
dec
pusha
sub
jae
xor
shrl
adc
pop
add
popa
lods
sbb
cs
lahf
lret
adc
data16
push
adc
scas
lret
pop
and
push
test
lcall
or
push
mov
mov
sbb
mov
cld
cmp
cwtl
and
add
or
insl
repnz
sub
pop
mov
clc
lods
cmp
push
jbe
pop
pop
lea
jge
inc
pushf
cmc
scas
cmp
call
fiaddl
jns
dec
loopne
jb
pop
dec
sahf
cmpsb
mov
inc
int3
rcrl
add
std
test
ds
pop
pushf
mov
add
xor
add
ljmp
adc
pop
mov
lock
mov
dec
lock
fimull
pusha
dec
mov
mov
lret
push
jne
mov
dec
sbb
cltd
insb
or
fistl
mov
adc
lods
inc
mov
push
ret
pop
adc
cwtl
rcrl
cmp
fmuls
add
clc
in
pop
dec
jg
shll
push
add
inc
arpl
ja
cld
movsl
daa
mov
push
lods
decb
into
inc
loop
lock
test
xor
movsl
pushf
jmp
or
test
popf
lods
scas
and
or
fcompl
ja
jmp
jo
insb
push
subb
mov
cld
jbe
and
push
add
sub
cmpsb
addr16
loopne
mov
das
inc
jae
dec
in
xlat
scas
pop
insb
cmp
fstl
jnp
and
mov
cmc
test
push
pop
mov
jbe
dec
push
rcl
pushf
xor
cmc
sub
xor
xchg
push
jmp
mov
xor
and
mov
imul
fs
jmp
pop
push
lock
cld
insl
jae
scas
call
cmpb
inc
dec
add
adcb
pop
adc
loopne
mov
aaa
scas
push
rcrl
mov
pop
mov
les
dec
mov
mov
jmp
into
leave
and
fucomip
addr16
jne
xchg
std
icebp
xor
mov
adc
and
dec
lods
test
pop
aas
mov
mov
mov
push
outsb
push
nop
pop
cmp
jae
pop
cmp
dec
mov
test
gs
mulb
in
pop
jl
mov
adc
inc
xor
jae
jp
or
leave
inc
jmp
add
sar
mov
mov
aad
insb
xor
mov
insl
pop
pop
test
inc
ret
xor
scas
mov
lods
and
test
shll
addl
gs
test
jb
out
mov
addr16
and
and
out
mov
clc
outsb
std
jne
in
into
jne
push
cmp
js
or
hlt
inc
out
cwtl
notl
sub
mov
loope
out
adc
jns
movaps
or
cmp
push
cmc
and
xchg
popf
loop
stc
xor
movsl
arpl
lahf
test
insb
dec
cmp
cmpl
xor
jge
mov
push
mov
call
push
rorb
lret
or
imul
or
in
and
push
sbb
int
and
imul
jb
insb
dec
cmp
mov
lcall
gs
outsb
xchg
sub
push
push
push
scas
push
ja
push
lret
mov
mov
movsl
pop
or
xchg
fisubrl
out
dec
stos
ss
in
push
cmc
and
adcb
pop
xchg
push
hlt
xor
icebp
lret
add
popf
cmc
cli
inc
inc
stos
jne
sbb
xlat
aam
in
mov
std
fisttpll
xchg
xor
rol
fdivrl
out
cmpsl
lahf
jg
cmc
pop
repz
xchg
add
mov
and
rcr
dec
sub
and
adc
insb
or
call
out
rorl
pop
mov
mov
cmp
mov
data16
cmp
jae
notl
sub
pop
mov
push
or
jg
mov
inc
insb
in
iretw
jno
fimull
mov
outsb
std
add
sub
dec
dec
or
sub
in
inc
addr16
xchg
insb
push
scas
inc
ret
pop
arpl
jmp
xlat
xor
push
mov
mov
or
loope
xor
xor
jge
adc
mov
lcall
test
jb
jmp
cmpsb
scas
or
jns
mov
fsubs
mov
mov
test
adc
sub
in
dec
and
dec
sub
sbb
ds
xchg
inc
cmp
xchg
mov
xorb
jnp
cwtl
outsb
fmull
add
jp
subb
xlat
lock
jmp
mov
inc
and
jmp
sbb
adc
or
gs
dec
in
xor
xchg
xchg
cmp
jg
sub
xchg
loopne
cmp
std
jns,pn
ljmp
mov
add
aas
mov
jns
mov
xor
mov
bound
int3
out
cmpsb
addr16
xor
cmp
push
mov
clc
cmp
std
scas
inc
sbb
cmp
mov
mov
xor
xor
ds
leave
xor
sub
cmp
or
out
mov
fwait
enter
or
dec
ds
cmpsl
and
fldt
cld
fnstcw
fucom
mov
pop
dec
loopne
xlat
pop
hlt
and
fidivrs
xchg
lret
daa
sbb
add
or
pop
sub
ficoms
mov
sbb
in
xchg
mov
cmp
ror
adc
jg
and
or
push
pop
adc
popf
movsb
mulb
pop
mov
jecxz
addr16
insb
push
je
cmp
loope
dec
clc
pop
lret
es
aas
sub
dec
fimuls
or
in
inc
dec
cmp
setb
rcrl
pop
cmp
insl
pushf
ss
shrb
mov
lret
sub
cwtl
dec
mov
sbb
imul
divl
sub
add
add
pop
push
js
jb
pop
sbb
push
jmp
mov
inc
pop
mov
setne
jge
adc
andb
aad
idivb
add
in
test
into
aas
sbb
or
out
or
jno
cmp
lods
jns
sar
fldl
jae
mov
mov
mov
stos
mov
lea
xchg
lret
adc
mov
jbe
lock
iret
fbld
xor
adc
add
loope
shrb
pusha
jecxz
push
sbb
inc
pop
pop
test
push
ret
fwait
mov
and
dec
push
jecxz
inc
inc
jmp
lods
sbb
dec
testl
or
repnz
dec
adcb
push
int
in
and
add
xor
add
lahf
fidivrs
outsl
jecxz
xchg
mov
pop
mov
mov
inc
cld
mov
dec
inc
jbe
push
negb
lahf
mov
push
ficompl
jno
xchg
jl
cli
fcmovnbe
dec
add
or
jb
pop
jnp
xchg
sti
add
lods
jmp
sbb
jno
mov
or
inc
movsl
adc
xor
mov
addr16
stos
xacquire
repz
xchg
mov
or
rcrb
and
sub
jp
sub
push
jecxz
sub
jg
ficomps
in
jge
jmp
dec
fs
filds
insl
fldl
idivb
and
loope
out
inc
je
repz
ds
lea
iret
mov
jbe
jg
xor
jno
data16
mov
test
pop
ret
and
in
js
inc
cmc
jns
mov
xor
jle
out
or
add
in
into
pop
test
test
and
gs
test
divb
imul
mov
sbb
icebp
jg
lods
and
adc
push
dec
push
mov
sub
mov
pushf
jne
lahf
inc
mov
and
movsb
adc
mov
insl
xchg
imul
xchg
jbe
and
xor
into
pop
inc
jb
shl
add
sub
push
stc
ss
inc
test
inc
add
add
jle
jae
or
test
cmpsl
jmp
or
xorl
xor
adc
mov
mov
aad
mov
pop
addr16
test
mov
push
int3
jno
dec
out
jp
sbb
push
sahf
xchg
jns
sbb
xor
mov
add
inc
icebp
sbb
insb
shrl
fstpl
sbb
es
mov
mov
push
popa
xchg
scas
popa
mov
adc
arpl
testb
sbb
sub
jbe
sub
pop
sub
jno
daa
add
les
lock
cmpsb
push
jle
push
inc
in
fnstsw
fisttpll
mov
lret
ret
mov
dec
pcmpeqd
repz
adc
js
test
stos
andl
push
stc
xor
ja
mov
popf
mov
jne
push
mov
mul
dec
inc
fisttpll
lcall
push
sbb
ror
push
int
es
aam
repz
loope
push
dec
shlb
dec
xchg
testl
js
push
sub
pushf
inc
sub
dec
jg
add
jbe
les
aad
lcall
xchg
in
rorb
mov
call
add
es
cld
inc
mov
mov
fstl
fsubs
aas
mov
xchg
pop
lahf
sbb
pop
adc
unpckhps
dec
cmp
add
xor
dec
mov
sbb
adc
int3
mov
xchg
pop
xchg
pop
xor
dec
mov
mov
xchg
mov
dec
mov
jns
je
mov
addb
cmp
lahf
pop
push
sti
dec
in
scas
mov
cmpsl
mov
and
lock
rorb
cmp
or
repz
push
lret
arpl
push
mov
push
or
pop
pop
leave
sti
sbb
inc
stc
or
jl
in
or
cmp
mov
cmc
pop
mov
xorl
out
and
or
addr16
daa
andl
cmp
lcall
aam
xchg
push
addr16
cli
mov
push
add
lret
repz
sub
in
xor
jbe
call
pop
mov
orb
push
pop
add
pop
jbe
adc
mov
pop
out
int
pop
adc
les
bound
movsb
insl
pop
les
inc
fstpl
stc
cld
cltd
xchg
sbb
fwait
in
mov
sarl
lods
push
cmp
mov
sub
arpl
out
adc
push
or
sbb
leave
rorb
sti
jnp
mov
cmp
jge
inc
fstpt
add
shll
cmp
frstor
dec
es
pop
xor
movsl
mov
lods
loop
stos
repnz
inc
mov
nop
lcall
test
jl
push
add
jmp
dec
sti
outsl
aaa
ljmp
lahf
push
and
lods
pop
jecxz
jnp
dec
repnz
aaa
addl
out
ret
mov
jno
sub
cmpsl
adc
jle
and
jns
inc
clc
cwtl
push
xchg
insl
cwtl
xchg
cmp
daa
je
popf
pop
lods
inc
pop
enter
cld
filds
rorl
daa
movsl
ja
lahf
cmp
in
adc
popf
stos
mov
pop
aas
call
xchg
ljmp
lods
pop
loopne
popa
js
and
and
lock
sub
rcll
mov
repnz
iret
mov
fists
push
sub
pop
cwtl
out
adc
lcall
jl
jecxz
js
hlt
xchg
sbb
cmp
pop
cmp
out
inc
fisubrl
sti
inc
jmp
fdivrs
push
lods
lcall
icebp
into
or
push
dec
jne
push
out
mov
imull
test
push
sub
xor
jnp
popa
jp
movsb
shlb
cmp
mov
sahf
lahf
dec
inc
int
les
gs
add
mov
xchg
sbb
jbe
mov
and
and
pop
sbb
rcrl
push
jbe
mov
scas
fcom
orb
and
dec
out
imul
aas
mov
shll
mov
and
rcr
and
adc
mov
jg
movsb
jbe
dec
or
je
sti
leave
dec
loope
and
fisubl
sub
jmp
je
mov
pop
mov
scas
ret
sbb
jmp
arpl
adc
xchg
popf
mov
sub
mov
or
mov
sub
in
mov
push
fsubs
cltd
loop
int
add
adc
jne
cltd
bound
cld
jno
and
adc
adc
faddl
lods
mov
mov
xor
xor
aas
jbe
test
cmpsb
xorb
lock
dec
and
in
push
les
mov
fiadds
in
xor
adc
sub
push
dec
arpl
push
xor
add
xor
sar
cmp
pop
imulb
jmp
imul
test
xchg
or
mov
xor
lods
icebp
pop
jae
ficoml
add
jmp
daa
xor
dec
sub
sbb
mov
jne
add
ss
mov
push
aaa
popf
jle
xchg
inc
int
xor
hlt
sbb
sti
pop
mov
hlt
mov
call
mov
popf
dec
adc
popf
lock
or
sbb
jbe
or
enter
xor
enter
stos
inc
testb
shl
gs
aaa
scas
dec
mov
push
jb
rcl
jmp
jbe
xchg
movsl
mov
adc
fimull
xor
cmp
shr
aad
or
pusha
test
lods
and
cmp
outsb
add
mov
loopne
stos
inc
movsl
xor
sbb
jne
jle
xchg
adc
aad
je
pop
aad
pop
push
jbe
xchg
mov
jb
pusha
jl
or
mov
push
ljmp
push
mov
adc
sub
xor
sub
cmpps
adc
movsl
loop
test
and
jb
or
fcoml
or
ret
xchg
adc
push
jmp
stos
iret
inc
pop
ja
fidivs
nop
mov
adc
clc
adc
push
je
into
jg
sti
int
in
lds
dec
leave
repz
outsb
adc
pop
lcall
push
js
dec
andb
or
mov
vpunpckhdq
xchg
mov
xor
lahf
hlt
cmp
repz
or
pop
inc
sbb
jl
ret
xor
pop
xor
cmpb
jns
fdivr
push
push
rcrb
cs
cld
mov
insb
push
mov
xchg
cmp
jl
inc
ficompl
jno
cmp
xchg
jb
mov
js
fs
out
push
repz
mov
dec
hlt
fldt
push
std
dec
pop
fstpt
popa
add
enter
push
inc
pop
incl
add
xor
push
mov
mov
idiv
ficoms
and
mov
sbb
add
lahf
xchg
fcomps
sbb
les
or
cli
int3
out
icebp
sarb
cmp
cmpsb
pop
das
sarb
jae
mov
out
icebp
mov
xor
ljmp
insb
ret
fildll
inc
inc
into
inc
lods
jecxz
or
cwtl
xchg
loop
and
mov
cmc
xchg
dec
lcall
mov
xor
xor
xchg
mov
outsl
sub
daa
scas
inc
push
popf
jp
aas
roll
jecxz
bound
ljmp
dec
test
add
out
or
ret
sub
xor
sbb
cli
sti
aad
jl
xor
xchg
roll
xchg
mov
lods
sub
push
out
das
sub
sbb
jns
adcb
scas
inc
pop
sbb
and
lods
pushf
mov
mov
imul
jl
add
inc
jno
cmpsl
or
icebp
lds
cmp
leave
add
sbb
mov
flds
mov
scas
int3
cmp
inc
or
shr
test
or
mov
mov
xchg
dec
mov
scas
imul
loop
push
xchg
xor
adc
jge
push
or
imul
add
leave
mov
stos
cmp
lods
xchg
mov
inc
dec
loope
mov
orl
jp
test
inc
pop
xchg
push
push
int
add
mov
test
outsb
xchg
mov
cld
lock
arpl
mov
adc
cmp
lods
cmp
out
outsb
pop
rorl
push
push
in
gs
mov
jl
pop
cld
outsb
xchg
xor
sub
or
mov
xor
ss
lret
inc
sbb
or
pop
in
das
sbb
imul
scas
lds
adc
cmp
cld
call
push
out
cmp
mov
out
test
push
das
pop
leave
xchg
outsb
push
cmp
mov
push
jnp
jmp
cmp
imul
scas
or
andb
mov
in
nop
or
lea
insl
pop
and
cmp
js
jecxz
xor
jg
es
mov
sbb
pop
or
pop
imul
ja
rorl
jecxz
xchg
cmp
push
push
into
sbb
and
cld
sbb
cmpsb
ljmp
sub
xchg
push
cld
or
sbb
out
jns
in
add
mov
inc
fsts
push
mov
push
mov
lret
or
cmp
scas
mov
xor
popa
sbb
cmp
inc
fmull
sub
jge
xor
int
sub
inc
add
inc
sbb
jo
stc
inc
mov
lret
sbb
sbb
pushf
mov
mov
test
mov
dec
xor
dec
sbb
pop
cld
scas
and
inc
cmp
orl
pop
rorl
add
cmpsb
in
pop
popa
imul
mov
aaa
lahf
lret
scas
scas
push
jmp
push
push
push
xchg
lret
mov
ret
push
sbb
arpl
cli
fs
mov
stos
insb
cmp
fnstsw
sbb
mov
push
or
cmp
sbb
sub
icebp
jg
pop
cmp
in
adc
xlat
sti
mov
mov
test
cltd
lcall
add
imul
test
into
addr16
sbb
popa
daa
data16
lcall
jmp
je
ja
mov
inc
stc
scas
movsl
mov
cmpl
mov
dec
sub
cmp
in
adc
inc
push
pop
ljmp
sti
lret
mov
daa
addr16
sub
pop
sub
lock
outsl
rcr
and
jns
into
in
sub
add
imul
sbb
cmpsl
sbb
adc
push
mov
mov
inc
mov
fdivs
pop
nop
bound
mov
daa
fists
adc
cmp
mov
movsb
lock
in
push
sbb
clc
xchg
sub
enter
xchg
sub
dec
dec
mov
or
dec
xor
ss
popf
xchg
inc
and
pop
push
arpl
repnz
mov
icebp
fldt
imull
dec
in
add
cmpsb
not
push
xchg
lods
mov
sahf
or
outsl
out
inc
adc
or
dec
dec
mov
jae
cmpsb
jge
push
iret
sbb
add
in
lcall
iret
dec
mov
imul
mov
xor
popa
inc
jl
dec
sbb
xchg
mov
in
jnp
xor
data16
repz
testl
fwait
imul
scas
sub
mov
inc
sbb
or
aad
test
jle
or
cmpl
or
add
push
arpl
and
test
inc
xor
push
ja
jg
xchg
xor
dec
je
push
leave
filds
sbb
pop
push
lea
repz
xchg
dec
out
ficoms
push
js
inc
ljmp
rcrb
xchg
xor
out
mov
xchg
adc
gs
jmp
dec
push
fwait
sub
jecxz
lea
fcoms
out
sbb
and
popf
call
test
repnz
cmp
sbb
outsb
test
pop
pop
ds
pop
jge
adc
dec
jge
and
xchg
pusha
cs
push
stos
xlat
pop
das
pop
cmpsb
sub
hlt
inc
mov
stos
xor
or
sub
cld
stc
nop
sub
mov
cmp
cmp
scas
xor
cmp
or
jle
pop
jae
xor
movb
scas
mov
cmpsl
lods
enter
sbb
push
imul
fcomp
xchg
jp
push
mov
push
xchg
scas
fsubl
xchg
inc
repz
in
into
lret
imulb
lcall
jg
adc
lods
sbb
dec
and
pop
or
ja
clc
or
icebp
and
sub
adc
leave
xor
mov
add
mov
add
jmp
or
mov
push
cmp
mov
dec
xor
decb
les
inc
mov
xchg
stc
fs
jno
xor
mov
ret
leave
scas
iret
jl
and
xchg
mov
push
jns
mov
filds
outsl
push
andl
in
push
nop
push
mov
fcomip
aad
test
and
ret
das
cmpsl
xlat
lea
push
sbb
pop
push
sub
sbbb
pusha
rol
xlat
sar
stc
call
shlb
jg
inc
incl
aaa
and
cmc
scas
jle
mov
jp
in
imul
imul
test
jle
jp
mov
lock
aas
cwtl
cmp
dec
and
das
and
mov
scas
sbb
std
pop
fsubrl
popa
pop
stos
mov
fs
inc
sub
pop
fsubrs
mov
mov
popf
rorl
push
not
scas
incl
xchg
and
push
sarl
push
aaa
cmpsb
pop
out
jae
in
push
mov
rol
or
in
lcall
repnz
fmuls
test
xchg
pop
ja
iret
in
ja
sbb
ficoms
pop
xor
fldcw
mov
jns
xlat
xor
loope
scas
mov
out
test
push
ret
lods
scas
sub
mov
pop
push
dec
cmp
in
cvtpi2ps
cld
rol
inc
gs
shlb
adc
das
cmpsl
mov
mov
test
xchg
cwtl
stc
orb
cmp
push
lock
lods
jecxz
std
ss
xor
imul
and
test
andl
and
ja
arpl
jmp
xor
add
shll
push
inc
movsl
push
test
adc
adc
push
out
and
cmp
mov
pop
arpl
ljmp
xchg
mov
dec
and
sbb
jmp
mov
imul
mov
or
jbe
loopne
push
xchg
mov
aaa
dec
xor
xchg
or
jecxz
testl
push
adc
pop
test
ror
hlt
cmpsl
lods
cli
push
addr16
push
ss
es
mov
add
outsl
pop
bound
sub
enter
leave
je
cmpl
jbe
cmc
daa
imul
adc
popf
add
js
fldl
cmpsl
adc
lock
iret
or
jecxz
push
jl
xchg
movsl
clc
ret
cmp
and
cmpsb
rcll
jns
push
jae
jo
mov
add
pushf
stc
je
dec
bound
outsl
pop
std
mov
cmpsb
xorl
cmpl
fisttpll
sub
fxch
pop
add
iret
cmp
xchg
adc
insb
xchg
mov
sub
mov
cmpsb
ret
inc
dec
pop
pop
jl
lock
inc
jl
jae
bound
arpl
decb
insl
dec
fwait
pop
inc
pop
add
stos
add
dec
push
dec
dec
cmp
shl
loope
scas
mov
add
dec
mov
repnz
es
adc
jae
imul
cltd
les
push
loop
insb
test
mov
cmp
ret
dec
sub
jbe
popf
sub
sub
cmp
gs
loope
and
or
mov
push
xor
sbb
sbb
pop
out
jne
dec
mov
ret
sbb
hlt
mov
inc
add
jmp
xor
fcmovnbe
ss
inc
xchg
inc
aad
data16
rclb
xchg
cmpsb
mov
stos
andl
jae
push
sarb
popa
sub
or
mov
dec
push
fs
sub
testl
push
lock
dec
fildll
fwait
scas
movsb
inc
rolb
mov
sbb
fisttpl
lret
cld
inc
push
sbb
gs
orl
inc
mov
fisubl
les
subb
pop
jle
fwait
insl
sbb
jle
loope
lret
cli
test
jmp
lock
sar
es
mov
jg
ret
xor
out
icebp
ret
sub
scas
mov
lea
shrl
in
arpl
add
pop
pop
sahf
adc
xchg
push
xchg
ds
mov
jle
sbb
lfs
pop
jmp
pushf
mov
es
lahf
mov
jge
dec
pop
addb
lret
pop
stos
xor
rcll
aaa
adc
cmc
out
dec
sub
hlt
out
push
daa
push
out
inc
push
xchg
and
jmp
shll
es
repnz
test
mov
je
fldt
pop
push
sbb
sub
push
xor
pop
imul
cs
push
ret
les
mov
add
mov
popa
sub
push
push
leave
sbb
and
dec
xor
stos
mov
push
dec
faddl
into
and
shrb
pop
leave
or
cld
call
cmp
mov
shr
sub
in
xor
push
js
xor
test
pop
lods
hlt
jnp
call
dec
pandn
mov
xor
mov
fucomip
sbb
fidivrs
daa
outsl
sbb
je
ss
gs
mov
out
in
cwtl
sbb
in
sub
call
xor
cs
cmp
inc
push
push
jb
aam
push
xor
cmp
sbb
push
cmpsl
movsl
mov
jne
adc
cmp
shl
ds
data16
inc
or
xchg
jle
pop
lock
mov
shlb
pop
pop
cmp
dec
cmp
cmp
jns
pop
scas
add
fisubrs
fisttpll
inc
out
addl
sbb
shlb
mov
sub
in
sub
jmp
xor
lea
jns
xchg
jae
enter
jge
add
xchg
inc
xor
mov
js
pop
addr16
hlt
into
pop
sbb
test
sub
xor
mov
lock
push
mov
outsb
mov
test
std
ror
movl
into
lock
dec
ret
adc
popf
loope
lcall
sbbl
cltd
daa
or
in
mov
cltd
adc
test
add
fld
add
or
mov
dec
fwait
mov
mov
xchg
les
xor
inc
mov
mov
and
sub
shrl
inc
test
clc
mov
push
sbb
scas
daa
or
jnp
cld
ja
rorl
aas
stos
mov
je
push
pop
int
ljmp
mov
paddw
insl
cmp
mov
mov
sub
add
push
and
pop
push
test
dec
inc
je
bound
adc
fnstsw
int
push
mov
sti
pop
in
jle
jmp
bound
je
mov
aas
mov
dec
add
sub
out
xchg
ds
mov
pop
mov
ucomiss
in
push
sub
pop
loope
loopne
repnz
das
ficompl
rorl
sub
or
test
cmpsl
mov
stc
nop
ds
push
jb
outsl
insl
lret
cmp
mov
sub
pop
sub
addr16
movsl
pop
xor
sbb
jnp
leave
inc
insb
mov
sbb
lea
imulb
rcr
xchg
int3
aas
lods
mov
test
lcall
fucomi
push
push
mov
idivb
add
xchg
mov
pushf
decb
or
jo
sub
cs
mov
mov
adc
std
push
jecxz
or
mov
lods
ficoms
vshufps
pop
push
call
lret
adc
xchg
sub
or
loope
rolb
cmc
and
int
aad
loope
in
sub
add
xchg
push
dec
imull
cs
adc
mov
hlt
test
aam
adc
cmpsl
sub
push
aaa
out
jo
inc
mov
jmp
jmp
and
or
inc
cld
addl
xor
out
into
jns
pop
lock
add
les
pushl
scas
jb
sub
aad
shll
ljmp
repnz
aas
ds
cmp
jge
shl
mov
insl
xlat
mov
out
add
add
sahf
adc
inc
xchg
lods
inc
lock
les
mov
sahf
adc
or
loope
xor
adc
mov
sub
xor
mov
dec
xor
notl
aam
xchg
jg
cltd
mov
cmp
loope
push
dec
arpl
cmp
lahf
insl
imul
mov
insb
xchg
mov
push
mov
and
add
mov
lret
outsl
lds
mov
dec
mov
push
add
ja
ret
cmp
cmc
xchg
pop
loopne
adc
fs
in
pop
cmp
push
lahf
jne
aad
or
adc
fimuls
sub
inc
pop
sbbl
mov
das
jecxz
imul
mov
imul
dec
push
sbb
jns
enter
adc
dec
rol
pop
imul
xchg
fwait
adc
mov
xchg
sahf
pushf
scas
cmp
dec
out
leave
ret
adc
movsb
hlt
imul
push
fsubp
mov
sbb
out
push
inc
xor
lahf
mov
xchg
inc
pop
sub
cwtl
push
pop
inc
fwait
push
push
add
adc
xor
leave
mov
mov
mov
and
jge
push
mov
icebp
mov
jo
lods
mov
jbe
jae
das
hlt
xchg
xor
shlb
dec
push
fists
pop
sti
mov
aam
mov
jl
inc
shl
inc
sbb
cli
insl
jnp
mov
and
mov
xchg
ds
repnz
push
scas
sub
push
jo
mov
fidivl
jecxz
xor
dec
daa
jbe
js
loop
pusha
push
jecxz
subb
jmp
arpl
aam
xchg
aam
add
call
dec
aad
pushf
add
aam
loop
adc
les
in
mov
int
arpl
insl
movsb
adc
mov
imul
fsubrp
or
les
add
adc
dec
flds
dec
dec
jge
mov
mov
xchg
adc
mov
sub
dec
sbb
in
mov
and
int
ja
inc
cmp
inc
inc
lods
fidivrl
lds
leave
fmul
jbe
and
les
sarl
rolb
ret
sub
jl
add
sub
inc
pushf
jne
jp
ja
add
out
jecxz
jo
mov
sub
jecxz
aas
or
mov
pop
xchg
jmp
mov
add
sbb
sarl
into
in
jno
xchg
dec
mov
jne
xor
pop
jmp
arpl
loop
sti
in
es
sub
shl
cmp
mov
lcallw
ror
pop
lret
lret
add
push
jne
xor
in
filds
shll
and
and
rolb
out
add
dec
subb
test
jle
pusha
cmp
add
int
aaa
aad
sbb
mov
scas
ja
push
mov
fs
data16
xchg
xor
xor
mov
inc
in
push
and
mov
or
jmp
mov
pop
sub
test
into
inc
mov
jne
mov
mov
inc
mov
and
in
xchg
push
fadds
pop
xchg
arpl
test
popf
in
out
cmc
daa
inc
sar
and
inc
scas
sbb
repz
lock
push
pop
lahf
jo
ret
mov
inc
pop
popf
sbb
pop
lret
pusha
jnp
roll
cmpsl
mov
das
iret
jp
imul
repnz
in
mov
mov
icebp
xchg
push
ss
in
cmp
std
adc
dec
aaa
dec
xchg
sti
int3
je
lahf
xchg
mov
and
mov
push
jae
sub
insl
lods
loop
and
sbb
fstpl
ret
pop
les
cmp
cmp
push
cmp
inc
sbb
sbb
inc
inc
testl
cmpsb
inc
adc
mov
mov
jge
mov
popf
push
inc
pop
imul
into
fidivs
sahf
jge
add
dec
sbb
and
mov
mov
int3
sbb
jae
jne
les
sbb
ja
fadds
test
fstpl
push
nop
icebp
outsl
popf
adc
add
ret
inc
push
les
push
xchg
mov
imul
sarb
test
jmp
les
push
sub
lea
xchg
jne
aam
sub
in
pop
pop
xchg
lret
outsb
xlat
in
ret
shl
fmul
lahf
cmpb
cmc
fstl
inc
push
inc
les
adc
mov
add
push
cltd
adc
test
mov
insl
call
push
adc
rcrb
mov
add
dec
les
mov
mov
lcall
repnz
mov
lret
push
and
sbb
lock
mov
mov
mov
sbb
jg
adc
mov
and
adc
out
xchg
or
lds
xchg
or
fwait
jnp
xchg
push
mov
xor
inc
pop
es
ljmp
xor
push
sbb
inc
aad
sbb
pushf
lcall
inc
mov
or
repz
lds
aaa
pop
fidivl
lcall
mov
jne
lcall
and
outsb
rolb
inc
xchg
leave
dec
outsb
fwait
push
mov
dec
das
pop
jecxz
cli
dec
fstpl
mov
ljmp
adc
mov
clc
jo
sbb
leave
dec
xchg
xor
test
sbb
imul
movsb
jp
mull
jb
ret
ret
insb
inc
adc
dec
sub
or
mov
push
ret
imul
jnp
fwait
mov
jle
adc
fdivr
aam
xchg
out
fsub
insl
in
and
cmp
faddl
push
cmpsl
or
xor
aad
andb
push
mov
dec
mov
mov
ret
cmpsb
aam
cmpsl
or
out
popa
adc
filds
nop
sub
jmp
cmp
outsb
ud0
cmp
sub
mull
xchg
xchg
sti
lret
lods
jecxz
ljmp
push
lock
leave
xor
test
lcall
push
xor
arpl
xchg
dec
insl
and
pushf
adc
mov
les
dec
pop
xlat
out
push
mov
mov
push
cwtl
ret
mov
xchg
arpl
inc
dec
mov
jge
mov
ffree
test
jnp
add
dec
icebp
inc
and
xor
mov
es
add
shrb
into
xchg
dec
sbb
fs
mov
push
orb
js
push
push
inc
cmp
mov
sbbb
jo
inc
in
xor
dec
adc
jmp
inc
adc
mov
aam
das
jge
push
lret
push
fiaddl
cmp
pop
lret
jbe
fidivrs
dec
rcrb
ss
sbb
mov
push
sbb
insb
dec
cld
pop
repnz
loope
inc
jno
sbb
xchg
jle
sbb
ss
inc
mov
and
data16
nop
call
hlt
jo
add
mov
pushf
dec
fisttpll
imul
cmp
repnz
gs
ss
mov
imul
add
inc
ds
lret
int
pop
mov
stc
insl
sub
imull
xchg
jmp
into
loop
pop
push
jno
add
fwait
fs
lahf
mov
sbb
dec
fimull
mov
lds
push
sub
and
mov
popf
cmc
adc
insl
push
jle
cmp
leave
sbb
addr16
aad
mov
jle
scas
and
loope
lahf
jecxz
cmp
pop
cmp
pop
rcrl
lds
push
sub
adc
ds
in
jp
int
cmp
fisttpll
cmp
xchg
test
or
lock
shl
jo
dec
inc
popf
and
imul
mov
ret
test
fistpll
mov
outsl
dec
mov
mov
frstor
cs
call
jo
mov
push
and
xor
dec
jnp
incb
mov
fs
pop
jo
mov
shlb
push
ljmp
dec
sub
in
xchg
sbbb
cltd
inc
nop
push
jbe
pop
xchg
nop
sub
je
sbb
push
adc
int
or
fwait
push
dec
stc
xchg
dec
sbb
test
rorb
sbb
cltd
stc
inc
sarl
leave
call
daa
sbb
cmpsl
cli
loopne
ret
sarl
bound
xorb
inc
daa
ffreep
out
and
push
xor
popf
dec
in
mov
inc
les
insb
loop
call
jnp
mov
jno
je
ret
call
mov
and
sub
lods
mov
mov
and
scas
scas
mov
xor
pop
cmp
add
rcr
mov
jns
push
out
jge
jne
mov
rorl
imul
cli
push
adc
shlb
mov
arpl
pop
add
int
fdivr
xor
in
imul
pop
call
push
jnp
add
mov
push
aaa
aaa
push
das
sbb
pop
mov
pop
adc
xchg
ret
sahf
loope
jecxz
repnz
lahf
aam
insb
bound
jmp
add
mov
insb
loopne
jmp
std
sbb
dec
mov
sahf
in
into
inc
fcomip
cmp
fs
xchg
push
int3
jne
pushf
push
or
out
inc
pop
test
out
aad
gs
sbb
gs
mov
xor
or
push
sub
or
ljmp
leave
cmc
xchg
push
push
jae
mov
dec
mov
fs
lds
push
pop
xor
xchg
dec
cltd
arpl
jl
bound
ficoms
aad
das
pop
lcall
dec
xchg
xchg
fistpl
sbbb
push
cmpl
xor
mov
jmp
daa
jp
fildl
pusha
sub
sub
faddp
push
cwtl
dec
xor
in
mov
push
add
popa
das
xchg
aaa
sub
inc
int
jae
jne
mov
cmpsl
imul
jb
call
aam
mov
add
imul
dec
pushf
or
jle
adc
lret
leave
mov
nop
adc
lock
arpl
ja
jmp
aas
loopne
cli
pusha
xchg
xorb
mov
cltd
leave
mov
xchg
xlat
clc
mov
mov
push
dec
or
xchg
and
or
cltd
inc
in
js
rcrl
jmp
fsubs
xor
sub
fwait
fs
or
shl
sub
mov
inc
in
insb
inc
lods
insl
sarb
ljmp
sbb
out
push
lock
call
dec
ret
pop
push
ret
add
push
fisttps
int3
repz
cltd
xchg
inc
adc
xor
cmp
or
mov
lock
or
sbbb
xchg
xor
push
adc
cmpb
mov
lret
stos
xor
push
mov
lods
gs
lcall
jp
subb
jge
ja
dec
add
and
pop
and
mulb
out
das
loop
popf
mov
or
or
push
sub
xlat
add
mov
lret
mov
in
ret
inc
adc
adc
imul
adc
aas
jae
mov
push
mov
lahf
stos
mov
test
in
lret
loope
into
das
ljmp
mov
into
pop
in
jmp
stos
push
xchg
pop
sbb
push
pop
pop
loope
xchg
mov
xchg
pusha
popf
mov
stos
je
push
mov
jg
lret
dec
int
and
shl
mov
daa
aam
push
insb
or
scas
mov
aas
stos
jge
lret
fs
addr16
in
out
dec
iret
mov
jge
jae
nop
in
lret
xlat
aad
push
iret
and
ds
lahf
xor
mov
rcll
popa
paddusw
loop
lahf
mov
repnz
inc
add
ss
gs
xchg
cwtl
jp
add
aaa
pop
cmp
push
addr16
leave
divb
test
outsb
cmp
cmovbe
pop
shll
mov
push
dec
push
sbb
jb
call
cli
cmp
lds
pop
dec
and
dec
sti
push
mov
pop
mov
int3
inc
lret
ret
ds
dec
stos
and
mov
jg
push
mov
stc
push
leave
xchg
stos
inc
dec
xchg
push
mov
xrelease
or
xchg
or
loop
cld
xchg
inc
mov
pop
push
add
jle
ljmp
mov
hlt
sub
push
imul
ss
mov
lods
shlb
into
xorl
xchg
pop
inc
adc
lcall
stos
adc
call
fsubrs
push
clc
loope
jl
out
push
fdivl
loopne
fistpl
aas
and
daa
icebp
mov
push
cmp
popf
jno
mov
stos
xor
lahf
jo
mov
lahf
mov
stos
push
mov
filds
and
cmpsb
inc
xor
or
insb
pop
lea
xor
lcall
sbb
je
lret
push
stos
xchg
jl
jb
outsb
test
inc
sub
sub
dec
inc
sbb
in
fs
mov
jne
and
sbb
pop
es
mov
stos
js
inc
or
stos
or
jg,pt
ds
jmp
jmp
ss
xchg
pop
dec
inc
xor
xchg
mov
scas
stos
xchg
inc
mov
test
dec
movsl
dec
xorl
mov
in
push
pop
push
cld
fnstcw
inc
mov
push
movsl
mov
test
fcmovbe
adc
fildll
dec
jnp
fcomps
lock
ss
and
dec
dec
mov
insl
es
xor
mov
popf
outsl
cmp
dec
call
divl
lahf
lock
pop
shrl
push
lcall
arpl
hlt
cli
sbb
dec
jmp
nop
out
dec
mov
ss
adc
jmp
loop
fmul
mov
add
jmp
jecxz
mov
rorb
jo
repz
setb
mov
mov
cmc
xchg
shll
lds
arpl
sub
stos
mov
dec
jns
sub
or
mov
pop
icebp
push
dec
xor
sub
cltd
add
add
pop
add
push
sub
adc
lods
xlat
jl
pop
xor
adc
adc
and
in
ja
aam
mov
pop
jge
lcall
das
repnz
imul
lods
rcll
xchg
sahf
mov
ja
dec
jmp
lcall
bound
xchg
cmpsl
and
lea
sbb
lcall
xchg
and
std
nop
xchg
sub
cmp
or
sub
imul
mov
les
cltd
add
test
es
out
pop
dec
das
insl
out
das
out
loopne
adc
shll
out
pop
sub
clc
adc
lock
leave
and
cltd
adc
in
inc
imul
add
xlat
jb
int
aaa
mov
repz
fs
add
sbb
jecxz
xchg
mov
add
mov
and
xor
loopne
repz
mov
cmp
mov
imul
in
cltd
xchg
ret
pop
mov
adc
add
fstp
or
mov
aaa
cmp
shll
and
pop
or
jmp
mov
sbb
arpl
mov
cmp
cmp
iret
cmp
test
testl
scas
fs
cltd
dec
fwait
out
adc
mov
jno
mov
test
or
rcll
push
jp
call
movsb
sub
xchg
xor
inc
int3
adc
popf
lcall
push
xchg
inc
les
or
pusha
mov
jne
push
dec
sbb
sub
lods
push
xchg
hlt
ret
add
pop
push
pop
adc
outsb
mov
movsb
int
xchg
xchg
push
les
add
out
adc
scas
movsb
xlat
in
or
and
out
adc
daa
cmpsb
icebp
psraw
mov
pop
pop
out
cmp
fs
add
out
cmp
scas
cwtl
cld
cmp
insl
pop
sub
sbb
jecxz
dec
imul
adc
insb
inc
xchg
fsts
mov
aaa
mov
jbe
dec
push
adc
or
jb
mov
imul
xchg
pusha
dec
xchg
stos
mov
or
fucom
mov
xor
rol
pop
push
rcll
pop
pop
cli
push
test
xor
movsb
lret
movsl
sbb
mov
xchg
insb
and
iret
es
ret
in
cmpsl
out
push
and
movsl
rcrb
fildl
add
faddl
rep
or
pop
mov
inc
and
or
push
outsl
sub
pop
bound
add
mov
enter
int3
jns
test
icebp
addr16
pop
and
sub
add
test
test
es
adc
fadds
loope
repnz
push
jecxz
cmp
pop
ret
adcb
inc
test
cs
fidivrs
cmp
sbb
jmp
mov
adc
pushf
enter
mov
stos
push
ds
test
clc
and
mov
adc
jmp
and
movsl
and
and
in
nop
mov
adc
cli
sub
sub
les
int3
adc
cli
mov
popa
push
repnz
arpl
es
into
mov
aas
ret
std
mov
ja
cmpsl
std
fdivl
inc
out
cmp
stc
call
cmp
xchg
mov
dec
das
fidivs
xchg
sti
dec
xor
sub
sahf
test
dec
pop
jecxz
mov
scas
mov
dec
dec
cmp
stc
sti
push
fistps
fidivl
shrl
insb
dec
push
int3
jl
dec
push
lret
dec
popf
lods
push
cmp
or
jnp
adc
not
test
mov
cmc
xor
cltd
xchg
inc
add
push
mov
loop
std
movsb
scas
push
orb
icebp
push
insl
or
into
mov
das
lret
clc
push
dec
inc
popa
mov
and
push
push
imul
or
mov
fidivrl
idivb
pop
lock
stos
int
test
and
shl
add
pop
lock
xchg
repnz
push
int
add
arpl
mov
adc
ljmp
divw
insb
shll
clc
test
xchg
xor
and
test
add
enter
push
dec
repnz
xchg
stc
je
xor
dec
or
repnz
mov
jle
sub
jnp
xor
xchg
push
jp
mov
loope
or
sti
lea
ss
push
jbe
pop
popa
add
outsl
jge
imul
int3
and
outsb
adc
mov
cwtl
ror
dec
sub
data16
lret
adc
incl
mov
fsubrs
jns
xor
daa
inc
jge
imul
iret
xchg
shrl
or
mov
mov
or
xor
pop
hlt
xlat
test
cmp
lahf
mov
xchg
jnp
push
push
icebp
mov
xor
lods
inc
add
lea
shll
mov
add
test
adc
in
or
faddl
ret
das
insl
out
push
lods
dec
pop
inc
xchg
jns
xor
mov
xchg
outsb
adc
jg
jge
push
pop
add
lods
cmc
dec
jl
pop
sub
call
aas
mov
push
inc
mov
cmp
imul
cmp
mov
mov
push
shrb
and
cmpl
jecxz
lock
lock
repz
push
mov
icebp
dec
jo
pushf
mov
bound
in
jmp
bswap
aad
mov
ret
shrb
shrb
addr16
sub
lcall
mov
ret
jae
mov
enter
mov
ret
ud0
jmp
pop
sbb
push
cmp
lock
aas
in
loop
sahf
cmp
icebp
jmp
inc
test
mov
push
cmp
push
call
and
nop
test
clc
cs
incb
stc
mov
jno
idivb
test
cmp
xlat
sbb
mov
push
test
pop
lods
clc
movsb
adc
push
jmp
inc
pop
mov
push
or
mov
shll
aas
dec
push
lcall
ljmp
mov
sbb
cmp
inc
jne
je
cmp
fists
inc
pop
in
in
clc
movsl
cmp
cmp
sub
mov
add
ret
call
fsubr
sub
lcall
frstor
jecxz
sub
test
dec
push
jecxz
sub
pop
adc
xlat
test
test
in
push
sub
aas
pop
and
xchg
das
xchg
and
and
lret
pop
adc
xchg
lods
negb
icebp
aaa
sbb
pop
cs
fldt
push
jg
sti
sub
inc
mov
cmp
mov
imul
popa
in
mov
pop
mov
xchg
jecxz
iret
or
pop
dec
out
call
or
idivl
cmp
xlat
shl
iret
jae
shll
sbb
clc
push
int3
pushf
adc
out
outsl
dec
adc
shll
push
dec
mov
arpl
sub
cmp
leave
sbb
in
xlat
push
fisttps
shr
and
sub
sub
std
faddl
push
adc
jmp
insb
cmp
or
leave
bound
je
xchg
lods
sbb
adc
cmp
addl
inc
xchg
mov
insl
xchg
or
orl
leave
daa
and
pop
cmpsb
inc
pop
sub
xchg
je
and
adc
scas
mov
jo
cli
insb
mov
js
or
mov
call
and
adc
mov
mov
push
mov
mov
xor
mov
mov
pushf
adc
add
cmp
push
fs
jns
addr16
mov
stc
xor
or
inc
mov
and
test
or
cmpl
pop
pop
cmpsb
xor
pushf
fwait
movsb
add
adc
mov
ja
push
or
ret
dec
xlat
pop
imul
insl
les
in
sub
mov
icebp
mov
mov
cmp
sahf
inc
cmpsb
fwait
test
pop
insb
out
jl
mov
mov
xchg
and
ja
sahf
jo
stos
pushf
cmp
rolb
bound
sbb
cmp
mov
addl
arpl
inc
pusha
xchg
mov
scas
incl
pop
sub
std
or
aas
call
lcall
adc
and
adc
jae
nop
into
outsb
call
fcmovnbe
ficompl
push
jg
inc
pushl
inc
mov
shl
bound
xchg
int
ret
mov
mov
and
inc
mov
daa
repz
push
pop
lods
xchg
insb
cltd
and
push
push
jb
mov
mov
sbbb
mov
ficomps
mov
push
jno
sbb
jmp
dec
out
icebp
push
cmpsb
mov
repz
sahf
es
int
adc
lcall
clc
sahf
jle
int3
lods
hlt
push
push
fcomps
push
mov
jecxz
divb
or
subb
les
jmp
add
movsb
adc
push
movsl
daa
xchg
mov
addps
mov
cmp
fnstenv
xlat
cmc
push
pop
inc
sbb
iret
add
pop
cmpsl
sbb
mov
mov
das
and
xchg
or
mov
shll
pop
loop
or
inc
xchg
icebp
scas
adc
jle
cmpsl
inc
xchg
repz
enter
popf
aam
mov
outsl
xchg
in
or
shlb
cmp
inc
jno
mov
pusha
daa
filds
sahf
xor
cld
lahf
dec
xchg
xor
and
test
sub
jbe
push
stc
lods
pop
cmpsb
rcrb
and
stos
es
ret
sbb
rclb
pop
fisttpll
mov
push
fnsave
cltd
push
imul
repnz
or
xchg
mov
cmpl
inc
push
adc
mov
insb
cmp
rolb
adc
cmp
pop
js
stc
enter
mov
or
xchg
out
mov
fimuls
xor
incl
popf
fcmovb
mov
add
icebp
cmp
mov
loope
and
push
fbld
push
inc
ret
mov
dec
cmpsl
inc
add
out
cwtl
inc
adc
test
ficomps
stos
test
mov
mov
ficomps
mov
lret
pop
push
insl
shufps
xchg
inc
aas
fsubrl
sub
popf
cwtl
sub
cmpsl
rol
jbe
lea
adc
add
test
icebp
adc
push
cmp
int
test
sub
cs
push
pop
mov
add
pop
fdivrl
jecxz
mov
aad
lea
in
sbb
inc
out
ror
mov
push
cli
std
test
xchg
ret
out
je
push
sbb
fcmovb
gs
xor
jge
lcall
test
mov
pop
gs
es
mov
enter
std
inc
scas
mov
push
fidivrl
jbe
aas
cmpsb
or
cld
mov
fnstenv
pshufw
arpl
inc
jns
test
or
fwait
pop
aas
xchg
out
call
add
outsb
sub
lea
jo
sarb
xor
je
cli
adc
addl
insl
fildll
inc
repnz
sahf
cmp
xchg
jg
mov
sub
cmp
movsb
shrl
dec
call
sbb
adc
sub
cmp
cltd
and
sub
cmp
fidivl
xor
pop
jmp
add
xor
jo
fmull
aas
adc
testb
pop
sub
sbb
test
jle
aad
arpl
rol
inc
xchg
mov
mov
imul
insb
fstpt
cmp
or
mov
jecxz
std
add
fadds
ja
addl
stos
sbb
add
repnz
push
add
xchg
lahf
test
loope
lea
or
ss
sub
adc
push
adc
push
or
mov
lods
hlt
test
mov
out
mov
mov
movsl
push
lock
pop
xchg
mov
iret
pop
loopne
mov
push
sarl
mov
jne
scas
sbb
cli
pop
mov
xchg
fcoml
out
insb
jo
out
lods
mov
jo
xorb
frstor
out
mov
inc
push
adcb
xor
jmp
or
mov
arpl
scas
xacquire
add
mov
mov
stos
daa
xor
fs
ss
pop
sub
incb
lock
and
push
push
testl
push
test
add
add
shl
icebp
sbb
pop
pop
imul
pop
rclb
divb
push
shl
jb
xchg
add
jecxz
pop
pusha
stc
or
sbbl
adc
pop
inc
in
mov
insb
adc
popa
pop
test
or
mov
stos
stos
and
push
ss
lcall
rolb
push
scas
mov
stos
decl
jg
adc
insl
sbbb
mov
adc
insl
xchg
jbe
inc
mov
lds
jg
inc
sti
dec
xchg
popa
and
cmp
jo
lea
cmp
addb
mov
mov
les
xchg
jne
fnstsw
ja
clc
idivl
in
imulb
jp
addr16
adc
hlt
push
iret
inc
aad
xchg
repz
cld
stc
jbe
stos
fidivrl
daa
repz
test
mov
dec
mov
dec
scas
sahf
ljmp
fadd
dec
rcrb
stc
sbb
ficoml
mov
fists
fsubs
push
into
jne
cmp
int
das
mov
fidivrl
repz
xchg
ja
jecxz
adc
or
or
out
and
push
outsb
fwait
sbb
xchg
mov
xchg
les
sbb
mov
pop
in
popa
pop
jmp
add
lods
add
into
loopne
sbb
mov
das
mov
das
lahf
xchg
in
pushf
popa
out
insl
out
sahf
pop
sbbb
xchg
mov
pop
mov
mov
jb
out
push
mov
adc
outsl
adc
adc
lods
jb
andl
or
sahf
mov
inc
cltd
xlat
fidivrs
jnp
sahf
movsb
out
mov
xchg
pop
stos
test
pop
dec
jmp
mov
xor
scas
cs
xchg
sti
lock
push
dec
and
add
mov
hlt
sub
xchg
adcl
fidivrl
push
dec
dec
nop
gs
pop
lret
leave
push
lret
pop
sub
sbb
lods
mov
mov
jbe
xlat
lahf
aas
push
aam
xchg
inc
sub
dec
lea
movsb
mov
push
shr
or
cltd
jae
xchg
mov
call
mov
jno
or
or
nop
pop
ljmp
es
test
fcomps
mov
push
out
cmc
fisttpl
mov
jae
imul
icebp
repnz
in
lret
cmp
jo
aam
fildl
and
push
decl
pushl
and
test
push
insl
push
or
xor
pop
pop
push
xor
lea
sub
mov
adc
push
jo
xchg
sbb
rolb
test
sbb
cmp
mov
lret
pop
ljmp
pop
ficoml
push
lret
mov
jg
jno
push
aad
leave
inc
lret
adc
sbb
inc
jecxz
cmc
xchg
jo
testl
filds
and
adc
lahf
push
add
sub
lcall
outsl
add
and
jg
sbb
lahf
cli
or
or
cwtl
pop
das
jns
dec
push
rcrb
arpl
ss
push
mov
dec
movsb
imull
or
in
jmp
incl
fs
jecxz
cltd
je
movsb
xor
sahf
popa
ljmp
loope
je
aaa
pushf
ds
cmpl
ret
push
cmpb
inc
ja
xchg
adc
fcmovnu
cmpb
cmpsl
incl
adc
fistpll
roll
dec
and
sbb
aad
rol
and
jp
dec
xchg
addr16
movsl
lahf
in
int3
insl
mov
mov
fistl
mov
enter
mov
xor
inc
pusha
mov
movsb
mov
mov
pusha
stos
adcb
and
sbb
int
ljmp
inc
jae
jmp
movsl
cmpsb
mov
sub
lret
data16
xor
mov
call
sbb
scas
and
fstl
mov
jae
pusha
adc
aam
and
out
dec
fnstenv
movsb
iret
inc
add
add
pop
mov
aad
out
sub
mov
ja
inc
mov
sub
and
fidivl
jae
jle
push
mov
and
xor
jo
vphsubwd
jbe
sbb
aam
add
fmull
push
out
jmp
push
dec
fwait
insb
sub
fdiv
loopne
pop
cmpb
dec
add
and
push
xor
sub
ja
jbe
push
iret
xlat
and
ret
dec
andb
mov
call
popf
jecxz
and
inc
push
pop
in
arpl
addr16
cmpsl
in
imul
mov
addl
repz
int3
jmp
inc
fildl
out
out
out
pop
fdivrl
jnp
lret
xlat
and
adc
repnz
mov
dec
hlt
jns
shrb
mov
pop
pop
sbb
scas
fcmove
hlt
in
cwtl
test
aam
xlat
sub
mov
push
jl
outsb
shlb
dec
divb
movsb
and
or
jmp
xchg
scas
jae
cmpsl
dec
lahf
bndstx
or
push
pop
sbbb
jbe
ret
xor
loopne
xor
fcoml
and
jmp
int3
in
jl
lcall
int
dec
stos
int3
dec
mov
xor
int3
dec
or
pop
popf
cli
push
or
and
cmp
aas
sub
inc
or
push
pusha
mov
jp
push
dec
test
cltd
jl
mov
movsb
cmovp
mov
hlt
push
add
ljmp
movsl
cmc
inc
cs
nop
scas
dec
jo
rclb
pop
insl
add
out
loop
sub
scas
nop
test
push
imul
sub
out
cmp
cli
fs
out
popf
cs
fsubs
loopne
push
jne
sbb
adc
repnz
les
loop
mov
xchg
add
iret
jmp
repz
cmp
aaa
out
pop
jb
scas
imul
mov
dec
or
popa
push
int3
xor
gs
movsb
and
rcr
mov
mov
xchg
in
mov
lock
mov
sub
or
mov
scas
fucom
cmc
mov
sub
push
push
push
popa
js
lods
stos
cmp
out
or
pop
mov
gs
lret
icebp
icebp
jmp
movhps
arpl
cli
mov
xchg
xlat
cmp
aas
xchg
aas
inc
inc
insl
lret
and
inc
inc
ficompl
shll
and
hlt
les
subl
int
or
fdivr
into
aas
xchg
push
jge
aad
loopne
aad
mov
adc
add
or
pop
pushf
mov
pushf
movsl
inc
jno
lea
repnz
cli
adcb
inc
adc
insb
sub
mov
mov
cmpsb
cmp
pop
mov
jecxz
cmp
sub
insl
xchg
mov
stos
cmovs
mov
sub
and
flds
andl
mov
cs
mov
shl
je
daa
mov
pop
adc
repnz
mov
in
cmp
call
dec
xor
jb
cmc
lock
cmp
sbb
aaa
mov
xor
popa
xor
ss
sub
dec
repnz
sub
call
icebp
mov
test
das
add
movsb
loopne
les
xor
sub
sub
fstpl
pop
add
xchg
pusha
rolb
mov
in
scas
imul
imul
cwtl
stc
arpl
movsb
jns
movsb
xchg
mov
xchg
mov
push
cmp
mov
imul
sahf
leave
xchg
pop
sti
fdiv
cmp
xor
fs
fadd
test
and
nop
pop
out
or
hlt
das
cmp
or
iret
push
je
jl
mov
leave
imul
stc
jecxz
xor
mov
in
xchg
int3
add
jle
xor
and
arpl
pop
arpl
orb
dec
add
jns
test
and
and
sub
aaa
je
outsl
clc
add
push
dec
mov
jecxz
stos
cmp
test
sbb
mov
mov
mov
into
mov
dec
fidivrs
repz
gs
adc
dec
xchg
mov
fistl
xchg
lods
jne
sti
mov
jns
imul
jge
pop
inc
sbb
cmp
lret
xor
jl
jb
or
shl
jmp
pop
jg
lds
inc
iret
xchg
lret
xor
ret
and
movsl
adc
fimuls
jl
out
and
push
jle
in
mov
sub
addb
inc
adc
mov
xlat
push
or
pop
lcall
cmp
das
cmp
das
push
pushl
fsubl
dec
lods
dec
sbb
sub
mov
hlt
sub
and
xchg
orb
xor
pop
adc
jnp
mov
je
jl
test
addr16
je
cmp
pop
jmp
or
mov
dec
jnp
xchg
inc
movsl
mov
cmpsl
push
fdiv
or
lret
sti
rcr
repz
insl
test
test
movsb
es
js
pop
mov
cli
orl
jp
or
dec
pop
jno
jb
lods
aam
xor
ss
push
or
je
fxch
addb
or
sbb
adc
inc
sbb
loop
sbb
inc
dec
mov
sub
sub
sbb
inc
lea
jmp
mov
das
rcl
leave
ret
mov
dec
xor
xchg
or
movsl
sbb
cmpsl
and
pop
arpl
pop
fisttps
mov
int
rcl
mov
xchg
push
add
int3
jp
mov
out
popf
push
fcompl
gs
sbb
mov
inc
mov
fcmovu
mov
mov
xchg
negb
psadbw
test
aam
mov
pop
pushf
xchg
mov
popa
shl
call
push
jl
mov
add
xor
fiadds
ret
mov
ss
insl
dec
shll
sub
popa
cmp
stc
push
adc
bnd
xchg
sbb
mov
adc
leave
repnz
test
inc
dec
pop
aaa
jbe
push
jno
faddl
scas
cmp
ficomps
xlat
jg
or
bound
dec
testl
add
cmc
cmp
lock
lcall
call
mov
cmc
test
mov
push
mov
mov
daa
jl
lods
lret
arpl
mov
push
aaa
inc
pusha
int
sub
lcall
push
or
sbb
dec
pop
out
add
loopne
xchg
loopne
loope
scas
andl
aas
adc
cmp
shl
bound
and
mov
loope
inc
jl
adc
repnz
jnp
inc
and
xor
mov
cltd
sub
rcr
scas
xor
sahf
jge
dec
nop
jbe
add
or
cmp
sar
jae
or
sbb
gs
lret
fbstp
mov
xchg
imul
call
movsl
pop
xchg
mov
push
jle
cs
mov
mov
or
mov
xor
pop
sbb
cmp
and
jno
pop
xchg
out
xchg
xor
mov
pop
add
ja
jecxz
mov
pop
shrl
pop
inc
aam
push
lret
rolb
movb
dec
cmp
xchg
enter
or
inc
and
mov
in
push
sar
or
mov
xchg
pop
xchg
and
dec
lahf
rclb
jnp
sub
push
je
imul
into
loop
or
mov
xor
xor
mov
jmp
sbb
xchg
jno
pusha
lods
push
adc
inc
testl
push
cmp
fs
out
enter
dec
add
leave
ja
xor
or
in
jb
clc
into
xchg
sbb
jmp
stos
movsb
mov
add
mov
xchg
inc
daa
xor
push
xchg
les
mov
mov
fs
xor
imul
lea
cltd
test
xchg
add
jmp
mov
dec
jg
adc
repnz
mov
mov
insb
push
add
rolb
inc
and
dec
lods
xchg
jb
push
or
out
scas
lock
xchg
clc
or
sub
push
dec
jb
adc
adc
insl
push
jl
cltd
push
je
xchg
push
adc
inc
leave
pop
repz
push
sbb
and
inc
cli
mov
inc
cmpsl
lds
inc
mov
mov
push
movsb
jecxz
pmaxub
sub
jp
mov
inc
cmp
mov
outsb
cmc
repz
push
ror
push
lea
rcll
adc
push
pop
push
xchg
aam
das
ja
push
adc
andl
sub
push
stos
mov
add
mov
shl
mov
and
test
insl
loop
movsb
mov
jae
hlt
fcoml
xchg
xlat
push
fldlg2
pop
data16
and
add
nop
or
les
mov
push
hlt
mov
test
push
and
enter
cltd
frstor
iret
sub
mov
inc
push
jmp
xlat
pop
into
js
sbb
mov
cmp
dec
xlat
dec
addr16
inc
push
mov
scas
xlat
push
cmp
and
cmp
popa
loopne
leave
out
jne
pop
mov
mov
inc
adc
push
sbb
dec
decb
ret
filds
test
rep
aaa
lahf
cmpsl
inc
jge
or
sub
xchg
icebp
jnp
add
out
mov
inc
adc
inc
cltd
dec
ljmp
dec
sahf
jb
push
add
cmp
inc
repz
in
xor
ja
mov
push
pushl
inc
sbb
pop
test
inc
shl
rcrb
and
and
push
scas
and
xchg
mov
xor
sbbl
sbb
lea
dec
cmp
fcom
jmp
mov
mov
rclb
cmp
push
push
jp
mov
dec
ret
sbb
int
or
lahf
dec
pusha
fldcw
jmp
je
dec
sti
sarl
xchg
xor
pusha
push
repnz
dec
dec
aam
fwait
adc
pushf
pop
add
lret
sar
sbb
fildll
cld
adc
add
push
mov
cld
and
jnp
push
mov
mov
mov
mov
mov
push
or
jle
fucomp
mov
iret
cmp
daa
subl
dec
dec
mov
xlat
fisubrs
sbb
shll
jbe
scas
lods
jne
jne
xchg
xchg
mov
and
inc
fistps
or
test
sahf
jo
rcrl
pusha
movsl
and
movl
movsb
jno
inc
vmulps
ja
sahf
push
xor
stc
inc
aad
lods
add
or
ljmp
xor
push
mulb
test
hlt
popa
fninit
mov
xchg
pop
push
subb
addl
popa
jnp
notl
mov
mov
push
daa
daa
cmp
lods
add
and
sti
add
ret
mov
test
out
pop
clc
pop
pop
jbe
push
int
sbb
cli
iret
and
cmp
fcmovnb
fwait
jnp
mov
and
lcall
jae
movb
out
aad
mov
ror
sahf
repnz
xchg
ret
orl
daa
imul
inc
push
and
xchg
push
mov
cmp
jnp
out
xchg
mov
lods
mov
pop
cs
add
rcr
mov
jecxz
mov
pop
movsb
add
sarl
pop
mov
in
mov
pop
cmp
jl
ja
es
lods
js
mov
sarl
mov
mov
cmp
imul
pop
out
mov
sbb
adc
insb
xchg
add
in
imull
cmc
mov
daa
xchg
jp
ficoml
push
xchg
sarb
push
imul
sub
mov
lret
dec
int
pop
mov
mov
pop
sub
sub
mov
scas
mov
xor
int3
mov
adc
jbe
andb
loope
jb
lds
adc
dec
xchg
aad
std
mov
adc
hlt
cmpsl
cld
sbbl
and
mov
outsl
push
nop
std
sti
jno
xchg
movb
sti
aad
sbb
ret
flds
aam
test
js
movsb
int3
mov
dec
jnp
sub
in
shl
sub
popa
pop
frstor
push
push
xchg
outsb
test
rolb
pop
call
push
ficompl
movsl
hlt
nop
xor
rcl
jae
icebp
adc
dec
xchg
js
icebp
sub
jg
clc
ds
mov
mov
inc
xor
mov
mov
cmc
lea
lcall
cmp
fistl
gs
sbb
jl
xor
icebp
pop
ja
jno
xor
xor
lock
jge
adc
insl
pop
mov
in
push
dec
call
or
mov
sbb
pop
insl
push
into
push
jbe
sub
scas
movsl
mov
test
je
repnz
jnp
push
mov
mov
scas
add
pop
xor
xor
pop
ficoms
outsb
jg
inc
mul
add
icebp
cs
aam
mov
jmp
dec
pop
ds
out
loop
movl
push
out
add
push
outsl
dec
mov
loopne
pushf
dec
les
pop
jmp
adc
pop
mov
js
mov
add
aam
aas
and
mov
push
sub
mov
mov
or
into
xchg
mov
push
sub
clc
stos
stos
aas
aam
cld
bound
push
mov
push
inc
in
lcall
xor
imul
sbb
shrb
ja
push
das
jmp
mov
push
data16
add
fcomps
enter
push
stos
lcall
add
mov
xchg
xchg
nop
or
mov
push
and
outsl
sar
inc
adc
and
insb
int
add
sub
xchg
imull
mov
cli
add
shrb
mov
scas
outsl
and
cmp
push
jne
out
mov
pop
xchg
inc
js
divl
xor
mov
ljmp
aas
add
xchg
test
xor
movsl
nop
or
xchg
sbb
sbb
inc
ljmp
pop
sbb
imul
or
sti
cltd
xlat
insl
add
fwait
cmp
push
cmpsb
adc
or
xchg
mov
pushf
sub
inc
inc
pop
shr
inc
fistl
lock
mov
fs
sbbl
pop
aam
popa
xchg
mov
add
sbb
mov
push
pusha
xchg
add
xor
xorl
pop
aam
fdiv
inc
leave
xor
sub
ja
ret
sub
fcoml
dec
mov
cmpsl
add
mov
mov
fbld
sub
adc
fcom
or
js
sbb
push
jmp
and
lock
dec
ret
mov
jno
incb
dec
dec
fcmovnu
and
bound
aaa
pop
test
bound
pop
mov
scas
andl
ljmp
cmpsl
dec
and
cmp
ljmp
mov
push
das
cmp
inc
divb
jle
push
pushf
jmp
arpl
fadds
jmp
push
daa
jg
mov
dec
jnp
add
dec
cmp
and
jp
inc
mov
lock
pop
test
mov
mov
lahf
xor
int3
sub
cmpl
or
dec
fdivrl
stos
stos
imul
lods
sub
insb
cmp
or
je
lahf
mov
in
in
popf
pop
loopne
negl
lret
push
jmp
in
mov
fdivs
cmp
push
lds
aas
ret
mov
xor
pushl
imul
sub
xlat
sbb
adc
arpl
sub
fwait
push
fdiv
jbe
cmp
mov
pushf
dec
adc
outsb
out
jmp
loopne
clc
lret
mov
xchg
in
mov
adc
fs
pop
xchg
out
call
add
mov
das
mov
add
and
cli
testl
nop
sub
ja
notl
sbb
pop
out
mov
inc
in
aam
lahf
in
imulb
arpl
outsl
dec
mov
addr16
cmp
mov
mov
inc
mov
insb
outsl
test
cmp
lods
inc
in
fsts
mov
mov
sub
dec
xor
push
and
inc
and
test
add
fsub
mov
mov
cmp
aaa
cli
add
ds
pop
xchg
imul
insb
cmpsl
bound
in
enter
lods
add
insl
mov
mov
push
sbb
out
push
cli
cmp
jb
leave
arpl
add
push
push
mov
mov
ret
pop
jecxz
adc
mov
popf
repnz
stos
dec
or
cs
in
int
adc
lret
mov
shlb
mov
xchg
dec
mov
rcl
aad
das
inc
addl
ds
dec
movsb
mov
xchg
and
lods
outsl
adc
jne
mov
iret
enter
mov
cmpb
jns
mov
outsl
sbb
xchg
lret
mov
add
inc
and
leave
add
cmp
mov
mov
repz
pcmpgtb
movsl
xor
pop
jne
mov
inc
jge
jae
jge
fcoml
and
mov
inc
dec
or
ficomps
imul
cld
clc
daa
mov
jno
xchg
cld
or
into
jns
pop
je
mov
add
aam
outsl
jmp
test
mov
sti
adc
pop
pop
sbb
stos
jo
or
rcrl
pop
pop
mov
fwait
call
cmp
sbb
cmc
dec
iret
inc
pop
mov
fs
pop
adcb
xchg
pop
notl
lock
cmpsl
cmp
jge
addr16
or
mov
mov
and
inc
insl
xchg
jp
mov
ret
sub
fsub
pop
out
sti
push
cmpsl
push
hlt
cmpsb
repnz
aaa
arpl
add
inc
filds
ds
add
push
adc
inc
out
clc
xchg
jle
in
xchg
sbb
das
in
mov
xchg
xor
in
scas
adc
dec
sub
aad
sub
inc
idivb
sbb
xor
negl
inc
dec
out
dec
push
nop
push
out
add
rcll
pop
jle
jbe
xchg
cli
push
movsl
out
mov
pop
lcall
mov
repnz
pop
ja
fisttpll
scas
mov
jne
leave
jno
cmp
popa
or
mov
incl
jns
cmp
ljmp
sti
lea
sub
xor
jmp
cli
jns
addr16
lret
dec
out
push
dec
pop
in
adcb
inc
in
push
push
inc
repnz
inc
dec
fsubs
and
mov
adc
mov
xorl
add
jne
lcall
dec
sahf
mov
call
es
aas
adc
std
not
stc
add
out
outsb
iret
jmp
pushf
sahf
xor
testb
mov
xlat
jo
cmpsl
pop
lds
loopne
push
out
leave
cltd
stos
divb
movsb
shlb
je
rcrb
or
adc
dec
and
js
sbb
adc
scas
data16
pop
shrl
dec
hlt
mov
jno
push
sbb
mov
xor
inc
jge
ret
ss
mov
aam
out
xchg
mov
mov
add
shrl
cli
lahf
sbb
adc
fwait
mov
iret
push
mov
add
mov
pop
andl
jle
cmpsl
and
cmp
outsl
jb
dec
add
jp
pop
or
xor
jae
std
jns
sbb
inc
mov
push
arpl
mov
fiaddl
mov
mov
imul
or
add
out
mov
mov
mov
cltd
jno
js
adc
sbb
stos
fwait
outsl
jecxz
inc
popf
mul
pushl
inc
daa
cli
iret
mov
adc
xor
cltd
mov
or
out
add
call
jae
mov
inc
jle
inc
cltd
addl
inc
sbb
xor
jg
inc
imul
mov
mov
mov
push
xchg
gs
in
adc
pop
jbe
and
fcmovnbe
add
xor
testb
push
ljmp
insb
sbb
mov
outsb
mov
call
movzbl
shl
pop
fs
in
imul
pop
rcl
or
push
imul
jp
scas
inc
leave
popf
sbb
loopne
mov
popf
dec
inc
push
inc
xchg
fldt
fwait
enter
or
and
test
or
push
popf
out
mov
das
movsl
lds
idivl
movsl
mov
mov
sub
lcall
ret
outsl
iret
adc
cmp
xchg
mov
out
test
mov
mov
dec
dec
insb
sbb
scas
xchg
xchg
or
push
mov
lock
xchg
push
jae
push
jmp
jb
mov
mov
inc
adc
into
roll
test
xor
jl
mov
cs
rcl
cs
test
scas
inc
push
mov
sbb
dec
adc
xchg
dec
xchg
out
sarl
cli
sbb
addl
dec
pop
adc
or
push
fidivrl
fisttps
inc
data16
jp
cmp
push
cltd
loop
mov
mov
sarb
cmp
in
sub
adc
test
add
adc
cwtl
push
mov
ret
xchg
cld
adc
shlb
push
std
cwtl
mov
push
mov
cmp
adc
mov
pop
cltd
lea
sub
mov
lods
jecxz
cwtl
fwait
dec
mov
hlt
add
xchg
cwtl
mov
lods
mov
add
loopne
inc
inc
mov
inc
fdivrs
fisttpll
shrb
lock
jecxz
jmp
jl
int3
cmp
cmpsl
mov
cmp
aad
outsb
inc
in
dec
sub
cmp
stos
addl
stos
inc
jp
call
cwtl
and
jmp
adc
add
sbb
inc
jl
sbb
and
repz
and
inc
imul
pop
pop
insb
sbb
cmpsl
mov
dec
adc
js
cmp
or
test
cwtl
aas
xor
outsb
or
and
inc
insb
xor
jge
flds
repz
sub
and
hlt
cltd
push
or
ret
andl
dec
mov
xchg
movsb
inc
push
in
sbb
imul
jecxz
pop
xchg
data16
mov
dec
outsl
add
dec
mov
adc
add
inc
pop
popa
stos
imul
adc
in
dec
push
iret
movsl
test
xlat
fildl
add
ret
popl
pop
out
or
idivl
lahf
stos
inc
jbe
push
sub
ret
sti
cld
and
in
adc
mov
xchg
hlt
dec
fs
out
and
stos
mov
fidivl
xor
sub
incl
fsubs
call
mov
dec
pop
hlt
movsb
xchg
push
inc
xchg
push
int3
repz
adc
aam
divb
pop
movsl
ljmp
jp
repz
and
movsl
cmc
cmp
sbb
xchg
sub
or
rorb
movsl
or
lds
jae
clc
xchg
js
out
and
pop
aas
fidivrl
add
jmp
pop
lcall
and
popf
push
test
xor
xor
mulb
dec
adc
imul
es
fcmovnu
inc
std
mov
mov
dec
or
popl
frstor
test
outsb
sbb
xor
sub
mov
pop
pmulhw
outsb
add
out
xor
or
mov
fwait
inc
add
out
jp
stc
filds
bound
mov
inc
les
cmpsb
adc
hlt
pusha
iret
repz
fistps
sbb
adc
lea
cmpsb
out
pop
mov
cmp
push
test
mov
outsb
out
adc
add
xor
pusha
cmp
push
and
mov
icebp
aaa
repz
or
xchg
xchg
repz
iret
das
xor
xchg
sub
or
xor
pop
jle
push
ljmp
je
lock
push
pop
mov
mov
ret
jne
push
into
adc
xor
xor
lock
dec
cmpsl
dec
pop
pusha
inc
repz
idivb
mov
enter
pop
push
inc
lret
leave
shll
jo
push
and
mov
mov
mov
mov
out
xor
je
pusha
jno
xor
scas
leave
fidivl
clc
inc
in
ficoms
dec
pop
in
cmp
xchg
sbb
ss
data16
out
mov
mov
or
inc
insb
and
inc
bound
jns
sbb
and
cmpsb
movb
mov
ja
lcall
push
fidivrs
hlt
push
xor
bound
movzbl
mov
lods
jne
xchg
ret
fbld
inc
in
add
je
in
cmp
popa
cmp
stos
xchg
jmp
enter
pushf
mov
xchg
dec
mov
fisubrl
lcall
add
mov
cmpsb
jbe
sbb
mov
enter
lea
sbb
push
sub
cmp
xchg
ljmp
mov
fiaddl
cmp
hlt
xor
sub
sbb
outsb
adc
je
insb
adc
dec
int
adc
xor
sahf
push
adc
lret
imul
and
mov
mov
in
call
scas
js
arpl
loopne
stos
push
dec
and
xor
jno
ss
bound
jmp
add
ret
lahf
push
dec
icebp
xchg
adc
xchg
sub
push
mov
push
frstor
cmp
push
xchg
push
subb
or
or
lret
cmp
in
sbb
xor
insb
rclb
mov
cmpsb
jge
inc
cmc
xlat
jg
fcompl
sahf
cmpsl
pop
repz
movsb
and
aam
mov
jae
pusha
movb
jae
enter
int
cs
cmpsl
in
pop
outsb
sbb
dec
and
aam
inc
adc
movsb
push
jbe
daa
out
mov
push
pop
jecxz
cmp
rorl
cltd
push
pop
in
cmp
xadd
cmc
xchg
imul
iret
cmp
ret
and
mov
push
mov
mov
xchg
clc
daa
xchg
and
add
add
push
insb
sbb
call
into
ds
sub
hlt
vpsrlw
pop
jne
mov
hlt
push
aas
mov
subb
jecxz
ljmp
arpl
call
test
icebp
cmp
ja
inc
and
jae
push
in
pop
lea
adc
jb
in
negb
bound
pop
repz
popa
push
xlat
push
xlat
fadds
push
fisttpll
cmpb
movsb
and
fstpl
inc
jl
jnp
inc
into
hlt
jecxz
or
push
insl
ret
pop
loopne
push
outsb
inc
imul
mov
sub
outsl
into
in
inc
lea
sbb
cmpsb
mov
inc
shll
pop
sub
sub
xor
adc
repnz
mov
lods
in
mov
aam
cli
fistpll
shlb
dec
cmp
inc
mov
outsl
loopne
xor
mov
add
aas
notb
jle
insb
popf
call
cmp
jo
loopne
lahf
aaa
mov
scas
jnp
or
sbb
divl
stc
xor
cmp
push
mov
faddl
dec
shr
or
adc
push
cmp
push
mov
sarb
clc
imul
dec
inc
xor
jl
mov
dec
jb
cli
jo
rcll
data16
lcall
insl
sarb
and
inc
mov
lock
inc
mov
addr16
popf
pop
aaa
mov
in
mov
and
or
jns
and
mov
fstpt
add
cmp
sub
add
dec
cmp
mov
dec
ret
inc
pop
les
and
int
insl
mov
dec
add
mov
fsubs
or
movsb
inc
addr16
xchg
fdivrs
fidivl
push
leave
fstpl
mov
mov
shl
or
dec
add
and
mov
xchg
mov
pop
cmc
rclb
subb
js,pn
enter
call
jg
dec
lea
mov
fidivs
dec
dec
pop
dec
ds
push
xchg
stos
sbb
sub
jmp
cmc
mov
or
sub
rcl
xchg
xchg
les
js
sbb
gs
iret
leave
inc
push
jo
sub
lret
arpl
popa
stc
stc
int
sahf
test
cmp
push
xor
lret
lods
xor
sbb
pop
ret
mov
pop
xor
popa
fbld
sbb
data16
daa
inc
test
lock
lcall
outsb
push
test
and
and
lock
fsub
lcall
dec
adc
mov
and
adc
mov
imull
lock
sbb
loope
fsub
shlb
out
adc
cmpsl
sarl
movsb
addr16
adc
push
divb
jecxz
pusha
dec
mov
or
lret
aad
lret
adc
cmp
loope
cmp
outsb
ret
roll
mov
incl
ja
add
fidivs
stc
ljmp
or
aaa
rcr
and
icebp
dec
je
adc
cwtl
inc
mov
data16
mov
sub
dec
dec
stos
cltd
xchg
fbld
or
inc
pop
fimuls
add
ret
dec
xor
into
inc
or
movsb
stc
fiadds
xchg
aaa
jp
les
mov
xlat
cli
sbb
repz
rolb
cmp
mov
dec
ljmp
xchg
push
xor
jp
mov
std
lock
cmpsb
pop
sbb
and
loope
data16
xchg
adc
cwtl
mov
loopne
sbb
loopne
lcall
mov
repnz
xchg
mov
mov
ljmp
add
sub
cmp
push
push
insl
leave
sbb
pushf
push
test
movsb
adc
ret
inc
jg
incl
xlat
jo
or
cltd
xchg
iret
adc
fidivs
stos
adc
cmp
enter
stos
sub
pushf
and
xor
mov
fsubrs
sbb
hlt
pop
adc
inc
xchg
xor
push
jg
jnp
mov
push
movsl
mov
jl
stc
sbb
pop
stos
push
jbe
cmp
push
movsb
and
push
cltd
pop
cli
lret
pop
loopne
sub
adc
mov
lret
mov
mov
push
adc
and
lods
mov
inc
lods
outsb
sahf
movsl
xchg
sub
imul
fs
xchg
mov
ret
rcl
mov
sbb
rorb
mov
fisubs
jne
add
add
pop
mov
loopne
std
les
adc
jmp
xchg
adc
test
pop
gs
das
sahf
mov
dec
sbb
sti
in
loopne
sbb
sub
mov
jae
pop
loopne
addr16
xor
jae
mov
insb
test
add
and
sbb
into
outsb
dec
loope
nop
mov
sahf
shufps
dec
dec
sub
scas
xchg
mov
sub
stos
add
loopne
arpl
into
xchg
mov
mov
int
or
repnz
dec
pop
push
in
into
or
stos
dec
mov
fmul
movb
pop
out
test
sbb
xor
or
and
out
bswap
mov
sarb
dec
ja
sub
and
ficompl
xchg
dec
mov
cmp
dec
jo
mov
fsubs
sub
mov
mov
mov
pop
xchg
jno
xchg
dec
sbb
iret
aad
filds
test
ss
cli
fmuls
leave
popf
out
cld
not
xor
jno
mov
addr16
xchg
mov
std
adc
loope
push
dec
and
arpl
pop
push
arpl
jmp
pushf
xor
pop
and
lcall
cmp
add
stos
in
add
pop
sbb
or
or
imul
shlb
pop
cwtl
leave
repz
mov
push
cmp
pushf
sub
xchg
sti
push
mov
cmpsl
movsl
push
std
cmp
push
push
popw
xchg
ret
dec
outsb
iret
jns
imul
data16
mov
lahf
inc
dec
xor
or
lea
push
out
cmp
mov
pop
pop
scas
jmp
in
jecxz
out
mov
sub
dec
pop
fnstcw
add
mov
aaa
mov
mov
add
sub
sbb
add
jo
inc
inc
pop
negl
jle
ja
out
or
shll
pop
fcoms
mov
mov
mov
rorl
dec
pop
pusha
push
xchg
sti
repz
push
gs
pop
fisttpll
jbe
insl
enter
aam
outsb
cmp
add
pop
hlt
xor
mov
mov
setno
push
add
sub
xchg
dec
test
dec
loopne
xchg
test
xlat
add
icebp
stos
jbe
lds
sarl
push
lds
in
aad
call
and
addr16
mov
mov
shll
inc
jne
push
mov
mov
or
int3
inc
sub
ds
mov
cld
pushf
or
sub
pop
clc
ds
pusha
xor
std
jnp
jb
pop
pop
cs
inc
push
fidivs
ficomps
loope
mov
xadd
in
pusha
mov
push
cmp
mov
mov
into
scas
fldl
sub
cli
jb
xchg
mov
pop
push
ret
xor
mov
insl
mov
lret
jb
or
inc
or
push
xlat
repnz
aam
sbb
sub
pop
mov
loopne
scas
rclb
test
rorl
adc
or
mov
push
jg
jbe
mov
sarl
push
ret
or
cmpsb
inc
sbb
mov
ja
out
jns
daa
out
add
adc
cmpsb
ljmp
mov
cmp
adc
mov
int3
mov
bound
and
aad
insb
mov
std
cli
stc
cmp
add
sbb
rcll
mov
ljmp
pop
dec
daa
lods
aaa
xchg
pop
pop
jae
jge
je
push
rcrl
inc
hlt
sti
cmp
inc
pminsw
adc
xor
add
inc
test
das
mov
rorl
test
imul
and
je
popa
adc
add
jle
sbb
or
out
insl
loope
inc
dec
mov
inc
in
int
cmp
sarb
in
out
dec
arpl
cmp
mov
lret
out
lret
out
pop
daa
fisubl
fcomp
pop
outsl
aad
mov
imul
pop
int
cwtl
adcb
jle
sbb
insb
xor
add
int3
aas
lea
jl
imul
leave
outsl
and
push
dec
out
xor
adc
xchg
stc
loop
cmp
sarl
pop
gs
push
les
sti
dec
lcall
hlt
push
jge
shrl
or
pushf
inc
in
mov
ret
and
xor
xchg
cli
add
cld
ja
mov
repnz
das
pop
insb
call
loope
mov
cmp
mov
jno
adc
ret
call
or
cs
addb
add
pop
rcr
jp
rol
in
push
int3
adcl
vpmovzxwq
sub
and
and
aam
sbb
add
in
js
sub
mov
iret
mov
in
xchg
inc
jne
js
dec
aas
mov
mov
cli
sbb
fmul
jg
jl
std
xchg
addb
mov
and
sbb
test
cs
mov
enter
push
daa
int
push
jno
icebp
subl
rcrb
div
mov
sbb
orl
push
dec
mov
mov
popf
icebp
pop
scas
adc
mov
cli
pop
jp
fs
mov
push
pop
outsb
popl
mov
test
test
or
xchg
std
and
bound
pop
ja
fdivs
mov
jecxz
mov
mov
std
dec
dec
test
xlat
mov
int3
dec
bound
int
mov
mov
push
mov
xchg
enter
hlt
testb
sbb
cmpsb
int
pop
sub
scas
add
cltd
or
jl
add
push
inc
mov
pop
push
mov
jo
mov
push
mov
out
repnz
mov
iret
and
mov
in
mov
sbb
addr16
push
xchg
lods
into
test
xchg
fwait
sub
mov
jecxz
mov
adc
and
seta
xor
cli
rclb
outsl
in
jno
pushf
mov
fldt
jl
in
daa
shr
scas
test
fistpll
add
jbe
inc
lahf
inc
gs
xor
pop
cmp
and
xchg
pop
cli
xor
mov
in
pop
and
neg
ds
mov
stos
iret
fnstsw
in
stos
or
cmp
sbb
mov
popf
dec
iret
push
cwtl
subl
lahf
push
push
mov
add
push
push
addb
xchg
sub
setae
cwtl
imull
ss
out
push
test
push
insl
xchg
push
std
clc
xor
int3
arpl
cmp
xrelease
jg
jbe
ljmp
imulb
and
inc
pop
dec
shll
lock
xor
fdivr
adc
stos
lds
lock
pop
shrl
sbb
sbb
addl
pop
pop
aad
and
push
cmp
or
orl
mov
or
rolb
cs
fdivrp
jno
mov
mov
dec
sahf
mov
negb
lods
bound
push
xchg
xchg
std
xchg
fsts
ja
cmpsl
adc
mov
and
insl
fwait
push
fwait
test
gs
aas
jnp
jns
inc
mov
mov
cmp
add
push
frstor
sub
inc
pop
out
mov
insl
xchg
scas
shll
or
lret
pop
jge
pop
xchg
lret
push
rcll
push
lock
gs
adcl
sub
sti
loop
cld
int
out
lods
jb
cltd
mov
adc
mov
pop
cltd
gs
dec
push
insl
nop
adc
pop
loop
cwtl
fldenvs
mov
fsubl
or
insb
and
xchg
adc
repz
mov
int3
mov
jb
adc
mov
out
and
or
lods
outsb
sbb
orb
lret
push
test
shll
sub
inc
out
mov
fwait
mov
fisubrs
mov
dec
jle
and
frstpm(287
adc
push
sub
mov
je
fwait
hlt
icebp
inc
scas
mov
xor
jle
xchg
aaa
xlat
out
mov
outsb
mov
or
aam
sahf
cs
lods
adc
nop
sbb
aas
add
test
mov
mov
add
fbstp
inc
or
fsts
and
xor
dec
xlat
sbbb
dec
fdivl
stos
pop
clc
clc
sbb
mov
xchg
es
adc
mov
cmp
imul
cmpsb
jbe
sbb
fs
xchg
or
jle
mov
das
xchg
in
push
sub
cmp
repz
mov
mull
add
rolb
das
add
mov
ljmp
sbbb
stc
push
fnsave
shl
cmp
sbb
xlat
push
and
repnz
xchg
inc
icebp
arpl
test
lret
outsl
mov
fildl
out
ret
and
and
or
sbb
sbb
stos
jns
jbe
int3
cmp
jne
pop
and
or
loope
pushf
orl
pop
mov
fists
mov
jmp
dec
push
jo
inc
iret
rcrl
addr16
rorl
sub
jno
int
jl
xchg
pop
lea
cltd
movsb
lret
dec
or
jae
sahf
addb
xchg
inc
lahf
repnz
push
cmp
dec
jne
push
mov
out
movsl
imul
push
adc
sbb
das
leave
add
jb
xchg
mov
mov
add
outsl
pusha
pusha
jl
xor
mov
jmp
insb
jmp
out
dec
pop
ss
and
jl
jo
mov
es
fwait
and
pop
mov
iret
enter
inc
inc
adc
jecxz
test
fdivrs
out
pop
mov
fbstp
sbb
shll
sub
stc
es
ja
idiv
mov
mov
sbb
shr
ljmp
push
xchg
sbb
movl
stos
adc
cmpsb
les
adc
insl
stos
cli
or
push
or
mov
addr16
testl
xor
xchg
rcl
shll
int
xchg
ja
push
ret
clc
movsl
repz
mov
daa
jae
sub
daa
mov
cmp
popf
test
cmpsl
cmp
adc
xor
dec
rolb
cs
int
pop
add
push
pop
add
xchg
aad
and
sub
int3
dec
inc
pop
push
lret
push
adc
pop
sub
mov
and
sbb
push
scas
mov
jne
inc
inc
repz
cmpsl
lret
pop
jo
push
inc
add
lcall
jns
xchg
pop
icebp
out
bound
cld
jno
mov
into
aad
xchg
test
push
adc
xchg
xchg
xchg
arpl
ljmp
call
dec
iret
fsts
xchg
cmp
xor
inc
enter
testl
js
imul
adc
mov
call
add
pop
out
sbbl
lret
pop
imul
fldcw
inc
ljmp
cmpsb
add
test
dec
neg
mov
movsl
pop
fs
lods
fidivrs
movsl
mov
pop
fbstp
pushf
mov
fildl
jmp
cltd
pop
xchg
nop
adc
das
and
arpl
sub
fcmovnu
cmpsl
iret
jb
sbb
dec
pusha
cld
push
cs
cmp
mov
iret
loop
jp
mov
cmpsl
shrb
rorl
insl
add
in
movsl
test
rclb
pop
rcr
sarl
or
push
clc
xchg
iret
insl
mov
cmp
and
ljmp
mov
and
arpl
mov
xor
shrl
xchg
push
call
fld
xor
int
pop
xchg
aas
mov
mov
push
loopne
sbb
cmp
jecxz
lods
cmp
js
insl
xchg
add
sub
iret
repz
aam
inc
push
xchg
inc
or
add
cmpsb
adc
pop
subl
jbe
enter
fsubl
inc
xchg
mov
sub
and
and
sbb
adcb
or
pop
dec
test
dec
add
add
xchg
scas
arpl
cs
daa
add
sbb
xchg
fs
or
jns
out
adc
shlb
pop
pop
sub
daa
movsb
in
xor
enter
push
cmc
lret
jns
pushf
xchg
sbb
push
xor
sbb
push
mov
aaa
or
cwtl
aam
pushf
arpl
push
lods
es
imul
mov
jne
fs
mov
bound
pop
test
ljmp
rol
scas
enter
cld
inc
push
repnz
mov
jecxz
fcoms
jge
push
out
jb
addb
xchg
testl
cmp
lds
cmpsb
das
dec
ret
jge
das
mov
into
xor
cltd
lahf
stc
xchg
std
sub
loop
or
sub
sbb
dec
sbb
test
outsb
mov
mov
xlat
push
jl
addr16
sahf
lret
jmp
outsb
icebp
test
push
neg
fisttpll
jecxz
ss
sub
lds
lcall
mov
sub
and
dec
pop
dec
movsb
cmc
shr
rorl
aad
cmp
jl
sbb
fildll
dec
push
ljmp
subl
jp
mov
outsl
in
jecxz
jp
scas
add
scas
stos
xchg
pop
jns
imul
leave
fwait
rcrl
pop
dec
pop
lret
xchg
pop
xchg
icebp
mov
cmpsb
sub
and
fcoms
out
push
les
push
or
cmpsl
mov
and
mov
lock
lret
push
cmp
inc
fistpll
push
sub
pop
mov
push
ret
xor
sub
daa
ret
mov
lcall
std
pop
xlat
popf
icebp
dec
and
and
lcall
pop
push
out
test
rcll
jmp
es
lret
sbb
mov
dec
std
sub
lea
sub
adc
ja
popf
sbb
mov
mov
lds
divl
imul
pusha
pop
imul
pop
jl
lea
push
daa
jbe
adc
lea
stos
jns
cli
cmpsl
fisubs
xchg
negb
arpl
inc
cmp
pop
pop
sub
aaa
in
xor
mov
xor
rcrl
push
lahf
das
faddp
mov
cltd
std
repz
mov
aad
out
xor
and
jmp
and
in
je
or
frstor
addr16
mov
shrb
inc
xor
sarl
xchg
test
subl
pushf
xchg
lret
outsl
mov
mov
fnstsw
push
scas
pop
stc
mov
cli
pop
subl
sub
inc
and
xor
std
xchg
lock
inc
stos
imul
mov
popf
in
test
shl
push
push
xchg
out
xor
testb
gs
aas
mov
and
jmp
jno
inc
stos
push
inc
lods
hlt
sub
inc
pop
jne
enter
jbe
mov
rcrb
insl
push
jp
mov
lea
mov
xor
movsl
ret
dec
cmp
and
dec
mov
adc
int
xchg
sarl
ss
sbb
lcall
add
inc
outsb
movsl
mov
pop
add
adc
mov
iret
bound
gs
jecxz
mov
movsl
jp
mov
cmpsl
and
inc
or
inc
divb
sbb
push
mov
fdivs
daa
mov
sub
fwait
xchg
loopne
inc
pop
lds
mov
adc
arpl
lods
cmp
shrl
inc
mov
jns
pop
jo
in
xor
xor
mov
rcrb
xchg
outsb
mov
xchg
jmp
cs
test
mov
sub
cld
out
lcall
mov
xchg
popa
pop
pop
mov
sub
cld
cmc
mov
xrelease
cmpsb
add
xor
repz
or
ret
addb
inc
ja
fsubr
push
xchg
cs
dec
in
push
ficompl
xor
clc
sbb
mov
lcall
mov
movsb
and
cmp
pop
add
xchg
push
fcomip
add
mov
mov
jl
movsb
pop
lods
in
aad
in
shlb
in
cmp
jecxz
call
or
push
je
add
adc
sbb
push
aaa
inc
xchg
popa
movsl
loope
hlt
movsl
js
jb
movsb
xchg
mov
loop
adc
jle
fnstenv
inc
lods
addr16
loop
jecxz
cmp
xlat
xor
shr
xchg
mov
push
inc
rcll
jno
mov
fdivrl
ljmp
aas
sahf
mov
inc
push
sbb
push
push
cmp
ljmp
xor
cli
or
mov
addr16
cmc
dec
mov
jmp
xlat
jmp
adc
repnz
jno
sbb
test
dec
xor
aas
popa
pushf
adc
out
adc
mov
pop
into
jnp
jp
cbtw
mov
out
pop
or
xor
sub
rclb
sub
lods
jnp
ret
or
popf
cmp
xor
movsb
inc
xchg
repz
or
inc
mov
adc
cmp
aam
push
jmp
dec
mov
xchg
cmp
mov
adc
fsubrs
mov
cmpsl
in
xchg
ljmp
iret
lahf
inc
jl
push
pushf
mov
and
cmc
mov
sarl
pop
ret
stos
dec
movsl
mov
sub
adc
push
int
pop
aaa
mov
pop
loope
push
adc
movsl
mov
jle
sub
xor
fsts
outsl
std
mov
subl
das
add
lcall
nop
imul
ret
imul
cmp
inc
sub
lock
rcll
dec
es
dec
mov
push
xchg
fidivl
sbb
je
repnz
out
xor
lahf
mov
sbb
ficompl
cmc
cmpsb
jae
lret
aad
sub
mov
push
leave
add
fs
mov
les
ret
or
adc
fldl
scas
popf
scas
inc
icebp
shrb
fbstp
cmp
loope
adc
test
adc
mov
arpl
mov
inc
mov
cmpsb
shlb
and
pop
push
fimull
jmp
out
es
addr16
adc
pop
pushl
add
mov
mov
mov
lods
enter
aaa
cwtl
lret
jmp
sbb
mov
jno
pop
cmc
mov
ds
aam
test
xchg
jbe
adc
adc
pop
jge
outsl
inc
dec
jge
lahf
mov
xor
push
cmp
push
jnp
shrl
cmp
movsl
arpl
movsb
das
jo
xor
fst
popf
jns
lahf
or
adc
cli
lcall
clc
dec
inc
and
mov
sbb
cmp
adc
jnp
into
outsb
into
cs
lret
adc
dec
mov
daa
sub
inc
jl
rorb
dec
mov
mov
jb
loop
sub
unpckhps
xlat
fadds
xor
xchg
push
pop
and
pop
push
adc
pop
fiadds
fbstp
arpl
sbb
lret
rcrb
cmp
insb
ja
ljmp
js
xor
mov
and
or
pop
adc
mov
push
cmp
test
sbbb
mov
add
arpl
inc
out
inc
add
push
sub
popa
push
ds
ret
popf
popf
aaa
call
push
pushf
lahf
push
push
and
movsb
adc
sub
sub
dec
insb
ja
lret
pop
adc
in
mov
in
popf
out
fcmovnbe
cmc
jns
cmp
insb
xchg
xchg
and
mov
jmp
pop
sbb
push
stos
iret
into
and
loope
mov
mov
or
jno
fisubrl
inc
cmp
mov
xorl
subb
cmpb
inc
roll
inc
mov
sbb
cmp
ja
sub
adc
sti
popf
test
jp
daa
mov
gs
pop
push
xor
mov
jg
cld
mov
pop
es
lret
cli
mov
xchg
stos
push
and
jno
push
xchg
or
shl
lahf
sub
imul
test
sub
push
and
add
arpl
sub
jl
mov
cmp
push
jbe
push
enter
adc
mov
fdivp
xchg
test
jae
je
iret
dec
ret
cltd
push
mov
into
aam
mov
imul
fucomip
sub
addr16
jmp
js
or
ret
inc
sub
dec
cmpsl
insl
sub
jbe
out
sub
inc
mov
aaa
xor
adc
push
sbb
leave
xchg
jp
ljmp
daa
adc
push
je
aam
loope
sahf
pop
ficompl
sahf
lea
fcomip
shl
data16
jns
add
sbb
cmp
add
cli
ret
mov
mov
in
lret
mov
and
push
loopne
lret
push
lahf
cmpsb
out
rorl
fst
dec
data16
adc
xchg
jo
or
adc
aad
inc
fcompl
pop
mov
mov
out
pop
xor
mov
sub
jp
cmpsl
cltd
add
aad
mov
leave
fsubrl
lcall
aas
outsb
push
mov
sbbb
pusha
jmp
fisubrs
pop
ret
xchg
mov
pushf
inc
call
inc
test
pop
retw
mov
adc
bound
je
cmp
adc
sub
add
inc
movsl
sbb
imul
push
es
fldl
and
sti
loopne
add
push
add
jl
push
leave
sbb
hlt
xchg
lods
xchg
daa
pop
cmp
scas
pushf
push
aaa
in
and
adc
sub
mov
mov
scas
mov
sub
ret
add
test
aam
cmpsl
and
mov
cmp
leave
lahf
rclb
cmp
mov
push
dec
pop
daa
roll
sub
pop
mov
and
insl
leave
jg
xlat
xchg
add
cmp
in
add
leave
fs
sub
lahf
sub
inc
sbbl
push
fs
scas
je
add
xlat
mov
pusha
add
sub
or
les
pop
mov
test
mov
and
dec
and
bound
cwtl
out
rolb
mov
jmp
ja
jb
mov
ljmp
into
cmp
dec
sbb
jno
aas
inc
xlat
mov
fisubs
fwait
cmpsl
sbbb
int
mov
and
shlb
int3
xchg
cli
push
rcl
gs
aaa
mov
call
scas
notb
movsl
and
jnp
pushf
loop
and
sub
xchg
mov
nop
mov
mov
xor
push
mov
xchg
dec
or
stc
cmp
or
aaa
cmp
into
out
cwtl
arpl
cmpsb
mov
dec
loopne
sub
inc
rcr
add
dec
fwait
loopne
pop
mov
addr16
ficoms
xchg
push
add
gs
pop
mov
pop
imul
cmc
pop
sub
rcll
aas
dec
cmpsb
xor
jle
add
fwait
xchg
xchg
cld
cli
push
mov
push
jge
jne
lods
jecxz
imul
mov
lods
ffree
imul
push
sbb
push
test
push
sub
lret
push
and
add
fcoml
inc
movsl
dec
push
jle
lret
test
arpl
mov
and
mov
pop
or
and
mov
out
loope
lret
and
iret
shrb
cmc
jne
xchg
outsl
mov
sub
cmp
lahf
fcomip
cmp
je
mov
aas
mov
test
stos
setno
and
dec
add
dec
or
ds
and
or
call
push
jo
jae
aas
pop
adc
rclb
inc
pop
rcll
cmp
paddusb
jecxz
push
cmpsb
cmp
xchg
mov
inc
cmp
rorl
lret
in
cmp
mov
test
cli
lock
and
lret
lods
dec
ds
ds
scas
xchg
in
pusha
xor
xchg
movsl
push
lods
incl
dec
lahf
repz
sbb
dec
or
push
insb
push
cwtl
inc
cld
fmull
clc
dec
push
es
daa
sbb
jnp
inc
addr16
adc
in
out
jg
add
mov
mov
shll
adcb
arpl
leave
xchg
mov
pop
data16
or
xchg
and
in
dec
data16
push
mov
pop
xchg
mov
popf
push
mov
sub
and
clc
xlat
and
lcall
lods
imul
sub
ficoml
cvttps2pi
mov
aas
mov
push
cmpsb
out
sub
xchg
jbe
repz
mov
jmp
data16
rorl
popa
movsl
inc
getsec
outsb
in
leave
push
xor
sub
sbb
in
xor
pushf
pop
test
mov
jecxz
outsl
sbbl
jnp
add
fdivrs
out
rcrl
leave
pop
add
repz
lea
scas
xor
lods
lret
imul
lods
mov
add
and
sbb
cmp
xchg
pushf
push
mov
mov
dec
mov
out
ss
lods
js
mov
aam
ljmp
sub
frstor
lock
cwtl
jmp
rolb
push
jbe
sbbl
jo
adc
push
jns
adc
es
repnz
push
and
push
iret
mov
and
xlat
cmpsl
xchg
adc
pop
pusha
mov
jno
pusha
test
daa
outsb
or
or
push
mov
and
mov
repnz
sbb
push
aas
sbb
mov
mov
push
movsb
jb
mov
adc
adc
pop
mov
movsl
imul
shlb
and
pop
lret
lods
cmp
test
jmp
subb
inc
cmp
lock
dec
faddl
cwtl
lea
xor
and
leave
sub
cld
shl
cli
add
hlt
dec
sub
mov
adc
adc
dec
addl
iret
add
xchg
jle
xchg
jno
mov
enter
and
add
dec
push
lods
mov
jo
pop
pop
decl
push
sub
jl
pop
fidivl
sub
lods
pop
pop
push
popf
push
mov
jb
lods
arpl
in
sarb
jmp
aaa
fdivr
ljmp
aaa
mov
aaa
push
in
jle
dec
sbb
mov
sbb
adc
shlb
adc
inc
jae
hlt
inc
jmp
add
xchg
and
stos
nop
out
rorb
dec
lret
dec
std
pop
lret
pushf
mov
and
mov
or
je
clc
imul
es
dec
ja
or
push
cmp
mov
sbb
inc
aaa
sbb
xchg
fildl
ret
mov
lret
and
loope
lock
jge
ret
mov
movsl
mov
mov
lods
jecxz
enter
ds
mov
sti
mov
fistl
fwait
in
mov
push
cmp
dec
incl
sub
jb
pop
test
aas
inc
mov
xchg
push
push
mov
lods
sub
fcompl
faddl
dec
jp
xchg
adc
rol
mov
dec
mov
dec
incl
or
outsl
cmp
and
out
push
aas
cmp
out
in
nop
fildll
add
nop
xchg
xchg
add
dec
cmp
push
push
mov
fldt
loopne
ds
add
mov
fcoms
dec
jno
sub
insl
mov
sub
cmpl
xchg
sub
inc
push
cli
sub
push
movsb
in
ljmp
xor
pop
repnz
shrl
cltd
fstp
push
lret
mov
and
mov
push
int
mov
std
dec
hlt
pop
mov
xchg
cld
add
gs
loop
popa
cwtl
imul
pop
xor
aas
cmp
scas
loop
jo
sbb
dec
leave
or
ds
push
lcall
daa
es
dec
xchg
add
test
jnp
xchg
xor
dec
lret
add
imul
sti
pusha
add
movsl
mov
lds
fcoms
adc
fs
es
pop
ja
lods
mov
sahf
aam
add
mov
adc
lret
mov
call
outsb
inc
adc
adc
stc
out
shll
dec
test
add
test
or
sbb
daa
in
rcll
js
mov
imull
or
loope
jbe
jg
bound
test
jmp
test
std
mov
push
les
inc
dec
cmpsb
push
sub
decb
fwait
in
inc
hlt
imul
sub
pop
repz
ja
out
xchg
sbb
xchg
adc
and
hlt
adc
shrl
jmp
aam
jns
sbb
jg
bound
repnz
shl
and
faddp
xor
in
aad
cmp
add
popa
cmp
rcll
imul
sub
std
push
lods
and
jle
enter
testl
add
repnz
pop
add
lret
xor
dec
adc
add
dec
or
test
popf
cmp
clc
sub
loop
scas
sahf
out
mov
dec
mov
mov
xchg
adcb
mov
loopne
iret
add
aad
sbb
test
push
sahf
ror
and
mov
repnz
fdiv
mov
frstor
or
fisubrs
adc
jb
and
xchg
pop
mov
insl
fcoms
ret
test
dec
mov
adc
adc
bound
movsb
lahf
pop
or
push
aas
xchg
test
lods
xor
lcall
inc
loop
lds
mov
or
lret
nop
cmp
jg
pop
mov
jecxz
mov
outsb
pop
push
xchg
outsl
aad
pushf
imul
jg
js
fsubr
mov
sub
push
push
inc
fsub
push
mov
add
in
mov
cmp
lcall
cmp
xchg
outsl
inc
shlb
adc
dec
lret
sub
inc
stc
cmp
dec
fs
cmc
cmpsl
and
sbb
mov
jbe
xchg
mov
repz
add
int3
mov
mov
mov
cmp
xchg
push
inc
jl
dec
notb
dec
add
in
cmpsb
mov
popa
fidivs
adc
or
mov
xor
add
jnp
or
out
punpckhdq
addr16
pop
xor
mov
aad
push
jge
loopne
movsl
repz
outsl
push
jl
stos
popf
mov
popa
and
ret
dec
sub
mov
push
cmp
cwtl
ja
push
inc
shl
and
dec
ror
cmp
sub
mov
cmpsl
fwait
lret
fcoml
cs
mov
sub
mov
imul
jae
aas
adc
repnz
cmpsb
push
mov
out
ret
or
jmp
mov
stc
push
cmpsl
add
or
out
xchg
mov
adc
xchg
mov
stc
pop
xchg
loopne
test
jns
fmulp
fidivrs
es
mov
insb
loope
call
mov
mov
jg
int
dec
das
pop
inc
lret
div
lret
mov
icebp
aad
xrelease
and
push
push
fwait
rcll
ror
data16
inc
xchg
addb
xchg
sarl
xchg
test
push
icebp
xor
inc
mov
adc
jb
pushf
sarl
sub
mov
ret
xchg
adc
rolb
mov
stos
repz
xchg
call
imul
rcll
mov
test
out
sbb
pop
jne
mov
insb
insb
je
pop
inc
in
movb
jl
mov
sub
dec
lahf
iret
cmp
test
lds
xchg
fs
insl
test
pop
leave
imul
test
xchg
sub
lcall
test
dec
xchg
push
push
lret
icebp
int
sub
push
nop
and
push
mov
mov
or
mov
mov
test
lea
push
and
insl
xchg
xchg
jno
mov
jmp
jge
mov
jbe
jbe
push
cmp
mov
data16
mov
cwtl
fisubrl
subb
push
jns
test
cld
fistpl
icebp
add
pop
jp
test
inc
das
xlat
popl
dec
mov
xor
pop
and
mov
out
xchg
or
negl
xchg
in
jmp
sub
fmull
adc
xchg
jns
or
mov
mov
inc
pop
cmc
and
jg
in
inc
mov
sub
movsb
xor
xor
rcrb
shrl
int3
je
imul
mov
xchg
flds
mov
insl
fisubrs
push
jns
sub
sbb
xlat
ficoml
sub
stos
mov
aaa
lods
mov
lret
pop
lahf
jmp
out
mov
xor
out
push
jbe
je
loop
out
les
test
sub
cmp
loop
add
dec
mov
fwait
hlt
ret
xor
add
mov
or
insb
fisubrs
mov
popf
xchg
xor
and
dec
rclb
mov
cmc
sub
neg
push
rol
push
dec
jp
fcompl
loope
xor
in
hlt
mov
jl
jp
loopne,pn
jnp
insb
pop
jmp
adc
push
fbstp
jg
inc
add
add
sarb
pop
push
cmp
mov
sub
movsl
xchg
test
sbb
jns
imul
pop
popf
jp
xor
roll
jne
int3
mov
push
faddp
movsb
inc
mov
repz
mov
icebp
ret
sbb
fisttpll
mov
outsb
cwtl
push
pop
inc
fyl2xp1
push
mov
cmpsb
bound
push
aaa
jg
fwait
push
dec
lret
data16
sbb
lret
pop
test
rcr
mov
addl
pop
xor
iret
xlat
mov
mov
sbb
icebp
sti
negb
adc
jmp
cmp
xor
jp
test
mov
hlt
dec
mov
sahf
movl
dec
xlat
inc
cld
inc
jnp
jbe
adc
push
pushf
aas
je
inc
andb
aad
add
icebp
imul
movsb
mov
push
outsb
jmp
inc
jb
hlt
lods
insb
outsl
cmpxchg
jae
jo
sbb
rcl
sbb
das
jge
aas
ffree
pop
cmp
mov
sbb
pop
mov
std
or
jecxz
pop
jae
push
push
jnp
adc
ret
xor
cmp
call
cmp
cli
xor
aad
fucom
and
or
jmp
dec
inc
cmp
mov
or
jle
cli
cmp
leave
inc
cwtd
test
adc
out
add
xor
inc
sti
mov
mov
inc
push
add
or
ljmp
negl
mov
adc
sbb
popa
and
test
push
ljmp
scas
xchg
adc
out
and
sarl
mov
das
lcall
div
out
xchg
gs
xlat
cli
aam
xor
fisttpll
in
lret
jo
ss
fisubrs
xor
out
in
push
lret
mov
shrl
inc
xlat
les
sahf
mov
dec
sub
lret
push
push
pushf
add
push
push
in
adc
jb
push
fisubs
xchg
mov
mov
xchg
mov
das
or
lret
dec
mov
mov
jns
pop
jo
pop
jge
push
add
scas
test
out
lock
push
sub
push
lret
lea
inc
push
fnstcw
mov
mov
xchg
jno
push
add
nop
pop
js
pop
mov
das
dec
jnp
push
mov
jmp
shr
mov
push
xchg
addr16
popa
dec
or
fldcw
arpl
dec
loopne
push
out
lret
inc
push
pop
cmpsb
cmp
inc
pop
icebp
pop
xchg
es
sub
mov
jle
xchg
inc
rcr
stos
ljmp
mov
inc
lret
xor
mov
nop
loop
lods
xlat
push
repz
pop
cltd
dec
push
push
mov
xchg
inc
inc
sarl
xchg
jmp
and
push
lcall
cmp
xchg
jmp
mulb
xchg
ss
cmpsb
std
xchg
jmp
jp
mov
into
jmp
sbb
shlb
scas
mov
jecxz
fadd
xor
inc
push
pop
ret
push
cmp
sbb
frstor
mov
adc
pop
inc
popf
test
jp
pushf
or
cmp
fsubrp
imul
js
pop
ret
jecxz
popa
into
int3
cmpsb
cmp
aas
cmpl
sbb
cmc
ss
repnz
fimull
xor
sbb
push
mov
daa
and
fdivrs
inc
lea
sbb
ja
loope
rol
leave
js
jae
or
xchg
push
lahf
insb
add
stc
jb
push
ljmp
movsl
sbb
mov
xchg
mov
sub
cwtl
pop
adc
add
mov
mov
jmp
in
and
imul
jmp
jmp
enter
mov
sbb
sub
push
jmp
xchg
cmpl
test
inc
inc
push
jae
xchg
mov
fsubr
scas
mov
push
inc
iret
scas
sbb
das
or
mov
or
mov
lds
add
or
push
jecxz
lods
shll
mov
fld
lods
xchg
mov
mov
or
test
inc
sub
and
scas
ss
push
aaa
sub
pop
add
adc
das
sahf
and
mull
cwtl
push
in
xchg
popf
test
pcmpgtb
les
cmpsl
sbb
les
xchg
add
inc
in
setno
fidivrs
adcb
enter
orb
xchg
mov
shrb
lcall
mov
xchg
ja
movsl
pop
dec
mov
push
fcmove
daa
push
pushl
mov
push
dec
sub
clc
stos
aas
pop
xchg
imul
pusha
cmova
test
outsb
xlat
mov
xchg
mov
clc
mov
xchg
scas
je
cmpsl
xchg
je
dec
divl
and
adc
xor
dec
sbb
ljmp
test
orl
mov
xchg
mov
pushf
push
cmpsl
hlt
mov
or
in
sbb
shr
or
shr
addr16
dec
lcall
hlt
mov
jg
sbb
or
mov
aas
movsb
in
stc
push
push
mov
iret
cmp
bound
push
out
cld
sub
push
mov
jnp
icebp
in
add
pop
test
sti
cmp
jno
je
jg
inc
out
mov
outsl
pop
xchg
mov
push
xchg
or
ds
repnz
push
xchg
and
lahf
sub
mov
lods
test
jge
add
loop
sub
push
dec
loop
xlat
dec
dec
das
or
adc
xlat
sbb
arpl
lods
fdivl
nop
shrb
imul
cmp
iret
sti
aas
cwtl
rcrb
pop
add
sub
lret
mov
jb
pop
addr16
adc
dec
sti
xchg
out
fcompl
gs
mov
fstpl
and
sub
cs
push
inc
xchg
test
or
push
test
mov
mov
cmp
jno
fidivs
jne,pt
pusha
loope
cmc
enter
testb
add
idivb
pop
pop
call
sub
scas
jns
add
pop
outsl
mov
ds
fstl
add
lods
adc
int
loope
addb
roll
mov
mov
and
xor
adc
xchg
sar
fdivr
jae
pop
add
movsb
or
jmp
fcomps
mov
fdiv
scas
mov
mov
call
pop
jne
bound
rorl
popa
pop
popa
inc
mov
jno
call
movsl
daa
dec
jno
push
jb
mov
mov
xor
sti
js
xor
xchg
out
cmc
dec
xchg
inc
sti
insl
cltd
je
pushf
dec
mov
out
out
adc
cs
mov
shl
mov
fidivrs
or
lds
int3
mov
psubw
cmc
jb
cs
mov
adcb
stc
jecxz
push
and
push
stc
mov
mov
insb
out
and
sub
insl
dec
inc
jbe
adc
mov
and
push
xchg
ja
dec
ret
xchg
sub
insl
daa
in
jbe
divb
in
bound
xchg
xchg
std
xchg
iret
hlt
cwtl
fsubs
sahf
popa
pop
hlt
in
cmp
cmc
inc
cmc
sbb
loop
fnstenv
push
cli
jmp
iret
cmpsb
lea
cmp
push
fldcw
dec
lret
icebp
cs
mov
stos
addl
xchg
ret
fs
or
sub
stos
ret
ljmp
in
add
enter
inc
repz
add
or
nop
cs
rolb
xchg
popf
pop
xchg
movsb
dec
shll
cld
out
mov
jge
pushf
jp
mov
ficoml
fistpl
daa
jns
add
sub
adc
cmp
jo
jae
aad
adc
push
jg
mov
sarb
jmp
cmp
ss
mov
or
out
sbb
jl
nop
mov
pop
pop
in
mov
mov
fbstp
daa
loope
stos
or
xor
jnp
adc
out
mov
pop
les
mov
push
leave
mov
pop
pop
inc
jb
sub
cmp
push
rcl
and
or
xor
mov
or
outsl
loopne
jp
sub
mov
test
sub
pop
adc
insl
push
push
movsl
das
add
fsubrs
push
cli
and
pop
dec
in
jg
mov
add
or
arpl
jmp
sub
popa
fistpll
mov
mov
imul
dec
mov
mov
push
push
jmp
fs
push
nop
adc
mov
or
cmpsb
adc
hlt
lea
lock
loope
sub
sbb
fisubl
mov
jecxz
enter
mov
xchg
dec
inc
pop
rorb
sti
adc
dec
pop
or
or
fldenv
sub
cmpsb
xchg
pop
sbb
cli
adc
cmp
dec
outsl
clc
inc
ror
popf
rorb
add
cmp
sahf
push
jmp
inc
popl
or
dec
cmp
data16
ds
sti
mov
pop
jmp
cwtl
scas
xchg
jb
enter
dec
cld
insl
arpl
cmpsb
cmp
inc
dec
cmp
mov
and
jmp
sbb
and
in
andb
jecxz
lock
gs
adc
add
mov
pop
cmp
mov
push
rorl
fldl
in
dec
insl
adc
aad
pop
or
daa
insl
int3
pop
lods
xor
movl
pop
test
hlt
add
dec
test
insb
push
in
scas
xlat
out
enter
add
adc
adc
div
xchg
in
pop
push
lock
pop
repnz
loope
dec
push
push
push
push
push
pusha
shr
adc
add
xor
push
das
jns
sub
sbbb
xchg
push
lret
fldl
lods
iret
add
pop
cmp
pop
adc
pop
xor
mov
pop
into
dec
adc
jg
movl
jo
xchg
pop
push
dec
cmc
lret
mov
gs
andb
out
xchg
hlt
xor
je
inc
xor
into
push
ret
outsb
dec
push
xor
mov
xlat
popa
xchg
lods
add
sbb
fistl
pop
call
repnz
or
mov
setp
and
add
test
es
jae
pop
in
jb
or
pop
xor
mov
adc
cmpb
stos
movsb
bound
sahf
sub
test
xchg
cs
cwtl
notb
test
mov
std
or
adcb
fistpll
mov
cmp
adc
into
aaa
scas
fsubl
pop
int
sarb
mov
push
or
pop
cmpsl
repnz
cli
out
nop
and
add
cmp
test
mov
jno
xorb
test
leave
fadd
mov
insb
mov
push
roll
jp
push
jl
dec
cmp
fsts
clc
mov
or
addr16
pop
xchg
insb
push
pop
lock
sbb
stos
sbb
sbb
xlat
xor
pop
popa
test
xchg
repnz
arpl
popa
notb
sbb
pop
fdiv
ds
jne
sub
cs
cmpsl
xlat
ljmp
sbb
mov
dec
jmp
js
push
insb
test
add
inc
sahf
fistl
movsb
or
fildl
mov
mov
push
gs
es
add
fs
mov
pop
cmp
cmp
lret
xor
xchg
nop
mov
add
or
loopne
cmp
fwait
cmpb
xchg
mov
push
lods
mov
pop
jp
test
cmpsl
rol
add
push
out
es
les
pusha
jb
fiadds
lock
insl
sub
test
sub
mov
test
shll
movsl
cli
dec
cmpsl
ud0
mov
xor
xor
lock
out
pushf
xchg
mov
popf
ja
test
ljmp
cmp
push
mov
jge
sbb
sarb
cmp
mov
pop
out
and
and
pop
das
aad
repnz
int
testb
in
mov
jl
push
and
into
adc
sub
mov
lret
lods
fdivrl
dec
loopne
faddp
xchg
pop
incl
sbb
sub
or
fwait
js
data16
xchg
lahf
xchg
ds
negl
cwtl
push
cmp
movsb
bt
and
enter
arpl
inc
xchg
pop
scas
jecxz
dec
jg
jle
orb
sbb
clc
cmp
lahf
jge
in
jl
dec
lock
int3
int3
xchg
xchg
push
mov
sbb
aaa
cli
les
inc
lea
mov
sub
mov
xor
stos
mov
push
and
dec
inc
jmp
in
test
inc
movsb
mov
sub
adc
xor
stos
xchg
lret
sbb
and
aaa
add
jne
mov
mov
shll
pusha
out
test
imull
aas
outsl
push
aaa
cmp
adc
icebp
push
ss
jne
cmp
xor
scas
jbe
lds
lods
mov
mov
push
mov
mov
cmovl
push
enter
out
mov
mov
xor
mov
push
loopne
rolb
push
mov
jo
jns
icebp
mov
and
xchg
es
xor
sub
rol
mov
xor
js
pop
xor
push
fwait
stos
outsl
jle
jl
mov
and
pop
add
loope
jbe
or
lods
xor
mov
jge
sub
insb
in
outsl
loop
or
jge
dec
fidivrs
cwtl
sub
dec
xchg
sahf
scas
push
xchg
dec
push
bound
mov
pusha
inc
mov
lahf
movsb
pop
or
adc
dec
cli
add
inc
xchg
mov
pop
add
bound
sbb
inc
mov
and
cmc
dec
jmp
or
orb
push
in
test
or
jl
push
mov
mov
inc
cmp
jo
pusha
mov
int3
rcrl
and
or
sbb
lock
jns
test
push
sbb
sub
or
mov
into
imul
sub
test
dec
and
push
imul
int
mov
push
push
pop
aas
jb
cs
xor
ss
jbe
xor
sbb
call
shr
das
loopne
ss
mov
pop
loop
sbb
popa
das
mov
cwtl
or
xor
or
mov
les
mov
popf
cwtl
mov
push
and
lret
or
in
popa
mov
pop
ds
andl
xor
orl
adc
dec
das
add
aam
movsb
cmp
inc
mov
mov
inc
xor
and
in
xchg
orb
and
dec
inc
inc
pop
popa
mov
loope
ret
xor
aad
xor
cmpsb
mov
mov
and
int
pop
into
das
cmp
loope
add
ret
dec
jbe
test
lret
inc
jmp
xchg
cmp
xor
sub
mov
xor
data16
jbe
add
or
push
test
push
jle
jp
mov
sbb
fsubs
sti
xor
cbtw
lret
insb
xchg
adc
in
idivb
fstpt
or
jbe
into
mov
dec
and
or
and
ds
mov
rcrl
xchg
push
jns
push
push
int3
sub
loope
nop
mov
dec
shlb
cmp
out
jbe
mov
xor
mov
inc
call
aas
push
sub
sar
push
xchg
add
add
out
loopne
hlt
fwait
lea
repnz
adc
lahf
mov
xchg
xchg
dec
and
pushw
push
dec
rclb
cld
push
rorb
mov
fisubs
insb
pop
add
jns
xchg
add
ja
scas
pop
push
cmp
sti
stc
ffree
daa
dec
mov
xor
jp
ja
scas
inc
dec
jmp
fs
hlt
add
fsubr
cltd
enter
and
outsb
push
xchg
out
andl
xchg
aad
das
pop
pop
repz
lahf
adcb
gs
cmpsb
cmc
jo
lret
jl
xor
or
faddl
jne
hlt
mov
cmpsl
or
mov
xchg
mov
mov
loope
fsubl
enter
inc
mov
sub
pmaxsw
pop
sub
mov
popa
mov
add
stc
mov
dec
lret
dec
packsswb
xchg
add
push
imul
xchg
and
cltd
xchg
cmp
insl
cmpl
mov
fcomps
idivl
jmp
jno
les
inc
or
sub
push
add
jbe
push
orb
scas
add
mov
movsb
sbb
adc
and
insl
sub
shll
cmp
call
add
mov
outsl
mov
jnp
xor
xchg
pop
lahf
testb
aad
movsl
pop
and
cld
subb
adc
jg
xor
shll
leave
add
inc
andb
lods
mov
and
or
pushw
mov
icebp
fcmovnb
inc
inc
jg
jbe
xor
cwtl
mov
call
mov
rcrl
xchg
inc
fs
jl
aaa
jecxz
push
mov
mov
cs
mov
rorb
es
pop
xchg
les
and
xchg
lock
push
jle
pop
mov
ret
test
push
jecxz
ljmp
cmpl
adc
sarb
gs
pop
je
push
aam
adc
mov
push
mov
clc
pop
add
xorl
or
insb
daa
push
test
rcrl
enter
adc
inc
divl
outsb
add
test
sub
inc
fcoml
add
jnp
stc
ret
cmp
repz
jnp
cmp
popf
push
test
mov
xor
daa
out
mov
dec
es
xchg
js
mov
mov
xor
std
mov
dec
fildl
clc
out
dec
fdivrs
dec
sub
adc
aas
dec
cltd
scas
add
lea
dec
icebp
pop
out
in
shl
add
stc
stos
xorb
adc
insb
xor
or
dec
ret
stos
repnz
jo
aas
leave
lret
ja
push
mov
ficompl
pusha
jbe
adc
mov
jnp
dec
sub
jbe
iret
mov
stos
int
cltd
or
fists
or
gs
ss
outsb
jle
jae
out
inc
jo
into
outsb
mov
xlat
inc
popa
and
mov
sub
mov
xchg
inc
hlt
adc
mov
and
sbb
ret
decb
pusha
lock
xchg
mov
roll
into
fldl
pop
sbb
lea
sahf
outsl
mov
mov
sub
or
sub
push
mov
pop
pop
in
gs
in
and
negb
roll
jl
shrl
orb
sahf
mov
push
gs
inc
push
insb
xor
push
adc
test
xor
addb
lahf
jp
or
cwtl
dec
cmpl
dec
sub
or
add
dec
jnp
stos
cmpsl
rorb
xlat
hlt
pop
sub
xor
jecxz
decl
push
es
shl
arpl
sbb
repnz
adc
cmp
dec
or
out
sti
xchg
push
adc
stos
rol
sti
movsb
push
xchg
rolb
aam
scas
negb
xchg
ret
negl
and
insb
push
nop
inc
icebp
jl
leave
outsl
pinsrw
mov
adc
xor
or
test
jge
cs
add
sbb
lock
dec
inc
sub
dec
shlb
push
pop
leave
dec
in
stos
jmp
adc
xchg
iret
cli
push
movsl
cwtl
out
add
stc
xlat
mov
cmp
testb
pop
das
lods
xor
cmpsl
mov
mov
jl
push
xor
ret
lret
and
and
mov
loop
stos
cli
sub
xorb
pop
sarb
push
in
cmp
inc
xor
test
out
cmp
or
mov
insl
jne
stc
add
pop
test
xchg
cmpsb
shll
popa
xor
cli
push
fisttps
out
cmp
adc
ret
add
sbb
jnp
mov
lods
xchg
adc
movsb
popa
mov
test
mov
push
or
xor
out
test
insl
sbb
pop
push
not
scas
lcall
cmpsl
cmp
mov
rcrb
stc
mov
dec
push
mov
xchg
shrb
sti
sub
jle
inc
lods
adc
pusha
sub
inc
and
fwait
loop
add
dec
and
js
sub
inc
sub
and
loopne
call
mov
test
inc
hlt
pop
stos
cli
mov
lods
add
fisttps
push
cmp
mov
cmp
negb
xorb
mov
loope
lcall
cmp
ret
sti
cmp
or
daa
adc
and
mov
loopne
push
fs
mov
rcr
test
lds
sbbl
loop
les
cmc
pop
hlt
fiadds
or
inc
lods
dec
mov
jg
jno
ret
mov
fsubrs
in
inc
inc
fs
out
sub
insb
pop
ret
jl
scas
lret
subl
rolb
or
shll
sub
or
stos
dec
or
dec
test
out
das
fidivrs
xchg
xor
das
inc
paddd
sarl
mov
and
xor
lock
rolb
lcall
addr16
fmull
adc
scas
fisttpll
std
mov
fldt
jmp
sbb
inc
rcrl
jmp
das
scas
mov
push
popf
dec
cmp
cmpsb
pop
or
pop
adc
dec
cmp
jb
cwtl
xchg
xor
and
xchg
arpl
lret
lea
inc
mov
repz
orb
pop
int3
movsb
lahf
repnz
pop
sub
push
sbb
aas
fstpt
pop
mov
test
xchg
xchg
test
adc
negl
das
xor
jb
les
mov
dec
outsb
fsubrl
popf
xchg
in
sahf
pushf
popa
sbb
pop
dec
add
pop
out
test
rcrb
scas
into
dec
mov
out
insl
mov
mov
rcrl
int
call
pop
mov
push
popf
fldenv
jg
add
call
repnz
les
dec
mov
js
and
daa
fistps
sbb
test
mov
jecxz
and
jecxz
ds
mov
test
mov
cld
out
xor
testl
cld
jb
cmpsb
jnp
mov
cltd
adc
lods
push
and
sbbb
iret
aad
ror
test
in
xor
jle
push
incl
add
popf
add
push
jb
pop
sbb
adcb
shr
lcall
dec
sbb
call
adc
or
push
adc
stos
movsb
add
scas
clc
inc
fdivrl
push
and
push
mov
jo
lods
xor
arpl
fldcw
jbe
je
push
xor
xlat
daa
jo
jae
out
dec
lods
jae
shrl
popf
int3
jmp
xorl
xchg
and
gs
jp
sub
sub
mov
lea
mov
pop
rcl
push
xor
and
test
repnz
cli
test
xchg
inc
jmp
add
jbe
pop
or
ljmp
push
repnz
and
cli
cmc
insl
pause
jge
sub
lahf
out
stos
clc
mov
in
cmpsb
les
cmpsl
sbb
cltd
outsl
add
and
aad
xchg
xor
xchg
ljmp
sbb
ss
adc
repz
inc
cs
push
mov
jge
lods
test
lds
inc
loopne
mov
repnz
add
mov
adc
gs
ds
out
dec
inc
addr16
lret
jo
cmpsb
mov
orb
shl
fcoml
iret
cmp
enter
jmp
fucom
pushf
add
icebp
sbb
loopw
mov
sbb
inc
or
jnp
fwait
fwait
xchg
xlat
jg
lret
and
dec
ret
mov
outsb
sub
mov
idivb
add
sbb
xchg
jns
push
out
nop
sbb
mov
dec
jp
test
cwtl
stc
test
fdivs
push
in
mov
sbb
mov
dec
cs
xchg
lret
mov
jae
repz
inc
dec
imul
popa
jb
jl
dec
mov
nop
test
aam
or
sub
jbe
mov
mov
and
cs
adc
nop
lods
inc
rorb
push
je
xor
pop
dec
jg
lcall
cmp
cmpsl
push
ret
loopne
std
adc
push
fistpl
stos
add
jb
shlb
xor
fisttps
mov
data16
rcll
jbe
and
pop
or
inc
fsubl
jae
jg
mov
std
fimuls
das
mov
lcall
push
cld
add
adc
pop
adc
addr16
xor
pusha
push
jbe
test
adc
dec
mov
inc
sub
and
pop
stos
pushf
push
jbe
ss
push
sbb
add
ja
sub
movsl
sub
mov
and
shl
rcrb
pop
mov
dec
sbb
cmp
cmp
dec
and
add
xor
sbb
sbb
ljmp
jle
dec
sbb
cld
xchg
adc
jmp
test
and
push
fs
push
les
int
mov
cmp
bswap
lret
add
jne
insl
jmp
repz
jmp
inc
ljmp
lock
or
rclb
repnz
sub
testb
test
incl
data16
aad
or
sbb
imul
push
dec
test
xor
sub
push
addl
cmc
or
push
rorb
test
nop
mov
call
xchg
dec
je
adc
inc
jmp
pop
xor
loope
mov
stos
dec
mov
pop
clc
jns
shlb
mov
lock
and
cwtl
roll
jl
outsl
fucomp
mov
pop
sub
adc
cs
nop
mov
mov
jg
fstpt
loop
inc
add
mov
inc
pop
loope
test
fmul
pop
push
insb
dec
cltd
pop
insb
pop
lret
xchg
pop
push
ljmp
ss
xchg
push
orl
insl
or
add
or
in
sub
push
test
hlt
out
jbe
out
sub
pusha
pop
push
inc
loope
insl
scas
mov
repz
insb
push
andb
mov
push
xchg
les
in
dec
pop
pop
dec
jne
testb
push
setle
push
xchg
xor
add
mov
adc
mov
add
jns
fsubp
or
arpl
scas
movsl
sub
pop
xor
icebp
testl
aaa
loop
loopne
test
ja
stc
push
xlat
xchg
mov
xchg
dec
fucomi
pop
aas
adc
leave
ficoml
rclb
push
outsl
cmp
xchg
or
jb
in
es
pop
or
and
jno
sub
out
jns
cmc
dec
aam
out
pop
ud0
aas
jge
inc
mov
loop
rorb
in
popf
shll
insl
sub
mov
mov
push
scas
pop
mov
aad
mov
mov
lea
cmp
or
mov
imul
mov
and
mov
and
adc
cmp
mov
mov
push
in
iret
std
inc
fsts
pushf
jae
insb
lahf
inc
jno
imul
stc
or
mov
or
dec
insl
adc
shll
mov
iret
mov
stos
pusha
outsb
jge
jle
pop
ret
lret
popl
jbe
mov
sub
xor
lcall
mov
xchg
inc
fsubrs
cld
enter
pop
dec
add
stos
in
insb
sbb
ja
clc
xchg
pop
stos
iret
dec
dec
add
test
jo
decb
gs
mov
xor
adc
mov
nop
or
cld
dec
mov
in
cmp
add
scas
test
testl
faddl
adc
test
push
xchg
test
mov
fs
sub
add
icebp
mov
cmp
sub
adc
fld
jo
cmc
daa
stos
lret
dec
int3
jge
push
adc
sbb
push
mov
cmp
mov
push
outsb
fisubrl
sub
sahf
add
pusha
std
ret
push
andb
jbe
jnp
adc
shrl
inc
dec
pop
je
dec
test
sbb
push
dec
sub
or
push
mov
lahf
mov
pop
pop
fnstenv
repz
push
ds
ljmp
popa
testl
xchg
cltd
les
adc
lds
sbb
mov
andl
scas
std
adcl
sbb
imul
call
and
je
popf
mov
sub
jl
movsb
call
sub
shlb
sub
clc
imul
pop
nop
out
mov
leave
jg
mov
cmp
loopne
into
test
jb
rcrl
xchg
cmpsb
sbb
mov
fimull
popa
push
or
sub
lret
lods
mov
dec
out
nop
cmp
mov
clc
sub
and
or
push
mov
loopne
lcall
bound
jg
out
iret
insl
jae
cmpsl
jg
add
jl
sub
and
divb
adc
js
mov
testb
push
sub
ret
test
mov
jbe
lcall
mov
inc
lods
pusha
movsl
ds
repz
xor
xchg
arpl
ds
mov
or
push
jge
pop
sub
dec
pop
mov
not
cmp
jge
xor
mov
push
xchg
scas
gs
les
pop
jae
sub
movsl
fistps
mov
add
subb
lret
pushf
mov
mov
mov
cmp
ds
inc
push
or
cmp
out
pop
sub
std
es
cmp
je
outsb
or
or
out
inc
nop
and
in
add
scas
shr
cmp
and
fsubrl
mov
pop
loope
mov
cmp
adc
int
lahf
popa
mov
shl
lds
cmc
lds
call
push
jns
and
addr16
dec
popf
lret
jle
out
or
scas
push
in
rcrb
in
dec
xchg
push
push
adc
dec
jl
fs
insl
dec
or
push
jl
push
lret
push
adc
push
sub
mov
mov
add
mov
addr16
imul
xchg
gs
dec
and
in
testb
out
lahf
inc
not
mov
lock
out
stos
or
movsl
mov
cwtl
mov
outsl
pop
sub
push
outsl
jbe
push
inc
xor
jmp
out
push
or
jb
inc
xor
inc
jmp
ja
ret
notl
inc
jl
xchg
aas
lds
fcomi
pushf
outsl
pop
adc
sbb
xchg
pop
and
sbbb
out
xchg
cmp
cmpb
inc
jno
push
outsl
stos
mov
outsb
mov
xor
and
xor
inc
cmp
cld
jns
fwait
sbb
stos
push
int3
xor
or
insb
stos
andb
lret
std
lcall
sti
pop
push
aad
cmpsb
sbb
outsb
out
arpl
pop
mov
adc
push
rcll
mov
xchg
jl
rcrl
lret
insl
push
xor
xor
pop
jg
xor
fildl
xchg
xchg
add
int
lods
pop
adcl
in
pop
mov
repz
jle
xchg
jg
stos
jmp
outsl
sub
inc
mov
inc
dec
push
orb
rolb
movsb
mov
scas
fnsave
cmp
sbb
push
jo
pop
out
adc
int
add
stc
lret
cmp
ret
outsb
mov
mov
sub
add
std
mov
jg,pn
inc
xchg
jmp
adc
fdivrs
push
sub
push
ds
push
ss
rol
push
mov
out
xor
push
jae
cmp
xor
cmp
pop
fdivrs
clc
lret
test
mov
popa
test
ss
ja
jmp
imul
mov
jnp
ret
cmp
cmp
lea
addr16
inc
int3
dec
lret
pop
clc
pop
add
call
jae
stos
mov
mov
stc
push
jg
rsqrtps
pop
xor
lret
cld
inc
sub
aas
pop
inc
jg
jae
pop
jle
push
leave
fisubrs
inc
xchg
inc
fidivl
stos
xchg
shrb
mov
sbb
cltd
js
sti
jmp
add
xchg
dec
fimuls
jae
stos
sbb
arpl
jmp
sbb
pop
adcb
jno
pushf
rorb
push
mov
jmp
dec
mov
ret
aaa
xchg
sub
popa
cmp
push
test
push
es
mov
mov
mov
push
xor
sbb
adc
ds
pop
jge
js
repnz
lret
xchg
mov
adc
fsubl
mov
xlat
xchg
xor
add
xchg
movsb
xor
xor
imull
sti
sahf
lock
xchg
fnsave
aad
and
xchg
mov
sahf
fstpl
out
outsb
in
fsubl
mov
fsubl
inc
lret
in
mov
imull
adc
int3
int3
jl
cld
xchg
sbb
arpl
xchg
sub
inc
push
imul
sbb
int
fdivp
push
lea
pushf
daa
xlat
sub
aaa
add
inc
mov
sub
cmc
ret
jg
push
nop
adc
add
and
lods
les
sbb
sarl
pop
mov
scas
and
push
inc
cmp
idivb
mov
cmp
sbb
aad
addr16
push
or
inc
xchg
add
sbb
pop
sahf
or
cmp
or
jmp
adc
test
push
jmp
jb
clc
jae
mov
lods
xchg
bound
pop
xor
push
or
adc
jge
into
fstps
lahf
leave
mov
cmp
xor
pop
cmp
loope
mov
pop
jnp
push
rcll
nop
jnp
mov
push
aad
jp
lock
xchg
lahf
shlb
inc
rcrl
out
mov
movsb
fmull
push
dec
sub
mov
dec
adc
cmp
jo
int3
std
mov
lret
sbb
or
xor
loopne
mov
inc
icebp
sbb
xor
mov
mov
mov
outsl
pop
xor
pop
cmpsb
mov
inc
sub
mov
scas
push
xlat
mov
cmp
test
repnz
nop
push
mov
sahf
mov
xor
imul
and
jbe
icebp
test
mov
push
sub
js
adc
sub
push
add
cmp
jl
pop
hlt
cld
mov
enter
mov
xor
std
inc
fs
lret
mov
inc
pusha
pop
and
xchg
insb
inc
sbb
mov
loop
mov
sub
pop
imul
sar
lea
mov
repz
mov
pusha
stos
sub
xor
sbb
movl
imul
inc
out
jge
fwait
xchg
pop
pop
dec
jle
lret
mov
test
loopne
and
jge
stos
loope
cmpsb
fcmovnb
add
leave
call
out
mov
gs
repz
pushf
push
sub
add
or
sbb
shll
cs
shll
xchg
das
stos
inc
mov
into
dec
outsl
in
cltd
inc
mov
clc
lcall
mov
adc
out
jns
dec
cmp
dec
test
jl
mov
shr
xor
push
inc
lea
mov
ljmp
jo
ret
cmp
arpl
jp
mov
loop
pop
movsl
arpl
ret
sub
repz
jg
pop
out
push
mov
lahf
movsb
shlb
es
push
mov
jge
outsb
xchg
je
out
xchg
jb
call
repnz
dec
outsl
sbb
xlat
pop
into
sub
inc
push
push
or
and
pop
int3
rep
jae
pop
lock
lds
gs
outsb
push
stos
test
mov
mov
cmp
aad
mov
hlt
mov
add
pusha
cwtl
mov
into
movsb
into
call
pushf
xchg
add
cmp
xor
scas
inc
aaa
mov
push
mov
mov
ret
cmpsb
mov
clc
add
imul
cltd
add
lods
arpl
stos
pop
and
fdiv
shlb
shrb
in
sbb
pop
adc
push
jb
test
or
mov
sub
pop
clc
loopne
cmp
mov
mov
ret
jo
sarb
jne
or
in
fwait
rep
or
lods
lea
xlat
shrl
pop
shrl
xchg
sub
fldenv
add
repnz
pop
push
fs
jo
pop
xchg
addl
out
outsl
cmp
jne
sti
mov
pop
dec
pop
cmp
add
lods
cmpsl
pop
and
ret
sahf
jge
or
adc
adc
stos
cmc
lret
mov
sub
dec
add
mov
inc
stc
adc
ror
idivb
imul
xchg
push
fadd
outsl
cli
and
xchg
lock
pop
xor
inc
pop
pop
dec
adc
sbb
sar
push
push
fstps
addl
push
fbld
adc
mov
add
push
jge
inc
sbb
add
cmp
std
stos
mov
out
cmpsl
adc
or
mov
xchg
rcll
incb
jmp
ret
test
xchg
sarb
xchg
pop
cli
nop
fidivrs
add
xchg
ja
and
std
ffreep
dec
mov
lds
xorl
aad
mov
bound
test
and
icebp
mov
lods
jmp
aas
mov
out
test
stos
nop
adc
daa
pop
adc
sub
sub
push
xor
cld
lcall
imul
dec
outsb
adc
inc
xor
dec
inc
mov
mov
jne
push
scas
dec
sahf
push
cwtl
lods
test
xor
mov
sbb
cld
mov
lret
inc
lods
push
loopne
test
dec
scas
mov
cs
lock
mov
popa
inc
push
pop
testl
aam
out
sahf
adc
cs
sahf
dec
sbb
dec
add
jnp
fisttpll
add
movsb
cmpsl
incl
ja
cmp
and
movsb
inc
push
mov
mov
sub
mov
dec
mov
fnstcw
dec
in
cmc
int
out
and
pusha
jb
pusha
xorb
std
xchg
cs
mov
je
les
push
out
pop
popf
mov
cli
lds
dec
cld
pop
xchg
fisubrs
outsb
push
mov
xor
lds
popf
fcomps
imul
imul
xchg
sbb
dec
mov
das
jnp
mov
ss
jb
push
hlt
xor
leave
sub
xchg
in
mov
call
push
pop
jae
out
lea
push
dec
data16
jo
stc
push
pop
mov
add
pop
xor
mov
inc
jp
mov
cmp
out
adc
sub
lret
clc
and
jg
adc
mov
xchg
inc
notl
xchg
push
rclb
test
ret
sbb
or
adcb
stos
ret
icebp
push
pop
sub
adc
out
ljmp
push
addl
and
lsl
aam
xlat
jne
adc
mov
add
fbstp
sub
insb
ret
decb
lock
ljmp
enter
mov
inc
pop
and
dec
push
jl
aad
pop
and
mov
ficoms
shrb
sbb
popf
or
fisubrl
mov
mov
sub
add
mov
jge
mov
shl
pop
inc
dec
xchg
mov
pop
push
lcall
push
movsl
sbb
das
pop
incl
sbb
or
cld
cli
add
pop
out
xchg
sbbb
daa
sub
jmp
lods
push
scas
jnp
adc
or
in
arpl
push
aas
push
push
add
aad
int3
jo
pop
add
and
in
in
das
outsb
test
cmp
adc
push
f2xm1
gs
cwtl
push
adc
mov
insl
pop
xchg
jns
sbb
fwait
pop
dec
pop
push
xor
sub
inc
gs
jno
jp
sub
sti
push
push
int3
mov
insb
int
hlt
add
xor
jecxz
mov
cs
sub
dec
jno
in
daa
cmp
loop
ds
aas
fwait
js
scas
fildl
xlat
into
jo
mov
stos
jo
fistpll
jae
mov
es
adc
inc
push
jne
inc
mov
ret
lods
test
and
repz
sbb
in
push
jge
push
int3
rolb
mov
mov
out
mov
xchg
loope
test
jmp
or
std
cmc
mov
mov
fisttpll
jbe
mov
jle
outsl
sbb
out
xchg
mov
dec
test
mov
adc
mov
add
xchg
ds
jne
lock
jge
shl
lcall
popf
arpl
data16
cmc
adc
add
jae
xchg
cmp
pop
rcl
and
xchg
jg
test
pop
lods
add
imul
mov
xchg
and
pop
ds
shrb
mov
push
loop
sbb
shll
cmp
sub
pushf
lret
cltd
iret
fs
mov
mov
scas
pop
xchg
mov
testl
aad
jg
ror
and
int3
or
mov
lcall
adc
mov
jp
imul
cmpsb
fdivp
dec
mov
mov
sub
movsb
adcl
cmpsb
inc
fwait
jecxz
xor
imul
cmp
sub
outsb
fisttps
mov
mov
push
loopne
in
int
mov
test
xlat
jmp
insl
aaa
clc
jnp
push
fldt
repz
xchg
jnp
scas
ret
push
orb
lcall
lcall
popf
int
and
push
xchg
and
jle
push
and
jge
mov
loopne
or
movsb
mov
cmp
push
je
cmp
mov
xchg
cmp
gs
cmp
hlt
mov
mov
jne
clc
into
repnz
stc
dec
push
push
mov
sub
outsb
mov
stos
lods
out
push
xchg
adc
inc
adc
stos
add
mov
es
push
inc
cmpsl
les
ja
add
mov
mov
xchg
fadds
imul
add
enter
mov
or
cli
insl
pop
pusha
inc
mov
cwtl
and
cmpsb
arpl
dec
jmp
icebp
mov
cmp
orb
addr16
mov
push
inc
dec
nop
mov
fidivl
pop
stos
mov
sub
xlat
jae
cmpsb
sti
mov
or
mov
inc
dec
gs
lds
xchg
sbb
cmp
aas
lret
call
pusha
cld
shrb
popf
insb
cmpsl
lahf
cli
sub
sahf
mov
or
mov
add
repz
or
or
or
xlat
lods
cmc
cmp
cwtl
push
xchg
out
pop
test
push
ret
out
add
call
fldenv
jle
incb
or
inc
xchg
sub
notb
push
test
pop
inc
loop
sub
cmp
fst
inc
push
jg
js
dec
insb
repnz
imul
mov
push
call
mov
cmp
sub
sub
repz
mov
pop
imulb
shl
xchg
js
out
xchg
or
push
or
mov
mov
lahf
dec
imul
xchg
cmp
or
pop
data16
cli
pop
jns
push
mov
xchg
dec
xlat
mov
sbb
cmp
ret
jae
in
push
mov
pop
std
into
movsb
mov
push
jmp
xor
push
fwait
sbb
mov
xchg
popf
paddb
insl
sub
clc
mov
imul
mov
xchg
aam
aam
stc
xchg
jmp
cmp
mov
loop
pop
rolb
jnp
mov
pop
push
jle
push
clc
jno
sbb
mov
add
lret
outsb
in
pushf
and
pop
mov
xor
notb
and
out
lahf
addr16
cmpsl
jle
imul
inc
addl
dec
jae
and
sti
int3
mov
xchg
inc
and
sti
or
cmpsb
mov
fstl
jg
jnp
pusha
rcrb
shr
lahf
and
jmp
cmpl
iret
faddl
aaa
insl
and
cmp
mov
ds
js
adc
mov
imul
mov
outsb
inc
les
sbb
mov
es
call
and
pop
push
adc
xchg
jg
mov
daa
cmp
cmp
xor
pushl
push
xchg
mov
arpl
ret
cmp
sahf
ds
out
mov
jge
pop
stos
cs
xchg
sbb
pop
ret
dec
js
xchg
ss
cmp
mov
pop
push
outsl
cwtl
test
cmp
cmp
out
mov
cmp
push
stos
or
iret
rclb
out
iret
sub
push
aas
jo
clc
adc
int
shrb
pop
mov
mov
mov
push
xchg
or
inc
stos
xchg
call
lods
pop
xlat
ret
andb
enter
ja
inc
dec
mov
mov
hlt
push
jno
test
scas
pop
xor
scas
in
into
sbb
enter
add
xchg
iret
push
adc
enter
rcrl
in
xchg
fwait
sbbl
pcmpeqw
push
dec
pop
xor
leave
pop
lret
xor
leave
outsl
xchg
ds
clc
mov
inc
sti
cld
inc
dec
in
in
jae
or
je
in
popf
adc
dec
jo
push
jae
dec
and
push
mov
pop
xlat
fdivrl
loopne
or
movsl
imulb
jle
fs
dec
cli
jmp
sti
jp
pop
ljmp
popa
sahf
sbb
mov
in
xor
push
add
push
cld
sub
and
jb
xor
sbb
ja
push
int3
das
test
add
inc
mov
lahf
out
call
sbb
mov
add
or
cltd
fcmovnb
add
pop
push
and
seta
es
lods
loopne
sub
mov
jecxz
adc
mov
pop
stos
push
sub
out
jo
push
xchg
adc
and
sbb
in
pop
insb
jns
push
and
jge
and
push
jbe
sub
mov
push
jns
sub
imulb
inc
pusha
iret
pop
inc
mov
out
pop
pop
and
orb
jo
mov
sub
push
cmpsb
push
xor
std
sahf
sub
sbb
xchg
xchg
mov
push
pop
lret
cmp
push
test
ja
repnz
pop
jnp
leave
push
lds
lret
sub
test
cmpsw
fldcw
and
dec
xor
sbb
dec
jae
fstl
jle
add
sub
cmp
push
dec
les
jbe
mov
mov
or
repnz
aam
loop
jl
adc
int
jae
jne
inc
or
div
pop
dec
mov
push
sahf
scas
jmp
comiss
and
outsb
mov
add
adc
scas
es
and
enter
testl
lret
xor
fisubrs
scas
ret
mov
shlb
push
xor
negb
jnp
dec
addl
scas
mov
lret
xor
or
adc
mov
xchg
pop
loopne
sahf
insb
lods
shr
fsubrs
enter
fsts
sub
xor
jae
pop
inc
pop
mov
add
fldcw
mov
imul
mov
ror
sub
popa
in
push
mov
mov
mov
fwait
ljmp
in
lods
mov
jnp
dec
and
sti
jns
push
sbb
hlt
popa
or
cltd
arpl
stos
cmp
icebp
push
mov
jle
or
or
das
stos
or
cmpsl
adc
stos
sbb
arpl
lcall
rcrl
jo
shll
and
call
add
inc
and
lods
scas
enter
das
mov
cld
sarl
xor
pop
cmp
xlat
inc
lahf
sarb
jbe
and
loopne
inc
dec
das
or
lcall
mov
mov
rcrb
push
bound
pop
dec
ret
in
push
push
cs
adc
decl
mov
push
or
jmp
test
and
int3
aam
sets
std
std
shll
insl
xchg
inc
inc
fs
fldl
cmpsl
loop
pop
lods
inc
mov
rclb
and
loopne
jmp
push
je
addr16
inc
or
shll
gs
lods
fsubrs
push
das
loopne
sub
add
xor
xor
xchg
add
fs
fisubrl
das
movlps
push
push
or
stos
mov
pop
mov
insb
pushf
mov
cmp
mov
aaa
push
ret
scas
jnp
insl
pop
outsl
shld
sysret
add
add
inc
test
repnz
mov
push
xchg
cmp
or
jno
add
out
xor
mov
and
inc
cwtl
pop
loopne
loopne
cli
out
in
fadd
into
js
pop
stos
fimull
sarb
scas
leave
mov
xchg
pushf
inc
sahf
xchg
pop
mov
mov
fnstcw
push
hlt
xor
orl
mov
add
lock
sbb
ds
pop
push
xlat
imul
dec
xchg
pop
fcomps
add
mov
std
xlat
and
push
into
push
push
jne
adc
cmp
jae
adc
xlat
jmp
and
dec
sbb
scas
out
dec
cmp
sahf
push
nop
sahf
cmp
adc
out
mov
push
push
and
cmp
dec
push
adc
dec
fwait
cltd
lea
nop
hlt
popa
pushf
mov
or
out
and
pop
push
pop
and
push
xchg
outsl
outsl
and
jae
loop
sub
pop
mov
pop
dec
xchg
mov
in
loopne
adc
and
and
aam
scas
add
iret
or
xor
or
data16
fstl
out
test
lret
jne
pop
mov
xchg
fdivr
sbb
and
fsts
cs
sbb
call
adc
jmp
lret
mov
or
push
xchg
gs
xor
loopne
movsb
fcmove
or
add
push
sbb
cmp
test
mov
mov
jl
pop
aad
loopne
cs
mov
inc
mov
push
push
daa
xor
idiv
sti
test
cmp
dec
dec
stos
push
cmp
jbe
pop
shlb
mov
iret
inc
es
jne
incl
or
test
test
add
push
inc
out
ss
pop
test
push
push
out
dec
outsb
cltd
into
shr
and
and
and
in
jnp
je
out
inc
mov
bound
gs
or
outsl
ret
sbb
int3
iret
movsb
sub
fcomi
jns
pop
fs
loope
cwtl
in
xchg
cmp
test
fisubl
xchg
pop
in
or
add
aad
arpl
mov
sub
jne
inc
jle
dec
mov
adc
pop
bound
daa
insb
push
jg
and
jnp
add
cld
lods
cwtl
repnz
cmp
sarl
adc
daa
popf
pop
les
repz
les
rdpmc
pop
jge
jmp
xchg
lods
mov
xlat
cmp
jne
stos
mov
into
rep
ja
test
loop
cmp
stos
imul
dec
sub
xchg
xchg
ret
loope
jo
push
xchg
stos
or
movsb
mov
imul
call
mov
sbb
and
stos
pop
mov
jle
pop
movsb
sbb
pop
push
push
je
aam
pop
inc
fmuls
fidivl
scas
adc
aad
imul
jecxz
lds
adc
inc
iret
add
adcl
adc
test
loope
das
jne
pop
push
sub
adc
sub
push
xchg
cmc
rcll
dec
popf
mov
cmpsb
gs
jo
ret
pop
inc
mov
mov
sub
clc
xchg
mov
rol
fdivrl
and
fidivrl
mov
test
test
aas
sub
add
or
jl
jp
or
aad
sub
sti
stos
push
in
mov
int
lods
cmpsl
scas
and
test
std
insl
mov
test
cltd
mov
shll
fwait
sbb
fcomi
inc
aas
faddp
fiadds
push
stos
icebp
sahf
sti
addr16
stos
xor
stc
sub
lahf
cwtl
outsl
and
mov
jl
xor
jns
xchg
jno
repz
ljmp
mov
xor
repnz
mov
sbb
xchg
push
fwait
call
hlt
mov
mov
xor
aam
push
sbb
adc
jecxz
or
arpl
cwtl
out
jecxz
les
mov
iret
iret
lret
or
lods
fidivs
or
out
xchg
and
fmuls
add
and
es
ja
ja
jo
xchg
xchg
cmpsb
mov
lock
repnz
inc
cmp
dec
sbb
addr16
bound
les
xchg
adc
jo
fstp
jl
sbb
inc
ja
jp
push
movsl
or
dec
xchg
aam
xchg
mov
repnz
pop
xchg
and
popa
mov
js
mov
ss
push
lods
and
xor
push
mov
out
push
aas
pop
sub
dec
jns
mov
mov
mov
fucomp
mov
pop
aad
fisttps
jmp
mov
sar
das
addr16
fs
stos
adc
ljmp
cmpsl
aam
sar
test
dec
push
je
inc
cmp
addr16
push
push
mov
adc
lret
in
mov
push
mov
mov
into
ret
das
adc
icebp
imulb
test
movsl
lret
mov
xor
std
jp
fsubrl
sbb
mov
sbb
fsubrs
data16
mov
inc
lods
daa
dec
mov
jmp
subl
jae
xor
add
mov
pop
cmpsb
mov
mov
jnp
adc
sbb
add
or
mov
rclb
xchg
and
aam
inc
xor
mov
dec
fstpl
pop
jl
sbb
iret
icebp
pop
mov
hlt
mov
inc
insb
pusha
das
fldl
xor
or
or
inc
shr
add
mov
pop
fcomps
sbb
inc
ja
sub
rorb
sub
pop
call
sub
mov
push
adc
push
sbb
mov
mov
scas
inc
aam
push
dec
ljmp
sbb
inc
jge
out
bound
mov
push
aam
mov
push
ja
sbb
inc
ss
cmp
loope
mov
icebp
add
mov
inc
cmp
dec
push
mov
stos
adc
aas
and
iret
adc
push
adc
mov
push
xchg
mov
xchg
and
movsl
rolb
jno
shlb
pop
outsl
mov
push
cmp
loopne
loope
push
rcll
bound
jecxz
test
add
or
pushf
add
mov
add
or
ret
xor
adc
sar
lods
xchg
pop
vmwrite
lock
and
xchg
and
mov
dec
pop
push
xchg
and
sar
repz
sub
fs
xchg
ret
jmp
hlt
inc
test
lret
adc
xor
fwait
cmp
es
movsb
faddl
pop
pusha
lds
pop
pusha
mov
pushf
add
mov
inc
xchg
insb
inc
shr
lret
or
mov
jb
mov
loopne
dec
or
sub
mov
jne
and
cmp
jmp
incl
sahf
addr16
mov
into
inc
push
pop
mov
fucomi
popa
stos
ficoms
aad
cwtl
inc
fucomi
dec
setbe
aas
scas
sub
pop
jle
jp
fdivrs
jp
loopne
std
mov
es
arpl
pop
scas
add
out
insb
cmp
js
mov
sbb
sbb
and
jmp
cltd
aaa
out
sar
inc
pop
or
cltd
in
bound
enter
mov
pop
xor
ljmp
xlat
dec
and
push
aaa
test
and
add
cli
add
out
inc
in
jb
lods
cmp
xor
fistpl
mov
insl
or
xchg
sub
loope
cmp
xchg
ja
adc
and
setb
push
inc
add
push
lcall
loope
add
ljmp
mov
pop
clc
fs
icebp
lret
add
subl
jg
sbb
lods
das
mov
xor
mov
dec
imulb
scas
dec
test
xchg
nop
stos
xchg
xchg
inc
push
in
dec
addr16
pop
ror
js
es
mov
or
test
rcrb
dec
int
inc
add
push
jmp
inc
adc
lret
aad
fdivrp
cwtl
and
data16
cmp
aam
mov
aas
sbb
out
jae
shrb
rcrl
xchg
and
cmpsl
or
mov
add
adc
sbb
cs
adc
aam
or
jp
mov
push
aam
sbb
xor
stos
fsubrp
push
xor
cmpsl
lahf
ljmp
flds
fldt
push
inc
cli
push
add
push
push
aad
mov
das
icebp
push
add
mov
jle
xor
test
pop
dec
mov
mov
sub
std
std
insl
xchg
sub
pop
push
pop
inc
sbb
push
ret
out
pusha
sahf
jle
daa
xchg
push
jno
mov
call
adc
sbb
xchg
inc
pop
adc
je
and
mov
mov
dec
dec
inc
push
cmpsb
pop
ja
mov
sbb
sbb
mov
cmp
mov
mov
mov
sarw
push
cli
div
sbb
imul
dec
push
test
pop
xor
cs
fadds
lcall
vunpcklps
jp
jl
insw
add
sarl
jecxz
adc
lret
mov
mov
lahf
cltd
in
popa
pop
ret
inc
incl
adc
cmpsb
in
bound
push
leave
andb
pop
cld
pop
fisubl
hlt
mov
imul
fcomps
push
xor
loopne
or
xchg
repz
mov
add
mov
daa
cmp
jne
movsb
push
mov
adc
xor
into
call
mov
and
sbb
outsl
into
xor
lret
call
enter
xchg
fidivs
add
or
push
inc
sub
out
add
cmc
cmpsb
sbb
call
xor
push
mov
out
ja
sarl
mov
lcall
pop
mov
mov
jnp
jbe
mov
xor
outsl
sbb
cltd
nop
mov
add
push
lahf
push
jge
gs
mov
push
loop
or
popf
lods
rolb
out
push
and
xchg
inc
sub
paddusw
fisttps
add
push
jbe
push
xor
dec
push
out
add
lods
jge
shlb
sarl
cli
add
subb
ds
add
push
call
mov
push
fmull
icebp
sub
or
xchg
pushf
mov
cltd
xchg
adcl
into
mov
adc
xor
into
jne
lea
mov
test
pop
sub
shlb
push
push
lss
mov
and
stc
jle
ret
dec
cmp
pop
push
in
cmp
push
daa
jb
xchg
xor
lret
or
outsb
adc
xchg
xchg
push
insl
cmp
mov
je
das
out
add
test
add
and
push
xlat
ret
push
xchg
sbb
out
jno
sahf
faddp
mov
dec
sub
test
enter
xchg
leave
cmp
pop
je
jne
push
es
lret
movsl
lods
xchg
roll
xor
sahf
and
jp
adc
inc
addr16
fimuls
jns
mov
stc
adc
mov
aad
push
cmp
jge
lahf
lcall
jecxz
mov
sbb
sbb
mov
cmpsb
jmp
add
dec
pop
push
fwait
lock
adc
lds
out
hlt
jecxz
test
mov
mov
lods
fisubrs
sbbb
xchg
sbb
adc
xchg
stos
inc
push
pop
fistpll
jb
shlb
cs
dec
dec
in
and
dec
outsl
push
xor
int
popa
pushf
and
out
cmpsl
pop
adc
sti
div
nop
ffree
dec
jae
dec
sub
subb
dec
ds
fists
push
loopne
leave
lods
sbb
mov
fldl
out
imul
mov
dec
clc
fwait
mov
je
fstpl
mov
adc
fcom
es
adc
push
jecxz
es
add
push
add
cmpb
or
out
es
lcall
pop
sahf
test
insb
jecxz
mov
and
jo
iret
mov
mov
out
outsb
add
jmp
mov
and
lods
inc
mov
dec
mov
jle
test
dec
insl
jmp
cmp
mov
xor
enter
push
fidivs
popf
popf
push
add
daa
outsb
xor
inc
pop
xor
enter
aas
in
fildll
rcrb
pop
imul
pop
add
lods
daa
adc
out
loope
addb
mov
sbb
arpl
movsl
mov
fnop
pop
adc
dec
or
stc
shr
test
sbb
xor
addb
dec
jb
mov
mov
xor
xor
loopne
push
adc
mov
addr16
xor
shr
arpl
xchg
shlb
shlb
push
scas
xchg
dec
cmc
stos
jmp
mov
int3
mov
and
mov
sbb
sbb
or
enter
fildll
and
add
bound
sbb
add
mov
sub
lcall
jecxz
int
out
aaa
jle
add
das
ljmp
addr16
and
out
xorb
insl
xchg
pop
adcl
mov
add
addr16
adc
shll
mov
push
push
rcll
dec
inc
xor
pushf
in
movsb
stos
push
pusha
adc
lcall
lcall
jbe
adc
stos
mov
jo
mov
sbb
aad
add
ja
repnz
test
int3
sub
sbb
xchg
xor
mov
inc
pop
cli
push
or
ret
test
mov
cmpsl
lea
adc
mov
cmp
mov
xlat
fwait
test
jmp
sub
add
les
lea
mov
movsb
ds
pop
xchg
js
add
imul
sbb
decl
das
jg
add
iret
fsub
xor
mov
xchg
mov
movsl
mov
mov
call
repz
jmp
add
xor
inc
push
jo
sbb
adc
fistpl
aaa
xchg
fnsave
pop
xor
mov
popf
or
sub
in
pop
cs
imul
adc
popa
divl
push
push
cmp
stc
push
aam
push
ret
fisubs
data16
and
jmp
lock
mov
fstl
inc
push
push
rclb
and
fildl
daa
in
push
push
xor
dec
pop
mov
loop
shrl
mov
popa
sbb
andl
negb
mov
mov
xor
pop
lea
fs
mov
push
imul
cld
pop
add
enter
mov
fs
pop
add
lea
xorb
or
mov
mov
xchg
jb
mov
stos
push
ficoms
xrelease
dec
inc
jo
daa
jmp
mov
cmp
adc
mov
pop
std
mov
pusha
inc
or
js
xor
pop
adcl
dec
mov
je
leave
ljmp
and
mov
mov
pop
rcr
dec
and
push
js
cmp
in
sbb
aas
xor
xor
mov
and
dec
pop
stc
and
insb
xchg
ret
sbb
pop
dec
rcrl
stos
mov
rcr
cmp
xchg
pushf
add
enter
mov
jnp
aam
stc
push
and
call
lods
int
pop
idivl
stc
sub
pop
into
gs
into
xchg
sub
mov
outsl
lahf
lahf
inc
push
inc
mov
iret
sbb
push
repz
adc
enter
test
push
push
xchg
arpl
add
dec
pop
and
in
stc
es
movsb
imul
xor
mov
into
in
mov
pop
lcall
loope
in
dec
daa
jmp
test
movsl
pop
dec
adc
cmp
cmpsb
int
cmpsl
das
cmpb
aad
popl
cmpsl
mov
xchg
movsb
mov
imul
cli
lret
add
dec
fadds
sub
scas
mov
adc
inc
xchg
test
scas
scas
aaa
push
inc
mov
nop
insb
or
roll
mov
sub
cmp
icebp
pop
and
sbb
lret
push
fld
pop
pop
mov
in
xchg
mov
cmpsb
pop
ss
stos
cmc
inc
dec
push
ret
mov
add
ljmp
imul
dec
in
scas
mov
ret
out
pop
xchg
add
insl
lods
les
in
jmp
sti
loope
aaa
sti
or
subl
pop
mov
out
and
test
xor
fadds
frstors
ror
mov
mov
shrl
mov
dec
push
jbe
or
mov
int
push
repz
jp
clc
dec
xor
add
add
xchg
add
push
sub
jb
out
or
mov
pop
ficoms
push
cld
xchg
dec
pop
test
mov
mov
cmpb
jmp
and
out
fistps
xchg
scas
stos
movsl
dec
in
push
out
fldl
cmp
aad
idivl
lds
testb
xchg
inc
dec
dec
mov
push
in
jno
inc
jns
jns
mov
call
adc
aad
cmpsb
mov
jle
test
xor
add
aad
push
adc
xchg
or
cmc
loope
cmp
push
and
pop
or
popf
lock
xor
xchg
pop
sbb
sbb
daa
push
push
mov
cmpsl
fsubs
cltd
fsubs
adc
pop
loopne
popa
mov
insb
pusha
aam
popf
jns
cs
dec
mov
push
push
js
rcr
je
mov
rcrb
mov
dec
clc
sub
and
arpl
sub
and
and
scas
cmp
jmp
push
xor
and
sub
and
mov
inc
shlb
sahf
inc
lods
cld
pop
jge
inc
mov
jecxz
inc
jge
out
sub
adc
push
fsubl
sbb
leave
or
out
in
mov
iret
sub
push
out
sbb
in
sbb
lcall
jo
add
inc
push
dec
sub
mov
ss
inc
fs
cmpb
int
lods
fisubl
orb
sub
stos
xchg
sbb
jg
xlat
fxch
int
xchg
jmp
insb
divl
in
rcrb
out
pop
cmp
mov
addr16
shlb
push
fdivs
aas
xor
push
cmp
pop
add
outsb
aam
mov
sbbl
mov
fsubrs
in
mov
inc
outsl
pusha
mov
cmp
in
mov
mov
lcall
loop
aam
insl
adc
push
in
sbb
loop
push
ljmp
dec
out
lahf
test
cs
pop
jne
loopne
icebp
outsl
ret
inc
adc
jle
roll
lret
in
jne
mov
pop
pop
jae
nop
mov
push
mov
mov
adc
test
dec
jecxz
sub
dec
sub
notb
scas
lock
push
adc
mov
xchg
jnp
dec
test
jo
adc
out
into
jo
xor
leave
test
hlt
push
pop
jno
cmp
xlat
push
flds
add
cmp
enter
sub
inc
leave
sti
jae
aad
lock
scas
les
sbb
aad
lock
pop
pop
insl
ja
or
xor
shll
mov
cld
cmpsb
mov
xchg
lods
adc
sti
aas
jo
stos
inc
pop
mov
jno
je
test
mov
cli
push
mov
jb
cmp
push
mov
in
ljmp
pushf
dec
je
sbb
dec
or
aaa
pop
mov
arpl
in
inc
push
lret
dec
out
lret
push
xchg
ds
inc
jno
shl
popl
dec
out
push
jnp
jne
dec
inc
cmp
cld
push
pop
jge
dec
pop
rorl
xchg
cmp
adc
mov
cmp
movsl
insb
jb
sahf
lret
movb
push
aaa
mov
movsl
lret
rcrl
xor
pop
cmp
sbb
add
push
dec
sub
pop
call
mov
lea
adc
adc
clc
mov
cltd
arpl
mov
mov
in
pop
js
jno
iret
sbb
mov
das
jle
lea
xchg
test
add
or
je
ss
mov
jmp
addr16
mov
sub
xor
loop
mov
cmc
lret
loop
ret
outsl
and
lods
sbb
xor
cmp
sarl
in
pop
daa
shl
push
mov
aam
jmp
insl
push
imul
pop
cmp
pop
hlt
mov
test
sub
or
movsb
cwtl
test
cld
fiaddl
clc
mov
adc
insl
fs
dec
add
or
imul
fcoms
stc
insb
mov
int3
iret
sahf
adc
arpl
stc
stc
xor
pushf
jns
push
fildl
mov
icebp
xor
fadds
adc
lcall
mov
mov
jnp
xchg
call
out
fdivp
jno
and
push
mov
inc
xor
imul
fwait
cmpsl
xor
push
and
inc
mov
push
aaa
push
cli
mov
pop
sbb
sahf
and
push
pmaxub
addr16
fistpll
clc
notb
jecxz
insb
out
cmp
int
dec
imul
add
fisubs
iret
jle
mov
clc
and
sub
arpl
enter
and
pusha
cmp
dec
xchg
jbe
sub
cmpsb
jns
ror
mov
xor
icebp
add
mov
jecxz
inc
jmp
push
xchg
push
or
subb
jle
fwait
pushf
scas
push
lret
dec
xchg
jae
and
mov
push
into
insl
shl
push
inc
inc
or
imul
arpl
xchg
jmp
bound
lds
stos
mov
rorl
fisubs
lods
or
repz
mov
pop
mov
pop
and
scas
pusha
cmp
add
int3
pop
xchg
out
fimull
jge
pop
pop
mov
inc
movsb
adc
xchg
ret
sbb
pop
sub
mov
les
cmp
arpl
sbb
call
sub
mov
or
test
bound
xorb
cld
jno
jo
gs
mov
xchg
fsqrt
and
cmp
inc
ss
and
lcall
or
or
sti
vphaddubq
xchg
lock
rorl
repnz
cmp
pop
adc
push
fldt
shl
mov
or
addr16
sbb
adc
jmp
push
xchg
mov
pop
popa
fwait
mov
inc
and
sbb
mov
push
cli
inc
mov
xchg
or
negl
xchg
ret
and
pop
xor
pop
cmp
mov
sub
pop
into
push
mov
sub
xchg
sub
push
rcll
jae
icebp
cs
mov
out
bound
loop
pop
push
cmp
dec
cld
cmpsb
add
stos
addr16
sbb
subb
fsubl
xchg
jb
mov
jecxz
mov
xor
aaa
jnp
xchg
addb
out
sbb
insb
push
xchg
ret
adc
call
sbb
add
cld
dec
dec
xlat
and
rorb
add
jb
das
cmpsb
jbe
sub
cmpl
or
inc
es
inc
idivb
jmp
adc
sbb
stos
jnp
xlat
jl
pop
dec
std
fisubrs
jge
cmp
inc
pushf
rol
adc
xchg
xlat
call
popa
and
popf
adc
dec
jnp
xchg
mov
xchg
lret
mov
movsb
imul
xchg
inc
das
mov
arpl
lds
mov
incl
mov
call
loop
xor
imul
xchg
mov
cmp
scas
xchg
jle
ds
mov
testl
pop
xchg
scas
sahf
leave
scas
add
rcrb
and
sbb
inc
sbb
adc
das
cmp
push
add
pop
adc
cmp
jg
adc
sub
xor
sbb
arpl
mov
inc
and
repz
xchg
pop
repz
sti
sbb
push
jp
dec
orl
push
pop
jge
mov
jbe
movsl
out
pop
xchg
int
pop
push
into
call
xchg
cmp
notb
fsubs
xor
test
push
into
push
rcll
dec
movb
dec
or
fxtract
ljmp
mov
sub
popa
clc
push
dec
xchg
and
xor
mov
or
xor
jmp
add
lds
iret
jge
pop
xchg
push
fdivl
fidivrs
pop
sbb
pop
cmp
loope
jb
mov
sub
jb
ja
or
xlat
std
ret
notl
cmp
popa
loopne
inc
out
stos
test
sete
aam
insl
push
jmp
daa
ljmp
repz
lock
adc
mov
scas
aas
adc
test
daa
jp
das
xor
mov
das
mov
sbb
mov
adc
xchg
or
pop
jl
or
xor
scas
pop
add
ds
in
cmp
cmpsl
aad
hlt
adc
xor
bound
or
cltd
je
mov
jno
cmpsl
push
dec
iret
xor
scas
lea
xchg
das
lods
xchg
push
outsb
sti
movsb
fisttps
cmc
and
jbe
clc
cmpsb
dec
incb
adc
in
loope
mov
mov
mov
adc
add
outsb
loope
scas
shll
pop
ds
dec
shrb
dec
push
lahf
add
push
rcr
mov
testl
pop
push
fadd
cmpsl
cmp
cmc
stos
cmc
mov
out
inc
loop
jo
mov
jp
sub
out
iret
jmp
jb
push
outsb
icebp
add
pop
pop
and
xchg
enter
movsb
lret
insb
xchg
cmc
add
dec
push
pop
push
cmp
shr
jge
int3
push
mov
sub
leave
arpl
sub
movsl
loopne
jmp
or
jno
pop
push
lret
add
es
fwait
loope
incb
jge
repz
mov
pushf
shlb
loopne
push
dec
push
jg
xchg
ret
xchg
testb
mov
stos
and
mov
je
and
xchg
popa
cmp
jp
xor
shll
fisttpl
in
or
sbb
aam
in
orb
mov
add
mov
dec
mov
sbb
mov
pop
cmp
aas
fs
jmp
xchg
push
js
pop
ret
push
clc
mov
popf
mov
les
push
mov
dec
adc
mov
mov
xchg
pop
sub
or
inc
lahf
cmc
fisubrs
int3
push
xchg
cltd
out
fadds
and
mov
ret
lods
ss
stos
in
jg
lret
dec
mov
xchg
test
push
addr16
out
fwait
or
fucomip
jnp
leave
xchg
sbb
iret
lods
inc
mov
pop
and
leave
add
add
fwait
jecxz
jl
sub
fisttpl
ja
cmp
fs
or
dec
test
insb
mov
sarb
mov
xor
xor
cmp
cmp
or
int
lds
sbb
sub
push
inc
movsl
jo
shll
fcmove
cmp
ret
xor
into
addr16
fisubs
xor
test
insl
mov
jge
imull
push
das
sub
lret
mov
push
cld
lea
fdivs
or
stos
xchg
imul
lret
jmp
push
mov
je
adc
dec
inc
lock
test
inc
pop
jge
loope
add
and
mov
cs
test
scas
xor
into
and
sub
mov
nop
push
adc
jmp
jns
and
fwait
inc
push
jp
outsb
lods
push
int
sti
test
imul
and
lods
sub
in
ds
cld
mov
cltd
sbb
pop
dec
add
dec
inc
and
mov
je
lds
lds
mov
inc
pop
pusha
push
out
cs
test
xchg
push
insl
xchg
jae
sbb
ja
xor
jl
xor
lret
xor
icebp
jg
mov
inc
ja
mov
cmp
outsb
adc
insb
and
loop
fnstcw
rcrl
lock
mov
cmc
test
pop
mov
sarb
push
adc
add
sub
cmp
add
or
adc
push
sbb
sahf
fwait
adc
aas
jno
pop
mov
dec
insb
or
push
ds
stos
fiaddl
inc
outsb
bound
or
int3
cmc
mov
xchg
scas
ss
jns
ss
dec
add
push
bound
repnz
ffree
mov
sub
sbb
sub
lods
xor
cmp
ja
cwtl
mov
jo
pop
inc
inc
add
out
lds
sahf
push
insl
cmp
test
jp
cmpsb
push
push
or
cmp
outsb
jnp
aad
nop
add
push
inc
dec
shlb
hlt
sbb
pop
fninit
adc
xchg
lcall
inc
cmp
sub
inc
imul
cmp
lods
imul
xor
into
cmpsl
xchg
or
mov
xchg
out
fisttpll
push
testl
xlat
loopne
js
mov
insl
ss
lahf
push
iret
fiaddl
test
add
pop
addr16
lret
nop
dec
loop
add
push
mov
jnp
inc
mov
pop
xchg
add
es
dec
sub
and
xchg
ret
add
sbb
mov
cli
lds
lds
push
jbe
adc
or
pop
cmp
das
sub
inc
jne
ljmp
rcll
into
sbb
dec
rcrl
mov
aad
inc
in
and
rcll
pop
sub
imul
lcall
pop
std
dec
adc
push
fwait
pop
dec
jmp
mov
add
out
subl
push
push
adc
sahf
into
mov
je
stos
ret
into
arpl
js
cmp
inc
pop
xor
or
or
insl
adc
in
sti
push
repz
cwtl
pusha
fsubr
and
aad
xchg
in
nop
mov
add
repnz
cmpsb
cmp
push
adc
or
in
inc
insb
xor
sbbb
jle
mov
or
mov
jno
cmpsl
sti
hlt
in
es
bound
mov
adc
mov
int3
fwait
jl
pop
jp
add
pop
add
iret
dec
adc
ficoms
lcall
mov
lea
clc
loopne
push
xchg
lret
sbb
inc
outsb
popa
insb
lret
pop
jb
push
xor
les
sub
in
jge
jg
dec
sub
inc
loop
int3
inc
ret
insb
ret
out
cmp
push
hlt
out
add
mov
dec
jge
fdivl
rcrl
enter
lret
mov
inc
mov
shr
sbb
jbe
cmp
ja
pusha
xchg
sbb
scas
sbb
es
cmp
xlat
push
and
repnz
std
enter
and
mov
in
cmp
xchg
xor
testb
mov
out
ret
push
cmp
sbb
jp
cmpsb
hlt
in
push
fisubrl
rorb
lock
stc
cmp
pop
es
mov
or
mov
test
leave
fadd
popa
mov
push
shlb
jle
cmpsb
insb
test
jmp
add
pop
mov
leave
sub
xor
sub
cmp
test
enter
xchg
or
xor
push
xor
popf
outsl
mov
cli
outsb
shlb
mov
xchg
mov
inc
and
icebp
adc
adc
push
movsb
dec
out
cmc
jnp
or
lret
cld
push
push
push
es
mov
call
ds
jmp
pop
lea
push
or
sbb
and
add
xor
ds
mov
xchg
test
push
stos
adc
add
mov
sbb
pop
and
lret
pop
sbb
and
inc
mov
jns
xor
testb
push
inc
jo
mov
das
shll
call
in
mov
in
repz
mov
xchg
sbb
xchg
adc
xor
mov
mov
adc
out
jecxz
lods
shlb
or
insl
inc
cmpsb
jne
push
test
push
sahf
xchg
cli
pushf
pusha
ret
dec
jge
dec
in
ljmp
shlb
bound
push
mov
mov
inc
or
mov
fistpl
insl
jg
call
sbb
jns
push
cmc
jbe
push
cmp
mov
dec
stos
mov
push
push
mov
jmp
ret
cmp
sbb
mov
cmp
pop
jne
mov
insl
inc
and
in
bound
call
sbb
popa
roll
cmp
mov
jb
adc
dec
rclb
gs
mov
loopne
mov
sub
outsl
jnp
cmp
xchg
sahf
pushf
sti
arpl
dec
jnp
test
mov
les
mov
js
xchg
loope
push
mov
rclb
xlat
push
mov
in
push
sti
or
sbb
das
jp
sub
push
cmp
rol
clc
fistpll
aad
xchg
add
mov
mov
or
jbe
ja
push
xor
inc
pop
cli
push
cmc
jae
dec
in
sbb
or
test
xlat
sbb
stos
fisubl
add
adc
push
ss
xor
iret
aam
into
jmp
orb
mov
inc
inc
push
das
push
sbb
stc
sub
into
in
imul
cmp
daa
divl
mov
mov
in
mov
lret
rcrl
pop
test
dec
adc
in
test
lods
je
or
jo
lods
mov
sub
rol
mov
out
and
idivl
adc
xchg
pop
mov
xor
jmp
test
jnp
mov
fwait
std
xchg
aam
test
sub
int
je
imul
mov
jae
lds
and
xor
or
jp
jnp
push
loopne
lcall
mov
push
xchg
loop
jl
dec
push
loop
adc
jno
out
popa
daa
mov
xchg
inc
out
test
pop
cmp
frstor
cmp
clc
or
aam
aad
in
bound
or
push
dec
or
lahf
popf
arpl
xor
cs
fidivs
std
es
fdivl
popf
add
dec
ljmp
shll
sarb
lcall
xor
into
call
lock
pop
ja
cmp
pop
nop
mov
outsb
je
dec
pusha
xchg
ret
adc
sar
fisttpl
call
dec
scas
push
mov
insl
mov
add
mov
dec
test
lahf
shl
or
call
and
pop
or
dec
inc
das
push
inc
jecxz
cmp
jo
xchg
adc
lods
jbe
add
aas
call
mov
jmp
jae
pusha
mov
or
in
repnz
jmp
push
stos
ss
mov
mov
lret
mov
dec
push
add
adc
sbb
push
mov
push
xchg
jp
movsl
out
or
push
fcomps
insb
mov
xchg
arpl
scas
jge
insl
dec
xchg
out
out
mov
faddl
mov
aam
shrb
mov
jmp
out
sbb
push
push
ljmp
dec
jbe
mov
nop
lods
cmp
scas
int3
test
scas
or
cld
dec
inc
ret
cltd
test
or
pop
mov
pusha
sahf
ret
add
xchg
jle
cli
add
jno
inc
in
stos
sbb
rcll
cltd
int3
sbb
hlt
push
pop
jbe
rcrl
nop
sub
mov
sarl
cmpsb
sub
loope
dec
ljmp
mov
arpl
sbb
jns
pop
fisubs
add
sbb
insb
test
xor
mov
out
ljmp
cmp
cmpl
aaa
push
loope
shlb
jbe
push
push
inc
cltd
pop
xchg
adc
add
not
and
pop
xchg
cld
dec
dec
mov
pop
xor
inc
iret
xchg
mov
jmp
sbb
push
movntq
xor
xlat
pop
pushw
mov
adc
fimuls
movsl
outsl
scas
popa
rcr
in
add
adc
adc
data16
jbe
insb
xchg
pusha
mov
sbb
and
bound
mov
xor
dec
inc
fdivl
shlb
xchg
fldenv
adc
xchg
adc
pop
insb
ja
sub
pop
add
push
adc
mov
inc
pop
and
test
xchg
sub
ljmp
lret
xchg
push
push
push
pmulhuw
mov
out
mov
clc
adc
xchg
pop
out
daa
mov
cmc
leave
cmp
dec
cmpb
mov
fcoml
jae
repz
fcmovb
jbe
pop
int
push
aad
pop
cli
fildl
test
mov
in
mov
add
or
aas
mov
testb
xor
lds
out
cmc
dec
movsl
pop
push
stos
dec
mov
and
mov
dec
jb
stc
adc
jmp
inc
or
mov
adc
pop
jp
pop
cmc
das
icebp
or
outsb
xchg
sarl
xor
jo
out
push
dec
cmp
xlat
pop
jne
xor
arpl
mov
aaa
std
mov
mov
push
test
cmp
ja
fsub
and
mov
mov
mov
jne
jmp
dec
inc
push
popa
cmpsl
jne
loope
popa
outsb
sbb
call
arpl
data16
cwtl
cwtl
out
repz
pop
inc
es
adc
gs
mov
out
mov
sub
dec
mov
push
xlat
pop
pop
xor
mov
xchg
cmp
mov
and
lods
lds
mov
sub
int3
stc
sarl
sbb
xchg
or
mov
rcrb
pop
cmp
lods
or
push
push
rcrl
pop
adc
sti
es
xchg
pop
mov
cmpsb
push
lods
jg
insl
mov
pop
mov
mov
scas
push
inc
mov
or
dec
test
fs
aam
inc
mov
mov
shll
mov
ret
bound
mov
cwtl
into
push
in
or
clc
test
xchg
mov
xchg
aas
add
jb
lret
rcll
pop
pop
pop
push
jne
mov
push
push
fucomp
stos
insl
add
sbb
pop
fcomps
xchg
add
inc
das
sub
jb
cmp
mov
push
mov
jmp
sub
add
imul
add
sbb
push
xchg
xor
jge
push
test
sub
dec
push
sub
pop
pop
mov
mov
aad
and
mov
add
jae
pop
test
ds
mov
pop
aad
std
les
cmp
into
pop
pop
mov
int
jb
mov
add
loope
loope
call
xor
sarb
fcoml
ljmp
add
or
add
lcall
jae
pop
lods
incb
adc
mov
dec
jmp
add
mov
mov
cltd
adc
imul
jno
nop
in
and
movsl
movsl
int
int3
push
pop
test
leave
sahf
aam
cld
sub
outsl
or
jg
int
xor
test
jmp
add
cmc
ffree
stos
pop
jmp
inc
xchg
sarb
jle
mov
push
sahf
jle
mov
dec
xchg
leave
insb
stos
sbb
sub
mov
aad
les
cmp
repz
nop
cltd
fisubs
dec
lret
lret
in
stos
imul
stos
mov
xor
mov
adcl
enter
ja
inc
xor
int
push
shl
jo
in
loope
ret
cli
mov
sarb
pop
cmpsb
pop
aaa
in
out
out
inc
ret
lcall
inc
jl
stos
cmp
test
es
jg
push
jne
ss
adcl
lods
leave
and
dec
add
sub
jnp
movsl
orb
pushf
adc
mov
pop
cmpsb
lret
cli
cmp
add
jge
push
jnp
je
hlt
iret
les
nop
sahf
mov
in
xorb
hlt
lods
and
cmpsb
jl
pop
mov
xchg
pushf
or
out
das
outsl
cmp
push
jmp
mov
aas
add
stos
jo
adc
and
scas
jb
fs
push
jns
push
cmc
dec
fs
lea
loopne
fnstenv
jb
mov
push
imull
or
and
jmp
jno
push
loopne
divl
mov
jno
jo
pop
aas
scas
inc
jecxz
fwait
inc
in
sbb
in
popf
adc
xor
inc
jl
ret
jl
dec
and
imul
sbb
cmp
loop
mov
int
ja
ljmp
mov
lahf
xchg
ja
jb
mov
adc
jbe
add
pop
stc
pop
sub
jne
mov
or
lds
add
push
mov
push
ja
pop
or
push
adc
sahf
stos
imul
ss
cmp
lcall
mov
lods
ja
int
cmpsl
xor
mov
bound
test
cld
inc
inc
lret
repnz
mov
pop
xor
add
in
sub
xchg
fwait
push
mov
sbb
scas
or
movsl
incb
mov
sub
nop
push
negb
push
mov
mov
pop
inc
lods
movsb
mov
scas
sarl
dec
push
mov
rcrb
push
sti
jecxz
jo
mov
push
fld
xchg
ljmp
test
dec
scas
shll
add
xor
mov
jecxz
xchg
xchg
adc
fwait
xor
jnp
aas
mov
xlat
mov
imul
cmpsb
icebp
in
adc
leave
xchg
and
movsl
push
fcom
add
mov
pop
mov
sub
mov
mov
gs
xor
push
ret
pop
inc
inc
icebp
and
or
lahf
ret
and
mov
pop
into
stos
sbb
cmovnp
aad
mov
daa
push
adc
jle
cs
xlat
stos
shlb
int3
push
fwait
popa
inc
xchg
pop
dec
xlat
pop
adc
lret
mov
cmpsl
std
movsb
xchg
daa
dec
add
xchg
fmuls
xor
repz
or
jno
inc
rcrb
xchg
icebp
mov
icebp
jmp
xchg
pop
jg
das
push
pop
sbb
xchg
inc
mov
push
add
and
cmp
fstpt
stc
sbb
dec
pop
jnp
shlb
sbb
negl
aad
stos
mov
ret
xchg
adc
lods
ret
ret
dec
push
mov
gs
ret
inc
call
xor
pop
out
push
mov
adc
mov
jl
js
enter
shll
mov
into
stc
movsl
mov
pop
lea
lods
xchg
mov
testb
jle
jmp
and
daa
xor
fldenv
fdiv
rcrl
and
es
rcrb
pop
mov
roll
or
fimuls
cmp
int3
push
add
pop
loop
aas
jge
cld
in
inc
pop
insl
out
jge
cmp
dec
jne
cmpsl
in
cltd
jle
xchg
adcl
adc
pop
xor
push
or
xchg
cmpsb
cmpsb
movsb
push
xchg
ret
or
xor
or
jno
ja
inc
push
mov
push
or
addr16
or
xor
cmp
jae
dec
mov
adc
loope
add
stos
repnz
imul
jb
test
jnp
sbb
add
mov
adc
push
out
lcall
lret
xor
push
lods
lea
arpl
int3
es
lret
mov
inc
shlb
cmp
pop
xor
ja
rcrl
fcomps
xchg
popfw
scas
popf
lds
fxrstor
xor
xchg
xchg
mov
adc
and
dec
and
xchg
add
test
inc
mov
pop
jmp
lret
ret
rorb
dec
scas
push
jbe
ja
or
inc
ja
xor
mov
ljmp
push
addr16
push
sbb
dec
add
add
mov
fdivl
mov
or
jns
and
and
out
or
rclb
aad
ror
cmc
xor
ljmp
jecxz
inc
lret
clc
xor
fstpl
lods
popf
adc
aam
jnp
push
dec
cmpb
pushf
lahf
inc
jns
ret
push
movsl
mov
push
cmpsl
push
pop
cmc
jmp
sarb
pop
shlb
push
jge
push
mov
cmpsl
test
jl
loop
xchg
xchg
cmp
iret
cli
jo
jecxz
sti
inc
inc
push
loop,pt
xchg
cs
jb
cmp
push
sbb
sub
pop
cmpsl
pop
bound
cltd
shr
mov
and
outsb
in
dec
pusha
je
es
add
inc
sahf
xor
xor
sti
loop
loopne
aaa
ficoml
out
fcompl
mov
popf
inc
sbbl
and
mov
pop
xlat
fs
in
add
into
dec
fstpt
decb
sub
dec
push
cmpsb
sbb
cltd
push
adc
ds
xor
and
shr
incb
cmp
dec
xor
adc
add
push
inc
add
out
jns
das
pop
jne
jns
jecxz
imul
sarl
out
sbb
rol
mov
in
repnz
xor
pop
js
ja
dec
shl
mov
stos
insb
movsb
cld
mov
sbb
add
and
enter
jmp
sbb
loopne
in
iret
pop
inc
or
jae
sub
xor
mov
stos
dec
pusha
xor
bound
sbb
adc
or
inc
aaa
pop
clc
sub
popa
shrl
mov
push
repnz
push
ret
pop
enter
dec
push
mov
add
mov
xor
and
aaa
adc
cli
mov
sub
or
cmp
mov
jp
pop
adcl
mov
fcomp
pop
dec
sbb
sbb
data16
stc
mov
in
cmp
ss
inc
lret
ss
cmp
lea
add
sbb
nop
xor
mov
xor
dec
dec
push
pop
or
inc
call
mov
mov
or
and
fcmovb
jo
popa
add
sbb
fs
or
and
xor
mov
mov
pushf
popa
lods
cmp
push
dec
jecxz
arpl
add
loop
lods
mov
into
imulb
and
rorl
int
sti
lods
adc
adc
repnz
mov
jnp
loope
mov
pop
inc
inc
scas
in
pop
push
lea
push
or
pop
mov
iret
mov
addb
xor
mov
fisubrl
xchg
cmpsb
js
mov
repz
loope
outsl
hlt
dec
mov
movb
dec
sbb
in
add
add
adc
ljmp
push
push
pop
adc
mov
leave
imul
mov
movsb
daa
ret
xchg
popa
aad
sarl
mov
fxch
cs
dec
sub
cmp
pop
cs
mov
adc
lret
fbstp
sbbl
cmp
cmp
sbb
addr16
mov
addr16
dec
push
mov
dec
test
stos
imul
sub
inc
dec
jb
jmp
out
mov
and
jp
popa
test
mov
cmp
out
jno
push
push
aas
and
jne
sbb
mov
sbb
shrb
sbb
pop
fldl
adc
mov
cmp
cmpsb
imul
sbb
daa
rorl
loopne
mov
dec
jae
lcall
lea
sub
and
bound
aas
lahf
adc
push
mov
lret
fwait
jmp
andb
cmp
mov
shlb
mov
mov
dec
sti
sbb
aaa
insl
add
xchg
pop
and
push
sti
in
pop
pop
jns
cltd
xor
mov
dec
xor
sub
das
sahf
xchg
aam
mov
test
add
xor
in
cmp
loopne
inc
fstl
pop
imul
inc
sbb
jl
je
pop
mov
ret
push
inc
jae,pn
sbb
idivl
test
add
adc
add
sti
dec
push
pop
pop
nop
divb
jnp
sahf
loop
in
lret
sub
pop
add
jbe
inc
fidivl
int
inc
mov
pop
rol
std
or
gs
jp
mov
mov
dec
ja
xchg
ret
xor
cmp
loope
insl
xor
push
mov
pop
stos
outsl
mov
ds
inc
repz
push
out
rolb
dec
dec
jl
and
and
jae
je
pop
xchg
sub
pop
enter
rcrb
fistpll
push
scas
pushf
cmp
imul
mov
mov
and
sti
mov
mov
arpl
inc
loopne
or
loop
movsb
cmp
repz
and
rclb
lock
push
inc
es
push
rcrl
xor
xlat
les
leave
std
dec
xchg
movsl
movsb
or
fisttpl
test
nop
test
leave
fsts
and
outsl
bound
jmp
out
sub
and
and
stos
aad
js
mov
out
test
pop
xlat
sar
jp
stos
mov
fldt
push
or
xor
adc
lahf
data16
je
or
mov
divl
sbb
enter
and
fdivrs
fs
imul
sti
sbb
mov
jle
mov
ret
js
adc
out
fcomi
sub
pop
das
fwait
lcall
leave
roll
daa
sbb
pop
sub
out
jp
xor
shlb
or
pushf
lock
or
xchg
pop
pop
add
repnz
popf
int3
push
andb
push
xchg
iret
jbe
lods
or
addr16
sbb
or
sub
mov
pushf
fidivrs
mov
fbld
not
movsl
test
aam
test
out
sahf
ret
rclb
ss
pop
jbe
mov
in
mov
je
pop
aad
inc
fldenv
mov
mov
xor
popf
and
pop
int3
jp
leave
imul
fwait
adc
xorb
or
rclb
sbb
outsb
and
xor
out
lret
mov
push
pop
lcall
sub
or
xchg
push
cmp
js
push
mov
popa
mov
jmp
cmpsb
mov
pop
aad
comiss
mov
test
xor
pusha
out
repnz
sti
pop
das
test
jle
faddp
pop
jnp
sub
es
add
mov
and
xchg
xchg
rol
sahf
mov
and
push
popa
in
sub
xor
idiv
push
push
adc
mov
fscale
jecxz
lds
ret
mov
lret
inc
fs
mov
popf
ds
arpl
xchg
mov
add
je
fnstsw
movsb
mov
hlt
cmpsb
mov
add
mov
inc
test
dec
es
lds
or
push
lods
add
pop
or
or
mov
stos
repz
add
adc
mov
pop
add
adc
cmpsl
push
popf
mov
gs
and
dec
sub
shl
mov
fimuls
or
xor
lcall
fisubl
jge
add
sub
cld
xor
sahf
jl
je
mov
mov
pop
testb
xchg
jp
dec
fmuls
lahf
clc
clc
mov
ret
xchg
push
aam
and
jle
addr16
and
or
cmpsl
jae
sub
lock
inc
mov
mov
enter
fisttpll
lret
mov
inc
inc
xchg
inc
inc
mov
xchg
leave
daa
adc
shrl
xor
sub
shll
mov
fbstp
pop
les
out
int
xor
enter
daa
mov
xor
test
out
and
or
pushf
sub
push
stc
push
es
and
enter
movsl
jmp
sbb
pop
loope
or
jmp
push
js
hlt
push
cmc
aam
pusha
aaa
mov
lods
mov
cmp
pop
dec
xchg
mov
jl
push
outsb
mov
sarb
jb
add
stos
test
outsb
pop
push
cmp
ss
out
push
mov
shlb
andb
ret
push
int3
iret
movsb
push
cmp
jae
mov
ret
nop
pop
add
mov
adc
aas
xchg
int3
mov
addr16
into
mov
pop
cmp
cmp
ljmp
aas
lods
mov
dec
or
out
test
gs
fadd
sbb
cs
mov
jns
push
push
jecxz
or
orl
es
aas
xchg
das
out
add
push
pop
or
adc
int
test
and
frstor
xor
rclb
std
dec
mov
subb
dec
and
sbb
mov
push
shrb
inc
mov
mov
pop
inc
rcrl
loop
push
stos
nop
push
and
subl
mov
popa
das
mov
sarb
mov
sarb
xor
seto
cwtl
popf
sbb
mov
lcall
inc
inc
xor
mov
and
sub
testb
pop
iret
dec
in
sbbl
nop
pop
or
jno
push
mov
fsubs
and
mov
adc
psrld
cmp
jbe
les
das
call
push
and
add
sbb
int3
je
jns
jns
mov
aas
dec
xchg
call
nop
cmp
mov
cmp
subb
mov
adc
test
jge
in
adc
repz
xor
xor
out
pop
sub
lds
pop
xor
daa
jecxz
movsb
repnz
scas
xor
dec
pop
into
hlt
mov
mov
shrb
ljmp
xchg
loopne
jmp
cmp
xchg
clc
ret
fwait
push
jg
fsqrt
popa
sub
mov
les
add
sbb
addl
jae
dec
jne
push
mov
movhps
jns
dec
xor
stos
sbb
sbb
sbb
or
ss
fwait
test
std
imul
add
pop
and
repz
sub
push
dec
js
orl
jo
xchg
lds
xchg
flds
lods
jle
pushl
inc
int
or
adc
fldl
push
rorl
gs
cmp
push
mov
clc
test
mov
leave
cmp
outsl
xchg
sbb
mov
mov
add
jno
push
and
pop
je
xor
popf
in
js
sbbb
mov
rol
loop
push
lods
fcmovbe
out
xchg
les
cmp
push
mov
vmwrite
push
xor
lock
xor
inc
cmp
or
aad
pop
leave
mov
lods
dec
ds
pop
pop
xor
add
add
sub
lods
scas
popa
sbb
sbb
cld
imul
and
mov
or
stos
hlt
ret
testb
les
push
xchg
xchg
and
dec
hlt
ljmp
insb
je
aaa
cmpsb
mov
push
fisttpll
into
sbb
mov
mov
insl
outsb
xor
les
popf
push
jl
lods
pop
cmp
fwait
loope
adc
mov
in
pop
int3
int3
into
dec
mov
jnp
mov
pop
sbb
insb
mov
jns
mov
repz
cmc
inc
incl
cmp
mov
pop
push
push
dec
inc
cmp
jecxz
push
clc
xor
push
mov
adc
lahf
adc
rclb
pop
rclb
sbb
push
cs
mov
jg
test
ljmp
jp
fdivrs
jo
mov
movsb
test
imull
in
and
es
in
es
dec
mov
out
or
push
dec
fisttpl
enter
icebp
fwait
pushf
out
test
dec
xchg
xchg
cli
sub
lods
inc
rcrl
aad
add
and
jae
add
mov
testb
das
cmp
ret
sub
sbb
out
fnsave
sub
inc
push
push
rcrl
into
insl
icebp
aaa
movsl
cmpb
rcl
insl
mov
cmp
imul
cltd
lret
xchg
mov
lcall
xor
inc
pop
jecxz
test
insb
fadds
cmp
sbb
mov
xor
lock
mov
jns
add
ja
rcrl
sbb
sub
mov
sahf
jl
mov
pop
pop
jbe
pop
push
fildl
inc
aaa
mov
scas
push
mov
sub
push
ljmp
jo
dec
enter
aas
sub
lds
jg
jbe
push
lock
sbb
movsb
mov
mov
push
cmp
pop
xlat
mov
mov
bound
jp
sub
test
xchg
cmp
outsl
mov
cmpsb
ret
ds
pop
out
xchg
push
int
jns
xor
daa
es
mov
pop
cmpsl
loope
sub
mov
movsl
push
jle
repz
lret
daa
xchg
fsts
mov
and
aad
aam
cltd
sub
ss
cmp
lods
sbbl
insl
xchg
dec
mov
add
int3
sbb
pusha
push
cmpb
in
xor
lahf
sbb
fildl
pop
insb
jbe
pop
mov
dec
ret
cmpl
add
add
int3
add
pop
cmc
sahf
lea
xchg
lret
repz
rcrl
add
lret
pop
std
jae
mov
movsl
cmpl
adc
lret
dec
adc
pop
or
add
nop
ja
into
push
mov
jmp
push
mov
je
push
inc
pop
push
imul
daa
punpckhbw
das
dec
xor
xor
std
out
stos
jmp
lret
or
and
mov
shl
xlat
ljmp
pop
lahf
cmp
cld
mov
lods
outsb
insb
repz
pop
outsl
xchg
or
jp
xchg
lock
mov
ja
ja
hlt
out
je
push
push
in
es
inc
daa
mov
pushf
stos
adc
pushf
into
gs
aaa
repz
sub
jne
sbb
nop
sbbl
lahf
stos
sub
xchg
ljmp
loopne
sbb
cmpsl
in
push
push
enter
jbe
mov
mov
lea
mov
pop
test
cmp
sub
inc
pop
stos
mov
or
or
jge
jge
or
mov
mov
mov
test
dec
mov
cli
xchg
and
dec
lods
jnp
dec
jbe
dec
insb
mov
sbbb
lock
jne
out
lcall
dec
lahf
pusha
lods
sub
je
dec
stos
dec
je,pn
lahf
out
or
jl
and
mov
add
mov
ficompl
pop
pop
insb
mov
in
mov
jp
lret
lds
daa
mov
fnstsw
xor
inc
iret
into
inc
and
shll
xchg
pop
dec
jg
in
popa
clc
mov
lock
call
lahf
push
push
ljmp
adc
scas
jae
shl
adcb
enter
test
lock
enter
aam
inc
cmp
in
mov
sbb
jne
push
fstpl
test
push
shrb
push
stos
pop
sub
rol
lcall
dec
imul
frstor
out
xor
xor
negl
enter
andb
push
pop
jp
or
mov
cmp
mov
add
or
sbb
push
jecxz
or
jmp
pop
outsb
ja
test
inc
xor
and
arpl
or
dec
ret
jecxz
dec
push
inc
push
aaa
lahf
pop
icebp
shrb
pop
dec
insl
int
fnstsw
and
inc
jge
ret
addr16
out
cmp
aas
loop
std
mov
jl
or
adc
pop
sub
imul
push
jl
test
pop
std
and
out
dec
scas
jl
pop
aaa
mov
call
in
sbb
in
or
or
inc
pop
imulb
inc
cmpsb
lret
cltd
pop
test
js
or
fldln2
jmp
pop
mov
add
pop
pop
fidivrl
leave
sub
add
adcl
pusha
jbe
and
dec
jo
ja
push
dec
dec
jmp
xor
jg
mov
cli
cmp
popa
dec
cwtl
aad
movsl
adc
repnz
out
mov
cmp
lds
pop
aad
mov
push
cwtl
dec
and
daa
jbe
push
fs
and
jb
inc
push
xchg
repz
incb
mov
lea
xchg
cmp
lahf
adc
test
xchg
sbbl
jne
stc
jmp
pop
mov
cmpsb
or
xchg
mov
mov
fwait
ja
out
pushf
cmp
aas
scas
pop
outsb
mov
mov
mov
and
fcmovbe
or
xchg
inc
pop
push
mov
sub
loop
outsl
mov
push
insl
out
jmp
mov
push
fbstp
repz
push
in
test
sbb
icebp
imul
adc
and
push
push
pop
add
inc
mov
icebp
fidivrl
fcmove
push
movsb
and
lds
sarl
movsl
dec
push
gs
cmp
in
pop
and
popf
dec
add
mov
mov
dec
lods
sti
pop
mov
fadds
pop
push
xor
dec
mov
xchg
sub
ret
push
jb
xchg
mov
out
inc
aam
addr16
ret
lret
adc
jmp
jecxz
jns
mov
lods
push
ret
xor
sbb
mov
pop
or
imul
idiv
adcl
jb
push
mov
hlt
sbb
in
and
shll
fimuls
fsubp
inc
lret
ja
cmp
add
jmp
cmpsl
mov
mov
fldl
popf
lods
adc
sub
in
popa
and
inc
sub
jmp
gs
movaps
add
fstl
loope
les
jmp
sbb
dec
sahf
xchg
arpl
mov
lret
mov
cmc
je
fwait
mov
fisttpl
jmp
sub
ljmp
enter
xor
shrb
loope
test
popf
adc
and
mov
sub
in
clc
lods
push
jo
jge
stos
and
negb
pop
or
pop
daa
out
test
xor
adc
data16
leave
daa
pop
out
leave
pusha
cmp
lock
sub
stc
jb
mov
mov
xchg
cwtl
mov
or
push
mov
push
out
mov
mov
dec
push
outsl
ficomps
adcb
mov
cmp
imul
jne
jge
hlt
out
scas
inc
mov
test
ljmp
movsl
sbb
stos
xchg
aad
or
repz
push
pop
int
jmp
aam
mov
mov
dec
or
bound
stc
and
in
inc
subl
in
fwait
sub
test
lods
adc
test
repz
cld
xchg
popa
push
test
ss
je
gs
sub
test
push
cli
jmp
mov
loop
push
rcrl
std
xor
jmp
jle
push
fwait
mov
mov
popa
inc
pop
loopne
jo,pn
pop
bound
push
test
ret
pop
mov
mov
popa
cmp
loop
push
ret
pop
aad
inc
scas
ljmp
push
pop
mov
cmp
notb
gs
sti
cmp
inc
aam
aaa
stc
arpl
push
fildll
xor
pop
cmp
sti
ficompl
rcr
fbstp
pop
pusha
inc
adc
adc
mov
pop
cmp
push
arpl
shl
lds
std
outsb
adc
sti
sub
xchg
std
movsl
push
leave
in
test
and
xchg
push
mov
flds
adc
mov
mov
jle
cmpsl
cli
lods
pop
and
sub
mov
les
testl
jb
out
sbbl
addl
notb
xor
pop
dec
jno
xchg
jmp
mulb
enter
fiadds
cwtl
xor
mov
sti
cmp
jbe
xchg
jb
pop
shlb
sbb
xchg
mov
ret
cmp
mov
loop
pop
test
jb
sbb
xchg
jl
fwait
mov
jge
mov
pop
es
in
jns
inc
test
jne
add
inc
pop
loopne
xchg
push
inc
mov
push
pminsw
and
lods
pop
pop
mov
dec
gs
cld
gs
push
sub
cmp
iret
mov
outsl
insb
xor
jl
lret
jecxz
stos
imul
jge
xchg
test
daa
push
fs
incb
into
inc
popa
cs
in
push
or
daa
enter
mov
cltd
test
bound
push
out
fs
mov
leave
mov
testl
ljmp
mov
fsubr
add
add
push
or
sub
testb
fcoms
test
fisttpll
cmc
mov
sbb
mov
sbb
and
add
ja
sub
sti
pop
mov
out
lahf
mov
jle
cld
lock
mov
inc
jmp
and
mov
out
cli
ficompl
push
cmp
xor
adc
divw
dec
lret
in
sub
movl
rcl
sub
das
in
pusha
add
mov
cwtl
push
jno
mov
push
pop
outsl
cli
idiv
stos
inc
mov
push
cli
sbb
push
ss
push
bound
leave
or
movsl
hlt
mov
mov
xor
pop
add
cmp
icebp
dec
mov
lds
push
shrb
cld
push
pusha
dec
jns
mov
pop
cmpl
xor
scas
push
fcoml
out
inc
addr16
jo
aas
inc
stc
out
xchg
xor
jecxz
ffreep
enter
push
pop
mov
in
push
or
aad
jp
negb
inc
push
sbb
add
and
jecxz
std
add
scas
xor
or
lret
mov
arpl
fisttpll
push
jno
outsl
jae
cmpsb
jnp
test
add
pop
sar
or
iret
jmp
cmp
sbbl
xchg
mov
mov
push
les
scas
adc
shrl
mov
xor
cld
xor
jl
or
jo
add
fs
pop
lods
sahf
jg
sbb
movsl
iret
add
jae
xor
and
cli
imul
out
pop
lods
adc
mov
cmc
or
loopne
movsl
mov
hlt
popa
jmp
push
popa
jne
cmp
mov
add
pop
gs
hlt
xchg
ja
push
pop
movsb
shll
cmp
jo
push
push
sub
clc
dec
push
jle
mov
in
jne
testl
lods
in
clc
rcrl
push
xchg
fidivrl
stos
outsb
mov
fwait
out
inc
nop
push
add
es
add
pop
push
lods
nop
xor
xchg
xchg
scas
int
inc
les
pop
jno
pop
push
ja
pop
mov
adc
add
cmc
push
add
xor
ficomps
addr16
jg
mov
jnp
rolb
ds
cmp
mov
and
test
adc
push
add
push
sahf
sbb
add
xchg
out
add
shlb
push
inc
adc
adc
push
gs
in
cmp
rcrl
mov
sti
addb
jmp
mov
or
icebp
inc
push
pop
xor
mov
pop
in
adc
dec
xor
scas
test
jle
loopne
nop
adc
enter
mulb
cmpsb
xor
daa
in
push
pop
ret
lahf
push
or
inc
clc
sub
push
test
mov
clc
rcrl
popf
popa
jns
addb
and
inc
mov
fiadds
mov
xchg
shrl
add
jo
scas
addr16
sbb
mov
xchg
dec
adc
and
adc
adc
cmpsb
cmp
sub
gs
adc
leave
and
notb
inc
jnp
neg
loop
in
cwtl
call
imul
adc
push
jno
pushf
in
or
mov
push
les
adc
fsubr
andb
sub
test
jle
shrl
rorb
add
rcrl
sub
sbb
idiv
xor
sub
and
mov
mov
imul
out
fimull
in
js
les
jbe
pop
call
push
in
push
xchg
add
xor
sbb
jbe
je
not
stos
bound
fs
xchg
aad
adc
call
or
cmpsl
imul
pop
add
mov
rcr
movsl
call
adc
mov
sahf
shll
fistl
inc
mov
inc
xor
mov
or
hlt
out
sbb
in
ret
jmp
out
jns
mov
add
pushl
ret
mov
out
outsb
push
sti
inc
mov
idiv
mov
out
pop
sub
jecxz
dec
sub
push
lods
test
sbb
sub
pop
insb
mov
mov
popa
out
int3
jmp
push
data16
movsl
rolb
mov
test
mov
inc
cmp
out
cmp
and
je
dec
cmp
sub
mov
in
ret
mov
mov
push
pop
jno
xor
sha1msg2
mov
adc
adc
lods
addr16
and
jg
adc
mov
ljmp
insl
sub
outsb
cmp
ljmp
sbb
sbb
lock
movsl
add
pop
add
dec
jnp
shll
adc
cwtl
mov
mov
push
push
dec
lds
fisubrl
mov
and
fnstsw
icebp
lock
cli
lahf
rorb
mov
or
shrl
sbb
sbb
add
jmp
fwait
repnz
scas
mov
pop
push
push
push
jo
nop
pop
imul
xor
scas
xchg
pop
jg
icebp
daa
jmp
dec
mov
stos
or
mov
rcrl
movsb
add
or
mov
fiaddl
dec
and
in
jmp
mov
xchg
adc
xor
in
dec
adc
sti
xchg
mov
notb
ljmp
push
adc
leave
push
cli
cmpsb
and
inc
and
stos
test
xor
jno
inc
stos
incl
mov
jecxz
xchg
mov
adc
sbb
rcrb
insl
push
clc
test
repnz
in
aam
hlt
pop
add
rcr
test
cmp
and
push
jo
hlt
lods
inc
loopne
cmp
mov
pop
pop
push
inc
dec
pusha
cld
cmp
subl
or
bnd
mov
xchg
divb
aaa
inc
push
fisttps
into
push
std
sbb
jl
inc
add
js
pop
push
add
mov
mov
in
daa
movsl
movsl
or
jl
inc
adc
push
repz
add
pop
inc
sbb
sti
xchg
test
cmpsl
lret
sbb
or
jp
mov
pop
mov
mov
lret
stos
ljmp
xlat
xor
cli
jmp
jb
mov
mov
imul
jge
jecxz
mov
inc
sub
pop
ljmp
lods
divl
adc
jl
fsub
test
cmc
inc
movsl
das
popa
mov
mov
sbb
jns
mov
mov
lret
scas
cmp
nop
test
push
dec
jnp
adc
xchg
and
add
nop
ljmp
mov
nopl
push
mov
dec
jno
inc
popf
in
inc
leave
mov
cmc
xchg
mov
adcl
push
xor
enter
lods
cmpsl
ror
icebp
packssdw
fildl
dec
adc
mov
push
scas
pop
cmpsb
loopne
int3
and
enter
lock
mov
mov
cmp
sub
dec
outsl
add
or
mov
xor
xor
xchg
mov
sbb
insb
mov
insb
mov
jns
mov
icebp
xor
sahf
test
ss
sar
loope
push
lcall
hlt
mov
fcmovne
mov
mov
and
xchg
dec
lret
mov
aaa
push
push
mov
repz
ja
mov
xchg
jmp
inc
jbe
icebp
adc
pusha
adc
adc
cmpsl
mov
pushf
pop
jae
aaa
push
lds
add
xlat
xor
cmpsb
push
add
mov
dec
std
test
jg
repz
pop
push
ret
jecxz
cli
adc
stos
shll
aam
ljmp
mov
mov
ljmp
xchg
push
cmovg
test
pop
je
call
gs
add
jmp
cmpsb
repz
ret
pop
mov
cmp
xchg
lret
jo
shlb
xor
psubusw
cmp
psubusw
jecxz
addr16
insl
stos
jo
mov
movb
cwtl
jb
divb
mov
mov
aas
dec
pop
push
mov
repnz
shll
push
ljmp
and
mov
iret
out
in
xor
scas
rcll
cmp
adc
bound
out
dec
aad
or
or
aam
adcb
sub
and
aas
push
test
test
adc
lods
lds
lods
cmp
in
jo
inc
nop
neg
push
lods
mov
in
dec
mov
dec
lods
clc
pop
enter
sbbl
xchg
insl
inc
add
mov
mov
jnp
sub
mov
ret
xchg
in
jbe
mov
popa
adc
push
and
xchg
jp
and
iret
sub
jmp
mov
add
jne
mov
jns
test
jbe
lock
mov
ror
mov
or
mov
shl
pop
mov
mov
std
pop
lock
rcr
jbe
xchg
cmp
subl
mov
pop
and
xchg
addr16
les
out
push
jecxz
inc
sub
fnstcw
test
sti
cld
mov
es
shrl
andb
movsb
mov
xchg
ja
mov
cli
out
pop
and
jae
mov
loopne
inc
cli
mov
xor
xor
setp
mov
or
test
jnp
xor
leave
sub
or
inc
mov
mov
pop
das
xchg
mov
pusha
xchg
daa
mov
test
packssdw
dec
or
jnp
ds
sub
xchg
pop
data16
lret
xchg
std
pop
jbe
pop
into
int3
repnz
leave
push
js
test
mov
and
popf
lock
and
mov
adc
shlb
or
adc
push
cmp
cmp
dec
stc
dec
movsl
pop
addr16
sbb
and
sti
and
inc
jns
xchg
in
cmp
sub
xor
mov
insl
xor
push
enter
or
out
add
sub
movsb
and
leave
xchg
or
pop
mov
bound
lret
test
fisttpll
add
jl
adc
in
xchg
lds
inc
xor
pop
je
sahf
daa
mov
push
mov
test
add
scas
int
sbb
or
sbb
stos
cmp
mov
call
movsb
push
add
ds
dec
pop
push
sarl
xchg
push
sti
lcall
setg
pusha
outsb
iret
adc
jb
xor
scas
test
lret
cmp
repnz
popf
testb
jne,pn
das
xchg
lcall
inc
sub
in
xchg
aas
mov
jne
lods
arpl
mov
jbe
mov
sbb
lds
sar
in
sahf
lock
iret
scas
sbb
imul
push
or
test
push
push
mov
test
add
cmp
or
std
jg
or
imul
incl
cltd
stos
cld
push
movsl
jns
stc
push
or
dec
ja
dec
or
xchg
push
fs
rcrb
notb
lret
jl
aaa
aas
and
ret
push
into
lcall
ja
sub
cmp
lahf
xchg
lods
pop
bound
push
sbb
push
or
mov
mov
cwtl
xor
jo
gs
lret
hlt
pop
out
movsl
lret
sarl
sbb
mov
mov
pop
movsl
inc
push
add
push
mov
mov
or
lcall
inc
sahf
setle
inc
into
nop
mov
fneni(8087
sbb
fstpt
fldcw
xor
ret
cmp
inc
in
call
cli
das
out
xor
imul
xchg
mov
fnstsw
nop
mov
addb
shll
xchg
cmp
int3
or
cmpsl
adc
add
or
dec
imul
popf
mov
dec
in
ret
push
sbb
dec
mov
xchg
push
push
pop
and
push
push
adc
mov
pop
fmuls
repnz
adc
ss
and
and
stc
les
fimull
movb
out
mov
dec
mov
leave
push
iret
push
mov
add
sbb
icebp
mov
jbe
or
sbb
mov
int
push
pop
cli
xor
xorl
lret
nop
or
cmc
or
test
stos
lahf
push
push
or
cmpsl
adc
movsb
cld
popa
push
jg
std
imul
dec
in
add
and
add
push
sbb
cmpsb
insl
rcll
and
lods
in
sub
shlb
cli
pop
mov
cwtl
or
add
iret
push
sub
push
out
adc
iret
xchg
idiv
fldcw
lods
clc
ja
out
adcb
imul
add
mov
fsts
mov
stos
call
flds
jecxz
cmpsl
add
push
loop
fcompl
and
stc
mov
aam
xlat
cmp
xchg
mov
imul
int
je
pop
sub
mov
jp
jmp
shl
fmul
bound
ret
inc
adc
add
xchg
xchg
scas
je
push
add
push
and
sub
imul
mov
push
cmp
mov
mov
repz
out
dec
add
lods
scas
mov
inc
pop
ja
mov
icebp
sarb
loopne
mulb
cs
pop
push
popa
cwtl
rcrb
jae
dec
jecxz
sub
add
pop
push
fstl
and
and
cmp
cltd
cmp
mov
push
cmp
test
les
push
cli
cmp
cwtl
inc
js
les
and
sub
xchg
stc
xchg
stos
xor
imul
push
notl
and
and
sbb
shlb
jo
xchg
stc
or
ljmp
test
sbb
sbb
cld
pop
xorb
push
insb
cmp
test
jbe
je
push
cmp
mov
je
fidivrs
fmull
sub
add
aas
and
sub
and
movsb
out
mov
or
jmp
rolb
addb
mov
stos
cltd
aam
xor
xchg
fcoms
cltd
rclb
dec
and
mull
cmpsb
mov
repz
xor
je
xor
cltd
dec
arpl
mov
testl
mov
sahf
fcmovu
pop
std
add
movb
xor
addr16
or
mov
loope
mov
fisubl
fnsave
jmp
inc
outsl
popf
aam
push
mov
mov
ffree
pusha
push
mov
xor
ret
sbb
insb
and
shl
lock
popf
call
sub
lret
ja
pop
fidivs
aam
imul
mov
sbb
push
jg
test
insb
enter
in
or
pop
mov
shlb
mov
push
sbb
sbb
les
outsl
test
sbb
pop
and
push
fstps
push
repz
mov
dec
lods
cmp
inc
pop
adc
arpl
cltd
cmp
mov
cwtd
stc
adc
adc
mov
adc
cli
ljmp
sbb
mov
xor
scas
out
fcmovu
fdivrl
xorb
popf
push
out
stos
pop
adcb
cmc
cmpsb
push
xor
cmp
xor
scas
fstps
add
xchg
push
pop
cs
pop
ret
mov
mov
push
ret
imul
shlb
mov
cmp
mov
lds
inc
fdivl
idivl
outsb
scas
je
mov
adc
adc
or
jg
das
pop
mov
icebp
call
sub
outsl
add
dec
vmovshdup
xor
pop
and
test
jg
cmpsw
fcoms
push
and
push
add
idivl
movsb
dec
sub
loopne
mov
outsb
outsb
mov
mov
stos
inc
imul
jmp
fmuls
rdrand
pop
pop
xchg
push
fsubrl
mov
cmc
nop
push
les
pop
and
xor
pushf
mov
push
movb
mov
aam
xchg
sbb
mov
ja
les
cmp
cwtl
and
outsb
enter
cmp
cld
add
or
sub
shlb
fs
jb
add
push
dec
repnz
sub
pop
out
sub
mov
and
xlat
mov
jecxz
lea
bound
inc
fisubrl
addr16
pop
int
ret
jl
lods
push
mov
jnp
pop
int
xchg
sbbb
mov
add
pop
outsl
aaa
sarl
pushf
inc
test
insb
mov
cmpsl
adc
in
pushl
jp
jl
sbb
test
orb
push
adc
or
decl
pop
mov
shlb
bound
pop
mov
xor
stos
lock
out
mov
mov
lea
add
xchg
xor
jnp
sti
into
add
hlt
in
mov
xlat
jl
push
fstp
lcall
and
sbb
ss
fiadds
adc
jno
pop
pushf
jne
cmpsl
rolb
ljmp
in
jb
cmpsl
cmp
cltd
adc
adc
lock
scas
ret
orl
mov
mov
cmp
sbb
inc
mov
push
je
mov
mov
pop
add
mov
fdivrl
lahf
imul
cmp
push
add
sub
pop
jmp
sbb
inc
jno
xchg
add
pop
lods
adc
cmpsl
cmp
cs
testl
and
sbb
jecxz
mov
pop
out
sbb
ss
mov
call
mov
lret
sub
xor
jns
cmpsb
cli
mov
sub
bound
out
jle
push
adc
outsl
mov
sbb
sbb
test
sti
sahf
mov
inc
es
ss
push
bound
inc
lcall
push
movsl
in
push
jbe
lret
pop
sub
pop
loop
xchg
shlb
sbb
cmpsl
sub
sub
inc
jb
sbbb
movb
imul
aaa
pop
bound
inc
push
xchg
ret
stos
outsb
inc
or
pop
xchg
mov
arpl
jne
movsb
insb
ja
sbb
xchg
fwait
sub
and
in
jo
aas
loope
insl
lret
dec
dec
loopne
daa
add
add
xor
js
fucomp
ret
xlat
dec
sahf
mov
arpl
cmp
das
sub
add
xor
iret
loopne
insl
cmpsl
mov
and
xor
sti
mov
lock
mov
inc
sbb
std
outsb
shrl
jg
dec
adc
orb
das
mov
mov
mov
and
push
js
mov
add
pop
fnstenv
mov
sub
mov
dec
add
and
stos
add
pop
mov
sbb
sbb
clc
pop
out
es
fidivs
mov
out
popa
inc
mov
and
dec
adc
loope
test
out
mov
xlat
cmp
out
push
mov
push
push
lds
jns
jle
cmc
push
mov
aam
ja
or
fadds
mov
fdivl
mov
scas
std
jne
add
inc
pop
and
jp
jns
jl
fidivrl
or
mov
xor
rep
movsl
dec
rcrb
icebp
mov
scas
test
mov
stos
roll
adc
in
sahf
sti
in
stos
daa
sbb
dec
ss
fisubl
stc
pusha
outsb
xchg
adc
stos
and
pop
sbb
xchg
loop
adc
cmp
leave
push
lret
in
push
xlat
jg
shl
aam
push
jb
testb
in
test
push
mov
mov
notb
aaa
repnz
cmp
mov
call
shrb
lcall
dec
and
dec
fisttpl
sub
xchg
xor
repnz
std
mov
add
dec
cmc
or
cmp
loopne
daa
aad
test
faddp
sti
jne
sbb
push
adcl
sarb
fldenv
adc
nop
sub
cwtl
imul
mov
mov
push
mov
lds
cmc
adc
mov
shrl
jae
or
out
bound
jp
jb
icebp
ljmp
movsb
jns
stc
push
loopne
mov
mov
stc
insb
je
bound
pop
ja
out
es
or
stos
dec
xor
bound
scas
jmp
aam
mov
cli
out
push
adc
jp
xchg
add
fildl
les
int
repz
out
cmp
cmp
or
pop
arpl
aam
ret
inc
lret
and
pop
pop
scas
xor
cmp
sbb
fisubrl
insb
jg
test
lds
mov
push
xchg
inc
mov
jo
in
xchg
pop
repnz
loop
shl
jmp
fsub
sub
mov
push
mov
cmp
or
push
paddsb
pop
sbb
mov
add
jns
repz
bound
iret
fisubrs
lock
cmp
repz
in
sub
cmpsb
add
jl
push
lret
fs
test
imul
notl
loope
push
out
xor
fiaddl
mov
xchg
ds
sbb
xchg
xchg
mov
sbbb
xor
repnz
roll
les
mov
jae
add
sbbb
clc
fldcw
popa
jmp
add
fdivrl
nop
add
fidivl
xor
inc
jae
aad
out
mov
sahf
in
pop
scas
insl
lods
pop
icebp
xor
rorl
test
clc
loopne
fstps
cs
jecxz
imul
or
ds
les
arpl
mov
gs
add
and
push
cmp
cmp
inc
lods
pop
setl
fbstp
cmpb
enter
pusha
or
test
sbb
mov
cmp
mov
in
push
sub
mov
xor
lret
call
movsb
into
out
iret
mov
packssdw
fs
fcomps
pop
ficompl
sbb
sbb
push
inc
lods
pop
jo
bound
jns
dec
xchg
xor
sbb
pop
ror
xchg
jmp
and
push
ffreep
jl
inc
js
fwait
sbb
nop
mov
or
leave
pop
stc
cmp
and
push
lds
mov
imul
mov
jge
in
pop
outsb
add
in
cmpsb
mov
add
dec
lock
add
fimuls
lods
repz
jecxz
rorl
ljmpw
cli
mov
and
fwait
sbb
aas
out
gs
mov
call
mov
imul
iret
xchg
mov
test
adcb
test
mov
int
inc
sub
out
add
xor
stos
iret
lcall
mov
fcoms
inc
lds
dec
pop
push
push
mov
mov
shl
fisttps
inc
pushf
dec
fwait
sbbb
out
movsl
mov
add
cmp
lea
clc
cmp
cmp
xchg
push
jo
pop
ljmp
push
dec
jle
lcall
mov
xchg
daa
mov
mov
or
test
sahf
filds
movsb
xor
mov
sbb
into
out
adc
mov
in
insb
into
jmp
mov
xchg
jno
adc
sbb
and
loope
mov
adc
stc
sbb
mov
mov
aaa
jmp
in
insl
mov
into
pushl
js
or
jmp
jl
add
movsb
mov
jle
ret
fstl
cmp
fadds
add
es
je
cmp
sub
sahf
mov
add
sub
pop
in
add
shlb
test
test
daa
add
push
inc
bound
mov
test
jge
mov
loopne
out
or
inc
sbb
arpl
fs
imul
or
mov
loop
cmp
push
je
call
ret
imul
int3
flds
mov
scas
push
repz
inc
in
add
mov
sub
and
mov
repnz
lock
stc
cmpsb
xchg
jp
mov
inc
jae
movsl
or
movsb
push
push
loop
jb
movl
je
pushf
ja
or
fsubl
fdivrs
cmp
movsl
arpl
sub
mov
sub
mov
cli
and
mov
sub
mov
int3
nop
pop
cltd
dec
test
push
sbbl
jmp
mov
out
cs
mov
cmpb
mov
loope
add
jle
jp
jo
rorl
mov
shrb
push
xchg
test
push
cmpsb
pop
sub
cmp
jae
popa
je
cld
test
xor
pop
jle
loop
xchg
pop
pop
add
cltd
arpl
add
in
inc
lea
add
xchg
dec
lods
popa
adc
out
and
pop
pop
mov
imull
mov
scas
lret
int
add
pop
jle
xchg
mov
and
testl
pop
inc
fwait
insl
test
stc
cli
adc
ficompl
sub
inc
fxch
scas
jbe
cwtl
pop
push
dec
lods
adc
int3
hlt
inc
push
mov
cwtl
lahf
sbb
sbb
pcmpgtb
push
cmp
jge
inc
test
and
adc
sub
mov
jns
aas
push
sahf
sub
or
dec
rol
or
into
adc
ljmp
out
cmp
nop
addr16
outsl
incl
test
test
nop
lcall
jne
xchg
ss
aam
adc
imul
test
cmpsb
mov
push
and
mov
nop
repz
nop
jae
punpckhwd
clc
inc
add
insb
xchg
adc
int
mov
ds
daa
mov
pop
icebp
repnz
shl
xchg
push
inc
scas
mov
jge
add
dec
pop
xlat
or
mov
sbb
mov
addr16
xchg
push
add
dec
jns
cmp
fadds
mov
fs
sarl
addl
inc
ret
das
es
sbb
int
push
adc
cltd
aam
sahf
rcrl
fldenv
xchg
jae
test
ss
add
lock
inc
insl
pop
lods
cltd
pop
ret
cmp
pusha
sar
jo
pushf
push
icebp
outsl
xchg
cmovp
inc
adc
and
mov
movsb
ljmp
or
pop
fsubl
pop
jmp
repz
xchg
xor
sub
cmp
mov
in
aaa
aas
stos
mov
mov
pop
adc
testb
daa
mov
cli
sar
sub
outsl
add
jl
push
insb
xchg
fisttpl
and
mov
jbe
movsl
adc
int3
sbb
scas
jnp
test
mov
dec
mov
add
lods
mov
popa
mov
scas
jmp
xor
xchg
mov
add
adc
cmp
sbb
mov
xor
mov
ss
roll
and
push
push
xchg
js
inc
xchg
xor
and
es
imul
adc
movsl
ret
mov
cld
push
xchg
pop
dec
addr16
xor
gs
stos
je
and
mov
sarl
adc
mov
jo
dec
or
xchg
pop
mov
mov
and
sub
jb
push
and
xchg
out
cmp
mov
adc
sbb
leave
mulb
add
das
sbb
mov
in
sbb
xor
xor
movsb
add
movsl
pop
enter
adc
andl
inc
sbb
jns
pop
daa
mov
adc
aad
call
gs
xchg
movsb
mov
push
pop
loope
mov
xchg
sahf
fwait
or
xor
xchg
jmp
shlb
ds
repz
cmc
and
add
mov
inc
push
xchg
cmp
aad
xchg
arpl
mov
push
popa
dec
daa
scas
cs
negl
fdivs
cmpsl
movsl
sub
adc
xchg
push
lcall
cmpsl
dec
aam
repz
daa
mov
fistl
mov
or
xchg
lock
and
repz
mov
mov
stc
mov
xor
jnp
imul
fwait
adc
data16
adc
mov
imul
pop
push
add
xor
dec
stos
ja
xchg
leave
dec
inc
mov
mov
je
add
aad
mov
mov
pop
xchg
and
jne
cld
xchg
data16
adc
inc
push
fcoms
iret
or
sbb
dec
adc
inc
inc
cmpsl
dec
repnz
jbe
testb
mov
sub
negb
ret
mov
dec
adc
bnd
push
int
into
xor
mov
and
leave
js
mov
in
cmc
add
xor
and
inc
std
add
or
movsl
pop
cmp
or
mov
leave
and
mov
sti
adc
add
dec
jo
fadd
outsb
adc
mul
in
xchg
push
test
js
outsb
xor
lea
nop
dec
loopne
shl
mov
jl
or
popf
mov
out
mov
push
into
xor
loop
jo
test
xor
sub
nop
les
adc
jle
cmp
rcll
xchg
testl
iret
sub
add
inc
cmpsb
mov
adc
loopne
or
push
out
jp
xor
xor
mov
jns
fistps
xchg
js
enter
lcall
mov
mov
call
clc
scas
in
add
mov
adc
mov
dec
push
out
or
sbb
pushf
mov
dec
or
sub
imul
mov
add
dec
rcr
test
cmp
xor
ljmp
sub
mov
push
jns
mov
in
out
mov
jns
pop
and
int
inc
aam
dec
sbb
lock
pusha
in
adc
dec
hlt
mov
aam
mov
mov
test
push
sbb
cmp
data16
xchg
lock
inc
aas
leave
mov
add
mov
les
scas
cmp
cmp
sbb
and
xchg
nop
xor
inc
std
adc
addr16
lahf
adc
sbb
sub
dec
add
xor
fs
sbb
sbb
fcmovne
pop
and
lret
push
jb
add
pop
jo
cld
or
jl
jae
jne
sbb
inc
outsl
arpl
push
adc
andb
in
stos
xchg
ljmp
imul
push
or
pusha
cld
push
jns
clc
popa
hlt
mov
in
test
out
mov
test
push
cmpsb
mov
insl
sbb
add
add
xor
or
push
pop
popf
inc
cwtl
add
inc
mov
or
test
in
ds
ud2
dec
das
sbb
cld
mov
inc
jl
xchg
add
xchg
popf
enter
shll
mov
enter
enter
cmp
xchg
rcr
sbb
fstps
popf
lret
xor
test
inc
jge
push
jae
jp
ret
pop
add
push
xchg
push
das
pop
stc
in
push
or
sbb
cmpsl
shlb
pop
mov
sub
jo
xor
int
cmp
outsl
bound
add
jns
pop
cmp
sub
mov
rorb
and
cmp
repnz
mov
add
adc
jb
mov
and
push
push
push
scas
jge
fmuls
lods
cmpsl
xor
mov
push
mov
push
inc
or
pop
mov
jp
idiv
aad
push
lds
sti
nop
mov
lcall
mov
in
out
add
in
xor
or
xchg
frstor
cwtl
pandn
sub
and
or
test
pop
adc
lds
ja
dec
sub
mov
jns
push
pop
or
out
pop
push
lea
and
cld
sub
and
addr16
fwait
sahf
ss
inc
jmp
dec
ds
add
leave
ficoms
out
cmpsb
and
sub
lahf
inc
movsb
add
aaa
out
popf
js
add
mov
push
adc
outsl
sahf
jl
shrb
dec
adc
adc
jg
sarl
pop
mov
sub
fdivs
arpl
or
stos
mov
cmc
mov
mov
push
push
subl
insl
and
insl
jb
xchg
cmpsl
fisubl
mov
in
loope
cmp
mov
std
mov
in
sub
out
pop
sub
cwtl
cltd
arpl
cmp
stos
push
cmpsl
fucompp
data16
pop
add
cmc
test
enter
std
dec
xor
jbe
mov
mov
jb
mov
iret
aas
cmc
sbb
xacquire
ja
or
push
push
mov
out
jnp
mov
movsb
jne
sub
imul
and
aam
jl
jg
lahf
pop
aam
xchg
iret
ljmp
xor
sbb
pop
mov
push
out
mov
pusha
adc
sub
jmp
mov
pop
push
fwait
aam
loop
push
jnp
fistpl
ss
rclb
pusha
adc
mov
mov
or
jge
in
add
inc
cli
add
or
notl
into
and
sarb
cmp
adc
mov
mov
jecxz
push
pop
subb
jmp
imul
inc
mov
xlat
push
ffreep
loopne
pusha
mov
add
negb
and
sub
or
js
sti
fdivs
ret
xchg
push
dec
and
fsubrp
mov
xor
inc
pushf
js
dec
gs
aad
sbb
push
test
add
ss
adc
push
xor
add
sahf
push
adc
xor
ds
adc
pop
roll
mov
push
xlat
mov
repz
shlb
in
push
orl
or
mov
cli
xchg
jns
cwtl
mov
mov
pop
mov
and
xorl
and
aam
dec
in
dec
sub
je
push
insl
adc
adc
bound
pop
imull
hlt
xor
xchg
aad
add
or
into
dec
push
lods
shll
incb
outsb
cmp
cmp
push
sbb
mov
push
mov
pop
jbe
loop
mov
mov
repz
es
leave
inc
pmaxsw
in
jmp
addr16
adc
dec
dec
scas
cmpsb
jnp
mov
add
rcl
and
mov
das
sbb
push
push
aas
xchg
loope
outsl
dec
scas
out
iret
int3
add
mov
adc
pop
es
sbb
push
iret
ja
xchg
mov
test
outsb
aas
sbb
cmp
lahf
sub
push
iret
arpl
imul
cmpsb
cmc
and
cs
mov
cltd
imul
adc
idivb
jle
mov
sbb
sbb
outsl
daa
and
gs
dec
test
std
sbb
stos
sub
inc
add
insb
dec
call
outsl
cmpsb
xchg
insb
xorl
mov
pop
lds
and
outsb
daa
stc
ret
jp
push
push
popa
test
push
nop
jmp
dec
mov
mov
sub
nop
xor
popa
int3
iret
xchg
negb
mov
mov
in
imull
in
stc
xor
in
jae
cs
ljmp
test
pop
aaa
jmp
add
sbb
add
test
xor
cmp
inc
push
add
and
sbb
dec
out
xlat
mov
mov
loope
mov
scas
pop
dec
add
sub
fwait
movsb
pop
out
sti
sub
inc
push
xchg
rcll
dec
in
loop
pop
add
pop
cmp
xor
mov
ss
ljmp
or
push
std
enter
loop
inc
add
sbb
aas
jnp
jle
xor
fsubrl
and
add
aad
sub
data16
inc
mov
test
and
js
js
mov
es
lea
and
mov
pop
sub
mov
jle
leave
test
push
jmp
stc
xchg
push
pop
push
pop
out
dec
inc
loope
fbld
cmp
testb
xchg
sbbl
ret
dec
stos
iret
mov
xor
into
or
sti
ficoms
jg
adc
mov
imul
cmpsb
push
int3
scas
mov
aaa
popl
inc
xchg
mov
ss
lods
dec
jne
gs
dec
shr
pop
mov
xchg
adc
iret
xor
je
add
xchg
out
jp
scas
and
lds
inc
fisttps
cmpsb
mov
daa
imull
adc
imul
inc
aam
cwtl
mov
popf
das
repnz
nop
js
scas
repz
xchg
fstps
mov
sub
pop
mov
popa
sub
std
mov
jbe
jae
jmp
mov
or
sub
mov
sbb
jno
dec
pop
addr16
cwtl
inc
and
pop
mov
js
enter
inc
je
or
std
sahf
jb
fmull
jnp
adc
push
ja
ret
call
dec
into
add
jecxz
js
sarl
lods
aaa
add
xchg
push
mov
add
inc
jl
iret
cld
call
or
aam
dec
mov
popf
or
test
rcll
in
shr
pushf
adc
rcrl
popl
push
insb
out
or
rclb
push
cmpsl
cmpsl
dec
sbb
movsl
out
les
int
xchg
shlb
xchg
loope
call
cmp
jb
fists
outsl
jecxz
inc
lock
lret
icebp
outsb
cwtl
push
lcall
cmp
jnp
mov
mov
cmpsl
out
cld
pop
jb
mov
gs
mov
orb
cmp
sbb
or
sbb
cwtl
push
dec
fldt
hlt
mov
sbb
fisubrl
sbb
pop
inc
jmp
bound
fdivl
rolb
cmpsl
sbb
mov
mov
sar
cmp
pop
mov
xchg
into
mov
sahf
jecxz
push
jno
mov
sub
adc
sbb
jno
dec
dec
xlat
add
sti
enter
dec
repnz
ja
or
sbb
iret
clc
rol
push
jnp
icebp
adc
mov
inc
outsl
lahf
or
fucom
sbb
or
push
sbb
push
push
shr
mov
push
and
add
mov
inc
cmp
adc
adc
sbb
out
das
stos
dec
in
mov
sbb
inc
xchg
mov
ret
mov
movsb
orl
mov
push
inc
pushf
pop
adc
pushf
sbb
push
push
mov
cmp
jecxz
int
cwtl
push
stos
mov
sbb
pop
cs
push
fldcw
decb
xchg
mov
pop
icebp
rolb
imul
dec
popf
scas
sbb
lret
fwait
stc
pop
hlt
dec
fcompl
pusha
mov
pop
mov
sub
scas
lcall
mov
js
pop
scas
out
pop
incb
add
cmc
mov
dec
clc
incb
cmp
fisttps
das
loopne
loope
xlat
sbb
in
sbb
sbb
inc
test
or
cmp
and
aas
mov
imul
mov
fistl
or
xlat
cmp
add
out
dec
jns
loopne
mov
jb
adc
or
in
dec
ja
mov
stos
ret
adc
mov
mov
xchg
push
lahf
jb
xchg
scas
xchg
sarl
repz
lret
lods
sub
in
sbb
jmp
mov
jl
lock
aad
jae
aaa
mov
push
inc
mov
scas
jb
adc
loop
cmp
movsl
push
outsb
inc
rol
add
data16
shll
les
punpcklwd
jns
mov
cmpsl
shll
movsb
fcoml
jmp
mov
ljmp
xchg
sbb
push
jmp
jg
int
pop
add
cmc
mov
out
add
imul
es
xchg
movsl
dec
popf
decl
les
push
cli
test
mov
out
add
popf
aam
out
mov
and
cmc
hlt
cmpsb
mov
mov
and
aaa
bound
clc
add
xor
inc
inc
xchg
push
push
popa
aas
loope
fstpt
mov
inc
cmpsl
sbb
loopne
and
sbbb
push
enter
std
pop
xor
cld
mov
dec
pop
and
jo
cmpsb
cmpl
cltd
inc
xlat
push
xchg
test
out
push
scas
seta
mov
push
push
out
add
jecxz
lods
pusha
mov
xor
push
imull
lret
popa
cwtl
scas
jae
mov
movsb
imul
loope
cmc
inc
jo
cmp
js
lcall
test
ds
cld
jbe,pn
mov
sub
add
adc
mov
divl
cmp
pushf
fdivrs
fwait
aas
mov
mov
enter
outsb
jno
sub
sub
inc
add
sub
data16
lock
aas
add
aam
sub
test
jno
mov
fldcw
xchg
jl
imul
cmp
cmp
mov
dec
mov
repnz
movsb
mov
push
sbb
and
mov
fisubrl
cmp
mov
xchg
jae
in
in
mov
adc
fldt
mov
movsl
imul
sub
mov
fs
outsb
pushf
pop
scas
cld
mov
jnp
ret
xor
in
add
mov
rol
cmp
aam
movl
sbb
jne
imul
inc
or
mov
jecxz
mov
popf
pop
ljmp
dec
push
add
and
frstor
into
push
adc
fs
mov
fidivrl
ja
mov
adcl
xchg
adc
xchg
and
xor
add
bound
adc
jo
ror
jg
and
popa
mov
pop
repz
lods
jmp
shll
inc
add
sub
inc
in
addb
sbb
rep
or
cmp
out
iret
cmp
or
jno
mov
ret
frstor
pop
xor
pusha
adc
dec
jp
cmp
cmp
dec
jns
out
inc
or
test
mov
call
out
in
mov
add
mov
and
add
dec
mov
and
popa
js
and
lods
lcall
fists
pop
insb
loop
jp
not
int3
daa
imul
lds
leave
lret
ja
fadds
adc
push
cld
inc
jo
bound
push
xchg
insb
and
test
adc
jecxz
mov
loope
mov
sbb
pop
mov
testl
mov
push
pavgw
leave
push
mov
pushf
fwait
shlb
loope
cmc
fs
sar
push
inc
mov
scas
cmp
call
in
mov
adc
in
enter
dec
daa
aam
mov
sbb
add
sub
neg
dec
adc
mov
push
mov
inc
jl
sbb
dec
adc
imul
jns
in
enter
test
inc
sar
push
push
repz
psubb
pop
cmp
mov
aad
and
sub
push
test
arpl
and
xor
jp
cmpsb
pop
aad
cmpsb
jne
cmp
xchg
lahf
shll
mov
movsl
jecxz
sub
rcll
std
test
cmp
aam
inc
jb
sarl
lcall
xchg
xor
add
mov
mov
imul
xchg
sbb
or
gs
inc
jecxz
mov
sbb
loop
inc
and
xchg
fwait
and
adc
and
mov
jmp
jns
nop
sahf
push
xor
in
aaa
movb
stos
mov
pop
lahf
adc
in
lds
mov
add
xchg
in
js
jp
cmp
aad
cmp
stc
mov
out
xchg
daa
mov
imul
mov
mov
mov
mov
rcr
std
push
js
mov
sub
ljmp
into
dec
mov
mov
jnp
mov
loop
dec
mov
xor
push
cltd
push
sbb
cmp
add
sbb
inc
in
mov
add
les
xchg
loope
ss
insl
add
mov
cwtl
shll
xor
jl
repnz
xchg
xchg
adc
or
lret
push
pop
loope
subl
or
ficompl
sbb
repz
push
mov
sbb
out
hlt
dec
jge
mov
sbb
aam
pop
dec
popf
inc
sub
xchg
lds
and
loope
es
daa
lods
lret
rorb
add
sub
cli
mov
movsb
lods
repnz
sbb
push
adc
fld1
les
dec
mov
dec
or
stos
push
xor
cmp
push
push
pop
pop
outsb
xor
cmp
cmp
rcl
lcall
mov
inc
mov
adc
dec
outsb
cmp
lock
jmp
shrl
mov
jnp
pop
fisubrl
adc
movsl
lock
out
mov
mov
fidivrs
nop
push
hlt
lods
test
ret
movb
xlat
repnz
imull
adc
aaa
pop
in
cmc
cwtl
mov
lcall
xchg
add
sub
data16
mov
pop
adcb
cmpl
and
sbb
inc
stc
add
cmp
jnp
lea
jle
aaa
ja
push
cwtl
decl
push
dec
sub
dec
sbb
ret
jecxz
fwait
cmpsl
push
fsts
mov
cmpl
pop
xlat
out
lds
and
lea
cmp
lea
dec
jbe
sbb
stc
dec
pop
rsqrtps
dec
cmp
sti
add
shrl
aaa
out
push
push
dec
xchg
shlb
aam
aad
notb
ds
test
and
es
mov
popf
sti
mov
push
and
fdivs
pop
cmp
push
xor
data16
sbbl
cmp
mov
cmp
dec
bnd
scas
dec
mov
outsl
movsb
in
inc
fs
mov
test
dec
adc
dec
add
and
gs
aas
in
push
cld
negb
loop
push
rorl
fidivrl
addr16
cs
jl
repz
js
inc
unpcklps
dec
sbb
and
mov
push
jp
and
fists
xor
or
int
pop
mov
mov
adc
leave
dec
in
adc
imull
lods
dec
aad
je
outsl
mov
pop
pop
lcall
fisttps
fwait
cwtl
sbbb
mov
ja
cmpsl
jg
jle
flds
jb
movsb
bnd
push
mov
cmp
xchg
ret
inc
inc
add
test
jle
test
ja
mov
repnz
test
arpl
ror
dec
inc
and
xor
push
pusha
int3
xchg
scas
lret
lods
jnp
pop
jmp
jmp
ds
inc
fsubrp
and
cmp
pop
and
leave
adcb
test
ret
and
lahf
lcall
shll
stc
ficompl
mov
in
repz
inc
mov
cmp
loopne
add
icebp
test
inc
or
add
ret
call
test
cmp
add
movsb
mov
sub
jnp
sub
sub
xor
fbld
fsubs
or
cmp
push
repz
adc
fildll
shrb
xchg
mov
jnp
or
dec
lds
adc
out
aad
sbb
aaa
sub
or
mov
in
stos
mov
test
cmp
call
mov
dec
rclb
xchg
aas
ja
imul
dec
add
inc
fcoml
imul
fmul
pop
mov
sbb
shl
or
out
andl
in
cltd
fsts
and
mov
adc
out
mov
ret
icebp
or
call
mov
jno
inc
lds
out
jno
xor
add
cmp
filds
and
xor
mov
push
cmp
adc
mov
fnstsw
xor
hlt
pop
push
lahf
push
sar
and
inc
ds
mov
mov
cmp
movsb
shlb
mov
insl
les
add
jns
aad
popa
loope
pop
and
dec
clc
clc
out
pusha
xor
cmp
mulb
mov
fimuls
pop
jns
mov
outsl
and
outsl
push
jl
or
cwtl
push
adc
nop
dec
in
fnstsw
arpl
rcr
jb
rcr
sbb
iret
daa
stos
sub
sub
hlt
mov
std
pop
addr16
pop
xchg
mov
inc
stos
pop
push
in
lea
cmpsl
jg
jp
add
dec
mov
xchg
mov
add
pop
xchg
cwtl
ret
rcpps
shlb
subb
fld
mov
pop
jle
je
js
sbb
aad
fisubl
sub
cwtl
stos
insl
call
das
ja
inc
pushf
fmull
push
and
cltd
shrl
je
ret
xor
lods
cmpsl
mov
out
inc
sbb
aam
test
inc
lock
je
pop
adc
ljmp
push
sbb
jo
xchg
cmp
out
mov
ja
loope
cmp
aas
int
into
inc
mov
decb
scas
pushf
push
call
push
cmp
and
dec
and
stc
shl
and
cld
pop
insb
mov
inc
ss
mov
popf
insb
leave
or
xchg
mov
xor
xchg
mov
and
fidivrs
xchg
insl
aam
and
add
sub
rorl
fbstp
jns
cltd
int3
ret
scas
fimuls
call
mov
add
jae
stc
pop
outsl
mov
inc
movsb
xor
ljmp
loopne
mov
jbe
xchg
cmp
xchg
or
and
testl
loopne
add
aam
scas
ficoms
data16
int3
mov
ror
and
int
lret
xchg
mov
mov
push
gs
xlat
ficompl
sarl
and
js
xchg
sbb
mov
cs
mov
outsb
mov
js
cmp
sub
negb
mov
movsb
add
xor
fwait
adc
andb
repz
mov
dec
mov
rcrb
xchg
fcmovnb
inc
js
es
lcall
cld
out
int3
add
lret
and
push
jle
arpl
push
cmp
test
jmp
lock
and
imul
lcall
aas
cltd
test
cld
pop
xchg
aas
shl
scas
fsubrs
cmp
jnp
dec
or
ja
js
out
fsubs
ret
xor
dec
jae
loop
xchg
inc
outsl
jl
inc
push
test
xchg
sbb
adc
popa
fldl
sub
sar
and
and
neg
mov
dec
sub
aas
lock
jge
xchg
ja
dec
stc
jns
test
js
xchg
push
adc
cmp
xchg
sub
push
leave
pop
outsl
cli
insl
mov
cmpl
outsb
sub
ljmp
lea
lcall
jnp,pn
loop
or
stos
or
add
aas
jg
imul
sbb
icebp
add
pop
or
mov
mov
push
call
setbe
cltd
cmpsl
lods
mov
test
xchg
and
pop
pop
mov
jae
mov
leave
movsb
notb
sub
orl
out
mov
cmp
push
enter
imul
mov
mov
sbb
push
push
or
jb
lods
out
push
push
pop
jne
add
test
mov
lods
fnsave
scas
xchg
lds
ret
inc
cmpsl
insb
adc
push
or
push
adcl
jbe
add
cmpsl
popf
adc
sub
cmp
jg
dec
xor
xchg
shll
jp
cmp
xchg
mov
fsts
jp
dec
inc
pop
into
mov
cltd
pop
sub
or
dec
add
and
lret
xor
xchg
fistl
imul
cld
jmp
push
jbe
and
addb
lret
fsubs
imul
lahf
mov
stos
mov
lss
push
jb
mov
test
mov
scas
push
mov
mov
push
add
or
and
jne
and
pop
popf
pop
std
cs
cmp
mov
mov
repz
lods
inc
xor
hlt
push
ja
add
sub
dec
xchg
aaa
adc
xor
leave
divl
rcl
xchg
addb
shlb
movsb
sub
jmp
mov
cmpsb
xor
xchg
outsl
lahf
add
mov
in
dec
aad
sbb
mov
pusha
push
cs
aaa
jmp
jbe
cmp
pop
inc
cmp
push
mov
mov
sub
insb
mov
and
jo
or
dec
ja
lret
xchg
dec
mov
shlb
push
stc
stos
xor
or
mov
loope
mov
movsl
mov
xchg
ret
dec
aaa
cmp
pop
add
xchg
or
mov
xor
sbb
xor
cmp
or
std
xchg
sbb
or
mov
shrl
dec
popa
add
ljmp
fistpl
testb
add
std
dec
add
add
aam
or
pop
out
dec
int
mov
sbb
sbb
adc
xor
cli
xor
pop
or
aam
lret
hlt
aas
pushf
push
cmp
jp
mov
jae
in
mov
adc
or
in
xor
iret
jle
cli
add
addr16
sbb
dec
mov
aas
out
nop
movsb
sub
gs
fdivl
ljmp
test
ljmp
xchg
adc
xor
adc
mov
mov
mov
aas
lods
clc
outsb
jns
leave
fists
mov
inc
inc
loop
clc
mov
fs
in
xor
lock
add
or
mov
das
mov
jg
pop
in
push
or
xor
in
aas
lcall
hlt
fsts
testb
ds
sbb
mov
pop
fwait
xor
and
fdivs
repz
or
jp
repz
mov
adc
insl
rorw
push
push
mov
dec
fcmovbe
mov
ja
jge
jge
push
ljmp
cmp
dec
and
jae
ds
fsubrp
out
add
outsb
xor
int3
les
enter
lea
xchg
pop
enter
std
fnstsw
pushf
iret
dec
and
es
test
test
fwait
mov
inc
lcall
mov
lret
mov
or
push
mov
push
mov
pop
or
push
flds
sbb
clc
push
fsubrp
rcll
pop
xchg
loope
hlt
pop
daa
das
loop
adc
inc
lret
push
int3
into
xor
out
mov
cmpsb
in
xchg
aaa
movsb
loopne
popa
cwtl
mov
out
cmpsl
out
adc
and
mulb
push
mov
jo
jnp
out
inc
inc
adc
mov
xor
xchg
pushf
fcmovnbe
mov
pop
mov
xchg
sub
nop
ficomps
jno
in
adc
in
out
shrb
insb
rcll
mov
mov
leave
pop
mov
inc
add
xchg
and
sub
daa
add
pop
mov
fst
cltd
jbe
imul
into
pushf
sub
push
adc
push
sti
mov
cli
call
sub
cmp
pop
pushf
mov
and
and
add
jle
lods
add
shll
cli
pop
xlat
xchg
mov
inc
add
mov
xchg
iret
sbb
mov
mov
jns
mov
pop
es
or
jmp
adcb
or
add
movsl
mov
push
mov
fwait
or
and
sbb
and
repz
movsb
test
mov
push
jge
insb
test
mov
leave
std
insl
jo
loopne
hlt
dec
pop
xor
push
jp
dec
mov
out
loope
mov
ficoms
inc
cltd
int3
or
push
adc
icebp
add
push
mov
and
ret
aaa
fwait
xor
out
xor
mov
das
cmpsl
fimuls
mov
jge
mov
adc
in
xchg
jp
pusha
inc
rclb
pop
mov
inc
lds
movsb
push
hlt
out
sub
fwait
xchg
push
adc
mov
mov
pop
push
cltd
xchg
icebp
repz
jo
sub
rcr
addr16
adc
iret
cmpsl
sub
xor
xchg
stos
loope
movsl
xchg
jbe
shll
push
cltd
outsb
lcall
add
stc
jmp
pushl
mov
push
cmp
test
outsb
mov
lods
cmp
test
mov
movsl
scas
mov
fs
shl
dec
dec
xlat
inc
jecxz
test
and
xchg
mov
scas
dec
sarb
iret
cmc
shll
shll
lret
out
cmpsl
xchg
jns
sarb
icebp
insb
mov
into
xchg
inc
cmpsl
jmp
cmp
pushf
arpl
lahf
std
mov
arpl
sub
mov
test
sahf
in
fsubr
fstpl
pop
jg
push
xchg
pusha
cltd
xchg
mov
xchg
cwtl
daa
out
gs
push
mov
adc
adc
mov
pushf
add
arpl
mov
adc
mov
mov
push
mov
mov
adc
sub
movsl
mov
inc
jmp
out
and
cltd
enter
add
inc
roll
jl
mov
lret
adc
push
or
aam
lods
adc
lret
idivl
sti
mov
pop
pushf
scas
inc
cld
out
rcrb
pop
ss
arpl
insb
inc
jmp
jnp
pop
xchg
insb
dec
sbb
sahf
int3
fmull
loopne
mov
addr16
push
sub
daa
fsubs
xlat
pop
and
dec
arpl
ret
cmp
ljmp
jbe
sbb
mov
xchg
adc
or
dec
or
and
xchg
mov
mov
mov
sarl
aad
into
inc
aad
dec
ja
lock
test
and
repnz
xor
pop
xor
testl
jg
sbb
lods
or
fsubs
xor
xchg
add
pop
inc
jp
cmp
dec
cld
push
jo
sar
jbe
test
xor
jl
adc
and
insb
shr
aad
enter
push
sbb
push
out
dec
pop
pop
mov
push
loope
sbb
dec
ljmp
push
jg
lods
movsl
mov
aaa
pop
xor
adc
outsl
add
add
mov
or
xchg
push
add
push
pop
faddl
xchg
jb
pop
test
lods
adc
fistl
sub
movsl
mov
jnp
mov
jecxz
cmp
jecxz
movsb
jl
out
repnz
fincstp
sbbl
fwait
sub
daa
inc
sub
cmp
aas
scas
mov
mov
xchg
inc
jmp
xor
dec
in
mov
in
dec
insl
jg
jne
adc
lret
sub
movsl
bound
rol
inc
jp
leave
cli
or
rolb
lret
mov
orb
cmp
movsl
ja
orl
ds
pushf
insl
and
sbb
xchg
lods
out
shr
push
stos
fwait
roll
push
xor
mov
xadd
mov
roll
in
inc
sub
fs
xchg
test
jno
mov
inc
mov
lea
jge
lret
or
gs
.byte
