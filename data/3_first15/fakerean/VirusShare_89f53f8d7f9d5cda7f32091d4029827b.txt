push
mov
sub
push
push
push
xor
xor
lea
push
xchg
mov
mov
not
xor
lea
ret
xor
xor
shl
xor
lea
call
push
add
mov
mov
xchg
mov
mov
xor
and
not
mov
not
mov
mov
not
rol
lea
addl
mov
lea
mov
adc
rcr
sub
mov
rcr
ret
lea
shl
xor
xchg
je
shl
lea
xchg
xchg
xor
xor
lea
lea
mov
mov
xor
mov
push
call
mov
lea
add
xchg
mov
rcr
lea
lea
not
rol
xor
mov
rcl
not
mov
add
neg
movl
rcl
rcl
rcr
xor
ror
movl
adc
mov
xor
not
neg
xor
lea
mov
mov
adc
neg
adc
xchg
rol
lea
lea
push
push
pushl
pushl
call
xchg
ror
lea
neg
xchg
neg
rol
mov
xor
rol
neg
xor
lea
mov
neg
add
mov
lea
shrl
mov
lea
mov
rol
ror
neg
xor
adc
mov
mov
mov
xor
rcl
xor
push
rcr
mov
rcr
lea
rcr
mov
xor
mov
lea
popl
xchg
xor
xor
xor
add
xor
xor
rol
xchg
xor
mov
add
not
ror
lea
xor
decl
jne
mov
not
and
mov
not
lea
xor
xor
mov
pop
pop
pop
leave
push
call
mov
lea
xor
call
call
nop
fsub
scas
lret
scas
or
mov
mov
shrl
aas
mov
or
cli
inc
push
lods
mov
ret
fidivl
push
jg
fmull
sub
xor
fs
add
or
insl
lds
cli
ret
imul
loope
dec
push
mov
ret
and
push
pushf
dec
ret
push
inc
fabs
scas
das
je
leave
inc
sbb
mov
cmp
insb
shrb
cmc
ds
jecxz
adc
xor
mov
cmp
or
and
pop
pushf
inc
addr16
popa
sarb
fwait
stc
and
fisubl
lods
mov
les
scas
in
and
and
mov
push
push
mov
mov
scas
sbb
iret
push
mov
fsubr
inc
lods
push
jle
fidivl
test
push
loope
mov
mov
sub
fnstenv
mov
adc
insl
pop
movsl
mov
mov
movsl
pop
and
cmpsl
insb
fsts
push
mov
pusha
xchg
add
xchg
lods
add
adc
or
or
gs
fwait
and
loop
out
dec
fisubl
push
cltd
loope
or
mov
and
shrl
and
mov
inc
pop
call
push
rcrb
insb
clc
mov
mov
fsts
or
mov
and
in
jecxz
mov
sbb
lcall
out
ss
popf
out
dec
mov
dec
fabs
pop
out
adcb
test
add
ret
lods
repnz
out
dec
push
push
push
cltd
loope
in
push
loopne
cltd
loope
xor
push
mov
or
mov
movsb
push
dec
pop
mov
fldcw
dec
mov
jmp
dec
mov
lret
mov
inc
in
xlat
aaa
mov
movsb
aaa
sub
hlt
xchg
cmpsl
aaa
roll
aaa
ret
push
movsb
cmp
bound
xor
cmp
push
cs
mov
clc
out
lahf
sub
xchg
iret
test
or
pusha
sub
mov
push
repnz
bound
es
sarl
idivl
sbb
test
rcrb
xchg
mov
push
sqrtps
sbb
xchg
cli
movsl
mov
jo
cltd
jbe
cld
cltd
insl
loopne
mov
mov
sbb
shl
push
xchg
sti
leave
xchg
inc
sub
fdivrs
dec
and
cwtl
sbb
mov
or
fnsave
ja
sub
xchg
xchg
cli
movsl
aaa
cmp
pushfw
jne
cs
outsl
inc
pop
enter
lcall
mov
push
stc
lock
cwtl
dec
cmpsl
divb
cmpsb
jb
jno
xor
jae
adc
cli
lock
jg
pop
enter
xor
cmp
mov
fwait
jno
aas
imul
dec
pop
push
xor
xchg
mov
pop
adc
aaa
xchg
cli
sub
movsl
inc
mov
cmpsl
jbe
ljmp
push
mov
test
dec
jecxz
mov
aaa
xchg
shrl
xchg
out
xchg
cli
dec
pop
cmp
dec
inc
fucompp
insb
fmull
repnz
mov
cli
fdivs
xchg
mov
xor
fiaddl
mov
push
shll
or
imul
and
call
in
jns
pop
enter
shrb
pop
inc
cmp
dec
mov
push
repnz
bound
repz
movsl
push
mov
inc
xchg
mov
push
mov
movsl
aaa
push
cmpl
pop
mov
push
mov
iret
ja
cli
xchg
aaa
xchg
stos
iret
aaa
pushl
push
leave
push
ja
mov
ljmp
sbb
or
mov
xchg
add
mov
push
mov
pop
enter
push
mov
cmpsl
aaa
xchg
add
movsl
pop
xlat
xchg
xchg
inc
sub
pop
mov
cwtl
jle
xor
shrl
or
nop
mov
aas
xchg
cli
movsl
rclb
lret
sahf
mov
jecxz
aaa
cwtl
jg
ss
cli
bound
cmpsb
jle
pushf
jne,pn
pushf
sub
xorl
pop
xchg
scas
iret
ja
mov
enter
sbb
cld
mov
roll
enter
aas
sbb
push
mov
sbb
icebp
les
jno
aas
xchg
mov
mov
mov
jno
aas
xchg
test
je
mov
jmp
xchg
push
adc
mov
fwait
jno
and
push
xchg
into
movsb
es
mov
push
int
mov
pop
enter
aaa
xchg
cli
inc
push
sbb
and
push
jno
cmp
lods
popa
decl
sbb
push
icebp
repz
sbb
or
pop
enter
mov
pushf
or
xor
lahf
stc
fdivrs
cmp
gs
mov
pop
mov
in
lds
fsin
jg
pop
enter
fmull
and
bound
mov
shll
cmc
pop
push
cmp
add
xchg
cli
movsl
inc
test
sarb
xchg
dec
add
or
ficomps
push
or
pushf
or
cmpsl
mov
aaa
xchg
out
popf
aad
jno
aas
xchg
jns
aaa
xchg
cli
cmpsb
mov
cli
movsl
aaa
lods
or
std
sbb
popa
aaa
xchg
cli
inc
imul
cmpsb
inc
lahf
jno
xor
iret
ja
lret
rorl
push
shrl
psllq
aaa
xchg
cli
cs
lahf
cmp
movsl
mov
xchg
cli
movsl
xor
repnz
fwait
icebp
push
inc
adcb
jecxz
cmpsb
jb
lcall
lahf
add
rcll
mov
jg,pn
jno
aas
scas
stos
mov
push
rol
sbb
lea
repnz
mov
xor
xor
pop
xchg
xchg
imul
scas
mov
cmpsl
xor
ljmp
lea
scas
test
cli
stos
sub
repz
jnp
push
arpl
xchg
xor
leave
les
fst
lock
push
push
add
rcl
sub
pop
inc
leave
xchg
cmp
sti
repnz
mov
lods
mov
xlat
sbb
and
xchg
clc
mov
aas
mov
jmp
jo
jae
sub
into
je
or
add
test
mov
scas
adc
mov
scas
cmpsl
sar
pop
push
mov
int3
jo
aam
loope
xchg
pushf
cltd
dec
mov
mov
push
scas
cmc
cmp
ror
movsb
mov
dec
cmp
fs
test
out
xor
gs
out
push
jecxz
repz
rolb
fs
shrb
inc
shl
mov
std
push
stos
repz
fidivrs
pop
icebp
pop
cmc
addr16
lahf
leave
pop
hlt
repnz
add
cmp
js
push
xor
mov
pop
cmc
clc
shr
ficomps
add
in
cmp
js
mov
sahf
aad
xchg
sti
push
xchg
mov
dec
in
popl
push
mov
mov
std
movsb
arpl
cwtl
iret
push
hlt
mov
push
test
neg
daa
imul
mov
adc
jno
daa
cmp
mov
xor
pop
inc
scas
in
pushf
cmpsl
mov
jo
fldenv
cmpsb
push
xor
shr
mov
push
out
leave
mov
push
lcall
scas
stos
mov
adc
imul
inc
push
jne
pop
ret
in
jae
loop
mov
xor
pop
ret
adc
sbb
cmpsb
and
jg
pop
mov
or
adc
cmc
adc
lret
call
xchg
jnp
lret
rcl
xchg
push
fisubrs
jae
xlat
das
sub
jo
adc
inc
inc
pushf
ror
xchg
ljmp
pop
jg
inc
fwait
call
push
jae
sub
add
sub
cmc
xchg
stc
gs
mov
rcll
sahf
rcr
jo
push
pop
in
cld
cmpsl
jp
icebp
ja
push
std
inc
loope
mov
mov
in
mov
lahf
mov
xor
arpl
outsl
cmpl
cmp
lock
pop
hlt
mov
fcmovnb
push
xchg
nop
cmp
shrb
adc
dec
push
dec
mov
loopne
push
or
test
inc
cmc
loop
mov
adcl
mov
mov
test
and
sarl
popa
xchg
sub
lcall
shll
xchg
or
mov
push
int3
add
mov
add
add
in
jecxz
xchg
mov
inc
jg
into
out
mov
das
int3
movsb
setp
cmp
mov
repnz
int
or
dec
fbstp
xchg
xor
mov
popf
jg
rolb
cltd
cmpsb
fimull
enter
inc
adc
jno
in
pop
mov
adc
xchg
cld
fwait
add
xor
and
dec
xchg
arpl
cmp
roll
sbb
daa
add
mov
xchg
xchg
aaa
rol
mov
iret
push
or
inc
out
fnstenv
jg
xchg
xchg
fsubrp
mov
mov
int
fadds
sbb
repz
push
mov
jg
dec
test
fs
mov
cmpsb
fnstsw
test
loopne
out
and
push
aad
push
test
lds
bound
repnz
in
in
push
gs
daa
dec
out
js
stos
in
in
xor
stos
jecxz
push
stc
mov
call
adc
mov
sub
dec
fsubrs
and
sbb
in
in
shlb
into
rclb
ljmp
cwtl
pop
test
lahf
fmuls
jg
push
xor
dec
arpl
mov
xor
sbb
mov
inc
or
sub
sarb
sbb
push
nop
clc
lock
push
imul
clc
inc
ljmp
test
xchg
sbb
dec
mov
fsubl
stos
dec
movsb
or
cmp
divb
in
mov
sbb
jecxz
rcrl
stc
sub
outsl
shll
cmp
jg
jno
inc
dec
cmp
mov
jnp
push
cmp
call
mov
cmp
xchg
ja
mov
sub
pop
or
jge
notb
push
push
leave
sahf
scas
imul
sbb
adc
loop
imul
movl
and
mov
sub
jbe
cmp
mov
imul
mov
sbb
mov
pushf
subl
cld
dec
xchg
mov
fbstp
pusha
and
incl
test
push
jne
lods
add
cwtl
je
gs
out
in
xchg
push
mov
lret
test
jb
adc
pop
adc
adc
scas
jne
adc
clc
adc
cs
js
adcl
aad
xor
filds
push
loop
mov
jg
push
push
push
mov
das
popf
jmp
inc
lods
call
cmp
in
mov
pop
adc
popf
lahf
mov
mov
xor
pop
push
nop
mov
lock
xchg
mov
pop
pop
push
ja
cmpsb
mov
in
int3
cmpsb
and
cmp
and
insb
imul
jbe
push
and
sti
filds
mov
lret
fisubl
and
andl
mov
lods
sarl
xor
jl
fidivs
je
mov
lods
jae
inc
mov
push
push
or
xchg
mov
xchg
jp
in
jmp
mov
mov
lock
loope
addb
es
xor
mov
aad
xor
inc
mov
cltd
leave
insb
push
push
js
ret
xlat
movsb
xchg
vpshaq
xorb
out
mov
ss
pop
ljmp
jnp
daa
incl
or
sub
dec
into
jg
dec
rol
pop
mov
ds
xchg
xchg
ljmp
icebp
stos
int
sbbl
adc
pop
scas
push
mov
stos
jo,pn
test
mov
rcr
stc
test
popl
and
in
cmp
jmp
dec
xchg
dec
jb
sub
popf
jmp
ja
out
and
dec
mov
mov
push
adc
mov
dec
jmp
pop
sarl
fstp
seta
mov
cmpl
outsb
clc
jo
aam
sub
and
cmp
fwait
pop
inc
jnp
push
loop
into
mov
stos
mov
mov
ficompl
push
test
pop
push
add
repz
test
cmc
std
adc
mov
mov
ljmp
movsl
jp
out
mov
sub
pop
test
jne
lret
insb
xor
pushf
jl
enter
xor
fstl
lret
xchg
out
sbb
xor
insb
cltd
pop
mov
fnstcw
fdivl
cmpsl
sbb
loope
popf
jge
xor
jns
leave
mov
leave
inc
adc
lret
xor
sahf
mov
pusha
cmp
or
cmp
or
enter
aaa
xor
sahf
inc
cld
in
xor
and
bound
sahf
ljmp
push
addr16
icebp
cmpb
fimuls
mov
repnz
jecxz
aaa
in
es
adc
daa
pop
ja
push
sbb
sbb
adcl
xlat
jb
fbld
stos
outsl
or
dec
push
movsl
pusha
dec
ljmp
fs
aas
lret
xor
jl
repnz
sbb
mov
leave
and
cld
jo
inc
cmp
and
xchg
pop
add
in
sub
sub
jne
or
insb
cmp
popa
jno
call
fwait
mov
xor
stc
arpl
adc
call
leave
icebp
lahf
xchg
xor
jg
in
cmp
push
pop
mov
jecxz
ljmp
pcmpgtw
int3
aam
mov
cmp
fimull
xchg
xchg
mov
pop
sub
add
repz
lds
mov
cmpsb
sub
nop
mov
mov
pop
sub
xchg
cmc
stos
mov
stos
xor
rcrl
out
adc
test
jg
jecxz
push
sbb
and
mov
pop
mov
mov
idivb
out
adc
ljmp
leave
test
or
mov
out
icebp
pop
in
xchg
fbld
shlb
insb
mov
mov
pop
scas
out
add
xor
daa
call
daa
sti
pop
daa
mov
xor
data16
fucom
mov
jns
jno
pushf
sarb
cmp
outsb
fsubl
imul
push
jns
flds
lods
sbb
pop
ficoms
std
lods
dec
cmpl
aas
fisttpl
jecxz
ficomps
mov
inc
mov
cmp
jne
mov
mov
sub
jge
iret
xchg
mov
jge
loope
rcrb
cltd
mov
lcall
add
es
mov
cmpsb
lods
dec
in
xchg
mov
shll
sbb
sub
push
mov
nop
adc
adcb
leave
xchg
jns
xchg
xchg
imul
popa
xchg
aaa
scas
and
jl
mov
sbb
rcl
mov
xor
jge
ror
dec
dec
leave
imul
sarb
jg
pop
iret
es
scas
dec
jmp
adc
inc
pop
adc
xchg
lea
inc
mov
test
xchg
jns
xor
ret
out
insb
mov
pushl
sbb
sub
call
arpl
imul
mov
jne
loop
rcrl
xchg
arpl
andl
jb
mov
lea
in
sub
lock
sub
lea
mov
xchg
adc
sahf
sub
fidivrl
scas
lods
std
lret
loopne
xor
popf
xchg
sbb
ljmp
lret
adc
mov
test
or
test
mov
push
mov
data16
xor
adc
outsl
lods
imul
fwait
cmp
adc
jno
popa
lock
out
sahf
mov
pop
cmp
jb
pop
push
imul
out
icebp
movsb
inc
shlb
ds
lods
sbb
stc
sarb
je
fldt
sbb
roll
push
cmp
mov
pop
pop
loopne
inc
stos
test
sahf
or
mov
popa
mov
inc
dec
cmpsb
mov
jmp
and
mov
mov
jecxz
mov
inc
imul
mov
rcrl
xor
adc
aas
mov
fwait
movb
jg
out
jne
cmp
cmpsb
mov
mov
nop
arpl
mov
rclb
mov
outsb
mov
jno
pop
adc
fldt
fildll
test
or
callw
push
ljmp
imul
adc
push
mov
xchg
loopne
sub
fildll
cmpsb
and
ret
test
movsb
scas
pop
sbb
and
mov
mov
sbb
scas
jnp
push
fs
fisubrs
stos
xchg
loope,pt
sub
jmp
mov
push
pop
pop
fisubrs
mov
imul
shll
xchg
xor
call
lock
mov
iret
add
mov
push
cmp
ret
ret
add
repnz
adc
call
adc
adc
lods
inc
pusha
ds
xlat
push
pop
dec
sbb
icebp
std
mov
mov
jl
sub
aam
mov
filds
xor
cmp
fisttpll
je
and
ret
and
lret
add
sahf
lea
jl
mov
movsb
mov
mov
push
or
lods
cmpsb
fs
pop
mov
test
jp
jle
adc
jbe
pop
ljmp
imul
lods
out
mov
push
sub
push
dec
xchg
sub
aaa
shll
xor
mov
mov
orb
ss
xchg
sbb
inc
dec
mov
out
enter
and
jmp
stos
add
jle
jbe
adc
add
dec
mov
ja
push
scas
xor
pop
repnz
jecxz
xor
pop
fdiv
jae
mov
movsb
hlt
sbb
add
in
cmpsl
dec
sbb
sbb
cmpsb
out
seta
mov
mov
out
mov
mov
mov
xor
adc
fdivrs
mov
lahf
sbb
sub
and
and
bound
lea
jp
pop
fld
in
aas
mov
aaa
add
cmc
scas
sar
dec
xor
imul
cmp
push
lret
adc
pop
mov
movsl
and
sbb
jno
adc
imul
scas
repz
ja
lret
gs
and
fbld
xchg
jge
xchg
arpl
andl
mov
mov
aaa
jmp
loope
out
mov
jnp
insl
cli
movsb
loope
cmc
loop
xor
dec
es
lret
insb
xchg
fs
jg
in
xor
addr16
enter
cmpsb
inc
imul
inc
movsb
mov
push
push
std
fistpll
mov
loopne
sti
pushf
shl
rcrl
scas
jmp
dec
mov
jns
xor
fwait
das
jae
lret
pop
out
ret
dec
jbe
jmp
jp
fwait
push
lods
xchg
cmp
push
popf
lods
lret
dec
aas
inc
ret
es
mov
and
roll
fwait
jmp
shll
out
mov
test
inc
xchg
cmp
out
jbe
jge
jl
jg
fisttpll
loop
rorb
sub
xchg
inc
adc
arpl
notb
minps
lods
lahf
pop
shll
jo
xor
out
xchg
je
in
mov
fwait
xor
loopne
fcmovnu
in
sub
push
ds
ret
xor
filds
aaa
inc
jg
inc
mov
int
call
stos
aad
movl
cmp
dec
stos
leave
test
sub
pop
jno
and
mov
jns
adc
xchg
inc
add
xor
shlb
imul
dec
mov
lods
mov
imul
push
mov
mov
push
inc
push
dec
or
mov
sub
std
push
pop
test
mov
mov
push
sbb
cmp
mov
je
ret
mov
dec
xchg
mov
in
push
sub
enter
xor
mov
fwait
pop
inc
mov
push
push
and
cmp
addr16
xor
cmp
testl
pushl
cmp
fmul
push
mov
mov
mov
les
lods
cmpsl
test
jg
outsb
imul
in
inc
dec
andl
call
push
repz
iret
adc
mov
fbld
xor
push
xchg
jle
cmp
jl
push
lock
lea
mov
push
das
xchg
dec
inc
xchg
xchg
adc
mov
fisubrl
pop
test
stos
xchg
loope
addr16
aam
mov
lds
dec
in
fsubrs
mov
jmp
jg
call
or
or
jle
mov
and
mov
nop
xor
mov
xchg
mov
sbb
fs
lods
movsl
mov
lret
push
xchg
sub
pop
pop
inc
mov
outsb
xlat
adc
std
clc
ret
mov
repnz
mov
in
in
inc
loope
mov
sbb
pop
repnz
int3
mov
ds
pop
push
mov
lds
or
xchg
adc
cmp
bound
mov
push
pop
leave
adc
sub
lds
sbb
ret
sti
sbb
int
adc
fmull
cld
jl
test
jg
sbb
jnp
sub
mov
scas
xor
out
cmp
cs
cli
mov
test
cmp
adc
cltd
cmc
es
pop
les
jae
mov
xchg
push
sar
in
hlt
fldl
push
testl
or
enter
sub
leave
jle
add
in
push
fmul
push
and
xchg
inc
ret
call
in
mov
arpl
aaa
in
repz
mov
ret
mov
dec
out
mov
loop
mov
cltd
mov
es
fisubrs
outsb
shl
inc
push
add
incl
scas
addr16
mov
jl
xchg
push
out
adc
ljmp
sbb
inc
data16
sbb
lock
jbe
sahf
ret
rolb
cmpsb
xor
repnz
pop
cmp
andb
ds
jb
rclb
punpckhbw
mov
sub
rcr
imul
fcomp
movsb
ja
sub
jg
inc
ja
jmp
jle
cmc
sahf
fcompl
push
xchg
push
push
cmp
add
in
aas
nop
mov
pop
test
sub
cmpsb
mov
inc
pop
fbld
adc
int
cmc
and
into
inc
out
xchg
jbe
sarl
outsb
mov
fcmovu
es
sbb
aas
inc
shlb
aad
stc
fstl
loop
mov
adc
addr16
jb
jmp
add
pop
je
out
inc
das
jecxz
test
xchg
adc
mov
dec
mov
jbe
and
mov
scas
xchg
aad
mov
bound
adc
cwtl
pushf
stc
ret
rorl
push
int
mov
jnp
aas
push
mov
mov
shlb
cmp
adc
mov
or
push
bnd
mov
cmpsl
jle
addr16
push
mov
cmpsl
cmp
add
fnstcw
shrl
dec
jg
mov
pop
and
pushl
lcall
mov
repz
lods
ret
pop
cmp
cmp
inc
jno
push
dec
ret
adc
cmpsl
cld
push
out
jmp
mov
pop
repnz
mov
xor
mov
fwait
xlat
xchg
je
test
xchg
movsb
xor
sub
popf
xor
adc
stos
mov
cmpsb
or
add
mov
xorl
insb
mov
arpl
and
mov
push
mov
jg
push
sti
push
push
cmpsb
ror
jecxz
mov
push
mov
add
into
mov
stc
xor
scas
xor
pop
xchg
cmp
hlt
cmc
outsl
or
cmc
xor
inc
xchg
cld
outsl
jl
dec
inc
and
xlat
pop
sti
cmpb
pop
cmpsl
adc
push
into
ss
push
pushf
sbb
shlb
mov
cwtl
jo
push
ficompl
idivl
cmp
cmpsb
xchg
and
shll
movsb
inc
mov
scas
jp
je
test
sbb
dec
pop
cltd
mov
roll
sti
mov
imul
outsl
stos
dec
in
fisubrs
adc
es
dec
xor
sbbl
jmp
shrb
fistpl
xchg
sbb
mov
jl
aaa
in
cmp
mulb
ficoml
cmp
add
mov
xchg
xor
fadds
lahf
and
mov
outsb
repnz
mov
add
fcompl
repz
pop
ss
mov
jns
arpl
xchg
js
enter
or
jb
xor
add
cmp
ficoms
jp
mov
sub
mov
imul
lea
dec
adc
inc
mov
sub
shll
xlat
in
cmpsb
push
cli
push
je
movsl
xor
xor
repnz
aad
inc
lods
xchg
scas
jmp
xchg
repnz
sbb
aas
dec
dec
cmp
mov
mov
jge
xchg
push
pop
xchg
enter
mov
add
lcall
pop
dec
sti
pop
loope
in
mov
xchg
adc
and
mov
add
pop
mov
clc
xor
lods
cmc
test
mov
outsb
stc
in
mov
pop
dec
scas
lds
cs
jb
sbb
push
xchg
aaa
insb
lds
dec
mov
adc
cmp
cmp
cmp
das
add
push
dec
jne
andl
adcl
aaa
sbb
and
lahf
arpl
and
mov
aad
lock
sbb
aaa
cmpsl
xor
or
cli
cmp
jl
pcmpgtd
cmpsb
mov
mov
push
mov
or
ret
popf
push
in
mov
add
outsl
push
mov
push
popa
int
mov
add
jb
or
jbe
fisttps
add
mov
push
xchg
mov
or
xchg
in
test
inc
pop
mov
jp
pop
ss
lods
iret
sbb
ror
pusha
clc
dec
jno
movsl
xchg
mov
arpl
in
add
inc
std
sub
and
iret
nop
or
ljmp
das
xor
cwtl
push
outsb
inc
cmp
mov
cmp
das
push
mov
scas
jns
movsl
mov
std
fwait
inc
mov
movsb
add
jecxz
mov
imul
mov
lods
and
xlat
data16
inc
out
push
stos
adcb
pop
mov
xchg
jl
and
jmp
push
mov
lcall
xchg
imul
xor
sbb
push
and
lods
iret
xor
pop
icebp
lret
adc
adc
mov
into
xchg
and
adc
adc
adc
push
or
add
sbb
cs
and
sti
idivb
scas
repnz
xchg
xlat
pop
notb
sub
xchg
int3
lock
lock
fwait
pop
sarl
repnz
lods
mov
xor
decb
mov
movsl
inc
inc
lret
insb
mov
xor
mulb
jge
cmp
jne
mov
scas
mov
hlt
icebp
jo
mov
idivl
mov
mov
mov
pop
push
insb
mov
and
aas
sub
out
out
cmpsb
cmp
idivb
cmpsl
jle
jmp
xlat
out
sbb
ss
jmp
cltd
mov
fisubrl
jbe
mov
out
insl
xchg
mov
mov
mov
inc
stos
pop
fs
mov
sbb
imul
call
rcr
push
mov
cwtl
add
add
xor
imul
push
ljmp
es
pop
fsubs
lea
inc
and
push
cmpsl
inc
push
cmp
mov
jg
and
int
leave
mov
nop
push
test
jns
mov
outsl
jae
pusha
aas
mov
xor
mov
dec
inc
ret
or
sub
repz
lret
adc
int3
addr16
jb
mov
repz
adc
mov
cmp
cmpsl
cmp
out
sahf
mov
lahf
out
inc
push
mulb
jle
es
dec
clc
leave
std
imul
movsl
sbb
daa
push
insb
dec
xor
inc
cmp
data16
stos
xor
popf
mov
xor
mov
push
inc
rolb
js
sub
ret
xlat
and
ret
fiadds
add
ret
mov
xchg
jae
mov
enter
cmp
negl
mov
movsb
iret
dec
addr16
fbld
push
addr16
les
adc
stc
xchg
cmp
push
xchg
loopne
cs
lods
lock
loope
ds
je
inc
fwait
js
cmp
mov
xor
jnp
xchg
sbb
cmpsb
inc
cltd
repz
push
iret
ds
xor
push
mov
and
aaa
mov
or
stos
mov
cmpsl
mov
addl
or
pop
and
jge
and
cwtl
icebp
mov
sub
mov
lods
push
ja
shll
cltd
std
xor
mov
cs
in
pop
ret
dec
mov
lock
fsub
jne
mov
fldcw
mov
add
push
sbbb
adc
into
push
adc
jne
lcall
iret
dec
inc
mov
lea
xor
push
ja
push
out
cwtl
jg
jg
jnp
push
dec
mov
in
and
sub
adcb
mov
inc
hlt
jmp
jo
xor
cs
aaa
push
ret
imul
hlt
mov
leave
cmp
rcrl
or
rolb
mov
loop
push
repz
fcompl
push
pop
push
cmp
cmc
pop
testb
icebp
mov
xchg
push
mov
mov
adc
orb
mov
xchg
lods
call
xchg
data16
pop
xchg
loopne
pop
out
pop
jne
loop
out
in
fists
push
lea
clc
pop
cmpsb
push
push
daa
push
inc
add
pushf
cmp
in
mov
ret
push
jbe
repnz
jae
xlat
sbb
loopne
imul
xchg
sbb
repnz
lea
add
inc
shl
scas
imul
repz
mov
scas
lods
shrb
pop
fmulp
xor
mov
push
cmp
or
pop
dec
jnp
imul
popf
jae
mov
idiv
pop
push
aaa
sub
add
loop
jmp
adc
loopne
out
repnz
jae
push
in
xchg
mov
jmp
xchg
cmp
sahf
mov
ja
cmpsl
dec
pop
and
aad
js
mov
pop
dec
xchg
xor
adc
ljmp
sbb
lret
outsl
sub
sahf
out
xchg
decl
orb
lds
out
xor
adc
cmpsl
inc
mov
rcrb
btsl
mov
fimuls
push
out
mov
fsubrl
sbb
test
xor
inc
loopne
in
inc
stc
je
inc
iret
jne
fldln2
jmp
fldz
jmp
out
std
ss
cmp
testb
cmc
ljmp
jae
adc
fucomi
dec
fwait
inc
lret
in
out
mov
mov
mov
popf
imul
mulb
inc
mov
pop
rep
imul
int3
pop
add
loope
imul
mull
sbb
testl
jle
mov
outsb
push
call
scas
sbb
clc
ljmp
and
push
out
jp
xor
repz
mov
push
xchg
push
or
jae
aad
mov
sub
ret
shl
ss
adc
fwait
or
jg
dec
lods
call
jnp
aaa
mov
push
inc
fxch
cwtl
daa
faddl
mov
or
inc
out
aaa
add
sbb
daa
negl
fwait
sbb
dec
xor
dec
mov
mov
jae
ffree
idivb
fadds
int3
aad
test
xchg
sub
ljmp
xor
filds
jb
jmp
xorb
pop
test
dec
repnz
arpl
scas
pushf
mov
mulb
hlt
outsl
mov
xor
mov
dec
push
lea
push
add
aad
arpl
xchg
mov
fmul
movsl
or
inc
rorb
xor
repnz
lahf
push
in
ficoms
inc
sub
dec
push
inc
scas
xchg
mov
push
inc
pop
outsb
andb
push
cmp
push
jo
mov
sub
loop
xor
ret
mov
cmp
sub
sbb
fcomps
iret
cmp
out
jge
inc
mov
aaa
scas
push
out
jmp
in
ja
jg
das
push
jp
enter
xor
iret
sub
xor
hlt
xor
mov
fs
stos
ret
mov
fimull
fnstcw
and
lea
das
mov
cmp
mov
ja
pop
jbe
add
mov
or
jmp
cmp
jb
hlt
pop
cmp
jnp
jle
and
in
lea
std
cli
pop
inc
push
jb
fildll
addr16
cmpl
cmp
sub
mov
sbb
cmc
das
xchg
js
xor
xchg
push
or
enter
sub
adc
pushl
pop
out
ret
and
mov
daa
les
add
push
test
jecxz
scas
push
xchg
repnz
cmpsb
jle
xor
pop
out
fdivrl
dec
xchg
int
fs
in
subb
mov
sahf
jno
ljmp
dec
and
jle
montmul
cmpsb
inc
pop
loopne
mov
dec
sub
fistpl
fidivs
mov
mov
out
iret
fiadds
stos
mov
adc
sbb
jmp
scas
push
cltd
outsb
lods
push
mov
adc
inc
push
data16
in
fsub
scas
push
jle
imul
cmpsl
lahf
jno
out
jl
pop
dec
stc
jge
dec
addl
jae
lock
dec
mov
mov
push
mov
jnp
xlat
imul
call
mov
gs
lahf
in
sub
imul
iret
repz
xchg
mov
mov
pop
sub
add
adc
mov
cmp
jo
mov
rol
pop
xchg
push
test
jb
mov
xor
cmp
out
subl
pop
and
scas
popa
divb
dec
ret
ljmp
mov
push
push
in
add
jmp
dec
in
inc
ficompl
inc
mov
pop
or
iret
pop
lret
dec
jbe
adc
or
push
dec
xchg
leave
xor
ret
lret
xchg
leave
xor
cmp
pop
inc
xchg
mov
xor
xchg
pop
push
mov
cmpsb
xor
gs
lahf
cmp
xchg
bound
popf
clc
dec
cmp
stc
push
ljmp
cmpsl
mov
jle
in
leave
repz
cmc
xchg
test
fwait
dec
stos
cmp
lahf
inc
cmp
lods
mov
lret
das
das
cmp
cltd
push
pusha
push
fwait
jb
push
or
stos
pop
pop
je
xchg
cmp
mov
lcall
push
adc
cmp
out
or
into
stos
sbb
pop
loope
push
jae
dec
cwtl
test
cmc
xchg
add
ret
pop
gs
andl
mov
jae
ret
xchg
mov
push
mov
xchg
sbb
xchg
lahf
jae
aam
insb
mov
lods
lds
in
imul
jno
into
add
adc
xor
repz
inc
jge
cltd
sub
in
mov
mov
idivb
mov
lret
sub
jle
jecxz
cltd
mov
test
outsb
out
mov
xchg
scas
xchg
mov
and
sarl
scas
cmp
fstl
adc
xchg
testl
lods
xor
dec
dec
xor
sar
push
iret
or
mov
mov
and
shll
das
fimuls
mov
ss
adc
xchg
sbb
fstp
fwait
push
inc
xor
fimull
mov
pop
add
sub
add
inc
lods
pop
jb
outsl
mov
stos
xchg
add
cmpsl
inc
mov
in
jne
scas
mov
mov
mov
fldcw
and
sub
jecxz
out
call
pop
pop
repz
jns
sub
rcrb
and
test
int3
test
in
mov
div
ret
js
fidivrs
mov
cmpb
mov
mov
adc
sub
lods
add
mov
mov
or
inc
adc
jecxz
or
lret
adc
adc
and
repnz
pusha
sahf
push
mov
outsl
mov
mov
out
or
jecxz
jo
fwait
mov
in
mov
data16
aad
sub
insb
arpl
lods
loop
jle
ja
jns
pushf
fmull
into
jae
and
adc
push
jecxz
sbb
cmpsl
adcb
push
push
test
adc
xor
stos
mov
mov
shl
push
lods
lods
fwait
outsb
cltd
pop
xchg
fistl
aam
popa
outsl
mov
push
sub
leave
repz
adc
test
jb
clc
inc
stc
mov
jnp
jp
mov
pop
mov
pushf
xorb
mov
jbe
out
mov
add
loop
loope
jnp
mov
cmp
in
jle
pop
xchg
push
rcr
insl
xchg
enter
in
addb
pop
pop
pop
out
stc
cmpl
daa
inc
dec
outsb
lahf
call
mov
lock
mov
xchg
xchg
xchg
or
out
or
pop
adc
sub
mov
add
ja
xchg
jns
aas
push
mov
and
push
and
fldcw
in
dec
repz
daa
imul
jge
jge
mov
icebp
rcrl
stc
insb
mov
xor
dec
lret
insl
mov
test
sbb
xor
pop
xor
adc
jle
sub
inc
fs
dec
jo
mov
mov
das
jge
shrl
cld
jl
andl
mov
mov
add
hlt
mov
dec
iret
jmp
das
daa
clc
push
mov
fldcw
mov
dec
jb
sbb
loope
mov
mov
js
xchg
bound
arpl
stc
stc
jecxz
jmp
sti
dec
shlb
out
cwtl
mov
dec
fwait
leave
rclb
cld
aaa
mov
and
pop
ss
daa
jecxz
pop
data16
pop
xchg
dec
push
dec
out
into
mov
pop
inc
jg
imul
push
mov
roll
mov
imul
shlb
push
cmp
div
mov
stos
sub
loopne
cmp
aas
ret
or
shl
loope
mov
out
dec
sbb
in
fisttps
out
out
jmp
jne
repz
fcompl
sahf
ljmp
ficomps
out
scas
dec
sbb
mov
das
adc
jbe
ja
aas
push
movsl
lret
loop
js
stos
lods
xor
aas
addr16
pop
mov
mov
sahf
jo
mov
cld
mov
popf
pop
mov
aas
lock
lock
ret
add
or
test
add
es
dec
or
test
fbld
cmp
and
mov
add
push
ljmp
fmull
mov
adc
pop
xor
mov
les
iret
rorb
mov
xchg
xor
sti
fiadds
dec
daa
out
mov
mov
mov
bnd
push
into
pop
dec
cmp
jg
add
mov
or
cmp
out
lds
push
mov
xor
adc
and
bound
jg
mov
mov
insl
jge
fsubr
ljmp
xchg
adc
push
arpl
lahf
add
hlt
test
dec
daa
jmp
shrl
xor
ret
popf
xor
lods
pop
dec
arpl
fcmovnb
jb
jecxz
push
popa
add
and
push
or
xor
shll
pop
sti
push
xor
repz
repz
jb
imulb
bound
aam
rcrl
inc
sub
mov
and
jg
pop
pop
mov
imul
pop
in
or
xor
push
aad
rcr
popa
xchg
and
sar
ja
dec
mov
loop
lfs
xchg
jae
or
je
sahf
add
xchg
push
call
repz
repnz
xchg
stc
and
in
xchg
enter
and
jmp
ds
mov
cli
jae
pop
jle
out
pop
call
roll
push
dec
mov
and
sti
loopne
xchg
cmp
push
ja
pop
aaa
in
adc
ljmp
fcmovne
mov
dec
pop
das
xor
test
std
sbb
aam
xor
cmp
and
push
in
mov
xlat
sbb
xorb
xchg
add
subb
sahf
sub
fcoml
fbstp
mov
add
xor
aam
lock
arpl
cmp
mov
cmpsb
shll
out
dec
jle
xlat
mov
pushf
fdivl
or
out
mov
pusha
sbb
in
push
jg
mov
cmp
cmc
mov
jno
xor
cmpsl
shrb
icebp
lods
pop
and
aad
sbb
scas
mov
add
mov
out
mov
jecxz
cmp
jnp
cmp
cmp
inc
data16
adc
shll
fidivl
test
outsl
push
dec
push
mov
push
sbb
sbb
and
mov
arpl
movsl
movb
jle
or
adc
icebp
cmpsb
fnstsw
mov
mov
int
loop
shrl
or
mov
test
xchg
jno
loope
ljmp
mov
dec
in
sbb
jle
xchg
lea
push
dec
cmc
push
pop
scas
rcr
cld
push
jle
xchg
lahf
scas
ficoms
xchg
or
inc
mov
fs
jne
xchg
xorl
sahf
ss
sub
loopne
pushf
dec
fistpll
jecxz
mov
cwtl
push
mov
jp
shrl
push
shl
rcrb
pop
bound
xchg
int
insb
movsb
lret
push
inc
loop
or
dec
mov
popf
jne
sbb
fsts
dec
jae
inc
orb
xor
ret
in
fimull
stos
push
fcoml
es
mov
mov
mull
sbb
cmpsb
hlt
shrb
jmp
aaa
fdivl
loop
mov
lods
ficompl
lret
mov
add
and
rcrl
adc
sbb
or
icebp
mov
das
mov
std
mov
incb
sub
fsubrp
pop
inc
mov
or
cmc
icebp
es
mov
fwait
popf
loop
or
sbb
cmp
int
mov
xchg
and
stos
idivl
jg
sub
int
sub
loope
in
jmp
xor
inc
mov
jno
aas
jg
mull
lods
out
int3
push
test
filds
fildl
jmp
cmc
test
push
shrl
jecxz
jmp
mov
lds
imul
jbe
aaa
fists
daa
adc
stc
inc
js
icebp
movsl
add
mov
mov
out
cmc
sub
xlat
inc
idivb
aaa
or
insb
mov
add
or
sub
add
sbb
adc
pmulhuw
add
inc
dec
testl
fistpll
jp
jbe
or
dec
data16
std
inc
sarl
dec
mov
out
lret
mov
ss
insl
das
fstpl
scas
lock
sub
push
push
add
xor
mov
mov
sub
dec
jmp
sub
adc
mov
and
xor
movl
and
inc
stos
cmp
out
add
cs
pop
mov
in
sub
jg
mov
sbb
cmp
repnz
pop
nop
xchg
xchg
add
mov
loop
jecxz
lret
popf
cmc
push
jo
jmp
cli
das
in
addl
imul
inc
pop
mov
in
arpl
pxor
jmp
jb
xor
xchg
add
mov
std
pop
stos
test
mov
mov
inc
cltd
es
ds
pop
fs
jg
mov
adc
cmpsl
adc
dec
mov
ss
pop
xor
sbb
rolb
sub
dec
das
xor
lods
lds
das
pop
in
icebp
adc
jle
inc
xchg
mov
mov
scas
notb
out
icebp
lods
nop
mov
int
add
and
inc
movsb
add
pop
leave
push
add
xchg
xor
inc
sub
shr
xchg
movsb
sahf
hlt
in
jl
out
and
rorl
dec
push
push
popf
xchg
loope
aam
in
mov
sub
fs
jb
mov
jnp
iret
xor
mov
adc
je
push
stc
mov
and
mov
int
icebp
dec
test
les
addb
test
test
enter
pextrw
cltd
repz
mov
call
jb
in
orl
mov
clc
jle
jo
mov
xchg
lock
mov
icebp
or
out
lock
mov
pop
stos
pop
adcl
jae
mov
clc
ja
dec
inc
insb
aam
sbb
lods
jmp
add
mov
mov
xlat
mov
sahf
bound
lods
outsb
stc
fsubrs
dec
xchg
and
sahf
sbb
mov
mov
mov
js
clc
scas
or
pop
sbb
cmp
lods
mov
cs
aaa
mov
in
repz
jnp
jg
xor
xlat
push
std
adc
imul
negb
hlt
mov
mov
fidivs
mov
lcall
sub
lods
mov
push
lahf
xchg
fstp
inc
scas
and
movsb
xor
out
iret
ljmp
cmpb
dec
mov
in
nop
ja
ret
int
pop
pusha
mov
cs
jecxz
mov
sbb
sbb
mov
pop
push
mov
xchg
xchg
adc
add
rcr
lods
test
sbb
imul
negb
das
fnstenv
inc
jmp
in
adc
inc
and
sub
inc
dec
daa
outsl
and
pop
xor
ss
sbb
or
or
movsb
push
fldcw
and
aam
or
test
mov
bound
adc
in
push
jbe
lahf
jb
cmp
loope
test
stos
jmp
sbb
mov
cmpl
sarl
pop
andb
bound
ljmp
dec
xchg
out
dec
cmp
out
loop
pop
cmp
lods
xchg
and
dec
xor
arpl
xor
pop
push
into
cmp
mov
mov
dec
mov
nop
or
data16
test
ljmp
dec
add
mov
mov
dec
cmp
jmp
in
das
cmp
sub
sub
leave
inc
mov
xacquire
mov
jmp
inc
lret
gs
in
sub
lods
pop
xchg
nop
insl
.byte
