mov
push
mov
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
add
addb
add
add
mov
pusha
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
add
out
pushl
std
repnz
cld
mov
push
sub
jb
pop
cmp
ja
mov
jmp
div
add
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
mov
sub
push
mov
push
mov
push
xorl
mov
call
push
pop
mov
mov
mov
xor
dec
and
mov
mov
sub
sub
push
pop
push
pop
cmp
je
add
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
jmp
xor
push
mov
call
sub
ret
add
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
push
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
push
adc
dec
mov
jbe
xchg
xchg
std
bswap
xchg
and
mov
repnz
jne
adc
rclb
push
mov
push
stc
push
jmp
test
scas
fistpl
xchg
mov
sarl
femms
xchg
push
xor
lret
sub
cmpsl
pop
iret
aam
cmp
push
pop
mov
ds
bound
lahf
jns
ss
mov
adc
mov
mov
cltd
or
jb
fsts
insl
jle
movsl
sbb
pop
repz
aam
loopne
ret
sub
xlat
cmp
xchg
aaa
clc
xor
xchg
xchg
in
adc
icebp
and
add
es
fstpl
sbb
in
std
or
pop
adc
add
decb
cmc
mov
addr16
popf
jae
imul
data16
outsb
cltd
loope
rclb
popf
mov
call
movsl
mov
call
dec
mov
dec
sarl
sbbb
sbb
push
xchg
or
roll
sub
daa
add
fimuls
loopne
xor
cwtl
jae
not
xchg
sbb
mov
int3
xchg
imul
mov
stc
call
ficoml
xor
dec
ret
mov
xor
adc
stos
leave
addr16
jge
cwtl
roll
sbb
push
repz
sub
test
out
cmpsl
rorb
mov
int3
test
push
sarl
add
and
mov
out
outsb
fwait
add
popf
arpl
dec
pushf
mov
lods
in
lods
jno
xor
ja
lahf
mov
or
dec
cmpsl
pusha
lahf
pop
sets
push
pop
jo
test
xchg
push
jae
or
and
out
fwait
pop
call
adc
cltd
push
lahf
test
jmp
repnz
fdivl
push
xor
mov
in
adc
jbe
mul
test
xchg
jg
mov
insb
cmp
jmp
jmp
ret
pop
leave
sbb
pop
push
sbb
pop
fldl
jb
fsubr
xchg
xor
pop
mov
adc
loop
pop
adc
adc
mov
cwtl
jnp
sub
jb
sub
add
stc
lret
jecxz
mov
outsl
dec
sub
xchg
nop
mov
jae
xchg
jne
pop
pop
sub
data16
pushf
in
dec
fcmovnbe
dec
pop
sub
enter
adc
dec
xlat
push
daa
adcb
or
dec
pushf
int3
xorl
outsl
out
mov
lock
fwait
adc
inc
in
hlt
stos
call
in
jg
or
pop
sbbb
clc
mov
inc
and
and
dec
push
call
out
shll
das
adc
icebp
push
rol
cmp
add
sub
sub
js
mov
vcvtsd2ss
mov
out
xor
rcrl
cmp
lock
inc
lods
aaa
xor
int3
shll
stos
ret
sarl
mov
mov
mov
mov
stos
mov
std
ja
fwait
les
pusha
xor
xchg
pop
out
cmp
popa
jle
sahf
cli
cwtl
push
add
cli
lods
push
in
and
cmp
imul
mov
pop
lahf
and
leave
pop
xchg
push
push
xchg
push
test
lds
cwtl
fistps
fwait
test
bound
hlt
and
popa
mov
or
mov
pop
sub
loope
test
daa
rcl
outsl
dec
xor
fsubs
mov
mov
mov
and
pop
add
cs
mov
push
and
jne
loopne
loopne
dec
dec
cs
mov
push
xchg
int3
cmpsl
andb
rcll
outsl
je
cwtl
adc
xor
addr16
sub
push
and
or
jge
inc
or
mov
sbb
push
jae
neg
sbb
jb
cwtd
cmpsb
cltd
int3
xchg
cmpsb
mov
and
xchg
add
ret
insb
cmpsb
in
lret
cmp
out
data16
pop
cltd
adc
icebp
inc
lock
push
dec
cmp
cmpsl
mov
dec
push
lods
push
stc
push
cmp
ss
jno
sbb
lret
xor
in
or
adc
divl
jb
adc
and
repz
mov
pop
jecxz
ret
jl
test
pop
pop
lret
addl
sbb
push
cltd
jp
lods
popf
out
mov
bound
adc
gs
mov
leave
negb
sub
or
push
inc
mov
imul
push
sub
fbld
push
pop
or
movsb
lods
cmp
inc
pop
add
imul
fstps
mov
roll
pop
sub
jmp
scas
call
jns
dec
out
dec
mov
mov
es
mov
sbb
adc
aad
xor
sub
stos
ret
cmpsb
push
iret
divps
lret
adc
cltd
mov
jmp
addr16
imul
dec
or
rorb
es
xorl
jl
fnstenv
push
dec
mov
pushf
sbb
in
add
test
cltd
inc
test
in
dec
xlat
mov
sbb
nop
cmpsl
in
fistps
lds
ret
cmp
cmp
ret
std
push
mov
jp
sbb
jb
push
jnp
pushf
popa
add
mov
enter
rorl
jle
xchg
test
mov
nop
fisttpl
pop
adc
cli
cmpb
mov
mov
mov
cmp
mov
mov
mov
add
jle
dec
jmp
xorb
orb
dec
jmp
cmp
into
xor
mov
push
xor
shrb
aaa
fs
adc
enter
jae
test
and
clc
icebp
aaa
cmpsb
jnp
dec
push
xor
lret
push
cmpsb
sbb
stos
fst
fdivrl
jl
sub
fwait
ret
call
test
pop
or
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
lds
cmp
sub
adc
sub
je
sbb
aad
or
iret
sub
jnp
sub
mov
pop
das
lret
pop
gs
.byte
