rclb
xchg
and
jnp
sbb
jnp
fimull
jnp
out
jnp
arpl
jl
dec
mov
out
test
decb
jnp
ret
mov
push
cmpl
xchg
add
add
add
add
in
jle
xor
jle
out
jle
loope
jle
inc
jmp
push
lods
in
jle
inc
out
jle
add
jle
repnz
jle
jle
pusha
lock
jge
jle
test
in
jle
push
jbe
mov
popa
call
jle
out
in
jle
lret
out
jle
add
add
add
add
int
jle
sbb
jle
cmp
in
jle
lret
out
jle
dec
out
add
jle
notb
jl
xor
jle
out
jle
aam
jle
ljmp
push
lret
out
jle
jg
jle
out
jle
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
adc
add
add
add
cmp
cmp
jb
add
add
add
add
add
pop
xor
push
xor
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
jae
jb
gs
jne
je
dec
dec
popa
outsb
addr16
add
add
outsl
bound
inc
imul
imul
je
push
jb
imul
jne
je
add
add
gs
je
inc
imul
jns
add
add
fs
jo
popa
je
push
gs
jne
arpl
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
data16
gs
imul
inc
add
add
insb
insb
dec
popa
insl
gs
imul
inc
outsb
jne
push
imul
popa
je
inc
add
add
gs
je
dec
popa
jb
dec
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
push
popa
insb
imul
addr16
jb
jne
add
add
outsb
dec
jne
gs
add
add
jb
outsb
inc
add
add
je
gs
imul
insb
outsl
bound
inc
fs
je
insl
inc
add
add
gs
je
inc
imul
jns
js
add
add
ja
popa
jo
imul
inc
add
add
je
jb
jo
add
add
jne
inc
imul
gs
imul
add
add
je
outsb
arpl
je
jb
add
inc
gs
gs
je
je
add
add
insb
imul
je
insl
add
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
je
insb
imul
push
imul
add
je
gs
popa
addr16
jne
jne
add
add
popa
insb
inc
gs
imul
popa
jae
inc
add
add
je
insb
imul
je
add
inc
gs
insb
je
popa
bound
outsw
add
add
fs
jne
jae
jb
jb
insl
inc
imul
outsl
jae
dec
gs
popa
addr16
add
add
outsb
jae
popa
je
dec
gs
popa
add
add
popa
jae
outsb
inc
outsl
fs
gs
outsl
insl
insl
outsb
je
add
push
imul
jb
imul
arpl
jae
add
push
push
jb
outsl
jb
add
inc
outsb
fs
popa
imul
gs
jns
je
insl
dec
outsb
jne
add
inc
outsb
jne
inc
imul
gs
imul
add
pop
outsl
outsl
insl
gs
add
je
jns
inc
outsl
insb
outsl
jb
push
gs
jo
add
push
outsb
push
imul
outsl
outsl
imul
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
dec
outsl
outsb
imul
push
outsl
imul
push
inc
imul
gs
imul
add
add
outsl
ja
je
jb
inc
insb
popa
jae
add
add
gs
je
inc
imul
imul
jb
insl
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
add
add
je
imul
push
popa
ja
outsb
jo
je
gs
arpl
add
add
ja
gs
inc
js
add
add
je
imul
add
jne
inc
push
imul
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
add
popa
outsb
addr16
imul
gs
imul
add
add
jb
outsb
addr16
arpl
imul
ja
add
add
ja
gs
inc
js
add
les
sub
sub
lea
imul
dec
dec
inc
sub
sub
lea
mov
dec
dec
inc
call
call
call
dec
and
lea
mov
call
inc
inc
inc
dec
add
lea
imul
dec
call
call
dec
push
inc
call
add
and
call
lea
mov
dec
dec
inc
dec
or
lea
imul
pop
sub
dec
inc
add
inc
pop
sub
lea
pop
mov
dec
inc
inc
pop
sub
and
lea
movswl
inc
inc
inc
inc
pop
and
lea
pop
imul
dec
mov
add
inc
call
dec
sub
lea
mov
ret
sub
inc
push
dec
sub
push
sub
lea
push
mov
dec
push
inc
add
push
sub
xor
mov
lea
push
add
ret
push
dec
inc
dec
add
lea
mov
inc
dec
add
inc
add
lea
mov
inc
add
inc
add
or
lea
mov
inc
dec
dec
add
xor
lea
mov
dec
add
dec
jmp
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
adcl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
cmp
add
dec
adc
add
add
jbe
add
mov
add
sahf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jae
add
xchg
add
adc
add
adc
add
adc
add
adc
add
adc
add
inc
adc
add
pusha
adc
add
mov
add
mov
add
add
add
add
fiadds
shrl
fiadds
fadds
add
fimull
mov
adc
lea
mov
xor
sub
add
inc
inc
inc
add
lea
mov
add
add
inc
inc
add
dec
jne
lea
mov
mov
inc
pop
add
inc
pop
add
and
pop
lea
imul
add
dec
add
dec
or
lea
movswl
inc
inc
add
ret
push
inc
sub
add
lea
movsbl
add
add
dec
push
push
push
push
add
sub
lea
push
mov
sub
add
sub
dec
add
lea
mov
dec
mov
inc
push
sub
inc
xor
or
lea
push
imul
inc
push
add
dec
pushl
add
call
or
add
lea
mov
inc
add
inc
add
add
pop
ret
lea
inc
dec
dec
cmp
jb
inc
xor
sub
lea
mov
imul
sub
mov
dec
inc
inc
inc
or
lea
inc
dec
mov
add
sub
cmp
jb
and
mov
lea
xor
inc
inc
xor
add
dec
pop
sub
lea
test
jbe
mov
dec
sub
inc
inc
or
lea
movsbl
add
inc
add
dec
xor
lea
movzwl
add
dec
inc
add
dec
sub
lea
movzbl
dec
and
sub
add
mov
inc
or
movzbl
lea
movsbl
add
dec
dec
and
dec
sub
mov
and
lea
mov
mov
add
mov
dec
add
mov
inc
add
lea
movswl
add
inc
dec
jne
inc
mov
inc
sub
lea
mov
inc
inc
dec
dec
sub
lea
mov
imul
dec
sub
add
inc
xor
lea
imul
mov
inc
dec
test
jbe
add
inc
or
lea
mov
inc
dec
add
inc
and
lea
mov
dec
inc
inc
inc
inc
sub
lea
imul
dec
inc
and
add
dec
mov
add
lea
movzbl
mov
sub
add
sub
add
and
inc
or
mov
lea
mov
movzbl
inc
add
mov
sub
add
mov
and
lea
movzbl
mov
jmp
add
add
lea
mov
sub
dec
dec
dec
xor
lea
imul
add
dec
sub
add
xor
lea
imul
pop
ret
push
inc
inc
inc
dec
xor
lea
mov
sub
sub
inc
dec
sub
sub
lea
mov
inc
dec
inc
dec
add
lea
mov
add
inc
dec
dec
add
lea
movsbl
dec
push
sub
add
push
dec
xor
push
lea
call
mov
sub
dec
add
inc
mov
add
lea
push
mov
sub
pop
inc
sub
or
dec
and
lea
mov
inc
inc
cmp
je
sub
push
dec
call
and
int
lea
mov
ret
inc
inc
pop
inc
ret
push
inc
push
and
lea
push
mov
push
inc
push
sub
dec
push
inc
and
lea
imul
add
call
sub
push
sub
dec
or
mov
lea
mov
mov
inc
mov
inc
inc
test
je
inc
xor
lea
mov
inc
sub
inc
dec
sub
mov
lea
mov
dec
dec
sub
inc
add
lea
repnz
movsbl
inc
add
inc
jmp
jmp
inc
add
or
lea
mov
dec
inc
inc
add
and
lea
mov
pop
pop
ret
push
add
inc
sub
dec
and
lea
mov
inc
dec
dec
dec
add
lea
imul
dec
inc
sub
sub
or
lea
movzbl
inc
add
inc
sub
and
lea
mov
pop
ret
sub
inc
mov
inc
inc
mov
dec
or
mov
lea
imul
mov
inc
inc
xor
dec
inc
mov
or
lea
inc
movzwl
add
dec
add
add
add
cmp
jb
lea
push
mov
dec
push
dec
dec
push
dec
or
mov
lea
imul
xor
dec
inc
xor
dec
add
xor
or
lea
push
movzwl
sub
xor
inc
dec
mov
add
sub
mov
lea
imul
movzbl
add
sub
inc
add
add
and
lea
add
imul
dec
movzbl
add
inc
add
or
lea
imul
dec
inc
inc
inc
dec
mov
or
jmp
cs
fs
mov
stos
iret
stos
dec
mov
jmp
daa
and
mov
jge
adcl
fs
sbb
mov
push
xchg
data16
push
imul
scas
popf
pop
repnz
xor
lods
mov
and
or
mov
aad
gs
fmull
lahf
test
test
je
jne
mov
inc
and
sti
repnz
fs
pop
xchg
out
dec
loope
jns
adc
in
xor
sbb
pop
movsl
fsubrs
subb
xor
and
mov
es
lret
jne
insb
xchg
cmp
sbb
jae
xchg
sub
inc
mov
ljmp
rcll
mov
mov
test
shrb
addr16
pop
jge
or
mov
es
push
lahf
mov
rorl
fnstcw
cli
xor
das
lcall
pop
je
sub
push
cmp
out
jmp
inc
arpl
mov
cmp
jb
pop
sbb
mov
sbb
push
cltd
mov
and
mov
jns
sbb
clc
inc
je
jge
xchg
mov
ds
test
dec
push
jge
sbb
insb
adc
xor
sysret
mov
stos
push
call
xchg
aad
or
push
mov
sbb
ret
pop
scas
hlt
xchg
fildll
lods
adc
add
xor
pop
mov
add
cmp
pop
bound
push
mov
dec
jns
addr16
mov
xor
mov
rorl
lods
xchg
ret
and
cmp
arpl
fldt
ffree
xchg
sbb
frstor
mov
ljmp
xor
push
in
pop
jecxz
mov
lret
loop
adc
insl
jo
icebp
cmp
sub
test
add
add
loop
jge
pop
push
rcll
lea
cmp
out
add
cmc
lret
xchg
sahf
mov
stos
xor
movsb
aaa
loopne
and
out
lret
sub
rcrl
cmc
cmp
mov
lea
jne
loope
xorl
dec
or
lods
lds
or
xchg
shrl
fwait
outsl
stc
cmpsb
add
pop
jl
outsl
test
repnz
in
rcrl
adc
jle
jp
lock
call
shl
js
scas
jno
jae
pop
mov
imul
jne
inc
insb
scas
in
ljmp
jge
push
xor
cmp
sahf
jp
add
xchg
pop
js
xchg
sahf
sub
dec
or
nop
xor
hlt
dec
or
jge
ja
and
mov
imul
and
pushf
pop
les
push
add
mov
movsl
cltd
or
test
sub
repnz
fists
mov
fs
xor
mov
push
cmp
cld
aam
add
cli
ja
or
dec
add
sub
push
fs
xchg
mov
dec
sub
sbb
mov
stos
inc
sub
push
lret
movsl
xchg
popf
ljmp
inc
js
daa
nop
sahf
gs
push
adc
mov
sub
sbb
pop
mov
mov
xchg
pop
dec
mov
and
mov
ja
outsl
test
xchg
sbbl
mov
dec
push
ja
cld
inc
in
lods
adc
lds
fcompl
out
js
push
pusha
mov
stos
push
xchg
pushf
enter
out
sbb
xchg
adc
scas
xor
inc
imul
inc
ret
shll
movsl
push
mov
cld
sub
mov
sub
icebp
rcrb
xchg
jg
push
into
nop
outsb
fwait
cwtl
adc
in
sbbl
add
xchg
adc
in
lahf
sub
jge
fadd
cwtl
cmp
push
mov
mov
outsb
mov
cld
js
mov
insl
xor
jge
inc
mov
mov
cmp
js
pop
xchg
sbb
loope
cmpsl
mov
pop
movsl
push
loopne
sub
xor
rcrl
mov
out
jle
sbb
push
adc
or
call
jge
add
sub
and
xlat
pop
int
sbb
mov
sub
ret
pusha
out
mov
cmp
push
popf
cmpsb
push
cmpb
imul
or
shll
push
jle
out
fwait
test
pop
add
mov
popf
inc
sbb
mov
leave
lret
stc
mov
leave
sub
pusha
push
ret
popf
push
push
sub
mull
push
adc
cltd
xchg
pop
lock
xor
rcrb
sbb
lods
imul
ljmp
sub
xor
cmpsl
xor
hlt
and
dec
adcl
pop
js
add
mov
call
add
test
or
or
in
imul
xchg
jecxz
jne
fbld
or
jcxz
cmp
mov
js
dec
cmp
xor
ljmp
cmc
cmp
or
lcall
xchg
ret
xchg
mov
fimuls
aam
cltd
cmp
cmc
fs
or
inc
xchg
or
add
arpl
adc
roll
xor
cmpps
mov
cmpsl
dec
inc
idivb
pop
subb
cmpsb
fsubrl
addr16
test
jo
mov
mov
push
cmp
push
pop
scas
push
mov
pop
adc
in
cwtl
mov
mov
cmp
rorl
lods
xchg
aad
sbbb
aas
sbb
mov
dec
cmp
mov
jbe
xor
jae
cmp
mulb
pop
loopne
jns
loope
aad
pop
addl
xchg
mov
mov
pushf
mov
repnz
lret
xchg
adc
lcall
push
scas
inc
sub
jnp
sub
jbe
shlb
push
cld
mov
clc
loope
sbb
pusha
icebp
inc
mov
inc
rorl
fcmove
sahf
xor
das
outsb
loop
mov
mov
xor
fisttpl
mov
mov
iret
pop
fs
inc
adc
push
dec
into
pop
dec
pop
imul
lret
adc
jae
adc
jle
iret
inc
imul
xchg
fildl
sti
sarl
call
data16
roll
mov
insb
dec
pop
mov
cmp
ror
mov
dec
es
xchg
ret
mov
xor
add
jo
repz
into
and
test
jge
push
movsl
jmp
mov
mov
ja
sbb
mov
faddl
add
dec
pushf
jo
fsubrs
fwait
out
arpl
xor
aam
popf
mov
sbbb
cmp
shll
jmp
push
repz
mov
lock
add
and
sub
pop
push
lock
inc
cmc
mov
out
arpl
and
out
jno
mov
out
inc
out
pop
cmp
jmp
lret
xor
sub
adc
movsb
shl
shll
sarl
pop
insb
outsb
dec
wbinvd
pushf
mov
lods
mov
push
jmp
adc
or
inc
xchg
fcoml
outsl
popf
pop
popa
lock
clc
cmpsl
sub
mov
imul
mov
jne
xchg
xlat
and
pop
mov
adc
fstpt
pop
cltd
cld
pop
push
xchg
push
push
jbe
cs
test
js
out
and
mov
faddl
jecxz
imulb
les
cltd
popf
imul
leave
cltd
pusha
into
pop
sar
nop
pusha
dec
lock
ret
popf
divl
add
push
aas
leave
xor
subb
ret
shll
test
ja
and
cmp
cmpsb
mov
cli
push
xchg
fwait
mov
les
inc
adc
mov
in
mov
mov
jmp
pop
sbb
hlt
mov
or
and
push
lahf
pushf
lods
dec
adc
push
aam
push
adc
or
mov
mov
cmp
mov
out
jecxz
popa
mov
and
adcl
stos
ljmp
inc
lahf
rcrb
sbb
out
daa
push
leave
sub
adc
and
insl
aaa
in
pop
jle
jecxz
sbb
repnz
aam
pop
orl
push
sbb
popa
inc
mov
dec
stos
es
adcl
ja
jns
fcmovne
lods
xchg
mov
enter
loop
stos
dec
xchg
std
outsl
inc
mov
loopne
xchg
jae
fdivrl
adc
imul
mov
fwait
xchg
js
pushf
xchg
dec
inc
lcall
jg
adc
mov
lock
mov
in
cmpsb
scas
cltd
and
or
aam
inc
addr16
push
aas
dec
repz
movl
popa
mov
pop
lods
ljmp
mov
bound
and
test
mov
jmp
repnz
mov
ret
fs
pop
sbb
jmp
push
and
or
test
cmp
arpl
xor
bound
loope
and
inc
sbb
shlb
adc
push
cmp
mov
cmp
sbb
popf
sub
jne
pop
ret
in
mov
inc
ret
push
ja
xor
dec
dec
or
xor
sub
xchg
sbb
imul
imul
out
sbb
lea
cli
test
or
mov
ss
xor
imul
jno
adc
mov
inc
int
pushf
jne
in
sub
sbb
cli
mov
lcall
cli
pop
jne
mov
adc
jge
loope
inc
push
inc
pusha
xor
push
leave
pop
jbe
add
dec
inc
repnz
in
mov
adcb
mov
inc
cmpsl
and
int3
cmpsl
mov
imulb
push
adc
gs
and
inc
shll
dec
stos
std
hlt
test
das
sarb
pop
int3
pop
test
out
xchg
xor
jbe
insl
hlt
xor
lock
shlb
nop
jns
inc
pop
sbb
leave
and
dec
jl
shr
leave
lcall
fisttpl
in
movsb
and
pop
iret
inc
add
aaa
pop
add
pop
and
cli
stos
add
ror
xor
pushf
dec
dec
jmp
out
test
pop
int
dec
pop
ret
xor
or
sbb
xlat
mov
stc
and
adc
popf
addr16
lods
mulb
aaa
mov
adc
popf
adc
loopne
add
pop
stc
jmp
push
inc
push
jne
sbb
inc
loope
scas
sub
jge
adc
and
nop
xlat
cmp
jge
push
push
sti
out
outsl
dec
dec
mov
lahf
call
ret
or
sub
or
lret
or
int3
push
mov
daa
ficoms
lds
mov
loopne
xchg
inc
xor
scas
rcrl
push
ljmp
and
out
mov
mov
add
stc
mov
sbb
xor
add
jne
repz
jns
or
movsl
inc
cmp
sbbb
jp
xor
fidivs
mov
jb
cmp
outsl
xchg
jns
sub
xchg
repnz
cmpb
dec
mov
pop
cmp
pop
push
sbb
lock
mov
dec
clc
push
adcl
lea
lcall
push
mov
lds
pop
inc
stc
xchg
dec
and
ljmp
adc
xchg
fcomps
xor
add
cmpsl
cmp
xchg
cmpsl
pop
rclb
andb
xor
inc
popf
fstpl
ds
cmc
negb
out
imul
jl
lahf
and
popl
into
mov
dec
xor
cld
aad
xchg
orb
lret
call
dec
xor
lock
addr16
into
pop
repz
and
cld
testb
lret
cwtl
int
mov
mov
out
aaa
lock
push
je
insb
mov
jle
mov
cmp
or
push
and
popf
hlt
out
jmp
mov
sarl
fwait
push
inc
sbb
movsl
dec
jae
inc
out
dec
mov
cmc
or
mov
imul
fsubrs
sti
out
mov
pop
mov
xchg
mov
sub
aad
mov
stos
int3
insl
adc
mov
in
ss
cltd
jne
ja
adc
test
sub
int3
test
popf
or
or
jg
cmp
daa
negb
xchg
cwtl
push
cmp
sbb
dec
fdivrs
ds
sub
sbbb
dec
ret
sub
dec
cmp
lret
xor
das
jle
push
xor
or
cs
mov
mov
sbb
jecxz
mov
adc
cmc
jl
xchg
or
jo
fstpt
sub
loope
bound
sbb
outsb
jecxz
fisubrl
pop
call
xlat
mov
or
pop
mov
push
inc
fcompl
cmp
arpl
mov
imul
mov
xchg
xchg
fisubrs
xor
xchg
xor
xchg
cmova
aad
jne
ja
xor
inc
or
insb
fwait
push
sti
mov
loopne
aas
in
dec
xchg
pop
cmc
mov
lds
push
iret
mov
shrb
sub
in
mov
arpl
loope
ss
mov
and
rdpmc
mov
pop
xchg
ss
xlat
and
xchg
fwait
sbb
dec
add
sbb
dec
jno
xor
fisubrs
outsl
cmp
dec
push
and
jle
xchg
jp
fsubl
std
and
outsb
push
inc
dec
insl
flds
sti
out
or
mov
add
aaa
sbb
and
test
xchg
out
mov
inc
iret
lea
xor
or
sbb
adc
cmp
cmp
loope
pop
fidivl
sub
imul
cmp
add
ja
or
jge
stos
jae
das
arpl
xchg
xor
mov
inc
ret
push
lea
lcall
jmp
mov
pop
adc
cmp
sub
shlb
or
aas
xchg
jo
mov
xchg
ljmp
pop
xor
add
ljmp
ds
inc
jl
sbb
jmp
rolb
test
fnsave
jne
cltd
into
mov
xchg
nop
sbb
jl
test
jg
stos
aaa
mov
mov
lock
jno
mov
cltd
stc
dec
arpl
pop
mov
mov
dec
jbe
pop
ja
stos
pop
shlb
inc
push
pushf
cs
mov
addr16
ljmp
mov
dec
lcall
cmpsb
jmp
daa
sub
sub
mul
jl
pop
add
outsb
add
inc
shlb
fcompl
repnz
mov
sub
fcos
dec
bound
mov
dec
jns
sbb
pop
lcall
sub
adc
divb
inc
sbb
pop
jmp
aam
jle
or
bnd
and
fdivs
mov
clc
flds
xor
mov
call
mov
push
enter
pop
jno
sub
mov
popa
push
push
fwait
mov
and
push
int3
jbe
fldenv
inc
push
shrb
sarl
test
pop
inc
sbb
sub
mov
ljmp
bnd
jno
lods
leave
mov
ret
fldcw
leave
adc
mov
push
dec
adc
xchg
pop
test
vpcmpeqw
dec
xchg
scas
and
repz
add
mov
xor
mov
out
lds
pushf
push
mov
cwtl
push
mov
mov
in
in
lds
mov
xor
jne
mov
cmp
repnz
mov
sbbl
int
mov
sub
fistpl
sti
nop/reserved
dec
push
repnz
repz
mov
fwait
dec
fadd
fisttpll
push
cmp
adc
sub
scas
sub
mov
and
add
push
jge
ja
pop
and
mov
fmul
ret
inc
sub
fildll
inc
mov
je
and
jbe
cmp
jecxz
and
icebp
or
add
sarb
xchg
xchg
int3
add
outsl
sbb
xor
stos
rcll
sub
lock
xor
push
sbb
decl
mov
lea
push
imul
loopne
fwait
push
fcomps
or
stc
dec
sbb
fstps
pop
pop
dec
and
cld
sbb
lahf
negl
jb
arpl
adc
push
insl
imul
pop
lods
inc
adc
mov
fsubrs
pop
or
xchg
repnz
and
or
dec
lcall
aas
jo
in
pop
and
jno
sbb
nop
ror
shlb
add
in
xchg
scas
or
aas
testl
cmp
pop
add
jae
sub
lods
push
sbb
and
xor
inc
iret
dec
jo
xor
popf
rcrb
shll
inc
rcll
ljmp
mov
mov
dec
cmp
cmpsb
mov
sbb
push
mov
out
or
pop
sbb
sub
add
in
or
mov
inc
movsl
mov
div
xlat
pop
pop
xchg
cmp
pop
dec
in
jne
mov
les
xchg
mov
test
cmc
aaa
jmp
clc
dec
repnz
ret
adc
in
lock
dec
inc
xchg
xchg
ret
xor
xchg
mov
mov
loope
mov
jle
out
popa
cmp
fwait
or
or
jnp
push
loope
out
daa
negl
push
fwait
push
pop
push
or
popa
arpl
mov
and
lods
mov
adc
or
pop
fisubrl
and
mov
scas
fimull
jp
jne
mov
jp
aam
push
add
in
add
arpl
addr16
movsl
and
dec
out
jecxz
adc
and
out
mov
enter
push
ret
inc
rcrl
int
cmp
push
adc
jae
xor
movsl
repz
movsl
cld
mov
cmc
imul
pusha
imul
fisubrs
sbb
push
push
push
fwait
adc
pop
hlt
filds
xor
pop
xchg
ret
mov
mov
sbb
xchg
inc
pop
cmpsb
mov
inc
push
and
inc
xor
cmpsb
add
mov
repz
dec
or
add
lret
inc
shlb
leave
lret
mov
jae
or
push
cwtl
ret
rorw
mov
mov
xor
loopne
roll
mov
fldt
add
lods
ja
sub
stos
mov
pop
fmull
insb
movsb
dec
pop
push
pop
and
jno
imull
popf
lcall
inc
inc
andb
clc
cli
xchg
fcoms
xchg
mov
dec
dec
mov
cmp
lods
dec
dec
dec
cmpsl
addl
cmp
push
mov
sarb
in
jmp
push
lret
pop
scas
inc
mov
out
dec
mov
sbb
xor
ret
jae
pop
xchg
and
clc
mov
sbbb
jns
loope
cli
popa
fs
rcll
jmp
jecxz
pop
shlb
daa
das
cmpsl
sub
mov
mov
ljmp
sbb
jge
or
inc
sti
out
cli
dec
in
in
push
or
cmc
add
push
dec
dec
pop
push
mov
lea
xor
mov
cmp
push
test
aas
push
and
fsubp
cmp
sbbb
or
inc
fisubl
js
movsl
ret
pop
jns
ds
les
lret
cwtl
cmpsb
jns
inc
jnp
push
lods
or
das
subl
hlt
sbb
ljmp
insl
inc
xchg
and
xor
jl
pusha
mov
add
in
dec
adc
sbb
mov
sbb
jbe
loopne
jmp
ficompl
imul
xor
sbb
push
add
mov
cmovne
sub
push
push
jmp
cmp
sbb
xchg
sbb
add
add
stos
test
fstps
and
les
xchg
int3
int
scas
imul
mov
and
mov
and
sbb
jge
mov
pop
mov
and
push
adc
adc
outsl
inc
jae
add
outsb
push
dec
int
add
hlt
lret
loop
cmc
cmp
and
fisubs
adc
jo
cmp
fsubl
mov
sbb
mov
enter
aam
add
and
sti
mov
fcmovb
cmpsl
or
mov
hlt
sbb
mov
lahf
movsl
inc
mov
ja
xlat
out
adc
fcmovnbe
cmc
fldenv
lds
lods
push
lds
das
mov
cmp
sub
in
cmp
mov
mov
rclb
cmp
adcl
mov
fsubl
pop
xor
inc
lock
cmp
mov
mov
jg
jns
xor
add
ljmp
mov
lret
push
mov
out
sub
sbb
inc
iret
ds
push
push
out
dec
cmp
data16
test
and
popa
cmp
mulb
sub
push
cmpsl
adc
adc
jmp
dec
outsb
cmp
sbb
shlb
int3
sahf
mov
lods
cwtl
jp
lds
mov
mov
sub
clc
ljmp
pop
mov
pop
xlat
lret
mov
pop
jmp
mov
inc
adc
inc
adc
mov
jns
stos
sbb
pop
ljmp
mov
cwtl
pop
rclb
jl
push
and
xlat
mov
int3
or
test
mov
mov
mov
pop
pushf
or
loope
and
stos
aaa
mov
pop
dec
lcall
pushaw
push
addl
ret
fwait
mov
jnp
insl
scas
ret
pop
leave
aaa
scas
cld
adc
inc
push
mov
jge
daa
or
cmp
sub
push
andl
out
fxch
pop
and
mov
sarb
shlb
push
push
call
pop
outsb
xor
inc
jo
mov
add
xchg
jns
out
mov
dec
ret
mov
lret
daa
icebp
push
pusha
push
pop
stc
insb
ljmp
cwtl
scas
repz
mov
push
or
add
fbstp
jb
sub
push
jle
ret
vpaddusw
mov
insb
popf
inc
test
iret
in
adc
or
imul
movsl
adc
in
jge
and
push
shrb
jl
pop
loop
popf
outsb
sub
movsl
hlt
pop
fbld
push
insl
das
xorb
add
mov
jge
cmp
ret
pop
inc
jae,pn
insb
xchg
mov
jno
arpl
sbb
in
xor
mov
inc
loope
mov
cwtl
int
repnz
rcll
xchg
inc
aam
pop
bound
lds
mov
loope
xlat
cmpsl
mov
mov
push
sar
mov
pop
inc
out
repz
adc
fisttpll
out
dec
pop
jno
adc
inc
ficoms
and
ds
mov
ret
jne
ret
cli
dec
scas
mov
push
imul
pop
ficoml
fidivrs
push
or
int
adc
stos
pop
popa
mov
mov
dec
adcb
stos
gs
loopne
jae
in
insb
add
shll
xor
mov
data16
je
aaa
rorb
add
sub
mov
mov
jo
daa
mov
mov
nop
adc
mov
inc
loope
testb
xchg
jecxz
insb
ret
push
stos
leave
repnz
push
jle
mov
inc
pop
insl
imull
pop
cld
sarl
loope
cmp
call
loope
ret
push
pop
pop
cmp
sub
add
fsub
mov
or
imul
adc
lods
shlb
std
push
repz
jne
lret
scas
loope
mov
stos
push
sarb
jmp
pop
orb
add
mov
hlt
je
js
fildl
inc
or
sti
mov
repz
add
lcall
cwtl
scas
mov
and
out
rcrl
ja
aam
fsubr
enter
mov
add
fmul
pushf
jecxz
push
fbld
add
xor
push
dec
inc
and
lds
inc
mov
in
lds
ljmp
movsb
int
cld
out
mov
les
insl
jbe
mov
cltd
xchg
add
sbb
shll
mov
movsb
int3
dec
mov
dec
ss
stc
mov
arpl
scas
pop
xlat
cmc
jp
pop
pushl
xor
ret
xchg
in
fdivl
fisttpll
je
loopne
int3
fdivrs
xor
lds
notb
jmp
repnz
xor
pop
inc
push
out
out
adc
adc
xor
and
sbb
enter
lods
dec
movsl
inc
sbb
cltd
or
inc
orb
inc
movsb
cmpsl
jmp
sbb
adc
sbb
pop
mov
jl
iret
adc
inc
mov
bound
in
inc
roll
dec
stos
sub
xchg
arpl
in
dec
movq
addr16
xor
imul
mov
jno
and
cmp
into
mov
adc
fidivs
push
xor
push
in
sbb
dec
mov
test
fdivrl
and
cmp
dec
divl
pushf
dec
inc
fistps
xor
mov
js
scas
aas
out
pop
js
int
pop
push
lcall
sub
lock
sbb
mov
pop
add
pop
xchg
and
clc
ja
cmpsl
push
aad
dec
jbe
dec
mov
in
add
arpl
cli
jl
andb
cmpsl
rcrl
cmp
sub
dec
pop
scas
movsl
mov
push
lahf
cmp
cltd
mov
mov
adc
pop
stos
push
fcmove
cmp
cmp
mov
jnp
jg
mov
out
lock
test
push
je
sub
xchg
mov
lds
mov
sbb
mov
mov
and
in
das
xchg
fs
addr16
sbb
jae
lods
repnz
xor
sub
cmp
std
sub
imull
xor
sbbl
stos
les
fwait
les
mov
mov
cmpsb
nop
xor
fldt
movsl
sub
test
push
sub
push
loope
rclb
cwtl
xchg
pop
xchg
jno
mov
mov
int3
mov
add
out
dec
fsubrs
adc
jmp
adc
adc
test
addr16
cld
jl
mov
movsl
jecxz
inc
cltd
loop
and
sbb
mov
or
xor
js
repz
mov
add
ret
cmp
xchg
push
pop
dec
sub
inc
movsl
ret
mov
jbe
lock
out
fiadds
and
rcll
sub
cmp
cmc
jae
mov
xor
xor
add
add
xchg
and
cli
aaa
aad
cmpb
cld
popf
mov
adc
fcmovb
jle
icebp
lock
pushf
adcl
sub
and
test
add
adc
pop
or
scas
cmp
dec
xchg
sbb
mov
xor
xor
push
addb
aad
jne
jno
aaa
out
and
push
dec
les
lock
jp
xor
loopne
sub
data16
push
das
ss
or
mov
ret
js
mov
push
xchg
cmp
jg
fs
daa
js
cli
pop
mov
xchg
sbb
aaa
aas
iret
dec
push
mov
adc
xchg
inc
and
inc
or
pop
cmp
or
inc
xchg
xorb
push
push
mov
and
inc
mov
rorb
in
add
out
dec
int3
imul
add
push
fcmovu
cltd
mov
data16
push
fcomip
repz
addl
mov
jle
adc
lcall
dec
sti
mov
adc
jo
lret
cmp
cmp
xor
and
leave
cs
lea
paddsw
mov
aas
loopne
push
test
lret
lcall
lea
pop
dec
std
scas
enter
mov
pop
dec
cmpsb
cltd
sbb
jecxz
mov
icebp
push
fsubrs
imul
or
dec
jne
fdivrl
or
mov
mov
outsb
jl
bound
add
jg
stos
repz
jbe
push
adc
mov
and
cmpsl
xchg
stc
push
jle
sbb
and
push
mov
and
fst
and
nop
outsb
sbb
test
rcrl
cmp
rorl
addl
mov
xor
push
icebp
xor
data16
dec
xchg
mov
sti
test
cmovp
adc
mov
add
xor
mov
pop
sbbb
xchg
dec
sub
fidivrl
xlat
movsb
adc
out
cs
mov
add
xchg
iret
sbb
mov
sub
aam
inc
dec
mov
stc
jl
mov
xor
lock
test
sub
or
pusha
adc
push
scas
sub
add
add
inc
xchg
int
add
loop
adc
data16
scas
jbe
xlat
push
inc
sbb
jge
shlb
fdivr
iret
imul
hlt
cli
mov
aam
inc
imulb
dec
adc
mov
ds
xlat
mov
std
xchg
fs
inc
decb
icebp
fcompl
xchg
jns
pop
mov
or
jo
in
cmp
mov
nop
cwtl
mov
aam
cmpb
fisubs
xor
testl
dec
in
mov
cmpsl
lcall
mov
inc
cmp
stos
mov
and
stos
mov
sbb
fidivrs
mov
cmpsl
out
pop
sub
sub
mov
cmc
xor
jp
clc
mov
bndstx
xor
push
mov
add
outsb
push
mov
adc
fwait
xor
inc
cmp
fsubrp
ret
insl
fdivs
push
pop
jne
test
dec
push
hlt
jg
mov
rorb
rolb
sub
cs
adc
and
or
pop
mov
xchg
int3
negl
je
gs
sti
mov
xor
mov
add
scas
pop
loopne
lds
gs
xchg
xchg
rorb
out
pop
repz
push
cli
imul
xchg
sbb
cmovae
and
cmpsl
add
xchg
push
scas
push
ret
cltd
mov
cli
cmp
fstps
mov
ret
cs
xor
pop
jg
push
dec
les
faddl
sub
xor
mov
dec
sub
and
mov
in
cwtl
mov
pop
idivl
ret
imul
jae
scas
cmc
lods
inc
sbb
stc
pop
movsb
ret
push
sub
fstps
and
enter
out
cli
jo
aad
jmp
idivl
jecxz
xchg
pop
adc
loope
or
loop
iret
sarb
stos
jb
fmull
dec
inc
and
cmp
in
in
leave
sub
jno
das
jge
icebp
jae
shlb
lods
xchg
mov
sbb
cmp
dec
sub
out
shl
mov
les
jl
mov
cs
lcall
jmp
or
jae
xor
pop
inc
repz
ds
movsl
pop
shrb
andps
movsb
inc
inc
add
leave
inc
out
push
push
out
xchg
sub
push
cli
mov
dec
sbb
aad
fcomps
cmp
aad
scas
cmp
jg
into
rcl
int3
push
inc
add
arpl
call
sub
mov
adc
aad
sahf
shrl
add
adc
call
mov
cmp
dec
ljmp
xor
pop
mov
jg
mov
insl
mov
adc
xchg
or
test
xchg
js
cmpsb
sub
push
cmp
push
add
add
push
dec
cmp
flds
jmp
sub
add
cld
sbb
bound
add
mov
ja
aad
hlt
out
inc
lret
add
int3
stos
add
dec
lds
popa
mov
andb
mov
and
aam
lahf
cs
cli
movsl
xor
out
fstp
dec
cmpsl
cmp
mov
sub
lock
add
jecxz
mov
out
dec
push
inc
test
sub
sahf
cmp
xor
jge
add
stc
in
mov
outsb
out
jnp
dec
mov
inc
xchg
add
mov
out
subl
sub
data16
out
push
jno
mov
iret
in
pop
mov
jbe
movsl
rclb
sub
cmpsb
dec
iret
push
lret
call
rclb
jmp
ss
mov
adc
adc
pop
stos
lret
xchg
lcall
inc
sbb
and
push
out
jns
jno
mov
fisubs
movsb
lods
lahf
push
mov
sti
ret
in
dec
arpl
mov
insl
mov
mov
out
in
out
jmp
push
dec
sbb
cltd
popa
sub
pop
xor
mov
int
mov
xor
mov
daa
sub
fmull
into
int
xor
lds
insl
dec
or
jne
nop
and
hlt
ds
imulb
in
mov
ret
push
in
pop
loop
cmpsl
xchg
mov
xor
andl
mov
cs
xor
xchg
xor
push
clc
icebp
test
dec
popf
add
in
adc
push
jnp
cmp
fists
subl
inc
bnd
aam
or
and
adc
pop
les
loope
jbe
call
movl
pop
cmc
loopne
pop
out
loop
push
and
ja
push
rcrl
inc
xor
and
xor
insl
lods
rcll
ret
movzwl
bound
jle
dec
adc
and
sub
jnp
inc
xor
sub
and
adc
jo
dec
jbe
in
mov
lock
test
shl
loope
dec
inc
jle
and
lods
mov
lret
fldenvs
inc
mov
adc
outsb
lea
mov
cs
xchg
mov
leave
mov
mov
mov
cmp
mov
mov
pop
mov
push
rol
dec
scas
and
sub
inc
hlt
mov
add
mov
adcb
leave
mov
or
cmpsl
or
sbb
push
mov
xchg
into
jne
jg
cmp
xchg
add
lea
shll
cmc
int3
outsl
stc
lcall
outsb
sbb
inc
push
lret
fmuls
fisttps
adc
decb
das
ss
data16
jmp
mov
push
aad
cltd
mov
arpl
adc
sub
mov
inc
mov
sarb
leave
sti
daa
push
jge
aas
ret
xchg
xchg
or
pop
clc
jle
push
dec
push
or
jnp
dec
inc
mov
hlt
push
addr16
or
shlb
psrld
dec
sub
stos
sub
test
dec
or
js
jb
in
lock
xchg
leave
cwtl
ja
adc
scas
enter
and
shrl
mov
cmp
cmp
cld
xchg
adc
out
cmp
rorl
mov
outsb
adc
sbb
push
fs
inc
xchg
mov
imul
in
mov
and
shll
xchg
scas
dec
fucom
sarb
jl
dec
repnz
fld
jmp
jl
cmp
inc
pop
cld
leave
shll
aas
sbb
fmulp
push
sarl
push
xchg
pop
test
and
divl
pop
xchg
cmp
sbb
xchg
mov
popf
js
push
inc
and
ds
shll
lods
loope
repz
jecxz
lret
dec
cltd
aaa
add
gs
mov
flds
xchg
faddl
inc
add
mov
sbb
and
sub
xchg
outsb
jns
add
and
mov
jo
xchg
loopne
stos
mov
lods
insl
adc
mov
out
mov
test
arpl
jl
outsl
pop
into
and
xor
lods
jecxz
and
into
lret
bound
sbb
dec
ljmp
mov
mov
mov
in
jg,pn
dec
gs
sahf
cmp
ds
shrb
sub
mov
in
add
mov
mov
ret
adc
or
push
push
jns
lods
push
jle
sub
jg
dec
dec
aas
addr16
bound
loope
imul
inc
and
insl
mov
inc
push
xchg
mov
out
xlat
aam
xor
sbb
lock
jne
or
pushf
push
sbb
dec
mov
fwait
xchg
xor
imul
rcl
stc
or
popf
sub
push
jle
lahf
ljmp
pop
dec
add
fsubr
aas
mov
add
pop
or
jnp
sahf
push
xchg
push
popa
mov
jl
and
cmp
cmovbe
sbb
inc
mov
jne
enter
jo
push
lcall
sub
xchg
cmp
aam
loop
cmpsb
cld
cmp
push
or
imul
neg
dec
clc
inc
lcall
fcompl
stos
repnz
mov
pop
je
data16
imul
icebp
jb
mov
cmp
xchg
push
lods
inc
les
inc
push
jbe
dec
cmp
jb
adc
stos
mov
and
das
adc
cmpsl
fwait
cwtl
dec
lea
ficoms
jmp
das
mov
enter
cmp
mov
imul
hlt
not
out
movsl
sbb
or
pop
aas
popf
int3
sbb
jge
mov
and
sbb
pop
test
psllw
mov
test
in
cmp
sbb
clc
inc
cmp
daa
push
xlat
mov
add
xchg
mov
pop
nop
imul
xor
hlt
sbb
sub
lret
fnsave
cs
mov
out
jnp
mov
pop
fistpl
cmp
xchg
aad
mov
stos
in
and
filds
add
mov
sbb
sarl
shlb
push
jg
js
subb
sbb
cmc
mov
data16
and
push
push
shr
data16
mov
and
mov
std
sti
addb
imul
push
fcoms
xor
dec
and
sbb
lods
mov
in
je
push
mov
ja
leave
jp
mov
outsl
lcall
int
andnps
sarl
jg
cmp
mov
cmpps
xchg
scas
add
jb
adc
insl
rolb
push
adc
lds
add
fsubl
pop
push
xor
push
sbb
mov
shll
das
ljmp
sbb
xchg
xchg
das
xchg
aas
mov
ljmp
in
mov
sbb
pop
lea
fadd
test
push
xor
rcll
pop
sub
mov
in
fsts
adc
dec
fiaddl
nop
jl
fstpl
shlb
sub
scas
imul
sti
insb
mov
lods
orb
test
sbb
data16
setne
mov
mov
ljmp
fdivr
nop
fdivr
push
add
outsb
fnstenv
dec
mov
xchg
jle
jge
pop
lret
mov
fdiv
pop
xchg
sahf
notb
outsb
xor
inc
les
pop
sbb
mov
cwtl
add
sbb
out
jp
js
push
xchg
jge
cmp
insl
jp
ret
fsubrp
sub
loopne
jne
sub
je
ret
push
add
mov
pop
shlb
cld
sarb
loopne
iret
fists
xor
mov
mov
popl
das
fs
adcb
aam
sub
in
xchg
in
ds
hlt
or
or
xor
push
into
mov
pop
mov
push
lcall
fisttpll
call
loop
lahf
loopne
push
fsub
xchg
or
popf
mov
pop
mov
push
mov
jb
lea
dec
outsl
testb
inc
mov
fcoml
dec
std
popa
mov
fwait
and
xlat
test
rclb
test
sub
mov
mov
dec
ja
pop
iret
adc
aaa
std
and
mov
dec
shl
sbb
xor
cwtl
test
push
dec
cmp
xchg
pop
mov
mov
std
jnp
in
inc
cmpsl
or
test
add
cmc
sub
insl
jecxz
lods
fbld
roll
into
rolb
and
dec
rcr
mov
jne
pop
test
jne
pop
inc
xor
outsb
pop
negl
fwait
add
maskmovq
sarl
sbb
mov
push
xor
push
js
enter
fimull
pop
popfw
popf
call
jo
ja
roll
mov
jo
or
lret
sub
adc
push
push
pop
icebp
cmp
mov
cmp
jnp
jns
adc
mov
push
mov
mov
cmp
jmp
sbb
imul
cmpsl
pop
out
mov
mov
xchg
jmp
pop
adc
jo
mov
or
xchg
arpl
add
subl
dec
adc
aaa
mov
pop
jno
jp
push
iret
sbb
jmp
jle
add
push
shlb
sub
mov
fisubrs
in
xchg
aas
inc
cs
push
loope
inc
xchg
mov
adc
ret
testb
inc
outsb
popw
nop
insl
xor
std
fbstp
and
adc
repz
movl
stos
adc
mov
in
gs
stos
mov
inc
test
cltd
test
enter
data16
xchg
lods
gs
or
mov
or
std
lahf
in
push
mov
repz
inc
repnz
movsl
adc
and
mov
xchg
dec
and
clc
pop
stos
popa
and
hlt
sub
sbb
xlat
push
js
push
push
call
or
movsb
outsb
lea
cmp
out
sbb
stc
aad
jns
sbb
daa
lea
xor
pop
lret
mov
std
cmp
or
in
pop
or
inc
clc
test
push
mov
lds
aaa
mov
cmpsl
lods
adc
xor
pop
fnstcw
and
xor
mov
mov
insl
adc
pop
scas
sub
push
iret
adc
inc
jge
fisttpl
xchg
jae
adc
jne
test
iret
dec
lea
pop
int3
hlt
movsb
es
sahf
adc
mov
clc
scas
hlt
add
lock
mov
iret
inc
jbe
lea
sbb
lds
lcall
insl
or
icebp
les
fsubl
lock
mov
out
pop
jecxz
stos
inc
sbb
repnz
je
dec
adc
inc
scas
in
or
cmp
pop
jno
pop
mov
and
orb
in
or
aam
test
cli
pop
ljmp
jl
pop
add
into
and
cwtl
loope
fs
xchg
bound
mov
jbe
inc
imul
lds
aam
jo
and
mov
mov
cmpsl
sbb
inc
and
xor
in
insb
fcoml
cmp
jnp
or
jns
pop
pop
or
in
clc
cmpsb
lods
movsl
xor
xor
test
xorl
test
or
xor
mov
es
adcb
mov
lcall
push
xchg
cmp
setbe
lcall
addr16
cmc
dec
jno
daa
test
dec
ret
imul
lcall
push
add
pop
mov
or
jmp
rcl
insb
sahf
into
mov
cs
inc
sbb
pusha
lods
jmp
xor
inc
adc
pop
imull
enter
enter
in
cltd
ja
icebp
pop
inc
lock
jg
mov
je
mov
adc
mov
adc
or
or
inc
out
push
orb
dec
jp
fldenv
cmp
jbe
faddl
xor
shll
inc
push
inc
and
sbb
sahf
sahf
orb
in
xor
pop
stos
cmp
add
pop
in
nop
iret
dec
divl
xchg
ret
jno
ljmp
loope
lcall
sbb
sbb
jp
in
inc
movsb
xchg
adc
in
add
jl
mov
pop
scas
pop
mov
je
mov
and
add
stc
mov
fs
hlt
sub
inc
out
pop
or
in
push
inc
lahf
xor
and
outsb
lcall
and
call
pop
jl
add
fistl
mov
mov
inc
fnstenv
fisubrs
in
mov
loope
mov
xor
add
and
fidivrl
cmpsb
in
push
xchg
xchg
jecxz
mov
out
test
dec
insl
lods
add
mov
aas
out
and
xor
shlb
mov
daa
or
lea
cmp
pop
mov
adc
mov
or
scas
shlb
dec
lock
mov
outsl
xor
jnp
push
and
xchg
or
bound
ficoms
push
pushf
int3
inc
push
loope
mov
add
fisubs
iret
mov
fsincos
pop
mov
pop
push
stos
dec
repz
imul
or
push
lcall
repz
es
cmp
out
xchg
pop
xchg
mov
adc
or
cmp
xor
cmp
sub
aam
ret
cmp
gs
mov
mov
cmpsb
xor
push
push
mov
lods
mov
jo
lret
push
repz
outsl
mov
xor
cld
das
push
sbb
daa
in
push
popl
int
push
jb
xlat
push
pop
push
sbb
cmpsb
sbb
xchg
xchg
sub
pop
pop
pop
lcall
bound
jecxz
sahf
xchg
ds
sbb
andb
mov
repnz
inc
adc
jp
imul
int3
push
lock
enter
sbb
outsl
push
cmp
or
filds
sub
loopne
xchg
mov
jmp
out
scas
pop
push
or
sti
lods
add
loopne
cmp
lea
jbe
dec
rcrl
loope
add
and
jo
or
mov
test
scas
clc
sbb
mov
pop
sbb
call
fmuls
out
xchg
ret
jns
pop
das
enter
mov
xchg
push
sbb
mov
mov
lock
cld
pop
xor
out
imul
aaa
lcall
cld
xchg
and
jle
mov
and
xor
mov
icebp
call
sub
xor
fisubl
je
dec
push
dec
leave
add
js
je
lret
jmp
sub
and
lahf
and
icebp
ficompl
xchg
int
mov
es
in
adc
jg
xor
xor
das
jo
and
in
xchg
insl
loope
fadds
mov
into
imul
jo
mov
in
or
imul
lahf
jnp
push
xor
lods
cmc
mov
insb
pop
jmp
mov
or
xchg
push
ret
mov
inc
insl
cmpsb
inc
xchg
push
cmp
in
daa
and
xor
jge
int3
sbb
ljmp
imulb
movsw
lock
xor
jb
and
call
sbb
fdivrs
add
andb
mov
push
mov
int3
stos
and
lret
idiv
xchg
xor
imul
or
enter
mov
dec
inc
or
xlat
xchg
loope
push
mov
cmpsl
mov
int3
insl
jmp
repz
pop
ss
ja
lcall
pop
mov
and
fimuls
xor
jp
outsb
jl
jg
shll
jge
into
add
inc
nopl
or
push
ret
or
pop
mov
cmpsb
ljmp
add
mov
imul
jge
fwait
push
sahf
xor
negb
cmp
insb
dec
inc
movsb
mov
imul
or
xchg
sbb
cmc
push
call
mulps
lds
popf
push
xlat
addl
jle
mov
inc
call
jmp
mov
xor
push
push
pop
aas
add
aam
mov
rcrl
xor
roll
push
lods
add
sbb
ret
in
inc
fwait
and
rcr
mov
dec
in
jg
fisubl
adc
test
cmpsb
out
fistl
jp
fsubs
or
sub
cmp
fbstp
mov
add
xor
sbb
int
pop
int3
out
push
xchg
push
aad
fwait
mov
adc
push
sub
mov
fisttps
xchg
and
fistps
inc
out
out
ret
int
pop
call
jmp
pop
test
lret
dec
test
pop
shrl
daa
cmp
push
pop
popa
push
pop
push
cmp
inc
js
sub
insl
cmp
push
push
push
mov
sbb
pop
sub
out
mov
out
dec
fwait
or
mov
xor
lahf
and
fimull
or
xchg
mov
mov
ljmp
jbe
scas
in
jmp
je
scas
fwait
enter
sub
add
sbb
aad
aam
add
out
mov
xlat
xor
inc
xor
xor
jecxz
imul
push
jecxz
pop
adc
data16
xorl
inc
push
lods
test
pop
loop
loop
mov
lahf
cmc
jle
inc
dec
xchg
sub
hlt
repz
mov
scas
push
cltd
ss
inc
ss
mov
sub
lea
out
in
mov
filds
daa
sub
inc
push
sbb
pop
leave
mov
push
lahf
jecxz
jbe
mov
mov
mov
ret
sbb
adc
ret
out
je
xchg
jmp
dec
pusha
adc
sub
out
bound
jge
ja
das
sub
mov
mov
jecxz
dec
push
into
inc
push
mov
push
pop
xchg
cmp
out
fbstp
hlt
sbb
xchg
or
idivl
pop
rcll
pusha
call
loopne
out
mov
subb
inc
fcom
sub
dec
dec
inc
jp
xchg
ret
stos
outsb
mov
loopne
rorl
scas
pop
dec
xchg
or
pop
adc
iret
inc
fmull
jl
mov
and
outsl
sub
gs
subb
test
pop
es
push
dec
fildl
addr16
ja
inc
js
push
pop
lea
pop
push
loop
fwait
jmp
call
sahf
xor
add
andb
test
adc
ds
xchg
push
stos
fsubs
shlb
pop
and
sub
pop
jle
mov
in
stos
outsb
sarb
stos
push
into
xchg
lahf
loope
add
xchg
gs
xchg
lods
js
clc
imul
call
int
test
call
pop
fsubl
jge
adc
or
and
push
inc
add
scas
leave
xchg
pop
add
repnz
das
mov
imul
sarb
leave
aad
adc
push
cmpsb
in
pop
ror
pop
test
sub
mov
cs
pop
sbb
or
jb
shll
gs
mov
iret
mov
popa
aam
lods
in
jp
aaa
sbb
and
lods
rcrb
ret
dec
adc
xor
mov
mov
shlb
loopne
mov
cmp
test
inc
popa
or
adc
fdivs
flds
mov
fadd
xchg
push
sub
inc
ror
adc
fbstp
add
jle
icebp
ds
ds
push
or
cmp
sbb
inc
pop
cmp
addl
jge
and
std
sti
inc
test
lcall
sbb
loope
push
ret
aam
stc
or
enter
cli
int
arpl
shlb
jecxz
dec
sbb
add
mov
rcrl
adc
and
repz
loopne
lds
sub
sub
movsb
out
mov
sbb
push
mov
mov
out
push
rolb
loope
lcall
inc
jg
int
mov
xor
outsl
jp
xchg
ret
mov
and
cltd
add
sbb
xchg
cmc
inc
push
cwtl
add
adc
sti
sahf
nop
gs
dec
aad
sub
push
jae
jns
sub
mov
fisttpl
jl
mov
inc
mov
lcall
or
iret
in
xor
sbb
imul
cmp
pop
aad
xchg
xor
ljmp
jne
lock
mov
je
adc
lea
lods
dec
xchg
loopne
jns
bound
xor
fisubrl
sti
sar
jge
cmpsb
adc
loop
sbb
out
ljmp
lods
mov
xchg
add
nop
andl
aaa
adc
mov
cmp
jg
pusha
in
sub
xor
sub
arpl
add
ret
pop
inc
mov
pop
pop
or
fwait
jae
jecxz
fidivrl
push
sub
jmp
pop
rcr
xor
test
push
jo
data16
lods
fists
int3
dec
aas
cmp
stos
mov
loope
out
mov
ficoms
lea
xchg
loope
subb
rol
je
lods
add
mov
into
inc
sbb
rcrl
xchg
dec
and
push
add
mov
xor
stos
hlt
int
push
lret
jg
inc
ret
outsb
in
jle
add
inc
lss
or
hlt
mov
sti
and
insl
sub
mov
inc
mov
cmp
mov
xor
or
sbb
xchg
jl
incl
xlat
movsb
mov
paddq
xchg
mov
popf
adc
mov
jnp
jp
inc
xchg
push
movsl
orl
cmp
int3
lods
ja
ljmp
shld
mov
cs
hlt
pop
adc
pop
push
inc
in
repnz
jecxz
idiv
xchg
lcall
movsl
andb
push
ret
movsl
adc
pop
push
negl
popf
add
iret
xchg
out
inc
sbbl
adc
adc
sub
sbb
mov
std
cmp
roll
sub
inc
jmp
pop
fmuls
roll
add
push
jb
nop
fisubrs
scas
add
repnz
loopne
mov
sub
push
incb
and
add
sbb
loope
xlat
loope
dec
pushf
sbb
mov
xchg
pop
shrb
popf
or
js
adc
jo
insl
fisttpll
data16
jmp
in
mov
addb
cs
dec
test
test
inc
or
out
jmp
ror
mov
les
and
push
jecxz
dec
ds
das
xor
rcrb
movsl
xchg
push
out
sbb
leave
and
adc
push
dec
pop
aam
dec
xor
and
ljmp
test
cmc
rep
sub
inc
bound
jo
popa
mov
push
ds
cmp
bound
shl
cli
ret
push
mov
push
jecxz
cmp
sub
sti
test
test
cmpsl
mov
add
fs
pop
in
mov
mov
inc
cmc
adcb
sub
and
fistpl
in
into
mulb
mov
fsubrl
xor
xorb
shrb
or
es
aam
jne
icebp
xchg
xor
lock
adc
aas
pop
stos
pop
outsb
xor
rcrb
js
add
lahf
add
and
pop
mov
cwtl
dec
sub
push
mov
cmc
fidivl
sub
shll
pop
movsb
mov
mov
aaa
jmp
inc
xor
repnz
xor
cmp
cwtl
jg
aad
stos
ss
mov
mov
repnz
hlt
mov
in
xchg
dec
add
aas
mov
aad
sets
mov
pop
pop
push
outsl
push
cwtl
add
adc
inc
lcall
insb
scas
ret
xor
jne
cld
xchg
mov
pop
shll
jp
pop
gs
movsb
add
pop
cltd
popf
push
cmp
xor
lods
mov
rcr
pop
or
nop
xchg
sub
jno
cmc
test
addr16
adc
test
xchg
dec
push
sbb
fisubrl
outsl
shrl
lds
inc
popa
mov
scas
xor
mov
bswap
xchg
mov
aas
lods
std
cld
fisubs
sub
iret
sti
in
aam
std
je
jle
in
mov
or
push
push
mov
es
xchg
dec
push
adc
adc
fimuls
mov
xor
rclb
inc
mov
movsb
push
pushf
mov
hlt
adc
jmp
and
fs
inc
loopne
dec
dec
les
mov
fmuls
mov
xor
out
ret
sub
je
add
fwait
dec
mov
sub
test
jae
fs
sbb
jo
lahf
mov
icebp
test
lret
mov
or
aaa
push
inc
jae
inc
aam
sarl
aas
push
ja
sbb
scas
inc
sub
int
or
cltd
or
fistpll
stos
jo
ds
mov
pop
shrb
mov
insl
sub
mov
cmpsl
lock
imul
bound
fisttpll
daa
mov
xor
clc
cmp
je
addl
mov
and
addb
dec
jnp
sbb
in
jmp
sahf
add
mov
mov
xor
mov
pop
cmpb
imul
inc
sub
adc
int3
adc
pop
and
xor
rcrb
clc
dec
cmp
int3
xchg
inc
mov
and
add
cmp
rcl
sub
fisttpll
sbb
aas
inc
xchg
dec
mov
jns
jl
aas
adc
in
ret
dec
add
notl
cli
jle
cli
cmp
xlat
jmp
outsl
mov
bound
xchg
in
mov
sbb
call
inc
ljmp
fldl
stc
into
pop
icebp
loope
or
sbb
mul
pushl
lock
or
push
out
loop
loopne
cwtl
gs
int
xor
sub
sub
mov
int3
xor
cmp
or
inc
mov
mov
ret
jbe
xchg
cwtl
es
enter
mov
sbbb
sbb
ja
push
mov
push
aas
cmp
pop
jbe
test
dec
hlt
gs
gs
pop
push
jg
and
adc
xchg
adc
loope,pt
sti
jno
orl
adc
fcomps
push
mov
mov
and
add
jbe
mov
adc
push
adc
call
das
inc
shll
mov
mov
xchg
enter
ret
jnp
xor
jp
enter
movsb
call
pop
call
ss
push
mov
lret
psllw
cld
mov
sub
loopne
iret
out
jle
ret
stos
push
pop
push
jae
cmp
add
and
xchg
std
mov
cmc
mov
push
idivb
mov
mov
test
rcll
fwait
push
mov
cmp
mov
push
dec
lcall
add
mov
out
fnstenv
push
xchg
stos
nop
cmc
add
rorl
cli
fnstenv
hlt
or
imul
cmp
int3
sbb
inc
fcoml
inc
sbb
jb
jb
sub
sub
xchg
add
out
mull
or
aas
out
loopne
popf
push
pop
sti
test
into
jo
arpl
add
lds
mov
clc
mov
add
dec
divb
pop
cmp
and
add
imul
inc
ds
sahf
mov
repnz
push
lods
loope
pusha
sub
sahf
pop
int
lock
mov
mov
lods
mov
test
in
pop
inc
inc
inc
cmp
pop
popf
clc
das
test
cmp
cmp
xchg
xor
sbb
xchg
push
jnp
pop
ja
pop
cmc
pop
gs
inc
adc
add
xlat
dec
mov
or
in
xor
stos
icebp
xlat
movsl
aad
add
lods
mov
jae
pop
mov
dec
adc
div
mov
jg
cmp
xor
fdivs
leave
jg
mov
adc
hlt
dec
icebp
mov
cmp
mov
shl
lahf
dec
jmp
sub
cwtl
imul
cmp
xor
mov
xor
mov
adc
pop
push
mov
or
mov
inc
cmp
jmp
mov
and
dec
movntps
inc
shll
outsl
push
xchg
sub
popa
and
pop
insl
xchg
mov
xor
pop
sbb
dec
lock
cmp
cld
adc
sub
dec
xchg
xchg
inc
adc
add
cmc
xchg
dec
xchg
jno
jbe
pop
dec
and
adcl
nop
pop
in
mov
cld
jo
dec
xor
call
inc
ret
repz
sahf
lock
add
add
je
and
fadds
inc
xor
cld
jp
in
adc
movsb
inc
xor
jl
and
inc
jp
test
sub
mov
cwtl
icebp
out
jle
cmpsb
push
push
jmp
scas
fistps
dec
out
das
cld
adc
cs
cmc
push
gs
ret
sahf
imul
or
faddl
std
cmp
or
dec
lea
mov
lret
sub
ret
inc
movsl
pop
xchg
cmc
jge
sub
addl
mov
fnstsw
xor
mov
jl
mov
aas
jmp
cmp
mov
push
adc
lret
sbb
add
lahf
mov
adcl
sahf
out
add
push
sbb
stos
sbb
popa
cmp
iret
insl
andb
iret
xor
sbb
scas
cmp
repnz
stc
clc
sub
push
adc
or
lea
les
sub
repnz
fs
pop
inc
out
mov
xor
cwtl
sub
int
aaa
cld
mov
stos
ds
sbb
add
push
cmpsb
and
inc
jge
jl
pop
or
test
cwtl
pop
push
pop
sbb
and
sbb
adc
mov
xchg
inc
ficoms
aas
lahf
adc
insb
mov
arpl
movsb
push
or
jmp
lahf
loop
jns
jb
cld
push
mov
mov
dec
lea
cmp
dec
pop
into
adc
or
jno
pop
mov
adc
xor
dec
xchg
in
into
push
dec
or
or
add
call
test
pop
jp
jmp
and
lret
xchg
pop
leave
rcrl
push
std
lds
add
movsb
out
testl
or
sbb
adc
ret
sbb
xor
cmp
pop
mov
pop
dec
add
ljmp
std
int3
xchg
ret
dec
push
ds
xchg
sahf
add
shll
cmc
in
pop
aaa
cltd
popa
mov
mov
cs
iret
enter
dec
xchg
fdecstp
and
sbb
mov
fwait
into
mov
insb
mov
cmp
sbb
adc
mov
shrb
mov
inc
sbb
sub
mov
push
cmp
xor
lcall
sub
clc
orb
add
rolb
cld
loope
lahf
dec
rorl
mov
iret
xchg
stc
sub
jecxz
js
lahf
sub
insl
stos
lods
cmc
lock
popf
pop
pop
inc
into
imul
es
lret
xor
in
ljmp
lds
leavew
inc
test
cmpsl
arpl
adc
adc
cmpsb
push
out
mov
cwtl
mov
ds
jne
jmp
shlb
inc
sub
add
dec
in
shll
daa
out
mov
jle
cltd
xor
iret
jns
iret
mov
and
lret
stos
push
or
loopew
mov
fiadds
and
out
mov
ds
dec
movb
xchg
jmp
sub
inc
ds
xlat
and
fwait
pop
lock
jg
movsl
add
push
xchg
mov
or
mov
dec
dec
cmp
xor
pop
daa
loopne
pop
push
es
in
push
jae
mov
js
gs
sarb
das
mov
push
and
int3
push
mov
fucomp
ret
and
xchg
cltd
aam
dec
cmp
shrb
shlb
xor
orb
dec
or
test
cmpsl
bnd
out
jg
inc
jno
pop
out
mov
jl
jg
and
and
cld
enter
adc
outsl
push
push
jmp
outsb
rcll
lret
loopne
rcrl
shll
pusha
mov
fstpt
sbb
push
clc
insb
and
lret
jp
dec
mov
xchg
lret
mov
mov
popa
fadd
and
jge
lods
loop
shlb
subl
and
fcmovu
or
mov
inc
sub
mov
ffreep
mov
mov
cmpsl
mov
shrb
and
popa
pop
out
xchg
lods
nop
pop
xchg
stc
call
cmpsl
mov
push
insb
mov
push
popf
push
sbb
or
aad
jo
fyl2xp1
dec
gs
mov
clc
lahf
mov
loope
test
adc
mov
and
testb
sub
popf
cmpsl
negl
cmp
jl
dec
outsl
das
pop
sub
rcrl
scas
stos
dec
mov
mov
in
mov
aad
lret
adc
int
pop
push
mov
jle
push
and
adc
subb
push
xchg
push
xor
nop
dec
xor
icebp
sbb
and
push
fwait
inc
sbb
add
jno
mov
jne
or
push
mov
pop
jge
xchg
xchg
mov
xor
fidivs
jae
push
adc
dec
aam
fisubl
movsl
sahf
aaa
inc
adc
testl
pop
jl
sbb
mov
xorb
lret
out
icebp
in
adc
cmpsl
call
lcall
mov
cmp
pop
shll
mov
fidivrs
int
mov
dec
jl
lock
repz
add
fbld
test
add
pop
imul
push
sub
push
aam
movsl
jl
imul
mov
es
jp
jle
inc
push
xor
add
filds
orl
shll
fsubrs
jecxz
popa
cli
push
inc
mov
and
or
pop
sub
in
int3
enter
lods
orl
arpl
stos
xchg
mull
scas
sub
loope
mov
jnp
mov
push
mov
sub
sahf
out
adc
scas
lahf
mov
lahf
out
sahf
imul
fbld
lret
outsl
jns
mov
lret
xor
sub
in
mov
out
inc
and
pop
sarl
xchg
xchg
inc
iret
fistpl
loop
mov
nop
sbb
es
xchg
jnp
and
dec
out
push
addb
jge
ret
iret
mov
fldcw
sub
mov
cmp
xchg
xchg
or
inc
fidivrl
xor
hlt
stos
mov
jl
loop
mov
or
push
popa
inc
lret
add
sahf
fnstsw
lea
adc
sub
popf
cs
faddl
pop
add
es
jge
sbb
pop
sbb
in
int
pusha
push
in
pop
xor
icebp
insl
jg
mov
sbb
mov
jb
adc
pop
cmpsb
sub
jge
adc
inc
push
xchg
push
mov
adc
aam
loope
push
mov
test
jge
sbb
push
mov
or
filds
xchg
movsl
in
mov
mov
hlt
mov
or
jle
andl
dec
jo
add
or
mov
xor
imul
add
sbb
dec
xchg
loope
push
jbe
std
xorl
mov
and
dec
divb
out
sti
sub
push
imull
mov
pusha
mov
jbe
mov
fisubrs
sub
sbb
repz
inc
loopne
sub
mov
fs
cwtl
xchg
push
cmp
add
mov
jb
sbb
adc
dec
mov
repnz
jnp
jno
loope
jno
mov
cwtl
inc
fwait
push
fwait
add
push
xchg
lds
icebp
push
dec
push
repz
or
pop
flds
adc
mov
shrb
pop
sbb
cmpsl
dec
pop
aad
dec
popf
sbb
xor
movsb
loopne
push
movsb
inc
push
xlat
neg
pop
mov
repnz
shrb
sbb
outsl
outsl
test
scas
adc
push
dec
iret
push
out
dec
fcoml
js
xchg
sbb
mov
fs
bswap
and
lahf
add
out
outsb
pushf
mov
ja
loop
lret
adc
xor
into
loopne
adc
xchg
repz
mov
pop
mov
inc
nop
add
iret
push
scas
inc
dec
inc
sahf
ss
xchg
es
xchg
add
dec
fidivs
push
mov
imul
sahf
in
sti
insb
clc
or
cmpl
mov
rcl
popa
bound
dec
ficomps
cmp
data16
lahf
add
cmp
inc
add
sbb
fs
mov
add
test
mov
push
sub
mov
dec
push
dec
lds
loopne
rolb
lcall
inc
lods
cmp
push
lcall
sub
inc
adc
mov
cmpsb
or
aaa
mov
sbb
mov
enter
out
int
addr16
or
lock
sub
mov
fisubl
mov
fadds
loope
dec
xor
daa
lret
mov
repz
sbb
pop
enter
sbbb
xor
mov
sub
hlt
mov
imul
stos
xor
or
mov
adc
ja
imul
push
push
test
sub
mov
lods
stc
lea
mov
daa
inc
cmp
icebp
arpl
and
cmpsb
sbb
mov
shll
mov
rol
aaa
mov
aas
pop
jno
idivb
mov
and
jns
add
add
inc
mov
mov
jb
loopne
test
and
push
mov
mov
imul
cmp
subb
pushf
int
dec
aas
push
dec
rcrb
add
push
xor
div
lds
out
mov
jo
leave
mov
sbb
fldl
pop
cmp
in
xor
arpl
sti
push
imul
mov
push
pop
pusha
ss
add
xchg
mov
and
test
jp
push
ja
or
je
popa
xchg
clc
xor
inc
and
test
out
and
into
dec
shrb
mov
xchg
mov
mov
out
push
lahf
pop
xor
sbb
fidivrs
jae
fwait
mov
inc
insb
cs
jo
mov
in
mov
aam
and
aas
mov
dec
push
lock
inc
data16
lret
outsb
push
xchg
push
or
add
rolb
inc
xchg
push
into
mov
inc
dec
jno
add
sbbb
pop
movsl
xchg
icebp
jmp
daa
add
and
xchg
lods
lods
add
sub
and
sub
ljmp
dec
ljmp
inc
movsl
scas
jg
adc
cmp
rcll
ds
ja
jg
mov
lret
ret
push
jp
mov
das
cmpsl
jne
mov
push
xor
inc
cld
fmull
aas
repz
aam
jg
ja
lret
push
adc
mov
fwait
pop
push
fnstcw
jb
mov
push
ja
and
and
imul
leave
xchg
dec
loopne
mov
push
pop
or
sbb
adc
adc
jmp
add
insb
xchg
xor
cmp
xor
jp
cmp
push
pop
mov
cwtl
jnp
mov
jge
or
and
pop
pusha
in
mov
sbb
dec
pushf
add
push
in
repnz
mov
jae
mov
and
in
bound
sar
xchg
fwait
push
jl
loop
adc
aad
out
cmp
add
shr
fisubrs
test
test
test
push
jge
push
orl
das
add
mov
mov
sti
and
jle
iret
out
fisubrs
push
addr16
cmpsb
fildl
mov
xchg
mov
stos
sahf
mov
imul
aad
scas
bound
movsl
addb
sbb
mov
dec
push
mov
shrl
mov
inc
adc
ret
loop
cmp
lods
xlat
sbb
pop
inc
jb
mov
loop
push
xchg
dec
int3
or
movsb
cmc
xor
loope
aad
sbb
cwtl
lret
add
sarb
xchg
sub
dec
push
bound
and
mov
cmc
push
cmc
mov
dec
sub
inc
cwtl
mov
lcall
jo
add
cmp
sub
push
fiadds
adc
mov
push
push
cwtl
sub
mov
shrl
inc
outsl
dec
xchg
iret
xor
lock
xor
push
sub
popa
gs
mov
add
jmp
adc
inc
decb
ja
push
add
add
loopne
pop
and
dec
aad
push
loope
xor
inc
xlat
pop
das
mov
leave
xor
push
or
pop
xchg
arpl
add
mov
jbe
mov
mov
xor
les
shll
sbb
stos
loopne
sarb
sbb
popa
jmp
or
shrb
dec
lods
cltd
push
mov
cs
adc
out
adc
ss
mov
or
rolb
xchg
mov
jno
jns
les
xchg
mov
push
cmp
pop
addr16
mov
dec
test
les
xchg
mov
xor
push
sub
in
mov
fwait
or
stos
sbb
out
out
gs
lds
lods
test
icebp
jbe
loope
jns
es
cld
popf
test
adc
cmc
jge
cmp
xchg
loopne
dec
push
xor
test
push
pop
add
lret
inc
sbb
pusha
test
push
sub
lret
dec
rorb
inc
dec
xchg
in
pop
gs
dec
sbb
inc
sub
decl
stos
ret
int
fstps
and
outsl
or
jae
ficomps
out
sub
ret
mov
mov
fldt
jnp
push
int3
aam
lahf
pop
dec
in
into
sbb
stc
cmpsl
ror
cmpsl
mov
fs
pop
mov
lahf
fmul
cmp
or
pop
mov
push
repz
outsl
mov
mov
xchg
mov
punpcklbw
ret
mov
jle
mov
inc
cmc
add
ret
cmp
or
das
ret
jecxz
addr16
pusha
pop
in
in
sub
lock
pop
or
and
icebp
jg
cmp
mov
jl
pop
in
inc
mov
jg
mov
addb
push
shr
out
and
leave
mov
cli
sub
jne
sbb
add
sub
add
lahf
mov
outsb
cmpl
dec
testl
xchg
loop
cwtl
sbb
dec
mov
mov
mov
pop
lret
sti
cmp
jb
out
jecxz
xor
and
lcall
xor
push
imul
push
outsb
loope
mov
push
cmpsb
test
pushf
inc
inc
imul
in
inc
in
add
ja
mov
push
or
call
push
shrl
push
lods
cmpsl
xor
movsb
addr16
inc
loop
dec
adc
mov
and
test
das
repnz
fisttps
outsl
jmp
fisubrl
push
in
out
mov
pop
sahf
lret
stos
mov
jns
mov
inc
loop
arpl
mov
fisubrs
push
loope
inc
pop
stos
aam
push
iret
sbb
pop
push
push
mov
dec
jmp
nop
xchg
ret
dec
fwait
decb
mov
lcall
sarl
shrb
or
cmp
aam
xchg
fsubl
cwtl
cmp
cmpsl
mov
or
inc
push
popf
push
outsb
inc
js
xor
jecxz
cmp
mov
dec
inc
sbb
mov
aad
movsl
rclb
mov
xor
inc
divl
sub
or
jae
lods
dec
xor
cmp
xchg
mov
jo
daa
ljmp
int
xor
mov
stos
dec
rep
sbb
es
dec
insb
pop
stos
sbb
repnz
insl
push
jecxz
test
sbb
not
adc
sbb
sbb
mov
xchg
imul
mov
xchg
rcll
jg
int3
aas
lahf
sti
jbe
jmp
adc
cmp
inc
mov
mov
test
cmp
jle
mov
or
pop
not
inc
fldl
divl
loope
aaa
out
add
push
leave
popa
xor
xor
add
das
sub
and
sbbb
and
sbb
mov
pop
fs
dec
aaa
das
fsubp
int
adc
sub
or
shl
pusha
movsl
push
jb
cmpsl
aaa
in
pop
out
jb
daa
nop
repz
sub
or
rcl
add
js
into
cmc
add
mov
dec
adc
mov
push
ljmp
push
xor
test
mov
xchg
rolb
mov
add
popa
in
cwtl
scas
inc
jecxz
add
mov
movsl
add
xchg
mov
mov
pop
divb
lods
js
adc
mov
sbb
jno
xchg
jle
shl
jp
push
icebp
cmp
push
mov
insl
data16
jo
add
xor
xor
mov
fistl
iret
out
mov
dec
into
push
jno
or
mov
and
jo
inc
dec
add
and
repz
pop
daa
imul
daa
cmp
pushf
enter
mov
fsubr
push
mov
add
mov
bswap
cmp
sub
scas
xor
xchg
pop
vshufpd
push
cmc
pop
stos
subb
xor
mov
mov
inc
daa
dec
or
xor
bound
sub
mov
out
sbbb
mov
out
xchg
and
pop
mov
sti
fsubrs
and
shll
cmp
lock
sbb
fwait
cmp
mov
jmp
mov
push
mov
repnz
mov
xor
pop
inc
cld
sub
add
cmpsb
sahf
outsb
xchg
enter
fs
insb
lret
push
ljmp
sub
push
push
inc
cli
and
add
xor
push
adc
mov
sbb
mov
test
je
adc
out
fsubl
inc
adc
jo
jo
push
sbb
and
sbb
inc
push
insl
adc
pushf
inc
dec
hlt
pop
je
fstl
xor
pop
ret
nop
add
xor
pop
mov
push
sti
mov
add
mov
or
ret
xchg
cmc
fidivrs
call
popf
xchg
inc
sub
in
push
xor
pop
mov
mov
xor
stc
mov
lods
xchg
adc
pop
fs
mov
out
enter
push
lret
scas
inc
push
xchg
negb
or
pop
sbb
dec
shrl
jbe
arpl
or
inc
mov
sub
sub
lea
sbb
cmp
add
pop
add
icebp
mov
es
sub
scas
sub
shlb
clc
int
push
loope
or
jno
mov
dec
aad
or
pop
stos
jo
dec
push
int3
sbb
inc
test
dec
mov
lods
inc
mov
inc
aam
jge
sbb
xchg
imul
in
sbb
mov
jns
inc
mov
cmp
dec
mov
push
dec
xchg
xchg
and
icebp
pop
dec
push
mov
xor
and
xchg
xchg
clc
loope
pusha
add
sbb
test
adc
out
xor
jno
lea
sbb
in
and
repnz
ljmp
hlt
je
jns
shrl
add
lds
loopne
pop
fldl
cld
jnp
adc
cmp
loopne
loope
lea
inc
pop
aas
jmp
cwtl
loop
ljmp
rol
xchg
sahf
js
dec
add
pop
in
jno
pop
adc
mov
pop
dec
fsubrl
jp
add
imul
jae
sbb
popf
repz
push
inc
fistpll
dec
stos
dec
mov
or
popf
push
rcl
xor
pop
arpl
sbb
add
mov
andb
in
mov
addr16
push
repz
out
je
arpl
push
movsl
push
enter
inc
dec
xor
xchg
scas
fyl2x
sbb
leave
std
leave
adc
add
cmc
mov
aas
adc
mov
inc
xor
iret
xor
sub
adc
fiadds
in
ljmp
sbb
lahf
xor
and
and
mov
jbe
pop
cs
cwtl
mov
pop
insl
loope
arpl
push
mov
nop
push
outsb
dec
sti
xor
inc
xor
add
jns
pushf
inc
nop
adc
inc
rcrl
push
imul
pop
das
sub
push
jo
and
sbb
sti
sarb
lret
dec
pop
jnp
jno
mov
popf
fs
cmp
outsw
rolb
and
or
cmpsb
pop
sub
mov
jnp
jl
das
mov
push
sbb
aad
mov
mov
pop
add
ss
cmp
aaa
inc
popf
pushf
imul
dec
or
sbb
jae
adcl
movsb
and
xor
loope
and
mov
aad
jle
sbb
xor
mov
mov
mov
or
stos
xor
iret
push
iret
out
shl
dec
paddusw
insl
std
or
sub
and
push
hlt
mov
lds
jp
sub
lret
test
call
sub
es
mov
dec
mov
in
pop
or
fldcw
inc
push
out
xor
sub
and
xor
xchg
daa
ret
jb
push
test
and
sahf
into
sub
mov
insl
mov
cmpsb
sbb
adc
std
xchg
dec
pop
shr
mov
sbb
pop
add
mov
sbb
out
jno
ss
mov
mov
arpl
push
int
dec
adc
inc
mov
lea
into
jmp
adc
and
push
push
rol
inc
cmp
dec
adc
in
mov
push
in
push
popa
jns
mov
mov
sbb
mov
adc
mov
cmpsl
fildll
cs
xchg
loope
add
inc
cwtl
or
pop
popf
mov
sub
mov
int
xchg
aas
sub
jb
push
dec
icebp
fldenv
push
ss
sti
sahf
in
fst
and
sbb
mov
scas
push
ficompl
or
sub
jnp
push
jecxz
cmp
add
into
xchg
addr16
and
ds
xchg
cs
xchg
and
mov
xor
dec
push
movsl
jo
lahf
scas
xchg
fucomp
lods
sti
mov
adc
dec
fidivrs
and
mov
cmp
or
fs
adc
adc
push
subb
loope
lcall
pusha
lret
cltd
ds
jno
xchg
jne
or
jns
and
data16
stc
or
pushf
sub
adc
icebp
xor
ror
mov
fdivl
cmp
scas
mov
ljmp
es
push
xchg
push
lods
mov
jb
fs
ficomps
ds
icebp
stos
cmp
mov
sub
push
out
lods
inc
inc
dec
daa
addr16
sbb
add
fnstenv
imul
std
repnz
fwait
divl
aam
inc
loop
xchg
test
pop
xlat
jne
and
fsubrl
in
mov
sbb
mov
aaa
lods
in
dec
pop
out
pop
push
aas
test
loop
leave
das
imul
cmpl
scas
xor
jmp
out
sub
mov
aad
pop
push
movl
mov
lods
je
mov
adc
fimuls
jmp
inc
mov
lcall
test
lret
adc
inc
sbb
xor
xor
cmc
push
or
sub
fisubl
movsl
push
sub
pop
imul
inc
leave
sbb
or
xchg
bound
xchg
mull
xchg
push
dec
insl
pop
push
daa
and
inc
dec
mov
mov
std
push
push
mov
sub
push
dec
xchg
cmp
les
add
lds
shll
jo
loop
in
xchg
and
in
sarl
rorb
stc
je
out
add
jge
pop
cmp
test
dec
xlat
add
lods
or
mov
sbb
dec
inc
inc
push
inc
repnz
test
or
pop
clc
into
loop
cmpsl
inc
aas
xor
lea
inc
push
mov
adc
xor
inc
dec
ret
jge
cmp
mov
test
cmpsl
nop
sbb
cwtl
je
mov
xlat
cmpsb
mov
and
or
cwtl
popf
jae
add
lahf
mov
aad
sti
adc
or
cmpsb
mov
lahf
sbb
std
mov
cmp
dec
dec
jne
lahf
push
insb
sbb
sbb
test
cwtl
mov
jp
cmp
inc
gs
sub
jp
inc
add
cld
shlb
pop
loope
and
int
jg
es
fdivl
mov
fcoml
push
add
test
fwait
mov
fucomi
dec
fldt
in
fadds
inc
fnstenv
int
scas
jg
sbb
pop
sub
mov
and
mov
aad
sbb
daa
cmp
jne
inc
jp
cmp
xor
and
push
pushf
leave
mov
ja
pop
lock
jp
jno
aaa
stc
mov
fistl
in
or
daa
lahf
sbb
call
pop
mov
es
pop
jp
pop
testb
dec
add
testb
sub
mov
pop
push
mov
and
or
inc
and
cmp
push
movsl
push
rcrb
test
sbb
aaa
ret
sbb
aad
jne
fucom
arpl
and
mov
je
repnz
cmpb
lds
pushf
leave
popf
loopne
add
and
xchg
stos
cmp
jb
jb
lret
imul
and
jo
in
fists
ja
xchg
hlt
pop
fmull
push
push
mov
jge
inc
and
and
or
dec
lods
push
mov
mov
cmpsb
mov
sub
inc
push
jp
sti
mov
leave
mov
jp
jge
lret
mov
add
pushf
jg
add
jno
mov
ror
in
fisttpll
test
mov
adc
loopne
push
lcall
aas
xchg
jecxz
and
and
mov
in
lds
in
mov
imul
jmp
push
mov
mov
movsl
and
les
ljmp
pop
loope
or
test
pop
adc
cmp
icebp
enter
and
xor
out
lcall
and
push
inc
arpl
sub
enter
xchg
mov
fdivrs
js
sbb
pop
push
xlat
imul
xchg
adc
test
inc
iret
xor
aaa
test
lock
push
bound
jno
sub
sti
inc
sahf
pop
xchg
mov
scas
adcl
divb
mov
js
pop
lret
jo
jmp
jae
xchg
xchg
shl
test
adc
vucomisd
xor
sub
fidivrs
std
cmp
mov
sub
jns
das
fdivs
sbb
insb
je
cmpsb
or
test
loop
push
ret
mov
loope
fists
push
pop
dec
mov
mov
sub
ljmp
and
outsb
mov
fiaddl
inc
jp
imulb
jp
insb
push
shl
cmc
adc
and
adc
pop
pop
test
outsl
add
mov
in
ret
push
mov
dec
sti
psrad
jmp
jp
ret
jg
xor
jb
sbb
adc
in
dec
dec
adc
icebp
cwtl
sahf
ret
sahf
stc
and
adc
dec
jg
movsb
sbb
iret
push
xor
imul
pop
arpl
ret
stc
or
inc
pop
sub
cmpsb
outsb
inc
inc
popa
and
or
adc
test
mov
int3
or
jne
add
dec
adc
repnz
fisttpl
cmp
sub
jo
outsl
fnsave
pop
mov
inc
ss
pop
push
jmp
pushf
dec
mov
jae
jb
insb
enter
jmp
xor
cmc
xor
out
inc
iret
test
ret
int3
aaa
fldt
add
mov
and
jns
lods
dec
int3
fdivrp
cmp
mov
and
fisubrl
and
xchg
jge
pop
scas
jle
and
or
jmp
dec
jnp
inc
and
adc
cmp
or
sbb
cltd
aas
sub
sub
movsl
fadd
icebp
outsl
mov
test
loop
test
add
inc
xchg
popa
out
mov
cmpsb
shrl
fiadds
jo
mov
out
loope
and
push
js
push
std
xchg
inc
inc
popf
dec
lea
mov
loop
rcrl
cli
std
fcmovnu
adc
dec
lods
xchg
clc
pop
cs
cld
out
mov
or
es
xchg
and
fisttpll
leave
or
mov
dec
jb
scas
gs
pop
sub
push
mov
jg
insl
jecxz
push
xchg
cmp
pop
arpl
mov
cmp
xor
hlt
pop
mov
arpl
leave
pop
xchg
mov
mov
aaa
pushf
andl
or
jg
and
nop
dec
pop
sub
mov
out
cs
rol
and
repnz
xchg
out
dec
and
adc
xor
or
jge
sub
bound
lret
in
es
imul
mov
or
and
jo
out
ds
lret
aad
cli
jp
icebp
jo
sti
sub
adcl
loop
mov
mov
xor
popl
xchg
dec
rcr
ljmp
addr16
xor
dec
xchg
mov
sub
add
push
in
outsl
or
sub
imul
sbb
dec
cmp
sub
ja
cld
aad
cli
cmp
clc
dec
in
or
std
mov
dec
adc
sbb
add
hlt
jmp
adc
in
popf
popa
test
pushf
mov
jge
push
aam
push
xorb
pop
es
sarl
aam
inc
add
out
sbb
xchg
xchg
push
sbb
mov
mov
xor
lea
aam
xchg
in
hlt
negl
cmp
loopnew
leave
dec
mov
in
insl
pusha
and
sti
jp
xchg
dec
pushl
rcll
add
scas
and
scas
mov
mov
mov
add
mov
cmpsl
mov
pop
push
xor
fucomi
ret
mov
dec
loope
mov
jbe
mov
sbb
jns,pt
adc
arpl
xchg
daa
dec
inc
outsl
dec
adc
cltd
xchg
sub
fildl
jns
push
mov
outsl
or
mov
mov
je
lock
fdivrl
jno
movsl
js
jecxz
in
xchg
adc
subl
xchg
mov
aas
loope
push
fsubp
mov
testl
hlt
stos
mov
outsl
sbb
mov
jns
sbb
mov
jo
mov
add
sbb
xor
bound
pop
sub
into
xor
inc
daa
adc
insl
dec
mov
fsubs
sbb
pop
mov
lcall
mov
imul
mov
out
stos
stos
push
loop
pop
imul
stos
fdivrp
dec
adc
aaa
mov
adc
fmull
ret
xor
pop
outsb
pop
js
inc
lock
lds
test
push
mov
aas
aad
lea
pushf
mov
mov
dec
lret
push
negb
fdiv
call
mov
out
xchg
dec
popa
cmovs
nop
mov
add
testl
jmp
inc
or
push
inc
stc
sub
pusha
faddl
outsl
insl
repnz
leave
imul
cs
insl
movsb
test
stos
ret
scas
xor
in
cmpsb
add
sub
inc
mov
popa
dec
and
aad
sbb
xor
test
fwait
xlat
imul
jle
dec
mov
pop
jg
mov
movsl
in
pop
mov
imul
inc
outsb
mov
and
mov
lods
aas
lret
cmpsb
adc
andb
inc
jae
pushf
dec
repz
xchg
adc
xor
stos
aas
push
mov
jae
fldcw
inc
ret
movsb
aaa
xor
bound
jno
out
ja
cmc
dec
loope
dec
movsb
jnp
xor
in
xchg
cmp
lret
add
mov
fmul
scas
dec
clc
dec
xchg
insl
xor
push
mov
and
movsl
shrl
loopne
cmp
cmpsb
jbe
push
test
gs
rcr
imull
cld
in
jmp
xlat
pusha
add
xchg
jae
mov
aas
movsl
inc
xchg
push
dec
pop
fs
jg
xor
jmp
xor
mov
test
or
inc
or
or
adc
jbe
xchg
mov
push
pop
push
ja
sarl
inc
xor
sub
inc
xchg
aam
cltd
push
gs
xchg
sub
mov
pop
adc
int3
bound
sbbl
repz
sti
es
je
lds
push
cmp
push
xchg
mov
xchg
nop
nop
fdivl
fisttpl
int
or
mov
ret
jo
sub
out
je
out
sbb
jg
pop
xor
jmp
aaa
and
pop
xor
and
int
or
int3
mov
lea
jno
std
add
sub
lret
mov
pop
sub
sbb
pop
mov
lcall
stos
pop
sbb
xchg
out
jno
cmc
push
dec
xchg
dec
into
in
std
flds
xchg
pop
addr16
jo
aaa
pushf
sub
dec
mov
jae
jb
mov
jno
sbb
xor
inc
or
xor
pop
repz
cmp
pop
xor
or
iret
sarb
mov
mov
xchg
inc
mov
push
mov
sub
loopne
add
sbb
adc
stos
mov
jle
inc
pop
iret
jae
jmp
repnz
sbb
cmpsb
stc
or
fadds
xor
dec
call
mov
in
cltd
sub
loope
mov
or
xchg
xchg
inc
orb
jo
rcrl
or
xchg
sbb
cmp
push
sbb
dec
jnp
dec
xchg
ljmp
les
mov
and
lahf
je
sub
outsl
xor
adc
rdtsc
lret
push
cmp
jmp
enter
sub
into
xchg
movsb
insl
jp
scas
mov
add
adc
sti
test
sub
xlat
das
fisttps
jae
push
jae
movsb
pop
jle
imul
dec
xor
jge
or
mov
sbb
push
jle
aad
mov
xor
mov
fwait
jmp
in
mov
push
and
add
jecxz
shrl
dec
fs
sub
inc
xchg
inc
out
cmp
sub
cli
and
inc
ljmp
xchg
mov
aaa
add
imul
and
lahf
push
mov
add
mov
shl
mov
push
adc
lret
mov
sub
andb
rclb
lock
mov
dec
dec
xor
pop
sbb
sbb
pop
add
lea
and
and
xor
xor
aaa
cmp
pop
daa
cld
fnstcw
xor
shll
out
int3
dec
jg
fbld
ljmp
pop
mov
or
adc
sbb
push
mov
das
imul
dec
xchg
pop
mov
xor
loopne
mov
in
pop
sub
test
int
sub
jne
in
jb
jecxz
xchg
inc
mov
jp
push
test
stc
pop
mov
cmp
jg
movsl
mov
popw
push
cltd
shll
mov
sub
andb
lcall
les
jp
fs
mov
enter
int
icebp
sbb
ret
mov
loop
adc
nop
xchg
stc
adc
jp
mov
fdivrs
sbbl
dec
cwtl
mov
in
xor
jmp
testb
jge
stc
cltd
lea
sbb
push
sbb
jbe
out
and
jnp
aaa
jge
pop
adc
fistpll
out
bound
and
lods
jecxz
das
dec
lahf
les
jge
cltd
cmp
push
push
mov
shll
pop
pop
sbb
insb
mov
sub
mov
xchg
in
or
test
aad
mov
fisubrs
mov
dec
rorl
push
hlt
imul
fnstcw
sub
repz
pusha
pop
rolb
and
push
repnz
xchg
lds
stos
mov
dec
out
jmp
xor
pop
loop
loop
sub
pop
sub
jl
mov
adc
add
push
and
insb
jle
push
test
mov
cmpsb
xchg
sub
cmp
sahf
ret
add
mov
mov
push
mov
xor
popa
inc
jg
adc
cmp
int
or
mov
sbb
xchg
cmp
ljmp
fimull
aad
jge
xlat
jae
mov
nop
push
cmp
sub
and
mov
push
dec
push
xchg
test
add
test
mov
lock
jbe
cmp
sti
enter
sbb
lea
cmp
fwait
pop
sbb
test
adcb
scas
fwait
xor
pusha
mov
cmc
mov
mov
test
inc
out
orps
arpl
test
movsb
pushf
lcall
xor
pop
push
inc
roll
jle
xchg
ret
push
dec
xlat
rolb
popa
inc
jge
mov
jae
rolb
lods
lods
pop
cltd
lods
or
xchg
push
sub
in
popf
icebp
xchg
push
pop
out
dec
and
or
sub
popa
shll
ret
or
sub
ss
aaa
inc
ja
jns
jno
adc
cmp
lods
clc
out
ja
xlat
mov
data16
push
mov
rcl
cld
mov
fistpl
mov
lds
lcall
out
jle
movsb
push
cli
les
jbe
lret
mov
int3
push
out
xchg
or
sti
sub
orb
mov
hlt
push
movsb
pop
sub
sub
xchg
cmp
mov
xor
xor
jno
sub
sub
mov
fcomps
loop
cli
xchg
mov
gs
adc
mov
push
test
iret
dec
jl
and
loop
movsl
xchg
lods
aad
lahf
push
lods
arpl
int
fisubl
scas
imul
jmp
inc
jecxz
mov
fisubrl
repz
mov
aaa
bnd
sub
xor
pop
and
pusha
xchg
fbstp
imul
sub
out
xor
ret
shll
int
stos
push
cmpb
scas
push
sbb
in
add
mov
fxam
push
adc
repnz
sbb
std
shl
mov
int3
jp
pop
push
push
jbe
fs
inc
loope
popa
push
es
pusha
pop
lock
outsb
or
and
jg
pop
mov
xor
or
and
insb
pop
adc
add
push
xchg
fdivs
cmpsb
sub
pop
xor
sbb
mov
sahf
lcall
lods
cmp
jae
popa
inc
mov
add
mov
push
mov
fdivrl
cmp
popa
xchg
test
and
out
jl
or
add
lahf
xor
pop
inc
ljmp
adc
xor
mov
ret
sbb
pop
outsl
push
inc
dec
mov
push
loop
mov
mov
stc
or
sbb
adc
orl
aas
fwait
ja
and
fucomp
repz
nop
mov
or
pop
or
xor
loope
dec
sbb
xchg
pop
popa
adc
movsb
mov
ss
inc
push
test
or
mov
jmp
insl
sub
icebp
xlat
outsl
cmp
pop
orb
xor
loop
mov
ret
mov
repnz
sti
adc
daa
ret
xchg
mov
sbb
dec
mov
inc
cli
gs
mov
mov
lret
mov
mov
ror
mov
aas
loopne
xor
inc
cmp
pop
mul
mov
xor
loopne
stos
xor
adc
inc
sub
roll
rol
mov
sub
faddl
stos
xchg
jns
outsb
idivl
lods
sbb
inc
mov
dec
jbe
out
loop
cli
bound
lret
mov
cltd
clc
stc
mov
cmp
hlt
sbb
jo
push
rorb
aas
push
jo
mov
cmp
jns
dec
in
xor
in
sub
inc
or
jp
and
jbe
mov
fbld
sub
out
scas
pop
jno
outsl
cmp
testb
push
adc
jb
out
mov
setne
shl
movsl
test
dec
je
loope
or
sbb
sub
ljmp
je
inc
and
dec
sarb
les
scas
je
pop
xor
int
mov
bound
inc
out
dec
repnz
loopne
lea
ja
pop
cmpsb
sub
cmpsb
cmp
inc
pusha
pop
mov
mov
and
test
ret
in
ljmp
aaa
dec
mov
les
loopne
ret
in
cmp
sbb
idiv
mov
xor
pop
sbb
test
push
sbb
fs
in
xchg
imul
fistps
lret
in
daa
scas
ds
in
repnz
xchg
or
pop
jg
fdivrl
cs
cld
es
fldenv
xor
push
jl
adc
jle
es
mov
adc
gs
and
pop
popa
lret
push
les
lock
adc
hlt
addr16
mov
xchg
pop
jmp
xchg
mov
jmp
popl
jle
pop
adc
in
pop
enter
test
js
mov
jecxz
or
add
loopne
xchg
jg
sub
xchg
loope
add
jg
call
cmc
xchg
pop
cs
dec
outsl
scas
pushf
lahf
cmp
xchg
movsb
push
shrl
lods
cltd
jo
insb
fnstcw
push
jne
sub
xor
xlat
xor
inc
push
pop
shrl
cli
cwtl
mov
out
inc
cmp
jns
cmp
in
adc
sub
xchg
mov
fwait
push
mov
cltd
test
sub
call
mov
aam
push
dec
lds
popf
mov
test
push
out
mov
sahf
sbb
mov
and
sub
pop
aaa
repz
gs
sub
enter
mov
push
adc
adc
ret
loop
sbb
in
and
xchg
pop
pop
rcrb
inc
push
popa
xchg
pop
icebp
mov
or
cmpb
mov
insb
in
xchg
pop
inc
xchg
lret
fldt
sti
cmp
mov
mov
and
pop
jg
adc
repnz
out
mov
std
test
adcl
xchg
ret
cmp
or
xchg
cmp
sub
in
enter
or
addb
jp
cmp
push
jae
and
pop
mov
je
arpl
in
sub
test
push
xchg
hlt
outsb
mov
cwtl
xor
mov
jo
pop
inc
test
push
mov
xor
cmpsl
imul
mov
inc
lret
or
daa
cmp
iret
jb
fidivl
xchg
xchg
and
push
push
sbb
cmp
jo
mov
jae
icebp
shlb
sbb
mov
mov
hlt
and
popa
dec
outsl
lock
mov
pop
ficoml
lahf
mov
cwtl
pop
loopne
push
rcrl
hlt
aas
aaa
or
add
jne
mov
sub
mov
add
icebp
mov
dec
ret
xchg
adc
pop
pop
push
mov
pop
ljmp
cld
popa
push
jle
xlat
sbb
aam
pop
dec
add
insb
mov
test
dec
shrb
push
jp
add
ds
add
dec
shrl
mov
adc
push
xor
add
jge
cmp
dec
inc
aam
pop
cmp
lfs
dec
insb
ret
pop
rcll
sub
fcomps
into
sbb
mulb
in
ds
cmc
push
mov
pushf
add
out
lea
fsubrl
daa
add
repz
dec
xorb
fwait
mov
pminsw
sub
mov
andb
sbb
test
mov
ja
adc
enter
xor
mov
cs
dec
xchg
inc
outsb
xor
pop
ljmp
jl
andb
jl
pop
dec
push
and
shl
mov
pushf
dec
sarl
hlt
jp
filds
xor
push
xchg
dec
ss
xchg
jg
out
mov
dec
xor
xchg
out
test
inc
mov
cwtl
jbe
ret
lds
sar
mov
sub
push
loopne
mov
jno
sub
mov
nop
jl
jle
sub
je
mov
xchg
jns
cmp
jno
ja
test
or
pop
xor
push
mov
movsb
faddp
push
scas
pop
cmp
ret
imul
push
shll
pop
jg
negl
outsl
lods
push
push
sbb
ret
addb
lock
jo
std
loop
push
icebp
dec
negb
stos
adc
nop
popf
or
add
lret
inc
arpl
adc
sub
xorb
js
mov
jae
xor
loopne
xor
shl
or
popa
mov
cld
inc
sbb
decb
ds
test
mov
idivl
jp
jl
push
fldenv
insb
mov
add
test
pop
sti
leave
clc
jl
pop
aas
in
lcall
movsb
das
imul
imul
in
jnp
mov
mov
xor
add
add
jecxz
call
rorl
js
and
dec
push
sarb
cltd
sbb
mov
dec
cmp
in
fildll
pop
xor
arpl
pop
loopne
stos
out
ret
dec
out
and
push
lods
pop
dec
push
clc
mov
mov
xchg
xor
daa
jbe
out
push
jb
test
jge
xor
pop
fnstsw
je
dec
movb
test
incb
gs
ds
popf
in
push
daa
push
dec
xchg
add
push
and
jo
iret
jb
pop
fiadds
add
cmc
add
xchg
mov
test
lea
int
mov
xor
rol
bound
sbb
das
push
push
xchg
adc
push
or
or
xchg
loopne
xchg
mov
out
lods
inc
jmp
push
cltd
cmpsl
adc
sbb
popa
sub
inc
or
imulb
mov
push
scas
or
mov
mov
pop
adc
int
jb
sahf
push
pop
add
test
xor
movl
dec
mov
mov
inc
push
int
test
loop
cmc
out
xchg
push
aad
mov
jno
data16
adc
pop
mov
pop
cs
rol
mov
jns
lods
jle
call
xchg
out
stos
rcrb
cmp
jle
test
fidivl
pop
add
aas
inc
mov
movsb
jg
insl
or
mov
mov
jmp
movsl
pop
les
mov
testb
jecxz
loopne
inc
lds
lea
icebp
shrb
jg
addr16
push
lods
lea
movsb
or
imul
outsb
lahf
push
sbb
adc
xor
push
jb
cltd
fisubl
xchg
push
mov
iret
jo
sbb
fimull
or
push
stos
rol
rorb
lret
addr16
lahf
icebp
and
test
xchg
push
sub
or
mov
insb
pop
fisttpl
xchg
pop
xchg
sub
mov
xor
maxps
jo
push
sbb
sbb
in
jle
mov
out
fld1
sub
fidivs
lcall
data16
adc
or
js
jl
dec
clc
movsl
push
cmc
sub
sti
jns
loopne
ret
jbe
inc
add
ljmp
mov
inc
pop
pop
adc
mov
and
jae
loop
cmp
aaa
sti
mov
push
pop
push
es
call
jmp
inc
dec
push
rolb
sbb
cli
sti
fcoml
pop
push
mov
pop
shrl
mov
and
mov
aam
inc
fsubrl
insb
incb
or
add
out
lahf
adc
sbb
rcl
movsb
cs
inc
inc
inc
and
xorb
jle
imul
out
scas
in
push
fcomip
enter
bound
ja
lret
iret
lock
sbb
jnp
lahf
mov
rcrb
enter
inc
stos
stos
inc
adc
popa
rcrl
cld
scas
lock
cmp
jb
xor
mov
movsw
shrb
inc
bound
lret
push
daa
xchg
xchg
push
jle
mov
hlt
call
inc
xchg
dec
in
nop
mov
imul
jge
stc
fdivrl
mov
insl
dec
jecxz
inc
mov
lock
pop
pop
addr16
sub
push
fdivrl
cmp
addb
jne
data16
push
mov
mov
cwtl
and
or
add
lcall
dec
popf
arpl
loope
xchg
or
and
adcb
xor
and
inc
push
fstps
dec
je
sbb
scas
sub
fucomp
cmpsl
popf
mov
popa
sbb
or
cmpsl
push
jbe
es
test
pop
in
add
fcmovbe
mov
test
jo
pusha
lcall
inc
cld
fdiv
adc
push
mov
lods
popa
pop
push
mov
cmp
scas
jno
aad
and
iret
mov
xor
sub
cmp
jns
divb
test
xchg
jmp
test
aas
jl
outsl
sub
xor
cmpl
inc
mov
add
and
sbb
jae
xchg
mov
mov
push
pop
sar
js
push
sbb
ret
cmpsl
out
stos
scas
cmp
ficoml
pop
fsubrs
sti
mov
mov
push
mov
sbbb
mov
repnz
lds
fsubs
jle
mov
test
jne
into
add
pushf
in
jns
imul
and
scas
xchg
push
sbb
sub
dec
lcall
xor
pop
rorl
and
bound
stc
gs
sbb
inc
test
test
call
jae
fldt
arpl
rclb
pop
call
jo
loopne
sbb
test
hlt
shll
cld
stos
ret
mov
cmpsl
jmp
in
mov
nop
insl
and
mov
movsb
pushf
sub
movsl
faddl
jo
cmp
mov
fimuls
aad
insl
cmp
mov
in
ror
testb
popf
cmp
ss
push
adc
adc
mov
movsb
fstpt
aas
fistpl
out
push
fisubs
movsl
push
lock
test
fldcw
dec
lcall
jns
sub
jns
mov
inc
mov
and
movsl
inc
add
sbb
push
sarb
mov
das
push
dec
in
mov
outsb
dec
lds
hlt
aam
jmp
loopne
sbb
pop
push
cmc
cmp
iret
inc
sbb
orb
or
or
cmp
insb
loopne
push
sahf
movsl
mov
stos
inc
dec
jb
mov
fsub
rcl
loope
lds
cmp
daa
je
loope
xlat
fs
mov
outsb
or
jnp
mov
popf
xor
push
out
imul
fldcw
mov
scas
mov
sarb
fsts
lock
xchg
push
sub
dec
mov
movsl
and
push
sub
pusha
jg
data16
inc
xchg
clc
cli
inc
mov
lret
mov
js
lcall
xor
jb
fwait
loope
add
js
or
cmpsb
les
dec
fucomip
xor
aam
pop
outsb
pop
push
scas
inc
jbe
jae
scas
fsubrs
add
or
mov
add
inc
pop
inc
cmovl
mov
mov
aam
adc
ret
ret
pop
dec
adc
int3
ret
sbbb
out
nop
fnsave
pop
sbbl
std
in
dec
cmp
insl
inc
subb
stos
jp
pop
xor
ds
pop
inc
stos
call
lcall
hlt
outsl
lods
mul
mov
adc
mov
lea
jp
repnz
mov
jl
int
jg
or
jp
mov
sahf
pop
aad
subl
xchg
dec
jno
xchg
xlat
das
std
add
cmp
out
xchg
xchg
xor
xor
pop
int
fsubrp
shl
mov
ljmp
aam
faddp
jo
cmp
push
push
rcrb
loop
and
test
stos
or
fdivr
cwtl
arpl
into
xchg
popa
out
xchg
andb
dec
jle
fdivrs
inc
xlat
arpl
fsubrl
flds
cli
hlt
loopne
lcall
or
rorb
pusha
xchg
ja
or
push
fldenv
jbe
fs
popa
mov
cli
cmp
pop
into
in
cld
sbb
sti
es
mov
add
pop
mov
or
stos
push
gs
inc
aad
push
ds
insb
mov
mov
popa
and
loop
sbb
enter
leave
cs
mov
xchg
jns
sub
data16
mov
and
and
mov
ja
movsl
mov
mov
pushf
iret
xor
sti
lret
lret
sub
jnp
and
lret
push
mov
pop
ret
push
divb
xchg
insl
sbb
xchg
mov
int
dec
cmp
sbb
aad
mov
fnstsw
fisttpl
and
aam
mov
fisttpll
cmp
pop
mov
sbb
xchg
and
fdivr
xchg
adc
shll
movsl
jg
loop
pop
sarb
push
insl
xor
mov
insl
outsb
aas
les
inc
xlat
or
mov
out
xchg
fwait
sti
mov
adc
jnp
jmp
lods
jl
dec
pop
cmp
sub
ret
mov
shll
inc
pushf
test
sti
icebp
mov
jns
push
mov
jp
cmp
movsl
pop
mov
mov
int3
adc
push
loopne
mov
mov
call
pop
cmp
xor
adc
aad
and
fs
std
in
lea
adc
inc
cmpsl
sbb
xchg
dec
add
inc
pop
fwait
push
loope
dec
mov
gs
mov
movsl
test
out
sti
repnz
cmpsl
pusha
fmul
icebp
mov
out
add
or
lahf
mov
mov
cmpsl
or
jg
cltd
data16
adcb
pop
enter
sbb
repz
adc
xor
pop
mov
mov
add
fstp
adc
in
call
adc
push
aad
stc
or
aam
jecxz
xorl
sbb
out
adc
push
jge
xchg
mov
testl
ja
movl
mov
xor
enter
add
jl
jge
fcmovb
cmp
dec
push
add
sub
sbb
inc
pushf
out
les
jge
jg
sbb
xchg
movsb
test
rcrl
imul
cmp
pop
mov
js
enter
or
inc
out
addr16
mov
add
add
in
pop
cwtl
repz
ljmp
loopne
popf
xor
mov
addr16
or
inc
in
mov
popf
loopne
or
jge
add
jb
outsl
fistl
nop
jle
out
and
jge
pushf
push
mov
push
andl
aam
and
popa
mov
mov
push
lret
or
sub
push
or
fcmovb
cmp
ds
mov
enter
jge
add
cli
add
xlat
stos
jno
dec
xor
mov
sbb
push
sbb
in
addr16
inc
in
and
sbb
and
imul
mov
mov
add
fisttpl
add
movsb
repnz
in
test
sub
inc
adc
out
mov
push
xor
pop
lods
leave
and
push
pop
int
sub
arpl
inc
mov
addb
or
xor
js
jb
cmp
jecxz
cmp
inc
sub
jne
sarl
daa
gs
rolb
jecxz
jmp
xchg
cmpsb
sti
xor
int3
shlb
xchg
shrl
adc
inc
jnp
loope
add
xchg
into
and
cmp
cwtl
nop
mov
loop
and
ret
mov
rorb
mov
mov
mov
push
out
int3
pop
mov
dec
negl
in
lds
je
jmp
cmpsl
sub
push
sub
or
cmpsl
enter
xor
push
gs
pop
dec
ss
std
inc
lahf
mov
mov
xchg
sub
lret
or
mov
mov
dec
pop
and
add
out
pop
or
es
xchg
jae
cld
pop
and
mov
addr16
mov
jne
pop
lret
push
dec
cmp
sbb
pop
pop
mov
pop
clc
pop
xchg
and
mov
mov
repz
daa
insb
in
and
out
xchg
dec
push
mov
sbb
icebp
sub
jle
into
cltd
imul
dec
sarl
pop
push
cmpsb
es
push
loope
imul
iret
popa
and
push
ds
cmp
daa
sbb
ja
add
add
push
imul
pushl
cmp
jno
pop
dec
inc
lret
rcr
xor
insb
jmp
shrl
inc
jo
enter
push
fistpl
push
gs
mov
pushfw
sbb
inc
ficompl
mov
mov
lods
or
jne
jl
or
xchg
ret
dec
outsl
push
push
or
cmp
cmp
ljmp
mov
inc
adc
mov
fdivrs
xchg
xor
fildll
xor
hlt
gs
mov
fdivl
vmread
pop
clc
stos
mov
xor
mov
movsl
cld
add
pop
adc
je
xchg
jb
mov
shlb
test
and
sbb
movsb
shrl
fsts
and
cmp
fildl
daa
stos
xchg
pop
test
and
push
add
push
pop
lcall
bswap
sub
sub
xchg
loope
movsl
pushl
ret
xchg
cmp
sbb
lods
idiv
cmp
sbb
mov
push
fimull
inc
mov
mov
arpl
jmp
ja
popf
addr16
pusha
mov
dec
pop
rcl
ja
sahf
pop
mov
dec
jbe
jb
addr16
scas
int
xchg
int
cli
fdivrs
shll
clc
cmp
cltd
cli
sbb
sarb
icebp
mov
push
negl
dec
movsb
mov
inc
xchg
add
push
or
xor
push
or
sub
sbb
pop
test
test
lds
xchg
jno
inc
lret
mov
into
js
das
dec
cli
leave
imul
and
xchg
popa
fdiv
xor
call
xchg
pop
std
cmp
xchg
lret
xlat
gs
fcomip
pop
adcb
cmc
inc
stos
or
outsl
idivb
rcl
js
sahf
js
icebp
cmp
push
mov
scas
jp
les
sub
stos
sbbl
mov
cmp
clc
lods
scas
test
int3
sbbl
leave
push
pusha
or
fbstp
jns
cmp
cmp
adc
out
das
jge
bound
mov
lds
push
iret
jo
fsubrl
add
add
adc
and
insl
call
test
jg
call
and
inc
test
xchg
subl
mulb
jp
cmp
ljmp
xchg
outsb
sub
jns
xchg
mov
xor
pushf
xlat
notl
popf
repnz
in
xchg
adc
cmp
std
sbb
sub
xchg
loope
mov
sahf
push
nop
dec
add
push
icebp
lret
push
dec
cltd
adc
push
add
sub
sti
jae
jle
sbb
fdivs
test
pop
pop
inc
adc
ss
mov
test
imul
stos
in
scas
xor
cmp
jp
adc
add
dec
cmpsb
pop
test
lcall
mov
jl
outsl
inc
push
sarb
sub
fs
sbb
xor
lahf
fadds
icebp
jns
or
push
es
arpl
imul
sbb
sbb
lods
movsl
jmp
sbb
and
fimuls
jbe
or
add
cmp
cmp
or
cmpsb
inc
rorl
scas
push
loop
mov
or
in
call
mov
out
scas
cmpsb
sbb
cmp
ret
pop
or
inc
jb
mov
lahf
jbe
xor
mov
adc
mulb
lea
hlt
lods
or
outsb
or
jmp
pop
sbb
std
adc
cs
aas
cltd
sbb
shr
das
mov
mov
loopne
pop
jo
sub
jle
in
mov
fiadds
inc
cmp
ss
mov
popa
fwait
dec
xor
scas
je
add
adc
mov
push
jno
mov
xor
xor
mov
loopne
push
add
ds
into
pop
mov
hlt
and
leave
xor
fwait
cltd
mov
mov
mov
lock
jmp
cmpsl
stc
stos
divl
xchg
scas
mov
inc
into
cmp
adc
outsl
test
loope
ss
leave
jne
ljmp
dec
in
sbb
sbb
push
xchg
test
clc
cmpsb
lahf
testb
push
inc
adc
mov
pop
ss
sub
mov
fisubrl
gs
push
mov
int
adc
mov
fwait
dec
pop
scas
inc
cmpsl
popl
add
popa
gs
ret
movsb
cli
scas
pop
inc
aad
inc
mov
mov
inc
xlat
dec
mov
xchg
fbld
jle
and
cmpsb
std
dec
aam
mov
orl
outsb
jne
lea
andl
imulb
clc
pushf
call
sbb
xchg
xor
movsb
repz
or
jecxz
push
js
mov
shrl
in
mov
les
xchg
mov
loope
adc
sahf
or
push
es
jb
cld
add
pop
xchg
dec
clc
mov
xchg
push
int
lcall
and
mov
popa
add
int3
xchg
mov
dec
push
push
test
add
lret
pop
cmp
incl
sti
sub
sub
or
add
es
sbb
push
es
and
idivl
rorb
notb
ja
data16
sahf
cmp
mov
test
mov
mov
or
pop
andps
sbb
hlt
lock
xchg
hlt
rcr
xlat
movsl
xchg
aaa
xchg
mov
out
fistps
fimuls
cmp
push
test
rcrl
inc
popa
lcall
cmc
xchg
test
dec
fs
out
mov
leave
add
mov
movsb
pusha
bound
xchg
mov
rcr
test
or
xlat
mov
mov
push
push
repz
add
dec
cltd
or
pop
fmul
sub
xchg
and
mov
pop
cmp
popf
int3
aam
repz
cs
jo
divl
mov
divb
jle
adc
data16
xchg
sbb
lret
loopne
and
or
js
xor
scas
lcall
lock
out
scas
mov
movsl
lods
inc
cmp
insl
cmp
rolb
cmp
or
sbb
xchg
cmp
in
push
scas
sbb
jle
mov
xor
push
or
in
cs
insb
les
jecxz
pop
hlt
cmpsl
mul
xchg
mov
sti
decl
fldl
fs
in
inc
and
dec
test
and
inc
std
ficompl
cmp
dec
mov
sbb
shl
jns
outsb
pushf
jl
and
xchg
je
mov
sahf
jp
cmp
cs
fldt
mov
mov
outsb
adc
cmp
dec
lret
push
sbb
lea
sub
inc
imul
and
push
push
aas
fstps
or
frstor
faddl
adc
js
daa
adc
into
mov
xor
enter
adc
cmpsl
ja
movsb
rclb
or
pop
sar
pop
std
je
pop
inc
mov
sub
jbe
jbe
dec
dec
mov
push
shl
and
test
adc
add
xorl
leave
ret
jle
push
in
daa
jge
xor
pop
sahf
ja
cmp
cmp
dec
adc
mov
mulb
cmp
mov
cli
inc
pop
adc
push
mov
jg
js
dec
cmp
jo
icebp
fbld
pop
push
jb
pushf
sub
mov
xor
ss
insl
std
dec
adc
cli
jl
xlat
adc
cmc
lods
cmpsl
int
dec
sub
cmp
jno
jns
in
push
inc
cmp
loope
xchg
adc
mov
cmpsl
cmpsl
shlb
xchg
adc
ds
imul
test
les
adc
add
andb
mov
and
sti
mov
fcomps
ss
push
jle
loope
insl
subb
mov
lcall
and
outsl
in
mov
xchg
pop
push
pop
fdivl
sub
adc
push
jno
mov
lcall
les
insl
mov
sub
push
mov
out
out
mov
adc
in
sbb
and
jg
jl
pop
mov
and
add
pusha
ljmp
mov
adc
dec
sub
arpl
je
pusha
icebp
add
mov
ds
dec
ja
lcall
outsl
cld
add
mov
dec
test
cmpsl
lret
and
fdivl
jb
mov
pop
sbb
mov
push
cmp
inc
test
aaa
sbb
mov
bound
or
out
push
fsubl
mov
jmp
mov
jne
sub
pusha
jo
adc
or
in
lods
in
cltd
fdivrl
dec
jl
xchg
iret
push
dec
dec
sub
sbb
test
pop
ret
fadds
inc
std
dec
pop
arpl
lret
in
cld
pop
flds
mov
es
shl
push
icebp
adc
push
cmp
in
icebp
or
mov
loop
push
dec
arpl
jmp
inc
popf
mov
adc
mov
pop
loope
xlat
pop
cmp
mov
xchg
adc
jp
push
mov
pop
sub
mov
stos
popf
loope
mov
mov
out
movsl
loope
add
movsb
dec
push
mov
js
fnstenv
out
xchg
clc
cltd
sub
sub
dec
mov
cld
rclb
mov
lahf
fisubl
push
mov
and
jbe
or
scas
shrb
fidivrl
decl
pop
sti
incl
das
jle
repnz
ss
sub
pop
xchg
jb
jnp
push
dec
adc
sbb
push
or
popa
mov
push
or
bound
xor
pop
test
in
rcll
test
xchg
adc
xchg
fisttps
in
mov
pop
mov
inc
xlat
jae
mov
cmp
cmovle
mov
xor
pop
std
sub
loopne
scas
lcall
xchg
push
xchg
in
jne
push
xor
add
mov
notb
addl
int3
push
leave
in
inc
xchg
in
mov
stc
aaa
jno
push
cwtl
or
mov
jg
add
and
sub
rorl
sub
xchg
dec
cli
and
jge
jl
jle
pop
or
paddq
scas
outsb
sub
lcall
or
mov
push
leave
loop
jnp
mov
jb
push
jnp
xchg
std
or
pop
jbe
sti
jge
sbb
sub
aas
add
fstps
outsl
cld
mov
push
and
ljmp
ret
ror
xchg
xor
fs
rol
jp
lcall
jmp
js
or
shrb
and
mov
mov
dec
xor
mov
sub
in
xor
je
lcall
xor
popa
xchg
bound
or
sub
aad
pop
in
mov
clc
jno
pop
adc
and
dec
push
jle
sub
test
sbb
mov
push
sbb
pop
sub
outsb
dec
mov
dec
xchg
xor
or
mov
cld
cmp
mov
mov
push
pop
mov
or
pop
imul
lds
xor
ss
sub
push
push
inc
cltd
sub
ljmp
dec
daa
xor
mov
and
inc
mov
cmp
roll
dec
jo
bound
sub
outsl
call
mov
mov
out
in
xchg
adc
sbb
cmp
test
je
adc
xchg
dec
imul
pop
test
call
daa
hlt
fidivl
lea
mov
sub
stos
std
pop
cs
mov
popf
lods
insb
add
nop
gs
jnp
outsl
lcall
sub
leave
mov
cmpsl
in
fcmove
and
xchg
mov
int3
xchg
icebp
lahf
cli
mov
fdivs
loop
xchg
es
cmp
add
arpl
push
arpl
call
mov
jg
gs
inc
rcr
pop
scas
imul
or
out
mov
clts
xor
jecxz
lds
push
in
les
xchg
push
repnz
in
mov
shl
or
cltd
and
inc
shrb
jg
aam
jle
loop
inc
daa
pop
in
push
es
pop
pop
lods
or
repnz
xor
inc
dec
iret
cmp
jle
cmp
cmp
loop
xchg
cmpsb
lods
mov
fistpll
pop
leave
outsb
lret
aam
fs
arpl
sub
dec
ret
mov
add
push
dec
add
push
out
mov
mov
push
mov
mov
scas
xchg
repnz
xor
rclb
movsb
in
xchg
pop
lcall
xor
jmp
cli
mov
jnp
das
or
dec
xchg
jne
fsubl
mov
cmpsl
sbb
inc
sbbb
mov
mov
sub
push
mov
je
pusha
add
mov
popf
dec
sar
sbb
lea
cmp
repnz
pop
in
icebp
and
lret
mov
imul
pop
fcmove
in
xor
ss
ja
sub
add
push
cltd
sbb
ja
das
les
mov
rcr
jno
dec
sbb
mov
aad
push
add
add
xchg
mov
mov
jmp
mov
aaa
xchg
cmp
test
xor
push
dec
adcb
xchg
jp
xlat
rcrb
pop
addr16
sti
xchg
adc
sub
sti
xchg
lods
inc
xor
and
aam
out
mov
mov
xchg
ficoms
aad
mov
sahf
repz
xchg
jecxz
adc
stos
pop
jns
icebp
mov
xchg
adc
stc
xchg
jg
movb
clc
jb
cmp
std
pusha
psubusb
dec
sub
cmp
mov
xchg
out
mov
push
outsb
lock
clc
pop
mov
jl
jg
ljmp
rol
push
add
lret
movsl
add
pusha
lahf
out
mov
push
xor
gs
jge
mov
shlb
dec
sub
mov
imul
outsb
xor
sub
cmp
mov
dec
shr
jg
inc
ret
sub
je
imul
xchg
fmuls
add
inc
test
fldl
aas
sbb
and
inc
pusha
dec
sti
negl
loope
int3
add
in
xor
loopne
leave
pop
packsswb
jle
loop
or
dec
ds
mov
leave
mov
cmp
fwait
lcall
inc
arpl
gs
mov
shl
jmp
aad
imul
sub
or
inc
mov
fs
add
jecxz
fsubp
xor
sub
mov
pop
mov
dec
add
les
sub
push
jmp
mov
jne
mov
enter
notl
data16
fcompl
mov
call
clc
scas
xlat
std
xlat
sbb
push
xchg
and
out
clc
dec
mov
out
lret
push
and
or
sbb
or
fimuls
pop
mov
jns
sbbl
pop
or
sub
test
pushf
mov
fsubl
mov
rcrl
jno
push
adc
jae
or
lods
jnp
mov
or
mov
mov
in
lahf
bound
mov
jecxz
adc
add
popf
sti
push
icebp
or
jno
sti
cltd
sbbl
int3
and
sbb
pop
pop
xchg
sbb
cmp
xor
dec
adc
and
test
lods
fldl
sub
sub
insb
jno
icebp
xor
xor
adc
jne
int
mov
xor
in
imul
inc
adc
jp
jle
add
subb
mov
or
or
xchg
sahf
repnz
fwait
test
push
push
jb
stc
stos
sub
fwait
pop
mov
test
insl
in
sbb
pop
push
xor
mov
in
ret
rcll
sbb
pushf
push
pop
test
shrb
xor
jnp
xchg
pop
xor
stc
je
jo
leave
mov
mov
sbb
pop
icebp
jmp
dec
incl
xchg
dec
imul
jmp
sub
pop
dec
in
add
call
adc
pop
add
push
cmp
mov
daa
adc
mov
xor
push
and
xor
popf
out
sub
roll
ja
cmp
addr16
inc
test
dec
scas
jns
add
and
mov
inc
sbb
imul
add
jle
mov
dec
jns
andl
pop
sub
or
ja
xor
outsl
pop
test
and
jns
loope
jmp
xor
into
jmp
ret
cmp
aaa
jl
lret
add
jno
sbb
push
sbb
ja
hlt
lret
dec
in
sub
inc
xchg
int3
mov
add
mov
in
fs
aaa
mov
ret
lods
mov
inc
push
and
jno
push
sbb
pop
sub
aad
xchg
and
test
push
movq
dec
mov
out
push
jecxz
mov
push
sbb
lods
or
mov
pop
mov
sub
add
cmp
pushf
add
inc
and
pop
jl
lret
mov
adc
or
add
cmpsl
shr
mov
js
iret
add
sbb
outsl
into
jnp
mov
test
or
push
mov
insb
xchg
repnz
inc
sti
jle
fldt
mov
fdivrs
jge
sub
jge
adc
push
sbb
cmp
fiadds
dec
fnsave
sbb
cs
test
jle
jae
xchg
imul
inc
mov
adcl
adc
dec
mov
xchg
icebp
std
or
js
fwait
pop
cmp
jmp
gs
mov
mov
xor
iret
mov
sbb
icebp
sbb
decb
inc
out
or
pop
xchg
mov
adc
add
fcomip
stos
leave
rorl
les
sub
jae
icebp
mov
lret
rcr
movsb
out
or
xor
lahf
pop
pop
adc
mov
lods
adc
add
inc
repz
and
scas
movsb
sbb
mov
jl
jge
or
clc
addr16
xchg
and
mov
fninit
ret
out
jmp
test
sbb
sbb
lahf
test
push
mov
lods
sti
cmp
mov
clc
adc
insb
push
rorl
arpl
adc
adc
pop
into
and
loope
les
push
lret
loopne
lea
subb
or
sub
mov
test
pushf
jae
mov
insl
xor
or
jg
sbb
test
cmpsl
jno
jnp
shrl
int
push
icebp
inc
cmp
and
das
mov
mov
pop
inc
add
xlat
and
fstpt
mov
jge
bound
jne
jbe
nop
mov
adc
out
mov
xchg
fdivrs
and
popa
lcall
and
mov
push
dec
hlt
subb
jle
cli
daa
insl
lods
xchg
jae
in
adc
in
mov
sbb
subb
repz
loope
enter
jbe
in
loope
fwait
dec
pop
cmp
into
ss
into
clc
mov
push
addb
daa
outsl
xchg
dec
sbb
stos
addr16
push
dec
imul
rorb
xchg
data16
pop
lods
adc
test
rorl
das
add
in
in
push
int
add
ja
add
cmp
mov
lahf
mov
and
xor
out
pop
adc
icebp
mov
jg
ret
add
pop
stc
loop
mov
fnsave
les
int
dec
push
insb
shl
roll
sti
js
mov
cmp
jbe
or
pop
inc
adc
inc
out
add
jb
das
aas
hlt
out
ret
pusha
inc
bound
adc
xchg
loopne
xor
out
jl
mov
ja
ffree
cld
adc
test
sbb
mov
inc
cltd
xchg
pop
call
ss
and
xor
fsts
stc
mov
mov
or
dec
in
xchg
out
mov
jbe
push
jae
fwait
mov
outsl
jo
into
push
dec
adc
movsl
sub
inc
test
xchg
dec
mov
pop
clc
leave
sbb
xchg
ret
daa
push
in
dec
inc
fs
pop
aam
sub
or
pop
cwtl
gs
dec
aas
inc
loop
sbb
scas
lcall
loopne
jecxz
test
jo
data16
fs
dec
sub
adc
insb
repz
xchg
aam
adc
mov
sbb
inc
adc
movsl
test
loope
sbb
push
push
xor
outsb
sub
jae
in
jl
jne
repz
and
pushf
je
iret
psubsw
sub
cmpsl
lock
pop
lea
mov
ja
mov
xor
sbb
in
lods
mov
xchg
and
push
insb
xchg
popa
dec
push
cltd
in
icebp
adc
dec
jne
stos
popf
xchg
pop
add
inc
pop
sbb
stos
mov
adc
cltd
fucomip
cmc
sub
lret
addr16
stos
out
bndldx
jp
pusha
push
mov
mov
nop
sbb
xlat
ret
dec
pop
out
jmp
dec
mov
loop
lahf
enter
imul
inc
pop
pop
cmp
in
ret
cmpl
cmp
cmp
lock
add
outsl
nop
mov
xor
jo
cmp
cmp
add
clts
or
test
pop
dec
fwait
mov
cld
cwtl
mov
dec
push
push
push
xchg
mov
pop
push
mov
cmp
stos
mov
cmpsl
mov
pop
lods
adc
ret
lds
add
out
xchg
lea
cs
pushf
scas
dec
xchg
xor
stos
push
xchg
dec
popa
lock
dec
out
shr
popa
clc
jecxz
xchg
add
pop
inc
pop
dec
cmp
js
pop
rol
or
xor
jle
repnz
rcrl
loope
ds
and
stos
flds
std
or
sub
and
and
pop
dec
scas
add
xchg
lods
mov
cwtl
es
jae
mov
xor
repz
add
cmp
mov
stc
sti
jo
push
imul
ret
std
stos
or
lret
mov
mov
pop
cmp
cwtl
gs
pop
out
dec
aam
jl
mov
ds
or
mov
cltd
mov
adc
imull
cwtl
imul
mov
ss
dec
enter
lds
cwtl
xlat
push
xchg
push
rorl
rcll
lods
push
shrb
dec
cmp
enter
popf
dec
mov
pop
pop
lods
iret
mov
mov
inc
in
push
jb
outsl
outsl
xor
sub
ss
mov
mov
pushf
in
enter
cmp
addr16
aaa
cli
seto
cmp
push
cmp
cmc
adc
sub
or
push
dec
stos
cli
and
ret
push
adc
xor
jnp
int
mov
rorb
inc
enter
fimuls
mov
loope
sbb
in
adc
mov
test
dec
cmp
mov
push
popf
pop
add
incl
testb
mov
mov
sub
lock
jns
loopne
xchg
pop
add
testb
scas
push
lret
adc
in
pop
lret
fbld
push
aaa
repz
test
nop
mov
cmc
add
and
arpl
sub
scas
lds
inc
dec
cld
icebp
ja
push
cmc
setns
mov
cltd
xchg
test
out
in
lcall
out
add
leave
push
cmpsb
dec
int3
adc
jne
nop
lods
data16
pop
in
push
mov
add
dec
xchg
cmp
inc
add
xchg
sti
cmc
sub
jns
inc
xchg
stos
lea
cmp
pop
enter
clc
out
ja
shrl
loop
xor
dec
dec
lds
mov
fldl
xchg
bound
mov
push
xor
mov
jnp
push
inc
test
or
repnz
dec
add
xlat
aad
sub
stc
jae
mov
sub
test
pop
sbb
fcoml
rolb
sub
and
inc
btc
fidivrl
push
cmp
insb
repz
sarl
lods
sbb
fists
jnp
mov
test
shlb
and
push
sti
jle
mov
loopne
mov
inc
sbb
sub
fidivrs
hlt
mov
push
mov
sahf
xchg
cmp
call
xchg
sub
cmpsl
push
imul
sahf
mov
test
push
jns
xlat
cli
mov
adc
dec
scas
das
mov
in
mov
in
dec
arpl
inc
jne
in
sbb
or
adc
push
icebp
repnz
push
shlb
aaa
jl
cmp
fistl
leave
push
imul
sbb
jbe
sarl
andb
sub
dec
pop
enter
lret
loop
mov
shr
xchg
mov
imul
les
xor
fisttps
imul
sub
in
add
andl
jb
dec
cmp
sub
and
or
sbb
icebp
lock
sbb
cmc
fists
fcoml
jae
outsl
lret
repz
pop
fldt
loope
mov
outsl
cmp
sub
outsb
mov
push
inc
stc
and
out
pop
fsubrs
cmp
pop
push
and
daa
iret
std
mov
mov
adc
push
out
push
xlat
cmp
xchg
sub
mov
mov
and
je
sarb
sub
adc
push
sarb
xor
movsb
pop
jge
pushf
imul
pop
mov
bound
test
mov
pop
movsb
mov
dec
or
mov
fcmovu
enter
movsb
test
out
jecxz
addl
cmp
negb
jns
icebp
rclb
sbb
out
leave
sar
lret
mov
push
loopne
push
in
cmp
and
jae
std
and
pop
inc
xor
or
push
cmp
inc
sahf
cltd
out
adc
xor
mov
jecxz
fs
shl
fdivrs
adc
xchg
cmpsb
rcrl
jne
inc
cmc
mov
mov
xorb
mov
add
stc
test
mov
mov
xchg
pop
xorb
stos
inc
mov
sbbb
mov
test
cmpsb
mov
test
out
xchg
lcall
in
fcoml
ljmp
mov
insl
fwait
xchg
pop
jg
sbb
mov
je
mov
xchg
cmp
push
stos
cmp
pop
int3
cmp
jne
push
ret
sahf
or
push
mov
out
jl
adc
fcompl
xchg
sbb
or
aam
hlt
mov
jb
sti
sbb
cwtl
je
idivb
mov
add
xchg
lods
lods
add
jmp
dec
scas
mov
xlat
stos
insl
or
push
sub
sub
das
fwait
aaa
push
pushf
loop
in
mov
adc
out
xchg
out
push
jo
or
or
pop
inc
add
aam
mov
pop
mov
push
pop
jnp
mov
mov
mov
add
repnz
imul
fcoms
cmp
xchg
mov
or
pop
ja
xchg
adc
and
pop
in
inc
sub
jb
sub
push
lret
mov
mov
xor
and
shld
xchg
mov
or
lcall
lahf
xor
lods
dec
xor
cmp
cld
and
inc
mov
jbe
movb
fsubrs
add
dec
out
add
ljmp
in
lods
jb
mov
xor
shrl
loopne
add
bound
daa
shrl
jecxz
les
div
icebp
or
out
test
cmpsl
and
sarb
dec
xchg
mov
fcmovne
mov
add
pusha
rcll
fwait
sbb
pop
push
mov
mov
add
push
push
icebp
adc
and
add
cmp
ret
fstps
jge
outsb
idivb
adc
inc
xchg
sub
or
sub
shll
pop
out
jne
rcrb
test
ja
push
lock
sti
pop
popf
cmp
aad
nop
leave
stos
dec
fsubs
sub
stos
xchg
push
dec
pop
add
and
dec
fildl
fs
jmp
std
movsl
icebp
repnz
ret
or
mov
gs
shrb
minps
jl
movsl
push
fldenv
push
or
add
stc
testw
jecxz
addr16
pop
stos
insl
jne
out
or
jae
xchg
xchg
icebp
xlat
mov
mov
iret
mov
cmp
mov
jo
iret
inc
jbe
jnp
pop
inc
pop
out
sbb
dec
adcl
mov
movsl
imul
nop
ret
mov
add
sbb
and
mov
and
fisttpll
imul
add
out
jno
dec
insl
insl
xor
int
shll
lret
jle
pop
testb
add
lahf
dec
mov
inc
testl
mov
fadds
jle
in
add
std
leave
lcall
jo
icebp
mov
daa
into
inc
stos
movsb
aaa
add
add
mov
jno
lods
je
mov
mov
into
sti
cmpsb
add
xlat
ds
push
mov
decb
inc
popa
outsl
mov
mov
adc
inc
jno
mov
dec
stos
mov
pop
imul
and
pushf
jne
mov
testl
enter
ret
cmp
nop
push
fisubs
aad
addr16
repnz
jae
pop
mov
pushf
daa
fistl
lods
insl
jl
aad
adc
dec
dec
sbb
ss
push
pop
push
aaa
aad
sbb
popf
add
movsb
cmpsb
mov
pop
sbb
push
and
and
inc
jns
fsubrs
lods
in
sub
inc
or
inc
mov
test
push
xchg
push
xor
scas
icebp
test
jecxz
rcll
dec
mov
in
xor
pop
mov
jnp
cmp
xchg
jl
lcall
sub
fldl
lea
xchg
xchg
aam
mov
mov
jns
mov
xchg
movsl
outsl
inc
fldpi
mov
jb
dec
mov
loope
sbbb
push
imul
nop
sub
and
cmpsl
repnz
imul
or
mov
test
dec
pop
adc
je
int
mov
movsl
jne
outsl
shll
and
jle
push
inc
sbb
ret
hlt
cld
roll
sub
clc
lock
sub
sbb
testl
lahf
insl
jbe
dec
icebp
sub
and
jne
mov
jl
adcb
mov
lds
clc
fldcw
outsb
pop
std
popa
sub
lcall
mov
inc
cli
mov
cltd
fldl
shlb
movsb
les
movsb
jl
mov
shrb
ret
jle
pop
in
jp
xchg
fcomip
cli
jo,pt
arpl
out
pushf
aaa
xchg
les
mov
push
mov
sub
mov
mov
mov
outsl
loopne
mov
jg
pushf
jnp
mov
cmpsl
pop
push
dec
mov
fs
mov
or
clc
out
push
sbb
mov
jmp
es
popa
jle
imulb
fs
jns
data16
sbb
leave
sbb
popf
shlb
or
test
mov
xchg
stc
std
repz
jnp
adc
inc
xor
pop
outsb
mulb
mov
nop
out
or
add
mov
sub
popa
adc
fsubrl
inc
fildl
mov
jmp
popf
pop
ret
jnp
hlt
inc
cmp
test
maxps
jl
jo
add
lods
ffreep
mov
adc
ljmp
sti
mov
subl
in
mov
imul
lods
pop
pop
and
scas
jne
mov
out
iret
jns
xchg
pop
aas
adc
sbb
mov
idivb
cli
add
fadd
mov
sub
mov
mov
adc
rcr
add
lock
cmp
push
xchg
pop
notl
or
fidivs
outsl
mov
dec
repnz
das
les
pop
rcrl
std
gs
addr16
dec
xchg
dec
adc
cmpsb
adc
mov
lods
loopne
jnp
push
mov
push
scas
loopne
lret
bound
test
testl
push
jp
xchg
test
divl
repnz
cmp
adc
enter
cmpsl
out
inc
arpl
and
out
cmp
cli
aaa
mov
push
or
mov
jmp
out
pop
mov
daa
jmp
les
mov
es
test
jecxz
xchg
fsubrl
pushf
or
not
shlb
test
out
cmp
push
ja
orb
pop
std
insb
clc
mov
fwait
movsb
hlt
ds
mov
or
dec
movsb
mov
dec
addr16
or
aad
scas
fstpl
into
in
gs
arpl
hlt
sbb
jg
rorb
aas
imul
imul
mov
or
push
bound
dec
xchg
inc
xor
stos
xchg
xor
dec
lret
test
das
or
mov
imul
sub
movsb
mov
and
jae
jnp
clc
stos
mov
sub
movsb
xor
xor
xchg
fsubrs
jo
fmuls
xchg
imul
jle
pop
loop
mov
incl
mov
daa
and
sub
push
loopne
shl
insb
and
inc
pop
dec
out
mov
mov
das
aam
adc
imul
scas
stos
inc
repz
lock
repz
dec
and
mov
imul
inc
inc
jp
xor
cwtl
mov
int
repz
xor
imul
aaa
stos
aad
xadd
lea
outsl
push
scas
jns
aad
cmpsb
ficomps
int
and
pop
imul
mov
ret
sbb
or
mov
jns
push
jg
inc
dec
add
mov
pop
jecxz
push
jl
ljmp
int
xchg
xor
les
call
clc
push
movsl
ds
popa
or
icebp
sub
leave
adc
clc
adc
sbb
scas
es
pop
inc
jnp
sarl
mov
stc
push
jmp
bound
loopne
mov
xchg
xchg
and
or
fwait
aam
pusha
mov
outsb
mov
sub
mov
mov
repz
mov
je
xchg
jecxz
inc
scas
mov
dec
adc
shrb
out
sub
pop
stos
cmc
jno
or
faddp
jb
cwtl
movsb
jl
bound
lahf
hlt
fidivrl
bound
cmc
sbb
mov
push
add
and
adc
and
mov
insl
lds
sti
and
jns
cmpsl
adc
or
incl
loope
loopne
xchg
adc
fs
fimull
movsl
dec
pop
mov
add
xchg
inc
gs
popa
movsl
pusha
mov
sti
push
add
enter
insb
xlat
inc
aaa
popw
add
insb
sbb
pop
sub
xor
icebp
jmp
lock
aaa
and
push
xchg
jne
mov
add
test
jecxz
push
loop
jns
mov
stos
xor
mov
arpl
jne
pop
lods
stc
mov
mov
js
fcomip
adc
popa
scas
shl
and
pop
out
cmp
insl
shrl
and
dec
push
mov
mov
aad
sub
sub
sub
leave
scas
test
es
cltd
lods
in
jbe
fimull
jmp
xchg
rclb
mov
cmovs
jecxz
sub
cmp
push
popl
inc
sub
rcr
cmpsl
je
push
imul
cmp
addb
mov
mov
cmp
adc
pop
pop
fwait
dec
clc
sbb
pop
pushf
and
and
push
xchg
push
repz
cmpsl
xchg
sbbb
test
mov
loopne
call
lock
push
add
push
mov
aas
sbb
or
sbb
lea
pop
jo
dec
cwtl
push
fwait
cmp
jp
cmc
data16
test
mov
test
in
sub
pop
cmp
inc
lods
adc
test
add
mov
pop
dec
and
cmp
cwtl
je
mov
jns
mov
pusha
lods
inc
fwait
shrb
ljmp
mov
test
hlt
add
mov
movsl
aaa
repnz
xor
pusha
faddl
mov
mov
stos
and
mov
in
jle
imul
mov
outsb
dec
pop
cmp
dec
lock
std
mov
mov
fdivrs
pop
xchg
fiaddl
out
and
mov
mov
in
stc
fsubl
mov
jne
cmp
and
jmp
loop
adc
xchg
in
nop
es
mov
call
adc
sbb
fisttps
adc
mov
cmp
cmp
mov
fstpt
sub
mov
sub
pop
in
call
int3
cmp
das
idivl
repz
lret
dec
sbb
call
lret
in
ljmp
add
enter
and
jno
cs
or
mov
jbe
and
jae
inc
mov
scas
mov
sub
pusha
xchg
lahf
push
xor
cmp
sar
and
xor
test
ss
inc
push
repnz
ss
mov
imulb
stc
xchg
xchg
cltd
repnz
add
cmp
ret
inc
adc
and
aas
pop
push
pop
repz
sbb
or
daa
push
leave
mov
mov
jne
xchg
mov
jmp
pop
outsb
in
aaa
adc
xor
insl
sti
adc
sub
sbb
and
test
jl
arpl
fisubl
int
push
push
lahf
call
enter
test
out
dec
test
lock
cmp
cmpsb
loop
xchg
rolb
popa
shrl
std
call
mov
das
dec
cmpsl
mov
lods
inc
add
xor
push
pop
aad
sub
aas
and
andl
cmpsb
adc
sub
xor
sub
int
in
inc
shlb
stc
nop
jmp
dec
enter
popf
outsb
add
mov
xor
jb
inc
jecxz
fstpl
in
xchg
push
test
jbe
jno
dec
push
aam
lahf
pop
mov
lcall
fisttps
aam
daa
mov
outsl
std
movsb
dec
adc
lock
mov
push
in
xor
mov
mov
pop
mov
dec
xor
inc
sbb
xchg
ljmp
xor
rol
ja
sub
mov
mov
data16
std
negb
mov
notl
dec
push
jecxz
and
loopne
add
push
pop
mov
insb
into
mov
cmp
ljmp
cltd
and
dec
jno
imul
fldcw
xor
pushf
out
pop
scas
dec
stos
jge
pop
add
test
mov
sbb
push
das
mov
inc
push
sbb
push
movsb
push
pop
inc
adc
mov
pop
faddp
mov
jo
scas
fsub
ljmp
sub
mov
sbb
imul
ja
pop
stos
mov
dec
xchg
xor
jp
sub
fidivrl
je
xchg
das
inc
mov
inc
pop
jo
push
cmc
mov
inc
mov
icebp
lods
stc
push
enter
mov
loopne
jmp
fnstsw
mov
xchg
fstpt
gs
jbe
mov
pop
xchg
aaa
lcall
mov
mov
dec
lock
arpl
out
es
imul
cmc
push
sbb
add
mov
sbbl
xchg
and
stc
xorb
xor
push
pop
nop
in
jns
inc
adc
lret
jp
scas
addr16
enter
push
cmp
sti
mov
aam
cmp
movsl
cmp
into
lret
push
adc
add
test
sub
test
stos
int3
fs
xchg
push
inc
shlb
push
subl
add
rcrb
ret
push
rorl
xchg
lods
movd
and
popf
shrb
lahf
mov
jp
shll
xor
pop
dec
jmp
or
cmp
xor
iret
push
mov
decl
in
pop
sarb
pop
add
mov
adc
ja
and
scas
inc
and
xor
lcall
mov
sbb
fnstsw
cmc
fildll
test
xchg
inc
jae
aaa
add
mov
xchg
cmc
push
repz
xor
seto
mov
mov
xor
xor
pop
es
inc
add
adcb
or
jmp
mov
push
inc
mov
cmpsl
inc
clc
inc
je
pushf
inc
push
lds
dec
mov
mov
xchg
inc
in
pop
out
mov
dec
pusha
and
outsb
insl
in
jp
fwait
jae
cwtl
sahf
xor
out
iret
cmp
or
sub
shr
sahf
xchg
scas
fsubrp
insl
pop
fnstenv
dec
jmp
sbb
mov
sti
mov
aad
jo
mov
fcompl
push
call
lahf
adc
aas
out
or
mov
cmp
scas
cmp
movsl
in
arpl
mov
mov
adcl
xor
adc
lret
mov
cmp
pop
enter
out
cmpsl
add
jno
xor
out
mov
push
fiaddl
mov
sahf
enter
loope
scas
sahf
insb
sahf
adc
cmp
cmp
push
hlt
rcrl
xlat
outsb
mov
arpl
cmp
mov
cli
dec
xchg
iret
jns
push
xchg
imul
mov
add
jnp
movsl
cld
dec
dec
aas
xor
sub
and
out
mov
push
lea
cld
sbb
mov
fbstp
xchg
mov
lea
cmp
test
jno
mov
inc
inc
push
xor
clc
mov
inc
dec
xor
xchg
fisttpll
hlt
or
jle
push
xchg
xor
or
fstl
xor
add
imul
shll
in
in
mull
cwtl
lock
fildl
mov
out
sub
fldt
pop
imul
js,pt
into
mov
test
stc
xchg
mov
mov
xor
sti
sbb
jge
repz
repnz
xchg
jmp
test
mov
xchg
xchg
jne
mov
push
les
sar
cmp
inc
xchg
xchg
push
xchg
int3
mull
mov
mov
mov
cmpsl
mov
lods
and
aas
or
jno
std
cmpl
out
sub
out
popf
call
add
or
cmp
lods
ficompl
shll
ja
subl
dec
jmp
ret
cli
sarl
dec
jl
hlt
cli
xor
dec
out
outsb
mov
jp
or
and
movsl
stos
jno
insl
jp
dec
push
repnz
outsb
test
xlat
xchg
aas
incl
push
sub
inc
orb
aas
jb
mov
imulb
ds
int3
mov
mov
int
push
sub
add
sbb
dec
lods
xor
sahf
stos
adc
cmpl
scas
push
fdivs
cwtl
push
filds
lds
les
inc
pusha
sub
addr16
and
xchg
inc
add
ret
loopne
push
fbld
xchg
pusha
js
in
mov
fcmovnb
mov
inc
push
shrw
jmp
mov
je
mov
fwait
push
cmpsl
lods
orb
cltd
sbb
xchg
mov
test
mov
loope
sbb
sbb
jo
cld
out
cmp
xchg
mov
imul
add
cmpsl
sub
xor
call
stos
out
mov
in
mov
std
pop
lods
nop
sahf
nop
cmp
push
lret
lcall
pushf
xor
mov
dec
jge
inc
repnz
inc
imul
stc
push
mov
in
lcall
cmpsb
les
int3
imul
leave
pop
cmp
out
mov
ret
jp
lds
dec
pushl
adc
stos
mov
sub
mov
shlb
sahf
push
xor
fsub
imul
jmp
mov
popf
enter
or
pop
jl
test
xchg
mov
push
cmp
jg
mov
test
dec
mov
lock
test
inc
insb
popa
fdivrp
idivl
lret
and
jp
push
and
je
call
jle
out
push
and
add
bound
daa
xor
mov
jnp
gs
call
jg
dec
xor
lods
mov
cld
jne
stc
gs
and
pop
adc
mov
pinsrw
lahf
mov
mov
xlat
pop
mov
ret
fmull
sub
std
scas
mov
fildll
inc
xor
lcall
jmp
out
jle
repnz
negl
and
mov
das
sub
int3
push
cmp
xchg
lahf
mov
movsl
mov
stos
loopne
push
add
and
jmp
jbe
dec
insb
jb
mov
pop
ljmp
inc
adc
inc
cmc
cltd
data16
movsb
adc
fistpl
sarb
mov
cltd
cmp
cmc
imul
std
pop
mov
xor
add
out
xchg
xchg
cli
adc
cwtl
stc
mov
test
into
cli
cmp
ret
sbb
mov
push
jp
sbb
test
mov
stc
sti
pop
adc
test
push
xor
lcall
or
mov
and
push
push
xchg
icebp
xor
bound
pop
inc
in
dec
cwtl
popf
das
repnz
xlat
add
mov
and
mov
cmp
push
add
pop
xorb
je
les
or
xor
sub
xchg
negb
cmpsl
js
dec
fldcw
test
es
cwtl
out
pop
xchg
adc
nop
bnd
adc
add
inc
lds
daa
lds
dec
cli
dec
mov
push
mov
loop
mov
xor
aad
mov
adc
mov
push
pop
fcom
mov
in
and
mov
xchg
idivl
add
pop
loopne
scas
mov
inc
inc
mov
pop
sbb
mov
lds
clc
jbe
and
stos
xchg
push
xchg
les
lcall
ret
sahf
jge
cld
mov
and
add
pop
dec
stc
outsw
pushl
inc
out
dec
popa
mov
xchg
pop
loopne
imul
jl
sub
sbb
mov
adc
pop
xorb
arpl
jl
pop
cli
test
xchg
jo
mov
and
push
sbb
lock
in
vmrun
cmp
fstpl
fdivrl
nop
aam
cmp
movsb
loope
in
xchg
jg
pop
jle
sahf
mov
int3
xchg
sbb
leave
scas
mov
jge
dec
add
jne
out
dec
pushf
adc
dec
rcr
iret
xchg
scas
subl
pop
push
mov
aad
sbb
in
imul
jne
and
cmp
lods
sbb
add
cmp
pop
jl
fsubrs
call
dec
sub
sbb
sub
aad
jnp
mov
dec
repnz
mov
cwtl
pop
sub
inc
into
mov
xchg
sbb
jg,pt
mov
or
popa
xchg
mov
mov
mov
aas
addl
push
pop
aad
jp
faddl
stc
out
nop
push
sbb
stos
add
sbb
stc
fwait
dec
push
add
enter
jl
rol
loop
rol
addr16
call
pop
push
rcl
add
aam
shll
lcall
call
sbb
fs
dec
sbb
xchg
pushf
xchg
stos
movl
aas
pop
sbb
pop
xor
add
pop
push
add
mov
mov
mov
sbb
shll
icebp
idivb
sahf
daa
mov
aaa
jbe
dec
add
xchg
test
mov
sub
and
aad
pop
pop
cltd
dec
cmpsl
inc
jmp
arpl
adc
inc
roll
lahf
xor
sub
mov
push
roll
sub
andb
lahf
cmp
add
ja
sub
fldcw
js
dec
xchg
andb
outsl
ss
cmp
stc
js
inc
and
insl
add
into
bound
test
xor
lods
push
repnz
faddp
mov
xchg
insl
sub
lahf
inc
cmc
je
cmpsb
dec
dec
xchg
fists
out
dec
mov
pop
xchg
mov
cwtl
int3
lret
add
aas
mov
ficompl
xor
fnstcw
push
push
das
push
jg
sub
mov
lds
mov
ds
sub
test
jae
scas
jp
xchg
shll
mov
fldl2e
cmp
jmp
and
pusha
xchg
sbb
test
inc
sub
hlt
cmc
sbb
mov
sub
mov
pushf
repz
sub
imul
sahf
adc
xlat
lds
sub
mov
iret
xchg
mov
or
jbe
mov
jnp
dec
cmp
mov
loope
jge
and
cltd
cltd
stos
push
insb
les
aam
sbb
inc
push
dec
in
mov
popf
faddp
pop
mov
mov
icebp
hlt
mov
lock
divl
dec
das
and
sub
ret
or
adc
xchg
lret
mov
xor
add
cmp
sbb
add
and
cs
mov
adc
leave
cli
pop
jge
and
rorb
popf
je
sub
jg
mov
pop
sbb
fmull
pop
cmp
test
add
shlb
ljmp
pop
shlb
jno
aas
push
cmp
arpl
mov
adcb
insb
test
pop
sub
inc
adc
adc
gs
je
sub
dec
xlat
cli
insb
sub
int3
cltd
mov
push
or
adc
jns
jbe
inc
or
ret
les
cltd
rolb
add
mov
add
xor
aaa
repnz
iret
loope
jno
jp
fcmovb
jnp
xchg
mov
sub
add
das
jnp
loopne
test
and
iret
fs
add
rcr
mov
das
imul
inc
inc
faddp
enter
les
sahf
pop
mov
pop
faddl
push
mov
jb
xlat
idivl
jno
stc
or
jo
int
aaa
sub
pop
test
and
in
dec
fnstcw
in
sbb
arpl
int3
fwait
xor
mov
sahf
les
int3
dec
mov
rorb
jno
mov
mov
stos
sbb
xchg
push
icebp
push
scas
pop
push
ret
sub
and
jp
dec
cwtl
cmpsb
cmp
xor
mov
cli
fdivs
and
ja
jo
or
xor
sub
bound
pop
in
xorl
xchg
jo
and
pop
sbb
or
cmp
aad
dec
loopne
xchg
dec
cs
scas
jmp
push
or
aaa
fimuls
and
and
movsb
push
push
fcomi
mov
std
xchg
and
cmp
sbb
jl
scas
mov
in
lcall
fcom
jbe
mov
in
push
std
mov
ljmp
push
xlat
push
sbb
lods
sbb
jle
andl
pop
inc
test
out
scas
adc
push
sti
sub
fnstenv
clc
mov
push
lods
pop
mov
jmp
testl
lock
push
and
jo
xchg
mov
ficoms
jo
insl
outsb
mov
dec
mov
jecxz
insb
imul
in
mov
fsubrs
pop
dec
cmpsb
lea
xlat
mov
imul
lock
pop
and
loope
mov
insb
cmpsb
sub
and
lahf
adc
adc
mov
xchg
es
das
add
pop
inc
jns
cwtl
jno
rcll
aaa
in
rorb
and
les
xchg
scas
pop
lret
popf
out
mov
mov
push
loop
pop
mov
xor
mov
into
xchg
mov
cmp
ljmp
lods
mov
mov
int3
pop
push
jl
je
sub
int
repnz
dec
push
repnz
or
cmp
shrl
into
jno
cmp
pushf
pop
icebp
jmp
add
mov
gs
imul
cmp
xchg
ret
mov
dec
imul
addb
outsb
pop
scas
pop
push
repnz
lds
out
imul
adc
scas
leave
xlat
jae
adc
lock
aam
cmp
ss
fstpl
mov
sub
push
scas
sti
fistps
lods
dec
jb
jecxz
cmp
push
rcll
xor
cld
fdivp
dec
jb
mov
gs
aas
jl
sub
test
mov
adc
jb
popf
fistps
cmp
dec
or
jbe
arpl
stos
mov
fsubs
mov
jge
cmp
mov
push
loopne
inc
sub
lahf
loop
xchg
aam
ret
scas
in
sbb
fimull
xor
insl
push
pop
test
and
xchg
mov
shrb
hlt
jb
adc
push
and
cwtl
imul
je
adc
mov
mov
cltd
sahf
cmp
scas
xchg
dec
out
gs
jp
add
sub
xor
movsb
cli
mov
xor
imul
dec
pop
fcmovb
xlat
popf
push
mov
test
adc
data16
mov
inc
jnp
or
stc
cld
ss
std
cmc
push
aaa
dec
xchg
test
sbb
mov
jg
hlt
and
out
push
cwtl
outsb
mov
jnp
ljmp
jnp
jl
cli
sbb
inc
mov
cmp
enter
cmp
jmp
out
jg
aam
or
insb
mov
fsubp
jmp
xchg
dec
adc
int
fidivl
dec
lock
bound
mov
enter
xor
ds
xorb
sbb
in
cld
movsl
adc
jle
lds
push
sbb
loop
and
fildl
clc
fiadds
insb
shl
mov
sub
andb
stos
aas
enter
adc
sti
push
aaa
mov
lcall
lea
sahf
les
cmc
xor
push
daa
or
inc
cli
stos
jae
mov
iret
cwtl
aad
sbb
cwtl
sub
mov
dec
mov
sub
sub
mov
ds
xor
dec
ljmp
and
jge
ja
add
and
shr
adc
into
xchg
jb
adc
loopne
test
inc
jg
xorb
cmpb
gs
fistl
lahf
lea
add
adc
mov
xor
sub
aad
loop
das
and
fbstp
pop
out
or
push
adc
nop
or
repz
inc
pop
xor
lods
sbb
int
xchg
fstps
xchg
or
sbb
nop
es
pushf
rcl
mov
ret
jnp
dec
or
aad
xor
lahf
scas
imul
nop
orb
add
in
and
popf
clc
out
sbb
adc
pushf
inc
jle
pop
lret
xor
imul
or
jae
or
ljmp
cld
ret
add
and
rclb
or
loopne
mov
das
mov
ljmp
sub
mov
ret
dec
je,pn
in
mov
clc
adc
mov
sarb
dec
fcmovbe
or
nopl
sahf
mov
push
pop
and
dec
push
pusha
sbb
inc
shlb
adc
es
mov
in
jmp
or
lahf
in
xlat
fimull
fisttpl
lea
repz
in
jns
hlt
xor
in
aad
popf
cmp
clc
push
jecxz
ss
jecxz
loope
pop
sbb
pop
or
faddp
lds
std
sub
xor
cmpsl
sbb
mov
sub
push
add
rcrb
jle
pop
pop
dec
xchg
pop
jmp
pop
scas
ja
push
mov
aad
loop
mov
shll
imul
insb
inc
popa
mov
sbb
stos
imul
aad
add
call
jb
or
pop
mov
loope
adc
inc
cs
in
xor
dec
orb
js
mov
jmp
out
movsb
daa
sub
pop
xchg
ffree
cmpsl
mov
sbb
les
fistpll
test
push
fidivl
dec
xchg
dec
cmp
xchg
inc
lcall
repz
int3
cmpb
dec
sbb
or
push
sub
es
sahf
push
pop
test
aas
mov
enter
push
and
push
int3
xor
jmp
lods
lods
cmp
pop
insl
mull
jne
mov
inc
lods
fistps
negl
dec
loopne
repnz
data16
cmp
js
add
sub
mov
loop
add
inc
fcomps
mov
xchg
ret
add
ror
push
test
cli
scas
insl
or
jp
or
jge
mov
pop
inc
mov
xor
iret
insb
fcompl
xchg
mov
movsl
jo
mov
xor
vprotw
out
and
hlt
pop
fs
mov
inc
mov
sub
inc
push
and
cmp
ljmp
iret
jne
push
lahf
mov
imul
and
lret
out
inc
push
mov
in
in
or
insl
into
jmp
repnz
sbb
push
xor
mov
ja
hlt
pushf
and
jbe
dec
in
jo
fwait
out
cld
testl
pop
push
add
xchg
jbe
lods
mov
dec
mov
or
out
fnstcw
notb
icebp
xor
jae
add
cmp
mov
adc
loopne
fdivs
jmp
xor
and
inc
xchg
icebp
xchg
fmulp
push
rolb
pop
sub
cmpl
test
and
clc
and
push
roll
jl
xchg
icebp
sub
mov
popf
jmp
xchg
scas
ror
cmp
xor
mov
jecxz
cmp
ss
sub
mov
shl
mov
sbb
out
dec
mov
dec
sti
xchg
and
lds
clc
sub
das
xor
fisubrs
ja
push
insb
cmp
mov
das
jmp
push
inc
add
fs
dec
mov
add
push
sub
cltd
cmp
lahf
jmp
lahf
jl
rcpps
mov
rolb
cmp
std
sub
or
int
jle
sbb
cmpsb
jg
scas
mov
test
xchg
cmpsb
into
in
ss
sub
mov
fldenv
shll
inc
jmp
pop
sarb
cltd
pushf
adc
mov
ds
pushf
jb
or
mov
dec
clc
xor
enter
sub
mov
out
mov
xchg
or
pop
sbb
xor
fdiv
jno
aad
imul
lret
es
lret
es
cmp
mov
xchg
test
cmp
pusha
repz
loop
arpl
push
jnp
sbb
aaa
jns
dec
in
subl
movsb
adc
xor
hlt
aaa
jecxz
mov
and
nop
in
int3
mov
fistpl
xor
jo
lds
adc
dec
mov
push
jg
outsb
dec
int3
mov
das
mov
orl
iret
xchg
mov
jg
neg
mov
stc
lea
in
lock
out
and
mov
cmp
movb
xchg
xchg
addr16
xchg
jecxz
sti
sbb
addr16
mov
adc
inc
stos
pop
loope
jmp
sbbl
adc
jle
cmp
jecxz
xor
xchg
cs
adc
mov
loopne
xor
sbb
sbb
loop
es
test
inc
mov
imull
and
gs
pop
fs
cltd
and
mov
ja
xchg
cmp
sbb
nop
xchg
scas
int3
or
xchg
dec
adc
push
iret
sub
push
lret
aas
adc
inc
sbb
xor
mov
rcr
mov
div
mov
dec
dec
fildll
or
mov
outsl
xor
out
aad
cli
shrl
cs
cmpsb
enter
add
jp
mov
cmp
jbe
xlat
xchg
out
xchg
jmp
xchg
mov
lods
dec
cmovnp
xor
test
xor
or
pop
mov
jo
stos
or
push
push
aad
jle
aaa
fstpl
cmpsb
stc
nop
jne
sbb
std
xor
notl
mov
jg
push
cs
mov
sbb
pop
add
xchg
xchg
pop
mov
jno
add
adc
and
sbb
lods
pop
cmpsl
out
cmpsb
stc
out
in
testb
pop
stos
pop
bound
lea
cmpsb
insb
jmp
mov
imul
inc
les
outsl
aas
mov
push
xor
jae
jo
int
jno
aad
mov
xchg
mov
mov
int3
or
rorb
or
popa
call
mov
dec
fcomi
aaa
in
shl
ret
imul
or
ja
loope
mov
call
mov
mov
jo
gs
rorl
stos
out
mov
jnp
adc
nop
rcll
outsb
cli
jns
push
imul
or
loope
outsl
dec
push
les
lahf
stos
mov
mov
sbb
adcl
cmp
fisttps
int3
aad
std
and
push
ja
ficoms
inc
push
add
movsl
pop
cli
adc
push
out
and
pop
pop
jecxz
cmc
push
cmp
dec
icebp
pop
fisubl
ljmpw
ficomps
mov
nop
cmp
stos
xor
insb
push
ds
hlt
cmc
cmp
jmp
mov
jl
shll
in
pop
sbb
repz
jmp
mov
pop
jns
repnz
negb
out
iret
pop
rolb
rcrb
lock
dec
cmpsl
xchg
dec
ret
dec
mov
jge
jmp
in
jp
mov
test
mov
lods
dec
inc
jnp
jecxz
fnstsw
mov
stos
cmp
testb
or
inc
stos
mov
mov
xchg
lcall
xor
jne
jnp
cmp
xor
pushl
call
ljmp
stc
xor
mov
outsl
sub
stos
xchg
in
xchg
pop
je
ds
repz
cmpsl
imul
loope
hlt
outsl
addl
cli
les
or
xchg
popf
ret
cmpsl
sbb
xor
fsubrl
jno
call
mov
loopne
xchg
sti
jle
cltd
call
cmpsb
fnstcw
call
shlb
ficomps
lcall
mov
sbb
push
pop
mov
jmp
pusha
and
pop
inc
mov
inc
push
mov
mov
insb
adc
jb
push
inc
dec
or
pop
std
int3
pop
out
ss
sbb
and
and
mov
xchg
sbb
test
xchg
je
push
loop
jae
jl
add
sbb
mov
fiaddl
fbstp
or
cmp
adc
pop
cmp
aad
xchg
jne
mov
loop
and
insb
and
and
clc
movsl
lret
out
out
push
ds
and
mov
cmp
push
mov
data16
cs
xchg
mov
loop
lds
std
sarl
pop
mov
insl
push
shl
int
and
ds
fmuls
mov
xor
sahf
inc
mov
mov
sub
and
scas
dec
fsubr
mov
mov
dec
mov
pop
pop
fcmovu
and
test
repnz
ja
xor
mov
cltd
dec
xchg
icebp
in
add
xchg
rcl
cmp
test
in
inc
add
add
push
sub
scas
sahf
sbb
inc
cmpsb
pop
dec
xchg
std
rol
mov
out
fistpll
pop
imul
stos
push
fwait
pop
mov
mov
jns
fisubrl
push
fbstp
outsb
adc
xor
out
xorb
mov
mov
shrb
adc
xchg
lods
rol
add
out
xchg
push
mov
cs
call
xchg
repz
jmp
inc
test
call
mov
sub
pop
xor
sub
lods
add
ds
push
lret
popf
mov
dec
fnstsw
dec
push
pop
or
popa
pop
shrb
popa
inc
mov
push
popf
cmpsb
xor
adc
lds
and
mov
ljmp
arpl
or
cmpsl
jae
cmp
lods
icebp
gs
into
repnz
mov
cs
repnz
and
testb
mov
clc
pusha
call
arpl
adc
add
xchg
jmp
mov
mov
sbb
lcall
mov
sarl
xchg
push
inc
adc
ret
mov
imul
add
test
cmp
test
hlt
pop
cwtl
int3
cs
inc
sub
enter
into
lcallw
mov
in
test
out
dec
inc
mov
xchg
cmc
clc
insb
mov
loopne
ficomps
adc
shl
jg
loop
xor
enter
push
jle
xchg
psadbw
xor
out
adc
in
fiaddl
test
int
jb
pop
dec
inc
test
pusha
xchg
add
sbb
or
mov
div
cli
sbb
inc
cmp
cs
loope
repnz
out
or
pop
repnz
sub
pop
aas
xor
jp
mov
dec
pop
mov
test
ss
test
or
ret
out
int3
fcmovu
outsb
cmpb
divb
out
loop
je
adc
mov
jl
std
jbe
jo
push
mov
test
addl
cld
insb
lods
push
cmp
scas
sub
xchg
pop
mov
test
pop
cmpb
mov
pop
mov
mov
jmp
insb
loope
xchg
arpl
push
fsub
shll
dec
mov
mov
movsb
pop
mov
mov
cmp
dec
out
mov
mov
inc
cmp
aam
mov
xchg
daa
push
xchg
xor
andl
push
dec
cli
fidivl
daa
cmpsb
mov
negb
xchg
inc
pop
mov
mov
jo
xlat
mov
mov
jo
repz
cmp
int
adc
imul
scas
in
bound
sub
inc
mov
stos
ljmp
out
adc
mov
adc
lahf
es
or
fsubrl
pop
and
jecxz
gs
xor
pop
les
test
pop
mov
add
sahf
movsb
imull
xchg
mov
mov
sub
popa
imul
shl
rorb
push
inc
aas
xchg
idiv
loope
repz
test
xor
and
pinsrw
push
rclb
inc
pop
inc
lods
and
mov
mov
ss
ffree
sbb
addr16
and
sbb
add
loop
add
mov
mov
sbb
cld
test
cmpsb
xchg
repnz
dec
jnp
jb
pop
push
cmp
push
icebp
addr16
lods
iret
inc
mov
xchg
and
or
jo
sub
dec
dec
into
dec
addr16
addl
sbb
stos
mov
add
movsl
push
push
out
jge
into
xchg
sub
bound
mov
adc
xchg
aaa
mov
jg
jmp
or
mov
addr16
push
notb
sbb
or
fimuls
or
inc
add
iret
js
shrb
rolb
push
clc
pushf
add
lret
adc
or
cmp
add
fiaddl
stc
lods
ret
daa
sub
cmp
inc
xchg
jnp
mov
in
push
pushf
mov
stc
pop
xchg
dec
xchg
es
or
jb
dec
int
dec
pop
dec
pop
xchg
jno
mov
xor
adc
iret
out
push
hlt
push
push
mov
pop
inc
fisubl
push
popf
push
or
pop
and
dec
ljmp
stc
outsb
cmpsb
push
ja
jnp
pop
imul
add
jne
test
mov
mov
imul
add
mov
mov
cmpsb
cmp
scas
xor
cwtl
sahf
addps
aad
adc
xor
movsl
or
cmp
shll
movsb
adc
int
loop
int3
rcr
mov
scas
dec
adc
push
rorl
mov
adc
bound
popf
lock
mov
and
out
movsb
gs
aad
mov
fstl
repnz
xchg
lods
loop
add
leave
mov
sti
xor
xchg
jno
insl
scas
sbb
lods
mov
pushf
arpl
dec
aas
imul
inc
fldl
pop
jns
pop
fcmovu
inc
pushf
repz
inc
mov
dec
adc
and
mov
jl
dec
pushf
pop
sub
jb
xor
xor
das
dec
mov
inc
pop
orb
mov
ss
jb
sbb
or
fdivl
ror
xchg
sub
imul
test
rclb
js
les
mov
scas
jl
pop
stc
mov
dec
xchg
in
cmpsb
sbb
in
jns
adc
pop
or
mov
mov
cli
cmp
aas
outsb
ss
jae
ficoms
cmp
xchg
mov
out
arpl
and
out
mov
adc
jmp
sub
wbinvd
leave
mov
push
call
and
into
pop
outsb
cmp
push
lret
add
inc
or
stos
cmovl
jle
pop
xchg
mov
addb
jg
int3
ret
ficoml
gs
add
int
or
xchg
outsb
sti
imul
add
lods
mov
xchg
enter
xor
jmp
jl
mov
stc
mov
enter
test
sti
dec
outsl
arpl
push
sbb
lahf
js
lods
dec
jns
mov
mov
int
dec
lcall
lock
outsb
push
and
test
push
imul
lret
mov
mov
xchg
xor
pop
mov
rcrb
insb
and
ja
inc
aas
addr16
int3
sbb
test
mov
ljmp
cmp
loopne
or
inc
fisttpll
hlt
cltd
dec
xchg
and
mov
mov
xchg
add
xor
inc
je
fidivs
push
lock
jne
mov
popa
or
ret
pop
dec
aas
in
out
test
notb
jle
mov
je
mov
sub
pushf
mov
out
leave
aad
enter
push
fwait
jnp
or
pop
ljmp
xor
dec
adc
add
xchg
sbb
adcb
adc
int3
cmp
xchg
std
mov
xchg
dec
cmp
insl
outsl
movsl
cmp
push
cmp
cmp
cld
sbb
xchg
loope
lea
aad
mov
and
inc
jnp
fstpl
stos
or
adc
fld
jo
push
xchg
in
mov
jo
lock
outsl
cmp
jle
addb
icebp
ja
ja
test
sbb
inc
xor
enter
ret
sub
ret
mov
aam
mov
gs
mov
stos
test
mov
push
sbb
out
or
arpl
xor
cltd
push
js
bnd
xlat
hlt
jl
add
inc
jns
fldl
sub
hlt
pop
aam
mov
push
cmpsb
cmpl
mov
and
or
pop
cmp
cltd
or
nop
xorb
orl
mov
sbb
inc
test
popf
push
repnz
cmp
mov
cmp
adc
jo
lds
fwait
pusha
insb
xor
sbb
add
clc
pop
jge
call
xor
test
shlb
mov
loop
mov
adc
je
mov
add
lahf
mulb
enter
out
push
xchg
xor
jecxz
imul
cmpsb
hlt
lock
test
add
sbb
cmp
pop
repnz
test
sub
fldlg2
mov
and
ljmp
adc
and
repnz
xchg
mov
sbb
cmp
je
sub
fwait
test
jo
lods
mov
jne
xchg
int3
jl
ss
dec
jo
cmpsb
lret
and
fldl2t
sbb
xor
fwait
add
adc
es
pusha
shrl
jl
fs
bound
and
inc
cltd
jno
jmp
je
or
adc
mov
ficompl
xchg
jno
insl
vaddps
ljmp
insl
cmpsl
cmp
adc
pop
aad
and
xchg
jp
add
pop
out
inc
gs
stos
inc
add
sub
cld
dec
mov
shrb
stc
test
xchg
cmpsb
sbb
inc
add
mov
jns
add
rorl
nop
inc
xchg
lret
in
pusha
mov
in
add
mov
jne
daa
lods
clc
push
xlat
test
sub
sub
shrl
lods
es
and
add
mov
mov
iret
xchg
ss
add
cmp
test
push
mov
fwait
push
mov
sub
out
mov
js
adc
inc
adc
inc
test
or
cmp
repnz
sbb
add
sbb
sbb
or
inc
and
out
jmp
inc
addr16
es
je
mov
lock
add
xlat
popa
pop
fstps
scas
cmp
xor
sbb
call
or
jbe
xorl
jl
ss
cmp
in
add
ds
into
out
fcmovnu
lret
pop
jp
mov
jbe
xor
out
xor
and
fwait
jo
andb
push
xchg
pop
push
es
aad
fs
inc
mov
xchg
mov
ja
push
das
xchg
ljmp
ljmp
xor
insl
into
or
jb
mov
inc
mov
mov
cmp
clc
jg
mov
cmp
aam
inc
jb
jl
cmp
popa
push
inc
iret
int
pop
in
push
test
repnz
sahf
push
pop
push
mov
xchg
xchg
push
aas
scas
fdivl
xchg
data16
add
cmc
stos
cwtl
cmc
ss
mov
xchg
in
loope
out
sbb
dec
notb
and
arpl
cmpsl
add
jbe
pop
insl
push
adc
mov
sbb
adc
lods
sbb
mov
out
mov
xor
push
ja
push
loop
insl
dec
push
sub
or
push
jmp
xchg
pop
int3
sbb
xor
movsl
cmp
into
sti
out
and
mov
push
jle
or
outsl
daa
out
stos
rcrb
jne
fwait
int3
pop
subb
sbb
ret
mov
cmp
push
enter
int3
adc
pop
test
xchg
in
xlat
mov
rcrl
sbb
pop
test
sub
and
decl
jb
aas
adc
adc
dec
es
xor
dec
test
pusha
ds
test
xor
xchg
and
push
cwtl
jge
ror
jns
jb
mov
xchg
repnz
int3
into
jecxz
add
jae
cmp
out
push
popa
arpl
dec
inc
cld
push
lea
sbb
sub
stos
sub
stos
mov
mov
mov
and
add
inc
sbbl
shlb
mov
decb
mov
cmpsb
xor
xchg
psraw
flds
pop
dec
imul
mov
lret
jb
cvtdq2ps
fcmovnb
mov
pop
cld
mov
xor
mov
cmpsb
dec
outsl
xchg
fnstsw
xlat
lds
dec
mov
ja
push
scas
pop
ror
loop
pop
mov
inc
iret
movsl
sbb
arpl
int3
add
lret
adc
dec
xchg
mov
aas
add
mov
imul
xchg
or
maxps
or
cmc
popa
mov
mov
subl
and
cli
adc
or
pop
cmc
test
dec
dec
push
movsl
inc
cmp
and
inc
cmp
iret
loopne
sub
loope
aad
lret
les
repnz
push
fists
icebp
mov
test
shlb
adc
cmpb
pop
loopne
ss
sbb
pop
sub
pop
mov
or
xchg
insl
outsb
mov
mov
daa
jne
nop
dec
test
adc
mov
test
cld
mov
lahf
aam
data16
inc
popf
inc
adc
loopne
sbb
dec
mov
xor
stos
out
test
ja
popa
mulb
gs
out
xor
lods
mov
insb
popf
mov
test
and
sub
fnstenv
add
lret
fistpll
stc
xlat
lods
mov
addl
mov
push
mov
mov
bound
mov
xchg
cli
push
scas
sub
shrl
adc
lods
xor
mov
fldl
xchg
mov
xor
pop
xchg
icebp
cmp
xchg
mov
loop
inc
aaa
mov
jns
in
jp
push
xchg
stos
mov
mov
scas
xor
jle,pt
xchg
cmp
add
pop
mov
lret
movsb
outsl
dec
mov
outsb
fildll
fsubs
in
push
mov
mov
call
mov
xor
inc
movsl
xchg
stos
xor
adc
push
movsb
gs
jb
fs
inc
mov
dec
jne
pushf
roll
ds
divl
sbb
xor
mov
xor
xchg
movsb
pop
mov
inc
xor
mov
mov
shl
xor
ss
push
mov
sbb
lods
dec
je
subl
aaa
out
in
mov
jo
jp
push
sbb
in
fwait
out
enter
cmpsl
fistpll
or
push
adc
repz
cwtl
cld
pop
mov
fisubs
push
mov
jecxz
dec
sub
les
fmulp
mov
jle
ljmp
ljmp
cmp
xchg
into
test
loope
call
cmp
jle
sbb
out
xor
jno
ss
loop
pop
jne
fwait
dec
cmp
push
sbb
dec
out
lahf
enter
int
in
push
push
xlat
push
test
adc
mov
mov
hlt
push
mov
dec
jo
inc
xchg
mov
xchg
sahf
jmp
mov
daa
roll
sbb
divb
adc
mov
and
scas
movsb
push
xchg
and
cmpl
mov
xchg
mov
lahf
out
shlb
int
stos
adc
cmpsb
push
xchg
lods
shr
in
jl
daa
js
idivl
adc
sbb
sub
cmp
push
inc
mov
jae
add
mov
sarb
jb
rcll
xor
sbb
dec
mov
add
leave
mov
mov
pop
inc
stc
push
or
jl
mov
cwtl
push
cli
fnstenv
jp
rsqrtps
out
dec
xchg
dec
outsl
add
andb
adc
add
jecxz
int3
mul
addr16
mov
stos
add
mov
xlat
sbb
mov
in
mov
stc
loopne
sti
je
iret
mov
call
jg
xor
shll
sbb
adc
lahf
popf
dec
loope
and
sbb
in
data16
pop
dec
xchg
cld
in
jno
sbb
jb
fistl
rorb
shrb
inc
js
fs
sbb
fadd
pop
outsl
sub
or
add
je
push
loope
outsl
lahf
je
adc
imul
repnz
in
lds
rcl
xchg
mov
vunpcklps
sbb
adc
mov
dec
rcrb
add
arpl
mov
push
int
pop
lahf
aaa
xchg
sub
std
jle
movl
mov
push
out
js
mov
fcmovnu
pop
mov
push
inc
pop
inc
iret
enter
loop
adc
jo
int
flds
xchg
or
sbb
cld
lret
into
mov
divl
sub
hlt
in
ja
gs
pop
movsb
mov
fdiv
incl
jnp
xchg
push
dec
sbb
mov
jns
sub
xor
ror
in
arpl
fucomi
arpl
xchg
sti
out
ret
xor
sub
push
loopne
pusha
popf
adc
cmp
cmp
mov
or
cmp
neg
in
cli
ret
cmp
das
shrl
mov
xor
bound
or
inc
ja
rorb
faddl
dec
ficompl
sbb
or
jns
jne
imul
insl
call
mov
sbb
or
push
xor
shrl
out
je
xchg
cli
fs
scas
push
xor
mov
imul
jne
sub
or
lret
add
inc
push
ja
pop
insb
push
xor
mov
pop
das
and
inc
cwtl
imul
ss
xor
outsl
nop
and
push
nop
pop
pop
dec
jo
lds
pop
add
push
add
jl
jne
and
push
pop
pop
dec
call
gs
mov
outsb
loope
jle
xor
push
les
popf
xchg
pushf
add
lahf
or
sub
lret
or
mull
mov
imul
add
mov
orb
cwtl
xor
ficomps
mov
add
andb
out
loop
mov
bound
xchg
push
or
test
mov
cmp
cmpsl
fistps
lret
aas
fists
insl
jge
and
fistpl
push
mov
lods
jle
mov
sub
sub
cli
rorl
cmp
int3
std
pop
out
and
aaa
sbb
rcrl
arpl
mov
jge
lods
sub
dec
icebp
das
xchg
lcall
icebp
xchg
pop
and
mov
jb
or
ffree
sbb
pop
pop
push
daa
pushf
aas
popa
xor
add
loop
outsw
enter
ror
cmp
enter
pop
mov
sub
mov
mov
shrb
pop
jns
sbb
aas
dec
test
jp
cltd
xor
lods
es
xlat
mov
sti
imul
xchg
test
xchg
push
insl
adc
in
xchg
fsin
cmp
pop
push
int
and
lea
pop
and
into
lret
stos
lods
jl
mov
imul
test
sub
push
jmp
and
jbe
adc
mov
cmp
sbb
cmp
fbstp
les
out
xor
out
cmp
and
sbbl
test
pushf
test
insl
bound
add
sbb
pop
fsubrl
loope
adc
push
cmp
cwtl
cmp
xorb
inc
ret
add
inc
sub
jge
or
rcll
adc
ret
adc
into
das
pop
lds
test
add
pusha
sbb
push
xor
pop
add
push
test
inc
dec
pop
daa
adc
xor
mov
sbb
inc
jp
mov
push
mov
pop
add
mov
call
fstp
adc
insl
pushf
imul
incl
es
addr16
mov
popf
cmpsl
adc
add
push
rcrl
add
sbb
adc
mov
mov
test
pop
add
mov
lahf
out
cmp
out
lods
xlat
pushf
sbb
xchg
lret
lods
and
pop
cld
or
push
cmpsl
xor
jecxz
lds
rol
lahf
lods
xchg
movsl
aam
lock
mov
fisttpl
jb
fucomp
xor
out
je
adc
jmp
mov
pop
loop
sti
movsl
push
mov
cmp
mov
filds
aas
cmc
mov
icebp
push
into
jmp
sbb
cmpl
inc
sub
scas
xor
jne
xchg
xchg
mov
jge
test
faddl
nop
jns
rcll
pop
inc
or
fcoml
mov
jecxz
movsb
sti
scas
in
jo
movsb
les
rcr
and
add
in
xchg
mov
jmp
insb
inc
xchg
inc
mull
loope
mov
xchg
test
rol
outsb
inc
inc
shl
inc
and
adc
adc
mov
stos
inc
xchg
sub
xor
mov
nop
in
lea
sbb
rclb
cli
cmp
mov
lea
andl
xchg
inc
cmp
es
in
xchg
push
mov
cmp
mov
add
sub
je
ret
and
cmp
sahf
xor
adc
out
outsb
push
in
mov
leave
ljmp
mov
jnp
jge
loopne
out
aaa
pop
mov
das
jmp
sub
adc
push
lret
cmp
es
iret
sub
bound
jg
add
adc
xor
pop
aam
lcall
or
jmp
pop
arpl
xchg
aad
cmp
cmpsl
bound
lods
pop
dec
insb
dec
xor
xor
jno
test
mov
and
fsts
push
push
cmp
pop
pop
adc
lret
mov
mov
mov
add
dec
xchg
fs
imul
mov
push
scas
out
movsb
dec
add
fwait
and
dec
dec
cmc
repnz
enter
jno
xchg
je
lcall
ja
lds
xchg
repnz
outsl
mov
insb
insb
aam
mov
dec
or
js
inc
add
addb
js
and
popa
lret
push
cmpsl
loope
fdivrl
add
jge
pop
push
out
imul
lods
sbb
cmp
pop
jmp
dec
shlb
bound
scas
rorl
mov
xchg
add
push
mov
inc
xlat
cs
leave
jnp
leave
lds
lods
xchg
pop
jmp
aam
add
fdivs
inc
scas
dec
xchg
xchg
jp
repnz
mov
jecxz
mov
inc
add
shll
loope
jp
jne
daa
daa
sbb
cmp
mov
jb
out
mov
addr16
dec
outsl
add
mov
adc
shll
cmp
lret
sub
fstpt
stc
scas
inc
cli
call
in
push
lahf
fwait
pop
mov
ret
pop
push
fwait
movsb
scas
lcall
and
and
mov
mov
sbb
repz
stos
roll
mov
mov
sub
or
test
insb
mov
mov
mov
jno
and
mov
xchg
xor
xchg
call
jne
sbb
push
inc
pop
and
rorb
cmpsb
dec
dec
mov
popl
push
mov
and
ljmp
test
mov
mov
xchg
sbb
loop
sbb
lds
and
pop
jmp
push
inc
subb
cmp
imul
or
mov
adc
orb
leave
xchg
push
xchg
jno
lcall
imul
inc
xchg
test
mov
xchg
or
xor
scas
idivl
dec
dec
push
icebp
popa
test
int
cmpl
dec
test
push
add
inc
mov
pop
inc
mov
adc
inc
test
adc
jmp
inc
fidivrl
mov
jae
xor
add
push
xchg
mov
mov
inc
jge
fnstenv
jbe
call
das
out
pop
into
jne
and
test
loope
gs
push
stos
dec
sbb
lea
shll
push
mov
or
ja
cmp
in
adc
jo
or
data16
add
push
jg
jne
adc
jb
in
clc
mov
test
out
and
xor
cmp
mov
adc
aad
xchg
fisubl
xchg
mov
mov
mov
shlb
ret
loop
ja
test
xchg
gs
cmp
xchg
out
mov
xor
test
xchg
dec
sub
xor
xchg
in
push
enter
je
inc
movsb
fmul
popf
sub
lds
dec
push
push
cmp
push
jns
data16
hlt
and
xchg
rcrl
test
popf
add
mov
and
stc
or
mov
ret
ret
loop
leave
push
mov
cmp
mov
mov
cmpb
hlt
dec
mov
dec
fisubrs
popf
popf
mov
cmpsb
fistl
outsl
enter
inc
cmp
dec
fldenv
cld
ret
add
dec
pop
adc
int3
jge
push
jmp
and
jns
sub
add
fidivrs
dec
pushf
loop
outsb
insb
stos
orl
push
xchg
popa
in
ja
es
lret
ss
mov
mov
inc
cmp
cwtl
and
lock
insb
and
dec
clc
stos
mov
fcoml
lea
es
sub
rcrl
xchg
xchg
jae
pop
das
call
push
sbbb
lahf
dec
jmp
dec
test
imul
leave
dec
add
xchg
adc
iret
mov
cmp
xchg
add
fadds
scas
pop
jnp
inc
pop
jmp
push
mov
cmp
push
cmp
shrb
mov
in
sbb
cmp
push
ds
mov
xchg
mov
aam
pop
int
mov
ret
xchg
cmp
sub
fwait
mov
out
scas
pop
lret
push
pop
les
das
ficompl
ficompl
jno
ret
and
lahf
add
or
push
mov
sub
enter
outsb
iret
test
je
sub
ficoml
xorb
jb
test
inc
out
jb
jno
repz
lock
jge
std
mov
jno
and
sti
push
lods
xchg
add
pusha
adc
ljmp
das
sub
push
mov
stos
fcompl
push
jp
test
dec
cltd
push
mov
sbb
sub
adc
push
mov
jo
xor
cmpsb
cmp
stc
inc
popa
aaa
mov
pusha
es
out
or
retw
cmp
fsubrl
fistps
adc
push
fwait
cmp
call
inc
add
pop
jo
pop
es
inc
inc
je
popa
int
xchg
jne
pusha
insb
ss
ljmp
adc
insb
hlt
xlat
sub
add
lock
jp
push
shrb
pop
cli
mov
decl
insl
push
jg
adc
jbe
stos
sbb
imul
adc
arpl
add
add
rcrl
pop
cli
dec
fmulp
mov
into
xor
scas
in
push
fcomps
jne
into
pusha
and
in
shlb
std
bound
mov
mov
rclb
jns
mov
add
shr
pop
sbbb
loopne
sbb
xchg
sub
push
decl
das
xchg
jecxz
dec
rorb
mov
sub
lods
sbb
in
lret
xchg
cmp
and
pop
cmp
and
cwtl
or
jmp
jp
sub
imull
gs
mov
fdivrs
add
cmp
mov
and
fbld
mov
test
xchg
push
popa
jnp
xor
outsb
popa
push
pop
outsb
jae
mov
jmp
shr
mov
hlt
stc
test
orl
cmp
jns
sahf
mov
loopne
cld
scas
push
cmp
into
push
and
adc
fistpll
jno
jns
ja
sub
mov
outsl
loop
jns
outsb
inc
add
adc
imul
aaa
sub
sub
sub
mov
inc
fs
int3
push
iret
cwtl
jno
dec
push
cli
aaa
dec
or
xchg
bound
bound
push
enter
lock
gs
pushw
xor
test
in
sarb
cmpsl
loope
stos
shll
repz
dec
frstor
jecxz
sarl
mov
sub
call
andb
lea
xor
add
idivb
negb
or
sub
sub
fcmovnbe
mov
inc
loop
and
orl
arpl
jl
mov
mov
dec
repz
ljmp
xor
push
insl
sbb
aas
cmp
clc
cmp
jnp
clc
scas
lock
dec
pop
cltd
xorl
inc
gs
cmpsl
sbb
lods
cmp
movsb
mov
faddl
add
mov
pop
cwtl
push
adc
mov
clc
cmp
stos
sbb
jnp
push
dec
mov
cmp
loop
repz
add
mov
inc
add
cmp
cwtd
divb
lock
out
repz
push
fwait
or
xor
push
movsl
sub
mov
lock
mov
mov
and
and
jnp
cli
push
pushf
sti
fimuls
sbb
push
pop
sbb
or
ss
mov
mov
pop
push
mov
cs
out
cmpsb
push
scas
add
pop
shlb
fsubl
lock
mov
sub
cmpsl
jo
jns
bound
in
push
mov
jmp
jmp
push
sbb
add
test
push
imul
scas
inc
rcrl
roll
lods
shlb
pop
leave
lcall
inc
repnz
aaa
sub
cli
adc
aaa
push
lcall
scas
xlat
inc
dec
sti
and
xchg
loope
testb
add
popa
xchg
dec
lods
or
inc
pop
into
test
adc
jl
or
mov
inc
aas
jle
cmp
fstpl
lahf
xchg
xor
movl
mov
lahf
adc
je
incb
les
xor
xchg
pushf
fsubrs
mov
inc
fdivl
push
mov
xchg
sbb
adc
mov
cltd
and
and
mov
jge
je
mov
mov
add
add
xor
pop
insl
mov
lahf
imul
push
nop
sub
add
inc
xor
sbb
mov
inc
adc
dec
cli
fcoms
or
jecxz
mov
out
xchg
jecxz
inc
push
push
fidivs
dec
fldcw
leave
mov
fldt
fwait
aam
mov
movsb
mov
cmpsb
in
or
shlb
mov
sbb
scas
jnp
jmp
jo
pop
lcall
inc
xchg
loope
push
test
inc
sub
xlat
aas
xchg
popf
arpl
cmp
outsl
sub
mov
xchg
iret
insb
inc
inc
and
cltd
cmc
push
test
mov
mov
aaa
or
adc
add
nop
push
ljmp
repz
js
sbb
lds
dec
je
dec
ljmp
outsb
mov
push
adc
adcl
lods
and
lds
push
lea
push
fsub
sahf
push
test
jb
jne
xchg
iret
push
sbb
into
push
test
popa
mov
mov
in
mov
repz
lods
call
jle
xchg
ljmp
sbbl
dec
insb
popa
shrb
js
jmp
sbb
sub
mov
or
pop
fdivrl
incl
or
stos
xor
outsb
push
sbbb
add
clc
mov
cmpsl
lcall
into
mov
fidivrs
xchg
adc
push
jne
pop
rclb
cmp
push
in
int
sbb
aad
xchg
cmp
jp
clc
stos
jnp
xor
inc
icebp
xor
test
lea
ret
test
ficomps
and
xchg
test
adc
cltd
pop
cmp
pop
and
arpl
adc
ret
fstps
mov
adc
pop
xor
in
imul
pop
push
jl
push
xchg
clc
in
jns
sbb
dec
stc
or
push
sub
and
inc
add
fidivs
pusha
popa
iret
push
sbb
dec
sbb
cli
dec
pop
hlt
pop
loope
adc
imul
jl
hlt
imul
xchg
dec
cmp
sbb
mov
sub
add
add
sbb
push
mov
jo
pop
add
adc
pop
jbe
xor
dec
or
and
add
aas
mov
sti
gs
xor
xchg
dec
add
dec
dec
jge
decl
and
push
loop
into
enter
sub
nop
jbe
icebp
adc
mov
mov
jbe
push
cmp
je
dec
jb
out
popa
div
pop
and
cmp
xchg
lret
fucomip
out
sahf
mov
out
rorb
jge
sbb
aaa
xor
fnstcw
aad
jbe
mov
add
test
mov
dec
popf
sub
in
xor
jns
inc
testl
add
in
jb
adc
shl
lret
insb
inc
fisubl
jbe
mov
jmp
daa
xchg
rcll
stc
std
shrl
test
ret
pop
call
mov
push
sub
inc
push
in
insl
inc
mulb
stos
stos
jb
adc
ficoml
es
pop
scas
lret
mov
xor
sub
inc
xchg
push
or
inc
sub
jb
in
pop
dec
addr16
xor
sbb
hlt
shl
cmp
push
ret
stos
pop
jo
loope
xchg
xchg
lods
cmp
mov
lds
add
call
call
cmpsb
push
bound
inc
jp
and
jb
stos
popa
stos
loop
cld
dec
cmp
mov
pop
inc
aaa
xor
pop
add
inc
xchg
gs
int
pop
fdiv
arpl
in
adc
jne
lods
popa
push
testl
lret
in
and
js
inc
daa
mov
test
jge
sub
fdivr
push
shl
pop
jbe
nop
rclb
sbb
js
mov
insl
pop
mul
fidivs
in
jno
jno
pop
ljmp
je
cld
insl
push
mov
xchg
jmp
push
test
sarb
jg
cmp
mov
xchg
inc
or
or
and
lods
xchg
test
mov
daa
in
dec
out
xor
shr
pop
jne
repnz
mov
inc
setl
in
mov
loop
cld
xchg
clc
inc
out
mov
xchg
das
mov
ror
pop
cli
and
mov
scas
arpl
fdivrs
test
ret
int
jmp
lret
cs
dec
add
popa
movsb
xchg
rcrb
cmpsl
cmp
mov
cmc
vpmaxsw
push
jle
mov
in
out
mov
adc
sub
rcrb
push
stos
pusha
cmpsl
icebp
mov
pushf
xchg
cmp
jo
jp
jmp
xor
out
sahf
test
addr16
xchg
xchg
mov
scas
enter
mov
rcr
icebp
and
icebp
in
cmpsl
and
mov
mov
hlt
add
cwtl
or
es
out
scas
cmc
or
push
pushf
push
adc
cltd
cltd
out
inc
vpperm
jnp
xlat
ljmp
cmp
push
ret
into
imul
sub
push
ss
fistl
test
in
push
add
bound
shlb
adc
rcll
sbb
and
inc
push
mov
orb
adc
ret
xchg
pop
dec
mov
jp
js
ret
daa
fdiv
in
cmp
ret
mov
mov
fcomip
sahf
mov
rcr
jne
mov
cwtl
jae
mov
jecxz
fadds
jecxz
mov
and
and
inc
pop
iret
adc
cmp
sarb
cs
jae
loope
jnp
mov
jl,pn
jle
adc
repz
cmc
addr16
loopne
fmuls
cmp
cmp
cmp
xor
js
cmpb
mov
idiv
call
jl
xor
mov
outsl
cmc
push
xor
movsl
sbb
dec
test
sub
jnp
ss
cltd
fisttps
adc
mov
bound
jmp
not
cmpsb
out
loop
pop
test
pop
cmpsl
jnp
adc
icebp
dec
cmpb
mov
and
shrb
pop
fcmove
je
movsb
pop
pop
fwait
iret
pop
je
cmp
jecxz
test
loopne
push
xor
sub
sbb
in
test
xchg
out
movsb
cmpsl
in
push
mov
test
cld
mov
adc
push
dec
jnp
xchg
cmc
jne
insb
adcb
rcr
imul
add
pushf
aad
mov
je
xchg
sub
lcall
outsb
out
rclb
pop
adc
gs
cmp
adc
push
xchg
jb
js
sbb
or
adc
and
mov
imul
mov
push
push
out
pop
add
fs
insl
sub
jmp
popf
ljmp
push
mov
iret
out
jl
mov
sub
pop
sub
test
push
mov
push
testb
popf
xchg
rcrl
mov
sti
inc
les
mov
mov
lret
push
adc
mov
adc
test
or
adc
pop
scas
sbb
push
sub
mov
or
adc
shlb
lcall
mov
cld
jmp
mov
inc
cmpl
push
stos
cmp
ljmp
jg
mov
cmpsl
int
cmpsl
add
jne
dec
das
xor
pop
xchg
ja,pn
test
fs
sub
push
insl
jno
jecxz
mov
jmp
mov
push
pop
lahf
rorb
and
mov
add
mov
shr
mov
sbb
pop
pop
jecxz
sbb
jecxz
cs
push
mov
int3
mov
cld
je
cmp
popf
xchg
sub
insb
cmp
les
sub
lahf
push
fsubl
inc
jg
pop
pop
leave
pop
mov
outsb
dec
sbb
jo
aas
popf
push
sbb
mov
arpl
test
sub
insl
jno
sub
int3
inc
adc
dec
rcll
sbb
fisubrs
cli
je
inc
fsubs
push
dec
mov
stos
mov
loopne
imul
sbb
jl
push
adc
bound
push
aad
inc
or
in
fstl
andl
sub
aam
xlat
in
gs
loop
and
sub
or
int
loope
jecxz
cmp
and
mov
xchg
iret
xchg
aad
lahf
push
adc
imul
mov
lret
xchg
in
loope
mov
repnz
stos
cmp
rorl
out
gs
ret
ds
jmp
sub
out
xchg
dec
fwait
call
jbe
lds
in
test
pop
cmp
rorl
pop
ja
push
sbb
cmpsl
das
cmp
adc
scas
mov
out
es
jb
imul
cmp
hlt
insb
dec
pop
xlat
fstl
jmp
adc
mov
jb
inc
aam
imul
ljmp
outsl
mov
std
xchg
xor
mov
add
mov
mov
adc
ret
cmp
inc
test
hlt
cmpsb
lods
xor
fdivrs
sub
popa
xor
add
iret
call
mov
adc
mov
outsb
sahf
mov
pop
sbb
inc
mov
jb
mov
sub
mov
int
test
aam
mov
or
mov
push
dec
adc
inc
adc
xor
inc
repnz
dec
fdiv
icebp
popf
xorl
xlat
pop
sub
mov
and
dec
sub
aam
mulb
cli
insb
xchg
mov
pop
mov
ja
or
addr16
add
mov
das
and
push
xchg
inc
xchg
mov
lock
sub
dec
lods
daa
or
ljmp
sahf
push
sahf
pop
xlat
addr16
push
pop
push
mov
push
xchg
lock
lcall
xchg
arpl
add
pop
xchg
pusha
cmpsb
pusha
mov
fs
stos
ror
sub
ficoms
mov
sub
sub
xchg
sbb
fisttpl
bound
outsb
ss
dec
mov
loope
in
movsb
push
sub
dec
out
test
ljmp
push
push
in
jno
mov
jge
jns
push
jecxz
arpl
pop
or
daa
mov
dec
incb
dec
jl
or
pushf
repz
into
popf
repnz
mov
outsl
mov
fld
mov
dec
cmp
out
nop
adc
in
gs
aas
mov
add
rcll
movsb
jge
roll
cmp
jl
pop
xor
inc
fdivr
xchg
xchg
add
fcoml
jge
mov
mov
jnp
orl
inc
push
in
and
lds
fsubr
ss
push
and
xlat
jg
shll
dec
or
mov
mov
fwait
daa
mov
iret
lret
nop
xchg
mov
pushf
xor
sub
fwait
lock
out
das
adc
mov
sub
push
test
xor
and
xlat
or
inc
incl
pop
sbb
lret
pop
jg
out
out
lea
cltd
add
test
jo
enter
xor
and
sti
fsts
out
mov
jns
test
and
repz
and
inc
dec
mov
mov
pop
xor
xor
dec
in
push
cmp
cmp
jb
cmp
sti
ds
cld
ret
xchg
adc
pop
es
sbb
sub
cltd
sti
add
test
into
in
sbb
mov
cwtl
cltd
dec
add
dec
xchg
mov
lods
arpl
cwtl
pusha
lret
scas
jp
add
adc
movsb
fistpll
xchg
movsb
jae
rcrl
pop
mov
sub
fldt
jmp
push
out
pop
out
mov
push
fdivr
subl
fldenv
pop
andb
outsl
push
sub
lret
push
cmpsl
sbb
movsb
dec
xor
sbb
test
cmpb
fiadds
aam
es
xchg
add
pop
and
movsb
xor
fsubrl
lea
lcall
loopne
fidivrl
outsl
das
dec
ja
loope
fcomp
push
in
adc
xchg
arpl
xchg
mov
aad
fdivs
add
shl
or
insb
inc
push
addr16
pop
insl
sbb
gs
sub
add
dec
mov
and
jmp
adc
jbe
cld
ficomps
xor
inc
insl
push
lock
xchg
lea
add
dec
fsubr
aaa
cmp
gs
xor
mov
cli
insl
push
xorb
pusha
add
std
in
aas
push
adc
in
jbe
bound
outsl
dec
shrb
lahf
fisubl
rolb
cmpl
xchg
push
jne
mov
mov
xchg
imul
lret
mov
xor
push
je
add
jle
push
cmp
xor
loop
daa
adc
repz
and
or
dec
es
aaa
fnstenv
sub
js
gs
push
jno
sar
jecxz
popf
testb
add
xor
pusha
sbb
sbb
inc
jmp
xlat
push
pop
xor
xabort
in
pop
dec
adc
inc
mov
push
fstl
fiadds
mov
fistps
jbe
push
imul
sub
test
push
stos
push
push
mov
adc
ljmp
push
add
mov
xchg
add
add
inc
push
push
xor
shll
pop
ficoms
or
sbb
xor
sahf
stc
fsubs
or
les
movsb
lcall
test
cmp
scas
testl
mov
xchg
stc
fsubrs
xchg
cld
dec
mov
lret
outsb
dec
setnp
jne
cmp
hlt
enter
inc
dec
mov
aas
mov
inc
cld
mov
shlb
mov
iret
jns
jne
je
mov
inc
pop
pop
mov
shlb
cmp
inc
stos
xlat
xor
das
pusha
sbb
in
push
cwtl
scas
es
aas
icebp
sub
dec
cld
adcl
stos
pushf
repz
pushf
fiadds
jl
add
fcompl
xchg
sub
xchg
stc
mov
mov
stc
sbb
dec
adc
sbb
test
or
mov
push
aas
stc
mov
jge
test
sub
xchg
and
push
xor
scas
sub
int
ret
xor
addb
insb
adc
shrl
push
xchg
int3
lods
stc
add
out
pop
int
hlt
cmpsb
push
add
js
jp
mov
adc
jmp
mov
je
xchg
push
sub
icebp
inc
xchg
mov
fimuls
cmpsb
inc
fmul
add
push
pop
jo
in
int
aas
in
sahf
pop
xchg
pop
adc
jbe
out
push
arpl
jp
lods
inc
xor
adc
mov
loop
sub
push
mov
shll
ja
or
push
jmp
leave
out
fs
sub
jecxz
lcall
lock
fsubrs
sub
repz
aaa
xor
xchg
mov
rol
mov
mov
mov
cmp
pushf
mov
push
cs
mov
pop
inc
push
jge
lret
mov
cli
mov
mov
adc
pop
sub
out
and
arpl
cmpsb
rcrb
shl
mov
and
sbb
into
add
push
fwait
scas
mov
cwtl
lods
jb
ret
icebp
sbb
int
pop
push
pushf
mov
adc
mov
lret
sbb
mov
cmpsb
fadds
ds
test
icebp
movsb
out
dec
sub
xchg
mov
mov
lret
xchg
mov
jmp
sub
pop
call
fcoms
jmp
fildl
mov
jmp
aam
out
imul
shrb
mov
popa
pop
popa
scas
ljmp
dec
inc
into
cmpb
or
stos
sbb
push
ljmp
jne
jg
loopne
into
xchg
andl
test
inc
insb
test
mov
gs
cmc
bound
jmp
lods
mov
jecxz
mov
pop
lds
nop
scas
outsb
bound
loop
lret
out
in
fiadds
pop
pop
lods
mov
jns
pop
pop
popf
dec
xor
jbe
pusha
out
in
ret
mov
aas
std
mov
punpckldq
xor
lods
jg
inc
mov
lret
outsl
push
in
out
aam
mov
mov
add
in
mov
xchg
jnp
daa
movsb
xorb
inc
cmp
pop
mov
mov
jne
jmp
movsl
push
test
dec
insl
test
mov
rcrb
pop
sbb
dec
testl
dec
mov
inc
cmc
ror
sub
lods
push
add
scas
imul
adc
cmpsl
filds
xchg
mov
sbb
call
adc
push
jo
insb
mov
std
and
jle
or
adc
ds
lea
setp
jo
inc
dec
hlt
and
mov
pop
ret
aas
fsubrs
xchg
xlat
sti
mov
or
adc
ffree
cli
push
out
xor
shll
int
jmp
xor
or
imul
xor
mov
cmpb
push
push
sti
sbb
je
mov
mov
dec
jnp
popf
cmp
pop
mov
negb
iret
imul
push
test
mov
sahf
sbb
push
pop
xor
fisubs
mov
add
push
in
aas
mov
mov
jae
push
test
inc
gs
std
dec
push
cwtl
rcrl
loope
push
xor
and
gs
or
jnp
scas
pop
mov
jge
stc
and
jne
inc
jp
and
cmpsl
scas
lods
xchg
int3
push
cmp
dec
dec
jp
cmpsb
mov
pop
ss
pop
push
sub
stos
out
sbb
lods
aam
sbb
imul
pop
pusha
mov
inc
lods
icebp
es
sub
mov
shrl
in
jmp
ret
jno
fisttps
jae
faddl
inc
pop
mov
fstpl
adc
sub
subl
std
add
aad
dec
gs
insl
inc
hlt
cmp
jl
loop
adc
outsb
pop
insl
mov
int3
sahf
inc
outsl
sbb
and
push
sub
das
xchg
imul
cmp
shlb
and
ss
sub
xchg
sarb
mov
cmp
mov
or
stos
lods
cmpsl
imul
adc
or
lods
or
or
adc
bound
dec
sub
fists
sti
sbb
or
jge
imul
test
push
out
mov
adc
sbb
xor
enter
lds
mov
fistpl
cld
aas
add
movsb
xor
mov
jbe
adc
xchg
jbe
insb
insl
pop
sbb
dec
xlat
ja
sbb
jecxz
xchg
mov
mov
push
sub
mov
das
shrl
add
aaa
popl
cmc
cmovo
push
pop
lret
pop
mov
cmc
adc
lods
cmp
adc
sarl
cltd
cld
and
push
xor
outsb
mov
stc
or
pop
in
repz
push
push
mov
in
xor
mov
and
xor
cmp
xchg
leave
cmp
pop
inc
xchg
lea
or
mov
inc
dec
aam
mov
mov
daa
cwtl
or
mov
jp
ds
and
gs
jg
dec
xor
in
dec
mov
cmpsl
mov
pop
int
dec
aas
scas
fnsave
das
mov
xlat
add
pop
push
or
ficompl
int
mov
add
sti
lret
arpl
gs
in
loop
sbb
test
cmpsl
imul
movl
lods
enter
xlat
jg
cld
and
push
lret
and
leave
xor
test
push
xlat
or
xor
jns
xchg
fbld
mov
scas
lods
cmpsb
cmp
pop
into
mov
cmp
jbe
aad
mov
xchg
pop
mov
fmull
and
shrb
mov
cli
and
lock
pop
je
push
ret
pop
fadd
sub
shrb
ret
fldl
sbb
xchg
jl
in
outsb
fcompl
or
push
cmp
es
and
rcr
xor
or
ss
fisttpll
adc
cmp
xchg
xchg
push
xchg
lea
or
insb
enter
xor
and
fwait
or
stc
outsl
and
ret
sbb
scas
movsb
outsb
mov
sbb
ds
iret
or
mov
sbb
mov
mov
and
jnp
out
mov
pusha
fs
mov
jno
mov
push
lret
test
pop
je
cmpsb
adc
sbb
mov
push
out
jb
add
test
jge
jo
add
xchg
out
pop
mov
sub
les
lcall
lcall
pop
push
cmpsb
pcmpeqb
ror
jl
lock
sub
movsb
lock
xchg
mov
out
cmp
sbb
in
shl
push
mov
popf
imul
jecxz
mov
or
xor
push
popf
push
out
movsl
std
pop
insb
in
mov
add
fldcw
fcmovne
cmpsl
push
pop
call
ror
xor
mov
imul
xor
cmp
fidivs
sbb
fwait
aaa
add
cmp
adc
inc
fnsave
ret
test
and
inc
ret
mov
add
sbb
and
ret
imul
gs
sbb
mov
data16
inc
add
ljmp
cmp
ds
xchg
or
add
push
mov
xchg
sbb
pop
jle
xchg
push
xchg
fmul
xchg
mov
dec
push
dec
nop
loop
pop
dec
jb
js
xor
cmp
push
dec
lods
xor
movsb
push
cwtl
sbb
push
add
and
mov
mov
enter
lahf
pop
add
mov
jae
ljmp
add
push
and
sti
lods
stos
push
cmpsb
adc
out
mov
stc
out
imul
push
inc
inc
mov
les
in
and
in
cs
jae
loop
mov
pop
and
jle
dec
sbbb
inc
lret
push
imull
cmp
xchg
inc
adc
adc
sti
js
lret
into
mov
mov
dec
imul
jo
jle
sub
jp
lret
mov
mov
int3
adc
lock
xor
or
cli
sahf
push
add
jae
out
sbb
jnp
aas
movsb
iret
fistl
inc
xor
nop
push
out
add
mov
mov
xchg
adcb
push
shlb
fidivs
cld
pop
fwait
pusha
ljmp
jns
ja
mov
test
pop
fdivrl
cmp
xlat
lea
pop
push
and
stc
ret
dec
sub
ljmp
xchg
popf
lahf
aad
push
sub
insl
mov
jp
mov
fists
fisubs
mov
lahf
jnp
pop
pusha
clc
mov
xor
les
and
test
add
adc
mov
imul
cmp
or
or
stc
jmp
push
stc
loop
clc
cltd
ret
xor
lcall
sarb
pushf
fisubrs
es
add
mov
and
dec
push
adc
dec
aad
sbb
cmp
cs
ret
clc
fiadds
xor
ja
movsb
lret
pop
mov
rcrb
mov
push
dec
ja
fcom
iret
mov
mov
insb
dec
xor
ficoml
jge
icebp
push
nop
mov
cmp
insl
jge,pt
pop
xor
inc
loope
lcall
mov
lock
cmp
cmc
sbb
and
pop
loop
lds
push
jne
mov
push
mov
pop
mov
mov
out
iret
sub
out
std
in
pop
gs
cmpsb
mov
sarb
fstpt
and
loope
cltd
test
dec
lods
out
sbb
cmp
pop
xchg
shlb
mov
inc
sub
std
lcall
adc
mov
divb
mov
dec
ds
add
add
jno
add
sahf
movsb
cli
sti
jge
mov
js
cli
push
rcll
adc
fdivrs
xchg
fxch
mov
xor
cmpsb
into
sbb
andb
ret
out
dec
mov
insb
imul
or
jnp
pop
movsb
pusha
and
inc
pop
mov
pop
and
jnp
jmp
add
int
fmull
ret
lods
jae
aas
mov
xchg
mov
pusha
pusha
subb
sbbb
enter
dec
jecxz
cld
fcompl
rol
mov
dec
addb
push
pop
arpl
je
dec
movsb
ja
rcrb
out
mov
loopne
into
shrl
mov
pushf
jp
sbb
dec
or
lcall
add
or
pop
mov
pop
xchg
push
sahf
clc
mov
and
lret
and
sub
xor
jae
adc
push
lret
or
test
dec
sub
pushf
push
ljmp
je
sbb
sbb
test
dec
cmp
xor
lcall
mov
mov
ficomps
inc
imul
cmp
xchg
pusha
dec
xorl
sbbb
lahf
iret
add
mov
fstpl
push
adc
imul
xor
movsb
pop
or
pop
mulb
imulb
dec
pop
adc
jle
mov
das
out
push
xor
jle
test
aas
push
sub
pop
or
iret
xor
mov
pop
jle
mov
mov
div
push
add
jb
loopne
pop
add
add
mov
jecxz
rcrb
daa
push
pop
lret
rclb
ljmp
or
mov
aaa
lock
lcall
dec
cltd
inc
popf
loopne
push
shr
xchg
pop
in
arpl
pop
xchg
in
das
insb
setns
mov
add
loope
andl
push
cmpsl
mov
sub
sbb
into
xchg
mov
push
js
mov
adc
sbb
rep
and
jl
and
push
dec
sub
loopne
cmp
ret
jl
pop
nop
mov
aas
cwtl
movsl
mov
lret
roll
cmp
ret
stos
stc
ss
push
xchg
dec
fisubs
sub
inc
xor
jbe
inc
out
dec
sub
xor
mov
stos
sets
adc
jnp
inc
dec
shr
pop
add
mov
cli
fistl
push
bound
push
jg
sbb
sbb
sub
sbb
xchg
add
sub
mov
or
sbb
mov
sub
pushf
std
sub
dec
mov
dec
xchg
andb
add
rclb
mov
pop
dec
ret
cmpsb
ljmp
xchg
andb
fdivrl
lds
test
jne
clc
push
mov
call
stos
lock
cmpsb
or
gs
int
xor
lret
xor
outsb
cld
push
mov
adc
push
rcr
push
out
in
inc
stc
test
insl
out
cmp
push
aas
hlt
clc
push
push
iret
scas
add
loop
adc
lods
sub
xchg
out
stc
add
fcoms
cmc
pop
adc
inc
jp
fst
xchg
mov
enter
xor
hlt
adc
mov
mov
sub
mov
sbb
lds
insb
xor
adc
outsb
jns
xor
in
popa
mov
mov
xchg
repnz
mov
mov
jge
lret
and
mov
std
ljmp
add
arpl
jns
sub
ss
fimull
xor
cli
rol
sub
std
frstor
idivb
fwait
and
mov
xchg
popa
stc
jae
or
fnstsw
popa
adc
fcomi
xchg
jmp
movsl
xchg
lods
sbbb
push
movsb
es
xchg
das
sbb
or
out
push
in
cld
pop
movl
sbb
aas
xchg
sub
insl
faddl
cmpsl
xor
or
loop
mov
loope
popf
xchg
inc
adc
js
inc
mov
cmpsb
orb
mov
and
xlat
jno
cmpsb
loopne
imul
lret
aad
add
jno
insb
out
mov
cmp
hlt
dec
stos
xchg
mov
inc
cltd
aad
mov
inc
sbb
xchg
int
mov
adc
bound
xchg
and
sar
push
xchg
enter
iret
imul
nop
pop
ljmp
stos
or
xchg
mov
adc
inc
pop
loopne
jne
pusha
mov
punpcklbw
and
lods
subl
cmp
jo
mov
dec
mov
cmpsl
lahf
jl
xor
jns
scas
pushf
cwtl
mov
btr
scas
pop
clc
adc
mov
mov
push
call
dec
sub
lods
xchg
and
jne
int
bound
pop
out
pop
add
and
mov
inc
mov
jnp
sub
sbb
popf
icebp
push
mov
xor
sub
aaa
out
pop
push
dec
or
xor
and
cwtl
cmp
stos
bound
out
scas
inc
dec
xchg
pop
mov
jmp
cmp
shll
xchg
scas
ficoml
test
dec
inc
rcrl
jmp
scas
data16
pushf
mov
divl
sub
xchg
sbbl
incl
sbb
inc
adc
and
stos
inc
mov
pop
pop
mov
pop
push
mov
fs
add
dec
inc
cmpsl
aas
int
adc
inc
xchg
shrb
fistpll
cwtl
repnz
lret
lret
imul
sbb
mov
int3
dec
popf
ljmp
aaa
and
into
sub
lods
scas
xchg
sahf
daa
adc
aad
push
xor
out
ss
add
xlat
lods
adc
add
fwait
add
sbb
test
sbb
in
xor
jnp
mov
mov
fs
push
jbe
jge
out
insl
jns,pt
mov
sub
scas
dec
xchg
sub
mov
dec
call
push
mov
sbb
xor
pop
and
sub
pop
stos
push
xchg
mov
adc
jmp
inc
es
xchg
lret
into
rorb
lock
adc
jp
xor
pop
cld
fsincos
inc
push
in
mov
xor
xor
push
or
inc
ror
inc
loope
xor
mov
or
sub
pop
lds
mov
jb
test
loopne
cmc
scas
add
jb
xchg
lahf
mov
insl
dec
js
aam
mov
xchg
clc
xchg
int3
push
cltd
iret
xchg
sbb
test
and
test
push
nop
pop
out
das
hlt
jnp
gs
movsl
jmp
xchg
imul
mov
push
repnz
and
sbb
xor
out
xlat
mov
dec
adc
push
fwait
dec
push
sahf
test
inc
or
mov
ficompl
xor
push
dec
fcoml
lods
sti
sahf
daa
cmp
push
mov
hlt
test
push
roll
dec
in
push
pop
test
push
xchg
adc
cmp
cmp
cmp
out
mov
cmp
sub
mov
shl
or
push
insl
push
xor
test
inc
mov
mov
inc
lds
jmp
test
out
sbb
cmp
jo
mov
shl
sti
dec
jb
pop
call
movsl
adc
add
dec
push
mov
std
rcrb
inc
ds
jb
popf
insl
das
dec
adc
push
test
mov
cltd
and
into
imul
ljmp
out
call
or
rolb
sub
xor
idivl
dec
jecxz
orb
mov
stos
push
mov
sub
movsb
sub
and
incl
pop
mov
movsb
insb
stc
or
pushl
dec
cmp
outsl
mov
mov
inc
cltd
repz
xchg
mov
add
or
add
jnp
pop
cwtl
mov
movsl
insb
pop
stc
mov
push
or
aad
in
push
imul
repnz
mov
xchg
loope
rcll
add
push
or
jae
sub
pop
movsl
test
ja
mov
addl
mov
add
repnz
pushf
ret
orl
lcall
ljmp
adc
inc
lahf
push
or
jns
repnz
js
std
dec
jno
in
test
fs
loope
out
sub
mov
mov
xor
out
test
xchg
xor
js
adc
jb
dec
and
fisubrs
jp
out
mov
mov
dec
mov
xor
cli
mov
in
dec
lods
out
inc
fsubrs
cmp
jne
cltd
cltd
popf
pop
lahf
js
shl
pop
faddl
js
mov
push
jp
xor
cs
push
shll
pop
push
fwait
adc
mov
mov
sar
xor
fldl
orb
adc
ret
dec
test
fidivrl
bound
mov
sbb
jle
daa
lret
jecxz
inc
and
and
or
ljmp
adc
adc
outsb
rcrl
dec
movsl
roll
mov
inc
nop
popf
addl
push
mov
and
rcll
xor
push
add
repz
enter
and
mov
add
mov
xor
jae
call
fcmove
movsl
pop
cwtl
movl
adc
js
sub
sub
popa
bound
ljmp
imul
xchg
hlt
pop
fstpl
hlt
gs
les
je
add
xchg
imul
test
data16
sub
jge
in
clc
outsl
jno
mov
test
inc
mov
out
mov
cmp
adc
and
decl
negb
xchg
push
mov
push
push
out
mov
or
xlat
pop
test
mov
lret
dec
or
ljmp
ror
dec
test
iret
ja
aam
fmull
test
or
jbe
cltd
push
in
add
push
iret
mov
jg
leave
add
mov
add
repz
xchg
adc
mov
cmp
xor
ret
fwait
mov
loope
adc
xor
imulb
ret
or
leave
xchg
dec
dec
cld
repz
xor
mov
mov
into
pushf
hlt
lods
js
enter
lock
aad
cmp
xchg
pushf
mov
mov
add
rolb
and
ficoml
push
add
mov
xor
test
inc
inc
pop
call
movsl
mov
jbe
xchg
aas
xchg
xchg
push
in
and
inc
jecxz
sub
mov
cwtl
mov
jns
xchg
in
scas
pop
sub
iret
jmp
scas
jbe
ja
lcall
inc
lods
adc
mov
shrl
adc
mov
sbb
xchg
jo
mov
sbb
out
dec
adc
cmpsl
mov
push
lds
in
fwait
loopne
movsl
fldenv
mov
pop
lds
outsb
xchg
js
mov
xlat
dec
stos
and
in
call
jmp
inc
push
xchg
in
push
xchg
fcoml
inc
test
pop
aaa
dec
jnp
clc
outsb
sbb
inc
adc
add
inc
push
pop
stc
jmp
enter
and
dec
iret
dec
inc
mov
test
sbb
adc
mov
xor
mov
lcall
pop
lods
mov
adc
lods
cwtl
mov
sbb
ja
fwait
gs
jg
sbb
dec
push
insb
lret
add
push
lea
pusha
xchg
in
pushf
sbb
sbb
xor
cli
sub
mov
jae
xchg
bound
xor
jge
incl
inc
xchg
push
xlat
jo
hlt
aam
pop
or
je
cld
xchg
lds
cmpsl
lcall
add
pop
xchg
out
inc
jecxz
in
dec
jbe
xchg
lods
inc
mov
push
out
loopne
pop
mov
sub
popa
push
or
insb
sub
or
mov
xchg
arpl
dec
mov
jno
aas
repnz
inc
inc
dec
rol
aas
test
inc
pushf
pop
test
pop
cltd
xchg
jnp
adc
fimuls
push
icebp
dec
leave
pop
sbb
add
mov
mov
push
lds
xchg
aaa
inc
daa
and
xchg
push
int3
pop
imul
movsb
repnz
addr16
sbbb
dec
xchg
adc
bound
mov
in
pop
ret
dec
test
push
mov
mov
popf
notb
or
out
call
popa
lea
aad
adc
aam
or
test
dec
je
xchg
cld
jle
incl
outsb
push
xchg
test
mov
push
insl
push
mov
sub
jge
mov
stos
mov
cmp
mov
rcrl
ret
repz
sub
arpl
add
je
mov
and
inc
aas
jb
scas
fsubr
mov
aaa
dec
scas
lahf
xchg
stos
xor
icebp
cs
lcall
arpl
addps
push
jne
add
dec
fsubrs
lods
xchg
andl
or
call
jbe
push
andb
int
aas
inc
fsts
or
ljmp
std
ljmp
inc
adc
mov
add
jns
loope
cmc
dec
in
mov
push
sahf
out
repnz
jle
lds
loopne
mov
xor
fcompl
loope
mov
pop
dec
mov
or
dec
mov
inc
cmpsb
or
mov
fwait
pop
icebp
sub
popa
call
mov
or
sub
mov
xor
aaa
out
ficoml
dec
adc
enter
inc
leave
push
pop
out
test
pop
shll
movsl
pop
inc
enter
mov
mov
mov
shrb
ljmp
pop
or
call
dec
in
sub
xchg
inc
cmp
mov
loopne
icebp
push
mov
and
scas
into
push
fistpll
sub
stc
xchg
mov
sbb
test
lret
and
mov
jge
or
call
jmp
pop
fildll
shll
lcall
scas
xchg
fldenv
hlt
stos
stc
imul
fisubs
cmp
frstor
jns
pop
icebp
jo
jae
scas
xor
insl
repnz
or
ds
into
rolb
jae
mov
mov
pop
imull
stos
dec
jns
iret
jmp
ljmp
sbb
jmp
outsb
sti
dec
lock
mov
test
and
jbe
cmpb
push
push
cmp
adc
hlt
dec
rorl
cltd
inc
cld
cwtl
pushf
add
mov
aaa
and
sbb
cmp
and
mov
mov
mov
ds
sarl
and
xor
sub
cmc
inc
ret
gs
cmp
not
xor
jmp
loope
dec
jle
pop
push
fisubl
andb
fcmove
ficoms
cmp
push
and
out
nop
xchg
lods
jno
pop
mov
inc
push
adc
lods
xchg
lds
fistpll
mov
push
sub
fimuls
movsl
dec
and
out
rclb
lahf
lret
and
mov
jecxz
cmpb
and
xlat
daa
mov
mov
mov
pop
stos
mov
jg
out
sub
movsb
scas
nop
mov
jne
popf
and
mov
xor
cmp
les
xlat
arpl
xor
xchg
xchg
push
cmc
stos
cli
mov
aad
cmp
repz
vhaddps
sbb
hlt
fcoms
fcomp
fsubrs
sbb
call
subb
jecxz
mov
std
pop
add
cmpsb
je
outsb
inc
push
aas
aaa
orb
cltd
jbe
sarl
stos
push
add
pop
movsb
xor
scas
jno
or
fmul
movsl
insl
scas
aaa
shlb
mov
xchg
pop
xchg
test
popa
jmp
ja
test
jb
pop
add
inc
mov
xor
mov
mov
leave
sarl
push
push
pop
push
pop
orb
outsl
sub
lahf
jns
sbb
lea
xchg
lds
mov
adc
nop
adc
repnz
add
fwait
and
push
xchg
subpd
cs
gs
cli
enter
imul
lret
subl
sub
test
xchg
pop
daa
out
mov
cwtl
outsl
daa
imul
insb
leave
dec
lret
xchg
roll
dec
sub
mov
in
pop
bndldx
pusha
xchg
fdivrs
fcmovnb
bound
mov
icebp
imul
sub
pop
mov
jno
mov
mov
ret
jb
clc
insl
iret
inc
jecxz
stos
cmpsb
inc
jns
das
lcall
sub
or
jo
bound
mov
adc
push
ljmp
jbe
mov
mov
xor
pop
mov
inc
push
decl
adc
pop
aas
or
jae
leave
jno
sub
cmp
lahf
fimull
or
jnp
xchg
dec
clc
lock
mov
add
lret
int
cmpb
fcomi
arpl
or
pop
add
.byte
