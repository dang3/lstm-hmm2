push
mov
sub
mov
xor
mov
lea
push
lea
push
push
movw
call
mov
xor
cmpb
sete
xor
call
leave
ret
push
mov
mov
push
mov
xor
sub
mov
test
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
mov
mov
movl
jmp
push
pop
sub
mov
mov
sub
mov
mov
imul
mov
mov
mov
push
pushl
push
call
add
cmp
je
mov
mov
sub
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
xor
push
pop
div
push
pop
sub
push
pop
shl
or
mov
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
pushl
call
push
push
push
push
push
push
call
pushl
pushl
pushl
call
push
call
pushl
call
push
push
call
pop
pop
push
call
push
push
call
push
call
push
call
pop
pop
leave
ret
int3
int3
int3
jae
iret
pop
pop
mov
or
movsl
in
xchg
insb
outsl
lods
fdivs
out
dec
outsl
add
sub
pushf
repz
add
or
dec
xor
push
cmp
cmp
sete
imul
lds
out
mov
jno
push
jp
out
and
push
in
push
lcall
imul
and
divl
pop
push
mov
sbb
fldl
pop
std
push
sub
repz
mov
xor
aad
imulb
pop
iret
mulb
inc
in
jno
mov
je
and
pusha
push
push
mov
lods
stc
rcl
repnz
cmpsb
in
icebp
stos
out
dec
es
inc
xor
js
cmc
or
fiadds
pop
xor
xchg
fisttpll
pushf
data16
lods
cmp
inc
or
or
imul
add
fnstcw
inc
or
insl
call
add
mov
xor
cwtl
push
shrb
xor
mov
sub
cmp
pushf
mov
adc
out
inc
lea
test
sahf
sbb
mov
sahf
das
dec
mov
jne
sub
and
test
popf
add
jle
int3
iret
testb
sti
xlat
rolb
xchg
dec
add
sbb
pop
scas
dec
dec
push
inc
xchg
arpl
sub
xchg
enter
icebp
mov
orb
ds
aas
cmp
test
adc
mov
adc
sub
mov
test
push
repz
adc
testb
pop
push
mov
cmp
push
in
xor
outsb
mov
add
test
imul
and
add
add
cmpsl
inc
test
sbb
jmp
scas
cmp
xor
jne
pop
or
mov
loopne
into
fcmovnbe
clc
or
push
push
mov
pop
int
fisttps
lods
test
jle
shrb
addb
xor
shrl
mov
cmpsl
mov
dec
call
pop
xchg
into
je
loop
add
mov
cmp
push
lret
jle
rcrb
push
push
stc
pop
inc
imul
pop
sub
xchg
lock
sub
rcrb
cmpsb
stos
jge
jb
pop
jl
arpl
loope
ss
loop
ret
call
inc
fs
stos
out
pop
adc
shrl
sarb
int3
mov
outsb
lea
shll
das
dec
shrb
test
in
jg
pusha
adc
adc
imul
lods
les
andb
enter
and
pop
jns
inc
mov
lds
mov
das
rolb
stc
adcb
add
aas
adc
sub
xchg
jns
xor
push
push
out
mov
mov
je
cmp
mov
les
jle
xorb
scas
sub
mov
fcmovnb
mov
inc
dec
mov
pop
or
loopne
das
mov
adc
iret
ret
or
cltd
cmp
mov
xor
dec
or
dec
sbb
sahf
adc
outsl
cmp
test
xchg
lcall
dec
push
inc
push
jae
xor
push
data16
mov
push
xchg
dec
push
sahf
cmpsb
push
shll
cmpsl
adc
sub
or
dec
leave
ds
dec
push
cli
push
iret
fmuls
orl
outsb
xlat
incb
shrl
test
dec
push
cmpsl
cmp
inc
fdivp
xchg
pop
stos
dec
imul
sbb
cmp
jno
jmp
iret
push
or
jle
imul
xor
dec
dec
add
adc
cmp
add
mov
cmp
sbb
mov
lret
dec
xor
stc
jne
inc
xchg
decb
jle
nop
ficoml
popa
push
dec
xchg
ds
xor
jle
dec
sbb
es
adc
call
jne
faddl
sbb
pop
lods
sti
and
pop
pop
loopne
inc
ss
jl
and
inc
stc
into
clc
and
mov
cld
mov
xlat
cmp
xor
std
pushf
cmp
lea
xor
xchg
jne
ja
orb
inc
dec
pop
xchg
dec
jbe
test
leave
xor
fwait
or
aam
sarl
ds
pusha
inc
cli
out
lock
fwait
jp
jl
pop
push
mov
lods
cmpsl
mov
dec
ret
jg
sub
push
sbb
jbe
add
cmc
mov
dec
sahf
icebp
fs
cld
and
xchg
pop
jle
hlt
in
rcrl
and
hlt
inc
adc
in
arpl
push
pop
adc
enter
push
test
ljmp
cmp
mov
adc
inc
inc
cmpsl
jg
test
std
rcrl
ret
inc
adc
cmp
imul
mov
mov
xchg
mov
in
repnz
cs
test
fs
cld
cmp
xor
pop
movsb
sti
jno
adc
mov
jns
popf
test
aaa
rcrl
pop
psllw
jne
test
mov
jle
jae
inc
adc
mov
cmp
testl
clc
jb
push
in
pop
mov
daa
xchg
cmp
les
imul
fwait
outsb
or
cltd
clc
aas
lods
sub
clc
mov
out
js
mov
push
iret
outsl
mov
mov
icebp
sahf
jns
or
enter
push
in
sbb
ja
popl
fistl
pop
sbb
in
arpl
add
pop
outsb
subl
inc
mov
int
sbb
fcoml
sbbl
and
movsb
inc
pushf
cmp
jg
push
hlt
shlb
sbb
jge
js
xchg
fwait
push
jle
or
lret
or
fisubl
imul
add
adc
jbe
arpl
sti
loope
sar
repnz
xchg
xor
jge
push
add
xchg
filds
cld
lea
lods
iret
xchg
rcll
enter
jb
xor
and
sbb
test
jno
or
sub
cmp
jnp
addr16
fcmovb
pushf
iret
jmp
dec
aad
sub
dec
cmpsb
sbbl
test
sub
aas
fcoml
fstl
xchg
xchg
imul
mov
inc
pushf
fcmovnb
imul
std
ret
pop
jecxz
repz
inc
lods
xchg
mulb
cmpsl
les
mov
bound
lock
test
aam
adc
xor
jno
mov
xchg
pop
repnz
lods
mov
jmp
add
stos
pop
jecxz
and
orl
lods
ret
inc
outsb
adc
cld
pop
addr16
mov
or
fs
out
mov
daa
gs
bound
fs
mov
in
fucom
sbb
dec
lea
lret
js
cmp
mov
in
xor
add
mov
xor
pop
xor
pushl
adc
das
pusha
lcall
push
adcl
notb
inc
cmp
ss
cli
addr16
push
fdiv
mov
push
jno
jnp
in
outsl
ficomps
mov
repz
div
iret
xchg
ljmp
cs
test
inc
icebp
mov
clc
in
push
cltd
mov
js
add
lods
or
in
scas
iret
mov
cmp
inc
sbbb
sub
in
into
pusha
push
imul
scas
mov
roll
fcmovb
and
fmull
cltd
xchg
xor
addl
lahf
xor
nop
cld
imul
or
mov
aam
insl
push
lahf
hlt
push
in
xor
inc
add
or
cs
ret
call
mov
jo
xchg
mov
ds
mov
dec
adc
adc
daa
inc
clc
mov
xorl
jmp
mov
pop
xor
and
lea
pusha
fidivrl
xchg
mov
loop
xlat
pop
xchg
xor
xor
ss
fdivl
jnp
inc
rcr
sub
and
or
cmp
jle
fadds
push
sub
mov
push
in
xchg
repz
ret
dec
ret
int
cmp
jae
or
ja
pop
jo
dec
pop
adc
jns
fists
mov
insb
dec
into
stos
aad
mov
inc
in
push
or
jge
jl
add
dec
das
imul
lcall
ja
sub
mov
inc
in
jnp
and
scas
jnp
das
and
add
fisubrs
push
jne
imul
imul
xchg
loop,pt
mov
cmp
and
sbb
sahf
call
pop
cmp
lahf
decb
cwtl
setns
mov
out
mov
xorb
int3
cmp
out
pop
or
sbb
add
mov
jmp
sub
push
rolb
jnp
js
xchg
popa
testl
pop
rcll
jbe
inc
jnp
scas
xor
rcrl
sub
mov
dec
in
lock
cmc
testl
mov
and
jge
mov
cmpsb
fidivl
daa
scas
and
call
xchg
xchg
arpl
mov
icebp
mov
addr16
inc
outsl
dec
jge
xlat
xchg
sub
aad
cwtl
jne
out
pop
sub
mov
adc
fsubs
das
in
and
add
aam
out
and
add
ret
int
pop
add
lcall
daa
addr16
xchg
bswap
loope
mov
mov
mov
fs
int
in
add
fisttpl
push
repnz
and
ret
cmp
sbb
xchg
inc
mov
xchg
mov
cmp
test
testl
testb
fisubs
es
push
jb
dec
xchg
jae
data16
dec
push
xchg
jle
dec
ss
shr
add
xor
mov
cli
adc
dec
sub
or
or
sub
out
jmp
mov
inc
add
int
dec
aad
idiv
jbe
rcll
inc
mov
xchg
into
or
stos
mov
push
iret
cmp
xor
sahf
lock
mov
lea
xchg
push
xchg
loope
arpl
inc
add
int3
inc
aad
pop
push
sbbl
cli
mov
jo
add
movsb
xorb
mov
cld
sbb
je
dec
pop
pop
jne
imul
pop
jnp
movsb
daa
dec
lock
xor
lods
int3
sub
insb
xor
lea
test
addr16
sbb
into
leave
or
test
and
ja
ja
cwtl
mov
pop
dec
or
mov
in
cmc
lret
orb
sub
adc
sbb
or
rorl
xchg
das
pop
shl
xor
shlb
pushf
xchg
or
fbld
clc
mov
daa
push
xchg
bound
or
sarb
outsl
leave
popa
mov
and
cs
xchg
es
pop
cmp
add
and
loopne
push
inc
out
ljmp
mov
push
cli
pushf
adc
xchg
push
push
ds
adc
or
push
cmp
in
pop
fdivs
xor
jp
jb
pop
hlt
inc
mov
pop
xchg
and
inc
sbb
and
fidivs
std
jno
mov
jbe
out
out
movsl
popf
enter
sbb
out
sti
cli
aam
jg
clc
mov
jne
sub
dec
or
adc
jg
je
fisubrl
mov
fbld
dec
or
xchg
xor
jge
cmp
dec
cmp
jnp
cmp
bound
jno
fidivs
xor
dec
xor
jbe
lcall
in
push
int
gs
push
jle
arpl
push
movl
jns
mov
in
filds
sbb
mov
aaa
dec
int3
pop
sbb
mov
jl
sbb
mov
pop
gs
add
daa
out
test
rcl
rclb
mov
fs
push
push
inc
jle
out
xchg
or
lcall
outsb
or
add
jno
pop
aaa
xchg
inc
jecxz
scas
jns
inc
rcll
add
sti
adc
out
sbb
out
not
push
sbb
arpl
cmp
repnz
adc
jmp
jmp
jp
mov
sbb
inc
xor
daa
mov
jne
inc
pop
mov
mov
dec
or
mov
push
xchg
push
pop
sub
mov
je
fcomp
mov
test
stos
sub
test
shlb
lahf
jo
add
cvtps2pd
fistps
in
pop
pop
add
pop
mov
lret
loopne
mov
fucom
into
leave
lahf
aam
mov
inc
test
aas
and
repnz
outsb
xlat
out
lea
push
xor
pop
movsb
dec
roll
stos
xor
repnz
mov
mov
std
andb
fisttpl
push
in
shll
pop
mov
pop
popa
or
fistl
lret
into
std
iret
mov
lock
jp
addr16
add
sti
aas
pop
jge
arpl
loope
inc
adc
jecxz
push
int3
and
mov
jp
mov
mov
push
insb
add
and
test
lock
cmp
cs
in
push
push
adc
push
pusha
jp
xchg
xchg
or
dec
mov
out
sub
sbb
int
mul
pop
cli
loop
pop
or
push
daa
push
arpl
inc
jno
sub
sbb
mov
mov
je
xorb
movsb
cmp
ret
enter
pop
mov
push
jo
sub
push
jb
cmp
sbb
add
cmpsb
pushf
fldcw
add
jge
mulb
insl
movsb
cmp
cmp
mov
or
sbb
rclb
jae
add
jg
dec
add
jle
add
inc
xchg
dec
inc
inc
filds
out
mov
imul
push
mov
in
push
jge
lods
mov
in
adc
gs
jp
sbb
pop
jle
push
sti
push
ret
ret
mov
das
sub
pop
inc
les
mov
fwait
iret
inc
mov
int
push
in
mov
jno
or
ror
mov
outsb
mov
pushf
ja
fimuls
popa
pop
and
es
das
xor
sbbl
xor
arpl
popa
test
dec
cwtl
sbb
movsl
cld
xchg
or
mov
jnp
add
lcall
xor
repz
addr16
insl
or
ret
push
cwtl
add
push
push
fsubrl
xchg
sbb
scas
aam
je
pop
stos
aaa
mov
adc
ljmp
jle
mov
fisubrs
gs
xor
test
movsl
or
mov
and
bound
movsl
mov
inc
xchg
cli
pop
fadds
cltd
push
decl
fwait
adc
inc
fildl
das
aas
mov
rclb
mov
pop
add
mov
xor
lds
andl
in
add
in
mov
scas
fildll
push
pop
and
imul
rclb
push
idivb
push
lds
mov
inc
mov
pop
jg
imull
cltd
sbb
aas
enter
call
xchg
rorb
imul
push
iret
decb
sahf
loope
ljmp
loope
mov
pop
into
das
fs
jae
std
fcoml
cld
adc
loopne
jo,pt
rcrb
xlat
adc
xor
es
jnp
jbe
out
mov
pop
out
push
xchg
push
rcr
sub
outsb
mov
mov
int3
jb
nop
pop
mov
cmp
ret
fsubrl
ss
sbb
std
push
push
call
dec
mov
adc
ljmp
loop
dec
rorb
xchg
push
cmp
test
mulb
insb
mov
push
imul
dec
push
mov
xchg
pop
pop
popa
adc
sub
stos
shl
or
xor
jno
loope
push
das
bound
mov
pop
xor
jb
fstl
jne
add
dec
sub
add
cmp
push
xchg
dec
ret
inc
xor
mov
shll
mov
or
stos
addl
xorb
sub
push
in
jne
inc
sbb
jae
test
dec
pop
lret
rclw
outsl
jg
mov
in
adc
sbb
xlat
mov
pop
cltd
add
lock
leave
xor
loop
sbb
fnstcw
cltd
sbb
xchg
cld
and
mov
cmp
adc
dec
inc
std
aaa
inc
add
mov
push
mov
test
es
cmp
test
mov
add
ljmp
jle
aaa
jbe
mov
and
xchg
add
les
xor
push
or
add
out
out
and
cmp
mov
or
andl
orl
mov
and
sub
fisubrs
pop
adc
pop
int3
add
mov
sub
jmp
scas
decl
lret
movsl
xor
jl
int3
mov
leave
push
test
or
rorb
test
sub
andb
push
push
inc
sub
cmc
jno
test
fcompl
rcl
inc
loopne
mov
shrl
subl
push
lret
sub
cmc
aas
jge
mov
jecxz
sub
mov
push
mov
jbe
sbb
inc
pop
hlt
jp
pop
inc
mov
pop
adc
cmpsl
int3
xor
cli
and
adc
mov
inc
mov
loop
jp
je
mov
jo
test
push
adc
cwtl
pop
lret
or
mov
je
sub
fwait
movsb
push
mov
rcll
popf
dec
inc
arpl
adc
aam
movsl
inc
push
and
test
mov
jmp
mov
imul
or
pop
add
out
stos
adc
jmp
repz
dec
loopne
dec
int3
add
ljmp
cltd
xor
lds
ficoml
push
daa
out
xor
and
imul
dec
cmp
int3
push
push
jo
andl
sti
add
jmp
pop
inc
inc
shr
pop
in
inc
push
enter
out
inc
test
dec
sbb
push
mov
aam
xchg
insl
mov
dec
push
xchg
pop
sbb
flds
mov
daa
in
jne
and
xchg
and
ljmp
inc
xlat
loope
push
arpl
sub
xor
mov
or
aad
sub
and
lret
adc
lahf
loop
testl
dec
push
insl
call
xchg
cwtl
movsb
idivb
test
les
xchg
sub
int
fld
push
iret
push
dec
xchg
and
push
pop
sub
push
push
adc
sbbl
gs
add
pop
out
xor
xchg
ss
shll
mov
inc
cmp
push
and
push
subb
or
dec
std
lahf
add
call
lcall
xor
imul
xchg
jo
test
sbb
sub
ret
or
jne
lods
xchg
je
adc
adc
inc
xlat
cli
in
cli
push
dec
adc
inc
or
inc
add
daa
lahf
mov
xchg
pop
call
dec
adc
xchg
in
divl
mov
jnp
mov
lock
sar
jmp
in
cmp
out
movsb
jb
inc
test
xchg
rcrb
or
enter
in
xchg
xchg
ret
addps
fbld
push
fnsave
clc
ficoms
insb
gs
xor
mov
adc
sarb
or
ja
dec
in
fwait
sbb
arpl
je
add
mov
mov
xor
mov
inc
stos
movsb
out
cmpsb
repz
sbb
push
addr16
jg
pop
nop
mov
movsl
xor
pop
xlat
adc
gs
xchg
movsb
pusha
shrb
and
es
xor
out
hlt
push
loope
scas
sbb
sbb
cld
mov
fdivr
pop
dec
adc
mov
add
adc
cmp
xlat
jno
mov
lret
inc
scas
sub
icebp
and
ret
shl
inc
mov
ret
fisubl
add
add
xor
sbb
jnp
ds
and
and
add
push
sbb
sbbl
pop
mov
cmp
add
in
stc
sbbb
or
cmp
inc
shr
insb
pop
jno
xlat
adcb
dec
xchg
xor
test
xor
mov
negl
imul
imul
dec
loop
leave
stos
in
dec
std
enter
sbb
pushf
mov
cmp
mov
pop
mov
popa
lds
adc
xchg
xchg
inc
aam
rolb
mov
jbe
mov
hlt
or
jb
mov
aam
inc
mov
cmp
jno
cld
ud0
adc
push
inc
andl
cmp
mov
je
js
and
lahf
imul
test
fwait
lock
inc
push
push
cmp
xchg
xchg
sub
pop
pop
stos
xchg
mov
sahf
push
insb
pminsw
and
hlt
lods
cmp
sbb
shrb
jp
sub
imul
dec
jl
push
fucomp
jns
fsubrp
mov
dec
mov
dec
int
adc
jmp
lret
imull
ds
pop
sbb
cmp
push
or
lret
fiadds
popa
xchg
dec
insl
or
cmp
int3
into
xor
mov
cli
test
or
or
mov
test
sbb
pop
imul
cmpsb
dec
repz
sbb
jle
div
cmp
sub
mov
cmc
xor
dec
push
jae
mov
sbb
jmp
lds
in
gs
push
add
mov
mov
clc
fsts
pop
roll
mov
cmc
xchg
push
cmp
addr16
add
jb
lea
scas
iret
cmp
mov
push
movsl
sub
stos
push
or
daa
cmp
es
inc
xchg
fs
aam
pushf
idivl
mov
out
ficoms
lds
dec
cwtl
jnp
subb
push
xchg
jbe
sti
out
ja
mov
inc
sbb
xchg
aaa
lret
mov
pop
bswap
in
xchg
jle
icebp
popa
repnz
dec
dec
or
xor
dec
add
les
add
push
scas
les
popa
mov
mov
shrl
jg
out
and
les
scas
xor
inc
pop
push
mov
pop
lods
push
mov
outsb
insl
int
out
mov
daa
into
cmp
lcall
sarb
jecxz
jecxz
add
imul
pop
xlat
and
adc
lret
add
cmp
sti
daa
cmp
insl
jb
mov
leave
fdivs
lret
out
sbb
and
imul
ds
aaa
sub
jnp
and
mov
dec
jne
push
insl
inc
dec
mov
cmpsb
decb
mov
xchg
dec
bound
mov
push
mov
jbe
inc
pop
xchg
loope
mov
push
sarb
push
lods
fsubs
ficoms
repnz
pop
cld
insl
add
pop
movsl
pop
test
sarb
xchg
scas
jne
or
inc
xor
or
aad
xchg
mov
dec
insb
mov
xchg
adc
fiaddl
sbb
mov
test
inc
sbb
pop
sbbb
arpl
pop
mov
dec
dec
adc
les
les
mov
mov
rorb
addb
inc
pop
setbe
cmc
push
push
add
test
mov
mov
xchg
outsl
inc
mov
cld
xchg
rorb
roll
lea
insl
daa
mov
mov
jb
push
lods
pop
xchg
bound
mov
lcall
in
pop
adc
adc
push
adc
mov
aad
mov
add
mov
shr
mov
push
daa
or
hlt
inc
sub
insl
sahf
icebp
out
add
sbb
adc
xchg
cmp
xchg
data16
jne
xor
test
loop
out
inc
inc
je
nop
push
or
mov
mov
sub
inc
and
mov
add
mov
push
int3
lock
cmp
adc
mov
xchg
lahf
mov
sbb
aas
add
lds
mov
dec
nop
cltd
jae
insb
in
cmp
mov
pusha
inc
mov
loope
test
cmp
inc
shlb
imul
lret
repnz
jge
xchg
rolb
pop
loope
out
pop
push
popa
lret
push
push
fsubl
into
popf
hlt
inc
int
lds
mov
shll
sbb
fcmovne
push
repnz
sub
or
orl
cld
dec
xor
rolb
cmp
jno
pop
pop
adc
mov
sub
mov
nop
adc
cmc
and
cli
xchg
out
or
sti
jge
lahf
stos
xchg
cmp
pop
loope
fadd
mov
adc
inc
pop
lock
out
or
das
addr16
in
lcall
dec
cmp
popf
pop
push
inc
and
xchg
or
xchg
sub
jns
das
add
fcomps
test
sub
mov
xchg
cmp
and
inc
data16
dec
xchg
push
push
sarl
into
ss
inc
std
pop
xchg
push
mov
mov
test
adc
push
and
bound
sbb
sbb
in
jp
adc
shlb
pop
fsts
pop
outsl
sub
inc
out
cmp
in
mov
es
dec
lock
xor
xchg
out
push
push
stc
push
push
add
hlt
push
pop
movsl
mov
or
cwtl
xor
add
sub
out
fsubrl
popf
push
ret
sbb
jp
or
imul
sub
jb
testl
cmp
bound
popa
add
and
dec
aam
jo
pop
mov
outsb
xchg
nop
arpl
mov
add
push
mov
repz
cld
inc
pop
js
jnp
mov
stos
ret
movsb
cmpsl
adc
or
sti
push
jle
adc
sahf
push
leave
push
adc
sahf
push
ret
lods
call
jecxz
test
or
enter
sbb
or
sbb
jbe
lods
shr
mov
enter
iret
loope
and
xor
mov
adc
dec
shrl
inc
add
divl
cmp
cmp
aam
sbb
push
icebp
mov
sarb
lds
sti
sub
bound
cwtl
out
or
aaa
ret
shll
xor
jns
lret
xchg
mov
jl
cmp
jmp
jp
pushf
sbb
in
arpl
mov
fiadds
int3
lea
xchg
call
stos
push
push
mov
mov
sbb
adc
mov
scas
nop
cltd
icebp
aad
jl
mov
jns
and
in
push
sahf
push
notl
pop
dec
push
push
hlt
xor
lcall
dec
mov
xor
dec
mov
iret
dec
mov
or
mov
adc
mov
aam
andb
clc
xor
out
mov
xor
xchg
mov
add
jb
xchg
jae
lret
stos
and
gs
push
mov
fwait
and
sbb
jae
pop
cmp
mov
xchg
std
ja
popf
dec
enter
call
xchg
xor
sbbb
cmp
stc
and
add
loop
jg
rcll
push
bswap
scas
pop
orb
lds
in
lock
pop
sbb
rcr
dec
and
sarl
cltd
push
mov
scas
fdivrs
xlat
inc
sbb
fldenv
or
adc
shll
outsl
sbb
adc
xor
pop
data16
scas
mov
fs
and
ret
add
jo
in
and
dec
imulb
and
aam
pop
xor
movsl
push
aad
rcr
in
js
jne
xor
loope
adc
pop
mov
jne
int3
lret
loop
add
aaa
int3
jbe
jns
push
pop
je
std
pop
cmc
idivb
sbb
pop
adc
jo
push
sbb
adc
out
sbb
pop
adc
arpl
sub
ret
outsb
jge
sub
out
or
sub
int
adc
adc
inc
lds
lret
jb
xchg
mov
and
data16
test
pop
sub
mov
mov
movsl
daa
arpl
sub
or
repz
push
in
ror
cmp
fimuls
adc
js
insb
pop
jns
rcrb
jmp
dec
xor
dec
fnsave
mov
pop
out
nop
add
xor
push
push
jmp
lea
in
bound
mov
aam
ret
das
xchg
xlat
repz
xchg
ss
push
icebp
push
push
fisubrs
in
xchg
fbstp
stc
xchg
imul
dec
rcrl
sbb
push
cmpsb
cwtl
into
shrl
decb
fisttpl
shrl
icebp
out
sarl
push
sbbl
add
mov
out
sub
xchg
out
ljmp
or
out
and
hlt
fidivl
aam
or
push
into
mov
sbb
stos
pusha
mov
test
call
cltd
add
sbb
mov
stos
rcr
cmp
lcall
shll
fimuls
sbb
push
rcll
sahf
fs
ficoml
pop
push
aas
call
insb
popa
mov
outsb
sahf
push
subl
and
sub
push
dec
mov
iret
pop
insl
lock
adc
mov
mov
call
mov
cmp
and
lds
jns
push
xor
pusha
loope
xchg
rcr
ljmp
fs
sub
ficompl
leave
out
das
lret
stc
loop
push
pop
loop
js
pushf
repnz
jno
inc
mov
xor
or
enter
inc
fmuls
pavgb
into
bound
inc
mov
or
andl
test
daa
jmp
arpl
jp
mov
push
outsb
add
push
loope
jmp
xor
and
dec
jle
orl
mov
ljmp
popf
frstor
rcr
xlat
sbb
popa
xor
in
testl
out
adcb
mov
mul
mov
int
sub
mov
add
insl
mov
hlt
pop
or
inc
addb
and
fs
movsl
sbb
jle
cmpsb
push
mov
inc
push
xchg
pushf
bound
sarb
cmc
mov
mov
cmp
push
fisubs
cmc
pusha
negb
enter
in
sbb
out
fcoml
add
cs
jb
shlb
mov
push
shlb
fwait
jbe
xor
mov
cs
bound
push
add
sub
addr16
aad
lods
popl
lds
or
icebp
inc
mov
jge
ljmp
jne
jne
addb
jle
lret
cmc
fiadds
sarl
out
and
movsl
lds
iret
addl
stos
lock
lret
or
add
popf
xor
dec
mov
test
cmp
jns
dec
das
sub
mov
or
out
loop
rcll
arpl
mov
shll
inc
add
js
test
pop
inc
mov
data16
std
lret
cmp
adc
jbe
mov
fisubl
inc
rorl
das
or
inc
jg
jns
loope
shlb
mov
mov
outsl
pop
sbb
ss
push
jnp
ja
jg
xchg
cltd
das
fcompl
mov
insl
mov
shlb
lods
leave
inc
mov
popf
mov
pop
cmp
jnp
fs
pushf
popa
push
push
cmp
jp
rclb
sahf
push
mov
ss
and
or
rcrb
pusha
inc
jo
lahf
ss
adc
repz
mov
fs
stos
out
push
or
mov
cmp
nop
stos
mov
and
push
in
cmp
jmp
xlat
rcll
sar
std
ficomps
out
fs
mov
pop
lock
cmpsl
outsb
sbb
arpl
in
mov
xor
loope
sbb
add
fs
dec
cmp
cltd
pop
or
push
outsl
mov
leave
mov
addl
js
fwait
mov
rcr
lock
out
sub
clc
scas
ja
pop
mov
inc
sbb
or
mov
and
daa
sbb
insb
push
mov
fistl
pop
and
add
addr16
fldcw
cltd
xlat
push
xchg
mov
mov
jo
push
add
ss
adc
mov
pop
stc
dec
popa
xchg
inc
lahf
lods
push
ret
jge
push
stos
or
mov
sbb
andl
stos
inc
and
pop
ss
loope
inc
xor
xchg
packssdw
pop
fs
pop
mov
adc
sbb
sbb
xor
jnp
iret
test
or
popf
xor
scas
push
push
inc
outsl
cmp
lods
or
arpl
fdiv
iret
cmp
sbb
jnp
mov
jg
push
inc
xchg
in
repnz
add
or
jmp
daa
ret
add
jl
ds
xchg
cs
mov
lcall
out
mov
ja
dec
pop
mov
aam
pop
sahf
mov
push
shl
push
or
xor
cs
cmp
or
cld
xchg
pop
data16
cmc
or
mov
and
jg
dec
jle
dec
repz
dec
or
dec
int
jmp
into
enter
pop
insl
push
sarb
inc
mov
fsubrs
xor
fucom
test
and
test
shll
and
add
xchg
arpl
pop
scas
ret
mov
xor
cmpl
out
and
sbb
fldt
cmp
xor
jne
sub
dec
pop
dec
je
sbb
sbb
fidivrs
sbb
or
push
mov
cs
movsb
adc
sub
or
cli
inc
stc
cmpsl
push
adc
pop
inc
fcomi
icebp
vpackssdw
std
scas
xchg
mov
add
aaa
mov
xchg
jae
out
mov
adc
mov
lret
jmp
aas
adc
mov
repnz
shlb
stc
xor
rclb
decb
int3
cmpsb
in
pop
stc
out
push
jmp
jl
in
sbb
cmp
hlt
inc
addr16
fsubr
jne
test
test
mov
pop
dec
ss
scas
ret
popf
push
push
jnp
xor
adc
cmpsb
add
adc
cmp
setp
add
jle
or
mov
or
movsb
addb
xchg
add
xor
lahf
aaa
adc
ret
in
add
sbb
popf
xchg
mov
movsl
lea
insb
adc
mov
pop
lcall
sti
cmp
fs
aas
adc
sub
pushf
stos
jg
add
clc
in
out
mov
repz
loope
out
das
daa
fisttpl
orb
cmp
in
mov
pop
add
vaddps
sub
insb
or
daa
inc
loop
lret
js
ss
push
jb
test
inc
mov
mov
sbb
xor
fwait
test
mov
adc
mov
jp
or
fwait
dec
mov
add
or
xor
add
pop
rclb
in
or
mov
mov
das
arpl
sbb
sbb
inc
push
hlt
addl
mov
jmp
scas
xchg
icebp
leave
into
mov
push
pop
rcl
int3
or
or
sti
test
leave
ljmp
xor
imul
dec
mov
jecxz
sbb
lcall
scas
shrb
sbb
movsb
int3
ds
sub
sbb
jne
lcall
and
add
jmp
mov
mov
adc
sbb
imul
mov
mov
ja
adc
jno
mov
mov
das
xor
dec
push
mov
mull
loope
jb
xor
inc
repnz
mov
mov
das
and
jg
cmp
fistl
push
jp
fdivrs
std
and
hlt
sbb
ja
add
dec
inc
push
sub
cmp
mov
jp
add
iret
jge
in
jnp
and
mov
xchg
rorb
jmp
popa
loopne
stc
in
cmpsl
dec
lcall
popf
outsb
cli
push
jg
dec
inc
dec
aaa
sarl
sbb
push
lods
cs
inc
or
and
out
dec
cwtl
and
pop
cmpsl
mov
mov
inc
mov
cli
iret
push
xor
ljmp
stos
mov
dec
lret
and
loop
pop
xchg
push
outsb
adc
sbb
out
lock
rorb
dec
add
fldcw
aam
jb
jae
pop
pop
xor
out
stos
js
cltd
push
test
ds
sub
rdpmc
or
in
daa
shr
ret
push
stos
je
mov
cltd
int
rorb
dec
mul
mov
es
test
xor
cmp
scas
inc
and
pop
lret
adc
enter
enter
xchg
or
adc
or
add
and
imul
out
out
sahf
or
test
popl
jno
cmpsb
jnp
xlat
inc
jbe
or
std
add
xor
jno
cmp
jno
adc
mov
or
fwait
repz
mov
popa
mov
mov
les
pop
loop
pop
popf
int3
jg
push
mov
popa
popf
mov
aam
lds
xor
or
adc
bound
insb
cld
cmpsb
lods
xor
aam
fildl
mov
jae
call
inc
lods
ja
mov
xor
pop
push
ret
dec
push
mov
jno
pop
xchg
adc
inc
inc
mov
into
xchg
inc
cld
jl
sarb
fidivrs
movsl
jbe
or
cli
add
mov
mov
pop
dec
loop
jg
iret
dec
out
or
cmc
es
pop
jp
addb
lods
pop
in
imul
mov
call
push
stos
pop
bnd
outsb
dec
in
fsubrl
call
mov
xor
or
and
daa
pop
call
int3
lods
lahf
rcrw
div
test
jb
pushf
daa
push
xor
adc
cmpl
imul
sub
ret
int3
je
adc
or
sbb
stos
out
xor
xor
xor
pop
pop
dec
insl
repnz
pop
aad
xchg
mov
inc
cmp
cmpb
jp
pop
cld
nop
adc
add
ds
sbb
mov
xlat
mov
icebp
mov
sub
lahf
and
sbbl
shll
adc
sub
clc
cmova
fwait
adc
xchg
pop
sti
xchg
push
loopne
mov
sahf
mov
orb
jbe
and
movsb
jg
loope
ss
popf
cmp
out
add
imul
cmc
mov
push
xchg
into
pop
or
adc
pop
ljmp
ds
loope
in
and
pop
xchg
jbe
js
outsl
shl
pop
xchg
mov
adc
inc
xchg
lcall
xchg
inc
cmp
dec
jl
in
jns
mov
bswap
popa
nopl
fistl
mov
pusha
xchg
cmp
jno
mov
loope
jno
cmp
xor
rcll
fcomip
aas
fiaddl
test
or
or
mov
in
fdiv
scas
push
add
cld
adc
ja
adc
xor
lahf
jle
dec
loop
test
jns
jl
mov
cmp
cmpl
add
xchg
xor
mov
push
adc
mov
adc
jmp
mov
test
sub
lods
xchg
push
cmp
cmc
dec
sbb
jbe
push
data16
xchg
push
cs
xchg
movsb
mov
adc
inc
cmp
or
orl
and
mov
lods
cltd
sub
push
mov
sub
cmc
inc
mov
xchg
inc
mov
psrad
mov
xor
push
cmp
push
jo
popa
pcmpeqw
lret
out
jmp
pop
inc
sbb
mov
ljmp
sti
xor
pusha
mov
pusha
jne
adc
xchg
out
andb
adc
dec
pusha
in
test
push
xchg
pusha
jbe
jnp
inc
cmpsb
or
mov
rcrb
jns
lahf
push
xor
shl
inc
repnz
jbe
xchg
mov
fimuls
rcll
das
mov
cwtl
fisubl
mov
adc
mov
rorl
push
insl
std
mov
shlb
xchg
fmul
arpl
pop
sub
rol
jns
push
xchg
cwtl
shll
lahf
loope
sbb
mov
or
stos
jo
add
push
pop
repnz
cmp
sbb
xor
cmp
aas
xchg
push
add
cmpl
xchg
ret
cs
jnp
sub
push
and
movsb
push
and
test
add
add
pop
cld
and
pop
in
daa
mov
int3
movsb
cmp
sub
fisubl
mov
scas
sub
adc
jno
pop
dec
add
push
cmp
dec
imul
mov
cmc
imul
xchg
xorb
or
sub
lea
adc
adc
mov
subb
mov
mov
sbb
popf
imul
scas
fldt
fidivl
sarb
mov
push
lods
leave
in
xchg
xor
pop
adc
cwtl
loope
icebp
adc
int
gs
das
dec
popa
mov
mov
or
mov
rcll
jp
push
out
xchg
cmc
push
jge
pushf
call
andb
ret
fsubrl
xor
aas
sahf
cmp
lret
seta
cwtl
arpl
sub
mov
mov
xchg
xchg
aam
lcall
iret
jne
adc
or
lock
int3
jecxz
ret
cmp
adc
push
cmpsl
into
mov
loop
dec
stos
enter
dec
adc
dec
sbb
int
jno
inc
cwtl
sahf
mov
inc
std
mov
rcl
cld
imul
xorb
int3
ja
jb
shrl
jecxz
mov
lret
lock
js
mov
aas
insl
jmp
lea
repz
jno
sbb
sti
sahf
push
pop
mov
out
outsb
insl
cmp
nop
dec
mov
mov
xor
scas
lock
pop
scas
inc
mull
mov
mov
pop
stc
mov
cltd
cs
leave
push
pop
mov
sbb
and
dec
int3
push
outsb
sub
flds
dec
inc
hlt
mov
out
jp
cltd
xor
fdivs
out
int
cmp
sbb
bound
pop
cwtl
xlat
push
or
in
not
fdivl
or
mov
dec
add
fcmovb
jo
loopne
movsb
leave
mul
scas
sbb
test
add
or
add
stos
pop
lcall
scas
xlat
adc
ret
push
add
dec
bound
stos
outsl
movsb
xlat
test
addr16
gs
add
rcrb
pop
fwait
jmp
stos
pusha
dec
cli
push
xor
out
cs
movsb
jl
out
call
adc
movsl
dec
pop
jmp
stos
or
xchg
call
push
inc
movsb
cmp
mov
jecxz
xchg
sarl
std
nop
xchg
push
cmp
mov
flds
dec
mov
cli
insb
cmp
in
mov
ret
inc
cld
lcall
mov
out
stc
ret
push
add
test
bound
jae
and
movsl
adc
das
es
xchg
inc
popf
push
mov
fisttps
jnp
ficompl
bound
pop
add
mov
xor
pop
mov
sbb
sbb
add
insl
inc
imul
aam
add
in
add
mov
popa
push
xor
fisttps
xlat
ds
popa
mov
hlt
icebp
and
insb
pop
push
push
xorb
pop
dec
jmp
xor
fsubs
std
mov
jmp
jne
outsl
sti
mov
cmp
pop
push
aad
add
sub
out
cmp
push
fistl
inc
sbb
push
inc
mov
push
and
pushf
bswap
in
cmc
cltd
loop
push
pop
test
scas
repnz
push
ds
dec
addr16
inc
adc
pop
mov
pop
iret
sbb
ja
gs
dec
and
mov
ds
dec
jecxz
iret
adcl
notb
not
or
fs
push
imul
frstor
lds
ror
and
inc
mov
cmpsl
xor
cwtl
cs
cmp
repz
inc
mov
lods
out
add
loop
add
xor
xchg
jp
or
add
adc
push
insb
and
cmc
ret
push
or
dec
aas
mov
xchg
outsl
add
popl
lods
dec
arpl
pop
mov
jno
cmp
push
pop
adc
insb
aas
jg
ljmp
in
and
sub
shlb
pushf
or
mov
divb
pop
xchg
adc
mov
pop
aas
insl
add
dec
adc
inc
sub
nop
lock
jno
xorl
dec
test
lods
addr16
sbb
stc
ret
in
mov
jecxz
xchg
jp
push
fwait
cmp
nop
push
insl
icebp
push
leave
enter
in
add
pop
addb
cs
mov
leave
or
add
mov
es
cmp
ret
pop
lcall
inc
jbe
rorl
add
jae
dec
sar
clc
mov
add
mov
push
push
bound
jp
cmp
cli
je
adc
scas
jns
and
jmp
or
out
into
xchg
cwtl
divb
jle
enter
out
inc
jns
sahf
mov
popa
xchg
sub
jae
je
cmp
xchg
inc
mov
add
fists
mov
fwait
out
int
rcrb
or
adc
test
and
je
mov
movsb
repnz
cmp
lahf
pushf
clc
or
lock
stos
icebp
imul
mov
repz
cmovo
inc
or
fld1
jmp
mov
aam
shlb
mov
xchg
lahf
push
pop
jns
mov
shlb
fists
in
fldt
sbb
ss
inc
sti
xchg
fsubs
push
xchg
inc
push
push
push
scas
cmp
push
pop
xor
fucomip
or
lret
int
mov
pop
cli
ss
daa
push
jnp
cmp
adc
push
imul
xor
jo
outsl
and
fstpt
rclb
lods
add
pusha
adc
push
mov
ficomps
push
adcl
adc
jmp
shll
movsl
out
insb
cmp
aas
fwait
jno
stos
mov
call
push
arpl
mov
xor
sahf
rcrl
add
dec
cld
mov
aad
inc
or
lds
jmp
mov
outsl
fsubr
cmp
repz
pop
fmul
dec
mov
sbb
push
stc
push
test
sti
xchg
ss
lea
jne
in
pop
icebp
ss
loop
sarb
mov
out
fidivl
pop
incl
pop
and
xchg
add
cmc
pop
mov
pop
fidivl
push
jmp
sub
jle
das
jnp
outsl
adc
pop
xchg
test
or
outsb
adc
mov
sti
mov
lret
cli
adc
ret
out
sub
adc
add
ss
xchg
roll
mov
push
cld
dec
cmp
in
mov
cmp
dec
in
mov
mov
daa
xchg
shr
int
mov
scas
shrl
pop
mov
mov
push
and
movsb
sbb
in
lea
jo
filds
popa
add
fadd
sub
insb
xchg
fcos
or
jecxz
pop
lds
cmp
push
int
mov
and
xchg
sub
sub
cli
sub
das
aaa
int3
imul
sub
in
or
jg
popa
pusha
mov
dec
adc
or
out
inc
xor
sub
pop
and
fdivl
add
sbb
dec
inc
sti
fildl
dec
push
iret
mov
inc
add
outsl
ret
xorl
jg
xchg
movsb
mov
ja
data16
outsb
and
cmp
adc
mull
bound
insb
pop
inc
mov
mov
fcoml
sbb
data16
cmp
mov
push
inc
js
fiadds
xchg
xchg
adc
dec
adc
mov
loop
jle
fidivs
push
repnz
addr16
adc
test
lock
negb
xor
jno,pn
mov
out
dec
push
add
xchg
cld
mov
add
push
adc
jg
hlt
out
mov
mov
jge
dec
sub
stos
adc
cld
rorb
mov
pop
ret
cmc
test
mov
add
mov
dec
and
mov
pop
dec
rorb
rcl
adc
inc
mov
addr16
and
cli
dec
pop
movsb
sbbl
dec
xchg
sarl
loopne
jbe
xchg
sbb
mov
stc
inc
in
push
lret
mov
int3
aam
xorl
add
pop
xchg
inc
fnstcw
loopne
add
jle
lea
pop
xchg
repz
push
lahf
xor
mov
aaa
out
pop
fstl
inc
push
xchg
lods
aad
cli
dec
int3
push
ss
mov
mov
ljmp
je
add
pop
jp
cmp
aad
xadd
fisubl
ja
mov
sub
neg
pop
pop
jbe
jbe
addb
popf
add
pop
sbbb
sbb
pusha
add
xchg
test
pushf
pop
arpl
insb
push
daa
inc
or
mov
push
out
out
jmp
sbb
je
shlb
pop
jmp
repnz
ds
pop
lcall
movsl
pop
pushf
pushf
jl
in
repnz
in
cs
mov
arpl
dec
cs
ja
pop
pop
pop
aad
mov
mov
scas
inc
mov
rol
aas
loope
lock
inc
xchg
cmpsb
leave
xor
imul
fcmovbe
adcb
cmp
adc
ss
mov
repnz
sbb
adc
and
jne
movsb
inc
jns
aad
inc
movl
shll
sar
iret
xchg
nop
mov
adc
add
add
enter
cwtl
clc
aam
jne
test
jb
aad
sarl
adcb
inc
test
xor
test
decb
adc
repz
call
push
loope
mov
stc
or
popa
enter
pop
shll
jecxz
rcl
in
mov
popa
iret
jmp
inc
outsb
aas
gs
in
dec
pop
jno
iret
mov
imul
lret
js
pop
add
ret
outsl
dec
mov
pop
out
add
mov
out
pop
mov
xchg
mov
push
inc
addr16
out
imul
dec
xchg
pop
mov
jae
add
push
mov
cld
adc
mov
mov
shll
xor
push
shl
adcb
jle
inc
shl
movb
scas
mov
ret
aam
mov
sub
fisubrs
inc
and
mov
mov
lcall
mov
in
sbb
stos
cli
aaa
fwait
add
fistpll
repnz
pop
mov
leave
add
ds
popf
push
rcll
mov
loop
xchg
xchg
stc
repz
loopne
hlt
insb
pop
sub
lret
jo
test
xor
addl
cmc
popf
inc
jbe
pop
insl
mov
nop
mov
or
mov
cmp
dec
xchg
cmc
sub
mov
xor
or
das
add
scas
push
pop
jae
pop
das
stc
daa
sub
outsb
and
sbb
mov
xor
inc
cmp
sti
cs
jg
jp
xor
sbb
loope
das
into
jne
mov
mov
fmuls
push
gs
mov
push
aas
popa
int
outsb
inc
xchg
add
pcmpeqd
call
push
pop
cmp
cmp
push
mov
test
sbb
sub
mov
test
lret
aam
mov
shll
mov
push
lods
xor
in
loop
mov
data16
gs
out
xchg
rolb
xchg
or
sub
loope
inc
cmpsl
je
out
add
loope
inc
mov
add
mov
add
jae
push
cltd
shll
sbb
xchg
pushf
fidivrs
cmp
xor
in
es
mov
lret
mov
push
dec
in
jnp
addr16
and
xor
scas
cmp
ja
lds
imul
xchg
sahf
mov
cmpsb
xlat
or
scas
cmp
nop
out
addr16
sahf
mov
incl
out
fnstcw
sbb
gs
test
shll
sub
es
jnp
in
pushf
out
pusha
mov
lahf
loop
adcl
movsl
mov
fwait
sub
and
add
xor
jmp
lahf
clc
fwait
rclb
jns
and
mov
dec
test
adc
or
dec
jecxz
jle
cmp
xchg
jae
pop
sub
loop
repnz
lock
leave
inc
movsb
add
aas
bound
pop
ret
repz
pushf
mov
push
xlat
lea
lea
lret
push
xchg
fsubrl
cmp
je
or
cmp
add
xchg
sub
xor
jle
xchg
xor
cltd
aad
lods
dec
pop
add
jmp
push
in
sub
push
dec
lock
jno
mov
ret
aad
mov
xchg
daa
lea
fmulp
push
push
fistl
sub
sub
cmpsl
sti
xchg
andl
aad
out
jl
mov
pop
outsb
in
push
idivb
dec
mov
mov
cs
xor
stos
aas
dec
push
insl
jne
lods
scas
xchg
xlat
fmull
push
into
mov
fbstp
jmp
outsb
sahf
mov
adc
mov
sbb
movsbl
repz
test
andb
xchg
jle
ss
and
shll
dec
add
lret
jne
mov
xchg
pop
sbb
popf
or
imul
mov
mov
jg
mov
sbb
pop
push
mov
sub
xchg
mov
sbb
arpl
jb
add
scas
jbe
roll
or
fadd
pop
xchg
push
pop
push
xlat
dec
leave
jbe
sti
gs
aam
jg
mov
sbb
test
mov
pop
sub
lret
cli
dec
or
jno
xchg
aad
inc
jle
cmp
jno
sub
outsb
xlat
es
inc
movb
adc
jns
jge
rcll
js
mov
jno
popa
mov
mull
rcrb
stos
fs
push
addr16
push
jg
test
cmp
mov
xchg
pop
push
insl
icebp
leave
mov
sbb
in
xchg
inc
icebp
aaa
adc
repnz
lds
mov
adc
xor
and
fdivs
aad
mov
or
cmpl
outsb
adc
stos
xor
ljmp
outsb
inc
in
and
scas
jae
dec
dec
adc
mov
mov
mov
les
loop
orl
mov
inc
jno
lahf
dec
enter
cmpb
adc
xchg
sbb
pop
add
movsb
and
sub
adc
push
ja
add
ret
cmp
push
ss
push
lds
push
push
lock
outsl
mov
adc
jbe
adc
imul
add
mov
mov
or
shrd
or
movsb
aam
andb
pushf
loope
std
idivl
push
in
xchg
popf
fnstsw
aaa
cmp
insb
xchg
push
and
mov
jg
mov
stc
jnp
mov
jo
repnz
mov
daa
in
arpl
pushf
cltd
and
jne
nop
mov
stos
push
xchg
insl
inc
and
loopne
ret
cmp
lret
data16
data16
mov
and
or
jp
mov
dec
pop
cmp
scas
addr16
cmp
ljmp
rcrl
fcomps
loopne
jl
xchg
andb
cwtl
add
mov
fldt
and
adc
pop
mov
push
mov
stos
mov
inc
dec
cmp
mov
mov
cld
psadbw
pop
jl
out
pop
sbb
fcmovnb
mov
jg
jae
adc
pop
shrb
bound
cmp
mov
in
push
lahf
leave
lahf
adc
int
xchg
mov
jg
lods
mov
mov
lods
sbb
iret
in
xchg
fildll
jecxz
aad
rcll
ret
jmp
mov
mov
hlt
popa
out
pop
sub
mov
push
in
or
fs
inc
into
scas
xchg
les
sti
outsl
popf
loope
mov
mov
mov
push
dec
cmpsl
and
inc
push
std
int
dec
mov
xchg
rolb
popa
pop
mov
les
aad
ja
dec
xchg
add
mov
xor
sti
test
sub
or
ja
mov
mov
push
lods
push
cmpsb
xor
ret
mov
cmp
bound
nop
push
cwtl
xor
jo
xchg
sbb
push
in
movsb
mov
push
fmull
fmuls
dec
loope
xor
movsl
ficoms
adc
dec
insb
cmp
test
int3
mov
and
mov
fwait
jl
call
addl
incb
stos
test
std
pop
inc
jg
mov
std
cmp
dec
mov
std
dec
pop
add
xchg
stc
stos
mov
imul
sub
mov
fisubs
mov
pop
pop
sub
in
lods
pushf
sub
pop
pop
sahf
xchg
ret
xor
sbbl
sbb
ret
cmp
aam
imulb
sub
cmp
loope
add
xchg
mov
popf
sbb
cld
push
sbb
bound
in
dec
lds
pop
fisttps
cmpsb
inc
imul
xchg
ljmp
xchg
jb
push
adc
lret
fsubrp
mov
insb
or
lret
je
test
sub
ficoms
mov
in
rorb
mov
mov
ret
pop
sub
fiadds
xchg
cmp
int3
jo
in
mov
cmp
lahf
pop
and
xor
sbbl
and
shll
sbb
pop
neg
addr16
xchg
inc
adc
das
loope
mov
iret
mov
cmp
andb
sbb
xchg
outsl
or
pop
xchg
lods
dec
ret
hlt
out
pop
sub
jb
lea
subb
jnp
popa
arpl
fs
out
xchg
lea
gs
loop
je
push
inc
inc
daa
stos
sub
cmc
imull
jne
outsb
xchg
and
cmp
lds
fldenv
arpl
fstpt
int
pop
arpl
test
sarl
bound
adc
mov
inc
jl
lds
test
shrl
pop
adc
inc
call
fidivrs
xchg
imul
in
ljmp
rcrb
or
push
jmp
or
ret
mov
fistpl
ret
sub
add
js
cmp
outsl
test
dec
out
and
into
stc
js
mov
jbe
hlt
and
pop
lahf
sub
mov
sbb
test
add
xchg
add
ja
lods
in
adc
int3
push
mov
test
les
push
jbe
rcrb
bnd
pop
mov
int3
sti
push
cwtl
cmc
inc
insb
sub
movsb
push
cli
mov
mov
mov
and
xchg
sbb
clc
insb
mov
sahf
loop
mov
mov
and
testl
or
xchg
sahf
ret
mov
mov
or
mov
mov
cwtl
pop
push
sub
test
addr16
xor
mov
lahf
test
or
sub
cmp
aas
cltd
cli
sbb
les
iret
outsb
jnp
les
int3
sbb
flds
leave
push
lahf
sbb
sub
out
push
adc
inc
sub
ds
add
push
dec
negb
pop
xlat
mov
jl
push
leave
mov
push
and
push
or
adc
test
pushf
pop
pop
or
push
clc
ljmp
mov
rcll
lcall
push
mov
icebp
or
movb
dec
test
sbbl
pop
lahf
sub
roll
dec
push
call
jbe
add
or
insb
and
outsl
imul
repnz
loop
push
gs
rcrl
sbb
push
mov
insl
stos
jae
pop
cwtl
inc
and
adc
mov
iret
push
pop
cmp
inc
mov
add
in
sub
jns
xor
mov
sub
outsb
imul
jns
ja
loopne
pop
mov
push
jle
insb
lock
rclb
sub
loopne
es
adc
jge
xchg
push
xchg
push
mov
ja
int3
sbb
data16
mov
mov
or
leave
jecxz
aaa
lods
adc
push
sarb
xlat
cli
ucomiss
xor
mov
xchg
jnp
or
mov
out
out
inc
fadd
sub
inc
in
aam
sub
rcll
cmpsl
fildll
nop
xchg
xchg
js
jmp
adc
or
cwtl
inc
add
es
jns
testl
loope
inc
mov
notb
or
mov
jg
stc
scas
xchg
dec
jo
dec
pusha
fwait
jmp
fwait
adc
dec
inc
push
pop
push
jb
mov
mov
inc
cmpb
cmp
jne
mov
repnz
xlat
push
or
loope
jnp
cmp
push
xchg
inc
je
stos
neg
sbb
data16
add
stc
mov
xchg
jg
push
jmp
mov
in
xchg
test
sbb
ja
ja
adc
push
stos
push
xor
aaa
add
cmp
dec
xchg
xchg
jmp
fcomps
add
sbb
mov
dec
in
xor
out
fstpl
and
mov
xorb
sbb
jle
push
fcomp
jo
rorl
or
ss
sti
mov
test
xor
lods
jle
out
cmpl
addb
subl
push
lock
popf
mov
les
ficomps
sbb
mov
jno
jp
mov
inc
add
mov
inc
xchg
filds
adc
and
jg
outsl
xor
add
mov
dec
mov
sbb
popf
adc
cmp
mov
out
mov
pop
xchg
fisubl
or
das
mov
je
push
test
in
sub
pop
shlb
ja
pop
sbb
xor
pop
and
push
pushl
xor
std
adc
cltd
dec
or
push
out
repz
mov
jo
xor
dec
dec
dec
and
mov
jg
inc
std
loop
mov
leave
inc
mov
xorb
xor
in
or
push
call
add
dec
mov
arpl
test
movl
pop
lods
push
dec
dec
je
loopne
push
lock
lods
jle
sub
shl
gs
ret
push
in
cmp
push
fisubrl
int
enter
fdivs
test
and
sbb
dec
inc
lea
adc
ret
or
and
lea
mov
out
and
cmp
push
lahf
pushf
je
jo
rorl
int
sbb
jne
rorb
inc
andl
shrl
ret
pop
adc
movsl
sbb
pusha
daa
mov
enter
inc
mov
lret
test
inc
jmp
dec
seto
fbstp
les
movsb
adc
into
int
cmc
orl
mov
adc
jnp
jbe
cmc
dec
cmpsb
jb
sub
cmp
push
xchg
inc
das
ror
dec
push
dec
in
nop
fdivrl
push
sbb
out
cmp
enter
cmc
stos
mov
push
jns
sub
jb
test
adc
in
and
xor
xchg
xchg
mov
gs
in
lock
xor
loopne
in
out
sbb
pop
in
je
lea
dec
jb
fsub
aad
mov
xor
scas
dec
xchg
mov
push
vmread
bound
mov
stos
shl
jg
add
add
ret
xchg
xlat
int3
aad
jbe
mov
and
xchg
decl
popa
xchg
bound
mov
aam
in
lret
lret
mov
aas
sub
ljmp
xchg
aam
shll
xchg
dec
iret
daa
and
xchg
mov
fwait
mov
jl
cmp
push
std
jg
cs
lret
rcl
popf
fwait
push
xchg
mov
nop
test
adc
mov
loope
inc
jbe
cmp
loopne
inc
je
rcrl
xor
lds
cmp
gs
mov
cwtl
fsubs
jb
ds
repz
sub
enter
mov
mov
cmp
mov
add
push
lea
xor
and
ret
test
imulb
xor
addb
aam
in
ljmp
cmp
mov
sbb
push
push
xchg
pop
and
dec
inc
push
test
sub
sahf
lods
add
adc
cmp
rorb
jg
ds
xchg
shll
sbb
and
xor
rol
rcrl
flds
fnsave
les
mov
ss
xor
je
popa
ret
inc
pop
mov
lret
mov
cmp
add
inc
in
mov
push
outsb
mov
das
sahf
pop
push
test
test
jno
mov
scas
ret
add
stos
call
lds
into
lahf
fsubrl
aaa
andb
mov
pop
lods
pop
push
repnz
push
movsb
push
subl
test
and
inc
repnz
mov
push
loope
inc
arpl
inc
xchg
add
out
push
into
stos
xchg
or
imul
add
jns
mov
aaa
cmpsl
push
outsb
mov
rcrb
mov
stos
fidivs
sub
ret
lods
xchg
repnz
inc
pop
aaa
dec
mov
push
loopne
cmp
std
xchg
jns
dec
jge
and
imul
out
loope
pop
push
stos
xchg
sub
and
std
pusha
sar
scas
ror
add
cs
or
push
mov
pop
test
loop
dec
pop
insl
sahf
dec
cmpsb
jnp
aas
call
add
sub
dec
dec
fmull
int
scas
sbb
in
cmpsb
cli
jns
mov
les
push
rolb
bound
sbb
jns
push
enter
call
inc
ljmp
add
test
jbe
aad
mov
jno
xchg
pop
pop
cltd
jge
call
inc
in
dec
fwait
cmpsb
test
outsl
aam
jno
int3
cmc
fistl
popa
sub
jo
mov
push
pusha
jp,pn
adcb
fs
or
ret
out
add
clc
int
mov
jl
loope
push
cmp
test
ret
aad
nop
fsubs
into
daa
push
call
js
jae
leave
and
enter
or
fdivr
push
mov
push
xchg
cmp
iret
sub
fsts
mov
inc
and
enter
inc
xchg
fnstenv
pop
test
pop
shlb
test
loope
xor
mov
sahf
repz
cmp
jge
lcall
cmpb
sti
lcall
pop
add
xchg
sub
outsl
insl
sub
enter
push
pop
mov
push
es
sub
cli
aad
dec
cmp
aam
jbe
jmp
push
enter
loop
dec
push
cmp
and
hlt
push
popf
int
mov
mov
test
jge
pusha
mov
fiadds
ret
shll
out
in
jo
mov
pop
ficoml
push
inc
add
lock
push
inc
mov
das
int
aad
xchg
dec
scas
mov
andb
sub
mov
int
and
cmpsl
enter
push
push
in
ret
bound
and
cmp
mov
arpl
ficoml
je
or
out
xor
lret
int
adc
lret
cmp
fucomip
lcall
ds
sbb
stos
xor
push
aas
jnp
add
test
push
sub
xor
or
lods
inc
pop
or
jp
pushf
dec
imull
mov
adc
mov
aad
addb
hlt
jne
mov
mov
rorl
jmp
sbb
push
aam
add
inc
dec
rclb
xor
ljmp
jo
movsl
mov
ret
iret
or
loopne
sarb
adc
jecxz
shll
mov
mov
int3
jl
shlb
popf
or
pop
cmp
fmulp
ljmp
scas
xor
addl
jmp
imul
mov
aas
dec
push
mov
jno
push
mov
imul
aas
or
call
aam
sti
and
movsb
sbb
jb
add
cmp
adc
mov
subb
int3
lcall
ficomps
jo
rolb
pop
les
xchg
repnz
lea
loop
mov
out
push
cmp
lret
stc
jg
jmp
xchg
jns
das
dec
mov
adc
jmp
jno
dec
fwait
pop
push
lods
jbe
aam
xorl
in
sbb
and
or
sbb
fwait
shl
mov
push
popa
repz
sub
aaa
int
ss
es
xor
lret
jp
adc
jmp
das
push
insl
fistpll
xor
pop
push
das
mov
add
repnz
loop
lock
in
xor
or
mov
push
inc
push
ja
enter
arpl
ffree
out
icebp
clc
scas
pop
lcall
or
andl
adc
push
add
sub
xlat
int
jmp
inc
xchg
dec
shrb
icebp
sbb
adc
jae
js
int
mov
mov
dec
orb
adc
inc
subl
mov
add
das
ljmp
pop
imul
test
xchg
lods
insb
inc
xor
pop
push
pushf
imul
jecxz
cld
mov
and
jne
lret
leave
jl
add
mov
dec
or
in
bound
shll
pop
int3
jno
das
and
jmp
xchg
into
dec
and
outsl
fwait
cmpsl
lea
mov
fstpl
cmp
jecxz
sbb
stc
dec
mov
sub
fisttps
inc
cwtl
xchg
mov
jae
mov
in
ret
mov
mov
adcb
xchg
sub
fdivrl
mov
and
jg
dec
or
data16
sbb
jae
mov
xchg
lret
jle
or
sbb
or
fidivrs
mov
ret
addr16
insb
or
jmp
setb
push
inc
push
stos
cli
les
decl
mov
push
test
cs
test
jle
and
aam
scas
mov
imul
pusha
push
bound
data16
ljmp
dec
jmp
add
mov
cmp
jg
incl
mov
imul
cmp
push
dec
loopne
test
daa
inc
cs
push
jo
and
aas
push
and
inc
mov
and
xor
sub
sbb
xor
outsl
mov
sti
sbb
dec
sahf
pop
pop
mov
jl
dec
mov
push
imul
sbb
test
dec
adc
xor
inc
rorb
lcall
aad
add
pusha
popa
std
xchg
fdivl
cli
mov
stos
jno
sbb
or
ret
mov
adc
add
mov
cmp
lods
ja
clc
jecxz
cli
loopne
pop
lods
int3
in
push
lcall
inc
xor
add
mov
adc
insb
pop
bound
pop
or
jns
pushf
scas
leave
jo
lds
pop
aaa
xchg
inc
mov
in
enter
frstor
pusha
pop
out
mov
sub
dec
loopne
adc
test
sahf
int3
das
std
test
insb
adc
call
mov
xor
add
aam
fsubrl
sbbl
nop
std
push
pop
fs
les
cmp
pop
lret
arpl
pop
out
and
mov
add
fstpl
imul
jne
lcall
leave
push
popa
int3
mov
push
cmc
enter
std
push
paddw
notl
xchg
movsb
push
mov
lret
sub
in
pop
sbb
inc
inc
and
inc
adc
imul
cltd
out
aad
mov
mov
sbbl
fidivs
fldl
cli
jnp
shlb
dec
push
imul
out
loop
clc
mov
inc
mov
sbb
mov
loopne
mov
test
cmp
fcompl
test
sbb
mov
cltd
ljmp
and
repz
incb
or
adc
xchg
xor
xchg
ja
dec
xchg
and
clc
insl
scas
inc
std
int
adc
push
iret
fs
or
push
push
jne
andl
inc
mov
in
pop
bound
movsl
test
sub
decb
dec
in
aad
add
push
imul
insb
es
lock
stos
fimuls
xor
outsl
pop
in
adc
pop
test
repz
scas
adcb
test
fst
popa
shr
mov
jno
mov
negb
lea
test
cwtl
or
pop
cld
xor
inc
xchg
xchg
test
popf
cltd
push
ret
insb
stos
int3
mov
or
or
cmpsb
sub
adc
push
jge
aam
lods
mov
cwtl
loope
xchg
or
loopne
not
sub
scas
lds
jb
inc
adc
lods
mov
sbb
and
mov
pminsw
lds
xor
jg
cltd
cmpsb
test
repz
and
fbld
mull
in
adc
add
sub
in
or
in
scas
ss
xor
gs
push
push
outsb
loopne
jmp
hlt
stos
sbbl
inc
in
pusha
pusha
dec
sbb
in
clc
dec
push
push
and
icebp
popl
shll
or
pop
pusha
addr16
pop
scas
cmp
adc
cwtl
lock
push
mov
popf
insb
dec
and
popa
iret
js
lcall
jge
movsl
and
movsl
in
mov
cmpsl
negl
imul
call
leave
dec
mov
adc
test
shlb
out
inc
sub
mov
sub
xor
fnstsw
ja
push
pop
adc
outsl
sub
fstp
movsb
icebp
and
inc
sarb
das
lock
dec
mov
icebp
jl
dec
scas
sbb
mov
jmp
rcl
pop
cmp
je
inc
cmc
andl
inc
push
jnp
add
call
sub
push
jne
outsl
or
dec
cmp
jbe
es
roll
out
xchg
cmp
in
inc
jns
sub
je
aaa
mov
ja
add
inc
pop
pop
or
dec
ret
jbe
hlt
gs
mov
mov
add
sti
pop
cmp
aam
adc
adc
enter
or
pusha
adc
mov
and
ja
push
in
mov
mov
adc
adc
mov
dec
es
aam
dec
xor
divl
push
push
push
push
jecxz
add
mov
add
test
xor
jne
cmp
aam
inc
out
add
push
testl
and
mov
repz
and
mov
std
or
or
sub
sti
lcall
mov
jae
les
fisubrl
mov
out
lods
fs
dec
insb
and
hlt
and
mov
mov
je
aaa
lret
mov
xchg
add
fucomp
xor
ljmp
sbb
xchg
mov
repz
aam
dec
push
stos
insb
lods
mov
out
adcb
in
xchg
adc
clc
cmpl
push
je
lock
clc
in
movsl
inc
dec
mov
or
xor
sbb
movsl
sub
push
sub
test
jb
push
in
hlt
cld
adc
icebp
and
sub
mov
sbb
outsb
repnz
repz
adc
fs
data16
sbb
xchg
mov
sub
add
pop
imul
test
ds
or
or
sbb
movsb
cmpsl
ljmp
repnz
sbb
mov
adc
fwait
stos
pop
je
insl
add
test
lods
mov
sub
test
sbb
out
lock
xchg
jge
sub
mov
test
inc
hlt
cmp
daa
jo
dec
xchg
push
mov
test
pop
sti
adc
nop
and
xchg
fcomps
push
lcall
sbb
fs
mov
sbb
mov
adc
in
cld
inc
mov
sub
sbb
pushf
jae
cmpsl
call
test
sub
add
and
inc
xchg
pop
movsl
bound
fsub
ja
sarb
xchg
jbe
add
jns
jbe
jl
test
jo
xchg
call
add
mov
int3
mov
shll
mov
mov
xor
roll
push
aaa
pop
repz
mov
bnd
mov
mov
sahf
popa
push
pop
mov
out
adc
dec
mov
cmp
or
xchg
push
in
dec
in
jno
cmpsl
push
repz
les
in
mov
sub
cmp
cmp
popa
adc
sub
loop
xlat
fnsave
hlt
ljmp
jmp
mov
lea
push
lea
adc
fldpi
call
adc
mov
jb
cmp
mov
out
dec
fst
int3
jmp
inc
adc
jns
cmp
daa
add
dec
mov
pushl
pop
stos
xchg
and
lret
or
jae
jp
jne
fs
mov
push
mov
pop
in
subb
push
cli
xor
inc
push
mov
cltd
xlat
pusha
daa
iret
stos
int3
icebp
push
hlt
arpl
int
and
loopne
mov
jg
shlb
mov
ret
icebp
stos
arpl
pushf
cmc
imul
call
or
pop
mov
or
lcall
inc
jecxz
int3
stc
cmp
xor
mov
cld
lcall
faddl
jbe
mov
sub
outsb
sbb
xchg
cmc
aas
aaa
push
or
bound
jle
mov
jae
mov
aam
inc
adc
ljmp
repz
push
stc
sub
push
jno
cltd
add
jno
cmp
fwait
sub
dec
scas
loop
inc
test
mov
test
or
addl
bound
loop
mov
imul
mov
xchg
lret
rorb
xorb
pop
out
pop
xor
xchg
loop
mov
sbb
test
pop
pop
lahf
or
test
mov
inc
cmc
jmp
pop
adc
shr
sbb
rolb
xor
int
pop
pop
negl
mov
or
ljmp
mov
lahf
lods
push
pop
add
loopne
cmp
aad
loop
mov
pusha
or
mov
jle
sbb
and
rcrl
sub
out
ret
fcompl
outsl
sub
loop
movsb
sub
sub
jl
fisubrs
dec
pop
mov
adc
sahf
jae
into
out
and
cmp
out
icebp
push
pop
test
ja
in
jmp
cmp
mov
mov
or
pop
inc
pop
out
outsb
push
xor
stos
sbb
testb
xchg
pop
jnp
fs
shrl
nop
outsb
xchg
sbb
imul
dec
lret
push
xor
cvtps2pd
xor
add
insl
scas
xor
or
test
es
push
test
lods
xlat
cs
int
adc
pop
cmp
jae
xchg
loop
jno
or
out
or
cmp
daa
mov
stc
mov
jle
stos
mov
inc
cmp
cmp
jnp,pt
ja
mov
aam
adc
inc
mov
adc
and
or
sbb
pop
lock
in
mov
aas
sub
ja
push
and
int
inc
aam
das
out
adc
out
jb
adc
xor
lock
fs
cmp
dec
lret
cwtl
dec
and
clc
ss
and
shr
repz
cmpsb
lock
test
jo
mov
jo
fmull
xchg
bound
dec
mov
nop
enter
sahf
lret
mov
mov
push
push
fistpl
out
lahf
xchg
mov
and
xor
in
mov
test
mov
and
lcall
pusha
or
ret
mov
fdivs
jbe
subl
cmc
jmp
jno
aad
ljmp
dec
movsb
mov
loope
pop
enter
fldcw
mov
ret
mov
repnz
popf
lods
lods
jg
enter
xchg
inc
xor
mov
and
jmp
repz
scas
and
or
sbb
mov
jns
adc
jg
jmp
inc
stc
push
mov
jns
je
cmp
pusha
inc
cwtl
popl
loop
sahf
inc
decb
dec
fmull
mov
stc
fsubrs
outsl
hlt
pop
sahf
aaa
xchg
aam
stc
cmp
xchg
jp
loope
pop
jae
push
adc
inc
cmp
adcb
cmp
adc
jns
cwtl
gs
divb
iret
cmp
fidivl
jnp
cmp
adc
xor
sbb
mov
push
or
push
lcall
cmp
stos
sbb
adcb
fildll
popf
jns
lds
jmp
fs
or
test
outsl
add
cmpsl
inc
or
ret
popa
push
cmp
imul
cld
lods
xchg
js
xor
xchg
movsb
dec
cmpsl
push
pop
std
daa
dec
sar
shr
lea
fistps
jp
sub
fs
and
rorb
scas
fidivs
imul
sti
das
dec
insl
jno
dec
int
ret
es
outsl
cmp
push
ds
mov
and
pop
mov
jo
mov
cmpsl
aaa
mov
popa
mov
icebp
and
add
cwtl
sbb
push
aad
xchg
pop
mov
pop
push
jne
xchg
xchg
sbb
insl
and
and
loop
sbb
pop
xchg
cmp
sbb
add
mov
mov
pop
lahf
dec
into
push
cmpsl
movsb
leave
sbb
in
out
mov
xchg
and
data16
xchg
add
test
jno
or
inc
pop
icebp
mov
xor
into
mov
sub
mov
mov
in
push
das
scas
movsb
cmovb
dec
stos
or
cwtl
fsubs
mov
add
and
sub
int3
mov
scas
push
sub
mov
fcompl
iret
decb
xchg
arpl
mov
in
cmpsl
ja
std
jmp
jnp
in
and
jo
and
les
cli
jbe
movsb
jecxz
rcll
xlat
mov
jmp
test
push
dec
and
pop
mov
sbb
adc
pop
mov
jno
push
dec
xchg
and
jns
imul
gs
in
mov
mov
xlat
and
push
push
and
pop
in
add
mov
pop
arpl
adc
mov
mov
add
mov
stos
lret
in
rorl
repz
lock
mov
sbb
sbb
leave
push
loopne
mov
jbe
in
adc
mov
loope
dec
pop
sti
mov
inc
or
sbb
arpl
mov
push
fists
aad
lret
jne
imul
adc
or
gs
inc
call
in
pop
mov
std
mov
mov
cmpsb
repz
and
mov
sbb
adc
rcl
jne
lahf
jne
or
mov
adc
jnp
and
pop
jge
mov
shll
sahf
aam
xchg
or
stos
add
sbb
or
push
jae
mov
pop
mov
sub
mov
stos
pop
jl
arpl
push
push
mov
mov
push
mov
dec
push
mov
mov
lds
xchg
pop
hlt
pusha
jo
jnp
lods
jo
xor
pop
push
pop
loopne
adc
cmp
out
push
stc
ror
adc
xchg
hlt
iret
pop
xchg
out
xor
or
fdivrl
pop
mov
leave
std
pop
adc
outsl
mov
js
lret
repz
mov
ljmp
xor
out
fs
cltd
clc
inc
sbb
stc
loopne
adc
xor
stos
push
push
adc
or
dec
xor
ret
shr
ss
mov
push
out
or
jb
out
cmc
into
outsl
push
jnp
jns
push
mov
or
cmc
fstpl
pop
insb
inc
arpl
cmp
sbbl
cmpsl
and
movsb
inc
out
pop
aam
rcl
mov
in
data16
bnd
add
jns
jecxz
pop
call
sbb
aas
sahf
xchg
mov
xchg
shrb
mov
gs
pop
jle
lock
mov
dec
imul
cli
ljmp
sbb
lock
sub
lcall
cmp
imulb
call
mov
jno
mov
lret
daa
mov
insl
push
icebp
sbbl
lods
xchg
xlat
ret
bound
ss
fwait
sub
jle
loopne
arpl
sub
xor
push
mov
lahf
popf
pop
jno
inc
pop
dec
push
adc
xchg
cmpsl
scas
iret
xor
dec
mov
sbb
mov
mov
mov
dec
mov
dec
cli
inc
add
repnz
out
aaa
adc
lods
push
xchg
push
and
pop
xor
loop
jnp
outsl
pop
aad
cld
lea
in
aad
repnz
lods
movsl
sub
dec
test
sbb
inc
xchg
dec
fiadds
mov
dec
cmp
out
mov
imul
aas
rcrl
ret
js
adc
rolb
leave
jg
orl
ret
cmc
cmc
jbe
mov
add
and
lcall
scas
push
cmp
inc
dec
inc
adc
xor
xchg
or
xchg
xchg
stos
pop
fmull
and
mov
aad
or
iret
jbe,pt
out
addb
pop
sbb
ficoml
hlt
push
cmp
repnz
xchg
xor
psubw
jge
mov
and
leave
fisubrl
mov
inc
pop
xor
addl
mov
add
fcoms
lcall
insb
cmp
in
out
jnp
push
cmp
mov
mov
loop
push
or
sbb
sbb
test
pop
outsb
arpl
jns
or
inc
mov
push
inc
xchg
fisubs
arpl
ljmp
test
mov
xchg
jmp
mov
int
sub
inc
inc
shlb
aaa
sahf
sahf
inc
sarl
adc
sbb
add
jp
and
push
lods
inc
cmp
xor
mov
jle
fnsave
jbe
xlat
and
cmp
aas
test
sarb
cld
subb
aam
iret
xchg
mov
cwtl
dec
mov
pop
push
lret
test
cmp
sub
scas
or
mov
jns
rcrb
add
jge
int
dec
lods
jle
movsb
sub
in
xchg
ds
jne
cmp
repnz
loop
adc
iret
cmp
sub
daa
mov
in
lcall
data16
or
sub
adc
imul
xlat
mov
fwait
clc
testb
xlat
pop
cmc
test
insl
jno
jae
cmp
es
gs
lahf
scas
out
jb
mov
aad
dec
xorl
push
jmp
sub
jb
xchg
std
stos
jno
arpl
lret
inc
or
stc
or
xchg
ret
orl
pusha
mov
in
adc
cmp
daa
mov
sub
int
test
add
xchg
stos
insb
xchg
cmp
jns
jmp
xchg
or
cmpsl
sbb
inc
lock
xor
pop
mov
loope
or
adc
push
push
clc
cmc
and
out
jmp
sub
in
mov
xor
ja
shrl
es
sub
inc
test
imul
mov
and
and
mov
and
xor
pusha
mov
or
xlat
stos
push
mov
adc
inc
push
popf
and
push
test
mov
mov
push
fiaddl
gs
lds
jg
dec
jo
sbb
and
inc
mov
popf
adc
xchg
and
loope
xchg
ds
je
add
xchg
fldcw
cmp
inc
jns
fdivr
rolb
das
fcomp
out
lret
sar
out
pop
adc
sub
aaa
popf
push
out
mov
in
cwtl
ljmp
lods
or
xchg
jecxz
jnp
push
adc
divb
xor
in
cmp
or
sub
add
push
loopne
outsl
inc
dec
lds
loopne
mov
jl
cmpsl
movsb
mov
shlb
js
dec
or
bound
sub
cmp
adc
push
les
mov
pop
inc
inc
lock
rcl
mov
or
cmpsb
mov
mov
dec
out
sti
cmp
cwtl
and
xchg
decb
ljmp
in
addl
push
inc
loopne
loopne
push
repnz
inc
and
nop
sar
aam
aaa
ficompl
mov
call
jns
lahf
rcr
fidivl
mov
and
sbb
icebp
cltd
dec
popf
lcall
mov
mov
mov
jmp
jge
lret
pop
hlt
pop
xor
adc
sbb
enter
cld
ret
xchg
mov
xchg
out
test
fdiv
xlat
and
shrb
or
jno
std
dec
mov
cs
hlt
push
out
add
sbb
pop
and
jno
xor
jg
pop
orb
fcmovbe
shlb
dec
popf
pop
enter
cli
sbb
and
mov
imul
pop
lock
rcll
pop
dec
xchg
mov
cmp
xchg
iret
cmp
pop
dec
or
add
adc
mov
mov
sahf
call
aad
push
mov
xchg
adc
push
push
sub
mov
fs
in
pop
or
scas
insl
xchg
out
or
ljmp
push
xchg
fbld
aam
or
and
je
xlat
adc
notb
insb
inc
not
xor
pushf
mov
xchg
jo
int
out
add
xchg
add
xchg
ror
and
inc
test
xchg
and
inc
or
xchg
push
sbb
inc
imul
movsl
movb
js
int3
mov
jno
insl
adc
dec
mov
xlat
jmp
dec
pop
sahf
hlt
das
cltd
mov
rorl
sti
add
mov
rcll
pop
shrl
mov
scas
cmp
test
fcmove
xchg
fs
mov
scas
fs
neg
and
xlat
stos
lds
jmp
jmp
mov
sbb
divl
push
ja
add
ljmp
sub
jge
jecxz
test
adc
pop
loop
push
cmp
inc
sub
in
subl
in
fwait
dec
pop
fildll
mov
xchg
mov
mov
arpl
or
dec
inc
fwait
mov
pop
sub
fs
fucom
pop
push
push
or
insb
mov
and
jecxz
inc
mov
jl
lret
xchg
iretw
cmpsl
sub
push
loop
push
fwait
ja
mov
stos
add
jbe
push
mov
sti
pop
cwtl
jno
fcompl
into
repz
cmp
push
xchg
scas
les
fisubrl
in
hlt
movsb
mov
and
xchg
int
mov
mov
push
cmp
lods
aad
pop
js
ret
add
mov
push
mov
xchg
xchg
push
and
jl
mov
xor
sub
adc
mov
add
das
dec
lea
fs
insl
cwtl
lcall
fisubl
jl
inc
faddp
push
faddl
sub
imul
fwait
stos
sub
inc
sti
mov
inc
sub
aam
jl
rorl
negb
test
lods
sub
sub
bswap
outsl
inc
scas
xor
xchg
add
jbe
je
insl
xor
mov
push
mov
mov
push
pop
cmp
out
gs
cld
aaa
orb
cmpsl
jle
hlt
adc
ret
out
seta
js
pop
fnstcw
cmp
jne
pusha
aaa
and
push
popa
into
lahf
in
push
inc
test
xchg
push
enter
pop
ficoms
in
out
mov
jo
fincstp
ret
cmp
movq
mov
add
push
xorb
mov
inc
jbe
dec
hlt
mov
pop
icebp
fcoml
cmp
xchg
or
dec
xor
add
and
or
je
sub
scas
or
xor
inc
xchg
out
fistl
xor
sbb
movsl
xor
push
out
sbb
sbb
push
sub
push
jo
pop
push
cmp
lret
subl
mov
gs
call
lahf
jb
clc
add
xorl
ss
add
sub
or
aas
push
mov
ss
jle
lods
pusha
inc
sub
inc
out
pop
cli
cs
mov
nop
push
mov
repnz
nop
flds
push
jbe
cmp
iret
mov
jp
in
fidivrl
sub
cmp
jp
and
into
xchg
and
inc
cmc
lods
add
lcall
lds
lock
rorb
in
cli
dec
filds
dec
adc
popf
jb
mov
jp
add
push
imul
push
outsb
adc
sub
jb
push
popf
sahf
adc
icebp
sbb
les
sbb
outsl
scas
gs
js
pop
pop
in
xchg
aas
jge
out
shll
pop
sahf
sar
mov
mov
pop
sahf
pop
inc
or
adc
ret
sub
xlat
mov
shll
mov
push
or
sub
push
shr
scas
add
aas
lret
ss
push
movsb
orb
inc
repnz
out
pop
sub
pop
pushf
sub
insb
adc
cwtl
lret
fstpt
pop
aas
push
std
outsl
and
mov
pop
mov
push
push
stc
push
pop
dec
jg
mov
jle
pop
fsubr
mov
pushf
jmp
mov
mov
inc
scas
mov
or
repz
fisubrl
ja
les
inc
inc
movsb
dec
dec
test
cmp
fldl
dec
xchg
rcll
or
xor
cmp
call
mov
icebp
test
imul
dec
mov
sub
sahf
fstps
loopne
icebp
fists
adc
mov
out
mov
push
insb
andb
loop
jecxz
mov
pop
imul
dec
mov
nop
das
rcl
mov
cmp
lret
dec
movsb
std
and
pop
mov
jg
cmpsb
inc
mov
push
and
mov
mov
pushf
icebp
inc
loope,pn
sbbl
inc
sbb
pop
pop
mov
dec
repnz
es
or
pop
add
stos
sub
cmc
push
inc
andb
fwait
xchg
cmp
jbe
push
in
jmp
les
dec
cmp
arpl
lock
pop
pop
call
or
test
jmp
mov
es
rorl
dec
stc
jne
adc
jl
pop
dec
cmpsl
xchg
xchg
jo
hlt
add
stos
add
pop
dec
xor
dec
add
xchg
shlb
outsb
xor
sarl
rol
push
sbb
jp
jle
mov
loop
test
xor
scas
sub
sbb
jl
mov
cmpsl
push
sub
xchg
bound
pcmpeqd
in
and
jge
in
cmp
gs
fs
lret
lea
mov
addr16
xchg
fs
cli
les
jle
jle
lods
cmpsl
add
sbb
push
rcr
fstl
sbb
jg
inc
pop
fildl
movsl
adc
sub
cwtl
dec
pop
cld
jl
clc
lret
in
in
adcb
inc
orl
aad
dec
out
out
les
and
int
mov
add
dec
je
scas
cmp
or
les
popa
sahf
je
jae
out
in
sti
inc
ljmp
mov
cmp
arpl
xor
jo
mov
popf
hlt
fldt
shl
dec
cmpl
loope
push
xchg
leave
out
bnd
aad
fstpt
movsb
push
add
push
stos
lahf
jb
and
in
sub
jecxz
icebp
add
mov
pusha
cmpsl
aaa
loope
mov
aad
lods
movzwl
pusha
in
mov
dec
jno
arpl
inc
mov
aaa
scas
and
lret
aaa
pushf
push
jbe
orl
out
shrl
push
dec
cmpsb
sbb
data16
fsubr
or
mov
nop
lahf
mov
jb
movl
mov
nop
mov
cmp
arpl
pop
jmp
mov
mov
scas
clc
xchg
mov
out
adc
pusha
add
lcall
add
jp
xchg
jae
dec
add
dec
pop
push
mov
pop
aad
rcrb
push
das
lcall
adc
cmp
pushf
xchg
ret
addr16
xor
popf
cli
cmp
dec
arpl
sbb
inc
dec
and
pop
pop
not
test
movsl
cmp
insl
fdivl
pop
outsb
lcall
les
stc
call
cli
mov
sahf
aad
hlt
pop
and
or
inc
xchg
push
dec
aad
test
xchg
xchg
mov
and
add
popl
mov
insb
cmpsb
pop
push
lock
adc
sub
roll
mov
xchg
xchg
or
mov
fwait
lret
add
inc
repnz
inc
fwait
clc
mov
loop
adc
adc
add
idivb
pop
push
les
int3
add
std
mov
or
pop
jle
and
cs
xchg
es
icebp
mov
mov
nop
xor
test
rol
jl
das
adc
or
push
cmpsb
add
insl
icebp
add
mov
and
push
mov
lods
ljmp
loop
sarb
out
xchg
stc
adc
iret
outsb
test
mov
cmp
cmc
pop
movsb
pop
mov
push
stos
popf
jno
incb
jmp
mulps
sbb
mov
popa
and
sti
mov
xchg
movsb
and
push
lret
add
xor
adc
fisubrl
push
push
add
je
mov
sbb
jns
aam
movsl
cwtl
pushf
stos
int
jecxz
mov
cmc
fidivs
xor
stc
movsb
pop
test
xchg
sub
sub
mov
jae
xchg
dec
lea
and
in
mov
pop
cmp
lods
pop
cmp
jno
push
popf
enter
add
jge
mov
mov
es
data16
ficoml
cmpsl
icebp
xor
inc
push
adc
arpl
push
imul
mov
dec
in
jb
adc
mov
xchg
cld
fwait
mov
enter
mov
add
fdivrs
inc
or
pop
xor
jno
add
cmpsb
popl
out
mov
test
stos
aam
ficoms
in
lcall
dec
sub
sbb
hlt
xor
inc
sbb
push
jecxz
les
and
addr16
ficoms
lcall
outsl
sub
adc
popa
ret
mov
rolb
sub
mov
repz
mov
mov
sub
mov
ret
xchg
inc
dec
and
push
adc
push
mov
nop
xor
sahf
gs
sbb
ret
inc
loopne
je
adc
scas
out
fucomi
sub
lds
into
mov
lea
mov
push
mov
and
sub
aam
clc
jo,pt
pushf
inc
aas
or
lahf
sub
in
pop
mov
in
cltd
add
test
xchg
std
push
xchg
test
xchg
push
movsl
cltd
lahf
ss
push
push
dec
pop
dec
or
jnp
sbb
arpl
into
jns
gs
adc
fcmovbe
inc
cmp
inc
mov
lock
out
xchg
xchg
sub
aam
adc
xchg
fld
scas
iret
mov
or
loope
or
xor
mov
jnp
dec
call
lods
push
lret
dec
pop
or
out
cmp
jno
iret
xor
push
and
pop
dec
pop
mov
cld
clc
cmp
xor
lahf
aad
sti
jbe
rorb
xor
sbb
int3
push
cmp
stc
fcoms
mov
xor
sbb
cmp
jb
push
mov
dec
cmpsb
fistps
in
or
xor
xchg
mov
test
pmaddwd
push
or
aaa
xor
adc
fs
xchg
aam
lock
xor
jle
iret
push
xchg
stc
cmp
sub
ds
jl
inc
leave
xchg
lahf
mov
ret
decb
mov
mov
dec
xchg
mov
mov
xchg
jbe
xor
inc
popa
scas
push
ljmp
fcmovnu
scas
jg
mov
or
jae
in
out
cmpsb
std
cmp
cmpsb
out
add
test
add
pop
mov
lcall
in
fwait
es
aaa
leave
dec
xor
dec
or
jno
int3
mov
fcomps
dec
mov
xor
and
mov
mov
jmp
inc
jg
fistpll
in
enter
mov
pop
add
cwtl
cmpb
and
fldenv
mov
and
jo
push
cmpsb
xor
xchg
jbe
inc
cld
mov
cld
das
sbb
push
pushf
shl
mov
push
sub
out
idivl
sbb
aas
adc
mov
pop
std
xor
cmp
dec
arpl
ljmp
popf
fwait
stos
fstpt
fstpt
fsubs
scas
sbb
and
cmpb
popa
ss
inc
or
dec
ss
aas
test
ljmp
ret
mov
xchg
imul
stos
ja
test
push
mov
idivl
jb
int
xchg
mov
mov
ret
out
ss
pop
push
movsb
jae
xor
outsl
sti
inc
sbb
out
or
das
pop
adc
dec
insb
mov
sub
insl
xor
popf
jmp
or
rclb
mov
push
std
push
in
inc
push
in
or
mov
lea
out
pop
cmp
sbb
xchg
std
inc
mov
loop
mov
fidivrs
adc
fcoml
imul
jg
or
leave
mov
and
sub
stos
std
pop
pop
or
mov
enter
push
xchg
dec
arpl
lret
jns
mov
sub
or
movsl
int
out
mov
pop
js
aas
lods
lahf
mov
and
mov
ror
inc
arpl
shrb
pusha
jle
jne
sbb
adc
popa
xchg
lahf
cmp
rolb
fs
mov
jns
lret
add
adc
pop
adc
pop
cs
xor
rcl
mov
cwtl
call
loope
cs
stc
dec
ds
push
inc
adc
imul
mov
cmpsb
hlt
adc
shl
push
mov
sub
ficoml
sahf
adc
outsl
push
out
push
adcl
mov
sub
mov
cltd
in
mov
xchg
scas
xchg
mov
lock
xor
int3
sub
in
add
pop
stos
jmp
test
testb
mov
and
dec
mov
test
mov
push
mov
mov
mov
cli
pop
cmp
jae
pop
mov
jbe
cltd
jle
data16
xchg
xchg
xor
adc
jne
outsl
mov
ss
imulb
push
hlt
icebp
sub
int3
adc
add
jmp
mov
ss
stc
jge
lods
pop
popf
shr
push
add
sbb
adc
lret
pusha
mov
pop
sub
stos
xor
rorb
cbtw
or
call
into
test
add
stos
dec
mov
jp
enter
push
lahf
mov
lods
sub
ja
cmp
in
std
sbb
or
and
add
xor
iret
inc
in
mov
inc
xor
inc
es
jge
pop
in
xchg
xchg
fstpl
cmp
or
popf
loope
pop
fcoml
imul
int
pop
mov
add
movsb
ss
aas
xor
into
mov
mov
cltd
cli
cs
mov
or
and
adc
xchg
xor
cmp
insl
add
xor
mov
and
adc
dec
mov
and
xchg
inc
push
or
aam
add
xchg
xchg
ss
pop
xchg
dec
mov
aas
jmp
dec
out
out
test
repz
js
jg
loopne
xlat
xchg
and
scas
cmp
dec
rclb
fisttpl
dec
pop
inc
fistpll
mov
inc
enter
jns
push
mov
pop
or
xchg
mov
shlb
dec
jne
pusha
jecxz
mov
push
lods
in
pop
scas
outsl
in
out
mov
xchg
dec
lods
sbb
jg
xor
cltd
jle
ds
inc
sub
std
mov
mov
or
and
jle
xchg
clc
push
jbe
mov
jo
and
in
pusha
jecxz
jecxz
cli
add
es
or
push
je
cmp
push
push
mov
fcmovnbe
iret
adc
cmpsl
mov
ret
jb
out
cld
inc
testb
fnstsw
test
fadd
xor
je
je
mov
fwait
inc
inc
xchg
aaa
add
test
jnp
pop
pop
insl
adc
call
push
std
jp
adc
insb
lret
pop
and
test
scas
add
sbbl
push
jle
out
pop
dec
and
mov
addl
sbb
fwait
mov
outsb
jle
dec
lods
mov
pop
add
test
sub
es
jo
movsl
mov
push
cmp
xchg
mov
andl
push
jge
mov
pop
sti
xchg
pop
shlb
stc
lret
jl
out
cld
aad
inc
fistl
mov
xorl
and
fcmove
add
pop
sub
inc
mov
dec
repz
fdivrl
cmp
jae
sub
aam
mov
pop
cmp
xchg
dec
push
lds
jno
ret
dec
mov
jle
xor
sub
cmp
rclb
in
adc
enter
popf
sbb
jb
or
cmp
xor
fsubs
sbbl
or
imul
adc
pop
daa
inc
add
jae
push
fildl
in
push
mov
sub
fists
hlt
sbb
xor
cld
ja
xchg
inc
and
jp
int3
sbb
sbb
dec
jno
pop
fs
je
mov
pop
pop
push
ror
adc
stos
or
adc
das
push
or
movsl
fadds
into
popf
push
je
xchg
in
xchg
cmp
inc
lret
xchg
and
mov
push
sub
aas
test
rcl
pop
dec
test
xchg
adc
popf
jecxz
repz
push
pop
jns
cltd
xchg
bound
mov
mov
mov
in
pop
inc
mov
shlb
xchg
test
ret
movsl
mov
push
add
adc
decb
dec
imulb
addr16
and
stc
mov
jp
inc
loop
adc
cmp
leave
push
and
sbb
mov
adc
sub
or
push
cltd
in
addl
pop
out
add
into
shl
inc
sub
push
jl
pop
aam
push
xor
mov
enter
jo
dec
jns
stos
subb
jle
jns
imulb
shl
cmp
pushf
add
push
push
push
lcall
mov
jecxz
repz
pop
sbb
jl
test
scas
xchg
mov
inc
loopne
and
ljmp
mov
jmp
ds
nop
and
cltd
fsubrl
jbe
push
push
add
adc
fwait
repz
pop
jns
xchg
xchg
shrl
xchg
fisubrs
mul
dec
test
pushf
movsl
lret
ret
aas
ljmp
push
pusha
add
stos
xor
inc
xchg
mov
movswl
mov
ds
jo
xchg
lock
cwtl
fs
dec
mov
mov
pop
roll
sub
xor
xchg
mov
mov
cmp
push
jmp
cs
xchg
mov
aaa
inc
or
rcll
inc
mov
mov
sarb
mov
repz
imull
inc
inc
aad
and
dec
rorb
lcall
xchg
out
add
pop
xlat
cmp
jp
iret
ja
js
mov
js
inc
decb
push
mov
test
in
sub
mov
push
jne
out
insb
cmp
inc
fwait
xchg
dec
test
fadds
sub
cmpsl
int3
ljmp
or
ljmp
sub
stc
dec
in
popa
mov
cs
movsl
sub
jns
jg
push
mov
ja
in
jle
mov
xor
sbb
pushf
jno
addr16
inc
imul
adc
lock
outsb
sub
lods
iret
pusha
aam
mov
stc
fadds
jno
rorl
sbb
aaa
jae
pop
jno
paddusw
hlt
xchg
ss
fidivl
cmp
sbb
loope
xor
mov
ja
and
jnp
lods
les
mov
test
or
add
flds
repz
xchg
add
and
sub
pop
mov
add
jnp
lea
push
and
stc
add
jl
add
insl
sub
lret
int3
pusha
cmc
mov
in
test
inc
cli
push
sub
mov
fcmovbe
out
and
mov
pop
adcl
adc
mul
xchg
sbb
xor
jbe
push
xchg
daa
cmp
sub
adc
sub
arpl
test
sti
nop
mov
mov
mov
cmp
xchg
mov
aas
sbb
pop
rorl
inc
rorl
rcl
jl
pop
cld
dec
inc
sub
int3
pushf
and
xor
xor
ror
popf
stos
shlb
push
adc
arpl
jge
ljmp
mov
mov
imul
push
mov
add
cmp
sub
mov
pop
fldl
xchg
push
pusha
add
lahf
push
gs
mov
ja
pop
aas
loopne
lret
fdivrs
mov
push
outsl
insb
xchg
mov
push
subl
adc
xor
stos
sbb
mov
lods
xor
cs
in
inc
ljmp
and
add
sbb
inc
les
pop
mov
daa
lods
aad
push
shr
sub
dec
shll
inc
in
dec
sar
xchg
sub
sub
xchg
adc
imul
pop
cmpb
repz
aad
sarl
sbb
dec
lret
add
mov
mov
ja
inc
push
xchg
mov
jb
je
mov
iret
call
imul
add
or
push
dec
push
jne
jnp
jl
mov
std
jg
cld
sarl
je
mov
dec
mov
les
jns
mov
lret
pop
jns
cmpsl
fsubs
dec
dec
mov
cs
pop
mov
pop
mov
nop
mov
and
sahf
dec
ja
adc
xchg
test
cmp
test
lret
outsl
adc
movsb
xor
dec
inc
sub
test
push
adc
xchg
popf
sti
fimull
push
sarb
sub
mov
push
sti
add
dec
mov
test
loope
test
insl
pushf
ds
je
test
add
lret
push
xor
or
or
dec
pop
push
mov
test
inc
sub
dec
inc
sbb
insb
add
cmp
cmp
mov
ror
xor
push
add
push
test
xchg
ds
jo
add
jne
inc
cmp
sbb
jo
addr16
or
lock
and
xchg
addb
cmp
jno
adc
and
xor
cmp
push
fdivr
mov
lret
push
repz
std
test
lea
dec
pop
dec
xor
adc
aad
jle
in
loop
stos
std
shlb
cmp
bnd
scas
push
inc
cltd
and
add
mov
mov
mov
lea
clc
mov
lret
xchg
ja
xchg
stc
xchg
mov
sbb
or
mov
ljmp
xchg
add
cmp
xchg
jmp
ljmp
mov
test
dec
ss
mov
add
fnstcw
iret
jno
icebp
imul
cmpsb
jle
nop
dec
mov
sub
sbb
shl
cmp
cmp
mov
mov
xor
cmp
loop
jl
test
push
cmpb
sahf
push
not
inc
sub
add
jne
je
cwtl
jmp
lds
add
inc
movsl
gs
into
xchg
xorl
pop
addr16
sbb
shrb
es
mov
adc
or
mov
xor
mov
adc
add
xchg
mov
push
mov
leave
imul
xchg
shll
cmpsl
insb
jb
xchg
insl
in
fldcw
mov
lods
mov
or
pop
add
rolb
jp,pt
mov
dec
mov
pop
mov
adc
iret
aas
inc
add
xchg
imul
push
jle
mov
dec
daa
sbb
pop
pop
and
xor
jp
dec
pop
lea
add
jcxz
jbe
jl
cmp
sub
cmpsl
out
or
lcall
pop
fdivrs
mov
push
fmulp
dec
mov
dec
std
push
cmovae
cltd
mov
stc
fsubp
out
jae
mov
ds
push
fstps
ja
xchg
xchg
or
and
in
out
mov
pushf
dec
enter
xor
xlat
outsb
repnz
in
or
jge
test
aaa
sub
xchg
mov
aaa
subl
jg
dec
loop
jns
fsubs
in
add
mov
lods
lock
mov
es
xor
movsl
test
mov
orl
test
jl
mov
push
pop
in
cmp
lret
sub
and
cli
daa
stos
lret
jo
enter
cmp
jbe
pusha
in
inc
add
inc
lahf
and
ljmp
pop
or
mov
or
orl
cmc
jbe
sarb
dec
dec
jge
adc
stos
mov
jge
data16
jl
stos
out
cmp
sub
xor
xchg
ret
xor
punpckhdq
xor
leave
insl
out
loopne
push
add
mov
lock
sbb
divl
push
adc
in
faddp
add
dec
push
pusha
pop
mov
adc
pop
push
pop
jno
movsb
popw
lods
mov
addr16
lea
into
mov
mov
ret
rclb
pop
test
adc
add
add
repnz
mov
in
mov
dec
pop
call
ljmp
outsl
jmp
outsl
scas
xchg
cli
out
imul
xor
sti
test
mov
cmp
xchg
jl
in
mov
sub
mov
or
pop
ror
adc
xor
push
xchg
mov
mov
das
subl
pop
popf
lods
and
out
mov
shrl
jae
push
inc
cld
lcall
add
lock
out
add
sbb
movsl
pop
xchg
addr16
jne
xor
mov
jbe
push
xchg
jns
push
sub
movsl
xchg
lahf
push
push
jecxz
pop
lret
lcall
dec
fcomi
outsb
shrb
sbb
jecxz
lcall
jae
mov
pop
mov
mov
sub
sub
stos
loopne
in
jne
aas
cmp
stos
call
jnp
mov
sub
dec
jmp
add
jo
push
mov
sbb
inc
fstpt
push
or
sub
xchg
incl
cmpsb
cmp
mov
dec
lods
call
popa
repz
mov
aad
cmp
mov
cmpsl
mov
insb
dec
movsb
enter
push
or
jle
xchg
cmpxchg
push
mov
xlat
jmp
mov
aam
outsl
int3
add
mov
call
pop
testb
lcall
pop
loopne
inc
push
adc
adc
dec
loope
and
sti
inc
sbb
rclb
je
or
das
pushw
jne
shll
mov
mov
popf
inc
stc
or
inc
inc
fmull
push
fildl
adc
mov
arpl
cmp
jb
jns
dec
and
les
pop
lds
xchg
mov
pusha
cld
xchg
aam
xchg
andl
sub
dec
aad
dec
mov
xor
data16
and
mov
mov
jae
mov
sarb
cmc
repz
mov
push
and
popa
sbb
in
mov
shrl
push
jmp
sbb
adcl
pusha
mov
pop
inc
jbe
aas
js
mov
xlat
stc
call
lods
jle
sbb
dec
testl
scas
xchg
fst
push
stos
js
outsb
leave
add
cmc
aas
movsl
adc
stos
mov
sbb
xor
jge
cmp
lea
inc
ljmp
inc
cwtl
push
sub
add
sbb
test
and
sub
jmp
cmp
mov
insl
insl
jmp
movsb
push
cmp
xor
inc
stos
scas
int3
pop
mov
fmuls
adc
cltd
cwtl
pop
dec
sub
push
push
dec
sub
push
push
pop
push
in
sub
or
and
mov
and
pop
xchg
inc
xchg
sbb
adc
lea
jg
sub
jmp
in
bnd
push
add
cmp
jne
call
add
arpl
adc
jnp
and
pushl
xchg
lock
push
sti
shll
xor
mov
ss
fwait
movsl
into
and
nop
jbe
movsb
xchg
in
jle
mov
or
in
icebp
sbb
test
inc
leave
aam
xor
movsb
xor
scas
in
jb
adc
inc
lods
pop
loope
enter
shl
lcall
hlt
push
add
imul
or
cmp
jno
aad
sbb
cmpsb
je
bound
mov
and
pop
test
fistps
sbb
cmc
jbe
les
mov
scas
jmp
add
sub
test
sar
push
push
mov
pop
mulb
mov
repnz
gs
decb
test
push
rcrl
mov
repz
push
xor
mov
pop
clc
inc
xchg
bound
push
xlat
shll
insb
dec
fsubrl
cwtl
out
mov
fcoml
or
push
mov
test
dec
lock
in
lret
in
mov
xor
insb
push
scas
outsb
sbb
adc
push
jecxz
xor
dec
adc
add
mov
fnsave
icebp
fimuls
or
test
repnz
mov
push
jne
aaa
xor
jb
ficoms
fidivrs
sbb
sub
mov
mov
iret
leave
test
push
movsl
insb
push
lret
push
ds
jge
movsb
dec
dec
adc
push
scas
dec
sbb
into
loopne
sub
cmp
fistpll
fsubrl
sub
nop
out
push
xor
inc
scas
test
lret
int3
cmp
mov
add
aas
in
or
lods
stos
popa
push
pusha
lret
xor
xchg
es
push
dec
hlt
jne
arpl
lea
stc
mov
ret
pusha
js
mov
mov
adc
invlpg
push
imul
dec
xor
ds
nop
jl
cltd
insb
sti
mov
rorb
add
mov
lea
push
ds
scas
arpl
ljmp
test
leave
loope
das
mov
cmpsl
stc
xchg
mov
cld
pop
jmp
push
and
dec
mov
nop
pusha
adc
add
mov
mov
mov
xor
cmpb
pop
lock
sub
xchg
add
fbstp
mov
sbb
sub
stc
lods
or
ror
addr16
mov
dec
ja
and
jecxz
mov
idiv
sub
call
adc
jnp
mov
sub
jno
cmp
aaa
je
insl
or
xchg
popa
dec
mov
jnp
insl
xchg
mov
outsl
cmp
nop
pop
pop
xchg
xlat
cmpsb
imul
mov
xchg
fwait
arpl
nop
nop
jmp
mov
cld
test
imul
inc
dec
sbb
pop
mov
mov
dec
jmp
push
ret
adc
cmp
xchg
push
mov
imul
mov
push
jmp
cmpsb
adc
lahf
xor
fsubl
mov
adc
les
loope
and
push
mov
movsb
adc
jb
xor
aaa
insl
mov
mov
adc
sbb
push
inc
rcrb
add
icebp
cwtl
pop
ds
push
xor
cmp
pop
hlt
mov
xor
rcl
roll
cltd
jo
and
fildll
and
fnstcw
mov
sub
sub
sub
addr16
mov
aam
pop
push
or
mov
and
mov
sbb
push
mov
ficompl
jecxz
push
adc
aas
and
stos
xchg
sbb
loope
inc
out
adc
sub
mov
movsl
cmp
cwtl
scas
mov
push
inc
xchg
pop
ret
movb
jg
les
pop
push
dec
cmp
lock
shl
mov
out
pop
arpl
jmp
dec
test
lahf
das
sbb
or
sbb
lock
dec
int3
pop
pop
out
lret
and
dec
cld
xchg
push
mov
shlb
mov
cli
sbb
lret
test
lahf
mov
lcall
dec
cmp
insb
and
f2xm1
inc
lcall
jmp
and
arpl
fildl
stos
or
in
out
mov
add
pop
fwait
jbe
in
es
pcmpeqw
fiadds
mov
jo
loope
xor
inc
movsb
push
jmp
nop
add
jo
and
xor
jge
in
jne,pn
movsl
js
hlt
xlat
and
sbb
scas
jge
mov
test
xchg
cli
scas
mov
pop
sub
insl
andb
push
cltd
ficomps
pop
shl
cwtl
pop
cmp
leave
push
out
mov
cmp
in
fsubrs
sub
inc
push
pushf
sub
pop
pop
dec
add
orl
shll
pop
stc
cmp
pop
adc
pusha
std
add
or
out
ljmp
jae
adc
adc
daa
aam
cmp
out
hlt
mov
push
ljmp
scas
adc
jbe
into
push
int3
lock
mov
ljmp
int
into
dec
scas
add
int
pusha
into
sub
pop
mov
xor
xchg
mov
mov
fucomi
xchg
in
mov
fisubl
jmp
add
push
sbb
popf
jmp
cmp
add
hlt
or
sub
mov
orb
into
jge
mov
cmp
jnp
push
push
lock
cmpsl
lods
mov
sub
add
push
pop
fistl
pop
mov
and
sbbb
mov
xor
adc
je
push
jl
shll
out
add
aam
mov
loopne
aam
mov
cld
xor
lods
adc
sbb
mov
inc
cli
notl
adc
xor
sahf
mov
or
neg
inc
dec
inc
mov
popa
mov
mov
xchg
cmp
icebp
aad
lods
mov
sub
jbe
mov
icebp
imul
add
mov
sub
and
dec
cltd
in
sbb
pop
jns
out
inc
insl
shll
add
iret
loop
xorb
mov
or
jmp
enter
push
sbb
pop
inc
mov
aad
push
rorl
jg
mov
mov
jmp
sbb
outsb
sbb
sub
adc
mov
out
mov
cmpsb
repz
movsl
xor
fcomip
mov
mov
repz
push
cs
std
repz
and
pop
dec
sahf
push
ljmp
sbb
adc
shll
fsin
push
popf
inc
mov
lods
or
shlb
push
test
add
leave
adc
cmp
dec
movsl
shl
push
fcmove
mov
stc
and
pop
sub
pop
sbb
cmp
add
ret
push
cmpsl
and
mov
mov
call
icebp
hlt
push
ss
mov
data16
fs
cmp
rcrl
mov
call
lret
out
push
fisttpl
jl
jb
adc
mov
out
lock
int
sarl
add
mov
lea
std
hlt
in
scas
mov
adc
sbb
int3
outsb
bound
stos
repz
je
inc
adc
mov
movsl
cmp
jg
cmp
jnp
push
in
xchg
arpl
xchg
xchg
mov
inc
push
mov
hlt
clc
out
test
mov
out
mov
sub
sbb
mov
inc
inc
xor
movsb
rcrl
insl
mov
cmp
decl
fidivrl
stos
cmp
lods
push
inc
hlt
hlt
xor
ja
stc
into
xor
cmc
jbe
pop
sub
or
aas
pop
inc
dec
jae
mov
jbe
rcr
sbb
push
sub
cli
push
xchg
pop
xchg
ret
repnz
mov
in
cmp
test
xor
dec
push
scas
pop
stos
dec
xchg
dec
lds
fstl
cmp
aas
jecxz
jle
mov
lahf
dec
or
aaa
xor
add
dec
sub
stc
or
pop
mov
add
push
jle
sbb
divb
mov
outsb
xor
xor
add
aam
cmp
test
daa
outsb
pop
mov
ss
lahf
dec
add
insl
in
sbb
out
pop
ret
push
lahf
add
mov
mov
test
cld
pop
aaa
cmp
sub
jge,pt
push
sbbb
or
aam
inc
icebp
xchg
or
scas
loope
and
testb
sub
cmp
pop
out
mov
cltd
cmpsb
sbb
mov
mov
push
sti
pop
js
xlat
outsb
mov
or
lahf
and
jge
inc
cmpsl
loopne
and
sbb
in
dec
enter
je
pushf
adc
lock
mov
cmp
addr16
mov
fbstp
mov
pop
and
cmpsl
and
ret
adc
or
push
out
inc
xchg
cmpsb
pop
int3
pop
add
loopne
les
scas
xchg
xchg
mov
xor
aaa
and
dec
sbb
mov
lock
cwtl
imul
es
jecxz
cmpsb
adc
popa
or
or
push
xor
rorl
aad
inc
jo
dec
inc
mov
push
das
add
repnz
cld
stc
adc
xchg
subl
sub
int3
fldcw
mov
sub
out
jl
je
in
pop
test
inc
push
inc
int
sbb
push
lcall
arpl
inc
loope
bound
cmp
mov
adc
lock
cmp
test
mov
fdivrl
fsts
push
mov
in
mov
ljmp
xor
outsl
icebp
pop
or
cwtl
pop
dec
xchg
add
rorl
movsl
xchg
jno
mov
clc
push
pushf
cmp
cmpsl
dec
push
pop
sub
adc
mov
xchg
mov
mov
mov
iret
lahf
cli
movsb
xchg
jns
mov
out
ja
pop
inc
push
test
push
add
pushf
dec
cmpsb
ret
and
outsw
push
insl
fsts
lret
adcb
cmpsb
pushf
sbb
lcall
shrl
stos
jmp
inc
inc
movl
sbb
mov
dec
xchg
loope
mov
cmp
jne
sub
dec
pop
enter
push
jp
jns
inc
arpl
int3
and
inc
cld
mov
ficoms
adc
hlt
add
scas
fwait
dec
repz
pushf
popf
mov
imul
sbb
out
push
xor
out
adcb
scas
mov
sbb
pop
cmpsb
stc
jns
jge
ss
pusha
fmull
je
popa
decb
iret
int3
dec
out
fisttps
dec
jle
sahf
jg,pt
or
sub
push
rol
inc
jecxz
jne
cltd
mov
hlt
add
test
dec
aaa
test
insl
sub
nop
lods
leave
push
outsl
mov
mov
movsl
inc
clc
mov
incb
rclb
ja
push
dec
es
lret
cld
add
lock
cmpsb
sbb
and
repz
mov
pusha
mov
outsb
aad
push
aam
inc
insl
sbb
dec
ret
repz
push
mov
cmp
rclb
pop
stos
inc
inc
sbb
xor
loope
lret
push
in
aad
ja
iret
es
pusha
xor
add
fwait
xor
add
jbe
jle
cmpb
scas
lcall
xchg
in
adc
daa
push
mov
shrb
mov
pop
imul
int3
fidivrl
push
aad
jg
fstps
sbb
pop
imul
not
sbb
lods
adc
jg
fsubrp
in
push
shl
add
xor
lahf
dec
repnz
sbb
nop
sbb
into
fsubrp
in
popa
pop
mov
jo
fdivr
into
out
out
sahf
data16
insl
fs
xchg
insb
and
es
jnp
xchg
mov
in
adc
add
cmp
or
and
xchg
enter
add
aas
sub
dec
adc
test
jo
xor
cwtl
out
gs
xchg
xchg
ret
hlt
ss
pushl
jmp
sahf
sub
add
mov
mov
adc
add
inc
sbb
mov
rorb
popf
in
push
and
pop
loopne
jbe
cmc
inc
adc
jae
jmp
imul
mov
inc
sub
ja
xor
fistl
addr16
inc
jnp
sbb
mov
jns
out
outsb
jp
lods
xor
in
add
mov
ret
popa
loope
dec
int
inc
xchg
jo
inc
ret
out
push
cltd
or
fisubl
xchg
sbb
xor
mov
std
push
frstor
fsub
or
es
add
mov
repnz
push
stc
push
mov
dec
push
adc
mov
shll
lods
add
popa
cli
lahf
sbb
inc
shlb
and
pop
cmp
sub
fnstsw
and
pop
scas
je
aad
arpl
mov
rol
icebp
test
and
lds
mov
mov
jmp
lret
xchg
repnz
jb
stos
call
lea
xchg
cs
dec
filds
or
cmc
inc
leave
rolb
clc
sbbb
bound
or
ss
dec
dec
prefetch
ss
out
roll
loope
push
fisttps
dec
pop
call
dec
fldcw
rol
add
sub
repz
mov
je
mov
loopne
jb
xor
cwtl
sub
in
rcrl
insb
stc
pop
or
xchg
xor
es
inc
push
add
and
test
sbb
lods
xchg
out
push
mov
lds
je
jecxz
xor
sbb
mov
rolb
jl
or
jo
push
pusha
xchg
out
aam
incb
repnz
fnclex
add
dec
aaa
adc
push
sbb
gs
icebp
jne
lss
jns
mov
shr
dec
dec
jecxz
insl
loopne
inc
or
jno
movsl
pop
fs
in
gs
push
xchg
sub
mov
or
les
dec
popf
loope
push
outsl
clc
push
add
icebp
jg
jp
lock
push
jmp
nop
sub
aam
in
and
adc
aas
jno
xchg
out
adc
push
imulb
jns
add
andl
fs
clc
int3
ljmp
lcall
mov
jmp
pop
sbb
mov
xchg
mov
dec
lret
add
sub
cwtl
je
out
sbb
je
sub
mov
mov
into
cmp
and
aaa
mov
gs
xchg
cld
fnstsw
adc
sub
jo
jl
in
mov
push
push
mov
jmp
push
decl
xchg
add
mov
jns
aad
cwtl
xchg
loop
add
pop
inc
inc
js
dec
test
clc
sub
add
cmp
xorb
fnstcw
gs
test
jno
in
int3
or
sbbl
xchg
dec
cli
jmp
cld
push
sub
lret
push
sub
pusha
dec
dec
pushf
fs
loope
out
icebp
dec
out
shll
loop
jns
push
mov
shr
push
mov
push
jb
lea
mov
fbld
dec
sub
in
mov
adc
outsl
cs
push
les
fsubrs
dec
sub
inc
inc
inc
sub
into
les
adc
xchg
cwtl
jb
je
pop
ljmp
xchg
mov
cmpb
jbe
ss
lcall
addr16
call
add
rcll
sbb
arpl
mov
jb
pop
notb
sub
outsl
mov
mov
aam
ficompl
mov
pop
xlat
or
in
or
lods
icebp
pop
pop
cltd
mov
xchg
cli
cmp
pushf
imul
lret
ja
sub
xor
jnp
and
mov
addb
cmp
sub
push
addr16
das
fsubl
dec
gs
mov
insb
stos
or
pop
dec
jge
cmp
aam
shll
adc
insl
ret
sub
ds
testb
and
daa
je
cwtl
mov
and
add
insb
cmp
push
mov
xlat
subl
std
jb
iret
ret
mov
imul
jge
ds
scas
je
xchg
cmpsb
xchg
push
jl
js
orb
xor
movsb
cmp
adc
ret
add
mov
stos
and
xorb
jb
pop
xor
lahf
loop
or
js
sbb
lods
stos
xchg
adc
int
dec
inc
pop
and
loope
popf
movsl
lods
enter
xchg
out
pop
xor
out
add
sbb
adc
fildl
dec
and
insl
xor
and
fwait
mov
add
in
cmpsb
jne
stc
es
std
pusha
jmp
mov
inc
pop
aaa
add
mov
pop
push
mov
sub
inc
das
lahf
jge
sbb
scas
dec
outsl
push
sub
inc
shl
jmp
cld
jp
pop
in
pop
push
int
out
jo
mov
movq
dec
jg
xchg
cmc
and
mov
push
cmp
mov
and
mov
and
fistps
mov
fiadds
push
xor
adc
cmpsl
ret
out
mov
fwait
push
add
subb
pop
add
adcb
stos
in
dec
out
arpl
fldcw
ja
je
loopne
test
or
leave
mov
sahf
inc
outsb
push
adc
lods
test
movl
inc
dec
je
dec
sbb
stos
push
mov
loop
mov
test
cltd
mov
into
scas
or
cmp
daa
mov
cmp
sbb
out
sbb
out
xchg
mov
or
pushl
pop
in
add
and
jp
out
pop
mov
xchg
mov
ss
cmp
loop
sbb
js
movsb
loop
jb
fdivs
inc
inc
rol
ret
fidivs
ss
adcb
inc
int3
cltd
inc
into
mov
jge
pop
in
or
xchg
and
orb
mov
in
scas
ja
pop
popf
scas
pop
or
pop
aaa
fstpt
add
pop
dec
cmpsb
cltd
scas
xchg
push
shlb
jns
divb
dec
dec
and
pop
fldcw
mov
jo
fiadds
jbe
jns
fs
xchg
cmp
pop
and
mov
shll
aaa
clflush
push
sahf
das
in
dec
jp
sahf
or
mov
lret
fdivl
leave
mov
mov
movsl
add
and
inc
lods
mov
push
jbe
mov
mov
jno
fbld
mov
adc
xchg
push
scas
test
and
add
cltd
rcrl
add
dec
xchg
enter
in
das
dec
push
ficompl
xorl
mov
mov
jg
test
sub
lret
dec
dec
lods
mov
xor
jle
icebp
inc
push
push
adc
push
lock
call
int3
push
or
lods
mov
lock
inc
test
push
mov
xor
ret
mov
xchg
xchg
xchg
and
loope
ret
pop
sbb
cmpsb
cmp
sahf
mov
mov
lock
out
aam
std
ja
mov
push
or
push
push
std
jne
jge
xor
push
pop
repnz
cmp
stos
xor
push
mov
push
inc
ja
and
sub
adc
outsb
pop
mov
sub
or
sarb
aad
xor
pop
mov
xchg
div
in
shrl
and
adc
cmpsb
lahf
push
addr16
add
cli
and
sub
out
xor
adc
cmp
or
add
and
into
cmp
jl
sub
inc
cmp
nop
add
popa
adc
mov
cld
fsubs
flds
insb
sbb
lds
push
jmp
sbb
lods
pop
ss
lret
roll
leave
xor
popa
icebp
xchg
pop
adc
sbb
push
jmp
jecxz
stos
jecxz
push
mov
push
and
rclb
inc
mov
imul
add
adc
pop
hlt
inc
jmp
lret
popf
jns
cmp
inc
scas
imul
mov
data16
and
ss
pop
add
cwtl
cmp
movsb
daa
mov
test
push
pop
push
lret
das
mov
jecxz
in
mov
xchg
adc
xchg
push
into
lahf
or
icebp
or
mov
push
pop
or
jb
add
jae
or
pop
out
or
fmulp
push
and
jb
sub
jl
pop
rorl
lds
js
inc
nop
mov
pop
mov
mov
mov
test
test
dec
mov
popa
pop
mov
xchg
mov
cmp
sahf
mov
out
rorl
adc
out
test
fdivp
call
das
lret
or
popa
mov
adc
xorl
rcll
mov
xor
and
mov
add
jg
jo
out
and
xor
mov
mov
call
int
dec
mov
inc
mov
xchg
arpl
and
sarl
test
loope
mov
inc
push
outsl
add
mov
add
clc
lods
ds
mov
mov
cmc
or
or
mov
mov
xchg
jge
inc
pop
daa
xor
cmp
dec
cmp
ds
pop
ss
push
mov
add
jge
add
mov
or
lods
ret
dec
mov
lods
repnz
loop
divb
mov
test
lods
inc
pop
mov
imul
hlt
sub
and
scas
inc
xchg
sbb
sbb
loopne
lret
push
stos
gs
movb
mov
shll
push
imul
stos
jge
inc
add
cs
jecxz
test
test
out
push
or
ret
sub
daa
pop
xchg
pushf
loopne
fdivl
push
adc
push
or
cmp
mov
or
scas
mov
adc
lods
sub
aaa
fdivs
mov
insb
dec
or
mov
xchg
aas
fdivs
movsl
stos
inc
lods
cmp
cmp
mov
lds
rcl
fsubrs
mov
jno
fdiv
repz
stos
and
jecxz
stos
repz
mov
call
or
add
insb
xchg
mov
fisubrl
sbb
fstpl
stos
movsl
popf
outsb
add
das
std
cltd
push
sub
popf
andb
add
popf
or
loop
stos
dec
mov
jne
adc
inc
lds
xchg
mov
push
jbe
xor
adc
xor
gs
and
and
xchg
inc
inc
enter
push
mov
xchg
lcall
daa
dec
dec
popl
mov
xchg
pusha
cld
iret
xchg
jp
and
mov
dec
fstpl
inc
pop
pop
pop
adc
cmpsb
push
sbbb
and
or
testl
aas
pop
mov
mov
sarl
pop
pop
into
sbb
mov
dec
ds
enter
fisubrs
movsb
push
test
mov
mov
ja
setae
notl
inc
repz
test
jbe
xor
jb
fistpll
pop
inc
test
mov
out
xor
lahf
sbb
repnz
pusha
in
and
clc
and
cwtl
mov
inc
data16
les
mov
rorl
les
aas
jb
pusha
push
popa
dec
mov
lahf
xchg
roll
pop
xor
and
dec
dec
mov
iret
negb
mov
mov
insl
inc
mov
mov
xchg
int3
dec
jp
or
lea
sbb
mov
shlb
and
adc
push
repz
push
jne
in
sbb
sahf
xor
in
arpl
pop
cmp
add
adc
aas
ret
imull
xchg
loop
and
data16
cmp
sar
add
xor
pop
aam
add
clc
test
frstor
mov
mov
loope
jae
fdivrl
stos
shrb
test
cmp
mov
aam
cmc
ljmp
dec
in
inc
and
jne
lock
ljmp
pop
fldenv
cld
jecxz
lea
pop
and
mov
mov
andl
ficompl
lret
pushf
loope
push
push
in
clc
jmp
hlt
xchg
stos
iret
sbb
add
scas
cmp
cmpl
or
pop
jbe
push
aaa
imul
xor
xchg
push
adc
cmpsl
rorl
push
repnz
add
es
loope
push
adc
adc
lcall
pushf
stos
leave
mov
mov
enter
repz
or
fsubrp
repnz
jo
mov
fisttpl
and
and
test
jmp
mov
adc
rolb
iret
xor
jbe
mov
imul
and
mov
stos
testb
ficompl
lods
add
xor
push
les
outsl
test
pop
xor
sub
es
adc
and
cmc
add
call
xchg
pop
push
mov
and
dec
lcall
inc
add
push
sbb
loopne
jo
ja
popa
or
mov
sbb
cltd
inc
repnz
loopne,pn
push
xor
or
jle
testl
sub
incl
repz
iret
sti
sbb
push
push
add
adcl
mov
fistps
dec
mov
adc
add
or
lods
leave
mov
xchg
out
add
scas
pop
loop
sub
xchg
mov
inc
fwait
enter
jbe
jb
jmp
add
jp
dec
or
aad
dec
int
cwtl
lahf
mov
sub
pushf
or
fmull
pop
icebp
mov
pop
pop
pop
rcll
sbb
lea
lods
jge
sub
sbb
cwtl
sbb
arpl
cs
dec
sub
dec
push
or
or
dec
shll
mov
xor
lret
push
iret
imul
sarb
repnz
ss
out
es
push
or
inc
pop
ret
hlt
push
js
or
int
hlt
xchg
mov
xor
inc
and
mov
and
lcall
mov
imul
push
insb
lahf
les
loope
popa
test
call
stos
fcoml
and
iret
ss
sub
mov
scas
lods
jle
nop
out
imul
or
jo
loope
sub
jne
mov
shlb
mov
popf
aas
aaa
sbb
ffree
mov
mov
or
and
push
mov
repz
addr16
lds
xor
shll
lock
mov
jl
jb
dec
pop
rorl
and
mov
or
mov
and
into
stos
shll
add
cmp
pop
mov
repnz
jae
in
adc
sbb
rcrb
loop
mov
pop
mov
mov
hlt
lea
cltd
test
stos
repz
rolb
fs
pop
push
loope
cwtl
pop
inc
rol
dec
or
test
out
inc
add
repnz
fidivl
sub
mov
popa
inc
lods
mov
mov
fcoms
daa
mov
movsl
mov
add
jns
jle
mov
out
push
push
mov
add
sbb
jg
das
popa
pop
and
sub
nop
pusha
nop
pop
and
or
test
push
xlat
mov
sub
pusha
jbe
jmp
cmp
js
scas
hlt
repz
xchg
adc
adc
cmp
jmp
dec
push
fldenv
movsl
mov
popf
into
dec
mov
pop
addr16
rcr
fadds
jg
lret
inc
out
addr16
pop
adc
andb
sub
je
adc
lahf
mov
pop
mov
pop
mov
sbbl
int
fdivr
pusha
rol
adc
outsb
test
rorb
mov
in
inc
sbb
shlb
push
sub
mov
sub
int
adc
adc
mov
push
out
cmp
dec
bound
sbb
into
inc
imul
scas
pop
jno
xchg
bound
mov
cmpl
daa
pop
into
sbb
fnstcw
into
xchg
iret
movsl
push
xlat
cwtl
mov
push
rorl
sbb
push
inc
loop
add
cs
ja
lret
inc
cld
add
inc
fisttpll
dec
mov
xchg
mov
mov
push
xchg
imul
es
sbb
scas
inc
inc
xchg
out
pushf
adc
pop
jge
mov
push
sub
hlt
insl
es
repnz
roll
inc
addr16
jge
loopne
and
adc
imul
and
fildl
cwtl
test
dec
cmp
loope
jns
sbb
and
inc
test
push
mov
fnsave
push
loop
mov
sbb
mull
xor
push
jno
xchg
pusha
loope
test
js
inc
aam
mov
outsb
xorl
shrl
xchg
loop
jo
mov
loop
cmpsl
popa
mov
sbb
ljmp
sarl
xlat
int
mov
cmp
cs
lea
fs
xchg
jno
push
jns
xor
fs
sbb
mov
jno
inc
inc
sahf
popa
fcmovne
pop
jge
leave
test
and
xchg
ljmp
aaa
push
loope
mov
push
test
inc
stos
and
mov
fadd
fadds
dec
dec
mov
xor
loopew
mov
inc
xor
ja
fdivrp
scas
mov
jae
jns
mov
les
enter
adc
shlb
inc
sub
inc
shlb
xchg
push
adc
test
push
and
jl
roll
lcall
ret
sub
sti
inc
cmp
dec
insb
push
add
daa
mov
lahf
jge
fistpll
xor
imul
out
xorb
add
push
sahf
imul
out
add
fidivs
inc
xorb
or
leave
rcrl
and
pop
shlb
shrl
xchg
movsb
cwtl
scas
les
cltd
adc
pop
push
xchg
lods
and
inc
fldt
int3
lea
adc
sub
sti
xor
adc
mov
scas
nopl
lret
jmp
stc
adc
mov
pop
or
fcmove
adc
jecxz
fwait
and
ret
push
push
mov
fidivrs
cmp
push
mov
sub
rcrl
imulb
movsb
bound
sbb
adc
clc
xor
loopne
cltd
lods
adc
mov
outsb
lods
je
inc
inc
cmp
push
scas
scas
cmp
pop
xor
push
inc
idivl
add
pop
mov
fwait
loop
xchg
pop
mov
jmp
out
cwtl
stos
adc
or
fimuls
dec
stc
dec
fsubrs
leave
cmp
xor
mov
nop
xchg
adc
lahf
pop
in
rcl
cs
bound
jle
cmc
jecxz
je
mov
out
mov
and
rolb
iret
mov
js
and
add
push
sub
out
int3
outsb
sbb
and
xchg
add
jb
add
cs
out
push
mov
xlat
cmp
repz
fdivrl
mov
negl
mov
xor
ljmp
cltd
mov
ljmp
mov
pop
mov
fwait
out
or
xor
std
xor
or
int3
sbb
mov
push
adc
push
and
jns
push
dec
ja
mov
loopne
mov
xchg
into
fsubrs
in
sbb
movsl
add
aaa
push
outsb
mov
sti
data16
push
imul
cmpsl
idiv
pop
pop
inc
mov
cwtl
int
hlt
xchg
pop
ficomps
mov
loopne
sbb
rolb
push
mov
pushf
and
cmp
cmpsl
popf
adc
mov
xor
or
xor
pop
push
fs
pushf
int
pop
stc
inc
shlb
andb
push
pop
mov
iret
sbb
sbb
cmp
out
sti
aam
mov
mov
cmp
sbb
fisubl
imul
test
mov
and
mov
push
es
jno
cmc
xor
xor
dec
repz
enter
nop
fcom
vpmacssdqh
mov
jmp
xor
and
push
loope
lret
cmp
cmpsb
sbb
lock
cmpsb
jle
or
push
insl
mov
xor
jle
jno
sub
icebp
adc
fidivl
cltd
mov
decl
xor
pop
inc
dec
dec
mov
scas
pop
addr16
or
fistpll
add
mov
icebp
mov
testl
sub
out
mov
subb
lds
xchg
jbe
lea
and
jae
inc
in
leave
xor
jl
mov
dec
mov
in
inc
int3
subl
or
xor
aam
sub
fsts
nop
inc
jo
mov
sahf
dec
movsb
ljmp
mov
enter
mov
cmpsb
jmp
dec
test
mov
adc
push
pop
fwait
adc
loope
ja
insl
sahf
fstp
cmpsl
stos
sbb
fcompl
mov
mov
in
fisubrs
sbbb
mov
cmpl
push
dec
push
mov
adc
imul
inc
sub
aad
sub
call
test
dec
push
and
push
imul
xchg
loope
rcll
mov
cmc
cmp
or
xchg
xchg
push
into
lahf
inc
adc
cmp
ja
out
xor
jl
adc
or
fisttps
dec
hlt
mov
cmp
mov
sub
mov
pop
or
aas
jns
sub
sbb
gs
fsts
pop
lock
mov
push
sbb
mov
aas
xor
out
xchg
jp
mov
loope
jg
or
aad
xor
ss
mov
in
test
std
ret
push
inc
mov
adc
xor
pop
mov
mov
cltd
shll
loop
test
mov
add
scas
aas
in
mov
xlat
mov
in
cmp
ss
jnp
mov
mov
ret
inc
pop
std
pop
mov
scas
xchg
xor
insb
repnz
xchg
sbb
mov
xor
in
jmp
shll
cmpsl
loop
in
mov
sbb
mov
dec
xchg
lock
aam
lods
mov
imul
and
fs
sub
adc
mov
loope
mov
inc
incl
mov
subb
dec
sbb
xor
cmp
adc
testb
jae
adc
shlb
xlat
mov
repz
daa
insl
das
dec
xchg
jbe
pop
add
repz
add
xchg
in
mov
sarb
sbb
pop
outsb
lds
jecxz
fldenv
jnp
jae
and
enter
add
cmpsl
lret
cli
xchg
enter
mov
std
xor
incl
or
insl
ss
fsubl
mov
adc
or
sbb
out
mov
or
insl
nop
and
cmp
and
iret
push
test
inc
pause
dec
sbb
lret
jp
pop
aam
pop
lods
and
ds
jae
jecxz
jl
push
in
loope
push
xchg
lods
ljmp
andb
or
xor
fisubrl
cmp
pop
mov
add
insl
flds
xchg
mov
mov
jnp
ret
in
mov
jne
inc
sti
inc
mov
mov
fwait
cmpsb
movsl
dec
int
push
xchg
sahf
loope
xor
and
add
and
aad
sub
stos
rcr
xchg
mov
lret
scas
jne
mov
loop
xchg
inc
cltd
dec
ss
addr16
dec
push
add
cwtl
cmpsb
test
les
xor
sbb
arpl
adc
shlb
int
call
movsl
mov
hlt
pop
js
mov
cmp
xchg
jg
sub
inc
adc
fisttpl
pop
lock
jno
xchg
lret
cmp
jp
and
dec
adc
movsb
pop
lods
add
popa
fidivl
lods
pop
dec
mov
cld
sub
sbb
out
mov
adc
jo
sbb
mov
imul
and
mov
xchg
inc
and
ljmp
push
xor
call
cmp
mov
int3
ret
cmc
ret
inc
cli
xchg
sahf
mov
stos
inc
ret
nop
outsb
sbb
int3
xchg
sub
pop
adc
test
cmp
jle
cmp
push
mov
out
lea
pop
fistpll
lods
fdivp
jl
jle
sti
insb
ja
sub
mov
cmp
mov
dec
imul
out
push
rcrl
dec
inc
jecxz
cli
cwtl
xlat
xchg
mov
push
and
std
ds
in
and
pusha
sbb
mulb
out
jne
or
fstpt
pusha
stos
lret
adc
inc
jge
inc
fwait
xchg
jle
adc
stos
js
jns
sbb
enter
ljmp
fs
xchg
xchg
xchg
jl
aaa
shlb
cmp
seta
repz
dec
pop
xor
lcall
or
jb
cld
int
das
testl
shll
dec
cmpb
repnz
fnsave
xchg
repnz
pop
clc
jae
mov
push
les
mov
xor
in
push
push
flds
jnp
addr16
test
lods
or
aam
ret
shlb
cmp
aam
and
mov
or
push
call
cmp
push
mov
mov
shl
mov
mov
in
adcb
mov
sahf
sbb
add
mov
sub
push
lcall
loopne
add
dec
push
inc
mov
cmp
aas
test
subb
mov
pop
in
cld
int
and
fsubrl
shl
mov
xor
cmp
jecxz
je
mov
pop
cltd
inc
fstps
sub
stos
lcall
xchg
sub
xchg
push
dec
pop
daa
lock
cwtl
lret
les
lret
sub
pop
inc
xor
test
add
add
pop
cmp
outsb
push
pop
dec
cwtl
and
sub
in
mov
mov
js
sbb
flds
jae
xchg
out
cli
dec
movsb
push
mov
pop
scas
inc
ljmp
jns
sbb
or
add
sbb
mov
xlat
pop
sbb
sbb
or
and
jne
cmp
jae
leave
jecxz
dec
int3
dec
out
jne
push
xchg
add
mov
cmpsb
fisubrl
es
push
shl
dec
sti
push
dec
add
add
mov
lret
xchg
call
push
sbbb
mov
push
icebp
sbb
jne
mov
cmpsl
mov
cmp
pusha
popf
ds
mov
jbe
sbb
inc
test
jae
xor
dec
push
push
iret
fwait
mov
push
fwait
popa
orb
jns
addl
cmc
dec
test
je
inc
dec
jb
out
push
por
push
dec
mov
scas
pushf
in
push
int
pop
rcll
inc
adc
mov
rcrl
sub
mov
iret
mov
sub
hlt
fs
pop
dec
xchg
inc
sub
cwtl
dec
les
mov
pop
repz
sti
sub
in
xor
loopne
mov
lret
outsb
loope
pop
cli
ffreep
push
xchg
push
pop
jmp
inc
jnp
lds
popa
cltd
cmp
push
mov
cld
mov
lret
cwtl
xchg
mov
ret
xchg
mov
imul
pop
sub
pushf
mov
int3
mov
lret
sbb
push
jbe
pop
fxch
in
mov
out
pop
les
das
fistps
in
push
cli
jl
rcl
sbb
cmc
sub
xor
lret
xchg
orl
mov
mov
cmp
jl
mov
mov
xchg
pusha
mov
adc
adc
insl
jns
sti
pop
imul
imul
add
movsb
or
ret
rclb
mov
imul
clc
loope
aad
popf
xchg
ja
roll
sub
clc
outsb
xor
mov
imul
sbb
popa
nop
mov
dec
mov
rorl
rorl
rcrl
cli
std
cmpsb
orl
hlt
in
lcall
cmpsl
jns
stos
mov
xor
mov
push
stc
or
dec
mov
mov
popa
jle
loop
adc
frstpm(287
ficoml
adc
xor
je
jo
cmp
repz
lcall
fxch
shr
push
cmp
add
pop
mov
addr16
jecxz
mov
sti
sub
xchg
push
in
xlat
jnp
and
jmp
push
call
xchg
lret
jecxz
outsl
cmp
jb
pop
cmp
sub
mov
jg
push
bound
mov
pushf
fdivr
mov
das
add
xor
add
xchg
mov
jp
mov
xchg
push
xor
sti
test
sub
jbe
or
insl
pop
sub
push
fst
or
unpckhps
int
jb
sbb
in
inc
lcall
cmp
jns
or
fistl
mov
xchg
scas
and
inc
push
sbb
push
les
xchg
clc
or
dec
loope
lock
mov
imul
and
fdiv
mov
call
xor
mov
ja
int
jp
cmp
cwtl
lods
es
push
adc
xor
xor
cmp
ljmp
cmp
push
pop
xchg
mov
mov
stc
dec
add
sbb
movsb
ss
or
and
fdiv
out
std
xchg
mov
int3
inc
fwait
in
xchg
mov
jbe
jg
sbb
jae
sti
cmp
stc
fisttps
push
aas
cmp
leave
jno
repz
stos
push
cs
lret
popa
lds
test
or
insl
test
test
pop
jne
and
xchg
mov
push
xor
inc
clc
cmc
and
jbe
cmp
icebp
adc
dec
mov
push
arpl
fnstenv
lret
mov
sti
adc
test
xchg
xchg
jle
dec
and
cs
call
dec
and
sub
cwtl
scas
sbb
test
add
out
add
rcll
inc
mov
popa
sti
insb
jo
fisttpl
or
ds
push
sbb
sbb
fldenv
push
xor
xor
sti
rcr
xchg
dec
gs
jo,pt
xchg
dec
mov
lock
int
pop
mov
inc
movsl
fadd
outsb
adc
and
mov
push
loopne
cmpsb
sbb
popa
ljmp
fsubrl
fidivrl
xor
nop
xchg
nop
push
push
sbb
jl
cmp
in
insl
cs
pop
or
push
cmp
hlt
icebp
stos
das
ss
add
and
add
out
push
xchg
sub
xchg
dec
test
jbe
fnstenv
xchg
jmp
mov
xor
sbb
hlt
es
insl
outsb
je
mov
lods
out
adc
mov
gs
ds
imul
faddl
shr
inc
sub
cmc
push
rclb
nop
mov
add
mov
sub
mov
sub
jno
lret
push
sub
incl
pop
jno
pop
mov
out
mov
testb
xchg
sub
dec
push
cmp
insl
dec
movsb
jp
loopne
clc
rcrl
xlat
fucomi
out
in
add
mov
sahf
hlt
cmpsl
mov
sahf
outsl
mov
xor
push
js
pusha
mov
pop
inc
enter
adc
mov
ja
and
cltd
xor
mov
in
push
mov
mov
aam
clc
mov
jno
lret
or
dec
rcl
mov
pop
cld
pop
mov
and
lds
fsubs
pop
cmp
jnp
hlt
fisubl
xchg
pop
jo
pop
loopne
add
hlt
test
es
sub
lds
push
or
mov
inc
or
stos
fwait
xchg
mov
xchg
cmpsb
les
call
sub
sub
push
mov
scas
and
fidivrs
icebp
mov
ljmp
and
addl
pop
stos
push
jg
cmp
hlt
dec
push
add
and
mov
cli
call
jae
pop
in
cltd
das
outsl
push
fldenv
mov
sbb
hlt
sbb
loop
add
pushf
push
lret
nop
or
loopne
imul
daa
stos
mov
roll
mov
stos
push
ja
xor
nop
test
dec
dec
push
pop
xor
push
orl
push
push
push
mov
out
xlat
sbb
lahf
and
test
cwtl
or
iret
or
mov
call
movl
cmpsl
or
lock
sub
adc
lret
test
jmp
mov
mov
push
mov
adc
btc
push
dec
in
adcb
jno
add
cli
mov
shrb
ficompl
push
subb
or
dec
mov
sub
xchg
shrl
in
sti
nop
fcoml
inc
jp
jne
inc
cs
in
movsb
sbb
out
xor
cmpsl
sti
dec
pop
cs
cltd
ds
idivb
pop
sub
inc
clc
popa
inc
mov
xor
cmp
rcrl
jmp
push
test
cli
insb
sahf
inc
jp
dec
xchg
fwait
lcall
aas
out
push
shrb
mul
dec
loope
ljmp
test
push
pop
add
xor
inc
test
sbb
xor
sub
outsb
ror
shl
dec
xor
adc
adc
rclb
xor
add
mov
sub
push
inc
pcmpgtb
xor
sub
mov
inc
mul
in
jg
cld
outsl
nop
fs
test
mov
pusha
scas
das
adc
movsl
ret
mov
mov
mov
loope
adc
sbb
adc
jns
add
mov
js
sbb
les
loop
mov
push
sub
sub
jge
test
push
jg
cmp
arpl
int
dec
inc
pop
in
sarl
aaa
rcrb
addl
or
stos
mov
ja
xor
mov
jmp
test
xchg
hlt
and
mov
jge
les
jmp
add
xor
pop
int
scas
mov
cld
ja
cs
pop
mov
cld
lea
fistps
xchg
mov
aaa
stc
pop
std
fs
stos
push
jg
aad
test
data16
jae
lea
sbb
aam
addr16
ljmp
push
ss
cltd
push
hlt
pop
or
daa
mov
dec
lock
and
bound
js
inc
call
adc
fimuls
or
fsubrs
inc
lcall
stos
pushf
test
mov
shll
inc
sub
movsb
xchg
bound
adc
in
ljmp
add
push
push
jmp
pushf
fsub
inc
mov
or
in
sub
add
mov
push
push
test
outsb
dec
arpl
dec
fwait
pushf
mov
leave
dec
cltd
clc
into
insb
inc
fucomip
call
pop
mov
aam
add
mov
dec
dec
xor
movsl
out
insb
cmp
test
add
pop
int3
out
pop
sahf
push
push
mov
pop
in
push
sbb
add
cwtl
mov
or
mov
and
cmp
push
loopne
test
push
popf
cmp
inc
test
les
push
push
pushf
xor
jecxz
adc
and
fdiv
rcrb
enter
data16
sub
repnz
decl
cli
push
jmp
std
dec
ret
lret
mov
push
insb
and
out
cltd
sbb
fdivl
rclb
pusha
jl
inc
incb
lock
mov
mov
push
mov
lea
mov
pop
out
cmp
mov
in
and
inc
stos
aas
push
cld
sbbb
mov
or
popf
imulb
sub
adc
clc
call
xor
mov
mov
mov
iret
push
mov
xchg
leave
lea
inc
xchg
xor
rcl
xor
and
loopne
xchg
jae
cmp
mov
push
sbb
mov
sbb
out
xchg
jbe
and
cmc
imul
mov
xchg
das
xor
rcll
pop
out
test
sbb
jae
push
ds
punpckhbw
pop
mov
popa
sbb
mov
es
ja
cmp
xchg
int
jns
mov
and
adc
ss
push
mov
cmp
inc
ficomps
ja
and
cmpsb
stos
into
ss
insl
xor
jno
inc
shll
loopne
cmp
pop
cmpsl
adc
sahf
icebp
adc
xor
loopne
cli
in
jns
add
popf
bound
fcomi
xlat
fidivrl
pop
xchg
fisubrs
cltd
or
aas
outsl
popa
mov
jmp
jae
inc
cmp
adc
cmp
repnz
sarl
daa
mov
sti
mov
and
adc
pop
sbb
js
sub
jns
je
insl
ret
out
in
out
xlat
les
mov
lods
xchg
stos
lcall
fstpt
mov
cwtl
imul
stc
inc
mov
cli
sbb
add
inc
push
dec
test
sbb
mov
cmp
fcoms
dec
daa
add
mov
cltd
out
add
lock
cmp
test
jmp
sbb
rcll
es
xor
ficompl
adc
jg
dec
pop
mov
shl
int
or
xchg
je
jp
arpl
cmp
int
in
arpl
mov
loope
mov
dec
sbb
daa
pusha
jnp
aam
mov
or
mov
adc
negb
add
sub
mov
sub
mov
pop
testl
jmp
repnz
jns
xchg
mov
adc
popf
test
into
rclb
mov
and
mov
addr16
mov
adc
sub
ss
mov
jno
cwtl
push
push
sbb
int3
ds
inc
movsl
ret
clc
repz
cmpsb
data16
in
cmp
sbb
clc
dec
and
mov
sarl
loop
shlb
push
pop
xlat
pop
scas
cmpsb
jnp
ljmp
test
cmpsl
mov
rclb
insl
dec
push
push
xchg
cmp
subl
divl
xor
repz
pop
sub
push
insb
fnsave
stos
pop
dec
test
sti
jo
push
hlt
jge
insl
cmp
xchg
add
cltd
mov
fisubrs
add
addl
cmp
es
mov
lds
cmp
loopne
dec
mov
inc
mov
mov
hlt
stos
push
inc
lret
push
cld
jne
fwait
xchg
cmp
out
shll
add
and
xor
jmp
sbb
push
dec
adc
xor
lea
mov
or
inc
jns
outsb
push
and
shl
dec
lahf
add
jo
js
out
aam
adc
imul
stos
fimuls
sub
mov
mov
pop
push
adc
lea
movsl
jo
dec
cli
lock
add
add
pop
fldt
sub
vmovaps
repz
popa
iret
adc
pop
fimuls
cmp
leave
loop
cltd
divl
test
enter
jb
sub
adc
push
xchg
push
stos
add
and
lock
push
movsb
mov
aas
incb
push
sbb
std
jg
mov
les
lret
jns,pt
pop
loopne
fidivrl
mov
dec
xchg
mov
lcall
inc
jno,pn
loop
or
mov
test
ficoml
sbb
push
pop
sbb
cli
outsb
pop
lea
inc
and
cmp
or
add
mov
mov
push
and
dec
nop
and
dec
fs
adc
fdivs
cmp
mov
push
jp
sbb
xchg
xchg
out
call
xchg
mov
lret
sub
mov
push
dec
std
mov
test
mov
lahf
mov
lock
fidivl
lock
and
lods
push
mov
dec
out
xchg
push
lock
leave
stos
and
dec
stos
mov
and
je
jno
cmp
out
aad
add
mov
or
gs
outsb
test
xchg
dec
negb
je
ljmp
stos
or
fs
divl
push
xchg
jno
outsb
flds
jmp
ljmp
sub
jne
mov
xor
hlt
fidivrs
mov
cmp
fdivs
test
int3
pop
fstps
cmp
add
ja
xchg
xchg
js
push
adc
push
subb
add
out
jb
lcall
fldl2t
and
loopne
ficoms
push
xchg
cli
jb
jno
push
fs
jbe
pusha
xorl
xor
outsb
add
mov
fcomp
cmp
out
js
cmp
xor
cmc
jae
movsl
imul
mov
jbe
shrb
lcall
mov
push
adc
call
cltd
in
sub
cli
popa
xor
mov
pop
cmp
and
rolb
and
or
mov
sbb
sub
mov
and
movsl
sbb
mov
aad
cmc
addr16
xchg
push
and
ficoms
add
int
adc
adc
outsb
fstpt
xlat
sbb
fbstp
pop
cmp
addb
mov
stos
and
mov
in
repnz
push
xchg
mov
add
sti
addr16
or
pop
cwtl
ss
push
add
dec
movsb
jb
xor
xor
jl
pop
or
daa
test
add
adc
ljmp
inc
jmp
cmp
in
adc
jmp
icebp
insl
ja
jae
cmp
or
mov
push
jno
mov
cltd
xchg
rcrl
cltd
sub
lret
cltd
sub
insl
inc
mov
jge
out
pusha
pop
out
addl
inc
xlat
fs
stos
mov
fwait
push
js
test
pop
pop
rcl
mov
jnp
dec
xor
mov
movsb
fsubrl
in
subl
clc
imul
mov
push
pop
push
pusha
and
sahf
mov
cmpsl
cmp
test
mov
lods
xchg
aaa
das
sub
imulb
dec
aad
dec
cmp
out
in
or
shll
add
add
pop
adc
mov
test
push
adc
dec
push
daa
fmull
out
subl
je
in
insb
lret
inc
pop
cmp
test
in
aas
jle
jmp
loopne
sbb
and
xor
push
add
popf
jl
xlat
push
pop
jnp
fwait
or
mov
in
jo
cmp
sbb
out
mov
dec
pop
loop
mov
mov
mov
clc
in
cmp
or
sub
adc
pusha
jl
fisttps
mov
inc
push
push
sub
fucomi
pop
mov
in
mov
lea
xlat
mov
or
cmp
lret
or
dec
cld
aas
fwait
sahf
test
xchg
mov
rcrl
lahf
xchg
lcall
fisubrl
sti
ljmp
shlb
test
push
cli
push
call
jmp
jle
adc
std
lds
scas
lahf
inc
bound
jge
cmp
lahf
cmp
negl
push
xchg
fnstcw
push
sbb
jle
fisttpll
call
cmp
imul
icebp
cmpsb
rorb
mov
mov
pop
enter
fstp
outsb
mov
mov
int3
lea
in
stc
mov
pop
and
mov
sub
push
out
and
bound
sahf
scas
test
fwait
and
push
movsl
popf
addr16
incb
rcl
mov
adc
cli
push
and
out
divl
fwait
or
push
xor
cmp
je
xor
pop
pop
rorl
rolb
fisubl
shll
daa
stos
jecxz
mov
pop
jl
std
sub
mov
sahf
stos
scas
sti
gs
leave
ljmp
lcall
insb
mov
bound
popf
outsl
or
das
cmpb
pop
jae
lods
add
pop
inc
es
adc
arpl
dec
out
jae,pt
enter
int3
xor
mov
insb
adc
mov
out
outsl
mov
mov
adc
cmp
subl
popf
push
fxch
test
jmp
and
push
psllw
xchg
nop/reserved
out
jp
adc
enter
jo
shll
shl
mov
jno
insb
cmc
sti
cmpsl
cmp
pop
std
mov
test
dec
repz
dec
shll
pushf
cltd
and
call
in
push
cmc
out
sub
into
xchg
push
sbbl
jno
xchg
dec
in
mov
dec
mov
jl
cmc
fisttps
jo
sahf
mov
mov
das
push
xchg
mov
pushf
xor
and
mov
xchg
mov
mov
push
not
dec
and
push
adc
mov
rcll
mov
inc
icebp
xor
add
add
inc
shll
adc
push
cwtl
out
clc
push
lret
pop
test
cltd
aam
jo
outsl
xor
add
call
ljmp
sbb
inc
fidivs
aaa
ret
andl
push
cmp
gs
inc
sahf
push
cmp
ret
movsl
sbb
push
or
popf
mov
xor
data16
ljmp
cld
test
inc
cld
mov
les
or
clc
or
stos
jnp
or
in
int3
cmp
mov
stc
mov
pop
add
arpl
rclb
in
or
adc
hlt
lds
pop
enter
js
pushf
add
pop
mov
fisttpll
jp
out
adc
push
stos
mov
ljmp
sarl
std
jge
mov
xor
pop
or
cltd
das
and
jl
lds
cmp
fsin
dec
imull
add
insb
xchg
popa
jge,pt
mov
subb
daa
icebp
jbe
add
dec
out
in
sti
int
mov
cld
xchg
jbe
push
mov
xor
xchg
ss
jnp
fisubrs
rcr
pop
sbb
sbb
repz
mov
add
iret
popa
jmp
dec
sub
out
fldl
lods
js
test
addr16
outsl
test
push
adc
mov
cld
gs
mov
mov
add
mov
iret
insl
cmp
and
es
jg
sbb
fists
popf
add
nop
mov
mov
push
sbb
sbb
add
mov
push
adc
rcll
fmuls
mov
mov
mov
add
or
and
mov
ja
lcall
jge
xchg
repnz
sub
jno
in
out
aad
push
lock
push
fisttps
xlat
out
cld
lds
cmc
pusha
adc
mov
mov
cmp
pop
mov
push
stc
sub
push
inc
movsb
sub
jl
and
pop
mov
mov
jmp
int3
movsl
mov
nop
loop
cmp
loope
arpl
or
out
repz
test
cltd
fsubp
arpl
sbb
jecxz
push
add
mov
jns
int3
test
push
movsb
and
nop
fidivs
loope
mov
pushl
mov
test
jmp
test
ffreep
jecxz
dec
cmp
or
mov
push
dec
stc
sbb
adc
xchg
mov
mov
gs
sub
inc
jmp
or
push
scas
add
pop
push
xchg
xor
cmp
bound
in
lods
lock
iret
adc
sar
mov
js
lods
aad
out
xor
out
out
aas
pop
pop
push
fs
xor
movsb
cmp
subb
lret
mov
inc
fsqrt
add
pop
push
jl
mov
mov
inc
insl
pop
ja
push
xor
mov
or
in
stc
ja
push
mov
ret
sub
ret
js
mov
nop
jbe
pop
loopne
dec
pop
mov
scas
imul
sub
sbb
cmp
sti
xchg
dec
push
pop
mov
sbb
jp
rorl
and
xchg
adc
sbb
or
cmp
loopne
jl
inc
in
out
out
add
divb
cld
pop
nop
mov
repnz
dec
fwait
xor
mov
test
add
sub
jns
icebp
adc
test
test
dec
adc
cmp
jb
roll
aam
pop
popa
fdivp
push
cmp
lret
shl
pop
jo
and
les
xor
pop
pop
mov
sub
push
sub
dec
imul
inc
xor
dec
inc
cmc
push
jb
sub
sub
adc
pop
rorb
lret
ret
ret
cwtl
inc
pop
pop
dec
dec
out
rolb
call
repz
notb
repnz
push
int3
out
mov
pand
push
cmpsl
adcl
sbb
xchg
bound
xchg
or
cmp
insl
stos
or
cmpsl
lret
fisttps
mov
out
add
repnz
loop,pt
fdivr
mov
adc
ret
mov
dec
ss
add
lods
sbb
idivl
fcomps
pop
sub
lcall
adc
cmp
mov
ljmp
testl
shll
mov
lock
mov
loope
roll
fsub
cmp
mov
orb
sarl
adc
pop
and
inc
inc
xchg
neg
xor
lcall
push
mov
aam
push
scas
fistpll
sbb
out
xchg
repz
pushf
sbb
pop
out
loopne
imul
sarb
iret
push
rorw
add
jp
outsl
loope
loop
out
repnz
push
or
mov
fwait
mov
int3
mov
jae
mov
cmpb
fs
pushf
xchg
dec
dec
mov
insl
mov
outsl
push
jb
cmp
mov
outsb
xor
divl
test
movsl
icebp
xchg
jb
add
imul
xlat
or
cmp
stos
sahf
add
xchg
addr16
or
sarl
or
ja
cmp
xlat
out
mov
push
shr
xor
jmp
ds
fs
push
sbb
cli
pop
das
out
loopne
mov
rorl
xor
aad
cs
push
faddl
sbb
outsl
insl
popa
pop
mov
iret
push
add
pop
sbb
fisubl
js
hlt
inc
sbb
push
stos
sub
repnz
cwtl
lcall
sub
inc
lea
ss
pop
or
addr16
and
push
xor
fs
jns
sub
sub
imulb
mov
adc
sub
cli
mov
mov
orl
stc
lock
in
imul
mov
stos
ret
adc
test
decb
mov
sub
mov
je
push
mov
adc
pop
cmc
loopne,pn
addr16
xchg
xchg
pop
lods
notb
hlt
into
cmp
push
loopne
scas
shrb
sti
in
out
mov
mov
sub
push
shlb
sub
xchg
jle
pop
clc
pop
lcall
stc
cmp
push
mov
js
dec
mov
or
sbb
jns
loope
jno
add
push
mov
xchg
xchg
adc
jne
jb
insl
daa
pop
fs
sbbb
xchg
int
push
popa
add
and
mov
sub
cmp
push
fwait
ret
fildll
pusha
stc
or
mov
loop
cltd
dec
xor
test
test
lahf
jns
or
mov
add
or
enter
data16
lock
or
xchg
or
js
fcomi
mov
fldt
xor
pop
mov
xchg
mov
cmpsl
add
inc
rolb
fsubrl
push
fst
bound
jge
cmp
dec
rcrl
scas
loopne
ljmp
mov
sbb
xlat
pop
sbb
adc
arpl
es
adcl
out
pop
repz
add
stos
adc
and
adc
clc
in
popf
push
jmp
add
insb
or
add
popf
sub
test
mov
mov
sbb
stc
cmp
pavgb
jns
and
adc
popf
inc
jo
pop
call
xchg
xchg
fadds
mov
xchg
out
adc
frstor
xchg
cmp
cmp
and
push
or
stos
js
mov
loop
pop
rcr
cmpsl
jno
in
jnp
mov
xchg
adc
mov
mov
sbb
pop
scas
cmpsb
inc
xor
into
xchg
add
mov
imul
stos
lods
pop
sub
jbe
sbb
mov
scas
orl
jns
clc
xchg
sub
loop
mov
ficoms
or
loop
enter
sub
outsl
lea
add
test
inc
sti
mov
xchg
jb
or
pop
shrb
dec
add
dec
jl
sti
xchg
xchg
sbb
insb
repnz
mov
and
in
movsl
sar
push
and
lret
pop
push
adc
cmpsl
das
lods
inc
pop
cmc
sar
test
mov
ret
dec
jno
loop
mov
cmp
push
insb
push
and
add
sbb
jbe
andb
inc
scas
ljmp
push
cmpb
jecxz
adc
push
ss
and
fadds
in
and
shlb
lret
mov
cmp
push
clc
mov
sbb
push
jge
int3
out
jnp
or
orb
push
adc
and
sbb
pop
imul
xor
inc
xchg
jno
nop
sti
pop
adc
cmp
sub
mov
jb
xor
cmpsl
mov
dec
and
cld
and
push
or
adc
pop
add
add
mov
inc
in
jge
xchg
push
dec
lahf
inc
adc
jns
cs
jo
pop
sbb
adcb
fnstcw
leave
in
dec
shrb
inc
xor
lret
pop
dec
mov
and
and
add
or
mov
mov
mov
push
inc
mov
call
pop
or
repnz
cli
shrl
adc
jne
or
or
inc
shrl
sbbl
mov
repnz
dec
in
push
imulb
jno
inc
and
lret
add
mov
leave
push
adc
dec
int3
sbb
jae
xchg
inc
jmp
add
dec
sub
sahf
je
fdivrl
cmpb
jnp
jmp
aaa
not
adc
dec
mov
pop
push
jp
push
aad
ja
jl
addr16
imul
mov
in
fidivrl
xor
shrl
hlt
dec
shlb
js
pushf
fsts
cmp
mov
subb
lret
loopne
leave
es
les
add
sahf
decl
or
stos
movl
xlat
inc
push
xor
jno
outsl
bound
mov
inc
xor
cld
insb
push
shlb
dec
or
fidivrl
jg
inc
cmc
pop
dec
sti
adc
loopne
jne
fdivl
mov
or
iret
mov
push
jnp
mov
jo
cwtl
ss
lds
or
push
and
mov
stos
xor
push
cli
mov
rorl
or
add
push
sti
push
cld
jno
add
movsb
push
orl
je
aas
cmp
arpl
push
sarb
subb
invlpg
jle
repz
push
sub
mov
dec
xchg
xchg
mov
jb
cmp
mov
andb
mov
testb
cmp
mov
in
test
adc
and
cmp
pop
mov
cli
dec
in
subb
sarl
out
cwtl
out
shr
subl
lret
adc
hlt
and
inc
or
mov
jg
clc
outsl
xchg
add
stos
xor
pop
xchg
insl
xchg
test
adc
mov
lcall
sub
fildl
sbbb
nop
mov
pop
add
stos
int3
dec
fucomip
lea
es
das
mov
cwtl
jb
fisttps
mov
mov
jo
push
cmpl
mov
int3
lcall
mov
imul
or
xor
sub
movsl
popa
out
mov
scas
adc
push
mov
mov
sub
leave
mov
mov
cmp
jbe
jmp
mov
dec
jp
aam
or
add
mov
scas
mov
repz
stos
and
mov
adc
aas
lcall
dec
bound
jnp
sub
int3
test
push
clc
push
sub
and
and
dec
sub
xchg
inc
cmp
mov
mov
sti
cmp
shrb
jns
lret
adc
popf
add
repz
roll
and
dec
lods
aad
mov
pop
dec
mov
jmp
push
dec
vmovhps
aas
loope
dec
arpl
push
inc
std
dec
cmp
std
inc
pop
test
jmp
mov
popa
xor
data16
rcl
je
or
sub
pushf
cwtl
scas
mov
lods
dec
clc
inc
addb
inc
jmp
jecxz
rep
lahf
pusha
cmp
cli
cmpsl
mov
rcl
incl
adc
mov
lds
jmp
aad
pop
std
lea
daa
xor
lods
xchg
pushw
ja
sahf
push
ja
mov
jmp
sbb
dec
test
jle
outsl
sbb
ljmp
mov
rcrb
or
movsb
xchg
les
cld
pop
fsubrl
ds
mov
dec
sub
aaa
fptan
ds
push
ja
cmpsl
orl
lcall
sbb
fidivrl
ljmp
xchg
push
mov
ja
or
add
cli
xlat
pop
pop
pop
stos
mov
pusha
popf
imul
mov
mov
divl
xchg
xor
pop
leave
int
ret
scas
push
inc
mov
pop
cmc
mov
or
push
arpl
lret
sti
inc
ljmp
fidivrl
stc
shrb
ds
pop
cmp
nop
ja
lods
jbe
adc
jno
movsb
adc
divb
outsl
xchg
mov
pushf
dec
sbb
jno
sub
aad
in
dec
push
adc
inc
adc
push
push
mov
and
jmp
fwait
sbb
ss
test
mov
lret
inc
and
or
movsb
xor
outsl
loope
popf
repnz
jge
lahf
rorl
repz
mov
adc
cld
ds
sbb
lret
pop
adc
and
mov
enter
jns
rolb
daa
fsts
inc
adc
je
xchg
pop
mov
and
dec
adc
push
xlat
stos
sub
es
adc
pop
repz
outsl
pop
xchg
pop
sahf
or
rcrl
cmp
push
outsb
pop
xchg
popl
add
pop
jmp
cmp
es
mov
imul
adc
sbb
mov
push
clc
dec
aas
mov
pop
and
dec
add
mov
mulb
xchg
pop
out
test
add
pop
outsb
mov
fiaddl
sti
hlt
or
addr16
push
xchg
sub
jne
push
or
push
xchg
out
nop
cltd
cltd
ja
into
cs
fmul
jg
loope
mov
rcr
es
aas
dec
jp
outsb
ds
in
rcrb
out
clc
mov
mov
aas
dec
inc
js
jo
loope
outsl
pcmpgtw
jl
xchg
dec
ds
sbbl
imul
pop
push
inc
mov
add
je
fcmovb
or
scas
leave
cmp
mov
je
test
push
nop
fidivs
cmp
bound
mov
mov
mov
fmuls
add
aaa
fistpl
sbb
lahf
cltd
in
gs
sub
loope
not
adc
or
sbb
jb
frstor
xchg
mov
lret
sub
inc
out
pushf
daa
jbe
cmp
dec
rcrl
jb
jecxz
pop
loopne
out
sbb
scas
mov
mov
push
arpl
fwait
stos
inc
xchg
pop
in
cmpsl
fcomi
stos
mov
cmp
adc
add
test
movb
mov
cltd
testl
popa
sub
push
sub
cmp
inc
or
inc
frstor
mov
lods
les
dec
xor
mov
xor
mov
xorb
jl
pop
in
loop
lahf
mov
pop
ds
faddp
dec
ror
icebp
subb
mov
cmp
adc
push
mov
call
and
xchg
xor
and
pop
lret
lret
xor
mov
lahf
lods
lods
fisubrl
outsl
loop
fwait
mov
mov
insl
testl
inc
mov
or
inc
dec
adc
scas
rolb
sub
jl
shl
loop
mov
sbb
movsb
xchg
mov
rcl
jmp
int
push
sbb
cmp
mov
test
sbb
cmp
test
xchg
aas
outsl
add
add
jbe
test
sbb
sbb
adc
cmp
repnz
loope
aaa
out
xchg
aas
out
jno
test
jns
dec
jno
leave
and
xor
movsl
inc
inc
sbb
jb
mov
push
cmp
mov
insl
sarl
rorl
imul
push
das
or
sub
loope
mov
je
loop
xor
imul
out
neg
or
lock
sarb
shll
sbb
movsl
dec
bound
ret
sbb
sbb
mov
sub
popf
and
cmp
mov
adc
push
inc
and
sub
ret
cwtl
dec
fstl
mov
xor
call
xor
dec
pop
shlb
std
dec
sbb
aas
ds
out
xor
pop
inc
cmpl
ja
cli
popa
xchg
movsl
or
test
insb
sarb
or
les
pushf
ficompl
stos
int
fisttpll
fndisi(8087
sub
shrl
movsl
push
xor
push
jle
cld
dec
jb
movsl
and
addr16
sub
lods
test
cli
cld
mov
push
sub
add
adc
xor
xchg
test
xchg
inc
rclb
add
out
shll
inc
or
inc
push
cmpsl
jns
add
push
in
sbb
and
jecxz
fstps
repnz
lcall
into
fs
bound
scas
clc
add
int3
pop
in
or
jnp
jge
out
cmp
mov
ret
popa
push
mov
mov
mov
leave
les
mov
ret
mov
pop
inc
sbb
shll
and
inc
mov
in
cltd
sti
mov
mov
xlat
jge
rol
or
clc
pop
xlat
iret
cltd
stc
lret
dec
mov
movsl
adc
sub
push
pop
adc
iret
and
ss
cmpsl
cltd
and
pop
cld
jae
gs
mov
sbb
sahf
dec
jbe
pop
add
loope
gs
adc
jae
dec
adc
rcrl
aaa
aam
and
and
xor
rclb
imul
xchg
jne
shrb
jmp
sbb
dec
clc
mov
mov
scas
push
pusha
mov
fstl
xchg
pop
mov
popa
mov
cwtl
jle
pop
pop
xchg
sub
jns
jge
xchg
fstp
scas
pop
lea
mov
mov
dec
int3
out
lcall
cmp
sub
mov
test
jb
stos
push
xchg
and
js
push
add
inc
pushl
imul
pop
movsl
leave
mov
mov
sti
and
pop
popa
les
pop
out
dec
cld
cli
call
ret
hlt
dec
std
sbb
scas
lock
std
and
lods
sub
jno
add
inc
int3
mov
push
sbb
fmuls
packuswb
xchg
pop
rcr
inc
into
xchg
in
jns
mov
add
ljmp
add
mov
xchg
inc
dec
mov
push
cltd
dec
xor
notb
jecxz
xor
sbb
insl
ret
test
shll
push
out
stos
jns
inc
scas
cmp
and
pushf
mov
sahf
andl
dec
imul
dec
xor
out
mov
ret
sbb
mov
rcrl
outsl
push
test
mov
push
push
jne
xchg
jo
lods
cmp
sahf
out
lock
std
ret
outsb
fninit
xor
lahf
mov
jmp
in
xor
lods
inc
sbb
fsts
data16
fimuls
and
jecxz
cmp
aam
pop
icebp
ss
cmp
test
in
jo
adc
sub
data16
fwait
aas
roll
mov
cmpsb
jbe
mov
sbb
push
out
mov
lea
jne
mov
sub
dec
cmp
enter
gs
fiaddl
mov
cmp
mov
imul
enter
in
cmp
add
push
js
lock
adc
scas
enter
cmc
movsb
loop
je
imul
call
stos
popa
testl
fs
lods
mov
add
lret
stc
dec
mov
pop
je
push
push
dec
das
jg
sub
sbb
ss
pop
add
push
fsubrl
xor
sbb
adc
movsb
xor
les
hlt
roll
add
cmc
cmpsl
push
fdivs
mov
inc
test
dec
scas
sbb
cli
push
jp
into
cwtl
adc
xchg
xchg
push
mov
dec
pop
mov
xor
pop
mov
shr
mov
mov
ja
ljmp
loopne
out
rorb
loop
sahf
inc
pusha
pop
push
push
push
test
cmp
sbb
out
lds
and
fwait
lea
ds
fs
dec
cmp
inc
out
int
push
roll
xor
lock
lds
in
dec
nop
add
pop
repz
adc
test
and
dec
cmp
pop
push
cmp
mov
mov
sub
fistpll
xor
cmp
cmpsl
stos
xorps
lods
mov
jb
push
lcall
push
mov
rclb
mov
movsl
insb
xchg
mulb
xlat
int3
jb
mov
sahf
cltd
pop
loope
inc
jno
jmp
imul
add
xlat
imul
jne
push
adc
mov
test
sahf
mov
and
out
jl
nop
adc
jge
lods
push
cmp
aas
jg
sub
cmp
and
add
jns
sarl
das
dec
arpl
pop
aas
arpl
add
rorl
ds
icebp
jno
cmp
popa
leave
push
xchg
jl
pop
bound
adc
je
jl
lret
aas
cld
mov
ss
pop
rorl
arpl
mov
in
test
jp
daa
loopne
leave
test
inc
aad
loope
lods
push
enter
inc
jne
add
loopne
je
mov
and
lret
push
mov
xchg
jp
pop
mov
aad
adc
aaa
push
and
dec
test
out
xor
push
sti
add
rep
jp
mov
int
jbe
pusha
push
xor
push
jne
dec
pushf
cmp
lahf
cmc
mov
imul
or
fwait
lcall
adc
adc
fdivrl
mov
arpl
jle
sbb
add
sub
sbb
cmp
sub
cmp
js
mov
mov
neg
test
and
mov
push
je
lahf
mov
loop
dec
sub
push
dec
jae
insb
sahf
or
nop
inc
stos
in
cmp
pop
jmp
mov
jbe
or
bound
aam
mov
mov
insl
cmp
pop
cmpsl
enter
popf
andl
add
add
stos
sbb
out
and
jecxz
sub
mov
pop
dec
dec
mov
aaa
mov
ret
add
pop
cmpsl
repz
mov
in
adc
lcall
fidivrs
lea
sar
and
add
scas
test
xchg
js
mov
push
out
in
clc
aam
jnp
inc
or
hlt
ficompl
insb
mov
cmp
mov
out
xchg
pop
add
xor
loopne
mov
fsts
sbb
jl
and
aas
outsl
xor
mov
call
test
insl
iret
mov
push
test
rcll
mov
push
sbb
js
fsubrs
lds
or
xchg
mov
push
into
mov
lcall
leave
push
mov
xchg
xor
dec
arpl
shrl
dec
lcall
mov
sbb
cmp
frstor
push
sti
jne
fimull
xchg
jmp
inc
add
inc
lahf
das
arpl
daa
jp
inc
sub
rcr
xchg
add
out
insl
fisubrs
das
sub
scas
push
je
ljmp
fdivl
sbb
add
push
add
push
clc
add
xchg
loopne
push
and
mov
hlt
jmp
fs
cmp
cwtl
movb
push
jbe
mov
dec
jecxz
jno
and
aas
sub
jno
pop
jne
mov
jmp
xor
test
je
push
nop
sub
pop
insb
ret
jmp
xor
pop
aaa
outsl
scas
xchg
les
aad
xchg
or
xchg
adc
lds
mov
hlt
xchg
mov
jle
jl
mov
adcl
cld
sub
clc
lret
pop
fildl
cmp
sbb
mov
mov
jo
push
inc
pop
xor
popf
mov
and
rcl
jbe
scas
jb
or
aas
mov
push
mov
adc
hlt
xchg
out
lcall
outsl
mov
scas
push
pop
mov
pop
ds
js
push
fstps
adc
idivl
mov
jp
push
cmpsb
mov
mov
dec
xor
pusha
push
nop
mov
jg
pop
adc
sub
in
lods
lcall
stos
fnsave
imul
jecxz
push
pop
in
dec
lret
lods
mov
inc
add
pop
imul
jo
sbb
fwait
sarl
add
sbb
stos
cmpb
sbb
dec
das
pop
push
jo
int
out
mov
xor
xchg
jae
aaa
mov
pop
call
xchg
pop
mov
adc
test
lods
hlt
imulb
mov
repz
sub
popa
or
mov
pop
in
scas
inc
mov
dec
xlat
jnp
dec
pusha
lock
daa
adc
data16
aaa
xchg
jle
popf
jp
dec
jo
in
xchg
jno
sub
les
adcl
aam
push
mov
push
lahf
dec
lret
lret
mov
and
mov
imul
jo
or
out
lods
push
ljmp
outsl
ss
mov
ds
dec
lret
pop
mov
mov
jg
outsl
mov
ljmp
fisttpll
dec
and
mov
cmc
add
jnp
cmp
xlat
sub
jne
icebp
push
mov
jno
popa
mov
mov
xchg
cwtl
shll
fs
pop
xchg
add
or
push
push
pusha
in
repnz
data16
in
pushf
inc
pushf
xchg
or
or
aam
dec
scas
mov
jmp
mov
cmp
leave
dec
stc
in
mov
add
shlb
rcll
cmpsb
inc
mov
jmp
aam
mov
fcmovnbe
lods
ljmp
mov
push
pop
in
mov
xchg
pop
xchg
test
and
in
xor
insl
jge
fstpt
lahf
cmpsb
or
lock
fisttpl
inc
cmp
maskmovq
push
andl
stc
gs
jae
imulb
aaa
inc
scas
mov
test
mov
or
xchg
ret
test
aad
dec
cwtl
jnp
fists
xor
dec
or
loopne
out
jb
or
aas
lock
mov
xchg
mov
sbb
add
jmp
scas
mov
push
mov
test
adc
mov
stos
lret
sbb
push
pop
ror
lds
test
in
lds
xor
push
lret
mov
fs
xchg
es
cmp
mov
sarl
jae
stos
inc
in
enter
lock
lods
sub
test
add
mov
loop
stc
mov
mov
dec
or
mov
jae
aaa
or
std
push
cltd
dec
push
shl
xor
andb
hlt
or
pop
jne
insb
xor
and
clc
loop
scas
rorb
rol
testl
lods
mov
popf
rep
mov
xor
ret
mov
mov
sub
mov
out
mov
pop
adc
or
into
sbb
push
scas
push
adc
mov
sub
aad
sbb
xchg
mov
in
adc
push
mov
mov
sbb
sti
scas
jmp
in
push
lahf
xor
popa
clc
mov
loope
mov
les
fisubl
ss
lods
adc
ljmp
sub
aas
xlat
mov
mov
jg
hlt
lcall
daa
mov
mov
in
push
loopne
mov
clc
mov
xchg
mov
loope
pop
shrl
test
addb
xchg
lcall
cltd
in
aad
imul
and
addr16
fs
out
adc
ds
test
xchg
fucomi
adc
stos
pop
pop
xchg
lret
fld
test
mov
xor
inc
in
dec
and
loope
addr16
arpl
cmpl
enter
push
lcall
movsb
adc
jae
stos
in
fdivl
add
pushf
stos
out
push
inc
in
xchg
pop
les
mov
xchg
mov
imul
inc
pop
lret
or
rclb
in
inc
inc
or
push
dec
repz
lret
mov
repnz
pusha
xor
aad
lret
inc
lods
int3
rol
mov
sbb
in
pop
mov
xchg
fs
push
push
popl
addb
cmc
ss
xchg
jnp
mov
mov
dec
int3
mov
into
mov
dec
cmc
jae
les
outsl
mov
push
pusha
push
jge
mov
je
stc
add
loopne
lods
sahf
fbld
je
add
int3
mov
push
push
inc
int3
push
int3
call
call
ss
mov
jmp
inc
dec
fldt
mov
pusha
rcrl
fldl
and
adcl
push
cmpsl
jno
pop
push
shl
mov
or
subl
cwtl
jmp
mov
lds
mov
xor
arpl
inc
fstp
add
mov
mov
lcall
push
dec
lods
mov
call
addr16
xor
and
xor
lcall
sub
mov
cmp
jp
pop
shl
sbbl
add
dec
pushl
movsl
jns
adc
clc
stos
or
pop
sbb
call
bound
stc
fidivs
xor
sbbb
adc
lcall
out
into
xor
push
jns
ret
neg
nop
sbb
loope
mov
repnz
pop
test
mov
cwtl
imul
dec
cltd
outsb
in
and
and
mov
push
popa
dec
out
and
mov
inc
dec
jae,pn
mov
iret
and
and
lods
out
pandn
loopne
add
jnp
xor
jp
addr16
mov
hlt
and
incl
xor
and
jle
sub
mov
pop
or
cmp
les
ss
xchg
stos
rorl
adc
inc
enter
andl
mov
and
and
out
xchg
sbb
stos
mov
mov
cmp
push
shl
shlb
out
clc
push
sti
xorb
subl
mov
inc
xchg
pop
aas
std
sbb
mov
sbb
mov
mov
fists
adc
push
add
ljmp
cmp
jae
and
test
mov
fisttpll
daa
or
enter
push
shlb
jp
xor
fidivs
mov
aaa
add
cmp
and
xchg
enter
xlat
out
mov
mov
mov
or
enter
sub
cmp
or
ret
sbb
mov
fimuls
fdivl
mov
or
and
mov
push
sbb
xchg
fucomi
ljmp
out
fs
sti
push
jecxz
imul
mov
xlat
fucomp
pop
adc
popf
aam
divl
gs
push
arpl
leave
add
cmp
sub
cmp
sbb
xchg
and
test
imul
sub
ss
dec
and
mov
lcall
iret
xor
lret
pop
mov
push
mov
mov
jo
in
repz
int3
sti
lds
cs
dec
in
fiadds
pop
dec
push
inc
test
mov
mov
orb
insl
push
jbe
fmuls
loope
xor
mov
dec
xlat
stos
xchg
inc
aad
mov
rcll
xor
imul
int3
ret
cmpsb
push
jae
enter
push
loopne
iret
fcoml
pop
push
in
negl
adc
jno
jle
mov
popa
inc
or
movsl
sub
mov
repz
cmp
mov
mov
nop
or
sbb
sbb
outsl
sub
stc
scas
ss
imul
pop
mov
int
in
push
xor
sbb
mov
loopne
cmp
outsb
push
gs
dec
xlat
cmpsb
mov
add
iret
nop
inc
cmc
mov
inc
add
mov
insb
push
mov
xor
popa
sti
ret
jmp
stc
cltd
and
les
lret
fisttpll
pusha
out
insb
addr16
adc
mov
ret
clc
dec
sahf
cmpsl
mov
push
jle
sub
mov
push
in
xor
fimuls
and
mov
sub
xchg
add
inc
loopne
pop
cld
imul
cltd
adc
iret
dec
movsl
mov
popa
lret
xchg
mov
inc
call
mov
mov
xor
mov
sbb
mov
jae
divl
jge
or
push
pop
inc
xor
xchg
mov
xlat
dec
sub
je
jb
inc
xlat
rcrl
cmp
push
xor
pop
iret
push
and
dec
aas
les
cld
or
aam
xor
and
fisubrl
loope
fcompl
enter
lock
push
pop
push
pop
xchg
daa
push
sbb
adc
mov
xorl
iret
sub
pusha
sub
push
mov
ja
call
shll
int
sar
cmp
repz
cltd
sbb
mov
cmc
mov
ja
sahf
add
out
je
push
imul
pop
pop
stc
fsubrl
push
rcl
imul
mov
mov
daa
insb
ja
scas
cmc
and
mov
repz
push
mov
jne
xchg
lock
cmpsb
ret
adc
ret
sub
mov
mov
mov
into
pushf
jmp
movsl
sbb
btc
aam
and
mov
leave
sbb
pop
dec
outsl
insl
cmp
push
test
add
test
lds
push
mov
jge
dec
push
lds
xchg
jb
xlat
ljmp
push
shlb
enter
ljmp
pop
outsl
mul
fidivl
addl
push
mov
arpl
xchg
lock
cmp
fnstsw
inc
sub
scas
jae
imul
xchg
shlb
dec
sbb
cmpsb
mov
fildl
jae
xor
inc
aam
inc
fcompl
out
es
cvtps2pd
andl
xchg
test
clc
xchg
popa
incl
in
add
push
mov
add
sub
sbb
add
testb
ljmp
push
out
mov
inc
fdivs
inc
rclb
mov
xchg
arpl
inc
xchg
shlb
loopew
xor
aaa
cmp
repnz
push
xor
stos
jmp
call
or
pop
push
and
std
jle
adc
jnp
js
lods
loopne
lods
sbb
inc
jmp
popa
and
fsubl
test
xor
lods
mov
or
adc
outsb
js
mov
sub
adc
cmpsl
lret
sbb
sub
aaa
and
in
stc
pop
fnstsw
push
pushf
jmp
push
cs
fmuls
outsb
fadd
lods
add
jne
push
leave
scas
call
sbb
sbb
stc
push
mov
outsl
cmpsb
or
insb
xor
mov
hlt
sahf
sub
and
or
and
shl
mov
xor
insl
pop
cmp
orb
iret
mov
popa
and
pusha
loopne
mov
es
fmull
out
push
jg
pop
bound
dec
pop
sets
adc
clc
shll
ja
and
in
adc
xchg
push
adc
or
adc
ds
lahf
aas
inc
scas
jnp
add
jne
sahf
xchg
adcl
int
fwait
add
mov
sbb
xchg
pop
xchg
mov
cs
or
mov
imul
mov
call
pop
push
xor
out
hlt
lods
jge
jl
pop
cltd
fidivl
lret
lcall
cltd
mov
jb,pt
add
push
xchg
mov
aas
jge
jmp
pop
mov
mov
nop
mov
cmpsl
cmp
scas
decb
cld
push
dec
xchg
pop
insl
fistps
sub
xchg
cmp
jnp
outsl
dec
mov
xchg
js
or
jno
jns
jmp
jg
pop
dec
mov
sbb
cmc
add
lods
pop
repz
pop
popa
aas
and
leave
jle
je
test
sbb
insb
cs
pop
jmp
insl
call
mov
jo
in
popa
dec
or
add
dec
jbe
xor
add
fwait
mov
push
xchg
add
inc
jns
lock
sub
imul
xchg
div
cmp
cmp
stos
inc
inc
std
jg
insl
mov
jmp
outsb
mov
fiaddl
fldt
lcall
mov
imul
sbb
aam
shlb
jne
jl
xor
push
pop
fildl
xor
push
push
add
push
and
mov
dec
in
pop
adc
fiadds
divb
les
adc
pop
jge
repnz
and
jmp
ja
je
and
xor
adc
rcl
pop
cmp
mov
xchg
mov
sarb
xchg
sar
sbb
movl
test
mov
bound
out
scas
pop
inc
lahf
mov
jg
mov
mov
xchg
es
jne
dec
call
scas
decb
adc
pop
and
pop
or
cltd
inc
bound
xor
jns
adc
mov
or
mov
and
inc
fcomps
stos
sbb
inc
bound
pop
xchg
in
int
xchg
jns
mov
sbb
jecxz
out
fsts
andb
jnp
mov
and
rorl
push
adc
loopne
pop
aam
arpl
loope
jne
mov
test
mov
std
lods
dec
inc
pop
add
add
xchg
ficomps
add
addr16
jo
push
fs
fnstcw
hlt
inc
pop
mov
cs
xor
push
xor
outsl
iret
ds
rcrb
mov
mov
sub
xchg
test
xchg
aad
clc
pop
shrb
ljmp
inc
clc
pop
pop
rolb
add
lock
je
int3
mov
sahf
cmp
arpl
popf
dec
sbb
neg
insl
loope
cwtl
out
loope
push
jno
mov
jbe
and
push
daa
lret
push
ss
and
mov
mov
lcall
bound
xor
pop
je
pop
rcll
fwait
popf
mov
js
lahf
sub
xor
pop
test
cmpsb
xor
hlt
hlt
in
push
inc
ficoml
aad
popf
add
int
push
daa
mov
jmp
or
pop
imul
mov
sub
int
inc
addr16
fs
mov
or
movsb
add
dec
push
xchg
add
push
stos
adc
stos
and
push
imul
punpckhdq
stc
mov
je
lret
stc
sbb
adc
mov
mov
lds
aaa
scas
testb
or
push
sub
xchg
imul
jg
aaa
enter
movsb
jno
leave
fbld
loop
push
ret
sub
std
push
xchg
push
std
pop
aam
les
xchg
outsl
mov
repnz
or
push
dec
and
ljmp
inc
jnp
dec
push
mov
fistpll
cld
mov
loop
cmp
shrb
sbb
cmpsb
push
ret
or
ljmp
stos
stos
ret
jb
and
jecxz
es
sar
lahf
sbb
jne
lods
push
cld
test
or
jno
hlt
fmuls
mov
es
fwait
dec
ds
sti
lds
lea
in
sti
stos
jg
dec
sub
fcomi
icebp
xchg
dec
orb
iret
bnd
and
mov
test
or
sti
cmpsl
push
inc
addr16
mov
xchg
mov
mov
push
stc
xor
stos
adc
adc
repnz
cmpsb
cmp
cmp
movsb
lods
jns
into
cli
gs
adcl
mov
in
mov
push
and
mov
inc
test
sbb
mov
dec
push
ds
mov
movaps
pushf
jg
cmpsl
add
jl
jns
incb
ffree
jns
dec
push
sbb
xor
fidivs
xchg
outsb
jl
js
pushl
repnz
ficoms
and
xchg
and
loop
add
inc
dec
jmp
cmp
adc
andb
jae
mov
push
repz
xchg
fs
add
adc
stc
fldt
cmc
pop
xlat
inc
jle
push
test
lret
fidivl
pushf
ret
daa
cmp
loop
inc
lea
push
adcl
xchg
add
pop
push
xchg
mov
bound
fidivrs
rcrb
arpl
sbb
jnp
adc
xor
aas
scas
leave
insb
fs
pushf
cmp
or
addb
cmc
pop
sub
sbb
inc
hlt
divb
aaa
inc
std
outsl
jno
js
push
lea
jmp
push
xchg
fisttpll
imul
push
leave
addr16
mov
add
push
mov
jg
add
sti
push
mov
push
pusha
inc
je
xor
popa
or
add
jmp
mov
mov
test
cmp
addl
xchg
enter
pop
adc
ss
mov
sbb
pop
mov
and
push
divl
fwait
mov
mov
mov
shll
dec
and
movsb
repnz
dec
loope
rolb
add
lcall
mov
push
add
frndint
imul
mov
inc
insb
repnz
pop
daa
pop
lods
jno
loopne
push
aaa
push
jns
int
dec
ds
dec
mov
dec
insl
loope
and
stos
mov
and
pop
mov
cmp
pusha
into
mov
or
sar
rcr
mov
lods
mov
adc
pop
ja
jnp
xor
mov
movsb
jae
ljmp
stos
jp
xor
test
outsb
xchg
sub
push
inc
cmp
scas
or
pop
jns
cmp
out
fimull
loope
out
sarl
mov
fiadds
xor
add
lods
cmpsl
mov
jnp
xor
or
ja
movsb
arpl
cltd
cmp
push
fildl
hlt
in
sbb
xor
xchg
mov
cmpsb
test
stos
aaa
xlat
pushf
ret
js
mov
test
out
movsb
xchg
jmp
jecxz
sub
push
jbe
jb
mov
fwait
mov
fsubrl
test
cmc
shlb
jo
push
stc
outsb
xchg
sbb
pop
push
jg
adc
lret
popa
add
xchg
cwtl
jo
in
add
add
in
lea
mov
arpl
aad
insl
fnstsw
repz
mov
sub
mov
ret
out
or
jl
xor
ficompl
cs
mov
jl
cmc
mov
or
mov
xor
mov
out
test
add
sahf
dec
cmp
shll
mov
push
sub
mov
test
les
test
mov
popf
push
jbe
pop
pop
sub
jbe
out
mov
aaa
clc
in
adc
das
cltd
aaa
scas
movsl
mov
call
loopne
sbb
js
mov
sbb
mov
push
popa
cmc
iret
jns
xchg
pop
inc
or
dec
jmp
push
push
mov
dec
stos
xchg
addl
in
adc
js
leave
sub
adc
bound
pop
mov
jns,pt
inc
getsec
jecxz
push
daa
jb
scas
mov
sub
cltd
mov
or
ljmp
pop
jl
divb
mov
ret
clc
jl
jle
jae
lds
xchg
cld
hlt
sbb
loope
lea
mov
inc
push
jle
xchg
dec
xchg
push
pusha
sub
pop
pop
imul
js
push
mov
test
aaa
popa
inc
idivb
xor
int
jae
push
pushf
fwait
cmp
push
shrb
scas
jae
mov
lods
test
insb
sbb
mov
and
mov
push
cmp
in
popl
pushf
add
pop
mov
je
cmpsl
fistl
mov
xchg
cmp
in
pusha
push
dec
pop
popa
xor
cli
or
xor
lahf
movsb
es
adc
shl
ficompl
inc
dec
loopne
stos
fimuls
jl
ljmp
dec
inc
mov
inc
mov
mov
adc
pop
mov
rolb
xchg
mov
dec
xor
mov
push
mov
push
jmp
orb
xchg
pop
pusha
add
pushf
scas
add
je
mov
rcll
repz
cmp
call
jbe
lods
fnstenv
clc
mov
push
add
ret
xor
adc
pushf
sahf
fists
loop
mov
xor
dec
mov
pop
sbb
es
fildll
in
imul
pop
push
mov
ja
mov
mov
adc
push
mov
push
repz
push
push
popa
bound
cmc
push
scas
sahf
pop
repnz
jns
adc
push
test
les
ficoml
test
inc
push
sti
xor
adc
xchg
hlt
clc
leave
pop
scas
jp
inc
or
jl
ljmp
dec
sub
cmp
das
mov
stos
adc
cld
jg
push
jne
xchg
lea
movsl
sub
fdivrl
inc
sbb
cmpsl
outsb
or
int
insl
mov
jne
rcrb
xchg
or
out
addr16
push
adcl
lahf
fisubs
outsb
mov
push
sub
enter
lods
pop
xor
js
iret
fildl
icebp
add
lret
stc
cmp
lea
daa
fmull
je
daa
mov
int3
mov
cs
cmc
pop
adc
inc
dec
cmp
mov
mov
xor
cmp
sub
in
inc
and
or
imul
dec
lods
addr16
sub
jp
addl
mov
repz
mov
xchg
fwait
xchg
jge
test
push
lret
add
repz
mov
mov
jmp
out
std
jl
pop
push
adc
call
or
jmp
jmp
push
ljmp
dec
ret
cmp
stc
inc
sbb
in
cmpsl
add
push
push
cld
cld
repnz
adc
mov
pop
jae
lock
add
outsl
mov
iret
rcr
inc
dec
popf
mov
pop
testb
int
mov
aas
pop
jge
cld
dec
nop
cld
jns
add
jecxz
je
push
idiv
mov
pop
ret
aam
push
pop
enter
pusha
push
movsb
inc
dec
in
add
cmp
mov
test
inc
shl
push
inc
add
cmp
cwtl
inc
insl
xchg
sub
outsl
sub
cmpsl
cwtl
xchg
sbb
sbb
leave
fstp
gs
mov
rorl
inc
jb
stc
adc
pop
add
push
sbb
fldenv
push
push
imul
idivl
sbb
sub
pop
jl
cmc
test
mov
jl
std
ss
dec
mov
lea
push
push
in
jl
push
jno
adc
mov
push
adc
mov
or
cmp
jb
jne
ret
in
stos
adc
mov
push
popl
mov
cmpsl
mov
sub
test
pop
push
xchg
ds
ret
sub
gs
lods
out
popf
xchg
arpl
push
mov
inc
icebp
enter
xchg
and
mov
mov
pop
xchg
jge
cmp
popa
jo
mov
fbld
xchg
cmp
sub
fidivs
std
pop
xchg
hlt
rorb
xor
inc
jmp
cmp
xor
cld
xchg
cs
xor
lret
adc
jl
push
scas
xchg
cmp
test
int
inc
jmp
add
xor
push
pop
fdivr
clc
aaa
lahf
and
mov
lock
int
test
arpl
das
dec
repz
call
test
clc
xchg
add
mov
jge
jmp
mov
stc
mov
jne
in
push
push
mov
popf
sti
call
cmp
xor
imul
push
pushf
fstl
push
mov
cwtl
stc
icebp
and
cwtl
mov
lds
call
and
xchg
shrb
std
pop
cmp
lret
inc
sbb
mov
xlat
icebp
xlat
fsubrl
mov
cmp
mov
orb
cmp
and
leave
adc
ja
dec
and
arpl
fcmovb
gs
and
mov
xchg
subl
mov
shrl
inc
rol
lods
ds
hlt
outsb
cmp
popf
sbb
adc
push
popl
push
add
xlat
push
mov
mov
ret
mov
leave
sub
push
sbb
loopne
cmp
pop
mov
sbb
or
test
lret
inc
cltd
decl
aad
xchg
cltd
mov
adc
push
std
gs
mov
lock
cli
mov
leave
jb
jno
mov
mov
mov
jo
sub
push
xor
imul
mov
stc
fisttpll
cmp
shll
mov
mov
stos
loope
push
pop
push
lea
jge
push
data16
idivb
pminsw
sub
ret
sahf
pop
lret
xchg
mull
movsl
xor
sarb
hlt
jge
push
ds
jne
popf
roll
out
shlb
jl
mov
dec
dec
xchg
roll
push
int
and
aad
insb
aaa
stc
jp
xor
mov
testl
dec
mov
mov
iret
notb
movsl
xor
cltd
dec
movsl
dec
outsb
jmp
lcall
out
dec
push
pop
popf
in
push
dec
sub
decl
cmc
xchg
sarb
in
pushf
add
sbb
lds
ret
cmp
add
xor
xor
js
xor
test
dec
lea
adc
mov
push
and
and
pop
in
fxtract
lret
filds
pop
mov
loop
insl
xor
xchg
push
ss
ja
jle
sub
popa
xchg
lods
mov
cli
test
ss
popa
xchg
mov
sbb
or
push
or
pusha
rclb
imul
bnd
add
lret
mov
lds
int
push
push
jl
cld
icebp
mov
xorl
jo
in
repnz
cmp
repnz
mov
daa
sbb
push
in
xchg
aad
pop
lret
sub
popa
pop
jl
nop
mov
into
sub
int3
dec
dec
outsb
enter
rcll
fstsw
rcrl
movsb
push
cmp
push
add
mov
xor
outsb
ret
les
sub
pop
cwtl
pop
jge
adcb
mov
xchg
adc
and
je
je
sub
mov
xor
xchg
jno
dec
dec
out
jp
push
jmp
int3
icebp
out
pop
mov
push
mov
cltd
scas
fisubrl
or
sahf
shlb
sbb
xor
dec
sub
inc
jl
rcll
int3
pop
lock
mov
in
jl
mov
mov
sub
xchg
stos
add
aaa
lret
stc
cmp
std
add
js
mov
js
sbb
pop
mov
das
push
inc
stc
cld
scas
jb
dec
jno
xor
cltd
jo
push
ja
daa
in
jnp
pop
cmpsl
jno
mov
fs
jmp
mov
and
out
inc
sar
xor
add
mov
imul
mov
dec
push
jmp
stos
js
cs
mov
addr16
push
sbb
js
test
test
leave
js
gs
movsb
les
sub
sub
mov
adcl
or
out
xchg
jnp
add
dec
cld
stc
cmp
arpl
es
xor
adc
hlt
loope,pt
sbb
into
sti
push
add
jbe
sub
mov
push
xchg
mov
ficompl
test
repnz
inc
cld
add
movsb
fcomps
shrl
mov
dec
imul
jl
in
xchg
scas
jle
mov
ja
or
pop
push
popf
xchg
fs
cmpb
dec
and
ret
iret
push
lods
js
je
insb
arpl
lcall
shrl
addr16
mov
push
push
enter
adcl
pop
std
test
addl
mov
mov
mov
test
fs
cmp
loopne
hlt
lcall
arpl
cmp
lods
pop
jle
xor
lret
les
repnz
mov
xor
xchg
sbb
and
cmpl
pop
or
xchg
aad
fwait
nop
cmp
jo
imul
or
cwtl
jmp
jmp
inc
scas
dec
push
ret
out
cmp
xor
out
jnp
fucomp
and
lret
mov
enter
xchg
jno
ljmp
mov
sub
dec
aas
jmp
cs
loopne
mov
jbe
stos
iret
arpl
fildl
punpckhdq
add
mulb
pop
cltd
shll
and
mov
icebp
lods
inc
les
incl
mov
popf
xlat
xor
xorb
loope
popa
and
into
outsb
push
inc
mov
inc
shll
cmp
sub
mov
mov
movsl
ds
xor
adc
mov
pop
and
enter
inc
push
paddd
push
push
cmp
mov
push
inc
inc
adc
mov
and
mov
lcall
outsl
pop
sahf
pop
push
sbb
movsl
loop
out
pop
push
add
jg
popf
sub
inc
mov
repnz
jl
cmp
mov
dec
sbb
js
dec
leave
ljmp
scas
push
adc
mull
sub
sub
xchg
adc
xchg
ficompl
dec
pop
idivb
push
sahf
insl
ret
mov
shl
sub
push
mov
wbinvd
xor
daa
rcll
repz
jo
mov
cmp
push
push
sub
fmuls
xor
das
shrb
adc
cmpsb
inc
add
aaa
jmp
cmp
jbe
cmp
or
imul
orl
xchg
sahf
mov
push
sahf
mov
in
dec
push
lret
jb
add
aas
lds
add
je
jge
jns
fldcw
stos
cmp
cmp
dec
jecxz
call
data16
fyl2x
jmp
call
cmpsl
inc
pusha
sub
ret
pushf
ja
jmp
das
iret
loope
mov
mov
in
mov
pop
repnz
cmp
mov
out
adc
sub
call
xor
cmp
mov
dec
adc
stos
aas
xlat
inc
js
je
into
push
pop
lods
lret
dec
cs
outsb
mov
mov
sbb
enter
aam
adc
sub
pop
mov
xor
inc
fwait
cmpsb
jns
ficoml
call
or
mov
gs
lods
sti
out
jnp
mov
mov
mov
imul
mov
mulb
mov
xlat
repnz
fidivrl
and
xlat
adc
scas
jecxz
sti
lods
popa
or
mov
fs
lods
add
lret
or
mov
push
xchg
gs
ret
fnstcw
mov
daa
adc
inc
out
mov
inc
push
aad
rorb
or
xchg
test
xor
mov
or
adc
stos
pop
xor
mov
jno
mov
add
jb
xor
push
stos
jnp
in
cmp
int3
das
xorb
push
data16
fiaddl
cltd
pop
cmp
cld
fldt
cld
push
icebp
mov
cltd
lcall
add
scas
sub
mulb
repz
dec
jl
ret
jo
fldt
fisttpl
shl
jbe
and
push
xchg
sbb
sub
fstps
iret
into
xor
inc
scas
pop
add
mov
fs
popf
cmpb
inc
add
aam
mov
mov
out
imul
test
and
add
sbb
lahf
lcall
cmpsl
bound
mov
and
aam
test
dec
cld
xchg
ficompl
fdivrs
sbb
incb
pop
mov
jecxz
mov
lods
jle
gs
mov
inc
pop
pop
repz
jge
xlat
es
mov
into
fs
and
xchg
mov
test
lea
int3
jl
adc
xchg
pusha
xor
cwtl
jbe
add
dec
mov
imul
stos
push
or
enter
jmp
pop
in
inc
xchg
and
fldl
adc
andb
gs
lods
imul
and
les
sbb
aad
inc
fcomi
std
or
aad
cmp
add
push
lret
dec
ret
xlat
cmp
and
lea
jb
cmc
ret
out
xchg
lahf
addr16
fnstenv
daa
jns
adc
aad
push
dec
adc
js
cmp
jbe
daa
sarb
xlat
or
jp
ret
aas
cmp
cmpsb
outsl
lods
push
push
push
jge
pop
aaa
and
pop
in
jne
bound
icebp
pop
les
add
imul
sub
sbbb
fsts
xchg
lcall
jle
outsl
mov
out
negb
pop
cmpsb
jb
mov
in
adc
sub
and
push
mov
dec
cmp
lock
mov
sub
mov
hlt
insl
lahf
in
and
inc
gs
lcall
pop
inc
xor
push
bound
xchg
jmp
pop
sub
push
fisttpl
inc
fistpl
sub
scas
pop
cmp
mov
pop
fwait
je
fdivl
gs
cwtl
sbb
pop
lret
pop
push
push
testb
sti
xor
dec
mov
mov
mov
leave
rorl
xchg
mov
dec
ret
data16
mov
cmpsl
dec
adc
dec
arpl
inc
cli
daa
fbstp
or
fdivs
mov
add
xchg
pop
and
test
mov
int
mov
inc
jae
out
or
dec
rcrb
and
lods
popa
and
cmp
xchg
push
and
dec
jl
cs
add
dec
sub
xchg
insl
fcompl
jmp
dec
aas
scas
push
outsb
push
dec
jne
jl
pop
int
popa
cmp
add
mov
or
jecxz
jg
aas
lock
arpl
loop
jnp
ds
leave
jge
xchg
inc
loop
xor
cmp
jg
xor
mov
addb
sahf
pop
int
fwait
jb
sub
jnp
jle
scas
mov
sub
mov
pushf
repnz
adc
cs
pop
jne
mov
cmp
xchg
stos
mov
js
jl
ds
dec
pop
add
xor
cmpsb
call
jb
pop
pop
imul
stc
pop
ret
ret
pop
daa
cwtl
mov
in
sbb
inc
ja
xlat
mov
dec
stos
xchg
sbb
pop
add
mov
movl
cli
mov
fs
sub
adc
xchg
mov
fxch
push
iret
add
shll
cltd
or
fildll
add
addr16
xor
arpl
push
mull
dec
mov
xchg
add
loopne
xchg
mov
scas
xor
sahf
js
xor
jns
cltd
pop
cmp
pop
cmp
jmp
push
xor
out
test
call
and
cmpsb
cld
add
mov
sub
inc
jle
sbb
aaa
lods
lock
pop
xchg
in
std
dec
mov
mov
popf
flds
xchg
sbb
cld
inc
pop
repz
pop
push
mov
mov
mov
test
fimull
subl
xchg
lods
shlb
sub
adc
gs
sbb
ret
aas
sahf
mov
std
jno
mov
shll
or
add
xor
mov
out
sub
adc
inc
rcrl
xchg
aad
adc
add
cmp
fidivrs
cmc
pushf
mov
lret
pop
xor
push
repnz
ret
pop
add
adc
xchg
sti
xchg
sbb
dec
fwait
in
push
mov
cmp
cmp
dec
test
inc
repz
shll
push
jp
mov
xor
dec
pop
les
mov
push
xor
loope
and
cmp
sub
adc
jae
in
xchg
xchg
mov
fistpll
in
add
xchg
push
jp
and
push
jl
ret
xor
mov
mov
xor
arpl
mov
inc
xchg
xorl
push
aam
call
jge
xchg
push
dec
push
mov
clc
sub
mov
push
pop
sahf
imul
jge
mov
add
mov
xor
out
and
popa
mov
testl
inc
psrlw
inc
dec
xor
lcall
push
xchg
hlt
xchg
xlat
enter
fisubrl
dec
int
inc
xor
mov
js
jmp
and
inc
push
adc
addr16
repnz
xchg
mov
or
mov
or
call
insl
shrl
and
inc
fldl
inc
int
adcb
ljmp
add
and
sti
fisttpl
xchg
dec
in
mov
cmp
mov
xchg
movsb
or
sbb
out
and
jl
repz
xchg
aas
sbb
into
addl
mov
cmpl
dec
mov
push
inc
add
xchg
popf
xor
mov
das
out
sti
push
leave
out
mov
fwait
arpl
mov
les
out
addb
adc
loope
jecxz
jl
adc
cmp
arpl
test
pop
cli
test
enter
cmp
in
pop
test
xchg
mov
pop
movsl
leave
push
xor
repnz
mov
jb
es
pop
mov
cld
jecxz
jns
pop
jle
sbbl
nop
outsl
fs
jmp
and
dec
lds
jo
mov
pusha
sub
xor
cmp
sti
cmpsl
imul
xlat
mov
iret
fisubrl
int
decb
cmp
adc
or
mov
pop
or
out
mov
orb
push
das
insl
jp
divl
sahf
pop
iret
dec
xchg
scas
sub
pop
sbb
fmuls
mov
ja
and
cmp
and
icebp
lcall
jns
dec
or
adc
in
mov
rcr
sbbl
popl
call
mov
or
sbb
mov
xchg
inc
dec
daa
pushf
popa
pushf
xlat
pop
jecxz
mov
add
out
mov
jns
push
aas
inc
lock
icebp
inc
xchg
std
or
imul
inc
fisubrs
jge
jno
mov
dec
fs
lahf
xchg
fucom
into
inc
cmp
xchg
adc
xchg
out
ljmp
jg
rorb
mov
je
pop
xchg
lret
mov
xchg
mov
mov
add
pop
add
movb
jge
cwtl
fistpl
inc
jae
insl
addb
xchg
cmp
mov
iret
shlb
push
lcall
das
pop
and
xlat
mov
adc
clc
cmpsb
les
mov
fiaddl
into
jecxz
fldl
cmp
fwait
test
out
pushf
push
lret
push
jecxz
or
adc
or
jne
aad
push
idivb
dec
data16
lret
popa
stos
je
call
pop
mov
daa
mov
jg
fstl
in
push
and
cli
add
adc
dec
xorb
in
jns
add
test
xor
xchg
cmpsl
scas
jb
dec
cmp
mov
lahf
cmp
pop
jg
in
jns
mov
xchg
and
adc
ljmp
imulb
mov
xchg
out
xchg
pusha
dec
and
jb
sub
add
lods
xor
outsb
xchg
das
imul
mov
push
ret
push
sbb
mov
add
int
jno
into
rcrl
sti
push
mov
rcl
xchg
insl
push
pop
pop
into
sbb
mov
jmp
insb
outsl
mov
in
and
pop
ret
sbb
out
xor
mov
inc
in
aam
test
xor
sbb
sbb
add
idivb
mull
push
enter
iret
xchg
fsubrp
dec
push
cmc
lock
lret
inc
sub
fnstenv
pop
sbb
int3
sarb
ja
sbb
test
test
sarb
jb
sahf
cmp
or
call
pop
pop
movsb
rol
mov
cmpb
mov
loop
jo
xor
ljmp
sbb
xor
xchg
xlat
mov
pop
or
aaa
ss
mov
sbb
in
cs
cmc
push
jnp
loope
hlt
mov
ss
inc
adc
mov
lods
xchg
dec
int
sub
std
adc
mov
mov
inc
add
stos
jl
daa
xor
add
jmp
test
ja
pushf
mov
sbb
pushf
cmp
pushl
icebp
push
xor
xor
ss
lds
ret
push
loope
aad
add
add
push
push
pop
sub
sub
imul
lret
dec
hlt
stc
dec
cmp
out
out
loope
test
pop
xchg
into
outsb
add
insl
push
cmp
push
mov
mov
cmc
fimull
cmpsl
or
fdivrs
outsl
add
fsubrl
sbb
mov
lea
push
mov
dec
loop
call
call
insb
jge
cmp
jbe
xchg
cmpsb
jne
in
jle
push
cmpsb
inc
ret
pop
lahf
inc
movsb
dec
jmp
decl
pushl
lods
pusha
xchg
movsb
roll
repnz
ds
xlat
adc
repnz
fcoml
cmp
pop
push
cmpsl
adc
cmp
roll
setbe
xor
mov
cmp
daa
or
ja
dec
jo
mov
pop
inc
dec
gs
add
mov
loopne
adc
push
mov
xchg
shrb
add
imul
sub
add
pop
repnz
jp
insb
inc
or
sti
sub
sarb
mov
rclb
lret
adc
jl
lods
orb
in
aam
es
fisttpll
xchg
loope
fistps
les
pop
adc
push
add
pop
stos
mov
cmp
sarb
adc
imul
adcl
inc
pop
inc
outsl
cmpsb
xchg
call
push
mov
nop
sub
pushf
pop
sub
aas
insl
dec
dec
lock
adc
add
sbb
lret
pop
ja
add
loope
or
es
ret
test
jno
xchg
sbb
inc
lods
sub
cmp
stos
daa
cli
cmp
rorl
fwait
jns
and
inc
mov
cli
adc
push
int3
and
jecxz
xor
int3
xchg
ss
fisubrs
insl
in
pushf
mov
sub
loope
and
andl
bound
adc
in
cld
or
xchg
and
xor
dec
adc
or
mov
pop
std
jno
jg
lret
cwtl
in
insl
sub
mov
lcall
and
push
xchg
sti
inc
sbb
aam
mov
jg
enter
in
pop
test
ljmp
stc
and
fisubrs
adc
in
ret
pop
repz
aas
push
inc
jle
mov
pop
pop
pop
mov
inc
or
mov
push
repnz
outsl
and
lahf
adc
inc
inc
mov
into
je
mov
or
dec
adc
xor
push
addl
sarb
fstpl
lods
push
das
test
lahf
pusha
jge
pop
xchg
xor
loopne
inc
cli
lods
test
xchg
push
lcall
fidivl
dec
sub
bound
sbb
cld
aad
icebp
test
adc
adc
dec
in
test
or
iret
ret
mov
test
mov
enter
insl
mov
stos
daa
dec
into
and
or
sub
shr
sub
lret
je
orb
sarb
xor
xlat
aaa
mov
je
mov
fisttpl
mov
pop
mov
mov
pop
andl
mov
mov
jg
mov
test
push
sub
add
jg
mov
insl
pop
addr16
fbstp
sarl
lds
mov
rcll
xchg
gs
stos
sub
lahf
jge
or
mov
fbld
jbe
lret
push
and
es
cli
pop
test
insl
ret
pop
andl
xor
les
pop
cmp
mov
mov
lret
cmc
mov
inc
adc
inc
push
pushf
mov
mov
mov
mov
mov
sbb
lds
pop
lods
aam
jo
push
push
aam
es
in
xor
xor
pop
shrl
sahf
dec
aam
iret
sahf
pushl
fdivr
jge
insb
xor
lds
lahf
jno
jmp
ret
xchg
inc
sub
ja
sarl
ss
loop
repnz
xchg
dec
subl
cmc
imul
sbb
hlt
enter
ret
jle
sub
adc
sub
jno
mov
leave
shll
lea
push
pop
or
mov
inc
xchg
cmp
cli
cmp
sar
push
mov
jg
mov
call
ss
push
push
fucomip
lret
cmp
mov
mov
mov
testl
and
leave
cmpsb
jge
imul
push
adc
test
dec
push
mov
push
scas
xor
xchg
push
or
lea
cmp
inc
cmp
xchg
lcall
out
lahf
jl,pt
dec
mov
out
das
push
mov
icebp
addr16
outsl
in
or
push
xor
or
lock
mov
aad
add
hlt
add
push
daa
pop
out
jbe
inc
out
pop
cmc
push
flds
hlt
mov
daa
push
inc
pop
mov
popa
push
pop
mov
adc
dec
pop
aam
lahf
gs
addr16
testb
loop
and
negb
cmp
mov
mov
cli
lds
jae
push
xor
push
scas
sahf
filds
jmp
outsb
dec
stos
test
nop
imul
adc
pop
inc
mov
stos
lahf
aas
ljmp
mov
pop
xchg
add
fdivrp
arpl
test
or
jb
add
fdivrl
cmp
test
ffreep
pop
hlt
push
pop
stos
stc
out
iret
jp
mov
jae
ja
and
mov
aaa
mov
stos
fsubrp
add
xor
push
es
hlt
jmp
xchg
negl
pop
xor
mov
inc
cmp
adc
loop
iret
lcall
repz
lret
aaa
imul
test
loopne
movsl
cwtl
imul
stos
jo
pusha
popf
xor
icebp
dec
adc
jecxz
or
daa
sbb
pushf
dec
lods
inc
pop
sub
cmp
in
repz
xor
ljmp
movl
push
sub
and
sbb
inc
mov
mov
ss
sbb
dec
jecxz
sbb
xchg
pop
mov
and
add
jns
sub
push
inc
dec
in
int3
sbb
cmp
jae
mov
mov
mov
orb
sub
push
and
xchg
mov
dec
pop
cmp
dec
xor
arpl
out
sbb
ss
leave
push
pop
mov
es
inc
dec
inc
int
inc
inc
dec
cmp
xchg
push
clc
mov
test
or
adc
cmpsb
ret
imul
push
jnp
lahf
jp
jne
sub
jne
inc
idivl
pop
jecxz
or
pop
jl
lret
test
lods
cmp
arpl
testb
mov
cmp
jl
rolb
ja
mov
ja
in
jmp
repz
push
mov
lahf
dec
mov
push
cs
sysexit
sub
enter
jmp
into
mov
std
push
add
sub
cwtl
cwtl
adcl
imul
or
mov
and
xchg
mov
pop
jbe
pop
fwait
gs
pop
xchg
dec
adc
inc
mov
stc
xchg
jg
arpl
xchg
frstor
movb
push
push
jns
mov
mov
pop
pushf
lret
adc
es
imul
pusha
inc
pop
fisubs
dec
mov
dec
bound
data16
repz
pop
xor
cs
sub
sbb
addr16
add
and
dec
into
xchg
xchg
cmp
icebp
popa
and
out
jmp
cld
or
adcb
xchg
push
sbb
and
std
pop
pusha
pop
dec
inc
shll
jb
sub
jge
xchg
pop
test
add
xor
jbe
mov
xchg
xlat
mov
dec
dec
nop
data16
out
mov
or
gs
loope
push
lcall
ffree
xchg
and
enter
negb
mov
cwtl
lods
and
xchg
scas
sub
jecxz
xor
cmp
cmpsl
mov
insb
sbbl
xor
and
xorb
add
into
adc
cmp
rol
jl
popa
xor
adc
pusha
fimull
inc
or
sbb
les
cld
aaa
ss
xchg
stos
and
sub
ja
mov
popf
xchg
out
ret
sahf
pop
xchg
sub
popf
xchg
xchg
ds
sbb
pop
arpl
in
shl
cs
push
xchg
sub
inc
cmp
je
ss
das
xor
add
lods
cmc
lock
push
inc
test
push
jp
sub
lahf
sbb
cmpl
cld
mov
out
cld
mov
sub
aam
mov
test
shlb
mov
gs
sub
inc
lods
cmp
in
pop
leave
out
and
inc
repnz
xchg
ljmp
outsb
lds
xlat
pop
fsubr
sarb
jb
aam
and
or
inc
data16
jg
mov
mov
insl
mov
repz
movsl
xor
std
mov
sbb
inc
jmp
mov
jmp
fsubrp
test
and
dec
cmpb
mov
pop
inc
xor
cld
fwait
and
mov
mov
or
call
cmp
adc
cs
push
int
loope
add
fnsave
cld
fistpl
inc
dec
pop
sar
adc
addr16
mov
mov
in
and
push
fdiv
inc
movsb
in
fsubr
and
xor
jp
stos
inc
aad
gs
push
and
out
hlt
xchg
and
mov
fimull
mov
int3
and
add
popa
or
je
sub
je
out
xchg
inc
not
mov
cmp
mov
fsubs
mov
in
jb,pn
jb
test
cmpb
lods
int3
pop
xor
cld
xchg
mov
xor
ss
loop
sbb
pop
cmpsb
cmp
adc
sub
fs
in
lock
pop
xchg
outsb
xor
out
insb
mov
xchg
mov
andb
shl
mov
mov
push
arpl
cmp
push
outsb
xchg
movsl
sbb
push
lea
popa
push
mov
mov
mov
decb
xchg
les
xor
push
mov
push
push
jo
sti
sbb
popf
subl
xlat
mov
ret
in
in
enter
pop
cmp
and
pop
jg
sub
mov
or
xchg
lahf
clc
sub
jle
imull
jge
jl
mov
out
sarl
sbb
popa
call
xchg
fnsave
cmp
cmp
jns
jl
ljmp
push
xor
addr16
int3
movsl
packsswb
and
loop
icebp
addr16
ljmp
jno
sbb
mov
inc
dec
je
pop
mov
pop
jno
ss
add
hlt
xor
orps
inc
inc
jle
dec
int3
pusha
das
jno
sub
jle
rcll
mov
xchg
cmp
sub
mov
decl
cmpsl
inc
add
incl
pop
out
addb
aam
jmp
or
inc
psubsb
in
xchg
and
pop
mov
and
mov
enter
adc
sti
jne
sub
sti
or
xchg
std
or
dec
in
out
mov
daa
push
or
pushf
adc
cwtl
xor
rcl
sbb
fnstenv
ljmp
fistpll
inc
ret
dec
es
dec
sahf
pop
negl
pop
cld
das
xor
or
sti
mul
fstpt
sbb
push
lea
cmp
aam
orl
pop
mov
out
sbb
jg
fstp
adc
and
js
cmc
xchg
cwtl
adc
aad
mov
or
push
lret
add
addr16
jle
pop
mov
mov
pop
roll
je
aas
mov
xchg
push
push
inc
sub
test
inc
and
ja
fstps
jecxz
shrl
cmpsb
xor
jno
inc
dec
nop
jg
jb
std
jge
xorl
and
jp
loope
push
push
mov
pop
out
orb
pusha
cmp
js
loopne
cltd
cmp
adc
roll
sub
test
mov
push
sti
dec
pop
int3
gs
add
fnstenv
loopne
addb
pop
sarb
inc
movsb
or
pop
cwtl
xor
add
jnp
ficomps
inc
in
aad
push
add
dec
pop
call
repnz
sahf
out
mov
xchg
sbb
mov
add
or
shll
cltd
stos
test
cmc
in
dec
fcomip
into
adc
push
in
push
stos
adc
mov
in
out
pop
sub
inc
mov
pop
add
bound
fisubrl
mov
mov
jnp
idivb
mov
jp
jno
and
cs
xor
movsb
sbb
lahf
inc
inc
lods
lods
sbb
imul
sbb
dec
loope
notb
and
bound
sub
js
sti
sbb
xor
sub
test
pop
push
pop
mov
xor
cmp
sub
and
jae
fldl2e
insl
push
imul
testb
xchg
je
sub
dec
mov
xchg
into
xchg
mov
sub
cmp
data16
out
jno
loop
pop
jns
cmc
xchg
jmp
lcall
cmc
rcr
push
out
mov
dec
push
push
mov
sbb
dec
ret
test
mov
sbb
mov
ret
lret
arpl
hlt
add
aaa
call
mov
cmpsb
sbb
mov
inc
leave
jno
outsb
inc
xchg
mov
mov
pop
dec
xchg
stc
inc
cltd
outsl
shl
jl
push
jg
cmp
jg
jg
push
xor
add
jae
into
jo
dec
out
lcall
in
call
pop
fadd
inc
sub
mov
mov
push
in
push
push
jmp
lea
push
mov
or
mov
ja
int
add
sbb
in
xchg
push
or
data16
imul
call
ja
or
test
lds
add
xchg
jo
aas
mov
mov
push
mov
out
sbb
xor
outsb
mov
jo
rcrb
cmc
xlat
rep
and
int
pushf
divl
iret
ficompl
or
cwtl
sub
add
ret
stc
daa
test
and
xchg
ja
lret
sbb
xor
aad
jl
xor
jo
stos
push
decb
lods
loop
jae
push
aam
mov
mov
pop
xor
inc
insb
xchg
jle
lret
adc
add
xor
add
mov
pop
xchg
neg
test
lcall
jae
mov
es
fucomip
into
or
daa
andl
test
dec
xor
stos
ss
push
rorl
cmpsl
in
push
mov
or
jb
fwait
mov
push
in
mov
call
xor
enter
test
loopne
mov
adc
jno
mov
sbb
or
pop
sbb
ret
jmp
clc
inc
aam
sbb
or
push
mov
xchg
xchg
push
xchg
or
push
jb
pop
cmp
mov
lods
add
in
lock
and
mulw
and
into
dec
sub
popl
cltd
sarl
push
pop
mov
inc
cld
popa
cmc
mov
push
mov
jecxz
out
mov
sub
jns
movsl
arpl
cmp
cmp
mov
repz
and
imul
push
jno
push
das
daa
pop
cmp
sti
pushf
push
nop
hlt
jne
mov
loope
xor
fsts
pop
addr16
adc
mov
cmp
jge
mov
ljmp
out
out
xchg
or
adc
out
or
ret
cmp
cmp
mov
xchg
insl
pop
call
mov
arpl
sub
dec
icebp
lcall
es
sub
shl
adcb
xor
mov
push
call
adc
out
std
loop
xchg
jb
pop
cmp
mov
adc
push
bound
mov
jnp
lds
xor
data16
lahf
lods
aas
lods
jmp
cli
sub
push
aas
cmpsb
push
cmp
loop
jbe
outsl
xor
pop
fmul
mulb
mov
outsl
cmp
jecxz
loope
xchg
ljmp
inc
or
aad
stos
test
mov
in
mov
bound
shll
lds
mov
mov
cs
fst
fs
test
cs
push
jns
inc
outsl
scas
jb
sub
cmp
xchg
cmp
push
shl
ficoml
mov
pop
sbb
pop
or
inc
js
mov
xchg
aas
sub
dec
cs
jmp
test
rcrb
sbb
lock
jmp
dec
mov
icebp
cli
loop
add
in
pop
std
loop
aas
scas
cmpsb
aam
arpl
add
lea
xchg
mov
add
sbb
push
sub
mov
mov
add
xlat
mov
pop
adc
pop
push
repz
inc
mov
mov
bound
call
lea
test
test
pushf
fcompl
aaa
mov
push
inc
pop
pop
cmp
out
sub
fsubrs
push
jne
sbb
push
push
icebp
sub
jnp
mov
fcompp
inc
push
lret
nop
inc
push
ret
es
mov
mov
insl
or
sub
sti
cmp
jne
rcrb
andb
mov
imul
out
add
jge
push
add
mov
inc
push
leave
jecxz
cmpsl
dec
fisttps
cmp
les
mov
sbb
bound
sbbl
gs
les
sbb
fisttps
lea
adc
and
sub
cmp
xchg
add
cltd
ret
mov
pop
ja
icebp
rorl
stos
out
mov
int
and
mov
inc
push
jle
movsl
mov
mov
sarb
out
rcl
adc
cmc
pop
add
xor
sub
mov
pop
cmp
pop
and
in
sbb
dec
inc
hlt
sbb
lock
cmp
or
scas
lods
mov
pop
cmpb
cltd
movsb
add
jmp
shll
jecxz
cmp
hlt
xchg
incl
sbb
pop
jne
mov
mov
loop
cmp
cs
repnz
decl
nop
push
or
and
orl
xchg
mov
jecxz
xor
sbb
fstpl
dec
jmp
xchg
cmp
xlat
cli
leave
cmpsl
dec
xchg
add
dec
stos
insl
xor
mov
and
sbb
sbb
aad
ss
jle
pop
movsb
adc
mov
mov
test
jnp
add
hlt
or
ss
xor
push
and
sub
mov
arpl
adc
mov
mov
movsl
js
jne
scas
jns
sub
mov
out
pop
dec
push
je
dec
pop
push
sbb
movsb
dec
dec
lret
or
xchg
mov
xchg
lea
fnstcw
mov
cli
out
sub
pop
inc
js
mov
xchg
jecxz
popf
and
and
sub
scas
bound
sub
daa
mov
jg
xor
dec
sbb
xorb
push
or
lea
out
add
rol
lock
sbb
jb
enter
cmp
test
dec
sub
cld
pop
push
add
and
xor
shrb
cwtl
xchg
ror
popa
jmp
ficomps
imul
inc
push
jmp
sahf
adc
mov
or
add
fsub
xchg
dec
cmp
xchg
stos
jg
adc
jmp
lret
mov
in
jmp
push
test
push
xchg
sub
push
push
add
xor
mov
cli
test
cmp
pop
je
and
popf
ret
mov
pushf
inc
jnp
mov
cltd
or
repnz
jmp
lods
cltd
ret
cmp
enter
andl
add
sbb
popa
fistl
loope
in
jno
and
aad
shlb
cmp
pushf
cmp
scas
mov
adc
addb
push
dec
fisubs
dec
mov
ret
dec
pushf
sub
push
jp
sbb
test
xchg
xor
cli
xchg
or
adc
js
lret
lds
and
mov
call
outsb
cs
xor
mov
or
loope
cmp
call
loop
cmp
push
xlat
mov
or
movsl
mov
cmc
imul
das
fs
cs
pop
cmpsl
test
sbb
adc
ret
leave
shll
cs
idivb
add
pop
leave
leave
dec
xor
shl
and
mov
in
jmp
xor
pop
cmc
dec
lahf
push
sbb
call
into
iret
xor
xorb
jb
jne
in
ret
test
sbb
sub
dec
jp
data16
lea
xor
dec
icebp
jo
mov
iret
lods
mov
fimuls
loope
aas
adc
dec
in
cmpsb
or
sub
mov
cmpsl
scas
add
add
fbld
fmuls
addr16
es
mov
push
aam
inc
mov
push
xchg
add
dec
jl
xchg
dec
pop
into
sbb
xor
out
add
mov
sub
xchg
sub
or
scas
shrl
cmp
mov
sbb
testb
popa
clc
dec
and
lret
lea
subl
pop
movsb
xlat
mov
push
ja
xchg
fldcw
push
pusha
cmp
xchg
bound
aas
jno
jno
popa
mov
fimuls
xchg
push
xorl
sbbb
inc
adc
or
cmp
mov
lods
jge
lds
mull
sbb
xor
add
fdiv
loope
arpl
sub
subl
sbbb
nop
cmp
cmc
or
mov
sti
push
orl
pop
dec
sub
xchg
xor
adc
xlat
cmpsb
dec
push
mov
xchg
or
imul
inc
and
mov
add
shl
ja
movd
lock
cmp
lret
jno
es
or
divl
rcl
popa
leave
call
out
mov
mov
and
movsl
lods
dec
xchg
ud2
mov
test
cmpsl
fmul
inc
mov
fidivrs
orb
adc
es
adc
inc
pop
shl
ljmp
adc
dec
imul
jle
jle
xorl
xchg
pop
or
push
lods
testl
stos
xchg
dec
xor
in
fdivrs
cmp
mov
inc
je
sbb
mov
mov
xchg
rcrl
int3
sahf
mov
pop
imul
jmp
dec
xor
mov
movsl
imul
jno
mov
mov
xor
mov
ss
shlb
out
mov
andl
adc
jg
std
sbb
out
inc
jge
shrl
in
leave
cmpsl
dec
and
sbb
xor
and
cmpl
je
adc
mov
inc
ljmp
jb
ja
add
jge
repz
sahf
sahf
cmp
ja
js
into
mov
pop
or
fstl
mov
mov
pushf
iret
inc
adc
push
xlat
ret
scas
cwtl
mov
gs
ror
sbbl
mov
pop
test
sbb
xchg
cwtl
ret
addl
or
add
mov
es
stos
ja
icebp
sbb
adc
xchg
or
lahf
inc
orl
popa
ret
and
arpl
sahf
ret
xchg
arpl
stc
xlat
rclb
xchg
pop
cwtl
stos
movb
xchg
mov
add
sarl
mov
aas
cmpsb
jnp
jne
ds
shrl
sbb
and
out
dec
inc
ret
mov
lods
lret
push
inc
pop
shrb
orl
pop
dec
mov
test
mov
lods
xchg
popa
stos
rol
or
jns
jmp
cmpsb
jne
mov
dec
les
aad
lret
inc
rcrl
ficoml
xor
ret
sti
mov
jecxz
add
inc
pop
fincstp
fwait
sub
add
dec
test
fisttpll
mov
jns
test
imul
sbb
and
pushl
xchg
fstpl
andb
pushf
inc
cmp
pop
mov
jl
sub
push
js
or
mov
inc
inc
sub
sar
mov
mov
jo
sahf
cmp
sarl
sbb
jp
popf
jmp
mov
sti
out
lock
sbb
rcrl
aas
inc
xchg
xor
jmp
adc
icebp
int
cmp
js
jp
enter
dec
and
xor
cmp
orb
cmp
xorb
push
xor
or
push
scas
mov
stc
lods
ret
icebp
fists
or
inc
dec
cmc
cmc
and
sub
dec
popa
push
sub
xchg
scas
andb
jp
mov
pop
mov
and
cmp
or
fwait
dec
in
jae
push
pop
lods
cmp
push
divl
gs
push
xor
xchg
cmpsl
inc
add
cltd
sti
fs
ret
scas
mov
dec
scas
pop
add
jae,pn
dec
insl
jle
imul
mov
jno
pop
add
cmpl
pop
inc
test
mov
sbbl
shlb
daa
ja
ss
mov
fwait
cltd
sbb
dec
and
adc
dec
mov
mov
in
jne
adc
out
ja
cs
iret
orb
pop
xor
xor
mov
pop
popa
cmc
dec
mov
push
xchg
out
sub
jno
push
inc
add
mov
les
cmp
lods
je
push
loop
dec
mov
inc
cmpsb
daa
lret
icebp
mov
cwtl
xor
out
mov
pop
enter
test
xchg
shll
cmpsl
mov
fwait
sar
lock
aad
mov
insb
xor
xchg
pop
inc
adc
add
lret
lcall
push
lods
inc
add
fsts
stc
dec
xchg
lods
pop
pop
push
mov
fdivl
sbb
and
mov
lcall
not
repz
out
ror
jge
pop
mov
in
or
loopne
and
stos
aam
je
pop
repz
iret
loope
clc
inc
mov
aad
xor
test
aas
popa
js
sub
xor
xchg
movsb
push
scas
sub
sub
jb
xchg
xchg
dec
push
fidivs
in
les
cmp
sarb
aas
pushf
mov
jecxz
and
shlb
iret
cmpsb
icebp
cld
pop
jle
xor
jnp
inc
bswap
icebp
ljmp
mov
lret
push
imul
lret
into
mov
jo
jae
jne
jge
arpl
xchg
out
inc
cmp
or
mov
ss
les
pop
sub
push
fnstenv
ret
lods
dec
fistpll
xchg
adc
loop
inc
and
iret
dec
fnstsw
jl
and
insl
push
jnp
xor
in
push
movsl
inc
dec
xor
les
ret
lcall
pop
and
push
sub
inc
fsubrp
cli
xchg
sbb
popa
stos
inc
test
cli
int
aaa
cs
xchg
adc
pop
push
sbbl
scas
mov
mov
dec
test
fmul
fs
js
adc
dec
push
jmp
adc
mov
lock
in
dec
inc
mov
xor
loope
sbb
jno
or
jp
test
adc
add
scas
or
cmc
fiadds
xor
out
jb
jecxz
sbb
push
push
inc
jmp
and
fadd
push
je
xor
pop
leave
das
sub
cwtl
sub
jge
xor
or
cmpsl
xor
pusha
xchg
dec
cmp
dec
push
and
adc
dec
or
xor
bswap
clc
sub
jge
daa
dec
xor
sbb
cltd
xor
shl
stc
pop
cmpsb
sbb
jnp
int
push
push
push
mov
ret
mov
sub
xchg
mov
frstor
pop
xlat
imul
aad
les
xchg
mov
mov
adc
mov
aam
xchg
out
sub
xor
fdiv
and
sbb
xlat
xor
aad
cmp
xlat
clc
in
leave
adc
dec
rcrb
pusha
in
int3
mov
xchg
jne
hlt
test
inc
daa
jne
test
pop
lss
inc
pop
lret
ljmp
or
test
mov
cmpsb
inc
sar
jae
dec
xorb
aas
and
ss
push
add
adc
dec
mov
push
pop
mov
pop
jno
push
dec
adc
push
loope
adc
and
scas
nop
push
cwtl
scas
pop
sub
push
fistps
in
pop
cmp
mov
ss
test
fsts
testl
cmpsl
inc
or
pop
ds
jo
or
sbb
loopne
lahf
lcall
jecxz
xor
jmp
subl
scas
or
dec
sub
xchg
jbe
es
push
stos
push
aaa
insb
sbb
adc
jo
cli
mov
dec
cmp
jae
fbstp
push
sub
jge
roll
cld
mov
mov
jb
xor
mov
lods
add
dec
cmpsl
jmp
sahf
cmp
cs
sar
aad
jb
adc
xchg
bound
je
dec
mov
pop
test
inc
scas
and
mov
fiaddl
fabs
dec
dec
push
mov
add
ret
fs
lea
sub
shll
mov
into
iret
pop
movb
xchg
imul
pop
in
dec
add
mov
push
xchg
fists
jae
sub
arpl
mov
leave
call
into
sbb
sahf
xchg
scas
or
stc
jb
jmp
dec
repnz
pop
shlb
movsl
mov
dec
test
xchg
mov
mov
popf
pop
andl
sbb
sub
mov
mov
mov
jge
mov
or
pop
ljmp
lcall
out
out
sub
mov
xor
subb
mov
arpl
mov
xchg
int3
mov
movb
pushf
mov
jg
mov
lock
je
fwait
inc
push
mov
inc
jb
push
js
or
ljmp
outsl
mov
addr16
ret
subb
fs
loope
sbb
icebp
mov
cmpsl
mov
push
das
dec
add
mov
inc
add
or
inc
test
sbb
mov
out
ljmp
insb
scas
dec
dec
inc
push
xchg
xor
loope
cwtl
adc
aad
js
movsb
sbb
fisubl
mov
nop
mov
syscall
push
push
les
fcmove
xchg
sbb
out
stos
jo
cwtl
das
pop
mov
cmp
sub
popa
xchg
hlt
mov
inc
es
adc
add
mov
les
pushf
icebp
push
mov
dec
loop
je
sub
out
stos
xchg
and
aad
jg
clc
jno
nop
rorl
in
les
incl
stc
mov
dec
in
jecxz
ret
lret
xor
cmpsl
xchg
add
call
adc
in
mov
pop
ret
mov
fistpl
push
test
mov
sub
sub
xlat
shrb
or
clc
inc
adc
aam
jne
sahf
push
push
loopne
xor
cmpsb
push
decb
jl
iret
xchg
push
xor
lds
sub
lret
mov
addr16
add
mov
pop
out
dec
xor
not
pop
sbb
push
mov
lods
cmp
or
mov
daa
mov
ss
mov
push
jge
or
pop
mov
stos
in
xor
sahf
sahf
mov
xchg
mov
in
xchg
xor
aaa
jb
pop
sbb
and
shlb
test
mov
xchg
jp
lods
adc
std
fwait
sub
jecxz
lods
jecxz
enter
mov
xchg
negl
repnz
xchg
mov
cmc
in
fcoml
xchg
xor
decb
sbb
xchg
mov
aaa
xor
mov
pop
adc
sbb
add
push
fs
jb
cmpb
aaa
sub
test
jno
lock
pop
outsl
push
and
xchg
cmc
adc
insl
test
cmpsl
lret
xlat
pop
addr16
sbb
and
push
imulb
sub
jmp
pop
std
xchg
xor
into
jmp
add
add
push
mov
lea
xor
fidivrs
aas
sbb
push
pop
int
ds
xor
lahf
push
lods
arpl
aaa
or
mov
xchg
push
gs
and
and
outsl
insb
xchg
in
mov
bound
fldenv
scas
jnp
inc
or
fldl
cmp
test
pop
and
mov
ret
push
dec
clc
cltd
adc
lea
jmp
cvtps2pd
jno
in
push
out
les
fidivl
lcall
fs
push
mov
cmp
xchg
dec
leave
packssdw
pop
jp
pop
js
iret
lret
xchg
mov
or
out
mov
mov
scas
pop
cmp
out
data16
outsl
lcall
pop
fs
pop
sbb
ret
sub
add
or
aad
ffree
stos
pop
aaa
mov
mov
mov
add
xchg
fbstp
imul
in
xchg
inc
or
jno
jg
mov
loope
inc
dec
clc
adc
xchg
mov
dec
inc
xchg
xchg
dec
push
add
sub
ss
xchg
push
jmp
imul
jg
test
shrb
lea
aas
mov
inc
pop
cmc
mov
xlat
movsb
inc
push
popf
sub
cmpl
leave
sahf
pop
mov
cmp
call
shlb
cld
xlat
adc
test
leave
push
push
xor
sbb
fcmovne
mov
rcl
fdivl
jb
movsl
cmp
inc
jbe
lcall
mov
test
fdivp
inc
sub
fnstcw
or
test
ss
pop
mov
or
push
aas
decb
xchg
mov
in
sahf
add
inc
sub
insb
das
inc
sbb
xchg
mov
mov
cwtl
cmp
insl
and
stos
icebp
sarb
dec
cmpsb
arpl
or
loope
ret
or
cmc
push
gs
lret
push
subb
cmp
dec
sub
das
xchg
outsl
lahf
insl
jne
mov
xor
retw
sbb
repz
sub
mov
sub
push
sbb
add
fs
js
lods
push
mov
or
sahf
mov
inc
ret
imul
sbb
inc
fildll
cmp
pop
cmpsb
pop
inc
xlat
push
push
mov
pop
inc
or
sar
bound
add
cwtl
pop
inc
nop
dec
ds
imul
jmp
xor
nop
cwtl
mov
mov
and
stos
test
movsb
mov
pushl
ds
fldl
push
cs
and
int3
jecxz
test
cmp
pop
loope
fidivrs
outsb
repz
pop
loop
and
xchg
rcll
xor
es
test
notb
xchg
cli
mov
cmpsb
mov
or
aas
xchg
or
jle
mov
mov
add
mov
fdivrl
addr16
testb
mov
sub
mov
xchg
mov
jmp
mov
adc
sub
das
bnd
pop
sub
jmp
rolb
lock
popf
mov
xor
sub
mov
mov
inc
inc
pop
stc
popa
mov
push
jp
mov
pop
jne
ljmp
xchg
or
mov
into
fdivrs
jmp
or
aaa
mov
shlb
dec
mov
sub
mov
xor
mov
cmp
push
into
mov
push
repnz
aas
jne
push
mov
pop
jno
mov
mov
jp
jae
es
int3
jne
imul
add
mov
into
insb
and
sub
jae
mov
aaa
add
inc
sbb
xor
dec
bound
or
jbe
push
push
pusha
xor
xchg
ljmp
adc
inc
or
push
add
leave
arpl
shrb
xchg
xor
sbb
mov
fnstsw
add
lds
pop
adc
push
out
lret
fisubs
psubb
xlat
mov
imul
test
jg
cli
test
sahf
int
add
aad
insb
adc
jne
dec
sbb
xchg
ljmp
ds
push
imul
out
jb
ds
xorb
jbe
sbb
mov
push
inc
mov
inc
or
std
fidivrs
rclb
loope
push
inc
in
pop
and
xlat
int3
sub
or
addr16
aas
jge
xor
jmp
add
jne
mov
push
sbb
lahf
jp
movsl
xor
add
push
xchg
mov
jo
xchg
xchg
jae
or
inc
fsubl
stc
dec
push
push
xor
jns
add
xor
int3
fs
sub
mov
or
inc
outsb
mov
arpl
repnz
mov
ret
pushl
and
xor
or
imul
data16
clc
out
scas
pop
sub
sbb
inc
data16
jo
addl
jo
add
test
sar
rcrl
add
sub
inc
cmp
jb
or
pinsrw
add
pop
xchg
jno
cltd
jnp
xor
repnz
adc
int3
xchg
pop
addr16
push
movsb
cmp
jbe
lods
mov
cltd
jmp
lret
sub
jb
mov
sbb
add
mov
lcall
dec
rclb
int3
cltd
or
addr16
lods
push
ret
scas
mov
leave
cmpsb
ficomps
ljmp
jmp
push
subb
jmp
or
mov
or
sub
mov
sub
mov
test
mov
xchg
imul
out
mov
pop
push
fsub
fldcw
xchg
mov
jo
ja
xor
add
popf
push
ss
mov
lds
dec
je
xor
mov
xor
dec
or
push
addb
stos
pop
xor
mov
inc
cmp
dec
mov
pop
negl
inc
cmp
mov
add
jg
cmp
fcompl
in
mov
adc
jle
andb
pop
mov
mov
cmpl
mov
mov
and
sub
add
jg
sbb
add
pusha
push
lret
je
outsb
pop
xchg
sbbb
scas
sub
stos
jno
pop
testb
icebp
mov
loop
int3
cli
or
test
push
xor
js
rclb
sub
clc
sub
push
xor
jg
addb
pop
adc
sub
push
popf
lods
dec
add
fwait
fwait
xor
rcl
setbe
out
imul
mov
js
jo
jnp
stos
lds
inc
cmp
cmp
imul
mov
adc
dec
lahf
addr16
outsl
outsb
ficompl
loope
lcall
ljmp
mov
jns
repz
add
or
add
xchg
dec
outsb
mov
lods
and
cmpsb
mov
sbb
xchg
or
jmp
mov
xchg
pop
lret
jo
es
jb
fwait
dec
mov
and
pop
ja
jge
fsubrs
sti
mov
cmpsl
sbb
out
aas
test
push
mov
cs
jae
ja
pop
inc
insl
ds
lcall
fdivs
jl
mov
jns
cmpsb
sahf
dec
mov
cmpsl
dec
sub
ljmp
cmp
sub
jecxz
jbe
lret
cmc
mov
daa
lcall
and
mov
mov
lea
push
dec
add
nop
mov
imul
mov
sbb
adcl
dec
pop
sub
cmpsb
add
push
je
add
repnz
pop
scas
xchg
loopne
test
ds
cmp
outsl
mov
ljmp
xor
add
pop
andb
push
add
fwait
rorb
cmp
pop
repz
push
mov
rol
jge
stos
or
xchg
outsb
stos
push
add
pop
fidivs
cmp
test
mov
arpl
bound
test
jnp
jae
aas
inc
fbld
mov
adc
out
mov
xchg
dec
mov
mov
js
stos
push
pushf
xor
mov
test
mov
pushf
push
and
cmp
in
mov
jge
jmp
aam
adcl
xchg
inc
add
pop
ljmp
aam
std
imul
cli
xchg
mov
out
inc
pop
fmull
mov
pop
cmp
aad
arpl
pop
xor
es
fs
es
mov
call
jns
jge
push
pop
xlat
and
push
or
fcom
stos
dec
xchg
repnz
outsl
jmp
hlt
mov
clc
stos
pop
adc
insb
jnp
sbb
aam
sub
sbb
add
mov
jg
repnz
dec
ja
dec
sub
cltd
sub
mov
sbb
pop
dec
add
add
mov
add
jmp
pop
sub
cmp
test
pop
pushf
cs
pop
xchg
std
out
arpl
hlt
mov
mov
push
or
cld
ret
outsl
pop
arpl
aaa
fsubp
loopne
test
nop
leave
pop
and
jae
iret
dec
sbb
fwait
notb
loopne
and
xor
enter
xor
pop
sahf
mov
stc
xchg
push
push
pop
add
mov
jecxz
jno
pop
push
xlat
mov
dec
and
push
pop
pop
dec
add
cmpsw
push
leave
dec
std
inc
sbb
in
aam
adc
daa
pop
mov
push
adc
test
xor
pop
jle
add
adc
add
cmp
bound
xor
movsb
cmp
in
inc
data16
out
ljmp
mov
mov
dec
les
fidivrs
or
loopne
mov
sub
aaa
xchg
bound
scas
pop
pop
and
cld
fstps
dec
ss
std
dec
iret
addr16
sbb
nop
shll
xor
dec
in
jp
jmp
popf
jo
pop
jecxz
test
addr16
in
es
std
les
mov
in
loop
sbb
push
cmp
adc
sub
shl
xchg
dec
cmp
les
mov
xchg
cmc
dec
mov
cmpl
jg
lcall
sbb
xor
xor
push
cs
adc
push
inc
and
and
out
mov
mov
jns
mov
jne
repnz
sub
pop
xchg
lock
fistps
leave
fs
pop
jnp
shrl
js
cs
pop
jecxz
mov
xor
add
into
push
push
or
jns
cmp
pop
sub
pop
aad
push
cmp
mov
rcrl
xor
sahf
adc
js
inc
or
or
mov
rep
je
and
rclb
std
int
inc
lock
push
lock
mov
dec
ret
jecxz
outsb
leave
jg
and
mov
or
and
in
cwtl
jp
or
sub
mov
mov
int
mov
mov
pop
jmp
mov
and
inc
xor
jecxz
in
bound
pop
scas
out
xchg
bound
cmp
sbb
sub
enter
rcr
inc
mull
mov
mov
cs
cs
pushf
loopne
jnp
std
lock
fldenv
test
jo
sub
xor
lea
loop
sub
imull
cmpsb
mov
dec
aam
dec
test
imul
cmp
adc
cmp
push
sbbb
pop
jmp
fldcw
divb
into
imul
pop
sbb
or
cltd
insb
jne
sub
push
fisubs
xor
pushl
fs
shl
aad
cmpb
xor
data16
push
outsb
add
dec
jb
cmc
sbb
jno
ss
aad
add
cmpsb
mov
xchg
adc
stos
adc
dec
test
pop
addr16
mov
cli
mov
xchg
test
and
sarb
mov
sbb
pop
add
scas
pop
push
sbb
addl
add
bound
frstor
cmp
nop
scas
add
je
mov
rclb
xchg
outsl
aam
rcll
mov
sub
jl
mov
push
xchg
call
mov
jns
cmpl
mov
sub
loope
xchg
xor
xchg
in
push
lcall
adc
inc
rorb
call
pop
push
cmp
outsb
popf
push
les
out
and
gs
int
mov
add
test
push
cmc
pop
pop
data16
dec
imul
stc
jbe
sarl
pop
inc
lea
mov
std
imul
dec
sbb
cmpsb
jge
pop
std
and
jnp
out
mov
nop
cltd
test
and
jo
mov
jbe
adcl
fldenv
movsb
pop
je
pop
fidivrl
dec
aas
push
lahf
cmp
mov
mov
lret
sbb
pop
nop
es
jmp
shll
push
lds
or
shll
xor
arpl
mov
pop
dec
clc
mov
mov
mov
inc
inc
sarb
cli
nop
leave
test
xchg
mov
scas
rcll
push
test
xchg
cmp
xchg
arpl
sbb
cs
or
shl
cld
pop
mov
sub
mov
jae
pop
dec
push
movsb
xchg
pop
std
dec
mov
and
sub
inc
dec
push
add
insl
jae
outsb
adc
movsb
mov
aaa
cmp
fmull
movsb
mov
inc
or
mov
sub
shrl
stc
cmc
fwait
jmp
xchg
movsl
bound
sbb
lahf
and
mov
mov
push
inc
dec
insl
movsb
out
inc
inc
cmc
inc
mov
inc
push
add
xchg
mov
out
leave
data16
lret
xor
bound
push
mov
rcr
jle
mov
lds
addl
mov
or
out
imul
dec
cmpsb
into
add
mov
shrl
mov
fistps
and
mov
add
dec
aad
dec
xchg
jl
pop
sbb
mov
pop
stos
jg
pushf
cmpsb
or
std
movl
fidivrs
rcrl
mov
js
xchg
in
push
sarw
jo
push
or
in
xchg
push
jno
sub
ret
xor
cmp
mov
or
inc
in
mov
js
add
ds
or
scas
xor
mov
cs
into
sbb
push
mov
adc
test
mov
pop
mov
stc
sbbl
cmpsb
fmul
mov
mov
sbb
fstps
hlt
out
mov
jmp
and
leave
adc
push
cmpsl
mov
and
shll
add
push
roll
ja
cmp
or
and
fdivr
adc
popf
cli
movsb
pushf
jno
jle
pop
daa
or
fwait
popa
sbb
pop
stc
hlt
pop
nop
int3
sub
add
movsl
push
in
pop
or
pop
repnz
pop
pop
adc
fstl
es
cltd
inc
xchg
cmpsb
dec
dec
nop
mov
mov
fstps
jns
int3
pop
xchg
jmp
clc
or
sahf
xor
add
or
add
sub
push
repz
xor
xlat
mov
popa
mov
sub
cmpsb
mov
nop
and
popf
dec
cli
mull
xlat
mov
ljmp
nop
je
sub
les
notl
dec
xchg
jbe
dec
sub
ljmp
andl
test
jo
pop
test
cs
push
scas
lds
stos
cmp
inc
jecxz
repz
mov
and
push
sbb
addl
sbb
cmc
ljmp
aam
push
or
jmp
jns
call
subb
xchg
aad
mov
mov
stc
adcb
mov
mov
push
inc
sbb
xor
jle
stos
rcrb
ss
lret
aas
aad
jp
adc
pop
xlat
mov
mov
pop
xchg
sti
xor
inc
sbb
mov
std
pushf
bound
lret
outsb
test
and
and
hlt
xor
mov
adc
adc
pop
js
ret
loop
and
mov
insb
adc
cmp
test
push
lret
fs
pop
popf
aam
sbb
sbb
loopne
mov
movsl
iret
bound
and
lds
rcrb
sbb
push
push
popa
sub
repz
ret
in
cmp
cmp
in
setns
jnp
adc
scas
add
fucomp
out
out
iret
pop
stos
daa
aam
push
stos
insl
dec
and
jae
in
or
psubusw
mov
pushf
int3
jb
push
lods
icebp
stos
sbb
cmp
inc
es
in
mov
iret
fdivs
ja
push
sbb
test
out
sbb
xchg
mov
cmpsl
daa
inc
fists
xchg
sbb
sub
cmp
gs
gs
inc
sbb
mov
std
jp
add
add
clc
jecxz
cld
mov
cmp
or
dec
je
jb
stos
dec
rorb
add
dec
leave
mov
sbb
xchg
testl
aam
imul
popf
fildll
adc
out
mov
sahf
outsb
outsb
xor
inc
pop
in
int
insl
sarb
mov
aam
and
mov
in
xchg
xchg
mov
push
jmp
lock
fisubrs
mov
cltd
adc
dec
dec
cmc
dec
rcr
shl
pop
mulb
gs
or
js
nop
lock
testb
aad
in
out
xchg
sarl
jecxz
cmpsb
and
loope
jecxz
jmp
inc
xor
loope
rcrl
incl
imul
and
ja
push
xchg
and
mov
dec
mov
and
roll
cwtl
fiadds
mov
mov
cmp
pop
inc
push
adc
lahf
sub
dec
inc
mov
mov
inc
incb
dec
sbb
aaa
fimull
fwait
xchg
jmp
lods
and
inc
in
add
dec
and
pop
mov
jne
adc
lret
test
mov
rep
pop
cmpsl
jge
testl
pop
or
pop
cs
sbb
dec
mov
mov
dec
mov
test
roll
jnp
mov
add
or
popa
fimull
cmp
inc
and
jb
cmp
and
pop
aam
sub
pusha
xor
fs
es
insl
inc
or
fsubrs
je
push
jns
mov
dec
loop
les
stos
push
jg
xor
call
xor
aad
out
mov
aas
daa
pslld
mov
and
lfs
je
in
gs
sub
inc
mov
and
jp
mov
shlb
es
pushf
jg
loop
push
xchg
add
adc
imulb
imull
add
aaa
outsb
push
mov
jp
into
gs
or
fsubl
pop
insl
daa
in
sub
inc
xchg
andb
in
xchg
cmc
sub
subb
and
push
add
jp
negl
mov
pop
lcall
fs
mov
push
cwtl
xor
scas
popf
cmp
stc
lock
aaa
imul
ja
pop
pop
subb
insb
cmp
jo
scas
dec
jbe
stc
into
arpl
mov
pop
add
mov
leave
lret
cld
xchg
add
xchg
les
xor
add
add
pushf
bound
dec
jp
sti
jns
int
cmp
arpl
movsb
std
jne
pop
or
outsl
and
rep
nop
sub
rolb
outsb
push
inc
fwait
cli
sti
add
and
jbe
out
jb
pusha
or
adc
lods
out
int
fidivrs
leave
mov
fwait
dec
or
out
or
inc
adc
jbe,pn
in
shlb
xor
and
inc
add
cmpsl
inc
fldt
mov
cwtl
push
xchg
out
repnz
mov
adcb
or
das
add
std
loope
out
cmpb
lods
mov
ret
int
arpl
or
aam
sub
dec
das
out
test
int3
mov
jmp
sbbl
shll
dec
push
push
lods
cmp
mov
pushf
in
xor
sub
mov
loope
out
test
mov
mov
push
mov
inc
std
push
push
fst
lods
std
mov
inc
push
mov
pop
movsl
in
inc
jnp
xor
pop
fsub
mov
jbe
cmpsb
call
mov
das
mov
das
inc
xor
pop
jp
shll
cmp
and
mov
sbb
push
mov
push
shll
mov
stos
jne
adc
pop
mov
imul
leave
mov
gs
xchg
mov
inc
in
mov
or
incb
lds
mov
jle
adc
out
aaa
fcmovne
pslld
mov
sub
aad
ret
imul
jge
test
cli
jae
in
sbb
fnstcw
fdivrp
hlt
push
aaa
cli
cs
ret
mov
imul
mov
into
hlt
leave
repnz
adcb
mov
jl
adc
fdivr
aam
or
cmp
xchg
add
push
xor
mov
pop
insb
cli
in
mov
rol
push
call
sbbb
push
xor
mov
lcall
cs
movsb
jbe
push
push
fstps
cmp
fs
mov
sbb
or
add
mov
mov
xchg
cmp
add
add
inc
xchg
or
and
fisttpl
dec
int3
mov
dec
hlt
repz
inc
add
sub
xrelease
paddd
stos
lahf
aas
sub
lret
in
mov
pop
movsl
xchg
and
adc
nop
fstps
cmp
inc
jge
dec
sbb
mov
test
inc
movsb
insb
mov
inc
scas
cmpsb
push
push
loope
lds
pop
mov
loopne
test
jno
fwait
adc
adcb
stc
js
ljmp
or
movsl
andl
pop
test
cmp
adc
movsb
jo
test
addl
cmp
mov
das
lahf
pop
xlat
or
dec
lret
pop
jmp
pop
std
cmp
push
cwtl
negl
fidivrl
out
cmp
scas
and
jle
xchg
testb
xchg
insb
dec
push
jb
sbb
mov
je
and
adc
mov
pop
popf
es
fstp
push
push
push
push
jle
inc
jle
or
xchg
out
dec
mov
loope
jae
pop
push
lods
add
lea
test
bound
push
xchg
push
inc
mov
into
out
loop
xor
mov
jge
mov
outsl
xor
arpl
dec
scas
in
push
lea
in
or
add
push
bound
in
inc
mov
mov
push
inc
mov
fnstcw
pop
mov
push
daa
lret
mov
mov
jge
xchg
mov
stos
aad
xchg
incl
mov
imul
imull
out
loope
sub
jae
fldt
ds
ret
cmp
aad
push
shl
sub
aaa
xchg
push
orl
xchg
push
push
pop
sti
or
mov
into
inc
js
inc
jmp
or
arpl
cld
jge
sbb
inc
scas
int
fpatan
mov
or
test
fdivs
sti
or
loopne
jae
pop
movsl
es
and
ret
scas
sub
mov
gs
sti
cmpsl
pop
push
dec
adc
out
mov
pminub
or
lea
sbb
stos
sbb
lods
aad
jg
sub
test
test
cmp
rcr
jmp
push
out
sub
dec
pushl
pop
mov
repz
int
outsl
std
mov
hlt
aaa
sub
pop
mov
adc
ret
ret
scas
loopne
outsb
dec
lods
mov
lds
push
push
ss
test
push
xchg
jno
sbb
lret
jb
mov
push
dec
test
mov
test
aas
int3
cltd
push
and
fwait
aad
mov
pushf
mov
jge
or
cmp
dec
femms
add
inc
dec
mov
cwtl
mov
roll
xor
ret
dec
lock
into
sbb
xchg
dec
or
push
sub
fcomi
stos
ljmp
aad
lods
mov
ret
xchg
imul
cmp
aad
xor
inc
jmp
jae
scas
cli
loope
xorl
fistpl
shrl
mov
test
out
leave
or
adc
andb
pop
fistpl
sub
ljmp
lock
mov
call
sbb
xchg
das
cmc
dec
mov
sbb
arpl
push
push
and
lds
push
adc
inc
mov
repnz
xchg
insl
xchg
xor
adc
sbb
std
push
test
sbb
sbb
scas
add
popf
cwtl
mov
inc
subb
loope
pop
sub
popa
sahf
test
ret
daa
mov
xchg
stos
ds
scas
push
jns
outsl
out
push
in
daa
rcrb
inc
pop
mov
cmc
mov
jbe
and
scas
pop
jno
out
movsl
add
sub
add
dec
sbb
jnp
shlb
inc
dec
mov
lcall
cmpsb
scas
dec
xor
inc
call
pop
xor
ror
inc
fcoms
jg
mov
leave
mov
sbb
out
aam
sub
sahf
xlat
repz
or
enter
dec
jmp
pop
and
push
push
sbb
data16
jle
mov
xchg
and
sahf
repnz
pop
dec
mov
add
loope
repnz
mov
xor
mov
and
cwtl
mov
sub
inc
xor
mov
in
add
es
pushf
mov
inc
fistpl
call
outsl
rcrb
mov
aam
fst
movq
scas
lcall
ficomps
pop
into
sbb
jp
jne
mov
pop
xlat
and
or
dec
xchg
mov
mov
xchg
add
or
cld
pop
inc
gs
je
cmp
js
xchg
mov
std
cwtl
shrl
jo
mov
push
cmp
dec
mov
popf
xor
aas
lcall
loop
sub
fwait
scas
dec
inc
dec
jp
sub
add
or
sti
outsl
mov
out
lea
data16
or
movsb
xchg
sahf
and
pop
mov
jp
ds
jne
dec
pushl
jns
cmp
pop
movsl
scas
aaa
dec
mov
je
dec
rcrb
aad
gs
outsl
mov
enter
in
sbb
icebp
enter
lods
test
xchg
shll
push
leave
jg,pt
add
add
sbb
add
mov
xchg
testb
mov
cmp
int3
insb
outsb
and
loop
rcll
aas
adc
jp
std
jecxz
fstpl
cmc
inc
and
cbtw
sub
and
mov
mov
push
gs
or
adcl
pusha
cmpsl
adc
fstps
pop
cmp
sub
xchg
aas
add
mov
out
xor
mov
fists
dec
xor
loopne
add
push
dec
cmp
xor
mov
inc
subl
xor
lods
sahf
cmp
jno
stc
loopne
aaa
arpl
inc
fcmovnu
mov
scas
add
pop
xchg
pop
test
test
xchg
leave
or
mov
cmc
pop
sahf
pushf
or
mov
cs
pusha
loop
lcall
into
rcrb
lret
jecxz
inc
lea
dec
inc
mov
mov
lds
or
xchg
iret
es
lcall
mov
add
add
cmp
jp
shlb
out
dec
or
inc
movsl
inc
sahf
dec
inc
dec
dec
inc
loop
addl
pop
rorb
rorl
inc
out
shr
shll
inc
mov
shlb
scas
and
lcall
jnp
pop
rcrl
mov
hlt
fdivrs
testb
aad
jge
lret
mov
roll
mov
push
xor
pushf
sbb
mov
mov
and
xor
mov
and
fisttps
out
int
std
mov
scas
push
repnz
jg
push
std
stc
push
mov
pushf
in
mov
in
jg
mov
and
jb
lahf
cld
cld
leave
cmpb
cs
cmp
call
inc
and
jmp
cmp
xchg
pop
fcomps
jmp
mov
xchg
cwtl
ljmp
cmp
sbb
pop
in
mov
gs
cmc
add
jmp
cmp
xchg
ds
and
or
dec
in
cmp
push
std
lods
es
push
dec
adc
mov
fwait
or
movsb
sbb
sbb
sub
into
and
sti
jnp
mov
add
cs
outsb
negb
jbe
add
fs
sbb
cli
inc
out
jmp
sub
xchg
mov
gs
into
or
cmp
inc
hlt
movsb
mov
lret
pop
and
ret
jg
add
scas
imul
cwtl
aaa
imul
add
push
les
add
mov
flds
call
cmpsb
adc
out
and
shl
dec
or
aaa
cmp
xchg
int
lds
out
mov
das
jg
stc
sarb
inc
xor
sbb
stos
xchg
iret
add
loop
cmp
mov
xchg
xlat
insb
lods
and
pusha
cmpsl
jnp
add
lret
sub
cmp
jnp
mov
and
in
push
in
popa
fs
lods
push
push
mov
ret
pop
add
cmp
xchg
cltd
mov
rcl
or
xchg
add
cmp
pop
xor
in
sbb
add
orl
iret
mov
xor
sti
inc
loop
cmp
mov
test
enter
mov
sbb
adc
cmpsl
les
enter
sar
mov
aaa
insb
xor
fmulp
inc
cli
dec
std
lods
das
sub
shrl
icebp
nop
lret
add
lock
xchg
arpl
cltd
fsubrl
lods
popl
in
rcll
push
inc
cmc
ds
xor
int
mov
movsb
pop
jge,pn
punpckhdq
ret
fsubs
mov
mov
jecxz
jge
mull
dec
loope
pop
fucom
movsb
daa
jmp
leave
cli
cld
fnstcw
cld
pop
xchg
lds
jp
sbbl
jecxz
gs
pusha
push
arpl
adc
add
xchg
pusha
dec
inc
cmc
jne
shll
inc
leave
dec
pop
xor
cmp
mov
repnz
aas
xchg
ffree
add
mov
andb
lret
pop
jnp
jne
testb
stc
add
adc
push
dec
adc
pop
ss
sbb
pop
jg
aas
xchg
scas
es
iret
cltd
dec
sbb
popf
push
inc
daa
ss
movsb
adc
jmp
or
xlat
cmp
enter
push
inc
mov
and
and
add
sarb
mov
jge
pop
je
cwtl
scas
bound
mull
sbb
push
inc
out
xchg
push
dec
or
mov
mov
je
iret
enter
jnp
jns
push
and
adc
mov
push
mov
scas
pop
and
lods
xorb
xchg
lods
sub
scas
lods
pop
sti
cltd
adc
inc
mov
shl
mov
hlt
sbb
test
rcll
push
fwait
and
xchg
stc
mov
ret
cs
rcr
call
fldt
addr16
fidivrs
lret
mov
cmp
pushf
mov
push
push
adc
out
xchg
push
ja
cmp
sub
lcall
sbb
movb
xor
cwtl
mov
jg
jecxz
shll
jb
xor
mov
mov
sahf
sub
pop
xchg
xor
rorl
cmp
adc
ja
add
fadd
cmp
jnp
inc
stos
pop
popa
mov
loope
shlb
push
lret
cmp
aaa
lock
jne
iret
icebp
aaa
jo
pop
jle
scas
ret
stc
add
imul
into
in
rcrb
jns
and
ja
mov
scas
mov
fnsave
mov
lahf
enter
mov
sti
out
or
jno
pushf
lds
addr16
xchg
test
sub
add
dec
adc
and
loope
push
sub
scas
jnp
inc
push
lock
stos
shrl
dec
je
inc
and
movsl
xor
in
pushf
ljmp
mov
loope
xchg
mov
enter
sbb
bound
dec
loope
or
rcrl
push
sahf
mov
cli
cmp
cwtl
or
mov
sub
jae
mov
pop
cwtl
cmp
lods
mov
ds
mov
sbb
cltd
sbb
inc
leave
orb
pop
add
arpl
lock
mov
nop
nop
sbb
ret
inc
inc
popf
and
xchg
and
jae
xlat
faddp
jb
dec
adc
cmp
mov
push
dec
nop
imul
sbb
jo
out
xor
sub
ss
pop
adc
aad
inc
daa
pop
test
lahf
inc
sarl
sub
je
andl
jmp
mov
outsl
mov
repnz
addr16
cmp
mov
andb
mov
cltd
lret
fs
or
inc
cli
outsl
adc
mov
xchg
inc
inc
xchg
pop
popa
mov
pop
clc
pop
jb
dec
push
pop
insl
sbb
out
ffree
icebp
or
mov
mov
jmp
shlb
mov
rcr
mov
fstp
mov
orb
mov
add
popf
loopne
testl
or
fldenv
out
cmp
cld
cmp
test
mul
imul
sbb
pop
arpl
insb
add
shl
jnp
aad
jmp
movsl
mov
cmp
inc
mov
jae
std
push
cmp
out
stos
adc
jg
mov
cmpsb
shlb
jecxz
mov
push
push
dec
mov
lcall
mov
jbe
and
push
push
lret
cmp
rcl
shlb
add
mov
push
push
sbb
add
cltd
adc
pop
and
pop
jmp
lahf
xchg
push
fiadds
mov
inc
ljmp
repnz
or
mov
mov
fwait
stos
sub
pushf
and
pop
leave
ret
loop
cli
push
mov
add
jns
hlt
and
adc
icebp
addl
shlb
shlb
cli
add
inc
pop
fisubrs
inc
cmp
arpl
sbb
push
inc
pop
test
loop
addb
fmull
stc
mov
lret
arpl
je
sbb
aam
test
popa
lret
pop
es
push
ljmp
push
ja
pop
bound
mov
insl
pusha
addb
and
outsb
dec
adc
dec
mov
sti
lods
push
dec
sbb
pop
adc
sti
lret
push
adc
ret
mov
adc
ret
aam
inc
jmp
es
push
mov
std
outsl
test
add
mov
aam
dec
push
sub
sub
pop
dec
push
divb
lea
xor
movl
roll
ret
js
cmp
loopne
mov
jae
mov
cs
repnz
or
sub
push
sbb
pusha
loop
sbb
add
sbbb
ficoms
mov
iret
jge
loope
pop
arpl
lea
inc
in
std
lods
int
cmp
mov
sub
test
stc
cmp
sbb
xchg
mov
lret
cld
fdiv
test
adc
and
mov
mov
add
jge
and
xor
jo
out
mov
data16
mov
sbb
and
outsb
or
and
dec
das
xchg
fs
insb
mov
out
leave
sahf
jo
adcb
rcl
loopne
lret
sbb
pop
mov
xchg
mov
aas
mov
sbb
mov
das
loop
xlat
xchg
aam
adc
mov
cmpl
cmp
mov
test
repz
or
idivl
sarl
mov
aam
lods
mov
xor
or
push
jg
icebp
push
out
dec
and
test
mov
jb
push
adc
fldcw
and
testb
push
xchg
shlb
jne
jl
push
xchg
cmp
fnstenv
sahf
in
fidivs
insb
adc
inc
mov
sbb
enter
ja
test
lock
or
bound
sub
shll
cld
fidivl
mov
inc
mov
leave
mulb
clc
adc
xor
insl
mov
jns
clc
fcmovne
dec
jge
ja
jo
adc
dec
sbb
sub
out
mov
jnp
movb
adc
fimuls
add
cmpsb
loopne
imul
adc
xchg
push
lea
or
push
ret
jle
sbb
inc
je
icebp
arpl
roll
lods
outsl
push
int
xchg
mov
repz
inc
inc
adc
test
scas
pop
dec
int3
daa
mov
ja
subl
dec
or
enter
mov
xchg
push
xor
sbb
xorb
cmp
dec
sub
sub
lock
icebp
cmc
pop
dec
sahf
and
das
ret
xor
fsubrl
cs
mov
cli
lret
stos
push
mov
mov
movsb
xchg
pop
push
dec
movsl
push
test
mov
mov
mov
cmp
jmp
aas
shlb
inc
out
stos
es
loope
nop
sbb
popl
add
and
aas
js
les
jne
inc
xchg
out
arpl
mov
nop
sub
mov
push
fldl2e
and
lods
jb
push
or
imul
adc
cmovae
pop
mov
mov
roll
push
jmp
imul
clc
or
adc
mov
sbb
das
xchg
adc
movsb
js
outsb
dec
loopne
imulb
inc
push
int
mov
cmpsl
test
pop
push
fucomip
notl
aaa
testb
enter
push
mov
ljmp
or
xorl
mov
jbe
cmpsl
repnz
or
cmp
xor
push
lock
mov
int
sbbl
popf
fisttps
imul
rcrl
cmpsb
sbb
xor
popa
sub
aad
inc
sbb
loopne
push
shr
mov
mov
lahf
negl
pushf
std
cli
adc
add
jnp
ds
mov
fisttps
dec
aad
jb
mov
rolb
dec
lret
inc
out
mov
fistpl
addl
add
aaa
lods
pop
pop
fisubs
fwait
dec
pop
xchg
lret
push
mov
cmp
dec
xor
sar
mov
cmp
xchg
jnp
lea
cwtl
loop
cmc
push
idivl
sub
daa
jmp
sub
lahf
mov
xchg
adc
nopl
bound
jnp
sub
push
xor
mov
loope
fists
cmpsb
shr
stos
mov
mov
imul
std
sub
sub
xchg
lea
lds
std
mov
xor
test
je
shlb
mov
push
out
push
cmc
add
repnz
shlb
sbb
insb
ss
es
rclb
pop
cmp
or
ja
mov
fcomp
and
ds
push
in
in
insb
jbe
cltd
ret
xorl
fst
inc
xor
push
pop
push
ljmp
sub
idivl
pop
call
push
xor
inc
or
ds
cmp
fucomip
xchg
outsb
push
dec
mov
pop
cmpsl
out
loope
add
pop
roll
stos
out
lods
xchg
inc
out
and
es
in
nop
sub
mov
popf
mov
std
fs
push
mov
push
andb
jle
inc
es
in
dec
mov
mov
jle
push
dec
rolb
inc
fldcw
pop
and
inc
lea
cli
fcomps
or
cmpsl
adc
icebp
push
mov
cmp
inc
mov
sub
mov
imul
in
test
fsubrs
insb
cli
push
mov
popf
dec
ss
sub
js
mov
loopne
dec
dec
fwait
or
aam
xchg
jmp
jecxz
mov
mov
mov
fnstsw
sub
sbb
pop
dec
dec
sar
push
js
adc
push
popa
xor
sub
outsl
int3
inc
es
out
cs
repnz
or
sbb
sbb
sub
sahf
andl
inc
jnp
in
and
shlb
ss
xor
jmp
std
or
sub
pop
and
dec
inc
sarl
xor
into
push
iret
xor
dec
rclb
sbb
shlb
inc
xor
mov
in
fs
push
fldl
fwait
lds
outsb
pushf
lahf
in
stc
push
sbbl
push
imul
fsts
cld
lods
xor
push
push
sbb
mov
inc
mov
mov
and
lahf
lret
push
aaa
push
lods
pop
arpl
lods
notl
ret
fs
cmp
sti
ds
cmc
scas
jnp
and
xchg
inc
jge
pop
sub
aas
imul
jno
push
xor
inc
ds
adc
mov
push
dec
enter
and
xchg
jns
sti
fwait
pop
enter
push
push
popf
xchg
push
add
dec
or
xchg
adc
mov
push
push
jb
fistpll
mov
shl
xor
sub
mov
loope
roll
test
icebp
fldenv
loopne
hlt
or
ljmp
lock
add
mov
jbe
add
pop
jnp
call
push
adc
loope
pop
dec
sahf
jbe
xchg
fldt
xchg
cs
jne
clc
push
jo
enter
mov
pushf
push
out
jbe
jb
ret
int3
or
inc
outsb
sub
scas
stc
out
dec
xchg
pop
lahf
into
jo
xadd
jae
lock
fidivrs
dec
ja
rorl
sti
xchg
mov
popa
push
pusha
push
jnp
and
leave
test
xor
imul
loop
stos
repz
jno
dec
xchg
adc
add
sub
adc
loope
lods
jl
pop
add
adcb
jp
test
nop
ret
sub
pop
insl
dec
testb
cmpsb
xor
imul
lret
sub
subl
sub
loopne
adc
imul
pop
and
loop
or
mov
pop
dec
sub
adc
cmp
jo
dec
test
add
repz
or
js
adc
nop
xor
pop
shll
fs
jbe
push
adcb
popa
or
stos
nop
fsubrs
xchg
insb
int
in
dec
movl
or
xchg
dec
inc
hlt
mov
or
enter
inc
mov
and
add
push
xchg
ret
push
sub
push
add
xchg
data16
pcmpgtd
jg
nop
add
jbe
xor
iret
or
mov
mov
shl
cmp
fcompl
outsl
push
sahf
push
lcall
mov
inc
or
pand
fst
mov
ficomps
or
mov
mov
std
ret
int3
mov
outsl
addr16
out
inc
jl
add
jne
fwait
mov
insl
cld
jle
xor
jecxz
cs
and
xor
sbb
fcomp
mov
scas
sub
fwait
jp
lsl
mov
loop
fidivs
and
jle
ret
lahf
inc
lods
inc
call
lods
scas
adc
imul
daa
jnp
adc
mov
inc
dec
cmp
insl
imul
movsl
xchg
je
sahf
mov
push
dec
xchg
inc
lods
mov
pop
repnz
dec
or
inc
xchg
lds
pop
je
das
icebp
xchg
pcmpgtw
fwait
xchg
out
jo
jae
push
jge
inc
push
mov
jmp
push
cmp
pop
lock
subl
fistpll
jne
pop
cmp
andb
mov
pop
ret
dec
pop
fisttps
ret
mov
sbb
sub
ds
ret
cmp
mov
stos
movsb
lods
push
loop
inc
out
neg
cmpsl
ss
leave
mov
rcr
in
xor
dec
stc
movl
adc
pusha
mov
test
xor
adc
stc
dec
scas
sub
cmp
jbe
arpl
mov
mov
sahf
insl
jnp
fisttps
scas
inc
scas
pop
icebp
cmp
jo
sub
seta
ret
add
jmp
xor
jne
push
adc
js
lahf
xchg
sahf
inc
jmp
lods
cmp
in
sbb
mov
ret
enter
jecxz
xchg
repnz
add
jno
aam
dec
in
adc
xchg
sub
mov
shrb
stos
outsl
bound
and
add
or
adcb
pushf
faddp
insb
add
nop
and
out
or
adc
push
jl
or
cmp
push
xchg
cmpsl
aad
jns
sbb
repz
out
roll
rcl
dec
out
test
fcmovnu
dec
fisttps
and
mov
in
loopne
or
pop
xchg
mov
inc
mov
mov
movsb
push
push
mov
push
cmp
or
pop
add
jp
sub
daa
shrl
sbb
add
lea
xor
jbe
pushf
flds
andl
cwtl
imul
mov
mov
pop
cld
mov
mov
jns
jae
xchg
jl
cltd
mov
mov
and
add
pop
inc
out
add
or
enter
in
jae
int3
push
insl
pop
in
mov
test
mov
sub
or
addb
aam
sbb
cmp
cmpsb
js
dec
icebp
push
jl
adcb
sbb
call
jae
sbb
mov
loope
adc
add
fsubs
mov
adcb
mov
rorb
pop
stos
add
out
fimull
cmp
mov
into
dec
cs
out
push
add
subb
xchg
out
pop
jge
fsubs
je
in
in
adcl
addr16
rcll
dec
and
stc
push
cmp
clc
mov
jge
push
cmpsb
sarb
es
fsts
push
dec
jmp
lahf
sbb
test
scas
sbb
xchg
add
out
push
xor
mov
push
es
sbb
ljmp
mov
or
movsb
xchg
ret
lods
stc
outsl
xchg
or
in
sti
mov
xchg
mov
pop
insl
lock
rol
xor
push
es
subl
insl
push
int
repnz
adc
sub
pop
lcall
cmpsl
lcall
jnp
dec
out
ret
popa
mov
add
adc
mov
stos
fwait
inc
sbb
sub
or
jnp
dec
ja
push
loope
cmp
xbegin
jle
das
mov
xchg
fisubl
and
push
popf
cs
sbb
movsb
sub
jl
outsl
gs
mov
sbb
xchg
add
cmp
rolb
dec
std
mov
es
imul
int
imul
out
mov
popf
loopne
inc
inc
rcl
inc
or
or
notb
cs
mov
pusha
mov
mov
imulb
fsubrl
test
jbe
cli
mov
and
sub
sub
and
aam
sub
mov
ds
scas
cli
sarl
pushf
movsb
insb
inc
es
loop
xchg
das
xchg
icebp
repnz
fldl
jae
pop
adc
xor
add
andb
aam
movsl
lock
inc
fdivs
test
loop
es
pop
mov
loopne
leave
out
cmc
dec
stos
xchg
jno
adc
pop
in
fimuls
cmp
enter
mov
xor
div
hlt
lock
ror
rclb
jbe
ja
inc
xor
js
scas
aad
mov
jno
cmc
cmpsl
fcomp
push
ret
mov
xchg
pop
or
scas
xlat
and
enter
and
str
in
into
or
or
ljmp
in
push
mov
jo
stos
xchg
jmp
sub
mov
xchg
lds
sbbl
outsb
das
repz
mov
pop
sarl
adc
insl
sbb
movb
jle
pop
imul
jmp
mov
sbb
stos
mov
sub
neg
cmp
sbb
movsb
shlb
mov
jnp
pop
shll
ss
jo
repz
and
xchg
mov
popa
shr
cli
repnz
mov
pop
ss
bnd
cmp
insl
adc
bound
cmp
rcl
pushf
cmp
out
xchg
or
fsubrs
jge
jle
lods
or
jns
add
jl
lea
jmp
pop
xchg
jns
xchg
push
sbb
cltd
jge
sbb
test
lcall
loop
xchg
pop
shll
cltd
sbb
pop
outsl
notl
push
mov
push
pop
push
ret
cmpsl
xchg
mov
nop
stos
mov
movsl
xchg
jl
out
repz
push
push
dec
or
test
and
push
rcrb
das
out
pusha
jmp
mov
fmuls
mov
or
loopne
inc
mov
push
push
mov
xor
mov
xchg
loope
mov
lret
and
sarb
std
call
adc
sub
addr16
imul
push
lahf
sbb
aaa
sub
lock
add
xchg
mov
jle
sti
pop
cmc
sub
mov
or
out
sub
and
aaa
int
scas
xor
adc
movsb
adc
arpl
xchg
sub
or
fldl
mov
pushf
lea
fmuls
and
stc
aas
pop
mov
ret
add
jns
sbb
push
or
cltd
sub
lahf
jl
xor
fsub
xlat
mov
and
push
insl
add
out
adcl
pop
jecxz
sbb
imul
mov
out
cmp
pop
lods
add
push
or
push
xor
rorl
clc
adcb
shll
in
pusha
pusha
mov
pop
lret
pusha
aaa
push
out
jecxz
add
lret
push
mov
loop
pushl
cmp
dec
cmp
mov
cltd
cwtl
outsb
scas
inc
or
xchg
mov
cmp
cmp
sbb
fucomip
addb
jge
mov
jbe
and
dec
fnstsw
hlt
outsb
mov
stos
sub
push
add
js
cmpsl
sub
dec
cld
fs
adcl
lods
cltd
jno
mov
iret
aaa
shll
cmpsl
and
cmp
xchg
lret
jle
pop
out
lcall
testb
jbe
dec
or
mov
aad
loope
clc
jae
cltd
pop
aaa
sbb
inc
dec
repz
or
inc
cmc
pop
inc
test
fcmovb
push
pushf
adc
push
xor
int3
mov
cmp
xchg
dec
cmpsb
ljmp
or
loopne
adc
inc
sub
sbb
lcall
pop
jl
xor
cmp
jmp
xor
sbb
ret
aam
pop
xchg
sbb
iret
add
fs
loop
lock
xor
lds
cmp
es
es
pop
xchg
pop
push
nop
dec
and
mov
fwait
lods
dec
and
inc
in
int
ds
push
pop
inc
sub
fldt
mov
mov
popa
movsl
adc
xchg
pop
or
mov
xor
pop
dec
icebp
dec
cmp
xor
or
xchg
and
mov
addr16
mov
aam
sub
jne
hlt
mov
cmc
and
pop
sti
xchg
dec
jo
ja
call
sub
or
and
flds
dec
mov
fstl
pushf
pmulhw
fistpll
xor
add
out
lds
imul
push
scas
call
mov
dec
stos
jg
sub
sub
add
mov
in
xor
sbb
mov
cmp
mov
ss
push
jb
test
outsl
iret
or
or
cld
mov
rcrl
jge
xor
jnp
mov
push
std
add
push
inc
push
test
dec
cli
add
call
inc
add
push
aam
leave
sub
rorl
xchg
dec
push
push
sub
ret
enter
mov
mov
es
mov
es
sbb
dec
test
lds
cmpb
jae
fistpl
push
into
mov
cli
mov
inc
pop
add
or
cmc
push
pushf
or
in
adc
mov
mov
sbb
jle
int
rcll
arpl
nop
loopne
push
pop
or
mov
mov
lds
incb
jbe
ljmp
jo
xor
dec
or
scas
subb
adc
dec
dec
nop
loopne
mov
adc
pop
mov
cmp
jg
aas
ret
popa
xchg
adc
cmp
int3
je
push
stos
mov
and
movsl
cmp
and
adc
or
mov
fsubs
and
mov
cwtl
pop
test
push
cmovl
inc
das
inc
and
xor
xchg
iret
xor
scas
add
push
cltd
cwtl
cmp
test
pop
lcall
mov
jne
jo
sbb
mov
or
or
out
aad
cmpsl
cli
jo
aad
adc
pop
sbb
cmp
xchg
adc
mov
enter
xlat
sbb
incl
std
test
pop
lahf
cmp
dec
push
push
mov
inc
aam
orl
mov
jmp
mov
xchg
int3
andb
inc
dec
data16
push
push
jp
and
push
test
lret
cs
pop
gs
loopne
jne
xchg
add
pop
push
mov
push
and
jge
sub
lea
push
pop
mov
and
imul
inc
es
or
inc
xor
dec
scas
lods
jne
jg
pop
jbe
mov
sarl
adc
xchg
stos
inc
dec
pop
out
cli
out
into
cltd
pop
movsl
ds
and
inc
cmp
mov
daa
push
das
push
stos
and
daa
or
fnstenv
push
sbb
add
cmc
lock
add
orb
scas
or
pusha
das
daa
push
imul
jns
mov
xor
xchg
mov
fstp
inc
shll
lds
mov
movsl
push
jne
test
jae
or
ljmp
adc
imul
sbb
bound
int3
xchg
aas
gs
mov
push
insb
dec
into
and
cmp
push
enter
ja,pt
xchg
xor
dec
mov
xchg
pop
jg
leave
orb
adc
fnstenv
mov
jae
jae
cmp
sbb
arpl
pop
rclb
test
and
ljmp
mov
and
pop
and
int
jecxz
xchg
pop
stos
test
adc
pop
fwait
mov
mov
xor
insl
and
call
lret
adc
lods
push
mov
mov
je
test
mov
pop
adc
inc
xor
sbb
inc
adc
push
lods
sub
das
pusha
cld
stc
pop
bound
jle
ss
mov
andl
xchg
push
movsb
xchg
stos
mov
filds
sar
movsb
sub
enter
xchg
mov
fnop
fdivl
imull
bound
ja
push
imul
jmp
ljmp
fwait
std
dec
clc
jg
int
jae
push
adc
jnp
icebp
and
cmp
sbb
sbb
xor
push
pop
add
rolb
pop
jl
subl
xor
and
push
jl
das
call
inc
lret
loop
cmpsl
mov
cmpsl
insb
mov
lds
loopne
inc
pop
ljmp
rcll
fldt
sub
xor
in
push
scas
xchg
adc
punpcklwd
mov
mov
mov
dec
int3
lret
adc
icebp
iret
xlat
lretw
test
leave
and
xor
mov
ss
and
lds
push
insb
orl
mov
jg
mov
lret
sub
outsb
adc
cmp
adc
pop
cmp
movsl
cmp
lret
gs
mov
xor
jmp
sahf
arpl
pushf
sbb
adc
add
jbe
mov
nop
ret
cwtl
pushf
in
jb
jbe
xchg
rorb
push
xchg
mov
shl
pusha
je
and
std
add
inc
mov
sbb
add
and
and
lret
mov
or
jle
test
lock
jae
hlt
xor
mov
xor
imul
ljmp
jp
xchg
cmp
jmp
aad
ret
and
dec
mov
mov
add
les
lock
push
push
aam
mov
fldcw
nop
cmpsl
mov
jge
loop
jae,pt
pop
push
push
cmp
and
aam
lds
jbe
push
dec
imul
jbe
or
cmp
pop
test
mov
sbb
xor
inc
pusha
aas
insl
jg
insb
push
xchg
sbb
jae
hlt
mov
cwtl
xchg
dec
pop
outsl
xor
jo
test
xchg
hlt
test
int3
add
das
mov
add
aas
mov
cmp
es
movsl
dec
jns
xor
jb
jp
and
hlt
test
fwait
sub
cmp
push
cmpsl
and
rcrl
or
insl
shl
push
mov
xchg
out
xchg
inc
fs
push
mov
xlat
out
add
pushf
jbe
ljmp
hlt
xlat
mov
xor
pop
icebp
cmp
mov
pop
dec
or
jns
push
pop
mov
jmp
jge
movsb
dec
add
push
xchg
sub
fdivrs
and
jns
pop
inc
jo
adc
cmp
xor
repnz
xchg
out
or
incl
dec
ret
stos
jbe
dec
fcomps
add
decl
sbb
cltd
push
hlt
rcrb
popf
add
shrl
cmp
leave
sub
push
mov
lock
stos
adc
sub
imul
and
cld
mov
jmp
mov
mov
mov
xchg
int
add
outsb
jae
xchg
and
xlat
dec
or
mov
sub
inc
test
mov
les
pop
faddl
lcall
sbb
pop
pop
sti
popa
pop
sub
lds
inc
addl
hlt
es
sbb
xor
inc
pop
cltd
mov
test
jo
add
xchg
push
adc
add
fadds
testb
and
mov
lea
jl
ret
int
iret
mov
ret
xchg
sub
jmp
mov
insb
add
jmp
mov
sub
add
and
mov
and
add
mov
or
pop
xchg
lods
xchg
cmp
xlat
sub
jmp
test
push
hlt
lret
cmova
sub
xchg
dec
sub
shrl
add
sarb
add
cwtl
pop
push
add
sbb
out
fisttpll
adc
sub
repz
outsl
push
pop
push
mov
fistpll
pop
cmp
notl
test
cmp
lods
push
movsb
jmp
movsl
push
sub
imul
adc
push
insb
mov
pushf
insb
or
lret
fidivrs
out
adc
inc
test
pop
inc
loop
mov
adc
lds
jne
jge
insl
lods
cmc
cmp
and
add
loop
jle
push
es
sbb
fsubrs
xor
jae
pop
imul
jmp
enter
popa
mov
pushf
ljmp
fistps
notl
mov
sub
mov
bswap
stos
mov
pop
adc
fstp
mov
sub
jp
faddl
sarb
int3
mov
xchg
inc
adc
mov
pop
mov
xchg
xor
es
not
or
inc
jb
movsl
imull
stc
adc
add
add
ficoml
and
xlat
inc
xor
nop
movsl
pop
fsubrl
insl
out
mov
inc
push
lods
fwait
or
sub
ret
dec
cmp
add
and
mov
push
lds
inc
aaa
mul
cmp
sub
lret
scas
inc
jg
push
rcll
sbb
icebp
sahf
iret
or
jmp
hlt
pop
icebp
xchg
loopne
rcll
test
in
aad
mov
xchg
mov
and
or
sbb
pop
fwait
outsb
ja
fs
dec
les
inc
lret
or
orl
out
iret
jno
bnd
push
or
repnz
bound
or
adc
or
jle
sub
jo
mov
add
jmp
lret
sbb
jns
jo
nop
xchg
cli
into
je
out
add
add
xor
aad
pop
icebp
mov
mov
sbb
cs
inc
xchg
rdpmc
in
insl
divb
in
ljmp
into
add
lahf
std
je
popf
sub
hlt
addr16
aad
and
adc
in
popf
sub
push
xchg
mov
mov
xor
loopne
fcmovnbe
sbb
push
fstp
pop
lret
daa
jle
inc
in
sbb
mov
test
daa
mov
loope
movsl
sbb
roll
test
mov
int3
mov
dec
in
clc
sbb
mov
xchg
jo
das
dec
lods
sbb
push
or
pop
pop
imul
mov
mov
shlb
clc
fildl
push
mov
push
dec
popf
sub
cld
cmpsl
inc
jle
inc
adcl
scas
pop
add
rorl
jmp
pop
inc
outsl
jb
jne
call
es
jle
repz
in
lea
dec
ljmp
push
mov
xchg
out
push
xchg
jmp
mov
repz
lret
pop
inc
xchg
and
in
nop
out
imul
xor
add
mov
sbb
ljmp
jge
mov
ficomps
and
aad
dec
insb
out
inc
mov
inc
jno
push
jp
cmpsl
rorb
es
bound
pop
loopne
xchg
cmp
inc
cwtl
scas
xchg
jno
mov
xor
loopne
jns
xor
popa
outsb
dec
cmp
cmp
dec
fnstsw
push
addr16
dec
sti
loop
mov
sub
mov
sbb
mov
in
cli
shlb
push
or
jns
mov
and
scas
lret
push
jg
push
out
enter
or
imul
adc
data16
pop
out
mov
sti
ret
xchg
jo
ljmp
xchg
jle
xor
mov
ret
jne
xchg
inc
pop
ret
and
or
out
sbbl
outsb
jl
xor
lret
movsl
cmpsl
pop
jnp
adc
mov
mov
adc
sbb
into
inc
and
fwait
cmp
or
adc
xchg
in
fdivs
xchg
unpcklps
mov
pop
aad
scas
mov
icebp
sub
sbb
cmp
ss
mov
cmp
pop
xchg
rcrb
ficompl
mov
pop
pop
sahf
js
push
mov
jp
inc
push
push
push
test
sbb
sarb
int3
je
cmp
sbb
lret
jne
pusha
pop
push
push
addr16
inc
push
add
shl
imul
xchg
and
dec
push
das
pop
das
pop
loop
pushf
xchg
mov
les
repz
call
dec
stc
push
or
push
mov
cmp
lret
aas
loopne
xorb
xor
cmp
mov
push
sbb
jge
aaa
int
xor
cmpsb
hlt
shll
out
addr16
dec
sub
inc
or
aaa
test
xlat
xchg
sub
mov
sub
daa
sub
or
aaa
push
add
pop
jbe
mov
sub
mov
xor
ss
push
outsb
pop
inc
repz
dec
insb
adc
mov
insl
outsb
cmp
adcb
cmp
pop
dec
out
insl
mov
test
int
inc
sub
push
dec
jo
dec
push
adc
setl
data16
rcr
sti
xchg
inc
shll
pop
ret
mov
sub
movl
push
cmpsb
les
stos
js
andl
and
stc
inc
jb
sbb
addb
and
add
popl
jnp
cmp
in
xlat
in
scas
mov
lret
cmpsl
repnz
inc
push
mov
adc
jl
mov
add
lods
xchg
mov
aaa
sub
or
add
repnz
dec
jns
jnp
rcl
mov
xor
inc
iret
inc
push
ljmp
lods
xchg
mov
and
jno
imul
sub
mov
sbb
sub
push
es
stc
cmpsb
stc
lcall
fninit
mov
lret
mov
sub
ss
inc
insb
xor
xor
xor
pop
dec
mov
jo
add
mov
inc
minps
ficompl
sbb
test
or
push
and
xor
pushl
push
and
popa
jmp
mov
cmpb
xchg
pop
cli
lea
aas
jo
sub
sub
outsb
fs
dec
dec
sbb
adc
je
test
in
mov
das
in
aam
jne
mov
test
xor
loop
popf
in
xchg
sbb
fwait
jno
mov
loop
xchg
scas
sti
inc
inc
jb
ret
ds
or
mov
or
insl
cmp
unpcklps
and
lret
sbb
orl
lea
pop
das
xor
xchg
sbb
scas
daa
xorb
fisttpll
mov
jae
mov
bound
adc
adc
cld
sbb
cmp
xchg
push
into
mov
add
ror
out
inc
jns
push
test
hlt
fmull
xor
mov
ja,pn
and
jl
outsb
imul
orb
clc
into
popf
push
dec
mov
xchg
mov
sub
pop
dec
lods
sti
cwtl
bound
xchg
push
cmc
sub
xor
add
dec
xchg
unpcklps
xor
insl
mov
add
push
aaa
xchg
sub
mov
jl
xor
push
scas
insl
adc
addl
das
adc
mov
adc
or
and
pop
lods
and
ds
outsl
imul
jg
inc
outsl
dec
data16
test
jge
push
je
inc
xchg
adc
inc
add
xchg
add
in
and
in
mov
sub
pop
xor
xor
rcll
dec
mov
in
flds
mov
inc
insb
add
mov
sub
add
enter
add
sahf
aas
int
je
dec
pop
jns
out
add
pop
outsb
lock
aas
dec
mov
out
xor
or
data16
icebp
insb
mov
fstpl
cltd
aam
push
and
jns
or
iret
and
jg
andl
lahf
push
xor
out
popa
inc
mov
sub
ja
mov
sub
sub
outsl
xor
cld
cmp
out
mov
xchg
roll
sbb
xor
mov
adc
dec
mov
mov
mov
jbe
pushf
xchg
cs
cltd
mov
pop
xchg
and
fnstsw
out
or
call
mov
mov
das
subb
adcl
cwtl
fidivl
xchg
bound
loopne
mov
movsb
adcl
mov
ds
outsl
jo
pushf
test
daa
and
out
xchg
mov
outsl
jl
push
inc
fdiv
push
movsb
and
push
pop
adc
je
jmp
sub
xor
ljmp
add
enter
jbe
lea
hlt
loopne
add
and
ds
cltd
and
out
inc
test
sub
call
enter
xor
jl
hlt
dec
or
jl
fwait
loopne
add
pusha
sbb
lcall
iret
cmp
cmp
mov
pop
scas
incb
xchg
hlt
mov
sbb
add
call
into
out
cmp
jl
in
mov
inc
data16
pop
dec
dec
int3
dec
sbb
mov
push
jns
call
fs
sbb
adc
sub
int3
cmp
andl
gs
sub
jp
xor
xor
rcr
js
cwtl
outsb
stos
mov
bound
inc
jo
xor
lock
addb
dec
xchg
shr
into
ss
jbe
out
clc
or
sbb
xchg
stos
and
clc
push
inc
push
push
mov
ds
leave
cld
jge
imul
hlt
inc
in
jmp
pop
dec
mov
inc
movsb
pop
xor
repz
js
or
sahf
jecxz
mov
add
jmp
xor
jle
and
lret
cmpsl
dec
cmp
jno
xor
jnp
scas
imul
xlat
mov
fnstenv
fstpl
into
add
mov
fmull
stos
adc
int3
insl
or
loop
mov
dec
popf
mov
pop
xchg
idivl
mov
lea
data16
cs
adc
sbb
fistpl
dec
inc
jnp
mov
or
mov
mov
out
orl
stc
scas
insb
xor
pop
and
int
hlt
popf
xchg
aas
test
iret
fimull
out
pop
call
mov
adc
lret
cmpsl
outsb
sbb
mov
nop
and
jo
sbb
xchg
fdivrl
cld
pop
das
inc
xor
cmpsl
inc
dec
cmp
jo
adc
pop
fmull
push
adc
inc
xor
mov
fnstsw
adc
lods
popa
mov
xchg
rcll
ret
push
js
daa
lock
xchg
dec
stos
xor
push
dec
xchg
andl
sub
shll
into
pop
and
lret
lea
imul
mov
das
test
popa
aas
jmp
cmp
mov
mov
mov
daa
stos
cmpsl
jmp
sahf
das
loopne
push
sub
fmul
adc
and
inc
and
pop
pop
jae
enter
inc
std
mov
push
mov
push
adc
mov
aad
jb
jae
aad
xchg
mov
xor
pop
jmp
cmpsl
push
stc
in
and
fwait
pop
mov
movsl
add
dec
ljmp
ficoms
test
repnz
mov
in
loopne
add
cltd
xchg
jo
xchg
cmp
adc
mov
rcrb
push
xor
cmp
bound
xlat
mov
or
mov
xor
sub
and
sahf
mov
lds
fwait
jo
jb
aas
push
jl
popf
push
pop
rcrb
outsl
lods
or
addl
pop
sti
push
sbb
subb
xor
cmp
adc
das
adc
adc
adc
nop
mov
insb
mov
jne
icebp
loope
pop
andl
pop
loop
popf
or
jae
and
loop
dec
pusha
push
adc
aas
fdivr
fs
outsb
mov
dec
cmp
dec
add
popa
or
subl
scas
std
jecxz
es
add
inc
cmp
or
adc
push
xchg
mov
pop
mov
jnp
pusha
cmpsb
daa
imul
lods
xorps
mov
lea
adc
inc
and
xchg
lret
pop
sbb
sbb
lcall
jns
dec
cmp
dec
shll
in
mov
shl
jb
fiaddl
das
jno
pop
pop
pop
sahf
dec
lea
ret
jmp
dec
xor
inc
decb
sbb
mov
and
xor
loopne
push
cmp
inc
jns
adc
sbb
jae
xor
dec
sbb
or
mov
pop
push
xchg
leave
cmpsl
jno
into
xor
inc
pop
jle
pop
and
nop
jl
inc
out
xchg
sti
add
push
fwait
clc
std
cmpsl
int
sbb
subl
out
push
rolb
sbb
xchg
mov
adc
movsb
rorl
dec
out
mov
orl
pop
pop
popa
xchg
cwtl
lahf
fwait
loope
hlt
xchg
loopne
int3
xlat
aam
and
inc
sbb
and
ficoms
jle
mov
xor
mov
jo
stos
sub
inc
mov
cltd
jle
mov
sti
xorl
out
mov
gs
popa
jp
xor
adc
jae
push
popf
push
pop
dec
cmpsb
enter
std
clc
inc
mov
inc
push
bound
movsl
add
mov
and
lods
jl
push
stc
and
clc
lds
lods
call
or
push
std
es
sub
repnz
rorb
or
mov
dec
mov
dec
in
xchg
fistpl
sahf
jo
and
add
xchg
icebp
mov
clc
cmpsl
mov
pop
outsb
mov
call
insl
testb
mov
movsl
nop
pop
sahf
outsb
mov
cli
ljmp
and
aaa
inc
test
jmp
xchg
and
add
jns
fadds
push
cmp
pop
dec
mov
and
dec
pop
xchg
jle
enter
or
pop
cmp
lahf
inc
cmpsb
into
inc
jge
rcll
das
xchg
enter
in
sub
je
xchg
jl
adc
jae
mov
leave
inc
mov
inc
das
mov
push
outsb
ret
pop
mov
daa
xor
xchg
lahf
ljmp
rcrl
inc
sbbl
test
in
xor
jl
out
sbb
mov
inc
lds
mov
hlt
mov
daa
cmp
adc
push
sar
cld
insb
mov
xchg
hlt
pop
jbe
repnz
orl
inc
sahf
scas
pop
add
popl
loop
xor
les
pop
xor
mov
insl
mov
xchg
mov
pop
clc
inc
jbe
jb
mov
pop
dec
xor
outsb
sub
daa
out
pop
fidivrs
adc
push
out
leave
or
stc
out
mov
fmull
sbb
adc
mov
inc
or
test
into
mov
nop
subl
lods
xor
dec
mov
loopne,pn
push
sbb
es
jnp
adc
ljmp
push
sub
stos
xor
dec
pusha
fs
shl
or
xchg
inc
js
jns
xchg
adc
pop
adc
jp
fs
sub
and
pop
dec
dec
lret
inc
pop
orl
mov
xor
cs
adc
xor
mov
jge
mov
sub
dec
xor
pushf
push
cltd
jmp
inc
cmp
les
aas
ja
sbb
mov
xor
mov
fmuls
and
add
bound
jmp
sbb
and
shr
jmp
mov
ss
push
pop
jns
sub
cltd
in
adc
into
mov
lods
xor
mov
jle
int
xchg
jmp
test
jb
fistl
nop
mov
into
les
bnd
push
xor
pop
sub
shll
push
mov
pop
cltd
jo
mov
pop
and
arpl
icebp
js
dec
inc
iret
add
add
xchg
jecxz
lods
jl
ret
and
fwait
aas
mov
aas
xor
in
xchg
adc
xchg
mov
sub
fs
inc
sub
sub
dec
lret
mov
pusha
mov
test
or
lahf
pop
aaa
push
mov
pop
mov
jo
fs
mov
push
cmc
cmp
or
sub
jmp
mov
xchg
hlt
mov
xchg
cmpsl
insl
ret
sbb
ds
mov
mov
jg
cmp
and
mov
rcrb
out
insb
inc
lea
jle
leave
mov
jb
in
add
xchg
stc
add
aad
outsl
jno
pop
mov
inc
scas
and
and
les
mov
or
jb
subl
mov
out
jo
mov
movsb
fisubrl
insb
fisttps
andl
mov
push
xchg
stos
xor
inc
or
mov
movsb
adc
or
jo
mov
out
loop
fsub
in
jge
insl
loop
dec
fsubrs
sbb
insl
rcrl
push
fimuls
sub
xchg
or
movsl
daa
push
dec
mov
push
fistps
pop
and
shll
cmp
or
movsl
mov
add
aas
mov
dec
mov
pop
mov
mov
leave
lock
mov
add
test
dec
outsl
add
out
popf
or
mov
imul
fidivrl
sbb
into
mov
and
dec
je
scas
outsb
loop
adc
stos
aad
hlt
fst
lock
jmp
icebp
fidivrs
mov
jae
lods
and
lea
idiv
lret
dec
fildl
data16
icebp
xchg
jno
xchg
leave
cltd
pop
cmp
mov
in
push
and
ror
jo
sub
shlb
add
sbb
sbb
cmp
add
mov
mov
loopne
fs
inc
push
fs
fdivrl
jo
loop
xchg
lahf
pop
pop
ss
jns
iret
bound
and
bound
leave
into
loop
inc
fidivs
adcl
testb
dec
dec
scas
mov
inc
jecxz
or
aaa
andl
jno
and
sbb
add
dec
sub
pop
sub
jbe
leave
dec
sbb
daa
mov
pop
xchg
cwtl
push
fiaddl
mov
mov
xchg
inc
ja
jp
mov
int
add
sbb
cmp
mov
arpl
adc
mov
sub
jns
and
leave
imul
cmp
jae
adc
ss
xor
out
pop
int
pop
add
xor
add
xorb
mov
sub
sbb
stos
arpl
js
lods
pop
dec
js
jmp
mov
inc
je
dec
imul
xchg
out
ret
xchg
sahf
mov
pmaxub
or
movsb
mov
xor
stos
xor
in
cli
cltd
imul
test
sbb
into
inc
pusha
or
cmp
mov
jg
call
es
ja
out
sti
outsl
add
lds
sbb
sbb
cmp
mov
mov
dec
jbe
adc
shl
xlat
out
and
test
and
mov
aad
lea
fs
test
arpl
pop
pop
outsb
mov
push
xor
mov
cmc
pop
jb
xchg
arpl
cltd
aam
repnz
adc
daa
lret
inc
jle
dec
or
and
pop
pop
adc
pop
and
sbb
popa
xor
rcrb
jb
int
ret
aad
mov
sbb
xchg
push
and
ds
mov
aaa
xchg
fwait
sub
gs
push
inc
adc
ss
stos
movsl
fstpt
cltd
jp
imul
out
lds
inc
sub
push
mov
dec
mov
push
adc
jge
jecxz
or
icebp
and
mov
repz
std
mov
ret
mov
hlt
mov
sbb
out
jo
gs
jle
mov
add
mov
push
mov
add
pop
push
mov
out
das
jnp
into
mov
pop
shll
nop
mov
push
xchg
sbb
pop
dec
jnp
std
sbb
xchg
xchg
sbbl
add
insb
testl
jmp
xchg
xchg
lods
js
loopne
xchg
jo
test
dec
insb
rcrl
mov
jo
cltd
jns
ljmp
xchg
lea
decl
stos
loopne
push
sti
int
js
mov
lea
test
out
dec
or
int3
inc
jecxz,pn
addr16
stos
cmp
jns
shl
sti
pop
ror
add
add
rcr
andb
cltd
pop
aam
add
mov
jmp
insl
int3
insl
xor
ror
ja
mov
lods
cmp
xchg
std
jg
loopne
pop
aaa
cmpsl
xchg
sbb
or
aad
hlt
int
xlat
jl
cmp
push
inc
icebp
fwait
mov
cltd
icebp
fidivs
mov
jns
test
repnz
ja
lods
lods
push
lods
out
push
add
dec
adc
jg
imul
xlat
dec
inc
out
repz
mov
jmp
push
cmp
xchg
clc
sbb
dec
and
flds
sbb
dec
mov
pop
or
test
imul
jmp
int
in
adc
pop
pop
rorl
int3
mov
sbb
es
pushf
jle
add
push
insb
mov
mov
and
xor
push
nop
xor
lret
mov
cmovl
push
pop
stc
enter
lret
adc
loop
or
fcom
add
jno
jne
pop
popa
dec
mov
cwtl
inc
lock
cmp
cmc
add
jmp
mov
adc
push
cmpsl
xlat
in
jne
repz
loopne
mov
outsb
shll
jne
and
push
js
lods
bound
inc
cwtl
test
inc
mov
add
cwtl
push
shl
rcrl
fcmovb
aas
push
stos
add
and
mov
popf
push
jmp
jg
loope
fisubrs
arpl
mov
cwtl
fbstp
lea
mov
dec
call
ljmp
loope
pop
or
push
cli
sub
jmp
bnd
pop
das
jmp
and
push
pop
xchg
mov
and
or
pop
jno
aam
fists
cld
cmp
sbb
add
xchg
mov
push
aam
sbb
inc
lea
stos
lret
and
adc
or
test
pop
xchg
mov
scas
add
arpl
outsb
push
add
out
jmp
jge
fistpll
push
mov
addr16
dec
xchg
lret
sbb
out
inc
cmpsl
subb
mov
mov
mov
cmp
pop
sti
bound
push
imul
ret
sbb
push
filds
sbb
loopne
gs
adc
outsl
pop
testl
or
jg
push
dec
pusha
dec
lcall
mov
add
subl
int
ja
push
hlt
mov
push
scas
fbstp
dec
xor
adc
daa
pop
dec
cmp
pop
mov
dec
mov
out
inc
shll
push
add
data16
cmp
loope
mov
mov
jl
mov
enter
ljmp
dec
lods
fcmovnbe
push
test
adc
loop
addb
std
mov
nop
testl
add
jp
jo
lods
test
jnp
ret
inc
fdivl
xor
gs
jmp
adc
outsb
sbb
mov
sub
out
aam
jo
aam
rcrb
fsub
sub
mov
rcrl
rorb
xchg
xchg
mov
sbb
xor
std
add
scas
js
mov
jbe
adc
and
jg
dec
or
push
xchg
jmp
adc
dec
inc
adc
int
dec
sarb
lret
or
adcb
repz
stc
testl
xor
xchg
adc
inc
and
nop
adc
xor
jg
mov
cmp
xor
sbb
jns
frstor
rol
and
sub
es
push
cmp
clc
scas
adc
dec
sub
test
push
mov
int3
ret
sahf
roll
mov
pop
pop
shlb
in
fildl
lret
xchg
jp
jnp
lcall
stos
sbb
les
push
sbb
ljmp
insb
xchg
jl
add
ret
mov
fisttpl
rorl
fucomi
cmp
and
mov
inc
add
outsb
imul
dec
xor
mov
adc
lods
lock
outsl
jb
int
mov
repz
pop
je,pn
fbld
stos
mov
jmp
xchg
int3
jbe
mov
roll
les
insl
add
inc
out
fwait
wbinvd
repnz
addr16
cld
mov
fidivl
imul
movsb
imul
xchg
jg
mov
test
in
hlt
es
add
movsb
dec
into
inc
lods
xchg
das
jb
jg
sub
out
jge
lcall
insb
popa
cli
sub
int3
and
inc
in
insl
imul
and
test
push
mov
fisubrs
dec
dec
mov
cmpsl
daa
jno
and
movsb
cmpsl
cmp
mov
hlt
das
movsb
push
cmc
aaa
sbb
sahf
jnp
loope
movsb
adc
lahf
sub
cld
dec
imul
inc
sar
int3
sti
sub
scas
adc
addr16
push
repz
mov
pusha
push
push
je
dec
add
fs
ret
jmp
popf
aaa
lods
imul
xor
push
mov
mov
push
or
ret
mov
negb
adc
add
xor
sub
movsb
addl
cltd
movsb
out
sub
pop
sub
push
std
mov
xor
std
dec
dec
test
inc
idivb
leave
imul
stos
inc
fdiv
je
cmp
lea
cmp
pushf
or
xor
popa
movsb
push
pop
imul
or
fiaddl
xor
and
rol
das
or
mov
lcall
aad
and
iret
sub
push
and
lret
xor
inc
jnp
imulb
int
out
test
pop
xchg
xchg
add
mov
adc
sub
add
dec
iret
xchg
add
cmp
lock
fstl
lods
pop
mov
hlt
bound
inc
shlb
mov
sub
dec
sbb
sbb
xlat
pop
adc
pop
mov
movb
out
mov
mov
leave
jbe
mov
sbb
dec
mov
popa
mov
lods
add
xor
xchg
mov
shrb
addr16
xchg
std
inc
xchg
imul
aas
pushf
or
outsl
adc
xor
xchg
loop
daa
icebp
lret
fisttps
jmp
mov
add
leave
pop
out
or
idivl
pop
lods
xchg
adc
ret
sbb
adc
test
movl
fs
sub
in
jmp
addb
add
frstor
je
xor
icebp
in
in
hlt
bound
jo
test
xor
xchg
subb
nop
roll
dec
in
btr
pop
lcall
leave
cld
sbb
mov
pusha
into
jge
sbb
lcall
lret
or
insl
mov
in
push
cmp
rcrb
sbb
outsb
mov
mov
faddp
sbb
push
shrl
cmp
scas
fisttpll
insb
fstpt
inc
add
div
fstpt
es
cmp
add
adc
mov
pop
test
addr16
xor
dec
pop
int
in
cmpl
leave
fdivl
ds
adc
mov
pop
jle
push
lods
ljmp
fistpl
push
jle
pop
lods
sub
scas
and
push
jp
xor
mov
jl
bound
sub
rcl
scas
xchg
jecxz
push
jg
lret
sub
in
jg
aas
jge
dec
fdivrs
call
jg
je
movsl
rol
inc
orl
lock
in
test
fldenv
fdiv
ljmp
fldl
es
jae
cmpsl
outsb
aam
lea
pop
lret
andb
gs
sti
jmp
xchg
and
add
jns
and
and
lock
mov
scas
loop
inc
test
lcall
jp
cld
je
ficomps
test
aad
icebp
mov
fnstcw
cli
lret
cmp
fsubrs
mov
fnstsw
sub
test
jns
lahf
and
stos
lret
das
xor
sub
push
lods
rorl
iret
popf
fcmovb
sbb
icebp
inc
lds
lret
dec
jae
pop
loop
pop
or
jg
sbb
aad
dec
es
dec
push
cmp
data16
aas
sub
jle
jge
pop
mov
xchg
sbb
aam
mov
int3
movl
fcoms
jg
mov
std
and
jmp
sahf
jle
cwtl
sub
push
and
cmp
dec
pop
outsl
sub
pop
lock
lahf
dec
mov
int
and
push
mov
insl
jg
out
xchg
test
and
sbb
mov
jo
es
fwait
ljmp
mov
aas
adc
and
mov
jne
mov
stos
xchg
mov
push
mov
jle
loope
ret
ret
notb
dec
xor
in
idivb
xor
mov
fistpl
dec
jns
fildll
xchg
pop
aad
mov
mov
sbb
add
jg
mov
add
mov
and
sub
fimull
mov
adc
pop
aad
jp
add
pop
add
movsl
sbb
push
mov
pop
jmp
insl
mov
daa
in
sub
push
jae
sub
xor
inc
mov
aas
sbb
and
xlat
add
sub
push
arpl
xor
aad
in
pop
sbb
out
mov
mov
cmp
out
inc
rorb
scas
dec
or
pusha
mov
ror
das
sbb
add
dec
xlat
lds
cmp
enter
dec
lahf
jp
rorb
fcmove
inc
sarb
cli
leave
loopne
ret
lock
scas
mov
adc
push
mov
push
fs
mov
fisttpl
cmp
adc
icebp
mov
lret
pop
outsl
lods
jecxz
sub
divb
lds
repnz
pop
lock
ret
subl
in
sbb
out
pop
nop
cld
xchg
or
mov
scas
jmp
or
mov
dec
xchg
cld
sbb
cmp
stc
loopne
sbb
sub
out
loope
cmp
inc
jne
dec
fcom
stc
not
movsl
clc
or
loop
and
adc
mov
dec
add
sbb
movsb
and
inc
or
xchg
dec
sub
in
dec
xchg
imul
cmp
test
mov
nop
scas
loop
sahf
out
pusha
xchg
sbb
in
popf
sub
xor
push
mov
mov
inc
jg
xchg
dec
xchg
jle
mull
cmpsl
inc
into
xor
jge
push
push
repz
out
jae
and
out
add
sahf
fs
inc
push
stos
aas
icebp
cld
std
cmp
fists
xor
jno
movsb
rclb
push
pop
and
int
add
add
loope
mov
jnp
decb
out
sbb
dec
fcmovne
hlt
mov
scas
addr16
std
out
daa
aas
inc
ss
lcall
push
outsb
or
and
and
lcall
or
cmp
xor
fidivrs
add
pop
repz
sbb
ucomiss
call
cmpsl
xor
push
mov
add
cmpsl
fmuls
stc
ja
je
add
dec
insl
push
mov
ret
frstpm(287
xchg
adc
in
scas
adc
mov
cmovb
in
mov
mov
stos
ja
ja
jge
dec
pop
lea
pop
inc
insb
pop
xor
hlt
das
mov
cmpsb
add
lcall
mov
jnp
into
lret
mov
add
cmp
outsb
jmp
push
sub
jnp
lahf
adc
dec
popf
xchg
insl
push
in
push
or
jne
push
push
mov
sbb
daa
xor
push
ret
sbb
rolb
adc
or
jle
push
int
pop
jle
flds
mov
jo
cltd
stos
sbb
scas
mov
inc
cmp
es
mov
pop
or
pop
mov
fistpl
repnz
pop
jb
aam
addr16
mov
inc
mov
lahf
adc
inc
push
push
scas
pand
filds
dec
ds
movsb
jno
xor
shlb
mov
add
lock
ja
mov
sub
insl
mov
inc
jge
gs
data16
jae
mov
orl
dec
pop
scas
lret
jmp
push
push
arpl
xorb
outsl
das
add
mov
pushf
xor
daa
push
lods
sub
iret
dec
add
fisubl
push
movsl
adc
or
arpl
fcoms
and
fwait
into
inc
mov
jle
pusha
mov
mov
iret
mov
data16
call
lret
sti
inc
inc
std
sti
jmp
in
ljmp
dec
fs
shll
daa
in
js
sbb
imul
xchg
les
fcomp
mov
es
ss
leave
pop
negl
rol
insl
fildll
ss
enter
dec
rorl
lds
fdivp
in
jl
bswap
mov
jb
filds
rcr
test
loopne
shlb
cld
add
inc
mov
and
mov
dec
mov
add
push
test
push
filds
inc
sub
mov
aaa
xor
scas
loop
dec
inc
jmp
add
jo
lret
mov
pop
adc
lods
dec
in
inc
mov
mov
addl
jb
xlat
fisubs
fistpll
push
mov
cmp
fdiv
flds
outsb
xchg
add
daa
lea
pusha
mov
shll
pop
cmp
call
icebp
mov
lds
xchg
jae
and
stc
sti
push
out
popl
out
and
lahf
and
jecxz
repz
jge
imul
stos
jl
sbb
frstor
mov
stos
xchg
sbb
jg
xchg
push
sub
and
mov
sbb
loopne
out
pop
arpl
lahf
sub
cld
sbb
push
fadd
enter
in
rcl
xchg
iret
clc
pushf
jo
push
aaa
mov
das
sbb
cwtl
inc
aas
bound
jae
xchg
leave
lock
test
adc
dec
xor
push
mov
daa
call
mov
lcall
sub
pop
push
sbb
lds
pop
pushf
sub
adc
and
inc
mov
sub
popf
movsl
shlb
popf
push
pusha
lds
leave
stc
mov
test
out
and
nop
mov
cmc
data16
mov
fcom
push
or
inc
ljmp
and
xlat
stos
dec
jmp
xchg
enter
cli
dec
inc
sbbl
cmp
pop
mov
popa
aas
or
and
daa
pop
int3
push
popa
fldcw
in
or
lahf
mov
push
xorl
cmpsb
lcall
add
fwait
andl
jae
or
out
xchg
test
in
adc
and
mov
xor
aas
xor
jp
push
iret
mov
std
mov
into
out
xor
ds
ds
js
or
sahf
mov
mov
adc
int
sbb
jl
inc
lock
mov
pop
out
pop
xor
push
rolb
xchg
and
jecxz
fdivrl
pop
hlt
inc
in
cwtl
inc
adc
int
movsl
cmpb
mov
call
fsubr
xchg
pop
es
push
xchg
push
adc
jbe
or
pushw
scas
test
jge
dec
mov
enter
ret
mov
mov
ds
test
daa
stos
mov
ss
dec
push
and
icebp
mov
pop
test
aaa
push
push
rcrb
shrb
mov
movsl
mov
fcoms
aam
rdrand
mov
dec
and
inc
lcall
loop
stos
sbb
mov
fwait
mov
or
outsb
mov
push
mov
mov
add
ss
stos
mov
test
dec
inc
or
sbb
clc
sbb
cmp
stc
inc
lret
cmpsl
xlat
mov
jp
pop
inc
xorb
cmpl
lret
outsl
fwait
inc
inc
xchg
sbb
cmp
sbb
addl
xor
lds
mov
into
cli
fistl
sub
xchg
ja
sub
rcll
jno
in
in
push
and
adc
cmp
sub
push
sbb
sub
fistpll
jae
lods
mov
jl
or
adc
cwtl
push
xchg
mov
fdivs
jnp
mov
call
and
rol
mov
dec
add
xor
mov
loopne
js
addb
cld
fistps
retw
cwtl
or
cmp
mov
inc
mov
inc
xchg
or
or
pop
enter
inc
gs
mov
inc
fisubs
mov
xchg
cmovne
adc
adc
xchg
jmp
dec
rcrb
mov
loope
outsl
iret
jecxz
and
movsl
xchg
cmp
loop
cmp
lcall
addr16
imull
inc
mov
mov
test
mov
mov
rorl
sbb
adc
decb
cld
bound
imul
xchg
sub
adc
std
frstor
push
mov
lods
jno
test
add
mov
nop
xor
add
bnd
dec
sbb
cmp
cmpsl
or
shrl
xor
inc
jle
leave
xor
pushf
cmpxchg8b
enter
das
and
mov
pop
inc
sub
cmp
hlt
jge
ret
pop
mov
inc
pop
push
fcmovbe
push
shlb
jo
cmpsl
out
lock
and
out
xchg
adc
xlat
imul
aad
divl
xor
out
test
cli
or
add
jne
or
or
pop
mov
xor
cmp
scas
cmpsb
jmp
test
mov
ficomps
dec
insl
inc
call
rcll
jp
mov
add
or
cmp
sub
and
or
aad
addr16
jo
icebp
shll
and
outsl
cmp
pop
sbb
xor
xchg
cs
push
add
lods
jb
cmc
mov
jb
into
gs
xor
ljmp
out
pop
lods
stos
shrl
lock
jmp
into
cltd
inc
xchg
testb
es
cli
stos
cld
xchg
sub
mov
sub
packssdw
addr16
rcll
xor
das
rclb
inc
les
cmpsb
sbb
ds
enter
cli
push
and
into
outsl
cmp
pop
ret
adc
sbb
dec
mov
mov
int
mov
or
push
jl
pop
adc
pop
mov
xchg
mov
popf
jle
or
into
mov
and
dec
and
mov
jle
mov
mov
add
mov
jecxz
scas
xchg
push
adc
pop
mov
clc
adc
test
out
mov
sbb
test
in
lods
je
add
or
mov
movsl
iret
lea
add
add
shl
jae
cmc
cmp
sbbb
mov
sbb
sbb
and
fisubrl
popa
lods
xchg
mov
repnz
or
or
movsl
cmp
jae
test
popa
and
leave
lret
mov
daa
adc
cmpl
fsubl
jo
insl
push
enter
or
pop
dec
inc
dec
pop
pop
dec
push
xor
add
movsl
fnsave
arpl
fldcw
mov
xchg
bound
outsl
repz
movsl
or
scas
cs
lret
mov
loope
cs
dec
mov
mov
imul
jmp
in
push
shll
lea
xor
jmp
xor
loopne
pop
scas
out
orb
insl
rcrl
push
jbe
mov
jo
adc
dec
sbb
mov
test
jne
int
paddsw
cmp
mov
dec
jle
daa
inc
lds
sahf
add
push
movsl
cmc
mov
rcr
fdivr
repnz
jno
mov
insb
push
xor
ret
ffreep
adc
mov
fdivrl
or
lods
inc
scas
sbb
js
out
lds
mov
add
mov
data16
jmp
push
test
clc
lret
mov
xor
inc
fwait
add
mov
popa
mov
jecxz
testl
in
mov
jl
or
inc
stos
int
fadds
inc
xor
mov
push
shlw
adc
test
scas
roll
jl
and
fwait
mov
cltd
lods
mov
lods
or
movl
js
jmp
imul
mov
mov
inc
es
int3
mov
fcmovnu
movsb
dec
scas
ret
imul
stc
loop
xchg
jae
repz
xchg
aaa
mov
jne
mov
push
imul
inc
mov
dec
add
and
sbbl
js
pop
out
repnz
inc
xchg
ljmp
xchg
bnd
xchg
add
mov
add
stos
lock
out
out
popa
jmp
in
std
in
mov
in
or
mov
mov
notl
repz
xor
test
push
clc
pop
cltd
or
xor
dec
pop
jl
addr16
cld
sbb
add
adc
stos
mov
push
addr16
daa
es
data16
mov
scas
pop
jle
out
mov
pop
jns
in
std
add
bound
sbbl
add
mov
inc
add
or
mov
in
cmc
adc
jo
pusha
ret
enter
outsb
and
sub
aad
bound
clc
adcb
xor
mov
sub
repz
xor
inc
pop
icebp
test
aas
jno
andl
xor
jg
pop
sub
add
push
clc
mov
push
xchg
je
cmpsb
mov
cmpsb
insb
iret
push
sub
xchg
out
cmp
icebp
inc
addl
xor
add
or
add
int
mov
movsb
aad
mov
inc
je,pn
js
cwtl
ret
jp
cmp
and
outsb
xchg
pop
test
ja
adcl
and
xor
daa
test
cwtl
repnz
sbb
call
cmp
in
insb
fldl
repnz
push
mov
ficoms
sbb
dec
dec
mov
jne
test
dec
cmp
loope
insl
jno
lret
mov
jno
jmp
insb
dec
pop
and
adcl
aad
fwait
xchg
dec
mov
pop
xor
sbb
or
sbb
inc
aas
cmpsb
pushf
sbb
cltd
aas
dec
bound
or
je
insb
sbb
icebp
loope
add
add
sub
fsub
imul
dec
fildll
pop
andl
inc
lcall
mov
cmc
outsb
pop
dec
data16
push
fistps
adc
loopne
out
sbb
ret
addb
es
int3
mov
test
fldl
repnz
div
and
xor
cmp
xchg
dec
and
popa
add
shlb
pop
pusha
fidivrl
sub
mov
push
inc
and
sarb
int
add
jb
psadbw
jecxz
shlb
shll
fistpll
push
add
xchg
cmp
sbb
pusha
push
data16
sarl
aas
cmp
cmp
sub
and
mov
gs
mov
mov
push
into
pop
inc
insb
test
pusha
cli
xchg
sbb
bound
jl
push
mov
xchg
sub
mov
gs
mov
xchg
or
mov
ja
std
adcl
cmp
test
or
movsb
mov
scas
push
jb
scas
aad
push
add
xlat
pop
push
je
lea
scas
rcll
inc
push
lds
jne
inc
inc
mov
scas
mov
push
add
mov
push
pop
fwait
nop
mov
fcompl
ret
shll
pop
pushf
aad
stos
scas
adc
add
aas
or
pop
sub
push
push
sahf
adc
mov
int
add
mov
push
jle
popa
pop
rorl
cmpsl
add
ficompl
cmpsb
adc
gs
paddw
add
add
push
loopne
push
pop
ficompl
adc
clc
dec
daa
lret
adc
cmc
xor
insl
mov
data16
je
bnd
xchg
cmp
add
es
in
test
and
mov
hlt
into
ret
ret
scas
lea
sbb
and
mov
xchg
jl
sub
push
inc
adc
adc
adcl
lahf
lods
pop
daa
es
fstpl
mov
iret
fisttpl
addr16
inc
out
or
fsubrl
push
sub
sub
mov
xchg
sbb
shl
stc
sbb
mov
cmp
push
cmp
fbld
dec
lahf
out
inc
sub
popf
xchg
aad
push
mov
repz
inc
or
pop
shll
push
addl
jge
jnp
mov
imul
mov
hlt
ds
lods
sub
fwait
or
ret
data16
or
sbb
outsb
lods
add
mov
pushf
insl
jo
adc
lret
repnz
push
es
xor
test
xor
adc
cmc
bound
andl
adc
or
lds
pop
pop
sar
push
ss
mov
mov
mov
lret
imul
dec
inc
loop
es
int3
sbb
nop
pop
ret
test
imul
push
adc
pop
mov
jns
sub
lea
push
fwait
addr16
std
xor
mov
xor
daa
push
lods
add
out
popf
push
sbb
mov
daa
sbb
mov
movsb
add
cmpsl
divb
xchg
dec
nop
sahf
cs
popa
pop
pop
pop
subl
xor
dec
adc
xchg
jmp
add
sbb
pop
fcoms
bound
pop
push
mov
in
mov
mov
mov
fucomi
jnp
adc
es
aas
das
push
inc
sub
js
xor
cmc
xor
pop
add
nop
mov
and
adc
hlt
cmp
into
emms
xor
in
jge
lods
decb
cmp
push
cmp
xchg
movsb
mov
cmp
sarb
cli
je
out
lahf
in
cmpsb
out
notl
adc
shl
inc
hlt
cmp
add
in
fsin
cmp
adc
xchg
jns
mov
cmpsb
xlat
fbstp
jle
mov
xor
lock
xchg
shll
lods
scas
pmullw
mov
outsl
add
and
sbb
jb
sub
xor
movsl
fwait
test
stc
faddl
push
test
xchg
xor
lods
xchg
addr16
mov
loope
int3
insb
pusha
movsl
repnz
jg
lods
jbe
inc
scas
mov
mov
add
or
push
in
mov
jno
pushf
outsb
pop
fwait
in
and
rcrb
adc
inc
ret
and
mov
pop
mov
pop
lcall
cmp
lahf
or
xor
mov
dec
rcll
mov
jp
jge
mov
fistl
sbb
cmpsb
addb
jno
xlat
popa
lock
jae
jbe
ds
stc
popa
repz
mov
orl
mov
or
call
mov
addr16
jbe
pop
ret
jmp
fsubr
sub
je
call
clc
out
xchg
xchg
mov
xor
test
sub
xor
das
mov
leave
xor
xchg
xchg
mov
adcb
xchg
movsb
push
in
call
pop
rclb
imul
push
ret
daa
shrl
push
loop
dec
xchg
xchg
jno
call
in
push
sbb
int3
repz
pop
pop
or
sbb
or
aas
mov
js
jbe,pn
add
in
cltd
out
enter
sub
insb
xchg
inc
cmp
lock
push
push
add
xor
jnp
ljmp
aad
pop
sbb
lock
fnstsw
sub
mov
and
xorl
arpl
out
push
dec
popf
cmp
cld
xchg
test
push
out
mov
testl
cmp
scas
jae
adc
jp
pusha
mov
hlt
mov
cmp
push
dec
xlat
jb
add
ss
call
dec
sub
aaa
ja
lret
pop
push
and
xchg
or
ret
cltd
xor
fs
add
dec
aaa
jb
aaa
mov
jle
cmp
daa
cmp
sarb
and
loop
dec
enter
inc
mov
mov
mov
sub
xchg
push
sbb
fdiv
out
dec
or
sbb
mov
mov
test
push
test
xchg
jnp
sbb
enter
push
andl
push
pop
movsb
or
fcomps
jo
jnp
loopne
ljmp
call
cmp
dec
push
movsl
pop
mov
cli
add
push
dec
cmc
out
mov
aas
jmp
add
dec
push
call
sar
lret
mov
loop
pushf
pop
ss
push
sub
sbb
mov
adc
clc
popf
jnp
mov
ss
mov
add
outsb
sbb
pop
mov
xor
mov
adc
test
adc
jbe
fnstsw
dec
ja
adc
mov
jmp
mov
push
loopne
arpl
in
pop
out
sbb
filds
loopne
push
scas
shll
cmp
les
pusha
inc
xchg
inc
xor
fdivrs
sbb
fldcw
mull
pop
jnp
cmpsl
dec
ror
movsl
fwait
push
scas
out
mov
add
and
mov
dec
repz
cmp
adc
lcall
adc
loope
outsl
orb
pop
xchg
jb
lods
popa
push
sar
and
mov
push
add
xor
ss
or
test
xor
imul
ljmp
mov
insb
pop
adc
add
je
jmp
pop
adc
dec
xor
data16
ror
inc
pop
int
ret
sbb
add
push
add
mov
stos
jns
repz
testl
les
fstpt
ret
jl
into
insl
sub
xchg
lret
dec
cld
test
popa
cmpsb
insl
mov
jmp
jmp
mov
mov
adc
ret
mov
pop
out
lcall
xchg
dec
push
add
jecxz
cmpsb
xchg
pop
push
cmpsb
mov
ss
lcall
mov
sub
cs
js
leave
and
test
iret
jnp
cwtl
xchg
mov
out
test
mov
pop
scas
push
xchg
mov
sub
dec
pop
mov
push
push
push
push
pushf
ret
cli
mov
jbe
pushf
scas
fs
sbb
jge
pop
xorl
sub
pop
inc
pushf
in
rcr
clc
lahf
jnp
out
or
cmp
and
dec
cmpsb
mov
ret
movsl
dec
aaa
clc
push
push
lret
inc
or
push
repnz
sbb
lods
xchg
add
mov
cmp
push
jno
pop
cmpl
test
dec
push
pop
sub
xchg
mov
add
xchg
out
cmp
xor
icebp
imul
roll
dec
xchg
scas
shlb
sbb
xchg
hlt
sti
test
cmp
imul
xor
fyl2xp1
sub
cmpsl
mov
es
lea
loope
mov
fs
jnp
rcr
outsl
out
jg
xor
sahf
sub
rol
testl
dec
div
out
das
mov
add
test
lahf
scas
xchg
decb
lret
adc
or
push
and
adc
add
push
dec
cmp
sub
jmp
or
sub
fistpll
mov
pop
fwait
inc
add
adcb
mov
lock
lea
xchg
mov
adc
or
jl
cmp
jno
mov
xchg
mov
push
loopne
dec
movb
inc
lds
mov
xchg
sti
movl
sbbb
cmp
xchg
testl
pop
insl
and
imul
inc
adc
pop
movsl
pop
xchg
testb
sub
and
pop
sub
mov
outsb
xchg
out
lahf
and
or
push
sar
and
mov
mov
repnz
push
and
sbb
iret
sub
or
mov
aas
dec
shlb
clc
jbe
xchg
inc
ds
mov
fcomps
mov
xor
ljmp
pop
sub
lea
pop
popa
mov
jmp
aam
inc
negb
mov
les
in
jo
push
dec
xor
addr16
orl
cwtl
jb
in
outsl
clc
nop
fwait
push
loopne
mov
sbb
sub
jp
jp
sbb
loop
cltd
jne
add
lock
xor
adc
adc
or
pushf
loope
test
int
or
dec
jb
test
mov
jo
cmp
data16
pusha
add
int
jnp
cmc
out
test
xchg
push
xorps
dec
sub
in
inc
adc
cmpsl
ret
scas
inc
mov
adc
icebp
inc
sub
fcoml
daa
fmull
pop
aas
into
push
je
mov
pop
sbb
sub
lds
push
aam
pop
jmp
fnsetpm(287
sbb
mov
mov
pop
push
shl
xor
cmp
xchg
mov
dec
int3
jbe
fisttpll
push
in
fs
outsb
mov
adc
mov
mov
jg
fdivl
and
adc
js
sub
call
mov
insl
int
mov
inc
xchg
jp
sub
jg
iret
cmp
in
orl
lcall
lret
jle
pop
mov
and
in
jns
jno
pop
daa
ja
lret
stos
mov
popf
dec
ss
xchg
mov
jb
leave
bound
adc
inc
ds
call
mov
mov
into
pop
jge
lods
imul
mov
aam
in
int
mov
pop
xchg
pop
scas
fiaddl
fstps
mov
inc
cmpsb
mov
inc
xchg
adc
aas
push
outsl
jbe
int
add
outsl
jg
flds
in
push
divl
inc
xor
ljmp
gs
jle
mov
push
adc
sbb
jecxz
out
addl
push
cmp
xchg
mov
mov
lcall
mov
test
or
xchg
xchg
outsb
cmpsl
cmp
or
test
xchg
xor
lret
fs
outsb
cs
inc
int3
mov
scas
xchg
jg
fmul
stc
xor
lods
mov
inc
data16
push
or
out
dec
mov
pop
sub
dec
xor
fcmovnu
stc
push
movsl
xor
mov
dec
and
and
xor
xchg
daa
repz
push
sarl
or
ficoms
imul
lods
xor
repz
jbe
jbe
lret
adc
sarb
mov
js
jbe
pop
mov
dec
aam
cltd
data16
movsb
xlat
add
add
aam
cmpsl
frstor
xchg
sbb
mov
xor
inc
and
adc
das
add
push
sub
mov
cmp
pushf
and
mov
fs
test
adc
lahf
mov
imul
das
or
shll
adc
xchg
cld
mov
push
mov
enter
pusha
idiv
xor
ja
dec
and
pop
fnstenv
fldenv
mov
in
lret
adc
and
mov
push
cmp
or
and
jo
aad
faddp
xorl
mov
lods
or
fs
mov
lahf
out
test
popf
pop
andl
cli
adc
loop
xchg
test
ljmp
in
imul
arpl
add
addr16
rcrb
lret
fstps
call
dec
into
add
cmp
movsb
sbb
je
inc
dec
push
sub
enter
lock
fdivrl
mov
add
xchg
mov
xchg
push
in
int
jb
xchg
jle
sarl
in
fisubrs
xor
fmull
jp
sbb
imul
stos
sbb
cmp
push
inc
and
adc
bound
in
sbbb
icebp
adcb
pusha
stos
imul
fld
repnz
fcompl
in
fisubrl
and
int
lcall
addr16
cmc
jae
das
bound
repnz
ret
lea
sub
sbb
lods
fldt
pop
mov
mov
subl
push
pop
lcall
sar
dec
inc
push
scas
popa
dec
sub
jmp
jp
mov
jbe
xor
loop
cmp
and
pop
icebp
std
rcll
jge
lret
orb
pushl
adc
cmp
cmp
repnz
call
enter
in
stc
add
fdivl
loope
int
mov
mov
fmuls
in
fdivl
arpl
inc
jecxz
call
push
pop
adc
gs
or
mov
or
mov
cmp
sbb
orl
dec
fwait
jg
idivb
mov
or
je
jmp
cmp
push
push
in
ds
or
sub
dec
mov
lcall
mov
mov
dec
cld
aas
sub
sbbb
sahf
mov
adc
fistpl
jmp
rcll
into
pop
add
scas
push
pop
lahf
lea
movsl
pop
in
cli
cmp
in
iret
fildl
psrlw
into
add
hlt
lock
pop
lahf
test
adc
rol
dec
dec
push
pop
imulb
pop
addr16
subl
div
mov
mov
insb
inc
stc
stos
mov
jne
lds
sbb
scas
ja
ret
outsb
add
arpl
lahf
and
push
jnp
xor
lea
add
add
lods
add
inc
jg
out
lods
xchg
popa
inc
sbb
adcb
lret
mov
xchg
data16
and
fsubl
es
fisttps
cmp
xchg
shll
xchg
pop
loop
jne
xor
movsl
es
jmp
pop
sub
std
sub
neg
cmp
jne
inc
subl
das
scas
push
mov
jb
lcall
fldcw
push
ficompl
lcall
and
push
sbb
fisttpl
imul
cltd
inc
dec
andb
mov
push
pop
in
dec
adc
fadd
aas
sbb
mov
ja
push
mov
subl
rorb
xor
repnz
xchg
mov
pop
jne
mov
add
xor
push
fisubl
jl
push
cs
sub
and
mov
mov
dec
arpl
loope
xchg
push
cs
bound
aaa
movsb
sbb
rcr
xorl
and
cmpsl
xor
outsb
mov
lds
sti
and
jp
dec
mov
push
or
in
jle
cmpsb
out
xchg
push
push
jae
pop
push
cmpl
test
iret
iret
dec
add
push
adc
push
repnz
pop
sbb
push
jb
scas
shll
push
inc
cmpl
jl
inc
repz
xchg
push
xor
frstor
xchg
repz
aas
arpl
lea
sti
movsb
jno
sbb
push
loopne
rol
add
movsb
or
lcall
imul
repnz
mov
sub
loop
je
sarl
enter
pop
mov
sbb
mov
push
mov
hlt
clc
mov
mov
xchg
fwait
add
add
pushf
lds
cmp
mov
insb
hlt
xor
out
xor
push
std
adc
daa
inc
stos
shll
lret
cmp
outsl
repnz
push
aas
cmp
push
ja
sub
xor
or
or
inc
je
int
fcompl
jg
pop
adc
sbb
rcl
pop
fmul
rcrb
in
mov
dec
es
sub
mov
cmp
jp
xor
rclb
inc
jb
add
pop
cmp
call
or
and
daa
inc
inc
enter
xchg
hlt
fidivrs
outsb
dec
add
mov
call
aad
nop
push
xchg
lea
inc
pop
aad
and
dec
add
inc
and
xchg
add
fidivrs
mov
in
push
std
jnp
test
or
mov
and
or
cmc
lods
xchg
push
popf
call
mov
fildl
mov
sub
fildll
jns
push
mov
jecxz
frstor
mov
enter
shrb
shr
mov
nop
pop
outsb
into
cmove
pop
jl
pop
dec
lods
bound
daa
mov
aas
mov
cmpsb
sub
push
daa
push
and
mov
sbb
cmp
hlt
pop
or
sbb
mov
aaa
data16
ljmp
ss
gs
fucomp
int
mov
pop
and
mov
or
and
xor
clc
gs
inc
stos
insb
es
aas
dec
mov
mov
dec
movsl
cmc
cmpsl
jg
or
dec
mov
les
movsb
add
mov
push
int
hlt
js
xorb
lods
xchg
sub
lcall
movsl
push
icebp
fcmovu
xchg
add
cmp
fldenv
add
shll
mov
push
xor
or
jmp
mov
adc
out
mov
xchg
add
scas
adc
movhps
dec
pop
ljmp
in
stc
lock
push
movsl
mov
sub
lret
sbb
jl
leave
outsl
sub
lea
clc
iret
push
cmpsl
push
pusha
push
cmp
fwait
addr16
mov
or
lock
movsb
push
sbb
xchg
mov
scas
mov
fmuls
mov
dec
mov
in
add
sbb
out
cmp
gs
jmp
fs
fmull
rolb
xor
pop
dec
pop
mov
imul
ss
jo
testl
clc
cmpsl
push
push
std
out
hlt
imul
adc
mov
sbb
xchg
cmp
mov
mov
and
jge
add
aad
mov
jmp
dec
loope
jecxz
adc
sbb
xor
sbb
jmp
xor
mov
and
push
cs
dec
push
push
cld
xchg
add
dec
loop
mov
lcall
ss
jle
dec
xchg
jbe
pop
movsl
stc
add
sarl
mov
test
test
mov
jmp
scas
lods
push
ret
push
jp
cmpsl
sahf
leave
jno
mov
xchg
xor
jns
adc
das
insl
aas
or
xor
add
out
popa
inc
sahf
fildl
pusha
mull
ret
fdivr
jbe
xor
aaa
push
ret
jbe
xor
mov
cltd
sarl
fcomi
nop
add
inc
dec
mov
push
in
mov
xchg
in
cmp
sbb
aaa
fstl
sub
arpl
mov
movsb
dec
sub
pop
xor
stos
xor
sub
adc
sub
popf
mov
jne
pusha
sbb
cli
push
stos
inc
push
dec
loopne
add
mov
mov
xchg
dec
into
mov
mov
aam
inc
ds
cmp
mov
in
in
ljmp
test
and
gs
mov
mov
popf
test
push
mov
shrb
add
sub
pop
jno
adc
scas
mov
xor
outsl
adc
out
jp
mov
stos
inc
daa
mov
xchg
insl
adc
jl
cwtl
add
ret
repnz
mov
push
lahf
ja
das
inc
pop
pusha
movsl
xchg
lds
add
or
insb
movsbl
popa
xchg
xor
add
scas
pop
stc
xchg
dec
add
jae
mov
push
cs
sub
sbb
aaa
ret
scas
jl
repnz
inc
ret
push
outsl
bound
pop
pop
je
repz
mov
push
push
roll
mov
mov
pop
in
movb
shll
test
adc
sti
sub
cmpsb
sbb
stos
mov
mov
push
icebp
loopne
gs
lods
cmp
enter
addb
pop
test
add
mov
jns
xchg
dec
jmp
loope
lods
fdiv
pop
xchg
fdivs
xchg
cmp
int3
pop
cmp
mov
cmp
mov
jge
jno
je
mov
insl
xor
sub
ljmp
mov
test
ror
dec
or
std
adc
clc
adc
sbb
mov
dec
mov
test
jmp
adc
loop
hlt
pushw
outsb
push
push
sub
mov
dec
je
aam
std
push
lret
sbbb
jecxz
ljmp
dec
cmpsb
ficoms
orb
jp
mov
test
xchg
sub
out
jmp
rorl
ret
in
sbb
ljmp
jp
ljmp
insb
jno
test
rcll
outsb
test
int3
jae
int3
in
pop
nop
out
xlat
jnp
fnstsw
arpl
push
jmp
repnz
lcall
xor
mov
xor
xlat
dec
add
aad
add
jmp
sub
lahf
xchg
and
cmp
out
aad
cmpsb
and
and
add
rcl
mov
in
or
sub
mov
in
in
cld
outsl
je
xor
lahf
addr16
xchg
add
mov
mov
insb
xor
loop
test
and
pop
roll
out
adc
xchg
mov
iret
test
ljmp
ljmp
push
mov
ret
cmc
pop
pop
or
xor
inc
sub
push
dec
cs
negl
enter
fnsetpm(287
jge
pop
cmp
ret
fwait
mov
mov
shrl
pusha
arpl
and
fistpl
dec
xchg
add
stos
jg
or
add
sub
test
mov
shll
inc
cmp
pushl
cmp
or
adc
xchg
dec
inc
inc
inc
sbb
movsl
mov
loopne
adc
adc
jmp
lea
aam
dec
ret
xchg
aad
pop
mov
and
push
repz
je
ret
mov
jg
pop
push
xlat
push
das
dec
push
inc
aaa
adc
bound
adc
pop
mov
mov
movsb
mov
mov
xchg
cmpsl
in
mov
subb
xchg
ret
ss
adc
jo
jns
ds
mov
mov
pop
cmp
stc
leave
dec
nop
in
mov
mov
dec
daa
aas
subb
clc
adc
popl
add
and
packsswb
scas
pop
or
sarl
push
mov
fcomps
sub
data16
aas
rcll
daa
push
push
adc
pop
filds
cmp
mov
xor
fwait
loop
cmp
adcb
push
inc
leave
adc
and
gs
repnz
jb
daa
insl
nop
cltd
stos
jae
adc
pop
jbe
push
fnsave
lods
pop
lcall
add
movsl
mov
mov
shld
sbb
jmp
jle
in
mov
jle
fstl
movsl
push
addr16
pop
lahf
scas
stos
dec
mov
arpl
adc
movsb
inc
jge
pop
loop
jecxz
xchg
pop
jbe
aas
les
dec
dec
jb
mov
xor
loopne
pop
xchg
ja
test
adc
mov
data16
jl
adc
cltd
int
popf
or
and
lahf
jnp
repnz
and
xchg
mov
push
inc
push
jmp
xorb
arpl
push
gs
ds
sbb
arpl
mov
call
and
jo
sbbb
fs
cmpb
scas
loopne
int3
push
jo
mov
mov
inc
data16
hlt
pop
outsb
sbb
les
dec
mov
mov
leave
pop
ljmp
cwtl
jg
or
loope
sbb
sub
int3
loopne
and
add
dec
sub
inc
pop
das
mov
iret
inc
jg
mov
inc
or
aad
jge
repz
fsubl
or
jnp
cmpsb
mov
fsts
fists
xchg
mov
dec
repnz
cmpsb
cld
cmc
popl
testl
imul
fidivrs
cs
inc
scas
fsubr
jne
int3
rorb
stos
mov
mov
add
jecxz,pt
int3
xchg
insl
inc
jns
lahf
inc
clc
sub
xlat
lods
jp
jbe
jo
or
pop
sbb
cmpsb
jmp
icebp
clc
mov
mulb
test
mov
mov
arpl
fs
nop
gs
cmpsb
into
fwait
mov
mov
adc
add
ss
push
and
js
add
lret
jno
fidivrs
insb
mov
cmpsb
sub
cmp
stos
lods
out
subl
mov
and
mov
xor
push
mov
adc
sub
mov
insb
jge
sbb
sbb
sub
lea
aaa
xor
mov
push
out
or
rorl
jle
jne
lret
mov
ret
sti
stos
mov
mov
xor
pop
fdivl
push
jo
popa
lods
add
jecxz
scas
sarl
push
mov
ret
in
mov
cmpsl
dec
jb
ret
cs
lods
cmp
dec
mov
adc
adcb
lret
in
jl
shlb
pop
dec
pop
popf
jg
imul
test
xor
aaa
add
pop
mov
sbb
jl
dec
cmpl
insl
cld
jo
sti
add
inc
scas
aam
or
das
and
jecxz
or
cmp
iret
lods
xor
mov
sbb
test
lcall
dec
insb
in
mov
loop
mov
out
add
xor
or
jo
mov
cmc
mov
pusha
fwait
cmp
popf
push
hlt
mov
sbb
adc
or
nop
mov
fcompl
xor
out
sti
lds
inc
add
sub
sub
or
enter
xor
or
pop
inc
cmp
iret
aam
jb
inc
fcmovu
jle
outsb
xchg
insl
add
pop
mov
pop
pop
cli
pusha
cmc
into
mov
xor
fs
adc
sub
mov
and
or
in
or
dec
and
repnz
je
mov
pop
mov
sub
clc
ss
fisubl
mov
mov
mov
in
jmp
stos
lds
push
or
inc
daa
popa
in
add
xor
add
fxch
inc
enter
push
std
mov
mov
jmp
sbb
push
lods
xchg
pop
out
inc
inc
aad
push
imul
std
push
xorps
ret
mov
in
lods
iret
loope
cmp
or
or
add
mov
iret
mov
xchg
or
mov
ds
mov
mov
cli
cld
popa
ljmp
xchg
cmp
pop
mov
adc
sub
pushf
sub
addr16
push
negl
test
add
or
xor
dec
dec
out
sahf
ds
jns
adc
cs
aaa
imul
andb
sbb
inc
cmp
scas
testb
and
mov
pushf
int
dec
aad
mov
mov
sti
xor
xor
mov
dec
js
mov
lods
cmp
shl
sbb
pop
lods
stos
mov
push
rol
xchg
insb
out
sarl
les
lds
fs
or
dec
jo
lahf
cmp
and
les
shl
hlt
sbb
push
mov
mov
adc
adc
ror
insl
test
shrb
or
fbstp
sbb
popa
outsb
pop
insl
inc
pop
ds
sub
movsl
out
fisubs
jnp
fadd
pop
push
jecxz
lds
mov
int3
fcmovnbe
push
stos
popl
inc
mov
or
xchg
sub
xchg
rcll
add
mov
xchg
fiaddl
jae
add
lret
pop
pop
lahf
movsb
pop
adc
xchg
and
call
xchg
jle
ret
sub
mov
xor
enter
stc
std
pop
clc
ja
cmp
ret
mov
in
adc
pop
jmp
add
mov
adc
out
pop
pushf
iret
std
jp
movsb
scas
adc
test
ss
out
mov
push
sub
out
mov
aaa
push
adc
shrb
jno
jp
pop
mov
fucomip
jp
fucompp
xchg
popa
sarb
dec
andl
mov
ret
adc
sub
in
dec
rol
popa
push
xor
stc
movsl
int3
push
adc
pop
mov
mov
xor
xor
stos
xchg
mov
or
dec
flds
repnz
leave
mov
ret
dec
pop
inc
sub
add
xchg
inc
jb
pop
add
repnz
std
int
mov
lods
push
test
aas
fidivrs
sahf
into
int3
xchg
inc
dec
inc
jno
sub
sbbb
jbe
mov
movb
ljmp
adc
ret
pop
int
pop
adc
jbe
add
push
jg
or
lods
adc
test
inc
sub
mov
lods
int3
movsb
leave
and
mov
pop
out
hlt
mov
sbb
cs
mov
xlat
xor
or
dec
ret
imul
mov
push
jns
add
pop
pop
je
ja
inc
jae
scas
add
daa
roll
and
add
sarb
jp
icebp
xor
test
cmp
cmp
push
mov
adc
in
xchg
jnp
loope
out
fmuls
sub
pop
dec
pop
push
dec
xchg
mov
add
int3
in
dec
or
aas
jno
push
jmp
es
cmp
stos
jle
rcll
or
ljmp
imul
xchg
out
lret
mov
jbe
lea
cltd
adc
aas
mov
pusha
divb
loopne
inc
fsubrs
pop
lock
push
xchg
push
mov
pop
outsb
popa
outsb
dec
cli
jo
repz
mov
dec
jge
push
aam
jno
and
add
mov
aam
jno
push
or
sbb
or
jno
push
inc
mov
xchg
pop
push
fists
popa
sub
fidivrs
cmp
add
std
shrb
xlat
dec
cmp
popf
nop
stc
and
jle
inc
cmc
push
scas
or
outsl
les
leave
fiadds
sbb
mov
jmp
mov
fucomp
sub
aad
push
stos
fcompl
rolb
xchg
mov
in
inc
mov
add
pop
pop
push
mov
cwtl
cmp
sti
mov
and
push
add
jno
mov
loop
xchg
xchg
insl
adc
xchg
fsubl
xchg
or
xchg
mov
stos
mov
out
aad
xchg
rcll
mov
decb
dec
cmp
cld
mov
pushf
cmp
les
clc
dec
scas
xchg
daa
divps
inc
arpl
cmpsl
ret
test
scas
arpl
sub
scas
and
push
mov
jbe
mov
sbb
aad
pop
cmpsb
adc
outsb
push
pop
ljmp
adc
dec
pop
mov
inc
mov
adc
cmc
cltd
dec
inc
mov
push
pop
call
push
int
lods
ret
and
test
xchg
xor
outsl
into
pop
push
pop
inc
mov
lods
jae
sar
popa
lods
loope
and
mov
dec
mov
cltd
pop
xor
pusha
lds
pop
xor
cmpsl
test
or
scas
mov
adc
push
js
inc
xchg
lods
out
jbe
mov
push
loop
fucom
dec
loopne
mov
ljmp
fldcw
out
int
sbb
outsl
jmp
mov
xor
push
add
mov
and
movsb
test
xchg
in
and
pop
xor
test
mov
adc
rcll
js
neg
test
or
adc
pop
outsb
sbb
adc
dec
xor
mov
int
scas
sub
sbb
or
adc
scas
sahf
sti
mov
fmull
mov
mov
movsb
adcl
dec
std
cmp
arpl
sub
jge
sbb
aas
mov
jl
mov
add
fcmovne
int
inc
addr16
sub
xchg
cs
aas
pop
in
cmpsb
jle
mov
je
fidivrs
cld
insl
outsb
mov
inc
in
mov
cmp
or
cmp
icebp
dec
test
ja
mov
xor
xchg
enter
dec
popf
push
je
stos
mov
shrb
add
mov
xchg
gs
pop
mov
shlb
mov
imul
call
cli
aad
jns
xchg
sub
and
gs
shrl
cli
daa
push
adc
scas
dec
pop
inc
inc
arpl
nop
inc
das
fistl
add
jle
js
imul
push
pop
xchg
gs
or
mov
test
pop
std
cmp
xlat
daa
pop
mov
sbb
jmp
lea
sub
jnp
test
dec
test
jns
pop
shll
sub
jmp
lea
mov
xor
clc
fsts
sbb
mov
push
push
test
xchg
in
or
xlat
xor
data16
out
ret
inc
aad
cs
jle
jne
dec
sub
jmp
push
mov
xchg
push
nop
xorl
roll
adc
xchg
mov
mov
arpl
adc
dec
pop
xchg
test
test
in
int
pop
pop
mov
adc
lahf
push
aas
mov
mov
scas
in
jo
adc
cmpsl
sub
add
add
and
pop
cmp
rcrb
adc
stos
mov
inc
negb
push
and
lahf
dec
cwtl
scas
into
jbe
mov
mov
les
nop
cld
pop
testl
xchg
scas
int
loop
cmpsl
pop
pop
cmp
insb
or
fildl
sbb
jno
pop
jle
cmp
out
add
dec
jmp
dec
in
sub
faddl
pop
fsubrs
lahf
or
jb
and
imul
sahf
cmp
test
sub
mov
xor
xlat
loopne
xchg
std
or
test
subl
fiadds
add
xor
enter
dec
add
sti
dec
cmc
dec
mov
jbe
pop
insb
dec
sbb
cli
icebp
int
lock
mov
aam
shl
and
jge
pop
repz
stos
dec
push
fistps
repnz
adc
push
int
xor
hlt
xor
ret
push
sbb
pushf
notb
es
int
insl
mov
or
andl
fcoms
and
cltd
xchg
imul
cld
jge
mov
jle
mov
gs
fdivr
mov
ss
cli
xchg
into
push
dec
rcrl
pop
and
loop
inc
sbb
jno
pop
mov
std
xchg
dec
scas
testb
push
and
js
lahf
push
push
fsts
shll
aas
cmp
mov
add
and
sub
arpl
mov
push
cltd
adc
mov
fdivl
sbb
fldenv
test
cmp
fcomps
xor
add
jle,pn
jb
or
mov
and
scas
and
lahf
ja
out
lds
aas
adc
xchg
inc
push
jne
in
aas
add
cli
mov
add
sub
cmp
or
outsl
test
or
jnp
in
sbb
xor
ret
push
mov
jne
decb
shll
ja
movsl
aas
aad
testb
imul
mov
insl
xor
enter
or
jb
push
push
dec
jae
test
mov
sbb
sbb
cmpsl
insb
cmc
aad
cmp
mov
mov
hlt
adc
jbe
repnz
sub
lcall
mov
int3
in
into
iret
fsubp
jp
xor
dec
mov
cmpsb
mov
and
sub
js
fiaddl
jg
ja
int3
iret
pop
insl
dec
scas
push
xor
mov
and
cli
ds
addb
stos
mov
push
add
and
pop
xchg
push
pop
push
scas
shll
int
cmp
shll
cwtl
pop
sub
xchg
rorb
cmp
mov
xchg
jno
jmp
xor
jle
repz
push
inc
lret
adc
push
scas
jne
das
movsl
popf
push
je
lahf
les
mov
insl
mov
lea
pushf
sub
in
add
sti
das
aas
jle
jo
mov
pusha
loopne
movsl
out
decl
lds
mov
in
sbb
jae
jecxz
test
cwtl
mov
pop
add
sarb
mov
andl
imul
in
in
pusha
pop
jecxz
sbb
cli
in
mov
imul
ror
mov
ss
pusha
ljmp
js
lret
pop
jbe
and
push
test
mov
xchg
push
add
sub
or
sbb
mov
mov
cmp
daa
sbb
mov
jno
lcall
mov
jp
fidivl
movsb
adc
sahf
and
cwtl
ljmp
lret
jo
xchg
xlat
dec
call
ja,pt
stos
xor
push
jbe
in
pop
int3
ficoml
sub
jno
push
mov
insl
fimuls
adc
mov
push
and
adc
pop
jecxz
pop
popf
or
sarl
hlt
and
fstps
jge
scas
sti
xor
iret
and
out
imul
inc
and
dec
mov
push
es
inc
inc
sbb
inc
xchg
fidivrl
xor
sbb
scas
dec
fwait
daa
mov
mov
inc
stos
in
pop
test
mov
mov
xlat
cmp
mov
cld
fs
aam
hlt
out
paddd
cwtl
mov
jo
in
push
sbb
rclb
or
sub
cmpsl
pop
cmp
in
movsb
mov
xchg
clc
mov
xlat
sub
sub
adc
or
or
imul
jns
and
mov
icebp
gs
and
dec
cmp
or
in
push
add
adc
jmp
hlt
adc
cmp
mov
push
imul
out
shlb
fisubrl
test
popa
test
arpl
mov
jnp
sbb
mov
cmc
add
lods
ds
cmp
cmp
add
jne
push
adc
cmp
in
out
jmp
push
outsb
dec
sub
iret
out
in
ss
jl
movsb
xor
sub
gs
mov
push
cwtl
test
imul
lds
add
sub
mov
mov
idiv
outsb
addl
jb
inc
stc
mov
std
popa
lret
or
daa
loope
ss
dec
call
sbb
sbbl
and
or
out
popf
jo
sbb
mov
aam
push
adc
sub
fwait
mov
jl
inc
and
lea
movsl
dec
out
inc
stos
push
mov
sbb
jbe
scas
ja
inc
pop
loop
pop
push
aad
fs
mov
push
mov
lds
loop
sub
dec
test
in
gs
mov
push
xor
repz
xchg
mov
jle
fs
stos
mov
outsb
cmp
maskmovq
negl
mov
cmpl
in
mov
dec
cmp
lock
or
cmc
ja
lcall
cld
push
out
mov
or
fisttps
jp
pop
mov
mov
mov
push
sub
filds
les
repz
loopne
inc
rclb
or
lods
repz
subb
xchg
cmp
lahf
xchg
mov
add
dec
subb
js
push
addb
repnz
ficoml
ja
cmc
xor
je
dec
and
sahf
mov
add
jmp
jecxz
and
andl
xor
or
cmpsb
pop
out
mov
lods
xor
jge
push
cli
or
mov
das
nop
aas
popa
nop
xor
stos
jle
inc
jg
repnz
lcall
in
mov
inc
imul
mov
mov
int3
mov
shl
es
mov
mov
fsts
int
sbbb
pop
push
or
hlt
mov
fistpl
addr16
mov
test
fiadds
pop
cmp
imul
arpl
scas
das
jecxz
out
shll
add
je
inc
add
test
loopne
lret
repz
xchg
mov
into
or
mov
addl
xchg
push
mov
push
adc
hlt
sti
jae
aaa
insl
aaa
and
into
inc
mov
in
sbb
sbb
push
sbb
daa
pop
adc
xchg
cmp
loop
mov
adc
imulb
ja
gs
mov
push
or
cmc
arpl
sbb
test
xor
mov
push
xchg
mov
mov
dec
sub
xor
dec
into
mov
push
fwait
negb
into
jge
lcall
ljmp
lahf
push
sub
mov
mov
xchg
scas
push
cli
push
xchg
adc
push
cmpsb
xor
iret
imul
push
and
pusha
mov
imul
mov
arpl
mov
pop
pop
aam
push
mov
mov
mov
out
push
xchg
inc
xor
pop
cmpb
pop
push
inc
mov
mov
push
insl
or
xor
movsl
ret
and
insb
mov
fs
aad
mov
cmpsb
pop
adc
int3
cmpb
int
movsb
sub
jecxz
lods
mov
pop
fists
inc
cmc
push
and
pushf
mov
pop
or
out
inc
fisubrl
lret
incb
lea
push
add
pop
pop
mov
fdivrp
pushf
mov
pop
enter
outsb
fistpl
shlb
add
outsb
pmullw
es
push
inc
sbbb
fwait
jp
in
mov
incb
pop
enter
add
sub
push
pop
in
pop
rcrb
fstpt
sub
popa
jmp
xchg
jl
mov
mov
scas
push
mov
out
push
aaa
call
outsb
cli
sbb
mov
jl
mov
mov
movsb
pop
xlat
ja
imul
xchg
pushf
add
aas
jnp
jnp
aad
lahf
in
mov
push
jbe
mov
pusha
loopne
lcall
and
pop
push
inc
mov
into
jecxz
sbb
pop
mov
mov
pop
mov
jne
jb
out
jns
add
mov
inc
push
fst
dec
xor
cmp
js
mov
lods
jle
pop
cmp
adcl
push
lret
movsl
xchg
xor
js
fildl
clc
mov
lock
pop
ret
outsl
mov
sbb
inc
fdivl
imul
sbb
stos
test
inc
and
outsb
ret
xchg
mov
addr16
lods
push
dec
xchg
mov
sti
xchg
mov
aad
push
inc
scas
ja
jb
pop
jns
cmp
mov
sub
adc
lret
add
lahf
mov
cmp
lret
jl
inc
mov
shlb
sbbb
test
add
out
in
xor
push
and
xchg
fs
or
andb
ret
jbe
addr16
sub
mov
adc
xor
xor
popa
push
push
enter
imul
neg
inc
repz
lds
pop
add
enter
filds
cmp
mov
out
sahf
sub
aaa
scas
rolb
dec
jge
xor
loope
pop
mov
in
xchg
cs
pop
xor
mov
pop
mov
xor
mov
cmc
mov
leave
fwait
mov
or
and
sti
jno
xor
lcall
test
fldl
jne
bound
jns
sahf
inc
mov
add
jno
dec
push
iret
ljmp
sbb
hlt
push
mov
fcoms
jmp
in
pop
insl
mov
sahf
pop
ror
inc
dec
enter
mov
test
and
dec
jg
push
dec
pop
jmp
and
int
repnz
jno
mov
fcompl
in
imul
xchg
pop
xchg
cs
clc
xor
shll
add
push
jecxz
sarl
cli
or
repnz
mov
lock
jne
cmp
jns
dec
jbe
push
loope
add
cmpsl
imul
data16
jle
adcl
jnp
cs
clc
mov
mov
jp
pushf
rcrb
add
loop
or
arpl
xchg
pop
outsl
ss
ret
pop
mov
movsb
xchg
mov
int
xchg
fwait
or
adc
dec
int3
insb
repz
leave
insb
mov
inc
inc
and
iret
pop
out
pop
int3
imul
pop
pop
shlb
shrl
adc
jp
orl
mov
bound
add
jno
nop
cmpsb
shll
pop
cmpl
dec
aam
movsb
push
cmp
push
addr16
std
jmp
js
and
shlb
loop
mov
das
into
lcall
stc
inc
adc
cld
outsb
imul
icebp
in
js
lret
sub
or
pop
repnz
push
jae
popa
ljmp
push
and
push
div
and
lock
inc
xor
cmp
or
pop
and
stc
jo
roll
cmp
out
out
test
repz
movsb
xchg
or
pop
dec
mov
pop
mov
stos
ja
mov
mov
and
jge
cmp
out
xor
movsl
lock
push
or
in
add
or
and
aam
scas
jo
push
inc
and
mov
mov
fstpl
xor
cmpsl
pop
push
and
repnz
aad
or
lods
mov
add
aad
jno
stc
leave
jle
jo
test
rorl
sbb
inc
xlat
dec
int3
roll
dec
fmulp
arpl
sub
ja
ret
bound
pushf
mov
or
outsl
pop
test
cmpl
es
cmp
push
push
xchg
xchg
cld
loopne
mov
test
mov
pop
lods
lea
sarl
xchg
cmp
into
pop
cmp
adc
mov
out
pop
dec
xchg
push
or
adc
or
aad
test
dec
icebp
ret
and
sbb
lods
mov
sbb
insl
sub
xlat
addr16
mov
vpshufhw
cltd
jo
int3
and
dec
ret
fs
aam
aam
pop
cmp
out
jnp
pop
rcrl
lret
and
xor
loopne
mov
adc
stc
or
sahf
pop
ret
push
test
cmpsl
lcall
lds
sub
cltd
xchg
clc
movsb
outsb
push
adc
and
sub
flds
fstps
and
inc
or
push
add
stos
mov
jnp
cmpsb
pop
fcomps
dec
adc
xor
ja
add
push
lcall
push
jne
push
and
jns
inc
stos
imul
pop
xchg
movl
push
mov
xchg
scas
cmpsb
jns
lcall
pop
cmp
adc
daa
or
dec
pop
hlt
cmpsb
in
decb
mov
lock
cld
mov
sbb
icebp
sub
mov
fistpll
test
aas
xchg
dec
dec
adc
sbb
cmp
mov
movsb
movsl
nop
les
mov
mov
xlat
mov
xchg
dec
dec
imul
popa
dec
pop
fs
push
test
lret
loop
mov
sbb
lea
shl
cmp
in
push
cmpsl
mov
pushf
inc
lcall
scas
mov
cltd
test
inc
xor
daa
cmp
subl
mov
mov
stc
or
inc
fnstenv
xchg
inc
je
or
xchg
ficoml
aad
mov
outsb
in
dec
fbstp
pop
scas
cltd
jecxz
mov
jmp
dec
adc
and
or
test
sti
sti
inc
je
adc
loop
xor
cmpb
in
das
add
notl
fwait
loope
sub
mov
jmp
and
popf
ret
push
sti
push
stos
adc
mov
jle
add
or
pop
mov
out
push
nop
lahf
mov
mov
jmp
loop
ret
sbb
jo
out
mov
movsb
inc
mov
inc
inc
mov
pop
repz
xchg
push
adc
fcoml
dec
and
xchg
mov
mov
ror
push
jle
lds
je
and
fmuls
aas
or
push
push
leave
daa
mov
cmp
repnz
jmp
notb
push
xor
xchg
flds
lret
xchg
dec
sub
ss
cmpsb
ret
mov
pop
xor
jmp
push
lahf
lods
jg
mov
fidivl
and
mov
movsl
pop
or
inc
add
and
push
enter
lods
cld
sub
mov
sbbl
mov
je
adc
push
adc
outsl
xchg
ss
insb
xchg
adc
orl
inc
mov
xchg
pop
data16
ja
add
ss
adc
and
js
lret
sub
pop
ljmp
mov
aad
aaa
mov
je
jmp
xor
popa
pushf
insl
hlt
leave
sbb
or
xor
hlt
cmp
in
adc
cld
jb
mov
jne
mov
cmp
xchg
jl
xchg
mov
cmp
cli
scas
sar
jbe
pop
mov
ret
push
push
cs
lock
pop
fs
call
mov
xor
cmp
hlt
cmpsl
test
movb
insl
jmp
leave
xlat
cld
aaa
xor
and
xor
dec
jnp
es
inc
aam
mov
stos
dec
gs
jnp
out
lods
sub
dec
sti
lcall
and
in
int3
add
rclb
das
sbb
jbe
dec
iret
and
pop
stc
shll
and
orl
add
adc
ret
js
jmp
sub
popa
and
cwtl
cmovp
push
xchg
pushf
sahf
mov
inc
outsb
mov
jle
sub
lahf
push
stos
mov
pop
cmp
push
adc
mov
xor
jo
out
outsl
add
lcall
mov
and
iret
outsb
enter
and
stc
sbb
jmp
rclb
enter
add
jle
mov
imulb
mov
ror
xor
int3
adc
cmp
lds
xchg
jb
stos
lds
jo
sbb
mov
pop
cmc
ljmp
cwtl
addl
xchg
and
ss
and
into
jl
pop
imull
mov
inc
orl
popf
rcl
and
cs
dec
cmp
xchg
mov
lcall
cmc
and
push
into
xor
arpl
mov
cmp
mov
jp
fldl
arpl
adc
je
lcall
pushf
mov
cmp
pop
cmpsb
and
popf
cwtl
out
cmp
lcall
push
cmp
std
aaa
fnsave
jae
clc
lods
lret
bound
rcrl
pusha
shlb
mov
loopne
jno
xchg
cld
xchg
mov
in
and
jmp
pop
jb
pusha
test
je
jle
call
loopne
inc
xorl
icebp
cmp
xor
cli
pusha
out
xchg
mov
test
cmpsl
je
in
pop
imul
lret
add
fmuls
add
scas
inc
clc
pop
enter
mov
iret
ss
jecxz
mov
icebp
jno
xchg
loopne
mov
ret
fsub
ja
jecxz
or
fs
jle
jns
vmovupd
adc
lds
in
push
pop
ja
pop
cmp
dec
add
push
mov
xchg
fsubs
jp
dec
pop
mov
jg
push
enter
out
ljmp
dec
aad
inc
rclb
mov
leave
xor
std
fldl
mov
ror
imul
sbb
fnsave
sub
jae
ds
or
cmpsl
std
out
jb
xor
cmp
sbb
cmc
mov
add
lcall
sub
mov
dec
cmpsl
mov
dec
push
inc
out
jae
push
xor
xor
shrl
scas
in
jnp
addr16
sub
rcll
xor
rorl
sub
adc
repz
and
shll
loop
popa
push
mov
mov
sub
dec
add
shrl
mov
rcl
je
mov
fldl
fisttpll
icebp
lcall
fcomi
mov
mov
add
xor
mov
and
adc
loope
bound
lcall
jne
ss
push
mov
xchg
pushw
pop
shlb
int3
mov
out
sahf
mov
mov
adc
sub
add
dec
inc
xchg
cmpsb
push
bound
mov
xchg
testb
test
ljmp
pop
scas
pop
mov
cltd
mov
or
inc
push
xor
inc
test
in
xor
mov
adcb
add
cmp
jle
ljmp
movsl
lcall
rep
hlt
inc
sbb
jb
push
cmpsl
in
fidivrl
lret
je
cmpsb
sbb
fldenv
mov
shll
out
xchg
inc
imul
clc
je
mov
pushf
pushf
sbbl
mov
mov
sbb
aad
test
pusha
test
seta
mov
sub
rorl
sbb
aad
xlat
fstpt
aaa
jecxz
mov
push
add
fmul
cmp
ret
mov
push
ret
mov
jle
xchg
mov
xchg
movsl
sbb
inc
sahf
inc
jns
sbb
sbb
mov
cltd
outsl
mov
iret
leave
dec
lods
inc
cmp
fs
je
fcoml
cmp
mov
pop
je
adc
sub
and
sbb
vmread
mov
xor
jp
mov
xor
popa
mov
push
push
jmp
sub
inc
ficomps
adc
sahf
js
xchg
pop
jno
jg
clc
or
or
jb
add
adc
aaa
add
and
pop
cltd
xchg
mov
sub
lcall
push
test
cmp
shrl
fdivr
push
inc
sub
jns
pop
out
xchg
insl
in
in
mov
pop
sbb
loopne
mov
xor
or
sub
mov
test
pop
testl
add
bound
repnz
xor
lret
jnp
jns
mov
movb
clc
adc
into
icebp
dec
inc
callw
cmpsb
mov
push
aad
push
das
push
ds
or
popa
ds
lods
nop
icebp
mov
aad
xchg
shll
and
inc
clc
add
fsts
xchg
xchg
or
xor
adc
xor
popf
ret
bound
or
pop
or
imul
repz
test
adc
xchg
cmpsl
inc
cs
push
pop
jge
test
push
pop
xchg
adc
pop
pop
popf
lret
lds
cmp
xlat
cld
imul
and
movsl
mov
mov
sbb
and
xchg
pop
ljmp
xor
jbe
sbb
jecxz
mov
push
nop
mov
movsl
inc
fdiv
push
sti
pop
jl
pop
daa
xchg
fstp
inc
mov
mov
add
shrb
fists
sbb
loope
mov
xchg
xor
push
rorl
jp
xor
int
je
adcl
popf
ljmp
sbb
dec
adc
mov
fucom
mov
mov
xchg
mov
adc
cmp
jmp
inc
cmpsb
jb
sbb
mov
pop
lret
cmpsb
mov
test
nop
cmp
dec
pushf
lds
in
push
inc
cmp
orl
out
movsb
push
cwtl
or
push
xchg
mov
divb
jbe
mov
adc
data16
lret
dec
loopne
fdivp
cld
hlt
sub
adc
jecxz
push
ret
and
iret
pop
adc
out
mov
ror
mov
add
jp
aaa
ret
adc
leave
shlb
xor
push
std
and
xchg
sub
add
jmp
sbb
mov
fiadds
ljmp
in
mov
sub
les
pop
pop
das
out
pop
jno
xor
testb
mov
sub
xchg
jmp
add
lea
push
jbe
sub
xor
push
notl
icebp
ficoml
movsl
xchg
loopne
fcmovbe
lret
mov
out
pushf
bound
jp
jo
daa
mov
jo
lret
inc
popf
fldenv
mov
mov
xor
pop
test
andl
cld
mov
mov
decl
icebp
sar
xchg
leave
imul
addl
xchg
mov
xchg
dec
cmp
dec
pop
fstl
xlat
pop
repnz
movsl
xchg
cmp
push
jb
inc
sbb
push
cmpsl
out
loopne
decl
cmp
insl
jns
fldcw
in
push
cmpsb
adcl
jnp
sub
pop
leave
xchg
mov
scas
subl
notl
loope
mov
pop
or
scas
inc
dec
imulb
test
sbb
mov
push
dec
aam
add
mov
arpl
add
or
iret
jle
mov
loopne
dec
call
cmp
les
popf
cwtl
icebp
inc
idiv
push
loop
sahf
test
mov
or
mov
push
push
cmp
cmpsb
jge
push
or
sbb
out
sub
push
test
jo,pn
pop
cmp
adc
sbb
mov
pop
pushf
repnz
pop
push
xor
lahf
data16
fsub
fs
jne
out
stc
js
push
fbld
cmc
sar
fsts
push
cs
mov
cwtl
push
outsl
faddl
adc
int3
call
or
lods
or
sub
jle
push
xor
and
sbb
mov
lahf
es
nop
mov
leave
mov
pop
pop
push
push
mov
sbb
sbb
cmp
arpl
test
jbe
es
movl
loop
xor
cmp
mov
ja
fs
pop
jle,pn
and
out
flds
lahf
dec
or
jo
xchg
sub
or
push
in
hlt
push
mov
pop
loope
push
mov
pop
mov
dec
call
aas
sbb
dec
push
xchg
sub
cwtl
push
fnsave
fbstp
repnz
jl
inc
test
add
into
jecxz
roll
jns
cmc
enter
jo
mov
inc
inc
lds
iret
and
hlt
fldt
jne
cmp
pop
mov
ficompl
jb
add
cmpsb
sbb
cmp
pop
push
loope
pop
mov
arpl
add
mov
pop
and
mov
jbe
repnz
sub
cltd
ja
cltd
scas
sbbb
nop
sub
xlat
arpl
push
es
mov
xor
jne
jmp
mov
scas
xchg
mov
xor
sub
imul
addr16
sbb
out
push
mov
mov
add
inc
loopne
add
insl
push
fstpl
lret
fdivl
cmp
in
and
pop
adc
into
bswap
lcall
add
mov
sub
imul
in
daa
mov
loop
and
shl
xchg
ss
cmp
in
jl
lret
icebp
cmpsb
popa
and
pusha
icebp
push
adc
outsb
ds
jmp
pusha
clc
xor
push
mov
movsb
mov
mov
sub
push
lea
push
adc
adc
dec
in
daa
pop
stos
repnz
jns
push
push
cltd
mov
cltd
lahf
sbb
mov
test
pop
fimuls
sbb
mov
les
es
je
repnz
loope
and
pop
ficoms
sub
rcrb
leave
sbb
dec
fld
rcll
lcall
movsb
into
lds
mov
loop
enter
dec
outsb
mov
push
scas
mov
arpl
test
sbb
mov
insb
mov
jno
in
cmpsl
into
movsl
negl
aad
adc
push
stos
dec
jge
pop
dec
jg
add
orl
sbb
imul
xchg
and
in
pop
mov
xor
outsl
fst
lahf
or
mov
aaa
jp
jne
mov
aaa
popa
data16
scas
aas
dec
xor
sub
xor
push
sub
pusha
nop
add
mov
push
out
sbbb
inc
push
sahf
xchg
and
and
xchg
popa
and
xchg
daa
repz
jnp
lret
test
lcall
loop
pop
insb
std
pusha
sub
sti
divb
adc
inc
mov
mov
dec
push
gs
pop
jle
or
pushf
in
xchg
mov
sbb
dec
jnp
adc
out
push
inc
mov
push
inc
push
orb
mov
sub
iret
inc
js
xor
int
addr16
fwait
ret
in
xor
and
or
cmpsb
loopne
gs
mov
pop
or
mov
aad
ljmp
mov
test
sti
jne
jbe
andnps
sub
jmp
pop
inc
movsl
add
aad
mov
cli
dec
fs
or
sub
mov
pop
sbb
int3
or
jl
and
inc
mov
lds
scas
movl
jecxz
jge
adc
lcall
mov
pop
sbbl
mov
xor
rcrb
sub
jge
enter
pop
adc
mov
mov
into
orb
pop
jno
inc
ljmp
xchg
add
mov
xchg
pop
test
orl
out
clc
mov
loopne
dec
cli
xchg
lcall
pop
adc
rorb
sub
es
clc
add
xorl
bound
lret
mov
pushf
pop
pop
js
shrl
js
repz
dec
add
xor
and
adc
sbb
mov
insb
fsub
cmc
lret
mov
cld
lds
push
sub
sub
jmp
fsubrl
mov
mov
adc
lret
mov
shr
push
outsl
fcmovu
jge
push
jbe
and
subl
icebp
xchg
mov
mov
jp
mov
push
pop
dec
mov
mov
xchg
pop
push
mov
fstpt
in
sub
xorl
dec
jp
sub
aam
and
cmpsb
mov
push
mov
mov
popa
add
and
dec
jbe
cmp
xor
push
dec
mov
push
push
shlb
jmp
xchg
andl
rcrb
lret
jl
xchg
roll
xchg
and
push
in
cmpsl
lods
sub
cmp
bound
pop
mov
aas
pop
test
fsubrs
push
in
fiaddl
test
sbb
in
dec
xor
or
sti
inc
xor
call
hlt
out
pop
mov
cmp
push
leave
jge
dec
test
jo
int3
icebp
jp
xchg
jg
jle
sub
in
adc
xlat
sbb
pop
pop
out
push
jbe
int
clc
dec
cmp
lahf
lods
cmp
adc
outsb
lcall
fnstsw
inc
add
sbb
lcall
bound
into
lcall
cmp
cmpsb
add
hlt
and
sub
cmp
insb
insl
cltd
nop
addr16
lahf
xchg
mov
int
stc
shlb
aas
jmp
into
fdivrl
mov
loop
aas
cmp
sub
inc
popa
and
lock
lret
inc
test
adc
cmp
sti
outsb
sar
or
movsb
in
jmp
sub
jns
std
outsb
sub
jle
nop
xchg
mov
gs
popl
xchg
jae
test
int3
test
jmp
cmp
and
mov
stc
cwtl
test
fisubrs
outsl
sbb
adc
mov
aaa
jbe
dec
andl
push
test
xor
or
das
pop
repnz
adc
cmp
int3
pop
movsl
and
ss
out
xor
xchg
es
push
mov
inc
shlb
pop
sti
cmp
jo
pushf
fnstsw
pop
mov
pop
negb
jae
add
jmp
add
or
adc
push
pop
adc
fsubs
xchg
lea
in
out
dec
cmp
mov
fdivs
inc
data16
mov
sub
sub
xchg
sbb
fidivrl
ljmp
pop
nop
addb
push
inc
inc
pop
push
inc
mov
shlb
lret
inc
dec
divb
ss
fimull
dec
jae
cmp
push
jge
add
cmp
outsb
fs
ja
ror
bound
das
adc
rorb
pusha
and
ret
in
adc
ret
or
in
add
inc
and
shrb
adc
dec
aas
inc
xchg
fwait
lds
xor
dec
sub
scas
lcall
mov
sbb
popa
shlb
insl
dec
cwtl
stos
push
push
xchg
cmp
mov
add
add
ds
js
stos
lods
xchg
out
xchg
dec
mov
ss
jns
sub
xor
pop
js
shll
lcall
pop
lods
mov
inc
mov
jno
inc
inc
daa
push
add
push
mov
iret
clc
add
and
adc
sbb
pop
push
mov
out
in
data16
sbb
xchg
dec
cmp
in
decl
stos
aam
dec
adc
mov
dec
adc
or
sub
xchg
xchg
arpl
faddl
xor
hlt
lock
add
scas
insb
loop
lahf
in
clc
jns
fmul
xchg
xchg
fdivrs
xchg
push
fsubrs
jp
push
test
fdivrp
lcall
xchg
cmc
cs
mov
push
adc
dec
int
push
and
adc
repnz
ds
jge
dec
scas
dec
xor
nop
push
mov
cli
xchg
pop
je
lods
lret
dec
cmpsl
push
je
cmp
in
jns
or
mov
mov
and
or
lcall
jg
mov
out
mov
cmp
mov
and
out
and
jnp
pop
repz
cmp
jmp
jp
mov
int
cmp
jae
dec
push
ds
push
jge
dec
shlb
shlb
repnz
jecxz
int3
clts
cld
and
into
js
inc
dec
xor
push
jg
imul
dec
rorl
lods
js
mull
jecxz
imul
push
test
mov
pop
inc
fwait
and
fsubs
mov
sbb
mov
adcl
int
xor
pop
or
lods
add
sahf
stos
or
jge
add
or
imul
jno
mov
inc
dec
sub
mov
xor
xchg
fincstp
cmp
xor
sub
sbb
pop
jnp
jae
dec
test
sbb
andl
popl
aad
daa
cmc
jmp
or
mov
or
push
lock
xor
dec
fistl
je
shrb
inc
ja
aad
int3
int
lcall
dec
je
aam
add
or
gs
mov
or
mov
sarb
push
scas
scas
sub
sub
rorb
adc
dec
sahf
stos
jno
sub
pop
jmp
and
and
adc
pop
cmp
shl
dec
frstor
mov
lret
mov
inc
aas
movsb
mov
imul
xchg
fcoms
add
and
ret
andl
dec
sub
std
mov
pop
mov
cmp
test
xlat
pop
jle
fs
call
sub
pop
xchg
fildl
popf
dec
sbb
cmpsl
jp
fcmovnb
add
push
in
pop
cmp
inc
add
cmp
mov
cmpsl
adc
adc
mov
jae
cmpsl
pop
dec
bound
sbb
adc
out
inc
fldt
cltd
fistpl
jecxz
dec
lcall
add
sub
out
push
add
xor
mov
mov
nop
push
xchg
xchg
jno
xchg
pop
stos
sbb
adc
mov
int
jnp
jg
and
nop
popa
and
xor
cmc
outsl
inc
sub
xor
jp
bound
cmpsl
and
sbb
and
mov
adc
out
sbb
inc
pop
test
lahf
push
test
mov
and
sbb
nop
mov
pop
push
aam
loop
inc
and
iret
mov
loope
cmpsl
pop
repnz
rorb
adc
and
addr16
sbb
imul
mov
dec
xor
sahf
lea
jb
add
dec
adc
mov
outsl
mov
jg
add
mov
mov
inc
shr
pop
flds
mov
xor
dec
jecxz
jecxz
ds
cmpsb
push
ljmp
cld
mov
lds
imul
out
xchg
inc
fs
fildl
jo
xchg
mov
xchg
dec
pop
dec
hlt
push
into
mov
sbb
movsb
stc
cli
shlb
and
sub
fiaddl
data16
cltd
mov
popf
jecxz
mov
std
xchg
cmp
std
fdivrp
add
out
or
fsub
test
ja
pop
mov
mov
popa
push
leave
or
dec
data16
and
inc
aam
scas
lock
mov
jo
dec
sahf
add
adc
sahf
stos
mov
insl
rcl
push
test
lds
sub
mov
adc
push
cmp
push
ret
jmp
sbb
pop
mov
es
add
pop
adc
add
jnp
scas
test
repz
jp
out
mov
pusha
cwtl
mov
roll
cmpb
add
cli
mov
imul
rcll
sbb
xor
adc
sbb
in
cmp
daa
jp
jmp
fidivrs
dec
xor
xchg
aam
call
imul
xchg
jmp
ds
mov
lahf
dec
lcall
mov
or
and
jg
mov
dec
cmc
aad
sarb
in
adc
inc
pop
jecxz
nop
jp
out
pusha
bound
pop
je
ret
pop
shrl
ret
dec
imul
out
sysret
mov
ss
je
pushf
sbb
sbb
cmp
mov
mov
clc
mov
cs
cmp
push
out
call
ds
aaa
push
sub
add
pop
push
fcomps
repnz
sbb
cmpsl
jmp
test
add
and
dec
daa
in
adc
cmp
ss
sub
adc
dec
push
mov
mov
fistps
xchg
outsl
cmp
inc
scas
sahf
popa
add
adc
adc
dec
push
hlt
jecxz
add
jb
dec
cmp
or
or
xor
decb
cs
mov
shl
push
jo
jg
movsb
jb
jmp
invd
daa
xchg
mov
std
xchg
lret
mov
mov
inc
mov
pop
push
out
inc
push
add
push
add
sbb
fcoml
insb
jle
mov
sub
pop
and
mov
pop
xchg
out
cmp
insb
dec
xchg
push
cs
sub
adc
jecxz
xchg
xchg
das
mov
pop
pop
aas
stos
sbb
nop
jb
mov
ret
jmp
test
test
and
xchg
dec
inc
dec
cs
xchg
jge
jge
cli
shrl
sub
repnz
pop
adcb
ss
push
mov
xor
push
xchg
lds
dec
pop
and
icebp
hlt
daa
cltd
bound
in
sbb
idivb
mov
and
sbb
and
test
loop
sbb
xor
filds
cli
into
mov
cmp
test
insb
push
mov
lods
icebp
addl
std
cmp
test
pushf
fbld
jae
sbb
lock
fcoms
dec
hlt
lods
dec
mov
jp
sbb
push
rcrl
mov
dec
push
mov
fbld
xchg
es
repnz
or
push
ja
les
nop
jb
cmc
cmpsb
addr16
out
fsubs
push
mov
mov
mov
inc
lods
std
push
add
xor
testb
sub
jp
mov
sub
cld
xor
inc
mov
js
adc
push
popa
pop
cmp
add
lds
mov
jl
iret
add
cmpsl
inc
dec
xchg
lods
jmp
fsubl
pop
ja
push
xor
daa
test
popa
inc
aam
gs
push
dec
sub
and
test
or
popf
aas
cs
xchg
sbb
mov
xchg
pop
mov
outsl
insb
or
cmc
fsubl
std
pop
js
mov
gs
push
iret
pop
jg
jle
data16
rorb
loop
in
jge
pop
adc
jp
and
fcmovb
add
mov
mov
mov
ljmp
mov
jge
sub
pop
pop
xchg
push
lods
push
enter
addl
dec
cmpsl
pop
inc
or
in
mov
sub
and
in
mov
sub
cmp
jbe
pushf
pop
dec
sti
inc
sbb
and
sbb
bound
rorb
and
add
mov
popa
out
loope
leave
dec
add
dec
sub
int3
ret
mov
test
lds
loopne
mov
mov
fs
test
cmpb
mov
cs
dec
jmp
mov
add
notb
aad
dec
rcr
jmp
bound
aaa
insb
dec
loop
insb
mov
ja
dec
xor
iret
cmp
leave
mov
aaa
popa
je
fidivrs
pop
or
cmpsl
inc
das
pop
fidivl
out
sbb
cld
push
pop
sbb
xchg
ficompl
sbb
lret
pop
fs
sbb
push
out
cmpsl
mov
shll
test
shll
out
scas
and
and
lret
stc
mov
mov
mov
ret
or
jl
cmc
ret
push
jo
mov
xor
aas
mov
mov
dec
dec
dec
push
movsb
in
cltd
shll
out
lret
out
rcrl
popa
pop
scas
rolb
aaa
jb
call
xor
mov
xchg
cs
cs
rolb
cwtl
mov
cmp
movsb
push
jg
fldt
xchg
movntq
xor
aad
stos
rclb
sbb
imul
rclb
scas
out
mov
mov
fimull
hlt
jmp
gs
and
ljmp
mov
aam
outsb
pop
call
test
mov
out
popf
sahf
add
lret
push
sub
xorl
aam
es
es
pop
inc
dec
rorl
pop
pop
or
aam
ret
xchg
xchg
enter
nop
sub
pop
jae
mov
call
mov
fsubr
mov
mov
push
fdivrs
mov
jb
add
incl
aam
jge
sub
mov
or
pop
mov
ja
jge
les
or
mov
pop
aam
fnstsw
xchg
inc
inc
sbb
dec
jno
xlat
mov
pop
adc
adc
pop
repz
xor
loop
cmc
jne
push
sti
sahf
pop
and
add
pop
ljmp
xchg
or
ljmp
iret
repnz
add
sbb
stos
xor
call
fwait
lret
or
scas
mov
leave
mov
test
xchg
lods
stos
mov
cmp
subb
add
adc
lret
xlat
mov
dec
scas
ficoms
loope
pop
in
leave
ds
add
lret
and
sbb
sbb
sbbb
stos
loope
lcall
push
outsl
scas
lret
lcall
jp
gs
jno
xchg
test
inc
mov
jmp
fstps
push
pop
xchg
stos
and
sbb
hlt
loope
enter
cltd
fsubrs
mov
testl
andb
jg
scas
xlat
outsl
cmp
xlat
in
xchg
mov
mov
rcpps
sub
add
call
imul
cli
adc
mov
test
call
in
repnz
cmc
fisubrs
les
orb
jns
adc
pop
push
cmp
in
gs
out
sarb
sbb
xchg
jp
sub
push
sub
sub
ret
add
mov
aaa
mov
cwtl
aad
movsl
cld
sbb
in
in
and
push
inc
and
enter
sbb
mov
or
scas
or
push
je
loop
mov
hlt
adc
incb
lret
dec
mov
mov
xor
cmp
inc
pop
test
push
jo
imul
ja
icebp
mov
ret
je
sbb
cld
call
movsl
dec
fildl
xchg
in
lahf
jle
mov
and
or
insl
push
sbb
fildll
push
xor
enter
lcall
add
sub
add
mov
cmp
or
fidivrs
mov
pop
fwait
mov
addl
lods
dec
adc
cli
push
shlb
mov
pop
lock
out
xchg
push
or
or
sbb
pop
cmpl
call
lock
mov
lcall
loopne
cmpsb
mov
cli
cmp
call
jb
test
or
push
dec
adc
js
sub
cmp
test
sarb
sbb
mov
loope
sbb
out
lods
push
inc
mov
imul
inc
sbb
cmpsl
gs
cmpsl
cs
push
lea
arpl
cs
aam
sub
xchg
mov
push
sub
dec
sbb
movsl
lods
cmp
stos
inc
jo
in
mov
sbb
or
mov
mov
aaa
sbb
icebp
mov
xor
dec
leave
outsl
pop
inc
xchg
jb
push
jbe
sub
jge
ljmp
lock
cwtl
stc
mov
sub
or
dec
mov
popl
and
shlb
push
xor
mov
jecxz
sbbb
jge
pop
stc
dec
cmp
jge
in
inc
push
jns
cltd
mov
cmp
fs
aam
lock
inc
inc
xchg
bound
and
aas
mov
dec
daa
push
adc
aad
orb
aaa
jne
mov
dec
pop
out
add
popa
fbld
and
js
mov
sub
jbe
stos
mov
ficoml
cltd
jmp
lcall
mov
into
xchg
and
mov
mov
icebp
mov
in
mov
cli
mov
jb
icebp
jae
pop
add
pop
dec
gs
xchg
stc
nop
ret
xor
insl
dec
inc
scas
sar
sub
jg
jge
daa
cmp
subl
stos
sub
rorb
fs
xchg
or
ret
pushf
mov
push
mov
dec
popa
loopne
adc
mov
ret
popf
cs
adc
mov
adc
sbb
leave
faddl
pop
divl
call
jmp
push
adc
sub
xor
or
js
jne
cmpsl
cmp
mov
mov
jmp
iret
mov
mov
shll
cs
sbb
sbb
incl
mul
imul
mov
dec
stos
ds
rorl
jne
xchg
xlat
imul
test
mov
add
push
adc
xlat
or
pop
out
inc
mov
sub
sub
pusha
push
fisubrl
push
pop
cs
xchg
mov
pop
adc
icebp
push
jne
mov
adc
push
test
adc
inc
pusha
and
jo
mov
push
sub
sbb
xchg
jae
mov
daa
in
dec
outsl
inc
adc
imul
push
and
js
jne
call
push
push
mov
je
and
xchg
inc
sub
cmp
mov
stos
mov
aam
pop
lcall
pop
xchg
test
xchg
pop
mov
sbb
jecxz
mov
add
push
or
adc
jmp
iret
in
sahf
cmp
inc
test
mov
xor
out
cltd
insl
inc
adc
ss
and
clc
fucomip
cmpl
sub
mov
iret
mov
insl
andl
mov
mov
rcl
hlt
sbb
pop
mov
scas
lahf
pop
adc
movsb
rcrl
fistps
xchg
lds
xor
adc
push
push
out
into
sub
pop
dec
xor
test
jmp
dec
push
mov
cltd
shr
cmp
rclb
add
adc
mov
mov
inc
lret
add
out
pop
xor
mov
nop
das
mov
sbbl
shr
dec
lret
rcrl
cmc
inc
negb
push
js
ja
adc
dec
pop
mov
pop
push
xor
clc
or
andl
mov
sub
lret
es
cmp
mov
xchg
lret
mov
mov
in
xchg
out
mov
pop
icebp
test
xchg
repz
sti
push
sub
mov
cltd
cmc
jge
stos
adc
ljmp
dec
mov
adc
inc
jge
adc
outsl
inc
js
and
test
lock
leave
dec
mov
rolb
in
fstpl
or
and
adc
enter
cli
sub
pop
fstp
pop
aas
hlt
push
adc
pusha
test
sahf
scas
int3
mov
mov
mov
aam
jo
mov
fstpl
dec
leave
or
in
xor
cmp
hlt
inc
push
mov
stos
xchg
lods
xchg
mov
add
and
sbb
mov
js
xor
inc
dec
xchg
pop
push
add
cwtl
pusha
in
repz
call
push
icebp
push
imul
mov
sbb
data16
sub
mov
fcompl
pop
nop
pop
movsb
imul
push
test
fsub
in
xorb
rcrb
or
sbb
add
loopne
xchg
popa
and
scas
xlat
das
mov
rol
or
ja
push
aas
mov
fstl
jmp
mov
mov
xchg
ja
cmpl
push
orl
sbb
decl
jle
sbb
and
add
lret
insb
mov
test
push
mull
adc
xor
test
inc
call
or
iret
add
jb
or
test
movsl
inc
lds
imul
test
loopne
adcl
fcoml
ja
imul
lahf
cmp
inc
jle
inc
xlat
movsl
jae
jl
sub
sub
pop
cmpb
pop
inc
xor
inc
fstps
fnstcw
inc
sub
dec
jnp
add
pop
out
inc
push
add
clc
iret
xlat
fnstcw
xchg
popa
ret
jle
dec
out
mov
sub
xchg
subb
pop
lret
xchg
mov
xor
push
push
in
mov
or
push
inc
lret
push
scas
inc
lea
mov
in
repz
clc
jo
enter
stc
leave
enter
sbb
loop
jno
jo
mov
or
movsb
dec
das
lods
adc
push
and
flds
mov
mov
push
aaa
loop
mov
pop
mov
fimull
adc
insb
add
pop
cld
rcrb
shll
pop
mov
lahf
cmp
push
or
push
jecxz
jl
aam
mov
jecxz
cltd
cvttps2pi
jae
gs
pop
jnp
out
gs
int3
sbbb
add
mov
test
int3
mov
fldenv
xchg
inc
push
sub
cmp
pop
cltd
movsb
iret
or
cli
pusha
sbb
xchg
dec
ljmp
dec
pop
fdivs
mov
add
in
sbb
jne
jae
out
nop
test
sarb
scas
dec
js,pt
and
add
das
push
dec
add
std
rdrand
mov
pop
xlat
add
sbbb
pop
fstpt
jnp
sbb
xor
jmp
mov
push
jne
fnstsw
out
sbb
push
mov
dec
mov
dec
add
loope
outsl
push
mov
imul
jo,pn
pop
mov
add
cmpsb
mov
mov
jmp
cwtl
jmp
push
cmp
push
or
mov
ja
repz
cmp
movsl
ja
mov
repnz
cmpsb
je
cmpsb
sub
jb
xor
add
or
jbe
add
out
cmpsl
add
sub
sbb
shr
imul
repz
fcomps
xchg
and
and
push
arpl
jo
rorb
mov
je
lcall
pop
push
or
enter
aas
dec
sbb
push
aaa
jbe
shlb
push
adc
insb
leave
clc
dec
lcall
adc
fiaddl
ljmp
out
movsl
or
push
shll
jbe
call
inc
jp
in
mov
pop
fcompl
rcr
fimull
shl
ret
sahf
rcrl
aam
or
xchg
xor
fsubr
imul
leave
pop
or
fcomps
lds
mov
sub
mov
loopne
mov
and
jmp
mov
mov
out
addr16
and
push
pop
inc
dec
pusha
data16
pop
xchg
dec
shl
xchg
mov
xchg
insl
stos
or
sti
int3
cmp
push
sub
mov
mov
jmp
add
mov
sub
push
xchg
stc
les
push
lods
es
dec
iret
mov
fistpl
xor
repnz
xchg
mov
cmc
push
lret
test
mov
les
rolb
dec
cmpb
jno
mov
or
daa
ss
mov
sti
je
rorl
adc
add
rcrb
bound
jg
sbb
xchg
mov
cmp
xchg
por
pushf
mov
pop
inc
aas
and
mov
sub
pop
je
push
sub
xor
lret
clc
sub
in
dec
out
xchg
xor
dec
ret
lods
mov
daa
jnp
leave
xorb
fwait
mov
mov
xor
mov
push
push
mov
pop
inc
aad
inc
lods
mov
jle
orb
fldcw
cmp
mov
cmp
icebp
push
xchg
pop
aas
xchg
inc
mov
call
xor
or
es
sub
xlat
adc
inc
or
mov
xchg
jecxz
adcl
test
outsb
cmp
add
popa
add
adc
jns
mov
lret
cmp
pavgw
mov
and
gs
insl
int
popf
fistpll
pop
mov
ds
scas
enter
das
fnstsw
jl
lods
loop,pt
scas
xchg
xor
inc
mov
jne
cmp
mov
add
cmp
push
shrb
ret
jno
ss
pop
sub
outsl
jb
cmp
sub
sub
out
cmp
pop
test
sbbb
xor
sahf
icebp
out
loopne
enter
sub
sbb
sub
daa
ss
mov
outsb
repnz
mov
addl
mov
rolb
xchg
into
jns
sub
mov
fwait
adc
jg
inc
sarl
cld
aam
lret
xchg
inc
push
dec
jo
outsl
je
dec
sub
in
fdivrl
insb
out
pop
inc
in
rclb
add
into
cmp
insl
stos
dec
mov
iret
pop
xchg
std
inc
dec
dec
dec
lret
subw
pop
into
sbb
jne
ret
out
jg
pop
push
outsb
outsb
mov
jg
mov
lret
das
mov
fucomi
cmpsl
jae
or
jecxz
mov
pop
loope
and
fisubrl
jo
cli
push
int
std
das
push
dec
mov
loopne
negl
xchg
test
scas
sub
mov
mov
test
xchg
adc
sbb
lea
lret
jns
in
loopne
jmp
ret
pop
pop
mov
sbb
pop
push
xchg
stc
mov
adc
shlb
in
sub
lahf
inc
scas
insb
fstp
fwait
popl
push
lds
ficoml
lcall
insl
repnz
cwtl
or
mov
pop
scas
pop
aaa
xorl
jmp
addl
fldt
shlb
jbe
cs
in
rcrb
mov
loopne
sub
jo
xor
movsl
in
clc
icebp
ja
in
and
popa
stos
mov
cmpsb
fldcw
int
outsb
mov
fildll
ja
xchg
cmpsb
test
xchg
cmpsl
push
fnstcw
push
pusha
push
xchg
test
pop
sub
sbbb
sbbb
bswap
lcall
xchg
fld
sbb
loope
test
push
sbb
roll
jbe
inc
sub
add
add
pop
in
das
mov
ret
mov
cmp
movsl
insl
es
stos
test
popf
pushf
popa
fnsave
hlt
aad
loopne
xor
dec
fidivl
and
pop
sahf
cmp
cmp
mov
jns
adcl
jae
lock
out
adcb
in
rcrb
rcrb
dec
outsb
xchg
icebp
xchg
scas
in
sar
adc
add
or
out
loop
jo
or
lods
and
and
repz
fadds
stos
repnz
out
push
inc
pop
dec
push
iret
stos
mov
xchg
lcall
mov
jb
gs
and
pop
mov
add
call
mov
ss
push
dec
mov
rorl
imull
ret
dec
jno
and
jbe
faddp
pop
mov
add
push
movsl
ja
mov
and
jae
idivl
mov
xor
mov
inc
stc
mov
imul
aad
sub
push
lock
inc
cld
cmp
rclb
add
push
leave
pop
inc
test
loope
sbb
pop
sbb
or
cwtl
inc
mov
cmp
push
fs
iret
addr16
mov
aaa
pop
add
cmpsl
pusha
testl
cmpb
mov
in
mov
mov
push
xchg
jg
unpckhps
sbb
push
dec
ss
dec
xchg
rcrb
fimuls
in
testl
jbe
das
pop
test
xor
out
and
or
add
jno
jg
cmc
and
ret
sbb
push
fs
movsb
clc
gs
jnp
and
dec
xchg
mov
mov
inc
popf
fsubl
jns
insl
pop
xchg
mov
or
loope
and
fiadds
jb
push
mov
push
pushf
mov
fstpl
jno
icebp
sbb
and
mov
adc
mov
dec
pop
cmc
mov
rorb
pusha
push
inc
or
roll
or
cmp
cmpsl
inc
cmp
scas
roll
inc
and
in
call
and
mov
adc
push
leave
fnstcw
jl
repnz
add
das
iret
nop
test
pop
mov
repnz
sub
jb
or
mov
sahf
std
addl
das
push
js
sbbb
test
cmp
jg
nop
dec
ljmp
loop
jns
clc
enter
mov
dec
lds
jl
popa
jno
stos
jp
mov
out
push
xlat
push
push
mov
adc
dec
push
iret
inc
mov
xchg
cmp
aaa
addr16
cwtl
mov
shlb
mov
pop
aam
lds
in
mov
add
dec
sahf
mov
daa
repz
pop
xor
lahf
and
les
push
inc
incb
jae
test
cwtl
jecxz
in
push
mov
push
add
adc
je
roll
push
cwtl
and
lahf
push
mov
cmp
sahf
lods
lahf
rorb
jbe
dec
loopne
and
push
xlat
mov
stos
adc
xchg
pop
out
cmpsl
adc
test
xchg
and
push
xor
push
jnp
mov
bound
push
aas
inc
outsb
jl
sub
pop
and
fwait
mov
push
fisubl
push
imul
ja
jp
lret
hlt
xchg
push
shlb
push
cmp
sub
ljmp
loop
cli
pop
and
add
test
add
sbb
or
push
push
sub
sbb
xor
pop
mov
jmp
pop
add
pop
scas
test
mov
int
xchg
aas
mov
ret
xor
ljmp
xadd
and
mov
ljmp
cmp
mov
int3
mov
out
jne
mov
aaa
in
inc
push
js
mov
in
rol
fsts
sbb
adc
psubsw
cmp
mov
cmp
adc
fwait
adc
xor
daa
mov
ljmp
inc
mov
bound
fwait
orb
hlt
mov
xchg
lea
call
adc
fsin
idivl
adc
xchg
mov
orl
and
popa
fstp
adc
int3
sahf
jg
add
aaa
mov
sbb
sarb
jae
aam
sub
test
fistl
jmp
pop
dec
mov
lret
mov
pusha
sub
mov
mov
stos
cli
inc
iret
and
add
mov
mov
add
scas
sbb
leave
in
push
pop
les
dec
jl
ds
enter
xor
pop
movsb
in
daa
sub
mov
fsub
jp
mov
mov
ljmp
inc
sbb
add
repz
lea
pop
iret
pop
and
js
aas
scas
jp
pop
or
pop
lea
icebp
clflush
and
bound
cli
push
add
gs
inc
stos
call
dec
xchg
or
sbb
fistps
mov
dec
loop
cli
icebp
xchg
pop
jecxz
dec
cmpsl
cs
arpl
push
insb
push
mov
mov
pusha
jns
dec
adc
es
cmp
sbb
inc
mov
push
in
ja
xchg
xchg
ret
mov
sub
or
add
cmp
sbb
lret
mov
pop
test
xchg
inc
stc
sti
push
push
pop
or
cmp
sbb
adcl
xchg
sub
nop
call
cwtl
aad
jne
sub
stc
lds
fdivrl
popa
shrb
decl
mulb
int
aad
add
inc
inc
mov
decl
pop
mov
cmpsb
cli
int3
int3
sub
mov
jl
call
aaa
xor
enter
imul
out
push
jp
movsb
icebp
inc
xchg
lret
pop
cli
shlb
test
lcall
mov
push
sarb
push
cmpsl
mov
in
dec
or
push
push
jns
push
cmc
adc
xchg
lcall
and
cli
push
repz
inc
jle
and
dec
lock
gs
mov
xchg
imul
pop
adc
loope
cmp
mov
jnp
repz
push
loopne
movsb
stos
adc
cmp
clc
push
adc
aam
xor
sub
or
mov
xor
jne
aam
daa
lss
lea
stos
lcall
or
fldl
loop
adc
cwtl
add
pop
pop
data16
xchg
cmpsl
xchg
push
add
sbb
jl
cmp
enter
and
and
xchg
mov
test
cwtl
push
mov
xchg
sub
push
dec
add
push
sub
out
and
enter
stos
ficoms
jno
pop
fwait
jle
mull
mov
cli
movhps
iret
mull
les
test
repnz
pop
in
or
std
cld
mov
xor
or
dec
sub
sub
ret
test
test
inc
mov
pop
arpl
shll
ja
loop
or
fwait
or
aaa
xchg
call
xchg
pop
pop
push
inc
popf
jg
jl
ret
ds
popa
push
outsb
arpl
sbb
xor
stos
xlat
jge
sbbl
xchg
cmp
rcl
fcmovbe
out
mov
bound
xor
imulb
aam
out
and
jb
add
pop
lret
xor
push
negb
pop
jnp
jge
sbb
lcall
mov
jne
setp
mov
out
add
sarb
inc
add
dec
add
pop
test
mov
pop
sbb
mov
lcall
jmp
dec
or
xchg
data16
add
push
test
dec
jbe
daa
mov
pop
jb
movsl
movl
cs
pusha
int3
xchg
dec
mov
mov
mov
inc
pop
jns
lods
sarl
stc
dec
in
push
mov
inc
shlb
xor
jp
repz
push
inc
xchg
dec
leave
jae
imul
addb
mov
xorl
loopne
pop
inc
fwait
push
push
jbe
js
es
add
jp
inc
bound
addr16
and
ja
xor
out
pop
movsb
xor
jns
push
dec
out
push
jns
in
popf
xor
mov
push
scas
sub
sbb
push
sti
rcrb
sti
sbbb
fdivrs
push
or
pop
sbb
jg
mov
pusha
lods
out
pop
loopne
testb
xor
push
cmpsb
imull
sbb
repz
xor
mov
mov
lcall
push
jle
addr16
adc
ljmp
lea
mov
ret
push
adc
mov
shrl
out
pop
jne
sub
test
pop
inc
loop
push
fnsave
push
xchg
lods
or
sbb
xor
xchg
out
in
mov
out
dec
mov
rorb
sub
jbe
imull
push
rep
mov
mov
fimull
dec
mov
out
insb
rclb
inc
loopne
adc
mov
mov
inc
mov
cmpl
pop
sbb
in
inc
jg
pop
push
dec
and
xchg
xchg
stc
movsb
xchg
pop
inc
pop
pop
mov
push
pop
ja
out
push
mov
push
lds
pop
push
dec
cmc
fnstcw
and
fwait
push
push
lret
xchg
sbb
inc
jmp
test
pop
pop
cmp
lcall
xchg
pop
or
ss
add
jne
pop
loop
inc
jb
in
mov
inc
rolb
add
inc
fbstp
fmuls
xor
aam
xor
sub
adc
cmpsl
and
dec
imul
mov
sahf
mov
call
push
test
ds
cmp
cmc
in
pusha
pop
jb
aas
fcomps
data16
inc
int3
test
cmp
arpl
insl
ss
push
or
outsl
call
int
imul
ljmp
ljmp
xorl
jle
jae
mov
repz
imul
scas
push
xor
gs
adc
fdivp
add
or
sub
jl
out
sbb
sub
pop
push
dec
cwtl
cmpsl
aaa
lods
shlb
pop
out
inc
loope
or
pusha
shrb
arpl
push
shll
std
mov
push
das
xchg
es
loopne
xor
js
ror
xor
xlat
pop
lods
cmp
rol
dec
add
xchg
popf
mov
and
xor
pop
sub
stos
repz
add
mov
sbb
in
call
mov
mov
aam
fbld
aaa
cmp
pop
mov
rcl
iret
mov
and
lds
fsts
fnstsw
mov
stos
out
je
shrb
insl
cltd
mov
pusha
stc
loope
jle
or
bound
popf
xor
scas
je
dec
cmpsb
pop
push
mov
cld
scas
scas
adc
scas
int
cmp
rcl
or
sub
dec
test
pop
aam
nop
pop
sbbl
mov
xor
jb
gs
dec
int
xchg
mov
add
pushf
push
imulb
jmp
scas
cltd
push
fmull
mov
and
add
or
insl
cmc
add
add
mov
pop
push
into
sarb
push
mov
or
inc
out
sbb
xor
test
leave
stc
ret
fdivrl
sbb
jmp
rcll
add
inc
dec
popa
addr16
add
scas
jle
xchg
test
in
pop
or
lahf
test
int3
loope
cs
mov
stos
insl
int3
fists
or
xchg
push
std
or
test
xchg
sub
dec
pop
out
addr16
loopne
or
mov
and
in
int3
stos
mov
shlb
pop
or
pop
sub
xor
ficoms
push
mov
pop
sarl
lcall
mov
lcall
les
cmp
inc
add
pop
push
lock
and
test
push
in
mov
mov
mov
sbb
pop
daa
jecxz
mov
lea
aas
xorl
ficoms
mov
and
xor
rcr
or
icebp
aaa
push
daa
das
jb
pop
pop
inc
adc
add
divb
test
or
jae
push
sbb
dec
mov
xchg
loop
xlat
xor
jg
and
adc
xor
sub
adc
mov
sahf
test
xchg
iret
jne
and
sbb
sub
test
fnstcw
leave
pop
mov
push
mul
scas
and
mov
stos
dec
and
pushf
cmp
je
lret
xchg
sbb
iret
movsl
lock
clc
cmpb
aas
sub
jecxz
jmp
movsb
insb
inc
fmuls
jge
fcoml
sub
jg
hlt
jb
pop
pop
and
into
mov
xor
pop
fcoml
pop
mov
lret
add
daa
stos
sbb
test
or
add
test
mov
pusha
xchg
xchg
test
adc
insb
mov
mov
rol
dec
stos
dec
dec
inc
pop
fwait
pop
jle
scas
jmp
push
inc
mov
stos
mov
push
xor
and
add
adc
and
mov
out
test
jno
icebp
mov
sub
mov
jnp
mov
cmp
inc
pop
sub
mov
sub
ds
inc
mov
scas
fmuls
push
inc
push
clc
dec
jne
aam
pushf
jnp
push
adc
inc
lock
mov
roll
adc
test
out
loop
dec
pop
pop
cmpsl
lock
stc
imul
ficomps
or
lahf
cmp
call
pop
push
pop
dec
inc
arpl
dec
outsb
add
xchg
xor
int3
add
cli
jp
outsl
pusha
jae
sbb
adcl
js
nop
arpl
shlb
aaa
loopne
dec
xchg
popa
mov
mov
and
popa
cld
cmp
push
ret
lock
fwait
out
leave
lret
or
ret
xor
or
popa
jmp
adc
daa
push
mov
pop
or
dec
lahf
lcall
lret
mov
add
out
add
icebp
and
inc
lret
test
pop
inc
push
lods
sbb
filds
pop
mov
or
inc
pop
cmpsb
pop
jecxz
xchg
test
mov
mov
gs
cld
inc
xchg
jno
cld
cmp
sbb
cmpsl
pop
fdivl
and
sarb
pop
repnz
mov
xor
adc
push
andb
adc
mov
push
sub
rcl
jge
rcl
fst
and
inc
push
or
sti
add
aaa
xor
lods
out
aaa
mov
out
mov
jae,pn
mov
or
sbb
sbb
lock
test
lods
fsubs
add
faddp
rep
shll
mov
insl
cltd
cmp
dec
cltd
mov
sbb
push
or
push
sub
sti
lret
xor
outsl
sti
sbb
dec
cmp
dec
out
xchg
imul
out
pusha
aam
xchg
push
rcl
mov
arpl
or
jecxz
cmpsb
pop
pop
jb
lea
dec
pop
scas
dec
movsl
sub
bound
sbb
dec
fsubr
or
inc
not
jne
xchg
fisttpll
cmp
add
aad
shlb
aaa
dec
or
mov
fiadds
mov
cltd
clc
fwait
mov
out
mov
add
xor
lods
and
xchg
jp
daa
push
push
fstpl
call
out
sbb
mul
inc
incl
xor
jp
shrl
sbb
adc
iret
mov
jae
mov
fwait
sbb
and
dec
mov
lahf
fsubp
lea
xor
pop
and
or
jecxz
xor
loop
mov
jno
mov
xor
popa
mov
lret
jbe
enterw
sbb
push
jb
push
mov
xchg
or
mov
cmp
das
adcb
push
mov
in
bound
xchg
add
imul
test
mov
jo
daa
mov
dec
nop
push
test
add
dec
inc
add
inc
cld
lds
sbb
mov
push
inc
ja
popa
or
pusha
jns
add
xor
ret
movsl
mov
cld
out
inc
arpl
xlat
not
test
in
push
std
mov
xor
inc
lods
aaa
mov
fidivrs
sbb
add
jmp
or
test
ficompl
sub
sbb
cmp
jp
push
cmp
or
mov
jle
icebp
sub
push
rdtsc
inc
outsb
shrb
arpl
or
lcall
mov
inc
and
rcrl
dec
sbb
xchg
cmp
or
mov
push
mov
adc
lahf
and
iret
pop
int
and
or
jg
or
xor
fsubrs
jb
lods
mov
hlt
fimuls
mov
cmp
bound
sub
aam
and
fistps
test
sbb
sti
sub
dec
and
loopne
add
push
push
bound
dec
test
mov
adc
loopne
jmp
or
mov
cmpsb
and
pop
inc
or
cmp
arpl
sbb
stc
repz
adc
sbb
dec
dec
inc
cmpb
movsl
lods
stos
jmp
xor
ror
cmpb
mov
scas
fcompl
sahf
mov
pop
cmp
mov
sbb
fldcw
jbe
es
arpl
cmp
repz
mov
mov
xor
test
call
pop
xchg
loop
pop
add
test
jns
add
mov
lea
daa
shll
mov
outsb
scas
sbb
xchg
xor
adcl
test
addr16
je
out
dec
adc
xor
rcll
push
push
mull
lock
lcall
inc
jge
jp
pop
sub
fiadds
lods
movsl
inc
mov
cmp
vpshaq
call
mov
and
jmp
push
sub
push
adc
cmc
test
lock
inc
add
dec
adc
les
pop
mov
mov
mov
dec
sub
jmp
pop
sub
xchg
mov
jmp
sbb
inc
sti
jp
sub
test
in
mov
mov
imul
pop
pop
test
movsl
xchg
in
xchg
mov
push
mov
aas
lods
adc
or
popa
pop
mov
push
dec
xor
jne
lret
xchg
xchg
fistl
dec
cld
push
cli
scas
mov
addb
pop
sti
testb
mov
xchg
cmpsb
nop
sbb
add
push
ret
fdivs
push
push
test
leave
aaa
sbb
sahf
lret
xchg
movsl
add
test
mov
and
lea
mov
push
pop
or
movsb
mov
test
mov
mov
push
dec
lcall
sbb
xor
lcall
and
fimull
das
push
mov
es
xchg
or
push
cmc
jg
nop
test
xchg
xchg
jae
divl
add
push
or
out
shlb
cmp
lret
aaa
mov
sbb
aaa
jle
into
mov
push
stc
and
in
andl
stos
or
and
notl
movsl
xor
mov
ret
fdivrs
add
sbb
movsb
push
mov
lea
push
in
scas
pop
loope
into
into
dec
and
insb
call
je
ret
mov
mov
cltd
xor
lahf
jno
cli
xor
add
adc
clc
aam
push
and
add
popa
mov
icebp
cmp
sub
lock
sbb
push
add
xor
out
mov
clc
shlb
lea
cmp
cs
add
adc
js
pop
mov
aaa
int3
xchg
push
mov
aam
cmpsb
and
fld
dec
adc
xor
movsl
stos
leave
jl
lea
xor
push
dec
in
xor
leave
pop
jns
xor
fstl
nop
ljmp
imul
js
jmp
pushf
fldl
bound
sbb
cmp
lock
outsl
inc
sub
pop
or
xchg
mov
xchg
jle
icebp
repz
mov
jmp
mov
dec
and
inc
inc
test
inc
loopne
xchg
sub
adc
mov
mov
adc
icebp
xor
dec
es
sub
fnsave
xor
in
iret
pop
ret
sbb
inc
jmp
lahf
add
cmpsl
insl
lret
inc
loopne
or
push
dec
mov
outsb
sub
jnp
sbb
aaa
mov
add
into
fstl
or
roll
or
pop
aam
hlt
push
jne
lahf
cmp
aaa
test
pop
jmp
mov
jmp
jns
pop
push
mov
dec
sti
mov
daa
xchg
inc
nop
lods
enter
ficomps
das
lock
gs
test
nop
jle
push
cmp
xor
inc
xchg
xchg
sub
xor
out
enter
sarb
dec
add
popf
xor
stc
lret
insl
inc
jns
inc
ja
inc
imul
inc
dec
inc
es
jmp
cs
je,pn
idivb
out
std
pusha
fildll
dec
pop
negl
push
and
scas
push
clc
hlt
and
xchg
push
out
repz
jecxz
arpl
movsl
outsb
xorb
int
aam
test
mov
push
outsb
push
icebp
lods
dec
mov
icebp
add
cmp
mov
pop
or
icebp
or
pusha
clc
pop
cmp
ds
jnp
mov
mov
mov
fcoml
jns
xchg
lods
xor
adcb
push
sub
push
sub
insb
in
mov
push
movsl
sub
jmp
mov
adc
add
shlb
push
cltd
jno
xor
inc
pushf
lock
jl
leave
dec
pop
pop
or
fldcw
aaa
cmp
mov
ficompl
mov
es
jl
lock
arpl
sub
push
xorl
cs
jmp
inc
sub
or
pop
test
or
jmp
pop
mov
xchg
or
cmp
lahf
rcl
loopne
imul
iret
repz
xchg
xor
ja
imul
jmp
mov
mov
jmp
leave
xchg
js
push
sbb
sbb
inc
sub
cli
xor
dec
mov
dec
jns
cmp
aaa
icebp
mov
jo
cmp
push
jle
mov
movsl
jle
fwait
sbbb
add
pop
test
test
or
and
test
jbe
and
icebp
test
das
pushf
jne
mov
into
lods
outsb
sbb
sbb
xor
jae
push
pinsrw
sti
clc
xchg
jnp
xchg
adc
xor
jp
push
fdivrl
add
fiadds
sub
andb
pop
mov
xchg
rolb
cltd
push
ficomps
scas
repnz
imul
add
push
sbb
add
nop
je
push
imul
mov
dec
lods
cmp
in
xor
movd
ljmp
pop
add
sbb
imul
notb
cmp
orl
or
leave
mov
addr16
inc
push
jbe
push
sbb
inc
push
roll
add
lcall
xchg
ret
mov
dec
mov
push
insl
xor
negl
lods
and
lock
fwait
adc
pop
icebp
mov
aaa
sub
pop
mov
in
test
ficoms
push
or
insl
fwait
shrl
mov
adc
sahf
pushf
out
stc
mov
mov
lret
cmpsl
inc
mov
adc
int3
jmp
cbtw
fs
adc
adc
adc
das
loop
mov
out
stc
add
cs
dec
sub
dec
jne
xor
mov
push
push
testl
sub
aas
arpl
cmpsl
dec
gs
pop
insb
sbb
mov
lods
jnp
adc
and
xor
cltd
imul
test
iret
lea
cmp
out
test
jnp
call
mov
pop
jno
add
lock
ds
cmc
xchg
mov
scas
sub
jnp
call
pop
sbb
inc
sub
ret
jbe
cli
mov
sub
xchg
xchg
xchg
jo
dec
fadds
cli
jecxz
mov
or
mov
add
popf
jle
add
and
dec
xchg
pop
shlb
divb
jne
ret
pop
jns
sbb
bound
dec
jl
push
cmpsl
jne
xchg
lret
lods
xlat
push
cs
jae
xchg
pop
add
pop
xor
movsl
xchg
mull
repz
loope
arpl
gs
add
rcrb
cmp
cltd
sbb
xor
fs
lahf
mov
cld
dec
dec
es
loop
pop
xor
xor
inc
xor
repnz
in
mov
sub
repz
xor
mov
dec
cltd
push
out
xchg
out
aam
jle
test
ljmp
mov
popa
adc
mov
fidivl
inc
test
or
orl
jl
mov
icebp
cmp
imul
ss
inc
adc
and
and
iret
cmp
push
adc
cmp
mov
repz
xchg
les
mov
and
stos
mov
jl
fimuls
jo
lock
out
xchg
int
mov
mov
sar
addl
dec
pop
or
rorl
push
pop
jmp
ds
sub
jno
mov
pop
sbb
mov
daa
std
mov
or
in
inc
ds
xor
push
push
push
cmp
adc
jns
scas
fdivrl
sbb
imul
scas
sub
xor
and
int3
xor
loopne
mov
in
aam
xchg
pop
stos
jbe
pop
rolb
dec
lock
mov
pop
mov
inc
repnz
lods
in
test
arpl
ret
xor
insl
or
sub
xchg
in
pop
push
sub
fs
mov
cs
mull
jecxz
mov
push
jnp
sbb
add
repnz
sbb
out
ja
out
int
jae,pn
mov
jge
inc
mov
push
jle
push
cmp
iret
push
in
shl
hlt
sbb
loop
fisubs
mov
cmp
arpl
xor
mov
dec
jnp
cmp
add
sti
shll
jmp
rorb
mov
or
add
in
adcb
add
add
and
lret
push
addr16
push
sbb
xor
sarb
push
lods
mov
adc
mov
push
ret
rclb
outsl
jne
xor
adc
stos
lret
mov
aad
jg
xchg
cmp
pop
or
sub
mov
iret
cmp
inc
andl
xor
pusha
das
into
je
mov
outsl
xchg
cmp
sahf
lahf
adc
push
cmp
nop
loop
mov
add
pop
sbb
jb,pn
lods
aaa
jo
in
jle
addl
and
mov
mov
xchg
or
push
inc
icebp
addr16
mov
int
sti
xchg
push
dec
std
pop
adc
push
dec
inc
adc
dec
hlt
roll
jnp
mov
pop
pusha
xor
int
push
sbb
into
inc
jmp
sub
dec
lods
inc
repnz
mov
mov
enter
xchg
jns
add
fdivp
mov
imulb
fcmovnu
movsl
mov
jb
mov
ret
test
mov
loope
mov
dec
loop
in
cmpsb
mov
xor
mov
and
aam
cmpb
mov
inc
sub
sub
shll
inc
pop
fidivs
pop
inc
mov
roll
ds
jae
jge
cmp
dec
fisttpl
add
cwtl
lds
ss
out
sbb
mov
mov
mov
mov
lods
xor
xchg
daa
and
xchg
adc
hlt
mov
xchg
and
and
cmp
popl
dec
xchg
mov
out
dec
cmp
es
and
fistpll
bound
je
add
int
pop
int
mov
cltd
dec
int
movsb
cmp
clc
mov
aaa
xchg
addr16
push
ret
lods
push
xor
mov
push
mov
push
lods
mov
pop
sub
and
aam
pop
rol
in
pop
popf
mov
stos
mov
sub
xor
push
mov
ret
push
imul
xchg
leave
dec
jo
pop
jl
jo
lods
subl
fsubr
movntq
pop
push
mov
sub
pop
mov
setp
rclb
outsl
push
rclb
ret
mov
or
pop
sbb
xor
xchg
stc
push
mov
mov
insl
mov
and
mov
or
jecxz
pop
push
jge
movsb
sarl
outsl
mov
or
xchg
pop
imul
invd
push
cmp
lea
xchg
shll
xor
dec
sahf
add
hlt
mov
push
addr16
xchg
mov
inc
pop
add
out
shrb
adc
pop
icebp
cmpsw
fisttpll
fmul
fsubr
pop
pushf
das
mov
xchg
push
add
push
lret
jle
or
cli
jge
dec
pop
test
stos
out
daa
mov
jo
das
out
mov
inc
addb
cmp
repz
push
das
cmp
fimuls
mov
ljmp
adc
addr16
fidivrs
fdivl
arpl
or
sbb
add
hlt
std
cltd
or
adc
das
xchg
mov
lar
xchg
add
int
jecxz
cmpsb
push
and
pusha
sarb
inc
cmp
pop
and
xchg
fildll
mov
lds
mov
aas
sbb
push
cmpsl
mov
inc
pop
inc
jo
rcr
aaa
inc
mov
roll
pop
cmp
arpl
mov
loop
dec
icebp
in
mov
pushf
adc
enter
xchg
xchg
adc
mov
repz
dec
push
out
pop
test
lcall
and
ret
or
push
jo
pushw
xchg
int
iret
or
loop
add
ret
mov
fidivrs
repnz
adc
adc
pop
into
mov
inc
shrl
adc
mov
cmc
ret
adc
ja
js
mov
data16
mov
sub
sbb
push
sbb
enter
add
jmp
jno
xchg
xchg
jl
sub
lock
fstl
and
fcom
loopne
jae
add
fwait
cmpsl
andl
aaa
popa
aaa
mov
in
clc
jmp
ja
add
push
cmc
in
subb
jo
push
dec
subb
andl
add
call
in
push
mov
scas
mov
insb
push
mov
xchg
pop
cwtl
xchg
aaa
dec
cmp
stc
dec
imul
stos
mov
sub
testl
popf
lock
mov
and
arpl
push
pop
inc
fdivrs
andb
mov
sub
outsb
and
pop
or
mul
push
ljmp
bound
loopne
test
hlt
pop
jo
cmp
stos
mov
push
faddl
or
loope
hlt
or
sti
nop
pop
cmp
je
in
aaa
stos
cmp
add
enter
insl
shlb
add
adc
mov
mov
mov
mov
or
jbe
inc
mov
sbb
in
and
mov
jle
imul
cs
cmp
xorb
loope
add
and
test
popf
in
lock
mov
inc
hlt
dec
mov
inc
in
or
iret
lods
pop
xchg
xor
dec
dec
inc
loopne
int3
stos
or
call
adc
push
adc
pop
pop
dec
ds
enter
mov
cmp
jge
jb
mov
aam
jns
std
dec
push
or
inc
insl
test
bound
dec
push
cli
scas
filds
push
push
adc
stos
mov
jmp
push
and
push
pop
xchg
scas
popf
jp
enter
test
nop
xchg
xor
test
jne
imul
in
jno
lahf
xchg
push
and
clc
push
or
sahf
aas
ss
aam
push
in
dec
inc
xchg
sbb
adc
in
inc
xchg
jl
mov
lock
cmc
push
pop
scas
aas
push
daa
cmpsl
jb
push
xchg
pop
inc
mov
lds
dec
lock
ret
or
cltd
or
or
xor
outsl
rolb
incb
lock
fcomi
fisttps
mov
jmp
xchg
fldl
xor
inc
rcll
clc
mov
sub
jg
push
js
mov
xlat
pop
push
call
test
dec
mov
jp
sub
push
xor
cmp
pop
push
sti
aaa
adc
add
inc
push
stc
in
mov
and
jl
pop
xchg
mov
fdivrl
std
iret
sbb
enter
sarl
mov
sbb
xchg
loop
sub
mov
pop
pop
dec
inc
enter
je
fistpl
mov
orb
insl
das
out
mov
ss
stos
stos
sbb
hlt
add
scas
dec
jg
push
and
cmp
push
push
lods
sbb
data16
stc
jmp
xlat
rorl
mov
or
pop
jo
fcmove
sub
ja
ds
cmc
mov
pop
cmp
roll
outsl
push
out
pusha
cltd
outsl
cmp
mov
roll
hlt
mov
sub
repnz
sbb
cmp
mov
xchg
lea
pop
mov
xabort
mov
icebp
push
dec
xchg
jg
cli
fnsave
fistpll
cmc
push
add
sub
jge
sbb
xchg
out
push
sub
mov
pusha
cmc
loope
push
xchg
cwtl
nop
mov
dec
pop
fwait
jo
mov
shrb
or
mov
add
ret
imul
and
outsb
add
repz
cmpsl
out
push
sbb
xor
fwait
dec
cmp
add
insb
test
sub
idivb
icebp
xor
out
sbb
add
mov
mov
mov
xchg
inc
xor
mov
mov
mov
repz
bound
ds
sbb
xchg
mov
push
icebp
repnz
stos
leave
fstpl
bound
data16
fnstenv
pop
sarl
sbb
cld
push
cld
dec
dec
xchg
sub
sti
pushfw
mov
sbb
sub
or
dec
pop
mov
ss
dec
insb
in
ljmp
scas
jns
call
lods
gs
add
mull
jmp
xor
sbb
mov
push
rcrb
jecxz
mov
pusha
lcall
jno
add
xchg
pop
in
jmp
inc
rcll
sub
stos
adc
dec
jecxz
mov
cld
dec
les
dec
in
or
add
in
loope
ficompl
mov
ss
mov
push
lods
xchg
jmp
pop
inc
inc
pop
cli
lock
aaa
sbb
adc
movsl
mov
jnp
call
sbb
sub
ret
mov
das
stc
pop
adc
sub
dec
xor
cmp
lret
movsb
ljmp
ljmp
xor
add
mov
sub
mov
xor
lret
or
sub
xlat
jp
imul
sbb
mov
sbb
or
popf
xchg
mov
daa
clc
clc
or
fwait
push
jecxz
sub
jle
xor
subl
mov
xchg
add
cmp
or
add
shl
out
subb
shll
xchg
xor
outsl
out
hlt
pop
fstpl
xor
outsb
lret
dec
adc
in
xchg
inc
dec
cmp
push
xchg
pop
pop
jge
stc
and
daa
cmc
imull
sti
or
xor
cmpl
stos
dec
dec
rorl
inc
aaa
push
xchg
sahf
lea
xlat
outsb
mov
lret
jecxz
lahf
shrl
sar
xor
dec
hlt
cmp
movsb
test
push
sarl
jnp
adcb
icebp
jae
xchg
in
mov
mov
push
xchg
sbb
jg
in
inc
jns
pusha
or
adc
int3
stos
leave
mov
test
mov
cmp
das
cmpsb
jg
cmp
stos
xorb
mov
mov
add
mov
test
bnd
cmp
pop
sbb
repnz
push
mov
into
pushf
mov
sub
repnz
xor
dec
das
push
sub
push
fsubs
dec
fcmovu
imul
test
popa
adc
sahf
xchg
dec
pop
cltd
push
outsb
scas
xchg
sbb
jne
inc
cmp
inc
imul
xchg
inc
in
lock
cvttps2pi
test
sahf
aam
movsl
lret
and
jle
xor
fldcw
cmp
add
bound
cmpsl
mov
cmpsb
jae
rep
ljmp
xor
sahf
pop
or
xlat
jnp
incb
negb
mov
xor
adc
jle
dec
inc
jmp
jb
or
aad
lds
or
sbb
inc
lret
fs
arpl
mov
xchg
sub
jbe
inc
and
loop
dec
cmp
arpl
daa
add
enter
inc
push
xchg
and
ret
pusha
pop
mov
sbb
add
xor
sub
iret
sub
jo
lea
push
movsl
fwait
rcll
jbe
adc
decl
imul
ds
jp
push
mov
popl
xor
ds
in
scas
imul
mov
inc
pushf
mov
lcall
aad
push
lret
inc
push
notl
xchg
or
int3
inc
clc
mov
inc
dec
mov
cmp
xor
hlt
and
mov
cmp
sub
push
push
or
cmpsl
adc
imul
inc
inc
push
jmp
mov
and
es
dec
pop
cmp
and
xchg
cwtl
mov
fucom
sub
xchg
mov
out
lcall
icebp
scas
shll
int
pop
mov
fisttpll
xchg
sub
push
push
pop
dec
cmp
inc
scas
cmp
mov
and
cmp
adc
gs
fcmove
cmovle
sbb
mov
call
inc
mov
sbb
mov
xor
inc
test
roll
push
mov
lods
add
push
lods
push
xchg
test
xor
or
cmpsl
imul
loop
dec
bound
mov
decb
and
gs
stc
stos
or
mov
mov
xorb
push
pop
mov
jmp
jae
fidivrl
cmp
pushf
ret
je
adc
in
xchg
push
jbe
sbb
mov
and
xor
dec
in
mov
fidivl
hlt
push
mov
aam
sbbb
cmp
repnz
out
cmp
ficoml
jmp
arpl
sub
jnp
es
pop
icebp
out
mov
stos
pusha
push
dec
push
lods
sbb
sbb
pusha
ds
or
ss
inc
loope
pop
in
testb
mov
dec
cmp
pop
cmp
mov
jbe
mov
int3
pop
push
jns
dec
fwait
add
testl
fxch
sti
or
int
or
xor
and
and
push
mov
adc
lods
bound
dec
jbe
or
or
jno
add
cmp
adc
mov
dec
sbb
pop
push
add
jp
sahf
push
or
xor
xchg
adc
nop
lods
je
into
pop
les
add
jbe
xor
out
or
add
push
aaa
jns
inc
mov
cmp
push
xlat
loope
cmpsb
imul
stc
ljmp
ret
adc
push
mov
mov
lahf
ret
arpl
pop
push
adc
cmp
popa
mov
popl
ljmp
jge
fisttps
or
sub
bnd
adc
out
shll
lcall
out
into
das
and
popa
fdivp
shl
cltd
cmpsl
mov
les
repnz
cmp
add
loop
cmpsl
sbb
movsl
mov
and
mov
sub
xchg
shrl
sub
fnstcw
push
shrl
testl
pop
push
mov
sbb
push
and
sub
mov
inc
mov
inc
xchg
data16
int3
mov
xchg
push
mov
sub
jne
stos
aaa
push
dec
push
dec
mov
sub
ret
test
add
idivl
mov
int3
xor
fisubs
mov
dec
xchg
sbb
adc
xor
pop
out
loop
lock
cmpsb
cmpl
jmp
outsb
mov
sbb
icebp
idivl
jecxz
lods
addr16
ret
add
clc
jge
stos
cwtl
fmulp
arpl
fwait
or
sbb
sub
pop
push
mov
les
out
repnz
mov
mov
loop
jo
mov
lret
cmc
mov
faddl
jmp
sub
into
sbb
cmp
jp
push
mov
into
imul
jp
test
je
xor
shlb
cmp
and
fisubrl
inc
jne
hlt
dec
jl
xor
adc
or
out
std
stos
mov
das
adc
dec
cmp
pop
and
sahf
cmpsb
and
push
pop
push
xchg
in
arpl
fldenv
jns
shlb
ficomps
xor
xor
inc
cmpsl
dec
add
push
ret
dec
mov
or
adc
add
int3
testl
cmp
mov
iret
xchg
xor
sbb
inc
cmp
sbb
or
dec
pushf
push
loope
pop
dec
test
mov
push
push
dec
mov
mov
push
enter
add
subl
push
adc
lahf
jne
push
jmp
pop
or
mov
and
mov
out
movsl
inc
hlt
nop
add
in
mov
shl
jle
sbb
jo
in
aas
mov
fsub
xchg
push
and
movsl
sub
imulb
sub
mov
lods
rclb
xchg
fmuls
fstps
stos
fwait
scas
mov
cmpsb
jmp
std
scas
nop
dec
cmp
jnp
bound
xchg
sbb
mov
mov
repnz
call
cs
push
xor
jp
pop
push
add
adc
sbb
cmpsb
jmp
ds
mov
insl
in
or
out
mov
addl
fnstenv
and
lds
adc
jb
out
bound
cmc
dec
xor
ret
leave
sarl
jmp
loope
mov
js
pop
xchg
lods
cli
hlt
xchg
jmp
push
mov
outsb
add
and
xorl
lods
shrb
or
fldcw
push
lods
outsl
jbe
mov
or
mov
rcr
sub
call
mov
scas
push
fs
imul
in
popl
or
leave
jge
inc
xlat
mov
jp
jns
int
mov
clc
mov
fidivrl
movsb
js
daa
sbb
cli
scas
andl
mov
and
inc
jae
sub
xor
popa
in
push
std
mov
jg
div
imulb
js
mov
push
sub
testb
lods
out
cmp
fnstsw
xchg
or
jle
dec
or
cmp
popa
mov
xchg
movsb
loop
add
aas
add
push
xor
jnp
jmp
ret
in
pop
fucomi
mov
cld
test
imul
jbe
lds
inc
insb
mov
nop
mov
in
mov
ret
jo
xor
push
loop
or
xor
add
lods
ss
and
out
out
xchg
xchg
arpl
insb
pop
dec
add
add
test
imul
sbb
xchg
lret
out
jno
and
call
push
arpl
call
jo
shll
sub
push
repnz
adc
dec
and
imul
mov
loopne
or
fiaddl
out
aas
cmp
popa
sub
in
aas
in
and
cmpb
outsb
pop
mov
cmc
sub
and
mov
loope,pt
icebp
mov
lahf
test
sar
loopne
cs
push
mov
jae
mov
jne
decb
stos
push
sti
mov
push
aaa
daa
mov
outsl
repnz
testb
sarb
dec
or
sbbb
mov
cmp
leave
jo
jp
ficomps
mov
pop
leave
lods
arpl
dec
mov
sub
cwtl
dec
cmc
in
push
addr16
and
and
fcom
adc
clc
fisubrs
clc
test
inc
pop
lods
fwait
sbb
jge
xor
sbb
jno
fcom
adc
cltd
or
test
test
lret
xor
aas
sbb
aad
pop
out
push
add
dec
bound
loop
and
sbb
mov
movsb
shlb
and
cmp
push
jb
or
xchg
div
sub
or
int3
xor
adc
xor
add
ja
sub
clc
and
into
das
jecxz
xlat
shll
aad
cmpsb
xchg
imull
lcall
mov
clc
xor
push
add
or
push
clc
std
jge
sbb
jb
inc
pusha
dec
mov
aam
and
sahf
pop
movsb
mov
sub
out
lock
sub
sbb
xchg
inc
les
movsl
das
lea
test
lret
push
and
sbb
adc
xchg
pop
mov
cwtl
ss
cmp
jae
lahf
insl
sub
pop
fcompl
or
xor
aam
or
add
popa
repz
out
les
movsl
xor
push
sarl
insb
loop
lock
pop
or
aad
pop
cmp
add
roll
mov
dec
std
into
clc
push
lods
sbb
aam
fistps
or
pop
in
mov
xchg
insb
out
aaa
jns
nop
in
push
jno
push
mov
cmp
push
ss
ds
push
dec
push
shlb
sub
inc
push
popf
shll
lret
ja
mov
xor
mov
ds
adc
xor
pop
nop
loop
andb
ret
push
push
ret
out
cmc
nop
out
das
arpl
dec
xor
jns
jns
mov
mov
aad
mov
adc
mov
mov
andb
int3
gs
sbb
xor
jecxz
jno
lods
push
sarb
sub
shr
or
mov
mov
push
push
sti
or
movsl
lret
xchg
sbb
push
jns
sbb
data16
cmc
push
in
pop
test
mulb
loopne
bound
pop
cmp
lds
sbb
daa
mov
mov
test
les
in
xchg
xor
sbb
sbb
inc
jecxz
in
cmp
adc
sub
cli
lea
pop
icebp
popf
fstpl
dec
xchg
fs
inc
inc
jb
or
pop
mov
or
xchg
int3
scas
in
shll
filds
adc
xor
sti
push
fwait
and
ret
mov
lods
xchg
cmp
fnsave
jl
mov
push
sbb
cmc
icebp
xchg
hlt
arpl
std
cli
jl
je
in
mov
cli
dec
push
int
lea
pop
mov
pop
xlat
insl
xor
std
lods
popa
pop
stos
out
imul
je
test
shl
test
pop
add
mov
jl
adc
cmp
popa
cmpsb
mov
or
dec
out
sbb
xchg
sub
insl
in
sub
or
mov
adc
xchg
or
arpl
scas
mov
mov
sub
jle
fwait
inc
mov
inc
xchg
push
pop
xchg
adcl
and
into
repnz
cmpsb
jecxz
xchg
jmp
inc
mov
int
jmp
leave
cwtl
and
mov
sub
addl
push
pop
dec
icebp
adc
xchg
adc
jp
bound
adc
xor
add
sub
jl
mov
shl
call
inc
lock
jle
ds
mov
jb
aam
lret
cld
shlb
aad
les
xchg
adc
jl
subl
mov
push
jnp
mov
pop
sbb
lcall
roll
pop
in
popf
sbb
fadds
pop
mov
sub
mov
push
add
mov
pop
mov
jecxz
shrl
call
fcomip
adc
pop
lret
mov
inc
in
jb
ds
lods
addr16
inc
push
out
iret
mov
push
fs
std
push
xchg
call
out
adcb
cmp
in
or
mov
repnz
push
mov
xor
mov
and
jnp
aaa
les
mov
sub
dec
pop
or
dec
pop
je
repz
loope
mov
adcl
frstor
in
sbb
sub
lret
test
sub
movl
fdiv
fdivrs
js
popf
std
xchg
xchg
or
add
inc
jle
cmp
jb
jge
clc
and
xchg
push
cld
mov
dec
into
xor
sub
adc
pop
sarb
cmp
inc
inc
mov
xor
adc
push
jno
inc
mov
popa
aaa
lock
repz
add
into
mov
xlat
mov
pushf
loope
gs
push
lea
sar
xor
std
dec
out
pop
mov
mov
imul
xorb
bnd
sub
adc
cmp
insl
iret
xchg
push
and
add
push
stos
mov
test
mov
je
mov
xchg
icebp
dec
je
cmp
pop
subb
push
outsw
jno
pop
data16
pop
test
inc
inc
push
jnp
jae
pushf
lods
test
dec
scas
mov
mov
mov
dec
iret
sub
jne
cmp
mov
xchg
cs
inc
popa
mov
jge
clc
clc
push
cwtd
jnp
adc
push
xchg
add
mov
xchg
in
dec
push
and
in
lods
inc
sbb
imul
jbe
into
aam
jne
test
dec
mov
mov
fcomp
fdivrl
stos
out
dec
dec
dec
lcall
in
sarb
sub
js
and
fsubl
dec
lods
ds
stos
je
aas
xor
mov
pushf
clc
add
faddl
lock
pop
icebp
fstl
out
js
pop
add
js
in
lea
mov
push
arpl
jecxz
or
cmp
pushf
mov
leave
outsl
inc
xchg
jg
mov
push
jmp
ret
mov
push
mov
subb
jmp
adc
or
pop
fnstenv
sbb
ret
popf
mov
ja
lds
cli
pop
push
dec
inc
add
shlb
jbe
shll
mov
xchg
xchg
inc
push
stos
mov
xlat
xor
sbb
push
in
gs
xchg
xorl
xchg
xchg
fsubs
mov
dec
mov
imul
mull
jne
push
lods
lcall
out
popa
inc
cli
jmp
mov
data16
sbb
and
jp
push
je
push
rcrl
das
pop
inc
ret
cld
sub
stc
jb
shl
or
xchg
imul
xor
outsl
xchg
aas
cmp
cwtl
dec
scas
iret
jnp
out
adc
flds
mov
mov
jae
lret
aaa
xchg
add
outsb
fs
mov
cld
sub
in
sub
ljmp
incl
iret
mov
sahf
inc
arpl
add
jae
popa
pop
jmp
pop
fidivrs
cltd
pop
lret
insb
mov
cmp
in
adc
insb
inc
jns
mov
insl
rorl
in
pop
mov
insl
test
or
push
out
xchg
lods
aad
or
repnz
in
or
into
data16
push
pop
sbb
insb
pop
insb
inc
addb
mov
outsl
or
push
push
sbb
sbb
fidivl
mov
or
add
and
dec
repz
mov
aam
cmp
mov
movsb
mov
mov
aad
movl
xchg
lret
ljmp
dec
shl
iret
push
outsb
lcall
out
or
int3
sahf
arpl
jo
aaa
adcl
and
aam
xor
mov
sub
sbb
mov
dec
enter
jmp
inc
add
or
cmp
lcall
push
jg
iret
jbe
fidivrl
dec
and
pop
and
das
sub
fdivrs
push
rcr
push
iret
dec
lcall
cwtl
mov
out
imul
idivl
sbb
enter
push
mov
sbb
mov
ss
mull
xchg
xchg
adc
adc
psubusw
add
jno
int
xlat
js
fbld
adc
in
mov
cmpb
mov
push
inc
adc
sub
sub
jle
cmp
dec
lahf
adc
push
and
aas
mov
pop
cmp
lret
call
roll
jbe
lock
pop
jnp
push
mov
arpl
dec
popa
sub
test
add
divl
mov
xchg
xchg
fcmovb
mov
outsb
add
jne
mov
mov
mov
fiaddl
cs
imul
test
inc
idivl
roll
aas
cmpsb
aad
mov
int3
call
insl
inc
dec
shll
or
es
lret
icebp
xchg
in
pop
mov
cmp
mov
test
push
xchg
inc
es
add
add
adc
js
test
mov
or
sbb
scas
mov
mov
std
je
add
jge
mov
out
pop
test
pop
push
or
mov
leave
jbe
fdecstp
push
pop
enter
pop
add
xor
jae
stc
and
cmpsb
cmp
fiadds
jmp
jg
push
push
jne
dec
add
rcrb
sbb
mov
dec
aam
or
push
hlt
sarb
xor
addl
or
or
pop
add
adc
pop
pushf
fwait
pop
ret
rcrb
push
jmp
dec
std
xor
pop
mov
mov
outsl
pop
or
pop
stos
adc
add
fldt
push
ljmp
andl
subl
adc
sub
cmp
shrl
xchg
stos
add
inc
cmp
sub
pop
jbe
mov
xor
and
pop
lea
sub
imul
dec
xor
dec
dec
bswap
pop
daa
fildll
aas
pop
test
inc
adc
push
jle
pop
in
dec
xor
pusha
aad
cmc
dec
repz
sub
mov
jmp
sbb
sub
add
jle
popf
cmp
mov
adc
adc
imul
in
mov
dec
inc
dec
mov
adc
inc
fcomps
lock
sti
mov
cmp
cmc
adc
jns
jnp
fdiv
mov
pop
mov
push
jmp
cwtl
fistpll
icebp
fs
not
cmp
pop
mov
arpl
mov
or
or
xor
in
jle
mov
sahf
lret
cmp
fcoml
inc
dec
cmp
sbb
test
call
push
ret
lcall
jge
lds
aas
fcmovnu
add
out
mov
daa
adc
or
insl
pop
ficoms
mov
push
dec
dec
das
sbb
mov
sarl
push
cmp
push
pop
pushf
jns
mov
insl
mulps
fmull
stos
and
call
add
lea
inc
lret
and
pop
push
ficomps
mov
xor
adc
std
outsb
or
fists
insb
inc
sbb
cwtl
mov
add
pop
faddl
mov
adc
ljmp
sub
es
nop
mov
add
mov
add
fwait
ja
je
mov
sub
cld
lds
icebp
and
dec
sbb
push
loope
mov
bnd
movsb
stos
push
into
mov
icebp
add
sbb
xor
stos
push
pop
dec
jo
push
insb
jb
lds
int3
mov
jne
and
xor
cwtl
push
cs
xchg
sbb
or
inc
popf
mov
mov
mov
outsl
cmp
pusha
sbb
pusha
and
ljmp
fwait
dec
push
jp
xor
xor
inc
dec
xor
std
pop
cmpsl
pusha
jecxz
dec
push
push
pop
xlat
and
andl
pop
xor
cmpsl
cmp
push
mov
jle
out
jbe
sbb
xchg
lcall
mov
mov
jle
fidivrs
or
dec
in
fsubl
jl
andl
sub
loopne
ret
mov
fs
loope
sub
and
xchg
fistpl
mov
jb
icebp
nop
inc
mov
pop
call
inc
frstor
je,pn
cmp
cmpsl
mov
repz
leave
xor
pushl
movb
call
imul
pop
out
jns
push
in
adc
aaa
dec
into
in
mov
mov
ljmp
fists
or
iret
jle
mov
and
sub
add
cli
imul
and
push
ret
jae
xor
mov
std
fwait
mov
ret
sbb
sub
mov
mov
inc
or
mov
mov
cld
pop
or
mov
out
stos
inc
cli
addr16
cmp
jo
mov
push
sbb
out
dec
dec
mov
or
pushw
push
sub
mov
lahf
xchg
aas
adc
loope
jg
into
sbbl
sbb
xchg
in
ljmp
bound
cmp
loope
dec
xchg
adc
aad
xorb
mov
cmp
push
lahf
and
mov
cmpsb
xor
add
shl
xchg
sbb
in
aam
pop
inc
cmc
imul
arpl
mov
fidivrs
xor
mov
mov
daa
in
mov
fwait
inc
int
les
xchg
repnz
add
mov
sub
inc
mov
mov
jno
pop
out
add
in
mov
push
push
adc
scas
push
jecxz
iret
sbb
mov
cs
adc
hlt
or
pop
jl
arpl
ds
nop
sbb
mov
inc
rorl
mov
fildll
pop
pop
sbb
stc
out
inc
lahf
sarb
pushf
data16
mov
push
and
cmc
cltd
pop
adc
push
cltd
out
ds
and
fcompl
pop
adc
es
push
push
add
mov
jnp
jge
lcall
and
fildl
jge
jge
popa
es
das
pop
inc
push
or
pop
test
in
scas
push
je
or
xor
out
or
sbb
lret
inc
or
inc
cwtl
push
push
xor
pop
out
lods
mov
mov
aad
and
test
push
jo
insl
cmp
add
arpl
leave
adc
movsl
cmp
mov
stos
fimull
aam
adc
mov
jmp
rcl
out
mov
mov
jns
je
pop
sub
and
and
cmp
inc
mov
mov
xchg
call
outsb
xor
dec
inc
jae
out
sbb
pop
rorb
out
sti
add
loop
rcrb
sub
lcall
push
movsl
cmpsb
fcomps
inc
test
test
pop
fmul
adc
imul
xchg
xchg
or
push
mov
ljmp
or
dec
shrl
jbe
jge
pop
jne
clc
push
std
mov
jns
lock
xor
mov
sbb
cs
andl
cmp
and
outsb
push
inc
adc
rcll
outsb
int
aad
fidivrl
js
jg
aad
pop
mov
jnp
in
xor
lahf
jp
xchg
imul
inc
or
push
cmpsl
lds
into
js
jbe
leave
test
xor
mov
cld
sub
adc
or
je
push
pop
adc
jnp
push
mov
imul
mov
das
aas
dec
aaa
dec
movsl
mov
push
mov
repnz
pop
mov
adcb
cmpsl
shrl
nop
mov
sarl
inc
cli
xchg
enter
bnd
jmp
loopne
xchg
cmp
movsb
cs
fdivs
xchg
jb
xchg
les
test
mov
inc
cmp
and
aam
push
fldl
movsl
iret
or
lret
aas
mov
sbb
cmpsl
out
ucomiss
cmp
mov
xor
push
add
pop
push
imul
jo
jl
adc
fs
gs
out
cmpsl
aam
stos
lock
fs
loopne
lods
lahf
xchg
xor
lret
jnp
fnsave
nop
lea
int
sub
into
lea
cmc
cmp
enter
adc
xchg
jno
xchg
xchg
mov
pusha
mov
ficoml
shll
stos
pusha
mov
xor
mov
in
pop
inc
les
pop
out
les
inc
pop
xchg
mov
aas
add
jle
imul
stc
mov
cmpsb
add
shrb
mov
xor
out
data16
push
in
pushf
clc
or
mov
adc
dec
add
movsb
les
fstpt
movsb
pop
mov
mov
cmp
lods
mov
loope
mov
push
shlb
push
imul
cmpsl
ja
sbb
fmuls
aaa
add
jo
or
fmulp
es
enter
lods
jnp
xchg
mul
xchg
int
shll
arpl
in
mov
jbe
and
orb
or
sbb
xor
ficomps
lods
pop
push
lahf
and
rcl
mov
shlb
pusha
das
and
lock
jmp
lret
xchg
push
pushf
pop
test
inc
push
xlat
or
add
sub
fcoml
ret
stos
add
jl
mov
js
iret
icebp
cmpsb
repnz
pop
jae
cmp
les
leave
jne
fstpl
pop
mov
dec
bswap
out
pop
dec
gs
mov
fsub
daa
loope
jo
es
in
xor
pop
jg
inc
sub
in
dec
js
jp
shll
add
xor
mov
sbb
add
sbb
out
test
sbb
inc
and
js
inc
into
test
push
fwait
xchg
mov
hlt
mov
sub
mov
ljmp
xor
add
mov
xchg
aam
push
fimull
ss
jg
fwait
dec
or
lds
popa
loop
mov
scas
fs
xlat
or
jg
mov
enter
loopne
imul
call
inc
pop
or
push
mov
sbb
out
pusha
inc
push
aad
std
mov
repnz
lock
jmp
aas
scas
jmp
xchg
movsl
stc
mov
mov
jl
insb
cwtl
jmp
ja
push
dec
xor
lahf
sbb
test
jl
pushl
int
adc
mov
out
pop
cltd
xchg
mov
add
getsec
mov
xchg
daa
sbb
pop
data16
push
iret
pop
xchg
adc
clc
int
xor
or
in
rolb
in
adc
xchg
cmc
into
or
and
inc
jg
les
icebp
cmpb
ret
leave
mov
lretw
clc
mov
jle
jmp
dec
push
int
ds
dec
sbb
jp
mov
jecxz
nop
jl
push
popf
jecxz
sbb
test
into
lock
or
mov
cmp
xchg
std
test
test
sbb
dec
popa
dec
mov
xlat
out
jne
mov
xor
or
mov
sbb
mov
dec
std
sub
into
movsl
daa
fcoms
leave
xchg
fsubr
or
xchg
or
dec
mov
out
cmc
mov
aas
inc
lret
pushf
in
cld
into
dec
and
mov
xchg
adc
sub
lret
sysexit
and
and
push
aad
aad
ja
shrl
pop
mov
fscale
inc
adc
xchg
int
mov
cmc
jp
mov
inc
je
jo
pop
cmpsb
sub
lods
ret
ficomps
mov
loopne
mov
sbb
js,pn
push
rcr
add
cmp
or
or
nop
mov
fwait
add
lcall
jo
push
inc
mov
push
test
ss
lcall
pop
stc
clc
sub
sbb
pop
rcr
mov
fsubrs
sbb
clc
inc
movsl
fsubrs
jecxz
addr16
iret
push
sbb
cwtl
andl
mov
dec
xor
jmp
xor
mov
out
ds
jb
loope
std
rcrb
push
dec
cmp
test
popa
cwtl
xchg
push
mov
dec
adcb
je
or
adc
jo
shll
add
dec
mov
mov
add
cld
pop
cs
lock
outsl
add
inc
mov
adc
add
ret
cwtl
jo
fucom
dec
movsl
inc
iret
mov
xor
sbb
stos
out
aad
das
add
push
push
sbbb
fisttpll
mov
xor
and
in
pop
inc
push
adc
rorl
and
adcl
sbb
mov
mov
jmp
pop
mov
fiadds
test
and
fistl
outsl
popa
push
jp
ja
dec
insb
xchg
movsb
rol
call
ja
mov
cmp
in
cmc
arpl
sub
cmp
mov
xchg
div
push
jle
test
push
imul
mov
push
das
cld
lods
aaa
jo
sbbl
outsl
arpl
repnz
dec
mov
icebp
js
lods
lcall
sti
mov
outsl
imul
nop
scas
out
or
xchg
scas
inc
push
inc
repz
mov
movsl
std
push
fisubrs
mov
mov
xchg
xlat
cmpsl
add
fcoms
push
popf
xor
pop
pop
and
in
sub
ret
dec
mov
dec
cmc
push
cmp
arpl
xor
pop
push
mov
cmp
sarb
xchg
rorl
push
inc
mov
aas
jbe
jnp
or
test
push
inc
dec
negb
dec
cld
adc
bound
and
jg
push
pop
inc
ficompl
enter
enter
rcrb
ja
push
clc
outsb
fisubl
dec
and
add
cli
push
scas
xchg
dec
pop
adc
pusha
popa
lods
jmp
push
xor
subb
inc
add
cltd
ds
sbb
into
mov
dec
xchg
xchg
sbb
fwait
xchg
movsl
mov
fwait
les
cmc
mov
mov
xlat
cmc
mov
jmp
lret
aaa
rorl
scas
ds
jmp
cmp
adc
aaa
sbb
xchg
xchg
roll
add
mov
je
pop
mov
mov
mov
lods
sahf
jo
stos
enter
cmc
pusha
cmpsb
adc
mov
mov
xchg
jmp
repz
fstpl
mov
push
jns
pop
int
pop
fs
mov
adc
inc
adc
cmp
mov
stos
les
inc
frstor
lds
arpl
lcall
int3
mov
cmp
push
scas
jo
sbb
xchg
lods
ficoms
jmp
add
push
jecxz
imul
add
mov
dec
insl
loop
in
dec
frstor
mov
mov
out
cmp
fucom
pop
popf
stos
xchg
xlat
jl
daa
push
or
cmc
sub
aad
and
dec
xchg
enter
sti
cmc
adc
andl
push
push
mov
push
jno
test
cmp
rcll
in
stos
pusha
insb
sub
fstps
jge
nop
arpl
jae
inc
negl
sbb
add
push
test
insl
bound
outsl
jmp
rolb
pop
xor
js
add
movb
ret
lahf
outsl
in
xchg
arpl
andb
dec
in
sbb
repz
sub
inc
lahf
mov
or
add
movsl
fwait
cmp
sbb
lahf
sub
mov
xchg
sti
clc
mov
and
js
sti
mov
or
fcoml
mov
stc
cli
flds
imul
shll
jp
inc
jnp
mov
mov
mov
mov
pushw
mov
scas
mov
lock
nop
push
clc
cmpsb
cld
push
dec
nop
pop
jmp
cs
imul
lea
jb
xchg
push
or
lret
dec
out
pop
xchg
pop
mov
movsb
in
mov
mov
insl
mov
xor
pop
dec
dec
or
add
jno
xchg
test
addr16
mov
pop
pop
push
mov
pop
sahf
xchg
into
and
xlat
sub
or
lods
fidivs
ljmp
push
xchg
cs
and
test
pushf
sbb
cmp
adc
inc
mov
fnstcw
pushf
sbb
lds
pop
xchg
movsl
jmp
pop
or
xchg
arpl
inc
adc
xor
xchg
adc
ljmp
test
test
cmp
push
pop
mov
int
and
pop
xchg
xchg
fdivrs
mov
lods
xchg
add
add
xchg
and
mov
jnp
cmpsb
push
push
xor
test
cwtl
ret
mov
movsl
pop
adc
mov
movsb
mov
aam
test
xchg
addr16
mov
mov
mov
lahf
mov
js
push
ss
mov
inc
test
push
mov
xor
lahf
pop
mov
lods
xor
pop
and
shrb
repnz
and
jbe
inc
movsl
pop
imul
cmp
fiaddl
sbb
xor
and
addr16
dec
inc
fidivrs
add
ret
jnp
ret
dec
sub
repz
rol
cmp
adc
notb
rclb
mov
ret
gs
rcrl
lea
enter
aas
insl
fstpt
test
adc
clc
inc
fists
xchg
push
adc
jno
rcrb
sub
nop
mov
nop
lret
mov
fmul
test
add
int3
mov
sub
add
lock
inc
push
jns
sub
outsl
cmp
xor
jge
fnstenv
repz
cld
push
sti
cli
lret
dec
xor
adc
jecxz
scas
push
imul
cltd
jle
adc
mov
mov
popa
dec
cmp
xchg
push
pop
xor
in
mov
int
lds
xor
or
xor
adc
sahf
popa
fs
push
fs
cltd
in
mov
xor
bound
clc
aam
mov
or
arpl
in
adc
idivl
cmp
inc
adc
mov
mov
lret
sbb
in
mov
mov
push
push
outsb
ja
or
pop
xchg
or
mov
pop
add
addr16
sbb
cmp
mov
pop
lods
movsb
inc
or
sbb
outsb
das
test
jno
lods
stos
mov
cmp
pop
sub
dec
movsl
inc
in
push
xor
loop
js
cmp
xorl
push
popf
xor
sbb
or
fisubrs
and
pop
fmul
imul
or
sbb
stc
outsb
pop
jecxz
xor
push
faddl
mov
cli
int3
sahf
clc
je
add
lret
push
xor
adc
xchg
pop
sub
pop
mov
lahf
insb
mov
xlat
adc
mov
sahf
leave
mov
leave
adcl
adc
inc
mov
in
aad
out
cmpsb
push
mov
sub
jne
pop
sbb
and
fdivl
cltd
leave
mov
mov
call
mov
jp
mov
mov
aam
dec
fcmovne
cmp
fisttps
mov
and
popa
mov
cld
and
icebp
adc
fbstp
xchg
and
pop
cmp
pop
cmp
cmp
lds
scas
ljmp
add
mov
lret
sbb
arpl
inc
notl
adc
rcrl
xor
pop
xchg
cmc
cmp
rcrl
ljmp
fstl
add
outsl
fsubrs
add
sub
push
aam
sub
inc
jmp
aad
outsl
pop
leave
mov
frstor
leave
inc
mov
jle
pop
mov
and
ss
mov
sbb
and
fsubs
adc
lea
and
push
movsl
inc
stos
fstpt
mov
rcl
dec
hlt
xchg
cmp
insl
xchg
inc
push
xchg
pushf
or
push
jge
mov
scas
dec
cmp
outsb
sub
fstl
pop
jp
add
mov
into
push
ja
sbb
mov
inc
add
add
dec
sub
sub
aad
cmp
std
mov
test
popf
sub
cmp
std
mov
mov
sub
mov
inc
test
lock
cmpsb
ja
repnz
cmc
adcl
fdivrs
mov
in
and
cmp
dec
jl
sar
in
enter
repz
inc
es
xor
sti
pop
fisttpl
out
xchg
aam
out
push
cmp
fcomps
cwtl
dec
test
sub
xlat
jbe
adc
dec
rolb
mov
cmp
and
xor
dec
dec
rcll
scas
sub
ficoms
mov
add
push
je
cli
dec
xchg
push
sub
pop
push
out
mov
mov
add
nop
pushf
dec
int
dec
cld
sub
mov
cmc
pop
push
leave
sbb
mov
mul
add
fs
jg
cwtl
push
loopne
jae
mov
push
sub
pop
pop
inc
fsts
cmp
stos
jle
adcb
and
imul
jmp
movsb
lea
xchg
jnp
in
test
adc
push
test
mov
ficoms
jnp
xchg
andb
ret
movb
lods
push
sub
outsl
inc
ficoms
mov
dec
imul
xchg
mov
and
push
scas
xchg
cwtl
mov
adc
sbb
adc
mov
popa
sub
and
mov
mov
loopne
cmc
fstps
lds
dec
jne
js
sbb
cltd
and
push
stc
pop
xor
cmpsb
ja
inc
push
in
test
inc
sbb
ljmp
jno
and
test
das
jno
mov
cwtl
shlb
dec
cmpl
shll
ret
sub
cli
dec
cmc
adcl
xchg
loop
iret
aad
inc
int3
mov
lcall
or
xor
add
ljmp
pop
fisttpll
adc
mov
inc
xchg
in
dec
xchg
push
adc
repnz
roll
mov
fnstenv
fimull
pop
and
pop
mov
push
xchg
jp
mov
or
dec
pop
jb
mov
pop
push
add
mov
adc
or
push
add
popf
mov
out
dec
aaa
sub
xchg
in
xchg
mov
push
cmp
sbb
in
outsb
jb
std
out
xchg
push
outsl
clc
mov
pop
scas
xchg
cmpsb
xor
sub
js
xchg
je
cmc
xchg
jl
repz
leave
mov
dec
mov
cmpsb
add
adc
cld
sub
mov
in
arpl
test
inc
test
mov
cmc
lret
jle
cld
ds
xor
cwtl
or
inc
testl
cld
mov
mulb
leave
loop
pop
fadds
jnp
xchg
fwait
sbbl
nop
test
push
push
aam
xchg
scas
and
in
int3
add
das
mov
loope
shrl
mov
cmp
pop
inc
lea
sbb
push
inc
pop
xor
repz
mov
movsb
or
and
add
rorl
pusha
mov
in
pop
fdivs
sub
or
ljmp
loopne
rcl
pop
mov
add
out
hlt
pop
or
aam
mov
aaa
lods
stos
cmp
out
out
xchg
insl
lret
xchg
push
add
dec
jmp
enter
test
jmp
dec
aam
es
xchg
ss
add
adc
or
gs
and
mov
jb
sub
out
jge
shlb
jo
arpl
call
add
cmp
xor
push
mov
jmp
jno
inc
shll
inc
int3
mov
jbe
and
jecxz
dec
and
iret
dec
mov
roll
sbb
mov
enter
dec
sub
fiaddl
mov
mov
pusha
sub
fwait
mov
pop
mov
push
and
std
movsl
sub
sub
pop
cmpxchg
pop
cwtl
mov
popf
lock
pop
mov
xor
mov
out
inc
jge
enter
cmp
jle
mov
popf
and
push
js
rcrl
pop
push
enter
jno
ljmp
dec
jmp
ljmp
popf
sub
jnp
arpl
push
sub
sbb
data16
xor
cltd
inc
sbbb
jbe
sub
adc
push
inc
jne
mov
ret
add
push
loop
or
arpl
in
pop
inc
mov
in
cmc
ret
shrb
movsl
loopne
mov
jbe
mov
sti
aam
dec
or
pop
sbb
jns
cs
rol
cld
push
jle
cs
repnz
outsb
jecxz
ror
adc
sbb
dec
xchg
and
or
push
jmp
adc
xchg
add
jo
pop
scas
idivl
mov
cmc
dec
jecxz
xchg
mov
mov
inc
push
fisttpl
ss
fcoml
cmp
pop
loope
std
adc
jae
repnz
cmp
mov
cs
mov
cmp
add
xchg
or
fcomps
ljmp
sub
or
jae
movb
scas
inc
movsl
mov
and
mul
xchg
pop
mov
jg
dec
lods
dec
sub
inc
pusha
pop
ja
ret
ss
out
and
cmpsb
sahf
test
push
movsb
out
std
stc
insb
inc
inc
rorb
inc
out
fdivp
jnp
incl
arpl
ds
outsl
ret
movsl
std
xchg
cli
lods
jecxz
xchg
gs
dec
xchg
ja
jnp
out
xor
dec
int
and
and
pop
pop
cs
mov
add
imul
popa
add
or
addr16
lock
ljmp
lods
mov
in
shrl
pop
jae
pop
xchg
xor
loop
lret
add
sbbb
xlat
bound
js
jne
mov
push
divps
push
sbb
movsl
inc
and
or
adc
ja
es
inc
outsl
mov
inc
std
adc
and
pop
cmpsl
push
mov
enter
fstps
rcr
addr16
push
bound
cmp
icebp
cmpb
insl
push
lods
jle
mov
jo
mov
sar
mov
and
dec
ss
add
jbe
cmp
mov
es
and
dec
scas
fiadds
dec
add
cmp
arpl
dec
insb
scas
lret
or
loop
sarb
pop
stc
sub
mov
push
sbb
pop
in
mov
dec
and
mov
fbld
popf
adc
pop
in
das
mov
push
jecxz
imul
pop
int
fstl
jns
movsl
rcll
fsubs
pop
or
cltd
pop
cmp
insl
sbb
lcall
lahf
pop
dec
insb
cs
sub
insb
nop
scas
xchg
arpl
rcl
jmp
bnd
dec
jbe
pushaw
shlb
fisttpl
enter
rcll
loop
xor
dec
dec
mov
pop
xor
mul
xchg
subb
ficoml
lret
pop
aam
dec
orb
sub
stc
sahf
cmp
imull
roll
lds
scas
fadd
xor
decb
pop
jge
cltd
add
cmpl
add
lret
shll
xchg
cs
add
fincstp
xchg
dec
imul
or
mov
xchg
mov
pusha
and
mov
fmull
mov
push
lahf
inc
cmp
dec
test
lret
adc
sbb
pop
nop
shrl
adcl
insl
pop
cmp
mov
das
aas
stos
mov
inc
xor
mov
daa
pop
std
sbb
xor
hlt
scas
add
iret
je
arpl
sahf
test
and
inc
mov
mov
pusha
push
aaa
loop
mov
sub
in
rcrl
mov
jbe
pop
out
push
xchg
jle
test
stos
pop
jb
sbb
mov
in
or
jae
das
bswap
int
inc
cmp
in
mov
out
rolb
dec
fcompl
inc
mov
in
jmp
std
cmp
mov
sbb
iret
ror
lret
hlt
dec
daa
gs
mov
inc
sub
icebp
push
loop
add
and
inc
mov
add
mov
inc
ffreep
iret
rolb
pop
sub
shlb
out
int3
jbe
and
push
pop
sub
mov
jo
xchg
mov
fidivrl
cli
sub
in
fmuls
pop
or
sbb
dec
shlb
data16
lret
into
scas
popa
inc
sbb
jle
inc
mov
or
cmp
lret
lret
cmp
push
or
dec
lods
ljmp
sbb
xor
pop
lods
insl
scas
sbb
mov
loope
sub
mov
pop
ljmp
mov
out
hlt
imulb
or
mov
dec
mov
test
scas
movsl
adc
not
xor
leave
fisttpl
lcall
loop,pt
call
jbe
xchg
cmpsb
or
cmc
xor
fs
pop
in
lods
test
in
xchg
pop
test
andl
jnp
cwtl
adc
or
das
js
inc
les
mov
sbb
clc
jne
outsl
sahf
lret
or
bound
adc
jle
iret
decb
scas
int
mov
dec
clc
inc
xchg
xor
call
int3
ret
pop
mov
push
outsb
sub
add
in
fcmovb
test
int3
lret
mov
imul
mov
xor
int
jg
or
cs
in
aaa
sbb
cmp
add
jmp
push
or
lods
pop
cwtl
lret
xor
iret
stos
pop
pop
and
mov
cs
and
mov
push
mov
addr16
pop
call
dec
mov
lret
repz
fidivrl
and
fldenv
jno
bound
and
pop
fisttps
scas
mov
jne
fucom
mov
in
sbb
push
jg
mov
mov
fmuls
stc
cli
repnz
adc
fstpl
das
add
lret
movsl
arpl
fcmove
cld
pop
jp
subl
jle
pop
push
push
out
out
mov
mov
popa
lea
xor
jl
mov
imul
mov
sbb
repz
sbb
xchg
js
lods
mov
aas
jmp
out
loop
cmp
sbb
pop
push
fnstcw
inc
leave
push
shlb
xchg
mov
pop
mov
mov
mov
add
out
addr16
xchg
xchg
adc
out
shll
mov
jp
push
dec
pop
add
jp
lcall
jl
sbb
mov
jo
or
cltd
or
loopne
xchg
xchg
inc
scas
inc
xor
enter
fs
ret
jp
cltd
jg
push
test
mov
jae
ret
dec
jl
mov
adcl
mov
out
sbb
stos
insb
lea
cmc
jmp
test
pushf
test
cmc
adc
aam
dec
jns
add
ljmp
ljmp
dec
mov
adc
or
xchg
dec
mov
push
add
mov
cmc
mov
cltd
sub
cmp
xor
test
sub
repnz
shrl
pop
fmuls
pop
cs
data16
push
push
or
jns
and
ja
dec
rcll
iret
cmc
out
xchg
sub
es
nop
sbb
sbb
xor
add
ja
test
and
and
in
xor
xchg
fisttpl
xchg
int
push
clc
stos
lock
loopne
xchg
lcall
xlat
push
mov
xor
sbb
js
addl
mov
pop
test
jl
mov
adc
les
jge
mov
cltd
mov
gs
inc
fdiv
cld
add
pusha
js
or
fwait
adc
pop
les
xorb
lahf
push
xor
adc
stc
daa
xchg
jle
lcall
mov
roll
mov
push
les
xorb
mov
add
rolb
add
fwait
in
shll
daa
mov
xchg
scas
dec
fimull
sti
mov
movsb
sbb
cmc
jno
leave
popa
imul
adc
test
jg
or
jg
jecxz
data16
iret
in
pop
mov
and
daa
popa
jmp
mov
sti
aad
pushl
fcoms
cli
sti
xchg
sub
movsl
pop
mov
test
test
dec
rclb
dec
mov
mov
mov
sub
jo
mov
and
xchg
dec
ljmp
mov
in
jecxz
cli
cmpsl
pop
outsb
test
lods
outsb
mov
imul
mov
loopne
movsl
int3
xchg
int
movsl
mov
add
sub
leave
push
xchg
out
insl
pushf
and
sbb
shll
jne
mov
inc
xor
jbe
lea
arpl
dec
xor
jnp
sti
lods
in
xchg
fcmove
std
testl
jns
jnp
dec
js,pn
dec
mov
mov
jge
in
add
xor
shlb
cmp
add
in
jmp
ror
mov
pop
inc
outsb
adc
push
push
lods
mov
out
mov
ss
mov
adc
test
scas
lret
pop
jecxz
ret
ja
pop
dec
sub
add
mov
mov
dec
mov
popf
sbb
and
ljmp
push
pop
xor
out
inc
pusha
xchg
pop
imul
push
int
pop
cs
mov
push
movsl
insl
fwait
repz
stos
mov
mov
outsl
cmc
imul
and
icebp
lcall
sub
sbb
jle
enter
andl
idivl
push
sbb
mov
mov
ds
das
fsubr
pusha
adc
pop
iret
push
sbb
push
mov
lds
cltd
dec
ljmp
push
arpl
out
mov
aaa
mov
and
mov
loopne
jl
inc
test
push
lcall
sahf
xor
imul
bnd
incb
es
mov
pop
mov
test
sar
nop
ja
sti
sarb
ljmp
testb
or
in
sub
cltd
xor
adc
lods
dec
jb
stc
fsts
les
xor
test
adc
mov
inc
mov
dec
shll
scas
je
movsl
cld
sub
inc
adc
lahf
out
insb
add
and
int3
add
sbb
cmpsb
cltd
inc
mov
jns
and
pusha
js
data16
jecxz
decb
pusha
cld
sti
sub
jle
xchg
rcrl
dec
scas
pop
mov
stos
adc
add
gs
inc
icebp
jl
push
dec
mov
outsb
hlt
out
push
test
loope
push
roll
sub
or
hlt
mov
fs
subb
mov
cmpl
and
push
lret
int3
stos
nop
gs
dec
add
cmp
push
pop
push
cmc
jne
es
add
pop
movsb
add
hlt
int3
push
stos
hlt
sub
lret
push
jae
push
mov
lds
sahf
sub
cli
mov
popf
push
mov
adcl
push
xrstor
push
mov
push
nop
and
pushf
push
ret
sbb
movsl
imul
lods
cmp
movsl
adc
sub
das
pop
xor
xchg
aas
add
out
shl
jge
mov
test
std
cmp
jbe
cmp
ljmp
dec
negb
ficoml
int3
pushf
sbb
lret
inc
jl
out
mov
add
sbb
jbe
test
inc
pop
inc
jp
sti
cmpsb
cltd
scas
cmp
insl
les
and
cmpsb
inc
add
loopne
js
insb
into
sub
es
scas
sub
cmp
add
push
lret
jg
pop
int
mov
xor
out
imul
popf
imul
adc
and
mov
rclb
icebp
add
mov
cld
mov
scas
mov
mov
mov
mov
jle
sbbl
xchg
mov
dec
xchg
or
stos
adc
int3
push
adc
mov
inc
mov
test
hlt
aad
inc
dec
or
sbb
xchg
lea
pop
shrl
les
sub
test
pop
mov
add
pop
jl
leave
inc
mov
mov
movsb
pop
pop
push
pop
xchg
mov
scas
fiadds
xor
fcmovb
icebp
xchg
std
int
out
out
daa
xorb
cld
daa
and
push
sub
sub
and
sub
xchg
cli
int
popa
push
jl
adc
inc
and
push
inc
cmp
and
mov
cmpsb
imul
inc
mov
pop
xor
aam
and
xor
addl
inc
icebp
pop
mov
xor
clc
sbbb
lret
rcrb
xchg
jno
aas
outsb
fs
push
lret
popa
or
and
jle
test
dec
ret
aaa
in
add
rolb
inc
sbb
in
xchg
or
mov
pushf
mov
int
adc
int3
incb
loopne
xchg
gs
aad
in
test
mov
cld
or
shll
aam
filds
lret
movsb
push
pop
aad
aad
cmpsl
jg
rol
dec
sub
mov
cmp
jge
imul
shll
jl
std
push
fwait
pop
out
dec
inc
xor
sahf
or
aaa
inc
mov
outsb
mov
add
mov
xor
bound
popf
and
sbb
jns
jl
lea
arpl
inc
or
mov
cltd
lea
mov
jle
push
pop
popf
call
loopne
pop
jp
movsb
mulb
adc
jp
inc
daa
frstor
repnz
test
mov
lods
dec
pop
aas
jbe
pop
into
ret
movsl
push
fimuls
and
mov
cmc
gs
jecxz
stc
in
push
subl
xchg
cli
les
sub
in
lock
movsl
adc
jge
daa
push
xchg
filds
jno
xor
jae
mov
xchg
lcall
jo
xor
xor
pop
cmp
sbb
and
out
int
xchg
mov
sbb
test
cmpsb
cmp
or
xchg
xchg
xchg
mov
lret
rcr
addr16
lods
mov
mov
sub
ljmp
insb
scas
lahf
movsb
addl
shrb
loop
ljmp
hlt
inc
ja
cmp
pop
std
dec
fwait
sub
or
cli
mov
popf
dec
js
mov
jge
adc
cmpsl
lret
call
mov
in
call
dec
add
hlt
inc
flds
aaa
inc
or
cmp
rolb
mov
sbb
imul
xchg
in
orb
push
lcall
xchg
adc
inc
lods
and
jge
ss
pop
mov
mov
xor
xchg
clc
iret
sub
sbb
mov
pop
add
mov
jns
andl
subb
fistpl
jl
sbb
outsb
leave
leave
dec
add
or
popa
cltd
repz
movsb
and
cmp
dec
enter
or
notb
mov
sub
shll
or
aas
es
add
je
cmp
jge
adc
test
dec
push
add
lods
fcom
incl
mov
mov
sbb
aam
in
inc
ror
or
out
sbb
dec
mov
nop
sar
pop
bound
add
mov
push
les
push
mov
dec
xchg
pop
cmp
or
in
inc
inc
push
xchg
sub
lods
push
insb
lods
in
inc
xor
jne
xchg
fsubrl
xor
stos
adc
or
cld
mov
fwait
xlat
out
imul
ja
cmpsl
jmp
jge
jo
inc
daa
sahf
cmp
int
add
cmp
cmp
xchg
jae
push
sahf
sbb
jns
emms
shrl
push
leave
stos
popa
fwait
bound
xlat
ljmp
mov
add
dec
sahf
mov
mov
jg
jo
push
subl
push
leave
pop
adc
lret
mov
lcall
cmc
cmp
dec
xor
xlat
pop
cmpsb
dec
rcpps
test
inc
call
push
xor
add
or
mov
subl
mov
lds
ja
push
outsl
pop
jno
mov
adc
fwait
cmp
test
mov
and
jmp
lds
sbb
push
sub
dec
jnp
sbb
push
lret
mov
xchg
jmp
ja
outsl
adc
psubsw
shl
inc
hlt
push
xlat
in
mov
mov
ror
inc
iret
in
popa
pop
cld
jle
repnz
mov
vpshad
test
cltd
or
jge
xchg
jns
adcb
pop
jecxz
test
mov
ss
outsb
and
lods
outsb
xor
stc
jmp
xor
xor
add
bnd
rcrl
adc
dec
adc
ror
push
fimull
out
dec
mov
add
push
rolb
mov
adc
test
pop
push
mov
adc
cmc
ror
into
push
mov
jmp
xchg
xchg
mov
popa
xchg
mov
call
xor
fwait
inc
mov
popa
push
decb
adc
popf
inc
cmpl
iret
jg
adc
mov
insl
xor
push
mov
shl
fisubs
mov
stc
movl
xchg
lock
dec
pop
icebp
fsts
mov
dec
sahf
aaa
or
push
int3
xor
inc
movsb
push
add
mov
cmp
ficoms
addr16
xor
xor
or
xor
xchg
pushl
adc
stos
cmpsl
fistpl
iret
sbb
mov
mov
cmp
push
iret
addr16
mov
xlat
mov
scas
add
cmp
cmp
push
cs
pop
push
addb
rcrl
cmp
adcl
jne
data16
and
or
sbb
bound
xor
jo
mov
icebp
lret
pop
or
or
int3
loope
push
mov
int3
sbb
in
in
mov
aas
loopne
call
adc
or
cld
mov
stc
in
inc
jecxz,pt
bound
and
rep
xchg
jg
lods
int
les
test
movsl
mov
repz
je
or
repz
stos
out
or
pushw
sub
es
push
repz
sub
repnz
out
cmp
pushf
incb
xor
jge
in
sbb
xchg
lds
push
aad
mov
insb
icebp
inc
mov
xor
xchg
testb
inc
and
jg
div
loop
popf
lods
or
mov
test
leave
inc
fwait
stos
push
pop
into
pop
mov
shlb
test
cltd
in
fsubrl
mov
pop
cwtl
imul
sti
loope
mov
jno
cs
mov
stos
push
adc
rcrl
cmp
int3
mov
xor
mov
sub
bound
jl
jge
fdivrs
sbb
jns
notb
dec
rcrl
pop
aad
push
icebp
decl
add
sbb
add
fldcw
or
cli
add
push
cmp
dec
loop
or
xlat
hlt
mov
adc
cmpsb
adc
stc
in
mov
sbb
mov
inc
aas
je
xchg
test
jg
daa
sub
jle
cltd
fldenv
pop
sbb
pop
cmp
mov
cmpsl
aad
mov
or
cmp
adc
cli
sub
inc
lea
sub
sub
sbb
std
dec
pop
cmp
loope
mov
out
lods
fwait
roll
ljmp
arpl
jnp
sbbl
mov
daa
mov
movsb
loope
mov
push
add
mov
xor
jns
pop
mov
add
mov
test
xchg
xchg
and
movsl
ljmp
in
mov
sar
add
out
mov
jle
movsb
mov
push
in
out
dec
testl
mov
ja
inc
dec
cwtl
ss
mov
mov
and
stc
xor
mov
clc
das
sarl
pusha
cmp
cmp
dec
cmp
sbb
push
fbld
inc
std
insl
out
shrl
es
push
mov
push
out
sub
cmp
fimuls
push
bound
sub
sub
dec
dec
mov
stc
jnp
movsb
lds
sub
mov
xchg
lea
stos
loopne
xchg
ret
mov
adc
mov
pop
jne
or
ficomps
and
movb
sbb
aaa
adc
xor
add
repz
bound
adc
cmp
or
mov
push
or
pop
fsubrp
jnp
dec
mov
lcall
mov
arpl
mov
in
sbbl
test
pop
jp
add
push
fs
push
mov
stos
stc
push
push
sahf
mov
nop
out
jns
shll
inc
pusha
ret
ss
sti
or
adc
divb
xchg
add
loope
sub
std
and
div
mov
imul
mov
pop
shll
stos
int3
mov
push
pop
add
popl
dec
imul
xchg
xchg
rcrb
sub
enter
jns
call
mov
outsb
jns
ds
or
lahf
popa
ret
xor
sbb
out
ret
adc
sub
and
jo
imul
in
add
ret
cmp
cmp
push
fidivrs
inc
pop
movsb
lret
scas
notb
cli
jp
mov
pop
cmpsb
jo
add
adc
les
lret
sahf
jmp
pop
cli
inc
sbb
or
data16
cs
fnstenv
pop
pop
arpl
das
xorl
rorb
rcll
inc
xor
js
fwait
loope
add
jo
pop
stos
and
sbb
dec
movb
dec
ret
dec
in
mov
cmpsl
push
lods
leave
inc
pop
in
pop
jp
add
pop
or
adc
push
or
hlt
jnp
cmpsl
jne
dec
adc
test
inc
xchg
orl
loop
orb
daa
mov
xchg
dec
pushf
jle
jns
or
lea
gs
mov
cmp
sbb
mov
mov
mov
jp
testl
push
mov
add
jne
xor
jns
adc
arpl
icebp
in
aas
repz
mov
mov
aas
sbb
mov
xchg
icebp
cmp
testb
loope
inc
mov
pop
mov
xchg
in
in
xchg
gs
jns
sbb
sbb
or
nop
cmp
imul
insb
ret
adc
lret
sahf
and
pop
icebp
in
mov
ljmp
sti
sbb
into
rclb
into
xchg
jle
dec
call
xchg
enter
mov
test
inc
and
cmp
and
push
pushl
fbstp
adc
cli
dec
inc
dec
ror
xchg
jo
or
in
xchg
sub
mul
mov
ljmp
out
fst
xor
add
mov
pop
in
cmp
in
aam
adc
pop
xchg
orl
pop
adc
shll
ja
sub
xchg
and
push
jnp
cmc
inc
add
jmp
xchg
adc
mov
int3
xor
movsl
ficoms
fsubs
mov
fdivs
imul
xchg
loope
sub
ljmp
rcrb
mov
bound
scas
ljmp
inc
loope
stos
xor
dec
call
orl
pop
mov
push
dec
je
add
xor
fst
out
jg
icebp
adc
jmp
fstl
iret
and
adc
imul
xchg
mov
rcll
testb
mov
ljmp
dec
call
out
dec
push
ss
outsl
jo
es
or
mov
inc
out
loope
test
mov
mov
pop
push
push
outsb
and
std
mov
ja
jp
out
stos
inc
push
sub
movsb
mov
loope
cmpsb
push
icebp
test
push
and
push
push
push
add
pusha
cltd
push
pop
sub
das
mov
jmp
sbb
inc
push
mov
cmp
sub
xor
sbb
rcrb
pop
fsubp
push
rorl
dec
outsb
daa
xor
adc
or
ja
mov
addr16
loop
outsb
inc
adc
xchg
out
mov
data16
aaa
cmp
lock
lcall
and
jmp
mov
sbb
xorl
std
mov
bound
testl
mov
cmpsb
icebp
sub
loopne
sbb
lock
fstpl
shll
dec
dec
imul
addr16
mov
cli
jns
sbb
gs
sub
ret
dec
int
loop
xchg
dec
adc
divl
or
andb
test
mov
sub
adc
mov
in
cltd
add
inc
fisttpll
mov
ds
ret
ret
jp
push
test
in
and
xor
lds
out
imul
cmp
add
inc
mov
mov
jecxz
push
out
cmp
imul
or
mov
jae
cli
test
or
adc
xor
push
xchg
shl
mov
rclb
data16
push
mov
or
call
ja
pop
test
mov
mov
adc
in
movnti
cmp
xchg
leave
mov
shlb
lahf
js
mov
cltd
push
xor
test
stos
shll
insb
sbb
popa
nop
jb
mov
sbb
lret
push
out
xor
sbb
ss
jmp
das
mov
incb
mov
sub
inc
add
sarb
add
out
stc
test
aad
mov
fadd
insb
sti
cmp
sub
xor
and
pusha
out
or
cmp
jg
inc
adc
bswap
in
sbb
enter
pushf
or
ficoml
sahf
mov
test
add
push
decb
and
jge
mov
shll
fwait
jae
enter
adc
and
xchg
mov
push
or
dec
ss
xor
fst
repnz
sarb
jo
imul
inc
jp
cmp
mov
jno
stos
cmpb
jg,pt
lea
mov
mov
sbb
xchg
xchg
jle
ret
pop
stc
test
ds
fwait
jge
jo,pn
cmpl
pop
es
jecxz
push
bound
add
shrb
mov
jge
xchg
jl
and
add
xchg
aam
xchg
or
lea
sub
sub
lcall
add
push
loopne
cmc
xchg
stc
mov
sahf
dec
iret
xor
xchg
aaa
notb
pop
sbb
pop
adc
and
mov
loop
btc
pop
inc
xchg
add
add
jb
aam
mov
sar
xor
cli
jae
imul
push
cltd
stc
fisttpll
in
aas
adc
mov
mov
xor
testl
andl
dec
test
jo
xchg
pop
or
jp
out
aam
leave
and
sub
scas
movsl
imul
xor
nop
cmpsb
xchg
mov
dec
ljmp
ret
into
mov
pop
imulb
lods
xor
loopne
movl
cmp
xlat
sbb
mov
fldcw
icebp
or
inc
jp
sbb
mov
outsl
or
pop
repnz
and
inc
or
loop
fistps
rclb
shlb
push
fstp
and
bound
pop
push
in
les
mov
pop
rorb
cmp
mov
rclb
loop
push
mov
cmpl
jp
xor
pop
ds
imul
push
test
mov
and
push
test
aas
ret
rcrb
sahf
pop
inc
mov
lods
cmpsl
sbb
inc
xchg
enter
fs
adc
mov
and
gs
cmp
in
loope
imul
inc
cmpl
outsb
or
les
inc
cmp
push
or
cld
push
jmp
aas
inc
outsb
call
popf
imull
cmp
pushf
xor
push
jl
push
add
call
fiadds
mov
ljmp
cmp
dec
push
ja
pop
mov
inc
add
sbb
int
sbbb
dec
scas
push
icebp
add
jle
out
adc
or
aad
mov
stos
stc
rcrl
dec
sub
mov
mov
mov
ficomps
jns
cmpsb
add
imul
push
xor
leave
xchg
cwtl
xchg
sub
jns
pop
xor
or
cwtl
push
xchg
push
cs
loop
mov
std
in
adc
and
add
mov
mov
push
mov
rorb
sbb
cli
in
jmp
fldl
fcompl
add
or
lods
and
xor
push
fists
ds
pop
sbbb
dec
pop
mov
push
shlb
push
dec
mov
sbb
jno
andl
sbb
fnstsw
shl
xchg
jl
mov
in
das
daa
gs
sub
rcll
inc
fwait
jp
pushf
push
pop
test
sub
out
repz
notb
mov
lods
pop
and
xchg
push
push
shr
pushf
inc
addr16
int3
outsl
cmp
push
pop
adc
pop
cmp
jbe
fidivs
loopne
cli
cs
mov
scas
and
add
add
call
lea
shl
mov
mov
or
adc
inc
push
adc
push
dec
add
loopne
stc
inc
mov
adc
in
dec
imul
push
imul
and
out
lock
or
adc
fwait
pop
jle
xchg
inc
cmp
pop
sub
fldl
aaa
and
movsb
repz
jl
or
jnp
roll
jns
push
out
push
in
sbb
adc
fwait
mov
push
movsl
pop
outsl
mov
adcb
int
inc
jmp
xchg
push
outsb
jb
fs
jle
clc
das
xlat
add
pop
dec
int
xor
adc
scas
lods
cli
jg
push
cmp
dec
js
sarl
and
cmpsl
aaa
xchg
mov
in
ffree
pop
push
adc
cmp
sbb
push
xchg
rcrb
cli
jg
jmp
jle
push
mov
dec
fcom
pop
jp
sbb
gs
xchg
cltd
dec
pusha
fstl
mov
mov
sbb
int
test
xchg
sarb
cmp
gs
popa
inc
push
inc
mov
into
mov
mov
and
je
stc
lcall
int3
and
sbb
jns
sbb
or
mov
aad
sub
loopne
int3
inc
lods
std
cs
scas
xchg
inc
aas
pop
jmp
divl
es
push
out
xchg
faddl
outsl
mov
sti
shr
mov
cs
std
and
maskmovq
idivl
adc
je
cmp
bound
mov
cmc
xorl
ds
xorl
pop
or
mov
and
andl
mov
leave
cld
repz
jp
xor
and
add
dec
ja
jne
fldcw
ret
pop
fst
jle
lods
sbb
xor
jmp
push
repz
adc
out
dec
dec
mov
xor
out
int3
addr16
out
sub
sar
and
mov
sbb
lock
adc
std
movsb
xchg
fld
jl
sub
mov
ds
fldl
dec
imul
push
stc
hlt
lret
xchg
push
lds
mov
dec
inc
inc
inc
xchg
adc
push
pop
lahf
inc
jg
add
sbb
or
leave
sahf
mov
xchg
mov
pop
decl
scas
or
or
ds
test
adc
and
mov
inc
or
or
test
mov
jg
jp
mov
call
mov
repz
pop
xor
xor
mov
jmp
mov
cld
cmpsb
fidivs
and
call
cmp
jbe
and
ficompl
mov
test
inc
xor
inc
stos
jno
repnz
adc
add
inc
incl
dec
or
cmp
iret
arpl
add
xchg
cmp
cmp
cmp
adc
mov
jo
add
sarb
jg
js
push
imul
adc
sbb
push
jl
cmp
fdivr
mov
cld
xor
dec
pop
out
mov
mov
add
int
aas
in
add
pushf
push
add
mov
mov
jge
mov
xor
xchg
push
inc
movsb
roll
mov
test
xchg
mov
mov
shlb
repz
stos
dec
dec
ret
mov
lock
push
lock
inc
push
push
sbb
loop
insb
cld
mov
out
mov
xor
mov
cwtl
scas
test
push
ja
jnp
lods
cmpsb
xchg
and
das
jp
sbb
add
push
xor
jbe
gs
addr16
mov
add
movsb
mov
shr
add
jo
ret
les
mov
xchg
pop
push
adc
push
jns
les
jmp
push
sbb
int
in
cmp
shrl
insl
sub
mov
fidivs
aad
sbb
adc
or
xchg
adc
and
inc
lock
lcall
arpl
xor
nop
adc
sub
and
andb
lahf
jp
mov
cltd
xchg
call
aam
mov
inc
sbb
lahf
jmp
pop
rclb
int3
inc
pushf
jp
xor
xor
mov
jno
inc
test
loopne,pn
mov
std
lods
icebp
pop
sbb
push
aaa
inc
jmp
dec
mov
sub
mov
imul
pop
ds
inc
xchg
jno
lods
sbb
push
xchg
mov
dec
in
mov
lock
pop
jno
mov
push
push
outsl
adc
fwait
and
sub
sub
call
aam
int3
rorb
negb
jnp
leave
call
xchg
sbb
ret
test
cwtl
lea
incb
xor
jmp
push
shlb
xchg
and
dec
jb
jbe
inc
pop
test
ret
or
clc
rcrb
clc
repnz
xor
or
sub
rcll
inc
sti
lock
mov
jb
loope
lods
push
mov
mov
aas
popa
ja
js
mov
int
sti
std
mov
xchg
sbb
imul
aam
pop
test
and
loop
xor
fimull
loop
dec
inc
xchg
dec
fistpl
mov
shrb
xor
push
outsl
mov
mov
sub
stos
cld
pop
outsl
jle
mov
and
push
rcll
out
jns
les
ds
mov
jne
inc
in
sarb
ds
xor
jge
push
push
lcall
cmc
adc
jbe
pop
int
cmp
iret
inc
and
lock
dec
dec
mov
cmp
jne
add
xchg
jl
xchg
mov
add
pop
and
and
jmp
popa
dec
loop
std
push
movsb
test
mov
out
mov
adc
stc
fwait
push
andb
dec
sub
dec
xor
ljmp
leave
popa
jmp
ds
add
clc
mov
dec
mov
jle
adc
je
loopne
sysret
cs
cli
mov
cltd
sbb
cmp
jno
imull
jno
xchg
and
insl
jne
cwtl
pop
sub
fsubp
and
les
or
in
aam
add
sbb
sahf
stc
jno
js
enter
fists
imul
pop
popf
jg
jp
repz
outsb
out
push
mov
xchg
xor
and
decb
jb
pushf
push
adc
nop
sub
and
xchg
add
jl
enter
push
rcrb
lret
nop
inc
insb
sbb
shrb
inc
add
popf
lret
or
lods
aad
push
jmp
pop
sar
mov
ror
leave
in
hlt
filds
sti
push
out
push
in
jns
xchg
xchg
ljmp
or
mov
mov
mov
mov
aam
pushf
dec
mov
imul
ret
arpl
jne
hlt
and
adc
push
jb
mov
jne
jecxz
pop
sub
add
cmp
mov
push
out
test
inc
xor
mov
xchg
cwtl
pop
cmc
mov
test
xchg
inc
loopne
sahf
notb
cli
shlb
or
lea
je
xchg
lods
lcall
test
and
or
push
add
mov
add
xor
mov
lret
xor
stos
jne
pop
inc
jmp
push
ja
divl
nop
add
mov
sahf
mov
stos
pop
lods
test
pusha
inc
sbb
rorb
es
and
stos
outsb
sbb
add
mov
imul
mov
add
in
jo
cmp
xor
mov
xor
subl
adc
fstl
fisubl
jmp
jbe
cltd
and
mov
aam
fisubl
and
jne
push
mov
sbb
cmc
addr16
jnp
or
push
insb
in
fistl
fisttps
sub
jg
repnz
ljmp
lods
mov
lcall
xor
lret
js
idivb
push
cmp
mov
mov
repz
call
sbb
loope
cmp
and
or
push
je
dec
out
mov
mov
push
dec
dec
lahf
iret
push
cmpsb
pop
lret
cld
popf
mov
imul
enter
or
je
cmp
sbb
hlt
daa
and
xchg
pop
push
leave
clc
mov
sbb
dec
dec
outsl
pushf
push
fdivs
mov
dec
fsubrl
pop
aas
pop
fidivl
fdivs
flds
les
jns
push
pop
dec
sahf
push
inc
mov
lahf
pop
mov
mov
jo
sub
xor
test
sub
nop
nop
adc
pushl
repz
inc
daa
add
popa
enter
lcall
and
sbb
fcomps
jecxz
shlb
pushf
or
ror
mov
or
outsb
lahf
pop
inc
cmc
or
clc
jp
mov
sbb
cld
scas
fdivrs
int3
add
fildl
adc
jne
js
sub
sbb
sbb
push
push
mov
gs
jns
fmull
sub
push
test
or
orl
daa
ror
jmp
adc
sub
subb
jg
addb
mov
in
outsl
adc
repz
mov
cmp
adc
sbbb
sub
pop
outsb
imul
xchg
das
dec
in
inc
rolb
fsubs
pusha
cld
cltd
mov
xor
cmpsb
into
xchg
pop
popf
and
add
adc
jnp
fsubs
inc
aad
mov
call
inc
push
mov
lahf
xchg
ja
aas
jae
jbe
lods
push
dec
out
push
fwait
insb
imul
imul
jmp
icebp
inc
jle
add
adc
xchg
idivb
dec
lock
mov
jbe
pop
rcrb
inc
push
ss
jecxz
mov
aam
jp
mov
dec
or
mov
cmpsl
jge
fcomps
lret
jmp
dec
adc
js
sub
cmpsl
xchg
fbld
icebp
cmp
cmp
fwait
push
insl
push
adc
inc
repnz
fwait
lods
push
jns
or
and
jmp
and
sahf
cmp
cmp
mov
in
fsubp
and
jne
outsl
push
outsl
or
fcom
bound
cmpsb
cmpsl
hlt
sbb
pop
cmp
jp
or
sub
fs
push
mov
pop
sbb
xor
add
jnp
cmp
pop
xchg
adc
iret
inc
fucomi
or
fildll
pop
test
out
mov
call
sub
jno
out
jb
cmp
pop
mov
xchg
xchg
imul
add
iret
dec
aas
decl
jne
notb
xor
shl
sarb
mov
inc
and
mov
ror
cmp
call
imul
std
add
or
popa
or
adc
movsb
cmp
push
orb
mov
mov
xchg
rolb
insb
xchg
fdivl
popf
xchg
fwait
adc
adc
dec
push
cmpsl
mov
addl
movsl
dec
cmp
jg
fwait
mov
xchg
insb
jne
push
cmp
pop
cmc
and
xor
scas
and
cmpsl
push
shll
add
fmull
jmp
daa
pop
adc
push
test
push
in
push
dec
or
jne
subl
and
inc
pop
addb
jns
mov
ljmp
cmp
inc
dec
xor
icebp
pop
inc
out
div
addr16
cmp
sbb
dec
outsl
adc
fnsave
or
mov
add
jne
dec
jo
outsb
ss
enter
mov
push
push
outsb
jmp
cmp
cmp
cltd
cmpl
adc
xorb
push
pop
mov
rcl
inc
hlt
shrb
or
fwait
popa
fldcw
mov
sub
mov
and
nop
dec
dec
mov
mov
sbb
lods
dec
mov
int3
je
aaa
add
sbb
xor
pop
cmp
mov
adc
xlat
gs
mov
pop
xor
test
lcall
fcoms
inc
mov
roll
fisttpll
jno
adc
mov
shlb
xchg
sbb
mov
sbb
int
jecxz
in
xchg
jbe
jb
aad
jmp
mov
lds
push
fwait
cmp
jae
movsl
dec
popf
jnp
idivl
lea
mov
cmp
daa
sbb
rorb
or
les
push
out
fstpl
or
inc
data16
xor
cli
sbb
lea
into
decb
mov
pop
pop
clc
mov
or
das
adcb
aam
adc
repz
cmp
dec
in
shlb
push
add
das
fs
dec
mov
sbb
push
ss
jno
sbb
or
es
sub
sbb
fsubs
dec
jg
pop
xchg
sbb
push
jmp
fcmove
fcoml
icebp
aas
popl
lods
and
inc
shrl
mov
test
and
jne
push
jg
das
mov
sub
rcrb
pcmpgtd
outsb
clc
dec
inc
movsl
xor
fcoml
add
jl
push
sub
and
fisubl
sub
push
loope
lds
mov
pop
or
or
insl
mov
adc
test
fstsw
push
sbb
cmp
pop
dec
pop
out
jp
add
pushf
shlb
sbb
mov
rcl
xor
in
cmp
mov
adc
pop
lcall
in
adc
push
lret
out
in
mov
jecxz
and
add
sbb
scas
push
fists
add
xchg
sub
data16
cs
jno
arpl
or
inc
xchg
je
repnz
ret
test
mov
jg
mov
enter
stos
dec
cs
outsl
adcl
sub
cmp
aaa
scas
icebp
fdivs
sbbb
fisubrs
imul
push
cmpsl
adc
bound
dec
or
cmp
dec
push
test
cmc
pusha
movsl
popf
data16
int3
push
cmpsl
loop
pop
stos
cmp
pop
or
push
stc
or
push
pushf
pop
insb
or
push
in
insb
je
xlat
lods
imul
cs
mov
push
ljmp
xchg
icebp
xor
ja
mov
and
push
jge
sahf
push
xor
lds
mov
imul
loop
clc
pop
push
cmp
imul
jge
push
push
or
sub
xor
and
adc
insl
scas
daa
pop
dec
aaa
insl
xor
mov
out
nop
xchg
jge
arpl
adc
xchg
sub
pop
orb
testl
movsb
scas
mov
cmp
add
je
push
push
addr16
and
sbb
int
inc
leave
jno
lods
ja
cmc
mov
mov
lods
xchg
sbb
mov
mov
fwait
cmc
adcb
pusha
xor
jmp
sbb
inc
rclb
loopne
fcmovu
or
sti
into
xor
call
pusha
or
ficompl
lret
jg
daa
sahf
iret
dec
insl
inc
push
jecxz
xor
fbld
jge
sub
jne
lahf
dec
imulb
jmp
add
dec
cmp
out
mov
push
in
mov
inc
add
mov
lret
int3
xchg
lods
addr16
jmp
push
pusha
push
dec
pop
in
pop
sbb
cld
stc
scas
mov
enter
fdivrl
icebp
fisubs
and
int
clc
aad
repz
push
push
mov
fistps
mov
popf
repz
scas
xor
lahf
in
mov
ja
addr16
rcl
sub
jae,pt
mov
sub
inc
cmp
mov
jmp
out
push
call
dec
lahf
dec
out
xchg
xchg
cmp
lret
cmp
ds
enter
lretw
filds
aas
dec
mov
pop
xor
and
es
imul
mov
or
sub
dec
push
movsl
add
xor
xor
movsl
add
add
testb
negl
push
or
daa
jmp
push
pop
into
ljmp
mov
into
data16
xor
sub
popa
xor
xchg
adc
ja
fwait
sub
jb
mov
pop
and
mov
xor
or
in
xchg
mov
notb
in
shrb
dec
and
in
xchg
sub
add
insb
addr16
and
push
andl
ret
in
mul
inc
add
lahf
cmp
pushf
into
pop
cmpl
fldcw
jnp
stc
inc
jb
adc
pop
arpl
jmp
out
iret
inc
sti
cwtl
mov
inc
movsl
shrb
dec
xchg
push
and
mov
mov
mov
add
jb
inc
call
js
loopne
lds
adc
sub
push
jp
in
jae
jo
fwait
mov
sarl
daa
or
mov
inc
xor
bound
std
mov
push
jnp
or
xchg
roll
andl
push
ja
mov
sbbb
xchg
dec
nop
loopne
roll
loop
inc
dec
in
dec
fimuls
aad
mov
inc
in
popw
adc
push
enter
pop
pop
ret
sub
fistl
cmc
and
mov
pop
inc
mov
adc
fistpll
and
mov
xchg
je
inc
outsb
inc
push
adc
push
push
repz
inc
dec
xor
pop
jge
inc
nop
push
cmp
and
cmp
cmp
loopne
out
neg
adc
push
mov
movsb
es
push
enter
js
lock
cmc
in
sub
dec
mov
and
bound
loop
loope
mov
negb
daa
rcrl
or
bound
jp
outsl
addr16
inc
imul
jmp
shll
lahf
pop
cwtl
int
js
mov
rol
xchg
gs
mov
add
add
js
xchg
cmp
jle
popa
aam
popa
adc
scas
mov
push
adc
iret
mov
int3
clc
jge
in
xchg
int
xchg
jmp
cmp
pop
mov
stc
fucomp
dec
jge
stc
rcrw
addl
jnp
and
dec
es
cmpsl
fsubl
mov
pop
stc
cmpsb
popf
fsts
es
fisubrs
mov
lea
lret
mov
mov
xchg
sarl
xor
xor
dec
mov
in
lahf
lcall
add
scas
mov
lods
xor
adc
outsb
sbb
and
arpl
pop
mov
outsb
xor
arpl
fisttps
into
xor
out
inc
inc
dec
mov
pop
dec
adc
mov
adc
cmp
lcall
addb
inc
add
pop
hlt
std
call
mov
sbb
push
add
pusha
fcoml
add
outsb
insb
lods
cs
adc
jecxz
sbb
lcall
call
add
dec
fdivrs
imul
mov
pop
jmp
rolb
daa
push
sub
sbb
rcrb
sbb
and
dec
adc
xchg
push
adc
sbb
add
in
mov
add
outsb
mov
int
cld
sub
mov
pop
mov
decl
sbb
push
add
jge
add
sub
sub
lock
mov
push
mov
cwtl
pop
mov
and
and
stos
mov
xchg
dec
adc
cli
ss
std
xchg
sbb
and
mov
jmp
nop
mov
cli
lahf
cmp
adc
xor
xor
xor
cwtl
pushf
xor
je
xchg
shr
push
enter
jo
jns
lods
stc
out
pop
sub
pop
popf
push
cmpsb
sbb
push
push
add
repz
push
loope
shrl
aam
mov
xlat
cmpsl
testb
pop
inc
push
adc
push
icebp
in
pop
push
mov
test
jmp
movsl
dec
add
jmp
pop
jge
ljmp
in
out
jle
notl
pop
jmp
scas
fs
jno
adc
push
out
loopne
mov
int
in
lods
push
jb
pandn
in
xchg
jp
clc
push
jge
pop
pop
inc
gs
into
scas
and
rcl
repz
ds
jecxz
or
gs
pop
pushf
mov
int
jle
fistps
insb
fs
insb
cwtl
and
adc
pusha
lods
dec
add
in
or
add
in
sti
into
cmp
xor
pop
push
sub
mov
aad
out
sub
pop
mov
adc
xchg
daa
mov
jns
gs
xchg
push
dec
call
repz
scas
pop
cli
shrl
lahf
mov
pop
aad
xor
ss
rol
aad
cli
idivb
mov
sub
loop
aas
xchg
pop
and
ljmp
stc
test
mov
cli
adc
lret
and
imul
lret
and
add
jns
adc
xchg
push
mov
mov
jle
cli
pop
out
or
or
mov
sbb
stos
pop
inc
inc
and
inc
sahf
jmp
cmp
mov
inc
jbe
aam
fsubrl
ljmp
jmp
or
scas
add
adc
xchg
outsl
pop
mov
imul
inc
add
jbe
adc
push
in
mov
pop
xor
sbb
ss
popf
fidivrl
inc
aas
adc
cmp
xchg
clc
decl
and
gs
add
xor
inc
test
clc
popa
and
mov
pop
cmp
enter
jnp
bound
mov
cmp
dec
in
dec
pop
cmp
inc
dec
pcmpgtb
cmpsb
aad
cli
and
out
or
fstps
push
cmc
cs
fs
sarl
cmp
mov
dec
add
js
mov
adc
pop
scas
push
fistpl
stos
inc
fiaddl
rorb
sbb
xorb
and
push
add
sub
xchg
push
cs
aas
sub
icebp
sub
rclb
out
mov
mov
shlb
addl
in
leave
ja
faddl
popf
nop
divps
lea
xchg
mov
call
lds
in
rcll
lods
jg
mov
sbb
scas
out
jbe
push
movsl
int3
xor
inc
bts
mov
mov
add
xor
fistps
cmp
xor
xchg
ljmp
and
inc
inc
aaa
shrb
add
jle
int
dec
test
xor
or
mov
in
repnz
cmp
jnp
and
pop
lods
jmp
cmp
neg
pop
pop
fs
add
ds
xchg
test
rcrb
or
arpl
ficompl
or
pop
xor
test
xchg
push
sbb
add
pusha
pop
sbb
imul
mov
xchg
mov
addr16
lds
addb
mov
mov
dec
dec
dec
and
std
pop
or
adc
and
add
popa
xor
jmp
push
rcrl
jae
inc
sbb
jne
push
pop
bts
test
push
mov
sar
adc
pushf
js
mov
jno
sahf
xchg
out
mov
mov
test
add
imul
and
ret
dec
aas
insb
movsb
inc
stc
fistps
dec
cmp
sub
push
cs
mov
jg
xor
frstor
adc
je
neg
js
xor
fcmovu
sbb
mov
outsb
or
cmp
sub
dec
inc
xlat
aad
xchg
cmp
cltd
repz
mov
sbb
mov
cmp
mov
data16
lds
or
aad
pop
or
xor
cmpsb
jo
loope
shr
shll
rorl
add
mov
lods
out
jmp
repz
pop
inc
pushf
mov
mov
sbb
in
pusha
aam
push
mov
imul
lret
lods
out
seta
dec
push
dec
xchg
in
sbb
dec
stos
nop
push
sbb
mov
ja
or
mov
or
xchg
xor
mov
xchg
into
lret
mov
mov
pop
mov
mov
fmuls
sbb
aad
mov
scas
push
js
xor
fisubl
jecxz
pushl
fistps
pop
push
daa
mov
shll
in
outsb
insb
push
jge
in
sahf
rclb
popa
stos
mov
xchg
adc
mov
rolb
pop
add
xor
inc
jne
pop
aas
pusha
iret
xorl
aam
and
jl
andb
pop
adc
or
inc
stos
jp
add
jne
cs
and
movsb
cmpsl
mov
cltd
adc
imul
sbb
fcoml
out
or
fs
and
es
sbb
cltd
scas
and
and
push
mov
xor
xchg
pop
stos
fcmovnbe
rcr
call
sub
fsub
xchg
sbb
sbb
test
loopne
inc
imul
incb
or
pop
push
fwait
sti
call
mov
je
pop
sahf
adc
push
inc
and
jg
out
sti
ja
out
pop
ret
xlat
mov
dec
cmp
ljmp
frndint
push
add
imul
lea
mov
pop
dec
mov
out
mov
insl
lock
mov
loope
std
jp
mov
fidivrs
sahf
idivb
xor
push
sbb
test
ljmp
or
dec
rclb
adc
push
shlb
mov
daa
and
cmc
sbb
push
stc
push
into
push
xor
aad
pop
js
test
add
out
dec
pop
or
and
jae
or
and
aaa
jno
idivl
popa
push
aaa
sbb
jp
pop
jg
dec
add
outsb
xchg
lret
cmp
adc
add
dec
mov
bound
arpl
sbb
jle
aam
scas
hlt
in
mov
add
adc
ljmp
sbb
bound
adc
loopne
movsl
pushf
fsts
mov
jno
negl
mov
xor
mov
je
xchg
inc
push
adc
mov
clc
jle
inc
lea
sahf
pop
and
push
out
adc
jl
repz
push
xor
mov
dec
pop
xor
add
bnd
movsb
rolb
xchg
aad
mov
rcr
sarl
aaa
in
dec
fldcw
mov
in
mov
fs
repz
or
sbb
mulb
adc
xchg
fidivs
mov
gs
jecxz
cmp
inc
repz
mov
int3
je
cwtl
shrl
sbb
fidivl
test
popf
sub
inc
iret
fbstp
sub
mov
repnz
inc
movb
addr16
mov
inc
or
pop
push
push
push
inc
and
sbb
add
or
jno
mov
pop
cmp
loop
add
das
jge
movsl
jl,pn
inc
push
add
dec
lahf
int3
cmpsb
in
add
dec
inc
pushf
enter
lods
shlb
pop
sub
ret
cmp
xor
jns
imull
jb
fimull
and
fisubl
mov
cmpsl
jmp
cmp
and
pop
or
pop
outsl
notl
cltd
jno
pop
sub
in
shl
ja
imul
in
out
notb
push
inc
repz
in
sahf
daa
call
adc
mov
and
lcall
lock
out
dec
fimull
jl
pop
cmp
xor
adc
cs
fisttps
or
ret
int3
mov
add
inc
cmpsb
mov
inc
sbb
push
mov
adc
mov
add
data16
push
push
sbb
pop
lret
fistpl
cmp
xor
xchg
aas
cld
in
mov
jns
dec
inc
jo
dec
sbb
cld
dec
jae
push
push
test
inc
or
decb
ds
hlt
mov
ret
sbb
mov
lret
sub
adc
add
or
mov
sbb
mov
aad
ss
popa
popa
pusha
sahf
sbb
sub
scas
jno
imul
popa
mov
fcomps
jl
and
xchg
and
xor
mov
and
lea
aas
scas
inc
outsb
xchg
add
cld
int
dec
movsl
mov
int3
fidivrl
int3
sub
mov
sbb
loope
aad
dec
sbb
fcomip
mov
add
movsb
push
xor
mov
and
popa
mov
icebp
jne
pop
es
cmovae
xlat
ja
and
mov
jle
lds
negl
jle
adc
pop
mov
aaa
jecxz
inc
bound
cli
js
dec
clc
mov
iret
lret
mov
ret
mov
outsl
mov
lods
fnsave
mov
sti
xchg
leave
fsubrl
adc
and
loop
jg
mov
sub
call
test
imul
jg
shrb
inc
xchg
and
aaa
sbb
or
mov
xchg
mov
adc
pop
gs
daa
push
sub
xchg
cmpsl
dec
sbb
push
shll
sbb
les
icebp
mov
xchg
lods
mov
xchg
jp
push
outsb
hlt
sbb
ds
mov
push
add
orb
rorb
cld
pop
mov
jg
jae
int3
in
xor
inc
shll
mov
push
subl
xchg
jle
and
cmovs
cmp
lcall
das
sub
mov
ljmp
cmp
jae
xor
mov
data16
aaa
jne
out
inc
xlat
fildl
dec
dec
and
mov
cld
cmp
inc
ds
adc
jg
and
push
nop
push
outsl
xchg
adc
test
inc
add
fwait
xchg
cmp
cs
jno
movsl
lahf
js
xor
adc
repz
inc
jo
in
fwait
loopne
fs
xor
fcomip
sbb
scas
cmp
js
mov
loopne
jp
cmp
dec
lock
cmp
fucom
adc
lahf
enter
call
in
xchg
inc
push
les
add
into
mov
push
mov
int3
cld
xchg
mov
rorl
xlat
lret
and
mov
cmp
mov
xchg
les
insb
negb
mov
adc
test
sub
xor
pop
cmp
lcall
addr16
loop
out
das
jmp
pop
cmpsb
scas
and
sub
jmp
ret
repz
lcall
sub
xor
inc
xor
ret
ret
dec
xchg
inc
sbb
fdivrs
jo
loopne
cmp
inc
test
inc
rcrb
mov
testb
sarb
mov
pop
andb
or
push
imul
addr16
dec
gs
dec
xchg
xor
mov
dec
sub
pop
mov
test
add
mov
repz
ficomps
dec
dec
fs
sub
lahf
icebp
pop
and
mov
cmp
lods
mov
test
fdivrs
xchg
out
jns
jnp
dec
jle
pop
sub
dec
fildl
aaa
lock
cmp
sarb
out
enter
loope
rolb
adcl
push
mov
movsl
ret
sbb
addr16
js
cwtl
xor
mov
sbb
xor
push
cs
push
jp
popf
cmpsl
fcomps
repnz
out
push
inc
sub
data16
jecxz
inc
mov
push
add
bound
pop
js
cmp
mov
outsb
mov
and
xchg
loope
mov
stos
fldenv
xor
scas
mov
xlat
into
mov
or
cmpsl
and
mov
das
mov
xor
mov
shll
rorl
loope
push
jle
pusha
mov
mov
xchg
ds
jge
push
cmp
lea
dec
cltd
jo
and
pushf
ljmp
decl
cmc
push
push
or
test
shr
icebp
mov
xor
pushf
sub
fcoml
push
int
lods
push
in
pop
jns
jne
imul
jecxz
sub
add
mov
iret
aad
das
das
lret
enter
inc
ret
xchg
push
mov
xchg
dec
in
or
out
mov
lods
dec
arpl
insb
add
jo
cltd
dec
mov
fistpl
andb
inc
daa
add
in
jg
jae
sbb
out
lcall
cmp
add
hlt
lret
out
pop
xor
idivb
in
sub
hlt
lods
enter
lcall
adc
adc
xor
push
jns
xchg
inc
inc
cmp
imul
testb
lock
sbb
lock
jbe
xchg
xor
mov
push
sbb
sahf
shlb
adc
pop
sbb
mov
lss
and
jecxz
xchg
mov
cmp
add
int3
mov
mov
push
jmp
push
add
in
jno
fbld
mov
jae
mov
mov
ds
sarl
jb
inc
cmpsl
insb
push
or
inc
cmpsb
pop
adc
gs
mov
fldl
out
xchg
pop
and
test
mov
xchg
push
dec
mov
nop
push
push
push
sub
mov
pop
pop
sub
xchg
and
jo
daa
add
mov
xchg
test
adc
rclb
sub
movups
adc
mov
es
and
ret
cmp
out
mov
pop
andb
enter
lret
push
outsb
jb
dec
stos
sub
cmp
pop
push
xchg
repnz
xchg
outsb
pusha
push
shlb
mov
push
xor
and
fmul
ret
std
and
imul
pop
cmpsb
leave
imul
lret
iret
mov
adc
lea
sti
sbb
cmpsl
inc
xor
cmpsb
jmp
lods
mov
sub
mov
into
sub
dec
ret
and
test
dec
lods
or
mov
mov
repnz
adc
jl
pop
scas
xchg
cmp
aad
sub
push
mov
int
clc
in
loope
icebp
sarl
sahf
mov
out
test
mov
fwait
jnp
push
jecxz
adc
enter
test
cmp
negb
roll
cli
ss
xor
sub
mov
mov
jbe
cmpsb
push
mov
and
fldcw
jl
mov
and
pop
jo
inc
rol
insb
or
cmpsb
cli
xchg
cmp
in
sub
jno
jno
jae
mov
sbbb
shll
mov
test
leave
scas
iret
jae
aaa
adc
iret
imulb
loopne
sub
cmpsl
rcll
add
repnz
xchg
aas
push
or
test
dec
shll
addr16
adc
ja,pt
jae
ffreep
lahf
addr16
sub
ror
push
mov
mov
mov
sub
jno
and
ror
ror
pop
es
add
lds
stos
jle
stc
ffree
dec
mov
pop
js
clc
push
adc
jnp
imul
imul
insl
push
push
adc
fidivrl
mov
das
pop
je
cmc
test
das
add
mov
addr16
dec
pop
addr16
fwait
jge
mov
or
push
leave
in
push
orb
addr16
out
adc
scas
lock
sbb
push
jg
aas
cmp
cli
jg
xchg
shrl
ss
or
cli
js
inc
add
push
lea
hlt
xlat
outsl
add
data16
cmpsl
adc
mov
mov
call
ret
shlb
dec
cmp
leave
push
mov
iret
out
jnp
fsub
popf
jno
lds
jne
sub
dec
in
push
jne
int
push
cwtl
add
movsl
cs
in
inc
jb
pop
nop
outsb
xchg
cmp
mov
add
inc
jl
add
xchg
negl
cli
push
pop
mov
add
icebp
enter
sub
lret
or
test
cmpsb
mov
rolb
sbb
xorl
loope
push
aad
add
sti
mov
mov
cmp
cmp
test
or
xlat
orb
js
cmpsl
jnp
pop
jle
test
pop
push
push
scas
cmp
or
outsl
or
ss
orb
mov
pop
out
pop
nop
out
iret
cmpsl
test
xchg
dec
cmp
test
xchg
mul
idivb
scas
and
fimull
inc
adc
jecxz
adc
out
xchg
lods
test
repz
mov
int3
xchg
into
and
jecxz
jl
lret
aaa
jecxz
push
ret
sbb
and
repnz
cmp
cmpsb
aam
or
and
cld
push
fcoms
xor
lret
xchg
in
dec
add
fcmovnu
sahf
lahf
das
mov
or
push
pop
cltd
dec
repz
movsl
scas
bound
popf
xlat
fcoml
dec
stos
dec
out
aam
inc
lods
xor
push
into
rorb
xchg
and
int
mov
inc
dec
xchg
cwtl
cmc
mov
cli
fildll
icebp
es
cmp
mov
adc
mov
sbb
jo
mov
inc
outsl
jb
jns
mov
sbb
ljmp
outsl
cmp
out
jae
fildl
movsb
arpl
cmc
ljmp
lods
out
aad
push
mov
push
inc
xor
shlb
add
dec
cmc
mov
and
jl
push
fwait
inc
push
ret
inc
sbb
bound
arpl
sub
adc
dec
mov
gs
andb
das
jnp
dec
jnp
jae
mov
sbb
or
mov
ja
iret
fdivrs
sarl
cmp
push
add
aam
fstpl
mov
out
or
sub
sarl
imul
cmp
movsl
adcb
or
mov
jb
jno
dec
push
push
jae
jns
daa
iret
mov
dec
cmp
leave
pop
adc
dec
xor
pop
dec
mov
lods
into
pop
push
ss
rclb
in
xchg
outsb
sub
fimull
std
pop
arpl
fldenv
sbb
inc
fmuls
sbb
jl
aaa
pop
mov
sbb
mov
pop
xchg
push
mov
jmp
push
ret
adc
lods
gs
mov
sbb
push
stos
dec
loopne
inc
cmpsl
fdivs
or
insb
xchg
lods
sub
inc
jne
lret
adc
daa
dec
mov
in
push
mov
adc
jb
dec
int
mov
test
popa
mov
int3
ret
mov
push
loop
cmp
xlat
iret
inc
xchg
mov
cmc
jnp
xor
clc
idivl
repnz
sti
dec
adc
aam
pop
mov
andb
movl
mov
jle
add
jno
out
push
add
add
aam
xor
fmuls
cltd
mov
jae
xor
jge
sbb
lret
mov
out
jnp
ljmp
icebp
xchg
rorb
dec
int3
cmp
inc
lock
push
mov
shll
loope
jno
sbb
mov
push
push
testl
mov
cli
sahf
insb
in
xlat
jb
movsl
lahf
xchg
inc
cmp
push
push
mov
pop
jae
pop
icebp
or
jb
xchg
inc
retw
popa
inc
and
mov
arpl
xchg
jl
decl
stc
sbb
jns
aad
in
xor
ljmp
mov
loopne,pt
iret
fmull
mov
aaa
jl
test
fs
daa
jmp
addr16
in
das
xchg
ljmp
xor
add
adc
cmp
cmpsl
xor
loope
ja
xor
xchg
xor
div
movsb
mov
sub
jg
pop
int
xlat
sbb
push
stc
jle
out
and
in
inc
and
and
cli
stos
inc
loop
inc
cmp
mov
outsb
jecxz
sub
daa
inc
jp
jl
cmc
int3
jl
aad
jl
lret
jp
lock
pop
js
insb
dec
aam
jecxz
jo
push
fistps
add
mov
mov
sbb
stos
stos
repnz
shrb
popf
loope
sub
pushf
xchg
mov
out
fiaddl
xchg
nop
repz
cmp
lahf
call
into
jecxz
jmp
pop
add
mov
xor
and
mov
das
add
aas
popa
lods
fwait
sbb
sti
mov
lods
shll
iret
mov
mov
mov
push
leave
xchg
ffreep
loopne
sbbl
and
stos
and
in
push
lods
push
imul
mov
mov
cld
lods
push
xor
enter
sbb
aam
inc
add
daa
test
int3
mov
lods
cld
xor
divb
adc
sti
divb
pop
dec
sbb
lock
ret
mov
sti
xor
mov
mov
pop
aam
cmp
mov
xchg
or
stos
out
or
mov
fwait
cmpb
sbb
pop
dec
xchg
lret
mov
dec
lods
xor
cltd
sub
push
add
mov
loope
sub
or
out
inc
or
xchg
imul
mov
jno
cmpsb
notl
sub
cmp
adc
inc
sbb
pop
push
xchg
fcomps
ljmp
mov
jecxz
fidivrl
popa
mov
fldlg2
push
ret
pushf
test
data16
cwtl
test
or
das
les
cwtl
popa
adc
stos
shlb
ds
ds
lcall
flds
out
fwait
in
adc
das
mov
in
popf
and
push
jp
fisubs
stc
loop
repz
in
shlb
test
popa
int
mov
pop
je
push
adc
or
add
fdivl
gs
jle
sbb
sbb
mov
cld
mov
jp
int
adc
push
xchg
out
clc
call
pushf
cmc
or
pop
mov
adc
sub
jns
jne
lret
cmp
inc
push
push
hlt
and
or
jb
jmp
add
jae
xchg
pop
dec
sub
das
fsub
in
hlt
bound
aam
xchg
xchg
in
addr16
inc
jl
mov
aaa
push
sbb
fldenv
andl
out
jg
ja
addl
add
lret
or
mov
sub
cmpsl
das
sbb
sub
mov
cmp
xchg
in
ja
jno
xchg
popf
lock
xchg
and
add
push
xchg
xor
fistps
hlt
fs
pop
and
push
dec
sbb
stos
ss
aad
inc
dec
pop
je
clc
jb
mov
push
push
mov
roll
mov
iret
xchg
inc
lds
xor
jg
fimull
cmp
lods
mov
repz
int
or
adc
cli
pop
aad
cmp
ljmp
mov
seto
cwtl
aam
in
mov
mov
fsubrs
loope
insb
aad
loopne
lret
test
and
pop
mov
mov
mov
jp
pop
icebp
jmp
inc
ljmp
push
adc
movsl
hlt
cmc
mov
insb
lret
in
out
popa
mov
sub
inc
and
clc
cmp
sub
dec
and
data16
lahf
into
or
call
fcoml
leave
jl
loopne
fnstenv
mov
dec
xchg
push
or
sbb
andb
fiadds
mov
sbb
jg
insb
insl
lcall
cwtl
shrl
pop
in
inc
fmuls
push
or
rolb
pop
cmp
dec
pop
or
mov
mov
ret
ret
jge
lret
cli
repnz
int3
out
frstor
xchg
int3
ret
inc
aas
pop
fcompp
mov
cltd
jl
mov
call
add
pusha
push
lret
data16
cli
mov
or
or
sahf
add
pop
mov
dec
std
mov
push
addl
xchg
add
fisttpll
nop
fs
lcall
int
push
pop
les
mov
inc
mov
cmpsl
dec
orl
rclb
jl
int3
dec
inc
mov
stos
push
xor
pop
sbb
pop
xor
ds
enter
lret
lock
fs
dec
jnp
in
sub
cltd
jecxz
arpl
push
sbb
adc
add
mov
scas
ret
and
mov
jb
lahf
mov
hlt
mov
aad
sub
jg
aaa
es
inc
movsl
sbb
arpl
xor
fnsave
negl
test
push
imul
cltd
inc
stos
aad
int
ljmp
pop
mov
push
dec
fistpll
add
call
cmpsl
pusha
mov
jecxz
fsubrs
xchg
pop
loope
pop
in
xchg
nop
or
aaa
mov
dec
push
add
or
dec
ficoml
xor
xor
insl
sahf
cmpsl
mov
or
mov
sub
sbb
xor
enter
adc
sbb
lods
out
in
sub
jne
pop
xchg
cmp
test
jb
mov
int
aaa
inc
pop
mov
andl
ret
jo
clc
sbb
inc
adc
or
js
cmpsb
mov
jmp
mov
adc
or
call
jecxz
stos
js
dec
xor
and
sub
das
mov
insl
ljmp
out
lods
sbb
imul
lods
sar
lahf
add
jge
cmc
dec
jb
mov
ljmp
lods
fwait
popa
mov
cld
and
cltd
lods
pop
push
sub
out
test
jecxz
add
pop
mov
fsubp
out
xchg
es
cmp
scas
adc
ficomps
frstor
ret
xchg
cmp
sarl
repz
mov
imul
and
add
in
call
dec
subb
aaa
repz
loop
xor
dec
pop
rcrb
ret
push
popa
xchg
lds
adc
and
cmp
adc
pop
ds
cld
out
outsb
push
out
fisubrs
daa
mov
pop
xor
lea
in
sar
push
dec
push
stos
jo
movsb
push
pusha
pop
addr16
mov
or
rcrl
sub
xchg
inc
jle
pop
inc
out
std
jecxz
and
iret
jne
mov
out
insl
dec
xchg
or
sgdtl
mov
inc
mov
and
inc
lods
lds
push
mov
out
xchg
or
nop
cmp
ficomps
cld
pusha
je
repz
aad
clc
shll
mov
mov
sarb
xchg
xor
or
add
mov
fldt
lods
cmc
fistps
test
cltd
sti
lea
cwtl
loopne
jecxz
ss
into
cld
jmp
ret
out
mov
lahf
jne
pop
fsubrl
push
dec
aam
or
cld
les
jne
lods
mov
mov
cwtl
push
test
fiadds
jg
scas
insl
in
mov
dec
add
call
mov
inc
add
inc
push
push
sbb
dec
mov
cli
aad
inc
pop
aas
xchg
mov
add
pop
inc
mov
sbb
dec
mov
mov
jmp
lock
js
add
testl
dec
jl
pop
mov
fisubrl
test
movl
push
ss
inc
shll
mov
lea
sti
mov
cmp
jno
mov
das
push
aaa
daa
push
sbb
pushf
xor
push
xchg
adc
jns
or
stc
add
and
add
jne
jp
sbb
popw
ret
sub
dec
fnstsw
cmpsl
mov
in
popf
pop
pop
out
arpl
mov
jb
dec
gs
pop
sub
into
in
arpl
dec
decl
ror
in
cwtl
aaa
mov
or
lods
mov
push
jae
mov
cmpsl
cmc
lahf
out
in
cmpsb
arpl
push
cmp
mov
loope
into
inc
clc
pop
dec
in
add
mov
mov
jb
imul
rcll
subb
xchg
sub
push
jmp
cmpl
imul
dec
repnz
ds
cmpb
mov
pop
push
push
push
repnz
dec
call
add
paddusw
sbb
mov
adc
push
pusha
lea
inc
inc
loopne
sub
mov
fxam
inc
push
mov
cwtl
std
fs
orb
adc
xor
dec
test
xchg
inc
or
jnp
and
into
push
xchg
or
imul
or
adc
mov
aad
mov
fcmovb
jne
jmp
jg
mov
xor
dec
sbb
jne
jp
mov
mov
sbb
jge
adc
out
ret
sbb
xchg
rolb
jecxz
push
hlt
inc
ja
mov
imul
push
dec
inc
stos
adc
or
xor
fwait
mov
inc
cmp
cmp
jnp
mov
xorb
bnd
dec
xor
sbb
aas
inc
pop
and
shll
xlat
push
push
in
cmp
add
pop
add
xor
cmp
sbbb
pop
adc
and
cld
and
xor
call
and
add
mov
out
sbbl
inc
movsl
xchg
sahf
sbbb
ret
inc
mov
mov
movsl
roll
rclb
in
aaa
mov
add
push
in
int3
int
icebp
pop
xor
inc
dec
js
cs
mov
sbb
fldenv
test
call
add
adc
cmp
aam
jmp
push
xchg
xchg
inc
scas
imul
loop
cmp
jge
orl
sub
mov
or
call
scas
xor
pop
test
jns
pop
scas
xchg
test
sbb
jo
and
outsb
les
iret
ja
cli
mov
pop
mov
outsb
out
out
xor
cwtl
pop
test
jmp
adc
add
nop
outsl
dec
repz
pop
pop
addr16
fwait
ljmp
ljmp
jne
out
fstpt
orb
fs
pusha
sbb
jl
inc
sub
dec
sbb
jecxz
sbb
icebp
mov
int
fmull
gs
or
fcoml
pop
fsubs
or
pushf
mov
insl
mov
icebp
rcl
jle
and
int3
mov
js
cld
jnp
jno
or
sbbl
mov
in
jno
lahf
nop
mov
adc
mov
push
fnsave
sbb
mov
sti
std
div
pop
xchg
cmp
jns
and
lea
fisttps
outsl
daa
mov
test
lock
aad
and
imul
inc
ljmp
pushf
pusha
mov
adcl
dec
xchg
pop
xchg
push
sahf
leave
in
or
divl
ror
cmp
enter
and
rcll
cmp
pop
lahf
mov
and
inc
clc
mulb
mov
xor
movsb
jne
mov
cmp
xor
fiadds
int
inc
pop
inc
cmpl
push
jge
sbb
negl
fisttpl
shrl
xor
or
pop
xchg
repz
fcoml
data16
leave
xchg
push
into
jl
gs
mov
imul
cmp
ljmp
in
add
jbe
xor
sub
push
or
loope
mov
or
stc
mov
mov
and
xchg
in
inc
inc
outsl
inc
mov
fisttps
pop
xchg
mov
in
jge
hlt
je
sbb
scas
fdivl
push
adc
add
addr16
cwtl
ds
cmp
lds
xchg
sub
popf
fsubs
call
sahf
pop
paddq
aas
js
sti
dec
xchg
outsl
popa
fdivl
xchg
mov
mov
stc
mov
lods
cwtl
mov
lret
mov
and
scas
cmp
inc
mov
dec
pop
nop
add
push
dec
cmp
adc
insb
data16
cwtl
mov
shr
mov
rorb
jge
testl
add
scas
gs
add
mov
iret
sub
push
sub
js
aam
repnz
jne
lcall
xor
pop
jle
das
xchg
cs
sbb
push
jecxz
and
repnz
into
dec
mov
mov
push
jbe
mov
das
xchg
and
vpcmpeqw
imul
loopne
vmovlpd
rcll
add
stos
and
mov
cld
scas
sub
fwait
cmp
sbb
mov
add
push
cwtl
testl
js
xor
movsl
inc
add
cmp
insl
jnp
sbb
rorb
iret
mov
xchg
aam
iret
call
mov
xlat
dec
and
subb
sbb
jnp
repz
jg
jb
sahf
test
pop
or
or
les
jmp
dec
test
mov
lret
fisubs
jl
xor
and
sbb
in
push
jae
sub
jnp
mov
add
adc
pop
mov
dec
push
imul
aad
xor
test
sti
testb
pop
push
pop
sub
out
and
or
int3
into
stos
lock
adc
nop
icebp
lcall
add
pop
gs
mov
dec
popa
push
gs
pushf
dec
jge
inc
mov
dec
aas
out
rcrb
aas
dec
sbb
in
data16
cmp
iret
lcall
inc
inc
push
mov
sbb
xor
js
sub
or
arpl
out
in
sbb
adc
mov
mov
lret
in
imul
mov
in
xchg
pop
mov
adc
xchg
sbb
into
pop
mov
rorb
cmpsl
dec
mov
ljmp
and
popa
or
mov
lret
js
lret
mov
movsb
mov
mov
mov
lds
int3
cmc
inc
aaa
jmp
xchg
add
iret
mov
sbb
outsb
xchg
popf
imul
loopne
inc
gs
mov
dec
sbb
mov
or
out
icebp
imul
fdivr
mov
xor
jecxz
push
mov
imul
xchg
mov
cmp
inc
call
fcomps
jb
sbb
fistpll
dec
mov
inc
in
jmp
jecxz
jb
bound
xorl
sahf
nop
jb
int
jbe
add
out
daa
gs
cs
cli
lahf
int
xor
push
cmpsb
bound
fimull
sarl
and
fcmove
mov
jl
or
fcmovbe
dec
push
xchg
roll
xor
fsubs
inc
pop
mov
mov
push
add
dec
nop
jmp
inc
int3
fcoms
mov
dec
sbb
pop
je
out
lods
call
cmpsb
rcl
jnp
in
ljmp
push
mov
mov
xor
inc
popa
pop
mov
or
pusha
jnp
les
adc
pop
push
insb
xchg
cmp
dec
bound
fdivr
lock
adc
jns
repz
repnz
push
sub
in
xchg
cmp
jp
mov
push
loop
aas
mov
sub
push
aad
imul
jecxz
cmp
std
or
pop
mov
call
clc
cmp
enter
add
daa
lock
add
add
mov
ja
jg
adc
ds
incl
jb
inc
test
dec
cmp
inc
jmp
pop
xor
and
fucomp
xor
loope
inc
add
xlat
nop
movsb
ds
sbb
shll
adc
stc
cmovp
les
xchg
ret
pop
nop
or
push
loop
and
jne
int3
xchg
popf
cmp
and
mov
xchg
or
lahf
sub
sahf
lahf
xchg
jb
push
xor
mov
and
shrb
add
jnp
xor
stos
lock
repnz
push
or
jne
andb
loope
inc
leave
int3
scas
sub
repnz
pop
int3
dec
shr
mov
into
cmp
adc
dec
inc
pop
into
in
loope
in
adc
push
sbb
pop
jmp
idivl
dec
and
xor
jno
mov
jmp
cmp
ja
outsl
scas
pop
cmp
mov
rcll
mov
sbb
push
pop
pusha
adc
xchg
shll
mov
clc
xor
mov
ret
cli
daa
clc
cmp
cmp
mov
pop
test
jmp
mov
aad
sbb
faddp
sub
xchg
dec
push
cmpl
out
outsl
scas
ljmp
roll
mov
dec
out
xchg
xchg
in
xchg
cmp
xor
mov
add
testl
data16
mov
cli
mov
aaa
dec
test
ja
or
addr16
inc
cmp
iret
lods
in
ja
inc
add
pop
mov
mov
and
dec
add
mov
xor
popa
ret
xor
add
xor
es
sbb
out
mov
mov
inc
and
rcll
test
in
or
cmpsl
xchg
mov
push
loope
pop
adc
jo
imul
jg
mov
les
decb
fisubrl
xorl
jne
lret
jno
les
and
mov
lret
aam
pop
pusha
fnstsw
adc
add
xchg
pushf
add
js
mov
dec
mov
test
adc
mov
dec
push
mov
push
push
push
jb
jle
pop
jo
pop
xor
orb
jecxz
je
inc
mov
jne
test
fs
jle
test
mov
lret
cmp
mov
cmp
adc
scas
sub
sarb
mov
insb
cltd
pop
jl
lock
mov
mov
fdivrl
int
rcll
pop
int3
mov
leave
inc
lret
xor
js
shll
leave
jne
mov
xchg
movl
add
movsl
sbb
jl
loop
xor
rcll
rcrb
loop
and
dec
jmp
mov
push
mov
mov
lods
shlb
int3
jnp
inc
sbb
sbb
inc
inc
inc
movsb
out
aas
cmp
add
dec
dec
sti
decb
cs
roll
ret
je
sarl
and
mov
adc
enter
mov
adc
cmp
ja
popa
pop
adc
call
loopne
cmpsl
js
pop
loop
dec
cld
mull
add
pop
xor
add
ljmp
xbegin
loop
scas
cs
lea
cmp
mov
lret
and
repnz
test
arpl
popa
add
add
lcall
enter
ljmp
sti
mov
test
loope
out
mov
repz
in
lods
lods
lods
orl
dec
mov
rcrl
cld
mov
jge
pop
sbb
pop
sbbb
outsl
or
mov
dec
jg
lret
pop
pusha
mov
cmp
push
pop
lcall
lods
call
pushf
pop
sbb
gs
rorb
dec
sub
mov
push
and
inc
out
dec
pop
popf
flds
out
fsubr
fsub
inc
and
out
clc
xchg
dec
sbb
jbe
sub
or
pop
bound
fstpt
pop
cmp
mov
jo
or
cli
stos
pop
bound
fwait
mov
inc
stos
ja
mov
jo
sub
push
lcall
xor
pusha
or
lcall
leave
scas
jbe
fs
popa
adc
adc
aad
mov
int
shlb
cmp
test
mov
push
lock
stc
cmpb
lahf
sbb
sub
adc
mov
sub
mov
pop
jo
sahf
addr16
jb
mov
mov
push
dec
push
or
adc
mov
popf
inc
loop
mov
repz
mov
int3
std
push
loope
jb
in
rcr
add
inc
and
pop
loope
push
hlt
scas
dec
add
pop
cmc
and
shrl
andb
pop
mov
pop
out
dec
cmc
mov
mov
ds
movsb
add
leave
fisubl
faddp
push
inc
add
cmpsl
mov
pop
je
lea
mov
lahf
push
jg
lea
dec
lret
cmp
inc
jnp
sbb
out
jae
and
sub
sbb
sbb
adc
insb
sarb
and
lcall
add
xor
andb
in
fsubrs
in
adc
mov
mov
cmp
xchg
mov
and
cmpl
and
xchg
mov
dec
push
push
sbb
ljmp
imul
fildl
sub
lret
out
sub
lods
sbb
dec
adc
mov
call
out
jg
mov
mov
lret
adc
test
clc
fwait
adc
cmp
cmp
mov
fs
aad
and
call
mov
xchg
cmp
pop
mov
jne
pop
xlat
jno
popf
into
dec
and
es
jo
mov
outsb
xchg
xchg
jmp
push
or
int
aam
sub
in
movl
sbb
jg
test
cmc
add
testb
test
adc
mov
popa
mov
in
add
add
imul
arpl
arpl
std
rcrb
mov
xor
inc
sar
inc
sbb
mov
xchg
xor
xor
cmp
insl
xchg
pusha
push
scas
lds
mov
xchg
inc
xor
push
lahf
enter
andb
rorl
and
faddl
adc
jbe
repnz
pop
pop
sbb
out
testl
les
dec
sub
mov
pop
push
adcb
xchg
ss
fcompl
ffreep
or
icebp
je
fildll
repnz
std
cmp
push
je
push
pusha
ss
xor
sub
sbb
mov
jg
push
cwtl
aam
xor
sbb
sbb
inc
outsb
jecxz
daa
loope
arpl
and
popa
test
push
gs
dec
jno
mov
mov
std
or
xor
inc
xor
or
aad
push
mov
adc
xor
jbe
std
adc
xchg
rcll
mov
or
ja
ljmp
jp
stc
enter
aas
pop
ss
rcrb
scas
ficompl
repz
outsl
inc
ja
jp
pop
cmpsl
add
stos
and
dec
pop
sub
fidivrs
cmc
dec
insb
out
pusha
out
nopl
iret
jb
loope
sub
mov
mov
xchg
sub
cmpsb
cmp
pop
call
js
loope
aaa
popf
into
push
lods
xchg
popf
mov
in
aas
lahf
rcll
sahf
out
mov
cmpsl
sub
and
into
daa
lods
mov
ss
or
rolb
xor
ja
inc
cmp
std
out
pop
stos
es
and
enter
into
dec
xchg
jge
leave
adc
mov
push
cmc
incl
sbb
popa
xchg
lret
add
leave
cmp
nop
jge
jmp
mov
jmp
leave
es
loope
fiaddl
mov
jmp
movsb
jge
leave
insb
lcall
bound
loope
enter
pushf
fstps
dec
out
lds
lods
fstps
out
jle
mov
cltd
sarl
je
enter
scas
popf
les
dec
pop
pushf
dec
push
cmpsb
fs
cld
stos
mov
test
or
mov
jne
add
pop
sahf
add
mov
fcmovne
jno
mov
mov
lods
dec
push
mov
rorb
mov
outsl
inc
stos
es
loop
jne
push
adc
pop
ret
jb
imul
lret
pop
movsb
adc
loope
jg
mov
lds
xchg
popf
or
sbb
cmp
popa
loopne
mov
insb
test
loope
pop
shll
mov
jns
dec
dec
inc
add
xchg
cmc
mov
adc
aad
sarb
lock
rclb
mov
enter
xor
mov
cwtl
mov
push
xor
fwait
scas
mov
or
pop
sbb
fisubrs
scas
test
std
mov
xchg
std
hlt
pop
add
push
inc
and
add
xor
adc
pop
sbbl
cmc
mov
ja
add
lret
mov
outsl
push
or
shlb
push
pop
add
shll
jmp
push
or
stos
adcb
popf
test
out
mov
shlb
xor
xchg
cmp
push
aad
shlb
add
sar
add
adc
xor
sub
cwtl
int3
xchg
stos
adc
into
sub
mov
fwait
imul
lret
ds
mov
and
add
pop
in
lods
icebp
int
gs
and
test
lret
cmp
out
fimuls
and
jmp
inc
xchg
pop
inc
cmp
fimuls
xchg
ror
xchg
mov
adc
dec
cmp
int3
push
std
xchg
call
je
daa
push
shlb
mov
inc
mov
lea
xlat
lcall
pop
and
lods
stc
andl
imul
push
shrl
add
push
pop
mov
inc
jecxz
inc
icebp
sub
sub
add
mov
out
xchg
shrb
mov
adc
dec
sbb
lret
pop
ss
faddl
adc
movsb
jecxz
cltd
les
pop
xchg
scas
and
arpl
inc
jecxz
add
roll
xchg
xchg
xor
ja
push
repnz
and
sub
in
xchg
ljmp
daa
mov
inc
iret
movsb
xchg
clc
cli
sub
xchg
dec
mov
sbb
xlat
and
inc
adc
fcoml
ret
popf
inc
or
pushf
pop
adc
out
or
mov
xorl
shrb
scas
in
lcall
pop
fdivr
lret
fcoml
lret
push
into
imul
out
lret
adc
leave
fcmovnbe
push
pop
push
rcll
fbld
stos
mov
jle
daa
adc
and
xchg
push
and
sub
inc
das
repnz
movsl
data16
cwtl
daa
mov
pop
cmpsb
cld
push
pop
push
sbb
mov
dec
mov
mov
mov
fs
je
std
inc
push
lods
test
fisttpll
js
iret
push
call
out
scas
xlat
or
cmc
js
das
lods
popl
sub
gs
dec
outsl
mov
lock
out
or
filds
sub
pop
shrl
or
push
xor
mov
push
popf
mul
lods
or
cmp
fdivrs
in
push
orl
imul
cmp
dec
lahf
lds
and
jl
in
ret
mov
in
cltd
mov
hlt
aaa
mov
bound
jg
mov
xchg
push
mov
pop
push
xchg
and
or
mov
dec
aam
pushf
or
in
fbstp
fisttpl
mov
cld
fwait
lods
mov
testl
scas
jl
xchg
out
loop
ret
cmc
daa
or
scas
shl
rcrb
sti
and
jge
dec
pop
lods
and
adc
jo
and
dec
lret
mov
lds
lock
test
les
jae
jmp
pop
stc
iret
rcrl
fstps
sub
mov
lcall
xchg
inc
push
cmp
and
mov
adc
cmc
enter
lea
dec
inc
in
adc
aaa
sub
push
mov
or
lret
call
mov
xchg
cwtl
and
sahf
sub
xor
popf
stos
inc
xchg
and
rcrb
out
into
mov
push
sub
pop
aam
aad
aaa
addr16
sub
sub
cmpsl
imul
dec
mov
xor
test
sti
and
hlt
sub
sarb
shll
ds
mov
mov
push
sub
aam
nop
lds
jmp
inc
inc
and
sub
subl
push
repz
mov
mov
lock
mov
sbb
mov
lcall
jnp
gs
faddl
push
jg
adc
pop
cmp
inc
fwait
mulb
fsubl
jg
dec
ss
sbb
pop
daa
and
jbe
into
lods
or
adc
xchg
pop
jg
lahf
add
adc
fimull
cmp
lret
ds
cs
xlat
sbbl
xor
shrl
cmp
xlat
xor
pusha
int3
mov
fwait
dec
hlt
insl
cmp
push
loope
inc
push
stos
mov
stc
xorl
push
imul
ja
mov
aam
push
fs
loope
mov
dec
movsl
lahf
cld
lods
mov
fldl
scas
fsts
je
call
xchg
xchg
mov
xchg
outsb
pop
inc
fs
cwtl
push
dec
test
inc
int3
insl
push
sub
test
inc
xor
aaa
mov
adc
stos
lds
mov
inc
fsts
aaa
in
lret
xchg
jp
cmp
jo
test
cmp
cli
sub
out
sub
repz
cli
popa
dec
je
xorb
enter
mov
lahf
mov
fstl
pop
jns
imul
adc
cs
inc
jae
push
and
push
cmp
xchg
data16
mov
lret
popf
mov
mov
mov
and
cwtl
out
out
pop
add
loopne
std
shrl
pop
inc
inc
mov
lods
stc
cmc
out
sub
imul
xor
xor
push
cltd
xchg
dec
cmp
cmp
repz
mov
xlat
outsl
loopne
roll
xchg
jno
in
mov
mov
imul
cltd
outsb
dec
and
lret
inc
and
adc
jns
lss
sbb
cmp
sbb
cs
shl
lods
cs
lods
jbe
icebp
leave
std
xor
icebp
push
ret
mov
push
fidivrs
mov
jne
cmpsb
or
loope
adc
xchg
loopne
fidivs
rol
pop
in
jg
pop
adc
cmp
or
bswap
push
push
cmp
in
mov
cmp
and
sub
popf
jae
adc
cmp
mov
push
adc
shlb
out
dec
fimuls
lods
sbb
lret
mov
xor
mov
mov
add
fisttps
push
popa
pop
mov
dec
mov
inc
adc
pusha
inc
adc
add
hlt
sahf
mov
std
mov
jne
add
push
in
xlat
cwtl
idivl
dec
negb
xor
outsl
push
add
movsl
ret
sbb
adc
popf
mov
pop
cwtl
push
arpl
cwtl
adc
sub
and
push
sub
xchg
and
aam
test
pusha
mov
test
sahf
into
adc
outsb
out
das
sti
dec
push
sahf
sbb
pushf
lods
fstpt
lock
mov
pop
push
mov
inc
cltd
in
arpl
mov
or
imul
ficomps
int
jae
rorl
dec
mov
sub
push
out
xchg
mov
icebp
lods
sahf
jo
pop
cmc
mov
decb
mov
sub
push
prefetchnta
mov
dec
xor
pop
mov
push
xor
xor
mov
add
jne
loope
xchg
les
mov
outsb
cwtl
pusha
add
divl
movsb
pop
incb
stc
lret
dec
mov
test
xor
mov
mov
sbb
inc
add
clc
push
mov
push
xchg
jl
sub
mov
icebp
dec
mov
dec
mov
mov
and
xchg
test
jns,pt
dec
and
sbb
jno
mov
or
out
hlt
push
xchg
divb
lcall
out
in
lahf
lock
inc
mov
les
jae
clc
subb
popf
test
add
push
or
pop
xchg
negb
aad
adc
add
xchg
inc
bound
cs
cmp
arpl
mov
mov
pop
cmp
xchg
push
into
out
hlt
aam
mov
mov
mov
test
inc
daa
pop
pop
mov
jle
pop
pop
cmp
or
push
stc
mov
cmp
sbb
sub
cmp
pop
pushf
mov
xchg
cmp
jbe
iret
push
mov
xor
ret
inc
mov
dec
sub
jne
repnz
pop
cmpsl
cmp
test
adc
notb
mov
imul
je
ret
lea
out
cmovbe
nop
adc
outsb
nop
sbb
jge
sahf
mov
dec
adc
sub
push
in
push
stos
sbb
mov
sub
and
js
aam
dec
dec
call
loopne
mov
ret
push
cwtl
pop
sub
pushf
and
pop
bound
adc
hlt
ja
icebp
add
mov
dec
fcoms
or
sub
addb
mov
xchg
push
mov
sarb
and
insl
mov
cwtl
push
pop
jecxz
and
fimuls
daa
xor
repz
cmpsb
cltd
lahf
xchg
mov
cmp
sbb
dec
sarb
xchg
jp
imul
push
lds
orl
mov
fwait
sti
ljmp
jb
pop
jge
add
mov
push
xor
aad
mov
ret
std
or
cld
push
and
sub
pop
mov
xchg
nop
inc
and
test
cmp
insb
sub
ljmp
insl
sub
ljmp
push
mov
xor
imul
inc
xchg
mov
sbb
inc
int
test
in
js
cmc
push
sub
lock
mov
test
add
loop
popf
jb
movsb
mov
inc
out
ds
mov
adc
adc
and
add
aad
cmpsl
scas
and
inc
fcompl
cli
mov
mov
pushf
test
pop
gs
js
out
pop
dec
jp
pushl
mov
push
movlps
push
sbb
out
mov
mov
push
shll
popa
testl
popa
lds
mov
or
les
push
adc
jb
imul
out
loop
xchg
jecxz
mov
repnz
adc
or
repz
fisttps
xchg
fsubr
leave
push
cwtl
movq
cmpl
test
dec
sbb
push
loope
dec
mov
ret
shr
fcoms
add
fists
jp
and
or
jl
jmp
mov
ja
iret
lds
std
dec
and
adc
insl
push
cltd
fwait
dec
push
mov
fucomi
fxch
loope
adc
int
add
cwtl
gs
add
arpl
pop
dec
inc
adc
push
out
and
lahf
fldenv
mov
insb
fs
enter
out
stos
mov
fmull
and
in
sbb
es
out
sbb
mov
push
mov
ds
clc
mov
or
rolb
test
push
stos
dec
dec
lcall
pop
or
stc
jno
out
and
je
pop
dec
sub
inc
das
sbb
test
fcoml
stos
and
repnz
cmp
call
add
mov
xchg
or
mov
push
dec
mov
repnz
in
and
loopne
add
cwtl
pop
in
push
pusha
lret
or
or
and
addl
sub
test
leave
sub
pushf
adc
shrl
add
and
adc
sub
mov
jle
stc
jns
ret
pop
ret
std
sbb
addl
test
and
sub
lods
test
xor
sar
sub
cmpsl
shll
push
adc
daa
inc
ljmp
xor
mov
idivb
ljmp
sbb
jmp
fs
or
mov
cmpsb
jbe
outsb
mov
inc
leave
clc
pop
mov
fmuls
add
jne
aam
sub
gs
pop
mov
int
stc
jge
pop
xchg
cmp
loopne
outsl
or
shll
ret
cmpsl
push
push
xchg
mov
data16
pop
and
jne
pop
jmp
push
shrb
mov
popa
xchg
adc
inc
inc
cmp
std
mov
js
adc
ljmp
jp
push
pop
and
rol
movsb
movsl
jo
mov
pop
andb
sub
shll
dec
mov
loope
dec
mov
xor
xacquire
loopne
push
sub
add
ret
adc
and
fmull
cs
jno
int
xlat
scas
adc
test
jae
push
xchg
jae
fisttpll
clc
pop
dec
lret
mov
add
in
out
fldl
ror
orl
cmp
inc
jne
or
sub
fadds
push
pop
push
out
fiadds
hlt
outsl
mov
push
dec
or
add
je
xor
lcall
repz
fstpt
xchg
and
fbstp
das
xor
jp
push
out
popl
data16
dec
mov
add
cmp
in
addr16
mov
and
sysexit
sbb
inc
sub
add
mov
test
iret
pop
stos
psubq
pop
adc
daa
repz
mov
das
and
xchg
ret
mov
adc
push
adc
fxch
stc
sub
push
jmp
cld
pop
mov
and
pop
dec
orl
ret
xchg
incb
mov
adc
lret
fucompp
imul
jle
inc
sbb
pop
adc
sbbl
scas
scas
sahf
mov
and
out
push
cmpl
xchg
shll
pop
cmp
sti
clc
inc
outsb
lea
std
out
sbb
addl
fisttps
mov
stc
cmp
jg
setbe
loop
fdivl
mov
orl
repnz
dec
xor
movsb
inc
jp
mov
dec
mov
cmp
js
cmp
adc
ss
cwtl
add
imul
and
jmp
fs
cmp
dec
out
hlt
jmp
stos
xor
fdivl
pop
adc
mov
popa
dec
sarl
movsl
mov
enter
stos
call
pop
mov
test
enter
sbb
dec
adc
lret
add
xchg
out
dec
lea
push
ret
cmpsb
leave
out
ret
adc
cli
push
in
mov
xchg
fwait
idivl
js
add
mov
jecxz
mov
xchg
pop
sahf
push
divb
lods
push
loop
adc
aad
cmp
and
pusha
add
inc
pusha
clc
mov
fistpll
pop
movsb
inc
add
leave
enter
mov
sub
sub
mov
push
neg
jne
enter
jg
or
int3
stos
and
pop
in
xor
leave
cs
jno
int
or
jne
fwait
cmp
subl
add
dec
and
sti
jl
dec
pop
adc
mov
dec
push
sahf
orl
stc
xchg
push
imulb
sub
je
sbb
mov
jle
xchg
rclb
fldt
fimull
hlt
icebp
sub
js
xchg
scas
mov
or
jo
aas
insl
cwtl
imul
nop
jge
bound
in
insl
push
sub
in
fildll
pop
mov
inc
es
dec
dec
push
add
dec
sub
pop
push
push
mov
cwtl
pusha
add
pop
jae
push
pop
xor
scas
lods
add
icebp
mov
clts
sti
into
sub
xlat
lods
pop
shll
xor
push
and
inc
jb
stc
or
push
inc
pop
add
jg
sub
cld
dec
stc
cmpsl
cmp
pop
imulb
ret
sarl
test
inc
popa
test
sbb
jl
fcmovnb
cld
popl
jle
pop
cmp
cmp
das
out
dec
int3
fcompl
sbb
mov
sar
in
cmp
test
adc
dec
data16
sbb
and
mov
pop
dec
hlt
out
popa
cmp
movsl
insl
inc
test
or
inc
push
push
ret
call
xchg
lea
scas
push
cs
xorb
enter
push
loopne
mov
inc
adc
jne
das
arpl
push
sbb
repz
inc
out
in
pop
daa
add
mov
out
push
shrl
arpl
mov
pmulhw
xchg
cmp
inc
jge
xchg
xor
iret
fbld
sbb
jp
rcr
push
ret
lcall
js
and
add
test
push
js
inc
int3
nop
add
mov
out
cwtl
inc
xor
adc
rcr
rol
mov
pop
push
push
popa
icebp
insl
push
and
imul
negb
add
ja
fwait
in
sahf
add
bound
cltd
adc
xor
add
mov
js
sub
xor
aam
mov
dec
push
push
dec
call
leave
dec
cmp
enter
out
arpl
movsl
cs
xchg
enter
in
cli
fwait
sti
cltd
imul
inc
push
add
mov
in
pop
jle
mov
push
mov
dec
popf
adc
jmp
cmp
sub
daa
aam
sbb
pop
mov
lret
iret
pushf
sbb
hlt
jmp
inc
push
push
add
lahf
bound
popf
in
jge
or
cld
rcrl
aas
jnp
adc
xor
orl
jg
jmp
jo
inc
inc
jecxz
push
ljmp
xlat
pop
inc
les
repz
sbb
cld
push
sti
mov
icebp
push
and
enter
adc
jb
out
shr
call
xchg
fisttps
mov
lds
daa
dec
lods
dec
add
incl
and
jmp
cs
or
push
xor
in
xchg
pop
and
enter
adc
push
loop
imul
out
sub
mov
repnz
add
dec
fimull
mov
repz
mov
mov
push
enter
daa
test
jb
pop
addl
pushf
test
xchg
or
add
hlt
dec
adc
sub
jno
mov
add
pop
cmp
sub
aaa
or
leave
in
fbstp
dec
pop
ss
nop
mov
les
dec
jge
pop
xchg
mov
mov
int
push
aas
pusha
push
and
std
das
lods
arpl
shlb
adc
arpl
sub
bound
test
out
rcll
xchg
inc
sbb
jle
xchg
jmp
inc
lds
or
mov
hlt
leave
fsts
mov
pop
xor
mull
jecxz
pushf
pop
dec
dec
mov
cmp
out
jmp
cltd
mov
outsl
mov
outsl
in
leave
mov
fimull
enter
and
and
shrb
and
imul
addr16
inc
sarl
or
fisubrl
jo
mov
and
fs
test
dec
es
adc
inc
inc
xor
pop
pop
sub
pop
mov
add
jne
mov
movsl
addr16
dec
fs
mov
jo
loopne
inc
xchg
cwtl
call
mov
icebp
pop
adc
aaa
inc
or
imul
dec
adc
das
push
imul
pop
lret
icebp
cmpsl
aam
mov
mov
daa
loope
cld
xlat
add
rep
inc
mov
pop
pusha
lea
xchg
adc
jmp
cmpsb
sub
jle
inc
mov
insb
cs
sbb
aam
sub
arpl
stc
xorl
mov
imul
test
xor
loopne
xchg
push
lock
in
orb
mov
inc
cmc
push
rclb
sti
in
inc
test
pop
xchg
data16
jne
je
fists
or
mov
out
fs
jb
pop
mov
xor
out
aad
xor
jo
adc
mov
test
add
mov
inc
mov
out
negl
sahf
insl
adc
or
cmpsb
xchg
in
push
mov
mov
insb
push
stos
js
cmp
stos
shrb
lods
mov
out
and
push
add
add
iret
push
stos
push
jb
mov
push
cmpsl
inc
pop
jo
popf
pop
mov
cwtl
into
pop
xlat
insb
cltd
cli
mov
fnsave
dec
inc
pushl
jg
xor
lods
rcll
repz
cs
jo
sub
jne
push
xor
sbbb
mov
add
xchg
jae
jmp
out
push
stos
test
enter
adc
adc
push
and
mov
loopne
pusha
repnz
ss
pop
mov
pop
into
in
faddp
jmp
mov
inc
adc
inc
jo
mov
add
jns
xor
xor
and
js
inc
rcr
stc
faddl
ljmp
loope
pop
into
sbb
outsb
cwtl
popf
push
pusha
adc
xor
add
fadds
loope
or
jns
shlb
fldcw
xlat
dec
jmp
sub
mov
pop
lahf
jne
out
mov
add
sub
test
imul
sbb
fbld
mov
mov
popa
jns
dec
hlt
mov
jp
test
cmpsl
call
mov
inc
push
xchg
pop
ljmp
pop
xchg
xchg
jmp
sbb
sahf
jecxz
lahf
pop
int
jns
xchg
pop
xchg
adc
xor
xchg
sahf
push
mov
push
stc
push
push
cld
cmpsl
dec
sub
push
scas
or
push
dec
pop
sbb
mov
out
jecxz
stos
mov
outsl
sbb
imul
pop
push
jb
insb
mov
pop
xor
cmpsl
xchg
ret
aaa
subl
out
xchg
cmp
aad
fisubl
inc
orl
adc
scas
or
fcmovnu
outsl
sbbb
dec
or
test
mov
popf
pop
push
dec
add
mov
push
mov
mov
loopne
add
je
pop
push
stos
dec
push
sahf
sub
idivl
adc
dec
xor
pushf
xchg
and
pop
frstor
sbb
jb
outsb
loop
sbb
call
push
adc
dec
fs
scas
call
repz
and
std
popa
popa
adc
pop
nop
mov
ds
push
ds
cmp
in
decl
mov
mov
xor
sub
mov
dec
shr
lock
pop
jmp
dec
jg
mov
popf
jo
popa
mov
mov
aam
outsl
pop
in
push
aaa
adc
aad
mov
out
dec
aad
fiadds
rcll
pop
push
or
notb
testb
pusha
xchg
es
mov
inc
dec
fs
nop
or
adc
jle
jns
jae
insb
nop
cld
sbb
push
cmp
push
es
add
push
jae
mov
xchg
cld
aad
push
or
pushl
imul
test
iret
in
rcr
aaa
int
loop
dec
arpl
pop
or
cmpsl
push
and
add
dec
jp
movsl
sbb
cli
addr16
pop
mov
lcall
push
push
daa
dec
xor
fiadds
loop
inc
enter
jmp
lock
fistl
add
push
sbb
test
lods
sbb
popf
jecxz
imulb
adc
stc
test
mov
pusha
mov
cmp
push
push
pop
out
inc
aas
inc
push
sbb
jmp
dec
mov
inc
jg
aad
movsb
data16
jnp
sub
cmpsl
test
out
sub
or
jg
ja
xacquire
cli
mov
sbbb
mov
fcompl
mov
add
pop
jle
xchg
xor
into
lods
add
xlat
sbb
adc
push
out
or
sbb
add
xor
adc
or
sar
dec
fimuls
or
jno
xchg
movsl
adc
lods
adc
or
cmpsb
imul
dec
jo
call
and
inc
dec
outsb
lock
mov
add
adcl
add
stos
out
call
mov
rorl
cli
aas
and
add
jmp
cmp
jo
lods
mov
adc
into
mov
aaa
in
scas
lcall
jnp
inc
xchg
scas
xchg
and
mov
xchg
out
pop
fadds
dec
js
int
jae
jno
jne
outsb
jmp
loopne
adc
xchg
jno
push
add
scas
aam
movsl
and
mov
sti
mov
jmp
add
popf
test
test
jo
aas
aam
in
cmpl
sti
addr16
mov
pop
insb
outsb
ret
cwtl
fs
scas
cmp
xchg
rolb
xor
mov
push
mulb
inc
roll
jbe
jge
push
sub
out
cmp
popa
mov
shlb
mov
fidivs
lods
inc
push
sbb
xorl
lahf
mov
push
das
and
mov
push
xor
call
enter
or
jge
cmpsl
jecxz
push
mov
ds
xchg
aaa
adc
flds
cwtl
ret
mov
int
rorl
sbb
add
aam
lcall
cwtl
sbb
push
mov
test
stos
clc
and
scas
test
jbe
lret
mov
dec
lods
loop
sub
stos
in
fidivrs
movsb
in
and
xchg
pop
mov
aad
popa
cld
into
lahf
xor
xchg
lds
push
iret
testb
push
cmpsb
and
cmc
jo
fwait
adc
cmp
scas
push
das
mov
or
xchg
sbb
xor
out
cmp
arpl
imul
push
repz
fists
mov
xlat
fldl2t
xchg
ljmp
and
mov
lcall
pop
call
in
push
push
shr
movsl
push
ljmp
pop
mov
std
fcom
and
and
mov
sub
insb
out
jae
aaa
or
xchg
fadd
es
pop
pop
cltd
addl
hlt
add
dec
mov
in
stos
mov
dec
leave
test
xchg
jg
outsb
cmp
add
push
xchg
stos
jb
mov
imul
push
or
sti
icebp
or
lds
jle
adc
mov
fcmovnbe
cmp
add
std
adc
jnp
mov
popa
mull
add
pop
xor
pop
outsb
add
cmp
mov
jl
dec
xchg
add
add
stc
add
pop
jl
movsb
mov
addr16
push
inc
test
outsl
leave
mov
push
push
fstl
jl
lcall
push
add
sahf
sti
enter
jo
in
add
aaa
aam
xchg
daa
clc
mov
xor
pop
mov
jge
negb
jmp
sarl
xor
popa
pop
out
aad
and
jns
push
mov
jae
into
sbb
lret
xor
jns
aad
adc
push
loop
jle
stos
cltd
fsub
mov
push
push
and
add
cmp
out
cld
inc
mov
insb
lahf
lret
out
pop
and
rclb
and
lret
dec
aaa
sahf
stc
and
ret
mov
adc
jne
xchg
ja
sub
mov
mov
push
jns
jns
cwtl
cmpsl
xor
fstp
pop
dec
mov
movsb
mov
fsubr
shlb
fidivl
stos
jmp
sub
jl
into
stc
add
std
dec
lods
gs
ds
mov
movsb
pushf
add
jg
fstpt
xchg
gs
adc
das
inc
add
push
mul
mov
ja
loope
stc
xchg
cltd
jmp
int3
cmp
fwait
setae
lahf
pop
loop
cmp
jo
jnp
push
mov
and
std
call
in
inc
push
jb
out
mov
xor
mov
mov
mov
mov
ret
inc
test
rorl
pop
das
shlb
xchg
mov
push
mov
leave
adc
mov
sbb
sub
mov
push
fstpt
pop
mov
cli
lds
xchg
ror
ja
jb
enter
popa
cmp
mov
sub
xchg
loope
imul
mov
ret
xor
push
fisttpl
testb
jg
fwait
adc
cmpsl
mov
test
or
push
fisttpl
leave
jg
out
aaa
mov
fildl
imul
xchg
sahf
aaa
and
pop
fmuls
arpl
dec
sub
push
jo
mov
cmc
test
add
stos
lret
xor
lods
dec
xchg
sub
test
mov
addb
add
jge
xchg
mov
pushf
adc
pop
sub
sub
push
adcb
movsb
add
xor
imul
push
push
shlb
cs
sbbl
sar
or
mov
and
cmp
inc
aas
aas
in
sub
and
fimuls
shrl
ds
pushf
add
movsb
cmp
push
je
mov
in
xchg
mov
hlt
outsl
cmpsl
sub
push
jp
imul
es
stos
sub
aad
pop
lea
aam
cli
dec
sub
inc
adc
mov
in
xchg
or
add
scas
add
push
pop
das
xlat
cmc
fdivr
inc
je
jge
jl
sub
add
inc
xor
sbb
ret
cmpsl
mov
gs
mov
test
addl
lods
in
mov
mov
xor
jl
sbb
pop
das
lods
out
test
xchg
sbb
xchg
and
stos
sbb
inc
leave
fisubl
dec
cmp
stos
call
mov
or
out
rol
mov
packuswb
sarl
in
dec
sbb
bound
divl
icebp
jmp
and
in
mov
xchg
push
mov
cli
lock
sub
jo
int3
shl
ja
call
mov
lcall
xchg
cld
lcall
push
xlat
cld
mov
and
or
daa
mov
cmpl
pop
test
cwtl
fnstsw
adc
iret
clc
addr16
scas
sub
adc
dec
clc
out
cld
in
clc
mov
sbb
rcl
loop
lcall
lods
outsb
xor
jmp
sbb
or
out
jecxz
mov
repnz
adc
mov
lret
mov
movsb
cli
or
hlt
jmp
or
xor
dec
sub
js
dec
leave
inc
jb
xor
mov
pop
out
lods
mov
cwtl
add
add
and
adc
popf
mov
jno,pt
adc
hlt
adc
push
notb
dec
shl
out
mov
ret
mov
push
mov
insb
pop
adc
add
or
push
or
xchg
enter
mov
test
mov
inc
jno
lahf
mov
or
hlt
in
mov
xor
mov
add
out
pusha
loope
mov
xchg
gs
mov
jmp
int
sub
xor
cmp
int3
jmp
stos
out
cmp
dec
push
in
fs
ret
mov
and
mov
push
mov
test
push
mov
cmpsb
inc
frstor
dec
icebp
push
inc
ftst
push
or
pop
scas
lock
outsb
add
enter
mov
mov
call
xor
mov
mov
or
fsts
pop
adc
int3
icebp
push
iret
cwtl
cmp
mov
mov
js
stc
call
mov
in
call
push
mov
push
pop
and
dec
xor
pop
ret
ret
pop
loop
jmp
ror
int
scas
cld
dec
dec
lea
aam
mov
movsl
lret
mov
mov
fninit
fs
or
inc
xor
pop
je
mov
push
push
mov
push
pop
lcall
jae
jb
dec
cwtl
mov
push
jno
out
sbb
and
icebp
std
jbe
and
rcrl
adc
adc
rcr
mov
jne
pop
into
mov
jo
cmp
sbb
cmp
push
mov
cmp
mov
mov
sub
add
xor
mov
aas
fbld
mov
and
imul
jl
push
outsl
lret
mov
push
ljmp
push
jl
mov
cmpsb
icebp
ficompl
lods
rorb
cltd
xchg
or
cmp
jge
lcall
dec
jle
lds
dec
and
insl
and
jle
cmc
push
xchg
rolb
adc
stos
inc
fmuls
mov
mov
gs
int3
ja
repz
dec
out
repnz
mov
add
inc
aad
mov
testb
in
jae
sbb
js
lahf
pop
jne
dec
rcrl
adc
jbe
add
sub
test
insb
xchg
pop
mov
push
add
or
mov
jmp
adc
stos
jg
xor
fstpl
stos
ss
cmp
pop
insb
and
mov
pop
push
lret
dec
sbbl
into
mov
mov
xchg
leave
xor
movsl
test
scas
repz
ror
and
into
aad
testb
dec
and
popf
cmp
rclb
arpl
or
cmp
test
fiadds
add
xchg
jnp
mov
in
lock
sbb
aas
jmp
adc
inc
or
adc
add
pop
xchg
push
repz
lret
test
fmuls
sbb
xlat
ret
mov
cmp
jne
insb
scas
pop
js
orb
mov
jmp
mov
sti
jmp
pop
lret
jns
cmpsl
adc
mov
adc
adc
sahf
test
sbb
jmp
xchg
adc
dec
aaa
dec
jbe
nop
cmp
mov
int
lock
movsb
xor
fnstcw
clc
jnp
cs
dec
imul
mov
in
add
cmpsl
das
fcomps
and
pop
or
loope
shrb
or
adc
rolb
cmpsl
jle
mov
cmp
shll
sbb
xchg
add
imul
inc
je
dec
cmpsl
lds
ret
ret
stc
lret
mov
idiv
mov
into
jne
outsb
adc
outsb
push
sbb
fisttpll
lahf
arpl
test
mov
mov
es
xchg
repnz
xchg
adc
mov
repnz
adc
xchg
adcl
in
ds
adc
mov
subl
ficoms
jnp
das
clc
jg
out
out
lods
test
push
sub
dec
je
push
movsb
ficoms
addr16
push
unpckhps
movsl
incb
cmc
fcomip
xor
les
cmp
ja
fildl
jnp
xchg
jle
and
dec
lds
mov
pop
pusha
and
sub
mov
mov
mov
rol
lock
mov
lret
iret
push
sub
xchg
push
mov
push
out
or
std
inc
add
pop
jo
dec
lahf
mov
outsb
adc
scas
jle
lret
insl
rcl
and
lods
add
test
xchg
push
adc
scas
jle
push
mov
dec
inc
popf
ficomps
les
dec
sbb
jbe
bound
or
out
lods
jg
push
mul
mov
dec
cmp
insl
inc
adc
lcall
cmp
repz
or
jae
dec
pop
mov
mov
cmp
push
cli
test
cmc
mov
es
cmpsl
shlb
mov
mov
jl
inc
int
mov
cmpsb
xchg
mov
pop
into
cmp
mov
inc
add
iret
mov
inc
adc
jge
push
mov
xchg
pushl
add
cwtl
pop
sar
loope
test
sub
fs
mov
mov
mov
aam
cltd
mov
or
add
mov
adc
sbb
mov
mov
mov
mov
aam
pop
mov
inc
aaa
pop
mov
inc
add
xchg
test
repz
sub
pop
ljmp
xor
jb
ss
test
mov
mov
inc
data16
clc
mov
inc
push
add
jae
sub
and
jb
cltd
mov
lock
pop
add
sub
loope
pop
sahf
stos
movsl
in
movsb
test
cld
jne
hlt
shll
outsb
movsl
mov
fs
icebp
fsubrs
dec
lock
jmp
jecxz
jmp
mov
adc
iret
ret
xor
fcom
push
cs
jnp
addr16
ljmp
sbb
pop
test
movsl
push
iret
xchg
rcr
es
xchg
and
loop
popa
les
mov
jb
stc
fisttps
add
or
jb
cmp
leave
mov
mov
cld
rcl
inc
jbe
add
or
daa
mov
out
nop
pop
push
les
in
ja
push
test
cmc
xor
mov
fwait
test
test
fs
imul
sahf
adcl
mov
cmp
xchg
int
push
scas
sbb
and
jbe
jmp
push
stos
sub
orl
inc
jbe
cmp
fucomi
xor
push
js
sbb
sbb
push
das
lods
add
mov
lret
inc
pop
stos
je
cmpsb
pop
mov
sbbl
ror
xor
out
mov
or
lahf
jnp
fdivl
jne
leave
inc
cmp
repz
pop
stc
mov
in
dec
sub
sti
gs
pop
pop
inc
sbb
mov
push
or
int
sbb
pop
in
dec
ljmp
bound
fiaddl
int
and
mov
imul
lret
push
inc
adc
mov
or
test
aam
movsl
out
sbbl
push
rorl
test
nop
mov
sbb
jnp
imull
push
stc
addr16
push
sub
push
push
call
xadd
push
insb
dec
clc
push
or
shlb
pop
cmp
push
out
cmp
andl
aam
scas
adc
adc
or
push
addr16
popa
fwait
cmc
popa
add
cmp
push
sarb
cmpsb
dec
xlat
je
mov
adc
int3
jb
mov
fucom
cld
pop
js
aas
mov
bound
js
sahf
push
push
xchg
int3
xor
push
jb
jo
rcl
test
mov
mov
es
xorl
cmpsl
inc
lods
sti
adc
xchg
mov
lods
stc
mov
es
push
fmull
mov
push
pushf
ret
outsb
add
sbbl
mov
pushf
in
ret
popl
jecxz
mov
lret
and
dec
aas
das
lock
inc
popa
and
fisubl
int3
pop
cltd
cli
cmp
sbb
jnp
test
and
xor
leave
fimull
push
lock
adc
in
push
adc
insl
push
stos
mov
xchg
cmc
ja
insl
adc
xchg
mov
or
in
cmp
repnz
test
mov
dec
js
sub
push
out
movsl
int
and
pushf
inc
mov
test
scas
push
and
dec
fwait
jmp
mov
push
lret
out
ljmp
sub
inc
mov
daa
test
shrb
xor
jp
cmp
jle
outsl
and
cmp
fadds
mov
sahf
mov
or
or
push
inc
xor
cltd
fsubrp
dec
push
lds
add
xchg
in
iret
mov
decb
or
dec
push
js
fisubs
pop
sbb
nop
sub
aam
call
in
pop
int3
cs
mov
add
mov
in
sbb
jl
sub
add
fnstcw
aad
mov
inc
jo
dec
lods
int3
insl
jae
inc
cmp
pop
repnz
mov
call
std
pop
mov
in
xor
nop
xchg
shll
adc
mov
cmp
shl
fisttpl
push
push
ret
mov
pop
mov
cwtl
das
adc
cwtd
fisubrs
dec
xor
pusha
mov
call
inc
mov
inc
mov
dec
xchg
mulb
dec
inc
jp
cli
mov
shll
jmp
push
inc
inc
negl
jmp
stos
pop
outsl
in
push
pop
in
adc
jno
mov
rolb
in
insl
xor
in
aaa
pushf
pop
add
inc
push
adc
xor
shlb
mov
shrb
pop
add
cmc
hlt
cmpsl
xor
inc
inc
call
sub
repz
es
out
mov
add
dec
cltd
stc
pop
add
cmp
scas
scas
pop
mov
xor
rcr
sbb
mov
aaa
negl
jns
dec
mov
addr16
fwait
mov
dec
cmp
ja
add
pop
imull
loopne
push
enter
cmpb
adc
add
jae
and
push
cmpsb
jb
repz
mov
clc
xor
hlt
jne
sbb
out
je
pushf
imul
jecxz
lods
and
pop
jg
jg
xlat
mov
pop
xor
into
cmpsl
pcmpgtb
decb
out
jb
cmp
aam
adc
mov
call
into
xor
jo
faddl
mov
inc
pop
and
fimuls
and
mov
jno
and
roll
fdivl
or
in
test
jmp
bound
jecxz
cli
outsb
mov
nop
cmp
fdivrl
ret
mov
rcrb
movsl
sub
decl
mov
lods
and
sub
jbe
cmp
in
xor
mov
bound
lahf
out
data16
mov
pop
notb
pop
push
mov
ja
lods
call
repz
mov
pusha
dec
sahf
movsl
inc
jge
in
cmp
lahf
fsubrs
jb
test
pop
push
insb
ljmp
ret
in
xor
or
xor
jge
popf
or
clc
out
inc
dec
sbb
std
outsl
mov
ds
int
test
scas
xchg
test
lods
dec
testl
data16
or
mov
sbb
jne
jb
jge
and
pushf
mov
imul
bound
fnsave
int
mov
adc
repnz
je
mov
add
xor
pop
xor
and
addr16
sub
rorb
fldenv
sbb
xchg
int
add
pop
leave
xchg
lahf
repnz
xor
xchg
xchg
jns
cmp
out
and
outsl
outsl
lret
push
or
and
aam
cmpb
adc
in
inc
push
jno
test
dec
ja
sub
pop
dec
loopne
add
xchg
ja
sbb
rcrl
fists
sbb
add
cmp
sub
pop
popa
jne
sbb
mov
dec
ret
pop
or
enter
popa
mov
cwtl
out
xchg
fmuls
scas
loop
add
mov
add
cmc
cli
and
fsubrl
xor
add
rol
ret
adc
lcall
pop
in
stos
sub
divl
adc
jae
push
adc
mov
pop
sub
mov
dec
gs
mov
or
test
mov
fmul
std
lds
jp
pop
jl
adcb
pop
or
sti
cmpsl
ficompl
lods
push
add
xchg
repz
test
out
test
ljmp
ret
pop
cmp
fcomp
js
jns
fisubrs
lahf
lcall
and
add
shll
sarl
add
pushf
add
ret
xchg
aaa
outsl
mov
or
mov
pushf
aaa
push
cmp
and
adc
cmp
mov
mov
jle
dec
mov
dec
cmp
add
sub
stos
xchg
pushf
clc
imul
jne
inc
mov
push
xor
jmp
pop
pop
data16
les
inc
mov
mov
adc
sub
sbb
or
popf
cmp
stos
mov
xchg
les
xor
dec
jae
imul
lcall
or
enter
lahf
ljmp
mov
lds
out
std
sti
add
popf
mov
addr16
lahf
sbb
nop
popa
lret
mov
jns
cmpsl
xor
xchg
push
push
dec
mov
sub
cmp
loope
cmpsl
fnsave
pop
dec
mov
adc
mov
pop
cld
xor
repz
stc
add
sub
pusha
repz
ja
popf
imul
jbe
je
lcall
mov
xchg
or
inc
mov
jl
cmp
sub
xor
inc
sbb
mov
add
mov
jo
lahf
jl
and
add
test
cld
mov
mov
and
cltd
mov
push
gs
jecxz
add
push
mov
sub
push
mov
mov
push
jb
mov
mov
jno
into
pop
out
cmp
jnp
loop
adc
inc
or
cmp
adcb
dec
dec
insl
movsb
and
pop
lcall
jne
popa
and
test
fidivs
inc
cwtl
cmp
and
fdivrl
je
aam
cmc
outsl
outsl
lahf
in
cld
out
cmc
add
jecxz
mov
mov
fcmovne
std
js
adc
fcomi
xorl
inc
adc
xorl
add
testb
push
jo
arpl
adc
js
pop
adc
clc
or
repnz
inc
in
push
mov
lret
int3
cmp
and
into
mov
dec
mov
fiadds
push
pop
xchg
popf
adc
and
pop
fidivrl
cld
jl
push
cmp
mov
pusha
xchg
pop
xchg
in
and
lds
rcrb
inc
xor
pop
push
fldenv
test
leave
jg
sbb
test
mov
dec
cmpsl
pop
dec
mov
lahf
in
std
dec
ja
cmp
sbbl
aaa
pop
or
jmp
sub
insl
jg
repz
add
sub
ds
add
or
enter
ja
add
inc
pop
and
loope
mov
lock
pop
in
lcall
sub
cmp
push
or
mov
adc
loopne
lods
aaa
mov
fwait
insl
mov
leave
pop
cmc
fistl
fs
fwait
outsb
mov
jmp
jmp
sarl
add
in
imul
nop
or
push
seta
pop
out
push
mov
mov
pop
clc
push
or
adc
dec
fdivl
mov
pop
pop
lcall
test
mov
pop
or
popa
loop
cwtl
mov
mov
or
pop
dec
add
jp
fadd
daa
jne
sub
jg
stc
cmp
in
fisttps
shl
stos
dec
cmpsb
adc
popa
mov
xchg
jns
lcall
mov
or
pop
fidivrs
std
pop
loop
sub
rcrl
or
outsb
insl
inc
and
fadds
push
popf
xchg
cmp
and
dec
je
aaa
xor
dec
test
arpl
xlat
jb
mov
cmp
pop
sti
ret
js
jne
shr
dec
pop
call
mov
les
popa
ja
adc
aad
inc
pop
lahf
js
xor
in
xor
inc
mov
pop
ljmp
mov
mov
in
incb
pop
lcall
repz
pop
in
fisubrl
mov
mov
sub
push
test
stos
inc
jns
xchg
call
shlb
bound
add
mov
adc
dec
stc
add
dec
sahf
scas
add
mov
stos
mov
mov
xchg
mov
xchg
xor
test
rolb
roll
push
xchg
test
xchg
pop
and
mov
in
addr16
addb
stos
dec
and
jge
movsl
adc
mov
inc
out
mov
mov
loopne
push
rcll
scas
shl
mov
mov
lcall
adc
jle
leave
add
loopne
and
push
mov
jl
and
cmp
rorl
in
or
sub
ljmp
inc
mov
dec
cmp
mov
add
sbb
mov
outsl
test
inc
dec
xchg
jmp
mov
jae
dec
inc
pop
pop
xchg
lcall
and
fldenv
pop
sti
mov
mov
mov
xchg
mov
or
jl
cmpsb
jno
sub
xchg
imul
cwtl
sarb
inc
rcll
jmp
cmpsl
in
fs
das
mov
pop
push
mov
sahf
dec
mov
divb
mov
push
sbb
pushf
and
test
cmp
rclb
jo
xor
sbbb
xchg
jle
sbb
mov
hlt
lret
xlat
in
jmp
insb
fsubrl
push
shlb
dec
out
adc
cmp
mov
push
xchg
repz
and
pop
ljmp
ret
arpl
mov
push
pop
andl
adc
mov
popa
adc
jle
or
jge
inc
jo
fidivrs
or
xorl
mov
mov
in
or
clc
jg
dec
sti
mov
or
cmp
fwait
std
movsb
decl
dec
adc
mov
pop
lret
inc
pop
push
push
inc
iret
int
int
mov
cmpsb
pop
aas
sbb
lret
pop
iret
sub
dec
pop
cmp
mov
rorl
push
add
push
push
outsl
pop
lds
cmp
adc
sti
xlat
cmpsl
es
shl
xchg
or
sbb
fwait
sub
das
add
push
mov
mov
sahf
andl
jno
shlb
in
cld
dec
sub
sbb
inc
sbb
mov
dec
movsl
int
test
mov
or
and
mov
sub
add
ret
cmp
and
xor
das
pop
pusha
iret
xor
xor
jmp
ss
dec
aad
iret
cmp
frstor
adc
mov
push
lods
add
cmpsl
sub
xor
call
ja
sbb
push
pop
test
and
lret
pop
cmpsl
popf
mov
jl
jmp
sbb
pop
repnz
insb
cmp
cmp
xchg
dec
mov
jb
int
sahf
pushf
test
fiadds
cmp
add
sbbb
clc
add
loope
or
or
in
xor
cmp
adc
insb
or
pop
push
movsb
lods
inc
adc
cmp
and
cmpl
out
inc
daa
xor
sub
popa
lret
cwtl
and
lods
pop
pop
or
icebp
mov
aad
push
fdivrs
and
pop
fwait
mov
cmp
sbb
cmp
outsb
push
das
and
je
cmp
push
adc
aam
mov
cmpsl
sbbl
sbb
sub
orb
jno
movsb
pop
or
incl
ficoms
shrb
pusha
add
push
jge
xor
lods
sbb
sub
out
lahf
idiv
sahf
pop
aaa
push
gs
xchg
repnz
ret
add
mov
inc
lods
jmp
and
dec
fldl
decl
imul
mov
imul
add
add
mov
push
inc
movsl
jo
jl
push
lret
mov
sbb
loop
inc
dec
inc
ss
mov
sub
pop
jno
popa
lcall
arpl
ss
push
test
jns
push
mov
cmp
nop
xchg
imul
nop
adc
sti
les
loop
aad
pop
lret
test
xor
outsb
xor
enter
mov
cmpsb
in
mov
sbb
cmc
xor
push
push
cld
pop
xchg
popf
mov
shll
inc
cmp
sub
cmp
ds
dec
or
jmp
sub
das
or
sbb
xchg
pop
and
pop
push
jg
fwait
xchg
int
or
add
pop
lock
lock
cltd
cmp
fwait
cmp
pusha
mov
dec
bound
push
gs
fnstcw
dec
mov
push
outsb
cmp
insl
sub
ret
nop
es
sbb
mov
xchg
sbb
push
jl
inc
icebp
stos
enter
jnp
ret
push
rcll
imul
xorl
cld
fdivr
xor
aad
stos
je
fdivl
pop
aam
push
sarb
xlat
xorl
ja
cmp
and
idivb
and
inc
pop
pop
das
sbb
popf
mov
nop
inc
sub
fdivl
push
lock
scas
test
inc
jns
push
test
mov
in
add
addr16
dec
rcll
adc
scas
mov
jo
mov
xchg
adcb
mov
out
cmc
jb
test
into
fsub
push
push
xchg
or
sub
inc
pop
in
inc
dec
pop
pop
fs
scas
sub
add
cli
xchg
pop
adc
mov
notb
mov
inc
jl
pushf
cmp
xor
jbe
cltd
xchg
repz
dec
jecxz
in
xchg
mov
mov
push
out
mov
push
mov
xor
sbb
cs
xchg
pop
fisubrs
jg
mov
xor
daa
call
fldcw
sub
mov
movsl
xor
in
iret
pop
push
mov
test
adc
jb
in
cmp
repnz
pop
fdivrp
mov
popf
mov
xchg
adcb
xchg
and
sarl
pop
push
jle
jns
mov
sbb
les
mov
ds
imul
push
push
mov
mov
out
push
pop
lds
sub
setns
xor
adc
xchg
sarl
mov
in
lds
aas
idivl
pop
and
push
mov
push
sahf
stc
idivb
or
cli
ret
in
rcll
push
xchg
mov
js
and
iret
cmp
pop
push
pop
lret
adc
sub
cmp
pop
pop
add
in
push
xchg
mov
movsb
mov
dec
orl
xchg
push
jno
xlat
bound
fisubl
mov
pop
xor
insl
negl
ss
cmp
add
mov
adc
sbb
jns
iret
adc
xchg
pop
push
cltd
test
jp
pushf
xchg
jl
jle
mov
dec
sub
push
or
test
inc
pop
sbb
pop
bound
xor
jge
movsl
shl
push
push
push
sbb
sub
into
mov
xor
or
jo
and
and
push
popa
jp
test
aas
and
push
lea
lock
iret
jb
jle
sbb
mov
or
add
mov
aad
push
repnz
gs
lods
pop
pop
out
adc
xor
js
xlat
jo
mov
sub
orb
ret
cmp
les
adc
repnz
inc
adc
push
dec
lods
inc
in
cmp
mov
push
jne
or
cmp
es
jmp
fiaddl
das
ret
test
jbe
test
jns
aad
xchg
inc
roll
mov
loope
aad
jge
mov
push
and
lods
cli
leave
movsl
and
jbe
xchg
ljmp
call
sbb
fstps
into
scas
mov
jns
mov
hlt
out
out
lret
pusha
mov
xlat
cmpl
iret
shll
jmp
stc
mov
sahf
leave
dec
xchg
mov
aaa
leave
sbbb
nop
ret
inc
shll
mov
fists
outsb
jae
aas
pop
mov
popa
mov
mov
test
sbb
xlat
push
arpl
addr16
xor
fistl
mov
aaa
sub
cmc
push
adc
jge
nop
and
mov
cs
inc
fstps
mov
push
sub
dec
in
lods
or
or
or
cmpsl
jo
sbb
mov
fildl
pop
in
aad
loop
shll
pop
xchg
sahf
inc
loop
movq
adc
sbb
mov
lds
or
inc
jg
xchg
inc
testb
add
js
loop
cmc
or
insb
jecxz
inc
int
pusha
ret
mov
add
inc
mov
sub
mov
test
idivb
cltd
sub
iret
xchg
and
xchg
enter
out
lds
push
or
cmp
fisubs
les
test
sbb
out
mov
mov
imul
jg
loopne
idivb
sbb
xlat
jg
pushf
lret
cmpsl
jl
popf
mov
push
aam
add
int3
js
xor
frstor
adc
adc
mov
adc
sub
into
adc
movb
mov
sti
sbb
icebp
mov
push
pop
dec
and
push
ss
je
lret
je
scas
dec
mov
mov
mov
push
inc
out
jbe
outsb
mov
pop
mov
scas
mov
jecxz
sbb
icebp
lcall
je
xchg
jge
or
mov
mov
ss
std
or
int3
and
mov
shll
pusha
shll
mov
lahf
dec
in
dec
mov
pushl
jo
sbb
ret
cmpsl
fbld
pop
stos
jb
sahf
movsb
lahf
push
sar
test
leave
leave
sahf
dec
jae
mov
inc
ss
inc
cmc
jbe
jmp
and
push
repnz
out
pop
les
stos
sub
scas
jmp
mov
into
data16
leave
dec
sbb
xor
jo
repz
gs
inc
sub
mov
mov
xor
lret
lods
fsubrl
dec
into
sbb
mov
and
cmp
mov
ret
jmp
adc
sub
movsl
mov
sbb
or
jne
mov
cmp
mov
movsl
stos
lea
and
inc
lahf
std
loop
test
jg
dec
test
and
stc
cmpsb
mov
sarb
scas
mov
pop
fucomp
dec
lret
nop
push
aas
mov
jnp
stos
insl
nop
dec
cmc
sub
imul
icebp
or
and
icebp
loope
cmc
jle
outsb
push
inc
inc
inc
xor
jmp
bound
pop
fnstsw
ss
cwtl
sarb
js
int
inc
cld
and
leave
jno
mov
lret
in
jge
rorl
push
pop
cmp
lea
sbb
subb
dec
aam
pusha
test
jo
jne
subl
inc
pop
mov
clc
inc
cmc
push
xor
js
movsb
cmpsb
lock
test
mov
popa
pop
cmp
aam
not
sub
mov
mov
push
ja
push
adc
mov
dec
add
mov
and
mov
pop
lea
repz
xor
std
pusha
jge
dec
movsb
dec
shll
mov
jmp
and
out
mov
ret
and
sub
fidivrs
js
dec
inc
xchg
mov
xor
in
loopne
pop
mov
les
or
es
dec
sub
or
sub
loop
sti
push
cmp
xchg
cs
xor
cmp
in
aad
jmp
adc
bnd
stc
mov
xor
xchg
dec
or
repz
out
inc
or
test
inc
dec
aad
repnz
ret
jle
inc
dec
fistl
pop
rclb
sub
mov
inc
inc
orl
mov
test
ret
or
mov
ret
clc
out
mov
daa
push
jmp
mov
in
push
lods
sarb
pusha
jge
shrl
das
xchg
inc
lods
dec
xchg
scas
inc
pand
cld
mov
cmp
mov
notb
xchg
xor
enter
mov
inc
jp
insb
mov
add
mov
xor
ss
cmp
and
aad
scas
scas
mov
aaa
or
jle
cmpsl
xchg
xchg
sbb
clc
push
mov
sbb
stos
sub
add
mov
adc
xor
mov
es
push
xchg
test
xlat
sub
in
xchg
sub
mov
loope
test
scas
and
pop
pop
adc
outsb
mov
ja
mov
adc
stos
pusha
mov
gs
lret
push
xlat
aam
push
gs
mov
xchg
sbb
lock
lea
cmp
adc
in
cmp
dec
adc
cwtl
stos
ret
adc
push
fdivs
pop
sbb
adc
add
lods
pop
sbb
out
ret
lods
filds
inc
test
lahf
inc
jmp
jecxz
jb
add
insb
das
iret
movsl
inc
dec
lret
jge
pop
mov
add
pop
lock
mov
outsl
add
pop
lret
xrelease
int3
in
mov
or
mov
popa
shrd
sub
sbb
xchg
orb
lahf
ficoms
or
dec
adc
xor
and
pushf
int3
xor
aaa
or
fsubrs
sbb
rclb
movsl
mov
mov
mov
inc
and
mov
pop
pminsw
cld
dec
mov
sbb
sub
lldt
add
aas
out
fdiv
imul
push
mov
dec
in
call
lods
out
pop
mov
in
je
add
pop
add
aad
jl
mov
aad
sbb
std
enter
or
test
bound
negb
rcll
add
lods
ficoms
xor
mov
aad
repnz
sahf
mov
mov
jns
and
add
popf
repnz
and
add
pushf
dec
fs
mov
cmp
neg
sahf
lock
inc
mov
out
scas
push
xor
sub
aam
clc
scas
fdivs
repnz
pop
lahf
ds
add
xor
mov
sub
popa
add
push
push
xchg
shl
loopne
pusha
xor
loopne
jo
mov
jbe
push
cld
push
sub
mov
and
int3
xchg
fnsave
sub
lahf
and
fists
mov
jae
out
jp
ss
pop
and
adc
mov
jno
fiadds
cmp
cmc
notb
mov
xchg
dec
es
ds
inc
and
ljmp
cld
mov
push
push
xlat
fisttpl
mov
inc
out
packsswb
add
mov
cmp
adc
das
lods
cwtl
pusha
inc
cli
push
xchg
sbb
sbb
pop
in
xor
pop
pop
movl
push
cmpsb
data16
hlt
cld
in
mov
cli
scas
sar
xchg
lock
dec
and
push
lock
cmp
in
mov
aas
rol
sbb
jne
add
jno
sbb
mov
scas
adc
sbb
insl
inc
mov
xchg
mov
les
lcall
ljmp
mov
jecxz
pushf
daa
out
xchg
mov
cmp
push
adc
out
push
mov
out
mov
aaa
data16
mov
arpl
xchg
ret
je
and
sbb
push
mov
fildl
inc
rol
push
jnp
lcall
stc
mov
rorl
inc
push
int3
mov
push
test
cs
ljmp
sbb
aad
mov
lods
icebp
leave
in
scas
xchg
lods
cwtl
lret
int
cli
mov
in
or
xor
jecxz
lcall
adc
mov
and
adc
test
xor
mov
add
xor
add
mov
sub
ds
mov
jmp
cmc
push
xor
repz
out
fmull
sub
pushf
jg
icebp
insb
inc
adc
cmpsl
cltd
loope
fmuls
pop
and
adc
ja
addl
stos
push
cmp
cmp
mov
xrelease
frstor
popa
push
push
scas
fcmove
jge
out
mov
xchg
andl
dec
icebp
sahf
adc
test
cs
push
pusha
es
insl
loop
ss
xor
cmp
jae
sbb
ret
shlb
jle
lds
popf
xchg
cmp
adc
stos
jns
cs
sbb
push
inc
xchg
inc
jnp
test
fs
stos
mov
mov
jge
cmp
imul
fisttpll
mov
sbb
or
ss
fldcw
cli
cld
add
cmpsb
inc
pushf
adc
rcll
roll
das
aad
test
shl
in
mov
shll
dec
pop
inc
lcall
or
jl
or
cwtl
push
pop
test
test
xchg
mov
dec
pop
pop
hlt
pop
popf
add
sbbb
jle
hlt
sti
mov
jmp
insb
cmp
jae
and
xchg
nop
shrb
gs
mov
jl
ficoms
lods
or
sti
mov
jbe
mov
shll
repz
mov
test
test
or
shll
int3
pop
aad
in
sbb
mov
cmp
loopne
mov
outsl
lds
mov
movsl
adc
sar
fisubrl
in
imul
js
test
xor
jp
js
fnsave
mov
cmpsl
es
cld
mov
call
dec
cli
jmp
xchg
mov
push
sbb
sbb
ja
jge
jbe
jne
popf
sub
dec
sbb
pusha
faddl
insl
inc
sub
mov
sub
stc
mov
xor
leave
aad
adc
outsl
dec
xor
loop
mov
adc
cwtl
movsb
arpl
sbb
jne
bound
mov
js
mov
aad
and
shrl
ret
mov
push
pop
sbb
jmp
stos
pop
and
les
dec
cld
sub
mov
rorl
cmc
pop
add
stos
mov
sbb
popa
cmp
test
mov
nop
divb
addr16
ja
shll
in
mov
je
lahf
aaa
pop
sub
hlt
pop
dec
and
stos
ds
lahf
or
or
mov
lods
pusha
dec
inc
xchg
mov
mov
pop
adcl
xchg
sbb
repz
add
mov
sbb
popa
inc
jae
cmp
call
add
xchg
aaa
add
out
fbld
inc
jmp
dec
loope
add
stos
jle
lds
jmp
aad
inc
push
loopne
sbb
daa
mov
pop
sbb
push
imul
mov
shll
aam
fstps
mov
mov
adc
hlt
faddl
cmpsl
push
inc
sub
mov
cmpl
and
pop
or
mov
mov
pop
xchg
push
outsb
std
rol
test
sbb
cmpsb
mov
aas
push
push
dec
and
add
or
sarb
sub
rcll
fildl
loopne
mov
cmp
lods
jns
andb
cwtl
lds
repz
mov
cli
mov
test
pop
bound
shll
shlb
mov
xchg
or
fldt
and
sbb
pop
outsl
push
loop
bnd
clc
jl
lds
adc
pop
loopne
jg
dec
add
flds
mov
cbtw
fcomps
xchg
movsb
testb
cmpsb
cmp
push
and
lea
shlb
lret
rorl
xchg
loopne
dec
cmc
jae
test
fld
lret
jmp
in
mov
mov
pushf
and
lret
daa
mov
cmpsl
dec
iret
into
mov
sbb
leave
jns
popa
mov
dec
cmpl
add
jp
and
pop
arpl
leave
mov
pop
imul
sub
loope
inc
jl
std
std
mov
mov
sub
loop
lds
push
insl
mov
fisttps
iret
cmpsl
xor
inc
mov
sub
jnp
aas
int3
push
sbb
ja
shll
aam
cltd
shlb
rorb
jo
mov
inc
stos
roll
lods
sub
jge
and
mov
cmp
mov
clc
mov
pop
sahf
test
dec
dec
cmc
ljmp
les
call
sub
and
inc
shll
mov
lahf
repnz
and
pop
pop
push
imul
mulb
bswap
mov
shrl
outsl
push
sti
fbstp
jge
loopne
push
jne
sarl
in
xor
and
pop
or
lock
lea
lret
ret
into
lret
push
mov
cmp
movsb
push
andl
cmp
dec
dec
inc
sbb
movsl
test
movsl
insb
ljmp
push
or
adc
sub
pop
sbb
adc
mov
xor
ja
pop
into
daa
lods
mov
call
sbb
mov
push
lret
dec
push
rcl
das
leave
into
jp
cld
mov
movsl
adc
xchg
push
daa
sub
hlt
popa
push
sbb
cmp
adc
stos
xlat
or
or
ja
mov
fldenv
enter
les
ds
imul
fcoms
pop
push
clc
repz
adc
insl
outsl
adc
rcrb
ret
popa
adc
insl
imul
dec
lahf
lcall
mov
xor
jb
push
mov
inc
mov
dec
pop
mov
testl
enter
and
xor
fiadds
in
mov
pushf
inc
pop
ja
mov
stos
inc
inc
push
aas
loop
pushf
ret
inc
sahf
movsb
ljmp
dec
loope
pop
mov
scas
mov
pop
popa
lods
cwtl
dec
subb
pop
jo
inc
pop
inc
dec
and
jns
stos
std
jbe
das
outsb
out
lods
lock
out
sbb
push
push
data16
mov
rol
dec
pushf
mov
mov
in
add
push
adc
pop
scas
loope
lret
pop
fstl
mov
mov
mov
jnp
scas
pop
in
mov
sub
pusha
lret
dec
gs
aaa
mov
jns
out
add
add
jno
fbld
insb
or
dec
repnz
subl
jecxz
mov
pop
mov
rcrb
xor
fldcw
dec
mov
cmc
xchg
add
sbb
push
mov
ljmp
and
xchg
lcall
into
cmp
lret
mov
aad
xor
icebp
loope
sbb
insl
mov
mov
mov
icebp
inc
mov
jnp
data16
daa
push
nop
or
fistps
mov
cltd
push
add
sub
aas
lea
fimuls
sti
mov
add
mov
cs
mov
xlat
sbb
mov
imul
cmp
jge
ret
int3
jl
push
cwtl
fidivrl
and
repnz
aad
sbb
jmp
push
push
xchg
or
lods
inc
roll
adc
int3
adc
lds
mov
ja
add
addr16
mov
idiv
jecxz
pushf
test
iret
add
aam
cmp
ret
pop
stos
loopne
mov
jg
lods
inc
pop
test
mov
xor
fucomi
je
fs
scas
gs
aas
push
sbb
mov
cmovge
stos
dec
sbb
lock
mov
ja
sahf
in
xor
sbb
in
cmp
xchg
push
mov
cmc
jbe
mov
add
into
enter
gs
shlb
mov
or
adc
add
push
iret
out
sahf
jo
push
dec
cmc
call
enter
push
aam
out
lcall
adc
pop
lea
clc
popl
add
stos
mov
es
or
mov
adc
pop
cmp
cmpsb
xchg
cmp
push
iret
lcall
xchg
cltd
sahf
xchg
frstor
add
xchg
jecxz
jp
cmp
jbe
test
clc
je
xchg
mov
pop
daa
or
xor
out
cmp
cltd
loopne
or
jle
xchg
mov
push
mov
adc
fidivrs
jg
arpl
xor
call
mov
fldt
jb
jmp
sete
subb
mov
jmp
addr16
cli
dec
scas
push
inc
dec
lcall
or
mov
jecxz
inc
imul
loope
int
test
ss
rolb
je
jg
inc
gs
dec
mov
inc
push
jns
test
sub
adc
mov
sbb
mov
pop
add
insl
aas
jp
ljmp
loopne
xchg
cmp
mov
arpl
in
push
dec
clc
push
aas
pushf
and
aaa
sbb
cltd
push
adc
xor
cltd
scas
repnz
subl
lahf
rcrb
js
inc
jno
in
lret
lret
xchg
pop
jbe
or
ja
mov
pop
add
jecxz
sti
outsl
cmc
pusha
loop
inc
jo
xlat
jg
dec
in
mov
adc
add
add
dec
lock
xchg
je
mov
dec
bound
fidivs
push
sbb
sub
adc
push
fsubrl
add
and
dec
pop
js
repnz
fwait
or
adc
std
out
es
loopne
daa
and
fs
clc
sub
popa
mov
xor
mov
outsl
mov
pop
lret
cmp
into
mov
xor
pop
sub
sahf
outsb
ss
lods
jno
pop
xor
out
loope
pop
jmp
insb
shll
adc
lret
lds
bound
sub
dec
outsb
dec
mov
and
push
ret
loope
jo
add
sbb
xchg
jbe
ljmp
repnz
lds
mov
jo
movsl
dec
rcl
push
scas
push
sbb
mov
fcmovnbe
daa
push
lcall
mov
or
cltd
lahf
in
jbe
es
sarl
mov
test
stos
xchg
sbb
mov
les
negb
sub
dec
sub
and
inc
inc
inc
xor
mov
in
repnz
fistps
leave
push
mov
stos
scas
cmpsl
and
or
mov
jnp
xor
mov
jb
dec
insl
cltd
aam
jno
movq
sub
stos
adc
clc
test
ljmp
jle
enter
int
lods
lahf
lcall
mov
sub
mov
je
test
fisttpll
loop
adc
add
or
adc
shll
outsl
push
jno
lea
mov
aaa
mov
dec
xchg
loopne
loopne
adc
xchg
orl
cmpsb
cmc
jg
repnz
dec
lea
ficomps
test
rcrl
pop
add
push
int3
cs
mov
je
ljmp
into
in
sub
cmp
ret
adc
jge
pop
inc
jecxz
fwait
aas
jno
mov
lahf
jge
test
sbb
pushf
push
pushf
or
js
jge
rcr
xor
lret
inc
pushl
cmp
pop
mov
or
in
or
in
frstor
and
repnz
xor
xor
push
mov
out
cmp
std
xchg
mov
test
cltd
jle
test
loop
inc
dec
mov
dec
lahf
cmp
xlat
xchg
adc
sbb
xchg
mov
popa
pop
jp
or
mov
and
addr16
hlt
xchg
push
fcom
mov
into
stc
add
ret
fcoms
scas
xlat
push
mov
dec
cmc
mov
rolb
mov
jmp
jbe
in
lods
push
add
and
mov
nop
rorb
orl
jo
loope
xchg
std
xor
sahf
adc
dec
or
push
cs
cli
jns
rcrb
cmp
scas
pop
jle
mov
bound
lcall
imul
lret
std
gs
faddl
sbb
adc
or
insl
and
mov
sub
jo
or
dec
imul
out
repnz
dec
xor
adc
xchg
add
bound
aaa
push
pusha
dec
xchg
or
push
andl
in
subb
inc
mov
aaa
arpl
and
ljmp
mov
xchg
fiadds
in
addb
push
inc
mov
aaa
mov
leave
daa
pushf
mov
push
xor
sar
into
lea
pop
sbb
scas
cs
repz
add
push
loopne
movsl
loop
dec
push
xor
push
cmp
andl
popf
pop
cmc
lock
movsl
add
xchg
clc
scas
pusha
loop
sbb
dec
popf
gs
shlb
js
inc
xchg
fiadds
call
add
ds
repnz
icebp
rep
xchg
xchg
sbbb
insb
popf
sbb
mov
push
mov
cmp
cmpsb
xlat
inc
ret
addb
lret
sbb
mov
or
add
out
adc
lret
lret
shlb
imul
not
insl
sub
frstor
test
imul
sbb
sub
mov
inc
cmpb
bound
rolb
lret
mov
cmp
arpl
ffreep
mov
mov
inc
lret
ds
pop
je
or
sub
sbb
push
mov
gs
inc
push
fisttps
lea
pop
sahf
loopne
shrd
add
mov
adc
push
or
popa
incl
into
fcmovne
xor
pop
push
inc
xchg
call
pop
ljmp
add
mov
mov
mov
fdivp
mov
into
jbe
or
lods
popf
sub
xchg
into
mov
or
lret
aad
push
and
xchg
fwait
leave
xor
xor
adc
push
pop
adcl
clc
and
sbb
dec
fsubp
pop
mov
cmpsb
lret
xchg
negl
xor
push
xor
aaa
sub
cmp
sub
and
mov
mov
popf
aas
addr16
mov
xchg
aaa
rolb
loope
add
jle
jb
hlt
xor
xchg
insl
xor
xchg
push
int
add
out
sbb
cld
fistps
ds
mov
add
add
push
inc
sub
fistpll
in
enter
std
testl
cmp
fs
and
addr16
arpl
dec
cmpsl
cltd
sub
frstor
ficoml
icebp
jge
out
rorb
add
ret
and
sti
sub
pop
push
arpl
inc
jae
jbe
cmp
dec
mov
jecxz
lea
adc
stos
or
data16
lods
or
fidivrs
lret
outsl
popf
sbb
mov
sub
xor
stc
mov
cmp
push
clc
xchg
pop
test
cwtl
in
and
jns
addr16
xchg
nop
into
lret
daa
and
or
in
push
sti
sub
pop
pop
les
mov
adc
or
ja
xchg
and
repz
xchg
scas
dec
out
lods
mov
in
mov
test
xlat
fcomp
push
dec
xlat
stc
call
enter
int
jg
into
pop
fsubrs
mov
push
int
push
xor
sub
xor
sbb
add
pop
pushl
or
cmpsl
mov
mov
lods
leavew
fnsave
sbb
jecxz
lods
fdivp
or
pop
mov
pop
add
rcr
mov
dec
iret
jnp
enter
popf
decl
je
int
mov
push
pushf
adc
pushl
imul
or
mov
push
sbb
out
bound
out
mov
js
adc
outsb
mov
dec
scas
inc
stos
out
xchg
mov
enter
jmp
scas
ds
in
pop
sbb
in
add
push
dec
cmp
loop
xchg
mov
hlt
push
call
cli
ds
push
inc
xor
fsubs
cltd
rorl
mov
out
jae
jge
add
out
imul
std
call
nop
pop
sbb
test
jnp
gs
out
cld
sub
mov
repnz
pop
aas
ljmp
imul
push
fwait
cmp
std
mov
cld
xor
negb
inc
sbb
lahf
push
push
sub
adc
scas
test
cli
pusha
das
inc
lods
and
popf
lods
inc
movsl
mov
jnp
fnstcw
lock
mov
xor
pop
lock
adc
mul
dec
mov
pop
xor
mov
pusha
aaa
cli
idiv
cwtl
lods
loop
insb
sbb
xorl
cld
jle
aad
jno
jle
loop
cwtl
xchg
ja
sahf
test
lret
jmp
pop
or
xchg
ss
fbstp
dec
sub
push
push
pop
mov
bswap
call
sbb
mov
roll
aaa
xchg
sbb
jno
arpl
lcall
xor
aad
push
jnp
stos
push
cmp
sub
das
ljmp
and
out
sub
leave
pop
lea
jb
and
push
ds
xchg
push
inc
nop
add
and
dec
loopne
addr16
and
mov
push
mov
or
or
pop
jnp
cmpsl
je
mov
jns
daa
adc
repnz
fisttpl
aas
jl
xor
cld
rcl
xchg
mov
push
mov
mov
test
push
mov
leave
shr
fmull
je
pop
bound
push
sub
mov
orb
add
xor
pusha
inc
add
invd
pusha
adc
cmpsl
jg
paddd
popa
jge
cmpsb
leave
das
mov
sbb
jo
jle
sbb
scas
popa
or
jecxz
test
pop
dec
data16
and
or
dec
add
insb
push
inc
pop
adc
mov
mov
mov
fdivl
paddd
xor
pop
test
mov
das
scas
jno
add
inc
inc
and
cmp
data16
sbb
decl
lea
insl
cmp
jnp
adc
xchg
xchg
mov
inc
shl
sub
cmp
sbb
loop
mov
or
xchg
in
push
mov
inc
in
insb
pushf
out
mov
cmp
or
or
dec
jbe
orl
cli
mov
lods
mov
jb
inc
cmc
paddsb
scas
or
icebp
jg
lret
sar
sti
outsl
xchg
and
mov
adc
std
xor
xor
mov
imul
add
push
sub
movsl
loopne
aam
or
or
icebp
aas
mov
mov
mov
fmul
adc
add
fisubl
aam
mov
ja
and
pop
pop
cmp
dec
mov
sub
out
outsb
cmp
cs
and
call
sub
fimuls
mov
pushf
or
adc
sbb
test
cld
sub
cmpsb
das
test
fiaddl
push
out
out
inc
in
ljmp
jo
jno
jecxz
aas
inc
inc
aam
jbe
or
inc
fistps
roll
mov
cltd
imulb
daa
aad
and
pop
ljmp
cmp
xchg
sub
cmp
dec
stos
ja
stos
cmp
outsl
es
fmuls
sbb
lock
jne
shrl
or
rcrl
std
or
aaa
jg
dec
divl
mov
hlt
push
in
stc
sub
dec
std
test
cld
mov
mov
out
push
mov
lret
dec
jp
fstps
adc
lods
sub
sbb
sub
minps
inc
lret
imul
cwtl
dec
pop
mov
leave
mov
or
hlt
or
sub
dec
and
insb
std
movl
or
pop
sbb
out
stos
sbb
ljmp
or
jae
mov
test
push
adc
shll
ret
adc
sub
fnstsw
jle
and
loope
fnstenv
or
add
ss
test
mov
dec
test
shll
xchg
jo
xchg
popf
loopne
ret
stos
mov
out
stos
pop
mov
jp
decb
add
out
adc
aas
bound
lods
xchg
xchg
inc
mov
or
jmp
inc
and
inc
mov
cmp
jg
sub
xchg
fimull
popf
filds
pop
cltd
lods
sub
lret
and
dec
push
test
adc
push
cs
add
pop
iret
lcall
fisttpll
sbb
jb
test
push
push
cmp
mov
ja
ret
cmp
rolb
push
inc
sub
movl
lret
xchg
icebp
cmpsl
lret
call
jo
jae
push
and
pop
pop
lods
sbb
insb
xchg
and
fwait
addr16
pop
fwait
mov
mov
xchg
repnz
pop
push
sbb
test
arpl
in
fnsave
scas
ret
or
scas
add
sahf
add
mov
jp
ret
fcmovb
cmp
daa
insl
adc
jne
mov
aad
mov
inc
xchg
mov
sbb
in
mov
nop
mov
ficompl
sarb
sbb
daa
jecxz
lret
add
jecxz
jg
std
jmp
pop
popa
stc
mov
mov
sarl
sbb
xchg
dec
mov
cmp
addb
push
testl
jl
fwait
out
aas
ljmp
push
scas
mov
inc
xor
ret
xchg
sub
orl
push
cmpsl
stc
test
in
sbb
negl
ret
fbld
loope,pt
fdiv
ds
inc
stos
pop
mov
mov
add
pop
jno
test
adc
mov
and
dec
and
out
sbb
bnd
lock
rcr
out
mov
and
inc
inc
mov
cld
add
test
mov
rol
inc
test
jmp
popf
pop
andb
data16
leave
aaa
pop
xchg
inc
jns
aaa
sub
push
cmpsb
lret
pop
lret
inc
sub
mov
fwait
adc
push
jecxz
insl
adc
pop
cltd
dec
shl
push
stos
cmp
mov
inc
cltd
pop
fisttpl
inc
mov
stc
and
orb
rcll
jno
lods
in
and
mov
pop
cmp
enter
inc
or
out
xchg
sahf
mov
mov
sub
mov
jg
and
push
loop
stos
enter
ret
clc
loop
dec
xchg
cmp
hlt
xor
push
cmp
mov
or
cmp
in
icebp
jb
aas
mov
pop
test
lcall
inc
lods
loope
mov
sub
std
fwait
ja
pop
fbstp
inc
mov
sti
mov
out
and
xor
stos
insb
call
clc
lahf
sub
or
loopne
mov
orl
imul
add
mov
int
adc
add
sbb
mov
popf
stos
lahf
jbe
push
test
into
dec
loopne
mov
cli
xchg
das
mov
and
mov
xchg
mov
lahf
sbb
fnstsw
int
bnd
jnp
cmp
ljmp
enter
and
js
push
mov
std
mov
int
popa
dec
aas
push
dec
icebp
and
ja
fstps
mov
adc
sub
or
jno
jae
mov
sub
and
fwait
jg
xor
mov
mov
dec
sub
in
decb
ret
jge
push
shr
pop
adc
mov
int3
shl
mov
sbb
sub
adc
or
insl
popf
movsb
mov
pusha
enter
xor
mov
xor
pop
adc
rcrb
pop
jge
inc
sub
ljmp
movsl
mov
movsl
mov
jbe
sbb
lds
lcall
fisttps
adc
daa
ljmp
xchg
xor
and
adc
mov
bound
cmpb
dec
test
add
aam
or
or
mov
mov
and
sub
sbb
imul
iret
add
fwait
inc
xchg
out
lret
add
sub
jle
call
sbb
das
mov
xlat
and
arpl
test
dec
xor
fstps
mov
pop
je
js
ret
push
inc
out
dec
inc
js
test
jne
shrb
mov
cmp
cmpsb
mov
cmp
inc
dec
cmp
dec
jp
cli
into
rep
and
or
jne
lea
mov
and
or
das
fadds
in
clc
insb
insl
lcall
aas
sahf
mov
xchg
xor
adc
cmp
mov
cmp
clc
mov
cmp
xchg
daa
pop
dec
call
xlat
xor
stos
and
lcall
loop
movsb
fiadds
dec
mov
dec
add
pop
les
adc
mov
dec
mov
pop
and
xor
adc
les
mov
add
popf
push
or
lret
test
xor
xorb
and
cmp
pop
or
sbb
inc
jb
push
scas
push
push
andl
pop
mov
loop
push
fsub
cs
lds
out
dec
add
sbb
stos
push
xchg
inc
pop
cld
mov
mov
popa
lret
cld
mov
pop
push
and
ret
icebp
cwtl
pushf
mov
xor
leave
addb
xchg
shl
push
inc
std
ds
bound
adc
add
adc
adc
cmp
outsb
jo
inc
loopne
pop
mov
andl
test
aaa
or
push
adc
dec
and
loop
jne
inc
in
jb
das
gs
push
ret
mov
jb
xchg
mov
in
gs
jmp
pmuludq
test
aam
xchg
cmpsl
call
mov
and
xchg
pop
ja
ret
xor
mov
xchg
sbb
ds
sbb
int
idivl
dec
in
scas
je
cmc
mov
fbstp
sbb
inc
dec
cmpsb
js
xor
or
je
test
out
aas
push
mov
in
sbb
in
xorl
push
fwait
inc
mov
negb
sub
push
outsb
dec
sahf
sti
cmp
add
push
and
and
addl
jge
int
mov
cmp
imul
nop
mov
iret
xchg
loop
loopne
out
jmp
loop
jp
or
test
or
xlat
repz
pop
inc
loope
xor
dec
testl
andb
adc
shll
pop
or
test
xchg
stc
shlb
iret
inc
mov
add
pcmpeqb
jb
je
mov
push
out
pop
out
ret
ror
rorl
xor
sub
ret
movsb
rclb
inc
daa
das
and
and
lds
test
out
and
add
pop
vpsllw
shrl
pop
add
jge
fistpll
outsl
das
or
movsl
inc
push
sbb
insb
js
xlat
mov
fistl
nop
xchg
pop
cli
popf
js
shlb
gs
add
xchg
stos
popa
inc
xchg
sbb
std
inc
sti
or
xchg
xchg
mov
fidivl
add
adc
addr16
mov
out
aas
jnp,pn
test
jb
push
jecxz
ret
dec
cmp
jp
inc
fwait
xchg
pop
cs
pusha
cmp
push
pop
add
in
or
and
xor
cmpsb
sbb
gs
jecxz
mov
cli
sbb
mov
push
js
aam
sti
sbb
or
lods
test
nop
insl
jg
jmp
adc
xchg
xchg
lds
and
ret
testb
gs
cwtl
mov
xor
and
pop
imul
les
xor
lock
ss
faddl
cwtl
xor
add
dec
mov
xor
stos
dec
call
mov
push
jecxz
inc
cmp
outsl
in
push
mov
stc
jl,pn
or
aas
bound
mov
mov
imul
int
jg
cld
out
bound
inc
mov
jmp
sub
les
add
repz
or
push
push
mov
cmpsb
pop
cmc
idivb
inc
inc
xor
inc
push
dec
inc
push
js
jns
ret
enter
pop
imul
cmpsl
pop
jp
push
lods
cli
fadd
push
push
fdivrl
mov
out
push
loopne
dec
inc
popa
pop
lock
hlt
mov
insb
and
pop
int
jne
add
mov
lret
inc
data16
push
or
sub
dec
into
pop
outsl
loop
jecxz
pop
cld
insl
or
add
neg
or
pushf
nop
inc
lods
imul
fwait
pop
adc
pop
lret
jle
push
pop
dec
mov
mov
pushf
popa
lret
rolb
sub
add
dec
or
xchg
pop
xor
inc
lret
sub
sub
test
mov
mov
inc
fadd
cmp
das
mov
pop
mov
cltd
loop
rcrb
sub
popa
push
cmpsl
or
xchg
dec
inc
fs
fnstsw
jae
mov
lods
jbe
sbb
test
lahf
and
je
mov
push
mov
xor
imul
xchg
jae
enter
or
stc
adc
pop
xchg
mov
les
shll
dec
dec
loopne
test
mov
test
jnp
sbb
jp
adc
lds
movsb
mov
pop
sbb
bound
xchg
jno
xchg
adc
sub
cmp
mov
int3
test
cmc
sub
mov
mov
ja
xchg
arpl
aas
cmp
push
ss
hlt
cli
and
aas
loopne
mov
cmp
cmc
xor
lods
popw
movsb
and
adc
orb
movsl
pop
or
fidivs
loopne
icebp
bound
cs
sbb
pusha
mov
push
mov
and
lods
pop
sti
add
fadd
cmpsb
mov
inc
fs
push
out
or
test
mov
mov
add
push
jo
je
inc
xchg
jae
popa
jnp
and
sbb
push
lahf
mov
push
adc
cmpb
test
sbb
xchg
inc
test
mov
sub
arpl
mov
sti
mov
lock
jo
xlat
xchg
into
adc
mov
cmc
dec
fstp
stos
mov
cltd
pop
sbb
ljmp
and
dec
sbb
sbb
popa
dec
or
xorl
dec
leave
or
aas
xchg
mov
and
shl
mov
fistpl
adc
xchg
ret
inc
decl
cmp
scas
push
cld
dec
mov
cmpsb
repnz
mov
mov
and
cmp
jle
lret
lods
jno
sub
lcall
sbb
out
test
dec
add
fidivrl
mov
xor
arpl
pop
lock
xor
inc
mov
jg
fs
or
mov
ret
shll
push
shrl
inc
pop
fistl
loopne
xchg
stos
mov
mov
add
jmp
push
clc
xor
fs
push
daa
add
in
repz
pop
pop
gs
cs
sbb
int3
jecxz
sbb
sub
sbb
mov
inc
and
je
push
push
popa
push
xor
push
jle
mov
sbb
imul
mov
das
lods
stos
mov
dec
sti
ljmp
aam
scas
add
sahf
in
mov
aaa
jle
ficoms
inc
lahf
pop
aas
inc
pop
xchg
pop
mov
cs
push
mov
jns
ret
ficompl
dec
popa
mov
add
jo
adc
xchg
pop
lock
lock
jno,pn
xchg
push
sbbl
jg
xchg
jle
cmp
clc
aaa
and
mov
jno
mov
jmp
inc
imul
sarl
subb
and
fbstp
add
and
adcl
cmp
sub
jmp
div
fmul
aaa
sub
jo
int
xchg
jb
mov
cmp
cmp
or
aad
mov
scas
daa
jle
gs
push
add
in
ror
push
mov
sahf
sub
inc
xchg
cmp
out
pop
loop
adc
jne
insl
sbb
adc
jno
adc
arpl
stos
mov
int
fdivr
pop
popf
pop
mul
add
dec
and
in
cltd
cwtl
movsl
jb
and
pop
scas
push
movsl
xchg
xor
cmpsb
sub
push
xor
les
sub
and
cmp
push
xchg
out
mov
movsb
push
xor
lret
aam
subl
aam
adc
mov
jno
and
push
adc
mov
pop
mov
xchg
mov
stos
jbe
popf
mov
insl
jge
cmp
shrl
mov
lret
int
popf
and
xor
rcrl
out
mov
mov
jnp
aas
and
fnstenv
sbb
sub
jnp
add
ja
sub
or
mov
cltd
stc
loopne
inc
mov
subl
mov
js
adc
fists
popa
shlb
xchg
push
cld
xor
leave
mov
lods
xor
mov
xchg
popa
scas
push
lds
jns
xchg
and
aas
and
int3
jae
imul
aaa
sbb
add
jecxz
adc
xchg
insl
mov
mov
out
shl
push
out
dec
push
add
pop
loopne
xchg
mov
mov
inc
in
jae
jb
mov
sbb
adc
add
push
ljmp
aad
adc
add
dec
dec
mov
int
mov
fsubrp
push
ret
jecxz
lret
ficoms
cs
daa
jo
les
dec
iret
test
into
rorl
in
mov
dec
pusha
stos
lcall
test
pusha
filds
outsb
iret
cs
xor
sub
arpl
jno
and
scas
add
int
mov
push
imul
shrl
dec
add
jecxz
test
sbb
cmc
xchg
fdiv
mov
mov
lods
dec
mov
pop
int
dec
bound
subl
jl
popf
mov
shl
sar
repz
adc
nop
push
jo
dec
adc
pushf
out
adc
xor
int3
ja
sub
mov
popa
xchg
mov
rorl
pop
sub
sub
in
or
and
in
and
ss
or
or
pusha
mov
clc
icebp
inc
nop
cld
xchg
or
stc
pop
push
pushf
repnz
adc
jno
inc
mov
ja
lret
and
mov
or
imul
lock
sbb
dec
and
mov
repz
add
cwtl
inc
xor
cs
rdtsc
cmp
popa
notl
jl
push
lahf
cmp
mov
jne
je
pop
stos
shl
dec
push
jmp
add
sub
cwtl
clc
sahf
adc
dec
in
scas
fisttps
push
sub
jecxz
bound
rorl
push
loop
cmp
push
lea
xchg
clc
xchg
in
push
scas
mov
sbb
xchg
push
fstpt
xlat
mov
lret
test
jmp
mov
sbb
hlt
xchg
dec
loopne
and
test
cli
xor
int
add
pusha
xchg
je
adc
fwait
pop
xor
addr16
inc
test
mov
mov
adc
xchg
sub
in
mov
movsl
dec
jg
daa
inc
lcall
or
mov
test
adc
mov
ljmp
das
push
cmp
mov
and
push
or
jae
into
adc
enter
push
dec
cmpsl
jp
aaa
gs
std
arpl
std
bound
cmovnp
mov
out
push
or
in
sbb
adc
dec
lea
and
cmp
jo
fcompl
std
and
daa
mov
mov
mov
add
into
js
add
adc
pop
in
push
shl
mov
inc
fdivrl
pushf
sbb
cwtl
adc
xchg
dec
hlt
xchg
nop
fcomps
test
push
adc
bnd
jge
ret
stos
popa
lds
jmp
sub
lret
scas
aaa
negb
dec
int
inc
sahf
arpl
push
pop
inc
jbe
push
lods
shl
ljmp
repnz
scas
bound
fistps
pop
aaa
shr
dec
mov
mov
iret
test
push
xchg
dec
sbb
fimuls
out
lock
adc
jb
push
or
dec
adcl
jecxz
nop
les
xlat
popa
xchg
adc
jp
mov
ror
arpl
je
int3
popa
pop
xor
ret
and
jg
inc
out
scas
jmp
pop
in
fnsave
or
clc
jnp
xchg
jno
lcall
and
mov
scas
jge
mov
xor
addb
fwait
mov
xlat
pop
pop
cli
lret
bound
xchg
mov
sbb
push
sub
out
pop
addb
cmpsl
addr16
movsl
in
lods
aaa
jp
mov
xchg
inc
pop
xor
movsb
movsb
js
repz
sbb
mov
repnz
popf
mov
ja
sbb
sahf
int3
fistpll
jo
repnz
test
mov
jb
pop
mov
xchg
xchg
loope
or
mov
xchg
movsb
xor
xor
popl
mov
push
jo
sub
xor
imul
fisubrs
movsl
sub
mov
aam
lods
push
and
daa
push
pop
push
nop
js
ret
mov
sub
jp
xlat
mov
mov
mov
loop
pop
inc
rcl
dec
cmp
add
push
fwait
out
dec
add
xor
arpl
push
inc
fidivrs
jae
outsl
add
jle
and
cmp
sbb
and
xchg
nop
jbe
dec
outsl
mulb
in
imul
mov
sti
sahf
mov
mov
dec
jns
shrl
xor
mov
addr16
stc
clc
repnz
bsr
mov
and
insb
aas
into
mov
xor
lahf
xor
push
dec
in
outsb
cmpsb
mov
mov
stos
push
xchg
test
sbb
call
sti
lahf
scas
mov
inc
xor
xor
bound
pop
mov
add
clc
jb
sti
shr
inc
adc
mov
jne
dec
int3
arpl
movsl
sub
lods
xor
or
or
or
cld
jge
lcall
pushf
sahf
das
inc
inc
or
ljmp
push
es
push
inc
movsl
push
ljmp
jbe
test
mov
fbld
imul
popa
or
adc
cmpsl
negb
cmp
and
cmp
jmp
out
jecxz
xchg
jae
repnz
xlat
dec
cmpsl
sub
imul
sar
call
es
pop
sub
push
inc
sbb
aaa
xchg
ja
inc
xchg
inc
imul
sub
jle
rcl
aam
shlb
fisubs
rcr
repz
stos
fwait
outsb
mov
jmp
mov
mov
iret
aas
es
cmp
call
sub
aaa
push
daa
xchg
inc
pop
sub
push
push
add
int3
cli
cmc
fwait
lods
roll
xor
adc
lods
movsb
mov
in
adc
fbld
mov
rorl
icebp
js
stc
or
adc
adc
mov
cs
dec
ficompl
push
lret
push
xchg
mov
inc
pop
hlt
sub
gs
sbb
mov
mov
pop
sub
pop
inc
or
out
aas
rcr
mov
xchg
add
out
outsl
pop
jge
adc
dec
pop
imul
cmp
xchg
adc
xchg
xor
xor
outsl
lcall
addr16
jl
mov
out
shlb
sub
jbe
lahf
mov
pusha
rorb
xchg
cmp
lret
mov
sbbb
mov
jnp
mov
mov
inc
inc
ret
cld
pop
or
pop
sbb
mov
repnz
pop
and
ljmp
pop
or
fnsave
add
add
mov
adc
jmp
or
jle
sub
and
cmp
mov
addr16
inc
outsb
iret
xchg
adcb
or
ficoml
imul
mov
imul
mov
or
xor
pop
stos
push
insb
xorb
xchg
iret
inc
mov
cmp
mov
aad
daa
jecxz
xor
shrb
pop
push
xchg
enter
mov
je
jecxz
push
imul
popa
pop
out
fs
push
out
movb
mov
push
je
hlt
stos
sbb
mov
jg
jae
ret
jb
addb
das
xor
ror
add
and
push
sbb
cwtl
addr16
out
or
loopne
out
popa
inc
loope
fs
cmp
pop
mov
sub
cmp
icebp
int3
sbb
and
out
ja
sbb
adc
dec
pushf
inc
test
aam
sti
sti
insl
and
popl
loope
adc
gs
roll
out
cltd
cmp
les
add
mov
or
and
pop
movsb
push
inc
sbb
mov
dec
fisttps
in
mov
imul
testb
fwait
clc
adc
or
pop
sbb
ffree
xorb
insl
outsb
adc
jge
movsl
mov
loope
rcrl
cwtl
inc
call
inc
les
aam
test
jne
out
hlt
push
and
xor
aam
movsl
xor
inc
insl
in
jmp
arpl
mov
imul
das
les
test
daa
out
loope
xor
xor
pop
movsl
je
xchg
and
pushf
out
jb
shlb
lahf
mov
add
imul
movsb
jb
fistl
inc
call
es
adc
mov
lods
xchg
add
test
push
mov
xor
stc
in
fcomip
aas
aaa
inc
mov
mov
pop
mov
ret
mov
xchg
lea
addr16
enter
jae
insl
jecxz
push
add
fisttps
les
enter
push
xchg
ds
xorb
or
jmp
repz
or
std
les
mov
inc
jmp
xor
fstpt
in
cmp
inc
add
mov
push
sub
shl
in
push
inc
lcall
or
dec
and
pop
out
cld
cmp
pop
cmp
jo
mov
and
mov
pop
mov
out
adc
sbb
andps
xor
push
push
stos
das
dec
sub
dec
jp
or
fsubr
push
xchg
adc
inc
and
fldt
out
lret
push
cmovle
cmpsb
sbb
loope
sbb
leave
sti
lcall
ret
mov
ds
cmpsb
xor
mov
pandn
cmpsl
insl
or
xchg
jae
push
int3
and
dec
sub
pop
or
into
cli
pop
jbe
call
push
lods
adc
add
out
fstpt
sub
sbb
and
rolb
push
sbb
or
lahf
mov
or
inc
ja
xchg
sbb
mov
dec
in
jbe
les
ja
out
insb
scas
movsb
rorl
and
sub
lahf
jne
inc
sub
faddl
lret
movsb
stos
mov
cld
dec
mov
cld
iret
test
xchg
mov
clc
pushf
sub
xchg
pop
jle
outsl
leave
ja
push
divl
sub
fwait
dec
repz
out
les
ja
sbb
ds
cs
test
movsb
sbb
addl
inc
inc
ja
and
aad
xchg
add
aas
jge
jns
fwait
jle
jne
ja
jmp
sub
sub
inc
data16
mov
pusha
scas
outsl
dec
test
mov
xor
add
pop
test
mov
fmull
sbb
or
adc
mov
pop
push
es
jg
or
pusha
icebp
dec
ljmp
cmpsl
aam
push
pop
js
push
daa
call
add
addr16
sub
cmpsl
addb
and
movsl
lret
fsubrp
adc
repnz
mov
xchg
sbb
clc
loopne
dec
arpl
xor
sbbb
adc
call
loopne
cwtl
jbe
movsb
adcl
add
push
add
xchg
adc
jl
xchg
jb
leave
cmc
repnz
cmp
in
fs
xchg
jo
stos
call
cmpsb
or
nop
insl
pop
pop
dec
mov
jno
cmp
addr16
cmp
pop
icebp
add
rsm
mov
cli
test
jne
out
mov
mov
fwait
pop
dec
lret
dec
enter
ret
outsb
mov
ret
pop
loop
sbb
mov
in
or
xor
ljmp
pop
leave
and
mov
in
adc
cmp
xor
mov
or
and
xchg
fsubs
mov
test
sub
sbb
xor
arpl
mov
xor
cmp
adc
mov
andl
movsl
mov
into
push
push
insl
sbb
cmp
lahf
lods
into
sbb
lods
mov
mov
clc
cmp
das
pop
fstpt
fbld
dec
xlat
jmp
cld
pop
clc
mov
pand
ficoms
cmp
mov
inc
sub
push
pop
out
or
clc
jge
in
repz
lods
fs
ja
lret
das
fidivrl
mov
out
mov
gs
dec
jno
mov
repnz
sub
stos
and
lds
pop
add
dec
fwait
add
fimull
ss
fldcw
ljmp
or
dec
shlb
jecxz
or
push
xchg
jg
insl
add
xchg
sub
pop
sahf
data16
out
pop
and
lods
repnz
mov
lods
jg
or
mov
sbb
je
orl
test
cmp
jbe
dec
loop
leave
sub
in
in
inc
adc
or
sti
xchg
push
sbb
and
pop
into
mov
pop
add
xor
mov
in
aad
js
sbb
test
aas
push
ljmp
jmp
mov
sbb
test
sub
xorb
add
xchg
cltd
xchg
loop
popf
test
cld
and
inc
sbb
dec
inc
mov
lcall
les
pop
sbb
pusha
jne
lcall
jg
dec
pop
cmp
les
out
aam
mov
adc
mov
cmp
cmp
push
mov
lock
cld
subb
or
xor
aas
outsb
jg
xchg
mov
arpl
lcall
aaa
aad
call
mov
ret
dec
xor
pushf
jns
jne
mov
movsb
adc
jg
push
cmp
xor
mov
xchg
imul
bound
pop
jne
mov
mov
mov
xor
stc
push
mov
push
shlb
mov
mov
pop
sbb
stos
dec
jmp
mov
jg
repnz
lods
sbb
and
jecxz
push
mov
es
pushl
adc
sbb
dec
test
test
inc
cwtl
nop
mov
dec
jmp
call
mov
test
negl
inc
in
mov
add
cmpsb
mov
sbb
push
inc
sub
push
mov
imulb
xchg
dec
mov
sahf
daa
aas
xor
das
loop
lods
xchg
adc
mov
push
mov
adc
scas
pop
push
ror
fdivrp
hlt
add
mov
les
leave
push
add
rcrb
movsb
aas
jecxz
aad
pushf
ja
jecxz
lds
negl
pop
inc
addb
mov
and
inc
frstor
dec
aad
loop
sahf
enter
enter
or
loope
pushl
cwtl
rcr
sbb
add
aad
push
int3
dec
popf
xchg
mov
jg
inc
loopne
mov
je
roll
cli
sub
mov
push
mov
nop
rolb
sbb
push
mov
rorb
jl
cmpsb
out
mov
in
je
ficomps
stos
jnp
fcmove
push
lret
push
out
les
sbb
mov
scas
push
sbb
in
inc
fs
bswap
mov
cmpl
pop
pusha
pop
or
or
shlb
aas
xchg
ret
mov
push
popf
push
fisubrl
pop
pop
inc
int
pop
loop
movsb
fcmovb
out
lcall
cmp
lds
fwait
pusha
xor
movsb
or
cli
hlt
cmp
sbb
aas
add
mov
mov
sub
das
adc
fmuls
testl
sbb
negl
iret
lcall
scas
sbb
add
adcl
and
pop
shrd
pop
jbe
inc
pop
loop
stc
dec
mov
ljmp
les
dec
aad
js
pop
clc
cmp
pop
cmpsb
ss
shr
loope
mov
dec
and
outsl
dec
lods
mov
out
daa
cltd
fdivl
and
stc
nop
mov
aam
sub
mov
out
scas
cld
mov
sbb
mov
in
in
jo
inc
mov
jg
inc
cltd
cmp
xchg
inc
aad
inc
mov
and
or
mov
or
nop
adc
jl
and
jmp
out
ficomps
xor
mov
jl
out
adc
outsl
mov
lods
icebp
insb
push
mov
mov
and
jg
push
icebp
movsb
repnz
dec
test
adc
faddl
loope
lods
push
dec
outsb
jns
scas
cli
xor
jns
arpl
gs
sbb
and
and
loopne
or
aad
sbb
jle
push
jne
aam
in
in
lcall
mov
jmp
pop
xchg
push
push
orb
repz
outsl
cli
out
pop
lret
cs
jns
inc
lret
ror
test
popa
mov
mov
jmp
aas
stc
mov
test
inc
pop
xchg
adc
fstpl
push
pop
cltd
lds
mov
lret
adc
int3
push
mov
sub
mov
xchg
loop
pop
dec
scas
xor
stos
nop
in
test
hlt
fisubrl
cmp
sub
jl
je
push
mov
aas
pop
popa
ja
lods
std
subl
inc
outsb
add
dec
xor
rep
and
inc
jmp
js
adc
dec
and
inc
in
jl
out
call
rcll
popa
jge
sbb
dec
cmp
imul
sub
aaa
arpl
addr16
jg
adc
ja
dec
shll
repnz
mov
xchg
inc
sbbl
lea
negb
test
jge
mov
cmp
jge
insb
or
ds
mov
rcll
or
jmp
cmc
mov
lods
movsl
xchg
pop
pushf
adc
pop
in
fsubl
pop
xor
xchg
fwait
push
sbbb
and
xorl
jmp
adc
test
sub
inc
pop
test
insb
jbe
adc
mov
lea
sub
mov
aaa
mov
dec
sbb
pop
shll
cmp
mov
leave
jae
and
add
dec
xchg
daa
xchg
or
fnsave
scas
cltd
aam
add
jg
mov
lcall
jns
mov
and
pop
scas
imul
sub
mov
pop
loope
xor
orb
inc
popf
data16
push
xor
mov
add
out
gs
mov
pop
jp
sbb
add
testb
orl
or
cmpb
pushf
xchg
aas
xor
fwait
inc
lods
insb
sahf
out
cmp
into
es
mov
stc
jns
pop
mov
xchg
out
lret
aam
sub
imul
jae
or
outsl
inc
lock
jne
push
movsl
jb
xchg
xchg
push
rcl
adcb
xchg
fimull
pop
aas
daa
je
lock
es
int3
das
cwtl
mov
rcl
mov
fwait
pop
mov
dec
and
imul
pop
fimuls
adc
pusha
out
test
sbb
scas
cmp
inc
dec
adc
dec
jge
inc
roll
adc
aas
ret
add
mov
sub
lock
outsl
mov
and
in
cwtl
xchg
jno
std
mov
cs
fimuls
mov
mov
incl
pop
push
in
movsb
loope
mov
mov
fwait
cwtl
repz
sar
sbb
mov
mov
mov
fdivp
out
add
out
push
cmp
lea
sahf
dec
add
mov
orl
mov
lods
jbe
outsl
add
insl
data16
cmp
cmp
movsb
xchg
mov
sub
popf
inc
mov
xor
or
xchg
repnz
aaa
or
ror
addl
out
fisubs
idivb
pop
mov
cltd
daa
std
lock
or
inc
jbe
movsl
xorl
addr16
mov
lcall
xchg
jbe
je
mov
push
xlat
or
es
dec
and
push
adc
inc
in
mov
lret
pop
sub
cmp
xor
mov
out
adc
cmp
mov
das
mov
je
es
mov
leave
inc
mov
adc
push
push
sub
jbe
xor
and
cmp
arpl
mov
std
vpacksswb
pop
fdivs
mov
dec
inc
sub
push
clc
cltd
add
jmp
inc
arpl
inc
or
sub
xor
cmpsl
sbb
jne
push
pop
repz
cmp
test
push
fwait
rcll
xchg
pop
sub
jno
pop
cmpsb
mov
add
xchg
mov
inc
inc
fdivrl
fnsave
inc
and
test
xor
aaa
mov
cmp
mov
sti
pusha
fiadds
js
loop
jle
xchg
sete
pop
or
add
daa
lret
repnz
xchg
jns
ret
test
xlat
leave
pop
jmp
insb
lods
mov
push
shl
repnz
ss
dec
pop
lret
mov
adc
inc
mov
mov
sti
out
adc
pop
or
sbb
fsts
mov
stc
cmp
sub
out
out
sbb
inc
adc
and
mov
pop
aas
pop
test
enter
insl
je
xchg
dec
mov
sbb
mov
stos
push
in
je
repz
dec
repz
adcb
jg
fwait
pop
jbe
cmp
divl
mov
out
je
in
pop
and
orl
cld
daa
pop
lret
xor
sbb
and
add
ja
jg
enter
dec
mov
sbb
fs
cltd
scas
fwait
sti
adc
push
sbb
cmp
cld
mov
arpl
sbb
push
sbb
in
aaa
inc
dec
pop
pop
mov
jmp
mov
loope
xlat
mov
fldenv
inc
rolb
bound
gs
dec
out
dec
insb
jl
ds
push
fiaddl
adc
shrl
push
and
add
cmpsl
lcall
iret
push
mov
dec
cmpb
stos
in
mov
xchg
out
or
mov
xor
or
aad
add
lods
orb
mov
pop
jae
mov
mov
add
push
or
push
dec
adc
shr
fsubrs
adc
dec
out
jnp
fsubrl
pushf
mov
out
sahf
mov
out
andl
inc
mov
sbb
xchg
repnz
packuswb
lret
arpl
add
push
cwtl
stos
sarb
les
mov
insb
andb
xchg
sti
add
xchg
ret
nop
cvtpi2ps
mov
jnp
aas
addb
hlt
jecxz
add
lcall
pop
mov
aas
add
inc
ljmp
or
sahf
leave
imul
xchg
testl
pop
mov
mov
cmp
ret
or
or
enter
sub
andl
rorl
adc
test
ljmp
rcrl
fidivl
es
stc
cmc
lock
and
es
adc
dec
xchg
cmp
add
jae
loopne
adc
fst
cmp
dec
sub
inc
ret
cmp
push
iret
adcb
inc
jg
adc
adc
stos
popa
nop
adc
fwait
std
pop
sub
mov
inc
loop
xchg
loopne
push
cmp
mov
xchg
cmc
xchg
imul
cmp
xor
push
pop
inc
mov
pop
xor
cmp
popa
and
icebp
in
fcmove
dec
std
addr16
push
mov
xchg
lret
push
xlat
pop
xor
arpl
adc
mov
icebp
jle
adc
xor
loop
xor
mov
fisubs
in
mov
loop
dec
jo
stos
cwtl
adc
jp
xor
scas
insl
fimull
xchg
addr16
push
into
push
mov
cmpsb
aaa
sbb
scas
inc
xchg
roll
lods
inc
bound
test
push
mov
mov
dec
mov
aam
push
push
int
cmpsb
cmpsl
adc
cmpsb
ficoms
cs
jge
in
scas
mov
mov
xor
hlt
ror
sub
insl
jno
packssdw
shlb
sarl
out
mov
roll
out
push
pop
cs
jb
lock
push
popf
mov
aad
xchg
stos
pop
cmp
adc
sti
std
sub
push
xchg
mov
mov
dec
rcrl
clc
add
fisttpll
lret
sub
mov
stos
jmp
mov
inc
fsubr
sub
movsb
mov
jle
ja
inc
es
daa
int
sub
test
pop
adc
out
mov
dec
or
imul
popa
inc
xor
out
pushf
icebp
lret
scas
sbb
adc
dec
fwait
dec
sbb
int3
loope
stos
ret
mov
pop
rcrb
xchg
mov
jb
xchg
push
cmp
jge
push
mov
bound
outsl
dec
jae
inc
adc
mov
jp
cmp
pop
push
push
add
insl
jbe
pop
pushl
out
mov
xchg
sbb
lea
sbb
stc
fistpll
int
getsec
repnz
lock
jg
mov
add
out
in
je
nop
mov
mov
xor
push
add
xor
inc
outsb
mov
sti
adc
add
push
xor
dec
sbb
out
or
xchg
xor
mov
mov
fstl
jg
mov
cmpl
lcall
or
imul
imul
xchg
out
out
sbb
movsl
jae
pop
divb
test
sbb
adc
jns
pop
ret
jge
mov
adc
mov
repz
shlb
imul
fdivs
adc
or
push
scas
xchg
xchg
push
and
lahf
mov
cmp
leave
repnz
pop
push
mov
or
repz
ja
mov
stc
sub
addl
icebp
jp
filds
mov
mov
mov
jne
sti
inc
push
cmp
sub
mov
mov
loop
pop
sbb
fiadds
shll
in
inc
loope
jg
fpatan
fdivl
stos
inc
addl
cltd
adc
fiadds
pop
fsub
roll
push
inc
cli
and
sti
scas
xchg
jns
js
fmul
in
sub
mov
xchg
xchg
mov
jl
fs
fs
adc
out
dec
xor
and
call
push
mov
xor
jg
mov
xor
les
push
pop
dec
loop
and
sbb
inc
pop
inc
dec
subl
leave
jbe
or
add
hlt
or
or
mov
mov
sbb
icebp
dec
jecxz
movsl
push
inc
cs
sbb
inc
stos
bound
fstps
lods
mov
xor
fld
xor
das
inc
or
adc
jmp
popf
cmpsb
and
cli
stos
repz
fcomp
or
ds
cli
int3
sbb
sahf
lcall
out
xor
xchg
jb
cmpsl
mov
cwtl
test
cli
loope
sbb
into
clc
mov
push
daa
push
std
in
mov
test
dec
popl
les
xor
add
lods
mov
lahf
cli
dec
push
jo
popf
inc
loop
mov
sub
dec
sub
inc
pop
xor
pop
int3
xor
pop
mov
xchg
imul
ds
mov
mov
jge
outsl
test
push
jl
movsb
pop
cltd
jno
mov
or
dec
mov
outsl
cltd
sbbl
adc
sbb
dec
xchg
fstp
sub
cmp
clc
fdivl
mov
mov
mov
idivl
inc
mov
lret
and
or
dec
dec
dec
push
pop
not
push
shll
imul
cmp
jnp
pop
loope
pop
xchg
insl
adc
cli
cwtl
nop
push
ljmp
hlt
inc
push
mov
mov
mov
inc
push
movsl
mov
int
fsubrs
aaa
inc
je
xchg
ret
xor
jno
stc
or
xor
int
pop
sub
cmpsb
xchg
push
sbb
test
add
fs
js
sub
lcall
adc
xlat
jb
jae
adc
sbbb
inc
pop
jns
cli
push
ds
ret
and
sub
inc
cld
mov
or
faddl
push
gs
fisttpl
lods
cmp
repnz
popa
inc
in
aam
cmpl
repnz
nop
in
or
dec
int
sbb
repnz
inc
add
jge
insl
inc
mov
hlt
mov
cmp
sbb
std
xor
divl
and
add
sbb
clc
jae
fucomp
push
xor
mov
mov
mov
out
adc
shrb
loop
jb
mov
scas
cmpl
cltd
pop
dec
lods
into
js
add
inc
xor
push
mov
sbb
outsb
sbb
fistpl
rclb
jl
aam
es
mov
jl
jnp
outsl
push
add
imul
jne
jmp
add
jp
mov
and
pop
rcrl
je
pop
xor
mov
add
mov
xchg
pop
popl
xchg
adcb
dec
addr16
xor
push
loopne
popl
pop
push
inc
and
int3
lea
pop
jp
mov
pop
cmpsb
je
jle
divl
call
fimull
jae
lret
mov
add
pop
sub
inc
inc
in
in
or
xchg
cmc
sbb
mov
lock
mov
or
push
adc
mov
or
ret
sub
lock
into
pop
mov
js
xor
cmp
pop
jbe
stos
aas
xchg
push
inc
sbb
movsl
lods
lret
insl
cwtl
mov
sbb
sbb
sti
insl
mov
push
push
repnz
adc
mov
out
add
adc
mov
xchg
cmp
sub
dec
mov
xchg
mov
dec
insb
mov
mov
mov
sbbb
in
mov
in
subl
jg
in
or
xor
ds
iret
mov
lods
xchg
lea
xchg
inc
xor
es
adc
jb
enter
out
xlat
mov
push
push
in
jle
es
hlt
shlb
cld
mov
dec
fcmovnu
mov
add
mov
pop
mov
sbb
push
xchg
cltd
sbb
push
sti
and
xchg
mov
add
add
in
shrl
ret
xor
xor
add
pop
pop
bound
jo
pop
push
cmp
xchg
dec
xchg
xchg
adc
cmp
sbb
dec
aaa
push
mov
push
rolb
fistl
inc
add
cwtl
scas
stos
jle
jbe
imul
add
ret
bound
sub
in
pusha
sub
test
in
push
push
ret
cmp
fiaddl
sbb
movntps
pop
outsl
mov
push
fcoms
cmpsl
insl
in
into
jno
lods
mov
sahf
jmp
mov
push
pop
imul
lahf
fwait
out
mov
jne
or
fnsave
lock
loopne
pop
inc
dec
dec
int
jae
mov
out
aas
jnp
stos
lahf
mov
xor
fsubrs
out
xor
mov
add
scas
add
stos
test
add
or
adc
xor
pop
faddp
lods
mov
mov
and
inc
stos
ljmp
cmp
pop
dec
or
lock
iret
add
xor
dec
adc
mov
inc
leave
jb
es
test
adc
call
outsb
push
int3
daa
mov
cltd
xchg
cmpsb
insb
adc
add
sbb
out
jp,pn
pop
mov
push
jb
notb
cli
aas
mov
mov
rcl
fmull
and
pop
cltd
insb
scas
jle
cmpsb
scas
dec
mov
popf
js
jg
out
in
push
cmc
push
clc
sub
aaa
lock
popf
pop
mov
dec
lea
daa
adc
inc
incl
push
mov
push
lea
shr
mov
inc
out
or
mov
data16
cmp
sarl
stc
cmpsl
scas
pop
jecxz
loopne
and
dec
mov
adc
mov
movsb
mov
push
iret
dec
lahf
cmp
jmp
adc
jne
in
lcall
popf
not
ljmp
mov
into
or
or
inc
mov
or
add
dec
and
test
cmpsl
inc
lret
add
push
lcall
pop
dec
gs
out
loope
pop
push
lret
hlt
pop
aad
mov
cli
movsl
mov
mov
addr16
lret
dec
jecxz
repnz
popa
jmp
jmp
push
sti
pop
pop
xorl
cmp
or
dec
mov
pop
mov
fidivrl
sub
dec
les
cmc
jae
insl
pop
sahf
movsl
lds
cmp
movsb
sbb
and
jae
les
adc
mov
in
das
pop
cs
cmpsb
loopne
cltd
dec
ret
repz
mov
out
push
dec
stos
dec
fs
push
outsb
test
in
fucomi
and
lods
lret
mov
scas
pop
mov
loopne
stc
jbe
test
mov
pushf
insb
into
adc
aas
lret
rcr
loopne
fldt
cmpb
push
jno
lahf
je
jne
cmp
xor
add
push
ror
pop
into
jb
mov
popf
out
add
fisubl
push
mov
insb
icebp
mov
mov
push
adcl
jbe
mov
fmuls
push
je
mov
xchg
jns
into
mov
fmuls
test
clc
bound
fldcw
data16
repnz
xchg
inc
icebp
xor
adc
push
inc
out
enter
push
and
mov
dec
xchg
repnz
sub
or
add
pop
mov
ret
test
popf
sahf
gs
and
or
pusha
mov
xchg
arpl
js
stos
aaa
lds
fldpi
jg
aaa
mov
jo
xor
insb
push
fisubrl
push
or
pop
je
insl
inc
jb
push
jnp
int
mov
scas
aas
aad
orb
xchg
loopne
and
add
jo
nop
add
in
adc
cltd
andl
jb
cmpsb
call
pop
mov
sbb
sbb
pop
dec
ljmp
call
mov
in
xor
push
out
imul
inc
mov
cmp
xchg
pop
pop
jnp
xchg
ds
xor
and
and
popa
mov
cwtl
adc
rolb
and
sbb
in
les
outsb
fadds
into
cmp
imul
imul
nop
scas
inc
xchg
cmp
jns
adc
pop
cltd
repz
divb
adc
cmpsl
mov
or
movsb
rclb
sbb
mov
addr16
lock
xchg
xor
push
lea
mov
lcall
fnstsw
sub
push
dec
pop
ret
push
mov
xchg
xchg
cmp
cmpsl
cmovns
xchg
lds
add
pop
cmp
mov
push
mov
test
cli
cs
jb
sub
jecxz
mov
mov
in
cmp
insl
shll
adc
movsl
pop
dec
clc
in
addr16
xchg
fs
fwait
sbb
stos
dec
nop
cmp
jle
mov
xchg
add
aam
sbb
push
jmp
out
adc
pusha
subb
sbb
js
aad
out
push
xchg
out
push
adc
jle
test
data16
lret
hlt
lods
cld
bswap
adc
adc
pmaddwd
inc
aaa
lcall
out
jno
pusha
add
adc
cwtl
sbb
lret
mov
cmp
shll
xchg
adc
add
scas
fisubs
xorl
pop
fs
or
or
sub
rsqrtps
cmp
xchg
dec
popa
int3
sahf
xlat
out
inc
xchg
ja
jecxz
insb
shl
aad
je
aas
shll
cld
shrb
idivl
push
jae
xor
cmp
jg
xor
xor
cltd
and
or
outsb
mov
test
scas
out
push
call
lahf
mov
mov
mov
push
stc
out
int
idivb
fsubs
test
sub
loopne
inc
jp
dec
lods
lret
inc
stc
fadd
inc
lret
fsub
inc
push
xor
pop
aad
and
neg
or
fcmovne
xor
mov
sbb
xchg
shll
sub
cmp
xor
roll
pop
xchg
loopne
jae
cmp
fdivrl
jg
pop
mov
push
lods
cmp
shrl
loop
aaa
dec
outsb
notb
push
pop
fnstcw
fwait
jno
cwtl
stos
inc
inc
imul
pop
stc
cld
sub
and
loope
out
icebp
jmp
aaa
idivb
ret
mov
out
dec
sbbl
jl
inc
fs
cmp
mov
test
cli
lahf
jl
mov
std
mov
test
cltd
sbb
or
push
xlat
imul
ret
hlt
lcall
jbe
push
cmp
xchg
cmpsb
pop
test
and
dec
push
adc
mov
adc
pusha
clc
movsb
add
push
jmp
add
or
subb
imul
test
xor
or
out
js
and
cmp
out
pop
in
test
aad
and
mov
jnp
cmp
push
daa
xchg
and
fxch
push
push
roll
mov
push
test
cltd
ljmp
cli
cmc
push
lcall
lcall
or
push
push
inc
mov
int
mov
test
mov
in
adc
or
dec
imul
or
and
enter
push
or
inc
int3
cmc
movl
inc
in
push
cmpsl
mov
sbb
and
sub
cwtl
lea
sti
and
mov
insl
clc
fwait
xor
lcall
adc
lret
jae
leave
sub
aas
aas
push
and
inc
inc
mov
ret
adc
add
lea
xchg
scas
out
or
cmp
push
hlt
xor
lar
shlb
aas
inc
lahf
cli
mov
jo
inc
xchg
cld
in
pop
fisubrs
push
inc
push
or
sub
jge,pt
dec
in
cmp
dec
jo
shl
movsb
data16
imul
pop
ljmp
add
test
stos
and
loopne
mov
cmpl
mov
add
aad
jecxz
dec
mov
arpl
in
pop
adc
push
lds
scas
pop
mov
cmp
dec
mov
push
push
cwtl
or
enter
xchg
in
xchg
mov
mov
gs
sub
add
inc
dec
mov
sub
or
dec
ror
inc
mov
add
jbe
or
mov
jne
xchg
jmp
sbb
add
sti
dec
bound
push
lret
popa
scas
sub
pop
lds
lea
add
jbe
push
fisubl
pushf
loopne
inc
ret
jge
pop
cmp
addr16
jo
sbb
ss
dec
cmpsb
movsb
sbb
rorb
lods
mov
ja
xor
loop
jb
pop
movsl
int3
stos
mov
mov
dec
fcoms
popf
out
mov
outsb
sub
dec
shrb
addr16
mov
xchg
pop
pop
lds
outsb
sahf
xchg
out
mov
sub
dec
pop
xor
lcall
xor
jne
nop
mov
jmp
pop
clc
pop
or
sub
xlat
push
lods
int3
dec
xor
dec
lea
jl
mov
adc
sub
cld
xchg
dec
sbb
rclb
cmp
call
aad
adc
aaa
pop
cmp
jbe
lahf
movsb
xchg
loopne
sub
repz
push
add
mov
scas
movl
jb
in
inc
jg
ss
pop
sub
sub
rorl
int
xchg
cld
imul
rcrb
adc
stos
insl
xchg
cmpsb
iret
mov
aas
and
out
scas
mov
cwtl
xor
je
cmpsb
sarl
ds
neg
out
stos
ljmp
test
mov
inc
pop
pop
int3
div
mov
bnd
jns
outsb
out
jns
jno
sbb
movb
xor
pushf
add
mov
pop
pop
xorb
pop
test
sub
lcall
jns
xor
gs
pop
mov
cmp
stos
imul
pop
cwtl
inc
daa
adc
ja
xchg
lret
aas
iret
xor
adc
xchg
pop
in
mov
test
xor
flds
das
movsb
loop
js
ret
push
push
adc
call
pop
cltd
repnz
sub
sahf
sarl
mov
xchg
out
inc
cmp
adc
les
mov
pop
sarb
and
nop
jl
les
or
mov
popf
cmc
and
mov
and
xchg
stos
jmp
and
cmpsb
pushf
pop
fildll
jbe
test
mov
dec
adc
icebp
je
sbb
cmp
and
mov
je
dec
stos
negl
out
lods
sub
stos
fistpl
sbb
and
test
iret
jbe
in
xor
subb
push
pop
push
int3
sub
dec
or
cwtl
jmp
sbb
mov
adc
insl
js
js
adc
fs
ret
sub
ljmp
pushf
sbbl
push
ds
rorb
mov
push
adc
testb
mov
jnp
ljmp
fisubs
cmp
cli
mov
ret
mov
int3
jnp
adc
fwait
pop
push
sbb
cld
dec
mov
inc
dec
jl
sub
mov
cltd
loope
sbb
pop
sbb
push
aaa
push
inc
pop
mov
into
stos
jno
divl
incl
sbb
iret
pop
mov
aaa
test
xchg
pop
outsb
jl
pop
xor
and
mov
xchg
mov
mov
mov
pushf
jnp
push
xlat
sbb
sarb
push
jo
sub
jb
jl
jmp
cmp
pop
stos
mov
je
dec
arpl
stc
lds
adc
js
mov
rcll
mov
mov
repnz
cltd
mov
mov
jmp
jle
mov
gs
faddp
jge
loope
push
inc
mov
xor
cmp
test
mov
xchg
pop
jne
lahf
cmpsl
ret
out
and
xchg
pop
add
pusha
fsubrl
or
out
pushf
iret
and
insl
sbb
fisubl
mov
pop
imul
aas
push
jg
mov
and
jnp
lods
repz
daa
test
cli
scas
push
shrl
push
jbe
jne
jl
sbb
push
into
mov
hlt
ret
dec
out
mov
pop
jns
cmpl
fs
js
scas
add
mov
test
jns
and
lahf
addr16
dec
repz
orl
in
pop
addr16
lahf
ja
dec
xchg
xchg
cmp
pop
add
and
cmp
mov
test
les
data16
outsl
icebp
fistps
mov
je
sub
cmpsl
adc
jp
out
leave
jecxz
sbb
gs
lods
loope
cmp
and
mov
add
jno
mov
and
shll
jle
and
mov
enter
inc
movsb
push
movsl
ja
mov
mov
mov
xchg
sti
sbb
mov
mov
mov
lcall
in
pop
mov
sbb
and
pop
movsl
adc
sbb
sub
das
cmp
cmp
ljmp
mov
lret
adc
js
cli
xor
outsb
adc
mov
pop
mov
icebp
sub
movsb
lret
jno
lods
inc
adc
addr16
lret
pusha
insb
lret
ja
cmc
arpl
lahf
inc
loop
subb
jo
pop
movsl
jmp
sti
orl
call
nop
jecxz
in
push
sub
mov
cmp
sbb
lret
jnp
dec
xchg
hlt
cwtl
sti
outsl
aas
dec
xor
and
cmp
sub
aas
lcall
cmp
inc
hlt
dec
xchg
push
lea
sub
adc
adc
addr16
cmp
testb
out
ficoml
mov
lods
cmp
arpl
sub
fdivr
test
aaa
scas
mov
arpl
mov
xchg
or
jb
sahf
push
addr16
or
jle
sub
jae
pop
sub
mov
jp
xor
movl
arpl
icebp
sbb
outsb
push
xchg
gs
xchg
cmp
into
xor
not
sbb
idiv
mov
rcrb
sbb
das
sbb
add
cltd
outsl
xor
adcl
iret
and
sbb
ja
xchg
andl
das
fildl
stc
enter
dec
jl
dec
jmp
loope
add
sbb
mov
scas
ss
lea
sub
adcl
push
stos
push
sub
jne
cwtl
mov
add
inc
cmp
cld
inc
ss
jo
mov
adc
sbb
ss
fimull
mov
mov
jl
dec
push
sbb
insb
pop
jne
jnp
in
xor
ret
jmp
mov
adc
stos
inc
pop
out
inc
jge
fldl
and
xor
icebp
sub
aad
cmp
lret
rcrb
std
shlb
rolb
leave
mov
into
sbb
shrl
imull
outsl
movsl
jb
es
movsl
jle
xor
test
fs
arpl
inc
stc
xor
lea
repz
mov
daa
xor
cld
mov
xor
lods
push
bound
sub
lret
cmp
xchg
mov
iret
or
pop
jno
mov
repnz
imul
cmp
add
mov
cmp
and
ret
jle
into
add
pusha
dec
jge
dec
mov
orb
xchg
inc
cmp
jg
mov
adc
pop
je
mov
mov
fdivl
mov
testl
cmc
dec
mov
cmp
mov
xchg
lock
ret
or
or
mov
lods
inc
push
dec
aas
mov
fistpl
push
sarb
fidivrs
ss
dec
sub
repnz
mov
push
and
pusha
sub
mov
jo
fidivs
fisubrl
or
shll
push
inc
add
rol
ret
cmpsl
xor
jmp
mov
and
cmp
jecxz
or
cld
adc
daa
sub
push
rcrl
sub
xor
jp
jl
iret
subl
lea
adc
daa
mov
push
jmp
lods
test
mov
dec
pop
lahf
pushf
xchg
mov
add
dec
lods
es
in
pop
mov
add
test
fnstsw
cwtl
mov
jbe
and
ret
push
mov
in
push
or
mov
ss
lds
push
inc
and
mov
bound
mov
repnz
sub
push
mov
andb
sub
dec
scas
cmp
xchg
fidivs
inc
stos
xchg
adc
jg
and
inc
roll
jl
gs
fcomp
out
scas
pop
decb
imul
int3
xchg
inc
outsl
xchg
test
xchg
rcll
into
out
jnp
and
imul
subl
leave
js
jg
push
jne
mov
jns
repnz
xor
add
in
inc
pusha
jns
fcmovnu
subl
inc
scas
pusha
lods
mov
fcoml
lods
js,pt
cmp
push
bound
leave
jo
pop
xchg
mov
sub
cltd
and
push
int
sbb
movl
mov
subb
loop
cwtl
cmp
xchg
and
fs
xchg
shlb
das
cmpsl
cmpsl
pushf
adc
aaa
adc
mov
add
in
inc
addr16
mov
mov
sub
jg
rolb
test
mov
pop
ja
xlat
in
adc
or
push
addb
sub
outsb
cmp
mov
lahf
lcall
add
adc
push
pop
leave
and
cs
add
outsb
jl
mov
dec
outsb
in
aam
cmpsb
das
mov
jnp
icebp
popf
es
jge
inc
or
cmc
scas
sahf
mov
fbstp
test
push
lret
testl
call
cmp
mov
sub
pop
stos
add
loope
stos
dec
test
js
xor
orb
or
push
pop
jo
adc
fs
rcrb
cmp
jp
sbb
inc
adc
xor
jl
ret
xchg
gs
mov
sbb
jne
add
adc
imul
push
jae
or
push
cwtl
xchg
repnz
pop
addr16
or
pop
std
pop
inc
adc
jmp
lods
mov
mov
cmp
cmp
jl
addr16
aam
inc
mov
cmp
out
mov
push
lds
push
add
adc
dec
in
mov
xchg
imul
inc
push
add
xchg
xchg
or
dec
xor
sub
dec
mov
das
mov
cmp
push
insl
mov
pop
pop
push
xchg
test
repz
nop
insb
leave
jp
daa
dec
jecxz
pusha
pop
sub
out
cli
sti
dec
fldt
xchg
mov
loopne
add
mov
adc
loopne
ss
mov
lret
adc
mov
and
popf
cmp
sbb
and
jg
shl
and
clc
or
pusha
imul
ficompl
xlat
push
push
orl
sub
or
ja
adc
inc
pop
add
or
xchg
sub
push
mov
fldt
das
clc
mov
mov
addl
mov
add
sub
jnp
xchg
insb
repz
push
ret
lock
mov
push
jg,pn
xor
mov
fidivrs
jl
dec
mov
aam
aas
test
subl
test
and
add
int3
in
fsubs
push
mov
hlt
xlat
push
leave
xorl
clc
sahf
int
test
enter
or
xor
dec
inc
xor
lahf
mov
pop
pushf
xchg
adc
fldt
scas
adc
pop
inc
cmp
or
push
add
fisttpl
popa
sahf
sub
dec
adcb
movsb
fwait
test
push
das
inc
lahf
pop
cmp
ljmp
cmpsb
mov
outsb
stc
jp
inc
add
enter
pop
aad
adc
ret
stos
cmp
add
sub
sub
pop
mov
pop
xorb
mov
mov
add
shll
in
jle
mov
lret
out
xor
cmpb
pop
xor
iret
pop
cmp
pop
xchg
in
cmpsl
inc
mov
pop
aas
sti
cmp
push
lock
mov
repz
or
inc
mov
addb
cmpsl
xor
push
rolb
bound
inc
lds
sar
jecxz
les
frstor
rcll
lods
movsl
push
fistpll
dec
pop
xor
jne
inc
push
fidivs
add
and
or
data16
cs
mov
movsb
pop
into
daa
dec
dec
mov
shrl
stc
or
xor
mov
xchg
xlat
in
lret
inc
insb
inc
es
cs
xchg
or
sub
xor
push
aas
imul
mov
xor
sub
add
loope
jge
out
dec
dec
dec
mov
adc
mov
addr16
incb
fidivs
repz
inc
add
inc
mov
in
or
push
adc
sbb
and
xor
mov
test
lcall
mov
push
jmp
outsl
sbb
dec
dec
mov
mov
mov
jecxz
xchg
ficoms
nopl
push
xchg
pop
sahf
lods
add
cmp
pop
push
add
cld
mov
das
jo
mov
outsb
std
and
add
push
pop
int3
adc
test
push
dec
gs
ret
jnp
and
xor
sbb
xor
jns
int3
cmp
roll
push
stos
iret
dec
mov
pop
stos
test
xchg
lods
xchg
and
outsb
stc
or
testl
xlat
pop
cltd
mov
roll
pop
adc
fisubrl
or
sbb
sbb
fisttpl
or
je
adc
cltd
das
in
mov
inc
ja
sbb
push
xchg
xorl
lea
xchg
push
mov
nop
je
sbb
test
loop
pop
ds
mov
les
mov
into
icebp
pop
push
xchg
cmpsl
fisttpl
mov
fndisi(8087
mov
in
jp
cmpsb
mov
lahf
jne
lds
inc
ficoml
es
pop
testl
insb
in
or
lret
mov
cmp
in
mov
add
shrl
pushf
cmp
jns
dec
jo
fnstenv
sub
ret
sahf
ja
mov
in
jns
dec
sahf
push
mov
mov
xor
mul
stc
outsb
mulb
jmp
ljmp
in
in
xor
adc
cmp
inc
dec
mov
ss
rcll
imul
mov
int3
fwait
dec
mov
inc
mov
mov
and
jns
cmp
jbe
jp
sub
jg
out
push
pop
gs
lcall
loope
imul
lret
lret
iret
add
xor
stos
fdivr
lea
imul
add
inc
ficoml
gs
lahf
xor
mov
lock
and
rorb
pop
xchg
xchg
adc
test
aam
adc
rcll
or
or
mov
xor
pop
invlpg
scas
mov
xor
jl
int
in
and
divb
out
and
fs
scas
dec
add
or
pop
xor
pop
sub
pop
mov
mov
mov
stos
xor
int
movsb
cmc
lods
and
push
popa
scas
flds
push
jg
sub
icebp
mov
pop
sahf
sti
jle
mov
and
dec
jne
push
mov
aad
insb
dec
sbb
jge
aaa
bound
shlb
sbb
xorb
insb
out
scas
add
adc
pop
cmp
mov
hlt
xchg
testl
sub
das
pushl
mov
pop
and
ja
adc
call
xlat
mov
mov
add
scas
cmp
mov
jns
scas
and
mov
dec
pop
test
repz
sahf
psrad
jle
jo
inc
dec
pop
jmp
add
add
add
popa
mov
mov
jge
push
lret
xchg
jle
adc
push
mov
jmp
mov
outsb
pop
je
pop
sarb
xchg
inc
or
cmc
lods
add
call
movsl
mov
repnz
not
inc
pop
movsl
das
mov
nop
jecxz
adc
into
scas
int3
pop
xor
nop
lods
or
cmp
cld
xchg
fwait
loop
jg
shrl
std
jnp
mov
fsubrl
cmpsb
out
fwait
mov
in
scas
mov
dec
or
xchg
icebp
jbe
mov
xor
sbb
sub
cwtl
lock
sar
push
in
je
insl
test
out
imul
xor
or
jecxz
gs
in
push
mov
in
jmp
sbb
adc
ret
xchg
add
cmp
push
push
mov
mov
push
lcall
ficomps
adc
pop
or
adc
xor
push
adc
sbb
xchg
fxch
clc
sbb
insl
das
push
xchg
jp
popl
cmc
and
mov
and
loopne
lcall
xchg
mov
fwait
int
lret
mov
mov
vandps
jmp
lahf
xchg
scas
not
mov
push
das
cltd
in
xlat
adc
cmp
ss
adc
mov
movsb
cmp
int3
ljmp
mov
aad
xlat
xchg
or
sbb
gs
jbe
push
fs
lahf
mov
sbb
adc
ror
fcompl
mov
xor
sbb
dec
inc
and
adc
in
sub
mov
add
andl
push
mull
fsubrs
jae
js
int3
testb
data16
ret
inc
sti
jmp
inc
int
xchg
aas
push
push
testl
pop
cmp
es
cld
pop
cmc
and
pop
xchg
or
ja
popf
jns
loopne
jl
mov
lahf
scas
xor
fucomp
add
dec
lcall
add
into
fwait
push
pusha
andl
out
ret
out
rcrl
mov
ret
and
xchg
and
or
xor
imul
push
mov
enter
pminsw
mov
pop
adc
je
ja
mov
jnp
test
fstpt
inc
or
adc
jp
mov
and
stc
cs
xor
sbbb
ds
xchg
add
mov
dec
insl
push
repz
fwait
mov
cli
and
adc
les
cmp
daa
stos
mov
sub
push
dec
cmpsl
pushf
dec
mov
pop
das
pop
sbb
mov
mov
dec
mov
daa
stos
addl
or
push
inc
cltd
jl
dec
lret
lds
ret
mov
dec
push
dec
insb
std
xchg
in
xchg
iret
mov
rorl
int3
inc
jle
push
sub
mov
pop
sbb
cmc
fldenv
sbbl
dec
pop
inc
negl
fwait
mov
mov
rorl
mov
cmpsl
xor
jmp
mov
sbb
stc
test
imul
jbe
imul
inc
xchg
sbb
js
mov
rcrl
in
jge
jecxz
lods
push
rcrl
mov
xor
and
push
pop
dec
add
pushf
sbb
adc
int3
mov
pushf
mov
js
jp
lret
push
cmp
and
fmuls
aad
test
inc
movsb
ret
jo
pop
inc
xchg
add
fistps
push
jg
mov
cmovns
pop
dec
stos
aaa
cs
out
scas
mov
aaa
popf
mov
scas
sbb
pop
shll
jbe
or
add
subb
push
rcll
scas
outsb
adc
mov
popw
lds
pop
jge
fwait
out
repz
movsb
mov
adc
aas
xchg
jmp
jle
pop
fwait
jmp
jnp
xchg
pop
adc
js
mov
daa
or
sub
test
icebp
push
xchg
aas
mov
jmp
arpl
push
lods
sbb
and
jnp
movsl
test
cmpsl
aas
push
lods
xchg
popf
add
repnz
fsubr
hlt
sbb
add
in
subb
dec
xchg
or
addr16
insl
push
xchg
loop
clc
inc
xchg
out
mov
xor
or
mov
mov
inc
mov
stc
scas
aas
xor
rcrb
mov
mov
pop
mov
xchg
xor
imul
xchg
adc
cmpb
ret
popa
testb
adc
jp
mov
sbb
std
dec
add
fsts
movsb
mov
repnz
lret
cmc
imull
nop
je
push
push
xchg
out
arpl
sarb
jae,pn
jp
push
cli
fdivl
sub
jl
jecxz
insl
adc
jp
dec
dec
rclb
loope
loope
pop
inc
ucomiss
subl
hlt
pusha
ret
negl
mov
pop
sbb
sbb
loop
scas
push
pop
pop
fdivl
inc
cmp
lcall
xchg
int3
mov
sbb
xor
ja
sub
outsl
rol
add
ja
hlt
inc
dec
fwait
cld
scas
mov
testl
rcll
cmp
aad
or
jbe
mov
loope
mov
dec
add
jbe
repnz
imul
or
add
push
add
in
leave
xor
sti
movsb
or
es
shll
mov
sub
add
mov
and
sub
jp
popf
fwait
cmp
into
shll
gs
loope
aas
das
mov
scas
adc
imul
bound
mov
shr
orb
xor
cmp
icebp
jg
sub
sbb
add
stc
dec
popa
dec
ss
bound
shlb
stos
push
push
jle
inc
loopne
pop
outsb
loop
dec
or
pop
mov
pop
mov
jae
add
testb
addb
fwait
dec
lret
loopne
flds
out
xchg
movsb
mov
fistpll
adc
xor
xchg
in
test
mov
mov
ja
test
aam
int3
mov
ss
les
insl
shll
push
add
xor
inc
push
pushf
std
pop
mov
repz
cmpsb
je
mov
scas
mov
pop
scas
xchg
pop
lea
dec
jae
scas
push
mov
out
mov
in
push
xchg
leave
pop
shrb
movsl
pop
sub
icebp
jecxz
jecxz
xor
outsl
popa
jl
sub
mov
pop
cmp
ds
jno
jmp
pop
loope
dec
js
sbb
pop
out
repnz
nop
xor
and
add
fiaddl
xlat
xchg
and
pop
add
jl
xchg
xlat
inc
xchg
lock
jg
outsl
lcall
jge
mov
cmpsb
loope
shlb
push
push
pop
lcall
icebp
sbb
daa
lods
mov
in
pop
repz
xor
inc
sub
adc
jbe
sub
dec
push
jns
dec
mov
inc
xchg
stos
scas
test
pop
aaa
hlt
sbb
adc
fs
fwait
cmp
lods
jg
add
mov
sbb
lea
and
loopne
xchg
dec
pop
pop
ja
dec
fs
je
cmp
iret
mov
fnstcw
sahf
xchg
or
pop
adc
adc
xchg
jae
negb
dec
jp
mov
sbb
popf
aas
dec
testb
jmp
sub
add
xor
out
mov
or
int
sti
fcoms
cmp
inc
mov
sub
testb
int
repz
test
jno
dec
xor
movsb
lock
das
js
inc
pop
out
mov
push
stc
jno
cmpsl
rclb
cmp
in
xchg
sbb
cmp
fdivrl
icebp
nop
lea
lahf
in
inc
leave
popa
mov
xor
cmp
cwtl
in
dec
cmp
lock
sbb
dec
icebp
xchg
int
flds
pop
xor
aaa
dec
lds
insb
add
ret
es
inc
aas
mov
or
cmp
pop
xchg
jns
dec
mov
cmp
rcrl
ds
xchg
aas
jg
data16
test
cwtl
push
cld
xorb
push
jecxz
cmc
sub
jmp
pop
fs
mov
fmulp
adc
adc
jmp
pop
out
hlt
andb
data16
fwait
iret
sbb
pop
inc
in
loop
pop
cmp
mov
xor
pop
lcall
arpl
add
dec
scas
or
jo
outsb
sub
or
mov
popa
jnp
movsb
test
fcomip
arpl
in
pop
xchg
popf
aaa
ret
pop
jg
add
sub
jg
outsl
xchg
dec
add
ja
fcmovnbe
push
mov
adc
or
jns
push
in
and
push
dec
push
jmp
add
aad
push
stos
mov
adc
pop
inc
sub
sarl
pop
mov
jecxz
cmp
mov
addr16
add
sbb
jecxz
sub
daa
sbb
push
xchg
push
xor
push
xor
and
mov
call
je
xchg
xor
mov
mov
popa
or
mov
jecxz
iret
addr16
adcb
clc
shll
push
fyl2xp1
loope
adc
nop
sub
into
push
lea
xlat
sub
cmp
jecxz
jp
pop
out
and
movsb
inc
push
or
int
jp
cs
movsb
push
inc
xchg
sbb
stos
aaa
enter
sbb
dec
adc
xor
test
mov
sub
in
pop
adc
ret
jno
daa
hlt
movsb
jg
xor
cmp
jb
lds
sti
lods
mov
jle
int3
addr16
sbb
cmp
outsb
xor
xchg
out
mov
inc
jecxz
cmpsb
into
mov
daa
rcr
cmp
push
sbb
mov
dec
repz
lock
push
subl
mov
dec
xor
inc
jo
cmp
test
or
pusha
push
push
aad
mov
pop
or
int3
mov
fs
add
mov
pop
cmp
fidivrs
push
bound
insl
cmp
push
sti
in
jbe
ja
arpl
test
mov
or
scas
inc
iret
push
or
and
dec
pop
add
repz
cmp
push
jo
push
pop
push
shll
dec
stos
and
add
insl
hlt
mov
mov
nop
repz
call
inc
lahf
jne
lods
xor
stos
inc
pop
lahf
pop
fcmove
and
inc
ficoms
ljmp
aad
lret
or
mov
xor
addl
lock
out
mov
shlb
insl
mov
bound
icebp
orl
subb
adc
jo
mov
js
gs
lcall
mov
arpl
ss
pop
daa
jg
call
out
push
cs
add
cmp
inc
inc
cmp
add
sbb
adc
push
push
iret
sbb
push
xchg
push
les
jns
les
sbb
sar
test
mov
pop
push
sbb
inc
dec
out
pop
outsl
jg
mov
cld
data16
sub
inc
xchg
sub
jnp
or
add
repnz
push
cmp
decl
sbb
jmp
gs
sub
test
sub
testl
pop
lret
test
jb
movsl
pop
add
imul
xchg
mov
dec
es
add
mov
cmc
bound
xchg
pop
aas
repnz
ljmp
insb
movsl
xor
lods
mov
sub
and
xchg
test
jecxz
pop
ljmp
repz
inc
cmp
jmp
jl
jbe
jae
int3
aam
pop
out
into
and
mov
sarl
clc
insl
dec
aad
mov
lret
imul
lods
dec
in
mov
push
aaa
popa
pop
dec
mov
and
in
xchg
pop
sti
testl
loope
jbe
fs
lcall
das
mov
addl
std
push
fmul
inc
mov
inc
cmp
jne
mov
out
dec
imul
mov
lahf
rorl
xor
movsl
and
xchg
mov
icebp
loope
scas
push
xor
mov
xchg
pushf
mov
cmp
push
dec
dec
lret
stc
pop
fs
add
add
adc
stos
imul
xchg
push
bound
in
dec
or
fbld
scas
jp
sub
mov
ljmp
and
xchg
or
dec
movsl
pushf
sub
xchg
fsub
or
mov
push
call
es
and
jmp
pop
shrb
sti
mov
xor
adc
aas
lds
sbbl
add
data16
xchg
xchg
rorb
inc
and
call
mov
push
and
jmp
dec
mov
in
ds
lahf
dec
add
sub
mov
bound
adc
in
xor
aaa
filds
dec
out
push
xchg
push
jmp
fs
sub
mov
push
push
cmp
xchg
jns
xor
sub
repz
mov
sbb
dec
cmp
icebp
adc
sbb
jecxz
lahf
add
pop
dec
gs
inc
cli
adc
outsl
mov
and
mov
or
xor
pushl
cmpsl
cs
jo
or
or
cmp
lea
jg
pop
addb
xchg
cmp
loopne
inc
dec
das
mov
or
scas
xor
jp
mov
mov
sub
call
mov
out
inc
cmp
ret
pop
rcrl
inc
sbb
gs
cltd
fbstp
je
and
push
int3
cmp
pop
jmp
dec
sub
pushf
bound
dec
roll
xchg
in
or
es
jnp,pt
xchg
and
pusha
push
adc
mov
rcll
filds
addr16
pop
out
insb
shlb
dec
cmp
mov
pop
mov
call
inc
fsubs
enter
int3
mov
insb
xor
sbb
scas
test
stc
icebp
divl
in
cmovne
or
xchg
or
sbb
pop
mov
pop
dec
lods
jp
inc
out
inc
icebp
popf
cs
inc
mov
dec
and
ss
test
mov
pop
mov
jae
cmpsl
jae
inc
add
adc
inc
loop
ja
sbbl
lods
lcall
enter
stos
dec
and
cld
inc
gs
mov
jmp
dec
movsb
popf
in
inc
adc
sti
xlat
xchg
movsl
lods
jns
sahf
dec
arpl
mov
xchg
mov
ja
int3
movsl
stos
and
fwait
loop
inc
adc
xor
les
sbb
xchg
or
cld
jg
lahf
in
cmp
or
aaa
cwtl
adc
push
lods
sti
dec
or
lds
ret
jb
daa
ret
lret
dec
sbb
stc
jp
push
jb
mov
insb
mov
arpl
fwait
repz
jp
inc
int
shrb
inc
cmpb
xlat
pusha
xor
add
sbb
and
mov
pop
mov
pop
imul
or
xchg
iret
cmpsl
pop
lahf
mov
mov
dec
sub
xchg
enter
push
cmpsb
in
cmp
scas
divl
loop
pop
cli
arpl
ficoml
iret
mov
push
mov
cs
jle
mov
int
dec
adc
xchg
mov
aad
inc
rorb
stos
pop
cmpsl
inc
mov
sub
xorl
adc
int3
lret
jne
int3
or
sub
cmp
into
jl,pn
cli
mov
or
jl
cld
add
pop
dec
jae
fwait
adc
or
or
mov
insl
dec
movsl
adcl
xor
in
xor
and
xchg
daa
aam
pop
jae
mov
xchg
test
fists
xor
add
inc
hlt
and
cld
push
cmp
sub
pop
mov
sub
adc
xlat
and
dec
out
xor
and
pusha
sbb
mov
flds
jge
mov
daa
mov
dec
fwait
daa
data16
add
inc
mov
xor
mov
mov
mov
stos
test
push
pop
add
lods
jb
dec
and
loope
int
pop
pop
or
mov
and
cmp
jbe
test
push
leave
cmp
insb
call
cltd
cmpsb
and
in
inc
fisubrl
cmp
pop
bound
xchg
leave
aam
rol
jecxz
popa
repz
mov
jno
ror
jge
movsl
js
cli
sub
xchg
outsl
ret
movsb
cmp
fdivl
lret
sbb
rcr
push
pop
in
lods
xchg
int
push
sbb
pop
jnp
call
pushf
xchg
pushf
push
jge
mov
fucom
fs
mov
inc
out
mov
cmp
mov
popf
sub
inc
jne
scas
inc
loope
sbb
push
mov
fistps
sub
push
pop
sahf
sbb
lods
pop
fimuls
loope
fcompl
hlt
loope
cmpsb
xchg
movhps
inc
push
mov
dec
xorb
mov
mov
popf
add
sbb
adc
xchg
sbb
cmp
shl
insb
loopne
mov
aad
push
fildll
cmp
mov
mov
shlb
icebp
jg
jp
lcall
add
sbbl
inc
dec
mov
enter
pop
mov
mov
out
jo
out
mov
shlb
dec
fistpll
and
mov
ret
insl
mov
test
sbb
xor
outsl
fidivrs
sbbl
mov
mov
mov
and
pop
mov
adc
mov
push
imul
mov
mov
add
mov
sub
push
jecxz
jno
les
sub
mov
js
cwtl
popl
mov
int3
rolb
or
push
or
mov
stos
insl
jno
and
mov
xor
stos
jae
cmp
xchg
xchg
pushf
xor
push
pop
ret
insl
out
cmpsl
cmp
inc
jne
aam
mov
pusha
add
sub
dec
or
and
adc
mov
inc
pop
xchg
int
scas
inc
push
and
hlt
adc
dec
cmp
mov
push
xchg
mov
fsts
shlb
inc
mov
jbe
mov
sahf
mov
push
scas
pop
test
push
jb
std
repz
push
fs
pop
bound
add
fisubl
nop
or
repz
or
lods
mov
fwait
jmp
fs
sub
inc
jmp
stos
mulb
fidivrl
mov
jbe
sbb
push
cmpsb
adc
gs
scas
add
int3
and
push
frstpm(287
mov
cmpsb
add
mov
pop
les
mov
add
loopne
lcall
jmp
jl
mov
mov
lret
ljmp
or
aam
aad
mov
imul
divl
enter
adc
adc
mov
adc
repz
adc
pop
pop
xchg
inc
sub
arpl
xchg
stos
mov
xchg
sub
lcall
add
inc
aam
jle
out
adc
jno
out
xor
je
inc
or
jmp
mov
jae
add
xor
je
daa
scas
stos
daa
xor
in
xchg
dec
vcvttpd2uqq
sbb
add
dec
mov
sub
sbb
dec
pop
xchg
popf
mov
sub
xor
cmp
jbe
outsl
js
out
dec
les
clc
fs
movsb
add
add
out
lea
sbb
sub
push
dec
sbb
lods
fmull
xor
cs
mov
jae
dec
arpl
sbb
lcall
and
jge
insl
sbb
fistps
cmp
sbb
imull
out
sbb
imul
sub
in
jb
out
xor
adc
lahf
jae
inc
dec
outsl
daa
jae
xchg
test
or
je
js
pop
lahf
paddw
add
insb
mov
and
mov
mov
adc
xorb
mov
sbb
push
push
es
subl
lcall
mov
lahf
int3
mov
lcall
push
mov
add
push
push
mov
cli
out
or
and
bts
jb
shlb
test
sbb
lds
add
sub
test
ds
addr16
jne
fimull
push
pop
mov
xor
ret
mov
shl
data16
insb
pop
nop
mov
inc
dec
dec
jecxz
push
mov
aaa
jge
push
pop
lock
jge
loope
xchg
sbb
test
sub
xlat
cmp
lret
bound
sub
jl
mov
pop
pop
and
inc
mov
sbb
in
mov
je
fcomps
cmc
jns
push
into
push
aad
jae
div
or
movsl
in
push
into
jmp
add
cmpsl
stos
push
jg
push
xchg
fimuls
aad
adc
sub
dec
sbb
mov
or
ljmp
inc
sbb
push
rorb
sub
loope
test
lcall
stc
add
ret
lods
adc
jmp
adc
stos
fdivrl
cmp
xchg
push
dec
xchg
shll
cmpsb
mov
push
sbb
unpckhps
les
sub
enter
jecxz
leave
xchg
cmpsl
dec
mov
repnz
popf
mov
insl
push
mov
fnstenv
xor
jle
mov
cmc
mov
arpl
mov
lods
lds
sbb
pavgw
movsb
aaa
inc
jecxz
dec
push
repz
or
xor
pcmpeqb
cmp
push
les
cli
cltd
or
mov
push
inc
in
mov
inc
ds
sub
dec
or
data16
dec
push
mov
mov
insb
movsl
lock
es
mov
xor
sbb
xchg
jp
jmp
pop
jnp
xlat
cmp
int
inc
pop
js
jle
push
pop
mov
ds
mov
mov
repz
fistl
aad
dec
xchg
pushf
jle
push
push
jbe
add
fildll
fs
mov
dec
inc
xor
mov
mov
into
aas
add
ret
mov
popa
sub
xor
mov
and
jns
sbb
mov
mov
aas
pop
or
xlat
mov
out
notb
pop
in
imul
cmp
mov
push
jl
xor
inc
lods
lock
mov
stc
addr16
cld
loope
xlat
xchg
lods
inc
dec
sbb
and
mov
rorl
shr
dec
loop
imulb
mov
out
in
stos
icebp
add
shrl
repnz
aaa
push
mov
xor
jns
into
das
ss
jp
bnd
mov
ror
repnz
dec
add
cltd
dec
mov
loop
jmp
les
jge
pushf
xchg
rcll
int3
or
cmp
std
cs
push
xor
jg
rorl
jnp
fwait
stc
dec
data16
jl
lds
scas
add
mov
sti
dec
inc
xchg
inc
xor
hlt
outsb
sbbl
icebp
je
mov
lods
sbb
int
sub
test
sub
stos
lods
das
inc
mov
fstps
dec
xlat
xchg
test
pop
pop
cli
ror
in
adc
xchg
inc
mov
out
xor
mov
inc
add
xchg
addl
xchg
add
push
push
adcl
sbb
lock
pop
push
adc
jns
sub
fnsave
mov
cmp
test
outsl
jns
sub
jbe
sbb
xchg
push
int3
cltd
mov
pop
stc
pop
cmp
jo
notb
fldcw
aaa
and
cmpsl
xor
rcrl
xchg
push
loopne
movsb
and
fwait
cs
fnsave
daa
nop
hlt
cmc
ljmp
cmp
ljmp
push
cmp
call
int
sarb
ljmp
sbbl
orb
sub
pop
sbb
in
mov
popa
sub
test
and
inc
nopl
jo
pop
mov
lahf
lock
adc
jp
out
aaa
xor
sarb
loope
pop
mov
cmp
and
add
inc
mov
fstl
cmp
movhlps
setns
popa
fdiv
xor
jg
cmpsl
mov
push
dec
loopne
or
or
mov
adc
pop
jge
fdivrl
jnp
lret
fnsave
clc
repz
and
cmp
xchg
loopne
in
inc
jnp
push
mov
aas
js
out
push
adc
dec
jp
xchg
xor
dec
xchg
stos
mov
mov
cmp
stc
lret
mov
movsl
xchg
push
pop
int3
cmp
subl
adc
push
cmp
fidivl
lock
jle
mov
mov
add
pop
or
xor
add
lock
sbb
repnz
adc
test
insl
adc
fnstsw
pop
pushf
mov
or
cmpsb
pop
cmpsl
jo
pop
lods
dec
xor
or
or
xchg
pop
int3
in
jns
call
inc
push
pusha
inc
stos
ss
stc
fidivl
dec
mov
xchg
outsb
dec
jge
lods
aad
or
add
fcomip
push
addr16
je
mov
shlb
mov
fimuls
cmp
ljmp
je
dec
test
push
leave
test
stc
leave
leave
pop
mov
stc
push
rcll
adc
loop
push
push
xor
mov
imul
ret
add
leave
std
pop
in
mov
fucom
mov
imul
popf
jno
sti
xor
stos
sub
jnp
push
dec
nop
inc
aam
mov
sbb
or
frstor
xchg
shrl
sbb
push
jmp
and
adc
rorb
cltd
jl
rclb
dec
nop
decl
out
scas
pop
movsb
push
jo
stos
jl
es
fisubrs
push
mov
outsb
fs
push
mov
pop
push
loope
pop
sahf
std
pop
cmp
test
in
pop
mov
mov
int
xchg
in
or
mov
add
lret
dec
int3
testb
add
stos
cli
jmp
popa
iret
ljmp
scas
call
rolb
sub
xchg
bound
fisubrl
push
test
jo
jbe
scas
adc
subl
imul
jno
push
sbb
pop
sbb
cmp
icebp
jno
jbe
psrlw
push
push
loope
ret
jne
xor
fisubs
add
add
les
pop
cmp
sti
jecxz
adc
mov
mov
dec
pop
roll
repz
mov
cmpsb
loopne
jno
repz
out
push
insb
jmp
dec
ret
clc
lret
shll
and
sbb
mov
sub
or
das
add
lret
fcmovu
stos
push
mov
add
stos
mov
inc
cmp
mov
addb
mov
enter
mov
mov
jp
out
lock
sbb
dec
idivb
and
cmp
inc
xor
sbb
dec
dec
ret
push
add
push
cmp
push
inc
push
sti
mov
and
scas
iret
sarb
add
jle
loopne
pop
dec
xchg
lea
cmc
jmp
cmp
fcmovne
cmpsb
pop
and
mov
dec
jp
outsl
xor
adc
es
bound
mov
mov
mov
pop
sub
movsl
mov
and
cmp
shlb
add
cmpl
repz
repnz
xchg
dec
stc
mov
mov
mov
adc
jge
lock
dec
fs
xor
push
sub
lret
cmp
sub
adc
imul
out
xchg
jne
das
lahf
cmovg
scas
add
enter
bswap
test
shl
cmc
ljmp
leave
sbb
pushf
std
movsb
pushf
push
xor
or
in
sub
xor
dec
mov
xchg
dec
pop
popa
test
xor
inc
push
mov
pop
mov
adc
and
inc
addl
ja
outsl
dec
add
xor
or
inc
cs
rorl
sub
mov
and
xchg
loopne
mov
pushf
in
nop
pop
rep
gs
scas
test
bnd
orl
mov
loop
xchg
push
push
cmc
loop
fwait
cmp
or
loopne
mov
and
inc
in
or
paddusw
jecxz
scas
enter
push
adc
sub
mov
lret
sbb
dec
pop
aaa
and
jmp
popf
and
mov
cmp
gs
pop
addr16
movl
sarl
pop
mov
aad
pop
mov
xor
adc
mov
cwtl
and
rolb
icebp
push
sub
jmp
and
fcomi
mov
int3
scas
sbb
sub
dec
hlt
imul
or
imul
stos
stc
mov
ret
jnp
into
sub
adc
outsb
fiadds
daa
sti
jo
mul
mov
int3
sub
xchg
jb
inc
cmpsb
clc
jno
insl
ror
mov
push
mov
or
sub
ljmp
inc
push
insb
rcrb
popa
mov
lea
cmpsl
dec
mov
mov
lods
pop
shl
mov
test
cmp
mov
add
test
jb
sub
mov
and
inc
jecxz
push
cmpb
lods
or
jge
and
mov
setb
push
aad
popa
cmpsl
mov
fstps
fstps
decb
or
in
lods
or
sub
loope
adc
or
push
ffreep
xor
push
pop
mov
inc
mov
negl
inc
daa
jnp
pop
rcrb
xchg
fwait
sbb
pushl
xor
xchg
orl
imul
mov
jp
out
adc
or
push
into
adc
sub
push
inc
pop
js
outsb
out
je
popf
mov
or
dec
mov
call
cmp
push
pop
push
test
xor
ficomps
in
movsb
adc
inc
cmc
sub
shl
int3
sub
mov
mov
pop
mov
jo
shll
mov
or
pop
shrb
int3
adc
outsb
fnstsw
sbb
and
arpl
xchg
dec
add
and
shrb
out
dec
pop
lret
pop
jge
add
pop
mov
mov
jno
lea
sub
mov
cld
mov
sbb
fsubl
dec
mov
loope
scas
faddl
and
xlat
mov
movb
int3
inc
jae
lock
in
loopne
mov
sti
xor
mov
push
bswap
mov
mov
sub
jne
mov
sub
inc
xor
add
dec
outsb
fiadds
cli
mov
cmc
and
mov
enter
test
repz
pop
mov
rcrb
clc
push
not
xchg
test
jae
fistps
mov
adc
mov
mov
loope
imul
push
cmp
lea
mov
cltd
bound
xchg
lahf
add
data16
inc
dec
xor
xchg
sub
cmp
add
and
cmp
cld
adc
rclb
cmp
ljmp
pop
clc
nop
pushl
mov
or
gs
dec
xchg
es
push
loop
xchg
ret
push
pop
jnp
lods
ret
adc
hlt
adc
icebp
add
cmpl
and
xor
mov
adc
repz
imul
les
pop
push
mov
pop
push
cltd
mov
jge
test
movsl
out
pop
loope
insl
sar
sbb
aam
push
sub
cmp
stos
sbb
or
adc
xor
in
stos
or
jne
or
mov
fcmovnu
mov
adc
int
dec
aam
loop
fwait
jle
xchg
mov
rsqrtps
mov
sti
jae
add
jle
mov
add
jge
shrl
enter
test
test
cmp
rorl
xchg
pop
das
stc
icebp
or
lods
sub
into
inc
insb
movsl
pushf
sbb
and
jae
cs
ds
rol
test
xor
mov
adc
sbb
jmp
scas
mov
inc
loope
push
mov
or
inc
cmc
movsl
loop
jge
dec
pop
and
fwait
pop
mov
push
bound
fldl
or
add
adc
fdivrs
ss
xchg
clc
jns
icebp
push
fisubrl
cmpsb
test
out
xchg
push
test
test
pop
add
xorb
clc
jne
mov
pop
or
xor
std
jns
je
sbb
negb
sbb
push
call
clc
scas
loopne
jbe
les
cmp
je
es
iret
cmp
mov
add
fcoml
ljmp
shlb
shl
mov
add
sarb
mov
pop
mov
std
dec
gs
xchg
add
inc
cwtl
popa
xchg
dec
rol
inc
test
push
dec
add
ja
outsb
fildll
in
cmp
hlt
repnz
mov
scas
mov
xchg
or
xchg
outsb
xor
push
int3
xchg
hlt
xor
fistpll
jne
inc
cmp
loop
xchg
iret
cmp
scas
mov
xor
or
pop
jo
aaa
aam
push
and
jmp
xchg
cli
pop
in
push
sub
cmp
mov
or
rclb
fidivl
adc
cmp
or
mov
ja
jecxz
mov
sub
add
jge
cmpb
push
les
mov
test
sub
jbe
ds
lods
in
aam
das
leave
adc
int
dec
jle
mov
mov
adc
in
jl
gs
inc
cld
add
jo
cmc
je
sti
mov
sbb
push
sbb
and
xchg
and
mov
cli
xchg
in
loopne
dec
das
mov
jecxz
add
sub
hlt
pop
mov
je
xor
cld
leave
movsl
ror
dec
je
cltd
sbb
mov
pop
mov
and
mov
lock
je
orb
pop
xchg
or
xchg
sahf
and
sub
fwait
xchg
mov
xchg
outsl
inc
adc
push
jno
imul
mov
lret
pop
dec
jae
mov
dec
lret
arpl
xor
ror
cmp
imul
jno
fcomp
push
sahf
mov
inc
rcll
int3
mov
inc
dec
and
sub
lds
xchg
push
sub
xchg
sbb
add
and
addr16
out
nop
shlb
movsb
pop
sbb
mov
aas
and
imul
int3
or
dec
mov
movsb
iret
mov
fwait
cmp
inc
jae
mov
fiadds
xor
sub
insl
shrb
jp
sti
hlt
cmp
dec
mov
sbb
mov
jp
push
gs
lds
icebp
xorb
or
cmpl
cs
sarb
ljmp
das
push
bound
leave
stos
inc
divb
xchg
pusha
rcrb
inc
popa
inc
insl
test
push
jge
nop
xor
testl
push
sub
in
sti
addr16
mov
enter
xor
mov
mov
jmp
xor
pushf
xchg
mov
mov
mov
mov
cmc
push
pop
inc
jne
roll
fucomp
or
push
incl
mov
cli
cmc
push
or
mov
ss
dec
dec
mov
out
aas
or
fwait
cs
fbstp
inc
dec
fildl
cld
and
jnp
fwait
inc
push
jge
inc
mov
cmp
mov
mov
pop
xchg
lea
aam
mov
in
inc
mov
scas
testb
dec
insl
dec
add
cwtl
pop
and
aad
xor
or
xchg
outsb
cltd
test
inc
std
sar
ljmp
fs
cmovl
adc
cmovnp
push
shlb
jbe
fwait
lahf
jno
mov
fdivl
jl
cli
mov
cmpsl
lods
push
jecxz
sbb
fwait
and
enter
jne
xchg
rcl
sub
xchg
test
cli
sub
mulb
sahf
ret
dec
jne
mov
addr16
dec
push
ja
mov
push
sub
insl
push
fwait
pop
cmpsl
jb
mov
or
lcall
adc
and
push
inc
xlat
or
add
out
or
and
pop
sarb
inc
mov
pop
scas
fisttps
jle
out
inc
cwtl
sbb
in
hlt
cmpsl
fidivrl
and
call
jle
xchg
jg
cmp
jge
mov
jecxz
push
cmp
push
jp
stc
jle
in
pop
jle
outsb
mov
arpl
inc
jmp
mov
and
inc
inc
sbb
jmp
mov
inc
cmp
and
sub
xor
cmpb
add
test
inc
inc
decl
adc
pop
aad
not
mov
lods
pop
ftst
mov
sbb
enter
das
sub
push
mov
mov
mov
mov
hlt
aad
sub
push
ficoml
das
xchg
imul
divl
adc
mov
shll
rcll
cld
lods
adcb
mov
push
jge
sbb
int3
aas
pop
std
sbb
test
incl
pusha
clc
jae
and
gs
test
sbb
mov
je
out
push
xor
mov
sti
clc
dec
add
xchg
add
cmpb
mov
jmp
and
mov
test
shl
mov
out
cmp
arpl
cld
add
out
ret
in
and
inc
push
mov
jmp
dec
cwtl
dec
jb
loopne
rcrb
sub
dec
js
push
aas
js
push
sar
jbe
lcall
repnz
adc
aad
and
inc
and
clc
dec
stos
call
mov
fs
push
sbb
insb
or
add
xchg
add
lahf
or
pop
adc
rclb
icebp
cmpsl
mov
add
in
aad
mov
leave
inc
pop
movb
test
cmp
test
xor
arpl
scas
sub
and
cmpsl
mov
jo
push
push
add
xchg
mov
xchg
mov
add
popa
pop
test
dec
inc
out
stc
push
mov
cmpl
xor
mov
out
mov
pop
dec
xchg
stc
mov
push
push
jmp
jne
pop
xchg
pop
std
cwtl
push
push
mov
sub
xor
mov
fistpll
jl
decl
pusha
outsb
mov
je
insl
xchg
xor
sbb
jnp
movsl
xchg
sbb
fs
or
mov
imul
mov
lcall
adc
cmp
mov
sbb
shrb
fdivrs
insb
push
addr16
into
mov
or
fsts
gs
xor
loopne
stc
lcall
test
sub
iret
rol
in
std
fadd
pop
stc
jecxz
adc
aas
insl
adc
add
jle
cmpl
in
fdivl
xor
std
test
fisubrs
xchg
add
mov
popf
std
mov
sbb
jmp
in
punpcklbw
inc
or
jo
inc
inc
jnp
daa
mov
sbb
sub
mov
jl
xchg
lcall
mov
xchg
scas
out
pop
sbb
xor
cmp
repz
clc
mov
loope
add
std
push
jmp
sub
daa
call
add
inc
sub
jle
or
xor
add
imul
jns
xor
les
cmp
mov
in
push
sbb
xlat
mov
jne
inc
sahf
push
xchg
add
mov
xchg
rcll
xor
mov
insl
or
lods
sbb
jbe
push
jns
loop
pop
cmc
add
or
cs
or
mov
movsl
cmp
testl
sbb
inc
ret
lods
test
sbb
pop
inc
jmp
ficomps
rclb
xchg
sbb
inc
mov
or
enter
imul
add
pop
jnp
pop
cmpb
sbb
pop
mov
sti
mov
pop
repnz
addb
sti
into
hlt
test
jne
add
dec
test
fidivrs
mov
cmp
mov
mov
lret
sub
mov
push
jl
mov
mov
ljmp
mov
leave
cmp
aam
subl
pop
or
xchg
out
movsl
lods
mov
call
lea
mov
push
sbb
popa
test
adc
cld
packuswb
jo
test
sbb
and
xchg
in
sub
nop
scas
and
in
mov
icebp
inc
lea
mull
inc
mov
divb
movb
jl
cwtl
rorb
mov
popa
dec
xchg
sbb
mov
cmp
cmpsl
dec
cli
xlat
vandnps
xor
in
stc
and
or
lret
and
mov
xchg
xchg
cmp
push
cmp
ss
mov
mov
push
adcl
xchg
das
jl
mov
popa
outsb
rorb
sbb
aad
repnz
movl
cmp
xchg
fnsave
sahf
fldenv
insb
or
xor
test
mov
gs
cmp
in
lds
test
sub
push
dec
movsb
mov
scas
or
das
xor
fstpt
pop
or
scas
mov
into
das
adcb
mov
rcrl
jle
lahf
xor
out
cmp
popf
sahf
pop
cs
xor
ds
call
xor
cmc
or
call
and
imul
dec
cmp
inc
jp
andb
push
sub
lock
filds
adc
in
jle
js
push
dec
std
adc
mov
pop
insl
pusha
xor
xchg
jle
cli
jnp
or
pusha
fldenv
fs
push
jbe
dec
int
test
repnz
and
add
push
into
mov
fcomp
aas
fnstenv
sub
lret
xor
lods
pop
loopne
cld
inc
scas
push
mov
inc
mov
stos
mov
push
jg
je
inc
push
jno
push
inc
sub
jg
xor
jb
insb
and
imul
ret
mov
inc
dec
stos
cld
ret
and
sti
xor
and
aas
lcall
test
cwtl
popf
pusha
inc
push
cmc
mov
inc
jle
scas
test
lods
mov
mov
xor
cwtl
pop
cmpsl
jo
das
xchg
rclb
loope
and
xchg
mov
dec
adc
sub
mov
loopne
outsb
lret
cmp
add
std
dec
xchg
xchg
in
cmc
fs
lods
xchg
or
das
xlat
jns
sub
jns
push
push
and
sahf
icebp
or
xchg
pop
and
aas
sahf
ja
loope
call
dec
popf
xchg
sbb
xchg
adc
repnz
sti
in
xlat
enter
arpl
inc
push
iret
mov
scas
scas
jbe
xchg
clc
adc
jo
jo
cltd
inc
divb
add
push
mov
aam
jmp
or
test
or
pop
hlt
enter
and
mov
in
iret
in
pop
jl
xchg
mov
adc
mov
add
add
pop
fnstcw
int3
xor
rcrb
dec
jns
adc
mov
xchg
je
mov
dec
shrb
mov
xchg
leave
or
std
enter
jns
cmpsl
and
adc
or
mov
mov
sbb
and
sub
popf
adc
ljmp
push
xchg
xchg
test
popf
gs
or
mov
fisubrs
movsb
push
sar
push
push
adc
jmp
push
out
lret
mov
enter
sub
lock
mov
icebp
inc
lea
lcall
test
jecxz
dec
gs
sbb
jecxz
push
fwait
ljmp
and
dec
mov
jmp
jb
aas
dec
aad
loop
sahf
xorl
lret
cli
lret
lcall
pushl
lods
and
imul
cmp
jmp
enter
jg
pop
mov
ja
out
pop
scas
xor
mov
xchg
or
jmp
and
hlt
or
xchg
int
pop
and
daa
and
repz
pushf
fstp
fcomps
call
stos
add
jnp
xchg
or
or
sub
mov
pop
fdivs
lock
inc
mov
out
icebp
cmp
int
xchg
iret
xchg
sub
lea
bound
pushf
cld
sbb
push
fisttpll
push
cmp
inc
sub
mov
aaa
pop
int3
mov
sbb
popa
sbb
cwtl
pop
adc
mov
sbb
hlt
ja
xchg
xchg
cmp
js
inc
mov
arpl
mov
inc
push
movsb
popaw
adc
insb
mov
dec
cmp
mov
je
jecxz
jmp
sub
jbe
jg
std
cmp
rorl
pavgw
repnz
stos
mov
adc
sub
push
push
pop
pop
insl
inc
or
and
xor
insl
mov
xchg
stc
mov
ret
bnd
and
sub
sub
dec
mov
lea
mov
sbb
mov
sbb
movsb
pop
vpunpcklbw
pop
lahf
repz
cmp
push
popw
lahf
adc
adc
sti
pop
dec
testb
xor
mov
sub
mov
xchg
repz
push
shll
lods
add
pop
imul
fcmovnb
jb
das
push
lahf
add
sti
pusha
repnz
add
push
lea
xor
popa
dec
pop
out
iret
popf
outsl
jbe
or
xor
mov
jae
adc
mov
jmp
sarb
mov
gs
in
or
inc
ds
xlat
clc
ds
sub
xor
inc
adc
lcall
xchg
add
daa
sub
test
inc
cwtl
add
cmpsb
pusha
out
dec
out
mov
test
cmc
enter
jecxz
xchg
aaa
inc
xor
ljmp
ljmp
inc
idivl
movsb
cmp
sub
adc
adc
pop
xchg
dec
mov
jnp
xor
lret
test
push
rol
mov
jg
subb
cmp
or
jne
and
pop
ljmp
mov
sub
cmp
cmp
mov
push
dec
push
xor
in
inc
sti
push
cmpsb
pop
stos
sarb
xchg
add
shll
cmc
les
xchg
mov
enter
data16
insb
or
stos
jns
shrl
pushf
inc
cmp
or
cmp
sarb
aam
mov
out
in
cltd
pop
imul
fildl
and
aas
icebp
mov
sbbb
adc
rorb
pushf
out
and
dec
cmp
mov
push
ljmp
dec
mov
pop
mov
mov
enter
scas
sbb
clc
xchg
lcall
mov
rorl
or
stos
loope
insl
negb
dec
sarl
cli
test
cs
clc
loopw
cmp
sbb
adc
and
icebp
adc
shll
jecxz
js
sub
inc
adc
mov
push
cmpsb
xorl
sti
dec
lods
inc
out
jno
sbb
xchg
iret
mov
or
rcl
dec
inc
push
mov
xadd
push
push
cmp
test
mov
lds
fdivrs
sub
test
sub
push
jbe
sub
pop
xor
xor
scas
pop
jb
mov
out
jle
clc
imul
xchg
adc
add
dec
sub
push
xchg
int
pop
cmp
mov
scas
pop
add
fistps
jae
or
sbb
repnz
jns
xor
lea
data16
or
pop
jns
clc
mov
outsb
sub
or
mov
fs
aas
sti
and
aad
fnstsw
fisttps
rclb
push
aad
int
adc
jge
adc
jg
smsw
adc
int
fcomp
jmp
sahf
sarb
jecxz
popf
and
in
push
mov
sbb
xor
cltd
rolb
pop
stc
jp
aad
and
pop
xor
sub
and
mov
stos
cmpsb
sbb
outsl
or
push
push
ret
test
cmp
enter
pop
push
add
fcomps
outsl
data16
testl
movsb
or
pop
and
mov
rclb
stos
aaa
xchg
aam
hlt
push
sbb
enter
mov
inc
std
sub
push
cmpsl
je
mov
xchg
and
mov
sahf
add
jl
imul
mov
clc
inc
clc
or
cmp
push
dec
and
cmpsb
shl
push
sbb
cmp
imul
cmpsb
out
movsb
pop
sub
insl
rolb
mulb
aaa
shrl
lret
fsubrs
or
xchg
pop
ror
sub
adc
std
xchg
leave
xlat
cmp
popf
sub
scas
mov
or
leave
cmp
and
mov
jne
sub
cmp
aas
pop
cs
outsl
or
rep
in
xchg
mov
sub
pop
mov
test
xor
and
lea
mov
test
scas
xor
fucom
dec
adc
mov
push
push
orb
push
adc
xor
mov
mov
insb
add
mov
mov
xchg
inc
or
sub
jge
dec
mov
movsl
mov
arpl
fidivrl
inc
lods
daa
or
mov
jno
sti
cmc
dec
add
pusha
iret
add
sbb
jns
inc
mov
addl
sbb
mov
mov
popa
sbb
pop
jle
mov
negl
add
or
scas
lret
xchg
add
xor
std
cltd
cltd
pop
rcll
pop
lock
fcomip
push
icebp
add
aaa
hlt
loop
mov
jl
aaa
ret
xor
cmp
test
pop
dec
lahf
fdivs
clc
movsb
sbb
and
xchg
push
mov
jo
mov
push
jg
mov
es
cmpsl
mov
xchg
adc
push
clc
js
stos
pop
imul
cltd
mov
mov
inc
add
movb
add
push
pop
and
sub
repnz
xchg
repz
lahf
lret
add
es
dec
popf
inc
mov
mov
adc
hlt
mov
and
ss
adc
push
jmp
sub
mov
mov
adc
lock
cmc
movsb
adc
mov
push
test
daa
mov
dec
cmp
jnp
insl
imul
lret
adc
jecxz
inc
add
repz
aad
dec
xchg
mov
int
xor
sub
fcom
fcom
add
dec
fwait
arpl
loopne
jecxz
mov
insl
xchg
mov
or
andl
pop
enter
push
or
jl
and
dec
inc
mov
mov
mov
ljmp
cmpsb
fsubrs
lods
rorb
mov
pop
add
mov
xchg
aad
push
hlt
jp
push
add
ja
mov
std
sbb
hlt
jo
mov
ret
and
inc
rolb
leave
xor
shll
pcmpgtd
pop
ja
push
sbb
sar
cwtl
sbb
clc
sar
cltd
jg
es
lahf
shlb
ljmp
mov
jmp
xchg
jns
scas
push
adc
inc
inc
or
into
lods
xlat
push
mov
and
jl
add
jns
aaa
mov
fstpl
fstpt
push
das
test
xchg
loopne
movsl
fst
xchg
push
add
in
xchg
adc
sbbb
xchg
pop
enter
jge
hlt
cmpsl
cmp
push
adc
cli
movsb
xchg
insl
jge
les
out
cmp
lcall
xchg
sti
ljmp
stos
adc
inc
in
in
jb
mov
jl
std
adc
sarl
cli
cmp
addr16
xor
icebp
enter
daa
je
loopne
and
xchg
or
gs
dec
jo
imul
sbb
dec
sahf
jbe
pop
fiadds
xor
stos
push
cs
stos
add
sbb
xlat
rolb
pop
push
ret
cmpsb
movsb
xlat
or
cmp
repz
pop
test
or
mov
mov
or
mov
jae
lahf
out
movsb
pop
jno
inc
out
in
ljmp
xchg
pop
aad
lods
call
je
into
xor
fbld
xor
scas
cmp
sahf
fists
int
jge
and
movsl
jo
push
inc
imul
dec
mov
push
and
or
jp
mov
loop
test
push
dec
jle
or
gs
ja
push
ret
ss
dec
push
test
ja
xor
into
dec
cwtl
sub
int3
lock
add
and
mov
fisubl
aaa
mov
in
add
push
cmp
mov
pop
in
mov
xor
cmp
out
addb
movsb
dec
and
add
and
lods
stc
sub
adc
mov
into
int
pop
nop
jmp
and
jge
cmpl
fldl
cli
enter
mov
fisubrs
in
shr
xchg
rorl
lret
xchg
mov
push
ja
aaa
nop
jle
lds
das
sti
leave
aad
sarb
out
xchg
int
aam
mov
xchg
lret
push
sbb
out
xchg
bound
cmp
imul
push
addb
sbb
dec
pop
inc
sbb
or
mov
dec
mov
inc
vpsubusw
add
and
mov
mov
subb
pop
sbb
xor
add
push
int
cmpsl
or
mov
stos
mov
pushl
sbb
xor
pushf
je
rcrb
pop
in
sbb
insb
pop
cli
enter
sbb
pop
add
mov
sti
lea
push
aaa
test
gs
jbe
insb
push
sbb
dec
lcall
push
je,pt
movsb
das
adc
flds
mov
mov
sbb
pop
fsubrl
add
cmp
push
cwtl
repnz
mov
xchg
in
sbb
mov
lret
inc
inc
lcall
jg
push
iret
xchg
sahf
mov
scas
xor
and
out
test
or
mov
pop
popa
adc
cmpsl
insl
in
jnp
movsb
nop
cli
outsb
sub
out
cmp
inc
out
adc
push
push
mov
jle
xchg
pop
and
aam
cmpsb
and
subb
push
cmp
dec
mov
cmpl
addr16
push
add
xor
jge
dec
rcr
xchg
or
inc
add
cmc
xchg
test
mov
xchg
mov
fsts
sbb
leave
add
mov
sti
xor
cmp
pop
xlat
aam
stos
cmp
iret
call
sti
stos
and
sbb
ret
gs
ret
pop
xchg
jle
mov
fisubrs
mov
fldcw
add
ss
stos
out
push
pop
stc
jo
xor
leave
xor
stos
cwtl
mov
into
and
xor
jl
xchg
push
cmp
int3
sbb
clc
int
popa
inc
je
mov
dec
mov
adc
pop
xor
orl
lcall
mov
push
jns
push
out
bound
adc
mov
cmp
xor
cmp
sub
repnz
push
xchg
in
aam
ficoms
mov
test
icebp
jl
sbb
call
add
sbb
dec
outsl
push
push
mov
adc
out
push
popa
fidivl
enter
data16
lahf
cld
xor
rol
push
fnstsw
fstp
shlb
es
mov
clc
mov
jnp
popf
and
shll
retw
push
dec
jae
lock
push
popf
pop
ds
fidivl
adc
sahf
xchg
orl
scas
mov
dec
negl
out
and
mov
lret
jl
or
movsb
shl
mov
push
imul
cmp
cmp
or
ljmp
or
cmp
movsl
and
mov
add
jo
in
mov
nop
loope
bound
out
mov
mov
int
mov
mov
movsl
arpl
js
jecxz
cmp
xchg
add
in
ja
jno
repz
cmp
fbstp
adc
mov
stos
mov
cltd
into
jnp
insb
dec
push
cmp
mov
test
aam
in
push
cmp
inc
sbb
jge
jecxz
sbb
out
popa
jne
dec
dec
rorb
insl
pop
fcmovbe
jo
pusha
imul
lods
daa
inc
xchg
pop
lock
imul
push
sub
les
mov
cli
dec
xor
jbe
sbb
push
dec
arpl
fildll
mov
test
lret
lock
lock
lret
sti
mov
daa
or
stc
jecxz
pop
mov
dec
mov
cmpsl
mov
lret
inc
inc
fimull
jecxz
out
add
stc
adc
mov
push
cmp
imul
mov
jnp
or
arpl
pop
into
sbb
mov
mov
mov
cmp
rorb
jle
mov
sti
jmp
lock
xchg
jecxz
cvtps2pd
fldt
and
adc
push
adc
mov
ja
pop
pop
or
adc
dec
fwait
jmp
or
clc
adc
sbb
xchg
je
negl
shll
gs
mov
jmp
xorl
jb
mov
and
mov
or
in
lcall
les
jl
push
imul
jbe
test
jb
pop
aad
mov
cmc
and
std
sbb
sbb
push
ja
push
test
mov
adc
sub
pop
jb
jns
mov
shlb
mov
jmp
arpl
arpl
mov
lock
es
fdivl
mov
sub
sahf
inc
jg
adc
leave
adc
in
test
and
mov
inc
cmpsb
sbb
je
sbb
in
xchg
loopne
mov
cmp
sub
fs
xchg
ret
addr16
mov
mov
mov
push
adc
xor
loop
jecxz
addr16
sbb
cmpsb
jecxz
dec
sub
cmc
dec
mov
enter
mov
std
lea
ss
sbb
cli
push
rcrl
xor
and
sub
in
out
jns
pop
scas
ss
pop
fdivrl
leave
jns
fs
dec
xor
fs
negb
push
jmp
sub
int
ficoml
sbb
fcmovne
into
and
adcl
add
shl
stos
jne
xchg
ret
in
aas
or
mov
or
rorb
mov
sub
mov
xor
xor
inc
stos
sti
cmc
pop
push
push
clc
sbb
fs
icebp
lods
aaa
ds
clc
mov
pop
and
sbb
xchg
mov
rcr
cld
test
push
cs
loopne
mov
push
pop
push
je
and
clc
gs
pop
mov
rclb
fimull
int
insb
addl
inc
popa
jl
sti
sub
ds
scas
pop
dec
lahf
movsb
adc
and
or
pop
xchg
in
adc
jecxz
jno
mov
int
dec
in
push
popf
adc
sahf
jnp
mov
adc
inc
xbegin
fs
popf
inc
push
repz
call
cltd
pop
dec
mov
mov
mov
inc
mov
sbb
addr16
xchg
clc
pusha
mov
enter
mov
mov
push
inc
xchg
pop
adc
sub
repnz
fsubrs
fisubrs
lods
inc
scas
insb
mov
add
and
test
xchg
jecxz
mov
push
pop
mov
mov
sbb
pop
jb
testb
mov
jns
cmp
scas
inc
fstl
xchg
and
xlat
popf
bound
xchg
adc
outsl
out
mov
and
stc
ss
inc
xchg
inc
imul
lret
loope
call
jbe
or
icebp
arpl
ljmp
mov
and
imul
lea
sub
jno
add
jmp
xchg
fstl
ljmp
outsb
lcall
loopne
js
mov
adc
das
mov
ljmp
jp
adc
movsl
pop
nop
hlt
std
xor
and
xchg
cmp
jno
pop
mov
xlat
or
dec
popf
fldl
dec
dec
orb
adc
inc
aad
ficoms
into
sbb
fldcw
lods
sub
mov
mov
iret
jne
jmp
fcmovne
pop
jne
int
lret
sub
rcl
inc
adc
mov
and
inc
mov
outsl
das
and
insl
rep
mov
and
and
cltd
add
pushf
jl
push
xlat
dec
jg
push
daa
and
out
jnp
stc
mov
adc
push
insb
hlt
pop
fsubrs
out
dec
lods
or
pushf
pop
mov
mov
stos
adc
mov
xchg
cmp
xchg
sbb
daa
push
sub
sbb
push
cmp
daa
outsb
push
cmp
call
stc
inc
cld
push
and
jecxz
cmpsl
pop
jae
test
outsl
xlat
test
dec
cmp
xor
inc
push
repz
ds
hlt
inc
es
orl
in
and
in
add
in
dec
jle
stos
add
loop
cmp
popa
and
roll
mov
pushl
adc
push
shll
clc
mov
nop
add
call
dec
mov
cltd
push
push
lds
daa
sbb
adc
jp
insl
pop
jne
sub
add
inc
jmp
test
lret
out
test
xor
insl
fimuls
pusha
sub
push
add
add
sbb
mov
and
cli
mov
adcb
test
repz
cmp
add
dec
lret
push
sar
pop
movsb
stc
sub
mov
xchg
adc
jo
add
hlt
aam
stos
xor
or
lret
int
mov
adcb
xchg
cmp
out
scas
pop
jne
addr16
adc
enter
sub
add
in
and
pop
add
dec
adc
adc
cmp
test
xchg
scas
orb
sarb
mov
clc
and
idivl
dec
sti
push
stos
mov
mov
lret
ret
cmp
loop
das
sub
out
mov
sbb
ss
sbb
ljmp
imul
lcall
dec
sti
fmull
decl
dec
stos
jnp
mov
mov
dec
cwtl
inc
xorl
ds
scas
cmc
iret
nop
jne
lcall
mov
fldcw
mov
sbb
test
mov
mov
cltd
dec
in
subl
imul
pop
or
push
mov
sub
sub
add
aas
mov
cltd
test
rcr
ficomps
mov
movsl
xchg
jmp
jp
cltd
sub
and
sub
pop
cmp
jge
pusha
cmp
cmp
inc
lcall
ljmp
jbe
ficoms
int
push
incl
fs
daa
test
lock
mov
jns
and
adc
clc
push
cmc
xchg
jae
push
fldl2t
jo
sub
xchg
in
cs
dec
sbb
call
mov
mov
pop
mov
imul
jle
in
fwait
pop
rorl
lea
adcl
popf
sub
sbb
rolb
add
pop
clc
inc
xchg
and
mov
das
and
out
cmp
int
scas
add
lea
sbb
or
sub
dec
fsubs
mov
in
pushf
and
xchg
inc
push
sub
inc
les
out
lret
pusha
pop
cwtl
xor
inc
pop
mov
jno
jo
adc
xchg
ja
hlt
mov
pop
mov
cwtl
arpl
and
loop
test
xchg
sbb
cmp
into
pop
inc
fsubrs
inc
out
or
pshufw
pop
popa
daa
ss
dec
sbb
popf
push
push
sbb
loopne
ret
pop
outsl
mov
fbld
sbb
jne
lret
add
rcrb
xchg
push
je
std
jecxz
cmp
push
mov
mov
push
sub
aad
inc
push
out
xor
xor
mov
roll
and
xchg
xor
stos
rclb
scas
jno
xlat
jae
dec
pop
ret
mov
mov
mov
loopne
or
sbb
push
repz
push
data16
or
insb
sarl
gs
icebp
pop
jb
ja
cmpsl
hlt
inc
cmp
pop
xor
xor
xor
fs
mov
out
push
sahf
mov
das
push
pop
shll
out
pushf
insb
xor
lods
dec
add
rcr
jecxz
cmp
je
in
movsb
jmp
shlb
popa
push
mov
inc
dec
int3
dec
and
push
sub
ja
pop
outsb
fcomp
adc
pop
push
xchg
outsl
sub
loop
push
std
shr
bound
scas
xor
xchg
or
hlt
shrb
sub
or
fdivp
in
push
pop
adc
sub
and
pop
ljmp
imul
and
xchg
sub
lods
push
cli
pusha
dec
inc
test
push
movsb
cli
jns
cmp
aad
cmpsb
push
xchg
xchg
repz
shrb
lahf
fwait
sbb
cmp
inc
xor
push
test
int
cltd
mov
addb
mov
sub
xor
loopne
pop
daa
inc
and
pop
cltd
inc
push
xor
cwtl
jp
jge
dec
sbb
lahf
xorl
popf
ret
push
loope
sahf
push
daa
adc
or
dec
push
pushf
ret
sbb
lret
mov
adc
inc
lock
fnop
int
adc
jo
cltd
push
add
mov
xchg
movsl
lds
jl,pt
lret
push
or
xor
in
je
jle
or
xor
lea
pop
jp
out
dec
aas
add
sub
and
lds
mov
test
and
xchg
push
jp
in
cmp
ljmp
pop
dec
pushf
dec
daa
dec
push
vmread
inc
pop
sti
mov
pop
adc
shll
xor
fsubrl
lcall
subl
out
lahf
stos
mov
mov
xchg
pop
xor
cmpsb
in
cmp
push
leave
or
out
jns
hlt
lcall
cmp
mov
cmc
inc
pop
clc
adc
mov
or
mov
je
push
lcall
jge
xor
mov
mov
jg
outsl
jno
insl
bts
xchg
test
and
aam
fs
int
gs
js
dec
aaa
inc
mov
adc
lock
push
or
fbld
stos
filds
jmp
sti
push
iret
mov
dec
xchg
jb
dec
stos
add
jns
xor
popf
ror
jmp
fsubrs
inc
jne
lock
inc
in
mov
call
sub
pop
xchg
stos
push
xor
cmpsb
insl
popl
dec
cmp
jns
sbbl
repnz
and
popf
mov
test
subb
adc
test
outsb
roll
push
insl
cmp
push
mov
lahf
enter
mov
lea
cmpsl
add
inc
push
pop
ret
add
or
test
ja
outsl
pop
sbb
xor
dec
imul
sar
out
imul
dec
jo
ljmp
pop
and
movsb
loopne
lods
cs
out
xchg
push
jmp
ljmp
cwtl
push
adc
mov
sub
mov
test
and
nop
cmp
fdiv
adc
xchg
mov
js
jno
in
jb
arpl
or
rcl
and
int3
shrb
inc
xchg
pop
mov
and
aam
out
push
lock
mov
xchg
dec
jge
aam
xchg
jne
and
cli
ljmp
out
out
lcall
add
add
xchg
cmpsl
addl
and
xchg
push
in
int3
gs
inc
in
jae
leave
stos
test
cltd
mov
in
jmp
and
cs
xchg
fs
pusha
and
xor
jg
add
mov
loopne
or
lock
sbb
cmp
test
fiadds
lret
dec
and
jp
pop
push
jmp
mov
or
sbb
je
ret
cmpsl
inc
mov
sbb
xchg
cmp
fsubl
mov
sub
repz
jne
scas
out
mov
pop
and
popa
ja
and
cmpsl
scas
in
xchg
push
int
lock
cwtl
call
adc
or
xor
cmp
push
std
sub
fsubrl
mov
or
cld
pushf
js
and
xchg
sub
adc
xchg
int3
call
add
xchg
dec
add
mov
aam
cmp
mov
fisttpll
frstor
and
xchg
add
in
cs
cmpsb
rcrb
movsl
js
mov
mov
shrb
add
cld
mov
outsb
and
jbe
into
sbb
pop
mov
sbbb
push
mov
insb
push
inc
pusha
call
sub
or
jae
xchg
pushf
cli
and
cmp
loopne
sti
sbb
pop
pop
inc
adc
imul
fsubrp
scas
andl
push
xchg
lods
lods
pshufw
es
psadbw
mov
sbb
inc
sub
icebp
cmp
ja
stc
jns
xor
loopne
jo
je
cmpsl
jp
lods
les
mov
test
movb
ds
lods
shll
ja
arpl
cmpsb
xor
mov
cs
aaa
and
js
testb
add
fidivl
pop
jecxz
xor
lcall
and
ds
jp
test
jmp
add
fwait
inc
xor
xchg
stc
sahf
subb
xchg
mov
pushf
ret
cmp
xor
mov
stos
cld
mov
and
in
pop
adc
or
add
fisubrl
mov
outsl
pushf
sbb
test
nop
lods
js
clc
adc
pushf
lods
in
sub
pop
sbb
xchg
fnstenv
jl
clc
jae
xlat
call
sub
cmc
xor
pop
movsl
push
les
add
lcall
jnp
mov
push
cli
lods
mov
cltd
lds
repnz
sbb
dec
movsb
mov
push
adc
mov
xor
ret
int3
int
push
daa
cmpsl
inc
test
int3
push
push
loop
mov
adc
call
rcl
inc
push
cld
push
pop
push
cltd
xchg
test
sub
ss
inc
ficompl
rcrl
icebp
xchg
fildll
lock
push
xchg
pusha
mov
sbb
push
aad
das
cwtl
lret
inc
jecxz
stos
and
inc
sub
add
rorb
ds
mov
lret
mov
xchg
pop
rclb
es
pop
outsb
mov
xchg
sbb
andl
int
mov
test
push
js
fsubl
inc
out
addr16
add
sti
andb
icebp
pop
jne
ds
rol
add
cmp
ja
jo
adc
cmp
sarb
dec
pop
insl
jl
lret
test
mov
cmc
out
inc
and
mov
lea
es
daa
adc
cmp
pop
in
dec
fmuls
sub
and
mov
in
mov
in
dec
inc
push
outsl
and
into
or
add
sub
out
mov
sub
into
fldt
loop
dec
jg
mov
test
out
ss
aam
pop
bt
mov
or
add
sub
and
cs
outsl
js
dec
pusha
jb
and
xorl
adc
lea
outsl
push
std
int3
rolb
int
push
popf
cmp
stos
push
push
xorl
add
add
push
push
bound
das
or
and
sub
in
xor
jg
jle
insl
cmpsl
mov
dec
mov
mov
int3
outsl
jnp
jno
sti
pop
loopne
jl
or
dec
orb
or
idivl
add
cmp
addl
lods
jg
jae
into
xchg
xor
pop
loop
mov
and
leave
dec
mov
mov
cmc
add
jbe
mov
icebp
test
dec
mov
adc
out
mov
and
pushf
pop
aaa
scas
jl
lock
fistpll
dec
inc
das
jl
cmp
outsl
pop
test
push
cltd
clc
aad
add
mov
outsb
ss
mov
dec
js
outsb
int3
repnz
add
pop
sahf
cld
inc
jecxz
in
dec
fisubrl
jae
jle
and
mov
dec
add
xchg
mov
lods
xchg
sbb
insl
and
lods
movsb
inc
inc
xor
out
push
mov
adc
jecxz
mov
jae
dec
push
sarb
sar
test
fwait
mov
push
xor
popf
test
jp
jnp
adc
cmp
pop
jecxz
cmc
xor
add
insl
adc
fcomps
ret
dec
pop
push
loope
insl
lret
dec
add
ds
jecxz
test
add
jp
and
xchg
arpl
adc
fucomip
xchg
in
mov
push
push
rorb
cmp
cmpsb
inc
mov
ret
lock
sahf
lret
fwait
mov
in
push
inc
mov
scas
push
insl
xchg
lock
xor
imul
gs
frndint
sbb
push
nop
pop
imull
out
mov
sarb
mov
les
xchg
call
cmc
jne
rcll
lcall
aaa
pop
pop
je
jg
mov
mov
add
sub
jmp
inc
cmpsl
stos
sub
mov
push
sbb
mov
pop
in
inc
lock
mov
shrl
aam
stos
mov
push
cmp
loopne
mov
arpl
inc
pushf
xchg
jne
lcall
sbb
jnp
pop
out
mov
push
lret
arpl
sbbb
mov
push
dec
ljmp
faddl
push
add
mov
mov
cmp
or
dec
push
inc
in
lahf
in
lods
cmc
jle
inc
pop
xor
addr16
test
mov
push
rcll
mov
mov
cmp
push
cmp
jnp
cmp
subb
add
add
movsl
int3
add
sub
out
add
jle
fdivr
arpl
and
insb
stos
or
mov
inc
rcrl
push
ss
outsl
cs
in
stc
popf
or
nop
jnp
jmp
jno
cwtl
repz
push
mov
xor
cmp
and
out
ljmp
mov
sbb
shll
jl
sbb
jne
into
cmp
mov
dec
sub
dec
popa
inc
xor
gs
aam
std
push
in
pop
adc
div
mov
cmpsl
loope
add
es
and
jo
pushf
mov
fxch
repz
sbb
xchg
cmp
stos
js
lds
sub
jl
imul
fdiv
arpl
aam
adc
mov
dec
jp
repnz
mov
jecxz
scas
cmpsb
out
in
dec
fs
popa
into
push
lods
leave
je
fwait
mov
lret
pop
outsb
rcrb
scas
cmp
jg
daa
popf
cmp
cmp
out
mov
call
mov
push
loop
ljmp
xchg
push
push
xchg
outsb
pop
loopne
or
adc
add
and
sbb
push
jge
mov
aad
out
ficoms
adc
negb
mov
cmp
sbb
sbb
sbb
xor
adc
inc
cld
sbb
cld
sbb
adc
push
pusha
mov
dec
push
inc
or
jo
stos
mov
stos
leave
in
jp
sbb
cs
out
or
arpl
add
jle
and
inc
sub
mov
test
f2xm1
fildl
sub
xor
popf
mov
loop
lret
xlat
mov
fistl
xor
jno
call
pop
dec
bound
sbb
nop
adc
sti
xchg
xchg
jnp
popf
loope
mov
mov
or
sbb
cmp
mov
or
in
lahf
pop
fsubrl
or
ja
inc
lods
outsb
jecxz
test
sub
mov
sub
mov
lds
cmp
dec
fdivrl
mov
decb
sub
push
sbb
insb
xchg
jle
mov
arpl
add
add
daa
add
sub
sub
lods
arpl
ss
mov
mov
or
pop
in
adc
stos
lds
jle
cmpsl
mov
xchg
aas
mov
es
stos
dec
loope
jnp
mov
and
mov
ljmp
nop
cwtl
mov
repz
add
int3
push
int3
in
or
cs
sahf
leave
sti
cltd
out
xor
movsb
adc
in
mov
cmp
cs
xorl
push
sahf
lcall
mov
mov
cmp
insl
stos
pop
int3
cmp
ds
sub
out
mov
pop
fnstcw
fs
sbb
sbb
and
ds
add
mov
push
adc
inc
adc
clc
sbb
loop
pop
cmp
bound
cltd
adc
jnp
sub
inc
aad
out
fidivrl
js
rclb
sbb
in
sbb
mov
mov
bound
xor
xor
imul
in
test
push
stos
insb
sbb
jecxz
adc
jns
inc
xchg
sahf
jmp
mov
lea
aaa
add
outsb
mov
pop
pop
cmpb
fs
test
pop
fildl
inc
xchg
mov
mov
sarb
inc
call
push
ret
mov
dec
daa
fisubs
or
std
sub
rclb
mov
xlat
shll
outsb
xchg
sarl
sub
xchg
and
adc
mov
ficoms
hlt
sub
pusha
shlb
mov
xchg
lock
neg
jbe
xor
test
jg
mov
sub
push
das
or
or
add
mov
add
xchg
cld
int
mov
bound
or
fidivrl
cmp
jl
lods
and
in
jle
xchg
aaa
mov
cwtl
push
sbb
jb
pop
inc
and
jb
mov
sub
push
sub
stc
dec
aam
mov
sbb
sub
inc
xlat
in
js
xlat
cmpl
jg
push
jp
sub
and
push
jae
dec
pop
mov
cmp
movsl
lret
and
cmp
mov
addl
adc
mov
dec
add
add
pop
sahf
inc
idiv
cmp
lods
int
data16
iret
add
sbb
sub
mov
std
loop
xor
scas
push
mov
inc
out
xor
xor
or
inc
adc
push
fwait
inc
and
sti
and
xchg
xor
xchg
ss
ds
jecxz
mov
adc
xchg
cmp
sub
push
dec
xor
add
shll
iret
jb
inc
mov
test
pop
push
scas
mov
inc
and
mov
dec
sti
fcomp
js
ret
xchg
andb
and
dec
int3
aad
mov
pop
cmp
je
and
or
mov
xor
push
ret
repz
cmp
xor
jnp
xor
sbb
xor
dec
mov
aas
mov
popa
dec
scas
jbe
sub
pop
mov
xchg
int
lock
inc
mov
movsb
or
jo
mov
cltd
cli
sub
inc
filds
pop
pop
js
jo
dec
mov
je
push
aam
inc
iret
pop
adc
insl
enter
cltd
jp
loope
add
cmp
sbb
push
pushf
cwtl
adc
push
scas
push
fdivr
push
sbb
out
in
cmp
dec
adc
dec
std
pop
insb
sahf
imul
orb
mov
push
and
xchg
idivb
jge
adc
xchg
mov
cld
bsf
or
out
out
sbbb
int
push
or
xchg
pop
push
xchg
xor
and
pusha
sti
int3
loope
add
pop
jecxz
loopne
fs
jmp
lcall
dec
scas
mov
sub
sbb
out
sbb
push
test
in
xor
xorb
shl
scas
push
add
imul
aas
mov
in
daa
dec
aaa
and
es
movsl
push
cmp
repnz
decl
sbb
fcmovnb
xchg
daa
rolb
cmp
mov
dec
imul
push
and
cbtw
daa
xchg
sahf
inc
leave
xlat
push
clc
adc
inc
fimuls
inc
or
rolb
mov
int
lock
jl
lahf
inc
pop
adc
add
mov
sbb
mov
mov
add
lds
test
les
or
ds
and
or
xor
jp
cli
sub
movsl
and
cs
js
ds
sbb
xor
sub
add
xor
std
shll
outsb
out
jae
pushf
scas
push
pusha
jae
jmp
insb
push
out
push
adc
sbb
loope
xchg
or
sbb
pusha
andb
rolb
dec
sti
nop
sbb
xchg
mov
stos
sub
add
jb
adc
xchg
jno
sub
xor
add
rcrl
or
jne
push
sub
cwtl
movsb
and
ret
pushf
iret
cmpl
fs
cmp
mov
or
andb
mov
and
mov
sub
jecxz
sahf
mov
lods
and
adcl
mov
out
fsubrp
mov
add
inc
push
test
mov
xor
ret
push
sahf
pop
jge
xlat
mov
inc
bnd
pop
loop
out
xchg
inc
push
out
lcall
xchg
out
or
adc
iret
cmpb
push
dec
pop
in
lret
cmp
mov
outsl
xchg
or
cmpsl
sbb
sbb
lea
xor
bound
scas
pop
mov
jmp
ja
mov
std
sub
cmp
out
pop
test
inc
and
rclb
dec
inc
in
adcl
jb
lods
add
stc
xchg
pusha
mov
inc
add
iret
cmp
mov
popa
add
inc
cmp
cld
push
es
shrb
pop
data16
xlat
or
xor
daa
jnp
jp
jnp
adc
dec
outsl
add
mov
jnp
fldcw
inc
sub
test
push
ret
bnd
mov
xchg
movl
xor
lret
mov
lret
jne
test
data16
stc
xchg
out
or
mov
mov
imul
popa
or
insl
mov
xor
xorl
push
jo
mov
fs
jne
out
nop
lock
mov
test
xlat
push
addr16
fbstp
loop
into
data16
ret
ss
push
aas
mov
sti
insl
jns
sbb
test
fisubs
add
in
ret
aaa
or
sbb
arpl
and
fisttpl
inc
cmpsl
jno
xchg
mov
cmp
pop
and
shr
mov
in
jge
mov
adc
fwait
outsl
loope
adc
fwait
insb
mov
mov
int3
mov
push
xchg
xor
xlat
sbb
push
cmp
mov
cmc
mov
xor
push
insb
push
jl
insb
sbbb
add
sub
adc
or
mov
xlat
aam
mov
xchg
push
in
xor
xorb
and
push
or
insl
clc
sub
cmpsl
jbe
iret
enter
push
sarl
out
int
cltd
leave
es
adc
pop
or
aad
xchg
cmp
jnp
mov
lea
xor
pop
push
cmp
push
fstp
dec
rorb
cmp
mov
push
outsl
cmc
sahf
outsb
pop
je
push
add
mov
mov
cmp
and
pop
jns
cmpsb
pop
xor
adc
loope
ret
and
rorl
sbbl
jb
inc
adc
jnp
pop
add
mov
or
dec
mov
and
mov
xchg
arpl
aas
addb
push
mov
jg
test
mov
mov
cli
add
stos
mov
js
cmpsb
int
data16
and
fsubrl
adc
mov
cld
jecxz
es
mov
and
test
ficoml
pop
sahf
in
hlt
mov
icebp
mov
jp
sbb
repz
sbbb
jbe
bnd
inc
pop
ret
push
add
sbb
call
int
fdiv
and
xchg
aas
xchg
inc
xchg
or
add
mov
ja
mov
rcrl
dec
mov
add
jbe
cld
cmpsl
scas
addr16
jb
repz
pop
subl
ss
fwait
sbb
inc
sub
pop
mov
enter
cmp
sub
pop
inc
call
xchg
jbe
inc
les
and
ror
fstp
shrl
sub
sub
fdivrs
movsb
adc
dec
mov
dec
inc
int
inc
mov
cli
testl
jg
lock
test
stos
inc
push
xor
orb
out
scas
xor
ja
lock
and
dec
idivl
dec
aaa
xchg
jne
cmp
xor
shrl
ja
sahf
enter
push
test
in
pop
dec
leave
fwait
mov
or
push
mov
sbb
jl
ret
push
ss
out
cmp
gs
lods
adc
mov
rolb
aaa
lock
inc
xor
xchg
xchg
stos
aaa
xor
cld
and
aam
je
mov
jo
inc
or
sub
je
pop
outsb
stos
imul
push
mov
adc
es
mov
mov
int
mov
movsl
test
mov
scas
mov
push
pop
psubb
das
les
cld
insl
mov
stos
push
fucomi
stos
xchg
mov
les
add
cmp
out
jno
xchg
fcmovnu
mov
mov
into
add
and
mov
adc
cld
mov
cmp
test
sbb
jecxz
xchg
pop
pop
push
or
dec
inc
insl
cli
cmpsl
js
hlt
out
rol
lock
push
lds
add
lods
sahf
fistps
popa
mov
inc
sbb
dec
or
add
iret
mov
sub
pusha
mov
jns
ds
inc
sbb
xor
adcl
jbe
hlt
fwait
and
sub
mov
sbb
hlt
fcomps
int
pop
iret
pushf
cmp
inc
mov
and
pop
sahf
inc
dec
fs
xor
pop
cmp
repnz
lret
jnp
cmpsl
in
sarl
xchg
jb
jecxz
fcom
cltd
mov
out
loope
sbb
rolb
adc
dec
mov
out
xchg
loope
addr16
fstpl
in
jns
or
xor
leave
and
aaa
test
popa
outsl
xchg
loope
cmp
or
test
jae
or
pop
dec
aas
inc
dec
bound
dec
jl
popa
dec
rol
xchg
pusha
mov
out
cmpsl
push
dec
jne
loope
pop
test
fcompl
push
lock
xchg
dec
pushf
imul
xchg
ljmp
arpl
cmp
jecxz
and
sub
cmpsb
in
cwtl
sti
jmp
push
pop
fs
inc
gs
psubusb
lcall
add
ret
inc
dec
or
test
sub
out
xchg
push
cmpsl
mov
adc
stos
xlat
lods
or
lock
sbb
adc
add
mov
sub
xor
mul
sbb
mov
cli
pop
movl
cltd
inc
push
push
inc
mov
into
icebp
jno
xchg
lods
ret
cmpsb
mov
mov
jno
jle
stos
jecxz
add
insb
repnz
xchg
xor
mov
jl
cmp
mov
xchg
dec
lret
enter
adc
cli
jo
in
jno
add
cmpl
cs
mov
je
cmp
push
fwait
cmp
nop
jecxz
pop
gs
or
mov
jmp
orl
jecxz
jp
jmp
sti
roll
xchg
xor
dec
test
aam
push
jbe
jnp
pop
mov
sarl
pusha
std
cld
fdivrs
jge
test
push
jl
subb
xchg
add
sbb
push
loop
mov
and
jg
push
xor
mov
sti
loope
push
add
or
lock
mov
filds
fcmovne
mov
or
call
mov
sarb
cmp
mov
inc
je
mov
aam
dec
fsubs
lock
insb
out
mov
ficoml
dec
push
data16
mov
stc
cld
sbbb
leave
jecxz
pushw
jmp
fcoms
mov
in
leave
mov
das
fucomip
cmpl
lea
cmpsl
mov
cmp
ret
fdivl
sbb
arpl
jmp
pop
or
cmpb
mov
adc
adc
test
out
fs
pop
das
ret
daa
cld
pop
in
pop
sbbl
mov
lods
loopne
stos
sbb
cwtl
hlt
mov
shll
cmpsb
add
lods
xor
cmp
adc
les
fistpl
test
sub
sbb
sub
add
or
jae
adc
cltd
loope
out
in
cltd
shll
loop
hlt
scas
cmp
sub
xchg
and
roll
mov
scas
ds
repnz
test
sub
icebp
push
mov
adc
xor
bound
pop
scas
inc
and
adc
out
roll
lret
push
pusha
xchg
pop
aas
fucom
add
adcl
and
push
ljmp
add
jno
clc
scas
test
dec
mov
xchg
cmp
inc
push
push
cmpsl
ret
or
mov
sub
mov
cmp
add
leave
jne
jnp
mov
lret
xchg
popa
mov
xchg
lahf
cmp
jnp
aaa
add
lea
jecxz
xchg
jge
sbb
negb
jp
or
mov
ret
sbb
aaa
pushl
mov
jecxz
mov
push
les
mov
mov
lret
or
inc
jae
insb
mov
in
mov
sbb
scas
dec
fdivrs
addb
icebp
idiv
mov
incb
clc
stos
pop
mov
int
adc
inc
push
xchg
jae
inc
push
xorl
sbb
or
xchg
jno
out
jb
dec
xchg
mov
std
push
or
mov
and
sbb
sub
test
es
int
lods
aaa
rclb
iret
cmp
or
add
push
stos
lahf
pop
inc
out
push
inc
out
push
mov
cltd
jecxz
es
mov
xchg
pushf
aas
into
int3
mov
adc
iret
ds
cmp
repz
sub
mov
nop
jne
arpl
pop
loop
sbb
mov
pop
aas
fwait
mov
out
pop
mov
loop
jae
shll
dec
push
sub
inc
cltd
dec
mov
push
sub
mov
ret
aad
add
mov
scas
sub
testb
xor
gs
push
sbb
jns
push
lea
jo
and
std
mov
mov
sub
jo
sub
insl
aam
sub
cmp
sub
sub
stos
test
dec
xor
cmp
pop
push
add
jb
jp
or
icebp
dec
out
inc
pushf
pop
out
mov
shlb
inc
pop
mov
inc
dec
add
xchg
cmp
inc
and
xchg
jnp
movsb
xchg
addr16
insb
outsb
xchg
leave
jg
dec
dec
je
push
sti
je
punpcklwd
repz
mov
cmp
lret
jmp
mov
repnz
push
js
scas
and
xchg
dec
movsb
jle
in
ret
repz
stos
dec
push
jle
xlat
popa
scas
aad
aas
cmpsb
fwait
dec
lock
lods
mov
mov
lret
stos
nop
lock
mov
inc
ljmp
mov
mov
cmp
dec
cs
inc
mov
mov
xchg
and
je
xchg
sub
dec
sub
mov
add
xor
or
js
pusha
mov
fisubrl
xor
popa
adc
push
pop
jne
pop
je
test
orl
aam
lret
shrb
insb
xor
mov
fsts
add
xor
shr
jg
jae
sahf
imul
mov
cld
mov
mov
inc
movsb
test
xor
nop
or
mov
push
xchg
rorl
out
out
lds
mov
xor
mov
mov
adc
sbb
je
mov
cmp
inc
fucom
xchg
fildl
jle
pop
mull
sub
mov
or
add
popa
push
je
test
pop
sbb
sub
or
dec
fistpl
into
push
ds
fmull
jae
lds
adc
test
xchg
int
pushf
hlt
test
lods
jl
test
test
cmp
mov
cmp
ja
cmp
les
lea
scas
dec
imul
inc
mov
mov
push
push
adc
sub
push
stos
clc
push
sbb
mov
jp
lret
iret
fistl
insl
dec
out
lret
mov
into
aam
lods
out
popa
xor
cld
mov
mov
fsubrs
cli
mov
xchg
dec
cltd
negl
jp
movsl
adc
push
mov
movsl
cmp
mov
mov
push
out
adc
jl
in
push
jno
pop
stc
aad
pop
mov
into
mov
and
pop
roll
jge
mov
push
scas
xchg
orb
dec
mov
pop
adc
sub
aaa
sbb
dec
insb
add
ljmp
mov
push
mov
sbb
xor
sbb
push
add
push
jne
xor
mov
es
enter
jnp
adc
sti
stc
xor
shll
mov
jb
test
cmp
xchg
pushf
lea
cmp
sti
pop
popa
sti
popa
mov
daa
push
lods
sub
push
rorb
mov
popa
mov
clc
mov
sub
pop
jnp
imul
mov
jle
dec
mov
pop
es
data16
ret
movsb
test
sti
ljmp
jl
movsl
jb
cmp
sub
inc
push
sahf
fldl
push
inc
jge
cmp
leave
mov
fistpl
out
adc
movsl
jbe
fdiv
adc
into
lods
xchg
int
sbb
outsb
out
imul
push
int3
je
sbb
push
jnp
inc
rcrl
or
xchg
rorb
inc
fcom
mul
push
fnstenv
mov
insl
dec
subb
imul
out
movsb
aas
pushf
inc
lea
dec
scas
pop
shrd
pop
aam
sbb
sub
xchg
inc
cmpb
inc
loopne
or
jo
mov
leave
sub
cmp
adc
mov
pop
cwtl
mov
les
pushf
out
fdivrp
sub
data16
lret
xchg
je
xchg
jg
fisubrs
adc
lock
repnz
loope
or
or
pop
mov
sbb
movsl
aam
loope
fsts
mov
xor
jle
out
imul
out
add
shll
test
pusha
pop
pop
mov
fwait
pop
adc
xchg
hlt
inc
adc
and
mov
repnz
jle
movl
xchg
dec
decb
push
lret
jo
data16
mov
subl
or
aam
dec
and
aaa
pop
outsl
call
adc
jbe
scas
or
roll
out
bound
inc
pop
jle
xchg
lock
ret
mov
pop
cmp
gs
jae
cmp
shlb
push
and
mov
aam
xor
test
xchg
dec
imul
daa
rcll
shl
ljmp
stos
mov
cmp
rep
frstor
push
xchg
shl
adc
ud0
add
cli
dec
push
inc
pop
pushf
fucom
xor
jecxz
ffree
test
push
pop
cld
xchg
push
add
jnp
psllw
ss
and
loop
pop
ja
repz
jne
subb
push
lock
push
sub
or
mov
inc
and
outsl
sbb
iret
cmp
sarb
leave
xchg
xchg
sbb
dec
pop
mov
mov
adc
dec
sahf
xchg
cmp
in
bnd
in
or
lods
and
inc
mov
push
cmp
out
pushf
jne
mov
dec
enter
xchg
sub
dec
mov
mov
rclb
sub
sbbl
jp
xchg
dec
pop
mov
adc
or
insl
stc
pop
mov
jl
push
popf
out
arpl
and
inc
lds
in
aam
pop
mov
push
cmc
movsb
hlt
mov
xor
mov
sbb
jo
divl
out
lea
int3
pop
push
jg
scas
dec
adc
mov
lahf
and
add
mov
test
pusha
rclb
mov
add
arpl
mov
dec
mov
add
fwait
xchg
cmpb
dec
sub
add
stos
leave
in
or
data16
cmp
jge
push
add
mov
lret
add
push
xchg
addr16
xor
xor
sub
push
jne
pop
sbb
cmp
xlat
adc
mov
jmp
enter
inc
xchg
cmp
sbb
push
scas
aaa
mov
leave
jo
lds
repz
lods
sbbl
or
mov
xor
movsb
cmp
movsl
adc
fadd
cli
fdiv
js
dec
jo
cmp
popf
out
or
dec
stos
pop
or
jg
jb
in
enter
cmp
js
outsb
or
mov
repz
add
jl
xor
icebp
outsb
mov
cld
int
pop
stos
mov
xchg
cmc
push
inc
and
pushf
lods
mov
mov
pushf
cmp
lea
flds
push
push
cmp
add
mov
jb
xchg
mov
sub
mov
and
dec
scas
in
add
fsubrl
bound
pop
sub
outsb
jb
cmp
mov
mov
aaa
sbb
pop
jo
lods
and
pop
lds
lcall
mov
xchg
pop
xor
jp
loop
ss
push
mov
or
or
std
lahf
and
sbb
inc
mov
std
incl
cmp
mov
iret
aaa
or
outsl
cmp
outsl
or
std
fbstp
fists
pusha
cmp
adc
or
fsubs
xor
pop
cwtl
adc
hlt
jg
cli
add
jmp
lock
xchg
test
lahf
xchg
outsl
fisubrs
scas
popf
lock
mov
inc
and
mov
loopne
out
xchg
mov
scas
fwait
mov
cmp
jg
dec
mov
jns
xlat
jg
or
pop
arpl
inc
cmpsb
or
jp
mov
shr
roll
dec
pop
sbb
leave
push
push
xchg
adc
lods
pop
push
cmp
pop
inc
xchg
stos
xchg
pop
lret
pop
jmp
outsl
dec
xor
push
xor
lods
jno
lret
push
lods
adc
test
insl
pushf
add
jl
xor
popf
ds
addr16
xchg
fwait
dec
or
and
jbe
mov
add
jmp
orb
xor
das
mov
sbbl
insl
ret
sub
and
jp
outsl
mov
dec
subl
pop
mov
into
cmp
negb
dec
push
jns
hlt
jb
pop
sbb
clc
mov
cmc
js
dec
push
or
mov
cmp
sbb
inc
jbe
pop
sub
adc
inc
push
stos
in
cs
outsb
sbb
ror
rcrb
outsb
mov
test
mov
cmpsl
jno
icebp
dec
loop
xchg
lods
sbb
mov
clc
push
mov
sbb
cwtl
xchg
adc
cltd
inc
cmpsb
cmp
pop
lods
sub
sahf
cwtl
rolb
leave
aas
pop
mov
mov
shr
push
xchg
cli
jle
adc
mov
les
mov
or
mov
fmuls
gs
jnp
or
mov
pop
cld
icebp
inc
int
push
mov
inc
inc
ss
jns
fadds
dec
ljmp
push
cmp
adc
scas
adc
jp
jle
mov
stc
xchg
mov
jle
lds
outsl
ficoml
fcmovu
out
iret
rorl
mov
mov
outsb
fidivs
sub
outsl
movsb
xor
mov
mov
or
jl
int
test
sub
sbb
push
or
test
xchg
test
sarb
push
std
fistpll
pop
inc
in
mov
adc
sub
pop
pop
mov
fildl
fwait
daa
and
cli
mov
and
testb
or
repnz
pop
test
cmpsb
nop
pop
xor
arpl
shll
fwait
mov
std
xchg
mov
test
scas
jns
mov
inc
sbb
push
push
call
xchg
aas
enter
fwait
sbb
adc
or
arpl
jns
test
outsl
cmp
in
std
mov
insl
pop
push
stc
in
xor
pushf
ds
mov
sbb
sbbb
add
pop
std
in
sbb
std
cmp
push
dec
ret
jecxz
push
mov
sbb
cwtl
popf
pop
clc
enter
adc
scas
xchg
push
test
inc
repnz
dec
mov
mov
faddp
scas
sub
aas
gs
jne
test
pop
hlt
movsb
pop
cmp
or
mull
xchg
js
jo
fidivrs
pop
sti
and
and
pushf
data16
push
stos
aaa
das
lods
ss
ret
inc
call
inc
push
push
int
jmp
pop
js
sahf
pop
adc
mov
inc
aas
jo
pop
mov
testl
aas
push
sti
aaa
mov
dec
mov
dec
ds
adc
imul
push
sahf
sub
aam
stos
or
sbb
inc
xchg
or
dec
lods
jne
add
push
jno
les
jbe
test
mov
sbb
adc
push
dec
repnz
mov
stos
mov
xchg
call
cld
cmc
in
jno,pt
sarb
fsubrl
push
push
sub
shll
dec
xor
dec
adc
or
jno
jle
stos
daa
mov
push
nop
in
inc
mov
pop
outsb
cmp
add
and
fldl
ret
jo
vaddsubps
sbb
js
cltd
dec
mov
subb
sub
aad
dec
sbb
lret
jg
fwait
jle
push
mov
mov
fldcw
dec
jl
insb
fwait
lret
push
sahf
inc
pop
fnsave
add
add
mov
shl
xor
fbstp
mov
xchg
mov
in
and
push
push
cmp
ds
pop
std
aad
cmpsl
leave
call
or
and
icebp
sub
inc
scas
jae
and
xor
mov
xor
out
adc
aad
cmpsb
inc
xchg
cmpsl
push
ds
mov
mov
cltd
cmpsl
dec
and
mov
xchg
in
hlt
ja
xor
addb
dec
mov
or
push
gs
mov
nop
fistpl
and
sbb
ljmp
xor
jne
pusha
loopne
sbb
mov
adc
inc
pop
shll
arpl
add
sbb
xchg
sbb
sub
and
push
adc
lret
pop
xchg
in
mov
adc
inc
js
cli
lea
add
int
pop
inc
add
pop
bound
stos
in
cmp
cwtl
mov
and
std
mov
aad
jmp
adc
and
out
xchg
nopl
rclb
jne
cmp
cmpsb
jg
mov
lret
jg
daa
sbb
xchg
and
sub
cmp
jmp
aas
mov
add
fidivs
push
fldenv
sbb
cld
insb
outsb
jmp
xchg
pop
daa
mov
jle
add
or
push
push
jmp
rcll
shlb
es
mov
sbbb
stos
mov
xchg
dec
int
je
add
push
pop
insb
mov
mov
repz
ret
leave
xor
fs
or
in
jp
mov
lcall
adc
and
loopne
int3
inc
and
mov
xor
pop
and
adc
xor
lds
loop
inc
xor
mov
les
icebp
leave
pop
pop
or
jle
and
xchg
push
cmp
and
xlat
jmp
pop
leave
xlat
push
add
mov
xchg
jecxz
imull
shll
popa
pushf
addl
pop
dec
movsl
push
mov
jge
test
insl
add
loope
push
add
push
bound
addl
mov
lret
idiv
push
xchg
and
mov
jp
inc
pop
add
and
and
pop
aaa
jb
inc
outsl
push
sbb
or
loope
cmpsl
jp
push
xchg
stc
push
movsl
lea
mov
jg
xchg
in
mov
pop
in
push
mov
fndisi(8087
scas
inc
ret
and
mov
dec
pop
in
lods
in
pop
sahf
inc
and
xchg
ret
mov
xorb
dec
dec
lods
sbb
loopne
jle
lret
addl
out
loop
adc
inc
cmp
add
mov
push
jg
stos
hlt
cld
cmpsb
mov
clc
repnz
jp
mov
cmp
or
mov
sub
sub
lock
cmp
push
fs
push
xor
mov
adc
sub
pop
push
cld
ss
dec
mov
and
outsl
in
xchg
rorb
mov
adc
roll
cmp
shlb
inc
add
hlt
xlat
subl
xor
fs
sub
lcall
push
pop
insb
rorb
outsb
fwait
das
mov
push
jmp
insl
and
xchg
inc
xor
loopne
test
test
pop
stos
hlt
jle
mov
nop
inc
jmp
push
push
mov
and
into
mov
dec
inc
leave
cmpsl
mov
cmpsb
mov
lods
mov
jp
fidivl
testl
dec
xchg
dec
add
dec
int3
stos
pusha
jmp
push
mov
mov
sbb
push
mov
adc
sub
pop
push
out
push
outsb
jmp
bound
std
xor
sbb
cmp
sub
fcmove
and
mov
test
jge
jecxz
stc
mov
inc
inc
add
xchg
fxch
adc
push
and
pop
call
data16
out
iret
mov
rorb
mov
xor
test
fsub
pusha
loopne
and
cmp
rorb
jo
or
sbb
cmp
inc
loope
int
jne
push
add
fwait
shr
leave
pop
adc
nop
pop
xchg
xor
or
out
sti
dec
daa
fsubp
lds
in
sbb
and
add
imul
inc
mov
loopne
mov
fs
js
dec
sahf
pop
movsb
push
cltd
lock
leave
xchg
xchg
int3
mov
ljmp
arpl
fisttpll
inc
nop
sub
out
inc
mov
dec
cmpsl
push
iret
insb
inc
daa
pop
mov
jl
jb
mov
inc
xor
lret
push
xchg
jp
mov
mov
sbb
xchg
orb
and
cld
rorb
iret
in
cmp
sbb
mov
arpl
stos
mov
or
pop
push
int
mov
leave
loop
dec
sub
cwtl
inc
xor
test
aad
daa
cld
jbe
orl
mov
scas
jge
push
jg
inc
adc
cmp
sbb
xchg
insl
sub
mov
pop
push
xchg
out
xchg
ror
inc
mov
add
cmc
outsl
pop
mov
mov
es
inc
sti
ss
mov
mov
fcom
or
lahf
cmp
jge,pn
out
push
sub
cli
in
outsb
adcl
test
mov
mov
inc
cltd
pop
jns
call
pop
idiv
xchg
cwtl
test
push
fwait
inc
or
shlb
jl
int
push
pop
shlb
push
add
mov
ds
adc
jb
dec
mov
xchg
sbbl
jmp
or
int3
push
fsubp
sbb
add
xor
pop
push
fwait
mov
repnz
mov
push
push
jo
pushf
or
lods
pushfw
xlat
pop
push
mov
mov
test
mov
ss
sub
stos
cwtl
add
stos
call
fs
filds
shll
pusha
fidivs
addb
inc
or
xor
hlt
inc
sub
adc
es
scas
xchg
adc
xor
jp
jp
imul
out
cmpsb
mov
push
stos
in
ret
jg
push
push
jne
add
push
mov
add
ljmp
pusha
xchg
cltd
xor
in
fsubrl
and
jg
mov
dec
sbb
jl
popf
in
inc
adc
cmp
js
sarl
lret
test
repz
cwtl
data16
push
test
fldcw
hlt
push
dec
inc
stc
fcom
jb
aaa
mov
xor
popf
outsb
loope
clc
mov
sbb
jmp
stos
xor
clc
dec
dec
dec
push
inc
adc
ret
cltd
mov
adc
inc
xchg
xor
add
test
xchg
xchg
sbb
repz
div
insl
jnp
sub
push
mov
les
dec
int3
mov
push
pushaw
hlt
adc
mov
push
sbb
pop
rorb
scas
cmpsl
lahf
xchg
lret
enter
into
inc
js,pn
mov
jb
xchg
mov
je
mov
inc
mov
dec
mov
rorb
sub
push
add
cmpb
sub
inc
inc
add
and
inc
and
fsubrl
je
mov
mov
pop
jns
call
pusha
repz
iret
icebp
cmp
add
int
movsl
sbb
or
in
je
mov
fmuls
mov
rcll
dec
and
pushf
inc
jl
xor
imul
jae
add
rcrl
push
pop
cmc
jno
jne
pop
cmp
xor
and
call
out
jge
pop
or
js
xchg
xorb
mov
ss
in
push
jmp
pop
loop
data16
push
fucomp
mov
sub
or
in
jns
pop
push
cltd
xchg
fsubr
mov
shl
scas
xchg
clc
loope
cwtl
pop
ja
add
push
in
imul
sbb
rol
lret
in
dec
or
aam
shrb
call
cmp
and
sbb
xchg
sbb
jl
stos
add
sub
mov
lods
std
or
decl
dec
jge
mov
jecxz
outsb
lock
in
pop
pand
lahf
sbb
into
mov
add
icebp
cmp
or
xor
aas
ds
dec
icebp
push
dec
test
xor
mov
dec
out
andb
jp
rcr
aad
mov
stc
pop
cmp
jecxz
xchg
push
dec
push
in
sub
ljmp
data16
cmp
mov
into
dec
shlb
lds
aaa
addr16
and
icebp
sbb
inc
xor
xchg
xchg
pop
out
movsb
pop
or
xor
mov
xchg
fcomps
cld
mov
loope
loopne
push
and
xchg
addr16
sbbb
rcrl
les
lods
push
repnz
cmp
addr16
repz
xor
pushf
nop
xchg
shll
pop
fwait
mov
inc
xchg
mov
add
inc
push
xchg
mov
imul
inc
dec
aaa
jns
mov
loop
stc
gs
jl
mov
xchg
add
or
sbb
test
test
and
lahf
sarl
add
enter
cmp
ds
and
sbb
leave
cmp
aas
int
push
or
das
adc
cltd
aam
aas
adc
jmp
test
out
mov
dec
inc
dec
xor
aad
pop
lods
xchg
add
push
sub
jge
shll
and
xchg
push
sub
sub
rcrb
in
mov
jns
mov
popf
cmp
pop
mov
loopne
stos
add
je
or
gs
int3
jg
loope
push
shr
insb
jne
imul
dec
sti
stos
adc
sub
inc
dec
pop
mov
mov
xor
push
popa
ss
or
or
jno
jb
scas
and
and
out
cs
mov
push
inc
xor
or
addr16
insb
dec
push
fs
into
push
and
push
addb
test
jbe
xchg
sub
xor
mov
sbb
mov
fwait
lret
addl
mov
je
movsb
pushf
je
cmp
std
push
add
int3
xor
fsubl
xchg
cltd
outsb
or
sarl
jp
std
cwtl
dec
pop
notl
xor
mov
popf
cwtl
inc
jae
out
in
out
dec
lods
add
add
loopne
pop
mov
mov
daa
mov
sbb
cmpsl
jp
rorb
pop
notl
sbb
dec
lock
pop
popf
mov
xlat
fcomps
not
adc
mov
lock
in
push
cmp
test
mov
imul
fldl
fdivrs
mov
inc
jb
rorl
mov
cmp
cmp
add
cmpsb
mov
lcall
cli
bound
adc
cmp
dec
enter
cmpl
push
jl
lcall
pushf
leave
hlt
cwtl
ret
xchg
ficoms
dec
shrb
fxch
fwait
push
push
xchg
jnp
jp
jnp
lret
cmp
pop
add
jae
lahf
setns
shl
loopne
mov
test
jmp
fsubrl
lret
js
pop
sbb
into
fimull
xchg
and
shlb
xor
popa
jbe
pushf
jnp
jns
xor
mov
sub
call
ljmp
lret
xchg
sub
movl
mov
popa
stos
jne
push
call
sub
and
cmpsb
fistpll
div
jbe
dec
cwtl
xor
inc
movsl
les
adc
test
rolb
pop
fcoms
or
fidivs
adc
sub
std
cmp
xorl
inc
loop
fucomi
mov
sarb
enter
jge
popa
mov
jg
leave
maskmovq
sbb
nop
popa
push
and
decl
pop
repz
inc
in
mov
inc
sbb
and
and
fisubrl
inc
andl
popa
addr16
mov
ret
mov
aas
lods
xchg
fs
std
out
adc
cmp
add
arpl
pusha
pop
aad
inc
ret
push
cmp
and
dec
lods
cmp
xor
push
iret
cmpsl
push
jecxz
xor
and
in
sbb
dec
andb
imul
sahf
or
ds
shlb
aas
cmc
repz
jne
mov
push
dec
daa
push
leave
cmpsb
xlat
out
out
adc
ret
jo
push
sbb
lahf
imul
pop
dec
fmull
xchg
mov
lods
ljmp
push
cli
sbb
add
sub
mov
mov
ret
push
xchg
mov
mov
mov
fisttpl
push
icebp
fisttpll
push
adcb
xlat
ds
cli
dec
mov
mov
in
dec
or
mov
inc
or
jmp
int
aad
adc
xchg
cltd
mov
jge
cmp
sti
push
xchg
jne
mov
rorb
call
lods
jnp,pn
or
mov
xchg
xor
dec
cwtl
out
mov
push
mov
pushf
notb
cmpsb
js
cltd
jle
xor
rcll
repz
adc
jno,pt
pop
faddl
mov
dec
pop
addb
mov
push
pop
sti
insb
jp
and
sub
lahf
xor
call
test
cmp
mov
outsl
scas
sbb
rcr
cmp
ljmp
mov
sbb
inc
pop
rclb
clc
imul
js
lret
dec
push
and
ss
int3
adc
xchg
les
mov
sbb
pop
fxch
dec
push
nop
bound
jle
pop
in
fdivrl
ds
mov
mov
and
lods
cmp
push
cmp
rcrb
sarl
andl
lea
fwait
push
and
cmp
mov
dec
push
jle
dec
mov
or
pushf
scas
mov
aas
jp
mov
add
sahf
jae
xor
xor
jmp
das
cld
movl
mov
js
lret
mov
push
neg
aas
test
add
add
jae
lahf
ret
in
jno
pop
in
mov
adcb
push
addb
push
lock
adc
cli
pushf
out
out
jo
sbb
inc
ret
movsb
mov
lcall
insl
fidivrs
or
push
dec
dec
cld
shlb
cwtl
scas
les
dec
gs
fists
je
mov
test
std
inc
fdivl
lret
jle
lcallw
cld
push
mov
test
scas
push
dec
mov
push
cli
dec
xor
adc
out
gs
mov
cmpsb
xchg
dec
and
test
jb
aas
je
pusha
ljmp
xor
or
adc
data16
push
adc
popa
mov
shr
mov
cmc
stos
stos
dec
fnsave
daa
inc
adc
mov
lea
jno
cmp
lods
jecxz
mov
ret
add
aam
cmp
and
or
jmp
adc
addr16
jp
or
outsb
stc
xchg
sbb
enter
mov
jae
ret
fnstsw
jae
xchg
scas
push
dec
dec
adc
dec
outsb
enter
mov
or
mov
jno
inc
xor
aad
icebp
fs
inc
pushf
loop
cmpsl
scas
cmp
mov
xchg
pop
add
aaa
inc
dec
sub
and
push
ss
cld
jge
clc
push
bound
sti
shrb
xchg
jb
mov
mov
jno
aam
negl
iret
add
sbb
js
je
xchg
sar
cmp
and
call
adc
jnp
sub
pop
ret
xchg
xlat
in
fstpt
sbb
xor
es
and
cmp
mov
in
push
xchg
pop
rclb
push
scas
jle
aas
mov
dec
or
leave
mov
jl
lock
xor
fldt
dec
int
mov
insb
pop
dec
inc
outsb
sbb
fisttpl
mov
cwtl
xor
call
cli
and
test
lods
ret
sqrtps
pusha
add
mov
ss
xor
leave
aaa
aam
lret
xlat
xor
ds
fbld
cwtl
adc
jg
dec
mov
jae
stos
inc
xor
or
sub
mov
xchg
xor
sbb
das
pop
leave
mov
popa
mov
and
cwtl
out
lods
jl
js
mov
and
sbb
fcompl
and
push
adc
mov
mov
push
test
andb
mov
lahf
hlt
jns
pusha
xchg
movsb
push
out
cmp
jnp
add
les
inc
pop
mov
pop
dec
or
in
fucomip
adc
adc
jno
jmp
jl
ja
nop
insb
pop
or
or
jg
xchg
mov
inc
jg
aaa
ss
push
in
bound
mov
rcrl
inc
notb
jle
push
int
idiv
pop
jl
popf
test
loop
dec
movsl
sti
mov
stos
sbb
jbe
test
dec
stos
cmp
shll
jo
fsubp
addb
lahf
mov
jno
adc
ffree
adc
dec
adcb
inc
ljmp
int
sbb
dec
test
mov
enter
inc
xchg
int
mov
and
cmpsb
popa
xlat
in
out
movsb
mov
cwtl
inc
movsl
stos
sbb
clc
sub
movb
nop
notl
push
stos
push
pop
jp
xchg
pop
loop
inc
ja
popf
fisubrl
dec
lods
leave
mov
push
shrl
sarb
mov
lea
mov
jns
int
aas
jnp
push
bswap
and
mull
mov
push
es
jns
out
xchg
bound
adc
cmp
das
pop
mov
fucom
test
ja
movb
jo
jo
scas
fcompl
in
ja
outsl
int3
add
clc
cmp
mov
movsl
pop
pop
xor
xor
int3
add
js
push
add
pop
mov
mov
pop
mov
xor
sub
push
lds
orl
subl
mov
dec
mov
mov
dec
add
fldt
filds
outsl
xor
add
pop
cs
add
pop
jne,pn
cmp
jge
push
adc
and
and
fs
imul
push
ret
jnp
adc
std
xor
call
cmpl
cs
fsubrl
adc
mov
sbb
and
stos
nop
pusha
or
xchg
ret
xor
repz
pop
adc
push
inc
js
hlt
mov
pushf
mov
sbb
add
popa
jg
notl
jge
notb
andb
std
popf
push
inc
js
movsb
inc
out
lcall
pushf
xchg
inc
mov
xor
aam
cli
jge
jg
daa
fisubrs
cltd
frstor
mov
das
lret
aam
push
or
sti
fs
pop
mov
pop
jno
dec
mov
sbb
lea
mov
xchg
out
push
int3
lea
push
push
arpl
and
dec
es
scas
pop
sbb
jp
xor
jne
dec
mov
pop
loopne
pop
das
nop
out
int
fmull
shll
rol
fbstp
cmp
pushf
paddq
lods
mov
and
jp
cwtl
movsb
or
cli
sub
push
cmpsl
sub
or
or
fisttpll
sbb
add
icebp
arpl
xchg
sub
jns
xchg
orb
adc
push
push
inc
vpacksswb
and
xor
movsl
jnp
add
jmp
jo
push
fldenv
int
and
xchg
sub
lds
fsubl
inc
mov
out
pop
jl
pop
cmp
popa
push
mov
jb
icebp
or
pushf
das
mov
lahf
lret
loop
scas
mov
jp
or
or
sbb
aad
insl
scas
add
mov
xor
leave
xchg
shlb
sub
fisubrl
add
mov
cmp
sub
pop
loope
inc
roll
jo
jae
pop
inc
movsb
dec
arpl
mov
push
iret
out
sub
stos
ds
aas
fdivs
pop
jge
and
insl
addl
mov
movsb
push
push
sahf
xchg
orb
xchg
add
outsb
xchg
xor
popf
fstpt
stos
cmp
or
mov
int
iret
add
js
xor
nop
jnp
jne
mov
in
mov
adc
xchg
add
mov
ret
fdivp
sub
das
and
jle
xor
aam
imul
jg
fcomi
dec
xchg
enter
pop
cmp
test
shrl
data16
icebp
xor
call
std
pop
sbb
dec
inc
repz
pop
sahf
xor
adc
int
inc
xchg
sahf
std
push
hlt
mov
lcall
mov
add
jne
jnp
inc
push
data16
dec
jmp
xor
mov
inc
stos
inc
cmp
mov
jp
das
inc
or
or
xlat
idivb
and
in
mov
lock
jbe
mov
js
std
aam
adc
jmp
jbe
mov
adc
repnz
pop
fnsetpm(287
xor
sahf
xor
out
outsb
inc
cmpsl
push
fidivrs
ret
hlt
and
pop
adc
decl
popa
mov
mov
test
out
mov
push
pop
lods
insb
mov
out
inc
jmp
mov
leave
sub
adc
jnp
mov
mov
cmpsl
dec
movsl
sbb
lea
bound
in
addr16
jae
jne,pt
out
xchg
mov
dec
and
jge
popf
sahf
flds
mov
icebp
jno
inc
lret
add
stos
int
push
xchg
aas
in
repnz
dec
push
test
sbb
push
inc
xchg
dec
je
mov
lret
push
popf
test
adc
insl
or
or
je
xchg
jecxz
jae
fucomp
cmp
das
mov
and
xorb
sbb
jbe
and
popf
pop
popa
dec
mov
fsubl
in
mov
cmpsl
dec
int
and
inc
pop
sub
dec
lods
and
mul
sbb
es
test
sub
leave
ds
addl
jb
push
pusha
pop
out
mov
cltd
pushf
adc
daa
add
inc
cmp
adc
fs
ret
jo
xor
test
mov
divb
inc
sub
push
inc
jnp
cltd
ret
pop
stos
popf
inc
cld
ret
sub
and
or
mov
jne
mov
fisttpl
fdivrp
aas
gs
push
add
jb
mov
sbb
mov
mov
adc
mov
test
xor
rorb
dec
leave
mov
jg
xchg
ss
mov
dec
push
jg
or
ds
gs
call
jo
push
fildl
cmpsb
andb
lds
push
pop
lret
inc
sub
addr16
mov
js
adc
negl
popf
lcall
pop
repz
dec
push
adc
dec
sbb
hlt
inc
pop
xchg
mov
dec
stos
jno
xor
lods
pusha
mov
data16
jle
dec
dec
mov
in
aaa
enter
cmp
ret
js
div
mov
test
das
cltd
dec
imul
outsb
loop
xor
imul
push
xor
mov
dec
subb
lds
pop
fwait
add
push
mov
mov
cmpl
lods
ds
mov
mov
pop
mov
scas
jne
dec
sub
mov
inc
mov
test
call
add
cmpsb
pop
push
pop
lods
xchg
stos
sub
pop
pop
sahf
pop
sub
and
stos
jp
sub
js
pop
pop
shll
inc
pop
cmp
test
sti
sub
loope
data16
push
push
lds
mov
inc
cli
movsb
xchg
push
pop
imul
mov
roll
fdiv
test
xorl
ds
lcall
repz
addr16
popa
or
pop
sahf
daa
jge
loopne
rorb
jmp
dec
cmpsb
ss
in
lods
push
daa
jge
xchg
test
sbb
xor
mov
aam
mov
inc
imul
lret
push
pop
int
test
xchg
or
fidivs
mov
mov
and
add
in
pop
lds
mov
pop
mov
cmpsl
push
jns
aas
mov
pop
mov
sbb
fcmovbe
sbb
arpl
jge
cwtl
dec
cmp
mov
and
call
inc
div
outsb
aad
pop
dec
inc
add
dec
in
outsl
test
jp
or
aas
sbb
adc
mov
and
sahf
add
das
push
lret
mov
pop
inc
or
jo
cmp
xlat
dec
cmc
enter
mov
add
push
addb
adc
mov
lret
outsl
cwtl
nop
fstl
xchg
out
stos
hlt
je
iret
inc
cld
sbb
sub
adc
push
sbb
icebp
addr16
movsl
leave
test
ror
outsl
inc
and
fldcw
xor
cmp
push
adc
jns
jbe
push
insl
lea
js
mov
ret
push
lds
insl
pop
pop
mov
test
add
inc
inc
xlat
sub
rorl
stos
mov
adc
cmpsb
in
cwtl
enter
mov
popf
sbb
dec
jmp
sub
jne
aad
or
fwait
call
or
push
xchg
and
jae
shlb
cmpsl
fmul
xchg
push
jp
leave
add
adc
mov
mov
aam
pop
into
dec
pop
sbb
mov
popf
pop
cmpsb
inc
sub
lock
mov
loop
inc
icebp
xchg
movsl
mov
add
fsubl
jl
adc
ret
sbb
pop
fnsave
mov
jl
loop
cmp
jmp
cmpsl
inc
test
testb
push
lock
inc
jne
mov
inc
lcall
inc
mov
cmp
mov
inc
jmp
inc
mov
cmp
cmp
repz
mov
or
cmpsb
in
jp
push
je
add
je
sbb
push
das
enter
loop
mov
outsb
push
fst
xchg
mov
ljmp
jle
xchg
xchg
mov
lahf
push
lds
dec
cmp
jl
xchg
cld
out
dec
mov
xchg
std
into
inc
mov
adc
clc
lcall
jno
xchg
ds
lock
scas
aas
dec
push
test
mov
mov
xorb
movsb
xchg
xchg
add
xchg
movsl
call
jl
pop
scas
gs
xor
add
psllq
inc
ja
inc
out
jnp
movsl
ret
mov
mov
pop
pop
xor
fsts
jg
mov
sbb
cmp
mov
dec
xchg
push
popa
cmp
cmp
int
cmp
pop
fwait
test
pushf
enter
ret
fdivp
mov
enter
scas
xlat
adc
xor
mov
mov
inc
addb
push
sbb
aas
push
pop
cmp
jne
stos
push
pop
push
push
adc
sub
mov
rclb
mov
lret
sbb
les
mov
jp
dec
cmp
or
pop
cwtl
jle
jmp
sub
stos
in
add
cmc
inc
push
push
lods
cmc
mov
cmp
outsb
iret
inc
aam
scas
cmp
fisubs
dec
add
add
mov
push
cmpsl
ja
cmp
sahf
push
cmc
dec
adcl
call
mov
call
add
repnz
mov
ja
jmp
lods
fucomi
jecxz
jp
into
push
mov
pop
pop
xchg
ja
mov
jae
mov
insb
call
cmpsl
adc
inc
cmp
popf
push
sub
push
add
hlt
mov
idivl
push
pop
ret
mov
ss
ljmp
ds
movsl
cmp
ds
fcompl
aad
popf
adcb
mov
inc
pop
and
pop
loope
stc
ds
arpl
xor
sub
enter
add
fcomi
sub
add
push
call
rclb
mov
test
jl,pn
cmp
jbe
mov
mov
imul
sbb
pop
mov
dec
xchg
cltd
pusha
push
int
adc
dec
test
lock
mov
lret
test
fnstcw
adc
aam
pushf
xchg
mov
es
pop
inc
jno
mov
sahf
sbb
adc
int
out
xchg
insl
mov
mov
push
outsb
int
lds
mov
cli
lret
or
dec
dec
cmp
push
test
xorl
adcb
xor
out
mov
pop
xchg
push
fwait
pop
out
mov
push
push
push
pop
in
push
popf
push
ljmp
bound
imul
adc
mov
xchg
loopne
xor
add
popa
fidivrs
push
ds
inc
cltd
adc
jns
andw
add
sub
or
mov
jp
addr16
push
mov
lret
test
jbe
addr16
and
push
mov
mov
fs
pop
adcb
mov
or
adc
adc
cmp
ljmp
inc
loopne
inc
and
mov
sub
outsb
xlat
ljmp
bound
out
dec
jp
push
xor
nop
sbb
pop
xchg
push
int
mov
fistpl
into
cltd
cmp
fs
dec
mov
imul
test
cmp
or
xor
cmpsl
cwtl
test
aad
jecxz
roll
mov
aas
inc
stos
popa
imul
fidivl
push
sbb
insl
adc
aad
ficomps
or
jmp
nop
aad
inc
out
mov
mov
mov
or
adc
lahf
or
call
and
inc
mov
jns
cmovs
inc
mov
lds
push
ja
loop
push
test
xchg
jae
inc
dec
out
nop
ret
cmpsb
sub
push
mov
mov
or
and
inc
int3
mov
ja
inc
push
add
dec
adc
int3
pusha
xorl
daa
mov
and
in
lea
testb
pop
adc
or
out
pop
mov
jmp
add
push
sub
stos
jae
cmpsb
xchg
xorl
or
and
cmp
in
push
inc
ss
js
mov
ljmp
xchg
rorl
mov
mov
cmp
dec
rcr
jecxz
pop
icebp
js
loopne
sahf
faddp
int
shll
mov
mov
decb
add
loop
cmpsb
cvttps2pi
stos
in
movsl
pop
cmp
scas
rcrl
cwtl
orl
adc
mov
roll
lret
fldenv
nop
out
or
mov
mov
mov
mov
add
cmpl
addr16
sahf
sub
lea
pusha
mov
sub
divl
imul
scas
jne,pt
mov
xor
cli
lahf
cmpsb
dec
sub
andb
lret
mov
nop
add
sahf
imul
jo
sub
xor
cli
pusha
ds
andl
mov
into
mov
and
sarl
cmp
sbb
loope
imul
cs
sbb
mov
rclb
inc
es
sbb
icebp
jmp
test
movsb
fldt
adc
movsl
mov
xchg
cmp
addr16
jae
adc
negl
or
lods
jle
aaa
rclb
pop
jmp
xchg
inc
clc
add
lea
add
mov
imul
sarb
pushf
jb
sub
xor
pop
cmp
fisubs
call
pop
outsl
outsb
adc
insl
xor
and
mov
andb
lret
xchg
push
fdiv
sub
insl
sbb
lahf
sbb
jae
and
push
int
pop
bound
push
mov
scas
xchg
push
and
in
icebp
arpl
and
inc
nop
adc
fidivl
sbb
lods
pop
jge
addl
dec
ljmp
dec
imul
add
sbb
addl
ret
sti
inc
dec
xchg
and
frstor
mov
pop
push
dec
ljmp
lea
loopne
and
mov
gs
and
push
in
sub
or
pop
enter
rcr
dec
sbb
addr16
adc
std
inc
mov
jb
fwait
popa
cmp
xor
mov
dec
add
cmp
leave
cltd
jmp
enter
repnz
test
mov
fwait
lahf
ret
dec
or
push
xchg
xor
rorl
inc
add
push
fwait
test
dec
xchg
decb
cmpsb
mov
cltd
xor
cmp
mov
mov
add
cwtl
fists
add
and
push
and
inc
sub
add
pop
repz
xor
lcall
fs
push
outsl
push
subb
pushf
mov
stc
jns
jns
adc
pop
mov
sti
xchg
xor
out
xchg
add
push
lock
loopne
aaa
push
clc
cmp
imul
stc
repnz
dec
es
sbb
jle
in
pop
fidivs
pop
inc
mov
inc
mov
pop
mov
ret
jns
outsb
lds
mov
clc
push
loop
ljmp
mov
in
fistl
ja
fists
ljmp
cmp
add
cs
mov
frstor
or
jo
jmp
add
mov
push
ror
lock
xlat
fildll
inc
test
hlt
mov
jle
call
inc
mov
cmpb
adc
xchg
xor
pop
mov
enter
fcompl
xor
nop
pop
mov
loopne
sbb
mov
fisubl
pop
testb
pop
cmpsl
cmp
jae
add
bound
lret
jl
js
xor
dec
push
jmp
rorb
lods
roll
xchg
cs
insb
icebp
out
dec
jo
movsl
or
mov
xchg
rorl
xor
jge
ret
sbb
adc
das
pop
pop
and
mov
movsl
ja
jno
fnsave
xchg
movsl
lret
sbb
and
test
mov
sub
dec
jb
pushf
adc
leave
push
lock
movsb
lds
fbld
insl
xor
add
push
fs
shrb
fs
mov
insl
mov
fldln2
into
cmp
add
inc
mov
adc
into
pop
cmc
out
lds
out
push
lahf
mov
daa
test
jae
clc
lea
movsb
rorb
and
add
in
pop
xchg
ljmp
adc
mov
or
into
mov
xor
imul
clc
add
add
cmp
or
cmpsl
call
movsb
push
xor
les
in
xchg
mov
icebp
daa
mov
or
cmp
lds
lcall
xchg
pop
test
dec
inc
adc
xor
xor
inc
pop
fwait
xorl
aad
dec
pop
cld
addr16
and
lret
es
test
flds
lods
adc
out
push
fldl
sti
sbb
jne
mov
enter
jecxz
inc
mov
test
jle
mov
push
pop
bound
pop
push
push
js
adc
addb
pop
sbb
cmp
push
jnp
std
cli
push
mov
addr16
das
xchg
leave
into
test
jmp
out
mov
scas
cs
lea
lods
adc
push
es
and
mov
push
adc
and
addr16
sub
sahf
lock
sub
pop
adc
adc
pop
ret
mov
lea
adc
lret
and
in
sub
lahf
test
mov
lret
sbb
aad
mov
pop
addr16
lods
into
mov
popa
fistpl
xor
sbb
fdivrs
or
mov
jge
and
vucomisd
movsl
jge
cmpsl
fdivl
in
push
popw
mov
in
sbb
test
xchg
fs
fcompl
jle
mov
jge
cmp
ds
popf
imul
xchg
ljmp
imul
iret
xor
je
pop
pop
inc
adc
mov
imul
pop
idivb
in
dec
das
bswap
dec
lcall
cmp
xchg
ret
les
mov
test
or
daa
jo
adcl
int
les
dec
out
cmpsb
imul
or
jns
imulb
rorb
jl
inc
xchg
inc
push
shrl
mov
cltd
push
jne
or
lcall
add
mov
add
pop
sub
and
adcb
push
lahf
jmp
inc
in
or
mov
add
xchg
lret
adc
rol
lea
sub
scas
inc
adc
lds
in
stos
out
jge
mov
dec
mov
mov
pop
adc
mov
bound
fisttps
inc
stos
mov
scas
jmp
cld
in
notl
xchg
pop
addb
out
sbb
mov
sbbl
mov
out
dec
jbe
mov
out
out
adc
push
shr
jp
mov
push
cli
sbb
mov
idiv
ja
jle
popa
sbb
in
sub
movsb
adc
cmp
insb
int
in
loope
cltd
cmp
xor
outsb
aad
gs
cmp
adcb
jl
push
cli
push
scas
xchg
shrb
sahf
or
sub
ljmp
faddl
movsb
in
push
popa
sub
fwait
scas
ret
out
mov
call
mov
mov
pop
and
mov
outsl
data16
jge
mov
pop
xor
loope
pop
inc
cld
gs
mov
sbb
sub
mov
push
imul
arpl
and
sub
je
mov
pusha
and
cmp
leave
fadd
stc
xchg
sub
pop
mov
xor
popl
test
testb
js
sbb
and
cmpsl
out
add
sub
dec
adc
cmc
pop
mov
mov
mov
jne
dec
aas
addr16
mov
fs
clc
adc
leave
xlat
dec
leave
cmpsb
sub
jecxz
lods
orb
xor
imul
mov
pop
adcb
es
cwtl
and
pop
in
insb
cmp
pop
outsb
icebp
outsb
cmpl
pop
cmpsl
add
repnz
xchg
cltd
stc
jnp
dec
cli
pushw
and
add
sbb
imul
js
push
sti
inc
adc
ret
pop
adc
addr16
sarb
es
xor
mov
inc
fldcw
scas
sbb
aaa
aam
mov
lds
repnz
sub
orl
mov
addr16
mov
fldt
dec
bts
into
and
mov
loop
xor
jmp
ja
dec
sub
and
sub
bound
adc
movb
add
xlat
jp
lahf
mov
mov
inc
pop
jnp
daa
mov
jns
pop
aas
je
stc
push
adc
sub
mov
add
jge
sub
mov
clc
pop
clc
popf
adc
pop
and
js
xchg
pusha
xchg
mov
loopne
push
mov
loop
test
fsubl
fidivrl
mov
xchg
decl
lcall
cld
repnz
pop
dec
and
pop
out
mov
lcall
movsl
ss
jmpw
fdiv
dec
xchg
inc
pop
mov
aaa
aad
xchg
pop
and
and
mov
lahf
xchg
aas
adc
popf
movsl
xchg
push
js
inc
sahf
cmp
jecxz
clc
pop
jo
ljmp
jns
dec
push
movsl
es
jno
inc
dec
sub
ja
xchg
leave
sarb
cmp
shrb
repnz
or
es
mov
push
iret
cmp
leave
pushl
xchg
dec
jp
dec
add
pop
sbb
add
insb
cmp
leave
add
add
hlt
jp
add
sub
mov
mov
aaa
bound
dec
out
fistpll
sbb
dec
adc
cli
scas
cli
pushf
out
les
or
scas
and
add
pop
mov
or
popa
mov
mov
sarb
stc
xchg
pop
int3
gs
bound
dec
lea
add
xor
add
or
iret
push
lds
or
andb
push
mov
fists
xor
jl
leave
xchg
inc
lea
icebp
xchg
cmp
js
mov
and
sub
and
mov
xor
xchg
cmp
add
push
adc
and
xchg
scas
or
lahf
in
adc
add
jge
lret
jecxz
js
std
inc
jne
clc
outsl
ljmp
jns
inc
daa
dec
aas
in
add
inc
mov
test
inc
arpl
popf
mov
repnz
sbb
mov
cwtl
pop
sbb
mov
in
addr16
call
mov
loope
aaa
movl
les
fwait
adc
aam
scas
jge
loope
mov
scas
into
popa
jno
inc
and
sahf
lods
bnd
inc
jmp
lret
and
or
mov
loope
sub
mov
jns
and
shll
test
dec
loopne
jge
fisttpl
sgdtl
xchg
jle
mov
sbb
lods
leave
mov
aas
mov
adc
sbb
packssdw
push
push
inc
movsb
stos
pop
mov
jnp
imul
inc
jne
into
inc
mov
jae
mov
rolb
or
rorl
cwtl
xchg
or
ret
andl
sbb
push
cs
les
push
test
outsl
xor
and
jle,pt
mov
movb
in
mov
test
dec
xchg
xchg
push
dec
cmp
cs
test
push
in
fstps
sarl
xlat
or
test
jmp
sub
xchg
stc
call
out
daa
lret
jnp
mov
adc
sub
js
sbb
and
pushf
fwait
mov
push
testb
dec
inc
sub
loop
mov
mov
in
mov
leave
jne
in
dec
in
mov
ficomps
call
clc
fs
push
pop
inc
ss
jbe
sub
lock
in
mov
pop
cld
xchg
mov
mov
jns
repnz
push
cmpsb
push
xchg
mov
push
add
pushf
cmc
ss
jge
inc
test
into
stos
sti
int
xor
jmp
fildl
inc
ljmp
je
adc
pop
hlt
popf
testb
fwait
mov
mov
or
xchg
pop
mov
cmc
mov
rcl
fdivs
leave
fxch
shrb
cmp
and
jns
mov
xchg
dec
mov
dec
test
mov
push
cld
nop
xchg
aam
les
aaa
mov
cmp
mov
out
mov
faddp
cltd
aas
mov
les
jecxz
xchg
test
adc
fdivl
cmp
outsl
inc
sbb
dec
roll
scas
repnz
mov
lods
clc
xchg
xchg
push
in
sti
mov
push
sti
pop
jmp
aas
gs
mov
push
cmc
mov
pop
add
xor
inc
mov
adc
js
push
and
in
jno
xchg
inc
lods
aaa
lret
sub
pushf
mov
ss
leave
add
repz
inc
bound
rcl
call
mov
and
cmpl
jae
mov
mov
ja
jmp
ret
push
aaa
mov
fmul
push
xlat
arpl
cmc
sub
add
daa
cmp
inc
mov
out
out
test
push
aaa
pop
pop
xchg
dec
adc
movsl
call
shll
inc
imul
mov
invd
das
add
push
push
sti
jb
mov
test
pop
cmp
cmp
inc
sbb
sti
out
mov
xor
into
mov
dec
adc
shrb
notl
mov
and
insl
push
mov
xor
mov
mov
icebp
mov
pop
push
mov
mov
clc
sub
lds
int3
aas
jae
xor
jbe
sahf
repz
ret
test
shr
and
pop
addr16
cmpl
cmpsb
inc
cwtl
mov
test
pop
mov
xor
pop
jge
pop
les
add
int
push
inc
mov
xor
sub
pop
cmpsl
push
pop
ss
ret
adc
out
lods
movl
das
ja
cli
rcll
cs
rcll
jg
mov
sub
inc
out
fucomp
call
lahf
cmpsb
or
pop
push
push
sbb
mov
jae
add
sarb
das
push
push
lcall
pop
sbb
test
xchg
shr
icebp
ret
mov
gs
ss
rcll
xchg
mov
inc
cs
mov
add
add
enter
mov
das
xchg
mov
or
xor
xchg
pop
shr
adc
fnstsw
js
nop
sbbb
sbb
dec
addr16
pop
maxps
pushl
inc
cmpb
aam
enter
dec
jns
dec
fcom
mov
xor
rclb
xor
les
rcrl
push
js
repnz
outsl
mov
js
inc
sbb
push
in
lods
sbb
cmpb
jb
fcoms
mov
pop
xor
aam
push
dec
dec
xchg
popa
dec
loop
ret
test
ficoms
inc
repnz
xchg
jne
in
xchg
out
pop
ds
inc
sti
imul
mov
jae
sbb
adc
mov
push
xor
fdivrs
sub
iret
lock
jbe
call
mov
in
out
xor
dec
test
pop
pop
cmpsl
dec
sbb
mov
pop
repnz
test
arpl
adc
xchg
insb
jl
xor
test
adc
gs
add
lods
in
les
add
ret
dec
testl
cld
inc
test
lods
std
pushf
popf
mov
les
jns
jae
stos
fcom
jae
repnz
cmp
xchg
adc
adc
shrl
adc
stc
xchg
sahf
sbb
xlat
sahf
sbb
mov
sub
pop
or
dec
lahf
ljmp
inc
mov
push
cli
push
or
arpl
out
sub
aad
and
loopne
loope
js
adc
push
sti
xor
mov
mov
idivl
jmp
ja
pop
mov
fs
sarl
sbb
sbb
sub
cmc
mov
jl
je
fs
aad
and
and
dec
sbb
xor
adc
xor
push
addb
clc
mov
xchg
out
loop
push
jmp
cmpsl
scas
push
adc
adc
lods
sub
mov
imul
rclb
fisttps
sbb
mov
int
xchg
xor
ja
or
lods
xchg
mov
mov
pop
out
sbb
adc
sub
test
sbb
test
xchg
sbb
movsb
adc
pop
out
hlt
or
mov
dec
in
inc
scas
addl
mov
loop
xchg
mov
std
jmp
fldenv
imul
xchg
aas
dec
aad
roll
cwtl
pushf
into
mov
cmc
fwait
sti
adc
dec
mov
mov
ficoml
div
sbb
pop
push
add
inc
inc
test
repz
call
cmpsb
xchg
inc
inc
pop
mov
rolb
les
xchg
mov
cmp
jbe
aad
sahf
shl
xor
jmp
fs
cmp
fs
inc
jns
fwait
pop
rcll
push
ret
ljmp
stc
mov
mov
out
ljmp
xchg
hlt
sub
loop
mov
call
xor
mov
add
mov
mov
push
mov
jae
mov
aam
sub
xchg
sahf
adc
xlat
enter
mov
fdivl
in
lret
or
push
dec
xor
pop
movsl
sahf
icebp
xchg
mov
cwtl
mov
repnz
xor
mov
pop
call
xor
add
xchg
sbb
mov
arpl
pop
xor
movsb
dec
test
sbb
scas
xor
mov
stos
xor
daa
movl
push
xor
xchg
fbld
mov
or
cmp
imul
xor
jmp
pop
pop
int3
and
test
stos
xorps
insb
addr16
fadd
repnz
jecxz
jge
fwait
stos
sub
and
stc
bt
cltd
inc
pop
jg
iret
loope
jnp
ret
push
fdivl
pop
xchg
mov
andb
pusha
push
dec
and
xchg
rorb
addl
in
sbb
mov
push
adc
dec
sbb
lods
lret
lcall
fdivs
arpl
imul
mov
pop
push
into
xor
push
scas
cmpsl
mov
jle
fildl
test
fcomp
xor
jbe
pop
xor
pop
outsb
mov
sete
cmp
inc
mov
outsb
aad
arpl
aas
and
jecxz
leave
xor
fcmovbe
or
inc
cmp
hlt
popf
cltd
stos
mov
sbb
or
push
andl
fdivl
add
pushf
icebp
sbb
inc
cmp
mov
jo
mov
fistps
cmp
mov
xchg
push
iret
pop
lods
orl
add
lds
out
mov
adc
in
xor
cmp
lret
dec
aas
mov
pop
add
inc
call
mov
scas
in
pop
mov
int3
lock
fnstenv
sub
or
sahf
inc
push
add
add
xor
push
outsl
pop
jg
or
loopne
fstpt
pusha
pop
aas
pop
pop
fs
daa
mov
mov
lcall
xchg
sbb
stc
push
lahf
xchg
sbbb
cmp
pop
jne
mov
fadds
popf
popa
jecxz
adc
daa
fldcw
add
push
lods
ljmp
xchg
into
jo
fists
imul
addr16
out
ret
pop
mov
xchg
clc
loope
imul
aas
ret
jno
add
lahf
fidivl
repnz
shll
jno
rcl
adc
xor
arpl
and
adc
mov
or
out
cmpsb
cmpsb
push
jg
xchg
nop
pop
bound
jl
clc
mov
pop
aad
mov
jno
pusha
leave
add
xchg
mov
push
sbb
xchg
daa
int
sub
shrl
dec
enter
inc
leave
loopne
test
sti
mov
pop
mov
sub
sub
xchg
sub
add
xchg
stc
cmp
ds
mov
xchg
mov
push
cmpsb
xchg
ds
shl
xor
mov
push
mov
push
mov
mov
rclb
jne
rsqrtps
repnz
or
cmp
dec
icebp
cmpsb
jl
cmp
and
mov
mov
iret
outsl
and
mov
jecxz
xor
cmpsl
mov
sub
sbb
out
je
repnz
enter
jnp
addr16
jl
hlt
lea
lock
lds
cmpsb
jge
roll
mov
stos
test
mov
mov
scas
sahf
inc
ret
lods
cmpsb
int3
aaa
fs
cwtl
mov
or
out
lcall
outsl
pop
xorb
cmp
lods
xor
jno
mov
nop
lahf
test
xchg
dec
sahf
jge
xlat
xchg
sbb
dec
cmp
pop
push
mov
fiaddl
adc
dec
clc
out
imul
rorl
jnp
pop
neg
pop
pop
jo
jne
push
decl
std
xchg
push
mov
xchg
jmp
jno
iret
adc
pop
movsl
icebp
cmp
fdivs
ret
adc
push
push
out
cmp
mov
pop
fcmovnu
jge
mov
dec
adc
pop
je
mull
sbb
and
aaa
mov
addr16
fisttpl
sbb
mov
dec
rcrl
or
data16
andl
insb
es
xor
mov
push
push
bound
dec
pop
shll
xchg
mov
adcl
sub
js
xor
fnsave
or
mov
lods
xchg
test
sub
jae
mov
std
sahf
das
leave
cmc
pop
cwtl
out
mov
imul
sub
repz
add
pop
and
loopne
cmp
popf
sbb
or
pop
aad
xlat
in
push
insb
pop
jp
pop
push
subl
push
int3
dec
and
aaa
imul
cld
lock
jecxz
pop
push
dec
fisubrl
arpl
dec
in
cmpsl
adc
loopne
adc
sbb
mov
lret
imul
fwait
pushf
test
or
cmpsl
xchg
test
test
or
fs
cmpsl
xchg
add
pusha
sbb
movsb
and
rclb
and
fcomp
dec
fnsave
jg
or
pop
jp
out
mov
xchg
adc
xor
inc
push
jno
test
sub
hlt
xchg
mov
cmp
ja
cmc
adc
mov
in
pop
add
add
jnp
mov
test
fst
inc
pop
and
pop
jecxz
loope
sub
sub
or
mov
cmp
push
scas
lock
xorl
cmp
jmp
push
jb
les
jbe,pn
inc
or
mov
inc
loope
lahf
cmp
cmp
movsb
mov
pusha
in
out
adc
push
test
dec
dec
jp
leave
js
xchg
xor
mov
nop
push
xlat
mov
jno
rclb
or
fwait
and
and
int3
xlat
loope
inc
das
cmp
lea
sbb
add
lods
cwtl
imul
and
push
adc
jg
rorl
ret
popa
xchg
test
add
es
stc
sub
pop
mov
or
lret
xchg
ds
jno
xor
add
pushf
test
mov
cs
jle
xlat
sahf
lock
fwait
add
push
cmc
xchg
xor
push
leave
ret
pop
push
mov
sub
out
mov
popf
fisubl
stc
scas
xchg
mov
fcomi
shrl
lods
mov
movsl
add
and
add
scas
inc
in
cmpsl
stc
and
test
test
les
sub
loope
test
xor
mov
xchg
mov
dec
insl
mov
rorb
or
inc
cmp
inc
inc
mov
mov
lds
mov
cmp
jp
sub
dec
dec
or
xchg
dec
pop
push
iret
sub
sub
adc
faddl
mov
cmp
add
inc
jns
flds
xchg
mov
mov
repz
jecxz
sub
loop
mov
mov
loope
xlat
dec
imul
xchg
and
fidivs
inc
addr16
sbb
pop
cmp
inc
scas
mov
inc
jns
sbb
or
loop
inc
mov
mov
push
jmp
lahf
and
cmp
aaa
or
mov
xchg
and
movsb
mov
mov
hlt
push
push
inc
adc
inc
push
dec
pop
aas
lock
dec
fimull
cmp
sub
das
cmpsl
pop
xchg
out
lret
icebp
sbb
fdivl
and
jne
cltd
lret
scas
dec
mov
dec
pop
lret
xchg
cmc
decb
popf
dec
jl
insl
movsb
icebp
shlb
pop
cli
mov
hlt
iret
out
cwtl
sub
fmuls
ret
data16
lret
xlat
push
in
imul
cwtl
ljmp
cmp
pop
popa
sub
adc
sub
shlb
lds
adc
js
lret
cmpsl
pop
adc
mov
imul
mov
dec
sbb
jbe
and
fadd
inc
push
xchg
adc
call
inc
mov
dec
adc
orb
xchg
popa
mov
out
aaa
movsb
push
pushf
sti
jbe
xor
call
dec
scas
or
push
push
pop
orb
cmpsb
dec
mov
fldenv
or
cld
add
adcl
mov
arpl
pop
bound
jge
pop
xchg
shlb
jns
mov
lret
adc
mov
shll
fcomps
cld
rol
in
enter
les
xchg
faddp
imul
out
inc
or
jns
int
inc
into
fbstp
insl
mov
pop
cmc
xor
insb
incl
shrl
jnp
jns
push
lock
mov
lock
and
add
call
jle
and
inc
bswap
inc
aaa
mov
pop
arpl
test
out
xchg
pop
ret
cmp
call
pop
mov
sahf
scas
stos
call
mov
or
jbe
jb
int
cltd
mov
push
push
and
fcoms
mov
es
in
xlat
xchg
jge
xchg
mov
insl
xchg
sub
imul
lahf
mov
lret
adc
sbb
insb
pop
dec
mov
ret
lds
xor
xor
fnstenv
jle
out
movsb
in
xchg
pop
movsb
fldl
ljmp
inc
cmp
mov
cmp
icebp
or
das
push
jno
dec
repnz
fcmove
cmp
inc
push
cmp
sbb
jb
cmp
cmc
xchg
pushf
pushw
mov
out
addr16
lods
in
sub
sbb
mov
cmp
jp
dec
ljmp
cmpsl
mov
testl
fcmovne
sti
mov
stos
subl
jg
push
pop
in
sub
pop
test
rcll
aas
adc
sbb
ficoml
iret
imul
jle
icebp
test
push
jmp
fs
sub
pusha
sbb
pop
mov
push
jns
ja
mov
push
adc
into
clc
jo
mov
fldenv
int
clc
cmpsb
inc
mov
inc
in
push
lock
xchg
lahf
iret
data16
and
xor
dec
lds
movsb
fistpll
popf
pushf
lock
ficoms
or
fadds
out
push
js
cs
je
adc
into
cmp
mov
cmp
jge
das
outsb
add
sbb
inc
ss
cwtl
cmp
loopne
pop
cwtl
cmp
mov
dec
rclb
ret
inc
sub
cmp
inc
or
jecxz
cs
fidivrl
mov
and
adc
push
insl
imul
cli
dec
insl
stos
shlb
xchg
xor
ljmp
aam
scas
inc
lea
lret
fstps
std
or
inc
and
in
or
out
lea
sbb
mov
data16
arpl
sti
xor
xor
inc
insl
movsb
lods
hlt
mov
daa
clc
iret
pushf
sbb
sub
and
add
sbb
lret
mov
mov
cwtl
adc
add
xchg
test
mov
pop
leave
stos
fidivrs
sub
mov
sbb
xchg
push
int
fnstsw
mov
pop
xchg
pop
cmpb
lret
adc
mov
jmp
mov
or
dec
inc
mov
test
mov
enter
enter
xor
push
mov
nop
mov
in
sbb
insb
leave
mov
push
cld
push
dec
push
or
insl
and
xor
fwait
pusha
sub
inc
mov
xchg
repz
push
mov
mov
dec
jns
xchg
daa
xchg
jns
xor
mov
fcmovnb
gs
stos
fistl
mov
sub
repnz
outsl
adc
and
sbb
jmp
sbb
mov
loope
mov
and
xor
dec
pop
roll
mov
int3
jns
ljmp
push
sub
cli
imul
pop
sub
inc
and
inc
jg
sarb
mov
fisubrs
xchg
pop
outsb
push
repnz
int
mov
scas
adc
insl
les
lret
pop
movsl
pop
iret
adcl
jno
mov
add
pop
push
pop
mov
pop
or
adc
add
out
jns
sbb
enter
sub
pop
std
push
inc
dec
pushf
repz
adc
adc
lea
enter
adc
roll
test
pushf
xchg
andw
out
push
out
stos
pusha
push
int
push
or
fst
or
cltd
lea
dec
rol
xchg
xor
sbb
int
adc
test
cld
jns
loope
fwait
pop
cmp
add
add
cmp
add
mov
dec
xor
mov
pop
decl
lock
jno
fiadds
mov
dec
add
arpl
or
nop
ret
shrb
call
inc
faddl
lret
xchg
decl
jbe
ret
mov
push
cmp
pushf
jg
xchg
and
cmp
inc
ror
sub
insl
mov
sbb
or
rorl
mov
push
sub
mov
pop
inc
inc
jbe
add
cmp
push
xchg
aaa
dec
jno
insl
nop
es
pop
loopne
sub
xchg
add
cs
into
dec
pop
jle
jl
xchg
mov
mov
dec
fsubs
cmp
shlb
pop
das
loope
bound
inc
mov
loop
and
and
scas
sub
cmp
pusha
scas
sub
outsl
cmp
dec
mov
jecxz
lds
lret
jae
or
inc
dec
aas
ja
and
pop
pop
adc
shll
les
cmp
hlt
nop
cmp
xchg
sbb
mov
cmpsb
sub
cmpsl
cmp
mov
imul
mov
into
test
mov
fbstp
jmp
ss
jge
imul
fidivrl
daa
mov
jnp
jnp
add
sahf
and
pop
into
sub
mov
out
push
pop
xchg
aaa
testl
int3
loope
hlt
jle
ss
sarb
lret
push
hlt
and
hlt
hlt
adc
jne
sub
xor
xchg
iret
add
fmuls
inc
xor
xor
lret
jo
xorl
pop
jp
call
inc
test
adc
push
jl
lcall
pslld
mov
jmp
stos
movsb
inc
or
outsl
popf
iret
mov
loopne
cmpsl
into
iret
inc
insl
int3
push
iret
sbb
movd
call
loope
psllq
push
push
and
cmp
mov
call
and
pop
and
in
mov
or
pop
hlt
test
orl
pop
lcall
jl
push
mov
or
sub
hlt
daa
mov
lahf
js
into
pop
testl
ds
mov
fdiv
dec
mov
mov
popf
ret
xor
pop
jl
push
xor
xor
or
or
loope
call
aas
insb
mov
popa
neg
cmp
mov
mov
sbb
dec
mov
es
xor
sbb
sbb
xchg
sar
pop
mov
cs
call
negb
or
pop
out
into
mov
dec
loop
mov
jnp
pmuludq
sub
je
and
xchg
int
lods
ljmp
jne
aam
cmp
sbb
sub
nop
call
andl
out
rcrl
popa
pop
mov
fsub
push
out
xor
and
addl
mov
sarl
and
xchg
mov
jp
repnz
aaa
jg
xor
sub
dec
and
sbb
aam
out
dec
and
scas
cltd
iret
jns
stc
inc
pop
pop
fs
push
stc
inc
int3
lahf
test
sbb
out
fwait
pop
xorl
lods
pushf
inc
and
shlb
sbb
adc
test
or
mov
imul
call
push
sub
ds
rorb
rcll
inc
dec
mov
js
mov
sbb
sbb
dec
xchg
xchg
xchg
in
in
and
xor
fs
in
mov
xchg
test
dec
jp,pn
add
out
out
or
or
pop
shlb
inc
mov
data16
xor
push
xchg
push
adc
pop
mov
ret
stos
pop
int
icebp
sbb
lret
dec
int3
and
test
inc
jne
mov
push
adc
and
les
movsb
mov
testb
arpl
jmp
pop
mov
or
pusha
jne
dec
or
subl
roll
test
cmp
push
test
ss
mov
stos
pop
stos
xor
imul
je
ror
mov
imul
mov
jg
mov
adc
fsubl
ret
pop
ljmp
stos
ja
dec
add
xor
mov
pop
ja
mov
inc
push
mov
arpl
ljmp
pop
push
mov
ret
or
xchg
push
mov
loopne
es
mov
fidivs
or
std
clc
in
push
mov
mov
dec
inc
xor
divl
xor
and
stos
insb
test
lcall
cmp
mov
or
push
mov
jle
dec
pop
sbb
inc
dec
mov
scas
xor
int3
xchg
sub
daa
cmp
push
movsl
jo
add
jmp
push
xor
je
sarb
jbe
push
cmp
pushf
cmp
mov
fwait
adc
outsb
pop
in
sbb
push
inc
push
push
js
xor
popf
xor
sub
clts
stos
test
inc
push
cmp
mov
test
mov
push
xchg
sub
mov
xor
lods
iret
insl
addr16
inc
lds
pop
lds
out
nop
inc
xor
mov
or
sub
outsl
out
movsb
aaa
jecxz
test
push
scas
aam
sub
cmp
cmp
mov
out
xchg
lock
mov
mov
popf
mov
jb
xchg
dec
mov
decl
mov
bnd
mov
add
call
sbb
mov
fwait
add
pop
push
pop
cmpsl
mov
jmp
clc
ljmp
xor
jo
adc
jp
cmp
sti
popa
inc
mov
lcall
mov
pop
and
push
inc
andb
insb
fldenv
in
aas
js
data16
inc
add
xor
jp
push
mov
arpl
jp
push
pop
pop
inc
subl
mov
sub
or
stos
call
sbb
mov
or
push
add
sbb
adcb
inc
cmpsl
lret
jg
rolb
inc
dec
outsb
lods
push
nop
movsl
xor
fs
insb
dec
add
jo
inc
cwtl
jns
pop
jns
movaps
push
rolb
inc
inc
outsb
push
hlt
scas
cli
dec
push
addr16
push
jno
cmpsl
jle
dec
ds
jne
xor
push
jmp
in
mov
flds
push
inc
xor
mov
or
adc
xchg
pop
push
into
filds
xlat
nop
inc
dec
add
aam
and
outsb
lods
ja
insb
and
call
mov
cmpsl
add
arpl
je
dec
jo
xchg
jmp
int
cs
arpl
or
ret
push
sub
enter
divb
add
test
sub
enter
mov
jbe
insb
jle
mov
testb
nop
mov
mov
xchg
sbb
cmp
sbb
fnstsw
in
inc
int3
and
xchg
xchg
sbb
int
push
push
mov
addl
cmc
pop
add
lods
popf
and
cmpsl
jbe
fdivr
sarl
mov
mov
out
mov
adc
cltd
push
mov
cld
addb
or
sbb
mov
jmp
dec
int3
jnp
rcrb
jnp
push
xchg
je
jp
lret
je
ljmp
jecxz
sbb
sahf
cmp
int3
cmp
xlat
add
sbb
push
pop
imul
scas
std
xchg
adc
fsubp
cmp
pop
dec
test
xlat
mov
dec
mov
mov
insb
rcr
add
cli
aam
mov
jnp
xor
mov
and
lret
aas
push
xchg
jecxz
subb
jmp
int3
rol
call
inc
mov
push
lods
xchg
daa
out
movsl
mov
mov
das
xchg
or
mov
push
xchg
jo
dec
pop
jno
xchg
insl
lea
jle
push
jne
cmp
outsl
iret
enter
movsl
mov
mov
push
mov
mov
mov
fwait
pop
ret
add
and
mov
fs
pop
push
push
inc
pusha
add
aas
bound
and
idiv
mov
dec
push
lret
xor
cld
je
iret
ficomps
mov
cmp
add
cmp
cmpsb
rorb
dec
dec
stc
xchg
aam
sub
fnstcw
push
decb
imul
out
push
inc
mov
aas
imul
ret
cs
jo
add
sahf
mov
jno
arpl
push
xlat
cmp
sub
pop
jbe
pushf
mulb
enter
addr16
push
fsts
loop
cld
fadds
icebp
aas
lret
lret
cmp
pop
jb
sub
sbb
and
sarb
stos
mov
dec
sub
lret
cwtl
xor
faddl
pop
mov
adc
dec
inc
jo
inc
inc
jg
adc
stos
jno
clc
lock
out
sub
mov
sbb
pop
jb
imul
sub
add
fidivs
add
out
shll
add
stos
mov
pop
or
mov
ds
lret
pushf
outsb
push
sub
inc
cmpsl
sti
sbb
nop
cmc
or
sbb
and
xchg
or
sti
ret
add
ret
inc
retw
push
xchg
adc
imul
inc
out
movsb
lods
jmp
mov
call
sub
and
lock
inc
lahf
cmp
aam
inc
add
push
rcl
or
push
fucomip
or
mov
add
hlt
adc
fst
mov
mov
lahf
and
icebp
mov
pop
add
out
jg
pop
aas
xchg
dec
dec
mov
sahf
lods
aaa
mov
adc
lret
arpl
in
inc
adc
int
lcall
hlt
sarl
push
leave
add
stc
dec
sbb
xchg
test
mov
addr16
or
or
lcall
inc
les
push
jne
pusha
cmp
cmp
xlat
call
mov
cmc
pop
mov
mov
or
cmpl
xor
dec
out
inc
out
lret
test
aas
xchg
jmp
and
fsubr
js
inc
push
add
adc
imul
inc
mov
adc
rorb
aad
push
xchg
gs
outsb
repnz
rclb
xor
or
or
inc
scas
rcrb
ja
lds
jbe
dec
nop
insl
xlat
in
xchg
sub
sub
ljmp
cwtl
pop
xor
push
inc
sub
dec
cmpsl
push
pop
dec
repz
outsb
push
jecxz
clc
std
stos
insl
jns
test
or
mov
decl
clc
mov
mov
out
mov
xchg
xchg
push
mov
jg
or
dec
xorb
sbb
dec
mov
repz
jb
aas
pop
fadd
clc
sbb
stos
mov
stos
or
gs
mov
pop
inc
iret
inc
jno
in
stos
mov
push
popf
jns
inc
andb
sti
cwtl
fldenv
jecxz
mov
xchg
xor
or
fmull
push
call
mov
mov
push
lcall
fildll
inc
outsl
add
mov
shll
in
cmp
xchg
mov
xchg
pop
rcrl
and
cmp
cmpb
mov
mov
lahf
inc
jl
sbb
sbb
stos
sbb
daa
das
movsb
xchg
les
mov
jne
xorb
pop
iret
imul
cmpsb
inc
repz
cmp
fidivrs
fistpll
stc
cmc
nop
in
mov
and
dec
push
adc
inc
push
xchg
mov
pop
je
xchg
stos
daa
dec
push
int
or
lods
repz
sahf
and
dec
adc
sti
adc
adc
cwtl
mov
lret
out
jg
fisubrl
lea
mov
loop
xlat
frstor
ja
ljmp
inc
xor
pusha
mov
pop
xchg
sub
pusha
mov
and
mov
lret
jns
ss
mov
fcoms
add
lods
test
mov
lds
sbb
lods
fimull
scas
and
xchg
jnp
pushf
mov
sbb
imul
in
mov
mov
arpl
adc
repnz
add
add
test
mov
mov
pusha
pop
icebp
dec
fisttpll
push
mov
add
addb
out
cmp
out
lods
lods
into
in
repz
inc
xchg
sbb
mov
adc
fildl
pop
xlat
popa
inc
repnz
jnp
mov
dec
pop
fwait
test
or
inc
lock
sub
xchg
push
dec
pop
rolb
mov
dec
jbe
call
mov
out
jnp
xchg
fsubrs
or
sub
inc
push
jmp
sbb
mov
inc
cmc
inc
cmp
and
fdivl
test
out
cmp
stos
sarl
fdivrl
push
pop
out
daa
adc
iret
add
or
sbb
bound
sub
inc
sbb
or
inc
in
xchg
gs
dec
and
cmpl
movsb
add
sub
scas
sub
lcall
jb
jno
andl
lea
jne
mov
and
or
shlb
push
sbb
aas
inc
sti
out
in
insb
pop
imul
lcall
mov
xchg
xchg
shlb
shl
jp
sbb
ret
aad
jg
roll
jp
ds
mov
push
dec
dec
or
outsl
into
dec
test
fiaddl
sbb
push
jbe
mov
not
aas
movsb
add
jle
sarb
mov
ja
out
adc
lret
testb
pop
push
arpl
adc
pop
cmp
mov
xchg
aad
bound
mov
mov
stos
xor
incl
mov
je
mov
jb
xchg
push
imul
sar
or
repnz
mov
jge
add
mov
clc
and
pop
fs
fdiv
mov
and
xchg
aam
mov
mov
dec
pop
cmc
mov
adcl
adc
and
pop
call
or
pop
push
insl
ret
xchg
mov
and
jnp
or
sbb
push
lea
sbb
sahf
cmp
inc
scas
outsb
jne
and
or
jg
dec
push
push
push
sti
push
dec
xchg
sub
xchg
ret
cmp
out
jmp
popa
xchg
arpl
cmp
sub
and
arpl
sbb
or
jae
mov
or
data16
jecxz
fisubrl
inc
xchg
sub
stc
push
ss
mov
in
incl
or
jle
xor
sbb
jno
mov
ss
stos
cmp
push
fwait
mov
outsb
fstps
addr16
insb
andl
arpl
popf
push
jnp
sub
sbb
adc
push
lods
jbe
lods
leave
pop
shll
addb
int
into
adc
sbb
jmp
dec
or
lcall
mov
adc
inc
xor
cmp
adc
imul
or
arpl
pop
inc
fdivrs
fsubl
ficoml
inc
inc
lods
and
flds
ds
dec
sub
and
mov
xchg
sub
push
mov
das
std
lods
cmpsl
mull
or
dec
inc
mov
mov
outsb
fs
mov
mov
xor
xor
hlt
sub
mov
jbe
ss
cmp
xor
sbb
mov
sub
inc
mov
mov
ja
inc
movsl
jmp
pusha
inc
cmp
sub
xchg
incb
in
cld
jmp
jmp
inc
pop
push
adc
cmp
push
shr
call
jae
mov
out
pop
les
shr
pop
int
mov
mov
sbb
fsubrl
fisubrs
jno
test
jp
into
popf
jmp
fwait
mov
cmpsb
jnp
ja
std
bound
mov
xchg
adc
fs
sub
shl
mov
xor
xor
adc
cmp
inc
mov
repnz
lds
outsl
repnz
jle
shlb
or
mov
stos
mov
pop
cmp
cmp
int
sbb
mov
mov
push
scas
or
fdiv
or
clc
cmc
sub
xlat
popa
into
test
sub
sbb
sbb
xchg
ss
fs
mov
jnp
jo
pop
xchg
fnsave
and
xor
pop
div
add
push
cmpsb
sbbl
scas
lods
scas
out
pusha
mov
sbb
adc
and
lea
adc
push
inc
das
add
add
arpl
sub
cmp
pop
adc
cmp
push
cmp
xchg
mov
xchg
dec
jne
inc
int3
fld
or
inc
inc
lcall
mov
xchg
cwtl
or
gs
lret
dec
dec
pushfw
cmp
aam
jge
leave
sbb
fildl
and
xchg
mov
mov
jb
xchg
mov
in
lret
inc
outsb
add
je
sub
inc
jo
testb
mov
ret
and
test
popf
insl
loop
cmpb
stc
pusha
imul
add
adc
adc
in
push
icebp
xorb
inc
fimuls
sbb
sahf
movsb
stc
push
and
int3
cld
add
ret
iret
or
adc
call
imull
mov
mov
add
test
mov
test
hlt
mov
pop
lods
mov
fwait
test
sarl
fildll
cmp
adc
arpl
fcomi
int
jmp
push
dec
mov
out
pop
out
ret
test
and
scas
mov
pop
lcall
adc
sti
stos
test
es
int
adc
rcrl
push
pop
cmp
lahf
jg
int3
jp
outsl
push
das
mov
arpl
cs
push
pop
imul
mov
insl
xchg
scas
aas
int3
test
push
movsb
adc
stos
push
mov
js
clc
mov
ja
lcall
cmpl
mov
cltd
mull
fsts
into
cmc
cmp
adc
int
inc
out
jns
cmpsb
int3
adc
gs
repnz
stos
jp
aas
sub
or
inc
mov
nop
cli
mov
or
sbb
call
ja
test
inc
sub
xchg
insb
add
je
adc
dec
mov
xchg
out
jno
dec
ds
add
mov
aaa
push
gs
and
mov
mov
mov
cmp
push
fsubr
popa
push
mov
dec
adcb
adc
addr16
xor
inc
jns
cmp
cld
mov
add
dec
mov
dec
rcrl
inc
push
cmp
pop
mov
pop
shlb
pop
add
xchg
and
in
dec
push
or
in
orb
cli
cwtl
mov
std
fiaddl
mov
clc
add
xchg
lcall
sbb
push
lea
or
or
push
xchg
jne
pop
shll
sub
out
andl
push
or
pop
jne
push
lock
xorl
mov
fwait
jo
jno
push
push
push
repnz
test
cmp
jns
mov
mov
adc
push
fwait
mov
cmp
pushf
inc
cmc
jne
lock
add
sub
sarb
pop
cmp
jp
xchg
movsb
jno
int3
shll
insl
mov
dec
scas
inc
xchg
pop
in
cltd
adc
adc
data16
pop
faddl
loope
mov
popa
inc
ja
roll
loope
jo
mov
mov
mov
push
adc
add
sub
fstpt
xor
pop
icebp
xor
and
pop
xor
inc
push
movsl
out
ret
js
push
mov
xor
jns
iret
dec
data16
xchg
vcomiss
xchg
cld
or
cmp
dec
push
cmovns
or
js
fs
sub
ret
push
movsl
pop
pop
enter
fs
repz
test
pop
adc
lret
pop
idivb
cmp
dec
sbb
mov
cmp
ficoms
je
cwtl
loopne
push
inc
sbb
xlat
mov
dec
fwait
stos
jmp
std
mov
jg
notl
pusha
inc
test
add
mov
aaa
and
jmp
xchg
mov
pop
pop
mov
popf
add
xchg
dec
xor
push
ja
and
pop
enter
mov
loope
xor
rorb
cmp
dec
xor
add
sub
out
mov
xchg
or
scas
cltd
cld
ds
xchg
dec
insb
mov
fidivrl
fadds
mov
icebp
pop
lret
je
adc
cli
mov
jg
push
add
push
pop
cmpsb
lret
mov
push
sub
jno
lds
shl
aas
mov
mov
push
jne
movsl
out
jmp
movsb
lods
icebp
push
mov
in
fucomip
in
and
sbb
in
ljmp
or
lret
mov
fcmovu
jbe
xchg
int3
cld
movsl
dec
sub
adc
mov
jbe
xchg
dec
pop
imul
fs
aam
adc
mov
jge
into
mov
fnstsw
aas
or
mov
and
popa
outsb
pop
jp
fwait
pop
xor
push
cmp
push
cmpsl
or
in
je
rorl
popa
dec
lret
into
insb
arpl
arpl
outsb
cmpsl
inc
xor
cmpsl
xchg
adc
jecxz
pop
push
jnp
outsb
pusha
cmp
sub
pop
leave
int
push
xor
xor
push
fwait
out
xlat
shll
lea
push
stos
into
push
enter
fidivrs
xchg
insb
dec
cmp
outsl
sbb
or
sbbb
je
xchg
cmp
fidivl
mov
adc
shll
loop
ret
pop
pop
mov
mov
adc
cmpsl
push
insb
push
sbb
xlat
or
rclb
mov
mov
lock
sbb
sub
jnp
or
call
add
es
mov
test
cmpsl
cmp
jg
jg
or
cmc
lret
mov
jns
add
mov
or
push
and
mov
jge
lock
lock
xchg
and
outsb
sub
xchg
pop
gs
roll
in
mov
iret
std
lock
sbb
sbb
xchg
or
into
mov
inc
lds
mov
cmp
mov
int3
pop
notl
popf
ss
mov
pmaxsw
fwait
out
sub
iret
movsb
pop
fimuls
ss
push
ja
pusha
jbe
rcrl
scas
adc
and
or
push
adc
cmp
and
outsb
orb
loope
jmp
mov
or
mov
mov
xchg
sub
js
dec
or
loop
inc
mov
sti
bound
xor
inc
pop
xchg
push
arpl
pop
push
ja
adc
les
jge
pop
cwtl
lods
aaa
dec
jb
outsl
pop
sub
cli
xor
xchg
and
in
and
into
rorl
lret
inc
cwtl
clc
dec
stos
jae
push
divps
in
out
jno
and
daa
mov
lods
cli
pop
add
or
mov
imul
adc
sub
mov
and
imul
jb
mov
inc
iret
gs
jg
cmp
cmp
nop
rclb
aad
mov
or
call
cwtl
loope
adc
adc
sbb
push
sbb
cmp
sti
or
fisttpl
ljmp
xchg
mov
notl
out
push
cwtl
or
mov
test
xor
mov
mov
scas
or
dec
mov
xchg
or
inc
mov
aaa
into
test
fistl
dec
xchg
push
outsb
xor
stos
out
aas
bound
addr16
or
sti
stos
push
es
jmp
mov
enter
mov
stos
scas
stc
xor
cmc
arpl
rdpmc
fisubrs
int
in
rcr
loop
pop
fstps
or
js
sbb
pop
and
sub
adc
scas
mov
out
mov
sti
icebp
sbb
imul
cld
inc
adc
out
int3
inc
mov
push
ffreep
pusha
mov
leave
dec
sub
test
mov
frstor
jne
adc
mov
cs
jae
shll
jl
in
cs
mov
sahf
decl
lea
xor
lds
scas
sub
pop
push
mov
xor
pushf
cli
cwtl
cmp
cmc
mov
inc
sbb
mov
push
mov
enter
jne
adc
xchg
adc
push
mov
xchg
or
cmp
push
leave
mov
lods
mov
mov
fldenv
aaa
or
push
xchg
or
fdivrp
rcl
lahf
cmp
aam
nop
ficoms
cli
pop
repz
dec
outsl
gs
jb
or
cwtl
sub
jnp
jmp
loop
pop
inc
repz
leave
adc
push
xchg
sbb
stos
lea
jne
sbb
popf
add
inc
ss
add
mov
cmp
hlt
jne
fcomps
mov
cmp
mov
dec
adc
jl
in
outsl
dec
xchg
jl
sbb
lods
inc
jae
jge
test
or
dec
iret
lock
and
and
jmp
ss
scas
aas
jo
pop
fcompl
inc
mov
lods
inc
leave
mov
out
test
mov
jmp
jne
insl
mov
xor
sahf
mov
and
outsb
mov
aas
mov
rcrl
xor
cltd
sbbb
pop
rcr
jle
dec
jp
nop
cmp
mov
addr16
imul
dec
mov
fmul
cmp
push
push
adc
cmpb
ficoml
add
mov
mov
fsubs
test
nop
cmpb
test
push
in
xor
insl
adc
pop
call
inc
ficoms
xor
test
movsl
call
xor
push
xor
pop
pusha
mov
inc
mov
jo
dec
adc
aaa
scas
pop
call
jg
shr
orb
xchg
and
push
bound
or
xor
in
or
mov
test
mov
sub
repnz
mov
shlb
xorl
jp
cmc
mov
lcall
mov
imul
xchg
and
sub
movsb
shrb
xchg
mov
mov
mov
jb
popa
xor
xchg
jecxz
nop
push
mov
das
cltd
adc
push
les
push
or
dec
inc
icebp
popl
hlt
mov
stos
push
mov
lcall
dec
enter
or
add
xor
shr
pop
fucomip
lods
ja
or
mov
sbb
inc
pop
rorb
roll
sub
push
into
xchg
pusha
pop
and
and
and
pop
sti
int3
and
jo,pn
add
push
aad
in
rorl
push
bnd
iret
aas
inc
je
mul
jle
mov
pusha
pop
add
fstps
lods
dec
push
fcoms
mov
inc
xchg
inc
add
in
add
add
and
popa
popf
movsl
frstor
call
add
adc
arpl
test
inc
xor
inc
movsl
sub
std
dec
cwtl
sub
mov
je
cmpsb
aad
mov
aaa
dec
in
movsb
adc
xchg
pop
sbb
jmpw
popf
jle
adc
hlt
ljmp
cmp
fisubl
xchg
fistpl
test
mov
xor
loop
jge
stos
subb
xor
popa
js
xchg
pop
fistl
fidivrs
push
jg
loopne
add
das
divl
push
adc
cmpw
es
adc
pop
inc
add
add
cwtl
ss
dec
jl
out
sti
jg
outsb
gs
sub
popf
ss
test
cwtl
cld
fisttpl
call
xor
shr
adc
ficoml
imul
jl
fldt
cmpsb
push
out
push
inc
sub
sbb
jmp
das
das
daa
movsb
cmp
loope
daa
mov
shrl
xchg
int3
xor
fwait
adc
dec
sub
out
out
pop
or
xor
sub
adc
outsl
pushl
cmp
xchg
inc
xor
jge
lock
mov
imul
dec
cld
pop
movsb
rorb
or
fldenv
add
adc
in
xlat
inc
leave
inc
cli
divl
daa
movsb
leave
mov
shl
lahf
les
in
scas
xchg
xor
bound
xchg
repz
inc
push
fdivrp
movsb
mov
pop
popf
xchg
movsb
and
rcrb
mov
out
out
cmp
bswap
mull
fucomip
push
xchg
sbb
sti
xchg
push
push
mov
imul
lea
icebp
sbb
sarb
imul
js
loopne
inc
mov
cs
mov
inc
fsubrl
mov
xor
enter
gs
fdivl
cmpsb
bound
adc
out
scas
pop
mov
jmp
ffree
fnstcw
test
outsb
fs
or
lea
ljmp
decb
cs
scas
sbb
jecxz
mov
sub
nop
in
into
jne
cmp
add
cmp
inc
rcl
pushf
fiadds
shr
stos
stos
punpckhwd
dec
mov
push
aas
or
jne
frstor
int
mov
jno
ret
std
pop
cli
les
out
jae
icebp
in
pop
inc
pop
sub
aas
cmp
idivb
sti
mov
insb
lret
xor
xor
push
int
test
sub
cmp
push
xchg
ror
mov
and
mov
push
lods
cmp
ljmp
jle
mov
dec
or
popl
jo
test
test
adc
pop
mov
sub
mov
lea
lds
movsl
aam
in
xchg
adc
fcoms
cli
add
pop
jns
mov
push
sub
scas
xor
in
push
mov
mov
pop
std
incb
pop
or
lods
sbb
clc
repnz
pop
pop
and
lock
std
jns
popa
test
shrb
adc
dec
xchg
icebp
cmp
dec
insb
inc
stos
inc
sub
xchg
stos
mov
mov
xor
das
jge
lock
or
int3
cmp
jg
ljmp
lds
cmp
mov
fnstcw
cmpb
add
ljmp
push
mov
push
movsl
lea
mov
arpl
push
jns
sbb
add
and
mov
call
decl
lret
popa
ret
push
mov
test
jne
adc
mov
mov
cwtl
addl
lods
lcall
addl
pushl
iret
ret
lcall
adc
add
out
fbld
dec
pop
xor
outsl
xor
mov
lods
lods
xor
ja
pop
xor
fidivs
cmpl
mov
mov
cmc
shlb
xor
ficomps
fwait
sbb
jne
fcomps
jns
cmp
std
dec
adc
jb
pop
out
std
pusha
ss
arpl
pusha
inc
sub
imul
insl
in
inc
adcb
loopne
out
fs
pop
mov
lods
cld
sti
mov
iret
inc
out
sbb
mov
jmp
mov
loope
arpl
outsl
aaa
pop
dec
mov
repnz
lods
mov
jae
push
pushf
rorl
add
sbb
fdivrl
ror
jae
xor
xchg
clc
or
lods
dec
cwtl
ds
pop
pop
mov
hlt
fdivrs
dec
push
adc
mov
mov
pop
cmp
mov
fdivl
out
jl
mov
loopne
out
mov
out
inc
ja
jns
ss
das
mov
mov
mov
xchg
mov
mov
push
jp
repz
cmp
test
roll
sub
dec
push
fcomps
les
loope
dec
int
cmp
mov
xor
push
push
sbb
mov
sub
mov
cmp
rcl
jl
dec
cmp
nopl
dec
jo
cmpsl
imul
pop
repz
mov
inc
imull
ret
jne
repz
dec
push
jnp
pop
cmpsl
inc
mov
adc
fwait
cmp
jg
jns
fcomps
int
push
mov
repnz
sub
xchg
insb
arpl
icebp
mov
dec
int
mov
dec
ret
xor
mov
jl
outsl
clc
pop
jmp
out
rclb
loopne
mov
adc
adc
clc
mov
in
and
movsw
repz
insl
add
jae
mov
loope
jle
push
jbe
xchg
cmp
into
xchg
loope
inc
push
inc
dec
mov
icebp
push
inc
sbb
xchg
shll
rol
and
fnstcw
aas
mov
cmpsl
dec
ds
clc
enter
pop
rorl
pop
and
popf
jns
mov
xchg
stos
aas
dec
and
or
mov
or
je
test
or
aad
mov
dec
mov
cmp
jnp,pt
imul
insl
push
push
pop
fnstsw
mov
xor
pop
daa
dec
mov
iret
mov
les
mov
scas
add
data16
push
cmp
sbb
lods
pushf
test
cmp
out
xchg
andl
mov
jb
push
mov
jp
in
mov
lret
and
pusha
and
cmp
xlat
dec
sub
fcoml
jle
ss
arpl
mov
push
enter
or
arpl
movsb
xchg
xor
mov
sub
cli
arpl
popf
insl
or
xchg
lock
xchg
fnstenv
call
sbb
fldl
sbb
in
push
lcall
cmpsb
sarb
ds
loop
lods
bound
xchg
cmp
out
dec
rorb
mov
push
fbld
inc
int
xchg
add
lret
or
ss
mov
jecxz
dec
xchg
add
jne
jns
xlat
cmp
mov
ja
mov
imul
scas
test
jge
adc
push
cli
bound
jge
xchg
and
xchg
pop
jl
mov
jmp
outsl
sti
sar
cmp
adc
push
loop
fbstp
out
les
xchg
jne
xor
out
or
shll
xorb
iret
sub
sub
test
add
in
stc
das
add
lret
fisubl
scas
inc
stos
movsl
js
pop
sbb
aam
xchg
sbbb
sub
sbb
push
mov
push
aaa
push
ds
aad
inc
test
jmp
xor
dec
ljmp
addr16
mov
sub
ja
iret
push
bound
fnstsw
sbb
push
pushf
push
jl
into
cmp
jb
adc
call
pushf
mov
and
xchg
xchg
inc
cmp
or
add
inc
mov
cwtl
pop
xor
pop
insb
data16
adc
xor
sahf
insl
mov
jno
hlt
sub
mov
add
aaa
xor
js
fwait
jnp
cmp
jmp
sub
popfw
cld
lret
idivl
aad
cmpl
xchg
cltd
adc
rsqrtps
js
scas
pop
ret
add
xor
adc
outsb
mov
lods
and
mov
imul
push
push
cmpl
cmp
dec
dec
hlt
jmp
dec
pop
mov
inc
xlat
fwait
nop
sbb
adc
lds
mov
cmp
xor
push
or
jg
mov
xor
mov
outsb
pushf
cmp
loop
jle
out
push
pop
cmpsl
adc
pop
pusha
subl
xchg
and
sbb
aaa
clc
out
test
inc
in
push
mov
lret
test
inc
jo
push
sti
outsl
inc
js
out
sti
or
aas
xchg
and
imul
and
sub
lock
aaa
enter
lock
dec
iret
xchg
pop
mov
add
test
adc
mov
push
in
dec
pop
iret
pop
out
inc
stc
xchg
pop
test
adc
jp
xor
dec
lds
and
mov
xor
add
mov
jmp
dec
aas
mov
repz
shl
mov
rcrb
sub
push
fchs
dec
sti
adc
xchg
jno
add
xchg
sub
and
or
add
mov
mov
and
push
push
std
stos
std
in
mov
push
fsts
mov
cmp
lods
test
pop
rclb
aam
pop
pop
sub
sub
cli
xor
inc
dec
cwtl
std
xchg
jbe
mov
sbb
js
or
mov
mov
je
dec
les
xorb
enter
push
adc
mov
add
pop
gs
xchg
data16
popa
stc
test
fimuls
inc
cmp
cwtl
ds
cld
mov
adc
mov
sahf
dec
and
sbb
dec
cmc
push
les
mov
pop
mov
iret
xor
out
pop
jbe
sub
adc
fnstsw
sub
mov
push
gs
cwtl
and
cwtl
insb
repz
pop
push
add
jecxz
fwait
mov
lcall
dec
lret
xchg
dec
sub
mov
insb
test
lds
enter
push
jnp
std
add
pop
cld
pop
shrb
lds
sbb
outsl
ficompl
js
je
inc
fs
pop
mov
add
mov
jb
mov
adc
mov
mov
stos
jbe
add
jp
mov
data16
mov
and
sti
mov
mov
adc
lahf
and
insb
fimuls
lahf
fistps
xor
cmpsb
xor
ljmp
mov
fdivrs
mov
std
sub
sahf
adc
cmp
xchg
sub
hlt
push
sarl
add
mov
jnp
cwtl
mov
dec
stos
or
scas
fiaddl
das
mov
cmpb
or
add
jns
and
lret
xor
mov
rcrb
lds
mov
rol
stos
testl
cmp
push
aam
stos
fs
cmp
dec
fcompl
ds
dec
inc
stos
add
jmp
jmp
inc
sub
or
leave
pop
jae
sub
testb
jo
fwait
or
jg
xor
clc
addr16
pop
lods
mov
adc
insl
cmp
push
pop
mov
sahf
and
aaa
sub
add
jl
pop
out
mov
insb
inc
fsubrs
dec
jle
xchg
xor
mov
and
or
in
ficompl
loop
idivl
in
mov
mov
mov
into
dec
in
or
lods
andl
data16
push
xlat
jne
push
xor
lret
mov
push
out
icebp
daa
dec
fwait
rclb
sbb
nop
cwtl
push
jl
jno
mov
mov
inc
sbb
fbstp
adc
xor
inc
and
xor
les
mov
out
cmpl
mov
xor
mov
ds
ret
pop
pop
push
pop
lret
mov
cli
dec
jl
cmp
sub
sarl
push
push
and
shll
pop
mov
int3
frstor
into
lcall
jnp
push
cmp
jnp
and
test
push
fwait
dec
insl
jae
ret
pop
into
fstpl
shrb
or
mov
out
add
mov
cwtl
stc
xchg
aam
push
test
daa
xchg
xchg
sbb
cmp
imul
xor
xor
rcr
adc
lock
mov
push
cmp
into
shl
add
cmp
add
out
mov
jno
shlb
push
cmp
repz
mov
addr16
sbb
leave
int3
popa
xchg
dec
shrb
and
scas
imul
add
icebp
xchg
rcrb
lret
in
arpl
pop
fisubrs
inc
test
add
or
dec
shlb
aam
pop
xchg
sarb
pop
inc
or
es
out
mov
dec
mov
jp
mov
sub
shrb
cmp
ja
lret
push
lcall
js
in
into
mov
pop
subb
nop
leave
je
adc
sbb
mov
jb
and
or
arpl
iret
jbe
mov
pop
iret
fsubrl
xchg
inc
dec
jmp
or
jle
cmpl
and
jmp
xchg
add
dec
inc
xlat
sbb
imul
cltd
aad
mov
out
jno
xchg
mov
dec
jae
jns
mov
out
xchg
mov
ret
pop
int3
mov
dec
mov
mov
ds
arpl
mov
adc
adc
jmp
psrld
lock
sub
ljmp
fstpt
push
mov
xchg
into
idivb
stos
sbb
pop
test
roll
add
in
mov
leave
imul
mov
cmp
out
add
cmpsb
push
cli
je
les
dec
out
cltd
sub
cli
lret
repnz
jge
cmp
lahf
or
call
or
mov
cwtl
cmp
cmp
or
mov
inc
push
rcr
adc
rclb
mov
or
jbe
repnz
lods
and
xor
dec
outsl
dec
pushf
pushf
in
xchg
insl
fnstsw
xchg
push
xor
repnz
leave
ret
cmp
dec
or
in
mov
cltd
imul
orl
and
push
das
push
or
insl
mov
sub
inc
hlt
push
fildl
cmp
pop
out
and
inc
sub
jecxz
arpl
mov
pop
and
push
mov
pushl
in
mov
xchg
mov
out
dec
mov
cmp
and
ret
jne
or
aam
insb
adc
add
or
lods
pop
ret
cmp
data16
dec
pop
in
js
aaa
in
jnp
xchg
sbb
ljmp
xlat
popl
mov
xor
sbb
or
jns
push
mov
adc
je
cmpsl
outsb
sbb
mov
xorb
and
and
xor
cld
cmpsl
fs
or
mov
outsl
ds
add
sbb
sbb
inc
imul
mov
jl
pop
mov
es
mov
dec
js
shr
cmp
sbb
jle
mov
movsb
dec
xor
push
ds
mov
push
stos
fcoms
data16
mov
pop
cmp
pop
push
dec
mov
dec
sub
outsl
and
mov
cmpsl
xchg
or
aas
push
mov
outsl
mov
cmc
aas
mov
xor
push
cmp
push
call
mov
decb
xchg
ja
subb
scas
in
inc
iret
pop
fs
cmp
imulb
ja
add
adc
mov
mov
stc
pop
sbb
in
notb
push
or
mov
push
push
and
mov
imul
pop
je
push
or
xchg
shrb
mov
test
mov
ljmp
repnz
mov
adc
aas
mov
jl
pop
adc
push
aaa
lods
xchg
mov
cmpsl
loop
sahf
or
sub
loopne
repnz
xlat
sbb
dec
jns
arpl
dec
dec
aad
jge
stc
ret
orl
push
and
fists
rcrb
add
stc
cmc
adc
dec
xor
mov
scas
lock
mov
inc
shll
cmpsl
std
add
add
mov
dec
push
ljmp
out
loopne
call
mov
sub
test
scas
mov
std
les
jbe
and
test
adc
stc
sub
outsb
scas
mov
jnp,pn
pop
jl
or
faddl
das
scas
inc
xlat
pop
jmp
enter
into
jnp
cwtl
add
mov
movsl
jge
mov
pop
jge
sub
popf
call
adc
sub
add
popa
js
or
movsl
icebp
sbb
int3
or
scas
adc
mov
cmp
pop
mov
das
pop
dec
jns
mov
ljmp
scas
cmp
sti
dec
in
lock
pushl
xchg
repnz
lahf
xchg
pop
pop
rcrb
sarb
push
ja
test
push
outsb
cli
cwtl
jnp
add
jo
in
inc
shrl
movsb
ret
add
daa
lea
xor
aam
xchg
fisubl
xchg
push
insl
pop
xchg
mov
cmpsl
mov
mov
and
into
jp
adc
push
inc
xor
xor
push
cltd
aas
xlat
daa
sbb
sub
add
jg
cwtl
aas
jmp
test
inc
mov
bound
nop
shr
xor
or
inc
xlat
mov
shll
and
movsl
das
into
xchg
mov
pop
xorb
mov
fidivs
jge
lods
mov
cmp
push
aad
xchg
push
jne
inc
loopne
data16
movsb
outsb
pop
push
mov
mov
fdivl
stc
or
mov
or
popf
sbb
xlat
into
je
jae
mov
loop
cld
xchg
jbe
pushf
stc
insl
mov
and
loopne
in
adc
imul
outsb
mov
leave
hlt
push
dec
icebp
dec
mov
jnp
mov
pop
ja
repnz
inc
flds
jbe
xchg
rcl
inc
fnsave
jbe
mov
iret
jne
add
push
insl
ds
adc
xchg
sahf
or
iret
loopne
xor
mov
xor
mov
ljmp
cli
push
scas
movsb
push
sub
xchg
cmp
cld
sbb
jg
mov
pop
sub
xchg
nop
sbb
push
sbb
sub
adc
pop
icebp
dec
aas
ds
clc
test
dec
jne
outsb
out
out
sbbl
cli
es
fbld
inc
sbb
je
mov
add
push
insl
testb
inc
pushf
ficomps
cmp
cmp
xchg
call
iret
and
mov
push
mov
adc
repz
xchg
into
add
jl
data16
into
testb
push
inc
cmp
lcall
test
test
in
loope,pn
fisubl
push
in
fbstp
aad
add
jge
xchg
adc
movsl
fmull
cmp
dec
dec
jnp
shll
loope
mov
leave
pop
hlt
cmp
fs
dec
jl
cli
xor
push
loopne
inc
cmc
scas
cltd
sbb
movsb
imul
sbb
dec
std
orb
mov
jmp
jle
xchg
or
bound
shl
adc
cltd
adc
push
int
sbb
in
add
call
pop
pop
lods
movsb
sub
cli
jnp
cmpsb
rorb
jg
gs
rcll
mov
or
popf
jg
and
stos
mov
insl
mov
out
mov
mov
test
fmuls
and
mov
hlt
out
gs
bswap
shl
loop
sbb
pusha
mov
test
mov
cld
shll
xchg
out
outsl
out
pop
push
pop
mov
stc
push
out
enter
xchg
pop
push
ror
dec
inc
std
inc
mov
mov
push
push
push
adc
lcall
cmpsb
adc
jp
je
dec
clc
mov
fistpll
adc
jl
push
push
out
push
sub
or
fisttpll
stos
outsl
pop
push
jae
xchg
in
push
pop
fs
cltd
adc
xchg
adc
in
or
ret
sbb
negb
mov
out
fcmovne
fldt
xchg
jg
and
dec
jae
cwtl
insb
xchg
popf
mov
adc
pop
arpl
mov
lock
push
inc
pop
mov
lea
and
cmc
pushf
jg
es
push
xchg
cmpsl
out
add
xchg
adc
js
out
pop
test
test
imul
inc
jl
rorb
nop
cmc
scas
add
mov
inc
adc
cmp
test
xchg
push
sub
decb
mov
jecxz
test
testl
mov
sub
dec
pop
xchg
loopne
sbb
mov
lds
add
mov
mov
cmp
data16
fisttpll
rorb
fildll
fwait
das
ljmp
cmp
pop
test
dec
mov
leave
mov
cwtl
sbb
mov
scas
fcompl
xorb
aam
pop
xchg
add
xchg
cmp
icebp
out
and
cmp
push
sbb
inc
movsb
cmc
or
inc
mov
subl
add
xchg
sahf
cmp
addr16
push
cmc
imul
aas
stc
sub
add
inc
addr16
and
jno
loope
idiv
das
or
inc
adc
inc
jne
push
fwait
js
aaa
adc
arpl
mov
push
sbb
sbb
push
xor
dec
jmp
xchg
stos
jecxz
inc
or
adc
loop
mov
xchg
adc
dec
pushf
cmp
mov
cltd
lock
stos
fs
sub
enter
mov
cmc
in
es
sbb
in
inc
sub
jp
mov
xchg
daa
movsl
xchg
adc
int
add
cwtl
mov
jg
cmpsb
fstsw
lahf
lods
loopne
mov
and
xchg
js
mov
repz
rorb
xchg
mov
add
push
in
ds
fcoms
scas
xchg
rcll
and
sub
clc
pop
adc
add
test
cmp
add
test
test
fcoml
adc
pop
mov
fcmovnbe
ficoms
and
loope
push
mov
inc
sbb
push
cmpsb
fnstcw
into
aas
fisttpll
rcrb
push
sub
sub
mov
decl
inc
or
jle
pop
dec
fcmove
aaa
aaa
jne
adc
outsb
dec
mov
scas
xchg
sete
mov
adc
or
sub
cld
jnp
aas
repz
xchg
loope
test
inc
fcom
repnz
or
add
iret
sub
push
lcall
inc
popf
push
push
mov
in
xor
jno
sub
outsb
jnp
dec
out
ss
ret
gs
or
xor
in
cmp
pop
inc
loopne
aad
mov
das
jge
or
or
cmp
push
aas
aaa
add
push
xchg
std
es
xor
jae
and
sbb
mov
mov
xchg
in
stc
jb
adc
push
mov
mov
mov
aaa
xlat
mov
test
int3
push
inc
jg
test
shrl
js
push
adc
div
scas
push
xlat
popf
mov
mov
out
jmp
add
xor
mov
jecxz
jns
mov
mov
cwtl
aad
jmp
xchg
cmp
mov
ret
lds
push
pop
mov
push
addr16
adc
push
jae
aaa
lds
addr16
sub
jecxz
insb
rcrb
loopne
add
sub
or
inc
lock
xor
sub
push
mov
mov
aas
mov
and
jbe
scas
xor
cmp
dec
mov
push
cli
stos
pmuludq
sub
je
pusha
jmp
popf
rclb
ret
jp
dec
pop
mov
test
adc
sarl
jmp
or
imul
lret
inc
pusha
test
xchg
jecxz
push
js
das
es
cmp
adc
sub
push
xchg
mov
ljmp
repnz
sub
dec
mov
shlb
sbb
int3
imul
rdmsr
dec
mov
add
lahf
jbe
mov
insl
lock
fwait
ret
aam
mov
pop
sbb
xor
sbbl
xchg
and
ds
pop
shll
out
adc
lahf
mov
jo
fists
cwtl
std
loopne
mov
mov
dec
or
fcmovnb
repz
clc
push
arpl
leave
pop
jg
jle
jmp
add
mov
out
pop
mov
sub
sbb
clc
jge
inc
dec
popa
and
aad
sub
fdivrp
iret
mov
aaa
or
ret
insb
lret
dec
movsl
pop
pop
inc
push
addr16
addb
mov
cmp
dec
mov
fs
out
int3
adc
les
out
mov
pushf
ss
icebp
xor
test
pop
cmp
mov
and
ret
mov
imul
cmp
testl
sub
into
jo
cmpsb
shrl
adc
cmp
dec
gs
call
pop
push
mov
fidivrs
cmp
add
aad
add
gs
adc
test
sti
in
cltd
adc
xor
dec
daa
fst
adcb
loop
sbb
xorb
xchg
gs
test
imul
xor
hlt
or
mov
or
mov
pusha
and
add
fildl
arpl
hlt
and
adc
push
es
fcompl
push
jbe
sbb
movb
pop
inc
xor
inc
bound
sub
stc
ret
icebp
pop
xor
pushf
mov
lret
inc
test
and
repnz
mov
cmp
loope
xor
pop
xchg
push
xchg
jns
dec
fninit
push
sbb
pushf
pop
stos
push
jg
into
imul
cmp
emms
sub
jae
inc
cmp
jns
or
dec
int3
pop
cmp
and
insb
sbb
repz
mov
push
xor
mov
jno
adc
fbld
fimull
jne
add
jbe
mov
lods
std
sbb
das
mov
sbb
xchg
jg
filds
sub
ds
hlt
xor
ror
mov
adc
xchg
xchg
sub
mov
jb
subb
cmp
outsl
inc
mov
dec
fnsave
rcrb
adc
lcall
arpl
int3
outsl
pusha
jle
test
out
stc
jg
ret
or
xor
push
sub
sub
cltd
push
pop
mov
xchg
adc
jecxz
push
ret
mov
xor
push
sbb
xlat
jl
or
ret
into
fistl
xorb
js
cmp
and
inc
loopne
dec
or
push
fmulp
lock
iret
sbb
mov
shll
xor
rcrl
or
xchg
jge
push
out
jmp
psrad
or
int3
mov
cmp
pop
dec
cmp
cmc
mov
and
jns
mov
sub
fmull
nop
dec
cmp
jae
lahf
push
inc
mov
xchg
push
ret
decl
repnz
xchg
jmp
stos
inc
outsb
push
mov
inc
dec
jns
jno
jae
dec
enter
pusha
adc
dec
in
je
or
push
inc
mov
loopne
iret
adc
in
sbb
pop
movl
rcrl
pop
xchg
pop
lods
jl
dec
inc
inc
into
mov
fdivrs
inc
pop
mov
jno
shlb
stos
dec
das
ret
add
movsb
xchg
adc
sbb
call
aad
int
dec
mov
aad
adc
push
pop
sub
xor
inc
ljmp
and
inc
cli
sbbb
sub
stc
xchg
mov
or
mov
in
repz
lods
fucomip
adc
mov
or
stos
adcb
pop
cmc
ljmp
jns
nop
cmp
ret
fs
cwtl
aam
rcll
stos
insb
add
outsl
inc
fistps
test
add
adc
xchg
enter
out
stos
push
inc
sbb
push
std
in
imulb
mov
mov
rcr
repnz
shrl
xchg
mov
xchg
cld
push
sub
mov
xchg
stc
mov
aas
dec
sub
daa
and
insb
dec
lods
incl
es
loope
imul
cmpsl
lock
loope
imul
scas
call
pop
imul
push
repnz
jp
out
stos
mov
pop
xor
inc
addb
ret
or
call
scas
lea
psubq
mov
push
xlat
mov
scas
cltd
mov
rcrb
gs
push
pusha
ret
cmpsl
xor
xor
pop
sbb
push
mov
dec
lds
stc
mov
jo
in
out
xchg
cmp
push
xor
jmp
push
daa
xchg
dec
in
ret
repnz
xchg
jns
cmpsb
push
adc
jo
cmp
das
lock
add
inc
stos
jmp
adcl
mov
xor
or
lods
shlb
lods
iret
fildl
xor
outsl
rorb
push
sbbl
daa
pop
inc
xchg
xchg
out
daa
adc
outsb
inc
jnp
add
movsb
insb
mov
adc
stc
movsl
ret
in
mov
addr16
fcoml
sub
leave
jle
push
mov
scas
icebp
test
lret
add
mov
lods
sahf
rorb
and
adc
push
out
mov
das
in
es
xor
in
icebp
in
push
push
movsl
rorb
sbb
push
fisttpll
dec
inc
push
push
pop
stc
hlt
cmpsl
test
jnp
dec
push
lahf
xchg
cmc
jbe
sbb
xchg
push
shl
push
lock
adc
jne
dec
xor
adc
addr16
dec
int
and
lods
ret
or
jp
xlat
lock
pop
add
lret
mov
lds
subb
ficomps
push
pusha
add
rcrl
and
add
add
adc
mov
pop
sti
gs
push
clc
vmovaps
popl
clc
xor
mov
jbe
pop
sub
mov
mov
pop
inc
subb
in
and
lahf
xor
cmp
sahf
out
push
dec
cmpsl
or
outsl
mov
xor
imul
jle
jne
cltd
movsl
rol
ret
testb
lods
mov
daa
add
jmp
leave
jbe
mov
arpl
roll
stos
je
sbb
xor
xor
ja
sub
inc
repz
add
xor
mov
dec
fstps
xor
xor
lahf
dec
aas
mov
jns
xchg
lea
mov
xchg
push
into
test
push
pop
cmp
mov
inc
and
ss
adc
pop
sub
into
call
test
rcrl
dec
inc
jbe
xchg
inc
outsb
outsb
cmpsl
jmp
gs
cmp
jb
call
adc
test
dec
scas
or
mov
popa
scas
cltd
xor
rcr
xlat
bound
lods
push
pop
repz
aaa
andl
mov
jnp
push
sbb
mov
jge
mov
add
ja
dec
push
testl
and
add
push
inc
mov
jecxz
addb
stc
ss
sub
mov
xor
popf
adc
adc
push
jge
push
mov
sub
cltd
clc
mov
cltd
out
jns
jae
mov
negb
push
scas
pop
pushf
fimuls
and
fadds
aad
or
idivb
or
aad
cld
mov
pop
mov
fldcw
movb
lods
movsl
xchg
cmpsb
and
mov
pop
roll
bound
cmp
sbb
call
inc
lahf
and
stos
daa
xchg
rorb
jle
and
mov
notl
imul
divl
adc
sbb
std
sbb
call
testb
adc
mov
out
add
out
xor
jge
xchg
pushf
into
sub
pop
push
push
push
sbb
addb
mov
cltd
test
xlat
lea
cld
xor
movsl
jmp
rclb
or
add
adc
pop
xor
addr16
es
dec
jno
xor
xchg
lock
xlat
fs
dec
in
or
hlt
call
jecxz
cmp
mov
stos
mov
sub
mov
adc
sbb
jnp
lods
jle
ret
xor
push
dec
cmc
xor
sub
push
or
lods
or
movsl
aam
in
fs
dec
dec
lret
mov
sbb
mov
pop
jmp
bound
add
pusha
sbb
cmp
add
add
fsubs
ss
xor
push
fbld
sbb
aam
das
pop
dec
jb
and
add
out
pop
sub
shr
sahf
adc
xor
cld
cmp
push
sahf
push
dec
je
mov
test
adc
and
dec
jno
mov
mov
cmp
pop
aad
inc
jg
test
dec
loope
lea
xchg
jge
add
pop
push
push
dec
in
mov
inc
and
decl
jge
addr16
xor
sbb
jb
movsb
cld
push
gs
sbb
xor
outsl
add
fnstenv
into
mov
daa
inc
ret
pushf
jb,pt
cmpsb
cld
fcoms
addl
sahf
push
roll
cltd
out
xor
and
jbe
hlt
popa
and
or
add
mov
add
mov
test
xor
mov
xchg
addr16
clc
divl
xor
mov
xchg
out
imul
insl
shll
mov
jmp
jp
addr16
cmc
pop
push
or
add
push
in
sub
mov
adc
mov
outsl
in
call
cld
sbbl
mov
mov
or
iret
cmpsb
bswap
inc
lods
and
mov
pushf
ret
xor
inc
mov
fwait
lret
and
movsl
hlt
in
sbb
mov
xchg
xor
dec
les
and
push
push
cwtl
leave
jae
jl
xlat
fnsave
out
repnz
cld
xchg
fsts
cmpsb
mov
and
push
sub
data16
sbb
sahf
int
fsubrs
sub
ljmp
adc
mov
adc
das
out
mov
inc
jle
mov
push
mov
lcall
adc
pop
mov
sbb
icebp
inc
lahf
mov
stos
in
clc
fimuls
pop
sahf
sub
ret
cmpsb
inc
sbb
pop
imul
in
cltd
les
sub
and
cmp
xor
xchg
jbe
sahf
mov
rcll
mov
mov
aam
inc
push
xlat
mov
dec
cmp
adc
andb
int3
je
xchg
mov
in
adc
pop
lea
cmpsb
in
les
adc
idivb
mov
sbb
or
lock
add
enter
es
ds
insb
outsl
xchg
pop
aam
mov
push
xchg
hlt
sub
or
cltd
mov
add
push
not
pop
aas
cmp
repnz
push
and
xor
cmpsl
inc
pop
jns
mov
cs
and
sub
lahf
mov
cld
sbbb
push
cmp
xor
neg
fisubs
out
cmp
xor
stc
and
aas
fimull
ja
adc
in
icebp
xchg
adc
push
and
cmp
out
sarl
or
out
xchg
sbb
negl
mov
popf
cli
mov
cli
aam
sub
pop
popf
lock
and
adc
bnd
gs
cmpsl
fildll
mov
outsb
lock
dec
cwtl
xchg
pop
mov
shrl
mov
xchg
jmp
fs
cmp
scas
push
mov
pop
mov
pop
cmpsb
push
cmc
movsl
mov
bswap
and
cmpb
jp
iret
clc
jle
into
orb
add
add
dec
testl
out
out
out
leave
stc
aam
inc
pop
xchg
dec
add
xchg
mov
sub
nop
jns
jbe
repnz
and
pop
test
or
and
lret
xor
pop
add
arpl
xchg
pushf
xlat
pop
call
lahf
scas
dec
sub
push
and
mov
inc
mov
dec
ds
mov
out
add
mov
das
mov
dec
out
stos
push
ljmp
add
xchg
and
das
xchg
adc
or
imul
cwtl
inc
pop
and
dec
fdivs
xchg
cmp
xchg
xor
es
dec
popf
repz
sbb
ror
stos
or
push
rcrl
neg
xchg
xor
sbb
sub
lds
or
mov
push
or
ja
mov
imul
int3
mov
sub
dec
fmuls
dec
mov
data16
sub
dec
push
and
sbb
mov
inc
loop
mov
and
fcomps
sub
test
fxch
cmp
push
mov
fdivrs
inc
push
jae
lds
nop
pop
mov
push
jmp
int3
fcmove
fbld
lods
sbb
push
out
and
mov
mov
fdivrs
mov
xchg
in
xor
lret
jnp
cmpsb
jg
adc
bound
jo
decl
dec
je
scas
mov
stc
popa
xchg
cltd
mov
cld
in
or
int3
loope
jb
test
cmp
mov
insb
xchg
pcmpeqd
movsl
mov
dec
cli
dec
fdivrs
sbb
sub
jmp
repnz
nop
xchg
mov
daa
pusha
mov
or
push
test
or
push
mov
ljmp
xchg
out
inc
push
cli
add
popf
push
int
stos
in
sbb
cwtl
mov
out
push
sub
stc
imul
xor
mov
ret
xor
adc
pop
rclb
inc
rcll
jne
inc
cmpsl
jle
push
psllq
aad
cmp
aaa
mov
mov
in
jecxz
enter
mov
mov
add
pop
xchg
aam
or
push
mov
imul
dec
push
or
dec
push
loope
mov
int3
in
out
xchg
jecxz
ss
and
ret
imul
loop
xor
aas
mov
stos
fcmovb
mov
int3
add
jo
mov
lahf
ja
test
inc
mov
dec
pop
mov
xor
subl
lcall
loop
stc
pop
sahf
push
ds
xchg
into
pop
xchg
into
gs
add
arpl
cmp
pusha
lods
lock
mov
pop
jl
pop
jg
adcb
fs
leave
lret
lods
rcrl
cmp
xor
push
xchg
ljmp
adc
inc
cmp
ja
push
rclb
pop
gs
mov
mov
and
mov
lahf
repnz
aad
push
sbb
xchg
nop
pop
shlb
cmp
inc
mov
pop
lods
test
es
jge
pusha
outsb
xchg
sub
jp
in
inc
stos
fists
lods
push
lea
pop
mov
insl
inc
mov
arpl
xchg
std
stos
xchg
int3
mov
push
shl
xor
add
inc
sub
mov
stc
cmpsb
xlat
dec
mov
push
jo
cmp
fsubp
loope
cmpsb
fwait
sub
in
repnz
cmp
mov
pop
jno
test
dec
inc
sbb
inc
arpl
jg
std
adc
rclb
movsb
data16
pushf
imul
into
scas
outsb
mov
xchg
loopne
xchg
je
xlat
mov
repnz
adc
outsb
jns
push
js
jmp
in
or
sub
cltd
mov
popf
cmp
addb
push
mov
jbe
mov
push
inc
cmp
xchg
je
in
cmp
and
adc
lret
add
push
stc
sbb
aas
fs
mov
cmp
mov
adc
mov
lods
mov
jge
lcall
test
sbb
lcall
cmpl
test
rcr
xchg
mov
popa
ljmp
mov
mov
pop
repnz
nop
dec
add
scas
fs
pop
cmp
divb
insl
lcall
lods
test
mov
cmc
jg
arpl
jmp
jp
adc
test
mov
dec
mov
jnp
dec
pushl
pop
mov
add
cmp
movsl
mov
mov
gs
cli
gs
push
ss
or
pop
adc
xchg
dec
xchg
aad
int3
imul
add
out
fstps
add
popf
iret
pop
mov
in
int3
les
xor
jecxz
sti
add
iret
iret
gs
stos
movsl
loop
add
repz
movsb
xchg
dec
push
mov
xchg
lcall
and
xchg
mov
lock
je
inc
ret
cmpl
mov
mov
jl
or
jbe
jl
scas
cltd
or
push
es
and
insl
mov
inc
fnstsw
pop
jno
idivb
lret
fwait
mov
mov
and
aad
xlat
inc
bound
ret
data16
jge
sub
outsb
mov
pop
push
inc
mov
fcoms
xchg
js
mov
addr16
sbb
pop
mov
dec
int
imul
ficoml
mov
xchg
fcmovu
xor
xchg
movsl
icebp
stc
cs
arpl
lret
stos
inc
jno
sbb
and
mov
xchg
cmp
jmp
mov
add
repz
push
jns
inc
jecxz
test
popa
and
inc
lret
mov
out
mov
push
pop
inc
add
rorb
fidivrl
setl
rcrb
stc
icebp
mov
test
imul
pop
pop
inc
push
inc
in
faddl
pushf
sub
jl
add
jge
dec
jnp
mov
or
leave
in
test
stc
push
daa
push
in
mov
mov
mov
xor
inc
mov
push
xchg
xchg
xlat
mov
jnp
outsl
mov
mov
int3
arpl
pop
repnz
fimull
jns
xchg
push
outsl
repz
aas
or
add
sub
mov
loope
inc
movsl
mov
jo
push
inc
xor
test
pushf
loope
fs
lock
and
in
xor
sub
adc
mov
in
shrl
add
pop
fsubrs
inc
test
decb
stos
adc
pop
fsubrl
popf
and
cmp
push
or
int
pop
inc
outsb
es
mov
imul
jl
pminub
int
jp
mov
mov
ljmp
jb
push
inc
outsb
push
pop
mov
movsb
daa
jmp
lods
lock
push
add
out
leave
dec
or
rclb
fisubrl
push
push
das
repnz
outsb
pop
repz
aas
fnstsw
cmp
lods
add
in
xor
in
pop
mov
aaa
xor
or
xchg
test
add
sbb
scas
push
cmc
xor
mov
and
and
fiaddl
push
leave
inc
loopne
mov
fbld
shrl
lret
imul
fistl
insb
stos
jb
mov
xchg
movsl
mov
xchg
xchg
and
push
mov
repz
xchg
js
ss
xor
jns
inc
std
inc
adcb
push
adc
xor
mov
imul
imul
mov
dec
jg
and
cli
shll
inc
lret
dec
pop
push
shr
xchg
les
insb
push
jmp
pusha
jne
xchg
fsubs
mov
data16
inc
insb
fstp
jp
jge
xchg
icebp
sbbb
out
fincstp
test
arpl
pop
fadds
loope
imul
stos
pop
xlat
xchg
inc
aas
xchg
dec
pop
stc
or
sub
push
imul
sub
xchg
and
pop
out
add
xor
mov
push
push
pop
jge
out
push
adc
mov
pop
push
dec
repnz
mov
sar
xchg
pop
xchg
push
dec
mov
inc
jbe
sub
js
repnz
push
lcall
xchg
sub
pop
loopne
sbb
push
andb
jbe
xor
verw
and
mov
or
lret
fstp
sbb
cld
inc
and
xchg
ljmp
cmp
and
inc
mov
lock
inc
xchg
cmp
cli
cwtl
jg
sub
aad
lret
mov
xor
add
mov
sub
dec
std
ljmp
push
cmpsl
push
aaa
lret
adc
xor
mov
clc
xchg
negb
inc
ret
shrl
sub
daa
divl
inc
adc
cmp
jo
stc
fwait
std
movsb
sub
sub
mov
inc
in
mov
xor
imul
ret
fsubs
sbb
test
and
pop
imul
movsb
test
std
xlat
fs
push
pop
inc
negl
dec
shlb
test
and
loop
in
cmpsl
movsl
movsl
mov
xchg
mov
popa
xor
lds
adc
add
sub
push
dec
nop
jp
mov
lret
jb
stos
and
and
mov
jp
xchg
aas
jg
ss
sahf
jecxz
int3
jge
mov
push
push
stc
in
sbbl
iret
dec
add
push
dec
xchg
inc
cmpsb
cs
mov
mov
pop
mov
cmp
cli
arpl
lea
stos
mov
pop
int
loopne
lcall
testb
mov
pop
pop
mov
push
fwait
call
cltd
repnz
cmpsb
addl
lcall
jecxz
and
outsl
lea
or
divl
xor
dec
por
push
xchg
add
int
push
fildl
xor
mov
cmc
add
jnp
xor
int
xchg
test
xchg
mov
cmp
les
cmc
push
mov
mov
or
cltd
stos
int3
leave
inc
cmp
in
rclb
insb
aam
lret
call
repnz
dec
mov
stc
ficoml
lods
inc
movsl
in
mov
imul
xor
call
ror
and
push
jbe
sbb
sbb
aad
dec
hlt
xor
dec
jne
test
leave
out
mov
das
pop
les
and
fst
mov
cmp
hlt
add
push
outsb
stos
int
pop
cld
in
in
in
inc
push
aaa
cld
in
sbb
xor
sahf
mov
pop
xor
mov
jb
push
mov
ja
aad
aam
add
sbbl
adc
dec
fmulp
sbb
add
cmp
adc
test
stc
sub
outsb
inc
mov
fcompl
ret
sti
fidivl
dec
into
fdivl
lahf
je
std
mov
adc
adcb
xchg
mov
pminub
ret
pop
cmp
loope
push
sbb
jge
mov
xor
mov
jb
shll
or
xlat
lods
sbbb
inc
fmul
add
xchg
xchg
pop
movsl
and
cmp
mov
daa
fmuls
mov
mov
sahf
cmpsl
or
shlb
jecxz
pop
and
mov
lret
mov
cli
pushf
dec
aad
xlat
xchg
dec
shrl
sub
push
filds
cltd
fnstenv
jne
daa
std
mov
xor
in
add
inc
mov
or
jb
mov
sub
testl
rcl
add
pop
add
jecxz
shrl
xor
mov
pop
dec
cs
outsb
mov
xchg
hlt
xchg
jno
or
sbb
sbb
jp
cmp
pop
pop
xor
lds
sti
dec
mov
inc
pushf
or
xor
sti
js
dec
ljmp
icebp
leave
out
mov
bnd
jns
adc
mov
pop
nop
test
pop
add
mov
push
mov
and
pop
lds
test
sbb
jb
push
in
sub
xor
xchg
xchg
fisttpll
outsb
adc
ss
lods
sub
sti
in
stc
mov
mov
in
sub
rcl
pop
jns
shrl
notb
rclb
push
cmp
xchg
dec
sub
sub
movsb
inc
mov
jns
push
movsb
jecxz
imul
sub
int
testl
and
dec
sub
jg
out
pop
cmc
jno
push
add
jnp
fst
outsl
pusha
fwait
xchg
lods
xor
and
out
push
sub
inc
add
out
add
mov
push
cmp
es
inc
jle
push
push
adc
stos
mov
es
stos
repnz
ds
sbb
sbb
fdivl
aad
jp
push
cmp
jle
and
push
xchg
aad
in
popa
push
shr
push
mov
nop
out
call
mov
mov
jnp
dec
ja
jmp
clc
add
leave
outsb
mov
lcall
pop
ss
int3
stc
loope
and
cmpsl
add
popl
adc
stc
out
xchg
popa
rcr
das
daa
test
jmp
mov
add
sarl
sbb
push
push
mov
mov
clc
insb
int
jnp
xchg
insl
inc
inc
cli
adc
cmp
into
cmp
pop
mov
call
adc
adc
cmp
jle
rclb
mov
nop
lods
arpl
or
sub
jns
add
int
xchg
data16
ss
cmc
push
orb
jge
lods
jne
cli
ja
cmp
test
imul
mov
push
repz
xor
lods
pcmpeqd
push
mov
test
stc
sbb
mov
ffreep
dec
sbb
into
xor
inc
push
sarl
out
or
in
outsb
push
pop
daa
jge
mov
xor
lahf
add
jnp
and
inc
out
xchg
sbb
jecxz
fs
aas
andb
mov
lea
insb
adc
cmp
call
mov
mov
out
jo
lods
inc
dec
jbe
xlat
imul
mov
ljmp
ss
lds
pop
lcall
repz
inc
push
or
imul
mov
xor
fldl
cld
add
aam
cmp
pusha
sbb
mov
pcmpeqd
pop
jnp
int3
adc
fisttpl
mov
repz
mov
pop
fucom
fdiv
insl
mov
hlt
jmp
loopne
and
nop
and
leave
and
sbb
lods
insb
bnd
ss
data16
js
fists
lahf
out
cld
xorb
pusha
add
xor
push
ljmp
mov
shl
lret
mov
xlat
jp
hlt
dec
adc
mov
idivl
cmp
cli
in
repnz
jns
or
scas
mov
mov
icebp
xchg
bound
mov
int
sti
pop
mov
push
out
add
jg
adc
xchg
xor
out
inc
mov
mov
sub
jmp
out
shlb
arpl
or
sub
mov
cltd
add
or
xchg
jmp
and
testb
mov
mov
lret
pop
shlb
xchg
enter
jns
lret
test
incl
fwait
or
or
lcall
les
adc
icebp
iret
sbb
jecxz
pop
push
inc
shlb
cmpsb
lods
or
ja
scas
fnstcw
dec
and
jmp
xlat
inc
jg
call
shll
nop
in
mov
dec
sbb
mov
add
or
popf
mov
jnp
adc
push
insb
and
repnz
inc
lret
jns
stos
push
arpl
add
mov
rcr
sbb
push
jg
xchg
sub
pop
fs
roll
enter
ror
mov
fstpt
fs
clc
jns
aas
cmp
fwait
or
inc
jmp
inc
xlat
shlb
mov
fs
jge
pop
push
add
bound
scas
nop
sti
add
scas
je
xchg
popf
scas
mov
loopne
pop
inc
insb
fs
pop
rorl
dec
int3
shlb
mov
xor
movsl
push
push
adc
push
leave
sbb
ss
mov
adc
repnz
rcrl
arpl
leave
mov
jo
and
adc
mov
ret
pop
les
xchg
scas
xchg
cltd
cld
pop
xor
and
sbb
sub
lahf
push
dec
add
ja
sti
xchg
insb
rcrb
inc
pop
or
push
lock
mov
popf
loopne
hlt
xor
xor
xchg
xchg
gs
scas
and
cli
push
add
cmp
sbb
andb
pop
add
aad
icebp
mov
les
daa
jmp
inc
ret
mov
xor
push
rclb
out
lds
cmp
sub
jbe
push
in
cmp
test
cld
mov
iret
and
jae
dec
lret
dec
and
in
cmp
fsubrl
leave
xlat
add
jnp
mov
daa
mov
xor
and
sahf
imul
mov
cld
inc
lock
xchg
testl
push
imul
int3
mov
push
xchg
push
and
pop
or
jb
xchg
or
lds
decl
push
hlt
loop
mov
bound
jo
mov
fmuls
pop
fbld
pop
add
sub
mov
scas
mov
sub
add
lods
adc
jg
lahf
aam
jno
jb
sub
cld
add
push
jl
insb
xchg
xchg
pop
jne
dec
out
mov
mov
jns
inc
add
arpl
jnp
mov
call
fwait
xchg
and
xor
sbb
popw
inc
jb
jno
mov
cmc
sub
jecxz
orb
lods
adcb
cmp
inc
enter
cwtl
jg
or
push
xchg
jp
scas
ljmp
mov
add
std
imul
lods
jns
bound
sbb
cmp
lret
xchg
mov
sub
lret
dec
jmp
es
mov
shl
lar
enter
ja
jae
ss
jmp
divb
xchg
sub
mov
insb
push
and
adc
leave
fwait
cli
adc
sbb
call
jno
adc
push
xor
orl
sub
test
lock
popf
mov
mov
jmp
imul
shll
and
lods
lret
sbb
xchg
and
push
lods
pop
xchg
jo
cwtl
sub
cld
xchg
dec
inc
int
jmp
imul
dec
pop
mov
xor
push
mov
movsb
add
jbe
fwait
pop
dec
aaa
xlat
add
jo
jns
push
notl
add
ss
and
adc
cmp
hlt
push
mov
mov
stos
clc
push
mov
fbld
aaa
xor
mov
roll
outsl
stos
add
incb
mov
in
mov
imul
jne
cli
sbb
push
cltd
in
push
jmp
ljmp
push
sahf
popf
and
jb
lock
xchg
inc
push
fstpt
imul
frstor
mov
scas
pop
into
push
test
or
rcll
stc
movsl
bound
wbinvd
xchg
lahf
and
sub
mov
push
fdivrs
lret
adc
scas
dec
or
mov
xchg
pop
and
ret
jge
es
testb
fldl
pop
subl
and
addr16
pop
pop
mov
mov
jecxz
dec
dec
cmp
mov
dec
testl
flds
daa
adc
dec
push
daa
sbb
fwait
inc
push
mov
cmp
popa
std
push
inc
loope
inc
imul
dec
pop
cmp
int
enter
std
xchg
lods
pop
ja
cwtl
int
dec
cli
xor
cwtl
ljmp
movsb
mov
pop
pop
xor
or
push
cld
push
in
sti
sbb
cmpl
cltd
shl
ljmp
mov
xor
xlat
push
iret
push
fs
adc
or
inc
xchg
mov
out
jns
and
and
cwtl
xchg
cs
popf
cmp
mov
mov
and
xchg
inc
or
pop
push
sub
test
fldl
xorl
pop
dec
mov
ljmp
imul
xor
popa
sub
jmp
pop
stc
daa
rcll
in
repz
sub
push
icebp
add
scas
pop
adc
loopne
daa
insb
add
enter
insb
movsb
add
mov
cmpsl
lahf
imul
xchg
push
mov
pop
dec
in
mov
clc
mov
arpl
das
jl
jg
cmp
push
scas
or
inc
jp
data16
sbb
scas
jae
in
faddl
inc
add
cmp
int3
ret
in
mul
pop
lods
or
jae
push
jae
lret
out
aaa
mov
ljmp
out
rcrb
cwtl
cmpsl
inc
js
add
cmp
out
mov
into
adc
sbb
push
adc
push
imul
dec
out
fs
add
lret
mov
inc
out
mov
daa
adc
icebp
cmp
adc
inc
aas
push
sub
int3
push
sub
nop
xor
addr16
rcl
enter
xchg
dec
es
xor
lods
pop
les
mov
pop
dec
add
mov
push
inc
cmp
movsb
ljmp
out
in
add
and
ficompl
enter
sbb
out
jb
call
mov
jg
mov
sbb
xchg
xchg
adc
jae
fldenv
sub
repz
adc
cmp
jp
add
shl
xchg
cld
adc
push
ret
dec
divb
push
push
xrelease
in
shlb
add
pop
outsl
movsl
fwait
call
jb
aad
inc
xorl
jmp
inc
loop
scas
in
pop
loop
dec
sub
fnstsw
cmp
iret
into
mov
dec
dec
and
cmp
inc
mov
pop
xlat
out
call
aas
mov
jmp
dec
push
bnd
scas
adc
iret
out
jecxz
cmp
fstps
mov
pushf
pop
cli
xor
push
push
shlb
jb
adc
inc
fmul
jo
sbb
mov
dec
cmp
xchg
sub
lahf
fs
jb
adc
push
jne
or
dec
push
pop
adc
out
les
jl
cmp
and
adc
stc
ret
popa
popa
jmp
push
imul
cmp
and
xchg
pushf
cld
icebp
mov
dec
repz
cmp
pop
cltd
jle
xchg
mov
adc
shll
faddl
xlat
movsl
sbbb
cmpsl
bound
mov
fcomps
mov
cmpsl
lret
jne
mull
or
xchg
lock
push
jmp
mov
repnz
pusha
mov
sbb
into
jae
popa
daa
sar
outsl
fstps
fwait
popf
jecxz
mov
cmp
inc
cld
ja
mov
adc
xchg
fisubl
lds
jns
add
ret
mov
and
push
adc
fistpll
mov
repz
pop
ds
lea
popf
pop
add
inc
dec
imul
lcall
imul
jge
imul
je
cmpsb
icebp
loope
xchg
jno
sbb
xor
ret
push
imul
nop
xchg
or
iret
nop
hlt
add
mov
mov
xchg
adc
mov
or
pop
jo
iret
repnz
out
loop
rcll
pop
ret
cld
div
push
popf
hlt
mov
sub
sub
jne
lcall
dec
mov
pusha
mov
imul
mov
out
mov
mov
add
shll
ja
aaa
fildl
dec
mov
sub
xor
int3
xor
or
or
jns
sub
sub
pushf
inc
mov
jno
cmp
int3
push
mov
ja
popf
jle
adc
jnp
cmp
xorb
xor
shll
pop
and
std
popa
add
mov
jns
mov
pop
addr16
add
cmp
out
mov
loopne
scas
idivb
fiadds
push
mov
fimuls
shlb
addb
mov
test
inc
inc
enter
repnz
jle
cltd
pop
xchg
xorl
adc
cmp
mov
xor
cwtl
test
and
inc
dec
cmpsb
insb
mov
dec
insb
xchg
and
mov
mov
fs
or
push
aas
rolb
adc
outsl
inc
jno
mov
std
rcrl
xor
inc
fs
push
adc
aaa
push
mov
into
xchg
sbbb
movsb
push
dec
ljmp
loope
aad
int
xchg
stos
cmp
orl
jae
mov
pop
jo
gs
inc
arpl
aas
pop
in
xor
cmp
or
mov
test
fidivrs
push
pop
fstpl
mov
enter
jl
pop
ja
shlw
pushf
aad
leave
xchg
lahf
clc
in
push
sbb
pop
push
cmpsb
ss
lret
push
das
xchg
mov
test
adc
in
outsb
fldpi
bound
inc
and
in
or
mov
inc
pop
and
das
shlb
dec
mov
add
ljmp
clc
xor
mov
lea
ficoms
das
xor
sbb
jnp
notb
cmp
push
dec
jle
aas
inc
fistl
aad
adc
std
das
pop
mov
pop
push
je
addl
sahf
and
sbb
mov
mov
jb
mov
push
jg
sub
xchg
daa
push
rcll
jae
add
pop
dec
xchg
lret
icebp
xor
lods
push
add
pop
iret
imul
add
dec
and
sahf
ret
cmp
faddl
pop
pop
out
das
push
out
loopne
sbb
add
mov
scas
cltd
sti
cli
or
stos
adc
push
sbb
cmc
sub
pop
ljmp
pop
jmp
cmp
or
into
pop
cmc
sbbl
xor
lahf
push
sarb
mov
inc
push
jno
mov
push
not
xor
sbb
xchg
sbb
mov
pop
int
dec
mov
or
dec
push
sti
cmp
push
jnp
adc
out
mov
jge
test
insb
sub
and
or
xlat
push
and
xchg
mov
push
and
xlat
cmp
subb
jecxz
shlb
outsb
xchg
mov
gs
pop
jg
mov
js
xor
mov
or
dec
into
cmp
xchg
loopne
aaa
xor
cld
xor
ret
mov
insb
loopne
push
mov
shr
cmpsl
xchg
sbb
push
cmp
ds
cld
lret
arpl
lock
loopne
jmp
cli
movl
xchg
push
sbbb
push
xchg
popa
mov
add
cmp
in
and
xchg
sti
icebp
subb
sbb
insl
pop
fcoms
xor
mov
inc
xor
sahf
addr16
in
bound
and
les
pop
inc
adc
jl
std
scas
xor
cs
dec
aad
loop
mov
inc
inc
rclb
jbe
sub
mov
or
xchg
lods
and
fdivrs
int
pushf
dec
je
jbe
sti
mov
gs
jle
ss
xchg
cmp
cmpsb
mov
xchg
sub
into
mov
xor
in
rcrl
scas
sbb
rsm
mov
or
je
mov
leave
add
and
adcl
push
nop
inc
xchg
xchg
mov
xchg
bound
push
push
cmp
sub
mov
ja
mov
imul
mov
jp
in
fmuls
packsswb
xchg
push
rcrl
mov
stc
mov
cmpsb
out
pop
mov
and
cwtl
adc
cltd
insl
lret
push
jns
inc
test
push
dec
das
xor
ds
xchg
inc
cltd
enter
push
insb
lock
sbb
mov
stos
sub
orb
add
in
inc
push
scas
inc
xchg
cmp
push
mov
fs
sbb
lahf
rcrl
jp
insl
ljmp
push
jae
imul
popa
dec
cld
or
loop
fwait
xlat
mov
icebp
adc
ret
cmp
mov
repnz
push
xchg
mov
push
jle
xchg
xchg
add
mov
mov
jbe
jne
xor
sarl
mov
rclb
mov
add
ret
cli
sti
cwtl
repz
and
orb
in
sbb
sahf
sbb
dec
xchg
ljmp
cmp
test
cmp
xchg
sub
pop
lea
sahf
pop
pop
mov
cmp
and
scas
pop
leave
and
inc
pop
pop
out
or
adc
loop
sbb
cwtl
imul
pop
rorl
rcrl
aam
push
push
popf
xor
mov
out
cmc
jge
pop
je
dec
push
sbb
test
push
shll
out
jne
shll
jo
sub
adc
xor
mov
and
mov
bound
in
loop
sub
ja
sub
stos
dec
jle
ljmp
sti
and
icebp
lret
and
imul
lahf
mov
jl
stos
push
loope
add
mov
test
imul
lret
jle
push
lahf
cmp
mov
add
jl
movsb
mov
rcr
mov
test
xchg
outsl
sub
lds
sbb
pop
push
in
ja
mov
rorb
mov
xchg
and
adc
xorb
clc
fdiv
mov
pop
test
aad
pusha
addr16
or
cmp
orl
adc
mov
pop
cmpsb
mov
sbb
insl
ret
fimuls
aas
mov
mov
cmpb
out
loope
scas
int
push
mov
out
jno
fwait
jmp
scas
sbbl
xor
stc
cmc
jns
push
add
or
or
pop
push
jae
jle
out
xor
cwtl
or
mov
cmp
lock
mov
push
rolb
add
cli
out
outsl
add
std
insb
mov
movsb
and
cltd
xchg
inc
cmp
enter
fdivrl
xor
mov
movsl
jno
sbb
mov
inc
int
mov
push
sbb
push
xor
cmp
leave
mov
sbb
pop
add
add
lods
jp
in
push
imul
sub
cmc
add
or
xchg
nop
push
outsl
fdivl
pop
aaa
and
aas
das
fs
push
cmp
lret
sub
fs
shrl
je
pop
jge
adc
adcl
and
sub
jno
notl
test
movsl
xchg
jmp
jle
bound
addb
test
sub
fnstsw
cmp
rcrb
sub
or
mov
fisttpll
rolb
or
inc
cmp
adc
xchg
pop
andb
jae
js
es
fnstenv
std
mov
ret
iret
sbb
out
cmp
xor
jne
xor
inc
cmp
stos
pop
sbb
aas
mov
mov
adc
fidivl
scas
sbb
rcrb
push
fisubl
ret
dec
sub
in
mov
dec
imul
fwait
jge
add
inc
mov
dec
es
lret
stos
out
mov
fucomip
fs
adc
js
fisttpll
jns
pcmpgtd
add
cmp
mov
ss
iret
xchg
mov
lea
scas
sbb
mov
or
xchg
push
add
imul
pop
pop
jns
loope
lret
inc
and
mov
out
leave
xchg
fcoms
xchg
sahf
insl
imul
aaa
test
aad
mov
addr16
mov
lcall
lods
sub
add
scas
arpl
and
and
and
stc
jae
mov
mov
cli
cli
dec
xchg
stos
or
sbb
mov
cmp
popa
das
shrb
adc
loopne
dec
rcll
je
xchg
push
and
call
xor
jne
xor
adc
lods
mov
push
icebp
jmp
das
mov
mov
xchg
inc
mov
leave
out
and
xchg
lea
mov
and
arpl
xor
jnp
leave
aas
push
frstor
jle
rep
sub
out
push
lods
xor
jns
and
in
mov
xchg
jp
pop
pushf
mov
cwtl
pop
or
addr16
jmp
rclb
lods
shrb
and
shll
pop
daa
adc
or
add
and
pop
sbb
scas
dec
repz
xchg
and
les
sub
imul
aas
push
adc
ret
cmp
push
push
bound
and
xchg
sbb
or
clc
jecxz
aas
push
fisubl
fldcw
add
popa
jg
jb
adc
xorb
call
xlat
adc
ror
cld
into
das
lods
sub
cmp
lcall
mov
push
vphadduwd
arpl
dec
xorl
jo
sub
ficoml
mov
cmp
sbb
push
scas
mov
mov
scas
mov
clc
inc
imul
test
mov
cmp
xchg
inc
dec
cs
xor
int3
pop
ss
pop
pop
cmp
mov
test
add
lahf
scas
cmp
sti
rorb
mov
fnstenv
jmp
xchg
xchg
pop
push
call
ss
shll
sbb
xorb
pusha
ficoml
hlt
rolb
adc
or
xchg
scas
jnp
xchg
push
mov
mov
cmp
pop
repz
sbb
jbe
inc
fisubl
cmp
leave
repnz
fcoms
insl
pop
mov
neg
movl
rol
fsubr
add
gs
jae
xor
faddl
daa
jno
pop
jmp
xchg
cmp
or
sbb
pusha
adc
call
es
in
sbb
sbb
pop
jecxz
pop
mov
mov
mov
stos
dec
fdivs
xchg
push
or
pop
push
adc
adc
loope
xchg
or
jle
lcall
add
push
mov
ret
or
dec
and
inc
gs
jae
dec
dec
push
xchg
call
ret
pop
add
icebp
mov
mov
lods
je
dec
jl
repz
xchg
dec
mov
addb
ss
xchg
testb
sbb
add
gs
ds
sub
push
movsb
push
pop
xorl
push
sbb
mov
into
cmpsl
aam
adcl
sub
mov
lgs
sub
test
lahf
hlt
pop
hlt
xchg
test
lahf
dec
jne
shll
jo
cmp
or
ret
mov
les
inc
std
or
jnp
xlat
mov
pop
inc
rorb
add
mov
rorb
sub
scas
cmp
adc
movsl
test
pop
mov
add
out
fldl
mov
push
out
adc
jle
insb
adc
adc
xchg
ficoml
push
jecxz
lcall
jmp
dec
orl
loop
adc
adc
lods
add
scas
cmp
ds
adc
jecxz
pop
pop
jb
sbb
aaa
jecxz,pt
cmpsb
mov
testl
scas
xor
cli
xor
cmp
test
popa
xlat
jmp
lock
inc
add
push
scas
xor
lods
pop
cmpsl
jnp
pop
test
sub
jge
fisubs
out
lea
xor
mov
xchg
jecxz
pop
dec
jmp
mov
cmc
movsl
daa
movsb
in
adc
mov
jp
xchg
repnz
mov
lahf
push
imul
add
dec
push
mulb
cmp
xor
movsb
pop
xchg
shll
pop
in
negb
mov
jne
push
or
xor
mov
cld
ss
test
add
push
out
iret
push
fidivl
cmpsb
pop
lock
cwtl
pusha
mov
leave
lock
cmp
adc
fildl
loop
mov
in
in
mov
int
push
inc
in
int3
lods
xchg
xor
sub
xchg
jno
add
jnp
fstpt
mov
popa
and
scas
shlb
test
clc
pusha
mov
pop
aas
sti
fwait
mov
jae
xor
xchg
aas
incl
imul
out
xor
aad
iret
popa
into
jmp
add
rorl
or
mov
lds
fsubs
fdivrs
out
sarb
and
repnz
mov
mov
lret
lcall
mov
or
inc
add
cmp
inc
xor
and
add
push
inc
mov
leave
sub
out
mov
xor
add
insb
test
sub
mov
dec
scas
mov
xchg
xor
mov
fbstp
inc
vpunpckhdq
add
loop
mov
outsl
pop
rcll
cld
nop
mov
adc
fisttpll
xorl
or
ficoml
cmp
mov
test
cmp
add
mov
aam
push
mov
lret
xor
rep
jmp
dec
and
dec
jns
xor
ljmp
out
lahf
fs
sbb
pop
adc
outsl
and
mov
push
out
add
bnd
adc
cmp
sbb
xor
and
add
or
mov
xchg
fs
jge
push
xlat
insl
jno
cmp
in
dec
cltd
mov
or
push
push
jmp
jb
sub
jl
insb
add
cmp
or
xor
xor
fnsave
enter
mov
cmp
dec
pop
jnp
cmp
cmp
inc
fsubr
outsb
imull
fstps
cmp
sub
mov
rcrl
cmp
call
ljmp
sbb
fcmovnu
adc
jbe
fwait
rdpmc
mov
cmp
nop
testl
adc
xorl
cli
jno
xchg
jg
test
das
in
scas
add
adc
int3
mov
pop
push
adc
or
jecxz
pop
inc
cli
push
outsb
cmp
test
call
andb
movsb
jnp,pn
lret
shrb
sar
or
xchg
lock
inc
mov
mov
adc
add
jb
roll
shrl
fsubrl
inc
lcall
adc
sbb
loopne
push
gs
add
jge
mov
lock
aad
or
frstor
xor
in
mov
rclb
clc
nop
mov
shlb
lods
ds
xchg
negb
cmp
fdivl
sub
movsl
testl
arpl
cmpsb
lods
mov
sarl
rcr
jns
icebp
add
les
fidivrl
xchg
cmp
sub
sbb
ljmp
and
test
jb
add
sub
jne
sub
test
add
cli
jmp
in
or
sub
icebp
repz
mov
adc
xchg
jle
xlat
jecxz
xor
test
jnp
xchg
stc
push
mov
aaa
mov
push
in
cmc
mov
out
or
xchg
push
adc
inc
cmp
je
pop
xor
xchg
outsl
ret
loop
sti
imul
orps
xchg
ss
rorl
adcl
arpl
push
shlb
lods
sti
xchg
mov
pop
mov
jecxz
and
dec
xchg
repz
mov
pop
ret
mov
mov
inc
out
mov
push
and
icebp
rcrl
and
cmp
jb
icebp
dec
adc
jb
adc
jne
ljmp
xor
insl
arpl
mov
int3
in
sbb
daa
ret
xlat
out
mov
stos
clc
fs
out
mov
sub
mov
jne
in
dec
mov
sbb
scas
mov
je
in
push
inc
jnp
xor
cwtl
bound
xor
adc
dec
movsl
push
in
adc
add
add
je
test
mov
fbld
rol
aad
mov
outsb
mov
pop
stc
sub
popf
xor
mov
jg
jmp
js
xchg
inc
mov
stc
insb
or
dec
fstps
xchg
xchg
mov
je
push
bound
push
add
push
pop
jp
aad
pop
jl
loop
cli
pusha
mov
fwait
and
push
cmp
dec
add
pop
sub
imul
mov
sbb
out
sbb
scas
shlb
shrl
push
inc
in
xlat
mov
adc
scas
xchg
loope
add
ljmp
ret
add
push
cmp
and
stos
daa
jbe
outsb
cmp
xchg
rcrb
push
repz
jae
icebp
mov
dec
mov
pop
mov
add
lret
xor
mov
xor
mov
pop
mov
test
lcall
push
je
push
sti
and
xor
mov
inc
enter
sub
into
push
dec
rorb
adc
rolb
add
stc
sahf
in
mov
sub
cmp
out
mov
pop
xchg
inc
xor
mov
mov
xchg
push
lret
mov
mov
and
inc
sbb
xor
sbb
mov
inc
add
push
mov
xchg
lcall
dec
xor
popa
sbb
lods
mov
es
adc
jle
or
mov
push
mov
mov
sub
sub
add
adc
notb
ffree
test
inc
lcall
fmuls
push
outsl
imul
or
or
fsubl
pushf
shrb
shll
inc
sub
jecxz
sbb
leave
pushf
dec
add
sub
inc
mov
dec
xlat
xor
sub
into
pop
iret
out
adc
sbb
clc
inc
les
adc
test
jge
pop
mov
popa
int
in
roll
adc
sarb
dec
ljmp
jp
push
sub
sahf
pslld
stc
add
and
inc
add
shl
xor
inc
ret
mov
cld
mov
hlt
sub
sbb
call
out
fstpl
enter
adc
int
xchg
cmp
pop
mulb
popa
xor
js
pop
fdivrp
add
and
mov
xor
mov
in
lock
push
lods
mov
mov
nop
repnz
lahf
push
dec
xchg
pop
stc
add
xchg
push
inc
aad
ss
pop
or
add
adc
pop
xchg
inc
add
test
cli
sub
sbb
pop
pop
aad
adc
push
in
stos
fbstp
xchg
int3
inc
or
test
or
into
loope
xor
and
or
xor
sub
mov
jge
cmpsl
or
dec
test
call
out
outsl
mov
mov
aas
out
or
cmp
sub
jb
out
xchg
jno
inc
mov
xchg
sub
repz
mov
test
bound
imul
rol
sbb
push
sub
ss
push
ss
fldt
cmp
shll
mov
jbe
sti
cmp
ret
add
mov
push
sub
sbb
sub
mov
ljmp
pop
ja
roll
not
pop
inc
daa
je
lods
xor
xor
hlt
and
adc
pop
dec
jmp
dec
mov
sub
roll
cmc
mov
xor
bound
out
orb
sub
jge
stos
adc
pop
fildll
dec
push
adc
dec
enter
sbb
mov
cld
inc
mov
shrb
and
inc
insl
in
cmp
ds
pop
fldcw
repnz
mov
xor
xlat
jmp
inc
mov
xchg
cmp
add
mov
sbb
iret
mov
fdivl
ret
rolb
add
je
lcall
mov
test
ss
add
movsb
ret
sbb
cmp
cmpsl
in
dec
pop
xor
test
and
fwait
or
lret
jns
mov
clc
mov
pusha
call
xchg
fcoml
ret
mov
test
adc
insl
dec
repnz
lret
test
mov
xor
test
adc
pop
inc
add
cmp
dec
rorl
leave
sub
or
sub
aad
cmpsb
xchg
xor
pop
or
push
mov
sti
cmp
and
rcll
in
cmp
jae
jno
ja
pop
sbb
out
inc
sbb
xchg
fcoml
dec
clc
rcrb
lea
pop
dec
or
dec
leave
mov
rcl
cmpsl
movsl
das
inc
shll
enter
dec
mov
pop
fs
jmp
mov
sbb
mov
in
sbb
sbb
xor
aas
jmp
sub
je
aad
loop
shlb
rcll
xchg
sbb
stc
jmp
popf
inc
hlt
cwtl
or
mov
push
je
ret
into
adc
and
mov
add
int
mov
pop
and
fbld
cld
or
das
call
daa
and
popa
fsub
cmp
dec
adc
sbb
or
mov
or
mov
popa
pop
sbb
cld
mov
lods
jb
jno
xchg
fimull
xor
lds
arpl
xchg
iret
inc
mov
inc
sarb
lahf
fsubp
aas
xor
inc
pop
sbb
fnsetpm(287
adc
xor
imul
xchg
jle
jl
jp
adcb
mov
out
jns
stos
out
popa
imul
pop
test
pop
push
and
add
pop
fs
int
mov
fstps
cmc
popf
add
sbb
push
cwtl
aad
movsb
mov
in
in
icebp
adc
cmc
aad
cmp
or
and
inc
in
adc
insl
loop
and
inc
js
stos
popa
adc
stc
mov
enter
loopne
jmp
and
pop
pop
add
pop
orb
xlat
mov
dec
inc
push
aaa
cmp
xchg
push
cmp
inc
xchg
add
jae
sbb
or
or
mulb
mov
pop
sti
cmp
popa
test
pusha
and
jmp
xchg
cmc
adc
testb
push
sub
sbb
add
adc
xchg
mov
test
xchg
and
jo
mov
outsl
mov
into
imul
cmp
xlat
xor
pop
mov
je
nop
push
xor
xorb
mov
push
out
inc
shrb
dec
pusha
add
dec
cli
out
je
mov
outsl
cmp
mov
aaa
pusha
jo
insb
ljmp
jbe
sahf
pop
add
jg
dec
loope
popf
mov
es
sub
xchg
sbb
bndstx
ret
sbb
icebp
xor
or
jno
mov
mov
xchg
pop
scas
adc
clc
and
int3
into
xchg
das
xchg
mov
leave
sahf
dec
sub
push
jle
xor
sbb
inc
subb
ja
gs
into
dec
push
xor
les
repnz
pushf
shlb
xchg
test
mov
cmp
jae
daa
stc
repnz
xchg
add
jge
mov
sbb
dec
nop
enter
lcall
out
clc
mov
jno
cld
jg
inc
gs
or
cmp
sbb
xchg
and
mov
daa
mov
mov
xor
test
pusha
sub
in
jae
mov
inc
mov
push
cmc
mov
pop
stc
rcrb
and
shlb
sub
test
loope
pop
inc
mov
das
jg
outsb
shlb
jg
cli
cmpb
outsl
sahf
push
mov
cs
incb
dec
xorb
xchg
pop
mov
test
sbb
shll
cltd
nop
hlt
hlt
stc
rcl
mulb
push
sar
lret
xchg
adcb
enter
xchg
push
test
orb
dec
xchg
cmp
leave
pop
icebp
insl
das
into
pop
mov
cwtl
xchg
lea
xchg
repnz
dec
sahf
dec
mov
xlat
dec
pop
inc
dec
and
xchg
dec
aad
mov
sub
shl
sbb
loopne
lret
inc
pop
push
ret
fmull
pop
pop
fdivl
xor
clc
negb
inc
out
mov
pop
movsl
dec
out
cwtl
jmp
shrb
test
movl
shll
aam
int
stos
cmpsb
adc
and
sub
insb
les
push
ss
outsb
aas
xor
and
xchg
divl
sub
xor
pop
jne
sbb
adc
dec
xchg
pop
pop
outsl
lods
inc
int
push
fnstenv
and
mov
push
hlt
sbb
js
dec
sub
jnp
adc
or
inc
and
jg
insl
fisubrs
stos
add
sub
add
out
jle
adc
jns
xchg
subl
mov
mov
push
xlat
leave
lahf
mov
fsts
lods
push
mov
aam
and
les
movsb
decw
sub
loop
faddl
adc
push
aas
in
fisubl
movsb
and
int3
into
mov
mov
add
sub
nop
push
xchg
add
lcall
xor
adc
push
cmp
push
inc
sub
cmpsb
mov
xchg
mov
ret
repz
lock
js
in
or
xchg
fidivrs
xor
dec
dec
int3
ss
mov
int3
jb
rorl
cwtl
insb
mov
ljmp
pop
jecxz
pop
and
in
jbe
push
mov
mov
cmp
inc
xchg
popa
xchg
push
data16
xor
fcmovu
mul
and
outsb
or
mov
jge
push
push
adcb
jbe
std
pop
sbb
xorl
mov
mov
ds
adc
int
mov
out
add
jb
bound
and
setno
ds
enter
test
movsl
cltd
das
xchg
ret
push
mov
adc
int3
pop
inc
cmp
adcb
adc
cmpb
pop
aam
push
and
mov
rcr
mov
das
mov
fs
test
mov
imul
inc
adc
cwtl
lret
call
shrl
pop
aad
push
call
bound
jbe
jnp
outsb
dec
push
scas
xor
mov
or
lret
dec
shlb
arpl
pushf
test
dec
push
loope
sub
fcmovnu
mov
xor
mov
pushf
mov
icebp
into
push
sbb
popa
nop
aad
in
loopne
mov
lret
scas
and
aaa
aad
gs
mov
and
pusha
sub
xor
enter
inc
mov
fisttps
xchg
jno
pop
loope
out
jmp
lcall
mov
iret
mov
cwtl
cltd
dec
repz
out
jbe
mov
out
out
mov
adc
aas
cli
push
jns
lods
or
nop
inc
in
leave
pop
jmp
enter
lods
fcomp
adc
add
ljmp
sbb
cmp
aam
in
rorl
mov
xchg
mov
sahf
inc
das
push
sbb
sti
and
adc
stos
aaa
mov
loop
js
cmp
pop
stos
or
lret
push
xlat
sbb
xor
mov
cmp
dec
adc
mov
cltd
les
jg
push
outsb
ret
setl
xchg
or
dec
cmp
xchg
aam
jno
mov
bt
fcom
jle
jb
daa
push
push
mov
dec
adc
xor
adc
lods
mov
pop
int
loop
outsb
outsl
push
inc
push
push
jg
mov
movsb
stc
add
push
testb
push
out
es
jmp
int
test
inc
xor
test
jmp
jge
sbb
mov
jle
cmp
xor
inc
sub
pop
and
pusha
js
jmp
enter
insb
loop
stos
lahf
adc
dec
insb
fisubrl
sub
fstps
ret
dec
movsb
cmpsl
xchg
pusha
dec
jmp
fst
cmpsl
jo
imull
mov
insl
or
or
pop
bound
stos
cmp
ret
jne
fsubrl
mov
or
inc
or
dec
nop
cld
stc
or
push
jae
inc
cmp
pop
jns
jae
stos
push
mov
cld
jnp
aad
inc
rorb
jb
out
adc
outsb
jbe
pop
decl
xor
add
sbb
xor
in
pop
push
popf
xchg
sahf
dec
out
dec
push
add
pushf
in
ds
decb
in
cmp
das
sarl
add
xchg
cmp
cmp
cmp
xchg
sti
mov
adc
mov
int3
pusha
xchg
aaa
imul
aaa
jnp
jmp
add
mov
mov
xchg
cmp
xor
sub
jge
shlb
sbb
insb
add
mov
adc
jmp
enter
mov
adc
sbb
ljmp
out
lahf
cmp
pop
enter
mov
stc
fstl
lods
in
out
cmp
and
call
jp
lds
mov
xlat
sub
xchg
dec
push
popa
sbb
adc
adcl
and
pushf
and
and
xchg
push
mov
add
arpl
push
jns
imull
out
les
inc
out
out
ss
push
in
je
in
icebp
inc
dec
xchg
lds
fnstcw
jno
je
sbb
or
insb
out
pop
cmc
push
lea
ficoml
cs
pop
mov
or
aam
adc
jbe
lret
pop
inc
mov
int
mov
xor
mov
out
shrb
mov
or
cmpsb
out
outsl
sbb
pop
inc
or
out
loopne
test
or
xchg
xchg
std
nop
shll
or
or
clc
cmp
js
pop
jmp
xor
out
insb
or
popa
push
popa
push
jle
sbb
lods
ss
aam
pop
lret
and
insl
in
sub
add
in
mov
pop
je
pop
loope
inc
hlt
in
or
mov
ds
or
or
ret
dec
mov
fxch
lds
ss
or
jp
xchg
pop
ljmp
cs
clc
pop
pop
and
lcall
mov
jae
je
scas
mov
and
cmp
fnstenv
loopne
and
adc
adc
cmp
addl
fs
or
pop
mov
dec
pop
dec
pusha
xchg
ja
sarb
cmpsb
mov
pop
bound
push
adc
data16
imul
rcll
jne
sub
push
lds
push
xchg
insl
push
fmul
in
jl
xchg
outsb
add
aas
mov
enter
cmp
repz
xchg
in
push
test
dec
push
add
mov
and
std
xor
push
aam
mov
into
mov
stos
push
mov
jnp,pn
hlt
mov
mov
add
pushf
add
mov
and
fwait
xchg
sbb
push
xchg
neg
aaa
lods
pop
lret
lea
mov
add
pop
pop
pop
das
jmp
mov
sbb
push
push
xchg
pop
xchg
call
pushf
sub
enter
sbb
pusha
add
or
movsb
andl
out
arpl
ljmp
dec
hlt
cmp
dec
dec
out
out
lea
ljmp
pop
ret
push
addb
and
pop
inc
rorb
pop
imul
dec
or
call
push
xor
xchg
lock
sbbb
xchg
push
sub
ja
mov
cmp
imul
adcb
jb
out
xor
cld
push
adc
aaa
pop
jno
lret
jns
fldl2t
cmpsb
mov
sarb
mov
add
mov
inc
sbb
or
xor
pop
inc
adc
mov
pusha
leave
mov
pop
xor
cmp
addr16
sub
jg
fsubl
js
std
icebp
jnp
data16
fsubrs
mov
inc
hlt
scas
or
imul
ficomps
adc
or
xor
pop
xchg
imul
insb
loope
sbb
rolb
sbb
pop
sti
inc
ss
insb
int3
cld
push
inc
sahf
jne
push
mov
ja
pop
inc
xor
arpl
add
and
add
std
mov
fs
pop
sub
imul
fwait
mov
jno
dec
pop
in
fimull
mov
outsl
cmpsb
sti
je
adc
imul
les
iret
cs
and
cmp
mov
jmp
pop
cli
iret
addr16
std
in
mov
jno
xor
loopne
or
and
or
nop
adc
stos
and
cmpsl
andl
subb
data16
jmp
mov
mov
adc
add
cmp
bound
mov
mov
out
aam
dec
gs
js
xchg
stos
cmc
push
add
inc
sahf
pop
fwait
cmp
xchg
mov
sarb
loop
ret
jae
insb
dec
inc
out
in
or
cmpsb
mov
jns
int
pop
cmpsl
or
jle
sti
sar
dec
iret
cwtl
and
mov
sti
inc
mov
lds
ret
mov
jne
shrl
test
mov
push
pop
cmpl
sbb
xor
in
out
add
pushf
and
notb
scas
pop
jg
stc
jae
add
add
movsb
xor
push
push
hlt
push
filds
cld
insb
ret
cmpsl
shl
jns
and
fiaddl
lea
mov
shl
mov
sets
andb
mov
and
imul
sbb
in
pop
mov
jl
scas
add
pop
push
pusha
fcomps
cli
inc
outsl
repz
xchg
ret
out
repz
test
xchg
ret
xchg
pop
mov
sbb
xchg
sub
adc
xchg
xchg
and
dec
lret
stos
inc
cmp
or
push
jg
push
pop
mov
or
xor
dec
cmpsl
push
or
push
push
in
imul
daa
idivb
lahf
movsl
inc
adc
fwait
adc
repz
fs
ret
stos
xor
xor
adcb
dec
es
imul
jne
pop
movsl
mov
sbb
addr16
icebp
jnp
ret
inc
mov
push
jne
jge
xlat
pusha
call
pop
inc
insb
add
mov
xlat
inc
ret
in
mov
pop
addr16
sub
sub
push
pusha
or
cmp
push
stc
jno
jp
jge
mov
push
aas
xchg
mov
mov
int
cmpsb
pop
leave
test
cmc
incl
push
jo
popf
icebp
pop
jle
into
outsb
mov
sbb
cltd
fsubrs
sbb
ret
and
jmp
xchg
lea
sbb
in
insb
pop
dec
scas
fadds
inc
push
pop
clc
lds
pop
call
stc
loopne
mov
push
adc
int3
push
test
xor
cmp
push
fldl
inc
movl
decb
or
add
pop
out
repz
mov
sarl
idivb
hlt
hlt
cltd
cwtl
push
xchg
shrb
arpl
push
dec
push
dec
in
cmpb
popa
sub
xor
repnz
dec
mov
cs
adc
jle,pt
aam
mov
dec
mov
push
cmpsb
jnp
or
pop
dec
leave
xchg
hlt
sub
xchg
ss
push
jnp
popf
ret
ljmp
and
push
dec
pusha
jge
leave
test
int3
mov
adc
insl
inc
jmp
xor
pop
outsb
add
xchg
lods
mov
sti
mov
outsl
pop
mov
cli
push
adc
inc
nop
shrb
cld
push
iret
mov
mov
mov
mov
push
mov
negw
into
cmc
loop
ret
sbb
loop
adc
out
stc
pop
dec
jle
mov
pop
cmp
jp
inc
mov
mulb
cmp
mov
mov
mov
xchg
ffreep
aad
jnp
sub
xor
jl
xor
sbb
mov
pop
add
jecxz
cmc
pop
fwait
mov
mov
idivb
mov
xchg
dec
sub
test
dec
das
sub
lret
stos
aam
add
xor
jecxz
xchg
fs
push
icebp
mov
pop
fbstp
sub
addr16
test
in
pop
inc
mov
jle
mov
imul
pop
mov
aas
fildl
cmc
xlat
xor
fcomps
fcomps
jmp
imul
notb
cld
dec
lods
xchg
mov
sahf
ret
scas
push
xchg
daa
add
fdivrp
in
adc
inc
mov
lods
xchg
push
lea
hlt
sub
testb
inc
movsl
push
es
cli
sbbb
popa
orb
pop
mov
leave
inc
push
add
sub
out
push
inc
test
sub
mov
stos
sbbb
addl
fistpll
test
daa
nop
nop
push
dec
cmp
push
into
xchg
shl
out
push
inc
push
sbb
aas
lods
jg
lods
or
vunpckhpd
lahf
gs
xor
rorb
ljmp
sub
cmp
jp
push
mov
cmp
flds
jbe
fildl
xchg
cmp
cmp
inc
int3
mov
fistpl
push
jb
jle
fcmovnu
xorl
jo
jbe
mov
mov
inc
ret
popa
sahf
fisubrl
cmp
ret
scas
inc
lcall
add
les
insl
sbb
insl
lea
xchg
mov
and
dec
jnp
cmp
jge
and
push
jecxz
stos
mov
pop
ljmp
pop
lret
lcall
pusha
mov
ja
mov
pop
cmp
movsl
cmp
test
test
push
xchg
divb
push
loopne
push
sub
std
es
mov
cmp
mov
pop
adc
xor
aam
inc
loopne
clc
sahf
lods
mov
dec
jo
cmp
xlat
dec
push
adc
add
or
mov
or
push
mov
ja
fistpl
push
sbb
out
jns
jecxz
inc
lahf
mov
jo
scas
pop
movsb
mov
dec
loope
jge
ljmp
mov
inc
dec
sahf
cmpsl
dec
outsb
inc
fidivs
iret
mov
adc
call
out
cmp
cmp
sbb
shlb
adc
sbb
fisubrs
mov
jecxz
jmp
xchg
xchg
sbb
int3
movl
ficoms
xchg
pusha
mov
mov
cmp
outsl
cmp
push
add
int
iret
out
push
cwtl
popl
xchg
out
sarl
inc
dec
xchg
das
mov
and
inc
jne
fisubrl
ss
popf
sbb
push
daa
nop
adc
jne
xchg
hlt
xor
leave
xor
pop
jne
add
arpl
sub
rcrb
sbb
jg
es
pop
mov
cld
daa
fadds
cmp
leave
xchg
lock
mov
mov
lret
subb
and
sbb
movsb
mov
inc
sub
icebp
and
loope
jecxz
nop
aas
testb
push
push
push
mov
and
cld
call
mov
mov
add
jb
stos
xchg
repz
or
int
icebp
pop
out
xchg
cmp
add
dec
arpl
push
mov
je
out
sbbb
xor
nop
lahf
rorb
lret
mov
daa
push
mov
adc
push
loope
scas
push
jbe
fwait
mov
repz
add
insl
popf
lods
adc
aas
js
imull
shrl
jp
mov
and
aam
jecxz
scas
xchg
sarb
mov
aam
call
mov
pop
sbb
faddp
mov
stc
cli
lock
sbb
lcall
es
ficomps
insb
pop
jno
add
jecxz
and
stos
pop
add
push
mov
hlt
push
rcrl
cltd
insl
outsb
das
and
mov
mov
jb
xchg
add
in
mov
sbb
and
and
cmpsl
mov
and
and
jae
dec
insb
into
nop
add
mov
inc
lahf
sub
add
nop
xchg
xchg
into
test
jno
pop
mov
sbb
loope
loope
fld
sahf
rep
fwait
push
mov
inc
cmp
cld
out
popa
imul
cmpsb
xor
pushf
mov
inc
add
cltd
xorl
xchg
in
outsl
enter
addr16
jl
add
lock
lret
inc
rcrl
les
rclb
fsubrp
gs
mov
jg
mov
jp
fisubs
fimull
xor
jge,pt
lret
dec
out
pop
sub
jo
cld
daa
sarl
jno
rcl
pusha
push
data16
and
xor
sub
insb
or
pop
cmp
call
sbb
das
imul
jge,pn
dec
pop
jmp
dec
jmp
shlb
stos
adc
jle
xchg
les
insb
cli
push
mov
jg
dec
or
int
sbbl
jl
xor
jp
divb
fninit
jp
adc
jmp
mov
sub
cltd
or
pop
jno
pusha
sbb
testb
inc
jle
adc
cmpsl
js
or
and
pushf
mov
sahf
in
inc
js
xchg
pop
fdivrl
xchg
popa
pop
mov
xchg
lods
pop
mov
xor
pop
arpl
jo
lods
jl
mov
jg
xchg
bound
lods
dec
or
cmp
dec
mov
popa
jnp
cs
inc
ret
es
xchg
adc
dec
add
xchg
jecxz
jmp
call
ja
fildl
mov
sub
adc
dec
jge
rcll
mov
es
mov
mov
sbb
stos
inc
cmp
negb
inc
lcall
call
dec
js
push
dec
pusha
addl
adc
and
inc
das
notl
test
pop
cmp
insb
mov
cmc
sbb
mov
fidivs
test
add
cli
lods
xor
push
lock
mov
pop
mov
jns
shrl
subl
subl
stos
cmp
fnstenv
jno
inc
push
push
cmp
jnp
cmc
mov
push
and
das
jne
mov
adc
stc
dec
les
mov
sbb
pop
jno
lret
xchg
mov
mov
mov
push
inc
dec
dec
mov
pop
lock
jnp
xchg
xchg
test
jle
inc
xor
xchg
repnz
std
ja
iret
test
repnz
mov
rcr
dec
pop
fcoms
or
lods
enter
outsb
xchg
push
in
lret
xorb
mov
inc
insl
push
add
mov
ss
lret
aam
cmp
xchg
aam
xor
pop
movsl
mov
cwtl
aam
and
notb
sub
mov
pop
add
dec
repnz
sbb
rcll
scas
mov
adc
rorl
add
jmp
ficompl
stc
jae
scas
cmp
mov
cmc
jae
shlb
es
dec
xchg
add
repz
xchg
pop
shll
dec
inc
jl
bound
fbld
xor
cld
dec
imul
dec
dec
sbb
cld
into
mov
or
insb
outsb
orl
cmp
jmp
lock
imul
xlat
push
and
icebp
in
aas
inc
iret
adc
inc
pushf
and
out
push
and
dec
mov
mov
jge
decl
leave
insl
mov
add
js
xchg
xorb
lcall
dec
adc
jae,pt
mov
adc
dec
nop
fwait
mov
adc
or
sti
cmp
mov
out
mov
pop
mov
push
popa
or
and
lret
dec
fs
adc
xor
das
xchg
xchg
imulb
dec
stos
dec
pop
pop
add
aaa
xchg
mov
mov
sarb
jno
cmp
or
test
dec
aam
ljmp
subl
sbb
ftst
push
mov
pushf
cld
ljmp
aam
clc
push
arpl
test
and
sti
or
loope
mov
inc
je
in
repnz
loopne
mov
push
mov
pop
add
push
dec
add
ds
int
popa
inc
scas
jge
push
push
insb
mov
int
fnstcw
adc
or
cld
pop
mov
xchg
mov
movsb
mov
neg
cmp
xor
lods
fstps
movsb
or
adc
repz
xor
mov
scas
sub
fsubs
in
dec
ror
stc
mov
push
mov
call
add
adc
lea
cmpsb
sti
ret
dec
ss
inc
cmpsl
adc
adc
out
aaa
mov
cmp
mov
out
movsb
out
add
push
sub
xchg
leave
or
push
fisttpl
insb
cmpsl
adc
xor
cmp
rclb
aaa
pop
imul
rorb
mov
xor
stos
mov
and
mov
cmp
dec
jo
insb
or
xor
cs
loop
mov
lahf
sbb
mov
loope
pop
arpl
dec
push
cmc
xchg
pop
push
test
cmp
pop
push
arpl
es
aad
add
or
push
rclb
cltd
push
add
mov
rcrl
stc
clc
cmc
pop
loopne
push
push
pop
mov
jbe
xchg
adc
adcb
add
mov
loopne
mov
push
dec
jb
inc
fldt
cld
mov
imul
mov
dec
ja
dec
dec
out
or
or
jmp
jp
mov
mov
clc
adc
dec
mov
inc
aas
std
pop
push
push
fimuls
addr16
out
mov
jp
mov
inc
leave
inc
pop
inc
js
dec
cli
push
lods
push
pop
jne
les
in
adc
sub
loope
xor
imul
xor
mov
movsl
mov
out
jge
insl
scas
sub
mov
loopne
out
sub
int3
popf
push
add
out
shlb
push
inc
cmpsl
subb
sbb
cwtl
dec
add
cmp
inc
sbb
sbb
repz
jb
aam
mov
loop
pop
pop
in
enter
movsb
daa
lock
in
lret
adcb
orl
xchg
mov
hlt
xor
pop
das
push
inc
xor
out
or
movsl
inc
call
and
test
ds
lods
in
imul
cmp
add
jmp
sub
add
adc
js
and
mov
ss
and
adc
icebp
stc
xor
es
push
mov
ret
cmp
or
push
fsubrp
cli
daa
data16
in
mov
mov
pop
fisttpll
bound
ret
pop
jmp
aad
sarl
xor
scas
xor
lret
sbb
mov
out
fcoml
sub
movsl
mov
cmp
pushf
cli
and
jae
pop
sub
repz
dec
outsl
add
lret
sbb
push
pop
rorl
aad
iret
add
jns
ljmp
xor
int
fldt
ret
test
sub
push
xor
pop
adc
fstpt
std
ja
add
shlb
ret
adc
or
cmp
adc
popa
jmp
dec
sbb
cltd
mov
mov
xor
pop
jbe
pop
loope
mov
std
mov
jns
add
adc
push
fsub
push
ljmp
ds
subl
jmp
add
ss
std
mov
cmp
dec
jp
and
mov
test
je
outsl
fcomi
out
mov
loopne
in
push
jno
aas
jae
into
jge
cmp
movsl
fisttpll
cwtl
mov
jbe
cmp
fbld
mov
insl
imul
mov
mov
mov
add
fs
mov
std
inc
imul
shlb
int3
mov
mov
adc
js
icebp
jmp
mov
into
mov
sti
cmp
test
fldenv
ja
pop
rcl
sbb
jg
adc
mov
or
out
or
pop
bound
mov
xor
adc
dec
cmp
push
rclb
je
popf
mov
mov
cmp
adc
sbb
mov
or
cmp
jnp
push
xchg
jb
enter
xor
xchg
and
xor
adc
mov
jns
leave
loopne
mov
js
call
ds
sub
lods
mov
fs
cmp
fs
adc
stc
xchg
jge
test
pop
or
and
arpl
xchg
mov
lcall
cmp
call
push
ds
add
or
scas
cs
jl
subl
add
add
jb
mov
sahf
shlb
sub
and
popl
cmpsl
dec
in
out
out
pop
pop
cmp
ss
sarb
shlb
fistl
sub
into
push
inc
cmp
lds
mov
cmc
push
fistps
or
inc
adc
xor
arpl
jnp
in
enter
aam
cmpsb
push
inc
add
fistpl
testb
mov
pop
jnp
in
fcomp
mov
sub
loop
or
push
ljmp
pop
mov
push
pop
xchg
xchg
lock
ret
shrl
mov
dec
ljmp
push
or
adc
mov
mov
lahf
mov
pop
daa
or
daa
mul
mov
lret
loopne
lcall
lods
mov
mov
and
imul
and
and
dec
shlb
add
outsl
or
inc
aaa
xlat
mov
pusha
out
push
lahf
mov
std
lahf
mov
push
lods
sub
lret
icebp
xchg
sti
pop
xchg
xchg
imul
imul
gs
addl
xchg
cmp
push
mov
cwtl
inc
sbb
shl
add
lahf
push
ret
push
or
xor
loop
nop
dec
or
insl
mov
shlb
jecxz
lods
addr16
sbb
ljmp
jns
insb
lods
int
int
xor
insl
mov
inc
and
or
pop
repnz
jmp
adc
aam
lock
aas
imul
add
mov
inc
mov
icebp
and
sub
mov
mov
je
lock
and
fwait
into
sbb
cld
push
rcl
lret
pop
mov
pop
subb
mov
mov
pop
cmpb
push
jecxz
cmp
cmp
pusha
movsl
or
cmpsl
mov
jae
sbb
stos
es
sysret
daa
iret
mov
rcll
xor
mov
push
loope
je
shrb
aad
sahf
stos
mov
mov
or
mov
fucom
in
cmp
inc
shrl
dec
cs
shl
push
loopne
mov
mov
cwtl
and
push
lods
scas
adc
imul
sbb
jle
outsb
ja
stc
mov
in
aas
imul
add
sbb
jecxz
lcall
je
jo
sbb
jnp
lahf
xor
fistpl
addr16
mov
push
fs
stos
out
jo
fucom
xor
sbb
mov
sbb
or
inc
add
std
pop
add
cli
insl
fcomps
pop
adc
xchg
xchg
dec
xor
or
adc
jo
adc
cmp
popa
adc
adc
or
or
sbb
jo
bsr
xchg
cmp
xlat
add
push
test
mov
inc
ds
adc
cmpsl
ljmp
mov
jae
dec
jns
loopne
sbbl
cmp
outsb
ljmp
rep
arpl
aas
fsub
jmp
jne
mov
stc
mov
and
inc
and
add
sub
pop
push
popa
xor
pop
ret
jo
xlat
jb
inc
cld
lret
xor
mov
gs
or
movsb
jmp
jnp
lret
jmp
ret
push
sbb
pusha
loop
mov
out
in
mov
or
cmp
scas
or
int3
jmp
add
xchg
test
and
pop
test
sub
ds
mov
sub
push
mov
xor
add
inc
cmp
dec
mov
fwait
outsb
mov
mov
pop
mov
orb
jge
mov
or
mov
lea
jg
jmp
and
pop
rcll
add
or
mov
pop
daa
mov
lods
xchg
sbb
test
pop
pop
popa
jbe
je
fcoml
pop
and
scas
stos
lods
repz
adc
subb
inc
cmp
popl
cmp
sbb
dec
sub
shlb
inc
lea
mov
or
je
push
sahf
jg
mov
loope
pop
stos
mov
mov
nop
adc
mov
stc
mov
jl
adc
es
in
jb
and
mov
cmp
in
push
mov
mov
popf
mov
jb
adc
in
test
adc
cmp
insl
es
inc
std
imull
or
jmp
push
ficomps
xorl
mov
in
daa
sbb
ljmp
in
dec
xchg
jl
fcoml
mov
mov
mov
fiaddl
sbb
cmpsb
sahf
fwait
xchg
out
inc
push
fistl
sbb
mov
mov
xchg
out
addr16
icebp
sbb
fcmovbe
imul
adc
inc
fld
inc
test
aam
ljmp
jno
sarl
inc
cmp
push
call
sbb
adc
mov
xor
in
sub
jne
jno
test
clc
mov
addr16
movsb
mov
and
cmp
xchg
bound
dec
xchg
clc
lahf
arpl
adc
sbbl
nop
inc
mov
push
add
rsm
ret
cmc
inc
and
and
mov
iret
repz
fwait
adc
fildll
xor
pop
sbb
dec
sti
out
stos
inc
lods
addr16
fs
dec
mov
jp
filds
inc
je
xlat
jle
inc
cmc
ja
mov
scas
or
jg
dec
cmp
mov
scas
mov
mov
inc
mov
int
mov
arpl
mov
and
xor
arpl
pop
inc
movsl
js
lods
push
fs
sbb
stc
fwait
xor
sahf
outsb
adcl
xorl
push
or
mov
popa
inc
sbb
xor
data16
dec
ja
and
lahf
enter
or
scas
cmp
xchg
and
leave
xchg
mov
or
in
mov
jno
pushf
aam
jmp
out
xor
cmc
xor
dec
loope
jecxz
sub
sbb
ds
repz
mov
outsb
outsb
jmp
lea
or
add
rcrb
jl
dec
jg
in
inc
push
fadds
pop
mov
fiadds
inc
stos
push
jecxz
repz
fildll
pusha
cli
pop
sub
add
bound
lock
dec
test
xor
push
jbe
insl
dec
dec
push
push
movsl
mov
adc
sub
mov
mov
mov
movsb
mov
mov
ds
cmc
daa
mov
test
movsl
mov
mov
aad
add
jo
mov
xlat
add
adc
stc
jo
std
sub
imul
cmpsb
mov
sbb
int
inc
sbbb
mov
test
pop
pop
lock
in
add
sbb
cmpsl
hlt
jl
or
aad
ret
idivl
lock
rorb
inc
fmulp
jg
mov
dec
push
jmp
jle
bound
push
aaa
idivb
inc
pop
gs
lcall
sahf
adcl
push
imull
jecxz
insl
xchg
shrl
jne
scas
mov
fnstenv
lea
jo
inc
rcl
cld
xchg
andb
mov
in
cli
or
cmp
inc
xchg
scas
in
mov
scas
sub
push
out
or
es
cmp
or
in
fnstcw
jle
cmp
roll
ds
mov
push
pop
out
cwtl
stos
in
cmpsl
andl
adc
rorl
adc
ret
frstor
jmp
out
xchg
cmp
mov
xchg
jno
cs
inc
add
xor
js
test
push
test
insb
daa
mov
repnz
pop
shlb
xchg
push
jp
pop
inc
loop
scas
jnp
divl
fcompl
or
shll
mov
negl
and
fdivr
jge
popa
or
and
pop
leave
movsl
xchg
jmp
pop
cwtl
mov
fnstenv
push
rcl
and
sub
je
fs
inc
pop
mov
out
ret
lods
inc
or
mov
stos
icebp
ficoms
sub
push
cmpsb
dec
imulb
lret
push
pop
in
rcr
sub
pushf
hlt
repnz
iret
aad
jne
pop
or
sub
lds
nop
rcl
mov
or
movsb
inc
adc
data16
dec
pop
loope
pop
xchg
inc
mov
or
push
addr16
xor
jl
mov
cmp
rorb
pop
mov
jmp
loope
or
cli
pop
push
xchg
aas
pop
xchg
push
movsb
dec
sbb
xor
pop
js
insl
sbb
sub
mov
sub
shl
xor
sub
dec
sbb
mov
adc
add
sub
xor
jl
mov
js
xchg
insb
and
cs
cmpsb
clc
popf
dec
push
xor
sub
xchg
sub
popa
push
xchg
pop
sub
adc
sti
lods
shrb
jnp
xchg
test
shlb
sbb
scas
pop
push
xchg
cs
pop
arpl
es
movl
adc
sbb
daa
fadds
push
jmp
or
jbe
leave
call
mov
or
clc
mov
inc
mov
xor
mov
fcoml
lcall
xchg
icebp
pop
es
cmp
sbb
mov
jns
mov
sahf
into
js
jns
push
adc
mov
sub
mov
xlat
and
adc
outsl
or
rcll
jnp
pushf
pop
fldcw
roll
mov
mov
insb
mov
pop
push
jle
leave
and
pusha
out
pop
scas
lods
shl
cmp
imul
jmp
push
cld
outsb
movsb
insb
ss
push
mov
dec
imul
dec
fisttpll
inc
cmp
sahf
inc
mov
and
jo
mov
ja
and
sbb
and
pop
jo
lods
xor
pop
xor
add
hlt
adc
shlb
pop
in
cs
pop
jne
xchg
inc
in
mov
les
cs
jg
push
jo
lods
mov
testl
lea
in
insl
jmp
xchg
enter
xchg
xchg
inc
int
or
mov
pop
mov
jbe
mov
gs
push
sub
popf
stos
cmp
sti
into
mov
shll
cmpsl
xchg
jno
adcl
shrb
out
test
push
iret
xor
jae
sub
jmp
xchg
es
add
sbb
inc
pop
ds
pop
inc
cmp
adc
adc
add
and
adc
adc
mov
adc
or
cltd
insb
add
repnz
dec
sbb
sub
push
adc
lock
std
in
fistpl
in
lock
or
jnp
cmp
js
add
jecxz
mov
movd
sub
jmp
aad
sbb
push
imul
push
mov
sub
test
xchg
jbe
in
in
iret
mov
arpl
sub
test
in
inc
mov
clc
inc
xor
sub
dec
repnz
sub
adc
pop
mov
int
cmp
dec
mov
dec
xchg
jge
frstor
fcoms
negb
adcl
or
ja
ss
fldenv
jmp
inc
out
leave
pusha
adc
inc
cmp
fisubs
enter
push
mov
stos
ss
ss
lock
sbb
leave
pop
sbb
jmp
xor
lcall
inc
std
lret
xchg
frstor
pop
pop
mov
mov
pop
inc
in
shll
out
or
ja
push
popf
push
out
fnstcw
es
movsb
fdivr
and
push
movsb
cmpsb
and
mov
xchg
xchg
cld
xchg
icebp
shlb
sub
cld
test
lcall
mov
sarb
mov
nop
decl
sti
lcall
outsl
lods
xor
cs
xchg
in
xchg
mov
mov
ljmp
adc
rcll
dec
test
shrb
sub
rorl
and
int3
cli
lcall
test
xor
mov
sbb
int3
cmp
outsl
popf
in
jbe
cmpsb
movsl
dec
and
popf
ret
add
lcall
stos
jmp
mov
orb
pusha
mov
and
mov
add
sub
loope
hlt
in
adc
mov
sar
or
nop
adc
lret
popa
rolb
sahf
inc
ss
aad
mov
ljmp
xor
mov
jno
out
jmp
mov
push
and
jmp
xor
sbb
arpl
fnstsw
mov
rcll
loop
xor
pop
aam
sub
imul
scas
negl
outsb
mov
popa
stos
popf
adc
inc
jg
adc
stc
xor
fistl
dec
pop
enter
rolb
cld
pusha
push
jne
add
xor
es
stos
clc
shl
push
std
mov
lret
aad
sub
dec
xor
jp
scas
xchg
subb
mov
es
dec
mov
hlt
jnp
cs
test
sub
xor
repnz
or
jmp
adc
iret
aas
scas
sub
nopl
sar
insb
mov
popf
add
int
sti
adc
pop
repnz
shll
sbb
adc
mov
sub
stc
adc
inc
sbb
aaa
jmp
ljmp
loope
cli
jae
rorb
popf
xor
das
ja
test
lcall
mov
scas
cmp
mov
daa
fistpll
or
add
lret
mov
pop
jl
dec
mov
jg
mov
mov
pop
or
cmpsb
inc
pop
and
sub
lods
push
add
lret
mov
add
pushf
cmpsb
fucomi
or
ss
mov
adcl
popa
pop
mov
test
and
testl
stos
xchg
shl
insb
and
or
mov
ret
add
push
movsb
dec
jae
adcl
sbbl
faddp
push
inc
xor
pop
push
push
sbb
dec
push
dec
ljmp
jmp
pop
addr16
in
int3
loope
ljmp
test
add
xlat
inc
and
push
jbe
mov
mov
aas
or
adc
pop
jno
dec
jmp
mov
add
outsl
cmp
sarl
xlat
cmp
out
push
cmp
repnz
ja
ds
int
push
sub
popa
xor
mov
push
lret
adc
add
jne
pushf
sti
mov
arpl
mov
mov
fmuls
jnp
cltd
cli
rol
inc
pop
mov
mov
sub
insl
add
mulb
stos
pop
push
sub
orb
dec
lahf
mov
std
dec
pop
lcall
push
movsb
and
icebp
xor
aam
in
pop
xor
insl
xor
or
push
gs
dec
jne
imul
cld
push
pop
inc
iret
pop
xor
lock
xor
inc
adc
scas
out
xchg
mov
lea
jmp
clc
lods
cwtl
xchg
repnz
xchg
negb
dec
mov
fadd
or
jmp
xchg
repz
addr16
int
jne
add
mov
push
xor
cwtl
das
mov
inc
stc
pop
lahf
xor
mov
mov
and
gs
notb
daa
push
out
sub
or
jp
ror
sarl
jle
push
sahf
push
orb
xchg
cmpsb
in
imul
shlb
sub
fwait
sbb
jbe
lock
and
mov
cmp
add
int3
xor
or
cmp
push
pop
mov
push
jg
bound
pop
dec
std
rcll
stc
iret
test
jns
test
inc
pop
ficomps
inc
lcall
xchg
mov
cltd
adc
insb
cltd
movsb
sbb
push
incl
fdivrs
testl
xchg
and
mov
add
jecxz
cmpl
stos
mov
arpl
cmpsl
jge
xchg
addb
push
repnz
shl
fs
or
mov
mov
test
fistpll
xor
xor
cmp
mov
sahf
jmp
xchg
ffree
test
sub
or
add
push
imul
ret
out
sbb
cmp
shll
cmpsl
fdivrs
pop
xchg
mov
sbb
pop
adc
adc
out
push
xchg
mov
stc
and
jno
sub
rorl
in
adc
cmpsl
pop
mov
jae
xchg
mov
dec
rorb
xorb
adc
shlb
int3
in
out
rcl
repz
test
jmp
insl
shlb
test
fsubrs
lods
es
sub
mov
daa
xor
adc
cmc
fildl
mov
call
rcrb
add
pop
outsl
shl
add
popa
mov
int
xor
nop
jmp
xor
xchg
nop
push
hlt
and
icebp
movsl
adc
xor
mov
mov
cli
jecxz
inc
sti
and
and
xchg
push
inc
movl
popa
push
pop
dec
imul
xor
push
pop
cmp
loop
shrb
dec
in
sub
mov
add
pop
or
pop
cltd
jmp
std
or
sti
jecxz
sub
fnstsw
mov
data16
repnz
cwtl
push
inc
mov
in
call
or
rorb
jp
add
pop
scas
and
sub
jecxz
lock
mov
lock
rcll
lds
std
iret
mov
mov
mov
dec
jne
xlat
inc
push
loop
add
mov
xchg
call
aas
lea
sti
leave
push
inc
lea
hlt
cmp
das
repz
out
mov
inc
jb
inc
insb
cmc
xorb
fucomi
test
inc
shll
sbbl
int3
in
out
inc
jmp
jae
js
inc
jecxz
fcomi
lods
dec
cmc
jg
mov
in
add
lds
filds
addr16
mov
fsubl
lret
fnstcw
dec
jp
neg
in
cld
cmpsb
popa
mov
cmp
repz
mov
ret
sub
mov
xchg
int
add
je
sub
add
fs
imul
sbb
lods
js
aas
outsl
pop
outsb
cmc
test
add
in
mov
cmp
cli
add
loope
popf
and
inc
or
jmp
cs
and
std
xor
dec
xor
repz
pushf
arpl
or
mov
pop
cmp
call
sub
sbb
scas
mov
cmp
xchg
insb
and
jmp
data16
sub
jo
jo
and
mov
inc
cmp
stc
out
inc
aas
leave
lret
icebp
lea
push
mov
push
iret
js
dec
dec
sbb
movsb
bound
mov
into
sbb
scas
addl
in
jno
cld
fisubrl
mov
gs
mov
gs
or
mov
out
rorw
push
aad
jl
jne
jl
pop
xor
mov
or
inc
jbe
cwtl
popa
pop
mov
push
lods
lret
icebp
pop
mov
dec
push
ljmp
in
mov
test
push
push
in
fiadds
dec
push
adc
std
popf
mov
and
loop
xchg
inc
push
add
sub
iret
sub
dec
adc
in
mov
std
jp
pop
scas
movsl
and
mov
test
jp
into
or
pusha
xchg
cmpb
in
jmp
and
cmp
fcomp
cmp
mov
pop
and
or
push
fwait
ljmp
mov
adc
pop
lods
pop
clc
jecxz
cmp
jp
and
or
mov
xlat
sub
adc
push
jle
adc
push
cld
fwait
push
xchg
adc
push
mov
stos
leave
in
sub
inc
jle
out
pop
je
sbb
sub
in
inc
adc
pop
sbb
mov
add
inc
add
and
dec
cmp
aad
jnp
pushf
ljmp
mov
fstpt
pop
cltd
cmc
mov
or
stos
inc
sarb
xchg
jg
aad
sarl
sub
jae
cmp
xor
inc
push
or
inc
imul
out
push
inc
ja
imul
call
pop
or
ljmp
pop
add
cmp
xor
pop
fcomip
cmp
jl
xchg
loop
and
mov
fidivs
xorb
aaa
cmpl
mov
repz
iret
lods
insb
xchg
rorl
jle
rorl
jl
fbld
jnp
leave
mov
cs
mov
subl
outsb
scas
xlat
mov
jecxz
movb
pusha
add
mov
rolb
in
adc
dec
fldl
add
je
cmpsb
pop
cli
sti
stc
add
mov
sbb
cmp
xlat
out
jnp
cli
adc
lret
inc
xor
ljmp
push
or
pop
cmp
data16
cmc
cli
adc
mov
enter
and
loopne
and
sti
mov
mov
adc
aad
push
dec
or
test
jge
lods
adc
lea
sbb
adc
sti
jae
lret
add
dec
arpl
cmpsb
dec
xchg
adc
stc
push
xchg
dec
add
inc
and
or
jb
inc
mov
adc
gs
jae
mov
pop
push
out
xchg
mov
sbb
dec
xlat
sbb
xor
add
cmp
xchg
sbbb
test
add
rclb
mov
int
testl
push
cmpsb
push
das
adc
mov
shlb
mov
lret
xchg
xchg
dec
pop
ljmp
mov
insb
xchg
test
push
lods
rcrb
xchg
aas
lods
cmp
xchg
jae
sahf
push
jge
leave
cli
and
cmp
repz
popf
insl
mov
loope
in
pop
test
mov
add
add
aad
dec
sub
jg
js
popf
cmp
xchg
lret
jno
in
adc
jecxz
cwtl
cmp
cmc
popa
adc
or
sbb
mov
or
int
sahf
insb
mov
mov
lcall
mov
outsb
mov
xor
addb
sbb
inc
jle
mov
leave
sbb
xchg
movsb
loope
pop
mov
xor
cltd
mov
rcrb
or
es
mov
dec
ds
out
sub
inc
hlt
dec
pop
inc
add
xchg
mov
movzwl
push
sbb
je
cmp
es
mov
movsb
xchg
sbb
add
sub
test
cmp
mov
mov
mov
mov
ja
push
push
cld
cltd
sahf
push
jg
jp
hlt
int3
jg
cmp
ror
push
aam
mov
sbb
icebp
inc
xchg
gs
lcall
lds
inc
pop
push
scas
cmpsl
gs
lret
decl
into
loop
arpl
pop
mov
sbb
adc
adc
mov
stc
sbb
mov
aaa
ret
loop
xchg
cmp
add
mov
jne
hlt
mov
mov
xor
adc
mov
jge
adc
add
into
mov
loopne
and
hlt
fstps
ds
xor
xor
stc
push
sarl
aad
jp
sbb
jno
sahf
popf
loop
es
mov
pop
leave
inc
insb
pop
xorb
add
nop
imul
xchg
insl
mov
repz
or
push
aad
jle
push
mov
lret
pop
push
cmp
sbb
add
dec
pop
inc
adc
fsubs
lret
mov
mov
fcmovb
aaa
fldl
dec
mov
mov
mov
jae
cmp
dec
adc
fs
jge
insb
test
inc
lock
clc
bound
call
pop
xchg
pop
ficomps
mov
jle
xchg
mov
xchg
push
das
sub
jg
mov
cmpsb
pop
cmp
inc
xchg
icebp
iret
repnz
push
imul
mov
lods
ds
rolb
adc
pop
insb
lcall
negl
sub
jle
pop
add
cmpsb
sub
rolb
push
addr16
mov
adc
dec
cmpsb
popf
jbe
outsb
adc
add
jns
push
repnz
inc
fisubs
ficompl
xor
imul
leave
jno
dec
sub
and
imull
arpl
inc
stos
jb
fisubl
cmpsb
inc
inc
mov
ljmp
enter
or
mov
and
cmp
daa
scas
push
fwait
test
cld
mov
stos
imul
rcl
mov
mov
call
shlb
icebp
cwtl
add
pusha
dec
cmpsb
mov
loope
xchg
adc
lods
in
push
mov
dec
leave
sbb
mov
sbb
push
cwtl
repnz
push
dec
iretw
or
aam
and
sub
stc
popa
and
stc
stos
and
push
fisttpl
movsl
mul
add
and
cmpl
ljmp
mov
adc
pop
enter
lahf
addr16
xchg
in
mov
fwait
xchg
sub
dec
fcmove
repnz
popa
inc
outsl
clc
cmpsb
and
imul
xor
ret
subb
inc
cmp
push
lea
shlb
cmp
lret
adc
imul
daa
test
in
mov
xchg
out
mov
pop
test
xor
sub
imul
mov
xor
or
push
xchg
jecxz
xorl
mov
mov
xchg
add
fidivl
les
push
sbb
ja
js
cmp
cs
mov
aas
insl
test
sbb
addr16
in
xchg
sbb
xchg
data16
and
dec
push
cmp
jb
negl
cmovp
xor
sub
je
jp
pop
inc
push
jecxz
cli
or
fwait
mov
xchg
add
jnp
add
cmp
dec
std
lea
mov
sbb
pop
ficomps
imul
in
in
test
aad
repz
mov
fdivl
push
mov
repz
jnp
sub
sub
adc
cli
add
loopne
fwait
cmp
xchg
or
adc
adc
mov
and
and
lret
sub
mov
jae
cmc
scas
test
movb
mov
cmpsb
es
stos
add
jae
jg
xor
jmp
loopne
outsl
andl
out
and
xchg
xchg
mov
int3
jl
xorb
lock
scas
jb
out
jg
pop
mov
sbb
inc
and
rcrb
cltd
scas
push
shr
stc
xor
lret
mov
cld
adc
stos
xchg
cmp
xchg
imul
cmp
aaa
outsb
movsl
xor
imul
push
cwtl
cwtl
loop
sbb
sub
ror
jne
test
mov
outsb
add
sbb
push
and
dec
pop
icebp
add
adc
rcll
data16
sub
iret
pop
lret
insb
dec
icebp
mov
gs
aaa
inc
push
or
popf
sbb
add
fsub
dec
mov
cld
or
in
testb
sti
adc
jle
test
ljmp
daa
pop
je
push
jne
stos
inc
out
arpl
daa
cmp
test
and
xor
sbb
cmp
ja
or
cmp
bound
inc
cmp
pop
xchg
dec
fdivrs
cld
daa
mov
mov
test
dec
or
cmp
sbb
mov
push
fisubrs
int
and
movsl
push
leave
jecxz
repz
test
xor
clc
dec
std
sbb
je
cmp
jle
or
gs
xchg
arpl
jle
rorb
adc
pop
push
push
nop
pop
push
dec
lods
xor
cld
cmp
lea
adc
stos
xchg
icebp
jecxz
mov
ficompl
shl
xchg
push
cmp
xchg
test
scas
aam
cld
jg
cmpsb
and
xchg
or
ja
xchg
mov
xor
arpl
pop
mov
pop
movsb
mov
mov
fwait
out
and
sub
aam
sbb
insb
mov
jp
ds
push
in
mov
pop
data16
out
jno
mov
call
iret
int3
push
sbb
xchg
outsl
pop
ret
or
jb
icebp
cmp
and
mov
stc
js
loop
or
cmp
adc
cli
ss
cmp
pop
popf
mov
jae
xchg
xor
jne
sub
jne
lock
cmp
lret
jp
pop
negl
inc
loopne
enter
stos
es
popa
cmpsb
mov
addr16
insl
scas
or
hlt
push
pusha
push
or
add
inc
jecxz
mov
and
rcr
sti
scas
cmpsl
int3
mov
jg
or
push
ja
xchg
cmpsl
push
fdivrl
jbe
xchg
mov
out
inc
push
pop
fildl
loope
ljmp
lcall
stos
pushl
jmp
xor
cmc
mov
xlat
dec
jne
xchg
xor
lods
push
insb
mov
in
pop
push
pop
or
sbb
lods
in
dec
leave
daa
inc
je
add
dec
insl
dec
xchg
lahf
sti
add
enter
fs
in
mov
push
sub
and
push
lods
inc
mov
aad
xor
mov
stos
mov
repnz
out
loop
je
movsb
mov
popf
aad
mov
jg
adc
pop
xchg
fdiv
adc
mov
sub
mov
repz
jge
js
sbb
xchg
xor
shlb
jecxz
inc
aas
pop
mov
scas
mov
pop
jl
or
xchg
in
xor
pop
lcall
mov
adc
lods
jg
and
mov
aam
sbb
scas
jae
mov
cld
push
shr
push
cmp
sbb
fcmovu
mov
mov
jmp
sbb
insl
dec
jne
dec
sub
add
incl
xor
dec
xchg
jns
js
sti
inc
or
push
shll
add
insb
jns
mov
pop
cwtl
adc
sti
mov
sbb
jae
jae
push
rcr
into
cmpsl
imul
popa
jnp
mov
push
pop
inc
and
aad
jo
pop
xor
aam
stos
xchg
ret
loopne
jno
jne
mov
xchg
mov
jp
pop
setno
loopne
xor
dec
nop
test
cmpsl
repz
cmp
mov
mov
lock
mov
adc
push
mov
mov
jge
stc
sbb
outsl
xor
mov
int3
repnz
lret
pop
fisubl
sbb
test
bound
mov
mov
mov
mov
fldpi
xor
pop
jb
pop
push
in
mov
rclb
dec
jo
call
imul
arpl
xor
or
xor
push
sbb
or
cmpsb
pop
dec
xor
bound
mov
xchg
mov
test
push
std
mov
push
mov
ret
cmpb
jnp
das
jb
scas
inc
shlb
insl
nop
or
sub
mov
insb
cmpsl
cmp
jmp
sahf
lds
xchg
fsubrl
stos
add
das
mov
push
sub
mov
int
cwtl
scas
pop
mov
xchg
adc
clc
dec
push
adc
mov
xchg
in
idivb
loop
mov
fldt
mov
ljmp
sahf
and
jp
dec
mov
push
fistpl
cs
fcmovbe
neg
push
push
loopne
mov
in
mov
pop
mov
arpl
push
scas
jge
mov
mov
shlb
mov
xchg
mov
repnz
pop
clc
js
dec
xchg
shlb
shll
adc
sbb
add
sahf
iret
outsb
sahf
adc
or
inc
idiv
inc
mov
or
add
jae
lret
mov
int3
dec
sub
jno
nop
sbb
rcl
cmp
or
sbb
jns
in
ljmp
test
mov
lods
lock
sbb
mov
and
mov
push
fdivrs
xchg
dec
mov
mov
out
insb
push
repz
cltd
jnp
test
repnz
xor
sub
add
pop
adc
daa
pop
jg
addb
popa
sbb
sbb
iret
jg
mov
in
fbld
mulb
push
jae
pop
push
lock
lock
mov
enter
scas
or
pop
inc
cmp
push
inc
pushf
inc
push
xchg
ret
mov
dec
mov
pop
add
outsl
cwtl
xchg
xor
nop
lods
pop
fcmovbe
scas
adc
cld
and
lea
stos
cmp
aam
xor
fcoms
pop
leave
push
add
or
inc
fwait
cmp
mov
jmp
or
testl
sbb
jo
inc
mov
and
push
lea
cmp
ret
int3
xchg
in
rsm
movsb
push
orl
push
je
lcall
into
xor
adcl
xor
xlat
arpl
push
fsubrs
fs
data16
adc
and
jp
mov
stos
aaa
or
das
and
sub
adc
aam
xchg
cmp
adc
imul
pop
or
pusha
adc
jmp
push
or
mov
xor
lahf
xor
cmp
imul
pop
fnsave
ficompl
xchg
push
push
cmpsb
sbb
push
sub
ret
rcrl
or
mov
fadd
call
and
sbb
fldcw
pop
cmp
mov
adcb
add
xor
sbb
imul
inc
xlat
ret
dec
les
je
pusha
movsl
and
sbb
sbb
ret
daa
cmpl
pop
mov
or
jnp
insb
push
jge
rcrl
stc
fwait
in
xchg
stc
cli
rol
inc
and
mov
mov
xor
push
jecxz
lea
or
aas
out
rorb
dec
mov
xchg
xor
jmp
cmpsl
fisubs
sbb
aam
inc
jb
mov
lock
stc
int
inc
and
mov
add
or
fcoml
inc
xchg
rorl
push
mov
les
xchg
push
and
mov
xor
push
das
sub
movsl
lods
ret
and
xor
add
sbb
xchg
sub
mov
adc
push
or
xchg
in
xor
sbb
stos
dec
sub
add
stos
dec
cwtl
cmp
cmp
or
pop
adc
sbb
mov
lea
rorb
and
mov
mov
hlt
jne
mov
push
das
pop
repnz
jl
adc
outsb
push
gs
cmp
dec
ss
pop
pop
xchg
mov
loop
fistpll
mov
cmp
lea
lds
dec
call
or
mov
test
pop
in
and
in
cmpsb
xchg
lret
inc
xchg
pop
jg
mov
les
in
sbb
pusha
scas
insl
lods
xchg
pop
or
inc
mov
dec
add
jo
cmpsb
inc
cmpsl
sbb
aam
sbb
fisubrl
popa
push
fisubrs
jecxz
popa
fmuls
lahf
std
inc
xor
jbe
mov
add
push
sbb
popf
xchg
movsl
inc
cmp
sbb
jo
fwait
add
adc
shlb
fsubs
adcl
and
mov
mov
imul
push
outsl
test
in
pop
mov
or
mov
or
mov
into
jae
xor
and
pop
or
adc
push
pop
mov
xor
fldt
mov
sub
je
or
cld
inc
scas
jno
sti
es
test
and
ret
enter
jmp
cltd
imull
repz
cmp
jb
jb
mov
inc
dec
lahf
lea
les
jmp
aam
pop
aas
jne
nop
inc
dec
es
sahf
cld
lret
inc
mov
mov
jbe
mov
mov
testl
xorb
iret
pop
scas
sub
mov
and
inc
repz
sub
les
adc
xchg
mov
inc
adc
dec
sub
ret
mov
int
mov
arpl
jo
ja
add
mov
adc
loop
sbb
add
pop
jecxz
loopne
add
inc
and
mov
jg
stos
leave
test
dec
loop
or
adc
ja
jae
ret
jl
pop
fisubrl
inc
ja
fimull
jle
scas
fwait
mov
sbb
call
or
mov
in
mov
or
sub
insb
sti
sbb
addr16
xchg
mov
xchg
push
jne
push
mov
mov
sub
push
js
mov
cmp
xlat
sbb
mov
out
dec
aam
or
fldenv
ss
enter
mov
mov
fs
and
pop
push
mov
pop
xor
je
push
insl
xchg
inc
cmp
sbb
inc
mov
inc
xchg
frstor
push
push
lret
mov
jb
xchg
dec
and
and
aam
lods
dec
in
cmp
push
repz
sti
cmp
adc
pop
pop
mov
fldenv
aam
hlt
or
add
push
repnz
and
adc
cmp
test
mov
xor
jecxz
xchg
inc
push
repz
sbb
leave
movsl
and
ljmp
dec
mov
mov
cmpsb
lds
ficompl
mov
cmp
out
mov
adc
les
jns
insl
mov
shll
cli
movsl
cmp
call
push
dec
ljmp
xchg
lahf
cwtl
lock
shrb
aam
mov
imul
in
xor
jnp
mov
mov
bound
shrb
into
or
jg
sbb
push
dec
xor
lret
mov
lahf
push
lea
ss
iret
adc
add
inc
icebp
rcrl
push
cmp
push
aaa
lret
push
sbb
xor
test
and
in
icebp
cltd
in
popa
stos
mov
roll
or
loope
xchg
push
lock
add
cwtl
sbb
jbe
push
jp
roll
pop
adc
sub
push
xchg
xchg
sbb
sbb
fistps
xor
outsb
pop
inc
add
mov
loopne
mov
pop
pop
lahf
jno
jns
or
jmp
xchg
pushf
imul
cmp
outsl
push
cltd
ljmp
scas
adc
jge
out
idivb
cmp
test
mov
mov
adc
inc
cmpsb
imul
clc
insl
xchg
test
bnd
xchg
mul
sub
jno
jo
dec
loope
inc
pop
cli
jns
sbbl
and
rcl
loope
in
popf
push
movsb
rclb
mov
jno
mov
ja
ret
je
into
mov
jle
dec
adc
test
fwait
cmp
out
pop
xchg
into
repnz
push
push
ljmp
mov
aas
adc
mov
mov
loope
inc
sub
mov
pop
and
les
lret
les
mov
pop
inc
pop
in
jmp
das
ret
out
pop
push
and
mov
add
cmpb
stos
cld
cli
xchg
add
imul
out
cmc
or
push
jle
sub
pop
and
call
ljmp
rol
mov
push
xor
mov
cs
clc
shll
stos
andl
push
shrb
sbbb
push
mov
mov
negb
out
cmp
mov
sahf
outsb
fcompl
in
movsl
cld
sub
aaa
xor
enter
call
sbb
imul
out
int3
inc
gs
inc
test
cmp
popa
out
dec
jb
out
int3
flds
rol
mov
push
push
dec
loop
mov
iret
pop
jge
push
add
test
adc
shll
inc
xchg
mov
pop
cmp
lret
sub
push
dec
negl
push
jae
or
cwtl
arpl
cmp
cmp
dec
inc
stos
xor
fdivrl
addl
dec
pop
into
mov
sub
fcomip
pop
mov
cmpb
rol
nop
sub
dec
hlt
jle
pop
xor
inc
add
or
sahf
aam
xchg
mov
add
leave
inc
test
mov
mov
out
mov
push
jg
xchg
push
test
mov
in
je
aad
and
bound
cmp
js
or
and
cmp
sbb
sti
scas
rclb
and
clc
mov
pop
add
lods
nop
lds
inc
dec
lods
sbb
dec
pusha
rolb
addr16
push
jle
das
or
movsl
enter
push
ja
roll
roll
or
xor
inc
push
shlb
pop
sub
ficomps
add
xorl
adc
leave
mov
lret
outsb
jbe
sub
movsb
ret
push
sbb
push
xchg
xlat
cltd
mov
sarb
jecxz
ficomps
cwtl
push
test
pop
enter
pop
in
cmp
outsb
xchg
adc
cmpsb
mov
ret
adc
push
sbb
in
jmp
iret
push
inc
sbb
mul
rclb
in
sub
outsb
cmpsb
dec
scas
and
pop
mov
mov
cmc
sbb
jns
pusha
mov
mov
inc
mov
int
inc
add
test
cltd
repnz
cmp
aad
cmp
es
dec
mov
xor
sti
jno
sti
pop
push
clc
push
nop
mov
mov
pop
sub
or
test
cld
mov
jne
push
sbb
add
xchg
mov
mov
adc
dec
sahf
pop
push
test
push
mov
pop
jmp
sub
jae
mov
sub
inc
mov
in
or
push
xlat
call
pusha
inc
xor
jg
div
sar
mov
lock
loopne
movsb
int
lds
fwait
inc
test
cmp
aad
push
arpl
flds
mov
push
mov
les
jo
imul
rclb
test
testb
inc
cwtl
test
cmp
push
jl
rorb
jecxz
ljmp
fisttps
jno
xchg
dec
inc
push
mov
mov
or
repnz
inc
push
dec
in
jmp
and
daa
mov
push
ja
add
mov
cmp
outsb
adc
sbbb
mov
cmp
push
jle
cmp
shl
andb
mov
sub
cmpsl
bound
aad
adc
clc
jle
push
pop
jl
jne
inc
push
test
and
or
out
cmp
xor
je
push
pop
stos
jnp
repz
sahf
mov
jbe
cmc
mov
dec
fstpt
clc
mov
stos
lock
mov
rorl
std
adc
je
int3
ret
iret
inc
out
mov
jle
pop
cmpsb
ficomps
mov
idiv
or
fld
xor
jmp
in
lret
leave
sub
pop
lret
dec
and
repnz
or
out
fwait
jle
lret
loopne
sbb
xor
das
iret
rcr
out
inc
fstps
cwtl
push
bound
insl
je
cmp
outsl
push
out
pop
loope
dec
nop
pop
lcall
fldcw
mov
jmp
inc
sub
rorl
out
push
stos
mov
xchg
rorb
inc
inc
insb
cmp
enter
test
pop
sub
jne
js
xchg
sbb
imul
fst
icebp
nop
shrb
repz
xor
inc
cli
push
out
test
xor
cmp
pop
sbb
sub
inc
sahf
or
jns
mov
jp
ja
jae
loop
add
cmp
push
idivl
arpl
or
fldt
cmp
or
sub
mov
pop
add
add
dec
test
mov
fimull
or
mov
cltd
xchg
movb
cltd
cwtl
repnz
inc
imull
adc
in
addl
icebp
mov
push
jne
or
addb
xor
jmp
in
in
mov
xchg
cmpsl
into
addl
push
sbb
sbb
nop
outsb
adc
or
testl
jae
cmp
out
scas
xor
sarb
daa
ss
push
mov
leave
mov
js
push
mov
add
popa
nop
sbb
mov
mov
rol
dec
sub
in
es
insb
loop
mov
mov
mov
adcl
xchg
movsl
cmp
jmp
pop
mov
jg
mov
mov
mov
test
fildll
mov
mull
leave
lock
sub
sbb
mov
adc
sub
and
daa
data16
das
cmpsl
dec
or
jp
or
adc
out
add
xor
das
fmull
jp
xor
incl
rcll
push
addr16
mov
hlt
fsubrs
lea
cmp
in
adc
ficoms
xor
pop
ret
lock
mov
and
xor
movsl
out
icebp
jecxz
adc
in
push
mov
je
jno
call
xchg
mov
push
or
shlb
xor
roll
inc
jecxz
ja
sahf
movsl
cmp
stos
bnd
add
daa
jmp
mov
or
dec
cmp
leave
add
jl
mov
lods
iret
pop
cwtl
jg
mov
mov
xchg
iret
stc
ss
adc
ja
inc
mov
push
cltd
push
sbb
push
and
lret
test
mov
add
mov
push
cltd
sub
dec
mov
mov
jns
addb
sub
mov
jg
dec
addl
cli
lods
sbb
sahf
in
or
icebp
lret
imul
fwait
scas
push
mov
xchg
sub
jg
cmp
aaa
mov
mov
cmp
jo
jecxz
or
les
push
sub
push
jns
stos
mov
sti
lds
mov
sub
out
jg
into
xor
bound
xchg
cmp
xchg
dec
mov
sub
dec
sbb
outsl
pop
scas
call
dec
hlt
add
push
cwtl
jb,pn
jne
adc
pop
pop
add
pop
push
jl
pop
popa
push
push
fadds
leave
xchg
aas
movsb
adc
push
aas
xchg
pop
hlt
aas
sbb
pop
jle
insl
and
push
push
inc
stos
pop
insl
inc
add
rorb
loop
push
in
add
jnp
imul
add
in
xchg
and
xchg
movsb
movl
mov
mov
das
test
cwtl
cmpsb
fstl
push
and
dec
cmp
push
clc
inc
and
insl
jmp
repnz
shlb
mov
or
dec
cltd
ret
sub
and
fucom
popa
xchg
xchg
popf
sti
testb
rorb
into
push
lret
iret
frstor
loopne
mul
sbb
daa
test
add
stos
and
jb
pop
add
dec
adcl
add
dec
int3
loop
inc
imul
mov
or
andb
mov
cmp
push
das
std
mov
push
xor
lahf
lret
dec
jno
mov
pop
lahf
xor
imul
or
inc
orl
push
add
xchg
aad
jnp
ret
or
scas
hlt
adc
xor
and
icebp
jnp
cmp
jno
popf
xlat
out
xorl
orl
add
push
push
cwtl
std
shrb
fdivl
sarb
xchg
enter
imul
fsubrl
dec
scas
fisubrs
sub
cld
cmpsb
xchg
hlt
outsb
add
dec
mov
jno
and
jle
lock
and
out
inc
test
mov
sub
js
mov
mov
xor
mov
mov
fists
punpckhbw
cld
aaa
out
pop
xchg
add
mov
sbb
sbb
pop
adc
cmp
popf
adc
push
lds
mov
inc
and
arpl
pop
addb
cmp
sub
inc
sbb
dec
orb
repnz
mov
mov
dec
cld
jecxz
out
fidivrl
shlb
xor
in
jmp
push
pop
mov
out
sbbb
xlat
dec
mov
enter
pop
xchg
jbe
cwtl
mov
cmp
and
aad
dec
inc
in
mov
xlat
and
setbe
sub
hlt
cmpsl
ret
pop
fstps
ret
fcmovbe
add
jb
fstps
stos
cwtl
adc
and
adc
inc
jo
sbb
out
out
cmpsb
loopne
fsts
imul
add
jne
test
and
clc
adc
js
daa
fisttpll
and
and
xor
inc
xor
mov
lret
mov
insb
cmp
mov
pop
scas
cs
jl
scas
jns
js
adcb
add
aaa
pushf
es
push
int
adc
xchg
or
and
or
mov
xchg
mov
flds
and
pop
fldl
sahf
mov
ret
sarb
jbe
in
push
test
popa
xor
adc
or
mov
lahf
push
mov
out
into
jo
addl
std
ret
fs
mov
es
nopl
fs
inc
scas
lea
divl
sub
into
adc
push
or
stos
push
std
stos
adc
xlat
nop
xlat
ds
adc
sub
jno
push
mov
mov
jg
sub
into
fdivs
lret
push
insb
or
xor
scas
mov
into
fsts
ds
mov
dec
xor
aaa
push
jl
insl
pop
int
jo
adc
mov
imul
adc
mov
stc
ljmp
and
loopne
test
add
push
movsb
mov
imul
loope
flds
add
nop
nop
cmp
dec
pop
decb
out
dec
dec
lds
imul
inc
mov
dec
sbb
cmp
dec
sbb
imul
sub
ret
add
imul
iret
sbbb
decl
jo
push
fcomp
out
mov
gs
mov
jnp
ljmp
and
dec
lock
pop
mov
sti
xor
mov
jg
cs
call
fwait
xor
inc
xor
dec
adc
jge
cltd
daa
mov
test
pop
add
shll
cmp
inc
push
fnstsw
popf
jns
loopne
insb
aam
and
pop
mov
xor
add
jne
mov
jg
jl
and
mov
sarb
fs
xor
jns
hlt
ret
xchg
cmc
js
fisubrs
stos
stos
in
sub
flds
rorb
xor
lcall
mov
outsb
cltd
add
and
inc
iret
mov
stos
inc
loopne
xchg
jp
popf
pop
in
imulb
aad
lock
push
lock
incl
pop
jecxz
or
enter
jmp
sbb
loope
xchg
dec
mov
xchg
jg
jns
mov
loopne
enter
jl
mov
xor
mov
jl
mov
mov
sub
push
cld
icebp
out
push
cmc
or
aad
fdivl
push
lods
cmpb
add
ret
mov
jmp
ja
jo
mov
ss
shl
cmp
xor
ficoml
scas
inc
lods
cmp
rolb
cmpsl
mov
jp
or
cmp
fistpl
pop
mov
dec
aam
add
cltd
scas
add
rcl
jnp
pushf
xor
inc
pop
rorb
ds
shrb
cmp
xchg
mov
stos
popf
pushf
mov
in
sbb
jns
xchg
sub
pusha
in
aam
icebp
pop
call
xor
mov
test
mov
mov
pop
or
loop
pop
push
dec
inc
inc
mov
jmp
sbb
es
in
test
cmpsb
fldl
sub
pop
in
gs
shrl
clc
pop
pop
add
pop
push
lcall
mov
mov
cmc
aaa
adc
adc
sarl
lds
lret
xchg
loope
fildl
lods
imul
or
ret
xchg
bound
cmpb
jge
xor
jo
jo
icebp
mov
insl
pushl
or
inc
into
jl
std
push
popa
jg
dec
subl
je
into
addr16
jmp
mov
pop
dec
push
inc
add
inc
int3
sahf
push
mov
dec
cmpsb
cmp
add
rolb
out
adcl
add
outsb
in
xchg
vmovq
mov
jb
mov
mov
mov
push
lcall
movsb
or
push
cld
cmp
jp
fisubl
mov
test
mov
fstpt
scas
je
ficoml
xchg
cs
push
add
xchg
mov
xchg
cmpsb
mov
mov
jnp
rolb
fs
sub
rolb
push
adcl
sarb
ljmp
inc
push
add
test
mov
scas
loope
scas
push
pop
fwait
xchg
mov
das
aad
fistpll
in
xlat
sub
or
call
gs
jmp
leave
mov
mov
out
fxch
imul
adc
out
mov
inc
and
shll
stc
je
xor
call
loopne
mov
aam
mull
jge
pop
leave
cmp
cwtl
jl
int
loope
adc
call
rol
sbb
int
adc
xor
dec
cs
sub
aad
sbb
mov
and
mov
popf
adc
rorb
loopne
xchg
imul
ja
xchg
mov
test
mov
dec
push
imul
pop
std
inc
adc
mov
push
test
sub
cmp
iret
es
sbb
insl
pop
out
sub
shrl
cmc
rolb
push
lret
mov
mov
out
add
mov
int3
push
or
mov
loop
and
and
pop
add
jne
xorb
rolb
iret
mov
fsts
sub
clc
lock
cmp
repz
or
push
icebp
aaa
dec
sbb
cmp
or
shll
and
mov
add
arpl
mov
mov
ret
mov
scas
mov
dec
push
out
movsl
fstpl
movsl
inc
mov
mov
pop
push
jmp
pusha
hlt
jecxz
fwait
repz
sbb
pinsrw
bound
push
cmc
loop
int3
adc
or
jbe
loope
xchg
inc
push
xor
pop
in
enter
mov
add
sarb
aad
fldl
test
sub
cmpsb
push
jnp
xchg
lahf
add
mov
sbb
rol
mov
daa
jno
imulb
icebp
out
lods
push
mov
inc
aam
data16
repz
mov
sub
out
cltd
inc
add
sbb
pop
adc
jecxz
fdivr
es
call
loopne
bound
xor
cmpsl
cmc
mov
sbb
ret
movsl
adc
jnp
inc
sub
cld
cmp
nop
js
mov
or
bound
fisubrs
and
mov
leave
cmp
loop
dec
movsl
mov
lds
or
xchg
mov
mov
in
jge
out
lods
lods
or
and
repnz
jns
insl
mov
ficomps
sti
add
sbb
add
ds
test
inc
or
out
pop
jo
sarb
sub
orl
push
insb
icebp
xchg
jl
mov
hlt
sbb
stos
pop
decl
stos
adc
je
js
outsb
out
push
jl
xor
fidivs
in
stc
ret
sti
int3
inc
inc
int
clc
repz
enter
xlat
lock
aaa
sbb
into
insb
inc
lea
out
and
mov
or
or
filds
es
outsl
cmpsb
popa
fs
fwait
movsl
aad
fisttps
ja
pop
shll
push
xor
int
test
xor
fdiv
int
std
cmpsb
mov
adc
lcall
pushfw
movsl
movsl
jmp
xor
in
incl
cwtl
inc
in
shlb
in
int3
cmp
stc
dec
mov
outsb
jl
gs
xor
push
sbb
in
sbb
inc
jb
xor
scas
mov
icebp
scas
cwtl
lods
fdivp
dec
shll
in
add
sub
mov
imul
dec
into
add
iret
jmp
xchg
mov
adc
cmp
add
cmp
cmp
jae
push
sbb
lret
inc
mov
cmp
hlt
outsb
test
pop
aad
jbe
popf
mov
lds
mov
test
loopne
ja
loopne
cmpsl
pop
cmp
cli
or
loopne
xchg
pusha
adc
sub
sub
cmp
movsb
jbe
jno
push
cmp
or
mov
fistpl
and
dec
fidivl
dec
enter
lds
xchg
mov
xor
or
sub
mov
stc
and
lahf
popf
aas
push
ljmp
pop
fsubrp
mov
jp
sub
dec
fisttpl
dec
adcl
movsb
push
pop
jno
fs
jle
push
das
xchg
mov
hlt
les
push
and
mov
popa
mov
dec
ss
movsl
jle
mov
xor
jge
add
mov
lock
or
call
pop
stos
pop
and
sar
sub
movsb
enter
dec
jnp
adc
addr16
or
lds
popa
daa
stos
mov
movsl
out
mov
sbb
inc
out
mov
lahf
fidivrs
mov
add
ret
fld
xchg
pop
pop
xchg
ljmp
mov
cwtl
or
sahf
mov
add
xchg
jae
jno
idiv
mov
stos
cld
dec
test
or
xor
ffree
frstor
sbb
lock
in
adc
mov
dec
xor
or
pop
int
jns
add
xchg
dec
pop
mov
ss
call
inc
sub
xlat
sbb
inc
rorb
sbb
inc
and
pop
mov
pop
and
inc
pop
mov
stc
jns
aaa
sub
mov
jl
or
gs
fcompl
es
call
xor
icebp
out
mov
cmpsb
mov
inc
fiadds
cmp
xchg
insl
pop
pop
inc
bound
cwtl
fdivs
sub
imull
mov
test
pop
or
je
add
inc
jns
cmp
and
inc
push
or
incl
aad
xlat
stos
cli
add
sbb
or
sbb
mov
out
into
in
roll
mov
notb
jnp
mov
aad
push
data16
in
mov
mov
push
pop
xchg
push
test
push
in
or
cmpsb
dec
into
pop
xor
xchg
imul
inc
enter
test
mov
fisubl
mov
push
sub
and
or
push
sub
ret
sub
dec
jb
fisttpl
scas
pop
gs
dec
add
mov
mov
mov
sbb
mov
das
gs
xor
mov
inc
adc
xlat
ficompl
cld
dec
jg
mov
ffree
movsl
and
mov
add
fldcw
jg
loope
mov
inc
pop
in
negb
or
out
iret
enter
cmp
mov
stc
fistpll
out
xlat
push
rcl
shrb
bound
in
int
into
les
jb
pop
jge
scas
cmpsb
rclb
das
add
add
ljmp
clc
rcl
and
sub
cmc
test
in
mov
adc
push
sub
adc
and
dec
sbb
xor
imull
fdivrs
into
inc
jle
dec
lret
or
pop
xor
cmp
insl
imul
fsubrp
push
loope
ljmp
sarl
daa
inc
mov
enter
clc
ss
popa
insl
mov
loope
mov
jmp
sub
les
rclb
xor
pushf
mov
test
xor
cli
addr16
inc
insb
mov
mov
xor
cmp
arpl
in
mov
adc
or
and
push
xchg
outsl
leave
insl
mov
inc
xchg
push
push
pop
aaa
ret
sbb
or
cmp
push
adc
sbb
ret
or
cmpb
jl
push
dec
adc
fcmovne
les
inc
jle
leave
xor
fidivl
add
xor
cmp
jg
fwait
inc
fdivrs
add
push
or
mov
push
lahf
inc
cmc
and
jle
ja
cmp
mov
outsl
adc
inc
loop
ficompl
in
sbb
jbe
adc
or
jb
push
cmp
lds
cs
pushf
push
xchg
cltd
xchg
ficomps
lcall
ret
xchg
fdivr
cltd
or
aam
dec
inc
dec
xor
pushf
in
adc
jmp
cmpsb
xchg
lret
dec
sbb
addl
push
cmpsl
nop
stos
sub
adc
cmp
in
data16
addr16
push
add
incb
push
lds
xorb
and
mov
out
popa
scas
jmp
push
jnp
inc
imul
or
mov
or
sub
adc
mov
fcompl
jp
movsb
lods
lock
add
lods
es
ja
ljmp
push
call
pop
leave
cmp
mov
pop
mov
pop
nop
push
lock
les
mov
leave
dec
mov
divl
add
cmpsb
test
dec
adc
push
call
shll
mov
xchg
lods
pop
cmp
sub
lock
je
mov
cmpsl
out
cmp
pushf
xor
stos
jne
mov
pop
pop
cmpsb
push
repz
pop
push
xor
mov
push
insl
imul
enter
cwtl
or
leave
in
inc
pop
jecxz
push
addr16
insl
js
inc
xor
stos
jg
ret
roll
pop
mov
jp
mov
jecxz
sbb
mov
lea
inc
fmuls
and
pop
clc
mov
push
ret
cmovl
pop
fsts
cld
test
pop
lea
mov
inc
mov
loop
mul
flds
arpl
insb
xchg
mov
movsl
icebp
outsb
xchg
mov
cmp
mov
shr
lcall
das
xchg
push
add
push
shrb
loope
lods
ja,pn
xor
lret
xchg
out
sbb
fldenv
dec
mov
xor
ret
xor
out
push
push
xchg
pop
loope
aad
nop
push
mov
fildll
xchg
subb
push
mov
sti
push
fxch
arpl
push
int
add
scas
jp
sahf
loop
push
mov
mov
aaa
mov
cwtl
outsb
out
pop
dec
add
arpl
jp
jl
sbb
daa
push
stos
jl
jne
leave
loopne
dec
cmpl
rcrb
xor
push
fidivrs
jno
test
testl
cmp
xchg
call
das
add
cmp
pop
cmp
adc
sbb
pop
movsl
xchg
idivb
sti
mov
in
and
mov
loopne
inc
test
mov
mov
arpl
int3
addr16
adc
fadd
mov
fistl
cmp
mov
cmp
sub
daa
insl
push
aaa
inc
cmp
imul
cmp
mov
inc
mov
jecxz
or
in
pop
das
dec
pop
addl
mov
and
xchg
push
aas
cmp
xor
xchg
adc
fwait
test
cmp
jle
add
sub
ret
and
jge
xlat
mov
mov
sub
and
jge
popa
jmp
cs
lahf
lcall
cmp
test
mov
adc
mov
pop
fwait
arpl
mov
in
scas
je
push
inc
or
lea
xchg
lods
test
cmp
and
rcll
xor
xor
iret
xor
xchg
sub
cld
adc
push
outsb
mov
mov
paddsw
dec
pop
imul
mov
je
outsb
push
push
andb
adc
cmp
das
cmc
cmpsb
adc
out
jbe
imul
sti
cmc
das
mov
lods
in
mov
and
mov
or
add
call
cmp
push
imul
arpl
adc
mov
in
icebp
js
sbb
xchg
in
imul
sbb
mov
test
in
lahf
shll
xor
xchg
hlt
hlt
cli
and
pop
adc
add
ss
jmp
lcall
scas
xor
out
xchg
mov
pop
sbb
xchg
aas
jg
add
stc
or
lea
sti
scas
imul
pop
jg
das
pushf
xchg
mov
mov
jge
xor
ja
mov
fbstp
inc
mov
outsl
inc
shrl
sub
fimuls
cmpsl
ja
hlt
xchg
out
adc
and
adc
or
jae
mov
div
imul
aad
add
push
adc
xchg
add
and
cmp
push
sbb
adc
xchg
inc
xchg
lahf
scas
aad
inc
sub
sbb
faddl
adc
ffreep
pop
xchg
shr
push
pop
sbb
lret
pushf
or
inc
mov
pusha
nop
push
repnz
rolb
fcoms
mov
sbb
or
jmp
fnstsw
sub
lcall
xor
mov
and
sub
test
inc
mov
movsl
sbb
fdiv
shr
dec
int3
and
je
fsubrs
adc
inc
daa
pop
scas
sbb
out
or
or
or
mov
in
cmpsl
fldcw
mov
fcom
cld
cmp
adcb
jmp
or
cmp
in
stos
jmp
jle
cmpsb
adc
mov
sbb
and
xor
push
jns
arpl
mov
fisubs
js
movsl
jg
adc
jne
insb
inc
int3
mov
outsb
fildll
fnstcw
addl
xor
xlat
pop
jecxz
or
notb
in
imul
xorw
ds
daa
ja
and
sbb
sarl
pusha
icebp
xchg
mov
xchg
cld
sbb
jg
sub
pop
fcmovu
xchg
jle
sub
jnp
inc
stos
ja
jns
inc
aam
fwait
jb
sbb
lahf
dec
div
lds
push
add
and
hlt
rol
xchg
test
popf
lret
mov
nop
es
hlt
pop
xor
enter
ret
ss
jge
and
add
xor
dec
push
stos
sarl
pop
push
dec
mov
cmpl
pusha
pop
imul
sub
or
icebp
inc
popf
jnp
pop
mov
dec
pop
roll
and
imul
ljmp
dec
nop
sbb
nop
shl
mov
xor
jmp
and
lret
fcoms
roll
adc
jp
mov
xor
hlt
cmpsb
testl
push
adc
and
in
out
aad
das
in
insl
mov
call
int
sbb
dec
paddw
pop
lea
inc
out
adc
pop
pop
sbb
sub
icebp
icebp
jmp
push
mov
mov
lds
jo
fidivrl
loopne
clc
leave
inc
out
insb
fbld
leave
outsb
lea
jp
loop
inc
js
mov
inc
mov
shlb
aam
ror
ret
pop
xchg
push
incl
jno
bound
lds
or
mov
push
sbb
cld
xlat
dec
dec
jae
scas
push
jae
ret
nop
mov
daa
jbe
fmuls
sub
in
dec
cmpsb
icebp
sbbb
repnz
mov
insl
pop
lcall
es
jne
mov
scas
xlat
test
shr
aam
cltd
and
js
bound
stos
test
sbb
xchg
inc
decl
pushf
fimull
mov
shlb
push
xor
lds
or
outsb
and
sub
jns
mov
pop
scas
mov
cmp
popf
fwait
inc
stos
call
sub
sub
ljmp
xlat
mov
jb
jo
mov
int3
outsl
jmp
mov
sbb
dec
out
sub
pop
mov
cmpsl
int3
jbe
testb
jno
insb
fucom
fildl
mov
pop
std
adc
inc
dec
pop
js
clc
lcall
imul
in
add
inc
lcall
outsl
div
jle
cltd
inc
cwtl
mov
sarl
add
sub
cs
xchg
les
add
out
stos
push
xor
adc
cld
jle
cltd
sti
lahf
mov
pop
mov
scas
sbb
orl
shl
aam
mov
xor
shrb
mov
jae
leave
int3
jb
adc
push
ret
outsb
and
iret
sbb
icebp
jg
xchg
scas
adc
loopne
loopne
in
xchg
or
repnz
fsubrp
lcall
insb
imul
xor
mov
or
std
add
mov
push
cmp
push
jbe
scas
adcl
roll
cld
xor
std
adc
test
pop
leave
push
ret
sub
lds
mov
push
fstl
dec
loope
arpl
lods
dec
and
ss
int
xchg
cmp
insl
bound
repnz
mov
mov
aaa
roll
ss
inc
test
clc
adc
inc
add
lods
cmp
jg
scas
add
pop
add
cmp
adc
xchg
push
adc
adc
jns
into
ja
in
mov
jg
ja
mov
jae
mov
scas
stos
jmp
jbe,pt
repnz
pop
inc
test
fnstsw
fwait
add
stc
dec
jbe
xchg
jns
cmp
fwait
cs
leave
or
test
sti
mov
sub
sti
mov
mov
pop
out
xor
js
jnp
and
shlb
cwtl
rolb
mov
inc
add
sbb
sbb
push
xor
jnp
cmc
xchg
cli
pop
jb
cmpl
aaa
pop
insb
inc
incb
jge
fnstenv
adc
adc
xor
shrl
insb
dec
push
xchg
loopne
or
inc
in
gs
sub
push
inc
ret
loope
add
outsl
shl
jb
fldcw
add
or
xchg
mov
adc
sarl
cmpsl
inc
adc
add
int
inc
xor
jp
adc
sbb
sbb
popf
pop
push
in
mov
mov
mov
inc
clc
push
stc
mov
mov
jmp
mov
cwtl
stc
adc
fisubs
repnz
sub
pusha
adc
mov
push
pop
xlat
or
pop
fwait
jae
fdivl
or
push
pusha
add
jb
pop
fcoms
data16
xor
ja
ljmp
mov
and
jecxz
popa
roll
je
lcall
cld
add
int3
pop
xchg
dec
hlt
push
seto
pop
in
xor
inc
dec
jno
adc
fidivs
sub
shll
mov
loope
xchg
xor
icebp
mov
mov
cli
decl
cld
pop
pop
push
or
pusha
and
xacquire
push
pop
shrb
in
stos
push
icebp
clc
xchg
add
pop
clc
insb
adc
lock
adcb
dec
loop
fdivl
adc
xchg
stos
aaa
sub
and
mov
push
cltd
sub
pushf
adc
repz
sub
hlt
xchg
xor
mov
jge
inc
lock
pushf
loope
addr16
iret
sarb
call
mov
imul
cli
push
addl
aad
stos
pop
stc
push
mov
fldl
test
rorl
dec
fcmove
ds
mov
and
push
dec
cltd
fldl
lock
sbb
push
arpl
mov
sbb
and
sbb
add
mov
jecxz
and
fwait
in
aas
push
xor
scas
ljmp
adc
xchg
ljmp
add
rcrl
test
inc
push
or
in
sbb
pop
outsb
jl
xor
mov
push
inc
mov
out
sbb
les
xor
addr16
insb
inc
stos
lods
leave
mov
adc
sbb
inc
inc
sbb
out
js
cwtl
add
fucomip
adc
sub
jle
icebp
mov
or
push
pusha
inc
outsl
cwtl
sub
add
mov
mov
xor
and
dec
jp
jbe
jg
addr16
push
pop
lret
lods
ftst
push
lret
jb
mov
mov
inc
add
jnp
mov
enter
movsl
dec
jae
inc
je
xor
mov
push
call
insl
bound
cmc
and
sbb
fcom
ret
adc
xor
lods
sar
test
shlb
mov
sbb
lods
jb
test
adc
dec
movsl
push
sub
outsl
in
or
sbb
test
mov
add
and
push
mov
daa
addr16
pop
xchg
cli
mov
sahf
insb
or
push
xchg
dec
pop
add
push
sub
cwtl
and
pop
daa
dec
xchg
stos
mov
cmpsb
push
cli
lret
push
inc
cmc
sub
andl
sbb
call
mov
stc
xlat
lahf
icebp
push
xorb
outsl
sub
ljmp
xchg
lds
add
clc
push
test
aam
jp
adc
ljmp
inc
pop
out
mov
andl
dec
adc
std
stos
inc
fmuls
std
call
std
int3
mov
xchg
int
sub
mov
xlat
cmp
dec
shlb
stos
adc
add
adc
test
cmp
push
dec
cmp
jmp
mov
repz
movsb
ss
inc
popf
mov
and
cmpsl
lahf
adc
jbe
cmp
sbb
ljmp
sarb
cmpsl
pop
sub
filds
mov
jl
fdivrs
int3
mov
xor
sbb
lret
mov
iret
loope
mov
jge
inc
ret
adc
jne
or
jl
insl
out
mov
pop
xchg
je
dec
add
sti
jmp
sub
imul
out
adc
aaa
cmp
stos
and
loopne
addl
mov
pushf
jnp
cmp
aas
push
add
sbb
movsl
and
cmp
sbb
and
sub
push
dec
push
inc
cvtps2pi
add
jae
sbb
add
imul
sbb
pop
leave
mov
jno
cmpsl
out
xchg
orl
xchg
push
mov
xlat
mov
jno
sbb
or
pop
insb
testb
insb
and
sti
mov
into
sbb
cmp
aam
cs
sub
lret
pop
jne
adc
jno
xchg
test
mov
mov
das
test
addb
pop
insl
ja
push
stc
dec
cmp
call
dec
or
shll
adc
cltd
or
movsb
aam
data16
clc
or
jb
aaa
adc
clc
pop
les
test
xchg
notl
iret
or
jle
lods
mov
shll
dec
or
daa
pop
in
popa
in
inc
or
testb
jno
sbb
dec
jb
pop
mov
addl
idiv
mov
push
aas
out
xor
push
cmc
pop
jle
xchg
out
xor
fs
repz
push
sbb
jecxz
jo
ret
in
pop
repz
mov
dec
pop
mov
addr16
loope
mov
xor
add
pop
popf
dec
or
sarl
xor
stos
cmpsl
aas
mov
movlps
sub
xor
inc
mov
push
add
bound
sbb
cmpsl
cmp
enter
pop
mov
sbb
and
and
mov
enter
adc
mov
inc
fisttps
fmull
lods
js
iret
push
adc
mov
call
pop
xor
mov
lret
gs
cld
pop
test
mov
pusha
sub
xor
jns
push
nop
gs
out
call
lds
xor
xchg
xor
jb
add
xchg
mov
jl
push
cmp
xor
fisttps
jo
cmc
xlat
insb
mov
lea
call
cmp
lock
fdivrs
fwait
add
in
loope
movsl
xchg
pop
xchg
inc
sub
xor
push
les
shll
mov
and
stos
jno
ja
add
add
xor
jmp
cmp
pop
iret
mov
lahf
sub
sub
insb
ds
push
lods
dec
out
popf
mov
mov
js
cmc
xor
dec
lock
sbbb
lcall
sbb
dec
xor
mov
cmp
pop
mov
xor
push
js
in
jmp
and
and
push
pop
cmp
mov
loop
in
xlat
jne
sub
push
addr16
xlat
and
clc
inc
call
jb
jns
gs
lock
cmp
push
cs
iretw
mov
and
mov
lock
cmp
jl
jg
pop
int3
cmp
jmp
jnp
notl
push
movsb
push
lret
lea
out
cmp
bound
test
popf
lret
mov
xchg
sbb
pop
out
sub
ficomps
lahf
fnsave
adc
mov
int
imul
rcpps
imul
mov
and
pop
cmp
xchg
mov
and
cmc
jno
retw
dec
bound
roll
xor
leave
jns
xor
cmpl
add
loop
pop
imul
je
lret
adcb
mov
lahf
out
jae
cmp
xchg
push
jbe
xchg
cmp
into
test
mov
pop
cmp
enter
call
sub
and
hlt
dec
das
jo
and
test
sub
jp
lret
popa
sti
ret
mov
and
sahf
call
gs
xor
xorl
cmpsl
js
adc
mov
xor
ret
jno
sbb
push
xchg
mov
in
pushf
sbb
mov
aas
mov
or
cs
cmc
or
push
ljmp
cmp
add
test
mov
xorb
xchg
sbb
clc
push
aam
jno
pop
nop
push
popa
jnp
cmp
loop
mov
aaa
and
xchg
das
cmp
pushf
pop
pop
lahf
and
nop
mov
or
or
inc
push
dec
pop
and
mov
out
xor
dec
stc
test
dec
roll
sbb
jo
out
insl
xchg
add
in
jbe
pop
bound
int3
adc
cmp
or
push
sbb
pop
out
cmp
cli
dec
repz
and
repnz
mov
or
mov
push
test
ja
imul
stos
das
jo
mov
ljmp
mov
push
cmp
in
mov
call
dec
leave
adc
push
cmp
push
insb
clc
xchg
push
lret
stc
xor
shll
test
fldcw
aaa
aaa
dec
loope
ficoms
dec
adcl
sti
xorb
mov
lahf
or
out
xchg
or
into
sbb
jb
sbb
fs
pusha
dec
add
mov
or
cmpsb
ja
aas
hlt
testl
lcall
loope
pop
dec
jg
push
mov
or
stos
rorb
popa
adc
scas
fwait
loop
test
xor
or
push
outsl
jne
or
and
test
adc
push
xor
and
xchg
add
and
dec
loopne
mov
push
std
movsl
jg
push
pop
jecxz
lahf
fmull
cmp
pop
sbb
iret
xchg
popa
ret
lock
push
call
and
es
sub
fwait
adc
sbb
adc
rdtsc
jne
mov
sbb
mov
mov
mov
insb
push
icebp
stos
mov
mov
orb
in
sbb
xor
xor
inc
cmc
subb
add
sub
jge
mov
pop
lret
aam
xchg
int3
mov
mov
mov
icebp
sbbl
pop
mov
lret
or
inc
xchg
mov
jge
sbb
cltd
ja
mov
add
adc
jmp
mov
cmp
sahf
mov
divl
popf
das
fsin
sbb
or
out
daa
jbe
and
mov
mov
jmp
outsb
inc
push
push
jmp
sub
mov
mov
add
push
in
cmp
int3
jl
dec
imul
and
popf
mov
xor
das
mov
add
jnp
xor
mov
or
fidivl
das
incl
jo
fsubr
ljmp
rcll
pop
out
mov
cmpl
aaa
leave
cmp
sub
je
lods
cld
das
and
push
aaa
ja
clc
aam
ret
test
outsb
pop
and
mov
cmp
mov
sub
push
xchg
inc
cmc
cmp
pop
scas
inc
leave
daa
idivl
sbbb
shrb
cli
es
pop
leave
mov
ror
fmulp
int3
call
inc
movb
pop
xchg
movsl
xlat
mov
sbb
xor
sbb
shrb
jl
and
aam
mov
sub
xor
fcmovb
pusha
sbb
jge
ljmp
mov
jmp
imull
sbb
or
loop
xchg
aad
jno
bound
add
movsb
cmp
add
push
and
push
ljmp
loopne
and
lcall
add
xor
stos
push
mov
sbb
lods
outsb
dec
jle
sbb
pop
add
jno
icebp
out
inc
sbb
lret
ficompl
fwait
int3
sbb
jns
xor
inc
jb
stos
sub
jb
pop
pop
hlt
lds
pop
pop
lods
mov
add
lret
push
sbb
mov
add
in
shll
pop
jecxz
inc
cmp
dec
jne
sub
push
out
call
pop
loop
in
mov
adc
popf
icebp
popf
mov
ds
inc
push
xchg
imul
iret
xchg
push
jbe
test
xor
cmp
insb
aaa
jp
jae
jb
mov
loopne
lret
jle
sbb
ds
lea
ljmp
xchg
lret
sub
aaa
pop
xchg
or
popf
sti
test
xor
pop
dec
add
fnstsw
push
or
shrl
fs
sub
std
adc
push
addr16
dec
sbb
faddp
inc
outsl
mov
cmp
sbb
lret
lods
xor
xor
scas
icebp
push
sub
lret
popa
inc
or
fsts
fidivl
push
mov
xchg
jge
xchg
dec
push
pop
mov
dec
andb
push
cmp
mov
mov
daa
push
ljmp
incl
mov
outsb
mov
xchg
mov
jle
jo
mov
ds
xchg
enter
lea
movsl
imul
xchg
push
xor
cmc
imul
cmpsb
xor
imul
or
sahf
sub
jg
cmp
cmp
mov
in
pop
push
popa
in
lock
adc
repz
pop
or
push
enter
fst
push
pop
bound
mov
cmp
out
sub
mov
xchg
daa
inc
imul
mov
pop
loopne
shlb
popf
loopne
loope
sbb
ror
add
pop
clc
fwait
sub
out
xchg
int3
sub
imul
sub
movsl
insl
or
pusha
push
subl
les
mov
push
pop
sbb
pop
cmp
repnz
jle
mov
arpl
xchg
mov
js
in
cmpsl
add
dec
mov
fstpl
push
leave
jnp
cli
fsubrs
mov
rcll
movsl
pop
add
inc
ds
and
sub
loopne
cwtl
xchg
mov
movsl
stc
adc
mov
mov
xor
movsb
dec
dec
movsl
and
cmp
mov
rol
rolb
inc
sbb
xor
fwait
retw
js
repnz
cmpsl
fidivrs
xchg
sarl
gs
mov
insl
xor
adc
push
sbb
cmp
jbe
mov
leave
inc
cmp
jg
mov
test
jle
mov
mov
mov
or
add
mov
mov
inc
cmp
jbe
dec
sub
movsb
hlt
test
out
rol
add
pop
ss
pop
mov
adc
ffreep
hlt
aam
push
push
faddp
out
xchg
push
loopne
bound
out
insb
xor
xchg
sub
xorl
sarl
imul
pop
inc
out
mov
lahf
jno
hlt
jg
xchg
push
push
dec
daa
cmpsl
push
mov
aaa
fldcw
jmp
jl
or
inc
mov
mov
ja
dec
nop
and
cwtl
lret
jp
mov
xlat
pop
add
shll
cmc
and
jg
xor
cmp
sbb
jae
rorb
insl
sub
pop
or
xchg
je
test
sbb
sub
divb
popa
rcl
addl
jecxz
ret
adc
sbb
notl
adc
push
xor
push
stos
aaa
loopne
jmp
es
sub
push
sbb
adc
jle
xchg
dec
pop
fldz
loope
js
mov
in
ret
jb
imul
test
mov
or
jns
mov
sub
out
mov
dec
inc
daa
inc
mov
out
pushf
jb
mov
mov
mov
outsl
cmpsb
daa
jle
cmc
inc
daa
repz
fnsave
fidivrs
stos
pop
int
cmpsl
xchg
push
mov
fnsetpm(287
sub
out
addl
mov
xor
mov
mov
add
push
sti
lds
insb
push
outsl
xor
sub
adc
push
test
cld
out
add
dec
inc
movsl
inc
lock
ret
mul
fwait
loopne
pmulhw
push
dec
xor
scas
inc
push
push
cwtl
scas
mov
xor
rolb
xchg
jnp
loop
mov
in
xor
or
inc
sub
rcll
icebp
test
getsec
pop
push
xchg
jg
push
lods
pop
mov
jecxz
mov
sub
jns
lea
jo
cmc
xchg
mov
adc
jl
daa
or
cld
dec
loop
dec
popa
dec
shlb
mov
mov
jo
imul
jb
ret
loopne
mov
jns
push
dec
mov
xor
cmpl
es
mov
jb
iret
dec
clc
cld
sbb
add
fsub
sub
and
rcrl
sbb
cmp
and
test
xchg
push
and
and
xchg
jecxz
jnp
cmpl
lds
jmp
dec
mov
in
pop
sbb
cltd
mov
faddl
ljmp
xchg
test
sbb
pusha
cwtl
insb
adc
mov
mov
iret
mov
js
ret
je
cmp
cwtl
in
jnp
cmc
int3
pop
popa
pop
filds
popa
std
aas
or
in
fucom
into
ret
or
mov
out
out
xor
sbbb
arpl
popa
adc
jg
test
xchg
fsub
dec
and
cmp
jl
sahf
frstor
jnp
insb
jmp
iret
cmp
jae
insb
lods
xchg
add
incb
dec
pop
or
lret
xlat
into
sbb
bound
ficoml
cltd
scas
dec
inc
aaa
inc
mov
or
jl
scas
rolb
cmc
pop
push
fwait
bound
out
push
ljmp
xchg
rcrl
adc
icebp
out
mov
shll
xchg
pop
mov
xchg
and
popa
das
lcall
push
dec
arpl
push
lcall
fiadds
add
push
and
add
out
js
shlb
lods
sub
loope
xor
or
and
stos
xor
mov
sbb
lret
fistl
or
fildl
sub
jns
pop
faddl
xchg
ds
cmp
je
jo
cwtl
adc
inc
push
push
add
jge
mov
test
aad
popl
add
xor
movsl
adc
das
xor
inc
hlt
cmp
addb
mov
mov
repnz
rclb
sbb
es
fnsave
cmpsl
je
inc
mov
mov
ret
add
push
lds
xor
sbb
mov
jge
arpl
getsec
aam
jg
das
mov
jmp
xor
adc
insb
stos
sub
stos
add
shrl
scas
dec
movsl
mov
lock
in
mov
loope
xor
dec
aas
mov
xchg
pusha
fstl
pop
and
and
pop
cmp
jns
stos
ljmp
loope
push
lcall
mov
cltd
arpl
pop
test
push
and
mov
jno
xchg
sub
data16
mov
or
xorb
mov
loopne
leave
dec
stc
mov
jp
das
inc
mov
sub
add
out
inc
cld
pop
jecxz
fisttps
sub
loop
adc
in
pop
shl
inc
xor
cmp
outsl
adc
pop
sbb
cmp
clc
inc
xchg
mov
cmp
cwtl
idivb
mov
mov
lds
mov
add
pop
cmpl
addl
xor
ljmp
mov
std
imul
fbstp
movsl
push
imul
xor
lods
xchg
adc
jae
fildll
pop
dec
aad
mov
push
xchg
arpl
lds
cld
mov
aaa
arpl
dec
adc
push
jne
pop
sub
aaa
sbb
xlat
je
jmp
and
movsl
xor
psraw
pop
dec
repz
adc
cmp
sub
xor
loop
add
mov
int
inc
loopne
or
xlat
cld
les
fists
cmp
or
ret
aad
fldt
push
mov
cmp
sbb
add
pop
inc
push
movsb
lret
fildll
jl
out
push
rorl
lock
lahf
jns
and
adc
cmp
es
inc
dec
loopne
mov
push
xchg
jmp
loop
loop
in
hlt
pop
fmull
outsl
fadds
mov
pop
mov
pushf
lock
aad
movsb
inc
shll
sub
mov
rcll
mov
or
pop
dec
xchg
hlt
pop
ficompl
gs
jmp
sub
or
aam
aas
cmp
adc
mov
fistpll
je
andb
sbb
push
mov
cmp
sub
xchg
call
push
movsb
fidivrl
scas
mov
jge
jmp
subl
add
xchg
fucomp
xor
call
mov
xchg
mov
ret
scas
gs
cmpsl
or
loop
ja
fs
dec
movsl
call
cmp
sbb
imul
xchg
in
inc
mov
jle
in
add
ret
out
mov
scas
xchg
pop
sbb
and
stos
jge
pushl
and
mov
sbb
call
and
sar
inc
aaa
mov
push
sub
fstl
jp
pop
stc
insl
inc
mov
shrl
fs
bound
ljmp
mov
and
push
hlt
cli
add
xchg
push
push
mov
testl
jns
mov
xor
jle
sbb
fisttpll
aad
popf
cmpsb
cmp
cmc
cmp
ljmp
sbb
pop
dec
loope
mov
lahf
int
hlt
sbb
lock
or
mov
sub
lret
sahf
inc
cmp
imul
daa
and
outsb
jge
lret
inc
sbb
hlt
inc
loop
ret
push
xchg
aam
jg
mov
fmuls
pop
sbb
push
mov
dec
sub
das
push
movsl
ss
add
daa
adc
adc
frstor
sub
loopne
imul
out
ss
pop
scas
cmpsl
movsl
mov
cmp
lods
icebp
adc
inc
jns
and
mov
fcmovbe
iret
js
xchg
lahf
fcomi
fsubl
xor
xchg
push
lods
mov
fldcw
out
mov
dec
shll
into
mov
xchg
lds
jno
dec
flds
fldt
jle
sbbb
dec
push
xchg
js
call
dec
leave
test
std
icebp
push
std
inc
mov
xor
dec
mov
xor
jb
outsb
neg
es
rcr
xchg
sub
dec
push
sbb
or
ss
jecxz
adc
add
jl
inc
cmp
leave
add
pop
shr
add
add
inc
and
ret
test
sti
xor
movsb
push
out
je
push
inc
nop
pop
pop
push
inc
fdivr
es
arpl
or
push
ljmp
in
pushf
jno
jg
fwait
popa
pop
inc
rcrb
les
clc
mov
mov
inc
out
test
mov
adc
fnstsw
out
mov
cmp
inc
imul
push
pop
lret
repz
cld
inc
scas
mov
jae
mov
lahf
add
gs
jno
fisttpll
aas
loope
rorb
into
dec
and
loope
mov
into
aad
mov
scas
inc
pcmpeqw
cmpsl
loopne
hlt
jnp
repz
xchg
ss
ret
test
enter
enter
adc
fbld
repnz
movsb
ret
push
jno
aad
mov
stc
std
or
sbb
scas
hlt
pop
inc
push
sbb
in
mov
fcoms
push
lock
xchg
xchg
mov
jnp
loope
push
mov
mov
fadd
insb
das
aas
lea
outsb
dec
rorb
psubusb
jnp
insb
and
jl
fs
pop
mov
test
mov
jns
cwtl
arpl
push
mov
es
clc
pusha
jae
jnp
or
xlat
aas
test
and
xlat
out
add
dec
fmull
mov
dec
out
xor
mov
test
daa
dec
pop
push
scas
inc
pop
lret
push
ret
outsb
mov
fstpl
adc
repz
xchg
xorl
sahf
adc
or
dec
push
sbb
data16
adc
jns
cmp
sub
fbld
sub
push
add
in
bound
add
imul
xor
dec
loope
lds
cmp
sbb
rorl
mov
bnd
loope
rol
insl
cmpb
mov
or
dec
shlb
mov
jl
add
enter
in
sbb
jg
adc
mov
add
lahf
arpl
jle
lea
sbb
rcll
sub
subb
pop
cld
inc
add
gs
xchg
mov
imul
je
int
in
mov
mov
xchg
cmpsl
xchg
and
ljmp
test
mov
cltd
in
mov
adc
lret
movsl
add
pop
ret
sbb
cltd
dec
add
lret
nop
mov
les
xlat
mov
popf
mov
and
cli
mov
lods
es
call
xchg
mov
mov
pop
ficompl
mov
push
xlat
or
and
dec
sbb
mov
sahf
jae
jno
push
mov
or
add
push
push
lcall
sahf
jno
aaa
pop
aas
and
mov
xor
xor
enter
mov
or
push
cmpps
in
sbb
dec
sti
cs
inc
jmp
pop
ljmp
jo
andl
aad
jp
and
pop
sub
cmp
call
iret
pop
enter
pop
dec
mov
shl
cmp
out
cmp
pop
xor
cmp
adc
stos
enter
ret
sbb
fistpl
mov
jmp
js
ret
testb
mov
inc
lea
bts
out
or
lds
push
mov
popa
rcrb
and
fcom
out
add
out
insb
mov
cmp
clc
imul
mov
in
pop
dec
js
xor
adc
fcmovu
inc
sub
cmp
test
pop
mov
push
shlb
nop
jae
mov
dec
in
adc
pushf
inc
insb
xlat
dec
fisubl
cltd
or
jb
loope
and
push
inc
adc
push
sahf
or
aas
mov
mov
cwtl
mov
movsl
out
les
jae
addr16
fbld
adc
popa
and
sbbl
xor
cmp
sbb
jb
movsl
mull
dec
push
mov
cmp
sbb
test
xchg
mov
faddp
in
sahf
dec
addr16
imul
xor
adc
xchg
retw
ljmp
data16
sti
pop
push
sub
xchg
hlt
stc
loope
movsl
sahf
shrl
insl
adc
mov
loopne
push
fyl2x
sahf
outsb
aam
repnz
add
add
js
es
subl
clc
cmp
fs
push
push
jbe
in
or
mov
push
sbb
addr16
ss
stos
inc
add
icebp
fisubs
cmp
daa
arpl
leave
sti
fs
shl
add
fdivs
sub
or
js
mov
mov
push
fisttpl
push
outsb
inc
das
jp
cmp
push
aaa
test
and
xor
mov
imul
imul
clc
add
push
xor
inc
and
xchg
cmp
push
mov
ljmp
ja
cmc
idivb
jno
cld
loop
lock
add
lds
inc
add
lods
negl
insb
mov
outsl
rclb
js
jmp
sarb
gs
lods
adc
js
lahf
lds
lods
fnsave
pop
jp
bound
das
test
xor
sub
js
notb
pop
out
out
lock
call
ret
les
xchg
shlb
jp
add
cmp
dec
sbb
cmp
lock
aaa
pop
jl
das
xor
int3
push
fs
std
mov
pop
fwait
and
inc
mov
lods
mov
cmc
sub
lds
pop
out
sub
lock
adc
jns
dec
test
jle
fucom
push
out
sub
jg
pop
jmp
jecxz
in
fisubrs
loopne
sbb
testb
shll
push
push
jp
mov
adc
add
addr16
or
lea
js
jno
mov
pop
shll
sbb
jne
dec
jp
mov
in
xor
or
mov
es
inc
sbb
movsb
das
inc
lahf
cmc
popa
sub
adc
or
fisttpll
inc
test
xchg
cltd
es
loopne
lea
mov
cmp
pusha
inc
sbb
insl
push
movsb
cmp
bound
fbld
aas
andl
push
inc
jno
mov
jae
cmp
cli
jge
bound
push
dec
xchg
pop
lret
test
or
mov
mov
mov
and
and
mov
cmp
xorl
scas
push
and
test
mov
xor
fnstsw
mov
mov
xchg
mov
shr
xchg
repnz
xchg
stc
jb
call
adc
daa
fsubs
mov
mov
lcall
xchg
and
xchg
sub
push
cli
fmuls
and
pop
ljmp
hlt
arpl
jg
jnp
ror
pop
jl
mov
rorb
jo
shlb
es
fwait
pop
push
sahf
cmp
shll
sbb
fmuls
xchg
fnsave
mov
test
iret
xor
pop
and
ss
mov
stc
icebp
push
mov
inc
test
pop
push
cwtl
sbb
xchg
lods
sub
shll
mov
fs
mov
sub
cmp
test
jns
out
es
mov
rclb
fisubs
mov
sbb
cmp
mov
mov
xlat
inc
mov
stc
cmp
int
shlb
sahf
xchg
fiadds
addr16
sbb
leave
push
mov
xlat
cwtl
pushw
pop
xor
dec
imul
fst
testb
fisubs
jecxz
stos
or
pusha
in
mov
jl
sub
pushf
fstps
or
in
mov
sbb
fidivl
mov
aas
ror
push
test
push
test
mulb
adc
outsl
dec
fwait
cmp
rcrl
fsubl
mov
enter
cmp
xlat
push
sbb
inc
pop
xor
push
or
mov
add
mov
fcmovnbe
loope
aas
push
les
pop
aas
mov
sub
lahf
ret
in
add
dec
and
iret
sahf
into
sbb
or
mov
addr16
dec
or
or
int
shrb
or
pop
loop
fadd
mov
rorl
test
cmc
push
mov
pop
aad
sub
in
xor
jge
sbb
test
jmp
jae
nop
and
dec
movsb
stos
cmpsl
test
sbb
loop
leave
mov
int3
mull
dec
push
shrb
inc
pop
jnp
div
add
xor
mov
jo
sbb
enter
pop
jbe
dec
sbb
lcallw
jb
into
aaa
jp
gs
pop
iret
jmp
push
add
in
in
adc
leave
in
inc
popa
adc
mov
adc
fadds
or
pop
pop
mov
popf
push
out
nop
in
push
rcrb
subb
vcvtps2pd
stos
fadd
call
idivb
arpl
pop
inc
inc
jb
mov
and
cmc
fimuls
pusha
xor
cli
xlat
iret
std
sbbl
dec
pop
pop
insb
mov
adc
cli
pop
sahf
aad
lret
cmp
cmp
mov
inc
mov
pop
fdivrs
or
test
or
lret
in
mov
jl
sub
pop
jbe
cmp
sub
test
adcb
sub
in
and
xor
js
clc
popf
fs
std
mov
xchg
mov
out
jne
pop
pusha
and
adc
jl
cwtl
xchg
pop
sbb
inc
test
filds
dec
xchg
arpl
pop
mov
push
in
xor
mov
cmp
jmp
in
sub
mov
pop
and
inc
gs
xlat
dec
inc
add
mov
pop
stos
bound
jp
jb
inc
pop
inc
and
loope
fpatan
mov
mov
mov
popf
dec
lret
push
cmpl
cld
fxch
push
xchg
movsl
mov
cmp
mov
mov
das
inc
push
sbb
pushf
sbb
shrb
or
cld
faddl
inc
jne
adc
xchg
and
or
rcll
mov
mov
outsb
and
jo
aaa
fdivp
imull
xor
sbb
mov
cwtl
xchg
sbb
xor
xchg
insl
xor
iret
cwtl
insl
adc
push
fs
cmp
push
inc
es
pop
jo
pushf
lahf
jne
and
add
imul
cwtl
mov
sbb
int3
ja
pop
subl
insb
movsb
xchg
out
mov
ret
push
out
jo
pop
jne
cmp
out
dec
data16
fistpll
out
inc
ret
xchg
push
and
lret
icebp
mov
sbb
repnz
xchg
or
out
jbe
inc
pop
int
aas
push
mov
dec
xchg
add
add
fs
jmp
in
push
loop
scas
test
stos
xor
ds
cmpsb
pop
out
fiadds
pop
aam
jmp
mov
jmp
aam
jp
and
leave
mov
xchg
pushf
sti
cmc
pop
and
rcrb
imul
pop
loopne
push
mov
cmp
mov
xor
sub
add
mov
mov
sub
int
rorb
scas
inc
push
xchg
pop
and
in
dec
push
inc
scas
or
pop
xor
adc
imul
add
repnz
sub
mov
inc
in
mov
aaa
xchg
fldl
fstl
mov
je
sahf
mov
mov
pop
cmp
push
add
inc
xchg
popa
testb
jg
loop
mov
mov
arpl
test
mov
jl
movsb
mov
stos
sub
xchg
xchg
sub
arpl
rcr
lods
aas
jnp
fs
rorb
cmpsl
xor
mov
pop
idivl
aam
cltd
out
dec
rcll
shlb
xor
pusha
rcrl
fadds
mov
je
out
push
gs
mov
insb
das
push
mov
xor
out
pop
jmp
scas
clc
xchg
addl
jl
dec
xchg
adcb
lretw
mov
sbb
rcrb
inc
aad
js
lds
xchg
or
repz
mov
xchg
sub
fisubs
loopne
adc
icebp
mov
daa
aaa
in
add
sub
xor
mov
mov
xor
and
addl
cs
loope
or
insb
into
or
lock
add
xor
xchg
insl
cmp
cmp
rcll
psllw
filds
daa
sub
pop
aaa
adc
inc
icebp
xchg
cld
push
stos
test
inc
pushf
push
adc
popa
call
mov
cmp
in
dec
mov
jp
stos
mov
xor
jo
mov
aad
cmc
arpl
and
out
adc
popf
cmpsb
pop
and
pop
push
xchg
in
xorb
fs
pop
adc
mov
add
fists
hlt
outsl
mov
aas
xchg
pop
mov
ret
mov
gs
scas
and
pop
je
push
repnz
gs
mov
push
scas
mov
jns
dec
loope
xchg
xor
lods
push
sub
mov
pop
pop
mov
nop
test
push
ljmp
push
arpl
mov
scas
into
sub
ret
jmp
pushf
cmpsl
fldcw
aad
cs
or
popa
cli
les
sbb
test
push
inc
or
std
lret
mov
mov
jmp
inc
enter
fucomp
sbb
roll
arpl
stc
or
jl
js
out
pop
jns
fistl
loop
xchg
jo
and
movsl
out
dec
or
inc
outsb
lock
ficoms
push
mov
fnsave
or
mov
mov
mov
xlat
xor
divl
sbb
mov
sti
xor
xchg
jp
lods
dec
push
pop
out
adc
mov
divb
shlb
mov
adc
inc
adc
push
in
pusha
and
jle
insl
push
push
imul
xor
add
movsl
mov
mov
xchg
ret
sub
std
jno
mov
divl
and
sub
add
and
pop
insb
sbb
std
ljmp
sub
hlt
xchg
insl
cltd
fndisi(8087
sbb
stos
es
or
out
scas
mov
jno
or
loop
and
fisttps
cmpsb
jge
adc
ss
loopne
cmp
xor
jo
adc
cltd
in
in
scas
shlb
loop
pushf
adc
or
jnp
lret
ffreep
rcll
pop
sub
testb
push
inc
leave
cmp
mov
fcoml
lret
shll
lret
aas
mov
icebp
and
lret
xchg
or
mov
or
mov
pusha
jl
hlt
ja
sbb
and
stos
fisubrl
stos
aam
jecxz
jno
test
xchg
mov
jge
cmpsb
cmp
inc
cmc
lea
int3
lret
dec
in
scas
jmp
cwtl
lcall
ss
loop
sub
jbe
mov
nop
cmp
xlat
pop
lcall
sahf
scas
push
sti
add
imul
icebp
cltd
aad
fldcw
inc
cmpsb
mov
ss
pusha
fnstcw
mov
add
cmpsl
xchg
and
enter
jg
mov
sbb
xchg
xchg
mov
les
xor
dec
sti
mov
dec
mov
lock
dec
mulb
mov
stc
and
ret
cmp
adc
in
jb
scas
sub
jecxz
jecxz
push
and
je
xor
pop
loop
pop
bound
jnp
jbe
incl
or
dec
add
enter
das
jno
and
ljmp
mov
sbb
cmp
fwait
sbbb
pop
bound
fdivrl
clc
push
enter
cmp
mov
mov
cmp
jae
aas
lcall
outsb
add
lock
mov
xchg
push
jg
or
mov
jns
scas
jge
iret
test
outsl
cmp
icebp
jg
subl
fmull
imul
in
jp
fwait
inc
pusha
xor
lahf
xchg
or
jnp
pop
ret
out
adc
out
sub
mov
jg
mov
mov
jo
sbb
xchg
sbb
movsl
hlt
imul
scas
mov
sbbb
xor
ss
inc
add
lahf
outsb
ret
push
movsb
stos
sub
in
stos
test
adc
test
add
out
cld
ja
xor
bound
cmp
sahf
ljmp
into
push
adc
lods
mov
inc
cmp
sti
mov
or
ret
jae
push
cmp
je
cmp
rcll
frstor
cmpl
xchg
ret
ja
cltd
pop
out
sbb
in
repz
inc
out
add
xchg
mov
pop
push
pop
mov
xor
or
std
gs
mov
xor
lcall
scas
cmp
add
mov
rorl
pop
jecxz
push
jns
adc
movsl
cmp
push
scas
dec
push
rcrb
call
sub
jns
push
pop
xlat
mov
testl
scas
cld
fwait
aam
clc
imul
in
dec
cld
in
nop
add
ds
jp
jl
or
and
inc
out
pop
mov
mov
out
cs
sbb
sbb
or
dec
orb
popf
push
add
dec
dec
popa
pop
dec
pushf
mov
add
sbbb
int3
mov
push
sbb
out
cs
cmpsb
ljmp
cmp
dec
in
mov
push
js
jp
pop
mov
test
movsl
js
js
push
imul
pop
or
push
and
test
adc
clc
ret
in
sub
mov
or
sub
cmp
enter
xor
mov
mov
sbb
aaa
xor
sarb
sahf
sahf
and
js
rclb
out
pop
clc
add
pop
ljmp
jns
repz
jle
jno
push
icebp
out
mov
stos
ret
das
aad
push
adc
jmp
pop
sub
cmpsb
xchg
data16
push
popf
popf
cs
ja,pn
sub
sbb
jo
mov
pop
pop
dec
clc
inc
pop
mov
movsl
xchg
arpl
xchg
sub
sbb
jno
adc
dec
sbb
ret
das
mov
hlt
cmpsl
fucomi
mov
stos
mov
ror
shll
mov
sub
dec
xchg
adc
fidivrs
xchg
int
dec
dec
mov
mov
cmp
stos
xor
idivl
cmp
ljmp
push
aam
jmp
dec
mov
cltd
in
xor
or
push
xchg
inc
pop
mov
mov
adc
jne
mov
insl
repz
loopne
sbbl
push
mov
das
and
outsb
inc
outsl
sbb
addb
push
dec
cmc
push
inc
mov
loope
es
mov
insb
sahf
and
cmp
inc
jg
jecxz
scas
push
scas
mov
fildl
push
movsl
xor
sbb
jl
sbb
mov
pop
js
aad
xchg
or
rcrb
jge
dec
je
stc
aam
or
arpl
fs
sub
iret
iret
leave
in
fildll
ret
sub
lret
call
lahf
bound
jno
push
imull
sahf
shlb
mov
pop
int3
sbb
ja
push
add
jg
rcll
imul
outsl
arpl
repnz
ljmp
ss
mov
cltd
jmp
and
pop
or
xchg
mov
into
dec
ja
cwtl
inc
stos
orl
sahf
push
fbld
jnp
push
jbe
mov
push
pop
mov
js
dec
hlt
mov
popf
pop
add
mov
ja
into
pop
stos
jno
ror
adc
jg
mov
adc
push
js
jle
jne
andl
call
adc
and
push
xchg
dec
adc
mov
cwtl
movsb
sbb
mov
addl
dec
pop
iret
lds
popf
or
pusha
aaa
imul
stos
mov
mov
les
out
cmp
mov
xchg
add
out
mov
lahf
std
out
add
add
fldcw
out
push
sti
test
or
xchg
pushf
add
adc
and
mov
inc
ljmp
inc
aam
xchg
and
jmp
cld
xor
fcom
into
cli
sar
sbb
sbb
jle
out
in
in
bound
mov
adc
rcrb
pxor
stos
dec
mov
dec
inc
insb
mov
aaa
rcll
add
pop
es
sarl
pop
lea
fists
andb
xchg
stc
sti
loope
pushw
mov
pop
mov
jmp
scas
lds
sub
loop
or
or
xchg
loop
cltd
push
sbb
inc
fildll
lods
push
dec
lahf
icebp
mov
adc
xor
or
clc
ret
mov
mov
movsb
repz
lods
jle
imul
mov
js
cmpsl
push
imul
cwtl
pop
xchg
icebp
jmp
js
push
or
fwait
dec
pusha
push
ds
movsl
push
pop
pop
pop
mov
aad
mov
mov
test
xorl
jecxz,pn
dec
test
add
icebp
xlat
mov
fwait
sub
push
dec
shlb
rorl
icebp
clc
cmp
fwait
pop
inc
and
add
out
mov
stc
xchg
int3
push
jmp
lods
lds
cmpsl
in
inc
adc
fs
inc
flds
mov
sub
jbe
sub
or
xchg
or
jns
pop
test
lcall
cmp
mov
jno
stc
lods
mull
xor
lods
jl
xchg
mov
shrb
inc
arpl
jne
test
lcall
mov
inc
cs
sbb
fidivs
adc
sub
push
inc
dec
sub
mov
cwtl
cmp
and
add
sub
jmp
cltd
xor
push
inc
daa
inc
and
fadds
lahf
jnp
mov
pusha
js
clc
inc
rorb
xchg
les
push
adc
push
stos
imulb
sub
xlat
pop
push
inc
cmp
mov
lcall
sbb
fldl
xlat
or
das
and
outsl
jae
sbb
jb
adc
push
lea
int
adc
add
push
aam
lock
mov
cmp
jno
and
jbe
loop
pop
mov
xchg
or
xor
outsl
push
xchg
outsb
push
movsl
and
es
mov
jecxz
adc
cmpsl
xchg
mov
add
and
je
mov
aas
repnz
or
enter
pop
jns
repnz
popa
adc
lea
call
mov
pop
mov
push
and
jle
shlb
mov
dec
outsb
test
stos
dec
mov
cld
push
or
dec
sub
ret
bound
mov
mov
jbe
nop
idivl
jo
add
xor
in
and
out
hlt
inc
jno
jmp
push
adcb
mov
xor
mov
inc
xchg
mov
inc
sub
mov
loope
inc
hlt
pop
xor
rorb
mov
pop
lret
inc
xchg
mov
add
cmp
inc
inc
mov
fwait
xchg
push
daa
andb
jae
xor
dec
or
subl
fmull
inc
add
icebp
xor
jns
out
hlt
and
test
popa
call
int3
xchg
cmp
gs
stos
jge
inc
pop
inc
fcom
popf
ljmp
shll
in
arpl
ljmp
cld
pusha
pop
das
xor
bound
or
orb
jmp
mov
and
cltd
push
daa
dec
adc
movsb
les
mov
or
dec
jl
adc
movsb
fiaddl
sbb
lret
mov
lea
iret
mov
stos
js
mov
jno
jns
dec
out
dec
dec
inc
lret
outsb
shll
push
jmp
or
cmpsl
sti
inc
and
push
push
dec
and
mov
repz
sbb
divb
mov
xchg
pop
cmp
lahf
sti
jno
mov
pop
inc
jmp
dec
fisubl
mov
add
imul
xorl
cltd
cwtl
push
test
sbb
fdivrl
faddl
es
push
adc
pop
test
jl
jbe
inc
mov
imulb
popf
cmpsl
movsl
pop
ret
lcall
inc
cmpsb
call
or
loop
add
loop
outsl
cmp
call
sub
or
stos
test
out
push
mov
push
lods
mov
mov
mov
loope
stos
repz
lock
push
pop
mov
sbb
inc
test
or
adc
sahf
out
jle
lret
mov
daa
mov
mulb
das
lret
shll
cmp
adc
out
pop
xchg
sbb
fstpl
addl
add
daa
cmp
repz
das
mov
rorl
jno
cltd
rclb
xchg
scas
push
test
cli
ja
es
xchg
adc
pushf
in
add
xor
dec
lahf
mov
xchg
jg
jno
jle
mov
fdivl
jge
arpl
dec
cmpsb
jl
jge
adc
fs
int
clc
fucom
movsl
jmp
fnstcw
rol
insb
mov
jecxz
add
push
test
stos
pop
sbb
test
xor
xchg
rol
mov
xor
and
scas
rclb
mov
sbb
push
rcrb
ljmp
sarl
insb
bswap
dec
fisubs
xchg
nop
sub
icebp
adcl
adc
test
push
arpl
inc
loop
xchg
ds
mov
fsubr
shll
jnp
add
push
mov
xor
push
test
inc
test
push
jns
shll
ret
popa
jnp
dec
outsb
sbb
mov
jp
test
adc
xchg
movsl
sbb
pop
frstor
loope
lahf
call
inc
rclb
cs
push
cmpsb
add
sub
sub
pop
test
gs
push
mov
sbb
cmp
pop
notb
push
or
push
cmp
push
sub
xor
outsl
fldl
push
pop
mov
lods
rorb
pop
push
xchg
pop
sub
std
jecxz
xor
daa
jmp
and
aaa
pop
ja
mov
mov
mov
dec
inc
mov
push
leave
decl
shll
push
push
sbb
out
push
cmc
cmp
movsb
mov
fisttpll
or
xorb
jl
xchg
mov
popf
and
lods
xor
imul
push
popa
testl
mov
mov
scas
lea
aam
adc
je
out
mov
inc
cld
and
add
adc
mov
in
loopne
pop
mov
pop
sbb
mov
mov
mov
push
xchg
subb
les
sti
mov
insb
adc
aaa
or
fdivrs
push
lods
shrb
or
jns
or
xor
leave
arpl
imul
pushf
dec
and
scas
xchg
mov
popf
sub
add
mov
testl
rorb
mov
push
mov
stos
cmpsb
xchg
xchg
movl
xchg
push
mov
pop
add
pop
cltd
scas
testb
push
jae
pop
push
sbb
rorl
jne
mov
cmova
mov
iret
jecxz
push
xchg
sub
imul
rorb
les
loop
imul
jg
ss
mov
ds
push
dec
mov
push
stc
mov
js
int3
push
mov
pop
frstor
push
adc
pop
jl
push
push
push
mov
test
out
jecxz
sbb
and
dec
jb
jmp
in
inc
out
mov
aam
mov
ret
bound
inc
push
mov
dec
add
out
push
movsl
sbbb
add
dec
add
cwtl
mov
out
inc
inc
xor
mov
mov
pop
adc
push
lahf
cmp
and
stos
fstpt
in
xor
sub
movsl
sbb
lret
scas
xor
push
scas
and
mov
stos
movsl
aam
mov
or
push
cmp
call
addb
cmpsl
je
and
push
or
insl
fstps
sbb
xchg
push
mov
fdivrl
ds
int
dec
cmp
sbb
jns
lds
movsl
pop
rolb
test
adc
jecxz
in
dec
stos
mov
fs
or
push
clc
in
je
daa
sbb
adc
popa
jmp
subl
insb
imul
xchg
sbb
ds
out
gs
scas
lds
rol
dec
into
mov
sub
icebp
in
js
dec
sub
dec
inc
dec
stos
call
sti
add
xor
jmp
jno
xchg
imul
cli
rolb
push
add
and
imulb
adc
inc
in
lods
shll
outsb
imul
fsubs
fs
shrl
push
inc
test
in
xchg
jne
jmp
mov
ds
cltd
dec
xlat
mov
insb
cmp
lcall
pushf
cmc
sub
and
scas
nop
xlat
or
scas
stc
sub
push
xchg
insb
cltd
jecxz
lret
mov
lods
std
sbb
pushl
call
cs
dec
rolb
xlat
lods
inc
xchg
xchg
pop
sti
jo
pop
cmpsl
push
arpl
mov
adc
sbb
insb
push
push
add
in
and
jnp
cmpsl
jae
mov
cmp
mov
jnp
fnstcw
mov
aaa
cmp
pop
ljmp
fcomps
jge
mov
sub
or
les
movb
mov
jle
clc
andb
sub
das
out
push
sub
roll
pop
add
mov
arpl
jnp
dec
pop
fs
push
or
mov
pop
pop
pop
in
xchg
lret
repz
icebp
mov
xchg
and
xorl
fistpll
cwtl
fst
xchg
sbbl
xor
insl
push
and
sub
inc
in
jae
cli
mov
js
jmp
pushf
das
arpl
mov
test
pop
adc
xor
cs
ja
out
js
enter
jg
pop
mov
xor
shll
or
push
adcb
and
or
movsl
out
sbb
fs
ds
pop
sbb
scas
scas
loopne
sub
pusha
mov
jbe
mov
leave
bnd
cmp
idivb
or
cli
lock
push
xabort
push
insl
cmp
adc
sub
test
dec
push
push
mov
cltd
rolb
das
sbb
mov
pushf
dec
pop
mov
inc
and
dec
mov
repnz
mov
incl
addl
insl
xchg
mov
or
arpl
mov
fisubrl
add
loop
jmp
cwtl
fidivrl
xchg
push
addr16
push
cmc
movsl
mov
arpl
insl
imul
in
pop
mov
ret
cmc
jno
fdivs
push
push
xchg
scas
mov
and
sbb
int
sarb
pop
gs
shll
mov
cmpsb
sbb
jo
shrl
out
sub
mov
xor
in
jo
dec
idivl
dec
sbb
shlb
sub
xor
scas
push
jmp
int
cld
imul
dec
ds
lret
stc
mov
call
les
jmp
dec
cmp
cmc
add
insl
xor
out
outsb
mov
loop
sbb
aas
cltd
xchg
lret
inc
loopne
mov
nop
sub
xor
flds
call
push
jns
pop
mov
inc
cmp
les
mov
daa
rcrb
sarb
outsb
test
subb
hlt
xlat
cmp
out
push
adc
add
std
outsb
lds
mov
xor
sbb
icebp
icebp
or
mov
sbb
inc
fisubl
int3
je
adc
fldenv
subl
mov
add
sarb
mov
jae
sub
inc
insl
push
aad
mov
ss
mov
pop
adc
mov
or
orl
mov
fwait
insl
movsl
icebp
pushf
imul
xor
adc
sbb
out
mov
jp
lods
mulb
add
shl
outsb
cmp
cmpsb
imul
les
mov
testb
lods
mov
test
mov
jmp
mov
es
pop
pop
fdivrl
xorl
fs
push
pusha
rcll
mov
mov
loope
shrb
call
sbb
sbb
cmp
xchg
push
movsb
icebp
jno
pop
fucom
add
sar
xchg
cmc
shrl
mov
jns
loopne
mov
add
mov
ret
xchg
xor
xchg
mov
pop
or
scas
pop
add
stos
test
inc
sub
and
out
or
inc
push
push
insl
fcom
jnp
pop
fiadds
pop
dec
out
mov
sbb
mov
ret
xchg
adcl
lret
xchg
add
pop
je
mov
xor
push
cmp
fildl
and
jne
imul
inc
xor
das
push
outsl
into
add
mov
lret
icebp
mov
dec
add
xor
mov
icebp
push
mov
cmp
push
decl
stos
orl
sbb
inc
cli
pop
subb
jbe
mov
cmp
addr16
pop
scas
push
clc
data16
outsl
or
pop
rclb
push
xchg
add
repnz
xchg
push
add
outsl
push
jg
mov
and
inc
cmp
ljmp
je
adc
insb
jo
call
mov
leave
mov
mov
fmul
mov
inc
mov
out
jne
push
push
out
test
idivl
cmp
inc
stos
fs
ficoms
stc
xor
fsub
ds
cmpsl
push
sub
lea
sub
inc
repnz
mov
sub
scas
ds
jl
aas
test
mov
cld
mov
dec
rcrb
mov
clc
push
int
idiv
cli
xchg
fistpll
add
pop
push
inc
xchg
cmp
dec
aad
add
push
into
std
mov
cmp
sub
jmp
cmc
imull
fwait
outsb
decl
xchg
jo
xor
or
stc
mov
fmuls
and
dec
dec
inc
ja
popa
pop
insb
mov
shrl
xchg
mov
sub
xor
popf
push
add
das
jmp
clc
mov
sub
scas
je
out
fisttpl
fistpll
xor
test
adc
or
aaa
add
mov
mov
xchg
lcall
lods
mov
push
push
adc
daa
mov
scas
sub
adc
movsl
pusha
pop
inc
pusha
cli
adcl
cmp
js
and
mov
jo
in
cmp
aam
sbb
lret
xor
lods
movsl
call
xchg
mov
lods
cwtl
mov
jg
in
mov
push
scas
ss
xor
idivb
and
sbb
pop
adc
sahf
dec
loope
stc
inc
popf
mov
daa
jns
clc
sbb
push
ret
incl
loopne
fxch
jle
out
push
jle
mov
xlat
dec
pushf
addr16
sub
es
mov
out
pop
hlt
adc
test
mov
pop
or
rcrb
lods
jb
push
jbe
jp
mov
ror
aaa
inc
push
push
packuswb
fstpt
jmp
mov
xchg
test
dec
dec
cwtl
ss
and
mov
sub
cmp
or
jns
pop
jne
sbb
sub
jge
push
jg
std
pop
ja
fiaddl
shlb
das
xchg
fiadds
add
mov
push
shrl
sub
pop
out
adc
adc
mov
hlt
fdivl
std
in
or
stc
xchg
dec
repz
les
mov
cmpsb
mov
sbb
in
cmpsl
das
adc
data16
icebp
dec
or
lahf
dec
jecxz
dec
inc
push
push
stos
push
push
pop
mov
mov
or
lods
mov
cmp
dec
dec
adc
mov
adc
xchg
aaa
or
or
mov
ljmp
adc
aas
enter
icebp
adc
or
adc
pop
sbbb
loope
mov
mov
addr16
sbb
mov
outsb
dec
mov
aaa
rorl
rclb
mov
pop
out
add
dec
mov
fiadds
pusha
out
je
mov
shll
sub
popa
push
mov
cmc
mov
or
mov
sub
loopne
fmuls
test
scas
or
inc
insb
xchg
and
cmp
jb
add
in
clc
dec
and
cltd
push
mov
mov
dec
mov
fdivl
loope
ror
mov
jb
cmp
aaa
outsb
fldenv
jns
int
push
push
mov
mov
sub
add
pop
add
dec
add
mov
rol
xchg
cmpsb
xchg
imul
inc
mov
ror
pushf
sbb
iret
mov
mov
mov
xchg
out
inc
inc
jmp
les
mov
sub
fbstp
fwait
das
pop
popa
mov
xor
pop
mov
xorb
mov
adc
lds
mov
mov
aas
movsl
lods
pushf
sub
xchg
popa
cmp
fnstenv
or
dec
cs
dec
imul
and
inc
ja
inc
psubw
pop
or
pop
mov
mov
pushf
test
push
fs
add
xchg
cmpsb
rcrb
inc
cmpsb
dec
inc
arpl
pop
dec
call
push
push
dec
loopne
lock
lds
ljmp
xor
cmc
aaa
push
sbb
repnz
cmc
outsb
ficoml
call
es
incb
mov
aam
aad
push
mov
iret
sar
push
jge
mov
js
or
xorl
loopne
imul
bound
repnz
pop
pop
mov
mov
insb
mov
xor
sahf
cmp
cld
addl
cmp
leave
repz
push
gs
mov
sub
jne
out
pop
xor
push
xchg
in
push
ds
out
shl
adc
cwtl
test
int3
jnp
mov
dec
test
lods
je
xchg
and
pop
dec
dec
sarb
sub
inc
cli
iret
scas
in
in
adc
loopne
dec
pop
ret
mov
sbb
sarb
test
icebp
nop
shlb
push
cmc
arpl
fcmovnu
js
jnp
pop
mov
inc
stos
std
iret
icebp
cmpsl
pop
insl
push
gs
cltd
mov
jl
pop
aad
lcall
sub
enter
into
pop
xor
leave
mov
jns
dec
dec
jl
outsb
cltd
jmp
sbb
pushf
inc
jbe
cmp
pop
ljmp
jo
sbb
fcompl
dec
pop
fildll
push
rcrl
inc
scas
into
jecxz
inc
add
out
movsl
lock
sbb
inc
or
xchg
inc
jle
sarb
add
mov
aas
outsb
out
mov
test
inc
sub
mov
mov
movaps
jl
popa
dec
loopne
shll
xlat
cld
dec
je
jg
push
push
cmpsl
xor
jmp
mov
cmp
les
adc
mov
jl
fs
cmp
sub
push
jae
jno
aad
int
mov
adc
movsl
sub
pushf
pop
dec
repnz
std
jp
mov
cmpsb
fwait
sarl
mov
stos
fidivs
in
fsubrl
lock
dec
inc
aad
out
fdivl
lcall
push
iret
xor
jmp
and
dec
cwtl
lret
mov
in
sbb
mov
xor
icebp
jo
filds
dec
xor
insl
imul
mov
mov
loope
in
pop
mov
roll
fisubrl
cmpsl
inc
mov
ss
ss
cwtl
mov
sarl
xlat
shl
sti
je
stos
mov
mov
mov
stc
xor
inc
cmpsw
in
les
icebp
out
pop
cltd
int3
cld
jns
sub
push
xchg
cmp
icebp
insb
and
xchg
xchg
cmpsb
dec
push
xlat
jle
add
mov
jmp
shrb
pusha
xor
fisubrl
mov
iret
pop
pop
push
into
xor
bnd
xchg
test
mov
adc
cmp
ds
insl
int3
and
icebp
test
aam
scas
adcb
and
sbb
pop
mov
repz
push
aad
sbb
or
cwtl
cld
shrl
into
les
iret
fcmovu
xor
jae
out
sub
fwait
in
aad
adc
pushl
dec
hlt
adc
adcl
sbb
mov
dec
cmp
adc
insb
mov
es
cmp
fisttpll
outsb
fstpl
mov
imul
jle
mov
pop
imul
movsb
leave
je
or
pushf
xchg
add
rcrb
aad
pusha
les
mov
pop
push
stc
xchg
push
je
jecxz
add
add
jns
sahf
push
fmul
mov
ficoml
jmp
out
xchg
fsubr
scas
lret
pop
ret
test
dec
xlat
mov
fs
leave
stc
and
lret
xor
pop
mov
psubd
and
push
xchg
dec
dec
adcb
xchg
mov
mov
fldpi
or
mov
scas
mov
dec
scas
sahf
pop
jmp
popf
add
push
test
xchg
int
cld
cmc
mov
daa
pushf
adc
jne
mov
arpl
nop
adcl
pmulhw
dec
stos
and
cmp
enter
push
dec
insl
cwtl
aam
mov
sbb
pop
cmp
mov
cli
mov
add
lods
sti
and
cmp
adc
jno
mov
inc
cmpsb
int3
hlt
mov
negl
pop
cmp
mov
push
in
dec
fs
pop
shll
fwait
cld
lcall
arpl
mov
mov
and
jne
pop
sti
lret
data16
jge
dec
or
lea
arpl
aad
enter
enter
setae
repnz
jg
stc
popa
jne
cmp
push
movsl
scas
xchg
jg
in
pop
pop
sbb
repz
aad
and
andb
inc
lods
icebp
sub
lcall
pop
lcall
push
adc
dec
pushf
or
or
pop
xchg
xchg
movsl
in
xlat
mov
dec
dec
inc
inc
sbb
xchg
jns
inc
fmuls
xchg
arpl
add
lods
sti
pop
ljmp
sahf
jnp
mov
push
xchg
aad
sub
or
pusha
cmp
jle
fcmove
mov
sub
jle
sbb
mov
jae
mov
inc
dec
not
pop
jae
icebp
mov
xor
frstor
jne
testb
mov
cwtl
mov
stos
push
pop
inc
mov
cwtl
inc
xchg
mov
cltd
sahf
gs
add
push
and
dec
sbb
lcall
add
int3
adcb
pop
lret
shl
and
leave
pop
stc
cld
cmp
mov
xchg
insl
jns
dec
mov
lahf
push
icebp
test
sub
xlat
xchg
and
es
push
ljmp
sub
sub
int
std
jno
mov
push
xorb
mov
add
mov
ret
xor
jb
je
jno
dec
cmpsb
add
inc
popf
inc
mov
lahf
insl
jb
cmpsl
test
xor
push
jle
adc
repnz
cmp
sahf
dec
insb
mov
adc
mov
ljmp
pusha
in
popf
mov
ficomps
push
xor
xlat
stos
test
es
insl
fcmovu
js
mov
inc
inc
ljmp
scas
xchg
sahf
out
daa
add
mul
jae
jmp
out
mov
shrb
ror
js
mov
scas
loopne
fsts
xchg
fisubrl
test
xor
leave
rolb
jmp
pop
pop
hlt
gs
pop
cmc
mov
jmp
xchg
add
jp
addl
push
loopne
sbb
pop
jnp
adc
mov
push
dec
mov
push
sahf
mov
popf
push
pushf
lds
pop
xchg
cli
imul
pop
push
push
dec
inc
clc
sbb
xchg
cld
out
iret
ret
test
and
subl
ja
int3
pop
jle
cmp
decb
xchg
pop
push
sbb
in
loope
add
iret
jns
out
lret
mov
or
mov
jne
in
dec
mov
push
imul
inc
test
jmp
push
cmpsl
inc
xor
das
fsubrs
jmp
enter
and
push
add
add
sbb
pop
aas
dec
pop
das
jbe
lahf
push
mov
out
jp
jb
outsl
mov
testl
test
jmp
movsb
fwait
test
sub
push
sahf
frstor
mov
aad
add
cld
cmp
add
dec
jge
movsl
es
mov
pop
push
mov
call
cmp
int3
adc
mov
int
sub
and
mov
jle
mov
cmp
dec
cmp
fisubl
mov
mov
loop
test
jns
xor
loop
dec
push
jl
jge
call
xor
mov
jge
sbb
outsb
adc
dec
add
xchg
out
sub
fsubl
lret
pop
push
xor
adc
shr
in
aaa
sbb
inc
mov
loop
movsl
xor
inc
cli
xor
das
outsl
pop
scas
loope
int
and
mov
jge
jb
and
enter
jae
adc
in
ja
xchg
in
add
sub
jb
shr
inc
mov
fstpl
add
mov
push
jne
je
stos
rorb
in
and
pop
inc
jno
aaa
sarl
test
into
cmp
add
mov
fdivs
mov
and
cs
mov
rolb
pushf
jno
paddusw
dec
push
pop
mov
adc
jle
xchg
leave
pop
jecxz
rorb
stos
pop
into
fnstsw
dec
dec
out
push
pop
push
mov
fnstsw
cltd
out
xchg
sti
mov
popa
cmp
jnp
mov
sbb
push
pop
neg
int
or
inc
push
pushf
mov
insl
or
iret
xor
hlt
or
dec
in
and
xlat
sub
lahf
imul
ret
stos
or
mov
push
add
and
jae
test
imul
jp
sub
xchg
lods
cmp
add
push
add
faddl
mov
xchg
test
pop
out
dec
sbb
or
mov
xor
xor
mov
sub
jne
jge
iret
lahf
pop
orl
loopne
mov
mov
push
ficoml
outsb
arpl
jmp
dec
aam
push
fimuls
addl
and
push
lds
sahf
push
dec
xchg
js
mov
and
push
loop
add
ror
sub
xlat
stos
pop
push
mov
mov
or
stc
jne
adc
sub
mov
jge
mov
je
loopne
cmc
frstor
xor
loope
mov
clc
std
xor
jmp
and
dec
sahf
cmp
inc
adc
sahf
cmp
add
arpl
cmp
test
mov
adc
in
push
dec
mov
pushf
and
xor
pusha
les
mov
mov
jb
mov
sbb
mov
sub
int
ret
jne
mov
imul
xchg
lret
add
jg
lods
xor
pop
repnz
add
and
es
pop
outsl
mov
dec
mov
jns
add
add
push
scas
fwait
je
adc
mov
xor
enter
and
lods
leave
gs
xchg
jl
nop
mov
icebp
fdivl
mov
sarb
mov
shrl
scas
cmc
ljmp
pop
mov
xor
pop
call
call
bound
jge
mov
test
push
movsb
movsb
mov
push
pushf
movsl
int3
sarb
jo
les
sbb
stc
js
sbb
cmp
and
inc
arpl
ja
mov
sbb
pusha
dec
inc
xchg
loopne
enter
jb
push
cmp
aas
xor
in
rclb
ljmp
lods
sub
aam
pop
pop
sbb
cvtps2pi
xchg
dec
and
dec
cmp
sub
push
adc
adc
pop
pop
jns
push
add
in
mov
mov
cltd
cld
lahf
xchg
enter
sub
idivb
dec
popa
pop
jno
sub
outsl
cmp
notb
sbb
push
and
push
jle
aas
loop
mov
jl
dec
xchg
adc
pop
sbb
adcl
mov
repz
imul
aaa
mov
mulb
ret
jmp
add
ss
cmpsl
mov
mov
add
inc
push
and
cmp
inc
lret
mov
push
pop
popf
cmp
xor
shll
sahf
adc
lds
mov
jecxz
shrb
pop
dec
aaa
repz
gs
mov
mov
xor
mov
mov
scas
push
sbb
xchg
pop
pop
inc
das
add
mov
lea
mov
push
and
xchg
xchg
pop
out
or
push
shll
and
inc
and
sub
mov
pop
mov
mov
daa
xor
xor
sbbb
in
adc
or
push
icebp
gs
add
test
clc
jbe
addb
inc
out
mov
repnz
shrb
mov
cmc
sbb
mov
shr
mov
leave
ds
dec
out
shr
test
mull
xor
shll
data16
jae
push
jo
ds
ljmp
jl
arpl
pop
add
popf
push
les
out
cld
icebp
das
dec
pop
push
dec
inc
cmp
ja
adc
negl
xchg
mov
pushf
testb
dec
scas
xchg
in
lret
mov
movq
mov
xor
imul
dec
xchg
pop
xchg
pop
push
or
cmp
mov
inc
imul
pop
fs
inc
sub
jmp
mov
scas
sub
mov
hlt
shlb
adc
mov
sub
mov
outsb
sub
mov
sbb
movsb
daa
loopne
pusha
dec
idiv
xlat
orl
cmp
pop
pop
rcrl
or
xchg
ret
mov
or
rorl
pop
mov
out
les
cwtl
popa
inc
scas
aaa
adc
int3
pushf
shll
xchg
add
inc
xchg
jns
es
je
sbb
and
inc
pop
je
sub
out
pop
inc
add
cmove
fsubrs
addr16
fwait
out
pop
iret
dec
inc
and
add
adc
lret
push
out
push
mov
unpckhps
sbb
sbb
das
mov
jle
div
bound
cltd
mov
mov
and
mov
push
cmpsl
push
enter
jbe
call
inc
rcrl
push
ret
mov
adc
jnp
nop
pop
sbb
lret
ljmp
addl
mov
mov
or
mov
cli
push
xchg
mov
jle
movsb
xor
sub
or
hlt
and
lea
or
add
hlt
and
pop
or
sarl
cwtl
outsl
ss
adc
call
dec
mov
push
mov
mov
xchg
mov
repz
push
insl
cmp
cmpsb
ret
push
test
or
fwait
sbb
sti
hlt
or
inc
xchg
popf
inc
add
mov
push
mov
pop
and
into
outsl
and
scas
adc
rcrl
and
dec
cmp
arpl
repnz
repz
test
int
stos
rcr
cwtl
mov
add
jb
inc
mov
outsl
mov
mov
pusha
rcll
mov
lret
movsb
add
push
cmpsb
cmpsl
pop
es
mov
fdivrl
xor
cld
subl
pop
sbb
rcrb
aad
pop
js
rorl
or
insl
inc
push
mov
push
jmp
sahf
data16
ret
int
movb
inc
test
xor
je
popa
pop
frstor
stc
push
lock
mov
out
lahf
xor
and
mov
popa
mov
xchg
sub
ret
jo
sub
cmp
xor
je
push
mov
add
fcomps
jno
ss
fldenv
scas
and
mov
dec
imul
cltd
cmc
sub
xchg
loope,pt
shll
sbb
stos
cmp
pop
arpl
into
dec
bound
jp
mov
iret
ja
dec
xor
push
inc
or
mov
adc
rcrw
xchg
loopne
sub
inc
xchg
jb
lods
lods
call
adc
ds
xchg
lods
sub
stc
vmwrite
mulb
repnz
or
gs
sub
loopne
xor
std
cli
outsl
xor
push
movlps
push
mov
clc
icebp
fistps
imul
dec
insb
push
push
cmp
sbb
ljmp
dec
push
std
ljmp
xchg
pusha
pop
test
mov
xchg
jmp
ss
subl
data16
cmpsb
push
in
jns
cmp
jmp
clc
inc
cld
and
or
jg
shll
mov
notb
mov
inc
or
mov
mov
xor
pop
ret
arpl
mov
out
sub
movsb
insl
mov
clc
int3
fs
int
dec
insb
mov
sbb
fwait
ljmp
xchg
inc
pop
mov
scas
and
cmp
xchg
mov
test
cwtl
xchg
and
mov
sbb
addr16
andb
sbb
cmp
sti
lret
and
push
xchg
gs
stos
and
fwait
push
sub
mov
mov
jb
repz
mov
xor
mov
mov
popf
shlb
dec
cltd
adc
push
cmpsl
hlt
iret
push
pop
insl
daa
dec
fildll
push
insl
std
shl
lcall
mov
aam
dec
jge
push
enter
cltd
or
lcall
cltd
iret
roll
push
xor
push
xchg
into
pop
je
push
and
cmc
push
adc
xlat
in
rolb
mov
call
xor
loop
sar
test
mov
cmp
mov
neg
push
push
mov
popa
jns
mov
lahf
ret
rcr
outsl
push
xorl
sbb
and
ficoml
std
xchg
rclb
call
mov
add
xchg
fs
lods
sub
lret
push
pushf
shl
dec
test
jbe
add
sbb
imul
mov
push
or
movsl
fdivrl
add
in
sar
dec
mov
mov
adc
push
inc
mov
jle
sub
dec
dec
ret
jne
mov
lods
mov
sub
rcr
sahf
push
add
mov
mov
call
xchg
cmp
jmp
xchg
in
rep
xor
cmp
cmp
jg
inc
sbb
pusha
fs
cmpsb
cmp
sarl
jl
movl
jbe
cwtl
stos
jge
sbb
imul
mov
push
or
push
into
ror
mov
test
jmp
sahf
mov
adc
adc
mov
adc
aas
and
xor
dec
xchg
dec
cmp
jl
les
push
push
mov
gs
pop
sarl
lock
push
pop
out
mov
adc
xchg
insl
adc
jo
cmp
int3
pop
out
lret
mov
mov
mov
icebp
dec
push
xor
inc
mov
and
add
push
shlb
leave
cli
test
fcmovnb
mov
fnsave
and
lock
mov
adc
pop
mov
in
sbb
mov
mov
enter
mov
cmp
add
cs
jbe
outsl
loopne
mov
sub
push
adc
mov
mov
sub
addr16
mov
mov
push
into
xchg
push
mov
dec
xchg
ss
insb
mov
imul
add
mov
fimull
addl
jmp
push
dec
sub
xchg
jns
lahf
sbb
pop
addr16
push
cltd
loope
xor
xchg
call
stc
and
or
mov
imulb
sahf
repnz
imull
add
ss
push
iret
cmp
push
mov
shl
and
lods
and
loope
push
divl
sub
popf
or
test
push
push
add
push
dec
mov
jbe
test
lds
cli
mov
into
and
xchg
lahf
nop
lea
popl
mov
into
insb
ret
add
sahf
nop
add
cs
sub
ret
mov
mov
and
mov
pop
xchg
inc
sub
inc
push
scas
mov
lds
out
pop
ljmp
pop
je
jae
add
cmpsb
xchg
movl
shll
jge
push
cvtdq2ps
fldcw
xor
fisubrl
mov
sti
mov
add
xchg
jne
ret
repz
adc
enter
aaa
ss
pop
push
daa
jp
pop
inc
inc
sarb
mov
jbe
loop
inc
inc
int
mov
rclb
loopne
enter
mov
inc
ds
inc
jecxz
pop
dec
sahf
shlb
sbb
push
and
mov
pop
aas
dec
xchg
inc
or
push
mov
jle
mov
and
push
inc
negb
inc
lcall
pop
dec
cli
out
mov
sub
popf
push
pop
mov
clc
imul
fbld
insl
test
imul
adc
push
mov
lods
rclb
inc
cmc
or
movnti
dec
pop
xlat
xchg
sub
xchg
pop
ds
inc
fcom
cmpsl
jg
mov
enter
xor
aam
stc
in
negb
push
push
mov
or
out
dec
add
sub
enter
pop
rcll
and
ljmp
scas
mov
cs
or
gs
mov
int3
or
push
dec
lods
fldcw
test
cwtl
in
imul
mov
ret
scas
nop
add
insl
xchg
adc
mov
push
stos
add
sbb
les
xchg
sub
vcomiss
xchg
jecxz
mov
shrb
ret
ds
cs
insb
or
repz
cli
repz
dec
aad
mov
and
ds
rol
fimuls
and
xor
add
sbb
mov
push
xor
inc
push
out
xchg
test
pop
dec
jg
push
fcoms
aaa
dec
arpl
or
dec
xchg
push
mov
mov
xor
repnz
sub
sbbl
pop
mov
bound
jmp
cli
scas
and
fucom
cmpsl
fwait
stos
mov
stc
sub
mov
and
pushf
xor
lds
lock
lret
pop
jb
mov
repz
push
dec
ja
loop
pop
hlt
inc
xchg
es
sbb
dec
and
push
lret
xlat
pop
fs
lret
pushl
pop
int
pop
arpl
test
push
sbb
pop
fs
jg
inc
into
leave
rcll
hlt
clc
gs
rclb
nop
xor
stos
das
insb
adc
sbb
lret
fcmovne
subl
xchg
add
aas
ja
inc
test
inc
sarl
sahf
lret
mov
and
mov
jne
fnsave
push
add
enter
cli
mov
test
sbbl
outsl
xor
fldenv
jo
push
mov
pop
sahf
je
rclb
es
incl
popa
pushf
adc
mov
mov
pop
inc
mov
bound
push
and
sbb
shll
or
and
xor
arpl
inc
aam
rsqrtps
sub
in
sub
popf
movsl
fdivp
mov
je
mov
fs
repnz
or
pusha
cwtl
sbb
aam
push
outsl
rcr
insl
push
and
and
fwait
xor
xchg
add
lea
adc
fistpl
add
flds
sub
dec
sub
lock
jmp
out
mov
adc
or
into
sub
jnp
ljmp
adc
cmp
adc
pushf
add
je
and
repz
aas
mov
push
pop
popa
jle
mov
cltd
xchg
mov
mov
cltd
ss
xor
dec
sbb
pop
dec
push
test
shrl
mov
inc
cli
xor
shll
or
leave
fwait
imul
das
xchg
xor
ja
nop
jb
ds
lcall
mov
cmpsb
jns
cmp
pop
bound
jle
loop
into
daa
cwtl
sub
es
loope
stc
mov
xlat
incl
out
pop
mov
add
xchg
or
dec
fdivl
sub
dec
orl
xchg
adc
mov
inc
push
shlb
mov
dec
jae
jae
sub
cmp
dec
cmp
jmp
imulb
xorl
mov
mov
add
out
cmp
rorb
insl
je
scas
repnz
inc
leave
out
xchg
sub
lahf
dec
dec
je
mov
fwait
or
pop
add
push
out
xor
lods
sbb
push
mov
pop
arpl
add
sahf
fldl
jmp
pushw
xchg
inc
and
cmp
xor
sub
push
cld
or
imul
jns
mov
aad
fcmovu
pop
fwait
hlt
dec
mov
gs
mov
dec
ret
leave
push
movsl
imul
notl
mov
push
in
sbb
dec
adc
addr16
lock
std
xchg
fbstp
mov
aas
loope
adc
mov
adc
std
gs
movsb
shlb
jle
jg
push
add
stc
cli
aaa
inc
clc
mov
scas
lock
gs
insl
loopne
push
inc
xchg
cli
xchg
rcll
movsl
int3
int3
pushf
cmpsl
or
jg
xchg
iret
pop
or
dec
xchg
push
xchg
cli
inc
pop
je
int3
mov
cmp
push
sarb
negb
mov
les
fstl
sbb
push
xchg
cmpsl
cmc
popf
mov
std
js
xor
cltd
lock
xchg
rcr
mov
xchg
in
xorl
xor
jge
and
xchg
push
xor
lea
pushf
imul
jmp
stos
setnp
sbb
push
lds
inc
shl
adc
push
jb
mov
ja
mov
in
pop
inc
sbb
icebp
sbb
pop
lahf
push
sbb
pop
and
out
je
mov
jbe
cmp
mov
sub
xchg
push
push
in
and
test
cltd
lock
push
inc
shlb
sbb
addb
das
push
dec
mov
mov
pop
scas
scas
cmp
push
andl
xchg
insb
jl
push
stc
sti
jl
insb
mov
fsubrp
add
or
pop
push
int3
call
pop
insl
cmp
mov
inc
mov
and
xchg
push
jns
inc
shrl
cs
pushf
add
xor
jns
adc
jnp
fdivrs
adc
mov
xchg
lods
lea
scas
out
push
enter
add
sbb
jnp
nop
jp
cmp
pop
add
lret
jbe
jb
inc
mov
popa
or
lcall
jb
sbb
push
inc
ror
xor
adc
push
sub
xchg
insb
adc
cmp
mov
xchg
and
stos
lret
and
jno
and
movsb
push
sbb
ret
call
in
xlat
dec
mov
mov
jb
push
popa
xchg
or
mov
cli
cld
cmp
cmp
or
std
loope
add
mov
pop
fscale
inc
pushf
mov
es
sub
xor
enter
push
xor
xor
fstl
sub
mov
xor
in
mov
mov
jnp
insb
cmp
push
xchg
dec
mov
gs
adc
add
andl
xchg
loopne
mov
or
icebp
je
test
loopne
and
mov
xor
cmp
stos
cltd
jb
pop
nop
ficoms
cmpb
or
imul
pop
sbb
and
lret
xchg
ja
mov
xchg
lea
cmpsl
fildll
add
addr16
jbe
pop
aas
ret
mov
ds
pop
sub
repnz
cltd
jmp
xchg
dec
int
inc
inc
clc
fstpt
bound
sti
test
xor
lock
arpl
inc
jnp
out
in
inc
cmpsb
or
data16
call
pop
or
rclb
add
or
inc
sub
fisubs
mov
enter
mov
into
imul
in
dec
loopne
mov
sbb
xor
les
or
jae
sub
rclb
xchg
and
mov
push
push
xchg
jno
jae
aas
add
cmpsl
adc
mov
mov
es
sub
mov
mov
or
imul
dec
mov
sbb
pop
in
pop
fsubrs
sbb
add
xchg
dec
into
jle
insl
dec
sbb
stos
or
loop
insl
sub
mov
out
dec
lods
push
xor
cmp
aas
sub
repz
movb
int
adc
inc
jle
push
jl
mov
xor
iret
sub
mov
jb
movb
ss
mov
and
sbb
fnsave
mov
push
and
cmp
dec
test
outsb
rorb
mov
dec
addr16
mov
pop
insb
sbb
paddsw
rol
in
orb
adc
push
cmpsl
adc
mov
sbb
sar
jle
out
inc
xor
dec
or
xor
pusha
mov
xchg
mov
jne
aaa
inc
dec
mov
pop
imul
dec
sbb
stos
cmpsb
and
and
mov
jae
cmp
lods
lock
mov
test
repnz
pop
mov
data16
or
addb
les
inc
add
xchg
dec
enter
pop
dec
cmpsb
test
pop
sbb
test
jnp
pop
test
fcompl
les
dec
loopne
test
sub
movsl
mov
test
aad
push
adc
popa
mov
dec
inc
aas
adc
into
mov
mov
adc
std
sub
jne
jl
popa
push
enter
addl
in
mov
mov
test
scas
mov
push
rcll
push
adc
mov
pop
dec
adc
xchg
jmp
jle
out
add
xchg
rep
in
jecxz
sub
aad
mov
inc
adc
fwait
push
jo,pt
sub
xor
shrd
lds
pushf
lea
bound
jge
out
inc
xchg
movsl
es
add
scas
dec
clc
mov
add
hlt
imul
pop
xchg
inc
adc
stc
mov
and
arpl
mov
popf
ljmp
repz
jbe
mov
cmovb
stos
mov
in
cwtl
lahf
cmpsb
push
jp
daa
add
aam
pop
iret
ret
inc
jb
and
jae
add
dec
fisubrl
fwait
pop
popa
push
mov
jmp
inc
push
hlt
rorl
sti
cwtl
fldt
sub
ljmp
and
jp
mov
dec
jne
ljmp
lret
and
push
or
sub
enter
mov
loop
sarb
xchg
mov
cmp
xchg
jle
jb
ljmp
sbb
test
pop
hlt
mov
loopne
xlat
inc
loopne
in
ja
in
jbe
out
cmc
mov
mov
psubusb
and
fs
scas
pop
and
jb
rolb
xor
sbbl
je
out
mov
add
fistpl
dec
lods
inc
mov
dec
loope
std
mov
or
movl
lock
mov
push
sub
jg
jne
ret
or
xchg
mov
insl
dec
sbb
pop
add
xchg
ds
lock
aas
ror
mov
cmp
add
or
or
pop
cmp
pop
xlat
stos
cli
dec
icebp
adc
call
xlat
mov
pop
test
xor
sub
jne
push
lods
fcmovbe
jmp
ss
out
push
cltd
pop
sbbl
dec
and
imul
movsb
in
xor
dec
mov
cmp
dec
popa
pop
inc
pop
lods
aam
jnp
pop
and
lea
sbb
popa
pushf
roll
out
loopne
xchg
adc
rcrb
mov
and
xchg
scas
ljmp
sub
int
repz
jne
popa
rolb
stos
jmp
xchg
loop
insb
jg
push
aad
iret
push
cmp
mov
cli
es
out
insb
jno
mov
aam
addr16
adc
pop
test
mov
push
mov
adc
aaa
and
cmp
movsl
mov
enter
add
sbb
insb
pusha
out
pop
push
inc
mov
push
sti
fbld
sahf
jmp
hlt
jle
push
test
stos
cld
sarl
jle
inc
pop
imulb
ja
pop
sub
rcr
push
inc
mov
pushf
dec
pop
sbb
push
lea
mov
outsl
cltd
jmp
mov
fimuls
int
or
mov
or
ss
out
dec
aad
outsl
jmp
inc
jb
fs
fucomi
xor
inc
pop
cmp
or
jns
add
icebp
mov
fwait
outsb
inc
sbb
imul
outsl
xor
cmp
dec
addr16
pop
out
lods
jb
mov
adc
adc
lcall
mov
fcoms
and
fimuls
inc
insl
mov
icebp
ss
xor
lahf
cmp
cld
ret
mov
cmp
cltd
mov
mov
xor
sub
movsl
and
mov
inc
mov
pop
and
sub
mov
repz
pop
inc
jl
and
fsubrl
mov
sbb
jo
cmp
gs
dec
es
in
shlb
jecxz
out
imul
dec
dec
add
and
mov
adc
je
pop
push
mov
jbe
subb
inc
lret
sub
cmp
test
lods
dec
aad
int3
call
scas
inc
push
pop
push
aad
pop
icebp
outsl
cmp
and
cmp
cmp
fs
outsl
inc
or
test
imul
pop
push
push
cs
repz
jae
xchg
mull
push
xor
loop
lods
test
sarb
fdivrp
jmp
push
jle
xor
sbb
fmull
or
cld
lcall
scas
cmpsl
daa
jo
fmul
inc
cmpsb
xor
pop
mov
xlat
frstor
arpl
mov
cwtl
rorl
lret
test
ret
push
push
push
dec
sub
xchg
fs
dec
loop
call
jmp
out
sbb
mov
add
and
or
push
sbb
mov
inc
xchg
testb
pop
cs
fs
fmull
cmp
push
xchg
mov
fs
call
pop
xor
jns
clc
ljmp
jmp
shl
addl
xchg
ror
mov
ljmp
fstpt
scas
push
lea
dec
addr16
xor
cwtl
sbb
les
cmp
jl
xor
es
mov
lods
sub
adc
xchg
mov
sub
or
fcomp
xchg
rcrb
xlat
and
cltd
orb
jo
rorb
sub
pop
xchg
cmp
decl
push
aad
cwtl
mov
jb
inc
mov
cmp
pop
inc
jnp
sbb
jg
and
xor
ret
imulb
and
and
ret
popa
push
xchg
cmp
test
push
cmpsl
jno
shrb
mov
rcrb
jle
and
xchg
xchg
xor
testb
lock
sarb
mov
in
inc
daa
and
mov
inc
or
xchg
ss
sbb
push
push
jb,pn
rcr
jmp
out
or
std
pop
jge
pop
movsb
stos
xchg
xlat
xor
mov
mov
scas
aaa
out
adc
inc
dec
int
sub
adc
ret
mov
mov
dec
mov
loope
jmp
lret
int
pop
cmp
test
faddl
arpl
xchg
or
jg
push
or
mov
shlb
add
aam
rol
in
int
add
jmp
stos
pop
gs
xor
insl
inc
and
pop
xor
mov
ds
jle
xchg
adc
cltd
mov
dec
rol
in
fstps
sbb
add
push
aas
xlat
or
call
jne
and
lods
mov
xchg
lods
push
adc
icebp
adc
in
lock
cwtl
dec
shr
inc
sub
jb
jle
push
int
mov
sub
add
mov
jl
push
stc
inc
fidivrs
hlt
inc
mov
xor
mov
mov
adc
movsl
xchg
scas
inc
xchg
pop
or
xor
adc
enter
add
pop
pop
adc
je
adc
sahf
aaa
add
add
mov
loopne
fnstcw
dec
out
std
inc
cmp
ja
cmc
xor
adc
add
pop
popf
popf
xchg
aaa
enter
cmp
adc
xchg
jge
mov
mov
and
adc
in
lods
rorb
pop
gs
inc
cld
in
rcl
sbb
jg
sbb
movsl
cmp
movsb
in
sarb
in
dec
aaa
in
call
fmuls
pop
jmp
adc
pop
ljmp
gs
mov
repz
jns
aad
mov
test
in
inc
ja
imul
inc
pop
adc
push
pop
xchg
mov
scas
sub
mov
add
lahf
lock
pop
mov
subl
ret
dec
in
push
jne
pop
les
adc
xchg
scas
push
iret
pop
lods
mov
jl
popa
aam
inc
out
jp
xchg
pushf
pop
adc
dec
sub
call
add
cmc
mov
mov
sti
sti
cmpsl
cld
xchg
les
mov
out
pop
push
xchg
mov
fs
or
aaa
sub
inc
fwait
shll
in
xorb
aad
push
xor
jne
mov
push
shll
jmp
insl
shlb
pop
xchg
pop
pop
aas
insb
orl
decb
fs
ljmp
or
scas
sub
xchg
or
lock
lods
mov
xchg
pushf
or
xchg
sbb
fisttps
lret
ret
mov
mov
repz
ficoml
sub
pop
cmpsb
enter
push
out
cmpb
pop
cmp
insb
shr
push
sahf
int3
xchg
push
sub
or
dec
cli
jo
or
jb
mov
sbb
inc
mov
mov
cld
or
add
xchg
or
subb
lods
cmp
fildl
enter
jb,pt
sarb
test
sub
adc
cli
xor
sbb
xchg
sbbb
mov
loope
mov
mov
fsub
pusha
rorl
jnp
push
lahf
movsl
imul
inc
sbbl
repnz
sbb
fwait
adc
loope
xor
out
dec
into
sub
movsb
pushl
mov
mov
aas
mov
lods
xchg
mov
inc
sbb
stc
push
cmpsb
or
add
flds
in
pop
xchg
push
sub
sub
fbld
pop
mov
mov
mov
inc
pop
push
in
pop
mov
adc
and
sub
imull
ss
outsl
movsb
xchg
mov
stos
or
sub
fnstcw
mov
ror
xchg
std
sti
cld
cmp
jl
out
inc
add
enter
and
add
jl
mov
mov
fistps
jnp
jae
and
repnz
sahf
or
test
les
gs
xchg
push
das
inc
xchg
orb
and
fldenv
dec
inc
fs
lcall
jge,pn
insl
dec
repnz
lret
out
rcrb
mov
dec
sbb
test
mov
cmc
inc
testl
dec
mov
push
dec
adc
roll
dec
lahf
insl
pushf
scas
adc
dec
fimull
pop
push
inc
out
or
stos
mov
and
cltd
rcll
lahf
or
sahf
mov
jnp
add
in
les
pop
pop
xor
fcomip
inc
dec
stos
inc
data16
rclb
xchg
mov
xchg
in
xchg
mov
mov
ljmp
dec
test
cmpsl
out
push
dec
cmpsl
xchg
cmp
mov
stc
or
sub
or
push
xchg
xchg
fbstp
repz
decb
in
pop
dec
les
push
cmpb
mov
xchg
and
pop
mov
pop
clc
insb
ds
dec
rcr
inc
sti
outsl
and
ljmp
jmp
aaa
imul
adc
das
popa
adc
hlt
dec
inc
mov
jns
jecxz
push
cwtl
pop
sbb
iret
aaa
inc
fmulp
sbb
xchg
lret
loopne
bnd
loope
xchg
jmp
jns
mov
andl
dec
mov
jb
add
mov
popf
mov
shll
loope
ror
pop
sub
xor
testb
mov
mov
nop
aas
roll
xor
dec
nop
dec
push
sub
mov
lret
jb
hlt
dec
pop
and
jo
jmp
jp
mov
inc
shlb
mov
mov
sbb
jmp
add
data16
movsl
hlt
sub
fs
shl
out
ss
aas
add
xchg
sub
cmpsl
stos
or
sbb
mov
inc
dec
xchg
pop
sub
je
ss
std
add
roll
push
sub
sbb
and
dec
lods
jns
and
out
push
enter
jg
xchg
cmp
mov
cmp
add
mov
xacquire
out
clc
push
insb
mov
stos
mov
mov
rcrl
leave
dec
push
leave
add
test
mov
cs
sbb
cmp
call
popa
aaa
hlt
in
push
or
lods
sbb
pushf
mov
rcr
cmpb
add
pop
xchg
lea
fmuls
jp
xchg
mov
or
ja
jne
xchg
xchg
sahf
adc
int3
xor
mov
leave
jle
xchg
mov
pop
mov
cli
add
sub
jno
xchg
insb
cmp
mov
imul
rcrl
imul
jecxz
inc
iret
xchg
dec
and
mov
into
sub
xchg
cmp
lret
inc
cmp
and
push
and
jle
pop
nop
pop
pop
dec
stos
sub
ret
xchg
incb
push
xchg
das
outsb
outsb
mov
inc
add
dec
addr16
sbb
mov
leave
loop
add
mov
sahf
or
mov
inc
rclb
xor
call
push
scas
imul
sub
fidivl
popf
xchg
push
ljmp
mov
clc
or
jae
cmp
pop
enter
outsl
mov
sub
cld
adc
lds
pop
sbb
icebp
and
push
ret
and
mov
repnz
cmpsb
pushl
pop
loopne
daa
jns
xlat
cmpsl
fsts
sub
leave
jecxz
lret
jb
pop
dec
int
daa
sbb
push
and
data16
adc
lock
inc
scas
in
out
or
jb
dec
dec
jle
pushf
cmp
movsl
scas
mov
ret
sub
jge
sbbl
and
push
outsb
sbb
in
fimull
fmuls
rcrb
nop
rcr
pop
cwtl
dec
push
cmpsb
pop
push
add
addl
or
pop
jp
clc
mov
test
push
loop
fmuls
mov
pop
push
data16
fdivl
sbb
movsb
andl
jmp
xor
mov
push
subl
cmp
cltd
lcall
das
xor
or
mov
sub
xchg
mov
and
loope
stos
faddp
inc
loop
xchg
jecxz
sti
jae
push
cmp
xor
out
out
movsb
fcmovne
hlt
cmp
lds
cmp
inc
loopne
xor
outsb
sbb
push
mov
fstps
cmp
lods
outsb
dec
push
add
bound
dec
dec
sar
xchg
rolb
pushf
pushf
loope
cmp
mov
mov
pusha
sub
inc
pop
divl
cmp
insb
aas
loope
fiaddl
lcall
aam
sub
cwtl
dec
movsb
or
cmpl
in
sub
dec
rclb
imul
pushf
jae
ss
sbb
cltd
ret
stos
add
xor
insl
enter
adc
lret
adc
scas
sub
in
jg
or
mov
ja
sbb
pusha
insl
inc
mov
add
andb
insb
inc
out
xor
popa
loope
push
repnz
into
insb
jmp
mov
push
call
mov
stos
jecxz
fbld
and
jle
ss
jne
dec
xor
popf
fistpll
ja
test
stc
popf
pop
stos
test
imul
and
imul
gs
cmp
pushf
call
jbe
in
mov
and
es
bound
xchg
sti
stos
push
js
jl
pop
in
mov
ss
sub
cwtl
xlat
fs
scas
stos
sbb
push
pop
iret
shll
lods
loope
cs
sahf
sahf
push
cli
sub
push
mov
lods
cwtl
in
sbb
sub
adc
icebp
clc
jl
xor
dec
pop
mov
pop
lock
cmpb
sub
sbb
test
sbb
lret
jae
mov
push
inc
jecxz
ljmp
mov
dec
inc
pusha
inc
pusha
jb
xchg
testl
imul
mov
outsl
xchg
xchg
inc
cltd
into
rorl
sbb
test
push
ficompl
xor
call
cmp
jg
xor
lret
inc
push
mov
leave
je
fwait
inc
mov
scas
mov
mov
xlat
xchg
and
dec
or
into
lahf
call
popf
jmp
aam
outsb
out
rcrb
xor
sub
mov
insl
xchg
pop
js
dec
pop
shl
hlt
int
jns
jle
or
jge
out
pop
test
jecxz
fidivrl
mov
push
movsl
xor
aam
push
jmp
adc
push
add
mov
push
xor
and
jge
fmul
scas
ss
lret
movsb
sub
mov
adcb
shll
push
or
jl
xchg
outsb
and
bound
shll
stos
cmpb
sbb
sub
push
andb
aam
adc
dec
jb
jnp
clc
pop
xor
nop
sub
iret
es
mov
mov
filds
add
imul
jb
inc
cmc
pop
jle
rol
adc
jg
sub
int
flds
add
into
add
pop
mov
push
outsb
stc
xchg
fsubr
dec
lods
jl
icebp
jmp
dec
jmp
dec
cmpb
mov
adc
andb
cmp
fcomps
push
dec
pop
add
jbe
xorb
cmp
in
cmpsb
jne
jns
mov
cmp
mov
inc
rolb
stos
popa
in
push
push
stos
or
repz
xchg
dec
or
rol
fidivrl
test
mov
mov
outsl
call
neg
imul
aam
pop
or
add
pop
dec
mov
lds
sbb
test
and
xlat
mov
fcom
add
push
dec
cmp
and
fidivrl
shlb
shlb
test
sub
pop
cli
or
mov
adc
adcl
lahf
mov
add
jnp
inc
push
iret
std
mov
xor
pop
divl
inc
mov
dec
or
xor
cmp
jbe
sti
mov
aad
shrl
cmp
movsb
sarl
cmp
xchg
dec
sbb
pop
outsl
pop
scas
mov
fstp
loopne
or
jecxz
mov
sbb
loopne
push
or
in
stos
das
pushf
xchg
jno
fsub
cmp
lahf
dec
fsubrl
dec
pop
mov
dec
adc
mov
int
sbb
imul
jg
mov
push
sbb
inc
ds
imull
out
mov
mov
outsl
push
add
mov
cmpsb
jae
and
sbb
mov
shlb
add
adc
rorb
pop
xchg
mov
and
cmp
loop
jg
xor
xchg
les
pop
xor
cld
aaa
imul
jbe
rcr
inc
inc
xchg
jge
push
mov
mov
jge
in
sahf
lret
adc
fbstp
pop
mov
sbb
out
pop
push
stos
mov
sarl
lock
adc
xor
rclb
int3
mov
repz
insl
push
cmpb
lds
adc
cli
insl
loope
fcoms
mov
jb
clc
pop
das
dec
add
lds
lods
lret
ss
mov
push
adc
and
inc
or
rclb
cmpsb
cmp
dec
lds
mov
pop
leave
testl
in
sbbl
test
aam
lcall
push
mov
push
adc
test
dec
test
mov
aad
cmp
negl
lret
in
ret
pop
push
inc
rcl
mov
fcomi
movsl
mov
and
cmpsb
ret
dec
dec
lock
scas
cmp
sti
cltd
out
mov
in
stc
push
out
test
sbb
push
or
and
mov
or
xchg
mov
fucom
push
jp
xor
clc
scas
push
or
push
jl
add
rclb
cmpsb
pusha
js
mov
inc
repz
mov
pop
jge
cmpsl
aam
inc
fstl
rolb
imul
insb
rcrl
mov
int
cmp
daa
test
lock
daa
ror
jo
push
sub
enter
mov
daa
add
ss
mov
sahf
push
popf
jbe
push
dec
add
mov
fdivs
add
dec
push
mov
xor
pusha
xchg
cmpsb
push
mov
insl
rorl
jnp
push
sub
ja
das
shl
jne
fmulp
shlb
lods
mov
dec
repnz
out
testb
mov
xchg
pop
push
push
cmp
in
pusha
and
fnstcw
jns
lods
shrl
repnz
xchg
lea
xor
sbb
test
xlat
scas
fld
mov
xchg
andl
dec
pushl
jns
pop
ja
fwait
shll
or
aam
mov
out
pushf
and
cmpsl
in
jmp
iret
mov
add
int
add
and
arpl
mov
fs
rol
jl
insb
es
aad
cmp
das
loopne
cmp
xchg
rclb
test
dec
sbb
nop
jne
add
or
out
pop
push
test
jl
cmp
arpl
pop
xlat
cmp
movsl
or
addr16
call
icebp
xor
pop
adc
ljmp
mov
nop
dec
adc
mov
jmp
lock
mov
jno
push
push
movsl
xor
mov
and
negb
ss
mov
repnz
mov
iret
dec
jno
stos
fs
icebp
mov
add
int
jmp
filds
cmp
xchg
icebp
sahf
lds
cmp
ljmp
sub
push
mull
lea
cmp
lods
insb
repnz
push
mov
push
aaa
pop
sub
fisubs
into
imul
fbld
loopne
rol
jb
in
int
cli
mov
and
dec
sahf
jecxz
ljmp
cmpsb
adc
jnp
lcall
int
iret
jbe
mov
iret
lods
call
jo
inc
je
pop
sub
pop
push
js
push
shlb
xchg
int
pushf
xchg
pusha
popf
mov
xchg
or
sub
cmpsb
adc
dec
push
daa
dec
lret
ret
cmpsl
and
imul
cmp
cltd
push
outsb
add
push
sbb
andl
fwait
cli
push
mov
sbb
js
inc
jo
or
xor
add
stos
cmp
insl
popa
int
mov
cmpsl
out
cmc
pop
xor
iret
lret
mov
jp
ljmp
push
js
les
inc
stos
pop
push
push
out
jecxz
test
xor
pop
or
cwtl
jb
pop
pop
lds
js
sub
pop
or
add
sbb
add
jecxz
mov
mov
lods
inc
sub
mov
or
push
xchg
outsb
add
add
leave
lods
pusha
xor
add
adc
test
add
xchg
jmp
pop
pop
inc
and
ja
jae
daa
enter
dec
cmp
dec
daa
add
jg
jg
jns
jb
jge
aas
xor
in
jp
lods
inc
xchg
sbbb
lret
push
jg
out
lahf
add
dec
lea
loop
scas
dec
mov
imul
fwait
dec
push
lock
mov
in
jo
testb
mov
in
ss
dec
pusha
xlat
or
lret
jge
jl
inc
push
arpl
pop
loop
inc
stc
jae
clc
adc
or
lea
xchg
push
mov
xchg
inc
pop
xchg
inc
mov
jb
fadd
ja
or
xchg
fs
adc
fistpl
loope
cmp
rcrl
arpl
testl
mov
mov
cmc
xchg
mov
stos
sub
rcll
sbb
out
test
sti
push
incl
or
sbb
dec
push
stos
mov
mov
push
and
push
dec
push
fadds
sbb
sbb
push
jecxz
int
rolb
or
dec
dec
imul
dec
adc
mov
mov
stos
mov
add
jo
lods
mov
stos
mov
adc
xlat
sbb
rolb
cmpsb
mov
cmp
sbb
roll
inc
sub
movsb
sub
dec
les
mov
adc
bound
in
inc
out
ss
lcall
in
inc
mov
cmp
pop
pop
notl
mov
idivb
gs
imul
pusha
mov
sub
movsl
jb
enter
shrb
out
xor
mov
dec
into
out
jne
xchg
mov
mov
insl
popa
negb
push
aaa
inc
jecxz
jne
shll
mov
adc
rclb
mov
inc
push
je
xor
shll
call
ret
aas
dec
xor
xor
push
enter
aad
xchg
test
sbb
inc
jmp
push
pop
pop
xor
push
pushaw
or
adc
inc
dec
sbb
dec
push
popa
add
mov
rolb
or
addr16
xlat
or
xchg
push
gs
clc
popf
addr16
test
mov
and
es
sub
adc
xor
fisttpl
jmp
lret
pop
push
jl
dec
or
mov
clc
push
inc
out
lahf
mov
stc
outsb
repnz
out
jle
js
xchg
mov
jl
in
mov
fwait
dec
dec
ret
sub
dec
pop
dec
test
lds
cmp
stos
pop
and
in
aam
repz
in
int3
in
adc
xchg
pop
fistpl
and
sub
inc
leave
aaa
cmp
ljmp
cli
jnp
mov
adc
inc
sub
xchg
ds
popa
in
and
stos
fdivs
je
push
add
push
scas
decl
mov
and
push
in
jne
notb
mov
mov
xor
mov
cmp
cmpsl
les
xor
mov
popf
inc
scas
std
xlat
or
insb
jp
cmp
lds
fnstenv
inc
push
mov
pop
jnp
dec
dec
imul
xor
stc
in
and
imul
daa
jmp
mov
push
dec
jnp
neg
sub
fiadds
pushf
stos
aad
pop
ja
popa
adc
mov
dec
leave
addr16
mov
or
cmpsb
adc
in
scas
outsl
rcrl
cmp
mov
movsb
xchg
fstp
insb
mov
pop
in
outsb
sarb
and
imul
xor
fs
jo
inc
mov
inc
cmp
cli
popa
inc
mov
cwtl
fsub
push
jl
mov
cltd
cmp
cltd
jb
jbe
push
aad
cmpsb
es
inc
out
mov
icebp
sub
push
mov
sbb
es
dec
movsb
stc
push
movsl
aam
in
test
test
cmp
mov
aaa
bound
loop
bound
nop
mov
cmpsb
cmpsl
jo
mov
cwtl
jmp
jbe
lret
pop
xor
push
jge
adc
mov
lea
jl
stos
dec
push
cwtl
inc
rorl
pop
loope
sub
xchg
sbb
in
iret
sbb
push
or
cmp
xchg
insb
mov
pop
jne
int
rclb
lods
pop
int3
clc
xchg
sub
mov
shlb
and
int
push
add
paddq
mov
stos
das
or
pop
jg
mov
jg
push
xchg
dec
jmp
neg
fmull
push
rcl
icebp
mov
cmp
dec
dec
mov
js
lahf
out
imulb
std
imulb
cmp
mov
mov
in
aas
and
test
xorb
orl
cmpsl
cld
mov
loop
rcll
xchg
cmp
mov
rcr
push
xchg
repnz
sub
imul
jns
or
sbb
cmp
lret
movsl
fsubs
cmp
js
mov
mov
sbb
mov
into
pop
lret
adc
or
jno
lret
and
aad
xor
jno
ja
dec
or
push
sub
adc
dec
inc
call
hlt
sbb
xchg
and
sbb
adcb
mov
dec
xorb
sti
push
movsl
sbb
aam
arpl
push
adc
xlat
pop
dec
mov
mov
jo
data16
test
xchg
lds
lea
lds
adc
mov
insl
jo
xor
jb
push
sbb
fs
jmp
and
mov
dec
sbb
jmp
sub
ja
sbb
jg
je
or
daa
mov
rclb
call
ret
les
insl
std
pop
sbb
sti
jnp
mov
je
push
sub
int
roll
ja
lock
pushf
xchg
mov
popf
insl
mov
or
sub
and
sbb
mov
mov
push
push
int
loope
das
call
popa
mov
ljmp
lahf
xor
mov
out
mov
adc
sbb
loop
clc
mov
cmp
pop
scas
lret
mov
adc
ror
test
enter
xor
in
pcmpgtd
lods
pusha
mov
enter
leave
mov
push
jne
dec
xchg
mov
cli
add
push
pop
dec
cmp
gs
sbb
inc
nop
shl
into
int3
add
xchg
lock
or
pop
movsb
imul
mov
sarb
mov
mov
repz
xchg
pop
mov
add
sub
inc
lea
incb
lods
push
in
ja
fdivrs
ds
das
add
cmc
or
out
jmp
in
and
pop
xor
aaa
les
or
adc
loope
sub
ret
jne
pop
pop
in
mov
xor
test
push
movsl
fcos
mov
jno
icebp
mov
jbe
test
lret
movsl
out
xor
int3
jo
test
jne
mov
stos
mov
popf
cltd
pop
xchg
push
sbb
push
fistps
inc
shlb
sbb
jp
jnp
gs
andl
int
push
into
inc
lock
imul
jle
cli
sbb
loopne,pn
mov
sub
cmpsl
ret
cwtl
fwait
xchg
dec
pop
jnp
repz
add
sub
dec
inc
fists
lods
adc
xchg
and
mov
ret
xor
sbb
movsl
and
push
pop
and
mov
xor
adcl
movsb
stos
pop
in
inc
test
les
call
adc
dec
cmp
rclb
xor
stos
jmp
sbbb
out
sti
add
add
lret
nop
das
hlt
cmp
fstps
push
cmp
test
daa
inc
movsb
jbe
mov
repnz
or
ret
loope
fidivrs
dec
lahf
test
and
jno
dec
test
dec
or
mov
in
inc
or
add
stos
je
pop
push
pushf
lcall
scas
out
movsb
adc
ljmp
lahf
andb
xor
ret
movsb
xor
jb
ficoml
popa
insl
jbe
fisttps
popa
push
subb
loope
ret
leave
movl
pop
pop
or
add
es
ds
notl
add
dec
addl
mov
cmp
mov
ret
xchg
and
inc
into
and
ja
mov
mov
add
push
or
xchg
fisubl
lahf
pop
repnz
aaa
sub
ret
lea
pop
enter
xchg
adc
cwtl
xor
in
adc
jbe
movsl
dec
pop
xor
inc
inc
les
in
insl
jg
mov
mov
pop
lea
dec
lret
and
scas
mov
pusha
stos
addr16
out
add
sbb
adcl
std
cwtl
daa
out
hlt
les
or
dec
scas
rorl
aas
scas
cmp
mov
in
orb
enter
fwait
lock
xor
in
and
inc
outsl
ja
das
pop
mov
cs
add
mov
pop
cmp
inc
sub
push
fwait
pop
fldcw
aam
inc
fxch
pop
mov
fisubs
xchg
mov
fbstp
shll
mov
rorb
xor
fstps
aaa
adc
push
je
lods
jno
xchg
fs
inc
xor
add
jno
call
inc
dec
cltd
cmp
pop
sub
push
pop
imul
aaa
pop
addr16
insl
dec
mov
addr16
mov
mov
aas
push
mov
ljmp
mov
or
int3
jg
and
movsl
jmp
sbb
lret
clc
mov
inc
mov
ss
pop
daa
mov
fdivl
mov
pop
jmp
push
mov
arpl
out
jg
inc
maskmovq
idivl
cmpb
lock
dec
insb
ficoms
aam
pop
cmpsb
push
out
add
enter
push
mov
push
push
and
xchg
jne
and
xchg
aas
fstps
aad
jmp
mov
cmp
push
cmc
and
xor
xchg
sarl
fmull
ret
sub
out
add
jmp
ja
adc
cmpsb
jb
loope
and
xchg
cmp
fimuls
cmp
cmpsl
dec
cmp
or
loopne
sbb
pop
std
jmp
mov
mov
stos
sarb
imul
mov
fld
and
lock
dec
xchg
ljmp
push
pop
je
arpl
add
and
sub
adc
fcomip
cmc
fldl
add
or
xchg
loope
mov
lret
lea
cmpsb
aad
jne
mov
and
test
das
dec
push
out
nop
repz
cmp
mov
pop
pop
gs
je
pop
xor
push
pop
mov
pop
roll
lock
dec
mov
cld
es
mov
mov
inc
cmpsl
rcll
sbb
aaa
inc
mov
ss
fcmovbe
subb
xchg
jmp
mov
add
jnp
xor
stos
jbe
xor
mov
movl
jle
pop
jns
adc
pop
ljmp
repnz
test
or
js
out
adc
pop
in
adc
adc
iret
sub
or
pop
lea
daa
mov
and
dec
or
test
repz
xchg
ret
arpl
cmpsl
mov
mov
mov
fsubs
movsb
mov
mov
subb
int
add
testl
dec
fldl
dec
addr16
push
xor
jge
out
mov
mov
mov
fdivs
mov
mov
xchg
pop
push
mov
daa
cmpsl
jno
adc
push
mov
sbb
in
loopne
rcr
sbb
pop
into
xor
pop
mov
fsubrs
cmp
addb
and
inc
fisubs
mov
in
stos
mov
xor
pop
inc
dec
push
cs
and
shlb
roll
dec
das
mov
aas
pop
sahf
push
mov
ss
and
mov
xor
out
fiadds
and
mov
push
outsb
xchg
pop
ss
sarl
jno
fdivs
adc
sub
pop
jae
adc
roll
mov
xor
jae
pop
jo
lret
mov
mov
stc
call
aaa
sub
push
dec
xor
mov
push
aaa
fs
mov
mov
packuswb
cwtl
test
jg
xlat
cmp
push
jmp
out
pop
mov
lahf
pop
mov
sub
cli
mov
cmp
or
aas
test
xchg
adc
jns
inc
or
add
push
push
test
mov
ja
cmp
lcall
les
pop
jno
add
test
shll
cld
popf
movsb
movsl
pusha
in
push
mov
or
test
repz
bound
imul
fisttpll
cmp
ljmp
xchg
xchg
xor
jle
xor
adc
test
insl
xor
lret
or
dec
call
roll
lds
pop
inc
sub
shlb
mov
cmp
insl
ja
cmpl
in
or
fs
xor
sbb
dec
jmp
clc
or
pop
ljmp
jge,pn
popf
jge
push
jle
mov
lret
sbb
pushf
andw
pop
inc
push
xchg
fisubl
test
dec
sub
inc
movsb
and
mov
es
stc
ficoms
out
loopne
xlat
decl
add
add
pushf
cmp
addr16
adc
js
sbb
add
xchg
sub
aas
pusha
inc
push
add
push
and
mov
mov
and
fidivs
subl
mov
mov
lods
pop
mov
call
mulb
pop
aaa
jne
push
sbb
fmull
out
ja
mov
lods
pop
pop
inc
pop
lcall
mov
call
mov
mov
lret
adcl
test
insb
push
cmpsb
xor
mov
mov
push
pop
insb
das
xchg
mov
xor
and
movsl
mov
cmp
clc
popf
in
test
dec
jae
adc
xor
scas
dec
insb
add
dec
int
inc
add
loop
sub
xor
imul
push
lock
sbb
loopne
popa
jmp
out
adc
adc
test
into
push
lods
sub
mov
or
jne
and
arpl
inc
mov
jo
addr16
cmp
in
mov
ds
add
push
pop
ss
lcall
cmp
jo
je
imul
inc
xor
jns
insb
cmp
ret
shlb
fisubrl
mov
in
lret
dec
rdmsr
push
div
push
sub
test
push
out
jle
lret
fstl
mov
aad
pop
sbb
fwait
repz
mov
dec
xchg
les
mov
mov
push
cmp
gs
push
loope
outsb
fs
aam
stos
push
add
pop
jns
and
lock
les
mov
sub
lds
sub
cmp
insl
ja
sub
jmp
inc
sub
adc
aas
notl
movsb
testb
ficoms
lods
mov
mov
cmpsl
and
cmp
fistpll
sahf
pop
stc
sub
loopne
mov
xchg
aas
cmc
push
mov
xorb
mov
fwait
in
push
jle
out
pop
pop
jle
inc
fimuls
cwtl
loope
int3
or
sahf
jno
push
sbb
adc
clc
push
test
pop
sub
and
mov
add
andb
out
mov
outsb
aad
ret
push
mov
out
cmc
test
gs
jnp
scas
mov
sahf
xor
hlt
clc
adc
es
nop
test
jne
lahf
jae
lret
aad
orb
arpl
sub
jno
inc
jne
mov
lahf
mov
jnp
jbe
test
sub
sbbl
fistpll
sti
stos
push
xlat
mov
in
test
cwtl
mov
mov
or
pop
push
cmp
mov
movsb
stos
mov
mov
push
lock
fcomi
sbb
xchg
xchg
je
imul
ss
gs
sbb
iret
lret
out
lret
cli
mov
push
js
ss
and
adcl
xchg
xor
pop
movsl
pusha
movsb
inc
xchg
sub
daa
sarl
pop
popa
xchg
out
xor
pop
scas
or
cmp
fildll
pop
into
int3
subb
add
xor
pop
pop
push
in
push
insb
xchg
rclb
or
mov
ret
xchg
xchg
scas
pop
or
je
scas
inc
gs
sub
cmp
inc
sbb
or
mov
push
adc
shl
mov
jne
arpl
jno
xor
scas
aad
mov
shrb
mov
clc
hlt
call
test
stos
mov
inc
pop
pop
fs
mull
push
pushf
xchg
repnz
cmp
mull
enter
jb
and
xor
xchg
clc
xchg
addr16
or
xchg
int3
mov
test
mov
xchg
adc
sbb
fnstcw
mov
and
loop
jb
mov
out
and
mov
popf
or
cmpsb
popa
inc
andl
ds
mov
rcrl
fcoml
cld
dec
icebp
sbb
sti
aas
shr
and
scas
sub
jae
xor
inc
lahf
mov
xor
je
adc
push
cmp
sub
push
out
and
loopne
repnz
in
int3
or
pop
std
ja
daa
lods
ljmp
push
jno
js
rcl
jnp
ret
mov
sub
mov
adc
jle
cs
ja
mov
arpl
mov
adc
jle
test
jae
or
imul
daa
ja
out
push
sti
push
in
pushf
aam
cmp
push
dec
mov
ret
pop
lea
stos
pop
in
adc
xchg
dec
call
push
in
xor
movsl
out
std
mov
mov
ds
lret
mov
addr16
or
push
je
in
sub
mov
adc
in
pop
test
xlat
mov
sarb
jge
adc
mov
xchg
out
ss
dec
aad
repz
mov
push
call
jmp
stc
rorb
dec
pop
cmpsb
jge
jmp
mov
or
dec
push
mov
inc
repnz
mov
dec
xchg
ljmp
push
push
push
jle
cmp
jle
jb
fnstcw
add
cmp
and
dec
or
mov
add
rcr
mov
pop
mov
mov
mov
push
les
jne
pop
mov
aam
mov
fdivrs
jnp
sarb
mov
mov
aam
add
xor
pop
fcom
push
mov
stc
scas
out
inc
lods
sti
mov
jecxz
sub
in
jp
add
cmpsl
push
fists
mov
push
subb
mov
dec
repz
pop
std
mov
cs
pop
test
push
xchg
xchg
enter
jb
or
inc
in
std
sbb
xor
sbb
cltd
shll
xchg
cmpsl
jo
dec
xchg
orl
pusha
cli
and
xchg
les
and
in
out
rcll
and
jne
cmp
xor
pushf
cwtl
cmp
inc
jae
inc
mov
sbbl
inc
cmp
aad
in
iret
popl
or
dec
inc
pop
mov
fstpt
dec
cmp
inc
jns
push
cmc
stos
pop
xchg
cmpsl
cwtl
andb
lds
ja
push
mov
out
sub
out
cmp
push
push
sbb
ja
jmp
inc
mov
aaa
iret
outsl
es
shufps
ds
push
shll
pop
cs
mov
out
inc
or
sub
xchg
in
mov
lds
mov
ljmp
mov
xchg
push
mov
jae
fnstenv
mov
out
adc
mov
or
addr16
and
mov
sub
cmp
push
addr16
shll
fwait
sarb
dec
inc
push
leave
hlt
jge
ds
mov
cwtl
mov
cwtl
add
loopne
cmpsb
int
dec
insl
and
add
xor
out
mov
mov
repz
add
mov
and
xchg
or
pop
jae
call
outsl
mov
pop
jns
xrelease
jo,pt
cmp
xchg
sub
popa
into
xor
adc
inc
ss
popa
les
je
pop
xchg
mov
cs
js
pop
inc
outsl
cmpl
xchg
mov
lea
pop
ret
push
and
out
js
int
cmpb
cli
jbe
push
jne
and
fiadds
aaa
loope
jbe
data16
xchg
pushf
and
in
jb
mov
scas
push
ja
ljmp
arpl
xor
loopne
cmpsb
and
out
aam
and
push
daa
sub
aad
lea
dec
lretw
jl
sub
xor
ret
push
push
hlt
pop
adc
sbb
xor
push
movsb
imul
mov
inc
cmc
adc
and
test
inc
aam
call
and
fidivrs
lds
popa
bound
movsb
mov
or
adc
dec
fstl
loopne
pop
pusha
ds
std
xchg
and
in
jbe
dec
xchg
popf
push
hlt
popf
pop
jo
inc
pop
cmpsb
test
int3
imul
das
or
mov
push
pop
mov
jo
lds
push
lcall
arpl
push
lret
push
es
jnp
or
jbe
rorl
stos
test
add
inc
inc
mov
mov
sbb
sbb
call
popa
incb
mov
xchg
scas
into
mov
xchg
aas
ja
pop
repnz
ss
sbb
ljmp
lods
inc
enter
bound
daa
jp
adc
mov
add
xchg
and
mov
add
xchg
push
xchg
fildl
jbe
xor
pop
aaa
pop
cmp
int3
mov
pop
xorl
dec
xor
cmp
sbb
dec
sub
shrb
jp
dec
in
mov
fimull
movsl
cs
xchg
rcrl
adc
and
and
cld
pop
shrl
decb
fucomip
sbb
rolb
cmpsl
inc
aas
fs
jns
es
sub
add
push
ret
test
arpl
add
jo
jl
cmp
mov
fdivrs
movsb
jnp
xor
bound
in
pop
mov
rolb
push
and
mov
dec
dec
pop
xor
and
push
xor
dec
loop
not
mov
add
mov
shr
dec
js
dec
sbb
jns
dec
sub
cmp
xchg
sbb
shl
test
inc
xor
push
fwait
mov
add
dec
icebp
clc
sub
stos
into
ficoml
cmp
pop
movsl
mov
and
fwait
scas
loop
sbb
push
pop
int3
cmpl
sub
fidivl
in
in
and
push
in
sub
push
shll
call
cmp
iret
adc
into
arpl
inc
pop
pusha
inc
aam
test
int3
jnp
out
aad
lods
pop
mov
cmp
xchg
cmp
add
repz
sbb
cmp
int
sbb
dec
mov
mov
ljmp
shll
jns
xchg
mov
out
adc
call
jno
fcoml
fsts
push
popa
mov
or
fmull
decb
jne
or
outsl
stos
jbe
ror
add
mov
dec
fistl
enter
int3
dec
pusha
push
hlt
cmp
pop
out
out
or
ficoml
mov
aad
leave
mov
mov
out
sub
cmp
or
xchg
mov
test
sahf
sbb
cltd
push
cmpsb
stos
data16
mov
xchg
gs
cltd
icebp
add
je
xor
ljmp
testl
or
add
aad
jne
jmp
cmp
in
cmp
fsubl
add
jns
nop
mov
and
inc
sbb
mov
sbb
pop
xor
in
sbb
ss
bound
lret
and
aam
pop
mov
outsb
sbb
stc
cld
ljmp
mov
data16
sbb
mov
add
inc
xchg
push
mov
push
sahf
or
mov
pop
cmp
xchg
jnp
std
lret
daa
dec
cwtl
mov
push
jmp
dec
stc
std
mov
push
fdivrs
mov
fists
pop
iret
lea
mov
mov
testl
or
out
cmp
cmpsb
sub
test
rcrb
cld
aaa
add
xchg
jmp
lock
lods
insl
xchg
xor
mov
dec
in
mov
lahf
mov
test
mov
add
push
test
mov
add
mov
sub
jle
loopne
lods
pop
fprem1
ja
int3
sbb
std
inc
fiadds
sbb
ja
inc
add
testl
inc
xor
pop
sahf
mov
and
in
ds
mov
jbe
loop
jge
pop
or
cwtl
adc
loopne
lea
hlt
das
dec
rorb
fiadds
repnz
pop
inc
adc
jmp
lods
pushf
popf
jle
mov
cmc
out
jae
mov
aad
cmp
mov
andb
es
rcrl
lods
imul
lods
nop
inc
mov
imul
cld
or
mov
in
mov
or
movsl
add
xchg
mov
cvtps2pd
push
inc
xchg
mov
mov
sbb
loop
gs
out
mov
sbb
mov
and
insb
push
in
mov
test
rclb
sub
xchg
xchg
mov
inc
aam
push
xchg
out
jns
and
or
stos
xor
xchg
sbb
loop
jmp
je
cld
cs
sbb
outsl
xchg
aam
aam
mov
adc
lock
loop
adc
scas
or
mov
jle
fadd
pop
xchg
xor
ss
cmp
test
out
loope
daa
int
xor
jl
sbbl
insl
popa
mov
stos
inc
cmp
pop
loopne
dec
and
pop
out
jl
aam
pop
int3
push
popa
or
dec
add
and
jmp
pop
mov
repz
and
push
stc
lcall
sahf
add
in
cmp
mov
cmp
fs
sbb
fwait
lea
xor
scas
jne
sub
adc
pop
add
push
cltd
cmpl
cltd
sbb
xor
lahf
ret
xchg
fs
push
or
mov
shlb
in
hlt
enter
mov
in
add
xor
dec
fmuls
enter
fldt
xchg
push
addl
gs
stos
push
cmpb
adc
push
outsl
lds
adc
push
and
xor
cmpsb
mov
pop
push
outsb
inc
cmp
js
jp
test
jno
jb
aad
push
das
push
imul
mov
xor
jne
pop
jae
mov
push
pop
popf
ss
xlat
mov
shrb
dec
inc
lods
mov
mov
jl
cmp
and
push
ret
sti
sub
xchg
xor
divb
pusha
aam
jne
mov
dec
clc
adc
insb
push
fistpll
movsl
cmp
bound
push
push
mov
fwait
in
or
push
adc
mov
std
test
and
mov
daa
add
sbb
push
addb
pop
lds
pop
in
call
nop
add
div
fnsave
clc
divl
jnp
lods
mov
mov
in
lret
call
sbb
push
or
lcall
add
cmp
cltd
jl
jg
xorl
and
negl
add
pusha
and
mov
inc
jno
sbb
mov
mull
dec
push
xchg
sbb
hlt
mov
dec
sub
hlt
pop
push
inc
cltd
mov
jg
mov
pop
sub
lock
cltd
mov
sti
dec
imul
cmp
add
add
jmp
mov
lahf
and
out
cwtl
xor
dec
scas
inc
mov
sbb
ljmp
push
or
ror
test
rol
shrl
mov
xor
test
call
in
and
jg
and
imul
dec
imul
sbb
sub
lea
push
pop
dec
jae
mov
fimuls
sbb
xor
test
movsb
out
mov
ds
fidivl
in
aas
adc
mov
xchg
cmp
jp
lahf
mulb
clc
xchg
fdivs
xor
adc
fwait
cmp
adc
daa
or
add
bsf
fbld
rorl
add
daa
mov
xchg
push
pop
pop
add
mulb
cltd
das
aas
and
loopne
mov
mov
fwait
or
adc
rcr
fistpl
jp
cli
inc
adc
pop
push
pop
or
xor
dec
and
addr16
or
pop
lods
jno
jo
jns
insb
jo
into
sub
out
mov
adc
ret
icebp
pushf
push
cwtl
out
outsb
jecxz
xlat
sbb
jle
or
cmp
es
pop
add
in
jge
push
pop
push
cltd
inc
stos
rorl
daa
cmp
cmp
subl
sbb
sahf
jl
xchg
imul
pop
incl
dec
les
xchg
adc
mov
or
xchg
fnstsw
push
imul
stos
xchg
daa
add
and
int3
xor
in
pop
or
ss
sub
dec
pop
cmp
mov
cmpsl
dec
cwtl
pop
dec
pop
inc
cmp
or
stos
dec
jb
cmpb
inc
jmp
add
add
adc
frstor
xchg
out
mov
inc
cmpsb
out
jmp
test
cmp
pop
gs
jle
sub
leave
leave
mov
imul
lock
mov
cmp
xlat
lock
cmp
mov
pop
pusha
mov
pop
cmpsl
pop
xchg
repnz
loop
dec
xchg
mov
adc
ja
add
add
cs
sub
xchg
sub
mov
and
out
loope
dec
outsb
fimull
leave
scas
or
xchg
movsb
jne
and
dec
clc
inc
and
xor
gs
jle
xchg
push
jmp
ds
aam
mov
mov
push
aas
int3
pop
sbb
fcom
lret
mov
fs
leavew
icebp
mov
xor
fwait
aas
in
clc
or
push
imul
pop
sarb
jbe
sub
xchg
sti
test
cmc
and
mov
insl
sub
leave
push
les
push
and
inc
mov
and
test
fldcw
xor
jno
imul
es
test
icebp
loop
sub
cmp
inc
fsts
insl
pop
loop
repz
loopne
push
jle
adc
mov
xchg
adc
xchg
ljmp
fisubrs
mov
scas
pusha
ret
dec
fisubl
mov
pop
mov
test
cmp
and
in
mov
ficompl
or
push
out
pop
mov
push
mov
sbb
call
loope
push
enter
cmp
push
mov
pop
inc
sub
pop
insl
out
pop
pop
cmp
jmp
testb
xchg
dec
xchg
push
fldcw
mov
in
pop
mov
pop
leave
mov
stos
add
repz
orb
enter
call
fcomi
lahf
lret
clc
inc
sbb
mov
push
mov
sbb
sub
push
cmc
shll
pop
data16
fdivs
insb
add
xchg
and
popa
push
sti
rcrb
sbb
sti
push
mov
lock
repnz
xchg
ss
lret
jo
int3
dec
iret
cmp
mov
out
dec
sub
jle
xchg
in
jnp
push
arpl
jp
lods
add
lcall
icebp
sahf
cmpsl
cld
lea
xorl
lret
cs
sbb
add
shrl
xchg
sti
push
fdivrl
jo
push
jno
cs
loopne
sti
sbb
mov
imul
fstl
ja
sbb
dec
mov
xchg
loop
test
add
xchg
mov
ljmp
ds
sub
xor
mov
lock
sub
cmpsl
push
jmp
xor
loope
test
jle
js
adc
xlat
cmp
ret
and
jb
push
inc
addb
mov
and
ja
pop
or
jmp
clc
push
mov
adc
shlb
idivl
jl
adc
push
dec
icebp
pushw
sbb
in
mov
inc
dec
sub
xchg
push
int3
ret
das
popf
mov
mov
or
push
sub
xchg
push
addr16
sti
stos
sbb
xor
mov
pop
pop
int3
repnz
sub
push
push
xchg
in
addr16
int
mov
mov
into
mov
cli
in
mov
mov
sbb
lds
add
cmp
mov
mov
xchg
sbb
movl
jb
dec
sub
sti
ror
inc
dec
inc
sbb
ja
rcr
cmp
ficoml
xorb
aaa
roll
xor
jne
inc
test
mov
enter
hlt
repz
lods
cmp
scas
insb
jae
lahf
xor
dec
xchg
mov
mov
xor
cmp
es
lods
stc
add
sub
add
lds
jle
das
out
loop
jge
mov
fcomi
mov
punpckhdq
jb
push
sub
dec
sub
xor
std
and
xor
cmp
lcall
jg
shrl
jge
test
jp
test
xchg
push
inc
pushf
push
mov
jnp
cmpsl
xor
call
movsl
cld
repnz
out
mov
fistpl
test
popa
jns
xor
and
sub
stos
lea
imulb
mov
inc
pop
leave
adc
dec
iret
dec
mov
xchg
push
out
xchg
cmp
lock
mov
adc
outsb
dec
fistpll
aad
bound
or
xchg
and
fnstenv
inc
or
push
rorb
lock
xor
dec
stos
mov
jp
ret
mov
hlt
or
dec
leave
push
inc
dec
jne
sbb
je
dec
lret
push
mov
mov
jl
lds
mov
or
adc
test
and
mov
test
and
fimull
unpcklps
dec
and
jg
xlat
cmpsl
stc
out
mov
add
dec
mov
adc
add
dec
cmp
jo
or
je
mov
adc
sub
cmpsl
rorl
dec
jns
push
loop
aam
adc
fsub
xor
out
movsb
shlb
repz
dec
xor
sbb
bound
jno
lret
std
inc
inc
std
loope
shrl
ds
mov
add
jno
fisubl
pop
inc
push
mov
xor
xchg
movsl
xor
pop
xor
arpl
test
xor
ljmp
scas
mov
das
push
into
js
mov
sbb
adc
mov
arpl
or
push
add
sbb
mov
or
pop
popa
xor
jg
adc
xor
xor
in
dec
addr16
mov
outsl
mov
nop
jle
ds
push
insl
sbb
loop
adc
movsb
fwait
call
inc
fldenv
cld
stc
es
je
xor
cmc
pop
mov
and
push
shll
hlt
icebp
aam
sub
and
jno
sbb
mov
jae
push
insl
push
int
stc
add
leave
mov
adc
dec
xchg
mov
dec
fs
dec
jnp
rorl
imul
pop
xchg
in
repnz
or
adc
aaa
mov
cmp
jno
adc
ss
scas
xlat
cmp
lea
les
adc
pop
rolb
call
add
inc
dec
in
stos
cmc
mov
adc
test
inc
lret
sub
pop
scas
lret
xchg
das
xor
rorb
pusha
adc
popa
cmp
out
ret
cmp
push
inc
call
hlt
pop
imul
or
sbbb
mov
mov
das
push
add
xor
enter
ljmp
mov
adc
cld
and
lods
sbb
sbb
lock
int
ja
test
push
xor
test
ja
sub
push
aaa
fsubrs
pop
jne
xor
fldt
pop
pop
mov
dec
push
jb
or
js
push
dec
in
xchg
inc
fisubs
cli
lods
stos
ret
pop
push
ss
addr16
pop
jb
mov
mov
and
ss
mov
fwait
push
scas
xchg
jmp
jb
movsl
pop
clc
hlt
xor
xor
out
jns
mov
xchg
ret
insl
shrb
loope
add
and
and
cwtl
cmp
insb
mov
insl
push
push
xchg
pop
mov
inc
jmp
cmp
adc
lds
arpl
mov
sbb
aam
and
add
xorps
fistpl
push
aaa
xor
stc
gs
xchg
dec
out
lds
and
xor
mov
test
sub
outsb
jne
fs
inc
jmp
daa
sarl
loopne
fcomps
jp
loopne
fcomip
xchg
in
scas
imul
test
sti
cmp
mov
dec
xor
jo
pusha
test
cmpl
sub
imul
andl
lcall
sbbl
out
pop
and
cmp
cli
mov
mov
mov
or
lods
xor
daa
jne
pop
jle
dec
or
shl
dec
xor
or
and
mov
jno
sub
xchg
out
adc
cli
fdivrl
pop
add
loop
sahf
cs
jmp
cs
mov
xor
xchg
test
dec
cmp
dec
mov
push
xrelease
mov
mov
lds
jle
aam
outsb
xlat
dec
loop
iret
sub
insb
mov
movsl
imul
and
xor
push
mov
inc
test
out
sbb
loope
pop
sarb
imul
scas
mov
ljmp
mov
mov
jge
imul
data16
lea
xor
lock
aad
or
cmpsl
clc
push
mov
mov
dec
sub
mov
mov
sub
mov
push
jecxz
outsb
and
pop
mov
xchg
ljmp
mov
ficomps
test
jp
clc
rorl
lea
push
pop
daa
jg
lea
xlat
mov
out
test
cmp
int
ljmp
js
jno
daa
shl
push
lret
adcb
push
mov
and
sarb
adc
xchg
lea
and
add
jo
inc
jp
fwait
mov
test
inc
loope
out
sti
pop
out
addr16
adc
sub
loope
data16
xchg
aad
aad
loope
mov
aad
daa
sbb
test
lahf
inc
cwtl
cmovs
cmp
mov
cmc
xor
mov
cld
cmp
imul
out
xchg
jno
icebp
mov
sbb
and
jo
mov
in
sbb
pop
mov
iret
xchg
push
pop
movsl
hlt
mov
daa
mov
movsb
int
fstl
cmp
mov
fnstenv
sbb
fldt
int
inc
sbb
les
mov
mov
mov
js
lahf
push
fidivrl
fidivs
out
adc
push
inc
clc
sub
jne
mov
lret
mov
sbb
add
push
out
in
adc
scas
test
mov
mov
stos
adc
sub
mov
cmp
cwtl
inc
pop
out
push
fisubrs
js
aaa
add
mov
adc
mov
aad
into
rolb
sbb
inc
inc
adcl
or
sbb
mov
dec
and
dec
outsb
in
je
dec
sti
js
test
xor
loopne
sarb
stos
aam
or
sbb
jecxz
es
or
mov
sbb
dec
xor
xor
add
sub
sarl
and
cmpsb
stc
mov
cld
lcall
xchg
inc
fwait
movsl
dec
sbb
sahf
cld
xchg
or
lret
mov
call
mov
pop
xchg
jb
xor
in
mov
sbb
mov
pop
xor
daa
aaa
xor
scas
std
rcl
rcll
sub
ljmp
mov
mov
xchg
mulb
ss
jo
loop
sbb
jecxz
mov
mov
mov
or
push
popf
adc
xchg
or
xchg
xchg
into
insl
push
and
lret
mov
jp
rcrb
es
or
sub
sub
push
lds
and
repnz
add
and
dec
add
sbb
pop
scas
adc
xor
or
in
mov
ds
cmp
or
xor
nop
pop
insb
xchg
arpl
imull
mov
cmpsb
lock
ja
jmp
cmp
mulb
add
psrad
rcrl
mov
incb
shr
or
xchg
cmpsl
aad
adc
cmp
sar
lds
dec
stc
sub
imul
scas
xor
xchg
rorb
adc
out
lods
dec
push
jno
xor
and
pusha
clc
or
in
xchg
mov
dec
sub
mov
xlat
sbb
adc
jb
insb
in
push
aam
xor
fwait
xor
cltd
push
ds
add
sub
adc
mov
jnp
jp
sbb
mov
loopne
int3
mov
push
fwait
mov
scas
dec
mov
xchg
mov
push
adc
mov
mov
inc
jg
enter
std
pop
jmp
sub
sub
dec
push
imul
dec
add
pop
setns
add
insb
jmp
jnp
dec
inc
or
mov
push
or
es
or
fucomip
push
into
cld
mov
sub
loope
push
ret
incl
push
jle
ret
pop
xchg
fs
jp
push
or
pop
out
or
xor
aam
or
aad
icebp
stos
mov
jmp
sbb
add
xor
divb
jnp
ror
pusha
sbb
xlat
stc
dec
ja
int
inc
mov
jbe
lds
ficompl
xchg
cwtl
adc
sahf
sub
mov
or
or
and
jo
sub
add
das
stos
push
addr16
aas
jmp
xor
ljmp
push
fmull
cli
cmpsb
loopne
mov
cmp
sub
pushf
leave
and
adc
enter
mov
clc
insl
out
dec
inc
cmp
jbe
inc
mov
mov
xlat
or
out
arpl
push
cltd
push
push
shrl
roll
push
dec
pushf
mov
mov
aaa
fistps
aam
daa
mulb
std
pop
xchg
xor
jne
xchg
and
mov
aas
pop
fdivr
jae
push
push
outsl
ljmp
aas
adc
push
fsubrl
add
xlat
movsb
push
and
and
xchg
cmp
push
inc
gs
xchg
mov
movsb
push
mov
cli
cmp
push
inc
jne
or
lea
jne
pusha
aaa
loop
jno
sbb
in
add
jae
inc
fisubrs
or
mov
sbb
mov
jne
aas
test
repnz
ror
data16
cmp
mov
loope
dec
roll
mov
or
lods
mov
scas
add
xchg
xchg
mov
adc
mov
or
pop
sub
addr16
sub
xlat
or
incl
fildll
ret
and
stos
inc
or
push
cwtl
outsl
pop
lock
sbb
out
mov
or
jecxz
out
movsb
sub
sbb
adc
arpl
mov
or
inc
lock
xor
mov
movsw
dec
in
push
jbe
in
int3
dec
sub
scas
adc
sbb
aaa
fnsave
sub
lods
leave
fwait
mov
aaa
repz
add
mov
test
nop
loop
push
and
je
dec
jp
push
test
mov
push
es
xor
or
mov
cmp
jge
fcomps
loope
aaa
pop
push
dec
cmp
mov
jbe,pn
test
insl
push
mov
movsl
in
mov
xor
dec
adc
shl
insl
add
rclb
xor
mov
sbb
lret
outsl
ret
and
es
adc
inc
xchg
sbb
mov
xorl
inc
adc
add
mov
mov
scas
das
daa
mov
dec
rorb
repz
dec
dec
xchg
pop
cmp
les
jno
lcall
dec
push
sbb
hlt
sub
ds
push
mov
fsubl
xchg
mov
movsb
lret
xlat
pop
xchg
mov
add
out
add
pop
pusha
xchg
mov
adc
jns,pn
xchg
loop
loope
repz
cli
inc
fistpll
daa
int
cltd
daa
jae
sub
lods
mov
cmpl
out
js
pop
cmp
movsl
jp
and
int
jbe
xchg
xor
xchg
add
test
mov
into
adc
xchg
mov
adc
ds
xchg
decb
fs
test
pop
cs
sub
push
jno
stos
rclb
rcl
xor
scas
data16
insl
negl
int
int
std
jb
cmp
lcall
xchg
dec
outsl
add
fs
loop
aas
in
aad
lock
in
push
mov
lret
rcr
jns
mov
sahf
dec
hlt
push
jo
inc
mov
in
mov
adc
aam
mov
cwtl
inc
insl
clc
icebp
out
call
cwtl
pop
add
or
adc
mov
push
sbbb
scas
mov
sarl
ss
sahf
or
or
stos
jle
xor
int
or
fiadds
push
dec
add
dec
push
inc
pop
mov
sbb
test
test
inc
pop
ret
loope
arpl
stos
mov
cmp
mov
dec
cli
pop
ret
mov
add
movsl
mov
fcoms
jg
jecxz
add
test
data16
pop
xchg
xor
outsb
andb
das
mov
mov
adc
or
dec
fwait
clc
jecxz
icebp
popa
cmp
lods
inc
fstpt
cmc
test
ds
xchg
jle
dec
mov
push
push
adc
iret
xchg
sbb
sub
jno
pop
mov
out
decb
les
js
fs
adc
or
fnstcw
fcmovnb
cvttps2pi
cmp
ret
shrb
into
fwait
push
mov
xlat
ret
sbb
pop
jge
pop
pandn
fwait
scas
jbe
cmpsb
xchg
jne
out
out
fadd
andb
scas
shl
in
adc
cmc
mov
imul
mov
ss
out
mov
push
out
dec
rorb
xchg
iret
sub
sbb
mov
cs
inc
xchg
add
andl
aad
pop
mov
xor
mov
hlt
test
adc
jo
xor
stos
call
in
mov
xchg
or
sub
sub
mov
cli
ret
and
rol
or
sbb
ja
lahf
lea
movsl
lock
cmp
push
cmpsb
fstpt
fstl
cld
fdivrs
push
pop
ret
insl
pop
pop
xchg
and
rcll
dec
inc
mov
pop
push
xlat
xor
ret
lods
mov
lcall
movsb
cmp
cs
or
push
xor
inc
or
cld
sbb
es
loop
sub
xchg
fstpt
mov
enter
inc
lret
fs
add
and
jo
jp
lcall
dec
repnz
and
mov
inc
sbb
adc
mov
fwait
mov
in
daa
cmp
mov
icebp
dec
fucompp
pop
pop
jmp
aaa
pop
call
pop
arpl
cltd
mov
adc
jne
cmp
lcall
adc
jbe
and
mov
fisttpl
movsb
dec
inc
sub
lods
inc
pop
jp
stos
je
adc
fildl
mov
lods
test
fstps
imul
push
jmp
pop
sub
xchg
sub
loopne
dec
in
pop
les
repnz
and
out
xchg
nop
out
pop
push
shrl
add
sub
ljmp
dec
int3
xorb
shrl
lods
mov
rorl
sub
sbb
push
movsl
cmc
sub
sahf
cmp
stc
aaa
mov
jg
adc
xchg
push
rcl
in
pop
cmp
fildll
or
sub
stos
and
cmc
sbb
or
sub
jnp
sub
int
adc
fcoml
push
push
push
sti
pusha
loop
lods
add
push
inc
pusha
in
inc
jecxz
out
jp
imul
add
adc
daa
pop
push
mov
imul
xor
fs
es
or
xchg
or
shr
jo
xor
das
push
push
in
jnp
and
movsb
jns
js
and
xchg
cltd
imul
push
es
icebp
sub
pop
add
pop
cmp
repz
dec
mov
dec
xchg
pop
fwait
fldl
mov
pop
mov
pop
xchg
incl
cwtl
sti
notl
insl
add
mov
test
xor
cs
xor
aad
pop
sub
leave
jne
inc
dec
lods
repnz
jecxz
bound
jge
pop
lods
adc
aas
in
push
imul
pop
lock
sarb
dec
jl
ss
dec
pop
or
xlat
pop
mov
xchg
cltd
sbb
es
and
sub
icebp
or
mov
decb
dec
jg
and
push
int3
jge
ljmp
adc
ds
cmp
push
movsl
sub
outsb
sbb
xchg
cltd
xorb
jp
jl,pt
popa
imul
xor
xor
jl
xlat
in
mov
fidivs
sbb
stc
cld
adc
shrb
or
inc
dec
in
sbb
ds
or
jns
push
cmpsb
test
xlat
fldt
sbb
push
push
mov
xor
xor
dec
xor
in
jle
icebp
sub
pop
cmp
mov
imul
dec
das
repz
loope
xchg
fsubrs
ficomps
xlat
fcom
roll
daa
or
lock
sahf
test
loop
sarl
push
lahf
xlat
cld
mov
dec
jnp
stc
loopne
scas
mov
ja
aad
shll
fcomi
fldl
add
inc
pusha
pop
push
fbld
daa
inc
gs
rolb
pop
and
scas
push
add
sbb
insb
adc
fidivl
push
cmpsl
adc
stos
sbb
cs
mov
sbb
cmpsl
loope
xchg
mov
scas
jne
adc
repz
sub
sbb
shll
pushf
mov
add
xchg
mov
sub
jae
xor
lock
add
cmp
mov
pusha
xchg
in
lea
dec
pop
test
mov
test
andb
and
adc
xor
mov
push
xor
dec
mov
test
inc
jo
push
in
jl
std
in
stc
sbb
out
pushf
mov
add
lock
addb
adc
iret
and
xor
and
cmp
jns
xchg
add
ds
fbstp
loopne
jecxz
fwait
pop
inc
xlat
lret
push
pop
jo
sahf
jbe
cs
and
pop
mov
ja
mov
lahf
push
and
cld
pop
ret
ret
test
iret
mov
nop
scas
loopne
subl
cld
fcomp
in
jge
aas
cli
sub
outsl
and
mov
daa
or
mov
mov
inc
add
inc
in
dec
fmull
cmpsl
mov
leave
mov
dec
mov
jnp
mov
ret
jnp
arpl
jle
outsl
dec
int3
leave
mov
inc
adc
sbb
pcmpeqb
call
mull
cli
adc
inc
or
mov
lds
mov
in
inc
outsb
mov
mov
cmp
hlt
and
add
inc
cmc
pop
test
mov
and
adc
mov
push
into
adc
push
sahf
jb
das
adc
test
adc
pop
cmp
fisubrs
icebp
xor
inc
push
xor
and
fiadds
jecxz
lahf
pop
out
or
dec
scas
nop
and
add
in
stc
arpl
pushf
cmp
insb
mov
fiaddl
lea
jno
lds
jp
dec
shll
shll
or
rolb
jge
les
and
movsl
pushf
ja
loop
lds
ret
incb
test
out
les
sahf
inc
std
adc
jmp
sbb
insb
int
or
cs
in
mov
sti
dec
jbe
xor
or
dec
mov
lea
aad
in
sbb
cmc
scas
sub
in
mov
and
int
aas
dec
pop
mov
sahf
pop
aam
sub
and
jne
jns
cs
dec
xchg
inc
jb
xchg
xor
xchg
jbe
sbb
jle
fstpl
xchg
jp
xor
fcomi
repz
rol
xor
jb
sub
cmpsl
push
clc
daa
mov
call
and
lds
out
mov
movsb
pop
je
loop
test
jae
sarb
leave
out
ljmp
sub
rol
pop
mov
pushf
pop
aas
addr16
jo
xlat
sub
fldenv
nop
dec
scas
aam
sub
and
sbb
int3
in
ja
xor
mov
pop
jp
leave
push
cmp
leave
jae
mov
popa
repz
pop
icebp
mov
or
lret
fwait
shlb
rorb
outsb
lock
inc
push
xor
inc
adc
pop
outsb
arpl
or
ljmp
xor
inc
scas
aad
cmp
push
addr16
mov
push
mov
in
mov
push
jne
ljmp
push
lret
cltd
mov
xchg
sahf
ja
stc
cs
shrb
pop
rorb
mov
mov
pop
sahf
and
insb
mov
push
sbb
pusha
movsl
cmp
ret
in
stc
cmp
jge
stos
fyl2xp1
clc
outsb
mov
or
push
dec
jmp
xchg
jmp
cmp
pop
xor
push
xor
push
xchg
inc
movsl
cmp
sub
popf
add
ds
dec
mov
sub
bound
test
and
lods
repnz
mov
setno
das
in
push
or
mov
sub
cmp
sbb
jae
in
add
lods
repz
js
adcl
insl
sub
stos
add
push
das
stc
movsl
pop
shl
fbstp
lret
fsubs
mov
pop
lahf
adc
in
movsl
add
jge
pop
cmpsl
sub
cmpsb
test
xchg
repnz
cmp
mov
leave
xor
roll
pop
lahf
xor
hlt
sub
jns
jle
add
lahf
cmp
jecxz
je
mov
xchg
mov
mov
sbb
in
fs
mov
insl
add
mov
inc
in
jge
iret
mov
xor
push
pop
jno
sbb
mov
or
cmp
shr
xchg
fdivrl
leave
imul
jno
loop
jle
test
dec
divb
sub
and
enter
addl
cmp
pop
add
xor
xor
das
jbe
divb
enter
std
cmp
loop
testb
jb
out
repz
out
shrl
sbb
pop
fcmovb
mov
adc
imul
rcrl
xchg
outsl
outsl
sbb
jecxz
xchg
out
pop
pop
push
and
mov
scas
lcall
lea
nop
sub
inc
mov
pushf
push
cmp
and
mov
mov
mov
repnz
inc
in
jno
loope
xor
xchg
mov
repz
jmp
inc
fldcw
and
into
sti
sbb
mov
cs
insb
clc
push
int
jecxz
and
or
adcb
stos
push
mov
or
idivb
lds
fcoml
add
scas
fstl
dec
jo
outsb
xchg
mov
ret
rorb
and
inc
repz
xor
or
mov
negl
cmpsb
imul
dec
nop
lcall
loopne
lahf
fidivrs
lods
out
xchg
xor
mov
sub
fldl
pop
fsubl
add
fsubs
mov
cmpsb
subb
cmp
sub
leave
test
cmpsb
mov
rol
xor
jo
or
pop
mov
mov
add
and
push
jmp
sbb
or
jle
and
loope
test
pop
add
pop
mov
hlt
in
int3
ret
divb
ds
mov
lods
mov
push
out
adc
xchg
sub
fcmovu
push
imul
cmpb
push
popa
lret
outsb
nop
jge
stos
fldenv
xchg
sbb
jmp
cmpsl
xchg
dec
jle
data16
push
xchg
cmp
data16
subl
adc
mov
add
outsl
sub
xor
leave
std
xchg
dec
int3
mov
sbb
mov
inc
ficoms
cltd
cmpsb
sarb
adc
push
clc
outsl
jb
sahf
inc
or
sbbl
dec
pop
push
sbb
jae
add
lahf
sub
hlt
pop
rolw
cmc
push
push
enter
lds
mov
xchg
jae
pop
jae
sub
mov
dec
sbb
in
mov
sub
jg
cmp
jno
mov
adc
xchg
inc
cmp
repz
aam
out
pop
aam
gs
pop
sub
leave
sbb
cmp
and
je
dec
out
mov
sbb
rcrl
pop
ss
dec
inc
outsl
ret
mov
sbbl
loop
stos
push
or
sub
aas
or
test
pop
and
cld
jne
es
pop
cwtl
sub
leave
fld
inc
lods
fcomp
popa
cmp
and
rcll
imul
rcrl
mov
cmp
cmc
mov
sbb
daa
fldenv
xchg
or
pop
adc
lds
pop
jns,pt
cmp
adc
and
xchg
and
test
cld
mov
mov
dec
add
jmp
nop
popf
xchg
mov
sti
cli
loopne
push
aaa
cmc
gs
repnz
sub
jp
ficomps
push
jle
cmp
imul
xor
fwait
push
cmp
jmp
jmp
sub
mov
fidivrl
test
pop
lods
shrl
rolb
pushf
jg
push
jbe
push
fs
jl
pop
adc
dec
or
xor
push
cltd
out
sub
cmp
js
jl
mov
stos
adc
xchg
shl
aad
rclb
mov
mov
lahf
sbb
ret
pop
mov
mov
push
xor
js
xorb
sub
pop
popa
push
sub
test
add
or
jne
jb
aad
out
and
dec
adc
gs
into
cmp
xor
int
dec
dec
test
pop
inc
xchg
into
xor
push
dec
jge
jl
xor
into
push
dec
xor
data16
mov
popf
mov
add
add
mov
xchg
jle
shlb
push
jg
jb
dec
inc
inc
and
mov
in
mov
les
sbb
and
jae
cld
sub
mov
idivl
adc
xor
jae
pushf
or
fnstenv
je
push
sub
inc
enter
push
addb
dec
push
jo
lods
sub
out
mov
sbb
dec
sub
pop
xchg
xchg
pop
imul
bound
pop
outsb
daa
pusha
aas
xor
mov
stos
ficomps
pusha
and
fldenv
repz
cwtl
pusha
les
xchg
push
xchg
lahf
mov
inc
imul
pop
push
inc
movsl
jmp
dec
into
add
cmpsb
popa
or
int3
pop
pusha
mov
outsl
cld
mov
mov
jmp
jmp
xchg
js
and
xchg
call
mov
in
js
mov
inc
addr16
dec
xor
mov
push
mov
push
loop
lret
adc
dec
fcmovnu
sbb
xchg
test
imul
shll
push
push
inc
fidivl
addr16
aas
add
adcl
xchg
and
fwait
sbb
lods
fwait
adc
mov
lahf
outsl
in
mov
test
push
mov
test
ret
aam
out
repz
int3
add
dec
gs
push
popf
and
xor
cmp
pop
popa
dec
fneni(8087
cli
jns
sbb
enter
mov
mov
btc
and
das
ret
fnstsw
rorl
mov
test
jp
push
out
inc
mov
mov
or
push
in
jno
inc
ret
shll
inc
test
mov
dec
arpl
xchg
pop
sub
mov
sub
sbb
out
dec
lar
inc
imul
movsl
sar
aad
mov
jg
aad
lea
jl
mov
es
sti
cmc
push
pop
mov
loope
lods
inc
cmp
jl
mov
cwtl
iret
repnz
fcomps
jnp
or
das
setge
sub
sbb
mulb
pop
or
popf
scas
dec
sub
mov
inc
int3
and
das
int3
shr
mov
push
jg
cli
call
cmp
mov
push
push
inc
test
inc
push
xchg
inc
mov
je
jecxz
insl
shlb
lret
sbb
shrb
dec
arpl
push
jae
push
dec
sub
lret
mov
and
cmpsl
enter
in
std
and
shlb
mov
int3
mov
loop
pusha
or
ljmp
ret
icebp
dec
add
adc
dec
inc
data16
or
int3
sub
movsl
jns
aaa
pushf
or
ja
scas
or
sbb
cmp
rcrb
mov
movsl
cmpsl
mov
inc
sbb
pop
les
hlt
xchg
xchg
aam
xchg
pop
testl
shll
cmp
sub
insb
adc
xchg
aam
iret
dec
mov
add
pop
inc
pop
into
pop
cmpsl
mov
jmp
pop
ds
loope
data16
xchg
cld
add
mov
push
lock
subb
add
ss
sub
inc
out
mov
cmp
mov
add
clc
rcrl
out
push
dec
aas
lock
fimull
call
rorb
sti
xor
test
jg
fstl
sbb
xlat
and
insl
add
inc
pop
cs
incb
aad
ret
ret
in
adc
and
out
outsb
js
xchg
mov
push
ja
sub
and
sub
mov
inc
push
push
or
mov
mov
jmp
das
stos
sub
jo
mov
std
cmp
pop
ds
push
lcall
subb
movsb
push
inc
xchg
outsb
cmc
push
xchg
pop
mov
leave
sahf
pop
shlb
push
mov
jle
cltd
pop
sti
shrb
jmp
data16
stc
push
push
out
push
std
daa
mov
aaa
xchg
repnz
or
fldcw
mov
mov
push
sub
ss
sbb
xor
mov
jns
fcoms
leave
sar
imul
push
clc
mov
imul
adc
incb
loopne
les
ds
outsb
cmp
movaps
out
ret
cltd
xor
mov
dec
cmp
sub
popa
xlat
mov
push
pusha
les
aam
fistps
add
dec
cmp
mov
pop
dec
xor
dec
dec
mov
shr
aam
pop
jp
add
sub
jbe
out
test
fs
loope
jb
faddl
adc
sub
lret
inc
stos
adc
jmp
clc
jns
arpl
in
jns
stos
mov
jge
lahf
xchg
or
mov
inc
jp
repnz
jb
sbb
pushf
adc
das
dec
push
jp
mov
or
inc
in
loope
imul
sbb
jle
ljmp
xor
xchg
jle
dec
adc
jnp
scas
jmp
shl
leave
and
in
push
cmpsb
fsubrl
mov
xor
in
in
fidivl
inc
mov
jmp
mov
add
adc
ret
inc
sbb
mov
mov
pop
adc
out
je
inc
push
mov
push
ljmp
mov
inc
out
rorb
rorl
stos
jns
aaa
xor
lret
sbb
add
pop
mov
sbb
add
ret
cli
fstpt
data16
cmp
rcll
popa
int3
lods
add
inc
xor
sbbb
andl
push
ficoml
jo
enter
push
iret
mov
mov
sub
imull
cltd
daa
sbb
jp
aam
pop
xchg
sahf
pop
push
call
mov
xchg
mov
jnp
and
sbb
push
xchg
rclb
pop
clc
bound
ss
out
cmp
fsts
mov
clc
mov
shll
pop
pop
push
pop
aaa
add
mov
dec
push
call
push
shrl
add
ljmp
push
xchg
out
nop
pop
pop
sbb
roll
dec
xchg
clc
add
mov
lods
stos
push
stc
mov
lods
and
movsb
pop
mov
nop
cld
clc
jmp
mov
dec
iret
stos
jge
sahf
mov
pushf
fs
or
and
pusha
inc
and
cmp
add
icebp
push
stc
jge
pop
ljmp
imul
fcmovne
add
pop
xchg
shll
cwtl
jecxz
bound
and
shlb
inc
xor
pop
insb
cwtl
in
nop
es
movups
sar
xchg
hlt
inc
mov
pop
and
jp
adcb
sub
lahf
out
out
push
scas
push
data16
xchg
xchg
xor
dec
daa
in
xchg
dec
sbb
cmc
stos
pop
mov
pop
inc
lcall
xchg
daa
xchg
fcomp
xor
and
int3
xor
scas
insl
add
adc
movsl
mov
movsl
inc
ljmp
repnz
sbb
xor
out
cltd
aas
in
jo
xor
mov
pop
jb
rol
mov
aam
pop
pop
or
or
imul
stos
fimull
push
rcrb
jp
cmp
leave
jb
roll
or
mov
push
rcrb
adc
xor
subb
pop
repz
outsb
lret
loop
imul
mov
push
imul
idiv
jecxz
cmpsb
lret
popa
lret
icebp
mov
sti
hlt
aad
aam
enter
ffreep
xchg
xchg
xorb
inc
lcall
call
sub
mov
mov
lds
imul
in
mov
cli
mov
push
dec
sub
popa
mov
mov
jp
testl
mov
add
or
push
dec
jecxz
add
cmp
scas
cltd
mov
sub
test
mov
mov
push
xor
mov
adc
ds
enter
pop
sbb
stc
cmp
sub
sbb
out
out
into
shll
inc
call
scas
es
and
jg
add
or
out
jnp
mov
jb
mov
stos
lods
inc
daa
ret
inc
lahf
sbb
fbstp
in
repz
sbb
mov
mov
popa
or
fldcw
lock
sub
dec
pop
sub
and
push
fbld
jle
cmpsl
cmpsl
rclb
insb
pop
mov
aam
xor
or
pusha
leave
sbb
sbb
pop
inc
js
dec
aas
bound
inc
jle
in
cwtl
je
or
pop
mov
iret
pop
cmp
pop
mov
pop
and
shll
pop
push
jg
xchg
imul
xor
add
icebp
lea
outsb
add
cmpsb
sbb
dec
arpl
pop
dec
pop
jno
outsb
dec
outsb
pusha
push
es
sub
xchg
out
jmp
jge
pop
xor
add
stos
fnstcw
daa
mov
mov
cmp
cmpsb
mov
mov
cmp
mov
pusha
std
into
sub
jo
or
cmp
popa
jg
sub
mov
fidivs
pop
push
cltd
jmp
das
add
add
out
inc
mov
pop
ljmp
jbe
lcall
fistpl
xchg
cmpsb
in
and
ja
outsb
mov
lcall
push
enter
fidivrl
test
out
sub
sbb
loope
in
mov
xor
cmc
mov
push
xchg
sub
dec
add
sbb
iret
enter
cli
and
shll
scas
xor
jb
sub
mov
or
push
sub
jbe
outsl
pop
mov
fsts
sahf
aam
ret
cwtl
add
and
mov
dec
adc
jp
jno
mov
mov
or
xchg
sbbb
xor
jecxz
in
push
xchg
pop
js
loopne
lret
fldenv
iret
ret
sbb
push
clc
out
dec
jle
aad
mov
movl
stc
xor
add
push
and
mov
scas
jge
push
adc
jmp
sbb
scas
push
ret
jo
lods
mov
fidivrs
adc
push
dec
add
fisubrl
jbe
test
mov
sub
adc
test
gs
sahf
mov
cmp
pop
mov
outsl
sbb
out
adc
sbb
sbb
add
pop
fistpl
adc
pop
out
xchg
js
loop
pop
movsl
subb
xor
and
push
adc
call
sbb
shll
ss
jae
shlb
pop
fimull
push
sbb
sub
sub
pop
and
in
xchg
or
jle
cwtl
sarl
cmp
jmp
or
andb
adc
adc
stos
std
jb
lods
fldt
into
repz
or
pop
jle
outsb
outsl
and
ds
shlb
fbstp
movsl
addb
gs
lret
mov
cs
mov
add
int
xchg
in
cmpsb
dec
out
xor
jl
stos
and
rorl
jbe
sbb
pop
cmp
mov
fstp
cld
div
fsubs
add
out
and
pusha
mov
cmp
sub
mov
ret
incb
push
fsts
jg,pn
pushf
pop
add
xchg
dec
in
xor
inc
lret
mov
jp
je
mov
repnz
sahf
inc
icebp
je
fldcw
sarb
je
jno
jmp
test
adc
sbb
push
adc
ficompl
xor
inc
icebp
loopne
xchg
fimuls
add
xor
lahf
sarl
test
in
mov
pop
adc
mov
rorb
shl
es
inc
movsl
ds
dec
push
out
pop
fsub
stos
clc
icebp
movsl
pop
adc
nop
xor
test
dec
int3
push
scas
repnz
imul
cmp
mov
rol
mov
es
aaa
icebp
jmp
insl
mov
xchg
mulb
push
and
mov
jmp
sub
push
gs
test
sahf
sub
outsl
daa
mov
xorb
shlb
cmp
call
jp
imul
aad
stc
jle
bound
jb
sahf
loop
or
cmp
pop
scas
xchg
and
stos
mov
xchg
je
sbbl
jl
jo
jle
mov
push
test
mov
mov
jmp
mov
mov
or
nop
or
test
dec
jle
mov
cs
out
inc
ss
adc
loop
mov
into
shll
add
and
pop
insl
jo
jns
lds
mov
sub
ja
mov
mov
or
pushfw
rcr
mov
fstpt
cmpsb
xchg
cld
or
cmp
and
xor
icebp
mov
idiv
dec
rorl
aad
jne
jne
mov
sub
mov
xor
dec
into
shll
call
dec
addb
adc
add
lahf
dec
jbe
stos
mov
and
push
popa
xchg
es
and
test
cmp
push
jl
scas
jb
adc
dec
aaa
orl
mov
test
mov
and
insl
mov
dec
push
pushf
push
adc
pusha
in
inc
push
imul
movsl
jp
adc
insl
subl
leave
jo
cli
in
insb
sbb
fisubs
xor
js
sbb
jns
shrl
test
push
add
and
dec
ret
lds
or
call
std
add
aaa
imul
mov
mov
movsb
adc
repz
sbb
xchg
or
cld
std
ja
je
and
sub
gs
lahf
pop
push
push
ds
in
subl
imul
repz
roll
mov
jecxz
mov
add
jecxz
cmpsb
cwtl
in
dec
lds
jle
pop
adc
adc
lret
les
out
mov
xchg
test
or
xchg
test
xor
sub
addb
cmpsb
mov
mov
call
jp
aas
and
jae
mov
xor
adc
lods
inc
adc
xbegin
jb
test
bnd
adc
enter
dec
xchg
mov
mov
xor
or
and
out
mov
lret
and
add
fimull
mov
dec
mov
rorb
das
mov
int3
sbb
push
data16
loop
push
xor
mov
mov
aaa
imull
icebp
in
mov
sbb
and
jl
xor
add
mov
push
stos
aam
divl
mov
push
jge
sub
mov
lret
push
jmp
shrl
lcall
push
sbb
mov
push
add
cld
lods
in
jbe
cmp
rcl
mov
xchg
in
push
sbb
fdivr
add
sub
ficoml
loop
iret
sahf
mov
pop
scas
adc
push
sbb
ret
push
mov
inc
dec
adc
and
int3
adc
sbb
mov
stc
addl
pushf
addb
aas
and
test
ss
mov
in
jge
dec
mov
icebp
js
jg
out
or
jp
stc
mov
sbb
ss
mov
inc
cmp
mov
xchg
addb
sub
fstpl
sahf
add
enter
leave
jae
sbb
gs
ds
ljmp
sbbl
popa
bound
dec
inc
sbb
shl
mov
dec
mov
jp
sbb
fnstenv
mov
mov
test
outsl
popa
stos
add
mov
mov
jno,pt
inc
adc
adc
aas
push
aas
insb
push
or
mov
add
ljmp
xchg
and
push
xor
lock
push
repz
xchg
jae
adc
adc
sti
pop
sub
pop
lret
loope
mov
pop
dec
adc
cmp
xchg
icebp
push
jle
xlat
or
jmp
test
icebp
sti
repnz
loope
das
sub
aad
fwait
ds
jbe
jp
cmp
sbb
lahf
adc
adc
dec
push
mov
adc
pop
push
pop
or
popa
movsl
jmp
repnz
xchg
ficoml
cmp
data16
mov
mov
in
imul
stos
mov
and
lahf
mov
inc
insb
lock
push
inc
loopne
inc
push
cmp
loopne
lock
icebp
jne
and
xchg
aam
cmpsb
insl
sub
pop
xchg
pop
or
cmc
das
dec
xchg
adc
push
mov
loop
int3
xor
add
mov
js
stos
and
mov
cli
cmp
sub
xor
aad
jnp
push
dec
inc
or
push
bound
imul
fs
mov
ljmp
jno
call
pop
test
pop
xchg
in
jbe
mov
inc
scas
sti
imul
stc
mov
ss
fucomi
imul
iret
dec
mull
xor
push
loope
pop
les
dec
mov
adc
and
das
rcr
xchg
xchg
push
les
or
inc
mov
sub
add
hlt
movsb
or
cli
xchg
jbe
dec
dec
call
in
dec
jg
movsb
jnp
pop
addr16
ljmp
inc
push
pop
loopne
xchg
dec
mov
je
cwtl
push
mov
and
sti
inc
test
fsts
sbb
and
jns
cmpsl
adc
push
sub
stc
or
sbb
aad
pop
inc
insb
xchg
mov
ljmp
mov
xchg
std
pop
or
rclb
aaa
imull
cmpb
add
xchg
sub
fisubrs
or
inc
xchg
repz
xchg
and
jmp
mov
push
or
inc
mov
in
sti
xor
jecxz
inc
xchg
cmp
push
test
repz
xchg
jo
pop
cmp
js
inc
rolb
jo
push
lcall
aaa
lret
mov
mov
mov
popf
mov
call
xchg
aas
lea
repz
push
outsb
int
xor
icebp
cmp
cmpsb
lahf
sbb
adc
dec
test
jb
pop
int3
mov
repnz
mov
fldt
pop
out
imul
repz
xor
js
jo
addl
inc
in
ljmp
les
cwtl
inc
cltd
data16
push
mov
add
mov
cmp
xchg
cwtl
frstor
mov
cs
js
push
jno
popa
pop
adc
xor
shr
adc
push
jnp
push
or
sbb
ljmp
clc
imul
xor
mov
mov
sahf
jns
push
stos
xchg
stos
rorl
inc
incb
pop
cmc
imul
fcom
stos
lahf
rcll
jb
rclb
cld
sub
loope
sub
inc
lcall
pop
adc
inc
ret
popf
divl
mov
insl
sbb
std
jp
xor
mov
pushf
fiaddl
lds
sbb
pop
xchg
push
push
or
cmp
fcoms
popf
cmp
xor
add
add
adc
add
xchg
inc
xchg
push
rcrl
int
test
out
push
jg
gs
sbb
mov
fiadds
push
rcll
sub
repz
das
pop
push
mov
fistpl
fucom
int
push
cmpb
addl
push
adc
cmpsb
ja
xchg
stos
ss
jnp
es
mov
inc
and
into
mov
insb
cmpb
push
xchg
subb
push
jnp
mov
xchg
aad
mov
add
sbb
jnp
cmp
jno
jno
dec
ret
mull
dec
ja
jmp
inc
jnp
xchg
fimull
leave
cmp
loop
ljmp
sbb
daa
test
sbb
add
inc
jge
cli
out
jb
ss
enter
xchg
mov
sub
add
repz
mov
fildl
pop
cmpsl
and
xor
enter
loop
xor
jmp
addr16
mov
mov
push
pop
mov
and
sub
mov
or
movsb
mov
ds
subl
pop
sbbl
dec
imul
movsb
dec
jne
or
es
aas
es
dec
andl
les
imul
inc
and
inc
cwtl
push
push
pop
jne
repnz
fsubr
mov
xchg
inc
insb
lcall
lret
pop
xchg
pop
arpl
mov
sbb
dec
inc
push
dec
mov
stc
add
mov
inc
jno
or
ljmp
pop
mov
add
inc
push
mov
imul
push
pop
or
test
pop
imul
push
shrl
sahf
imul
ss
jo
mov
adc
sub
call
mov
loopne
xlat
mov
lcall
rcrl
fnsave
and
or
cmp
adc
repnz
xchg
mov
cmp
mov
lds
push
jbe
or
push
mov
nop
fnstsw
mov
add
pop
sti
xor
lds
mov
fs
jmp
dec
push
xor
lock
xchg
and
loop
inc
jnp
scas
mov
dec
sub
jmp
stos
pop
out
es
fs
jle
dec
mov
dec
aad
sub
dec
xlat
stos
sbb
iret
lods
hlt
mov
addr16
xor
stc
jnp
cmp
and
mov
xor
outsb
xor
adc
out
mov
xchg
inc
fidivs
xor
sbb
outsl
push
xchg
pop
fs
and
enter
mov
pop
out
mov
xchg
gs
aam
cld
loopne
inc
cmc
push
jb
adc
inc
mov
jmp
out
and
insb
js
ljmp
inc
mov
push
sbbl
test
mov
fs
lahf
andl
out
inc
jbe
leave
sub
test
push
push
jo
sbb
push
pop
or
orps
aas
and
std
push
dec
add
adc
std
or
popa
jmp
shrb
adc
xlat
int3
mov
sbb
adc
int
pop
jnp
cmp
or
movsb
outsl
jbe
lea
xchg
xchg
test
fidivrl
jo
bound
cmpsl
adc
inc
and
repnz
dec
and
cmc
pop
fmul
jno
or
popl
out
subb
dec
adc
aam
aam
xchg
sub
adc
pop
push
nop
insb
pop
fistpll
js
sbb
mov
in
aam
lret
pop
xchg
sub
aaa
decl
cmc
out
dec
mov
mov
xor
rcl
pop
push
sbbb
in
xchg
jo
aaa
mov
rorl
pushf
xor
jae
dec
or
imul
sbb
adc
jecxz
repz
aad
sti
inc
add
sub
je
xlat
and
ljmp
leave
aas
lods
into
mov
add
fs
pop
push
ret
clc
shlb
add
push
add
in
push
sbb
xchg
or
popf
and
stos
or
jle
push
stos
fisttpll
jnp
sub
imul
mov
mov
mov
lods
dec
adc
or
push
std
orl
test
pop
inc
xor
inc
shlb
pop
mov
movsl
repnz
push
pop
xlat
stos
iret
mov
iret
jl
sbb
cmp
cmpb
pop
cmp
movsl
dec
pop
outsb
push
mov
sub
sbb
xor
mov
sarb
dec
addr16
inc
dec
add
pop
test
push
add
arpl
pop
je
shl
sar
or
jns
jo
dec
cmpsb
rolb
pop
jp
adcb
mov
push
and
ret
nop
or
cwtl
push
fs
xor
and
inc
add
xchg
inc
mov
adc
into
xchg
jle
in
ret
push
pop
pushf
mov
scas
bound
inc
cmp
cmp
add
ret
ljmp
into
jecxz
arpl
xor
pushf
mov
sbb
or
lret
ljmp
cmp
fwait
and
fldenv
aaa
ret
lods
repnz
xor
ret
sub
fidivs
pop
fnstenv
push
lcall
lret
inc
sahf
mov
push
sub
lea
shrb
div
adc
jbe
and
xor
sub
push
in
mov
pop
mov
and
cmp
xchg
mov
lea
and
jecxz
pop
mov
adc
and
cmp
cmpsb
jl
inc
bound
fildl
lods
adc
test
cmpsb
icebp
shlb
jbe
jl
mov
push
test
dec
xor
mov
cmpsl
add
and
icebp
jge
sub
inc
js
test
je
sbb
jns
imul
xchg
or
idivl
fidivrl
mov
popf
divl
mov
cs
test
imul
adc
sub
adc
clc
int3
adc
cld
adc
xor
pusha
add
cli
mov
sbb
cmp
sbb
xor
cmp
inc
mov
in
jg
in
mov
shrb
xchg
cmp
xchg
inc
pop
icebp
and
leave
cld
ljmp
js
cmpsl
and
pop
mov
jmp
rclb
lret
mov
mov
lcall
xor
xchg
shlb
add
jns
add
pushf
push
sahf
xchg
pop
addr16
fistpl
cltd
adcl
std
fmul
mov
mov
andb
jno
xchg
inc
stc
mov
int3
out
test
xor
pop
scas
pop
es
push
aad
mov
ret
adc
or
outsl
cmp
push
xor
orl
jg
adc
pop
inc
rcrl
lcall
pop
pusha
test
fwait
repnz
push
inc
jne
add
mov
sbb
insl
mov
xchg
mov
call
popf
in
aam
testl
std
scas
adc
jnp
lahf
aad
iret
or
out
xchg
dec
jae
lcall
push
shll
cltd
pop
repz
cmc
stos
cmp
ds
lret
stos
aam
ret
rcrb
inc
lods
push
dec
mov
push
inc
in
into
addr16
add
test
adc
dec
cmc
out
cld
cwtl
leave
mov
nop
ret
inc
mov
aad
js
loope
xchg
dec
and
bndstx
pop
sbb
and
inc
mov
or
cmpsb
dec
sub
lahf
into
xchg
ja
dec
loope
mov
aaa
fsubs
je
push
inc
gs
mov
and
aaa
jo
adc
ret
cmp
jae
jno
xor
arpl
xlat
in
cs
daa
mov
lods
lds
scas
jp
cmpsb
pop
nop
stc
xchg
ljmp
sbb
scas
sbb
mov
cmp
mov
xor
pop
stos
popf
adcl
cmp
mov
pusha
xor
loope
xchg
jmp
mov
out
push
jge
and
stc
xchg
fisubrs
sbb
push
adc
in
pop
js
mov
mov
and
or
mov
in
inc
popa
dec
arpl
add
push
cmpsl
mov
aas
test
aam
adc
leave
mov
pop
add
mov
lahf
sbb
mov
icebp
add
add
or
in
cli
cli
pop
data16
mulb
mov
sbb
daa
push
notl
sub
adc
add
mov
cld
inc
and
repz
inc
add
cmp
imul
cld
push
cmpsl
cmp
pop
or
jmp
dec
xchg
movsb
repz
sti
pop
fcmovnu
xchg
lods
iret
sahf
iret
inc
imul
xchg
cltd
mov
xor
push
pop
fcmovnu
lret
jbe
inc
pop
adc
sahf
negl
jnp
push
imul
rcrl
imulb
jg
sti
je
ja
sbb
fwait
dec
lods
ficoms
jb
and
mov
loopne
mov
cld
test
xchg
mov
add
xlat
jno
fcmovu
add
bound
push
push
dec
inc
sbb
sub
int
arpl
fbld
out
movsb
mov
cli
and
dec
jae
xor
xor
into
push
sarl
xor
or
pop
movsb
stc
sub
push
pushf
dec
movl
pop
dec
add
or
jne
dec
jg
sbb
dec
ss
stc
rcr
ret
adc
push
bound
pop
sub
aad
stc
push
add
cmp
test
push
fcmovu
mov
xor
lea
xorl
test
pop
stc
dec
aad
fwait
xchg
gs
aam
xchg
stos
test
stos
ret
cmp
outsb
int
popa
dec
dec
out
pusha
es
jne
mov
add
xsave
bound
lock
call
cmc
int
pop
xchg
lds
loope
sbb
add
call
mov
insl
stc
cmpl
repz
inc
fwait
adc
push
rorb
lret
shll
call
addr16
lock
fistps
fidivl
adc
mov
addr16
push
cmp
outsb
loope
cmpb
nop
cmp
mov
cs
and
cmp
pop
xlat
and
sub
out
in
mov
cmpsl
add
inc
pushf
imul
fs
sbb
sub
cmpl
sbb
cs
push
sti
mov
int3
ror
sub
pop
test
leave
pushf
in
mov
rolb
inc
sub
sub
and
lea
out
pop
cs
ret
jb
es
xor
mov
add
adc
movsl
cld
in
add
notb
or
notl
inc
cmpsb
mov
call
sbb
insb
or
aas
push
ficomps
xchg
pop
inc
inc
jecxz
push
test
lcall
inc
or
imul
aaa
lahf
ret
repnz
push
cmp
movsb
aaa
dec
xchg
pop
inc
jne
mov
jo
sbb
movsb
xchg
incl
fwait
int3
push
ljmp
jmp
lods
test
hlt
jecxz
cld
xchg
pop
das
out
pop
xlat
jnp
mov
pop
inc
mov
pop
out
in
xor
or
mov
addr16
shll
and
into
ror
push
cwtl
aam
ret
push
push
addb
cmp
mov
outsl
jae
xor
push
lahf
jno
cmp
or
nop
lea
jmp
lret
adc
imul
sbb
pop
pop
test
mov
test
and
shl
mov
or
push
add
mov
ret
imul
arpl
shl
lahf
cmp
adc
aad
ret
repz
test
push
push
add
cmpsb
nop
mov
rolb
cs
pop
push
subl
lods
decl
imul
stos
jno
and
sti
mov
cli
insl
mov
icebp
lds
mov
fcomps
call
sahf
mov
lcall
sub
mov
or
push
xorb
scas
jmp
mov
mov
call
cs
in
test
sbb
push
imul
or
in
les
ret
sbb
es
jae
sub
push
in
bound
nop
or
jmp
aas
xor
push
xor
mov
lret
sub
outsb
add
in
repnz
xchg
fbld
repnz
jne
repz
lret
xor
add
sub
pushf
lahf
pusha
daa
inc
dec
jno
push
in
testb
mov
dec
mov
push
leave
jge
mov
adcl
out
std
aas
insl
dec
js
lods
push
aas
cs
mov
jb
xor
leave
mov
xor
jge
xchg
adc
and
mov
je
ljmp
jmp
adc
aam
stc
ja
mov
arpl
shrl
rcrb
jnp
xor
jne,pt
pop
js
mov
jno
scas
repz
lock
test
dec
xchg
push
insb
pop
pop
jb
js
leave
mov
inc
in
mov
jl
sbb
and
out
pop
push
popf
insl
inc
sbb
and
std
add
xor
mov
cmc
stos
inc
mov
addb
pop
rcl
hlt
mov
sarb
test
sahf
lret
mov
push
add
aam
lcall
jecxz
dec
and
push
adc
sarl
leave
jne
xchg
mov
push
out
das
fisubrl
mov
sbb
push
jge
and
or
fcmovbe
mov
fcmovnbe
daa
pop
and
sbb
xchg
mov
pop
xchg
das
inc
push
andl
ret
inc
mov
ljmp
push
mov
mov
xor
mov
sbb
and
jo
mov
rorl
or
xchg
pop
push
pop
movsl
call
rol
fidivs
subl
mov
ret
loope
stc
stos
xchg
and
push
inc
mov
dec
cmp
xchg
sub
ja
add
adc
push
pop
cwtl
shlb
push
pop
jle
sbb
push
mov
inc
push
add
in
shr
cwtl
outsl
rorb
les
lock
jne
xor
add
mov
mov
jmp
mov
ret
push
pop
xlat
fucomp
cli
addb
cmp
push
mov
cwtl
mov
push
cmp
loopne
pop
jle
sti
clc
sub
jnp
cmp
mov
mov
cmp
cwtl
adc
jns
sti
out
push
xchg
cmp
pop
cld
imulb
pop
jb
adc
pop
mov
pop
mov
dec
arpl
add
icebp
imul
frstor
pop
bound
add
adc
jb
fimuls
outsl
sub
pop
div
jmp
leave
movsb
fidivrs
mov
jmp
pop
sbb
mov
pop
adc
xor
and
test
xchg
adc
pop
mov
pop
or
mov
lock
pop
cmpsl
push
jl
push
cmp
jnp
scas
movsb
add
cmpsl
xor
cmp
js
incl
loope
in
add
aaa
mov
lods
pop
lods
or
scas
push
mov
test
loopne
push
mov
sbb
cmc
cmp
xor
push
mov
in
adc
bound
mov
mov
out
sbb
sahf
push
inc
je
loope
bound
cli
push
or
adc
adc
dec
cld
adc
adc
shl
push
lock
jbe
cmpsb
dec
addr16
and
xchg
xor
push
fstpt
mov
mov
cmc
das
sbb
sub
push
inc
jns
mov
mov
jmp
push
daa
cltd
aam
sub
sbb
sti
pusha
dec
push
sahf
pop
lods
outsb
cld
fildll
dec
sbb
das
sbb
pushl
fwait
inc
leave
enter
enter
xor
les
js
aam
xchg
adcl
push
outsl
push
shlb
ljmp
andl
xchg
les
cmp
xor
sti
leave
mov
adc
and
cld
das
js
pop
sub
mov
fisubs
dec
sarb
push
and
mov
scas
int3
ret
and
jae
insl
inc
cld
jb
addr16
and
sub
lcall
push
push
sub
pop
push
out
and
fs
cld
or
push
lds
or
imul
mov
xchg
jbe
xchg
mov
mov
inc
mov
outsb
adc
lahf
aas
lahf
daa
movsb
or
sbb
jge
jmp
cmpsl
cld
or
into
ret
adc
inc
js
ret
fildl
call
mov
pushf
sbb
gs
or
xchg
jecxz
cmc
lret
pop
ja
mov
iret
fnstenv
cmp
jno
and
into
fsts
push
iret
jmp
inc
dec
add
ror
call
cmp
jecxz
lds
jle
ja
subl
in
xchg
push
dec
jle
mov
sub
jb
mov
shrl
push
inc
das
sbb
mov
fistps
dec
pushf
gs
enter
call
testb
mov
adc
xor
orb
fwait
jg
pusha
sbb
bound
fs
aaa
imul
xor
mov
xor
push
test
pop
loop
xor
adc
out
jne
push
or
inc
out
imul
ja
xchg
dec
adcl
rorb
or
out
into
test
ja
ds
gs
subb
mov
aas
sub
cmpsb
fnstcw
and
inc
mov
stc
inc
jg
movd
das
xor
daa
xchg
or
xchg
cmp
into
mov
enter
dec
mov
scas
push
jle
or
pop
jae
adc
add
sbbb
aaa
cmp
mov
sti
loop
ljmp
out
ret
inc
xchg
lods
sbb
dec
xchg
sbb
fildl
dec
adc
lods
int
icebp
insl
outsb
inc
mov
add
mov
xchg
daa
psadbw
pusha
pushf
mov
pop
sbb
mov
mov
hlt
add
add
ret
jg
int
inc
lds
sub
inc
lret
dec
mov
xchg
and
xor
jb
jmp
faddl
fldl
adc
xor
xchg
mov
sbb
insb
push
push
xchg
ljmp
push
jne
cmp
jo
pop
mov
jmp
dec
dec
stc
lret
mov
cmpb
out
out
xor
outsl
mov
mulb
das
mov
mov
stc
scas
sti
and
ss
jae
andl
mov
cld
dec
cli
pusha
aam
push
inc
adc
mov
push
add
mov
adc
ljmp
inc
das
sub
cmp
add
dec
inc
scas
ret
movsl
and
cmp
sbb
int3
bound
testl
lret
add
or
sbbl
pop
stos
clc
mov
push
aam
push
mov
xor
add
ret
inc
adc
out
cs
das
jnp
cmpsl
pusha
mov
cmpsb
mov
push
mov
cli
stos
inc
push
and
test
addb
jns
push
imul
pop
inc
test
sbb
dec
push
lahf
jo
sbb
dec
mov
int
loope
gs
jmp
cmp
icebp
sub
test
jno
es
outsb
sub
mov
stos
pop
inc
and
jge
jo
stc
and
mov
mov
and
lret
xchg
movsb
mov
lods
sbb
shld
and
cwtl
sbb
add
mov
test
nop
jno
add
dec
mov
pop
stc
test
pop
subb
iret
leave
fsubrs
lahf
aad
adc
xchg
jecxz
add
mov
pop
jecxz
mov
push
lret
stos
jnp
lret
iret
popf
repnz
or
mov
stos
nop
add
je
xlat
mov
lahf
fxtract
paddd
scas
call
adc
sub
pop
sbb
sbb
sub
test
dec
cli
cmp
sub
fwait
mov
and
inc
xor
repz
pop
lock
or
out
insb
rcrl
dec
rorb
dec
arpl
mov
push
jmp
sti
pop
ss
flds
lock
call
sbb
mov
pushf
and
push
mov
aas
push
mov
jns
xlat
ja
mov
dec
jmp
addb
pop
fdivrl
les
cmc
mov
push
and
lret
dec
dec
pop
movsb
dec
mov
jge
cmp
test
cmp
jo
push
mov
sbb
inc
add
mov
out
sarl
or
pop
mov
ljmp
jle
mov
push
mov
ja
jp
ficoms
out
mov
pushl
lahf
cmpb
testb
negl
or
xor
inc
mov
dec
or
cmp
loop
aad
mov
fsubrl
jbe
cli
aad
lds
inc
jmp
sub
popf
loope
mov
scas
push
mov
add
mov
ja
scas
jmp
mov
test
cmp
in
sbb
jp
aas
lea
int
cmpsb
cwtl
pop
in
aad
cmp
sti
push
shl
add
or
push
loopne
icebp
dec
push
mov
jmp
mov
and
insl
cli
dec
pop
sub
jno
xor
push
cli
mov
inc
add
aad
push
dec
mov
enter
int
arpl
adc
sub
cmpl
fimull
push
push
mov
jnp
jnp
rcrb
out
xchg
cmp
fbstp
mov
cld
push
mov
xor
mov
in
and
add
pop
sub
addr16
xlat
popa
cmp
lret
xchg
mov
mov
scas
dec
into
int3
xchg
out
sub
cmp
outsl
mov
shlb
fidivl
cmpsl
and
in
daa
addr16
xor
and
sub
adc
imul
pop
popa
push
and
rolb
mov
push
cltd
mov
sub
or
stos
push
jecxz
test
xor
sub
out
mov
dec
cld
int
pop
dec
lret
sbb
insb
in
and
subl
jp
addr16
ret
and
cmpsl
pop
jnp
repz
out
addl
sbb
push
ret
cmove
mov
inc
outsl
stos
mov
bnd
cmpsl
push
push
mov
xor
mov
and
aad
ja
fldcw
inc
cmp
dec
in
xchg
jo
cs
mov
pop
mov
daa
insl
imul
aad
gs
es
push
clc
mov
dec
mov
mov
pop
push
lret
push
xchg
adc
shll
xchg
jle
sbb
push
out
addps
pop
movsb
lcall
push
push
les
lea
xchg
call
loop
jge
or
arpl
call
dec
cmp
sbb
adc
movsl
jae
ljmp
cmp
in
jg
int
dec
scas
rcrb
fmuls
lret
pop
cmc
inc
add
jbe
popa
or
xor
ss
adc
sarl
das
stos
inc
xchg
fimull
test
jmp
lahf
or
pop
stc
pop
push
std
stc
int
nop
sub
adc
adc
pop
pop
dec
lahf
or
xor
fdivrl
pop
jp
adc
and
test
sbb
das
pusha
loopne
adc
lods
fstps
insb
sbb
jbe
shll
push
sub
data16
adc
or
sub
faddl
sti
cltd
inc
lea
adc
ss
in
cmp
add
inc
push
arpl
and
subl
loop
push
popf
lcall
adc
es
ljmp
imul
into
int3
lcall
arpl
mov
repnz
sub
mov
inc
insb
jae
mov
lods
cmp
loope
fs
dec
out
rorl
fdivrl
sub
pop
loopne
rolb
jne
test
push
vpunpcklwd
push
xor
enter
inc
popl
in
ret
es
add
out
aas
cli
push
mov
ja
dec
mov
mov
les
leave
sub
mov
xor
push
sub
mov
jle
xchg
ss
js
xor
jl
cmp
sub
lret
adc
lret
ljmp
cmpsl
stc
outsb
dec
dec
and
loop
out
aas
and
mov
aad
fldl
and
daa
int
xchg
add
retw
pop
inc
mov
fbstp
cmp
sbbl
cmpl
sub
or
push
mov
fsubr
and
xor
mov
mov
repnz
sub
sbb
fdivrs
pop
shrb
dec
xchg
or
imul
fistps
idiv
push
mov
sub
negb
pop
push
lahf
mov
adc
jns
movsb
xor
test
adc
xor
insl
lods
ja
cwtl
out
cld
ljmp
sub
push
cmp
dec
inc
movsl
inc
lock
ja
mov
jo
xchg
repz
aad
sub
pop
adc
dec
mov
sbb
daa
pop
dec
incb
fdivrl
sbb
sbb
repz
in
icebp
out
or
lock
pop
loope
add
leave
mov
xlat
scas
lret
test
mov
scas
stc
ret
jg
bound
push
iret
sub
or
rcrb
add
mov
pushf
mov
int3
stos
mov
out
subl
jo
add
cmpsl
mov
xchg
out
ljmp
loop
xlat
rcrb
jge
pop
lods
mov
dec
jmp
test
xor
inc
mov
push
adc
mov
xor
movsb
aam
aas
push
sar
push
das
xchg
fcoms
pop
pop
mov
mov
mov
fimuls
push
ficompl
sbb
mov
xor
scas
mov
test
imul
es
jbe
iret
sub
enter
and
sbb
add
into
push
and
mov
fwait
in
dec
stos
fwait
push
daa
sbb
insb
adc
je
mov
lahf
dec
mov
test
sbb
inc
mov
movsl
pop
mov
pop
test
ret
mov
loop
mov
push
insl
push
je
mov
mov
popf
bound
mov
loope
mov
sbb
sarl
mov
jnp
cltd
and
int3
pop
pop
mov
daa
adc
lods
sbb
mov
cld
push
cmp
popf
shr
push
popf
push
test
xor
pop
jb
je
push
sub
pop
push
push
inc
jbe
add
test
push
jo
repnz
clc
add
mov
fsubrs
data16
adc
lret
loope
or
mov
out
adc
pop
popf
inc
je
andl
movsb
cltd
pop
push
sub
adc
jb
nop
andb
cmp
lahf
and
push
roll
aad
leave
mov
fsubr
fisubl
lcall
popa
xlat
into
mov
sbb
jg
and
xchg
fdivrp
lods
cld
sbb
jecxz
ja
dec
aam
jg
and
jno
cli
dec
ret
xchg
arpl
jbe
fstpl
aas
jb
add
js
lret
in
out
aas
dec
lret
push
outsl
insl
inc
sub
dec
fldenv
or
xchg
dec
mov
jne
jle
scas
aad
pop
lds
and
ljmp
mov
sbb
jae
inc
sub
cmp
add
data16
inc
loop
insl
mov
sarb
mov
cltd
ja
lods
xlat
push
stos
lcall
mov
xor
and
das
pop
cmpsl
imul
jg
ret
lahf
dec
adc
test
incb
sbb
jp
add
or
sub
ret
xor
fucom
pop
or
push
bsf
js
push
lds
or
aam
insl
inc
addl
cmpsl
mov
jecxz
dec
xchg
js
lods
pop
sub
mov
mov
arpl
mov
pop
inc
cmp
shl
adc
and
mov
icebp
fidivl
push
hlt
sbb
pop
ss
dec
addr16
lahf
adc
sbb
fisubrl
fimuls
sarb
mov
lea
dec
inc
pop
push
rcr
fs
pop
xchg
jne
sub
outsl
cmp
dec
or
fucomp
jp
subl
sbb
mov
cmpsb
jbe
adc
pop
cld
into
roll
add
mov
add
sbb
cmpsl
sub
int
xchg
and
mov
or
or
out
rcrb
cmpsb
movsl
jecxz
out
imul
imul
sbb
add
sub
push
sub
dec
sbb
sub
add
lcall
push
cmp
fisubrl
xorl
mov
dec
into
and
leave
mov
fstps
ljmp
xchg
jle
add
mov
test
pop
loope
icebp
pop
call
jg
and
adc
ja
sub
cmp
cmp
sub
mov
call
negl
mov
pop
hlt
rorb
mov
loop
jmp
sbb
dec
inc
call
pop
das
jnp
adc
jbe
mov
inc
adc
cmc
push
fldl
inc
dec
or
push
in
or
dec
ror
out
mov
stc
adc
mov
add
mov
push
jbe
push
rorb
out
push
mov
fisttps
subl
sarl
mov
arpl
push
fwait
std
cmp
loopne
shlb
pop
push
push
lods
push
push
test
push
subl
jp
dec
and
and
cmp
jnp
das
stc
pop
in
jle
popf
fs
add
sahf
dec
add
mov
int
test
test
add
pop
inc
xchg
popl
cld
adc
popa
repz
scas
pusha
imul
cmp
sti
inc
fistpll
into
sub
mov
xor
in
aas
adc
scas
cmpb
rcrl
ds
das
pop
pop
fidivs
and
mov
out
hlt
xor
pop
pop
push
ss
mov
sbb
fiaddl
adc
mov
call
mov
scas
pop
or
dec
push
inc
mov
mov
das
fwait
and
jl
sbb
sbb
insb
outsl
test
dec
jmp
cli
xor
in
jno
cmpsl
mov
and
lock
jmp
dec
xchg
stc
movsb
fstp
xchg
out
das
int
and
decl
popf
sahf
aaa
push
mov
icebp
pop
xchg
or
fidivs
repz
popf
jbe
mov
pop
sti
arpl
nop
cmc
ret
mov
cmp
mov
pushf
rcrl
mov
fistps
pop
jo
mov
push
outsb
adc
lds
pop
mov
ret
or
sahf
jg
inc
ficomps
mov
mov
mov
mov
sub
adc
push
mov
jae
ror
gs
jns
add
fadd
or
hlt
in
sub
lcall
leave
jo
jle
dec
push
int
fldcw
and
ficoms
movsl
push
sub
roll
hlt
and
adc
inc
cld
cmp
sti
cmc
decb
mov
scas
jnp
in
addr16
xlat
int3
mov
dec
xor
sbb
cwtl
subl
dec
int3
inc
adc
out
out
arpl
mov
hlt
pusha
call
js
sbb
xchg
sbb
pop
roll
stos
inc
mov
movsb
sub
inc
cmc
in
sub
outsb
flds
cld
nop
xchg
out
inc
scas
pop
ds
movsb
xchg
stos
dec
mov
sbb
je
imul
push
mov
mov
int3
jle
mov
mov
jo
daa
mov
adc
mov
std
mov
lods
mov
ret
sub
sub
sbb
push
push
in
andb
dec
lods
xlat
xor
outsb
leave
sahf
jb
fdivp
decb
push
pop
bound
cmpsl
sbb
pop
pop
jae
mov
stos
cmc
cwtl
mov
xor
dec
aam
push
sti
stos
xchg
dec
sbb
cmp
jg
out
push
mov
jge
push
xchg
pop
sbb
outsl
imul
push
xchg
iret
mov
loopne
loope
orl
imul
and
inc
xchg
push
mov
jmp
adc
std
xor
xor
lret
push
xor
inc
lock
xor
mov
fdivp
lods
xchg
cmpsb
int
mov
fidivl
shrl
add
pop
and
cli
cmc
fucomi
in
cmpsb
xor
dec
and
add
paddd
imull
es
inc
xorl
fcompl
inc
enter
cwtl
or
sbb
jge
cltd
sbb
mov
dec
add
xchg
scas
bound
test
popf
dec
dec
fstpt
jns
ljmp
cmc
arpl
aaa
ds
inc
inc
ret
lea
and
stos
jmp
push
jno
sti
subb
cwtl
insb
jo
popa
or
inc
out
ds
aaa
int
cld
mov
rcl
icebp
pop
sub
mov
popf
cld
push
lcall
xchg
cli
mov
cmp
mov
mov
div
jb
sbb
lret
ljmp
leave
mov
cltd
dec
dec
jbe
mov
gs
pop
daa
outsl
out
rcl
push
scas
stos
out
xor
insl
fisubrs
xor
daa
push
pop
outsb
xor
adcb
stc
test
fucomp
insl
pop
imul
sbb
popf
sbb
hlt
fisttps
insb
lret
scas
push
ljmp
dec
lea
stc
hlt
mov
cmp
sti
sbb
jg
lods
cmp
rcrl
scas
iret
ret
pusha
js
jne
xchg
and
or
push
add
jmp
inc
jo
lahf
pop
shrl
outsl
push
xchg
inc
sbb
rorb
fisubrs
aaa
sarl
adc
xchg
nop
sahf
jp
fsub
xchg
mov
xchg
push
lods
push
xor
jle
and
dec
inc
xchg
xchg
int3
jno
cs
bound
inc
lcall
mov
inc
lods
sti
loop
daa
mov
stos
pop
test
movsb
insl
push
jp
dec
mov
int3
shl
jb
scas
bnd
frstor
jno
jne
or
pusha
cmc
clc
xorb
pop
int
sbb
daa
js
adc
test
xor
jne
fdiv
and
jmp
push
xchg
lods
dec
addr16
and
aad
dec
mov
cwtl
sub
decl
mov
mov
mov
inc
movsb
nop
nop
sbb
mov
inc
cld
shlb
inc
mov
push
jge
popf
add
jo
out
push
nop
push
jmp
adc
test
out
aam
test
popf
mov
sbb
and
out
pop
push
jecxz
adc
xchg
cli
push
fistpl
dec
adc
xorl
push
cmp
aam
dec
or
jo
mov
aad
mov
sub
sub
pop
jae
mov
ds
and
faddl
inc
mov
pop
dec
stc
mov
cmp
mov
dec
mov
mov
repz
pusha
out
ret
or
loopne
pop
and
add
test
adc
ss
ss
xor
out
arpl
cmp
sub
std
mov
mov
cmp
mov
faddp
fdivs
cwtl
repz
fstpl
sbb
jo
lea
add
sbb
pop
fstpl
push
outsl
repnz
jg
pop
mov
inc
inc
nop
and
test
jne
pop
ss
in
sub
mov
sub
cmpsb
aad
bound
mov
mov
xor
dec
int3
pop
push
daa
or
jae
mov
adcb
cmp
mov
repz
rcrb
and
stos
mov
daa
fsubs
cs
push
sub
shrl
add
jb
fld
scas
into
xchg
mov
movsl
mov
sub
test
rcrb
mov
cmp
xor
jno
cwtl
and
push
or
jb
aaa
ret
repz
sub
ja
js
shl
xchg
outsl
and
push
mov
mov
sbb
or
add
inc
data16
sub
shlb
pop
and
shlb
cmp
repnz
jno
jnp
imul
adc
add
out
mov
pop
minps
scas
stos
in
aas
xchg
int
inc
push
inc
test
sbb
pop
push
inc
ljmp
push
ficoms
loopne
push
out
outsl
adc
and
testb
movsl
loope
ja
dec
jge
imull
xchg
jb
fdecstp
dec
cltd
mov
xor
jecxz
lods
jno
pop
pop
testb
dec
lcall
stc
adc
add
hlt
std
sbbl
xchg
repnz
add
adcb
stc
rcll
lds
dec
sub
jae
add
insb
or
mov
repz
popa
sbb
fsubr
jmp
push
movsl
inc
adc
adc
pop
mov
in
sub
cmpxchg8b
jle
adc
xor
jp
mov
cld
repnz
or
je
movsb
push
lret
push
loopne
add
jge
movsb
lods
ficoms
xchg
xor
mov
test
jbe
shlb
cmp
fcomp
jp
xchg
sbb
test
fnclex
jae
ja
or
add
or
leave
jns
int
xchg
jp
pop
sub
jp
jle
lretw
dec
push
repz
cli
dec
lods
lret
scas
and
xchg
mov
rorl
jns
roll
sub
shlb
fdivl
shrl
jl
pop
out
xchg
sub
ds
movsl
dec
xchg
cmc
repnz
repnz
pop
mov
rclb
testl
sti
loopne
loop
pop
into
mov
dec
scas
push
incl
mov
xor
test
jae
or
scas
mov
or
dec
ds
mov
inc
jbe
ss
dec
sub
mov
fwait
cli
add
ds
stos
fldt
imul
call
rclb
add
mov
mov
dec
inc
mov
jo
pop
push
lea
popf
or
adc
pop
sub
jle
push
movsl
orl
inc
out
enter
dec
es
int
bound
mov
fcoml
add
outsb
jno
sarl
inc
cmc
test
data16
fs
push
pop
in
push
mov
in
out
xor
aam
push
cmc
lcall
pop
or
xchg
outsb
scas
push
stos
out
cld
add
jae
push
lods
int3
adc
and
push
ret
pop
sbb
mov
dec
mov
imul
in
dec
push
push
int
ss
sub
js
mov
leave
icebp
pop
mov
outsb
js
inc
call
cwtl
lcall
rorl
mov
cltd
sti
jbe
fwait
jae
stc
out
out
mov
pop
imul
jb
inc
xchg
jg
in
mov
mov
dec
mov
and
insl
pop
mov
dec
dec
lock
mov
pusha
imul
sbb
dec
dec
xor
loop
rcr
adc
leave
inc
shl
iret
mul
add
and
sub
cmc
test
aam
add
xor
test
flds
mov
sbb
push
push
into
pop
mov
mov
repz
cmp
out
push
es
mov
addr16
test
insb
jae
jbe
xor
rcl
iret
inc
cmp
movsl
stos
xorb
mov
lds
adc
cmp
out
cmc
push
add
lcall
xor
ret
push
xlat
push
mov
inc
xor
jge
aam
mov
xorb
mov
out
or
pop
loopne
imul
add
je
pop
adc
stos
repz
pushf
int
stc
ljmp
jo
aaa
push
jg
push
jecxz
dec
orb
lds
sbb
xchg
jbe
jb
mov
test
lret
fistps
int3
mov
ljmp
pop
add
cmp
xchg
mov
ds
sub
scas
repnz
and
movsl
roll
cmp
pop
jl
jmp
orl
movsl
xor
mov
scas
sub
lret
shrb
sub
fwait
sbb
push
mov
inc
shrb
scas
into
xor
mov
adc
push
adc
mov
imul
xchg
xchg
shrb
test
add
xchg
add
pop
xchg
stos
cmp
into
mov
xor
add
dec
insl
or
pop
add
or
dec
cltd
rorl
ds
leave
dec
stc
sbb
stos
add
sub
or
cltd
inc
add
in
ss
pushl
mov
popf
xor
stos
cmp
pop
aad
push
imul
std
ljmp
mov
clc
mov
popf
mov
enter
xchg
sub
mov
push
jae
or
fbld
cmp
sbb
aas
xorl
or
xor
sub
daa
fs
mov
cmc
mov
iret
add
loopne
xchg
adc
push
xchg
inc
aaa
aas
inc
jbe
pop
mov
jle
jp
into
aas
cmp
ja
stos
shll
repz
arpl
mov
sahf
pop
leave
dec
repz
inc
ds
dec
add
add
push
add
ss
in
daa
shrl
rcrb
ret
repnz
jb
or
faddl
cmp
jge
lret
popa
push
mov
rcr
fbstp
pop
jl
or
rorl
xchg
push
ljmp
push
fsub
sub
push
xor
push
mov
inc
cmp
cpuid
call
inc
in
clc
pop
or
fwait
aas
mov
adc
loopne
leave
pop
xchg
cmpsl
rcl
jmp
andl
jecxz
lret
lea
add
xchg
xor
in
xchg
add
jge
loop
mov
stc
sbb
fsubrl
mov
push
daa
mov
xor
adc
mov
add
add
cmpsl
and
or
inc
push
pusha
scas
popa
pusha
rorb
inc
dec
cs
mov
and
int
test
add
cwtl
mov
mov
push
daa
std
pop
scas
test
in
movlps
xchg
adc
fs
fwait
add
clc
and
pushf
sarb
imul
xor
sarb
jg
js
sub
xchg
push
push
jb
pop
lods
push
sarl
data16
xor
fsubp
pop
pop
and
inc
pop
push
mov
gs
jae
negb
adc
stos
cmp
jnp
ss
out
pop
xor
push
insb
bound
insl
dec
sti
daa
popf
call
insb
mov
sbb
jge
push
test
nop
pop
enter
jb
sub
add
pop
insl
fwait
sbb
sub
sbb
and
adc
adc
mov
insb
pop
jp
dec
scas
out
mov
push
dec
lock
sub
xchg
sub
adc
push
mov
ds
fstps
sahf
in
mov
and
subb
mov
sbb
test
xchg
add
adc
xchg
enter
sbb
jo
adc
xor
jecxz
pop
inc
cmp
scas
scas
jns
adc
imul
in
sbb
lods
xor
mov
ret
fcompl
xchg
mov
sbbb
xor
adc
add
pop
shrb
dec
jne
sbb
mov
adc
and
sbb
inc
push
cs
and
hlt
xchg
xchg
pop
sbb
scas
jp
push
xor
inc
aad
pop
les
mov
stos
mov
xchg
xor
jle
mov
mov
xchg
or
dec
hlt
insb
imul
pop
shll
push
mov
and
pop
repnz
inc
add
sub
cmpl
xchg
inc
mov
sahf
inc
imul
testl
and
pop
fdivrs
in
hlt
in
andb
fnstenv
xchg
popf
hlt
loope
jbe
pop
stos
sub
cli
mov
daa
orl
push
fstpl
imul
std
jns
aaa
mov
push
mov
fmull
cmpsb
pop
loope
aam
arpl
and
sub
pop
or
rcrl
pop
or
lods
inc
dec
call
jae
jl
add
orl
xchg
xchg
mov
ds
hlt
test
adc
mov
rorl
add
cmpsb
mov
stos
adc
iret
lods
negb
or
inc
insl
cmpb
insl
ds
sti
xor
mov
sbb
jnp
inc
jns
stc
inc
pop
dec
lcall
jbe
add
insl
mov
mov
xor
sub
stc
int
mov
int3
loop
xor
out
shl
push
jne
xor
popa
popf
push
sbb
add
pop
add
subl
hlt
rcll
rcrl
push
or
adc
mov
pop
add
mov
in
sbb
or
dec
je
or
out
repz
test
jge
or
sti
lea
out
sbb
dec
dec
clc
jo
scas
rol
testb
lds
sbb
loope
cmp
and
dec
mov
and
and
jl
js
mov
jbe
mov
cmp
cmpsb
out
fstpt
mov
movsl
ljmp
cmp
lds
or
pop
aam
xor
les
neg
orl
or
push
lret
dec
frstor
fists
push
bound
lock
mov
inc
dec
mov
mov
fwait
jae
inc
out
aaa
pop
iret
ret
scas
mov
int
xchg
mov
inc
pop
mov
int3
es
inc
insb
ja
or
push
pop
andb
mov
sub
lds
lret
xchg
pop
gs
repnz
rclb
leave
push
mov
sbbl
mov
pop
and
fs
push
fcmovb
fldcw
sub
mov
inc
mov
fdivr
inc
xor
movsl
push
mov
pop
pop
test
xchg
out
jns
sti
lcall
dec
push
daa
repz
pusha
lock
pop
mov
add
gs
pop
sub
mov
xor
outsb
add
and
pop
jg
dec
lahf
bound
out
add
xchg
xlat
outsl
xchg
gs
repz
mov
js
mov
mov
stos
add
push
mov
loop
and
pop
in
imul
sti
mov
in
icebp
out
xlat
inc
sbb
cmp
mov
pop
mov
jg
dec
or
insl
nop
cmp
and
xor
in
adcb
rolb
jle
mov
xor
fwait
lds
in
inc
icebp
mov
in
in
push
jnp
test
push
xchg
pop
pop
mov
inc
mov
lods
mov
sub
xchg
mov
pop
mov
mov
sub
mov
leave
mov
mov
aas
outsl
push
jnp
bound
das
in
out
imul
push
flds
mov
rcrl
fnstcw
dec
lds
stc
inc
dec
add
lret
sub
insb
dec
xchg
adc
inc
mov
rorl
aad
hlt
pushf
imul
or
int3
arpl
cmc
out
or
dec
sahf
jecxz
mov
push
pop
xor
push
stos
and
scas
cld
add
mov
xchg
inc
addr16
shll
outsl
movsb
lcall
or
mov
pop
cmpsl
inc
xlat
pop
cltd
mov
xchg
mov
or
mov
jne
pop
lret
shlb
lahf
sbbb
enter
add
loope
fstps
and
out
xor
or
int
mov
mov
xchg
lret
mov
sbb
cmc
std
jno
sub
clc
sti
push
pop
sti
hlt
sbb
jg
shl
mov
cmp
fcos
sub
cmp
add
mov
in
lcall
mov
sbb
insb
sub
sub
pushw
outsl
add
xor
and
rclb
xchg
movb
pop
sub
call
inc
push
mov
xchg
loopne
xchg
cmp
sub
les
mov
lods
mov
rorb
or
aad
sti
sbb
int
dec
mov
pop
pushf
xlat
dec
test
push
push
movsl
imul
in
rolb
mov
cmp
mov
rcl
or
nop
insb
lock
xor
divl
out
rcrb
aad
lahf
cmpsb
dec
push
add
rorb
aad
mov
and
mov
adc
mov
ss
aam
pusha
xor
out
inc
das
push
repnz
mov
data16
hlt
mov
daa
out
addb
push
inc
jl
ds
imul
es
jmp
inc
push
jge
pop
mov
inc
add
fucom
mov
sahf
sub
pop
xchg
fisubrl
inc
mov
push
ret
add
jbe
push
aad
decb
stc
jns
jle
je
push
inc
ljmp
popf
outsb
push
push
dec
mov
mov
inc
pop
push
sahf
lods
mov
test
jne
mov
xchg
rcr
push
mov
lea
xor
push
pop
xchg
inc
loopne
loop
push
pushf
out
push
mov
enter
or
push
cmp
xor
inc
sti
xchg
xchg
lea
xor
mov
les
sti
icebp
jb
sbb
movb
inc
aas
mov
adcb
mov
push
test
out
test
clc
loop
lcall
push
cmp
inc
mov
and
xor
loop
out
jo
into
pop
arpl
dec
ja
arpl
stos
fiadds
sti
inc
les
push
push
xchg
jle
cltd
nop
dec
adc
push
rorl
call
jl
lock
aas
jge
inc
push
ja
or
test
jmp
dec
lock
mov
js
or
scas
xchg
sbb
adc
scas
je
jnp
repnz
xchg
push
mov
rclb
cmp
js
popf
adc
cmp
xchg
and
out
mov
pusha
mov
int
or
sbb
mov
int
mov
mov
testb
fwait
push
cmp
mov
inc
xor
pop
decb
jae
xchg
dec
mov
cltd
dec
sahf
insb
ror
dec
or
test
outsb
mov
jecxz
sahf
sub
icebp
inc
pusha
insl
inc
or
dec
or
pop
mov
in
cmp
cmpsl
cmpb
popf
fwait
ret
adc
push
inc
int3
mov
pop
dec
scas
mov
push
cmpsb
sbb
jmp
jecxz
mov
mov
add
dec
jecxz
dec
add
je
inc
cmp
ja
mov
xor
fnsave
xchg
sti
enter
xlat
or
push
rcrb
in
imul
loope
cmp
dec
sbb
adc
mov
das
movsl
lods
pop
add
enter
xchg
and
jnp
arpl
lret
out
clc
jmp
incl
sub
mov
mov
outsb
loope
sub
push
add
mov
sbb
pop
mov
scas
inc
sbb
mov
jbe
xor
sub
fcmovu
out
push
test
jae
mov
mov
and
push
popa
in
sub
mov
les
int
add
jno
add
inc
in
fwait
das
xor
sub
nop
fwait
or
call
inc
test
lcall
out
xor
addr16
and
test
mov
stos
lahf
test
xchg
lds
movl
push
adc
loope
and
insl
mov
lds
hlt
cli
mov
outsl
mov
xchg
repz
adc
mov
and
dec
pop
mov
aam
sub
sub
stos
imulb
fstpl
aaa
mov
outsl
jmp
pop
clc
ljmp
push
pop
cmpsl
pop
add
imul
xchg
cmp
sete
iret
sarb
lock
sbb
sub
pop
mulps
jle
adc
jo
nopl
xor
mov
je
mov
mov
adc
gs
sti
outsl
pop
imul
stc
xchg
ljmp
fdivl
push
adc
sub
inc
xor
js
add
or
add
idivl
xchg
pop
jns
scas
push
push
int
call
jnp
bound
adc
lea
jl
sahf
jmp
push
scas
push
sarb
jmp
add
arpl
lock
cld
sbb
ljmp
aas
enter
test
jae
dec
inc
imul
cs
je
in
cmpsl
sahf
sub
movsb
and
popf
jl
imul
mov
jecxz
jge
mov
ljmp
jae
add
dec
outsl
out
xchg
mov
pushf
sahf
cmp
adc
in
cmp
dec
fsubl
aas
lret
test
dec
icebp
ficomps
mov
mov
iret
sub
add
test
shr
cmpsl
xor
adcb
rolb
mov
mov
jnp
clc
sub
repz
jmp
lahf
std
test
jp
fwait
scas
pop
ret
les
mov
sbb
mov
mov
push
out
adc
cmp
cs
aad
neg
ja
and
and
out
cmp
sbb
aas
movsb
dec
sarl
out
ror
adc
adc
xchg
ficomps
sti
mov
xchg
adc
sub
imul
inc
sub
es
add
sub
mov
iret
xchg
cld
mov
xchg
inc
fisubrl
jmp
lret
divb
pop
bound
cmp
popf
fldcw
js
shlb
fistps
cmp
sub
ljmp
cmp
pop
pusha
jnp
sbbb
shlb
xor
das
aaa
sarl
sub
mov
rcl
pop
sub
fsubs
jbe
push
mov
pusha
adc
sbb
xor
dec
in
ret
out
loopne
jg
push
mov
xlat
insl
mov
mov
insb
dec
cmp
mov
ret
lods
stc
jbe
lcall
call
push
movsl
movsb
insb
aaa
xchg
movsl
cmpsb
insb
or
adc
pop
enter
jae
movsb
mov
fsubs
mov
scas
mov
push
xchg
sbb
and
cmp
andl
cltd
shll
or
jo
arpl
jl
movsl
aad
hlt
xor
in
iret
jmp
xchg
and
sarl
cs
push
pop
and
out
adc
add
mov
sub
dec
mov
add
rolb
out
xlat
rorl
jecxz
repnz
je
mov
ja
mov
sub
mov
mov
lahf
or
xchg
xchg
shlb
mov
ret
or
daa
mov
lret
int3
inc
pop
add
scas
es
cmp
rorl
lcall
sub
xchg
and
fisttpll
dec
lcall
jae,pt
jae
mov
add
or
dec
outsl
push
xlat
pop
mov
add
dec
jnp
or
out
insb
stos
or
aaa
insb
jne
lea
xor
iret
jns
test
dec
in
push
popf
sub
dec
lods
lcall
xchg
aaa
xchg
es
movsl
push
scas
loop
xor
sbb
lret
dec
icebp
popf
add
adc
je
push
fdecstp
sub
out
in
fidivs
jmp
mov
add
fimull
ss
cmp
and
fmuls
jae
xchg
cbtw
add
notl
jae
mov
mov
dec
shll
stc
ds
js
outsl
lret
mov
je
push
sub
sbb
lret
es
fwait
imul
dec
pushl
fsubl
cli
push
jae
adc
movsl
jnp
jb
xlat
loop
jae
ds
test
jle
xchg
pusha
dec
clc
jae
ficomps
in
sub
cwtl
sarb
inc
sub
mov
pop
xor
ljmp
mov
and
add
mov
adc
leave
scas
inc
rcll
cmp
aam
das
lea
orl
jg
pop
fbstp
lods
subl
popf
mov
jno
xchg
in
ret
push
dec
dec
jne
les
sbb
cli
das
jns
aas
adc
sbb
mov
and
adc
jae
jns
movsb
and
add
inc
sbb
insb
xchg
andl
dec
inc
sbb
xor
jecxz
add
mov
mov
push
pop
test
cmpsb
push
adc
out
sub
nop
sub
loope
jbe
sub
popf
xor
std
mov
ljmp
jmp
or
xlat
push
loope
imul
dec
push
cmpl
int3
cmp
lcall
sbb
ret
repnz
push
push
mov
and
xchg
out
adc
mov
inc
outsl
xchg
jg
xchg
sub
pop
adc
stos
jne
bnd
rcrb
or
pusha
incl
mov
jmp
ss
and
ljmp
push
mov
inc
sbb
jno
xor
sbb
dec
xchg
cmp
or
outsl
dec
pop
loopne
loope
push
push
fistpl
out
aas
inc
cmp
mov
mov
xchg
subb
dec
push
push
jg
dec
jno
pop
sbb
or
mov
clc
fidivs
shlb
into
subl
mov
hlt
and
sbb
js
xchg
das
stos
daa
cs
adc
pushf
mov
clc
pop
shl
pop
inc
jmp
push
or
inc
cld
stos
inc
adc
mov
add
in
ret
jne
pop
imul
out
or
pop
pushf
xor
das
jb
mov
cmpsl
test
popf
mov
jne
cmp
stos
stos
and
popf
dec
popa
mov
jns
lea
push
push
cmpsl
mov
add
mov
loope
testb
pop
aas
test
outsb
lods
xor
add
push
jge
inc
out
jmp
adc
fmul
pop
dec
outsl
add
mov
push
inc
pop
loop
sti
push
inc
jge
xor
sub
cld
in
fcmovb
pop
pop
sbb
adc
lret
or
xlat
pop
mov
shlb
test
adc
dec
jne
je
shrb
dec
in
jl
adc
fbld
mov
push
dec
pop
aam
vpmovsxdq
andb
nop
ss
pop
ds
sbb
rorl
jns
ret
daa
les
mov
aam
je
mov
inc
mov
push
jp
mov
subb
lods
inc
cmc
mov
ja
mov
cli
arpl
cs
sub
jle
data16
inc
lahf
and
arpl
pop
and
mov
cvtps2pi
in
imul
xchg
xor
adc
ss
or
test
inc
xor
mov
xorb
outsb
adc
push
addr16
cwtl
enter
mov
dec
or
jne
int
dec
fcmovbe
push
jno
jge
xor
pop
inc
leave
inc
mov
call
mov
push
sub
mov
sti
lret
xchg
cmpsl
mov
sarl
add
xor
lods
sti
push
ret
xor
xlat
test
sub
sub
push
ljmp
push
mov
mov
xchg
push
xlat
popf
jmp
jge
or
dec
sub
int3
in
mov
mov
sbb
jg
mov
fwait
jp
jl
jmp
push
dec
adcb
adc
or
push
cmp
arpl
and
push
lock
cmp
iret
imul
or
jo
fdivrs
fxch
sbb
xor
lret
stos
mov
cli
push
sarl
mov
jp
cmp
xchg
lock
repz
inc
xchg
pusha
mov
add
lods
sbb
std
jb
jns
xor
mov
xor
push
xor
xchg
mov
mov
daa
fwait
inc
shrb
jo
cmp
pop
das
inc
ret
test
lds
pop
daa
mov
aam
cwtl
cmp
sub
jg
mov
pop
pop
frstor
dec
out
je
cld
es
sbb
arpl
cwtl
xchg
hlt
sbb
xor
mov
and
nop
les
mov
jno
inc
xor
jp
mov
add
cmpb
cmp
movsl
outsb
add
fidivl
mov
inc
jmp
cmpsb
divb
sbb
jne
insb
je
dec
int
push
mov
scas
mov
repnz
in
push
out
xor
lahf
mov
gs
adc
push
push
jecxz
jge
dec
daa
movsb
rcr
mov
push
insb
jbe
push
hlt
jns
pop
adcl
lea
cli
out
jae
shlb
jle
mov
xchg
or
sbb
rclb
xchg
adc
adc
mov
ret
xor
cwtl
outsl
inc
das
mov
dec
adc
out
daa
xor
popf
lahf
xchg
sub
popa
mov
adc
clc
jne
mov
ret
adc
jp
dec
enter
shll
shrl
inc
pop
mov
arpl
mov
adc
fs
addr16
jns
addr16
call
es
aad
pop
push
aam
sbb
sbb
sbb
mov
rcl
or
sbb
outsl
into
movsl
mov
pop
or
int3
xchg
insb
mov
sbb
hlt
stos
sbb
cs
call
test
jg
daa
pop
and
divl
loop
sub
icebp
mov
sbb
std
scas
adc
fistpll
sbb
mov
stos
aaa
ret
in
cmpl
push
dec
ret
outsb
cmpsl
scas
testb
stos
dec
in
test
orl
lahf
mov
fstpt
cmp
adc
cs
xchg
mov
pushf
ss
sbb
jl
aas
dec
or
test
xor
insb
mov
popa
or
mov
stc
mov
dec
pop
jns
hlt
daa
jnp
fisttps
push
adc
rcll
sub
aaa
pop
push
bound
jle
jl
mov
mov
and
mov
std
sub
xor
jb
lahf
sub
mov
out
clc
push
popf
jne
stos
jno
add
jle
cmpl
sbb
ror
push
arpl
push
jg
dec
mov
xchg
cmp
or
movsl
iret
fwait
inc
inc
cwtl
push
sbb
push
movsl
lods
sub
adc
push
aad
into
rol
cmp
pop
insb
cmp
jmp
cmp
in
mov
in
sarb
xchg
push
fsub
xor
aaa
pop
dec
or
call
sahf
repz
or
mov
decb
push
cld
adc
cmpsb
mov
scas
aam
jle
gs
xor
aaa
bound
add
js
sub
and
cmc
inc
insb
andb
push
out
daa
mov
fsubr
in
jl
xor
outsb
or
sbb
mov
pop
xor
xor
mov
loopne
and
popf
jbe
add
outsl
or
outsl
test
jae
dec
and
es
or
adc
daa
add
movsl
stc
fnsave
jo
mov
int
adc
inc
sbb
pop
or
fstpl
inc
lods
pop
test
test
jp
jl
lahf
xchg
jno
and
test
loop
mov
mov
cmp
push
xor
xchg
xlat
mov
pushf
jmp
out
sbbb
fwait
mov
mov
add
fnstsw
xor
and
std
cli
popf
adc
ds
mov
ljmp
mov
inc
ss
lods
sbb
jg
mov
mov
mov
pop
add
xchg
mov
stos
cmp
cli
insl
das
es
rcll
mov
ret
jmp
jg
xor
ret
mov
aam
cmp
sub
xor
push
xor
add
pop
imul
and
imul
and
jl
outsb
dec
jmp
push
push
jae
sahf
out
enter
sub
and
inc
fs
xchg
sti
ljmp
sbb
lods
jb
and
js
nop
dec
push
jae
cmpsl
mov
in
xchg
lret
fsts
add
ficompl
scas
xchg
cmp
cmp
add
mov
jae
int3
jle
push
aaa
popa
leave
add
movsb
fstpl
iret
shlb
lahf
pop
orb
imul
or
out
add
pop
dec
movsl
xor
aad
adc
ret
sbb
lock
in
sbb
fdivrs
mov
inc
push
cs
daa
fildl
mov
mov
stos
sbb
neg
add
fisubrl
fidivrl
cmpsb
in
sarb
dec
xchg
push
add
inc
out
push
xchg
insl
adc
insl
push
push
add
je
xchg
leave
aas
negb
or
xor
dec
scas
mov
fwait
inc
stc
mov
sub
std
pop
mov
cs
call
lahf
outsb
inc
leave
nop
sti
arpl
adcl
cmpsl
fsubr
rcl
adc
inc
mov
sub
push
and
cmp
outsb
clc
dec
ficompl
dec
add
cmp
dec
inc
and
notb
out
xor
xor
cld
sbb
fmull
sub
lret
cmp
xchg
mov
lret
xchg
out
arpl
lds
aas
pop
dec
ret
xchg
xor
movsl
and
iret
or
inc
roll
mov
dec
test
xor
adc
incl
mov
je
into
bound
mov
outsl
out
divl
push
cmp
pop
xor
lods
push
mov
dec
fcompl
cmpsb
repz
push
xor
popa
cmp
adc
negl
jmp
mov
cmp
jp
mov
ljmp
cmp
cmp
loop
jp
dec
repnz
pop
jb
adc
outsl
push
xor
mov
ficompl
lods
movsl
call
sub
mov
fdivs
les
sbb
pop
sbb
shrb
test
insl
pop
loop
pop
mov
mov
jns
aam
nop
dec
pop
push
test
ret
stos
xchg
call
mov
fcmovnbe
stc
cmpsb
mov
ret
push
mov
mov
test
dec
mov
add
fists
xor
and
pop
stos
nopl
xor
insb
push
xchg
cli
dec
filds
pop
sub
lret
aad
fadd
or
xor
sbb
gs
xlat
in
enter
in
cld
mov
scas
mov
inc
mov
sbb
ret
inc
jmp
call
xchg
out
adc
pop
sbb
int
pop
ss
pusha
ret
in
enter
xchg
in
popf
icebp
xchg
cmp
mov
jbe
cmp
int
inc
dec
out
cmc
jns
ret
ret
jmp
jecxz
xchg
push
jae
fnsave
dec
xlat
inc
xchg
push
pop
or
insl
and
ljmp
sub
mov
jge
mov
pop
cmp
pop
mov
out
mov
in
or
nop
cmc
std
subl
dec
push
push
ds
xchg
adc
xor
sbb
cmp
sbb
xchg
jno
subb
xor
cmp
fs
and
sbb
in
mov
or
mov
jb
inc
call
out
cmpsb
push
stos
in
push
pop
je
out
inc
cmp
lcall
repnz
aas
add
sbb
addr16
sub
mov
sbb
in
cltd
push
enter
xor
lds
adc
push
insb
scas
pop
cmp
ja
fdivrl
std
lret
pop
mov
xlat
dec
fldenv
sub
cmp
idivb
in
int
and
sub
popf
in
out
jbe
xlat
leave
stos
js
xorb
mov
sbb
lret
adc
hlt
dec
xor
push
and
push
add
fnstcw
int3
ljmp
push
and
push
nop
mov
imul
enter
fsubrs
push
imul
ret
sbb
mov
sub
dec
lcall
push
test
mov
sbbl
repz
mov
sbb
icebp
aad
and
xor
test
iret
xchg
add
or
fisttps
push
iret
add
adc
mov
mov
mov
movsl
test
mov
or
adc
lods
fldt
pop
sbb
pop
inc
imul
and
sbb
test
sbb
dec
jnp
lods
in
jecxz
cmp
and
and
mov
xchg
mov
adc
mov
mov
lea
sbb
jl
jne
sub
or
or
cmpsb
add
das
f2xm1
shrl
push
mov
lods
or
lcall
mov
mov
in
rcrb
push
fstpl
iretw
jmp
cmp
sbb
xchg
loop
mov
hlt
fwait
nop
inc
dec
dec
dec
out
push
mov
mov
int3
fldl
into
ret
xor
repz
incl
or
pop
mov
aam
test
test
jb
mov
out
pop
push
push
mov
ds
mov
ljmp
in
ss
imul
cmp
jp,pn
push
mov
pop
repz
pop
push
push
loop
or
inc
jl
or
enter
sti
outsl
ror
mov
stos
jno
jg,pt
mov
in
cmp
cmp
out
xchg
cmp
imul
idivb
dec
shl
lret
push
pop
push
std
insb
jb
mov
jns
mov
mov
ret
ret
adc
push
push
loopne
ret
clc
push
sub
ljmp
fldenv
and
push
ss
sub
in
xor
push
xor
and
pop
mov
mov
rclb
ffree
jae
pop
push
mov
dec
jmp
sub
and
push
sahf
lcall
fdiv
shl
cmpsb
rcrb
fnstsw
pop
dec
out
mov
ret
fldt
sub
mov
adc
add
imul
and
mul
mov
or
movsb
inc
enter
je
xor
adc
movsl
arpl
mov
xlat
out
push
mov
pop
dec
lods
stos
inc
das
stc
jge
mov
les
mov
movsl
lea
fstpt
push
cmpsl
enter
repnz
adc
cmp
push
lods
scas
stc
sti
in
xchg
mov
imul
lock
pop
cmp
pop
fs
mov
mov
pushf
adc
adc
mov
inc
pushf
repz
sahf
pop
lods
push
add
mov
fnstsw
and
sub
in
in
icebp
jae,pt
subb
xchg
lret
pop
mov
push
dec
jae
inc
loope
cmp
loopne
js
and
dec
push
cmp
xor
xchg
and
lods
pusha
inc
jbe
push
jne
pop
mov
dec
js
pop
cmpb
insl
mov
jo,pn
filds
push
cmp
cmp
mov
xor
cmp
jb
or
cbtw
mov
mov
roll
addl
sub
pop
pop
xor
pop
inc
and
cwtl
push
rclb
mov
jmp
rorb
pop
jnp
mov
psllw
jb
dec
pop
cmp
push
repz
jns
lea
and
xchg
mov
subb
inc
mov
pop
push
inc
addr16
inc
mov
cwtl
mov
pop
fidivrs
dec
xchg
cmp
test
cmp
sarb
push
lods
or
sbb
dec
and
push
sar
jns
and
mov
scas
frstor
loop
dec
push
sahf
mulb
jl
jmp
cltd
dec
lahf
push
xor
push
push
into
in
push
popf
ss
les
jle
fdivrs
add
insb
es
xchg
test
leave
leave
mov
or
push
inc
mov
cmpsl
jae
and
sub
daa
js
jne
xor
jp
dec
add
mov
jmp
insl
xchg
fcomps
or
mov
xor
js
test
adc
add
iret
inc
inc
repz
addr16
loop
ret
fs
cmpsb
loopne
push
shl
addl
test
sbb
or
adc
push
mov
inc
stos
or
fcomps
jl
mov
jg
pop
movsl
jmp
jnp
nop
icebp
dec
stos
xlat
and
adc
or
jo
insl
jmp
sbb
loope
nop
inc
mov
scas
int3
add
imul
cwtl
lods
xlat
in
ds
not
movsb
ja
mov
test
xor
jmp
push
xchg
iret
sbb
cmp
jno
inc
pop
aad
or
mov
cmpsl
adc
adc
cmpsb
add
push
mov
pop
imul
push
fnsave
mov
sbb
mov
inc
mov
fildll
push
daa
jecxz
adc
imul
or
addr16
sub
sahf
sub
imul
divl
repz
xchg
adc
shlb
mov
adc
sbb
ds
iret
fwait
cmp
add
inc
nop
std
out
mov
mov
push
test
jb
push
stos
insl
sub
push
mov
inc
jbe
mov
daa
jnp
mov
push
leave
outsl
cmpsl
mov
fidivrs
push
dec
xor
test
cmp
jp
mov
leave
aaa
rcrb
lea
and
testl
lods
rcrb
or
xchg
or
jo
lret
repnz
jmp
test
jmp
dec
push
jp
mov
add
nop
in
jne
inc
shlb
loop
sbb
aaa
arpl
fcompl
insl
popf
jmp
cli
fldl
and
cwtl
push
loopne
mov
mov
mov
mov
adc
les
outsl
loope
in
mov
rorb
ret
pop
and
xchg
addr16
lea
sub
jge
pop
ret
cld
pop
ret
jns
jae
dec
ljmp
rcll
adc
cmp
fcompp
push
jo
ficoml
fcoms
cmp
loope
or
lahf
int
insb
lds
add
lcall
or
xchg
jle
push
add
test
rol
add
mov
push
sti
in
mov
shl
scas
xor
or
sub
sbb
push
rcll
mov
adc
mov
pushf
test
lcall
call
int
pop
inc
mov
int
or
or
push
les
je
xchg
add
mov
or
push
sarl
rolb
repnz
dec
outsl
xorl
dec
lds
int
loopne
and
shrb
movl
repnz
imul
cmp
sbb
pop
loop
jmp
pop
repnz
mov
insl
js
sarb
imul
jmp
test
sub
add
sub
and
dec
sbb
add
es
pop
sub
rcrl
outsb
sub
or
and
fwait
cwtl
aam
les
xlat
pop
lret
push
imul
inc
lahf
mov
outsl
ret
sbb
sub
dec
nop
cld
push
ss
adcl
mov
loopne
je
and
mov
lcall
rol
and
or
dec
add
popf
daa
mov
inc
scas
aam
hlt
ret
jno
std
lcall
in
outsl
or
pop
mov
out
xor
sbb
popf
inc
in
add
adc
add
pop
cmc
nop
jnp
inc
mov
mov
imul
jg
mov
shrb
lahf
mov
aas
pushf
mov
iret
xchg
aam
jbe
rcrl
out
loop
xor
mov
adc
fcomp
inc
daa
int3
cwtl
out
hlt
ja
pop
scas
das
addr16
pop
imul
clc
data16
mov
das
adc
add
mov
jg
and
pop
xor
cmpl
add
aad
daa
mov
pusha
jae
iret
add
repz
cmpsb
pop
dec
gs
push
cli
in
lock
push
mov
int3
scas
neg
out
or
mov
daa
adcb
mov
and
dec
repz
inc
lods
aas
push
push
rorb
xchg
inc
movsb
mov
jno
fldl
xor
xor
xchg
bound
push
ja
out
pop
enter
repz
push
dec
or
mov
push
adc
pop
enter
leave
sub
out
inc
add
sbb
hlt
scas
mov
sub
aas
or
push
jmp
ret
gs
push
ja
repnz
repz
mov
jae
sub
xchg
aas
ss
and
ret
pusha
daa
mov
adc
jae
xchg
push
dec
fbld
aaa
lret
int3
movsl
mov
pushfw
xchg
mov
xchg
push
push
sub
mov
mov
fwait
mov
addr16
nop
jl
lds
scas
and
iret
insl
std
mov
test
mov
pop
les
std
jns,pn
jle
dec
js
cmp
dec
repnz
mov
push
jbe
lods
nop
xor
aam
fisubl
pop
scas
mov
cmp
mov
sub
leave
scas
xor
mov
dec
dec
sbb
cmp
inc
int3
bound
push
cmp
xchg
cmc
movsb
and
mov
adc
seta
mov
fbstp
js
inc
into
jle
mov
pop
xor
push
cmp
movsb
fidivl
and
cld
ret
sub
insb
arpl
rorl
mov
int
inc
add
je
fdivrp
adc
aas
shll
xchg
in
adc
push
push
sbb
daa
fldl2t
jl
jecxz
stos
inc
imul
inc
or
cld
incb
cmp
outsl
ljmp
out
sbb
gs
inc
mov
xlat
mov
jnp
jl
cwtl
dec
push
jo
les
adc
jo
scas
sbb
lcall
mov
dec
jns
and
stc
pop
push
pushf
in
popf
pop
pop
cmp
jmp
rcrb
lret
das
and
push
mov
sbb
test
imul
fisttps
add
adc
adc
aas
pop
mov
sbb
and
iret
cmc
in
sbb
movsl
idiv
ljmp
push
dec
adc
call
xchg
inc
adc
inc
imul
push
adc
xlat
pop
fadd
rep
jno
dec
insl
out
inc
jge
dec
rcrb
outsl
add
imul
loopne
push
and
test
pop
mov
xlat
arpl
pop
js
dec
test
mov
sti
std
stos
jb
pop
dec
mov
loopne
rcll
sarl
inc
jmp
mov
jnp
negb
lods
lock
sub
iret
sub
xor
mov
mov
popf
mov
jecxz
lret
dec
jbe
push
nop
or
into
icebp
adc
cwtl
cmpsl
in
call
icebp
testb
or
leave
subl
adc
rcl
cmp
jne
dec
pop
test
dec
add
dec
push
test
out
repz
rol
int
or
and
cs
and
jmp
dec
inc
sub
jb
xchg
es
xchg
js
loope
into
loope
or
push
addb
aam
mov
popa
mov
jb
addr16
fisubs
test
mov
out
inc
cmp
mov
lods
fstl
mov
popf
out
stc
add
cld
gs
and
insl
dec
jp
aad
lock
outsb
les
inc
push
sub
push
ror
aas
scas
fisttpl
lea
sub
das
adc
call
cld
jbe
mov
popa
into
lock
xchg
stos
icebp
into
push
jmp
jae
mov
xor
test
sub
fisttps
movsb
xor
daa
popa
or
xor
xchg
cwtl
pop
rorw
sub
xor
imulb
pop
aad
loopne,pt
mov
and
sbb
lret
fisubl
aam
repnz
add
gs
sbb
push
cmp
pop
jbe
push
pushf
mov
fs
sbb
subb
imul
imul
pop
pop
cmc
inc
and
inc
dec
adcb
ja
inc
lahf
addl
stos
or
mov
jno
nop
jmp
cli
out
mov
test
sub
mov
ds
fs
pusha
movsl
mov
push
or
ss
pusha
fldl
pop
xor
getsec
mov
add
sbb
scas
xor
dec
lret
jb
shl
xchg
in
sbb
les
jl
and
sbb
xor
sahf
out
rorl
cwtl
call
stos
pop
addr16
jns
inc
lods
leave
jp
ljmp
sbb
out
xor
push
pop
pop
and
dec
imul
shlb
int
xchg
pop
push
fcoml
or
lret
cmpsb
xchg
xchg
insl
xor
mov
dec
lock
push
mulb
and
xor
call
xor
leave
fcmovnu
iret
dec
xchg
ds
das
scas
mov
cli
lahf
push
mov
mov
cli
mov
sub
int
sbb
aas
push
or
pop
jno
pop
faddl
jg
xchg
jno
mov
addr16
sti
cwtl
divl
xchg
adc
imul
cmp
aad
ljmp
sub
lock
jbe
cltd
inc
ret
in
cmp
enter
mov
add
ss
stos
mov
bsr
divb
orb
sub
dec
sub
xor
add
clc
jle
aaa
imul
rol
imul
orb
imul
iret
enter
orl
shl
test
adc
xchg
mov
popa
pop
out
mov
jnp
rolb
sbb
sahf
leave
ud2
mov
mov
push
cmp
adc
or
push
faddl
jg
pop
sbb
loop
adc
in
sbb
push
jnp
int3
push
pop
dec
xchg
movsl
pusha
std
sbb
sub
push
mov
ret
inc
stos
addr16
mov
jl
inc
mov
dec
aad
sub
or
add
push
loop
inc
and
mov
ja
mov
jno
pop
adc
and
cmp
lahf
movsl
add
repnz
pop
pushf
xchg
pushf
push
inc
jo
mov
cmp
out
jecxz
and
dec
daa
jo
imul
or
xor
xor
jne
mov
repz
mov
or
outsl
sbb
push
into
and
das
mov
sbb
cwtl
mov
mov
jge
xchg
inc
sub
add
cmc
adc
test
idiv
add
inc
xchg
mov
mov
clc
push
sbb
and
stos
sbb
cmp
cwtl
leave
add
and
ljmp
sbb
loopne
or
jmp
hlt
rcl
iret
leave
popf
mov
xor
or
xchg
add
mov
mov
incl
outsl
dec
jns
int
jle
iret
jne
and
inc
fldl
fiadds
pop
jl
mov
pop
mov
outsb
mov
sbb
xchg
test
or
cmp
mov
mov
prefetch
or
or
enter
in
out
sbb
rcll
movsb
fbstp
data16
ja
mov
iret
sarl
cmovge
xchg
cs
lods
sub
pop
mov
xchg
xchg
repnz
jno
rcrl
dec
xchg
sbb
mov
fwait
cltd
add
sbb
repnz
ja
out
push
mov
mov
xor
xchg
add
mov
mov
add
fwait
loop
sub
ljmp
or
inc
dec
pop
adc
es
push
sbb
xor
sbb
ljmp
or
mov
xor
jae
test
adc
sub
lcall
inc
rorl
jle
dec
das
mov
lods
pop
lds
cmp
dec
insl
test
sbb
ljmp
pop
unpckhps
lcall
mov
fadds
mov
jge
stos
test
out
scas
testb
inc
movsl
jp
jo
pop
loop
xor
cli
dec
or
jnp
dec
adc
cs
mov
ret
pushf
mov
loop
and
scas
daa
mov
andl
nop
jle
xchg
inc
imul
cs
mov
cmp
fcmovu
stc
fnsave
sbb
insb
or
add
and
cli
popl
xor
lods
xor
insb
orb
stc
inc
add
fildll
jb
xlat
jmp
sbb
mov
ds
or
mov
std
loope
andb
aad
rorb
in
push
add
xchg
aaa
adc
sbb
insl
shrb
push
inc
pop
cmc
cmp
push
jo
xor
jbe
loopne
add
push
shll
ds
call
mov
pushf
icebp
jp
adc
jo
xlat
and
or
jecxz
mov
aam
sub
xchg
jl
xor
push
push
push
mov
dec
xchg
pop
adc
sar
scas
sub
in
xchg
lock
mov
or
push
dec
jbe
push
add
xorl
arpl
inc
filds
sub
dec
dec
sub
hlt
fs
fidivl
mov
pop
test
push
sub
scas
js
ja
pop
shll
stos
or
sbb
xor
jnp
mov
imul
cld
sti
and
test
cmc
jp
or
int3
out
sti
dec
pusha
jb
xor
adc
cmp
out
and
arpl
test
sbb
idivb
sub
lcall
enter
xlat
adc
inc
imul
xorb
lret
dec
mov
hlt
fsubs
icebp
cmp
fsubl
mov
mov
cld
mov
dec
hlt
pushf
inc
mov
int
adc
mov
push
rclb
xchg
fs
xchg
dec
insb
add
jp
mov
iret
out
out
xor
mov
jle
sub
iret
push
cmp
mov
mov
mov
jo
aam
movsl
push
cmp
jp
adc
mov
lret
scas
inc
pop
inc
mov
ljmp
hlt
push
mov
dec
aam
mov
inc
ret
rcl
jmp
aaa
inc
adc
sub
xchg
jecxz
mov
into
mov
dec
es
test
lret
xchg
dec
pop
shll
pop
scas
clc
insl
push
stos
mov
xchg
sbb
push
ss
xchg
bound
in
inc
test
lods
xchg
lods
pop
aas
pop
push
xchg
mov
mov
inc
popf
rcr
and
adc
mov
mov
mov
enter
pop
iret
sarb
sbb
sub
sbb
ret
fimuls
mov
sarl
out
jb
pop
mov
mov
imul
std
sub
pop
mov
in
pusha
sub
idivb
sbb
sub
ret
xor
leave
mov
and
cmp
and
imul
jmp
popf
push
cmp
sub
fwait
inc
lea
and
clc
add
push
push
mul
pusha
sbb
adc
aam
and
pop
or
cmp
int
inc
add
data16
xor
xchg
adc
dec
inc
sarl
cli
xlat
lcall
push
ficoml
pop
mov
lock
sub
xchg
mov
cltd
or
push
mov
test
stos
cmp
dec
xor
mov
insb
std
movsb
insb
mov
hlt
mov
pop
jo
ret
fs
aas
push
push
mov
test
xchg
pop
push
add
push
and
pop
test
dec
pop
adc
sbb
mov
popf
cltd
test
cwtl
fnstsw
shrb
cli
xor
mov
sti
xchg
add
popa
aam
mov
lcall
dec
sarl
sub
xor
mov
insb
js
dec
jp
push
sub
mulb
mov
imull
add
insl
les
es
push
jmp
mov
cltd
jno
loope
leave
pop
cmpsb
sbb
jo
sahf
push
pop
ja
pop
sahf
jge
and
lcall
cltd
inc
jae
and
sub
cmp
fwait
shlb
lcall
movsb
xchg
call
add
sbb
scas
cld
data16
mov
cmp
lcall
mov
clc
jbe
sbb
sahf
and
xchg
shlb
cmp
scas
out
mov
sbb
nop
in
jl
movsl
mov
xchg
mov
or
ja
or
xor
lds
xchg
lcall
rcrb
or
mov
les
cmpsl
jmp
rcrl
xchg
fmull
sbb
into
xor
mov
mov
in
mov
mov
and
test
fwait
or
stc
pop
push
divl
out
lods
add
mov
mov
ds
and
jae
insb
mov
pusha
lods
sahf
mov
dec
pop
rorl
shrb
adc
ljmp
sub
movsl
inc
add
enter
adc
or
adc
push
dec
test
pop
adc
mov
mov
cmp
cmp
insl
bound
adc
add
pop
lds
pop
sti
push
sub
daa
xlat
test
xor
mov
gs
fwait
es
jo
and
daa
adc
xor
loop
dec
call
ljmp
sub
xchg
add
dec
xlat
sub
out
mov
rol
lods
ja
xchg
fldl
mov
scas
sti
scas
and
cmc
cltd
adc
xchg
shll
imul
pop
mov
jb
dec
rcrl
inc
nop
popa
cs
cmp
jge
fwait
mov
jnp
scas
mov
xor
add
lret
outsl
dec
dec
xor
pop
loop
icebp
fst
rclb
call
sbb
or
insl
and
test
ret
xor
jne
and
push
pop
into
nop
in
xchg
mov
mov
iret
add
add
icebp
sbb
lods
je
dec
dec
jl
add
mov
pushf
test
lret
mov
and
push
xor
jmp
js
mov
adc
and
mov
cmp
pop
nop
insb
imul
pop
or
mov
push
cmc
fistpl
scas
pop
pushf
ficompl
aaa
sarb
add
movsl
sub
xchg
mov
std
aas
pushf
outsb
push
lret
clc
mov
lods
push
inc
jno
pop
loopne
jmp
jge
pop
out
in
in
cwtl
mov
dec
test
mov
push
ljmp
adc
inc
imulb
out
test
jge
mov
jno
pushf
mov
scas
cld
subb
or
push
lods
sbb
dec
pop
or
mov
xchg
pop
mov
mov
jl
shrb
and
movsl
and
popf
jg
or
dec
sbb
test
mov
cli
std
push
clc
xchg
mov
fiadds
ss
adc
fsubrl
adc
inc
je
add
mov
int3
push
dec
xchg
ds
adc
jle
in
loop
cmpsb
jle
jmp
daa
leave
testb
xchg
mov
mov
cmpl
icebp
dec
sbb
or
dec
push
cmp
and
push
push
in
push
in
xchg
ss
xchg
or
push
mov
sub
cmp
fnsave
sub
mov
sbb
lods
into
cmpsb
jno
addl
mov
ja
test
adc
lea
ja
xor
xchg
stos
mulb
cmp
jo
add
cmp
push
add
sub
push
or
xchg
shl
das
sub
popa
enter
fsubrs
shlb
inc
xchg
stc
adc
push
dec
std
xor
sbb
out
sub
jne
push
adc
gs
ljmp
push
shrb
fbld
call
in
inc
ret
adc
lahf
push
jbe
testl
scas
sbb
sarb
cmpsb
mov
push
lods
cld
outsl
cmp
and
into
inc
inc
in
out
jbe
push
scas
adc
and
out
cmpsl
and
mov
clc
out
das
xor
and
pushf
rcrb
pop
cmovp
lahf
loope
mov
les
add
repz
rorl
push
test
push
rcll
cld
pop
leave
sub
add
jbe
mov
or
mov
xor
bound
pop
fnsave
shlb
loop
xchg
and
inc
into
loope
jns
sahf
xchg
and
daa
and
and
test
push
push
sub
ret
mov
jbe
rcrl
daa
cmp
in
and
dec
mov
inc
mov
push
mov
mov
dec
out
push
mov
cltd
add
bound
in
in
add
sbb
add
push
inc
out
outsl
ret
jmp
orb
push
cmp
loopne
stos
cmp
out
and
leave
push
aad
jge
add
lret
arpl
std
jae
add
cmc
in
jmp
pop
test
lea
lret
push
into
jl
push
pop
aas
jge
popf
iret
enter
jne
cwtl
aas
ss
push
inc
or
adc
or
cmp
jecxz
test
sbb
js
pop
pusha
jns
insb
fs
jo
dec
movsl
repz
inc
decl
lret
roll
add
and
dec
mov
sahf
ja
cmp
add
mov
shlb
test
add
jae
fistpl
fcom
mov
inc
mov
sbb
lea
add
js
shrb
jp
ds
jbe
mov
cld
mov
push
cmc
aad
arpl
jno
jp
push
sahf
jmp
hlt
fcoms
mov
out
ror
mov
xor
adc
pusha
mov
dec
insb
fbld
mov
adcb
fwait
jno
fdiv
iret
xchg
into
cmp
push
push
dec
test
sub
out
ja
xchg
insl
xchg
fcmovne
jl
rcll
out
push
jge
imul
adc
mov
lea
test
fiaddl
scas
or
mov
mov
pop
push
cmp
pop
adc
push
sbb
dec
xchg
in
cwtl
mulb
enter
xchg
jb
and
jne
ds
mov
movb
gs
lret
pop
test
sbb
shr
xchg
and
adc
mov
pop
movsl
aas
push
mov
shlb
sbb
cltd
adc
cmp
stos
ss
int
leave
mov
stc
loop
shrb
mov
sbb
jnp
in
dec
aam
sbbb
fcoms
push
ret
sbb
dec
into
insl
fmul
imul
mov
cld
aad
repz
lret
jae
pop
push
gs
in
aam
fwait
lea
mov
sbb
sub
mov
add
out
sub
adc
rcrb
jb
and
jge
stos
int3
sub
and
pop
fildll
clc
rorl
mov
or
xchg
aaa
mov
scas
add
aas
jne
aam
add
pop
lea
aad
add
movl
dec
inc
fisttpll
pusha
jg
add
add
push
mov
mov
das
push
and
ja
inc
cmpsb
mov
lret
clc
mov
xor
jp
call
es
inc
push
and
adc
scas
lcall
cli
fcom
mov
addr16
pop
mov
pushf
out
jp
xchg
in
add
or
sahf
jo
out
daa
lea
mov
xor
mov
movsl
push
gs
cmp
in
and
push
mov
sbb
outsb
je
cli
mov
xchg
cmpsb
inc
jns
adc
sub
sbb
ds
jns
jne
filds
sub
dec
and
mov
fsubrs
jbe
daa
jecxz
mov
push
cltd
sti
rorb
mov
push
cs
and
cmp
mov
int3
mov
repnz
push
cmp
mov
testl
mov
xchg
sbb
daa
dec
call
lods
or
and
aas
stc
xor
mov
je
fistps
xchg
fldenv
xor
sbb
push
in
dec
push
pushf
lods
mov
xor
stos
mov
aaa
xlat
gs
mov
scas
jne
jnp
orb
repz
test
or
sbb
xchg
dec
pop
lret
adc
roll
mov
sarb
cmp
sub
inc
push
jge
lods
fnsave
add
enter
mov
pop
ss
jb
enter
lret
cmpsl
mov
daa
inc
sbb
jecxz
js
lods
or
enter
shll
lret
add
scas
push
cmpsl
imul
sbb
push
cltd
lds
pop
sti
scas
push
sbb
ljmp
lea
xor
or
mov
in
or
sbbl
pop
push
ret
mov
cwtl
hlt
push
scas
test
mov
cld
aad
pop
mov
pause
mov
jno
cmpsl
fcomp
cmpsb
lret
dec
and
int
aaa
jae
or
sub
and
sub
lods
dec
adc
shll
sub
jp
push
icebp
lock
adc
pop
icebp
cmpsb
aad
jne
add
daa
sub
xchg
scas
imul
outsl
sbb
pop
shlb
adcl
shl
lret
or
mov
out
out
jp
sbb
xor
daa
fdivrs
adc
hlt
sub
cltd
jg
push
je
pop
clc
fs
xor
xor
ret
dec
fisttpll
cmp
jno
mov
mov
pop
icebp
push
add
jno
and
popa
mov
clc
fiadds
push
adc
cwtl
outsl
insl
or
sbb
testb
pop
sub
push
popa
mov
pop
push
test
lods
mov
push
mov
add
sub
sbb
scas
scas
mov
rol
mov
in
mov
inc
mov
mov
pop
mov
pop
sbb
sbb
notb
pop
cwtl
decb
mov
add
mov
cltd
adc
adc
mov
lea
push
pushf
fstpl
mov
sbb
scas
adc
jl
arpl
clc
fimull
and
push
jo
mov
daa
or
xchg
sbb
outsb
push
shll
outsb
xchg
jl
push
mov
xor
nop
lcall
xchg
inc
pop
testb
sbb
and
insb
outsb
jb
shl
outsl
cmp
aam
int
int3
cmpb
divl
xor
and
loopne
fists
sti
xchg
mov
xchg
iret
aas
icebp
ljmp
mov
popa
mov
orb
addr16
xor
mov
pop
mov
arpl
mov
xor
pop
adc
xchg
push
sbb
lahf
jp
stc
ss
imul
push
subl
add
jg
cmp
add
sub
dec
mov
xchg
rcll
jnp
ficomps
leave
jl
insb
in
test
lret
mov
and
cmp
fsubs
mov
push
je
pop
std
out
sub
fs
adc
inc
ljmp
ficomps
adc
ljmp
out
outsb
filds
inc
mov
rcr
imul
mov
out
lods
ss
scas
lods
loopne
dec
inc
lock
sub
fwait
std
lds
sbb
fcoms
xchg
or
mov
arpl
jo
xor
pop
push
in
adc
adc
dec
cmc
jae
inc
ss
or
imul
gs
movups
pop
xor
repz
sub
hlt
xor
movsb
sub
cmp
add
pop
xchg
fisttps
insl
adc
jle
loope
out
lods
ret
outsb
ret
xor
js
jle
mov
repz
xchg
pop
mov
lahf
inc
jbe
ja
out
pop
xchg
mov
cs
fucom
std
lods
sbb
mov
mov
stos
mov
pop
adc
jnp
aad
jg
mov
js
in
enter
leave
xlat
out
jnp
pushf
xor
inc
xchg
push
loop
call
add
mov
ret
or
repnz
add
jmp
adc
mov
jae
sub
or
jp
orb
inc
cli
lcall
adc
push
xor
jo
jns
pop
int3
jb
loop
rorb
out
ds
sub
and
stos
pop
aam
add
jl
bound
rorl
lahf
cmp
fmull
jne
mov
incb
add
outsb
push
aaa
iret
mov
xchg
int3
loope
jae
add
in
outsb
mov
std
ds
xchg
insb
sub
jmp
fdivrl
xor
cli
xor
movsb
pop
mov
sub
xchg
mov
inc
pop
and
cs
stc
rcll
test
sti
xchg
sbb
dec
cmp
mov
dec
cmpsb
aas
add
mov
pusha
pushf
test
idivl
inc
int3
dec
mov
sbb
jns
mov
cmp
xchg
mov
test
cmp
pop
in
inc
pop
and
pop
inc
and
int
mov
lea
push
and
and
or
lret
lret
insb
push
stc
dec
int3
shr
out
pop
shrl
cltd
icebp
mov
roll
dec
xor
jecxz
lock
dec
cld
loop
inc
cwtl
sbb
frstor
or
popa
lret
and
cmpsb
mov
adc
hlt
lahf
lcall
mov
push
fistl
stc
gs
dec
arpl
lods
lock
inc
das
jge
scas
push
jnp
sub
pop
push
repnz
les
out
shl
fnstcw
cmp
push
fwait
repnz
in
dec
iret
sahf
int
movsb
mull
mov
pop
jle
mov
cmp
mov
pushf
cld
rorb
xchg
cmp
mov
sub
icebp
pop
testl
bound
add
daa
out
loopne
add
inc
out
mov
xchg
and
mov
sbb
dec
add
aam
jo
add
pop
movsl
out
dec
xor
fildl
jae
fadds
and
pop
movsb
push
inc
stc
in
inc
lds
mov
jns
xor
dec
inc
mov
and
loop
stos
mov
sub
faddl
in
imul
mov
pop
test
fmul
adc
jb
test
jp
scas
pop
shll
loope
clc
sub
push
adc
gs
xchg
movsb
cmc
and
pmulhw
pop
dec
or
xchg
mov
xchg
xchg
xchg
fs
adc
push
cmp
inc
jns
sahf
fiaddl
ret
or
adc
outsb
cld
gs
xor
aad
jle
adc
or
aad
scas
xchg
lock
arpl
dec
xor
cltd
xlat
mov
mov
stos
or
sub
test
mov
xorl
or
movsb
mov
fimull
aas
dec
es
repz
mov
sahf
dec
cwtl
flds
mov
and
push
addb
and
push
aam
push
mov
lods
stc
test
inc
push
pop
xchg
or
lret
movsb
inc
push
push
shrb
mov
in
mov
addb
insl
dec
dec
xor
nop
ret
and
lock
mov
add
sbb
mov
stos
fisubrl
sbb
mov
push
cmpsl
ret
mov
push
or
xor
xlat
lret
sub
fdivp
xor
test
mov
dec
jo
sarl
push
mov
into
stos
xchg
imul
xchg
mov
lahf
mov
test
push
imul
mov
sbbl
mov
add
pop
je
inc
or
xchg
frstor
les
inc
notb
and
lret
scas
enter
mov
xchg
bound
cld
cmp
jge
clc
cmp
into
das
mov
jno
in
lock
repz
testl
adc
mov
loope
aad
sarb
cld
cmc
sahf
mov
and
jae
push
xor
sub
jmp
out
jns
outsl
bnd
out
push
add
mov
inc
cmp
rcrl
divb
repnz
mull
xlat
aam
fwait
repnz
jne
dec
arpl
sub
push
inc
rep
push
repnz
movsl
cmp
subb
add
loope
jmp
dec
sbb
jnp
inc
addr16
or
ficoml
xor
inc
and
or
jg
out
xchg
bound
or
mov
or
cmp
scas
inc
outsb
cmpsl
xchg
mov
clc
mov
dec
jae
or
popa
adc
movsl
or
popf
adc
dec
sbb
cld
lret
test
and
cltd
int
leave
mov
push
dec
cld
lcall
addr16
enter
push
dec
jecxz
shll
pop
inc
aaa
bound
xor
lock
mov
jne,pt
cmp
xchg
popf
xor
ret
add
scas
scas
insl
and
insl
es
andl
xchg
sbb
int
ja
adc
stc
sahf
out
pop
xor
lds
inc
dec
and
lock
pop
push
ffree
mov
xchg
add
lods
sti
aam
mov
mov
add
decb
jge
mov
jno
cltd
lds
rolb
popa
push
addr16
adcb
les
inc
lea
adc
and
adc
jbe
inc
outsl
insb
idivl
pop
push
ds
pop
subb
push
lds
xor
cmpsb
ret
xor
fidivs
jecxz
add
lcall
lret
xor
addr16
pop
sbbl
mov
add
or
mov
mov
decl
add
lods
pop
repz
dec
adc
pop
xchg
xchg
push
mov
mov
rorl
xor
or
stos
mov
jp
push
subb
addr16
cmpsl
mov
in
push
xor
divl
pop
int
sub
xchg
aad
loopne
jp
arpl
dec
cmpsb
adc
and
xor
popa
jnp
aaa
mov
bound
and
push
adc
or
int3
cmp
cmpsl
add
pop
lcall
lahf
sbb
jl
sbb
cmp
dec
jno
loopne
jb
xor
or
dec
imul
je
shlb
insb
es
xor
add
das
fwait
or
shrb
cli
cmc
outsb
jl
push
outsb
mov
mov
add
cmp
repnz
ss
sbb
push
jnp
lds
into
shl
mov
jns
in
test
or
imul
frstor
sub
hlt
push
stos
or
xchg
jl
jecxz
lret
jno
jmp
sub
cmp
mov
sub
mov
xor
lods
rcl
js
lods
lcall
jle
cmpsb
fdivs
pop
icebp
push
pop
inc
in
adc
and
lahf
lret
roll
sbb
push
or
subl
pop
jp
mov
sbb
outsl
or
ja
repnz
push
adc
imul
and
mov
push
jmp
push
call
test
jne
sbb
sbb
cld
popf
int3
jbe
and
fwait
cld
cmp
add
mov
or
notl
jne
xor
in
in
mov
repnz
int3
xchg
andl
inc
lock
loopne
add
mov
invd
pop
mov
mov
les
enter
jmp
dec
or
dec
shr
iret
data16
scas
cld
jp
lcall
outsb
dec
or
mov
mov
dec
mov
and
xlat
push
push
cmp
dec
ret
pop
adcb
shlb
pop
jnp
mov
adcl
test
insb
mov
call
outsb
jl
outsb
push
xchg
mov
mov
add
jmp
hlt
clc
fwait
cltd
ja
repnz
and
mov
fwait
mov
shll
notb
fs
mov
inc
sahf
rcl
ret
aad
je
cmp
dec
call
inc
sbb
jmp
xor
pushf
push
cmpsb
pushl
add
cmp
pinsrw
xorl
jge
dec
dec
and
and
sahf
inc
aam
cli
addr16
sti
pop
in
fldl
push
pop
lock
lret
shlb
cwtl
int3
mov
lods
push
mov
and
xor
test
jmp
in
jge
loop
xlat
cmpl
sahf
cmpsl
adc
cmpl
or
pushf
adc
mov
pusha
cmpsb
int3
les
or
rcl
out
jne
push
ja
bound
das
movsl
add
jne
jb
cmp
sub
leave
mov
aas
lock
scas
clc
adc
faddl
shrb
lds
adcb
hlt
sub
push
and
xchg
jecxz
movsl
inc
out
repz
in
pop
shl
repnz
jo
xchg
push
ret
adc
adc
mov
mov
xorl
xchg
rclb
mov
xchg
xor
xchg
cmp
xchg
pop
push
xor
inc
jne
sti
push
pushf
addr16
add
and
jl
ss
inc
popf
inc
add
sbb
jno
inc
xchg
inc
mov
dec
fwait
int3
fs
ficoml
mov
jae
daa
inc
loopne
xchg
sbb
xchg
mov
pop
divl
cli
test
out
mov
shrb
push
and
gs
fnstcw
movsl
and
xchg
pop
mov
lret
ret
movsb
push
inc
sbb
rcrb
or
pop
cmpsl
push
outsb
cld
dec
icebp
push
cld
jle
and
mov
push
incl
mov
stos
add
js
in
pop
lret
and
les
lcall
ret
in
lds
push
adc
xor
adc
add
fcomps
pop
mov
dec
jle
popw
lock
mov
mov
mov
fs
mov
repz
out
xchg
mov
adc
mov
dec
push
arpl
push
push
outsl
and
mov
add
inc
or
mov
dec
nop
bswap
repnz
mov
mov
mov
sahf
dec
mov
sbb
pop
mov
sbb
enter
int3
orb
jns
int
and
xor
or
ljmp
dec
jno
jne
or
jnp
pushl
call
xchg
xchg
cmp
fcoms
add
add
ljmp
out
out
out
test
in
loopne
pop
mov
cmc
push
dec
mov
shlb
jmp
adc
ret
and
and
jle
pusha
paddsw
mov
push
add
mov
jp
mull
jmp
icebp
es
mov
jg
arpl
ret
jl
sarb
sti
sub
xor
dec
jl
dec
inc
aad
sub
cmp
jg
movsl
mov
push
jae
daa
adc
ljmp
int3
pushf
stos
icebp
add
xlat
sub
pop
repz
xor
decb
xor
in
sahf
cmpsl
cli
cmpsb
out
rolb
outsb
cmp
test
loop
add
pop
shrl
xor
sub
ror
dec
xchg
stc
test
sub
push
jns
and
jecxz
xchg
out
aaa
idivl
aas
mov
fistpll
loopne
mov
testb
pusha
mov
ret
mov
pop
filds
push
nop
in
xchg
inc
sti
xchg
xchg
cmp
sbb
imul
push
jb
cld
std
sahf
out
mov
sub
dec
call
out
loope
push
xor
and
std
dec
add
outsl
cmp
lock
pop
in
mov
sbb
das
fisubs
out
cmc
xchg
dec
adc
pop
out
pop
das
push
fucom
jg
imul
cli
repnz
lds
and
lods
mov
imul
jns
enter
int3
cs
mov
out
jge
sbb
out
leave
idivl
cmp
or
cli
aaa
daa
sub
xorb
xlat
inc
mov
push
dec
xor
sarl
push
adc
lods
insl
or
sbb
jle
adc
mov
xchg
nop
sarl
shr
dec
inc
dec
sti
push
rorl
test
xor
xchg
cmp
xchg
insb
ja
andl
mov
test
aam
idivb
dec
jge
scas
xor
stos
int
into
insb
adc
pusha
imul
inc
flds
push
push
push
jge
dec
test
and
xchg
sub
roll
js
es
mov
outsl
add
shlb
ret
pop
inc
xchg
dec
or
cltd
div
pushf
mov
jo
outsl
ret
mov
and
fsubrl
push
xchg
outsb
shrl
repz
inc
sbbb
popa
xlat
xor
inc
dec
xor
push
and
mov
add
insb
jno
pop
enter
cmp
cmpsl
cld
scas
or
jl
and
dec
add
dec
cmp
fisubrl
or
push
clc
jo
cmp
nopl
es
in
xor
push
jle
adc
mov
and
dec
shll
sbb
imul
adc
addr16
scas
rorl
in
daa
push
mov
or
lods
es
or
test
add
inc
mov
movsb
inc
push
andb
xor
sub
mov
call
sbb
arpl
jb
mov
lods
push
aam
out
pop
in
nop
or
inc
mov
add
and
in
hlt
push
mov
sub
jbe
mov
mov
xchg
inc
mov
sahf
dec
inc
hlt
xor
pusha
cmc
jbe
cwtl
dec
je
lret
xchg
cld
xchg
dec
mov
jnp
ds
mov
dec
roll
xor
dec
sub
outsb
loop
aad
loope
mov
movsb
push
push
mov
setle
mov
jae
add
lcall
dec
jle
and
fstp
cmp
sub
mov
add
xor
sbb
sub
out
repnz
or
jne,pt
jg
outsl
fs
fstps
test
das
mov
fistl
dec
jl
sti
addr16
stc
cmp
inc
dec
inc
mov
fdivs
lods
dec
or
inc
test
popl
pop
mov
or
push
movsl
pop
aad
pop
out
or
dec
insl
xor
cs
sbb
push
mov
sub
jp
call
adc
ret
push
arpl
push
mov
mov
in
mov
out
test
fadd
out
cmc
call
push
mov
pop
fidivrs
mov
js
ret
ss
bound
sub
and
sub
loope
and
pop
adc
adc
pop
pop
rolb
fisttpl
push
push
lods
push
jbe
lods
inc
dec
stos
test
int3
pop
pop
jmp
leave
mov
jle
cli
in
push
ja
shrl
scas
and
push
stos
jmp
movsb
jmp
sbb
mov
addr16
test
int
sub
jle
cltd
and
and
inc
xor
fisttpl
stos
xor
mov
popa
and
jo
popa
stos
push
divl
lret
xor
xor
pusha
lods
pop
imul
or
mov
mov
mov
popf
or
sub
jns
test
movsl
sahf
daa
loop
cmc
cmp
mov
and
ja
jae
scas
inc
int
xchg
push
insb
sub
mov
into
mov
addr16
idivb
ljmp
lahf
fbstp
ret
xor
jo
fwait
daa
add
outsb
lcall
push
ljmp
mov
fistps
cltd
dec
ficoms
dec
sbb
aam
dec
lock
fbld
cmp
push
add
xorb
stos
dec
orl
testl
std
aaa
jl
pop
aad
jmp
loope
fnstenv
dec
pop
arpl
jne
push
mov
mov
pop
movsb
xor
jae
out
pop
pop
lods
xor
cmc
mov
pop
xchg
xchg
adc
jp
pop
es
stos
mov
ds
jmp
dec
xor
mov
stos
dec
jnp
fnstenv
sbb
and
mov
in
xor
rorl
pop
inc
mov
mov
adc
insl
inc
add
movsl
jae
stos
icebp
and
add
outsl
jmp
or
add
dec
aas
jae
ss
adc
sahf
jmp
pop
add
dec
inc
mov
cmp
lds
jno
pop
dec
dec
adc
mov
fwait
dec
pop
dec
fwait
hlt
mov
das
icebp
roll
repnz
xchg
jae
int3
sbb
test
in
xor
xchg
push
pushf
jge
cmp
out
js
hlt
push
repz
add
jp
test
sub
fisttpl
dec
out
cmpsl
or
int
jo
or
xchg
sub
cmpsl
mov
test
mov
scas
xor
pop
push
lcall
dec
and
orb
negl
add
in
js
repnz
scas
mov
lea
jmp
icebp
in
lret
or
scas
cs
icebp
imul
repz
aam
add
scas
aaa
jae
inc
dec
push
mov
shrd
or
pop
sbb
fsubl
xor
and
psllq
cmp
insb
jne
mov
stos
mov
je
aad
pop
sahf
inc
lods
cmp
ficompl
ss
cld
sahf
push
vrsqrtps
push
bound
dec
fmul
add
sbb
sub
add
aaa
test
cmp
test
ret
inc
cltd
mov
sbb
dec
xchg
mov
add
pop
and
das
aad
rcrb
outsb
stc
ret
xchg
bswap
addr16
push
aas
call
push
movsl
aad
dec
mov
adc
sti
mov
mul
sbb
fdivrl
push
mov
mov
mov
fcmovnbe
cltd
pop
or
pop
adc
es
pop
xchg
or
imulb
xchg
cmp
test
aam
mov
lds
bound
mov
jae
mov
mov
sub
arpl
jecxz
and
mull
shl
fbstp
in
mov
sbb
mov
mov
xor
xchg
in
push
lret
push
inc
adc
add
jno
repnz
or
jbe
dec
pushf
into
adc
stc
xchg
inc
stc
sbb
cmp
fnstsw
jge
add
aaa
jge
cltd
leave
loope
mov
jp
push
adc
neg
enter
leave
add
xchg
inc
mov
es
cmc
adc
int
push
cld
pop
aam
in
cltd
xor
imul
mov
data16
mov
push
lcall
mov
scas
mov
lcall
pop
fucomp
btr
addr16
sub
addr16
ret
rcrb
or
fistl
adcb
mov
scas
mov
insl
int
cmpl
inc
jmp
inc
sub
fwait
sbb
in
addb
popf
nop
mov
stos
lods
sub
stc
jno
xchg
mov
repz
pop
xor
ret
xor
sub
pop
aaa
jbe
pop
mov
inc
mov
pop
imul
repnz
add
sbbb
mov
fwait
push
inc
fmul
cmp
dec
aas
and
push
pop
xchg
adc
imul
mov
dec
cltd
into
std
pop
push
adc
clc
dec
mov
outsb
mov
outsb
shlb
push
sub
cli
cmc
fnsave
in
adc
or
in
push
sbbb
iret
mov
adc
xor
dec
pop
mov
inc
inc
add
cwtl
ret
jmp
dec
out
loopne
push
inc
testl
flds
loope
fcmovnu
mov
sbb
shrb
out
inc
xchg
in
sbb
negb
add
es
cs
stos
lret
loopne,pn
inc
push
or
loop
shl
jg
mov
lds
insl
lcall
lret
xor
aaa
dec
pusha
icebp
xchg
fmuls
mov
or
stc
call
arpl
pop
cmp
lret
add
push
jle
cmp
xchg
stos
test
pushf
adc
or
mov
mov
pop
and
jns
fisubs
mov
jecxz
jmp
addr16
test
lret
pop
inc
add
sub
lcall
push
or
and
shll
das
xchg
stos
push
shr
mov
cli
push
stc
call
push
pop
lret
cld
or
xlat
cmc
jb
push
scas
ret
adc
cmpl
pusha
into
push
mov
mov
insl
xor
les
ret
sbb
sbb
mov
sub
pop
stos
dec
lods
and
sti
xchg
loop
push
jl
es
push
jl
pop
pop
in
and
pop
cmp
insb
and
push
cmpsl
in
dec
mov
das
inc
adc
pop
insl
filds
mov
test
mov
test
xchg
fcomps
mov
pushf
out
es
loop
pop
sbb
inc
addr16
sbb
test
in
and
cwtl
hlt
test
push
dec
iret
or
push
arpl
sti
fneni(8087
or
es
or
mov
add
rorb
rorb
mov
out
xchg
pop
sbbl
pushw
jmp
lahf
mov
lcall
cmp
aam
dec
sbb
iret
stc
jg
inc
sub
into
mov
arpl
mov
or
hlt
jnp
repnz
adc
call
shll
lock
lretw
sub
adc
sbb
mov
inc
mov
ret
jl
mov
cmc
pop
daa
rorl
jl,pn
repz
lahf
mov
hlt
sbb
and
fisubrs
adc
push
or
add
ret
ret
mov
scas
lea
daa
mov
xchg
xchg
sbb
je
sub
sbb
and
adc
jge
frstor
outsl
sbb
push
jo
mov
fs
jle
test
pusha
out
in
adc
aas
and
push
mov
adc
out
mov
pop
mov
jecxz
sub
cmp
cmp
gs
insb
pop
push
adc
jnp
add
sahf
mov
jae
mov
into
into
ja
test
and
xor
scas
ret
push
shr
jne
ss
mov
jnp
sub
clc
negb
pop
sbb
sub
je
push
inc
push
outsl
mov
fdivrs
jmp
jmp
mov
shrl
out
bound
xchg
cmpb
and
xchg
fsubr
notb
scas
jg
enter
cltd
int
jns
lahf
add
sbb
ja
popa
push
test
faddl
sub
add
or
ja
or
rcrb
bound
out
dec
or
movsl
adc
pop
insl
cmp
push
loope
lods
cwtl
inc
dec
dec
andb
leave
add
sti
jl
adc
ljmp
mov
mov
push
in
popf
enter
or
bound
mov
push
fsts
and
xchg
ret
insl
popf
xchg
out
inc
hlt
fiadds
sub
lods
fnstcw
roll
adc
mov
lret
mov
pop
mov
mov
push
jecxz
inc
jne
cmp
cltd
scas
push
out
or
fnstsw
xor
fidivrs
aas
scas
sub
inc
pop
add
mov
jns
packuswb
or
cmpsb
imul
fsubr
push
xor
mov
adc
adc
pop
fdivr
and
leave
mov
iret
push
popa
pop
mov
mov
mov
divb
daa
ja
outsl
gs
movsl
test
pop
push
out
test
dec
fwait
rcrl
inc
inc
icebp
roll
addl
mov
out
adc
sahf
inc
fnstenv
xor
in
hlt
test
inc
push
jl
pop
adc
mov
ljmp
sub
outsb
cs
and
cmp
test
into
dec
arpl
push
repnz
sub
jmp
mov
sbb
adc
hlt
imul
fs
and
pop
pushf
in
pop
push
pop
test
mov
pop
ss
loope
cmc
sbb
call
xorl
enter
cmp
mov
cld
mov
ss
fstpt
iret
std
lods
push
sbbb
cmpsl
inc
pop
stc
in
sub
mov
jns
ret
and
rcll
xchg
inc
inc
arpl
repnz
aas
pop
cmp
fs
mov
shlb
out
xchg
test
cmp
andb
out
pop
outsb
mov
add
sbb
xchg
call
mov
pop
pusha
arpl
xor
bound
inc
dec
mov
fdiv
repnz
jle
pop
push
scas
in
adc
fisubrl
sub
sub
dec
repnz
fcmovne
imul
test
mov
clc
in
std
sar
fsubrl
je
inc
daa
xorl
icebp
sub
lea
mov
aas
mov
lret
mov
cmp
mov
xchg
cli
mov
sti
dec
lcall
data16
outsl
xor
pop
adc
pop
mov
jne
faddl
jns
add
jns
es
loope
or
and
aas
lcall
push
fs
fwait
inc
inc
rcll
sub
jnp
rcl
push
cmpb
mov
js
out
push
cmp
lods
loopne
lcallw
push
xchg
dec
iret
rcll
fadds
add
mov
mov
js
fwait
int3
fsubl
mov
mov
and
mov
jl
out
jge
shlb
stos
ss
movsl
cmp
xor
mov
sbb
and
test
push
mov
xor
jb
jno
mov
movsl
lock
shll
and
movsb
mov
inc
dec
enter
mov
gs
into
scas
mov
mov
in
daa
cmp
fwait
mov
pop
cmc
push
cld
pop
leave
xchg
push
in
mov
jl
imul
sbb
dec
and
ret
pop
xchg
push
push
pop
pop
adc
adc
pop
push
rorl
cld
cmpsb
or
aad
xchg
inc
std
stos
dec
popf
xchg
adc
mov
lahf
sub
sub
in
sub
dec
bound
ret
std
adcb
pop
add
cmovno
mov
lock
inc
add
cmp
pushl
inc
pop
mov
mov
inc
and
aaa
inc
xchg
cmp
in
daa
faddl
jo
jle
mov
popf
mov
jno
dec
inc
pushf
sub
cmp
mov
out
sub
loope
mov
jns
incb
fimuls
fisttpll
cmp
or
pop
lods
or
push
das
add
lret
shlb
imul
inc
inc
mov
add
pop
or
jl
out
in
push
push
mov
push
hlt
lahf
cmc
test
cmc
arpl
add
xchg
jb
push
add
adc
scas
push
repnz
inc
add
sub
rcrl
cli
jg
pop
rcl
loop
call
test
es
add
rcrb
xor
pushf
stos
mov
daa
xchg
das
pusha
mov
cmp
dec
jo
or
call
std
mul
mov
jmp
inc
xor
jl
inc
cld
fcomps
mov
mov
leave
and
adc
or
push
cmpsl
inc
cld
pop
sub
rcll
leave
cmp
push
cmp
push
shl
push
call
out
jge
shrb
xchg
jge
out
sub
mov
inc
sbb
sbb
pop
aam
jnp
adc
repz
div
push
test
aas
sti
rorl
mov
sub
jl
clc
mov
in
mov
dec
sbb
ja
gs
mov
in
sbb
lret
cmpsb
xor
or
cmp
sbb
bound
sub
insl
mov
add
adc
aas
hlt
mov
fcoml
adcb
loop
cmp
dec
leave
mov
notb
or
cli
test
icebp
jle
jae
push
sbb
in
mov
pop
mov
xchg
add
lock
mov
das
push
ljmp
mov
repz
movsl
mov
mov
lcall
lods
ds
mov
ret
aaa
test
mov
arpl
fists
jb
mov
mov
cs
or
add
sbb
fildl
cmp
xchg
notb
lods
rclb
sub
rcrl
inc
cltd
jae
mov
lcall
mov
fwait
xor
out
dec
ljmp
rol
jno
push
jl
mov
push
and
pop
inc
inc
mov
sub
fcomps
push
mov
frstor
mov
lods
hlt
jmp
insl
imul
sub
dec
movsb
js
add
gs
sbbb
gs
js
jp
popf
sbb
outsl
mov
jns
adc
xchg
push
cmp
sar
das
aas
es
sub
inc
in
dec
test
nop
cs
movsb
shlb
mov
xchg
sub
sbb
mov
adc
mov
mov
pop
test
clc
cmp
jns
adc
clc
adc
push
and
mull
mov
or
std
mov
jp
cwtl
rorb
shl
cwtl
je
pop
out
loop
mov
fs
pusha
in
push
jle
imul
aad
inc
fidivl
stos
sbb
ret
cwtl
or
pop
add
push
sti
inc
inc
mov
lret
xchg
test
or
scas
movsb
push
testb
inc
pop
je
lret
loopne
jmp
imul
jbe
xchg
arpl
lea
fcoms
ljmp
popa
iret
xlat
add
cs
insb
inc
pop
xor
dec
js
mov
test
inc
xchg
clc
inc
xchg
push
xchg
push
push
push
xor
lret
inc
in
dec
iret
leave
shll
sub
mov
mov
dec
xchg
sbb
dec
lcall
push
push
add
inc
push
insb
mov
or
ljmp
movsl
pusha
mov
adc
lea
cli
cmp
mov
inc
sahf
pop
fists
pop
xchg
jecxz
loope
dec
sub
cmp
mov
ljmp
xchg
stc
cmpsl
jecxz
sbb
pop
xor
lods
mov
nop
lret
adc
mov
xor
xchg
outsb
push
mov
outsl
fcmovbe
imul
or
push
cmc
adc
dec
int3
aad
aaa
cmpsb
inc
ret
adc
and
incb
into
cmpsl
ss
mov
je
and
mov
fildl
sbb
imul
push
push
out
orb
rcrb
mov
jo
pop
inc
push
and
fnclex
fdivl
cmpsb
inc
dec
inc
mov
jmp
imul
cwtl
cmc
add
jecxz
outsl
push
jno
hlt
mov
fbld
push
lods
xchg
add
sub
jmp
mov
pop
mov
cwtl
mov
inc
inc
imul
mov
pop
lcall
pusha
mov
ret
xchg
bound
jo
lea
add
mov
jns
out
test
leave
cmp
add
outsb
cmp
cs
dec
adc
ss
imul
adc
push
adcl
inc
add
cmc
add
jne
pusha
leave
daa
xchg
in
jl
orb
stc
push
mov
add
or
in
mov
or
scas
shl
and
outsl
mov
push
add
mov
dec
shll
pushf
mov
adc
pop
push
outsb
push
cmp
cmp
fiaddl
dec
es
cmp
incb
je
add
cmpsl
pop
lahf
jb
adc
lcall
xor
jbe
cld
xor
dec
cld
mov
movsb
lret
xchg
mov
dec
or
icebp
or
jle
or
xchg
rorl
xchg
call
fadd
jo
test
inc
test
cltd
int
mov
add
push
imul
insl
xorb
test
loope
sbb
xchg
push
dec
mov
mov
test
sub
xor
in
aas
jbe,pn
lcall
mov
fisubrs
inc
sub
pop
and
cs
sahf
pop
mov
cmp
sbb
mov
mov
adcl
pop
sahf
and
dec
adc
inc
xor
mov
jb
repnz
stos
mov
addr16
push
dec
int
or
das
rolb
bound
enter
jae
jnp
add
aad
mov
push
frstor
cld
ds
into
iret
pop
fidivrl
mov
push
aas
aaa
mov
add
rcrb
mov
fbld
outsl
lcall
xor
aaa
xchg
inc
adc
ss
inc
mov
fimuls
jno
int3
pop
imul
les
push
inc
cmpsb
cmp
bound
and
fcmovb
xchg
stos
aam
sbbb
jae
dec
cmp
mov
pop
mov
gs
xchg
mov
inc
inc
mov
hlt
add
enter
cwtl
enter
fildl
and
cs
pop
js
ffree
xor
jne
pop
mov
int3
xorb
and
add
andb
sbb
sbb
jbe
js
add
aad
push
sub
xchg
xorb
lcall
jb
jno
incb
decl
mov
or
dec
add
add
das
push
sete
hlt
adc
test
pop
repnz
ljmp
fstpt
mov
mov
inc
ja
shlb
les
cmp
lea
imul
dec
and
bound
bound
pop
fiadds
adc
iret
enter
roll
mov
jns
sbb
xchg
lods
pop
sub
cmp
xchg
mov
pop
jne
cmp
lds
lcall
movsb
push
mov
push
sbb
or
fidivl
xchg
insl
leave
mov
jno
lds
jmp
mov
xchg
scas
cmp
mov
fdivrl
and
cmpl
pop
popa
stc
addr16
orb
bound
cmpsb
aad
outsb
mov
movsb
mov
dec
mov
mov
sti
adc
orb
push
sbb
je
daa
stc
test
insl
es
or
movsb
out
lret
lret
aam
out
mov
add
popa
pop
sti
lret
cmpsl
out
push
push
cs
scas
cli
inc
in
jo
cmpsl
push
pop
mov
jne
sbb
js
sub
test
push
fs
or
adc
sub
repnz
ds
rcrb
jae
push
loopne
pop
adc
test
cmpsb
jno
outsl
jle
scas
xchg
mov
mov
stos
cmp
loope
mov
mov
loope
mov
loopne
adc
es
flds
inc
arpl
ja
jecxz
jmp
xchg
pop
jno
adc
dec
pop
mov
je
push
sbb
inc
cmp
mov
stos
inc
test
push
push
push
pop
jge
stc
and
fstl
jle
mov
sub
adc
add
sahf
iret
stos
clc
sub
adc
adc
cmp
mov
loop
xchg
xor
or
ret
push
mov
std
stos
sbb
ret
cld
icebp
pop
popa
cltd
cmp
jl
jmp
push
scas
inc
dec
adc
jp
out
adc
sub
clc
mov
sub
movsb
fisttps
inc
fistl
xchg
pop
push
lods
dec
aaa
sub
pop
insl
mov
data16
subl
pop
dec
stos
xchg
rcrb
mov
lods
pop
mov
jg
cltd
lcall
jecxz
outsb
sbb
xor
int3
cli
loop
adc
sub
lds
jl
or
sub
jbe
push
in
xor
xor
outsl
inc
add
arpl
mull
jno
xchg
out
cwtl
dec
dec
xor
pop
push
xchg
icebp
clc
call
bound
sarl
mov
je
sahf
ror
pusha
adc
sub
or
jb
dec
clc
cmp
xor
fnstenv
mov
cmc
cwtl
es
shrb
pop
cmpsb
ret
fsubrl
jne
aas
arpl
mov
or
outsl
ficoml
jbe
cltd
movsl
inc
xor
das
stc
mov
pop
adc
hlt
dec
push
push
repz
loope
sti
ret
adcb
mov
lahf
in
lods
rcrb
lahf
dec
pop
add
adc
loope
inc
scas
clc
mov
push
add
mov
addr16
jmp
aam
fs
mov
fistpl
sbb
rclb
movsb
inc
adc
loopne
and
xor
mov
cmp
add
addr16
imul
sarb
pop
xchg
jb
xchg
mov
push
loop
aas
imul
int
mov
inc
icebp
in
xor
cli
repz
dec
stos
icebp
and
lods
les
adc
scas
lret
idiv
adc
test
sub
movsl
sub
adc
adc
fcomps
pop
jo
sbb
or
cmp
inc
fsubl
xchg
arpl
fstps
arpl
dec
push
lods
pop
pushf
insb
bound
ror
pop
popf
mov
mov
sub
icebp
ss
mov
jbe
pop
aad
in
fs
dec
xchg
dec
jo
jns
pop
sbb
icebp
sbb
or
sub
notb
lcall
shl
add
loope
addr16
jbe
ficompl
xchg
icebp
out
ficomps
mov
xchg
mov
testl
inc
jl
in
adc
enter
sbb
out
movl
mov
rorb
stos
mov
push
dec
cmp
bound
inc
fdiv
ret
int3
jbe
add
push
sbb
sbb
int
adc
push
bound
push
inc
cli
popa
aaa
jmp
sbb
mov
jae
lea
jbe
inc
aad
sti
or
sbb
leave
testb
sub
popa
push
or
add
jae
mov
jmp
mov
insb
bound
mov
aaa
mov
in
das
xor
mov
addr16
push
lahf
fstl
in
int
jmp
gs
scas
aas
es
lcall
int
add
out
sbb
mov
inc
lods
dec
sbb
sbb
pop
mov
and
popf
insl
fs
outsl
stc
popa
xchg
fisubrl
pop
lret
shl
mov
add
lahf
push
cmp
xlat
jno
mov
call
xchg
repz
mov
adc
jno
jmp
jae
mov
add
dec
xor
lds
mov
pop
sbb
mov
pusha
negl
and
test
xchg
dec
cmp
xlat
jo
mov
or
hlt
addb
jbe
mov
call
jno
inc
cmp
xchg
jnp
sahf
jl
xchg
inc
push
add
cmp
mov
adc
jae
lahf
sub
and
mov
mov
sub
jmp
mov
lds
fwait
cmp
pop
cli
inc
xor
pop
xor
divl
movsl
int
aaa
ret
ficompl
mulb
sub
or
push
push
in
push
iret
cmpsb
add
cli
mov
xchg
jge
pop
mov
jmp
jg
and
outsl
shll
push
pop
xchg
subb
nop
test
popf
sub
divb
scas
add
addb
es
aad
int
mov
aad
stos
data16
jecxz
enter
shr
inc
push
mov
idivl
movd
lods
dec
mov
hlt
movsl
aas
push
add
jle
in
enter
dec
lods
push
pop
cmpsl
mov
jnp
push
jle
mov
xchg
gs
jbe
add
and
adc
sbb
bound
movsb
xchg
pop
push
sbb
push
jo
or
cmpsb
xchg
shl
sub
lea
mov
inc
mov
mov
mov
adc
or
fwait
and
mov
cld
jge
movsl
dec
add
inc
popf
dec
adc
sub
jge
cmp
rep
repz
inc
adc
jmp
roll
int
add
mov
inc
popf
movsbl
fdivrs
cmpb
les
iret
mov
inc
or
cwtl
repz
mov
sub
not
sub
lods
shrl
test
das
push
cmc
cmp
jmp
push
int
jne
mov
sarl
jne
mov
pop
into
sub
mov
pop
sbb
stc
leave
adc
mov
xor
dec
jmp
in
ljmp
add
mov
pop
cmpsl
dec
cmp
shl
mov
dec
sub
xchg
insl
pop
adc
icebp
pop
sbb
mov
adc
ljmp
iret
push
add
sahf
sub
out
pop
cwtl
xor
loope
out
xor
lea
fldenv
mov
pusha
jp
sub
push
mov
pop
ss
out
cmc
mov
add
push
addr16
push
jnp
cmpsb
aam
and
xchg
cmp
pop
jae
pop
mov
xchg
push
add
mov
scas
ds
mov
mulb
leave
cmp
inc
sub
adc
lret
fs
cmp
sub
and
out
cmp
inc
lods
dec
and
ljmp
stc
jecxz
sbb
sub
fstpt
mov
or
movsb
mov
mov
loope
and
sbb
popa
mov
popa
add
movsl
hlt
lods
mov
mov
sub
mov
adc
addr16
leave
lock
rorl
lret
dec
sbb
cs
out
add
cmp
call
test
and
ret
lahf
push
adc
outsl
cmp
cmp
adc
sub
jae
xchg
dec
mov
push
mov
in
sbb
inc
lea
cmp
adc
gs
jo
xchg
into
jae
dec
testb
mov
jmp
inc
mov
enter
daa
mov
dec
int
cmc
and
sub
ret
mov
mov
sub
out
jl
and
out
hlt
mov
push
sub
movsb
icebp
or
fcmovnb
mov
sar
mov
sub
repnz
inc
mov
sub
add
pop
dec
es
xchg
push
cmp
adc
lahf
dec
ja
cmp
in
sbb
inc
push
fwait
xchg
add
in
fisubs
inc
adc
mov
movsl
mov
jo
push
inc
sti
jnp
mov
push
inc
or
adc
out
push
imul
push
sbb
insl
push
mov
or
adcb
pop
mov
stc
mov
sub
jle
negl
ja
bound
sub
cmpsl
notl
sbb
xchg
es
dec
outsl
loopne
es
mov
mov
mov
push
cs
jne
pushl
inc
mov
xchg
xor
xchg
sub
push
cmp
pop
fildl
mov
stos
test
ds
and
sbb
mov
fstpl
pop
sub
jmp
xor
gs
jp
es
dec
dec
xchg
inc
dec
fwait
jbe
inc
or
adc
xor
inc
add
aad
nop
mov
mov
pop
jb
push
push
in
jnp
andl
shlb
aad
add
xchg
or
mov
and
aaa
mov
adc
mov
cmp
ret
repz
push
movsl
loope
stos
lret
jmp
jb
pop
in
mov
ja
std
adc
nop
out
cli
rolb
shll
enter
lahf
or
insb
sub
sahf
ret
mov
jmp
fiadds
icebp
lcall
outsl
mov
xchg
mov
push
jne
push
inc
inc
adc
adc
jg
es
and
int3
pop
adc
lret
cmc
fnstsw
push
sub
xor
lcall
cwtl
add
dec
adc
push
xchg
jne
mov
xlat
xchg
dec
sub
xchg
cwtl
in
mov
or
sub
sub
sbb
sbb
sbb
dec
mov
cmp
jo
enter
cmc
mov
push
rol
shld
xchg
inc
aad
xchg
nop
das
inc
sub
into
mov
fbstp
movsb
imul
dec
dec
imul
mov
push
jno
jnp
scas
les
mov
mov
mov
test
int3
mov
por
mov
cmp
stc
push
ret
sarl
mov
mov
xchg
nop
mov
fistpl
aaa
push
data16
push
je
sub
xor
popf
mov
sub
push
outsb
clc
dec
jns
lock
mov
in
imul
stc
ret
add
jmp
push
jmp
sbbl
push
cmp
shrb
push
adc
cmp
add
bound
test
jnp
jle
js
arpl
shlb
jno
xchg
and
ret
aad
push
stos
cmp
and
pop
lods
inc
lahf
fisubrs
push
fucomip
jge
lret
les
in
xor
lret
pop
add
mov
push
ljmp
in
xchg
bound
mov
mov
sbb
int
loope
adc
xor
clc
std
push
mov
call
mov
and
cmpsl
adc
lods
pushf
cmp
sbbl
push
push
test
mov
or
add
fsubrl
popf
xchg
repnz
cmp
pop
pop
dec
pop
or
in
push
xchg
push
shl
jge
nop
xchg
in
mov
xchg
es
pop
dec
push
dec
mov
loope
inc
pop
push
lahf
mov
loop
jns
scas
scas
fmuls
cmp
add
pop
dec
cmp
popa
xchg
add
mov
pop
xor
sbb
rclb
cmp
stos
pop
mov
cmp
sbb
data16
cmp
push
sbb
in
jl
js
xlat
add
sbb
je
jne
xchg
cmc
push
xor
orl
cmpb
pmulhuw
jae
jecxz
push
add
pop
daa
xchg
aas
cmp
xor
mov
mov
addr16
push
sub
negl
hlt
lret
aam
nop
repnz
adc
cmp
push
cmp
pop
jb
decb
decb
xchg
sti
fnstsw
mov
shrb
add
out
jb
mov
push
loopne
fildll
inc
pop
in
pop
insb
ret
popf
mov
ljmp
dec
sbb
test
nop
cmpl
cmp
lret
sub
cmp
dec
mov
push
adc
dec
push
rcl
sbb
movsb
lret
ja
lods
incl
out
inc
cltd
sbb
cmc
aaa
nop
mov
sbb
lret
cld
or
js
jp
stos
imull
repz
lods
xor
stc
movsb
jg
movl
inc
test
hlt
add
dec
mov
lods
add
punpckhbw
mov
dec
pop
mov
shrl
lahf
or
ret
or
adc
adc
jns
arpl
cmp
aam
stos
out
adc
mov
sub
rolb
mov
lock
daa
pop
jb
pop
sbb
mov
rdmsr
mov
push
test
iret
pop
lcall
insl
push
mov
xor
orl
adc
xchg
inc
test
jnp
lahf
push
xor
sti
imul
adc
pop
adc
or
sub
xor
out
xchg
mov
nop
ret
lods
jle
rclb
je
int
dec
sub
or
xchg
adc
pop
push
add
addl
adc
pop
loopne
mov
xor
pop
mov
fs
mov
cs
mov
mov
mov
testl
push
fbld
jecxz
and
pop
shlb
movsl
pusha
rol
les
scas
mov
int3
sub
fistpll
xor
cwtl
in
cld
adc
sahf
rclb
push
js
aam
mov
leave
and
sub
int3
jbe
push
pop
push
xor
in
int3
push
mov
pop
ret
sbb
cmp
add
add
insb
jnp
cld
pop
out
fldcw
pop
scas
push
cmp
jle
mov
das
insb
push
cwtl
aad
add
lret
or
inc
ret
test
popa
daa
or
and
jne
push
fstl
test
mov
dec
jae
mov
in
push
mov
dec
cmp
mov
ds
pop
push
pushf
test
js
pop
ret
test
sub
xor
push
pop
pop
lret
scas
mov
out
sbb
cmc
xor
xchg
stc
cmp
xor
cs
mov
mov
mov
clc
fld
inc
mov
cmc
in
sahf
das
mov
xor
fwait
dec
lret
in
mov
push
or
or
mov
flds
movsb
fadds
scas
sbb
int3
fs
mov
aas
jo
dec
xchg
aaa
js
xor
dec
imul
data16
movsb
out
icebp
inc
cmp
pop
imul
xchg
jle
push
aas
or
arpl
dec
mov
dec
sbb
imul
jge
sub
lds
xchg
pop
lea
push
popa
mov
and
loopne
out
int3
enter
inc
sub
adc
jle
lahf
cmp
subl
mov
rorb
leave
sbb
aam
cwtl
stc
scas
sbb
adc
inc
mov
lock
inc
jle
fldcw
and
enter
mov
cmpl
nop
xor
test
lds
mov
jo
adc
dec
push
sub
add
or
cmpsl
push
jge
adcl
aaa
cmp
in
inc
jmp
adc
fsubrp
jge
push
mov
mov
pop
shlb
daa
test
cltd
push
int
jmp
sbb
push
jb
sbb
popl
lea
mov
jno
inc
test
or
lea
les
jnp
das
pop
add
dec
test
adc
sbb
cmpb
hlt
push
cld
cmp
stos
add
xchg
lret
jno
add
add
add
dec
mov
int3
push
pop
scas
mov
stos
sbb
dec
pop
rep
mov
or
lods
mov
mov
fnclex
outsb
sbb
sbb
cmp
sbb
insb
call
add
adc
xor
inc
pusha
or
outsl
cmp
loope
pop
xor
mov
test
insb
test
fcomp
xchg
add
fmulp
sarl
popf
push
fcompl
popa
test
fwait
test
rclb
fcomi
jb
cmpl
jp
mov
mov
and
pop
pop
cmpsb
and
scas
repnz
es
mov
shlb
fs
pop
push
jns
xor
insl
enter
es
in
fwait
inc
jae
test
cld
jns
stos
mov
lea
jg
popf
jg
xchg
in
and
sbb
dec
mov
mov
testl
add
nop
xchg
test
lds
loopne
into
mov
outsb
sub
test
and
aad
and
aam
testb
out
popf
xor
fisttps
imul
xor
sub
insl
cmp
sub
pop
adc
lahf
jl
mov
lock
xlat
dec
mov
sub
mov
les
push
cmp
jg
push
push
icebp
inc
add
sub
cwtl
push
jnp
mov
xor
mov
cld
jno
dec
pop
cli
mov
in
std
in
mov
std
stos
imul
mov
ret
xor
mov
std
cmp
shrl
or
cmpsl
adc
iret
jo
pop
ftst
mov
xchg
sahf
mov
inc
sarl
push
fimull
mov
or
mov
xchg
cmpl
mov
mov
xor
mov
sub
xor
outsb
xor
ja
push
out
mov
mov
daa
outsl
cmp
push
jp
sub
mov
dec
insb
dec
test
leave
xchg
scas
sub
cs
push
dec
insl
sub
and
mov
push
movsl
lcall
pop
scas
int
lods
popa
push
add
das
add
jae
int
jecxz
scas
hlt
inc
xorb
pusha
cmp
add
mov
nop
decb
movq
xlat
mov
lret
inc
jg
dec
mov
mov
or
rcrb
out
stos
arpl
test
stos
or
popf
loope
stc
add
xchg
adc
std
lea
xchg
int3
das
in
mov
mov
int
xor
xchg
icebp
leave
rcrl
pop
out
fs
mov
pop
inc
mov
imul
inc
cmp
push
add
mov
push
xor
add
out
sub
xor
xchg
mov
push
cwtl
lret
jge
jae
rclb
mov
pop
pop
aas
mov
sub
mov
ss
pop
sub
call
mov
inc
cmp
pusha
mov
je
mov
xchg
adc
mov
stos
das
mov
jo
in
out
jg
int
jmp
or
setle
cmp
mov
xor
aaa
loope
fldenv
mov
inc
inc
xor
xchg
lcall
push
or
cmp
jmp
shrl
outsb
pop
scas
test
imul
mov
jbe
xor
sbb
inc
xchg
hlt
movsb
push
push
jbe
lods
xor
mov
fisttpll
ja
sahf
jnp
or
imul
adc
push
and
pusha
lods
xlat
ss
mov
pop
stc
xchg
jp
movsl
or
mov
inc
jo
push
lock
shr
aad
mov
sub
sbb
bound
push
inc
mov
mov
mov
gs
jns
pop
xor
fsubr
out
xor
ja
jnp
fnstcw
inc
cmp
in
fmull
jnp
stos
cmp
pop
jge
add
mov
sbbb
fs
stos
cmp
cmp
dec
popa
mov
popf
jmp
jno
sub
jecxz
lahf
push
mov
and
inc
jp
fs
inc
jle
push
out
test
insl
mov
pop
inc
negl
pop
pushaw
xchg
clc
and
movl
into
mov
leave
inc
mov
shl
or
std
jae
xchg
test
or
pushf
pop
js
out
xchg
sbb
xchg
xchg
jecxz
adc
xchg
leave
insb
sbb
call
adc
jp
dec
sti
cmp
mov
add
and
outsl
dec
cmp
xor
or
mov
icebp
pop
sbb
in
and
call
popf
hlt
mov
adc
and
into
dec
sarb
in
inc
cmp
in
mov
sbb
jmp
push
push
aaa
in
fsubrp
xor
out
mov
xor
push
jp
lea
shr
enter
insl
adc
push
mov
sub
movsl
xor
mov
sahf
xor
inc
ljmp
ss
dec
add
pop
out
jecxz
xchg
pop
add
mov
jmp
mov
test
jb
mov
xchg
out
xor
push
jle
mov
and
popa
xchg
sbb
jecxz
cmp
cmp
fdivrl
jns
subl
add
pop
mov
add
stos
stos
pusha
hlt
mov
add
hlt
testl
cmp
mov
inc
cmp
mov
sbb
loop
mov
inc
sub
jle
or
int
roll
lods
ljmp
sub
in
ja
add
mov
inc
or
or
ss
xor
rcrl
nop
jge
int
xchg
mull
add
sub
xchg
sbb
enter
sti
xor
jno
jle
cli
shrl
aaa
adc
add
inc
cmc
and
dec
pop
ficoml
cmp
and
sbbl
js
aaa
adc
idiv
stos
scas
dec
sbb
and
std
cmp
in
hlt
cmpsl
inc
xchg
jge
jbe
adc
pop
rcll
xor
pop
dec
sub
mov
daa
push
push
or
or
lcall
pop
cs
lret
js
mov
or
test
lahf
daa
aam
mov
cmp
shlb
stos
push
popa
push
or
xchg
xchg
push
cmpsl
cmp
outsl
and
dec
push
insl
xchg
sub
rclb
fwait
push
mov
jns
adc
lahf
scas
ds
inc
push
es
xor
mov
cmp
in
xor
adcl
pop
icebp
mov
xor
cmp
jbe
mov
or
into
mov
out
xchg
mov
xchg
out
pop
scas
xchg
mov
imul
jecxz
sbb
and
push
jns
cmpsl
sbb
mov
bnd
xchg
lret
mov
or
mov
loopne
sahf
cmp
je
inc
ljmp
repnz
mov
cmp
cmp
jge
xchg
data16
mov
sub
test
or
in
mov
scas
sarl
mov
les
daa
sbb
push
inc
ds
cltd
push
cs
push
int
lock
call
out
dec
in
pop
push
xor
pushf
sub
out
cmc
jmp
imul
orl
jnp
cmp
dec
sbb
adc
cld
fwait
mov
adc
int3
sub
xchg
mov
rol
enter
sub
and
mov
jo
mov
fists
mov
inc
setle
lret
addr16
add
jge
jnp
sti
adc
sub
fistps
sub
jp
leave
fcmovu
icebp
xor
push
insb
mov
cltd
sub
add
mov
in
sub
cmp
sbb
out
loope
add
dec
pop
inc
xor
in
addr16
and
sbb
or
cmc
mov
mov
push
cli
mov
jne
enter
pop
jbe
xor
test
add
inc
xchg
pusha
mov
sbb
test
jl
push
sbb
ret
and
sub
inc
pop
mov
das
and
mov
rorl
and
out
lcall
jns
mov
xor
sbb
dec
mov
scas
or
mov
sbb
jne
xchg
jbe
popf
dec
mov
fnstenv
rcl
pop
mov
pushf
mov
inc
enter
out
or
inc
jecxz
xor
enter
inc
inc
sub
xchg
and
xchg
popa
test
mov
inc
mov
repz
mov
cli
and
sbb
cmp
xor
cs
int3
mov
dec
inc
out
lods
xchg
ljmp
test
mov
shl
inc
mov
add
fbstp
sub
ret
cmc
addr16
mov
enter
sub
xorb
test
orb
xchg
les
dec
pop
lods
out
dec
and
add
nop
cmp
insb
rorb
mov
in
movsb
jnp
adc
add
sti
loope
dec
bound
add
frstors
xor
fnstsw
push
xchg
pop
sub
fwait
test
jge
cltd
fnstsw
out
repz
cli
imul
or
loop
cld
insl
ss
mov
dec
rcrl
cmp
sub
mov
jecxz
stos
and
mov
ja
in
imul
pop
cmpsb
jbe
in
stos
xor
cmpb
mov
push
nop
xchg
lret
jno
mov
xchg
pop
popa
cmp
mov
pop
jmp
xchg
decb
mov
mov
jge
fstpl
dec
inc
dec
nop
ret
outsb
jecxz
daa
fwait
mov
inc
fidivs
call
or
mov
ja
out
ljmp
push
and
or
lahf
jmp
sahf
jne
loopne
fidivrs
cmc
imul
aas
je
push
mov
mov
xchg
or
fnstcw
in
imul
das
ds
dec
pop
dec
adc
sbb
sbb
gs
test
loop
xchg
clc
movsb
loop
lea
aam
push
sti
cmp
cs
dec
and
cld
pop
loop
les
leave
adc
sub
daa
shlb
inc
push
mov
daa
xor
push
xchg
loope
bound
sbb
notb
dec
test
inc
lods
add
shr
adc
xor
xor
sbb
push
jl
push
cmp
adc
add
inc
cwtl
les
sahf
icebp
je
mov
mov
div
jno
pop
cltd
lods
mov
push
pop
cs
fld
mov
dec
lret
mov
dec
fwait
pop
roll
pop
and
mov
outsb
sbb
and
pop
loope
add
hlt
clc
jno
sbb
pop
mov
std
fcmovb
cmpl
cmpsl
push
push
pop
mov
aam
xlat
push
jno
dec
push
hlt
sbb
mov
insl
add
mov
xor
jnp
dec
btr
jnp
pop
mov
push
shl
mov
mov
nop
iret
sub
mov
lcall
and
or
imul
inc
pop
pop
sti
mov
jnp
hlt
cmc
sub
sbbb
adc
pop
sub
dec
rcl
add
cs
imul
add
pop
pop
or
push
sub
iret
push
inc
out
inc
xlat
in
and
loop
xor
loop
ss
sub
out
cmp
fsubs
xor
insl
mov
popf
dec
inc
lods
bound
lldt
cmp
in
sub
fcoms
hlt
lcall
inc
notb
mov
mov
xor
lcall
shlb
dec
cld
mov
incb
push
pop
arpl
mov
jno
lahf
negb
add
cmp
or
inc
mov
imulb
inc
add
sbb
push
mov
or
cltd
pop
push
mov
adc
enter
pop
sbb
out
lahf
push
push
lcall
jnp
mov
in
divl
es
or
jmp
jle
clc
mov
pop
decl
lods
imul
pop
xlat
xchg
jbe
sub
imul
dec
ss
cli
and
sbb
xchg
mov
sarb
push
hlt
out
out
scas
stos
and
mov
pop
mov
inc
adc
inc
in
ret
sti
cmp
lea
xchg
xor
pop
insl
popw
aad
popf
mov
in
mov
ds
imul
pop
jge
inc
mov
cmp
push
xorb
cmpsl
cmp
push
in
mov
mov
push
cmp
shll
push
pop
mov
cmp
sti
mov
enter
stos
jle
inc
pop
lea
insb
jg
out
adc
aaa
ret
inc
xchg
outsb
int
jle
sbb
ss
sub
push
sub
rsqrtps
push
push
push
pop
add
dec
push
sub
jne
in
addr16
ljmp
adcl
jp
hlt
sbb
loop
cmp
mov
sbb
leave
jbe
imul
mov
jae
cmpsl
lock
js
adc
adcl
or
insb
and
add
push
popf
fisubs
ret
pop
popf
xor
pusha
testb
jg
jno
dec
addb
dec
push
jne
imul
rol
and
jb
inc
or
mov
mov
mov
std
mov
xchg
dec
das
sub
nop
into
xchg
ja
pop
mov
sub
cmp
mov
or
rcrl
cld
mov
jmp
addr16
mov
jmp
shlb
fimull
incb
sbbb
fdivrs
or
repnz
out
or
xor
xlat
mov
addb
pop
jmp
enter
sti
out
cltd
ja
adc
roll
push
or
sahf
pop
dec
fwait
out
js
jl
out
jp
cmp
mov
testb
xor
xor
push
cmp
mov
imul
ret
xor
lock
and
mov
mov
repz
repz
push
mov
jmp
shrl
inc
mov
and
rorl
cmp
jo
out
int3
jae
adc
imul
inc
out
test
mov
leave
jl
mov
nop
inc
add
sub
test
rclb
lock
pop
scas
mov
jmp
iret
push
jp
mov
jae
lods
xchg
ljmp
lahf
aad
lds
cs
pop
xor
es
aas
inc
jb
adcl
and
dec
add
add
dec
add
or
or
ja
pop
icebp
fcompl
es
cmc
mov
or
fisubs
aas
mov
dec
pop
out
repz
dec
shlb
adc
out
je
aas
jbe
jle
sbb
les
mov
mov
mov
or
lret
rol
mov
in
inc
aas
jecxz
and
pusha
cmpl
mov
int
jp
popf
mov
fcomip
mov
and
xor
xchg
lret
cmc
inc
cmp
mov
repz
das
push
xchg
insb
daa
frstor
cmp
repz
xchg
and
icebp
sti
mov
jne
add
fisttpll
add
repz
lods
call
add
dec
or
cmpsb
nop
pop
jnp
outsl
jbe
ja
xor
jo
add
fstpl
xor
fidivrs
repz
cld
sti
push
inc
rcl
jbe
push
mov
ret
imul
pop
push
mov
ret
jl
in
scas
movhlps
sub
sbb
xchg
movl
scas
adc
and
xchg
rcrl
test
dec
xchg
adc
inc
je
sbb
shll
jns
cmp
mov
icebp
push
xchg
lahf
mov
dec
xchg
pop
mov
addb
xchg
sbb
add
pop
mov
mov
dec
sti
add
xor
loop
xchg
xchg
pop
ficoml
push
pinsrw
pop
cmp
in
mov
shll
lret
inc
xchg
in
mov
cmpl
ret
dec
arpl
add
dec
mov
movsb
dec
push
sub
jl
dec
es
pop
fadds
inc
and
mov
outsl
in
fisubl
and
push
aam
inc
or
imul
loopne
out
stos
jmp
mov
stos
xchg
add
mov
js
jg
insb
jecxz
mov
pop
fdivr
cwtl
dec
push
shl
adc
cwtl
mov
xlat
mov
insl
imul
pushf
ret
pusha
inc
cld
push
push
pushf
sbb
add
push
cld
roll
jl
bound
out
fistps
jmp
mov
aad
shrb
or
adc
nop
out
movsl
imul
push
psrld
clc
iret
lods
mov
cmp
ja
sbb
sub
jmp
int
and
add
pop
mov
subb
inc
cmp
cwtl
lret
mov
into
pop
out
push
aad
jo
stc
mov
popf
lret
push
lods
pop
cmp
inc
loope
jno
add
hlt
movsl
pop
aaa
push
ret
je
push
je
fcomps
sbb
add
push
jle
push
jmp
add
inc
popa
xchg
jmp
ss
or
repnz
pop
jecxz
dec
jnp
fcoml
das
push
add
or
add
add
mov
imul
xlat
dec
insl
out
mov
lret
and
fimuls
mov
paddsw
and
lock
jno
sbb
jne
out
xchg
leave
push
pop
iret
inc
add
fstl
hlt
fimull
jle
sub
jne
std
pop
jbe
push
insl
outsl
ret
xor
enter
cmp
sbb
adc
sti
pop
adc
push
es
sti
push
dec
or
mov
cs
pop
inc
jnp,pt
pop
pusha
push
xor
and
lret
xchg
add
and
push
push
arpl
xor
dec
adc
mov
jp
fildl
imul
sahf
or
pop
mov
adc
adc
arpl
in
aad
xchg
aad
icebp
cmp
aaa
insb
jle
or
and
mov
divl
and
jne
filds
addb
int
test
into
xchg
cwtl
xor
or
pop
push
gs
fnstcw
iret
inc
pop
ret
push
inc
jg
sbb
lods
adc
test
lods
sbb
jo
or
push
sarb
testb
cmpsl
xlat
adc
pop
das
xchg
xor
pusha
fistps
shlb
das
lret
bound
mov
hlt
arpl
push
cmp
xchg
loopne
xor
jns
and
adc
mov
add
rorb
in
mov
cmc
outsl
lcall
iret
push
call
outsb
movsb
scas
add
push
jne
arpl
stos
mov
jle
inc
cmp
or
stos
dec
sub
add
or
iret
fstl
jnp
into
sub
adc
add
sbb
or
rcrb
ret
mov
nop
shlb
mov
fimull
int
mov
mov
aaa
fnstenv
push
stc
sub
jns
inc
test
sarl
inc
pusha
cmp
dec
or
fdivrs
in
lret
outsb
pop
mov
jge
aam
and
cmpsl
mov
mov
jae
sbb
ljmp
dec
inc
xor
pop
in
sar
inc
fistps
not
test
xchg
imul
outsl
add
add
daa
subl
les
mov
orb
mov
sub
xor
and
xchg
or
push
push
sub
dec
push
jno
xchg
cmp
insb
imulb
in
xor
mov
jb
mov
mov
sub
in
push
adc
repnz
fstpt
test
mov
push
mov
push
mov
jo
pop
popf
mov
or
scas
and
inc
lds
fwait
fs
push
ljmp
int
rorl
in
sub
es
aas
outsl
pop
sbb
ss
js
fstpt
jbe
and
sbb
and
sub
jl
mov
jle
jnp
mov
pop
mov
mov
ja
jp
pop
mov
jbe
pop
lcall
pop
outsb
mov
gs
decl
imul
fwait
mov
shr
out
xchg
sbb
dec
jl
out
scas
unpckhps
cmc
mov
test
stc
lea
in
inc
cli
dec
insl
pop
js
mov
dec
push
int
jno
test
jb
mov
ret
push
xor
push
xchg
xor
iret
sub
jmp
jae
pop
sbb
xchg
loopne
mov
je
clc
leave
loopne
dec
test
add
pop
push
int3
pushw
popf
stc
inc
aaa
sub
inc
xor
mov
lea
cmp
lcall
pop
popa
imul
inc
sbb
mov
jecxz
and
aam
or
jp
mov
jae
adc
in
sbb
es
mov
int3
mov
mov
pop
push
dec
adc
and
xchg
mov
cwtl
mov
mov
ds
push
cmp
inc
pop
mov
cmpsl
xchg
sub
or
test
scas
push
mov
jecxz
nop
mov
fs
subb
mov
cmp
push
mov
sbb
mov
dec
sub
and
ficoml
sbb
pop
sub
aam
mov
xchg
stc
jmp
dec
popa
lcall
jecxz
xchg
xor
add
xorl
mov
into
or
cwtl
sbb
mov
inc
stc
xor
push
xor
inc
pop
xchg
fbstp
shll
fstl
test
clc
fldenv
loope
xor
xchg
cmp
sbb
inc
add
std
xor
jle
and
mov
or
into
xor
ljmp
fldl
pushf
push
stos
aas
dec
mov
sbb
push
fmulp
add
pop
pop
enter
nop
loop
jl
je
jae
fmul
cltd
incb
mov
add
dec
pop
jmp
je
sub
data16
and
mov
mov
jge
sbb
push
adc
dec
push
loope
cs
xchg
xor
rol
add
inc
fnsave
and
iret
pushf
push
xchg
out
xchg
or
insl
push
rorl
int
mov
call
sbb
jns
lahf
xchg
xchg
mov
pop
sti
add
imul
cmpsl
pop
push
cltd
xor
cs
add
loope
lock
scas
cmp
dec
call
ljmp
mov
jecxz
imul
lods
popa
jnp
and
pop
mov
insl
scas
shl
mov
jp
push
jb
push
arpl
inc
stc
nop
in
imul
inc
cmp
and
dec
inc
nop
das
repnz
sub
mov
out
add
push
jnp
stos
mov
add
rol
inc
xor
scas
stos
ljmp
std
push
mov
mov
mov
mov
std
aaa
in
or
pushf
movsb
popf
xor
test
dec
rcll
xchg
imul
mov
xchg
jecxz
enter
in
out
add
pop
fnstsw
movsl
cmp
in
jae
dec
imulb
xor
fsts
adc
dec
xor
sti
sbb
mov
aad
pop
cmpb
sub
out
cwtl
pop
out
push
sub
mov
sbb
mov
jge
push
in
dec
jbe
jg
pushf
test
mov
adc
imul
and
cmc
jp
xchg
in
jecxz
in
fs
pop
jno
lcall
lods
lret
in
pop
aas
cli
inc
inc
popf
in
push
lret
cltd
into
jns
xor
jne
sbb
adc
pop
int
cmp
out
test
insb
movsl
pusha
or
push
test
in
outsb
push
or
hlt
pop
sub
pusha
movsl
ret
ds
sbb
xchg
test
jnp
or
in
xor
icebp
jg
cmp
shll
pushw
pop
inc
xor
clc
mov
and
fs
stc
and
dec
xor
add
das
sbb
jl
dec
nop
mov
stc
push
push
imul
iret
es
lahf
pop
sarb
nop
xlat
daa
mov
inc
mov
push
arpl
push
in
decl
pop
and
rolb
and
inc
in
rcr
int3
or
adc
inc
mov
push
xor
dec
int
inc
push
mov
aas
dec
xchg
pop
adc
rol
mov
out
inc
sbb
pop
jne
and
int
fisttpll
test
test
cmp
or
sub
movsb
fdivrp
xor
arpl
nop
cs
pop
fistpll
lock
push
fs
fists
adc
mov
jp
in
mov
inc
sub
sbb
mov
loope
push
xchg
lret
stos
add
lea
xchg
cmp
fcompl
jo
or
fwait
shrl
mov
push
bound
mov
mov
imul
inc
mov
push
push
rcrb
scas
fucomp
pop
popf
daa
insb
push
data16
inc
sub
pop
daa
addr16
enter
jg
ljmp
pop
mov
and
loopne
mov
add
mov
pop
int3
lret
imul
scas
les
mov
or
cmc
jmp
in
jmp
daa
inc
xchg
jmp
icebp
ret
mov
ja
mov
fisubrs
push
push
xchg
js
clc
xor
mov
mov
inc
std
jmp
xchg
outsl
cmc
push
lret
movsb
mov
jnp
std
icebp
dec
xor
rcrb
cs
xchg
inc
clc
mov
pop
insb
popf
mov
cmp
rcrl
xor
jbe
out
jle
push
jl
adc
cmp
jp
or
add
fwait
sbb
pop
jae
xchg
sbb
sub
push
hlt
cs
iret
dec
movsb
cmpsl
cli
scas
flds
cmpsl
lods
addr16
fisttpl
add
cs
std
sti
lcall
add
dec
movsl
fs
dec
rorl
leave
loopne
inc
push
test
mov
adc
inc
sub
sbbl
mov
fwait
jl
xchg
roll
jmp
push
or
push
or
push
xor
mov
aaa
gs
ss
xor
xor
cmp
sub
push
jl
imul
pcmpeqb
sbb
in
fdivl
std
lds
push
inc
and
mov
cs
and
fsubl
iret
mov
js
into
icebp
cli
in
imul
xchg
dec
bound
jecxz
sbb
icebp
jp
aas
mov
test
jmp
add
sub
test
pop
sub
push
subb
sarl
imul
pop
push
push
jmp
jns
cmp
dec
punpcklwd
shlb
xor
rol
add
sub
adc
adc
xchg
xchg
push
xor
jns
mov
jge
stos
ljmp
pop
fidivs
jnp
lods
icebp
or
call
add
jmp
mov
ret
pop
aad
push
jg
add
push
fldt
xor
or
fmull
sbb
jmp
lods
cmpsb
adc
hlt
xchg
es
divl
loope
and
rcr
add
inc
jnp
cmp
enter
cwtl
rcrb
sub
lods
push
data16
subl
ja
inc
and
pop
add
inc
jo
cmp
xor
ret
mov
repz
daa
es
xor
fxch
in
mov
xchg
call
jb
cwtl
in
jo
and
or
insb
push
mov
scas
push
inc
mov
in
xchg
inc
cmp
jmp
dec
mov
sub
sahf
cmp
popa
jecxz
push
dec
scas
mov
roll
fistl
andl
xchg
int
adcb
int3
scas
sti
push
dec
mov
idivl
mov
jo
adc
push
into
inc
test
mov
roll
sbb
movsl
stos
mov
outsl
sahf
add
mov
xor
icebp
or
sahf
xchg
in
push
pop
enter
icebp
mov
xor
pop
ljmp
shrl
test
fiadds
pusha
roll
stc
inc
in
dec
out
je
sti
idivl
push
pop
sbb
clc
ret
inc
mov
pop
add
test
fs
push
insl
leave
xlat
cltd
inc
stos
push
lea
xor
loope
push
pop
mov
pop
adc
sbb
inc
lods
adc
mov
inc
xchg
dec
lahf
mov
push
cmp
jns
pop
in
xor
dec
mov
pop
jmp
rorb
in
leave
dec
jecxz
rorb
out
ljmp
push
out
hlt
push
aas
sbb
daa
adc
test
imul
movsb
addr16
push
xchg
pop
jecxz
pop
adc
scas
gs
mov
xchg
cmc
test
out
jle
out
repz
stos
inc
lds
jnp
jmp
mov
and
mov
sub
sub
fldl
rcrb
or
sahf
mov
bnd
frstor
int3
mov
subb
sbb
add
or
mov
pop
jns
mov
mov
pcmpeqb
in
and
xchg
shrd
js
push
and
mov
in
xor
mov
xlat
das
repnz
gs
in
push
jg
out
repz
mov
mov
iret
mov
inc
lods
mov
mov
dec
xor
or
bound
aad
jb
and
mov
outsb
ret
mov
ja
pusha
pop
sub
jp
xlat
test
xor
cli
xchg
out
pusha
cs
loope
insl
aas
jb
cmp
les
std
jp
inc
sbb
cld
das
mov
jne
fnstcw
jg
dec
das
xor
lcall
in
movsl
js
sbb
aaa
ret
and
fsubr
test
addr16
sarl
xor
rolb
cmc
or
insl
enter
dec
mov
push
mov
shlb
ds
je
add
cwtl
push
mov
imul
push
add
or
mov
lahf
imul
dec
fidivl
jecxz
ds
sbb
das
add
in
or
lret
sub
fstpt
add
sahf
shrb
pop
and
jge
sub
adc
out
and
push
sbb
ret
mov
push
je
insl
leave
dec
clc
cmpl
xor
jl
push
mov
mov
fcmovnb
dec
pop
neg
je
sbb
xchg
shll
aaa
jge
cltd
mulb
sti
int3
dec
add
int3
and
sti
mov
sbb
push
mov
outsl
and
pushl
sub
pushf
imul
push
pop
daa
add
ret
lock
mov
or
hlt
jl
pusha
xchg
insl
fstpt
or
inc
ja
movsb
sub
mov
mov
leave
mov
sub
jl
mov
pop
or
inc
sahf
int3
lcall
movsb
xchg
xor
fnstenv
add
cmp
in
mov
int3
out
mov
fdivrs
push
pop
xor
cmp
pushf
jae
add
mov
lret
lods
jne
xor
adc
in
mov
adc
leave
jle
repz
fmul
xchg
xchg
sbb
push
lock
mov
aad
jb
gs
es
icebp
jnp
stos
push
dec
stc
adc
aad
cli
inc
or
out
arpl
and
fcomps
pushf
push
movsb
js,pt
mulb
push
dec
sbb
sub
xchg
lods
ljmp
jno
loop
ffreep
dec
cmpxchg
mov
cmp
outsl
and
mov
dec
out
scas
in
lret
ds
sbb
or
stos
mov
imulb
pop
jnp
cmp
jecxz
push
push
adc
adc
cli
push
mov
loopne
sbb
push
xchg
mov
incl
stos
pop
ljmp
sub
imul
jo
movsb
mov
add
pop
mov
and
cmpsl
pop
dec
mov
bswap
cmp
sbb
or
outsl
ss
jno
inc
fwait
dec
mov
loope
push
leave
in
daa
jo
mov
sbb
insb
push
mov
dec
pop
pop
cmpsb
aas
aam
loop
mov
ja
adc
std
cmp
xor
loope
fwait
mov
mov
lods
adc
or
call
xchg
fucom
cmpsl
ljmp
icebp
dec
push
push
mov
xor
or
iret
sub
jne
xor
xor
mov
fcmovu
mov
sbb
mov
mov
sub
in
movsl
xchg
notb
fcmovb
or
mov
pop
dec
xchg
movsl
repnz
fstpl
mov
lods
mov
or
and
xchg
lds
fildl
pop
xor
and
xor
adc
sahf
dec
ret
inc
push
in
push
inc
push
cmpsl
mov
mov
out
cmp
enter
pop
xlat
xchg
popa
and
pop
and
sti
jno
xlat
jle
fists
es
xchg
cmp
pushl
scas
gs
xchg
and
and
pop
pusha
ljmp
pop
mov
jo
jb
mov
arpl
cmpsb
test
sub
es
ljmp
pop
and
pop
aaa
andl
jle
xlat
pushf
inc
jo
scas
fsqrt
cmp
sub
inc
mov
cli
mov
test
cmp
mov
ret
lods
gs
incb
adc
in
inc
mov
out
sbb
insl
pop
out
or
dec
rclb
dec
pop
cli
pop
mov
loop
enter
aas
and
xchg
out
fstpl
sub
pop
out
aaa
dec
loopne
cmp
pusha
xorb
faddp
xor
ja
inc
ss
rclb
jno
test
je
push
in
jb
mov
push
pop
sub
sarl
mov
lds
cmc
rcr
cmp
sub
and
ret
mov
mov
push
dec
test
mull
lock
into
jecxz
lock
dec
outsl
mov
push
outsl
add
outsb
int3
pop
insl
sbb
out
dec
stc
sub
pop
ret
shll
cwtl
jecxz
in
ficoml
sub
xor
push
cmc
dec
mov
jnp
pop
mov
mov
mov
shr
mov
rolb
push
test
mov
jl
or
mov
inc
xlat
out
dec
pop
data16
mov
dec
je
push
cmc
mov
xchg
cmp
daa
ret
sbb
xor
mov
xchg
mov
mov
in
adc
gs
stc
pop
dec
pop
aaa
mov
push
les
and
sbb
bound
adc
mov
inc
call
roll
rcrb
es
mov
lods
adc
movsl
fcmovb
mov
out
sub
cwtl
movsb
sub
fsubrl
insl
loop
hlt
xchg
inc
add
mov
adc
add
dec
out
xchg
lret
pop
repnz
jae
shrb
push
cwtl
int3
xchg
cmpb
mov
sbb
popf
cmpsl
xchg
xchg
push
jecxz
hlt
shlb
dec
jg
jbe
mov
jecxz
xchg
adc
popa
scas
imul
icebp
xor
lcall
and
aam
jecxz
push
lds
or
daa
out
cmp
inc
mov
mov
add
pop
test
mov
daa
jnp
das
cmp
push
pop
pusha
daa
mov
xlat
cli
mov
push
or
ficoml
fnsave
inc
ss
mov
and
mov
shlb
fistps
xchg
inc
jmp
inc
cli
inc
jne
pusha
repnz
lcall
inc
jecxz
rolb
sbb
sub
decl
dec
orb
inc
mov
mov
add
inc
mov
cmp
dec
cmp
call
dec
add
dec
push
fisubrl
out
out
add
pushf
or
in
nop
das
add
xchg
mov
lea
idivl
aad
add
je
scas
rorl
xchg
jg
cmp
inc
push
xchg
adcl
and
push
and
push
shlb
mov
mov
in
jno
ss
mov
sub
lods
cmp
dec
aam
ds
rol
adc
mov
sub
pmulhw
lcall
loopne
nop
aam
xchg
pop
and
test
aaa
dec
jbe
add
adc
test
mov
sbb
loop
or
aas
shlb
push
xchg
xchg
jnp
addr16
pop
mov
ret
jbe
add
sbb
xor
jmp
das
mov
pop
jb
pushf
lods
pop
aad
dec
imul
mov
rcl
mov
sbb
rcrl
aaa
add
pop
and
mov
dec
inc
mov
icebp
fdivrs
fucomip
fldz
mov
out
jecxz
loopne
add
inc
pop
lods
sti
push
sub
lock
xchg
test
sbb
mov
pop
and
sbb
adc
test
addr16
aam
in
push
sub
xlat
jle
jmp
cld
loopne
pop
inc
pop
cmp
cld
push
adc
mov
test
mov
adc
test
push
mov
call
in
pop
dec
rcll
add
or
cmpsb
sub
insl
negb
mov
jl
int
pop
popa
std
mov
add
shlb
mov
mov
push
pop
sub
pop
cmpsb
aam
inc
xor
mov
push
shll
mov
and
dec
push
shll
pop
out
mov
lret
jg
enter
lock
push
in
call
int3
push
adc
test
inc
mov
test
mov
mov
jg
push
mov
std
out
push
sub
je
xor
stos
fsubr
sbb
daa
and
rep
dec
loopne
adc
xlat
aaa
xor
mov
jl
jb
hlt
jbe
xor
and
adc
into
into
jmp
add
stc
push
jo
cmc
lods
arpl
mov
outsl
into
cmp
test
shr
mov
push
dec
pop
sub
aad
adcb
jl
sub
es
push
jge
int
aaa
ficoml
testl
pop
fwait
dec
mov
sub
shrb
pop
jns
out
nop
cmpsb
dec
or
mov
push
movsl
jae
pop
pop
bound
aas
xchg
icebp
mov
ret
and
loop
cmp
mov
adc
push
sbb
lods
loope
insl
mov
sub
jbe
jo
dec
aam
lret
mov
cmp
jb
dec
xorl
in
adc
outsl
mov
and
dec
xorl
push
mov
pop
ljmp
xchg
mov
mov
cmp
fisttps
xor
cltd
lods
add
jmp
cmp
in
rcrb
mov
fldcw
add
mov
rcl
pop
imul
jns
fstpt
dec
sub
leave
cmp
lea
ret
es
fwait
mov
mov
stos
test
add
pop
rorb
pop
xchg
out
sbbb
xlat
int3
in
int3
xor
inc
dec
daa
pop
test
daa
xchg
subl
mov
jne
dec
adc
mov
cmp
dec
add
lock
jp
pop
outsb
cmp
sbb
subl
mov
add
jnp
cmp
jbe
jge
mov
cltd
stos
fisubrs
mov
into
xchg
fnstsw
adc
fnstcw
loop
pop
xchg
xor
adc
aas
sub
jne
in
lahf
dec
dec
inc
lcall
push
mov
cmp
mov
in
mov
fimuls
or
cli
xor
into
or
xchg
dec
add
add
les
xlat
lds
arpl
imul
xlat
inc
mull
jno
and
mov
insl
pop
icebp
pop
pop
imul
dec
mov
xor
std
dec
ret
mov
mov
jp
test
popa
lahf
lret
mov
aas
push
imul
and
call
push
push
xor
cmp
leave
pop
push
and
mov
dec
sbb
jae
popa
notb
pushf
leave
jbe
dec
iret
clc
xor
test
and
aad
xor
dec
lods
gs
in
mov
leave
inc
sub
dec
or
push
loop
mov
fistpll
out
fisubs
in
sbb
out
adc
cmp
push
mov
lret
into
sub
pop
push
test
call
fsts
lcall
inc
push
imul
mov
loop
clc
and
addl
arpl
inc
mov
inc
stos
mov
push
xchg
mov
mov
loopne
cmpsb
xor
push
xlat
cld
loopne
and
inc
shr
dec
js
stos
and
mov
pop
pop
jg
or
lock
adc
lret
jge
push
inc
cmpl
sub
out
push
in
dec
iret
xchg
cs
mov
adc
ljmp
xor
outsl
cmp
ret
mov
pop
scas
mov
ss
sti
fsubl
mov
cmpsb
loope
js
out
pop
push
es
add
jns
add
add
dec
sub
or
js
test
bound
adcb
pop
and
data16
sub
fnstenv
xchg
ja
xchg
adc
push
shll
dec
test
add
mov
out
lea
xor
dec
pand
adc
adc
cmp
test
push
stos
mov
nop
xor
mov
adc
loop
adc
cmpb
popf
pop
ret
lods
addr16
push
jne
ffreep
mov
adc
cmp
pop
ret
add
lds
jg
pop
test
test
mov
not
jmp
arpl
jnp
outsb
cmp
cmovg
mov
mov
aad
cmpsb
add
xor
popa
lds
sbb
out
add
movq
mov
pop
fidivl
sbb
and
mov
dec
jle
scas
pop
inc
add
cmp
mov
add
sbb
jo
xor
rorb
loope
dec
and
cmp
inc
cli
inc
xchg
mov
push
jp
int
cmp
jo
pop
rorb
add
xchg
cmp
dec
out
mov
push
xchg
or
loopne
pop
faddl
insl
mov
lahf
and
xor
inc
jecxz
xor
and
mov
mov
lahf
add
js
daa
jbe
dec
jo
cmp
andl
pop
inc
sub
pop
sub
stc
into
lret
and
pop
mov
prefetch
mov
push
cmpsl
clc
and
mov
fcomps
push
clc
repz
les
xor
add
push
sub
mov
ds
iret
scas
divb
mov
icebp
pop
sti
addl
ds
cmp
adc
lods
imull
or
mov
mov
and
cli
sub
xor
ficomps
mov
jae
jle
push
sub
loopne
mov
shlb
jge
and
pand
addr16
jnp
scas
jecxz
xorb
loop
int
add
rolb
cld
dec
xchg
inc
mov
cs
arpl
inc
mov
or
mov
dec
int3
rcrb
in
loop
or
cltd
imul
mov
xor
sub
gs
inc
scas
and
movsl
popf
push
or
jp
lds
ret
mov
add
dec
es
and
mov
cmp
sub
dec
jns
add
push
xchg
out
int3
scas
mov
jle
js
addr16
cmp
aad
add
les
or
sub
repnz
cmp
pop
lock
out
js
imul
int
mov
mov
pop
xor
lods
call
sub
mov
mov
je
nop
fwait
jle
pushf
mov
dec
jae
cmp
gs
fdivr
mov
push
add
arpl
popa
movsb
mul
ficomps
pop
int3
data16
loope
adc
adc
jle
fists
push
jge
add
or
dec
mov
int3
in
xorl
inc
icebp
dec
int
xchg
addb
pop
cld
pop
or
mov
mov
addr16
aas
lcall
mov
out
test
mul
popa
pushf
mov
mov
fucomi
mov
imulb
mov
push
cmp
add
mov
push
pusha
adc
jnp
push
cmpsb
mov
arpl
pop
sub
in
movsl
mov
sarb
mov
sbb
das
dec
call
outsl
push
push
pop
or
shl
aas
or
sub
add
mov
lods
cmp
repnz
imul
or
sub
pusha
mov
xor
scas
and
jg
sub
dec
lret
lea
push
out
cwtl
stc
mov
out
out
adcl
out
dec
outsb
aam
imul
pop
push
inc
popf
push
mov
mov
xchg
adc
mov
pop
push
mov
mov
mov
xchg
iret
cmp
sub
out
clc
lret
mov
stos
sub
in
xchg
jle
scas
in
and
popa
dec
mov
sbb
sbb
push
icebp
loop
out
out
imul
jb
jno
and
test
ret
jmp
push
rolb
fnstenv
push
ljmp
lods
in
mov
cmp
sbb
adc
xchg
sub
ret
xorb
sbb
pop
jl
push
xchg
sbb
fwait
push
push
or
push
mov
leave
jmp
outsl
cwtl
fcmovne
inc
jmp
hlt
mov
sbb
pop
xor
fsubl
repnz
out
sbbb
cmp
and
jns
icebp
jne
sbbl
or
fdiv
add
cmp
or
dec
aas
out
test
ja
push
clc
movsb
and
mov
xchg
or
out
stos
push
pop
xchg
adc
aas
dec
dec
ss
lods
data16
push
out
insb
or
fdivrs
xorl
outsl
lcall
xchg
mov
imul
xor
shll
sbb
mov
and
frstor
xchg
and
mov
icebp
cltd
popl
loopne
jns
pop
jmp
fidivrl
xchg
inc
mov
je
lea
repz
lods
mov
sti
jp
out
jo
in
jg
popa
in
addr16
lcall
fwait
or
loop
aaa
jge
jl
mov
add
out
enter
lods
lods
fldcw
shll
push
movsb
sarb
push
pusha
les
jne
mov
shr
data16
and
cwtl
pusha
lret
gs
sbb
iret
push
adc
pop
xchg
stos
jb
cmc
jp
xchg
cmc
cmp
sub
dec
push
cmp
shlb
out
jl
xchg
pop
hlt
mov
dec
sahf
mov
pop
xchg
add
sbb
mov
enter
push
aaa
lcall
in
repnz
pop
push
fs
shrb
sbb
inc
cltd
mov
loope
addr16
mov
and
adc
xlat
mov
int3
pop
mov
fildll
mov
sub
mov
pop
inc
lahf
in
xor
lret
adc
fcoms
jle
adc
hlt
xlat
js
add
and
add
mov
pop
push
daa
fimuls
in
and
in
cmpsl
outsb
es
dec
shlb
jle
inc
sbb
js
sbb
mov
cmpsb
out
xor
push
jo
or
std
sti
mov
cmp
imul
lcall
lret
adc
shlb
lock
or
test
pop
daa
pmaddwd
sahf
sbb
mov
push
aam
mov
jae
mov
sub
inc
push
push
inc
stos
sbb
cwtl
ljmp
call
jnp
bound
push
mov
pusha
mov
pop
pop
mov
cwtl
jne
iret
dec
dec
dec
inc
movsl
xor
call
mov
add
inc
push
xor
subl
fdivl
adc
push
icebp
insl
je
int
icebp
or
outsb
xchg
jecxz
gs
loop
jnp
cltd
adc
jno
call
outsl
sub
bound
sub
add
stc
jmp
push
loope
lock
call
sbb
jae
shl
lahf
mov
or
popa
xchg
sub
or
xchg
sub
sub
sub
rcrl
fwait
sub
cld
sbb
dec
test
adc
aas
out
fisttps
into
test
xlat
or
shlb
sbb
pop
cld
pop
into
jns
sbb
adc
pop
insl
jg
add
add
pusha
aam
mov
ficomps
fnstsw
insl
das
js
push
movsl
fsts
cmp
leave
lea
out
scas
mov
lea
inc
jmp
icebp
adc
das
push
mov
scas
inc
stc
mov
mov
jnp
fbstp
push
stc
dec
out
or
rcll
jbe
or
mov
mov
jne
repz
imul
pop
pop
push
jg
sahf
jle
fildll
imul
mov
dec
add
mov
test
in
xor
inc
mov
mov
sbbl
stc
test
jg
shll
jmp
mov
jno
shlb
cwtl
or
add
xchg
mov
and
jno
xlat
inc
xchg
dec
mov
adc
rol
jbe
in
push
pusha
mov
mov
cmc
mov
stc
xchg
dec
pusha
sbb
adc
jno
sbb
std
jge
scas
add
cmpsb
loopne
lods
jbe
mov
jb
xor
pop
dec
add
out
cld
into
pop
outsl
adc
xchg
and
xlat
adc
inc
mov
xor
cmpl
imul
jp
cmpsb
aam
pop
ja
decl
hlt
sbbl
mov
jns
pop
pop
cmc
ja
test
lret
cmpsl
test
int
sub
shl
je
loopne
adc
les
fiadds
dec
jge
ljmp
mov
iret
lea
mov
mov
pop
ret
pop
dec
cli
mov
loopne
rorb
out
test
push
xchg
pushl
pushf
inc
ret
sub
lret
dec
clc
scas
je
vpmullw
in
out
shlb
xor
mov
jne
cltd
and
mov
jp
push
mov
mov
mov
jge
mov
aam
or
push
mov
rcr
bound
aam
mov
into
and
jb
mov
xchg
add
xchg
sub
pop
cmp
pop
mov
cmp
nop
test
stos
push
inc
cltd
leave
dec
cmp
or
or
mov
imul
xchg
addr16
mov
hlt
jo
mov
pushf
add
mov
imul
jmp
dec
mov
scas
out
jnp
enter
mov
cld
or
loopne
outsb
pop
xor
mov
sahf
sbb
fs
arpl
pop
cmpsb
xchg
movsb
adc
jo
inc
mov
pop
aas
mov
int3
pop
pop
in
pop
insb
jno
les
cld
mov
test
mov
aam
loop
cmp
icebp
inc
sbb
or
lea
pop
jbe
sub
gs
lods
mov
mov
add
dec
mov
mov
jmp
in
add
xchg
rclb
cmp
sbb
mov
lds
mov
dec
cmp
das
xchg
jb
hlt
int
iret
aad
lret
scas
mov
stos
dec
inc
fdivrs
push
popl
mov
push
push
nop
cmpsb
cltd
jle
out
pop
sub
ds
outsl
ljmp
cmc
testb
in
mov
cmp
repz
push
xor
mov
adc
dec
jp
push
mov
sub
movsb
cmpsb
les
jns
popa
dec
hlt
or
ja
in
testb
cs
and
jle
loopne
stos
fucom
dec
push
dec
enter
frstor
pushf
lret
cmp
or
jno
aas
push
aaa
cmpsb
fmulp
lret
push
lds
cmp
pop
in
imul
aas
adc
ficoms
cmp
lret
das
cwtl
jb
ret
jp
and
cwtl
pop
mov
push
fcmovu
or
xor
push
inc
clc
and
insl
imull
aas
fs
je
xlat
lahf
push
or
jmp
xchg
adc
ja
jmp
add
insb
mov
fnsave
mov
scas
insb
jle
popf
mov
insl
lods
jg
shlb
jg
scas
mov
cmc
iret
adc
aaa
mov
out
mov
mov
xchg
shl
gs
mov
arpl
xor
in
inc
sbb
ja
jge
or
mov
mov
daa
xchg
and
int
arpl
bound
aaa
xchg
rol
mov
bound
je
daa
mov
pop
cmp
mov
testb
pop
adc
sub
pop
movsb
cmp
call
cmpsl
add
insb
outsl
mov
add
sub
mov
add
cmp
or
iret
les
scas
loopne
inc
insb
lea
mov
dec
outsl
dec
popf
or
imul
shrl
fadds
push
sub
incl
mov
xor
pusha
mov
lahf
les
xchg
test
mov
inc
sbb
jge
dec
aaa
push
jne
pop
inc
pop
enter
sub
push
rcr
mov
fidivs
adc
jg
movsb
into
xorb
adc
jb
sub
cwtl
jae
scas
icebp
je
jp
xchg
adc
mov
jl
push
jle
decl
pop
or
rclb
adc
mov
adc
fwait
cmpb
scas
inc
popa
mov
or
pop
jecxz
call
mov
aas
stos
jecxz
int3
inc
out
stc
push
dec
inc
push
inc
faddl
ds
dec
outsb
and
and
in
sbb
xchg
mov
inc
push
ss
push
dec
adc
mov
js
notl
repnz
and
mov
ja
sahf
pushf
mov
push
mov
sbb
and
mov
cmc
xor
jge
popf
dec
call
aad
test
nop
pusha
push
and
mov
and
outsb
cmp
pop
mov
xchg
and
push
aam
dec
or
cld
pushf
mov
stc
int
push
inc
ret
fld
lds
lret
push
stos
xor
push
out
rcrl
or
rorl
or
rcll
lods
mov
jae
xchg
dec
xchg
mov
xor
rcrl
jae
lret
mov
and
and
loop
ds
cmpsl
mov
pop
std
scas
mov
jns
mov
mov
lcall
pop
cmpl
aam
xchg
mov
stos
push
mov
mov
sub
int3
mov
cltd
leave
mov
adc
cmc
out
call
dec
cmp
icebp
lret
sarl
insb
cmc
mov
jb
icebp
cmp
mov
shr
test
inc
inc
push
cltd
outsl
lock
call
jge
mov
push
xchg
add
nop
xor
push
or
add
loopne
and
fsubl
aas
mov
adc
andb
xchg
daa
cwtl
repnz
and
fldt
mov
stc
mov
mov
inc
imul
mov
scas
fildl
xorl
push
mov
dec
ja
nop
mov
in
nop
jns
in
mov
in
jecxz
add
cmp
mov
sub
sbb
sbb
mov
rolb
sub
cmp
pop
clc
in
call
mov
xchg
jb
fnstcw
rorl
cmp
insl
aas
aam
sub
sbb
vpcomub
sbb
mov
mov
sub
sbb
fsubl
stos
lahf
dec
push
sub
pop
pop
dec
sub
fsubrp
mov
mov
dec
mov
mov
out
xchg
xlat
mov
imul
out
inc
mov
insl
lock
or
xor
pusha
add
push
xor
jno
mov
push
add
aad
aam
add
sti
and
shlb
or
gs
sub
cmp
pop
push
pop
cmp
es
jmp
call
xchg
inc
imul
xchg
pop
inc
sub
mov
loope
push
cmp
clc
out
mov
mov
adc
popf
inc
xor
jmp
ror
jns
stos
jno
mov
fdivs
add
dec
cmp
out
call
jbe
add
loopnew
and
pop
js
mov
xor
les
xor
jae
je
adc
push
clc
test
fstp
jbe
xchg
xor
cwtl
fistps
sub
rcll
mov
push
aam
out
lret
aas
pop
pop
add
out
test
lret
push
pop
mov
add
xchg
pop
push
adc
lods
dec
jo
scas
and
movsb
add
lods
xchg
insl
clc
mov
js
jp
pop
lock
push
add
xor
sub
nop
adc
adc
mov
lea
ss
fists
in
xchg
js
xchg
outsl
push
sar
loopne
mov
es
movb
rcl
ret
mov
cmp
fs
push
pop
mov
out
scas
data16
clc
xchg
divl
cmpl
pop
add
pop
mov
rorb
dec
pop
lret
push
push
in
cld
inc
xor
inc
dec
push
cltd
lock
mov
insl
aas
or
cmp
inc
insb
les
pop
xchg
xor
rcrb
cmp
jno
mov
sub
cld
dec
jl
cmc
dec
xor
daa
push
cmc
cmp
popf
cmp
iret
sub
mov
pusha
xchg
pushf
or
pop
dec
sti
out
outsl
test
fsubrs
shll
adc
inc
sbb
xchg
jo
push
pushf
jae
push
dec
sahf
mov
pop
sahf
mov
orb
or
ds
clc
jge
jmp
lock
dec
lahf
addr16
negl
inc
in
fisubl
and
or
test
in
mov
sub
outsb
pop
dec
pop
js
daa
imul
mov
jb
pop
mov
mov
add
mov
popf
add
add
dec
push
pop
jge
sbb
pushf
xor
addb
test
mov
gs
gs
xchg
mov
lds
pop
push
jne
and
sbb
loope
loope
xor
lret
cmpsl
sbb
loop
dec
sub
mov
es
jmp
lock
mov
jns
push
fiadds
and
pop
push
push
adc
push
cli
fmull
sub
pop
push
pop
inc
mov
lods
in
push
or
sbb
adc
add
pop
setl
jo
mov
xorb
lods
adc
sarl
daa
mov
push
insl
lock
jg
pop
push
adc
xchg
jb
xchg
push
stos
leave
push
sti
aas
inc
js
jne
cmpsl
mov
cli
xchg
add
add
fnstsw
cmpsl
pop
mov
repz
pop
je
mov
cmpsl
popa
mov
add
jne
imul
xor
stc
pusha
orb
int
test
xchg
sub
dec
pop
arpl
outsb
lcall
fisubrs
mov
std
mov
stos
lds
mov
adc
xchg
push
jl
icebp
push
adc
fisubrl
add
jge
sub
cmp
push
pop
ficoml
add
dec
push
nop
push
xchg
pop
sbb
and
inc
fnstenv
dec
fistpll
loopne
movsb
push
gs
fstpl
mov
mov
mov
dec
aad
adc
push
ret
addl
lock
pop
popf
test
pop
xor
ret
mov
popa
fisttpll
xchg
jbe
push
add
rcrl
lods
sbb
pop
aad
scas
call
mov
sub
push
pop
inc
or
sub
adc
mov
xor
je
and
int3
add
pop
pop
lahf
inc
dec
bound
dec
pop
imul
pop
fildl
aaa
push
xchg
ror
in
cli
movsl
out
hlt
push
addb
cld
ja
dec
cs
jmp
fisubrs
xor
sbb
gs
iret
sub
in
push
or
fs
adc
fisubl
aam
inc
aas
fbstp
cld
push
sbb
add
dec
push
mov
cmp
push
push
in
int3
xor
inc
mov
enter
xchg
mov
jno
pmovmskb
pop
xchg
pop
push
or
lods
cld
cwtl
ja
and
adc
jne
add
cld
icebp
sub
bnd
jl
adc
sahf
in
loope
pop
jbe
lcall
jmp
cmpsb
cld
test
pop
cld
test
das
test
sub
into
test
push
jbe
jmp
adc
and
lock
sub
push
mov
aad
test
clc
lret
adc
addr16
xchg
cmp
xchg
and
xchg
fiaddl
mov
mov
outsl
fidivrl
repz
gs
adc
mov
push
push
loope
or
sub
mov
cmpsl
movsb
mov
xchg
pop
and
mov
aaa
xchg
dec
testb
pop
sub
and
lods
mov
push
adc
pop
xchg
jne
mov
out
loop
mov
outsl
divl
mov
les
adc
loopne
aas
inc
out
je
push
add
sbb
sahf
mov
stos
scas
aaa
outsb
xchg
lods
pop
mulb
push
xchg
sti
jb
adc
imul
jne
sarb
jge
cli
pop
aam
andl
imul
adc
push
fcmovb
jge
hlt
cmp
adc
loopne
sbb
rcl
xchg
fbstp
repz
dec
push
mov
std
and
mov
and
bnd
aaa
repz
in
jl
pop
or
adc
jno
xorb
ss
repz
jg
xchg
lret
inc
dec
push
repnz
je
ljmp
sub
sbb
out
ret
adc
adc
pop
mov
hlt
ja
std
pop
fistpll
imul
imul
dec
push
cmp
inc
out
out
or
cmp
jne
push
dec
lock
lcall
or
subl
inc
insl
mov
and
push
or
pop
dec
pusha
daa
rorb
xor
jbe
inc
sbb
sahf
inc
xchg
push
cwtl
in
ljmp
jno
movl
and
sbb
mov
mov
int3
rorb
jb
dec
pop
dec
sub
imul
jmp
add
push
xchg
leave
cmp
xor
cmpsb
out
mov
add
sub
sub
push
popa
aas
and
data16
push
cmp
es
mov
mov
xor
or
out
jno
mul
jl
adc
inc
repnz
pop
dec
out
and
inc
push
out
aam
xor
xlat
lret
push
push
lret
lcall
and
add
cmp
enter
bound
in
cld
test
inc
scas
push
es
lods
shrb
nop
pmullw
leave
pushf
xor
mov
fwait
mov
ja
xor
lahf
scas
fists
aaa
sub
fnstenv
rcrb
bts
rorb
sub
inc
inc
test
mov
mov
ljmp
xchg
or
negb
lret
sub
arpl
fsts
push
xchg
mov
dec
push
sub
push
add
cmpsb
subl
add
ret
mov
push
es
pop
and
inc
pusha
dec
ja
mov
cmp
movsl
aam
mov
xlat
xchg
dec
push
outsl
jno
shll
pop
sti
rcll
adc
loope
loopne
pop
fdivl
and
sar
div
aad
imul
test
adc
xor
xor
mov
jne
aaa
push
inc
fwait
mov
leave
ds
push
in
clc
cmp
clc
aaa
aas
ja
fwait
sti
pop
pop
ljmp
ljmp
adc
scas
or
dec
cs
dec
in
mov
lcall
jmp
popf
mov
dec
testl
shrb
fidivrl
sub
icebp
sub
bts
in
mov
pusha
loop,pn
push
jmp
xor
cmp
xorb
sarl
cmpb
dec
cmp
mov
xlat
fs
or
cmp
dec
cmp
and
scas
sar
test
push
movsl
jecxz
adc
add
int3
mov
jl
mov
mov
lods
shll
subl
cmovg
lods
add
cld
cmp
push
sub
sbb
rolb
into
mov
jle
icebp
imul
xor
xchg
and
fsub
cmp
aam
sarb
or
mov
sbb
jecxz
cwtl
cmp
inc
insb
arpl
xchg
js
lods
rcrb
mov
pop
clc
mov
pop
loop
or
cmp
mov
ds
imul
mov
jb
push
imul
sbb
mov
and
fdivrs
dec
fmull
cmp
xchg
and
sub
mov
orl
mov
jns
test
ss
sub
pop
mov
inc
aaa
sub
xchg
pop
in
and
add
lock
test
fs
dec
cmp
inc
jno
inc
mov
int3
sub
movsl
outsb
ljmp
mov
icebp
adc
or
lret
sub
sbb
push
js
icebp
push
add
dec
int3
push
in
dec
mov
push
rclb
aad
jp
mov
stc
out
xlat
sarb
cltd
bound
add
sub
scas
sub
bound
mov
loope
rcrl
inc
fisubl
sub
into
xlat
push
inc
push
aaa
aas
and
out
lret
test
pop
outsb
mov
movsl
jmp
pop
jae
adc
adc
sub
aas
js
inc
jno
dec
pop
cltd
aam
int3
cs
nop
push
aad
mov
imul
mov
ds
mov
mov
and
fisubl
ds
js
subb
mov
dec
pusha
scas
pop
leave
sbb
enter
rcll
andb
in
inc
xor
lret
add
xor
add
jg,pn
sub
mov
push
xchg
sbb
sahf
scas
sbb
inc
xchg
out
in
or
cmp
into
or
jae
mov
fcmovne
mov
notb
mov
shrd
fcomi
ret
lret
repnz
mov
icebp
je
add
xor
jne
cli
push
pushf
shrl
les
push
movsl
mov
push
ja
xor
lar
lea
inc
inc
clc
adc
cld
lods
or
and
cmpsb
jl
out
out
mov
jns
add
rorl
jb
cwtl
stos
push
mov
pop
jecxz
imul
sbb
loopne
cli
lock
pop
test
sub
int3
ret
xor
loopne
xor
xor
dec
rorl
add
movsb
aad
clc
in
sbb
dec
and
aas
push
pop
adc
sub
flds
dec
push
xor
pushf
pmaxsw
add
inc
test
icebp
loop
cli
jg
mov
loope
mov
pop
std
fs
mov
loope
push
xor
pop
sub
gs
and
mov
jno
inc
or
mov
push
jg
out
push
jae
pop
jl
xchg
dec
mov
push
cmp
cmp
cltd
mov
in
xor
dec
or
sub
imul
cld
inc
sbb
pusha
insb
sub
in
xchg
daa
jg
sbb
cmpsb
lock
adc
mov
pop
or
out
insb
test
jbe
mov
sbb
pop
and
adc
ja
dec
insb
fidivl
cmpl
dec
xchg
out
icebp
pop
push
in
xchg
jmp
inc
mov
inc
prefetch
mov
hlt
ja
adc
enter
and
xlat
xor
aad
push
adc
jl
jne,pt
jl
pusha
out
or
movsb
inc
and
xor
mov
xchg
pusha
rorl
xchg
fs
lods
imul
je
inc
je
sbb
fstps
in
dec
push
dec
mov
repnz
ja
pop
lret
sbb
mov
and
shlb
mov
jne
iret
mov
andb
call
mov
cmp
insb
or
rcrl
or
xor
test
std
test
repnz
outsb
mov
repnz
imul
testb
test
out
xor
xor
adc
push
icebp
in
iret
xor
or
push
hlt
sub
jbe
cmp
mov
add
adc
mov
movsl
ljmp
cmpsb
insl
push
adc
icebp
rorl
insb
mov
dec
xchg
mov
add
sub
in
addl
xchg
inc
dec
in
js
sbb
xor
lahf
and
xorb
cmp
aaa
cmpsl
cmc
lret
mov
adcb
inc
or
push
mov
push
add
adc
mov
jae
notl
inc
mov
lret
and
push
inc
ljmp
xor
mov
inc
push
push
ficoms
fucom
jg
cld
insl
jbe
adcl
or
inc
mov
imul
rorb
dec
add
dec
mov
aam
xchg
mov
jge
in
daa
mov
mov
sub
pop
or
int3
pop
data16
popf
mov
mov
imul
xlat
push
inc
sbb
loope
insl
mov
xchg
xor
push
and
insb
rclb
mov
sub
xchg
jno
xor
lds
aaa
cmp
arpl
popf
aam
or
xor
arpl
ljmp
cmp
ret
jp
inc
and
xor
mov
addr16
mov
xor
cltd
movsl
pop
addr16
sbb
out
adc
jne
in
lods
sub
push
cmpsl
jo
das
xrelease
nop
repnz
push
fldl
mov
imul
leave
push
and
dec
mov
xchg
in
jo
out
orb
fcompl
arpl
daa
sti
iret
sbb
xor
fcmovb
mov
mov
cmp
cmovge
int3
iret
fwait
lret
xor
adc
sbb
push
mov
gs
movsl
xchg
fcmovbe
psubusw
shrl
outsb
stos
or
push
cmp
lcall
lods
pop
xchg
subb
inc
and
lock
shlb
aas
clc
insl
pcmpeqw
xor
mov
dec
push
mov
cwtl
sbb
fadds
add
push
pop
nop
xchg
test
xlat
inc
mov
mov
ljmp
orl
mov
push
bound
pop
mov
push
aam
xor
lds
stos
inc
mov
ret
pop
lahf
ljmp
and
xchg
mov
iret
mov
jbe
ja
popa
push
dec
xchg
stc
js
push
rorl
cmpsb
lods
dec
mov
or
pop
xor
dec
jecxz
mov
xor
add
insb
insb
mov
int3
dec
sub
sbb
negl
xor
fs
add
pop
out
lahf
dec
imul
pop
dec
movsb
rolb
nop
stos
inc
push
xchg
jg
lea
ret
push
or
and
int
sub
daa
xor
repz
rolb
repnz
xorl
jns
hlt
adc
iret
decl
xor
sbb
in
clc
jne
xchg
ja
stc
sub
pop
in
pop
adc
repnz
xchg
dec
pop
pusha
xlat
in
lods
adc
cld
ja
daa
add
lea
mov
ret
cmc
loopne
mov
out
movsl
xchg
cli
lods
imul
xchg
loope
inc
mov
jecxz
dec
xchg
sbb
mov
inc
jmp
xchg
das
xchg
jae
cmp
test
xchg
scas
in
int3
and
aad
lods
pop
jecxz
dec
gs
jl
pusha
incl
aas
pop
push
cmc
adc
xor
imul
jnp
out
or
mov
je
xlat
mov
mov
stos
lret
mov
sarb
xor
enter
lahf
sub
mov
sub
mov
xor
and
xor
mov
xor
xchg
lret
fdiv
sub
add
pop
imul
cwtl
adc
gs
in
xlat
and
cmp
sub
push
out
inc
push
arpl
push
inc
popa
repnz
jo
lock
pop
jecxz
dec
notb
adc
rcrl
jp
sar
in
sbb
dec
outsl
push
pop
adc
loop
sti
ljmp
je
and
push
and
push
frstor
ds
std
sub
sub
lods
sbb
call
icebp
rclb
rcrb
out
rclb
stc
repnz
sub
fimuls
adc
arpl
push
dec
pop
push
adc
push
pop
cmc
popa
jne
lret
push
lea
cmpsl
add
insl
dec
cmp
push
sub
int3
push
add
sub
insl
fnstenv
push
stc
fwait
call
aas
ljmp
mov
lcall
mov
mov
movsl
xchg
rol
ja
xchg
sbb
test
xchg
in
jns
sti
xor
xor
aas
dec
in
adc
push
lahf
fcmovnb
push
ret
adc
sub
add
inc
push
fwait
jle
loopne
mov
add
jae
sbb
cmpsl
dec
into
push
popa
rorl
dec
insl
ljmp
mov
rcll
cs
hlt
push
repz
sub
cmp
mov
sbbb
shll
add
pop
shr
add
inc
movsl
cmc
xor
mov
in
sbb
lea
scas
cmp
loopne,pt
inc
mov
xor
aas
hlt
xor
icebp
xchg
push
cld
push
loop
jns
das
cmc
aas
adc
or
mov
iret
mov
and
mov
inc
div
mov
mov
pusha
and
ja
or
iret
std
pop
push
mov
js
or
mov
lods
clc
hlt
ljmp
sbb
mov
loop
into
push
inc
mov
xorl
or
adc
aam
push
sub
sbb
jnp
and
and
sahf
stos
js
mov
mov
xchg
fwait
xlat
insl
cmc
divl
enter
fwait
stos
push
rcl
push
movsb
outsb
les
pop
sub
movsb
bound
psraw
xor
ljmp
loop,pt
mov
adc
faddl
push
rorl
jg
mov
pop
inc
out
push
std
jg
aaa
stc
xchg
adc
or
xchg
dec
arpl
test
or
sahf
dec
inc
ret
jne
es
fcmove
pop
pop
adc
mov
negb
sbb
xchg
pop
jmp
push
sbb
push
es
push
cmp
fwait
inc
cli
jg
cmp
dec
adc
addb
inc
cmp
lods
sarl
push
mov
jmp
add
xor
pop
add
shll
xchg
push
fimuls
jle
frstor
xchg
out
and
loope
bound
push
cmpb
mov
jle
lock
mov
or
cmp
sbb
xor
subl
or
popa
mov
icebp
jecxz
int3
push
mov
je
xchg
sub
decb
dec
mov
nop
imul
data16
xchg
xor
shl
repnz
xchg
mov
incb
pop
lret
mov
sub
sbb
cmp
sbb
pmaxsw
pop
insb
inc
adc
iret
xchg
jge
xchg
sub
subl
cmp
mov
outsb
push
xor
es
jl
mov
mov
xor
inc
aam
dec
test
mov
mov
mov
mov
or
js
pop
fucomp
mov
inc
xor
lds
mov
insl
or
cld
fstps
loop
out
mov
adc
push
mov
ds
push
pop
test
icebp
loopne
loope
aam
mov
or
out
push
xor
into
cmp
jb
cltd
stos
pop
aas
arpl
test
jge
mov
mov
or
das
popa
mov
lea
xor
and
sbb
push
into
or
jne
mov
cmp
and
pop
shr
sbb
test
pop
mov
mov
lahf
movsb
ss
push
pop
dec
loope
sbb
push
stc
ljmp
insb
ss
inc
xor
rol
sub
add
xor
add
xchg
je
scas
outsl
in
ds
test
int3
mov
mov
ds
iret
arpl
sub
inc
rorb
dec
hlt
jbe
jb
sub
and
add
xorb
cld
in
xor
jl
pop
fadd
pop
shrb
or
dec
push
sub
lods
lahf
int
js
test
jne
pop
ja
mov
or
dec
ds
fwait
nop
mov
mov
enter
mov
dec
adc
lret
lods
stos
cmp
mov
xorl
cmp
jmp
push
pop
mov
scas
sbb
cmpsb
negl
into
xchg
add
add
fdivs
mov
in
clc
or
or
cmpsb
push
adc
add
fwait
or
cmp
stos
mov
xor
and
cwtl
insb
push
mov
aas
pop
adc
das
cli
pushf
mov
pop
es
mov
add
sbb
mov
nop
xchg
adc
repz
mov
outsb
xor
enter
add
push
repz
in
test
shr
int
mov
adc
insb
or
lret
mul
iret
jbe
fbld
imul
je
das
lcall
mov
jno
cmc
or
imul
adc
aaa
push
dec
jmp
aam
repnz
cmpsb
pop
imul
mov
sub
in
push
push
ja
movsl
outsb
imul
popa
xor
test
xchg
icebp
test
inc
mov
and
insb
and
popf
jmp
inc
inc
inc
push
sbb
lret
js
daa
je
movsl
pop
pop
add
divb
dec
adc
ss
rolb
mov
add
mov
mov
cmp
aaa
lahf
stc
imull
dec
dec
movhps
cmp
inc
pop
mov
push
dec
jo
movsb
ds
into
cmc
xor
lods
jg
popf
push
jae
xor
enter
xchg
jmp
sub
pop
cmpsb
in
fldcw
mov
je
and
jne
jo
sbb
adc
or
jb
pushf
das
xor
pop
pop
mov
test
shll
mov
jae
mov
stos
stc
daa
push
leave
and
nop
or
ljmp
out
lea
inc
add
sub
pop
jae
stc
je
or
sbb
lods
xlat
xlat
loope
xor
sub
aaa
pause
dec
push
dec
in
frstor
test
arpl
or
mov
dec
pop
cmp
rcr
mov
pop
mov
push
push
push
out
add
xchg
jmp
xchg
mov
adc
jns
cmc
mov
cltd
cs
popa
push
sbb
and
addr16
dec
arpl
and
lcall
or
push
fistps
jns
aaa
sbb
mov
xchg
mov
xchg
mov
ds
jge
or
pop
xorl
mov
int
stos
rcrl
dec
mov
xchg
loop
out
enter
dec
sbb
popa
jo
rcr
mov
inc
inc
scas
pop
or
xchg
jle
call
adc
inc
mov
add
xchg
in
ret
sub
inc
js
rcrb
inc
jg
xor
in
jmp
sub
jne
arpl
pop
jne
and
add
bnd
sub
pop
movsb
inc
lret
sub
ljmp
or
imul
xor
mov
pop
push
jbe
lret
outsl
cmp
xchg
mov
push
xor
cmp
adc
je
jb
adc
subl
cmpsb
test
xor
out
xor
mov
lcall
je
cmc
sub
adc
loope
and
inc
xchg
pop
insb
arpl
jecxz
mov
sarl
js
lods
cmp
and
dec
and
adc
stc
repnz
inc
fildll
push
cmp
enter
sub
loope
jmp
jg
cs
lds
sub
icebp
aaa
shlb
xchg
mov
loop
ret
aas
dec
jae
adc
adc
stos
popf
mov
outsl
dec
fdivl
call
inc
fmulp
scas
or
lock
rorb
inc
ret
inc
and
stc
lea
and
push
sbb
cwtl
mov
xchg
push
inc
mov
adc
dec
sub
pushf
or
idivl
xchg
in
add
mov
mov
xor
sbbb
xchg
stc
jbe
mov
inc
push
inc
stc
es
xchg
and
push
int3
mov
jmp
ret
inc
mov
ret
xchg
mov
inc
xchg
out
push
pop
sbb
bound
xchg
dec
mov
pop
mov
adc
inc
inc
push
add
push
icebp
ljmp
int3
sahf
jno
jbe
inc
add
cmpsb
cmp
push
stc
xchg
sti
fmul
mov
imul
xchg
mov
fmuls
sub
lea
shrl
cmc
mov
inc
mov
jns
add
ja
mov
cmp
or
xor
xchg
fldenv
xor
cmp
pushf
lods
adc
ror
add
adc
xchg
mov
jnp
xor
cmp
inc
xchg
pop
lds
popf
push
ljmp
mov
xor
pop
sub
add
push
xchg
dec
xchg
dec
test
pop
xor
nop
inc
and
enter
outsb
lods
aas
ret
jmp
pop
or
push
out
or
test
xor
or
movsb
jp
fldl
inc
test
aad
cmpsb
jg
dec
xor
cld
orb
cmpsb
mov
icebp
mov
fldenv
stos
push
cltd
or
cmp
lret
jge
cmpsb
mov
les
clc
pop
ret
loopne
cmp
mov
roll
push
mov
fcoms
sub
cmc
nopl
insl
xor
gs
adc
and
call
inc
push
mov
dec
out
add
nop
xchg
out
outsl
jno
xor
stos
popf
pushf
lcall
inc
andb
les
sbb
out
push
adc
mov
mov
adc
push
rorb
pop
jl
pop
adc
ret
or
push
mov
roll
mov
dec
xlat
mov
jns
jae
bound
inc
adc
pop
dec
lret
pop
xchg
icebp
int3
inc
ss
or
ror
lret
mov
aad
dec
pop
outsl
push
repnz
push
inc
ret
mov
xchg
int3
fdivs
jle
mov
movsl
cld
push
jno
pusha
ljmp
sbb
mov
popa
loop
fwait
aam
addr16
pushf
daa
mov
sahf
jo
js
jle
addr16
sub
loope
pusha
and
and
imul
aas
ja
jp
mov
xor
fisttps
or
mov
and
adc
std
and
das
mov
cmp
and
rcrb
loope
sub
cmpb
lods
lcall
mov
mov
add
aad
repz
and
mov
in
inc
je
test
repz
add
insl
or
cmpsb
dec
pop
icebp
icebp
or
mov
mov
pop
mov
cmp
popf
nop
inc
jp
push
insb
jge
les
aam
add
jae
xlat
push
push
jp
xchg
popf
stc
inc
cmpsl
fstpl
jnp
and
push
in
clc
loopne
mov
sti
repnz
pop
add
rclb
fistl
pusha
shrl
test
addr16
xor
sbb
sbb
inc
jmp
adc
mov
jo
jbe
dec
fisubs
das
fisttps
out
in
cmpsl
pop
ret
xchg
in
xorb
cmc
outsb
inc
jo
xor
das
push
xor
imul
pushf
pop
fstpl
add
pop
dec
mov
push
outsl
bound
scas
cmpsb
das
sub
jo
icebp
enter
es
add
add
xchg
fdivl
inc
fstpl
daa
fs
orl
pop
xor
add
add
in
jo
lret
fsubrl
out
or
int3
push
push
mov
aas
test
shlb
stos
in
repnz
outsb
mov
add
or
mov
fimuls
outsb
ljmp
jns
scas
adc
pusha
fldpi
arpl
pusha
addr16
pop
cmpsl
stos
out
sub
into
or
stos
cwtl
push
nop
sub
sti
push
pop
cli
push
pop
rorb
adc
incb
pop
gs
pop
cmp
add
outsl
mov
movl
ljmp
xlat
icebp
repnz
push
mov
xor
push
xchg
jbe
test
mov
jp
pop
dec
jno
fbstp
jmp
sub
inc
bound
fidivl
jbe
out
sti
into
sub
mov
xchg
adc
stos
je
clc
mov
push
imul
push
inc
adc
add
mov
adc
mov
lock
cmp
jle
imulb
adc
ljmp
test
ljmp
ret
jae
push
stc
mov
or
mov
inc
and
loopne
aas
ret
fldenv
xchg
ret
arpl
mov
rol
ljmp
jne
adc
aam
int3
fistpl
push
arpl
icebp
jbe
mov
test
mov
pop
pop
fwait
lock
cltd
sbb
fisttpll
xchg
cltd
lods
add
iret
cmp
and
ret
fistpl
mov
and
mov
adc
add
das
negl
xchg
imul
dec
pop
push
fwait
add
fidivrs
mov
push
dec
pop
jl
xchg
fcompl
mov
dec
jle
call
adc
adc
ret
fsub
fwait
mov
out
mov
cltd
push
popf
jne
ja
repz
aam
xchg
jne
mov
xchg
into
sub
xchg
cmp
test
gs
pop
lret
sub
lahf
aaa
mov
push
pop
pop
fstps
adc
iret
out
xchg
scas
adc
test
lods
subb
rcr
out
rcrl
and
sub
data16
xor
xor
mov
dec
test
push
sahf
pop
mov
push
test
push
scas
mov
inc
xlat
fisttpll
inc
pop
iret
das
js
fidivrl
mov
cmp
aam
imul
xchg
jne
seto
scas
imul
xchg
ds
cmc
add
inc
mov
stos
or
lods
cmp
xchg
enter
sahf
inc
cmp
test
xor
movsb
adc
icebp
jp
ss
push
es
ja
pop
sbb
inc
jb
ljmp
in
movsl
mov
add
push
int3
cmp
cmp
lret
paddq
ss
push
pand
push
dec
sbb
std
xchg
fistpl
fisubrl
sbb
cmp
leave
jmp
int
jnp
out
popf
pop
loopne
in
aaa
scas
sub
lret
xchg
or
gs
outsb
mov
adc
dec
hlt
mov
out
aas
pop
mov
sti
adc
hlt
insl
or
mov
out
aaa
adc
push
push
imul
movsb
test
add
aaa
sahf
js
add
add
outsb
adc
stc
cmpsl
mov
jle
nop
lock
lods
push
pop
pop
loopne
mov
mov
pop
lods
push
xor
sub
scas
mov
pop
mov
xor
fsubrl
daa
adc
mov
ljmp
jle
ret
cmp
int
xor
iret
aad
pop
push
pop
push
dec
mov
and
test
jl
dec
mov
outsb
rcll
dec
nop
test
fs
cmp
dec
pushw
inc
and
inc
ret
or
loopne
sbb
sti
add
lret
jns
insb
loope
bound
divb
ljmp
adc
test
mov
testb
jo
push
push
enter
scas
test
addl
and
pusha
inc
out
lock
sti
mov
test
pop
movsb
sub
in
dec
adc
inc
fs
gs
mov
icebp
stos
sarb
add
ds
data16
lds
loopne
push
das
dec
mov
outsl
adc
cmp
cmp
inc
and
stc
lea
iret
into
xchg
cmpsb
jmp
jb
dec
pop
and
dec
inc
sbb
imul
neg
movsb
push
movsb
cmp
jo
adc
fisubs
mov
adc
push
push
add
lret
imulb
lods
cwtl
xor
shrd
inc
mov
cmp
pop
sub
xor
dec
push
lcall
inc
scas
xchg
or
mov
adc
outsl
daa
or
xor
call
fidivrl
xchg
pop
mov
cmp
jecxz
ret
std
imul
xchg
xor
push
xlat
xchg
popa
xchg
jne
mov
add
xor
dec
push
push
ret
test
int
sbb
push
pop
mov
sub
adc
into
push
mov
jl
mov
xchg
loopne
sbb
add
push
verr
ja
and
mov
pusha
push
mulb
adc
add
cmpsl
es
mov
or
push
mov
rorb
cmp
pinsrw
adc
movsb
out
divb
jle
inc
sbb
mov
push
push
inc
out
and
out
cli
pop
adc
pop
jnp
xchg
fcmovnb
mov
ds
xchg
mov
test
push
push
cmc
mov
fcompl
fwait
lods
push
mov
mov
dec
push
or
into
xchg
cmc
ds
out
clc
add
jo
cmc
mov
mov
faddl
test
jns
dec
mov
xchg
xor
pop
push
adc
and
gs
dec
gs
nop
xrstor
sbb
pop
xor
stos
lret
in
push
in
test
imul
pop
fcomps
cmp
pop
sbb
popf
dec
push
xchg
leave
in
xor
into
sbb
scas
test
popf
dec
or
pusha
jno
and
jg
adc
sub
pop
xor
jno
aad
out
ds
xchg
in
shrb
jb
sbb
mov
incb
add
repnz
add
insl
jo
test
test
imul
cli
push
out
sub
mov
pushl
or
pop
inc
sbb
push
push
ret
stos
sub
out
xor
xchg
popa
or
imul
pop
imul
push
inc
and
cltd
mov
pop
push
sbb
movsl
adc
imul
adc
push
insl
rcll
fstpl
pop
jae
fdivrl
jb
les
jl
and
pop
lods
mov
lahf
hlt
sbb
andb
xor
fstpl
xchg
and
rorb
push
movsb
sub
push
lahf
dec
dec
cmp
imul
push
and
test
mov
pop
inc
pop
aaa
and
mov
sti
inc
push
ds
pushf
mov
outsl
cltd
in
fstp
aad
in
mov
ret
ret
xchg
xor
add
lret
mov
and
cs
lahf
mov
xor
sub
mov
inc
mov
add
mov
sbb
mov
dec
fstl
js
or
inc
cmp
dec
cwtl
inc
dec
fwait
aaa
xchg
push
jl
hlt
cmpsb
movsl
sahf
negl
aam
xchg
push
pop
lret
mov
pop
sbb
outsb
or
mov
xchg
jb
clc
aaa
daa
xor
mov
push
sbb
pop
jo
lcall
pop
jmp
loope
mov
mov
aad
sbb
push
cmp
xchg
lods
cmp
xchg
or
push
adc
cmp
outsb
push
sahf
cmp
jbe
dec
cs
sti
repnz
dec
adc
sbbb
xlat
pop
mov
push
fidivs
cli
xchg
pop
outsb
imul
pop
mov
lds
xor
xchg
rcrb
jl
push
lret
andl
cwtl
incb
outsb
ja
sub
jns
out
sbb
jmp
aas
jmp
fdivrl
out
push
nop
jno
jo
mov
cmc
fnclex
out
subl
pop
lret
adc
mov
push
sbb
sbb
in
rcll
cmc
mov
ret
les
daa
or
negb
inc
xchg
sar
inc
xchg
jo
test
jb
mov
mov
and
popf
popa
sub
aad
dec
loopne
sbb
inc
cmp
ljmp
rcll
test
test
pop
or
dec
icebp
xchg
iret
sti
adc
jns
jbe
pop
lahf
lods
inc
imul
popf
jno
cli
sbb
and
cmp
push
je
nop
inc
and
pop
in
stc
sti
inc
cmp
dec
jg
jns
adc
test
sub
loop
and
ds
clc
arpl
cmp
rdmsr
pop
ret
sub
in
das
lods
outsl
unpcklps
sub
push
js
rorb
int
lret
dec
push
dec
fwait
xlat
nop
flds
movsb
cmp
adc
xchg
ret
jb
mov
or
loope
icebp
lcall
rcrb
push
aaa
enter
lcall
jl
lcall
std
inc
ret
jno
sbb
sbb
xor
jbe
mov
sti
add
mov
pushw
jecxz
cwtl
jno
pop
icebp
xor
jmp
mov
shlb
jns
push
cld
jo
cmp
push
into
dec
lcall
mov
xor
fs
or
lret
sbb
sahf
fidivrl
push
sub
dec
andb
cltd
jno
enter
pop
pop
xor
mov
repnz
out
icebp
ret
add
cltd
pop
push
mov
cli
ss
push
enter
lret
xchg
fmuls
addl
in
adcl
ss
jl
sbb
lret
nop
pop
gs
pop
stc
mov
fadd
inc
cmpb
sbb
jp
lea
dec
mov
imul
in
cmp
jmp
mov
das
sbb
xor
xor
jb
out
fcompl
mov
mov
dec
inc
hlt
shlb
stc
lods
in
pop
xchg
push
dec
int
cmp
push
into
jl
fcoml
in
xor
xchg
call
pop
rorl
inc
xor
sbb
mov
or
xor
repnz
fcos
pop
push
loop
mov
push
cli
fistps
in
push
insl
pop
inc
fucom
fisttpl
out
aad
cli
add
push
jnp
movsl
iret
jp
lret
pop
or
test
repz
shr
sub
pop
xor
pop
outsb
ss
adc
movsb
rol
mov
mov
cmpsl
outsl
xchg
xor
lds
cmp
lcall
fs
les
mov
jb
fcoms
mull
sbb
dec
pushf
and
pop
gs
aam
xchg
arpl
lret
mov
cmc
rorb
cmp
dec
inc
mov
ljmp
push
decl
and
or
push
out
inc
adc
jg
int
popf
mov
adcl
and
mov
scas
data16
sub
rorb
cmp
adc
mov
enter
out
in
sti
inc
outsb
sbb
xor
mov
roll
push
inc
pop
add
negl
pop
mov
dec
sub
jo
lea
sbb
jae
sub
cmpsl
push
mov
aad
ret
add
sub
fisubl
mov
out
adc
cmpsl
push
movsl
stos
mov
push
add
loop
add
lahf
mov
pop
add
out
lods
xchg
cld
inc
scas
inc
call
jmp
rcrl
dec
jge
cltd
pop
outsb
addr16
insb
movsl
ret
mov
mov
jl
subl
pop
xor
daa
stc
je
lahf
adc
test
out
jle
mov
orl
daa
mov
xor
popl
out
insb
popa
sub
ret
je
leave
mov
scas
outsl
add
cwtl
mov
stos
aaa
xlat
push
fcoml
test
push
add
cmpl
push
dec
add
mov
sub
popa
ss
mov
sahf
pop
fdivrs
repnz
pusha
test
ss
imul
js
loope
xchg
xchg
sbb
push
xor
push
icebp
sarb
sbb
push
or
dec
xchg
shll
cmp
xchg
cltd
cmp
xchg
push
mov
push
and
pushf
add
cmpsl
in
add
fucomp
hlt
pop
test
push
ds
shll
adc
xchg
jmp
sub
adc
sub
adc
hlt
cmc
xchg
mov
sub
cld
data16
jg
pushl
pop
or
sbbb
dec
pop
outsb
in
call
test
in
pushf
pop
mov
add
jnp
mov
inc
js
add
add
btr
in
mov
sarl
ljmp
jmp
fistpl
xchg
int
jge
nop
test
push
push
test
sbb
add
shll
ljmp
out
lret
lods
test
mov
call
xor
pop
lods
push
cwtl
enter
aas
leave
mov
mov
push
adc
ret
cwtl
test
js
stos
mov
jge
mov
stos
invd
sbbl
xchg
push
xchg
aaa
pop
jbe
cltd
or
popf
dec
inc
inc
mov
sub
fstps
push
sub
test
pop
jge
mov
xor
movb
sbb
xchg
jmp
pop
ret
in
test
or
xor
loopne
cs
mov
or
lret
adc
loop
rclw
mov
lds
push
and
pushl
rcrb
insl
je,pn
pop
cmpb
cs
test
sub
test
xchg
cmp
popf
mov
jns
push
xchg
fwait
push
mov
xchg
adc
cld
jle
push
cmp
ss
mov
fst
mov
push
jb
mov
push
push
push
test
inc
push
xorl
out
lahf
pop
add
lahf
adc
in
mov
jns
nop
and
xchg
scas
mov
fs
pop
cmp
incl
push
cwtl
das
dec
cmp
dec
pop
int3
nop
xchg
pop
icebp
out
pop
add
mov
fsts
ret
mov
dec
and
fs
sbb
push
arpl
mov
xlat
jecxz
mov
fs
mov
std
jne
mov
iret
inc
mov
xor
cs
push
sub
dec
push
jno
mov
shrb
or
data16
jb
adc
xor
adc
insb
mov
sahf
loop
test
adc
into
mov
adc
jbe
add
xchg
mov
sbb
and
sbb
inc
xchg
movlps
fs
arpl
pop
mov
mov
mov
aam
sub
mov
pusha
shrl
mov
cli
sar
dec
mov
ret
xchg
data16
inc
jmp
and
push
lret
inc
xchg
rcpps
divb
xchg
loope
sbb
insb
loopne
cmpl
outsl
lret
out
push
fstp
fwait
jle
xor
shll
mov
add
mov
cmp
pop
fwait
enter
ret
push
loope
mov
xchg
xor
xchg
icebp
xchg
push
push
xchg
aas
xchg
cld
or
mov
cmp
jg
dec
lods
cmp
mov
cli
mov
jge
in
sbbb
loop
mov
xlat
scas
outsl
out
add
cmp
mov
out
jmp
jns
inc
jbe
push
push
add
inc
push
push
sub
cltd
xchg
jge
cmc
hlt
andl
jl
pop
in
mov
rcl
mov
mov
test
and
pop
ret
push
mov
push
mov
dec
fimull
or
inc
loop
jae
and
mov
inc
jle
and
rep
lock
nop
mov
rcrb
xchg
test
push
out
fdivrs
mov
jecxz
loope
shr
mov
repz
in
jecxz
cmc
insl
jle
sahf
sub
rclb
movsb
xchg
fwait
les
jg
xchg
mov
ss
stc
es
inc
leave
fldenv
add
in
bound
ss
add
cwtl
sub
aas
repnz
cmp
dec
lahf
es
dec
sbb
cs
rorb
or
nop
outsb
push
mov
push
mov
in
or
iret
out
push
pop
js
bound
pop
mov
lcall
or
mov
enter
idivb
out
aaa
mov
hlt
ret
repz
shrl
jmp
inc
call
in
sbb
mov
gs
icebp
jno
adc
data16
jg
test
pop
dec
pop
inc
xorl
lods
arpl
int
fdivrp
xlat
fwait
orl
cmpsl
xlat
adc
cmpsb
lret
pop
adc
pop
mov
cmp
jecxz
test
rcll
test
cld
mov
mov
test
fistl
xor
cwtl
mov
cmc
and
fistpll
test
movsb
lret
push
pusha
cltd
jns
scas
daa
and
test
push
lcall
adc
movsb
mov
cmp
decl
xchg
push
or
jecxz
xchg
ljmp
in
faddl
out
fwait
or
repnz
into
loopne
jnp
pop
cmc
jecxz
outsb
divl
aaa
push
cmp
orb
inc
pop
insl
and
int3
enter
cwtl
mov
jecxz
lret
adcl
pop
inc
adcb
add
pushf
inc
mov
mov
lds
in
aaa
das
aad
mov
cmp
mov
and
push
push
loopne
test
rolb
and
push
sub
cmpsl
sahf
mov
xchg
cld
and
les
adc
and
out
aam
xchg
xchg
mov
pop
fistl
cs
dec
lahf
cltd
add
pop
mov
int3
cmp
mov
push
xor
xorb
jmp
xchg
jg
icebp
cmp
xor
jo
push
out
test
sbb
sub
in
mov
int3
in
mov
inc
repz
jae
xor
fidivrl
sbb
xchg
push
xor
cmp
mov
cli
mov
and
data16
push
aaa
jbe
fs
and
mov
xchg
and
out
cltd
cmc
add
mov
dec
test
clc
jae
outsb
adc
or
ljmp
or
movsb
mov
sbb
rcl
sbb
int
inc
fldcw
jae
clc
in
notl
and
push
loopne
or
mov
scas
arpl
scas
leave
jae
jl
or
and
shl
cmpsb
dec
pop
insb
xchg
cmp
lock
add
and
dec
js
rcll
or
aaa
ljmp
or
outsl
aam
or
sbbl
mov
jle
pop
mov
or
lds
popfw
sub
xorl
pop
cs
imul
inc
lahf
cmp
les
mov
mov
cmp
or
insl
hlt
cmp
sti
lock
jmp
cmp
call
add
imul
aad
sbb
clc
mov
icebp
mov
sbb
and
add
addr16
test
xchg
mov
shrb
bound
iret
or
lcall
idivl
mov
mov
out
stos
mov
in
jno
pop
lods
in
stc
in
sbb
xor
adc
pop
es
ret
cmp
dec
pop
test
bound
mov
cs
mov
insb
outsl
lret
int3
mov
daa
movsb
cmp
clc
xor
pop
jl
add
pusha
or
bound
xchg
xchg
sbb
adc
pop
push
mov
jge
pop
mov
jno
aaa
or
sbb
or
sarb
sbb
sbb
push
bound
jg
inc
push
negb
repnz
cli
jecxz
dec
lahf
cmpsb
cltd
test
mov
popf
pusha
cmp
test
sahf
adc
jle
out
inc
add
ja
dec
cld
inc
pop
xor
iret
xchg
xchg
mov
testl
jns
and
jbe
mov
or
cmp
mov
out
rorl
mov
out
add
ret
jbe
and
decl
out
int
and
imulb
out
mov
adc
mov
es
int3
fwait
out
roll
fs
add
adc
mov
cmp
push
mov
jb
and
sub
sub
test
sub
cwtl
sbb
rorb
lahf
and
jbe
inc
test
push
cli
ds
mov
lds
hlt
xlat
cmc
ds
xor
test
fdivl
push
ds
hlt
and
push
aaa
adc
dec
dec
mov
jge
dec
test
pop
insb
in
jle
mov
std
arpl
dec
sbb
cmp
adc
jb
sbb
and
repnz
popf
cmp
scas
add
dec
mov
subl
lds
xor
push
loopne
enter
iret
mov
mov
cli
enter
es
pop
pop
cmpsb
pop
pop
flds
daa
testb
xlat
or
idivb
jnp
mov
and
xchg
lea
aas
orl
and
pop
movsl
xor
xchg
hlt
xor
pop
mov
je
sbb
out
mov
mov
movsl
lods
pop
adc
out
adc
mov
push
insl
xor
icebp
cltd
push
aam
dec
lds
mov
ds
aad
lods
shl
mov
rolb
push
jne
xchg
pop
mov
sub
and
loop,pn
fimuls
mov
xchg
leave
inc
stos
push
or
push
jb
repnz
fldenv
cmp
inc
je
enter
stc
fdivl
xor
addb
stos
sbb
repnz
pop
enter
addr16
mov
xchg
xchg
stos
jne
mov
mov
push
jbe
add
in
inc
aad
push
testb
loopne
int3
jo
xor
into
movsb
mov
scas
stos
jle
sbb
mov
dec
nop
popa
dec
cmpsl
sbb
jnp
call
es
or
les
repnz
mov
xchg
adc
mov
imul
test
adc
in
adc
testl
arpl
fmulp
sub
aas
gs
decl
jb
lret
jns
dec
add
iret
fistpl
xlat
jecxz
icebp
push
frstor
sub
sahf
aaa
jb
xorb
add
inc
fistpl
lds
ss
int
in
mov
ds
push
std
rorl
mov
jne
xchg
mulb
movsb
mov
xchg
xor
out
into
test
and
mov
or
dec
enter
repnz
sahf
push
aas
test
xchg
xchg
stos
into
movsl
incl
push
mov
clc
push
out
or
ja
popa
nop
cwtl
jno
mov
mov
movsb
mov
enter
aam
rcrb
add
fisubrl
ret
std
sbb
ljmp
movsl
xchg
dec
xchg
mov
pop
test
sbb
ret
insb
mov
mov
inc
cmpsb
fsub
inc
cmp
sub
or
imul
cmpsl
je
pop
ret
dec
sbb
cmp
pop
inc
cmp
sahf
outsl
bound
add
or
jne
fbstp
pop
inc
xor
sbb
mov
mov
mov
inc
out
inc
inc
bound
pop
iret
pop
mov
sub
sbb
in
sub
mov
mov
stos
cmpb
leave
mov
stos
mov
inc
icebp
jno
fidivrl
pop
pop
insb
inc
inc
inc
cmp
mov
xlat
sbb
dec
leave
sbb
mov
jp
and
adc
dec
fwait
xchg
pop
aam
decb
xor
andl
shll
pop
mov
adc
jle,pt
fistpll
leave
je
or
jb
lahf
xchg
popa
cmp
and
inc
xor
std
js
data16
mov
pushf
or
repz
std
cs
adc
mov
and
fmuls
push
inc
mov
popa
js
sbb
lret
mov
enter
fisttpll
xchg
aaa
mov
mov
mov
in
repnz
push
fadds
and
inc
xchg
inc
je
mov
mov
mov
aas
pop
lret
or
cmp
dec
mov
push
add
xchg
sarl
pop
ss
pop
mov
ret
dec
imul
shrl
pop
pushf
mov
adc
inc
adcb
xchg
iret
mov
mov
pop
adc
push
iret
bound
xlat
mov
inc
dec
out
jge
fsts
cmp
scas
repnz
insl
enter
dec
mov
into
xor
mov
das
inc
in
lahf
push
adc
push
cwtl
xchg
lahf
stos
pop
sub
cmc
pop
test
jmp
adc
popa
adc
shr
shrb
mov
dec
ds
cmp
pop
scas
xchg
push
adc
adc
scas
add
std
hlt
and
dec
pop
les
mov
add
sbb
jecxz
popa
and
sub
or
sahf
call
jns
es
fiaddl
push
sbb
sub
adc
mov
pop
mov
rcrb
xchg
push
repnz
mov
hlt
mov
sbb
fimuls
lret
shrb
pop
bound
and
pop
mov
jbe
dec
xorb
bound
filds
imul
fstpt
mov
out
push
jne
shll
mov
aad
mov
fdivl
or
or
sti
daa
xchg
pop
sahf
push
jp
rol
dec
push
int3
in
lret
fldcw
and
push
jl
lea
daa
mov
jne
popa
lods
sti
aam
into
je
ret
mov
xor
pop
sahf
xor
repz
cmp
lods
push
clc
sub
or
pusha
inc
rcl
leave
shrl
pop
lock
sub
dec
jmp
push
movsb
in
mov
mov
dec
push
jmp
pushf
ljmp
loop
mov
shl
sbb
push
jp
mov
jle
int
imul
stc
jg
sbb
sbb
and
cmpsl
imul
call
add
enter
sub
iret
pusha
sbb
js
and
scas
out
push
xor
adc
insl
jno
push
jnp
pushf
adc
mov
pop
and
mov
rorl
and
imul
sub
xchg
jmp
push
push
lds
lret
je
xlat
lea
roll
dec
daa
fnstcw
daa
int
mov
movsl
push
jb
loope
es
jmp
xor
or
dec
ss
mov
mov
das
pop
adc
stc
jmp
jmp
insb
push
add
and
or
sub
fidivrs
insb
repz
insl
aad
cltd
dec
stc
xchg
aaa
xor
pop
lods
jbe
pop
jl
stos
psubusw
lcall
in
xchg
inc
out
frstor
sub
out
xor
fsubs
jecxz
outsl
nop
sbb
daa
pop
sbb
outsb
inc
push
xor
clc
sbb
ljmp
mov
jns
sbb
xchg
pop
or
mov
call
pushf
popa
and
pop
leave
aam
dec
out
movl
mov
or
xchg
jmp
pop
xchg
cli
and
insb
arpl
ret
mov
ror
mov
pusha
jb
sub
sub
sub
scas
dec
test
mov
rorb
jp
and
in
mov
lahf
cmp
add
mov
pop
call
in
lds
add
fbstp
call
mov
or
inc
adc
push
lds
xchg
lcall
pop
pusha
inc
inc
les
mov
das
pushl
xchg
shlb
xor
mov
test
add
pop
and
fidivs
pop
jle
repnz
add
lea
jb
lock
add
or
loope
add
lods
movsb
or
pcmpeqd
mov
dec
mov
imul
jno
test
movb
mov
xlat
popa
mov
and
aas
lret
and
push
jne
sub
or
adc
mov
and
jle
jb
mov
xor
mov
mov
clc
dec
enter
sub
sbb
gs
idivb
mov
jl
xchg
insb
cltd
fdivp
insl
mov
mov
and
repz
push
or
xchg
xchg
fidivrl
data16
push
cmp
int3
movsb
lret
stc
mov
jp
pop
and
cmp
or
or
jmp
pop
pop
dec
imul
sbb
adcb
std
ret
mov
push
outsb
xor
inc
mov
push
add
mov
scas
aas
or
mov
sub
aad
xchg
sbbb
xchg
repz
addr16
dec
pop
jnp
fs
xor
cltd
in
popa
das
sarl
jns
in
in
sahf
dec
push
movsb
xchg
sbb
cmp
movsl
and
sub
sub
jbe
jg
rcrb
bound
mov
xchg
mov
int
icebp
ficomps
mov
push
popf
dec
mov
cwtl
outsl
push
nop
sub
dec
sti
ret
inc
cmpsl
in
fwait
pusha
jg
outsb
dec
inc
repz
or
adc
push
sbb
and
data16
leave
jle
fdivrl
movsb
xor
jno
sbb
push
rcl
fsubs
pushf
repz
call
outsb
test
les
lea
cltd
push
sub
xor
pop
mov
arpl
das
mov
test
fistpl
lods
adc
aaa
je
cmpsl
cs
scas
inc
xor
fstps
out
mov
pushf
jmp
test
fstp
and
dec
rol
add
cmp
or
and
pop
fwait
push
xor
loopne
addl
jnp
lea
ss
cmp
xchg
jbe
aaa
push
sub
and
mov
hlt
data16
jle
cwtl
cmp
mov
push
jle
mov
push
mov
out
into
ja
les
shrl
popa
nop
pop
in
mov
nop
cmp
xchg
cmp
jne
in
adcl
mov
dec
fcmovnbe
outsb
outsb
iret
loopne
pop
pushf
jmp
or
add
cmp
mov
xlat
fldenv
pop
sub
xchg
jge
jle
sahf
lock
js
xor
push
inc
testl
add
push
out
push
shl
add
cmp
fildll
pop
nop
cs
jno
pop
popa
push
and
push
sti
js
push
inc
lret
mov
xorl
dec
mov
imul
or
mov
add
aad
js
aam
xchg
sahf
or
aaa
pusha
pop
pop
sub
inc
push
cmp
call
and
sub
pop
inc
mov
add
mov
mov
sbb
or
cmpsl
push
dec
inc
xor
repnz
movsl
cmc
pop
or
xchg
mov
and
movb
jl
es
imul
popf
outsb
je
mov
push
jmp
jnp
adc
or
iret
outsl
ljmp
pop
lds
into
in
imul
test
cs
cwtl
mov
std
std
xor
mov
fwait
shl
enter
mov
xchg
jp
in
dec
jge
loope
test
or
pusha
xchg
xchg
jo
aas
imul
cmp
xor
push
fsubrl
out
mull
jecxz
inc
jb
aam
jno
jmp
lcall
dec
push
mov
das
mov
int
test
cwtl
xor
adc
jle
dec
cld
mov
push
pop
stos
mov
xor
lcall
test
inc
adc
cmpsb
xchg
add
scas
popf
xor
out
mov
add
or
dec
sub
and
push
and
fistpll
pushf
addr16
cld
repz
and
movsb
call
or
xlat
add
call
inc
xchg
and
and
jge
inc
clc
negb
add
push
or
inc
or
jmp
fwait
nop
jmp
cli
sbb
in
lret
cmp
xor
mov
sbb
fwait
mov
adc
test
into
fsubr
sbb
fstpl
int3
ss
int3
mov
lret
cmp
jne
inc
or
pop
hlt
mov
clc
test
and
iret
sub
xchg
lea
ss
mov
cmp
pushf
inc
pop
sub
sbb
leave
loopne
push
sub
pop
lret
add
in
arpl
pop
mov
cmp
add
outsb
and
sbb
out
jo
lods
les
js
xchg
pushf
jl
iret
aas
bndldx
int3
dec
dec
mov
dec
xchg
insl
xchg
mov
sbb
pop
xchg
loopne
arpl
out
divb
mov
jp
jb
hlt
mov
dec
sbb
imul
fisubrs
lock
sub
test
mov
inc
xchg
add
gs
adc
xor
dec
lea
push
or
pop
mov
xchg
xchg
cmpsl
add
mov
loop
pop
movsl
dec
pop
push
sub
jns
fdivrl
adc
xchg
fwait
lret
xadd
in
repz
pop
vpsrad
pop
sbb
jg
fadds
mov
jnp
mov
mov
out
sbb
divl
sub
pop
mov
xchg
mov
add
mov
mov
mov
test
bound
xchg
mov
dec
cmp
movsb
pop
daa
xchg
fwait
xchg
insb
rcrb
ss
cmp
jge
insl
mov
out
jmp
movsb
repz
scas
mov
mov
xor
cmp
movb
sub
imul
dec
div
testb
cmp
loopne
add
leave
ja
sub
dec
inc
cmp
inc
mov
test
and
ds
fstpt
ffree
jge
mov
lcall
mov
xchg
es
jg
push
pop
dec
push
std
dec
sar
fcoms
sub
xlat
sti
and
jge
mov
xor
mov
aad
and
adc
xor
aas
push
lret
jmp
mov
cwtl
repz
xor
fdivs
push
jecxz
dec
dec
mov
into
adc
dec
aad
jns
sarl
jecxz
pop
dec
shrb
jbe
jns
lds
mov
sahf
mov
pop
or
loope
aaa
out
sbb
or
sub
xchg
mov
xlat
push
test
inc
leave
mov
cli
push
mov
je
pushl
xor
xor
out
mov
inc
or
test
adc
jle
addl
mov
or
aas
scas
mov
pop
repz
pop
mov
div
out
ret
sbb
add
daa
push
outsb
pop
cmp
mov
nop
push
xchg
sub
add
loope
xchg
int3
in
jnp
pop
mov
push
shlb
pop
cli
adc
adc
aaa
jl
cmpb
fs
and
add
iret
jb
int
inc
mov
sbb
pop
mov
test
pop
add
loope
or
pop
lods
repz
pushf
lret
push
sti
and
mov
jae
loope
dec
inc
mov
xchg
comiss
adc
jnp
jae
pop
xchg
loopne
in
fwait
in
rorb
fildl
movsb
scas
jb
mov
fmul
cmc
sbb
fs
pop
bnd
pop
cmp
gs
lea
sub
and
mov
enter
ret
and
sub
add
pop
xor
iret
jmp
adc
push
mov
mov
mov
sub
cmp
mov
mov
pop
jb
ljmp
fcomps
xchg
mov
outsl
pop
test
and
add
xchg
sbb
mov
test
rcll
test
ja
imul
insl
mov
fistps
jno
loopne
push
or
scas
inc
dec
out
fnstcw
or
pop
jb
mov
mov
push
mov
push
aad
dec
dec
mov
into
int3
icebp
sub
popf
sbb
fisttpll
mov
mov
pop
popa
sbb
imul
fadds
dec
jno
lret
insl
cmp
dec
loope
icebp
fisubs
mov
scas
out
inc
stc
movsl
xor
xchg
jp
shrb
pop
jae
incb
add
pusha
mov
or
cmpsb
dec
xor
rcll
lahf
mov
cld
jb
stos
xchg
loope
hlt
subb
xchg
or
jl
sahf
jae
ret
les
and
jns
mov
out
hlt
in
loop
notb
jae
mov
dec
push
push
mov
adc
push
push
pushf
xchg
rol
add
es
outsl
sti
sarb
je
scas
dec
cmp
xchg
mov
push
je,pt
jne
loop
lock
mov
push
xchg
orl
inc
testl
pop
xor
mov
push
cwtl
ss
add
xor
int
adc
cmp
push
mov
xor
divb
nop
andb
inc
popa
pushf
rcll
repnz
stos
das
in
arpl
mov
push
cmp
cmp
ja
bnd
jmp
fisttpll
fstpl
cmp
cmp
rol
data16
in
xchg
scas
xor
stc
hlt
rcrl
push
push
sub
mov
jnp
in
push
xchg
mov
ss
fildll
jb
cmpsb
pop
or
adc
inc
test
add
shr
cs
pop
jmp
pushf
mov
les
lock
sub
push
mov
xchg
mov
ds
jo
mov
inc
sbb
cli
call
inc
cmpsl
rcr
jo
inc
lods
icebp
test
inc
outsl
jbe
fprem
repz
jg
loopne
clc
xchg
movsb
loopne
adcb
jae
mov
push
adc
xchg
xchg
flds
pop
xor
pcmpeqb
rol
push
fwait
in
test
mov
out
ficompl
dec
test
lock
sbb
fisttps
icebp
es
cmp
pop
cmp
lds
decb
in
jg
mov
ret
fstpt
add
and
lock
sub
mov
mov
fcmovnu
out
repnz
aas
jmp
mov
lret
aam
push
nop
out
inc
mov
dec
rcl
and
mov
mov
adc
sbb
dec
mov
pusha
add
inc
and
outsl
test
negb
add
push
ror
push
dec
jmp
dec
pushf
int
sbb
jo
sub
pop
das
test
arpl
jmp
xchg
pop
dec
jae
stos
fnstcw
or
in
stos
xchg
cwtl
nop
dec
dec
aam
cmp
add
scas
js
sbb
pushf
jp
outsb
mov
lret
stos
adc
push
mov
dec
mov
and
add
mov
lret
loopne
mov
mov
call
jno
add
push
adc
push
cli
cmpsb
inc
dec
mov
mov
lret
ret
movsb
jae
testb
pop
inc
xchg
int3
leave
repnz
mov
ss
or
add
in
std
pop
push
mov
xchg
lcall
sbbl
cwtl
dec
xor
pop
lret
inc
inc
rcll
jecxz
and
adc
pop
inc
inc
dec
or
fmul
hlt
rorb
mov
jne
mov
cmp
cmp
insl
movsb
or
test
and
mov
xchg
inc
mov
xorb
stos
or
sbb
cs
fisttps
aam
dec
sub
into
mov
push
sub
inc
sbb
jge
ds
ljmp
outsl
mov
adc
mov
mov
push
pop
or
sub
cmp
dec
mov
cli
js
loope
movl
cwtl
int
loop
mov
pop
jge
scas
pop
fcomi
mov
jl
addr16
jno
mov
loopne
adc
pop
push
ss
push
add
stos
pop
nop
sbbl
fmull
fmul
mov
jns
jp
movsl
in
jnp
dec
mov
cmp
xor
lret
enter
and
jmp
and
outsb
movsb
mov
mov
xchg
fwait
xchg
fwait
mov
lea
adc
call
mov
les
pop
pop
pop
pop
sbb
inc
sbb
jg
inc
lcall
xor
fsubrp
hlt
rcrl
test
mov
mov
push
dec
push
js
jns
aad
jg
pop
sub
clc
inc
ljmp
nop
icebp
mov
sbb
adc
sbb
xor
or
daa
dec
pop
nop
lahf
aam
push
bndldx
lods
dec
psubusw
imul
mov
mov
push
popa
xchg
adc
or
or
add
std
push
faddl
mov
je
hlt
sub
sbb
cmp
daa
and
mov
enter
sub
and
imul
inc
mov
mov
xchg
inc
sub
fsubl
adc
fcmovu
je
loope
dec
cmp
and
adc
mov
repnz
popf
lahf
add
jle
fnstenv
mov
out
fs
mov
mov
xchg
es
fcomip
jae
movsl
add
pop
push
add
xchg
hlt
shl
pop
push
push
cwtl
cmp
push
jo
pop
les
jmp
xchg
jne
add
adc
pop
popf
push
inc
leave
xchg
jecxz
sbb
cmpsb
mov
fidivl
pop
jnp
movsl
fwait
push
adc
push
sti
inc
or
sahf
fs
jne
sbb
jge
mov
jne
imul
insb
fisttps
mov
sbb
hlt
xchg
repz
push
jl
out
stos
rcrl
js
or
and
xchg
mov
dec
clc
fimuls
adc
cmp
out
ja
xchg
jns
mov
push
adc
loop
adc
outsb
dec
push
pop
shrb
scas
lret
shrb
jo
xchg
sbb
out
push
push
fisubrl
cltd
mov
adcl
ret
adc
fwait
xor
sahf
data16
push
cmp
inc
pop
push
clc
inc
pcmpgtb
das
or
add
mov
mov
push
mov
or
in
lods
fsubr
outsl
sbb
dec
cmp
xor
out
push
cmc
shll
sahf
call
sarl
cs
mov
in
xchg
xor
xchg
cmp
aaa
gs
cwtl
gs
dec
out
notb
rclb
add
adc
mov
insb
sbbb
scas
cmpsl
mov
in
dec
pop
add
push
je
pop
mov
adc
mov
inc
xchg
ds
ds
mov
subb
pop
es
adc
test
mov
fsubrl
lcall
dec
xchg
data16
cwtl
icebp
into
jecxz
ss
loopne
xchg
xor
adc
mov
add
stos
pop
scas
in
xchg
push
rclb
outsb
jecxz
push
push
fsubrp
mov
adc
jle
jge
and
out
movsb
mov
fmuls
inc
addr16
xchg
jo
xor
repnz
cmpl
inc
and
cltd
dec
cmpl
mov
shrb
cmp
mov
imul
inc
aaa
imul
adc
fstps
mov
dec
push
add
stos
out
pop
sbb
sub
cmp
into
dec
addr16
mov
mov
jmp
inc
xor
inc
insb
repz
pop
xchg
out
xchg
leave
mov
jge
jns
push
jle
push
fstps
xchg
inc
jmp
fs
cmp
aaa
lahf
pop
push
hlt
lret
jbe
mov
inc
jecxz
push
rorb
mov
test
and
xchg
mov
data16
rorb
xor
fdivrp
iret
and
orl
int3
stos
inc
cmp
les
les
test
popf
cmp
lret
in
inc
jl
sub
icebp
nop
cmp
cld
pop
imul
inc
dec
sbb
mov
leave
fwait
daa
leave
loopne
std
jns
sub
rcll
dec
in
adc
fwait
setp
stos
cmp
sar
push
dec
jmp
push
ds
ds
std
mov
aad
push
jge
xchg
push
or
outsb
fbstp
dec
mov
add
pushf
pop
inc
jb
jl
mov
fstpl
adc
lock
jns
sub
sbb
fwait
hlt
rol
das
mov
pop
lods
cmc
sbb
aas
dec
std
push
push
jg
mov
pop
jns
push
ret
data16
clc
int3
mov
dec
fsubr
sbb
inc
in
jmp
lahf
ja
fsubl
out
ja
sbb
mov
sbb
loopne
inc
add
inc
xchg
add
andb
cmpsl
cmpsl
inc
add
push
pusha
icebp
jg
pop
lret
xchg
insb
arpl
lods
mov
popa
mov
mov
pop
inc
mov
mov
inc
cmpsb
es
loop
les
repnz
stos
push
in
das
mov
mov
inc
xchg
icebp
or
les
pop
sbb
xor
push
dec
inc
adc
sub
inc
popa
xchg
mov
es
cli
sub
dec
outsb
insb
movsb
adc
stos
roll
sbb
mov
add
and
jne
or
xor
insb
lret
insb
out
jl
push
sub
jno
add
adc
jnp
jne
lahf
pop
sbb
outsl
mov
jmp
xchg
rcrl
in
loope
xor
dec
es
dec
lret
mov
mov
lea
xorb
mov
test
jge
mov
push
cmp
inc
or
ljmp
xchg
or
movsb
or
mov
inc
data16
into
icebp
mov
sbb
in
addb
gs
lods
mov
bnd
loope,pn
inc
xor
add
cmpsl
push
xchg
mov
mov
mov
cmp
orb
mov
mov
outsl
pop
push
pop
xlat
add
gs
lods
xchg
push
sub
or
mov
xor
push
xchg
rolb
inc
cli
js
pop
and
push
add
dec
popf
inc
mov
addr16
push
loope
add
jbe
shlb
fst
push
repnz
icebp
or
lea
fldt
cltd
leave
mov
xchg
out
mov
sbbb
push
cli
filds
orl
xchg
enter
mov
in
lods
je
out
or
test
leave
xlat
adc
notb
xor
les
aaa
aas
repnz
lret
imul
div
stc
je
imul
adc
or
aam
and
fwait
adc
fwait
lcall
fldt
mov
jae
pop
fists
adc
sbb
repz
scas
sahf
cmc
fnsave
gs
pushf
and
mov
loope
inc
rorb
and
add
mov
andl
ljmp
inc
jge
inc
insb
push
loopne
fcomp
mov
stc
dec
xlat
movsb
lahf
jl
dec
push
mov
enter
stos
xor
outsb
push
out
push
cwtl
mov
mov
mov
mov
pop
aaa
cltd
mov
aaa
push
xchg
inc
and
or
add
or
dec
ss
scas
jecxz
into
cltd
jge
je
cmpsb
sbb
sbb
movsl
dec
xchg
push
jmp
push
sarl
xorl
or
in
dec
scas
je,pt
push
jmp
cmp
ss
mov
sbb
adcl
xchg
pusha
adc
cs
sbb
sub
jg
pop
fistl
insb
cld
ret
fst
insb
shll
mov
jo
inc
jae
es
lahf
je
mov
jle
fiaddl
xchg
mov
outsl
leave
mov
in
addr16
subb
cmp
cmp
push
cltd
scas
push
and
add
sub
pop
mov
aaa
sub
pop
xor
cmp
or
lcall
adc
cmovae
xchg
cmp
in
mov
testl
sub
mov
and
mov
mov
mov
push
leave
inc
ja
rcll
push
fs
loop
pop
jb
les
ret
int3
leave
loop
cmp
push
inc
push
add
or
xchg
cmp
and
outsl
adc
push
pop
jecxz
dec
pop
mov
fisubs
mov
ds
inc
fldcw
mov
mov
fistpl
repz
sub
cli
sbb
jg
insb
js
push
push
call
or
cmp
cli
shl
jmp
push
enter
or
xchg
test
xor
dec
push
pop
jo,pt
sbb
lret
in
dec
test
ja
scas
aad
sbbl
ret
cltd
fmull
int3
inc
or
pop
popa
test
insb
into
sub
inc
out
xchg
popf
movsl
pop
out
xlat
xchg
arpl
imul
adc
enter
cmpl
arpl
scas
ja
pushf
sub
lcall
xchg
in
fisttps
xor
or
jl
and
ret
mov
stc
movsl
xor
je
outsl
insl
or
cmp
mov
push
mov
addr16
or
mov
xchg
cmp
push
orb
nop
jb
aam
xorl
push
insb
xor
cmp
push
loope
enter
js
xchg
nop
insl
popa
cmpsb
lods
arpl
imul
mov
stos
bound
push
push
push
pushl
stos
xchg
cmpsl
dec
dec
pop
ror
cs
scas
daa
test
das
dec
inc
je
rcrb
imul
xchg
xchg
sbb
inc
add
mov
sub
mov
xchg
inc
mov
roll
xor
fistpll
jae
das
mov
test
mov
loop
xor
repnz
popa
jge
test
cmc
setbe
adc
adc
inc
cmp
push
jbe
push
outsl
push
scas
mov
rorb
mov
mov
xchg
je
into
pop
push
pop
clc
aas
mov
into
push
rcrb
sbb
test
pop
inc
dec
sbb
lods
inc
fisubrl
mov
pop
sub
jg
imul
push
xchg
ja
jns
or
add
scas
and
clc
add
mov
pop
int
mov
sub
jb
ja
outsl
pop
xchg
xor
adcb
das
inc
or
mov
mov
sub
cmpsl
adc
jl
in
sub
sbb
das
mov
repnz
jbe
movaps
inc
push
xchg
push
ret
sbb
mov
xchg
cmp
cmp
xchg
jmp
xchg
mov
std
je
aam
mov
cmp
or
rcr
pop
jns
insl
dec
push
jle
push
inc
dec
jae
mov
sbb
inc
je
enter
lods
pop
and
mov
ret
pop
and
aam
test
push
shrl
lock
and
or
loop
cmp
shrb
sub
cmpsb
pushf
icebp
adcb
mov
daa
or
jno
jnp
test
jne
scas
lret
pop
mov
lret
add
faddl
add
lahf
lock
pop
pop
cmpsl
dec
in
inc
sbb
xchg
stos
add
pop
shrl
adc
out
push
cltd
leave
xor
push
add
movsb
dec
in
pop
daa
repnz
lods
xor
push
scas
and
mov
xor
into
dec
scas
test
fs
mov
jno
pop
or
sbb
outsb
dec
popa
push
imul
adcl
mov
sub
or
into
push
int3
lea
insb
pop
mov
divb
and
mov
xorb
aaa
shr
push
jbe
or
adc
push
fisubl
aas
mov
jecxz
out
cmpl
das
sti
das
add
movsl
outsb
dec
sti
mov
shr
icebp
lock
int3
lea
out
lods
cmc
sti
mov
cmp
adc
pushf
mov
mov
ficomps
xor
push
ret
repz
in
or
sbb
xchg
scas
mov
hlt
fsts
incl
insb
cmp
ss
fsubs
xor
mov
sbb
mov
arpl
out
scas
jae
xor
insl
jle
jp
and
mov
and
jne
inc
cli
idiv
in
std
das
mov
adc
or
sub
mov
xorl
test
sbb
insl
mov
mov
add
popa
aam
inc
popa
pop
jp
jge
jmp
adc
repz
fmull
imul
scas
lea
xor
addr16
ret
inc
lods
cmpsb
mov
mov
push
pop
cmpsl
std
xchg
xchg
jae
and
or
jae
dec
std
xchg
mov
rorl
xchg
aas
mov
mulb
push
mov
je
pop
aaa
mov
adc
push
inc
push
shl
pop
mov
dec
sub
dec
enter
mov
rsqrtps
scas
mov
add
jecxz
inc
dec
xchg
push
dec
insb
ja
pop
addl
or
mov
jge
loope
jo
icebp
in
dec
adc
push
lcall
mov
xchg
or
sub
jle
adc
jg
lcall
out
addr16
sbb
lock
shrb
aaa
ret
loop
aas
lret
fldl
mov
mov
inc
pusha
xchg
ss
and
mov
xor
cmpxchg
fisubrl
pop
add
cmovg
push
mov
rcl
jnp
andb
ret
es
ret
inc
clc
popf
leave
push
dec
frndint
repnz
pushf
cmp
cs
jne
push
pop
repz
add
cvttps2pi
inc
fs
jbe
push
sub
pop
and
sbb
or
pop
mov
fistps
mov
imul
insb
les
push
inc
push
sbb
out
lcall
mov
fisubl
xchg
cmp
enter
pop
pop
mov
cs
pop
ljmp
stos
lret
negb
mov
push
in
sbb
adc
adc
mov
xor
rol
cmp
jge
mov
sub
xchg
dec
push
xchg
xor
adc
das
pop
cmp
adc
cli
mov
sbb
movsl
mov
imul
fcmovbe
fildll
sub
mov
fsubl
xchg
test
pop
cmc
ds
mov
lret
push
jb
xlat
inc
mov
out
push
aas
pop
dec
jbe
cld
dec
mov
sub
adc
movsb
sbb
inc
and
ret
inc
out
jnp
movb
cmc
std
or
test
and
shrb
rcrb
adc
fimull
dec
nop
lret
jl
int3
iret
sub
sub
in
xor
mov
popa
mov
and
leave
cmp
test
or
out
xchg
mov
outsl
dec
mov
sbb
lahf
bound
movlps
sub
push
test
in
dec
sub
sub
bound
ds
jb
dec
jmp
repz
dec
imul
inc
cmp
sbb
out
dec
sbb
pushf
xchg
push
push
inc
test
std
mov
sub
subb
jo
aaa
sub
enter
and
xor
inc
mov
loopne
sub
shll
outsb
mov
pop
mov
dec
std
ds
sub
mov
or
fsubs
mov
sahf
cmp
push
cld
add
cmp
aad
aam
dec
dec
in
xchg
lods
adc
push
sub
add
stos
mov
jl
aas
ja
dec
sahf
andb
or
stos
lea
out
dec
jle
sub
or
leave
mov
jb
out
into
and
enter
lcall
and
stos
shl
mov
out
inc
mov
and
addr16
pop
cmp
enter
sbb
pop
xor
xor
mov
push
out
out
fwait
jb
xchg
mov
add
in
mov
ret
adc
popa
loopne
lret
das
sub
mov
xor
js
cmpsb
add
jnp
in
adc
gs
cmp
pop
lret
sbb
js
outsb
mov
les
push
es
jne
ficomps
outsl
jp
jnp
cmp
mov
xchg
fcmovnb
cld
or
jbe
test
push
pop
and
jb
js
xchg
add
push
or
sub
pop
sub
cmp
test
loopne
dec
jp
cmpsl
and
mov
test
pop
push
loope
sub
imul
xchg
insl
addr16
adc
mov
les
cmovbe
mov
sti
insl
vshufps
push
lcall
cli
jp
test
xor
frstor
out
sub
xchg
mov
mov
andb
aaa
jbe
pop
loopne
inc
andl
sub
out
pop
aas
int
mov
push
pop
push
sbb
lcall
imul
add
scas
es
nopl
orb
and
test
pushf
scas
jmp
lahf
loop
call
pop
cli
add
xchg
adc
cmp
push
sar
loopne
inc
clc
insl
pop
mov
xor
fmull
add
add
and
popf
xor
inc
cwtl
vpshad
mul
lcall
inc
and
add
jo
ret
mov
xchg
outsl
bound
lret
cmp
mov
enter
rcrl
mov
push
sub
xchg
popf
sarb
outsb
push
insb
mov
xchg
fildl
arpl
mov
adc
enter
mov
daa
and
pushf
xchg
cmp
cmp
scas
call
dec
lcall
fcmovnbe
xor
fistps
lahf
xchg
or
adc
jne
and
shlb
mov
fdivrl
dec
and
push
mov
jmp
into
mov
popf
mov
cltd
and
jge
pusha
xchg
adc
cmc
mov
sub
xchg
mov
jmp
jl
nop
mov
push
dec
add
sahf
pop
out
add
ret
loopne
outsb
sarb
push
dec
ret
jp
imul
aas
pop
mov
call
jb
clc
xor
mov
jmp
fildll
jae
push
stos
mov
sar
rcrb
ret
mull
adc
lea
imul
in
mov
push
adc
aam
test
sub
dec
icebp
scas
fs
test
aam
lahf
subl
adc
popf
loop
sub
hlt
in
or
imul
xchg
movsb
clc
stos
push
inc
add
orb
data16
inc
xlat
leave
subl
in
rcrb
repnz
mov
inc
pusha
jae
fdiv
cmp
psllq
pop
mov
and
sbbl
outsl
and
dec
test
mov
in
inc
jns
xchg
repnz
sti
add
xchg
out
in
js
pop
loop
and
aam
aas
dec
pop
push
insb
push
adc
sbb
push
ret
xchg
sbb
jge
mov
fwait
bound
lds
xchg
jbe
sub
jbe
call
xor
mov
sbb
push
adc
nop
inc
mov
lcall
pop
js
stos
test
adcl
in
into
fstl
sbb
pushf
sti
addl
int3
in
add
daa
or
or
cs
xor
adc
ja
mov
les
sub
mov
cld
push
mov
pop
inc
out
xor
stc
cmp
js
push
out
jge
test
stc
and
push
pop
imul
mov
imul
gs
mov
lea
inc
in
loopne
in
jle
jo
adc
jb
sahf
leave
and
lods
es
xor
addr16
sub
test
cltd
mov
and
push
dec
lds
adc
dec
sub
jns
sub
push
jge
push
mov
shlb
dec
mov
prefetcht0
mov
adc
lret
and
dec
add
enter
xchg
mov
add
and
in
add
sub
sbb
pushf
inc
adc
inc
cmp
fnstcw
push
aam
fiadds
dec
sbb
xchg
or
and
inc
popf
and
mov
stos
roll
ljmp
or
mov
add
add
ficomps
sub
aas
pop
shrb
icebp
mov
or
fdivrl
sbb
jmp
xchg
dec
lahf
push
cs
test
fsub
js
fldt
add
jnp
les
sbb
sbb
push
cwtl
shl
loop
pop
aad
add
out
inc
repnz
clc
out
pop
outsl
dec
jae
xor
mov
jge
gs
leave
mov
xchg
xor
test
movsl
inc
fiadds
jge
adc
dec
and
lcall
loopne
iret
lods
sbb
stc
xlat
mov
jmp
adc
rcr
xorb
inc
jb
jl
adc
pop
mov
jb
adc
xchg
xchg
push
iret
cli
sahf
xor
out
cs
div
and
adc
mov
lret
sahf
or
or
add
sti
or
mov
loopne
loope
les
pop
push
inc
add
dec
jl
xlat
js
jb
outsb
mov
cwtl
xadd
jns
loope
mov
fisubs
pop
and
leave
loope
stos
movsb
gs
fwait
popf
or
lods
push
int
es
xchg
dec
aaa
sbb
cwtl
adc
aaa
out
sbb
or
aas
push
cmp
sub
jae
addr16
int
add
sub
fisubrs
mov
addr16
mov
or
es
add
cmpsb
pop
jl
jle
adc
and
dec
adc
pop
dec
icebp
or
adc
lret
inc
mov
push
loop
cmpb
fisttpll
inc
add
mov
lea
jmp
push
ja
js
shr
and
sbb
lock
cmp
rorl
mov
push
inc
int
aaa
xor
cwtl
jmp
and
sub
fsubrs
aas
dec
into
jae
jbe
lods
cmp
jns
adc
aas
sbb
xchg
xor
ljmp
pop
push
mov
lea
lahf
adc
test
nop
lock
inc
imul
add
and
cmp
scas
add
sbb
pop
push
mov
jmp
out
add
pop
rol
mov
pop
les
add
shrb
fdivrl
push
fisubs
push
cld
mov
pop
movsl
sarb
adc
mov
push
mov
aam
pusha
jp
in
and
ljmp
icebp
mov
scas
pop
fldl
pop
repnz
xchg
sbb
adc
push
into
outsl
and
popa
sbb
or
lahf
pusha
cltd
mov
int3
push
jecxz
adc
cmp
pop
inc
cltd
push
push
push
jge
and
push
adc
test
cmpsl
test
int3
aaa
nop
daa
or
push
sbb
in
pop
int
out
aad
les
cmp
mov
int3
xor
test
out
lret
enter
lock
lcall
ret
aam
inc
dec
test
popa
sub
xchg
dec
mov
and
xchg
push
rorl
xor
mov
dec
sub
rcrl
pop
pop
mov
out
sbb
adc
rclb
nop
clc
data16
sub
loopne
and
cmp
imul
xchg
pop
mov
loope
icebp
jns
cmp
mov
ret
adc
imul
out
pop
xor
cmp
repnz
lods
xorb
inc
cmp
and
add
inc
fxam
sbbl
mov
fbld
xchg
and
dec
xchg
xchg
jp
pop
mov
outsl
pop
push
pop
push
mov
out
mov
mov
push
mov
mov
jmp
into
jno
mov
mov
pop
leave
lahf
dec
fldl
imul
mov
fiaddl
and
push
xchg
fistps
movsl
dec
insl
push
roll
inc
push
ljmp
fbstp
imul
hlt
push
cltd
xchg
sub
popf
pop
jbe
imul
jns
sub
mov
inc
sub
jbe
clc
inc
mov
jnp
test
lods
pop
mov
xor
data16
inc
dec
mul
sub
push
adc
cwtl
or
xchg
addr16
daa
pop
sti
daa
dec
fstl
rcr
arpl
adcb
fisttpl
mov
mov
pop
or
lcall
lds
cmpsl
pop
adc
xchg
sub
daa
addl
cmp
and
sti
add
cmc
mov
dec
dec
lock
stc
imulb
iret
rolb
mov
xchg
push
mov
jmp
jp
inc
inc
enter
stc
jns
xchg
std
call
enter
xor
add
and
sbb
or
mov
xchg
add
inc
sbb
xor
in
test
mov
dec
out
cmp
xchg
push
and
lea
xchg
mov
sub
iret
idivb
cmpsl
jl
enter
aad
std
xchg
dec
or
pop
pop
aam
stc
cltd
sbb
nop
push
outsl
or
add
jbe
pop
fisttps
sub
daa
movsb
xchg
sbb
mov
dec
nop
jb
ljmp
or
imul
push
push
push
leave
imul
pushf
outsl
pushf
aad
xor
mov
lcall
popa
test
lds
sahf
mov
ss
fldt
in
push
sub
or
das
leave
fucomi
or
jae
stos
orl
or
gs
fstpt
cmc
sub
sub
jno
lods
mov
jp
xchg
xchg
add
pop
je
push
stc
rcrb
aas
xor
cmp
loop
sti
mov
out
popl
sar
jmp
test
js
sbb
sti
dec
in
fbld
fstl
xchg
pop
cmp
dec
cmp
sub
fnstsw
ret
jae
sub
loopne
icebp
cmp
jp
fisttpl
test
sbb
push
cmpsb
and
fdivrs
pop
cmp
mov
enter
ret
movb
mov
sub
push
dec
lcall
mov
cmpsl
push
mov
mov
adc
add
dec
push
mov
push
dec
xor
sbb
mov
fsubs
adc
imul
mov
das
ljmp
rorb
xor
cmp
add
inc
jge
push
or
and
or
mov
ds
adc
loopne
stc
out
inc
rol
push
inc
adc
aam
jl
xor
mov
jmp
ret
es
testl
int
inc
insl
sub
cmp
out
jl
mov
mov
pushf
test
inc
call
jge
ret
mov
jg
clc
cmp
and
push
and
dec
cmp
addr16
in
and
sbb
jmp
add
pop
int3
in
add
sbb
push
or
loope
out
mov
xor
movsl
cmc
add
inc
jmp
jae
mov
insl
inc
jge
xchg
or
push
arpl
subl
lods
int
cltd
xchg
loop
int
test
popa
cmp
pop
jecxz
cmc
clc
and
fnstcw
mov
push
lret
ljmp
push
mov
inc
repnz
test
js
sti
or
pop
sub
inc
inc
addr16
inc
mov
out
and
mov
fcompl
shlb
inc
cwtl
clc
dec
enter
bound
cwtl
dec
ret
imulb
pop
daa
adc
mov
sahf
sbb
test
rcrb
out
and
pop
dec
mov
call
lahf
sar
rcr
sub
or
scas
out
pushf
inc
scas
scas
push
clc
adc
fwait
add
mov
arpl
mov
xor
cmp
incb
adc
xor
outsl
popf
xchg
jbe
jne
repz
loop
add
or
inc
fdivrs
jae
es
movsb
fisttpll
imul
sub
push
cmp
xor
or
andb
jns
pushf
adc
loope
add
xor
lods
imul
pop
ret
jecxz
add
inc
out
xchg
or
stos
pop
clc
daa
mov
out
jae
lret
rorb
vpmuludq
jbe
sbb
test
test
daa
dec
stos
cmp
sbbb
jno
mov
and
lahf
cmp
imul
pop
sbb
jno
mov
push
mov
mov
sub
cmp
xor
add
sbb
add
rcrb
cmpsb
cmc
cwtl
add
inc
js
fwait
sub
pop
call
mov
pop
dec
daa
test
popf
push
jle
sub
inc
dec
push
ljmp
pop
sub
cmp
push
test
pop
mov
xlat
mov
outsl
push
mov
fbstp
insb
mov
cli
jecxz
xorb
out
aaa
inc
jb
int3
or
mov
adcl
mov
xchg
cmp
arpl
dec
dec
cmp
repz
dec
and
mov
and
fsubl
lea
jne
jo
lock
pop
test
aaa
mov
mov
imul
xchg
es
xor
cmp
test
jnp
mov
or
fimull
xchg
inc
filds
lcall
xorl
out
add
push
into
and
xchg
orb
pop
push
sub
add
lret
cmpsb
sbb
dec
cmpsl
jle
sbb
and
lea
clc
lods
loop
loopne
jle
js
int3
aad
jnp
mov
and
loop
cld
std
mov
test
loop
mov
sbb
cs
fst
rcll
sbb
sbb
jno
iret
xchg
shl
sti
and
test
test
in
mov
or
pop
test
inc
and
xchg
fidivrs
outsb
jbe
ffreep
lret
fcmove
dec
loope
or
pop
loope
test
mov
push
lods
movsb
xchg
mov
push
call
mov
add
mov
dec
clc
add
mov
cld
inc
mov
push
roll
std
test
out
lret
or
icebp
jb
xchg
push
jmp
jns
mov
lods
lcall
lods
mov
les
jb
mov
add
and
jp
dec
cmpsb
stos
pop
add
sub
jl
sbb
sbb
insl
dec
push
fwait
popa
shlb
jg
fnstsw
mov
lcall
pop
sarb
insl
lahf
sub
cmp
inc
cwtl
cmpsb
push
lcall
push
cmp
out
std
dec
dec
pop
idivl
aad
or
push
loop
mov
mov
xchg
sbbb
or
dec
pop
dec
dec
jno
outsl
or
cs
std
push
sub
or
andb
dec
xchg
xor
test
add
push
aaa
nop
mov
mov
push
sahf
xchg
ret
int
push
into
inc
ret
call
test
push
imul
lds
pop
test
and
hlt
fs
add
adcl
pop
hlt
push
sbb
adc
sbb
jg
mov
mov
push
mov
dec
outsb
in
push
dec
cmp
or
cli
in
jg
test
jne
fisubl
adc
fs
mov
test
sbb
jmp
fsubr
enter
pop
imul
jge
aam
mov
push
mov
popf
sahf
add
adc
sbb
sub
into
or
and
jmp
mov
xchg
mov
xchg
and
jle
mov
test
add
xchg
jns
xchg
stos
sub
insb
xor
jg
movl
icebp
popf
mov
loop
ror
xchg
ret
jb
cmp
dec
out
sub
cmpsb
outsb
movsl
pusha
lock
aas
test
faddl
iret
xchg
lods
xchg
adc
lcall
xchg
test
notl
call
mov
or
dec
loopne
inc
mov
xchg
mov
xor
jo
scas
add
push
xchg
push
dec
pop
lcall
sbb
push
ljmp
cltd
push
pop
loope
sarl
mov
mov
mov
push
push
adc
xchg
mov
jg
aam
sub
dec
cmp
adc
scas
cmp
subl
xor
dec
lcall
inc
push
mov
add
add
xchg
mov
pop
stos
xchg
pusha
lock
ss
xlat
sahf
mov
ret
lahf
cwtl
addl
adc
pusha
aam
or
sbb
scas
pop
into
or
inc
mov
jno
jae
xor
push
cmpsb
in
mov
lods
daa
fst
cmp
pop
jae
mov
inc
lahf
imul
int3
frstor
lods
lods
xlat
icebp
fstpl
stc
dec
xor
pop
imul
leave
mov
mov
push
adc
mov
cmpsl
push
jno
cmpsl
cmp
dec
xor
sbb
clc
push
lahf
jg
ljmp
lret
push
sub
mov
push
and
addr16
and
mov
and
aad
in
lahf
and
mov
gs
xchg
xor
outsl
mov
test
pop
ret
mov
pop
cmpsl
lahf
dec
inc
iret
mov
fidivl
dec
push
jg
fnstcw
inc
xchg
and
test
or
fildll
xor
push
add
incb
icebp
in
aad
adc
jbe
fsubrl
push
ljmp
fimull
mov
iret
pop
dec
cltd
loopne
and
cmp
xorb
imul
jnp
fstpl
and
addr16
lods
les
pop
mov
sbb
loopne
inc
sbbb
lcall
test
mov
pusha
repnz
xchg
and
mov
jnp
push
arpl
push
outsl
mov
mov
jo
sbbl
push
pusha
adc
test
jb
scas
mov
idivb
ftst
push
bound
add
mov
call
add
push
shl
pop
iret
push
stc
scas
fidivs
xor
cmp
jmp
push
add
push
jmp
dec
sbb
push
or
cmpsb
or
and
cmp
jl
and
xchg
fwait
adc
inc
not
mov
xchg
aam
filds
push
jmp
sbb
stos
lds
sbb
iret
push
jmp
push
inc
and
jne
xor
addr16
inc
add
jmp
outsb
cld
daa
or
dec
jbe
xor
jge
loopne
pop
fbstp
sub
data16
inc
insl
adc
cmp
pop
inc
xchg
sub
enter
mov
add
lods
mov
xchg
stos
lock
out
xchg
test
cmc
cmpb
jbe
dec
add
lods
mov
push
xchg
jb
cld
es
mov
sti
cs
icebp
sub
repz
or
inc
out
cwtl
dec
xchg
cmpb
gs
push
xchg
inc
push
outsl
imul
movsl
xor
cltd
xchg
jne
ljmp
mov
out
jae
out
push
xchg
out
xchg
mov
sub
shlb
gs
lcall
mov
push
pop
call
fbld
push
fnstsw
sbb
jne
cmpl
imul
sub
je
aas
xchg
jae
movsl
xor
mov
ret
xchg
push
or
loop
xchg
js
fistps
cld
sarb
jns
decl
sti
pop
push
mov
xor
pop
call
aad
mov
pop
inc
mov
pop
mov
pop
test
dec
roll
cmp
ja
jge
mov
lods
sub
ret
mov
enter
pop
push
test
mov
pop
and
lahf
rcrb
stos
enter
jb
jmp
cld
aam
and
add
jo
imulb
xor
ret
fucomip
dec
xchg
cmp
mov
push
inc
mov
fs
aas
sbb
xor
in
and
push
mov
xor
daa
fwait
add
and
fadds
push
jg
repnz
jns
mov
cli
decb
fwait
mov
push
mov
btc
or
mull
sbb
sub
xchg
inc
adc
jge
ret
roll
cmp
cmpsb
je
popa
pop
jb
add
xchg
shl
or
xchg
push
data16
out
lret
jg
pop
out
aas
insl
jb
daa
jl
sub
flds
inc
mov
mov
out
into
xor
add
inc
or
ret
cmp
in
fdiv
sbb
sub
mov
add
sbb
sti
fsubrl
mov
add
inc
add
mov
mov
pop
sub
in
push
jbe
pop
fisubl
push
repz
das
mov
movsl
jp
dec
push
in
mov
rcpps
jge
sbb
or
xchg
pop
cmpsb
push
pop
mov
lret
leave
dec
ss
jge
sbb
outsb
dec
and
enter
jbe
sbb
call
jns
pop
lahf
mov
xchg
adcl
repz
jecxz
mov
inc
jge
scas
jl
inc
pop
xor
loope
xlat
mov
lds
push
push
adc
sub
rcl
popa
iret
xchg
pmaddwd
cmp
cmpb
sbb
movsl
adc
xchg
jecxz
dec
popf
sti
rcrl
jae
inc
mov
jne
inc
jecxz
hlt
popa
clc
repnz
dec
test
sub
orb
call
bound
fcoml
loopne
stc
aam
mov
lods
dec
push
cmp
pop
cmpsb
adc
add
addb
hlt
add
or
push
push
in
xchg
xchg
daa
cli
xor
pandn
dec
aaa
xchg
mov
xor
inc
nop
stos
cmpsb
lcall
mov
cmpsl
sub
out
fmuls
push
sahf
jg
rcr
push
outsb
mov
sbb
and
outsb
mov
push
inc
cmpb
adc
push
xchg
test
dec
popa
nop
out
arpl
ret
mov
cmp
cmp
jo
lock
cmp
ds
sbb
jnp
adc
mov
cmp
movsb
cmpsb
into
dec
rcr
or
scas
pand
inc
sbb
push
sbb
lahf
xorl
push
lret
xchg
sub
out
hlt
push
jg
scas
add
pop
add
or
out
fsubrs
push
test
mov
add
or
mov
out
lret
sub
jp
mov
popa
add
clc
or
insb
mov
fistps
js
mov
ds
dec
fcomp
cltd
shlb
mov
test
and
mov
repz
mov
pop
and
or
dec
pop
leave
mov
icebp
mov
out
cwtl
add
add
mov
sub
int
aas
adc
sub
sub
sbb
jae
xchg
pop
imul
inc
cmc
fisubl
mov
jge
test
repnz
jns
jae
test
push
rcrb
jle
in
xorl
pop
pop
push
pop
sbb
in
scas
pop
add
dec
ljmpw
daa
fiaddl
inc
dec
loopne
or
mov
xor
mov
je
pop
xchg
adc
push
pop
arpl
iret
lahf
jmp
cmpsl
mov
push
pop
xchg
xchg
ss
mov
jmp
ja
icebp
sub
add
iret
out
xchg
jae
cmpsl
outsl
sub
push
push
cmpsl
popf
add
mov
fsubs
mov
mov
mov
inc
addr16
cmpsl
andl
jo,pn
xchg
add
mov
jno
xchg
xchg
sahf
and
pop
sub
les
push
ret
lahf
out
adc
cs
xorb
xchg
adc
sti
fnstsw
mov
ja
fildl
icebp
or
cld
mov
mov
pop
sarb
adc
push
js
dec
int3
fnsave
lret
enter
scas
fwait
add
test
shrb
pop
sub
cmpsl
push
mov
add
push
jo
adc
sub
or
mov
add
in
xchg
fdivrl
fs
jg
ljmp
sbb
mov
push
daa
lret
shll
mov
xor
push
or
and
push
xchg
cmp
xor
out
mov
inc
cmp
aaa
dec
cmp
std
cld
stos
pop
mov
sbb
mov
push
push
test
bound
pop
test
pop
xchg
and
xor
sub
sbb
call
and
mov
ret
inc
mov
jns
call
inc
je
jmp
and
shll
sub
gs
jae
jl
adc
sub
cli
pusha
pop
jge
addr16
imul
xor
in
scas
xchg
push
pop
test
jecxz
dec
fxch
xor
test
sbb
xchg
jns
into
push
lahf
outsl
scas
jle
out
je
out
push
fdivl
mov
push
xchg
mov
mov
xchg
cmpsl
fs
dec
inc
int3
mov
push
fcompl
je
test
aam
out
or
lds
add
adc
in
lock
mov
lock
sahf
pushf
jge
mov
jecxz
decb
fsts
sbb
jbe
push
fs
xchg
dec
jnp
stos
inc
and
lds
cwtl
lods
xlat
mov
sub
pop
enter
sti
popf
xchg
imul
dec
fcoms
mov
imul
mov
mov
or
fs
adc
cmp
pop
int3
popa
sbb
xor
jge
rcrb
mov
jp
cwtl
cmp
loope
gs
dec
es
fiadds
push
fistpl
pop
out
ja
popa
xor
sbb
sbb
cmp
dec
or
sbb
inc
insl
adc
pop
loopne
mov
fnstenv
in
rcl
cld
inc
cltd
cmp
pop
cmpsl
out
inc
push
cmp
and
xchg
push
lock
popf
mov
xchg
inc
test
sbb
movsl
lods
mov
dec
sbbb
pop
clc
mov
leave
pop
xor
push
cwtl
pop
faddl
dec
aaa
pop
dec
pop
cwtl
iret
adc
push
adc
xor
cmpsl
adc
jecxz
stos
bound
jle
mov
sub
popa
xchg
mov
hlt
cmc
and
xchg
mov
rol
out
or
push
pusha
lock
scas
ss
loop
sbb
repnz
mov
fs
mov
adc
xchg
xchg
dec
sbb
mov
cs
mov
cmp
mov
cmc
sbb
loopne
cmpsl
filds
lcall
leave
testb
push
mov
inc
cmp
pop
cmp
mov
add
sbb
nop
in
shlb
mov
das
push
stc
adc
sub
xchg
add
subb
lcall
and
inc
pop
clc
cmpb
push
jge
jmp
dec
sbb
mov
mov
inc
addr16
popf
cmc
mov
cmp
inc
ljmp
dec
insb
clc
es
and
add
mov
ds
push
push
and
faddl
cmp
mov
addr16
fiadds
mov
or
jns
ret
dec
clc
pop
lods
lock
mov
movsb
mov
repnz
imul
icebp
arpl
and
dec
adc
shlb
icebp
ret
in
daa
xchg
fsubs
movsl
popa
sbb
mov
mov
inc
sub
or
xchg
mov
scas
cli
clc
test
lds
dec
stos
jae
xor
lret
dec
movsl
mov
xorb
cltd
gs
ljmp
lret
push
orb
inc
outsl
adc
fisttps
xlat
pop
cld
add
inc
pop
xchg
sahf
aam
mov
shrb
in
or
and
mov
inc
or
jno
cmp
mov
cmp
add
adc
aam
bsf
xchg
int
xchg
mov
adc
inc
shrb
xchg
stos
aaa
addl
and
mov
push
xorb
in
xchg
test
sbb
pop
cmp
push
lret
fsub
or
sub
sti
repz
hlt
xor
popa
iret
ds
mov
les
or
mov
dec
repz
imul
cmpsl
pusha
sub
aaa
mov
push
stos
xchg
inc
je
fstpl
pop
and
sbb
loope
test
mov
mov
mov
sub
xchg
mov
leave
rcl
es
inc
fucomip
out
pop
cmpsl
pop
es
pop
cmp
lcall
inc
sbb
test
je
aaa
pop
loope
mov
loop
push
mov
adc
push
in
cmp
cltd
and
xchg
and
cmp
sbb
push
dec
fwait
in
xor
adc
xlat
mov
jp
pop
cmp
lods
or
pusha
fidivrs
xor
dec
mov
test
lea
push
mov
push
in
fs
idivl
push
push
adc
jae
int
bnd
popa
add
loop
jmp
xlat
push
mov
mov
adc
movsb
mov
sahf
adc
add
mov
inc
or
sbb
mov
bound
aas
cmpsl
icebp
jb
or
rorb
mov
insw
xorl
int
data16
fwait
mov
add
lea
mov
add
scas
rcrb
cmpsb
insb
mov
push
dec
movsb
rcll
stos
mov
sub
mov
pop
movsl
data16
je
imul
or
enter
cmp
xchg
inc
mov
mov
mov
jmp
and
sbb
fwait
sub
shr
dec
inc
scas
in
clc
mov
fisttpl
xor
loopne
jbe
in
fsubrl
dec
push
cmp
jge
sbb
sbb
pusha
aad
inc
mov
lea
data16
fildll
fiadds
lock
cli
iret
iret
mov
pop
ja
sbb
bound
pop
mov
jle
or
or
int3
sbb
cltd
xor
or
add
in
push
adc
pushf
bound
inc
sbb
aaa
jnp
adcl
divb
aam
push
adc
add
popa
cmp
enter
divb
test
mov
inc
fdivrs
inc
out
lods
push
fwait
push
xchg
xor
stos
adc
adc
movsl
pop
mov
das
mov
fs
jecxz
or
or
xlat
mov
scas
mov
outsb
sbb
sub
lds
sbb
aam
shlb
add
push
xor
mov
out
aam
out
add
popf
xor
inc
test
fidivl
ds
dec
mov
fmuls
ljmp
imul
je
xor
clc
std
insl
out
jecxz
cmpsb
adc
jmp
int3
imul
push
dec
mov
pop
add
sbb
xor
repnz
mov
sbb
dec
cmp
aad
aam
popa
or
cmp
out
pop
lods
addr16
add
test
enter
int3
jae
int3
in
lcall
inc
mov
sub
lods
les
push
ss
iret
popf
xchg
fdivs
inc
and
inc
pop
stc
push
leave
mov
add
dec
bound
mov
dec
js
addr16
mov
xchg
movsb
movsl
mov
add
imul
push
push
mov
loopne
add
jns
sahf
aaa
out
cltd
mov
out
cmpsb
mov
jns
mov
sbbb
mov
jno
out
aad
mov
loope
xchg
fidivrl
sub
push
jp
stos
mov
inc
out
jb
shlb
sub
rolb
adc
nop
xorl
pop
and
lret
into
sbb
call
cmc
xchg
jbe
xchg
lgs
clc
jecxz
fiadds
in
inc
mov
mull
lret
push
mov
ret
in
jle
xchg
pop
mov
mov
inc
mov
std
mov
hlt
fs
cmp
xchg
lea
or
cs
push
data16
mov
add
test
dec
imul
cmp
sahf
pop
dec
and
fists
mov
jmp
int
and
lret
ds
outsb
addr16
sbb
add
es
add
clc
push
iret
push
mov
mov
in
loop
jg
jg
mov
mov
sub
pusha
aaa
addr16
andb
and
leave
add
jg
push
jne
movsl
xor
push
into
pushf
shl
adcl
sbb
add
mov
sub
loope
mov
jp
or
push
clc
pop
es
pop
jno
cs
add
cmp
test
hlt
fldl
pcmpgtb
cltd
fs
lods
aam
testl
jnp
push
addl
into
jp
xorb
and
xchg
cmp
push
or
test
shl
sti
add
daa
mov
dec
scas
int
ss
rclb
or
bound
outsb
lock
sub
std
nop
or
push
add
flds
aaa
dec
jae
insl
xchg
loop
mov
jmp
pop
mov
push
jmp
in
xor
adc
outsl
in
inc
or
jnp
jne
sub
jecxz
mov
lret
aaa
pop
jno
jge
push
lods
dec
inc
fisubl
in
movsl
popa
mov
push
jne
or
pop
lods
in
cli
mov
insl
insl
scas
jno
xchg
out
movsb
aad
mov
pop
in
jmp
dec
jae
lea
shlb
add
shrl
clc
and
int
jle
ljmp
mov
jp
addr16
das
test
and
xchg
mov
push
lea
jecxz
rolb
out
inc
shr
mov
mov
aad
into
addr16
and
fcmovnu
stos
inc
cmc
pusha
cmpsb
adc
push
pop
stos
adc
or
mov
aaa
pop
pop
test
mov
pushf
mov
and
cmpsb
mov
ja
add
int
xchg
push
ret
lods
ror
or
pop
ret
add
test
mov
pushf
add
std
mov
pusha
mov
sahf
sub
mov
stos
add
repz
sbb
pop
aam
or
and
jge
add
loope
jns
imul
inc
ja
repz
xchg
test
push
xor
test
adc
fsub
and
out
sbb
dec
inc
xchg
aam
mov
std
jo
nop
dec
cmpsb
mov
pop
inc
push
outsb
mov
sti
fisubs
subb
xlat
mov
je
jg
cwtl
push
out
repz
negb
nop
add
dec
or
jmp
pushf
rcrb
fsts
cmp
xor
pop
xchg
call
jmp
int3
inc
mov
inc
push
scas
jb
mov
dec
inc
imul
sbb
jne
mov
jb
push
jno
mov
cmp
adc
pop
xor
xchg
xchg
push
inc
push
nop
pop
dec
mov
xor
bound
sub
enter
cmp
sbb
or
add
pop
rolb
cmp
nop
in
pop
mov
lea
adc
out
adc
push
js,pn
hlt
cmp
mov
cmpsl
or
and
jge
sahf
or
fstpl
out
dec
adc
movsl
jno
push
repnz
repz
mov
xor
sti
bound
push
repnz
movsl
pop
xor
mov
mov
in
inc
mov
inc
sub
loop
push
out
mov
cmpl
push
ljmp
xor
dec
fs
loope
inc
jne
cmp
or
push
jg
je
test
scas
testl
push
enter
mov
sub
mov
add
int
fisttpl
sbb
inc
jo
fldl
jno
cli
jl
push
cmp
notl
cmp
aas
sbb
mov
mov
pop
pop
jle
shrl
xchg
push
mov
dec
sbb
rolb
int
notb
lret
push
mov
dec
insb
or
jnp
rcl
jl
cs
fisubrl
xor
jne
pop
out
and
mov
mov
iret
mov
in
jge
pop
mov
mov
lods
mov
outsl
fadds
adc
jl
negl
adc
das
fdivl
mov
rclb
test
fmuls
out
mov
mov
sub
cmpsb
or
push
pushf
pop
xchg
and
pop
adc
xchg
and
xor
cltd
sbb
in
jmp
inc
sub
sbb
jnp
mov
mov
in
out
sbb
mov
lds
fsubrs
and
sbb
cmc
pop
mov
jno
popf
pop
pop
cmp
inc
fidivs
inc
inc
in
add
sarl
ret
mull
outsb
aaa
dec
scas
test
pop
stc
jbe
push
mov
xchg
pop
iret
insb
xchg
or
les
loope
dec
lods
leave
xlat
pop
jmp
mov
cmp
outsb
mov
scas
rorb
mov
pop
repz
test
and
fcmovbe
arpl
pop
push
inc
movsl
adc
mov
xchg
stos
sub
cs
pop
sub
cli
pop
jle
adc
jb
popa
dec
hlt
add
les
iret
mov
push
ret
cmp
ret
sbb
lods
lea
inc
nop
repnz
lahf
imul
push
dec
aaa
adc
call
inc
sub
gs
ret
pop
test
mov
or
push
mov
pop
movsl
xor
gs
xchg
ds
in
addr16
insl
mov
testl
cwtl
and
sbb
into
fbld
and
xchg
jbe
inc
inc
push
fisubrl
push
test
cmp
test
mov
inc
mov
or
adc
xchg
ds
das
cmc
mov
test
adc
add
test
les
pop
dec
or
or
xor
push
adc
test
ret
dec
cmp
push
and
pop
jo
and
pusha
sub
adc
ds
jns
jno
das
or
iret
mov
mov
push
mov
cmpsl
pop
mov
push
clc
mov
int
xchg
mov
jno
mov
lods
test
pushf
sub
and
push
cmp
shll
mov
and
int
xor
lods
fs
inc
out
xchg
or
aaa
push
loope
imul
clc
in
fisttps
xlat
inc
dec
outsb
call
in
push
lock
mov
leave
push
jae
adc
fsubp
aam
push
jae
jae
sub
cmpsb
mov
xchg
loopne
ljmp
mov
push
xchg
sub
mov
into
fstps
ret
mov
and
call
lock
and
roll
stos
dec
add
test
mov
loope
inc
or
mov
jg
pop
push
mov
inc
roll
test
xchg
dec
mov
ffreep
jne
in
pop
mov
push
push
mov
into
stc
outsl
enter
add
int
pop
imul
jmp
xor
outsb
xor
popa
inc
jne
xchg
das
xchg
jmp
and
fmull
gs
cwtl
sub
push
or
adc
adc
mov
cmpsb
sbb
cltd
pop
into
and
ljmp
dec
out
mov
stos
nop
hlt
repnz
orl
je
jbe,pn
push
orl
and
and
out
outsb
test
mov
sbb
in
js
cmp
sbb
pop
les
xchg
icebp
xchg
fucomp
push
test
rcll
dec
add
cmp
mov
mov
inc
mov
or
lds
push
or
test
jmp
mov
xlat
jp
jnp
or
dec
adc
jl
mov
xchg
add
mov
cmpsl
inc
pop
sbb
push
leave
mov
int3
popf
jl
or
imul
or
lods
mov
korb
add
ss
mov
out
inc
mov
sbbb
hlt
jae
push
in
xchg
pushf
movsb
add
lret
cmc
adc
mov
or
std
movsb
outsl
std
daa
add
mov
push
mov
lret
push
dec
enter
jne
push
mov
jnp
sub
in
aam
xchg
push
mov
daa
testb
sub
jae
dec
add
js
repnz
xchg
aas
jecxz
jae
cmpl
fimull
sbb
push
sbb
sbb
adc
push
int
push
shlb
sbbl
jns
ret
sarb
cltd
push
sti
ljmp
repz
es
pop
mov
test
inc
mov
jecxz
daa
xor
enter
test
inc
icebp
xor
andl
inc
mov
mov
and
enter
mov
sub
dec
adcl
inc
xchg
dec
test
movsl
xchg
cli
sbb
jno
rclb
pop
sbb
add
cmovbe
outsb
mov
xchg
cmc
lock
add
pop
imul
fwait
data16
and
xor
mov
cmc
scas
jl
xor
rcrb
shlb
dec
jbe
and
xor
fbld
ljmp
push
inc
cmp
jmp
ficoms
xchg
ljmp
jg
leave
mov
pop
sub
adcb
cli
fdivl
out
pushw
sub
aad
mov
cli
cs
idivl
pop
ficoml
jmp
jnp
loopne
xchg
in
jae
jns
push
sbb
sub
bound
mov
js,pt
or
lret
jp
mov
inc
pop
dec
sub
push
adc
sub
push
pop
push
or
cwtl
push
xchg
mov
mov
cmpl
sub
mov
fimull
mov
icebp
int3
cld
mov
jae
sbbb
in
cs
fchs
test
cmp
out
lret
lret
sbb
xchg
cmp
test
rclb
sbbl
cs
jbe
inc
lds
movsl
pop
push
pop
or
loopne
mov
jp
rcr
mov
mov
xchg
push
inc
xchg
fnsave
insb
ret
dec
repz
or
bound
xchg
out
push
popf
add
or
jns
loope
sbb
js
cli
pop
adc
js
push
enter
cs
in
mov
xor
cwtl
xor
fwait
jnp
fimuls
out
lea
pop
sbb
lock
ret
subb
sub
jne
add
gs
scas
das
or
shrl
lock
repnz
pop
movsl
out
outsl
addr16
mov
dec
hlt
push
pop
cmp
cmp
mov
xchg
jo
and
insb
inc
rcrl
mov
aad
add
aam
popa
jmp
dec
dec
sahf
xor
lahf
mov
jbe
aas
cli
lods
push
repnz
cmpsb
mov
dec
xor
pop
xchg
jecxz
mov
jo
test
aam
lret
int3
mov
mov
fnstcw
add
adc
pop
dec
lods
pop
xchg
and
push
adc
push
xor
mov
out
mov
call
sub
outsb
shr
cld
cmp
mov
outsb
hlt
sub
adc
nop
jl
into
inc
lahf
push
mov
jno
inc
fbld
fidivrs
lret
popa
jo
add
and
xor
inc
hlt
addb
mov
and
mov
jmp
pushf
mov
pop
cmp
xor
mov
cmp
pop
dec
int
pushf
cmp
inc
stc
add
pushf
sub
xchg
lock
or
push
add
and
out
std
fstpt
test
sbb
inc
mov
das
jno
fistl
xchg
movsb
jbe
push
push
test
jns
sbb
push
jmp
pop
pop
sti
xchg
inc
out
fisubrs
sbb
jp
iret
cld
push
mov
rcrw
cmp
arpl
cmp
xchg
cmp
movsl
sti
and
push
in
mov
ret
mov
sub
cmp
mov
call
out
or
clc
inc
movsl
dec
add
fstl
lahf
lock
scas
inc
loope
dec
enter
stos
pop
int
pop
pusha
mov
jge
sbb
fadds
pop
jmp
cltd
loopne
push
inc
inc
lahf
test
dec
pop
xor
popa
out
test
mov
cmc
sub
int3
cmc
ljmp
pop
adc
sbb
pop
mov
lcall
dec
mov
into
out
or
loopw
fiaddl
push
and
and
or
fistpl
cld
rolb
fistps
adc
ljmp
jb
inc
je
add
push
call
mov
pop
mov
or
pushf
adc
jae
add
xchg
xorb
shrl
xchg
mov
pop
sub
adc
repz
xor
adc
jns
ss
pop
mov
fidivl
lds
in
mov
push
ror
data16
pusha
dec
jmp
add
jmp
xchg
cli
test
adc
movsb
roll
cmpsb
nop
jo
hlt
stos
push
push
jo
adc
mov
pop
pop
cmpsl
pop
mov
sbb
dec
xchg
gs
push
enter
adc
rolb
or
xchg
pop
push
xor
fstpl
sbb
mov
outsb
inc
ja
dec
mov
mov
ret
ja
xor
jge
lret
leave
out
jnp
ret
push
in
hlt
jo
lret
push
outsb
es
add
sub
pop
xchg
mov
push
leave
push
fisttpll
pop
dec
sti
jno
adc
out
and
daa
outsb
pop
cmpsl
pushf
imul
inc
out
or
cmp
xchg
repz
lods
adc
fs
or
xor
mov
hlt
test
out
mov
testb
mov
enter
test
inc
sbb
add
popa
cmpsb
mov
cltd
adc
out
int3
ja
dec
cmpb
push
subb
and
or
jno
es
push
cmpsl
lds
nop
jecxz
and
dec
mov
fs
push
inc
test
dec
test
mov
dec
sahf
inc
and
add
in
mov
mov
pop
sbb
sti
aas
in
jbe
in
xchg
out
sbb
cmp
rcll
repz
mov
or
orb
mov
inc
sbb
fwait
out
inc
dec
jae
insl
jp
sub
push
sub
or
pop
call
adc
fdivs
sub
sub
mov
add
test
daa
test
lret
cmp
in
jbe
les
icebp
push
cmc
inc
xor
int3
out
jmp
pusha
or
lea
push
adc
push
mov
lcall
outsb
sbb
and
pop
aas
mov
loope
sub
cs
xor
insl
lahf
push
loope
xor
lahf
and
mov
sar
inc
lea
inc
hlt
enter
mov
jnp
cmpsb
push
cli
mov
mov
pop
les
or
aad
push
loopne
loopne
mov
inc
xchg
stos
jnp
sub
mov
and
in
mov
jp
dec
and
mov
outsb
in
test
mov
jb
rclb
adc
mov
dec
cmpsb
popa
and
adc
cmp
nop
push
mov
inc
lds
mov
lds
in
push
pop
out
stc
jg
dec
dec
add
and
aad
bound
andb
decb
inc
inc
hlt
mov
xchg
and
mov
dec
push
sub
cwtl
push
sti
stc
xchg
cmp
rorb
sbb
out
mov
cmp
in
sbb
add
inc
sub
add
mov
lea
add
jmp
lret
inc
add
push
lcall
clc
mov
outsl
andb
xchg
jns
mov
pop
loop
jb
jnp
push
rcrb
cmp
ljmp
push
fmulp
dec
out
mov
hlt
jmp
cmpb
in
pop
dec
fs
dec
andb
xchg
fsubs
cld
mov
jecxz
adc
dec
push
jmp
add
fiaddl
add
sub
jo
push
loopne
lret
aam
sahf
jp
ror
or
mov
cmp
or
insb
lock
mov
sub
jge
pop
mov
add
jg
xchg
insb
jecxz
sub
out
mov
xchg
and
jnp
add
stc
nop
dec
daa
ds
dec
dec
nop
aam
and
scas
mov
decl
test
sti
push
leave
orl
push
or
dec
mov
cltd
cmpsl
lahf
test
sbb
notl
and
inc
jp
dec
enter
add
ret
popf
bound
pusha
stos
inc
xchg
xor
test
or
mov
aam
stos
push
dec
in
jle
pop
cld
add
leave
fimull
push
push
jp
lret
and
inc
loopne
aam
iret
mov
mov
jnp
push
ficoms
lahf
or
cmp
repnz
dec
xor
ljmp
jmp
int
and
push
out
std
ss
loopne
lret
jg
pop
xor
into
popf
push
mov
push
mov
lea
lods
sti
repnz
aaa
scas
jg
dec
push
add
cmp
jecxz
adc
data16
dec
sub
fdiv
jg
in
xor
lods
mov
adc
xor
repnz
jo
cmp
testl
mov
mov
divb
or
out
in
hlt
icebp
lods
test
sarl
ret
mov
inc
cld
iret
scas
pop
adc
sbb
shlb
push
push
or
xchg
cli
sbb
mov
or
jmp
push
pop
inc
rclb
and
adc
leave
aam
outsb
imull
inc
jmp
aas
fldl
lds
ret
lds
int3
or
mov
loop
aas
xor
leave
add
push
push
mov
int3
jge
flds
sub
dec
lret
sbb
mov
insb
or
mov
or
lods
addr16
add
pop
loop
inc
les
cwtl
fmull
ffreep
xchg
lods
insl
jbe
lahf
lea
xor
xchg
push
and
jmp
sbb
and
movsl
int3
push
pop
inc
push
gs
jb
and
push
add
add
push
iret
cmpsl
mov
sbb
push
and
sbb
lcall
add
call
pop
xchg
mov
xor
repz
push
mov
xchg
pop
fisubrs
sti
into
in
jmp
push
push
jge
dec
repz
mov
cli
mov
jg
xchg
mov
adc
rcrb
push
sbb
mov
fmull
mov
jb
and
ljmp
cli
pop
pop
popa
adc
in
pop
mov
ret
and
fucom
pop
je
push
insb
movsb
or
jp
jge
xchg
cld
adcl
jmp
rol
pusha
jno
xor
loop
jno
cltd
ret
fsubs
leave
cld
xor
cmp
ds
adc
and
pop
mov
test
inc
pushf
or
lcall
test
test
clc
rcrb
add
sbbb
aam
mov
jp
mov
push
pop
sbb
aad
or
popf
push
cmp
in
dec
das
adc
pop
ja
push
aaa
insb
push
push
adc
js
ret
cli
mov
jae
pop
mov
pop
mov
ret
imul
arpl
pop
xchg
jbe
sub
jle
mov
pushw
repz
sub
push
push
mov
out
dec
sbb
pop
mov
fsincos
test
adc
cmp
leave
and
std
add
adc
loop
addr16
out
sub
lods
ret
sub
cmp
out
fisubs
fs
stos
ljmp
adc
jecxz
sbbl
cmpsb
in
jmp
push
pop
jp
pmaxsw
cmpsl
loop
xor
stos
jns
sub
add
daa
xchg
push
add
test
scas
stos
je
dec
xorb
lea
test
test
cmpsb
nop
dec
testb
in
xchg
sbb
adc
cltd
push
or
push
cwtl
cmp
push
addb
add
bound
das
xchg
jno
pop
mov
push
dec
mov
das
sarl
out
jnp
xchg
mov
mov
push
push
and
jl
fadds
inc
ds
stc
enter
sbb
mov
add
jbe
jge
add
mov
outsb
mov
outsl
xlat
ss
lods
push
into
cmp
adc
push
int
pop
lods
lods
rclb
pop
cmp
mov
sub
xor
push
xor
push
dec
sub
in
jmp
cltd
push
mov
mov
mov
dec
mov
lcall
and
mov
jno
push
add
or
or
cwtl
add
inc
pop
push
cmc
sar
jge
fimuls
scas
cltd
aaa
je
xor
adc
mov
inc
shrb
clc
mov
sahf
sub
sub
ret
add
push
xor
jnp
or
es
mov
xchg
push
dec
sub
sub
lods
sbb
movsl
fwait
inc
mov
int3
jmp
aad
mov
sbbb
stc
xchg
fldenv
xchg
lret
outsb
push
inc
sub
in
mov
or
sub
mov
testl
retw
test
sub
dec
mov
pop
jmp
loope
xchg
dec
push
jae
sub
xor
inc
les
into
out
call
jle
push
mov
inc
xor
divb
jp
xchg
adc
pop
lcall
and
hlt
push
push
imul
pop
jno
cs
lds
or
xorb
sbb
or
ljmp
inc
mov
jb
fimuls
pop
popf
aad
movsb
sub
sahf
jp
sub
inc
dec
ja
scas
mov
jl
and
cmp
ja
xor
xchg
bound
test
bnd
sub
pop
je
lock
xor
adc
push
rorb
in
add
or
int
jp
or
imul
push
cmp
dec
xor
iret
pop
mov
insb
rorb
jl,pn
es
lods
mov
xorb
popa
scas
shl
in
lcall
js
jno
or
inc
or
mov
fincstp
fidivrl
inc
ss
adcb
inc
mov
js
jl
into
pop
sbb
sbb
or
or
push
enter
adc
ret
xor
xor
inc
scas
sahf
cwtl
int
les
ja
xor
icebp
xchg
sub
add
in
pop
push
mov
jo
pop
and
mov
cmc
cmp
add
lock
sbb
mov
stos
ficoms
dec
jb
push
xor
mov
mov
call
mov
xor
add
outsl
or
popf
sbb
cmpl
adc
lods
jb
jge
sbb
and
push
addl
push
stc
pusha
add
and
cmc
vphadduwq
lahf
pop
lds
adc
push
clc
dec
jno
outsl
xchg
testb
push
divb
adc
das
mov
dec
fsubrs
and
sub
std
lea
xchg
call
or
ljmp
xchg
jecxz
push
fistpl
fcmove
je
fs
mov
dec
ja
sub
daa
faddl
lods
mov
movsl
push
rcrl
lds
popa
mov
sub
pusha
add
push
pop
fmuls
ljmp
or
dec
rcll
aam
sti
jp
add
inc
mov
push
inc
xchg
loop
shll
popf
jg
sbb
shrl
cmp
cmp
sub
daa
mov
jmp
and
cmp
js
scas
xchg
rcrl
ja
mov
sahf
ret
stos
cmc
cmp
sub
push
mov
mov
push
add
div
test
push
cmp
std
mov
add
rolb
push
cmp
repnz
cltd
out
shll
enter
push
mov
mov
loopne
push
scas
inc
mov
mov
cmpsb
negb
out
aas
sbb
out
ficoms
loope
int3
jo
addr16
fldl
stc
mov
dec
push
mov
mov
mov
mov
in
xor
ret
scas
adc
test
aas
cmc
ljmp
movsl
movsl
inc
out
jge
jle
daa
jno
fsub
in
out
xchg
adc
pop
add
aaa
orl
mov
inc
xchg
and
ja
or
inc
push
sub
xor
mov
pop
fbld
xchg
xor
cli
aam
cwtl
sbb
mov
daa
out
xchg
push
rolb
mov
stc
mov
fidivrs
ficoml
popa
fstp
cmp
xchg
movsb
cmp
mov
icebp
dec
cmp
cmpsb
adc
adc
or
mov
xchg
xor
insl
nop
adc
xor
or
ja
cmp
mov
add
pop
pop
add
mov
mov
mov
pop
push
in
cli
inc
mov
imul
stos
hlt
sub
mov
or
dec
adc
xchg
sbb
cwtl
dec
bound
mov
test
stos
cmp
out
push
inc
mov
sub
or
mov
push
cmpsl
mov
mov
hlt
and
cmp
sbb
js
imul
aaa
loope
push
mov
or
sbb
outsl
sub
popf
andl
icebp
push
and
and
pop
in
lahf
add
xor
aam
loope
sti
enter
and
push
test
pop
mov
xchg
xlat
shlb
lds
mov
adc
scas
stos
or
in
out
jo
cwtl
rclb
sbb
movsb
jb
cmp
test
mov
xor
sarb
js
rcl
dec
pop
push
leave
xorb
cmp
shl
dec
inc
les
xor
or
or
fsubr
inc
mov
fs
xor
mov
mov
dec
fs
jmp
add
mov
mov
xchg
sbbb
xor
push
loop
or
outsl
and
add
scas
out
cmpb
cld
push
lret
call
cmp
icebp
cmp
ffree
sbb
adc
and
pop
decb
xchg
les
mov
pop
outsb
lahf
fbld
inc
mov
or
lods
mov
mov
and
insb
sub
sbb
or
or
mov
outsl
js
fistl
ss
insb
push
jge
jno
pop
andl
adc
add
push
ficomps
pushf
xchg
cmp
push
jg
and
shl
sbb
fnstenv
and
push
ret
mov
out
fidivrs
xchg
push
adc
or
or
es
outsl
imul
inc
js
sbb
or
sbbb
inc
inc
lea
inc
inc
mov
shlb
jo
ret
ret
mov
stos
xorl
les
insb
jl
out
mov
sub
cwtl
cmp
jp
push
jp
xchg
mov
inc
test
sbb
jnp
sbbl
ja
cld
jbe
jmp
imul
push
jl
xchg
inc
lret
push
xlat
mov
add
insb
push
sbb
xor
or
das
mov
add
cmpsl
mov
test
mov
adc
dec
sub
xor
dec
fdivrs
fimuls
pop
xor
dec
in
rorb
outsb
add
je
fucomi
jp
daa
inc
out
mov
testb
and
sub
or
sbb
mov
popf
popa
call
xchg
cmp
adc
shl
mov
lods
add
fildll
mov
stc
fidivl
jbe
lret
js
xor
adc
imul
jb
cmp
es
cmp
add
and
pushf
mov
and
dec
cwtl
lock
jno
stos
cs
cmp
sub
and
sub
dec
mov
sub
fcomp
out
push
jae
xor
jbe
pop
leave
sub
or
gs
and
bound
inc
mov
bound
cmp
shrb
sub
stc
pop
into
clc
je
cmp
sbb
inc
mov
fisubrs
push
popf
jns
mov
call
xchg
jmp
fs
popa
fsubs
mov
jae
sbb
pop
in
add
or
lahf
cwtl
fidivl
sub
and
and
add
mov
daa
out
sub
xchg
push
stos
add
pop
mov
ret
pop
push
mov
add
in
lds
test
sbb
rol
jb
inc
shl
jbe
mov
imul
add
push
inc
movsl
xchg
outsl
into
insb
pushf
jns
jbe
cmp
push
arpl
out
fsubs
pop
cltd
inc
sub
xor
jae
out
inc
jecxz
sarb
mov
nop
xor
fidivl
out
pop
adcl
adc
mov
dec
mov
mov
addb
push
sti
jbe
scas
lahf
sub
fldt
jle
dec
std
fists
lahf
mov
scas
push
mov
mov
rcll
sub
nop
js
xchg
mov
push
leave
repnz
imul
pop
or
push
repnz
sub
cs
cmp
imul
cltd
xchg
jl
inc
and
int3
dec
and
xchg
pop
add
mov
cmp
stc
in
pop
dec
push
mov
or
fistps
add
and
pusha
lret
sub
push
aam
int
mov
int3
imul
cwtl
mov
or
mov
adcb
adc
call
add
dec
in
push
outsb
test
jb
adc
fs
in
enter
lahf
pusha
and
adc
outsl
out
popa
mov
cmp
mov
ret
jne
xchg
inc
adc
fcoml
nop
test
leave
gs
jns
xchg
mov
sbb
lret
mov
push
stc
adc
inc
enter
in
and
dec
enter
lods
stos
dec
jp
call
jne
lret
mov
pop
add
das
jb
xlat
push
mov
mov
js
xor
rol
rorb
movsl
xor
sbb
cs
xchg
ret
xlat
out
sbb
sub
pop
pushf
popa
mov
fwait
lret
push
fidivs
popf
or
shll
inc
repnz
lds
hlt
add
ds
ds
loop
stc
in
mov
add
pop
jp
dec
popl
cmpsb
lods
add
aam
addr16
and
out
jg
addr16
pop
mov
mov
jne
popf
ja
cli
dec
mov
andl
lea
inc
mov
sub
cmp
pop
mov
fimuls
jae
add
add
jo
cli
in
sub
scas
pop
es
xor
or
xchg
aas
sbb
mov
dec
lret
mov
int3
and
rclb
fs
jg
call
icebp
fwait
bound
leave
cli
pop
pop
lods
dec
fcompl
cmpsl
xchg
or
imul
int3
fcompp
pop
sbb
hlt
and
xchg
shll
data16
lret
nop
cmp
pop
cs
ss
out
jecxz
pop
daa
pop
cmp
flds
cmpsb
cmp
test
iret
xor
jns
jl
dec
jbe
and
jb
std
shlb
movsl
jl
pop
fcmovnb
fwait
pop
loopne
mov
je
rclb
lret
lcall
out
jl
mov
lods
jp
ret
test
es
and
xchg
in
jg
mov
dec
outsl
leave
fisubl
int3
ret
adc
arpl
leave
stos
add
aam
xlat
or
mov
dec
rcr
neg
pop
sub
in
test
fwait
inc
mov
dec
ss
lahf
cmp
sub
xor
mov
jg
mov
mov
push
rol
cld
ja
adc
je
inc
cmp
sahf
dec
test
movsl
mov
cwtl
jmp
fwait
scas
lret
aaa
xor
or
adc
aad
or
std
cmp
lock
mulb
pop
add
pop
repz
cld
cmp
jmp
pop
mov
in
int
negl
icebp
jg
pusha
sbb
mov
sbb
je
inc
cmp
leave
data16
dec
stos
int3
inc
or
jno
add
push
out
and
scas
scas
dec
in
fists
in
inc
lods
popf
jle
sbb
lock
loop
cmp
xor
or
add
inc
jnp
test
mov
fdivl
aad
pop
aas
dec
adc
pusha
jmp
ret
dec
insl
sub
test
dec
or
and
inc
push
or
jl
pop
testl
call
pop
inc
sbbb
sbb
pop
push
test
inc
sbb
jp
ret
add
ljmp
shlb
out
cmp
sti
xor
test
push
nop
ss
xchg
or
and
mov
in
mov
dec
data16
xchg
and
adc
cmp
xchg
insb
testb
push
push
adc
in
mov
pop
testl
stos
sbb
stc
mov
push
jno
xchg
mov
cwtl
cmp
sbb
sbbl
cmpsb
and
jb
enter
loopne
add
mov
int3
minps
jl
ja
adc
fs
xorl
sbb
imul
ljmp
pop
mov
add
push
push
in
push
sti
lar
xchg
push
dec
repnz
xor
pop
cmp
mov
inc
in
enter
stos
xchg
lock
jno
scas
pop
sahf
pop
fsubrs
push
pop
adc
xchg
imul
inc
out
push
push
dec
pop
aad
mov
ss
in
fsub
jb
rcr
add
cmc
clc
scas
movsb
inc
mov
call
cmpsb
aaa
sub
sbb
xchg
sbb
jl
imul
subb
daa
and
pop
and
in
jno
pushf
test
sbb
gs
cmpb
mov
mov
push
push
pop
inc
inc
mov
jmp
call
daa
mov
mov
cwtl
or
mov
sub
imul
lcall
into
mov
and
nop
jmp
xor
pop
jmp
insb
leave
fiaddl
pushf
js
inc
lods
cmpsl
aaa
imul
and
or
jle
sub
or
jno
das
inc
inc
or
mov
push
sbb
insl
jle
jnp
mov
sub
jecxz
fprem1
add
jne
loop
adc
lret
xor
xor
jno
xorb
aad
subl
lea
cmpsl
lock
fsubs
or
stos
xchg
test
in
jl
bound
jg
mov
push
pop
sbb
cmp
test
cld
lret
push
and
setnp
xchg
out
adc
fisttpl
sti
les
nop
xor
cmp
mov
fldl
test
leave
jo
inc
xchg
dec
mov
inc
movsb
lds
fistps
stc
lret
xchg
add
add
loopne
loopne
or
rorl
mov
jo
adc
lea
in
inc
push
sub
dec
pop
add
cltd
sbb
add
call
fdivp
sbb
push
jns
stc
fwait
mov
repnz
jg
andb
aaa
mov
jge
mov
sti
repnz
jecxz
jg
adc
adc
add
addr16
or
inc
out
lea
std
and
push
jae
pop
mov
movsl
mov
es
lea
push
xchg
bound
inc
push
aas
into
repz
jns
jg
test
push
adc
sub
sbb
mov
cmp
repnz
out
outsl
push
inc
stos
cltd
shrl
or
ss
outsl
and
lea
xor
hlt
adc
filds
mov
inc
and
rol
jge
cmovs
inc
add
mov
and
mov
jmp
push
inc
mov
xor
add
xlat
and
call
push
aaa
add
or
xlat
jmp
mov
sbb
fnstenv
repnz
xor
pop
mov
inc
mov
cmpb
fldl
ss
js
dec
outsl
mov
xchg
sahf
add
add
inc
daa
jae
lds
popa
fs
push
clc
pushf
mov
cmp
adc
lds
pop
shr
mov
std
and
fstpl
adc
subl
inc
fidivrs
xchg
push
inc
sub
pop
inc
fisttpll
push
aad
pop
xlat
outsl
lods
push
stos
dec
lret
imul
add
aam
cmp
psrlq
cmp
jae
arpl
scas
add
je
out
adc
mov
imul
in
pop
mov
xor
mov
andl
mov
mov
mov
aaa
xchg
push
adc
ret
cltd
and
mov
shll
push
cld
sub
xor
add
pusha
sub
shll
cwtl
adc
int
je
mov
fsubrs
jecxz
mov
add
or
je
mov
imul
dec
out
loope
sub
lahf
bound
test
inc
push
sub
je
jl
es
fwait
push
mov
test
inc
in
nop
inc
sbbl
jbe
mov
arpl
addl
mov
push
rcrl
addl
out
mov
jl
iret
jns
hlt
das
or
pop
mov
les
sub
push
sbb
add
pop
fcompl
sbb
xchg
fistpl
push
mov
nop
jae
sti
inc
daa
xchg
insl
rcrl
stos
lret
pop
loopne
cmp
mov
dec
jb
sub
inc
fs
stos
lcall
jbe
cmp
out
fmuls
out
pop
push
imul
sbb
dec
js
outsb
out
xlat
or
call
jnp
mov
push
das
ficompl
into
xor
bound
ds
in
mov
lods
or
jge
add
inc
jecxz
rcll
cs
push
cmp
sub
gs
cmp
iret
adc
or
ja
mov
push
inc
cs
andb
mov
rcrl
movsb
sbb
rcrb
sbb
imul
mov
push
loopne
inc
sbb
mov
jge
xchg
scas
pop
push
push
mov
xchg
jb
call
aaa
cld
mov
or
fstps
insb
inc
pinsrw
rcrl
add
push
lret
lret
and
add
mov
mov
in
mov
xbegin
stos
std
jae
sbb
pop
inc
cmpl
scas
sti
mov
dec
push
push
ret
mov
loopne
push
sbb
in
pop
add
scas
jmp
addb
sub
mov
adc
je
lods
dec
push
test
push
pop
mov
pop
rcrb
or
xor
in
cmpsb
cld
push
ljmp
mov
inc
jle
pop
xor
sbb
cwtl
das
les
pop
and
pop
jae
dec
iret
gs
cmp
sbb
pop
es
push
jbe
mov
cltd
mov
pop
sub
fildll
mov
add
movsl
mov
loop
sarl
jle
cltd
clc
adc
or
cs
mov
or
and
or
loopne
mov
mov
into
popf
les
out
fs
jb
popf
ror
sbb
dec
cmc
scas
mov
mov
rorb
lea
push
cmp
pmaxsw
adc
jecxz
mov
loopne
jno
lret
fwait
sub
add
addl
cmp
in
jmp
push
push
mov
push
sbb
pop
push
stos
aam
inc
sbb
and
adc
pop
movsb
jg
pusha
add
push
mov
clc
fisttpl
or
out
xchg
xchg
ja
pop
stos
outsb
ja
inc
push
push
mov
jne
rolb
daa
or
and
cmp
insb
lea
das
inc
jle
shrl
sbb
stc
mov
mov
ficoms
pop
jmp
mov
xchg
xchg
divps
mov
mov
xchg
in
cmp
bound
or
xor
push
ffreep
pushf
lahf
clc
outsl
out
in
adc
xchg
ret
push
jl
das
std
add
lock
stos
fisubs
popa
dec
push
incl
loopne
mov
xchg
nop
mov
mov
in
sbb
xchg
mov
dec
pop
loop
dec
mov
dec
dec
pop
out
push
or
icebp
push
inc
pusha
fsubr
fsubrl
repz
dec
sub
out
stc
aaa
sub
cld
icebp
fistpl
xchg
mov
push
push
shll
jl
fstp
sub
idiv
sbb
sbb
outsb
jne
in
xor
daa
fcmovu
stos
nop
xor
gs
test
lock
mov
test
jns
out
lret
movsl
pop
xchg
push
jnp
pop
stos
in
mov
jmp
jnp
sbb
rol
xchg
aad
and
xchg
sbb
out
scas
pop
dec
aaa
fsubrl
sbb
je
imull
shr
or
fmull
mov
inc
pop
inc
jne
mov
and
sbb
lret
sub
negl
jmp
inc
inc
add
popa
adc
inc
lods
into
iret
sahf
fstps
sub
inc
push
gs
push
inc
mov
mov
dec
fldenv
mov
aad
out
pop
fwait
leave
or
into
inc
sub
pop
push
add
ss
mov
push
adcb
das
push
pusha
xchg
loopne
shlb
mov
xchg
xor
sbb
movsb
mov
pop
inc
loop
mov
pusha
out
scas
ret
and
or
neg
add
pop
jne
mov
cwtl
cmp
popa
jle
xchg
loop
es
mov
shlb
mov
ja
in
frstor
gs
rol
mov
sub
mov
jl
icebp
jge
cmp
push
mov
mov
inc
push
sbb
cmp
cmp
enter
xchg
jnp
xchg
hlt
inc
mov
fistpl
ret
inc
sub
sar
cmp
and
pop
push
ret
xor
cmp
inc
pop
and
pop
das
fs
mov
sbb
fdivrl
mov
dec
mov
add
or
loopne
sub
fidivl
gs
bound
ss
dec
pop
imul
mov
jbe
cmp
jo
bound
out
dec
jmp
sbb
push
repz
jns
ret
in
ja
pop
loopne
or
aas
arpl
repz
pop
cmpsb
push
jns
mov
lea
fwait
out
dec
xor
loope
xor
data16
and
or
push
add
or
xchg
mov
lahf
in
mov
cmpsb
sub
cmove
sub
mov
sbb
cld
fwait
ja
pop
mov
cli
imul
icebp
fnstcw
or
inc
popa
sbb
addr16
cld
jl
mov
xor
in
pop
sub
inc
int
push
lcall
add
aaa
jmp
lahf
std
outsl
shll
iret
pop
testb
push
sub
cmp
push
mov
add
xchg
scas
inc
pusha
into
mov
xchg
stos
dec
mov
fadd
sar
dec
and
inc
add
cwtl
jl
in
adc
inc
inc
add
out
or
xchg
jge
lock
repz
inc
and
test
aam
int3
stos
stos
mov
and
fcoms
mov
int3
jb
imul
popf
xchg
mov
jmp
sub
faddl
rcrb
lods
jg
enter
jp
cmpsb
inc
clc
rol
xchg
mov
fxch
push
in
mov
sar
jg
push
cltd
les
daa
in
push
movsb
leave
stos
mov
inc
inc
xor
outsl
ret
psllq
cld
pop
or
popa
shll
xchg
inc
jns
sub
rolb
daa
mov
cmpsb
ficompl
push
pop
sahf
push
std
sbb
adc
stos
push
xchg
popa
sub
add
or
clc
outsl
sbb
ret
or
xor
lds
aaa
nop
mov
fprem
es
fcompl
faddl
fiadds
insl
fiadds
int3
or
pushf
cmp
cmp
sub
mov
lock
scas
mov
test
je
aad
add
pop
jmp
mov
cmc
scas
fidivrs
lcall
repnz
inc
sbb
fdivl
and
fimuls
sbb
sbb
xchg
mov
cmp
fdiv
add
je
cs
cmc
mov
cmp
dec
ss
mov
fwait
in
sub
inc
fs
pop
or
nop
push
mov
xchg
bnd
cwtl
aaa
lds
push
pop
aaa
adc
lea
ds
cmp
sub
or
jbe
enter
or
scas
fldl
lcall
jb
dec
insb
aaa
inc
inc
repz
push
out
hlt
ljmp
mov
mov
in
mov
jae
nop
xchg
mov
cmpsl
scas
sbbb
pop
add
enter
lea
xchg
ret
imul
dec
jnp
popa
sub
push
xchg
stos
bound
cli
adc
ljmp
xor
jg
pop
dec
sub
inc
idivb
xorl
ja
mov
mov
jl
addr16
mov
adc
pop
fists
mov
into
xor
pop
inc
add
mov
sub
lret
pop
lods
inc
sub
daa
insb
push
fsubr
pusha
sbb
js
aam
dec
icebp
js
pop
int3
push
cmpsl
pop
call
shlb
pusha
jle
imul
loope
add
scas
idivl
rolb
shlb
jl
jge
lret
repnz
aad
xchg
xor
scas
dec
loope
or
xor
aaa
inc
arpl
or
inc
js
iret
cltd
jge
mov
mov
jnp
aad
sbb
sbb
outsl
xchg
and
or
shrl
cmp
xlat
icebp
xor
push
leave
test
test
orl
loope
cmp
lods
mov
sahf
data16
outsl
movsb
dec
push
lret
push
js
imul
or
xchg
les
push
mov
in
fbld
popf
mov
sub
notb
das
mov
xchg
test
sub
test
mov
es
cs
in
cltd
leave
cmp
int3
int
movsb
pop
aaa
inc
popa
cmpl
loopne
xchg
rclb
mov
ss
mov
xchg
addr16
sub
cwtl
lret
aas
push
cli
xor
outsb
add
imul
insl
add
cmpsb
adc
dec
loopne
test
jp
pop
and
lods
cmp
in
ja
xchg
mov
je
insb
rclb
push
or
mov
es
xor
cmp
mov
ss
sub
in
xor
pop
lea
mov
das
or
scas
jmp
mov
and
mov
rcl
lock
std
lock
mov
aas
sub
push
push
hlt
mov
sub
and
icebp
or
inc
jp
push
incb
pusha
xchg
sbb
or
xchg
adc
sub
ret
add
loop
lods
xchg
jle
jb
or
xchg
sbb
mov
and
jb
rorl
jns
mov
aaa
out
jo
push
aam
pusha
stos
xchg
dec
mov
in
cmp
jo
cwtl
es
mov
push
popl
popa
mov
sub
insl
movsb
add
and
cmp
sbb
xorb
cmp
std
fldcw
scas
jb
jne
sarl
jae
popa
jbe
fucom
out
outsl
lods
adc
jp
scas
cltd
mov
sbb
gs
pop
and
jge
mov
xchg
dec
and
and
aaa
sub
sub
ret
roll
mov
push
fsubp
imul
shlb
cmpsb
jg
std
pushf
mov
adc
or
fisttpll
adc
mov
adc
test
jnp,pn
js
inc
or
iretw
sbb
mov
dec
es
pop
insl
jne
mull
or
rcl
ret
int3
lock
out
in
in
aad
xor
insb
and
lods
cwtl
aam
adc
lods
mov
add
loopne
lods
movsb
push
loope
int3
rcrb
mov
sahf
jle
mov
jne
add
sbb
adc
inc
adc
xchg
mov
andb
lds
jecxz
cli
add
and
mov
push
call
jne
dec
aam
xchg
cmp
lds
fs
call
mov
shrb
negb
lahf
add
sbb
push
inc
mov
scas
jecxz
add
mov
aad
pushf
ss
xchg
leave
cmp
dec
cmp
or
jge
jecxz
mov
lret
enter
cmp
xchg
mov
cld
mov
dec
test
mov
fstps
aas
idivb
test
mov
mov
mov
mov
adc
icebp
imul
ja
arpl
jmp
dec
dec
idivl
inc
call
roll
xchg
cwtl
lock
mov
pop
arpl
lods
mov
es
hlt
shlb
rorb
add
xor
ja
icebp
inc
loop
adc
pop
out
jg
and
pop
cwtl
stos
sub
out
mull
cld
xor
inc
or
mov
mov
dec
into
mov
lds
cli
add
test
sub
movsb
icebp
test
subb
addb
dec
icebp
sub
jmp
push
jnp
sub
pop
mov
addl
cli
lock
cwtl
imul
xchg
gs
push
pusha
jbe
push
inc
cmp
aas
test
mov
cld
addb
mov
sub
rclb
dec
jns
xchg
sbb
movsl
insb
cltd
daa
aas
aas
xor
add
sub
jae
dec
mov
stos
pop
cld
je
cmpb
je
stc
or
hlt
and
mov
push
xchg
cmp
je
add
add
pop
insb
sub
das
frstor
xchg
and
mov
popa
cmp
cli
sub
dec
xor
add
imul
aad
popa
call
test
sbb
mov
cmp
aaa
jp
xchg
mov
pop
movsb
cmpl
jno
jp
test
sbb
inc
sahf
leave
sar
jne
pop
adc
stc
jge
xchg
mov
jmp
pop
fisubs
jge
int
xchg
dec
mov
push
dec
cmc
rclb
xchg
into
cmp
push
xor
cld
test
xor
inc
add
pop
popf
pop
sub
data16
mov
push
sub
and
push
adcb
push
sub
test
and
aas
imull
xchg
and
popf
jb
bound
dec
out
and
inc
notb
adc
add
rcrb
mov
jl
int3
int3
rcrl
push
data16
mov
test
pop
push
rclb
mov
rorb
scas
gs
test
xchg
fisttps
loopne
dec
test
cs
pushl
push
loopne
daa
icebp
add
dec
mov
push
or
mov
xchg
aaa
pop
dec
mov
ljmp
xor
jns
sahf
xor
lea
std
xchg
iret
pusha
insl
cli
inc
notb
clc
movsl
inc
pop
pop
pop
mov
mov
lcall
fiaddl
cmp
lods
xor
add
jnp
adc
sbb
filds
xor
mov
push
scas
dec
and
repz
pusha
loopne
mov
out
sbb
negl
clc
aaa
movb
test
sbb
ret
filds
cmp
loopne
aas
int3
xchg
mov
lods
adc
cli
mov
int
jg
out
jne
fnstcw
sbb
push
stos
cmp
sbb
arpl
int3
add
hlt
jl
rorb
clc
sahf
mov
mov
adc
xchg
jo
push
out
loop
or
add
das
test
test
mov
add
xchg
iret
dec
push
lcall
mov
sbb
cli
adc
push
sbb
inc
hlt
mov
cmpb
sub
or
sub
jno
dec
jp
mov
fcoml
pusha
sbb
xchg
fs
mov
push
repz
ret
xchg
cmpsl
add
sarb
pop
int
adc
lds
test
sbb
mov
rcrl
inc
sbb
out
mov
std
push
lds
xorl
outsl
mov
repnz
mov
and
cld
roll
int3
or
lods
aam
mov
mov
ss
insb
lret
pop
pop
sub
fstl
and
rorl
les
xchg
mov
pop
add
xor
ror
ret
push
leave
sbb
sahf
xchg
mov
fstpt
testl
std
mov
pop
and
xchg
lods
cld
cwtl
push
std
fpatan
mov
adc
sub
jae
adc
shll
or
jp
push
out
xchg
dec
push
inc
xor
xchg
arpl
push
mov
mov
sahf
lods
notl
cmp
aas
shlb
sbb
rcrb
xor
sbb
imulb
dec
inc
pop
inc
push
test
cmovge
ss
ds
inc
mov
and
xchg
push
gs
sub
cmp
test
sbb
gs
repnz
out
idivl
js
or
push
insl
pop
pop
jle
xor
jno
xor
adc
aaa
add
subb
hlt
or
mov
jmp
or
jmp
notb
dec
inc
jmp
adc
mov
xorl
bnd
jecxz
mov
repnz
mulb
scas
mov
mov
push
mov
jmp
or
sbb
push
lret
mov
das
lret
push
lods
out
push
jb
insb
addb
jg
sbb
cmp
ret
ror
fwait
cmp
jo
pushf
ljmp
lods
daa
out
inc
sbb
mov
mov
xor
dec
cmc
loope
int
pop
cmp
std
fisttps
fsubs
jne
cmp
add
sub
adc
pop
mov
mov
cmp
cmp
add
cmp
xchg
mov
cmp
pop
ret
mov
sbb
push
cmp
sarl
je
pusha
cmc
push
jg
xchg
in
add
cmp
add
sub
inc
add
pop
xlat
mov
and
push
sti
xchg
mov
dec
hlt
inc
cld
gs
pushf
pushf
andl
pop
clc
leave
jae
movsb
or
dec
or
xchg
iret
xchg
push
pop
aad
addr16
in
and
jo
pop
shlb
dec
leave
addr16
adc
add
xchg
mov
sahf
pusha
mov
jo
and
jns
out
cs
adc
push
inc
jge
lcall
mov
sbb
in
mov
jns
pop
shlb
and
xchg
int3
push
shrb
jp
mov
gs
mov
arpl
push
fcomps
jae
sbb
inc
cltd
jno
xor
ret
icebp
mov
jmp
cmp
cwtl
out
mov
pop
push
icebp
pmaxub
or
test
aaa
adc
divb
ds
xchg
call
adc
jp
or
in
jns
inc
idivl
mov
mov
mov
dec
push
call
dec
xor
dec
mov
insl
cmp
add
sbb
loopne
push
nop
in
clc
ret
gs
movsb
xchg
add
ret
adc
ljmp
mov
push
push
mov
cmpsb
jmp
ja
and
adc
dec
es
adc
scas
in
sbbl
pop
fiadds
lock
sbb
sub
dec
mov
cwtl
mov
pop
ljmp
jno
sahf
adc
js
mov
mov
icebp
lret
inc
mov
aaa
xor
xor
arpl
push
mov
jge
jns
bound
fnstcw
sub
xor
popa
pop
int
inc
jg
dec
push
xlat
in
pop
inc
or
repz
repz
and
andl
jmp
dec
hlt
xor
dec
movsb
adc
test
dec
xchg
mov
pop
mov
push
dec
mov
bound
jnp
cli
sub
xchg
jg
arpl
shlb
mov
sbb
aam
push
dec
insl
mov
sub
int3
data16
rorb
ret
aad
mov
xor
scas
lock
xor
jge
clc
jmp
add
jb
cld
mov
loopne
pusha
jne
dec
mov
push
pop
hlt
shl
xlat
imul
fld1
mov
out
fwait
inc
and
mov
xchg
push
icebp
test
pop
inc
pop
ret
push
fstpt
sub
lret
ficoml
outsb
add
xchg
add
or
or
jp
add
sub
popf
mov
mov
scas
cltd
pop
adc
ret
lahf
mov
add
xchg
cli
xor
sub
xor
adc
mov
cmp
popa
sub
or
mov
xchg
addr16
sub
adc
mov
or
imul
iret
aaa
jo
sbb
daa
mov
jp
sbb
mov
push
mov
inc
xchg
movsb
sahf
mov
add
adc
xchg
jmp
imul
repnz
mov
sbb
rclb
lods
mov
loop
fwait
pushf
push
cs
movsb
and
movsl
xor
add
lahf
ret
out
les
pop
shlb
xor
out
lret
jecxz
pop
mov
or
push
aam
cld
stos
adc
enter
dec
pusha
sub
or
inc
sbb
and
jecxz
mov
push
jb
sub
addr16
push
insl
push
jae
sahf
mov
mov
outsl
xchg
cmp
arpl
mov
push
js
pop
jl
in
mov
loopew
lods
lods
cld
push
into
mov
std
xchg
or
arpl
cmpb
mov
jb
jle
xchg
stos
dec
inc
lret
sbb
xor
jecxz
add
std
and
mov
or
aaa
rcr
push
jge
xchg
jmp
adc
xor
inc
fwait
mov
test
cmp
outsl
lods
mov
pushf
dec
mov
and
ds
dec
add
sub
test
dec
xchg
movsb
mov
ljmp
in
rcrb
sub
fldt
push
cmp
ljmp
push
add
fs
testl
dec
xor
xchg
sbb
pop
xor
xor
xchg
pop
mov
stos
ljmp
pop
aaa
or
repz
leave
test
push
stos
push
scas
push
shll
movsb
repnz
and
dec
repz
fnstcw
mov
sbb
cmp
js
mov
stos
popf
mov
mov
pop
inc
cmp
std
stos
daa
dec
faddl
inc
cmc
sbb
cmc
mov
cmp
xchg
subb
sbbl
dec
inc
in
adc
jg
jae
mov
js
xchg
call
ds
ss
sahf
scas
xchg
mov
std
es
cmp
jns
fadds
ret
pop
mov
pop
pusha
enter
sub
jmp
movsl
aam
cli
xor
es
in
decl
shlb
xchg
mov
das
ficoms
xchg
push
ljmp
sub
jnp
fistl
clc
testl
adc
cld
fsubr
gs
mov
inc
and
subl
sub
push
mov
js
fwait
rolb
mov
lahf
sub
arpl
sbb
ss
popf
jae
nop
stos
jnp
push
int
dec
cmpsl
xor
mov
rcrl
jno
mov
pop
adc
dec
in
pushf
insb
sti
stos
je
lds
stos
call
ljmp
fistpl
xchg
adc
pop
adc
das
and
sub
jns
mov
std
mov
gs
ret
popf
xchg
fidivl
sti
adc
addr16
xchg
lods
in
inc
mov
mov
ja
rcl
or
xchg
test
lret
and
dec
mov
jne
bound
mov
jp
xchg
lods
adc
testb
popf
fimuls
hlt
fs
imul
push
iret
lods
jo
ret
jg
test
pop
sbb
mov
addb
out
aam
cmp
add
call
fs
push
rcll
out
or
jle
sbb
das
js
dec
cmpsl
test
sub
daa
dec
push
and
mov
jbe
in
push
jge,pt
inc
or
xlat
mov
add
lret
xlat
push
enter
xor
ds
cmpsb
pop
lock
cmp
call
jo
fs
fistl
xor
or
scas
and
jle
mul
push
push
aam
out
les
test
xor
hlt
nop
das
and
cmp
andb
pop
jg
pop
add
push
lcall
fidivrl
jne
mov
pusha
cld
jecxz
mov
and
cltd
in
cmpsb
outsl
push
or
cmp
fcoms
loopne
imul
jbe
or
push
mov
or
sbb
jecxz
repnz
cmp
mov
mov
fiaddl
fistps
jecxz
mov
push
pop
and
xchg
or
adcb
fisubl
test
xchg
sti
popa
jb
jp
testl
icebp
aad
cli
clc
cltd
xchg
add
loop
je
mov
sbb
out
mov
aad
fistpll
inc
xor
cld
cmp
pop
jge
jne
fwait
jnp
mov
cmpl
sub
dec
mov
sub
stos
jmp
adc
in
ljmp
xor
fsub
lods
pop
loope
stos
add
outsb
popf
mov
and
cmp
push
cwtl
daa
jo
filds
cmp
lock
cmc
sbb
mov
fbld
inc
fs
mov
dec
out
loopne
scas
jae
fimull
movsb
ret
divl
pop
pop
pop
jo
lods
push
add
test
lret
mov
adc
in
andb
jp
in
xchg
jle
nop
dec
pusha
cmp
jnp
sub
shl
adc
jo
mov
mov
cmc
sub
ficoms
xchg
xor
mov
sbb
inc
cs
rcll
das
popa
push
mov
push
movsb
mov
jno
add
stos
xlat
pop
addr16
shrb
bound
js
jo
push
pop
mov
test
push
mov
in
pop
lret
push
cmc
jbe
pop
addps
pop
jl
gs
mov
mov
mov
aad
fcoms
add
insb
adc
fisttps
mov
sub
movsb
cli
cmpsb
sub
data16
fsubp
adc
or
mov
std
fsubl
push
mov
push
in
popf
pop
xchg
cmp
movsb
outsl
mov
push
cwtl
inc
test
lods
pop
int
cltd
jbe
xchg
imul
pushf
push
std
cmp
sub
pop
push
cmp
sub
call
push
popf
insb
adc
int
sbb
fisttps
leave
aam
inc
mov
pop
aad
clc
ss
and
pop
shll
les
cmpsb
xor
test
cld
xor
mov
aas
add
xor
xchg
cmpsb
mov
pushf
add
pop
ljmp
push
outsl
xchg
adc
xor
popf
adc
jns
std
test
add
mov
movsb
lds
orb
daa
push
dec
xchg
jge
pop
sbb
mov
movl
add
cmpsl
xchg
pushf
mov
inc
push
addr16
mov
ror
scas
xchg
lcall
inc
xor
subb
stc
mov
fcomps
pop
mov
jb
lds
outsl
pop
decb
or
aam
lret
inc
pop
and
inc
push
dec
dec
shlb
inc
aad
nop
hlt
cmp
add
inc
les
cld
ja
stos
xchg
test
adc
xlat
loopne
cs
jmp
cmp
cmc
mov
ret
cmp
inc
inc
mov
and
lea
imul
cmp
fistps
xor
or
mov
xor
or
addb
pop
clc
jp
lahf
dec
pminsw
fmuls
jecxz
or
xchg
jmp
push
dec
lahf
mov
cli
pop
sub
sub
dec
outsb
rcl
daa
xchg
loop
sbb
pop
scas
fcomi
xlat
daa
cmp
sbb
lods
or
icebp
lret
mov
mov
cmpsl
jno
push
inc
gs
mov
pop
sub
mov
push
dec
xchg
sub
dec
dec
pop
cmp
orb
mulb
cmp
test
aas
out
loopne
mov
add
mov
aad
mov
outsl
push
out
push
pop
inc
mov
jnp
aas
xor
mov
push
jg
jbe
test
lds
jns
xchg
mov
jae
je
dec
arpl
shll
fstl
or
hlt
fwait
adc
ret
gs
dec
stos
mov
mov
push
jle
hlt
push
cmp
movsb
imul
xchg
mov
xchg
or
jbe
push
in
pusha
sbb
rorl
aas
add
push
jnp
loopne
insb
mov
push
pop
out
mov
test
mov
repnz
call
add
sahf
loopne
cmp
imul
jp
mov
adc
scas
subl
ljmp
stos
mov
lea
or
ss
icebp
in
xchg
cwtl
adc
dec
arpl
pop
jns
adcl
pushf
mov
nop
mov
into
jmp
shrb
stos
mov
add
cwtl
clc
es
data16
push
push
xchg
les
inc
inc
cli
in
mov
pop
mov
js
cltd
ja
test
test
cmpsl
add
loop
mov
mov
dec
adc
subb
jl
push
mov
adc
mov
iret
and
adc
jbe
xlat
sbb
adc
scas
ffree
jns
out
outsl
or
call
nop
pop
test
mov
subl
add
jmp
xor
movsl
pop
mov
mov
mov
mov
dec
cwtl
stos
jle
inc
mov
out
jge
mov
pop
cld
inc
es
je
fldt
lret
push
lcall
pop
mov
jbe
or
inc
xchg
sbb
xor
jge
xchg
xlat
cmc
pop
fdivs
test
arpl
push
xor
in
daa
pop
or
jae
xlat
mov
pop
xchg
lea
gs
leave
cmc
jo
xchg
loopne
sub
mov
cmp
sbb
js
stc
cld
pushl
std
popa
std
jge,pt
outsb
mov
push
cmpsb
and
stos
mov
movsl
sub
stc
stc
rolb
xchg
cltd
leave
push
lcall
icebp
ret
adc
sahf
or
mov
shr
bound
xchg
cmpsb
dec
mov
or
or
test
daa
push
inc
js
inc
sbb
imul
cmp
repz
inc
push
add
or
xchg
hlt
sub
shll
test
cli
pop
pop
jmp
mov
loope
pop
mov
adc
push
or
jmp
movsl
lahf
lret
xor
add
xchg
movsb
fistpl
incb
and
shll
mov
or
ljmp
pop
add
adc
daa
lret
sti
call
cmp
mov
mov
jne
add
call
mov
jle
fs
mov
arpl
adc
fcomps
test
sbb
cltd
lret
aas
inc
icebp
ficomps
test
ss
cli
jmp
das
fistpll
xchg
out
adc
inc
mov
fildl
or
pop
pop
push
push
mov
negb
ss
nop
lret
pop
jne
push
pushf
dec
mov
sub
adc
cmpsl
push
cmc
pop
pop
out
aaa
mov
sbb
xchg
hlt
inc
lret
sbb
mov
or
dec
repz
sub
insb
mov
rcr
lods
shl
mov
or
scas
and
push
outsl
call
mov
bound
js
pop
mov
mov
ss
push
scas
sahf
cmp
fidivrs
lods
shl
xor
and
sarb
cwtl
out
add
push
jl
xchg
mov
xchg
mov
repz
ja
movsb
stc
mov
mov
movsb
inc
xlat
xor
add
pop
push
lods
push
dec
jb
dec
mov
in
or
jae
push
sbb
std
mov
cmpsl
out
movsb
adc
xor
pop
inc
xor
daa
dec
mov
add
out
ret
incl
mov
repz
mov
nop
stos
cwtl
repz
push
push
aam
jno
pop
add
xchg
std
xor
fistpl
sbb
in
scas
js
or
call
jo
sbb
cmp
das
mov
lock
fucom
and
popf
inc
cmp
mov
or
jae
rolb
and
in
lods
xlat
sub
lods
mov
dec
push
jns
int
rorl
cmc
sbb
cltd
cmp
push
stos
fildl
addl
adc
dec
dec
xlat
in
mov
imul
cli
or
ss
inc
or
aas
lock
es
out
daa
mov
cmove
loopew
mov
int
cmpsb
bound
mov
lret
xchg
inc
inc
xchg
mov
loope
lahf
adc
and
xchg
add
nop
mov
ss
stc
xchg
loop
nop
lds
decb
cmp
bound
and
xchg
outsl
cmp
cmpsb
nop
and
sti
adc
enter
add
clc
adc
ss
cmp
pop
pop
loopne
mov
pop
rclb
addr16
push
ret
out
testl
cld
mov
dec
jb
push
jae
jae
aaa
and
fwait
xchg
and
jo
bound
push
push
add
stos
outsl
jecxz
sub
rol
sub
or
movsb
rorb
add
xor
pop
call
int
cwtl
jbe
pop
out
and
insl
lds
lock
add
dec
inc
sbb
aam
mov
sti
sbb
pop
addr16
pop
lret
popf
loope
or
mov
mov
and
dec
pop
lea
fs
xchg
repnz
bound
inc
push
movsl
rolb
or
push
icebp
fldcw
sub
mov
xchg
mov
pop
dec
and
adc
inc
lea
mov
popa
pusha
add
iret
dec
push
les
repz
pop
bound
mov
faddl
jnp
fcoml
pop
into
inc
outsl
sub
ficomps
cmp
adc
mov
cmp
mov
or
cmp
lock
push
cmc
stos
mov
and
lret
pop
fidivrl
test
push
cli
push
flds
test
jmp
test
pop
dec
je
sbb
inc
xor
aas
dec
out
pop
mov
jge
incl
lea
not
int
xchg
jo
call
sbb
and
das
scas
bound
scas
push
or
shlb
mov
fistpl
mov
mov
pop
imul
cmc
fstps
xchg
xor
adc
xor
lds
push
add
xor
xchg
lret
shlb
push
scas
lret
fwait
incb
inc
ret
xchg
mov
movsl
imul
fs
xchg
test
jmp
jno
push
movsl
subb
cmpl
stos
gs
into
bound
xor
mov
cmp
call
cmp
xchg
lods
aaa
or
add
lcall
jg
aaa
xchg
inc
push
sarl
cwtl
jbe
ret
ljmp
jl
pop
das
mov
xor
rcll
in
in
pop
and
pop
mov
lock
jp
in
incl
rol
jl
add
enter
cmp
push
mov
jnp
pop
mov
pop
push
sbb
in
mov
scas
sub
loop
jae
test
or
pop
in
push
mov
jb
mov
dec
sahf
out
mov
push
mov
out
sbb
push
xor
movntq
out
pop
and
dec
bound
cmp
add
jl
cs
cmpb
xchg
icebp
jo
jae
jle
push
out
popa
sbb
icebp
cmp
jne
and
mov
adc
adc
pop
jmp
aas
xor
jb
out
icebp
mov
add
es
jmp
imul
xor
les
nop
xchg
mov
out
popa
bound
sbb
shll
testl
pop
jecxz
pop
leave
xchg
movsb
test
ja
mov
adc
cli
arpl
sub
mov
negb
rcrb
add
mov
mov
inc
inc
xchg
jae
enter
or
addl
cmc
cmp
pop
lods
push
dec
ljmp
push
push
xor
push
fs
or
test
aam
mov
pop
bound
int
push
fcoml
fidivl
jg
xchg
xor
mov
test
mov
pop
test
shll
leave
inc
fldcw
inc
scas
imul
adc
push
je
das
pushf
ss
adcb
sbb
push
cwtl
inc
fstps
jmp
in
loope
jo
sbb
mov
test
sbb
dec
shlb
xchg
addb
and
pop
mov
lock
stos
jne
dec
stos
arpl
push
jl
ret
mov
mov
dec
icebp
push
dec
xchg
cmpsb
insb
test
lods
sbb
pop
mov
jbe
popa
pop
enter
cmp
mov
jl
jns
add
and
lret
xchg
adcb
rolb
sbb
imul
in
add
repnz
fcoml
xor
adcl
xor
sub
in
fcmovnb
aaa
adcl
inc
lock
test
movsb
xchg
dec
addr16
loop
shlb
add
inc
aad
push
sbb
xchg
xor
std
rcrb
jmp
insl
loopne
sbb
cltd
mov
movsb
mov
jg
inc
imul
fmull
add
test
xchg
mov
les
cmpsl
out
movaps
popa
sbb
fsubrs
add
popa
aam
mov
outsl
into
jp
push
lods
inc
sysenter
add
div
mov
in
test
push
pop
cmpsl
dec
sti
pop
sbb
add
repz
clc
xchg
xchg
adc
sbb
inc
and
or
aam
shrl
inc
pop
pop
pushf
in
out
xor
sub
mov
cmc
std
insb
shl
out
and
pop
hlt
shrb
mov
xlat
ja
sub
lock
sti
fsubs
out
add
mov
mov
pmullw
cmp
enter
mov
mov
pop
loop
sbb
mov
mov
dec
inc
push
jbe
sbb
adc
movsb
dec
cltd
dec
inc
test
fsubp
mov
mov
fldenv
movsb
mov
mov
mov
mov
outsl
test
mov
cmpsb
cmp
and
sbb
leave
fimull
or
cs
bound
lods
xor
ja
cli
les
dec
xchg
mov
xchg
inc
out
dec
push
dec
ja
mov
daa
sub
sub
sub
sub
lahf
jge
adc
shlb
shlb
mov
call
ret
mov
ret
dec
adc
xchg
mov
mov
cmpsl
sbb
mov
pop
pop
cmpsb
sarb
mov
out
and
adc
xor
jmp
test
jns
insl
add
imulb
xor
cmp
lahf
inc
aas
cld
dec
fdivl
or
mov
or
jae
push
mov
mov
cmp
sbb
mov
les
icebp
movsb
or
push
iret
std
and
cmp
and
push
stos
lea
push
shrl
cmp
push
cmp
cmpsl
push
in
sbb
stos
inc
mov
inc
call
push
data16
mov
sub
cmc
nop
mov
sarb
pusha
xchg
add
jno
test
fsubr
sbb
and
sbb
xchg
cmc
icebp
in
cwtl
cmp
add
xchg
dec
pop
mov
repz
mov
fwait
popa
fdivrs
popf
push
jne
imul
scas
pop
stos
sbb
jle
pop
imul
xor
fstps
sbb
stc
sub
sbb
ja
push
out
insb
mov
sub
sbb
leave
add
aas
mov
aad
cmp
push
pop
fsts
mov
test
jecxz
cmp
inc
popf
jb
xor
push
inc
sarl
and
xchg
ljmp
ret
and
gs
leave
jmp
hlt
popf
fisubrl
xor
or
loope
lods
jns
push
sub
pop
cmc
xor
sub
inc
adc
ss
mov
movsl
push
es
add
gs
adc
jge
scas
inc
nop
jo
fistl
incb
subb
ljmp
test
mov
movsl
icebp
repz
xor
cmp
lods
lds
sub
add
jle
jmp
mov
add
xchg
repz
mov
je
adc
add
add
call
mulb
push
mov
insb
xchg
xchg
push
mov
xchg
shll
daa
pop
push
ret
mov
pop
leave
sbb
mov
gs
dec
cmp
shr
jmp
sub
pusha
or
cmp
adc
adc
sbb
hlt
rcl
xchg
movsl
jae
nop
xchg
dec
dec
aaa
pop
cli
fldcw
jne
mov
mov
popf
mov
ljmp
arpl
in
fmul
jae
gs
xchg
cwtl
xor
jb
cmp
jp
add
pop
lods
mov
fisttpll
xchg
pop
je
and
mov
gs
and
push
test
das
pop
pop
mov
push
sub
inc
sbb
or
mov
in
mov
pop
aas
xchg
push
adc
movups
in
xchg
fwait
mov
fwait
scas
add
xor
inc
shrb
or
icebp
mov
int
je
lcall
icebp
ret
mov
pop
mov
cmpsl
pop
dec
xor
cwtl
and
xlat
sub
lods
sbb
loopne
mov
leave
xchg
push
rolb
arpl
jg
icebp
fmull
in
mov
lds
and
cmpl
das
lock
movsb
aas
or
icebp
mov
cli
xor
add
inc
sub
and
int3
sbb
jecxz
shlb
xchg
mov
sub
mov
daa
push
fistpl
ja
aam
popl
enter
pop
cmpsl
cwtl
mov
cmp
sbb
or
clc
testb
add
repnz
jmp
divb
in
cmp
push
std
mov
jg
sbb
out
mov
pushf
xor
and
jge
out
jae
gs
fiaddl
cmp
mov
rorb
fistl
aas
leave
cmp
lret
pop
sub
xchg
gs
cld
mov
lret
je
movsb
jp
loope
xor
xchg
mov
imul
rorb
mov
sub
xor
je
mov
addr16
jge
and
loope
cmp
dec
das
test
sbb
mov
pop
sub
lods
jbe
mov
lea
mov
pop
or
dec
mov
ret
cmc
sahf
add
jmp
faddp
mov
ficoms
imull
shl
add
mov
rcl
mov
push
push
mov
push
mov
push
insb
clc
mov
int
scas
mov
add
xchg
jecxz
jmp
sbbb
adc
aam
lods
jne
ret
sbb
fidivrl
call
mov
adc
push
dec
insl
cwtl
lret
mov
mov
icebp
adc
movsl
mov
negl
adc
mov
xor
stos
mov
out
jnp
ficompl
iret
divl
out
sub
ds
mov
scas
insb
mov
or
xchg
jne
outsl
push
pop
ror
xchg
outsb
mov
fcoms
cmc
adc
leave
lcall
dec
or
in
js
pushf
mov
lods
out
test
insb
out
jle
jno
pop
pop
jae
sbb
repnz
pop
aaa
aaa
cmp
lock
mov
and
adc
pop
orl
outsb
int
push
dec
cld
xor
xchg
pop
mov
dec
addl
push
mov
or
adc
mov
mov
sub
out
out
xor
or
rorb
ds
fdivrs
out
mov
jmp
shll
sahf
lahf
aas
fdiv
fsubl
adc
pop
dec
dec
adc
cs
jae
mov
or
add
jbe
dec
sbb
xor
mov
repz
add
outsb
mov
dec
dec
jnp
lret
push
jl
jnp
mov
ret
repz
setnp
mov
adc
je
inc
jnp
sar
ja
int
pop
sahf
push
subb
mov
mov
aaa
jmp
int3
mov
scas
and
aaa
xlat
fidivrl
jb
jle
leave
push
popf
rcrb
sbbb
ja
mov
or
and
pop
xor
idivl
scas
stos
add
mov
addb
data16
lret
mov
mov
lcall
mov
mov
add
push
cmp
jae
push
loop
in
fdivr
lret
inc
mov
or
lods
mov
xor
pop
adc
in
mov
lods
xchg
jg
xchg
sub
lea
sub
mov
fcoml
pop
pop
adc
adc
out
test
lahf
mov
int
scas
or
cmp
sub
add
arpl
stos
pop
and
inc
outsb
mov
fs
ss
xchg
in
sbb
inc
or
cltd
and
or
cmp
push
sub
inc
js
aad
out
lock
sub
lods
add
push
pusha
inc
mov
push
mov
mov
or
in
mov
inc
adc
into
icebp
out
lock
pop
cmpps
mov
xor
out
adc
repz
pop
pop
das
sub
fwait
lret
pop
cmc
push
mov
ret
xorb
xchg
dec
pop
dec
push
iret
ror
out
es
cltd
fidivl
jae
add
and
and
test
das
fsts
leave
sbb
cmp
sbb
mov
movsl
push
mov
imul
or
bound
xor
mov
mov
mov
xor
mov
mov
stc
sub
adc
add
sbb
pop
cli
mov
inc
lldt
popf
call
jmp
stos
cltd
test
adc
fisttpl
push
or
xchg
out
sub
mov
add
outsb
mov
mov
cmc
sub
ja
or
xchg
jl
pop
lock
lret
les
push
mov
fs
pop
and
js
push
cwtl
js
sbbl
in
jae
xor
dec
jecxz
ret
mov
adc
jl
add
stos
xor
repnz
dec
je
pop
addr16
sbb
fwait
xchg
mov
test
adc
push
jae
call
aas
mov
dec
cltd
loope
push
aaa
pop
into
bound
mov
lods
adc
fisubs
jmp
cltd
jno
jae
loopne
test
daa
add
sub
jl
xchg
rorb
mov
lahf
lcall
icebp
mov
add
insl
fistpl
lods
mov
lret
and
adc
mov
je
hlt
gs
fst
push
and
add
xchg
jecxz
and
add
inc
aas
add
pop
es
mov
inc
mov
imul
je
jae
sub
sbb
inc
and
xor
inc
arpl
movsb
xchg
or
or
ss
inc
xchg
add
adc
xor
or
faddl
icebp
mov
adc
ja
or
in
ja
sbb
lret
sub
push
sbb
add
fsub
or
lods
mov
mov
fdiv
sub
daa
mov
xchg
mov
outsl
lods
jge
add
adc
insl
push
jns
imul
scas
orl
les
mov
mov
mov
sbb
insl
lea
push
packsswb
sbb
xor
lods
out
js
lock
imul
push
rcr
dec
pop
push
and
pop
xchg
cld
andl
pop
sub
jge,pt
ja
mov
jae
lahf
sbb
sbb
in
shr
pop
mov
jecxz
les
mov
hlt
xchg
xchg
xchg
mov
test
push
repnz
in
push
xor
sub
arpl
fcomi
or
roll
loope
push
lret
push
ss
cli
mov
notl
int
iret
xor
or
ljmp
jg
add
fs
pusha
pop
insl
xchg
jae
add
loop
jp
mov
push
cmp
mov
add
and
nop
faddl
jns
popa
int3
dec
push
xor
and
jns
xchg
iret
and
jns
ja
pop
pop
push
or
jmp
add
add
pusha
mov
push
pop
mov
pop
pop
jecxz
push
xor
adc
fidivl
scas
mov
adc
push
and
lods
orl
mov
sahf
enter
jne
mov
pusha
fldl
mov
pop
pop
push
repz
jle
ret
shll
shl
xchg
jnp
sahf
jb
pop
jb
cli
fs
inc
and
or
les
push
movsb
pop
sbb
jns
int3
push
iret
jp
adc
fwait
aad
rcll
jmp
dec
push
loopne
stos
push
cs
push
test
jmp
jecxz
cwtl
inc
dec
adc
into
inc
dec
test
pop
icebp
fcmovb
roll
mov
pop
xchg
fnstsw
jecxz
jl
shll
pop
pop
popf
push
cmc
cmpsl
sub
enter
xor
push
iret
out
outsl
fcmovu
and
rcll
test
insb
add
xchg
or
pop
shll
lcall
sbb
cmp
lods
mov
cmp
jg
out
sarb
or
sbb
jmp
outsb
cltd
add
cld
or
mov
sub
sub
adc
mov
jge
pushf
lods
cmpl
sahf
imul
or
mov
dec
xor
cmp
push
and
pop
or
mov
dec
xchg
lahf
lcall
rorl
outsb
imul
es
fildl
into
or
jns
mov
mov
sbb
xchg
out
and
push
xor
imul
arpl
sub
lcall
stos
xor
push
fdivs
fmuls
cmp
nop
cli
out
js
add
in
jb
scas
or
xor
outsb
and
es
aam
sti
push
mov
mov
lock
jne
xor
push
xor
adc
mov
push
faddl
ret
jae
fbstp
adcl
or
js
lock
je
sub
adc
bound
out
mov
lahf
mov
scas
inc
mov
loopne
daa
adc
xchg
adc
lock
mov
mov
jno
push
xor
pop
or
hlt
fsub
and
dec
mov
fdiv
xchg
sub
jne
pop
jl
cs
sub
adc
dec
scas
outsl
scas
imul
mov
jns
dec
in
adc
pushf
mov
add
pop
inc
test
xor
mov
or
mov
add
lock
fs
pop
sbb
add
pop
cmc
jo
xor
sub
or
js
aas
adc
jg,pn
pop
lret
cs
mov
and
mov
mov
fadds
inc
add
mov
mov
nop
inc
out
je
int3
cmpsl
mov
orl
inc
rcrl
leave
movsw
arpl
cmp
xchg
enter
clc
mov
neg
lcall
pop
and
sub
jle
dec
int
jae
int
mov
addr16
push
addb
mov
test
popf
fcomp
xor
cmpsl
xchg
pop
insb
fcomps
dec
fsubrs
je
aaa
xor
and
mov
jmp
aad
cltd
jecxz
xchg
sbb
sti
lahf
cld
inc
xchg
mov
xchg
outsl
cs
insl
jle
les
lods
mov
adc
sub
stc
mov
movsl
sbb
cltd
movsb
xor
popa
or
in
adc
xlat
jno
outsb
mov
repz
xchg
inc
pop
mov
loope
and
or
lock
pop
dec
jmp
sbb
lea
fisttpll
aaa
stc
push
xchg
sahf
lcall
or
fadd
add
lock
jno
jge
push
add
xorb
xchg
pusha
shll
xchg
test
push
cmp
push
push
pop
ja
jmp
orb
sbb
push
mov
push
jl
ficomps
dec
mov
push
mov
mov
fldcw
add
cmc
loop
sbb
addr16
xor
push
cld
es
mov
jne
cmc
xor
popa
dec
cmc
or
sub
push
xchg
inc
push
addr16
mov
pop
dec
push
sub
dec
imul
add
xchg
mov
out
xchg
mov
mov
cmpsb
push
and
and
aas
outsb
sbb
cltd
fs
push
movsb
stc
jbe
pop
mov
out
push
adc
clc
inc
orb
fdivl
push
push
jb
jno
cwtl
adc
cmpl
lcall
lret
jl
test
or
call
ret
test
movsl
mov
pop
jg
outsl
call
mov
loopne
add
xor
or
cmpl
cmc
push
fcomps
aaa
push
bnd
add
imul
sub
and
sub
fsubs
je
jns
cs
and
call
pop
sbb
inc
or
loopw
scas
mov
add
xlat
jno
inc
test
cmp
shr
daa
sub
mov
jp
gs
clc
cmp
and
mov
mov
inc
inc
stc
insb
loope
shr
fcomp
adc
pop
ret
loop
dec
cli
xchg
xchg
loope
mov
adc
enter
je
pop
fidivrs
pop
cmpsl
jl
ret
and
ds
fidivs
idivb
testb
addb
inc
sub
cmpsb
cmp
adc
add
adc
cmp
cmp
push
test
xor
pop
inc
push
mov
mov
adc
pop
dec
add
aad
pusha
pop
mov
insl
pop
test
push
lods
fpatan
bound
sbb
repz
sbb
icebp
pusha
stos
inc
jecxz
mov
cmpsl
inc
sub
ljmp
gs
cmp
or
pop
push
insl
sub
test
adc
cmc
ljmp
test
lea
lods
clc
fbstp
in
and
movsb
stos
adc
iret
pop
stos
cmpsl
add
inc
add
das
sarl
enter
mov
popa
mov
dec
outsl
loop
outsl
or
test
lods
cmp
mov
cmp
out
pop
fnstenv
and
sub
lea
jecxz
mov
adc
in
sbb
cmp
lcall
movsl
push
mov
pop
cmp
imul
add
in
adc
cmc
push
add
pop
cwtl
pop
das
inc
push
enter
jbe
movsb
int3
dec
inc
adc
insb
ljmp
scas
ljmp
std
cmpsl
cld
sbb
das
inc
pop
stc
xor
cmpsl
popl
pop
out
fwait
jg
lcall
xchg
inc
fildl
sub
mov
adc
adcb
ljmp
mov
mov
fldt
lds
xchg
cli
lds
mov
test
popa
ret
mov
mov
in
and
inc
jl
push
mov
leave
es
dec
das
pop
cmpsb
rol
pop
outsl
adc
jecxz
in
out
xchg
test
and
mov
cmp
ror
push
mov
mov
pop
pushf
push
sub
jl
xchg
jmp
adc
add
and
xchg
mov
pushf
addr16
inc
pop
sub
clc
sbb
mov
mov
ret
adc
int
mov
mov
mov
movb
and
xor
and
inc
dec
xchg
mov
mov
idivl
cmp
jl
jp
insl
mov
xchg
pop
loopne
mov
push
mov
rclb
add
add
sub
push
lret
cmp
fsubl
push
pop
pop
iret
mov
jp
sub
mov
and
jae
repnz
inc
inc
bound
in
ficoms
aas
xchg
lahf
movsl
jae
fwait
js
xlat
leave
adc
or
add
jp
pop
mov
loopne
add
movsb
xor
pop
sbb
out
das
dec
frstor
add
mov
lret
mov
sub
sub
mov
xor
loop
xchg
mov
lea
imul
lret
test
adc
ret
mov
inc
test
xor
rcr
pop
mov
popf
imul
sar
or
lods
sbb
scas
push
mov
push
cmc
test
daa
xlat
inc
add
cli
insb
adc
divb
or
lock
repnz
aaa
push
jg
sub
xchg
or
outsl
xchg
outsb
hlt
xchg
sub
adc
pop
cmp
cmpsb
lock
xchg
mov
pop
jae
mov
mov
sbb
mov
push
dec
sub
outsl
cli
out
pusha
jbe
inc
pop
push
cmpsb
stc
cmp
lock
xorl
repz
shr
push
xchg
and
repz
cltd
mov
mov
or
jp
xchg
jecxz
mov
sbb
xchg
dec
lcall
movhps
gs
leave
cmp
push
pushf
mov
inc
ss
sub
cmp
shrl
jb
imulb
pop
inc
dec
jge
lock
pop
clc
mov
jmp
imul
call
push
movsl
cli
std
int
jmp
shlb
fdivl
sub
xchg
push
ljmp
pop
arpl
cltd
sbb
mov
pop
push
jns
call
xchg
push
mov
cli
mov
inc
add
pop
lret
mov
into
je,pt
xchg
fisttpll
cmp
adcl
xchg
sub
mov
and
mov
gs
pop
add
sub
aam
pop
outsb
mov
aad
sub
les
mov
dec
inc
jb,pt
popf
mov
fldenv
and
enter
mov
sbb
inc
mov
hlt
mov
lods
mov
mov
test
stos
aaa
add
mov
xor
sub
mov
fdivr
das
pop
jns
jle
xorb
lods
and
mov
mov
push
inc
xchg
add
sbb
push
push
leave
cmp
xchg
adc
outsb
fidivs
xchg
sahf
das
add
add
stos
ljmp
xor
xchg
jle
movsb
dec
jle
aaa
js
sub
in
inc
aas
imull
sbb
loop
loope
lock
cmp
xchg
cmovns
ds
xor
mov
cmp
mov
jbe
sub
xchg
and
popf
das
iret
cmpsb
jmp
mov
mov
int
jge
jnp
gs
xor
loopne
or
mov
arpl
mov
ret
xchg
push
nop
push
pop
jb
addl
js
pop
mov
jns
xchg
xor
xor
stos
inc
sbb
mov
cmp
push
pop
sahf
cmp
inc
inc
cmpsl
jg
mov
cmpsb
adc
data16
mov
bound
aad
cmp
fimuls
and
xor
xor
aas
push
push
fwait
aaa
dec
mov
movsb
ret
push
sub
push
idiv
and
negb
ret
mov
mulb
cwtl
mov
push
push
inc
sbb
js
lods
mov
pop
popa
shrb
lahf
std
xchg
cmp
mov
daa
push
or
dec
hlt
jle
fwait
xchg
scas
fsubs
inc
or
aad
xchg
push
mov
mov
mov
inc
rcrl
mov
push
fs
and
mov
mov
popf
and
icebp
inc
sub
xchg
mov
fistps
sbb
pop
movb
mov
icebp
aaa
push
xor
adc
cwtl
jecxz
xchg
ljmp
adc
xor
ja
xchg
mov
sbb
sbb
mov
push
pop
mov
cli
xchg
call
cmp
dec
inc
iret
xchg
cmpb
push
cli
mov
ret
cmp
into
cld
jl
add
or
mov
and
data16
push
mov
mov
imulb
xchg
inc
fdivrl
bound
mov
movsl
dec
pop
adc
xor
xchg
pop
sub
mov
mov
fiadds
and
mov
fwait
adc
pop
icebp
inc
inc
lods
fimull
mov
loopne
cmp
mov
and
pushf
pop
adc
aad
and
jp
sub
dec
mov
dec
jle
and
jle
js
xor
fdivl
or
repz
stos
je
push
les
cltd
repz
out
push
mov
mov
xchg
shl
lock
xor
cmpsb
push
dec
leave
in
sbb
adc
jmp
lods
xchg
cmp
insl
sub
cs
fisttpll
data16
aad
dec
mov
in
jge
pop
xchg
lods
sub
test
jns
sub
dec
js
push
lea
push
imul
mov
xchg
pop
aas
enter
movsb
pop
fnstsw
or
sub
int3
aaa
add
add
sti
in
pop
pop
xchg
cmpsb
pop
sbb
div
dec
imul
ficoms
rorb
iret
push
push
cld
je
push
lods
ss
dec
movsl
insb
sub
xchg
mov
xchg
sarl
loope
mov
shl
dec
xor
lea
or
or
jl
pusha
sbb
inc
stos
inc
outsl
jl
lock
jae
xlat
rcrb
fucomip
out
fsubrl
pusha
stos
lahf
fimull
dec
mov
dec
push
jb
lret
sub
dec
pop
push
imul
adc
fisttpl
push
aam
out
test
int3
mov
cltd
pavgw
test
outsb
les
xor
push
xchg
pop
xor
enter
jns
inc
subl
subl
fists
pop
push
sbb
inc
push
mov
inc
and
and
jns
mov
sbb
cmp
jbe
mov
scas
hlt
in
push
outsb
add
bound
pop
jno
dec
xchg
addl
fmul
and
dec
jle,pt
es
jae
test
push
ds
dec
xor
sub
mov
push
outsl
aam
jg
add
sub
cwtl
xchg
jmp
scas
push
push
nop
sahf
ret
xor
jg
inc
mov
pop
rcrb
xchg
cmc
and
or
sub
cli
push
imul
cmp
idivb
das
loop
lea
leave
sub
cwtl
pop
xchg
mov
mov
lods
mov
ds
dec
dec
cmpl
aad
fwait
cli
fsub
out
int3
add
test
sbb
xor
ret
fstpt
xor
mov
dec
xor
push
icebp
push
subb
jo
cld
jge
orl
or
cmc
adc
mov
sub
sbb
jnp
iret
sbb
in
frstor
cs
popf
nop
add
imul
pop
push
sub
shlb
lret
test
or
fwait
ret
loop
test
imul
xchg
dec
pop
rolb
sti
aam
and
xor
inc
cli
inc
inc
push
xor
enter
mov
or
sarb
sbb
jge
xchg
jns
push
sbb
mov
push
aas
enter
add
das
outsl
lock
adc
jns
test
repz
addr16
mov
pop
dec
and
jp
cwtl
and
push
cmpsl
mov
mov
repnz
mov
in
pop
mov
pop
xor
push
stc
mov
repnz
jo
push
dec
sub
call
fwait
mov
aas
jmp
mov
cmpsb
sub
cmc
mov
lahf
jg
dec
pop
cmp
negb
adc
xchg
sbb
xchg
push
sub
stos
mov
mov
data16
xchg
gs
in
dec
dec
xchg
js
jg
push
mov
movsb
cmp
es
out
jmp
into
rcll
jns
addb
cld
push
xor
pop
jge
sbb
mov
cmp
sbb
enter
repnz
repnz
xchg
jnp
xchg
gs
lock
call
sbb
add
mov
lcall
rcll
clc
or
mov
mov
and
and
xor
dec
into
mov
sub
pop
ljmp
daa
cli
out
and
ss
in
lock
lahf
ret
popa
jg,pt
daa
mov
xchg
mov
aas
jnp
sti
xchg
pusha
sub
inc
or
or
xor
mov
xor
ja
inc
sbb
push
xchg
jge
inc
pop
pop
js
imul
outsl
pop
mov
out
addr16
out
les
cmp
sub
scas
ja
xor
jp
pop
add
jae
ljmp
test
cmp
pop
outsb
xor
popf
les
mov
mov
fwait
repnz
sbb
aas
shlb
jle
popa
push
inc
dec
frstor
cmp
bound
push
xchg
movsb
arpl
cltd
push
or
push
nop
dec
xor
xor
jge
add
cmpsb
das
dec
adc
iret
pop
add
xchg
scas
int3
add
mov
cmpsl
sbb
int
sarb
add
roll
cmp
sbb
xchg
fbld
jae
popa
int
push
fdivs
ret
mov
inc
scas
jmp
push
std
mov
mov
mov
mov
and
cmp
push
fwait
nop
imul
xlat
scas
test
mov
inc
outsl
push
movsbl
mov
nop
fsubr
std
mov
outsb
lcall
mov
and
movsl
rorl
jne
mov
imul
mov
je
cmp
test
in
mov
push
fcompl
sbb
push
mov
pushf
pushf
fnstsw
sub
sbb
add
fistl
imul
push
repz
neg
dec
mov
cmc
dec
mov
dec
xchg
insb
jo
mov
jb
lods
ds
gs
mov
jne
stos
xlat
fwait
xlat
mov
and
fldl
decb
pop
jae,pt
es
fcoms
cwtl
xorl
sub
mov
xchg
pop
push
mov
add
cmpsl
in
stos
xor
icebp
into
dec
lret
mov
lods
pop
jno
pop
mov
cmpb
dec
mov
mov
pop
pop
or
lods
and
pop
lret
mov
fst
dec
sub
bound
jg
lds
xor
fcompl
or
and
clc
hlt
and
cld
test
cld
lret
rcrl
sbb
ds
mov
or
scas
repz
pushl
stos
mov
push
sub
outsb
fdivrs
xchg
loope
nop
shrb
aaa
lods
xchg
out
xchg
push
stos
add
out
test
ja
in
xchg
mov
dec
fadds
adc
sbb
int3
jmp
sub
sub
jbe
dec
int
push
pop
ljmp
mov
ds
pusha
jle
mov
mov
cmp
mov
inc
loop
mov
xor
fsts
repz
loope
test
add
adc
jecxz
lods
lret
lds
iret
push
ljmp
xor
pop
adcl
pop
lret
jp
jo
fdivr
cwtl
xor
adc
jnp
aam
adc
mov
inc
das
adc
mov
push
dec
lods
pop
sub
fs
sub
mov
and
popa
or
inc
jbe
pop
ljmp
insl
and
sub
imul
inc
insl
test
in
cli
jae
pop
aaa
xor
jns
adc
js
out
inc
pop
pop
xchg
add
call
insl
bound
insl
and
outsb
fsubrl
insb
pop
adc
bound
dec
jmp
div
xor
mov
ror
pusha
pushw
pop
push
in
idiv
dec
jg
negl
in
sub
pusha
imul
lea
jle
sub
jmp
mov
cmpsl
int
aam
dec
sub
repz
sahf
dec
mov
mov
sti
xchg
fnsave
inc
cmp
cmpsl
add
aad
clc
push
loope
aas
dec
jp
and
inc
and
cld
imul
push
sbb
fnstenv
les
mov
fidivrs
add
push
stc
rcrb
mov
lret
cmp
loop
mov
js
inc
jle
seta
fs
cltd
xchg
or
call
add
movsb
and
flds
bound
push
mov
inc
or
xchg
cmp
pusha
into
fcmovne
sbb
fidivl
int3
mov
mov
sbb
cmp
xchg
and
mov
or
push
dec
sbb
ds
mov
push
sbb
adc
mov
inc
push
scas
xor
stc
mov
out
and
jg
and
xchg
jecxz
or
jmp
mov
jbe
or
jle
mov
pop
test
pop
lock
les
push
imul
test
imull
sbb
or
inc
jp
and
mov
add
pusha
push
stos
mov
or
jb
push
out
add
mov
movl
rcll
sbb
xlat
fdivrs
mov
push
jecxz
fucomp
push
mov
call
mov
sbb
int
dec
ja
ds
sub
fcmovbe
stos
lea
xchg
sti
iret
and
and
dec
push
lods
jp
mov
sbb
outsb
or
je
movsl
aaa
fs
xor
inc
addr16
daa
cltd
aas
push
cmp
jmp
jge
dec
mov
int
sub
in
mov
or
sti
in
out
test
add
fsubr
sahf
inc
addl
cmp
jns
test
jae
lea
nop
and
dec
pop
push
fdivrl
push
inc
sahf
mov
fcoms
add
cmp
pop
pop
adc
daa
jb
sahf
cmp
mov
std
testl
inc
push
pop
adc
sbb
ret
lock
xchg
xor
test
and
int3
and
and
inc
jae
xchg
jno
pop
cmc
jmp
es
jno
inc
cld
sub
push
stos
js
pop
scas
add
repnz
push
ss
and
addr16
xchg
and
aam
pop
pusha
jg
add
arpl
sbb
and
sub
mov
hlt
pop
cmpsb
sub
adc
pop
inc
sti
adc
out
inc
pop
mov
push
push
jmp
or
fstpt
loop
cmp
jle
ja
push
inc
je
pop
repnz
rep
push
mov
pop
pop
rclb
or
adc
ds
rorl
adc
fst
cmc
add
std
cmp
enter
loope
out
jnp
sbb
fsub
mov
mov
std
xlat
xor
test
popf
cmp
pusha
stos
mov
inc
mov
mov
xchg
mov
mov
daa
add
andb
test
or
push
popa
les
add
imul
std
sbb
pop
or
bound
push
icebp
jg
mov
sub
sbb
mov
push
mov
and
jecxz
movsb
mov
movsl
inc
inc
dec
jecxz
hlt
in
pop
mov
mov
js
inc
sbb
daa
push
shll
cmp
movsl
jge
xor
repz
in
lock
mov
jge
and
dec
and
gs
pop
xor
out
aam
pop
fimuls
inc
push
push
testl
mov
push
es
cli
mov
int
ds
das
mov
or
test
dec
sbb
mov
fists
fcoml
mov
stos
mov
cld
cmp
ljmp
addr16
add
inc
adc
fsubrp
gs
das
dec
jno
jae
xor
ror
inc
repz
ljmp
jp
push
and
jo
xor
bound
or
scas
loopne
xchg
pop
mov
mov
or
scas
and
sbb
sbb
pop
outsl
bnd
movsl
jbe
roll
fs
mov
sub
test
pop
mov
sahf
addb
cmpsl
test
xchg
mov
mov
outsb
jl
sub
xor
mov
ljmp
xor
dec
aaa
sub
push
movsb
jge
xor
sahf
pop
scas
push
push
mov
roll
ljmp
repnz
mov
push
hlt
sub
inc
push
in
or
popf
mov
inc
cli
cmp
sub
cwtl
ret
jle
and
pop
data16
jno
aad
adc
push
repnz
rolb
sbb
pop
in
gs
rcll
push
lds
lea
nop
rcl
es
js
rcll
dec
inc
xor
add
notl
out
sbb
stos
mov
push
arpl
lds
lock
imul
bound
scas
mov
jne
and
inc
xchg
lods
loope
adc
sub
dec
mulb
jae
and
hlt
aam
mov
mov
sub
jle
xchg
cmp
clc
mov
jns
stos
push
lret
repnz
mov
cld
test
js
in
jg
scas
rcll
popf
mov
ror
push
shlb
mov
out
mov
mov
mov
mov
bound
enter
mov
insb
lret
imul
mov
enter
pop
js
stc
je
cld
mov
movsb
frstor
pop
dec
push
cltd
inc
xchg
xor
or
adc
fisttpll
xor
rolb
lret
imul
cwtl
scas
cmp
insl
inc
aam
sbb
outsb
pop
into
xor
cmpsl
lahf
adc
pusha
mov
mov
pushf
stos
aaa
cltd
mov
loope
sub
lock
popa
ljmp
dec
lds
mov
dec
out
stc
cli
mov
adc
xchg
inc
punpckhdq
or
in
dec
repnz
dec
xor
xchg
push
jne
mov
cmp
sbb
push
into
add
in
pop
out
in
jl
ret
xchg
jg
or
iret
lock
add
dec
fisubs
jmp
sbbb
jmp
std
sub
sbb
hlt
jge
and
shll
out
mov
fwait
scas
fisttpll
fidivrs
xor
roll
or
lock
cs
dec
mov
xor
push
je
pop
push
negb
loopne
mov
roll
aas
jo
lods
sti
inc
mov
out
xor
out
xchg
pop
lods
sbb
inc
cwtl
clc
mov
pop
push
add
fidivs
inc
cltd
pop
cwtl
pushf
and
lds
fs
cmpsb
cltd
add
repnz
negl
cmp
mov
xor
xlat
lahf
inc
fbld
iret
mov
mov
mov
dec
gs
fcmovb
pop
ds
pop
test
out
scas
les
sub
wbinvd
pop
jl
jne
inc
add
push
jg
jno
sbb
xchg
dec
mov
cmpb
push
pop
in
in
aad
inc
scas
gs
or
shlb
imul
ja
jle
imul
loop
jns
js
mov
push
icebp
jno
ljmp
mov
jg
sti
ds
lds
test
fxch
add
cmpl
into
pop
popf
mov
mov
in
cmpsl
xchg
ss
cltd
das
stos
adc
jecxz
push
pop
sbb
lcall
push
cmp
or
mov
pop
jns
std
xchg
cmpsb
clc
fyl2x
pop
cmpsl
adc
int
cwtl
imul
jl
pop
xor
sub
mov
pop
jp
push
push
jnp
clc
ret
je
cld
sub
nop
outsl
and
push
mov
dec
push
and
cmp
dec
mov
nop
cmp
pop
push
outsl
pop
out
push
cs
test
cmpsl
aaa
ljmp
rorl
or
cmp
jmp
lods
mov
mov
roll
test
pop
sarb
mov
jb
push
mov
rcll
inc
es
ljmp
iret
clc
cmp
mov
subb
int
enter
leave
mov
sahf
lea
xchg
es
mov
inc
leave
test
mov
cld
addr16
pop
jg
adc
ret
inc
pop
xor
lret
test
nop
sub
int3
sub
iret
aaa
out
push
js
nop
xchg
movsb
cmc
lods
or
int
call
add
testl
popa
adc
pop
or
jno
pop
adc
sbb
fstp
dec
sbb
jl
jnp
out
pop
add
ljmp
fldcw
cmp
adc
ds
std
and
cmc
std
xlat
inc
test
xor
xchg
arpl
mov
push
imul
dec
pop
or
fiaddl
and
scas
popa
and
cmp
mov
rcrl
insl
inc
push
inc
gs
xor
add
aas
or
jnp
fldl
out
xor
sbb
loop
mov
loopne
and
jnp
pop
pop
and
or
jmp
sub
add
xor
pop
fst
into
in
jnp
jmp
jb
ficompl
lahf
cmpsl
ret
xchg
add
inc
fidivs
ret
adc
sar
insl
fs
or
shl
fucomi
ds
mov
sbb
push
adc
dec
daa
cmp
dec
jl
arpl
rorb
movsl
fadds
or
mov
cs
stc
or
dec
push
andb
addr16
mov
inc
fsubrs
adc
hlt
or
dec
push
xchg
lret
daa
xor
add
out
xor
cld
jne
dec
andb
dec
stos
in
pop
cltd
cmp
rorl
jno
adc
sub
pop
js
or
in
dec
adc
sbb
inc
xchg
push
and
popa
mov
push
scas
mov
in
sbb
push
sub
mov
adc
push
add
hlt
repz
add
inc
xorb
cwtl
sub
mov
sub
push
dec
push
lds
ret
aas
xchg
add
enter
mov
mov
add
lahf
jle
shlb
adc
es
xor
mov
or
cmpsl
and
repnz
sub
js
add
or
pushf
cmp
mov
xchg
adc
mov
lret
jns
clc
ja
ret
movsb
or
fists
adc
fmull
test
push
in
out
ffreep
jae
ljmp
out
dec
pop
in
push
jmp
jns
jmp
ljmp
or
push
ret
jmp
and
sbb
xor
inc
loope
mov
fcoms
or
jo
cs
xor
test
fs
pop
repz
xchg
aaa
jmp
pop
outsl
mov
outsb
jmp
fdivrs
pop
cltd
mov
ret
fidivrl
imul
ds
inc
sub
xchg
jns
icebp
cmp
imul
dec
and
fisttps
and
pop
dec
mov
add
mov
dec
dec
pop
cmc
insl
mov
ja
imul
mov
mov
insl
leave
mov
adc
pop
mov
cwtl
hlt
outsb
testl
xlat
and
push
dec
adc
loopne
cmpsl
and
leave
jge
into
push
xchg
xchg
pop
cmp
rclb
cwtl
pop
ret
pop
imul
jg
aam
into
leave
xor
sub
out
sbb
xchg
popa
dec
jge
and
jo
mov
adc
push
push
daa
adc
fwait
lds
jmp
mov
jg
stos
aam
pop
dec
sub
out
jp
stos
and
add
or
movsl
mov
or
popa
sub
xor
add
jecxz
fwait
add
jno
rorl
testb
lds
stos
scas
outsl
or
jae
mov
mov
ret
sub
jne
jp
and
nop
mov
in
sub
pop
add
push
xchg
mov
jg
outsb
and
mov
xchg
int
iret
jne
xchg
sarb
cmp
leave
es
rcrb
add
sbb
dec
scas
enter
sub
push
leave
mov
mov
fsubl
dec
pop
push
test
repz
mov
and
xor
sarb
fmuls
cmp
xor
lock
jae
dec
xlat
mov
xor
aad
fcmove
and
push
cmp
xchg
ds
loopne
lock
dec
fnstcw
mov
xchg
xor
jbe
mov
mov
and
sti
cmc
jmp
xor
add
cld
idivb
mov
outsl
push
test
test
lds
mov
hlt
sub
sbb
jo
xchg
sub
cmp
xchg
push
cmp
sbb
repz
push
jns
out
dec
rorl
lret
xchg
xchg
or
ficomps
adc
jno
fimuls
pop
cmp
inc
dec
mov
clc
push
xchg
repnz
adc
in
mov
cmp
mov
js
sub
dec
inc
std
ljmp
hlt
pop
push
jne
int3
aam
mov
fisttps
and
mov
jo
icebp
add
fidivrs
adc
inc
aaa
nop
adc
xchg
mov
xchg
mov
fmuls
pop
or
dec
out
xchg
call
pop
idivb
repnz
lahf
dec
repnz
mov
dec
sbb
movsl
push
jnp
and
cmp
mov
hlt
aas
shlb
aaa
push
inc
ds
cld
pop
mov
xor
cmp
cmp
gs
stos
dec
add
dec
repnz
jnp
iret
pop
cs
das
out
lock
das
js
sub
pushf
in
mov
mov
push
xor
shlb
arpl
pop
fnstsw
test
push
mov
xor
movsb
sbb
lcall
mov
andl
loopne
dec
mov
in
enter
shrl
push
dec
pushf
xor
mov
movsb
mov
je
pushf
push
cmp
movsb
sub
sub
push
mov
jnp
jo
push
dec
sbb
stos
mov
and
mov
lahf
fldl
dec
mov
sbb
mov
stos
mov
mov
dec
mov
dec
js
mov
adc
add
mov
mulb
call
sub
insl
inc
leave
dec
imul
int
xchg
xchg
xchg
pop
mov
push
mov
add
fldenv
subb
fildll
imul
adcb
ret
pop
in
fwait
ret
add
scas
iret
cltd
adc
xor
jnp
lock
ds
cwtl
mov
push
push
fstpl
mov
or
fbld
cmp
push
xor
mov
adc
popa
and
clc
shl
mov
sahf
xchg
push
es
std
dec
and
js
je
mov
mov
mov
mov
jmp
inc
sarl
jecxz
fildl
std
xchg
pop
xor
cli
jns
loopne
jge
int
dec
sub
enter
push
gs
cli
cmp
cmp
bound
cmp
dec
cwtl
mov
jecxz
xor
jecxz
lods
dec
stc
jge
inc
jb
cmpsb
pop
imul
dec
add
sbb
aas
pop
jb
mov
inc
mov
pop
aad
mov
hlt
rcl
pushf
jg
lret
sbb
enter
bound
and
orb
popa
cmpsl
cmp
aad
insl
mov
xchg
clc
inc
pop
pop
outsb
jg
pop
inc
ljmp
fnsave
lcall
mov
fstps
test
mov
sbb
les
sahf
push
and
pop
adc
enter
lret
in
sub
int
repnz
fistps
fs
xlat
xchg
or
or
xchg
mov
in
mov
sub
pop
outsl
cs
and
cmp
adc
cltd
add
pop
jae
pop
scas
push
dec
mov
push
js
add
push
fdiv
cmpsl
and
clc
mov
test
xchg
sub
adc
das
test
push
xchg
mov
cli
add
popf
test
repz
push
ret
lock
fidivs
mov
addr16
out
jns
push
mov
out
push
test
dec
std
inc
ds
or
into
push
test
cmp
add
sub
pusha
or
pop
sahf
jbe
jl
mov
aad
scas
dec
sub
scas
add
xor
pcmpeqd
cs
in
lret
rcrl
lea
call
jle
fwait
ss
nop
outsb
addr16
cmp
test
and
xor
out
xor
loopne
or
and
sbb
push
pop
addl
push
xor
nop
frstor
xor
adc
scas
cmp
mov
adc
jp
mov
sahf
dec
cmpsb
outsb
xchg
mov
bound
sub
lcall
jg
sbb
pop
mov
mov
jo
aad
lods
or
test
mov
or
mov
fisubrl
mov
ljmp
ror
push
mov
mov
mov
mov
iret
enter
xor
int3
daa
sub
cmc
mov
call
js
mov
cmp
dec
ret
xchg
test
sub
xor
xchg
xchg
rorb
rcr
inc
mov
pop
cmpsl
mov
out
adc
adc
stos
pop
popa
mov
sub
inc
push
fwait
jecxz
jecxz
int3
test
les
jne
xchg
mov
dec
sub
cli
push
push
jne
and
pop
sbb
inc
pushf
mov
pop
lret
call
mov
push
das
in
xlat
in
frndint
les
sarb
push
out
sbb
cmp
lret
addl
pop
lahf
push
add
cmp
mov
repnz
stos
movb
mov
dec
push
out
adc
jne
push
lods
sbb
jne,pt
xor
stc
in
xchg
adc
pop
mov
mov
mov
sbb
add
xchg
mulb
mov
or
mov
loop
sbb
repnz
mov
sub
lods
jmp
pop
xor
out
adc
pop
mov
in
push
adc
xchg
inc
popa
mov
sbb
mov
adc
fdivrl
in
jo
fiadds
sub
ljmp
jns
jge
or
jno
pop
testb
out
cmp
in
fadd
or
dec
xchg
dec
sti
or
leave
sub
icebp
pop
outsl
sub
in
and
jbe
sbb
cmp
jp
out
sbb
insl
and
jbe
lock
rclb
pushf
mov
in
dec
pop
fcmovb
dec
mov
cli
in
jle
mov
jne
scas
or
xor
or
mov
stos
lods
mov
jg
imul
pop
xlat
mov
xlat
sub
adc
mov
add
fwait
pop
or
pusha
test
dec
ds
fwait
inc
notl
mov
cmp
jmp
lcall
mov
push
push
jg
rcll
xor
outsl
push
rolb
fcomip
mov
xchg
pushf
push
mov
movsb
mov
push
shr
pop
adc
jb
push
dec
mov
sahf
cld
test
xchg
sub
sahf
scas
dec
movsb
or
fnstsw
fs
cltd
push
loope
ss
out
cld
mov
mov
inc
aas
ss
push
add
pusha
stos
outsb
xor
ret
xchg
mov
push
and
push
jnp
stc
es
repz
adc
push
pop
dec
ret
sub
es
fbstp
jo
cld
sub
mov
pop
lods
or
lret
mov
hlt
stc
out
mov
arpl
jmp
cmp
cmp
clc
mov
mov
mov
incl
shl
addb
ds
faddl
daa
add
lods
sub
xor
bound
and
dec
or
xchg
mov
pushf
ficompl
hlt
movsb
sbb
in
rorl
jnp
pop
mov
stos
daa
or
fdivs
or
mov
push
inc
in
nop
cmp
push
adc
jge
movsl
lahf
aam
dec
fcmovnb
jne
fwait
xor
cmp
das
mov
xchg
shl
sbbl
mov
popa
js
mov
pop
add
xchg
addb
sub
push
loopne
sbb
fdivs
mov
xchg
cmpsl
mov
int
popf
mov
cmp
sbb
in
or
xchg
ds
push
jne
cld
call
subl
pop
leave
dec
xchg
clc
sbb
jns
mov
call
sub
jb
jnp
pop
jb
mov
sti
dec
xlat
pop
jp
in
dec
cli
outsl
fwait
jle
ljmp
pop
push
mov
inc
cmp
jbe
jl
call
enter
push
out
pop
shll
lods
cs
pusha
imul
jno
mov
inc
out
fistl
and
and
lea
sub
adcl
mov
mov
and
mov
test
add
pop
mov
and
jb
add
mov
xor
mov
push
jnp
xchg
push
test
mov
dec
sbb
xchg
jecxz
int3
dec
cltd
pop
mov
aas
pop
jae
movd
push
mov
xlat
sub
jae
outsl
rcll
and
testl
fadds
inc
ds
call
jb
imul
inc
clc
pop
push
push
pop
add
loop
test
insb
xor
out
lahf
inc
pop
shlb
cmp
and
rcl
push
jmp
rorb
shrb
roll
addb
sbb
inc
test
or
and
mov
jbe
xor
xchg
fsubr
shl
mov
pop
std
lcall
lock
mov
out
pop
push
iret
ret
cmp
ja,pn
mov
pop
mov
adc
mov
test
jb
mull
pop
inc
lods
and
int3
cwtl
ja
fidivrl
mov
je
push
lods
aam
inc
dec
cmp
cmp
aam
cs
daa
cmp
test
sub
xchg
insl
push
aas
test
xor
ljmp
dec
mov
push
repnz
push
sub
xlat
mov
jg
popa
sbb
push
dec
dec
xor
outsl
insl
jb
sbb
scas
sti
ds
dec
lcall
sub
les
dec
mov
xchg
ror
xchg
push
mov
shlb
push
mov
pop
pop
fimull
inc
out
dec
repz
mov
xchg
cmpsb
dec
enter
cmpsl
loopne
jae
dec
out
mov
lret
cmp
adc
pop
lea
adc
adc
scas
popa
xor
jo
push
xchg
xor
pop
out
cmp
lret
mov
add
negb
aaa
aam
push
test
mov
or
test
lahf
faddl
fists
outsl
sbb
int3
push
inc
or
inc
xchg
dec
rorb
ret
pushf
bnd
xchg
add
out
test
jl
cmc
xorb
in
pusha
cmp
out
into
jp
fucomip
mov
mov
sub
xor
add
repz
les
fdivrl
or
mov
movsb
mov
pop
jecxz
fwait
mov
dec
gs
sub
inc
mov
das
cld
pushl
xchg
scas
dec
cmp
or
insb
xchg
xor
xchg
sub
pop
mov
jnp
push
mov
jg
pop
out
ds
aad
ret
pop
cmp
push
scas
push
cmp
imul
sub
add
jbe
adc
inc
pusha
push
mov
pop
sbb
lea
cli
cmp
push
jb
jnp
or
sbb
push
pop
stos
push
fwait
shl
and
jecxz
push
xchg
repz
add
mov
mov
ja
ljmp
and
add
jmp
leave
adc
add
inc
lcall
mov
xor
and
lods
cmc
xor
addr16
into
mov
fcompl
mov
lods
pop
mov
movsl
and
or
or
mov
faddp
mov
inc
add
je,pn
fsts
sbb
add
xor
pop
mov
pop
cmp
stos
mov
fwait
sbb
jmp
cli
mov
jae
sbb
dec
nop
das
pop
cmpsl
imul
out
mov
push
add
inc
cmp
loop
fwait
mov
pop
ret
stc
cmp
sub
push
add
fdiv
arpl
ret
cmc
call
jge
test
add
in
sbb
and
stos
sarl
jmp
shl
jae
push
mov
or
fcompl
push
sub
sub
stc
outsl
cwtl
pop
cld
inc
fwait
lea
stos
inc
leave
cmpsl
hlt
dec
rorl
sbb
hlt
xchg
or
xchg
scas
ss
inc
faddl
inc
ja
mov
ss
jno
push
push
arpl
jne
shll
mov
popl
cs
and
movsl
mov
imul
test
aad
add
jp
leave
xor
lahf
lods
jno
and
adc
addb
and
xor
mov
sbb
out
bound
je
addl
mov
sub
shll
sub
adc
insl
pop
mov
mov
xchg
mov
mov
fldt
xor
xchg
mov
rorb
mov
je
movsl
fwait
aaa
or
inc
rcrl
cli
sub
jo
sub
dec
dec
das
cmp
pop
push
adc
loopne
dec
out
xchg
dec
jmp
sbb
sbb
daa
inc
rorb
xor
xor
push
cli
sub
pop
orl
ljmp
mov
push
mov
lret
lods
arpl
in
inc
jae
outsb
and
pop
adc
mov
push
xor
xlat
adc
mov
sbb
xchg
not
xor
or
js
xchg
xlat
and
cltd
cmp
test
xchg
dec
xchg
mov
jns
sbbb
gs
cli
add
test
jle
imul
or
ror
pop
xchg
and
cmp
fcom
lret
cmpl
stos
add
fsubp
push
push
daa
jp
xchg
rcll
add
mov
iret
inc
inc
push
and
add
lods
cmp
push
adc
ja
lock
sbb
dec
mov
cli
and
mov
aas
or
push
roll
inc
push
imul
aad
enter
xchg
jg
mov
dec
sar
in
jp
stos
sub
mov
fiadds
or
sbb
cs
sub
stos
mov
or
dec
popa
pop
sub
test
sti
aad
add
cld
fdivrs
mov
lea
stos
pop
dec
mov
lea
outsb
dec
test
mov
popa
cmpsl
aad
or
fisttps
and
lcall
xchg
push
mov
cmpb
pop
xchg
stc
mov
hlt
mov
dec
push
aas
add
out
mov
add
push
mov
sbb
jp
inc
mov
mov
arpl
repz
mov
fcmovnb
jnp
mov
or
sbb
iret
mov
andl
xchg
cmpl
ss
sbb
dec
dec
jbe
mov
push
mov
test
cltd
lods
sub
push
popf
in
jb
inc
pop
loope
test
and
rorl
dec
andb
jmp
add
fisubrs
and
and
int
pop
push
je
and
pop
leave
ljmp
adc
mov
push
adc
pop
in
imul
or
shll
mov
inc
mov
loopne
push
scas
add
xchg
es
jmp
push
frstor
arpl
inc
imul
imul
push
addr16
and
ret
into
das
loopne
and
xor
sub
pushf
fnop
mov
xchg
xchg
add
xchg
push
mov
fisubl
je
js
jg
pop
daa
lods
stos
or
mov
addb
out
sub
int
stc
leave
or
add
mov
lahf
mov
int
dec
pop
out
outsb
or
dec
push
mov
mov
clc
dec
arpl
add
inc
insb
mov
xor
mov
mov
out
xor
das
mov
mov
arpl
lock
cmpsl
stos
ljmp
sbb
push
test
mov
iret
pop
dec
lods
cmp
mov
loop
hlt
jns
and
jp
inc
sti
xor
jne
jg
je
sbb
in
and
mov
inc
clc
mov
cld
aaa
sbb
and
xchg
test
sarl
test
notb
mov
sub
mov
push
dec
fsubs
pop
mov
aas
shlb
sub
mov
xchg
sarb
and
int
bound
add
dec
xchg
mov
dec
fwait
add
jnp
insb
push
mov
leave
loop
cmc
pop
lea
outsb
push
imul
shrl
mov
sbb
mov
cmp
sbb
mov
into
out
xchg
sbb
push
sub
cmovs
lea
in
fwait
mov
jne
jne
mov
repnz
les
test
enter
jp
inc
aas
ljmp
aad
mov
test
fcoml
xor
cmp
push
sbb
pushf
shll
pop
std
in
leave
inc
jb
and
sbb
jmp
cmp
cld
xchg
mov
xor
insl
mov
imul
push
xchg
sub
lds
mov
jp
cli
push
jle
cmpsl
and
out
xchg
ljmp
mov
mov
or
inc
testl
jmp
and
mov
sahf
mov
sbb
ret
xor
cli
cld
inc
or
pop
and
ss
mov
sub
inc
pop
sub
pushf
mov
out
cmp
cmovb
cwtl
adc
idivl
pop
cmp
lret
out
xchg
nop
cmc
mov
in
icebp
les
push
insl
adc
xor
and
pusha
in
dec
test
fcmovnu
leave
hlt
sahf
inc
sbb
lea
or
sub
mov
sarb
sarb
add
aad
test
in
adc
movsb
add
and
xchg
add
add
mov
cmp
lret
pop
pop
dec
fstl
push
ljmp
adc
mov
popf
ret
repnz
aaa
shr
adc
or
xchg
pop
mov
mov
or
mov
inc
dec
mov
movsl
aad
lahf
cmp
push
sahf
and
or
adc
xchg
mov
dec
js
or
das
mov
aas
fldcw
and
iret
ret
lods
mov
push
pop
hlt
je
int3
sub
mov
mov
mov
loop
shr
push
imul
aaa
fwait
test
jmp
xchg
shl
inc
lock
les
mul
mov
push
sbb
aas
imulb
inc
pop
mov
call
mov
sbb
stc
dec
push
add
ret
push
inc
cli
jo
cmpsl
sub
sbb
dec
gs
jp
sub
lahf
jae
popa
xchg
cmp
dec
sbb
jge
push
cmpb
in
push
xchg
push
cmp
or
and
xchg
jle
push
add
rcll
jb
test
add
sub
xor
adc
fndisi(8087
xchg
cs
xchg
je
xor
sub
aad
leave
or
xor
push
pop
cs
aad
push
loopne
mov
aaa
and
mov
mov
mov
fmuls
mov
cmp
std
shll
outsb
pushl
ds
or
inc
xchg
imul
bound
xchg
inc
and
sahf
push
push
adc
mov
movsl
xchg
xchg
dec
cmpsb
jp
adc
push
aas
cltd
sub
dec
ljmp
dec
jbe
mov
int
rcrl
xchg
cs
mov
jno
cld
or
jnp
push
shrl
jne
stos
pop
out
mull
inc
aaa
xchg
aas
shr
sbb
xor
js
flds
lds
cmp
imul
mov
fsub
stos
movsl
sbb
std
add
into
sbb
lods
fildll
lret
cmc
push
insl
xchg
dec
call
xchg
shrb
bound
fistps
pop
inc
int
inc
and
xor
shll
pop
fdivl
cmp
mov
data16
cmpsb
mov
and
stc
fstpl
fsubs
pop
jbe
or
jb
sbb
mov
or
lcall
mov
out
mov
jns
fldl
add
call
add
cld
mov
and
lea
pop
aam
jo
fldt
outsl
dec
stc
ret
jl
adc
das
adc
pop
push
mov
jne
mov
mov
cmp
std
jne
push
dec
movsl
or
and
inc
or
pusha
pop
mov
add
les
movsl
dec
repz
jo
pop
movsl
mov
jecxz
lds
sbb
push
mov
pop
icebp
lcall
and
aad
into
mov
movsl
dec
sub
cmp
push
dec
dec
scas
mov
rolb
fiadds
xchg
pusha
jg
cmp
jecxz
add
leave
adc
xor
imul
mov
mov
or
icebp
push
in
test
stos
xor
clc
push
je
push
push
push
jge
aad
lods
scas
int
test
jo
roll
es
lods
mov
dec
fidivs
mov
ficoml
daa
inc
xchg
sub
dec
dec
xchg
popf
aam
fistps
movsl
int
lods
sarb
mov
xlat
sub
sbb
cmp
push
popf
insl
sub
push
push
lea
jmp
popa
or
lcall
ret
jg
push
mov
lret
mov
sub
aad
insb
aas
xor
mov
jle
push
xchg
sbb
mov
fimuls
popa
in
ja
mov
pop
notl
popf
jp
or
mov
lods
imul
lods
sbbl
dec
mov
lret
jle
add
mov
add
xor
or
fldt
cmp
push
and
sub
mov
pop
xor
lret
mov
sbb
add
sbb
icebp
lock
xchg
iret
jmp
enter
add
js
nop
cmpsb
jp
adc
decl
lds
std
adc
add
ljmp
mov
dec
lds
fidivrs
adc
aad
pushw
xchg
pop
xchg
jle
jbe
fidivl
add
mov
xchg
sbb
and
test
and
xchg
jp
mov
sub
mov
out
js
xorb
test
js
in
icebp
lret
popf
call
mov
stos
pushf
xchg
xor
jecxz,pt
les
movsb
xorb
or
mov
sub
gs
pushl
push
mov
mov
roll
xchg
cwtl
int
int3
xor
sub
inc
push
sub
idivl
pop
cld
xchg
cmp
rcl
jbe
ds
push
rorb
mov
leave
xchg
ds
or
js
xor
mov
mov
mov
fbstp
ret
iret
mov
and
lcall
add
lea
insb
jg
xor
jb
test
fdivrl
stos
xchg
add
adcl
pop
loope
jle
or
or
mov
adc
enter
fildll
sub
jbe
ljmp
mov
or
mov
iret
or
push
jnp
or
xchg
xlat
dec
into
bound
pop
insb
xchg
aam
ds
mov
inc
lea
iret
fstpt
inc
lret
push
stos
pop
fldcw
daa
cld
ret
inc
xor
setle
nop
pop
inc
insb
cmp
cmc
scas
xor
add
les
repnz
fmul
clc
mov
jb
lret
sub
aam
mov
repz
test
xchg
mov
xor
imul
or
stc
sub
add
inc
pop
pusha
mov
fsubr
orb
loope
mov
add
xchg
inc
push
insb
mov
xchg
popa
out
mov
insl
pop
adc
stc
mov
xchg
dec
push
sub
mov
pop
jo
mov
out
dec
pop
mov
stos
or
stc
mov
rorl
cmp
jbe
test
je
idivb
jg
js
xchg
arpl
mov
insb
push
add
sub
mov
jnp
xchg
cltd
mov
fimull
mov
push
xchg
add
add
roll
and
and
mov
mov
push
push
hlt
xor
rcrb
aas
mov
and
sub
mov
mov
mov
leave
xchg
cld
sbb
mov
mov
sub
lahf
repnz
out
push
pop
addr16
mov
add
repnz
sub
lods
jb
out
mov
jmp
bnd
mov
inc
lcall
and
cmp
add
push
xchg
adc
mov
push
mov
and
mov
mov
fnstsw
sbb
lds
pusha
es
inc
pop
in
pop
cltd
ja
shr
sub
push
cmp
rolb
hlt
mov
hlt
dec
cmp
faddl
mov
into
push
xor
inc
sbb
jns
jb
sbb
lds
mov
or
pop
shl
jmp
jmp
mov
and
inc
and
xor
adc
ljmp
popf
ss
and
pop
push
jns
scas
mov
icebp
repz
test
xor
cmp
mov
push
jp
scas
mov
jne
shlb
cmp
and
in
insb
ret
jmp
flds
inc
out
add
push
fsub
aas
icebp
push
jnp
in
call
iret
inc
out
push
fsubrs
adc
scas
out
sti
cmp
ja
or
in
sahf
jbe
dec
call
mov
xlat
imul
xchg
xor
push
or
ljmp
or
pop
cmp
add
mov
xor
mov
js
aam
inc
jno
js
jns
fstpt
out
cmpsl
mull
mov
and
ja
jno
mov
dec
fs
mov
outsb
rolb
in
pusha
aas
adc
mov
cmp
gs
sbb
andl
inc
or
hlt
lcall
fistpll
mov
cltd
jnp
pop
iret
lods
in
repz
mov
jb
add
aaa
push
loopne
inc
xor
add
xchg
inc
add
xchg
sbb
xlat
cmc
insl
mov
and
mov
inc
sbb
mov
js
cli
loop
sbb
push
mov
ret
push
mov
data16
std
mov
inc
cld
jecxz
fstpl
sbb
stos
mov
inc
out
sbbl
add
idivl
cmp
add
les
cmc
lahf
sub
mov
mov
jbe
jl
pop
subl
jl
int
ljmp
jp
sbb
ret
jbe
mov
mov
mov
adc
fld
or
push
inc
clc
and
push
aaa
pop
jne
in
inc
loope
inc
sbb
cmp
mov
fwait
leave
scas
int
or
in
movsl
lahf
mov
xchg
mov
or
adc
jge
push
mov
repz
and
inc
cmp
iret
add
add
clc
mov
addps
add
or
xchg
out
movsl
nop
shll
cmc
inc
pop
test
out
stc
nop
test
mov
cmp
cmp
dec
mov
and
std
cmp
or
scas
push
cmp
cmp
iret
adc
jmp
xchg
lret
and
xor
jp
adc
bound
jne
addr16
mov
and
ret
pop
stos
cmp
fs
add
pop
lret
imulb
xchg
jp
or
sub
mov
sbb
pop
filds
xchg
pop
sub
dec
shlb
add
xorb
sub
or
leave
inc
hlt
adc
cwtl
test
call
push
or
fistl
push
mov
adcl
cmpsb
loop
inc
pop
test
insb
xchg
mov
xchg
outsl
mov
fwait
insl
push
mov
negl
pop
das
in
out
lods
mov
xchg
mov
sbb
dec
addb
sub
and
inc
mov
sbb
std
sbb
fcmovne
dec
jbe
jle
ja
jg
sub
jg
push
push
loopne
push
pusha
insl
mov
adc
jns
push
sub
ss
mov
fsubrs
mov
stc
in
rol
mov
sbb
mov
shrb
push
jb
jecxz
sbb
pop
dec
mov
imul
shll
sbb
cmp
sbb
arpl
mov
decb
loope
sbb
jmp
ret
xor
stos
xor
adc
divl
add
push
movsb
lods
imul
cmp
pop
sbb
sub
dec
out
leave
or
add
in
cmp
jo
dec
fsubp
and
ficoms
push
or
mov
sub
hlt
mov
fs
arpl
outsl
jns
pushf
add
in
pop
dec
xchg
xor
push
adc
xlat
outsl
push
xchg
pusha
cmpb
cmp
shl
sbb
pusha
jg
push
fcmovb
jg
inc
and
aad
pop
mov
in
fcoms
out
icebp
nop
sub
sbb
roll
addb
lods
fldt
jecxz
cs
cmp
lret
test
adc
in
sub
cmpsl
adc
or
repz
fstps
pop
lret
aad
inc
mov
bound
pop
test
ljmp
and
data16
inc
scas
daa
imul
cmpsb
int3
icebp
out
dec
cmp
add
add
mov
push
orb
xchg
hlt
outsl
clc
xor
int3
mov
dec
shl
push
add
jmp
loope
lea
lods
sbb
mov
imulb
stc
mov
fdivrs
jbe
or
pushf
shll
and
adc
rol
or
repz
jmp
mov
lahf
push
insl
rcr
test
cld
jl
repnz
push
out
and
icebp
dec
scas
cmc
stos
loopne
test
or
pop
scas
pop
test
insl
jno
stos
sahf
and
inc
subl
sbb
leave
jge
dec
sbb
jmp
xor
mov
rorb
test
pop
stos
dec
lahf
notb
lret
xchg
pop
xchg
xchg
lret
ljmp
pop
dec
push
mov
xchg
aas
cmp
daa
ret
das
pop
cmp
sub
sub
mov
push
adc
mov
push
pusha
mov
pop
add
add
xor
mov
dec
out
sbb
push
clc
sbb
pop
loop
out
adc
mov
pop
dec
cwtl
addr16
or
mov
sub
ret
movsl
and
addr16
or
push
mov
xchg
mov
scas
jecxz,pn
cmc
mov
mov
scas
daa
add
lods
gs
icebp
push
mov
insl
out
adc
in
xor
outsl
insb
jo
shrb
pop
fadd
push
cmp
out
call
push
daa
clc
jb
enter
xchg
cmp
fists
or
arpl
mov
rol
inc
mov
mov
inc
add
push
das
in
outsl
js
rcr
es
ret
or
inc
dec
adc
xor
xor
mov
mov
mov
sti
and
xor
jl
add
mov
setl
add
lcall
sarb
push
or
xor
mov
dec
sbb
ss
jmp
push
mov
sbb
adc
sbb
sahf
or
iret
fwait
into
ja
mov
out
test
add
scas
daa
shll
or
xchg
push
mov
ja
ss
aam
mov
dec
jl
notl
mov
scas
jne
clc
into
sub
lock
inc
xor
sbb
inc
adc
and
test
mov
lcall
jp
int
nop
xchg
lcall
mov
and
mov
push
mov
cmp
out
and
inc
int3
rclb
xlat
je
rcll
cwtl
cmp
leave
pop
and
xchg
xchg
les
test
insb
cmp
push
inc
push
push
scas
stos
add
sbb
push
lds
xchg
push
mov
fidivrs
push
jb
mov
add
and
mov
int
push
mov
stos
pop
mov
insb
and
nop
orb
add
mov
mov
dec
mov
ss
mov
cmp
mov
sub
mov
push
cmp
loop
adc
fcoml
out
dec
pop
stos
imul
clc
jmp
icebp
jecxz
call
inc
hlt
mov
inc
test
or
xor
pop
inc
xor
pop
xor
mov
call
addb
pop
mov
inc
fisubrs
mov
in
mov
ret
imul
cmpsb
sbb
push
jl
ret
pop
arpl
and
inc
fidivs
lods
sti
add
mov
ljmp
push
mov
out
iret
cs
rcrb
lds
or
mov
xor
adc
sbb
int
insb
clc
clc
push
mov
push
test
jmp
push
das
sarl
adc
mov
mov
add
sar
inc
mov
xlat
loopew
fdiv
jl
int3
xchg
sub
ljmp
das
pop
push
mov
clc
mov
mov
mov
daa
int3
xchg
sahf
les
movsb
mov
clc
inc
jno
addr16
inc
fwait
push
sbbl
pause
xchg
int3
jo
xchg
out
xchg
lcall
jecxz
andb
popf
js
jle
arpl
std
push
mov
out
pop
push
push
or
and
fmull
filds
dec
add
mov
movsb
lret
or
loop
jmp
mov
addl
dec
lock
inc
and
xor
sub
vpsubq
stc
xor
dec
push
xor
inc
push
cwtl
pop
mov
mov
push
inc
cltd
fiaddl
ds
dec
mov
xorl
adcb
inc
and
int3
mov
lods
xor
aaa
sub
pop
mov
inc
sbb
test
arpl
and
pop
aas
lods
movsb
pop
sub
neg
dec
and
or
mov
adc
jle
mov
inc
sub
jns
jge
jno
pushf
ja
loopne
iret
xchg
xor
call
jle
nop
ret
pop
xorl
in
push
punpckhbw
xchg
outsl
test
ret
cmp
mov
add
gs
sbb
xor
je,pt
adc
inc
arpl
adc
js
sub
repnz
aad
push
mov
cmp
je
in
fldenv
mov
inc
fwait
popf
sub
into
mov
or
insl
rolb
ss
outsb
xchg
sub
xlat
sbb
jle
test
add
outsl
outsb
das
jne
iret
stos
lcall
jns
jecxz
mov
adc
pop
scas
insb
test
or
js
les
stos
mov
data16
lds
decb
jmp
shlb
aas
fdivrs
insl
push
out
pop
push
test
add
jnp
std
or
push
push
jns
rclb
adc
push
and
fcom
push
fs
xor
std
add
jbe
sbb
lcall
insb
push
push
insb
or
jnp
mov
push
sub
js,pn
aas
add
xor
mov
fstpl
push
sub
mov
xchg
fldl
and
mov
sti
ret
push
add
push
mov
mov
and
push
ds
ljmp
xor
jl,pt
jl
ror
lcall
and
xchg
push
loop
pop
out
fisubrl
ret
int
adc
mov
sub
sub
jge
push
ret
push
insb
push
ljmp
mov
add
and
jmp
push
fildll
and
xchg
aas
mov
data16
loop
mov
stos
icebp
fildll
sbb
inc
ficoms
pop
add
rolb
push
rol
pop
loop
jmp
dec
mov
inc
xchg
mov
or
pop
sbbl
push
push
scas
xor
dec
cmpsb
shll
sbb
push
inc
stos
xchg
xchg
dec
jae
add
lods
xorl
mov
mov
mov
call
or
test
cwtl
mov
mov
and
sbb
subl
xchg
in
push
push
mov
or
out
out
scas
push
les
in
push
aam
push
lret
fistl
pop
leave
ja
mov
dec
repz
dec
enter
or
lret
mov
add
and
ja
dec
cmp
xor
mov
rcr
adc
pop
idivb
lret
inc
dec
dec
sub
jb
and
rolb
dec
pop
mov
cmp
lods
insl
out
xchg
stc
nop
xchg
push
ds
int3
and
xchg
aad
pop
inc
inc
popf
leave
jg
bound
add
cmpsb
push
repnz
fsubs
roll
mov
and
inc
pop
and
out
dec
lea
fidivl
jmp
or
push
jbe
inc
mov
data16
pop
adc
fwait
adc
repnz
sahf
xchg
jnp
push
mov
les
add
and
xor
out
push
push
mov
pop
lret
bound
sub
push
jg
jmp
scas
ret
lret
cmp
add
pop
sbb
cmpsb
mov
dec
fistps
out
jae
dec
loopne
dec
jns
fdivr
aaa
sbb
xchg
jg
jecxz
adc
ljmp
inc
xchg
dec
adc
and
sub
loopne
adc
iret
mov
fidivl
push
fisttpll
or
add
xchg
cmpsl
fsubs
jno
dec
fs
scas
enter
jae
push
dec
mov
cmp
cwtl
les
and
movsl
jl
fs
push
or
sub
xchg
xchg
enter
dec
int
or
fmull
jae
sarl
add
dec
aam
add
fwait
imul
mov
pushf
aaa
or
popf
mov
imul
sbb
xchg
mov
aas
movsb
shlb
fs
or
or
rcrl
lods
jl
js
dec
add
repz
and
cmc
popa
pop
push
adc
test
mov
add
mov
mov
push
es
popa
in
adc
push
fbstp
inc
ja
jo
jmp
xor
sub
mov
fistps
push
push
mov
mov
rcll
loop
xchg
xchg
mov
sbb
pop
inc
das
xor
jge
lea
xchg
add
mov
mov
sbb
mov
repnz
loope
pop
stc
mov
dec
xchg
cmp
sbb
ss
out
out
or
push
lret
pop
imul
sbb
das
icebp
inc
roll
movsb
mov
icebp
dec
shrl
and
push
push
mov
ds
test
insl
outsb
outsb
addl
xchg
push
xchg
popa
inc
mov
cwtl
cli
out
jb
mov
push
xor
js
xor
test
mov
dec
insl
and
push
mov
clc
inc
mov
or
xchg
pop
call
cli
jno
fisttpll
mov
jecxz
and
lahf
jns
lods
js
flds
xchg
aas
sbb
test
cmp
repz
testb
push
push
mov
iret
stos
mov
hlt
pop
lcall
les
loopne
lcall
mov
push
cmp
dec
ja
arpl
fnstcw
dec
mov
aas
ja
mov
lret
xchg
or
stos
fadd
xchg
gs
addr16
loope
pop
call
jmp
lret
ljmp
dec
rcrl
std
js
fs
cmp
jno
dec
out
jle
test
sbb
jecxz
jmp
sarl
test
cmp
je
lahf
inc
test
ja
push
cltd
dec
wrmsr
mov
popa
adc
pop
imul
in
dec
fiaddl
inc
jge
pushf
mov
lcall
mov
sbb
and
cmc
xchg
xchg
cmp
or
out
xchg
divl
out
pop
in
xor
adc
ja
data16
push
mov
pop
cltd
loope
sbb
jno
stos
jne
push
cmp
icebp
and
in
stos
pop
sub
or
sub
sbb
mov
cmpsb
mov
or
insb
outsb
mov
mov
push
loope
jo
or
inc
into
xlat
push
and
sti
pop
test
shlb
enter
xor
imul
test
or
push
aas
push
dec
test
mov
and
in
sbb
xchg
push
adc
mov
inc
jns
pop
cs
push
or
nop
mov
mov
outsl
lret
push
pop
stc
inc
sub
lret
mov
pusha
lods
aaa
mov
sub
rclb
adc
mov
dec
out
cmc
mov
jae
sbb
aaa
adc
shrl
loopne
xor
mov
sbb
lahf
or
mov
sbb
js
cwtl
mov
out
mov
insb
fnsave
cmp
inc
lret
add
jb
sar
in
dec
dec
lock
push
xor
repz
pop
ret
rorl
js
pop
pop
pop
rorl
sbb
into
jmp
arpl
xchg
lea
pop
sub
popa
ds
push
push
mov
rorb
adc
push
shr
or
sbbl
jnp
adc
xchg
sub
dec
test
js
inc
and
insb
xchg
pusha
xchg
jg
pop
int3
sub
popf
ja
movsb
scas
jne
rcrb
or
and
fdivl
inc
jecxz
push
mov
adc
mov
adc
leave
shl
mov
pop
cwtl
gs
xchg
clc
and
or
sub
push
aas
mov
push
jl,pn
jmp
inc
lea
cli
push
push
test
shrb
dec
stos
ds
sbb
cmp
xchg
xchg
mov
sbbb
pop
ret
xlat
ret
popf
lret
imul
mov
js
fucom
hlt
cmp
cs
pslld
mov
xor
cmp
mov
push
pusha
inc
push
or
pop
fcmovu
xlat
sbb
push
repnz
dec
fmull
cmp
adc
sbb
add
faddp
mov
in
clc
cmp
mov
or
inc
mov
shll
hlt
sub
jl
xchg
cmp
ret
dec
repnz
mov
lret
jge
movsb
lea
fbld
stos
popf
xchg
xchg
insl
inc
push
shll
fldcw
iret
dec
push
je
mov
pop
enter
in
xchg
dec
push
mov
mov
sub
je
popa
shl
ret
cmp
cvtdq2ps
retw
gs
and
sub
xchg
into
lea
daa
fidivrs
pop
and
or
cli
sti
enter
push
cmp
and
gs
inc
into
sub
pop
adc
inc
and
and
mov
jg
sub
or
cmpsb
dec
mov
adc
pop
es
mov
leave
mov
ja
sbb
cli
xor
and
sbb
xlat
imul
sub
mov
jnp
mov
cmp
inc
ja
fcomip
pop
push
pushf
adc
imul
sti
out
je
aaa
ss
mov
sub
fmul
stos
mov
dec
mov
aad
push
test
es
sbb
and
fldcw
mov
or
lahf
in
arpl
push
xchg
hlt
mov
sub
dec
fmuls
pop
sub
lret
sbb
aaa
dec
xchg
int3
int3
pop
xor
pop
add
mov
imull
and
gs
pushf
rcrl
dec
out
test
sbb
lods
lock
push
jg
cmp
add
dec
sbb
push
mov
paddsb
or
adc
cwtl
shll
sub
xchg
dec
iret
pop
rcl
jg
push
lret
mov
test
ss
jnp
jmp
and
out
in
out
add
pop
sbb
jb
sub
add
repnz
mov
xchg
repz
sub
jg
mov
inc
xor
pop
into
fiadds
xlat
mov
into
enter
popf
mov
or
push
negb
dec
nop
jg
pop
shll
cmp
xlat
adcb
lock
jae
jg
add
dec
and
loopne
xchg
inc
jno
mul
ja
or
add
fldcw
in
and
add
xchg
jge
cmp
jg
xchg
xchg
mov
inc
or
inc
aam
outsl
mov
and
aam
test
xchg
mov
and
movl
shrb
xlat
or
mov
inc
cli
pop
icebp
or
sbb
mov
stos
and
pop
dec
push
jbe
fstp
lds
stos
insb
je
jg
xor
int
xchg
jnp
cmp
ljmp
test
xchg
std
ja
fmull
mov
es
int3
rcrb
repnz
xor
sbb
dec
mov
lods
sub
lds
out
mov
and
adc
sti
push
and
push
cmp
lods
xor
sbb
pusha
jb
call
scas
popf
and
sbb
les
jne
mov
test
lret
test
ficompl
jb
std
push
add
orl
cmp
xchg
les
fwait
out
pop
inc
pop
pop
add
rol
dec
ljmp
ret
outsb
add
sti
sub
lahf
add
mov
insb
cmpsb
sbb
mov
out
int
cmp
stos
xor
pop
sub
subl
out
or
pushf
add
mov
icebp
fwait
and
cmp
adc
mov
shrb
fstl
xchg
sti
cli
add
lret
pop
inc
mov
test
xchg
inc
rcrl
pop
ficoml
mov
jo
lret
aam
repnz
mov
push
jge
push
and
clc
sbb
cmc
jo
mov
dec
dec
mov
push
mov
mov
push
mov
push
dec
insl
push
push
movsb
sbb
or
out
ret
daa
fwait
cli
shl
rcrl
testb
dec
mov
or
push
imull
data16
pop
add
lods
sub
pusha
or
in
inc
repz
addb
xchg
in
or
push
cltd
pop
sbb
ret
popf
adc
and
fcomip
dec
fchs
add
xchg
pusha
mov
js
mov
pop
pop
stos
ret
sbb
lock
int
loope
xor
cmp
sti
push
cs
jge
pop
cli
dec
jp
subl
pop
jmp
mov
mov
or
xor
cmpsl
mov
add
addr16
push
sbb
outsl
leave
cmp
fisubrl
jo
or
or
mov
jnp
shlb
out
les
cmp
xchg
jmp
pop
aam
fwait
sti
addb
sub
rcl
xor
nop
add
mov
std
rol
push
lcall
add
xchg
cmp
add
adc
xchg
mov
jns
jp
cld
dec
xchg
pop
enter
jb
mov
lcall
cmpsl
int
xchg
in
icebp
into
fisubrl
mov
mov
movsl
loope
mov
or
ret
and
or
push
popa
xor
inc
cmp
and
lock
mov
jle
fdivr
pop
lret
xorb
ljmp
and
add
jb
dec
ret
outsb
push
mov
cmp
and
pusha
push
repnz
repz
mov
inc
fmul
pop
jo
jb
insl
pusha
cli
mov
sub
mov
cmp
fcoms
movsl
pop
ret
pop
push
ss
inc
lds
push
cmp
push
in
mov
push
adc
pop
fwait
ljmp
or
sbb
inc
arpl
jb
cmp
dec
fidivrl
addl
mov
push
push
mov
call
pop
js
ss
jg
ja
mov
popf
aam
addr16
shrl
nop
loopne
cwtl
insl
xchg
aam
out
or
addr16
sahf
lret
sub
repnz
jl
stc
sbb
sbb
pop
ret
ljmp
push
aam
les
imul
cmpsl
jno
call
mov
aad
js
sub
loopne
gs
inc
xchg
sbb
adc
dec
mov
leave
adc
xchg
aaa
mov
dec
pop
push
and
pop
stos
dec
into
jge
cwtl
mov
fisubrl
add
cmpsl
jg
test
popf
stos
sahf
adc
js
xor
dec
sarl
leave
xor
xchg
mov
roll
out
std
pop
ret
xor
lret
mov
jne,pt
adc
dec
jge
call
mov
imulb
and
pop
and
mov
inc
sbb
jbe
jb
fiaddl
inc
xchg
xchg
repnz
stos
adc
lea
ret
sbb
ret
es
mov
inc
mov
mov
loope
bound
mov
push
mov
mov
fs
fisubrl
lods
das
pop
cmc
cmpsl
jmp
add
sub
orl
loopne
and
out
inc
shll
popa
sbb
cli
cmc
mov
xchg
xor
or
pop
xchg
mov
adc
push
pop
fsubr
or
stos
rcrl
lods
lret
rcrb
pop
mov
sub
in
ss
insb
inc
push
int
jne
cmp
incl
ljmp
fisttps
mov
mov
mov
xor
mov
push
add
ljmp
fdivr
add
jae
gs
popa
arpl
add
pop
sbb
pop
lret
pop
mov
sbb
jg
mov
mov
loopne
orb
das
push
mov
sti
adc
icebp
dec
mov
cmp
in
mov
lods
cmp
lods
int3
stc
sub
cmp
pop
cmp
jnp
nop
jne
xor
jge
push
leave
insl
adc
adc
cmp
fs
dec
cmp
enter
jae
in
jge
mov
xchg
xchg
test
jae
adc
into
icebp
lods
pusha
cmp
mov
sbb
push
push
lods
xchg
jmp
lds
jne
icebp
cmc
and
mov
mov
movsb
pop
insl
mov
das
xor
iret
cmp
jnp
neg
mov
jle
jg
sub
dec
repz
pop
mov
mov
mov
mov
dec
testl
lcall
cmp
adc
mov
scas
push
jns
loop
xchg
jns
js
add
and
add
add
pop
adc
shlb
aad
jp
stc
or
dec
jmp
mov
xchg
sbb
dec
enter
daa
push
jge
cmp
mov
fcompl
sarb
cmpsl
inc
sbbl
decl
push
out
scas
xlat
sbb
add
push
lods
jp
shll
cmp
pop
lahf
mov
mov
in
pop
call
shlb
movsl
jns
repz
inc
fdivs
xchg
lock
rorb
dec
imul
addr16
dec
hlt
and
cs
sbb
or
push
cmc
inc
sub
mov
push
daa
adcl
cmc
xorl
shrl
lret
or
rcl
mov
gs
js
mov
mov
pop
insb
sbb
dec
jp
mov
ficomps
fwait
std
das
mov
fsub
enter
xor
or
movsl
and
pop
ret
out
hlt
lahf
xchg
dec
push
mov
adc
js
cmpsb
jnp
pop
jge
aaa
fs
push
push
arpl
adc
scas
or
in
cmc
sbb
cmpsb
hlt
sbb
jb
sbb
ficoms
dec
gs
in
mov
fs
insb
out
mov
push
dec
mov
xchg
addb
add
int3
sbb
out
and
pusha
das
loop
mov
inc
movsb
adc
test
leave
loopne
stc
xor
and
movsb
xchg
aam
xchg
pop
rcl
cmp
iret
sbb
inc
rorl
xchg
sbb
push
pop
inc
mov
add
xchg
adc
add
testl
xchg
push
gs
push
adc
xor
in
movsl
leave
pop
mov
pusha
movsb
jl
fmuls
pushf
pop
popf
rcl
scas
out
movsb
ret
push
pop
pop
mov
lock
imul
mov
mov
pxor
pop
jge
dec
sbb
xchg
mov
xor
jmp
push
daa
or
cmpsl
daa
cmp
push
insl
addr16
jmp
xchg
lcall
pop
add
mov
push
int3
cmp
sbb
test
into
cli
mov
inc
mov
adc
imul
hlt
cs
push
sbb
xchg
sub
cmp
cmp
lret
fisttps
mov
push
int
mov
ja
jns
in
roll
jns
cmp
pop
subl
fbstp
adc
pushf
add
pop
idivl
mov
dec
mov
shlb
add
dec
push
shr
dec
mov
imul
out
int
push
lods
add
inc
push
lds
xchg
fisttps
push
xchg
lret
lret
add
sarl
mov
lcall
sti
xor
aas
jae
mov
push
setae
sub
push
lret
xchg
push
push
aaa
outsl
sub
push
stos
stos
push
pop
xchg
jbe
sti
dec
jbe
test
popa
lock
test
icebp
fucom
aas
fstpt
jge
rolb
into
and
cmp
sti
call
aam
ljmp
sbb
mov
daa
add
pop
filds
xor
leave
cmp
cwtl
repz
lret
movsb
dec
fwait
shrb
out
add
add
xlat
sti
jl
pop
xchg
lret
cmp
dec
leave
mov
pop
push
mov
pusha
stc
xchg
jle
bound
dec
aad
js
xor
adc
lea
cwtl
lds
mov
ja
cwtl
fistpl
dec
gs
sbb
test
inc
rcrl
lock
add
lods
fistps
dec
aad
leave
iret
fs
daa
int3
adc
dec
xlat
js
addr16
lea
dec
mov
mov
out
xor
mov
or
push
test
push
fsubp
mov
pop
cltd
mov
in
cmp
ret
sbb
subb
movsl
inc
pop
xchg
dec
jmp
mov
dec
adc
mov
jecxz
cmp
and
out
pop
int3
lret
xor
out
gs
sbb
shrl
fisubl
outsl
and
jo
push
mov
or
inc
mov
pop
sub
pushf
xor
nop
adc
fstp
rclb
pop
cmp
xor
ja
lods
outsl
stc
push
or
add
rcr
adc
sar
cmp
pop
hlt
lcall
pop
pop
sbb
cld
push
mov
loop
movsb
and
gs
imul
pop
xchg
fs
out
out
insb
sbb
stc
loope
xor
inc
cmpsl
repz
arpl
mov
shll
dec
pusha
testl
sbb
ss
aaa
jge
call
xor
push
not
xchg
ljmp
and
enter
sub
or
mov
cmpsl
rep
int3
and
sbb
fildl
pop
addr16
movsl
in
mov
mov
lods
mov
and
sub
add
not
leave
add
inc
push
cmp
loopne,pt
mov
cld
jl
inc
push
in
xor
lods
fs
iret
lock
or
mov
ja
sbb
scas
cmp
sbb
cmp
inc
or
jo
lea
push
jo
push
jecxz
in
das
xchg
lods
push
push
sbb
and
scas
adc
negl
adc
push
jbe
idiv
cmp
add
fs
jecxz,pn
cltd
shll
insb
repnz
fidivl
stos
sarl
das
push
mov
sbb
pop
xor
xchg
es
adc
jle
pushf
out
jae
jno
fs
stos
loopne
adc
sub
cmp
mov
mov
pusha
mov
mov
dec
leave
hlt
rcl
repnz
test
lcall
xor
std
sbb
out
dec
add
ds
mov
pusha
push
fisubl
cmp
pop
mov
cmpsl
mov
cmp
add
lret
test
mov
dec
add
shll
cmc
test
imul
addr16
call
mov
mov
outsb
xor
pop
sub
call
jl
rcll
jno
dec
pusha
add
push
mov
sbb
imul
lods
sub
mov
mov
add
out
jmp
fbstp
jne
inc
iret
insl
in
push
leave
imul
sbb
ja
mov
cmpsl
stos
std
adc
lods
in
lahf
mov
insb
mov
aad
jne
mov
sbb
push
mov
mov
popa
cmp
loope
mov
adc
pop
xor
pop
lock
adc
sub
mov
iret
cmp
ret
mov
out
cmp
sub
lahf
and
sti
push
push
lret
lret
add
orb
and
imulb
mov
testb
mov
and
mov
push
dec
push
dec
pushf
pop
addr16
cs
mov
mov
leave
or
jge
stos
sbb
pushf
out
pop
imul
mov
jl
cmpsb
sub
add
xor
push
idivl
in
sahf
mov
out
movl
mov
push
pop
movsl
jnp
xor
call
cld
mov
dec
out
insb
and
mov
popl
fsubrs
cltd
fdiv
ljmp
xchg
jb,pt
mov
int3
add
lret
sbb
or
fstl
pushf
cltd
fldt
add
in
jmp
sbb
sub
dec
push
cld
jl
add
push
xchg
mov
push
add
adc
test
dec
jne
pop
and
xchg
je
imul
adc
or
dec
ret
js
sarb
mov
xchg
addr16
jns
and
mov
pushf
lret
xor
pop
lea
loopne
ss
xor
gs
or
dec
clc
dec
jns
push
aas
shlb
es
test
in
mov
jb
jge
sahf
ss
mov
xor
sub
movsl
pop
mov
mov
xchg
call
pop
xchg
or
push
push
sbbl
inc
jno
push
xchg
loop
repnz
mov
mov
adc
cli
mov
outsl
mov
inc
mov
in
int3
xchg
and
es
adc
je
cmp
inc
bound
leave
es
mov
cwtl
and
dec
in
jbe
ds
repnz
cmpsl
add
fcoms
mov
repz
mov
or
mov
addb
test
cs
mov
xor
mov
cwtl
and
jns
push
cmp
nop
dec
and
dec
insl
jle
cmp
push
pop
dec
mov
inc
rcll
push
jno
outsb
pop
test
lcall
inc
lds
jnp
ljmp
outsl
daa
mov
adc
sahf
xchg
imul
iret
pop
arpl
xchg
sahf
mov
hlt
sti
mov
les
sub
jp
mov
loope
pop
mov
rorl
mov
push
outsl
or
lcall
gs
push
in
and
scas
shrb
loop
jo
daa
rolb
push
sub
xchg
push
inc
pushf
xor
stos
cli
sub
in
mov
or
and
sahf
movsb
jmp
push
xchg
mov
mov
inc
cld
mov
dec
lods
gs
jle
cmp
xor
movsl
xor
insb
mov
imul
xor
jb
cltd
lock
test
and
stos
nop
fcoml
jne
aad
adc
movsb
pop
icebp
dec
testl
leave
sbb
lods
loop
rorb
dec
xor
dec
ja
inc
es
lcall
vmread
xor
sub
iret
lock
nop
jmp
lds
cmpb
lret
cmpsl
pop
bound
mov
pop
pop
mov
mov
cmpsl
sbb
mov
or
fildll
daa
lret
dec
ss
xor
jle
fstpl
std
or
test
leave
test
push
out
insl
push
mov
inc
inc
pop
dec
enter
lcall
dec
xor
push
cld
xchg
andl
add
enter
jbe
inc
adc
shlb
mov
xchg
gs
push
fstps
mov
sub
and
aad
clc
pop
push
dec
les
int
fdivr
xchg
rcll
in
movsl
outsb
mov
aam
test
sbb
adc
js
cmpsl
add
pop
inc
and
mov
fcmove
pop
mov
push
mov
inc
and
add
push
cmp
icebp
fisubrl
mov
fdivrl
outsb
outsl
pop
jns
pop
mov
movsb
pop
push
pop
inc
popf
sbb
loope
pop
and
jl
cltd
das
and
xchg
xor
daa
jle
mov
push
mov
jecxz
xor
xorl
or
xchg
cli
in
pop
les
push
repz
mov
sahf
xchg
pop
lcall
cmp
scas
into
lods
popf
sahf
das
jne
dec
xchg
cld
enter
dec
xlat
xor
add
sbbb
xchg
jle
inc
push
dec
push
xor
mov
out
pop
mov
imul
adc
xor
mov
jo
int
push
jne
aas
imul
inc
mov
in
ja
test
adc
lretw
in
xchg
ss
xchg
ret
shlb
mov
add
es
and
cwtl
popa
or
mov
js
notb
mov
xchg
pop
cmc
sbb
outsl
xor
xchg
mov
mov
mov
sub
mov
out
shll
popf
lret
imul
or
repz
aad
mov
movsb
jae
sub
pop
aad
mov
inc
leave
and
mov
shll
or
lods
xor
shll
aad
ficoml
cmpsl
jno
dec
cmc
shlb
repz
rolb
xchg
out
dec
sub
jl
gs
xor
push
idivb
into
adc
dec
pop
jns
mov
or
ds
push
push
inc
ja
adc
pop
push
lock
jp
push
cmp
dec
jmp
mov
xor
sbb
mov
add
lret
mov
out
sbb
arpl
mov
inc
sub
mov
sub
or
and
lcall
imul
sbb
push
push
pusha
inc
push
les
xor
loope
into
pop
cld
in
shrb
out
popa
mov
loop
jge
and
inc
js
cltd
das
and
xchg
call
out
out
xlat
or
cmpsl
ret
add
aas
movsb
sbbl
pop
pop
pop
inc
push
xor
bound
ss
and
scas
popl
pop
ljmp
into
sbb
std
pop
scas
add
test
add
pop
adc
xchg
add
mulb
scas
sbb
jb
mov
test
and
jmp
arpl
jne
cltd
fnstsw
mov
scas
test
mov
dec
mov
sbb
cwtl
and
cmpsl
inc
or
movsb
dec
sbbb
push
popa
shlb
sbb
push
cmp
sbb
xor
lods
dec
cwtl
fdivrs
pop
loopne
push
ret
test
and
mov
scas
pop
sbb
daa
insl
outsb
nop
ja
mov
lahf
imul
cmp
cltd
in
fisttpl
and
sarl
dec
mov
jns
loopne
icebp
xchg
inc
adc
dec
sti
into
or
rcr
pop
outsl
add
mov
fimuls
sbb
pop
insl
pop
cmp
lock
gs
pop
push
js
in
pop
clc
lds
insl
pusha
lret
ss
pop
addl
int3
insl
push
pop
sbb
in
fdiv
scas
cmpsb
sbb
pop
cwtl
shrl
or
popa
stc
inc
arpl
cmp
pushf
jmp
mov
cmpsb
push
adc
push
fisttps
sub
stos
sub
cmp
arpl
cs
adc
nop
scas
mov
clc
inc
dec
ss
scas
cs
lods
out
ds
or
or
lahf
fists
xor
cltd
mov
scas
and
mov
cmc
adc
cmp
loopne
mov
sbb
jnp
mov
adc
ds
loop
push
adc
add
lds
or
sbb
mov
adc
mov
or
pop
xchg
pop
adc
scas
aaa
into
outsb
or
push
sbb
out
stos
xchg
rcrl
push
sbb
lea
push
ret
scas
inc
aas
dec
xchg
pusha
xor
adc
add
add
pop
mov
sbb
mov
push
fldt
sub
enter
enter
cmc
scas
push
scas
into
push
push
aam
lods
dec
inc
or
ljmp
sbb
fwait
cmp
sbb
pop
lahf
neg
cmp
push
pop
pop
jmp
rcrl
push
xor
shlb
iret
jns
xchg
mov
push
cmp
addr16
mov
and
out
test
cmp
pop
or
loop
adc
push
sub
xor
mov
and
fwait
mov
mov
ds
add
add
push
dec
mov
lcall
lcall
push
std
sub
notl
xchg
inc
aaa
dec
call
jmp
test
xchg
lahf
lret
aam
pop
in
cmp
icebp
scas
enter
es
mov
pushf
jae
stos
clc
dec
jb
sarb
and
xchg
test
and
sbb
dec
push
mov
cmp
fdivrl
scas
std
sub
testb
dec
cmpb
sub
jae
inc
enter
sbb
imul
xor
add
ss
shll
das
popf
clc
jecxz
adc
aaa
insl
xchg
pusha
in
fwait
cld
clc
xchg
mov
inc
pop
js
scas
inc
js
les
xchg
cmp
xorl
cmp
mov
jecxz
or
mov
add
dec
outsl
subb
mov
in
movsb
xchg
idivl
sub
dec
imul
jg
xchg
cmp
int
pcmpgtd
sub
lahf
lcallw
mov
push
std
xor
call
imul
in
mov
inc
mov
ret
sbb
in
lret
or
lea
movsb
fildll
cmp
dec
inc
jo
and
rcrl
mov
jns
inc
loopne
lret
sbb
mov
mov
jmp
cld
push
out
fcomp
mov
sub
mov
out
dec
mov
std
lods
scas
xor
xor
xor
shlb
inc
aam
inc
movsb
mov
popf
inc
cwtl
rcll
inc
jo
add
sub
xchg
mov
cmc
dec
mov
sahf
repnz
cmp
testb
and
xchg
fidivrs
xor
cmpsl
mov
add
xor
adc
dec
inc
test
adc
lcall
mov
lret
xor
xchg
ret
cli
push
call
pop
or
data16
bound
pop
out
mov
icebp
pusha
sub
adc
fwait
inc
loopne
and
fistl
cmovge
js
into
pop
and
push
aaa
jmp
jnp
push
push
xchg
dec
add
rcl
ljmp
xchg
cmpsb
pop
repnz
fwait
imul
and
cwtl
push
mov
mov
sub
scas
adc
rolb
sub
sub
xor
push
jns
push
inc
push
push
aam
bound
int
stc
hlt
ss
lds
add
enter
push
push
lock
sti
cmp
loope
outsl
mov
xchg
pop
es
daa
aas
fsubrl
test
or
lret
sahf
inc
sub
pop
les
push
mov
add
xchg
inc
pop
sub
sbb
decb
xchg
mov
inc
and
in
mov
or
shr
and
sub
push
mov
shrb
cmpl
push
lcall
dec
jp
xor
test
jl
lret
imul
cmpsb
push
scas
sbb
inc
push
fwait
push
jns
adc
sbb
push
outsl
outsl
bound
test
fcoms
mov
xor
adcl
dec
dec
iret
call
dec
fdiv
jp
ret
sub
mov
xlat
stos
lret
movb
ljmp
mov
icebp
sbb
and
inc
stos
aam
xchg
xor
addr16
xlat
jle
scas
in
lea
adc
loop
aam
push
pushl
nop
mull
add
mov
push
lock
xor
mov
aas
push
les
mov
ds
imul
inc
xchg
negl
adc
arpl
inc
test
ret
dec
test
xchg
fwait
stc
dec
gs
nop
jnp
sbb
aam
or
pushf
xchg
and
sbb
lea
aas
mov
push
and
mov
and
or
sbb
xchg
mov
jle
jne
jmp
cmpsl
add
mov
outsb
xor
add
or
push
rcrl
outsb
xchg
xor
pushf
daa
inc
jl
jmp
mov
xor
jl
push
jecxz
jmp
into
xchg
jecxz
sbb
fmull
test
sbb
or
cltd
mov
loope
sbb
scas
leave
stos
stc
orb
das
imul
pushl
fbstp
cmp
loop
jbe
xchg
subb
and
in
test
bound
dec
jmp
or
cltd
test
jb
nop
adc
mov
mov
dec
cmp
jns
mov
aas
cmp
mov
inc
ss
xchg
push
mov
hlt
test
jno
test
orl
jge
add
icebp
sbb
push
add
jmp
jmp
push
in
cmp
and
push
or
call
pop
dec
jb
mov
fsts
decl
clc
icebp
test
sarb
fs
inc
hlt
outsl
imul
test
dec
mov
imul
xchg
dec
in
xor
psubusb
mov
shlb
ud0
pop
lret
in
push
in
jge
aad
mulb
out
push
divb
push
push
adc
mov
or
inc
and
mov
xchg
fsubrl
out
aaa
dec
out
scas
adc
in
jmp
xor
test
jmp
bound
push
jae
xchg
jecxz
out
sar
scas
xor
and
xor
cmp
pushf
or
aad
mov
ret
sbb
push
push
mov
lds
inc
push
xlat
ja
jge
mov
sub
ljmp
inc
loope
push
mov
push
jnp
ja
sub
sbb
sbb
add
push
movsb
outsl
fsubrl
inc
mov
sbb
popl
inc
insl
shll
bound
cmp
cmp
into
push
iret
stc
loopne
sahf
imul
mov
icebp
mov
testb
ficoms
mov
jg
xchg
sarb
fstpt
sbb
pop
lret
mov
add
mov
sbb
xchg
xchg
mov
push
sbb
inc
lock
enter
mov
sub
fldl
aas
mov
or
push
in
int
negl
push
xchg
mov
insb
fidivrl
mov
jg
outsb
pop
or
out
popa
test
pop
adc
scas
out
inc
icebp
mov
dec
stc
aad
dec
pop
ret
cmc
mov
stos
xor
lock
cmp
and
in
push
repnz
mov
mov
or
or
or
sub
or
and
lods
mov
inc
cli
sbb
cmpb
xchg
inc
sub
shrb
movsb
iret
dec
adc
in
pop
mov
lea
mov
cs
in
in
cmovns
mov
dec
mov
add
iret
jbe
mov
daa
sub
cmp
popa
iret
pop
into
or
cld
and
scas
jae
int
movsb
rcr
dec
sub
lret
addr16
fistl
dec
jno
sbb
js
mov
xchg
sbb
mov
or
fxch
iret
xor
add
or
sbb
dec
shlb
and
in
cmpb
movsl
pop
lss
aaa
fisubs
int3
jae
lahf
insb
pop
cmp
es
push
mov
sub
inc
adc
mov
fs
inc
mov
inc
imul
cld
xor
out
jno
clc
jle
lcall
jne
addr16
jecxz
jbe
jo
inc
gs
aam
mov
adc
jae
in
jecxz
call
std
sub
pop
lods
dec
add
add
notl
mov
mov
pop
lods
pop
pop
lea
xor
push
loopne
mov
lods
push
dec
cmp
and
jle
aad
push
ljmp
sbb
cmp
jne
inc
cmp
notb
dec
jns
inc
scas
xchg
mov
cmc
into
xchg
adc
mov
and
mov
jbe
sbbw
nop
imul
call
hlt
cwtl
jb
aam
fs
fs
xlat
clc
sub
pop
aam
mov
insl
push
loope
cmp
push
push
es
cmp
lds
xor
inc
rcrl
cwtl
int3
jg
pop
sbb
jl
lret
push
add
repnz
insb
dec
push
jg
nop
add
adc
ja
sub
cmc
push
clc
ja
incl
cmp
iret
or
pop
loope
ja
clc
fisttpl
stos
outsl
push
movsl
lea
clc
inc
jno
jo
jo
out
in
faddl
add
pop
aad
js
adc
jecxz
mov
shrb
jns
dec
lock
mov
int3
xchg
adc
movb
stos
mov
icebp
pop
ljmp
lret
or
push
fistpl
iret
inc
adc
sar
mov
andl
gs
xchg
fisubrs
mov
scas
push
sbbl
data16
test
arpl
shrb
xor
jmp
cmp
inc
ja
pop
jb
fsts
arpl
lret
nop
fiaddl
xchg
test
in
loopne
fcmovbe
cmp
and
or
cmovns
push
fcoms
mov
out
pop
fdivl
scas
decb
jne
cwtl
xchg
add
jp
sub
mov
stc
xor
sub
jp
xchg
sbb
out
shll
cmc
jns
fwait
mov
mov
rclb
mov
test
jo
or
imul
sbb
mov
repnz
push
out
out
ljmp
mov
addr16
and
cs
jecxz
xchg
adc
popl
inc
inc
jae
test
xchg
xor
or
or
inc
jmp
xlat
lahf
sbb
xor
out
loopne
test
pop
pop
jne
test
dec
mov
xchg
sbb
mov
jmp
lea
cwtl
mov
xchg
lea
mov
out
mov
cmc
inc
push
iret
fimull
jg
or
fnstenv
loope
scas
cli
mov
pop
por
inc
ja
jmp
arpl
jbe
mov
sub
movsl
pop
sbb
mov
lock
add
dec
test
adc
scas
dec
loop
out
andl
dec
xchg
shlb
cltd
popl
jl
jne
pop
push
or
mov
iret
xlat
fs
sbb
dec
lods
nop
add
roll
fmull
hlt
arpl
cmpsl
int3
cmpsb
dec
jmp
mov
stos
mov
sbb
mov
jbe
adc
jp
hlt
push
cmp
lock
inc
add
in
cmpb
add
push
ds
xorb
ljmp
mov
mov
fstpl
insb
rcrl
shlb
fstps
pop
std
inc
lret
scas
mov
mov
xchg
ret
fs
pop
cmpb
sub
adc
mov
test
movsl
std
cmp
xor
inc
imul
lcall
mov
cmp
lock
outsl
aas
pop
mov
pop
mov
nop
push
dec
test
aaa
push
sahf
and
aaa
pop
testb
cmpsl
call
in
lods
dec
repnz
mov
mov
mov
shlb
rclb
push
sub
lds
out
mov
push
ror
stos
xchg
xchg
jb
test
ljmp
cli
jbe
xor
inc
pop
lret
incl
xor
int
cmp
xor
lods
pop
cmc
add
ret
push
and
popf
xor
push
inc
push
or
stc
jge
or
cli
mov
dec
cmp
push
imul
mov
pop
scas
in
sub
add
shr
inc
imul
in
xchg
roll
fcoms
or
lret
add
push
lods
adc
mov
sbb
mov
popf
xchg
push
dec
popa
push
mov
lahf
in
in
mov
int
out
and
div
mov
cld
push
lahf
sti
sub
jns
mov
pop
adc
mov
adc
mov
mov
das
fsts
xorb
push
xchg
call
sbb
adc
cs
sub
mov
fidivrl
cmpsl
lret
repz
test
jl
pop
or
fwait
sbb
mov
cltd
inc
or
cmp
idivb
mov
jmp
xor
add
stos
pop
std
sbb
nopl
ja
mov
in
aad
cmpsb
jne
or
mov
xorb
leave
sahf
push
dec
bound
test
cmp
pop
sbb
hlt
add
and
fistpll
cmpsl
pop
push
repnz
xchg
xlat
add
or
call
xchg
shl
sbbb
jmp
pop
ret
add
add
sub
pushf
inc
cs
lcall
aaa
aaa
push
jne
int3
xor
mov
add
ret
cmpsl
fdivrp
ljmp
scas
jmp
jns
insl
or
cmp
pop
test
fmull
jmp
push
sbb
adc
pusha
push
gs
jecxz
sahf
pop
data16
jns
mov
and
push
xchg
test
or
mov
outsb
repnz
sub
xchg
shll
mov
inc
testb
mov
lock
and
stc
or
mov
loopne
arpl
and
daa
sub
mov
jle
push
lock
or
push
fcoms
pop
cmp
pop
inc
inc
repz
adc
sahf
out
adc
push
fidivl
and
or
jmp
clc
iret
fisubrl
mov
jl
shlb
mov
add
fists
inc
and
ss
les
loope
ret
cmpsl
jle
popf
mov
sub
fadds
ficoml
mov
insb
test
data16
sub
outsb
mov
orl
ja
mov
push
push
ds
xchg
adc
rcrb
xorl
clc
loope
hlt
mov
pusha
cmpsl
sahf
inc
inc
movsl
push
mov
adc
rorl
insb
inc
int
push
cmpsb
lahf
add
push
loope
sub
push
jno
enter
adc
ja
fldl
push
fistps
cld
lahf
nop
sbb
cmp
stos
scas
mov
fisubl
leave
mov
sub
shr
movb
dec
cltd
mov
or
cld
and
inc
xor
ds
in
and
push
pushf
sbb
push
in
inc
lret
ret
data16
jo
dec
fimuls
pop
sub
enter
in
scas
enter
insl
push
xor
mov
cli
ja
push
iret
cmpsl
jge
je
pop
out
or
dec
add
lret
inc
fidivrl
push
aad
insl
add
mov
xchg
cmp
lahf
popa
add
pop
loope
notb
mov
rcl
pop
xorb
dec
cld
push
aaa
xchg
pop
mov
xor
dec
jge
icebp
xchg
push
pop
lods
add
or
repnz
imul
iret
mov
stc
push
ja
adc
ret
fistpll
sbb
mov
popf
subl
jbe
jbe
cs
cmpb
sti
popf
push
xor
jne
mov
inc
adc
les
ja
cli
lahf
aas
scas
jge
inc
sahf
lret
mov
cmp
add
rcrb
jge
xchg
std
gs
out
xchg
pop
jo
add
hlt
cmpsl
and
outsl
stos
mov
jecxz
add
xor
shrb
add
les
mov
mov
push
sub
hlt
mov
push
daa
mov
pop
xchg
jecxz
pop
add
xchg
lds
and
xchg
mov
in
add
mov
js
mov
es
and
cmp
dec
fs
push
pop
jmp
jmp
imul
cmc
adc
jge
enter
mov
mov
in
cmpsb
dec
sub
push
adc
xor
ja
mov
inc
subl
pop
pop
dec
sub
insb
into
xor
lret
rcrb
push
je
xchg
sub
movsl
xchg
nop
das
out
inc
push
popf
sub
xorl
xchg
add
mov
fisttpll
pop
xchg
and
lcall
mov
push
repz
and
rcl
sbb
xchg
sahf
mov
jl
xchg
inc
jbe
or
inc
outsb
cmp
mov
jb
in
and
popa
cmc
and
fnstcw
or
sbb
push
out
sub
or
insb
xlat
jne
cmp
testb
mov
and
cmpsl
rcl
stos
jo
imul
dec
sbb
iret
mov
out
gs
mov
out
cmpsl
lret
push
fwait
mov
out
cmp
dec
pop
js
inc
mov
and
outsb
in
loop
insl
push
push
lock
add
sbb
sets
dec
mov
adc
pop
xchg
mov
ret
repnz
es
pushf
add
or
aaa
int
das
xor
cmp
arpl
lods
inc
lret
fwait
or
ret
and
lret
add
mov
jne
addr16
into
push
inc
lock
push
inc
data16
pusha
cmpsl
aam
test
jmp
sbb
out
hlt
inc
dec
add
adc
or
ds
sbb
hlt
adc
jl
pop
mov
stc
mov
lret
lea
mov
push
jbe
dec
shll
cmc
cmpsl
xchg
nop
mull
fdivrs
xorb
and
push
pop
jnp
add
iret
in
add
icebp
movsb
movsl
dec
xor
fwait
jge
rcrl
jecxz
mov
xor
and
cmp
int
fsts
jp
add
or
mov
pop
sti
lods
shrl
xchg
mov
cmpsl
jno
jmp
out
mov
add
sub
dec
cmp
mov
lods
sbb
jl
stos
jl
and
cmp
inc
push
out
ds
cmc
jg
mov
jb
sbb
xchg
pop
or
jns
and
push
lods
test
jns,pn
lea
addr16
mov
clc
sub
nop
into
cmc
push
lret
sub
add
int
jecxz
inc
xchg
je
loop
lds
arpl
std
fistpl
test
sbb
xlat
adc
mov
cld
sbb
mov
and
lds
push
jmp
mov
dec
cmp
scas
imul
push
cwtl
inc
mov
push
pop
push
push
out
jne
xchg
jno
ljmp
data16
gs
mov
lods
inc
xor
aas
jo
mov
mov
xchg
and
push
shrl
jecxz
xor
aaa
iret
cli
lret
sub
mov
testl
insl
stos
jmp
ror
cmpsl
jecxz
js
sti
repz
inc
lea
sbb
pop
mov
shll
aad
jno
aaa
add
out
and
adc
movsb
shrb
pop
push
push
jecxz
ret
clc
sbb
jg
out
push
dec
push
movsl
test
das
add
int
sbb
dec
mov
ret
ja
cmc
scas
int
lret
scas
pop
je
dec
xchg
xchg
fbstp
jo
mov
sub
sbb
xor
scas
imul
inc
pop
sbb
notl
fcompl
push
xchg
push
inc
dec
mov
sti
scas
mov
jl
dec
pop
dec
dec
mov
mov
cmpl
or
push
cmc
je
loope
jbe
xor
dec
cld
xor
mov
pop
outsl
xchg
hlt
dec
sbb
pop
sbb
lahf
push
scas
or
jae
jmp
sti
sahf
jnp,pt
pop
add
fidivrl
pushf
out
jo
mov
and
cwtl
movsl
pop
popa
and
notb
dec
lea
mov
mov
sub
jge
in
mov
push
adc
ror
inc
out
or
sbb
mov
repz
add
sbb
mov
call
ds
jge
jb
rorb
loope
repnz
push
bound
test
add
dec
je
jb
movsb
fists
add
mov
rolb
adc
sbb
push
mov
sbbb
cmpl
xchg
fs
xor
adc
push
cwtl
je
and
mov
rorb
fs
hlt
cmc
cmc
aas
int
mov
push
sub
jbe
ret
adc
xchg
arpl
jge
je
jle
pushf
shll
inc
repnz
pop
jns
sub
mov
push
arpl
xor
mov
dec
das
fnstcw
mov
dec
rolb
push
ja
test
xchg
mov
into
jge
adc
bound
add
data16
pop
enter
fnsave
pop
push
push
mov
cltd
sbb
or
pop
mov
pop
mov
clc
lcall
mov
mov
push
dec
inc
into
push
pop
xorl
movsb
sub
sub
lret
mov
xlat
movsl
sub
pop
loope
fstpl
jnp
push
or
or
sahf
adc
mov
incb
pop
push
and
jne
inc
mull
jle
outsb
xor
sub
test
pop
stos
cmpsl
pushf
loope
out
xor
pop
push
adc
lds
stc
int
les
rcll
in
leave
pop
imul
xor
jge
add
outsl
dec
mov
aaa
mov
popa
sbb
fsubrl
jmp
loop
mov
and
cmp
les
adc
sarl
pop
mov
cmpsb
xchg
push
mov
std
add
dec
dec
in
ljmp
dec
xchg
addr16
je
leave
push
fs
stos
rorl
stc
pop
std
daa
mov
lods
xchg
push
adc
jp
imul
jge
test
inc
test
xchg
xchg
outsl
dec
aam
adc
inc
in
inc
push
pushf
shl
dec
movsb
sub
dec
pop
sub
outsb
push
in
add
test
mov
cmp
inc
out
xor
pop
cmpsl
test
jge
add
shl
pusha
sbb
ret
movsb
push
loop
fbld
mov
icebp
jnp
mov
lds
or
lea
jl
aas
add
sub
mov
insb
inc
push
shll
dec
inc
adc
stos
ja
sti
mov
sbb
ss
cmpsl
imul
jns
or
lcall
jo
sbb
adc
test
ljmp
jp
cld
fidivrs
cmpsl
mov
hlt
mul
push
mov
add
pop
mov
add
adc
pop
stos
ss
nop
xchg
xchg
imul
mov
adc
push
stos
push
xchg
jae
xchg
sti
push
ja
popf
mov
mov
jle
aas
in
add
aas
rclb
fstps
popa
mov
ret
lret
div
cld
leave
push
cmp
or
adc
mov
std
or
xchg
jo
xlat
adc
test
xor
andl
and
xchg
add
iret
cmpsb
popf
xor
ret
sub
xorb
xchg
ds
mov
loop
pushf
push
jp
test
push
mov
mov
xchg
pop
pop
bound
adc
ret
cltd
imul
bound
dec
push
dec
mov
les
xor
mov
out
ss
push
push
pop
loopnew
stos
insl
sbb
jmp
pop
lock
cmp
mov
sti
sahf
mov
push
pusha
xor
cmpb
lock
icebp
ret
out
mov
xlat
or
scas
leave
lea
imul
outsl
mov
aam
mov
add
in
rcrb
xchg
and
inc
imul
cmpsl
add
mov
and
inc
loop
lcall
jno
jbe
aas
mov
fs
xor
inc
pop
jge
test
hlt
cld
adc
repnz
loop
jno
cli
push
stos
icebp
sbb
fdivr
movsb
loopne
and
call
xchg
sub
xchg
sti
mov
repz
inc
insl
mov
es
pop
jnp
bound
mov
sbb
xchg
cld
loopne
in
sub
mov
dec
mov
lahf
aad
stos
dec
inc
cmp
stc
fld
push
dec
mov
mov
adc
mov
sbb
mov
sub
jg
pop
xor
adc
les
ret
cmp
movsl
out
nop
mov
or
scas
sub
pop
cltd
sbb
cmp
aas
mov
sub
xor
ror
and
lret
sub
xor
push
sbb
push
loope
stos
inc
call
aas
mov
fisttpl
into
shlb
mov
loop
mov
mov
inc
pop
icebp
pop
imul
jo
jb
out
xchg
or
daa
popf
fcmovnb
xchg
ret
push
insb
aam
les
add
xor
adc
and
arpl
pop
fs
mov
shr
mov
mov
out
jl
adcb
or
pop
sahf
sub
pop
mov
lret
loope
aam
mov
xchg
cmp
dec
push
or
ud2
cmp
repnz
andl
xorb
xchg
dec
loop
aam
jae
in
lret
inc
sbb
pop
ss
data16
inc
push
jecxz
push
cmp
test
sbb
sub
sub
dec
xchg
cmp
and
jecxz
mov
pop
cli
and
xchg
jge
cwtl
dec
mov
sub
out
dec
xor
mov
inc
xor
pop
push
mov
imul
outsl
leave
fldt
add
mov
mov
loopne
aaa
movsl
out
jg
sub
xchg
or
ds
test
mov
fists
dec
push
jnp
frndint
mov
pop
or
imul
and
clc
xchg
push
in
hlt
aaa
push
pop
sub
fmuls
sbb
sbb
push
test
fcompl
into
mov
jnp
test
push
fs
mov
enter
leave
mov
lret
inc
loopne
or
test
inc
or
movl
shll
hlt
xorl
lods
pop
mov
andl
outsl
cmc
fldl
inc
out
jecxz
andl
add
in
mov
mov
cwtl
andb
sub
sbb
cmp
xor
sbb
push
jae
or
push
sub
jb
mov
leave
pushf
in
jle
sbb
stos
sbb
mov
lods
cli
xor
sub
jmp
add
lret
xchg
insl
dec
faddl
leave
mov
mov
push
pop
lcall
xchg
popf
lock
pop
popf
sbb
add
test
pop
ret
dec
push
push
arpl
mov
jbe
push
loope
imul
xchg
pop
mov
adc
mov
outsl
call
sti
addr16
mov
mov
pop
mov
into
fidivl
div
pop
outsb
andl
push
aam
dec
xor
mov
mov
cmc
lods
cli
popa
imul
test
imul
jb
addr16
jbe
sbb
sub
sub
xchg
ja
mov
adc
fimuls
pushf
jecxz,pn
loop
adc
cli
cmpl
pop
and
add
fisttpll
dec
pop
pop
jge
std
adc
sbb
xor
inc
mov
scas
fldl
or
jle
mov
xlat
aad
mov
mov
pop
mov
into
ljmp
sub
outsb
mov
ret
mov
cmc
or
and
mov
adc
adcl
clc
rcrl
fisubrl
push
and
xchg
and
mov
sbb
xchg
shlb
imul
or
xor
scas
popf
pop
mov
adc
rep
xlat
imul
cmpsl
push
adc
pop
dec
sbb
in
cwtl
cmc
jnp
fldenv
cmp
fwait
cmp
and
cmp
test
call
repnz
addr16
sub
hlt
dec
inc
pop
pop
mov
fcomip
push
mov
fucom
loopne
lret
sub
fsubrp
mov
inc
xorb
fidivl
mov
cld
les
es
cmp
xchg
xor
ja
xlat
mov
test
mov
sar
cwtl
data16
inc
push
adc
xchg
pusha
je
sarl
mov
bound
inc
aam
add
adc
lahf
and
mov
jb
clc
lock
jg
in
subb
jmp
ljmp
cmp
cmp
imul
and
in
cmc
imul
loopne
jle
push
push
flds
xchg
mov
jne
aaa
xor
dec
in
push
outsl
aad
push
enter
test
xor
shll
jno
inc
xor
mov
lods
movsb
push
cmp
xchg
cmp
xchg
jne
lret
mov
fxch
sub
push
aas
es
cmp
in
icebp
call
repnz
cmpsb
loop
sbb
dec
out
xchg
push
lods
xor
xchg
cmp
mov
cli
shrl
loopne
push
push
shll
sti
jns
cmpsl
test
movb
lds
les
or
jae
pusha
mov
xchg
cmp
testl
inc
in
jne
jmp
fsts
pop
test
test
inc
scas
jnp
sub
adc
mov
rorb
add
call
adc
mov
jle
push
mov
cmpl
pushf
inc
add
pushf
add
dec
lock
pusha
and
cld
hlt
inc
mov
inc
push
jl
dec
ret
shr
pop
mov
ja
push
hlt
arpl
xchg
jp
mov
sub
jp
movzwl
pop
mov
pusha
sub
daa
sub
cmp
es
push
xchg
pop
dec
das
adc
inc
add
cmp
mov
jbe
sub
jmp
loopne
fs
das
jmp
jae
lret
stc
jne
lahf
movsb
cmpl
mov
cmp
sbb
adc
jb
aam
jl
xchg
inc
sti
xor
outsb
mov
orl
shrb
js
mov
mov
dec
mov
xlat
cli
ret
xchg
jge
repz
pop
pop
sub
xchg
and
pop
jae
rcrb
and
mov
adc
mov
sahf
in
add
inc
and
call
out
jno
into
inc
sbb
mov
in
mov
popf
xchg
xor
xor
inc
mov
mov
xor
pop
cmp
mov
ds
pop
repnz
cmpsl
inc
mov
inc
icebp
mov
pop
loop
rcrl
imull
enter
incl
xchg
adc
jp
add
cld
ret
push
pop
pop
out
sub
and
xor
ret
cld
stos
push
jb
add
inc
pop
mov
adc
shlb
xor
add
testl
or
mov
sbb
sub
sub
mov
lds
mov
cld
test
cmpsl
sahf
outsb
add
sahf
in
adc
adc
inc
xchg
cmp
mov
int3
shll
sub
mov
ffreep
fnsave
js
mov
inc
and
mov
shlb
jg
std
jle
icebp
mov
outsb
js
insb
cwtl
adc
mov
sarb
cwtl
repz
repz
fdivr
sbb
scas
lahf
test
lret
lock
leave
mov
lahf
shlb
dec
pop
mov
xor
fwait
ds
jmp
and
arpl
lds
popa
cmp
push
xor
das
mov
adc
cmp
cmp
mov
insb
into
pop
testl
inc
and
add
enter
movsl
add
inc
lods
mov
filds
add
push
jae
sbb
mov
test
lcall
imul
xchg
adc
pop
lock
call
test
cmp
cmc
cld
cmp
ss
repz
hlt
fcoms
movsb
les
lea
lcall
jno
in
cmp
ja
call
cwtl
pop
into
outsb
lods
arpl
ret
mov
test
rcl
nop
mov
imul
xor
lret
mov
push
mov
dec
outsb
xor
pop
mov
xchg
xorb
inc
fsubr
inc
imul
lock
das
leave
lcall
or
inc
cmp
stos
inc
mov
call
xchg
shl
or
sbb
sbb
data16
dec
push
sbb
shlb
add
into
fdivrs
mov
cmp
out
les
sub
lcall
insl
shlb
and
hlt
adc
out
mov
leave
test
mov
into
test
daa
or
add
loope
mov
mov
stc
jg
or
or
fsubs
bound
clc
mov
sub
sub
arpl
sub
ficomps
insl
pop
push
xchg
xlat
rcrb
xchg
or
in
test
mov
fsts
stos
std
cmc
bound
inc
cs
mov
inc
out
out
fabs
ret
adc
roll
fimull
fdivr
daa
push
xchg
ficomps
mov
dec
lods
add
sbbl
mov
nop
mov
inc
inc
cmp
movsl
into
int
add
insb
mov
lret
cmpsb
arpl
cmp
popf
adc
mov
lret
lret
pop
clc
into
sbb
lds
aad
push
push
push
dec
in
and
pop
movsl
test
pusha
aam
jb
test
jmp
dec
insb
mov
loop
jecxz
push
in
xchg
movsl
adc
sbb
jmp
lahf
scas
pop
mov
je
push
shl
adc
fdivr
sbb
fisubrs
xchg
insl
pop
inc
or
fsts
out
shrl
and
push
mov
in
pop
ljmp
repz
push
gs
or
lcall
inc
xchg
pop
jns
adc
adc
into
cmp
repz
mov
adc
insl
incl
cmpsl
or
add
and
xor
jbe
pop
js
in
ds
cld
xorl
orb
and
addl
push
inc
sbb
inc
mov
leave
out
mov
push
mov
or
lcall
or
incb
sbb
das
in
cmpsl
or
insl
orb
fldcw
xor
jbe
faddl
xor
add
jbe
call
mov
inc
lea
pushf
in
pop
sbb
jg
fimuls
sahf
cmp
fsub
inc
jo
cs
mov
dec
pop
dec
pop
mov
fwait
xchg
sub
xor
scas
push
push
sbbb
and
sub
mov
jecxz
xchg
cmpsl
inc
inc
jmp
and
mov
mov
cmp
sub
mov
jae
sahf
xchg
adc
test
push
dec
hlt
pop
das
xchg
push
xchg
add
or
sub
imul
and
outsl
mov
mov
je
repnz
push
movsb
push
ficoml
idivl
in
addr16
sti
jbe
fwait
out
decl
rcl
push
movsl
pop
mov
inc
fsubrp
mov
push
cltd
shlb
pop
faddl
jmp
insb
push
jo
xchg
mov
mov
mov
sahf
cmp
aaa
or
out
shr
push
enter
in
inc
lret
mov
cmp
stos
inc
mov
inc
fdivr
jl
aas
or
pop
hlt
rcrb
pop
loope
jmp
add
push
imul
pop
lcall
pop
sub
push
pop
mov
lahf
iret
fs
pop
sub
test
lret
xor
orl
sbb
cmpsl
in
sbb
adc
cmp
stc
push
pop
fisttpl
rorl
ror
xchg
ret
cmpw
jb
mov
sbb
ss
jle
cmc
jmp
mov
pop
fdivr
mov
cltd
fidivrs
insb
pop
sbb
add
mov
and
dec
aas
xchg
cli
inc
add
testl
mov
adc
jg
dec
and
pop
fucomp
mov
cmpsb
rorb
fsubs
mov
scas
push
sti
inc
das
cmc
int
mov
call
and
lcall
mov
add
push
xor
push
dec
dec
sarb
outsb
dec
je
adc
and
dec
mov
pop
repz
or
push
add
dec
jns
pop
loop
mov
call
jg
sbb
bound
or
inc
fwait
dec
mov
rcrb
ficoml
push
fildl
sahf
sbb
movsb
jns
xchg
and
sar
repnz
add
rcll
xchg
outsl
xchg
data16
xor
dec
mov
xlat
imul
mov
mov
mov
adc
inc
pushf
fnstenv
ljmp
xor
adc
or
ret
pop
dec
lock
jl
cltd
ficompl
adc
icebp
dec
sub
cmp
push
mov
mov
dec
repz
stc
testb
sbb
imul
subb
fsubl
mov
push
sbb
xor
stos
sahf
adc
or
pop
and
mov
xchg
cwtl
pop
and
je
mov
insl
pusha
jne
test
fidivrs
mov
xchg
add
in
push
cmpsb
dec
xchg
lret
imul
or
pop
outsl
test
sub
mov
lahf
cwtl
or
rcl
in
cmp
pop
popf
lods
ss
aaa
xchg
pushf
out
stos
out
int3
leave
sub
cmpsl
test
push
rcrl
fbld
sti
mov
pop
cwtl
xchg
cwtl
je
ret
push
jno
lcall
cmpsb
sbb
push
cmp
sti
mov
imul
add
sub
push
cmp
popf
fcmovne
jno
dec
xor
adc
or
int3
int3
xchg
xchg
push
or
or
ljmp
sub
xchg
movsb
lcall
in
outsb
cmp
popa
ret
sbb
jno
xchg
jae
mov
dec
mov
mov
xchg
rol
sbb
into
pop
xlat
push
sbb
cltd
test
popl
test
push
ljmp
or
jb
dec
adc
mov
stc
push
fcoms
aas
and
cmc
addr16
ret
imul
push
idivb
xlat
mov
movsl
push
insl
pop
ja
mov
mov
bound
es
adcl
push
xor
pop
inc
inc
test
scas
out
push
mov
lahf
gs
mov
imul
imul
ficompl
movsl
xchg
pop
or
aas
es
xchg
xchg
or
adc
dec
inc
xchg
nop
cmc
test
test
pop
cmp
pushf
jno
adc
and
xchg
mov
daa
adc
fmuls
mov
and
int3
pop
or
dec
sbb
dec
mov
rolb
dec
mov
or
fimuls
sub
mov
dec
xchg
roll
push
pop
sub
das
xor
out
js
cmp
jp
jge
xor
idivl
aas
cli
test
xchg
hlt
cmpsl
mov
pop
aas
lret
dec
lret
mov
xchg
mov
lcall
adc
fiaddl
lcall
cmp
jge
fwait
cwtl
mov
lret
pop
aaa
test
add
pop
lcall
dec
arpl
orl
jne
popf
push
nop
push
push
dec
sub
mov
imul
int3
xchg
loop
scas
icebp
movsb
adc
cmp
fcomps
push
jg,pn
cmpsb
sub
mov
test
pop
shr
inc
mov
push
std
sahf
push
inc
std
mov
dec
mov
popa
arpl
rcr
cmp
mov
movsl
lahf
jo
mov
lea
sbb
mov
cmp
incl
inc
insb
fistps
sti
jnp
cmp
xchg
test
das
jle
ja
cmpsb
pop
fdivrl
addr16
or
pop
call
or
mov
pop
jae
and
fs
insb
iret
mov
pop
cmp
test
or
out
arpl
mov
test
sbb
add
bound
adc
xchg
xor
es
cmp
mov
es
fiaddl
dec
xor
aas
outsb
int
pop
adc
pushf
popf
scas
out
fwait
push
mov
gs
ljmp
fldenv
xchg
dec
je
xchg
or
lock
lcall
aas
or
dec
repnz
push
xor
dec
add
je
push
nop
and
loope
mov
lods
pop
icebp
add
push
lock
lods
aaa
call
pop
popf
adcb
fildll
iret
hlt
repz
xor
inc
mov
sub
xor
push
out
push
xor
lods
imul
push
or
cltd
adc
adc
mov
addr16
shrb
pop
aaa
pop
stos
imul
repz
cmpsb
inc
cmc
xchg
stc
mov
adc
xchg
xchg
test
jmp
imul
xor
sub
pop
xchg
int
fwait
sahf
jbe
sbb
sub
out
jmp
cmp
dec
xchg
mov
mov
shl
lods
xor
sub
ficoms
and
jne
aad
and
pop
into
lcall
and
mov
jg
mov
mov
cmp
or
push
pop
adc
ss
jne
in
xor
ja
jbe
mov
push
movsb
cmp
repnz
ss
repz
mov
sub
xchg
rolb
adc
lret
mov
mov
dec
mov
jge
outsl
cs
das
hlt
sbb
lds
imul
sub
inc
das
push
aad
mov
lcall
mov
add
popa
mov
cmp
sub
xchg
outsl
jecxz
addl
xchg
lret
cmpsl
sahf
jbe
dec
aas
leave
js
int
out
data16
pop
mov
pop
dec
mov
adc
jb
movl
mov
mov
lds
push
adc
and
jge
mov
out
jp
iret
aam
into
adc
cmpsb
stos
inc
movb
xor
stos
push
xlat
push
sub
pop
cmp
shrl
inc
add
icebp
fldenv
nop
scas
jnp
and
fstpt
pop
mov
fcoms
jmp
jbe
sub
push
jnp
divl
inc
test
adc
icebp
dec
push
mov
inc
mov
repnz
jne
pop
leave
cmp
fsubr
aad
fldt
lods
jo
xchg
imul
jae
out
sbb
ja
fs
cmp
mov
stos
or
mov
lea
xchg
pop
in
jmp
mov
out
sbb
fdivs
mov
xor
xchg
mov
fs
mov
rorl
andl
repnz
sub
inc
insb
and
jmp
sub
mov
lds
push
into
dec
xchg
sub
sbbb
arpl
movsb
popa
xor
int3
call
mov
outsb
push
add
out
xchg
push
pop
insl
xor
fnstcw
xchg
rorb
mov
xchg
ss
pop
cmp
pop
cs
push
fcoms
lea
push
loop
push
fistpl
jno
sub
andl
dec
test
pop
xchg
inc
jmp
popa
sub
jmp
or
xchg
es
out
push
mov
dec
cmpsb
clc
pop
and
neg
sti
xor
xchg
inc
push
push
outsl
mov
imul
rorb
js
or
mov
filds
daa
push
push
pop
push
lret
jns
inc
mov
enter
mov
popa
ficompl
sub
sti
adc
xchg
ficomps
in
repnz
mov
or
pop
pop
cmpsl
jne
or
jo
fs
sahf
enter
sti
iret
mov
mov
sub
sbb
divb
push
pop
in
dec
sub
or
sub
jge
cld
int
sbb
push
pop
lods
mov
mov
adc
push
dec
mov
ja
je
mov
sub
adc
insl
out
arpl
ss
sub
cmp
pop
lock
shrb
jns
cmp
mov
lds
sub
pop
movsb
icebp
mov
shlb
loop
scas
pusha
push
xor
ljmp
add
movsb
push
mov
aas
mov
jb
push
pop
lret
fistpll
and
jmp
lret
sub
in
cwtl
outsb
adcl
dec
andl
fisubs
adc
mov
add
into
pushl
fmull
mov
dec
pop
jne
addb
mov
sub
iret
push
hlt
jecxz
sbb
fwait
popf
mov
outsb
xor
mov
and
or
xchg
imul
cmp
fsubrs
dec
lds
xor
shll
push
xchg
scas
psrad
das
std
std
xchg
lds
pop
loopne
std
and
sbb
in
pusha
idivl
xor
sbbb
jnp
mov
or
fstpl
sbb
jo
sub
mov
cs
and
movsb
inc
les
lods
int3
sbb
cli
addr16
lods
pop
shl
sub
sbb
das
push
int
cmpsb
dec
out
bound
jae
adcb
rorl
jg
js
inc
imul
adc
sub
sbb
je
mov
xlat
pop
shlb
pop
jne
movsb
add
sbb
pop
mov
or
dec
jg
cmp
and
mov
mov
or
int
or
test
mov
lods
loop
xor
add
mov
mov
push
and
adc
mov
lds
fistpll
or
clc
pop
jecxz
xor
out
inc
and
test
pop
mov
inc
insl
test
dec
cs
mov
push
stos
pop
iret
mov
inc
popl
pop
mov
and
pusha
mov
cmp
add
cmp
cltd
push
insl
or
cs
mov
and
push
cmp
repz
imul
addr16
mov
sbb
insl
push
loope
xor
mov
sub
jmp
insl
out
jg
sub
je
mov
clc
pop
test
test
cmp
outsb
movsb
data16
scas
out
push
adc
mov
xchg
cmp
test
popf
lea
repnz
mov
sub
xchg
jl
dec
jns
lcall
push
push
cmp
outsl
dec
dec
jo
push
icebp
out
adcl
jb
call
rorb
xchg
leave
xor
aam
xchg
add
test
loop
xchg
movsb
mov
test
lods
shll
decb
faddl
jae
inc
jb
mov
adc
xchg
in
pop
pop
lods
mov
adc
negb
imul
into
sub
and
fst
out
nop
scas
dec
dec
and
push
and
lret
shl
fimuls
aad
jnp
mov
ret
adc
xor
sarb
jl
fwait
xor
rcl
jne
or
xor
push
ja
aaa
insb
jg
mov
inc
jl
inc
sti
push
push
insb
inc
pop
fists
outsb
dec
clc
popl
inc
shrl
in
sub
shr
dec
leave
push
xchg
mov
lret
cmpsb
or
test
idivl
push
bound
cltd
fsts
xor
xchg
lods
aam
ja
jmp
xchg
cltd
mov
inc
push
nop
jecxz
jge
mov
imul
dec
test
das
inc
lahf
xor
ja
xchg
xchg
pop
push
cmp
insl
jbe
or
cmpsl
xchg
xchg
outsb
dec
int3
mov
xor
and
cmc
jno
fstps
jg
cmp
push
popa
push
daa
mov
sub
pusha
movsl
jge
pop
mov
vpshuflw
sahf
inc
shl
jb
je
cmp
xchg
jmp
mov
mov
loope
or
jle
aaa
dec
mov
imul
cli
dec
sub
insl
adc
int
test
bound
das
sub
aad
sahf
inc
xor
lahf
fsubl
and
shlb
out
hlt
iret
adc
fxam
sbb
push
sar
insb
clc
icebp
test
scas
dec
jns
sti
and
stos
insl
cld
push
pop
add
or
rcll
jae
popa
pop
add
mov
push
stos
mov
ret
test
cmp
adc
imul
jne
add
xchg
ljmp
ljmp
lods
es
popf
sar
push
cmpsb
add
sbb
daa
mov
jbe
push
adcb
js
mov
fs
push
xorl
sbb
lea
push
dec
clc
mov
pop
mov
cli
adc
dec
adc
jl
out
dec
dec
or
out
or
in
test
xor
push
jmp
fsubrs
jns
cli
mov
pop
movsl
xchg
sbb
aam
lahf
repnz
data16
iret
ja
outsl
cmp
loope
maskmovq
notl
jle
sbb
cmp
cli
jmp
inc
cs
repz
mov
aas
adc
bound
xchg
sti
mov
daa
or
push
add
clc
push
jmp
mov
xchg
push
rcrb
xor
data16
mov
or
cmp
int3
dec
inc
pushf
loope
aam
add
mov
mov
adc
mov
stos
sub
inc
push
jno
outsb
pop
outsl
movsb
dec
cmpsb
scas
pop
fwait
bound
or
mov
imul
setg
jmp
jb
xor
sti
push
and
jbe
push
pop
jnp
bound
imul
repz
add
dec
mov
mov
xchg
push
cmp
shr
sbb
push
test
scas
ret
mov
pop
call
jnp
cmpsl
pop
adc
iret
pop
sub
imul
loop
aad
cli
jns
cltd
sub
int3
mov
out
loop
xchg
das
cs
or
cmp
sbb
ror
in
mov
add
cmpsb
dec
or
xor
sbb
pop
and
push
or
fildll
out
out
movsl
ret
xchg
fucomi
add
jo
pop
ret
std
mov
pop
and
mov
aam
push
push
pop
mov
xchg
dec
pop
pop
xchg
fstl
adc
sbbl
test
leave
out
pop
icebp
jle
mov
aaa
cltd
mov
xchg
xchg
mov
mov
lahf
push
leave
sbbl
jmp
es
jnp
sub
xchg
ss
fnsave
mov
or
ficoml
add
shl
jae
lods
pop
inc
nop
aaa
push
js
jne
cltd
push
push
dec
xor
mov
ficompl
cld
arpl
push
mov
repnz
fwait
cltd
xchg
es
inc
ljmp
outsl
ret
out
jne
mov
aam
mov
into
fistl
add
mov
mov
xor
incl
enter
hlt
adc
push
leave
add
jns
dec
and
addr16
and
call
pop
or
cli
xchg
repz
xchg
jle
outsl
pop
outsl
push
add
mov
cmp
mov
inc
jl
ret
incb
in
cs
jne
pop
inc
cltd
insb
js
push
cmp
xchg
xchg
jecxz
mov
sbb
std
jns
sbb
lods
scas
jo
dec
cs
push
or
in
cmpsb
in
jbe
sti
push
jbe
sbb
push
xor
in
adc
test
push
retw
push
dec
arpl
xor
add
iret
ja
and
fs
pop
in
mov
pop
out
mov
push
pop
sub
pop
std
and
out
in
xlat
adc
sub
push
and
int3
test
jg
mov
ror
cwtl
notb
idivl
in
fdiv
out
xchg
in
dec
aaa
inc
int3
xor
mov
test
add
cmp
lea
or
sub
mov
mov
movups
adc
lods
push
bound
add
inc
ficomps
sbb
pop
mov
jmp
cmpsl
das
and
iret
cli
sbb
and
hlt
inc
pop
popf
jb
push
pop
cmc
jg
pop
mov
sbb
add
inc
movsl
xchg
mov
mov
iret
out
aam
iret
fsubrp
mov
fimull
jnp
push
cs
bound
cwtl
test
cmc
cmp
add
mov
rcrb
mov
negb
adc
mov
daa
add
imul
inc
test
mov
stos
xorl
fs
mov
aad
dec
mov
iret
mov
movsl
lods
sbb
push
sbb
xchg
push
ds
call
push
popf
mov
leave
mov
xchg
xchg
and
stos
xchg
push
dec
ret
push
movsl
test
js
xchg
push
out
jmp
int3
ret
jo
stos
mull
loope
imulb
dec
inc
cmp
xlat
cmpb
repz
mov
xor
lea
mul
adc
sub
aas
lds
inc
push
rcll
sbbb
fnsave
pushf
fdivl
cmpsl
mov
or
outsb
adc
xlat
repnz
mov
jp
mov
in
adc
lret
inc
fmul
jle
cwtl
test
fnstsw
sti
aad
inc
xor
sbb
adc
and
addb
mov
insb
sbb
rorb
pop
aad
cwtl
test
cmp
pop
in
xchg
imul
stc
sub
xchg
inc
push
les
push
int
mov
aam
cmp
pop
dec
push
enter
mov
aad
or
xor
mov
pop
in
cwtl
outsb
imul
cmpsb
add
into
inc
or
sarl
dec
push
icebp
and
or
jae
movsb
xchg
inc
out
and
inc
mov
outsl
or
cmp
xchg
fxch
movsl
aad
bound
movsl
in
mov
inc
divl
jecxz
insb
repz
imul
jge
sbb
cmc
dec
xor
popa
push
sti
sarb
or
mov
pop
shlb
loopne
and
pop
lret
xchg
rcrb
pop
test
gs
ljmp
xor
jae
repnz
sub
jecxz
daa
cld
test
push
xor
push
cmp
mov
imul
inc
gs
sbb
cmp
orl
popf
mov
shll
fisubrl
push
xchg
das
or
push
gs
sub
push
pushf
push
iret
test
or
out
popa
cmp
dec
sbb
cmp
cmp
mov
inc
and
je
sbb
scas
and
ret
and
mov
loop
or
cmp
pusha
inc
cli
inc
iret
mov
or
sbb
or
xlat
mov
popa
lcall
std
or
jmp
jl
clc
push
icebp
and
ljmp
orl
cs
mov
cmpsl
jb
add
lahf
inc
add
xor
xchg
rorl
scas
into
cmpsb
divb
movsl
and
mov
roll
adc
jae
out
push
clc
or
push
roll
scas
fisttpl
cmpsb
sarl
ja
inc
fs
bound
decb
push
fs
fldcw
cltd
add
cltd
jns
std
icebp
push
dec
mov
in
testb
pop
insb
jmp
shr
adc
inc
sub
mov
xor
ret
push
shll
sti
outsl
mov
fs
mov
out
arpl
mov
shrb
pushw
ret
mov
mov
ljmp
outsl
jg
sub
cmp
push
ds
clc
imul
out
fstps
push
lret
movsb
pop
push
insl
ficompl
dec
pop
sbb
loopne
and
pusha
mov
cmp
push
pop
imulb
aaa
xor
jecxz
outsl
xchg
and
orl
add
ds
in
imul
neg
mov
loop
fs
jne
jns
xor
sbb
sub
pop
insl
test
cmpsb
call
dec
mov
test
and
fdivrl
fwait
pushl
cmp
mov
hlt
push
imul
icebp
cmp
adc
jle
adc
jmp
or
xlat
sbb
das
and
push
loopne
ficomps
movsl
aad
xchg
inc
gs
add
addr16
sbb
movsb
and
lcall
xor
ss
stos
push
add
adc
add
sahf
xor
cld
pop
inc
inc
push
clc
cli
mov
pusha
inc
or
inc
mov
mov
pop
sub
test
hlt
pop
iret
mov
jmp
insb
push
pop
or
cmp
add
daa
mov
adc
std
cmc
inc
jnp
lock
roll
and
dec
ss
int3
add
iret
cwtl
jo
mov
xchg
jne
addb
push
mov
pop
dec
sub
xor
pop
movsl
cmp
fdivrs
sahf
cmp
xchg
xlat
in
popa
cld
inc
scas
sbb
jl
ret
push
lret
enter
push
fidivrs
adc
fcmovb
mov
lds
testb
lahf
cltd
mov
lret
cmp
xchg
rcl
inc
data16
and
xorl
pop
ds
jnp
cs
test
xchg
jecxz
mov
dec
cmp
and
xchg
xor
or
int3
jmp
dec
imul
dec
mov
dec
and
xorb
pop
stos
mov
sub
adc
sbb
cli
dec
mov
push
adc
addb
pop
out
cmp
inc
mov
xor
sbb
insl
pusha
mov
jg
arpl
mov
mov
jmp
mov
adc
mov
sub
pop
pop
ret
mov
and
sub
sub
pop
ret
mov
fwait
lods
cwtl
cmpb
dec
jo
xchg
test
idiv
pushf
dec
jge
cli
cmp
add
pop
mov
xor
mov
iret
insl
outsl
gs
sbb
cld
mov
sub
loop
popf
frstpm(287
js
test
add
inc
push
jns
push
fdivs
mov
xchg
mov
jge
sub
jge
xchg
pop
adcl
testb
int3
xchg
in
nop
xchg
push
push
push
in
sar
ljmp
adc
sbb
add
test
ja
lods
push
jno
push
dec
dec
push
pop
inc
sub
test
mov
push
sub
jle
add
mov
mov
sbb
aam
sbb
sub
out
rol
addr16
jp
cmp
rorb
jle
sub
rolb
sar
std
fistps
pop
sbb
and
insb
xor
cs
sahf
daa
imul
dec
adc
pop
mov
mov
mov
rorl
or
nop
or
in
dec
pop
out
push
insl
sbb
pop
pop
add
sub
in
sbb
rep
jmp
push
dec
pop
test
leave
mov
outsl
mov
cmpl
out
inc
mov
lret
loope
ja
and
xchg
lret
or
xchg
nop
daa
loope
jo
test
lods
add
out
cwtl
lods
movsl
pop
je
lea
aas
pop
sbb
scas
sbb
nop
pop
sbb
push
add
jb
sbb
cmp
mov
inc
jo
xchg
pop
enter
popa
pop
fwait
cmp
and
push
add
faddl
ljmp
movsb
int3
pop
data16
cmp
loopne
mov
xchg
or
and
sbb
or
fcompl
and
sbb
pop
dec
xchg
fstpl
ret
in
or
sub
rclb
test
sub
adc
out
jne
loope
shll
jnp
call
pop
test
mov
mov
icebp
aad
icebp
pushf
lret
jmp
data16
and
ds
and
outsb
xorb
mov
gs
dec
invlpg
sbb
xchg
es
out
cmpsl
rcr
icebp
fsubrp
cmpsb
stc
jl
inc
sbb
es
cmc
jle
subb
xchg
mov
inc
xchg
add
adc
push
add
adc
cwtl
jo
pop
xor
ljmp
sub
xchg
jns
mov
hlt
jmp
push
adc
cmpsl
xchg
pop
jmp
mov
mov
and
int
sbb
dec
out
xor
adc
pop
insb
pop
xor
rcrl
shll
loope
cmp
pushf
int3
or
leave
jp
xchg
adc
adc
and
push
out
scas
jno
jo
inc
jmp
add
or
cmpsl
aas
xor
loopne
mov
xor
ljmp
dec
push
dec
ja
hlt
in
or
mov
jmp
pop
adc
jle
jmp
jo
add
pusha
inc
sarl
xchg
jl
or
cmp
movsb
sbbl
mov
xchg
js
inc
roll
mov
mov
cmpsb
xor
sbb
int
sbb
enter
outsb
push
xchg
arpl
cmp
or
pop
pop
mov
jg
ret
sub
mov
push
jl
adc
out
shl
dec
sbb
mov
leave
adc
jbe
std
rcll
mov
jno
xchg
and
and
inc
jle
mov
cmp
insl
jb
jl
je
pop
and
mov
push
push
imul
mov
ja
dec
loop
sub
lock
ds
neg
aad
jns
testb
lock
es
sbb
into
jb
push
cmpsb
mov
imul
sub
pop
push
jmp
stos
and
adc
fs
daa
dec
xor
dec
cmp
out
push
repz
or
add
decb
mov
aas
and
fildll
push
dec
lods
inc
ret
pop
jl
jmp
xor
fiaddl
imul
and
shll
dec
sub
push
dec
leave
adc
lahf
adc
mov
enter
dec
xchg
pop
loop
icebp
inc
xorl
dec
add
fstenv
xchg
mov
aam
shll
push
xor
xorl
repnz
fcompl
lods
scas
mov
adc
lret
lea
daa
negl
pop
fs
mov
inc
stc
cmp
jbe
out
jmp
xchg
sti
cmp
rclb
mov
pushf
inc
or
push
insb
inc
pop
inc
fimuls
push
dec
jge
sti
ds
lock
rclb
mov
sbb
les
mov
cmpsb
gs
jle
std
sbb
inc
xor
xchg
dec
or
andl
dec
xchg
mov
add
dec
jecxz
rcll
movsl
test
xchg
or
outsl
mov
mov
lret
and
jecxz
cmp
aas
imul
andb
inc
mov
dec
int3
fsub
push
loopne
adc
enter
js
into
xor
arpl
xchg
into
pusha
gs
loope
in
push
fwait
ret
xchg
dec
cwtl
mov
jae
xchg
push
outsl
icebp
ss
jecxz
lds
hlt
mov
lcall
sub
mov
fxch
jl
sbb
push
mov
lock
and
mov
mov
arpl
in
mov
xchg
es
inc
and
test
lock
adcb
jle
mov
movsl
arpl
add
js
es
cmp
out
jp
popa
sub
xchg
rorb
lea
xchg
jg
cmp
xchg
lds
dec
call
pusha
and
icebp
insb
jge
aaa
in
mov
mov
push
mov
cmpsb
xchg
mov
push
xor
into
mov
out
test
push
sub
push
cmp
call
cmp
mov
sub
test
stos
add
sbb
fidivrl
popf
xor
xchg
rcrl
mov
jp
das
pop
adc
push
jp
movsl
mov
scas
leave
mov
push
sub
add
and
iret
loopne
stc
xor
repnz
or
sub
ds
iret
fbld
test
sub
lret
in
stos
addl
stos
mov
data16
aad
out
out
or
ret
xchg
dec
in
pop
loop
xor
pop
sbb
pop
cltd
and
push
loopne
dec
adc
jle
sbb
pop
pop
hlt
in
outsl
sbb
sbb
sarl
add
mov
pop
test
mov
popa
inc
jae
mov
mov
fld1
popa
enter
nop
mov
leave
jl
insl
out
mov
fmul
int
pop
outsb
in
rcll
fwait
push
xor
pop
je
cmp
out
pusha
test
sbb
sub
sti
sub
or
incb
ljmp
mov
std
adc
xchg
jp
jp
popf
jnp
mov
or
lea
fdivp
call
aas
sub
pop
outsl
sbb
push
iret
repnz
inc
ficompl
les
lock
test
mov
sbb
and
inc
mov
in
pop
hlt
shrb
aad
mov
lea
jbe
mov
fs
out
add
test
add
int3
xor
test
inc
jno
lret
and
fwait
add
xchg
add
in
fmulp
xchg
pop
loope,pn
xchg
in
jb
sbb
iret
dec
aad
dec
loope
aaa
popf
cmp
mov
lods
movsl
bswap
or
or
pop
mov
push
rcll
popf
cmp
jp
adc
mov
jae
sti
inc
shl
in
adc
lea
outsb
out
icebp
xchg
pop
aas
mov
mov
mov
jae
add
push
jge
push
push
inc
jmp
scas
sbb
stos
lret
pop
pushf
fistpl
inc
aam
sbb
dec
push
int3
insb
cwtl
pusha
cli
mov
and
ret
pushf
insb
pusha
fisubrs
dec
dec
xchg
repnz
pop
push
push
push
cmpsl
push
cmpsl
xor
xchg
cmpsl
pusha
ja
test
and
and
mov
adc
shrb
lahf
daa
addl
add
lret
mov
gs
loopne
or
sub
jnp
popa
test
ds
in
push
dec
and
pop
rcl
movsb
stos
mov
lret
test
or
and
mov
xchg
jns
out
roll
fs
add
in
addr16
nop
rcrl
pusha
out
rcl
sbb
mov
mov
mov
push
clc
lret
jmp
xchg
xchg
mov
and
int3
push
iret
fmull
and
mov
sbb
fmull
push
xor
pop
imul
stos
push
mov
sub
cmc
push
push
fmulp
or
mov
ss
add
push
mov
jo
in
testb
xchg
lret
inc
mov
xchg
dec
sbb
sbb
dec
cmp
mov
ficoms
sbb
pop
jbe
xor
dec
dec
cmpb
cmp
cld
pop
sbb
xchg
sbb
sbb
cwtl
cmpsl
sub
test
orl
pushf
xchg
cld
inc
dec
call
bound
jne
inc
adcb
fistpl
movsl
and
lea
popa
in
mov
pop
adc
cmpsl
jp
sarb
mov
test
xchg
jmp
bound
or
push
sbb
cmc
jecxz
shlb
int
es
pop
mov
jb
dec
out
orl
adc
mulb
addr16
mov
rcll
cmc
and
ljmp
stos
push
into
add
mov
add
pop
xchg
jecxz
lcall
adc
cltd
in
mov
push
mov
sub
pop
enter
lret
stos
jmp
sarb
pop
and
pop
inc
pop
push
push
jge
xchg
fidivrs
cmpsb
inc
sbb
lahf
aas
push
je
xorb
in
pop
stos
xchg
bound
mov
leave
pop
mov
iret
enter
dec
inc
xor
lret
in
pop
mov
out
mov
inc
jg
nop
fnstenv
les
jbe
jg
and
pop
lcall
mov
loope
lret
insl
das
mov
mov
sbb
test
push
stc
inc
jo
xchg
mov
lret
lahf
popa
xor
cmp
xchg
sbb
add
add
mov
mov
fnsave
pop
dec
xor
bnd
dec
xchg
jns
lods
dec
jecxz
inc
push
and
or
shll
pop
test
sub
incl
in
sub
pop
pop
xchg
fcoms
xor
mul
in
xchg
add
jge
and
mov
jne
sub
xchg
movsb
mov
stos
mov
add
mov
test
mov
outsb
pop
pop
mov
in
out
out
pop
adc
add
mov
xchg
push
sub
mov
jl
adc
mov
xchg
inc
mov
jb
add
cltd
fidivs
movsb
add
filds
sbb
mov
mov
outsb
hlt
in
call
dec
xchg
xchg
push
inc
clc
stos
mov
cmpsl
data16
sub
xor
xor
test
cmpsb
adc
sbb
xchg
dec
mov
daa
mov
mov
jle
add
dec
lea
xlat
hlt
jge
nop
mov
jp
test
sub
xchg
or
jle
or
sub
aad
or
or
cmpsb
fsub
and
out
inc
arpl
test
sub
pushf
aad
fwait
or
lcall
test
fdivrs
cmpsl
xorb
fidivs
lret
dec
push
mov
sub
pop
in
jg
add
repz
xchg
call
dec
sti
xchg
imul
shlb
cwtl
ja
daa
jmp
hlt
aaa
sub
or
mov
dec
lret
incb
rorw
lret
lods
push
rclb
stc
mov
scas
mov
jp
pop
push
fadds
into
stos
mov
jmp
push
rorb
mov
mov
xchg
pushf
mov
cmpsl
in
inc
in
sbb
add
lret
iret
stc
fstpt
fcmovnu
dec
inc
fisttpl
repz
scas
lcall
xor
mov
sbb
incl
nop
mov
or
pop
sbb
scas
dec
call
add
lods
jp
inc
pop
fildll
push
sub
adc
popa
pop
andl
popa
jb
push
imul
fisubrl
fcompl
sarl
gs
xlat
mov
mov
data16
rcl
push
inc
hlt
cmp
cmp
pop
ds
in
sbb
jge
jmp
add
push
out
mov
addr16
daa
outsl
mov
fidivrs
jb
cmpsl
fdivrp
setl
pop
xor
rclb
popa
nop
cltd
cmpsb
movsb
rcrb
lret
cmc
idivb
test
mov
out
inc
shll
push
arpl
sub
add
mov
stos
push
and
sub
jb
mov
adc
xchg
push
pop
scas
movl
je
fidivrs
popf
fisubs
aad
sti
shl
add
sbbl
repz
call
xor
clc
gs
add
pop
shrl
cwtl
push
push
faddl
sti
xchg
in
dec
repz
popf
pushf
pop
lods
or
std
lret
lods
je
sbb
push
shlb
stos
jne
cmp
and
imul
or
test
test
sub
into
cmpsb
mov
mov
mov
inc
mov
mov
fidivl
lds
mov
add
mov
out
pop
aaa
mov
in
iret
lods
add
shlb
out
or
jl
aam
lret
xchg
jl
jmp
mov
jbe
test
ja
mov
jp
mov
sub
lods
lret
cmp
inc
mov
ss
and
or
test
adc
inc
gs
jge
jnp
lcall
fsubrl
aam
clc
and
ss
sahf
mov
in
fnsetpm(287
sub
and
sub
pop
cltd
xchg
jmp
mov
lds
xor
jge
mov
or
and
inc
bswap
mov
cmp
xor
pop
cmp
mov
arpl
orl
pop
flds
xor
mov
dec
dec
nop
movsb
aas
shl
lret
pop
jbe
ja
ss
sub
sahf
sbb
mov
imul
inc
shrl
es
sbb
pop
dec
icebp
clc
jb
cmp
jg
sub
xor
sahf
xchg
push
or
out
jge
dec
lret
adc
mov
push
jne
inc
test
sqrtps
push
push
mov
add
add
mov
ljmp
into
pop
in
xchg
into
arpl
pop
pusha
inc
dec
dec
xchg
push
push
or
sub
cwtl
call
lds
jns
xor
test
push
iret
insb
fists
outsb
cmp
push
inc
mov
inc
sub
pop
in
and
ds
divb
push
jne
sub
cmp
test
mov
lret
xchg
xchg
mov
adc
mov
sub
das
xor
sbb
int
xor
das
movsb
rcll
lcall
test
popf
adc
and
push
inc
aas
adc
icebp
jae
out
add
push
xchg
xchg
or
xchg
outsl
unpcklps
dec
inc
fildl
lock
ror
and
pop
xchg
outsl
jecxz
cwtl
xchg
outsl
jb
sbb
aam
inc
stos
and
sub
mov
popf
cmp
mov
test
mov
jnp
cmp
rcl
aaa
out
repnz
add
and
dec
mov
pushf
aas
sub
cld
movsl
ljmp
adc
sub
in
call
dec
sbb
jecxz
pusha
loop
mov
shl
dec
xor
mov
and
sub
xor
add
out
push
inc
add
jns
mov
sub
fsts
cmp
sub
xor
mov
test
rcrl
sti
cmp
inc
add
cld
or
aas
mov
dec
hlt
sbb
jne
adc
sub
imul
and
gs
mov
out
pop
push
jecxz
enter
push
jno
mov
popf
rep
mov
add
cmp
or
cmp
mov
fcmovne
and
scas
lahf
nop
cmp
fwait
lds
adc
push
jns
jns
adcl
mov
mov
pop
xlat
ljmp
pushw
js
push
test
cld
jnp
add
addr16
pop
in
cmp
outsb
subb
mov
cltd
add
out
cmpsb
inc
lods
cmpl
fdivl
scas
push
cmp
ret
in
add
jb
xchg
mov
cmc
nop
xor
dec
test
xchg
dec
cltd
xor
xchg
mov
hlt
ss
fisubrs
mov
bt
lahf
out
push
adc
xchg
in
and
fs
mov
mov
movsl
and
std
scas
pop
mul
mov
cmpsl
push
mov
mov
mov
fistpl
cmp
orb
ret
mov
shll
lods
and
and
clc
mov
packssdw
lods
mov
into
in
mov
ja
jne
jecxz
imul
mov
pop
push
std
je
fcmovnb
sahf
fidivl
cli
fcoms
jns
add
mov
inc
sub
push
in
inc
or
mov
in
mov
mov
mov
xor
and
outsl
imull
pushf
inc
bound
les
add
xor
add
pop
xchg
dec
push
lods
inc
in
not
dec
nop
stos
dec
inc
inc
decb
loopne
call
add
jae
inc
add
sub
repnz
arpl
test
xchg
cmp
inc
orl
add
aad
movsl
mov
inc
mov
adc
dec
cmp
dec
test
lock
mov
mov
cmp
cltd
mov
in
mov
mov
xchg
fnstenv
xor
or
jp
push
into
lds
movsb
xchg
mov
or
jae
das
mov
mov
xchg
in
loope
mov
inc
dec
or
cli
lret
cmp
imul
mov
int
or
and
scas
mov
sub
add
mov
in
fwait
dec
mov
ret
cmpsl
nop
sbb
inc
test
in
mov
dec
xchg
rcrb
mov
into
addr16
adc
scas
sbb
mov
cld
aam
je
dec
int3
add
inc
fwait
sbb
sarl
ficoms
fists
jnp
fsts
push
sbb
mov
out
in
stc
dec
push
stos
xchg
mov
pusha
test
movsb
jge
mov
imul
pop
pop
scas
cmp
push
ret
inc
jmp
rol
sub
aam
jae
jecxz
shll
sbb
icebp
add
iret
push
out
adc
rolb
mov
cs
jmp
pop
in
pop
jns
movsb
pop
repnz
ljmp
out
add
sbb
mov
and
daa
and
outsb
ljmp
int3
and
pop
fs
aaa
ds
cmp
fsubl
aad
enter
lahf
rclb
sub
and
mov
inc
mov
mov
jge
fnstcw
cmc
in
aaa
mov
hlt
mov
lret
repnz
jne
pop
mov
fisubrl
aam
or
cld
jb
fdivrs
mov
xchg
stos
shrb
inc
inc
lret
xor
dec
scas
push
inc
pop
inc
aas
push
mov
movsl
mov
rcl
cmp
mov
inc
mov
xchg
xchg
push
pop
int3
add
xor
xchg
fnstcw
in
sbb
dec
sub
push
push
sub
and
adc
js
aas
test
aad
hlt
test
cli
addr16
nop
cmp
jo
or
cs
push
inc
jle
mov
into
sub
inc
adc
xchg
dec
or
adc
mov
or
movsb
nop
inc
pop
or
lahf
lods
jecxz
pushf
add
xchg
imul
aam
insl
pushf
cltd
out
mov
and
xor
jno
mov
xchg
sub
je
ret
outsb
xchg
xchg
dec
testl
sbb
dec
add
pushl
les
div
ret
jb
push
adcl
push
mov
jmp
fidivrs
imul
leave
xchg
fistpl
add
dec
pop
pop
sbb
xchg
int
xchg
outsl
mov
mov
xchg
xor
loop
lods
xlat
cmp
test
mov
cs
push
hlt
leave
loopne
pop
sbb
fisttpl
mov
stos
and
mov
das
insb
push
xchg
repz
push
add
mov
int3
int
out
outsb
outsb
sti
fs
ror
or
sbb
mov
and
rclb
lods
std
xchg
testb
insb
pop
rorl
xor
jne
cld
sub
stos
push
jne
and
xor
pop
jne
inc
dec
lods
fs
add
arpl
arpl
in
xchg
cwtl
pusha
xor
in
xchg
cmp
mov
subl
rorl
dec
add
testb
incl
sub
push
xchg
js
pushl
push
aaa
std
pop
int3
mov
jb
fcoml
mov
dec
or
stc
aad
mov
mov
inc
rcll
adc
push
dec
ficoms
mov
and
mov
data16
add
xor
cltd
fldt
fiaddl
adc
add
lods
xchg
dec
je
int
lods
xor
stc
adc
push
shlb
inc
xorb
push
push
movsb
insl
cmp
stos
pop
mov
clc
lods
icebp
or
inc
sbb
lods
int
mov
fcoms
sbb
pop
xchg
inc
test
mov
mov
xor
mov
sbbb
xor
ljmp
insb
xor
shll
lret
ret
inc
ret
cmpsl
sub
and
jns
loopne
addr16
cmpsl
adc
cmp
inc
gs
ljmp
call
sbb
repz
das
sbb
std
repnz
sbb
imul
fstpt
or
jne
push
inc
add
inc
scas
sbb
or
lcall
loop
push
outsb
mov
cmc
xchg
pop
outsb
ljmp
in
into
xlat
cmc
stos
cltd
push
pop
loope
pop
xor
mov
popa
fdiv
aas
add
lea
dec
stc
cli
outsb
rorb
xor
test
xorl
aas
sub
sbb
xlat
je
loope
cmpsb
xor
and
leave
repnz
cmp
jge
shr
and
xchg
xchg
bound
scas
fsubrp
push
dec
inc
jmp
sub
mov
jp
adc
sbb
mov
aaa
dec
movsb
jnp
sbb
add
sbb
int3
jnp
insl
sub
es
mov
jmp
outsb
push
sbb
mov
lahf
fistpl
in
push
inc
pop
in
cmp
mull
hlt
xchg
cmp
test
add
scas
mov
cmp
cli
lret
mov
lods
fdivrl
pushl
xchg
int3
mov
scas
add
fsubl
jmp
sub
mov
mov
xor
adc
adc
nop
push
scas
fndisi(8087
outsl
push
mov
mov
cmp
into
int
shl
xor
push
sbb
jnp,pt
data16
fucom
shlb
adc
pushf
xorl
mov
push
call
lret
xor
mov
ljmp
mov
xlat
shl
testl
xor
loopne
ljmp
push
sahf
jmp
aaa
aam
loope
push
sbb
cs
add
or
mov
pop
repnz
inc
out
mov
sbb
sub
mov
icebp
jge
mov
gs
mov
cmpsl
into
push
sub
adc
out
cli
mov
out
push
cmc
sbb
inc
mov
pop
jecxz
pusha
je
push
shll
inc
pop
sub
and
adc
outsl
es
popf
insb
ss
inc
incl
push
movsb
sbb
inc
push
sarl
rol
adc
xor
lods
add
pop
jnp
xor
pop
stos
icebp
mov
cmp
jecxz
repnz
out
xchg
dec
cmp
jno
push
adcb
sbb
test
mov
jae
pop
xchg
mov
std
jns
jns
sbb
test
or
ja
in
shll
nop
aad
repz
fcmovb
xchg
fwait
arpl
icebp
scas
pop
inc
test
mov
cmp
in
bound
cmp
push
mov
cmp
dec
pop
test
imull
push
mov
mov
scas
jne
arpl
mov
lods
jbe
inc
add
out
push
mov
mov
loopne
xor
mov
dec
dec
ds
stos
stc
lea
lods
jns
in
nopl
sub
add
lods
les
fnstenv
std
test
mov
push
ds
js
int
mov
imul
rcrb
lods
dec
adc
mov
adc
in
sbb
insb
lods
rorb
sub
mov
lds
sub
xchg
sbb
je
or
push
dec
in
imul
and
xchg
fisttpl
icebp
mov
loope
adc
push
mov
mov
je
fs
cmp
dec
movsb
mov
mov
adc
out
jg
adc
imul
test
sbb
jmp
int3
movsb
push
adc
test
adc
iret
jae
fldenv
aaa
xchg
xor
pop
ss
cmp
fnsave
adc
jmp
jne
add
mov
adc
sbb
inc
push
inc
jo
cmp
lahf
into
lock
aad
stc
rolb
xlat
cli
sarb
mov
and
andl
lds
mov
cmpsl
inc
adc
test
pop
inc
sub
lock
mov
sbb
mov
lcall
fwait
and
scas
icebp
sbb
lret
call
xor
stc
xchg
or
xlat
fisubs
adcb
jo
jle
insb
jne
js
push
adc
sbb
add
push
repz
sub
mov
cs
js
out
mov
xor
xlat
mov
xor
icebp
and
push
ds
cmpsl
jge
js
ds
int3
cmc
test
ret
in
adc
je
and
adc
rorl
fsubs
cmp
push
pop
negb
aaa
jl
dec
jbe
stos
mov
pop
adcb
xchg
sbb
lock
scas
xor
adc
mov
cld
xchg
loope
sub
bound
adc
push
xchg
arpl
dec
add
xchg
adc
aad
adc
dec
push
add
fsubrl
push
or
dec
push
fs
es
repnz
ja
cli
add
lock
movsl
and
ljmp
jno
dec
xor
mov
mov
xlat
sarl
mov
adc
cs
lods
xchg
out
jbe
xchg
sbb
aas
gs
pop
xchg
jmp
faddl
fcoms
scas
dec
fbstp
loopne
test
negb
lret
jecxz
jp
lds
dec
sub
inc
lds
bsf
lea
ret
inc
jg
in
mov
mov
shrd
jge
lea
cwtl
movsb
fdivp
push
jecxz
push
xchg
xchg
mov
ljmp
stc
add
jmp
dec
adc
mov
movq
push
jle
rcr
out
inc
inc
loopne
adc
mov
cmp
test
adc
mov
inc
lret
sbb
dec
push
fnstsw
xor
lret
sub
daa
lret
sbb
ret
mov
js
dec
add
mov
adc
cmc
sub
aaa
mov
into
dec
jne
xchg
cmp
jo
lret
loopne
js
and
jp
or
push
or
fisttpl
sub
fiadds
aaa
push
and
rcrb
push
jno
push
inc
sub
mov
cli
sbb
rclb
pushf
mov
and
mov
or
cmp
loop
outsl
cmp
mov
mov
fcmovne
std
add
subl
jp
lret
jb
les
fcmovnu
cmp
test
insl
mov
rcrl
push
xchg
cmp
xlat
cld
jmp
je
mov
mov
sti
dec
int
pop
lock
test
lods
sub
pop
lods
mov
enter
dec
or
outsb
lds
mov
adc
dec
push
jle
and
and
add
test
fmul
loop
pop
push
push
mov
xlat
inc
hlt
jmp
in
xchg
test
fdivrs
es
xlat
mov
sbb
push
mov
dec
inc
movsl
or
out
out
les
mov
jns,pt
push
fbstp
dec
mov
add
test
cmpsl
mov
inc
ret
sub
test
jae
dec
inc
ljmp
es
jp
push
cmpsl
lds
dec
pop
pop
jge
cmp
mov
aad
add
xor
xchg
decb
add
lock
dec
cmc
std
scas
pop
dec
mov
cmp
pushf
cmp
aas
movlps
sysret
dec
je
pop
popf
repnz
sub
jle
push
lds
ret
cs
cmp
xchg
cwtl
loop
call
popf
xchg
mov
pop
cmp
push
addr16
mov
bound
sbb
lds
ret
mov
sbb
push
lods
inc
push
inc
xor
pop
jl
hlt
pop
and
mov
inc
std
out
cmp
push
cmpsb
xor
ret
fldl
pop
sub
out
in
inc
push
jnp
sbbb
insl
test
pop
orl
cmpl
add
fstps
adc
inc
lea
sahf
xchg
sbb
cli
sub
jbe
out
sbb
sti
loop
fwait
jp
jb
es
in
xchg
adc
leave
pop
adc
aas
mov
cmpsl
or
push
sbb
mov
stc
lds
int3
adc
cmpsb
dec
test
cmp
jbe
xchg
fwait
ds
jge
lods
cmpsl
and
xchg
addr16
test
xchg
nop
aam
sbb
pop
idivl
sub
es
inc
jp
mov
test
rolb
or
sub
incb
jo
sbb
mov
psrld
hlt
sbb
aaa
lret
push
aam
out
fmuls
popf
inc
jmp
ljmp
aaa
cmpsb
loop
dec
add
mov
out
xchg
scas
inc
and
dec
or
divb
cmp
shrl
xchg
and
decl
mov
faddl
xchg
dec
divb
enter
jmp
shlb
jnp
insb
pop
xchg
dec
lea
jmp
es
loop
xorb
pop
dec
in
fwait
xor
loopne
js
cmp
decl
in
cmp
pop
and
push
inc
std
or
clc
mov
gs
fwait
add
add
cli
or
ud1
mov
adc
sarb
or
das
movsl
push
or
dec
adc
testb
jno
inc
xchg
mov
mov
xchg
test
mov
aas
cltd
mov
ret
mov
lahf
or
pop
decl
fs
inc
mov
jle
out
or
mov
insb
sub
adc
sub
stos
enter
jo
sub
jecxz
ljmp
lahf
data16
es
mov
imul
daa
cmp
mov
aad
jb
cmp
push
mov
lock
jg
in
inc
cmp
xor
decb
lcall
sbb
jae
test
inc
dec
fistps
fsubl
test
push
data16
cmp
mov
imul
add
and
cmpsl
pop
xor
ljmp
mov
xchg
mov
movb
fisttps
mov
inc
div
xor
xlat
ffreep
jl
scas
cltd
cmp
pop
mov
loop
lret
test
in
lahf
push
mov
scas
or
out
mov
jmp
pop
sbb
scas
dec
cmpsl
test
pop
outsb
fildl
jb
insb
jp
and
mov
mov
inc
out
int3
in
and
push
pop
or
sahf
inc
js
popf
mov
fistpl
xorl
nop
xor
sub
jb
xchg
mov
add
cmp
daa
adc
js
pusha
pop
pop
cltd
sbb
movsl
aam
mov
enter
add
jae
mov
mov
jmp
xor
icebp
mov
rep
mov
xchg
jno
jb
fstpt
push
jb
sbbl
bound
dec
scas
dec
push
fucom
fbld
and
sahf
aad
leave
add
into
cmc
mov
sbb
leave
xor
sub
jecxz
jne
push
movsb
lds
cmp
test
inc
cmpsl
or
jge
lret
shr
jae
cs
mov
stc
sbb
in
cwtl
push
ret
jo
pushw
js
inc
enter
rorb
data16
push
jmp
pop
dec
mov
xor
add
cli
push
xor
cmp
push
mov
xchg
dec
icebp
xchg
mov
hlt
mov
call
push
shlb
mov
shl
into
cmpsb
ficoml
iret
pop
sahf
out
adc
adc
test
mov
pop
in
push
cmp
stc
sub
or
cmp
sbb
mov
jl
dec
and
inc
scas
nop
inc
pop
xor
or
mov
cmp
das
adc
sub
enter
scas
test
imul
xchg
mov
aas
xor
add
imul
nop
fsubrs
jg
pop
jns
inc
dec
test
push
mov
sub
jmp
cmpsb
hlt
dec
mov
push
jmp
loop
rorl
jno
rsm
add
dec
inc
add
mov
cmc
nop
dec
adc
adc
cmp
inc
add
repnz
mov
jmp
in
fisttps
add
lahf
pushf
inc
mull
xchg
push
sub
lahf
in
scas
cmp
mov
icebp
add
cmc
add
arpl
stos
mov
dec
ret
push
or
addl
push
sti
mov
popf
push
or
xchg
jb
inc
lahf
fsubrp
mov
sub
push
out
test
xor
and
and
push
and
inc
and
xor
test
mov
fcoms
std
lods
insb
mov
ret
mov
lea
fwait
cmpsl
shr
mov
and
inc
lret
in
ficompl
aad
sub
xor
loope
sub
daa
mov
in
cmc
add
pop
cmp
sub
sbb
lods
cmc
add
xor
push
jecxz
adc
xchg
call
mov
aad
in
mov
lea
fmull
test
sbb
data16
adc
test
in
or
push
mov
ja
xorl
jne
notl
ret
out
insb
test
test
or
aas
cmp
mov
sbb
jp
cmp
aad
fwait
mov
dec
jl
push
mov
mov
inc
dec
sub
nop
mov
sbb
imul
lcall
dec
mov
inc
sarl
pusha
loopne
test
sbb
cmp
loop
cwtl
or
imul
scas
sbb
mov
hlt
mov
rclb
leave
inc
sbb
and
jecxz
add
and
ljmp
out
sub
mov
push
jg
mov
mov
gs
mov
adcb
cmp
cmp
push
std
lods
or
push
rcrl
addr16
and
pop
pop
inc
xor
mov
inc
nop
cmp
or
mov
inc
fbld
jmp
adc
in
jb
jge
stos
jbe
popa
and
cmp
mov
mov
sub
mov
out
inc
hlt
push
xor
xchg
popa
inc
pop
mov
int3
pushf
inc
sbb
notb
push
jbe,pn
dec
call
in
adc
ss
jmp
push
imul
popa
sbb
jl
push
add
pusha
inc
in
sub
imul
loopne
push
sub
or
dec
fwait
dec
rcl
mov
jmp
dec
jne
cmpsl
mov
icebp
rcrl
inc
xor
sub
jl
xlat
and
ret
test
ja
aas
movb
xorb
rolb
mov
jg
lea
outsl
xchg
mov
inc
inc
jg
push
loopne
mov
movsb
jo
xor
lea
cmc
xchg
dec
pop
or
movsl
hlt
jle
jle
xor
movsl
pop
xor
pop
jp
dec
pop
xor
pushf
jbe
pusha
fwait
lahf
xchg
xchg
xor
sbb
or
cmp
addb
mov
out
adc
out
xor
fcomp
xlat
push
into
test
dec
push
int3
xchg
insl
mov
mov
mov
xchg
out
ds
jnp
das
add
or
xor
mov
test
int3
roll
pop
mov
inc
test
fnstsw
mov
outsb
iret
or
outsb
pusha
cmp
outsl
icebp
mov
xor
mov
enter
lock
insl
sbb
pushf
loop
clc
psubsb
add
notb
fsub
sbb
popa
stos
in
enter
pop
adc
ljmp
or
andb
mov
jno
scas
and
or
scas
xor
sbb
hlt
xchg
adc
jno
ja
ret
jge
lret
xor
dec
cmc
cmpsl
lock
out
int3
push
push
cs
mov
or
mov
jp
mov
ret
inc
cmp
in
mov
pop
dec
jl
cli
clc
in
sahf
xor
divb
fsubl
fsub
push
sub
sbb
fwait
pushf
in
lahf
sti
test
fwait
mov
mov
and
push
lret
pop
fs
bound
scas
pop
dec
test
fsubrs
mov
add
popa
mov
lret
idiv
mov
and
out
mov
cmpsb
pop
xchg
mov
cmpsl
xlat
popf
rolb
js
insl
hlt
adc
and
mov
fbld
mov
xchg
sti
jae
test
push
push
aaa
xchg
hlt
adc
arpl
mov
mov
lods
mov
ss
hlt
mov
out
mov
mov
cmc
mov
enter
pop
leave
cwtl
mov
int
ljmp
jp
shrl
ss
jne
icebp
cmpsb
fcmovnbe
rorl
nop
or
fistps
push
jae
fwait
push
and
int3
stc
lret
dec
and
fisttpl
mov
fsubl
daa
xchg
mov
jle,pt
push
mov
movsb
pusha
mov
lods
js
cmp
mov
idivl
lcall
push
mov
sbb
xchg
les
fldenv
int3
jp
and
ficoms
stos
hlt
fnstsw
outsb
ret
dec
jge
push
lret
mov
popf
mov
inc
out
dec
mov
and
jg
flds
insb
call
cld
vcvtpd2psx
les
jno
inc
xchg
adc
cmp
loopne
adc
adc
xchg
dec
testb
inc
loop
jnp
xor
cmp
sbb
js
xor
add
rcrb
lds
outsb
jp
mov
sub
inc
inc
scas
pop
es
fstpt
jb
aad
inc
sarl
pop
push
mov
inc
cmp
push
clc
pop
dec
push
das
jg
pop
sub
cmp
inc
mov
imul
orb
fisttps
or
dec
sahf
inc
cltd
adc
pop
xor
or
push
or
outsl
or
orl
je
lds
hlt
les
test
les
int
inc
sub
jns
loope
adc
les
pop
cld
pop
sub
jle
adc
and
shll
jmp
mov
sti
mov
repz
cmp
neg
filds
std
inc
loopne
sbb
mov
mov
mov
add
mov
roll
loopne
mov
sub
cmp
sbb
cmp
sahf
push
adc
cmp
xchg
pop
std
mov
sti
add
call
cmpsl
cwtl
sbbl
sarl
fisttps
popf
jns
jns
repz
cmpsb
insb
pop
sti
fs
faddl
mov
push
add
test
sub
rorl
fcoml
hlt
xchg
int
rolb
mov
xchg
gs
das
push
mov
cld
or
add
in
pushf
and
mov
jl
orl
push
hlt
mov
shll
stos
sub
xor
setb
in
jne
dec
inc
in
fstl
pop
inc
cmpsl
push
jecxz
flds
rolb
mov
ret
insl
dec
fwait
test
jns
daa
repz
sub
int
sbb
clc
mov
push
gs
sbb
push
cmp
in
sub
bound
cltd
insb
pop
repz
ret
mov
pop
shrl
mov
jle
sbb
mov
aad
ficompl
out
sti
mov
add
dec
push
pop
js
pushf
pop
gs
bound
dec
adc
jmp
insl
dec
adc
insl
pop
mov
sbb
leave
dec
push
dec
fcmovb
ss
ja
push
scas
sub
and
or
bound
or
sar
clc
push
adc
rcl
aad
test
sti
cmpsl
xchg
push
aas
inc
int
jl
mov
adc
rcr
loopne
in
outsb
les
arpl
or
xor
cmp
fcom
call
dec
jg
dec
xor
fs
int
xchg
es
pop
lds
mov
jnp
cli
std
dec
daa
cli
int3
dec
mov
les
push
dec
jg
sbbl
cmpsb
mov
fisttpll
jp
or
addr16
out
ficoms
cmp
fcompl
pop
sarb
out
mov
jge
xchg
ficoms
mov
test
add
or
ffreep
cltd
adc
sti
arpl
xchg
fs
pushf
mov
leave
adc
outsl
lret
or
lret
inc
mov
xchg
push
xchg
in
or
data16
andb
mov
mov
hlt
adc
cli
dec
sbb
add
dec
addr16
push
pop
xor
loope
pusha
and
rcll
cmp
ljmp
fs
adc
xor
lods
pushf
lret
mov
enter
aas
ror
out
jbe
fcomi
out
out
dec
loop
cld
out
pop
mov
sar
leave
xor
daa
dec
mov
cmp
cltd
dec
mov
filds
add
and
pushf
sahf
or
xchg
aaa
add
and
enter
cli
pop
mov
fistpll
data16
test
mov
fsubs
xchg
inc
pop
push
sti
mov
andb
ja
or
and
pop
push
loope
jp
out
add
in
imul
cmpsl
pop
mov
xlat
pop
mov
in
jbe
xchg
cmp
mov
sbb
sub
test
fisttpll
dec
ret
mov
aaa
std
sub
jle
stc
xor
pop
cmp
cs
jno
fistpll
sbb
pop
insb
rcr
test
sub
xchg
add
xchg
mov
jae
cmp
fistps
inc
sub
cmp
mov
pusha
cmp
and
repnz
mov
pop
inc
cmpb
mov
addl
cmpsb
ret
xchg
inc
dec
pop
xor
and
cmp
out
inc
ret
add
push
out
mov
nop
sub
add
add
repnz
test
inc
adc
adc
cs
int3
ret
insb
mov
movsl
stc
popf
adc
push
lcall
inc
sbb
push
cmpb
inc
xor
mov
xor
xchg
mov
dec
xor
mov
xchg
xor
cmpsb
test
add
subb
icebp
fisttpll
outsb
inc
lods
in
fldt
sbb
inc
xchg
jge
adc
mulb
test
rcrb
clc
or
jle
xor
pop
jno
or
xchg
push
add
xchg
push
jmp
ror
dec
jle
cmp
repz
mov
fmull
ficompl
mov
cli
sbb
mov
cmc
xchg
xor
and
pop
cmpsl
je
cmpsl
hlt
adc
and
cwtl
rcll
pop
push
les
mov
das
xchg
xor
das
mov
loope
test
jo
int
scas
loope
lret
push
sbbl
mov
mov
mov
or
xchg
sbb
mov
rcll
sbb
jno
out
sbb
mov
pop
andb
cmp
cmpl
mov
jb
pop
lret
push
or
test
lods
test
int
mov
cmp
sub
jne
fistpl
lds
lods
jo
xchg
incl
sbb
and
sbb
into
sbb
inc
fisttpl
movsb
xor
bound
fisubrs
lea
and
call
push
bound
mov
add
mov
cli
aad
popa
addr16
lds
insl
inc
pop
dec
push
xor
cmp
mov
push
shrl
adc
shlb
inc
loope
pop
hlt
subl
jge
pushf
cmp
dec
popf
addl
dec
loop
mov
dec
dec
mov
push
inc
or
cwtl
mov
push
dec
and
pop
outsl
mov
mov
mov
scas
xchg
dec
fidivrs
in
cmp
inc
in
into
mov
adc
pusha
or
xor
clc
out
repz
test
cmp
repz
fwait
mov
sub
pushf
push
fnsave
incb
push
popa
sbb
xchg
pop
stc
inc
inc
aaa
inc
insb
mov
mov
sbb
mov
mov
add
jge
sub
mov
lahf
push
jle
fiaddl
dec
cwtl
ds
mov
test
xchg
cmc
loop
stc
jle
ljmp
shrb
dec
mov
adc
pop
push
call
add
cwtl
mov
jge
sbb
xor
sbb
jle
cmp
mov
subl
xor
push
add
inc
popaw
std
inc
add
faddl
mov
cmpsb
hlt
and
test
imul
push
mov
mov
jne
add
mov
clc
aad
daa
xor
and
insl
stos
xchg
mov
jp
repnz
mov
mov
add
mov
xlat
xchg
mov
mov
mov
adc
mov
pushf
or
dec
cmp
or
push
push
cs
mov
sbb
mov
into
cltd
dec
pop
call
ret
and
xchg
fmulp
push
jnp
xchg
add
xor
flds
lcall
in
mov
dec
adc
xchg
cmp
mov
bound
sbb
das
push
sub
rolb
adc
dec
dec
add
dec
sbb
imul
int3
dec
dec
pop
pop
pop
sbb
test
mov
lret
loopne
pusha
movsb
outsb
jmp
or
nop
out
mov
in
mov
imul
push
cmp
add
nop
ret
test
xor
adc
xorl
hlt
jbe
shlb
jl
push
xchg
mov
sub
div
sbb
adc
pop
inc
mov
dec
jns
lea
insb
inc
shll
xorl
adc
fisubrs
pop
cld
push
mov
dec
into
fwait
scas
xlat
fldt
lret
enter
mov
jns
faddl
testb
fcompl
aas
inc
data16
je
mov
mov
imull
mov
jmp
sub
dec
out
xchg
lds
out
push
add
jle
das
pop
pop
cld
aam
jecxz
xor
mov
pop
jae
popf
ss
push
aaa
fidivrl
test
xor
dec
stc
pop
mov
jmp
insb
sbb
sub
push
lcall
sbb
mov
push
mov
int
bound
mov
adc
pop
and
fidivs
pop
xchg
mov
jae
jae
jo
fbstp
push
repnz
stc
insb
enter
cmpsl
ds
mov
adc
jbe
mov
pop
in
inc
or
lret
inc
fistps
fcmovu
add
adc
push
inc
add
lret
add
xchg
out
jno
jle
mov
jmp
jb
mov
out
cli
dec
cmc
js
dec
sbb
es
aad
pop
push
pop
xor
test
insb
xor
xchg
add
arpl
lcall
mov
pusha
andl
add
lds
inc
lret
jb
in
mov
push
push
or
add
jg
in
imul
repnz
das
shlb
push
sbbb
sbb
mov
push
xor
mov
cmovae
xor
fimuls
call
dec
lods
lods
push
push
repnz
call
ret
les
insl
jle
rol
inc
sub
iret
mov
ret
sbb
sub
mov
outsl
movsl
scas
pop
mov
mov
inc
mov
frstor
pop
or
outsb
aaa
pop
fisubrl
fiadds
lock
stc
and
f2xm1
loop
incb
cld
fsubrs
inc
xor
fstpl
mov
xlat
outsl
xchg
mov
aam
int3
xchg
inc
ja
xchg
adc
js
xchg
lock
pop
aas
push
fisttpll
inc
cmpsb
dec
lret
jno
jb
call
mov
jne
sub
jecxz
xchg
popa
sub
leave
dec
lea
sbb
cmc
add
push
fdivrs
into
pushf
xchg
aas
sbb
mov
and
call
ror
dec
xchg
push
nop
dec
inc
lods
fstp
inc
xor
mov
cmp
sub
add
out
and
out
push
pop
jo
jl
sahf
push
pushf
xor
dec
add
xor
out
xchg
daa
add
adc
mov
lea
sub
mov
and
cwtl
or
push
pushf
pop
popa
push
or
add
nop
jno
cmp
xchg
xchg
idiv
insb
mov
jge
nop
outsl
push
lahf
pop
sub
lahf
out
xor
nop
xchg
xchg
and
pop
jg
adc
data16
insb
les
mov
addb
sub
mov
mov
xchg
and
push
sti
in
add
and
loope
and
mov
jno
test
movsb
clc
fimuls
push
push
push
push
add
test
mov
pop
pop
stos
sub
loop
fdivrs
sbb
dec
cwtl
push
rcr
mov
or
mov
inc
jno
add
mov
fsubr
sahf
loopne
insl
pop
mov
push
sbb
scas
popa
push
and
outsb
mov
cs
cmc
jl
pusha
push
mov
insl
inc
and
dec
push
clc
fldt
push
xlat
cs
mov
pop
jnp
inc
in
daa
repz
fwait
adc
fwait
test
sbb
dec
out
fstps
leave
xchg
sahf
xchg
fwait
sbb
ljmp
xor
int
mov
xor
enter
push
jle
xchg
inc
push
cmp
int3
fs
aas
pop
popf
das
add
shl
and
std
and
gs
in
imul
mov
fdivl
lret
dec
sub
das
or
sti
push
inc
push
sarl
orb
sbb
shll
leave
pop
or
mov
js
in
aaa
insb
xor
fwait
sub
pop
leave
and
mov
xchg
aad
repnz
mov
xor
inc
cli
pushf
lods
shl
xchg
push
xchg
pop
dec
es
mov
cwtl
or
ret
push
inc
and
inc
lods
addr16
and
and
jecxz
das
test
mov
xchg
aad
lret
mov
lds
dec
or
mov
div
gs
pop
fs
incb
bound
jns
out
or
dec
push
or
mov
mov
mov
push
pop
js
adc
ljmp
push
mov
cli
cli
adc
mov
test
pop
bound
sahf
outsb
and
adc
jg
nop
out
ljmp
inc
aam
mov
xchg
aas
mov
inc
add
loopne
mov
push
dec
test
lret
call
adc
xor
mov
mov
mov
int
pop
mov
xor
xor
shrl
pop
jbe
ja
xor
pop
addr16
xchg
into
xchg
adc
mov
test
mov
or
and
inc
fsubl
notb
mov
mov
sub
fnstcw
in
in
and
repz
call
sub
pop
inc
stos
mov
ss
jo
mov
ret
pop
cmp
mov
into
push
sub
jg
and
sarb
mov
add
inc
inc
aaa
sbb
out
stos
jmp
movsl
shlb
push
out
movups
and
jnp,pt
push
lock
fstl
cmpsl
pop
adc
mov
or
mov
test
push
xor
or
sbbl
std
or
xlat
call
jecxz
jecxz
sub
push
adc
sub
iret
xchg
cli
mov
ss
negl
and
mov
sbb
jno
inc
sub
out
sub
andb
or
out
fcomip
mov
dec
xor
enter
or
outsb
cmp
pushf
addr16
jmp
pushf
cmp
and
mov
pop
cmpsb
jae
imul
jle
or
sub
push
pop
mov
mov
in
xchg
fstps
test
xor
xchg
adc
aam
dec
pusha
and
in
cs
into
push
or
lret
mov
addr16
adc
je
popf
dec
mul
mov
mov
adc
mov
jb
ret
xor
sub
rcr
inc
les
xchg
aas
aam
cld
mov
insl
add
pop
fiaddl
add
lods
push
xor
push
inc
rorb
lods
pop
inc
ds
add
stos
add
dec
jl
jns
hlt
int
inc
inc
fwait
aas
cmc
dec
arpl
lahf
pop
into
push
pushf
out
dec
push
icebp
ja
cmp
test
cmpsl
push
xchg
aaa
xor
mov
and
lahf
loopne
in
popa
iret
xchg
pop
decl
mov
gs
or
mov
mov
movsb
hlt
sub
and
inc
push
insl
lock
mov
out
adc
xorb
mov
or
xchg
mov
mov
in
fwait
or
xlat
jle
mulb
inc
roll
lods
in
shlb
aam
test
pop
and
and
cmpb
pop
xchg
and
pop
jbe
xor
bnd
push
jno
ret
dec
adc
add
aam
mov
imul
aas
fnstenv
or
push
xorb
stc
adc
xchg
jl
test
pop
and
aad
and
pushf
mov
cltd
in
add
jp
outsl
cmpsl
addl
lret
jmp
xor
add
sbb
outsl
fstps
dec
push
fsubrs
mov
into
mov
in
adc
hlt
cmp
loop
inc
dec
clc
push
xchg
cmpsl
xor
or
es
mov
xchg
sbb
adc
jbe
sbb
lock
out
js
mov
repz
sub
adc
lods
and
jae
js
ror
scas
loop
jb
sub
test
lods
push
xchg
insb
dec
pushf
inc
addb
call
sbb
or
xor
nop
mov
push
repnz
lods
mov
test
cs
lahf
mov
mov
xor
lods
xchg
out
fwait
jg
xor
outsb
or
arpl
daa
cmp
cld
jmp
pop
icebp
div
enter
lods
push
cmp
negb
data16
inc
ss
rcll
push
out
mov
add
cltd
or
pop
stos
and
cmp
sub
cmp
or
jg,pt
ret
jae
mov
jo
inc
jo
int3
int
enclu
clc
dec
jo
push
addb
and
in
fwait
and
aas
inc
sbbl
dec
xchg
mov
mov
sbb
cmp
jbe
or
push
mov
or
xchg
dec
inc
cwtl
dec
mov
adc
mov
pop
jbe
orb
ret
jmp
fidivrs
loop
or
add
das
mov
add
fstpt
mov
out
aas
je
pop
fst
movsb
xchg
scas
adc
mov
out
test
pop
push
add
mov
push
mov
ret
mov
lahf
cwtl
jp
roll
int
popf
cmp
test
cs
sub
xchg
pop
rol
xchg
jo
mov
mov
fstpl
dec
adc
icebp
push
push
cmp
mov
rcrl
sbbl
inc
sub
jne
aam
data16
sbb
mov
outsl
ret
xor
ja
dec
add
add
sbb
mov
ficomps
or
les
out
and
or
into
ja
int
jecxz
sub
jecxz
and
fs
dec
inc
inc
sub
orl
add
and
mov
xchg
mov
push
into
insl
sub
fnstsw
jns
jg
insl
cmp
scas
push
imul
pop
sub
int
into
notb
mov
pop
cmpsl
fwait
xchg
into
pop
mov
push
adcl
test
movsb
jg
rcrl
test
sahf
mov
pusha
sbb
or
imul
dec
ret
scas
push
getsec
push
negl
js
pop
jmp
push
std
xor
cmpsl
xchg
es
jp
out
sub
fidivrl
mov
dec
int
or
subb
shrb
pop
mov
ja
jo
or
pop
inc
into
pop
es
mov
adc
repnz
sub
fucomip
cmpl
movsb
testl
lret
xor
pop
std
aam
xlat
mov
mov
jecxz
cwtl
loop
test
cmp
pop
jg
jbe
adc
cmpsl
nop
cmp
mov
push
mov
in
push
jae
fsubrs
mov
or
or
cmpsl
sbb
mov
std
rorb
inc
jg
dec
movsl
fucom
icebp
adc
pop
addr16
ja
mov
aam
mov
cmp
loop
inc
jnp
mov
dec
mov
mull
sub
jno
sbb
movsl
push
or
jle
les
add
xor
test
sub
dec
jmp
push
add
jl
lret
push
pop
xchg
add
dec
fnstenv
inc
movsl
xchg
cltd
or
stos
inc
out
mov
or
into
inc
movsl
test
inc
dec
add
adc
out
hlt
enter
or
jb
loope
lds
addr16
leave
out
loop
into
jne
shll
add
sub
cmp
cmp
jg
leave
lods
out
lock
clc
fcomps
imul
jecxz
popf
clc
pop
adc
cmp
add
ljmp
jbe
push
mov
mov
or
lahf
jnp
add
fadds
mov
aad
clc
and
jmp
sahf
stos
mov
lds
iret
mov
mov
inc
scas
ror
inc
pushf
imul
xor
filds
mov
out
test
jo
adc
bound
inc
xchg
xor
xorl
pop
sub
pop
cmp
and
jnp
and
jmp
outsb
inc
push
jae
jecxz
jno
mov
scas
dec
mov
pushf
insb
mov
subl
cmpsb
jmp
fistpl
testl
gs
cmp
fcmovnu
push
lods
jno
cmpsb
test
push
mov
inc
aam
pop
add
push
fildll
imul
in
push
adc
inc
add
pop
fimuls
push
mov
xchg
fwait
cmpsl
sahf
aaa
fldenv
emms
ret
and
xchg
sbb
mov
mov
cltd
mov
mov
jnp
decb
jle
fucomip
or
sbb
aam
sub
es
aam
fnstsw
jmp
jle
dec
mov
inc
inc
sub
in
fnstenv
push
pop
loope
sti
and
adc
inc
cmp
jne
xlat
jb
mov
mov
mov
jl
mov
cmp
and
push
data16
mov
cmp
jae
dec
sub
outsl
cltd
or
cmpsl
popa
and
cli
xor
dec
loope
adc
push
cmp
adc
xor
push
shrl
repz
fadds
movsb
gs
mov
shl
cli
pop
or
cmp
scas
lock
out
jbe
scas
loop
lods
xor
add
jno
cmpsb
incl
fiaddl
mov
incl
fmull
enter
and
sbb
dec
loopne
repnz
fwait
movsb
mov
jno
jge
inc
ss
idiv
push
jg
lret
fsubr
pop
cltd
inc
lods
shll
sbb
aas
imul
arpl
sarl
std
xchg
or
xchg
cmp
insb
xor
insb
dec
mov
mov
fisubrl
mov
scas
jns
inc
xor
and
outsb
dec
jno
inc
dec
or
fstl
loope
sbb
stc
sub
and
add
ds
fnstsw
fcoml
push
push
mov
jmp
mov
shr
into
fists
inc
in
mov
rcrb
dec
rcrb
int3
xor
mov
mov
ljmp
xchg
js
hlt
jg
insl
fstpl
xor
xor
push
lcall
int3
ds
mov
adc
jbe
cmp
ret
pop
jo
repz
add
jo
push
adc
sub
dec
add
mov
push
adcb
ss
nop
push
push
sub
pop
push
jnp
dec
cmp
mov
int3
xchg
mov
subl
pop
mov
or
outsb
out
ja
popf
xchg
push
call
dec
repz
hlt
cld
fwait
arpl
test
lret
fs
sub
andb
push
mov
lods
aad
add
mov
sbb
inc
fdivl
mov
arpl
into
fadd
or
and
push
pop
dec
scas
sbb
ret
movsb
sbb
jp
pop
pop
cwtl
cs
xchg
mov
shll
adc
adcb
xchg
xchg
xchg
adc
leave
inc
repnz
jb
fstpl
push
inc
dec
jb
je
out
gs
in
pop
push
movsb
push
repz
xchg
ret
jnp
push
mov
loop
dec
bswap
int3
sbb
int3
dec
mov
xchg
jo
sub
loopne
fidivs
lahf
fwait
adc
jae
shll
mov
divl
jae
ja
or
dec
je
ret
sub
outsl
sub
push
mov
mov
pusha
xchg
jno
out
int3
mov
rcll
lret
mov
test
xor
mov
jne
ret
test
test
hlt
fwait
pushf
rclb
ljmp
sub
das
pop
push
scas
fistpl
jbe
jle
ljmp
negb
or
add
cmp
dec
mov
pop
sub
fisttpll
aaa
cwtl
aam
mov
push
jge
xchg
sub
outsb
add
jl
mov
push
push
adc
sbb
aad
mov
mov
jl
dec
push
pop
repz
mov
mov
xchg
pop
data16
jl
std
or
lcall
aad
mov
es
lock
xor
jmp
stos
adc
popf
xchg
arpl
mov
psubusb
fnstenv
ja
hlt
push
add
inc
jge
fbstp
sti
push
mov
mov
lods
add
test
push
pop
xchg
mov
dec
out
pusha
xchg
adc
ja
out
das
xor
or
sti
dec
test
sarl
mov
and
js
ljmp
pop
mov
sub
or
cmp
xor
and
dec
cwtl
leave
inc
cld
outsb
test
xchg
pop
inc
dec
pop
cli
or
cmpsl
inc
push
cmp
nop
decl
pop
add
test
lahf
add
aam
sbbb
scas
push
bound
add
outsl
sti
add
cmp
loope
push
mov
insb
icebp
repz
xchg
push
and
lock
sbb
fadds
jmp
mov
insl
inc
ja
imul
ficompl
sub
call
jae
xlat
and
dec
bound
test
jle
dec
in
lret
repnz
cmp
popa
jmp
jmp
mov
push
jp
push
or
mov
jmp
xchg
ret
aam
xchg
enter
and
or
int
pop
mov
mov
dec
xor
sbb
cli
cmp
cmpsb
cmpsl
fwait
pop
push
outsb
imul
xchg
call
daa
je
xor
lidtl
inc
dec
xor
jle
mov
ja
lret
stos
popa
pop
adc
push
xor
jg
dec
test
in
int
push
mov
sbb
ret
or
inc
shrl
in
in
dec
xor
into
lock
pusha
test
sahf
negl
adc
mov
lret
mov
xchg
xchg
push
clc
and
add
loope
xchg
pop
sbb
rcl
aam
pop
ss
mov
jb
jns
add
lock
jecxz
add
imul
in
add
cmc
and
mov
ret
sub
clc
xchg
xor
test
adc
movsl
or
push
pop
cmpsb
nop
or
xchg
jns
scas
das
or
stos
and
imul
mov
sti
sub
cmp
xchg
or
xor
cltd
xchg
les
ret
les
ret
psubq
xor
fdivrl
mov
mov
or
nop
add
cli
xor
push
mov
push
push
dec
cmp
mov
stc
int3
mov
or
sti
sub
or
cld
fs
mov
lret
aaa
and
arpl
fcoms
std
sbb
ds
inc
mov
push
call
daa
pop
mov
lock
shll
popa
jno
lods
jns
lret
pop
inc
inc
dec
mov
daa
xor
movsl
sub
test
push
data16
xorb
dec
mov
inc
dec
repz
outsb
add
loop
push
adc
jbe
cmpsl
aad
clc
sbb
sti
out
mov
inc
and
stos
fsubp
add
aas
es
xchg
jg
cmpsb
outsl
fwait
xor
xchg
cwtl
add
mov
rcll
mov
je
inc
dec
les
xor
loope
out
int
fisttps
xchg
outsl
or
and
ljmp
and
add
repnz
aad
sbb
inc
pop
sbb
ret
inc
or
pushf
xor
mov
fwait
or
rorb
inc
sti
and
pop
movsl
jge
mov
fdivs
mov
jno
mov
mov
sbb
xchg
push
sub
dec
insl
push
cmp
in
mov
sti
pop
cmp
repz
mov
xor
fwait
mov
mov
movsl
pop
cmp
cwtl
test
shrl
imul
insb
sub
pop
sub
loopne
fcmovbe
xchg
mov
sti
out
fistl
mov
int3
testb
je
sbb
ret
shl
cmp
ja
ljmp
mov
mov
push
and
push
mov
inc
add
out
push
inc
dec
imul
mov
cmpsb
xor
addr16
aaa
mov
adc
arpl
scas
pop
sbb
fldt
cmpsb
dec
cli
aam
xchg
stc
sub
les
scas
adc
pop
test
pop
int3
pop
push
fistpl
aam
lods
mov
lcall
mov
mov
mov
scas
out
js
out
sub
mov
lods
xlat
cs
xor
test
xor
mov
or
mov
dec
enter
and
mov
mov
push
and
mov
ds
lahf
sub
mov
xlat
pop
mov
pop
mov
mov
add
cwtl
mov
lods
mov
mov
cli
xchg
addr16
xchg
xor
adc
loopne
enter
inc
xchg
out
mov
inc
in
mov
mov
pop
ret
add
in
fs
shl
dec
aaa
mov
in
pop
push
sbb
or
cmp
or
sub
xchg
nop
push
dec
mov
jge
jae
pop
arpl
lcall
sbb
cmc
dec
xor
pop
cs
push
mov
adc
test
push
pop
and
fsub
jecxz
dec
lods
or
aas
sbb
and
repz
push
cld
fnsave
scas
push
cmpsb
loopne
daa
jecxz
stc
sub
lcall
adc
or
dec
sti
je
enter
fdivrl
jbe
sbb
xor
je
loopne
jne
out
jp
gs
jb
popa
xlat
fldt
xchg
aad
xchg
inc
mov
repz
insl
pushf
or
pusha
stos
jae
data16
movsb
loop
fadds
shlb
mov
cli
arpl
stc
sbb
add
push
jb
divb
aas
orb
mov
mov
adc
roll
sahf
pop
popa
and
loope
jo
pop
jns
pop
mov
popa
mov
adc
inc
mov
test
lret
rcr
inc
mov
orb
test
sub
movsl
testl
mov
xchg
push
and
adc
xor
push
mov
pop
arpl
sub
push
dec
inc
add
pushf
xor
mov
test
adc
push
cmp
icebp
pop
cmp
fsubl
push
jmp
ljmp
mov
jp
arpl
aaa
mov
and
sar
mov
popf
jge
sub
xor
loopne
xchg
fldenv
jns
inc
xor
jnp
sub
inc
push
movb
lcall
jmp
add
mov
xchg
nop
call
test
adc
aam
ss
stos
fyl2x
das
add
aad
pop
xor
pop
clc
push
ss
sbb
aas
sbb
jp
adcl
mov
adc
push
mov
aam
sbb
mov
call
scas
dec
mov
sbb
xchg
xchg
stos
jg
or
xlat
adc
daa
fs
dec
push
insl
sub
loop
cmp
aad
mov
fidivs
insb
aam
lret
cld
notl
lret
jp
ljmp
add
cmpsl
push
scas
shl
cmpl
or
mov
and
or
popa
into
sbb
imul
adc
jne
mov
mov
and
adc
pop
mov
outsl
mov
lahf
stos
aas
lret
inc
daa
inc
pop
sbb
call
clc
or
popa
setp
mov
push
cltd
rorl
pushf
mov
jo
jecxz
and
and
mov
add
outsl
ret
push
fmul
wrmsr
mov
roll
xchg
adc
cltd
cli
inc
cwtl
pop
inc
orl
jnp
lods
cmpsb
mov
jno
rclb
xor
fcmovnbe
aad
inc
jae
call
push
push
aas
das
and
jmp
insl
xor
mov
mov
dec
daa
xchg
shrb
clflush
adc
dec
scas
js
cltd
rorl
jp
xor
imul
jnp
or
faddl
dec
fcoml
iret
int3
dec
shll
jo
data16
stos
mov
and
stc
test
xchg
cltd
jle
nopl
add
cltd
jl
cmp
aas
mov
xor
dec
outsl
aaa
cmp
pxor
jbe
or
cmc
jl
out
sar
testl
pop
cmp
mov
mov
cmp
fwait
xor
cli
cltd
jnp
pop
pop
mov
fadds
jecxz
clc
pusha
insl
lock
push
mov
sarl
push
mov
mov
cmp
rorb
push
pop
dec
stc
lock
movsb
sub
or
fstp
cmp
fbld
pop
xor
and
mov
mov
mov
push
dec
cmp
sbb
or
imul
fidivrs
mov
lcall
and
aas
push
push
push
pusha
mov
ds
out
loopne
adc
fstpl
test
or
and
lods
mov
pushf
and
test
push
movsb
push
mov
mov
gs
into
fisubrs
inc
test
test
hlt
and
or
lea
jno
dec
mov
xchg
inc
sbb
das
add
inc
sub
sbb
pop
jmp
ja
adc
arpl
pop
jo
mov
cmp
xor
mov
aaa
mov
sub
add
add
cmpsb
rol
mov
mov
xor
fsubrs
mov
mov
sbbl
xor
jne
hlt
pop
pusha
adc
mov
xor
jge
or
inc
xchg
mov
lods
cmp
clc
inc
insl
cmp
in
test
xchg
clc
loop
pop
enter
js
or
iret
adc
call
movb
sub
xchg
cwtl
adc
loope
shlb
cmp
jle
push
stos
jb
adc
push
lcall
ljmp
add
shr
fistps
into
pop
and
aaa
dec
add
testl
das
sbb
mov
mov
sarl
jmp
mov
repnz
aaa
pop
shrl
xlat
mov
pop
ret
movsl
mov
jo
mov
sarl
or
mov
dec
jge
jg
cs
inc
push
xchg
mov
mov
xchg
lahf
in
out
dec
mov
cmpl
sbb
adc
and
sbb
mov
fldt
shll
sbb
dec
jg
mov
mov
sar
inc
and
sbb
nop
fnstenv
cmp
add
jo
cmp
mov
call
mov
sbb
iret
fs
lahf
cltd
pop
adc
pop
push
outsl
cwtl
test
xchg
popf
add
ret
dec
lods
cmpsl
ficoms
sub
inc
push
insb
xchg
mov
sbb
repnz
or
mov
lret
pushf
xor
cmp
pop
mov
leave
mov
adc
cmovge
stos
imul
jecxz
ljmp
mov
mov
sbbb
or
lcall
js
add
jle
test
inc
jmp
je
sub
mov
xchg
in
push
xor
lcall
adc
ljmp
jo
mov
xor
test
test
scas
aam
mov
mov
movq
xchg
cmp
lret
out
push
mov
add
flds
and
jb
cmc
cmpsb
adc
add
push
pop
out
xchg
shlb
lods
shl
test
sbb
inc
pop
and
testl
std
aad
lock
cli
mov
dec
mov
dec
shrl
inc
frstpm(287
dec
leave
jb
dec
scas
mov
add
sbb
filds
imul
hlt
fisubl
cmp
jg
jae
pop
gs
fisubrs
aam
push
outsb
movsb
adc
loopne
push
sbb
cltd
add
xor
aas
mov
add
xchg
dec
mov
push
loope
and
arpl
mov
inc
cmp
hlt
pop
sub
clc
pop
xchg
mov
adc
hlt
mov
test
lret
and
dec
adc
mov
adc
aas
or
dec
jbe
rorl
mov
pop
lcall
shlb
cwtl
jo
shrl
lgs
mov
test
mov
rcll
sub
xchg
rcrl
lea
leave
mov
daa
call
push
jae
movsb
testb
aaa
add
loope
cltd
ficoml
outsb
ja
jbe
mov
outsl
add
in
lods
out
imul
cmp
cmp
test
jl
fucomi
lret
xchg
ret
adc
popf
sub
out
imul
and
insl
mov
sbb
movsb
test
setae
push
and
xchg
repz
stc
lock
jb
out
je
mov
rolb
mov
jno
orb
push
add
sub
push
int3
sbb
xor
and
xchg
or
jae
lods
jge
frndint
sbb
loop
dec
dec
shlb
dec
das
lea
mov
fistps
pushf
outsb
inc
sub
fimull
xchg
aaa
jmp
mov
into
xchg
sbb
xchg
sbb
repnz
out
and
dec
jbe
mov
xlat
and
jbe
pop
sbb
cmp
xchg
cmp
popa
pop
mov
and
in
xchg
les
int3
cmpsl
jle
mov
cld
fistpl
cmp
push
xchg
cli
jbe
add
pop
stos
inc
mov
cmp
aam
insl
and
cmp
sbb
push
cmp
cltd
inc
xchg
daa
sub
pop
bound
sub
push
mov
rorb
fwait
add
int3
pop
test
push
mov
rcll
lcall
sbb
fdivl
imul
pop
subb
or
int
popa
aam
mov
lahf
adc
mov
mov
xchg
mov
test
cs
fildll
test
push
lods
jl
mov
dec
and
add
rclb
mov
leave
inc
outsl
adc
insb
outsl
shl
push
cmpl
in
mov
push
cmp
xchg
mov
mov
sarl
xchg
lret
inc
sbb
popa
sahf
int
jl
cmp
popa
mov
xchg
jne
fdivrs
fwait
or
xchg
shrl
mov
jecxz
xchg
lock
jp
insb
jecxz
dec
adcl
adc
push
xchg
dec
add
pop
add
push
sahf
cs
sahf
sti
mov
mov
jae
inc
icebp
repnz
rclb
jmp
cwtl
sahf
es
rcr
into
push
add
push
bound
xchg
or
or
jnp
mov
movsl
pop
dec
test
adc
lsl
daa
iret
xor
mov
andb
adc
mov
xchg
rolb
int
int
idivb
cmpsl
sub
stos
xchg
cmp
mov
dec
pop
out
and
pusha
xor
clc
dec
nop
inc
push
popf
or
sbb
dec
push
mov
lea
sahf
fwait
jge
addr16
in
push
call
std
sbb
mov
icebp
jo
hlt
loopne
mov
loope
in
inc
test
xlat
lret
cmpsl
push
mov
sub
loop
jbe
aaa
adcb
dec
adc
xor
leave
fsubrs
mov
adc
xor
mulb
gs
ds
filds
filds
sub
popf
repz
das
dec
daa
int3
fsubrp
xchg
sbb
add
fcmovnu
insl
sti
jb
insl
cltd
adc
push
divl
xor
sbb
mov
dec
dec
stos
cmpsb
dec
into
pop
in
xor
scas
lret
push
cmpsb
movsb
cmp
sbb
popa
dec
mov
push
enter
pop
fistpll
xor
pop
and
and
add
rorb
jne
or
mov
sbb
or
add
pop
pop
aad
sub
add
inc
cmp
pop
jno
pop
dec
js
jmp
cmp
dec
cmp
inc
fnstsw
add
cmp
repz
dec
adc
jno
enter
jp
inc
pop
aam
gs
int3
mov
stc
inc
or
inc
je
repz
xchg
cld
fwait
cmc
insl
std
rolb
loope
cmc
pop
loopne
scas
xorps
cmp
lcall
push
add
xchg
imul
xor
mov
pop
mov
adc
adc
push
leave
add
sub
sub
lods
sub
push
sub
add
adc
ret
pop
push
in
test
das
rorl
sub
fisttpl
ds
xlat
test
into
leave
es
inc
nop
mov
dec
or
fwait
dec
daa
ret
test
lds
pop
or
jg
inc
insl
stos
divb
jne
xchg
outsb
sub
jp
data16
fistps
push
mov
leave
leave
and
mov
xchg
into
jnp
pop
ljmp
mov
push
sub
jns
loopne
push
fldt
mov
shrl
ficompl
arpl
movsl
std
sbb
cmp
mov
mov
clc
lret
notb
movsb
adc
fistpl
push
add
out
loope
xor
pop
ds
cmp
clc
notl
mov
dec
or
mov
pusha
fimull
test
je
in
dec
push
xchg
insl
adc
out
xor
fisubl
add
cltd
sti
ficoml
cmp
add
push
xchg
inc
inc
xlat
xchg
bound
fwait
pushw
mov
mov
dec
jb
adc
stc
shl
dec
cmpsb
mov
xchg
gs
jbe
mov
pop
aaa
hlt
xor
sbb
js
dec
mov
dec
leave
mov
push
mov
adcb
loope
push
mov
test
sbb
stc
out
icebp
js
push
dec
cmp
ja
dec
mov
stos
and
popa
mov
ret
push
aaa
insl
add
movsl
loop
lods
incb
xor
jge
inc
jnp
dec
mov
and
xor
push
mov
hlt
mov
jle
mov
jge
xchg
aaa
jp
or
imul
repnz
xchg
jo
mov
inc
mov
cmp
in
inc
ss
lods
adc
push
pusha
pop
xchg
pushf
addl
sub
cli
pushf
jl
mov
dec
stc
or
mov
or
lock
jo
fsts
and
pop
mov
xlat
cmp
ret
subl
aad
push
add
fdivr
mov
filds
shll
adcl
pop
or
jmp
cmp
test
mov
push
mov
popl
pop
cmpsl
pop
push
mov
pop
pop
es
stos
ret
pop
or
push
cmp
xorl
fdiv
rclb
sar
sbb
add
mov
mov
and
mov
or
push
and
ds
mov
adc
jle
xor
xor
je
sbb
rcrl
or
mov
scas
xor
jno
cmp
cmp
imul
out
sub
cmp
rorb
in
mov
xor
sbb
lcall
sbb
jmp
imul
into
jb
and
mov
mov
push
mov
sbb
imul
pop
pop
add
xor
dec
cmp
or
bound
daa
xor
mov
mulb
pop
hlt
rorl
bound
in
mov
push
inc
ja
lods
in
xor
repz
push
in
or
cwtl
les
pushf
add
shrb
fmul
rcr
fnstcw
loop
add
inc
mov
nop
inc
repnz
xor
and
in
push
stos
mov
or
dec
lret
or
mov
cmp
call
mov
sbb
jne
inc
notb
shlb
add
mov
je
push
xor
sub
neg
loopne
lods
sahf
ud0
sub
pop
xchg
mov
pop
push
subl
or
addl
scas
fldenv
sbb
into
mov
movsl
push
icebp
hlt
les
cs
mov
std
test
pop
push
ret
arpl
sub
or
cmp
lret
adc
pop
test
lods
dec
add
loop
push
mov
mov
ficompl
mov
xchg
lret
fisubrl
pop
dec
adc
xchg
sub
decl
imul
adc
imul
or
adc
jns
and
or
leave
shlb
out
ss
xchg
jmp
les
in
iret
or
sub
les
mov
repnz
test
negb
inc
fwait
push
jp
or
faddl
fwait
sarl
gs
fwait
xchg
aas
push
aam
push
sub
dec
or
and
les
adc
test
push
icebp
mov
ret
rcrb
add
push
stos
xor
test
push
bound
mov
mov
lret
jmp
dec
fucomi
mov
push
popf
pusha
fldcw
xchg
bound
stos
call
xor
mov
jne
test
mov
jge
inc
lahf
sti
fistps
sbb
call
insb
xchg
jecxz
mov
inc
ret
fcmovnb
scas
adc
aad
dec
push
maxps
pusha
fistps
cmp
cld
adc
mulb
xor
inc
inc
jbe
ljmp
ret
mov
push
xor
pop
xor
pop
cmp
xchg
mov
ds
jne
cmp
sbb
adc
or
pop
fnsave
dec
nop
adc
jo
cld
hlt
shrl
mov
mov
std
mov
inc
mov
aaa
pop
out
inc
bound
cmpb
fstpt
mov
adc
cmovs
adc
xchg
jl
pop
ja
ficompl
test
adc
cltd
sar
mov
push
test
adc
push
jne
jle
jbe
out
outsb
sub
adc
pop
mov
cmovp
or
stc
mov
mov
fmulp
out
cmp
mov
cltd
pop
test
bound
xor
insb
notb
jl
pop
mov
fmuls
jle
fldenv
outsb
dec
arpl
out
aad
xor
push
xchg
inc
cmp
loope
js
out
sub
mov
std
sarb
jecxz
dec
xchg
push
dec
std
ja
sbb
xchg
outsb
shl
outsl
mov
sbb
andl
adc
addl
les
sub
mov
sub
jl
adc
movsb
std
cld
gs
ljmp
dec
mov
xchg
movsl
icebp
xchg
mov
cmp
std
push
mov
dec
lret
imul
sub
sub
mov
loopne
push
push
orl
es
fstps
fucomi
jb
jl
aam
pop
iret
dec
in
inc
out
pop
insl
test
in
lods
push
and
xor
fisttps
call
fldenv
test
mov
jg
nop
orb
andb
dec
jle
mov
loop
inc
sbb
es
pop
roll
lcall
fdivrl
jbe
jno
dec
and
xchg
imul
cltd
fsubrl
cmc
inc
inc
lret
insb
mov
jns
xor
mov
in
outsb
fnsave
xchg
xchg
lret
push
xor
pop
sub
lcall
cmpsl
test
fists
rorb
cmpb
mov
xchg
fwait
mov
mov
loop
jmp
push
aad
inc
jmp
inc
or
pop
int
aas
push
adc
loopne
dec
or
xchg
leave
ja
cmc
adc
add
sub
notb
das
push
jmp
stos
mov
add
sahf
xchg
icebp
fcoml
sbbl
insl
or
sti
in
pop
inc
xor
cmp
call
shl
xchg
imul
inc
stos
imul
dec
fdivs
inc
decl
cld
rol
shlb
mov
push
sub
gs
push
push
pop
fistps
lret
rcrl
repz
scas
lcall
and
sub
jno
dec
popa
mov
test
sub
cmp
mov
sub
into
in
mov
les
in
scas
adc
addb
out
xor
aam
jg
lret
in
mov
scas
add
xchg
adc
or
xor
ret
loop
dec
sub
and
and
pop
test
inc
inc
ret
orl
mov
out
sbb
mov
sub
test
or
in
sub
mov
loope
jns
xchg
insl
jmp
pop
leave
push
data16
das
cs
lds
dec
rcrb
push
scas
mov
or
lcall
and
push
cmpsb
adc
lea
xchg
pushl
sub
gs
pop
sub
popa
jnp
dec
lock
mov
js
xor
pop
add
hlt
sub
dec
scas
push
jecxz
test
and
push
push
repnz
mov
xor
inc
in
test
loopne
sub
and
rolb
in
arpl
stos
and
lock
push
test
and
cs
cs
mov
adc
push
lret
pop
jge
mov
pop
mov
ss
cwtl
fstpl
mov
pop
mov
scas
ds
lods
nop
xor
pop
mov
pop
or
popa
and
jns
in
test
outsb
jne
jnp
int
rep
fucomi
dec
push
jb
sti
cwtl
loop
push
and
add
mov
xchg
cmp
cmpl
sub
stc
mov
ss
jmp
xchg
insb
js
push
pusha
dec
outsl
cmc
orb
cld
xchg
popf
fimull
cmp
out
fistps
mov
and
clc
xchg
jnp
jmp
mov
push
push
mov
fs
daa
or
in
push
fisttps
lods
push
xchg
dec
iret
stc
lahf
loope
fnstenv
pop
idivb
nop
cmp
sbb
inc
icebp
and
lods
shll
aad
sub
mov
inc
dec
fisubs
add
inc
and
pop
sbb
add
adc
and
addb
mov
inc
sbb
cmpsb
xchg
ss
iret
xchg
mov
jbe
rcrl
out
aad
adc
and
fisubrs
xor
cmp
inc
or
mov
sbb
xchg
sub
mov
popf
lods
aad
dec
and
jecxz
pop
add
in
jmp
cmpsb
cld
or
shl
notb
pop
adc
cwtl
aad
or
addr16
sub
mov
sbb
repz
in
pop
int3
adc
mulb
les
insb
dec
add
push
cld
jge
or
enter
loopne
ljmp
nop
inc
sub
int3
ficomps
mov
sbb
xchg
sbb
pop
inc
dec
adcl
lock
mov
mov
pop
dec
inc
inc
sub
xchg
lea
sbbb
mov
push
mov
xor
or
cmp
dec
push
jmp
inc
mov
pop
jecxz
shll
popf
cs
inc
ja
xor
fwait
jno
jmp
jmp
vmovhpd
xchg
lds
or
cli
push
repz
jmp
mov
sbb
inc
push
cmp
pop
insl
ds
jecxz
mov
lods
scas
int3
sbb
dec
cmp
add
lcall
int
mov
testl
push
sub
jmp
fsubs
xlat
jnp
andl
insb
gs
inc
push
stos
adc
sbb
mov
mov
in
jg
xlat
push
cmp
hlt
jbe
ja
jp
mov
arpl
aas
sahf
pop
dec
pop
fiadds
pop
mov
xor
mov
sbb
inc
xlat
mov
sub
cld
and
cmp
mov
jae
jno
ljmp
lock
dec
aas
test
scas
bound
mov
mov
cli
shlb
in
mov
incl
scas
cld
jb
xor
push
divb
into
stc
dec
adc
sub
adc
inc
mov
loopne
ss
cwtl
xlat
into
into
dec
push
jae,pn
pop
mov
xchg
cmc
mov
std
iret
js
push
pop
ret
std
jmp
add
shlb
mov
adc
jge
mov
sub
jg
fs
cmc
mov
mov
or
test
xor
push
shlb
xor
lods
xchg
jns
cmp
inc
addr16
dec
xchg
jb
jecxz
inc
pop
stc
push
mov
lods
push
xchg
inc
mov
cltd
nop
or
std
ret
add
mov
add
jmp
mulb
js
xor
mov
cmp
xchg
outsl
jmp
sti
jns
fsubrl
mov
xchg
inc
xor
xor
out
push
jle
jne
and
lea
ds
into
dec
adc
stos
jb
insb
pop
xchg
out
inc
mov
adc
inc
adc
sub
out
je
pop
dec
mov
popf
mov
mov
and
pop
dec
nop
add
shlb
push
jge
cmp
loop
pop
pop
xchg
ja
sbb
aaa
stc
mov
lret
stos
sbb
pushw
jae
sbb
adc
bound
repz
loope
cmp
mull
rcr
je
js
pop
lds
mov
jmp
adc
mov
sahf
adc
enter
ret
xchg
jle
les
lods
lret
cmp
sarb
inc
sub
sbb
xchg
jl
cmpsl
orb
mov
inc
jbe
xor
mov
mov
adc
xchg
ja
fsubr
cmpsb
dec
stc
ja
jo
cmpsl
xlat
add
movb
mov
or
aad
xchg
xchg
testl
pop
insb
sbb
dec
ljmp
adc
push
pop
popf
stc
dec
movsb
inc
push
push
xor
in
cmp
cmp
icebp
roll
or
insb
data16
jb
arpl
outsb
mov
test
fs
rclb
test
push
sbb
enter
int
shll
pop
std
push
fwait
push
mov
jp
or
pusha
out
gs
scas
adc
cmp
jnp
push
mov
mov
loopne
lret
jae
mov
ds
mov
push
ror
cmp
mov
sub
sbb
sar
enter
test
movsl
jns
jb
mov
jns
sbb
subb
mov
pop
das
cltd
sub
sbb
or
test
and
mov
cli
sub
into
mov
or
in
inc
jb
add
dec
add
fidivs
mov
dec
cmp
js
int3
push
dec
stos
pop
outsl
shll
sbb
repz
pop
inc
xor
sbb
and
cmp
pop
movb
sub
jbe
or
sub
mov
int3
sub
mov
cmovnp
push
in
jp
or
bound
ror
cmp
push
outsl
xchg
movsb
imul
jle
out
sbb
cld
rcrb
mov
or
mov
das
int3
add
and
xchg
imull
pop
lret
pop
or
inc
stc
fcomps
or
xor
xor
xor
sub
lds
repz
stc
sub
fstpl
repz
xchg
clc
dec
unpcklps
jp
inc
pop
pop
jae
pop
ljmp
inc
jg
cld
lahf
jg
cmovp
fildl
sbb
fwait
xor
xchg
fs
bound
xchg
imul
pop
stos
fistl
ror
jbe
push
xor
or
xchg
push
mov
pop
in
outsb
mov
call
int
add
lds
les
xchg
sbb
pop
sub
and
scas
and
cli
inc
jbe
dec
in
aas
sbb
and
fistl
push
notl
fbld
xchg
pop
push
mov
adc
xchg
aad
pusha
sub
out
aas
mov
jecxz
rorb
hlt
imul
imul
mov
inc
sub
in
xchg
jno
and
sti
jp
jg
inc
movsb
or
ljmp
sub
pushf
pop
lods
loopne
jmp
pusha
ss
cmc
jb
pop
mov
cmc
out
or
and
sbbl
in
es
xchg
lods
daa
push
insl
cmp
out
inc
mov
pop
cmpl
cmpsb
daa
xor
je
push
xor
test
nop
xor
test
je
sub
add
in
in
sub
fiaddl
pop
pop
loope
aam
mov
insb
loop
sub
int3
sbb
out
cmp
pop
xchg
sar
inc
mov
or
sub
ret
xchg
mov
push
pop
gs
test
pusha
xor
pop
fldl
push
das
ret
rcll
test
movsb
cmpsb
inc
cmp
mov
sub
jecxz
xor
mov
aas
push
cmpsb
mov
add
or
ret
mov
insb
imul
add
in
mov
lock
lock
ret
test
hlt
cmp
into
add
sbbb
jmp
lret
mov
add
mov
sbb
mov
mov
stos
xchg
jnp
out
data16
aas
inc
mov
scas
push
lock
mov
mov
adc
and
xchg
add
aas
xchg
outsl
pop
mov
dec
fisttps
test
lret
add
stos
push
divb
rorl
inc
add
dec
stos
out
add
jnp
enter
hlt
dec
stos
int3
adc
xchg
popa
ret
xor
ret
test
xor
mov
jp
cmp
or
sub
sahf
or
cmpsb
inc
popf
hlt
jecxz
loope
dec
sbb
xchg
cld
cmp
inc
fpatan
inc
jae
or
pop
push
mov
push
call
sbb
je
xor
outsb
push
xchg
jle
clts
lods
inc
fsubs
sti
icebp
xlat
dec
test
mov
fs
cmpsb
loope
sbb
sarb
fwait
add
sbb
daa
adc
adc
pop
dec
xchg
xor
adc
int3
mov
pop
nop
cmpb
lock
inc
scas
test
mov
xor
cltd
hlt
lods
stos
rcrl
imul
lahf
inc
mov
test
hlt
data16
movsb
dec
jno
fiaddl
mov
xchg
cld
out
in
xor
adc
testl
cmpsb
mov
rolb
je
adc
into
aad
fs
sub
imul
push
pop
imul
push
mov
adc
sub
add
pxor
cmp
add
test
sbb
lock
insb
icebp
jmp
jge
push
insb
pusha
insb
mov
sarb
in
fld1
stos
je
int3
mov
cmp
outsb
jo
xchg
push
fcom
mov
dec
push
pop
mov
sub
adc
imul
mov
ja
test
aas
ss
ret
xchg
jge
and
mov
add
icebp
fcomp
repnz
std
mov
pop
push
xor
lahf
lds
push
mov
xchg
sbb
out
push
rcrl
sarl
xchg
rcrl
sbb
fs
xchg
pop
mov
adc
mov
push
scas
push
jle
add
andb
xchg
jecxz
push
andb
dec
cmpsb
ja
negl
mov
and
sub
loopne
fwait
andb
pop
negl
and
xchg
lods
sbb
push
xchg
fidivs
push
mov
out
push
or
cmp
data16
stos
repz
inc
je
js
add
aam
or
push
and
jne
jbe
or
adc
out
ret
cmc
out
test
frstor
xchg
addl
mov
mov
stos
mov
out
mov
sub
add
mov
into
sbb
ljmp
call
inc
pop
fnstenv
mov
jns
and
std
daa
ja
mov
dec
and
add
xor
jmp
lock
sbb
jno
in
xor
lcall
ja
pop
jecxz
addr16
out
xor
int3
out
lods
xchg
mov
sbb
dec
lret
aam
mov
pop
orb
orl
test
mov
or
es
nop
jle
fdivrl
imul
negb
movsl
and
xchg
into
loopne
push
int
pop
lds
adc
pop
push
outsl
mov
xor
inc
pop
out
and
out
cmc
mov
leave
in
popf
xchg
xchg
xchg
jmp
add
fsubl
mov
mov
xchg
sub
mov
push
pop
mov
sahf
push
imul
jae
ret
daa
mov
scas
dec
push
mov
push
jg
mov
incl
pusha
repz
negl
je
jg
cs
jne
movsb
mov
and
cmc
mov
iretw
fcoml
xchg
insb
add
lea
clc
add
clc
or
inc
cmp
pusha
rolb
mov
pop
leave
push
mov
or
push
fst
lahf
sub
js
aas
add
xor
mov
pusha
push
sbb
mov
insb
loopne
cmp
xchg
pop
aas
inc
mov
pop
repnz
jbe
xchg
push
sub
mov
mov
call
lret
pop
int3
sbb
lods
sbb
sahf
stc
adc
xor
or
cmp
mov
jge
cltd
lahf
out
sbb
and
ds
sahf
icebp
mov
dec
loope
add
arpl
jo
jbe
dec
cltd
stc
mov
mov
loopne
mov
adc
pop
sbb
sbb
movsl
sub
ljmp
and
enter
push
mov
cmp
xor
call
cmpsb
xor
aam
out
mov
or
cmp
xor
popw
je
push
inc
shlb
xor
fs
orl
xor
and
out
cmp
ja
inc
sbb
cs
ja
and
sub
pusha
in
pushf
loope
repz
cmpsb
pop
jle
mov
push
xchg
int
add
cmp
stc
aas
pop
sub
push
stos
fucom
add
sti
outsl
or
lods
call
mov
xchg
jo
std
or
cmpsl
cmc
test
and
stos
inc
adcl
xor
stos
les
mov
cli
idiv
scas
sub
mov
inc
inc
in
jmp
fcmovne
int
mov
cmp
call
push
pop
mov
popa
mov
nop
jge
mov
movsb
push
enter
in
and
add
and
mov
add
jmp
xchg
adc
dec
imul
jmp
push
xchg
add
push
mulps
lock
adc
and
and
cmpsb
jge
lret
push
negl
es
add
cmp
xchg
jbe
xor
inc
std
ret
iret
add
jl
sti
dec
cmp
or
imulb
add
cld
lcall
aaa
pop
shr
pop
lahf
sbb
add
mov
fnsave
jge
adc
ret
arpl
sub
cmp
test
lods
mov
out
je
nop
int3
lret
cltd
xor
inc
sbb
imul
pushf
test
loope
cmpsb
hlt
adc
jl
cmp
sbb
push
mov
cli
mov
adc
push
xchg
lds
mov
sbb
mov
mov
dec
les
inc
or
pop
inc
lret
adc
cli
push
mov
cltd
or
stos
test
out
ret
dec
pushf
std
popa
int3
outsb
push
xrelease
outsb
or
stos
mov
push
inc
push
test
jbe
ret
pop
clc
and
lods
xor
xor
pextrw
scas
daa
data16
je
cmpsb
or
popf
fcmovu
push
mov
daa
or
sti
das
mov
dec
jmp
pop
xchg
fdivrs
imul
iret
sub
sub
test
pop
and
inc
inc
mov
sbb
pop
sub
cmc
sbbb
cwtl
pop
gs
lret
cwtl
inc
insb
mov
add
outsb
fsubrs
push
test
test
cmpsl
fwait
test
pop
adc
popa
out
in
jno
inc
jns
sahf
adc
stc
in
outsl
fmuls
push
mov
loope
dec
stos
add
adc
int3
fidivl
or
cmpsb
aam
sbbl
imul
data16
movsb
out
sub
ds
stos
lods
inc
inc
faddl
bound
cs
and
mov
mov
xchg
dec
push
out
xchg
inc
mov
ljmp
jbe
push
add
sbb
adc
incb
sbb
fs
bound
loope
fsubl
and
nop
test
insl
addr16
notl
insl
aaa
out
cmc
jl
into
xchg
cmc
sub
inc
push
filds
or
jno
int
insb
mov
in
or
inc
lods
or
lret
ret
cmpsb
insl
pop
out
clc
aam
ss
scas
data16
or
mov
jno
or
es
cmp
stc
out
test
mov
subb
loop
lret
mov
iret
daa
sub
jae
jae
inc
add
xchg
sub
std
in
ret
mov
in
and
mov
icebp
mov
sub
icebp
cmp
loope
hlt
lods
fcompl
push
test
loope
int
xchg
and
leave
push
mov
mov
mov
aas
mov
dec
mov
push
mov
cltd
in
in
fiaddl
mov
sbb
or
jp
pop
das
fisubrs
hlt
add
cmp
data16
pop
jl
cmc
in
scas
jle
lea
add
call
rorb
dec
inc
push
or
mov
scas
and
xor
pop
mov
cs
inc
mov
push
xor
cld
inc
or
in
jl
scas
push
loopne
inc
pop
xchg
addr16
inc
popa
add
and
cli
mov
fiaddl
loopne
out
cltd
aad
mov
mov
in
cmc
add
xlat
repz
mov
popf
and
adc
or
mov
inc
js
push
push
jo
repnz
ja
jg
cmp
std
cmp
aad
loopne,pn
in
fisubl
out
sub
aam
xchg
imul
adc
ljmp
pop
shll
insl
mov
push
testb
cli
adc
pop
ret
sub
ljmp
inc
out
andl
loop
fsubrl
push
inc
push
jo
cmp
out
nop
in
out
jg
cmp
add
inc
notl
xchg
mov
xchg
jnp
push
cmp
mov
mov
ljmp
stos
sarb
mov
jns
jns
popa
cmp
lea
mov
xchg
jo
mov
adc
fstpt
adc
mov
test
sahf
mov
inc
sbb
data16
mov
ljmp
mov
out
mov
ja
mov
push
ja
stos
mov
mov
and
repz
ljmp
add
push
push
cwtl
sub
repz
das
push
lcall
mov
xchg
test
jne
lahf
inc
and
and
je
mov
cli
cmp
mov
mov
fisttps
add
cmp
inc
dec
mov
cld
pop
test
and
and
xchg
popl
push
inc
testb
adc
dec
stc
inc
pop
jge
mov
xor
cltd
add
adc
mov
cltd
push
cmp
test
jnp
movsb
dec
rcrl
xor
mov
add
push
add
pushf
ja
add
xor
jae
pop
inc
and
xchg
vfmsubpd
icebp
repz
sahf
pop
and
ds
xchg
popa
sub
push
xchg
mov
push
ss
cmpsl
dec
mov
pop
iret
pop
repnz
mov
cmpsl
push
push
cs
jg
mov
mov
mov
mov
les
out
js
lret
or
inc
jle
dec
mov
pop
out
push
adc
jb
mov
lds
leave
push
scas
pop
repnz
pop
pxor
arpl
inc
inc
lret
or
int3
popf
dec
mov
inc
inc
arpl
in
in
les
push
push
jmp
sti
sar
mov
sub
fistpll
mov
loop
lret
addr16
inc
out
imul
lret
popa
pop
xchg
xlat
movswl
sub
fisubs
movsl
call
cmp
not
xor
jae
inc
xchg
stos
int
add
mov
jge
xchg
popf
ret
fsubp
sti
jge
gs
mov
sti
mov
cmp
push
lahf
xchg
push
ss
pop
jnp
ja
int3
or
add
xor
cmp
out
xchg
cltd
adc
lods
inc
ret
into
out
shll
fdivr
jno
loope
outsl
sub
fadds
mov
mov
pop
and
xchg
cs
out
sahf
dec
lods
and
inc
cli
mov
xchg
lods
icebp
adc
aam
sar
mov
je
imul
daa
std
mov
rcll
or
and
jl
dec
jbe
xchg
xlat
dec
lods
jle
out
test
sarb
movsb
xor
movsb
inc
mov
jb
sbb
cmp
stc
dec
sub
add
adc
data16
imul
jge
ss
int3
arpl
xor
imul
inc
cmp
mov
adc
divb
loope
add
fistps
mov
xor
mov
pop
rcr
xchg
push
inc
sti
jnp
shll
fbld
rcll
fnstsw
out
int3
pop
mov
mov
daa
pop
sbb
cwtl
out
scas
das
inc
stc
pop
stos
mov
lcall
popa
xor
cmp
add
loope
sahf
psraw
dec
cmp
jo
lds
out
push
insb
jle
scas
mov
adc
dec
test
cli
movsl
insl
jmp
xchg
jbe
jbe
mov
adc
mov
enter
cld
imul
cmp
add
aas
bound
popf
stos
ja
shl
mov
jb
fisttps
ret
xor
pop
pop
fiaddl
inc
lds
jo
or
push
jo
jp
mov
ds
sbb
stc
insb
imulb
faddl
pop
adc
cmp
push
movsl
pusha
and
fdivp
mov
mov
hlt
out
mov
inc
cmp
cmp
and
dec
rcrb
hlt
mov
test
rol
sti
cmp
in
inc
mov
mov
mov
add
std
repz
call
push
scas
sbb
lcall
mov
imul
je
mov
inc
xor
add
pop
icebp
push
fs
inc
dec
jno
xor
fnstenv
in
cmpl
jnp
jmp
repz
daa
inc
push
push
loopne
inc
jmp
mov
ss
push
hlt
loope
addb
sar
mov
mov
test
ds
sub
xor
bound
mov
lahf
jmp
inc
sbb
shll
pop
icebp
and
enter
jo
cld
jb
mov
and
jbe
or
sbbb
mov
add
xchg
inc
dec
sub
cwtl
out
daa
xor
xor
fisubrl
frstor
and
mov
popa
movsl
mov
xchg
jb
mov
outsb
lahf
xchg
jle
mov
mov
xchg
mov
push
lcall
rep
cli
jmp
xor
hlt
shlb
mov
popf
cmp
or
lahf
jo
notb
pop
mov
loop
out
inc
mov
shll
insl
xchg
dec
popa
leave
xor
dec
mov
push
pop
inc
sahf
std
xchg
out
mov
cmc
cli
jnp
and
mov
cltd
push
mov
sbb
inc
cmp
cs
sub
in
sbb
mov
aaa
ret
sbbb
dec
xchg
fdivrp
fs
int
xchg
sbb
push
dec
jl
pop
dec
rorl
sbb
fwait
in
jge
sub
and
clc
stos
loop
lods
push
lods
aas
sub
lahf
mov
ret
cmp
sbb
push
andb
popa
ljmp
lods
dec
outsb
jl
incw
jp
ret
jno
pop
sub
and
stos
outsb
jne
rorb
aad
mov
shll
or
out
fcoml
addr16
fisubrs
repz
incl
adc
in
lret
pop
sbb
sbb
ja
sbb
and
fisubl
and
and
mov
stos
loop
cmp
jbe
dec
mov
jle
pop
cmpsl
cwtl
int3
test
and
loop
mov
sub
adc
sub
lods
aam
insb
ficomps
xor
fisttpll
stos
fisubl
int3
xchg
mov
hlt
sub
lcall
orb
scas
fdivrl
bound
fwait
xchg
movsb
dec
pop
sub
aas
fdivr
movsl
mov
enter
push
mov
pop
inc
pop
xor
add
fucom
mov
int
and
dec
fisttpl
xlat
sub
aam
adc
xor
leave
push
das
sbb
push
testb
cmp
pop
dec
in
sub
mov
push
out
pop
das
shrb
pushf
stos
sbb
inc
lds
xchg
call
push
or
fucomi
fstl
cmpsl
push
clc
imul
sarb
dec
inc
mov
ret
lds
and
dec
mov
cmp
fs
ss
test
adc
in
decl
sbb
gs
xor
push
pop
adc
pause
xchg
mov
rcr
aaa
jecxz
rcrl
cmp
lret
out
repnz
int
or
xor
xchg
aaa
jno
popa
bound
xchg
xchg
fwait
inc
xor
clc
insl
mov
pushf
out
data16
test
cmp
push
adc
sarl
adc
pop
dec
daa
cld
pand
aad
push
lea
fdivrp
xlat
scas
inc
inc
cld
mov
inc
adc
stos
add
aad
and
mov
dec
fcoml
arpl
jmp
aad
push
mov
decl
popf
aas
int
or
cmp
jno
inc
cmp
mov
sti
or
jae
mov
stos
mov
xor
mov
stos
sti
xor
roll
jbe
mov
adc
sub
test
cwtl
mov
lahf
popa
pop
inc
imul
fnstenv
neg
addr16
xor
popf
xchg
mov
and
xlat
adcb
cltd
xchg
pusha
xchg
stos
sbb
add
or
xchg
test
sub
dec
insb
addr16
xor
mov
mov
lods
xchg
adc
lret
jp
cmp
mov
je
int
or
mov
jnp
dec
mov
mov
or
xchg
dec
mov
daa
sahf
loop
shll
mov
mov
add
pop
out
and
mov
notb
out
iret
push
outsl
clc
cs
xchg
inc
loope
daa
cmp
push
stos
data16
jns
std
call
int
push
das
add
clc
int3
mov
shlb
pop
mov
out
in
mov
fmulp
push
cmp
int
sbb
fsts
push
mov
sub
mov
cld
movsb
push
cmpsl
es
pop
mov
addb
fsts
and
pop
xor
xlat
mov
push
enter
inc
sti
dec
pushf
xchg
shll
cs
push
in
imul
test
cmpl
sahf
sub
mov
sahf
pop
mov
and
push
stc
inc
aam
call
ja
sub
xchg
das
jae
lea
clc
nop
aas
stc
pop
mov
add
dec
rolb
int
js
bound
jnp
mov
xor
cmp
xchg
mov
add
push
icebp
icebp
fldpi
out
in
cwtl
xchg
xchg
adc
popf
adc
ret
imul
pop
sub
mov
mov
gs
push
cmpsb
insl
xor
test
inc
or
stos
mov
jl
mov
pushf
mov
lcall
mov
cmp
jg
insb
clc
jmp
and
lock
shrl
and
xor
push
and
cmp
xor
jbe
dec
add
clc
popa
arpl
test
mov
and
movsl
lahf
pmuludq
mov
jno
lock
int
shrl
pop
xor
iret
fldenv
cmc
xchg
mov
ficoml
push
ljmp
call
mov
push
popa
jbe
sbb
add
fadd
mov
inc
outsl
js
hlt
lcall
mov
xchg
mov
xchg
test
jmp
in
mov
test
adc
and
pop
inc
cmpb
or
push
dec
mov
xchg
out
inc
nop
cmpsb
insb
jmp
mov
jae
xor
mov
add
repz
adc
jle
or
lods
leave
out
add
jmp
mov
sbb
xchg
mov
jnp
rorb
push
out
push
cmp
call
std
xor
xor
lds
adc
nop
pop
ljmp
jb
ds
stos
cmp
mov
movsl
mov
or
dec
cs
stc
adc
push
lcall
dec
add
popl
xchg
scas
clc
aam
data16
sbb
dec
out
dec
push
mov
rorl
pop
aas
mov
push
int3
sub
pop
adc
les
mov
cmp
xlat
jge
push
rclb
mov
xchg
sub
stos
mov
iret
mov
mov
divl
fadds
aas
out
sar
xchg
shrb
sbb
das
es
fidivs
stc
in
cmp
subl
out
jns
and
fldcw
scas
fildll
flds
cmp
xlat
subl
and
test
pop
push
mov
lcall
push
ja
loopne
inc
pushf
mov
adc
inc
test
adcb
push
sub
xchg
mov
mov
sub
icebp
sbbb
imul
xchg
ds
dec
fistps
xchg
std
mov
mov
xlat
pop
scas
sub
jle
xor
mov
xchg
nop
lahf
adc
cli
lret
sbb
outsb
int
xchg
mov
mov
and
in
xchg
scas
data16
add
movsl
test
fstpl
xor
jne
xchg
pusha
neg
ffree
and
movl
or
adc
inc
out
aad
adc
mov
xchg
decl
sub
fsubr
xchg
xor
cmpsl
xchg
push
sbb
lcall
lea
aas
icebp
inc
xor
cwtl
ss
dec
into
arpl
or
lea
sub
sub
or
cltd
add
fs
mov
xor
es
jmp
enter
xor
movsl
push
dec
mov
mov
pop
repnz
fistpll
scas
adc
push
and
push
sbb
jge
movsl
sbb
sub
inc
push
pop
sub
scas
and
lods
dec
sarb
push
inc
pop
push
daa
pushf
jno
mov
pop
pop
in
pop
sbb
mov
pop
es
inc
test
mov
xchg
xchg
push
decl
sahf
flds
or
sbb
jns
xchg
pop
mov
loope
aaa
and
out
push
lock
pop
adc
adc
adc
sub
lods
xchg
pop
icebp
out
adc
mov
out
repnz
loop
jecxz
in
inc
jp
sti
stos
out
outsb
imul
mov
jecxz
or
mov
mov
jns
jle
jbe
mov
push
hlt
mov
xlat
xchg
add
pop
sbb
in
mov
jecxz
aas
cwtl
xchg
loop
mov
add
mov
lds
fistpll
mov
pop
push
nop
sub
mov
inc
xchg
dec
xchg
inc
adc
cmc
or
outsb
outsb
xor
push
out
loope
pop
aad
jle
or
fisttpll
add
add
xchg
fs
int
inc
sbb
cmp
pushf
stos
inc
mov
shrl
xor
out
das
sub
ljmp
mov
jmp
dec
add
leave
xchg
sbb
push
pop
fdiv
in
je
sbb
cmpsb
mov
mov
loope
cmp
adc
lods
ss
or
push
aad
arpl
test
lock
pop
sbb
inc
jge
add
scas
mov
fadd
lock
popa
xor
bound
mov
es
mov
ss
in
jne
push
out
fwait
xor
cmp
aaa
sub
lret
test
lds
call
and
mov
ds
jo
add
loop
movsl
cmc
jae
jns
xchg
lds
jno
lret
and
sahf
ja
sbb
mov
jg
pop
jmp
imul
lods
jbe
testb
mov
aad
cmc
pusha
sub
xor
xchg
sbb
push
mov
mov
loope
push
add
sti
call
push
out
inc
aas
es
das
pop
sbb
enter
lret
test
movzbl
lods
sub
adc
mov
cmpsl
or
mov
cmp
mov
mov
test
mov
cmp
xor
out
js
pop
inc
iret
dec
in
add
dec
bound
inc
and
insl
xchg
jmp
faddl
cltd
mov
or
lret
sub
mov
insl
addr16
dec
cmpsb
pushf
lret
lret
insb
jae
pop
int
dec
xor
pushf
outsb
mov
pop
mov
lds
sbb
or
movsb
pop
test
subl
fsubs
or
mov
sub
imul
out
push
dec
push
inc
jno
arpl
ficomps
pop
lret
stos
push
push
xchg
mov
negb
es
sub
test
insb
aam
pop
jo
jns
or
mov
in
shlb
xor
jle
mov
movsb
mov
add
in
add
out
xlat
adc
pop
sahf
sbb
bound
mov
into
iret
aas
nop
enter
jg
inc
int3
aaa
xor
or
loope
sbb
lcall
mov
mov
dec
mov
loope
push
arpl
push
cmp
loopne
popf
fimuls
dec
dec
cs
std
pusha
inc
icebp
nop
push
mov
cwtl
mov
xor
out
mov
aad
jno
and
leave
shl
outsb
jmp
xchg
adc
aas
iret
mov
cmp
lods
es
sbb
flds
xlat
inc
adc
pop
push
nop
test
dec
push
jbe
xchg
scas
mov
xor
ljmp
hlt
xor
std
push
inc
adc
pop
sub
adc
hlt
jecxz
add
push
dec
loopne
inc
mov
push
rcl
hlt
push
dec
adc
cmpsb
sbb
adc
jg
xchg
fdivrl
loopne
xchg
adc
notb
pop
fs
xchg
add
push
mov
imul
inc
pushf
cmp
repnz
mov
out
dec
xchg
out
pop
jg
fcmovnu
xchg
pop
pop
xlat
ja
fbld
cmpl
mov
jne
and
adc
or
lcall
test
int3
push
test
inc
xchg
and
fdivl
mov
shlb
adc
aam
sbb
adc
jl
xor
jo
std
into
in
jecxz
mov
inc
xchg
adc
jae
insl
pop
lret
sbb
pop
decb
dec
je
repz
clc
imul
mov
mov
push
inc
xchg
outsb
pusha
sahf
div
or
and
scas
pop
push
cmp
pop
stc
dec
or
add
xlat
or
shll
out
decl
nop
push
xchg
and
mov
mov
push
fwait
arpl
add
xor
scas
mov
xor
inc
shlb
inc
int
mov
inc
pusha
lds
push
jb
xor
cmc
fldt
adc
jnp
rcl
add
dec
fbstp
in
inc
push
jbe
push
cmp
aas
cs
cs
mov
cld
test
inc
dec
test
in
xchg
pop
adc
dec
stc
loopne
jns
pop
jle
mov
nop
loope
push
sahf
inc
lods
xor
add
xor
pop
mov
rclb
test
and
sbb
inc
imul
jbe
xor
pop
add
stos
mov
mov
sahf
cmp
pop
add
jo
call
mov
sbb
outsl
pop
mov
repz
dec
fidivl
clc
cmpsl
pop
cmp
inc
lock
inc
add
je
jmpw
dec
push
xor
aam
outsl
cli
push
pop
jno
adc
mov
jo
dec
add
dec
pop
pop
inc
add
push
mov
push
dec
mov
jmp
mov
mov
or
and
push
dec
fisttpl
inc
outsb
addr16
int
mov
pop
test
aaa
xchg
sti
xchg
divb
dec
aaa
xchg
adc
mov
xchg
repnz
jne
lock
sub
mov
push
mov
xchg
into
lds
push
and
sub
out
fmuls
cmp
mov
test
jl
pop
lahf
push
movsl
push
xor
push
and
divb
push
inc
movsb
clc
outsl
sbb
outsl
xor
xchg
clc
hlt
and
push
mov
repnz
push
ja
jno
cld
rcrl
jg
push
dec
das
mov
icebp
cld
movsb
dec
decl
aas
mov
mov
and
adc
dec
lods
mov
push
loop
mov
xchg
cld
shrl
mov
cmp
push
push
pop
loop
lret
cmpsb
in
stos
and
ja
pop
aam
repnz
ret
popf
fwait
cmp
in
sbb
add
cmp
push
cmp
pop
call
xor
repz
xor
dec
test
jnp
movsb
std
mov
iret
dec
push
and
jns
mul
nop
xchg
imul
pop
jge
testb
out
mov
pop
xchg
mov
xchg
jbe
scas
sbb
mov
dec
sbb
sbb
push
testl
dec
nop
or
dec
js
pop
cmpsl
aaa
fcompl
popa
push
jg
or
mov
and
fsubrl
sbb
jae
sub
dec
dec
outsl
shl
loopnew
inc
cmpsb
aas
or
test
adc
fiaddl
mov
es
or
scas
lock
int
add
mov
adc
ror
lods
das
in
aas
inc
add
stos
aaa
sahf
mov
repnz
push
xchg
jae
jmp
shll
jle
loopne
inc
addr16
mov
sbb
and
stos
xlat
push
inc
lds
xchg
jle
cvtpi2ps
imul
pop
fdivrl
lcall
sbb
inc
lret
mov
ss
lea
add
pusha
pop
mov
mov
xchg
and
repz
push
xchg
push
sbb
ret
mov
es
aaa
sub
cmp
lock
scas
jbe,pn
push
mov
fists
inc
cmpsb
mov
push
mov
jmp
dec
inc
push
push
incl
jns
cmpsb
mulps
and
and
andb
xchg
repnz
add
mov
pop
ret
jbe
xchg
and
test
xor
out
fisubrl
mov
insl
daa
pop
stos
aam
cmovne
add
pop
fstpt
test
arpl
mov
ljmp
cmp
pop
daa
mov
popa
imul
add
mov
cwtl
and
mov
das
mov
popf
sbb
sub
pop
jbe
lret
js
jmp
pusha
aam
xchg
inc
nop
push
subb
jmp
ja
fwait
push
lds
inc
mov
roll
scas
lods
push
inc
push
pop
ja
clc
cmc
and
popa
add
jle
mov
and
scas
stos
cmp
inc
and
rorb
hlt
jmp
push
adc
call
movsb
sti
ja
call
stc
push
jecxz
and
xchg
sub
inc
mov
and
dec
jmp
mov
stos
and
xor
fs
or
das
mov
enter
xor
xchg
pop
xor
pop
xchg
test
xor
jge
push
loopne
roll
popa
push
lret
adc
mov
dec
jno
mov
mov
add
lods
jbe
and
imul
das
cmp
clc
sub
test
mov
add
rolb
aam
cli
inc
dec
mov
xor
jbe
mov
inc
clc
test
xchg
int3
hlt
loop
or
or
das
test
xchg
mov
sbb
icebp
test
in
das
lret
mov
js
dec
addr16
addr16
xchg
jnp
dec
imul
dec
pop
xchg
in
js
or
cmp
mov
shlb
dec
cmpb
cmp
sub
add
xchg
mov
cmp
sti
add
stos
mov
incl
rolb
mov
out
aam
xor
out
stos
xchg
mov
push
jae
std
adc
shll
and
divl
jmp
jbe
xchg
mov
imul
or
in
js
and
inc
cwtl
outsb
lcall
arpl
dec
sbb
push
xchg
out
in
in
fmulp
pop
cmp
mov
xchg
lods
and
in
push
sbb
ret
hlt
add
imul
lea
roll
repz
mov
rorl
push
xor
push
prefetcht0
cmp
divb
push
imul
lahf
jmp
mov
fimull
test
xor
mov
xchg
inc
setg
xor
add
xchg
xchg
mov
xlat
jo
mov
push
arpl
xchg
mov
cmpsb
xchg
cmp
ret
mov
lahf
aas
dec
adc
pushf
bound
ds
inc
pop
loope
in
mov
push
xor
push
mov
or
fwait
addr16
mov
insb
pop
sbb
aas
dec
out
enter
push
pop
jns
sbb
ljmp
cwtl
jno,pn
icebp
mov
mov
jbe,pn
push
fwait
daa
enter
das
xchg
repnz
lret
fldl2t
jle
fcompl
cmpsl
ss
jne
jl
test
pushf
mov
ret
push
dec
push
inc
enter
int3
sbb
cmp
push
stc
push
pop
pop
push
fidivrl
orb
sub
lods
jne
xchg
test
mov
pop
lret
iret
push
and
arpl
mov
pop
sub
pop
test
mov
adc
out
pushf
mov
nop
test
xorl
lret
mov
sbb
cmp
mov
sti
int
mov
jmp
scas
sti
xor
jg
into
and
mov
xchg
mov
call
addr16
in
movsl
or
mov
pop
mov
add
aam
enter
shl
pop
add
dec
push
scas
and
pusha
lcall
jbe
sub
inc
clc
jg
ss
push
mov
mov
cmpsl
cmp
andl
push
enter
lret
leave
or
adc
inc
pop
aas
cltd
add
pusha
es
js
jecxz
xchg
cmp
insb
outsb
pop
add
imul
dec
pushf
jge
sub
pusha
mov
xor
mov
push
je
lds
sahf
xchg
xor
mov
push
xchg
cmp
in
add
push
rcll
jo
xchg
cmpsl
sub
cmp
add
repz
ljmpw
mov
nop
loop
and
dec
xchg
cmp
outsl
add
sub
xlat
adc
dec
fdiv
jno
mov
enter
les
sbb
lcall
stos
push
sahf
or
xchg
xor
bound
outsl
sbb
inc
adc
shrl
add
test
dec
stos
sub
jle
inc
inc
pop
pop
lcall
sbb
loopne
sbb
scas
jne
cmpb
fiaddl
sbb
rcrl
add
popa
lahf
stc
jmp
cwtl
or
jp
push
mov
repz
cltd
pop
add
push
sub
jg
sub
or
and
xchg
ret
addr16
lods
jmp
icebp
and
lods
mov
and
inc
dec
inc
mov
mov
aad
out
cmc
ja
jle
jne
leave
loop
sbb
ret
fidivs
mov
pop
pop
sarb
mov
movsl
cs
btc
imul
cld
xchg
sub
cmp
xor
inc
ret
push
scas
hlt
stos
pop
inc
test
in
aaa
in
fstpt
std
sarb
adc
out
test
repz
out
std
push
adc
dec
mov
les
pop
xchg
hlt
add
inc
sub
aam
xor
leave
mov
movl
push
rcrl
add
cmp
adc
add
jge
jp
push
aas
add
call
mov
or
mov
stos
jecxz
sbb
outsb
sbb
mulb
incb
aam
xor
jno
ss
xchg
in
push
jno
lods
mov
lea
lret
fdivrs
pop
xchg
xor
and
sub
adc
push
and
push
fistl
mov
loop
popa
movb
int
outsl
xor
xchg
fisttps
cmc
jmp
dec
leave
xchg
stos
jnp
adc
or
mov
andb
pushf
lods
rcr
inc
rolb
bswap
cmp
push
mov
jae
bound
and
sub
jle
xor
mov
popa
and
stos
sub
icebp
sbbl
xorb
int
dec
mov
sbb
rcl
mov
inc
xchg
jne
ficompl
add
push
jmp
popf
pop
add
sub
mov
sarb
sbb
fs
sbb
push
and
popa
dec
test
pushf
xchg
pop
push
xor
cmp
adc
pop
cmp
movsb
mov
cmp
sbb
outsb
mov
or
add
adc
daa
into
jp
mov
and
pop
inc
or
push
sbb
push
push
lock
mov
jp
mov
dec
inc
cld
mov
mov
rolb
mov
pop
xchg
sti
pushl
test
lret
aad
inc
xchg
lcall
std
jns
mov
dec
lahf
in
sub
add
add
cmc
or
add
je
jne
adc
ljmp
push
and
mov
sarl
popa
les
xchg
or
xchg
inc
adc
push
fcomip
int
sub
xchg
icebp
push
ss
or
outsb
popa
and
pop
adc
xchg
std
hlt
sub
adc
or
pop
dec
and
stos
jge
adc
js
sbb
out
cmp
icebp
sub
enter
das
in
in
dec
or
inc
dec
or
push
stos
imull
sbb
ret
inc
fisubl
cld
leave
paddsw
sbb
test
pop
fwait
popf
fcomi
jle
pmulhuw
aas
sub
pop
xor
add
or
sti
mov
push
scas
xor
je
je
test
sbb
out
out
data16
stos
push
sti
xor
lret
jmp
sub
mov
dec
out
adc
ds
dec
xor
popa
std
notl
lea
out
js
mov
xchg
cmp
int3
push
dec
popa
and
add
pushf
or
mov
mov
xchg
and
or
ret
stc
mov
sbb
ficoms
test
push
hlt
jnp
lds
shl
pop
xchg
inc
cmp
enter
ret
roll
push
xchg
jecxz
jne
mov
dec
insl
jnp
out
popf
mov
push
sbb
mov
sbb
mov
jecxz
push
hlt
jge
dec
sbb
popl
xchg
or
or
inc
fadd
sahf
sub
push
jnp
mov
cld
out
lds
push
iret
aad
adc
in
sbb
push
cmc
ss
lret
fnsave
cmp
jmp
cli
cmp
dec
inc
in
xlat
test
and
pop
scas
rcl
test
jmp
cmpsl
pusha
imul
push
or
add
jne
into
xchg
bnd
std
or
pop
push
test
lock
ret
inc
out
push
leave
ficoml
or
stos
sti
paddusw
addr16
fdivr
test
sub
or
in
add
jne
test
dec
xchg
add
fstps
rcrl
cld
ljmp
dec
dec
arpl
outsl
mov
jb
loope
adc
sub
repnz
shll
out
xchg
int
out
mov
add
outsl
cmpsb
fmul
push
fs
sti
stc
mov
loopne
fisttps
inc
jmp
inc
sub
cwtl
movsb
repnz
cwtl
push
incb
mov
jns
dec
push
loope
pop
push
jbe
add
mov
hlt
sbb
jl
sbb
add
fs
aam
lds
icebp
shlb
lea
rcr
sahf
and
add
mov
les
fistps
notb
lea
sbb
dec
je
out
xor
pop
movsl
pop
cld
sarb
mov
std
stos
jp
ljmp
test
sub
and
push
outsl
mov
in
sbb
jmp
rolb
stos
or
xlat
xor
add
subb
mov
loopne
inc
sarb
push
mov
cltd
insb
mov
stos
xchg
xor
outsb
sar
out
lods
popf
iret
rorb
test
iret
push
and
add
jl
mov
dec
int
xor
push
inc
mov
ficompl
sub
fcompl
push
pop
sbb
xlat
cmp
aam
ljmp
ja
ret
js
add
lcall
psraw
cmp
push
sarb
cmp
in
cmc
inc
cmp
sub
cmp
stos
mov
xlat
mov
arpl
dec
pushw
and
fstps
ljmp
sub
push
inc
iret
nop
cltd
cmp
or
xchg
mov
lock
movsl
sti
movsb
jo
cmp
cs
cmpl
or
xchg
dec
sub
lcall
mov
mov
cmc
mov
xchg
dec
and
lods
ja
faddl
mov
sbb
pusha
call
ljmp
idiv
vzeroupper
popf
push
push
outsl
sbb
cmp
imul
rcll
adc
icebp
dec
push
ret
cli
iret
gs
lock
je
pusha
fstpt
lock
lock
jmp
jmp
pop
or
call
jae
jo
dec
ret
inc
add
adc
jnp
pop
ljmp
out
out
jne
add
pop
fdivrs
nop
cmp
shlb
sbb
pop
leave
push
and
xchg
jne
dec
daa
or
cmp
cmpl
push
lahf
out
mov
ret
xchg
xor
jno
inc
sbb
cmpl
pop
gs
outsl
fnstcw
outsb
or
cmp
decl
mov
aas
stc
adc
fs
push
lret
pop
xor
or
lods
mov
nop
jno
sub
xchg
jmp
push
mov
cmp
daa
xchg
cmp
lock
sbb
push
arpl
xchg
or
or
jbe
stc
das
and
int3
cmp
out
cmp
fiaddl
arpl
jecxz
insl
push
aas
mov
pusha
adc
pop
das
movsb
mov
push
int3
popf
mov
nop
js
or
sti
mov
pxor
fsub
iret
dec
ja
mov
icebp
pop
fwait
inc
cmp
mov
adc
jno
test
orb
test
sub
sub
repz
jne
int
mov
iret
mov
fnstsw
in
adc
and
xchg
push
sbb
xor
jp
mov
and
ds
xchg
es
stc
mov
outsb
shlb
mov
mov
rcrb
sbb
into
decl
pusha
addb
je
jg
fisubrl
lret
xor
cmpsl
cmp
push
push
pushf
or
addr16
or
arpl
jge
mov
roll
rolb
pushf
insl
and
sbb
fstps
or
pop
andb
insb
add
mov
outsb
mov
and
popf
push
mov
sub
sahf
orl
mov
push
and
lock
jge
jmp
adc
inc
push
scas
cs
pop
mov
scas
lahf
sbb
push
lret
push
leave
out
dec
int3
leave
cli
in
add
sbbb
xchg
movsl
shrb
xor
pcmpeqw
aam
mov
fisttpll
stc
into
cmp
mov
out
mov
jo
stc
cwtl
dec
cli
jb
out
push
sbb
mov
cmpsb
cmp
mov
fcmovnb
mov
push
dec
dec
pop
lock
or
out
inc
ds
xchg
out
out
xchg
mov
xchg
mov
loopne
sub
in
cmp
push
xchg
sbb
push
cmc
shrl
mov
lock
mov
xor
mov
adc
jne
into
xchg
leave
cmc
xchg
repz
in
adc
or
popf
inc
fcmovnbe
xlat
push
adc
cltd
arpl
in
jmp
push
jl
clc
mov
pop
adc
roll
fld
in
jb
sahf
sbb
xor
ja
and
loope
xchg
ffree
xor
inc
lods
inc
test
cmp
dec
jge
inc
cmp
add
addr16
xor
nop
jge
cwtl
pop
jb
nop
mov
inc
mov
xchg
xchg
dec
inc
mov
mov
mov
xchg
xor
fbld
cmp
xor
rcrl
popa
add
sub
fs
sbb
daa
call
adc
jmp
adc
aad
adc
test
pop
in
add
pop
mov
add
daa
cmp
sub
andps
adc
jge
js
dec
int3
or
pushf
sbb
jp
xchg
push
mov
outsl
in
adc
pop
insl
sbb
in
add
adc
or
cmp
sbb
lods
mov
and
pushf
and
loope
mov
add
xchg
dec
and
push
or
xchg
mov
idivl
dec
xchg
sbb
jne
aas
hlt
stos
jge
dec
imul
nop
push
call
and
adc
sarl
shl
icebp
push
mov
movsb
popf
xorb
adc
inc
xor
lods
pushl
fnstsw
sbb
idivl
bound
jns
rcl
xor
pushf
pop
loopne
scas
dec
lret
addr16
add
xchg
xor
dec
xor
stos
push
mov
testb
jl
cwtl
sub
xor
mov
mov
ljmp
jle
cmpsb
arpl
pop
push
dec
int3
outsl
sbb
sub
xor
and
mov
in
and
loopne
jle
inc
or
testl
dec
nop
ja
test
push
cs
inc
and
dec
pop
mov
std
mov
int
cltd
fisubrs
test
bound
ja
insl
notb
xor
sbb
pop
add
rcl
sub
xchg
jno
sub
cli
or
add
ror
fimull
lret
xchg
shrd
in
imul
cmp
les
jno
out
xlat
push
sbb
inc
sub
jp
out
xchg
sti
aad
test
scas
adc
jmp
leavew
aaa
adc
mov
jnp
xor
repz
hlt
jae
mov
jp
jp
sbb
shl
xor
jg
fs
dec
mov
mov
inc
loop
add
bound
sbbl
pop
lds
jo
inc
pop
cltd
push
pop
imul
dec
daa
or
jmp
or
jge
inc
push
pop
fists
pop
in
sub
orl
or
loop
xchg
and
movsb
shrl
sub
cli
jae
movsl
sbb
adc
inc
mov
lock
mov
std
push
rorl
pushf
arpl
aas
out
push
mov
adc
outsl
mov
xchg
lea
jbe
jp
inc
mov
or
test
fmull
gs
pop
int3
sbb
mov
xor
std
repnz
pushf
or
movsb
out
jmp
aam
xor
out
lret
lods
idivl
shll
and
sub
or
xor
dec
mov
mov
cmp
imul
daa
pushf
je
stos
xchg
cmc
or
pop
add
adc
cvtdq2ps
mov
cmp
mov
imul
lret
hlt
push
mov
push
or
fmuls
fcomi
pop
call
mov
add
push
lods
fcoms
repnz
movsl
pop
lea
xchg
mov
xchg
push
jne
daa
mov
fsubs
xor
push
pop
mov
adc
mov
mov
mov
pop
lods
jle
in
mov
push
aas
pop
je
mov
mov
andb
cmpsl
inc
popa
adc
out
dec
push
xchg
stc
adc
mov
xchg
js
pushf
scas
xor
cld
js
out
xor
push
or
push
push
mov
push
scas
jecxz
cmp
cmp
xchg
mov
pop
dec
mov
jo
sub
rcrb
enter
jae
imul
sbb
retw
cmpsl
mov
rcrl
sbb
adc
inc
push
jge
sbbb
lods
jp
inc
mov
xor
lret
inc
fwait
or
cmpl
int3
loopne
push
sti
jmp
or
and
aad
ljmp
inc
add
ljmp
cmp
arpl
push
push
in
sahf
incl
repnz
fcmove
jo
dec
stc
xchg
adc
cmp
cltd
sub
std
sub
lret
bound
inc
sbb
adc
xor
mov
xchg
lcall
adc
and
js
ret
outsl
add
mov
mov
add
sbb
aad
jmp
cmp
lods
mov
xchg
push
adc
cmp
pop
cmc
push
pop
mov
jns
adc
outsl
push
data16
icebp
loope
cmp
int
addr16
jmp
pop
sub
adc
cwtl
mov
shl
sbb
or
or
or
clc
outsl
or
push
xchg
and
cmpsl
push
pop
mov
xor
mov
lcall
xchg
push
pop
andnps
pop
jecxz
cmp
jmp
xchg
jp
cmp
fdivs
dec
mov
pop
hlt
dec
push
mov
fcmovnu
int
mov
jo
bound
stc
int3
mov
add
lds
pop
decl
dec
xor
enter
add
jp
inc
repz
and
dec
mov
mov
adc
loop
xchg
mov
mov
mov
and
mov
xchg
xchg
rorl
sub
outsl
jns
in
enter
jne
in
test
xor
out
imul
sbb
pop
pop
hlt
jecxz
cmc
push
out
stos
add
jb
leave
js
shl
loopne
pop
ljmp
xchg
pop
mov
add
loope
mov
lods
cmc
test
push
into
aas
int3
and
int3
stos
or
testl
xor
sub
into
loopne
fs
das
cmp
insl
xor
aaa
adc
xchg
gs
inc
adc
and
sub
gs
xor
pop
cmp
jns
loop
or
lcall
das
pop
sub
push
int
jo
imul
adc
shl
mov
lret
out
dec
or
sbb
fwait
inc
testl
fnstenv
xor
jbe
mov
test
sbb
or
scas
in
push
jp
sub
push
inc
lds
jo
jmp
mov
pop
icebp
sbb
add
xchg
pop
xchg
or
test
xchg
mov
inc
imul
jns
jns
popa
cmp
fidivl
and
dec
adc
orl
flds
dec
cmpsl
cmp
jae
fwait
jbe
ret
test
add
lea
mov
xor
xor
mov
xor
int3
xchg
movsl
and
pop
inc
mov
mov
mov
mov
adc
out
lret
stc
cmp
icebp
jbe
xchg
adc
sub
repz
enter
add
push
sub
ljmp
lahf
mov
sbb
sub
adc
xor
out
mov
mov
xor
popa
cs
out
adc
ljmp
mov
sub
fldt
mov
push
and
pop
mov
push
sub
fisttps
xchg
and
ror
push
cmc
cmc
in
ljmp
and
ljmp
push
aas
int3
movsl
or
imul
xchg
stos
aas
pop
fwait
mov
jns
imul
cld
into
jb
shrl
cmpsl
subb
add
mov
shlb
mov
insb
cli
mov
xchg
xchg
out
repz
imul
fdivrl
js
jo
fimull
cmp
std
insl
jae
pop
test
jl
pop
fnstcw
dec
xlat
mov
inc
pop
dec
cmc
mov
test
sbb
icebp
jl
in
aad
rorb
sbb
dec
out
xlat
leave
in
shrb
pop
adc
sub
cmp
arpl
xor
push
mov
jmp
fmull
mov
jge
in
or
cmp
xor
out
fwait
fs
mov
and
mov
lret
dec
adc
lods
push
icebp
daa
push
test
int3
adc
cli
push
lret
inc
js
push
mov
sub
gs
es
fs
xor
and
test
jle
and
int
cmp
lods
xchg
cmpsb
mov
pop
sub
into
mov
hlt
test
mull
testl
mov
outsb
mov
and
push
aaa
repz
and
cmp
enter
stc
dec
adc
aad
mov
mov
movsl
xchg
lea
inc
popf
lods
inc
mov
lahf
adc
or
push
jne
enter
adc
scas
push
dec
mov
jo
aad
subl
lret
mov
mov
lods
or
mov
scas
cmpsl
icebp
xor
pop
or
jno
idivb
ja
imul
xchg
shlb
xchg
xor
adcb
mov
cmp
sub
dec
std
pop
push
movl
ror
in
enter
js
xor
lret
jne
neg
test
ret
add
xchg
adc
bound
icebp
mov
ffreep
xor
cmp
and
adc
lret
sarl
out
sbb
add
pop
cs
adc
or
lahf
fildll
cmp
sarb
iret
xchg
sbb
xor
or
sbb
fimull
dec
xor
jnp
hlt
sub
dec
mov
dec
pop
push
insl
outsl
js
loop
lock
outsl
rcrl
jnp
add
jns
sub
push
inc
and
in
test
addl
leave
pusha
dec
pop
sbb
ret
pop
aaa
cmp
cs
push
xor
frstor
cs
jmp
jge
daa
ret
adc
in
dec
push
xor
cmpsl
test
testb
insb
xchg
cli
gs
cwtl
mov
jne
int3
test
push
out
jmp
testb
out
test
ret
loop
clc
pop
sahf
lar
test
or
jp
cmpb
adc
or
negb
push
imul
and
inc
mov
mov
mov
inc
xor
xor
add
popf
jg
rcrb
dec
daa
or
xchg
dec
rcrl
dec
stc
xor
cltd
in
cmp
shr
negb
popf
xchg
push
push
movsl
cld
ss
xor
mov
jns
js
push
xor
dec
aaa
sbb
bound
fstpl
xchg
fidivl
jge
add
loop
frstor
and
ret
add
test
adc
sbb
sbb
or
fists
and
mov
xchg
xchg
dec
mov
xor
shlb
sbbb
dec
rclb
mov
mov
gs
jecxz
or
fidivs
sahf
push
jg
int
xor
xor
data16
push
xchg
mov
loopne
in
xor
jne
out
push
xchg
test
dec
mov
jno
enter
mov
mov
cs
lret
mov
push
cmp
mov
out
ret
hlt
cmpsb
fadd
sbb
pusha
mov
xor
ja
add
out
inc
and
pop
leave
push
sub
lock
stc
in
push
stc
pop
lea
mov
pop
xor
in
or
jo
add
aas
jbe
flds
clc
xor
mov
lret
adc
inc
into
dec
cmpsl
mov
cmp
int3
mov
add
sub
roll
test
nop
mov
adc
jecxz
mov
xchg
addl
xchg
lods
push
add
lock
jmp
push
out
cltd
add
rcrb
cli
sub
leave
mov
inc
xor
push
pop
jne
outsl
mov
testb
inc
jl
dec
inc
outsb
in
and
shrb
xor
mov
std
sub
and
mov
sbb
push
stos
test
mov
xchg
add
std
std
fcmovnb
enter
sub
lock
pop
sbbl
cmc
stos
adc
fs
mov
and
mov
outsb
mov
mov
clc
xor
aaa
mov
add
sbb
hlt
roll
pop
add
sbb
lret
adc
pop
nop
push
mov
and
test
pop
stos
cmp
jg
pop
jno
xchg
test
pop
inc
mov
push
and
repnz
pop
stos
mov
xchg
cmpb
pop
addl
jo
icebp
jg
add
or
jl
rorl
stos
pop
adc
shl
cltd
out
sbbl
call
xlat
push
aad
mov
sahf
iret
jns
insl
int3
cld
pop
lcall
arpl
xor
xchg
push
mov
xor
pop
jns
pop
push
js
xchg
test
push
cli
xor
inc
scas
inc
out
mov
xchg
sub
and
push
repz
xchg
cmpsl
shl
lret
dec
pop
mov
out
adc
test
loopne
outsl
cmp
fmull
adc
xchg
in
or
pop
test
pop
jp
jnp
sbb
adc
mov
jl
dec
xor
mulb
jg
addr16
inc
aas
jl
cmp
aam
adc
xor
push
mov
es
push
cltd
jns
xchg
dec
lds
sbb
test
mov
arpl
shlb
and
mov
and
mov
mov
jl
jge
fwait
sub
push
stos
popf
lret
inc
jmp
int3
mov
jl
andb
pop
jo
bswap
pop
dec
and
mov
pop
sbb
popa
out
lods
fldt
sub
sti
push
add
pop
les
cmp
inc
int
test
out
and
leave
and
mov
add
mov
ljmp
dec
fistps
aas
mov
loopne
jb
xor
inc
lahf
ret
xchg
mov
mov
or
scas
outsl
push
sub
fcomps
loope
loopne
cmp
pop
push
xchg
pop
xor
enter
test
inc
sbb
push
aad
sbb
sbb
cli
cmp
sbb
mov
fdivs
adc
xchg
fs
push
insl
loopne
jns
arpl
push
push
adc
mov
test
jp
xchg
out
cmp
mov
lds
add
xchg
fstpl
mov
sub
ficoml
dec
fmuls
lea
jl
xchg
movsl
jmp
dec
daa
inc
xchg
test
gs
subb
push
sti
jg
mov
xchg
inc
dec
mov
rcll
idivb
xchg
add
mov
mov
xor
loope
pop
xchg
add
lret
sbb
mov
mov
ret
mov
add
jle
inc
in
gs
nop
inc
push
sub
sbb
xor
daa
rolb
popa
repnz
data16
andl
jo
das
movsb
out
jbe
pop
add
pusha
xchg
and
loop
mov
stos
hlt
out
movsl
sub
aam
pop
fwait
pop
pushf
rclb
jge
xor
inc
dec
mov
dec
loop
push
xor
mov
sbb
cmp
test
mov
test
mov
inc
or
fsubs
mov
add
loop
shrb
xchg
in
push
call
mov
adc
sbb
icebp
out
daa
outsb
insl
nop
mov
mov
popf
dec
daa
adc
push
push
mov
cmp
pop
jne
test
enter
cmpsb
push
rcr
xchg
or
cmp
cmc
stos
jg
mul
shl
gs
and
shrl
hlt
mov
add
sub
push
push
xor
fidivrl
pop
push
imul
movsb
neg
pushf
xchg
sub
jmp
mov
or
push
pop
mov
jno
fsub
es
push
fcmovu
test
insb
jne,pt
das
mov
ljmp
jp
cmp
inc
add
test
clc
push
dec
mov
xchg
dec
cmp
sti
sbbb
lock
fwait
xor
cli
pop
insb
mov
pop
int
mov
push
xchg
outsl
hlt
scas
pop
push
lods
mulb
and
or
pop
and
jae
xchg
xchg
mov
mov
jmp
mov
dec
mov
das
sbb
push
cmp
imul
push
scas
jne
cmp
pop
or
mov
ss
sbb
aas
mov
pop
bound
sbb
icebp
jnp
jne
inc
pop
pusha
ret
aas
push
loopne
dec
adc
jbe
test
pop
cwtl
xchg
add
or
decl
mov
inc
mov
mov
out
subl
sbb
icebp
and
cli
sub
mov
pop
testl
and
mov
sub
lds
ja
push
fst
clc
sbb
mov
xchg
ljmp
test
aad
das
and
mov
adc
sbb
lock
shl
mov
in
dec
cltd
and
fdivr
ret
pop
mov
pop
aam
into
js
xchg
pop
push
sti
cmp
mov
addr16
jg
xchg
push
lods
mov
mov
dec
push
cwtl
push
mov
adc
in
out
js
insl
sbb
sbb
xchg
xchg
cli
cld
mov
loop
mov
and
aaa
and
stos
fdivp
adcb
test
popf
scas
outsb
add
xchg
push
movsb
sub
push
mov
aam
lods
in
shll
xor
sub
es
imul
roll
pop
mov
ret
xchg
ret
inc
push
stc
lret
pop
movsb
lds
aam
jae
pushl
imul
pop
adc
popa
pop
inc
imul
add
mov
loop
gs
add
jle
mov
leave
pop
mov
out
jle
cmp
in
lea
cld
cwtl
mov
repnz
jmp
aam
adc
popf
cld
test
dec
ja
lahf
sbb
cmpsl
push
push
adc
sbb
int
bound
mov
push
test
mov
xor
ficoms
fisttps
inc
sbbb
jne
and
adc
clc
into
into
dec
js
jbe
sti
bound
aad
push
push
out
cmc
mov
ljmp
insb
push
mov
mov
push
jp
cli
sbb
cs
push
push
test
dec
mov
mov
je
ror
movsb
divl
inc
es
jnp
jp
xchg
pop
in
lret
add
rcl
sub
sub
data16
movsb
ds
pusha
mov
jnp
sub
mov
cmpl
sub
lcall
adc
sbb
dec
aad
lock
dec
jp
xchg
dec
push
testb
cs
xor
clc
mov
xorl
out
fxch
icebp
dec
add
ljmp
fisttpll
xchg
mov
add
dec
xchg
or
mov
pop
mov
ljmp
inc
dec
xchg
xchg
call
sbb
cmp
pusha
arpl
les
xchg
js
xorb
mov
mov
lahf
lds
es
fmul
jecxz
jge
loopne
sbb
sbb
mov
cltd
lods
jae
push
adc
nop
loop
adc
insb
fidivl
negl
adc
icebp
dec
cmpsb
stos
push
aam
mov
stos
cmpsl
pop
ljmp
dec
cmp
mov
and
mov
push
or
notl
sbb
imul
lret
ljmp
fwait
int
subb
out
nop
push
out
leave
add
int3
gs
arpl
lock
setae
add
mov
popf
xlat
jp
shl
push
lret
orb
daa
mov
fadd
adc
fcomps
sbb
add
adc
mov
in
cwtl
mov
inc
and
adc
cmpsl
imul
and
cmp
cmp
dec
cs
dec
jg
pop
clc
xor
sar
lods
repnz
fstl
ss
lods
xchg
pop
xchg
sub
add
pop
ss
mov
adc
inc
and
dec
push
dec
lock
dec
dec
sbb
nop
dec
adc
sti
jne
or
rclb
fneni(8087
jae
ds
cmp
fists
xor
adc
mov
in
mov
lea
imul
cmpsb
mov
std
mov
pop
push
pop
dec
pop
jb
add
popa
mov
fsubrs
push
xlat
and
pushf
mov
sub
push
lret
cld
and
shlb
insb
lock
mov
mov
or
ss
into
inc
sub
lods
cmpsb
mov
xchg
mov
push
and
pcmpeqb
call
jnp
js
fwait
push
popa
sbb
adc
sub
es
xor
popa
sub
mov
les
jns
add
xchg
stc
ss
mov
and
mov
push
sbb
test
ljmp
push
push
dec
push
lea
sbb
andb
push
arpl
mov
sti
arpl
and
push
lcall
fs
xor
js
adc
mov
pusha
subl
mov
sub
mov
xor
icebp
bound
lcall
inc
mov
mov
pop
fdivr
popa
add
lods
xchg
dec
dec
ss
repz
mov
mov
into
sarb
mov
add
sbbl
out
push
mov
daa
inc
clc
std
xchg
hlt
push
loop
sbb
mov
scas
stos
xor
sbb
push
push
xchg
das
adc
jecxz
jnp
subl
lret
mov
out
and
inc
cmp
lret
push
xor
pop
cld
call
mov
jnp
jno
ljmp
mov
subl
gs
imul
scas
scas
aaa
add
dec
dec
jno
cmpsl
into
ss
jmp
pop
jmp
adc
outsl
rcl
jp
ljmp
loop
leave
xchg
lock
push
in
js
enter
mov
sti
adc
adc
popa
mov
jbe
stos
aad
das
fisttps
dec
cmp
lods
adc
mov
fldt
cmpsb
in
ds
ror
pop
xor
and
jge
cmp
mov
outsl
cmpb
cmpsl
nop
adc
cmpsl
cmp
in
sti
mov
xchg
sub
popf
push
mov
nop
int3
dec
in
movsb
dec
jns
push
sub
bound
fsubp
mov
adc
test
mul
jle
push
addr16
xchg
add
jo
push
and
mov
mov
xor
bound
pop
loope
loopne
xchg
shlb
aaa
int3
into
or
popa
mov
pop
jecxz
imul
imul
mov
xor
inc
dec
in
loopne
outsb
pop
dec
xor
scas
in
pop
insl
mov
lds
cmp
and
aam
xor
and
int3
and
jp
pop
xchg
xchg
stc
xchg
scas
or
mov
inc
jmp
test
push
pop
jae
cmpsb
sub
test
test
xchg
jae
xor
push
cld
cmpsl
jp
fcompl
inc
aad
and
inc
nop
push
cmp
pop
push
xchg
in
ret
shll
dec
xor
ret
sub
pop
jns
sub
jge
add
xchg
push
dec
out
jmp
movsb
into
push
hlt
and
imul
push
xlat
push
test
inc
add
xlat
sub
scas
mov
mov
xor
mov
pop
sarb
roll
or
dec
and
in
push
xor
jp
xchg
mov
movsl
mov
push
sub
lock
and
inc
cmp
inc
jne
xlat
sub
jne
mov
jp
sar
xor
xchg
xor
xor
lds
dec
loope
or
push
and
ret
icebp
out
xor
xor
adc
cld
mov
and
or
orb
xorb
or
inc
sbbb
xchg
sub
fists
lods
xlat
shl
faddp
pusha
int
lea
loop
push
or
aaa
ljmp
shlb
popa
inc
mov
leave
xlat
ljmp
jecxz
push
xchg
jmp
add
lcall
out
out
mov
xchg
dec
cmp
lock
or
sub
pop
repnz
lcall
mov
jle
cld
arpl
and
or
push
add
jl
sbb
cmp
push
and
and
iret
icebp
lock
aas
pop
cli
lods
lcall
and
sbb
cltd
xchg
idiv
cli
sarl
movsl
cs
sbb
add
jb
inc
sub
adc
fcompl
pop
sbb
xorl
out
movsl
aad
xor
out
in
or
mulb
cmp
push
mov
testb
jne
sub
sub
imul
cmp
dec
jne
rclb
sti
mov
ds
mov
lret
stos
xchg
iret
xchg
pop
lds
loope
cmp
xchg
mov
adc
ljmp
aas
out
cmc
fwait
cmpsb
scas
mov
aas
pop
adc
ret
add
aas
jo
cli
sbb
lods
pop
test
int3
bound
fwait
xor
paddb
mov
jl
push
add
mov
xor
rcll
add
mov
fucomi
lock
shll
outsl
xor
cmp
push
rcrb
lcall
or
pushf
mov
in
mov
inc
mov
lds
fbstp
sbb
out
push
lahf
in
push
and
xchg
inc
or
sub
gs
mov
rcl
adc
daa
adc
clc
ficomps
out
jg
addr16
mov
sbb
sub
out
mov
pushf
adc
or
imulb
pusha
jge
mov
inc
es
inc
mov
and
into
cwtl
inc
cltd
mov
loop
push
les
xchg
push
jge
adc
dec
xchg
or
or
in
sahf
mov
lods
jb
scas
in
dec
pop
das
xchg
add
push
arpl
xchg
rcr
adc
ss
out
stc
push
xchg
add
int
cwtl
sub
iret
lcall
in
outsb
rclb
scas
cs
inc
cmp
push
adcb
in
hlt
out
inc
mov
adc
scas
outsb
mov
adc
daa
incl
mov
or
xchg
shlb
jecxz
icebp
int
nop
push
aam
pop
adc
mov
pop
mov
add
scas
or
insl
rorb
inc
lcall
xor
cmpl
sub
mov
push
or
iret
pusha
icebp
scas
repz
stos
hlt
je
int
in
test
mov
fidivrl
inc
xchg
add
mov
jle
pop
push
in
mov
push
push
icebp
cld
popf
and
adc
pop
test
xor
int3
and
xlat
fisubrl
imul
xor
mov
ja
mov
dec
pop
sti
jb
lcall
cwtl
sbb
loopne
sbb
cltd
mov
xor
shll
shll
add
shlb
xchg
ret
mov
repz
jmp
cld
lock
in
int
mov
aas
pusha
out
stos
pop
add
dec
lret
sar
arpl
fcompl
xchg
pop
ja
mov
adc
leave
movb
stc
imul
jl
fcmovne
or
imul
aas
enter
adc
mov
loope
lahf
sarl
jmp
sub
push
in
ret
dec
add
popf
out
lea
and
loop
ret
push
ror
push
or
test
ja
lahf
shlb
xlat
lea
push
mov
push
cli
jge
sti
popf
jge
add
fstpt
cmp
mov
and
jl
jne,pn
sbb
push
jno
jmp
sbb
andb
rclb
subb
ss
push
es
adc
pop
jge
shlb
mov
lahf
adc
popa
bnd
dec
fdivrs
int
arpl
push
xor
jge
xor
enter
sahf
and
add
xlat
xchg
xchg
sbb
adc
xchg
mov
cltd
es
sti
dec
cmp
mov
in
aaa
or
pusha
dec
data16
push
mov
mov
xchg
jbe
int3
rol
das
push
fpatan
pop
adc
sahf
test
stos
ljmp
daa
and
mov
gs
fiadds
lock
fists
in
std
fwait
inc
out
jns
loope
jl
mov
notl
cmc
lods
aad
iret
mov
inc
out
lret
or
sub
bound
lods
xchg
add
aam
pop
movsl
fcmovnbe
rcrb
stc
jb
aas
mov
ret
sbb
cmp
icebp
ret
rorl
dec
dec
pop
dec
lret
daa
and
mov
pusha
sahf
mov
fsubp
ss
rorb
fidivrl
mov
fdivrl
imul
dec
in
add
mov
sbb
shll
mov
gs
or
fistpll
aad
push
jb
jbe
jbe
push
pop
add
jecxz
hlt
jl
xor
jnp
push
xchg
out
popf
and
mov
mov
inc
test
cmpb
adc
xchg
bnd
inc
pop
xor
mov
ljmp
or
js
xor
mov
iret
outsl
or
aam
sbb
pop
inc
lods
jge
out
jmp
xchg
sub
shlb
sub
mov
cmp
inc
ret
add
ds
repz
mov
cmc
sub
iret
pop
xchg
add
call
aaa
cmpsl
or
pop
sahf
push
cmp
or
jns
jmp
sbb
adc
cmp
into
fidivrl
in
jge
out
push
jmp
sti
jge
pop
mov
addb
je
repz
jmp
xor
inc
in
push
out
pop
lods
inc
lea
lcall
and
fisubrl
sbb
stos
scas
repz
loope
sbb
fsubrl
cwtl
xor
out
in
mov
jae
into
adc
push
or
push
testb
xor
and
mov
mov
or
out
mov
out
xchg
xlat
lods
sti
xchg
dec
push
xor
rcrb
sbb
fisubs
pop
hlt
dec
shll
popf
test
adc
or
pop
in
or
fists
fcoml
ror
lcall
push
stos
out
aaa
fldt
cld
sbb
xor
mov
push
xchg
js
in
pop
sbb
rclb
push
mov
mov
adc
cmp
lret
out
push
out
roll
repz
ret
pop
push
daa
pushf
pop
loopne
mov
xlat
dec
cwtl
pusha
adc
lea
js
dec
in
jb
dec
lods
mov
inc
push
and
cmp
enter
out
mov
adc
xchg
inc
xlat
pop
pop
inc
sbb
xchg
lret
add
aam
leave
std
lret
pop
dec
push
pop
mov
pop
xchg
notl
jg
mov
mov
sbb
aam
jge
mov
loope
repz
xchg
fmulp
cwtl
test
push
decb
push
lret
push
inc
jmp
hlt
cmp
ljmp
repnz
test
cmp
dec
inc
adc
ja
daa
dec
or
scas
cs
add
enter
add
mov
out
loope
adc
out
stos
dec
jne
out
sbb
ss
and
cmpsb
pop
xchg
jb
jmp
inc
imul
push
sbb
push
mov
xchg
lods
shrl
out
ret
ret
fimull
mov
adc
mov
sbb
repz
sahf
sub
decb
jno
mov
addr16
cmpsl
fists
and
add
aas
sub
xchg
sahf
test
stos
mov
adc
aas
xchg
iret
cmp
aas
jb
and
repz
sub
push
xor
sub
scas
xor
jp
sbb
sbb
addl
xor
addr16
jns
xchg
dec
dec
into
push
lock
cmp
popf
push
pop
cmp
int
sahf
imul
push
sbb
push
jge
adcl
and
sub
std
sahf
cmp
mov
cmc
icebp
mov
test
mov
fldl
or
mov
ds
push
data16
or
shll
dec
xor
xor
test
dec
push
loopne
jmp
push
jg
dec
popf
sub
lods
cmp
cmp
push
push
and
js
sarl
mov
outsl
cld
insb
adc
in
push
pop
imul
sbbb
cs
mov
mov
mov
xor
clc
pop
dec
xchg
ret
insb
pop
push
ret
inc
mov
add
lcall
outsb
out
push
stos
adc
call
imul
fiadds
cli
xor
sbb
mov
adc
mov
jns
xchg
inc
int3
xchg
inc
gs
push
mov
xchg
jp
je
jb
xor
pop
out
add
daa
push
int3
nop
jl
clc
and
xor
xchg
mov
pop
inc
push
dec
cmpsl
cs
jmp
mov
nop
sbb
inc
mov
sub
mov
cwtl
mov
cmc
loop
in
iret
lods
xor
ret
test
nop
cwtl
cmp
sti
es
lods
out
imul
inc
xor
jl
in
inc
inc
dec
mov
repnz
stos
jno
aad
stos
fmull
xchg
imul
jecxz
inc
roll
pop
jmp
pop
sbb
mov
aad
and
inc
jns
stos
scas
fistl
xchg
fistpl
cmp
pushf
inc
cmpsb
fcoml
lock
test
sar
inc
in
jbe
xchg
cld
dec
and
jl
push
outsl
in
adc
mov
inc
or
sbb
mov
jns
or
xor
push
and
inc
stc
cmp
std
fwait
shll
mov
mov
xchg
dec
std
jge
aas
adc
cmpsb
arpl
lods
out
sbb
dec
pop
imul
add
jbe
mov
stos
add
leave
in
pop
into
inc
xchg
test
xchg
int
daa
lds
daa
add
sub
jle
cltd
scas
loope
and
pushf
mov
push
cmp
mov
scas
les
cld
push
andl
outsl
outsl
out
adc
push
and
popa
ss
mov
sbb
cmp
dec
scas
popa
mov
enter
cltd
mov
ret
pop
or
xchg
mov
pop
cmpsb
mov
cli
outsl
pop
scas
fcmovne
adc
jecxz
stos
nop
jae
pop
jecxz
cmp
and
mov
les
sahf
icebp
ljmp
adc
push
mov
sbb
std
cmpsb
cs
jl
inc
scas
adc
sbb
pushl
fcomps
inc
lds
loope
jne
iret
and
lret
add
aaa
add
and
jno
insl
pop
or
shrb
xchg
xchg
scas
movsl
pop
mov
jne
xor
pop
not
cmp
dec
add
nop
mov
inc
cmp
add
cmpsl
sahf
mov
incb
xor
push
jecxz
jne
xor
xor
adcl
inc
dec
lods
dec
jl
inc
addr16
insb
xor
int
push
popa
jg
sbb
loope
pop
inc
aaa
jmp
lds
loopne
aam
mov
cmpsl
lods
sub
test
adc
jns
sbb
xor
lcall
sbb
ret
push
sub
popl
in
sbb
xchg
scas
jae
loopne
mov
mov
lods
icebp
add
inc
lcall
mov
in
test
pop
push
jmp
ret
pop
sti
dec
cmpsl
les
jle
mov
add
je
adc
dec
add
mov
mov
rcrl
or
and
inc
pop
or
movsl
test
xorl
or
pop
aam
jle
and
push
popl
orl
dec
scas
mov
cld
outsb
xchg
jecxz
imul
jb
inc
xor
mov
ds
sbb
movsb
repz
lods
notb
dec
dec
out
mov
ljmp
or
das
mov
jno
adc
or
inc
and
xor
mov
cmc
clc
mov
adc
call
jae
xchg
mov
dec
cmc
jb
add
xor
xor
xchg
cmp
out
gs
xchg
or
mov
dec
or
ret
mov
and
xor
adc
mov
test
sub
aaa
mov
cmp
dec
jg
fimull
in
mov
mov
daa
lret
ds
insb
inc
je
sahf
xor
sbb
pop
adcb
dec
lahf
jg
fs
jl
inc
lret
ret
nop
test
idivb
shrb
in
pop
xchg
jns
lods
or
sub
or
jecxz,pt
pop
dec
dec
lahf
cmc
push
dec
sar
mov
and
movb
sub
daa
xchg
iret
in
pop
clc
mov
inc
push
add
out
xor
add
scas
pop
xlat
addr16
aaa
pop
andb
inc
mov
ljmp
scas
aaa
imul
jmp
dec
out
adc
push
pop
and
pop
cltd
icebp
stc
mov
popf
xchg
imul
test
xor
xorb
test
adc
jmp
fs
movsl
or
xor
xchg
enter
cs
add
fsub
cltd
cli
pop
das
mov
jp
pusha
ljmp
icebp
ud2
jnp
fnstsw
shl
aaa
push
add
sahf
mov
scas
aad
cli
jo
cmp
push
xchg
jnp
mov
sbb
jne
das
sub
lcall
push
cwtl
mov
sub
or
cmc
fistpll
cltd
test
pop
es
and
shlb
dec
xchg
jmp
daa
and
push
xchg
popa
xchg
jns
adc
ss
imul
or
movsb
cs
mov
jnp
inc
sub
jnp
lret
test
out
out
or
fsts
fwait
imul
dec
not
roll
mov
das
cmpsb
clc
ljmp
mov
or
inc
lods
or
inc
pop
pop
or
adc
das
push
push
jle
xor
call
fxch
test
cmp
mov
rcll
es
in
and
inc
adc
cmc
sarb
mov
xchg
fdecstp
pop
rorl
jg
cs
lret
cmp
fldcw
stc
jmp
mov
mov
xor
push
sub
movsb
inc
out
negb
mov
and
xchg
aad
push
mov
and
xchg
ret
cs
push
cli
adc
mov
movsl
or
jnp
push
pop
jo
mov
mov
pusha
into
cld
scas
xchg
popa
mov
mov
daa
adc
inc
sub
or
vminps
je
xor
mov
repz
es
xchg
xor
scas
inc
sti
xlat
fmuls
pop
pop
inc
in
sub
cmc
retw
addr16
loopne
mov
loop
pop
pop
cmp
lock
call
out
mov
sbb
fldt
and
adcb
dec
adc
pop
mov
f2xm1
mov
inc
daa
pop
arpl
jo
pop
dec
jmp
adc
sbb
push
mov
fldl
mov
out
test
pop
xchg
jno
mov
dec
cmp
xchg
dec
pop
lret
fdiv
leave
xchg
faddl
mov
mov
mov
shl
leave
out
stc
pop
rcrb
dec
fbstp
imul
push
mov
das
pop
fwait
xchg
cli
adc
dec
sbb
fdivrs
jo
in
jl
ja
rorl
mov
push
in
mov
mov
sub
push
xor
adc
je
and
cmp
mov
mov
test
jp
mov
xchg
les
aad
xor
jb
and
push
sbb
es
xor
in
mov
add
ljmp
mov
push
sub
push
outsl
sub
mov
lock
das
pop
imul
and
imul
inc
pop
ds
jg
lock
insb
jnp
sahf
test
push
mov
mov
jb
pop
mov
insl
xor
loope
movsb
pushf
xlat
ds
push
movsb
and
and
scas
rol
std
inc
xor
scas
test
fnclex
push
sbb
xchg
adc
sti
push
aad
jns
jp
sbb
icebp
mov
pop
jo
mov
rolb
xchg
sub
out
xlat
push
pop
or
mov
cmc
push
mov
lahf
push
scas
dec
jo
aam
add
dec
test
repz
fidivs
fstpl
or
pop
dec
int3
mov
or
outsb
add
repz
repnz
jmp
outsl
push
inc
int
mov
ret
leave
xor
pop
adc
or
push
inc
pusha
xchg
ret
jg
dec
cmp
loop
jae
outsb
gs
ljmp
mov
xchg
out
inc
mov
inc
in
add
and
push
pop
out
mov
sbb
mov
jbe
lret
lock
xchg
cmpsl
insl
mov
sub
movb
ret
mov
stos
fstl
out
in
mov
sbb
pop
mov
cltd
out
mov
mov
ds
pop
adc
outsl
sub
xor
mov
loop
daa
nop
fidivrs
dec
cli
fstl
loopne
jg
mov
mov
adc
push
adc
push
dec
or
roll
icebp
sub
xchg
inc
es
cmp
jno
sar
mov
dec
test
adc
xchg
sub
mov
nop
jl
sarb
inc
scas
or
or
adc
mov
mov
sahf
ljmp
push
andl
dec
div
and
test
les
sub
pop
arpl
sub
sarb
cmp
add
add
stos
xchg
sbb
int
lock
and
stos
push
mov
out
push
jle
and
and
cmp
add
pop
or
sub
sub
in
repnz
cmp
mov
lods
jmp
ds
test
dec
adc
push
hlt
xorl
andl
push
mov
dec
lea
mov
push
jae,pn
cmp
jbe
mov
pushf
addb
subl
adc
mov
jl
lock
mulb
pushw
dec
mov
icebp
adc
push
mov
test
push
out
insb
mov
aas
xlat
std
in
mov
pushf
xchg
mov
ds
jmp
jno
jne
enter
je
test
xlat
dec
jb
xbegin
fisubrs
ljmp
icebp
dec
inc
cmp
dec
cli
sbb
adcl
fimull
inc
adc
mov
subl
cmpb
enter
xchg
pop
mov
aas
jmp
mov
test
pop
dec
in
popf
jbe
cmp
js
movsbl
or
sbb
or
jbe
ja
xor
loope
jp
int3
test
inc
pop
push
cli
xchg
mov
sbb
in
and
pop
mov
mov
mov
data16
dec
addr16
pop
sti
xor
mov
xor
sarl
cs
data16
not
lahf
int3
outsb
pop
mov
dec
loopne
push
adc
pop
jo
in
sbbb
faddp
les
icebp
jecxz
loop
jno
fidivl
mov
or
push
out
mov
mov
adc
rcl
pusha
mov
sti
push
call
pop
sub
scas
jge
jb
jg
inc
mov
or
in
sti
ror
sub
push
xchg
inc
mov
dec
mov
into
xor
dec
js
push
jecxz
push
sbb
cltd
cmp
loope
xchg
pop
and
ret
mov
jl
pop
int3
dec
xor
loope
and
mov
mov
sbb
cmc
or
mov
xchg
sub
fcoml
int
orl
shl
ficompl
imul
aaa
pusha
cmp
adc
jno
cmpsb
int
mov
mov
mov
insb
add
xchg
cmp
xchg
sbb
mov
push
cli
call
cmp
inc
or
shll
stos
sbb
sub
shll
sub
mov
xchg
mov
pop
rorl
bnd
pop
push
mov
jb
mov
xchg
cwtl
shrb
jp
repnz
arpl
xchg
pop
mov
cmp
in
repz
leave
movl
xchg
lret
adc
add
add
and
jmp
add
test
les
int
sbb
fs
bound
inc
jo
ds
stc
fstps
cmp
dec
clc
jmp
aam
aam
pop
pop
sbb
sbb
movl
pcmpeqw
out
test
jecxz
adc
notb
push
cmc
mov
jns
xchg
notb
in
pop
addr16
inc
jns
jno
mov
xchg
sbb
mov
xor
shlb
mov
mov
mov
or
iret
jmp
roll
xchg
xchg
adc
mov
mov
jle
loop
sahf
cs
shlb
xchg
fsubl
mov
loopne
orb
or
cmp
inc
dec
fsubl
and
js
shl
arpl
sarb
add
aas
jmp
inc
je
in
mov
pop
stos
enter
add
jle
add
aas
push
cmp
in
adc
adc
jle
in
jo
mov
shl
imul
popf
dec
xor
ret
jne
dec
pop
divl
fwait
pusha
jne
div
or
rorb
popa
jb
lea
pushf
cmp
xor
jb
imul
adc
rcrb
loopne
inc
sub
dec
dec
adc
inc
push
scas
pop
imul
jnp
dec
cmp
add
adcb
sub
jne
dec
mov
test
sahf
sbb
and
cs
nop
lods
movq
andl
stos
inc
mov
sbb
mov
and
repz
push
pop
sbb
and
mov
loop
ret
inc
push
add
sahf
test
movl
jne
daa
rclb
lret
push
add
xor
addb
lret
sub
pushf
and
jne
das
or
jo
fstp
fcom
int3
dec
stos
or
pusha
hlt
scas
imul
add
loope
loopne
jne
je
and
stos
push
es
cmp
push
adc
out
pop
push
shl
or
ljmp
inc
add
dec
jle
push
pop
sub
add
or
inc
cmp
xor
int
loope
movswl
dec
nop
cmp
mov
in
inc
shrl
sub
incb
or
xchg
push
popa
cmp
dec
imul
adcl
rcrl
xchg
mov
test
xchg
lods
nop
rolb
nop
fnstsw
mov
push
cmp
cli
test
sub
lea
ljmp
outsb
pop
ficompl
imul
sbb
inc
jmp
sbb
cmp
and
call
pop
out
lret
daa
lahf
lock
add
outsl
xchg
imul
jl
xchg
repnz
inc
test
mov
jb
mov
dec
loop
stc
je
sti
mov
sbb
repz
scas
or
pop
cmp
push
mov
aaa
jns
xchg
scas
jecxz
push
cwtl
pop
orb
jmp
das
inc
cmp
outsl
movsb
lret
add
sbb
scas
insb
jg
mov
and
ds
inc
xchg
jo
cld
sbb
subb
mov
mov
js
sar
iret
insb
rolb
ss
sub
cmp
mov
jl
mov
hlt
dec
adc
loope
push
mov
sub
jno
into
mov
sti
ror
pop
jg
insb
stc
mov
jns
inc
mov
push
add
push
test
addr16
sarl
cmp
jne
sbb
xchg
sbb
incl
dec
bound
xor
nop
mov
jmp
pop
jge
pop
cmpsb
sub
dec
lea
sub
inc
roll
lahf
gs
jo
fwait
xchg
fcomps
add
push
loop
sbb
add
ret
mov
cwtl
dec
dec
rcrl
mov
mov
or
movsb
mov
mov
adc
push
dec
ret
mov
pop
cli
adc
add
jp
pmulhw
xchg
daa
movsb
rorb
push
inc
jmp
fmull
test
stos
xchg
pusha
mov
sbb
idiv
xor
fisubrl
repnz
dec
adc
mov
mov
test
out
aas
pop
and
iret
test
enter
and
movsb
cmp
dec
pop
out
mov
jl
xor
mov
movsb
lds
sbb
lahf
xchg
mov
cmovge
dec
mov
pop
xor
adc
push
mov
in
jecxz
cmpl
loop
dec
pushf
pop
jmp
push
repz
jnp
adc
adc
sarl
push
push
movsb
std
cmpsl
sbb
inc
imul
xchg
ret
pop
in
mov
mov
mov
pop
mov
adc
push
stc
inc
dec
dec
mov
outsl
ljmp
iret
xchg
or
stc
push
stc
test
pop
shlb
jb
xor
and
inc
je
lret
sbb
inc
es
inc
insb
jge
cmc
sub
xor
das
fs
dec
ficoms
sbb
xchg
xchg
mov
mov
jle
pop
push
mov
dec
loope
xchg
int3
adc
rcrb
pop
cli
in
lock
leave
insb
mov
cld
mov
cmp
int3
push
fwait
sbb
andb
popl
sub
xchg
in
pop
mov
in
out
lahf
add
or
adc
loopne
push
lret
add
xor
roll
daa
loopne
out
pop
mov
testb
scas
cmc
xor
dec
ljmp
int
ja
and
mov
dec
mov
pop
adc
incl
scas
lret
in
imul
fimuls
pop
popf
push
loop
scas
add
lods
test
arpl
lock
inc
idivb
pushf
mov
cmp
fmuls
mov
mov
cmp
mov
adc
ds
mov
and
call
sub
icebp
fdivl
sarb
cmpsl
push
es
xchg
mov
movsl
sub
cmp
in
xchg
mov
jbe
xchg
int3
cmp
dec
nop
inc
cld
inc
sub
sahf
fbld
jle
maxps
outsl
push
cmp
sub
mov
test
pop
pop
cmp
dec
cli
cmpsl
mov
or
pop
imul
leave
push
inc
mov
dec
push
jnp
pop
jbe
jmp
lds
cmp
sbbl
cmpsb
jb
ret
lock
out
mov
pop
fildll
mov
popa
cltd
adc
mov
adc
hlt
xchg
dec
mov
jmp
stc
fildl
mov
push
adc
xchg
adc
mov
mov
testl
inc
out
mov
dec
fimuls
mov
hlt
test
or
mov
xchg
xor
pop
inc
adc
push
in
rcrb
xor
mov
ljmp
inc
out
mov
out
push
insb
xchg
imul
ds
adc
or
orl
push
in
std
pop
pop
lret
rolb
push
fisubs
or
sbb
dec
nop
aam
sub
loopne
sub
or
mov
cmpb
outsl
sti
push
lea
xchg
shl
sub
std
lea
mov
jnp
les
cld
mov
lahf
xchg
dec
decb
in
jg
rcr
arpl
das
into
jbe
das
jbe
mov
mov
jge
hlt
sbb
and
gs
iret
gs
add
ja
mov
lret
mul
enter
pop
hlt
out
add
test
outsb
push
shll
jle
xchg
cmp
push
cwtl
sti
test
dec
jnp
cmc
push
lea
popf
rorl
lret
xor
sub
in
mov
xor
sbb
data16
cmp
adc
stos
in
lret
cmp
fcompl
imul
sarb
dec
mov
addb
mov
dec
push
jecxz
out
xchg
pusha
cmpsb
pop
inc
lahf
je
insl
mov
inc
mov
mov
addb
or
fucomi
dec
push
std
iret
aas
adc
mull
mov
flds
dec
sbb
add
test
sbb
xchg
and
testb
xor
sti
jg
js
add
xchg
faddl
inc
hlt
lret
xor
out
xor
cld
sub
push
enter
int3
loopne
das
jb
push
push
inc
pusha
xchg
pop
sub
mov
xchg
xchg
mov
inc
push
cmp
mov
insb
in
xlat
loop
test
adc
shrb
push
jmp
call
into
or
pop
subb
inc
jle
loopne
fisttps
fdivrs
daa
adc
push
or
sti
or
push
push
es
int
mov
out
mov
mov
shll
leave
xchg
dec
popa
jne
fnstcw
sub
mov
and
ja
sbb
pop
and
mov
push
frstor
mov
jnp
scas
xchg
in
scas
shlb
pushf
std
in
push
ds
in
pop
and
jnp
sub
cmp
jle
adc
iret
xchg
jle
pop
aam
mov
pushf
push
cmp
adc
roll
mov
xor
pop
and
scas
mov
iret
push
sbb
xchg
dec
xchg
cmp
pop
mov
cmp
cltd
fwait
out
add
lock
sub
mov
pop
daa
xor
push
add
mov
sub
pop
jno
adc
pop
inc
sbb
es
lds
sub
stc
ljmp
push
push
inc
iret
inc
in
xchg
arpl
das
xlat
cmp
mov
xchg
mov
inc
fdivrl
sahf
fs
xor
imul
sbb
je
pop
lret
pop
push
outsb
loop
test
xrelease
and
fs
or
popa
mov
sub
pop
mull
lret
sub
cmp
dec
in
cmpsb
sub
lock
xchg
jae
jecxz
mov
bound
nop
or
or
and
testl
stos
inc
push
jg
adc
xlat
mov
pop
dec
and
mov
xorb
xor
or
hlt
jns
fildll
fildll
repz
push
mov
popa
popf
stc
or
sbb
cltd
hlt
fcomi
xchg
mov
bound
out
or
sbb
loopne
mov
xor
pop
xor
mov
mov
lods
aad
dec
inc
inc
jg
into
pop
aam
cltd
or
mov
test
fmulp
addr16
popa
mov
mov
or
cmpsb
stos
cwtl
xchg
subl
ss
jnp
les
cwtl
les
push
cld
cmp
xchg
xchg
push
push
pusha
enter
sub
shl
jno
sub
fld
stos
jle
mov
dec
cs
nop
pusha
jmp
pop
adc
mov
lret
jns
jge
adc
add
int3
test
jp
mov
pop
cmp
int3
xchg
xchg
sahf
negl
sahf
sub
push
idiv
mov
ja
in
adc
inc
mov
dec
inc
xchg
xor
jo
mov
mov
lahf
mov
shl
dec
rcl
jp
sahf
fwait
scas
mov
jge
mov
inc
adc
out
mov
rclb
repz
outsl
push
mov
push
pop
mov
insb
adc
dec
add
jno
enter
insl
dec
jb
inc
lds
inc
xor
inc
sbb
sbb
cmp
shl
iret
mov
adc
rcr
je
mov
or
mov
call
sub
stos
xor
cmpsb
jo
adc
or
lock
insl
mov
fstps
aam
rorb
and
jns
mov
or
mov
cwtl
inc
aas
jns
inc
adc
xor
and
test
mov
sahf
pop
test
test
insl
test
lret
ja
leave
cmp
dec
shrb
cmp
adc
aaa
and
repz
jae
lret
mov
pop
mov
mov
and
add
imul
sbb
pop
xor
xchg
add
fdivrl
scas
xor
sub
mov
xor
xor
push
test
subb
hlt
pop
mov
xchg
adcb
cmp
pop
push
ja
fildll
adc
fbstp
dec
and
push
mov
sub
test
and
aaa
xor
sub
aad
jp
mov
cmp
shll
adc
cmp
push
xchg
adc
test
imul
lahf
xorl
lock
push
scas
mov
in
out
xchg
or
iret
jl
repnz
icebp
inc
push
flds
rorb
clc
nop
or
fs
mov
inc
push
lret
mov
xchg
lret
inc
test
loope
sub
stc
fld
nop
icebp
and
sub
aas
call
jecxz
into
add
into
nop
hlt
mov
mov
adc
dec
int3
add
mov
sbb
mov
int3
mov
push
cwtl
mov
lret
add
fwait
jbe
sub
adc
sahf
movsb
mov
loop
pusha
xor
mov
scas
dec
mov
adc
add
adc
jmp
lahf
mov
adcb
mov
nop
jmp
jbe
stos
dec
adc
aas
test
fmulp
jno
lods
test
sub
dec
test
stos
add
incl
xor
sarl
out
das
sarl
loopne
inc
daa
sbb
aad
lahf
dec
mov
sbb
xchg
mov
push
outsb
rclb
mov
aad
inc
add
xor
dec
sub
jbe
movl
cmp
xor
aam
les
lock
jae
pop
inc
sbb
cmpsb
out
rcll
insl
cmp
mov
sub
mov
gs
mov
ret
outsl
aam
repz
sub
adc
int
fcoml
jmp
sub
fdivrl
xchg
movsl
lahf
aas
sti
out
dec
xor
dec
nop
outsb
cmpsl
cld
push
lock
or
je
lock
lods
mov
add
inc
and
jg
subb
xlat
push
inc
pop
insl
lcall
fsubrl
icebp
mov
lods
icebp
and
aas
push
jno
push
mov
ja
arpl
xor
lahf
lcall
sbb
arpl
pop
in
clc
lret
or
clc
pop
cmp
loop
mov
inc
lahf
leave
ljmp
mov
movsl
jle
int3
in
lret
xchg
xor
push
pop
mov
jmp
int
ficoms
push
out
pop
xor
imul
push
add
pop
mov
lock
in
cmpsl
lock
inc
xlat
mov
in
icebp
lds
mov
push
test
fadds
push
mov
stos
push
push
in
sub
loope
push
sub
jecxz
jne
add
arpl
pusha
cmp
jmp
mov
xchg
sbb
adc
cmp
shrb
int
cmp
shrl
and
push
mov
shrb
and
daa
sti
xchg
push
push
shlb
inc
pop
xor
add
or
shl
sub
jb
ror
sahf
cltd
mov
mov
js
stc
mov
sbb
ja
aam
daa
jg
adc
ljmp
push
cmp
add
cmc
pop
sti
roll
dec
jp
jge
out
int3
and
sbb
mov
aas
gs
mov
jg
add
cmp
movsl
jp
fstps
add
mov
sub
cmp
jae
mov
or
pop
nop
addr16
das
dec
insl
cmp
aas
jp
or
insl
out
jne
lret
lock
popf
lods
push
push
mov
xchg
add
scas
stos
call
or
mov
mov
fcomps
or
pop
out
mov
rclb
jmp
jle
call
dec
push
lret
imul
push
lcall
lahf
inc
push
xchg
cld
shl
jns
call
in
xor
shl
push
bound
xor
cmp
xchg
ja
xor
inc
loop
push
push
sbb
xchg
sub
aad
insb
xchg
cmpsl
push
leave
mov
pop
dec
and
enter
sub
xchg
inc
sub
add
out
add
jge
jecxz
mov
sahf
cltd
mov
scas
push
notb
xchg
push
call
adc
leave
icebp
or
ss
mov
pusha
nop
movsb
sbb
pushf
fs
pop
or
stos
xchg
call
and
xor
out
push
aad
mov
in
mov
jmp
push
scas
pop
sar
dec
and
out
ja
clc
mov
lds
sbb
push
gs
jb
rol
les
sbb
sub
in
sub
mov
mov
sbb
stc
push
cmp
dec
mov
ret
ret
pop
sbb
inc
and
pop
jnp
adc
pop
bound
sbb
mov
movsl
cmp
ss
xor
dec
sub
mov
or
mov
lods
pop
pop
xchg
movd
mov
movsl
xorl
push
cmp
add
lock
shlb
add
in
cmp
and
ret
mov
pop
jnp
xchg
xchg
mov
pop
and
icebp
test
das
mov
mov
ficompl
jb
xchg
rcrl
outsl
dec
aas
and
pop
cwtl
pop
mov
pop
xchg
adc
mov
pop
inc
mov
cli
dec
test
push
test
add
call
sub
stos
dec
push
jno
sbb
jb
clc
out
out
push
cmp
insl
sahf
pusha
dec
mov
jle
push
jg
das
jp
in
bound
jmp
mov
popl
fstl
mov
icebp
sbb
scas
push
dec
shl
sbb
aam
aaa
lds
ret
cmp
movsl
int3
dec
xchg
add
outsb
sbb
cmp
pop
lds
aas
and
fiaddl
mov
mov
dec
inc
pusha
mov
fldcw
daa
test
pop
je
imul
xchg
jl
cld
popa
sbb
sbb
ja
addl
insb
leave
mov
sahf
fldcw
push
pop
inc
in
jno
adc
fsubs
sub
clc
sti
xchg
rcr
ffreep
cmc
push
movsb
mov
xchg
inc
cmp
fidivrl
sahf
out
fstpl
xchg
mov
sub
sub
cmpsb
mov
loopne
pop
jg
aam
idivb
aad
stos
xchg
dec
adc
pop
leave
enter
andb
add
mov
xor
test
les
push
adc
push
sub
cmp
js
cltd
insb
daa
subl
sahf
js
adc
jg
in
xlat
cmp
sub
addb
out
andl
push
cmp
pop
dec
push
aas
lock
ficoml
cmp
mov
sub
fcompl
lea
testl
sbb
ret
hlt
out
inc
cmpsb
dec
jno
jge
xchg
fildl
cmpsl
jp
sub
dec
cmp
pop
movsl
or
mov
jne
adc
test
mov
scas
cmp
jecxz
jl
and
cmpsb
or
sub
xlat
adc
xor
mov
bound
popf
test
and
adc
mov
je
mov
xchg
add
mov
xchg
mov
fucomi
dec
cmp
dec
dec
cmpsb
fwait
scas
fs
push
pop
mov
lret
cld
add
sub
jle
out
and
jno
xor
jp
mov
lock
aas
movsl
mov
imul
xchg
jle
and
insl
repz
loop
push
aam
and
xchg
call
out
out
inc
inc
sub
icebp
adc
dec
aaa
in
adc
popa
clc
xor
mov
lret
gs
add
imul
cmp
cmpb
mov
in
push
adc
cmp
ret
loope
xchg
push
dec
leave
cld
xchg
bound
adc
fs
and
int3
aas
mov
and
adc
mov
sahf
gs
je
das
mov
aaa
cmp
mov
in
sub
xchg
gs
in
jg
lcall
push
jae
xor
push
push
jbe
and
push
push
pusha
cmpsl
cs
aad
mov
mov
mov
cmp
jg
jno
xchg
mov
cmc
in
pop
scas
pop
mov
ficomps
xchg
cltd
xchg
mov
or
cld
jge
sub
outsb
mov
movsb
popa
xchg
lods
mov
scas
or
jp
cmpsl
inc
or
mov
and
mov
lcall
cmp
adc
in
pop
insl
push
in
sub
or
mov
aam
cmc
test
addb
sbb
ss
jb
das
fldt
mov
lea
sarb
jb
pop
shll
or
int3
bound
xchg
in
or
testb
popa
pusha
dec
pushf
loopne
and
iret
out
cmc
pop
stos
jg
aaa
push
add
cs
sub
mov
inc
sub
fldcw
sub
add
adcl
scas
lds
add
lods
xchg
in
mov
jae
sub
nop
pop
cmpsb
loopne
in
lcall
cs
jecxz
cli
and
lar
jmp
lcall
dec
and
into
adc
aad
fistpl
call
or
and
push
aam
call
pop
xchg
cld
mov
inc
pop
or
or
shlb
add
loop
sahf
add
pop
dec
test
xor
out
ds
icebp
add
cmpsl
pop
daa
int3
and
push
lods
fwait
or
insl
jp
fs
fcmovne
pusha
lret
aas
dec
lock
sub
call
sub
lods
jbe
mov
push
xorb
xor
jp
sti
mov
fbld
addl
rcrb
adc
je
push
inc
adc
jle
aad
push
mov
push
pop
sbb
add
testl
daa
testb
mov
invd
sbb
in
xor
sbb
and
adc
mov
js
jns
std
xchg
in
call
repz
icebp
cltd
sub
pop
sub
addr16
cmc
mov
xchg
pop
lahf
loopne
fmull
jae
std
inc
push
lods
call
jns
cmp
loop
into
movsb
push
daa
pop
adc
outsb
jle
fisttpll
in
jg
xor
inc
adc
pop
add
jmp
and
rorl
inc
outsb
stos
nop
lcall
pop
arpl
mov
push
cmpsb
pop
cmp
pop
add
sti
pop
in
out
jmp
adc
pop
pusha
flds
mov
stc
xchg
push
sti
negl
fadd
ss
mov
mov
dec
ret
imulb
and
aad
notb
dec
inc
test
pop
jns
xchg
mov
lea
outsb
or
in
mov
inc
aaa
repz
into
stos
into
pop
js
mov
jae
in
push
xor
mov
testl
pusha
imul
and
fbstp
ret
pushf
add
jns
fldz
out
iret
xchg
into
mov
cmp
lds
jge
into
repz
push
cld
scas
pop
add
sub
aaa
mov
outsl
and
addl
or
arpl
aam
mov
dec
inc
or
adc
das
insb
cs
cltd
xchg
lock
cli
in
and
add
test
jmp
push
or
fstpt
mov
je
sbb
push
jo
jecxz
repnz
mov
das
pushf
shl
fcompl
js
mov
cmc
inc
add
cmp
mov
insb
inc
xor
or
inc
inc
and
add
or
rcrb
cmp
mov
sahf
xor
insl
add
out
cmp
repz
repz
mov
sahf
push
in
insb
adc
cwtl
xor
clc
fwait
pop
cwtl
ret
adc
xor
mov
insl
lock
cli
repz
or
pop
add
push
cmc
out
fisubrl
imul
data16
arpl
pusha
stos
jmp
or
cmp
dec
xor
lods
mov
xlat
xchg
pop
les
push
testl
xor
adc
cli
mov
dec
sbb
insl
testl
jae
jo
jecxz
scas
mov
mov
push
test
data16
insb
aas
xchg
add
inc
cmpsl
addb
pop
push
dec
cmp
out
negb
sar
mov
fucomp
enter
arpl
shrb
jne
and
ret
jno
sub
sub
push
insl
pop
aas
repz
les
int3
jmp
pop
cmpsb
jns
sub
xor
xadd
cmp
sub
cmp
xchg
add
lahf
mov
mov
aad
pop
dec
mov
lods
pop
and
sar
push
pop
cmp
cli
and
cmpb
inc
or
push
inc
jmp
repz
push
cmp
cmc
ror
data16
push
xor
pop
inc
ss
insb
aaa
out
ret
roll
sub
imul
arpl
addr16
aaa
xor
add
or
adc
mov
dec
cmp
cli
push
ret
cld
es
rcrb
stc
data16
fwait
loop
or
push
add
bound
ret
adc
je,pn
lods
inc
dec
jne
mov
jb
or
push
fistps
or
test
or
les
jp
insl
lcall
js
pop
mov
push
ja
sbb
orb
xchg
lods
ljmp
add
test
push
xchg
out
xchg
call
sub
mov
movsl
roll
sbb
inc
rol
jg
xor
and
mov
scas
jbe
in
inc
mov
dec
or
push
out
add
pop
add
cmp
cs
dec
insb
cmpl
loopne
popa
and
test
or
ja
iret
inc
jno
out
xor
push
pop
es
inc
or
pop
iret
ret
ret
stos
cmpsl
adc
xchg
jne
out
pop
arpl
movsl
testl
in
push
inc
mov
pop
idivl
enter
sbb
loope
imul
xchg
test
lea
fbld
adc
sbb
cmpsl
mov
push
ret
mov
lock
xchg
mov
cmpsl
xor
sbb
mov
jne
sub
sub
push
or
lods
dec
jmp
push
add
mov
sub
push
xor
jbe
ljmp
adc
push
xchg
sbb
pop
fs
mov
jnp
cmpsl
mov
scas
mov
xchg
inc
cwtl
pop
pop
test
roll
or
xchg
mov
cld
lds
jnp
push
data16
inc
or
xor
jp
pop
ja
dec
sub
mov
adc
dec
pop
xchg
pop
popa
sub
shlb
jne
jbe
lahf
adc
dec
pop
rorb
xchg
dec
lea
orb
in
repnz
lcall
mov
aaa
mov
imul
fsubs
fimull
lea
xchg
in
lret
jae
fbstp
lock
cmp
fdivs
dec
cmp
mov
mov
mov
mov
pop
das
jl
push
mov
sar
add
callw
dec
mov
mov
nop
cwtl
daa
adc
test
mov
sub
rolb
call
movsl
adc
xchg
xchg
add
or
push
icebp
xchg
and
loop
pop
jo
xchg
std
shlb
fdiv
jp
imul
mov
jno
cli
pop
pushf
scas
or
xchg
push
add
sahf
int
xchg
in
dec
sbb
sub
aam
scas
loop
leave
sbb
xchg
jecxz
xchg
xor
mov
rclb
pop
mov
je
adcb
mov
imul
inc
mov
xchg
mov
mov
jns
xor
stc
dec
push
mov
lret
popa
imul
lahf
inc
jecxz
pop
push
push
pusha
popa
shrb
nop
xchg
push
mov
mov
mov
push
addr16
shr
jb
sub
lock
or
mov
fadds
mov
clc
xchg
ljmp
pop
jb
push
push
jo
cmp
sbb
ja
arpl
cs
sbb
cli
dec
addr16
bound
xchg
jno
mov
add
ds
sub
and
jne
inc
xor
and
mov
or
sub
or
sarl
jg
sbb
sbb
xor
jnp
jg
or
xchg
cmp
xor
lcall
arpl
rorl
push
daa
jecxz
ret
call
dec
int3
movsb
data16
push
xor
fs
dec
xor
mov
or
sbb
pop
mov
popf
std
and
sbb
pop
push
rorb
jns
insl
sbb
dec
icebp
mov
ret
ret
shl
mov
dec
mov
mov
call
mov
jge
sub
out
pop
push
sbb
xor
adc
inc
rcll
push
mov
or
inc
gs
mov
shll
jae
ss
cmpsl
icebp
push
maskmovq
testl
jmp
mov
ja
sbb
ds
stos
nop
add
cmp
pop
jb
adc
int
es
cld
inc
cmpsb
testl
jmp
or
push
std
movsb
mov
frstor
dec
xchg
andl
dec
popa
aam
and
leave
aas
scas
test
cmp
jbe
lea
daa
fs
xchg
pusha
dec
jge
sub
push
aad
add
les
test
sahf
out
scas
scas
mov
imul
cmp
idiv
sub
xchg
out
mov
imulb
sub
test
cwtl
lcall
js
lret
and
lret
loop
push
movsb
rcrb
adc
pop
sub
lea
aas
orb
divb
dec
into
mov
or
enter
repz
repz
repnz
mov
cwtl
cld
sub
pop
mov
sbb
push
cmp
icebp
dec
cs
mov
outsb
fs
das
jl
add
pop
adc
cmp
sbb
jo
add
arpl
cmp
add
xor
pop
mov
adc
jmp
movsb
movsb
or
mov
roll
mov
imul
daa
add
sbb
jnp
and
and
out
mov
shl
xor
mov
mov
dec
cmpsl
call
jge
mov
aaa
bound
dec
adc
add
fists
inc
cmpsb
and
outsl
testl
testb
push
imul
lcall
into
pop
jno
xor
cld
push
loopne
jp
lea
sub
inc
and
mov
and
mov
jecxz
orb
loop
dec
rcll
cs
push
mov
cmpxchg
sbb
hlt
or
mov
mov
jmp
jecxz
jnp
jecxz
xchg
mov
inc
add
enter
push
frstor
out
lret
popf
xor
pop
repz
pop
popf
hlt
adc
into
push
lock
pop
mov
dec
push
pop
cmp
or
movsl
cltd
adc
lret
and
clc
mulb
stc
sbb
movsb
leave
movsl
stos
in
mov
push
sbb
ret
push
fwait
lock
movl
sbb
pushl
xchg
sbb
ja
sti
jl
sbb
pop
out
adc
movsl
mov
sub
out
test
xor
pop
test
pushf
and
ret
jge
and
mov
dec
insl
insb
or
movsb
popf
mov
inc
xchg
jg
jae
mov
loop
sub
loop
notb
filds
cs
dec
sti
in
ja
or
lret
test
pop
add
pop
and
daa
xchg
getsec
jge
pop
jb
mov
fsubp
mov
mov
sti
sarb
dec
je
sub
xchg
adc
mov
lcall
pusha
rorb
and
inc
mov
cmpb
add
pusha
or
xor
fistpl
aas
dec
push
stos
push
xchg
in
mov
bound
clc
pop
pushf
test
popa
push
sbb
add
adc
lds
lret
enter
enter
jb
jge
sbb
push
xor
aam
xor
or
je
pusha
mov
iret
aaa
ret
jbe
loop
lcall
adcl
imul
iret
dec
inc
testl
outsl
mov
pop
arpl
xor
xchg
iret
push
stos
and
xor
jo
cltd
movsb
cmp
dec
cmpsl
movsl
pop
rcr
xchg
mov
nop
cmp
mov
xchg
subl
insl
cltd
aaa
stc
pop
add
dec
cmp
dec
and
out
stc
arpl
das
xchg
mov
push
pop
xchg
adc
inc
fstp
fmul
xor
push
ret
jmp
add
cmp
add
jb
in
mov
sbb
js
lret
insb
adc
lock
or
adc
dec
fmul
add
in
adc
aas
and
cmpsl
xor
xchg
add
loopne
mov
lods
pushf
push
inc
jle
jno
add
mov
dec
mov
loop
push
scas
out
sbb
dec
jo
inc
xor
push
jl
jge
cmpsl
enter
mov
mov
inc
test
stos
lods
pmullw
adc
ret
shl
call
dec
xchg
repnz
adc
xchg
push
aam
das
cli
xlat
mov
mov
addr16
xchg
or
mov
sub
dec
scas
cmpsl
xchg
leave
pop
jmp
xchg
xchg
lods
mov
sbb
sbb
sbb
xchg
decb
cli
add
dec
negl
pop
test
xchg
cmp
scas
dec
andb
in
adc
xchg
dec
jmp
cmp
insb
nop
jno
insl
mov
mov
push
add
push
mov
dec
js
xor
xchg
cmp
xor
mov
vpaddd
lds
out
push
rcrl
mov
pop
lds
enter
je
pop
cmp
ret
fwait
arpl
mov
lods
sub
repnz
mov
jno
dec
enter
push
mov
fsts
dec
lock
cmp
mov
je
mov
sub
hlt
push
push
aaa
imul
mov
in
and
sti
pop
cmpsl
adc
divb
pmulhw
mov
jg
adc
push
test
popa
xchg
scas
mov
insl
cmp
xchg
icebp
stos
mov
and
mov
or
jns
loop
ret
jge
or
data16
rorb
orl
enter
aam
test
shlb
xor
rorl
jbe
cmpsl
jl
rorl
mov
adc
xchg
dec
mov
dec
cs
gs
cmp
mov
mov
sbb
lahf
ret
flds
pop
jmp
pop
xor
jnp
std
test
push
and
mov
mov
push
aaa
insb
repnz
jbe
shlb
xchg
push
jg
sub
cmp
push
add
sti
jae
mov
cmp
sbb
mov
push
loop
push
cmp
mov
push
xchg
aad
or
mov
sub
dec
lods
jl
sub
sbb
mov
gs
shll
xchg
fs
pushl
mov
clc
out
imul
repnz
inc
or
jmp
pop
and
cmpsb
jns
test
clc
push
xchg
repz
stc
mov
push
rcl
adc
adc
cwtl
sbb
cmp
into
sub
mov
movsl
mov
insb
pop
pop
jne
in
loope
and
cmc
mov
ret
insb
mov
int
fcomps
jmp
jecxz
and
jle
dec
inc
mov
xor
xor
xchg
sub
push
pop
inc
pop
mov
fiadds
lahf
lahf
jo
xchg
cs
adc
push
and
aaa
push
js
subl
cmp
mov
lds
jo
pop
aas
je
push
sub
or
and
setg
dec
xchg
adc
icebp
hlt
mov
sub
xor
stos
sub
cmp
mov
add
xor
xlat
movsb
mov
repnz
cld
cwtl
imul
out
pop
jne
int3
pop
adc
js
push
aad
sbb
rolb
mov
mov
fldlg2
out
inc
pop
int
or
and
aaa
cmp
cld
imul
insb
inc
xchg
je
es
pop
ret
jg
jecxz
sub
sbb
rol
xchg
push
mov
mov
xor
repnz
mov
cmpsl
pop
arpl
sbb
xchg
xchg
dec
call
cmp
jg
xorl
sti
stc
out
push
aaa
fisttpll
xchg
repz
inc
xchg
pop
aam
popl
sub
inc
cmc
xor
pcmpeqb
bound
cmp
jnp
pusha
int
aad
clc
cmp
loop
data16
loope
aaa
push
jmp
imul
push
mov
sub
popa
mov
iret
add
mov
push
adc
mov
in
xchg
adc
rolb
out
test
jmp
push
stc
stc
inc
or
lret
cltd
add
push
jecxz
push
test
div
lods
les
test
xchg
lock
mov
push
adc
cld
or
out
test
dec
dec
fsubl
mov
roll
and
pop
lea
fdivl
mov
test
inc
sub
xchg
dec
js
out
mov
das
fwait
out
pop
int
adc
mov
cmp
cltd
fiadds
inc
lods
xchg
aad
fwait
movsb
sarl
subl
xor
or
les
xchg
jo
or
mov
jae
shlb
filds
imul
loop
mov
cld
jg
rorl
in
sarl
adc
enter
pop
cmp
push
imul
rclb
sub
pop
bound
jne
pusha
adc
stos
andb
mov
add
add
jle
xchg
loop
mov
jmp
jno
fsts
dec
sar
ja
rcrb
push
jg
ss
cmp
jb
js
call
sub
cmc
add
test
stc
test
fistpl
inc
cmp
jnp
enter
and
std
inc
mov
sub
les
aaa
or
pop
adc
cmc
cli
sbb
pop
daa
lds
push
xor
repnz
fwait
les
jnp
and
loopne
aaa
inc
add
flds
inc
or
arpl
mov
rcll
repz
lods
xchg
mov
sbb
nop
sub
mov
popf
inc
shl
sbb
rorb
pop
and
adc
notb
mov
xor
inc
xchg
push
xor
test
push
push
sbb
inc
aam
mov
clc
ljmp
jl
sub
pop
cmpsb
cmc
lahf
jne
or
xor
cltd
out
adc
cmp
inc
mov
inc
mov
insb
xor
pop
xchg
scas
xor
xor
mov
repz
je
and
mov
stc
jo
fdivs
test
adc
mov
gs
shl
pushf
xchg
xchg
or
pop
adc
std
push
mov
hlt
and
lods
pmulhuw
mov
cmpsl
sbb
filds
add
sarl
push
cmp
jmp
jle
sbbl
mov
push
int
mov
push
add
sbb
fiadds
loopne
aaa
outsb
mov
out
mov
hlt
pop
or
imul
fsubrs
push
push
mov
xlat
jg
fisubrs
nop
popf
xlat
cmp
adc
sbb
xchg
pop
and
inc
push
out
and
jae
jg
jp
fisttps
subb
push
fiaddl
jb
sub
add
jp
add
xchg
aad
mov
mov
arpl
ljmp
popf
les
das
dec
pusha
xchg
xlat
pop
jle
ja
jp
int
mov
xor
flds
jg
or
pop
cmpsl
push
ljmp
or
sbb
or
dec
icebp
mov
fiaddl
mov
mov
or
in
push
push
addr16
xor
push
ljmp
sti
adc
out
outsb
pop
movsl
enter
in
incl
jge
mov
mov
xchg
fsubl
jno
sbb
jae
pop
pop
shll
ljmp
icebp
add
lret
jns
scas
dec
or
lock
in
cltd
cmp
and
mov
nop
xchg
pop
outsb
ficomps
cmp
sbbl
rcr
jmp
cmp
sub
rolb
lea
adc
scas
decl
cmpsl
adc
test
xchg
in
inc
mov
insl
cs
pop
iret
mov
int
pop
or
repz
push
pop
fists
inc
xor
aas
mov
and
xchg
stos
repz
jle
cs
inc
fnstsw
lea
adcl
inc
lock
cltd
daa
sub
pop
jae
inc
into
out
gs
sbb
dec
icebp
sar
rolb
bound
ret
mov
lea
in
ret
pop
hlt
sub
mov
sub
dec
inc
popa
add
or
fadd
push
stos
nop
and
pop
xchg
xor
test
jecxz
xchg
lcall
cltd
cltd
fnstcw
push
inc
xor
dec
aam
lods
xchg
sub
xchg
push
aad
xor
sbb
jno
mov
loope
mov
mov
push
and
cmp
mov
rcll
mov
sub
dec
pop
in
popa
adc
cmpsb
pop
and
xorl
test
cmpsb
xchg
dec
rorl
mov
pop
les
add
mov
stos
into
stos
dec
aad
jmp
sub
push
push
mov
lret
or
pop
adc
xchg
mov
inc
les
mov
mov
lods
or
lret
and
daa
xor
in
iret
lahf
xor
mov
and
test
out
and
outsb
lea
sub
loopne
in
sub
and
mov
outsl
ret
push
or
or
or
and
out
repnz
or
dec
leave
push
sti
xchg
and
xor
mov
jo
jne
lds
jecxz
ret
add
es
dec
out
dec
inc
sub
dec
aam
sub
mov
out
and
jecxz
sti
fsin
mov
jmp
fwait
ljmp
pop
shl
and
or
imull
pop
ja
push
mov
push
lods
dec
jge
jnp
mov
aam
loope
dec
jbe
shll
add
pop
and
inc
loopne
popf
pop
mov
xor
aas
push
repz
in
add
inc
movsb
lahf
movsl
adc
in
inc
gs
mov
xchg
ja
pop
xchg
les
xor
sub
fstl
lahf
adc
cwtl
cmpsb
in
aas
push
dec
mov
or
in
mov
pop
or
repnz
sub
sbb
sahf
or
jg
out
int
sbb
mov
push
jae
inc
cmp
mov
call
xchg
repz
imul
addb
mov
mov
sub
and
test
in
jns
inc
xchg
data16
fldenv
push
or
sub
dec
and
xchg
xchg
xchg
daa
mov
rcl
and
fstp
and
insl
ret
lods
xor
push
jg
ds
sahf
push
lods
in
shrb
and
cld
js
pop
test
mov
adc
pop
stos
std
mov
adc
lock
fstl
insl
pop
lods
adc
outsl
imul
das
fbstp
fldcw
push
imul
push
add
fcompl
jae
in
ljmp
mov
push
mov
inc
sbb
and
and
das
sbb
cmp
lods
adc
jle
mov
imul
call
repnz
sbb
adc
mov
mov
stos
loop
xchg
insl
mov
cs
xorl
inc
jecxz
in
hlt
aam
pop
outsl
and
ss
sahf
push
adc
inc
cs
mov
mov
add
fcomps
sub
cmp
sbb
data16
mov
and
pop
frstor
sbb
mov
popf
add
push
aad
fcoms
popf
mov
and
xor
aaa
out
das
xchg
fdivl
fisubl
pusha
xchg
std
sti
in
pop
aaa
jp
mov
push
push
outsl
inc
adc
in
mov
sub
scas
xor
fsub
mov
aaa
dec
pop
jne
xchg
fs
jg
test
xchg
add
icebp
popf
pusha
aaa
xlat
sub
je
and
les
leave
or
cmp
ret
inc
loopne
icebp
jge
scas
push
imul
pop
add
cmp
inc
fcmove
jbe
cmp
test
fwait
push
dec
jecxz
out
stos
decl
les
nop
and
jecxz
rcrl
cmp
push
cmc
les
test
inc
jl
lcall
les
push
ret
fdivs
stos
push
icebp
push
nop
jecxz
pop
repnz
jae
outsl
push
pop
dec
dec
sbb
lret
sbb
and
call
shlb
xlat
cmp
sub
cltd
xor
aas
rolb
lahf
mov
cwtl
pop
add
dec
mov
mov
das
in
add
in
cs
int3
jne
mov
enter
outsl
push
mov
xchg
pop
cmp
aas
pop
jmp
stc
or
mov
jno
sub
imul
int
lods
iret
cli
push
std
test
jecxz
js
jp
repnz
rcrb
pop
xchg
stos
jmp
adc
iret
pop
cmp
jbe
bound
fxch
mov
xor
jl
sahf
and
lds
xchg
inc
pop
ljmp
adc
lea
sbb
mov
inc
jmp
insb
dec
push
pusha
shl
cmp
ds
clc
xchg
loope
out
andl
pop
mov
jge
test
clc
outsb
fnstsw
mov
add
push
cmpsl
loopne
ret
clc
or
repz
fucomip
push
push
push
or
pushf
push
and
imul
sbb
imul
pushf
push
push
xor
in
mov
xchg
pop
xchg
outsl
loop
mov
add
push
cmp
inc
xor
lret
in
sub
das
ja
sbb
in
push
cs
jae
jbe
jns
movsl
enter
xor
and
dec
cmpsl
push
bound
lock
outsb
pop
loop
pop
pop
lods
inc
cmp
mov
fisttpl
push
add
loop
out
insb
aaa
imul
mov
scas
iret
movsb
adc
test
inc
jl
add
cmp
prefetchw
push
mov
jbe
add
lret
dec
mov
int
inc
sub
lds
jae
es
dec
xchg
rcr
sbb
in
adc
cmp
xor
and
je
incl
int3
cmpsl
lea
push
sub
mov
push
clc
out
and
xor
out
adc
pop
jg
aaa
flds
inc
das
int
and
loop
lea
mov
mov
inc
sbb
mov
in
mov
cwtl
xor
aad
adc
outsb
insl
jle
adcb
dec
ret
dec
cld
cmpsb
inc
dec
enter
sub
cld
arpl
inc
sub
adc
mov
fidivs
cld
push
sbb
push
or
inc
test
jno
mov
sub
pushf
imul
out
out
lods
hlt
inc
inc
mov
aam
inc
or
or
cmp
fisttps
dec
daa
jl
pop
cmp
sbb
jns
std
sub
and
cmpsl
and
loope
mov
cwtl
jl
sbb
adc
jae
movsb
add
dec
test
push
js
fimuls
lods
push
jno
xchg
sub
sub
rol
xchg
or
fisubs
jnp
je
xchg
insb
ror
loop
pop
dec
push
ss
and
pop
jge
dec
jl
xchg
outsb
arpl
xlat
repnz
adc
xor
call
fdivrs
push
mov
std
xchg
inc
xchg
cmp
and
rorl
sub
cvttps2pi
shll
xchg
mov
mov
pop
js
pushw
push
jp
cmp
imul
cmp
mov
xchg
xor
test
jge
or
or
shlb
lahf
mov
outsb
adc
mov
inc
sub
pop
add
cli
scas
frstor
pop
shl
jns
inc
ja
mov
repz
lods
out
in
out
xchg
nop
mov
lea
imul
push
cwtl
ret
fwait
lret
add
les
jno
lea
dec
pop
das
addr16
data16
movsb
mov
repnz
dec
jg
xchg
movsl
mov
fsubs
outsb
lods
das
fstp
add
fsub
add
movsb
inc
testl
adc
or
pop
dec
call
push
push
mov
xlat
cmp
in
jno
dec
jnp
mov
xchg
jmp
data16
rclb
test
loopne
into
je
sbb
aad
cmp
pop
xchg
icebp
popa
pushf
sbb
dec
cli
jne
sbb
ja
push
fwait
xchg
movsb
enter
notl
int3
cltd
jns
outsb
mov
xchg
test
inc
out
pop
bound
jle
xor
dec
pop
mov
jp
fs
das
xchg
jecxz
jl
inc
inc
push
mov
xchg
xchg
sarb
and
pushf
lock
frstor
xchg
and
mov
jne
in
ds
in
mov
or
aad
inc
aas
xor
push
andl
jmp
cmp
add
xchg
rorb
inc
inc
je
enter
ds
dec
xor
icebp
insb
das
mov
mov
dec
scas
pop
mov
mov
test
mov
inc
and
inc
lods
lds
jl
xor
add
mov
out
insb
insb
lcall
mov
jp
mov
sub
shlb
push
pusha
in
call
mov
inc
inc
insb
push
mov
sub
outsl
push
shl
push
mov
js
sarb
je
call
shrl
lret
push
insl
mov
xor
dec
cld
icebp
insb
cmpsl
xor
or
movsl
or
addr16
xchg
add
and
xor
and
icebp
or
aas
xchg
push
nopl
lods
pop
leave
add
or
xor
leave
dec
or
shll
jle
jle
leave
test
pusha
mov
out
adcl
pop
fcomps
enter
int
inc
pop
pop
movb
sbb
pop
mov
xchg
xchg
add
adc
push
xchg
jae
stos
inc
repnz
xchg
mov
fistps
arpl
mov
imul
jb
mov
filds
jne
lods
shll
cmpsb
mov
int
out
adc
adc
mov
push
sti
xorb
cltd
mov
mov
ficoml
lret
dec
in
cltd
xor
aas
es
push
repnz
jl
pop
adcl
arpl
mov
ret
sbb
lods
cmp
mov
in
fcmovnbe
adc
fmull
push
es
sub
pop
sub
lods
add
repnz
inc
shlb
cmp
lret
divl
xchg
fisttpll
jo
mov
pop
or
cmp
push
lock
daa
pop
out
cmp
jo
dec
jge
mov
lds
mov
and
out
jp
xor
sub
in
pop
cmp
add
pop
fnstcw
push
mov
cmp
fld
xor
shrl
imul
mov
daa
bound
testb
pop
pop
test
push
push
adc
fldt
inc
imul
fs
xor
test
jl
clc
and
push
jmp
ret
cmpsl
nop
pop
mov
adc
mov
stos
std
sub
jl
mov
lret
dec
stos
aad
aam
dec
pop
mov
ljmp
and
call
inc
sub
fldt
jae
and
adc
mov
loope
shlb
adc
inc
sbbb
or
add
sub
xor
ret
sahf
mov
rclb
call
or
push
mov
int
sub
adc
add
xor
inc
iret
stc
jg
adc
or
jo
lock
inc
adc
add
lahf
xlat
dec
cmpsl
adc
mov
inc
cmc
adc
xchg
jcxz
imul
jno
push
imul
push
aaa
push
sbb
or
cs
pop
outsl
mov
xchg
inc
push
or
xor
jge
mov
xchg
xor
sbb
mov
push
fists
shrb
and
inc
movsb
ret
xchg
pop
or
shrb
push
addr16
insl
cmp
adc
lret
in
test
xchg
lods
out
adc
mov
popf
mov
dec
inc
mov
cmpb
mov
jno
inc
loop
test
fiaddl
arpl
inc
inc
mov
add
mov
fwait
pushf
lret
cld
sbb
ret
xor
insb
sbb
add
out
inc
jne
in
cmp
dec
mov
mov
push
push
popa
gs
sbb
stc
repnz
insb
sub
mov
cmp
subb
xlat
xchg
mov
popa
add
dec
mov
fnstcw
xchg
pushf
mov
lea
lock
add
mov
pop
cltd
insb
jne
nop
les
mov
loop
mov
mov
adc
fisubl
loop
or
fisttps
cmp
movsb
out
sbb
add
bound
int
sbb
or
cmc
jle
jl
cmp
mov
adc
stc
mov
loope
jae
std
mov
in
adc
stos
movl
test
stos
push
ficoms
cmpl
pop
ljmp
inc
pop
mov
in
sub
les
mov
dec
jmp
aas
sub
pop
roll
outsl
imul
mulb
jnp
ljmp
jl
movb
sub
popa
sbb
ljmp
xchg
or
cmp
in
and
js
push
pop
data16
push
sti
jne
xchg
inc
rol
fistpll
xor
imul
push
into
adc
fadds
sub
lahf
jne
cld
bound
rorb
jmp
cwtl
ds
mov
stos
mov
fsubl
xor
in
ficompl
les
mov
loopne
arpl
sbb
cmc
idivb
flds
bound
push
push
xlat
or
or
test
inc
test
xor
xor
adc
sub
movsl
sbb
cltd
pop
stos
or
or
pop
outsl
cmp
adc
rcrl
cli
shlb
pop
pop
repnz
push
push
dec
push
mov
pop
cmp
lret
xor
pop
mov
or
call
mov
repz
lds
stos
mov
xchg
out
and
inc
xlat
and
sub
idivl
jae
cmpsb
jp
adc
push
dec
out
mov
dec
jns
insl
pop
shr
aam
mov
test
cmp
test
neg
je
fnstsw
hlt
inc
push
gs
adc
adc
or
mov
es
mulb
cld
inc
mov
adc
xor
jno
dec
mov
imul
into
ret
sti
or
push
dec
add
push
jg
push
ficompl
sar
fidivl
js
iret
pop
cmp
inc
dec
mov
ret
add
sbb
out
sbb
adc
jb
cmp
adc
outsl
arpl
mov
push
cmp
sub
sbb
int3
push
loopne
and
push
push
or
popa
xchg
insb
jl
stc
mov
sbb
jno
pop
cmpsl
push
into
jge
add
imul
adc
jg
sbb
mov
popa
lea
add
dec
push
mov
movsl
xor
fs
xchg
sbb
pop
mov
leave
mov
or
inc
fs
or
dec
gs
pop
fsubl
add
nop
nop
lock
mov
insb
pop
mov
ss
lcall
shrb
and
les
repnz
rorl
lods
push
arpl
sub
push
imull
xchg
inc
ss
add
sbb
jmp
test
scas
fsubr
cmp
pop
add
dec
cmp
shrb
repnz
xchg
ret
lret
mov
mov
mov
or
sub
xor
inc
loopne
mov
hlt
push
sub
xor
cmc
testb
subb
cmpsb
out
dec
mov
dec
mov
sbb
mul
adc
dec
mov
xor
aad
in
lods
cmp
inc
sti
rcl
sub
pop
jl
jns
lret
or
xchg
pop
adc
subb
mov
pop
ret
lock
out
xor
adc
inc
pop
dec
mov
jnp
sbb
movsl
iret
popa
lods
jmp
adc
sub
ss
xor
in
test
jb
test
sbb
aas
outsb
pop
lret
leave
inc
cwtl
sbb
push
lea
mov
cmp
push
fsts
rclb
push
bnd
adc
and
cmpsl
mov
adc
cmc
test
hlt
nop
jnp
pop
jge
adc
mov
sti
out
sbb
mov
jo
inc
or
push
icebp
int3
mov
sti
es
enter
mov
shlb
mov
gs
popl
adc
lods
fdivr
das
and
add
dec
call
add
push
icebp
push
negl
mov
xchg
mov
and
adc
xchg
inc
insb
cmpsl
cmpsl
push
arpl
in
sbb
sbb
mov
inc
mov
repz
xchg
jmp
int
mov
cmpsl
inc
mov
jb
rcrl
xor
adc
jbe
sub
xchg
mov
ficompl
xor
mov
inc
jmpw
mov
je
notl
pop
cltd
xor
jg
or
mov
popf
xchg
inc
and
ret
dec
sarl
or
addb
xorb
mov
ror
adc
sub
dec
out
pusha
lahf
cmc
repnz
hlt
fidivrl
jle
xorl
lahf
data16
mov
cmpsl
call
rcrl
push
cld
std
cmc
xchg
je
pop
fimuls
pushf
mov
jge
iret
cmp
test
push
jbe
add
mov
xor
mov
mov
fisttpll
in
std
jecxz
lret
nop
cmpsb
cli
scas
sub
jbe
mov
in
ljmp
repz
mov
adc
or
hlt
fnstsw
popf
cmp
lods
mov
popa
movntq
out
pop
cld
push
xlat
stos
rcrl
mov
xlat
ffreep
lods
es
mov
lock
mov
popa
mov
mulb
jle
repz
mov
gs
xchg
and
add
sti
pop
jbe
out
jo
sti
dec
outsl
and
aam
mov
pop
pop
insb
mov
pop
fcomi
mov
jbe
inc
pop
mov
mov
out
and
lods
xor
sub
sbb
pop
cmpsb
jnp
xor
cmp
cmp
sbb
lds
pop
xchg
lods
cld
and
mov
ja
loop
adc
test
mov
mov
mov
add
mov
inc
fsubrl
mov
jecxz
xlat
or
icebp
or
mov
mov
inc
and
lahf
xor
mov
sub
pop
pushf
pop
jae
mov
push
or
lret
sti
and
push
fistps
push
not
push
jbe
push
stos
inc
mov
in
push
add
shr
pop
out
cmpsb
add
into
inc
lock
pusha
jae
mov
in
ds
mov
loopne
xlat
movsl
ficoml
rcl
mov
mov
aad
xchg
aas
out
pop
pop
scas
enter
negb
mov
icebp
testb
mov
in
jp
mov
bound
pop
cs
test
dec
push
movsl
adc
addb
insb
or
ds
pop
in
aad
scas
xsaves
into
in
dec
add
popf
add
fdivrs
in
leave
shll
shr
int
jns
in
jecxz
adc
stos
testl
mov
jns
or
imul
cmpsl
dec
orb
mov
popf
stos
mov
xchg
pop
jne
xor
loop
jp
test
shll
push
sahf
cmp
in
pop
into
xor
mov
into
divl
or
mov
mov
pop
xchg
push
xchg
fiaddl
call
xchg
add
push
std
jbe
cmpsb
xor
mov
call
mov
lock
lret
jg
mov
out
aas
dec
lock
sbb
dec
xlat
out
jp
ja
dec
ret
test
jecxz
xor
xchg
cs
aad
lea
sbb
cmp
adc
ss
loope
ret
push
mov
adc
fdivr
or
lock
testl
scas
or
nop
mov
mov
sbb
xorl
and
in
lds
aam
pusha
test
jl
loop,pt
mov
jns
andl
imul
jbe
add
pop
fcomp
jl
insl
aad
inc
js
xchg
out
add
clc
loope
repz
lea
push
fnstcw
sti
int
mov
or
cld
or
jnp
cmpsb
movsl
rcrb
or
dec
int
pop
lret
jb
mov
movsb
fwait
or
xor
in
sub
jnp
xchg
xchg
fdivrs
lods
xlat
add
xor
fstl
push
jg
mov
fadds
push
push
loop
out
stos
in
mov
inc
cmp
or
sbbl
fmull
or
in
xor
jne
add
jb
xchg
cltd
int3
mov
popf
nop
inc
sub
test
shll
mov
cmpsl
jb
rcrb
scas
dec
or
clc
xchg
cmp
lahf
lods
mov
mov
or
adc
mov
hlt
out
xchg
mov
xlat
jg
icebp
aam
sbb
jo
sub
pop
dec
arpl
lock
pop
jp
dec
jp
mov
je
rolb
adc
cmp
jae
add
mov
xor
int
clc
repz
xchg
out
or
iret
dec
dec
popa
jecxz
scas
out
stc
cmp
ss
and
lock
bound
push
loop
jo
cmp
xchg
mov
insl
int3
sub
inc
mov
and
dec
subl
mov
imul
ja
push
fstpl
or
pop
repz
popf
mov
lret
aas
and
sub
add
or
push
xchg
mov
dec
sub
les
push
mov
testb
push
mov
test
scas
fwait
ja
sbb
cmpsl
jmp
sbb
push
xor
fsubs
enter
mov
jl
or
insb
daa
mov
mov
mov
push
fwait
xor
jmp
imul
xlat
mov
push
adc
and
push
push
mov
pop
add
sub
loope
add
lock
adc
xor
test
cli
cltd
jg
js
leave
icebp
push
lock
fldt
mov
std
enter
add
push
cvtps2pi
jecxz
shlb
jge
jnp
and
movsl
dec
and
popa
jnp
hlt
out
mov
sub
std
sub
xor
xor
aas
inc
and
pop
jmp
mov
pop
or
add
adc
js
insb
out
stos
cmp
xchg
gs
adc
aam
outsl
or
xor
pop
jle
add
mov
xor
in
xor
jns
pop
push
sbb
mov
in
add
int
mov
cmp
js
mov
inc
dec
push
scas
hlt
addr16
jb
in
and
stos
pop
orb
pop
out
aam
test
lahf
or
cmp
sti
jp
outsb
mov
pop
pop
adc
pop
outsl
sbb
or
or
lahf
pop
jno
lea
mov
jg
std
shrb
inc
or
cmpsb
adc
test
pop
or
icebp
sti
mov
push
dec
xor
jg
add
dec
adc
fnstsw
inc
sti
addr16
jnp
test
rolb
addb
mov
jne
inc
jnp
mov
lods
test
mov
loopne
movl
dec
inc
fwait
inc
or
imul
push
dec
je
das
dec
xor
negl
mov
sarb
pop
mov
inc
mov
mov
insl
adc
sbb
jge
fmuls
adc
daa
fisubs
xlat
xor
fists
lods
ja
mov
mov
cmpl
in
xchg
dec
bound
or
scas
push
pop
in
mov
sbb
push
mov
add
ds
daa
lcall
mov
push
cmp
faddp
daa
mov
data16
add
nop
mov
push
mov
xchg
jl
shlb
repz
cmpsb
rorb
outsl
sbb
bound
add
bound
mov
int
stos
in
mov
dec
outsl
dec
sub
out
ds
cli
out
pop
adc
jae
and
cltd
stos
cs
das
out
jae
in
imul
mov
hlt
jle
rcrb
out
inc
movsl
mov
popa
push
push
scas
out
xor
inc
or
jecxz
fiaddl
loop
repz
xor
push
stos
aam
pop
sub
mov
test
mov
xor
orl
popf
into
xorl
push
and
fidivs
add
xchg
xchg
xchg
mov
fistl
cmp
sbb
xchg
push
fs
leave
dec
mov
cmp
nop
dec
push
mov
test
xchg
cwtl
pop
pop
mov
std
mov
fs
ja
mov
nop
jb
cmp
sub
adc
dec
sub
div
push
mov
mov
aam
xchg
lcall
incl
push
jnp
cmp
gs
add
rcrl
out
vprotw
flds
and
ret
fnsave
sarl
lret
fsubr
dec
mov
ret
push
pop
ficomps
or
sbbb
pop
and
ljmp
lret
mov
lahf
adc
pop
lock
xchg
inc
subb
hlt
lret
flds
dec
mov
leave
or
add
rcl
pop
imul
mov
adc
push
xchg
repz
xchg
mov
ds
lea
jnp
add
sub
dec
sti
sbb
insb
adc
imul
orb
arpl
test
add
pop
imul
iret
xor
cmpsl
mov
jae
mov
dec
nop
xchg
and
dec
or
add
sub
xchg
push
push
xchg
loope
popf
sub
rcl
aam
fwait
pop
adc
sbb
adc
jo
add
sarb
cmp
jp
testb
arpl
mov
pop
pusha
popf
xor
dec
std
in
cltd
adc
lcall
das
adc
repnz
adc
shlb
mov
mov
dec
popf
nop
adc
in
pusha
ret
push
mov
inc
clc
scas
or
out
or
cli
fs
adc
sti
xchg
sub
mov
jb
mov
fnsave
repz
cmpl
nop
sub
jecxz
mov
xchg
in
addr16
and
cli
test
addb
jp
xor
in
sahf
jo
or
lcall
inc
jnp
adc
jp
xchg
xchg
lock
xchg
cmp
adc
pop
sub
out
sub
and
pop
sbb
mov
cmp
sbb
fnstsw
xchg
mov
sahf
cld
lds
loope
mov
push
fwait
aaa
aas
das
std
jl
popf
daa
imull
fstl
adc
jle
lret
add
shl
inc
mov
cmp
addr16
pop
mov
pop
cmpsl
cmp
icebp
push
call
fisubrl
xor
adc
inc
lcall
xorl
dec
push
in
jns
dec
mov
jg
jl
test
sub
sahf
bound
sbb
or
nop
sbb
ret
add
cmp
lahf
mov
fstps
adc
xchg
popa
push
cmp
xor
pop
test
inc
sahf
and
inc
and
add
dec
mov
aas
inc
push
js
es
mov
pushf
subb
add
push
xchg
inc
sbb
test
pop
push
mull
out
ljmp
push
insb
mov
or
push
dec
add
or
imul
test
int3
js
xchg
shll
int3
inc
adc
popf
mov
rorl
jno
mov
push
jbe
dec
mov
int3
fst
jmp
js
fnstsw
dec
and
ja
cmpsl
in
fdivrl
mov
push
push
add
aaa
dec
jl
xchg
test
popa
movsl
xor
cmp
fistl
ja
ja
imul
ficoms
les
push
aam
mov
out
test
xorl
gs
stos
push
aas
lcall
aad
mov
add
addl
jecxz
mov
push
mov
ljmp
xchg
lahf
lock
sti
adc
push
shlb
subb
sub
lret
xchg
dec
push
data16
add
pusha
inc
mov
fisttpll
xor
dec
push
ja
and
add
dec
movl
loope
inc
out
dec
test
ljmp
jecxz
jp
test
das
cmpsb
sub
mov
sbb
test
pop
adc
test
lods
add
dec
aam
lods
sub
cmc
ficomps
arpl
xor
jnp
test
sub
outsl
shl
addr16
leave
incl
push
adc
testb
leave
fisubl
cmp
sub
adc
das
popf
sbb
test
arpl
imul
jae
insl
sbb
xchg
adc
cli
and
roll
pop
adc
repz
push
test
adc
clc
and
iret
pushf
scas
pop
xchg
bound
loop
lea
mov
mov
cmp
lods
xchg
setge
xchg
mov
jbe
scas
fdivs
fnstenv
arpl
movsl
adc
dec
xchg
jge
imul
pop
adc
push
imul
jl
dec
fdivp
mov
rcrl
xor
push
and
sti
jmp
ja
ja
push
push
add
scas
mov
or
aaa
rcll
in
pusha
pop
xchg
movsb
add
into
mov
jp
shrl
adc
sar
inc
inc
insl
shll
insl
lock
leave
in
sbb
out
aaa
pop
and
movsb
xlat
mov
push
in
mov
pusha
mov
fld
xor
xor
mov
sbb
sub
add
ljmp
push
lods
cmp
stos
sarl
cmp
lods
popf
jecxz
in
jb
jae
out
out
or
sti
out
jnp
jmp
pop
rcr
jns
adc
jne
int
int3
pop
mov
sbb
addr16
or
and
add
movl
adcb
inc
jae
loop
mov
cld
insl
cltd
dec
gs
sbb
lock
iret
fcomps
dec
popa
notb
sub
or
out
jp
cmp
bound
cmp
outsl
push
insb
sbb
ss
lret
out
adc
or
inc
cmp
add
imul
outsb
xchg
lods
jno
push
roll
pop
dec
mov
lods
aaa
sub
push
push
roll
stos
push
lret
das
popf
jo
sbb
cwtl
inc
je
hlt
lcall
stc
mov
mov
mov
out
cmpsl
outsl
sbb
lea
test
shrb
xor
dec
mov
fucom
inc
push
xor
xor
mov
jno
dec
jmp
pop
sub
cmp
fsubrp
push
jbe
or
je
mov
push
shlb
out
fwait
mov
jb
les
cld
mov
in
outsb
lods
or
lret
decb
jmp
mov
out
rol
jnp
mov
jns
cmp
jge
push
xchg
sub
lret
notl
or
mov
pop
cltd
test
ficoml
sub
and
xchg
jp
jmp
jg
pop
cs
out
xor
inc
lods
pop
out
cmc
push
test
popf
jge
int3
jmp
push
pusha
push
arpl
mov
repnz
push
adc
xchg
mov
jle
push
outsb
daa
rcrl
and
push
bound
cwtl
mov
inc
push
inc
push
cmp
mov
dec
mov
mov
mov
aad
cmpsb
mov
inc
addr16
addr16
pop
imul
push
xchg
in
and
mov
daa
pop
fsubl
cmp
es
xlat
in
pop
ret
gs
shlb
dec
test
cmp
and
and
int3
adc
push
insb
xor
mov
into
xchg
mov
int
popa
dec
xor
popa
add
clc
jle
inc
cs
sub
mov
repz
mov
adc
outsl
adc
mov
push
mov
and
ja
hlt
push
hlt
hlt
mov
dec
add
xchg
sahf
push
out
jl
xor
fildll
cmp
fcmovb
or
inc
or
sbb
mov
outsl
test
fists
popf
idivl
push
adc
adc
pusha
lret
movsl
mov
out
cmp
mov
inc
sub
sbb
ljmp
inc
xchg
out
adc
scas
fisubl
sbb
rcll
or
cmp
insb
mov
and
std
sub
outsl
sbb
ja
and
pop
repnz
sub
mov
jp
and
iret
mov
jb
addr16
push
cli
xchg
mov
dec
shrl
sub
and
cbtw
cli
repz
jno
xor
and
xchg
add
test
not
lods
pop
hlt
mov
inc
sbb
pop
das
jns
popf
nop
cmp
pop
pusha
test
lcall
pop
mov
mov
lcall
cwtl
loop
sbb
loop
inc
mov
decl
sbb
mov
mov
cmc
jae
or
pusha
out
imulb
cmp
inc
in
push
fbstp
out
lea
cmc
jecxz
insl
add
and
jo
sahf
lods
sbb
adc
popf
and
bound
jecxz
pop
insb
movsl
add
sub
push
cmp
cld
aas
dec
call
dec
cmc
pusha
sub
out
push
jae
sbb
push
popf
test
sbb
fadd
lcall
sub
or
xor
stos
lods
mov
movsl
and
outsb
pop
inc
pusha
lret
xchg
je
mov
test
movsb
jge
mov
cltd
mov
mov
mov
lret
sub
sbb
hlt
int3
sbb
xchg
and
jb
inc
fld
inc
push
mov
sub
mul
xorb
repz
xchg
out
push
mov
jnp
shll
mov
push
jno
sub
jecxz
xor
stos
fbld
movsl
pop
test
dec
dec
add
adc
out
pop
xor
push
xchg
or
push
cmpsl
jmp
sar
sbb
sbb
and
insb
xchg
decl
sbb
fimuls
adc
pop
fsubrs
addr16
mov
sti
aad
addb
out
fldcw
ja
inc
jbe
jno
fsts
ss
cmp
in
mov
xchg
aam
lret
cmp
gs
xor
imull
push
scas
gs
lock
in
cs
or
imul
add
cwtl
xchg
pushl
or
push
push
in
je
jl
mov
daa
sbb
sahf
sarb
xchg
inc
loop
mov
sub
pushf
mov
out
aad
inc
popf
jb
jecxz
popf
sbb
push
jle
cmpsb
or
mov
cwtl
movsl
mov
pop
mov
rol
cmp
fwait
in
xchg
xor
mov
subb
aad
sbb
xchg
mov
jle
cmp
jg
rcrl
sahf
sub
enter
jge
inc
fs
in
push
xchg
pop
outsb
jbe
jb
xchg
fwait
arpl
lea
push
rcrl
dec
inc
sbb
sbb
adc
gs
scas
xchg
lahf
xlat
mulb
inc
inc
xchg
and
sbb
fisttps
fwait
push
ljmp
dec
cmp
mov
scas
or
push
xor
in
aad
add
xchg
cmp
push
xchg
mov
xlat
aas
cli
cmp
xchg
mov
mov
push
loopne
data16
popf
and
jbe
inc
mov
icebp
inc
aam
cmp
mov
aaa
jno
sub
sbb
sub
jb
mov
mov
adc
mov
xchg
xchg
and
jmp
mov
fstps
xor
pushf
mov
mov
push
add
sub
test
pop
cld
int
xchg
das
or
or
adc
aad
cwtl
in
imul
shl
lods
jns
mov
push
je
mov
into
pop
and
sub
cmpsb
cwtl
push
lods
dec
push
negl
add
add
out
add
xor
cmp
cmpsb
inc
pop
pop
data16
push
inc
enter
sub
xchg
insb
xchg
sub
movsl
es
lds
xchg
pop
outsb
lret
gs
cmp
push
push
add
or
mov
movsb
lock
fsubrl
push
mov
mov
cmp
mov
out
shlb
test
cmp
arpl
mov
pushf
push
mov
push
xchg
adc
mov
push
pop
aas
out
sub
jge
dec
push
push
xor
hlt
cmp
or
mov
xor
stos
int
inc
imul
js
loope
fwait
cmc
mov
jge
test
add
rorl
mov
cmp
jg
stos
scas
jne
jmp
dec
aam
push
sbb
shl
mov
adc
hlt
xor
inc
or
jmp
ja
sub
push
repz
leave
xor
cmp
outsl
cmpsl
push
sub
sti
lret
cwtl
iret
sti
call
push
les
and
lcall
test
ret
call
ja
or
pop
or
loop
mov
cmp
rcr
cs
pop
in
sbb
xchg
mov
mov
xchg
jge
or
dec
int3
in
jmp
mov
int
testb
xchg
arpl
es
cwtl
pop
jle
stos
or
imul
aaa
jne
sbb
imul
cs
pop
testb
dec
sub
stc
add
mov
out
xor
ret
inc
add
shrb
and
sub
sbb
sub
scas
je
jne
jg
adc
stos
pop
loopne
cltd
mov
xor
dec
pop
add
in
mov
mov
popa
push
sub
rorl
inc
mov
pop
and
jl
inc
mov
movsl
js
aaa
cmp
divl
popa
push
movsl
std
fisttps
stos
sbb
in
lcall
inc
inc
push
cmpsl
or
into
pushf
lods
push
add
test
lret
inc
mov
stc
cltd
ljmp
ja
lods
jns
or
fistl
inc
inc
xor
lods
sub
lods
add
es
or
fldl
push
bound
jbe
js
daa
sbb
dec
data16
inc
adc
jae
jnp
mov
or
and
or
mov
movsb
pop
cmc
repnz
and
scas
imull
addr16
inc
push
mov
dec
pusha
mov
xor
addr16
jo
clc
mov
adc
iret
or
out
xchg
test
in
sbb
mov
pop
test
pushf
inc
pop
or
nop
rcrb
jmp
lods
push
lret
fsts
mov
lret
jge
test
icebp
jnp
mov
sbb
es
rorb
sbb
cli
push
mov
and
dec
testl
jb
outsb
and
les
adcl
xor
popf
and
jne
mov
jnp
push
xor
dec
repz
push
lds
insl
or
jp
daa
insb
out
cld
xlat
ljmp
inc
xor
jl
pop
iret
xor
ja
xchg
shl
in
fsubr
call
push
lret
test
fnstsw
test
push
std
pop
mov
sahf
rcr
cmpb
inc
insl
test
pop
mov
adc
frstor
sub
jno
mov
xchg
out
mov
pop
xchg
adcl
dec
cltd
fidivrl
mov
jmp
xor
inc
ljmp
xor
test
or
add
in
subl
and
daa
stos
push
pop
jnp
pop
and
es
out
scas
in
pop
into
lahf
cmp
imul
dec
inc
cltd
push
in
xchg
or
xor
ret
dec
push
adc
outsb
pop
int
ret
xchg
pop
loope
rcrl
shll
add
sbb
scas
jmp
mov
pushf
sbb
and
cmc
adc
add
jnp
xor
aaa
lods
repnz
or
jmp
in
inc
jl
hlt
scas
push
cli
mov
sub
or
or
fldcw
cld
int
pop
cmp
lock
sahf
mov
jae
mov
aam
gs
push
sbb
sbb
jae
mov
sbb
enter
insl
pop
loope
je,pn
addb
int3
sub
dec
adc
inc
and
xor
inc
icebp
jge
inc
mov
mov
rcr
push
pop
pop
adc
pop
lea
xchg
fs
pop
xchg
lods
sahf
ja
cld
shl
subb
xchg
in
gs
stos
inc
inc
pushf
je
pop
xchg
xor
shrb
cmp
jo
push
imul
pop
loope
add
mov
pop
notb
gs
pusha
repnz
scas
adc
push
arpl
ljmp
or
orb
xor
xor
add
repnz
xor
fidivrl
xor
inc
cmp
cli
pop
movsb
hlt
push
or
inc
arpl
dec
and
adc
subb
out
xchg
popa
pop
loope
loope
mov
scas
sbb
pusha
or
pop
es
ret
pop
in
fsubrl
adc
and
in
popl
clts
and
jns
mov
inc
paddw
gs
adc
mov
cmp
pusha
xorl
in
fstpt
dec
arpl
sarl
jno
sbb
sbb
mov
or
lea
rcrb
and
outsb
sub
jmp
subb
mov
out
xchg
xchg
dec
and
cmp
dec
in
sub
pop
cld
outsl
nop
inc
dec
mov
dec
js
cltd
popa
orb
xchg
test
xchg
push
popf
sub
jge
xor
and
cmpsl
push
push
add
movsb
and
lds
inc
jne
cmp
push
int3
imul
lret
add
arpl
jl
pop
mull
push
out
dec
push
or
outsb
jb
dec
xchg
outsb
repz
dec
es
movsl
cs
xchg
cwtl
fcmovb
mov
sbb
lahf
xchg
jae
lea
mov
xor
push
shrb
stos
jae
mov
adc
xor
push
pop
es
adc
ljmp
jge
std
cmp
lret
hlt
add
out
loop
mov
push
addr16
adc
stos
cld
xor
clc
add
hlt
xchg
xlat
out
mov
add
cmp
inc
xor
ficompl
mov
jecxz
aas
adc
mov
fisubrs
les
dec
scas
xchg
lock
int
and
cmp
xor
push
into
xchg
sbb
cmpsb
lcall
jp
and
andl
inc
in
sbb
es
ss
adc
push
sub
xor
xor
jle
sub
ret
cli
je
cwtl
mov
outsl
and
divl
outsb
movsb
mov
sbb
daa
xchg
jl
push
or
insl
fs
out
push
xchg
adc
adcb
sbb
cmp
mov
aaa
or
push
push
dec
push
icebp
popa
shlb
cmpsb
out
add
jp
int3
nop
sarl
sub
outsl
adc
mov
inc
add
lret
ss
lds
mov
jl
ret
pop
xor
add
sbb
repz
in
push
repnz
mov
adc
fimull
enter
scas
cltd
inc
div
popa
xchg
mov
pop
sub
std
mov
clc
cmpsl
mov
and
inc
push
lods
imul
cmp
sbb
mov
shll
lahf
jl
leave
inc
jb
jb
stc
pop
mov
rcl
add
inc
add
adc
adc
test
sbb
fs
loope
scas
jl
and
daa
push
fdivrs
pop
rcl
fwait
jg
xlat
jl
mov
mov
adc
ret
inc
mov
sti
in
and
mov
or
push
mov
repz
int3
loope
cs
cld
lods
sub
lods
pop
xchg
add
cmp
add
pop
add
adc
incb
shrl
outsl
lea
ret
cmp
xor
and
sbb
adc
movsb
mov
fisubrs
mulb
loopne
lods
cwtl
push
lahf
jmp
xchg
jno
jbe
pushf
xor
fmulp
aad
add
sub
data16
testb
cmc
out
cwtl
ss
fldcw
add
loop
fcomps
mov
aas
jecxz
aaa
sbb
xchg
xlat
jnp
jbe
jns
js
cmp
mov
lock
adc
aam
popa
mov
mov
push
jae
adc
mov
dec
lret
es
push
or
push
xchg
jge
xor
jecxz
jno
sbb
sbb
or
pop
pop
push
popl
or
or
dec
mov
or
mov
cmp
mov
movsb
add
sbb
xchg
cmp
xor
pop
pop
rcll
icebp
outsb
dec
subb
outsb
loopne
ret
pop
lahf
cmp
dec
jnp
imul
int
mov
push
repz
stos
push
mov
sbb
iret
or
mul
mov
inc
jmp
dec
gs
cmpsb
mov
mov
cmpsb
mov
mov
sub
mov
das
xor
push
stc
enter
test
add
rorl
addr16
push
xchg
fsub
subb
js
bound
mov
popf
addr16
sbb
pop
sub
mov
repnz
xchg
mov
cmc
mov
dec
sub
mov
out
sub
mov
pusha
daa
cmpsl
dec
mov
into
lds
inc
scas
dec
shlb
pop
out
dec
and
fwait
xchg
leave
mov
jmp
mov
sbb
lock
and
and
xchg
aad
fs
in
xor
movsl
adc
movsl
and
das
arpl
shl
imul
inc
cmp
rolb
xchg
mov
xchg
popf
lods
xor
cld
fs
cmp
je
push
data16
int3
xlat
mov
pop
or
add
aaa
push
outsb
xchg
leave
or
test
sbb
xchg
shlb
mov
add
bound
cmpsb
sub
mov
stos
mov
and
pushf
xor
sarb
sbb
or
nop
les
push
mov
dec
jno
mov
jl
push
adc
int
ret
add
xchg
sbb
pushf
bound
push
ja
pop
xchg
ljmp
imul
jl
inc
mov
push
hlt
ret
jo
je
jae
push
cmp
jno
sbb
hlt
sbb
sbb
jge
pop
test
bound
dec
inc
and
mov
dec
xlat
ds
andb
lods
aas
or
sbbl
jo
mov
xchg
ret
imul
sub
xchg
push
mov
sub
jne
outsb
test
sbb
dec
pop
ljmp
mov
mov
aas
dec
clc
sub
mov
xor
jbe
mov
fdivrs
hlt
shrb
inc
in
xor
in
jg
pushf
sub
stos
jp
rcrl
pop
mov
cli
cld
aam
test
out
pop
mov
shlb
xchg
aad
test
lds
and
sub
push
push
and
sbb
je
sbb
adc
mov
jno
jae
cmp
into
cmp
cmp
or
mov
xor
mulb
jmp
xlat
repz
and
mov
sbb
dec
and
ret
sub
int
lds
andb
or
jnp
fcmovnb
inc
popf
jmp
fxam
or
jo
sub
sbb
daa
pop
xor
jmp
fsubrl
out
xor
sbb
scas
in
cmp
pushf
mov
aad
enter
or
jnp
dec
jnp
add
pop
mov
pushf
push
es
shrb
mov
lds
js
lea
push
mov
xchg
jecxz
mov
dec
fldt
sti
mov
scas
test
in
sub
push
adc
pop
fs
fnstcw
ds
mov
mov
andl
xlat
sahf
bound
mov
mov
jg
in
lea
cs
push
jbe
mov
mov
ficompl
ret
sub
push
fcoml
xchg
iret
inc
dec
xchg
sahf
lret
cmp
movb
add
out
xchg
jne
aam
daa
push
andb
shrl
jmp
lea
in
sub
pusha
out
pop
mov
lock
andb
addr16
in
scas
ffree
jbe
int
pop
push
xor
inc
and
adc
fidivrs
jecxz
lds
in
loopne
es
hlt
testb
push
jne
ss
push
cmc
mov
mov
jg
xor
dec
or
dec
dec
xchg
pop
iret
push
fsts
adc
and
sbb
in
mov
inc
ret
repz
std
pop
mov
scas
aas
xchg
enter
popa
xor
fwait
inc
pop
sbb
sbb
cltd
aam
xchg
out
and
lahf
and
loop
adc
js
sbbb
daa
mov
add
xlat
cmp
mov
pushf
or
in
dec
dec
popw
out
addr16
scas
loopne
addr16
jno
pop
xchg
fwait
sahf
stos
push
addb
cmp
out
and
mov
icebp
inc
dec
add
xorb
mov
daa
inc
push
scas
inc
mov
xor
into
std
sti
mov
in
enter
jg
sbb
cmp
jmp
js
sti
and
xchg
daa
pop
sbb
pushf
clc
outsl
test
popf
xor
inc
dec
xchg
mov
mov
shl
mov
mov
or
aaa
das
andl
cmp
jnp,pn
fsubrp
xchg
lret
or
sub
xlat
lods
dec
cltd
inc
leave
and
in
or
mov
mov
gs
and
jne
cld
ret
sbbb
mov
sbb
dec
add
push
mov
lret
or
data16
pop
sbb
cmp
mov
and
gs
lret
xchg
cmc
sub
inc
cmpsb
add
rorb
sub
pop
or
sbb
xor
sbb
sysexit
push
rcrl
scas
xor
xchg
pushf
cli
daa
adc
xor
xchg
enter
fsubl
roll
iret
call
outsb
in
mov
jne
pop
aad
out
pop
pusha
aas
cmp
mov
pop
mov
sbb
dec
jb
icebp
mov
daa
jb
test
jmp
sub
push
add
mov
pop
xchg
movsb
add
sbb
roll
cmp
repz
push
lcall
cmc
jmp
js
or
adcl
popa
iret
cmp
cmpsb
out
cs
hlt
push
sti
push
stc
insl
dec
std
arpl
iret
xor
into
or
lods
lods
xor
cmc
mov
xchg
lods
dec
push
sbb
push
jecxz
jg
mov
cwtl
push
addr16
cmp
imul
adc
xchg
push
repz
sbb
into
in
cld
mov
sub
inc
scas
fldl
pop
sub
pop
or
pop
aad
cmc
sbb
mov
or
mov
dec
stos
sub
sub
ret
or
xchg
dec
push
movsl
mov
mov
out
sbbl
adc
adc
in
sub
arpl
sub
lock
mov
mov
mov
cli
ljmp
outsl
popa
pusha
add
cmp
mov
jne
scas
cmpsb
xor
int3
gs
in
lret
xor
and
jp
sbb
mov
lods
cltd
lea
pop
jle
xor
cmp
in
mov
add
pop
fimuls
loopne
aas
dec
push
leave
in
xchg
stc
xchg
test
push
inc
cmpl
popa
adc
shr
ret
jne
jle
cmpsb
out
adc
mov
fwait
movb
sub
inc
jmp
imul
inc
dec
jns
pop
add
testb
shl
incl
cmpsb
or
xchg
shll
fidivrs
out
in
push
arpl
ret
pusha
pop
lcall
mov
xchg
arpl
mov
outsl
adc
cmp
sub
inc
pop
jne
add
mov
jae
mov
imul
rcrl
cmp
inc
xchg
jle
jns
aam
or
and
cmp
fcoms
mov
sub
shl
aad
or
xchg
mov
pop
addr16
sbbl
add
xchg
adc
in
add
cmp
fbld
fiaddl
in
inc
and
or
inc
mov
sub
and
jb
and
daa
or
or
nop
fucomip
sub
stos
mov
lcall
cmp
subb
jno
pop
das
pushf
stc
jns
add
gs
pop
pop
push
clc
sbb
gs
mov
jecxz
xor
push
loop
sub
dec
rcl
dec
dec
xor
mov
daa
ds
dec
dec
cltd
hlt
and
cmpb
lea
mov
js
mov
adc
pop
lret
mov
dec
dec
lods
sti
sbb
xchg
or
aas
mov
add
jae
xchg
push
jg
aam
pop
scas
cld
repnz
push
mov
lods
lret
mov
pop
jge
int3
adc
dec
ljmp
inc
push
out
sarb
lods
ret
xor
loopne
movsl
enter
xor
lahf
in
les
sbb
or
cmp
cli
es
pop
lahf
cmpsb
cs
mov
popf
in
int
dec
mov
fistpl
cs
cmpsb
dec
loop
push
cmp
fwait
dec
dec
mov
mov
fs
pop
sahf
xchg
out
jle
xchg
cmp
sti
insb
jecxz
loopne
mov
add
jmp
shr
dec
xor
mov
push
xor
or
movsb
mov
push
lret
xchg
add
mov
cmp
sahf
push
clc
loopne
push
push
mov
and
ljmp
cwtl
ss
popf
inc
mov
in
pushf
mov
push
dec
mov
fldcw
dec
es
cmp
push
add
cwtl
inc
ja
cmp
test
pop
adc
jecxz
ljmp
mov
ljmp
mov
push
mov
push
icebp
call
fildll
incb
in
cs
imul
push
inc
int
aad
test
shrl
push
xchg
test
bnd
sub
push
scas
mov
jae
call
ret
imul
cs
cmp
pop
fisubrl
inc
outsb
das
mov
into
jbe
xchg
add
jl
xor
or
mov
fwait
sub
adc
mov
mov
mov
inc
inc
cmp
inc
lods
fwait
push
movsl
inc
jge
or
hlt
sti
movaps
add
and
jge
pop
test
insl
dec
roll
or
daa
mov
mov
iret
mov
int3
call
push
xor
jo
call
adc
inc
add
cltd
mov
jg
sbb
addl
popf
push
sub
out
and
pop
or
mov
adc
fimull
jmp
dec
push
aam
mov
xchg
pop
mov
fnstsw
in
or
psllw
arpl
out
push
jo
push
popa
movsl
jmp
pop
xchg
jge
dec
xor
enter
dec
ret
push
cmp
mov
add
lds
icebp
jp
mov
aaa
mov
inc
sti
decl
add
or
popf
hlt
push
or
mov
xor
xor
insb
push
inc
mov
daa
xor
insl
add
fsubrl
push
mov
adc
jmp
sbb
mov
arpl
add
sub
inc
xor
sub
cwtl
pop
scas
es
popf
add
mov
inc
cmp
xlat
loopne
shlb
rclb
punpckhdq
aaa
add
pop
dec
in
push
xor
sub
inc
or
addr16
jp
jne
popa
iret
cmp
dec
shrl
std
mov
and
lret
rorb
cmp
addr16
push
sbb
popf
lcall
xchg
push
mov
cltd
lcall
out
sarl
and
testl
fwait
bound
inc
sbb
mov
push
ljmp
xchg
mov
pop
jecxz
inc
cwtl
ss
lds
dec
leave
out
call
roll
jns
and
sub
xor
and
lcall
sub
and
adcb
icebp
push
sarl
leave
add
cmp
pop
mov
push
out
shll
pop
add
in
pop
ret
aam
fbld
mov
mov
scas
add
push
mov
jl
mov
add
pop
cmp
dec
stc
inc
les
lret
scas
arpl
add
cltd
aam
dec
cmpsb
push
cld
mov
scas
cmpsb
sbb
or
shll
rep
push
insb
jnp
cmp
jmp
scas
pop
and
xchg
lock
cmp
mov
pusha
andl
xchg
insb
or
and
cwtl
mov
lds
ja
xchg
or
mov
pushf
add
xchg
testl
inc
rolb
push
ss
adcb
cmp
shll
lret
jg
pushf
inc
push
cmp
pop
mov
sub
dec
fisttpll
adc
sub
inc
gs
mov
iret
or
inc
es
add
ljmp
insl
sbb
fcmovnu
subb
pop
shll
hlt
sub
loopne
xor
in
mov
xor
stos
jl
sub
sbb
jle
addr16
adc
sbb
aaa
cmc
mov
bound
ljmp
enter
sub
mov
pop
add
stos
push
cmp
xlat
lods
jb
aad
jns
mov
mul
pop
fidivrs
pop
or
mov
push
adc
repnz
push
or
fwait
into
insl
cltd
sbb
xlat
and
popa
out
ror
jno
ljmp
movsl
jge
pop
outsb
inc
data16
ds
data16
fdivl
xchg
jne
add
or
fwait
pop
cmp
sub
inc
out
mov
stos
adc
aad
jge
aas
cs
inc
shrl
mov
cmp
das
mov
iret
repnz
das
les
pusha
mov
fmulp
xor
xchg
andb
cmpsl
ret
and
push
fdivr
push
cmc
mov
popa
cld
xor
dec
mov
inc
fildll
fcompp
cmp
xor
lret
sub
push
and
fiadds
or
pusha
imul
cmp
lock
je
cmp
and
lock
inc
clc
nop
stos
ret
xlat
cmp
pop
dec
test
cld
xchg
xor
jg
daa
jb
cmp
addr16
adc
fwait
mov
popf
rcl
and
cmpsb
out
dec
add
dec
dec
xchg
pop
fs
mov
push
and
pop
xor
movsb
or
inc
jno
sahf
fidivl
sub
loopne
and
or
int3
sbb
sbb
push
fidivrs
jmp
push
jo
push
ret
or
fcoml
jg
adc
out
mov
lock
adc
push
lea
mov
lds
xchg
jno
sbb
mov
in
and
inc
push
or
pop
out
lahf
loope
aad
popa
push
sub
std
inc
int
call
clc
dec
mov
ss
fwait
ljmp
popf
or
int
lock
pop
call
lcall
not
jnp
pop
rcrl
sub
pop
pop
es
xchg
push
or
inc
lods
push
jbe
jg
fidivrl
jecxz
mov
decl
add
scas
dec
push
inc
jno
sbb
hlt
xchg
mov
jo
and
fwait
xor
mov
shlb
mulb
jns
scas
rcrl
fbld
mov
rorl
movsb
lahf
test
in
pusha
ljmp
jecxz
jns
dec
adc
test
or
stos
lods
push
sub
mov
jle,pn
movsb
jne
jle
adc
mov
sbb
push
iret
and
fneni(8087
cmp
cs
dec
std
push
xor
xchg
mov
and
cld
and
push
adc
in
push
or
cmp
dec
dec
sub
pushf
flds
dec
insl
fs
mov
lea
test
adc
jnp
cmp
enter
mov
and
lret
and
repnz
stos
adc
test
inc
pop
imul
out
pop
daa
dec
cmpsl
scas
daa
sbb
adc
jmp
pop
pop
xchg
mov
mov
jmp
inc
push
jle
pop
sub
inc
mov
cmp
jecxz
inc
test
add
mov
jae
sarl
testb
cld
xlat
pusha
testl
adc
or
jge
xchg
ror
add
mov
mov
push
cmp
mov
xchg
das
dec
xor
fcoml
mov
rorb
cmpsl
inc
mov
inc
out
arpl
testb
push
xor
adc
out
jns
xor
push
xor
cmpsl
psubsb
cmc
inc
xchg
xor
cmp
divb
jge
fwait
movsb
or
adc
jle
mov
sub
arpl
cmpsb
cld
mov
push
nop
in
mov
mov
loope
mov
test
jo
push
lret
pop
jmp
icebp
js
lods
mov
mov
test
add
popa
js
rcr
clc
push
xchg
pop
repnz
in
sub
sbb
mov
sbb
jne
mov
cmpsl
ficoml
push
cmp
lds
adc
xlat
pop
cmp
cmp
cmp
pop
cmp
ss
lock
mov
punpcklwd
jecxz
mov
inc
scas
lahf
js
mov
pop
mov
aam
cmp
iret
stc
sahf
loope
pusha
add
rcrl
aaa
das
pop
call
rclb
add
das
mov
jns
adc
decb
cmp
stos
nop
and
and
decl
or
jg
pushf
stos
aaa
push
add
int
neg
sub
cmp
and
icebp
inc
xchg
ds
std
data16
xor
and
pop
pop
std
popa
pop
les
mov
pop
mov
xchg
dec
cmpsb
pusha
popf
rorb
mov
stos
sub
push
jo
je
mov
dec
mov
arpl
out
mov
sub
iret
xchg
aas
xor
jg
je
popa
out
mov
test
subl
sbb
lock
std
add
bound
and
in
sbb
inc
dec
sbb
jbe
adc
dec
push
sub
int3
in
sbb
fldcw
pusha
loopne
jl
les
mov
push
mov
fsubrp
es
mov
xor
jne
aas
dec
push
adc
aam
jo
and
add
das
dec
or
or
leave
subb
pop
dec
sub
ret
lods
lahf
push
mov
sbb
out
aad
mov
fisttpll
mov
inc
int3
pop
in
out
fs
flds
push
loop
or
test
insl
dec
ja
repz
std
push
scas
or
and
push
push
fisubrs
push
lcall
shrl
lods
mov
in
fnstsw
fsubr
dec
push
add
in
xor
int3
cmp
es
out
stos
xchg
sub
idivb
repnz
add
adc
xchg
mov
outsb
and
mov
jl
fiadds
sub
fnstsw
shrb
pushf
cmp
stos
test
out
sub
mov
cmpl
cmpb
dec
push
sbb
movsl
in
pop
xor
jno
cmp
repnz
push
mov
sub
inc
or
nop
rorl
sub
popf
or
bound
insb
cmp
je
xor
repnz
push
mov
scas
cli
mov
mov
sti
inc
mov
adc
lods
or
mov
rcl
lea
pop
bound
jno
pusha
or
dec
lret
or
adc
movsb
jmp
push
repnz
lods
push
pop
pushf
pusha
fstpl
mov
out
xchg
sbbb
loop
sbb
push
pop
ret
ss
push
sbb
js
push
jno
mov
dec
mov
pusha
call
cltd
aas
mul
mov
xchg
es
jle
data16
inc
sbb
mov
push
jmp
lret
jo
mov
push
fbstp
stos
inc
shrl
ret
stos
push
js
dec
icebp
cmp
lcall
push
push
cmp
cltd
xor
pop
and
cwtl
fisubl
mov
mov
jo
mov
mov
mov
xor
or
mov
mov
adc
clc
test
movb
scas
add
push
mov
add
push
jne
adc
add
scas
xchg
xchg
mov
inc
pop
lret
or
pop
rcll
inc
outsl
xchg
mov
mov
xchg
in
mov
cmpsb
outsl
daa
shl
cmp
test
in
mov
pop
nop
cmp
outsb
inc
pop
out
out
xchg
xor
js
xor
in
pusha
dec
sub
aad
push
xor
testb
cmp
sahf
cltd
je
mov
pop
aaa
pop
jecxz
xchg
sbb
iret
dec
rcrl
ljmp
pop
jg
pop
in
in
push
cmp
dec
movsl
je
mov
sbb
bound
pop
dec
leave
es
test
or
sub
ja
je
sub
loope
cmp
loopne
leave
adcb
mov
stos
mov
out
adc
cmp
mov
out
xchg
in
jae
mov
pop
xchg
loopne
sahf
fdivrl
xor
mov
mov
enter
vrsqrtps
int3
inc
jne
jns
dec
shlb
stos
loopne
outsl
imull
fistpl
pop
jo
imulb
fsubp
shl
xor
or
xor
xchg
adc
sub
inc
shll
in
xor
dec
data16
ud0
mov
scas
dec
out
xchg
sub
push
jbe
sbb
inc
mov
push
sub
xor
in
mov
outsb
lock
insl
arpl
add
mov
test
cmp
jmp
shlb
test
aaa
push
ss
adc
cmp
inc
sub
sub
sub
cmp
loopne
pop
xor
jb
out
cltd
add
cli
pop
mov
mov
sub
out
movb
adc
adcb
mov
cmp
sarl
aam
stos
lods
movsb
mov
insl
out
lea
mov
mov
sti
daa
arpl
or
sub
cmp
inc
cmp
xchg
cmp
data16
leave
pop
xchg
mov
fisubs
lcall
dec
repnz
push
test
aas
push
xor
xlat
test
arpl
int3
std
add
or
mov
add
ja
fnstenv
fsubrl
shr
test
xchg
mov
xor
jo
pop
dec
sub
push
dec
shlb
jno
nop
addl
daa
scas
add
neg
cmpsb
faddl
pop
out
sub
iret
in
mov
imul
jae
int3
out
cld
mov
loope
xchg
inc
sahf
fldt
inc
int
adc
hlt
mov
lods
cmp
mov
nop
test
inc
push
and
jp
pop
ret
out
mov
ljmp
scas
adc
xor
xchg
and
fwait
enter
sti
cmp
aas
adc
pop
and
jbe
mov
sub
cmpsl
xchg
mov
mov
cmp
mov
add
mov
add
pushf
mov
fstpt
pmulhw
lods
stos
dec
push
fmull
pop
repz
mov
add
mov
jmp
dec
jb
push
filds
inc
pusha
lret
cwtl
sub
push
out
add
mov
push
decb
pop
shll
sbb
dec
addr16
mov
push
sahf
mov
cmp
hlt
rorb
jp
aas
addr16
negb
fsubl
pop
clc
jecxz
pop
scas
mov
clc
mov
push
add
jmp
loopne
popf
sbb
subb
insb
stos
cmp
xchg
jb
ja
add
cltd
mov
mov
dec
pop
pop
sub
and
inc
mov
dec
lock
jmp
daa
lret
xor
push
lcall
in
cmpsl
int3
pop
mov
cmpsl
sbb
arpl
sbb
mov
push
mov
ret
test
subl
mov
mov
inc
mov
mov
or
ficomps
mov
pop
ljmp
push
mov
scas
repz
ljmp
imul
mov
jmp
ja
fiaddl
dec
lea
aam
nop
insb
repz
scas
jnp
aas
sub
das
push
mov
and
pop
aad
mov
mov
pop
out
js
jp
and
div
add
cmpsl
xor
and
push
or
inc
arpl
lahf
repnz
aad
scas
dec
and
xor
xor
push
pop
cld
repz
xor
pop
jle
andb
cli
and
popl
mov
jmp
pop
outsb
jle
repz
sub
mov
fadds
inc
out
add
and
dec
popa
pop
add
push
sti
jb
mov
dec
xchg
imul
ds
sub
cmp
adcb
push
dec
jecxz
cld
sub
sub
xor
repnz
sbb
bswap
fnsave
cmpsb
mov
push
lods
dec
cmpsb
mov
test
push
lea
mov
nop
pop
imul
inc
test
mov
add
xor
mov
cmp
popf
jae
xor
mov
mov
cmp
dec
scas
nop
outsb
adc
movsl
xchg
cmc
xchg
cmp
dec
cmp
xor
xchg
and
std
leave
js
or
jge
jbe
es
pop
scas
sub
inc
imul
pop
aad
je
inc
xor
aad
nop
mov
nop
fisttpl
sub
mov
into
out
clc
mov
xrelease
fcomps
sub
cmp
xchg
fistps
push
test
test
mov
and
add
icebp
loope
lcall
cmp
andb
loopne
or
jmp
mov
mov
mov
and
arpl
dec
fcoml
std
addr16
jge
sbb
jbe
lods
push
je
jbe
outsl
cltd
mov
cs
mov
es
lret
into
jnp
fwait
xchg
pop
push
rcrl
lcall
and
es
fcoms
or
push
or
pop
sti
jg
pop
push
repz
cli
jbe
push
int
sbb
in
stos
push
mov
sbb
adc
push
ficoms
outsb
stc
xchg
adc
cmp
add
jecxz
es
iret
or
jp
aas
sub
test
nopl
mov
out
push
sti
mov
inc
sub
xor
pop
lods
out
je
xor
mov
fidivl
inc
adc
ja
cld
jnp
pop
sbb
std
jmp
fucompp
adc
cld
rcrb
inc
test
sub
bnd
loopne
dec
inc
sbb
arpl
int3
fwait
and
and
mov
mov
pop
mov
xchg
sub
cmpsb
dec
pop
call
jmp
lcall
xor
inc
push
les
pop
hlt
xchg
lret
out
nop
xlat
cli
or
fidivrl
call
adc
jo
loope
sbb
sti
xor
div
or
fsubs
mov
cwtl
xchg
jp
push
jp
pop
push
jl
fcmovnu
aad
scas
call
xchg
fucom
enter
add
inc
into
mov
pop
enter
fimuls
aas
pop
subl
aas
pop
pop
mov
out
mov
rorb
sub
popf
push
push
out
gs
cmpl
rclb
dec
sbb
bnd
mov
int3
addr16
jnp
cmc
lcall
xor
jmp
dec
stos
fcmovb
cmp
jp
push
push
mov
pop
push
cli
mov
pop
sub
pop
mov
mov
xchg
frstor
push
pop
and
cmc
push
addl
sarl
ret
pop
fs
lret
push
popa
lds
setb
data16
sti
sub
adc
dec
and
test
and
mov
fcmovnbe
mov
cmp
dec
xchg
sbb
jmp
orb
fsubr
ljmp
sub
je
out
mov
outsl
out
lahf
dec
test
adc
mov
shr
xchg
out
sbb
and
mov
sub
ds
ss
sub
inc
xchg
insb
xor
jp
cmp
xchg
sti
pop
push
out
pushl
cmpsb
cmp
loopne
xchg
aad
adc
mov
jno
push
sbb
xchg
sbb
fdivrl
jb
sti
xchg
push
js
or
movsb
js
in
inc
insb
arpl
int3
incb
lods
mov
inc
test
mov
lock
fsubs
mov
insl
lods
inc
imul
or
dec
movsb
arpl
stc
sarl
stos
mov
nop
sbb
inc
sahf
mov
movsl
mov
in
dec
jbe
pop
pop
sbb
pop
cmp
pop
sbb
dec
push
ja
sbb
cmp
or
pop
into
cmovnp
in
push
jmp
push
ja
jle
aad
mov
xor
bound
pop
fld
test
xchg
mov
js
xchg
inc
xchg
mov
inc
test
arpl
pop
lahf
push
aas
mov
subb
addr16
mov
imul
cld
ss
mov
in
jns
add
lcall
mov
sub
jns
or
outsb
pop
cmp
fsubrs
testl
subl
addr16
or
iret
inc
mov
cwtl
faddp
cmp
mov
rcl
dec
outsb
or
mov
xlat
push
loop
pusha
loopne
imul
dec
push
icebp
xor
push
sub
pop
pop
pop
dec
push
cmp
pop
outsb
xchg
fisubs
fucomi
in
xchg
xchg
ret
out
shlb
or
inc
or
aad
dec
and
call
into
ja
inc
movsb
loopne
push
and
ja
ret
adc
les
popa
dec
xchg
fsub
and
std
mov
xchg
mov
jne
xchg
inc
outsb
or
fmulp
jno
jns
push
fs
aaa
addr16
pop
or
jmp
test
jp
sbb
xchg
push
leave
xchg
mov
mov
pop
pop
daa
mov
leave
test
mov
jns
sahf
pop
xchg
in
div
adc
test
sub
dec
and
inc
adc
xchg
imul
and
xor
dec
mov
insb
add
jae
push
push
push
cmc
mov
cmpsl
fnstenv
push
dec
or
pop
jl
dec
aad
in
jecxz,pn
sbb
shll
mov
mov
cmp
negl
mov
cmpsl
adc
push
ds
cmpl
subb
lock
xchg
adc
push
in
push
sub
outsb
inc
mov
cmp
lahf
jns
and
cwtl
dec
ds
cs
adc
mov
inc
inc
ss
leave
cld
and
mov
xchg
xor
mov
jle
out
cli
stc
add
ja
jbe
xor
jp
lods
dec
add
sub
inc
stos
mov
mov
adc
jl
pop
xchg
jmp
jle
sub
loop
icebp
fs
or
pusha
movsb
mov
imul
sbb
lahf
clc
jo
add
daa
loop
aad
gs
in
mov
mov
mov
xor
inc
xchg
jg
mov
cmp
xchg
ret
jmp
scas
movsl
subb
pop
jb
movsb
cmpsl
pop
add
jns
dec
in
enter
adc
inc
mov
test
push
or
jbe
or
push
jmp
test
xchg
imul
scas
or
jp
insl
leave
sbb
sbb
add
test
jl
mov
lret
roll
jg
lret
dec
rcll
mov
xor
rcl
adc
mov
movsl
mov
call
mov
add
add
fdivs
xchg
pop
jno
clc
aaa
dec
cld
fdivs
fdivrs
ret
mov
ret
rcrb
jne
cs
xchg
addr16
mov
insb
aas
jmp
mov
imul
jge
jbe
mov
pop
mov
lds
mov
rolb
push
cmp
sub
mov
jecxz
add
ficomps
or
pop
je
push
jno
cmpl
sbb
inc
loopne
cmpsl
or
fsubrl
movsl
push
push
iret
outsb
dec
nop
fstps
jmp
es
sbb
sub
add
lods
jnp
inc
pop
ds
imul
push
sbb
imull
mov
outsb
aad
adc
cmpsb
mov
jb
fdivrp
mov
lahf
packssdw
rcll
add
xchg
add
jne
std
xor
pop
lds
in
bound
loop
ljmp
repnz
fstps
or
test
loope
hlt
unpckhps
inc
xor
mov
loope
ret
cmp
push
addr16
scas
mov
inc
sbb
cmpsb
inc
xor
jmp
stc
lret
add
fcoml
sub
pop
nop
push
data16
cmp
pop
add
dec
fldcw
mov
jb
push
js
flds
icebp
adc
shr
and
or
inc
pop
imul
cltd
xorb
or
sub
mov
shlb
loop
adc
pop
aas
insl
push
cmp
in
je
call
mov
addr16
call
outsb
and
cwtl
cmp
dec
or
mov
lds
xchg
add
addr16
jg
add
es
jmp
js
or
jbe
mov
mov
dec
jbe
pop
inc
in
test
test
enter
push
popa
jg
xorb
jae
xchg
jg
test
push
incb
fs
scas
aas
cmp
call
in
ret
loop
mov
dec
sbb
mov
pop
fists
or
cmpsb
testb
adc
add
xorb
inc
jmp
hlt
inc
mov
fisttpll
imul
sahf
xor
pop
faddl
sbb
ret
and
and
shlb
je
add
jecxz,pn
or
out
mov
jge
stos
in
cld
sbb
add
jge
movsb
or
test
sbb
xchg
stos
add
pop
add
adc
xchg
mov
adc
mov
mov
mov
xor
in
jmp
aaa
and
push
xchg
into
pop
push
lock
cwtl
pop
dec
fldt
enter
cmpsb
aaa
or
push
jae
inc
shll
sbb
push
inc
sbb
inc
es
cs
lock
dec
adc
jl
movsb
mov
inc
mov
push
fsubl
pop
addr16
pop
lret
or
pushf
jne
lret
insl
lds
sbb
out
jo
outsb
adc
or
ds
cwtl
add
lcall
sub
inc
xchg
mov
sbb
in
cli
fsubrl
xor
lahf
cli
sbb
es
push
fst
jmp
scas
dec
sbb
and
pop
cld
adc
enter
adc
lret
into
cld
stc
add
into
inc
ja
cmc
es
mov
cmp
cmpsb
insl
lods
ficompl
ds
mov
mov
xchg
or
pop
outsb
pop
fwait
ficompl
lahf
add
mov
adc
adc
es
imul
push
enter
cmp
or
dec
jae
cmp
and
pop
gs
xchg
repnz
push
jle
adc
mov
imul
stc
bound
shl
push
js
push
jge
inc
fwait
cmp
mov
push
cwtl
sbb
repnz
out
ss
je
sbb
mov
pop
ljmp
fs
stc
mov
xor
popf
mov
inc
push
and
enter
stc
xchg
add
stc
mov
imul
jecxz
nop
jmp
les
xchg
jns
adc
mov
jecxz
cmp
sti
lret
je
sub
cmp
cld
pushf
dec
sub
or
inc
loope
ds
lea
bound
mov
test
xchg
jbe
sub
sub
and
mov
push
sahf
cmp
cli
cwtl
and
test
add
push
int3
std
xor
jp
inc
and
stos
sahf
cmp
adcb
adc
cli
mov
addr16
rolb
shrb
sahf
jb
xlat
out
or
mov
mov
arpl
mov
cmp
shlb
enter
mov
cmp
and
sub
sbb
sbb
addb
fs
mov
pop
and
cmp
and
movsl
lods
jmp
cmp
cmc
xchg
inc
sbb
andb
andl
jg
xor
sub
jp
mov
std
pop
and
aaa
ss
cmp
and
sbb
icebp
lret
loopne
mov
cmpsl
lret
push
mov
lahf
sbb
fs
lock
cmp
dec
fidivl
add
cld
xchg
and
stc
xchg
sub
add
out
or
sti
sub
enter
nop
pop
pop
push
data16
call
dec
sbb
rcrl
cmp
stos
mov
dec
out
adc
push
xor
ret
insl
push
sti
and
dec
ret
mov
int3
rorl
mov
and
dec
ret
dec
mulb
add
cmp
dec
leave
add
rcrl
lret
adc
addl
cltd
push
xchg
popf
and
mov
ret
int3
and
call
sub
mov
jmp
incb
stos
clc
stos
cmp
loopne
ret
and
sahf
jl
xchg
lods
dec
bnd
add
jecxz
xor
sbb
or
fldcw
jnp
mov
repnz
cltd
push
sub
imul
dec
mov
jo
aam
popl
push
pop
inc
in
lahf
stos
xchg
push
inc
xor
outsb
sub
push
int
add
scas
shlb
sahf
push
mov
mov
fildll
push
jno
jl
enter
push
adc
push
jg
mov
xorl
insb
loope
add
mov
cmc
les
int
shlb
mov
adc
popa
mov
push
stos
lods
leave
xor
mov
xor
inc
sarb
stc
aas
dec
js
pop
and
or
fcomip
mov
adc
cmp
pop
push
dec
repz
jle
insb
dec
add
int
mov
int
sub
mov
xchg
cmpsl
dec
mov
int3
inc
not
jbe
or
call
ds
mov
jbe
mov
xor
inc
shl
jae
ficomps
pop
jle
in
pop
sbb
out
pop
xorl
xchg
les
fstp
and
ffree
jae
xchg
fsubrl
add
aad
mov
dec
sub
std
adc
pusha
scas
mov
clc
call
mov
out
sbb
fisubl
push
jle
push
cmp
outsl
test
mov
clc
test
repnz
lahf
sbb
and
ret
repnz
mov
lea
push
push
jbe
shrb
push
pop
push
shr
pop
fidivrl
inc
pop
mov
cld
cmpb
mov
rcr
sub
cmpsb
cmp
inc
lods
adcb
scas
add
fsubs
das
xchg
mov
in
fisubrl
or
sti
cmc
sub
dec
pop
cltd
jmp
int3
push
js
outsb
push
pop
repz
or
and
xchg
pop
or
and
jle
adc
push
test
inc
inc
movsb
gs
or
cs
jbe
insb
pop
pop
nop
mov
subb
cmp
dec
sahf
mov
lcall
push
push
sub
lods
fs
dec
adc
popf
jnp
xchg
imul
cmp
sarl
cs
ret
jle
mov
xchg
scas
jle
mov
pop
dec
gs
mov
es
add
outsl
pop
aas
test
scas
hlt
xor
and
xor
lahf
push
jo
jo
jp
push
scas
xor
add
push
adcb
popf
mov
ds
jl
xor
dec
push
jno
push
cwtl
jnp
int3
jp
or
push
das
jp
subb
loopne
adc
addl
int
out
jmp
sbbb
jns
jle
adc
pop
adc
push
mov
sbb
lret
xchg
repnz
lcall
in
pop
test
sub
gs
mov
aaa
pushf
inc
adc
xchg
sarb
or
popf
test
test
clc
mov
mov
test
test
lcallw
filds
lahf
mov
adc
or
testl
addr16
mov
lret
mov
testb
push
mov
push
push
gs
and
mov
push
dec
fldenv
pop
cmpsb
mov
mov
mov
jp
cltd
das
sbb
push
rcrl
push
jmp
xor
jg
or
lcall
mov
loope
js
out
push
push
ret
adc
xor
sbb
push
mov
daa
xchg
pop
mov
mov
cmp
and
jg
popf
mov
shll
xchg
je
pusha
mov
dec
dec
cli
scas
lahf
cwtl
fadd
push
test
jno
sbb
sub
stos
in
sti
jo
inc
lock
test
xchg
pop
enter
jns
imul
dec
inc
call
xchg
jle
pop
shl
ret
lret
lahf
jg
add
inc
adc
sub
inc
fwait
mov
adc
fsts
add
mov
lods
lcall
add
addr16
enter
sbb
xor
sub
jmp
sbb
aam
cmp
xchg
mov
jle
or
subb
stos
test
in
rclb
lret
sahf
xor
lea
lods
in
sub
loopne
fstps
inc
add
out
cmp
or
ss
pop
nop
xor
fwait
scas
shl
adc
and
fisttps
jge
sub
cmp
daa
jae
or
mov
dec
fwait
mov
fsubl
cmp
push
das
pop
arpl
add
jo
into
adc
lret
xchg
in
or
aaa
dec
rcl
bound
lea
xorl
inc
dec
cmp
std
fiaddl
pop
cs
shlb
imul
repz
pop
mov
aaa
lods
jne
shll
lahf
imulw
cld
push
mov
jl
ret
lret
push
out
mov
push
push
jg
and
and
loop
pushf
mov
andl
sbb
jmp
outsb
sti
jmp
jno
mov
adc
pushf
in
out
jbe
xor
sbb
shlb
in
mov
pop
pop
mov
cmpsb
outsl
push
loopne
leave
loop
ret
into
xchg
mov
adc
push
bound
mov
jb
jb
je
and
lahf
lods
xor
ffree
xchg
push
add
scas
fdivl
cli
cs
push
dec
rclb
mov
and
mov
loopne
jp
xchg
call
movsl
sbb
inc
subb
jge
ret
jmp
adc
sar
fimuls
fs
push
push
dec
stc
mov
ds
mov
jne
mov
int3
and
xchg
test
add
imul
mov
mov
adc
push
push
lahf
addr16
mov
sbb
sub
dec
or
lcall
fistl
sysret
add
inc
push
sbb
pusha
test
in
aad
mov
clc
push
sbb
pop
negb
fiadds
mov
xchg
push
mov
xchg
jge
pop
mov
and
or
cmp
cmp
pop
lahf
mov
xchg
push
fwait
mov
sahf
insl
lret
mov
add
scas
test
fists
mov
jmp
shlb
out
std
mov
mov
outsb
pop
lret
push
mov
dec
and
mov
pop
lahf
pop
jmp
xchg
sbb
fisubs
sbb
jae
scas
sub
repz
sub
pop
add
popa
les
push
xchg
subl
je
cltd
test
mov
cmc
fmull
int
mov
cmpsb
add
lcall
jg
popa
imul
and
xchg
xor
lea
mov
jp
jge
cli
mov
mov
jecxz
sbb
hlt
movsl
in
inc
jbe
popf
nop
hlt
jnp
test
dec
fcomi
cli
into
loopne
adc
into
js
add
push
ljmp
sub
dec
out
aad
fadds
jp
lahf
dec
in
into
loopne
das
divl
outsb
clc
push
aaa
lcall
jmp
cmpsl
arpl
aaa
and
mov
mov
negb
adc
iret
cmp
pop
or
mov
xchg
ljmp
push
xchg
hlt
mov
dec
sbb
imul
adc
mov
pop
push
ret
in
sub
lret
imul
xchg
mull
test
sub
clc
adc
in
inc
xor
jb
popa
mov
sti
pop
add
fs
daa
sub
mov
pushf
lret
sbb
pusha
and
dec
cmpl
fdivrs
pop
jge
aas
in
xor
shlb
lods
add
rcrb
enter
lds
push
cmpb
and
lret
out
js
enter
sbb
mov
jbe
and
into
repnz
subb
aam
imul
mov
pop
xchg
pop
sbb
jnp
cs
ja
jmp
loopne
mov
addl
test
mov
cmp
sub
into
ds
aaa
mov
pop
shrb
sbb
ds
mov
push
pushf
sbb
in
adc
push
icebp
sub
sahf
sti
je
into
xchg
xchg
imull
mov
pop
inc
in
or
dec
bound
nopl
int
push
dec
pop
aaa
sub
jg
push
insl
sub
push
lock
add
push
sbb
xor
lcall
jge
cmpsb
push
mov
push
out
xor
jno
std
popf
mov
mov
mov
in
add
ja
cs
xchg
outsb
mov
imul
testb
xchg
mov
into
insl
ret
xchg
shll
xor
xchg
push
inc
xor
add
xchg
les
movsl
mov
dec
incb
test
and
add
es
pop
lret
mov
sub
sahf
cmp
lock
or
sbb
xor
fnsave
outsb
mov
lods
dec
adc
mov
jae
xlat
daa
lds
cmp
xor
scas
xor
std
dec
in
ljmp
icebp
fmull
icebp
sbb
or
mov
les
and
sbb
mov
dec
mov
or
add
xchg
pop
mov
inc
aaa
jae
jns
fimull
cmpsb
xchg
push
xchg
push
mov
xor
roll
dec
xchg
inc
in
out
sub
iret
rcl
jle
jns
movsb
ljmp
dec
daa
sub
push
rcll
xlat
les
popa
xor
pop
jbe
adc
outsl
pop
movsb
movd
cs
lods
pop
addb
adc
lds
cmp
testb
jno
sarl
inc
sbb
add
xchg
xor
mov
sbb
pop
ljmp
movsb
and
stos
sahf
int
xchg
lcall
ret
ja
jns
adc
mov
repnz
loop
aas
mov
stos
frstor
mov
inc
sbb
mov
xchg
cwtl
mov
testb
scas
or
push
cld
inc
rcrb
std
icebp
ds
aam
inc
xor
sub
imul
lods
jle
cmc
je
xchg
mov
fidivrs
outsb
dec
notb
pop
ja
jmp
fdivl
in
and
push
xchg
mov
ror
mov
jp
adc
jmp
ljmp
cmp
stos
push
mov
insb
hlt
dec
pop
push
jae
addr16
ja
cmp
push
sub
sbb
daa
in
ficoml
fstl
push
gs
push
mov
push
jl
notb
fisubrs
sub
xor
and
cld
vpaddsw
cmpsl
mov
dec
andl
pop
sbb
add
jge
sbb
cmp
mov
nop
aam
sbb
dec
mov
das
push
sub
fsubl
aas
inc
mov
sub
lds
push
and
pop
insl
and
pop
jno
add
fists
mov
cmc
clc
pop
in
and
ds
nop
popf
mov
leave
ljmp
movsb
mov
sub
cmp
jne
sahf
push
lea
inc
adc
adc
shll
jmp
dec
inc
enter
push
pop
testl
gs
jns
xlat
and
imul
fldt
sahf
shl
dec
mov
imull
xor
adc
ljmp
sub
loopne
push
or
mov
stos
fstpt
fldenv
push
add
popf
daa
xor
and
cld
lea
iret
mov
clc
rcrl
sbb
out
xchg
pusha
pop
mov
ja
cmp
cmp
mov
pop
lock
stos
mov
dec
outsl
inc
adc
jge
aam
shl
mov
rclb
jp
ret
xor
addb
jno
mov
enter
jmp
push
hlt
push
shll
psrld
and
fisttpll
popa
pop
sahf
stos
test
ja
pusha
je
lret
or
add
adc
int
les
mov
out
stos
adc
jmp
cmp
mov
je
loope
lret
outsb
xor
imul
and
xor
push
mov
icebp
fwait
iret
rorl
pop
jmp
loopne
and
es
dec
push
jne
or
ss
adc
clc
xor
out
movsl
xchg
repz
sti
dec
jle
fsts
and
dec
scas
dec
arpl
and
fcomps
add
orb
outsb
icebp
sbbl
imul
inc
xor
xchg
mov
xchg
or
inc
sub
adc
scas
and
pop
insb
xor
mov
and
pop
jno
jae
push
mov
add
jne
icebp
out
mov
xchg
mov
cmp
mov
inc
mov
sarb
add
sbb
and
and
loope
add
inc
shll
lods
xor
jmp
push
sub
andb
cltd
adc
pop
ret
aad
fwait
nop
xlat
mov
fcoml
cmp
adc
out
test
scas
xorl
cmpsb
sti
xchg
addr16
sti
inc
jge
or
es
mov
popa
and
and
mov
bound
rorl
popf
loope
popa
sbb
mov
loopne
lret
add
nop
scas
loope
pop
xchg
aaa
or
sbb
sub
cmp
mov
sbb
pop
push
xchg
push
imul
or
adcb
fsincos
mov
xor
lock
ror
or
test
mov
insl
out
mov
std
rorb
lods
mov
icebp
mov
repz
lods
scas
or
iret
mov
and
xor
hlt
ss
repnz
adc
imul
lds
mov
aam
shrb
mov
xchg
adc
xor
flds
mov
xchg
sbb
inc
push
fucomip
test
in
xor
fldenv
lock
mov
mov
sub
clc
cmp
rorl
scas
out
mov
test
jne
nop
push
mov
mov
mov
or
sahf
inc
loop
sbb
xchg
jb
dec
mov
movsl
es
lcall
cmpsb
enter
mov
leave
inc
pop
out
inc
inc
mov
sbb
push
xor
cli
les
sub
mov
and
inc
push
lods
sbb
rorb
or
sarl
mov
movsl
dec
popf
xor
xor
push
mov
jb
mov
push
jle
inc
push
cmp
push
pop
mov
addb
add
fcoms
or
lds
add
adc
cmpsl
cmp
mov
pop
js
sbb
adc
dec
mov
test
push
xor
iret
mov
push
lea
loopne
aad
cwtl
repz
cs
imul
testl
sub
adc
dec
cmp
stc
jne
or
add
aam
dec
xchg
clc
dec
push
or
fsubs
addb
data16
adc
push
inc
in
fbstp
inc
xchg
jne
lahf
enter
pushw
je
dec
and
cs
mov
inc
pop
fisttpll
mov
lock
lock
and
mov
inc
xchg
daa
mov
cwtl
shlb
test
pop
mov
incl
mov
adc
xchg
and
push
sub
icebp
sub
and
add
add
push
mov
je
mov
lret
popf
icebp
les
jg
mov
mov
jl
int3
stc
push
xchg
cmc
pop
inc
lcall
sti
sbb
daa
push
mov
pop
push
sbb
jne
add
add
jno
in
cld
mov
fs
in
push
xchg
into
jle
sbb
pop
out
add
mov
repnz
xor
ret
adc
pop
hlt
xchg
lds
lods
xchg
movsb
add
mov
push
pop
ror
jle
cmpsl
aad
daa
jo
sbb
dec
pop
daa
and
inc
fstps
lds
iret
or
je
sbb
pop
lods
int3
push
movsb
cli
ljmp
ljmp
insb
loop
adc
mov
mov
out
adc
xchg
mov
sub
cmp
push
pop
data16
std
push
aam
xor
in
outsl
lds
push
dec
xchg
pop
pop
jbe
sahf
mov
loop
cs
mov
dec
xlat
inc
pop
cmpsb
sbbl
call
fcmovne
mov
sub
aad
scas
cmp
mov
push
mov
gs
cmp
sub
push
xor
roll
hlt
imul
loopne
mov
add
sbb
loop
out
xor
xor
iret
pop
imul
les
addr16
adc
out
or
mov
push
or
test
jnp
imul
loop
dec
imul
lock
aam
xchg
sbb
lods
sahf
cmpsl
iret
mov
jecxz
cmp
mov
aad
xchg
mov
jecxz
cmp
sahf
push
adc
cmp
sub
xchg
aas
out
xor
sbb
jae
cltd
push
js
rcrl
sahf
adc
xor
add
scas
inc
addr16
xor
jb
daa
inc
lret
add
push
adc
fadds
mov
mov
dec
pop
shll
bound
shlb
cli
loop
inc
add
testl
mov
mov
movsl
adc
push
out
das
loop
inc
push
insb
pop
mov
repz
pop
out
jae
cmpl
das
adc
mov
mov
push
or
or
bound
push
jmp
sbb
int3
loop
lret
or
dec
jnp
daa
cli
mov
ret
inc
pop
mov
jno
pop
xchg
adc
mov
mov
ret
loop
mov
loopne
iret
mov
scas
stc
clc
in
add
mov
pusha
and
jl
xor
jnp
push
jnp
push
lds
cmpb
clc
xchg
sub
and
scas
xchg
cmpsb
pop
jecxz
or
mov
or
js
or
test
or
sub
loope
and
outsb
in
arpl
das
pop
outsb
push
movsl
mov
fisubrl
jne
iret
push
sub
jle
cmpsb
mov
fwait
cld
sbb
mov
jle
pop
add
inc
xor
shrl
jne
sub
and
cmpsb
mov
add
shlb
push
out
inc
push
outsb
dec
aad
sarb
ljmp
inc
add
call
and
sbbl
mov
adc
dec
fimuls
bound
leave
xchg
xchg
fadds
data16
cmp
sbb
fiadds
out
adc
sti
or
dec
mov
fcompl
mov
addl
inc
inc
mov
mov
in
fs
stc
adc
test
jae
push
fstpt
mov
inc
fadd
mov
leave
inc
jg
repz
addr16
jb
dec
cmp
fwait
sub
sbb
inc
xchg
push
mov
lahf
sbb
xchg
in
xchg
add
shll
rclb
arpl
inc
repz
pop
shll
push
arpl
in
insl
cmp
lods
jno
pop
cmc
test
and
aad
repnz
mov
mov
cltd
movsb
mov
sbb
xor
icebp
out
testl
out
pusha
jl
xchg
cmp
push
sbb
fwait
loope
mov
push
mov
shll
fs
insl
shlb
cmp
stos
outsb
jns
test
or
lods
push
rorb
push
int
iret
inc
cld
adc
out
jnp
std
jnp
int3
push
push
mov
pop
std
fnstenv
insb
mov
cmc
sub
fwait
jb
dec
imul
pusha
dec
mov
movsl
cmp
sti
xorb
add
cmp
jl
adc
stos
mov
or
lret
out
in
add
lea
push
cmpsl
imul
rep
dec
pusha
fdivl
sbb
pop
subb
imul
in
int
adc
mov
pop
iret
pop
cltd
sub
in
lods
std
mov
add
icebp
in
inc
fimuls
mov
or
inc
mov
push
jp
std
lock
pop
sahf
push
push
je
ret
or
movsl
out
movsl
ds
aad
flds
mov
dec
mov
xor
push
and
cmp
rcrl
in
cmc
rolb
icebp
fs
mov
push
mov
cmp
xchg
test
lea
test
insb
push
cmpsl
jnp
cs
cmp
mov
xor
sub
xchg
push
mov
push
mov
jecxz
orl
leave
mov
lea
jg
out
pop
inc
jnp
in
mov
data16
dec
stc
jbe
push
pop
dec
lret
divb
aas
scas
idivl
xlat
xor
mov
in
outsl
rol
loop
pop
into
imul
cmp
nop
dec
jb
adc
lds
push
dec
add
loop
or
fisubrs
stc
jmp
call
sub
fwait
and
std
sbb
test
movsb
mov
rorb
cmpsb
iret
and
stos
rcl
jb
daa
xor
insl
mov
mov
sub
sbb
ljmp
or
out
rolb
or
cmp
hlt
lds
lahf
dec
jne
out
sub
das
out
lret
enter
mov
inc
lcall
je
inc
ficomps
pmaddwd
mov
xchg
mov
fstpt
push
add
jmp
inc
out
repnz
std
pop
cli
in
sbb
inc
lret
fwait
and
cwtl
orb
fidivrs
scas
and
hlt
iret
sbb
int3
repz
aad
movsl
hlt
mov
movsl
rep
sub
in
sbb
xor
or
inc
hlt
sbb
xchg
inc
iret
dec
jle
add
mov
xchg
pop
and
jg
stc
jl
repz
xchg
std
push
scas
int
scas
push
jge
into
cmp
mov
mov
nop
push
shrb
mov
inc
adc
cmp
in
sub
dec
add
in
lret
test
pop
out
or
jl
ja
imul
fisttpl
addl
xor
inc
dec
test
jmp
xchg
cwtl
stos
lcall
jns
xchg
sbb
xchg
pop
inc
sbb
and
push
fildl
mov
test
aad
jbe
mov
mov
test
xor
sbb
sahf
xchg
rclb
jns
lcall
pop
mov
cmp
test
cmp
inc
add
mov
xor
adc
adc
xlat
into
mov
inc
std
sbb
lock
sarb
adc
inc
lret
push
popa
and
pop
ret
shlb
int
subb
sub
push
in
into
dec
insb
xor
xor
std
jmp
fisttps
mov
addr16
xchg
pop
movsb
cmp
insl
aad
ret
arpl
test
roll
push
xor
stos
das
cmp
test
push
add
je
test
dec
mov
insb
xchg
push
inc
aad
movsl
xorl
dec
stc
out
repz
add
fucomi
and
movsl
pushf
xchg
jae
lret
xchg
fistpll
int3
in
test
sarb
push
addr16
scas
out
adc
mov
outsb
push
mov
into
xor
dec
divb
pop
mov
xor
dec
xchg
ljmp
das
negl
push
add
nop
popa
push
sbb
inc
pop
sarl
pop
xchg
dec
adc
mov
pop
and
jno
cs
xor
xchg
dec
hlt
mov
mov
mov
stos
lods
data16
aaa
movsl
inc
jmp
jmp
int3
mov
scas
inc
adc
adc
sbb
add
aas
xorb
enter
popa
inc
icebp
cmp
dec
xchg
bound
pushf
insb
dec
aas
out
hlt
je
fbld
sbb
lcall
inc
xchg
mov
aad
mov
pusha
test
xchg
pop
xor
sbb
xor
gs
aaa
mov
adcl
mov
fmulp
adc
dec
call
sbb
mov
adc
dec
mov
dec
pop
add
ljmp
lcall
lds
cmpb
xchg
out
xor
subps
scas
push
or
testl
mov
insl
xor
mov
out
fmuls
sub
jmp
call
mov
fidivrs
jl
add
pop
lahf
daa
jns
shl
or
pop
lods
inc
cmpsb
dec
dec
push
and
mov
pop
push
fistl
lret
ljmp
jecxz
or
dec
scas
cmpsb
ja
dec
pop
popf
ss
leave
dec
lock
and
orb
aaa
andl
bndldx
and
loopne
int
cwtl
subl
scas
aas
in
repz
lods
aad
into
pop
cmp
mov
push
and
clc
pop
jge
push
xchg
lret
push
sub
popf
xchg
xchg
shll
mov
nop
dec
lds
fs
jno
adc
mov
mov
inc
arpl
sub
inc
sub
xchg
pusha
daa
nop
push
xchg
cwtl
sbb
call
imul
jp
push
rclb
jns
inc
inc
addr16
dec
mov
push
je
inc
iret
adc
fistps
int
outsb
gs
xchg
or
ss
adc
dec
ret
lds
push
lods
dec
mov
testl
and
jno
shrl
pop
popa
push
inc
adc
rorl
test
nop
out
sbb
mov
outsl
shrl
inc
shrb
cmc
lds
sub
pop
out
adc
cld
push
jae
mov
iret
mov
mov
dec
mov
rcrb
push
jge
test
lret
push
in
cmp
jge
jno
pop
or
dec
adc
xchg
lds
sbb
fwait
imulb
sub
popa
call
push
and
test
out
mov
add
mov
outsb
lcall
les
das
aas
cmp
lods
push
jno
aam
roll
add
pop
add
push
add
cmp
dec
mov
aam
aas
ss
cwtl
out
ss
or
sub
xchg
hlt
jo
inc
inc
jbe
test
jo
test
cmp
lds
jmp
xor
xchg
cs
pop
or
aas
rolb
mov
xor
outsb
lods
or
mov
adc
or
scas
sub
shr
mov
int3
test
mov
popw
sbb
leave
mov
imul
jle
shll
fsubrl
arpl
lcall
dec
and
mov
and
add
pusha
adc
test
inc
adc
clc
pusha
adc
mov
data16
push
dec
movsb
jmp
fidivl
mov
jnp
push
ja
popa
xchg
leave
pop
dec
rclb
inc
xchg
imul
add
outsb
mov
inc
and
jmp
int
cmp
xor
sub
jno
add
lcall
sbb
rep
jnp
in
or
jmp
and
jo
loope
inc
pop
or
pop
mov
in
out
jnp
jge
mov
nop
inc
sarl
subl
ljmp
xchg
push
jmp
xchg
cltd
add
and
nop
or
xchg
shll
add
pop
mov
mov
inc
mov
sti
push
cwtl
xor
push
lret
pop
and
and
pop
pushf
test
fs
mov
loop
sub
loopne
addr16
insl
jbe
test
add
xchg
lds
test
ja
jae
sbb
add
mov
add
sbb
test
adc
nop
or
fcomp
dec
mov
cltd
lahf
imul
inc
pop
mov
mov
aam
clc
mov
and
xchg
adc
mov
adc
out
jge
pop
in
ret
dec
add
shll
inc
pop
orb
int3
dec
cs
mov
shl
dec
fisttps
inc
std
in
xchg
xor
fisubs
cmc
push
pop
push
clc
mov
data16
pop
mov
mov
xor
jp
dec
inc
ss
pop
mov
loopne
mull
jnp
adc
std
pop
pushf
and
jb
lods
imul
mov
aaa
stos
and
popl
xlat
xor
aas
adc
lret
mov
push
pop
out
xor
and
popf
xor
out
xchg
lods
adc
mov
mov
mov
xor
push
cwtl
inc
cltd
mov
movl
js
jnp
sub
xchg
aam
imul
inc
add
bound
dec
add
in
xchg
iret
imul
sti
stos
ljmp
xor
push
cltd
xor
mov
sub
loope
int
ret
imul
push
int
xchg
mov
rolb
sub
scas
cld
xchg
jb
jecxz
push
lods
in
push
ret
sub
inc
xor
lahf
add
gs
xor
mov
in
aad
mov
adcb
iret
push
and
rorb
sahf
or
outsl
bound
aas
subl
dec
inc
dec
or
push
and
outsl
ljmp
mov
push
sahf
xlat
sub
jecxz
stos
inc
shl
mov
fmuls
push
lds
jl
lea
and
inc
dec
mov
cwtl
adc
in
out
xchg
mov
xchg
lods
dec
push
ss
les
mov
cmpsl
pop
xchg
ljmp
xor
add
xchg
mov
sub
mov
repz
xchg
call
and
mov
movsl
je
icebp
jno
xor
lahf
lds
insb
jp
pop
dec
stc
dec
cmpsl
repnz
fwait
imul
and
lock
shrb
imul
ljmp
add
add
lret
or
dec
mov
jmp
outsl
cwtl
mov
lahf
sub
lcall
xchg
inc
dec
jp
ss
mov
scas
inc
mov
dec
mov
lret
inc
mov
ret
xchg
sbb
mov
pop
ds
sub
jne
mov
aad
mov
xorb
mov
cmc
in
pop
sub
ret
xor
jle
jne
lcall
js
jge
adc
cmp
push
mov
std
movsl
data16
push
out
das
xlat
xchg
in
inc
jae
push
pop
and
je
out
sarl
shll
ds
inc
push
xchg
inc
mov
cmpsb
fcmovnu
inc
sti
jle
leave
xchg
imul
add
bound
and
add
or
jp
mov
pop
add
cmp
sub
jns,pt
inc
mov
rclb
add
std
xchg
shl
enter
dec
push
scas
push
jno
inc
xlat
ja
xchg
call
push
adc
xor
cld
mov
sub
sahf
inc
sub
mov
pop
mov
pop
clc
es
lahf
adc
jo
xor
ret
scas
xor
mov
sarb
insb
stos
pop
xchg
pop
xor
repz
sbb
add
sarl
mov
xlat
inc
lahf
and
push
cmp
cmp
dec
mov
adc
mov
dec
jmp
pop
push
and
and
mov
out
mov
fadd
fistl
jb
and
jmp
jbe
pop
or
aad
dec
or
aam
fisubl
xchg
or
pop
mov
lock
add
loop
loope
fldenv
inc
arpl
lahf
push
pop
fs
popa
sub
sbb
jnp
sbb
ss
insb
xchg
and
mov
xchg
shll
xchg
movsl
rsqrtps
fnstcw
push
jmp
cwtl
cli
stos
loopne
lret
sub
rclb
inc
cs
dec
sub
fdiv
mov
jno
push
add
pusha
sbb
cmpsl
mov
hlt
ja
insb
outsl
push
and
pushf
rolb
and
inc
fwait
xchg
push
movsb
push
cli
mov
sti
jmp
lcall
clc
mov
ret
fistpl
adc
daa
and
mov
cmp
xor
or
mov
int
test
loop
fldcw
test
mov
jecxz
inc
dec
popf
xchg
dec
mov
jp
testl
push
call
aad
pop
popf
nop
fdivrp
pusha
lcall
test
cmp
call
sti
cwtl
nop
xchg
es
test
je
and
push
and
movsl
jnp
das
gs
mov
mov
or
daa
cmp
je
add
test
cltd
popa
mov
inc
ret
jl
adcb
mov
xchg
jmp
sarl
and
popa
xchg
std
mov
incb
jbe
mov
mov
pop
sahf
dec
mov
lods
jns
cmp
pop
negb
pushf
icebp
dec
or
adc
test
ljmp
pop
subb
popa
hlt
in
mov
pusha
mov
lea
dec
dec
mov
sub
into
inc
or
inc
sub
inc
sarb
dec
sub
loopne
mov
inc
pop
das
dec
jl
rorb
int3
aas
sbb
mov
mov
cmp
fwait
mov
jns
add
pop
xor
push
je
into
cmpsb
inc
xchg
loope
push
scas
xchg
addr16
mov
les
addr16
cmpsb
mov
jno
pop
mov
rcrb
add
xor
jo
xor
es
add
or
test
xlat
arpl
push
in
sti
arpl
or
and
dec
test
and
pusha
mov
mov
mov
cs
js
shll
cmp
lods
scas
daa
cmp
aaa
cmp
xchg
mov
ljmp
aaa
jo
je
sbb
jmp
cmp
outsb
jmp
clc
fsub
dec
scas
cltd
ds
mov
dec
jge
xor
add
lahf
jge
mov
lods
inc
add
rcr
cmpsl
jmp
jle
adc
neg
push
push
stc
ds
mov
and
fsubrs
cwtl
repz
pop
inc
sub
pop
aaa
out
bound
jp
sub
out
lea
mov
mov
imul
je
test
jg
fidivs
cmc
sub
inc
sbb
adc
adc
lcall
stos
cli
mov
jne
sbb
push
fdivs
xor
mov
daa
add
mov
cpuid
test
fcomps
add
sbb
clc
or
addb
cltd
adc
out
xor
or
pop
mov
mov
dec
mov
pop
in
outsl
inc
js
daa
mov
adc
sbb
outsl
and
sbb
aam
xchg
outsl
cltd
and
sub
arpl
push
push
lret
add
xor
lahf
imul
mov
outsl
loope
pop
cmpsl
idivb
jns
popa
cmp
loope
test
imul
addr16
pop
mov
jns
add
ret
dec
stos
sti
int3
mov
ljmp
dec
hlt
adc
mov
into
sbb
repnz
rorb
insl
add
mov
jo
ret
pop
xor
or
add
adc
int
or
test
add
mov
xchg
lea
or
arpl
int
xor
xchg
imul
aam
cmp
test
inc
xor
cmp
cmpsb
clc
inc
xchg
xor
adc
mov
jg
mov
in
add
sbb
push
jge
addr16
xchg
fmuls
scas
xchg
arpl
jbe
jmp
adc
cmp
xlat
icebp
data16
push
cmp
dec
loop
jbe,pn
enter
sub
and
jp
jae
sbb
fcoms
pop
xchg
mov
es
cld
imul
xchg
cmpsl
inc
ret
lods
fistps
fs
inc
cmpsb
lods
pop
xor
mov
pop
push
add
popa
out
pop
or
mov
push
and
call
push
outsl
lcall
jae
or
sbb
add
mov
clc
adc
pop
gs
and
cmp
ss
lret
arpl
orb
xlat
dec
xor
mov
ret
pushl
mov
sub
mov
addr16
or
mov
cmovo
std
sub
iret
mov
and
inc
in
xchg
lret
xor
sti
js
mov
pop
push
sbb
or
and
add
enter
adc
jmp
cmp
cli
sub
adc
push
daa
sub
mov
fucomp
jne
ds
jg
dec
aam
bound
test
sub
cld
mov
adc
ja
fstpt
or
xlat
jge
lds
fldt
dec
cmp
addl
xchg
jns
jno
and
mov
daa
add
pop
or
dec
dec
jo
mov
inc
mov
and
cmp
jge
cmp
mov
push
sbb
loop
in
pop
insb
dec
gs
nop
outsb
pop
cmpsb
mov
std
and
lock
mov
inc
pushf
xchg
sub
inc
or
mov
fwait
aam
mov
int3
nop
xchg
jmp
out
mov
fistl
mov
pop
sbb
push
inc
jle
out
sbb
push
mov
mov
mov
and
rep
sbb
subb
insb
iret
ficompl
pushf
mov
push
mov
lds
pop
push
cmp
mov
sbb
jle
imul
fnstsw
aaa
stos
jo
scas
cs
icebp
jno
sti
out
imul
inc
repz
push
mov
inc
icebp
sti
mov
and
sub
xor
popf
inc
jle
dec
clc
mov
pop
gs
lret
add
scas
adc
addr16
or
lods
xor
xchg
in
pop
inc
inc
cmp
sub
jae
jb
rorl
out
cmc
sub
and
js
inc
enter
cwtl
adc
mulps
push
repz
xchg
add
imul
call
mov
add
loope
rclb
or
ss
test
inc
jbe
leave
sbb
daa
jo
mov
in
popl
mov
sbb
and
mov
add
and
mov
or
nop
jmp
out
jle
lock
rcrb
add
add
outsb
pop
inc
bound
cmc
pop
push
cmp
aam
xor
mov
ljmp
rorl
shlb
lods
and
ds
popa
cs
adc
mov
pusha
dec
jge
sahf
push
sbb
dec
jbe
bound
sbb
sarb
out
dec
inc
or
outsb
sbb
pop
pop
ss
and
xchg
pop
adc
in
xchg
push
test
fidivl
mov
add
jecxz
vcvtdq2ps
pop
mov
movsb
std
add
cmpsl
or
mov
mov
xchg
pop
or
xchg
and
ljmp
loopne
mov
xchg
cld
cmp
pop
mov
mov
add
sti
shl
je
push
call
pop
add
aaa
fwait
jg
jp
ds
decb
or
cmp
jle
outsb
btr
sub
sbb
test
divl
lods
inc
dec
pop
ret
sti
int
jl
lcall
or
mov
jmp
dec
lods
pop
iret
jg
out
cmp
jne
sbb
xchg
push
pop
xchg
pop
push
movsb
sbb
jecxz
xchg
aad
inc
mov
xlat
mov
add
mov
cmp
ljmp
cmp
mov
xchg
divl
inc
cmp
and
inc
dec
fwait
add
enter
sbb
arpl
xor
shll
cmp
sub
jecxz
cmpsb
hlt
or
shlb
outsb
xlat
add
push
cmp
xchg
ror
add
cmp
jge
add
fsubs
incl
add
scas
cwtl
out
call
add
push
push
shlw
xor
icebp
push
mov
icebp
xchg
mov
rolb
push
mov
mov
mov
xor
in
loop
push
jl
jmp
cltd
arpl
sub
leave
mov
or
jmp
ja
mov
cmpsb
sub
jecxz
iret
xchg
int
ret
sub
test
adc
jmp
pop
adc
xor
out
ret
push
sbb
sbb
pop
mov
xor
cmp
sahf
add
aam
push
in
and
mov
sub
mov
lret
or
out
into
mov
aaa
in
add
push
and
sbb
xchg
push
repz
out
lock
jnp
sbbb
hlt
jmp
repz
filds
es
pop
push
fstpt
movsb
pop
into
mov
push
add
and
in
push
and
and
inc
sub
mov
add
add
insb
mov
push
insb
sbb
fnsave
loopne
in
dec
xchg
sub
fdivrl
sub
inc
test
and
aad
lods
mov
test
addr16
inc
ljmp
ljmp
sub
aad
cmc
loop
mov
push
test
push
or
int
jecxz
fidivrs
sbb
lds
inc
mov
sub
jns
je
or
testl
leave
cmp
xor
push
cmp
adc
mov
xor
xor
jp
mov
jne
xor
icebp
push
mov
fsubs
test
test
xor
ss
addr16
test
lret
mov
cli
add
repz
stos
sub
push
shrb
lret
lahf
pusha
out
mov
inc
sbb
or
icebp
testl
cltd
pop
add
xor
dec
jg
outsl
sarl
xchg
stos
dec
and
xchg
sarl
push
pop
sbb
leave
dec
inc
lea
mov
fsubr
pop
push
or
pop
sub
dec
sub
jl
adc
pop
mov
add
pop
xchg
fcmovnb
sub
icebp
lcall
or
jo
adc
fs
xor
mov
pushf
call
mov
mov
jns
rorb
adc
sbb
push
or
and
mov
mov
dec
pushf
dec
push
push
cmp
outsb
in
pop
es
cs
jg
sbb
out
xor
cwtl
and
jp
pop
scas
push
arpl
cmp
movsb
and
sbb
jmp
pop
mov
add
dec
add
mov
adc
lcall
and
mov
add
das
rcrl
and
mov
push
or
imul
pop
xchg
stos
lods
negb
insw
fadds
inc
repnz
and
hlt
pop
pop
ds
popa
mov
cs
xor
mov
sub
ja
into
mov
sub
das
or
lahf
pop
insb
out
cltd
sbb
loopne
ret
xchg
push
ror
test
jge
and
das
jmp
jecxz
push
divb
icebp
jbe
pop
mov
bound
dec
imul
out
call
mov
xchg
inc
xchg
xchg
testl
movsb
test
aad
fdivr
pop
data16
scas
add
xchg
jp
outsl
add
push
repnz
jae
xlat
xor
aaa
xor
arpl
addr16
insl
push
mov
sti
add
cli
sti
add
js
dec
cmp
stc
cmp
inc
xchg
mov
imul
or
loopne
push
xor
dec
shl
cmp
loope
testl
in
dec
and
mov
mov
jg
xchg
and
insb
sbb
call
cltd
sub
sub
mov
adc
mov
andl
orl
dec
cmc
call
mov
push
in
or
push
mov
cld
cmp
shll
clc
not
jae
popf
icebp
and
mov
push
cmp
dec
scas
pop
movsb
cs
pop
dec
cmp
pop
pop
mov
rorb
lods
dec
adc
mov
fdiv
lds
pop
mov
shll
pop
je
or
in
ja
xchg
out
add
push
movsb
in
enter
and
out
scas
hlt
mov
xor
inc
pop
enter
mov
ret
hlt
ja
sbb
fs
scas
mov
and
push
hlt
sbb
jl
adc
mov
sub
sti
div
dec
fidivrs
out
fnstenv
xor
loope
mov
scas
pop
lahf
adc
push
mov
adc
mov
cwtl
mov
cmp
cmc
in
mov
mov
scas
divb
xor
scas
pop
sbb
cmp
fdivrs
add
rcrl
in
jae
pop
out
test
cmc
pop
hlt
add
loop
add
push
cld
sbb
dec
pop
outsl
lahf
sub
jb
inc
push
xor
repnz
or
mov
les
jne
mov
std
xlat
jl
stc
das
mov
push
aaa
sub
mov
xchg
out
imul
out
cmpsb
int3
pop
or
insb
xchg
hlt
sbb
bnd
movsb
xor
ja
cmpsb
sub
stos
lahf
lahf
jbe
mov
add
popa
adc
sub
imul
mov
inc
pushf
add
push
jb
dec
push
lock
sbb
imul
xchg
jo
aaa
pop
jge
and
inc
mov
mov
xor
xchg
test
adc
push
sahf
sar
xor
pop
mov
lods
test
rolb
das
insb
lods
fsubs
repnz
adc
out
add
stc
push
shrl
inc
jmp
orb
mov
rcrb
push
mov
int
lock
cmp
cli
push
mov
push
fstpl
pop
adc
call
fcmovnu
xor
adc
push
sbb
bound
out
xor
lea
xchg
jle
in
aad
aas
push
add
out
arpl
popa
cmpsl
sarl
out
and
sbb
jb
lea
sub
cmp
pop
inc
sbb
mov
in
sbb
lahf
and
lock
es
ja
pop
cmpsl
shll
aam
mov
rcl
test
mov
lcall
test
or
imulb
or
mov
in
daa
adc
and
arpl
or
lods
loop
sti
in
pop
sub
jo
push
in
pop
inc
ficoms
pushl
push
jbe
pop
imul
ja
adc
inc
sub
and
leavew
and
push
loopne
loop
outsb
mov
cwtl
xor
cmpsl
and
mov
pusha
inc
mov
or
ffreep
aas
or
mov
jbe
ss
mov
sbbl
jp
xchg
jl
pop
add
aad
fwait
mov
movsb
paddb
jge
inc
mov
push
jb
cli
mov
mov
cld
mov
mov
out
cmpsl
adc
pop
test
mov
loopnew
fldl
in
in
movsl
sahf
xor
mov
call
mov
inc
clc
xor
lds
xlat
dec
cmp
dec
gs
pop
pop
sub
push
xchg
ja
sbb
out
adc
cmp
popa
pop
pop
in
push
or
cmp
mov
scas
xchg
xchg
jb
sti
mov
addl
inc
xchg
and
inc
jmp
xchg
push
mov
movsl
cmp
lret
push
ja
add
stos
sub
xor
cmp
test
outsb
adc
dec
push
int3
mov
sub
push
mov
lret
xor
shlb
sarb
xor
in
mull
inc
ljmp
dec
fwait
push
sarb
pusha
hlt
in
pop
sbb
mov
mov
ficoms
mov
xchg
sub
push
pop
insl
outsl
lods
int3
add
adc
iret
das
jbe
jae
pop
jp
call
test
push
jb
outsl
adcl
mov
iret
roll
mov
scas
jo
iret
cmp
inc
jno
lods
xchg
mov
test
jle
enter
or
adc
into
jl
iret
mov
push
lea
sub
or
pop
imul
or
call
or
sbb
add
and
xchg
test
or
add
mov
int
popa
in
or
jmp
mov
icebp
mov
mov
mov
mov
lods
out
xchg
cmp
jb
jae
adc
sub
icebp
mov
mov
cmp
mov
xchg
lods
sahf
jecxz
int3
cmpsb
mov
cwtl
popa
cmpsb
mov
mov
js
mov
scas
outsl
fldt
xor
cmp
vpaddw
mov
cmp
mov
mov
stos
and
sti
js
sub
test
aam
mov
les
and
test
xchg
lods
mov
out
inc
mov
pushf
lcall
cmp
shl
push
es
xor
mov
mov
insl
aaa
pop
jle
xchg
scas
fs
jnp
sbb
push
xor
das
les
push
test
dec
pop
xchg
rcrl
imul
pop
sub
rcrb
xor
addr16
gs
xor
jns
push
jno
or
pop
fmulp
call
push
gs
out
push
rcl
addr16
and
in
ret
mov
mov
sbb
loop
push
imul
clc
sbb
dec
pop
test
push
jge
mov
push
inc
scas
cmpsl
xchg
fcom
sbb
inc
mov
mov
cmc
pop
stos
test
cmp
ss
mov
test
push
sbb
xchg
pop
mov
mov
nop
loopne
in
mov
insl
cltd
or
aad
ss
fisubs
pop
mov
iret
lds
fcompl
dec
sbb
push
movsb
lock
int3
icebp
imul
test
in
out
add
xchg
nop
push
push
push
mov
ss
daa
sbb
mov
sub
aaa
arpl
mov
push
sahf
and
icebp
loope
scas
popa
lret
push
cmp
int
imulb
movsb
pop
or
int
jecxz
xor
fs
cli
mov
pushf
xor
dec
mov
out
dec
mov
out
int3
sub
lret
add
mov
mov
or
sub
sar
jo,pt
inc
push
jo
pop
dec
les
mov
stos
or
sbb
cwtl
inc
lcall
dec
sub
orb
sti
test
flds
jae
addr16
mov
filds
sub
lock
push
divl
lods
idivb
dec
leave
insw
push
xor
sbb
mov
bound
test
pop
rcll
js
xchg
mov
mov
mov
mov
clc
ljmp
test
aad
shlb
sbb
in
cwtl
sbb
push
mov
cmc
mov
mov
xchg
dec
mov
icebp
es
pop
inc
xchg
jmp
or
cld
addb
jmp
enter
pop
mov
flds
sub
fcomps
sub
std
pop
sub
mov
sub
jo
cmp
or
scas
pushl
lods
jg
jno
inc
xchg
jp
movsl
xchg
movsb
fldl
in
lea
cld
adc
and
imul
rolb
test
pop
push
sub
mov
lea
es
push
jo
int
clc
xchg
adc
je
je
push
xor
shlb
xchg
mov
sub
mov
xchg
add
jno
mov
movsb
add
imull
or
movsl
pusha
mov
sti
hlt
mov
or
jecxz
les
icebp
sarb
mov
xor
cmpsb
ret
cmp
pop
movsl
mov
inc
push
sahf
icebp
insl
add
mov
pop
jmp
mov
cmpb
xchg
sub
lods
jb
jg
call
push
out
xchg
fmul
or
dec
imul
hlt
sbb
lret
mov
fbld
ret
mov
fisubrs
or
mov
into
fs
push
and
add
or
imul
sarb
or
sub
dec
jle
push
cmpsl
jle
outsl
ds
pop
imul
idivl
xor
adc
pop
int
xchg
fidivs
jae
hlt
and
cld
fistpl
ds
popa
sti
test
fs
popa
repz
mov
test
aas
out
xor
aas
mov
les
xor
incb
inc
and
addr16
lahf
cmp
cmp
add
ljmp
push
add
popf
add
push
daa
stos
aaa
in
movsl
ret
dec
mov
xchg
pop
mov
mov
lcall
push
test
enter
scas
mov
dec
popf
sidtl
movsb
xchg
sub
and
pushf
xor
mov
icebp
pop
pushf
lock
cmp
pushf
fsubrs
jl
int3
ljmp
inc
fs
cmp
mov
gs
loope
mov
dec
mov
out
mov
push
push
jge
mov
aaa
repnz
push
clc
add
mov
leave
sub
shlb
aam
call
xchg
pushf
cmpsb
mov
mov
ljmp
jmp
lods
inc
test
popf
push
loop
testl
lahf
push
shll
dec
sbb
jg
pop
jae
mov
test
mov
push
out
lods
jmp
std
cmp
inc
arpl
std
add
pop
shll
mov
shl
cli
push
mov
into
mov
mov
je
dec
daa
pop
sti
add
pop
xor
and
sub
or
cmp
mov
loop
xor
dec
lahf
dec
mov
pop
insb
xchg
and
and
lods
repz
inc
or
mov
imul
cwtl
xor
mov
xchg
outsl
add
inc
pop
mov
lret
dec
mov
sub
dec
shrb
cmp
push
jne
call
adc
cmp
ret
nop
xor
je
push
xchg
dec
rol
cmpl
enter
adc
xchg
push
call
push
repnz
stc
push
cmp
mov
sbb
mov
mov
sub
pop
mov
cs
fsubp
loop
add
pop
dec
mov
pop
fs
mov
mov
push
fsubl
cld
popa
lods
jmp
mov
sub
cmp
out
push
xor
or
test
mov
into
lock
mov
push
add
addl
add
xchg
std
sbb
bnd
push
enter
and
aas
in
mov
mov
or
daa
jmp
outsb
cmp
xchg
insl
popa
push
jb
jp
push
pop
inc
int
xchg
mov
pop
add
mov
je
pusha
sub
adc
cmp
inc
inc
mov
imul
scas
mov
mov
hlt
hlt
insl
mov
jge
ss
ss
push
test
or
nop
inc
cwtl
jns
sti
loope
sbb
adc
sbb
dec
add
adc
fbld
cwtl
sub
and
mov
push
test
test
les
mov
fs
jge
add
sbb
adc
fiadds
sub
out
sbb
imul
pop
push
push
ljmp
inc
nop
enter
cmp
dec
scas
cmp
cmp
adc
out
pop
jo
arpl
adc
push
cmpsb
lret
loopnew
add
imul
cmpsl
insl
in
add
insl
adc
jmp
pop
in
push
or
pop
and
mov
dec
loope
inc
idivb
lea
mov
rol
cmp
shrb
das
push
or
fisubs
imul
mov
add
rorb
push
sbb
mov
mov
dec
call
jg
daa
mov
mov
add
jbe
xchg
decb
jmp
cmp
pop
mov
cs
out
mov
es
xchg
pop
and
lods
insl
icebp
nop
sbb
and
mov
daa
test
ljmp
rolb
push
sahf
jo
in
ret
dec
out
and
xchg
test
inc
in
orb
insl
idivb
lods
ljmp
xchg
push
inc
incl
sub
mov
test
out
mov
movsl
stos
or
sarb
inc
xchg
fsub
xor
adc
jno
out
cltd
push
or
roll
dec
pop
jo
push
xchg
jnp
push
jecxz
jge
iret
adc
cld
jmp
cmp
cwtl
pusha
mov
icebp
push
pop
xchg
push
and
sub
rcrb
cmp
shll
and
xchg
dec
sub
popf
mov
pop
sahf
mov
out
mov
lods
sbb
and
fwait
mov
sub
les
or
pop
cmc
shl
aad
dec
shlb
in
pop
loope
xchg
addr16
push
push
jl
xor
pop
dec
mov
stos
mov
xlat
cwtl
scas
mov
pop
sbb
cmp
pop
push
and
and
in
cmp
std
mov
pop
dec
out
jmp
insb
pop
sbb
xor
lcall
aam
add
leave
popa
into
int3
mov
mov
mov
mov
fbstp
mov
test
xchg
pushf
ja
jno
jmp
mov
sub
sub
daa
cmp
push
mov
psubq
pop
sti
lcall
xor
repnz
sub
jp
mov
enter
adc
adc
rcrl
push
mov
das
movsb
push
arpl
push
or
fbld
pop
daa
je
dec
mov
repnz
repnz
push
adc
push
daa
jbe
push
xchg
ds
jmp
in
testl
push
mov
jmp
es
movsb
jle
fmuls
icebp
adc
push
xor
pop
lahf
insl
scas
test
leave
add
jmp
xchg
popf
testb
repnz
cmpsl
or
fisttpll
mov
shlb
pmulhuw
push
stos
dec
pop
mov
or
test
sti
pop
test
into
sbb
cld
ss
inc
pop
gs
xor
sti
sbb
inc
ret
cmc
xchg
or
movsb
addr16
or
sbb
cmp
imul
xor
testl
das
adc
pop
xchg
adc
jb
rcrl
hlt
lahf
decb
mov
mov
loopne
sbb
and
aas
pop
inc
les
jne
xchg
ljmp
push
lcall
aas
arpl
aas
pop
aaa
dec
dec
fimull
mov
insl
dec
lcall
jl
in
dec
loop
mov
push
cmp
adc
js
call
fmul
sarl
xchg
fisubl
shl
jnp
fidivrs
cmpsl
hlt
push
pop
mov
dec
js
xchg
dec
pusha
jae
add
out
or
int
into
pop
aam
xor
mov
mov
addr16
jge
cmp
into
jl
cmp
jns
cmpl
add
xchg
test
adc
jns
lds
lahf
push
push
ret
xchg
pop
inc
jae
and
and
or
loop
lods
gs
js
decl
inc
push
push
mov
lret
int
cmpsl
popf
mov
mov
leave
mov
daa
adc
rcrb
fmulp
mov
lret
jb
sub
jb
jmp
add
fwait
dec
add
les
in
aaa
and
gs
loope
pop
xchg
int3
ljmp
or
fldcw
cli
lret
sub
add
std
cld
dec
mov
jns
fucomp
test
push
and
dec
adc
mov
call
in
fwait
arpl
dec
pop
lcall
fwait
push
xorl
jo
mov
mov
or
cld
mov
sbb
mov
outsl
icebp
repz
jmp
push
adc
imul
pfcmpeq
xchg
das
cmp
cmp
arpl
xchg
mov
or
pop
pop
pop
and
jns
ljmp
push
cltd
cmp
das
adc
aaa
js
gs
fmul
inc
push
xchg
jbe
inc
add
sbb
sbb
push
mov
xchg
pop
push
iret
ljmp
dec
pop
out
jl
cmp
fstpl
or
pushf
jp
sahf
pop
add
mov
std
or
lret
xlat
in
push
or
fcom
mov
lods
bound
lock
and
inc
adc
or
ret
xchg
xchg
sbb
push
clc
mov
jp
jmp
int
aaa
cli
xor
and
and
push
movsl
push
pop
add
mov
outsl
imul
or
lods
cmp
sbb
into
fs
inc
jg
insb
or
mov
ss
lock
subl
jge
cmc
pop
push
lahf
icebp
jle
push
xchg
insl
xchg
jnp
mov
pop
clc
mov
out
ja
pop
pop
ret
insb
lahf
xor
cmp
or
sub
xchg
pop
mov
jno
cmpsl
shr
inc
pop
cmpsb
adcl
outsl
lods
cmp
add
add
jns
push
cltd
jecxz
mov
mov
mov
bound
inc
test
xchg
int
or
fwait
ret
mov
mov
cltd
aaa
mov
xor
stc
push
cmp
mov
jle
xchg
jl
push
mov
icebp
pop
dec
xchg
nop
mov
mov
inc
sbb
ljmp
mov
pop
and
pop
mov
or
fwait
push
mov
mov
enter
in
rcr
push
pop
lret
jb
aas
push
cmp
push
push
out
scas
or
jbe
sub
adc
aaa
sub
adc
insb
add
insb
rol
inc
loope
xor
and
icebp
sbb
pop
mov
into
imul
int
mov
ds
sub
cltd
dec
jp
jmp
jl
jns
cmpsb
rorb
andl
sub
fisubs
in
mov
in
cmp
or
sub
push
outsl
cmp
mov
mov
insl
xor
imul
lock
addr16
orl
ja,pt
or
test
pop
pop
adc
lret
inc
sub
andl
movsb
gs
pop
xchg
sahf
and
fcompl
fcom
sbb
fstpl
popa
inc
lcall
fstl
gs
in
stos
sbb
mov
inc
dec
arpl
lea
ret
mov
icebp
adcl
movsb
mov
sahf
cmc
loope
sti
add
iret
sub
js
out
icebp
push
jecxz
jbe
mov
aam
fiadds
sub
mov
inc
mov
mov
pop
jae
dec
jp
aas
sbb
mov
xchg
push
sarl
or
imul
xchg
or
outsl
mov
lahf
in
test
push
stos
addr16
push
mov
pop
lds
movsb
xor
dec
mov
push
or
sbb
add
or
es
lods
popa
imul
nop
jnp
pop
or
jmp
pop
dec
filds
testb
jnp
call
add
lcall
lea
int
movsb
mov
pop
loopne
add
jl,pn
lds
mov
movsl
jb
rorl
dec
test
inc
cs
adc
test
cmp
aaa
xor
add
out
lret
add
add
lret
mov
mov
pop
pop
mov
add
xor
sub
add
sahf
scas
iret
cmp
pop
outsl
jns
aad
out
dec
jl
les
jnp
jns
or
sbb
lahf
sbb
pop
into
and
daa
mov
push
inc
add
gs
sub
jne
inc
xor
ret
insl
mov
repnz
xlat
ljmp
jg
or
xor
test
popa
lock
lods
push
insb
mov
loopne
rep
jge
je
pop
outsl
pop
xchg
mov
xchg
fcomps
jg
xor
xchg
arpl
pop
int3
aas
mov
mov
ja
lret
out
je
test
add
push
mov
dec
lret
clc
imul
sbb
adc
pop
ja
filds
ds
cmpsl
pop
or
push
popa
pop
aad
in
adc
repz
lahf
push
aaa
faddl
into
jmp
mov
and
test
leave
rorb
into
mov
mov
sar
pop
mov
clc
sbb
push
enter
lret
xchg
xchg
mov
inc
push
pop
stc
dec
jo
add
fstpt
and
lods
push
cld
and
and
sti
xchg
dec
clc
sub
in
cld
ret
inc
loope
push
pop
mov
lods
xor
ret
imul
out
loop
dec
and
inc
ret
cmp
mov
mov
lahf
or
push
call
mov
jbe
mov
insb
por
test
adc
dec
add
lds
dec
lods
aaa
or
push
cmp
int3
sub
ss
or
push
xchg
sahf
mov
pop
xchg
fldenv
xchg
xor
dec
stc
xchg
push
aad
or
push
hlt
mov
shlb
and
jle
test
into
xchg
sbb
jle
imul
test
inc
das
mov
mov
leave
cmp
jg
cli
sbb
lods
xor
repz
pushf
outsl
pop
xchg
cmpsl
and
int3
loope
das
aam
xchg
mov
sub
aad
add
out
test
inc
push
mov
mov
lods
or
adc
push
fwait
cmp
lock
lds
pushf
mov
push
aas
jne
push
add
cmp
stos
inc
icebp
scas
push
sub
xor
call
in
rcr
jbe
pushl
jp
sbb
jl
scas
cmp
scas
mov
icebp
lcall
lret
mov
nop
mov
repz
add
sbb
fisttps
out
call
and
add
mov
adcb
xor
lret
jp
sbb
mov
xchg
rcr
add
addb
inc
sub
jge
in
hlt
daa
mov
pop
cs
push
mov
add
cmp
lcall
leave
add
inc
pop
outsb
push
rcrl
cwtl
xor
pop
sbb
push
jg
adc
aas
aaa
pop
out
sub
fstl
pop
lds
outsb
lret
bound
jb
cmpsl
inc
aad
dec
lret
sub
stos
cmc
xchg
clc
test
pop
and
cmp
and
mov
mov
test
lcall
mov
std
and
inc
and
lcall
sbb
pop
clc
pop
dec
std
in
xchg
scas
pop
test
shll
shll
ret
ret
mov
pushf
mov
adcb
icebp
out
dec
stos
in
lea
inc
or
pop
popa
mov
xchg
mov
sub
and
sti
mul
pop
in
xor
pop
pop
xor
adc
mov
mov
mov
fildl
aam
lahf
ret
inc
mov
xchg
dec
in
jno
ja
leave
icebp
cld
adc
inc
add
jno
cli
sbb
dec
ficomps
filds
imul
sbb
sub
dec
pop
lret
inc
lock
jle
add
or
mov
xor
xchg
adc
xchg
inc
outsl
inc
fwait
sub
add
cltd
adcl
lea
clc
in
xchg
or
stos
addr16
jecxz
push
xchg
repnz
and
shl
adc
push
and
inc
inc
jb
movsb
sub
push
xor
xchg
jne
outsb
pusha
dec
sub
dec
push
leave
testb
jbe
mov
sub
rcll
add
xchg
cltd
pop
aad
aad
or
dec
pusha
popa
cld
xlat
mov
pop
shrl
nop
sub
sub
ja
xchg
xor
sbb
or
ret
fwait
jmp
fisubrs
popf
inc
cld
adc
push
xor
addb
xor
mov
aam
hlt
scas
and
xor
ret
mov
pusha
testb
movsb
ficoms
jl
pop
fisttps
pop
test
mov
xorl
mov
push
es
shlb
add
fsubrl
jl
aas
test
sub
adc
fwait
mov
sbbl
movsb
mov
jo
loope
shr
into
cmp
and
imul
push
fs
in
shrl
test
lea
ss
in
cmp
add
pop
jae
jl
mov
pop
jecxz
daa
mov
fs
push
stc
xchg
jb
stc
imul
mov
mov
mov
ja
outsl
fstpl
jecxz
inc
cld
push
sarl
pop
sahf
aaa
cmp
cld
fcmovnbe
in
pop
adc
mov
jg
hlt
jno
xor
adc
shll
adc
loopne
rorb
fcoms
push
aad
sbb
and
mov
inc
insl
fldl
adc
mov
jnp
addr16
enter
and
stos
jmp
mov
dec
jno
and
inc
mov
push
sub
push
aam
aam
adc
mov
mov
ret
cmp
inc
sti
insl
in
scas
xor
aad
pop
jns
xchg
repz
lahf
aas
mov
popa
popf
rcr
dec
jbe
pop
dec
fmull
das
inc
fs
adc
or
ja
sub
mov
addl
popf
mov
fdivrs
fbld
mov
jo
cmp
pop
jecxz
js
not
pop
out
or
jns
xchg
ja
push
xor
scas
rorl
aaa
push
xor
adc
sbb
mov
push
add
jge
imul
dec
incl
or
pop
xchg
and
xchg
jecxz
inc
jecxz
sar
inc
movsb
push
pop
lock
push
out
rclb
sub
js
lods
cltd
cmp
test
push
dec
cmp
add
cs
mov
mov
jne
push
lods
mov
int
inc
stc
xchg
mov
xchg
mov
cmp
imul
cmp
xchg
or
out
test
scas
out
or
add
outsb
pop
in
in
xchg
dec
loopne
dec
cmp
repz
nop
insb
push
mov
lea
pop
in
ss
xchg
shlb
addl
lods
add
fdivrs
mov
ret
jb
inc
push
sbb
and
mov
aas
mov
sarb
cmp
hlt
xchg
jo
es
call
mov
subb
add
jb,pt
jge
sbb
jl
adc
pusha
push
xchg
scas
sbb
push
loop
jno
into
jb
hlt
lods
inc
aad
mov
fiadds
dec
mov
stos
lds
cmp
xchg
mov
ret
ljmp
mov
xchg
xchg
inc
push
xor
dec
es
imul
cli
fimull
shlb
push
fstps
popf
and
test
xlat
insb
mov
outsl
addb
mov
push
insb
call
aas
xchg
sbb
lahf
push
inc
adcl
daa
inc
int
nop
push
inc
jp
cmpsl
out
aas
bnd
jge
mov
inc
xor
dec
cld
pop
bound
xchg
cmp
push
bound
jmp
xor
push
add
add
subb
mov
xor
add
jmp
insl
fcomip
popa
mov
pop
loopne
mov
or
dec
mov
mov
xor
or
pop
shll
sub
popf
mov
sbbl
sbb
cli
ss
sub
xchg
lahf
in
or
andl
out
jmp
sbb
out
in
aas
push
or
mov
and
add
cli
push
adc
jo
dec
hlt
jge
add
sub
in
xor
cmpsl
push
and
xchg
lret
cld
inc
push
and
ficomps
sbb
jmp
test
pop
sbbl
mov
into
aam
bound
jge
iret
jmp
pop
ja
stos
mov
lds
mov
sub
mov
cwtl
and
pop
int3
xchg
mov
outsb
and
dec
add
nop
or
jae
mov
inc
fmulp
mov
rclb
mov
je
xchg
push
imul
xchg
stos
pusha
sbb
and
jg
mov
jecxz
insb
push
jge
mov
ja
push
push
xchg
sbbl
or
push
movsb
lcall
fwait
and
ror
jns
addr16
jbe
inc
dec
fstpl
adc
and
cld
jle
or
jb
adc
psubb
adc
jns
pop
xor
mov
adc
or
pushf
fstl
inc
xor
pop
dec
sbb
sbb
popf
pop
dec
jp
ds
es
cmp
mov
mov
fstps
sub
ror
rcll
mov
jl
out
xchg
aad
push
mull
push
gs
xchg
sub
pop
dec
and
mov
xchg
sbb
jne
insb
add
test
or
mov
jb
add
jg
std
aad
lds
dec
or
mov
xchg
popa
add
lea
in
out
imul
les
adcl
sahf
js
loop
push
int
enter
insb
adc
xor
adc
lret
xor
push
aam
aas
mov
push
sbb
dec
dec
je
int
adcb
int3
call
xchg
stc
out
xor
mov
cli
cmpsl
notb
out
adc
adc
shlb
pop
lods
dec
enter
or
adc
pop
mov
mov
sbb
dec
stos
loope
out
cmp
jo
int
rolb
fisubl
loopne
ret
or
xchg
dec
popa
imul
jg
mov
mov
lods
mov
idiv
fstpl
mov
xor
inc
or
adc
adc
ja
jg
adc
popf
fisttpll
lea
fsts
stos
jl
or
mov
iret
xchg
adc
sbb
inc
xor
mov
or
or
mov
jl
pop
pusha
and
sub
daa
fbstp
out
or
out
xchg
loopne
pushl
in
aaa
repz
mov
fwait
sbb
dec
out
mov
push
dec
xchg
aad
inc
call
mov
push
or
scas
inc
lea
lcall
and
mov
scas
cmp
es
adc
test
mov
sub
pop
hlt
aad
push
mov
xchg
fstl
sbb
or
das
and
stos
push
js
je
pushf
icebp
cltd
pop
xor
mov
flds
mov
es
mov
mov
enter
mov
stos
xchg
aaa
and
loope
mov
mov
xor
movsb
iret
add
cmp
xchg
ret
xor
addb
arpl
dec
or
jge
imul
std
and
xchg
repz
add
xor
pop
push
int3
mov
daa
xor
pop
inc
jge
mov
loope
inc
xor
in
xchg
clc
jmp
test
test
add
mov
pop
sbb
fwait
loop
push
hlt
or
adcl
xor
adc
cltd
pusha
cltd
jge
iret
rorl
xchg
cmp
iret
flds
push
pushf
push
mov
jp
sbb
imull
mov
in
int
push
ret
push
mov
push
mov
addl
mov
pop
popa
inc
and
dec
cs
push
inc
inc
scas
sub
je
jb
test
lcall
add
sbb
pop
insb
loop
sarl
ds
jp
jbe
push
push
cmp
cmp
aam
mov
imul
pop
sbb
push
into
arpl
jmp
xchg
ficoms
push
pop
xor
adc
pushf
inc
je
sarb
jns
jnp
inc
leave
into
lods
dec
popf
stos
lds
sti
out
insl
stos
in
mov
sub
pusha
lahf
cltd
leave
insb
fcmovbe
sub
or
and
mov
aaa
or
faddp
fwait
cmpl
movsb
ds
cmpsl
adc
push
les
push
aas
movsb
jmp
insl
xor
xchg
std
notb
xchg
and
incl
fidivs
lahf
imul
nop
outsl
mov
stc
add
rcll
sbb
cmp
mov
pusha
or
std
sahf
push
mov
aas
cli
mov
push
aad
rep
mov
pop
jno
ljmp
jge
sub
mov
rorb
jecxz
or
jb
jp
inc
cmp
or
jmp
mov
push
subb
lcall
sub
xor
popf
gs
nop
push
adc
xor
jecxz
test
jecxz
addr16
pop
ss
lods
sbb
rolb
lods
xchg
ja
outsb
aas
inc
test
add
sbb
aas
lcall
nop
jl
iret
cmp
mov
lcall
aas
mov
imul
sbb
inc
push
or
inc
jl
roll
je,pn
notl
xchg
mov
adc
xor
cmc
mov
push
mov
cmp
jmp
test
cltd
es
and
xor
mov
and
pusha
sub
lcall
add
jo
or
pop
outsb
dec
cli
jno
in
icebp
push
jnp
test
testl
stc
inc
roll
cmc
inc
js
jg
mov
inc
xor
lcall
cmp
hlt
stos
jb
cltd
dec
add
stos
in
pop
mov
movb
adc
mov
sub
mov
nop
and
pushf
test
lret
pop
add
stos
lods
movsl
pop
shll
push
or
scas
test
pop
adc
mov
cwtl
push
push
insl
stc
or
sahf
out
jo
sbb
outsb
xor
pop
cmp
pop
aas
negb
out
cmp
fld
fwait
cmp
scas
nop
xchg
push
adc
fadds
js
or
les
cli
je
add
sarl
sub
leave
das
out
inc
push
mov
jmp
out
std
inc
sahf
xchg
rorb
cmpl
sbbl
mov
cmp
cmpsb
pop
aam
mov
jcxz
bound
cmp
and
movsb
pop
sub
fstp
mov
pop
cmp
jg
movsb
test
dec
adc
dec
outsb
movsl
fildll
dec
xor
setp
sub
xchg
jg
repnz
repnz
push
adc
test
testb
in
int3
jnp
dec
inc
pop
lahf
xor
fwait
das
mov
sbb
jne
jb
lahf
movaps
lahf
xchg
cmp
sbb
fidivl
int3
cmpsl
fdivs
mov
ror
outsl
cmpsb
jbe
xchg
xlat
insl
lods
dec
cmp
inc
mov
or
addr16
inc
int3
adc
out
cmp
cmp
leave
leave
cmp
inc
idivb
jo
add
mov
cmp
rcrl
or
mov
icebp
cmp
decb
pop
or
shll
pop
stos
cmp
or
call
aam
data16
mov
test
test
sub
shlb
mov
clc
mov
jp
fs
push
in
rolb
jg
scas
fidivrs
mov
cld
sub
adc
lea
cmp
jno
adc
push
testl
pop
push
int3
lret
or
movsl
xor
daa
cmp
gs
test
xlat
scas
mov
xchg
lahf
mov
mov
clc
inc
loopne
xor
jmp
jns
bnd
scas
std
clc
lods
push
sub
mov
sub
test
sahf
cmc
fwait
sbb
sbb
hlt
mov
insb
jb
test
mov
adc
pushl
les
add
ret
dec
sti
testl
addr16
icebp
pop
lret
inc
sbb
mov
push
outsb
cbtw
lret
divl
rorb
jl
jno
es
xchg
aad
xchg
mov
sbb
or
jne
jb
sbb
xor
or
mov
out
dec
mov
rclb
jle
pusha
dec
out
sub
inc
loope
fsubrl
mov
mov
add
daa
cmp
cmp
push
mov
roll
sub
mov
lcall
push
aam
testl
cs
mov
loop
jbe
adc
mov
inc
adc
push
arpl
xchg
fsubrp
xchg
inc
cmp
cmc
or
fldcw
add
xor
adc
xchg
dec
outsb
fstp
jne
std
cmpl
xor
xchg
nop
fwait
int3
es
arpl
mov
cmp
jg
push
pop
push
mov
ss
leave
mov
pushf
mov
rcrb
jp
add
xchg
mov
nop
movsb
bound
xchg
xor
adc
mov
leave
inc
jle
push
mov
push
std
lcall
xlat
mov
in
shll
push
pop
sarb
movd
push
jg
jns
test
iret
and
inc
hlt
lret
push
xchg
fwait
xchg
fistpl
stc
mov
clc
sub
mov
repz
cmp
lahf
pop
cwtl
jbe
xor
outsb
push
inc
pushf
loopne
cmp
popf
stc
mov
or
mov
in
dec
scas
mov
pop
pop
test
dec
push
insl
popa
push
shrb
rorl
pop
and
and
pusha
les
mov
repz
adc
lods
mov
xor
fildll
mov
popa
sarb
add
cmpsb
rolb
ficompl
imul
mov
mov
sub
or
mov
jl
int3
cmp
ljmp
dec
xorl
jle
xchg
mov
dec
push
or
sub
jl
loopne
jge
jne
je
jbe
test
ffreep
aam
cmp
in
xchg
xchg
xorl
ljmp
push
push
add
inc
lods
jae
sub
xchg
cmp
cmp
jne
pop
pop
lret
shrl
mov
mov
insb
inc
sahf
stc
jae
add
pop
in
ds
inc
cmp
fmul
mov
pop
test
and
scas
cmp
sbb
call
dec
fsubp
and
popf
jnp
dec
int
shr
scas
dec
data16
daa
subl
mov
mov
push
pop
xchg
push
jg
xlat
fs
dec
lret
cmp
std
or
ds
xor
imul
jne
mov
lret
insl
pusha
dec
stos
add
add
pushf
and
lret
fs
inc
std
xchg
jno
mov
insb
imul
cmp
cli
sbb
aad
mov
or
pop
mov
mov
stc
push
push
xchg
mov
pop
add
cmc
jecxz
xchg
insl
scas
lahf
mov
mov
daa
cli
bound
push
ret
dec
push
mov
subl
cmpsb
cmp
scas
inc
xchg
or
mov
insb
arpl
lret
xlat
jae
fdivrs
xchg
inc
sub
pusha
ret
ret
xchg
std
and
xor
fwait
das
push
cmp
dec
xchg
jnp
add
es
jnp
dec
push
and
divb
into
imul
fstps
mov
into
or
add
xor
sbb
andb
cli
xchg
lcall
fldenv
xor
xor
jl
test
jg
or
nop
sub
sti
pop
cmp
sbb
push
jg
xor
mov
xchg
inc
addl
sti
jns
dec
push
and
popf
cmp
aaa
mov
cmp
dec
lcall
repz
stos
divb
cmp
fstl
jnp
inc
jl
or
xchg
int
mulb
jns
or
lock
mov
cmpsb
jno
and
mov
cmp
sbb
sub
outsl
mov
mov
negl
add
inc
and
test
cmpl
push
movsl
lea
sbb
mov
sub
push
js
cmpsl
sbb
imul
jae
mov
imul
or
jns
roll
lret
or
lods
mov
mov
mov
inc
stc
jno
and
mov
pop
outsl
loope
pusha
jp
or
cmpsb
sbb
test
push
mov
cwtl
loope
or
clc
jbe
xabort
int3
jae
mov
rorb
sarb
jmp
stc
sbb
cwtl
hlt
cmpsl
int3
mov
dec
mov
repz
lds
fadd
xor
iret
out
inc
push
test
leave
out
mov
dec
test
inc
dec
xchg
mov
add
and
lods
imul
adc
fisubrs
scas
sub
loopne
leave
push
and
in
or
pop
mov
ret
push
test
mov
inc
sub
rorl
jg
pop
mov
inc
or
jg
add
adc
mov
xlat
mov
ret
shrb
cmp
dec
cmp
sub
pop
ds
sbb
orb
ss
fs
repnz
xchg
xchg
sar
call
jmp
and
in
or
negl
push
and
cmp
sbb
lret
xor
movsl
mov
dec
clc
test
or
ror
out
adc
fnstcw
pop
sbb
push
mov
push
xchg
lret
push
stos
add
xor
mov
int
pop
add
lcall
and
push
xchg
cmp
mov
dec
jl
outsl
push
call
cmp
stos
sti
pop
xor
fists
imul
repz
sbb
mov
sti
pop
push
pop
movsb
aas
dec
out
mov
nop
push
xlat
mov
cwtl
xchg
xor
pop
int3
mov
into
test
fs
and
in
hlt
push
hlt
ficoml
pusha
arpl
mov
xchg
inc
push
subb
mov
jl
rorl
inc
mov
mov
push
fcmovb
push
push
or
jg
out
pop
xchg
xor
cli
ja
dec
xchg
xor
ljmp
fists
add
call
shl
pop
incl
fisubl
add
and
add
push
push
lods
sahf
js
enter
adc
mov
or
dec
popa
cmp
loopne
jmp
aam
jno
movsb
mov
bound
lds
sti
sbb
add
arpl
test
xor
jo
xchg
out
rcrb
insl
imul
adc
aad
dec
jnp
jbe
fcmovne
inc
dec
jecxz
add
fadd
inc
stc
dec
mov
ret
xor
sbb
adc
sbbl
xchg
cmc
sub
lods
push
scas
jae
mov
int
push
jecxz
push
sarb
hlt
stos
cmp
subb
mov
loope
add
insl
roll
add
dec
xchg
pop
negb
popf
jno
mov
cmp
adc
les
xchg
or
sub
sub
out
adc
addr16
pop
or
pop
sub
jns
sub
insb
call
scas
cmp
jae
loop
push
inc
test
bound
lods
sbb
sub
xchg
insl
jo
sbb
nop
xorb
xchg
cmp
push
xor
hlt
mov
xchg
add
cmpsl
mov
repnz
sti
sub
push
push
mov
out
fwait
ret
pop
out
and
or
pop
test
lods
imul
mov
xchg
ret
jne
xchg
xor
xlat
adc
aam
cld
ds
lcall
adc
jb
adc
shll
cld
addr16
cmp
mov
pop
push
sub
xor
jl
or
adc
fisubrs
mov
push
cmp
jo
lret
fmul
sbbl
xor
and
jbe
loopne
and
add
pop
out
cmpsl
popf
jae
and
push
push
jmp
pop
popa
cltd
addl
push
xchg
push
fnstenv
mov
or
or
sbb
repz
sub
popa
gs
dec
cmp
mov
xorb
sub
jo
sbb
sbb
test
jae
inc
sub
xor
and
lock
jno
push
insl
mov
or
fmull
stos
fisttpl
arpl
ds
inc
dec
jne
cld
fisttpll
sub
scas
loope
cwtd
mov
adc
push
jns
sahf
and
lahf
and
dec
lret
movsb
cli
jnp
cmp
pop
enter
cs
mov
mov
clc
pop
add
inc
insb
jg
lods
lea
add
jbe
sub
into
inc
pushf
lret
bound
jmp
icebp
or
cmpsl
ja
pop
not
mov
xor
xor
pushf
cmp
inc
mov
xchg
stos
test
xchg
fldcw
orl
notb
cmpsl
cmpsb
popa
loope
out
cli
add
scas
cmp
or
loop
pop
mov
cmp
mov
pop
push
mov
lret
out
or
pop
cltd
ljmp
xor
adc
sub
popf
adc
popf
jle
stos
insl
mov
leave
sti
jo
loope
mov
xchg
or
sbb
cmpsb
mov
icebp
and
inc
cli
xchg
cmpsl
out
or
push
les
test
mov
cwtl
cwtl
cmp
fistpl
push
push
lahf
jne
push
test
cmp
fimuls
lret
inc
mov
popf
adc
mov
div
test
popa
xchg
sti
ja
push
jnp
call
push
std
mov
mov
sub
mov
xor
stos
daa
jg
outsb
push
inc
mov
mov
cmpsb
xlat
ja
sbb
adcb
sub
pop
scas
stos
popf
sub
push
cmp
out
jmp
and
inc
leave
adc
mov
mov
addr16
iret
jmp
and
into
je
add
nop
shll
push
push
push
iret
cli
inc
mov
ret
stos
jo
ljmp
xchg
pop
jl
jbe
xlat
cwtl
cmp
test
dec
mov
mov
repz
sbb
adc
xor
stos
push
pop
adc
gs
or
or
loop
push
aas
in
and
adc
mov
dec
lods
shlb
mov
inc
mov
outsb
aam
imul
jbe
sub
add
and
and
enter
mov
sbb
gs
cmpsb
pop
xchg
add
jmp
icebp
testl
sbb
pop
idiv
scas
in
add
mov
mov
outsb
cmpsb
repz
mov
movsl
imul
pop
mov
loopne
enter
lret
addb
jle
pop
inc
stos
inc
sti
cltd
enter
scas
popa
mov
icebp
roll
hlt
adc
and
ljmp
std
and
mov
and
dec
cli
dec
loopne
out
movsb
xchg
add
fdivl
stos
cltd
pop
xor
sarb
sbb
add
mov
mov
push
sbb
fdivp
iret
ret
mov
inc
mov
xchg
adc
stos
pop
fstpt
mov
xor
sti
mov
sub
add
js
fnstsw
lret
push
cli
mov
lods
and
inc
mov
inc
push
insl
jne
aas
lods
test
loope
mov
repz
adcb
mov
mov
les
data16
pop
mov
push
imul
and
inc
sub
push
dec
test
rclb
xchg
andl
sbb
incb
mov
jno
jl
add
in
jbe
push
shrl
jae
stmxcsr
push
sarb
dec
push
test
lret
das
dec
out
and
daa
push
dec
into
sbb
xchg
and
je
popf
ret
icebp
ljmp
repz
xor
stos
sub
mov
and
sub
xor
fwait
adc
dec
jae
mov
and
or
ljmp
lods
cmp
jg
mov
jmp
fwait
jg
xor
adc
sub
mov
pop
or
inc
push
je
jmp
sarb
mov
mov
dec
push
loope
hlt
aad
clc
in
dec
jne
xor
test
insb
jo
mov
clc
jmp
roll
pop
xchg
jno
adc
cmp
push
xor
or
or
rcrl
sbb
dec
jg
xor
in
ja
fldl
mov
mov
mov
xor
cwtl
jbe
cmpsb
je
std
loopne
addr16
and
mov
sub
repz
clc
pop
xchg
or
jle
les
scas
or
dec
stos
adc
mov
mov
mov
push
stos
je
lods
mov
addr16
mov
pop
mov
push
jno
or
xlat
jle
or
adc
inc
scas
pop
fisttpll
imul
pop
fcoml
int
hlt
adc
pop
mov
mov
mov
pusha
mov
leave
push
or
outsb
test
js
call
adc
mov
add
mov
rcr
mov
int3
out
mov
xchg
add
imul
cmp
aas
mov
divb
jno
cli
xchg
and
push
lahf
fmuls
and
imul
mov
push
call
cltd
pop
scas
jo
jnp
and
pushf
std
fcmove
ret
jns
lret
xchg
sbb
arpl
out
adc
insb
xchg
in
pop
fstps
dec
cmp
into
push
into
or
je
in
mov
inc
xor
sub
ret
ja
lahf
mov
lods
imul
jns
xchg
fildll
ret
push
pushf
popa
jne
icebp
sbb
adc
inc
sarb
insb
in
cmp
sbb
push
subl
movsl
adc
jmp
pop
and
arpl
jecxz
jmp
push
fwait
xor
fsubl
popa
xchg
shrl
arpl
std
dec
stc
das
sti
cmpsl
push
addl
je
cmpsb
outsb
jb
mov
inc
inc
nop
inc
push
mov
push
mov
outsb
scas
mov
aas
int
xchg
loop
repnz
popa
hlt
jecxz
das
pop
mov
insb
adc
jne
enter
inc
jne
inc
lods
movsl
loop
mov
inc
mov
pop
or
les
adc
pop
lods
loope
repnz
imul
dec
add
insl
mov
inc
dec
sbbl
jmp
shrl
and
mov
add
mov
jmp
subb
pop
inc
mov
cmp
mov
shlb
sbbb
pop
fistpl
shrl
push
push
repz
push
pop
adc
movsb
sbbl
mov
fiadds
mov
xor
outsl
nop
xchg
addb
dec
fmuls
popa
xor
cmc
add
pop
ds
scas
sar
inc
cmpsb
push
cmp
push
pushf
roll
xor
push
push
pop
fwait
jbe
sub
outsb
mov
call
loope
mov
jmp
add
mov
imul
movsb
jnp
loope
pop
loopne
adc
bound
adcb
mov
xchg
cmpsl
sti
push
aas
lret
outsb
and
dec
adc
ljmp
add
xchg
mov
fstpl
aam
inc
popa
cs
and
aad
mov
andl
orl
aas
rorl
mov
mov
sub
cmp
lock
sub
push
adc
inc
mov
cmp
sbb
jg
cmp
icebp
inc
jl
fiaddl
stos
push
xchg
popf
inc
sbb
enter
movsb
je
cmp
fucomp
add
ds
pop
xchg
mov
lcall
in
pop
and
mov
popf
sub
stos
ficompl
daa
rolb
outsl
jg
xor
xor
xchg
xor
aas
sbb
xchg
xchg
iret
imul
or
ja
mov
ljmp
aaa
cli
sbb
ret
mov
mov
adc
mov
jp
mov
fcmovu
movsl
jb
sbb
out
cs
mulb
gs
pusha
iret
lock
call
sbb
outsb
jns
cs
lods
mov
sub
xchg
jb
test
cwtl
push
sbb
or
fs
sbb
mov
fwait
mov
iret
ret
mov
sbb
lods
pop
notb
les
loop
sahf
ret
mov
shl
pop
mov
mov
es
out
lahf
and
ja
clc
dec
sub
adc
jae
dec
push
sahf
shll
jecxz
xor
mov
xor
push
lds
pop
lret
icebp
mov
inc
outsl
push
mov
paddq
mov
mov
repnz
push
inc
sub
mov
div
push
stc
inc
mov
pusha
add
push
fistpll
mov
lds
mov
fsubr
push
dec
pop
lea
inc
mov
aad
lret
sub
les
aaa
lods
push
pop
cmp
mov
adcl
xchg
mov
jecxz
mov
sbb
jno
in
and
xlat
and
mov
jae
push
movsb
mov
imul
test
daa
pop
dec
mov
inc
jae
dec
jl
xor
and
imul
inc
sbb
fcmovbe
pop
subb
ja
out
scas
cmp
adcb
shlb
loopne
sub
dec
push
mov
jae
and
inc
add
fisubrl
dec
pushf
sbb
negb
sbb
jo
jae
adc
scas
lods
push
lcall
ss
hlt
push
neg
push
cmpsl
testb
daa
push
or
pop
add
push
jle
out
sub
lcall
lcall
sbb
xchg
fucomi
jmp
lods
frstor
mov
xor
fcmovnbe
les
in
xchg
loope
out
shlb
cld
cmpl
cmpl
rorl
dec
adc
adc
push
daa
rcr
leave
daa
mov
scas
pushf
mov
add
xor
add
lds
mov
push
xchg
cmp
aas
popf
cmp
push
xor
adc
test
push
pop
inc
insl
cwtl
arpl
xchg
xor
add
jns
or
sbb
test
fcoms
dec
das
and
inc
cmp
pop
push
cli
test
testb
mov
loop
fs
xor
jle
jl
mov
clc
loop
push
ret
cmp
mov
cmc
loopne
hlt
cltd
cmp
push
jp
cld
push
movsb
push
lods
movsl
push
jb
xchg
pop
adc
loopne
nop
bound
push
push
mov
and
jmp
imul
lods
daa
mov
mov
lret
jp
or
or
lcall
jb
mov
mov
into
or
ja
push
stc
bound
loop
sbbl
add
pop
enter
inc
out
mov
loopne
imul
jge
cmp
outsb
xlat
cs
cmp
sub
sbb
mov
adcl
mov
mov
sldt
cli
push
ret
and
lret
sbb
clc
sub
lock
or
push
adc
lcall
xor
push
xor
xchg
or
in
iret
inc
mov
cmpb
cli
mov
or
test
cmp
cmp
xor
mov
add
ret
data16
jle
pop
lret
pop
push
clc
mov
scas
dec
cmpsb
add
pusha
in
loopne
out
add
mov
popa
and
jns
mov
sub
push
cmp
mov
aam
sub
pop
sub
and
dec
push
mov
cmc
sub
fildll
cmp
mov
and
dec
std
push
push
sbb
scas
mov
fdivrl
out
int
mov
clc
adc
or
sub
enter
jmp
push
xchg
push
gs
push
pop
pop
icebp
dec
and
loope
add
int
gs
cmc
mov
pop
mov
cmp
ret
xchg
mov
sbb
lret
push
add
icebp
hlt
jae
stos
and
or
subl
divl
lods
pop
push
repz
jnp
lret
stos
lahf
and
sub
test
sbb
daa
lea
adcb
sub
insl
lds
jo
out
pop
inc
mov
adc
jecxz
add
cltd
idivl
fbstp
fbld
xchg
roll
sub
xor
add
push
cmp
scas
cltd
mov
sti
mov
pop
lret
adc
jns
ret
jle
push
rcll
lret
cs
rcl
andl
popf
stos
lea
pusha
in
mov
mov
or
push
scas
shll
sub
mov
inc
lret
cs
push
lods
xchg
mov
clc
leave
mov
int
fmulp
inc
xlat
call
mov
std
and
push
iret
jg
icebp
xor
in
cmpsb
pop
lret
daa
insb
jo
sbb
dec
loope
sbb
sub
stos
push
xor
mov
jg
les
in
into
movsb
or
push
dec
jo
push
addr16
scas
je
push
dec
mov
aad
mulb
push
outsb
pop
andl
dec
mov
inc
xchg
or
fists
cld
or
push
sbb
push
push
mov
iret
into
cmpsl
mov
sbb
mov
cmpsl
mov
dec
stc
fisttpl
test
fmull
sub
aam
jae
push
push
inc
leave
cmp
and
add
popa
cmp
mov
sarb
sub
add
mov
sub
out
into
mov
test
insl
mov
stc
xchg
mov
add
test
pushf
daa
and
std
or
push
outsb
push
cmp
mov
mov
mov
adc
cmp
xchg
push
out
jp
inc
pop
inc
shll
and
xchg
orb
sbb
dec
xor
cmp
into
push
mov
setb
fsts
icebp
lret
dec
push
dec
aas
fmull
nop
mov
std
jne
call
or
mov
xor
pop
arpl
or
mov
lcall
adc
pop
sbb
aaa
aad
stc
sub
std
mov
aad
xchg
dec
rorb
and
fimuls
inc
bound
add
ja
and
jg
cmpsb
out
jecxz
jmp
dec
loopne
outsl
dec
mov
loopne
sbb
ret
clc
and
xchg
jb
fcmove
ss
hlt
pop
xor
mov
aad
fbstp
xchg
dec
shrb
pop
repz
ja
ljmp
jb
das
gs
sbbb
cwtl
movsl
test
insb
fstpl
inc
mov
aad
aad
xchg
fdivrl
sub
sbb
jns
sbb
mov
orl
xlat
xor
add
nop
pop
lahf
shr
xor
xor
in
mov
je
mov
pop
pushf
mov
setns
xor
int3
sub
shlb
xor
pop
push
add
cmc
push
mov
fdivrl
lcall
cmp
sbb
test
lock
iret
adc
xchg
pusha
sbb
push
cltd
arpl
mov
xor
daa
dec
mov
or
cmp
sub
sub
test
cli
pop
sbb
test
mov
cltd
in
test
mov
mov
insl
push
mov
rcll
ja
jo
xchg
shlb
xchg
sti
lods
mov
mov
ljmp
pop
pop
jns
mov
in
adc
rcl
mov
xor
inc
lcall
jp
aam
add
mov
jl
cmp
cld
pop
mov
cmpsl
out
adc
inc
into
sbb
insb
sti
lds
gs
enter
out
mov
or
jecxz
dec
cmp
rol
loopne
scas
and
dec
lcall
adc
lods
jmp
cld
aam
cmp
icebp
rcrl
xor
or
sub
cmpsb
sbb
mov
jno
cmp
push
call
int
pop
mov
add
cwtl
aaa
or
cli
pop
cmp
cmp
aaa
divl
and
repnz
add
mov
jne
cmp
sub
jecxz
adc
fcoms
and
inc
add
sbb
mov
add
sbb
adc
pop
hlt
sahf
pop
shr
inc
sub
xor
xchg
call
push
lret
iret
in
sbb
lds
outsb
cld
std
scas
adc
lcall
ss
sbb
popl
stos
scas
mul
mov
mov
adc
dec
movsl
mov
cs
pop
mov
lahf
jmp
pop
mov
std
es
mov
int
mov
mov
mov
cmp
call
arpl
cltd
lahf
jae
cld
test
leave
push
mov
xchg
xchg
hlt
xchg
mov
pop
xor
push
add
sbb
nop
xchg
inc
dec
gs
jge
or
int3
pop
data16
jb
lods
imul
sahf
test
xchg
dec
mov
mov
sub
mov
add
pop
inc
or
in
out
iret
xor
sbb
sbb
inc
inc
xchg
mov
and
fdivs
push
fbld
ret
lret
cli
xchg
pop
inc
fistl
lret
mov
clc
insb
sub
ja
jle
push
xor
mov
jg
jno
jo
fildll
sahf
iret
pop
xchg
and
out
fs
scas
jno
push
or
cltd
jmp
dec
rcrl
push
loopne
xchg
les
add
aad
leave
addl
insb
outsb
repnz
sub
mov
leave
ret
ss
fldl2e
test
stos
cli
xchg
xor
rorb
sahf
pop
sub
hlt
cmp
push
or
data16
xchg
lods
mov
jo
adc
jecxz
jae
mov
in
push
insb
push
insb
gs
cs
push
push
andb
add
shl
ret
mov
inc
xchg
stc
dec
mov
xor
je
push
inc
ljmp
scas
or
dec
aas
push
jl
pop
sbb
xor
sbb
pop
lods
xchg
xchg
pop
stos
sub
popa
das
aaa
popf
les
xor
mov
fs
dec
dec
push
out
stos
push
rol
mov
push
sbb
jmp
add
mov
fstl
pop
stos
cmp
pop
push
mov
lea
xchg
stos
sbb
push
enter
pop
outsb
movb
mov
inc
test
in
cmp
mov
aam
jo
dec
dec
and
sbb
cmpsl
inc
jne
in
mov
stc
stc
imul
jmp
loope
ss
push
mov
mov
popa
insl
test
pop
mov
sbb
movsb
cmc
subl
cld
punpckhdq
fstl
orl
and
push
es
mov
mov
jb
loopne
inc
mov
sbb
imul
fdivr
sbbb
xchg
sub
loope
shlb
es
xchg
cmpsb
jo
mov
int
jecxz
pop
scas
aam
jge
je
xorl
popa
mov
and
cmc
jp
jecxz
call
addr16
jecxz
out
push
xchg
out
adc
xor
cmpsl
lock
sub
andl
dec
pop
jns
or
dec
mov
andl
fistpll
or
push
jnp
jg
pusha
sti
mov
pushf
mov
fisttpl
test
dec
dec
inc
sbb
rcl
fdivr
leave
mov
jp
pop
cmpsl
imull
jecxz
push
jge
test
lds
in
and
pop
jg
shll
pop
mov
push
sbb
sahf
xor
fisubs
sbb
rorl
push
pushf
sbb
pop
lods
loop
xor
pop
fsts
adc
test
sbb
les
mov
dec
pop
ret
arpl
lahf
imul
cmp
stos
or
xlat
add
dec
xor
cmp
or
loope
push
xor
and
mov
xchg
test
mov
shl
adc
aaa
ljmp
push
mov
outsl
mov
mov
xor
rorb
push
jl
xchg
ret
xorb
lcall
cltd
aaa
incl
sub
inc
inc
mov
mov
outsl
push
xor
lea
into
sti
jnp
cmpsl
addb
xor
xchg
xor
xor
fiaddl
add
repnz
fnstcw
adc
jge
mov
xchg
mov
fsubrs
fsubrs
and
sbb
sarb
int
mov
bound
mov
adc
xor
inc
cmp
bound
out
push
mov
out
ret
ret
or
mov
cmpsb
jge
mov
xchg
shll
shrl
ja
and
enter
fsubl
and
in
push
test
push
repnz
jnp
mov
testl
cmp
or
push
mov
imul
aam
popf
ds
pop
fs
mov
mov
jle
daa
sbb
push
jb
cli
sti
nop
add
and
movsb
mov
addb
pop
ja
push
pop
or
and
inc
mov
bound
fistl
pusha
jb
pop
add
mov
pop
int3
add
fsubrs
cmp
fmul
mov
les
and
imul
sahf
clc
mov
adc
mov
dec
sub
cmp
jg
ja
mov
movsb
pop
dec
sbb
mov
cmpsb
xchg
cmp
mov
sub
mov
nop
outsb
jb
mov
test
iret
std
outsl
pop
cmc
xor
push
idivb
gs
mov
inc
or
sub
xchg
pcmpgtd
pusha
jmp
or
loope
clc
loopne
sub
and
loopne
mov
jl
cmp
mov
push
aaa
xchg
and
jecxz
imul
jno
mov
xor
or
mov
pop
cld
xlat
dec
mov
stos
jno
sar
int3
sub
and
sbb
cmp
adcl
sub
mov
jb
push
and
pop
ja
xor
repz
fldl
jae
inc
mov
icebp
pop
cmpl
xchg
inc
adc
fildll
inc
mov
ret
xchg
mov
push
jne
movsb
pop
mov
movsl
int
inc
pop
push
cmp
inc
push
imul
pop
mov
push
mov
movsl
xor
mov
lret
movl
mov
addr16
xchg
lahf
sub
or
aam
lcall
das
pop
and
xchg
xchg
enter
dec
mov
addr16
cmp
xchg
pop
mov
int3
sarl
cmp
jo
lea
notb
jbe
jmp
xor
loopne
push
and
cmp
push
scas
aad
shll
xchg
fwait
xor
or
arpl
cmp
sbb
ds
mov
bound
sbb
dec
aad
fidivl
shlb
mov
dec
pop
imul
sbb
inc
cwtl
and
lret
inc
dec
dec
imul
sub
ljmp
sar
push
dec
pop
and
imul
jbe
mov
insb
adc
in
jns
lds
cmp
pusha
jne
int3
pushf
pushf
sbb
push
ljmp
sub
xor
pop
addr16
sbb
loopne
xor
pop
push
jns
or
sti
and
cmc
adc
inc
sub
sub
frstor
das
cmp
sti
in
xchg
das
xchg
push
loopne
out
xchg
mov
fcompl
bound
out
jne
loopne
xor
fidivl
test
call
aad
nop
ret
mov
add
imull
inc
inc
hlt
fwait
iret
xor
insb
push
insl
mov
sub
jb
cmp
cmp
cld
jno
mov
ret
inc
push
xchg
lahf
xchg
hlt
add
mov
lcall
push
mov
mov
jnp
mov
mov
pop
call
sbb
dec
cmp
popf
mov
aaa
in
incl
test
mov
rclb
sbb
push
inc
loopne
push
stc
aam
repnz
ds
mov
test
shlb
into
pop
xor
cmp
cmpsb
daa
add
xlat
jno
fwait
xchg
cs
fwait
mov
lret
test
dec
scas
fwait
lahf
out
fisttpl
and
adc
jns
xlat
aad
sbbb
pop
sub
or
pop
pop
xchg
fsubl
mov
xor
push
hlt
adc
inc
jne
mov
and
adc
fisubs
mov
inc
sahf
popa
cmp
scas
cld
jns
in
lock
dec
xchg
arpl
fptan
sub
sub
arpl
mov
cwtl
pop
cld
loope
insl
sbb
sahf
stos
leave
jae
xchg
adc
push
jp
into
mov
arpl
push
sbb
cli
lret
cld
dec
mov
or
sbb
sbbl
mov
les
enter
push
jge
int
lret
add
ljmp
scas
sub
mov
lahf
stos
push
adc
mov
aas
stc
int3
and
sbb
or
ret
arpl
cmc
es
mov
sbb
scas
jo
xchg
sbb
aam
mov
mov
popa
incb
jecxz
xchg
xchg
shlb
leave
and
push
lcall
cmp
mov
lcall
mov
sub
fnstsw
rorb
into
xor
jecxz
push
sbb
mov
adc
in
mov
rcll
jle
inc
ss
cld
xchg
xchg
pop
ret
push
cmc
cmp
jl
push
inc
ror
mov
loope
in
out
or
xor
cli
gs
mov
pop
push
push
mov
add
sbb
mov
in
jg
cmc
aaa
inc
mov
test
mov
xor
loopne
mov
or
inc
pushf
adc
add
ret
loopne
sub
hlt
not
cld
or
cmc
inc
push
arpl
leave
js
add
or
cmpsl
push
imul
loope
mov
lods
loop
pop
mov
xchg
adc
shlb
sarl
bound
sub
scas
or
inc
fisubl
bound
jb
iret
mov
adc
lds
sti
mov
es
js
sahf
cmp
dec
and
inc
xor
nop
mov
aam
pop
pop
mov
inc
in
jl
jns
push
xchg
shl
mov
sub
movsl
mov
pop
sbb
nop
and
xlat
pop
bound
sbb
cmp
dec
add
std
outsl
adc
pop
mov
and
mov
jge
xchg
test
sbbl
lcall
lret
fcoms
nop
cmp
dec
pop
es
punpckhdq
add
insl
loopne
ss
or
leave
inc
pop
add
sub
sbb
push
dec
xchg
stos
mov
xchg
adc
sar
fcmove
pushf
mov
adc
sti
mov
dec
mov
pop
in
out
sbb
sbb
sub
cld
pop
jo
jne
pop
jae
jbe
sti
repz
jg
push
sbb
jecxz
mov
ds
cli
mov
mov
lret
xchg
psllq
inc
add
in
jge
cmpsb
testb
imul
ljmp
dec
mov
int
pop
mov
xchg
call
sqrtps
fidivl
out
lret
pop
pop
xchg
push
sub
int3
inc
xor
jbe
fwait
cs
clc
fstpt
dec
xorl
nop
and
mov
stos
push
push
inc
add
mov
add
pop
adc
lods
inc
in
out
add
add
nop
jnp
xchg
or
mov
cmp
push
xor
aas
stos
cmpsl
jo
test
loop
clc
ret
popf
jbe
or
and
push
sahf
lods
inc
lahf
jle
addr16
and
lds
loopne
xchg
add
push
fisubrl
push
adc
sarl
pop
dec
push
jb
outsl
xor
xchg
lea
add
mov
jp
push
arpl
iret
loopne
or
or
sbb
lds
movsl
add
sahf
imul
sub
jnp
out
jp
into
int3
and
fidivs
and
mov
fs
sar
and
jmp
jmp
lret
mov
decb
inc
pop
in
jg
mov
bound
cmp
jno
add
mov
cmp
push
test
dec
jo
xor
bound
mov
add
cmp
and
stos
cmp
jne
dec
cltd
mov
xchg
shlb
sbb
xchg
push
inc
xchg
in
sbb
mov
mov
adc
imul
pop
push
aad
sbb
popf
enter
lds
sti
pusha
pop
mov
xor
int3
lret
sbb
imul
mov
das
jnp
push
ja
mov
aam
sbb
mov
icebp
push
jae
in
icebp
push
sub
mov
insl
iret
sbb
stos
xchg
jns
lahf
cmp
add
les
and
ss
lods
mov
test
sbb
mov
xor
mov
hlt
jb
xchg
or
insl
test
lods
ds
aad
sbb
lea
adc
in
andl
xor
xchg
pop
push
push
mull
mov
scas
aad
andl
scas
sbb
and
sbb
btr
or
mov
rorl
xchg
cmp
js
push
pop
xchg
xor
dec
jmp
pop
lcall
push
adcl
ljmp
and
xchg
lock
push
loope
dec
xchg
mov
add
add
sbb
sub
or
mov
xchg
mov
ret
pop
push
mov
outsl
stos
test
push
lret
fnstcw
ljmp
lret
imulb
push
out
mov
dec
xchg
adc
or
inc
sbb
fisubrl
add
sbb
mov
push
mov
test
hlt
fwait
es
loope
or
ja
dec
and
jbe
dec
xlat
dec
and
jbe
xchg
mov
sub
mov
push
xor
pop
mov
mov
jp
outsb
xor
push
mov
jae
hlt
cmp
jae
fucomp
sahf
mov
push
out
adc
mov
sti
clc
loopne
or
push
sbb
mov
ret
mov
dec
test
sbb
or
mov
push
dec
mov
fildll
int
insb
dec
in
das
loop
data16
imull
fwait
jno
jp
outsl
out
bound
aam
daa
inc
sti
sti
xor
out
xchg
or
jg
dec
pop
inc
stc
pop
jnp
push
adc
insb
push
pop
xlat
cmpsb
mov
dec
rcll
mov
stos
xor
aam
and
shl
xchg
and
mov
pop
movsb
xor
xor
test
push
xor
popf
sub
loop
bound
popa
cmc
addl
mov
lahf
addr16
ljmp
leave
sub
aam
shll
add
arpl
and
pushf
add
shll
int3
lahf
mov
scas
mov
popf
pop
and
popa
andl
popf
pushf
das
jp
cmp
cmp
mov
xor
ret
cli
xchg
iret
nop
loopne
in
or
sti
loope
iret
cmp
inc
sahf
dec
decb
sahf
or
xchg
sub
pop
sbb
sub
lcall
jb
sub
fsts
mov
fsubrs
ja
lods
pop
mov
mov
adc
mov
cli
fdivl
push
mov
cmp
cli
inc
mov
inc
loopne
aad
and
push
mov
mov
call
insb
outsb
push
xor
adc
add
dec
sub
mov
and
mov
push
push
xor
add
jo
fbstp
jmp
inc
inc
ja
cmp
out
sub
inc
je
pusha
fs
mov
lds
shll
and
stos
in
xor
cmpsl
outsb
in
mov
pop
add
loopne
jns
mov
inc
dec
mov
lret
outsb
push
cwtl
loop
jno
mov
stos
pop
rolb
ja
xchg
aam
push
inc
cmc
scas
dec
inc
fstpt
addl
mov
and
and
sbb
jmp
sbb
dec
pop
loop
jecxz
adc
inc
out
mov
repz
sbb
cmc
ds
push
fistps
inc
sahf
xor
sbb
daa
pusha
xchg
jne
sbb
xchg
out
mov
hlt
movsl
xchg
or
imul
repnz
fcoms
push
outsb
xchg
jae
or
and
gs
insb
ret
and
fidivs
inc
arpl
lods
jae
jno
jmp
sbb
or
fbld
stos
loopne
and
test
sahf
mov
and
sti
ja
mov
adc
or
lcall
mov
lret
mov
cmp
inc
xor
mov
sbb
dec
leave
fists
push
in
sarl
jns
lahf
and
or
ljmp
and
pop
cmp
popa
ret
xchg
cltd
pop
outsb
out
data16
fisttps
pop
addr16
dec
jb
inc
ret
out
or
lds
out
cwtl
stos
jmp
in
mov
cmp
jp
xchg
and
inc
or
mov
shrb
jecxz
ds
xor
xchg
mov
rolb
in
out
mov
jmp
cmp
repnz
push
adc
dec
cwtl
push
movsb
adc
gs
inc
or
imul
sti
out
rcrb
ficoms
adc
cmp
ljmp
shl
jae
push
xchg
mov
imul
inc
dec
loop
mov
scas
icebp
push
jl
fstpt
lods
repz
shll
lods
out
ljmp
movsb
stos
sub
ficoml
push
pop
pusha
in
aad
dec
movsl
pop
push
jecxz
in
sub
inc
inc
mov
push
test
cmpb
jecxz
xor
pusha
xchg
sbb
daa
sbbl
add
out
scas
sbb
xor
testb
xchg
push
test
mov
lods
xor
xchg
daa
mov
push
lahf
je
sti
inc
mov
sub
jae
sbb
test
mov
mov
arpl
sti
movl
mov
jge
ffree
aam
cli
jmp
mov
pop
lods
push
cmp
rolb
xlat
insl
jae
icebp
or
xor
or
xlat
adc
add
cmp
inc
inc
sub
test
mov
adcl
adc
pop
or
icebp
push
pop
mov
add
or
fcmovbe
popa
push
or
ds
push
and
push
arpl
pop
sbb
xor
repz
or
or
stc
and
test
mov
add
pushf
cmp
mov
cmp
dec
gs
mov
sti
cmp
jecxz
dec
test
push
stc
adcb
mov
call
das
sbb
cmp
mov
adc
pop
in
add
fcomps
arpl
jb
orb
xor
fisubrs
repz
in
clc
jg
cmp
or
xchg
dec
jg
loope
je
mov
and
sbb
mov
xchg
push
aam
mulb
dec
fcoms
inc
cs
and
sbb
into
jae
out
gs
daa
pop
sub
and
loopne
popf
lods
les
iret
inc
outsb
ret
decl
cmpsb
mov
dec
imul
or
cltd
cmp
xchg
jb
pusha
js
inc
mov
add
es
cmp
inc
aaa
and
push
cmp
sub
hlt
mov
imul
cmpsl
pop
clc
fwait
stos
shll
mov
aam
cld
add
mov
psllw
xor
aaa
mov
loop
mov
test
clc
lods
dec
test
sbb
movsb
stc
jmp
outsb
addb
mov
fisubrs
dec
pop
sbbl
mov
jns
leave
lds
inc
pop
pop
add
xor
aam
nop
negb
sti
movsl
lea
loope
add
mov
loopne
mov
sub
inc
mov
les
movsb
into
jbe
les
out
leave
mov
xchg
std
js
cli
mov
stc
mov
in
add
sbb
push
mov
loop
inc
addl
js
sbb
sub
dec
scas
ret
push
outsl
mov
adc
xor
jmp
push
mov
popf
add
mov
sub
push
out
ret
adc
fucomp
outsl
ja
gs
fstpl
or
pop
mov
in
add
clc
rdtsc
or
inc
lret
sbb
out
mov
call
pop
push
dec
mov
xor
mov
repz
dec
insl
add
iret
ds
add
sub
dec
push
je
in
cmp
insl
sub
repz
pushf
push
int
xor
scas
in
xchg
mov
cmp
pop
xchg
ret
mov
aas
js
or
or
cmp
outsl
lcall
xchg
pop
int
jmp
mov
adc
scas
cmp
sti
jbe
xchg
push
sub
les
mov
jns
fnsave
dec
dec
and
clc
lcall
pop
ret
and
cmp
xchg
sub
push
inc
movsl
sbbl
xor
cmp
lahf
mov
fidivrs
movsb
add
jl
leave
mov
sub
push
mov
or
sbb
xchg
loop
cld
fisttpll
cmp
mov
cmpsb
lock
adc
scas
mov
mov
bswap
mov
imul
scas
sbb
mov
ss
and
mov
aad
les
cmp
mov
cmp
jo
jg
mov
sub
rcll
xchg
stc
xor
mov
outsl
int
push
xor
sbb
push
mov
cmpsl
fidivl
fisubs
mov
sbb
cmpsb
and
push
jge
push
cmp
jo
mov
jecxz
mov
mov
cmp
arpl
jle
in
mov
lods
and
xchg
sbb
aad
cmc
push
repz
add
xor
mov
mov
scas
mov
xor
pop
inc
dec
xor
jb
xchg
cmp
lds
jno
dec
rclb
and
ret
in
int
pop
out
lret
sub
adc
sub
aad
sahf
dec
cmpsb
inc
pushf
notl
jbe
add
es
hlt
test
sub
mov
push
push
sbb
adc
push
jmp
and
clc
pushf
out
out
fs
and
or
dec
clc
in
dec
daa
sbb
dec
pop
or
fldl
scas
lahf
mov
inc
xchg
cltd
test
jp
add
pop
in
lret
mov
sbbl
out
mov
add
repnz
add
lcall
orl
push
or
fadds
lret
jle
mov
pusha
popf
pusha
scas
push
out
mov
ret
inc
inc
xor
mov
push
cmp
popa
inc
fwait
jl
enter
pop
xor
stos
iret
pop
fnsave
arpl
add
jo
ss
jle
and
mov
cs
pop
and
dec
je
pop
jg
pop
fldenv
xor
aam
adc
and
out
rol
loopne
or
inc
mov
sub
popf
test
cmpsb
mov
xor
jg
movsb
mov
dec
push
jbe
add
mov
sbbb
out
xor
adc
mov
and
mov
ret
mov
lods
sbb
jg
jne
lock
out
adcb
jns
push
cwtl
les
mov
cltd
add
push
cmp
test
jnp
add
lds
jne
dec
fwait
pushf
fisttpl
icebp
pusha
mov
loopne
in
push
cltd
xor
mov
mov
lcall
jne
jmp
into
adc
inc
push
mov
mov
jns
imul
fcomip
cmp
outsb
mov
and
sarl
xchg
clc
pop
push
gs
jbe
jp
mov
inc
icebp
xchg
or
mov
data16
ret
or
ss
punpckhdq
loopne
incl
int3
icebp
out
data16
lret
sbb
jecxz
mov
loop
pop
jbe
popf
fistpll
and
lds
iret
cmp
test
or
mov
lret
pop
stos
mov
add
icebp
dec
or
popf
cltd
repnz
aam
bound
fdivp
int
xorb
mov
pop
jae
mov
xor
xchg
aaa
pusha
adc
movsb
loop
lcall
lret
or
enter
dec
insb
ljmp
push
add
xor
std
imul
sarb
sbb
inc
cmovo
in
push
xchg
xchg
ret
pusha
call
test
inc
pop
inc
and
ret
mov
jnp
lods
xchg
int
mov
xchg
stos
sti
push
rclb
jp
out
repnz
lret
ds
ficoms
inc
or
pop
jbe
lock
cmc
push
push
daa
sub
daa
push
cmpl
and
loop
aaa
adc
sub
cli
mov
outsl
cmp
cmp
push
push
adc
mov
fwait
shr
shr
cmpsl
sbb
pop
sub
fwait
addr16
mov
fsubrs
loopne
shlb
subps
mov
mov
push
cli
cmpsb
push
and
jg
test
inc
addr16
arpl
push
int
stos
popf
int3
cmp
mov
stos
mov
add
aas
and
adc
inc
inc
mov
cmp
mov
inc
push
testl
sub
push
call
or
insb
sti
mov
push
dec
push
mov
mov
and
or
add
pop
xchg
xor
pop
cmp
jnp
dec
movhps
call
cmpb
and
and
icebp
aad
jns
xchg
rolb
or
leave
clc
and
xor
fadd
adc
aaa
adcl
mov
fs
out
aaa
aam
and
mov
sub
stos
test
vcomiss
in
push
test
mov
lret
lods
push
mov
pop
xchg
add
call
adc
or
adc
inc
dec
je
ja
sub
in
cmpsb
cmpsl
push
std
movsl
rcr
jns
ljmp
and
sbb
sub
int
mov
bound
cmpsb
adc
push
in
add
call
mov
or
cs
fsubrs
cmp
cmc
push
dec
lds
mov
adc
xchg
mov
jae
pop
fidivrs
jo
mov
adc
call
dec
sbb
fcompl
mov
mov
jge
notb
cmp
jle
pop
scas
fadd
xor
lds
or
mov
stc
outsb
inc
mov
rolb
cmp
xor
outsb
push
aam
jp
inc
xchg
rcr
mov
mov
insb
jg
ret
dec
inc
add
inc
data16
iret
xlat
push
rclb
mov
hlt
arpl
test
aad
pushw
jecxz
mov
dec
outsb
xor
cmp
sub
and
or
inc
std
dec
insl
movsb
xchg
jecxz
add
shrb
adc
adc
xchg
push
inc
mov
shll
ljmp
jmp
cmp
dec
xor
cmp
shlb
les
mov
mov
mov
scas
dec
movsl
xor
stos
out
inc
pop
pushf
sub
jmp
jecxz
jno
dec
arpl
sbb
pop
dec
enter
outsb
fisubrl
lods
lds
xor
push
insl
jno
shrl
movsb
add
sbb
sub
dec
ds
mov
sub
push
aad
outsb
add
movsb
dec
fxch
js
subl
adc
mov
mov
sar
popfw
dec
aam
hlt
add
or
dec
leave
mov
fisubs
mov
mov
orl
ds
movsb
pop
push
pop
fisttpl
outsl
das
inc
cld
test
jb
mov
mov
add
pushf
int
sbbb
push
xor
pop
pop
mov
cmp
mov
lods
mov
mov
pop
ljmp
loope
clc
mov
je
add
shr
imul
mov
cmpsb
adc
mov
loope
es
aam
fstps
cld
dec
loop
pushf
mov
pop
test
fstpt
pusha
fldcw
pop
or
pop
xor
fisubs
mov
jnp
mov
mov
push
iret
inc
orl
pop
sarl
data16
adc
mov
xchg
repz
les
mov
sahf
inc
pop
pushf
clc
test
pop
sahf
push
xor
ja
das
js
sbb
fwait
daa
call
jo
jle
push
stos
lods
jnp
and
fnstenv
inc
pop
lock
mov
outsl
mov
cmp
sbb
mov
push
imul
xor
jmp
loopne
fs
sbb
shrl
nop
stos
les
lds
fldcw
pop
std
lret
int3
rolb
ret
test
testb
cli
dec
sub
mov
xchg
pop
fcmovnb
test
je
push
adc
nop
inc
adc
and
adc
ds
jo
faddp
lds
adc
lahf
insb
sbb
mov
cmpsl
cmp
popf
xchg
xchg
lods
mov
cld
je
dec
and
notb
testb
test
into
imul
jnp
mov
dec
mov
aaa
jae
je
loopne
call
call
cmc
negb
sbb
aas
loop
xchg
sbb
add
mov
jecxz
push
cli
sahf
mov
cmc
jg
cltd
lahf
std
imul
rcll
push
test
std
cmp
push
fldt
push
mov
ret
jno
xchg
dec
xor
cmp
scas
lea
aad
pop
js
aaa
push
insl
pop
mov
je
andb
sbb
sub
repnz
mov
loop
inc
push
mov
jp
loop
insb
jp
pop
in
inc
cli
sbb
hlt
mov
lock
ljmp
cmp
je
adc
jmp
or
orb
mov
cltd
sbb
cmp
popa
cmp
sub
cmpsl
in
and
ret
adc
nop
popf
sbb
iret
pop
jg
js
ret
dec
ds
loope
pop
inc
pop
adcl
push
mov
add
pusha
add
jo
cmp
cltd
cmp
cmp
dec
stos
mov
pusha
dec
mov
cmp
stos
xchg
inc
push
jns,pt
or
push
or
pop
ror
dec
jb
or
aad
cmpsb
std
movsl
test
push
push
movl
loop
mov
jo
add
sub
cmc
fs
and
xor
xchg
xchg
in
mov
inc
cli
mov
insl
cwtl
test
or
les
mov
and
xchg
xor
movntps
xchg
mov
xchg
dec
inc
xor
mov
push
lea
add
test
and
fidivl
jecxz
or
add
pop
sar
cli
xchg
mov
or
popf
inc
jl
xor
shl
pop
loopne
sbb
push
mov
hlt
dec
dec
jle
sub
jp
jle
lods
outsb
push
add
mov
sbb
mov
xlat
popa
xchg
fdivp
fnsave
enter
sub
lret
divl
pop
or
ret
aad
ret
testb
push
mov
xchg
aaa
nop
mov
push
cmc
adc
push
jp
ret
stos
mov
mov
or
dec
jne
repnz
jb
adc
xlat
adc
cld
fmulp
pop
call
mov
test
cs
sbb
sub
adcl
mov
adc
or
loope
nop
cwtl
insl
mov
cmp
mov
xor
idivl
push
stc
fimuls
dec
lods
pop
xchg
loope
push
popa
push
xlat
push
fsubl
cmp
mov
dec
xor
pop
nop
mov
adc
stc
lods
xchg
mov
cmpb
mov
inc
cmp
in
xchg
in
pop
dec
mull
add
imul
lret
add
sub
mov
push
rorb
fs
in
or
xor
clc
adc
dec
shrb
cmpsl
cld
add
aaa
sbb
mov
lods
pop
pop
repnz
call
pop
nop
cmpsb
pop
imul
push
jno,pn
dec
pop
xor
sbb
enter
jge
call
dec
fisttpll
mov
or
push
or
mov
cs
data16
pop
xchg
xchg
les
in
fcompl
nop
cmp
fnstcw
push
jmp
outsl
dec
mov
mov
or
pushf
ja
in
dec
xchg
mov
in
xchg
int
push
sbb
jecxz
mov
and
data16
stc
inc
lods
lods
xchg
cmp
jecxz
xlat
icebp
ljmp
push
mov
sub
pop
add
adc
mov
mov
lcall
ficoml
sbb
and
cmp
xchg
mov
cmpsb
cli
imul
out
aam
cmpsb
int3
call
int
and
out
cmp
xlat
bound
rcr
in
test
iret
js
je
xor
mov
pop
nop
push
pop
data16
lahf
les
inc
lahf
sub
and
sbb
bnd
decl
pusha
popf
pop
add
pop
sbb
les
and
or
ss
ds
jl
ret
outsl
fsubr
sahf
cs
push
notl
dec
sub
int3
mov
test
mov
into
push
pop
or
mov
scas
jns
test
outsl
arpl
jo
cmpsl
pop
xor
je
ret
pop
xor
push
mov
inc
mov
push
push
cmp
cmp
aas
jecxz
ficomps
es
and
ds
adc
out
rcrl
jnp
test
push
cmp
roll
in
push
xchg
mov
xchg
push
and
and
mov
add
cltd
mov
push
cmp
loopne
ss
lods
mov
sub
cmpsb
adc
xchg
stos
add
jmp
testl
jnp
jno
mov
push
pop
dec
in
dec
sbb
pop
test
sbb
mov
scas
icebp
jle
in
push
insl
cwtl
pop
mov
scas
setne
mov
and
push
ljmp
stos
aaa
mov
fsubrl
cmc
jo
call
and
jnp
inc
in
dec
outsb
xor
and
pop
push
jnp
arpl
xchg
loop
mov
testl
in
pop
mov
push
dec
test
popf
movsb
push
mov
xchg
adc
lret
inc
es
and
mov
in
cld
jl
mov
jns
xor
insl
ret
mov
jmp
fmull
or
pop
sub
inc
out
mov
mov
scas
repz
xchg
and
jb
inc
outsl
ret
mov
cmpl
add
popa
imul
bound
dec
cmp
pop
mov
aas
int3
xchg
lret
loopne
cmpsl
divl
sbb
jge
mov
push
out
dec
lea
lcall
cmpsb
outsb
push
roll
cmp
cmp
sbb
mov
pop
mov
add
or
stos
xchg
insl
andl
cmp
dec
aas
stc
js
jl
hlt
push
cmp
add
lret
push
adc
dec
in
int
imul
sbb
mov
and
xchg
test
mov
xchg
sbb
insl
or
sti
popl
push
or
shlb
repz
fimuls
call
pop
and
fdivl
out
fwait
movsb
mov
fsubl
add
add
pop
shr
repz
leave
mov
xor
and
into
inc
adc
xor
les
mov
cld
roll
fmul
into
and
out
mov
adc
aam
cmp
fwait
lods
and
dec
loopne
insb
dec
or
call
add
jecxz
jne
mov
jecxz
mov
dec
xchg
nop
push
ss
cld
mov
mov
sti
mov
les
pop
es
mov
xor
jp
mov
test
je
push
cmc
aam
xchg
adcl
mov
adcb
fcomps
in
push
mov
sub
outsb
das
mull
mov
or
adc
lret
mov
adc
sub
jp
xchg
idivl
and
nop
jb
or
push
test
push
xor
mov
outsl
test
cmc
or
ret
insl
cmp
lods
es
mov
jne
test
pop
bound
shl
xchg
mov
ds
mov
pop
cmp
fsts
adc
ret
add
int
jge
dec
mov
insl
out
fidivl
xor
loope
mov
repnz
andl
lods
and
adc
scas
push
daa
mov
mov
sub
es
add
push
xchg
jl
mov
hlt
inc
sub
sub
loope
and
jb
cmp
sbb
ret
cmpsb
rorb
mov
std
out
enter
jne
fiadds
and
int
jl
jl
xchg
popf
pop
inc
out
pushl
mov
dec
arpl
mov
or
lock
cmpsb
jl
rclb
jns
mov
mov
addr16
push
mov
jnp
cld
jp,pn
mov
and
dec
mov
cmc
sbb
xchg
add
stos
repz
pop
mov
xor
adcl
and
jae
mov
xlat
pop
xor
push
mov
shl
mov
jae
sub
lret
stc
jnp
jmp
lods
mov
or
sbb
jnp
mov
lock
mov
push
mov
sbb
mov
lock
mov
rol
int3
xor
add
out
fnstcw
pop
and
sub
and
rolb
popa
lret
xor
add
add
orb
and
adc
sbb
out
add
mov
aad
enter
push
push
das
push
test
pop
ficomps
shlb
stc
mov
mov
and
addr16
bound
adcb
jge
lret
jbe
fstps
rol
sarl
loope
add
inc
lahf
add
sarl
loope
mov
test
sub
lcall
aas
js
outsl
push
push
xchg
push
cmp
xchg
mov
movsb
int
testb
leave
hlt
sbb
dec
add
xor
pop
sahf
sbb
mov
cli
or
mov
imul
lcall
push
mov
leave
rcr
out
xor
adc
jmp
scas
movsl
loopne
sahf
xchg
xor
jge
mov
icebp
mul
pop
jl
sub
mov
and
and
bound
push
pop
das
pop
sbb
jmp
xor
or
xchg
add
adc
rcrl
sbbb
pop
push
sbb
add
cmp
stos
loop
push
jne
std
lds
sub
push
adc
lcall
into
in
out
sub
xchg
mov
and
sar
ja
dec
daa
sub
sub
out
gs
mov
mov
dec
pop
mov
insb
test
lret
or
les
mov
push
push
jnp
cmp
add
cwtl
aaa
in
shrb
sti
jbe
jns
sbb
xchg
pushl
sub
dec
xchg
das
sub
es
sub
pop
outsl
and
out
ljmp
cmc
mov
pop
and
stc
xchg
jle
pushf
mov
lcall
dec
shll
adc
inc
popa
mov
pop
mov
test
clc
jge
es
popa
call
push
cmp
scas
mov
cld
mov
cmp
add
dec
lea
xchg
jns
insb
sbb
into
stos
add
cmp
test
xlat
push
fcomip
sub
loop
jecxz
or
fldenv
shll
aad
sub
test
lock
mov
cmp
mov
repz
movsl
scas
mov
or
mov
or
shl
sahf
inc
sub
sub
or
cltd
int3
fsts
add
fildll
push
adc
add
xor
sub
push
mov
hlt
inc
test
loop
xchg
addl
ljmp
inc
aas
into
scas
push
push
mov
mov
inc
inc
fmulp
pop
cmc
pop
pop
pop
cld
sub
sbb
push
arpl
shll
leave
in
shr
les
xor
outsb
or
dec
movsl
jne
push
push
or
pop
xor
movsl
fwait
outsl
stos
ret
cmpb
scas
dec
push
movsl
fistpl
cltd
aad
aam
inc
mov
jge
mov
pop
and
ljmp
cmp
mov
or
outsl
jmp
push
addl
mov
fsub
sub
push
loope
jb
sbb
mov
mov
repnz
inc
mov
sbb
aam
jno
fisubrl
xchg
fbld
call
adc
scas
cltd
adc
xchg
in
leave
out
jne
shlb
mov
aam
leave
repnz
mov
dec
inc
push
adc
sbb
test
xor
hlt
push
jp
rol
xor
insl
stos
mov
ss
add
lcall
pop
pop
es
out
sub
dec
fld
aad
stos
movsl
stos
or
lea
xchg
add
sub
ja
fldl
stos
stc
rorb
stc
inc
int
jmp
mov
fbstp
push
sbb
pop
cmpsb
and
push
add
xchg
inc
jo
push
add
push
or
pop
je
lods
and
mov
mov
scas
sub
jp
leave
jnp
jp
push
inc
incb
into
mov
les
mov
out
in
es
and
jge
je
loope
std
stos
dec
xor
and
inc
ror
into
iret
fimull
adc
adc
mov
or
bound
inc
and
mov
repz
or
addb
jle
jnp
jl
sbb
cli
das
cwtl
jp
jecxz
and
jo
iret
mov
jnp
adc
xor
stos
cmpxchg
dec
sub
sbb
pop
and
scas
cmp
or
mov
cmp
adc
and
dec
fidivl
push
and
push
jbe
cmp
icebp
sub
xor
mov
add
xor
jmp
sub
in
and
and
mov
aaa
enter
add
mov
push
outsl
popa
mov
inc
cmc
out
add
fdivrs
add
add
push
hlt
lret
jb
mov
pop
push
insb
pushf
xor
dec
sub
das
inc
inc
pop
xor
or
adc
lcall
xor
out
rcll
pop
jecxz
rol
bnd
xchg
rcl
cmpsb
test
ret
dec
fnstcw
jb
loopne
mov
mov
add
std
xchg
pop
pop
and
int3
lea
scas
lret
sbb
std
cmpsb
fmuls
mov
aam
push
das
insl
incl
daa
or
fsts
sub
shrl
jo
lret
xchg
repnz
xor
xchg
and
and
iret
movsb
pop
cmp
loopne
xor
lret
push
fs
ret
ljmp
jne
fldenv
fadds
loope
lcall
jle
inc
xchg
iret
sub
fcoml
mov
cld
fadds
ret
mov
xor
push
pop
pop
roll
int3
sbb
lret
pop
into
push
or
rcrl
mov
rcrl
mov
orl
mov
adcb
addr16
mov
out
add
std
mov
push
imul
adcl
or
test
sub
pop
add
dec
inc
cmp
add
xchg
stc
sub
lahf
cmc
iret
pop
pop
popf
sub
das
lret
aas
adc
in
add
mov
and
push
push
out
in
outsl
sub
add
repz
pop
stc
dec
out
outsl
xchg
call
mov
mov
and
int3
xchg
xchg
push
fiaddl
js
les
rcr
aas
xchg
push
lock
mov
cmp
adc
orb
lcall
cld
je
and
mov
push
dec
data16
xor
outsl
and
inc
rcrb
mov
jmp
xchg
hlt
push
clc
jp
or
mov
cmp
icebp
popa
fs
cltd
test
in
in
ja
adc
jo
jo
mov
dec
xchg
insb
fdivrl
fmuls
and
std
jmp
add
mov
ljmp
mov
cld
jne
ficomps
in
test
shrl
cs
ret
sbb
mov
frstor
aas
mov
pusha
sbb
cs
rclb
or
cmp
jecxz
imul
shlb
pop
xchg
sbb
inc
sbb
out
loope
fsubs
cmpsl
movsb
xchg
jo
scas
out
stc
test
out
xor
mov
nop
in
mov
xchg
das
mov
aam
pushf
adc
movsl
ds
mov
ss
mov
in
dec
sub
loop
test
cmp
cmp
mov
mov
pop
add
adc
adc
sub
mov
fs
pop
jnp
mov
leave
mov
call
dec
cwtl
ss
int
js
dec
jae
jno
sub
adc
loope
push
pusha
shlb
in
fildl
dec
divb
and
jbe
push
stc
mov
sbb
mov
inc
mov
xor
test
adc
addr16
decb
andl
xchg
cmc
cli
in
cli
stc
cmp
push
lds
mov
sbb
xchg
sbb
loope
inc
scas
mov
jae
sub
rcrl
leave
stos
rorb
add
pop
test
jge
xor
push
in
dec
pop
subb
out
movsl
adc
pop
push
cs
dec
xchg
icebp
pop
mov
pop
insl
rclb
inc
mov
push
xor
pop
pop
jbe
jns
sub
subb
mov
or
sub
rcll
popf
xor
std
lods
sbb
mov
das
es
mov
stos
fwait
dec
jg
inc
dec
mov
push
hlt
pop
lods
mov
aas
dec
inc
sub
loopne
mov
sbb
std
mov
movsb
sahf
push
lret
fistl
imul
insl
icebp
rcll
aam
popl
add
inc
sbb
shlb
or
or
shrb
out
stos
shlb
pop
enter
adc
cmp
ljmp
jmp
inc
test
xor
or
mov
jno
pop
mov
dec
cltd
add
sub
jb
lock
aad
jnp
ja
mov
stos
cmp
or
aas
jbe
jp
jp
add
add
js
repnz
inc
fsubrl
mov
add
sbb
aaa
sub
lods
lea
push
lock
js
je
push
in
inc
fs
jp
fs
es
adc
or
adc
ja
push
lret
mulb
mov
jb
xchg
jmp
or
sub
xchg
and
js
sbb
inc
cmpsb
rorb
insl
sub
fdivl
xor
pop
daa
pop
jmp
loopw
mov
mov
sti
mov
sar
je
push
and
rclb
cmpsl
imul
ja
mov
cmp
pop
inc
sbb
sbb
aam
repz
pop
sbb
out
push
test
cli
xchg
in
adc
scas
jae
xchg
int
mov
adc
mov
xchg
adc
pop
int
mov
dec
adc
or
push
imul
pushf
dec
ffreep
int
fdivl
fisubl
cs
movsl
mov
out
mov
or
stos
xchg
repz
inc
push
test
mov
cmc
ret
sub
frstor
dec
pop
adc
sbb
lds
inc
jbe
out
ds
lahf
aas
pop
or
push
iret
fwait
xor
and
aas
inc
xchg
mov
sub
jnp
push
jae
fnstcw
adc
sbb
lock
xchg
lea
mov
cmpsb
mov
enter
mov
int
adc
sbb
sub
add
push
pop
stos
cmpsl
jbe
test
jl
clc
mov
dec
xlat
push
iret
js
pop
fstps
or
in
mov
dec
adc
adc
lods
pop
sbb
push
and
daa
call
ficoml
int3
xchg
sbb
mov
sub
xchg
cmc
pop
jle
jmp
int
and
gs
add
and
andb
iret
push
cmpsl
adc
pop
fildll
fiadds
ficoms
inc
adc
push
jo
nop
add
mov
mov
pop
bnd
push
adc
adcb
stc
enter
push
nop
cwtl
test
stos
mov
inc
jo
mov
dec
adc
mov
or
in
in
jbe
mov
push
and
jl
cmp
lock
mov
inc
jecxz
mov
cmpsb
mov
pop
fmuls
add
dec
bswap
insl
stos
je
sub
pop
xchg
clc
test
pop
mov
inc
fcompl
inc
and
bound
hlt
mov
outsl
mov
es
push
add
xchg
and
mov
adc
pop
enter
in
jg
jp
dec
push
out
jge
and
mov
xor
ds
lret
lret
insb
mov
stos
adc
sbb
and
enter
icebp
sbb
sub
dec
xorl
lods
es
arpl
in
sub
push
out
or
sahf
pop
sarb
jmp
in
mov
int
xchg
aas
inc
jecxz
fnsave
mov
mov
rep
inc
mov
dec
movb
mov
sub
jnp
jp
pushf
pop
xor
fistpl
mov
fsubr
push
push
pop
int3
xchg
mov
mov
jb
ret
mov
cmp
aas
lods
scas
jbe
pop
int3
mov
sahf
stos
xchg
ss
dec
pushf
aad
xorl
daa
loop
js
adc
rcrl
mov
cltd
dec
cmpsb
xor
and
cmp
push
jp
leave
mov
repnz
gs
out
out
mov
mov
call
in
mov
mov
and
xchg
pop
jp
adc
cmpsb
or
jp
mov
gs
stos
stc
imul
outsb
inc
lret
sbb
cmp
pop
cmp
leave
in
adc
xchg
test
dec
dec
mov
add
jp
xor
dec
outsl
es
xchg
cmc
push
js
cmp
mov
sbbb
loopne
sub
or
adc
mov
pop
add
mov
sub
loope
pop
cmpsb
ds
iret
loopne
leave
push
fstpl
in
jp
out
repz
sbb
das
lods
jmp
jns
mov
push
push
inc
mov
pop
fisttps
test
and
stc
jbe
sarb
cmpsb
mov
sub
mov
pop
out
cmp
jmp
adc
popa
imul
inc
sbb
sub
pop
mov
or
pop
inc
pop
gs
pop
jne
inc
rcrl
pusha
pop
les
fwait
xchg
iret
xchg
ret
cmp
sbb
jne
outsl
insl
lahf
mov
iret
adc
outsl
xor
jg
cmp
jne
stos
mov
decl
xor
inc
adc
aaa
out
pop
ror
mov
out
add
loope
addr16
movhps
flds
push
fs
pushf
out
xchg
scas
add
mov
jnp
sbb
enter
mov
mov
jg
sbb
fistpl
lret
and
js
mov
cwtl
pop
std
in
sub
mov
mov
add
mov
sub
and
test
cwtl
cmpsl
stos
aaa
dec
negl
jmp
cld
push
adc
pop
dec
mov
jo
add
mov
lock
cmp
xlat
cmc
adc
or
adcb
cmp
movsb
pop
fwait
jmp
rcrb
jecxz
mov
jg
std
dec
arpl
mov
sub
xchg
lds
sub
mov
js
out
mov
xchg
push
cmp
pop
stc
mov
rcl
out
stos
dec
mov
jl
lret
mov
int3
pop
jmp
adc
loop
dec
mov
cmp
stos
dec
loopne
stc
dec
and
jge
adc
push
and
outsb
add
mov
jl
fadd
call
push
add
fldenv
cmp
icebp
icebp
cld
imul
xlat
sub
out
fidivrs
xor
fdivrl
cmpsl
pop
push
shlb
xchg
dec
inc
loope
dec
cltd
shlb
imul
add
mov
adc
sub
cmpsl
movl
std
ds
leave
loop
imul
and
or
and
enter
sub
enter
iret
incl
lods
pop
ss
mov
loopne
adc
push
stos
daa
sahf
adc
arpl
adcl
dec
int
sbb
popf
sbb
std
add
xchg
in
xchg
pop
dec
and
ja
inc
rcrl
imul
and
jmp
movsl
mov
cmp
adc
add
rcrb
scas
mov
cmpsb
in
and
cld
test
push
sbb
rcrl
insl
sub
ret
clc
mov
cwtl
dec
shll
cmc
ret
int
das
outsl
jge
pop
andl
add
into
cmp
sub
rol
mov
and
mov
cmp
or
cmpsl
push
lea
aam
mov
sar
testb
dec
add
mov
push
cmp
movsl
mov
sbb
nop
jno
add
stc
imul
jne
loop
imul
adc
cs
dec
enter
leave
loope
pop
lret
repz
iret
dec
aam
mov
sbb
call
pop
xchg
xchg
call
sbb
cmpsl
rcrl
pop
xchg
pop
data16
or
test
mov
test
rolb
mov
push
mov
or
sub
pusha
xor
daa
mov
jmp
lcall
js
xor
add
ficomps
mov
add
jge
and
inc
jmp
mov
xchg
sub
sub
xchg
push
stc
and
inc
mov
and
xchg
add
cli
orl
test
xor
daa
inc
fwait
les
dec
imul
idivb
testb
fs
inc
mov
mov
xchg
xor
pop
jg
xchg
ret
mov
sub
dec
les
mov
xchg
jg
out
xor
sbb
xor
push
aad
int3
sbb
xchg
push
mov
orl
scas
pop
shlb
jle
xchg
cmc
in
js
add
mov
adc
hlt
cmp
xor
sub
sub
xor
adc
lahf
sub
push
mov
ss
xchg
and
and
jp
fnstcw
cmp
push
gs
jne
cmp
jno
subb
lret
in
or
stos
dec
mov
insb
stos
cmpb
jns
arpl
lods
insl
call
stos
xor
xor
xor
js
dec
or
push
fmull
push
add
adc
int3
pop
shlb
adc
enter
pop
data16
gs
fidivrs
mov
int3
sub
push
cwtl
push
repz
mov
adc
push
test
push
and
lcall
and
mov
loopne
addl
xor
xchg
adc
out
std
stos
scas
mov
cld
mov
rolb
sub
cmp
and
in
lahf
dec
out
insb
dec
aam
mov
lahf
scas
pop
dec
in
and
pop
fsubl
and
cmp
adc
shlb
rorl
std
clc
adc
out
xchg
repnz
testl
pop
mov
and
outsl
xchg
or
jns
cli
pop
lods
int
ja
and
pop
nop
std
xor
cmp
xor
js
or
lret
xchg
test
sub
xchg
or
and
sbb
popa
xor
mov
sub
dec
jbe
sub
sahf
and
add
data16
pusha
fiaddl
divb
pop
add
xor
loop
in
test
sbb
xor
outsl
inc
notl
xor
sbb
pop
lock
push
xor
pop
mov
test
test
shr
repz
js
adc
mov
dec
mov
cmp
adc
roll
mov
aas
out
dec
rclb
pop
lahf
mov
sbb
inc
rolb
imul
mov
mov
arpl
mov
decl
adc
pop
fwait
sbb
pop
and
inc
loope
or
daa
lcall
addr16
jb
xchg
sbb
ss
rcrb
lds
test
enter
call
dec
icebp
ja
sub
adc
scas
and
repnz
mov
movsl
fwait
das
popa
jp
pop
pop
jmp
jge
and
cmpsl
fstl
jmp
call
out
sti
das
pop
addr16
xor
shll
call
mov
pushf
add
jmp
inc
mov
cmp
push
and
jecxz
enter
mov
call
jge
push
lds
mov
iret
inc
into
syscall
inc
icebp
cmpsb
daa
addr16
cmp
push
scas
shrb
inc
icebp
sbb
sarl
push
test
adc
jno
aad
or
in
scas
mov
ja
cltd
mov
mov
adc
repz
jmp
or
shll
bound
fwait
mov
mov
insb
inc
imul
pop
cmp
stc
out
jmp
fwait
or
fcoms
sub
xor
pushf
mov
testl
stos
mov
rorb
push
jbe
push
fadds
mov
mov
sub
add
jno
mov
cmp
adc
lahf
fdivr
mov
les
call
mov
mov
std
push
mov
add
jp
jno
je
out
sbb
js
jnp
inc
sub
push
adc
push
jo
in
pop
cmp
sbbb
addr16
ror
and
sub
mov
adc
dec
ljmp
fadds
cmpb
adc
int
pop
int
mov
int
sub
aad
ret
add
jns
xchg
incb
pop
or
push
lret
test
adc
iret
jle
ret
xor
add
or
mov
fisttpl
icebp
cltd
xchg
mov
inc
pop
rolb
mov
insl
mov
mov
div
dec
push
movsl
into
sarb
jp
cmp
stos
fsubl
out
lret
push
ja
lea
aas
fwait
xor
mov
dec
jg
arpl
xchg
roll
jns
or
shl
test
andl
sahf
xor
lods
jno
dec
jae
inc
dec
mov
out
lds
es
es
stos
adc
out
stos
loope
lcall
jle
fnstsw
scas
cltd
fmull
xor
mov
sub
add
test
in
stos
ljmp
xchg
pop
lds
das
rorl
sbb
aad
jl
jl
es
jle
push
in
cmp
sub
stc
sub
sbb
mov
fidivs
xor
adc
cwtl
mov
bound
push
popa
shll
lods
outsb
out
lods
xchg
lock
xor
js
push
jmp
push
xchg
in
or
xchg
jmp
inc
stos
xor
add
sbb
in
fdivrl
in
dec
sbb
pshufw
sbb
imul
in
mov
dec
push
not
cltd
fs
push
lret
popa
das
and
shrl
push
setae
mov
pusha
cmp
es
push
mov
mov
aam
aas
dec
inc
test
dec
in
mov
sub
xor
cli
add
pop
dec
dec
and
stc
and
mov
aam
stc
adc
jb
pop
test
insb
sarl
mov
into
and
lcall
xorl
fsubp
jmpw
jno
jle
pop
test
inc
xlat
or
mov
jmp
cli
push
xor
and
dec
leave
inc
das
aad
in
mov
iret
push
xor
sub
mov
ret
mov
dec
insb
jae
or
popa
dec
cs
test
bound
shl
call
mov
lds
lds
mov
nop
cmpsl
test
orl
push
push
sbb
mov
xor
aad
scas
xchg
jbe
nop
lret
xor
lods
adc
aas
xchg
inc
arpl
cmpsb
xlat
dec
sarl
dec
jecxz
orb
adc
push
cmp
adc
in
cmp
in
xor
xchg
cmp
xchg
pusha
mov
call
repz
andb
lds
stos
mov
int
mov
push
sub
inc
stc
rolb
jbe
push
mov
ds
and
sti
cs
cmp
inc
jp
mov
jle
insb
jge
hlt
xor
pop
jl
fistl
mov
pop
popf
enter
lcall
adc
mov
push
xor
xchg
gs
aam
xchg
ret
and
or
call
jp
pop
fiadds
into
pop
mov
pop
push
xchg
data16
jl
mov
pop
stc
cmp
incb
movsb
scas
push
xor
mov
out
cmp
jo
sbb
test
mov
add
jmp
dec
fwait
loopne
xor
outsl
jb
add
adc
or
das
lcall
jbe
inc
and
ja
cmpsl
dec
xor
icebp
fcomp
aaa
arpl
add
inc
aad
jns
std
adc
sub
nop
xorl
outsl
test
and
in
and
mov
dec
cmpsl
out
loope
js
ja
adc
fcmove
jge
push
in
mov
sahf
sbb
negb
mov
int
mov
fnstcw
test
adc
aaa
inc
xchg
mov
sub
dec
or
repnz
cs
inc
inc
in
jp
sbb
jno
mov
clc
add
sub
inc
jge
ljmp
lea
in
cmp
mov
jbe
adc
push
out
out
pop
push
dec
aad
adc
add
fistpl
int3
xor
jb
out
pop
push
stc
in
cmp
aad
pusha
daa
mov
andb
xor
aas
xchg
cwtl
jl
sbb
cmc
ljmp
mov
cmp
mov
push
lods
cmp
incb
insl
movsl
test
sti
add
das
sub
add
xchg
and
ret
aaa
xor
test
rolb
push
loope
inc
sub
jb
push
xor
push
add
fldt
shlb
pop
sahf
rclb
lods
pop
mov
roll
mov
mov
lods
fsubrp
sbb
add
and
int3
cld
movsb
jb
push
cmpsb
xchg
test
adc
mov
lcall
loop
lret
fwait
add
sbb
mov
fsubp
ja
cmp
outsb
inc
mov
xchg
ret
jmp
hlt
mov
mov
fldt
lahf
jg
cmpsb
cwtl
push
outsl
pop
test
in
or
je
add
fwait
in
push
je
mov
loopne
sub
dec
inc
and
jp
in
or
rol
sub
sbb
push
add
cmp
or
mov
mov
jl
dec
lcall
push
dec
rcl
xchg
testl
ss
pusha
jecxz,pn
cwtl
sahf
in
adc
mov
cmpl
add
lret
push
mov
call
inc
cmp
add
mov
mov
add
std
test
pop
xor
roll
mov
ret
bound
lods
dec
add
and
mov
dec
fcmovbe
loope
jmp
jnp
dec
notl
into
jp
xchg
out
loopne
xor
enter
cli
xchg
sub
pop
ljmp
push
add
adc
push
stc
jecxz
repnz
sahf
out
out
in
ror
orl
test
push
cwtl
adc
push
ljmp
in
push
sub
add
out
mov
mov
push
lgs
rclb
pop
mov
inc
std
adc
out
adc
add
fwait
push
ret
imul
cmp
outsb
pop
push
mov
mov
cmp
scas
mov
pop
outsb
fisubl
xchg
jnp
out
test
inc
test
adc
mov
sub
dec
sub
jo
js
sbb
adc
adc
insl
lcall
mov
xchg
jecxz
fs
push
xchg
add
repz
lcall
pop
data16
push
fisttpll
lea
cmp
jns
push
nop
into
sub
ret
pop
into
xlat
mov
mov
adc
and
ja
push
and
inc
cld
mov
mov
stos
jb
mov
cmpsb
xchg
icebp
mov
adc
add
sbb
repnz
inc
xchg
mov
sbb
push
lcall
push
push
into
push
mov
jns
jl
sbb
ja
pop
sbb
add
and
mov
or
xor
stos
scas
arpl
mov
mov
negl
scas
mov
arpl
mov
out
and
mov
jle
js
xchg
adc
xor
jae
mov
inc
xchg
daa
mov
je
adc
push
inc
sub
out
out
test
fisubl
mov
movsl
cs
aas
ss
aaa
in
push
pop
fildl
data16
je
bound
mov
jge
jno,pt
cmp
call
jge
xchg
add
cmc
push
sbb
cmpl
sbb
mov
sub
mov
out
jo
scas
mov
and
add
jnp
mov
jb
mov
pusha
aad
lret
jg
mov
cmp
cmc
dec
dec
adc
jecxz
outsl
outsb
aad
pusha
mov
pop
push
push
inc
int3
jmp
test
lret
shl
and
jnp
dec
jge
test
jno
and
repnz
bound
sarb
mov
ret
movsl
jge
inc
into
xchg
nop
jns
mov
lea
cs
jmp
lahf
adc
rcrl
xor
adcb
pop
inc
movsb
push
push
sbb
or
adc
dec
das
sarl
add
lds
call
cld
jecxz
cs
icebp
roll
mov
hlt
or
jg
iret
in
jns
leave
pop
fldt
pop
add
inc
xor
cwtl
push
mov
mov
pop
cli
jbe
call
jge
xor
push
pop
mov
imul
cmpsb
add
lods
in
inc
mov
or
sub
cmpsl
test
aam
fildl
dec
xchg
inc
dec
pop
push
jg
xor
lods
sbb
sbb
test
pop
sarl
xor
xchg
mov
push
rorl
imul
ficoms
push
gs
loope
imul
mov
test
lock
out
cmp
push
and
out
add
out
loope
in
ret
mulb
neg
ss
das
add
mov
enter
cmp
subl
jge
add
mov
push
out
mov
popf
xlat
mov
pusha
sahf
push
jae
inc
mov
daa
mov
sbb
adc
mov
insb
stos
fisubs
gs
imul
xor
pop
cmpl
xchg
bound
hlt
lods
pop
decl
in
adc
aam
cltd
pop
push
sbb
ret
outsb
stc
xchg
clc
pushf
xchg
xchg
inc
in
jl
out
fistps
hlt
mov
lods
movsb
push
loop
sub
xor
gs
das
adc
icebp
fidivs
mov
movsb
jge
add
xor
inc
cmp
or
mov
cmpb
dec
xchg
sti
punpckldq
jg
mov
daa
pop
loope
cmp
cmc
cmpsl
push
mov
in
jle
inc
xor
adc
push
mov
js
out
pop
xor
mov
ret
aad
push
inc
lods
or
shr
shl
push
popl
push
cmp
pop
pop
int3
out
sbb
neg
aad
incl
lahf
xor
test
mov
ja
jmp
jle
inc
lret
loopne,pt
imul
into
outsl
and
or
mov
popf
lcall
pop
movsl
pusha
ja
mov
stc
push
out
jg
ret
lahf
add
in
push
shlb
lret
and
shl
push
xchg
push
or
aas
mov
int
mov
int3
inc
les
stos
xor
popf
push
aad
add
xor
ss
and
inc
jg
adc
mov
and
mov
pushw
xor
loopne
jge
pop
icebp
aas
jo
dec
test
stos
adc
sub
sbb
mov
aad
imul
cmpsl
jmp
fcomi
and
rcr
and
inc
push
jecxz
xor
dec
cmp
fs
insb
add
andb
inc
ficoml
decb
enter
adc
icebp
adc
jmp
push
cmp
fadd
insl
mov
cmc
add
push
jno
jp
insb
cmp
notb
cmp
ljmp
fs
add
roll
jns
mov
icebp
lea
sbb
sub
repz
test
dec
jb
jmp
lret
jb
jmp
jne
push
cmp
jle
sbb
mov
mov
mov
pop
int3
je
cltd
sbb
add
inc
add
push
jo
cmp
or
xchg
loopne
packuswb
push
add
xchg
ja
rcll
cmpsb
int3
dec
sti
insb
sbb
sbb
push
filds
inc
sub
lds
int3
rcrl
xor
lahf
sahf
mov
xor
aad
jne
jg
push
push
dec
out
dec
xlat
and
fisttpl
jnp
cmp
int
test
lahf
push
lret
test
decb
insl
sbb
push
stos
bswap
jecxz
movsb
pminsw
ret
sarl
fdivrl
es
cwtl
stc
out
adc
jl
jl
notb
shll
imul
fsubrs
adc
add
or
xor
adcl
push
and
js
shl
mov
adc
lock
sti
xor
sti
lret
jnp
rcll
mov
sub
push
jno
daa
loopne
xchg
dec
pop
incl
mov
inc
fwait
sub
out
jmp
in
sub
test
and
push
test
out
shl
dec
jp
jl
inc
pop
pop
or
repz
shrb
mov
pop
jmp
nop
jno
add
shrb
lods
cmp
cmp
and
shlb
xorl
lods
sbb
adcl
push
loopne
clc
loop
loope
outsb
push
add
mov
mov
adc
mov
cmc
jae,pt
mov
fimull
sbb
test
mov
jg
insb
cbtw
jmp
lret
cmp
xor
add
imul
adcl
jge
cmp
xor
aad
sub
dec
xor
fsubs
sbb
ljmp
mov
aas
mov
pushf
out
int3
and
inc
cld
push
jmp
std
lcall
inc
dec
cmp
lret
xchg
and
pop
jb
mov
lcall
subl
push
xchg
or
outsl
icebp
ret
sbb
or
inc
out
iret
push
sub
and
in
shrl
pop
jmp
sbb
pop
sbb
sub
dec
mov
leave
xchg
inc
xchg
inc
lods
sti
das
xor
lds
aas
mov
mov
mov
add
xchg
mov
div
lock
pop
push
je,pt
out
shll
or
daa
ret
rorb
mov
das
ror
mov
test
subl
jge
push
fstpt
cmpsl
test
or
int3
mov
das
hlt
sbb
inc
sarl
leave
inc
xchg
sbb
cld
mov
pop
dec
jmp
cmp
xchg
cli
xchg
test
jg
cmpsb
adc
jb
test
pop
out
into
dec
mov
xchg
stos
cmc
clc
cs
and
dec
movsb
out
dec
cmc
sub
mov
xor
xchg
les
popa
mov
imull
jnp
dec
add
fs
and
ret
sbb
loope
enter
enter
sbb
shrb
mov
xor
xor
adc
ds
mov
pop
pushf
fstpl
call
loope
outsb
sbb
fst
cltd
jmp
xor
imul
inc
cmpsl
stc
mov
sahf
jbe
loope
jb
ficoml
add
push
cld
cmpsb
cli
arpl
outsb
sti
push
or
sub
sbb
ja
lret
andl
out
xchg
mov
jle
fimuls
cmp
fiadds
and
jnp
mov
push
dec
sarl
cmp
jo
mov
xor
sbb
test
add
sahf
sti
and
mov
fadds
jne
les
lea
xchg
nop
xor
add
jns
jo
lea
xor
adc
cmp
lds
or
mov
sub
adc
lods
fwait
inc
pop
pop
jmp
jmp
fcomp
pop
in
and
cli
sub
loop
mov
or
sub
int
jmp
inc
push
insl
sub
outsb
popa
test
out
icebp
pop
in
scas
jl
dec
int
xchg
shrl
mov
pop
mov
mov
bound
and
popa
pop
aam
ror
sub
jae
pusha
jb
fst
out
dec
mov
or
pop
add
and
jb
mov
outsl
xchg
sbb
or
jnp
jnp
in
fsts
and
push
jg
clc
daa
xchg
adc
negb
lock
adc
cli
test
mov
mov
adc
lea
clc
leave
scas
sti
mov
cmp
jge
enter
ja
sub
adc
das
sub
dec
xchg
adc
push
loope
inc
jbe
and
dec
push
rclb
nop
test
sbb
inc
xlat
popa
addr16
cmp
jle
and
loope
pusha
outsl
pop
cmpsl
pop
popf
insl
mov
fwait
xchg
in
xchg
pop
arpl
clc
mov
negb
and
jo
mov
fisttps
insl
pop
loope
jge
mov
hlt
add
add
imul
xor
cmpl
mov
je
fisttps
call
les
lods
pusha
dec
loopne
rcrb
jae
cmp
fucomip
xchg
mov
cmp
popa
in
xor
dec
or
neg
es
movsb
mov
inc
test
pop
insl
or
adc
or
out
pop
das
std
inc
mov
nop
cmp
std
mov
leave
rcr
or
loop
mov
or
push
xor
add
mov
dec
or
aad
jb
pop
adc
mov
pusha
jb
mov
adc
addr16
dec
xchg
pop
out
dec
fwait
or
mov
cmp
ljmp
push
dec
gs
mov
sbb
pop
imul
sbb
fldcw
inc
scas
pushf
adc
sub
jl
pop
fwait
dec
enter
cli
insl
cmp
pop
imulb
mov
sub
lods
popa
push
loop
lret
mov
xorb
mov
push
inc
xchg
sub
cmp
lds
cmpl
icebp
push
arpl
jnp
lret
cmp
pop
push
sbb
adc
push
ja
and
aaa
adc
lea
cmpsb
das
fdivr
xlat
dec
lret
xor
idivb
fadd
push
repnz
cs
clc
push
andb
movl
jecxz
test
xor
xchg
add
js
inc
pop
mov
add
pop
jl
jp
dec
mov
lret
mov
fdivrs
pcmpeqb
push
bound
jecxz
or
gs
xor
sbb
movsb
test
cmp
leave
rcrl
xchg
dec
pusha
lahf
push
inc
jae
enter
add
dec
test
std
cmpsb
outsb
cmc
jp
mov
leave
cmp
mov
sub
xchg
aaa
mov
cmc
xchg
cs
ret
loope
mov
mov
xchg
inc
adc
xor
inc
cmp
ss
mov
adc
rclb
shll
shr
dec
sbb
loop
jbe
dec
cmpsl
and
or
pusha
outsb
cltd
imul
push
inc
rorb
btc
fsubs
dec
and
addr16
aad
hlt
mov
pop
push
push
mov
es
out
add
mov
cmp
rclb
mov
ror
lcall
stos
jb
fisubrl
ret
xchg
jecxz
in
pop
inc
add
mov
mov
cwtl
jae
gs
sub
or
xor
xchg
aam
repz
adc
bound
xor
shlb
mov
inc
movb
pop
fldln2
rolb
stc
add
andb
nop
ss
and
or
popf
iret
movlps
pop
nop
jmp
add
dec
ss
jle
jmp
addr16
stc
icebp
scas
mov
cmp
ljmp
adc
mov
xchg
jge
into
aad
ss
repnz
jno
cmpsb
sbb
xadd
sub
rorl
in
or
shr
icebp
or
add
mov
rorb
pop
scas
fdivrs
dec
xor
xor
pop
aam
mov
test
pop
fdivs
ja
popa
jmp
add
pop
hlt
jae
jge
sbb
loop,pt
push
scas
bound
pop
icebp
mov
arpl
mov
sbb
loopne
int3
dec
roll
loopne
ja
test
rcl
bound
fbld
sub
dec
jg
sub
data16
push
cli
arpl
sbb
mov
lods
mov
jg
cld
add
dec
jle
jge
cli
xchg
in
inc
jge
inc
adc
cmp
jmp
mov
adc
cltd
shl
imul
aam
loop
xchg
sub
push
mov
cmp
test
filds
fisttps
add
push
lds
xor
repnz
pop
sbb
cmp
mov
jns
out
lea
sbb
and
js
out
je
dec
jo
lds
ret
in
dec
inc
iret
popf
sarb
jmp
lock
lds
fnstsw
inc
fcmovbe
mov
and
outsl
sbb
dec
pop
popa
xlat
xchg
jmp
cli
imul
shrl
jmp
mov
dec
testl
es
fprem
lret
rolb
push
adc
fxtract
jae
jno
xorb
jmp
push
mov
xor
pop
mov
mov
out
pusha
or
cmp
cltd
xchg
repz
test
sti
dec
mov
sbb
out
lds
cmp
sbb
aas
test
std
adc
scas
pusha
test
fimuls
xor
repz
pop
es
cmp
shlb
xchg
and
mov
nop
test
sbb
push
clc
mov
cmp
push
movsl
mov
je
pop
imul
mov
pop
lods
jne
inc
lea
loope
adc
xchg
pop
inc
dec
movsb
call
out
bound
fldt
jecxz
inc
outsl
lea
stc
cli
jecxz
mov
cmc
test
sbb
jns
test
jp
jb
jnp
arpl
popa
inc
pop
mov
lock
jg
mov
addr16
aam
in
rcrl
mov
pop
jo
frstor
jle
inc
xchg
pushf
push
push
out
cltd
mov
dec
sbb
xor
stc
mov
jae
test
jnp
lods
mov
or
in
addl
xlat
mov
stos
and
sahf
jge
and
cli
mov
or
or
movsl
sahf
movsl
lds
rolb
jb
ljmp
stc
lock
cmp
push
aaa
sbb
js
call
out
mov
xchg
aad
negb
push
popa
sub
mov
popa
clc
and
rorb
ss
aam
sub
push
shl
leave
iret
aas
pop
shl
xchg
sub
leave
xlat
pop
negb
xor
mov
pop
pop
lods
outsl
mov
push
bnd
xchg
xchg
or
mov
cwtl
push
or
jno
adc
not
xor
popa
cmp
pop
jne
dec
rol
lcall
mov
pop
mov
inc
jno
xchg
jg
arpl
lods
mov
mov
fisttps
outsl
in
pushf
aas
adc
cmp
ss
mov
icebp
rorl
lcall
jge
jmp
push
cmp
daa
lret
fstpt
scas
pop
push
dec
push
sub
daa
add
jg
xchg
jl
daa
pushf
cmp
mov
rcrb
mov
pop
decb
arpl
addb
and
lods
loope
fldcw
enter
les
push
scas
hlt
cmpsb
inc
in
imul
movsl
pop
sahf
sub
stos
push
mov
or
jecxz
add
rcr
test
push
jo,pn
sar
subl
call
lretw
jmp
call
mov
push
jae
jecxz
push
mov
add
cmc
and
or
mov
inc
cld
adc
cmpsb
xor
imul
mov
cmp
cmp
mov
push
jl
ret
in
cmp
daa
ljmp
cmpsl
pop
xor
flds
sbb
int
orl
pop
dec
test
xor
pop
lods
sub
mov
mov
or
ret
loop
daa
or
xchg
imul
jne
cmp
sbb
loope
adc
lret
ss
movsl
xchg
lahf
das
insl
add
inc
xor
sbb
test
sub
cmp
daa
mov
mov
cmp
mov
add
ja,pn
adc
out
push
das
sub
jecxz
mov
xchg
sub
or
add
pop
mov
movsl
out
jbe
pop
xchg
adc
xlat
sbb
sbb
test
pop
je
daa
jne
adc
lock
lock
sbb
cltd
jbe
outsb
mov
shr
jne
mov
nop
mov
add
ja
dec
xchg
sub
sbb
add
daa
push
xor
cmpb
fisubl
xlat
dec
and
mov
je
dec
leave
flds
into
insb
xor
out
jecxz
movsb
ret
adc
xor
mov
in
mov
inc
ret
rorl
ret
pop
movsb
arpl
or
rolb
xor
andb
adc
mov
add
leave
dec
mov
inc
aam
and
mov
and
negb
add
dec
mov
bswap
pop
inc
lea
mov
adc
daa
sbb
fistl
add
ret
push
mov
pop
inc
shlb
out
sbb
mov
add
mov
dec
add
imul
mov
es
aam
inc
xchg
pushf
rclb
aam
loopne
fistpll
test
or
xor
adc
xchg
test
and
shrl
adc
dec
fstpl
jbe
jg
scas
dec
mov
pop
iret
sub
negb
out
sub
adc
cmp
and
fstpl
jmp
dec
mov
jno
std
aam
aad
dec
adc
js
push
jnp
loopne
mov
out
mov
subl
lods
add
xchg
dec
cs
int
cltd
add
sub
or
je
fdivrs
movsb
pop
test
leave
mov
pop
and
xorl
xchg
add
test
push
dec
sahf
or
jnp
dec
outsl
xor
or
or
sub
lahf
testl
add
out
inc
ret
push
add
sub
aad
out
test
outsl
push
cmp
ficoml
or
sbb
inc
insl
in
adc
enter
sbb
dec
lds
pop
and
cmp
adc
push
adc
in
add
sbb
mov
cmp
insb
ret
sbb
clc
out
mov
mov
or
sbb
mov
jl
xor
arpl
fwait
push
push
lods
xor
sarl
fdivs
and
push
mov
mov
int
push
out
addr16
cmpsl
sbb
scas
mov
jmp
mov
mov
mov
imul
stc
mov
rcrb
in
mov
enter
sub
mov
fnstsw
jl
out
add
pop
loop
arpl
and
andl
test
call
xor
and
adc
mov
test
sub
enter
dec
pop
add
in
fstl
movsb
popf
and
inc
ret
test
ja
in
jmp
cs
aas
xchg
fucomp
adc
cmp
add
fistpll
stos
sbb
push
jg
mov
cmp
mov
jnp
movsb
sub
cmp
inc
sub
push
push
mov
je
jge
mov
out
and
and
pop
xlat
add
push
div
dec
test
or
jne
cmp
sub
push
dec
sub
push
enter
cmp
mov
dec
pop
into
cmpsb
xor
mov
bound
imul
adc
pop
sbb
sbb
mov
test
jecxz
cs
adc
mov
iret
rcll
mov
sbb
push
icebp
es
dec
ficoms
fsubl
pop
add
jno
fcmovnb
mov
push
lret
orl
aad
int3
dec
adc
jne
roll
out
jp,pt
test
loope
pop
adc
jp
into
mov
jl
enter
in
jnp
push
inc
jmp
dec
or
jns
lahf
es
dec
xchg
ret
repnz
pop
shll
repz
movsl
jno
bound
mov
out
fwait
mov
inc
rcr
outsl
rol
push
add
loope
out
xchg
lcall
or
and
loopne
or
jp
xor
lea
test
dec
inc
mov
cmpsl
push
jne
fcmovnbe
add
aam
or
push
xor
mov
lret
push
push
dec
sbb
pop
fwait
das
mov
and
lds
lods
mov
fwait
sub
mov
mov
cld
out
je
aam
loopne
in
inc
push
pop
and
lds
sub
cwtl
and
add
test
xchg
inc
sbb
add
shrl
pop
inc
movups
push
lds
xchg
mov
or
add
mov
push
lods
push
or
in
xchg
adc
dec
clc
mov
lahf
iret
fstpt
mov
in
sarl
jmp
and
lcall
inc
mov
mov
cmp
mov
mov
jge
loop
pop
sub
xchg
dec
clc
dec
pop
or
ljmp
fbld
fcmovu
stos
pop
mov
mov
cwtl
negl
inc
sti
mov
cs
and
shrb
dec
icebp
sarb
repnz
xor
scas
mov
jecxz
fildl
adc
xlat
cli
int
xorl
mov
push
sub
shlb
sbb
add
cmp
add
out
insb
outsl
cmp
mov
movsl
sbb
loopne
lods
out
cmp
push
addr16
mov
xlat
fidivl
mov
jg
inc
idivb
or
xor
mov
xchg
dec
sub
rcrl
push
lahf
sti
ja
dec
mov
inc
bound
lds
or
cs
or
jo
pop
outsb
out
enter
les
popf
adc
rcll
xor
pop
sahf
and
insb
outsb
pop
sbb
test
scas
push
jp
mov
jne
loope
int
jae
xor
or
orb
mov
push
cmc
xor
rcrl
das
sub
enter
dec
adc
movsl
sahf
inc
icebp
cli
out
add
xchg
movsb
ret
xor
test
xchg
xchg
sub
sub
sbb
into
sbb
pop
mov
jle
jae
jg
dec
mov
js
dec
mov
cmpb
loope
loopne
imul
inc
and
int3
fsubrl
jle
dec
push
mov
fs
pop
or
movsl
sub
pop
aas
xor
xor
icebp
enter
pop
fsin
icebp
sub
int
or
adc
mov
push
adc
call
mov
cmp
jl
jle
inc
stos
repnz
fsubs
mov
outsb
mov
pop
fcoml
push
lret
push
jo
pop
and
repnz
popa
pop
mov
sub
mov
push
xchg
mov
add
and
mov
ret
test
xchg
jecxz
rolb
xor
lret
adc
das
xchg
loope
jl
push
aad
or
mov
sbb
hlt
cmp
jp
loop
add
int
lds
int
xchg
mov
es
iret
iret
call
add
lret
jp
inc
mov
lcall
insl
imul
lds
jae
push
sbb
mov
mov
loop
movsl
cmpsl
enter
cmp
test
cmp
push
subb
add
jno
jne
in
and
in
rcll
push
push
pop
mov
push
lret
roll
mov
pop
test
or
aad
and
mov
out
stc
stc
insb
inc
mov
cmpsl
mov
std
mov
fidivrs
xchg
orl
push
push
repz
xlat
insl
insl
and
sub
dec
test
out
pop
out
pop
test
cltd
mov
ret
int
mov
pushl
mov
and
cwtl
dec
cmpsl
add
aam
or
xlat
push
or
and
pop
jae
sbb
push
pop
fidivrs
das
repz
xchg
repnz
in
sbb
pop
fiadds
iret
xor
dec
sti
fidivrl
cwtl
jge
in
imul
inc
adc
adc
sub
shlb
mov
mov
fsubrs
or
xchg
sub
lock
in
jne
xchg
ja
ds
add
sbb
xchg
mov
mov
xchg
jg
inc
sbb
ret
ret
cwtl
xor
insb
in
ror
fsubrp
stos
out
lds
cmpsl
sub
pop
or
bound
icebp
subb
push
rcll
xchg
xchg
ja
pop
mov
or
insl
fdivs
cmpl
adc
in
repnz
pop
jae
xchg
push
jp
mov
jnp
pop
inc
or
aam
jmp
iret
testl
jg
inc
or
fiaddl
pop
fisubs
aaa
mov
stos
and
adc
push
cmpsl
mov
xor
sbb
in
popa
rep
xchg
xor
cmp
pop
imul
push
pushl
out
lods
mov
hlt
js
into
sbb
adc
dec
mov
push
inc
and
push
mov
mov
hlt
and
in
xchg
pop
pop
out
sahf
mov
ss
repnz
pop
or
pop
in
ss
add
mov
mov
dec
fimull
ds
lret
ret
pop
imul
xchg
push
push
lret
xchg
push
in
push
aaa
movsb
idivb
lock
adc
arpl
popa
bound
jo
cwtl
and
and
xor
mov
outsl
push
mov
mov
repz
test
popa
test
popa
jne
sbb
arpl
inc
push
xchg
int3
mov
and
adc
shlb
test
push
wbinvd
xchg
and
arpl
mov
pop
inc
dec
cwtl
repz
ljmp
sub
xchg
push
orl
push
cwtl
push
xchg
adc
inc
movl
jle
push
inc
cmp
or
stc
push
je
mov
popf
jnp
hlt
out
add
jns
adc
outsb
cmpsl
test
sti
loop
loope
into
ficoml
sbb
ret
sub
adc
sahf
movsl
cmp
ficomps
pop
out
lret
pushf
lds
xor
dec
mov
sahf
idivb
lea
nop
es
mov
fisubs
and
mov
or
clc
sbb
sbb
divl
jmp
out
xchg
hlt
jb
insb
sbb
nop
into
ret
lret
int
in
hlt
and
lods
or
jle
cmp
lahf
mov
add
insb
rorb
mov
movsl
mov
stos
pop
iret
mov
nop
imul
bound
dec
out
push
jle
pop
mov
in
mov
pop
adc
push
push
test
popf
rorl
xchg
nop
xor
pop
mov
addr16
cli
movsl
sub
stc
lcall
fsubrl
push
or
inc
mov
adc
sbb
sub
jns
xor
std
push
pop
mov
jo
pusha
cltd
pop
mov
int3
out
sbb
repnz
push
sub
stos
dec
stos
in
insl
lahf
iret
mov
ja
xchg
sti
cld
out
push
rcrb
gs
scas
adc
fnstenv
jmp
aam
cwtl
call
ja
and
dec
sahf
mov
pop
and
inc
loopne
into
inc
ficomps
inc
out
xchg
mov
cmc
dec
int3
outsl
add
sbb
fcmovb
lret
imul
xchg
fwait
movsb
and
hlt
fchs
push
mov
inc
lret
stc
loop
jmp
or
movb
mov
jnp,pn
jle
push
mov
icebp
cmc
test
dec
push
push
sub
sbb
and
fisttpll
sub
mov
aam
addr16
mov
lret
push
iret
and
popf
lods
ds
addb
in
pop
sub
push
adc
js
dec
push
sti
dec
jmp
cmp
in
xor
push
hlt
lods
sbbb
aam
lods
and
bound
mov
cmpsb
cwtl
cmp
fcmovu
pop
or
ja
jmp
xor
mov
mov
popf
push
or
roll
pusha
push
jmp
mov
add
cmpl
xchg
clc
xorb
mov
pop
or
fwait
mov
js
outsb
push
lea
inc
imulb
or
push
and
jne
xor
in
int3
imul
push
mov
pushf
test
nop
sub
mov
mov
aas
push
mov
or
inc
daa
and
xchg
pop
push
scas
arpl
das
test
test
repz
in
or
sub
pop
stc
nop
pop
cs
sahf
or
pop
sub
sbb
mov
inc
movsb
lea
mov
loope
lea
inc
aam
and
mov
pop
and
addr16
add
cmpsl
xor
xor
push
rol
pop
test
cltd
and
imul
dec
mov
imul
sbb
jo
test
pop
inc
mov
and
mov
jno
in
mov
jge
enter
sub
mov
ss
xchg
rclb
add
jl
xchg
adc
inc
rcl
lea
mov
movsb
push
mov
popa
mov
pop
or
dec
inc
in
cmp
insb
mov
stc
jno
push
adc
add
ror
cmpsb
pop
sub
push
adc
into
aaa
cli
push
push
imul
sub
pop
jmp
mov
sub
or
icebp
test
arpl
sub
cmp
pop
mov
sbb
xor
push
jg
dec
add
test
mov
fdivrl
inc
mov
xchg
jo
rcll
and
pusha
gs
xor
leave
sub
xchg
std
mov
rorb
cwtl
ljmp
or
fldt
mov
ds
inc
mov
ds
pop
inc
push
fwait
daa
xor
xchg
xchg
outsb
inc
sti
enter
pop
movsl
xchg
scas
sti
jmp
aaa
negb
lds
add
std
xor
lods
test
inc
xlat
jmp
addl
test
xor
dec
mov
dec
push
adc
adc
mov
pop
leave
stos
xchg
jnp
jecxz
lret
mov
push
pop
vminsd
cmp
inc
sti
aas
push
pusha
popa
add
inc
add
fcoms
add
add
inc
cmp
pop
cs
aaa
dec
jne
popa
jge
add
jl
test
test
lods
lods
sbb
xchg
int
leave
mov
enter
insl
shl
xor
insl
or
das
jno
cmp
iret
les
push
imul
push
xor
fadds
xor
vcmppd
push
jns
in
mov
push
and
xchg
mov
lods
test
ret
jbe
pop
dec
jp
lods
shll
jecxz
outsb
pop
inc
xchg
xor
lcall
jno
push
imul
lea
xchg
lahf
sahf
mov
pop
sbbb
sbb
or
mov
sbb
jp
aas
fucom
cmp
cli
and
jmp
cmp
mov
mov
aam
lods
stos
sub
xchg
iret
rolb
sub
daa
sub
or
cmp
jne
push
mov
xchg
adc
xor
inc
pop
adc
inc
jle
movsl
push
push
mov
mov
leave
pop
xor
cmp
outsb
je
xchg
jns
imul
call
pop
dec
jmp
pushw
repz
pop
mov
es
aam
cmp
add
push
inc
cld
add
or
ljmp
inc
sbb
jge
pop
sbb
push
insb
push
nop
and
xchg
mov
roll
lea
push
mov
fs
std
mov
testb
xchg
xchg
gs
jecxz
adcb
xchg
mov
repz
daa
fcoms
inc
xchg
and
inc
js
xchg
ds
sub
xchg
and
loop
xchg
push
mov
fcmovnu
out
pop
jge
mov
dec
cld
cltd
xchg
mov
pop
dec
sub
repnz
and
insl
xchg
clc
adc
mov
jb
leave
fbstp
pop
jmp
jo
popl
dec
inc
ret
fs
and
pushf
jle
adc
jp
leave
stos
and
insb
cwtl
cmp
mov
pushf
rcll
jg
and
push
or
aaa
stc
inc
dec
xchg
and
aaa
push
pop
in
lretw
cmpsl
and
pushf
into
testl
pusha
or
inc
push
stc
cltd
and
cmp
or
dec
cmp
adc
mov
repz
and
loop
shll
outsb
adc
and
lahf
stos
adc
pop
add
xor
jns
js
pushf
or
xchg
mov
cmp
or
int
sub
js
mov
sbb
ds
aas
sub
in
inc
inc
repnz
pop
cmpsl
xchg
or
rcl
ss
hlt
xchg
push
cmp
inc
lcall
mov
repnz
lods
jbe
and
lret
xchg
shll
mov
dec
adc
bound
and
ja
test
into
inc
faddl
insl
out
xchg
xchg
xchg
and
pop
jo
jns
lcall
add
xor
out
leave
pop
inc
xchg
outsl
xor
jmp
xchg
rcrb
xchg
add
imul
lds
ret
ss
pop
add
stos
je
ffree
je
cmp
je
rclb
dec
es
outsl
lods
daa
pop
scas
xchg
fucomp
pop
jbe
cli
bnd
push
test
inc
mov
or
divb
ret
data16
sub
jno
sub
and
addl
jnp
ret
cmp
out
push
into
jmp
xchg
bound
sahf
shll
outsb
ret
stc
xchg
arpl
or
mov
sub
and
addb
xor
pop
xchg
call
loopne
push
ret
fwait
cmp
adc
sbb
loop
out
stos
jns
xor
fld
outsb
lock
shlb
out
push
and
aaa
lods
ljmp
addb
rcrl
hlt
jmp
and
mov
cmp
pop
repz
sub
mov
or
mov
imul
das
test
mulb
jb
roll
je
sub
sahf
jbe
pop
xchg
fsub
outsb
mov
outsl
jg
add
jge
ret
pop
js
rcrl
leave
sbb
std
xchg
movsb
popf
jmp
mov
jecxz
es
jecxz
jno
insl
jmp
ret
test
mov
mov
sahf
jo
mov
mov
mov
clc
mov
push
aam
lods
lods
mov
imulb
pop
loop
movsl
cmp
loope
in
jge
sbb
add
jns
xor
jno
rcl
ds
push
and
push
dec
mov
das
mov
xchg
xor
pop
cmp
fcoms
push
xor
push
pop
pop
mov
mov
adc
mov
mov
xlat
inc
scas
jo
insb
dec
mov
aad
scas
add
ss
notl
in
mov
cmpsb
mov
dec
add
xor
in
push
stos
fsubrl
fidivs
in
dec
push
das
cmpsl
mov
jecxz
or
fwait
out
inc
pushf
imul
pop
dec
or
test
mov
or
repz
mov
mov
idivb
fwait
cmp
mov
jae
repnz
int3
out
and
rcl
enter
dec
clc
mov
mov
in
mov
nop
inc
dec
cmpsl
cmp
icebp
shlb
jno
test
popf
xor
es
dec
scas
je
xor
and
ljmp
or
adc
jne
adc
in
jecxz
lods
push
push
mov
cmp
pop
push
and
inc
sbb
shll
and
jns
xchg
scas
pop
imul
xchg
dec
loopne
xor
lods
ret
repnz
pop
sub
mov
fldenv
inc
pop
test
adc
push
test
icebp
ds
inc
ljmp
inc
cmp
sti
mov
lcall
lret
xlat
aam
stos
int3
mov
pop
daa
test
arpl
sbb
dec
pop
test
sub
add
je
xor
fists
mov
sbb
push
jge
dec
add
testl
mov
outsb
dec
push
push
jns
leave
repnz
inc
xor
sbbb
inc
cmpsl
fisttpl
push
dec
add
jmp
shll
icebp
cli
insl
pop
inc
sub
sub
jb
cmpsl
lret
xor
push
cmovne
or
jle
cmc
movsl
cmp
ffree
int3
mov
mov
push
cs
pop
mov
xor
idivb
jb
les
xor
clc
loope
mov
mov
or
adc
test
jae
mov
mov
fwait
cmp
jl
sbb
cmpl
fidivrs
mov
aad
jnp
adc
inc
xor
test
jmp
xchg
dec
jmp
in
stos
adc
sbb
popa
pusha
adcl
sbb
jno
lahf
pop
imull
in
jmp
pop
inc
movsl
fstps
cmp
ljmp
inc
xor
jge
stos
sbb
dec
pushf
ljmp
je
sbb
out
xlat
pop
insl
xor
rcll
cmp
daa
xor
mov
aam
adc
stc
ficomps
inc
cmpsb
sti
add
je
xchg
lods
lods
pop
xor
inc
pusha
icebp
and
cmp
push
mov
push
data16
js
sub
cmp
sti
cltd
add
dec
adc
push
inc
das
pop
ffree
sub
sbb
cmpsb
dec
call
mov
mov
lret
and
shld
inc
loope
mov
pop
cmp
adc
or
xchg
push
shll
fs
ja
jno
xor
push
clc
lret
repnz
ss
out
dec
mov
inc
sub
mov
test
and
mov
jb
sahf
aam
divb
jbe
jl
or
pop
clc
popa
add
add
cmpsl
jnp
xchg
mov
ss
xchg
jle
push
cmp
and
pop
std
add
sbbl
stos
mov
in
ds
insl
filds
movb
jns
adc
cmp
je
test
mov
lahf
cld
out
stos
es
push
inc
pop
movsb
xchg
insb
imulb
mov
inc
dec
inc
sbb
xlat
test
bound
lret
jecxz
in
int3
in
call
cmp
dec
lahf
fldl
xchg
xor
out
mov
mov
and
jmp
je
mov
mov
sar
es
cmpsl
add
and
adc
rorl
xlat
add
adc
cmc
out
xchg
or
lock
rorb
and
filds
clc
data16
mov
add
repnz
popa
scas
dec
aaa
mov
pusha
pop
gs
into
add
sbb
sahf
mov
pop
loope
dec
sub
das
sub
jno
xorl
aaa
add
cwtl
cli
test
stos
jle
lods
push
and
cmp
jl
push
imul
adc
loopne
or
lods
arpl
sarb
xchg
sub
cmp
push
mov
inc
leave
ljmp
or
xchg
pop
xor
add
or
outsb
add
mov
mov
into
jb
loopne
sti
dec
mov
jbe
push
jno
and
cli
jnp
pusha
mov
pop
aad
popa
icebp
xchg
test
push
ljmp
movsb
cmp
push
repz
inc
cli
int
jp
jg
or
push
stos
rcrb
mov
or
icebp
cmp
movsl
cmp
add
cmc
mov
addr16
inc
lcall
enter
and
sbb
loope
xor
jge
into
mov
or
mov
pop
stos
inc
icebp
int3
mov
cmpsl
aam
jno
jns
pusha
pop
xchg
mov
xlat
sub
insb
xchg
adc
inc
jmp
xchg
adc
mov
daa
xlat
pop
push
jecxz
ffree
ret
pop
icebp
mov
into
add
xchg
and
std
inc
mov
jge
or
push
das
dec
sub
mov
stos
sbb
jg
sbb
inc
push
xchg
adc
sbb
pop
ds
shlb
in
stos
arpl
insb
add
call
cmp
cltd
std
in
dec
xchg
pop
adc
sbb
cmpsl
mov
pop
xchg
outsl
repz
lods
xor
push
or
or
dec
push
dec
add
lret
loop
test
dec
adc
xor
cmp
mov
mov
orl
mov
mov
imull
mov
inc
pop
inc
test
repz
outsb
call
inc
repz
pop
ljmp
xor
std
fsubs
adc
ljmp
mov
jg
pop
push
aam
rcrl
out
imul
aad
or
fs
loopne
scas
pop
xchg
xor
shrb
adc
jb
mov
inc
or
fsubl
push
scas
cs
rol
jge
push
movsl
test
fwait
mov
or
test
ss
ja
or
and
xadd
dec
cwtl
push
ds
fisttps
int3
in
xor
cmp
fisttps
jns
mov
enter
cmp
mov
cmpsb
pushf
fcmovb
sub
fwait
sub
mov
pushf
in
push
adc
insl
pop
pop
fisubrl
dec
aaa
in
jns
lret
test
clc
xchg
adc
mov
pushf
pop
and
les
add
test
jbe
cs
xchg
push
mov
xchg
test
loop
xor
mov
test
inc
inc
lahf
mov
out
fisubrl
sub
mov
mov
xorl
push
stos
ja
out
push
imul
mov
pop
fdivs
sti
jp
scas
and
es
into
mov
jne
hlt
enter
xor
xchg
fcoml
aas
dec
cmpsb
jno
into
pop
sub
adc
mov
rol
loopne
je
mov
outsb
sub
mov
add
push
inc
in
xchg
shlb
push
in
sub
loope
add
jl
pusha
jge
adc
popf
xchg
stos
add
and
aad
pop
cmp
sub
aam
js
push
ficoml
xlat
add
lar
xorb
cmp
je
pop
nop
test
push
stc
add
xchg
mov
sub
insb
add
xchg
jne
dec
sbb
popf
push
sub
test
adc
mov
mov
outsb
imul
xchg
ljmp
inc
jp
outsb
fldt
pop
xorb
jne
popa
dec
shll
mov
push
addr16
std
aad
test
or
mov
xlat
jecxz
mov
scas
mov
lahf
xor
data16
push
outsb
je
test
push
xchg
pushl
sbb
mov
pop
cmp
stos
pop
in
add
insb
je
jns
adc
nop
mov
gs
xchg
sbb
aas
sbb
call
sbb
inc
adc
out
fwait
and
fidivs
decl
pushf
xchg
iret
sub
stos
imul
push
inc
and
imul
out
scas
enter
sbb
add
ret
xchg
pop
sbb
or
inc
mov
jle
idiv
leave
or
dec
aam
add
mov
fisttpll
push
je
stos
outsl
mov
dec
stos
into
loope
ret
mov
pushf
xor
jecxz
and
mov
ja
and
leave
mov
std
push
push
sub
scas
inc
jae
sbb
add
push
pop
stos
fcompl
mov
outsb
xchg
xlat
add
rorb
clc
xor
xchg
pop
loopne
mov
pop
jns
xor
stc
movsb
cwtl
pop
push
mov
sbb
addr16
lahf
mov
sarl
mov
subl
pop
adc
cmpl
ja
test
inc
inc
jae
xchg
leave
adc
or
int
or
mov
mov
jns
aas
cli
loope
jae
mov
mov
add
add
and
popa
dec
repnz
jmp
imul
popf
mov
xor
cwtl
adcb
imul
inc
or
mov
mov
sti
xchg
inc
cld
idiv
daa
xor
iret
mov
movb
sub
cs
subl
icebp
pop
mov
test
rcrb
clc
cwtl
add
pop
and
test
xchg
out
lea
jecxz
jle
jl
jb
mov
test
jp
push
xlat
mov
push
int3
jge
sub
outsb
iret
inc
dec
xor
xor
in
int3
adc
in
insl
inc
scas
andb
imul
xchg
add
sbb
pusha
sbb
fs
push
dec
fwait
pop
ret
mov
test
and
sub
mov
xor
dec
ds
cmc
sbb
iret
repz
dec
cmp
pop
jne
pushf
push
shl
add
inc
cmp
rclb
push
stos
push
icebp
and
fsubs
mov
xor
out
mov
pop
xor
out
js
enter
pop
push
dec
cs
loope
jns
lahf
xor
jge
pop
cltd
testb
pop
es
mov
cmp
scas
and
mov
orl
enter
idivb
mov
lcall
lcall
xlat
mov
inc
movsl
popa
daa
mov
add
leave
cmp
insb
imul
aaa
adc
mov
jg
mov
xor
mov
icebp
inc
enter
das
mov
in
js
scas
ja
stc
enter
cmpsl
xor
int
jmp
pop
rorb
push
mov
ds
and
aaa
dec
inc
int3
pop
mov
mov
fwait
push
mov
outsb
push
sub
outsl
pusha
xor
xchg
ja
add
bound
aam
jge
gs
dec
mov
dec
pop
mov
jno
lahf
dec
pop
daa
in
imul
insl
sbb
aam
insb
ds
outsb
xchg
or
mov
repz
pop
or
clc
test
scas
mov
hlt
pop
mov
xor
push
xchg
mov
daa
cmp
fimull
sbb
sub
popf
mov
hlt
inc
pop
sbb
add
lret
xor
inc
testl
cmc
mov
mov
jno
sub
mov
jge
ljmp
shll
sub
scas
dec
fbstp
rol
sti
mov
sbb
loop
aaa
inc
xor
ret
adc
test
sbb
sbb
popf
pop
jge
jne
in
mov
mov
mov
arpl
xlat
xchg
mov
cmpsb
push
pop
movsb
cli
mov
hlt
push
xor
dec
ljmp
push
xchg
insl
push
inc
loop
mov
push
insb
sub
in
mov
outsl
pop
outsl
shrb
leave
fidivrs
ss
inc
lods
pop
adcl
pop
push
fadds
loop
hlt
fwait
repnz
jae
jo
mov
xchg
jae
rcrb
lods
stc
sbb
jae
cltd
or
xchg
lahf
scas
pop
cmc
xor
cltd
icebp
mov
scas
mov
aaa
add
cmp
fs
mov
repz
inc
and
pop
mov
cmp
dec
gs
pop
fstpt
xor
ja
push
push
je
pushf
aas
inc
aad
sub
and
stc
xor
xchg
jl
sbb
ljmp
jnp
sbb
xchg
mov
leave
stc
xchg
mov
xor
dec
mov
aam
pushf
leave
insb
add
push
sub
dec
inc
loop
xchg
jecxz
sar
push
inc
cltd
pushf
xchg
mov
lods
dec
ljmp
aas
push
add
sti
add
out
fisttpll
iret
addr16
adc
sub
or
lahf
xchg
mov
scas
mov
push
xchg
and
outsb
adc
mov
mov
scas
lret
sbb
insl
iret
jge,pn
data16
call
or
pop
repz
outsb
jmp
dec
lods
adc
push
pop
cmp
ss
out
push
jge
cmp
gs
orl
aam
gs
mov
push
and
movsb
ds
out
mov
addr16
stos
mov
cld
cltd
movsl
int
push
push
iret
and
dec
adc
lds
in
addb
dec
sbb
inc
pop
daa
orl
mov
inc
jo
and
mov
pop
outsl
push
dec
pop
dec
xor
fsts
ljmp
mov
cli
mov
inc
fld
imul
leave
leave
imul
mov
fidivs
inc
push
andb
mov
mov
and
pop
stc
push
cmc
mov
mov
cs
jecxz
insl
jnp
xchg
loopne
frstor
incl
movsl
std
xchg
pop
xor
xchg
inc
inc
lcall
or
test
faddl
cli
cmp
dec
ficompl
add
imul
mov
xchg
dec
out
lds
cmp
pop
out
imul
call
cli
aam
or
imul
dec
cmc
dec
adcb
stos
inc
fnstenv
dec
fstpt
fmull
adc
mov
mov
pop
repnz
xor
in
jo
rclb
push
stc
xor
mov
xchg
cmp
js
xchg
aad
sub
xor
pop
mov
and
stos
lret
pushf
cmc
hlt
lds
push
mov
pop
imul
jg
repz
xor
sub
inc
imul
mov
lret
pop
push
push
jg
fiaddl
push
pop
int
out
or
lret
xor
and
popa
dec
jg
xchg
dec
cmp
out
and
xor
dec
jle
sbb
arpl
in
outsl
add
jge
jo
mov
or
or
popf
and
inc
pop
mov
jmp
push
inc
call
loop
mov
addr16
cmc
sarl
mov
jl
dec
arpl
push
mov
cmp
andb
bound
cli
aas
lock
sahf
dec
out
lea
dec
ret
pop
push
inc
lcall
xchg
rcrb
icebp
cmp
add
and
pushf
xchg
or
xchg
loope
or
int3
add
shlb
mov
mov
mov
cmc
ja
mov
mov
sub
jae
cld
scas
inc
mov
or
shrb
jb
add
xor
sar
fisubrs
aad
pop
orb
aaa
push
loope
and
cli
popa
sar
imul
sbb
add
sbb
and
fnstcw
repz
mov
dec
xlat
mov
push
pop
lods
pop
pop
sarb
xchg
dec
ret
shrl
sbb
and
bound
mov
bound
ja
in
hlt
les
dec
lods
mov
xchg
xor
fistpl
adc
std
out
jnp
imul
pop
jne
xlat
inc
imul
mov
aas
mov
enter
pop
and
dec
sbb
jae
fsubrs
xchg
ss
bound
dec
fildll
popl
dec
mov
add
mov
and
sbb
test
out
aam
jmp
push
inc
imul
cltd
pop
push
inc
lds
mov
dec
stc
xchg
push
test
cmp
xchg
jmp
gs
jl
and
shr
jbe
outsl
dec
xor
clc
inc
out
cmp
dec
into
test
jae
iret
xor
mov
in
and
xor
out
loopne
cmp
push
xor
jnp
rol
xor
mov
xlat
outsl
fbld
test
xchg
lds
inc
pop
das
push
cmp
pop
sti
rolb
mov
int
scas
push
std
test
pop
fists
xor
cmp
imul
add
xor
mov
stos
xor
sbb
fwait
add
fptan
inc
or
cmp
push
addr16
incl
sbb
cs
cltd
pop
decl
dec
jle
mov
addr16
cmc
lock
shll
mov
test
out
pop
adc
mov
pusha
pextrw
xchg
cmpsl
add
xor
scas
jecxz
mov
cwtl
push
mov
push
or
cwtl
insb
shll
sahf
stos
out
sub
popf
mov
adc
pop
and
clc
in
push
mov
lcall
push
cs
xchg
stos
negl
movsl
push
loop
in
inc
out
aas
sub
jp
xchg
push
ja
movsb
xor
adc
rorb
loope
test
lods
and
repz
xchg
mov
push
mov
sbb
dec
leave
jmp
lods
or
mov
jl
stos
adc
fcoml
mov
xchg
jo
cmp
and
fadds
mov
xchg
mov
xchg
mov
lret
sarb
add
pop
jnp
xchg
or
and
shll
sbb
dec
enter
hlt
aas
mov
out
dec
pop
cmp
jl
xor
lods
mov
das
mov
adc
adc
aad
push
or
xor
clc
add
mov
sahf
rcrl
and
sbb
dec
inc
cmp
cmp
mov
rcll
xchg
xchg
dec
push
cmp
test
adc
fucomp
ja
jnp
and
ret
std
popa
add
lea
aaa
jge
testb
in
or
inc
daa
xor
stos
add
xchg
dec
std
loop
or
out
test
test
push
movsl
mov
dec
mov
sbb
and
push
bound
sarb
jge
jge
int
push
cmp
cs
and
and
jno
ficoms
sbb
pop
outsb
sub
push
xor
into
pushf
lret
aam
mulb
mov
add
or
cmp
mov
push
push
lods
mov
ljmp
cmp
mov
mov
std
loopne
pop
add
dec
push
sbb
sbb
test
testl
divl
insb
daa
mov
mov
pop
xor
mov
cmpsl
or
out
popl
out
mov
xor
mov
in
sahf
sbb
sahf
mov
gs
and
aas
pop
loopne
mov
int3
fisttpl
pop
and
push
cs
dec
js
or
inc
jno
add
cmp
cmp
xor
jecxz
add
cmp
mov
sbb
addr16
or
lods
pop
xchg
push
push
mov
incb
jmp
sub
cmpl
adc
pushf
lock
repnz
les
test
dec
or
adc
ret
hlt
mov
negl
mov
or
push
iret
and
push
repnz
shlb
and
inc
test
xchg
loopne
mov
in
imull
push
cli
fcmovu
mov
mov
mov
repnz
sub
jo
stc
jmp
arpl
imul
inc
or
call
xchg
jno
stos
jl
fcmovbe
andb
xlat
cld
push
inc
cmpsl
xchg
ds
test
fmull
fisttpll
jno
pusha
and
push
mov
jge
jle
out
and
popa
sbb
xor
fcomip
push
and
clc
push
dec
clc
aad
es
xor
pop
xchg
xlat
mov
cs
rorl
pop
loope
inc
iret
fnstenv
outsl
mov
dec
sbb
and
notb
loopne
add
jae
pop
scas
lds
loopne
aaa
or
aas
movsb
cmp
cmpsl
into
inc
andb
add
adc
mov
jle
inc
mov
cmpb
ds
pop
loop
faddp
cmp
addr16
outsb
xchg
adc
push
gs
xchg
lahf
fbld
pop
dec
xor
inc
sbb
adc
mov
ss
xor
dec
aad
iret
sub
stc
stos
icebp
hlt
cmpsb
dec
das
sbb
popf
std
push
rcrb
outsb
ljmp
scas
and
inc
in
adc
fists
lods
dec
add
inc
je
arpl
stc
leave
fcompl
ret
push
xor
ljmp
inc
stos
int
ret
divl
je
push
jp
cwtl
imul
add
push
sub
popa
and
in
cmp
int3
mov
aaa
faddp
adc
and
cs
pop
rcl
mov
add
shrl
dec
inc
or
out
addr16
ror
cmp
jo
inc
jns
inc
pop
shlb
or
cmpsl
insb
scas
mov
dec
aam
or
loopne
mov
imul
stos
mov
jae
pop
jle
std
lods
pop
sahf
add
mov
rcrb
movsb
outsb
ds
jg
xchg
rcrb
clc
leave
xchg
mov
jno
cmpsl
lcall
into
sub
mov
mov
les
sbb
mov
stos
sahf
pop
sub
lods
pop
cmp
and
push
jge
outsl
dec
jle
in
movsl
push
or
pop
sbb
pop
out
adc
mov
fsubl
imul
repz
sbb
leave
enter
pop
dec
loop
icebp
outsl
lock
aad
lahf
lock
in
mov
clc
in
subb
addr16
lret
inc
sbb
test
aad
in
jae
ss
jecxz
fadd
pop
lods
fdivrl
hlt
push
shrl
outsb
and
fidivrs
sub
xchg
jg
nop
xchg
xlat
leave
das
bound
xor
sbb
stos
inc
xchg
orb
ret
ja
lock
fldl
sub
ljmp
adc
dec
push
sti
shll
loop
cmp
popf
js
notl
in
adc
inc
add
dec
pop
xor
pop
test
jg
icebp
outsb
jnp
fsub
or
jmp
ret
in
jecxz
xchg
hlt
cmp
push
mov
or
test
les
push
xlat
jecxz
out
sub
dec
fsubr
sbb
jnp
xorl
scas
push
leave
inc
pushf
or
cmp
push
pop
pop
sub
lock
sbb
cwtl
jg,pn
sahf
sbb
push
sub
inc
xor
mov
lods
call
ss
scas
jae
cmp
out
cld
stos
xor
xchg
xor
dec
fcomip
sahf
lahf
jne
xchg
or
xor
sbb
xor
insb
add
bound
jp
cmp
push
leave
out
inc
xchg
cmp
loope
shlb
jmp
fs
std
nop
mov
out
lret
sub
invd
loopne
outsb
mov
and
adc
xor
fsub
and
adc
lods
jg
jne
pop
jg
mov
lcall
jbe
call
fcoml
ficompl
mov
mov
push
adc
insb
cmc
dec
fdivrl
sbb
test
pop
add
ficomps
mov
dec
clc
loopne
aam
jmp
aam
mov
das
fisubl
gs
jne
inc
sub
loop
pop
subl
pop
and
sbb
movsb
mov
adc
lret
unpckhps
sti
add
push
adc
or
and
jecxz
xor
pusha
cmp
das
fcompl
test
addl
jno
daa
cmp
cmovbe
dec
and
or
dec
add
sbb
mov
int
ds
shll
mov
clc
pop
mov
mov
fimuls
sub
jnp
test
icebp
mov
aad
je
es
iret
or
fsubrs
ret
mov
xor
cmp
lcall
push
push
int
lock
les
ljmp
in
cmpsl
adc
add
nop
fidivl
cmp
jo
sub
fnop
sbb
jle
popf
ja
and
js
hlt
movsb
cli
pusha
cli
mov
movb
inc
aad
cmp
adc
daa
fstpt
dec
push
mov
fldenv
adcb
cmpsb
add
pop
stc
xchg
das
scas
lret
je
push
and
mov
in
fisttpll
xor
mov
lea
aad
add
mov
fs
enter
test
or
xorb
adc
xlat
imulb
inc
inc
mov
lods
jge
push
ficoms
jnp
push
fwait
dec
lock
cmp
test
cmpsl
and
mov
jle
mov
icebp
data16
enter
pop
pop
mov
pop
push
push
mov
fs
cmpsb
push
jno
xor
or
sarb
mov
xchg
in
dec
mov
jecxz
inc
repnz
imul
add
inc
push
fdivrl
cmpsl
sbb
enter
sbbb
dec
mov
popa
mov
push
negb
int3
xchg
xor
cmp
into
xor
push
and
stos
fnstcw
dec
movsb
or
test
mov
out
xlat
movsl
adc
adc
and
add
decb
jns
and
ds
mov
aam
test
aad
sub
dec
scas
outsl
push
mov
ja
cmp
add
popf
adc
mov
int3
decb
add
inc
sbb
sti
sbb
std
ljmp
mov
push
enter
shl
dec
inc
add
popf
add
push
sub
push
stc
fadds
push
mov
mov
cli
jno
repz
cmp
jb
insb
repz
outsb
std
xor
je
push
sub
pushf
dec
decb
iret
scas
loopne
cmp
shll
sbb
mov
mov
push
mul
in
fwait
cld
inc
in
addr16
xchg
adc
add
mov
ret
push
push
imul
jnp
xchg
movsl
lea
sub
fsubs
jo
cmp
add
mov
sub
rorl
mov
enter
mov
cmc
test
lret
sti
jns
mov
xor
or
xchg
pop
sarb
sbbb
push
add
sub
pusha
call
jl
mov
ds
sbb
push
sahf
mov
or
xor
xchg
xor
sub
scas
sub
cmc
jne
pop
push
cmp
mov
mov
mov
addr16
std
xchg
sbb
mov
pop
jmp
add
pusha
mov
leave
sub
inc
dec
shlb
sbb
xor
fwait
les
push
sar
pop
push
int
push
mov
outsl
push
in
jae
pop
and
mov
test
fnsave
fisttpl
cwtl
or
addr16
cmpsl
fmulp
mov
inc
mov
shrl
rclb
adc
popa
das
inc
stos
add
add
addl
xchg
mov
imul
mov
inc
add
xchg
inc
aad
inc
fwait
cmp
mov
stos
jg
lret
adcb
xor
push
out
sbb
imul
push
in
push
jno
je
lods
je
and
cmp
cmc
sbb
xor
cmc
ret
add
push
jae
xor
adc
dec
ja
subl
sarl
xchg
mov
test
fs
pop
or
xor
fsubl
fsin
inc
jl
mov
int3
pop
mov
hlt
xchg
or
das
fdivrp
xchg
lcall
jne
xor
testb
and
cld
sub
pop
jns
iret
call
jmp
clts
shr
cmp
rcr
xchg
jo
and
xchg
in
jnp
les
stos
xor
rcrb
jo
je
rep
push
stc
adcb
hlt
stc
jno
mov
and
shlb
add
xchg
xchg
pop
xor
mov
lret
pushf
adc
push
inc
aam
mov
jmp
jp
fsts
xor
xchg
cmp
in
jne
lock
pusha
aas
lahf
pop
inc
pop
push
rcrl
jmp
lret
add
sub
xchg
cli
imul
adc
loope
jmp
fidivrs
adc
cmpsl
mov
enter
and
stos
adc
adc
push
push
int
sub
inc
les
sarb
inc
and
adc
inc
ret
mov
cmp
stc
pop
sbb
jb
mov
sbb
xor
out
shld
loope
add
cmp
pop
cld
loopne
ja
sub
movsl
aas
adc
dec
pop
mov
in
stos
jmp
movsl
xor
mov
aam
pushf
mov
push
imul
fsubrs
lods
test
sbb
jbe
cmp
mov
inc
jns
sub
inc
xlat
sbb
push
mov
cwtl
dec
inc
xchg
test
or
inc
add
cmc
push
mov
fwait
push
movsb
adcb
push
les
sub
inc
xlat
jae
or
ret
sarb
dec
arpl
xchg
shrl
ss
leave
mov
dec
mov
outsl
int
mov
xor
lock
add
xchg
sahf
add
arpl
enter
cmp
scas
inc
fs
fmul
xor
sbb
rcrl
es
rcrl
pop
daa
jno
xchg
or
inc
push
das
jmp
ljmp
and
shr
jge
rorl
push
ds
lahf
mov
rcrl
rcll
cld
or
sbb
inc
push
into
sarl
dec
mov
push
testl
popf
aas
sub
sarl
jle
xchg
xor
jnp
xchg
push
xchg
pop
mov
cmp
lcall
push
jl
je
je
out
sub
sbb
outsl
jge
cli
xchg
inc
insb
add
scas
test
filds
adc
dec
lds
pop
cmp
sbb
mov
rorb
out
pop
repz
sbb
in
loope
push
rep
mov
xor
pop
out
outsl
mov
test
add
cmc
mov
orl
jmp
xor
movsl
push
xor
lahf
xlat
test
dec
push
dec
push
mov
adc
add
js
pop
cwtl
mov
adc
push
or
inc
cmpsb
in
daa
sbbb
jmp
and
mov
orb
adc
push
les
lods
fwait
cmp
rcl
push
jno
sub
add
in
adc
or
mov
in
pop
aaa
loopne
addr16
inc
popa
fmuls
pop
lock
cld
mov
jecxz
add
lds
fs
pushf
mov
mov
fstpl
cmp
inc
sti
inc
dec
cmp
test
xchg
sub
add
cmp
mov
ret
jle
mov
or
dec
pop
mov
nop
int3
test
mov
lods
mov
xchg
ficomps
xlat
bound
push
cmp
jae
xchg
and
mov
repnz
pusha
gs
push
push
sub
stos
idivl
sti
mov
in
fimuls
pop
pop
sub
jecxz
cld
dec
add
hlt
xor
sub
stos
add
jns
and
mov
out
sub
loope
adc
fimuls
dec
mov
imul
ljmp
adc
mov
pop
pop
xor
out
fstl
shlb
ss
test
or
mov
mov
fbstp
lea
sub
inc
aam
inc
mov
mov
xorb
out
jne
xor
mov
movsl
xor
loop
aad
clc
mov
xchg
inc
push
fdivrs
push
or
shlb
mov
repz
jle
cmp
or
gs
ror
out
push
add
jb
xlat
cld
mov
and
pop
clc
xchg
cmp
add
and
dec
add
sbb
push
cmp
call
mov
adc
data16
pop
push
loopne
pop
jge
mov
jbe
lret
scas
add
mov
test
rorb
sub
popl
inc
aam
xor
ret
jae
clc
aam
popf
adcb
mov
adc
jnp
cmp
adc
lret
push
popa
add
repz
jmp
sub
out
ds
out
pop
xchg
shll
lret
mov
mov
imul
cmc
push
test
mov
xchg
add
push
arpl
pop
cwtl
lret
shll
enter
pop
mov
fld
frstor
add
test
xlat
mov
fwait
mov
mov
or
add
pop
sbb
jle
in
mov
mov
je
dec
fstpt
fcmovnb
xor
jl
or
ret
ja
mov
ds
cwtl
add
std
cmc
mov
inc
outsl
fsts
mov
scas
cs
cmc
scas
add
mov
lcall
stc
ds
ds
xor
cs
sub
sub
cmp
loopne
nop
cmp
sbb
inc
in
mov
mov
stos
push
xor
dec
fsubrs
lock
push
adc
jmp
jae
push
test
fnstenv
jns
ja
dec
imul
testb
add
pop
pushf
and
sub
nop
int
xchg
inc
cmpl
loop
lods
insl
fcomi
dec
cmc
pop
cmp
lret
add
mov
pop
pop
jl
mov
sub
imul
push
clc
insb
aas
insl
sub
jl
pop
je
pop
pop
dec
aas
js
push
and
jp
loopne
subl
jl
inc
movsb
xchg
dec
fisubs
mov
xor
nop
sbb
adc
xlat
fsubrl
pop
or
aad
xor
jo
and
lcall
mov
dec
pop
push
and
pushl
push
inc
jmp
data16
ret
rorb
xchg
cmp
adc
cmp
push
mov
jne
fs
jle
inc
jae
fwait
adc
rcr
adc
jp
fwait
mov
mov
pop
mov
cmp
cmp
dec
or
lods
pop
inc
add
jne
sar
outsb
push
pop
adc
inc
sub
stos
das
subl
jp
not
clc
mov
aad
subl
es
call
pop
mov
ja
ficoml
dec
mov
imul
fisubrs
pop
pop
or
cmp
add
movsl
sbb
mov
insl
cmovns
jle
shl
push
xlat
lock
push
clc
mov
pushl
daa
cmp
pop
mov
ret
test
das
inc
sub
push
fldcw
out
mov
lret
cmp
inc
jae
arpl
mov
je
int
fldcw
inc
xchg
shrb
push
sbbl
inc
std
and
cmpsb
jns
scas
dec
adc
lret
adc
xor
add
idiv
sbb
rolb
pop
pop
mov
mov
cmpsb
push
imul
cwtl
mov
pop
out
clc
xchg
cmp
dec
sub
jmp
mov
pushf
push
js
and
data16
sub
loopne
sbb
test
adc
or
sub
jecxz
in
mov
ja
faddl
sub
add
sbb
outsl
fs
std
arpl
test
mov
or
lods
mov
out
aaa
push
lcall
inc
mov
mov
imul
push
notl
sub
dec
sbb
pop
pop
xchg
or
push
mov
xchg
idivl
pop
mov
jb
daa
xchg
jne
push
inc
lea
xor
cmp
int3
shll
mov
jp
sbb
add
cmp
pop
movsl
or
cs
sub
add
xor
mov
sub
dec
mov
xchg
add
and
outsb
jle
xchg
sub
mov
fisttpl
std
pop
out
or
mov
jnp
sub
jbe
push
lcall
test
cmp
pop
lea
arpl
mov
sub
mov
pop
testl
mov
cld
stos
xchg
in
fninit
lea
mov
cs
adc
pop
fisttpll
dec
inc
lcall
push
clc
adc
fs
lret
lahf
push
int3
out
or
xor
push
aad
subb
mov
xor
push
adc
push
loope
add
rolb
mov
xchg
push
adc
maskmovq
divl
stos
pop
and
mov
push
push
fiaddl
jp
mov
jp
pop
push
call
dec
sub
jo
cli
rclb
inc
inc
lahf
sub
jecxz
mov
push
mov
mov
sub
out
or
mov
xor
scas
cmp
cltd
sub
leave
add
adc
adc
ret
sbbb
xor
mov
xchg
jo
and
inc
sbb
fwait
push
mov
clc
outsl
cmpsl
xchg
or
insb
sub
fcomp
jbe
mov
shll
es
mov
cmp
jbe
dec
sub
in
nop
pop
adc
push
jno
cmp
clc
sub
xchg
xchg
xchg
mov
jle
inc
sub
sarb
movsb
pop
sbb
dec
subb
mov
adc
stos
rcr
dec
sbb
clc
push
movsl
dec
fistps
dec
in
les
data16
shr
mov
adc
test
pop
dec
mov
xchg
cmp
xlat
nop
dec
mov
clc
popf
pop
jmp
out
jno
dec
cmpsb
pop
mov
addr16
out
sub
das
out
and
test
sbb
xor
jge
push
les
xchg
adc
push
cmc
xor
aad
jl
lock
fisubrl
cmp
xchg
add
ljmp
stos
jp
mov
stos
or
out
jp
pop
pop
mov
cld
orb
xor
lcall
je
dec
sbb
add
je
rcrb
pop
cmp
movsb
addl
sbb
pop
adc
ljmp
sub
and
outsl
ja
xchg
popa
test
xor
xchg
mov
jecxz
mov
aaa
sbb
jae
jp
dec
dec
inc
pop
enter
push
mov
pop
xchg
dec
lea
stos
pop
loopne
push
jp
jge
outsl
jae
movsb
out
fmuls
cmp
cmpl
inc
adc
lods
adc
fmuls
cli
mov
in
aad
xchg
or
mov
in
popa
sbb
cmc
imul
aaa
int3
in
aas
gs
jge
daa
xchg
loope
and
test
inc
mov
fmuls
push
faddp
and
repnz
rorl
loop
in
push
push
fs
xorl
inc
cmc
mov
or
or
jg
cmp
jae
into
cli
aam
jp
lock
out
outsl
loop
js
push
imul
lcall
sar
adc
dec
jl
mov
jle
push
and
cmpsl
jnp
xchg
adc
clc
lret
adc
test
mov
pop
cltd
or
test
lcall
jae
dec
clc
data16
rclb
outsl
or
incb
out
lret
iret
mov
int
xchg
cmpsl
les
xchg
push
jmp
aas
dec
push
xor
sub
pop
mov
mov
jne
ja
cmp
je
push
xchg
lods
movsb
call
pop
xchg
cs
rclb
jge
notb
rcrl
movsl
push
outsl
fldcw
mov
sbb
xchg
cld
fadds
fcomps
cmpsb
mov
push
pop
pop
lock
orb
pushf
xor
jg
cmp
cmp
sar
xor
movsl
adc
mov
jno
or
loop
jnp
test
xlat
ret
add
leave
xchg
cmp
popf
adc
addb
cmpsb
cs
ficoms
pop
dec
sbb
fmull
das
jbe
loopne
hlt
out
mov
movsl
and
sub
inc
add
repnz
inc
and
sarl
fstpt
xor
sbb
mov
jno
xchg
mov
xor
popa
cltd
lds
push
repnz
lret
aas
xchg
andl
ss
les
or
add
lds
adc
fwait
add
cmp
mov
push
push
mov
jb
push
cld
lcall
scas
ds
mov
arpl
or
scas
stos
arpl
gs
imul
cltd
in
sbb
insl
mov
mov
cmc
jge
arpl
nop
xchg
add
hlt
shlb
subb
es
push
sbb
adc
pop
sbb
push
pop
loop
adc
push
push
adc
push
jmp
inc
jge
push
popa
cmp
iret
popa
mov
cmp
pop
xor
outsb
iret
jbe
scas
jle
sbb
enter
jp
lret
mov
inc
fmull
push
loopne
das
adc
jns
and
lret
mov
mov
mov
mov
mov
mov
out
aam
loopne
mov
xchg
push
mov
stos
push
cwtl
push
insb
xchg
outsl
pop
xchg
jecxz
sbb
icebp
pop
js
jp
inc
pushf
xchg
xchg
fcmove
add
notl
push
xchg
fistl
mov
mov
sbb
lods
cli
push
xchg
mov
mov
jo
mov
add
stos
fs
xchg
xor
sub
sub
js
xchg
insl
cmp
es
arpl
subb
or
push
nop
lds
mov
shlb
adc
push
leave
out
mov
mov
aas
sbb
adc
jp
push
jns
jbe
push
cli
push
out
xchg
push
mov
xor
dec
sbb
fisubl
xor
sub
sub
jg
and
push
ret
or
push
negl
mov
out
sbb
xor
lods
lods
xchg
inc
arpl
cmc
cld
push
push
sbb
lods
add
pop
xchg
in
xchg
scas
stos
mov
pusha
test
mov
iret
cltd
cs
adc
pop
jge
fdivrl
dec
cmc
or
scas
sarl
jo
dec
and
push
outsl
xlat
mov
xchg
sub
and
divps
sub
xchg
outsl
sahf
hlt
nop
and
js
xchg
sub
mov
inc
pusha
inc
inc
push
xor
popa
mov
in
push
movsb
fmuls
cmp
push
mov
inc
cmpsl
mov
push
push
push
adc
fsts
sub
or
popf
xchg
mov
mov
push
xchg
icebp
fsubs
dec
leave
push
xor
xor
adc
out
shlb
fildl
add
mov
jmp
adc
or
inc
stc
mov
and
or
movl
scas
cmp
fnstcw
adc
test
dec
pop
jns
mov
and
inc
adc
int3
mov
sbb
push
out
or
inc
data16
popf
mov
jge
ret
stc
adc
je
stos
shlb
fcmovnu
cld
std
dec
sbb
cmc
mov
or
cmpb
jnp
jle
mov
dec
and
push
and
xor
jo
mov
inc
cwtl
sbb
aaa
cwtl
mov
stos
mov
repz
mov
cmp
push
xor
sbb
push
sub
fdivrs
negb
scas
push
movsb
pushf
sub
jno
mov
rclb
xor
xor
dec
insl
cmp
movsl
mov
cld
and
xor
sahf
in
shrb
dec
push
sub
and
mov
subb
imul
hlt
xchg
add
sbb
iret
popf
fildl
adc
pop
popa
mov
xorl
pop
jmp
mov
push
loopne
mov
push
pop
or
call
das
test
rcr
stos
shlb
cmp
sbb
cltd
sbb
mov
dec
enter
sub
lret
imul
lret
nop
movsb
dec
cld
xor
add
jne
and
mov
add
xchg
pusha
and
sbb
je
jge
mov
pop
push
out
out
test
push
lret
mov
ljmp
push
jge
adc
shll
mov
add
aas
leave
rorl
xchg
scas
ja
mov
addb
mov
cmp
lcall
enter
dec
fcmovb
mov
rolb
add
xchg
imul
dec
clc
push
lods
adc
mov
adc
out
fcmovu
dec
and
add
push
decb
cmpb
je
and
mov
mov
add
xchg
push
outsl
mov
rolb
fwait
xor
cld
add
fmulp
pop
ljmp
pop
cmpsb
inc
and
jle
ds
sbb
jg
and
cli
pushf
jmp
pushf
jl
push
cmpsb
std
add
fbstp
xor
cmp
mov
mov
or
sub
in
cmp
ss
jmp
cmp
gs
mov
mov
loop
or
in
aad
data16
jbe
xchg
idiv
decl
rclb
aam
dec
mov
cltd
out
mov
push
push
xor
cmp
jge
cmpsb
inc
fnsave
or
cmpsl
pop
imul
jecxz
mov
pop
jl,pn
add
jl
inc
enter
imul
mul
push
leave
clc
ret
in
mov
insb
icebp
repz
mov
lods
jae
mov
dec
addr16
adcl
das
sti
out
xchg
into
mov
out
mov
test
ret
add
sub
inc
imull
jns
or
sti
xchg
scas
insb
mov
jns
jnp,pn
xlat
xor
lods
ficompl
jecxz,pt
mov
mov
ret
sahf
sbb
sub
add
repnz
sbb
hlt
dec
jg
add
fiaddl
mov
jnp
test
pusha
xchg
clc
ss
dec
fstpt
jmp
mov
mov
mov
mov
ret
btc
fwait
cmp
and
mov
gs
ljmp
and
out
ds
xor
inc
sub
push
in
fisubs
ficompl
int3
xor
or
stos
arpl
or
add
fs
dec
sti
in
xorl
cld
test
mov
std
idivb
jne
push
int
adc
popf
js
and
sub
sti
pop
mov
jmp
cli
xchg
jno
lret
inc
push
aam
jns
int
or
nop
sbb
in
cs
incb
add
mov
cmp
into
or
mov
icebp
mov
sbb
loope
or
xchg
sbb
fcoml
jbe
das
stc
jmp
mov
and
mov
repnz
in
scas
shrl
out
in
test
stos
mov
in
adc
jp
inc
loop
or
push
mov
mov
push
andb
fsubs
or
push
push
js
sub
or
data16
call
insl
scas
add
jmp
xorb
cmp
lret
pop
pop
cltd
and
fdivrl
pop
in
int
dec
into
out
js
jmp
sbb
aaa
ss
ret
mov
mov
test
add
push
popaw
mull
cmp
aam
jle
sar
mov
fwait
test
loopne
sub
sub
idivl
xor
cmp
daa
sbb
ss
dec
push
add
out
sub
rorb
lret
push
pop
pusha
adc
pop
or
aad
sbb
in
lahf
stc
insl
push
adc
mov
or
fcom
bnd
std
rclb
mov
test
and
daa
dec
pop
stos
adc
fistps
xchg
xor
pop
xor
clc
dec
icebp
sub
inc
xor
aad
arpl
adc
mov
jbe
cmp
cmp
pop
icebp
inc
lods
js
rcll
add
fbstp
sbb
mov
mov
and
aaa
mov
adc
ss
shlb
add
iret
inc
adc
dec
neg
mov
popf
lds
pop
jb
popa
fiadds
cli
fildll
cmpsl
nop
out
jp
loop
xchg
and
sub
xchg
jle
adc
int3
ja
dec
dec
add
adc
ds
popf
repz
mov
inc
aas
and
iret
scas
dec
adc
sbb
mov
jns
out
mov
add
jp
mov
xor
rcrl
add
testb
hlt
or
push
imul
dec
adc
xchg
push
aam
popa
sub
and
jmp
push
sub
repnz
jmp
mov
mov
inc
clc
ljmp
test
mov
mov
pop
jae
push
jnp
clc
pop
push
leave
test
in
das
ds
test
sti
cwtl
pop
mov
hlt
ds
pop
mov
in
incb
or
mov
rclb
ss
adc
mov
inc
and
mov
push
loopne
in
mov
int3
pop
dec
dec
mov
and
popa
mov
xchg
ljmp
adc
dec
mov
jbe
dec
aam
test
sub
inc
xchg
dec
not
aad
jmp
or
dec
lahf
mov
icebp
inc
sub
add
jecxz
sbb
xlat
je
sub
lcall
pop
int
fimull
push
inc
xchg
in
jnp
cmpsb
push
cmp
xor
fwait
imul
sub
mov
scas
or
push
mov
and
imul
push
mov
std
push
stc
repnz
pop
jg
ljmp
lahf
pop
xor
scas
xlat
dec
sahf
ret
xor
or
sub
xlat
xor
stc
cmc
int3
pop
xchg
mov
ret
aad
add
push
in
pop
outsl
int3
sub
push
xchg
inc
mov
jl
testl
negb
xchg
jbe
pop
push
aam
stos
push
inc
sbb
cmc
push
mov
xchg
mov
xchg
fisubrl
pop
aad
shlb
xchg
xchg
cmp
imul
mov
in
cli
mov
shrl
notrack
xchg
pushf
sub
ret
add
ljmp
shlb
or
popf
sbb
mov
in
push
xor
negb
xchg
jae
lcall
inc
xchg
loope
sub
into
xchg
inc
cmpsl
repnz
imul
out
cmc
mov
mov
sbb
add
addr16
xchg
imul
ja
mov
ficomps
aam
adc
dec
or
xlat
dec
int3
notb
lret
cmpsb
and
popf
pop
stc
and
cmp
int
aam
fnstsw
mov
pop
rorb
ljmp
pop
dec
sub
and
lret
mov
adc
loope
pop
dec
mov
ds
subb
jp
lock
ret
mov
push
fnsave
or
lods
push
fwait
pop
jmp
clc
xchg
fiaddl
or
jnp
push
cmp
cmp
stos
addr16
rcll
mov
fldcw
sahf
fsubrp
push
inc
add
xchg
xor
popf
sbb
sub
aaa
or
adc
jae
push
scas
and
lods
loope
push
adc
bound
jae
xchg
rdtsc
lahf
mov
mov
bound
enter
or
rcll
es
inc
push
into
inc
mov
aam
pop
dec
rep
sti
xchg
cld
bound
xchg
leave
mov
pop
int
fistpll
dec
ret
mov
push
out
fcoms
lahf
fsubl
push
pop
insl
push
loope
testb
dec
or
hlt
dec
push
and
mov
mov
push
imul
je
fimull
cli
shll
xor
insb
mov
or
fisttpll
mov
cmovno
stc
movsl
mov
and
cli
jle
out
xchg
inc
pop
mov
pop
jb
lret
mov
pop
add
repnz
es
mov
mov
inc
push
mov
repz
lret
inc
outsb
aaa
jns
insb
lods
popa
mov
xlat
adc
inc
lds
rol
rol
testl
sbb
out
adc
adc
rolb
mov
and
add
cmp
xchg
pop
icebp
or
xchg
das
jb
in
fs
popa
out
lock
mov
mov
in
mov
jbe
push
add
cli
push
fldcw
mov
fucom
mov
fmul
xchg
sbb
jecxz
arpl
sbb
aaa
sbb
add
popa
fisubrs
mov
stc
or
scas
imulb
xor
in
jo
jbe
cmp
sub
andl
or
jg
push
aam
cwtl
insl
sub
jne
pop
push
sub
lcall
lcall
stos
test
mul
xchg
js
pop
dec
mov
inc
popf
sub
inc
lcall
adc
cs
repz
xchg
jmp
sub
cs
fcmovb
mov
out
int3
andb
push
and
push
push
ret
je
pusha
sbbb
pushf
push
push
xchg
or
xchg
das
movsb
xchg
cmp
push
shr
out
push
fcmovnb
pop
mull
mov
jb
call
jo
aad
mov
dec
js
mov
adc
or
jge
outsl
fs
cmp
scas
cwtl
shlb
cmc
xorl
rclb
pop
jno
fucom
test
xchg
movsl
lods
sbb
in
popa
xchg
outsb
aam
or
push
scas
pop
packssdw
and
das
dec
data16
popf
enter
shrl
int3
push
pop
test
sbb
in
enter
inc
lcall
mov
jno
imul
out
out
xchg
mov
cs
div
pop
xchg
ja
pop
out
mov
jo
inc
xchg
xchg
lods
shr
je
adc
push
mov
adc
push
in
out
pop
imul
in
add
insl
insb
imul
fwait
sub
test
dec
push
test
dec
sbb
test
cmp
movhps
jnp
loope
xlat
jbe
sarl
in
pop
and
in
fildll
cmpsb
es
mov
pop
mov
pop
pop
mov
jg
fcoml
in
mov
enter
mov
jp
xchg
xchg
lea
xchg
repz
push
or
pop
insb
xchg
sahf
mov
ffreep
es
xor
or
aaa
sub
mov
clc
cmp
xchg
fs
clc
imul
add
repz
adc
mov
lcall
loopne
out
inc
movsl
mov
xor
push
aam
sub
movsb
sti
jle
in
mov
sbb
cmp
jge
push
cmpsl
push
pop
xchg
mov
addl
xchg
push
aas
mov
lahf
int3
int3
fcmovb
sub
cmp
lods
loop
push
push
push
xor
pusha
popa
imul
cmp
repnz
lods
sbb
popa
xchg
and
xchg
outsl
ss
or
test
pop
popa
dec
add
notb
popa
rorl
sbbl
int3
dec
lds
int
scas
bnd
sbb
push
xchg
pop
aas
adc
jp
nop
xchg
or
add
xor
bound
in
ficoml
mov
cmp
xlat
fnstenv
les
lahf
loop
call
in
and
fcompl
pop
mov
repnz
xchg
jg
and
scas
mov
pushf
cmp
mov
push
loopne
push
inc
cmp
repz
aaa
adc
mov
jmp
in
hlt
sahf
mov
aam
or
adc
aaa
and
mov
cli
leave
shlb
sbb
in
in
hlt
mov
mov
adc
lahf
fcomp
xchg
shl
pop
ret
stc
xor
pusha
adc
addr16
inc
or
andb
xor
call
and
and
shlb
mov
mov
jp
jp
in
dec
cmc
loop
stos
jp
push
hlt
popf
sub
loopne
push
mov
push
call
pop
sub
maskmovq
mull
ret
js
insl
jle
push
or
imul
popa
or
test
xchg
cmp
iret
push
fs
data16
dec
fcmove
xor
push
mov
hlt
out
pop
ror
popf
je
es
adc
in
lds
or
jp
dec
xchg
testl
das
shr
mov
pop
lcall
add
lret
gs
arpl
out
in
jbe
test
lahf
leave
jo
mov
inc
sub
repz
out
jmp
sub
inc
in
and
clc
cltd
jl
pop
repz
addr16
shll
cltd
cmp
or
lahf
es
incb
lret
out
lret
xchg
add
jl
mov
cmp
inc
sub
fs
cli
or
loopne
mov
les
mov
lahf
push
xor
hlt
push
adc
push
xchg
mov
arpl
jl
aas
add
jns
mov
lcall
push
jl
out
leave
mov
dec
into
stc
or
outsl
clc
fimuls
sbb
je
dec
sub
mov
push
nop
add
mov
pop
and
jmp
inc
sub
push
pop
mov
outsl
sbb
imul
push
mov
lret
movl
add
mov
xchg
adc
popf
mov
push
ja
mov
inc
sbb
std
repz
xchg
scas
adc
out
adc
or
jmp
enter
addr16
pop
movsl
mov
jecxz
xor
mov
pop
cmp
in
mov
sahf
imul
add
mov
subb
jo
mov
lods
inc
lret
push
inc
and
sbb
loope
cmpsb
out
clc
shl
out
mov
pop
xor
xchg
loop
or
inc
mov
pop
cmp
je
rorl
mov
add
jnp
insl
dec
jge
sub
xor
outsl
xor
out
mov
adc
pop
push
popf
scas
mov
xchg
arpl
mov
stos
cmp
leave
sub
xchg
ljmp
and
addr16
leave
add
popa
dec
jb
mov
jecxz
imul
cmp
mov
push
lea
pop
mov
xchg
cmp
pop
push
jne
rolb
cmc
insb
pop
scas
fsubl
mov
mov
pop
cmp
jecxz
or
mov
enter
push
sub
xchg
mov
sbb
lret
adc
jle
out
aas
mov
sub
aas
cmp
jns
jl
arpl
pop
add
cwtl
or
and
ss
stos
movsl
cs
loop
out
dec
mov
xor
mov
push
lock
lcall
sub
arpl
cwtl
add
xchg
fistpl
add
shl
out
nop
sbb
pop
ja
or
mov
sti
mov
cmp
arpl
pop
mov
xchg
out
dec
push
sbb
add
stc
sub
sbb
or
jl
insb
dec
pop
imull
rclb
shrb
rcl
idivl
jnp
inc
inc
jle
sub
dec
ret
stc
jecxz
xor
push
pop
mov
dec
xor
jne
dec
add
mov
loop,pn
dec
cmp
xor
xchg
insl
push
movsb
mov
lret
fldenvs
cmc
cmp
into
fmull
test
cmpsl
movsb
add
dec
pop
int
mov
push
sbbb
push
test
and
sahf
cmp
imulb
mov
add
dec
push
test
jo
sahf
fdivl
mov
in
inc
pop
push
push
pop
lea
jmp
icebp
push
movsl
ret
shrb
xor
fsubs
test
cmp
jmp
push
mov
xchg
pushf
mov
jns
test
pop
sti
loope
aas
or
xchg
mov
ficoms
decl
test
clc
jle
push
cli
test
icebp
xchg
out
xchg
xor
and
mov
nop
cwtl
add
push
testb
mov
lahf
adcb
shll
cmc
jb
mov
ja
pop
add
in
cmc
sbb
ret
int
repz
shlb
int
fnstenv
test
jle
aam
or
fimuls
aam
push
addr16
fists
xor
push
stos
stos
push
outsb
xor
repnz
scas
and
add
sarl
lahf
sbb
cmp
imul
repnz
ja
inc
sbb
cmc
add
scas
in
add
clc
mov
ss
pop
out
cltd
sbb
pop
roll
or
and
jg
pop
jnp
or
jle
jecxz
lcall
popa
insl
xchg
push
pop
cmp
lods
cmp
imul
pop
pop
mov
push
aaa
dec
push
int
adc
push
sbb
add
or
test
cmp
stos
and
int
iret
insb
out
adc
jle
push
or
mov
in
jg
fidivs
lret
popf
mov
mov
mov
loopne
scas
pushf
and
notb
mov
mov
out
sarl
cmp
and
int
mov
std
and
cmc
sub
clc
ds
fwait
adc
pop
std
jl
sub
pop
adc
mov
pop
movsb
push
mov
stc
pop
push
scas
xchg
andb
repnz
pushf
and
cmp
test
pop
add
mov
cmp
mov
testl
sarb
xchg
sub
loope
mov
cld
inc
imul
sub
mov
jo
aad
loopne
jmp
sbb
dec
xor
add
dec
movsl
fs
xchg
cmp
std
arpl
jmp
xchg
xchg
repz
sbbb
and
scas
cmpsb
pop
mov
fisubrl
sub
sar
sub
sub
shrb
stos
pop
sbb
mov
and
hlt
cs
sub
or
xchg
inc
add
std
inc
mov
jmp
mov
out
daa
in
enter
test
pop
or
push
mov
stc
and
adc
mov
out
lods
jns
jmp
and
xor
jecxz
pop
arpl
pushf
push
and
jb
jge
jl
sti
mov
and
add
and
int3
jns
pop
inc
push
and
bound
out
or
dec
mov
dec
ss
je
pop
xor
mov
jno
outsb
mov
pop
jp
mov
mov
test
jae
push
xchg
pop
cmpsb
outsb
jle
fstpt
mov
dec
dec
push
jns
push
add
andb
jnp
shll
add
icebp
mov
mov
lret
addr16
imul
in
ret
imul
bound
pop
lock
pop
ljmp
pop
sub
in
jmp
jbe
loop
ret
andl
jle
xchg
shl
loopne
push
pop
pop
das
jg
fldt
mov
lret
xor
jo
mov
shll
and
pop
mov
adc
mov
sbb
push
ficoms
add
out
sysret
add
sub
adc
aaa
loop
xchg
pop
out
jmp
inc
fcomi
aaa
dec
jne
fwait
xor
dec
cmp
rorb
stc
stos
push
mulb
out
shrb
mov
popa
xor
push
call
pop
lret
pusha
lods
mov
inc
add
push
cwtl
rclb
inc
int
sub
std
insl
inc
orl
bnd
jo
or
pop
xchg
xchg
mov
ljmp
jae
cmc
pop
adc
nop
test
repz
rorl
es
jecxz
ret
mov
in
and
icebp
stos
loop
rcrl
sbb
inc
inc
sub
lods
stos
nop
adc
pop
addr16
push
clc
int
sbb
dec
mov
addr16
fsub
add
mov
fdiv
das
repz
ds
daa
int
fadds
scas
or
sub
leave
cmp
js
sbb
inc
stos
inc
ret
xor
push
pop
adc
inc
fisttps
cld
xor
pop
icebp
pop
dec
inc
xchg
jle
inc
adc
icebp
ror
stos
repnz
lahf
jl
xchg
sahf
add
xchg
fmull
dec
xchg
lret
jo
in
shll
xor
adc
lds
mov
ds
inc
cmp
adc
daa
repz
in
fcoms
fcoms
push
out
adc
add
sub
out
hlt
mov
cmpsl
mov
pusha
sbb
mov
xor
dec
dec
push
loopne
arpl
dec
bound
push
cmp
dec
inc
jbe
stos
jecxz
test
subb
mov
iret
inc
pop
cmp
jg
jne
fadds
popf
xchg
jno
mov
cmc
icebp
std
cmp
lret
out
jb
imul
loop
aam
es
scas
dec
xor
push
jne
dec
and
or
xchg
xchg
mov
scas
adc
dec
shrl
xchg
jmp
stos
lods
cmpsb
rcr
or
mov
or
cld
add
rcr
loop
push
loope,pt
jg
sbbb
ficomps
sarl
out
mov
nop
fsubrs
ja
pop
fwait
adc
xchg
inc
xor
clc
cmp
pop
jmp
sbb
lds
ret
scas
jbe
fisubrl
or
repz
sub
fucom
mov
loope
subl
outsl
cmp
cmp
in
je
popa
cmpsl
and
and
sahf
lods
and
lock
push
jns
mov
or
ret
sbb
sub
sub
fs
pop
ret
shrl
lret
popf
dec
shlb
xor
sub
pushf
dec
inc
idiv
xor
fstl
pop
lret
mov
add
aam
lock
ss
add
and
enter
mov
inc
push
mov
cmpsb
mov
test
pop
mov
cmc
inc
stc
leave
sahf
add
mov
jo
stc
leave
out
sbb
insb
adc
push
ret
push
inc
xchg
jmp
out
pop
sbb
mov
movl
or
mov
push
xor
mov
jle
lcall
imul
jmp
popf
push
scas
xchg
je
aaa
ret
cmp
lds
cmp
pushf
xchg
mov
cs
mov
xor
pop
push
loop
dec
inc
in
dec
test
pop
push
imul
push
and
push
popa
ffreep
out
ljmp
mov
mov
mov
pop
cmp
sub
mov
nop
xlat
mov
enter
fstl
je
xor
pop
je
popa
addr16
ds
movsb
in
inc
in
fs
mov
cmp
inc
sbb
dec
mov
mov
mov
inc
in
scas
rcll
std
and
push
add
cmp
and
cltd
mov
jmp
or
sub
inc
xchg
ljmp
jge
outsb
arpl
mov
cmp
cli
add
dec
out
mov
les
ja
rcrl
call
mov
cmp
outsb
mov
popf
pop
sti
push
lea
dec
jno
addr16
jae
mov
stc
in
les
xor
mov
sub
arpl
scas
xchg
jns
rcrb
push
sbb
mov
jl
movsl
sahf
or
fcmovb
jo
inc
jae
in
mov
and
imul
mov
push
stc
loop
adc
dec
add
mov
mov
adc
js
xor
arpl
rcll
push
xchg
push
xchg
fisubrl
dec
or
and
mov
jns
leave
adc
cmpsb
mov
mov
ficoms
pushf
dec
push
ja
jp
fwait
xor
decb
je
add
or
inc
jecxz
ds
sbb
inc
or
aad
and
iret
loope
sub
xchg
or
jp
lret
and
mov
rcll
and
in
lods
cmp
imul
das
pop
gs
nop
cmovp
clc
out
je
scas
gs
mov
xchg
popf
jb
cmp
lea
inc
mov
sub
mov
clc
arpl
mov
cmp
adc
jnp
repz
push
mov
in
rorb
shlb
xchg
std
lods
push
in
lcall
nop
dec
mov
mov
xor
mov
pop
cli
clc
test
stos
push
mov
int3
adc
mov
aaa
int
or
pop
mov
jns
jae
inc
cmc
fwait
add
jb
sub
es
sbb
mov
dec
mov
jbe,pt
imul
jno
pop
lret
es
mov
add
inc
push
lret
hlt
test
addr16
jg
imul
mov
cwtl
shrb
jp
imul
push
sahf
cmp
sbb
jae
sbb
pop
jbe
mov
add
xchg
push
into
ds
decl
push
sub
jae
sub
pop
pop
fildll
sub
or
aaa
in
jb
add
jp
cmp
popa
push
xchg
lods
daa
jp
test
and
push
dec
inc
out
push
cmc
push
jle
mov
pushf
jle
sub
fbstp
lds
xchg
or
pop
cld
mov
mov
insl
and
addb
jmp
sbb
scas
jnp
popf
rorl
lret
add
out
pop
jns
arpl
inc
js
inc
add
ss
jle
inc
imul
incb
cmp
pushf
loope
mov
outsl
cmp
inc
inc
loopne
adc
mov
lock
mov
imul
popa
das
adc
inc
dec
fdivl
mov
mov
mov
xchg
jmp
rolb
sbb
push
mov
scas
das
outsl
insl
addr16
sbb
cmpb
iret
xchg
mov
repz
mov
into
lds
jg
jge
outsb
inc
mov
outsl
imul
bound
stos
imul
pop
lds
jbe
push
xor
notl
xor
adc
jnp
adc
push
jmp
int3
ja
or
aaa
movsl
pushl
subb
imul
mov
jno
popf
andb
inc
and
aam
cmpsl
xchg
dec
push
push
scas
push
mov
add
in
mov
mov
pushf
in
inc
lcall
fsts
cld
repz
scas
fidivs
sub
mov
daa
imul
adc
add
adc
mov
sub
jne
pop
test
jmp
mov
push
iret
sub
daa
jle
pop
pop
fldenv
dec
xor
clc
dec
push
nop
jne
cmp
jns
shrl
pop
out
xor
lret
xchg
jp
aas
lret
dec
lea
or
dec
and
pushf
jmp
sarl
pop
shrb
aam
out
popa
loope
push
test
jp
pop
insb
mov
fiadds
ds
adc
or
inc
gs
xchg
pop
testb
or
xchg
stos
inc
hlt
adc
or
jnp
inc
push
mov
xor
cld
sarb
insb
stos
xchg
or
mov
jp,pt
or
and
xchg
outsb
jno
dec
dec
pusha
adc
ja
inc
push
cmp
ds
cmp
mov
mov
aas
shlb
ret
loope
xchg
lret
push
and
xchg
dec
sbb
push
mov
add
retw
in
push
dec
jnp
daa
adc
jb
and
mov
mov
das
daa
wrmsr
sub
in
sbb
jmp
sub
sub
inc
pop
paddw
sub
sbb
push
shlb
test
fs
xor
adc
mov
aam
pop
cmp
inc
cmp
int
xor
add
adc
cmp
lret
jae
xchg
push
fdivr
xchg
cmp
dec
pop
shrl
xchg
cmp
and
or
cmp
hlt
inc
outsl
sub
aas
jmp
mov
push
rorl
nop
xchg
rcr
lret
aaa
sti
pop
adc
mov
shrb
xchg
stc
inc
xchg
es
inc
shrb
inc
jbe
shl
push
cmp
cwtl
jno
mov
movsl
dec
add
sbb
into
cli
dec
dec
inc
sbb
daa
mov
xor
adc
jle
inc
outsb
je
dec
cltd
loopne
fisubrl
add
mov
pop
inc
ret
lret
xor
push
jg
push
cmp
mov
jle
pop
and
dec
push
bound
scas
push
inc
adc
inc
cmp
das
and
cld
dec
divb
and
adc
aad
popa
stos
pop
mov
add
mov
jecxz
xchg
xchg
imul
jae
fsubrs
dec
lcall
loopne
rcll
inc
jae
or
arpl
test
or
pushl
cli
sub
adc
repnz
pop
movsb
pop
xor
xchg
pop
sahf
and
cwtl
push
pusha
cld
dec
dec
and
jg
inc
and
push
push
stos
mov
imulb
enter
adcb
in
data16
aad
loopne
je
outsb
xor
dec
lret
fdivrl
adc
loop
aas
dec
hlt
sbb
jmp
mov
mov
jmp
and
pop
lcall
stos
jnp
fs
mull
xchg
inc
pop
inc
jmp
or
loop
hlt
xchg
sbb
lea
adc
mov
inc
sbb
fdiv
push
lods
insl
push
popf
mov
lods
arpl
jl
loope
int
fwait
adc
addr16
les
ret
dec
das
or
push
int
adc
outsl
cmp
shrl
pop
cs
ljmp
jecxz
popf
sti
inc
push
out
lock
pop
adc
mov
mov
fxch
mov
stc
cmp
mov
sbb
loopne
mov
std
xchg
cmp
dec
jle
inc
popf
xor
rolb
sub
mov
adc
leave
xor
test
sub
push
push
fcomps
clc
lds
cmp
mov
cltd
popf
lods
lock
adc
jns
ret
movsl
test
cmc
xchg
adc
imul
cltd
cmp
sbb
jecxz
xor
pop
sub
jo
aaa
lods
into
loopne
inc
cmp
xchg
ds
faddl
je
es
xor
cmc
fwait
cld
lock
cmpsl
repz
test
adc
pop
xchg
xor
add
cld
dec
jns
arpl
jb
js
ds
mov
jle
xchg
push
mov
add
and
out
jle
and
jp
icebp
cmp
mov
and
mov
jg
out
outsb
dec
jmp
mov
fcomi
cmp
ficoml
mov
sbb
cwtl
xor
rolb
dec
pop
mov
push
mov
nop
ljmp
dec
pop
frstor
sbbl
pop
mov
jne
ficoml
movsl
ljmp
push
dec
pop
sbb
repnz
or
lret
sbb
imul
lret
fs
xchg
insl
or
adc
loopne
dec
xchg
fs
scas
ljmp
adcb
inc
cmp
cmp
sub
daa
jns
and
lahf
push
jns
lret
inc
fs
int3
ss
push
or
jl
push
mov
lods
adc
ficoml
pop
subl
sbb
mov
push
pop
inc
xchg
sub
and
call
mov
inc
dec
mov
jecxz
cwtl
inc
sbb
cld
lea
les
loopne
cmp
inc
lods
pop
sbb
xchg
jmp
je
inc
cmp
pop
add
sbb
dec
lods
in
push
adc
sti
notb
sub
cmp
sti
xchg
js
aas
pop
mov
cmpsb
dec
dec
pop
pop
or
cmpsl
leave
pop
pop
jmp
pushf
insb
loop
out
cmp
inc
or
sar
les
fsubl
popf
sub
xchg
insb
jecxz
adc
lock
xlat
dec
push
mov
pop
nop
push
je
sub
mov
adc
roll
fwait
test
in
sar
outsb
push
daa
jno
jae
jecxz
pop
stc
mov
stos
xchg
pop
and
pop
push
mov
xchg
or
loope
jae
pop
cmp
mov
push
pop
into
jge
jae
das
addb
ss
mov
mov
mov
push
or
and
add
and
out
je
das
movsb
lods
cli
add
xor
ds
mov
mov
shrb
jecxz
pop
shlb
jg
stos
pop
shrl
jge
mov
shll
cmp
or
xor
and
rclb
mov
xchg
hlt
repz
pusha
iret
and
or
lcall
movsb
pop
dec
sub
stc
add
cmc
out
sbb
jo
mov
mov
mov
sahf
aaa
mov
mov
xchg
in
xchg
mov
scas
cmpsb
lret
movsb
call
loopne
addl
cmpsb
pop
sub
sub
shlb
jle
xlat
push
mov
jnp
and
xchg
mov
outsl
sub
pop
shll
inc
cld
pusha
popf
leave
cmp
xlat
outsl
test
push
mov
mov
push
sbb
sbb
and
enter
sti
cmc
fmuls
adc
sbb
xor
pop
aaa
out
cmp
movsl
mov
add
xor
mov
aaa
fstp
movsl
leave
jnp
ljmp
cmc
leave
scas
mov
jle
and
and
sbb
subl
sub
or
push
inc
mov
gs
mov
in
push
add
push
add
sub
popa
imul
or
xchg
inc
les
and
cmp
int3
nop
lcall
sbb
int
fcmovnbe
pop
push
xchg
or
xlat
std
xchg
mov
popl
js
mov
out
ret
into
push
cmp
jl
xchg
insl
xchg
push
shll
jb
dec
insl
add
xlat
dec
push
bnd
pop
cmp
mov
adc
mov
pusha
test
xor
sbb
cmp
cmp
cmpsb
iret
sbb
or
orb
dec
movl
test
popf
dec
pop
adc
jnp
add
or
in
dec
ds
add
std
pop
call
inc
gs
and
cmpsb
push
or
jecxz
ret
and
test
cmp
mov
int3
lea
adc
std
fldt
pop
repnz
stos
mov
push
cwtl
xor
jle
movsl
adc
mov
scas
movsb
adcb
imul
push
sar
sbb
arpl
cli
jmp
xchg
imul
lret
leave
pop
jbe
movsb
dec
call
stos
jb
mov
cs
idivb
push
dec
adcb
icebp
push
sbb
mov
movsb
inc
in
add
pop
mov
pop
call
mov
push
ljmp
ja
add
mov
or
mov
insl
dec
jns
xchg
popf
insb
mov
ss
xchg
mov
mov
cmp
aad
or
fildl
add
xor
pop
addr16
dec
insl
fs
insl
and
call
adc
hlt
sub
and
sarb
mov
pop
ss
adc
cld
ja
jp
lret
xchg
push
xor
in
imul
or
das
insl
or
in
movl
sarb
push
loope
xchg
loopne
mov
rep
pop
loope
in
ljmp
mov
lea
and
xor
or
mov
xlat
dec
mov
test
cli
adc
cmp
outsl
mov
pop
add
mov
mov
je
adc
rorl
and
cmpb
dec
cli
lds
mov
sub
mov
rclb
lds
inc
fwait
adc
cmp
inc
dec
push
shl
adcb
or
dec
lods
in
and
or
xor
cmp
xchg
mov
rcrb
xchg
nop
mov
push
sbb
shlb
xchg
fdivp
pushf
mov
mov
fs
fwait
lahf
jb
hlt
roll
js
lahf
pop
into
jecxz
loope
fs
cmp
jne
dec
ret
add
push
mull
lods
sbb
pop
fisttpl
xlat
mov
and
stos
sbb
jo
fistpll
movb
cmp
xchg
jae
loop
mov
mov
mov
and
adc
adc
dec
loop
clc
adc
cmp
mov
out
mov
fnstcw
inc
mov
repnz
push
scas
jl
ret
repz
sbb
fimuls
jl
xor
mov
adc
dec
push
cmpl
imul
iret
leave
mov
aaa
push
sub
sub
fisttpll
add
les
jae
or
gs
jns
insl
in
mov
mov
rolb
popf
or
xchg
push
push
mov
lret
mov
mov
pop
and
daa
aas
shlb
inc
popa
and
aas
sbb
ret
xchg
ljmp
pop
shlb
mov
mov
adc
dec
ret
xchg
and
cs
je
outsb
jbe
adc
flds
sub
cmp
sbb
add
seto
inc
rcll
rclb
xchg
sbb
jno
lds
add
imul
cmpsb
adc
mov
cmpsl
fidivrs
jg
or
shrb
and
ljmp
adc
in
in
stos
fsin
xchg
xchg
lods
fcmovbe
and
mov
pop
in
cmp
xlat
out
mov
bound
push
dec
xchg
mov
mov
push
adc
int
jae
jnp
imul
mov
mov
mov
out
stos
iret
adc
adc
mov
mov
add
movsb
and
pop
pop
pop
cmpsb
add
scas
push
jnp
xor
popa
fs
jns
mov
xor
je
or
lahf
bound
lock
adc
xchg
cmpsb
cmc
incl
dec
pushf
outsb
pop
xchg
div
fs
dec
cmpsb
ljmp
mov
pop
cmp
push
mov
ret
push
outsl
mov
sub
lret
mov
or
iret
dec
push
dec
add
je
cmp
nop
fbld
popf
pop
sbb
scas
mov
les
in
pop
pop
mov
mov
sub
push
ja
daa
out
iret
jns
int3
flds
pop
shll
in
fstps
lods
push
or
sbb
outsb
pushf
mov
jo
pop
bound
and
rorl
insl
rolb
push
int
or
iret
pusha
mov
shll
cmpsb
dec
mov
inc
dec
cmp
loopne
jmp
lea
shlb
fwait
cmp
push
out
adc
jns
add
movsb
dec
stos
mov
test
add
fcmove
jmp
and
mov
jno
enter
sub
push
std
adc
pop
push
fidivl
fcmovnb
jae
xor
and
movsl
imul
cmp
out
sti
mov
scas
sti
mov
xchg
sar
bound
sub
xlat
dec
subl
or
xor
movsl
gs
mov
xchg
jge
push
jge
popf
dec
push
arpl
push
insl
inc
jp
xchg
mov
mov
mov
mov
and
add
stos
pusha
sub
cmp
and
gs
sbb
movsb
mov
outsb
out
sub
loope
enter
icebp
mov
add
pop
je
ret
loop
insl
and
pop
mov
test
dec
repz
sub
jnp
push
jae
jnp
cmp
sti
pop
pop
xchg
push
shll
pop
push
aam
mov
xchg
jmp
inc
hlt
sub
ds
sti
inc
dec
adc
and
mov
mov
jecxz
mov
add
and
stos
test
mov
loop
in
mov
ljmp
xor
or
int
mov
jge
lds
jnp
call
lcall
mov
pop
pop
sarb
fsubs
mov
xchg
outsl
ds
push
ror
pop
or
mov
adc
dec
mov
repnz
jmp
icebp
in
cmp
cmp
loope
pop
cli
jne
pusha
mov
or
loope
mov
pop
jae
sub
jp
mov
vmread
out
out
or
sub
adc
sbb
mov
fiaddl
leave
in
cmpsl
sar
cs
sub
mov
mov
repz
icebp
int
leave
jl
inc
mov
jne
mov
popa
sbb
gs
or
mov
insl
or
dec
cmp
loop
mov
subb
outsl
test
cmc
xchg
js
in
dec
mov
xchg
xlat
dec
or
sti
mov
adc
into
jecxz
fucomi
xchg
xchg
cmp
mov
ja
fwait
cs
jns
adc
mov
bound
sbb
stos
in
arpl
sub
or
stc
xor
sti
repz
dec
jo
sub
iret
in
mov
mov
insl
mov
outsl
mov
gs
subl
xchg
jne
addb
inc
cmpsl
lret
imul
inc
cwtl
iret
lahf
inc
ljmp
in
xchg
pushf
lds
int3
pushf
add
push
fcoms
cmp
insl
and
repz
mov
push
xchg
dec
movb
sbb
jmp
pop
lret
je
test
int3
daa
pop
and
mov
jnp
mov
mov
inc
mov
sbb
mov
scas
fsubrl
mov
faddl
out
test
popf
sub
jmp
jbe
mov
outsb
sbb
jns
mov
adc
mov
popa
or
into
push
loop
mov
cmpsl
insb
es
in
imul
pop
in
push
cmp
pop
inc
cld
popf
lcall
divl
mov
test
cmpsb
imul
mov
xchg
inc
add
ja
push
mov
sti
loopne
mov
push
les
pop
out
div
xor
add
jno
pop
cmp
scas
mov
in
movsb
pushf
rsm
mov
mov
jp
push
jle
lock
mov
pop
push
mov
data16
ret
stos
cltd
aam
mov
xor
repz
xor
mov
push
fiaddl
push
jp
dec
mov
out
dec
and
aad
xor
push
pop
mov
inc
mov
push
arpl
push
lea
sbb
xchg
mov
push
test
lret
pop
dec
call
cmp
rcr
mov
and
dec
inc
mov
fs
popa
fildll
push
push
sbb
shl
iret
jo
mov
fmull
lea
std
pop
out
nop
test
jb
xor
mov
sbb
sub
mov
out
sbb
pusha
add
push
in
mov
es
xchg
mov
sub
jns
dec
inc
xchg
mov
fistps
dec
les
leave
rcl
mov
fisttpll
add
testl
pop
xchg
sub
or
into
aam
mul
push
push
mov
sub
lcall
sar
and
aas
jo
cmpsl
pop
sbb
xchg
pop
test
pop
mov
mov
dec
add
aaa
and
mov
mov
sbb
jmp
or
imul
dec
test
clc
ret
inc
filds
or
mov
int3
out
cmp
arpl
sti
xchg
pop
pop
outsl
sbb
push
fdivl
dec
add
cltd
cld
adcb
call
inc
test
idivl
out
mov
and
lods
and
pop
jo
mov
mov
cmp
mov
daa
roll
adc
or
rcrb
or
jg
lock
stos
outsl
push
mov
pop
xor
xchg
cmp
cmp
lods
test
xor
jbe
mov
iret
xor
add
stc
inc
mov
xchg
lcall
lahf
das
stos
fcoml
jge
xor
add
adc
pop
ljmp
loop
or
xor
and
or
pushf
sub
test
mov
dec
ljmp
adc
jp
mov
adc
insb
xlat
subb
or
sahf
movsl
lcall
jae
stos
std
mov
pop
dec
push
lods
xlat
shrb
clc
sahf
rorb
push
and
pop
pop
repz
mov
loope
cwtl
xor
aaa
mov
in
lahf
push
xor
pop
jnp
pop
xchg
add
sti
loop
bound
das
les
mov
ret
cli
mov
adc
icebp
out
dec
punpckldq
pop
dec
mov
test
js
inc
sub
stos
dec
sbb
sub
push
fstl
and
or
xchg
ror
test
or
add
sahf
loop
lock
xor
lods
inc
xor
clc
lock
sub
das
sbb
pop
dec
xor
fnstenv
pusha
vpshldvq
shlb
and
cmpsb
mov
adc
mov
xor
mov
or
sub
dec
push
aad
cmp
jns
cmp
insl
enter
mov
int3
scas
pop
stos
sbb
daa
fnstenv
orl
jno
inc
sub
pop
mov
and
or
jae
inc
mov
fcoms
pop
pop
sarb
push
mov
cmc
mov
aas
sub
dec
or
fisubl
xchg
ret
push
cmp
jbe
lods
pop
adc
mov
and
adc
into
popa
in
push
mov
imull
pop
imul
stc
in
push
push
pushf
arpl
inc
inc
add
dec
in
or
push
stc
push
sahf
out
push
adc
enter
jae
dec
repz
push
cmp
mov
pop
pop
xchg
mov
mov
sbb
xchg
out
mov
repnz
data16
adc
movsl
addb
orb
fwait
unpckhps
dec
arpl
mov
stos
dec
mov
shlb
mov
lock
mov
inc
cs
cmp
mov
mov
sbb
mov
jmp
ret
mov
sub
sbb
fsts
adc
mov
sbb
push
sbb
jp
push
rclb
sbb
hlt
or
sbb
mov
dec
lahf
subb
gs
inc
sbb
jle
and
je
mov
int3
hlt
das
or
stos
or
jno
mov
cmp
mov
into
mov
icebp
mov
arpl
jp
js
mov
pop
pmullw
jo
or
js
mov
cmpsb
jo
inc
aas
mov
mov
and
fistpl
adc
clc
inc
mov
fstl
cmp
outsl
lret
jnp
xchg
push
sbb
cmp
xchg
hlt
mov
adc
popa
pop
push
ret
sub
add
cmp
xchg
ds
mov
lret
shr
loop
divb
cli
or
xchg
jecxz
inc
or
sbb
inc
mov
pop
fadds
dec
jle
out
js
sub
inc
xor
stc
push
fisttpll
dec
cmpsl
cli
xchg
mov
shll
inc
cmp
adc
movsl
pop
int3
pusha
mov
divl
xchg
mov
sbb
pop
xor
lret
scas
jb
sti
ja
adc
js
mov
inc
ret
pop
push
dec
xor
pop
xchg
lods
mov
pop
in
cmp
ret
inc
stos
sub
subl
push
arpl
add
push
add
push
cmp
pushf
addl
fldt
push
mov
call
inc
aam
jmp
sahf
jge
cmp
sub
or
inc
popf
push
pop
sbb
mov
pop
cmc
faddl
push
rcl
pop
mov
jbe
mov
push
xlat
push
adc
push
in
gs
aam
outsl
test
imul
cmpsb
or
fldcw
dec
fsts
mov
cmp
je
sub
add
loopne
push
cmpl
jnp
xchg
sbb
mov
xor
outsb
rclb
xchg
xchg
cmp
in
aam
lods
pop
js
push
add
insb
inc
dec
lock
add
dec
push
sub
cmc
xor
enter
add
xchg
arpl
pop
jmp
sbb
loope
pop
fldl
cmp
lods
sub
dec
jle
jno
ret
stos
cltd
iret
dec
dec
fsubrl
jle
test
mov
mov
movsl
mov
pusha
and
lods
aas
xor
inc
loop
add
aas
shlb
fmul
cmpsb
adc
fcomip
int3
fwait
push
and
cmpsl
roll
mov
daa
mov
scas
sub
lock
cwtl
dec
pop
rclb
mov
arpl
or
lret
stc
lcall
mov
mov
jmp
push
adc
mov
sub
add
jo
jge
and
imul
addb
inc
insl
or
and
aad
or
xchg
xor
cltd
ds
cld
arpl
lret
rolb
sub
or
mov
mov
cmpsl
ror
add
jg
jns
cmp
sub
dec
clc
cli
movsb
jp
cmc
mov
and
loopne
scas
inc
cmp
lahf
mov
cli
or
push
add
test
in
or
or
arpl
scas
das
mov
xor
mov
push
divl
cmp
andl
xlat
or
fistpll
les
or
xchg
insl
pusha
iret
sbb
sbb
inc
dec
sub
mov
pop
movsl
adc
shl
xlat
lcall
pop
dec
lock
inc
aaa
mov
push
pop
int3
test
in
daa
xchg
out
int3
push
clc
jmp
mov
mov
lret
insl
jle
inc
mov
lahf
xlat
add
push
inc
jne
add
scas
and
cmpsb
ret
cmp
aam
mov
mov
mov
test
and
cltd
add
xor
scas
fwait
cmp
pop
mov
lret
jl
leave
xor
and
cmp
jmp
lods
movsl
mov
sahf
lcall
in
add
sbb
adc
jg
pushf
mov
in
cmc
and
mov
xchg
lcall
pop
test
test
push
mov
aaa
in
js
je
stos
movl
xor
iret
ja
call
cmp
inc
sub
nop
xor
inc
aas
push
jno
xchg
lods
cmpl
adc
push
xchg
mov
xchg
push
ficoml
mov
pop
jg
jnp
cli
fsubrl
js
mov
nop
icebp
in
jl
sbb
nop
xor
xor
outsl
repnz
add
xchg
or
xchg
std
jno
jns
mov
xchg
in
int
cli
popf
jge
aam
push
or
jl
out
xor
fcmovnb
gs
and
sbb
int
out
lcall
call
data16
push
inc
dec
xor
mov
inc
shrb
jmp
pop
push
fcomip
or
inc
push
int3
pop
jmp
cltd
xchg
adc
icebp
fwait
xchg
call
in
dec
jle
lret
cmp
lods
test
jnp
dec
mov
xor
gs
cwtl
fyl2xp1
or
mov
jnp
xchg
fsubp
inc
push
insl
xchg
outsl
and
add
pop
sbb
push
jnp
inc
xchg
cmpl
sub
mov
jl
imul
xchg
mulb
icebp
sub
cmpsl
lods
add
insl
dec
or
xchg
cli
adc
mov
xlat
jno
outsl
add
fwait
and
xor
adc
jae
bound
xchg
cmpsb
jb
mov
ljmp
test
ljmp
push
adcb
in
loopne
stc
push
les
test
ja
jge
das
int3
jne
fs
cmp
inc
mov
sbb
loop
mov
mov
cltd
es
cmp
outsb
cmpsb
jl
mov
insb
push
inc
add
jne
pushf
inc
jnp
orl
mov
repz
push
imul
icebp
mov
test
out
dec
push
lea
test
pushf
aad
lods
and
lahf
imull
xchg
fsubr
mov
push
leave
popf
pop
bound
enter
mov
dec
sarl
jmp
jbe
xor
movsb
in
and
pusha
cli
dec
lds
imul
imul
sbb
das
into
xor
mov
xchg
fsts
xor
lds
fs
add
xor
or
push
jg
andl
dec
dec
push
and
aad
cmp
aad
out
jne
mov
and
hlt
js
add
pop
and
xor
dec
lock
jno
sbb
or
inc
les
out
fmull
movsl
inc
inc
pop
xchg
or
inc
mov
or
pop
and
testl
or
mov
les
dec
iret
jmp
movsl
inc
in
dec
pop
pop
xlat
xor
jp
ret
insb
mov
lock
jne
xor
aas
repnz
rorl
pushf
mov
in
xor
pop
xlat
or
lds
push
fldt
sbb
ret
rorl
imul
out
pop
rolb
cmp
sbb
shrl
jno
inc
pop
push
bound
in
cmp
pop
or
adc
pop
shrl
cmp
js
mov
hlt
or
xchg
rcrb
addb
mov
pop
dec
dec
out
add
xchg
andb
and
and
fisttpll
scas
outsb
cmp
aaa
lea
mov
xchg
out
push
push
xchg
or
xchg
iret
subl
add
add
lds
add
icebp
aaa
adc
repz
stc
das
or
sub
sub
pop
dec
nop
fs
in
lds
mov
inc
inc
enter
or
push
xor
imul
add
sahf
sbb
and
adc
xchg
ss
lahf
jp
and
insl
cmp
pop
gs
les
call
repnz
arpl
lret
les
out
sbb
sbb
mov
jne
jg
pop
cs
mov
add
mov
pmuludq
stc
jbe
cmp
adc
dec
in
pop
cmp
pop
dec
arpl
pop
leave
cmc
out
icebp
rcrl
inc
adc
test
dec
or
mov
movsl
stos
fildll
mov
leave
adc
jno
jb
test
test
ret
pop
xor
adc
adc
imul
jno
popf
mov
sbb
mov
outsl
hlt
imul
inc
test
int3
scas
xchg
mov
or
xchg
push
leave
aaa
pop
sbbw
cmp
cmpsb
data16
mov
movsb
inc
sub
movsl
xchg
cmc
add
push
popf
sbb
xor
mov
rolb
cmp
add
mov
adc
addr16
sub
dec
jns
das
jmp
lea
sbb
int3
stc
adc
fidivrs
popf
in
cli
int3
push
call
adc
inc
xor
sub
lods
outsl
cwtl
rcrb
inc
cmpsl
jmp
dec
xor
mov
mov
mov
pop
repnz
add
in
add
pop
jo
mov
sbb
loop
push
adc
adc
dec
dec
push
ret
inc
inc
imul
ja
nop
icebp
loopne
mov
sbbb
pop
or
ficompl
mov
lods
mov
or
push
jno
repz
ljmp
mov
push
sub
lock
pusha
pop
lret
enter
pop
mov
mov
xchg
fsubs
into
mov
ljmp
shll
stc
leave
push
mov
add
adc
test
lahf
fiaddl
imul
adc
pop
mov
xchg
lret
push
or
or
sub
xlat
int
dec
fldl
movsb
xchg
jle
inc
jne
movsb
iret
mov
sbb
push
sbb
xor
xchg
xor
mov
out
mov
fcoms
sbb
test
fsubr
test
dec
push
out
out
adc
out
xor
arpl
cmp
add
or
and
adc
xchg
sbb
xor
dec
xlat
movsl
loope
shr
jbe
push
les
ror
jne
xor
dec
clc
fstpl
lods
xor
mov
mov
mov
clc
incl
push
xlat
adc
xchg
sub
push
add
inc
fsubr
imul
sbb
and
out
lods
in
mov
leave
mov
dec
push
cmc
out
sub
lahf
in
inc
shlb
data16
mov
add
lods
out
and
cmc
cmp
mov
mov
inc
sbb
rorb
rorb
pop
sbb
jmp
movsl
jle
inc
or
adc
les
jge
stc
mov
adc
pop
dec
nop
int
mov
ja
pop
and
or
js
aas
fidivrl
ss
mov
or
pop
lock
adc
popf
divb
xor
stos
jbe
push
push
aas
out
movsb
stos
cmpsl
xchg
stc
mov
inc
add
xor
aad
jl
lahf
nop
mov
pop
pop
mov
jb
fmuls
mov
cmc
xor
push
sarl
loop
ficompl
sbb
mov
ret
repz
mov
mov
cmp
jp
jmp
add
scas
xor
pop
dec
ret
mov
adc
movsl
xchg
mov
push
add
jne
pop
rcll
clc
in
iret
mov
bnd
xor
mov
incb
pushf
popa
outsl
cmpsb
or
adc
aam
psraw
icebp
pop
xchg
add
xor
inc
jae
add
imul
jae
mulb
mov
lock
push
pminsw
dec
imul
aam
sub
and
mov
dec
scas
leave
ficoml
clc
test
cmp
aam
lcall
push
ljmp
adc
sti
js
jg
out
loop
sbb
les
jmp
filds
xchg
cmp
mov
cs
mov
jno
mov
push
pop
or
adc
push
mov
cmpsl
sub
ds
icebp
xchg
cltd
into
fwait
jmp
aad
test
stc
or
adc
jg
mov
jecxz
out
cltd
lahf
cs
notl
pop
lret
mov
pop
cmp
inc
and
sub
pop
jbe
xor
xor
cmp
add
jecxz
mov
mov
scas
jns
mov
add
add
clc
mov
testb
mov
inc
or
xchg
lahf
and
ja
and
dec
mov
jg
insb
sahf
xchg
adc
popa
loop
mov
loope
iret
mov
cmpsl
xchg
jmp
roll
in
cmp
inc
aas
idivl
js
in
pop
fwait
add
inc
pop
and
loope
test
incl
cmp
enter
test
cs
or
cmp
ss
out
sbb
pop
ljmp
inc
lods
xor
push
mov
adc
sti
out
pop
stos
sahf
lahf
loope
data16
add
pop
std
imul
and
inc
pop
and
or
mov
inc
sti
les
xor
popa
mov
adc
and
out
int
popa
in
enter
jg
test
push
aad
adc
mov
negl
and
xchg
mov
loopne
scas
ss
cmp
inc
rolb
or
xor
js
outsl
std
test
cmp
scas
movl
leave
xor
adc
inc
xchg
orps
into
stc
addr16
inc
in
xor
mov
adc
bound
out
cmpsl
addr16
out
popf
inc
or
or
fisttps
jg
outsb
lret
mov
adc
jg
sub
add
movsl
push
cmpsl
sbb
mov
mov
sbb
leave
push
adc
jmp
add
faddl
sbb
cltd
out
adc
dec
iret
or
xchg
jge
stos
int
jge
stos
nop
mov
jne
lret
int3
inc
mov
call
mov
mov
cld
push
or
popa
out
mov
xchg
test
popf
scas
popa
or
push
mov
or
daa
jnp
xor
clc
addr16
imul
lock
sub
outsb
pop
ret
clc
adc
push
shld
jbe
or
and
adc
xchg
int
jge
mov
cmp
gs
cmc
inc
sarb
xchg
data16
popa
dec
adc
and
or
add
cli
cwtl
jb
pop
jmp
xchg
test
sti
inc
cmp
xor
sub
pop
test
xor
dec
push
xorl
cltd
xchg
jae
pop
cli
push
pop
stos
hlt
cmp
mov
ret
or
and
and
pop
int3
std
enter
sarl
inc
pop
xchg
inc
aad
lock
pop
pushf
std
mov
scas
arpl
stos
and
and
scas
or
push
push
iret
pop
xor
sbb
push
out
movsl
xchg
pop
fisttpll
fldcw
or
push
jnp
test
int3
mov
inc
or
jbe
cs
push
pushf
iret
jns
mov
add
sub
movsl
jmp
repz
hlt
mov
stos
dec
leave
data16
ja
adc
int3
sbb
push
out
jl
into
jae
add
cmp
rol
pop
ficoms
push
xchg
lahf
push
lret
mov
insl
xchg
sbb
lods
test
adc
xchg
mov
mov
andl
fistl
xchg
std
mov
sbb
aas
dec
dec
sbb
jbe
or
pop
imul
jg
imul
das
adc
imul
push
sar
das
imul
xchg
cmp
movsb
ss
xchg
lret
stc
aaa
in
sub
dec
popa
mov
sbb
jns
mov
ja
cltd
adc
ds
sbb
ffreep
or
subl
xchg
jns
pop
sbb
shrb
fcomp
movsl
xlat
or
test
jnp
inc
mov
jae
mov
lods
aam
jge
int
xor
ja
rdmsr
xchg
jle
mov
daa
lods
sub
mov
push
mov
dec
jecxz
cmp
mov
sub
std
jnp
aad
cmp
pop
sub
ret
pop
int3
sub
mov
js
out
dec
push
jmp
aas
imul
xchg
roll
loopne
fnstcw
lods
das
mov
fimull
mov
dec
jns
mov
sti
sub
lods
fisubs
and
add
add
insl
outsl
shr
push
pop
lods
int
jb
call
lods
and
and
and
jne
xchg
fisubl
mov
inc
xor
addr16
xchg
xchg
pop
inc
fcompl
inc
js
cli
push
mov
stos
pop
add
loope
xor
xor
je
fldcw
cmp
sbb
aaa
loope
pop
and
xchg
aad
xchg
cmpsl
lds
xor
adc
stos
pop
cmpsl
in
imul
loop
iret
push
xor
enter
mov
roll
loop
test
test
jb
aad
push
outsb
mov
xor
mov
sarb
js
inc
fnsave
je
sbb
mov
sub
add
cmc
pop
sahf
xor
pop
imul
cmp
lahf
in
inc
adc
jae
mov
mov
jo
jb
pop
mov
adc
push
and
cmpsb
lret
pop
imul
xor
test
mov
dec
arpl
stos
add
btc
mov
sub
fcomps
sub
out
dec
push
jecxz
ja
adc
or
out
push
mov
and
insb
jl
jno
push
or
xor
hlt
daa
subl
lahf
mov
sub
dec
flds
dec
loopne
ret
add
or
test
test
loope
aaa
loope
imul
fwait
mov
push
xlat
mulb
shlb
or
xor
es
roll
mov
lock
pop
notl
and
out
movsb
outsb
lret
ds
dec
je
outsl
pop
and
roll
adc
adc
add
test
lds
dec
outsl
xchg
or
pop
jne
dec
xchg
adc
and
lds
jge
or
popf
adc
enter
fsubl
sbb
mov
push
aad
jnp
shrl
pushf
xchg
push
int3
dec
mov
mov
stos
lods
pcmpgtd
mov
mov
inc
je
jmp
fs
je
enter
or
sahf
cmp
mov
arpl
mov
mov
clc
or
mov
movl
in
jg
mov
mov
ja
imul
scas
cmp
popf
jbe
mov
pop
jle
ficomps
sbb
pop
iret
adc
mov
mov
push
inc
out
cmp
das
fadd
fcmovnu
sbb
jnp
iret
imul
mov
sub
xchg
daa
inc
cmp
mov
cld
cmp
es
mov
fs
push
mov
pop
cmp
add
stc
out
insl
jecxz
das
lods
insl
flds
pop
adc
push
push
dec
and
xchg
mov
push
xchg
jge
dec
ficompl
or
and
mov
push
aaa
mov
lret
or
inc
xorl
cmpsl
cs
movsl
adc
fstpt
pop
dec
add
sti
lahf
fidivl
addl
cmp
mov
lds
mov
das
movsb
sbb
fld
cmp
popf
xchg
pop
daa
xchg
dec
rcr
push
das
fwait
inc
xor
cmp
aad
lret
outsb
ret
nop
out
pusha
mov
inc
outsl
adc
inc
inc
inc
mov
pop
test
jle
mov
xchg
pop
inc
das
cltd
mov
stos
sbb
push
cmc
bound
ret
stc
aaa
xor
mov
subb
popa
rcrb
mov
mov
or
adc
movsb
xlat
daa
dec
scas
notb
repnz
shrb
test
xchg
out
repz
stc
mov
outsl
test
mov
add
pusha
add
jo
xchg
push
mov
sbb
xor
pop
add
add
test
ljmp
movsb
out
sbb
pop
jg
sbb
scas
std
push
ret
in
fs
lret
xchg
cmp
mov
and
xchg
ret
sub
mov
adc
cmp
push
jno
xchg
ss
cmp
pop
lods
sbb
fwait
push
lock
add
insl
jecxz
mulb
xor
negb
xchg
mov
jecxz
or
jge
stc
dec
xchg
push
rorl
sub
mov
pop
bnd
lcall
cmp
adc
aad
dec
addl
dec
or
je
inc
scas
inc
dec
pop
sarb
fwait
adc
sub
stos
inc
lods
ret
jmp
push
sub
mov
push
out
adc
pusha
fbld
and
fdivl
loop
dec
cmp
pop
mov
aas
or
ss
arpl
add
adc
cltd
mov
les
call
and
push
arpl
pop
add
jecxz
sahf
enter
xor
jnp
lahf
fistpll
loop
push
mov
pusha
filds
pushf
push
dec
ljmp
xchg
imulb
push
sub
fidivrs
sbbl
sbb
in
orl
mov
lds
notb
popf
cs
ja
fnstsw
inc
mov
or
mov
mov
adc
call
test
fildll
outsb
mov
sbb
shrb
mov
or
mov
cmp
data16
hlt
test
inc
scas
les
mov
mulb
fsub
jno
shl
stos
enter
pushf
push
xor
push
mov
popl
inc
mov
dec
jnp
scas
add
cmpsb
adc
test
pop
push
push
out
cmpsl
imul
push
push
fdivrl
push
push
jg
mov
loopne
mov
aaa
dec
aam
out
and
sbb
test
lds
push
sbb
in
xor
jbe
clc
sarb
out
sub
add
push
mov
xor
pop
push
insb
stos
addb
dec
or
pop
jge
xchg
jmp
jns
or
roll
mov
mov
pop
js
arpl
xor
outsb
pop
mov
xchg
push
dec
cltd
loopne
loope
mov
fldenv
add
dec
pop
adc
je
xchg
sbb
inc
and
push
dec
mov
dec
inc
pop
add
or
or
mov
sub
and
push
add
imul
add
loopne
push
jp
nop
in
pop
lea
mov
adcl
jmp
clc
icebp
inc
out
mov
jne
loopne
loopnew
fidivs
pop
cltd
push
inc
pop
sub
insl
cmp
enter
mov
xchg
inc
lods
rol
and
mov
and
std
xlat
jle
ljmp
loop
cwtl
test
mov
pop
imul
pop
adc
sub
loopne
and
cli
repz
lds
dec
add
jno
rcll
mov
push
pop
ret
adcb
lret
testb
pop
mov
adc
mov
xchg
jp
ds
cltd
jbe
sbb
rcrb
adc
fsubl
movsl
dec
jno
adc
jns
test
mov
xchg
or
das
mov
push
into
jbe
pop
outsb
fisubrs
dec
cmp
cltd
repnz
pushf
jmp
lret
stos
movl
mov
icebp
jns
imul
xchg
push
dec
push
addr16
fcmove
jo
es
and
popf
movsl
cli
sarb
outsl
jo
sub
mov
rcl
push
jo
arpl
adc
push
std
xchg
jae
testl
jo
loop
cltd
loop,pt
inc
jb
sub
push
iret
dec
test
insb
ljmp
sar
leave
and
je
or
adc
mov
fsts
je
and
lret
bound
lods
add
dec
push
adc
push
mov
push
adc
dec
fistpl
or
jnp
jns
mov
insl
pop
fadd
inc
push
mov
xor
xlat
arpl
jne
cmpsb
iret
sarl
xchg
pop
push
movsb
and
bswap
add
sti
mov
lcall
popf
sahf
cmp
jle
push
sub
lcall
xchg
mov
pusha
out
psrlq
stos
shr
fs
cltd
push
mov
int3
cmp
and
pop
push
std
test
jne
xlat
pusha
fidivrl
xor
gs
sub
out
stos
inc
fnstcw
js
pop
push
or
ficoms
gs
xchg
jns
test
and
mov
push
mov
xchg
mov
lea
xor
adc
incl
pushf
mov
inc
scas
mov
aaa
or
popf
mov
push
data16
push
fisttpl
imul
mov
push
pop
mov
jne
int
aam
repnz
shrb
lods
jo
dec
imul
and
add
out
jae
mov
shlb
xor
mov
add
iret
cwtl
adc
dec
sbb
and
mov
addb
es
or
jl
mov
push
xchg
jmp
sbb
lock
mov
leave
loope
repz
jbe
add
orb
pop
leave
out
jge
pop
sahf
pusha
scas
lret
ds
push
ss
push
sub
or
jle
testb
sub
xor
lcall
mov
sbbb
push
das
cwtl
out
ljmp
jb
add
out
push
je
or
pop
scas
mov
push
inc
mov
testl
sub
out
mov
cwtl
js
mov
push
dec
adc
push
ror
in
pop
and
je
inc
mov
inc
sub
mov
repnz
fnsave
mov
dec
push
inc
inc
fnsave
ret
incb
mov
fimull
in
testl
iret
lcall
pop
push
xchg
adc
lods
imul
mov
faddl
int3
out
sbb
dec
enter
mov
and
push
sub
cmp
movsb
mov
insl
and
scas
out
and
xor
test
clc
mov
xchg
gs
sahf
enter
mov
mov
pop
add
bound
and
jb
into
sbb
dec
subl
nop
popa
mov
mov
push
repnz
stc
pop
loop
test
adc
mov
and
cmpb
stos
xchg
mov
mov
mov
ret
fs
jge
pop
sub
push
js
push
cmp
or
popa
or
add
sbb
add
fstpt
dec
mov
sub
pop
push
in
and
pop
test
xchg
hlt
mov
pop
sbb
add
fstl
hlt
ret
lahf
push
lcall
loop
ljmp
pop
push
jae
ret
in
pop
divl
inc
jecxz
add
adc
sbb
adc
pop
jbe
lods
mov
mov
insb
inc
lcall
push
icebp
lahf
mov
nop
stos
test
mov
fs
and
sahf
ficoml
scas
repnz
inc
in
push
push
pop
jno
mov
inc
dec
mov
lcall
xor
insb
pmaxsw
dec
fsubl
add
adc
insb
xor
xchg
dec
inc
sbb
jb
fisubs
adc
gs
push
push
stos
pusha
in
add
sub
or
adc
rcrb
lock
jnp
mov
rclb
pop
cmpsl
aad
mov
or
jno
fucomip
and
xchg
push
or
add
fcoml
push
paddusb
sarl
rcrl
lret
sarb
aaa
push
out
dec
pop
fwait
dec
dec
or
dec
jno
jo
lea
lods
jmp
xcrypt-ctr
cmpsl
fimuls
jge
push
push
dec
xchg
cmp
sti
jmp
adc
adc
sbb
add
iret
pusha
push
dec
jnp
and
inc
add
cli
cld
add
data16
clc
jno
popa
adc
pop
std
xor
xchg
sub
sbb
adc
xor
xor
ror
test
pop
push
fst
add
xchg
add
lret
rorl
outsb
push
pushf
or
or
lret
mov
jp
fldenv
in
les
adc
ficompl
hlt
push
stos
mov
inc
pop
andb
daa
xor
shll
mov
lahf
add
jnp
testl
cmpb
add
or
loop
mov
mov
aas
xchg
loopne
negl
jg
test
mov
lret
cmp
outsl
and
pop
and
fcoms
xor
ja
fisubs
lcall
jl
pop
fnstcw
push
das
repz
or
lret
inc
xor
hlt
pushf
ret
xchg
cmp
clc
adc
xor
lock
rorl
movsl
hlt
shlb
jecxz
dec
or
pop
xchg
insb
out
mov
sub
adc
push
fnstenv
stc
fistpl
int
movl
and
pusha
cmp
repnz
jle
pop
adc
fidivs
lods
or
inc
scas
mov
jns
sti
jne
push
dec
cmp
add
imul
sub
push
cmp
into
or
pop
test
frstor
inc
ljmp
inc
push
xor
add
inc
push
push
rol
lahf
aam
xchg
jp
ss
mov
pop
js
out
jecxz
mov
adc
and
out
sub
aam
cmp
in
add
jno
jno
dec
lock
jl
loop
out
aad
in
fisttps
push
mov
outsb
insl
test
mov
out
sub
add
push
minps
movsl
rol
rdpmc
ftst
dec
or
testb
pop
jge
ds
xchg
mov
ljmp
xlat
mov
out
cmpsl
lahf
fsubs
fisubl
mov
mov
es
gs
sbb
xchg
add
int3
mov
xchg
xchg
and
dec
adc
mov
popf
cmpsl
cmp
out
cmp
sbb
mov
outsl
dec
push
incb
mov
cs
std
fs
add
icebp
sub
mov
cmp
mov
push
inc
cmp
mov
orb
mov
stos
sbb
push
xchg
pop
jle
xor
rorb
and
xor
xor
adc
mov
adc
ja
xchg
das
pop
jb
adc
lret
adcb
clc
ljmp
fcompl
and
jg
and
sbb
fistps
in
push
add
xor
cmp
add
js
das
jae
push
pop
fcompl
and
fidivl
cs
stos
sahf
mov
nop
jmp
in
sbb
jmp
int3
push
lds
shl
xchg
adc
call
mov
mov
push
mov
pop
and
out
push
dec
mov
push
sub
lahf
jl
std
rcll
pushf
data16
inc
lea
adc
push
jno
adc
push
mov
ret
inc
repnz
aam
es
pushl
sub
or
shll
sbb
decb
or
inc
jnp
outsb
push
lahf
push
jnp
pusha
insl
jl
outsl
mov
add
out
insb
pop
sub
pop
xchg
je
xor
stos
lds
scas
pop
fisubrl
insb
notb
xor
ss
add
dec
out
add
repnz
movb
mov
cmpsb
mov
pushw
faddl
mov
mov
popa
aam
lock
mov
mov
je
inc
out
or
jle
lds
inc
inc
sbbl
negl
leave
iret
pop
cmp
cmp
push
sbb
fnstenv
push
lahf
sbbl
sbb
das
stos
repz
cld
popa
adc
jmp
xor
jns
ds
loop
pop
movsl
pop
rcl
sub
xchg
icebp
and
fs
mov
add
sub
dec
xorl
icebp
xchg
in
call
adc
mov
jnp
and
into
clc
sbb
jmp
daa
mov
add
cmpsl
xor
shrb
push
arpl
cmpl
jnp
ds
push
mov
movsb
or
pop
imul
pop
enter
xchg
es
jbe
mov
ljmp
mov
xchg
inc
icebp
mov
arpl
es
aam
adc
ror
movsl
add
and
inc
ja
jne
jecxz
dec
push
flds
xchg
add
dec
js
xchg
out
pop
in
inc
lret
clc
pop
inc
call
sub
popa
and
inc
dec
add
in
and
js
and
addb
mov
call
data16
mov
xor
cmc
cmpsb
push
push
scas
repz
xchg
data16
xor
sbb
add
mov
adc
inc
adc
pop
ljmp
out
add
sbb
jp
jns
shrb
out
imul
lahf
mov
cmp
ret
cs
sbb
sbb
jge
jns
cmc
insl
inc
or
mov
and
fdivrl
addb
add
jg
cmc
cli
das
pop
js
int
inc
mov
subb
add
push
shll
sbb
jbe
sarl
pop
lea
jo
aas
mov
test
push
cli
pop
lahf
sub
xor
mov
sbb
aaa
outsb
jnp
jns
out
sbb
pop
repz
scas
xchg
adc
fiaddl
sbb
lcall
hlt
lock
lock
jp
pop
mov
mov
sub
mov
cmpsb
inc
cmp
sub
dec
or
cmp
dec
add
jmp
bound
test
xchg
ud1
fstpl
add
pextrw
inc
out
cld
push
in
xlat
jnp
cmp
pushf
pop
inc
test
movsb
mov
and
push
xchg
adc
inc
sub
test
push
cmc
or
movl
loope
dec
cmp
add
lcall
sub
sti
fidivrs
mov
xchg
pop
lcall
enter
ret
lret
mov
dec
sbb
shlb
out
addl
or
rorl
sub
cs
cltd
xchg
jge
or
testl
and
push
xlat
mov
mov
jg
daa
fadds
dec
inc
cwtl
mov
cmp
je
jbe
mov
xchg
add
jg
pop
mov
sub
cmpsl
es
pop
in
test
mov
push
dec
cmp
mov
fwait
sub
cmp
xor
sarl
rolb
adc
xchg
dec
rcrb
inc
push
int
jge
and
mov
int
test
pop
sbb
pop
pusha
and
push
lods
pop
shr
notb
fidivs
jno
call
sub
test
mov
fsub
push
mov
cwtl
mov
pop
pop
mov
jg
inc
fdivrl
mov
cmc
cmp
lea
dec
int3
push
cmp
out
and
add
subb
fwait
mov
cmc
cmc
shlb
lret
jno
in
sbb
leave
in
push
gs
mov
jmp
adc
imul
outsl
sbb
mov
dec
xchg
inc
sbb
dec
shlb
inc
jne
sub
lods
xchg
pop
sub
ja
jmp
shrd
xor
pop
out
daa
mov
out
ds
mov
cld
push
addb
or
lods
and
mov
dec
movsb
hlt
push
push
enter
push
mov
xor
lock
lds
sbb
add
and
loop,pn
mov
sti
cmpsl
out
xchg
mull
das
xchg
or
sti
pop
ljmp
xchg
int
sbb
xor
fwait
mov
mov
lret
ss
outsl
or
jno
xor
icebp
subl
push
pop
jle
testl
xor
and
test
add
imul
lea
imul
aaa
out
pop
mov
pushf
shll
mov
pop
mov
jno
sub
sbb
sbb
outsl
pop
mov
mov
shrl
adc
repz
movsb
or
sbb
inc
adc
push
outsb
mov
xchg
ret
loope
fucomp
test
out
or
inc
pop
jb
bound
in
jle
xchg
jne
cmp
xchg
test
enter
pop
jg
jnp
add
adc
es
or
dec
bound
test
or
loop
movsw
loopne
mov
shrl
movsb
jo
cmp
push
jecxz
insl
enter
adc
or
pop
test
jnp
adc
repnz
scas
ret
xchg
sub
out
test
sub
inc
cltd
iret
jbe
test
push
repz
fldl
les
ja
addl
ja
dec
push
leave
pop
bound
scas
nop
jmp
pop
into
jae
xor
and
mov
xlat
fimuls
adc
lods
fbstp
es
add
fcoms
mov
movsb
cmpsb
and
lcall
inc
loopne
in
insb
mov
mov
stos
sbb
adc
insb
cmc
data16
pop
int
jmp
dec
pop
aaa
lods
das
jb
jae
neg
or
or
mov
pop
xlat
push
icebp
ja
mov
stos
jnp
xor
je
lds
dec
dec
les
mov
aaa
xchg
mov
nop
xchg
inc
or
das
jl
inc
or
cmpsb
xchg
xchg
add
inc
jmp
fptan
xchg
inc
cmpsb
sbb
adc
pop
nop
jmp
inc
jno
jae
out
ret
pop
lret
stc
cmp
jecxz
movsb
frstor
mov
stos
lcall
pop
xor
inc
call
adc
je
sbb
dec
pop
orl
xchg
sub
sbb
std
sahf
xor
cwtl
mov
popf
fildll
cmp
into
addr16
mov
repz
inc
adc
inc
sub
dec
cmpsb
loopne
sti
inc
inc
mov
insb
or
adc
mov
mov
inc
jge
in
sar
xor
pop
js
sub
dec
push
fnstcw
lds
test
xlat
andb
test
int
add
fldt
xor
mov
sahf
jg
push
jae
dec
test
push
jne
cmpsb
sbb
fucomp
sahf
cmp
int
jb
or
and
es
add
lds
mov
dec
add
mov
or
ret
jecxz
xor
jmp
cmc
in
cmp
fstl
mov
mov
pop
and
jecxz
out
int3
mov
dec
jb
das
lret
adc
xchg
cmc
push
jb
lcall
enter
xchg
xlat
gs
cli
popa
cmp
stos
push
sub
jmp
sub
ljmp
in
test
mov
xchg
stos
or
jge
aas
shll
xchg
jno
mov
cmp
leave
bound
mov
adc
sub
loope
loopne
pop
inc
and
add
mov
out
inc
inc
ss
fisubrl
mov
jae
in
jbe
rolb
or
jecxz
dec
fsubrs
dec
sbb
out
insl
sbb
sub
or
add
fisubs
pop
clc
cmp
jle
scas
jb
test
jmp
push
hlt
or
pusha
cmc
cmpsl
add
xchg
frstor
aas
jns
mov
jns
and
imul
ret
cld
inc
jl
sub
cmc
rorl
mov
movsb
xchg
push
clc
jae
dec
jg
fldl2t
setnp
repz
lcall
mov
xor
loopne
mov
pop
mov
mov
mov
fdivl
push
loop
dec
test
popf
ficoms
es
ret
push
aaa
dec
cmc
lcall
sbbb
cmp
push
addr16
addb
dec
jmp
pop
aad
xlat
fwait
aas
out
mov
inc
mov
out
mov
mov
std
jb
cmpl
and
inc
stos
jae
in
jg
lods
loopne
pusha
ja
pop
xor
sub
push
jecxz
lods
sbb
or
xchg
add
cli
enter
inc
sahf
int3
push
jl
lods
das
jns
divl
divb
in
imul
fists
stos
js
lds
or
xchg
sub
inc
adcb
jo
je
lods
push
inc
xor
sbb
fwait
int
in
sti
mov
sub
insb
mov
je
push
rolb
pop
mov
out
popf
data16
push
js
bound
or
in
lods
xchg
lods
lods
xor
cmp
je
ja
imul
mov
push
cmpsl
mov
dec
push
mov
stos
clc
faddp
cwtl
js
pushf
std
orb
lock
das
addr16
add
xchg
or
cmp
je
and
loop
mov
lods
nop
sub
adc
ja
cld
popa
jl
xor
dec
test
fdivs
mov
push
andb
aam
cwtl
pop
out
jb
test
mov
fisubrs
inc
cmp
cltd
fninit
fildl
adc
das
mov
pop
iret
add
in
std
jbe
add
sub
mov
repz
mov
pop
mov
fcmovnu
mov
push
dec
test
fwait
inc
or
lods
sahf
je
add
add
xchg
aaa
ja
push
test
and
xor
out
dec
jnp
push
clc
push
or
cli
adc
mov
dec
dec
inc
test
xchg
add
xchg
sub
fmul
push
mov
bnd
xchg
mov
test
push
pushf
mov
iret
mov
add
cmp
js
xor
or
stc
jnp
xchg
dec
pushl
cmpl
xor
ud0
stos
repnz
in
mov
lock
add
xchg
scas
addl
mov
lret
scas
pop
loop
mov
subb
sbb
pop
stos
mov
jb
test
or
jmp
dec
adc
fcomp
xchg
sub
push
lcall
fucom
lock
push
mov
and
les
xchg
and
sub
sti
or
fdiv
cmpb
pop
adc
shll
pop
lods
push
ja
jb
adc
lret
mov
in
and
add
call
mov
pop
adc
pushf
aas
fucom
xchg
loope
push
movsb
sbb
dec
out
cltd
cmp
mov
mov
mov
xchg
fcmovb
rep
jno
lea
mov
not
xchg
cmp
xchg
pop
add
js
sti
add
mov
imul
inc
fimuls
push
popf
mov
mov
push
scas
bound
cmc
cmp
mov
imul
ds
ss
xchg
mov
mov
fisubrl
out
or
or
cltd
out
add
mov
cmp
pop
xchg
or
je
adc
fcmovu
push
stos
scas
jo
mov
gs
mov
fwait
imul
repz
and
sbb
mov
jnp
mov
mov
inc
xchg
mov
cltd
movsb
lret
movntps
ret
jg
mov
pop
shll
les
rcrl
sub
pop
mov
jge
lock
jmp
fstpt
xor
inc
std
das
mov
adc
sub
ret
stc
mov
sbb
lock
inc
and
cmp
cwtl
pop
mov
xchg
jns
xor
inc
pop
and
push
sub
mov
push
mov
bound
and
sbbl
aaa
adc
xlat
pusha
daa
xrelease
push
hlt
dec
add
mov
je
cmp
imul
pop
enter
jns
les
push
aaa
or
sub
add
call
inc
in
fdivrl
jne
pop
and
cmp
in
rcrl
mov
or
fs
mov
js
push
pop
popa
icebp
incb
sub
pop
fsubp
mov
inc
rcrb
shlb
lods
dec
mov
ljmp
in
sub
or
lcall
pusha
jo
xchg
ds
popf
rorw
jae
mov
sbb
sbb
sbb
inc
scas
mov
cmpb
inc
mov
inc
mov
sahf
and
add
xchg
sub
mov
pushf
push
xlat
adc
jae
jg
dec
push
inc
or
in
pop
adc
mov
dec
lods
xor
int3
dec
fsts
mov
sahf
icebp
es
inc
int
mov
jl
jle
add
inc
outsb
imul
xor
jp
out
cmp
fnstenv
in
lods
in
cmp
aam
fsub
mov
jno
and
test
inc
sbb
adc
je
inc
jecxz
sbb
mov
das
out
mov
inc
ss
pop
push
in
inc
stos
adc
data16
xor
pop
shl
xchg
cli
std
nop
outsl
xor
jmp
aam
inc
push
push
mov
mov
cmpsb
dec
aad
or
fistpl
inc
gs
add
jp
arpl
subps
adc
cmc
jg
and
shll
ret
mov
scas
mov
shl
cwtl
das
fwait
push
or
call
mov
mov
stos
fwait
and
xchg
lds
push
adc
dec
jno
dec
pop
sbb
or
es
adc
xor
mov
inc
jmp
add
rcll
push
sbb
push
inc
push
pop
and
shrb
or
xchg
in
popa
int3
gs
inc
sub
ljmp
call
and
add
int
mov
stos
xor
mov
push
repnz
adc
adc
and
scas
adc
cmp
in
jns
sub
jge
rcl
fwait
mov
dec
mov
jmp
mov
incl
xchg
rolb
arpl
sub
lods
mov
loope
or
scas
xor
and
data16
pop
inc
pop
mov
mov
ret
mov
into
into
jb
aaa
and
and
shrl
adc
mov
icebp
pop
xchg
jns
adc
jno
xchg
pop
jns,pn
das
aad
stc
test
and
fs
pop
mov
js
push
mov
stos
sub
jne
push
lcall
data16
addr16
mov
lods
sbb
dec
fisubs
xchg
fisubrl
and
pop
or
jnp
popa
cwtl
gs
lods
push
push
fstp
ja
push
mov
lcall
cld
fwait
jecxz
cltd
lea
jb
pushf
mov
adc
push
in
imull
push
sahf
pop
sbb
out
mov
data16
jne
sub
and
and
aas
cwtl
sub
cmp
xchg
lahf
loop
pop
xchg
mov
jno
xchg
mov
imul
mov
ret
int3
ret
xchg
adc
mov
cmp
add
ret
fildll
cs
inc
cmpsb
mov
cmp
cmp
out
dec
jg
push
test
mov
fistpl
push
int
dec
idivb
push
scas
pushf
inc
out
sbb
push
xor
xchg
mov
popf
sub
das
mov
cs
ret
adc
jecxz
xchg
rcll
xor
in
inc
ret
fwait
into
jmp
call
outsb
das
lds
push
xchg
mov
inc
out
aaa
loop
dec
sbb
inc
scas
dec
cmc
pop
and
dec
mov
bound
in
arpl
psrlq
lods
sub
outsb
cmp
pushf
xchg
push
ja
cmp
popa
jne
push
sub
push
pushf
leave
cmp
test
into
loopne
adc
rorb
mov
out
scas
pop
fldenv
es
notb
push
push
or
andw
cwtl
or
sub
fdivr
fcmovnu
push
gs
xor
mov
push
dec
lea
ret
dec
xchg
in
adc
adc
xor
dec
lret
movsl
inc
and
dec
fnstcw
loop
mov
aaa
push
mov
js
aas
leave
adc
scas
sub
mov
es
pop
mov
jge
hlt
pop
dec
push
cmp
fcomip
call
and
insl
inc
or
in
aas
lds
or
fstpl
test
imul
xchg
adc
jge
call
jns
mov
mov
ljmp
scas
dec
popf
fisubrl
bound
ret
xchg
dec
test
cmp
add
les
inc
in
push
jge
lcall
ror
gs
inc
sub
fcoms
ret
jns
dec
leave
test
flds
mov
adc
mov
fisubl
ret
xchg
inc
push
xor
es
push
test
or
icebp
xchg
mov
cli
fbld
jnp
xchg
mov
cmp
rorb
mov
sbb
sbb
mov
bound
fdivr
pop
pop
xlat
pop
inc
sub
fstps
je
insl
iret
ds
add
into
fcompl
shlb
mov
ljmp
lcall
ret
ret
scas
rcr
imul
jl
shll
je
loopne
cmp
add
mov
clc
lahf
fwait
pop
mov
out
inc
jbe
std
push
sbb
std
mov
jecxz
push
std
addb
movsb
pop
std
shll
push
in
bound
xchg
inc
and
push
addb
fldcw
inc
jae
pop
sbb
sub
push
jbe
scas
mov
sub
cld
cmp
sub
sbb
test
dec
jle
insl
movsl
jg
add
outsb
inc
arpl
or
js
mov
mov
leave
push
stos
push
insb
push
push
jnp
sub
adc
sub
icebp
in
call
imul
xor
movsb
lods
repnz
mov
sbb
fcmovnb
fyl2xp1
dec
repnz
xlat
add
jmp
in
sub
pop
or
jmp
jns
or
lahf
stos
push
ret
push
push
jle
mov
insb
cs
out
sbb
jo
dec
xchg
sbb
xor
insl
aas
roll
scas
sub
xor
cmp
sbb
xor
cltd
out
mov
adc
mov
xchg
daa
inc
lret
and
lods
mov
test
imul
push
data16
mov
in
jmp
addr16
jno
addr16
arpl
inc
and
jmp
mov
xchg
nop
lods
test
ljmp
mov
dec
xchg
daa
loopne
je
or
pop
lods
shrb
clc
cwtl
and
dec
bound
ds
loop
pop
sub
and
jecxz
cmp
ljmp
pop
mov
add
push
push
sahf
cmp
mov
movsb
or
cmp
or
testl
add
cmp
pop
adc
fcompl
or
outsb
aam
pop
out
ljmp
and
je
xchg
adc
pop
cld
xchg
sbb
loopne
xlat
gs
ja
lds
dec
movsl
cmp
xchg
inc
push
jmp
mov
ja
ds
stos
or
lods
and
pop
dec
xor
cmp
loopne
sbbb
fstl
rolb
jb
inc
hlt
ja
mov
or
aas
push
sbb
or
mov
int3
push
repz
loopne
shr
pop
sbb
ss
ja
jle
loope
into
and
imul
mov
repnz
scas
inc
bound
adc
or
push
dec
jp
movaps
mov
push
and
rcrl
fdiv
cltd
mov
lds
insb
or
mov
mov
push
jmp
xchg
inc
or
lods
addr16
xchg
and
xchg
sub
xchg
lcall
enter
or
ficomps
xchg
ret
jne
in
cmp
ds
fnstsw
in
movsb
shl
or
add
mov
shll
mov
adc
fnstcw
in
cmp
mov
std
ret
mov
lds
fidivrs
and
push
fadd
daa
test
inc
int3
jmp
cltd
pushf
jl
mov
or
cmp
add
imul
and
mov
aam
in
push
cmp
dec
in
es
testb
in
cwtl
push
int3
mov
sbb
or
xchg
sub
popa
test
sub
mov
je
xchg
stc
cmc
or
jae
rol
mov
inc
mov
mov
call
mov
loopne
call
outsb
push
shll
cmpsl
out
xchg
daa
in
xchg
mov
nop
out
lea
xchg
dec
dec
pop
repnz
cmp
lock
lods
test
and
fcoml
popf
sub
dec
in
mov
jp
stos
xor
lret
push
jnp
test
outsl
pop
add
pop
scas
sbb
mov
test
mov
int
daa
mov
and
lret
jno
in
addl
mov
jbe
push
fisttpl
lahf
sbb
repz
pusha
repnz
jl
jmp
lret
xchg
mov
sbb
mov
dec
xchg
rol
aas
lods
clc
jbe
mov
rorl
nop
shll
jb
popf
or
movsl
sub
stos
add
insl
mov
jg
cmc
cmp
ret
cltd
and
pop
pop
stos
push
nop
jecxz
mov
pop
psubusw
cltd
sbb
mov
loopne
lcall
pop
scas
jbe
cmc
cs
adc
push
sbb
jb
test
out
ret
bound
js
aad
dec
jns
cli
cld
shll
cmpsb
xor
scas
rorb
fistps
cmpsl
xchg
jno
fildl
xor
inc
xor
or
cmp
out
std
push
jg
lods
das
fcoml
cmc
clc
arpl
js
clc
cwtl
mov
push
inc
fsubrl
scas
mov
adc
dec
jb
mov
int3
adc
je
jb
mov
jbe
sbb
and
sar
clc
mov
inc
mov
push
inc
aas
cmp
mov
xchg
jmp
ret
jmp
test
aad
inc
pop
or
lahf
xchg
scas
fnstcw
ficoms
and
xchg
addr16
inc
and
mov
push
fs
mov
mov
lods
fwait
ljmp
addl
js
jp
and
loope
insl
std
in
jle
int
jnp
push
lock
jae
out
pushf
cli
fistpl
cmc
das
es
clc
push
mov
mov
ret
jge
push
add
inc
cmp
xor
fisubs
adc
cmpsb
adc
insb
stc
mov
mov
ret
adc
ret
divl
add
add
lods
adc
mov
aam
daa
or
push
dec
cmpsb
or
mov
cmp
push
scas
subb
fstps
push
jg
ret
sarb
jno
addsubps
int3
sub
sbb
mov
dec
dec
add
inc
ds
pop
popf
mov
cmp
push
out
divl
aas
mov
rorl
adc
cmp
ss
push
pop
test
push
sub
or
dec
push
jns
fistps
dec
daa
add
sub
push
movsl
push
add
xchg
mov
xor
fstl
or
and
loope
cwtl
mov
and
mov
insl
loop
and
jae
adc
dec
adc
loopne
mov
call
push
jge
and
insl
jns
adc
xor
sbb
cld
and
ret
pusha
adc
mov
repnz
mov
pop
pop
mov
xlat
in
mov
inc
push
or
mov
stos
cld
les
xor
out
inc
lcall
pushf
insb
loopne
mov
fwait
iret
jae
hlt
inc
ret
push
clc
lret
mov
cmp
sub
xchg
inc
inc
cmpsb
pop
arpl
adc
int
shl
jmp
pop
aam
aas
xor
dec
mov
fisubrl
xorl
mov
pushf
sbb
lea
jl
dec
pop
cmpsb
in
movsb
leave
out
jns
adc
loope
add
xor
cmp
andl
cmp
cmp
orl
es
or
mov
mov
dec
jge
push
sub
xchg
sti
repnz
movsl
pop
pop
insb
loopne
add
mov
adc
xchg
xor
shlb
pop
push
or
ja
fs
fsubrs
xlat
into
pop
mov
lea
outsb
cmp
test
push
jg
add
addr16
and
shll
adc
pop
mov
jne
outsb
leave
pushf
lret
push
sbb
and
cmpsl
pop
cmpb
pop
jecxz
mov
scas
fldcw
adc
lahf
mov
mov
enter
iret
nop
mov
dec
imul
inc
push
lea
mov
pop
push
ss
cmpsl
cltd
mov
sub
cld
pop
cmp
dec
mov
nop
negl
sbb
mov
jbe
nop
test
pop
xchg
mov
pop
sub
pop
mov
cmp
dec
pop
push
push
pop
mov
sub
out
nop
movsl
mov
sub
xchg
stc
std
and
int
shrb
inc
lods
lds
inc
inc
frstpm(287
sahf
enter
dec
ds
mov
push
lcall
movsb
fisubs
sub
iret
es
xor
iret
je
ret
pop
std
jp
cli
xchg
mov
jne
repnz
cld
pop
xchg
push
mov
or
inc
dec
popf
xchg
xchg
test
pop
ds
cmp
in
mov
lret
xor
adc
bound
add
pop
xchg
sbb
jns
or
sbb
or
xchg
decl
das
fs
cli
negb
mov
cmp
mov
sub
push
gs
or
imul
push
dec
into
xor
pop
jmp
sbbl
popa
lcall
mov
les
stos
mov
xor
cmp
jecxz
push
mov
dec
mov
stc
jp
mov
add
popa
mov
inc
pop
and
pop
jl
jmp
fsin
cmc
shlb
jo
aas
mov
insl
test
jae
inc
jg
movsl
aas
loopne
and
shll
lock
shrb
cmpsb
out
sub
pop
jp
sbb
aaa
sub
mov
into
cli
add
sbb
mov
mov
push
popf
addr16
add
and
cmc
xor
or
mov
jb
es
mov
jge
bound
rorl
jmp
shll
add
lock
scas
mov
pop
lds
inc
adc
mov
fcoml
test
clc
fiadds
mov
mov
sub
repz
test
jecxz
movsl
in
cmp
dec
push
mov
int
int3
mov
and
jbe
adc
push
xchg
test
pop
stos
fsubl
mov
cmc
repz
push
clc
push
in
jns
and
push
out
arpl
inc
scas
jnp
xchg
fstps
push
cmpsl
arpl
cmc
sar
std
xchg
jae
push
add
test
add
shl
add
push
clc
sbb
and
shrb
adc
adc
daa
mov
mov
pop
std
cmpsb
stos
and
aam
jns
adc
sub
lds
add
add
imul
mov
mov
insb
or
fdivl
mov
mov
aad
daa
insl
int3
dec
iret
lcall
stos
mov
insb
into
hlt
and
pop
push
loop
jle
push
test
cmp
push
aas
lods
jmp
adc
cmp
adc
jno
imul
shr
outsb
mov
out
idivl
insb
in
int
icebp
aas
adc
xchg
ficoml
adc
jbe
adc
push
test
ret
js
pop
mov
or
and
out
cld
mov
scas
call
dec
cmpsb
aas
sub
pop
adc
push
add
jecxz
lods
pushf
and
punpckhwd
imul
inc
lock
add
sub
scas
pop
in
push
test
popa
sbb
jae
mov
mov
inc
jae
jno
gs
mov
add
test
enter
push
cmp
sbb
mov
jecxz
mov
push
fsubrl
mov
aad
cs
shll
pop
sbb
jae
inc
neg
test
xchg
scas
ds
dec
ljmp
sub
push
test
insb
cmp
xchg
mov
add
mov
mov
shr
push
cmp
xchg
rcll
imul
jle
sub
push
mov
xchg
test
sbb
mov
cmpsl
pop
jae
jp
hlt
int
xor
push
mov
jb
cmc
cmp
xchg
pop
sub
fildll
push
xchg
cmp
pop
sub
xchg
mov
inc
sub
inc
cmp
clc
cwtl
iret
imul
adc
imul
repz
testb
insb
sub
icebp
shll
inc
dec
adc
adc
in
mov
lret
dec
fdivs
cli
dec
pop
add
cli
xor
and
push
icebp
fwait
into
mov
cmp
arpl
es
cmp
dec
push
lods
add
test
push
dec
je
push
cs
lahf
mov
out
adcb
fwait
in
or
xchg
xor
mov
jmp
pop
pop
daa
dec
in
loop
scas
jge
pop
ljmp
mov
ss
movsb
dec
shrb
adc
inc
add
stos
mov
mov
int3
leave
mov
push
scas
push
push
lret
mov
push
test
scas
pop
add
arpl
cmpsb
pop
idivl
std
clc
ss
popf
ret
int
enter
mov
stc
loope
inc
or
lods
nop
mov
outsl
mov
push
insl
adc
imull
ljmp
adc
jns
pop
iret
sbb
pop
sti
in
mov
xchg
xchg
jg
jnp
ret
add
cltd
stc
push
pop
mov
test
ds
in
jns
scas
test
clc
jbe
fmull
dec
xchg
mov
scas
xor
mov
pop
inc
and
pop
mov
bound
mov
outsb
aam
or
fsubrs
push
filds
inc
mov
sahf
pushf
adcb
lea
mull
movsb
sub
aam
sub
in
andb
mov
aas
or
outsl
lods
cmpsl
sub
fldl
movsl
mov
adc
pushw
les
jne
fcompl
sbb
and
dec
lock
int
inc
mov
inc
cmpsl
xchg
ljmp
jbe,pn
sahf
dec
dec
ret
pop
or
imul
adc
in
jnp
sar
mov
int
movsb
pop
cmpsb
scas
into
movsl
mov
je
sahf
pop
push
fistpll
repz
pop
addl
stos
mov
sbb
adc
xchg
push
int3
pop
dec
icebp
loope
sbb
add
divl
push
scas
lods
add
jmp
xchg
xchg
inc
xchg
das
pusha
or
mov
inc
adc
jmp
push
mov
scas
test
js,pt
in
lret
je
mov
or
adc
mov
mov
and
pop
outsb
repnz
mov
insl
xchg
pop
scas
lcall
mov
aam
mov
xchg
ret
shlb
jle
out
faddl
xchg
inc
adc
jo
mov
sbb
ret
shlb
scas
aam
call
push
push
lock
outsb
mov
sub
sbb
out
pop
sbbl
cmpsl
sub
cltd
mov
inc
mov
sahf
sub
xor
addr16
jecxz
jmp
ja
xorl
ljmp
mov
shll
ss
or
je
outsb
push
push
add
sub
sub
scas
js
sbb
sbb
or
jbe
and
mov
pop
add
lret
jo
or
iret
inc
ja
add
add
fidivs
sub
lret
pop
idivl
add
mov
mov
xchg
bound
or
mov
shr
pusha
inc
mov
lret
loop
ret
xlat
sbb
aaa
sbb
push
mov
mov
jno
jae
shrb
loop
mov
mov
flds
sahf
jb
pop
sub
bound
lcall
int3
cltd
mov
mov
addr16
cltd
jb
popa
outsl
and
dec
outsl
cmp
pop
jp
jbe
pop
imul
sub
in
outsb
test
mov
arpl
pop
lcall
and
adc
jge
inc
inc
mov
enter
ljmp
aam
and
pop
xchg
roll
mov
mov
mov
push
and
insb
dec
push
ffree
adc
repz
inc
jl
inc
mov
sub
xorl
inc
push
jbe
jge
int
gs
adc
movsl
subb
cwtl
xchg
jns
adc
mov
dec
pop
adc
loopne
mov
xchg
sbb
xor
hlt
or
jle
sub
xchg
test
jmp
pop
shrb
leave
inc
lods
test
iret
push
jle
enter
mov
cmpsl
sub
and
adc
and
mov
mov
movsb
adc
andb
xor
cli
jb
clc
add
sbb
xchg
leave
lret
movsb
push
out
inc
pop
inc
fwait
dec
idivb
shr
xchg
cmp
call
les
adc
inc
push
add
ja
cmp
cwtl
add
adc
int3
leave
add
sahf
in
adc
stos
inc
mov
iret
mov
pop
int3
add
push
insl
add
dec
bound
sbb
dec
mov
testb
mov
dec
cs
nop
fiadds
imul
fistpl
adc
fists
pop
mov
test
mov
push
xlat
dec
lret
clc
mov
dec
mov
shl
jb
add
ss
ds
aas
out
and
mov
cmc
hlt
push
ret
adcb
mulb
loopne
dec
inc
add
inc
aad
and
mov
ret
sahf
fwait
cmp
mov
es
cmpsb
stos
cwtl
xchg
mov
adc
jge
adc
xchg
aam
shrb
xchg
push
jmp
adc
sarb
xchg
sbb
xchg
bound
mov
out
dec
sub
mov
add
cmpsb
fs
les
aad
addr16
enter
push
call
adc
jg
xor
pushf
jnp
add
pop
or
lcall
xchg
scas
call
addb
lds
fwait
cld
xor
dec
lahf
jl
lret
fildll
incl
jecxz
xor
std
push
inc
mov
cmp
or
mov
inc
adc
or
test
lret
pop
dec
outsl
dec
test
pop
bound
pop
mov
pop
ss
movsb
in
pop
fidivs
idivb
dec
sub
scas
xchg
xchg
inc
aad
cmp
jae
addr16
lcall
jbe
popa
inc
dec
sub
or
inc
jle
arpl
aad
fstps
or
int3
dec
jns
push
lcall
aam
insb
xor
push
inc
push
adc
movsb
xor
lds
pop
xlat
inc
mov
mov
std
imul
ja
mov
negl
jp
test
out
sub
in
repnz
test
lods
mov
and
fcmovnb
and
in
std
mov
inc
or
fdivr
lods
xchg
mov
xchg
jmp
cltd
mov
jmp
and
jge
sub
aaa
into
push
push
das
lret
mov
aas
adc
mov
jb
xchg
push
shl
push
test
jnp
xor
clc
in
jle,pt
jl
push
les
mov
mov
pusha
inc
and
scas
movsb
mov
add
lcall
mov
loopne
jg
jp
int3
adc
stc
mov
mov
es
xchg
push
cmp
insb
add
and
xchg
push
and
add
inc
lret
or
shrl
pushf
pop
sbb
sti
mov
aam
shl
bound
and
mov
inc
mov
adc
test
sub
aaa
mov
mov
cltd
loop
es
scas
stos
dec
inc
loope
lods
es
or
mov
and
push
sub
jnp
push
aad
jg
cmp
data16
out
gs
in
sub
in
lahf
pop
dec
xor
popf
movsl
popa
mov
sarl
in
xor
push
dec
adc
jmp
or
pop
in
sub
adc
push
jp
in
shlb
pop
lock
mov
mov
cs
inc
pushf
sbb
fcmovnu
loopne
xchg
adc
adc
dec
dec
add
cmpsb
xor
cmp
pop
adc
out
inc
dec
sub
outsb
pop
jle
pop
orl
add
and
test
pushf
loop
mov
mov
inc
mov
iret
mull
imul
mov
pop
or
and
in
in
and
mov
je
mov
jns
jne
mov
cld
push
xchg
push
gs
add
test
cmp
das
mov
dec
mov
lret
cmp
das
sbb
or
outsl
in
jb
rcrl
sub
dec
lret
sarb
lret
mov
mov
pop
je
mov
cmp
xchg
movsb
std
jge
pop
pop
insl
sti
mov
cmpsb
cld
inc
lret
mov
subb
lock
xchg
and
inc
cmpsl
lret
xorb
pusha
inc
sub
mov
das
cmc
jne
dec
dec
or
push
cmp
dec
imul
push
xchg
adc
fdivr
hlt
imul
out
cwtl
icebp
std
in
push
add
dec
int
lods
jb
inc
jg
pop
lds
aaa
ds
hlt
mov
in
push
scas
daa
xchg
fsubrs
and
popf
outsb
xlat
repnz
xchg
in
orl
cmp
icebp
and
clc
and
call
jno
jne
xchg
aas
jge
fs
incl
sbbb
jb
xor
mov
test
mov
sbb
fisubrs
cmc
mov
mov
mov
ss
mov
sub
xor
lods
mov
nop
jge
xor
and
pop
push
je
lods
fucom
iret
cmp
and
cmp
arpl
fcomp
out
imul
ljmp
lods
dec
rclb
and
fmuls
inc
pop
subb
cmp
jle
ds
stc
movsb
or
pop
sbb
shl
and
cmp
pop
dec
ljmp
dec
sub
bound
jne
nop
enter
es
push
mov
cmp
sub
pop
pop
adc
mov
loopne
mov
jl
test
int3
inc
sub
pop
shll
sub
in
push
mov
adc
adcb
sbb
stos
mov
push
dec
pop
aad
test
movsl
mov
dec
dec
jg
aad
xchg
cmp
aaa
fs
cmp
arpl
lret
xchg
sub
lret
sbb
imul
mov
xchg
daa
or
and
out
mov
outsb
push
rclb
out
ja
mov
mov
jg
mov
dec
add
push
cmpsl
push
push
test
inc
cmp
push
push
pop
insb
xor
call
adc
pop
dec
xchg
test
sub
mov
popf
lret
cli
cmpsl
and
adc
imul
lahf
push
clc
push
imul
fstps
add
inc
jge
jb
cltd
jnp
dec
rcrl
testl
jb
ret
or
xchg
mov
jecxz
out
dec
lcall
loope
xchg
xchg
mov
nop
xor
je
ljmp
mov
mulb
into
clc
out
inc
sub
inc
mov
cli
sbb
lahf
adc
mov
mov
mov
jnp
loopne,pt
lock
call
mov
mov
sarl
imul
jmp
shrb
popa
rcrl
shll
lahf
adc
xlat
in
sbb
scas
mov
orb
xor
cmp
enter
sti
add
add
fistps
mov
dec
inc
push
mov
pop
movsb
flds
sub
ds
cmp
loop
pop
xchg
mov
mov
pushw
fidivrs
sarb
jno
push
out
xchg
sub
push
jb
stos
ja
xor
push
insb
addr16
pop
test
mov
mov
movsb
mov
pop
test
mov
mov
xor
incl
dec
or
sbb
pop
or
hlt
mov
movsb
cmp
shl
ljmp
test
repz
jmp
lahf
or
dec
push
adc
imul
arpl
test
cmp
jbe
adc
jge
test
and
fstpl
arpl
mov
sbbl
fwait
mov
in
push
lret
pop
scas
hlt
inc
das
jmp
cmpsl
mov
ret
xchg
dec
fildll
out
iret
addr16
mov
in
ss
mov
popa
sub
cmp
scas
jmp
cmp
cmc
bound
sbb
pop
gs
js
xchg
mov
xchg
mov
pop
mov
movsb
fldl
scas
inc
pushf
roll
fmull
js
js
push
int3
sub
outsl
push
push
xor
aad
fisttpl
mov
mov
jae
test
popf
jge
adc
fsubrs
in
jmp
stc
or
push
cmp
test
jecxz
and
stos
jae
xor
out
xor
sbb
cmp
aas
push
mov
adc
push
dec
cmp
dec
lret
lock
movsl
mov
je
xchg
movsl
xchg
addr16
ss
xor
ss
clc
push
push
mov
fcoml
push
dec
pop
push
aad
xor
sbb
andb
sub
arpl
ficompl
jmp
pop
inc
mov
loope
mov
int
in
dec
jecxz
popf
push
out
lods
push
aaa
nop
mov
xchg
out
inc
and
fcmovb
xor
mov
mov
repnz
push
sbb
dec
pop
aaa
inc
pop
out
fadds
ret
inc
jecxz
out
insl
cmpsl
enter
sub
push
or
jae
lock
cmpl
xchg
xor
inc
lcall
inc
or
mov
subb
icebp
xor
mov
jo
dec
or
inc
push
lret
pop
mov
in
aam
and
lea
pushf
and
xor
push
jp
lods
push
adc
das
fbld
cld
pusha
mov
enter
push
jl
dec
xchg
adc
sbb
inc
jae
push
pop
lret
mov
jecxz
sbbb
sub
jge
pop
mov
pop
cmp
dec
dec
nop
add
cwtl
mov
jp
inc
fs
pmuludq
pop
pop
sahf
or
in
dec
roll
pushf
pop
pop
out
dec
adc
jb
xor
arpl
or
adc
movsl
leave
mov
pop
mov
jp
in
fistpll
shrb
add
out
pop
sbb
adc
loop
mov
push
fidivrl
out
sbb
js
lea
aas
jp
insl
inc
iret
insl
cmp
leave
inc
mov
adc
imul
les
xchg
jge
shrl
fstpl
xchg
push
or
add
xchg
and
xchg
stos
addr16
fs
adc
push
jge
inc
xchg
jg
mov
lret
add
sub
cmpsb
mov
inc
lret
push
rcr
xor
dec
push
out
iret
mov
or
int3
inc
test
hlt
or
push
sar
jg
repnz
sti
mov
or
jmp
pop
cmc
mov
xchg
rcll
add
dec
push
pop
xchg
push
sar
das
out
and
cwtl
es
jo
push
jbe
sub
mov
cmp
cmpsl
xor
or
dec
mov
lret
xor
je
out
and
pop
inc
mov
hlt
mov
cmp
sti
hlt
mov
into
mov
xchg
call
sbbl
push
jno
in
fwait
insb
pop
mov
dec
pop
les
adc
sub
mov
sti
mov
adc
imul
cmp
inc
mov
cld
mov
movsl
idivl
inc
jo
and
pop
lcall
pop
dec
dec
cwtl
or
adc
xchg
imul
add
or
lret
add
mov
dec
cmc
and
jle
scas
push
addl
jo
push
js
popf
xchg
aad
in
jo
xor
inc
mul
jb
ja
sbb
lds
cwtl
into
test
lock
xor
xchg
addr16
push
ret
ds
enter
ljmp
stos
mov
dec
sub
in
adcb
mov
xor
and
rorb
fisubs
sub
dec
sub
push
pop
mov
out
add
outsb
lret
cmpsl
fisubrs
cmpsl
push
add
sbb
loop
sub
adc
mov
jl
cwtl
add
adc
mul
sarb
and
sbb
es
xor
pop
pop
repnz
xchg
stos
jp
movsb
cmc
mov
lret
outsb
sarb
and
xor
in
adc
sbb
mov
jno
mov
jle
push
ss
repnz
jmp
lea
mov
ja
add
bound
mov
mov
dec
out
mov
out
mov
mov
out
and
dec
xor
aam
lods
fcompl
sub
mov
stos
fildl
rorb
or
inc
mov
xor
sub
mov
stc
jp
stc
fadds
xor
std
mov
loop
repnz
xchg
inc
fs
pushl
lea
mov
ret
sub
mov
sub
cmpsb
sbb
dec
bound
sub
add
pop
pop
int
mov
test
add
mov
or
out
leave
sbb
loope
mov
adc
sub
loopne
push
mov
push
repz
pusha
cltd
cmpsl
xchg
lods
cwtl
mov
shr
movb
xor
cmp
mov
pop
and
and
sti
fbld
sub
lret
inc
cmp
cwtl
sub
mov
lahf
jl
inc
mov
sahf
xchg
mov
sbb
or
xor
shlb
outsl
in
mov
sbb
mov
shl
xor
scas
sub
xor
mov
push
pusha
and
bound
pop
mov
add
cmpsl
inc
lcall
in
scas
lock
or
rcrb
push
pop
jp
jns
out
inc
mov
pop
xchg
fistl
popf
sbb
mov
push
out
popa
lcall
aas
jmp
fdivrs
add
add
mov
jg
dec
jnp
jp
subb
add
cmp
mov
sahf
xor
push
push
sbb
jecxz
test
lds
cli
addr16
push
xor
and
sarb
testl
insl
dec
and
lock
loope
sbb
pop
mov
pop
push
push
aad
je
inc
jge
sbb
sub
sbb
cltd
pop
aad
push
add
sub
mov
int
inc
ret
sub
je
jne
cli
lea
sbb
insl
ret
cmp
stc
cmp
aaa
xchg
aad
cmp
popf
rolb
xlat
ss
adcl
fwait
mov
in
dec
leave
cmp
jp
pop
sbb
scas
pop
sub
pop
mov
mov
sbb
fdivs
xchg
pop
mov
jl
mov
jb
div
push
inc
xor
into
adc
pop
add
inc
jnp
ja
add
jno
jge
add
mov
sbb
fisubs
mov
ret
sbb
mov
mov
mov
outsb
pop
add
push
dec
ds
xor
orb
fistl
adc
pavgw
add
test
push
daa
mov
movsb
into
cmpsl
xchg
sub
jp
lods
scas
cmp
adc
stc
test
lds
mov
mov
sbb
cltd
push
push
div
dec
or
lock
fsubrs
adc
inc
lahf
mov
repz
insb
clc
add
or
cltd
out
aad
inc
jo
cs
or
push
and
xlat
xchg
mov
mov
scas
cld
fidivl
test
add
enter
sub
adcb
sbb
cmp
sub
xchg
rorb
dec
push
and
adc
imulb
imul
outsb
mov
scas
imul
aad
dec
push
fidivs
mov
lcall
scas
enter
adc
xchg
inc
pop
cmpsb
imul
jno
loop
fbld
movsl
jo
sub
pop
adc
out
aaa
push
inc
push
mov
lahf
inc
xchg
in
and
jmp
dec
xchg
ret
adc
push
insb
pop
xchg
mov
cld
call
mov
imul
fisttpll
sarl
je
mov
sbb
xchg
pop
lock
mov
and
or
dec
push
repz
sbb
cld
sub
xchg
fsubl
dec
inc
hlt
inc
outsl
or
inc
mov
pop
aaa
leave
imul
pop
push
out
xor
dec
add
je
fs
xchg
jnp
xchg
sbb
sbb
xchg
loop
repz
cli
repz
sub
jp
push
or
xor
pop
imul
mov
loop
xor
lcall
fldcw
or
and
sub
add
outsl
imul
lcall
mov
push
pop
and
pop
hlt
xchg
cmp
push
aas
xchg
addr16
add
mov
lahf
push
xchg
jp
mov
pop
lock
mov
mov
cmp
lahf
movsl
aaa
xorl
pop
jecxz
xchg
pop
movsl
jge
js
outsl
rclb
adc
je
jo
or
mov
inc
scas
push
aaa
inc
pop
cmp
fstpt
mov
in
dec
insl
or
insb
push
or
mov
in
jae
ss
mov
mov
pop
sbb
loopne
lahf
sbb
outsb
mov
insb
or
call
sbb
push
sbb
and
repz
sti
cmpsl
lret
push
push
adc
push
sarl
pop
push
lcall
pop
xlat
xchg
pusha
int3
dec
popa
mov
sbb
std
mov
jbe
cli
adc
cmpsb
scas
gs
push
enter
pop
xchg
adc
push
pop
lcall
int3
stos
mov
fs
ja
mov
int3
xor
cmp
mov
stos
inc
adc
aaa
cmc
mov
xor
aas
pop
mov
inc
dec
and
test
dec
outsb
pop
stos
sub
outsl
jne
inc
aaa
dec
addr16
or
push
out
sub
repz
rep
mov
aaa
lcall
inc
shlb
repz
xchg
fwait
dec
cld
es
or
xor
fs
jnp
fidivs
pop
hlt
sub
out
xor
sbb
push
xor
cmpsb
push
xor
fcmovnu
sbb
xor
xchg
mov
fwait
daa
mov
mov
arpl
inc
stos
les
ret
pop
mov
push
dec
xor
sub
mov
cmp
xchg
popl
sarl
mov
imul
or
loopne
push
ljmp
lss
add
dec
aad
rcll
and
dec
inc
fbstp
mov
andb
jle
imul
mov
iret
and
and
clc
ss
mov
cmp
cmp
jmp
mov
dec
mov
adc
call
fdivs
dec
fisubrs
imul
mov
outsl
mov
imul
xchg
aaa
nop
jae
fidivs
mov
push
test
or
imul
shl
lahf
xchg
or
inc
mov
aaa
dec
jo
cld
add
and
dec
sub
xchg
aad
ljmp
lahf
fsubrl
movsb
incb
sti
jl
cwtl
pop
xor
cmp
loopne
clc
aaa
leave
cmpsl
es
adc
sbb
and
xchg
cmpsl
pop
dec
pop
sti
shlb
jg
jne
outsl
cmpsl
cmp
push
rcrb
inc
or
pop
repz
sub
mov
lea
and
outsb
sbb
pop
mov
push
ja
xchg
mov
fisttpll
xor
adc
mov
hlt
sbb
fildl
adc
add
outsl
mov
sti
mov
negl
sub
xlat
sub
add
xchg
jae
mov
jno
or
lods
push
mov
xchg
mov
scas
mov
mov
xchg
inc
data16
dec
sbb
pop
stos
es
add
add
inc
xor
xor
fsubrs
stos
hlt
stc
imul
mov
pop
jge
lcall
shlb
sub
icebp
loopne
inc
mov
xor
lds
cmpsl
push
xchg
xchg
push
mov
sbb
out
popf
cmp
js
sbb
lock
push
mov
fcmovb
push
cli
int3
pusha
sub
cmp
icebp
and
or
ss
in
sub
adcb
jnp
or
loope
jle
sbb
test
sar
cltd
xor
addr16
jle
mov
sahf
mov
dec
xchg
sbb
lcall
or
pusha
dec
lret
mov
inc
rcrb
push
sbb
sbb
pop
faddl
outsl
push
das
dec
add
xor
jmp
jne
jbe
xchg
push
hlt
jge
mov
cmp
fists
add
aaa
cmp
xorl
shlb
clc
in
loopne
repnz
adc
ja
or
fisubrs
inc
inc
and
pusha
addr16
xchg
fmuls
sub
cli
aam
in
loopne
pop
inc
xchg
gs
loope
add
incb
xor
aas
inc
mov
int
pusha
sub
push
sub
cwtl
fwait
aad
cmpsl
cmp
xor
je
xlat
lock
hlt
mov
loop,pt
jno
jl
mov
jge
in
aaa
clc
aaa
or
inc
mov
out
movl
xor
xlat
aas
adc
or
dec
and
test
insb
sbb
js
in
xchg
sahf
sbb
jo
ds
mov
and
xor
jmp
or
mov
cmc
lods
vpinsrw
pushf
sbb
jae
ljmp
repnz
push
lret
jbe
rcrl
mov
lock
in
or
pop
push
mulb
cmpsb
ja
jno
or
into
in
cmp
mov
or
push
sub
sbb
outsb
popl
add
sbb
and
or
je
arpl
movsl
mov
cld
ja
add
stc
jmp
enter
loop
aam
popa
xchg
pop
lret
sbb
inc
inc
lock
xor
ljmp
std
insb
scas
test
mov
cmovge
push
iret
out
add
xchg
shrl
sti
out
mov
mov
jecxz
les
fcompl
stos
sbb
or
push
fwait
out
std
insl
dec
add
mov
jecxz
lret
sbb
outsb
dec
lcall
xchg
pop
cld
jp
sub
ss
xor
push
sti
icebp
cmp
pop
xor
int
lret
cmp
sbb
inc
icebp
lea
sub
ret
loop
jnp
cmp
cs
sti
leave
mov
xchg
pop
inc
cmp
inc
subl
aad
xor
adc
adc
jecxz
pop
jmp
mov
lea
test
sub
mov
out
inc
jge
lret
push
push
cli
std
shll
in
xchg
push
ret
std
fcmovnu
pushf
push
fs
sbb
dec
aam
mov
add
fdivl
gs
fists
outsl
sbb
lret
xor
scas
or
leave
and
push
sub
sbb
xchg
loop
shl
xor
insl
lret
push
scas
ljmp
mov
or
ficoml
jno
or
rcrb
mov
pop
sub
enter
orl
sbb
clc
mov
je
lds
xor
add
and
push
pop
mov
jp
negl
pop
cmpb
pushf
hlt
hlt
pop
mov
out
sbb
mov
adc
mov
push
daa
add
add
sub
mov
out
jb
das
imul
test
daa
adc
cmp
xor
inc
pushf
inc
or
mov
leave
mov
aas
sbb
iret
inc
subl
push
cmpb
loop
push
cmp
mov
mov
xchg
lods
out
arpl
rorb
std
push
jecxz
xchg
mov
sub
xchg
aas
shlb
jecxz
push
movsb
ljmp
movsb
sub
sbb
cmpsl
fidivrs
lea
push
mov
leave
or
jns
sub
xor
je
aad
cld
mov
mov
sub
sbb
jge
lahf
repnz
iret
iret
int
shrl
leave
sarb
sbb
mov
pop
fildl
out
shrb
bound
mov
daa
loop
mov
dec
xor
xor
cs
fadds
fdivrp
adc
mov
xchg
lahf
cmc
int
push
inc
mov
shll
loope
sbb
test
xchg
or
pop
push
out
mov
lahf
data16
sti
xchg
out
jge
rcll
lret
mov
jbe
mov
push
xchg
or
aad
mov
mov
mov
push
fnstenv
cmc
movsl
mov
xchg
lret
xor
rcl
lea
sub
loop
test
mov
icebp
fwait
mov
in
rcrb
jnp
push
jnp
mov
push
nop
in
add
nop
clc
add
cmp
dec
ret
rorl
and
int
adc
mov
lret
repz
fcmove
scas
xchg
and
inc
pop
mov
dec
addr16
ror
sbb
sub
pop
xlat
or
sub
fisubl
sub
mov
hlt
lods
mov
scas
mov
aas
shlb
cmp
mov
les
push
pop
iret
into
lods
fiadds
push
wbinvd
mov
cmp
pop
outsl
mov
out
cmp
outsl
rcll
sub
sub
pop
dec
mov
clc
aam
sarb
jg
xor
out
stos
xchg
or
sti
fidivrl
arpl
out
repz
or
iret
xchg
test
pushf
xor
sub
fmuls
pushf
mov
out
adc
jmp
loope
jae
mov
pop
test
mull
xor
stos
ds
dec
mov
aam
fdivs
or
loopne
or
test
fidivrl
loopne
fs
xor
dec
je
dec
into
push
mov
ret
sbb
cmp
leave
mov
clc
add
cmp
mov
out
dec
cltd
push
addb
loop
xlat
push
mov
rorb
xchg
mov
sub
jnp
mov
sub
inc
pusha
mov
mov
push
pop
or
aam
insb
xor
sub
xchg
cld
cmpb
loop
bound
and
xor
popf
push
mov
fs
push
cli
mov
mov
popf
clc
out
add
xchg
movsb
dec
cld
sti
push
test
pushf
pop
mov
leave
daa
imul
scas
inc
sub
sbb
xchg
cmp
cltd
rol
xor
mov
push
sub
hlt
mov
leave
les
arpl
mov
in
xlat
fwait
aas
or
inc
mov
lret
hlt
rcr
arpl
mov
inc
addr16
hlt
and
and
jecxz
push
mov
out
in
scas
jg
cmp
sahf
cmp
push
mov
add
add
ret
icebp
pop
and
dec
sub
xor
mov
cmpb
mov
xabort
add
xor
jns
add
push
call
rcrb
inc
rclb
adc
or
in
out
mov
aad
dec
sarb
ss
lods
outsl
cld
ss
cmp
add
cwtl
stc
stos
adc
testb
mov
and
adc
add
mov
fisttpl
and
out
or
or
adc
inc
dec
sub
gs
push
inc
fisubs
mov
dec
dec
and
cmp
insl
pop
adc
sbb
mov
mov
gs
mov
lea
gs
hlt
xor
fistps
addr16
dec
sub
xor
outsb
ljmp
out
push
mov
and
mov
jo
or
xchg
repz
inc
addr16
pusha
sti
stos
aaa
repnz
and
cmp
push
jmp
pop
insb
outsl
mov
jp
nop
mov
or
push
inc
fildll
jle
mov
vmread
mov
mov
sbb
push
adc
and
cli
outsl
fsqrt
daa
mov
aam
fldenv
pop
push
push
dec
fimuls
data16
mov
sub
aas
imul
fwait
cmp
ljmp
mov
cmp
push
dec
popf
or
data16
adc
push
add
subl
int3
aam
cmc
cmp
jo
cmp
or
call
or
fldpi
and
lret
and
iret
fistpl
push
cmc
jnp
scas
adc
aam
xchg
dec
ret
cmp
jp
rorl
outsl
mov
ljmp
ret
adc
jns
mov
xchg
lea
cmp
les
lret
out
rorl
dec
loope
cld
arpl
sbb
inc
add
mov
dec
clc
push
mov
inc
fisttpll
lret
dec
stos
cmp
adc
push
rcrb
js
cmp
pop
or
add
pop
rol
mov
aam
rorl
es
mov
pop
jno
sti
adcl
popf
incl
xchg
cli
rcl
mov
push
mov
jne
movsl
daa
out
outsb
out
inc
aas
jp
sub
xor
insl
popf
push
lret
mov
sti
orb
pop
movsl
mov
std
loopne
imul
pop
cmp
sti
add
fld
mov
ljmp
dec
mov
loop
mov
sub
xchg
test
xchg
rcl
inc
neg
repz
xchg
jno
add
loopne
stos
sub
adc
ret
add
dec
loope
xchg
ret
mov
insl
in
xchg
lret
pop
mull
jmp
pop
inc
shll
cmp
mov
imul
jne
add
xchg
bound
sbb
fadds
jge
in
shll
jl
insl
mov
sbb
int
imulb
nop
orl
xor
or
mov
sbbl
hlt
ds
push
mov
cmp
cmc
push
sub
mov
lret
repnz
mov
cltd
push
lods
cmpsb
push
pop
pop
inc
lock
les
fdivp
rclb
cmp
iret
sbb
jmp
sub
inc
aaa
xor
sub
cmpb
dec
popf
dec
or
jae
xor
jbe
aad
frstor
cmpsb
inc
sbb
aaa
fcmovne
add
jle
lock
fistpl
push
scas
xor
daa
or
insb
mov
or
adc
push
mov
dec
push
loopne
outsl
mov
stc
xchg
ret
leave
std
repnz
data16
fbld
adc
orb
cmc
mov
mov
mov
icebp
pop
ret
orl
pop
push
and
fdivl
fimuls
push
loopne
in
dec
mov
cmpsl
out
cmp
and
inc
push
sbb
add
mov
pop
test
js
xor
lods
lods
or
sbb
popf
cmp
dec
sbb
jge
push
jns
mov
std
rorb
out
push
add
jnp
push
lret
addb
sub
mov
push
lahf
push
sub
inc
shrb
lret
jno
pop
xor
cmp
jne
xchg
push
and
sub
incb
fs
rorb
roll
xor
inc
fidivrs
data16
addb
add
jne
and
gs
dec
push
pop
jecxz
jae
ss
adc
cmp
jle
inc
das
push
jb
and
cmc
int3
rorl
push
mov
fsubl
dec
and
lcall
jbe
xchg
mov
in
es
or
je
test
gs
cmp
cmpsb
pop
ljmp
dec
sarl
insl
sbb
sbb
pop
aam
mov
sub
sbb
test
inc
pop
cmp
sub
ja
jno
push
cmp
outsl
push
xor
rolb
mov
and
repz
loop
idivl
jb
push
xor
shll
iret
cmp
sub
out
dec
pop
push
push
call
pop
adc
cmp
inc
clc
add
sub
cmp
lret
pop
xchg
aas
inc
add
mov
in
rclb
dec
fs
int
sub
or
fnstenv
outsl
and
aaa
sbbl
out
xor
dec
sub
cwtl
pop
in
sub
cltd
add
jno
cmp
lea
idivl
cmp
in
push
dec
lods
cmp
lea
sbbb
push
xor
cs
movsb
fcompl
das
nop
ficomps
mov
adc
mov
out
xchg
movsb
mov
inc
push
out
fs
sarb
rol
sub
mov
arpl
mov
xor
cmc
test
mov
add
xchg
movsb
pushf
and
cmp
fcmovne
add
cmpl
mov
dec
dec
cmp
inc
xchg
push
ljmp
and
ds
jg
out
cmp
dec
fcoml
cwtl
and
ret
jnp
call
mov
fidivrl
dec
fmull
loop
outsl
aaa
ret
pop
gs
pushl
ret
or
jge
fiadds
insl
repnz
inc
mov
sahf
cli
test
test
out
add
pop
sub
xor
and
dec
fstpt
lret
stos
adcb
jae
pop
imul
add
or
and
mov
mov
add
dec
mov
cltd
push
inc
cmpsl
adc
and
pop
in
mov
mov
add
jecxz
mov
hlt
cmp
rcll
imul
adc
adc
push
icebp
and
mov
mov
push
outsl
leave
inc
inc
adc
outsb
rorl
ret
add
push
cmpsb
xor
roll
push
push
xor
mov
cs
sub
lds
mov
cmp
sahf
pushf
sbb
jo
bound
mov
shl
es
dec
jle
pop
xor
dec
mov
mov
push
or
mov
divl
jmp
loope
pop
inc
enter
stos
push
and
lds
clc
push
cmc
loopne
mov
mov
jge
xchg
dec
xor
ds
mov
out
into
fdivs
das
dec
das
in
dec
punpckhwd
sbb
into
pop
push
into
in
xor
sti
jne
adc
sub
in
data16
sub
fldl
xor
loope
in
mov
neg
iret
or
lods
jb
jb
enter
cld
aas
add
sub
out
adc
loop
jb
sbb
jno
push
mov
inc
test
add
xchg
mov
inc
ret
lods
or
out
jno
pushf
cmp
or
push
sbb
cmp
mov
cmp
pop
lods
mov
loop
mov
cli
mov
add
jo
fisubrs
loop
outsl
and
sub
mov
test
pop
cltd
jmp
cli
popf
cltd
lods
icebp
jl
push
test
and
push
xor
lock
pop
in
dec
jecxz
in
mov
sbb
sbb
enter
lcall
int
cmp
int
mov
push
int
test
inc
stc
mov
mov
es
lds
pushf
mov
cs
sub
or
mov
lahf
sub
jle
jmp
out
outsb
mov
addb
pop
cmp
xor
pop
fisttpl
ja
sahf
fs
mov
xor
cmc
insb
cld
xorl
aaa
xchg
adc
xlat
mov
xchg
cmpsl
push
sti
inc
or
ss
jno
cld
dec
pop
insb
mov
xlat
lods
stos
out
and
shl
jb
mov
mov
xchg
incl
test
notl
imul
inc
dec
lods
xchg
rcl
mov
xchg
pop
test
nop
mov
ljmp
xor
add
pop
shrl
push
dec
icebp
cwtl
jmp
mov
das
xor
xchg
shrl
push
mov
push
in
inc
lds
stos
repz
push
rorb
dec
adc
and
adc
ret
imulb
cwtl
pusha
adc
enter
xor
dec
pop
ljmp
popa
mov
test
cmp
rcrl
add
icebp
inc
orb
cltd
pop
mov
fwait
cwtl
rep
lret
pop
push
inc
add
mov
jp
fwait
popa
pop
adc
xor
cmp
mov
arpl
xchg
push
or
gs
ljmp
cmpsl
xor
loop
out
xchg
add
sbb
add
jge
add
aaa
push
pushf
ret
out
outsl
push
js
movsb
sahf
pushf
stc
or
lods
push
fsubrl
out
data16
fimull
sbb
jmp
iret
pop
out
pop
lret
xchg
mov
rcrb
imul
andb
stos
or
aam
adc
pop
or
push
mov
jp
mov
mov
sar
mov
or
and
jno
cmp
inc
mov
adc
sbb
xchg
insl
jno
in
mov
xchg
icebp
sub
outsb
adc
push
dec
test
sarb
imulb
sub
sub
jno
pusha
out
xor
xchg
cmpsb
les
pop
je
add
out
or
push
pop
imul
aam
lret
insl
add
adc
fisubrs
jo
pop
sbb
in
mov
aam
cmp
xorb
add
repz
add
push
decl
jle
jne
adc
les
add
jbe
sbb
in
mov
mov
les
insl
fisubrs
or
mov
pop
rorb
inc
jnp
inc
add
adc
xorb
and
pop
mov
lea
or
fldl
movsb
ret
inc
cltd
or
pop
es
cld
stc
cmp
ret
mov
roll
int3
aaa
outsb
push
pop
mov
shl
repz
movsl
aad
xor
insl
and
cmpl
pop
sub
inc
pop
and
push
pushf
pop
pop
sarb
adc
and
inc
rcll
jae
mov
pop
inc
adc
fcmovnbe
xor
pop
rolb
push
pop
dec
jle
dec
leave
sub
movsl
shll
imul
shrb
add
iret
pop
stos
mov
lock
bsr
and
roll
pop
sub
jo
mov
dec
cmp
xor
fucomip
cmpl
lods
or
je
out
imul
push
add
dec
repnz
inc
lods
stos
jb
lock
cmpsl
mov
and
scas
stos
and
lret
js
dec
subl
ja
mov
data16
fsub
lock
pop
sub
int
loop
pusha
stos
and
addr16
movsb
and
dec
es
or
notl
shr
jb
mov
sub
fisubrl
xchg
mov
inc
xchg
mov
ss
fwait
repnz
int
cmp
cmp
in
daa
in
cmc
jl
xchg
cmp
sub
adc
adc
out
mov
icebp
repz
mov
sbb
leave
push
mov
pusha
push
cmp
add
lds
or
sbb
lea
xor
or
ret
xlat
pop
push
imul
jmp
jp
imul
movsb
cli
insl
add
decl
and
sub
mov
sar
or
pop
adc
aas
cmp
rcll
in
movsl
xor
test
mov
stos
dec
and
leave
xchg
mov
inc
insb
mov
stc
jns
xchg
jp
xchg
mov
loopne
sub
pop
lods
xor
idivb
adc
bound
icebp
pop
mov
mov
push
aad
mov
fimull
inc
adc
lods
sub
test
dec
lcall
in
push
and
mov
popf
mov
jnp
scas
and
mov
mov
out
lret
push
push
sub
nop
imul
add
insb
jle
mov
dec
bound
iret
sbb
adc
jg
add
xchg
push
std
dec
and
sarl
or
hlt
dec
ret
rcr
lcall
xchg
rclb
add
sbb
out
insl
adc
mov
sub
pushf
fstpl
addr16
dec
sub
and
jo
inc
lret
sbb
out
mov
or
push
sarl
ret
pop
shlb
outsl
js
in
popa
icebp
and
inc
nop
movsb
cmp
mov
insb
fdivl
insb
ret
mov
cmp
imul
sub
leave
fists
leave
ficoml
iret
push
push
loopne
jb
and
or
stos
jno
sbb
call
and
insb
cld
xchg
les
dec
test
pop
stos
xor
lea
push
cmc
mov
mov
lea
les
jmp
push
addb
and
data16
into
clc
jns
aas
shrb
fldl
stos
xchg
jl
adc
or
iret
pop
adc
faddl
sub
inc
xor
adc
xchg
mov
pop
lods
insl
adc
popa
ss
rorl
cwtl
outsb
add
dec
xchg
pop
dec
pop
repz
pop
mov
or
dec
add
dec
loopne
pusha
pop
add
in
icebp
adc
shr
int3
outsl
je
push
outsl
push
pop
and
cli
fwait
mov
cld
dec
in
and
imul
push
dec
and
iret
bound
test
fidivl
mov
addr16
outsl
ja
xor
mov
sbbb
test
jge
pop
xchg
xchg
cmc
sub
inc
push
loopne
dec
rcr
dec
sub
test
mull
pop
xor
cmpb
xchg
out
stc
movsb
jg
sub
jg
insl
add
dec
push
sbb
push
or
jl
or
xchg
mov
inc
into
stos
mov
xchg
icebp
js
pop
cmp
negb
pop
jne
jb
lods
inc
jmp
push
ljmp
lret
mov
inc
das
or
nop
mov
scas
lahf
mov
das
cmpsl
fwait
jmp
sub
iret
dec
inc
jl
sbb
incb
adc
push
into
les
scas
out
je
mov
jmp
add
pop
mov
mov
and
in
int
or
jmp
leave
mov
movsl
ret
bound
mov
fiaddl
arpl
mov
mov
mov
rcrb
sbb
and
pusha
push
movsl
sar
ljmp
fildll
xlat
xlat
push
or
stos
cmc
xor
xchg
xchg
dec
jno
fldt
cmp
jo
enter
nop
fwait
fs
jecxz
sub
and
cmp
sbb
nopl
rcrl
pop
push
pop
pop
push
fsubp
sbb
gs
fcmovnu
mov
or
cmp
jge
jb
xor
pop
ja
or
xor
jb
xchg
out
fsts
lods
stos
sub
sbb
hlt
mov
orl
mov
push
adc
xchg
cmpsb
sbb
xor
lds
incl
or
test
and
clc
lods
push
xorb
xchg
inc
xor
data16
cmp
xor
fldl
outsb
ja
push
lahf
iret
addb
mov
arpl
sub
fs
repz
popa
loop
test
xor
shrb
jbe
mov
add
or
push
fidivrl
orb
shlb
adc
sbb
cmc
mov
inc
faddl
mov
inc
mov
lds
mov
adc
sub
inc
je
pop
lods
dec
xor
or
std
sub
xor
mov
xor
mov
bound
mov
jno
outsb
into
mov
lea
es
dec
pop
add
lcall
xlat
sub
nop
in
fcomps
inc
and
ss
pop
clc
xchg
push
sub
mov
mov
xor
pop
xchg
pop
push
or
jl
add
pushw
stos
or
xchg
shll
arpl
cmp
div
sbb
pushf
add
xor
mov
sub
dec
inc
out
rcrl
inc
ret
cli
mov
sbb
repnz
dec
adc
fidivs
push
pop
scas
jne
inc
sbb
sbb
in
stc
and
xchg
sub
push
xchg
paddq
jne
mov
adc
mov
cmp
pop
sbb
jge
xchg
jne
inc
stos
mov
jmp
inc
cmp
popf
hlt
enter
cli
pusha
push
jge
pop
iret
add
fmuls
sub
lods
je
sti
dec
add
cld
and
cld
mov
inc
xchg
or
movsb
lods
leave
jb
pushf
cwtl
mov
iret
int
xor
clc
fisttpl
popf
pop
fldl
push
xor
adc
adc
mov
test
std
xorb
inc
dec
mov
push
mov
inc
lods
flds
dec
pop
pop
xchg
xchg
inc
ret
mov
movsl
mov
sbb
fisubrl
sbb
aaa
push
or
and
mov
mov
gs
jle
stc
adc
int3
stos
mov
shlb
pop
cld
repz
mov
rcr
into
add
fsts
ffree
arpl
addl
repz
push
aas
pop
js
xor
out
arpl
ret
shl
outsl
repnz
leave
aam
adc
out
out
xchg
push
dec
adc
sbb
push
lcall
pop
lock
mov
stos
daa
mov
or
js
mov
repnz
xor
mov
lods
mov
xchg
int3
pop
mov
lea
fmull
push
adcl
xchg
in
icebp
hlt
cmpsl
pop
add
xchg
imul
xor
adc
imul
in
or
insl
inc
pop
dec
pop
daa
mov
jge
and
jo
mov
lcall
fidivs
ljmp
sub
lea
popa
daa
cld
inc
es
mov
inc
mov
outsl
add
sub
inc
rorl
mov
jnp
pop
loop
data16
xchg
pop
xchg
mov
mov
push
int
addb
adcl
mov
push
fs
sub
outsl
push
sbb
jp
add
mov
cltd
lods
shlb
sbb
push
pop
and
dec
stos
jmp
pop
cmp
xor
fisubrs
cmpsl
inc
cld
in
arpl
sahf
mov
daa
out
sub
or
icebp
test
test
xchg
lahf
xor
out
sbb
jp
lcall
or
rolb
lret
fcomps
cmp
ds
test
or
or
aas
cs
imul
add
push
dec
lea
imul
addr16
adc
mov
sbbb
mov
outsb
xchg
arpl
mov
pandn
je
pop
cmp
push
fucomp
xchg
or
pop
dec
rol
push
ret
bound
cltd
xor
push
jecxz
fcoms
dec
sub
xor
in
sarl
xchg
iret
sub
fucomi
outsl
xor
test
pop
cmp
jnp
clc
pop
out
mov
sub
cmp
inc
xchg
add
or
pop
sbb
mov
xor
add
jle
push
in
add
dec
loopne
mov
outsl
sub
and
mov
cmp
cmp
push
jp
sbb
xchg
mov
fwait
xchg
xlat
add
xlat
inc
mov
lret
mov
adc
jecxz
cmpsb
in
cmp
jns
imul
pop
das
test
sbb
cmp
idivb
mov
mov
into
dec
mov
or
mov
jle
ljmp
adc
xor
or
bnd
xchg
fwait
push
push
pushf
mov
lods
outsb
push
cmpsl
mov
stos
je
pop
push
cmp
stos
add
xchg
call
xchg
inc
sbb
push
in
push
pushf
cmp
inc
mov
dec
jo
fcmovnu
push
ficoml
dec
int
popa
pusha
pop
inc
lret
mov
mov
xchg
insb
cmp
xchg
mov
orl
es
and
sub
jl
pop
sub
cmc
je
cmp
ror
ret
push
fsubrs
push
push
add
add
test
mov
arpl
and
cmp
pushf
mov
int
rcll
mov
pop
push
and
inc
call
lock
and
test
adc
adc
cmpsb
push
imul
inc
and
xchg
pop
and
in
fnsave
cmp
or
stos
sub
cmp
pop
jo
push
out
roll
xchg
cs
data16
pusha
cwtl
jmp
lret
iret
add
jmp
mov
pop
xor
adc
sbbl
pop
adc
push
jae
mov
sub
mov
inc
fsts
inc
into
outsb
aas
xorps
dec
rcrb
ja
sub
lock
inc
add
mov
xor
loop
std
sahf
push
add
adc
pop
icebp
gs
mov
pop
in
outsl
mov
push
nop
pop
fdivrl
mov
ja
jmp
rep
fcompl
icebp
lret
sub
and
stc
xor
mov
imul
aaa
imul
mov
mov
xchg
scas
mov
push
out
popa
inc
icebp
xchg
ret
in
les
pop
pop
test
push
mov
das
outsl
jne
ds
cmc
sub
mov
mov
push
and
jae
xchg
sub
das
push
arpl
mov
mov
mov
shll
imul
sahf
lods
cmp
stos
mov
or
push
loop
jnp
lea
or
cmp
or
mov
pop
hlt
rcl
ficoml
jae
inc
fisubrs
mov
adc
or
test
mov
mov
jno
fdivrs
adc
jg
or
addr16
xchg
xchg
cmpl
push
mov
push
dec
jge
test
pop
push
and
fadd
xor
push
add
dec
sti
xchg
outsb
add
sub
inc
cwtl
pusha
mov
hlt
or
andl
dec
pushf
sub
stc
idiv
sarb
push
aam
cs
ds
add
adc
aad
xlat
xchg
xlat
inc
rcr
jno
ss
cmp
xlat
mov
inc
leave
sbb
shll
cmp
mov
daa
loop
jne
gs
shl
sbb
cmp
jp
cmp
mov
fisubl
adc
cmc
adc
data16
mov
mov
iret
loopne
cmp
incl
mov
cmp
xchg
lret
pop
divb
xor
cmp
shlb
pop
and
int
push
call
in
xchg
pop
jo
aaa
cmp
pop
rolb
lret
fisubl
pushf
ds
enter
bound
mov
cmc
and
push
push
cli
mov
or
jns
out
adc
les
xchg
clc
xchg
daa
dec
pop
fs
dec
lea
aad
xchg
adcl
jg
push
icebp
mov
pop
and
sub
lret
xchg
aad
pop
jb
sbb
dec
cmpsb
adc
pop
dec
in
rorb
push
mov
add
and
fdivrl
add
sub
sbb
bound
pop
jo
in
mov
sbb
mov
mov
fadds
out
xchg
dec
jmp
mov
add
hlt
adc
loop
cmp
cmpsb
out
lods
mov
insb
dec
jb
inc
movsl
sub
ss
int
jbe
jno
outsb
aaa
dec
jg
sub
stos
ret
push
aaa
xchg
movb
push
sbb
xor
jae
ret
jne
xchg
jb
out
mov
mov
mov
xlat
aaa
inc
cmp
pop
dec
fisubl
popf
mov
adc
add
xchg
jnp
test
and
pop
daa
dec
xchg
sbb
cmpl
dec
pop
or
ret
jecxz
pusha
pop
and
fnstcw
dec
ja
movsl
push
in
jae
js
ret
aam
cwtl
push
mull
cs
daa
leave
add
jno
les
fidivrs
sbb
xor
xor
fisubrs
mov
bound
sub
push
push
test
mov
mov
sub
fnsave
test
inc
mov
std
mov
ja
dec
lds
sub
fcom
out
insl
int
iret
sub
rcrb
jg
xor
or
jbe
pop
icebp
popf
push
dec
inc
sub
lcall
or
push
xchg
adc
xchg
jmp
jae
mov
mov
ja
mov
subl
cmpsl
imul
mov
and
movsb
movsl
and
pop
dec
sbb
mov
pop
lds
jecxz
je
sbb
mov
xchg
icebp
in
sub
mov
and
mov
ficompl
mov
movsl
out
xor
adc
aaa
jle
lock
repnz
stc
mov
outsl
insl
mov
jo
jecxz
jmp
cmp
xchg
mov
mov
idiv
lahf
sub
in
inc
pop
pop
jg
push
scas
pop
jae
inc
scas
aaa
in
sub
mov
dec
cmp
int
shr
jne
add
out
aam
mov
ficompl
push
jp
xchg
cmpsb
sti
inc
pushf
jecxz
int
sti
mov
jae
outsb
inc
dec
sub
rolb
aam
add
mov
int
lret
repz
ss
xor
sub
jp
adc
pcmpgtd
mov
cld
andl
push
out
int3
sbb
das
push
icebp
ljmp
dec
xchg
xor
test
push
dec
lahf
orb
xor
sbb
sub
lods
xor
xor
xor
mov
mov
repz
mov
mov
lea
xchg
ja
stc
aad
xchg
dec
ret
or
or
xchg
dec
mov
ret
sbb
je
cmpsb
test
sub
lret
mov
aam
bound
push
mov
inc
lods
in
adc
fimuls
aad
dec
mov
mov
and
xchg
cmp
cltd
cmc
pop
loop
shr
les
xor
inc
and
in
aaa
int3
popl
fldt
ds
and
cmp
dec
sarb
mov
rclb
jo
cmp
in
jnp
inc
scas
inc
mov
mov
cmc
shrb
mov
sub
dec
ljmp
fcompl
cmp
pop
std
add
cmp
nop
sti
nop
cmpsl
ret
inc
arpl
jmp
xchg
call
inc
or
mov
dec
adc
dec
call
hlt
sub
add
add
out
and
and
das
scas
add
cmp
movsl
icebp
xchg
xchg
imul
xchg
dec
sbb
dec
out
cmpsl
sbb
dec
imulb
mov
stc
loope
in
jg
mov
stos
inc
fwait
xchg
rclb
test
mov
fldenv
or
sbb
push
popf
ja
mov
sub
pop
mov
leave
push
push
fisubrs
lcall
pop
xchg
or
jno
ror
jnp
lods
mov
mov
push
dec
sti
adc
push
fistpll
call
add
pop
cld
insb
adc
pop
dec
loope
int3
pop
jno
imul
jg
inc
jl
sbb
fcompl
popf
ror
cltd
add
xchg
and
andb
and
testb
or
xchg
nop
shll
sbb
mov
sbb
aaa
enter
push
mov
mov
jg
inc
sbb
jbe
popf
loopne
fildl
cmp
fisttpl
mov
mov
das
ja
pop
sub
repnz
cmp
push
mov
cmp
mov
sti
popa
or
xchg
inc
sbb
in
decl
cmp
mov
movl
stos
lods
stc
lret
frstor
fdivrl
adc
mov
hlt
or
in
adc
or
xchg
and
mov
xlat
in
jle
push
jns
push
into
int
fcomps
inc
sbb
dec
sub
ljmp
arpl
scas
dec
push
sbb
ret
mov
xchg
rclb
xlat
ret
and
jp,pt
fstps
out
es
pop
inc
pop
enter
lret
cmpsl
mov
sub
add
test
fisubs
fstps
out
mov
iret
sahf
enter
movsb
jg
push
cwtl
sbb
aam
jle
inc
mov
dec
insb
mov
jmp
les
aas
push
push
add
aad
push
and
out
push
int
rclb
cmp
cld
nop
stc
add
insl
mov
popl
sbb
mov
lret
pop
xor
jl
gs
dec
bound
inc
ficomps
cli
dec
ljmp
test
mov
dec
jnp
jmp
mov
fists
cli
loop
push
mov
fwait
sbbb
pop
insb
push
out
stos
dec
stos
push
in
add
add
adc
ss
dec
dec
push
xor
pop
dec
ds
lahf
mov
test
dec
pop
dec
sbb
xchg
dec
jg
outsl
in
into
mov
adc
jecxz
jno
je
jbe
or
mov
sbb
mov
je
test
imul
fwait
inc
sahf
mov
ds
xor
jge
into
jo
lret
or
sub
or
das
movsb
mov
gs
sub
jmp
mov
inc
mov
movsl
sbb
dec
inc
incl
sbb
std
and
mov
scas
push
xor
sahf
test
inc
mov
dec
rcll
dec
or
inc
mov
jl
shlb
cmp
out
cmpsb
mov
add
mov
rcll
xchg
inc
jno
mov
sbb
out
xor
or
bnd
mov
gs
into
mov
out
adc
push
dec
aad
jno
and
add
jg
fildll
push
cmp
sbb
adc
nop
icebp
jns
je
xchg
pop
sahf
jne
ja
jns
fistpl
and
cmp
subb
xorl
add
xor
rcrl
clc
cwtl
lret
test
adc
xor
ret
jb
adc
pushf
push
mov
dec
mov
push
sub
pusha
ficoml
xchg
cmp
sub
int3
xor
icebp
and
sahf
adc
cs
movsl
jae
mov
xchg
cltd
inc
cmp
insb
jb
mov
xlat
sbb
shlb
mov
mov
sub
dec
test
mov
subl
jns
mov
push
out
icebp
ror
insl
mov
push
sub
shl
ret
call
inc
enter
leave
into
scas
cmp
nop
mov
dec
push
or
mov
adc
xchg
lock
neg
sti
shll
or
lods
and
push
aam
xchg
shl
mov
xor
xchg
setge
add
sbb
fisttps
push
push
jl
lahf
dec
fwait
or
js
inc
cli
out
ret
int3
cmp
iret
sub
sbb
leave
or
sarb
pop
js
inc
das
mov
es
mov
xchg
pop
pop
lret
push
xchg
sbb
cmp
pop
cmc
iret
jecxz
or
or
and
dec
lretw
ret
mov
push
and
test
mov
pop
imul
ljmp
out
dec
sti
push
xlat
lahf
iret
mov
mov
push
int3
mov
ret
fistl
jne
sub
ds
roll
cmp
shlb
aam
rcl
add
inc
outsb
lahf
pop
dec
and
or
sbb
repz
popf
inc
sbb
movsl
push
loopne
sub
hlt
jg
pop
ret
imulb
sahf
mulb
sbb
outsl
jne
stos
mov
sub
lret
lea
dec
shlb
scas
dec
aaa
inc
jns
xor
mov
std
xchg
sbb
jnp
dec
popa
fwait
in
pop
stos
mov
loope
cwtl
shlb
ljmp
negl
lds
ficomps
inc
int3
inc
bound
loopne
imul
adc
jne
lcall
mov
push
lret
lret
jmp
push
addr16
dec
mov
sub
adc
sbb
stos
add
cmp
sarl
push
in
cmp
movlps
ljmp
lret
in
adc
into
or
mov
jo
or
mov
add
push
jno
mov
sti
and
inc
and
cmp
out
sub
in
add
mov
sbb
inc
xchg
push
lcall
jb
fs
mov
mov
mov
adc
add
pop
push
stos
jecxz,pn
test
test
mov
or
push
addr16
adc
outsl
icebp
mov
lock
push
xor
pop
push
cmp
sbb
rorl
mov
and
in
testl
push
insb
testl
sar
fcmovu
imul
xor
mov
and
in
push
cs
push
ret
pop
jo
int3
jle
adc
cmpsb
out
repnz
push
inc
stos
imul
mov
mov
push
sbb
cmp
test
mov
adc
stos
and
sbb
xchg
dec
sbb
cwtl
push
icebp
mov
cmc
xor
inc
xchg
lea
test
adc
sbb
xchg
sbb
and
rcll
roll
cmpsb
or
add
cwtl
in
inc
xor
ds
push
xor
jns
mov
push
jmp
cmc
arpl
mov
enter
dec
incl
push
sbb
scas
rorl
insl
xchg
or
nop
lods
inc
xor
cmpsb
push
lcall
mov
subl
insb
stos
nop
push
push
pop
sub
aas
ds
push
or
cli
mov
icebp
push
arpl
jg
sub
or
inc
mov
fdivl
ja,pn
xchg
push
sarl
push
mov
test
fwait
jge
adc
mov
push
lret
cmp
popf
aam
jo
xchg
adc
jmp
push
lock
lea
aam
jne
sub
jmp
xlat
imul
lods
enter
jp
mov
or
js
fcmovnu
inc
add
dec
sbb
push
push
xor
icebp
icebp
push
mov
inc
popa
popf
xorl
insb
fwait
push
test
mov
push
maxps
inc
pop
jb
add
fs
pop
jo
push
xchg
lea
and
xor
arpl
mov
mov
add
rorl
pop
pushl
fidivl
add
ret
outsl
add
movsl
mov
fidivrs
leave
jp
lods
movsb
mov
enterw
dec
lret
icebp
lods
adc
mov
dec
fdivl
mov
pushf
and
xorb
orl
lcall
adc
es
icebp
push
and
es
dec
add
push
stc
sbb
sti
call
mov
cmpb
imul
push
mov
arpl
loop
add
repnz
push
inc
mov
rorl
mov
and
test
and
jmp
or
cmpsb
bound
push
push
sub
in
and
push
mov
add
sub
pop
imul
movsb
mov
jmp
jae
fs
push
add
fildll
sbb
push
xchg
les
sub
lods
mov
lds
mov
faddl
mov
mov
movsl
popf
cli
loope
add
jb
imul
cmc
enter
xor
ss
mov
add
int3
call
lock
pop
push
push
pop
cmp
dec
lea
sub
push
dec
sarl
xorb
jno
or
cmp
inc
inc
dec
sub
insb
inc
mov
push
push
jg
ss
loope
es
inc
jl
je
aaa
dec
insb
mov
aas
cld
xlat
aam
out
shl
incl
mov
idiv
xor
rolb
push
mov
call
pop
aam
add
pop
xchg
pop
nop
movsb
inc
inc
data16
cmp
jbe
lds
into
mov
pop
aas
mov
inc
pop
stos
stos
push
mov
clc
arpl
cli
fwait
cmp
jmp
cltd
rcll
mov
xchg
movsl
mov
ret
inc
das
jo
dec
inc
dec
rorb
mov
xor
lods
movsb
and
sbb
add
int
push
adc
ss
dec
pop
dec
and
jle
enter
and
and
dec
pop
push
sub
adc
sbb
xor
inc
push
das
add
enter
cmpsl
outsl
ljmp
lea
xchg
jp
aas
shr
sub
sub
int
jge
pusha
in
in
loope
cmpsb
inc
or
out
out
mov
cwtl
adc
sbb
mov
jno
pusha
adc
hlt
mov
mov
popf
mov
xchg
gs
repz
nop
mov
ret
add
sbb
lods
pop
mov
add
ja
mov
dec
jae
fidivrl
iret
jo
lret
fcomi
add
addr16
in
sbb
stos
dec
dec
xchg
push
mov
add
and
xor
push
es
jbe
xchg
sub
dec
lahf
lahf
dec
std
lret
outsb
mov
pop
xchg
mov
xlat
pop
mov
jnp
xor
arpl
dec
mov
gs
cmp
test
xchg
mov
add
cmp
xlat
xchg
mov
std
aas
loop
or
xor
add
mov
mov
shlb
cmp
clc
add
pop
mov
add
xor
repnz
xchg
jmp
and
in
xchg
mov
out
clc
fs
cmovbe
rorl
notb
pop
out
cmp
push
fldcw
test
aad
cs
aas
sbb
inc
mov
sbb
ja
lds
out
jo
jl
xor
sbb
xor
sbb
xor
in
jbe
test
ljmp
cmpsl
dec
xor
fistpl
stos
loopne
and
ljmp
ss
fwait
adc
sub
jae
fwait
sub
out
add
dec
sub
dec
cmp
add
jl
sbb
pop
sub
xchg
push
mov
fs
insb
mov
lret
mov
mov
jmp
outsb
test
mov
lcall
scas
jne
imul
push
mov
xchg
leave
shl
lahf
fs
sbb
shr
adc
mov
mov
and
pop
xchg
or
les
sbb
pusha
inc
xor
addr16
popa
mov
js
sub
lcall
repz
cmp
lds
jbe
mov
inc
inc
mov
xchg
dec
aam
add
cmp
sbbl
jbe
std
and
aaa
jae
push
jecxz
cmp
jge
lcall
dec
enter
imul
dec
hlt
and
adc
aam
xchg
dec
pushf
jnp
arpl
adc
mov
jmp
adc
shl
lea
xor
sbb
mov
clc
stc
imul
pop
out
mov
jb
pop
mull
xor
xchg
test
sbb
push
loop
inc
bound
and
sbb
mov
mov
mov
pop
and
or
std
movsb
mov
sti
push
mov
out
and
jle
xchg
sub
push
pushf
cmp
nop
sbb
outsb
pop
xor
sbb
mov
sub
cwtl
pushf
jle
aam
push
cld
lret
das
sbb
or
xor
outsb
push
cmp
pop
in
bound
fwait
roll
fistps
or
mov
nop
enter
sahf
fstpt
cld
or
inc
fs
xchg
and
xchg
in
jge
notb
jp
outsl
xor
inc
ljmp
addl
or
pop
xchg
jecxz
vxorps
and
fndisi(8087
test
scas
mov
in
jae
dec
dec
dec
or
out
dec
pop
mov
mov
sbb
mov
mov
mov
add
mov
sbb
push
sbb
dec
sub
xchg
rclb
enter
push
mov
add
pop
loope
dec
push
sti
mov
mov
scas
push
sbb
jno
or
test
fadds
adc
shlb
adc
and
lahf
mov
inc
xor
xor
fwait
xlat
ja
cltd
mov
jno
das
insb
xor
pop
cmpsl
aas
mov
push
hlt
ficompl
cmc
in
fdivr
call
dec
popf
push
and
or
std
and
cmp
rorl
dec
lret
stos
cmc
dec
nop
lock
inc
es
jno
repz
adc
stos
dec
xchg
cmp
and
aam
jnp
fwait
inc
in
out
rcll
subb
dec
or
cmc
push
mov
and
cmp
sub
nop
dec
loop
adc
adc
dec
fists
push
mov
mov
push
xchg
cmpl
jne
xchg
sub
jp
cld
adc
jnp
and
lods
dec
testl
imull
dec
sbb
add
inc
std
mov
pop
or
cmp
int3
and
dec
push
imul
mov
imul
sub
jo
lods
cmp
js
aaa
stc
cmp
andl
popa
mov
fadd
adc
data16
lret
push
dec
mov
sbb
rcrb
inc
or
jae
js
xor
ss
lret
dec
xor
xchg
int
push
or
cmp
ret
add
movsl
xchg
sub
xlat
cmpl
inc
inc
jb
adc
push
push
mov
aam
or
cltd
and
sarl
icebp
push
xor
sub
inc
ret
jns
into
repnz
test
mov
dec
jnp
dec
idivb
loopne
jp
frstor
push
cmp
cs
add
and
in
mov
sbb
pop
mov
jns
jae
inc
cmc
mov
dec
les
gs
add
or
xchg
stos
xor
mov
push
mov
sub
aaa
out
in
sti
or
inc
inc
movsb
sub
jae
cmpsb
aad
shrb
int3
clc
movsb
push
div
addr16
lock
popl
cmp
and
adc
shlb
jle
stc
mov
out
cld
cmp
ficoms
mov
out
stos
xchg
cmp
add
jb
adc
or
push
lcall
aaa
fucom
sbb
mov
push
sbb
clc
ds
add
push
inc
fcmovbe
inc
xor
out
push
aad
daa
rcr
test
xchg
xchg
jecxz
jno
into
mov
fldenv
fidivl
mov
xor
jbe
or
iret
adc
pusha
iret
test
js
mov
in
push
mov
pop
or
pop
inc
mov
aad
pop
xchg
inc
bound
push
aas
xor
imul
test
add
or
pop
pop
insb
cltd
xchg
pop
adc
push
or
lds
lcall
xor
or
rorl
rcll
nop
push
dec
repnz
outsl
out
inc
fistl
cmp
insl
mov
push
and
add
inc
pop
movsl
or
sub
cli
rclb
push
cli
xchg
lods
sbb
test
stc
xchg
mov
cmp
ficompl
lret
scas
mov
xchg
lahf
mov
stc
dec
lret
or
movsl
mov
rclb
addr16
xor
inc
pop
jge
push
jecxz
jns
or
stos
xchg
xchg
mov
movlps
add
or
add
xlat
out
jns
mov
push
ds
xor
movb
sti
inc
out
inc
cmp
repz
sub
or
scas
mov
lret
dec
jg
inc
mov
add
psraw
mov
dec
cs
push
xor
add
lock
das
leave
add
cmp
outsb
scas
push
sbb
loope
aaa
jno
jne
shrb
push
rol
loop
daa
in
push
insl
mov
dec
and
out
leave
inc
test
fists
mov
inc
push
sbb
or
insb
cwtl
sbb
sahf
mov
lock
call
cmpsb
or
nop
xor
sbb
lcall
and
addr16
incl
cmc
daa
lret
sub
dec
mov
push
lea
cmp
jo
idiv
pushf
mov
imul
add
sbb
cmpsb
mov
pop
sub
jl
lahf
shlb
sub
xchg
aad
arpl
lods
add
in
xor
stc
push
nop
ficomps
gs
les
repnz
test
push
sbb
adc
mov
fs
pop
push
adc
je
jo
jae
inc
add
pop
pop
push
test
cmp
ja
test
fisttps
xchg
xor
cld
repz
es
stos
jp
gs
fldcw
jmp
pop
cltd
test
andl
add
xor
mov
fnstsw
and
in
inc
pop
jae
push
idivl
inc
sub
jo
add
pop
push
leave
ljmp
shll
movsl
cmp
add
aaa
jbe
loope
jnp
dec
cltd
cmp
rcrb
or
inc
sahf
enter
sub
add
pop
adc
pop
or
imul
hlt
xchg
call
out
pop
stc
jecxz
mov
sbb
aam
into
icebp
in
mov
shlb
lods
push
pop
iret
pop
jb
leave
leave
mov
sub
jge
outsl
sub
int
es
jns
shlb
push
sbb
dec
punpcklwd
sti
imul
dec
out
sub
push
jl
daa
mov
or
jae
rcr
mov
cs
lcall
aad
aas
out
divl
fcomps
mov
mov
cmp
andb
dec
enter
sub
xchg
mov
cmp
cmp
pop
and
push
mov
fidivl
fstpt
mov
loope
pop
ficoml
repz
negb
jo
sbb
dec
in
cmc
mov
cmp
or
jge
leave
ss
cltd
in
fcmovb
push
dec
inc
and
and
xor
cmpsl
test
dec
add
mov
adc
in
jp
sbb
popa
adc
in
pusha
dec
mov
test
mov
sub
in
or
xorl
cwtl
push
cmp
jbe
outsl
outsl
and
lcall
inc
int3
aad
sbb
jbe
dec
cs
cmc
dec
addr16
or
outsb
in
shrl
mov
ja
mov
add
sti
imul
sbb
mov
pop
movsb
arpl
sbb
inc
into
ret
out
xchg
scas
ljmp
je
insb
push
pop
xor
jbe
out
mov
push
call
push
jge
in
mov
icebp
dec
jecxz
out
jb
inc
jo
sarl
inc
shr
mov
mov
jp
iret
int3
scas
lds
frstor
xchg
rcl
lods
sbb
sub
cmp
cmpsb
jle
push
cwtl
lcall
inc
mov
mov
dec
arpl
adc
test
inc
dec
lods
insb
leave
lret
dec
les
mov
stos
xchg
lahf
inc
clc
fisubs
jmp
dec
push
pop
imul
cmp
push
inc
and
sbb
push
push
dec
and
ror
dec
xchg
lods
jge
into
cmp
fdivrp
xor
add
insl
mov
adc
nop
mov
fdivrl
mov
lahf
xlat
sahf
ret
cmpsb
pop
dec
push
jne
push
je
imul
lods
in
test
and
cld
je
mov
in
lcall
shll
pop
loopne
mov
movsb
lahf
xchg
ret
mov
std
movsl
dec
ds
or
aad
jne
int3
das
pop
pop
jecxz
mov
outsl
cmova
clc
in
xchg
add
jbe
cli
mov
into
push
or
sbb
jmp
lret
xor
test
add
shl
dec
out
imul
or
dec
mov
incb
rolb
outsl
je
jl
test
les
rcrl
insb
ret
mov
mov
or
lea
nop
and
mov
imul
sahf
or
sbb
lcall
inc
push
and
cltd
stos
or
cmp
sub
test
jns
cmpsl
int3
fwait
cmp
sub
push
scas
mov
cli
stos
pop
adc
xchg
sub
push
sahf
xor
fsincos
mov
fadds
dec
push
jo
loope
jno
and
mov
popf
mov
or
leave
adc
inc
push
dec
xor
xchg
mov
inc
ds
std
mov
in
jge
iret
out
push
rcr
inc
fldl
mov
sbbb
mov
sub
add
or
xchg
mov
cli
es
jecxz
dec
sub
add
push
sub
and
pop
adc
stos
inc
out
xor
sbb
out
nop
jae
mov
aas
sarb
cmc
mov
xor
subl
sub
call
pop
rolb
dec
hlt
jo
push
jne
dec
adc
and
push
xor
cwtl
jp
fimuls
ds
cwtl
pushf
outsb
ja
push
inc
movsl
inc
sarb
xchg
push
mov
jmp
or
or
js
insl
jbe
movsl
adc
scas
xchg
push
sub
cld
or
repnz
push
cmp
dec
sub
lea
pop
adc
icebp
adc
fdiv
xchg
call
and
cmp
lcall
jmp
sahf
lea
lcall
rcl
repz
jb
divl
arpl
data16
push
xchg
mov
aas
daa
test
clc
addl
mov
pop
dec
dec
fiaddl
sbb
fsub
les
sbb
or
inc
sbb
test
fchs
das
mov
lods
sub
popf
push
aad
mov
imul
cmp
lock
rcr
mov
sbb
push
add
fisubrl
jnp
mov
adc
push
fsubl
into
outsl
imul
shl
pop
sbb
add
push
mov
mov
push
xor
fistps
dec
aad
or
divb
out
roll
xor
push
ljmp
xchg
inc
popa
aas
sbb
lahf
pop
push
loopne
xor
sub
adc
mov
jno
mov
je
sbb
jmp
mov
nop
xchg
jmp
sub
dec
dec
cltd
push
mov
test
cld
hlt
cwtl
hlt
sbb
mov
pusha
push
repz
mov
sbb
inc
xchg
loop
and
movsb
xchg
jno
cmpsb
xchg
adcb
dec
das
iret
mov
pop
mov
push
sti
sub
jp
and
iret
xchg
mov
movsb
pusha
adc
dec
sbb
pop
iret
mov
and
cltd
xor
stos
mov
incl
movsb
adc
push
jbe
push
fs
sbb
cmp
xor
adc
aas
je
mov
jns
xchg
sbb
jno
jb
inc
mov
fiaddl
mov
mov
les
jnp
mov
inc
mov
xchg
add
pop
movsl
or
pushl
icebp
lods
jbe
loope,pt
lret
insl
in
adc
popa
and
outsl
popf
xchg
and
pop
jl
bound
push
daa
mov
jnp
lods
ret
insl
enter
outsl
test
cmp
repnz
or
push
fnstsw
push
xchg
repz
test
insb
scas
inc
sub
or
or
add
les
mov
push
pop
es
fnsave
jle
rcll
inc
test
mov
das
dec
rcl
movsl
hlt
pop
jg
pop
and
xchg
dec
sub
and
mov
mov
repnz
repz
add
cmp
lahf
sti
test
add
sbb
and
leave
cmpsb
ja
mov
cmp
mov
shr
imul
mov
sub
xor
mov
and
das
xlat
cmp
js
xor
mov
adc
jmp
scas
xor
sbb
popa
xor
sbb
lret
mov
lret
pop
push
push
pusha
push
lds
fdivrs
mov
inc
sbb
mov
out
pushf
and
in
add
loop
jns
cmp
cmc
ljmp
test
add
test
das
aas
lcall
mov
push
out
ss
mov
jne
pop
lret
xorl
push
add
dec
push
fisttpll
pop
mov
mov
mov
sbb
dec
xchg
xchg
xchg
pop
and
pop
jbe
mov
pop
jp
pushf
xchg
fcoms
sub
jnp
aam
inc
push
enter
mov
push
mov
fdivrp
sub
stos
mov
mov
out
add
jae
mov
cmc
adc
pusha
push
adcb
fnstcw
testl
jle
in
mov
insl
pop
inc
add
jb
scas
pop
hlt
mov
mov
sahf
jl
mov
popf
mov
jl
jmp
lret
jo
cltd
data16
dec
add
and
sti
fdivl
and
mov
xor
shlb
mov
clc
subl
hlt
pusha
jg
sub
pop
call
jge
sub
dec
outsl
leave
fwait
call
dec
push
inc
std
ljmp
xchg
mov
enter
dec
mov
adc
test
lock
add
shlb
ss
sarl
icebp
cmc
out
cs
push
fstpt
pop
call
test
cwtl
es
cli
loopne
adc
jne
xchg
pop
jecxz
aam
add
pop
data16
fsubl
cmp
mov
cli
jno
mov
xchg
fistps
push
scas
jle
js
test
dec
adc
xchg
in
or
repnz
add
push
pop
jl
push
add
fists
and
jbe
inc
cmp
pop
xchg
adc
loope
rcl
js
jne
lret
sahf
lock
xchg
dec
cmc
lcall
lock
jnp
push
or
mov
les
rcrl
dec
add
or
mov
xor
cmpb
jp
or
mov
cs
arpl
xor
cmpsl
inc
xchg
dec
loope
or
xchg
insl
mov
add
sub
add
in
dec
push
and
pop
daa
xlat
shll
push
aad
test
xchg
daa
mov
mov
jge
xchg
les
cmpsl
clc
or
sbb
sbb
dec
xchg
inc
cmc
insl
jbe
jp
daa
ljmp
mov
adc
jmp
pop
sub
mov
test
jno
xchg
stos
in
jns
jns
inc
sub
push
sub
lcall
push
push
jnp
cmp
push
cmp
mov
push
popa
hlt
adc
add
sti
popf
ret
dec
ficompl
jne
filds
mov
fiaddl
xchg
sub
cltd
pop
gs
jno
shrb
insl
mov
iret
test
cmpxchg
or
in
cmp
jns
pop
in
cmpsl
add
loop
jl
jecxz
imul
mov
iret
mov
lcall
pop
xchg
outsl
daa
popf
fdivrl
xchg
xor
fstpt
add
div
int
or
mov
pop
imul
in
hlt
lock
stc
and
std
xchg
jae
and
lods
mov
nop
mov
lods
lahf
xor
mov
cmp
add
icebp
mov
lret
in
es
cmp
cmp
mov
pop
outsb
add
daa
inc
mov
add
sub
sub
icebp
daa
cmp
jge
jl
pop
out
mov
mov
mov
push
scas
cmpsb
sahf
xlat
sti
cltd
pop
xchg
and
sti
mov
mov
push
dec
push
push
jno
sbb
xchg
xchg
lods
rolb
add
xchg
cmp
test
gs
popf
testl
arpl
jb
mov
std
pop
pop
dec
subl
sub
jle
xchg
sarl
add
stos
ljmpw
inc
mov
inc
mov
stc
call
xchg
inc
sbb
push
insb
aam
dec
push
rolb
sbb
mov
xor
mov
push
add
push
adc
mov
cmovb
cmp
xchg
cli
pop
aam
push
cmp
or
xor
rolb
popf
hlt
pusha
fsubrs
adc
rcrb
repz
add
fists
popa
jnp
cmp
add
imul
out
pop
ret
cmp
stos
push
lret
mov
add
adc
mov
cmpsb
xlat
sub
adc
cmc
jnp
pop
sti
cmp
and
mov
sti
cmp
ljmp
std
dec
and
pop
daa
loope
sbb
and
fcompl
mov
iret
sbbl
sub
xchg
dec
sbb
sub
sahf
cmc
pop
ret
ss
push
lahf
push
mov
lahf
push
and
cs
scas
mov
in
cmp
push
dec
outsl
xchg
test
scas
dec
push
dec
inc
cmp
popf
mov
pop
popa
jno
js
and
mov
int3
aam
and
sub
dec
push
jnp
xorb
inc
sbb
or
shrb
inc
push
inc
das
cmc
jmp
sahf
pushf
mov
adc
jbe
mov
xchg
and
rcl
pop
sub
push
xchg
adc
arpl
in
sub
jno
scas
imul
adc
loop
cmc
sbb
and
lods
xchg
adc
into
sub
lods
add
jle
mov
add
lds
mov
jmp
mov
dec
or
testb
and
inc
mov
sbb
adc
in
out
mov
add
dec
clc
adc
sti
inc
or
fidivs
fildl
jae
movsl
and
out
add
sbb
cmp
pop
inc
ror
dec
pop
out
dec
mov
mov
out
cmpsl
adc
icebp
rcrl
mov
sbb
fsubrl
jno
mov
ficoms
or
adc
in
pop
filds
add
ret
or
hlt
call
mov
and
aaa
das
ficomps
test
or
clc
repnz
scas
mov
in
loope
in
in
add
pop
repz
mov
orb
mov
push
mov
mov
outsb
gs
out
cmp
inc
cmp
adc
adc
xor
jg
inc
sub
sbbl
lods
sahf
cmc
fadds
fcmovbe
inc
jb
sub
mov
jp
dec
out
hlt
cld
addr16
scas
xchg
mov
cmc
lock
mov
ljmp
insb
jno
lds
xchg
cmp
aas
sbb
jne
or
popa
push
orl
test
sub
in
lock
xorps
mov
jb
imul
hlt
lret
lods
pop
adc
jmp
aas
cmp
cwtl
ret
cld
add
xor
and
aad
out
cmp
cld
in
mov
jb
xchg
fs
daa
stos
addr16
mov
add
shrl
sbb
dec
scas
mov
cli
xor
stos
in
xlat
popa
mov
jo
cs
mov
mov
imul
js
cmc
stc
push
dec
out
rolb
sbb
inc
aas
adc
jb
pop
fistl
sub
ja
mov
inc
xor
sub
sub
or
inc
js
push
inc
sbb
jle
xor
cmp
call
cmp
dec
xchg
xchg
xor
sahf
xor
pop
push
cmp
mov
mov
mov
push
push
in
and
xchg
push
or
sbb
rcr
adcb
js
dec
cmp
xchg
jne
lahf
xlat
or
jle
test
xor
rclb
xor
cmp
adc
pop
mov
cmp
test
lret
mov
xor
mov
fildl
cli
mov
in
das
push
arpl
inc
adc
inc
aaa
popa
clc
and
sbb
and
adc
push
incl
sbb
aas
push
les
fisubs
std
cmp
lret
cmpsl
outsl
cmp
aam
rolb
scas
xchg
add
mov
orl
push
popa
and
je
out
je
lcall
ljmp
in
ds
mov
scas
sub
jle
icebp
aam
inc
or
push
stos
les
iret
sbb
leave
mov
push
test
push
fidivs
ficoms
test
jo
call
mov
inc
stos
pop
cli
in
xchg
jmp
rolb
data16
xor
sti
dec
push
ss
push
mov
jge
jno
pop
xchg
mov
imul
sub
push
bnd
add
dec
or
test
pop
xlat
mov
jns
push
pop
loop
and
mov
out
cmpsl
lret
loopne
negl
imul
mov
movsl
fisubs
sar
popa
or
push
xor
dec
out
loope
sub
xlat
push
xchg
daa
lods
xchg
sub
inc
dec
in
push
lods
fimull
enter
cmp
js
stc
push
fs
rol
push
lds
stc
mov
sub
dec
addb
xor
or
jge
and
mov
xor
test
cmp
mov
mov
frstor
ret
sub
aam
jecxz
mov
es
xor
push
stos
ljmp
xlat
pop
pop
in
adc
or
stos
xchg
push
push
cmp
mov
sahf
add
push
mov
stos
dec
add
negb
sbb
out
or
dec
out
jg
test
ljmp
loop
int
pop
mov
imull
popf
test
ret
push
iret
push
sbb
mov
dec
xchg
or
dec
inc
mov
cmpsb
outsb
jecxz
ljmp
jge
in
fcomi
pop
pop
into
jae
sarb
dec
lods
test
inc
jns
add
scas
jecxz
xor
dec
push
enter
cmp
and
fs
repnz
pushf
jns
push
jp
pop
sbb
add
fsubs
xchg
loop
fsubr
jp
cmc
lock
sbb
pop
mov
test
adc
adc
mov
enter
mov
dec
pop
daa
inc
fucomi
ds
cmpsb
inc
aam
enter
out
xchg
lods
push
cwtl
fcmovnu
inc
ss
dec
add
addb
mov
fs
sqrtps
mov
jns
int
push
xor
push
add
js
sub
fldl2e
jecxz
sub
cmpsb
shll
mov
lods
aaa
in
adc
popa
movsb
loope
mov
mov
icebp
int
adc
dec
fcmove
lret
mov
mov
jge
and
jns
lcall
into
mov
jo
lea
cwtl
or
into
xlat
test
fstps
mov
popl
popa
nop
xor
push
mulb
mov
js
xor
and
sub
mov
and
and
sub
mov
inc
sub
xor
mov
xor
out
xor
or
xchg
lea
xchg
fld
push
cmp
or
insl
add
stos
stos
ljmp
xor
xlat
cmpsl
push
adc
pop
jbe
mov
push
xor
adc
cmp
jmp
outsb
imul
icebp
pop
imul
aam
xchg
fidivrl
in
dec
lods
xchg
inc
loope
int3
dec
mov
pop
adc
test
mov
ss
mov
imul
or
aad
jmp
push
pop
add
push
xchg
sbb
test
nop
inc
adc
inc
push
dec
jmp
lahf
popa
add
inc
ret
sub
out
pop
inc
fidivl
add
jae
sahf
jl
insb
popf
loopne
test
outsl
jmp
and
neg
sub
pop
push
subl
mov
cwtl
dec
das
inc
in
setae
out
jmp
adc
test
cmp
shlb
push
or
ret
mov
inc
data16
adc
mov
jne
cmp
push
and
mov
adc
out
or
call
mov
pop
pop
ficoml
sti
mov
xor
daa
push
imul
fidivs
add
scas
inc
pop
mov
mov
pusha
inc
subl
aam
jmp
sbb
or
push
stc
adc
cmpsl
cmp
in
outsb
mov
jmp
jle
dec
push
ja
test
sahf
mov
xor
xor
adc
sti
push
xor
dec
int3
dec
and
sarb
test
popf
pop
dec
sti
mov
mov
mov
pop
add
pop
xchg
mov
stos
out
loopne
outsb
dec
ret
repz
sbb
mov
pusha
cmp
arpl
sub
hlt
adc
mov
dec
fisubs
test
mov
mov
mov
jge
fbld
jle
add
shll
cmp
sbb
pop
push
push
cmp
pop
das
jne
mov
push
jle
ret
and
insb
clc
aaa
sbb
stos
test
xchg
imul
mov
xchg
jo
loope
std
int3
inc
push
aas
jnp
cmp
mov
add
jge
cmp
out
sub
inc
cli
sub
out
jge
or
dec
movsl
das
pop
push
inc
jae
pop
test
imul
dec
inc
cmpl
mov
das
cli
int3
sbb
xchg
and
dec
dec
int3
push
mov
cmc
divb
scas
jns
lahf
out
ja
mov
cmp
out
lret
popa
ja
mov
pushf
test
adc
jae
in
outsb
dec
mov
addl
dec
or
sub
mov
test
adcl
cmp
xchg
shlb
les
lods
repz
jmp
add
mov
xor
pusha
scas
jno
jg
jns
mov
lock
inc
sbb
xor
mov
jno
jnp
jae
mov
inc
mov
mov
cmp
es
and
addr16
xor
das
dec
push
mov
mov
mov
movsb
adc
dec
add
in
sarl
aas
or
les
ljmp
pop
push
iret
push
cwtl
fistpl
mov
adc
fstpt
mov
enter
or
pop
repnz
jnp
popa
jmp
push
stos
or
inc
mov
decl
dec
pop
sub
in
jns,pt
xor
ds
cmpsl
mov
stos
mov
das
inc
cwtl
xchg
pop
rcrb
cld
sub
int
mov
jecxz
sar
aad
out
mov
dec
xor
sub
xchg
js
pop
sub
xor
clc
addb
jmp
mov
pusha
or
jbe
cs
sarb
add
or
adc
mov
mov
imulb
fxch
jp
sbb
mov
jbe
xchg
and
push
and
push
stos
mov
hlt
cmp
leave
cmp
str
xlat
psubsb
xchg
ljmp
push
mov
aad
and
mov
inc
cltd
sbbb
push
sbb
in
loop
xchg
pusha
shlb
xor
iret
imul
xchg
ret
push
call
mov
sub
push
jecxz
ds
into
insl
scas
in
mov
imul
rcl
movsb
fmul
cmp
lret
or
dec
lret
push
sbb
jle
xor
push
mov
fs
xorb
sub
stos
and
ret
xlat
arpl
fnstsw
cmp
movl
aas
jg
and
inc
push
dec
sahf
call
cwtl
xchg
ficomps
and
outsl
adc
pop
mov
mov
arpl
and
pop
cmpsb
js
dec
xor
fwait
loope
mov
push
jbe
mov
xor
and
add
dec
mov
mov
sub
cmp
addr16
mov
scas
dec
mov
xchg
xor
std
js
cmp
inc
call
pop
sub
test
mov
cmp
xor
dec
push
cwtl
mov
addr16
cmpsb
jg
mov
fsubrs
lret
nop
andb
repnz
daa
mov
aas
cmp
cmpsb
push
stos
inc
sbb
xorl
repz
outsb
loope
outsb
mov
aaa
pop
pushf
push
cmpsl
sub
fcomip
mov
popa
jne
and
jns
push
and
adcl
pop
mov
test
add
icebp
adc
jo
ficompl
aaa
xor
xor
push
outsl
clc
scas
mov
rol
sub
sub
cmpb
into
lods
clc
test
outsb
mulb
mov
adc
inc
ficoml
lods
loopne
push
push
scas
pop
dec
xor
jmp
cmp
cmp
addb
pop
fcmove
mov
dec
out
push
popa
vpunpcklbw
cmp
or
cs
push
addr16
dec
int
cmp
shlb
es
dec
stos
sbb
mov
jo
out
mov
std
add
push
rclb
adc
and
inc
in
out
xlat
daa
pop
insb
sar
dec
lods
stos
or
jle
push
push
fs
push
orl
jno
int
lahf
faddl
xchg
jno
mov
xchg
imull
in
lods
pop
inc
hlt
mov
popa
sub
add
test
pushf
insl
inc
stc
sub
or
xchg
push
fstl
or
in
in
sub
inc
xchg
ja
jae
ja
ds
js
mov
inc
test
or
add
mov
jg
lcall
nop
push
movsl
lret
shlb
jmp
pop
das
out
xchg
mov
sahf
icebp
sbb
mov
out
mov
rorl
inc
mov
add
xor
inc
push
fistl
adc
sarl
mov
pop
xchg
scas
mov
cwtl
or
jecxz
sub
jae
mov
repz
stc
mov
cltd
xchg
jo
cmpsb
repnz
sbb
fsubrl
adc
sbb
xor
fisubl
movsb
movsl
daa
cld
popf
call
and
push
mov
leave
sub
lret
rcrb
xchg
mov
test
cmp
sub
movl
repnz
out
or
lcall
sub
jns
pop
enter
jmp
out
movsb
cmpsl
mov
push
mov
lea
mov
adc
adc
xor
jno
shrb
cmp
sbb
movsl
das
mull
stos
aad
inc
mov
aas
outsl
add
fsubs
cwtl
sbb
pop
jae
pop
call
out
insb
lock
push
negl
ror
cmp
sti
fmuls
mov
sub
adc
ja
mov
xchg
jg
pop
mov
fmuls
xor
ja
adc
xchg
popl
rcr
clc
dec
xchg
mov
lock
xchg
fdivrp
push
sbb
add
inc
std
addr16
adc
fsubl
shrb
cs
jo
loope
call
jle
add
jl
mov
jl
add
mov
push
call
mov
int3
jbe
sbb
push
cmp
mov
scas
mulb
mov
cmp
xor
mov
shl
adc
loop
mov
lcall
mov
rep
f2xm1
jp
mov
lahf
imul
mov
sub
xchg
sarl
mov
cmc
lcall
xchg
ret
repz
cmp
ret
or
enter
in
push
adc
xor
ss
mov
pop
xor
in
std
mov
inc
scas
out
shr
out
andb
bound
bound
sahf
mov
pop
add
and
stc
cld
pop
ja
pushf
inc
or
mov
dec
ljmp
pop
jecxz
mov
adc
jbe,pt
mov
mov
lcall
aaa
mov
sub
in
mov
push
pop
mov
repnz
inc
cltd
insb
mov
subl
outsb
mov
xor
cwtl
mov
scas
xor
into
call
mov
cld
loopne
imul
dec
ret
mov
gs
sub
sbb
dec
pop
in
add
push
add
mov
push
fucomp
or
mov
sbb
and
out
lods
adc
lcall
js
add
dec
fwait
fidivs
adcl
sbb
ja
lret
cs
pop
cmpsl
loopne
in
scas
iret
cmp
mov
test
loop
cmpsl
jbe
inc
pusha
mov
mov
jne
mov
xchg
movaps
ss
xchg
lods
loope
fsubrs
sub
add
and
cli
insl
aas
dec
aas
mov
jle
dec
std
and
mov
dec
push
mov
inc
jecxz
mov
sarl
cmp
push
in
mov
adc
or
in
inc
mov
mov
pop
dec
loope
and
or
sub
lret
rorl
pop
inc
sbb
lret
rcrl
pusha
ret
adc
mov
cmc
and
iret
or
test
cli
lods
ret
out
sbb
push
pop
lcall
aas
nop
mov
mov
pusha
or
or
and
pop
add
push
mov
xchg
aas
gs
cli
test
pop
jne
in
dec
pushf
mov
das
decl
sub
mov
cli
sub
lahf
dec
cmp
addl
inc
add
sbb
cltd
sub
out
mov
rorb
leave
sbb
inc
pop
xchg
jae
outsl
imul
xchg
push
and
xchg
repz
or
sarb
rolb
insl
xchg
sbb
pop
or
push
xchg
xor
cwtl
ss
cmpsb
adc
nop
dec
inc
dec
aaa
repnz
mov
jo
xor
or
xor
addl
shrb
jp
and
mov
inc
lock
and
inc
mov
adc
jnp
pop
fs
aad
sub
mov
fbstp
das
xchg
or
sub
fwait
into
mov
xchg
iret
xchg
fnsave
mov
jne
rcr
hlt
pop
in
in
pop
pop
cwtl
push
pop
jge
push
mov
bound
mov
mov
push
cmpb
outsb
out
lock
mov
lret
mov
jns
xchg
sbb
sbb
ljmp
pop
xlat
ss
outsb
push
jbe
mov
mov
xchg
out
push
rcl
repz
out
jbe
push
sbb
in
cmp
sbb
fs
adc
es
mov
xchg
nop
jo
aas
lds
insb
mov
fists
or
aaa
cld
sbb
inc
int3
notb
test
cmp
mov
mov
jnp
mov
les
testl
ret
sarb
stc
push
xor
xor
xor
test
and
rorb
repnz
sub
cmp
and
add
clc
pushf
scas
push
enter
arpl
jnp
jle
fwait
test
pop
loop,pt
ds
cld
add
fadds
push
sti
mov
popf
test
jecxz
xchg
lods
jl
push
lods
lret
insb
fnstsw
insl
aam
xor
cmp
test
fadds
pop
jb
jmp
fsubl
inc
add
outsb
or
dec
sarb
xchg
test
out
cmc
adc
cmpsb
lock
dec
out
xor
push
push
adcl
scas
sbb
mov
sub
movhlps
out
jne
addb
ljmp
mov
or
sub
stos
scas
pusha
inc
pop
mov
sbb
push
sub
sub
call
dec
pop
mov
arpl
js
and
cmp
and
or
cli
fidivl
out
inc
or
lea
adc
ficoms
das
and
pop
add
push
loope
lret
outsl
jne
pusha
in
imul
dec
psubusb
rorl
xor
cmpb
movsl
or
dec
adc
mov
jns
mov
sahf
xor
jnp,pt
adc
clc
test
add
mov
add
push
ja
fdivp
mov
arpl
ss
out
mov
lcall
bound
adc
stos
enter
pop
js
pop
shr
mov
dec
push
jp
mov
xchg
insl
or
xorb
into
icebp
aaa
in
imul
pop
lret
jbe
pushf
lea
pop
scas
or
or
push
das
inc
push
out
test
cmp
xor
and
movsb
cmp
gs
les
test
sbb
push
sbb
push
xchg
sar
jecxz
mov
jns
add
pop
xchg
add
test
out
pop
xchg
adc
jmp
in
jecxz
sbb
movsb
std
inc
jle
lds
jne
xchg
insb
mov
mov
cmp
pop
insb
adc
mov
arpl
adc
xchg
movsb
pusha
iret
sbbl
inc
out
push
movb
insl
adc
mov
push
lea
rcrb
scas
adc
jno
std
xchg
ss
xchg
xchg
lock
push
xlat
push
icebp
icebp
aam
rol
outsl
pusha
mov
leave
addb
pop
stc
mov
pop
lock
or
in
sti
lret
jbe
or
mov
pushf
mov
pop
mov
je,pn
ja
lods
cli
or
and
xor
gs
addr16
dec
ss
test
in
push
adc
cmpsb
call
aas
dec
imul
jl
rcr
lcall
mov
inc
push
mov
js
mov
imul
ret
mov
out
cmp
loope
adc
in
mov
data16
gs
std
inc
aaa
pop
test
mov
addb
or
addr16
push
mov
jp
push
lcall
movl
or
fs
mov
mov
jae
aaa
dec
sub
push
push
lods
fnstcw
es
movb
std
inc
dec
pop
movsl
daa
jo
popf
or
pusha
lret
mov
xchg
cmpsl
pop
aad
sbb
inc
lcall
in
stos
push
in
add
movsl
sbb
aaa
sub
jb
das
std
jno
and
dec
test
sbb
xor
iret
imul
mov
sbb
cmp
call
test
dec
push
orl
mull
adc
lds
ret
or
outsl
insl
or
xchg
sbb
sbb
push
in
jg
dec
mov
cmp
gs
ret
jg
jae
in
mov
and
mov
stos
jb
mov
pop
aaa
cmp
fcompl
stc
insl
cmp
mov
sub
roll
pop
pop
sub
cmp
push
imul
mov
mov
stc
mov
inc
aaa
jns
pop
cltd
pop
and
nop
es
mov
and
mov
adc
cmp
enter
cli
push
pusha
mov
repz
arpl
imul
push
mov
scas
mov
mov
and
cli
and
mov
sub
or
inc
mov
push
pop
adc
xor
adc
mov
xchg
jnp
jp
jmp
shrb
pshufw
xchg
sarb
and
xlat
adc
test
dec
sbb
std
fidivrl
rcrb
jp
test
dec
loopne,pt
lret
test
dec
cmpsl
out
mov
sub
mov
cmp
addr16
addr16
aam
mov
jp
jae
iret
mov
inc
jp
jne
lock
sub
inc
stos
mov
push
icebp
shlb
xchg
dec
mov
xchg
outsl
and
ss
dec
pushf
movsl
gs
enter
cli
icebp
jle
out
sbb
xor
lcall
xchg
pop
cld
sub
lds
add
rcl
sbb
pop
or
sub
pushl
push
repnz
jge
out
or
lea
or
es
jbe
fstl
outsl
jb
subl
popa
loope
lret
pop
repnz
inc
lods
jbe
and
pop
andl
and
cmc
mov
andl
arpl
jbe
and
cmc
inc
les
popa
aam
lds
and
cltd
jmp
insb
inc
test
cwtl
pop
inc
dec
or
jnp
int3
lock
jno
lret
inc
loop
jle
cli
stc
sub
mov
jnp
mov
and
test
test
mov
dec
jmp
push
cli
lock
and
adc
shrb
cmp
test
out
scas
mov
test
ja
dec
or
cmpsb
insb
lods
or
cmp
std
sub
clc
cmp
pop
stos
dec
adc
cli
add
test
xchg
daa
push
fistpll
data16
mov
mov
inc
in
push
ret
aam
call
pop
mov
add
jge
lods
in
adc
jl
in
shlb
xchg
adcb
pop
push
je
mov
std
mov
call
hlt
adc
sbb
les
inc
icebp
popf
mov
adc
xchg
mov
push
cmc
xchg
lock
sbb
lahf
sub
bound
dec
fcmovnb
xor
push
shlb
sar
cmpsb
das
mov
js
jno
loope
es
in
out
jno
push
jg
int
adc
cmp
aad
xor
pop
or
imul
pop
rcll
sub
or
cmc
lock
lods
aaa
sbb
addr16
je
mov
mov
test
jl
pop
ret
lods
mov
mov
jecxz
scas
in
rolb
cli
adc
outsb
dec
cmpsb
dec
inc
pop
fldt
cld
and
mov
pop
pop
mov
mov
subl
fildll
mov
cmpsb
sbb
mov
and
pop
sahf
fidivs
push
fwait
shl
stos
jns
sub
das
sti
add
and
pushaw
icebp
and
xor
push
push
mov
push
call
cmp
mov
ficompl
jb
out
xor
aad
cmp
adc
cld
jne
add
push
inc
ret
mov
andnps
jle
sub
das
inc
call
dec
cld
enter
mov
mov
jns
mov
fwait
stos
sbb
and
sub
mov
adc
mov
test
aaa
in
jmp
jne
imul
dec
inc
insb
js
inc
and
in
nop
iret
adc
out
sbb
mov
mov
clc
lock
cmp
hlt
ljmp
icebp
mov
not
adc
es
ljmp
add
jp
frstor
add
jbe
jno
daa
adc
or
jnp
icebp
add
push
adc
or
mov
cmp
leave
or
mov
rcrl
xchg
sbb
mov
adc
iret
or
dec
movsb
adc
push
or
xchg
aas
jp
cmp
lea
icebp
arpl
xor
lahf
xchg
lods
std
push
xchg
int3
sti
int3
add
pop
movsb
or
mov
test
mov
lods
scas
fisubs
shll
dec
loop
enter
leave
jl
cmp
out
xlat
mov
cli
lods
dec
ds
push
je
or
test
jns
das
xchg
xchg
dec
or
ret
cvtpi2ps
stos
lea
jle
xor
es
or
loopne
inc
orb
mov
xchg
or
incb
add
xor
sbb
lods
mov
add
hlt
or
sarl
mov
adc
shr
or
out
pop
test
nop
enter
push
push
adcl
mov
cmp
mov
inc
ficomps
inc
cmpl
loop
xchg
jecxz
fcomi
xchg
add
jecxz
cli
mov
test
sbb
cmc
mov
test
sub
push
imull
test
dec
mov
inc
fs
mov
xor
mov
fs
test
mov
imul
inc
inc
xor
ret
and
aam
add
adc
outsb
mov
icebp
sub
xchg
add
aam
dec
sbb
movsl
mov
push
scas
pop
or
or
sub
cmpsl
lds
mov
or
pusha
mov
sub
fucom
leave
cmc
lret
nop
xor
nop
adc
mov
ficoms
dec
mov
inc
imul
inc
arpl
cltd
pop
gs
mov
aam
stos
scas
inc
popa
inc
sub
xor
mov
out
inc
mov
mov
sbb
in
ror
outsl
sub
and
cmp
xchg
cmc
in
mov
push
aas
sub
dec
mov
fnstsw
sbb
xchg
insl
pop
push
les
sbb
into
pushf
xchg
adc
dec
mov
int
jmp
rcll
sbb
loopne
cmp
lds
in
adc
in
jg
push
movsb
add
adc
lahf
cmp
pop
cmp
jmp
rep
imull
daa
add
adc
pop
sbbl
or
sbb
gs
fistps
stc
les
imul
xor
xchg
or
mov
movsl
push
into
cltd
cmp
mov
jg
cmpsl
cmp
sar
mov
sbbb
stc
ficoml
xor
xor
mov
call
xchg
out
and
pop
inc
xchg
mov
mov
pop
test
inc
mov
jle
mov
xchg
mov
mov
jae
adc
addr16
or
imul
adc
ja
hlt
in
shl
pusha
int
jno
test
lret
or
mov
adc
mov
pop
and
pop
push
hlt
mov
mov
cmp
cmp
adc
mov
cmp
leave
rorb
mov
push
movsb
icebp
loopne
shlb
xchg
push
dec
pop
insl
mov
or
add
fwait
xlat
mov
sarb
test
out
imul
inc
cld
inc
enter
adc
pop
shl
pop
push
dec
mov
repnz
or
sbb
cmp
push
stos
mov
popa
nop
pop
push
mov
and
mov
xchg
std
xchg
dec
mov
repnz
outsb
cmp
mov
lret
jno
stos
gs
mov
cmp
push
clts
pop
sbb
adc
shlb
mov
add
mov
jno
aas
sub
lret
and
cmpsl
std
cmpsl
dec
int3
test
sarl
lods
inc
stos
sub
test
lret
shrb
sahf
xchg
xchg
sub
pop
mov
sub
imul
fidivs
adc
xor
push
int3
mov
pop
xor
dec
jno
adc
repz
popa
rcr
out
cmp
ja
leave
jo
rorb
sbbl
ja
lock
popa
fists
pop
or
jo
mov
xor
stc
jp
or
push
arpl
jno
jns
mov
sbb
sbb
gs
repz
lret
push
cwtl
or
cmp
jnp
add
pop
cld
ret
xor
mul
into
cmpsl
pushf
fstpl
ljmp
add
loopne
cld
mov
add
mov
jg
outsl
add
cli
loope
dec
dec
outsl
add
pop
push
clc
decb
push
pop
lahf
arpl
lret
mov
jmp
loopne
into
cmp
sbb
sbb
mov
inc
addr16
adc
sti
int
ss
inc
sub
xchg
int
shll
inc
bound
call
mov
xchg
ss
push
test
mov
mov
xor
mov
push
pop
in
int
xchg
pop
jp
xlat
mov
jo
xor
mov
into
push
inc
arpl
mov
inc
sarl
repz
je
fsts
gs
xchg
jo
not
fildll
mov
test
into
fdivs
mov
adc
cmc
pop
mov
lea
cltd
inc
mov
or
sbb
ljmp
mov
mov
dec
iret
inc
stos
cmp
je
fdivr
dec
push
pop
push
jp
and
rcrl
dec
xor
cwtl
and
xor
fistps
outsb
push
fcompl
sbbl
mov
mov
das
or
cmp
mov
cmp
cwtl
push
jo
jle
lahf
fimuls
stos
adc
ret
or
stc
outsl
add
lock
insl
jns
dec
cltd
pop
loopne
jne
arpl
rcrb
mov
xor
or
and
movb
stos
sti
jmp
or
pushf
xchg
mov
jmp
cmp
mov
jb
jmp
je
sub
jns
cmp
dec
lods
outsb
push
pop
jg
daa
leave
sub
mov
fidivl
mov
mov
scas
push
adc
movsb
mov
push
int
andl
fs
les
add
or
int
out
ja
loop
cmpsb
mov
fiaddl
shlb
mov
adc
xchg
jae
ja
sti
sub
jecxz
mov
rcrl
pop
fcoml
push
fwait
leave
pop
pop
loopne
outsl
in
icebp
popa
push
push
sub
popf
aaa
xor
divb
lret
aas
enter
cmp
sub
ret
jne
or
dec
gs
loope
dec
dec
filds
test
sub
jmp
sbb
jo
jne
xchg
sub
outsb
dec
out
rcr
popa
jae
jb
mov
mov
lret
add
dec
push
cmp
push
pop
pop
sbb
sub
push
cld
mov
ds
or
xor
aam
push
mov
rep
push
aas
je
sub
pop
test
out
leave
pop
in
loopne
and
stos
and
leave
jb
pop
pushf
int
sub
fbld
hlt
ret
or
and
bound
mov
ss
inc
pop
adc
aas
cmp
fcmovu
nop
add
sbb
gs
loope
sbbb
jl
cmp
push
stc
cmc
cmp
stc
mov
dec
jnp
cmp
clc
adc
ret
repnz
repnz
add
jne
pushf
clc
ja
cmp
and
nop
data16
mov
cwtl
fcomi
sub
adc
push
ud0
push
push
mulb
sub
addr16
push
loope
add
jne
and
lea
push
repnz
cmpl
xchg
shl
push
imull
insb
or
shll
sbb
outsl
xchg
add
pop
mov
aam
test
lret
add
pushf
fists
adc
mov
nop
push
xchg
cmpsb
xchg
fstl
push
inc
mov
pop
jae
fmul
push
sub
pop
test
mov
jb
jae
ret
adc
mov
mov
jp
pusha
pushl
in
mov
scas
cmpsl
cmp
xor
mov
pop
movb
std
shrd
pop
pusha
bound
push
jbe
jle
iret
dec
inc
stc
out
jge
cltd
nop
arpl
data16
adc
xlat
fstps
aas
sbb
outsl
pop
out
es
xor
in
push
or
out
ret
call
jb
out
xor
jbe
sub
jecxz
mov
sbb
pop
aam
scas
cmp
dec
push
xlat
nop
shlb
xchg
imul
clc
movsb
jae
or
pushf
mov
mov
movq
ljmp
movsl
inc
mov
adc
sti
xchg
es
std
pop
jae
pop
sub
jno
push
pop
mov
int
inc
sbb
inc
inc
pop
add
push
mov
mov
xchg
jge
in
fstpl
mov
lret
cwtl
idivl
push
aaa
das
cmp
int
adc
sbb
outsb
testl
lock
lahf
mov
mov
cmp
mov
call
aas
xor
sbb
imul
sbb
push
pushf
dec
push
sbb
int
hlt
dec
inc
pop
lods
dec
mov
out
das
shlb
daa
cmp
lret
fbstp
orb
or
repnz
ja
dec
xchg
mov
pop
in
sub
scas
dec
push
push
cmp
lret
jnp
and
popf
sbb
stos
jecxz
jle
repz
sbb
add
leave
aaa
pushl
cli
jecxz
sub
cltd
in
or
mov
int
mov
or
fwait
repz
adc
mov
add
push
lds
sub
leave
out
imul
das
push
fidivs
dec
lret
enter
scas
inc
xorl
inc
fimuls
add
sbb
mov
xlat
in
test
sub
mov
sbb
xchg
repnz
push
cmp
cld
inc
xlat
xchg
inc
push
add
mov
fcomps
dec
dec
sub
push
pushf
fsubr
inc
mov
xor
ds
aaa
in
mov
lea
iret
dec
testb
cmp
dec
xlat
leave
sbb
loopne
mov
lea
loopne
lcall
subb
orl
xchg
jns
push
addb
inc
outsb
inc
imul
inc
mov
or
jnp
ret
xor
mov
mov
inc
xchg
xchg
dec
adc
xor
mov
fistpl
outsl
mov
mov
mov
mov
sub
sbb
cmp
xor
dec
ret
xchg
xchg
xchg
in
xchg
jbe
sar
je
xchg
mov
sub
mov
dec
xchg
sub
mov
jmp
in
aaa
mov
adc
dec
repz
hlt
mov
int3
push
add
or
dec
dec
xchg
adc
stos
mov
mov
stc
xor
jo
xchg
in
lret
jle
std
adc
mov
sub
adc
jle
xchg
pop
dec
lock
dec
pop
push
dec
cmp
mov
inc
push
call
and
fiaddl
jo
sti
outsl
cmpsb
inc
aaa
or
or
jne
sub
or
sbb
ret
in
pop
adc
hlt
dec
inc
jb
xlat
pop
add
push
jecxz
test
jge
rolb
add
mov
hlt
lods
inc
int3
and
imul
sbb
mov
add
xchg
mov
loop
and
sbb
mov
enter
popf
pop
fidivrs
call
orps
sub
fists
test
mov
inc
leave
add
and
dec
xor
sub
and
mov
shrb
dec
jecxz
mov
adcl
mov
and
into
or
scas
mov
dec
jnp
lods
inc
cli
xchg
cli
lods
mov
mov
ficoms
push
dec
dec
push
hlt
inc
push
pop
or
xlat
sub
lahf
in
cwtl
dec
sub
int
jmp
jg
outsb
fs
neg
int
lahf
imul
dec
cwtl
fs
adc
add
cli
sub
fdivrl
or
pop
insl
dec
in
sahf
sub
pop
adc
mov
pop
std
xor
ret
rcr
sub
adc
xchg
and
out
outsb
lods
cmp
mov
movsw
getsec
pop
adc
cmc
adc
push
dec
sub
push
sub
xor
cmp
sub
mov
div
into
ret
xor
pop
dec
xor
movsb
pusha
xor
adc
leave
or
shl
gs
mov
mov
lea
xchg
fs
lods
lcall
sub
movsl
lret
or
push
ds
dec
push
adc
or
adc
ds
outsb
into
push
or
sub
test
mov
push
and
roll
inc
cmpsb
dec
outsl
adc
sub
xchg
cltd
pop
xchg
je
test
cltd
ficompl
jb
add
out
pop
mov
loope
jecxz
in
xor
ljmp
fistpl
and
stc
dec
pop
lcall
cmpsb
imul
xchg
pop
dec
enter
arpl
inc
leave
fdiv
int3
insb
bound
push
clc
mov
cmp
ret
cmp
das
add
add
shll
in
cmpsb
popf
pop
or
mov
int3
mov
dec
lods
xchg
call
mov
mov
rol
xor
roll
xchg
sub
addl
and
dec
cmpsb
sbb
int3
mov
mov
das
sbb
in
mov
into
lods
cmc
std
out
scas
xor
fwait
cwtl
push
jle
and
or
lods
popl
cmp
mov
add
clc
cmp
pop
sarb
mov
jl
enter
roll
into
xchg
jae
ret
mov
ss
std
imul
add
pushf
lahf
js
sahf
xchg
stos
push
lret
jns
sbb
mov
push
jno
sub
imul
push
or
xor
outsb
jne
stc
testb
gs
test
mov
pop
xchg
ja
icebp
pusha
cwtl
dec
push
pop
insb
jp
mov
jg
sti
rcll
inc
sub
sbb
sahf
call
out
hlt
shll
arpl
hlt
pop
data16
pop
sbb
push
shrl
pop
lods
jge
nop
mov
dec
fdivrl
or
mov
mov
xchg
cmpsb
inc
add
rcr
and
xchg
cmovg
jo
dec
mov
mov
jg
lahf
or
test
in
dec
xor
iret
adc
adcb
flds
cmpsb
rcr
into
js
or
ljmp
cmpb
mov
sub
adc
sarb
les
or
sub
popf
int3
int3
mov
sbb
push
lds
sbb
mov
push
push
jne
aad
or
lock
xchg
adc
sahf
std
mov
stc
jno
test
shrb
shll
sub
outsb
out
hlt
push
and
stos
dec
xchg
dec
push
xor
cmpsl
mov
jo
data16
push
cmp
xchg
cmp
push
push
xor
aad
jno
dec
pushf
pop
popf
or
and
mov
xor
stos
xor
aad
loope
mov
call
loopne
and
lods
mov
cmp
and
ljmp
adc
push
rorb
push
mov
data16
add
sbb
mov
insb
out
lods
xor
into
jg
push
mov
loop,pt
fldt
enter
out
cli
lea
mov
xchg
test
lret
and
adc
sub
ss
je
mov
mov
fstps
ret
cmpsb
and
mov
test
dec
and
mull
push
bound
repz
pusha
fdivrl
test
out
test
pop
push
dec
rcl
or
dec
aam
insl
push
cmp
popf
push
adc
pop
mov
inc
jne
lods
rorl
adc
and
gs
popf
and
repz
scas
and
or
je
movsl
mov
arpl
subl
jecxz
xor
mov
fwait
xchg
and
push
sbb
repnz
jecxz
or
cs
or
jg
andb
lahf
dec
leave
in
add
pushf
mov
mov
dec
stos
aaa
xor
or
inc
mov
jge
lret
mov
popa
xor
repnz
add
dec
xor
and
jg
jp
mov
stc
fcompl
or
nop
test
outsl
mov
das
mov
push
xlat
les
xchg
nop
xchg
sbb
jne
pop
xchg
xchg
ss
add
aas
xor
in
dec
shr
test
jmp
arpl
outsb
test
int
jp
adc
mov
mov
pop
ss
mov
or
lret
xchg
and
pushf
sbb
insb
push
fcomp
data16
subb
mov
mov
stos
imull
inc
push
fwait
or
popa
mov
push
movsb
test
test
sarb
pusha
cmpsl
and
mov
iret
cmp
sub
jp
mov
pop
mov
sahf
arpl
inc
ss
sub
pushf
push
addl
sub
adc
imulb
mov
hlt
sahf
mov
jnp
rcrl
inc
jno
jl
xor
adc
mov
sbbl
jb
sub
pop
test
aas
ss
movsl
pop
rcl
in
and
xchg
add
stc
jbe
loopne
adc
sbb
xchg
je
stos
push
adc
gs
movb
flds
lret
dec
dec
and
out
out
jl
leave
jno
add
fsubrl
xor
adc
sbb
sbb
frstor
mov
repz
mov
inc
jg
in
dec
dec
xor
je
lds
push
mov
icebp
cmpsb
insl
add
xchg
jg
int3
push
call
mov
in
aas
ret
cmpsb
enter
sbb
ja
xlat
xadd
test
cmp
mov
fsubr
ror
adc
jno
rolb
outsl
loope
push
dec
stc
lret
jae
sub
inc
popa
lock
mov
pop
jge
dec
sub
sub
xchg
jmp
sbb
xor
jo
gs
fdivr
pop
xchg
test
ljmp
idivb
mov
sahf
pop
mov
lods
movsb
mov
jl
rcr
das
movsb
iret
push
ret
mov
xchg
inc
js
pop
inc
inc
push
ret
pop
roll
mov
pop
pop
lods
jge
int
adc
outsb
and
sub
stos
mov
xrelease
pop
pop
sarb
int3
mov
sub
sti
xor
call
push
push
das
mov
jb
dec
pop
idivb
mov
ret
int
sbb
cmp
push
dec
pop
push
xchg
sub
pop
mov
das
cmpsb
mov
aad
aam
aam
mov
jmp
and
mov
mov
cmp
cmpsl
pop
popa
insb
out
inc
xchg
or
into
dec
fstpt
inc
rcrl
ja
xchg
pop
xor
add
xchg
dec
mov
jmp
sti
xchg
add
xchg
out
imul
pushf
pop
xchg
xchg
sahf
ffree
mov
add
push
xchg
addr16
push
cmp
fcomps
mov
cmpsb
aas
das
addr16
loope
cld
repz
cmp
into
xchg
fs
out
jecxz
pop
pop
das
fnstsw
push
add
cmp
sahf
imul
rcrl
daa
ds
movsl
vandnpd
jne
out
xchg
mov
in
pop
cs
clc
out
mov
cmp
mov
scas
fstpl
inc
xor
sbb
xchg
sarl
push
clc
xlat
mov
and
int
push
add
cs
aam
insl
dec
fldl
push
fcmovb
cltd
mov
jecxz
cmc
jbe
and
jb
test
fwait
pop
adc
fmull
lahf
cmp
jp
adc
sbb
rcl
into
rolb
add
xor
xchg
gs
movsb
scas
mov
mov
xchg
pop
mov
mov
push
and
fcompl
cmp
fwait
lods
inc
inc
fs
cmp
add
push
jecxz
sub
nop
push
int3
xor
xor
sbb
adc
xchg
jne
repnz
mov
fcoms
add
push
add
jg
jae
mov
or
scas
cmp
adc
mov
and
lock
insl
mov
ja
mov
jb
cmp
test
popa
xor
packsswb
lea
je
loope
stos
xor
inc
stos
incl
les
pop
fmull
xchg
outsb
adc
mov
jecxz
and
xor
stos
push
js
cli
fldcw
dec
adc
fisubs
out
pop
pop
pop
mov
ret
lods
pop
pop
rcrl
test
cwtl
push
jne
mov
call
insb
imul
jge
mov
or
bound
jl
int3
adc
sahf
jecxz
cwtl
test
inc
scas
cwtl
jg
xchg
pop
mov
mov
mov
popf
cmp
add
jnp
scas
fists
cmp
dec
mov
lods
lods
bound
loopne
fistpll
push
cmp
push
sahf
fisubs
ret
mov
sub
test
les
push
dec
rolb
lret
dec
bswap
adc
ss
aad
out
xchg
aas
addb
stos
jae
arpl
mov
dec
test
lea
xor
enter
and
frstor
in
pop
ljmp
inc
popf
out
mov
repz
xchg
jmp
pop
cwtl
loop
es
incl
lcall
mov
in
jl
cwtl
push
xor
inc
mov
test
in
test
pop
int
enter
pop
test
jp
out
jb
push
mov
cltd
push
ret
lods
mov
fidivs
push
ljmp
inc
stos
xchg
add
mov
pop
sbbl
cld
jne
aaa
cmp
lcall
sub
arpl
sbb
and
or
push
fsub
xor
fsubrl
sbb
aam
cmp
dec
sbb
xchg
jbe
movsl
jge
jno
pop
fistpl
mov
popf
mov
inc
imul
filds
push
movsb
push
insl
scas
push
out
inc
cmp
xchg
sahf
mov
fmul
mov
sub
cmpsl
mov
cwtl
and
icebp
ss
sub
sti
xor
out
push
stc
mov
int
jns
sub
or
add
sub
sub
aad
sbb
mov
popa
jle
test
xchg
mov
fldl
mov
test
iret
imul
mov
addb
or
aas
dec
dec
call
sub
sub
out
jne
call
or
adcl
push
mov
mov
inc
sbb
and
fs
or
add
inc
fisttps
sbb
cli
jmp
cmp
sub
push
mov
aad
nop
adc
or
push
mov
add
xor
fwait
cmpsb
pop
int3
xchg
fcoms
pop
inc
int
push
subb
add
adc
adc
inc
out
mov
dec
aas
pusha
push
pop
cmc
mov
imull
mov
outsl
mov
push
add
cmp
cmp
and
leave
popf
add
je
push
jmp
ja
pop
mov
push
mov
jmp
mov
sub
cmp
mov
mov
sbb
pop
inc
inc
jg
xorl
lods
loopne
pop
inc
es
imul
sub
jp
add
jg
int
enter
loopne
mov
ljmp
test
loop
jnp
loopne
xor
fdiv
mov
push
mov
mov
movsl
mov
pop
add
mov
push
shlb
inc
stos
mov
popa
movsl
sbb
mov
xchg
mov
adc
xchg
xor
es
sub
mov
lret
fstpt
call
sarl
xor
fs
add
stc
aam
push
adc
push
sti
loop
jbe
call
aas
shrb
notb
rcll
lret
in
sub
pop
popa
pop
mov
sahf
or
mov
mov
sarb
xor
ds
and
jecxz
fcmovnb
imul
scas
lret
cs
pop
xchg
ret
pop
mov
inc
add
mov
sbb
imul
mov
inc
cwtl
sbb
cmpsl
add
jecxz
mov
jne
ficomps
insb
movsl
inc
loopne
inc
adc
les
inc
das
and
mov
fsubl
sub
shll
jae
cld
mov
stc
shrl
push
aad
iret
hlt
aam
iret
adc
mov
outsl
orl
lea
aam
lea
mov
dec
cmp
cld
push
jo
aad
imul
add
push
fsubrl
mov
outsb
arpl
rcr
sbb
in
and
in
outsb
adc
iret
lods
andb
push
or
add
cmpsb
jmp
and
adcb
or
out
das
rcrl
inc
std
imul
arpl
jp
push
mov
mov
lret
cmp
ss
fwait
lcall
ret
or
push
inc
adc
xor
pop
icebp
int
out
fildll
sbb
iret
or
mov
xchg
or
aad
xor
or
push
or
movsl
in
lds
push
mov
jge
push
sbb
jge
fildl
jmp
push
add
mov
pop
adc
inc
popa
jle
and
xchg
nopl
push
mov
cmpsb
daa
test
mov
adc
cltd
jmp
sbb
or
popf
mov
loope
push
sti
loope
arpl
imul
jecxz
xchg
mov
push
cmp
aas
jp
stc
andl
leave
lcall
jp
push
sbb
mov
pushf
js
inc
mov
mov
cmp
xchg
jnp
lods
lods
cld
bound
test
lea
sub
int
dec
leave
push
iret
adc
push
or
in
dec
jne
sub
push
aaa
mov
imul
jp
sbb
in
dec
sub
decl
ret
xlat
add
pop
nop
icebp
mov
dec
popl
lret
dec
fwait
and
into
jg
int3
xor
mov
notl
jge
mov
xor
inc
pusha
jo
adc
ret
inc
push
cmp
cli
push
jb
cs
jmp
xchg
in
cmp
inc
dec
repz
pop
add
mov
pop
out
or
pop
shll
je
lock
jae
mov
mov
inc
xchg
imul
push
stos
or
dec
adc
pop
cmp
js
ror
push
sbb
push
std
mov
add
insl
out
xchg
fdivr
add
fs
out
mov
and
ja
test
mov
xchg
adc
cwtl
movsl
cld
jno
pop
mov
jg
xor
jno
xchg
in
lods
pushf
adc
rcll
push
push
lcall
pop
orb
mov
mov
cli
cld
addr16
test
sti
mov
loopne
push
movsl
xor
ss
push
adc
pop
aam
lret
add
push
flds
add
xor
cmp
cmp
mov
mov
add
dec
aas
std
popa
in
mov
jle
jle
push
xchg
sar
lret
xchg
mov
and
pop
push
jnp
push
hlt
popa
outsl
dec
jbe
pop
addr16
stos
mov
leave
or
xchg
into
sbb
enter
cli
popf
sub
dec
daa
into
movsb
cmp
adc
int
cld
lods
mov
jae
push
adc
xchg
mov
pusha
and
mov
ret
not
dec
xor
cmp
xchg
mov
imul
xchg
call
outsl
add
adc
ja
incb
cmc
mov
xchg
or
mov
cltd
pop
mov
dec
jns
xchg
inc
loope
clc
push
push
ja
out
sub
adc
push
mov
or
and
pusha
pop
adc
ret
loopne
mov
je
lock
ret
mov
lock
leave
xchg
and
out
dec
push
push
test
pop
cwtl
xor
nop
cmp
push
sub
mov
sbb
push
adc
cmc
inc
push
gs
jp
push
andb
lahf
add
dec
scas
es
jle
dec
ds
cwtl
mov
xor
jbe
in
mov
xor
mov
or
int
sbb
or
arpl
addr16
pusha
or
mov
add
jmp
sbb
daa
mov
fidivl
jecxz
dec
js
pop
int3
xor
or
push
cmpb
imul
lods
out
stos
xchg
daa
push
sub
int3
jo
addr16
fidivrs
dec
adc
jbe
lea
sub
sbb
adc
inc
sbbl
sub
pop
pop
push
xchg
sbb
pop
imul
fidivs
sti
push
or
mov
lcall
movb
push
mov
inc
mov
repz
shll
in
dec
nop
inc
push
lock
cmp
inc
ss
inc
jl
jge
sar
dec
imul
dec
dec
push
xor
sti
cmp
insb
lret
xchg
jnp
mov
jns
dec
mov
decb
lods
cmpsb
xchg
out
pop
in
mov
mov
sbb
dec
out
push
push
add
gs
pusha
mov
jmp
dec
inc
repnz
inc
pop
add
jo
xor
loopne
shlb
inc
cmp
pop
cmp
xchg
cmp
and
jbe
pop
add
pusha
inc
sub
test
xchg
cmp
stc
push
rclb
and
mov
cmp
or
mov
js
ffree
push
push
icebp
pop
or
sbb
ss
popa
mov
aad
pop
lods
ljmp
or
dec
call
add
cmp
hlt
add
jnp
sarl
shrb
movsl
fs
sbb
xchg
loopne
aam
adc
pop
add
shl
pop
pmaxsw
xor
popa
mov
push
xchg
movsl
dec
xor
add
xchg
mov
movsl
add
rol
xchg
imul
ja
jp
xchg
inc
sbb
xor
mov
push
push
icebp
adc
in
mov
push
jae
sbb
aad
test
inc
lahf
inc
test
mov
mov
sbb
and
ret
push
js
ljmp
adc
imul
mov
inc
lea
lods
sbb
sarb
sbb
adc
popl
pop
movsl
ret
daa
mov
lret
adc
test
mov
jge
xor
pavgb
cmpsb
pop
scas
push
shl
out
xchg
xchg
fidivs
gs
repz
test
lea
cmp
inc
mov
jp
jbe
outsb
jle
pop
add
cmp
sub
push
and
jl
icebp
push
mov
or
movsl
lret
fldt
xchg
jno
pop
mov
scas
inc
push
mov
sbb
or
lods
dec
sbbl
rol
push
mov
xor
fwait
cmp
adc
push
sbbb
jnp
mov
rcl
push
sub
xchg
add
lock
push
xchg
dec
xchg
adc
mov
and
push
sub
cmp
adc
sbb
adc
fmul
bound
mov
xor
push
sbb
sbb
pop
adc
sbbl
shrl
sbb
fs
sbb
cwtl
loopne
jae
xchg
or
push
leave
mov
jmp
gs
sti
std
xor
ja
fwait
sahf
sahf
jnp
xchg
cmp
hlt
lock
shlb
mov
nop
les
cmpsb
js
sub
add
cmp
adc
mov
xchg
notb
sahf
outsb
inc
mov
push
out
int
mov
cmpsl
cld
adc
lock
push
pop
sarb
add
sbb
fistpll
mov
add
cmp
sbb
add
cmpsl
add
data16
je
cmpsl
cltd
dec
jecxz
push
leave
cmc
insb
cmpsl
stos
jbe
ret
cmp
fdivs
inc
add
adc
inc
ds
es
inc
mov
pop
repnz
xchg
mov
sbb
inc
jge
mov
push
jmp
sbb
mov
jg
xor
adc
das
or
adc
ljmp
in
or
pop
imull
xchg
add
cmp
mov
dec
test
mov
xchg
add
fcmovbe
dec
or
xlat
push
mov
xchg
sbb
or
jmp
add
xchg
or
sahf
pop
ljmp
xor
lcall
aam
dec
cmpsl
inc
lea
cmc
std
dec
ret
add
jg
mov
and
shrb
sahf
inc
mov
cmp
push
imul
sub
push
out
test
out
daa
jae
mov
sub
fcomps
repnz
ljmp
mov
test
cmp
sarb
cmp
jp
xchg
pop
mov
fmull
inc
rcr
dec
fmull
imul
icebp
push
dec
js
aaa
push
add
std
call
mov
repnz
mov
movsl
sbb
jno
sbb
cli
fstpl
aad
mov
out
or
push
popf
inc
cs
mov
jp
arpl
ljmp
les
sti
aad
movsl
mov
aam
in
out
fnsave
test
lock
imulb
jmp
lcall
repnz
mov
pop
lcall
ret
mov
repnz
mov
inc
out
sbb
cmovbe
or
outsl
and
pop
mov
aam
jbe
xchg
jg
addr16
inc
lcall
jp
mov
icebp
xchg
adc
dec
xor
push
lock
test
cmp
dec
adc
adc
das
jbe
ret
and
pop
jl
lret
mov
jle
push
fwait
lahf
popl
inc
loope
sahf
cltd
lret
fisttpl
add
enter
jae
pop
cmp
xchg
mov
cmp
in
movsl
push
fcomip
rcll
scas
add
or
repnz
sahf
mov
out
push
jb
insl
addr16
mov
mov
out
imull
add
leave
pop
outsb
pop
inc
mov
outsb
mov
cmpsl
stc
pop
sbb
sbb
divb
xchg
lods
in
xchg
pop
sahf
icebp
mov
outsl
xchg
cmp
inc
mov
icebp
cmpsl
insl
xchg
pushf
sti
movsb
fcoms
sub
mov
mov
in
stos
pop
popa
and
imul
insl
jp
fs
adc
lock
int
shlb
insl
test
add
pusha
mov
xor
hlt
or
xor
mov
xor
jbe
int3
xor
cmpsb
std
imul
jl
shlb
je
aaa
xor
lea
sbb
or
test
adc
pop
sbb
push
mov
iret
pop
xchg
pop
ss
in
shrb
movsb
hlt
bound
mov
jo,pt
ffree
lahf
lret
adc
pop
out
pop
jge
out
mov
in
shl
or
int3
mov
fisubrs
aaa
pop
pop
aaa
enter
sbb
jmp
sub
jp
mov
push
inc
rcrb
aam
arpl
and
aaa
dec
imul
lods
sbb
test
jnp
and
movsb
adc
or
in
or
call
je
inc
lds
xor
cmpsl
push
push
jl
stos
addl
xchg
call
mov
fldt
jo
xchg
test
lret
movl
add
jecxz
leave
cmp
push
push
pop
sbb
int
or
enter
or
in
sbb
mov
scas
es
mov
xor
lea
gs
and
add
stos
aam
sahf
testl
xor
call
push
or
cmpsb
sub
mov
xlat
aaa
xor
inc
insb
xchg
dec
push
cld
lret
in
adc
push
outsl
jno
mov
push
sbb
push
adc
xchg
pop
pop
push
or
js
sub
pop
xchg
pop
pusha
mov
mov
xor
push
mov
les
test
outsl
cmpsb
outsl
in
mov
dec
xor
mov
invd
out
mov
sub
test
fildl
into
neg
clc
and
addb
rcrb
je
add
sub
cwtl
in
cld
punpckldq
cli
cmc
popa
adc
dec
lds
int
daa
pushf
and
ds
cmc
cli
pop
jge
js
inc
lcall
xchg
loopne
or
fucom
stos
push
sahf
arpl
shrl
mov
sbb
and
test
cwtl
stc
lods
gs
sub
mov
lea
mov
jne
les
pushf
push
mov
mov
xchg
xor
mov
std
xorl
and
mov
cmc
pop
sub
jbe
dec
lcall
jecxz
mov
iret
and
ret
xchg
mov
pop
pop
jge
ljmp
mov
mov
pop
icebp
and
sbb
adc
shll
mov
jns
addb
adc
dec
cmp
ret
or
daa
leave
inc
or
rolb
xor
mov
mov
pop
mov
xchg
cmp
and
xor
cmp
scas
jbe
jp
push
imul
out
adc
aas
pop
psubd
xchg
pushf
lock
ljmp
adc
insl
inc
push
lock
int
adc
test
mov
sbb
sub
aas
test
into
loopne
insl
pop
jno
fwait
and
cmp
mov
int
out
xorb
sbb
test
adc
pop
mov
insl
dec
pushf
out
cmpb
jp
jg
xchg
notb
and
pop
and
subl
pop
ss
insl
in
inc
loop
xchg
sub
cmpsl
repz
cmp
cmp
xchg
aaa
pushf
jb
addr16
push
sub
mov
notb
jnp
fnsave
in
xor
pop
sub
push
jbe
dec
repnz
dec
mov
lret
pop
fadd
stos
and
stos
mov
cwtl
popa
sbb
aad
adcl
div
cmp
jnp
bnd
add
cmc
in
adc
sub
sahf
ljmp
inc
movsl
push
xchg
mov
dec
push
xor
adc
icebp
dec
push
push
push
data16
adc
lcall
mov
negb
pop
pop
roll
repz
gs
scas
sub
icebp
mov
add
js
push
mov
adc
test
mov
lahf
fstl
push
mov
or
add
adc
sub
jnp
mov
in
pop
gs
mov
sub
cmp
and
orb
sub
das
mov
push
jp
add
jbe
mov
xor
cmp
neg
xor
sarb
cmpsb
xor
lods
push
call
daa
xor
loope
je
movsl
loopne
pusha
arpl
into
repnz
outsb
and
cmp
cmp
inc
das
addr16
cmc
sub
pop
xor
mov
and
xchg
js
imul
mov
imul
pop
xchg
iret
sbb
imul
push
je
push
jmp
inc
hlt
or
mov
test
pop
jg
arpl
test
mov
aaa
in
push
sbb
push
push
mov
xchg
cmp
push
dec
js
jb
mov
mov
cli
sahf
data16
and
test
cmp
or
loope
mov
add
jmp
inc
orb
sbb
mov
inc
gs
loop
jg
push
cmp
add
mov
or
ja
and
sbb
iret
in
adc
fistpl
and
movl
cmpl
aas
pop
aas
inc
stos
int3
nop
ss
and
in
hlt
pop
fildll
imul
jle
mull
dec
push
jmp
jmp
add
adcl
pop
adc
cmp
or
sub
xor
fbstp
add
sbb
stos
xchg
int3
jne
xchg
add
dec
and
push
out
cmp
adc
cmp
jmp
push
movsl
mov
jg
mov
sahf
jle
movsb
scas
fcmovnbe
mov
xor
clc
pop
push
ret
pop
pushf
xchg
pop
cltd
repnz
dec
cmp
in
leave
mov
clc
or
sbb
mov
adc
addr16
mov
xchg
fs
pop
sbb
pop
frstor
daa
pop
xor
sbb
cmp
jne
pop
inc
inc
loop
daa
cmp
insl
and
out
or
and
and
rol
mov
xor
adc
fsub
sub
push
cmp
adc
dec
je
fmull
ret
imul
loope
cmpsl
or
icebp
ljmp
pushf
popa
ljmp
push
mov
int
mov
popa
add
movsb
in
cmp
cmc
movsl
iret
rcl
out
jg
mov
sbb
xchg
inc
cmpsl
cmp
sbbb
jne
xchg
sub
rclb
push
or
push
popf
shr
push
sbb
or
cmpsl
movsl
in
stc
outsl
lods
or
insl
shl
adc
cmp
out
and
jne
call
cmpsb
jl
icebp
dec
adc
sub
jo
cs
jne
sub
push
dec
pop
stc
addl
push
and
ret
repnz
xor
cmp
xchg
scas
inc
orl
testb
add
mov
sbb
sbb
xor
arpl
roll
xor
pop
and
fistpl
sbb
mov
mov
ja
cmp
clts
cmpsb
out
xchg
bswap
nop
pusha
mov
xchg
pop
cmp
mov
hlt
xlat
mov
cwtl
fdiv
sub
test
mov
cvttps2pi
dec
das
cltd
pop
add
mov
xchg
dec
ds
inc
push
jmp
jg
pop
cmc
push
ljmp
ficompl
test
shrl
push
enter
xchg
mov
aas
mov
and
pop
das
mov
mov
ret
xor
dec
mov
aas
nop
stc
sbb
xor
add
iret
rcrl
movsb
mov
in
push
ret
test
and
cmp
imul
jp
ds
inc
jmp
xor
jb
in
je
mov
ja
adc
push
pop
push
mov
cmp
hlt
orb
mov
andl
push
cmc
insl
sbb
out
xchg
fwait
jae
fdivl
pop
lds
pop
stos
xchg
xorl
aad
data16
loopne
in
push
inc
adc
mov
mov
pop
inc
lods
fdivl
and
enter
push
cmp
mov
mov
fstps
adc
roll
testb
sub
mov
out
push
fisubrs
mov
jle
cmp
and
pop
cmc
add
inc
add
outsb
jne
mov
aad
ror
popa
fcoms
loope
incb
test
test
das
dec
subb
jge
add
push
and
cmc
cmpsb
out
dec
add
xchg
cmp
xor
and
cs
lods
dec
sbb
inc
pop
inc
ret
scas
add
xor
mov
jge
jp
pop
pop
xchg
je
lret
fwait
scas
inc
adc
mov
pop
repnz
xchg
cli
jge
mov
jae
dec
stc
push
or
clc
mov
aad
xchg
aas
mov
mov
sbb
aaa
jno
hlt
das
out
sub
jbe
ss
ss
jecxz
sti
shlb
push
jl
ss
xchg
das
es
icebp
std
iret
xor
fsubr
test
mov
icebp
aaa
pop
xor
inc
repnz
cmp
out
cmpsb
jg
jae
or
push
cmp
pop
xorb
js
jge
andb
mov
pop
out
lea
xlat
hlt
mov
lcall
lods
xor
int
sbb
movsl
and
push
push
outsl
mov
push
or
loope
dec
imul
arpl
orb
add
inc
daa
sahf
xchg
jmp
cmp
jg
notb
cs
lea
fisttpll
rorb
out
sub
aas
cmp
pusha
cmp
add
jp
insb
inc
cs
xor
push
push
stos
sub
jb
pop
mov
push
cld
adc
pop
cmp
fldt
fildl
cmpsb
lahf
stos
cmp
mov
addr16
scas
test
cld
push
xchg
leave
jg
lock
push
pop
pusha
imul
jns
dec
jns
jns
into
imul
cmp
add
movnti
xor
mov
icebp
in
xchg
dec
punpcklbw
push
sub
jmp
rol
clc
negl
lods
rorb
scas
rolb
shll
nop
scas
insb
test
in
ja
pop
sub
pop
fnsave
ss
inc
inc
shl
sti
mov
es
mov
inc
or
and
popa
xor
xor
adc
jge
xlat
jnp
popf
stc
lods
fisubs
and
dec
jmp
jle
pusha
adc
repz
gs
cmc
imul
mov
loopne
clc
inc
or
and
and
fcoml
adc
push
sub
ljmp
jns
sub
movsl
popf
ss
mov
pop
jg
dec
pop
mov
pop
mov
mov
xchg
sahf
cmp
add
and
xchg
adc
scas
xchg
lods
push
repz
and
cmpsl
test
or
mov
sbb
pop
mov
sbb
push
pop
cs
push
mov
dec
jo
mov
icebp
push
xor
sub
je
fcmovnbe
or
jecxz
jo
cld
xchg
dec
dec
push
jmp
push
add
or
jnp
pop
sub
inc
dec
es
rcrl
cmp
outsb
mov
fwait
or
mov
mov
and
mov
xor
push
dec
jo
add
mov
int
jl
add
ficoml
pushf
add
adc
dec
enter
orb
pop
icebp
inc
out
cmp
mov
les
in
loope
adc
push
add
adc
jae
imul
imul
push
pop
nop
test
xor
push
out
icebp
mov
icebp
in
fldl
cmc
pop
in
ja
push
xchg
xor
hlt
ljmp
xor
in
cmp
xchg
popf
ds
pop
mov
daa
inc
mov
jno
cmp
shll
mov
std
cmp
pop
dec
xor
mov
sbb
or
xchg
inc
and
lds
xor
std
mov
popa
and
test
cmp
rcrb
xor
mov
sub
inc
stos
xor
cli
les
dec
insb
cltd
inc
test
mov
sub
add
mov
insl
add
xor
sub
mov
sti
mov
sti
add
jg
push
inc
jle
add
xor
mov
stos
cmp
mov
ja
lret
fwait
add
and
jns
cmovne
div
in
js
cli
iret
shll
mov
pop
call
push
rcrl
sbbl
sub
stc
negb
mov
fwait
mov
fs
in
pop
fmuls
jnp
or
popf
test
inc
or
mov
scas
cmp
pusha
hlt
mov
notl
add
scas
stos
test
popw
inc
bound
stos
cmp
mov
xor
ret
lea
fistps
mov
mov
mov
dec
scas
sbb
mov
mov
insb
jecxz
xor
fmul
scas
and
pop
out
sub
dec
loope
and
lock
fildll
adc
hlt
sub
mov
sub
insl
leave
mov
mov
and
test
inc
dec
jge
outsb
lds
lcall
sub
and
xor
outsb
imul
xor
clc
leave
sbb
addps
out
fwait
cmp
jp
pop
into
imul
je
mov
and
dec
sarl
jns
dec
das
sbb
jno
movsl
test
into
sbb
mov
xor
add
sbb
cmc
out
out
adc
jl
dec
pusha
jle
rep
pop
sub
adc
sbb
lods
add
add
dec
scas
es
andl
ret
movsb
clc
dec
push
dec
dec
ss
cli
inc
jns
adc
aaa
xchg
jns
push
lret
push
sbb
test
fwait
push
inc
sub
add
dec
push
std
inc
jg
repnz
rclb
movsb
xchg
int
add
inc
pop
jns
jno
or
push
lods
xchg
cmpsl
cmp
loopne
mov
rorb
f2xm1
jne
daa
in
stos
xchg
and
or
imul
and
mov
lods
fwait
roll
hlt
inc
sub
xchg
inc
icebp
popf
inc
mov
ljmp
xchg
shr
out
jb
xor
fyl2xp1
leave
inc
cltd
test
inc
leave
xchg
cmpsl
popf
mov
and
out
test
mov
inc
xor
popa
int3
dec
adc
rcll
repz
jecxz
and
pop
xlat
in
pop
mov
mov
jo
inc
xor
mov
push
fistl
fwait
cmp
inc
lds
cmp
lea
adc
lock
jmp
xorb
sbb
sub
das
push
jg
adc
jmp
sub
and
pop
cmc
daa
fdivr
mov
out
out
fcomp
inc
xchg
cld
mov
sub
clc
push
mov
loop
cltd
out
movl
hlt
daa
stos
lea
inc
adc
sbb
adc
shl
push
arpl
adc
in
lea
or
dec
iret
pop
jecxz
in
push
insb
push
or
and
xchg
sub
mov
lock
movsl
xchg
cmc
fldt
lock
jl
inc
scas
pop
repz
jbe
enter
jl
mov
dec
mov
mov
mov
out
push
or
pop
sbb
cmp
mov
pop
push
mov
sub
xchg
mov
pop
fbld
std
daa
fstpl
shlb
inc
lahf
xchg
imul
mov
inc
lcall
shl
repz
jo
inc
test
mov
cmpsl
into
mov
jnp
inc
cmpsb
in
into
xor
loope
sbb
pop
cmp
inc
sub
jne
cmpsb
in
mov
add
cmp
cmp
pmulhuw
lds
mov
loop
lret
mov
dec
jns
roll
and
ret
test
lahf
xor
enter
jns
out
dec
ss
mov
and
ret
add
sbb
add
int3
sub
iret
push
mov
leave
sahf
adc
push
push
cli
lahf
arpl
into
sbb
xchg
and
mov
push
and
js
jp
cmpsb
add
sub
inc
jp
jmp
aas
mov
push
in
jno
lret
stos
test
inc
jmp
fwait
mov
mov
fldenv
aam
cmp
out
dec
loope,pn
jnp
stos
pushl
mov
add
jp
fisttps
cmp
mov
mov
or
mov
into
mov
or
adc
dec
icebp
mov
int
mov
add
jg
adc
mul
xchg
scas
inc
pop
xchg
lock
rorl
jne
fbstp
push
rol
int
fadd
stos
mov
stc
and
push
xchg
ja
mov
and
lods
rolb
rcrb
jno
or
nop
add
shr
fwait
xchg
in
or
push
test
dec
add
cmpl
pop
pop
xchg
jl
cltd
and
xchg
adc
push
and
lea
adc
xchg
js
in
loop
mov
hlt
jle
add
aas
pop
sub
mov
ja
imul
mov
aad
xchg
movsl
fsubs
std
mov
neg
in
insl
shll
lods
push
jl
pop
or
xor
in
xor
stos
es
cwtl
mov
clc
inc
push
xor
dec
cmp
push
inc
cmp
cmp
ficoml
ficomps
cmp
pop
cmp
jl
pop
add
jnp
and
insl
adc
adc
fisttps
mov
cltd
in
xchg
cmc
push
repnz
insl
push
xor
push
not
clc
cli
cltd
daa
aam
sub
jle
and
cld
lods
cmp
or
aad
and
mov
push
xchg
mov
ja
pop
fdivrp
stos
ret
cmp
add
stos
sarb
push
or
xchg
into
fldl
rclb
cmp
push
jnp
xor
add
push
and
add
jecxz
scas
jmp
out
pop
mov
ljmp
sub
outsl
and
cld
and
sbb
and
lret
adc
aam
shl
lret
xchg
push
imul
fimull
ficoms
outsl
js
out
mov
test
inc
sub
mov
cmc
pop
sbb
dec
sbb
add
in
mov
fs
outsl
adc
dec
lods
add
test
inc
cwtl
fnsave
fimuls
cmp
xchg
cmp
lods
xlat
jb
and
lock
pop
sub
popf
pop
sbb
lds
mov
aad
jge
scas
in
push
jns
ficoms
jmp
push
or
pop
clc
or
lods
iret
dec
mov
jmp
sub
mov
dec
sub
xchg
xor
incl
in
es
aam
lcall
jg
imul
loop
jmp
add
ljmp
jns
scas
pop
fsub
std
and
call
mov
stos
and
repnz
jnp
cmpsb
push
fs
push
mov
add
loopne
push
fdivr
add
dec
inc
jno
out
test
pop
jns
pushf
gs
lret
pop
jo
adc
roll
or
sbb
movsl
and
in
cmp
aad
pop
add
jmp
movsb
call
lahf
sahf
popa
inc
in
add
rcrb
lcall
xchg
inc
leave
ror
mov
add
cmp
gs
add
cs
in
lret
mov
pop
mov
sbb
mov
mov
jne
sahf
addb
scas
mov
mov
bound
inc
movsl
push
xorl
pop
lods
adc
or
je
sub
fsubr
xor
push
xor
out
xor
xor
std
inc
imul
xchg
shl
mov
cwtl
mov
jp
push
xchg
pop
push
arpl
leave
enter
dec
icebp
push
rcrb
mov
cli
ret
inc
or
dec
mov
loopne
pop
rclb
sbb
sbb
aam
mov
fldenv
mov
jp
jmp
mov
rcl
jae
popa
aad
and
lods
mov
add
cmpsl
lea
in
add
into
cmc
ljmp
cltd
out
fnstcw
mov
dec
xchg
cmp
pop
pop
aas
pop
sub
mov
test
sahf
fwait
cmp
fmull
mov
inc
mov
sahf
jge
or
adc
aam
fmul
mov
es
xchg
cli
in
cmp
cmp
addb
loope
jl
stos
sbb
mov
mov
mov
and
aad
out
cltd
sahf
imul
jo
xlat
js
lret
dec
jg
ret
je
lods
add
cld
push
jle
leavew
out
mov
fdivl
aas
inc
stos
mov
ficoml
divl
hlt
clc
data16
pop
cmpsl
repz
and
xor
adc
les
lods
out
lret
push
xchg
jl
mov
push
call
jo
mov
pop
sbb
cmp
xlat
sub
inc
cmpsb
jg
cld
xor
mov
mov
or
icebp
arpl
shrl
push
mov
test
fnstcw
int3
cli
xor
xor
fisubrl
mov
in
jp
in
or
scas
cmp
mov
in
xor
popa
push
std
and
sub
stos
or
inc
add
add
movsl
inc
enter
sub
and
sbb
sub
cltd
inc
xor
scas
out
xor
call
mov
mov
int
ljmp
cmp
shlb
cmp
mov
pop
push
pop
test
test
mov
push
dec
cmp
push
push
inc
ja
lods
in
leave
pop
arpl
lds
and
pop
or
and
mov
or
add
daa
je
xchg
pop
fs
vpmacssdd
and
pop
xchg
inc
push
cmc
loop
lcall
rorb
cmp
mov
cltd
rorb
pop
mov
add
loop
inc
popa
out
test
xor
jge
rcrb
mov
test
add
xchg
test
sti
in
mov
mov
ficomps
mov
jae
in
cmc
or
push
inc
bnd
lock
sub
lret
nop
sti
xchg
ja
add
lret
stos
mov
cli
je
adc
int
js
or
add
cmp
sti
xor
out
xlat
test
into
xchg
rolb
cmp
test
imul
shll
addr16
xchg
mov
pop
insb
jmp
mov
sbb
jle
fsts
cld
or
sahf
sub
data16
subb
arpl
mov
add
lods
inc
fs
sub
loope
cmp
shrl
dec
mov
mov
mov
jnp
jns
je
outsb
xor
mov
mov
je
dec
leave
jge
iret
fistps
or
cmp
xchg
sahf
mov
mov
or
out
call
orl
popa
and
cmp
mov
sub
inc
test
aam
aas
iret
xorb
push
mov
ret
test
pop
popf
ret
js
and
xchg
lahf
mov
sti
cwtl
ss
pop
loope
sbb
adc
mov
hlt
in
and
pop
shrl
sbb
test
mov
outsb
in
lahf
push
mov
pop
das
add
stos
aaa
clc
divl
int3
fwait
rcrb
je
lahf
dec
or
fstl
fnsave
mov
mov
ret
mov
adc
sbb
int3
mov
cmpsl
mov
sbbb
push
jb
and
les
iret
sbb
xchg
add
aam
cltd
pop
inc
pop
loope
test
loope
daa
push
jp
sub
xlat
or
mov
cmp
jnp
imul
sub
mov
xchg
sbb
xlat
dec
outsl
jle
repnz
cs
xchg
push
ljmp
repnz
aad
push
daa
cmpl
mov
lods
ret
adc
loope
iret
lds
inc
lret
sbb
mov
push
cmp
int
cmpsb
adc
stos
adc
je
loop
pop
lcall
dec
cmc
hlt
pop
imul
test
mov
xchg
scas
mov
inc
mov
fsubrs
out
and
mov
daa
or
mov
pop
pop
pop
fsubrs
jp
mov
pop
adc
es
adc
inc
sbb
sub
xchg
cmc
les
test
dec
icebp
add
es
add
ljmp
inc
cli
sub
shrl
push
push
or
lods
notl
in
xchg
insb
ss
jno,pt
sbb
shlb
mov
lcall
shl
call
es
shr
and
xchg
mov
jae
hlt
lret
and
mov
enter
into
dec
dec
dec
imul
xchg
insb
ret
out
jge
xchg
pop
dec
mov
mov
adc
and
scas
jecxz
and
xchg
push
es
xchg
add
sbb
sub
add
shrl
pop
rcrl
push
lds
and
add
int3
stos
pop
pop
cmpsl
fcmovnbe
scas
mov
ds
sub
xor
mov
ja
jge
out
mov
aaa
ds
mov
pop
cmp
or
leave
test
mov
je
xor
aas
das
mov
sub
add
cmp
test
xchg
sbb
and
dec
add
les
shrb
cmp
sbb
xor
aas
mov
and
stos
add
subl
scas
xlat
mov
jb
mov
fwait
pushw
in
xchg
cwtl
mov
lods
xchg
adc
xor
or
jne
ljmp
jp
push
repz
pop
jge
fcoms
or
clc
std
add
add
jae
int3
add
aaa
fldt
xor
loopne
pop
xor
or
rol
in
dec
call
push
cmpsl
add
push
loope
push
mov
out
sbb
clc
sub
mov
arpl
pop
inc
jb
mov
out
pop
xor
mulb
xchg
incl
or
fidivl
and
cltd
mov
and
std
scas
das
popa
pop
sbb
test
out
inc
es
and
ja
std
push
fcoml
daa
fistps
jp
shrb
sub
or
pop
pop
sub
bound
mov
cmp
es
and
and
aaa
xchg
jbe
lret
jle
jo
mov
jl
pushf
hlt
out
fucomp
jg
in
adc
mov
xor
and
ja
add
outsb
mov
stos
sub
pop
mov
dec
fidivl
cli
mov
stc
scas
push
or
popf
inc
mov
cmpsb
fidivl
or
dec
aam
rclb
insl
repz
outsl
rcll
test
leave
or
je
or
mov
enter
in
test
jp
xchg
push
jle
push
push
movsl
mov
adc
aad
imul
pop
bound
and
outsl
inc
mov
test
jbe
filds
pop
jns
stos
mov
sbb
mov
add
inc
or
fwait
jecxz
in
jecxz
lahf
sub
arpl
and
add
push
repz
in
test
sub
fs
xchg
push
inc
movsb
xchg
rclb
mov
mov
js
dec
int3
mov
shrl
inc
adc
xchg
in
add
jp
mov
sbb
pushf
pop
mov
jo
dec
psubb
jb
mov
and
out
gs
inc
or
push
repz
xor
or
jne
aas
out
mov
addr16
push
lods
in
int3
push
clc
lock
test
mov
inc
inc
inc
call
sub
roll
std
or
jge
cld
outsl
mov
ljmp
rcll
loop
add
mov
in
add
mov
xchg
adc
lahf
test
fcmovnu
repz
add
add
and
lret
fiaddl
nop
fiaddl
pop
jmp
pop
bound
fstps
jb
jns
stos
cmp
ljmp
mov
sbb
jp
push
or
push
popa
add
xor
sub
aaa
fistl
xor
add
inc
xor
cltd
jle
inc
dec
mov
jg
dec
andl
pop
pop
jmp
xor
icebp
cltd
mov
roll
popa
les
test
inc
xchg
movsl
lods
lock
sub
jmp
adc
test
mov
mov
mov
sub
cwtl
lock
iret
sti
ret
stc
pop
fstl
and
sbb
add
faddl
dec
mov
dec
cwtl
push
gs
aam
cmp
sub
out
aad
pop
clc
add
in
or
dec
xchg
dec
and
ss
xor
gs
xlat
sarb
lcall
cmp
cmp
scas
outsb
jmp
add
in
aas
leave
loope
jnp
mov
mov
test
inc
mov
fldt
nop
cwtl
test
add
dec
rorb
sub
aad
arpl
das
or
fcmove
xlat
jmp
jb
jmp
mov
outsb
mov
dec
lret
xchg
js
push
jg
dec
ljmp
cwtl
jecxz
adc
xchg
dec
sbb
push
ljmp
jae
mov
lret
mov
mov
pop
add
xor
adc
and
lds
dec
pop
out
dec
in
xor
jle
push
and
in
sub
sbb
lcall
fwait
xchg
push
pop
mov
xchg
in
jl
pop
xchg
shl
aas
mov
popa
push
fwait
dec
clc
pop
lret
repz
pop
lds
mov
cwtl
movsb
in
enter
cltd
stc
andb
div
mov
das
pushf
cmp
inc
stos
enter
je
int3
stc
sbb
mov
lret
popf
mov
push
addr16
repnz
mov
xor
pusha
mov
sahf
repnz
pop
es
xor
pop
loop
inc
xlat
xchg
mov
in
inc
lret
mov
pop
sbb
stos
cwtl
push
outsb
xor
jmp
and
ret
xchg
sahf
pop
inc
jb
mov
ss
insl
xchg
ret
mov
adc
and
test
ficomps
std
add
mov
loop
inc
or
pop
dec
mov
push
and
imul
pusha
fadd
mov
mov
out
addb
xchg
pop
ss
push
inc
sub
icebp
lcall
orb
mov
push
push
lret
cli
jbe
setl
sbb
loopne
pop
push
jae
into
jge
fcomps
lods
xor
imul
adc
call
ja
int3
out
or
xor
ficomps
add
lock
dec
stc
and
push
cmp
test
push
pop
fimuls
popf
dec
sti
jp
sbb
push
cmp
xchg
mov
lea
adc
repnz
aad
sub
cmpsb
push
sub
rcl
jb
adc
mov
sbb
xlat
inc
arpl
leave
incb
add
add
popa
repz
rcll
inc
xchg
mulb
movsl
mov
arpl
shlb
addr16
or
es
inc
sub
xlat
or
mov
std
int3
add
clc
xor
jle
jb
jle
nop
mov
pusha
jno
xchg
loop
scas
mov
rorl
xchg
int
aad
aaa
outsb
in
les
jl
repnz
inc
cld
cmp
mov
ds
mov
add
rcr
jmp
clc
sbb
push
pop
call
repz
xchg
nop
push
out
ret
sub
aam
fsts
imul
addr16
mov
ret
aad
sub
test
dec
imul
loope
pop
adc
cmp
lds
scas
pop
gs
clc
mov
jae
lahf
jle
lods
xchg
iret
test
sub
dec
in
jno
sti
iret
es
les
loop
pop
popf
jne
out
loopne
in
inc
shrb
mov
lods
push
ret
jge
shll
sub
divb
dec
data16
rol
adc
test
movsb
push
xlat
xor
add
push
jp
and
cltd
adc
in
sub
jns
idivb
push
movsl
cli
jecxz
xor
xchg
jl
jno
cmp
pop
adc
push
push
jo
jp
sbb
fcomip
jne
lahf
int3
jge
int3
inc
rcr
adc
leave
jp
mov
clc
orb
maskmovq
notl
mov
mov
into
mov
outsl
mov
push
push
xlat
mov
fmulp
add
mov
pop
ljmp
push
cmp
jne
ss
sbb
dec
sbb
mov
mov
mov
movsl
stos
movb
aam
and
test
add
fsubr
mov
cli
pop
mov
xlat
out
add
mov
scas
push
arpl
xor
xchg
or
mov
out
mov
js
bound
movsb
std
inc
mov
or
scas
mov
cmp
out
push
sahf
push
jmp
clc
sub
dec
fwait
test
and
xor
xchg
push
frstor
outsl
dec
pop
fnstenv
xor
es
es
movsl
cmp
add
and
nop
loop
sub
or
add
sbb
outsb
pop
cmp
addl
cwtl
mov
dec
repnz
iret
out
rcrl
sahf
fst
mov
shlb
mov
push
fucomip
dec
cs
js
sbb
lret
fwait
sub
iret
icebp
mov
sbb
stos
movsl
mov
pushf
gs
popf
sarl
int3
out
aaa
mov
mov
loopne
test
dec
test
call
mov
and
mov
cmp
aam
and
addr16
add
xor
in
cmp
aad
aaa
into
fists
mov
and
dec
or
sub
lods
pop
pop
addr16
sti
das
push
mov
add
repz
xor
adc
jns
sub
div
mov
push
or
mov
mov
lds
lods
jno
test
fdiv
xor
shl
imul
data16
mov
out
and
lock
loope
mov
in
mov
push
sbbb
and
xchg
je
dec
adc
sbb
inc
inc
pop
inc
outsb
outsb
mov
arpl
xchg
sarl
daa
inc
sub
ja
dec
mov
cmp
punpckhbw
sub
sub
mov
rolb
push
stos
setns
or
imul
xor
test
fiadds
sbb
push
scas
pop
add
test
and
sbb
imul
in
inc
add
mov
xor
fsubl
cmp
cmp
xchg
mov
jmp
cmp
xor
xlat
lds
pop
xorl
add
aas
movzwl
jmp
lea
sub
inc
mov
jg
add
lret
xchg
out
popa
adc
jo
outsb
cmpsb
movsb
cmpsb
adc
fidivl
std
in
push
jp
sbb
cmp
vmwrite
push
pop
mov
es
lret
nop
cs
cmc
push
pop
and
push
fisttps
push
je
sub
cld
xchg
rol
loopne
add
dec
jg
mov
data16
cmc
mov
lea
push
adc
cmc
push
cld
jecxz
xor
mov
push
popf
jg
or
sub
jb
inc
pop
fisubrl
sub
or
jle
pusha
add
aad
pop
xchg
insl
or
inc
adc
dec
sub
mov
xlat
or
cmpb
rorl
inc
pushf
mov
fildl
adc
sbb
jbe
adc
pop
int3
ss
push
in
jne
mov
cmp
out
inc
xchg
mov
dec
mov
popa
cmp
in
test
lcall
clc
pop
sub
ret
arpl
push
mov
insl
pop
lahf
jmp
in
sub
dec
cmp
jl
inc
fimull
aaa
jg
mov
fnstsw
sub
push
bound
je
cmp
or
add
add
shll
push
cmp
repz
pop
rorb
xor
add
xor
xchg
repnz
nop
ljmp
leave
mov
lea
scas
rcrb
cmp
push
jp
and
sahf
jmp
jo
sub
scas
pushw
ficomps
lahf
pop
xor
mov
sbb
das
ds
jae
and
and
insl
pop
test
or
cmp
movsl
clc
ror
ret
mov
ret
pop
mov
call
mov
lds
in
push
in
push
xor
mov
fdivrs
push
in
lods
push
nop
test
imul
fxch
sub
or
mov
in
lret
mov
fstl
or
adc
int
cmp
out
pushf
xchg
pop
bound
adc
xchg
in
test
inc
shlb
test
js
mov
gs
mov
push
cmp
mov
mov
push
sbb
lods
push
int
push
sub
in
testb
aam
mov
rorb
sarb
xor
sti
arpl
mov
fcmovbe
mov
ljmp
hlt
pop
jnp
mov
or
sbb
sub
cwtl
inc
cli
push
jg
jge
test
cmp
dec
hlt
nop
inc
js
push
popa
ljmp
leave
inc
repz
add
ljmp
push
pop
mov
push
mov
jge
clc
adc
lahf
mov
enter
sbb
sbbb
pop
clc
nop
mov
cmc
sbb
cld
jbe
loop
sti
stos
scas
inc
outsb
adc
in
sub
dec
out
push
arpl
sub
je
aad
mov
or
ss
shl
mov
push
push
mov
cmpsl
mov
inc
loope
add
addr16
mov
xchg
mov
sub
fs
repz
pop
fistl
jnp
mov
adc
fisttps
test
ljmp
pop
rorl
inc
xor
lea
je
cltd
negb
adc
sbb
add
xor
add
test
fldcw
insb
cld
cmpsb
jle
inc
add
std
loope
outsl
cmp
aas
imul
roll
andb
dec
call
arpl
inc
sub
ds
jg
mov
cmovae
adc
xchg
or
jge
loop
adc
mov
int
dec
hlt
sarl
add
ja
mulps
clc
ret
pop
dec
call
fdivp
fcomps
aaa
cs
aad
ret
shl
adc
push
and
xchg
jno
leave
pushf
cmp
xor
jnp
cltd
gs
add
movsb
adc
xchg
xorl
jae
repz
sbb
lcall
arpl
add
bound
add
inc
test
cmp
je
and
popa
ljmp
pop
adc
mov
mov
sbb
in
popa
aaa
fwait
xor
push
dec
mov
cmp
push
ljmp
pop
pop
mov
or
in
sbb
pop
stos
push
sahf
and
rcr
aas
cmp
push
or
sbb
dec
add
xchg
lahf
mov
mov
sub
movsl
icebp
sub
dec
gs
and
cmp
or
insl
mov
out
outsb
mov
jo
je
into
sub
cmc
dec
popa
xor
into
xchg
sub
jns
jl
sbb
sar
and
inc
inc
popa
jg
mov
dec
inc
mov
sbb
out
iret
mov
out
fbld
loope
imul
push
jge
inc
xchg
jg
push
jg
mov
dec
mov
sbb
lds
fildl
mov
jbe
xchg
out
inc
push
mov
lret
in
inc
mov
mov
lods
jge
add
mov
push
iret
fsts
mov
xchg
mov
lahf
jg
and
jmp
aaa
popa
inc
daa
daa
mov
and
inc
pop
outsl
dec
div
jmp
mov
out
minps
jl
jb
jp
xchg
push
dec
lock
adc
data16
lods
aaa
pop
fs
dec
test
sbb
outsb
les
and
dec
cmp
orb
icebp
arpl
outsb
bound
dec
inc
bnd
xchg
inc
sub
lret
shll
repnz
imul
inc
xor
in
sub
add
sub
ljmp
add
cmp
xchg
inc
out
mov
mov
shrl
ret
fwait
pop
push
fwait
mov
lahf
mov
enter
sub
sbb
adc
cs
xchg
pop
mov
jecxz
imul
adc
cmp
cwtl
xchg
in
data16
mov
xchg
pop
lods
rdtsc
imul
repnz
cmpsb
sub
xchg
pop
sub
dec
rcll
push
xchg
scas
push
sub
mov
shrl
sub
xor
cmp
popa
xchg
jg
fbstp
cmp
pop
sbb
sahf
mov
mov
clc
repz
jne
addr16
mov
sbb
icebp
mov
in
sbb
jmp
dec
inc
fiaddl
sub
loope
imul
sbb
jg
push
mov
xchg
mov
xchg
mov
push
sub
cmc
pop
inc
push
push
iret
push
divl
cltd
add
test
lcall
mov
push
scas
inc
xchg
add
mov
sbb
push
xchg
notl
sbb
mov
push
cwtl
xchg
xchg
push
or
mov
imul
push
clc
movsl
icebp
es
push
lods
addr16
stos
cmp
add
shll
sub
ret
push
sahf
add
sahf
test
jmp
pop
mov
inc
scas
cmovo
in
movsb
jle
in
jne
jl
inc
aas
lcall
dec
addr16
fmuls
jo
outsl
clc
ja
cld
or
add
div
rolb
push
fstpl
jge
ljmp
mov
cmp
ja
out
fbld
cmp
mov
cwtl
push
dec
ret
push
xchg
cltd
dec
pop
cmp
push
sub
incl
js
fnsave
jne
scas
inc
iret
adc
cmp
push
add
loopne
out
icebp
cwtl
adc
imul
push
pop
lock
xor
daa
leave
or
or
mov
fldl
push
sbb
cmp
lock
mov
xor
lock
xor
jl
inc
leave
mov
aam
roll
cmp
ja
or
in
jb
adc
test
jno
movsl
aas
scas
pop
and
rcrb
or
roll
push
in
lock
ljmp
dec
jo
push
sub
jl
inc
push
roll
and
cmc
inc
pop
and
jne
and
mov
inc
sub
addr16
out
test
push
sbb
popa
or
in
adc
adc
fsubl
fsubl
mov
cmp
or
fisttpll
or
out
mov
cmp
jno
push
fdivrl
iret
mov
xchg
jl
fsubrs
inc
cli
cld
repz
lahf
inc
pop
std
cmpsl
ret
add
sub
imul
pop
call
aaa
out
fists
pusha
push
icebp
hlt
xor
call
pop
fnstsw
das
inc
lods
repz
and
mov
lock
push
fldl
repnz
xchg
cmp
popf
pop
in
or
addr16
out
inc
and
jp
pop
in
cld
iret
mov
lret
dec
push
es
aas
lods
mov
dec
popf
icebp
mov
mov
rcl
fcomp
mov
jmp
aas
popf
cmpsl
jns
lea
pop
xor
test
ljmp
xor
push
xchg
outsb
sub
notl
scas
shlb
std
cmp
mov
clc
test
mov
xchg
sub
adc
cmpsl
and
stos
adc
jecxz
js
mov
aas
mov
fdivrs
inc
mov
xor
mov
adc
test
push
push
sbb
fs
sbb
imul
aad
imul
aam
ret
imul
xchg
pushf
sbb
rorb
cs
dec
pcmpeqd
sbb
sti
inc
jmp
popl
dec
sbb
call
cmp
loope
add
adc
lods
inc
jmp
nop
adc
int3
inc
movd
out
jne
std
adc
into
mov
jbe
xchg
mov
fs
ljmp
xchg
xchg
and
cmp
mov
fimuls
push
int
sub
cmpsl
adc
ja
out
xchg
mov
stos
lea
popf
mov
mov
add
loop
es
stc
mov
mov
jbe
incl
or
roll
dec
xchg
lcall
and
sbb
lock
mov
mov
sbb
int
xor
xchg
mov
lret
clc
xor
ss
xor
dec
xchg
jp
imul
cltd
adc
jg
jb
sbb
ljmp
push
mov
adc
inc
enter
jnp
lds
mov
jnp
loop,pt
aas
mov
cmp
sahf
xchg
adc
push
xchg
dec
nop
ds
mov
decb
repz
mov
pop
lea
nop
jae
push
notb
jle
daa
push
mov
mov
mov
outsb
xchg
cmp
push
add
in
jno
adc
ret
stc
sub
fiaddl
mov
pop
loopne
adc
dec
mov
pop
push
icebp
jns
push
jmp
filds
pop
or
jns
and
and
dec
mov
nop
sub
push
ljmp
pop
xchg
shlb
fstps
or
fwait
mov
jno
sbb
mov
movsl
sbb
rclb
rol
insb
or
mov
sbb
aam
loope
cmc
in
stos
jmp
or
adc
cmp
xor
add
call
push
inc
dec
jne
stc
js
lcall
int3
jo
push
mov
iret
outsb
shll
jnp
mov
pop
jne
in
jbe
push
push
pop
jae
test
jp
xchg
push
jmp
sub
and
push
daa
push
addl
cmp
sub
ss
idivb
out
daa
inc
rorb
jb
dec
push
sbb
sub
and
inc
sub
outsb
mov
xorb
adc
pop
sub
pop
xor
popf
push
pop
divb
sub
ljmp
jle
pop
sub
sbb
repnz
popf
mov
shll
xor
jge
pop
std
scas
mov
insl
lods
jmp
aad
lds
xchg
lret
out
mov
dec
pop
xor
imul
dec
or
mov
xchg
push
cmc
nop
int3
outsl
add
xchg
out
out
movsb
sbb
mov
push
out
inc
mov
je
pushf
sbb
cli
int
pusha
xor
inc
inc
cmp
add
sbb
mov
ljmp
sbb
sub
pop
mov
jmp
mov
xor
sbb
xchg
cmp
lds
and
xchg
mov
mov
les
jbe
outsb
jle
sub
loop
inc
push
test
mov
fwait
and
sub
mov
leave
test
les
push
negl
iret
test
xor
js
rolb
xor
push
jnp
out
push
ljmp
pop
pushf
cmp
dec
jns
imul
call
and
jnp
fimuls
mov
dec
xor
loop
pop
call
fiadds
repz
cmp
push
cmp
sub
pop
pop
lods
pop
jae
in
aaa
xor
push
loop
jnp
das
pop
inc
or
sub
in
dec
jo,pt
fstpt
cs
inc
sbb
test
jns
std
push
sbb
lcall
cltd
rcll
push
cmpb
ja
mov
adc
cmp
cmp
sub
nop
mov
push
cmovbe
test
je
push
cmp
jae
pusha
mov
repz
into
mov
scas
fstps
int
int3
jae
pop
jecxz
push
fwait
or
mov
dec
mov
aam
sbb
and
push
imull
adc
lahf
sbb
adc
loop
subl
addl
movsl
inc
outsl
lods
xchg
loopne
mov
jnp
in
cmpsb
scas
and
jmp
stc
adc
inc
stos
inc
test
into
pop
stos
sti
and
mov
add
or
jl
jmp
inc
add
int3
pop
push
pusha
jl
xor
rcll
jb
dec
mov
aam
or
outsb
adc
add
adc
push
push
cmp
dec
adc
movsl
xchg
add
mov
lret
rep
test
mull
scas
xchg
int
test
mov
icebp
or
jo
push
dec
mov
dec
into
jmp
aam
inc
sbb
std
sub
aaa
repz
inc
daa
sarb
push
sbb
iret
mov
enter
add
push
sub
mov
repnz
sub
popa
ret
push
dec
out
cmpsl
or
jne
xchg
cld
std
lds
cmova
mov
jle
jbe
icebp
adc
test
ficoml
xor
mov
icebp
cs
xchg
push
mov
sbb
adc
out
pushf
pusha
rolb
imul
xchg
sub
popf
rcrl
je
mov
inc
pushl
sub
imul
xor
sub
or
adc
sub
insb
inc
mov
jge
aam
sbb
shll
mov
pusha
test
test
mov
cmp
xchg
fs
loopne
mov
mov
xor
push
pop
fisttps
pop
mov
sub
sbb
gs
jp
rcll
aad
je
add
mov
jae
mov
xor
es
repz
mov
inc
repnz
movsb
pop
pop
les
mov
sub
ljmp
mov
test
scas
enter
cld
xor
xchg
pop
jecxz
dec
popf
fsubs
xor
cli
pushf
xchg
fwait
arpl
pusha
cmpsb
dec
jb
jmp
mov
and
sub
push
fsubrl
xchg
cmp
inc
test
inc
aam
pop
fistpll
clc
int
negb
fs
inc
mov
jno
iret
lcall
icebp
cmp
push
sbb
jae
sbb
shll
mov
stc
movl
xchg
jo
lock
jp
mov
aaa
dec
push
in
shlb
test
and
mov
push
mov
push
jae
adc
and
cmp
xchg
gs
pop
mov
and
mov
jmp
cmc
push
dec
mov
jl
add
ljmp
add
add
sub
cld
xchg
js
nop
lea
jge
pusha
aad
cmp
ret
xchg
ja
xor
cmc
mov
hlt
les
inc
into
fisttps
add
jne
push
jg
add
pop
je
and
adc
inc
mov
xchg
jle
jp
add
ja
xchg
test
fidivs
sbb
dec
push
fldenv
lds
repz
dec
jp
enter
cmp
pop
je
mov
mov
cmp
xor
sahf
shrb
lret
std
jns
lret
repz
int
and
dec
mov
pop
test
mov
out
lea
push
mov
shrb
mov
enter
and
fadds
fildll
and
mov
cltd
xchg
jno
sub
hlt
mov
push
adc
xchg
dec
mov
insb
cld
fists
sbb
sahf
int3
aam
out
or
in
nop
pop
push
sbb
ret
fnsave
shl
scas
inc
lret
mov
dec
push
adc
gs
mov
xchg
repz
frstor
mov
xchg
ret
xchg
dec
jecxz
fbstp
loopne
decl
mov
or
mov
stos
add
sar
or
xor
std
cltd
std
insb
sti
mov
inc
xor
mov
inc
subb
push
pushf
mov
ret
gs
inc
pop
push
fmuls
sub
ja
outsl
outsl
les
sub
xlat
mov
in
jl
pushf
stos
pop
push
xchg
lock
sbb
mov
icebp
xor
ret
outsl
adc
mov
xchg
fdivl
jb
xchg
clc
fstpl
inc
jb
pop
adcl
push
lods
jno
loope
imul
in
test
or
adc
push
sbb
mov
mov
push
insb
pop
cmpb
cld
gs
adc
aam
pop
cmp
adc
sub
xor
imul
adc
popa
inc
out
in
and
cwtl
movsl
and
in
mov
pop
mov
pop
dec
ss
mov
aad
ja
xor
xchg
inc
mov
loopne
repnz
or
out
cmc
xorl
addr16
repnz
int
mov
mov
aas
jge
cld
push
outsb
xchg
imull
sarl
push
push
es
fcoms
leave
stc
xor
out
insl
push
fwait
sub
mov
fildl
mov
mov
gs
pop
fwait
aam
out
lahf
ret
fxch
mov
or
pop
jge
adc
addl
mov
sahf
mov
fwait
sbbl
mov
or
inc
lds
jmp
xchg
dec
xchg
mov
and
adc
orb
or
xchg
scas
lahf
pop
insb
fldenv
mov
jp
lcall
pop
daa
insb
xchg
movsl
xlat
mov
ret
add
push
pushl
mov
nop
gs
je
jae
mov
lds
cmp
push
mov
lds
out
jge
jle
aas
xchg
int
dec
hlt
sub
mov
mov
xchg
fwait
add
hlt
shll
mov
lds
cs
cwtl
inc
sub
popa
in
mov
imul
ror
outsl
jle
lcall
popf
pushf
inc
pop
sub
jmp
orl
imul
jle
stc
scas
pop
or
ret
popf
frstor
jae
fistpll
pop
or
mov
xor
xchg
jmp
lcall
popf
ja
add
or
mov
jmp
mov
sub
int3
jne
pop
std
popa
dec
pop
inc
jecxz
mov
popa
aaa
cmp
xor
mov
adc
ficompl
pop
cmp
dec
scas
push
lret
adc
add
cmp
add
or
sub
sub
jno
into
and
and
mov
add
mov
data16
jge
sbb
call
lret
pop
push
pop
out
jecxz
push
sub
jmp
decl
hlt
mov
enter
sub
and
scas
xchg
pop
popa
xorb
or
sahf
out
ja
in
jns
pop
cmp
push
rorl
dec
jno
rolb
mov
lea
lock
lds
fmul
icebp
dec
jnp
es
jl
icebp
insb
loope
mov
fcoml
nop
rorb
inc
inc
lea
adc
ss
cmp
mov
popf
and
push
jbe
xchg
add
inc
cmpl
repnz
adc
jecxz
and
and
rcrl
dec
sarb
mov
fcomps
fisubl
rcr
lahf
cld
mulb
hlt
or
mov
fwait
sahf
sub
data16
enter
lcall
pop
pop
adc
faddl
lock
mov
roll
jne
add
out
aaa
and
sbb
outsb
ds
push
add
xchg
or
ret
cltd
mov
inc
jo
call
cmp
scas
sub
enter
sbb
fidivs
xchg
mov
clc
jmp
enter
arpl
sub
sub
js
mov
push
movsl
bound
cmpsl
cli
mov
jl
add
ds
hlt
arpl
outsb
sub
and
mov
jmp
or
jg
mov
push
ret
xchg
mov
inc
data16
add
icebp
arpl
repnz
scas
and
pushf
inc
mov
pushf
dec
fs
xchg
aaa
and
jg
out
cmp
or
addr16
xchg
pushf
out
mov
leave
fwait
test
in
mov
push
insl
cmp
sub
pop
cmpsb
cmp
xchg
addr16
mov
hlt
sbb
cmp
iret
ljmp
mov
lock
dec
xchg
jae
mov
xor
add
cmpsl
xor
jmp
mov
outsl
push
rcrb
leave
ss
shlb
mov
ja
jbe
bound
js
mov
outsl
add
mov
push
cmpsl
sbb
push
dec
sbb
imul
cmp
lret
dec
sbb
call
inc
xor
stos
sub
out
jecxz
test
repz
mov
dec
add
loop
mov
lret
leave
loop
push
sbb
aas
push
cmp
sti
lods
add
pushf
jne
inc
xor
movsl
push
xchg
sub
cmp
jecxz
gs
push
cli
lea
inc
fdivrs
fidivrs
dec
push
add
xor
pop
cmp
jo
mov
fistpl
pop
jae
push
push
push
lock
clc
ljmp
sbb
cs
mov
movsl
mov
push
scas
fwait
adc
push
dec
cwtl
add
in
xor
mov
mov
insb
sub
cs
sbb
movsb
sub
adc
cs
fistpl
xor
iret
repnz
cmp
mov
je
das
les
fwait
popf
add
sbb
in
cld
mov
pop
stos
cmpl
mov
outsb
aam
jae
pop
add
icebp
dec
dec
mov
repz
mov
sbb
mov
repz
mov
pop
and
dec
mov
lds
insl
roll
fwait
xchg
cmp
push
cli
repz
mov
pop
call
lfs
pop
jge
in
mov
pushf
jp
mov
mov
inc
js
aad
and
inc
pop
adc
daa
stos
adc
mov
lds
cmc
jge
sbb
sahf
sbb
pop
dec
int3
or
dec
or
cmp
push
pop
pushf
ja
add
mov
imul
sub
adc
adc
sti
add
inc
xchg
jp
scas
frstor
out
mov
cmp
add
push
adc
jecxz
sub
mov
push
aaa
mov
inc
arpl
add
push
fdivrs
sti
loopne
xor
dec
xchg
ss
rorb
add
maxps
add
outsl
jo
outsb
and
gs
fs
je
add
add
inc
add
pop
add
push
dec
add
addl
add
xchg
inc
add
add
add
add
add
or
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
popa
xor
popa
xor
popa
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
gs
insl
jne
je
push
imul
imul
addr16
jae
je
and
and
outsb
and
dec
jmp
.byte
push
pop
