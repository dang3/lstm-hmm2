sbb
add
mov
sbb
lock
adc
xor
jb
int3
inc
jne
mov
gs
sub
lock
stc
xor
fwait
lahf
or
mov
pop
mov
out
cmp
popa
dec
sbb
adc
loope
loope
int3
sbb
dec
incl
adc
arpl
xlat
mov
and
int3
fisubrs
dec
jae
out
xchg
cmp
lcall
pop
icebp
push
xor
imul
in
xchg
out
sub
ret
pop
cmp
xchg
xchg
cli
and
popa
movsb
dec
xchg
pushf
inc
ss
wbinvd
sbb
scas
aad
dec
sub
adc
bnd
negl
jnp
imul
imul
cmpsl
mov
xor
lahf
mov
inc
lret
cmpsl
cmpb
mov
or
ss
out
inc
or
push
mov
and
and
pop
mov
dec
stos
ret
mov
inc
and
adc
fs
pop
mov
aas
dec
pop
jne
mov
xchg
and
stos
stos
adc
mov
cmpsl
sbb
in
ds
stos
sbb
cltd
insl
pop
jne
cmp
mov
push
insl
ficomps
int
ret
insb
xchg
jle
js
dec
push
mov
pusha
or
sbb
cmp
das
enter
cmp
sub
out
rcrl
in
cli
push
stos
pop
mov
lods
pushf
das
sbb
fisttpl
bound
fiadds
sbb
dec
lcall
ds
mov
sbb
push
and
sahf
int3
dec
ljmp
push
mov
lcall
sbb
push
in
or
out
jo
ret
mov
xlat
cmp
dec
cmc
sbb
scas
sub
sbb
push
dec
fsubrs
scas
jmp
shrl
mov
cwtl
loopne
test
inc
shll
lret
mov
rclb
int
jecxz
ss
cmc
and
push
and
and
pop
cmp
outsb
inc
xor
adc
lods
push
mov
sub
cmp
out
test
ds
cltd
sarb
out
mov
mov
push
sbb
push
push
add
or
cmc
movntps
fiadds
mov
inc
or
jne
out
scas
repnz
fs
stos
insl
push
jnp
xchg
leave
inc
sub
mov
repz
pop
cmp
jne
in
sbb
std
mov
mov
outsb
mov
push
stos
add
stos
cmc
jmp
mov
cmp
das
mov
popf
iret
jae
pop
test
enter
in
hlt
stos
jb
scas
mov
cmp
idivb
cltd
pusha
loop
push
adc
or
xchg
scas
lock
ftst
rcrl
xor
jne
push
lahf
into
dec
jle
jecxz
push
dec
aad
or
movswl
mov
adc
inc
test
push
xor
cmc
andb
loop
xchg
rorl
cltd
rcl
jge
pop
xor
mov
test
mov
add
cmc
mov
pop
cltd
aad
add
push
in
or
sub
mov
in
adc
sbb
push
nop
lret
or
xor
jo
out
sbb
xchg
into
xchg
mov
in
mov
js
aad
push
sub
adc
mov
xchg
std
cwtl
out
mov
and
push
dec
imul
add
insl
divl
dec
ljmp
mov
dec
xchg
or
lods
jae
add
popf
in
scas
mov
popa
push
cs
enter
inc
or
xchg
lret
int
or
lahf
mov
mov
int3
repnz
popa
cmpsl
jno
loop
pop
sbb
pop
and
fmuls
and
mov
movsb
cli
mov
and
fildl
inc
push
lret
mov
and
push
xchg
divb
test
sti
or
jne
repnz
sbb
push
rcrb
iret
push
int3
adcb
push
aad
jb
addl
or
ret
mov
jp
cmp
and
push
inc
int
adcb
bound
push
push
add
mov
scas
ss
mov
int
test
mov
movsb
mulps
push
inc
lods
mov
popa
scas
loop
lahf
insl
xor
mov
sbb
cmpsl
or
push
movsb
inc
data16
enter
add
adc
push
inc
and
adc
mov
movsb
jle
lock
jecxz
or
adc
pop
xor
add
jmp
dec
pop
or
std
lds
ljmp
das
cmp
mov
lret
cld
adcb
push
push
outsl
mov
mov
jno
cli
inc
mov
loop
jecxz
sub
jmp
add
stos
adc
push
test
test
enter
lods
mov
xor
adc
movsb
sbb
popa
cmpsl
or
cs
into
das
xchg
xor
mov
mov
push
xor
jb
push
test
xchg
popa
mov
pop
push
dec
insl
inc
jg
outsb
and
cmpl
push
ljmp
adc
mov
std
adc
aaa
jbe
aas
hlt
sbb
bound
jo
add
rcll
mov
mov
movb
push
rclb
adc
shl
sahf
shlb
adc
lahf
movsb
mov
lock
push
mov
or
rcll
sub
pop
jns
mov
sbb
mov
int3
enter
test
adc
cs
or
jb
adc
test
leave
lds
std
adc
in
mov
out
insb
xchg
mov
insb
mov
adc
cwtl
stos
dec
adc
loope
mov
orb
mov
pop
xchg
scas
inc
xchg
jne
enter
sub
imul
xor
sub
gs
jae
mov
ds
jmpw
add
xchg
mov
clc
push
addr16
xchg
notl
and
sub
mov
fsubl
adcb
outsb
mov
push
and
push
lahf
push
xchg
pop
cmp
jg
lahf
fs
fiaddl
cmp
cmp
in
mov
icebp
out
add
and
add
mov
cli
cmp
mov
shrb
mov
jg
sub
xchg
in
stos
jne
sbb
cmp
xchg
cmp
addr16
dec
and
sbb
mov
add
scas
jecxz
inc
scas
pop
fcomp
dec
add
sub
gs
insb
out
jecxz
pusha
inc
call
add
repnz
pop
shrb
stos
testl
ss
shrl
adc
dec
bsf
pop
mov
pop
gs
jg
xor
hlt
cli
mov
mov
ror
sub
push
adc
aam
bound
add
sub
jo
outsl
out
xchg
ret
or
inc
xchg
add
movsb
inc
lock
pusha
and
or
mov
mov
pushf
test
adc
test
addl
jno
sub
icebp
and
mov
xchg
pusha
mov
xchg
jae
and
or
cld
aaa
outsl
mov
dec
jle
enter
dec
jae
jecxz
ficoms
xchg
mov
iret
sarb
push
and
fisttps
and
cmp
repnz
jnp
inc
and
sti
jl
cmpsb
xor
dec
xor
enter
pop
das
dec
mov
shrb
mov
repz
lret
push
and
fldenv
outsb
add
add
and
sbb
in
cmp
je
incb
fmulp
lods
mov
xor
mov
mov
adc
xchg
mov
out
or
and
negb
insl
and
inc
imul
outsb
cli
sbb
or
jg
mull
stos
fwait
xchg
clc
mov
popa
and
cmp
mov
adc
xchg
adc
push
push
xchg
dec
pop
xor
and
fiaddl
jae
sub
data16
push
adc
jl
mov
lods
lods
adc
mov
pop
dec
call
xchg
repnz
lods
mov
xchg
pop
rcrl
out
cli
add
dec
add
xor
sbb
test
out
xchg
sbb
dec
xchg
dec
test
lods
jno
mov
test
aas
push
xchg
sti
jno
adc
push
or
rorl
in
cmpsb
adc
sub
and
cs
in
lcall
in
adcl
lock
lds
mov
ds
loope
mov
into
mov
movsl
mov
inc
pop
xor
sahf
inc
popf
adc
cmpsl
mov
cld
stc
and
fdivs
repnz
jp
ret
jae
fs
dec
dec
mov
mov
sahf
and
sbb
movb
jge
movsl
xchg
pushf
sub
or
cmp
rolb
and
cmp
popa
cld
xor
lcall
cs
push
adc
and
adc
std
lods
mov
push
mov
mov
and
lret
out
mov
xor
pop
flds
gs
orb
xorb
in
pop
sarb
adc
and
cmp
cmpsl
inc
mov
push
pop
test
movsl
lock
imull
xor
pop
adc
inc
stc
aaa
adc
aad
insl
push
dec
sub
loope
int
aaa
jecxz
mov
out
push
mov
insb
cltd
repnz
jl
pop
mov
mov
mov
mov
sbb
mov
orl
jns
push
sbb
or
cmp
int
hlt
jle
adc
dec
mov
adc
les
dec
pop
push
inc
clc
jl
into
mov
popa
mov
data16
in
or
popa
fidivl
bound
aas
fnstcw
dec
jo
sarb
daa
mov
inc
add
nop
jb
mov
cmp
inc
into
xchg
outsb
mov
js
rorl
push
cs
out
pop
jl
pop
add
ja
mov
fs
fiadds
test
push
call
daa
mov
or
dec
shll
testb
dec
xorb
roll
push
rcrb
sahf
scas
cmc
stos
and
or
fnstcw
xorb
mov
stos
mov
insl
jp
push
jle
fcmove
and
pop
inc
xchg
daa
retw
leave
inc
ja
push
push
pop
fldl
stos
adc
mov
movsl
mov
les
aas
clc
outsb
lcall
push
loopne
call
incb
int3
jge
clc
inc
sbb
pop
pop
test
inc
add
lds
hlt
pushf
lds
call
and
sahf
mov
mov
jo
sub
stos
sti
dec
and
scas
pop
sbb
cmp
jle
jb
push
adc
push
andb
dec
ret
repz
or
cmp
insl
jb
sarb
pop
pop
stos
hlt
cli
push
pop
in
movsl
int
dec
mov
xor
pop
pop
jae
or
xchg
and
mov
and
mov
mov
mov
loopne
jnp
sbb
dec
xor
mov
fidivrs
lods
loop
fs
out
popf
and
loope
mov
movsb
scas
xchg
xchg
push
pop
loopne
pop
imul
repnz
cmp
gs
int
aas
jmp
sti
inc
inc
fwait
pop
cmp
jp
insl
inc
das
push
inc
push
aad
mov
jmp
in
and
fidivs
mov
add
push
mov
mov
idivb
cltd
outsl
clc
in
dec
inc
int3
lods
adc
xchg
shrb
add
pop
mov
notl
dec
add
lock
jg
jp
test
ja
int
pusha
push
dec
and
jns
movb
lret
xchg
mov
sbb
pusha
and
xor
dec
push
dec
icebp
xor
jne
jnp
xchg
jo
iret
lcall
popa
lea
movsb
sar
ficompl
nop
pop
pop
test
mov
movsb
pop
arpl
mov
dec
das
add
xchg
mov
adc
das
lret
repz
push
jle
mov
and
push
popf
dec
xchg
hlt
cli
pop
ja
movl
xchg
fwait
mov
loopne
adc
test
test
shr
sub
push
inc
cmp
mov
mov
subb
sbb
mov
pop
cmpsb
add
pop
movsb
pop
jecxz
sub
cmpsl
jecxz
iret
out
xchg
xor
add
fwait
pop
sahf
ret
lahf
mov
ja
adc
scas
xchg
adc
mov
fcompl
mov
hlt
out
stos
push
dec
jge
push
dec
xor
scas
ljmp
enter
cmp
inc
and
mov
add
fnsave
test
jo
lahf
push
and
in
jno
test
cld
pop
sbb
out
jge
out
and
mov
fnsave
dec
mov
ljmp
fdivrl
mov
shl
lret
sbb
mov
jmp
mov
in
jl
scas
sub
cmp
or
jbe
jae
jp
fstl
inc
jecxz
push
jge
jp
dec
jp
sub
add
mov
fwait
es
ficompl
or
sbb
pop
adc
clc
or
inc
pop
lret
push
sarl
sbb
ja
push
adc
int
push
and
or
ficoms
jmp
dec
jmp
jne
lds
aaa
push
jns
ror
adc
mov
jns
sbb
mov
mov
jl
cmpsl
sbb
xchg
mov
sbb
sub
mov
cmpsb
mov
adc
lea
cmpsb
scas
decl
inc
jecxz
mov
xchg
movsl
into
pop
ja
enter
inc
inc
push
insb
sahf
push
test
js
cld
stos
adc
push
mov
fwait
cmpsb
mov
mov
jns
and
jno
xchg
sbb
add
cmc
jb
xor
mov
add
ljmp
inc
or
cmp
cmc
bound
loopne
xchg
es
cmp
ret
movb
xor
pop
mov
scas
sub
dec
jecxz
sahf
or
pop
adc
push
out
mov
cmpsl
pop
mov
mov
test
push
insb
cmpl
clc
gs
adc
xchg
fs
sub
aam
inc
mov
arpl
push
add
cmpl
lea
fistpl
lods
jp
call
jmp
aam
xchg
lahf
iret
dec
mov
jmp
in
jecxz
xchg
or
mov
and
push
inc
in
bound
in
stos
pop
or
in
sti
xchg
dec
rol
gs
call
jns
mov
into
mov
imul
ret
shlb
jb
jg
inc
push
mov
lods
int
xchg
and
inc
imul
enter
pop
mov
aas
lret
leave
daa
outsb
jno
inc
adcl
cld
out
lods
add
out
mov
pop
push
sub
sbb
dec
xor
shrl
dec
and
aas
sbb
pusha
xchg
add
pop
scas
lea
and
pop
and
and
push
and
popa
in
repnz
lahf
sub
movsb
iret
data16
lods
xchg
std
sbb
adc
add
cld
pop
xor
pop
cmp
jno
iret
aam
or
gs
xor
push
push
and
cmp
push
adc
mov
sub
cwtl
pop
outsb
scas
mov
pop
mov
push
inc
lea
cmp
xchg
ret
shrb
shll
adc
fists
leave
lcall
jge
enter
jmp
testl
jmp
sub
lods
jns
clc
dec
insb
jge
lcall
jg
xor
out
orb
add
sbb
pop
into
push
fyl2x
pop
or
and
inc
sbb
je
lds
mov
or
clc
cltd
cmp
lret
in
test
outsb
cmp
and
stos
mov
or
mov
xchg
aaa
ds
icebp
incl
jae
stos
movsl
aas
mov
aas
lds
shr
call
cmp
xchg
cmc
aam
outsl
mov
cmp
andl
in
sub
mov
in
add
aas
or
sbb
insb
sbb
jp
repz
adcb
cmp
add
negb
pusha
adc
test
cld
mov
or
adc
call
jnp
xchg
faddp
adc
or
sarl
mov
mov
or
lds
cld
inc
sbb
dec
and
in
dec
ds
cmpsl
sbb
mov
xor
jae
int3
or
pop
fsubrl
fucomip
sar
push
loope
scas
sbb
adc
push
xor
hlt
jecxz
insl
or
xor
cmpsl
gs
hlt
xchg
int3
dec
cmp
jmp
out
fs
lret
loop
pop
adc
testb
fidivrs
inc
jg
pop
rcl
push
add
clc
mov
jbe
daa
xor
imul
jbe
jnp
xorb
scas
add
mov
sub
fistpl
xchg
lods
push
and
call
adc
lcall
jg
xchg
testl
addr16
jnp
out
push
outsl
xchg
leave
cmpsl
dec
mov
mov
hlt
inc
cli
loop
mov
popa
or
cmpsb
mov
sub
hlt
inc
xchg
adc
pushf
add
addr16
xor
cld
js
stos
shrl
push
subb
dec
xor
lcall
mov
mov
pop
icebp
sbb
int3
shll
andl
jge
pop
cmp
or
jb
cmp
bound
xchg
push
insl
outsb
xor
pop
mov
lret
pop
adc
fldln2
and
push
loopne
mov
push
push
mov
inc
cmc
lea
mov
jne
xchg
cwtl
jecxz
jle
shr
mov
loope
jo
lods
xchg
jne
push
or
sbb
sbb
hlt
fnstenv
les
repnz
mov
mov
cmp
test
add
insl
xor
or
sub
into
push
cltd
mov
stos
pop
pop
push
fcoml
ljmp
lods
mov
push
stos
loope
push
fstpt
jl
std
sbb
aad
push
push
pop
pop
jb
mov
or
test
enter
es
sbb
push
mov
mov
rcr
jmp
fstpt
faddl
hlt
lea
in
fisttps
ret
add
mov
push
dec
pop
or
jmp
jbe
ds
jge
jge
add
stos
lds
jle
arpl
fbstp
lahf
pop
movsl
fcmovnb
and
lods
scas
dec
sbb
lret
xor
adc
jp
push
dec
icebp
lret
xchg
mov
adc
sub
or
adc
or
fwait
xchg
test
mov
sbb
pshufw
dec
sbb
in
cmp
les
or
sbb
jl
add
xlat
and
and
aas
arpl
aam
js
adc
roll
or
scas
cmpb
mov
pop
inc
pushf
xchg
push
sub
dec
mov
aam
xor
outsb
and
mov
add
arpl
push
mov
lcall
or
sysenter
psubq
adc
add
fcmovb
add
divl
fisubs
fmuls
adc
mov
pop
jb
cmp
inc
dec
and
cli
cs
sbb
outsl
gs
push
add
fmull
adcb
jle
pop
sbb
xor
lret
push
mov
je
and
xchg
push
cmp
lock
fwait
push
mov
and
add
mov
inc
out
or
cmpsb
dec
outsl
movsb
dec
and
repz
and
ret
jbe
in
imul
mov
mov
popf
out
jnp
and
mov
mov
jo
pop
cmp
inc
xlat
mov
ret
jecxz
push
cmp
scas
ljmp
aas
inc
shrb
loop
sbb
ja
fiadds
xor
pop
push
mov
loope
dec
add
mov
xchg
xor
das
lcall
jae
xchg
mov
xchg
mov
sub
sbb
imul
sub
sub
xchg
bnd
and
aad
fildl
pusha
fstps
mov
aad
mov
push
in
outsl
ret
sub
add
ret
into
test
dec
inc
mov
jbe
incb
dec
mov
sub
xor
pop
jns
stc
xor
out
sbb
nop
mov
add
movsl
mov
xor
lods
icebp
mov
add
fldl2e
xor
es
lock
into
jmp
arpl
xchg
scas
cmp
lods
loopne
sub
out
sub
inc
stc
jno
add
dec
mov
inc
negl
inc
ja
mov
push
dec
lahf
xor
xchg
adc
sbb
push
cltd
push
mov
dec
hlt
xor
daa
mov
xchg
popa
cmc
pop
inc
push
xchg
xchg
xor
jbe
jge
inc
adc
cltd
pop
out
pop
in
loopne
pop
mov
cs
jle
mov
cmp
in
inc
sub
mov
int3
shll
cmp
dec
pop
pushf
inc
loope
jmp
fidivs
xchg
sbb
push
icebp
cmpsb
rol
in
arpl
das
sahf
pop
mov
shll
mov
push
shlb
movsl
fisttpll
xchg
imul
loop
fcomi
push
jle
jno
sub
imul
push
pop
sub
jmp
mov
cmpsl
insl
sub
jg
add
xor
data16
data16
out
sub
mov
mov
inc
push
daa
sub
adc
dec
or
fildll
stos
xchg
sub
mov
cmpsl
dec
ret
dec
cmpl
pop
dec
mov
jecxz
pop
gs
xorb
in
sbb
mov
mov
inc
xchg
xchg
int
lahf
xor
stc
and
sub
sub
repz
add
xchg
or
sub
mov
jnp
es
ror
outsl
sbb
adc
ja
rorl
jb
push
adc
jmp
xchg
jo
or
adc
and
ss
lods
and
lret
dec
push
jg
nop
aas
push
stos
cli
sub
sbb
xchg
mov
mov
mov
push
inc
scas
mov
xor
loope
jb
adc
stos
popf
push
push
mov
mov
dec
aam
in
leave
call
jge
sarb
inc
jbe
popa
cli
stos
mov
aad
dec
jo
dec
xchg
js
fistps
or
xchg
outsl
das
jae
jns
lock
out
stos
xor
mulb
sub
scas
jo
and
jmp
xchg
add
out
push
sbb
dec
enter
addr16
lret
push
scas
ljmp
sbb
in
clc
std
loopne
dec
jne
ljmp
lods
bswap
cmp
sbb
nop
jle
sub
lret
mov
flds
xor
imul
mov
or
adc
mov
xchg
insl
ret
inc
lea
mov
in
jle
xchg
dec
aam
outsb
arpl
lret
nop
xchg
and
test
sub
mov
jns
xor
int3
popf
addr16
jns
push
in
lahf
imul
lcall
into
movsl
ds
arpl
aaa
repz
shrb
mov
sbb
adc
mov
orl
cmpsl
sbb
jmp
jno
sbb
mov
into
add
add
aas
dec
inc
cmp
push
mov
jo
sub
jp
cmp
imul
push
mov
and
xor
xchg
xchg
fwait
xor
aad
fnstcw
outsb
sub
mov
test
pop
arpl
addr16
xor
loop
enter
jle
idivl
adc
movaps
arpl
ja
js
aad
adc
push
push
sar
pushl
xor
pusha
lret
jb
jl
js
xlat
stos
pop
nop
ljmp
adc
mov
ret
mov
sbb
jecxz
pop
jle
jg
ja
mov
mov
pop
repz
adc
lret
shlb
pop
daa
inc
dec
pushf
xor
ds
popf
ret
cmp
sbb
out
ja
cmc
adc
ret
cmpsl
popf
xchg
aas
cmp
sti
mov
jge
mov
cmpsb
lods
add
adc
pop
ds
push
cmp
cltd
pop
popf
jnp
stos
in
mov
mov
push
pop
pusha
movb
ljmp
loope
pop
sahf
sahf
cwtl
ds
cmpsb
scas
pop
pop
mov
inc
mov
inc
ja
sbb
sahf
sub
push
lods
push
inc
test
ss
ja
shll
loope
pop
out
xchg
mov
je
mov
shll
addl
int3
inc
into
sub
ror
pop
push
mov
pop
fs
pushf
mov
int3
int
jne
data16
outsl
sub
aaa
and
ds
out
xlat
xchg
or
outsl
jmp
and
mov
cmp
add
test
inc
in
sub
add
loop
xor
cmpl
cmp
outsb
scas
sbb
popa
mov
sbb
stos
push
fwait
inc
mov
in
push
adc
sahf
cli
cmp
sbb
pop
test
repz
lcall
mov
sbb
adc
repz
xor
lret
mov
mov
push
fiaddl
push
sub
testl
add
sub
xlat
dec
ficompl
cmp
jae
push
pop
pop
scas
repz
dec
lcall
lar
xor
sbb
test
sbb
xor
or
mov
outsl
mov
fldcw
shll
push
add
pop
ret
adc
lods
inc
inc
aad
jbe
jl
push
push
dec
push
xchg
ss
lret
push
mov
pop
aad
mov
adc
leave
repnz
push
push
fstpl
push
xchg
or
repz
pop
aas
push
fisttpll
add
fs
out
and
xchg
mov
pop
xorl
mov
sarb
xor
clc
dec
dec
sahf
test
and
add
orl
dec
add
mov
out
cmpsl
scas
and
call
icebp
mov
pop
out
cmp
into
dec
mov
popa
or
das
popa
cwtl
enter
push
push
out
hlt
jno
jne
inc
pop
push
add
fsubrl
stos
pop
icebp
pop
test
pop
jl
popa
mov
fsubrl
push
xor
jg
jns
in
loop
jnp
dec
cmpb
fisubl
hlt
shll
out
es
xor
cld
popf
lcall
les
and
push
mov
push
dec
and
jg
adc
pop
lea
jb
mov
rcrl
jge
icebp
sbb
pop
fwait
jmp
insb
pop
es
cmp
cmp
xor
add
shr
sub
fbstp
mov
and
mov
inc
out
scas
xlat
ljmp
mov
nop
outsb
popa
mov
cmp
jns
mov
ret
loope
cld
lods
repnz
jns
inc
sbb
push
stos
push
popl
dec
mov
lret
mov
or
cmp
psllw
lret
push
inc
and
mov
popa
aaa
hlt
jmp
inc
mov
jl
jno
push
jb
aaa
sbb
mov
imul
scas
add
gs
pop
inc
pop
push
in
shr
jne
and
mov
jne
and
inc
sub
outsb
xor
lods
jno
push
cltd
fcomp
cmpsb
cmc
test
stos
pusha
shll
push
cmp
test
push
call
shr
mov
dec
lea
add
sub
jmp
xor
pop
sbb
out
lret
sub
lea
bound
xchg
negb
lods
out
or
or
js
push
pusha
adc
and
mov
and
jl
push
testb
and
loopne
sahf
mov
push
dec
fucom
sahf
ret
mov
icebp
incl
fisubrs
mov
mov
fsubr
jno
push
xchg
das
dec
or
fstpt
dec
dec
mov
fdiv
mov
xlat
cs
sbb
inc
cmp
xchg
bound
mov
mov
and
inc
jg
aas
ret
divl
leave
cli
pusha
xor
cwtl
mov
hlt
mov
mov
push
icebp
imul
dec
push
int
xchg
subb
movsb
xchg
pop
or
xor
pop
stc
ret
int
mov
mov
shrb
mov
sarl
pmullw
or
push
lods
gs
and
imul
ds
pop
and
jno
sub
adc
aas
scas
push
flds
adcb
orb
dec
dec
or
pop
cltd
in
add
pop
in
jns
mov
daa
push
dec
pop
aas
xor
inc
mov
call
loope
and
mov
jle
stos
call
lret
cmp
pushf
mov
pop
add
sar
and
stc
mov
xor
out
aad
cmpb
popf
pushf
mov
arpl
mov
inc
test
mov
into
testb
outsl
jns
test
fisubrl
add
xor
cmpsb
cmp
dec
or
or
lock
rcrl
pop
mov
std
movsb
sub
neg
cs
nop
or
fidivl
adc
mov
jo
sbb
inc
scas
fsubrs
scas
sub
test
and
mov
loop
adc
sti
pop
xor
bound
cltd
xor
pop
dec
push
lret
mov
pusha
lret
push
push
jp
push
sbb
hlt
in
fbld
push
cltd
push
pop
mov
je
cmp
cmp
mov
pop
pop
fldcw
pop
or
jae
mov
cmpsl
xchg
into
frstor
add
adc
push
stc
push
sbb
mov
xchg
arpl
mov
jl
pop
addb
movsb
xlat
jp
repz
pop
outsl
lret
daa
mov
mov
rcr
push
sub
rol
mov
cmp
and
cli
movsl
fnsave
lahf
je
pop
mov
lahf
sti
and
jle
add
xorl
jae
imul
adc
xchg
sbb
mov
push
loop
orl
and
add
lret
push
sub
arpl
movsl
lods
fcmovnbe
test
rcrl
jg
sbb
in
pusha
call
popa
cwtl
int3
mov
popa
outsl
int
sub
ja
push
sbb
aad
adc
push
xchg
sar
sub
mov
xchg
mov
fidivrl
pop
insl
push
pop
mov
repz
cmc
sbb
andb
lods
aam
pushf
and
test
jb
inc
sbb
push
lock
movsl
and
sub
jmp
outsl
push
popf
mov
xchg
push
or
xor
gs
mov
pop
and
daa
sub
inc
adc
and
add
jmp
cmpsb
cmp
or
pop
rclb
xchg
in
ret
int
add
rorb
push
xor
cmp
ds
jbe
pcmpeqw
adc
pop
inc
dec
lcall
xchg
mov
add
cmc
lds
es
sbb
scas
outsl
push
mov
and
add
push
cld
repnz
inc
inc
or
jne
push
push
adc
inc
int3
jl
add
lret
push
mov
adc
xchg
add
push
lds
ror
sti
add
testb
inc
sub
mov
lods
inc
scas
mov
inc
ljmp
call
aas
ss
mov
test
jg
icebp
dec
push
adc
repnz
mov
inc
xor
fadd
xchg
push
or
xor
pop
pop
xlat
out
xor
mov
pop
fcmovnu
loope
push
cmp
or
lahf
into
sub
data16
adc
sbb
movsb
ret
mov
mov
cmp
dec
cli
flds
xor
sbb
shlb
xor
adc
pop
mov
ss
mov
xchg
mov
or
jb
enter
push
shrl
push
jecxz
sahf
out
mov
pop
mov
into
mov
iret
fists
xchg
lds
test
xor
aam
stc
movsb
jl
daa
dec
shrd
in
mull
iret
inc
dec
push
jb
daa
add
inc
push
mov
testl
bound
shlb
insb
ljmp
adc
push
jmp
fwait
sbb
push
mov
or
cs
sbb
inc
pop
mov
sar
ficoml
sbb
or
jecxz
adc
rcll
test
into
adcb
mov
sbb
sub
adcl
xacquire
ds
sbb
jp
loop
js
add
lret
aad
push
shrl
mov
mov
and
pop
mov
fisubl
aas
clc
inc
mov
push
insb
mov
loopne
mulb
mov
mov
sub
add
add
fdivrl
xorb
add
jns
dec
iret
pop
sbb
rcl
fsubs
fmulp
ret
xor
mov
push
pop
pop
push
out
push
sbb
inc
fnsave
les
sbb
xlat
jns
adc
je
iret
cmp
das
repz
mov
clc
movsl
xchg
je
push
inc
scas
push
mov
ss
jmp
notb
dec
jp
stos
ret
or
les
in
push
cld
sarl
jecxz
jo
inc
jns
pop
gs
add
mov
int
xchg
mov
inc
in
push
negb
and
outsl
rorl
adc
cld
rol
int
repnz
repz
mov
jl
cli
leave
repnz
xor
pop
ficoml
jns
mov
pusha
inc
stos
cs
dec
das
call
mov
mov
daa
sbb
sarb
cmpsb
cmp
imul
pop
pop
rcr
sti
std
cmpsb
xchg
divl
sbb
xor
or
cwtl
dec
call
cmp
sub
loopne
jp
inc
lods
mov
adc
inc
ja
rorl
adc
add
or
push
mov
int3
sbb
push
dec
push
mov
jae
pop
sar
push
repnz
outsl
adc
jge
ret
pop
popa
xlat
mov
rorl
jbe
pushf
adc
pop
test
lods
inc
das
insb
jne
jns
sub
les
or
push
fnsave
add
jle
fwait
out
scas
leave
lahf
or
adc
dec
movsl
and
ljmp
clc
mov
push
pushf
inc
aaa
out
mov
push
gs
shlb
mov
aad
enter
fisubrl
cmp
dec
lds
xchg
rolb
mov
clc
arpl
insb
pop
push
mov
scas
popa
ja
loope
out
movsl
mov
mov
cmp
lret
mov
or
mov
dec
cmc
dec
or
aam
not
mov
test
sub
repnz
sbb
fs
jl
push
lea
outsl
add
sarb
push
out
pop
adc
leave
pop
adc
imul
shll
jne
loop
je
sti
cmp
xchg
cmp
or
jp
cmpsb
sub
lcall
pushf
xlat
rorl
mov
and
movsb
mov
pop
stos
xadd
and
sbb
adc
loop
xchg
pop
pop
ds
ss
mov
mov
fsts
les
popa
cs
mov
les
adc
adc
add
push
inc
out
sbb
push
dec
push
call
cmpl
sub
imull
mov
iret
cmp
xor
add
test
xchg
mov
add
mov
out
add
cmp
ljmp
insb
flds
adc
jp
push
into
roll
lahf
dec
data16
cmp
mov
popa
cmp
int3
mov
std
aas
fwait
sbb
sub
lock
or
scas
movsl
inc
sbb
testl
mov
sub
lcall
loopne
jle
add
sbb
aaa
or
adc
mov
sub
sub
add
sbb
insb
dec
adc
rclb
in
push
and
arpl
xchg
fisubs
add
push
cmp
test
inc
add
jb
pop
loop
inc
cmpsl
sub
ds
ja
test
inc
and
pushf
cs
not
loop
jge
es
test
sbb
mov
int3
mov
out
mov
inc
mov
cmpl
inc
nop
gs
fisubs
clc
jle
mov
sti
or
out
mov
cmp
lock
ljmp
leave
adc
inc
push
mov
jnp
cmpsl
aam
adc
andl
cmc
fsubrs
flds
mov
cmc
orl
jg
imul
sti
add
or
imul
sbb
and
mov
jecxz
xchg
mov
inc
inc
call
dec
push
loope
inc
push
es
mov
mov
lods
test
jl
xchg
or
mov
mov
fs
pop
mov
adc
pop
cs
ret
jbe
cmp
iret
mov
pusha
fadds
int
rcrl
xor
xchg
jg
daa
pop
jns
aad
lods
cmp
insb
into
sbbb
aas
out
mov
mov
pop
sbb
mov
out
fs
out
jnp
sub
lods
adcl
add
add
repz
add
stc
hlt
pop
xchg
mov
sub
ror
and
jmp
ficoms
sti
insb
sub
xchg
mov
fbld
dec
or
cmc
sbb
sti
aam
in
jb
lret
inc
jp
sub
mov
clc
mov
add
inc
xchg
mov
out
xchg
lcall
pushf
cmpsl
pushl
push
aaa
sbb
inc
sbb
mov
js
int3
xor
sti
mov
pushf
and
adc
aad
iret
cli
sub
push
lods
pop
mov
xlat
cld
inc
mov
out
loope
icebp
stos
adc
push
push
mov
sub
dec
adc
fsubrp
aas
cmpsb
mov
jae
xchg
pop
daa
sub
cmpsl
push
sti
mov
and
xor
dec
pop
jb
adc
stc
inc
cld
cltd
jle
xor
push
leave
testl
push
xor
mov
inc
movsb
outsl
jp
outsb
push
cmp
mov
jecxz
adc
dec
cmp
inc
inc
test
cld
nop
xchg
fbld
sub
pop
arpl
pusha
fisttpl
repz
scas
adc
mov
mov
or
insb
lcall
mov
lods
push
adc
ret
fs
lods
jno
mov
pop
rol
insl
mov
fdivr
scas
sahf
push
repnz
dec
inc
mov
or
mov
pop
mov
pusha
int
fistpl
out
push
aas
and
ja
mov
adc
test
fwait
test
adc
gs
orb
mov
imul
pop
mov
mov
cwtl
hlt
xor
pop
dec
or
jmp
pushf
cwtl
outsb
ss
mov
leave
xor
xchg
mov
xor
xchg
ljmp
inc
fwait
add
push
divl
jbe
adc
aam
lods
push
in
add
cld
imul
or
lds
mov
jno
push
dec
iret
mov
jnp
movsl
dec
rcll
xchg
cmpsl
push
daa
mov
jb
cld
lahf
or
int
mov
cmp
sbb
hlt
mov
out
jb
xor
repnz
daa
add
outsb
fdiv
es
mov
mov
sbb
fstpl
bound
aaa
xchg
ret
mov
lock
adc
sahf
pusha
add
pop
dec
cmp
mov
cs
out
mov
divb
xor
and
sbb
fcompl
and
icebp
lcall
loope
adc
imul
cmpsl
adc
inc
dec
add
cmp
sahf
mov
push
popa
cmc
unpcklps
adc
mov
jbe
adc
in
in
sbb
xchg
daa
cmpsl
iret
sub
aam
mov
out
xor
jle
jo
dec
pop
add
in
pop
adc
and
shlb
xchg
mov
mov
mov
sti
adc
xchg
stc
sub
std
fucomi
movsb
aad
pusha
in
cltd
adc
jae
push
out
out
int3
cmc
dec
inc
jns
dec
jp
and
xchg
daa
jl
incl
xlat
jle
xor
stc
insl
loop
test
in
lret
sbb
sub
or
lods
or
xor
dec
cmp
jg
je
fdivr
mov
fsubs
pop
and
loop
push
test
sahf
lcall
push
stc
cmp
sbb
or
daa
jg
push
scas
lock
in
scas
das
in
push
cmpsl
sbb
test
notl
and
sahf
sbb
out
imul
dec
and
pushf
pop
popf
xchg
inc
pop
and
push
add
jno
mov
cmp
mov
cmp
ja
cli
xlat
negl
shlb
and
sub
cmc
xor
cmpsl
mov
fsubl
das
int
xchg
cmp
call
jb
push
cmc
xor
stc
sbbl
xchg
rcl
jp
fcmovb
out
mov
movsl
jle
mov
xchg
icebp
mov
fcmovbe
xorb
push
pop
or
adc
mov
insb
lret
sbb
lcall
sub
es
movb
out
mov
sub
loopne
call
inc
fists
popa
push
mov
xor
xchg
dec
shr
jae
negb
cld
je
sbb
cmp
je
xchg
mov
push
in
mov
mov
and
out
mov
movsl
arpl
xchg
mov
mov
mov
divl
jp
xchg
xor
int3
ret
sub
lahf
inc
imul
out
jge
push
dec
out
sti
xor
pop
xchg
or
push
insb
lea
inc
lods
nop
out
repz
mov
stc
sbb
inc
mov
pop
pusha
sub
jbe
test
or
test
push
cld
add
imul
addr16
leave
cmp
in
clc
leave
mov
out
push
and
or
and
das
dec
xchg
int
pop
xor
rcl
lea
sti
adc
cmp
mov
and
jbe
test
mov
sbb
divl
ljmp
mov
stos
rorl
adc
int3
fsubs
xorl
popa
jp
sbb
add
dec
push
lcall
jae
fstl
lret
jg
movsb
and
jg
mov
mov
push
adc
or
xchg
push
std
bound
mov
push
popl
ja
pop
int
xor
adc
pop
loop
imul
les
push
sub
scas
mov
cmp
sahf
ret
icebp
and
add
pop
or
dec
fs
push
jb
pop
movsb
cli
sub
sbb
add
lahf
nop
push
adc
test
push
fnstsw
cmp
push
fmul
mov
lea
sub
cmp
repz
outsl
mov
sbb
push
js
or
jne
lahf
les
in
inc
pop
in
or
and
mov
adc
jp
mov
jae
popa
jmp
push
test
lret
dec
lea
rorl
xor
xchg
pop
jo
adc
int
nop
int
jo
insl
xorl
loop
and
rclb
clc
xor
rolb
out
imul
inc
inc
lock
shl
mov
mov
push
push
cltd
mov
pop
dec
pop
stos
lret
into
mov
mov
outsb
js
push
dec
loopne
sub
clc
or
jnp
inc
jge
jns
lret
test
rcr
into
sub
adc
mov
arpl
clc
push
ds
shrl
lea
sbb
sub
push
inc
dec
mov
ficoms
and
pushf
jae
fistpl
stos
cmp
push
int3
andb
mov
push
ret
popa
mov
push
xchg
int
sub
inc
adc
inc
les
inc
pushf
dec
cmp
push
subl
xchg
xchg
and
shll
xchg
jge
in
dec
ret
pop
int
pop
xlat
inc
icebp
mov
jmp
adc
xor
pop
aam
mov
inc
or
mov
mov
lahf
cmp
aaa
xchg
cmp
jb
ljmp
nop
sbb
or
jecxz
fildl
add
jno
sbb
adc
inc
or
aam
cmp
sbb
test
mov
mov
cmp
ds
mov
mov
pop
daa
sbb
in
mov
movsb
cmp
movsb
idivl
cld
fneni(8087
mov
rcrl
mov
fdivr
cs
mov
orl
les
mov
movsl
mov
adc
adc
sbb
or
mov
cmp
mov
cmp
inc
rcll
sbb
pusha
push
and
rorb
dec
out
sbb
pop
inc
cmpsl
sub
add
mov
pop
add
push
insl
loope
das
xlat
lock
mov
insl
push
mov
stc
cmp
dec
cmp
lods
push
mov
ret
iret
ret
jmp
lds
loope
xchg
popf
minps
sbb
xchg
mov
shll
or
or
mov
mov
cmp
pusha
cmpsb
aaa
mov
push
fidivrl
loopne
sub
sarl
mov
fdivrs
push
movsl
scas
lea
cwtl
push
in
mov
fiaddl
mov
push
lock
or
sbb
mov
jnp
sarb
nop
stc
xchg
scas
das
lea
pop
xor
push
pop
jnp
pop
or
mov
sub
xlat
pop
into
sbb
xor
push
mov
aad
sub
std
jl
push
push
jno
mov
ja
mov
out
xchg
sbb
and
shrb
es
subb
xlat
das
cltd
aas
mov
push
sbb
pop
mov
les
scas
dec
lret
faddl
jp
add
clc
vmwrite
ja
cmp
mov
stos
addr16
pop
or
in
pop
dec
push
dec
sub
xor
shlb
test
bound
int3
mov
and
cld
addr16
pop
mov
mov
pop
addb
xlat
jge
neg
dec
popa
cwtl
or
aaa
inc
mov
add
pop
jp
jae
in
inc
cmp
mov
jbe
sti
or
cmp
xchg
cmp
cmpsb
mov
loop
adc
add
je
iret
xchg
pop
in
dec
cli
movsb
add
outsl
jns
inc
push
lret
and
dec
insb
ljmp
cmp
jb
icebp
aam
jge
mov
sbb
sbb
fadds
aaa
adc
cld
ds
jl
xor
xchg
or
jns
and
xor
sub
les
xor
cwtl
ret
push
jne
cmp
ret
mov
or
gs
ret
xchg
gs
ja
push
push
mov
inc
out
in
cmc
ja
roll
stos
sub
jg
push
mov
jb
or
shrl
imul
mov
scas
gs
lods
push
mov
pushf
out
ljmp
arpl
stc
cmp
lea
fsubrl
cmp
pop
xor
test
popf
scas
pusha
repz
xor
inc
pop
lret
mov
or
dec
loope
fs
mov
mov
mov
inc
sahf
call
jmp
push
dec
movsl
add
or
cwtl
sarl
test
lea
shrl
mov
subb
dec
sub
fildl
ret
mov
lcall
test
and
lods
ficomps
jle
adc
add
ficoms
pop
aas
xchg
test
cmp
shlb
mov
mov
and
push
mov
inc
movsl
nop
push
mov
cmc
and
out
jle
sbb
stc
jae
xor
dec
bound
push
mov
loopne
xchg
inc
mov
sbb
dec
adc
push
fimuls
dec
jmp
xor
test
mov
test
mov
pop
cmpsl
cmp
sbb
mov
add
push
fneni(8087
bnd
mov
sub
mov
addr16
addr16
adc
pop
les
inc
jg
ror
sub
inc
jle
push
outsl
xor
mov
mov
imul
mov
jge
das
fcomps
push
adc
movsb
mov
cvtdq2ps
lods
mov
ljmp
in
or
fs
mov
jnp
push
movsl
jb
pop
sbb
inc
insb
lcall
xchg
push
enter
cmp
in
sub
loop
dec
push
cmp
inc
and
sbb
xchg
mov
mov
jg
bound
jg
fdivrl
mov
xor
sahf
movsb
mov
mov
inc
sub
jne
jecxz
das
jns
xor
mov
jns
push
mov
sbb
lods
xlat
fsub
jbe
push
or
pop
push
into
ljmp
sbb
jmp
and
dec
add
shr
mov
dec
shrl
movsb
addl
fwait
jge
mov
mov
pop
mov
dec
xor
hlt
add
loopne
into
cs
sub
scas
inc
lahf
push
stos
in
jns
rolb
sub
lods
lret
stc
mov
sahf
mov
lret
je
shrl
or
xor
xor
adc
add
js
dec
sbb
enter
test
shll
filds
pop
fisubrs
mov
mov
pop
in
scas
popf
mov
repz
xchg
repnz
lods
dec
mov
adc
mov
add
pop
jne
daa
xchg
and
in
test
out
fistpl
inc
insb
sbb
push
pop
xchg
jecxz
dec
mov
pusha
xor
aaa
stos
mov
pushf
sahf
sub
xchg
scas
jg
rcrb
mov
inc
aam
mov
repnz
xchg
lret
mov
les
int3
test
mov
fstpt
js
pop
iret
bound
sub
pop
mov
fsubs
mov
cmpsb
jle
nop
sahf
cmp
test
push
push
xor
out
scas
sbb
ret
popa
jl
fimuls
addr16
repz
ja
pop
mov
imul
in
jno
xchg
popa
mov
mov
out
es
mov
je
pop
rolb
fists
adcb
fs
sub
lahf
mov
rcrb
inc
scas
push
sbb
push
repnz
xchg
inc
mov
push
inc
bound
add
push
outsl
lods
cmc
divl
push
cwtl
mov
in
movsl
js
sbb
mov
push
testl
insl
add
fwait
sarl
ret
ljmp
lods
mov
dec
addr16
dec
cmp
adc
cmpsl
mov
fldenv
lea
pop
fbld
xchg
push
push
repnz
aam
aad
jb
lds
loop
pop
push
fadd
pop
jb
fldt
icebp
and
push
iret
loop
or
les
in
mov
push
mov
cld
out
dec
lods
sub
leave
clc
repz
sub
fldt
cmc
lcall
aam
pusha
and
bound
imul
dec
pop
pop
jecxz
inc
cmc
mov
out
mov
inc
lock
aam
jmp
cld
std
mov
xchg
sti
mov
push
inc
lods
mov
xor
daa
aam
mov
stc
xchg
sbb
or
xor
fistpl
dec
xchg
jle
repz
aad
xor
das
pushl
pop
fisttpl
in
cwtl
adc
jge
dec
fucomi
loopne
mov
and
pop
cmpsl
lea
stos
and
or
inc
negb
inc
cmp
xlat
sti
or
lret
jbe
push
mov
add
sub
jbe
call
xchg
or
scas
and
cmp
aad
repnz
leave
xlat
movsl
xchg
mov
cli
ffreep
test
test
rcrb
daa
pushf
mov
add
push
cmp
add
cmp
fimuls
fdivl
cmp
out
ds
lcall
push
idiv
mov
push
cmp
fs
in
loop
jno
dec
out
jo
in
mov
adc
aam
data16
lds
push
xchg
mov
xor
dec
rolb
sub
rorl
or
mov
stc
jo
adc
lret
testl
jge
push
cltd
stc
seta
test
std
loope
jb
sbbl
test
out
divl
ljmp
ds
lods
mov
sbb
xchg
jnp
push
push
xor
mov
pusha
xchg
lret
jg
gs
or
addr16
ret
push
outsb
xlat
xor
xchg
cwtl
fdivrs
mov
inc
xchg
cmp
inc
orl
or
sti
into
loop
rcrl
mov
mov
xchg
out
iret
ljmp
jb
xchg
icebp
shrl
mov
mov
jle
js
mov
testb
into
outsb
js
adc
fwait
cmpsb
add
adc
les
lcall
loopne
mov
repnz
xchg
mov
xor
dec
inc
dec
cld
sub
pop
xchg
sbb
fdivrs
jle
sub
jg
add
pop
or
xchg
std
aaa
cwtl
xchg
mov
scas
jmp
or
cmpsb
mov
call
fld
faddl
dec
jle
ret
adcl
push
dec
cmpsb
cltd
out
add
sub
inc
jns
pushf
or
popa
mov
xchg
xchg
sbb
cmp
xchg
mov
jl
repz
fwait
gs
pop
and
mov
fwait
or
cltd
push
push
leave
adcb
pop
sub
rorl
out
or
jmp
fcoml
stos
mov
out
in
cmp
lahf
jns
insb
in
sbb
arpl
jbe
adc
sbb
push
pop
stos
sbb
push
pop
xchg
iret
dec
pop
movsb
aad
dec
mov
pop
movsb
cmp
mov
pop
jmp
inc
jmp
lcall
std
push
xchg
sub
insb
rcr
fstpt
sbb
movsb
mov
sub
jmp
js
dec
je
xor
int3
outsl
fdivrs
pop
inc
ljmp
jmp
popf
stos
into
ja
loop
mov
inc
xor
mov
jle
lret
in
inc
popf
cld
inc
ljmp
std
or
inc
push
add
cmc
inc
int3
ss
daa
adc
lret
mov
popa
push
mov
add
lahf
cmp
out
pop
ficoml
jl
push
lret
popa
add
lods
stos
xchg
out
jl
sbb
not
pop
adc
lods
cmp
or
leave
pop
inc
or
xor
pusha
or
add
sbbl
xor
jp
shrl
mov
jb
dec
aas
iret
fists
push
adc
test
pop
adc
jno
fimuls
add
mov
or
outsb
xchg
jmp
or
les
loope
jecxz
mov
or
pop
jnp
fiaddl
fwait
or
mov
cld
cmp
pop
stc
clc
outsl
lods
icebp
add
inc
mov
xor
dec
lret
jb
in
rorb
mov
js
andl
decl
jo
or
popf
lret
dec
test
enter
sbb
fisttpl
scas
adc
test
movsb
lcall
add
dec
fldcw
mov
pop
adc
adc
rclb
pop
add
cmpsb
inc
sbb
sbb
loopne
mov
movsl
jne
add
fcoms
ljmp
sub
outsl
testb
jno
stos
xor
mov
and
mov
clc
or
stos
mov
sahf
pop
adc
jmp
mov
aam
ss
cmpsl
vpunpckhbw
ja
mov
popa
dec
mov
sbb
mov
or
push
pop
in
aam
sbb
aad
jo
ficoml
iret
popf
cmpsb
cmc
fnsave
mov
dec
push
test
mov
mov
imul
sub
pop
and
lea
das
cmp
xchg
fucomip
mov
fadd
mov
add
jl
mov
hlt
loope
jge
mov
inc
cmp
dec
lock
out
and
fcmovbe
test
cltd
jecxz
test
cmp
inc
das
frstor
sub
out
pop
jle
pop
pop
jp
jb
fucomp
dec
in
aaa
lret
jecxz
xor
in
lcall
inc
fs
loop
outsb
imul
xchg
push
dec
dec
mov
pop
cli
pusha
rorl
outsl
iret
stc
mov
and
xor
xchg
popf
inc
iret
mov
sub
sub
mov
insl
mov
fldt
filds
into
cmp
and
test
sbb
test
call
push
cmp
inc
mulb
jno
scas
cmp
push
loope
xchg
clc
flds
xchg
push
cmp
cmp
xchg
popa
ror
add
pop
jge
fdivrl
push
je
xchg
pop
sti
or
idivb
cmpsb
sbb
xor
insb
rorb
push
bound
jno
or
add
xchg
andl
mov
mov
je
add
dec
dec
orb
shrl
dec
add
push
dec
mov
mov
xchg
popl
cld
jle
xchg
outsl
push
inc
testb
jo
push
cmp
add
mov
mov
xor
testb
int
pushl
cwtl
jmp
sbbl
mov
loope
mov
pop
pop
xchg
fildll
sbb
and
rolb
sti
arpl
dec
sti
lahf
scas
xchg
fsubp
es
lods
push
fs
pop
xor
out
xchg
outsl
out
push
pop
mov
test
int
jecxz
inc
insb
jecxz
fldl
push
xor
push
leave
and
push
inc
insb
mov
mov
add
or
enter
sub
pop
call
jge
aas
mov
pusha
sbb
jno
pop
pop
sub
std
data16
incl
scas
fsubrp
repnz
insb
mov
es
pop
adc
lahf
pop
adc
mov
dec
out
hlt
icebp
popa
mov
rorb
xor
mov
cltd
fbld
fsub
mov
std
dec
aam
cmp
lods
inc
mov
jae
xchg
mov
inc
mov
or
push
xlat
test
add
xlat
mov
shl
jbe,pn
mov
jae
ljmp
fcomps
fld
mov
adc
pop
hlt
pop
xchg
sbb
scas
jne
and
push
cmpb
je
mov
dec
out
pop
fdivrl
mov
or
mov
inc
dec
in
and
pop
ljmp
inc
loope
cmp
xchg
out
push
adc
insb
push
int3
stos
xor
cmc
pop
jae
push
pusha
pusha
xchg
pop
or
aaa
or
test
test
insb
adc
stos
pop
fwait
shrb
leave
aam
insl
sub
ljmp
xchg
jmp
sbbb
test
jmp
lahf
js
jbe
jle
in
pop
cmp
mov
xchg
fidivrl
call
jl
fistpll
pop
mov
jno
xchg
xchg
arpl
sbbb
pop
gs
push
dec
leave
jbe
cmp
mov
outsb
outsl
dec
mov
sbb
and
je
filds
inc
add
sbb
inc
inc
rorb
jne
pop
adcl
sub
lea
arpl
mov
sub
loopne
cmp
addr16
xchg
jne
mov
xchg
inc
push
mov
scas
ds
pop
stos
repnz
push
mov
test
cli
cmp
jge
jae
pop
loope
and
lea
ftst
popf
xchg
dec
mov
cmp
ret
mov
inc
and
mov
jp
leave
out
lret
jae
or
jge
dec
mov
outsl
call
sub
sbb
sbb
xchg
xor
adc
call
mov
lahf
loopne
pop
inc
jo
push
pop
fbld
push
jb
mov
jecxz
and
les
xor
sbb
add
xor
pop
push
test
inc
push
popa
mov
add
in
xor
lret
daa
inc
xchg
xchg
adc
push
aad
mov
data16
pop
sahf
dec
insb
inc
cmp
xrelease
dec
or
jne
or
into
out
fs
jl
xchg
xchg
cmpsl
adc
out
push
cmp
aam
jmp
pop
iret
js
pushf
or
xchg
fnstcw
cmp
neg
pushf
xor
mov
ja
aaa
cmc
mov
sub
lcall
out
in
sti
add
inc
push
mov
xor
sub
mov
cli
inc
clc
jmp
aas
cmp
cmc
outsb
xor
adc
movsl
dec
enter
es
mov
lret
mov
jp
fidivs
mov
pushf
les
jns
push
add
jb
paddusb
jg
dec
mov
fmull
adc
into
and
push
lds
int3
adc
jo
hlt
cmpsl
cmp
je
cmpsb
cld
jo
mov
sub
push
outsb
mov
sub
ja
sbb
test
push
dec
lret
inc
pop
cmpsb
testl
cltd
in
mov
cmp
xor
mov
and
dec
mov
jl
jl
sbb
and
add
push
fistl
sub
loopne
mov
xor
lahf
cmp
xor
xchg
decl
insl
sti
push
stos
dec
stos
push
push
xchg
scas
xchg
and
cmp
push
iret
xlat
or
lods
mov
jne
cmp
ss
enter
out
scas
sbb
je
lds
mov
or
dec
or
negb
jo
and
das
push
jae
push
mov
xchg
mov
and
aam
cmp
sbb
lcall
mov
loope
mov
loopne
push
sbb
in
xchg
inc
mov
ret
inc
cmpsl
or
lods
xchg
xchg
jp
sub
jmp
addr16
jne
ljmp
cmp
int
test
dec
cltd
dec
fsubr
loope
cwtl
mov
dec
jns
inc
fmul
outsb
push
les
jmp
jle
mov
push
inc
fcomps
das
jbe
aas
xlat
out
rcrl
jecxz
imull
mov
or
xchg
std
push
adc
sub
dec
mov
lods
mov
ret
cmp
ds
mov
adc
xor
test
movsl
pop
popa
inc
cmp
pop
mov
or
inc
xor
xor
sbb
shlb
and
sbb
mov
cmp
aad
pop
xchg
test
or
ds
jbe
addr16
mov
ror
fimuls
and
fwait
sbb
push
pop
aam
cmp
lea
cmpsb
mov
add
call
inc
pop
mov
nop
add
in
sub
repz
loop
sub
dec
adc
push
jae
lret
or
rorb
cmpb
xor
int3
mov
jmp
shrl
pop
repnz
mov
jns
jne
ret
mov
cwtl
into
rolb
ds
repnz
mov
xchg
and
clc
xor
lods
dec
shl
in
jle
aam
xchg
dec
scas
pop
das
icebp
sub
cld
pop
pop
icebp
cmpsl
test
es
mov
mov
outsl
aam
xor
sub
and
les
dec
clc
stos
push
or
push
dec
fwait
rcrl
insl
dec
pop
mov
and
out
or
movsl
mov
fidivrl
call
ret
mov
pop
push
dec
add
mov
shlb
lcall
jmp
cwtl
add
icebp
push
push
jg
lods
and
cs
lahf
add
and
cmpsl
out
mov
cli
mov
pop
clc
sahf
out
add
std
or
cmp
enter
stc
mov
insl
mov
and
testb
mov
or
clc
mov
pop
jp
and
push
cld
jle
jb
repz
test
cmp
cld
jp
fnstenv
inc
lahf
daa
ret
dec
jo
xchg
daa
xchg
sbb
add
adc
dec
mov
push
mov
cs
adc
jne
call
add
jo
cwtl
jnp
cmpsl
loope
shlb
add
mov
loope
frstor
jbe
jbe
cwtl
dec
lods
pop
test
push
outsb
repz
out
pushf
fisttps
loopne
mov
popf
cli
aam
pop
andb
cmp
rcrl
xchg
mov
jno
dec
roll
pop
pop
js
adc
fadds
ss
mov
mov
fsubrp
cmpsb
inc
mov
lds
inc
insl
pop
dec
lds
inc
leave
add
fwait
ljmp
std
divl
mov
and
test
lods
in
arpl
sahf
xor
int
cs
cmc
pushf
movb
in
sub
rclb
jecxz
fwait
pop
dec
mov
rorl
cli
dec
loopne
inc
xor
push
or
fld
hlt
mov
mov
movsb
xchg
jle
popa
addl
enter
mov
movsl
push
mov
in
stc
or
jle
nop
sbb
mov
dec
inc
jnp
lea
push
and
sub
mov
lods
push
stos
sarb
jne
inc
sahf
and
push
inc
test
rcl
out
pushf
mov
add
in
mov
xchg
pop
cld
mov
push
cmp
inc
popf
sbb
sti
mov
lods
and
adc
add
mov
cmp
push
cwtl
std
into
jnp
fldenv
or
xor
adc
popf
cli
outsl
out
hlt
add
or
test
and
dec
sbbb
or
and
movsl
xchg
inc
xor
push
fimuls
movsb
or
sub
dec
mov
adc
jecxz
sbb
popf
sub
xor
add
daa
test
cmp
inc
or
repz
push
mov
aam
jno
mov
int
lock
pop
adc
outsb
inc
in
daa
call
push
movsl
or
jb
or
fdivrs
lea
push
test
jmp
imul
daa
leave
test
and
pop
jbe
mov
int
ret
fwait
cs
mov
cs
sbb
clc
insl
push
mov
xchg
push
insb
or
xchg
xchg
or
sar
or
or
mov
ret
mov
addr16
sbb
scas
sbbl
mov
icebp
out
jecxz
mov
or
dec
pop
mov
mov
ja
add
sub
int
xchg
pop
jbe
push
dec
mov
popl
test
jo
or
shl
scas
push
clc
fsubl
pop
es
mov
sbb
mov
scas
aad
and
js
test
jmp
fldenv
bound
inc
push
add
in
mov
mov
fisubrl
or
mov
sbb
mov
enter
into
in
cmp
aam
push
dec
mov
cmp
fistpl
clc
pop
mov
adc
xchg
mov
mov
inc
sti
adc
jbe
test
inc
out
insl
jge
mov
out
adc
fidivrl
xor
call
mov
pop
add
xor
mov
adc
out
out
xchg
jne
pop
jno
or
test
jecxz
mov
adc
sahf
push
push
inc
inc
insb
add
mov
pushf
sbb
enter
xor
ret
mov
scas
dec
or
mov
mov
ret
lock
out
lahf
add
shrl
pushf
or
jae
movsl
push
out
lcall
loop
ljmp
pop
mov
push
sbb
xor
and
push
movsb
mov
cmpsl
jle
inc
cmp
notl
push
mov
sbb
roll
dec
adc
fstpt
inc
cmp
lret
cli
loopne
pusha
je
and
mov
pusha
inc
jae
cmp
mov
dec
jns
lds
dec
add
das
jge
movsb
mov
cli
out
sub
outsl
and
test
arpl
cs
dec
adc
mov
andb
loop
or
xchg
out
pop
add
clc
xadd
nop
xchg
imul
icebp
add
pop
sbb
addb
add
fstl
shlb
push
xchg
stos
push
mov
adc
orb
adc
cmp
cmp
xchg
out
cmpsl
xchg
fistl
rcl
cmp
pusha
cmovo
push
aam
push
popf
xchg
lock
sub
mov
cld
aaa
scas
inc
cmp
push
shll
jge
jl
ret
rcrl
pusha
jnp
mov
in
pop
mulb
jo
sbb
xchg
imul
push
cmpsb
daa
imul
aad
mov
push
cs
mov
xor
xor
dec
in
xor
adc
cltd
je
push
in
push
pop
filds
dec
mov
cmp
rclb
mov
mov
add
push
add
stos
xchg
jle
push
ficoms
cmp
mov
iret
mov
cmp
out
addb
dec
in
xor
pop
mov
sub
push
jno
push
arpl
cmpb
cmpsl
jbe
cmp
sbb
jne
inc
or
adc
arpl
add
cli
mov
int3
push
call
int
pop
roll
adc
pushf
mov
jle
add
add
cmp
push
mov
outsb
push
jb
sbb
fcmovbe
cltd
sahf
cmpsb
sub
sub
push
and
pop
iret
mov
cmp
mov
xchg
outsb
in
repz
jne
int3
adc
xchg
shll
jmp
movsb
push
mov
pop
mov
out
int
mov
subb
dec
mov
mov
xor
cmc
add
adc
in
insb
cmp
xchg
mov
or
cmpsl
xchg
imul
push
incl
inc
jne
cmp
addr16
jge
insl
hlt
insb
pop
popf
push
push
push
into
xchg
adc
push
xor
mov
outsl
lret
imul
mov
fists
dec
or
mov
stos
pop
dec
fldenv
loopne
in
mov
in
cmc
subl
cmp
mov
add
sub
ficoms
jle
fcmovbe
xor
gs
orl
pusha
lcall
pushf
pop
fs
jl
imul
cltd
mov
repz
divl
xchg
sbb
xchg
inc
outsl
mov
push
jp
lea
xchg
cmpsb
lret
loope
push
adc
stos
into
mov
aam
dec
in
mov
loopne
jne
and
or
cmpsl
mov
dec
es
dec
mov
lcall
add
pop
jp
adcl
adc
mov
in
pushf
sbb
jne
jmp
or
push
dec
outsl
popa
and
into
out
dec
icebp
jecxz
or
mov
dec
mull
push
popf
mov
pusha
aaa
add
outsb
ret
mov
shll
pop
dec
push
daa
les
test
fnstsw
pop
push
sbbb
cmc
test
shl
push
aad
outsb
mov
jp
pop
mov
cmp
push
insl
push
sbb
ret
nop
push
lea
scas
add
jae
cmp
fwait
shrl
les
xchg
pop
movsb
cmp
jno
jg
or
mov
dec
cli
mov
adc
aas
ja
mov
daa
add
inc
lcall
lahf
add
dec
xchg
cmp
pusha
mov
push
xchg
scas
test
stos
jae
repz
cs
test
in
mov
push
mov
mov
dec
ficompl
add
bound
pop
lret
mov
mov
inc
out
nop
fdivrs
ljmp
adc
dec
adc
sahf
test
mov
jl
adc
xlat
inc
testl
add
cmp
adc
fisttpl
add
cmpl
xchg
push
dec
add
inc
push
jo
ret
cwtl
nop
adc
push
lock
mov
pop
and
jne
out
sahf
cmp
imul
aam
or
fdivl
fisubrl
inc
jmp
in
mov
push
std
pop
dec
leave
dec
mov
out
and
stos
aaa
pop
dec
imul
out
push
lea
push
mov
scas
sbb
popf
inc
dec
int3
or
or
mov
sub
jns
lret
scas
lds
stos
cmp
add
loopne
add
int
sub
xor
stos
jnp
push
or
icebp
add
lea
pop
cmpsb
mov
dec
mov
stc
inc
push
cmp
jmp
insl
lcallw
aad
pusha
inc
ljmp
pop
jno
push
aam
push
lods
mov
mov
add
test
rcrl
sub
cwtl
xchg
inc
arpl
adc
int
insl
mov
push
int3
and
jecxz
enter
xchg
sub
dec
sub
aad
jle
push
mov
outsb
mov
xchg
nop
addr16
leave
inc
mov
mov
sub
push
sbb
popf
sti
ljmp
jg
xlat
push
fwait
adc
jne
insl
and
orl
popf
cmp
pop
sbb
ljmp
inc
inc
mov
out
sbb
cmpsl
cmpsl
loope
cli
cmpsb
mov
repnz
xchg
sahf
cli
gs
pop
pop
lods
mov
stc
fbstp
cltd
mov
sbb
adc
sub
sub
fisubrl
inc
inc
pusha
push
das
outsl
loop
loopne
fst
sbb
dec
in
out
sub
dec
test
ja
loopne
cmp
sbb
sti
jle
fwait
and
mov
sbb
pop
idiv
aas
jmp
add
daa
jl
mov
ret
nop
nop
ffreep
inc
loopne
pop
xchg
xor
jno
fs
dec
inc
pop
and
out
in
fsubrl
cvttps2pi
out
push
into
mov
xor
das
iret
push
jge
jmp
stc
sarl
sub
std
mov
sub
repnz
das
xor
xor
adc
sbb
loope
mov
cmp
cmpb
sub
fxch
mov
add
dec
rcl
sbb
lret
mov
dec
mov
outsb
cmpsl
jae
mov
icebp
lcall
and
rcrl
or
mov
nop
dec
pop
add
cmp
sub
lods
arpl
orb
adc
js
push
jne
sbb
inc
or
ficompl
imull
fs
mov
addb
and
add
mov
inc
jmp
inc
out
or
daa
fsubp
adc
fs
daa
inc
pop
shrb
clc
push
lcall
repz
fsubrs
lock
push
lahf
mov
out
sbb
pop
mov
push
data16
cmp
jmp
mov
ja
xor
out
shl
movsb
subb
ret
scas
push
mov
or
sahf
push
popa
jno
push
ret
mov
and
in
mov
repz
jno
xchg
cmp
mov
sub
pop
sti
cld
pop
push
mov
js
in
mov
push
xor
ja
or
in
mov
add
aas
jae
rclb
aad
repnz
pop
lcall
lahf
out
xor
adc
sbb
mov
ljmp
mov
lcall
fldenv
fildll
push
movsl
mov
mov
dec
mov
lods
sbb
rolb
dec
js
fsubs
jecxz
lods
push
imulb
lret
cmpsl
add
cmp
adc
scas
in
push
xchg
or
sub
and
lock
cmc
or
push
pop
add
in
out
cmpsl
inc
mov
inc
bound
std
lock
test
adc
in
mov
movsb
std
push
sbb
pop
cmp
psllw
push
jge
adc
xor
pusha
and
shlb
stc
or
mov
popa
lds
add
das
jae
idiv
pcmpeqw
cwtl
pop
pop
mov
and
or
fwait
push
hlt
and
or
outsl
sub
push
imul
push
movsb
xor
dec
scas
cs
pusha
push
jnp
arpl
es
or
call
fcoms
sub
cs
mov
adc
or
jge
fdiv
lds
and
adc
push
xchg
adc
fimull
mov
cmp
imul
xchg
sub
ds
stos
sub
outsl
dec
push
fs
push
or
stc
imul
sbb
mov
dec
push
ret
cmp
daa
iret
adc
repz
testb
popa
mov
sbb
or
scas
xchg
enter
lods
test
add
xor
and
sbb
dec
pop
mov
pop
push
sub
leave
adc
aas
pop
test
xchg
xchg
call
xchg
fidivrs
add
ljmp
xchg
rcll
xchg
ss
and
push
cmp
mov
fbstp
testl
imul
pop
cld
mov
push
sbb
fcmovbe
add
adc
scas
lret
fcompl
mov
lahf
out
mov
fdivrs
pushf
dec
xchg
jg
push
mov
fistps
mov
jno
jmp
jbe
push
pop
in
push
lcall
adc
ds
std
mov
mov
lds
pushf
cmp
mov
push
leave
push
enter
sbb
or
icebp
add
pusha
jae
and
lock
inc
in
sti
std
push
mov
pop
cmc
std
ja
sarb
cld
in
push
test
mov
jo
xchg
cs
xchg
cli
xchg
adc
hlt
jg
sub
lods
xor
pop
jo
maxps
adc
push
mov
gs
mov
sub
xchg
add
or
jnp
jge
in
in
pop
fsubrl
jecxz
sbb
mov
das
movsl
pop
scas
xlat
push
and
lahf
jnp
lods
pop
outsb
push
cmp
push
mov
mov
push
popa
popf
mov
out
daa
je
insl
icebp
pop
mov
lock
inc
pop
pop
cld
vandpd
push
in
add
xor
dec
cmp
xorb
sti
sbb
bound
lahf
adc
cmp
popf
dec
stos
adc
xchg
test
nop
test
jb
and
pop
and
inc
and
aas
sahf
pop
push
str
push
xor
leave
in
sub
test
jle
inc
pop
jmp
mov
gs
or
adc
mov
jp
mov
sbb
lahf
mov
bound
das
sub
js
xor
pop
mov
pop
mov
jno
xchg
xchg
test
jnp
shlb
jnp
call
sub
lds
int3
int
xchg
and
iret
inc
jo
pusha
insb
inc
dec
xchg
imul
xor
ret
sbb
dec
pop
aad
aad
aas
inc
mov
cmp
mov
or
cmp
mov
lret
lcall
and
mov
aas
cmpb
cltd
jecxz
int
fmulp
aaa
or
and
out
mov
sbb
or
lods
insl
pop
out
andb
leave
or
enter
mov
dec
packssdw
mov
add
ds
sti
cmpsl
out
mov
adc
rolb
stos
ds
dec
out
dec
xor
xor
leave
xacquire
insb
icebp
adc
mov
xor
xlat
lcall
int3
movsl
lock
loop
fisttpl
xlat
and
into
xor
out
mov
ljmp
xchg
jp
sarl
mov
in
and
pop
xchg
insb
xlat
cmp
ds
cwtl
out
mov
add
and
xlat
push
ja
xchg
ljmp
jge
xor
movl
pop
jge
pop
out
mov
pop
lret
and
mov
aaa
pop
add
test
inc
jo
testb
dec
push
mov
lds
test
enter
add
iret
sbb
mov
cli
movsb
out
popa
cmp
mov
push
stos
sarb
push
and
rorl
or
mov
push
jo
out
dec
das
xchg
mov
xchg
jnp
subb
insl
or
pop
sub
xchg
mov
imul
jo
jnp
call
push
in
int
imul
sub
movsl
pop
nop
addl
dec
aad
hlt
and
push
cmp
inc
mov
xor
or
cmp
adc
sub
cmp
cltd
add
jecxz
lea
repnz
out
sbb
jmp
and
clc
filds
xchg
loop
hlt
daa
push
xor
jle
es
jo
loop
lods
ffreep
test
iret
lret
in
sbb
ss
xlat
fcompp
adc
bound
mov
adc
repz
insb
jl
shr
outsb
inc
loop
out
inc
cmpsl
pop
pop
aad
insb
ja
push
rol
mov
mov
lds
popa
mov
leave
movsl
cld
sub
dec
cmpsb
mov
fucompp
lcall
add
add
jnp
fidivrl
adc
push
mov
cmp
jns
xchg
push
pop
mov
fisubl
fxch
adc
pop
xor
pop
rcll
clc
leave
sbb
adc
test
loope
cmp
push
pushf
mov
and
loope
ljmp
or
sahf
ds
clc
stos
pop
mov
push
roll
adc
add
push
dec
xchg
bound
xor
repnz
pop
lcall
cli
sub
shrl
push
lock
or
xchg
test
push
mov
and
pop
pop
or
in
test
add
jae
xlat
pop
sub
push
xchg
sub
fsubs
inc
xor
xchg
push
jmp
dec
ljmp
add
rclb
push
sub
lcall
mov
pop
movsb
xor
mov
adc
enter
lcall
and
subb
pop
out
insl
jbe
je
daa
shrl
scas
xor
cmpsl
add
mov
push
xchg
mov
sbb
cmp
jae
push
mov
and
lret
mov
shll
pop
sub
loopne
pushf
psraw
das
mov
push
fldenv
or
or
dec
xor
push
dec
das
dec
fwait
mov
negl
add
pop
jle
jb
gs
xchg
sbb
ss
icebp
pop
mov
push
mov
push
push
je
out
fs
cmp
in
adc
jbe
mov
jb
pop
push
adc
pop
sub
pop
into
cmp
jns
and
out
cmp
insb
insb
daa
lcall
test
push
cmpsb
sub
push
xchg
aaa
cmp
fcmovnbe
lea
sub
arpl
rep
xchg
push
mov
aad
sub
jle
decl
loope
pop
lock
shlb
fadd
hlt
sbb
les
int3
mov
lcall
lods
xor
loope
ja
or
or
ror
pop
cld
dec
sub
mov
incl
ficoms
cmc
dec
xor
in
inc
sbb
xchg
sarb
xchg
in
mov
mov
fcompl
add
mov
pop
out
cli
lret
push
cmp
push
aas
add
ljmp
jmp
xor
jge
mov
movsb
out
popf
jl
dec
push
dec
cmp
test
mov
dec
add
xor
xor
dec
movsl
es
loopne
mov
push
outsl
rorl
scas
adcl
ret
pop
sub
adc
fnsave
loopne
ljmp
sub
ljmp
inc
fwait
call
mov
push
aas
cmp
or
lcall
lds
flds
loope
sub
sbb
daa
add
add
xchg
pop
out
lods
loop
jno
out
push
fdivr
into
or
or
inc
sahf
ficoms
decb
cltd
dec
fwait
pop
cmp
ret
xlat
pop
adcl
dec
loop
icebp
xchg
int
lret
lea
std
dec
fcompl
push
jp
sbbb
push
mov
je
pop
sar
jne
hlt
xchg
jge
ds
out
femms
add
xchg
aaa
xor
aas
and
xchg
cli
jge
ja
cmpsl
inc
int3
push
stos
ss
push
adc
adc
fldt
xchg
sub
mov
mov
out
mov
ss
divb
in
xchg
pop
xchg
addr16
dec
outsb
dec
pop
insl
test
lcall
sbb
test
mov
sbb
fwait
inc
ret
adc
mov
cli
pushf
pushf
jo
jmp
clc
fstl
popa
cwtl
adc
jae
lret
repz
sbb
xchg
push
pushl
sub
jbe
mov
das
jno
ljmp
insl
enter
out
xchg
xchg
and
out
or
sub
rclb
sbb
fs
std
xchg
inc
outsb
cs
das
pop
ror
pusha
push
push
aaa
mov
adc
push
fs
int3
iret
mov
adc
cmpsb
jne
lcall
mov
mov
out
test
cmpsl
iret
js
mov
rclb
mov
jbe
mov
in
inc
pushf
test
cwtl
or
mov
fcompl
rclb
sbb
xchg
out
dec
mov
out
jmp
pop
pop
adc
flds
mov
fs
hlt
cmpsl
mov
mov
xchg
mov
mov
sbb
js
sub
sub
mov
inc
inc
xchg
add
sub
movsl
push
adc
xor
lock
push
inc
pop
sbb
jb
xor
cld
xlat
or
out
in
push
cmp
xchg
out
cmpsl
sub
addr16
pushf
xchg
push
fnstenv
loope
inc
xchg
loop
pop
xchg
mov
xchg
and
cld
cmp
mov
fnstcw
and
pop
sub
cs
sub
ja
cmp
les
adc
leave
in
or
sti
add
aam
out
add
mov
jge
leave
jg
mov
mov
cmpsl
and
lret
les
jg
sbb
add
daa
push
pop
adc
cmp
adc
rep
cli
int3
adc
fwait
notb
ja
std
out
mov
sbb
test
cmpsl
cmpsl
rorl
mov
mov
cmp
mov
lods
pop
orl
int
je
sbb
dec
push
mov
sbb
lds
insb
add
js
in
adc
dec
push
aaa
imul
add
xor
rcrb
or
sub
inc
and
xchg
clc
jne
inc
ja
int
or
imul
mov
xorb
push
xlat
test
fidivl
xchg
sub
push
in
mov
fwait
push
push
getsec
push
in
sub
lea
incb
xor
xchg
test
sub
jmp
jns
pop
in
jns
ja
sarb
mul
inc
lock
mov
cmp
pop
addr16
mov
outsl
dec
mov
mov
adc
cmp
mov
std
jg
je
or
and
xor
pop
cs
dec
stos
cmp
stc
push
je
pushf
sub
sub
test
or
pop
adc
icebp
ljmp
hlt
mov
or
scas
pop
nop
aas
test
cwtl
jae
ret
inc
jae
popa
lods
jnp
push
faddp
jns
sbb
add
mov
loop
scas
test
xor
xor
inc
shlb
ljmp
cmpsb
xor
insl
lods
repz
sub
mov
mov
push
ror
and
int
scas
push
xchg
pop
xor
aaa
mov
mov
insl
mov
das
cmc
dec
pop
int
test
cmp
mov
cs
inc
cmp
sbb
mov
fwait
addr16
inc
mov
sbb
fildll
add
pop
sub
mov
test
xor
dec
incb
xchg
mov
add
xorb
adc
pop
int
out
or
inc
pop
loope
jae
mov
ror
jnp
jb
cmc
xor
notb
mov
lods
roll
adc
nop
outsl
mov
mov
xlat
sbb
dec
mov
fs
cli
cli
add
stos
cmp
out
addr16
sub
push
aas
and
sub
inc
lods
push
inc
sub
mov
xor
sub
es
lods
nop
dec
cmpsb
imul
insl
xchg
add
lcall
cmpsb
in
lods
and
iret
fstpt
mov
sub
mov
sub
stc
pop
xor
push
push
movsl
jg
pushf
mov
xor
push
pop
xchg
xor
divb
test
out
cmp
inc
jle
outsl
sub
cmc
lods
out
mull
addr16
gs
adc
and
xchg
lock
mov
lods
mov
dec
sub
mov
ret
stos
xchg
xor
push
xor
jns
stos
vxorps
mov
sbb
sbb
mov
jg
lock
push
fs
lahf
int3
es
sbb
add
xor
dec
or
dec
out
push
adc
cmpb
sub
out
dec
lea
test
sbb
lds
sti
std
pop
aad
outsb
jne
or
dec
xchg
xor
in
in
in
loopne
repnz
nop
xchg
lahf
pop
jno
mov
cmpsb
mov
sub
pop
push
jae
mov
out
mov
push
mov
aaa
out
mov
outsb
popf
push
mov
and
mov
push
out
roll
pop
cwtl
mov
andb
inc
pop
mov
out
ljmp
mov
push
push
lods
ret
mov
mov
sbb
lock
dec
lret
repnz
insl
insl
into
shlb
add
mov
nop
clc
ljmp
xchg
lea
mov
in
dec
inc
aad
jae
xchg
adc
lds
daa
je
mov
andl
daa
jnp
dec
mov
or
ret
adc
popf
mov
adc
ljmp
pop
and
xor
and
into
cwtl
or
xchg
shr
mov
mov
cmpsb
in
aas
std
xchg
push
imul
iret
adc
jb
jp
lcall
cli
into
inc
negl
jg
outsb
xor
sub
or
fcomps
andb
mov
loop
imul
push
dec
push
inc
sub
hlt
dec
ficoms
in
fsts
xchg
push
and
or
addb
push
stos
testl
pushl
movsb
cmp
sbb
ds
es
imul
loope
dec
sub
xchg
sub
cmp
push
or
fs
popa
sub
lds
lods
xor
inc
imul
das
xchg
sbb
lock
cmc
mov
inc
pop
aam
sub
sub
das
mov
cwtl
push
pusha
js
cmpsb
addr16
mov
xchg
sub
addl
out
bound
nop
mov
xchg
inc
jns
stc
mov
lret
and
popa
aaa
fstl
pop
adc
sub
mov
sbb
addr16
dec
mov
loop
sahf
add
sub
mov
and
push
xor
pop
test
mov
dec
mov
add
into
ja
push
dec
jno
pop
push
repnz
adc
aaa
sub
rol
out
aad
popa
and
in
ret
in
ja
push
and
adc
or
sbb
or
fcmovb
pop
sub
stos
xor
jle
and
mov
je
sbbl
dec
sub
or
stos
mov
imul
ljmp
or
inc
xchg
aad
inc
mov
stc
lret
clc
sbb
add
mov
ds
scas
jg
jl
mov
rorl
data16
push
xchg
dec
scas
cmc
stos
ret
ret
and
xchg
aam
cmp
xor
mov
sub
daa
pop
jb
xchg
inc
clc
ja
test
push
je
inc
clc
cli
push
adc
imulb
or
push
ljmp
dec
mov
xor
loope
insl
popa
cmpsb
push
sub
inc
fdivrl
call
bound
iret
lret
sti
xchg
pop
ret
jae
mov
or
lods
adc
pop
push
shrb
xchg
aad
cs
fistpll
jnp
cmp
nop
outsl
das
mov
add
cmp
iret
push
fcmovnu
pusha
sub
pop
inc
popa
jb
and
ja
push
into
jnp
mov
pop
add
int
add
sub
ss
inc
pop
mov
sub
scas
popa
push
pop
nop
iret
jl
add
dec
pusha
xchg
cld
or
data16
pop
mov
sbb
cmp
push
jno
and
stos
cmp
gs
jge
sub
cwtl
sub
sbb
imul
int3
ret
movsl
scas
gs
mov
jmp
inc
fcomip
xor
scas
xchg
mov
nop
jp
and
addr16
rorb
pusha
or
inc
inc
xchg
stos
pop
and
cmp
enter
imul
imul
cmp
in
out
mov
in
mov
insl
push
mov
movsb
rcrb
ret
sbbl
repz
aaa
cmpsl
popa
nop
lret
fcoml
jbe
sahf
sub
push
stos
add
mov
orb
scas
mov
les
mov
mov
addb
aad
lcall
in
mov
xchg
nop
scas
lock
lret
js
andl
mov
xor
mov
rcr
jge
push
pop
mov
xor
lea
jnp
out
mov
stc
mov
mov
mov
pop
lret
pop
xchg
jae,pt
aad
jnp
icebp
mov
popf
jns
out
rolb
movsl
in
sub
inc
fdivl
loope
mov
lea
jns
adc
imul
in
sbb
cltd
xchg
cmp
fdivl
cmp
rcrb
inc
lds
jb
sub
cvttps2pi
xchg
cmpsb
pop
in
aad
sub
and
pop
add
jg
adc
fwait
mov
jecxz
aaa
call
inc
mov
stos
fsubr
mov
mov
or
in
aad
inc
stos
sub
sub
xchg
inc
jp
add
sti
pop
jbe
dec
xchg
rcrl
xchg
jp
sub
inc
mov
mov
in
mov
xchg
xorl
sub
cmc
adc
adc
cmpsb
sbb
fstp
addr16
rep
lahf
ficoml
push
dec
mov
pop
test
jecxz
sub
incl
xor
lea
mov
test
mov
stc
mov
xchg
xchg
repz
sub
aaa
icebp
cmpsl
loop
mov
leave
scas
dec
sbb
aaa
cmpsl
xchg
cmpsl
bound
cltd
sbb
jne
sbb
adc
popf
ret
cmp
jne
fdivrs
ss
or
xchg
orb
and
or
adc
popa
mov
in
mov
mov
add
insl
dec
pop
fimull
pop
movsl
xlat
add
pop
add
std
add
cmp
rol
jle
push
sbb
lea
cwtl
xchg
mov
adc
out
inc
out
dec
mov
test
repnz
jecxz
scas
aas
fcomp
cmp
jg
aas
movsl
mov
jmp
inc
cltd
popl
pop
mov
out
out
mov
test
sub
xchg
fdivl
stos
mov
push
mov
insb
lods
sbb
push
out
inc
sub
sbb
scas
outsb
fldcw
push
lret
cmp
add
mov
xorl
xchg
addr16
js
cmp
push
push
in
dec
scas
outsb
push
push
outsl
xchg
or
xor
pop
push
xchg
loop
inc
inc
mov
jg
lret
pop
call
pop
cmpsl
push
mov
cltd
pop
dec
xchg
jo
sbb
lods
pop
imul
add
pusha
shl
std
and
sarb
xchg
dec
mov
cmc
sahf
add
addl
popf
add
mov
push
adc
sbb
sub
jne
ret
sub
mov
ret
add
push
push
subl
jnp
jo
ret
icebp
fptan
fcompl
out
popa
pop
jno
pushf
mov
mov
push
into
xor
sub
into
sub
notl
rcll
xlat
ja
mov
push
int
ja
ficoml
stos
out
jg
inc
jne
pop
or
mov
movb
call
movhlps
inc
pusha
ljmp
pop
fs
push
je
mov
call
movsl
add
fwait
push
fs
xchg
lcall
lret
insl
lret
test
and
icebp
addr16
pop
jl
lahf
cmp
fwait
mov
fwait
in
bound
inc
push
pushf
adc
test
mov
fucomi
cmp
and
adc
xchg
shlb
xchg
and
mov
shll
xorl
pop
mov
mov
pop
add
sbb
call
inc
in
pop
mov
cld
insl
jmp
push
ss
shll
or
inc
mov
xor
sbb
scas
into
adc
push
mov
adc
pop
lods
mov
call
jl
xchg
sub
mov
jnp
enter
mov
pop
dec
loope
xor
push
pusha
dec
add
cmp
test
mov
jg
xrelease
cltd
inc
pop
mov
push
test
imulb
movl
les
xchg
push
test
andl
mov
int3
push
pop
adc
adc
pop
pop
fs
pop
loopne
jnp
mov
jmp
subb
call
jecxz,pt
xchg
movsb
rorb
rolb
jmp
imul
push
fcoms
pop
mov
ja
mulb
xor
ja
cmp
in
mov
out
les
insb
sub
push
jb
inc
imul
cmp
add
lahf
xchg
test
xchg
xlat
and
js
out
cmpb
imul
iret
scas
push
sbb
int3
and
and
sub
adc
pushf
pop
out
ss
sub
sub
leave
out
jmp
movsb
dec
add
cs
fs
cltd
pop
jnp,pn
mov
in
insl
enter
iret
jecxz
cmp
outsb
push
and
mov
xor
jp
ficompl
jno
js
aad
push
cmp
jle
js
outsl
ror
and
aad
jae
sub
or
mov
movsl
stc
adc
push
movsl
adc
aaa
loop
clc
jl
pop
xchg
roll
jmp
pushf
pop
aam
stc
orl
je
sub
andb
incb
jg
add
int3
notl
pop
pop
leave
fidivl
sub
addb
xor
xchg
in
out
out
dec
mov
pop
insb
jae
or
arpl
add
ret
push
lahf
out
sub
xchg
arpl
cmc
pop
sbb
ficoms
mov
mov
in
mov
ljmp
fsts
jp
mov
stc
dec
jl
ja
add
into
cmp
popa
jecxz
pop
jecxz
push
pop
pop
pushf
xor
xor
cld
ficoms
add
add
test
xor
subl
mov
xchg
mov
jecxz
push
push
and
fistpll
fs
out
jns
cmp
fisttps
mov
fidivl
mov
push
cs
leave
pop
mov
test
fsub
out
ret
push
scas
sbb
push
cmpsb
js
inc
mov
sbb
fildl
fwait
sbb
sub
aad
arpl
testb
mov
nop
add
rcll
push
and
push
loope
scas
xor
add
cli
push
mov
inc
divl
outsl
adc
adc
xor
arpl
cmc
push
jecxz
jge
sub
cltd
jbe
fistpll
add
xchg
jae
fwait
into
jmp
cmpsl
in
mov
jnp
or
nop
jp
fs
fwait
jno
adc
adc
mov
repz
sub
out
push
outsl
in
ds
xchg
mov
popa
sbb
ja
cmp
addl
jns
push
jle
jnp
mov
inc
jg
in
push
aam
pop
inc
and
mov
inc
inc
jle
adc
lahf
push
push
inc
adc
and
mov
aas
cmp
pushf
in
mov
out
int3
frstor
jbe
loope
rcl
inc
mov
xchg
jne
and
jnp
mov
mov
mov
lahf
pushf
dec
push
aam
mov
push
out
pop
inc
and
stos
add
jo
sbb
pop
lcall
rcrb
sub
cmc
decb
mov
lahf
test
jge
sub
fdivrs
pop
clc
push
sub
cld
int
adc
sbb
ja
jno
xor
push
xorl
fmull
in
leave
mov
push
lods
shlb
inc
add
test
pop
int
pop
orb
jo
push
sub
int3
pop
fwait
rcrb
addb
icebp
push
stc
cmpsb
pop
xor
push
ljmp
iret
mov
stos
adc
push
and
mov
lds
or
je
sbb
movsb
jbe
add
fistps
cmp
sub
pop
jae
cmc
mov
add
popf
lcall
pop
sub
fbld
jp
test
dec
xchg
mov
ljmp
pop
lock
mov
dec
xor
das
rorl
jae
cwtl
dec
imul
imul
add
daa
xchg
shrb
lods
or
push
or
jo
dec
jge
cmp
dec
jl
sub
andb
dec
pop
lock
imul
test
adc
aas
xor
out
nop
movsb
stos
xchg
pop
out
cltd
mov
fiadds
cmpsb
pop
push
in
push
sub
inc
aam
loop
pop
add
pop
cs
mov
sbb
mov
lcall
movsb
jns
call
and
and
sub
in
fnsave
cmp
lcall
jecxz
std
xor
dec
and
sub
push
xor
jne
leave
pushf
call
jno
ss
cmp
ret
push
movsl
jae
nop
in
fwait
ret
insb
int
cmp
sbb
sbbb
cld
dec
pop
in
into
ja
sbb
inc
mov
xor
fstps
ds
sub
lahf
mov
xor
xchg
insb
xchg
call
pop
ds
push
xchg
aam
outsl
lret
inc
js
gs
shrb
les
in
mov
iret
and
dec
sbb
adc
mov
or
hlt
inc
lods
hlt
sbb
dec
sub
leave
sar
cmp
scas
xchg
test
iret
xor
aas
and
add
xor
into
inc
ror
add
cltd
in
les
fwait
mov
inc
pusha
sbb
test
in
push
mov
mov
jne
daa
mov
mov
add
cwtl
inc
mov
into
popa
cmpsl
dec
fists
inc
fwait
cmp
ret
jp
dec
pop
dec
sti
or
mov
inc
je
cli
cmpsl
adcb
popa
xchg
je
adc
idivl
pusha
jp
lret
cmp
jmp
push
sub
insl
fidivs
cmpsb
iret
push
xchg
das
add
sbb
fcompl
jae
data16
bnd
into
outsl
lock
call
stos
sbb
jle
add
push
clc
cld
mov
jb
lret
xchg
pop
in
or
pop
aaa
inc
ret
or
lea
rcrb
out
lods
out
push
mov
je
mov
or
mov
cmpsl
stc
lds
inc
lods
fstps
sbb
test
push
or
lea
mov
jnp
cs
test
xchg
jl
add
or
jnp
push
lahf
stos
add
push
push
and
movb
xor
gs
cmpsb
mov
icebp
push
push
adc
sahf
mov
clc
mov
mov
adc
enter
push
pop
cmp
lahf
mov
dec
mov
pop
push
pop
xor
nop
adc
jmp
mov
subl
xor
lods
mov
cs
int
xchg
rcrl
add
lock
int3
mov
test
in
popf
mov
mov
inc
ss
in
fstp
add
and
int3
xor
inc
cli
mov
ljmp
sti
flds
push
gs
xchg
es
and
rolb
aam
and
cld
nopl
add
ss
xor
add
lods
adc
cmp
push
cmpsl
call
cmp
cmp
inc
in
int
mov
test
call
mov
stos
dec
mov
gs
and
mov
cmp
stc
mov
add
push
push
push
outsl
jmp
or
fiaddl
out
lods
out
cmp
and
insb
inc
mov
jle
push
insl
push
aaa
out
inc
adc
cli
out
push
outsb
lds
lcall
leave
push
lret
inc
push
jge
ret
aad
cld
setb
stc
or
cmc
pop
or
mov
mov
pusha
mov
loopne
dec
fnstcw
test
push
fstps
dec
pop
sbb
test
and
inc
pop
imul
cmp
outsl
inc
outsl
sub
cmp
pop
push
test
aas
mov
add
xor
sbb
push
adc
lret
inc
xchg
and
dec
stos
jae
xchg
daa
fs
push
xor
push
rcll
test
ds
aad
sti
lods
inc
xlat
aad
loopne
orl
add
out
cwtl
sbb
jae
fs
jne
mov
subl
nop
lock
xorb
and
mov
xor
movsb
roll
ds
cltd
pop
es
push
and
push
mov
bnd
movsl
sub
and
fadds
mull
arpl
in
push
scas
pop
adc
roll
xor
int
jle
hlt
int
arpl
js
orl
cld
pushf
lods
lods
nop
into
mov
cmpsl
jae
outsl
nop
fldl
outsl
or
in
leave
xchg
jl
mov
outsb
dec
ds
sub
add
push
sub
pop
out
pop
mov
cmp
aaa
pushf
cmp
mov
mov
ds
mov
cmp
lds
jns
scas
sbb
pop
jmp
into
sarb
and
movhlps
fnstsw
lods
push
in
mov
lret
cmp
pop
shll
dec
push
arpl
decl
cwtl
fcmovu
and
int
pushf
fdivs
fucomp
das
shll
ret
popa
sbb
addb
incl
or
cmp
mov
push
div
push
mov
nop
mov
js
xor
addl
cmpb
in
insb
aad
push
stc
cmp
adc
cmpsb
sbb
stos
push
mov
xor
mov
mov
xor
mov
dec
add
mov
adc
pop
std
jecxz
xlat
stos
cmpsb
gs
dec
in
rcl
sub
fcmovne
add
jle
mov
push
dec
js
cmc
pop
movsb
add
jecxz
sbb
inc
mov
scas
mov
sub
cmp
pop
das
movsb
fistps
fs
adc
push
pop
xchg
gs
idiv
fst
lds
push
pop
pop
imul
adc
pop
push
lea
xchg
push
pushf
or
sbb
pop
rcrl
mov
xchg
jmp
lock
dec
jmp
loop
pop
xor
sub
pop
shrb
or
xor
imul
out
and
roll
adc
and
fcompl
adc
cmpl
pop
pop
xor
xor
push
cmp
je
jbe
add
int3
mov
fnstsw
sub
cs
jb
mov
or
js
cs
sbb
enter
aam
xchg
cmc
bound
out
fs
push
jg
ret
inc
xor
add
dec
xor
jge
jbe
sbb
mov
scas
and
mov
xor
test
pop
ror
push
xor
mov
ds
xor
pop
aad
sub
lcall
cmp
and
rcl
xchg
push
movsl
ror
mov
sbb
cld
dec
loope
and
adc
aad
adc
add
aad
js
in
push
clc
icebp
nop
push
subb
xchg
lcall
jo
pop
push
pop
pop
mov
mov
daa
pop
aam
xor
cmp
adc
clc
and
lcall
push
xchg
mov
lret
mov
movl
cli
shl
and
cwtl
mov
push
cmp
rolb
push
gs
add
pop
int
rorb
adc
pop
pop
scas
mov
and
mul
decb
test
sub
imul
imul
jnp
pusha
outsl
or
hlt
hlt
lds
xchg
enter
fwait
subps
mov
pop
adc
jmp
rol
push
ret
push
mov
fisubrl
xor
xlat
cmp
dec
aad
in
pop
xchg
insb
cltd
rclb
xchg
dec
sbb
call
insl
jne
mov
shlb
jnp
cmp
arpl
les
sub
xchg
xor
push
ffreep
fsts
cmp
fdivrs
fxch
cmpsl
outsl
ss
cmp
dec
sub
xor
pop
xchg
lock
xlat
xchg
mov
mov
and
push
xor
jle
inc
hlt
pop
loope
cmpl
mov
jbe
jg
lret
call
sub
mov
arpl
call
xchg
bound
inc
dec
jmp
loop
test
jae
call
sub
loop
sbb
jb
dec
cld
push
and
mov
push
jnp
jbe
pop
xchg
fcomps
inc
or
sub
mov
inc
shrl
nop
mov
or
dec
sahf
inc
push
out
test
adc
mov
cmc
aad
adc
in
mov
xchg
loope
mov
fistpl
pop
popa
mov
outsb
sbb
jecxz
pop
sub
out
cmp
mov
lds
sub
aas
gs
repnz
cwtl
out
inc
sub
jae
iret
sbb
jb
pop
stos
or
xor
mov
or
jmp
mov
popf
mov
mov
dec
vcvttpd2dqy
stos
xlat
inc
fdivrs
jne
rolb
lahf
inc
imulb
sbb
or
jg
stos
push
mov
sbb
xchg
in
mov
jb
mov
es
out
pop
push
or
movsb
and
das
mov
cmp
jp
xchg
fwait
jae
xchg
add
sub
add
int3
ja
hlt
jns
aam
mov
mov
add
push
ja
aam
mov
cmp
idivl
cmp
jno
insl
mov
aad
rclb
mov
lret
mov
add
jns
ja
movsl
mov
fidivl
jl
and
pop
mov
xor
mov
sbb
push
jbe
jns
lods
sahf
sbb
dec
mov
pop
xchg
in
push
xor
xor
out
sub
jno
aaa
add
pop
jo
or
pop
xchg
push
xchg
mov
and
mov
push
fwait
stos
out
daa
or
cmpsb
cmpsb
add
add
rol
scas
shll
mov
sub
jae
push
les
push
pop
mov
in
out
xor
mov
stc
rorb
loop
adc
sbb
and
in
iret
dec
icebp
xor
dec
lcall
mov
lds
fbld
ljmp
repnz
negb
push
adc
pop
lock
sub
or
lahf
aad
dec
jg
xchg
sub
mov
lret
cld
lahf
add
aad
aas
popf
mov
xor
push
push
mov
bound
das
mov
xchg
out
ljmp
pop
test
cwtl
sub
sti
add
dec
lods
or
idivb
push
inc
leave
in
movsl
mov
push
in
mov
sbb
push
sarl
mov
mov
add
outsb
inc
push
xchg
cmp
lcall
push
aad
sbbb
mov
push
xor
or
and
out
sub
out
mov
push
xor
or
vmovntps
pop
jnp
enter
mov
jge
daa
aas
popa
and
pop
frstor
sbb
inc
mov
stc
push
push
pop
mov
roll
loope
jp
into
lods
inc
mov
pusha
neg
call
std
nop
push
sub
xorl
dec
sbb
pop
aas
lcall
xchg
push
jne
outsl
push
rorl
dec
push
imul
lods
mov
pusha
fcomps
mov
or
gs
mov
cmpsl
gs
lcall
sbb
cwtl
mov
add
add
push
lock
jno
xchg
jecxz
xchg
stos
dec
fsincos
stc
push
fnstsw
inc
enter
loope
insb
dec
mov
leave
jns
xchg
int3
mov
mov
mov
popl
xchg
pop
shll
xchg
mov
sbb
mov
jl
lock
mov
lods
orb
jp
mov
bound
push
je
push
stos
jge
leave
pop
mov
push
fistps
out
add
daa
dec
push
add
jl
jo
pusha
jbe
lds
lret
movsb
or
mov
lods
push
pusha
loope
mov
bound
shlb
sbb
fcompl
jb
push
lcall
out
dec
cmp
lock
fcoms
mov
nop
adc
lea
mov
scas
daa
mov
cmp
ja
sbb
pop
xor
sub
cmp
psubusw
aam
ret
aad
cli
fmulp
cld
jo
jg
mov
push
xor
mov
jp
adc
ljmp
xor
xchg
loope
movsl
movsb
adc
mov
test
jbe
movsl
sub
push
dec
jmp
in
mov
fwait
aaa
xlat
mov
mov
or
xchg
push
icebp
aaa
bound
in
stc
lds
rorl
fcmovne
sbb
in
pop
sbb
or
lret
push
inc
and
lret
pop
es
stos
bound
loop
xorl
lcall
xchg
loope
lret
movsl
mov
push
dec
in
mov
sbb
adc
shlb
lods
icebp
test
mov
daa
cmp
imul
xchg
pop
pop
add
jns
mov
jmp
dec
aas
test
lahf
inc
test
cmp
inc
movl
adc
mov
lret
repz
mov
fiadds
sbb
cld
pushf
xorl
mov
fiadds
out
popf
iret
std
addl
in
dec
aas
fstp
sub
mov
ja
cmp
pop
mov
imul
popf
push
or
xchg
sahf
repnz
mov
mov
and
imul
mov
adc
scas
mov
jg
dec
xlat
ret
cs
int
call
add
cmpb
push
jp
int
iret
ja
push
sbb
fnstcw
xor
scas
daa
mov
cltd
xchg
pushf
pop
cmc
cmpsb
mov
stos
into
mov
push
aam
loop
ret
add
in
sub
aam
inc
aam
call
stos
jecxz
pop
into
pop
outsb
xchg
imul
push
or
out
adc
dec
int3
and
xchg
pop
lahf
pop
js
sbb
mov
xchg
mov
push
iret
cltd
sbb
or
push
scas
js
cmp
aad
in
inc
sti
psrlw
mov
xor
out
mov
test
sbb
dec
repz
rol
nop
addb
divl
rcr
sti
jb
jl
sbb
imul
push
in
jb
aas
sbb
jl
outsb
call
adc
push
jnp
mov
push
mov
test
sbb
dec
shrl
pusha
in
sub
xchg
loope
or
dec
jbe
add
outsb
or
mov
scas
cmp
mov
adcl
mov
add
sbb
mov
xchg
adc
pushf
icebp
filds
enter
loop
xor
out
jg
aaa
fiaddl
or
dec
inc
ret
dec
ds
ret
ret
popf
imulb
push
enter
inc
jle
cli
fwait
rcrl
pop
sub
ss
cmpsb
sub
adc
mov
cmpsb
imul
push
cmp
pop
mov
arpl
jae
cmpl
mov
push
cmp
pusha
lcall
xchg
sarl
mov
fisubl
loop
xchg
mov
std
and
lret
push
gs
mov
dec
mov
jmp
sti
movsb
imul
shll
adc
fsub
test
dec
pop
bound
lods
pusha
ja
cmp
inc
pop
sti
popa
mov
jl
mov
call
mov
stc
push
addr16
jg
cmc
jg
sub
jg
pop
add
push
ja
aas
loope
ds
jp
call
fldl
mov
xor
inc
mov
sbb
mov
or
fs
inc
std
fsubrl
enter
push
pop
mov
sub
dec
xchg
pusha
add
inc
ljmp
fwait
adc
xor
add
sbb
mov
jae
mov
pop
mov
in
cmp
pop
shlb
or
xchg
fsub
pusha
idivl
jo
ficoms
add
stos
notl
inc
xor
xchg
mov
lock
repnz
es
sub
insl
mov
pop
in
dec
test
mov
test
xchg
add
test
sbb
test
pushf
pop
dec
jno
cmpsb
inc
dec
sbb
pushf
sub
lret
gs
jae
aad
jp
lock
lds
mov
fistps
inc
mov
add
lods
repnz
pop
test
or
cwtl
push
push
push
daa
inc
dec
ret
loopne
inc
jp
icebp
adc
mov
cmp
pushf
sub
ljmp
adc
xchg
mov
xchg
sti
lcall
or
dec
cli
rolb
pop
cwtl
roll
into
cmpsb
sahf
in
movsb
or
test
push
push
dec
roll
or
ficoml
dec
pop
pop
jb
cmpsb
and
stos
or
dec
xchg
xchg
adc
inc
ret
adc
mov
enter
jo
out
mov
dec
xor
push
mov
fwait
aas
add
pop
or
inc
mov
aam
movsb
add
jbe
mov
jb
cmp
loop
arpl
imul
cmp
loope
xchg
or
sbb
ret
mov
ljmp
add
mov
pushw
in
add
out
jbe
loopne
vmread
fdivp
out
add
outsl
dec
inc
pusha
loopne
xchg
xor
dec
pop
enter
sbb
inc
sbb
and
scas
jnp
xor
pop
adcl
popf
add
inc
or
stc
cmp
out
push
mov
shlb
movl
cmc
push
in
xor
push
stos
push
cmp
sub
in
mov
call
mov
lods
inc
movsl
stos
in
mov
lods
pop
cli
cmp
push
jo
push
addr16
ss
leave
gs
repz
ja
or
test
aaa
cmp
lcall
fsubrp
enter
popa
and
popf
sahf
in
sti
cmp
lods
mov
nop
cmp
movsl
pop
movsb
fs
lods
cmp
dec
mov
jne
ss
outsb
add
dec
pop
jne
dec
fs
jmp
rcl
scas
mov
ss
adc
dec
mov
add
xchg
mov
cmp
dec
jl
not
mov
adc
jmp
into
dec
jge
sub
sbb
jle
test
dec
bound
sub
pusha
call
jge
and
inc
xor
and
mov
pop
lods
jo
pusha
lods
xor
adc
lcall
int
dec
fisubs
cmc
mov
bound
mov
sub
rcl
pusha
sbb
mov
jnp
cwtl
fildll
fidivrl
push
jb
xchg
pop
leave
cmp
cmp
sub
mov
sub
or
int3
pop
idivl
dec
xor
or
mov
arpl
divb
xor
adc
jecxz
fidivs
cwtl
loopne
xchg
push
add
fiadds
jp
inc
dec
push
dec
jbe
mov
stos
outsl
adc
out
inc
add
jl
mov
insb
into
loopne
insb
sbb
push
adc
and
pop
or
or
jg
xor
mov
outsl
cmp
jne
pop
pop
sbb
mov
movsl
vmovsldup
pop
push
inc
mov
or
inc
add
mov
jns
mov
mov
je
xchg
rcrb
dec
inc
push
dec
adc
mov
sub
enter
test
adc
jge
int
dec
inc
cld
push
lods
cli
dec
mov
clc
loope
lcall
mov
popa
dec
cli
mov
test
les
xor
pop
inc
mov
das
imul
jae
mov
es
xor
bound
xor
scas
movsl
jmp
or
fcmove
test
mov
mov
fimuls
pop
aaa
inc
call
pop
lods
cmp
xchg
lret
arpl
mov
in
add
xchg
sahf
dec
sbb
mov
xor
in
stc
mov
dec
sub
outsl
mov
inc
add
dec
jbe
push
xchg
dec
aas
inc
adc
xorb
notb
lcall
push
add
dec
lds
mov
dec
sub
and
adc
sub
fs
adc
sub
out
call
pop
out
movsb
popa
gs
xchg
sbb
daa
imul
mov
loopne
cld
lcall
jne
adc
sub
push
mov
cli
inc
out
xchg
ds
stos
cmp
in
and
insb
enter
lods
insb
popf
ds
out
dec
popa
cli
mov
mov
sub
fimuls
sub
or
mov
mov
orb
sub
jl
sbb
mov
iret
cmc
fldt
aad
push
and
das
fldl
adc
insb
cwtl
out
jl
js
xor
push
jnp
xchg
stos
movsb
movsl
fstl
pop
adc
sti
pop
adc
mov
lahf
mov
pop
inc
popf
cld
loope
inc
push
xor
jle
ljmp
in
add
lahf
scas
cmp
testl
pushf
pusha
lods
mov
mov
cld
rorb
sub
sbb
test
in
xchg
dec
mov
inc
add
mov
mov
ja
lahf
mov
cmp
loopne
lods
ret
push
leave
inc
pop
push
mov
pop
or
jmp
lahf
dec
ret
mov
hlt
ret
rorb
movsl
outsl
lahf
in
enter
pop
xchg
jmp
cli
xchg
sbb
add
ss
in
stos
daa
dec
or
stos
or
lret
dec
xor
add
mov
push
push
add
push
mov
aas
adc
in
movsb
jg
pusha
dec
lcall
fbld
outsl
test
cld
lea
test
and
test
arpl
test
iret
lea
out
sub
xchg
fists
cmp
mov
ret
arpl
inc
ljmp
rolb
testb
data16
int
inc
in
cmp
lods
or
fimuls
into
popf
adc
lock
arpl
inc
incl
push
mov
pop
mov
arpl
std
popf
xchg
cli
mov
out
cmc
pusha
or
adc
insl
jb
xchg
or
stos
push
loope
inc
jb
push
dec
mov
or
jae
cmp
out
sub
pushf
mov
test
ja
mov
dec
ret
lcall
inc
mov
xor
inc
ja
mov
jbe
inc
push
mov
es
shll
cmp
pop
jecxz
loop
mov
xchg
pop
imul
push
in
pop
ret
xor
jae
paddd
test
push
mov
xchg
and
cmp
insl
or
mov
push
jno
flds
jl
sahf
popa
fxtract
sahf
stc
cmc
pop
inc
xchg
insl
cmc
mov
repnz
dec
ja
xchg
xor
in
outsb
xchg
dec
hlt
lahf
test
cmp
mov
cmp
lahf
and
jmp
mov
jp
mov
inc
xor
loope
sbb
mov
pushf
dec
scas
jl
test
icebp
push
sti
pop
dec
imul
cmp
sbb
adc
inc
call
xlat
inc
or
imul
jns
fidivs
in
jecxz
and
cs
in
push
daa
rorb
test
jno
es
mov
xor
inc
aas
or
fs
das
test
int3
xchg
bound
loope
dec
aas
mov
push
cwtl
fistl
mov
lea
pop
cmp
push
rorb
sbb
and
je
inc
pop
in
inc
in
or
shlb
jge
mov
roll
pusha
das
jl
scas
xchg
inc
add
push
call
mov
lret
fwait
jb
mov
rcrb
cld
sub
push
shlb
sub
movsb
cmp
cmp
addr16
pushf
fldln2
jne
insl
push
dec
mov
xor
xchg
cld
arpl
push
lea
es
cmpsb
je
adc
lahf
and
ret
and
rolb
cmpb
xchg
repnz
shlb
sub
sti
int
sbb
push
xchg
loopne
mov
sub
lahf
or
xor
pop
sbb
sbbb
mov
les
int
push
dec
std
xor
mov
xor
jge
movsl
out
mov
ds
mov
aad
pop
or
or
mov
stos
jecxz
sub
ret
sub
mov
aam
mov
dec
pop
rcl
sarl
leave
out
ret
insl
ljmp
push
mov
pop
or
pop
movsb
inc
or
jnp
hlt
popa
mov
mov
jg
int
mov
bound
out
in
pop
scas
inc
in
negb
push
int3
mov
mov
add
or
pop
fsts
scas
movzbl
push
jmp
aad
mov
dec
mov
or
pushl
out
pop
inc
and
mov
mov
xlat
or
sbb
sub
jae
pusha
and
fisttpll
mov
subb
cmpsl
sub
push
call
leave
int
fildll
outsl
ja
or
dec
loopne
jg
mov
xor
insb
in
ja
stos
in
xchg
pop
or
add
cmpsb
lcall
or
mov
loop
cmp
mov
mov
mov
cmpsb
stos
or
repnz
adc
pop
das
cmc
addr16
fstpt
das
add
dec
jp
inc
test
aad
jmp
sbb
sbb
fsubr
ja
xor
mov
clc
pop
xchg
adc
jns
pushf
aad
xlat
dec
popf
add
ret
jg
push
jg
test
or
out
shrb
imul
jbe
pop
xchg
push
pop
in
out
jg
int
xor
push
fidivrs
mov
adc
inc
and
incb
sbb
ret
xlat
shll
repz
push
mov
repnz
or
push
ficoms
cmp
xchg
push
mov
push
add
dec
sub
xchg
dec
xor
test
gs
mov
mov
jb
daa
pop
rcrl
adc
repz
ret
mov
scas
add
xor
mov
test
out
mov
pop
xchg
pusha
push
in
xchg
and
pop
aad
ljmp
ret
cld
lods
inc
pusha
movsb
in
dec
lods
in
inc
ret
vpshuflw
adc
jecxz
pop
xor
mov
xchg
adc
mov
sub
divb
jno
inc
jno
lret
xor
or
cmp
addl
xchg
dec
push
leave
dec
mov
cltd
dec
jecxz
fiadds
mov
push
addr16
call
jp
dec
xchg
push
adc
in
bound
scas
pop
or
paddw
cmp
jne
icebp
mov
int
out
mov
push
mov
adc
scas
push
shl
in
or
shlb
pop
rclb
or
andb
aad
xor
sub
fcmovb
int
ret
lods
or
push
push
int
lock
lock
andl
cmp
imul
cmp
push
jg
xlat
xor
call
push
lahf
mov
inc
jecxz
xchg
mov
cmp
xchg
mov
je
xchg
mov
adc
movsb
dec
xor
jb
stos
sbb
mov
mov
jbe
shll
punpcklbw
jg
jns
sbb
jbe
push
stos
inc
dec
and
adc
dec
insl
leave
xor
mov
andb
xchg
fsubrl
stos
daa
lahf
jbe
out
stos
inc
xor
or
outsb
lods
sub
jo
test
andl
cltd
jno
xor
xor
lods
xchg
or
xor
cmp
lahf
fiadds
xchg
gs
orl
cmp
into
call
pop
ret
adc
sahf
mov
aad
jg
inc
add
cld
add
nop
jno
lods
and
xchg
ret
ret
add
daa
cmp
xlat
je
adc
or
stc
pop
xor
ror
bound
ss
insb
repnz
arpl
cmp
je
dec
mov
jae
repnz
jmp
cmp
fstps
out
ljmp
out
inc
rolb
push
push
cmc
mov
cmp
cmpsl
and
pop
sub
jne
testb
dec
lds
cmp
cmp
sub
imul
mov
fstpt
cmp
lcall
xor
sbb
adc
mov
lds
pop
inc
jmp
jb
mov
cmp
insl
es
sbb
pop
decl
es
add
daa
push
js
mov
jbe
sbb
orb
add
xlat
es
fisttps
push
mov
cmp
popa
in
pusha
inc
push
int3
arpl
cmp
das
mov
pusha
test
jmp
fistps
enter
cmp
in
call
push
inc
imul
sub
inc
movl
mov
sbb
out
jp
inc
cmpsb
mov
or
lods
cmpsl
test
roll
clc
test
mov
xor
push
test
push
nop
sti
mov
xchg
or
sbb
inc
dec
int3
xchg
in
cmp
out
icebp
subl
loop
stc
out
sbb
xor
pop
push
cld
sbbb
pop
ret
cmp
xor
push
or
mov
sub
aam
jg
xor
repz
ds
cmp
in
xor
daa
push
xchg
cs
jg
repz
mov
cmc
adc
sub
jbe
in
pop
mov
mov
add
sti
or
pop
cltd
bound
mov
jmp
push
lcall
dec
sbb
push
inc
adc
gs
xor
sbb
mov
rorb
andl
addr16
cmp
push
ja
fs
jle
sbb
xlat
mov
daa
cmp
out
or
stc
xor
mov
mov
gs
mov
neg
jae
adc
dec
mov
stc
popf
es
mov
std
cwtl
lea
fdivl
call
out
shrb
cmp
pop
andb
imul
mov
mov
sbb
sbb
adc
jb
shlb
mov
mov
lods
dec
fistpl
push
mov
loope
jno
mov
jge
imul
cmp
jp
gs
lahf
inc
push
pop
dec
xchg
repz
std
and
cmc
ret
dec
fsts
leave
pop
pop
push
fneni(8087
movsl
inc
movsb
xchg
cmp
inc
addr16
adcl
insb
mov
sbb
mov
pop
aaa
push
dec
js
in
adc
inc
dec
int
sub
or
xor
cmc
repnz
fs
mov
adc
jecxz
mov
or
pusha
cwtl
leave
call
xchg
or
dec
adc
pop
ret
jo
xchg
addl
jmp
cwtl
int3
inc
mov
xor
jg
mov
je
dec
sbb
xchg
dec
adc
lock
loop
fdivl
sub
fcom
enter
jnp
xchg
mov
jecxz
clc
lods
ret
push
lds
lods
sub
in
into
and
aad
sahf
jno
jae
negb
fidivs
or
dec
mov
lcall
cli
mov
or
mov
xor
sub
in
jl
movsl
cmpsl
dec
adc
outsb
inc
ret
mov
fistps
ljmp
mov
pop
xchg
push
test
rcl
xchg
mov
push
fwait
lcall
das
lcall
out
fdivl
orb
wbinvd
jmp
dec
out
fwait
push
push
pop
repnz
inc
xor
stc
iret
es
fsubrs
out
out
rcr
adc
and
inc
andl
pusha
std
mov
xor
lcall
mov
or
cmp
imul
inc
cmp
repnz
lahf
push
push
xchg
imul
insl
push
fwait
pushf
mov
jnp
mov
movsl
lock
jo
out
cmp
mov
enter
cmc
cwtl
adc
mov
lods
cltd
mov
cmp
jp
mov
xchg
lcall
and
cmp
jnp
imul
shll
mov
jno
dec
mov
mov
out
jle
cld
sub
les
push
jns
sub
pop
out
dec
jo
hlt
in
pop
pop
push
movsl
sbb
movsb
cmp
ljmp
jl
jecxz
clc
scas
subb
cmpb
out
xor
data16
sub
je,pn
push
add
in
mov
xor
mov
cmp
xor
out
sbb
and
std
fdivrl
sbb
mov
sbb
fisubrs
pop
lds
jbe
jle
inc
xor
lcall
xchg
add
jbe
mov
pop
push
test
jbe
aad
shr
into
sbb
pushf
imul
jae
xlat
push
gs
data16
ljmp
xchg
cmpsb
xchg
inc
clc
fidivrs
mov
sub
loop
lods
pop
jo
xor
shrb
adc
push
in
lret
daa
jg
or
icebp
push
push
loop
fists
sti
jns
daa
sbb
mov
stos
mov
ds
and
lods
cmpsb
cmp
add
push
mov
jnp
rcll
dec
movsb
inc
dec
loopne
mov
ljmp
ret
mov
das
mov
popa
test
idivb
dec
cs
int3
mov
mov
or
lea
arpl
pop
lea
jecxz
lds
push
cld
das
push
into
mov
popa
fistpl
imul
inc
adc
xchg
mov
je
xorb
imul
cmp
les
aas
ret
add
mov
mull
loope
mov
out
rorb
mov
jnp
push
popa
fldt
std
cmp
insb
pop
dec
mov
xchg
xor
sub
rorl
mov
xchg
lds
push
xor
mov
mov
and
repnz
mov
in
or
xor
idivl
sarb
and
out
rcrl
dec
loope
push
jge
pop
rcl
popa
jp
movsl
clc
cmp
daa
std
xor
pop
add
cmpsl
sub
lahf
xor
pop
sub
enter
sbb
aas
push
shl
dec
test
xlat
stos
add
push
and
mov
jbe
icebp
das
xchg
loop
lret
dec
mov
shrb
ss
push
fnstsw
adc
aad
fistps
push
lret
mov
xor
add
xchg
jno
pop
inc
inc
inc
push
push
adc
rcr
inc
mov
dec
lods
jnp
nop
xor
and
jnp
popw
pop
pop
idivl
xor
aas
add
scas
std
xor
aaa
adcl
pop
and
stos
jnp
push
add
pop
cmpsb
pop
shrl
lods
push
enter
mov
rcrb
xchg
inc
and
xlat
stos
sbb
lock
cltd
repnz
je
push
or
mov
mov
push
lods
or
rorl
push
dec
imul
jle
fidivrl
addr16
xchg
lods
mov
fwait
adc
xchg
rcrl
scas
pop
and
dec
rclb
ja
test
xchg
or
leave
les
cmp
xor
pop
outsl
sub
inc
mov
pusha
add
repz
and
mov
test
pop
movsb
inc
lods
pop
fidivs
dec
and
imul
test
push
mov
adc
xlat
popa
cmp
add
pop
and
sub
fcompl
sbb
ja
sub
mov
iret
movsl
lea
or
rcrb
pop
fs
cmc
inc
in
data16
cmpsb
pop
xor
jnp
mov
outsl
push
fwait
call
lea
call
imul
xor
cmp
mov
je
loope
sbb
out
mov
adc
xor
divl
sbb
adc
stc
mov
pop
loop
inc
pushf
out
push
mov
sar
dec
leave
movsb
sbb
or
mov
repnz
adc
int
lock
int3
clc
push
adc
xchg
mov
lock
seta
nop
shll
mov
or
aam
imul
cs
mov
outsl
scas
out
mov
test
lea
and
je
mov
adc
mov
imul
or
mov
and
stos
ljmp
push
repnz
add
adc
add
jbe
sbb
div
xor
hlt
jne
or
out
push
addb
scas
fisubs
lock
or
in
sahf
repnz
push
fwait
mov
loopne
jo
push
sahf
adc
mov
lods
scas
sub
cmp
pop
cli
bt
mov
lahf
pop
mov
test
in
or
jns
mov
jp
jbe
mov
sub
sbb
call
jmp
ret
lock
inc
daa
mov
mov
dec
cmp
dec
bound
daa
sub
mov
daa
cmp
cmpsl
rorl
pushf
leave
imul
mov
push
inc
dec
movsl
inc
pop
insl
sub
icebp
outsb
inc
lret
lcall
inc
mov
pop
fists
addr16
movb
out
cli
scas
lds
fldl
sarl
mov
sbb
inc
push
pop
stos
insl
mov
cwtl
test
lods
sti
lcall
out
jge
mov
cwtl
xchg
sub
sbb
mov
mov
aam
sbb
loopne
rcll
jl
or
repnz
sbb
mov
or
sbb
pop
mov
imul
mov
cs
outsb
fdivrl
inc
xor
xchg
xchg
adc
mov
pop
mov
fists
addr16
cmp
sbb
cmp
and
movsb
addr16
cmp
pop
sbb
popa
pop
mov
or
xchg
fwait
pop
pop
mov
loope
push
dec
pop
and
cmp
test
jnp
xor
loop
xchg
dec
sub
mov
outsb
pop
mov
lcall
inc
pusha
movsb
sbb
and
mov
cltd
sbb
jbe
sbb
push
pop
rcll
adc
xchg
scas
xor
outsb
movsl
jp
pusha
jo
sub
sub
mov
insl
jns
shl
push
mov
inc
lods
jo
xchg
push
cmpsb
cmp
xchg
unpckhps
push
pop
sub
pop
repz
cmp
xor
push
jae
outsl
add
sbb
int3
divb
sub
cmp
es
push
adc
jmp
in
add
gs
fdivs
xor
js
dec
cmpsl
rsqrtps
mull
mov
fwait
mov
jb
jp
cmp
imul
ljmp
lods
jae
or
fwait
jge
mov
hlt
icebp
ret
ret
data16
push
mov
iret
sbb
mov
loopne
leave
fsubs
ja
pushf
mov
pop
inc
adc
dec
inc
aaa
cld
pop
sub
imul
fsubs
sarl
mov
mov
mov
jg
jmp
xchg
out
fisttpll
cwtl
rol
mov
stc
mov
jb
add
push
ds
adc
aas
push
xor
or
jmp
loope
test
jge
loope
and
stos
xchg
sub
addl
inc
add
jo
and
xor
jle
loopne
push
push
pop
jmp
adc
pop
sub
adc
mov
xor
lods
sbb
or
or
xchg
mov
bound
and
sahf
stc
xor
pop
mov
sarb
jecxz
pop
push
fsubr
pop
fs
pop
cmp
sarb
inc
cmp
push
mov
push
add
out
shl
mov
cmp
orl
aas
movsb
adc
add
insl
pop
idivl
sbb
into
jbe
dec
in
test
stos
nop
cmpsl
out
cmp
inc
mov
nop
aaa
nop
test
xchg
insb
inc
or
in
stos
mov
js
clc
ljmp
ss
adc
mov
sar
ja
jl
mov
push
push
pop
scas
pop
test
and
fs
stos
push
xchg
jl
in
stc
test
ret
and
aaa
int
out
lods
cmp
mov
test
test
mov
push
das
mov
inc
add
xor
lods
mov
push
popa
cmpsl
insl
sbb
push
icebp
dec
into
aam
sbb
mov
jl
cmp
lds
lcall
dec
data16
add
int3
adc
rcll
jno
adc
addr16
mov
pusha
cmc
mov
loop
rol
push
cli
mov
sub
test
mov
xor
sub
lock
clc
std
aas
test
call
mov
mov
subb
jle
and
mov
aam
and
cmp
jne
lahf
push
pop
repnz
xor
dec
adc
pop
mov
in
adc
jnp
mov
mov
clc
hlt
pop
xor
xchg
jle
and
xchg
fldl
cmc
mov
push
mov
xchg
sbb
popa
popa
lahf
enter
mov
nop
pop
cmc
imul
pop
repz
ret
jne
push
imul
adc
subb
mov
or
or
xchg
movsb
and
add
xchg
sub
sbb
bound
loope
add
pop
sub
mov
xlat
int3
cmp
pushf
xor
scas
out
jl
jge
lret
jecxz
nop
out
jmp
mov
and
xorb
call
add
sar
clc
adc
outsb
add
push
repnz
adc
sub
sub
daa
add
mov
test
call
mov
xchg
cld
adc
sbb
or
mov
dec
movsb
std
xor
popa
dec
out
rorb
imul
or
xchg
adcb
mov
cs
xchg
and
xchg
orl
pop
rcl
das
je
jp
push
push
xorl
inc
repnz
xchg
fs
les
pop
popf
pop
movsl
leave
hlt
imul
dec
movsl
sub
and
push
mov
dec
adc
outsl
push
jnp
rcrb
test
xchg
and
xchg
cltd
inc
and
adc
mov
test
mov
sub
call
sbb
bound
inc
mov
xchg
test
dec
mov
bound
mov
xlat
mov
fcmove
cmp
mov
xchg
jle
hlt
movsb
push
fsts
loop
dec
xchg
or
cmpsl
jp
xchg
mov
hlt
cmpsb
push
mov
add
xchg
js
jne
xchg
ret
push
into
out
xchg
mov
adc
bound
je
mov
push
mov
pusha
push
mov
negb
add
xor
mov
insb
mov
push
stc
mov
gs
icebp
insl
insb
jmp
mov
push
clc
xor
mov
rcr
imul
pop
faddp
enter
push
add
out
inc
lret
add
sub
stc
or
xorl
nop
mov
cmpsb
iret
test
arpl
scas
gs
xor
sub
mov
push
sub
xchg
push
jmp
ljmp
mov
sub
roll
mov
aad
push
fists
pop
repz
sbb
shl
adc
inc
dec
les
dec
mov
jno
push
add
ds
sbb
pop
je
je
xchg
inc
jecxz
push
jmp
test
negb
js
lods
xchg
out
mov
mov
xchg
xchg
inc
ret
pop
xchg
xor
mov
inc
jmp
push
ja
jp
aas
and
push
rorb
das
jecxz
stc
cmc
gs
pop
test
push
int3
dec
xchg
push
jl
pshufw
push
fiaddl
mov
pop
inc
inc
xchg
push
cmp
jge
ljmp
push
mov
pop
push
pushf
cwtl
out
aaa
or
dec
xor
mov
js
xchg
sub
aaa
jno
xchg
loopne
push
movsb
lds
cmpsl
pusha
loop
repz
pushf
or
jo
xor
ja
xor
stos
jecxz,pt
cli
mov
jl
ljmp
into
mov
shrb
ljmp
loope
loopne
imul
pop
insl
mov
loop
fwait
addr16
into
dec
push
imul
xchg
add
filds
inc
lahf
das
and
repnz
jns
shlb
aam
mov
inc
fnsave
out
out
out
push
int3
out
pop
subb
int
adc
jb
pop
inc
aas
not
sub
test
outsb
and
shll
pusha
xlat
cwtl
cmp
add
stos
mov
jns
jnp
push
lret
push
pop
fistpll
cmpsl
push
and
cmp
test
icebp
aad
and
push
icebp
jnp
push
imul
push
mov
fdivs
cmp
lods
out
mov
push
xchg
enter
sub
add
and
jecxz
xor
stc
aas
ret
ret
xlat
inc
lock
pop
xor
sub
mov
jmp
fwait
xchg
xchg
lds
xor
out
push
cmp
xor
bnd
pop
push
xor
out
inc
push
inc
pop
xchg
icebp
lods
cmpsl
push
out
jl
pop
pop
and
mov
cmpsl
fmull
ror
bound
sbb
inc
fistpll
mov
call
inc
xor
stos
adc
pop
fnsave
pop
jle
mov
sbb
mov
jge
mov
mov
xorl
sub
mov
and
mov
and
pushf
inc
test
and
mov
inc
push
push
and
imul
cmc
xchg
out
subl
pop
mov
out
adc
xor
movsl
pop
enter
mov
cmpsl
mov
mov
pop
test
jp
rcrl
mov
fs
push
enter
and
roll
mov
xor
jp
pop
insl
or
mov
mov
cmp
xor
adc
jb
dec
xchg
rcrl
cmp
jge
mov
fmul
lock
push
pop
shrb
add
mov
jp
rorb
inc
fsubs
and
movsl
repnz
out
push
sti
push
mov
mov
jno
dec
and
shrl
lods
push
adc
and
pop
push
and
lcall
ljmp
add
dec
push
push
lock
cmc
jl
and
fchs
icebp
inc
out
pop
imul
mov
loope
ss
push
sbb
and
jge
shrb
int
jp
daa
pop
in
outsb
loopne
sub
or
aas
sub
in
paddsw
inc
mov
or
stc
pop
test
mov
into
shlb
fldenv
xchg
sub
push
push
aaa
cbtw
or
cwtl
movsb
dec
testl
mov
push
lret
or
add
pop
xor
xchg
andl
lret
cmp
movsb
mov
lret
pushf
mov
sbb
outsl
jecxz
jne
xchg
arpl
or
inc
jg
ljmp
cmpsb
rcl
jmp
mov
cmp
mov
loop
sbb
aam
into
lahf
push
fistpl
jge
cmp
js
cmp
or
out
fistpll
aad
push
cmp
adc
aad
push
jle
sbb
push
xchg
mov
stc
inc
out
or
xor
xor
sub
fstpt
in
mov
or
cmp
fnstenv
jge
test
cmpsb
xchg
lea
out
andl
stos
push
in
mov
push
adc
xchg
cmp
ret
scas
aam
aas
lcall
dec
je
jmp
or
fnstcw
aad
aas
jp
loopne
or
cld
mov
movsl
sub
inc
sub
popa
and
fstpt
int
mov
cmp
cmp
sti
jb
mov
pop
fs
fidivs
sbb
repnz
sub
cmpb
pop
xlat
lock
lcall
aaa
std
xor
in
mov
xlat
push
jae
xor
aam
daa
cmc
or
cld
fdivs
test
dec
lret
cmp
test
pop
adc
mov
cli
pusha
cltd
out
insb
sbb
push
es
dec
mov
int
lahf
mov
add
aas
jl
adc
pusha
test
mov
inc
and
mov
andl
lret
sbb
enter
outsl
js
movl
fsts
ret
shlb
fldt
fdivs
nop
scas
push
xchg
mov
lret
frstor
pop
gs
xor
aam
push
outsb
inc
loopne
or
rorb
sbb
out
dec
xchg
clc
adc
jb
rcr
insb
lods
les
pop
xchg
jo
mov
cmc
out
aam
pop
adc
sbbl
int
push
sbb
or
sub
dec
cmp
push
fnsave
pushf
popa
jmp
xchg
fcoms
push
pop
push
push
inc
scas
je
inc
in
pop
mov
xchg
mov
or
cmp
adc
arpl
adc
js
loop
and
imul
xor
fildl
sub
xor
lods
mov
mov
mulb
fstps
mov
mov
pop
outsl
cwtl
das
mov
out
call
cmp
pop
jae
in
xchg
xor
sub
jno
ret
sbb
stos
push
les
cmp
subb
xorb
and
push
addr16
pop
mov
pop
movsb
dec
mov
push
or
cmp
mov
pop
repz
mov
pop
mov
xlat
xchg
and
inc
cmpsb
sbb
stc
test
lret
push
lcall
enter
addr16
in
ja
je
adc
push
bound
dec
and
cmp
cmp
out
lret
lods
and
lds
xor
loop
int3
ds
iret
jmp
sbb
sub
adc
mov
mov
add
fimull
loop
rorl
add
outsb
and
cmc
loop
add
loope
mov
ror
mov
jge
hlt
loop
cmpsl
aam
dec
ds
lds
imul
mov
add
pop
in
sahf
pop
enter
test
rolb
je
xor
sub
push
pop
stos
out
mov
aam
repz
adc
inc
mov
add
aaa
add
lret
cmc
or
jmp
scas
scas
scas
orl
jl
and
mov
xor
xor
nop
inc
mov
fidivl
jo
xchg
jp
test
subb
adc
js
or
jns
shl
sti
jge
inc
push
testb
outsb
shl
mov
outsl
in
imul
inc
fmuls
aas
add
mov
imul
fwait
lcall
hlt
jbe
sub
aas
adcl
xor
xchg
mov
insb
xchg
cmp
adc
data16
fdivl
testl
stos
cld
add
jb
lcall
int
ret
pop
sub
addr16
lahf
sbb
pop
or
inc
or
mov
and
in
hlt
shlb
fwait
mov
or
fisubl
xorb
mov
fdivp
jne
pop
idiv
std
loop
jns
pushl
imul
fisubs
ss
lcall
ljmp
jmp
divb
sub
xor
inc
cmp
jge
inc
sub
aaa
pusha
xor
in
hlt
fsubl
adc
and
mov
loopne
mov
sahf
jnp
lcall
mov
movl
or
push
icebp
orl
xchg
insb
xchg
xor
xlat
and
loop
ss
divb
das
jg
cmp
add
and
and
and
mov
adc
pop
mov
fldenv
das
cmp
flds
push
dec
add
push
insb
inc
mov
repnz
pop
aam
pop
repnz
ds
lock
fcomip
mov
notb
push
sahf
aam
in
lahf
jne
and
xorb
popa
add
aas
sahf
pop
push
lods
push
jg
cli
lahf
or
add
outsb
fiaddl
imul
sahf
mov
test
push
sub
push
dec
mov
outsl
ds
jno
or
roll
push
aas
insl
bnd
xchg
jbe
jb
jge
addr16
das
adc
dec
xchg
add
mov
mov
in
pop
addb
les
xor
cwtl
lods
mov
xor
aam
xor
push
mov
sub
jl
in
arpl
cld
mov
lret
mov
roll
cmp
mov
mov
adc
fadd
subb
jp
lahf
leave
stos
lahf
cmp
mov
add
and
dec
inc
sti
cmp
sbb
push
out
popa
psubsw
jg
xchg
pop
leave
mov
dec
jl
jl
ja
push
jg
loop
add
shrb
cmp
jmp
out
inc
mov
jl
dec
sub
pop
xor
incl
dec
int3
add
out
xchg
and
shlb
leave
movsl
movsl
push
sub
loopne
adc
sub
fs
mov
insb
lock
mov
cs
das
lock
add
fistpll
inc
add
roll
add
cmp
or
sbb
mov
std
arpl
in
xchg
jbe
mov
xlat
je
lods
inc
cs
lea
jle
mov
cmp
and
pop
aad
xor
sbb
ror
add
dec
sbbb
xor
add
ret
pop
xchg
push
or
pusha
fsubrs
push
lea
pop
ds
pop
dec
dec
aam
add
pusha
pop
or
nop
movsb
je
out
push
cmp
push
mov
mov
aam
das
arpl
in
fs
test
out
in
mov
adc
jae
fists
sbb
in
repnz
mov
mov
imul
movsb
aaa
push
dec
mov
mov
in
mov
cmpsb
cli
push
jecxz
pusha
subl
clc
repz
popa
and
in
stos
dec
test
ds
inc
push
mov
lea
fbld
mov
or
xor
insb
jnp
icebp
paddd
pop
pop
dec
add
andb
fdivl
mov
add
nop
movsl
pop
sub
or
imul
add
outsb
bound
mov
fsub
jno
sbb
jmp
cmc
test
xchg
int3
test
orb
pop
pop
pusha
in
test
decb
and
sbbl
mov
test
xor
inc
inc
clc
inc
ljmp
ret
pop
mov
cmp
xchg
mov
pop
subb
push
mov
push
add
push
xcrypt-cfb
cmpsl
sub
push
js
test
push
dec
jo
jno
mov
mov
daa
cli
in
insb
cmpsl
arpl
or
outsl
data16
dec
in
stos
sbb
sub
dec
shrb
popf
inc
dec
loopne
sub
in
inc
stos
aaa
fmull
inc
in
aam
lock
push
test
test
test
in
mov
jl
fildl
scas
add
add
imul
dec
dec
add
xor
inc
fwait
out
inc
sti
int
lds
in
adc
hlt
dec
or
sbb
insl
add
add
lds
rorl
fisubrs
add
int3
shll
sbb
pusha
data16
in
in
or
popa
test
mov
dec
test
ficoml
mov
addr16
leave
ss
sbb
nop
mov
arpl
fldcw
and
popf
jmp
push
push
or
inc
add
inc
call
push
popa
mov
sub
xlat
or
push
inc
or
push
or
popf
push
movsl
ss
or
mov
je
jmp
mov
dec
insl
ss
lods
cmp
add
push
push
lcall
int
mov
ja
jp
shlb
sbb
sub
subb
fistpl
add
jle
jb
icebp
rcr
sbb
out
and
or
mov
lret
das
dec
xchg
and
push
or
aad
fwait
jb
sub
push
daa
adc
push
leave
adc
sub
enter
jmp
cs
and
pop
cwtl
aad
add
fcoms
lret
lds
dec
rcll
rclb
insb
xor
mov
js
int3
scas
dec
lcall
aaa
or
jne
gs
rclb
cmc
pop
sub
push
decl
mov
clc
jo
cmp
xchg
xchg
sbb
mov
cmp
pop
fs
mov
push
int3
ja
js
sbb
stc
dec
je
cmp
dec
ja
dec
mov
stos
in
xchg
push
sub
xchg
adc
cmp
dec
mov
mov
clc
popf
dec
push
fcmovb
mov
test
fdivrs
test
lret
aam
cmpb
xchg
imul
subl
insl
add
and
shrb
subb
xchg
sbb
fisttps
cmp
mov
aad
push
std
stos
xchg
pop
jbe
or
test
shll
or
jnp
sbb
loop
test
rolb
push
ret
push
addr16
stc
loop
pop
std
push
inc
pop
push
jb
shlb
xor
jb
xchg
imul
sahf
pop
mov
push
push
mov
adcl
jb
xor
xchg
push
cmpsl
and
pop
push
xchg
cmc
adc
jecxz
and
movsl
test
push
cmp
xor
mov
mov
ss
out
in
jno
push
outsl
sub
inc
movsb
push
outsl
mov
cmp
int
pop
push
insb
imul
test
push
or
or
or
js
jg
jbe
jg
sub
loope
imul
fcoms
inc
and
loope
mov
les
cmc
stos
adc
push
sbb
cmp
adc
xchg
mov
sti
jmp
mov
inc
test
add
gs
push
xchg
or
iret
jl
out
ja
add
mov
or
cmpsl
xlat
mov
sbb
xchg
decb
pop
dec
cmc
cmpsb
out
and
mov
cltd
pop
in
daa
cmp
stos
inc
pop
lock
ret
dec
cmp
movsb
cs
push
notl
sbb
rcrb
bound
sahf
fcmovne
in
cs
hlt
adc
cmp
js
test
test
fxch
xchg
aaa
sti
sub
or
dec
int
jne
popa
xchg
insb
sahf
jge
fcmovnbe
xorb
fidivrl
and
bound
mov
xchg
xlat
ret
out
jbe
icebp
jne
and
es
movsl
std
inc
js
ss
or
pop
mov
mov
rep
adc
std
mov
mov
stos
pop
mov
stos
iret
ret
shl
iret
stc
push
jnp
xchg
jl
xchg
scas
jne
or
pop
push
rcl
jnp
or
jle
dec
shl
outsl
lds
and
push
int
in
cmovle
xor
cmp
lods
jo
jnp
xchg
into
mov
repz
adc
push
cltd
xor
ljmp
xor
cs
sbb
imul
sub
inc
push
and
lret
push
cmp
mov
sub
lods
cmp
dec
bound
imul
push
int3
into
lock
add
cwtl
sbb
sub
lcall
xchg
aad
ret
aam
int
outsb
leave
pop
lea
out
jo
call
pushf
xor
jg
fcmovnbe
mov
inc
mov
xchg
xor
mov
or
icebp
cs
icebp
les
mov
jle
hlt
pop
push
xchg
icebp
inc
jbe
mov
out
fs
in
xchg
pop
cwtl
cli
aam
mov
push
rcll
fs
dec
add
jae
mov
js
out
xchg
es
incl
repz
xor
sahf
mov
push
ret
movsb
out
mov
aam
mov
and
and
roll
and
push
div
xchg
lock
testb
xchg
push
push
lcall
ficompl
lock
mov
das
data16
lock
jns
mov
push
cltd
adc
bound
sbb
xchg
testl
pop
pop
pop
dec
adcl
lock
sub
shll
cmp
jae
hlt
dec
adc
sbb
push
fdivs
inc
jo
adc
out
sub
jmp
mov
cmp
rcl
insb
insb
and
ljmp
mov
jo
xchg
adc
lcall
inc
xlat
inc
sub
imul
or
loopne
aas
outsl
out
push
mov
jae
mov
ds
push
inc
mov
sub
cmp
xchg
adc
repnz
xchg
das
lahf
or
or
rcr
sub
test
lret
outsb
lahf
jge
and
cmc
stos
mov
inc
out
and
data16
ret
into
shlb
xchg
jae
shlb
jo
push
adc
popa
sub
mov
pushf
jbe
movsl
xchg
lods
pusha
inc
repz
push
xchg
xchg
xor
add
and
in
push
sti
push
sub
aam
out
mov
dec
jle
lcall
pop
sbb
pushf
imul
or
mov
xchg
movsb
dec
cmp
pop
add
xchg
push
dec
jmp
push
mov
sti
lret
mov
ja
lods
lcall
push
xchg
xchg
push
ljmp
jmp
pop
std
sti
or
adc
cmp
aad
aaa
pop
inc
nop
divb
push
inc
and
pop
pop
and
out
push
neg
ret
xchg
jbe
push
mov
lret
jg
mov
mov
push
push
jp
push
in
out
mov
insl
xlat
add
pop
orb
lret
fistl
jle
sbb
nop
stos
fsubrp
repnz
jp
sbb
fwait
dec
cmpsb
es
lds
jmp
xchg
mov
add
push
fcompl
sub
cmp
pop
dec
cs
xlat
push
test
or
mov
dec
dec
sub
xlat
ret
pop
xchg
gs
call
lret
dec
pop
sub
pop
test
lret
mov
push
lahf
xor
gs
pop
inc
pop
sub
gs
rcll
insl
stos
sbb
push
sbb
cmp
and
cld
fsts
ret
jnp
insl
jnp
jo
lock
pop
mov
jo
pop
push
leave
rcrl
jmp
shll
xor
adc
cmp
jmp
sub
je
cmp
jle
add
push
leave
shr
lcall
push
enter
lahf
test
lahf
sbb
mov
inc
dec
ljmp
xchg
lods
jae
inc
repnz
mov
jae
cmpsl
addb
data16
sub
xorl
mov
add
mov
out
adc
cli
xor
test
and
lret
push
ja
fwait
pushf
sbb
mov
pop
xor
cmp
pop
fcomi
sub
in
mov
dec
mov
sbb
data16
jnp,pt
sbb
mov
cmp
or
mov
xchg
cmp
cmovns
lock
aad
fsubr
mov
inc
pop
addb
xchg
jnp
adc
lcall
mov
push
jp
out
dec
rcll
pop
inc
lods
sti
xchg
shlb
pop
pop
pop
fsub
xchg
adc
loopne
jbe
inc
scas
aam
adc
loope
stos
or
xorl
push
adc
rol
inc
lret
xchg
fistl
out
add
in
stos
and
iret
and
jne
dec
mov
pop
sbb
out
faddp
push
cmp
sub
ljmp
xchg
jns
and
in
pop
orl
mov
aad
fisubl
add
push
inc
mov
push
ja
vpmaxsw
adc
cmc
shlb
mov
or
jns
mov
or
add
sbb
aam
icebp
dec
lock
push
leave
sarl
lods
mov
movsl
outsl
pop
imul
dec
cmp
dec
xor
lret
fnstcw
push
add
daa
sbb
push
ljmp
or
test
add
mov
push
xlat
shrb
lods
movsl
or
xchg
ja
out
loope
jae
xor
imul
inc
aaa
ret
or
jne
mov
int3
xchg
jne
lods
sub
pop
roll
add
lcall
sub
add
push
outsl
xlat
dec
inc
sub
mov
lock
jl
in
shrb
roll
popa
inc
daa
jnp
jnp
jle
pop
shrb
stos
xchg
mov
xchg
cltd
mov
daa
mov
fldcw
jmp
js
or
in
lods
pop
mov
adc
pop
stc
add
fs
mov
mov
push
mov
in
and
in
push
sbb
add
outsl
push
dec
orl
jge
imul
insl
xor
or
or
test
cmovs
out
adc
adc
push
in
add
or
or
data16
lods
cmc
mov
gs
test
scas
xchg
or
arpl
xor
je
jns
pop
jne
lds
mov
xor
std
ret
cmp
scas
add
jo
repnz
push
movsb
or
and
fsub
mov
movsl
xor
aad
sub
insb
cmc
dec
mov
adc
mov
jae
xchg
inc
imul
pop
call
in
popa
rolb
push
enter
sub
push
push
movsb
mov
mov
pop
cwtl
fnstenv
aam
or
xchg
pusha
jae
jbe
fisubrs
movsl
xchg
xchg
xchg
sub
pop
add
je
xchg
inc
shrb
dec
outsl
sub
push
loope
int3
inc
repnz
insl
sarb
stc
aam
push
and
jmp
add
mov
adcb
cmp
push
jbe
andps
out
pop
jno
mov
push
push
jne
adc
mov
imul
adc
and
jg
das
pop
inc
jae
out
sub
inc
cmp
or
pop
test
push
pop
adc
in
jg
cwtl
ret
pop
shll
adc
jns
pushf
jo
dec
mov
sbb
or
fisubs
movsl
or
jle
dec
inc
jle
add
addr16
lcall
cmp
sub
test
shrb
daa
bound
sti
outsl
or
ret
loope
adc
jle
or
sub
jnp
mov
xchg
lahf
movb
daa
push
mov
push
cmpsb
stc
faddl
mov
inc
lret
mov
pop
cld
daa
repnz
jb
add
addr16
pop
fbld
xor
sub
outsl
orl
rol
mov
das
leave
pop
inc
push
mov
pop
int
dec
sti
outsl
pop
jecxz
adc
pop
sbb
ljmp
mov
shll
xchg
or
cmp
ror
sbb
mov
imul
inc
mov
mov
mov
fwait
pop
jns
or
sahf
push
push
test
ret
dec
mov
shl
xor
out
add
mov
and
mov
rcl
sub
in
mov
push
jmp
mov
mov
jge
out
cmp
popf
std
movsb
dec
or
push
test
rcll
adc
pop
or
mov
test
inc
jle
pushf
ret
mov
in
push
adc
cmpsb
rcll
add
dec
fcom
mov
xlat
in
int
aaa
jnp
inc
sub
push
stc
jecxz
je
jnp
es
cmc
adcb
int
jno
push
pop
cmpsb
test
sarl
push
mov
dec
imul
sarl
dec
push
icebp
movsb
push
movsl
fldenv
jp
sbb
pushf
inc
aad
cmp
adc
push
add
ret
inc
sti
pop
lea
xor
pusha
jnp
or
outsl
popf
bound
lret
movups
mov
mov
cmp
push
lock
jmp
popf
movsb
sahf
xchg
stos
and
jo
iret
shrl
xchg
push
xchg
and
sub
cmpsl
or
sub
dec
jae
sub
pop
ret
sub
mov
aas
fisubrl
jno
xchg
dec
push
rcrl
lret
jmp
jnp
mov
stos
iret
fdivl
and
push
cmp
enter
jmp
mov
repnz
dec
daa
and
js
aam
hlt
pop
mov
mov
xchg
stos
into
test
cli
test
sti
and
hlt
mov
and
xchg
jl
imul
test
jge
adc
outsb
enter
pop
jge
aaa
pop
imul
cmp
test
lds
dec
push
imul
rcrl
neg
mov
addb
push
push
test
in
xor
loopne
inc
mov
sbbb
rcll
mov
adc
sbb
movsl
mov
cmpsb
in
lock
push
lds
jns
xchg
popa
xchg
repnz
adc
cmpsl
sub
aaa
dec
cs
jne
cmpsl
loope
jne
push
mov
jns
lock
in
add
stc
pop
aas
and
mov
addb
push
cld
xchg
daa
fwait
adc
mov
gs
bound
mov
std
popa
loop
movb
test
xor
int3
push
and
sahf
pop
negb
fildll
ret
stos
out
pushf
das
insl
push
mov
xchg
push
aas
dec
test
mov
dec
jl
mov
fwait
mov
iret
into
psllw
adc
sarl
and
push
fwait
pop
inc
xor
outsb
mov
or
and
enter
mov
mov
jg
pop
jl
out
mov
popf
arpl
insl
cmp
push
push
popa
xor
or
popl
inc
xchg
lds
ficompl
int3
add
ret
ret
pop
lret
test
xor
fs
lahf
and
sub
mov
mov
hlt
push
sbb
aaa
mov
xchg
push
xchg
adc
inc
xchg
mov
mov
jp
mov
out
pop
add
insl
mov
jne
push
and
mov
xchg
jecxz
adc
lret
xchg
test
mov
and
loop
fnsave
dec
push
xchg
or
in
sbbl
in
sbb
rorb
xor
fiaddl
out
sub
cmpsl
push
jmp
pop
movsl
out
jmp
jae
subl
xor
mov
out
int
pop
mov
push
je
movsb
or
or
jo
paddusw
ljmp
mov
mov
incb
fsubrs
push
xor
inc
dec
sub
mov
popf
xchg
add
mov
adc
mov
adc
and
push
mov
xor
aad
mov
mov
sbb
cmp
scas
push
out
fnstsw
scas
ret
mov
sbb
or
mov
inc
sbb
pop
xchg
lods
cmp
mov
out
decb
mov
cmp
stc
fldl
xor
movsb
mov
or
xor
xchg
sub
sti
xchg
sti
mov
or
insl
lods
orl
and
push
jae
insb
adc
mov
xchg
and
add
sarl
fs
xchg
mov
dec
mov
in
or
xor
pop
mul
test
daa
stos
push
xor
bound
inc
dec
and
lds
lea
jg
inc
addr16
int
outsl
in
mov
mov
push
lahf
and
cmpsl
sbb
lcall
scas
mov
insl
test
jge
clc
fwait
shlb
pop
faddl
mov
xor
add
or
ljmp
call
xchg
call
mov
add
daa
pop
sbb
dec
pop
scas
cs
das
inc
mov
and
mov
add
push
out
mov
mov
stc
scas
icebp
xor
loope
adc
cli
pusha
mov
cmp
cli
adcl
or
dec
enter
lcall
leave
fildl
je
iret
pop
or
push
data16
cli
xchg
pop
inc
jp
ja
inc
jno
imul
and
inc
mov
lret
enter
or
mov
mov
lods
sbb
iret
idivb
cmp
mov
mov
cltd
adc
ret
push
push
and
mov
jae
mov
repnz
mov
mov
pop
and
subb
pop
push
call
sbb
stos
push
mov
pop
push
xchg
mov
mov
in
subb
mov
out
mov
xor
mov
fwait
sbb
mov
push
adcb
dec
pop
addl
jne
pop
in
or
in
mov
mov
fnstsw
xchg
add
repz
jle
in
push
pop
or
pop
inc
mov
lcall
mov
jae
frstor
out
cmp
inc
pop
jecxz
adc
int3
inc
add
sub
cmp
mov
push
mov
xchg
ss
inc
pop
stos
jecxz
test
es
imul
outsb
push
cmp
jl
leave
pop
lcall
aam
std
xor
test
mov
cltd
cmpsl
loope
mov
js
les
fwait
cmpsb
in
dec
add
pop
gs
out
adc
jmp
fisttpll
pop
lret
jb
mov
xchg
in
inc
mov
mov
sbb
lods
div
in
jne
cltd
repnz
loop
xor
mov
lea
pop
push
mov
adc
cmp
aas
js
in
inc
push
jbe
movsb
fildl
mov
hlt
lds
scas
out
addb
orl
sub
mov
mov
enter
cli
adc
flds
inc
out
jo
and
mov
cmp
jecxz
adc
add
xor
gs
rclb
mov
retw
icebp
mov
jg
icebp
sbb
and
clc
std
popa
stc
mov
imul
nop
gs
shll
inc
jg
xchg
or
mov
adc
ljmp
leave
pop
stos
lahf
das
cmp
jl
xchg
daa
lahf
clc
prefetchnta
mov
in
mov
sti
push
pop
add
pop
and
adc
mov
jnp
out
hlt
mov
idivb
or
subl
popa
fwait
cmp
lahf
mov
lods
fwait
fwait
in
jo
or
adc
xor
shr
test
cli
xor
movsb
pushl
pop
sub
mov
lods
insb
dec
add
sub
popf
rcl
insl
cli
pop
cmp
aaa
jl
stc
cmp
bound
dec
ljmp
pop
rep
subl
iret
sub
cld
lds
lret
or
icebp
push
lds
lcall
ret
pop
or
sbb
ret
loop
aas
lret
xor
daa
insb
imul
xor
shl
and
pushf
jae
dec
xor
cmc
adc
push
fcoml
pop
push
repz
sub
fwait
xor
inc
lahf
dec
mov
pop
mov
fucom
jge
adc
and
loope
mov
out
test
call
pop
mov
sbb
pop
outsb
inc
or
push
movsb
push
mov
fisubrl
inc
sub
add
bound
fstpl
imul
jle
outsb
es
fnsave
jp
cli
sahf
mov
jge
in
cltd
mov
out
push
pop
push
sub
cmpsb
inc
sbbl
ljmp
gs
popf
inc
jle
xchg
xchg
hlt
arpl
inc
sub
ljmp
scas
inc
popa
jle
push
mov
stc
loope
sar
jns
repz
jle
mov
scas
push
sahf
push
push
jge
inc
pop
ss
jmp
push
ja
mov
roll
popf
mov
xlat
adc
pusha
pop
and
sub
fdivrl
int3
daa
out
popa
imul
cmc
push
mov
add
loope
xor
fildll
sub
mov
jmp
popa
add
lea
add
jo
mov
in
mov
mov
inc
das
in
push
mov
push
ret
insl
cltd
in
mov
dec
pop
insb
sbb
jge
push
mov
notl
cmpl
dec
mov
repnz
movq
ficoms
inc
add
sbb
dec
ret
mov
repz
cmp
sbb
and
xchg
jp
jg
int
pop
pushf
shrl
lcall
imul
pop
imul
loope
cmp
les
hlt
negb
push
pop
daa
in
repnz
in
mov
mov
push
add
jb
movsb
inc
jb
into
out
pop
xchg
mov
pop
adc
in
adc
mov
jno
xchg
add
int
hlt
jg
cmpsl
sub
ss
push
xor
add
loope
mov
or
mov
add
and
xchg
jmp
jae
rclb
out
dec
xchg
iret
fs
shrb
cs
cmpl
nop
loopne
scas
stos
popa
cli
jo
les
shlb
cmp
sub
xchg
push
repnz
xor
daa
add
cmc
sub
or
and
pushl
lahf
fstps
leave
scas
into
mov
cltd
pop
in
cltd
sub
daa
out
jge
mov
cmp
test
mov
in
push
scas
clc
arpl
fisubl
add
imul
jno
add
mov
sub
push
mov
ret
jnp
xor
or
cmpsl
movsb
test
or
mov
movsl
ljmp
push
fisttpl
ja
addr16
lds
mov
call
xchg
out
xlat
aaa
icebp
imul
jl
rorb
or
pop
cld
and
cmpsl
aas
adc
lods
add
mov
out
push
insb
sbb
add
cmc
mov
cmp
cmp
mov
bound
out
mov
mov
push
jg
mov
das
js
jne
or
imul
loop
int
jge
mov
and
push
inc
xor
sbb
out
repz
mov
fnstsw
push
or
dec
ret
push
fcmovb
dec
inc
rorb
add
lods
jns
movsl
mov
mov
aaa
test
add
rol
movsl
mov
and
dec
call
sbb
shll
add
jne
test
mov
sub
adc
sbb
xchg
pop
addr16
mov
sbb
inc
ror
rol
inc
int3
loope
jno
cmpsb
jns
dec
iret
dec
in
xor
lock
lods
xchg
dec
scas
xorb
repnz
pop
les
test
sub
cmp
repnz
cmp
cmc
pop
push
imul
mov
push
ljmp
jne
push
ljmp
push
in
mov
outsl
xchg
into
add
stos
mov
cmpsl
mov
sbb
les
xchg
push
mov
js
xlat
mov
fmuls
out
or
cmp
xchg
idivb
out
aad
add
es
lcall
mov
outsb
add
dec
mov
test
pop
inc
fstl
or
inc
loop
fwait
mov
movsb
inc
inc
arpl
xchg
shlb
mov
inc
dec
daa
cli
mov
sub
adc
daa
mov
mov
in
and
rcrb
inc
xor
iret
orb
or
stos
fwait
or
sub
sub
and
push
mov
mov
mov
pop
idivl
pop
cmpsb
inc
lret
cmp
and
fucomp
pushf
mov
add
push
in
notl
dec
pop
imul
xchg
aas
mov
inc
insb
fidivl
ret
das
aad
sbb
fimuls
popf
xchg
sbb
xchg
add
mov
pop
int
stos
inc
add
fcomi
fst
adc
jnp
scas
imul
js
jp
inc
dec
jne
mov
leave
adc
cmp
vmread
into
and
mov
push
rorb
pop
lret
mov
push
insl
insl
mov
adc
dec
rolb
and
aam
pop
js
xor
aas
bound
pop
mov
mov
clc
push
sub
ret
adc
xchg
cmp
pop
filds
and
push
mov
mov
mov
mov
pop
jb
and
cs
cwtl
push
loop
push
hlt
and
inc
loopne
in
pop
outsl
xchg
fcmovbe
cmpb
ret
loopne
add
icebp
into
dec
adc
sbb
shlb
lods
imul
js
xorb
sti
adc
hlt
rolb
fimuls
jbe
xchg
add
sub
pop
or
mov
add
push
int
outsl
test
pop
push
enter
cmpsb
out
dec
jge
push
adc
adc
cmpl
xchg
in
outsb
add
add
push
and
movsl
xlat
dec
in
sub
rcll
rcrl
xchg
lret
dec
adc
dec
pop
add
out
inc
and
mov
fiaddl
jp
sub
cmpsl
popa
add
loop
pop
sub
pop
enter
mov
inc
push
lret
popa
divl
mov
imull
push
int
pop
test
mov
inc
pop
push
out
jae
mov
xchg
xor
mov
jl
ret
push
inc
push
mov
fwait
lret
and
mov
js
add
or
fstps
addr16
pusha
fs
dec
add
pop
jb
mov
testb
add
popa
sti
pushf
and
pusha
stos
pop
add
sub
dec
add
cmc
into
push
sbb
iret
imul
mov
sbb
out
mov
je
xor
mov
jp
aas
mov
pusha
lods
push
fwait
inc
orb
movsb
push
jg
xchg
push
sub
iret
mov
jno
enter
jmp
pushf
aad
and
cmpsb
push
aad
lret
mov
leave
xor
jl
decl
fs
push
imul
out
sub
push
std
xor
imul
or
jnp
sti
pop
fbstp
mov
sub
xchg
out
push
dec
cltd
and
adc
int
and
adc
pop
cmp
ss
push
or
rcrb
mov
xlat
ret
enter
pop
int
add
stos
jnp
int3
add
mov
mov
fs
test
shrl
subb
mov
and
lock
popf
sbb
stos
push
sahf
pop
stc
sub
pop
push
push
insl
xchg
cmpsb
sahf
pop
lods
fldt
jecxz
cli
xor
aas
mov
mov
ficompl
maxps
fs
fucomip
nop
lahf
jne
popl
test
cmp
xor
dec
les
gs
add
lahf
or
and
mov
dec
or
rcll
jecxz
push
addl
jecxz
adc
rcrb
aaa
cld
push
push
mov
inc
push
jmp
push
cmc
insb
dec
enter
gs
cmpsl
mov
in
test
test
mov
xor
je
xlat
faddl
aaa
xor
pop
loope
nop
and
sub
imul
es
int
scas
shll
mov
push
addr16
in
das
jle
ljmp
bound
jae
shl
xchg
cli
and
arpl
aas
xchg
sbb
or
pop
scas
in
ret
popa
adc
push
pop
fadds
shl
frstor
lret
outsl
mov
cmc
dec
lahf
lahf
stos
sbb
pop
cmp
xlat
add
mov
jge
jb
jns
xchg
pop
or
jb
lcall
mov
dec
sub
adc
mov
dec
in
mov
cmpsb
fs
xchg
jne
sbb
addr16
fcoml
mov
xchg
pop
repz
out
jge
scas
xor
add
push
pop
pop
ss
cmpsl
jne
jp
outsb
push
test
lock
pop
cs
add
push
int
mov
adc
jo
std
sbb
test
mov
adc
pop
aam
pop
adc
push
push
xlat
sahf
scas
pop
iret
fdivrl
loope
pop
mov
imul
mov
push
xchg
sbb
xchg
shrb
jns
pop
leave
inc
push
fsubrl
lret
les
out
cs
jmp
in
lods
int
mov
xor
push
movsb
int3
insb
cmc
lea
jp
das
pop
sbb
call
mov
and
push
notl
inc
push
sbb
inc
or
mov
mov
js
aam
sub
pop
sti
in
fwait
xchg
rcrb
sub
xchg
rorb
shrl
mov
je
jl
scas
outsl
and
push
jbe
fdivr
scas
insl
sbbl
mov
stc
sub
lret
jno
pushf
fisubl
sub
scas
es
rorb
lock
sub
sbb
sbb
cwtl
inc
mov
push
fisubl
adc
mov
stos
jmp
dec
or
lods
or
and
movsb
fsubl
adc
movsb
mov
and
mov
les
push
push
mov
sbbl
inc
inc
add
insb
push
xchg
lock
pop
mov
arpl
mov
nop
jne
cmp
mov
sub
push
imul
mov
mov
test
xor
cmpsb
outsl
in
orl
sub
sub
or
push
addl
mov
test
jecxz
adc
pusha
mov
insl
push
sub
std
mov
add
dec
add
pop
and
sti
mov
repnz
aam
iret
in
mov
mov
fldln2
ja
repnz
cmp
mov
test
dec
pushf
jo
mov
bound
lcall
mov
rclb
add
jmp
cltd
cmp
dec
cmp
xor
insb
add
lea
or
ss
jne
hlt
xchg
push
add
in
push
test
cmc
insb
and
xor
xchg
mov
call
cli
rep
lock
enter
inc
les
std
mov
push
fcoms
jns
js
pop
sbb
and
jecxz
add
inc
mov
xor
dec
rclb
and
clc
xorl
adc
daa
push
mov
cmp
jp
orl
lock
fbld
rclb
and
ja
xchg
mov
jl
cmc
fldcw
and
inc
mov
ljmp
mov
cmp
fimull
mov
cmp
cmpsl
mov
ljmp
sbb
jbe
sub
push
in
mov
sub
pop
shlb
jnp
sbb
stc
sub
inc
adc
test
jge
jmp
pop
push
push
aas
xchg
mov
push
mov
mov
cmp
pop
add
pop
fcoml
insb
mov
jge
dec
in
sbb
fucom
scas
xchg
mov
movsb
stos
lcall
dec
dec
aaa
inc
int3
xor
xchg
shlb
imul
add
pop
jo
and
loopne
int3
popf
icebp
movsb
mov
push
rcll
test
xlat
mov
xchg
in
inc
into
lods
rolb
loop
pop
popf
dec
fwait
xchg
adc
int
push
adc
mov
lods
shl
out
mov
lods
xor
cmp
sarb
jo
hlt
loope
add
xchg
jae
and
xlat
jle
stos
stos
cmc
xchg
daa
push
sub
add
sub
mov
sbb
sub
repz
mov
mov
push
fdivl
sahf
insb
push
sub
imul
ja
mov
leave
bound
test
int3
push
imul
js
repnz
add
pusha
cld
cli
pop
aaa
push
add
pop
data16
sbb
ret
adc
pop
insl
scas
inc
enter
popa
js
jns
and
fs
clc
repz
inc
test
sti
pop
inc
je
mov
ficomps
pop
pusha
cmp
stos
inc
fcmovbe
lock
leave
stos
lods
jb
stc
je
inc
inc
iret
imul
push
and
and
xchg
outsl
sub
ds
pop
mov
push
fsts
aaa
pop
outsl
hlt
lds
sbb
fmul
sub
sahf
lds
jmp
cmp
mov
test
or
adc
push
mov
push
sbb
mov
dec
mov
xor
sbb
out
sbb
pop
test
test
push
ds
fs
inc
lahf
lahf
sbb
and
inc
sar
shll
adc
lret
mov
les
push
lods
mov
adc
sbb
and
daa
bound
dec
lock
jmp
jo
push
xchg
sbb
cmovno
and
frstor
sti
outsl
int
adc
add
xchg
outsb
mov
jbe
push
and
das
insb
xchg
shll
int3
rcrb
sbb
mov
xor
xchg
xchg
imul
gs
test
sbb
jmp
dec
mov
fwait
pop
nop
dec
sub
lods
and
es
xchg
push
jae
or
jp
sbb
dec
sub
or
cwtl
xor
mov
jno
es
push
adc
sbb
adc
scas
outsb
loope
adc
push
jns
add
pop
dec
sub
mov
and
out
mov
add
sbb
and
aaa
mov
sbb
mov
leave
jne
inc
inc
fadds
xchg
sbb
enter
data16
mov
cli
icebp
add
or
lds
mov
test
add
push
es
or
jns
insb
call
or
lods
sbb
lret
lret
pop
jns
rolb
std
outsl
mov
inc
pop
mov
iret
cwtl
pop
and
movsl
fcoms
jmp
cmp
inc
jo
sti
fildl
xor
xor
pusha
xor
push
or
insl
xor
pop
imul
sub
ds
jg
std
lds
cmpsl
loope
fwait
adc
imul
lods
dec
adc
arpl
xor
xorb
cltd
sub
sbb
fstl
ds
sub
mov
and
out
pop
scas
loop
mov
add
popa
or
adc
or
pop
pop
fdivp
adc
cmp
mov
repz
dec
fbld
fdivl
mov
add
inc
add
sbb
out
dec
fnstcw
and
and
repz
mov
test
aad
mov
push
sbb
pop
cli
stos
sub
aam
jmp
adc
dec
out
mov
xchg
subb
xor
lock
test
dec
aaa
mov
pusha
rcrl
mov
mov
ljmp
lods
cld
mull
jno
jl
pop
rcll
or
push
sub
xchg
dec
sub
and
xor
cli
lret
cmp
dec
rorl
mov
mov
lret
inc
js
inc
xor
push
fisubl
aaa
push
mov
mov
andb
xchg
popf
dec
or
push
lods
mov
dec
pop
aad
or
push
pop
ret
push
test
ret
add
popa
adc
test
adc
shl
xor
push
lret
fxtract
ficomps
lahf
addl
adc
ds
mov
lea
insl
fs
mov
sti
outsl
add
adc
and
or
ss
jo
dec
sbb
dec
ret
enter
lret
movl
pop
push
je
test
cld
add
jnp
cld
xchg
scas
adc
iret
xchg
test
mov
jne
sahf
xor
nop
stos
pushl
test
mov
sahf
iret
adc
push
and
adc
aaa
lea
or
lods
scas
inc
int
repz
mov
rcll
mov
adc
incb
sub
or
jl
scas
in
jp
jns
xor
jge
test
sbb
mov
sbb
dec
outsl
int
dec
xor
adc
jo
int3
dec
mov
mov
pop
or
daa
pop
xchg
mov
loopne
aaa
pushf
jl
adc
mov
je
push
cld
push
fcompl
int
mov
jmp
popf
or
push
mov
mov
test
jo
lea
sub
sub
mov
lods
iret
pop
jno
leave
sub
xor
xor
mov
repz
daa
jnp
dec
loop
ret
mov
cmp
mov
dec
add
inc
adc
daa
inc
insl
call
mov
cmp
jns
pop
lret
gs
fs
sbb
push
mov
ss
sahf
jnp
pop
dec
mov
jns
cmp
in
cmc
ss
xchg
mov
push
dec
lret
mov
testl
divb
icebp
xor
or
sbb
unpckhps
push
adc
jge
mov
cmpsb
push
cmpsl
jne
int
test
pusha
and
or
push
or
imul
mov
cmpsb
fisubrs
pop
into
push
test
sub
mov
inc
xchg
xlat
xchg
cmpsl
adc
dec
inc
push
int
sahf
out
aam
mov
cmp
lret
mov
mov
sti
pop
jo
repnz
inc
aas
mov
push
mov
adc
pop
xchg
pop
sub
lods
ds
mov
insb
push
adc
push
lods
mov
nop
adc
sbb
stc
and
scas
mov
sub
cmpsb
iret
aas
pop
adc
inc
cmc
shll
sub
add
in
pop
inc
push
and
jecxz
cmpsl
addr16
cli
out
dec
pop
lds
dec
pusha
and
insb
pushf
out
negb
ja
xchg
outsb
leave
mov
or
in
pop
and
mov
fmull
arpl
cli
push
mov
ds
push
in
roll
cli
insb
into
adc
cs
or
shufps
lcall
adc
push
aam
cmp
push
call
inc
dec
sub
jl
xchg
mull
mov
sbb
je
sti
leave
mov
icebp
inc
push
addl
popf
add
sbb
dec
cmp
cmp
dec
imul
bound
loopne
xchg
push
clc
and
mov
loop
push
ror
fldcw
outsb
or
daa
and
bnd
mov
sub
cltd
scas
xlat
inc
fs
std
mov
cmpsl
pop
ljmp
ret
in
cli
out
rcrb
sbb
xchg
dec
sar
adc
xor
cmc
mov
sbbl
aam
pop
push
or
and
inc
movups
mov
lea
mov
adc
mov
pop
pop
jne
call
repz
push
arpl
dec
outsb
scas
shll
enter
jno
stos
aas
sti
scas
arpl
inc
loope
push
or
in
pop
or
fdivp
sbb
pop
jo
insb
sub
push
js
mov
jnp
inc
std
sbb
repz
inc
clc
jo
mov
dec
in
cld
inc
cmp
xchg
aam
and
adc
mov
add
inc
sarb
push
mov
mov
adc
fistpl
xlat
jnp
jo
or
mov
push
xchg
or
sub
into
or
jo
push
add
adc
daa
add
negb
jp
lcall
mov
fdiv
jae
sub
dec
xor
xor
ljmp
jne
mov
xlat
push
mov
movsb
lcall
das
cmp
es
lret
xchg
jbe
mov
cld
push
gs
js
iret
or
mov
stc
dec
test
xchg
das
cmp
pop
sahf
add
gs
mov
stos
cmp
inc
mov
cmc
lret
dec
jecxz
bound
mov
cmp
aas
rclb
mov
xchg
jns
out
aaa
int3
jns
test
insl
xchg
call
cmpsb
pushf
fnsave
jae
jle
aad
es
lds
test
sbb
incb
test
inc
jne
ds
adc
mov
rcll
xor
xlat
test
insl
out
adcb
ja
xor
mulb
mov
mov
pop
pop
xchg
lea
fidivrs
insl
clc
adc
add
int
mov
out
je
imul
cmpsl
stos
sub
int3
movb
shll
subb
lods
scas
mov
jne
jp
jmp
and
jne
mov
push
mov
pop
xchg
sbb
pop
out
push
mov
mov
xchg
mov
jl
inc
jmp
shl
or
and
lock
mov
jo
xor
ficoml
pushf
je
lock
add
cli
outsb
incl
and
sbb
sarb
push
mov
aas
sub
test
imul
loopne
pusha
lret
xor
in
and
mov
pushf
pop
js
xor
scas
movsb
loop
jp
subb
pop
jmp
mov
and
pop
aas
scas
test
lahf
int3
pop
stc
mov
mov
sub
sbb
mov
and
jmp
loopne
and
or
int
push
cltd
sub
mov
xor
sarb
dec
daa
lods
lret
or
mov
sbb
icebp
sbb
sbb
sub
inc
das
lcall
push
mov
fs
jmp
in
add
push
xchg
leave
jg
pop
clc
mov
jns
idiv
pop
cmp
in
iret
pop
fstp
push
adc
aaa
push
dec
cmp
fwait
repz
repz
in
dec
test
add
mov
mov
shlb
mov
lcall
push
ret
xor
sbb
cmp
aaa
js
outsl
pop
loop
or
xor
scas
cmp
inc
add
addr16
pop
sarl
jb
push
subl
dec
imul
sbb
dec
or
and
and
sbb
cwtl
loope
sub
pop
popa
pop
pop
adc
dec
mov
rcrl
pop
insl
jge
push
xchg
test
inc
lret
jecxz
pop
mov
in
sbb
mov
cmpsb
add
mov
in
mov
adc
sub
cmp
pusha
mov
and
cltd
aaa
sub
xchg
cltd
nop
cmp
pop
fbstp
jno
inc
cmp
dec
addr16
fisubrl
xchg
jns
jns
sbb
mov
jae
sub
into
popf
xchg
pusha
inc
jmp
sub
sbb
mov
push
lcall
mov
lods
stos
je
mull
mov
pop
dec
push
cmc
lcall
cmpsb
gs
pop
rorl
push
inc
ja
fbstp
fld
adc
xchg
cltd
stc
sub
inc
and
sub
pop
mov
add
cmp
aaa
out
movsl
rcr
ret
sbb
mov
xchg
pusha
sarb
sbb
inc
push
ret
cltd
lcall
mov
sub
lods
stos
push
adc
hlt
xchg
outsb
dec
adc
das
push
shrb
or
in
mov
jb
into
lcall
aam
xor
jmp
rolb
or
mov
lret
pop
inc
in
dec
mov
arpl
push
inc
mov
and
inc
add
or
adc
pushf
adc
xchg
add
mov
rcll
imulb
pop
mov
xor
xlat
inc
xor
subl
sub
shlb
pop
jnp
loope
lret
add
out
subl
mov
pop
dec
shlb
jp
cli
fsubl
mov
or
imul
mov
dec
ret
imul
push
xor
or
stc
scas
and
movsb
and
add
lahf
sahf
int
sbb
dec
data16
add
lods
xchg
or
sbb
dec
sbb
outsl
cmp
mov
les
fisttps
sub
icebp
std
rcrl
add
mov
inc
ljmpw
mov
ret
or
xchg
xor
test
or
and
icebp
sub
mov
sahf
adc
cmc
inc
inc
pop
pop
sbbl
lods
jle
mov
push
lcall
mov
mov
jge
xor
std
sub
lcallw
pop
daa
mov
inc
ret
cmp
xor
lods
jmp
pop
aas
icebp
movsl
out
push
xor
imul
icebp
jmp
std
arpl
scas
push
ja
data16
cmp
sbb
mov
js
loopne
cmp
fwait
dec
lods
mov
lea
subb
leave
lahf
loope
je
test
ds
sarb
mov
push
out
and
adc
outsl
xor
xchg
push
mov
jnp
push
lea
out
cmp
rorb
mov
lods
sbb
int3
icebp
inc
cltd
inc
xlat
dec
roll
fstpt
aas
jmp
shrl
mov
int
mov
sub
push
sub
cmc
xchg
pop
je
mov
sbb
lret
cmpsl
sti
mov
xchg
inc
ret
adc
mov
mov
aam
sbb
adcl
mov
dec
cmc
dec
cltd
pop
popf
lds
sahf
push
sub
xchg
movsl
dec
cmp
mov
mov
pop
sbb
sbb
leave
sti
or
frstor
push
iret
mov
xor
pop
jae
mov
mov
jle
loope
xchg
negl
push
sbb
das
rcrb
and
pop
xlat
loopne
or
push
adc
mov
push
xlat
adc
lahf
inc
dec
in
mov
cmc
andb
lcall
cmp
fistps
jno
mov
out
mov
and
pop
stos
mov
add
jbe
jae
in
hlt
dec
fdivrs
and
push
movsb
cld
mov
test
inc
sbb
inc
popf
daa
jmp
cld
bound
add
std
lahf
pop
gs
nop
push
add
sbb
testb
jo
cmp
dec
lds
xor
xor
out
jnp
or
sub
inc
stos
out
push
jp
pushl
push
std
arpl
test
lret
xlat
add
test
stos
fwait
jg
nop
shl
add
and
ret
xchg
fs
nop
push
or
data16
and
imul
mov
jl
int
pusha
pop
xchg
xchg
push
dec
cmpsl
ds
mov
mov
scas
test
xchg
dec
dec
rcrb
fldenv
in
into
inc
andb
int3
inc
aad
xchg
push
data16
and
adc
fwait
xorl
int
or
ja
ds
pop
mov
or
mov
dec
or
push
nop
std
and
adc
mov
hlt
mov
cmpsb
es
movsb
mov
xchg
adc
mov
and
dec
and
adc
mov
clc
mov
imul
jae
mov
aam
and
outsb
push
pop
sub
mov
out
push
pusha
jl
fistps
mov
mov
and
popf
cmpsl
sub
jp
mov
pop
insl
mov
adc
aaa
cmpsb
dec
fdivrl
add
adc
mov
jnp
loop
aad
test
mov
lcall
in
add
cltd
clc
mov
into
repz
insl
sub
add
fdivl
mov
movsb
jo
in
xor
in
push
xorl
xchg
mov
mov
rolb
std
push
lcall
int3
fsubrs
test
int3
add
jae
and
fdivs
ret
ljmp
inc
cmc
ret
movsl
push
xor
jg
outsl
mov
sub
adc
adc
movsl
fmull
mov
xchg
jl
ret
mov
jae
jno
cmp
inc
or
push
push
repz
gs
test
popa
cmp
xchg
sbb
cmp
lods
cwtl
loopne
push
movsb
es
pop
sbbb
mov
mov
inc
mov
inc
mov
push
adc
mov
or
jbe
sub
mov
mov
ja
inc
imul
insb
stos
add
popf
push
int
sub
dec
ds
aam
and
icebp
xor
sbb
leave
jns
xor
fnstsw
fisubrs
pop
ficomps
sub
loop
and
iret
insl
dec
sub
lahf
sarl
jo
xlat
xor
testl
lret
xor
lock
scas
dec
cmp
jo
pop
shlb
mov
xchg
out
add
jp
jecxz
sbb
gs
adc
pop
jne
ret
outsb
push
ficoml
sub
std
mov
in
cmp
mov
int3
ljmp
mov
std
movsl
in
cmpsl
sub
jbe
mov
into
jle
xchg
mov
pop
adc
outsb
push
fmul
jne
filds
mov
mov
adc
xor
sub
push
xor
nop
into
arpl
adc
mov
inc
iret
jecxz
lahf
bound
shlb
dec
mov
push
mov
cmc
in
sub
or
pop
mov
aad
clc
cli
jns
mov
push
in
mov
aad
mov
adc
fisubrs
xor
sub
cmp
dec
and
mov
inc
push
push
aad
mov
lea
mov
push
lahf
ljmp
popf
pop
jns
popf
add
push
testl
and
lock
out
sub
bound
sarb
rorl
fdivp
pop
rol
inc
push
in
cmpsl
clc
add
push
xlat
mov
ja
test
mov
mov
in
xor
sbb
add
jg
sbb
das
loopne
fwait
xchg
push
pushf
inc
push
daa
pop
nop
mov
cmp
pop
jbe
lahf
dec
pop
dec
push
mov
lcall
inc
gs
jne
add
mov
aaa
repnz
jg
hlt
sbbb
imul
addb
stc
jl
pop
mov
ja
cwtl
std
test
int
stos
push
adc
movsb
repz
add
imulb
push
pop
xchg
or
es
mov
mov
sbb
ja
inc
pop
movsb
enter
out
jno
movsb
push
lods
lods
daa
pop
call
mov
int
jl
es
sub
sbb
mov
lret
xchg
sbb
clc
fimull
imul
stos
cli
dec
aam
xlat
ss
outsl
stos
xlat
sahf
aaa
in
push
cmpsb
aam
mov
adc
loop
jge
sbb
rclb
cwtl
inc
lods
scas
pusha
mov
cmp
jno
push
mov
out
xchg
sahf
dec
inc
out
push
add
fs
and
fstpl
or
xlat
xchg
stc
clc
or
or
add
add
dec
rolb
repnz
inc
popf
lret
movsb
pop
sbb
dec
scas
cmp
jge
add
pop
pushf
ret
push
jnp
clc
push
push
sbb
lea
imull
xlat
cmp
cmp
daa
movsl
adc
mov
jmp
push
movsb
paddsb
jae
cmp
jb
push
pusha
enter
lea
ds
imul
lret
push
jno
sub
loop
outsb
enter
cmc
or
xchg
jo
jle
push
nop
mov
cmp
pop
jmp
roll
hlt
xchg
mov
add
in
pop
mov
addr16
in
push
aam
xchg
inc
repnz
xchg
inc
call
adc
lret
or
test
push
and
data16
iret
int
jle
mov
insb
sbb
pop
cwtl
add
insb
std
inc
inc
inc
loope
sti
jbe
mov
into
dec
sub
xchg
push
data16
and
push
mov
and
dec
scas
pop
mov
ja
cmpb
mov
push
inc
ljmp
pushl
pop
imul
ds
inc
jge
ret
icebp
mov
mov
cmpsl
lret
and
xor
jns
psllq
lahf
rcll
adc
cmp
sarl
mov
xor
sbb
cmpsb
subb
or
mov
lret
scas
and
or
adc
out
push
mov
pop
adc
jp
les
stc
in
fidivrl
lock
push
repz
in
xchg
xchg
test
fmuls
cmp
or
xchg
dec
test
mov
ret
in
or
mov
sbb
push
fsubrp
fildl
push
je
add
sahf
popa
jl
in
outsb
push
mov
jl
push
push
pushf
sti
divl
add
aam
xchg
test
jns
sbb
iret
add
sbb
xor
pop
push
scas
xchg
rol
or
dec
mov
inc
sbb
cmp
push
sbb
mov
mull
daa
push
test
stos
mov
sbb
add
xlat
ss
iret
fs
adc
std
idivb
sbb
xchg
jae
test
xor
mov
ljmp
lret
movsb
adc
sar
rorl
or
jle
inc
lcall
sarb
xchg
push
fldenv
pop
arpl
std
pop
lock
fldt
xchg
inc
ret
test
out
mov
aad
jl
jp
aad
push
jmp
cmp
cmp
arpl
daa
insb
js
or
mov
mov
addb
push
in
stos
push
ds
pop
push
mov
xchg
stos
sbb
bound
pop
inc
aaa
mov
mov
scas
mov
repz
sbb
xor
pop
outsl
icebp
sbb
in
int3
sub
pop
xchg
xor
stc
jo
cmpsl
jecxz
mov
mov
xchg
and
dec
mov
and
mov
push
mov
mov
dec
or
lea
add
cmc
sub
xchg
pop
shll
cmp
pop
xchg
scas
dec
pop
out
pusha
stos
out
jl
push
and
jp
add
mov
pusha
sbb
mov
inc
js
fwait
jmp
ljmp
jecxz
movsb
inc
mov
nop
cwtl
or
jns
icebp
pop
dec
mov
iret
jnp
push
lea
jg
loope
xchg
push
andl
pop
aaa
jcxz
insl
jge
sbb
gs
or
mov
fs
push
in
fwait
rclb
mov
jnp
mov
push
test
inc
loopne
sub
jbe
sbbl
xor
mov
ret
sbb
add
fbstp
ficomps
fld
or
mov
loopne
push
pusha
dec
xlat
jecxz
cmpsl
adc
addr16
inc
lret
dec
pop
addr16
jno
ret
test
adc
mov
pop
jge
sub
das
push
pop
jl
inc
rcll
add
mov
mov
push
mov
cmp
arpl
iret
mov
into
daa
enter
sbb
mov
ja
es
dec
jmp
out
mov
ljmp
cli
lods
icebp
lret
or
mov
ficoml
insb
test
jle
sub
bound
pop
xchg
cwtl
cwtl
push
fwait
mov
fsubs
imul
dec
jb
xlat
mov
cmp
fsubrp
pop
out
mov
data16
and
out
je
or
pop
inc
cli
shrb
leave
arpl
add
xor
dec
sub
push
adc
adc
lahf
lods
mov
in
mov
xchg
jmp
push
outsl
fidivs
out
je
jmp
or
xchg
fs
xchg
leave
jo
mov
xor
je
mov
jle
adc
pop
adc
lea
outsb
addr16
xor
and
dec
andl
mov
jmp
jne
pop
mov
or
and
xor
loope
lds
xchg
aam
sahf
adcl
mov
into
in
mov
shrl
cmp
fnstenv
pusha
roll
rdseed
dec
inc
push
fbld
jne
shr
and
lret
mov
shr
dec
xchg
xchg
fidivs
fnstcw
xchg
jmp
pop
push
push
xlat
shlb
lret
jo
je
outsl
mov
fs
sub
push
cwtl
dec
je
in
aas
pop
fsubrs
add
cs
jmp
cmpsl
ficompl
or
lods
ds
fwait
pushf
shll
test
nop
dec
jbe
loopne
adc
cs
out
test
and
sbb
shlb
ror
mov
mov
ret
push
sub
pop
rcrl
add
lcall
gs
pop
mov
pushf
fmul
mov
stos
mov
arpl
or
sub
cmp
out
jbe
add
test
test
js
xor
in
and
add
fistpll
lcall
rorl
jb
mov
ljmp
dec
movsb
lock
mov
mov
fists
cmc
lods
xchg
inc
cmp
cmpsl
in
mov
fstps
inc
sub
lods
sbb
sbb
sbb
int
cmpsb
add
add
mov
dec
ret
out
pop
xchg
arpl
jb
int
out
test
jns
lret
in
cwtl
adc
sbb
aas
mov
clc
movsb
ret
pop
leave
in
out
insb
lahf
dec
clc
or
stos
jbe
int3
notl
es
mov
icebp
cmp
dec
sub
insb
js
adc
imul
and
adc
clc
iret
mov
xor
jecxz
xlat
pop
sbb
mov
out
icebp
or
insl
aad
in
mov
test
pop
out
pop
fldt
dec
sbb
sbb
jle
movsb
dec
lock
nop
or
mov
movsl
adc
mov
mov
hlt
rcll
xor
pop
shlb
mov
int
dec
sub
mov
mov
or
xor
iret
xor
push
std
push
rcr
idivl
cwtl
pop
mov
cmp
popa
aam
fwait
ret
lret
leave
ja
call
add
nop
xchg
std
mov
jmp
aas
sub
scas
mov
out
mov
jo
aam
inc
movsl
mov
cmp
in
cwtl
sbb
sub
sbb
std
inc
imul
das
lahf
repz
outsb
xor
sub
add
ljmp
xlat
jae
sbb
addr16
scas
add
xor
jb
in
jnp
add
pop
mov
aam
sahf
test
sbb
in
mov
bound
jbe
xor
or
ret
fsubl
clc
std
push
jmp
mov
adc
mov
jmp
es
fwait
pop
push
jb
les
xchg
js
pop
clc
xchg
xor
outsl
add
pop
ljmp
jge
jnp
movsl
addr16
xchg
adc
aad
inc
add
rorb
frstor
shrl
fs
push
imul
dec
fs
dec
fsubr
in
mov
scas
add
mov
dec
sti
stos
and
fimull
repz
xchg
fimuls
jb
shr
scas
fisttps
cmp
jle
cmpsl
testb
lea
lcall
xchg
sti
adc
or
pop
inc
inc
cmp
mov
pop
jl
jg
int
lods
pop
jp
fmull
cmp
mov
xlat
sbb
adc
lret
sub
mov
fdiv
fdivrs
xor
sbb
adc
fmuls
xlat
stc
xchg
push
lea
popa
or
pusha
repnz
xchg
sbb
dec
dec
xchg
mov
mov
push
xlat
pop
jle
xchg
xor
pop
jb
lods
lock
inc
ror
mov
mov
xchg
sbb
mov
inc
add
test
lods
in
mov
push
inc
inc
dec
scas
and
in
movsb
sbb
jne,pt
push
xchg
jb
rolb
bound
pop
cmpsl
popa
mov
pop
xchg
push
xor
idivb
movsb
xor
cmpsb
mov
jnp
and
insl
pop
adc
movsl
push
cmc
lock
pop
jl
pop
mov
push
mov
jno
adc
jnp
mov
cmc
xor
mov
and
test
adc
mov
mov
data16
jecxz
xor
jb
or
insl
into
mov
loope
xorl
xchg
pop
inc
in
cmp
push
mov
fbld
lods
push
clc
xor
fidivrs
pop
bound
data16
or
inc
push
lcall
icebp
dec
and
xchg
xchg
les
and
je
call
mov
xor
sahf
negl
stc
xchg
push
mov
enter
fucom
jns
incl
iret
mov
ret
lea
xlat
pop
and
mov
jae
push
pop
lahf
dec
add
push
in
push
ljmp
push
lods
push
mov
adc
pop
loopne
mov
mov
add
fwait
mov
fidivrs
lea
bound
cld
lods
jmp
dec
and
jne
push
test
mov
jmp
jo
mov
data16
fidivrs
das
mov
out
adc
push
into
mov
mov
insb
jle
inc
sub
mov
sti
orb
out
cs
leave
test
das
inc
cltd
adc
or
outsb
dec
push
cmp
aad
ds
and
sub
cs
jp
int
fsubrs
rorl
add
sahf
insb
mov
add
sarl
and
daa
sub
pop
push
mov
and
adc
adc
ljmp
dec
add
lods
pop
sbb
popa
aad
mov
push
js
dec
mov
mov
cmp
jmp
addr16
imul
fidivrl
ret
les
add
leave
push
sbb
xor
hlt
cmp
pop
cmp
rclb
cmp
leave
mov
pop
bound
popf
add
and
mov
inc
push
mov
xor
jo
push
jbe
mov
sbbb
or
fidivs
jbe
dec
fistl
lret
cmc
mov
xor
je
cmp
and
pop
and
sub
mov
movsl
pop
fildl
xchg
roll
and
fcmovnbe
xchg
sbb
jne
dec
inc
test
xorb
fidivl
and
lahf
int
push
outsb
ss
mov
or
lock
push
adc
cli
bound
ljmp
es
cmp
or
pushf
adc
aas
mov
ss
add
mov
loop
fstps
or
sub
cld
and
test
jmp
xor
orl
cmpsb
add
imul
mov
mov
incl
adc
shr
cmp
jmp
sub
stos
hlt
sarl
add
xchg
fdivs
jne
cwtl
xor
fcoml
out
inc
daa
popf
mov
and
jae
bound
sub
and
mov
pop
cli
in
push
scas
loop
out
jne
cwtl
inc
and
push
and
cs
testl
mov
jecxz
out
cmp
out
je
stc
xchg
fdivr
pop
cld
push
or
inc
loop
shll
mov
cmp
loopne
inc
imul
rorl
push
mov
fdiv
pop
movsb
jge
adc
mov
jns
daa
ja
je
adc
ja
jmp
sbbb
or
sahf
ljmp
lahf
aad
adc
sbb
mov
nop
xchg
popa
jo
and
sbb
sarl
jns
incl
test
push
jns
and
xor
pop
aaa
les
dec
push
in
out
inc
in
hlt
sub
icebp
cmp
addr16
dec
insb
jmp
outsb
mov
cli
lods
cmp
inc
sub
loop
and
jecxz
sub
xor
outsl
mov
mov
or
jg
ljmp
inc
outsb
jns
ret
sbb
xchg
imul
leave
jge
or
mov
mov
mov
push
dec
repnz
push
cmp
push
mov
jmp
mov
xchg
xchg
sub
push
inc
push
push
dec
out
lret
sbbl
idivl
pop
es
push
sbb
pop
and
shlb
bound
mov
mov
ret
push
xchg
add
xor
or
outsl
lret
mov
push
mov
sub
add
imulb
cmp
jns
dec
xchg
rclb
pop
cld
xchg
adc
and
mov
pusha
jge
push
pop
mov
test
es
popa
je
lods
adc
dec
insb
outsb
aaa
pop
loopne
in
jae
stc
dec
sbb
std
mov
mov
popa
inc
push
addl
mov
pop
jg
adc
aaa
mov
mov
ss
mov
filds
fnsave
add
cmp
pop
out
imull
mov
filds
push
movsl
jns
mov
lods
inc
scas
jle
fidivl
pusha
mov
push
aaa
je
notb
xchg
or
add
rdmsr
fwait
add
dec
das
icebp
push
xor
dec
imul
std
sbb
loope
clc
in
mov
xchg
inc
or
and
imul
pop
push
push
inc
pop
fnsave
push
movsl
cmp
ret
cmp
pop
xor
leave
jae
add
push
jmp
pop
xor
mov
add
repz
xchg
push
cs
es
push
mov
push
xchg
or
stc
adc
ret
test
lods
xchg
stos
push
mov
cmpsl
push
and
jns
ds
stc
in
inc
push
xchg
negl
das
pop
push
cs
sub
scas
cmc
cltd
lods
popf
scas
aaa
pop
mov
adc
sub
lahf
dec
pop
push
mov
pop
sub
roll
rcl
stos
add
cmp
rclb
xor
mov
mov
out
pop
adc
fsts
lahf
dec
subb
inc
inc
inc
call
adc
adc
les
call
or
addb
push
nop
dec
stc
xor
jecxz
imul
mov
push
test
inc
cmp
orl
sbb
out
inc
xchg
xchg
sahf
xchg
mov
inc
gs
sarl
xor
jle
sarb
lock
lds
cli
mov
in
aam
add
pop
sbb
cmp
jns
stc
addr16
sbb
std
mov
js
out
xchg
mov
pop
and
popf
lds
adc
das
fimuls
je
pop
in
pop
cmp
sarb
pop
push
sub
jp
rcl
les
jp
stos
jne
sub
mov
cld
scas
addr16
mov
lret
clc
lret
cmp
or
hlt
adc
jne,pt
jnp
mov
test
push
sbb
rclb
aas
push
xor
lret
popa
js
cld
inc
imul
ja
xchg
jg
pusha
stos
dec
cmp
loope
mov
cmpsb
mov
imul
sbb
add
sbb
lock
sub
add
xlat
or
sub
lock
xor
orb
cmpsl
cmp
push
mov
pop
popa
mov
out
add
xor
addb
ljmp
pop
aam
xchg
pop
int
nop
shlb
cmp
outsl
orb
pop
cmp
mov
cltd
addl
jle
lret
movl
and
or
dec
lods
jle
repnz
cmp
inc
out
stos
lcall
dec
cmp
adc
inc
adc
mov
mov
cld
or
fidivrs
loope
mov
int3
mov
dec
scas
lea
cmp
sbb
xchg
loopne
xchg
xchg
jno
sbb
xchg
xor
push
lds
lds
pop
call
popf
movsb
enter
adc
imul
pop
and
sub
nop
fisubrl
adc
inc
cmpsb
cmp
cmc
cmp
jbe
lock
movsl
jmp
cwtl
jmp
push
out
popf
add
and
lods
fistl
mov
iret
mov
push
sbb
push
or
pop
popa
mov
dec
sub
add
not
mov
pop
add
inc
shl
daa
mov
jp
imul
inc
sbb
rcrl
xchg
fisubl
sti
pusha
scas
ds
mov
xor
and
dec
shll
mov
lret
cltd
out
ljmp
popf
iret
test
clc
push
mov
inc
mov
stos
mov
arpl
call
xchg
adc
adc
jecxz
sub
sarb
cmp
push
push
push
mov
inc
lods
loope
sub
fidivs
mov
mov
jp
push
dec
into
aaa
repnz
mov
out
lcall
pop
or
pushf
xor
data16
sub
xchg
fisttpl
mov
mov
jnp
or
mov
ljmp
sbb
sub
sahf
ja
push
cmc
add
cmp
cmp
fistpll
dec
sahf
mov
popa
xchg
jg
cmpsb
mov
movsl
push
mov
in
mov
sti
movsl
rclb
inc
xor
fs
leave
enter
es
xchg
mov
ds
jae
lds
dec
mov
push
cwtl
xchg
push
int
xor
mov
movsl
push
pop
inc
cld
xchg
cld
cmpsb
pop
push
out
cmp
mov
xchg
and
orb
sti
inc
sarb
in
mov
aas
out
iret
jae
ljmp
sub
in
in
or
adc
lret
jg
jmp
inc
xor
popf
xchg
push
push
mov
int
pop
loop
fbld
mov
notb
cmp
rcrl
outsb
lea
xor
mov
addr16
ret
out
fwait
inc
cmp
xor
inc
std
cmpsl
jo
fidivrs
icebp
dec
mov
sahf
pop
stos
call
arpl
pusha
loop
sbb
mov
in
sub
dec
xchg
cltd
jmp
cli
cld
fs
mov
mov
scas
xlat
cmpsb
in
sub
lret
sub
arpl
hlt
xor
pop
jmp
stc
lods
jb
lret
loope
call
insb
sti
aas
std
roll
jbe
call
les
arpl
les
arpl
mov
dec
idiv
sub
inc
sub
jl
ja
aam
add
pop
stos
fwait
sar
add
loope
sub
sbb
xor
add
add
dec
adc
in
lds
sbb
cmpsl
add
inc
xor
pop
shll
cmpsb
jae
shl
mov
shr
loope
jo
dec
scas
mov
in
movsl
inc
ja
aas
cwtl
in
ret
sub
mov
call
mov
mov
pop
cwtl
aas
xor
sbb
mov
lea
push
in
loop
lahf
xlat
pop
pop
imul
inc
aam
xchg
add
mov
mov
ljmp
jbe
pushl
mov
jmp
data16
and
jns
test
pop
in
sbb
mov
je
mov
add
mov
rorb
popa
mov
jl
adc
out
jle
shl
addr16
je
add
outsb
fisubrs
mov
mov
adc
popa
xchg
push
lret
aaa
imul
outsb
mov
mov
sub
arpl
dec
mov
xor
into
dec
out
xchg
ficompl
inc
push
cmpsb
clc
loope
fst
idivl
mov
inc
daa
iret
xchg
and
not
cld
ret
movsb
je
rorb
push
les
adcb
push
mov
push
into
xor
sbb
adc
push
xchg
inc
fwait
and
rcrb
dec
push
bound
adc
test
cmp
and
mov
cld
jl
dec
mov
not
inc
xchg
jecxz
and
push
xchg
es
imul
or
fldz
xor
lds
add
mov
push
push
pop
lret
lock
dec
jno
push
xor
adc
push
daa
pop
outsb
into
call
sbb
inc
jecxz
mov
jle
daa
mov
out
mov
jnp
int
push
popw
add
and
mul
jns
outsl
lods
movsl
inc
je
test
fwait
xchg
jg
adc
jo
dec
mov
insl
push
jp
fistl
test
jecxz
into
push
cmp
lods
jno
mov
in
lret
push
test
std
movsl
cltd
cs
into
xorl
xchg
mov
mov
ror
enter
out
push
inc
jno
lds
fimull
icebp
lahf
repz
mov
lods
movsl
xchg
sub
dec
sub
pop
xor
pop
mov
insl
mov
jnp
dec
addr16
mov
and
mov
add
dec
lahf
out
jns
js
pop
jb
push
lret
cltd
xor
stc
lret
icebp
sbb
imul
mov
rep
cli
inc
mov
cmc
nop
push
dec
push
scas
fistps
ffreep
dec
pushf
cwtl
nop
push
mov
lret
push
pop
xor
fisubs
cltd
sub
dec
cs
negl
pop
mul
or
hlt
stc
sbb
pop
or
int3
test
pop
jmp
out
hlt
out
jg
cmp
test
jnp
cmpsb
adc
mov
fcompl
inc
into
sahf
jl
mov
mov
cmp
daa
dec
mov
ss
imul
and
lock
add
inc
jmp
mov
inc
inc
sbb
xchg
and
mov
inc
adc
leave
mov
add
push
lahf
xchg
aas
push
inc
add
or
add
xchg
or
ja
xor
jmp
pop
sub
and
cmp
mov
sbb
mov
push
mov
cli
leave
xor
shr
test
outsl
ja
adc
dec
iret
xor
push
push
ljmp
inc
mov
loope
push
add
xor
xchg
filds
add
sub
addl
test
jl
inc
xor
int
xchg
bound
dec
mov
hlt
inc
loop
xor
and
cmp
pop
mov
ret
inc
mov
insl
les
imul
push
push
mov
xchg
or
outsl
sbb
xchg
xchg
outsl
fs
jnp
sub
lock
xchg
pop
jge
ret
jle
sarb
fbld
mov
dec
andb
inc
adc
pop
push
outsl
mov
movsl
push
fisubrl
xchg
movsl
mov
mov
es
cmp
xchg
fs
pop
pop
fdivrl
mov
dec
out
mov
mov
cmpsb
lahf
xchg
shlb
adc
sbb
out
pusha
mov
call
movsl
jb
dec
mov
icebp
inc
sub
cmp
je
cld
pusha
mov
sbb
pop
and
pusha
adc
mov
push
mov
mov
adc
push
cmp
jb
cltd
cmp
inc
test
mov
inc
dec
xor
subb
imul
test
aaa
sub
mov
clc
mov
sbb
adc
ds
leave
outsl
icebp
stc
in
adc
insl
or
hlt
and
xchg
jnp
inc
xor
dec
pop
jae
fldl
xchg
dec
lea
in
add
testl
int
leave
mov
mov
hlt
sti
sti
or
arpl
adc
mov
cmp
aad
xor
add
xor
or
inc
sub
sti
lret
cmp
inc
shlb
imul
mov
mov
xchg
outsb
das
loop
cltd
mov
and
outsb
push
hlt
jb
inc
xor
fists
push
adc
into
adc
dec
xor
in
jle
sbb
mov
divb
addb
dec
js
roll
iret
rolb
into
into
mov
or
mov
cmpsl
orl
stos
xchg
xchg
adc
int
scas
fstl
iret
repnz
push
ljmp
loopne
lret
out
inc
cmpl
dec
mov
call
jl
stos
jl
clc
jmp
js
fbld
cmp
jle
mov
or
push
sahf
lock
adc
or
xchg
mov
add
push
jne
add
and
sbb
sub
xor
add
cmpl
push
mov
adc
xchg
mov
addr16
sbb
test
sbb
inc
data16
ret
push
add
jno
call
outsb
mov
push
xor
fcmovu
call
xchg
or
mov
popa
mov
cmpsb
sub
imull
orb
pop
addr16
aaa
xor
jno
mov
clc
xor
xor
dec
roll
repz
mov
xor
push
or
or
test
adc
dec
inc
test
cld
cli
aad
sbb
sahf
dec
jle
in
les
lea
loopne
mov
xchg
cmpsb
cltd
outsb
push
scas
jnp
add
daa
ljmp
sub
test
jnp
jns
ljmp
ret
mov
aam
xor
ja
mov
jl
pop
xchg
xchg
iret
push
ret
push
mov
xchg
mov
cmp
fbstp
sbb
xchg
mov
xor
sub
push
xchg
stos
sarb
lock
pop
lcall
mov
lcall
into
cld
hlt
inc
sbb
imul
ret
imul
jmp
inc
jnp
jns
push
push
gs
jp
les
push
jmp
dec
jmp
loope
dec
cld
imul
scas
xor
movsl
pop
sub
dec
dec
adc
cmpsl
int
jg
enter
pop
hlt
shll
aad
mov
cmpsl
cmp
adc
js
adc
xchg
xor
lcall
scas
inc
adc
pushf
dec
aas
push
mov
movsl
push
shlb
sub
fldenv
out
in
xchg
inc
das
or
mov
adc
push
mov
sbb
inc
or
mov
cmc
pop
push
pop
or
mov
test
push
jl
push
adc
rcrl
sub
jnp
xchg
push
add
mov
jp
pop
das
mov
aaa
test
pop
adc
xchg
mov
mov
adc
mov
outsb
test
arpl
stos
push
scas
push
cmc
sahf
jno
xor
or
inc
jo
shrb
jg
addb
mov
add
xor
pop
std
lret
addr16
dec
pop
cmp
cmpsl
mov
fs
subb
adc
cltd
mov
or
sub
stos
and
cmpsl
data16
add
xchg
sti
pop
inc
fwait
shl
and
or
pop
mov
jle
scas
xlat
inc
add
xlat
nop
lods
sti
sbb
ficoml
mov
mov
loop
mov
ss
mov
push
mov
xchg
jbe
bound
movsb
add
and
xor
adc
movsl
mov
dec
push
cmp
je
insl
dec
ja
push
lds
sbbl
lret
xor
out
sub
ret
repnz
mov
or
adc
push
loopne
adc
push
imulb
xchg
test
xor
pop
and
outsb
cs
shll
loop
dec
cmpsb
mov
pop
xchg
adc
inc
cmp
test
scas
outsb
cli
in
dec
lcall
stos
push
fmul
push
cmp
jge
je
mov
jg
pop
adc
inc
mov
ss
dec
dec
sbb
out
mov
push
mov
inc
push
pop
add
lea
test
add
sub
popf
ret
push
xchg
add
jne
into
aad
scas
dec
idiv
jb
push
or
or
rcll
jne
push
mov
fs
xchg
xchg
push
add
jno
imul
mov
andw
pusha
mov
addr16
xor
adc
stc
adc
cmp
mov
shl
out
cmp
das
adc
shll
cmp
pop
xchg
mov
sbb
das
pop
inc
and
pop
cmp
or
hlt
inc
xor
lcall
push
loop
cwtl
pop
push
in
pop
adc
fiadds
sarb
dec
gs
push
pop
push
aad
xor
xchg
movsb
sbb
cmp
in
sahf
push
add
push
add
pop
mov
sbb
push
insb
adc
xor
pop
sahf
jmp
cld
pop
push
push
lods
mov
or
mov
pop
jl
fbstp
cmpsb
aam
test
out
aaa
adc
movsb
cltd
mov
stos
mov
or
in
mov
nop
push
stc
add
in
xor
icebp
push
pop
xchg
jb
or
add
sub
out
push
fiadds
insl
les
pop
cmc
addr16
out
xor
cmpsb
mov
mov
xor
sbb
int3
imul
sub
clc
fs
adc
inc
insl
mov
sub
test
mov
pop
icebp
mov
insl
out
popf
hlt
sub
push
inc
adc
mov
or
mov
inc
mov
lods
lahf
adc
mov
test
xchg
loop
inc
lret
cmp
jecxz
shl
xorl
addr16
cmpsb
pop
mov
ljmp
movsl
push
add
call
out
mov
push
sub
push
inc
repz
icebp
sahf
mov
xchg
inc
sbb
and
xchg
popf
xchg
xchg
sti
ret
add
xchg
sub
das
dec
dec
movsb
jb
or
add
and
cltd
pop
push
rolb
adc
sbb
xor
insl
testb
mov
cmp
in
or
and
xchg
jge
mov
jmp
inc
mov
dec
mov
jg
shl
jge
jne
mov
cmc
outsl
in
jne
inc
jns
mov
lahf
or
in
jmp
push
and
adc
sbb
cld
fmull
stos
jl
popa
adc
push
pop
repnz
mov
test
in
repnz
lock
mov
rclb
imull
shlb
mov
jo
insb
dec
orb
cmp
sbb
addr16
test
fwait
test
lahf
mov
ljmp
dec
pop
pop
push
push
ljmp
aad
cltd
mov
pop
std
mov
push
ja
or
xchg
mov
jae
jnp
fiaddl
stos
xlat
sbb
add
ret
orl
xchg
mov
xor
fdivs
int
popa
pop
xchg
arpl
icebp
in
and
andb
scas
cmp
mov
cmp
out
js
and
in
aas
insl
leave
cwtl
test
outsb
in
cmp
std
push
int3
dec
mov
or
or
aad
addr16
subl
cli
push
hlt
add
loope
inc
xchg
mov
call
orl
xor
sub
mov
das
movsb
fldenv
dec
cld
pop
andl
mov
in
push
scas
mov
jbe
cmpsb
out
dec
xor
mov
ret
push
cli
lods
or
aam
cmp
push
insl
mov
adc
xor
jae
pop
ret
or
lret
push
xor
sti
jnp
aad
sub
fstl
jmp
or
pusha
push
add
mov
lea
sbb
loopne
sti
pop
xor
mov
jne
jns
pop
aas
sbb
jno
mov
jb
clc
loop
sub
popa
lods
int3
push
inc
aas
cmpsl
and
divb
jle
add
cmpsb
popf
iret
and
xchg
mov
js
pop
loop
outsb
mov
out
aas
fs
mov
cltd
inc
jle
in
fwait
shll
mov
cmp
inc
xchg
data16
imul
imul
test
cltd
add
cmp
repnz
add
cmp
nop
cmp
or
popa
xchg
jge
clc
xor
roll
ficoml
enter
sub
xchg
std
push
mov
mov
xchg
or
jbe
mov
xor
out
add
inc
cmp
scas
shr
rol
pushf
orb
fsubs
out
or
mov
arpl
push
movsb
test
cmp
add
xlat
and
insl
scas
int
and
leave
pop
mov
fdiv
das
out
dec
mov
andb
pop
dec
dec
int
xchg
and
out
ret
std
je
ds
pop
inc
mov
push
imul
lea
daa
adc
push
cmp
sub
push
inc
xlat
popa
and
frstor
icebp
scas
movl
repnz
lock
jno
fdivrp
nop
mov
iret
test
enter
enter
inc
and
pop
and
in
xchg
insb
sarb
and
mov
jmp
cmc
daa
loope
sbb
dec
add
and
in
pusha
mov
mov
xor
and
pop
lds
mov
mov
push
push
mov
xchg
je
in
ja
jmp
jno
sarb
mov
and
jbe
bound
fsts
aam
repnz
xchg
pop
sti
mov
ret
mov
inc
add
nop
enter
js
popa
inc
lret
scas
insl
push
jnp
popf
es
adc
repz
mov
imul
inc
mov
stc
mov
cmp
fstps
or
cs
popa
into
in
adc
xchg
sar
sbb
xor
inc
push
rcrb
sar
lret
sbb
sbb
cwtl
and
fldz
stos
in
fstpl
pushf
and
mov
loopne
ljmp
das
clc
adc
and
int
ret
inc
hlt
sbb
call
jae
pop
je
add
push
fwait
pop
and
mov
out
test
sbb
adc
nop
cmpsb
lahf
push
pushf
jnp
iret
cwtl
movhps
fisubs
cld
iret
clc
cltd
xchg
mov
loop
jne
fsts
mov
out
mov
xor
lret
pop
push
ss
sbb
dec
sbb
mov
out
js
rcll
lods
jae
fldenv
sbb
std
ret
in
push
dec
int3
pop
movsl
or
xor
push
add
jl
mov
adcl
jnp
enter
pop
shll
pop
cmpsl
adc
mov
cmp
cmpsl
test
add
mov
mov
and
test
cmpsl
repnz
aaa
sti
fists
negl
xchg
aad
lcall
icebp
mov
cmc
inc
dec
jge
stos
sbb
and
pop
cmp
insb
daa
pop
stc
push
pop
lock
pop
pusha
mov
icebp
jl
test
xchg
xchg
mov
orl
arpl
jb
mov
loopne
loop
mov
inc
cmpsl
rol
pop
cmp
and
es
cmpsl
lods
subl
int
dec
mov
xchg
or
jno
lcall
push
xchg
dec
sbb
jns
cmp
and
dec
movsl
aad
ss
mov
adc
and
mov
test
les
int
jne
mov
xchg
int
sbb
push
lret
out
and
inc
mov
or
jge
or
xor
cmpsb
adc
jb
lods
and
mov
pop
fildll
mov
and
xlat
sub
rclb
xchg
cmc
push
aad
push
stc
test
pop
int
in
in
cmp
nop
fwait
cmp
pop
filds
xchg
test
punpckhbw
iret
jg
inc
or
add
lds
and
aad
les
pop
jecxz
fsubrl
out
xchg
mov
adc
jne
mov
mov
std
adc
xchg
sbb
or
inc
lods
das
rorb
sub
ja
dec
sub
or
dec
cmc
adc
ss
xchg
dec
cwtl
movsb
mov
notb
dec
dec
mov
jbe
aaa
jge
aam
sahf
icebp
sti
cmp
outsl
repnz
mov
adc
inc
or
shr
push
sbbb
mov
ret
lea
test
test
sti
push
int
mov
add
popa
negb
mov
lret
dec
xlat
movsb
aad
bound
adc
jge
inc
int3
test
and
popa
mov
pop
jae
xor
jno
push
cmc
aam
lock
add
mov
adc
xchg
jae
sub
xchg
mov
push
incl
sub
add
out
stc
mov
aaa
jo
stc
pop
push
fcom
loopne
addb
stos
mov
and
sahf
sub
std
out
ja
aam
arpl
push
dec
pop
ds
adc
and
jbe
dec
ret
int3
pop
mov
ret
outsb
pop
dec
int
inc
pop
hlt
scas
fsqrt
mov
ret
fiaddl
adcl
fcoms
or
push
push
fcoms
js
bound
push
dec
loop
mov
inc
lea
and
loope
imul
ret
mov
in
mov
xor
mov
jp
sti
jns
cmpsb
out
push
jle
xchg
aaa
insb
stc
js
fs
addr16
mov
addl
dec
mov
mov
dec
lret
cmp
mov
and
xchg
in
out
xchg
add
jno
cmp
addr16
roll
sub
addr16
sub
sub
aam
call
mov
jmp
int3
fldcw
xor
outsl
add
xor
sbb
add
lock
xor
jae
dec
adc
push
fucomp
xchg
outsl
aas
loop
dec
int
mov
fcmovb
mov
jae
dec
mov
aad
mov
loopne
xor
sti
push
fdivrs
enter
jle
jmp
mov
cmc
or
mov
imul
dec
pop
mov
test
inc
pop
sub
push
inc
inc
push
dec
xor
jno
sbb
pop
jbe
popa
jne
add
scas
lods
andb
adc
lock
mov
das
sub
push
xchg
rcll
scas
push
jmp
mov
ja
ret
hlt
subb
cld
insl
xchg
sarb
add
lock
add
fisubrs
pop
pop
or
add
add
sbb
or
pop
fnop
mov
je
mov
mov
xor
pop
dec
xchg
loopne
lea
jbe
outsb
xor
push
mov
test
cmp
rcl
test
jp
or
and
lea
jns
mov
int
adc
rcrb
xor
hlt
shlb
ret
out
sahf
sbbb
inc
jne
push
rcll
cmp
inc
cmp
addr16
std
stos
sahf
mov
lahf
jbe
inc
jo
clc
adc
xorb
adc
mov
xchg
into
mov
cmp
bound
xor
clc
push
addr16
leave
andb
dec
push
ret
shll
add
xlat
mov
xor
ficoms
ret
xor
mov
and
sahf
ds
rcrl
xchg
sbb
or
popa
fnstenv
ja
movsb
sbb
dec
mov
lahf
jae
jmp
aaa
in
shlb
add
dec
rolb
inc
cmp
test
sub
pop
data16
addr16
mov
jmp
sub
adc
lret
popf
out
mov
jle
inc
dec
stos
subb
lods
pop
xchg
fcompl
jns
pushf
dec
into
add
jl
cmp
mov
mov
je
lret
mov
out
shll
sbb
fadds
loopne
xchg
jle
and
data16
pop
loope
xchg
sub
dec
scas
sub
loope
add
mov
mov
xchg
jp
insb
sarb
out
scas
inc
cmp
nop
out
insb
adc
aas
mov
xor
or
mov
addr16
jecxz
dec
add
bound
add
sahf
sub
sarl
into
into
mov
insb
testl
add
inc
leave
mov
sub
inc
fidivl
cmc
sahf
cmp
and
aad
jmp
pop
shll
cmp
ja
push
adc
adc
es
jbe
mov
xchg
mov
inc
arpl
or
out
dec
fnstenv
jae
pop
sub
in
push
sub
fstl
daa
imul
das
scas
dec
push
add
addl
loope
mov
subl
hlt
cmpsb
loop
mov
or
jno
dec
and
mov
out
notb
pop
fcomip
xchg
jbe
pcmpeqw
dec
or
imul
adc
lret
mov
shll
addr16
rolb
mov
jl
cmp
push
xchg
mov
stc
out
xchg
imul
aam
in
add
push
shrl
cltd
out
inc
scas
pop
jp
push
add
into
mov
cltd
pop
lock
mov
mov
inc
arpl
sub
int3
out
pusha
xchg
add
push
jb
cmp
cs
add
imul
mov
or
gs
mov
push
sbb
mov
adc
adc
sbb
das
repz
xor
loop
inc
lret
mov
out
movsl
push
sbb
push
sahf
aaa
sbb
ja
jl
inc
es
or
sahf
out
lock
ror
cmp
jnp
add
enter
lret
out
mull
movsb
push
daa
push
mov
ja
pop
add
jbe
and
pop
rol
pusha
ja
cmpsl
mov
jnp
inc
fstp
pop
popf
das
push
cmpsl
pop
cmp
inc
jne
sbb
push
xchg
and
insb
pusha
icebp
loop
mov
adc
add
jmp
testb
sbb
xor
adc
mov
pop
in
imul
xchg
lock
repnz
and
loop
push
add
insl
or
adc
xchg
hlt
ret
stc
iret
outsb
test
int
test
jl
sarl
out
jnp
mov
es
cli
inc
mov
xor
sbb
mov
dec
ud1
andb
mov
lret
pop
mov
dec
xchg
shlb
push
or
insb
in
xor
movb
xchg
sub
mov
adc
aaa
mov
sbb
xchg
adc
cmp
cmc
push
jp
mov
popa
xor
mov
xor
pop
push
add
ficoml
test
and
dec
cmp
xchg
scas
cmp
fcmovnbe
mov
jl
aad
sub
test
jge
imul
outsb
jle
das
pop
pop
jge
fdivrl
mov
es
adc
fwait
dec
pop
cli
hlt
adc
jecxz
push
ss
sub
lahf
adc
js
jecxz
ja
inc
ljmp
xchg
popa
in
add
sbb
sbb
xchg
sbb
jmp
test
jmp
ja
rol
jns
aaa
xchg
out
cmpsl
test
daa
sbb
lcall
imul
push
mull
in
sub
push
lahf
or
jnp
repz
pusha
xchg
add
mov
fldl
cmpb
sub
fcomi
dec
pop
bound
daa
or
lahf
dec
js
aad
lods
jno
imul
cmc
xchg
mov
iret
and
stos
mov
rclb
mov
addr16
mov
lock
jg
ds
add
sub
sbbl
jo
cs
out
in
popf
in
xchg
imul
fucomi
xor
cltd
ficompl
aam
iret
in
push
das
movsl
daa
jno
xchg
pop
or
imul
std
out
lcall
in
and
inc
fildl
insl
and
or
dec
pop
addl
sub
jle
scas
jle
cmpsl
mov
push
in
dec
jl
mov
lds
adc
inc
and
sbb
lods
clc
fsubl
scas
icebp
mov
imul
inc
mov
pop
sbb
jns
mov
icebp
fadd
add
mov
mov
scas
or
out
dec
and
push
mov
and
mov
sti
sbb
or
fdivrs
cmp
or
jns
lahf
xchg
in
hlt
sub
push
pop
fildl
pop
fistpll
mov
mov
test
lahf
xchg
jae
inc
jne
xorb
push
push
add
and
inc
jo
int
lcall
icebp
sub
leave
popf
jmp
dec
dec
inc
push
add
hlt
in
repnz
cmpl
ret
jge
sub
sbb
pushl
mov
mov
add
xchg
nop
cmc
in
sbb
jns
jg
aad
pop
ficomps
jle
pop
push
dec
adc
mov
add
add
clc
imul
pop
mov
loopne
pop
jb
cmp
adc
mov
negl
mov
ja
rolb
pop
lret
fstps
clc
ficoms
out
std
push
mov
sub
lahf
mov
cmp
pop
scas
xor
mov
dec
cmp
ret
jecxz
cmp
nop
jnp
shlb
js
push
popf
xchg
sahf
ja
xor
or
dec
jb
jo
pop
push
mov
mov
mov
je
gs
dec
daa
fldenv
dec
decb
dec
shlb
xor
mov
out
int3
imul
push
inc
push
xor
jb,pt
enter
xor
mov
popa
mov
mov
jecxz
pop
js
mov
lods
xlat
cmp
mov
ret
push
outsl
cmp
lds
cmp
add
mov
or
rorl
push
sub
int
mov
bound
js
mov
cmpsl
ficomps
push
cmp
pop
out
lret
dec
push
xchg
loope
or
push
add
or
mov
scas
cmp
add
dec
divl
std
pop
cmp
lock
daa
imul
push
add
jbe
lahf
dec
je
push
mov
sub
pop
xchg
xor
inc
sahf
push
shll
adc
aas
hlt
or
lods
mov
mov
xor
or
pop
sbb
jnp
push
inc
jp
dec
inc
or
lds
inc
mov
dec
push
xor
imul
mov
push
push
cmpsb
adc
inc
add
xor
decb
pop
lods
test
jae
sbb
ljmp
outsb
fdivp
pop
int3
arpl
mov
insb
shrb
mov
lcall
jmp
divl
inc
dec
push
jns
or
push
int
push
dec
push
nop
sub
push
push
sti
mov
xorl
je
mov
adc
shlb
imul
adc
adc
sub
xchg
fcoml
and
sbb
xor
out
add
xchg
mov
cli
dec
std
or
pop
add
xlat
or
rcrb
mov
push
xor
push
leave
mov
mov
inc
sub
adc
cbtw
aam
hlt
lret
lea
fstp
jne
js
mov
xor
clc
adc
loope
insl
rcrb
mov
bnd
mov
xlat
testl
jns
jo
pop
addb
shrb
cmp
jae
inc
cmpsb
sub
xchg
adc
out
push
iret
loopne
cmp
adc
test
and
xor
lds
lods
dec
xlat
aam
inc
push
insb
add
add
stos
sbb
xchg
nop
jmp
dec
jmp
ds
xor
cld
jg
sbbl
lcall
icebp
lahf
loopne
fsubrl
test
aas
ljmp
icebp
or
jbe
fsubrl
sub
cmp
jae
cmp
mov
test
mov
ret
mov
in
popf
pop
push
movaps
cmp
sub
cmc
negl
xchg
jnp
in
cwtl
push
cmp
jmp
in
fdivl
cmp
jbe
push
jmp
cmp
pop
add
stc
or
int
ljmp
mov
sbb
add
inc
mov
push
sub
std
shr
push
lds
push
movsl
mov
cli
pop
dec
sub
mov
jp
mov
push
leave
data16
add
loopne
add
mov
cltd
sbb
dec
sub
fiadds
sub
dec
or
in
push
xchg
scas
mov
fsubrs
jp
cmp
sub
mov
repz
mov
inc
sub
lret
fnsave
lret
das
jns
lahf
ret
mov
clc
cmp
icebp
xlat
ljmp
xchg
lret
xchg
or
shrl
and
mov
call
das
xor
repz
stos
insb
jbe
in
roll
scas
stc
or
push
daa
mov
or
dec
xor
or
rcll
mov
pop
pop
mov
dec
fs
inc
pop
cmp
or
rorl
push
push
cld
dec
adc
lahf
pop
xor
rcr
paddusb
jne
in
push
sbb
fwait
or
fwait
pop
imul
imul
outsb
lea
aad
inc
test
das
mov
push
inc
and
aas
popa
or
xor
adc
sub
gs
imull
insl
imul
loop
scas
adc
xor
pop
popa
inc
rorb
ret
sbb
out
or
fdivl
and
sbb
iret
sub
imul
ds
ret
bound
xchg
cmc
push
mov
xlat
loopne
pop
inc
in
hlt
jbe
sub
scas
shll
mov
and
fstpt
cmp
les
imul
mov
pop
jg
scas
add
jno
shlb
push
inc
jb
loopne
out
int3
xor
mov
fsubp
xlat
add
gs
inc
lcall
xor
sbb
iret
mov
imul
mov
sbb
lcall
adc
jns
fstpl
lods
xchg
out
jae
inc
sbbl
jnp
cmp
mov
sub
sub
mov
push
xchg
mov
jp
and
shl
test
jno
sbb
push
push
mov
fisubs
jbe
add
add
dec
out
dec
arpl
lods
addr16
outsl
out
insb
mov
mov
js
pop
xchg
push
dec
cmpsb
pop
or
dec
divb
adc
adc
inc
adc
push
inc
xchg
fisubl
or
dec
imul
daa
lcall
in
mov
add
xacquire
mov
adc
jb
add
add
jp
out
dec
mov
or
iret
out
and
arpl
add
jbe
push
and
or
gs
add
jno
les
or
cltd
fcompl
cmpsb
enter
addr16
sub
imul
out
in
mov
mov
stos
ja
test
int3
pop
cmc
xchg
push
int
fxtract
test
jecxz
nop
loope
sbb
aaa
jge
popf
shl
push
mov
outsl
in
es
repnz
cmp
or
test
scas
xchg
jge
mov
mov
jae
jecxz
loopne
mov
stos
mov
aas
adc
repnz
loopne
ljmp
mov
call
shrb
fadds
call
inc
xor
push
sbb
push
adc
push
decb
push
out
dec
js
jecxz
mov
dec
sub
push
inc
shl
inc
cli
cmpsl
xchg
out
and
jbe
mov
fldl
sbb
dec
inc
rorl
notl
xor
shll
inc
sti
je
mov
jl
lods
aad
leave
pop
sub
and
push
dec
push
shll
cs
fisttpl
jnp
mov
inc
mov
pop
int
jns
or
inc
ret
outsl
xchg
ss
std
inc
lret
rclb
cmpsb
popa
ss
pop
imul
movsl
imul
rol
loop
push
aas
nop
sub
fisttps
jl
dec
adc
sbb
dec
adc
mov
inc
pop
jl
insb
mov
pop
aaa
aam
cmp
jg
outsl
sub
mov
cwtl
lods
mov
jle
testl
adc
push
mov
orb
xor
arpl
mov
imul
lods
popf
add
mov
sub
sbb
out
aam
mov
rorl
adc
ds
les
addr16
xchg
fwait
xchg
ret
lods
mov
out
mov
fstpl
xchg
outsb
outsl
orb
jp
pop
xchg
repnz
scas
bound
xor
insl
mov
mov
xchg
mov
sub
mov
hlt
xor
mov
hlt
je
push
xchg
cmpsb
movsb
inc
adc
repnz
dec
dec
jno
adc
sbb
daa
xchg
sub
xchg
jnp
xchg
cmp
inc
mov
or
mov
ret
jbe
jl
adc
roll
push
in
or
mov
mov
inc
fldl
lds
pop
int3
ljmp
pop
inc
mov
or
dec
es
hlt
cli
fnstenv
add
jb
in
iret
mov
mov
mov
arpl
in
jae
movsb
scas
scas
push
jle
js
inc
sbb
sbb
test
stos
xchg
push
jno
push
mov
and
or
lds
sub
push
push
push
cmc
jl
mov
stos
stos
hlt
xor
adc
aad
pushf
add
les
outsb
mov
pop
xchg
stos
call
and
fsts
ficomps
pushf
and
inc
movsl
popf
js
sbb
fwait
xchg
pop
mov
mov
clc
lret
jmp
lock
shlb
mov
test
push
enter
xchg
addl
push
adc
add
loopne
pop
fisubrl
jge
sub
sbb
cmp
mov
sub
adc
lods
pop
cld
bound
or
hlt
xor
add
push
pop
movsb
xlat
insb
hlt
loopne
and
sub
aam
pop
jae
int3
adcl
movsl
xor
testb
shlb
addb
sub
pop
movb
ffree
xor
fs
popf
icebp
lea
push
adc
xchg
xlat
fwait
push
gs
popa
stos
imul
pop
adc
aam
sbb
sti
aas
xor
and
sbb
pushf
push
xchg
mov
jmp
and
sub
jnp
cmp
fs
emms
sub
cmpl
jno
cmovg
lods
push
and
mov
xor
xchg
sub
jecxz
dec
mov
fildl
nop
xor
scas
pushf
mov
cwtl
push
mov
imul
add
sbb
outsl
sub
push
mov
out
and
xor
hlt
imul
sbb
mov
cmpsb
xchg
popa
sub
dec
mov
sahf
cmp
or
pushf
jle
ficoms
xor
add
push
mov
cmp
pop
sbb
pop
into
push
nop
or
imul
xor
jp
adc
mov
lods
cmp
inc
xchg
test
jno
pop
or
or
mov
sahf
cmp
mov
inc
xor
mov
test
adc
push
hlt
iret
stos
scas
bnd
mov
shll
adc
add
decl
shll
mov
adc
jle
cmp
mov
dec
fstpl
xor
lods
sbb
xlat
stc
jmp
jns
xchg
fsts
cs
icebp
in
popa
inc
adc
dec
shlb
aaa
jns
std
pop
fdivrs
mov
ja
inc
aam
push
hlt
test
push
xor
cmp
mov
scas
mov
cmpsb
pop
sub
jb
cltd
and
sub
js
sub
add
mov
or
outsb
int
movsb
push
sbb
sbb
xor
cmp
sahf
outsb
sahf
mov
into
mov
scas
jne
lret
pop
es
stos
out
cmc
insl
push
loop
test
fildl
and
test
popf
and
or
popf
mov
gs
pop
test
xor
orb
inc
clc
push
das
movsb
out
sub
push
push
outsb
push
push
xchg
or
push
pop
adc
arpl
push
cmp
adc
aad
stos
hlt
frstor
scas
pop
jg
xor
pop
decb
fs
or
pop
jp
pop
sarl
ds
mulb
adc
adc
push
or
xchg
sbb
pop
mov
roll
jecxz
mov
movsb
insb
cmc
xchg
stos
xor
cmp
sbb
sub
and
cltd
call
pop
es
call
out
out
mov
cmp
sbb
cmp
push
mov
push
xor
mov
in
rep
pop
xchg
lds
mov
arpl
imul
or
mov
test
xor
cli
sub
xchg
out
xlat
xlat
pop
inc
data16
out
mov
dec
push
in
add
fcompl
adc
and
loope
in
mov
nop
mov
jno
in
subb
lods
ja
xor
or
adc
adc
pop
mov
pop
dec
adcb
and
fnstenv
mov
push
push
mov
lret
pop
cmp
inc
enter
popf
xor
adc
mov
dec
test
xchg
les
jge
sbb
gs
xor
jo
daa
and
ss
lock
jnp
push
sbb
stc
test
dec
jnp
add
test
jl
adc
pcmpgtw
or
nop
mov
xor
xchg
mov
xchg
xor
xor
mov
add
add
fistpl
xlat
pop
fistpll
in
test
and
inc
sub
out
addb
or
xor
xchg
or
mov
es
lds
push
ljmp
lret
sbb
or
clc
fstps
push
aaa
data16
daa
cmpl
test
les
ss
mov
insl
mov
push
or
les
mov
dec
aam
cmp
jnp
mov
inc
or
jmp
cld
push
popl
stos
rcr
cmp
jb
pop
cs
xchg
add
dec
jp
aaa
push
add
shr
mov
or
dec
lcall
inc
inc
mov
push
daa
cs
xchg
pusha
insl
add
bound
dec
loope
stos
adcb
es
fdivrs
cltd
ljmp
jge
jmp
jns,pt
lcall
int
std
pop
insb
shlb
sbb
xchg
cwtl
or
lcall
cmp
push
enter
cmc
andl
inc
push
mov
sub
js
jl
sbb
test
addb
ret
and
scas
mov
lcall
or
aas
push
outsl
insl
stc
inc
out
cwtl
and
fwait
scas
lods
dec
lea
pop
sti
cmc
jno
inc
mov
mov
xchg
lds
dec
xchg
lahf
mov
sarb
int3
test
lahf
inc
pop
or
addr16
fs
cmc
xchg
cld
push
cld
lds
mov
mov
cltd
mov
jne
mov
sub
clc
jae
shrb
out
jbe
cmp
jmp
jne
int
pop
loope
call
cmp
mov
fadds
jae
aas
xor
fistpll
fbld
inc
popf
es
ret
cmp
mov
repnz
mov
dec
cmp
add
jns
jp
add
and
cmpsb
adc
out
lret
cli
clc
jo
dec
adc
inc
push
cld
dec
std
popf
fcmovne
dec
dec
sarl
out
push
push
mov
frstor
inc
xor
xchg
lret
or
imul
and
cltd
push
mov
cwtl
ret
sub
jno
ja
pop
aas
cmp
lahf
rcll
push
add
cltd
mov
mov
jb
nop
aam
xor
aad
dec
adc
adc
dec
and
lods
dec
adc
cmpb
dec
pusha
cld
fsubr
sub
jg
jns
xlat
push
js
push
rorb
loopne
orb
imul
rcll
inc
push
push
scas
test
scas
xchg
mov
and
pop
pushf
sar
into
xchg
dec
popf
push
test
js
sti
xor
push
dec
movsb
scas
adc
xchg
jg
pop
inc
pusha
dec
das
into
jns
mov
cltd
sub
loopne
out
sbbl
xchg
or
dec
dec
mov
inc
cmp
jl
shlb
mov
push
jmp
pop
adc
jbe
test
repz
out
jmp
in
xor
mov
mov
es
mov
pop
mov
rcr
hlt
inc
ret
lret
iret
mov
les
les
mov
in
add
add
ds
adc
pop
push
jns
ret
fisubrl
mov
inc
mov
das
mov
cld
leave
test
imul
daa
in
jae
sub
add
fs
in
and
subl
adc
or
mov
mov
mov
inc
out
pop
inc
pop
mov
xchg
imul
fldl
call
xor
rcpps
xchg
mov
push
jp
rol
xorb
gs
div
mov
into
enter
mov
nop
lods
pop
rorb
mov
and
xlat
pop
sub
jns
sbb
mov
cmp
fisttpl
mov
notl
cmp
sti
orb
cmp
or
push
call
sahf
sbb
outsb
inc
out
push
cmp
mov
inc
cmp
mov
cmp
movsl
sbb
movsb
mov
mov
mov
out
xor
popf
pop
mov
shr
fiaddl
sbb
cmc
xchg
push
xchg
into
push
test
std
pop
andl
cwtl
shll
lret
fbstp
inc
mov
jb
lea
and
fdiv
cwtl
dec
dec
adc
loop
js
out
aas
push
dec
lods
sbb
stos
jne
ljmp
mov
pop
neg
mov
cmp
cmp
mov
mov
and
lret
pop
pop
mov
jo
dec
push
ret
pushf
repz
and
cltd
mov
outsb
ss
mov
movb
aad
test
or
jmp
das
inc
cs
jne
xchg
je
inc
mov
cmp
fdivrl
dec
jns
mov
addb
cmpsl
dec
xchg
xchg
xor
push
push
in
dec
dec
enter
pop
out
movsl
js
outsb
fisubrl
icebp
add
and
int
adc
xorb
cmp
sbb
shll
cmp
jnp
jecxz
lret
and
fmuls
xor
leave
ds
xchg
push
pushf
cmpsl
stos
mov
pop
scas
cld
cmp
sbb
cmp
repnz
sbb
sub
add
mov
xchg
ljmp
jmp
rcll
cmpsb
fwait
push
mov
stos
outsl
cmpb
cmp
sbb
pop
ret
or
pop
xchg
adc
xchg
fisubrl
aam
cmp
icebp
sub
xor
add
dec
or
jg
sbb
out
jo
sub
adc
arpl
test
sbbl
xor
add
ds
rclb
and
nop
mov
adc
jge
pop
jge
pop
hlt
dec
sub
subl
push
or
mov
jb
mov
bound
icebp
cs
test
mov
scas
inc
imul
mov
pusha
adc
stos
dec
ljmp
push
fcoms
or
cmp
ds
xor
sub
xlat
push
or
shlb
push
lea
enter
inc
fidivs
popa
xchg
in
shll
push
clc
pop
loope
xchg
sbb
rcrb
mov
fsubrs
out
pop
sbb
loop
add
icebp
dec
mov
fsubrl
cmpl
idivb
scas
dec
add
mov
sub
aam
jmp
repz
xchg
ja
add
add
in
mov
xor
add
pop
or
mov
mov
iret
out
jbe
mov
test
cmc
sarb
cmc
cwtl
stos
sub
or
decl
out
ret
pop
xchg
fiaddl
fistpl
hlt
or
mov
adc
cli
pop
pop
cmp
mov
pusha
in
cmp
mov
mov
ds
aas
add
cwtl
outsl
mov
hlt
loopne
imul
xlat
push
mov
and
xchg
xchg
fwait
xor
mov
jo
cmpsb
inc
nop
test
mov
les
lret
push
in
jns
sub
pop
in
repnz
call
mov
or
push
aaa
sbb
test
mov
sbb
sbb
sbb
cmp
icebp
pop
aas
je
pop
or
sub
push
adcb
ficomps
in
mov
das
add
push
imul
mov
push
lcall
lds
dec
cmp
fs
sbb
push
xchg
or
jns
or
cmpsb
inc
xchg
out
xor
lret
adc
push
out
and
arpl
fnstenv
jmp
jno
sbb
fs
cmp
scas
cs
lahf
xchg
sbb
sub
fwait
or
movsl
cltd
xchg
lock
scas
movsl
lcall
repnz
shrl
movsb
fstps
xlat
int3
mov
icebp
pop
sarl
push
cli
mov
cmpsl
jbe
repz
lcall
add
xor
nop
cmc
mov
sbb
push
je
scas
loope
lea
lret
dec
cmpsl
repz
and
push
sub
int
jmp
cld
icebp
xchg
imul
faddp
cld
xchg
cmp
sbb
push
lret
pop
outsb
mov
out
lahf
daa
lods
mov
shl
out
pop
fst
jg
dec
call
nop
cwtl
inc
arpl
and
push
in
mov
clc
pop
shlb
repz
cltd
fcompl
sub
lods
adc
xchg
jb
js
fadd
inc
mov
movsl
dec
mov
inc
pop
scas
loope
mov
pushf
ficoml
dec
sbb
add
mov
mov
xchg
int
shll
mov
jns
adc
xor
out
push
int3
xchg
xor
stos
repz
daa
popf
shr
fidivrs
adc
test
adc
aad
or
or
fbstp
in
xchg
add
cmp
pop
mov
jno
mov
inc
in
in
insb
push
cmp
testl
pop
mov
ret
xchg
and
adc
sub
mov
jp
xor
pop
or
xchg
decb
ret
cld
push
js
push
dec
xor
mov
fstl
push
jne
xchg
scas
int
or
pop
mov
mov
pop
lods
sub
iret
add
mov
testb
dec
push
pop
ss
lahf
cmp
fdivl
int3
push
pop
sub
nop
lods
xchg
add
adc
mov
sbb
int3
sarb
sti
mov
rorl
rclb
stos
sub
pop
ja
dec
int
and
rcl
sti
leave
fnstcw
pop
inc
test
xor
pop
push
mov
push
ljmp
fwait
adc
insl
jg
mov
xchg
push
loop
adcb
adc
cmpsb
jns
mov
or
mov
mov
push
shrl
mov
adc
popf
and
movsb
imul
cmp
cli
xchg
and
jo
and
or
pop
das
push
es
add
roll
cmp
frstor
inc
sbbl
imul
sbb
pop
and
movsl
popa
or
push
sti
sub
mov
aad
leave
std
cltd
xor
or
mov
rorb
sarb
jb
test
jg
adc
push
scas
mov
ret
imul
call
mov
xchg
dec
test
pushw
adc
cmc
jo
dec
sub
in
in
mov
lods
xchg
mov
movsl
jl
int3
psraw
dec
and
adc
jmp
mov
je
adc
xchg
movsl
dec
cmpsl
mov
fisttpl
xchg
in
mov
hlt
xchg
mov
in
xor
lahf
and
ljmp
dec
fstcw
cltd
std
rcl
cli
adc
push
mov
je
push
scas
fsubrp
repz
sub
test
lds
test
les
aaa
mov
cmp
out
mov
pop
add
popf
lret
or
xchg
or
push
add
ljmp
les
mov
movaps
ss
mov
and
shll
sbb
xor
cli
lcall
jb
xchg
or
xor
mov
pop
cs
test
cmp
adc
clc
pop
sbb
adc
loope
rorb
mov
or
cmp
ret
icebp
fmul
push
mov
dec
adc
xchg
inc
and
mov
cmp
addr16
xchg
adcl
cmp
repnz
fsubp
jecxz
lret
fnsave
dec
jge
aad
xor
sub
mov
filds
push
inc
mov
push
int3
ljmp
jl
add
mov
mov
lret
mov
cmp
dec
ja
or
dec
xchg
das
and
test
mov
dec
inc
stc
add
cmp
push
xchg
in
xor
xor
lods
cli
mov
lds
nop
rorb
stc
mulb
pop
or
bound
jo
sbb
repnz
lods
lods
and
mul
pop
lahf
dec
std
and
jge
imul
int
pop
jl
mov
pop
nop
cmp
jge
mov
push
jnp
repnz
movsb
xor
hlt
lds
stos
mov
and
push
popa
dec
fwait
setne
and
mov
cli
xchg
push
add
rolw
jmp
inc
adc
fldt
jl
test
fs
in
push
sti
mov
test
add
cmp
test
movsb
adc
nop
lods
pop
in
xor
xor
mov
mov
xlat
int3
insl
add
mov
shlb
pop
cmpl
mov
mov
fdivrs
les
gs
mov
sbb
sub
adc
mov
pop
in
cmc
out
inc
aam
xor
int
and
hlt
scas
inc
or
dec
and
fistpl
pushf
sbb
push
outsl
jnp
fwait
inc
aas
adc
scas
jg
sbb
add
mov
xchg
daa
popa
iret
mov
fxch
cmp
push
fldl
sub
mov
outsb
inc
nop
movsl
push
fldt
subb
inc
stos
xor
mov
pop
push
push
push
or
sbb
jbe
in
ret
xlat
leave
dec
push
das
dec
xor
xor
sbb
nop
pop
xchg
mov
mov
cmpsb
pop
push
adc
push
dec
sub
ds
mov
test
push
insl
pushf
jmp
sbb
sti
scas
jp
push
stc
jbe
aad
pop
mov
scas
jle
inc
mov
xorl
sbb
xchg
pop
lods
lahf
jnp
mov
loopne
or
inc
fs
push
adc
jl
and
fwait
jne
repz
es
test
pop
aas
dec
add
shl
jle
test
mov
adc
scas
push
xorb
test
roll
adc
cs
movl
pop
or
add
adc
add
sub
or
push
dec
fwait
mov
jne
xorb
xor
push
mov
jns
push
xchg
or
popa
xchg
cmovae
dec
into
and
xor
aaa
mov
mov
cmpb
movsl
inc
scas
pop
cmp
xchg
adc
bound
inc
inc
test
jbe
mov
pop
adc
xor
push
int
fnsave
pop
sbb
push
cmp
adc
popa
add
jp
mov
add
fnstcw
sub
gs
cmp
test
movsl
shll
cmp
mov
add
adc
test
or
xchg
lds
mov
push
movsl
mov
inc
or
jg
movsb
xchg
or
test
xlat
add
sub
xchg
stos
iret
inc
dec
stos
adc
sbb
inc
mov
mov
sbb
jno
pop
loope
push
and
and
pop
fisubrl
lock
lret
push
or
leave
jns
repz
dec
mov
xorb
jne
inc
hlt
scas
aaa
adc
pop
out
pusha
xchg
adc
jle
adc
cld
xorb
out
rolb
xlat
mov
bound
ljmp
add
loope
sub
imul
mov
mov
pop
sub
cwtl
inc
movsl
add
cs
rcll
mov
xchg
pop
fimuls
push
xchg
ss
pop
sub
add
cmp
stc
mov
enter
jno
inc
xor
leave
add
jnp
mov
inc
in
xor
add
push
test
shlb
movsl
mov
fmulp
xchg
call
clc
xor
xor
fwait
sti
in
imul
cmp
jmp
inc
lcall
js
fcmovnbe
xchg
dec
iret
jl
test
add
jne
inc
sbb
out
int3
xchg
mov
incb
ja
pop
or
mov
insb
int3
mov
inc
bound
jecxz
pop
je
xor
pop
popa
lock
push
mov
gs
mov
push
sahf
pop
in
stos
jl
jns
lahf
jg
dec
into
sahf
add
arpl
insb
or
fwait
and
mov
adc
xchg
icebp
bound
sbb
icebp
mov
xchg
aad
outsl
pop
and
jecxz
lea
mov
dec
or
orb
lea
jg
outsl
out
xchg
scas
cmp
pop
imul
test
enter
sub
mov
rol
mov
lret
push
push
xorps
lahf
cmpsl
mov
xchg
mov
or
cltd
pop
orl
mov
xor
lea
lret
out
push
dec
jno
jno
xlat
ljmp
xchg
shr
icebp
jno
mov
jns
inc
shr
imul
cli
test
jbe
call
and
out
dec
inc
dec
movsb
add
or
cmc
jmp
and
int
ja
and
sbb
lods
sbb
dec
pop
and
mov
push
sarb
nop
cmp
lcall
inc
sarb
pop
mov
jbe
cmpsb
ds
push
and
in
cmpsb
mov
xor
rcrl
test
fldenv
add
mov
sahf
sbb
or
jl
icebp
cmp
stos
int3
test
in
mov
ds
sub
jge
imul
jle
pop
call
ret
cmpl
testb
pop
repnz
sub
xchg
xlat
ficomps
mov
negl
mov
cltd
xchg
in
fmuls
push
lea
arpl
loope
sub
mull
hlt
jne
mov
cmp
inc
test
mov
mov
ljmp
in
dec
or
adc
cmpsb
dec
xchg
fwait
jl
lcall
push
repnz
jp
jb
mov
mov
add
js
xor
sbb
mov
xor
fidivrl
mov
idivl
push
xlat
decb
adc
loopne
xlat
imul
aad
pop
cmp
mov
cmp
xlat
insl
xor
mov
out
push
addr16
incl
clc
adc
pop
sbb
pushf
jg
outsb
mov
clc
jg
sbb
int
in
pop
push
and
sbb
mov
push
inc
xchg
pop
or
in
nop
dec
loop
dec
jns
xchg
add
test
movsl
push
mov
push
lods
add
in
in
outsb
ret
add
mov
jnp
mov
adc
and
mov
inc
ja
adc
mov
push
mov
jnp
fisubrl
mov
inc
xchg
sub
sbb
scas
mov
aam
xchg
movsb
in
xchg
and
xlat
or
mov
addb
xor
xchg
add
cs
add
xchg
lds
pusha
scas
dec
ljmp
pop
jae
xor
data16
inc
outsb
push
cltd
imul
cmp
stos
mov
fstpl
out
fdivrl
push
iret
lret
enter
fldcw
lods
orb
mov
push
lret
xor
into
out
dec
leave
jns
mov
xor
pop
aam
jle
iret
mov
or
dec
sub
xor
out
and
in
xchg
fwait
mov
push
push
dec
fidivrl
int
loopne
jge
or
pushf
lcall
std
mov
enter
adc
xor
repnz
xchg
cmpsb
adc
dec
fdivrl
lahf
mov
inc
mov
cmp
fisttpll
jecxz
stc
aas
cltd
repz
or
sbb
xor
xchg
inc
dec
mov
outsl
data16
jbe
adc
loopne
sub
jne
lcall
jmp
xchg
and
cmc
inc
sub
pop
adc
xor
movsl
cmp
pop
orl
lcall
cli
mov
arpl
lahf
loope
inc
sbb
arpl
add
aaa
inc
insl
je
pop
je
aas
lods
and
outsl
scas
arpl
xor
aaa
and
push
dec
es
loop
mov
lds
out
push
movaps
jae
out
jo
cld
fstpl
subl
aas
pop
cmp
loop
outsl
enter
inc
faddl
push
jo
icebp
mov
in
push
jns
xchg
data16
pop
fdivrs
out
hlt
shl
cmc
mov
or
xor
mov
std
dec
hlt
add
mov
mov
jl
loop
xor
add
cmp
xchg
lods
mov
lret
addb
stos
aam
cmc
nop
jns
mov
pop
xchg
sub
fistps
pop
mov
cmp
dec
jp
imul
fisttpll
mov
adc
outsb
clc
mov
xchg
mov
adc
push
ret
int3
add
subb
push
sti
into
dec
mov
insl
dec
add
out
xor
call
popf
loope,pt
fnsave
mov
jg
in
xchg
loope
sub
push
mov
lock
fiaddl
mov
xchg
gs
sub
daa
shlb
testb
out
in
rcrl
xorb
enter
jl
insb
fisubs
xor
jecxz
cmpsb
cmp
add
shlb
repnz
iret
and
lock
lret
icebp
sub
jmp
ficoml
test
mov
cmp
jo
and
mov
lds
jle
cmp
mov
mov
arpl
pop
fsubs
xchg
cmovb
std
xchg
ret
mov
call
xchg
in
arpl
out
sbbb
aam
lret
popa
pop
test
mov
sarb
xchg
faddl
add
add
idivl
and
adc
aaa
jmp
jb
mov
sbb
mov
inc
inc
jno
pop
pop
xchg
aaa
push
imull
ret
pop
imul
popa
or
jnp
mov
or
ja
shlb
stos
mov
adc
insb
stos
lret
imul
mov
xor
push
sub
push
pop
pusha
insl
fisttps
pop
cmp
stos
mov
mov
ret
aam
and
push
pop
mov
iret
mov
xlat
jp
jmp
push
aad
xchg
aas
sbb
push
test
jmp
inc
test
mov
xchg
mov
mov
inc
sub
jnp
test
rorb
sahf
xor
xor
mov
lock
cmp
push
sub
cmpsb
ror
mov
mov
les
ja
leave
jecxz
dec
into
sarl
jmp
mov
mov
jbe
dec
and
ss
lods
jb
or
mov
xor
fbstp
pop
stos
dec
mov
rcrb
ljmp
cmpsl
xchg
fistps
cs
out
int3
ljmp
xchg
cwtl
xchg
test
leave
adc
clc
pop
fs
das
jge
clc
data16
sub
mov
adc
xchg
ljmp
or
mov
mov
cmp
mov
adc
aam
cwtl
jno
jne
enter
jg
add
mov
fidivs
loopne
pop
and
pop
or
jnp
xlat
mov
movsb
push
jae
jge
out
jmp
pop
dec
sti
adc
mov
out
push
add
and
cmp
dec
pop
push
dec
aas
orb
mov
lea
popf
push
jecxz
mov
pop
cmp
mov
jbe
pcmpgtw
mov
lock
pop
leave
xchg
mov
nop
sbb
iret
mov
jbe
pop
out
xor
repnz
push
mov
lods
mov
shll
mov
mov
push
clc
les
ret
xchg
fcomps
add
mov
movsb
sar
adc
xchg
lahf
inc
mov
arpl
mov
sbb
pop
outsl
pop
imul
leave
in
adc
subl
scas
loop
ret
sub
mov
jbe
scas
ljmp
test
push
push
popa
mov
cld
pop
aam
push
nop
push
xlat
cmc
shrl
loope
lahf
add
pop
fisubrs
aad
rol
in
or
cmpsb
lret
inc
add
loope
cmpsb
scas
sahf
pop
roll
push
leave
iret
sbb
sti
mov
sbbl
mov
sub
popa
mov
mov
mov
adc
xor
loope
arpl
adc
rcrl
dec
loopne
dec
mov
imul
cwtl
sub
cmp
sub
inc
cmp
movsl
in
int3
cld
dec
pop
fwait
cwtl
repz
std
pop
ja,pn
insb
stc
xor
test
mov
mov
xor
mov
pop
lahf
sub
fs
push
dec
icebp
xor
xchg
outsb
jecxz
adc
push
sub
dec
leave
add
vpunpcklwd
dec
mov
dec
int
dec
jp
test
movmskps
cs
push
xchg
idivb
arpl
mov
xor
jl
push
mov
mov
insl
mov
cli
mov
ret
pop
aam
mov
popf
stc
enter
push
out
push
or
int
push
test
shlb
cmp
mov
cmp
pop
lcall
es
xlat
cmp
fnstsw
cmpsb
push
push
push
mov
jae
mov
es
jb
std
xchg
ja
xchg
pop
mov
std
loopne
xchg
cli
stos
xor
lods
daa
dec
les
mov
adc
and
adc
std
movsb
mov
pop
ret
cmp
pop
xchg
or
js
in
ror
lods
add
sti
push
xchg
push
idivb
ja
cld
mov
sbb
jecxz
shr
mov
fcos
sbb
ret
pusha
bound
pop
ret
add
xor
jns
push
mov
xchg
std
js
xchg
vcomiss
inc
push
and
inc
push
pop
inc
int
xor
arpl
movsb
cmc
scas
sub
cli
call
addr16
inc
mov
fwait
enter
insl
outsl
iret
jmp
int
test
jo
and
fbld
jbe
icebp
outsb
push
stos
loop
push
ljmp
inc
add
insb
dec
inc
sub
or
iret
cld
les
push
adc
push
les
and
bound
mov
mov
add
mov
lock
or
stos
push
mov
gs
test
push
dec
mov
outsb
push
add
jnp
pop
dec
stos
gs
jno
cmp
sbb
std
jge
inc
orl
mov
aad
xchg
sub
ror
xor
pop
imul
pop
es
push
popf
inc
and
mov
imull
subb
aad
dec
or
xchg
mov
lods
lds
cmp
sbbl
sub
std
mov
mov
faddp
cltd
xchg
sahf
dec
sbb
mov
cld
in
jmp
cmp
les
lcall
sahf
clc
jge
adc
scas
aas
and
adcl
push
and
jp
jbe
int
jno
or
mov
xchg
data16
imul
cmp
cmp
shlb
mov
shll
repz
mov
in
leave
cli
pushf
and
insl
scas
icebp
push
push
and
int
mov
add
push
fwait
push
mov
pop
dec
xor
adc
test
popf
sbb
repnz
dec
jl
fistpll
cmp
call
and
popf
mov
pop
lret
test
shl
sahf
lea
push
jp
push
leave
pop
adc
iret
push
push
call
mov
arpl
sbb
addr16
pop
enter
lahf
test
test
cmp
fdivr
pop
inc
int
iret
add
cmpsl
push
rorl
incb
out
adc
lcall
xchg
loope
cmp
dec
out
sarl
dec
ja
dec
iret
mov
sbb
push
inc
or
mov
into
inc
inc
sub
dec
cltd
cmp
sub
scas
mov
pop
les
ret
mov
idivl
xchg
sbb
inc
inc
dec
pushf
adc
push
fidivl
cmp
scas
cltd
inc
mov
nop
pop
jl
orb
lret
loope
ljmp
mov
mov
lock
sub
scas
aas
in
in
cli
in
es
rolb
insl
lods
sbb
fists
repz
out
iret
popf
jg
push
jle
push
call
sub
insl
faddp
pop
arpl
ret
xchg
js
mov
jmp
ja
push
es
mov
and
leave
mov
sub
mov
movsl
subl
fwait
inc
movsl
je
inc
add
pop
push
mov
ss
jae
inc
cmp
sarb
sbb
mov
jecxz
je
dec
and
cs
out
adcl
xchg
inc
lock
inc
dec
into
or
or
pop
xchg
pop
inc
das
in
das
cmp
stc
test
jnp
icebp
pushf
add
shll
sti
js
adcb
cmp
xchg
mov
cmp
daa
std
jo
jg
pop
jecxz
sti
pop
shll
pop
adcb
and
jae
and
rolb
lcall
pop
mov
adc
jmp
xchg
push
adc
adc
ret
test
xor
add
lock
hlt
int3
xchg
jl
cmp
cs
enter
and
dec
jge
daa
dec
xchg
lods
add
dec
and
int3
in
out
cmp
add
xlat
pushw
das
dec
or
push
or
mull
push
fs
repnz
add
push
push
in
popf
and
xor
rcr
jno
int
xor
dec
bound
or
inc
psadbw
js
mov
lcall
nop
dec
cmp
into
mov
pop
cmc
jp
and
mov
pop
sub
inc
xchg
repnz
js
sbb
shrl
sub
pop
and
cmpsl
mov
pop
add
or
scas
pop
ret
cmpsb
add
xchg
lea
add
es
xchg
adc
mov
push
dec
hlt
pop
adc
lahf
fiaddl
cmp
cmp
aaa
pop
sub
mov
adc
movsl
push
pop
xchg
or
jbe
int3
mov
sbb
das
lcall
icebp
xchg
imul
cmp
fdivrl
push
rolb
insl
out
stos
into
pop
xchg
adc
or
repnz
xor
inc
adc
lock
jb
adc
cmp
inc
sahf
testb
sbb
insl
fldt
inc
into
push
fs
push
mov
repnz
lods
clc
leave
out
test
and
jg
inc
movsl
jle
pop
add
das
jle
imul
add
das
cli
jno
and
addl
inc
mov
push
mov
mov
mov
cmpsl
xor
sbb
sbb
push
push
ja
adc
mov
add
mov
stos
cmpsb
adc
and
pop
sbb
test
xor
std
dec
aam
xor
iret
imul
and
pop
rol
xor
fsub
lds
inc
mov
into
pop
and
aam
jecxz
jbe
std
lret
or
std
cmp
lcall
movsb
pusha
shl
scas
cmp
cwtl
xacquire
jl
cmc
mov
inc
mov
jp
sahf
lock
hlt
mov
jae
sub
fwait
idivb
mov
std
inc
outsl
aad
pop
mov
std
rcr
cwtl
sbb
push
xor
ds
and
icebp
sqrtps
push
loop
sub
inc
les
sti
sbb
sub
lds
add
gs
je
mov
ja
dec
cmpsb
ret
cmp
test
push
in
test
repz
ss
jge
dec
lcall
in
ja
xorb
add
fdivrs
or
push
pop
popf
test
adc
inc
fcomp
inc
ret
dec
push
idivb
mov
push
enter
jg
push
push
xchg
cmp
add
pusha
jecxz
decl
xchg
jae
mov
cltd
dec
mov
xor
test
lret
ljmp
push
dec
mov
js
push
adcb
mov
ror
lods
addr16
rcll
xchg
les
sub
jl
dec
sub
push
les
fwait
and
and
xorl
bound
jno
mov
hlt
insb
lock
std
mov
cmp
xor
cmpsl
xor
push
adc
dec
cwtl
lock
jmp
push
dec
int
jle
loop
popl
xchg
mov
push
dec
fadds
das
xchg
das
mov
add
jmp
lret
int
xchg
sbb
and
mov
popf
inc
hlt
sbb
jl
push
lcall
xor
shl
push
inc
shrd
das
push
mov
mov
fistpl
fisttpll
cmpsl
jmp
gs
cld
lods
cmp
ret
add
or
andl
lahf
dec
rcrl
popa
inc
idiv
sub
xchg
pop
adc
dec
push
and
adc
push
pop
mov
mull
mov
mov
sub
sub
jle
mov
rcll
sti
pop
enter
mov
jl
push
xor
popa
mov
or
scas
test
test
mov
clc
mov
push
lock
cmp
mov
aad
pusha
outsb
mov
mov
pop
dec
xor
and
scas
cmp
sbb
nop
rcrb
test
jge
and
push
fwait
nop
shr
or
stos
daa
xchg
jns
insl
inc
push
lret
rorb
adc
fldt
jnp
and
push
xchg
lods
fs
cld
sub
jcxz
sti
cld
fcompl
fisubrs
and
rorl
mov
jecxz,pt
and
mov
cmpsl
test
pushf
mov
dec
addr16
popf
out
jmp
cltd
adc
jbe
adc
inc
sub
xchg
mov
add
mov
lcall
jle
xor
lods
xor
je
sub
fimuls
cli
pminsw
add
push
mov
dec
jl
xchg
xor
pusha
xor
sub
mov
aaa
loope
pop
and
or
out
test
or
popf
insl
sub
xor
ret
xchg
clc
in
jp
pop
adc
lds
nop
mov
inc
outsl
call
sbb
or
out
fbld
mov
fbstp
mov
adcb
cmp
dec
mov
in
and
gs
adc
jmp
cmpsb
insb
mov
or
xlat
inc
scas
or
sbb
push
sbb
xchg
test
lret
rclb
stos
add
insl
repnz
push
inc
mov
dec
jno
xor
sub
add
adc
mov
cmc
jg
sub
mov
push
inc
out
aam
pop
jo
pushf
call
fcoml
loopne
xchg
mov
fildll
hlt
dec
scas
imul
pop
stc
clc
lods
mov
sbb
cmp
push
sbb
ret
sarl
sub
mov
mov
fs
xor
or
xchg
mov
pop
out
or
push
cmpsl
xor
in
cmc
insl
cmp
adc
cmp
shrl
push
add
mov
pop
xchg
mov
sbb
jmp
jecxz
ret
dec
repz
inc
inc
inc
mov
inc
out
loop
fs
sub
cmpl
mov
or
xchg
cld
dec
ds
sub
fists
jmp
loop
xchg
repnz
repnz
and
jecxz
js
mov
and
cmp
or
inc
lahf
and
sbb
sbb
xor
dec
mov
and
inc
inc
popl
xor
sti
jle
push
push
movq
xor
mov
stos
sub
push
push
jle
stc
aaa
adcb
ret
cmp
lods
insl
ret
inc
xlat
xchg
push
leave
loope
btr
aam
leave
push
sti
sbb
pop
je
jp
jae
pop
data16
sub
lret
xor
stc
inc
xchg
enter
stc
cli
cmpsb
lcall
scas
cltd
fstl
mov
aam
inc
cltd
cwtl
dec
cs
out
call
dec
lret
adc
adc
cmp
mov
mov
jb
insl
jns
pop
add
jmp
inc
inc
jns
adcl
dec
into
mov
bound
mov
adc
rorl
mov
mov
fnstenv
mov
fidivrs
outsb
iret
sub
cmp
or
push
insl
mov
paddsb
bswap
sbb
and
lcall
addr16
xor
sub
mov
scas
shlb
sbb
pop
daa
hlt
data16
loopne
das
mov
add
pop
fwait
es
ljmp
and
aas
ds
stos
xchg
push
fs
andb
jecxz
lock
pop
push
ret
sbb
sub
and
and
pushf
test
mov
bound
mov
popa
mov
rolb
mov
cs
ret
popa
jb
lods
and
fndisi(8087
andb
dec
add
addr16
out
imul
test
xchg
sub
sbb
xor
jae
testl
jae
pop
test
mov
or
push
pop
pop
sub
and
insb
adc
adc
jg
mov
fldt
dec
sbb
xor
sbb
sarb
stos
adc
je
loopne
loope
cwtl
pop
aam
sub
aaa
and
inc
pop
clc
fistpll
sub
notl
mov
jns
jne
sarb
jecxz
shr
or
sub
jnp
xchg
stos
mov
aaa
mov
sub
sahf
mov
js
xlat
push
sbb
shrl
add
and
mov
es
pusha
dec
mov
jo
lret
mov
mov
dec
inc
add
daa
fs
das
movsl
xchg
push
xor
lret
jae
inc
out
cmp
hlt
ds
add
jle
out
sbb
repz
lahf
into
jmp
push
lret
sub
test
out
push
test
xlat
and
lock
fnstenv
cmp
push
je
ret
mov
loop
mov
mov
xchg
mov
pop
ja
push
inc
xor
out
mov
jmp
jb
fiadds
mov
mov
into
clc
mov
jno
imul
les
push
aas
popf
data16
inc
mov
movsb
mov
insb
lea
testb
mov
inc
test
cmp
pop
sub
and
inc
xorb
push
pop
sub
sub
mov
jno
xchg
push
push
mov
sbb
iret
and
scas
daa
pop
sub
inc
std
mov
dec
leave
shl
xor
inc
sahf
mov
push
push
adc
mov
push
and
imul
lret
mov
imul
enter
fwait
mov
stos
cld
mov
jo
clc
out
pop
adc
or
jge
jae
adc
sub
loope
lea
and
sbb
dec
dec
xchg
sbb
jmp
fistl
insl
mulps
dec
pop
in
add
mov
loope
icebp
jno
in
adc
add
mov
jecxz
fidivrs
add
mov
aaa
stc
mov
ret
adc
arpl
loop
int3
insl
inc
jmp
insb
ret
popa
cld
mov
out
lahf
dec
jl
xchg
pop
in
imul
je
in
or
push
out
pop
jnp,pt
jno
rcr
fistps
mov
push
fwait
and
stos
flds
repz
loop
pushf
call
aaa
lret
and
incb
or
out
xor
incl
add
jae
dec
out
in
pop
inc
or
clc
and
xorb
push
test
and
leave
xchg
push
out
leave
sub
or
mov
pusha
fsin
sbb
dec
popl
adc
jg
iret
mov
aas
sbb
and
icebp
insl
jae
shrl
dec
popf
pop
filds
and
sahf
das
jmp
daa
or
push
sbb
xchg
push
pusha
mov
int3
xor
push
nop
cltd
and
loope
fwait
cs
xor
bound
enter
adc
and
jge
dec
mov
cmpl
pop
push
mov
mov
lods
or
cli
mov
mov
jg
dec
jmp
mov
jb
adc
add
xchg
xchg
adcb
inc
mov
jp
test
adc
xchg
enter
dec
sbb
idiv
jecxz
loope
pusha
mov
lret
cmp
sbb
lods
call
loope
out
sbb
insb
stos
outsb
cmovnp
jnp
mov
push
or
repz
iret
popf
mov
cli
testl
daa
mov
cmp
test
hlt
ficoms
mov
sub
dec
mov
jne
xor
stos
mov
jae
cmpl
lahf
imul
iret
flds
sbb
lods
mov
cmpsb
adc
jno
subl
inc
mov
out
jne
dec
mov
pop
add
adc
add
and
and
sbb
pop
xchg
sbb
jge
adc
ljmp
bound
int3
insb
mov
fistpl
push
mov
jne
xchg
cli
repnz
mov
and
nop
daa
mov
jb
test
js
lock
out
mov
movsb
and
push
cmc
aas
or
mov
mov
insl
aad
rcl
testb
cmp
mov
mov
xor
sbb
cmp
aas
xor
xor
rcrb
and
dec
scas
jae
inc
cmp
jmp
scas
jl
rclb
cli
fldcw
sbb
stc
pop
xchg
popf
std
loopne
popf
adc
cwtl
repnz
clc
jle
insl
movl
inc
and
xor
popa
mov
jle
sahf
call
jnp
je
mov
xor
mov
sub
ljmp
jecxz
jbe
imul
mov
pop
inc
shll
push
loop
push
inc
fstp
imul
adc
cmpsb
insb
adc
cwtl
pop
mov
into
cwtl
sarb
mov
outsl
sbb
cltd
mov
mov
rcr
mov
loop
aas
or
or
or
pop
and
sbb
xor
jle
mov
das
cwtl
call
jle
dec
enter
fs
fmuls
sti
aad
icebp
xchg
or
movsl
fistpl
scas
inc
xchg
mov
mov
cltd
arpl
push
shrb
dec
pushf
lret
cmp
test
dec
push
aaa
je
call
xlat
shlb
aaa
dec
jmp
pop
cld
xchg
cli
dec
rorl
pop
inc
ret
pushf
dec
js
sbb
mov
xchg
xchg
mov
ljmp
push
ljmp
in
fistpll
cmp
subb
mov
mov
xchg
and
pop
sbb
in
jo
fs
call
and
xor
leave
jno
lods
sub
js
pusha
mov
repnz
mov
mov
cmpsb
out
push
inc
arpl
sub
bound
mov
scas
movsl
dec
mov
push
mov
stc
add
sbb
aam
xchg
jecxz
into
test
fsubs
inc
dec
fwait
sbb
aaa
repz
ljmp
into
jl
lods
aaa
pop
jmp
mov
dec
mov
fucomi
orl
mov
out
xchg
dec
adc
lds
imul
fdivrl
pushf
jmp
adc
shll
cmp
sbb
jl
adc
fldenv
aam
out
nop
mov
inc
adcl
dec
jb
xor
mov
xor
push
in
js
xor
jg
or
and
dec
mov
add
xor
lods
xlat
dec
rcl
pop
lock
fs
mov
xlat
cmp
iret
cmpsb
inc
orl
xchg
pusha
cld
icebp
xlat
and
mov
sti
ljmp
mov
fstpl
mov
add
in
lock
subb
loop
push
cmpl
mov
dec
sbb
xor
add
test
in
cmpsl
push
adc
out
adc
imul
int3
ror
dec
inc
cld
cli
inc
sbb
jnp
or
sar
nop
or
adc
xchg
outsb
dec
cmp
push
inc
mov
insl
pushf
cmpsb
ret
inc
pop
in
mov
hlt
dec
js
push
sbb
outsb
xor
sub
mov
cmp
xchg
xor
or
mov
stos
sahf
xchg
dec
fsubs
adc
outsl
pop
or
into
out
pushf
test
popf
and
sub
outsl
pop
xchg
fildl
pop
mov
and
cs
sub
notb
test
and
or
sbb
aaa
icebp
add
int
das
mov
inc
xorb
adc
sbb
dec
cld
lret
lret
les
test
sti
ja
adc
dec
shll
inc
cmc
int
push
pop
xchg
sub
add
adc
jo
push
daa
int
sub
lahf
popf
fisubs
scas
cmp
mov
pushf
push
mov
sbb
mov
movsb
sub
mov
and
pop
jno
push
xchg
sbb
mov
lea
xchg
jns
push
pop
pop
push
inc
fidivrl
test
jne
pop
sub
mov
sub
xor
stos
shl
add
and
adc
or
and
or
jne
push
faddp
loopne
mov
dec
pop
test
add
xor
pop
jno
inc
lds
imul
andnps
adc
jno
out
loope
xor
lret
data16
test
mov
add
loopne
inc
or
les
inc
outsl
pop
mov
and
mov
iret
rcr
pop
add
add
loop
jecxz
inc
imul
xchg
xchg
std
cmpsl
and
adc
lret
fcompl
or
push
int3
sub
fisubl
xor
cmpsb
in
xchg
ret
adc
movsl
cmpsb
sub
mov
pop
push
xchg
mov
cwtl
fcompl
push
call
rorb
add
sbb
sbb
lock
ds
hlt
stc
fdivp
out
dec
out
test
dec
pop
mov
sub
scas
jb
jnp
in
hlt
inc
fildl
daa
fcomps
test
push
add
in
dec
add
jmp
inc
inc
insb
jmp
aam
cmp
dec
ss
ret
test
mov
std
cltd
mov
in
jne
fimull
hlt
jb
pop
aam
pop
daa
dec
sub
insl
mov
hlt
jnp
pop
lods
adc
and
repnz
orb
daa
movsl
adc
jnp
jge
popa
jge
sub
dec
add
neg
push
push
push
sub
js
enter
fwait
sub
inc
cld
pop
outsb
inc
push
jp
mov
mul
mov
push
shl
cmc
fdivp
cmp
jb
test
mov
nop
andb
mov
push
cmp
fs
inc
iret
mov
cmpsb
or
movsb
imul
int3
adc
insb
sahf
mov
pop
in
cmpsb
mov
fs
mul
push
or
int3
pop
and
mov
mov
fdivl
int3
mov
and
or
leave
jecxz
push
int3
shlb
pop
jns
sahf
shlb
push
dec
pop
test
and
sub
xor
push
mov
std
sbb
add
sub
lock
stos
mov
pop
movsb
pushf
or
or
mov
shr
dec
dec
shll
addr16
mov
loopne
push
inc
out
cmp
xchg
inc
test
jb
fimuls
jno
xor
out
pop
dec
nop
or
inc
and
outsb
fcomp
mov
mov
scas
dec
lods
negl
push
loopne
je
dec
out
push
mov
jns
xor
lods
shl
xchg
adc
mov
mov
sbb
arpl
jle
cmp
jb
jg
mov
jo
shrl
xor
movsl
inc
push
pop
int3
daa
test
push
fisubl
mov
shr
fistl
pop
xchg
adc
mov
push
hlt
sub
and
into
xor
inc
test
cmp
shrb
jae
jmp
cltd
adc
mov
js
mov
pop
push
fadd
adc
cltd
rcrl
or
cmp
filds
iret
push
or
ljmp
and
cli
push
mov
rolb
aas
enter
fs
mov
stos
ljmp
sbb
stos
clc
call
fidivrs
ss
imul
adc
and
xlat
neg
in
cmp
out
es
or
rcrl
popa
addr16
xchg
in
and
dec
jp
push
mov
sbb
repz
insb
fadds
imul
inc
cmp
aam
xor
stc
jns
les
clc
stc
cmpsb
test
mov
cld
jl
cmpsl
jb
loope
cwtl
cmc
hlt
inc
or
pusha
scas
scas
mov
loopne
test
cli
es
fcompl
push
or
dec
cli
fmul
push
jl,pn
xchg
adc
arpl
scas
xchg
shlb
adc
xchg
add
hlt
negl
xorl
stos
xchg
dec
aam
mov
xchg
gs
call
out
sbb
in
sbb
jns
shlb
iret
pop
call
add
pushf
sub
jp
jbe
cmp
aaa
cli
rolb
cmp
sbb
pop
hlt
and
pop
in
inc
mov
add
scas
fstps
sbb
ja
std
shrl
loope
push
shl
test
and
bound
jmp
ret
loope
xchg
and
sbb
xor
fimull
insl
or
xchg
mov
inc
fnstsw
movsl
imul
cmp
xchg
jno
jbe
shr
or
jb
mov
dec
mov
inc
push
jp
into
dec
pushf
inc
and
jl
inc
xor
and
dec
jle
sub
test
jne
xchg
cmp
jb
jmp
int
and
cmp
mov
jae
outsb
stos
bound
in
sub
xlat
popf
push
inc
test
add
sbb
sbb
cmc
sub
popa
cltd
push
repz
xchg
insl
and
ljmp
mov
push
loopne
call
jle
or
pop
pop
dec
movsb
add
test
lods
cmp
popf
adc
lock
add
jno
add
ret
pop
sti
fisttps
adc
sbb
fidivrs
mov
enter
add
and
pushf
mov
fnsave
mov
arpl
mov
cltd
fistpll
lds
pop
rcrl
mov
lret
pop
mov
adc
jbe
cmp
push
push
cmp
out
push
mov
inc
xlat
repz
xchg
jbe
ret
ret
xchg
or
push
jecxz
mov
aad
ret
jbe
mov
repnz
push
cmp
mov
add
xor
jo
hlt
orl
inc
xchg
outsb
add
mov
mov
shr
int3
aas
sbb
psraw
les
es
addr16
jp
lret
into
xchg
mov
inc
sub
in
push
fiadds
ret
sbb
xchg
mov
ret
and
dec
out
pop
adc
lock
call
ret
wbinvd
or
stos
push
jno
aas
mov
mov
sbb
mov
xchg
loopne
out
inc
xchg
fwait
or
mov
mov
inc
dec
jo
and
xor
es
and
jb
push
loop
ret
or
xorb
in
dec
push
xchg
fists
rorl
scas
xor
jge
sbbb
add
xchg
jmp
mov
out
je
mov
fstps
inc
rcll
and
cltd
repz
fistpl
test
test
aas
es
inc
mov
mov
mov
loop
sahf
xchg
pushf
lret
push
mov
outsb
cmp
lods
xchg
aad
cmp
rorb
pop
lds
and
dec
sbb
and
clc
lcall
inc
fbstp
mov
adc
aad
call
mov
incb
pushf
add
rcrl
bound
xor
dec
mov
fucomp
cmpsb
jl
loop
push
mov
aad
add
lcall
sub
sbb
sbb
mov
mov
sbb
rorb
pop
cmpsl
dec
mov
sbb
adc
scas
inc
adc
cmp
xor
nop
xlat
loope
fldl
add
hlt
and
int
mov
cmp
push
push
or
mov
shr
push
push
movsb
push
int
adc
jno
or
dec
cmpsl
jns
jb
les
adc
lds
dec
jecxz
rorl
out
ret
mov
push
xor
int3
mov
xchg
shld
iret
imul
inc
and
or
inc
rorb
adc
push
jnp
out
pushl
inc
iret
pop
cld
mov
push
jge
mov
aas
dec
mov
sarb
cltd
mov
cmp
daa
mov
inc
inc
outsb
jmp
or
mov
data16
or
xor
hlt
jg
xor
push
mov
cli
pop
xchg
sub
or
mov
push
fwait
and
pop
iret
mov
xchg
ficompl
lret
pop
or
out
add
jmp
aaa
mov
jg
push
mov
push
outsb
or
bound
es
dec
aas
ret
jmp
pop
xlat
add
popf
aaa
xchg
clc
js
pop
or
xlat
and
xchg
imul
ret
mov
sbb
mov
adc
adc
pop
test
fbstp
lea
fidivrs
cmp
xlat
xor
pop
leave
test
cld
sarb
mov
ficomps
mov
mov
cmpsb
into
stos
scas
das
mov
jle
test
lods
test
loop
or
std
pop
es
icebp
push
pushf
ret
dec
cld
std
push
imul
mov
push
sbb
xchg
push
sbb
dec
inc
lods
std
imul
ficoml
stc
inc
cld
clc
jp
fcmovnu
inc
imul
stos
fdivl
mov
add
xlat
mov
inc
or
ljmp
inc
movsl
jecxz
lahf
es
aam
aas
gs
jae
xchg
lcall
fdivrp
xchg
push
nop
sub
inc
sub
adc
movsl
or
push
lahf
add
ret
lds
mov
lea
mov
gs
pop
call
lds
sbb
xlat
xor
xchg
xchg
iret
fwait
cs
xlat
dec
push
fnstsw
sbb
xor
sarb
fidivrl
add
sub
js
xlat
add
jg
sti
pop
push
sahf
mov
mov
int3
sbbb
push
mov
add
repz
cmp
pop
popf
push
jg
loope
test
push
lret
or
es
mov
lods
dec
push
mov
mov
fldt
mov
rol
mov
mov
inc
cmp
mov
mov
push
and
je
cli
pop
pop
xacquire
daa
fwait
xchg
xor
inc
push
ja
xor
jae
bound
mov
push
cli
add
popf
rol
cmc
fildl
cltd
in
jae,pt
cmp
or
sub
icebp
push
pop
push
das
movsb
inc
lds
add
or
stos
insb
cmpsb
inc
inc
jg
lret
and
div
test
test
pop
nop
pushf
xchg
add
fisttpll
lods
les
dec
adc
in
xchg
xchg
dec
mov
movsl
inc
lcall
lds
imul
das
adc
stos
and
insl
mov
pop
nop
js
or
inc
mov
roll
dec
inc
add
fimuls
iret
inc
scas
data16
push
cmpb
sub
ljmp
ss
pop
test
movsb
or
fists
and
aas
outsb
in
mov
and
movsb
sti
negl
add
xchg
hlt
pop
push
pop
test
pop
sbb
pop
loop
js
ds
sbb
dec
ja
xsha256
cmpsb
shl
imul
test
pop
js
enter
inc
lock
xor
push
and
ds
push
and
lret
push
mov
sub
dec
mov
mov
test
adc
pushf
pop
or
push
lds
aad
fcoms
sub
es
inc
sbb
sahf
rol
mov
stc
xchg
lret
push
retw
call
dec
dec
cs
lods
mov
sub
xor
mov
cmpl
rorb
je
inc
lret
sub
and
aas
int
sub
dec
add
rcrl
lea
fstl
ficomps
and
into
stc
ss
mov
inc
and
repnz
mov
repnz
adcl
stos
inc
adc
push
mov
cmp
std
in
nop
test
popa
cwtl
ret
push
cltd
xchg
lods
jle
xor
aas
flds
clc
das
icebp
or
scas
jmp
inc
lods
inc
aam
repz
enter
sbb
pop
pushf
mov
jg
pop
imul
and
dec
es
sbb
pop
in
and
inc
inc
dec
dec
pop
fld
xchg
lahf
std
jecxz
into
jno
cmp
sbb
lods
sti
mov
xchg
ja
or
outsb
movsb
xor
sub
xor
je
cwtl
cli
jns
insb
sub
sbb
pushf
push
cs
mov
add
jl
adc
cmp
pop
andl
mov
lea
inc
sub
cmp
cmp
inc
sahf
fdivrl
test
jmp
cmp
push
nop
into
jmp
es
fsubl
scas
cld
out
push
adc
int3
mov
aas
std
aas
dec
enter
hlt
or
and
test
test
pop
dec
adc
and
add
sub
inc
xor
jbe
pop
js
das
scas
leave
and
rorl
mov
gs
pop
push
inc
pop
cltd
or
fdiv
mov
adc
ror
out
neg
sbb
mov
leave
lock
jo
jae
push
roll
movsl
jb
inc
int
or
sarl
pop
lods
add
stc
add
pop
cmp
movsb
loope
sub
add
loope
adc
inc
xor
xor
or
mov
pop
dec
add
div
push
rcrl
push
lock
inc
push
es
adc
jne
cli
sbb
push
mov
and
lret
imul
jge
adc
lret
pop
pop
cli
imul
pop
xchg
push
stos
pop
sbb
push
lret
stc
cltd
mov
sub
jmp
push
movsb
mov
jmp
or
or
popf
repnz
xor
mov
shrb
push
repz
bound
push
add
fidivrs
fmul
mov
xlat
daa
aam
add
dec
lcall
sub
sbb
pop
mov
sbb
dec
test
sti
in
lahf
push
push
roll
pop
ror
loop
dec
pop
aam
je
adc
pop
ljmp
or
xlat
scas
nop
jo
adcb
jmp
loope
mov
aas
repnz
call
fnstenv
adc
dec
fmulp
sar
es
sub
mov
pop
mov
int
adc
adc
mov
out
ret
popf
gs
pop
xchg
mov
jmp
fwait
cld
inc
push
mov
and
xchg
frstor
insb
cltd
mov
jne
add
mov
loope
mov
sti
pop
fisttpll
stc
xchg
das
in
mov
in
mov
sti
xor
xchg
push
stos
mov
popa
and
xchg
fiadds
inc
xchg
out
adc
and
stos
mov
push
push
lcall
xchg
cmp
mov
sbb
mov
add
pop
sbb
jecxz
insb
lods
xor
xchg
cmp
icebp
and
xchg
ss
mov
sbb
dec
fs
ss
ds
loope
nop
rorl
jbe
lret
push
pop
sbb
movsl
out
repnz
mov
push
pushl
std
add
mov
mov
pop
xchg
test
sahf
roll
push
push
jg
leave
imul
cli
or
adc
adc
pop
push
dec
mov
jge
adc
add
or
lahf
and
mov
out
xchg
xor
icebp
repz
xchg
sbb
xchg
xor
fidivrs
push
dec
sti
cwtl
jno
push
jp
rcl
mov
xlat
jne
mov
imul
jl
and
jl
cmc
outsl
push
cmp
cvtpi2ps
sub
push
inc
add
out
in
bound
xchg
adc
popa
dec
xchg
hlt
xchg
fbld
leave
sbb
ror
scas
incl
xchg
hlt
jae
cmc
adc
js
outsb
repz
loop
and
mov
rolb
or
and
js
push
fstl
cmp
push
add
mov
aad
or
jne
popf
lcall
inc
push
fisttpl
adc
testb
stos
xchg
dec
adc
daa
pop
mov
push
cmpsl
iret
and
popf
sub
cmp
insb
lret
aaa
mov
push
fldl
in
add
rcll
and
movsl
stos
push
cltd
sbb
mov
push
mov
mov
dec
sti
aas
push
ljmp
dec
std
xor
mov
ja
sub
mov
mov
outsl
push
adc
mov
popf
cmp
rorb
lds
xchg
in
cmp
sub
jno
movsb
jne
or
xchg
mov
int3
xor
sbb
push
xchg
push
cld
push
pop
ja
sub
or
sbb
cs
movsb
jecxz
add
test
int
es
loop
iret
int3
ja
add
and
dec
dec
lahf
jmp
mov
xlat
adc
jl
or
push
mov
pusha
into
adc
inc
or
inc
andl
aam
mov
adc
mov
mov
cmc
cwtl
mov
ret
imulb
int
and
mov
jle
ja
je
fisubrl
sbb
pop
repz
xchg
jg
jno
fiadds
jp
mov
lret
push
test
data16
jmp
pop
test
cmc
inc
mov
in
mov
inc
cmp
jmp
xchg
mov
mov
sub
scas
out
dec
sub
popf
insl
loope
mov
push
jb
pop
pusha
jp
cli
enter
jae
sbb
in
idiv
mull
adc
mov
lods
repnz
fwait
js
xor
sub
daa
scas
insl
shlb
jns
mov
push
push
vxorps
popf
push
jns
inc
dec
pop
and
jbe
int
pop
sbb
mov
fidivs
int3
mov
fs
cmpsb
and
fnstenv
inc
xchg
dec
push
add
jecxz
jno
cmpsl
push
and
lods
push
loopne
repz
addl
pop
cmp
movsb
out
and
add
jae
and
push
std
xor
lahf
sbb
ror
push
sahf
or
call
fs
enter
cmp
ffree
lock
stos
push
adc
push
sub
xchg
xchg
push
fistpl
test
xchg
rorl
sbb
and
push
jmp
pop
cltd
add
and
mov
lods
pop
fldenv
cmpsl
mov
push
stc
shrl
sti
jge
mov
pop
or
add
push
out
mov
xchg
test
ljmp
sahf
pop
ds
xor
shlb
dec
and
ja
jg
cmp
stos
pextrw
test
icebp
sbb
lods
sub
push
in
inc
sub
adc
outsb
xor
data16
jmp
push
ret
add
dec
add
or
fisubrs
fsubl
stos
push
inc
xchg
lds
cwtl
mov
xchg
xor
shlb
xchg
adcb
mov
popa
pop
lret
pminub
adc
xchg
add
pop
dec
mov
scas
out
fidivl
fwait
into
insl
repz
dec
dec
push
and
or
aaa
mov
or
dec
mov
and
dec
orl
sarb
cmc
xor
lods
xor
movsl
xchg
jnp
sbb
push
cmc
mov
sbb
mov
jmp
push
push
sbb
jge
pop
jmp
fistps
xchg
sbb
fists
out
adc
ljmp
inc
jne
cmpsb
mov
bound
jnp
push
push
scas
sti
in
mov
test
in
add
cmp
clc
aaa
inc
mov
mov
in
pop
mov
aas
dec
into
mov
or
lret
add
ljmp
add
sub
add
mov
test
outsb
mov
or
jecxz,pt
mov
mov
cwtl
jo
daa
sub
mov
outsl
jg
mov
and
cmp
in
mov
mov
mov
mov
jo
pop
inc
int
sbb
inc
xchg
fs
fcomps
xlat
cwtl
sbb
jns
add
loop
cs
movsb
mov
shlb
push
stos
xchg
pop
mov
mov
xlat
movsl
data16
xchg
lret
pop
sahf
ds
stc
repz
ds
out
inc
mov
ss
push
mov
sbb
loopne
dec
push
mov
pop
test
add
mov
and
cltd
sbb
loop
adc
sub
xchg
ljmp
jl
fldl
sbb
pop
mov
cmc
in
das
jge
out
das
adc
pop
mov
and
test
imul
add
mov
jbe
jo
icebp
in
push
in
aas
lcall
jo
mov
xlat
adc
cmpsb
shlb
movsl
scas
imull
xchg
xchg
shll
jecxz
data16
sbb
push
and
cltd
jae
into
sub
movsl
lret
mov
inc
adc
xchg
dec
push
fs
pop
add
lahf
cs
outsb
or
mov
lahf
push
jno
xor
inc
arpl
test
lea
pop
inc
jge
imul
call
push
aad
jno
jle
xchg
lret
adcl
les
fs
sbb
mov
pop
mov
dec
dec
mov
sti
sbb
xor
clc
mov
js
aad
fwait
mov
cmpsb
push
lock
out
xchg
xor
xor
andb
out
push
roll
fistpll
xlat
in
mov
fwait
sub
jmp
rorb
jle
jp
jl,pt
or
or
bound
loope
negb
or
les
push
add
sbb
mov
sbb
pushf
sti
push
pop
inc
subb
imul
add
fimull
or
inc
or
idivl
xchg
mov
pusha
push
inc
push
in
inc
adc
xor
pop
cmp
es
cmpsl
push
ljmp
xorl
jno
mov
mov
les
insb
stos
sub
jp
in
mov
mov
fwait
jecxz
ds
lds
invd
pop
pusha
pop
xchg
mov
xchg
leave
loop
inc
bndldx
mov
divb
push
rcrl
nop
enter
cmp
and
fisttps
pop
es
mov
fdivl
xchg
jg
clc
xor
push
cmp
sub
xor
and
movsl
jb
leave
cmp
std
or
mov
and
mov
xchg
mov
jo
pop
cmp
mov
test
jge
pop
push
gs
aaa
fidivrs
inc
and
xchg
mov
jnp
cmpsb
push
cli
inc
fbld
xchg
mov
mov
in
add
in
mov
mov
sbb
das
stmxcsr
lods
push
pop
shlb
xor
jnp
jp
push
fadd
mov
sahf
std
cmp
sub
lret
sbb
nop
dec
jne
mov
cmp
push
mov
push
aam
clc
push
dec
xchg
call
lret
or
aad
or
mov
or
sbb
fadd
mov
sub
aas
xchg
lea
push
adc
pop
fldl
mov
mov
adc
movsl
lcall
xchg
fisubs
cmp
notl
movsb
inc
dec
test
sbb
cmpsl
ljmp
scas
push
cmp
adc
sbb
sub
mov
mov
pop
push
inc
mov
in
sbb
lods
add
push
es
jle
ret
imul
lcall
out
iret
xchg
push
or
dec
stc
imul
jle
mov
mov
data16
test
cmp
adc
rorl
inc
notl
sbb
inc
lea
dec
fistpl
mov
mov
mov
loope
mov
mov
aad
gs
jg
jo
pusha
std
mov
dec
jb
repz
cmpsb
adc
lock
jnp
loopne
jne
roll
xchg
pop
jno
sub
push
xchg
jmp
pop
std
fwait
les
jns
scas
mov
push
cld
pop
clc
addr16
and
cmpsl
pop
add
fs
adc
jne
cmpb
lret
sub
mov
roll
addr16
inc
ss
rep
xor
lret
mov
dec
stos
insl
sbb
push
addr16
pop
nop
les
dec
add
xorb
sti
cmpsl
pop
jecxz
loope
jmp
fucomi
mov
and
mov
sub
aas
lds
mov
aas
cmp
jecxz
or
cmp
jle
jmp
mov
dec
faddl
data16
sub
sbb
mov
push
popf
fwait
cmp
xor
cltd
shrb
xchg
std
jg
xor
sbb
repz
sahf
jmp
int3
sub
div
sub
pop
dec
loop
addr16
add
mov
or
mov
add
in
int
add
repz
add
aas
push
and
movsl
mov
sbb
push
mov
mov
mov
shrl
nop
ss
and
test
jne
outsb
mov
mov
leave
dec
push
ret
insb
je
sbb
add
bound
pop
clc
out
dec
je
inc
bound
jmp
xor
test
mov
mov
imul
data16
mov
push
std
out
add
cmpsb
xchg
outsb
push
cmpl
scas
iret
loopne
fcmovu
movsb
mov
mov
call
dec
mov
inc
inc
dec
clc
jg
jb
push
insb
sahf
or
mov
fs
cwtl
sub
lret
jl
jg
xchg
jge
dec
mov
fidivl
jle
aaa
xchg
pop
incb
ljmp
xorb
ss
mov
mov
push
out
xchg
dec
inc
lock
jno
cltd
addr16
imul
idivl
add
rcrb
add
std
cmp
xchg
push
out
adc
sbb
stos
popa
and
mov
and
sbb
mov
lcall
xchg
push
cmpsb
xlat
movsb
dec
js
iret
int3
xchg
or
xor
stc
xchg
lds
push
out
pop
jno
stos
dec
jmp
xchg
outsb
jo
rcll
push
pop
push
push
loop
cltd
icebp
push
fnstenv
sbb
int3
orl
inc
in
jbe
mov
mov
lods
push
jecxz
or
dec
ljmp
mov
test
call
xchg
dec
cmp
sbb
jae
xor
test
je
fcoms
fwait
sub
ror
mov
mov
fwait
lcall
jns
sub
shrl
jl
lock
mov
xchg
pop
aam
push
or
lods
cs
arpl
pushf
or
sub
adc
lahf
sub
fmuls
mov
xchg
dec
mov
clc
ljmp
outsb
daa
jecxz
test
jns
mov
mov
aaa
loop
repz
xchg
xor
push
addr16
jne
pop
xor
je
jecxz
repnz
jno
shl
xchg
lret
call
mov
popl
jns
stos
jnp
stos
xor
fcompl
test
movl
lods
or
pop
cwtl
aad
in
fldcw
popf
add
or
jbe
addr16
cmp
movsb
les
dec
mov
lods
mov
test
push
xchg
into
enter
push
lock
rorl
add
cmp
mov
add
xor
fnsave
stos
xor
inc
mov
sahf
cmp
ja
pop
add
push
mov
mov
push
push
cmp
lahf
lret
mov
out
sub
pushf
mov
inc
dec
pop
mov
cmp
sub
icebp
adc
xor
sbb
push
mov
das
sbb
cld
cwtl
inc
out
leave
and
cli
pop
outsb
push
mov
adc
pushw
sti
dec
and
jle
js
pop
mov
add
in
lds
adc
pop
cmpl
insb
xchg
push
psubsw
cs
mov
shll
out
in
push
push
xchg
push
adc
ret
or
in
xorl
cmc
lret
pop
gs
test
push
adcb
fadds
dec
push
mov
int3
adc
mov
call
clc
in
dec
cmc
xor
fnstsw
jmp
xor
scas
push
call
xor
sub
repz
and
sbb
sbb
add
and
or
call
mov
leave
jne
add
or
leave
cs
cmp
divl
jns
repz
pop
std
or
push
and
dec
sub
sbb
push
mov
mulb
pusha
or
sbb
loopne
jbe
aam
xchg
notb
imul
loope
add
dec
dec
jb
xor
imul
fs
enter
add
dec
std
mov
dec
push
movsb
dec
rorb
lea
inc
jo
lret
xor
mov
xchg
mov
mov
pop
fistps
pop
mov
xlat
shlb
arpl
stos
xor
cmp
pop
test
insl
xor
jle
mov
mov
cmp
or
test
cmp
outsb
mov
lock
pop
sub
or
inc
cltd
dec
shlb
lock
cmp
sti
inc
mov
nop
mov
arpl
lea
cmp
in
mov
daa
mov
fstpl
mov
adc
sbb
jp
mov
sub
xchg
jnp
fs
popa
xor
cmpsb
inc
popa
or
mov
out
sti
gs
pop
arpl
int
dec
inc
insl
sub
pop
fldcw
jo
pop
fstl
shll
pop
inc
icebp
sbbl
cmp
adc
repz
push
repnz
push
rorb
sysret
fisubl
pop
lods
je
pusha
mov
rolb
fbstp
push
jno
cmpsb
scas
push
mov
xor
addb
or
outsl
mov
cmpsl
jb
xlat
dec
fsubp
and
sbb
add
jno
push
ljmp
or
test
pusha
cltd
push
add
mov
cwtl
out
or
xor
mov
jne
movsb
js
cld
sbb
ret
push
xchg
jnp
lcall
clc
inc
inc
aad
push
rorb
imul
xchg
dec
mov
mov
adc
stc
xor
ds
xchg
dec
pop
adc
gs
les
or
push
fwait
stc
cmp
inc
in
jae
pop
aaa
cmp
test
jge
sbb
pop
push
inc
popf
cli
int3
test
ds
inc
es
jnp
push
push
movsb
xor
movsb
dec
lods
insb
fs
inc
sub
sbb
sarl
inc
and
aam
xor
cmc
sbb
xchg
and
mov
push
jge
sub
or
mov
mov
ret
pop
push
add
jmp
jne
sub
push
fsub
add
and
sbb
cmp
add
loopne
ja
or
aam
lea
aaa
in
jl
mov
test
clc
hlt
pop
aam
pop
pop
fcompl
mov
mov
ret
ud0
jns
mov
cmc
xor
insl
insb
in
sbb
ds
dec
hlt
xor
ljmp
lcall
shll
and
dec
xor
fucom
rcrl
sub
push
xchg
arpl
jns
incb
mov
xchg
pop
jnp
shll
adc
movsl
in
sbb
inc
or
xchg
pop
or
add
ljmp
ja
cmp
dec
cmc
jnp
movsb
sarl
loopne
aad
pusha
jp
mov
dec
and
ja
loop
and
lods
gs
jns
dec
out
cli
cmp
lds
add
arpl
cld
xchg
fs
cmp
and
repz
and
push
mov
loopne
in
insl
movl
or
mov
inc
adc
inc
mov
fistl
inc
outsb
test
jae
inc
pop
push
jae
dec
push
sbb
rcl
pop
fdivs
mov
subl
pop
outsl
sub
jle
jns
mull
and
cltd
lods
and
jg
je
mov
fnsave
data16
adc
cmp
int
xorb
loope
lock
push
push
pop
pop
call
add
mov
in
sbb
inc
push
sub
sbb
daa
fldenv
push
pop
xchg
jge
sbb
push
mov
dec
mov
rorb
gs
cli
sub
ficoml
es
cmpsb
or
ret
lret
cmp
push
or
pop
xchg
pusha
inc
xor
in
xchg
lods
dec
test
in
mov
roll
sbb
and
out
insl
mov
xchg
mov
movsl
jmp
sbb
pop
ficompl
dec
jbe
shll
jbe
mov
call
dec
leave
iret
and
jno
adc
dec
outsb
bound
lea
dec
filds
les
xor
jb
jmp
scas
mov
cmp
test
sarb
lret
out
cwtl
xor
ret
std
test
xchg
cs
sbb
sarl
pop
test
push
mov
ja
xchg
xlat
sbb
shrl
loop
pushf
lahf
cli
cwtl
cmp
push
inc
fcmovnbe
dec
xchg
aaa
imul
mov
aaa
sub
xchg
sbb
cmp
inc
xor
xchg
cmc
cld
inc
adc
pusha
arpl
xor
pop
mov
jbe
idivb
push
pop
hlt
jbe
or
xchg
pop
and
push
inc
xor
pushf
xor
jns
sub
sub
push
or
jo
xor
push
out
repnz
push
notl
fdivrs
pusha
outsb
sbb
mov
loop
int3
push
aam
fsts
bound
cmp
mov
sub
aaa
cltd
mov
imul
ljmp
pop
mov
mov
mov
add
aam
push
aas
xchg
dec
orl
es
push
cwtl
adc
xlat
push
dec
lea
fs
nop
pop
daa
test
call
pop
sub
int3
mov
ret
mov
and
ds
jp
cmpsb
cmp
jbe
mov
push
mov
fidivs
mov
push
outsb
hlt
or
ret
mov
mov
cmp
xchg
push
rcll
mov
out
cmp
cmpsb
es
mov
bound
push
mov
push
sbb
add
xor
xchg
dec
call
pop
jl
cmp
aam
ret
xchg
mov
icebp
mov
and
push
idivb
insb
xchg
std
pop
pop
loope
repz
outsl
inc
loopne
push
mov
iret
aaa
xchg
mov
out
lret
orb
pop
setb
pop
fsubrl
jno
and
shll
push
ret
dec
push
aad
fs
inc
xor
loope
pop
rclb
adc
xor
or
lock
xchg
ret
stos
in
ret
inc
cmpsl
mov
repz
mov
mov
cmp
or
jp
xchg
xchg
aas
nop
pop
xor
mov
jecxz
lods
in
dec
aas
sbb
cltd
sbb
or
push
and
in
sub
push
cmp
cli
xlat
lock
jae
gs
jo
enter
jmp
das
jp
cmp
push
mov
ja
scas
push
popf
ret
or
rclb
mov
outsl
mov
mov
push
push
mov
add
jecxz
pop
or
arpl
ljmp
and
push
adc
daa
into
sbb
popl
mov
fisubs
ret
stos
dec
arpl
add
cmp
repnz
dec
sub
js
fistl
or
addb
in
and
in
inc
jmp
aaa
jp
or
or
daa
leave
xchg
mov
ljmp
adc
pop
or
cmp
push
out
inc
dec
outsb
or
xor
or
fdivrl
outsl
imul
inc
pop
iret
push
jle
daa
iret
jmp
cld
and
test
xchg
fnsave
mov
sub
mov
mov
retw
popa
das
xchg
mov
cmp
cld
push
push
push
stc
pop
mov
sbb
adc
xor
pop
dec
shrb
hlt
test
lahf
jge
hlt
fucomi
shlb
adc
inc
ja
mov
and
and
jecxz
in
and
adc
out
mov
cmpsl
jl
xorb
pusha
sarl
insb
lea
inc
push
push
adc
jb
fidivrl
jp
or
mov
fcoml
insl
sbbb
and
repz
test
or
test
andl
xchg
fisttps
outsb
arpl
adc
int3
fisubl
push
aaa
xchg
xchg
inc
dec
aaa
cmp
jo
jmp
adc
pop
cld
fs
hlt
xchg
inc
cmp
push
dec
adc
xorb
adc
fdivp
jmp
jmp
ret
test
pop
sub
mov
std
popf
jo
mov
jmp
push
inc
test
imul
sub
dec
addr16
stos
pop
xor
jecxz
lret
mov
mov
and
mov
lret
xor
dec
cltd
imul
xchg
lea
sahf
lahf
popf
fstps
push
addb
pop
mov
and
cmp
mov
mov
xor
icebp
cli
mov
sub
mov
aad
leave
pop
sbb
ret
insl
popf
test
btr
adc
clc
into
aad
les
sub
popa
aaa
mov
cli
gs
mov
jg
enter
dec
cs
notb
je
movsl
jecxz
imul
jge
jecxz
mov
pushf
add
not
xchg
pushf
mov
int
add
insl
bound
sbb
cltd
pop
leave
jp
repnz
xor
test
sarl
mov
jno
arpl
aad
es
stos
add
mov
aaa
inc
inc
dec
lea
pop
bound
pop
adc
mov
popa
jae
jnp
fucomi
incb
mov
pusha
test
std
mov
and
cwtl
lds
add
mov
and
andb
out
pop
aam
xchg
icebp
fcompl
jno
cmpsl
ret
ljmp
loop
dec
lahf
adc
mov
jne
shlb
inc
mov
inc
bound
bound
movsb
es
lcall
xorps
sub
add
repz
or
popa
adc
xor
cld
mov
bnd
mov
pop
cld
insl
repz
out
jl
mov
fs
pop
std
shlb
mov
pop
or
sti
mov
xor
lods
jmp
stc
enter
in
xchg
jge
in
imul
mov
pop
jns
cmpsl
popf
aas
inc
aaa
push
cmp
inc
out
rclb
cltd
pop
or
loopne
mov
pop
imul
lcall
xchg
divl
cli
sti
mov
pop
mov
dec
bound
lods
mov
ss
and
inc
in
repnz
aaa
cli
cmpsl
mov
jnp
mov
test
in
loopne
push
mulb
nop
add
sbb
loope
push
out
rcrb
push
add
rorb
jne
jo
adc
arpl
mov
mov
mov
mov
movsl
sti
jecxz
add
adc
add
jecxz
clc
mov
inc
lods
mov
pop
or
adc
push
jno
mov
rcr
pushf
les
in
sbb
mov
icebp
jle
xor
clc
push
sti
xor
ss
mov
adc
mov
ja
cmpl
in
in
aam
pop
cmc
fiadds
test
jbe
loopne
leave
sbb
sub
mov
xchg
add
push
pop
xchg
add
sbb
mov
lods
inc
gs
test
adc
or
into
out
jb
fcoml
push
shr
incb
lods
add
mov
into
mov
ret
dec
sbb
push
mov
adc
je
add
pop
int3
xchg
jmp
outsb
and
test
cmp
mov
fmuls
fdivrs
mov
jb
cmp
lods
jb
loopne
cmp
mov
out
or
cmp
adc
in
imul
cmc
sbb
mov
jns
aam
lods
sub
int
ret
cmp
xor
scas
sub
inc
imul
mov
xchg
inc
inc
jae
es
or
fdivl
in
and
shrb
fwait
cmpl
out
out
xor
sarl
stos
fwait
pop
call
imul
mov
les
push
push
in
out
jbe
inc
push
call
and
fisubs
and
div
adcb
ljmp
movsb
cmp
cmpsl
cmpl
cltd
mov
movsb
sbb
aam
xchg
jge
aas
inc
lock
rclb
sbb
jge
mov
out
mov
mov
adc
fiaddl
dec
test
and
sub
in
and
les
lods
pop
fwait
mov
mov
dec
and
insb
xchg
fstl
out
sbb
jle
enter
xor
movsl
rcrl
popa
out
and
call
push
inc
andl
ds
adc
pop
fsubrs
fsubl
hlt
or
dec
hlt
and
xchg
in
or
jae
and
outsb
aas
cld
cmp
daa
cmp
add
adc
push
mov
rcl
xchg
dec
mov
push
add
in
or
mov
inc
jmp
hlt
shlb
mov
dec
int
cmp
jne
jo
inc
hlt
mov
gs
repnz
dec
jcxz
cmp
jae
fcompl
pop
ljmp
and
fisttpll
xchg
shr
push
fidivrs
and
testb
xchg
in
xchg
mov
test
and
imul
js
cwtl
mov
jg
push
pop
jns
and
ja
aam
add
adc
hlt
lahf
cs
or
outsb
lods
push
jg
dec
xor
aaa
mov
mov
xor
sub
shrd
push
xchg
addb
leave
call
dec
daa
pop
js
movsb
icebp
mov
mov
mov
insb
xchg
repz
sbb
or
fldenv
or
into
mov
psllq
xor
or
loopne
jl
fisubs
mov
xor
add
push
dec
mov
adc
or
pop
aas
pop
mov
inc
inc
inc
sbb
mov
push
stos
push
dec
sti
cld
xchg
andl
lahf
jge
in
or
pop
or
mov
jge
imul
iret
imul
push
lret
sbb
enter
lret
or
or
inc
fnstcw
pop
inc
add
inc
cmpsl
cs
bnd
or
outsb
into
sbb
aaa
inc
outsl
popf
loope
lods
sbb
dec
das
adc
push
jae
adc
lods
dec
inc
sbb
or
pop
out
cmp
cli
jmp
cmpsb
mov
enter
sahf
lret
mov
mov
dec
daa
dec
cmp
push
les
mov
mov
xchg
adc
dec
cmp
insl
xchg
lret
into
jg
hlt
ret
nop
pop
dec
imul
mov
cmp
fistpl
sbb
sbb
push
aam
cmp
xor
rcrl
mov
cmp
mov
mov
fimuls
or
sbb
xor
or
sbb
test
sbb
inc
pop
pop
lods
mov
cmpsb
mov
addr16
out
xchg
scas
sub
xchg
insl
pop
sbb
mov
lahf
inc
mov
sub
inc
push
aaa
ret
loope
clc
test
adc
sbb
mov
sub
push
arpl
in
pusha
mov
lret
pop
jg
push
push
pop
mov
xchg
fidivs
mov
sub
adc
ljmp
fsts
jl
fcoml
scas
inc
cmpsl
nop
stos
add
mov
jb
cli
sub
xor
ret
std
jnp
xchg
fwait
shlb
cmc
mov
cmp
pop
out
sbb
xor
repz
and
pop
mov
xlat
ljmp
out
inc
loope
cli
dec
pusha
xchg
mov
movsl
jp
movsb
xchg
jge
lods
mov
mov
nop
andl
aam
adc
cmp
mov
push
mov
sub
mov
imul
pop
cld
jb
mov
sub
adc
mov
sub
ficompl
ret
add
notb
das
dec
int
and
push
imul
sbb
popf
int3
lock
mov
xor
cli
and
add
inc
sbb
aaa
les
xchg
clc
mov
bound
insl
test
int
and
icebp
fcomps
outsb
push
and
andl
ljmp
aaa
pop
xchg
lea
sbb
inc
ljmp
sub
out
adc
add
stos
lret
push
pmaxsw
shll
scas
sub
loopne
iret
fimuls
inc
movsl
sbb
call
add
sahf
inc
add
fbstp
cmp
loopne
pop
mov
lahf
dec
sahf
cmpsl
sub
mov
arpl
fldcw
repnz
mov
std
sarl
inc
mov
mov
inc
in
mov
insb
test
adc
test
ret
shll
nop
dec
pop
sbb
insb
mov
sbb
mov
cs
sbb
sbb
cmc
in
in
arpl
xor
mov
dec
pop
into
sub
rorb
jno
arpl
fs
jecxz
dec
lahf
mov
test
int3
jbe
sbbl
ja
inc
andb
movl
add
fs
push
lods
fwait
inc
aad
mov
lret
and
lods
jmp
jge
daa
jle
xchg
lods
pushf
int3
in
mov
cld
out
dec
ficompl
and
or
int
loopne
lret
popa
sbb
jmp
sub
push
jns
push
fstl
lcall
jbe
test
inc
stos
sarl
imul
cli
out
sbb
sub
aam
jge
std
cld
mov
xchg
pusha
add
jge
shlb
out
and
inc
pop
fsubrl
insl
and
dec
cmp
sbb
test
push
das
mov
ss
imul
nop
mov
fnsave
rcrb
fildl
inc
and
mov
cmp
mov
jp
movsl
frstor
add
inc
add
aam
hlt
xlat
mov
xchg
pop
loopne
xchg
aad
test
imul
xchg
xchg
dec
push
pushf
jbe,pt
pop
xchg
and
push
mov
shll
lods
stos
call
push
divb
jnp
es
scas
pop
aam
shrl
dec
xchg
and
leave
add
jp
mov
lock
xlat
pop
lea
rorl
outsl
pop
loope
ret
mov
fildl
sbb
pop
in
ror
dec
pop
orl
scas
xor
imulb
enter
cmpsb
jns
fnsave
sub
xchg
add
lods
cltd
movl
pop
xlat
mov
mov
outsl
insl
inc
jo
scas
cmp
push
scas
pop
inc
adc
jbe
and
sbb
dec
popa
in
movsl
and
dec
xor
shrb
adc
push
cmc
lods
adc
adc
inc
dec
mov
sbb
loope
add
sub
cltd
sti
pop
add
js
fstpt
lret
out
inc
cmc
cld
cmpsb
movsb
and
popa
pop
cmp
in
cs
and
std
idivb
sub
jecxz
negl
jmp
and
js
das
mov
outsl
leave
add
push
cmpl
xor
or
sbb
movsl
sbb
or
popf
call
xchg
pop
and
xchg
pop
lods
inc
add
jmp
pop
jg
gs
xlat
lds
xchg
divl
fs
movsb
or
xchg
daa
or
clc
into
mov
lds
jns
xchg
ret
adc
xchg
addr16
lock
pop
jnp
outsb
gs
hlt
mov
imul
test
rcl
out
mov
mov
dec
mov
gs
cmp
add
stc
sarl
in
pop
jge
jo
je
xchg
push
mov
mov
pop
jmp
cmp
test
mov
jo
push
addl
mov
mov
or
scas
das
lock
call
push
adc
and
ffreep
jns
loope
into
push
gs
and
test
pop
int3
sbb
movb
mov
xorl
jb
aas
push
test
subb
xchg
sub
pop
sub
outsl
jno
push
out
mov
xorl
cmp
fwait
stos
adc
shr
arpl
dec
and
adc
mov
out
sbb
lcall
inc
loopne
cmpsl
sbbl
mov
in
mov
and
add
jmp
enter
add
jp
sub
sub
adcb
push
or
dec
pop
mov
add
push
adc
int3
leave
pusha
mov
gs
test
ret
mov
jmp
xor
out
jae
test
fldenv
insl
jg
std
or
int
insb
cmc
clc
pop
shr
mov
jb
rcll
jo
inc
xchg
sahf
mov
mov
imull
aas
xor
call
xchg
cmpsb
inc
lcall
lret
pop
jne
sbb
pop
mov
mov
ds
lret
daa
sub
cmpsb
or
adc
and
push
push
sub
push
sub
xchg
cwtl
mov
push
dec
test
sub
fadds
pop
or
pop
mov
loope
dec
xor
and
out
iret
mov
sub
cli
sarl
scas
cmpsb
add
mov
test
aaa
ljmp
imull
cmc
xchg
es
dec
addr16
insl
and
sbb
jmp
mov
popa
into
mov
xchg
mov
sbbl
out
dec
lcall
ss
sub
es
lahf
xchg
add
mov
and
or
outsl
xor
mov
aas
push
jno
scas
mov
jns
adc
pop
ljmp
push
xor
mov
out
xor
push
fldt
pop
sbb
arpl
xchg
adc
in
mov
mov
in
sbb
stos
movsb
fwait
test
sub
xor
mov
mov
push
or
enter
movsb
xchg
stos
mov
leave
popa
dec
xchg
call
sbb
orl
daa
push
jb
fwait
add
cmp
jno
mov
iret
popa
loope
cli
daa
rol
repnz
mov
popa
mov
cmp
sbb
xchg
add
and
cmp
and
and
sbb
out
es
xchg
xchg
repz
or
dec
lods
add
dec
stos
fnstenv
fwait
pushl
xchg
nop
jne
mov
xchg
push
jnp
inc
popa
xchg
jae
sub
int3
fwait
xchg
pushf
or
push
jns
push
push
mov
shr
lcall
ss
pop
rorb
fcomi
sbb
push
push
inc
sahf
test
cmpsl
pop
inc
push
xchg
in
cmovg
ret
push
scas
dec
pop
loopne
loop
sbb
cwtl
mov
in
and
es
or
fmuls
loope
jg
dec
mov
mov
cmc
sbb
xchg
dec
loope
fstl
cmp
pop
cltd
xor
out
add
pop
loop
adc
push
mov
and
mov
pop
pop
js
cmovnp
fmull
or
pop
sbb
sub
lahf
repz
loopne
and
popf
jns
jnp
cltd
ftst
int
fldcw
inc
push
ret
notb
xlat
vprotd
in
pop
mov
outsl
and
ret
lods
push
sub
fistpll
push
dec
mov
outsb
lock
dec
dec
adc
xor
or
mov
push
cmp
push
mov
and
sbb
repnz
insl
js
cmp
data16
jp
add
mov
lds
loopne
clc
test
jg
mov
nop
or
mov
fstpl
pusha
mulb
pop
cmp
dec
imul
sbb
xor
add
cmp
icebp
inc
test
adcl
and
push
outsl
adcb
jle
push
into
mov
pop
lods
fs
mov
ficompl
push
cmpsb
nop
cltd
add
push
ret
hlt
daa
sbb
pop
xchg
push
clc
cmp
and
daa
pop
fmull
orl
push
and
push
mov
pop
ss
sub
test
jne
dec
data16
push
in
push
icebp
mov
stos
sub
pushf
lcall
jbe
xchg
and
mov
loope
clc
inc
mov
mov
sub
xchg
xchg
inc
call
jo
repz
sub
cwtl
dec
pop
loopne
ret
orb
push
sub
mov
pop
push
fstps
adc
sub
xchg
jg
out
popf
cmp
je
pop
and
cmp
jge
sub
test
sti
sti
repz
orb
pushf
popf
movsb
sbb
push
inc
mov
enter
fiadds
lcall
push
cmc
scas
imul
inc
shl
xchg
pop
lea
data16
lret
das
sub
push
mov
add
xchg
lods
dec
pushf
je
stc
data16
iret
xor
pop
imul
sub
xchg
add
pushl
fnstcw
lock
hlt
xorb
cmp
add
dec
sub
iret
aas
add
cmp
mov
add
imul
mov
fdiv
lcall
sbb
arpl
leave
xchg
cmp
pushf
xchg
cmp
jecxz
test
jl
cltd
aad
jne
fidivl
inc
stc
cli
pop
mov
pop
in
lret
insl
inc
stos
out
dec
outsb
add
or
xor
aad
push
clc
addr16
mov
xor
hlt
fistpll
lahf
jb
jnp
jmp
add
mov
jle
pop
pop
in
orb
jge
mov
lret
jmp
lret
sbb
mov
or
sti
fisttpll
push
stc
mov
jae
dec
lahf
cld
mov
call
mov
dec
rcll
cmpsl
out
or
icebp
sub
or
jg
xor
push
cli
push
inc
add
inc
lcall
cmc
fistpl
add
adc
inc
or
sub
xor
data16
inc
mull
mov
pop
leave
inc
and
call
jle
push
lds
mov
fldenv
cld
das
es
add
cmp
push
mov
xchg
or
pop
mov
arpl
lds
jmp
repnz
sub
js
inc
leave
lahf
or
jecxz
cmp
fstpt
addr16
rep
fidivl
js
sbb
dec
cmp
sahf
sbb
std
mov
adc
jle
incb
ja
add
push
cmc
or
xchg
aas
enter
push
aaa
mov
cmp
ljmp
insl
in
lods
les
adc
ret
lret
mov
lea
xchg
cli
out
insb
fadds
cmp
sub
cwtl
jbe
or
and
enter
pop
into
idivb
inc
loope
into
mov
negl
cli
xor
push
dec
hlt
jg
adc
push
xchg
orl
nop
sbb
mov
ja
push
popf
and
push
sbb
sub
xlat
mov
fisubrl
stos
mov
testl
dec
in
dec
sub
or
shlb
popa
push
sub
aam
push
inc
dec
adc
aad
enter
pop
jb
pop
leave
xchg
sub
jnp
sub
and
in
inc
in
dec
or
mov
sahf
dec
mov
pushf
notl
dec
fmul
lea
sbb
or
rcrb
xchg
dec
sti
imul
mov
jae
dec
add
sbb
icebp
scas
push
jp
cwtl
cmp
pop
leave
dec
loop
out
in
or
push
add
and
xchg
xorl
add
test
mov
cmpsb
ljmp
cmpsl
sbb
sbb
xor
fs
dec
xchg
and
test
cli
add
int
ja
push
js
jns
shlb
mov
dec
or
notl
add
cwtl
in
or
sarb
outsl
cmpsl
jecxz
sbb
fistps
aas
jno
adc
lahf
cmp
lea
sub
and
adc
daa
jbe
mov
adc
mov
and
cmp
jmp
pop
jp
mov
mov
mov
cmc
or
sbb
dec
call
pop
ficoms
xchg
iret
dec
icebp
xchg
popf
inc
jp
cmp
imul
sub
ret
xor
dec
in
pusha
or
mov
stos
add
push
in
call
cld
jle
fsubr
and
fcmove
pop
jne
xchg
fbstp
adc
mov
mov
imul
arpl
popf
shll
sub
mov
adc
jno
inc
xor
xor
bound
sbb
mov
sub
into
push
push
insl
pop
lods
test
shl
daa
dec
mov
cli
movsb
cmpsl
push
xor
js
add
sub
in
hlt
pop
adc
arpl
inc
fsubl
dec
int
mov
aas
rcll
rcll
xor
mov
inc
ret
test
jle
aam
dec
jmp
push
clc
mov
std
sub
xor
mov
out
ret
lods
inc
ljmp
pushf
mov
push
dec
pop
lods
lret
xor
pop
scas
dec
xor
jmp
mov
pop
cmp
int
shlb
and
xor
je
pop
push
aas
imul
pop
and
xchg
imul
mul
fwait
jno
nop
mov
inc
fnstcw
pop
out
rcrb
pop
jle,pt
cmpsl
jo
pop
jle
dec
inc
or
stos
sar
mov
push
scas
inc
push
pop
test
in
jp
xchg
lods
idivb
dec
mov
test
popf
mov
in
xorl
xchg
cmp
mov
test
dec
mov
push
push
mov
fwait
aam
mov
cld
test
and
cmp
les
pusha
mov
mov
sti
das
sub
test
lahf
shll
data16
addb
loope
xor
inc
jbe
jns
mov
push
cmp
cmp
jo
imul
in
mov
lret
jl
call
xor
jle
stc
push
mov
or
test
cmpsl
in
mov
pop
cmpl
sti
jnp
mov
pusha
dec
scas
xchg
rorl
mov
pop
ret
add
test
mov
jg
loope
sti
xor
mov
imul
sbb
outsb
inc
fcmovb
pop
leave
sub
pushf
mov
int3
dec
sbb
fnstenv
sti
mov
jg
testb
sub
int3
ret
mov
ret
xchg
push
insl
ret
cmp
xor
in
cmp
and
xor
loopne
push
xor
sarl
in
push
xor
mov
pushf
pop
sbb
cmp
push
imul
mov
jge
dec
cli
ret
pop
iret
aam
push
pushf
jnp
loope
mov
adc
mov
inc
mov
lret
out
lahf
out
pusha
cli
addl
mov
bound
aad
sbb
into
rolb
mov
popa
xchg
adc
xchg
cmp
nop
push
dec
sbb
inc
sbb
inc
sbb
jo
cmp
adc
and
mov
pushf
adc
lods
jns
ss
sbb
outsb
loope
mov
mov
dec
js
in
lret
cwtl
pop
fldt
fwait
sbb
add
dec
cs
pop
xchg
inc
push
inc
xor
sbb
stos
mov
movsb
pop
inc
jl
sbb
insb
stos
push
push
jge
dec
or
orb
int3
xor
pop
pop
iret
out
mov
push
dec
sub
and
popf
test
cmp
jnp
xchg
fists
enter
xchg
loope
mov
test
jl
je
jecxz
cmp
and
std
add
rorl
sbb
dec
in
movsl
sub
bswap
mov
and
or
jmp
nop
fnstsw
cltd
dec
pop
xchg
adcl
stc
pop
xor
test
pop
outsl
mov
sqrtps
outsb
mov
insl
fs
or
dec
in
dec
mov
or
cld
mov
jecxz
imul
and
dec
pop
push
jl
aaa
repnz
lcall
add
push
xchg
lock
inc
pop
negl
ret
jno
add
jmp
out
sub
mov
pop
sbb
ret
nop
leave
xor
and
sbb
mov
sti
or
sbb
js
fst
cmpsb
or
dec
mov
daa
pop
cmc
lods
mov
add
fsubrl
shlb
cmp
pop
xor
mov
xchg
movsl
and
jnp
jl
pop
repz
loopne
cmpsl
ret
inc
jp
add
out
mov
addr16
scas
mov
push
xchg
testb
mov
mov
imul
xchg
pop
cmp
cmp
or
popf
das
testb
xchg
rclb
fildl
inc
xchg
test
fiaddl
or
je
jno
je
lcall
cmp
hlt
data16
repz
mov
mov
shll
xor
push
hlt
push
add
nop
dec
filds
pop
pop
ret
scas
lahf
or
stc
jge
test
xor
mov
lahf
das
sub
mov
cmp
inc
lods
mov
sahf
mov
fstpt
lds
cmp
mov
mov
xor
shll
push
cmpl
mov
mov
and
cmp
push
int3
and
sub
fldl
repz
shl
imul
insl
fisttpl
pop
fs
push
scas
test
pop
push
dec
xchg
xor
dec
ror
insb
pushf
cltd
mov
and
andb
daa
stos
adc
les
outsl
test
fistps
ret
stos
mov
mov
aam
push
pusha
xchg
or
rcr
out
sbb
lret
or
mov
cmp
sub
cwtl
cmp
aas
dec
subl
cmpsl
hlt
adc
in
push
push
and
inc
inc
jl
and
pop
add
rdmsr
sbb
and
mov
xchg
inc
imul
in
sbb
dec
pop
push
add
xorb
stos
pusha
je
adc
push
pop
or
adc
vprotq
subb
cmp
sub
call
je
mov
push
push
dec
xor
lcall
adc
les
insl
fucom
int3
scas
sub
jge
jmp
or
push
jecxz
lods
mov
mov
lea
add
mov
pusha
mov
mov
dec
dec
push
jno
mov
pop
sub
cmp
or
loop
inc
jb
mov
mov
stos
or
lahf
inc
in
das
pop
fiaddl
xchg
xchg
sub
sahf
pop
mov
add
popa
addl
adc
ss
decl
xchg
mov
insl
xchg
jo
inc
jle
mov
aaa
inc
or
xchg
fisttpll
aam
insb
cmp
sub
pusha
lea
pop
xchg
outsb
sbb
add
jecxz
mov
pusha
shrl
lds
mov
add
jecxz
pop
mov
xchg
pusha
enter
fistl
in
sub
pop
pop
xchg
je
outsb
stc
lds
aam
loopne
mov
pop
push
inc
ss
push
pusha
jne
xor
dec
add
add
inc
fwait
rorl
inc
xchg
loopne
aas
jns
dec
fs
dec
push
mov
push
push
push
mov
inc
and
xor
adc
fistpll
sbb
and
sub
cmp
pop
jmp
add
mov
aas
and
cmp
ret
add
in
or
movsl
mov
mov
jmp
dec
inc
cmp
js
mov
insb
pop
test
pusha
aad
mov
out
pop
add
mov
mov
cs
shlb
mov
or
test
pop
cmpsb
pusha
lcall
xchg
pop
xchg
mov
xor
and
mov
push
jecxz
mov
xchg
insb
lcall
aad
adc
adc
mov
sbb
adc
sub
inc
cmp
push
fadd
xchg
pop
add
lea
mov
outsl
imul
les
dec
pusha
mov
or
in
push
mov
stos
shll
outsl
nop
incb
inc
jmp
ja
xchg
jl
arpl
es
aam
jb
xchg
cmpsb
xchg
or
push
ss
mov
fs
les
addr16
gs
add
lcall
iret
faddl
pop
test
pop
jmp
fstpl
and
imul
addl
fdiv
outsb
mov
loop
xchg
xor
fs
rol
inc
icebp
mov
pushf
dec
xchg
lret
pop
mov
mov
sub
or
push
data16
pop
int
push
stos
add
pop
mov
xor
mov
xchg
inc
rcr
and
ss
sub
fsubl
fsubrs
ljmp
testl
and
es
into
pslld
outsl
nop
shr
nop
dec
lods
push
sub
iret
push
push
mov
insl
lds
es
add
jne
jp
movl
xor
fucomip
xchg
add
push
dec
gs
lea
stc
lret
cltd
mov
cmp
jg
pop
sub
into
fdivrs
dec
xchg
pop
loope
mov
push
jb
xchg
push
ss
repz
lea
and
or
in
inc
fstps
xchg
test
out
push
xchg
outsl
lock
subl
scas
loope
add
and
sbbl
pop
sbb
mov
outsb
jno
mov
rclb
mov
jnp
xchg
aam
sub
dec
rolb
inc
pusha
mov
rcll
dec
add
dec
mov
mov
mov
loop
out
cld
clc
cltd
fwait
popa
jge
mov
nop
pop
dec
jp
lahf
roll
xor
cmp
and
icebp
and
sub
cmc
ss
pop
dec
sbb
js
dec
jecxz
push
sbb
lret
sbb
outsb
xor
nop
shrl
jmp
pop
stos
daa
sbb
das
sbb
in
repz
and
leave
imul
and
test
pushf
lahf
ret
jmp
xlat
hlt
add
aaa
iret
sar
ss
rorl
xchg
jp
sub
lea
outsb
and
adc
scas
loop
mov
inc
mov
pop
sahf
xor
xor
in
adc
cmc
ss
mov
adc
imul
rolb
rcll
cmp
xchg
mov
pop
notb
ss
cmp
mov
repz
xor
inc
lock
add
dec
jne
addr16
aaa
enter
test
xor
mov
cli
loopne
outsl
push
dec
fmuls
jbe
inc
aas
inc
mov
in
mov
sar
mov
xchg
push
cmp
mov
add
pop
xchg
adc
out
sbb
add
or
rcr
dec
push
daa
dec
dec
push
scas
icebp
sbb
in
stos
pop
fstpt
push
inc
aad
daa
movsl
and
loop
jae
dec
cmp
and
mov
ds
push
xor
outsl
cmp
dec
sub
stos
js
mov
lahf
adc
lret
mov
sub
les
jns
sbb
fldenv
add
repz
push
mov
inc
gs
sub
adc
mov
ror
and
es
cmp
cwtl
int3
orb
mov
aaa
inc
leave
add
fwait
adcb
sub
pop
cmp
cmp
in
jb
and
dec
sub
mov
sbb
fistps
popf
ljmp
loope
subb
dec
cmpl
xor
dec
pop
lods
sub
xor
ds
jno
xchg
jb
cwtl
add
notl
and
sbb
push
mov
fwait
ror
pop
and
gs
scas
or
pop
adc
jae
icebp
inc
jecxz
pushf
adc
push
sub
lcall
xchg
sub
stos
mov
js
pop
cmp
stos
stc
enter
movsl
and
outsb
xor
je
in
jmp
cwtl
push
sbbb
imul
xchg
and
jbe
pop
cli
push
xchg
cwtl
inc
ss
inc
insl
popf
insl
adc
ds
arpl
add
sbb
fadds
mov
xchg
jecxz
push
in
mov
cmpsl
or
popa
into
and
out
sar
jl
gs
dec
rcll
lret
push
push
jmp
aaa
jle
sub
mov
push
mov
in
mov
dec
ja
mov
ljmp
mov
push
pop
das
mov
test
mov
mov
mov
inc
mov
mov
lods
in
pop
out
mov
jne
mov
add
pusha
mov
add
add
daa
lds
arpl
enter
subb
mov
les
sbb
repz
test
stc
xor
fisubrl
les
lods
or
fisubrs
and
data16
stos
xchg
imul
mov
ja
ficomps
mov
push
std
adc
xor
and
sbb
lret
sahf
dec
mov
pushf
push
inc
dec
adc
mov
or
mov
push
dec
xor
sbb
push
inc
dec
imul
mov
cmp
xchg
popa
mov
lea
inc
sbb
inc
add
mov
pop
xchg
outsl
add
xor
add
add
in
mov
jnp
sub
and
and
lea
jae
mov
sub
sbb
adc
adc
mov
sub
mov
enter
and
mov
xor
cmp
rcll
push
push
push
push
add
sbbl
mov
test
xor
pop
add
sbb
daa
cmp
sub
xor
cmc
sbb
ret
inc
shl
out
loope
pop
sub
outsl
out
and
pop
int3
es
lods
sbb
mov
pop
out
mov
repz
mov
sub
test
sub
jmp
fnsave
in
insb
add
addr16
in
sub
mov
subl
jg
fwait
das
xchg
pop
js
jno
mov
xor
cmpsb
sub
sub
movsb
adc
movsb
rorb
ret
inc
adc
movsl
cltd
imul
sub
sarb
fisubs
sbb
dec
mov
fnstsw
pop
jecxz
sbb
les
movsl
cld
mov
sub
enter
repz
jnp
addr16
add
dec
jnp
fisubrs
std
lcall
add
out
xchg
out
dec
aaa
jge
add
mov
mov
sub
movsl
fildl
push
lahf
mov
daa
dec
jge
mov
adc
outsl
pop
sbb
pop
notl
jne
fucomp
dec
jb
cmp
dec
ret
fistps
jae
fmuls
sbb
pop
fcomps
arpl
vshufps
and
mov
and
adc
cmp
push
add
mov
fwait
pop
xlat
mov
hlt
lods
push
jp
ficoml
and
sub
jp
dec
iret
popa
mov
cmpsb
sbb
cwtl
scas
pop
xchg
loope
xor
or
aad
icebp
dec
sbb
rep
ds
sti
inc
xchg
adc
fbld
push
mov
sub
cmp
jl
add
bound
adc
je
and
jbe
pusha
sub
enter
inc
adc
cld
sbb
lds
adc
hlt
push
sub
sbb
jecxz
test
sbb
cld
jge
dec
insl
jmp
cs
inc
clc
xchg
cmpsb
aaa
push
bound
test
mov
mov
fisubs
mov
sub
cmpsb
jl
jp
cs
mov
loope
aam
mov
mov
movsb
mov
cmp
pop
dec
dec
out
add
jbe
push
aas
pop
sub
test
push
sbb
lret
xchg
lock
lret
inc
int
mov
cmpsb
pop
push
mov
or
pusha
inc
lret
xchg
outsb
clc
cmc
std
decb
mov
pop
cmp
fisttpl
test
fdivp
cwtl
sbb
or
xchg
and
cmpsb
ja
xchg
ds
out
ljmp
jl
in
fistps
call
cs
sbb
sub
sbbl
rolb
or
js
ret
ffreep
jle
mov
dec
sub
push
mov
icebp
imul
imul
int3
mov
js
leave
divb
in
int
test
out
adc
mov
pop
pop
cmpsl
sub
aam
sti
ds
rolb
push
jb
cwtl
push
xor
xchg
dec
addb
pop
xlat
outsl
or
imul
decb
aas
iret
pop
lods
addr16
es
cltd
xchg
bound
lods
inc
lret
jo
push
inc
push
cwtl
sbb
idiv
fcoms
or
clc
jmp
push
jae
push
push
cwtl
and
mov
into
inc
add
jmp
aam
pop
mov
stc
jmp
adc
xorl
xor
adc
aaa
cmp
dec
sbb
jg
test
xor
in
cmpsl
jmp
loopne
lret
mov
sbbb
add
pop
mov
mov
sub
mov
imul
jle
shrb
lods
fstps
sahf
loop
adc
dec
pushf
imul
testl
or
cmpsb
sub
aam
push
mov
mov
ret
mov
mov
mov
sti
adc
fcoml
lcall
adc
and
mov
aas
sbb
xor
xor
int3
sbb
pop
daa
sub
in
cmp
pop
mov
pop
xchg
fsubl
push
pop
in
imul
pop
push
popa
es
inc
inc
inc
cmp
clc
repnz
je
xchg
or
hlt
ds
jl
sub
divb
das
add
add
mov
xchg
jbe
mov
add
inc
cmp
movsl
jge
and
bound
fidivrs
aas
repnz
inc
lret
push
adc
fs
push
ss
xor
cltd
and
mov
clc
and
test
jp
and
pop
dec
test
outsb
jle
pop
fldcw
add
inc
cmova
in
inc
sbb
into
paddw
adc
dec
in
lcall
out
mov
movsl
mov
mov
repnz
add
pop
push
or
or
jbe
add
int
dec
pop
or
jns
sub
dec
lods
sub
fiadds
jge
in
adc
scas
mov
loopne
dec
aam
int
mov
xor
std
cmpsl
or
call
add
outsl
add
movsb
pop
repnz
push
nop
out
mov
push
or
ficompl
jecxz,pt
mov
cmp
jmp
push
xor
inc
mov
push
push
add
fisubl
xchg
sub
inc
jmp
stos
scas
enter
xor
jle
das
pop
or
out
lods
adc
mov
movsl
lret
and
inc
stc
fldcw
outsb
repz
add
mov
cmpsb
mov
lea
mov
push
lahf
cmp
aam
stos
sbb
push
stc
xchg
xor
jmp
sbb
push
sti
push
or
repz
inc
pop
jp
cs
insl
xchg
xchg
into
dec
dec
pop
and
push
jns
and
clc
xchg
lods
xlat
jp
int3
repz
insl
inc
lds
jo
int
push
add
xor
cli
fiadds
bound
jmp
cwtl
ret
or
xchg
dec
jecxz
xchg
pop
cld
adc
or
xchg
jl
jne
loop
mov
imulb
scas
and
jb
pop
sbb
sbb
jp
enter
add
cltd
push
stos
adc
cmc
lock
or
cltd
iret
mov
adcb
mov
push
pop
pusha
mov
ljmp
inc
xor
cmpsl
jbe
pop
iret
push
jle
test
fistps
arpl
ret
or
ljmp
jb
add
dec
sbb
repz
rorb
fimuls
stos
adc
cmp
sub
pop
pop
aaa
pop
je
add
pop
add
imul
adc
add
dec
outsl
out
xchg
ficoml
in
ret
stos
add
ja
arpl
sbb
aad
pop
icebp
cld
addb
das
xchg
scas
lea
push
sbb
in
lock
cmp
mov
or
stos
dec
aam
fwait
pop
dec
or
lea
lock
push
repz
and
add
call
dec
das
fwait
movsb
pop
shrb
movsl
mov
int3
jne
xchg
stos
adc
ss
leave
rcl
lahf
xchg
insl
into
xchg
out
rcrb
add
sahf
add
outsl
push
mov
xchg
ret
xlat
jmp
push
stc
xchg
in
sahf
popa
mov
inc
loopne
push
cwtl
outsb
sub
ds
jg
xor
dec
push
jp
or
leave
add
sbb
scas
push
jno
mov
mov
stos
filds
pop
decl
xchg
jl,pn
and
push
xchg
fsubl
jo
and
add
iret
push
sbb
fwait
push
popf
repnz
lret
sub
push
flds
ret
or
mov
mov
icebp
lods
ja
ljmp
ficompl
pop
stos
xor
orl
popa
mov
mov
jae
loope
out
repnz
xor
imul
push
sub
inc
push
movsb
pop
xchg
insb
popf
ss
ljmp
push
arpl
adc
inc
lock
push
aaa
mov
daa
mov
cmp
cmp
mov
inc
ficomps
xchg
inc
push
jmp
push
mov
cli
int3
push
xor
int
popa
mov
mov
les
leave
add
add
xor
adc
inc
std
jb
cmp
mov
sbb
movsb
xchg
and
addr16
adc
in
mov
fstpl
and
push
sub
lret
mov
xor
orb
outsb
sub
push
dec
cmpsl
loop
mov
cmc
xor
adcb
dec
adc
mov
mov
add
pop
cmc
push
hlt
push
pop
push
mov
inc
cmp
sub
int3
mov
scas
push
mov
jmp
movsb
lea
mov
out
mov
sahf
mov
dec
mov
sbb
mov
inc
lea
sbb
repnz
or
xchg
mov
shl
dec
xchg
in
inc
add
into
cli
outsl
bound
and
push
stc
mov
dec
flds
pop
shrl
hlt
ja
add
pop
xor
outsb
jne
add
fldl
dec
sub
inc
in
outsl
arpl
add
mov
dec
movsb
cmpsl
mov
movsl
in
fmul
aam
and
add
mov
in
jecxz
inc
jp
lds
ret
ret
dec
mov
pop
dec
cmp
pusha
sbb
lock
jb
leave
jnp
mov
push
in
xchg
mov
insb
out
lahf
cmp
jno
add
xor
aad
stos
out
mov
pop
test
xor
insl
mov
push
or
or
pop
push
mov
notb
mov
jecxz
adc
loope
inc
ret
or
lret
push
outsb
out
jb
cmp
xchg
jno
fistl
pop
mov
leave
add
jg
pop
dec
and
dec
cmc
fs
ss
jae
fcompl
mov
sbb
dec
addr16
movsb
pop
cmpsb
test
rcrl
les
ret
and
dec
xchg
lret
mov
mov
lock
std
xor
insl
jne
mov
loope
dec
xor
sbb
icebp
pusha
inc
mov
adc
cmp
call
xorb
cmpsl
cmp
sub
test
subb
add
xchg
and
lock
xchg
xchg
ljmp
or
out
shll
push
test
das
sahf
pop
pop
jecxz
jae
scas
add
pop
cmovae
push
and
jp
int3
jle
icebp
inc
pop
data16
shlb
xor
cmpsb
jno
sub
outsl
mov
loopne
cltd
pop
pop
fcmovb
jb
sahf
int3
or
fnsave
scas
push
xchg
scas
mov
fisttpl
popa
jne
lahf
mov
enter
xor
lret
sub
xor
push
nop
sub
mov
pop
shll
pushf
mov
negl
repz
mov
xchg
push
std
xor
repnz
leave
jle
cmp
mov
dec
fidivrs
loopne
dec
outsl
push
push
mov
push
sbb
inc
aam
enter
les
push
sbb
push
lock
xchg
mov
ss
add
cmp
sbb
insb
add
ret
jae
dec
mov
imul
mov
adc
cmp
pop
xchg
jp
je
fildll
jl
fsts
ret
push
addr16
jns
fisttps
and
mov
xor
shlb
lea
xor
xchg
xchg
jge
sbb
cmp
adc
pop
cmp
clc
cmp
sub
cmp
push
rcrb
mov
rol
mov
fwait
popa
loop
mov
cmp
push
jl
repnz
shl
sbb
adc
test
imul
pop
inc
push
xchg
loope
loop
adc
mov
in
push
testb
punpckldq
sub
mov
xor
dec
mov
dec
lock
jg
sub
std
in
dec
mov
jo
idivl
xor
ss
jmp
mulb
mov
imul
pop
and
sbb
pop
jle
daa
xchg
xor
jp
das
shlb
cmp
rcrl
mov
mov
fmull
jp
ret
movl
shlb
sbb
mov
insb
pop
cld
subb
enter
mov
lods
xchg
xchg
pop
add
aaa
cmp
sbb
push
cmp
lcall
and
pop
nop
mov
not
inc
movsl
call
adc
mov
jns
dec
xchg
jbe
popf
ret
inc
call
test
stos
add
mov
and
sbb
push
sub
add
or
xchg
cltd
xchg
out
shlb
nop
loopne
mov
stc
xchg
out
lahf
bound
sarl
pop
rolb
xlat
push
rolb
stc
or
pop
add
xchg
sub
pop
mov
hlt
inc
push
aaa
dec
insb
sub
dec
insl
gs
cmpsl
lret
insl
dec
scas
and
add
decb
sarb
and
mov
gs
leave
mov
test
jo
mov
mov
pop
mov
sub
dec
test
into
inc
or
sub
push
loopne
adc
jmp
xor
sar
je
and
ret
sub
ret
addr16
or
insl
repz
inc
stos
pop
das
idivl
pop
in
mov
xor
insl
clc
sarb
add
shrb
or
adc
mov
ficompl
sub
icebp
int
cmp
push
cmp
out
xchg
popa
aaa
dec
hlt
je
outsl
inc
loop
lea
pop
popf
rcl
or
call
stos
fnstenv
push
pop
add
int
push
inc
jmp
xchg
dec
mov
andb
imul
mov
dec
ret
ja
ficoml
subl
inc
mov
pusha
int
push
lea
aad
jp
and
pop
mov
inc
add
test
aad
sbb
xor
and
inc
sarl
adc
aas
into
andl
cmp
cmpsl
xchg
sti
push
pop
adc
xor
das
push
lahf
xchg
fs
or
mov
jp
adc
fistps
pop
pop
jg
sti
outsb
jae
lret
add
stos
jno
sti
fwait
bound
fidivrs
pop
mov
push
jmp
mov
arpl
sbb
push
or
sub
jb
pushf
push
add
int3
rorb
sbb
ljmp
jmp
push
jp
sbb
test
adc
xchg
ret
xlat
test
xor
cmp
mov
in
cmp
lods
mov
mov
test
dec
out
sbb
push
jp
in
dec
pop
insb
pop
aaa
sahf
xor
sti
xlat
xchg
inc
xchg
sub
test
imull
xor
and
lahf
cltd
xchg
hlt
mov
push
or
push
sbb
shrb
stos
cmpl
sbb
in
movsl
mov
adc
pop
hlt
jle
sbb
fnstcw
aas
pop
pop
mov
lods
xor
imul
pushf
xor
mov
dec
dec
fdivrl
lds
xor
flds
adc
xchg
pop
xchg
pop
out
aam
repz
out
pop
adc
mov
rol
in
mov
pop
xchg
fcmovnu
or
xor
and
sbb
inc
fwait
lods
push
cmpsb
ret
jmp
in
push
pop
in
mov
push
adcl
rcll
mov
mov
xlat
fisubrl
cmp
cmc
shlb
cld
mov
fwait
mov
lret
sub
ret
mov
dec
adc
sbb
sub
shr
xor
sar
push
adc
pop
dec
sub
movb
mov
dec
jo
mov
mov
outsb
mov
inc
nop
or
jbe
sti
out
rcll
add
push
sub
mov
mov
inc
cmpsb
out
cmp
cltd
mov
lahf
in
int
and
ret
xchg
dec
inc
out
or
cmp
or
imul
gs
xor
mov
xchg
aaa
mov
das
outsl
lds
repz
and
stos
fcomi
push
rcl
gs
mov
shlb
icebp
lods
jmp
sbb
sub
test
jne
sbb
dec
repz
cld
mov
arpl
push
jg
cmp
mov
movsl
sahf
imul
imul
ljmp
sbb
mov
into
sbb
jp
loope
rorl
sbb
cs
sub
xchg
xor
mov
cs
mov
sahf
xchg
shrl
mov
int
xchg
xchg
dec
lret
dec
shll
and
icebp
or
mov
test
mov
add
fsts
insb
aas
mov
add
push
push
loopne,pn
arpl
sub
xchg
inc
cmpsl
ret
xor
scas
xchg
in
sahf
int3
jge
inc
dec
das
popa
fcomp
and
xchg
and
push
mov
leave
repnz
shll
scas
sbb
add
rol
cmpsb
adcl
xor
mov
fstl
inc
adc
cs
popf
jecxz
sub
sub
sub
pop
xlat
scas
inc
enter
or
scas
push
mov
test
push
jge
adc
adc
cwtl
mov
test
cmp
mov
hlt
mov
cltd
sub
stos
mov
leave
aad
cwtl
mov
or
ja
sbb
push
or
pushf
jnp
and
popf
lahf
test
lret
dec
xchg
jl
cld
sbb
xchg
cmp
icebp
dec
imul
xor
jmp
mov
daa
adc
cmp
jno
xor
jo
out
and
mov
dec
out
cmp
sbb
mov
leave
daa
sub
lcall
mov
push
outsl
in
and
dec
ja
and
push
or
addb
mov
sbb
in
jmp
test
inc
cmp
fimuls
or
adc
add
icebp
jle
pop
xor
out
xor
mov
js
outsb
pop
xor
or
shll
cmp
test
cmp
repnz
mov
test
fisttps
lds
call
bound
pop
jecxz
out
mov
pop
push
mov
lahf
je
sub
push
mov
dec
dec
out
je
or
lahf
aam
push
cmp
jnp
cs
repnz
clc
lcall
mov
fidivrl
xchg
and
pop
push
lods
sahf
hlt
xchg
cli
inc
mov
bnd
fistps
les
jmp
xchg
pop
cmp
add
inc
popa
sbb
and
mov
mov
ja
inc
add
pop
stos
cs
jb
clc
push
sbb
jae
mov
inc
mov
incb
mov
and
xchg
fcoml
mov
push
and
dec
or
addr16
sub
jnp
lods
orb
jae
ret
xchg
inc
sbb
cld
cmpsb
icebp
xchg
xlat
dec
and
pop
in
pop
xor
mov
pusha
adc
mov
std
cmp
jp
push
adc
dec
adcl
lahf
mov
ljmp
out
int
sub
sub
lds
pop
adc
sti
int
adc
mov
scas
dec
dec
out
insb
aam
push
adc
pop
loop
xor
push
dec
adc
shlb
mov
test
and
test
test
enter
sub
xchg
insl
cwtl
pusha
dec
xlat
sbb
lret
mov
mov
add
push
push
fsubl
dec
sub
jo
outsb
lods
faddl
jecxz
jo
imul
cmpsb
sbb
jo
lret
ret
jns
dec
jb
xlat
arpl
lret
mov
fidivrs
bound
xlat
push
cli
xor
mov
orl
out
ds
adc
fbld
xor
aam
or
jb
ret
mov
lcall
arpl
scas
sub
dec
nop
pop
jge
adc
jb
and
dec
push
jp
xchg
xchg
xor
cmp
call
in
jp
rol
faddl
fnsave
mov
in
mov
dec
clc
test
pop
jno
xchg
xchg
in
jno
push
out
add
jg
lret
fcompl
stos
dec
sub
into
insl
dec
loope
subl
mov
ds
inc
shrb
mov
fcoml
mov
or
jmp
dec
wrmsr
in
imull
adc
mov
leave
mov
mov
xchg
lods
jecxz
pop
aam
jmp
adc
loopne
jecxz
add
mov
shll
mov
cs
mov
dec
out
and
sbb
jns
pushf
push
jo
xchg
js
movsl
test
xor
cs
dec
mov
dec
out
jnp
pop
std
xorb
sub
hlt
pop
dec
fwait
dec
mov
test
pop
xor
xlat
fcompl
scas
and
adc
jl
add
add
inc
mov
xlat
roll
pop
mov
lcall
xchg
dec
add
xchg
call
mov
nop
lret
mov
es
jmp
add
lret
xchg
cmp
fidivs
in
push
xor
jno
mov
sahf
into
mov
imull
fcmovnu
push
lea
lret
dec
mov
mov
dec
mov
mov
sbb
inc
js
lcall
inc
mov
jg
int
add
lods
fwait
mov
xor
test
sub
inc
pop
add
mov
pusha
loope
mov
mov
xor
mov
inc
mov
aas
xor
lods
mov
scas
fs
inc
xor
mov
adc
das
iret
ds
push
ja
gs
stc
cmp
xchg
inc
and
lret
pop
lret
xchg
push
scas
and
rcl
or
pop
sbb
adc
pop
adc
xchg
movsb
insb
repnz
jle
inc
sti
mov
mov
mov
cmp
scas
mov
cltd
ret
push
cs
mov
hlt
sbb
pop
pushf
lret
push
imul
cmpsb
jne
jae
jmp
and
mov
sub
push
jg
rcrb
addr16
xor
pop
add
cmpsl
cmp
sahf
pop
frstor
push
cmpl
or
cmp
mov
jmp
sub
xchg
aad
fisttpll
inc
inc
xor
divb
sbbl
enter
cmp
sbb
lcall
inc
add
fimuls
cmp
ja
pushf
cli
pusha
out
or
add
stc
jno
outsb
fs
jmp
cmp
lahf
push
cmpsl
outsl
shll
lock
and
mov
ja
sbb
pop
mov
inc
mov
fst
sub
lfs
mov
and
cmp
das
inc
pop
inc
lock
pop
xchg
add
out
jbe
pushf
xorb
cmp
test
es
out
push
loopne
jecxz
pop
xor
inc
jge
add
xchg
sbb
cli
and
fmull
out
jno
call
mov
les
mov
roll
add
sub
insb
mov
sub
jmp
or
jp
cmc
ja
cmp
ds
jle
bound
pusha
mov
mov
inc
xor
rorb
popa
movsb
sub
mov
insb
pushf
mov
mov
imul
mov
pop
bound
pop
push
fs
push
mov
pushf
mov
cmp
andl
sti
or
sub
inc
xor
cmp
sub
imul
inc
cwtl
mov
jp
arpl
jle
leave
imul
shl
lea
pop
dec
mov
xor
xor
fcomps
addr16
pusha
add
out
push
mov
xchg
pop
sbb
in
add
std
out
int3
fbld
cltd
inc
lcall
loop
and
ja
fistps
fmull
out
cmp
and
push
jbe
das
outsl
xchg
scas
jno
or
cmc
jb
fdivs
shl
cmc
jns
xchg
fsubs
adc
adc
aaa
repz
out
rorb
iret
hlt
jmp
icebp
add
or
stc
loope
fldl
sbb
inc
or
mov
push
shrl
cs
and
popf
cli
mov
fnstenv
cmp
pop
imul
xchg
ret
inc
inc
cmp
in
sub
and
inc
and
sub
cmp
adc
jne
out
and
gs
ds
cmpsb
outsb
jne
lret
sarl
dec
mov
xor
cmc
mov
dec
orl
mov
data16
xchg
pop
jno
lock
or
xchg
or
std
sbb
test
lret
mov
push
lods
mov
push
xorl
sub
jmp
dec
xchg
push
sbb
pushf
nop
jbe
addl
pusha
add
cld
loopne
sbb
xchg
outsl
testb
fs
movsb
push
arpl
mov
loopne
lods
gs
aaa
lods
push
clc
cltd
jmp
dec
pop
dec
int
ja
mov
mov
imul
outsb
add
xor
lock
mov
icebp
push
lock
insb
lods
aaa
hlt
clc
aas
add
fwait
lock
jg
movsb
push
stc
jge
movl
mov
dec
and
sti
or
or
inc
inc
sarl
jo
aad
test
mov
pop
xchg
xchg
clc
cmp
movsl
sub
cmp
rol
js
ret
jg
pop
add
fbld
dec
in
data16
scas
push
shll
arpl
mov
mov
mov
push
cmp
jmp
cmp
xor
adc
roll
out
push
xor
adc
mov
mov
ret
ffreep
mov
mov
rcll
rcll
out
mov
cltd
cmp
or
mov
lcall
js
out
xchg
leave
insl
sbb
insb
pop
movl
sub
push
push
mov
popa
stos
push
sub
mov
stc
push
add
clc
jg
ja
xchg
pop
push
push
fcomi
sbb
push
mov
not
popf
mov
rcrb
pusha
pop
xchg
or
sahf
adc
cmp
out
jle
or
adc
and
sbb
imul
push
pop
adc
sbb
mov
sbb
imul
jp
iret
pop
mov
fs
movsl
mov
mov
xchg
insl
loopne
in
mov
xchg
sbb
sub
icebp
movsl
nop
and
jno
mov
inc
pop
jle
dec
add
xor
loope
mov
jno
dec
add
pop
cmp
je
dec
inc
mov
push
rcrb
pop
mov
sbb
pop
xor
jne
xchg
mov
mov
gs
shrb
jns
or
jmp
vpcmpgtb
mov
popf
ljmp
xchg
arpl
lcall
cwtl
loopne
xchg
sbbb
xor
xor
ss
fsub
clc
test
lock
cmp
inc
push
dec
and
add
in
xchg
sbb
mov
pop
and
push
in
in
xor
dec
dec
ror
in
rolb
sub
mov
or
sbb
int
sbb
add
mov
sti
add
arpl
xchg
cmp
lds
cmp
push
nop
nop
sub
push
loop
lds
add
sbb
fucomip
ljmp
lret
xor
inc
or
xchg
outsl
bound
and
pop
nop
and
cmp
sbb
pop
pop
xor
out
jb
aas
ds
out
mov
cmp
pop
in
pushf
enter
cmp
inc
and
mov
insb
cmp
sub
ss
cmp
cwtl
out
or
pop
push
jp
mov
mov
push
pop
sub
cltd
pop
cmp
lock
flds
cmp
out
imul
mov
aas
lea
mov
mov
int3
and
test
xor
mov
xor
dec
je
mov
mov
add
cmc
pop
dec
ret
ds
orl
sti
dec
push
inc
sub
mov
rclb
lock
sbb
imull
lahf
dec
add
ja
test
xchg
scas
push
and
xchg
popa
out
inc
ljmp
jl
mov
xor
or
push
push
xchg
in
call
dec
push
das
mov
sbb
mov
xchg
loopne
lock
sarl
notrack
sub
jp,pn
pop
repnz
dec
cmpsl
orl
mov
shrl
leave
inc
cmp
jno
xchg
fldl
push
call
test
dec
pop
ffree
sarb
cmc
daa
mov
mov
nop
popf
mov
in
lcall
inc
iret
andb
push
lods
cmp
scas
adc
cmp
rcrl
rorb
sbbl
lret
cmp
arpl
ror
or
clc
insl
add
outsb
sub
sub
add
fnstcw
mov
clc
jo
fadds
add
mov
xchg
jge
inc
sub
in
call
or
ret
push
pop
mov
fmuls
cmp
pop
lcall
push
into
test
xchg
pop
stos
or
push
or
adc
or
xchg
xlat
xor
ret
arpl
adc
mov
pop
bound
push
xchg
and
nop
jmp
push
jle
cmpsl
aad
scas
stos
repz
inc
adc
fs
sub
or
sbb
push
sub
ja
sub
addr16
sub
lcall
adc
push
and
inc
dec
cmp
sub
jbe
inc
out
inc
xchg
sahf
shlb
fwait
lea
gs
mov
in
mov
xchg
in
xlat
push
mov
add
dec
repnz
add
sub
mov
inc
xor
xor
fs
cmc
adc
loop
inc
aam
jb
iret
lock
add
mov
add
mov
mov
aas
stc
gs
in
pushf
lock
out
fucomip
popf
ret
lcall
push
stos
std
fldenv
sub
push
push
add
js
mov
faddl
mov
cltd
cmc
pusha
and
mov
scas
pop
jns
mov
shlb
movsl
sub
fisubrs
mov
aad
or
loopne
fistpl
xorb
rcrb
xchg
inc
lret
jae
repz
sub
and
cmpsl
xchg
pushf
lods
inc
rcrl
or
inc
stos
test
mov
aaa
lret
push
add
rcrb
jne
mov
loop
cli
pop
push
inc
shlb
push
or
pusha
cli
nop
fcoms
mov
mov
cmc
and
mov
mov
xor
xlat
pop
inc
fsubs
add
insb
and
sbb
outsl
mov
test
push
fidivrs
cmp
lds
xor
test
pop
push
movsl
cmpsl
mov
xor
out
xor
jl
mov
add
xchg
xor
pop
mov
mov
sub
mov
std
movsl
push
mov
jno
arpl
pop
sbb
movsb
stc
dec
inc
test
sub
outsl
cmpsl
out
push
sub
stos
out
aam
ret
mov
mov
imul
ljmp
pop
xchg
pusha
orl
pop
lret
repz
int
adc
sub
xchg
shlb
xchg
fidivs
adc
xor
mov
aas
lret
jbe
std
clc
jnp
push
inc
test
mov
daa
pop
fidivl
les
dec
aad
in
dec
inc
loop
fcoms
scas
sub
nop
mov
pop
pop
inc
aam
nop
repz
or
jp
cli
fidivrl
clc
insl
dec
mov
mov
jo
mov
pop
rolb
repz
cmpsb
je
xchg
stc
ljmp
mov
aam
out
push
add
popf
jb
aad
sub
jmp
sub
fnsave
in
call
imul
push
mov
addb
inc
aad
lret
push
push
and
call
lahf
test
outsl
mov
xor
adc
loopne
mov
xchg
kortestb
sbb
xor
mov
loopne
cmp
add
jecxz
out
mov
push
xor
pop
cmp
leave
in
stos
inc
hlt
ss
jae
lods
dec
scas
mov
mov
js
gs
movsb
inc
push
mov
arpl
insb
outsb
repz
mov
cmp
aad
lea
inc
inc
daa
and
nop
rclb
gs
pop
cld
xchg
out
int3
push
mov
test
leave
mov
mov
cwtl
xchg
je
mov
out
jge
pop
jge
sti
sub
mov
xor
jne
aas
and
xchg
sbb
adc
or
pop
jl
shl
sahf
ds
cmp
or
fldenv
fs
lock
jle
lret
lcall
enter
sti
bnd
movsb
pop
or
adc
mov
test
jno
sahf
sub
pand
rcrl
out
xor
adc
mov
iret
mov
jae
inc
cltd
nop
cmc
mov
inc
jl
dec
pop
shll
mov
in
lds
jns
test
push
mov
pusha
loop
or
negb
sahf
iret
std
nop
sbb
lds
enter
clc
iret
mov
das
mov
out
dec
lea
mov
dec
push
fdiv
dec
xor
mov
icebp
sbb
cmp
jmp
call
addl
loope
mov
andb
das
sbb
add
push
sbb
aas
into
or
scas
int
adc
dec
sub
dec
cmp
out
sahf
fadds
jo
mov
test
and
mov
movsb
call
loopne
sbb
jp
fwait
xchg
fidivs
xlat
and
xchg
es
sahf
mov
shll
sub
loop
jge
adc
or
mov
addr16
push
xlat
jg
xor
or
adc
into
ja
loope
iret
xorl
repnz
stos
push
out
arpl
cmpsl
inc
push
jp
xchg
fs
mov
and
leave
std
jns
out
addr16
lock
iret
gs
jbe
stos
sub
mov
push
dec
or
xor
or
sbb
call
and
out
mov
mov
int3
inc
lret
inc
sar
sbb
jae
push
add
pop
jle
lea
inc
int
inc
adc
add
inc
xchg
out
or
scas
sbb
les
daa
jge
mov
sti
sbb
getsec
mov
dec
cmc
das
and
fcom
lds
mov
stc
leave
add
mov
loop
pop
aaa
loope
icebp
push
or
outsb
std
daa
dec
lcall
mov
cmp
xchg
lds
outsl
inc
push
sbb
call
movsb
call
testl
ror
repnz
dec
daa
xchg
sub
xlat
or
mov
jnp
outsb
shl
movsl
pusha
movsbl
nop
pop
outsb
lret
scas
ljmp
xlat
mov
push
push
mov
leave
insb
adcb
sbb
inc
sbb
cmpsb
pop
xchg
jne
sub
test
sbb
mov
push
mov
cwtl
xchg
mov
out
arpl
adc
shll
rcrb
in
out
add
fadds
jb
inc
or
jb
push
lret
fs
mov
xchg
pushf
inc
pop
xchg
outsl
mov
lahf
je
push
sbb
push
inc
mov
mov
call
int3
jae
dec
lcall
cmp
loope
stos
pop
std
dec
lahf
pop
lds
push
js
inc
cmp
ds
loopne
xlat
sarb
sbb
mov
pop
inc
mov
push
pop
mov
cli
or
cmova
dec
bound
repz
icebp
fs
fs
hlt
push
lret
mov
cmpsl
xor
aas
jecxz
mov
icebp
aam
stos
out
or
cld
inc
hlt
cmp
les
in
inc
pop
fcmovu
loope
mov
popf
mov
and
dec
loope
leave
das
inc
hlt
cwtl
mov
jnp
push
out
loop
mov
jns
mov
push
push
bound
xor
xchg
mov
imul
out
in
leave
or
sarb
mov
fildl
in
sub
push
sub
mov
ret
mov
push
js
inc
scas
adc
in
mov
pop
cltd
and
adc
in
data16
xchg
lret
std
faddl
xchg
mov
hlt
push
jge
inc
xchg
dec
pop
push
dec
popf
and
mov
fsubr
pop
gs
jnp
jge
push
fcos
adc
pop
mov
rcll
repnz
repnz
xor
mov
jge
push
cmp
shrl
or
jns
adc
ss
jns
aam
adc
icebp
les
xchg
das
repnz
push
sbb
daa
mov
clc
cmp
lock
mov
xorb
dec
call
scas
ds
outsl
stos
add
xor
adc
ret
push
jbe
cltd
out
mov
and
push
cltd
jb
fiaddl
imul
xchg
pop
fisubl
nop
lea
jp
push
int3
add
mov
jecxz
push
stos
xchg
pop
jge
or
subl
and
add
bound
add
out
cwtl
mov
lock
cmp
aas
inc
fimull
pop
mov
nop
out
dec
pop
test
sahf
aad
filds
test
xor
loopne
ret
das
adc
and
call
popa
repnz
sbb
or
add
and
aaa
fcompl
rol
movsl
xor
mov
jg
popf
lods
test
push
cmp
push
std
aad
jo
jo
dec
test
adc
jbe
xchg
ret
lret
cmp
jg
push
loopne
fnclex
mov
outsb
jge
loope
jmp
and
fsub
and
inc
jno
negl
adc
aas
adc
test
push
mov
das
fildll
sbbb
adc
fldt
jae
cmp
xor
mov
cli
das
lods
shll
mov
dec
rcrb
mov
fwait
lret
dec
inc
or
jno
jbe
std
inc
and
icebp
mov
sbb
xor
in
and
jae
adc
push
jbe
sub
inc
dec
test
gs
mov
push
pushf
in
xchg
lret
dec
outsb
jns
arpl
pop
rcl
adc
and
sub
mov
add
into
pop
cmpb
out
in
int3
jp
faddl
addb
iret
into
mov
add
jb
xor
nop
or
into
dec
lock
inc
test
sti
mov
sub
jae
outsl
dec
add
push
icebp
popa
stos
lds
pop
rcrb
clc
sbb
addr16
push
mov
ficoms
jecxz
sti
mov
js
pop
cld
inc
dec
mov
dec
popf
push
ss
mov
xorl
lret
movsl
mov
or
int3
test
mov
shll
test
xchg
mov
inc
rcr
fs
std
je
jmp
jnp
sti
mov
stos
pop
xchg
outsl
add
mov
roll
inc
stos
mov
or
cld
movsb
sbb
dec
out
push
mov
jg
adc
je
popl
inc
or
xchg
pushl
mov
outsl
iret
cmp
movsl
sti
pop
out
cmp
xor
fsubr
mov
adc
pop
cmpsb
rorl
dec
rorb
insl
inc
xchg
sbb
rorb
and
add
cmp
and
sub
mov
pusha
cmc
or
dec
stos
sbb
ror
mov
dec
jae
adc
push
inc
jns
dec
add
inc
idivb
test
pop
mov
adc
mov
cmpb
pop
test
ficoml
test
mov
or
mov
std
test
sub
das
in
push
jb
jb
clc
addr16
xor
hlt
sub
mov
mov
fidivl
cwtl
aaa
mov
mov
and
int
js
pop
and
xchg
out
xor
adc
call
in
call
or
cltd
mull
xor
add
push
jle
inc
ss
cli
aam
xor
je
sbb
sub
and
dec
mov
dec
mov
or
and
loope
xor
int
movsb
cs
mov
xor
push
pushf
add
pusha
outsb
or
fnstsw
cli
mov
push
pop
enter
xor
inc
lret
lods
cmpb
ljmp
pop
test
in
popa
xchg
stos
jp
fdivr
and
cmpsl
inc
pop
out
gs
bound
test
sahf
aam
jne
inc
rcrb
pop
adc
jmp
outsl
leave
sahf
dec
xchg
adc
lods
in
mov
xor
add
out
jmp
or
fdivl
imul
fstpt
push
inc
push
filds
lret
lods
stos
push
mulb
adc
jnp
jb
rcr
jns
arpl
clc
push
xchg
or
pop
movsl
sbb
xor
aaa
and
pop
mov
jmp
or
popf
jl
sbb
xor
inc
push
xlat
push
test
sahf
fldcw
pop
mov
xor
sbb
cmpb
cs
or
out
add
aas
out
outsl
out
std
dec
dec
stos
jg
mov
das
mov
or
mov
mov
xor
sub
add
dec
xor
test
jmp
push
int
pop
imul
imul
ss
into
scas
xor
maskmovq
divl
mov
or
jbe
popa
mov
xchg
repz
in
dec
jno
xchg
jmp
shll
mov
dec
shll
mov
lahf
repnz
and
pushl
test
je
mov
or
call
xor
add
cmp
adc
cmp
inc
push
lret
imul
pop
cmp
je
enter
xchg
popa
popf
xor
adc
decl
mov
inc
movsl
fs
lea
push
in
or
dec
frstor
rcrb
or
cwtl
and
push
inc
pop
xchg
push
push
pop
add
arpl
jo
adc
mov
jge
mov
or
xchg
push
or
iret
mov
mov
mov
iret
pop
imulb
pop
push
vsubss
cmp
lret
std
adc
sub
and
mov
mov
nop
popa
xlat
or
and
and
jecxz
bound
dec
mov
xor
cmp
aam
or
xor
out
arpl
outsl
leavew
scas
enter
mov
iret
mov
push
fdivrs
lahf
fisubrl
fiaddl
dec
cvtpi2ps
jno
cmp
outsl
enter
xchg
les
pop
push
xor
out
mov
das
fwait
xchg
rcl
jg
std
xchg
mov
or
lcall
sti
cmp
lcallw
cmpsb
dec
xchg
std
mov
fcoms
aam
mov
orb
test
and
stos
in
ret
mov
adc
in
jns
sub
ds
and
sub
arpl
pop
cltd
push
fdivp
mov
cmp
fldenv
push
frstor
inc
mov
mov
mov
sub
loop
add
sbb
popa
call
push
arpl
popf
sbb
cltd
cmpsl
dec
jb
mov
test
out
lods
lret
lcall
cmpsl
jbe
in
sub
xor
xchg
cs
xchg
int3
push
jo
add
aad
fwait
sub
popf
jne
daa
hlt
xor
lret
imul
mov
lock
jbe
data16
sbb
mov
dec
repz
les
flds
sbb
pop
jl
mov
add
pop
push
sahf
dec
rorb
ret
mov
popa
dec
fcompl
scas
jmp
sbb
cmp
push
fwait
stos
mov
jb
and
in
xor
inc
ret
gs
mov
rcrb
icebp
mov
andl
mov
or
cld
bound
in
insb
pop
pop
lahf
nop
fstl
insl
lock
cmp
add
xor
fistps
sbb
xchg
inc
stc
pop
adc
pop
loop
sbb
sub
adc
or
xchg
outsl
outsb
lcall
lea
ljmp
or
lock
aas
imul
push
into
sub
sub
aam
inc
and
lcall
int
and
jmp
push
mov
mov
mov
jae
in
test
aaa
ja
mov
daa
test
jns
leave
dec
mov
repz
sub
jecxz
mov
fsubp
jne
pop
sub
jo
xchg
stc
shld
decb
test
mov
push
mov
cli
push
adc
mov
paddusb
xchg
sub
les
rolb
jecxz
ret
lahf
fcomps
mov
xor
ret
mov
push
inc
clc
adc
push
addr16
mov
addr16
repz
fstl
xchg
mov
test
pop
test
sbb
jecxz
lret
mov
adc
sbb
outsl
push
mov
xchg
fisubrl
inc
sub
or
xorb
mov
repnz
mov
cld
xor
add
lock
dec
sbb
iret
in
push
movb
jp
out
mov
cli
ficomps
in
cmp
popa
cmp
lds
inc
jl
sbb
lds
repnz
mov
into
adc
xor
rcl
aad
ljmp
xchg
cwtl
or
or
jg
loopne
cmp
mull
xchg
fsubs
cmp
cltd
pop
dec
aas
hlt
or
sbb
mov
movsl
fwait
and
fldenv
mov
out
inc
js
push
test
aas
cwtl
adc
loop
fucomp
dec
outsb
jb
or
cs
sub
cmp
les
xor
sub
fimuls
fildll
push
pop
jecxz
stos
test
jae
mov
mov
push
popl
jo
ja
negb
scas
jno
in
jecxz
fstpl
dec
lds
mov
push
stos
pop
ror
outsb
lea
mov
fnstenv
cmpsb
scas
pop
fcmovb
and
add
sbb
inc
clc
lret
int
pop
popf
in
fisubrs
mov
adc
or
inc
push
test
push
addl
sahf
and
dec
stc
out
xchg
lcall
call
es
sub
xor
mov
or
xchg
sub
idivl
push
jg
pop
and
fwait
lcall
insl
xlat
pop
mov
jmp
scas
mov
push
movsb
adcb
iret
repnz
add
pop
lds
mov
aas
jns
hlt
adc
in
push
mov
sbb
pop
mov
sub
fst
sbb
jb
inc
push
ret
and
imul
or
aas
sub
sub
cld
scas
and
lahf
int
loope
jae
pop
lret
inc
xor
test
mov
fldt
insl
xchg
loopne
cmp
scas
fs
xchg
negb
jl
push
or
xor
fdivrs
into
and
sub
in
xor
jmp
scas
inc
jb
or
mov
push
pop
andb
cmp
sbb
scas
push
inc
mov
or
mov
sbb
adc
jo
mov
cld
dec
out
jp
aaa
adc
andl
mov
xor
xlat
rcrb
and
std
test
loope
push
push
mov
inc
loop
repnz
push
xchg
cmp
push
adc
push
or
adc
movsb
lahf
dec
out
pusha
pop
call
mov
jecxz
xor
in
mov
imul
adc
and
lret
xchg
fistpl
push
pop
mov
jnp
xor
in
pop
les
push
ret
jnp
aaa
inc
adc
jbe
jae
inc
push
pop
ja
pop
mov
inc
mov
pusha
ss
push
jnp
out
mov
sub
inc
sarl
push
push
movzbl
pop
and
repnz
pop
adc
stos
add
mov
sbb
pop
fucomip
call
xor
cmp
add
push
pmaddwd
fldenv
aas
test
and
dec
xor
cmp
add
mov
mov
pop
fwait
mov
pavgb
out
mov
repnz
adc
mov
or
in
fcomps
and
and
sub
jb
mov
xchg
cli
cli
add
pop
jb
test
sub
inc
push
loope
mov
cmp
adc
je
sub
fadd
movmskps
hlt
xor
insl
mov
xchg
stos
leave
xor
cmpsl
in
cmp
lcall
or
add
cld
orl
jno
mov
bound
add
pop
lahf
in
jbe
fbld
sti
pop
fstpl
ds
push
push
inc
movsl
into
push
or
loope
push
test
push
addl
cmc
adc
stc
xor
mov
popa
push
std
jnp
sbb
add
cmp
adc
sbb
pop
ret
mov
nopl
addr16
lds
xor
mov
imul
inc
dec
fnstenv
and
mov
xor
fs
sti
jbe
test
inc
lret
je
scas
int3
repnz
jb
mov
rolb
cwtl
mov
fnstsw
pop
jbe
jno
xchg
dec
stos
add
mov
cmp
scas
inc
test
popf
sub
push
fcomps
dec
scas
movsl
loop
out
jge
outsb
sub
aam
shlb
adc
fstps
and
cmc
and
adc
movsb
xchg
bound
imul
pop
inc
repnz
icebp
jno
scas
pop
xor
es
adc
sbb
inc
dec
aas
and
sub
idivl
mov
push
sub
in
jge
fists
fsts
jecxz
inc
pop
pop
popa
jb
shl
rolb
hlt
push
aad
gs
out
sbb
sahf
or
fistl
and
lock
ja
call
ror
inc
out
xlat
lds
jmp
int
dec
outsb
repz
mov
stos
sbb
in
mov
loope
test
sub
add
lds
rorl
inc
fs
sti
pop
pop
jnp
sub
js
xchg
shlb
cltd
xchg
test
cwtl
outsl
fstpt
dec
mov
aaa
loope
jb
sbb
mov
lcall
andb
sbb
add
jge
cmp
in
repz
outsl
inc
mov
sti
popf
movb
fbld
iret
mov
ret
xor
mov
add
jmp
sbb
cmp
mov
push
bound
aam
mov
int3
mov
movsb
xchg
adc
jne
push
sbb
into
sbb
jmp
push
pop
push
int3
fldl
mov
sti
sub
sub
xor
jmpw
add
aad
out
xlat
push
leave
jne
mov
pop
mov
xchg
adc
mov
push
adc
imul
int3
and
sbb
jbe
scas
and
ss
adcl
aas
das
dec
and
adc
test
into
pop
xchg
in
mov
cwtl
cmp
pop
lret
and
xchg
mov
push
add
hlt
loope
push
push
lods
outsl
xchg
addb
mov
mov
outsl
push
popa
fcmovnb
inc
inc
lds
adc
push
call
add
icebp
ds
and
and
js
inc
mov
push
cltd
je
rorb
or
mov
jbe
xlat
xchg
js
ds
or
cltd
cmp
std
call
add
or
insl
mov
mov
gs
jle
mov
lret
sarb
pop
xor
mov
sahf
xor
add
out
inc
dec
dec
push
incl
iret
dec
sub
jb
mov
sub
mov
aam
fildll
inc
push
lcall
ljmp
inc
ds
insl
and
lock
inc
int3
arpl
lret
add
xor
pushf
lcall
xor
jp
lea
push
jbe
icebp
lcall
pushf
adc
lcall
aas
enter
ret
pop
sub
xchg
sub
sbb
jbe
xor
rolb
bound
jae
inc
and
cmp
cmpsl
and
xchg
or
ficoms
sbb
dec
repnz
movsl
xor
xchg
jmp
cmp
arpl
aas
mov
es
pusha
ja
mov
add
cmp
sahf
pop
ja
cmpsb
scas
leave
add
jp
fucomi
pop
mov
cmp
dec
fistl
fsubrl
rcll
jbe
sub
dec
sub
lods
mov
xchg
push
int3
std
pop
add
aad
adc
mov
bound
pop
loop
aas
xor
jl
dec
push
adc
dec
ds
jbe
js
inc
loop
lret
sub
jecxz
jmp
gs
jae
add
hlt
sbb
mov
int3
pop
dec
mov
lea
je
pop
mov
shrb
mov
sbb
pop
shll
push
lods
mov
loopne
push
ds
or
rol
pop
jp
stos
cld
icebp
add
jne
and
and
mov
sub
repnz
xchg
push
scas
pop
sub
add
bound
dec
inc
leave
jb
pushl
movsb
fcoml
arpl
jl
jmp
shlb
mov
jno
rolb
addr16
cld
and
stc
daa
or
mov
nop
and
adc
sub
xor
test
ret
sbb
dec
shll
jae
xchg
mov
imulb
rcl
jmp
hlt
btr
popa
lea
andl
xorl
dec
data16
push
jecxz
je
xor
pop
in
push
mov
adcl
out
std
or
and
fiaddl
mov
aam
pushf
movsl
sub
pop
mov
jnp
dec
mov
call
jo
pop
push
mov
inc
and
push
rolb
dec
enter
lea
lods
lock
and
sub
dec
test
add
jo
ljmp
pop
add
cmp
adc
pop
cmc
dec
or
and
lock
dec
imul
mov
mov
mov
push
into
ja
and
sbb
adc
push
lea
jns
push
jecxz
push
mov
ret
stc
inc
xchg
subl
mov
imul
dec
in
lahf
pop
lea
pop
mov
movsb
xor
mov
push
cld
mov
fucomi
std
jbe
bound
jge
xor
notb
mov
push
mov
sub
je
and
popf
inc
mov
nop
jnp
push
std
cmpb
mov
jle
test
in
xchg
pop
or
mov
mov
imul
lds
inc
pop
cmpsl
das
arpl
adc
imul
and
jo
in
mov
xor
loope
std
ja
jmp
in
adc
shrb
and
inc
neg
testb
call
lret
mov
mov
mov
aaa
gs
jnp
xchg
nop
shrb
and
mov
dec
loopne
imul
js
test
or
pop
jmp
push
sahf
ret
xor
and
jne
mov
enter
or
int
push
jl
cmp
std
aad
mov
das
sub
mov
sub
repnz
andb
pop
jg
mov
sub
nop
inc
and
mov
arpl
lret
dec
pop
mov
bnd
jmp
cmp
es
out
out
nop
cltd
or
ret
sub
sub
je
or
pop
or
jae
out
and
sti
scas
jge
xor
lds
inc
sbb
and
in
cli
sbb
add
subb
mov
rclb
hlt
jb
ljmp
xor
add
cmp
xor
mov
idiv
outsb
test
mov
push
inc
add
or
pop
mov
ljmp
adc
pop
aaa
mov
mov
cs
mov
dec
dec
xor
out
sub
pop
clc
dec
xchg
call
cmp
jne
mov
lods
mov
push
dec
push
sarb
push
mov
mov
lock
jae
jo
xchg
pop
jo
fst
push
mov
arpl
in
je
cmp
mov
sbb
ret
loopne
jae
cmc
test
aas
aam
cmp
test
add
nop
mov
cmp
insb
rcrb
fnstcw
out
test
lds
xor
shll
sub
iret
pop
inc
xor
leave
mov
aam
or
cs
xor
inc
test
xchg
push
jl
inc
cmp
mov
xchg
mov
adcl
popf
adc
push
jne
sub
stos
push
push
mov
enter
mov
xor
mov
outsb
jno
pop
mov
push
ljmp
nop
cmp
mov
xchg
pusha
add
or
pop
shrb
sbb
adcl
rcrw
add
in
inc
jns
leave
mov
lret
scas
sbb
insb
sub
jp
xor
inc
insl
xchg
mov
mov
jne
push
rorb
popf
fsubrs
rolb
jo
dec
dec
adcl
mov
imul
loop
dec
ss
or
sub
inc
sahf
adc
xchg
lret
gs
push
loope
cmc
rorb
das
fldt
out
shll
clc
push
lock
mov
cmp
nop
rorl
inc
insb
push
jecxz
clc
test
dec
add
push
cwtl
cmp
push
pop
lock
push
stos
inc
and
fstpt
stos
out
in
aad
and
testl
cwtl
pand
sbb
cld
adc
pop
cmp
cmp
aaa
lods
mov
es
mov
pop
mov
push
or
pop
sar
add
mov
xchg
outsb
xor
xor
add
cs
es
jp
xor
and
test
jo
adc
sub
sub
or
mov
gs
or
fsub
insb
pop
outsl
cltd
jmp
enter
mov
inc
mov
push
mov
mov
mov
jmp
rolb
iret
mul
mov
cmp
mul
fisttps
xchg
repz
pop
jb
call
js
stc
sti
sbb
pop
inc
xchg
xor
adcb
es
lds
imul
mov
xor
cmpsl
cmp
sarl
cmp
daa
sbb
das
and
int3
sub
fcomps
push
fsub
mov
xchg
outsb
repnz
sub
fnstsw
arpl
dec
rorl
mull
rcrl
test
js
xchg
es
jmp
add
xor
std
ss
push
mov
add
or
xchg
mov
cld
insb
je
movsl
adc
xor
mov
or
data16
out
cmp
pusha
dec
adc
fs
xor
icebp
sti
jl
popa
sahf
repz
in
xor
js
inc
repz
sahf
cwtl
loope
std
stos
mov
and
hlt
sub
addr16
sbbb
mov
outsl
mov
adc
jnp
jns
jecxz
movsb
pop
mov
jbe
push
in
inc
lret
sub
add
dec
cmp
addr16
into
add
pop
mov
xchg
cmpsl
or
daa
ss
xchg
mov
loope
cmpsl
xor
adc
mov
mov
out
jle
nop
popf
sub
cmc
cltd
push
nop
xchg
lods
xchg
pop
sbb
sbb
lret
divl
inc
mov
cmp
inc
std
fsubrl
push
in
push
ret
jnp
mov
fimuls
rolb
cltd
orb
dec
in
movsb
adc
sbb
sub
cmpsb
cmp
sub
add
sbb
gs
ss
arpl
mov
fs
add
mov
jne
dec
push
insb
pop
sub
sar
sub
mov
xchg
jb
inc
pop
sbb
js
fdivs
push
imul
and
mov
bound
mov
lods
sub
bound
and
mov
lods
xor
psubsw
nop
mov
imul
sub
lods
push
scas
xlat
jle
jl
idivl
xchg
mov
and
nop
mov
mov
push
test
insl
mov
xlat
push
testb
lods
xchg
sbb
cmp
arpl
pop
or
pop
mov
push
daa
xlat
xchg
add
popl
pop
in
pop
loope
shlb
cmc
fistl
fdecstp
rclb
std
or
mov
add
inc
cmpsl
rcl
lods
movsb
lea
mov
cmc
packuswb
movsl
mov
xchg
mov
call
aam
test
mov
push
ds
stos
je
repz
jmp
insb
std
add
jmp
inc
repnz
inc
fistpl
popa
push
test
fs
out
add
mov
push
mov
in
int3
int3
or
push
adc
push
mov
push
add
in
je
sahf
scas
xchg
inc
rolb
imul
xchg
mov
adc
cltd
jmp
mov
mov
cmp
adc
inc
pop
dec
idivl
popf
mov
mov
faddl
rcr
popa
shlb
mov
push
push
lods
lods
pushf
test
mov
int
and
push
xor
add
push
mov
fs
cwtl
or
cli
jae
enter
cli
jmp
adc
push
xchg
push
rcr
int3
mov
sbb
in
mov
std
outsl
sub
movsl
arpl
gs
and
push
add
ja
je
jle
loop
push
loop
mov
cmpsl
outsb
mov
mov
call
out
loopne
xchg
fs
sub
sub
ja
add
mov
and
mov
inc
mov
lods
adc
test
repnz
mov
pop
cwtl
leave
cmc
lret
mov
out
stos
pop
shrb
sbb
adc
enter
jno
ret
add
xor
pop
cltd
mov
roll
push
shrb
imul
xchg
dec
int
loope
out
clc
jmp
out
js
shrl
or
jnp
aam
push
mov
push
cmp
add
xor
mov
dec
ja
sbb
out
cmpsl
add
cmpsb
cmp
pop
sbb
clc
sub
call
mov
cmc
sub
dec
jmp
jp
add
scas
adc
sub
imul
push
imul
or
pop
pushf
sub
call
enter
mov
mov
cltd
insl
frstor
fistpl
or
adc
js
push
mov
push
mov
sub
mov
mov
cli
adc
and
lea
adc
xor
lret
pop
out
es
cmp
pop
and
lock
mov
or
cmc
add
mov
bound
xchg
notl
pop
push
aas
sbb
adcb
imul
cld
add
leave
xchg
pop
aaa
imul
mov
pusha
rol
and
and
adc
push
push
mov
or
push
stc
sub
and
sbb
mov
dec
mov
mov
cltd
fs
dec
mov
pop
and
pop
push
shll
and
dec
pop
pop
push
or
and
test
rorl
in
sbb
or
mov
lds
cmp
mov
xor
jne
jge
push
scas
nop
and
fsubl
int3
enter
jb
lcall
pushf
adc
mov
pop
test
in
mov
rorl
shll
or
arpl
dec
sub
mov
addb
stos
xchg
movsl
loop
negl
test
mov
daa
adcb
clc
clc
inc
push
inc
cltd
call
clc
cmp
cmp
addr16
repz
dec
add
dec
out
inc
subb
lods
mov
enter
lock
fstl
xchg
xor
loop
or
pop
or
lahf
jg
pop
sarl
jb
outsb
cmp
ljmp
aam
sti
outsl
lret
test
sbb
stos
icebp
jmp
ljmp
ss
stc
mov
xor
xlat
and
jno
mov
or
out
mov
orb
dec
push
test
fs
xor
sub
and
stc
pushf
or
ljmp
push
call
lock
pop
add
mov
mov
lock
loop
or
mov
fstpt
jbe
cmpsb
add
mov
lahf
dec
loop
jbe
xchg
jne
xchg
sbb
dec
mov
mov
mov
adc
pop
push
push
outsb
lds
inc
push
sahf
adc
jns
out
sub
push
mov
test
loope
jne
xor
into
shll
ret
jl
sbb
cwtl
adc
jb
mov
jle
push
pop
rclb
das
aas
pslld
sub
mov
jbe
in
stos
es
fcoml
pop
mov
push
enter
pop
sarl
mov
loope
cmp
push
dec
ss
out
lods
mov
pop
into
popa
mov
pop
jnp
call
lock
fsts
jp
fcom
push
cmp
and
add
push
cmp
ja
inc
xchg
add
test
pop
dec
sub
pusha
test
push
xchg
cli
imul
jge
pop
and
xor
inc
fyl2xp1
mov
and
cs
cmp
xor
add
cld
push
stos
arpl
data16
or
in
mov
movsb
daa
or
mov
cltd
and
push
loopne
mov
pop
and
mov
inc
out
maskmovq
testl
not
sbbb
inc
cmc
frstor
push
repz
mov
or
loope
push
xchg
mov
lcall
int
stos
idiv
sti
js
push
and
push
adc
mov
cmp
xor
push
xorl
pop
ds
sbbb
imul
in
ret
jns
pop
stos
cmp
roll
xor
mov
jle
add
add
test
cmpl
pop
push
inc
mov
jb
repz
pop
rcrb
cmp
sbb
jns
fwait
jge
mov
cld
xchg
push
sub
rclb
js
dec
and
movsl
imul
fdivp
nop
sbbb
push
popa
outsl
mov
sub
fsubrl
xchg
adc
rcl
pop
adc
jg
or
inc
adc
sbbb
add
mov
sbb
adc
shlb
mov
out
xchg
mov
ss
sbb
xchg
inc
mov
cmp
test
mov
mov
jle
or
fwait
mov
inc
stos
daa
shlb
cmpsb
clc
or
clc
jb
das
pop
jmp
sbb
bound
mov
repz
mov
imull
mov
in
les
or
or
inc
inc
xlat
add
cmp
jp
out
ficomps
and
out
out
shrl
inc
fsubrl
cmpl
pop
add
sub
stos
inc
push
fwait
in
xchg
shr
pop
add
roll
pop
mov
xchg
fstpt
adc
aam
bound
js
mov
dec
pop
dec
test
sahf
jb
test
cmpsb
lret
shrl
test
jle
sbb
test
adc
rol
mov
pop
mov
inc
mov
ja
fisttpll
in
fistl
sub
rcr
cs
fdivl
add
adc
shrb
pusha
add
jmp
loopne
test
repz
nop
mov
out
cwtl
js
icebp
pop
mov
loope
pop
mov
xchg
sbb
imul
sbb
fcoml
aad
outsb
aas
mov
mov
cwtl
add
add
imul
or
jmp
mov
xchg
xchg
jmp
xchg
stos
jo
mov
jg
je
mov
cmp
mov
int
jg
mov
inc
and
js
in
mov
fisttpll
lock
sbb
fmull
push
mov
sahf
out
mov
fistpll
orb
xchg
ljmp
out
cmp
sahf
xchg
or
popa
mov
roll
push
fidivrs
or
xlat
inc
xchg
in
out
mov
lods
lea
das
adc
adc
and
in
hlt
push
imull
fwait
add
mov
lcall
sahf
into
add
xor
dec
xchg
decb
lahf
jecxz
mov
mov
hlt
arpl
stos
movsl
jno
ljmp
pop
vpcmpgtb
mov
leave
daa
mov
add
mov
sarl
popf
inc
in
mov
loope
mov
adc
popf
xor
cmp
sub
call
push
jb
aaa
mov
in
dec
inc
fwait
xorl
scas
je
mov
clc
inc
jecxz
dec
push
dec
fldl
jnp
mov
sbb
pop
cltd
popf
ds
or
adc
aad
lods
popa
mov
and
popf
stos
and
les
iret
jl
xor
aas
push
mov
into
loope
pop
scas
ret
or
test
mov
fidivl
and
mov
pop
inc
mov
jge
and
sub
nop
cmp
jecxz
test
cli
sub
mov
shll
sti
xor
jbe
daa
stos
ret
roll
test
imul
adc
pop
push
sub
mov
inc
mov
inc
dec
add
ljmp
into
cmp
jmp
in
loopne
sub
leave
mov
xchg
jmp
pop
lret
lds
loopne
cwtl
jl
adc
lahf
adc
lds
jmp
push
rol
repnz
cmp
icebp
popl
dec
adc
or
lret
stc
movsb
ss
mov
dec
jl
data16
fnstsw
in
or
pop
stc
jns
dec
loope
std
cmp
outsb
jp
daa
sub
adc
lods
cmpb
mov
xchg
cmp
adc
jno
fdivl
cmpsl
xchg
int
divl
and
repnz
and
xchg
hlt
adc
cmp
mov
call
push
or
jle
cmp
cmp
and
ficomps
stos
xor
mov
jne
mov
pop
outsl
jb
cmp
js
in
lods
dec
and
inc
fisubl
jecxz
mov
jbe
rcrl
mov
cli
sti
and
lret
mov
int3
outsl
cmpsl
mov
lcall
mov
fisttpl
jb
testb
pop
into
mov
in
sub
mov
fs
out
mov
inc
cs
and
pop
push
fsubrl
imul
jecxz
sub
adc
enter
inc
sbb
pusha
cmp
lds
add
push
iret
cmp
jb
repnz
sti
out
push
push
clc
xchg
jg
fwait
mov
or
pop
pop
icebp
mov
in
cmp
push
sbb
addr16
mov
mov
int
faddl
into
xchg
fmuls
inc
lret
movsl
inc
sub
adcb
sete
cmp
mov
mov
cmpsb
sahf
cltd
std
out
mov
jp
sub
int3
push
or
sti
add
sahf
mov
jns
pop
lahf
aam
insl
pop
aaa
push
push
jb
push
dec
add
iret
sub
fwait
cld
push
pop
sub
push
or
dec
jp
ret
mov
add
and
jmp
repz
and
cmp
push
or
stos
scas
lock
sbbl
insl
sbb
ret
inc
pop
add
inc
mov
inc
fisubrs
dec
push
insb
mov
fimuls
pop
mov
inc
movsb
cli
add
rol
test
inc
and
lcall
xchg
add
sahf
jmp
lods
mov
in
jle
adc
popf
ds
out
dec
dec
fidivl
mov
es
inc
and
push
mov
mov
imul
cmp
add
xchg
push
jno
mov
fdivrs
lods
pop
sbb
cwtl
add
xchg
cld
lret
jbe
xor
xchg
popf
jno
clc
sbb
lds
ficompl
mov
js
pushf
das
add
jb
inc
mov
sbb
cmp
inc
enter
adc
icebp
or
bound
mov
dec
fnstenv
fbld
add
cmp
sub
sub
mov
and
inc
and
sub
fcoms
int
add
mov
insb
sbb
inc
dec
xor
add
jge
add
mov
int3
mov
shlb
mov
call
mov
adcl
in
lret
cli
out
scas
mov
push
cmpsb
dec
or
test
inc
push
sbb
pop
push
mov
clc
inc
dec
and
decb
mov
scas
in
cmp
decl
nop
jns
push
rcrl
pop
stc
inc
sub
subl
push
pop
add
cmc
push
pop
jge
xchg
mov
outsb
mov
xchg
mov
insl
mov
xchg
dec
mov
fldt
mov
loop
mov
dec
jb
aas
icebp
scas
xchg
xor
push
shll
cmp
add
pmullw
nop
ds
pop
inc
add
bound
pushf
subl
jecxz
test
cmp
mov
cmp
push
inc
leave
xor
insb
push
and
inc
in
addr16
fstpt
adc
and
dec
imul
jb
mov
hlt
lds
jl
test
fidivl
repz
inc
mov
scas
femms
rorb
push
and
xchg
adc
fdivrs
push
pop
mov
jb
push
add
push
in
jb
cmp
sar
mov
mov
movsb
dec
sahf
push
mov
out
mov
inc
jge
mov
push
jo
mov
arpl
sub
mov
mov
int3
jp
aas
mov
jnp
adc
test
out
mov
xor
clc
xor
sti
xchg
push
cmp
dec
xchg
sub
mov
cli
mov
decb
nop
sbb
and
inc
mov
dec
and
sub
xchg
push
movsl
mov
jmp
pop
dec
push
sbb
andl
jno
xor
add
rcrl
in
dec
jmp
cmp
mov
pop
fistps
movsb
insl
push
fwait
mov
add
and
cmp
jmp
mov
aam
aaa
leave
mov
mov
add
popl
sbb
mov
popf
aam
mov
addr16
out
dec
sarl
and
stos
mov
in
mov
mov
xor
or
iret
xor
pop
push
adc
movsb
push
popf
test
loop
or
call
mov
shrl
sub
jnp
test
nop
out
jb
jecxz
hlt
bound
daa
andl
fcmovbe
push
push
cmp
test
and
jge
pop
es
lock
jb
add
or
add
repnz
gs
clc
movsl
and
jns
adc
popa
scas
lods
jg
pop
jg
fs
sub
in
popl
lahf
sub
dec
jecxz
inc
add
ret
cltd
cs
and
and
loope
and
cmp
inc
test
mov
xor
clc
pop
ja
or
dec
xchg
outsb
pop
sub
es
cmpsl
and
xor
enter
cwtl
inc
or
sub
add
lahf
jo
cs
cmpsl
and
nop
mov
mov
fs
xchg
sbb
add
data16
int3
sbb
inc
data16
add
outsl
fidivl
add
in
inc
jne
or
roll
aad
pop
cltd
sti
lds
mov
je
in
jae
enter
sahf
and
sbb
add
fdiv
jo
mov
jb
jge
jecxz
pop
pop
mov
push
pop
jecxz
js
lock
sahf
mov
mov
jg
imul
fsubrl
cmp
scas
incb
jnp
cmp
imul
jecxz
rcrl
inc
jg
jecxz
ret
jg
lock
pop
das
movb
mov
xor
ja
ret
cmp
jg
pop
call
jmp
mov
shrl
fmul
mov
mov
daa
xor
fimull
cmp
dec
imul
xchg
in
push
push
movsb
fstpl
add
rolb
mov
roll
ds
mov
mov
cltd
add
add
push
pop
leave
subl
or
push
inc
test
or
and
lahf
out
xor
fdivl
add
fucomip
in
cltd
in
inc
mov
out
mull
mov
rcl
inc
loopne
fidivs
push
jno
push
insb
jmp
iret
and
adc
sub
jmp
je
call
inc
adc
mov
stos
loope
and
inc
xor
cmp
fwait
test
fstpl
insb
ljmp
jge
cmp
stc
xchg
test
jo
xor
testl
dec
outsl
jns
shl
iret
xchg
mulb
xchg
or
out
out
in
fiaddl
sbbb
nop
mov
mov
xchg
outsb
cmpb
cmp
insb
inc
wbinvd
outsb
ret
cs
jecxz
or
lcall
adc
movsl
sub
mov
push
cmpsb
xchg
xchg
mov
pop
in
outsb
mov
mov
cld
inc
leave
lods
dec
fwait
pop
addr16
icebp
adc
jo
jp
test
xor
shlb
cmovs
inc
mov
cltd
rolb
shr
xchg
fwait
mov
sbb
jno
add
jae
mov
inc
push
lds
add
int
daa
inc
sub
sbb
dec
cwtl
cmp
notb
clc
xchg
mov
ret
icebp
mov
shrl
cmp
cmp
cmovp
push
mov
xlat
rcr
lods
push
push
pop
ds
cmp
imul
sbb
ds
xor
jle
test
dec
mov
xor
jns
xor
dec
push
mov
jmp
push
addb
test
fwait
loop
stos
mov
or
dec
sub
cmp
sahf
jb
xor
mov
dec
pop
and
and
imul
jne
pop
pop
stc
inc
sub
pop
cmp
mov
inc
sbb
and
pushl
jmp
ret
rol
sub
cmp
clc
movsb
lret
or
das
jp
insl
inc
add
loop
or
imul
mov
xor
cwtl
mov
aaa
aad
and
add
and
out
adc
xchg
add
lahf
outsl
cmpsb
inc
rcll
jg
inc
push
rcl
repz
cmpsb
pop
jne
add
test
pop
and
imul
movsb
push
lds
test
mov
or
scas
addr16
loope
cmp
icebp
push
pop
push
and
jmp
sub
pop
fs
sarl
arpl
cmpsb
and
in
mov
stc
push
lahf
data16
rclb
fs
and
adc
ds
arpl
mov
movsl
addr16
jae
int3
in
mov
sbb
mov
outsl
cmc
mov
jg
or
mov
fsubl
push
cmp
rcll
rclb
jns
cmp
sbb
fimuls
mov
push
bound
lahf
lock
mov
and
outsb
inc
mov
arpl
mov
mov
sbb
cld
ret
mov
sbb
cmpsb
jmp
sub
cmc
xchg
mov
clc
jmp
push
inc
mov
clc
mov
jg
sbb
pop
lret
pusha
sub
pop
mov
sub
xchg
sbb
iret
mov
push
iret
xchg
pop
sub
cmpsb
xchg
push
idivl
add
jecxz
popf
decb
xlat
add
pop
xchg
cmp
and
push
stc
inc
cmp
pushf
fldt
lcall
lock
ret
es
push
mov
adc
jnp
shrb
jae
imul
cmp
cld
mov
icebp
ret
or
sub
push
test
lret
pop
sbb
cmp
xor
xor
xchg
push
mov
shrb
xchg
xlat
icebp
sbb
jmp
inc
dec
xchg
das
and
leave
ficoms
or
jecxz
test
pop
ret
nop
sub
cld
scas
push
dec
jmp
inc
in
xchg
push
mov
dec
mov
add
push
cmp
adc
dec
iret
mov
push
shlb
xor
cld
sbb
sub
cmp
mov
ljmp
add
xchg
xchg
push
dec
mov
pop
mov
pushf
xchg
jo
or
mov
dec
mov
popa
in
inc
sub
dec
sbb
mov
adc
in
aaa
fwait
mov
addr16
ljmp
and
mov
xor
dec
jl
pop
imul
scas
add
sbb
out
lods
mov
mov
imull
iret
scas
xchg
mov
lods
sahf
mov
daa
aam
test
mov
mov
inc
xorl
push
mov
push
push
pusha
fidivrs
cmpl
fldl
pop
add
adc
pop
pushf
adc
sbb
adc
aam
aas
sbb
mov
div
sbb
push
mov
dec
leave
inc
cmp
lea
insl
sti
arpl
mov
imul
jge
outsb
sub
stc
mov
mov
cmp
or
les
or
pop
mov
mov
imul
aaa
jge
aaa
cltd
mov
in
and
sbb
mov
lea
dec
hlt
gs
cltd
inc
sbb
pop
imul
gs
or
push
mov
add
scas
push
arpl
sub
repnz
xor
test
dec
pop
gs
dec
cld
mov
cwtl
call
aam
push
sub
cmp
push
inc
or
mov
fiaddl
or
rcr
xchg
mov
cmpsl
dec
ljmp
out
jae
cmpsb
push
popa
clc
pusha
and
ret
mov
fildll
mov
adc
js
push
int
inc
jg
fcom
repz
cmp
push
sbb
pop
adc
sub
pusha
mov
js
enter
mov
or
fbstp
lahf
mov
mov
xchg
icebp
in
lods
leave
adc
leave
rorl
mov
stos
inc
jae
inc
pop
adc
jno
loop
lcall
dec
loopne
fldenv
mov
fldenv
shll
outsb
dec
dec
repnz
sarl
sbbl
mov
je
pop
popa
dec
outsb
imul
pop
pop
cltd
scas
in
sub
int
pop
xchg
fidivrs
or
xchg
lret
sbb
xchg
mov
xor
arpl
dec
clc
pop
mov
jno
test
ds
push
cmp
addl
jno
ret
mov
test
inc
inc
adc
xchg
orb
stos
adcb
icebp
mov
pop
lret
ja
mulb
adc
adc
iret
sbb
cmpsb
ljmp
insl
popf
daa
daa
pushf
in
hlt
rcrl
adc
mov
cmpsb
loope
pop
in
fstps
add
inc
fisubl
pushf
jge
xor
iret
adc
sbb
nop
xor
sub
lret
mov
lret
rorb
or
xchg
sub
mov
stos
sbb
push
fidivrs
jmp
gs
test
pushw
inc
bound
incb
jne
cmpsb
and
cs
stos
icebp
cmc
mov
cli
push
pop
jl
add
test
and
jmp
in
test
cltd
jmp
test
cmp
push
hlt
jl
insl
pop
pop
adc
ljmp
xor
mov
pushf
lea
and
sbb
out
shll
loope
adc
in
loopne
push
cmp
je
lock
sbb
scas
jmp
in
push
xchg
cltd
rorb
mulb
ljmp
cmp
sbb
sti
mov
shlb
jge
xlat
test
mov
cmpsb
test
xchg
lahf
sbb
pop
xor
hlt
das
cltd
sbb
xchg
lcall
pop
stos
into
mov
adc
xchg
scas
out
dec
fstl
push
lds
jle
bnd
cmpsl
fidivrl
call
aad
in
push
lea
jnp
mov
adc
lret
or
xchg
insb
mov
xchg
scas
je
pusha
pusha
cmpsw
push
loopne
popf
iret
call
test
mov
fdivs
idivl
ss
ljmp
aas
scas
lahf
addr16
test
sub
imul
mov
out
or
in
pop
pop
out
xlat
sub
sub
pop
jmp
outsb
sub
mov
out
xchg
in
jo
lahf
jnp
dec
std
shll
push
cmp
xchg
xor
and
cmpb
mov
xchg
and
test
xor
xor
push
xor
pop
adc
arpl
addr16
aam
cmp
xlat
mov
mov
cld
mov
inc
loopne
sbb
sub
popa
mov
stc
inc
pop
inc
add
add
popf
push
push
inc
sub
call
cmp
addl
xor
cmpsl
sbb
push
mov
dec
pop
inc
scas
mov
imull
push
sti
outsl
je
icebp
in
fstpl
mov
insb
pushf
scas
pop
rcll
push
scas
sarb
push
mov
scas
push
mov
and
mov
jnp
xor
jno
mov
jno
sahf
pop
addb
mov
sbb
jl
pop
cmpsl
sub
mov
pop
add
aad
ja
outsb
pop
lods
out
pop
add
jp
les
xchg
fisubrs
shl
push
pop
or
movsl
ss
je
sbb
sti
inc
icebp
out
out
rcll
mov
and
cmp
adc
repz
mov
mov
mov
test
xlat
add
insl
mov
xor
xchg
mov
jle
lds
test
cmp
dec
and
inc
int3
push
stc
pusha
lcall
stos
mov
js
repz
in
mov
pop
ja
mov
or
inc
dec
push
jmp
sbb
or
out
or
loope
daa
mov
push
in
das
jmp
inc
ret
mov
sub
insl
mov
stos
sbb
lock
repnz
insb
into
xchg
fwait
lea
and
int3
scas
push
repz
push
fwait
cli
das
out
insb
dec
jecxz
push
push
test
popf
fucomp
jg
lret
inc
sbb
dec
add
adc
int
add
cmpl
push
pop
ja
add
push
dec
cmp
movsb
test
push
scas
test
jnp
push
mov
fs
insb
cmp
xchg
dec
leave
cltd
sbb
cld
adc
cmp
test
in
mov
adc
or
mov
xchg
push
and
xchg
int
out
pusha
dec
pop
fwait
jno
dec
pop
mov
cmc
mov
mov
inc
pushf
sub
push
mov
fsubl
mov
sbb
sub
nop
pop
arpl
shrb
aas
cmp
jne
xchg
push
xchg
jmp
xchg
mov
scas
jb
loopne
into
loop
add
sub
jmp
jecxz
ret
sbbl
pop
cltd
and
xchg
pop
lds
sbbl
lds
add
adc
or
insb
ret
xchg
jge
and
jle
pop
sub
xchg
lock
lcall
ja
in
jmp
mov
shl
push
lock
lds
pop
in
fidivl
xor
mov
popf
mov
dec
mov
sub
dec
xchg
out
loop
je
xchg
mov
sub
ret
and
push
lret
cmpsb
lcall
adc
push
gs
xor
dec
hlt
inc
repz
adc
sbb
mov
fiaddl
xor
fmull
mov
sub
jmp
mov
push
mov
sbb
mov
clc
add
xchg
xlat
ja
xchg
scas
xor
nop
sbb
inc
or
lods
pop
jmp
cmp
inc
jl
mov
mov
xchg
out
mov
out
sbb
push
mov
lcall
sbb
movsb
dec
outsl
icebp
mov
loop
std
push
pushf
loope
test
prefetch
or
test
decl
sub
dec
cmp
call
push
orl
sub
repnz
push
push
lret
jne
pop
lods
stos
xchg
mov
dec
popf
inc
repnz
movsl
xchg
inc
repnz
aad
popf
push
xchg
insl
clc
sbb
fsubr
push
pop
out
adc
les
fdivrp
scas
dec
shl
test
sar
mov
dec
pop
push
mov
div
fs
xor
xchg
mov
adc
jbe
jge
in
fstl
jle
dec
fadd
test
lds
push
popf
add
fwait
stos
ret
mov
fwait
xor
dec
repz
hlt
test
push
jmp
mov
bound
repz
fs
repnz
push
leave
sbb
outsl
bound
and
push
and
ja
fmulp
repz
mov
lret
imul
mov
icebp
adc
fwait
pop
gs
jl
pop
pxor
hlt
push
jl
mov
ret
fdivrp
sti
popl
mov
cmp
mov
and
mov
jno
popf
xor
sbb
xchg
xchg
iret
mov
or
mov
add
jnp
cld
add
and
xor
cmp
push
ret
int
pop
cwtl
mov
and
pop
in
ret
out
fucomip
jg
test
fwait
sbb
fs
enter
and
mov
repz
mov
or
push
fisubrl
inc
imul
xchg
sub
sub
sbb
mov
and
sbb
sub
out
or
sbb
dec
dec
mov
fbstp
stc
inc
jbe
repz
insb
adcl
in
ss
sti
jb
test
cmp
xchg
xlat
dec
adc
shlb
jno
mov
int
mov
dec
cmp
push
sub
pop
int3
ja
mov
test
mov
and
sub
inc
adc
adc
xor
cmp
adc
push
dec
mov
push
mov
add
lea
es
push
push
pop
into
sub
js
pushl
shlb
sbb
or
cmp
fstpl
loope
clc
shll
mov
adc
fisttpl
jne
std
clc
xchg
xor
pop
sbb
cmp
xlat
stc
int3
xor
repnz
shlb
outsl
sar
inc
push
or
in
jne
gs
aas
ljmp
sbb
cmp
adc
push
lods
pop
js
test
cmc
sti
pop
ljmp
mov
data16
cmp
orl
push
rorb
push
cmp
jnp
mov
xchg
xchg
mov
lcall
insl
dec
cmpsb
push
xchg
adc
xchg
mov
push
mov
xchg
mov
mov
sarl
pop
les
dec
ret
push
fnclex
dec
inc
iret
inc
or
sbb
xchg
sbb
push
pop
ja
jo
jg
adc
mov
mov
xchg
mov
je
nop
jbe,pt
pop
fld
testl
lahf
inc
loop
fisttpll
jge
or
cwtl
rcr
pop
pop
xor
popf
sub
pop
movsl
sub
or
rcrb
xor
int
rclb
negl
in
repz
pop
mov
mov
sub
xlat
push
icebp
outsl
clc
pop
push
inc
mov
mov
stos
loope
lret
lods
dec
out
mov
sbb
mov
pop
mov
mov
jne
jns
fidivl
mov
adc
sub
in
imul
adc
pop
xor
out
pop
jge
add
jnp
pushf
jecxz
or
arpl
pop
fidivrl
test
xor
cmp
cmpsl
sub
cmp
jnp
inc
out
loop
out
cltd
inc
ds
cmp
dec
mov
cmp
adc
or
je
shrl
rcll
add
loop
rolb
mov
cltd
scas
lods
iret
jnp
cli
and
jmp
iret
sub
add
ds
jne
pop
mov
mov
or
loopne
jle
push
int
fimuls
sbb
push
clc
repz
mov
mov
daa
daa
jg
xchg
cmpsl
xchg
xchg
leave
dec
popa
fxch
fs
xchg
pop
mov
lds
loop
push
sbb
adc
push
jnp
xchg
cmpsb
sbb
or
mov
es
jnp
in
jb
mov
jp
fsubs
and
loop
mov
pop
mov
jo
pop
and
mov
sbb
pop
pushf
lret
pop
push
pop
lods
and
pop
sbb
jg
std
cmp
sti
gs
lret
inc
mov
shlb
xor
jle
jmp
jl
cmp
dec
jl
das
mov
push
mov
mov
jne
les
lock
push
jae
add
xchg
mov
jbe
jae
xor
adc
std
cs
mov
mov
cmc
mov
or
inc
idiv
test
push
out
nop
test
or
nop
ret
mov
out
aas
push
movsl
or
pop
push
mov
pushf
dec
xor
add
mov
clc
sub
inc
cs
imul
ss
stc
cmpsl
hlt
fldl
in
mov
test
pusha
push
sahf
push
imull
sbb
sub
xchg
sbb
icebp
mov
jmp
out
push
test
push
andb
fistl
stc
inc
dec
mov
leave
mov
dec
scas
inc
add
mov
or
fisttpll
rcr
mov
fidivs
mov
xchg
test
js
push
popf
jns
lret
fdivrl
mov
hlt
sub
pop
push
jns
lods
pusha
ret
cmp
dec
or
sub
adc
test
lds
mov
inc
lock
scas
pop
vpslld
lods
mov
xor
xor
outsb
and
fisttps
push
push
lds
shl
push
or
sar
enter
test
ficomps
pop
sbb
filds
stos
out
in
dec
and
or
dec
cmp
je
mov
es
loopne
sbb
insl
lahf
xchg
pop
lods
add
adcb
xor
adc
shr
stc
jp
enter
add
fnstcw
out
push
dec
mulb
xor
xchg
es
mov
pop
dec
outsl
pop
mov
adc
ja
test
xchg
mov
xchg
xchg
push
jns
mov
in
ja
inc
sti
xor
push
and
jae
in
pop
and
inc
add
lret
leave
test
jmp
out
mov
outsb
sub
dec
fisubrl
adc
loope
into
xchg
sbb
and
in
jno
scas
jl
and
shlb
mov
sbb
push
test
les
mov
daa
imul
pop
lock
jae
jmp
pop
push
cmp
mov
mov
repz
adc
xor
mov
mov
xchg
lcall
sbb
xlat
fldenv
sbb
jb
pushf
and
bound
jb
clc
xchg
push
pop
jbe
xor
or
call
adc
push
out
sbb
sbb
mov
fwait
push
pop
cmc
jmp
mov
in
stc
cmp
scas
iret
push
jl
pop
sub
jp
icebp
push
int
cmp
sub
repnz
and
sbb
mov
xchg
xchg
xchg
fldcw
cld
mov
stos
clc
xchg
scas
or
adc
rorl
add
mov
inc
mov
or
inc
xchg
cmp
and
xor
imul
inc
mov
subb
lods
add
cmp
arpl
lahf
or
inc
adc
and
xlat
into
out
ret
pop
sbb
jnp
or
call
jecxz
cmpsb
sbb
rol
jl
test
std
jne
and
mov
aas
dec
pop
sub
xor
jge
call
and
inc
mov
xor
insb
xchg
outsb
cmc
xchg
in
out
xchg
adc
mov
in
addr16
in
repz
xlat
and
fnstenv
ror
mov
xor
push
xchg
and
lock
mov
add
xchg
dec
aaa
jns
adc
adc
inc
sbb
add
cld
xchg
mov
aam
lods
mov
out
push
cwtl
jns
je
cmp
cld
add
cmc
jmp
fisubrl
cli
dec
or
push
pop
lret
test
push
mov
sbb
stos
mov
mov
iret
movsl
cwtl
or
int
mov
dec
cmpb
popa
and
mov
gs
pusha
mov
cmpsl
mov
popa
xor
sti
or
jge
shlb
mov
out
rcll
jno
dec
xchg
pop
lds
int3
sub
and
push
fidivs
cs
stc
in
scas
push
adc
add
ficoml
imul
das
adcl
jg
jecxz
or
je
shlb
repz
test
adc
ss
cmp
bound
cmp
mov
ja
mov
addr16
ret
xchg
sub
jg
cmp
movsl
push
mov
sub
les
jbe
insb
mov
into
lcallw
out
je
inc
mov
add
les
fwait
imulb
dec
cmp
or
sub
cld
add
das
test
push
shl
sbb
call
pop
mov
out
jbe
add
inc
imul
out
push
mov
insl
inc
or
dec
fbstp
push
jge
in
rcll
int3
mov
and
iret
stos
push
popf
fwait
xor
jecxz
jmp
add
hlt
idiv
dec
sub
loopne
push
fldz
pop
jnp
daa
lock
add
cmpsl
loope
vaddps
sbb
jns
je
scas
push
clc
inc
loopne
imul
adc
in
cmp
ss
mov
pop
outsb
jp
sub
imul
dec
sbb
sahf
inc
mov
sub
dec
xor
cltd
mov
fstps
repnz
loop
cmp
mov
pop
cmc
cmp
stc
mov
loope
jns
stos
sub
rol
inc
sbb
fmuls
pop
inc
pop
sbbl
mov
pop
into
sbb
adcb
mov
imul
jecxz
cmp
dec
dec
addr16
push
out
mov
mov
dec
jb
pop
lea
inc
inc
int3
dec
or
jmp
lock
and
cmp
sahf
repz
mov
ret
cmp
xchg
jbe
cmp
xor
out
cld
rcl
xchg
mov
pop
push
test
stos
cwtl
and
mov
in
imulb
dec
adc
and
jmp
mov
sbb
iret
movsb
pop
scas
pop
xchg
jmp
stos
fs
xchg
cld
or
pop
and
sbb
push
leave
mov
cs
sbb
adc
push
pop
popa
xchg
mov
insb
xor
sub
jmp
jne
add
add
push
mov
push
xor
adc
ja
jmp
loopne
js
jg
or
pop
mov
lods
jp
dec
hlt
test
or
out
ljmp
xchg
repz
aaa
shrl
adc
stc
xor
fcomps
stos
inc
notb
mov
pop
das
outsb
and
jp
mov
xor
xchg
cmpsl
jne
mov
das
repz
lea
subb
rcrl
adc
rcll
xor
stc
pop
pop
and
repnz
or
cmc
inc
push
popa
xchg
pop
sahf
jo
gs
mulb
movsl
repnz
adc
cmc
pop
test
and
fsts
fs
pop
add
dec
jle
lods
jo
jbe
xorb
jb
xor
mov
cmp
pop
jo
sub
insb
sbbl
test
mov
stos
add
mov
fdivs
adc
push
inc
or
pop
cmp
pop
xor
cmpsb
roll
out
in
adc
mov
imul
push
faddl
push
test
jbe
cmc
push
jb
adc
insb
sbb
fwait
mov
andl
mov
jmp
xchg
shrb
push
aaa
mov
fwait
sbb
jo
sub
repnz
xchg
sub
xor
popf
dec
sub
cmp
stos
xor
mov
push
xchg
std
shlb
mov
ret
dec
test
mov
xchg
int3
add
mov
stos
out
js
test
dec
hlt
rclb
xlat
cmp
scas
sub
sub
dec
and
push
mov
cwtl
cmpsl
push
jmp
add
lods
inc
or
adc
add
psubb
cmp
test
adc
scas
sbb
lret
lock
fidivrl
or
pop
ret
movsl
push
dec
add
add
inc
es
jno
push
xchg
out
mov
lods
stos
mov
sub
nop
call
mov
pop
xchg
fs
icebp
push
dec
clc
or
hlt
add
mov
ss
sub
ss
sbb
lock
mov
rcl
scas
mov
mov
decb
movsb
mov
iret
fwait
pop
shll
outsl
jmp
sbb
rcll
and
lret
push
ja
push
ljmp
aad
sub
repnz
mov
jle
and
test
jo
test
jmp
add
cli
adc
cmp
sbb
pop
aaa
mov
test
dec
mov
sahf
imul
xor
punpckhwd
xor
sbb
jnp
ret
cmpsb
pusha
test
adcl
cmpsb
fdivl
xor
jmp
movsl
push
bound
push
push
push
mov
bound
mov
lret
mov
push
sub
inc
or
aas
xor
out
mov
push
clc
push
push
pop
cvttps2pi
call
nop
bnd
adc
in
cmpsb
popf
mov
fdivp
cwtl
lock
ret
js
fwait
xchg
stc
xor
mov
jnp
sbb
and
data16
dec
pop
cltd
xchg
push
in
pop
jae
push
pop
mov
mov
mov
jne
or
xchg
popf
xchg
out
fmuls
jg
mov
sub
adc
sub
shll
push
add
xsha256
cmpsb
xchg
mov
jmp
lock
xor
mov
out
nop
bound
pop
rorb
dec
lock
mov
stc
scas
add
fdivl
imul
rcll
cltd
and
mov
jmp
mov
push
xchg
movsl
aam
cmpsb
xchg
stc
lods
sub
lahf
push
fstl
pop
mov
pop
stos
icebp
fimull
jmp
stc
pop
jnp
dec
cmp
xchg
jmp
and
mov
xchg
jmp
ljmp
popf
xchg
push
int
mov
cltd
mov
addps
xchg
mov
pop
addb
or
mov
pop
adc
jg
push
xchg
xchg
imul
sahf
sub
add
and
js
jnp
mov
les
inc
gs
cmc
outsb
mov
pop
and
cltd
daa
popa
gs
leave
js
test
loop
test
adc
or
test
loopne
test
data16
adc
loope
out
mov
adc
pop
and
add
or
xchg
inc
sub
icebp
cmpsb
pop
cmc
clc
add
faddl
imul
push
xchg
cmpsl
push
sahf
adc
dec
sub
dec
pop
notl
fsubs
shlb
gs
stos
jo
mov
daa
adc
ds
mov
fldenv
add
dec
pusha
pop
stos
dec
jp
pop
xor
mov
and
and
ret
xchg
cmpsb
jg
out
mov
imul
mov
adc
push
and
pop
pop
ret
pop
sub
rcl
xchg
and
add
or
fldpi
mov
mov
lods
lock
mov
dec
mov
jne
push
in
mov
jnp
jl
xchg
add
mov
mov
push
sbb
pop
pop
rcrl
stc
jp
movsl
jmp
push
jo
data16
shll
scas
add
js
add
mov
fs
sbb
mov
mov
test
aaa
pusha
dec
cmpsl
mov
cmp
data16
notl
sbb
jle
dec
stos
xchg
jb
inc
inc
add
icebp
loopne
lcall
pusha
inc
mov
mov
mov
rcll
or
rcr
loop
or
mov
movsl
xlat
es
pop
jp
pusha
fistpll
sub
jp
int3
inc
shr
adc
pop
popa
dec
aas
dec
int3
cmp
cmpsl
mov
xor
sub
mov
outsl
pusha
jecxz
outsl
inc
mov
or
stos
inc
xchg
sti
sub
shll
jo
add
jo
nop
ds
jecxz
gs
testl
or
and
out
inc
push
cmp
jnp
insb
in
pop
xor
inc
cwtl
mov
rolb
dec
adc
das
subb
push
lret
cmc
cmp
dec
rcrb
sahf
mov
push
mov
xor
dec
sbb
test
mov
scas
sahf
mov
sbb
sbb
scas
mulb
lcall
pop
add
fdiv
sbb
insb
rol
push
into
fidivs
inc
std
into
fs
cli
xchg
sti
fidivs
add
inc
xor
pusha
sbb
cwtl
mov
mov
inc
mov
shl
data16
ss
fnstsw
lret
nop
sub
in
mov
test
xor
sti
push
andl
pop
sqrtps
sbb
mov
nop
sbb
mov
push
repnz
and
das
adc
bound
adc
or
ljmp
jns
sbb
push
popf
cwtl
mov
movswl
shll
adc
pop
cmpb
jns
je
ds
pop
popa
in
jle
sub
outsb
clc
cmpsb
adc
inc
push
and
xchg
frstor
divl
mov
add
fcompl
jbe
inc
add
cld
pop
jne
and
or
and
push
xor
push
loopne
inc
inc
or
cmpsl
testb
sbbb
mov
clc
xorl
popa
add
cmpsb
aaa
inc
insl
jbe
fiaddl
mov
ljmp
das
jo
ljmp
std
or
inc
mov
push
push
xchg
dec
gs
loope
sbb
jae
out
mov
in
jl
lods
enter
cmp
inc
and
lret
lret
je
mov
mov
adc
mov
mov
mov
adc
jmp
mov
jne
or
inc
pusha
jle
fists
movsl
pop
dec
daa
sub
scas
mov
xchg
add
jno
cmp
pop
jecxz
lods
cltd
nop
xor
sub
pop
cmp
xor
sub
cmp
xchg
push
mov
cmc
or
cwtl
adc
rol
xchg
fldt
ja
jns
loope
xchg
push
adc
into
xchg
repz
push
cmp
imul
dec
push
ja
ret
pop
mov
pop
mov
test
mov
dec
addr16
jg
mov
add
jg,pn
mov
inc
pop
call
fdivrp
sbb
add
pop
in
sbb
roll
rcl
sbb
push
mov
xor
mov
das
shll
jg
cmpsl
and
imul
sti
sub
and
push
and
fwait
lret
dec
ljmp
scas
lret
iret
adc
adc
in
cmc
cmpsl
cmp
dec
gs
or
lcall
push
scas
adc
iret
or
adc
and
jl
dec
mov
add
hlt
popa
mov
cs
mov
jmp
out
cmpsl
xor
sbb
mov
ss
loopne
in
mov
push
lea
cmpb
ljmp
movsb
xor
scas
dec
subl
adc
call
movsl
mov
inc
adc
mov
jno
psubw
push
cs
xlat
addr16
and
andb
adc
or
mov
lret
mov
adc
loope
xchg
inc
sbb
push
or
inc
pop
xchg
insl
inc
in
ss
dec
xchg
leave
adc
lret
rcrb
cmovl
lods
fsubr
mov
sbb
sbb
push
sti
cltd
add
lahf
mov
inc
lahf
jg
inc
mov
call
mov
loopne
sarb
orb
xchg
movsl
ret
mov
test
mov
hlt
mov
adc
hlt
aam
loop
clc
mov
pop
push
or
dec
mov
jg
inc
leave
addr16
or
out
sahf
loop
bound
inc
pop
es
out
mov
movsl
test
testb
lret
repnz
cmc
std
push
int
pop
push
mov
or
mov
mov
add
and
push
mov
mov
pop
dec
div
leave
push
aas
popf
push
mov
jne
mov
das
insb
mov
mov
je
pop
lahf
dec
fsub
dec
jecxz
ljmp
push
push
xor
inc
in
or
ja
int3
or
or
jnp
add
dec
gs
cmpsb
imul
rcll
stos
in
flds
mov
movsb
jge
mov
ret
mov
dec
and
inc
xor
dec
sub
idivb
lods
add
inc
pop
popf
repnz
lds
push
mov
lods
adc
xchg
jo
fcmovne
add
outsb
dec
mov
mov
movsl
adc
push
push
xchg
lahf
mov
mov
mov
xor
lret
jbe
and
addb
mov
xor
sub
ja
stc
test
sahf
stc
fwait
lock
es
imul
push
shlb
cli
add
and
out
inc
call
vandpd
sub
cmpsl
rcl
xchg
sti
mov
dec
pop
addr16
scas
out
inc
lea
movsb
pop
xchg
gs
or
jbe
fisttpll
push
in
pop
xchg
je
mov
cld
add
subl
cmp
jbe
adc
adc
sub
rcl
setno
int3
or
jne
mov
jnp
icebp
mov
mov
xlat
mov
andl
lret
arpl
pusha
sub
daa
add
xchg
mov
dec
popa
aas
repnz
icebp
mov
loop
xor
adc
ds
mov
xor
inc
adc
cmp
arpl
std
rcl
push
shll
dec
inc
push
jno
insb
and
inc
int
fmuls
xor
cmc
clc
add
sbb
dec
sub
ja
loop
and
inc
inc
cmc
in
add
dec
jmp
or
addr16
js
out
push
xchg
pop
add
lea
call
out
in
jae
mov
adcl
xchg
dec
push
scas
push
into
incl
adc
sub
cmpsl
nop
out
arpl
aas
js
xlat
inc
dec
mov
sub
jmp
fildll
add
cmp
fists
jp
pushf
lods
pop
mov
push
gs
add
iret
ret
push
lret
shlb
sbb
and
daa
mov
sub
shll
sbb
inc
pop
aam
mull
out
aaa
mov
cmpsl
xchg
incb
outsb
js
and
mov
xchg
dec
loop
jge
lds
hlt
ret
mov
pop
mov
hlt
in
and
fimuls
out
lahf
push
jecxz
cs
shrl
xchg
repnz
js
rcrb
jnp
outsl
std
adc
rclb
push
rcrl
fistpll
subl
testl
add
out
ljmp
adc
jl
jns
cmp
rol
notb
fidivrl
out
ret
cmc
es
data16
cmpsb
cwtl
daa
push
xor
lods
inc
insl
in
mov
int
xchg
mov
cmp
mov
xchg
dec
fbstp
cmp
mov
sahf
mov
pushf
or
push
push
into
daa
add
inc
cmp
ret
mov
into
adc
js
sub
out
mov
aaa
lock
insb
std
popf
movsl
jl
mov
mov
imul
or
popf
scas
notl
xchg
dec
pop
fcomp
loopne
push
mov
das
inc
mov
and
push
jg
ds
shr
mov
movl
out
inc
mov
stos
sub
xchg
xor
mov
mov
cld
addr16
mov
je
mov
sbb
aam
test
jecxz
in
daa
fcoml
in
cmc
repz
add
dec
fs
andl
decl
add
or
cltd
call
fs
aas
mov
jno
mov
movl
cmp
jbe
and
sub
cld
subl
loope
gs
jb
or
sti
movsb
loopne
jg
lea
sub
sub
sub
dec
mov
add
out
arpl
aaa
dec
mov
push
aaa
pop
andl
sarb
shlb
mov
ret
lock
adc
dec
and
pop
jl
fimull
jnp
mov
jl
dec
test
inc
imul
mov
cmp
xor
ljmp
sub
fbstp
add
insl
xchg
aas
jl
sbb
repz
dec
outsl
repz
test
iret
cltd
sub
add
jb
pop
int
shlb
mov
sbb
and
pop
pop
jbe
cli
xchg
xlat
data16
jb
pop
and
lahf
fcomps
lret
lds
subl
outsl
push
les
lahf
rcll
fimuls
jmp
pop
test
test
pusha
mov
cmpsl
mov
pop
repz
inc
xor
stc
push
outsl
mov
mov
xchg
mov
or
jnp
add
mov
test
inc
xlat
jle
add
push
mov
push
and
les
cmp
cmp
aam
push
mov
cmp
dec
mov
mov
cmc
mov
in
icebp
mov
sub
mov
shrl
popa
push
adc
addr16
pop
test
sub
popf
mov
mov
add
pusha
testb
lods
out
adc
testl
jno
lahf
or
xorl
sti
dec
insb
jg
mov
in
paddsb
pop
out
mov
and
add
popa
pop
jb
xor
push
jl
testb
loope
jo
out
lret
push
pop
pop
dec
adc
filds
xlat
cmp
sbb
imul
sbb
xor
fcmovnbe
cli
std
and
sub
stos
jge
pop
and
cmpsb
js
out
rorl
mov
stos
or
add
in
or
cmp
lock
xor
sti
sub
pop
jns
dec
push
fildll
jg
xchg
dec
and
mov
popa
sbb
cli
dec
jae
and
inc
int3
pop
fdivrs
adc
dec
cwtl
ret
mov
mov
mov
xor
mov
cmp
dec
sbb
cld
ret
xchg
dec
bnd
out
es
push
pop
es
xor
stc
jge
xor
mov
jp
out
dec
pushf
fstl
test
add
je
mov
inc
mov
aad
mov
push
mov
and
inc
stc
fisubrs
imul
cmp
stos
jp
add
sub
dec
push
dec
xor
hlt
mov
mov
mov
jecxz
rcll
xchg
mov
cmpl
addr16
test
loop
popa
or
rcr
stos
push
ficoml
scas
sbb
sbbb
daa
fistpl
mov
int
cs
loope
jne
sbb
mov
fwait
ljmp
outsl
add
mov
movsb
add
ffreep
call
fs
sub
ficoms
ja
inc
outsl
mov
mov
mov
int3
fwait
jmp
inc
sbb
arpl
ja
xchg
sarb
push
pop
lcall
sahf
cli
sbb
lods
adc
cmp
add
inc
adc
xchg
mov
sahf
jge
pusha
and
jmp
pop
xchg
cltd
mov
bound
ja
jg
xlat
cmp
dec
sub
cmp
sbb
fsub
mov
sti
pop
outsb
mov
mov
dec
mov
jecxz
sub
into
or
dec
add
sahf
divl
pshufw
adc
lea
mov
fidivs
add
xor
movsb
das
shlb
faddp
cmp
outsb
es
shrl
xor
mov
addb
movsl
mov
out
xchg
sbb
xor
mov
mov
insb
add
lods
scas
dec
movsb
pushf
loope
int3
pop
sub
in
sarl
pop
fmuls
mov
and
dec
repz
jae
popf
rcrb
clc
mov
jle
pop
sbb
std
pop
divb
faddp
xchg
jmp
pop
dec
push
mov
shr
or
sub
jb
lea
aaa
cmc
stos
add
imul
scas
bound
int
inc
xchg
subl
jo
movb
xchg
lea
push
fstp
aad
andl
pushf
jle
push
ret
loope
push
pop
and
sbb
fcomi
ds
fnsave
dec
jns
aam
shll
xor
insb
cmp
lds
data16
mov
inc
jle
sub
push
xor
stc
jae
out
xchg
inc
xchg
testb
lret
mov
inc
inc
mov
mov
cli
mov
leave
out
in
and
cmp
sbb
imul
inc
js
leave
xchg
out
movsl
sub
aaa
jno
mov
mov
or
xor
cmc
cmp
sarb
icebp
mov
cmp
ds
ja
jo
enter
data16
and
hlt
sbb
jne
mov
add
add
cs
lods
clc
enter
outsl
xor
mov
push
arpl
std
xchg
cld
cmp
mov
incb
cltd
loopne
out
adc
mov
int
sub
xor
add
iret
ret
test
mov
imul
sahf
enter
mov
dec
mov
dec
jo
or
daa
dec
leave
rcrl
stos
and
xor
ljmp
mov
int3
sbb
cli
mov
es
sarb
jns
inc
psrlq
loopne
mov
call
push
fidivl
stos
cmp
aam
loopne,pt
jbe
xchg
dec
jmp
jle
fwait
mov
fucom
leave
andb
adc
push
enter
cmp
enter
jbe
aaa
or
loopne
adc
in
cmp
adc
xor
orb
jmp
icebp
xchg
and
shrb
pop
mov
out
ds
imul
inc
jo
pop
xchg
xor
out
inc
insl
xchg
jg
and
and
pop
ja
sbb
xor
ffreep
jns
call
stos
test
dec
rorl
sbb
push
out
leave
ret
dec
add
pusha
sbb
in
inc
popa
test
mov
sahf
ss
pop
nop
sahf
xor
shll
nop
xchg
loop
ds
stos
pop
nop
rcl
mov
imul
xor
lea
sbb
and
inc
cli
cs
xor
incb
add
test
cld
nop
pop
adc
cmpsl
shl
dec
int
xor
std
jae
int
and
rolb
es
data16
mov
movsl
aad
into
ud2
fcoml
dec
pop
dec
inc
popa
orl
adc
call
incl
xor
mov
and
xchg
es
mov
sub
nop
testb
clc
adc
mov
jb
inc
loopne
push
push
test
call
outsl
ljmp
data16
out
push
jge
orb
xor
or
jae
in
cmpsl
sub
mov
stos
daa
cli
xchg
push
aam
std
lea
adcb
adc
cld
movaps
cltd
into
jp
fmull
lahf
push
jge
sbb
cmpsb
iret
ds
rcl
cmovbe
adc
xor
xchg
leave
cmp
std
sub
dec
mov
fldt
inc
and
dec
fwait
pusha
or
adcl
fadds
fbld
lock
daa
xlat
mov
jl
in
mov
and
push
xor
xchg
mov
in
adc
xor
pop
jmp
cmpsl
dec
mov
ja
lds
pop
cli
test
int3
shl
mov
sahf
in
sub
mov
cmp
das
add
mov
or
inc
adc
adc
pop
xor
push
dec
add
jle
mov
ljmp
mov
leave
call
stos
popa
das
repz
out
cmp
les
sbb
lret
into
push
lods
je
inc
inc
sub
ss
pop
push
fdivrl
xor
lahf
ret
lret
sbb
sti
andl
sbb
sub
cmpsb
out
test
cmp
and
popa
pop
pop
lahf
xchg
inc
dec
xchg
je
test
fs
jne
xchg
adc
sbb
sahf
mov
pop
xchg
inc
jge
cmp
dec
xchg
push
and
dec
push
leave
aam
arpl
push
or
sbb
mov
lea
popf
ljmp
push
pop
push
xor
repz
sbb
pop
popa
sahf
int3
sti
stos
shlb
loopne
or
push
lahf
pop
adc
mov
mov
loope
push
sbb
adc
add
rcl
xchg
fildll
sub
jnp
outsl
dec
add
sbb
lds
notb
xor
stc
hlt
xor
adc
mov
lret
or
arpl
stos
daa
pop
mov
pop
mov
adc
clc
sahf
cld
loopne
setbe
hlt
sbb
adc
stc
out
rcrb
jns
xor
fidivrl
ljmp
ss
lock
subl
inc
cmp
aas
in
stc
mov
mov
lcall
mov
ja
dec
xor
sbb
push
push
or
mov
inc
cmp
lds
adc
les
sub
jnp
push
mov
cmpsb
mov
xchg
out
mov
std
mov
leave
mov
js
faddl
inc
xchg
push
push
gs
jge
imul
mov
pop
cmpsb
leave
and
repnz
push
lods
das
fdivs
xchg
sti
sub
call
sbb
xchg
mov
mov
or
fmull
sarl
jmp
add
adcb
or
fdivrl
sub
fistpl
push
ljmp
inc
nop
cmp
push
stos
insl
das
rcrb
stos
or
xor
cltd
aaa
repz
or
leave
xor
or
sub
push
sbb
push
push
cli
mov
cwtl
inc
cmc
push
adc
xchg
jp
and
sahf
in
int
inc
mov
mov
lret
call
enter
cltd
add
imul
sub
adc
pop
dec
outsb
jg
mov
pushf
inc
cmp
scas
les
rolb
xor
push
or
adc
ds
mov
data16
mov
mov
or
xchg
jmp
push
cmp
out
das
movsb
push
popa
dec
xor
inc
rorl
sub
outsl
cmpsl
icebp
fidivrs
enter
sahf
cmpsb
sbb
cmp
add
xor
push
lock
sbb
cld
or
int3
ljmp
shlb
xor
xor
ret
mov
jmp
mov
nop
push
js
sub
fbstp
xchg
dec
jle
pop
inc
xlat
sub
xchg
mov
inc
mov
cmp
jge
rcll
ja
dec
popf
movsl
add
in
push
ret
divl
sbb
gs
sub
or
rolb
nop
pop
or
and
mov
xchg
out
cmove
pop
lock
mov
pop
loopne
das
jle
pop
inc
scas
fnstcw
das
scas
push
push
xor
out
cmp
mov
repnz
pop
aaa
rorb
xchg
in
pusha
inc
loop
sub
out
ljmp
lock
xchg
mov
xchg
sub
mov
nop
mov
push
cmpsb
mov
cmp
mov
dec
enter
pop
push
sbbb
int3
les
ret
nop
hlt
enter
popf
cmp
inc
outsb
xchg
xor
mov
push
popf
push
test
mov
ss
fisttps
ljmp
jnp
inc
mov
into
add
das
outsl
stc
sub
jnp
xor
jae
fadds
sahf
fisubl
outsl
and
jecxz
out
inc
mov
jb
mov
pushf
sahf
lcall
mov
jp
icebp
icebp
xchg
sbbb
ret
xchg
cmp
in
mov
fmuls
ja
mov
xor
test
sbb
js
cmp
mov
mov
jl
inc
nop
cld
xor
pushf
adc
insl
cs
xchg
sarb
mov
xchg
sti
xchg
or
dec
inc
std
sub
inc
in
dec
mov
cmp
je
pop
gs
fcmovb
pushf
cmc
push
test
dec
cmp
inc
cmp
dec
inc
and
int3
loop
repnz
dec
test
lret
lds
adc
fisubs
cwtl
cmpsl
repnz
add
pop
and
cmp
stos
dec
outsb
lods
pop
pop
fwait
movsb
enter
arpl
fstl
fsubr
fmull
sbb
lahf
fs
sbb
xor
test
ds
repnz
filds
arpl
lods
mov
outsb
or
mov
mov
icebp
arpl
inc
adc
fwait
sbb
adc
cmpsl
repnz
loope
push
push
daa
add
repnz
and
shlb
aad
push
cmp
inc
adc
inc
sbb
data16
aas
mov
or
test
push
jg
ret
inc
movsb
adc
std
dec
add
getsec
mov
cmp
xchg
cmpsl
shr
xchg
popa
mov
push
push
enter
dec
sub
cmp
frstor
ror
sbb
jecxz
jo
inc
jl
ljmpw
test
push
iret
in
pushf
xchg
sbb
lahf
in
push
jns
dec
ret
pop
add
xchg
in
mov
std
movsb
sub
or
les
daa
mov
push
cmpps
xchg
out
repnz
mov
mov
insl
mov
xchg
mov
jbe
stos
xlat
mov
add
in
xor
stc
sbbl
xchg
ror
add
arpl
and
jne
daa
or
pop
repnz
inc
lods
sub
adc
addr16
xchg
mov
cmp
mov
dec
and
mov
xorl
psrld
sti
and
sub
aaa
cmpsb
test
push
pop
add
xchg
test
mov
pop
imul
fsubp
add
pop
pop
and
sbb
sbb
pop
rcrl
mov
and
fdivrs
scas
xchg
sub
push
and
sbb
pusha
movsb
dec
mov
clc
mov
push
dec
jp
jb
push
ljmp
xor
cmp
lret
lahf
cli
pusha
fs
or
cmp
movsl
pop
jmp
jge
mov
or
xor
aam
push
push
add
lret
dec
pop
stos
pop
mov
test
nop
insb
jne
adc
mov
lret
test
test
and
mov
pop
push
lcall
cmpsb
scas
mov
popf
xor
mov
sbb
cmp
mov
mov
cwtl
repz
arpl
mov
xor
push
or
sti
je
aad
test
push
dec
push
adc
notl
or
or
cli
nop
xchg
pop
mov
mov
adc
add
sub
sub
es
cmc
add
in
pop
xchg
int3
jg
test
fstps
sub
lret
xchg
ret
xchg
push
inc
fldl
clc
enter
mov
test
pop
scas
outsb
mov
fcmovu
mov
dec
icebp
arpl
cmp
aaa
fldenv
and
hlt
int3
incl
rclb
repnz
out
adc
pusha
mov
mov
mov
aad
adc
lret
dec
dec
das
pusha
lret
int3
push
cmp
xorb
inc
sub
mov
imul
push
pop
push
jne
cmc
push
loope
xchg
in
sub
xchg
ret
js
mov
jnp
enter
mov
outsl
push
mov
xchg
jl
loopne
inc
ja
leave
pop
sub
in
dec
adc
mov
repz
roll
sub
cli
fidivrs
aaa
enter
mov
sub
or
push
test
fwait
mov
xor
sbb
icebp
jp
enter
lcall
in
incb
fbld
in
lahf
ret
inc
adc
aas
fucom
lea
ja
pop
test
xchg
dec
ret
insb
cltd
add
loopne
int
aad
lods
pop
and
out
cmpsb
adc
jge
dec
add
pop
test
outsl
and
dec
je
cltd
sub
or
enter
mov
sbb
loopne
inc
loope
cli
loop
inc
sub
insl
xlat
loop
sub
add
notb
loope
lret
xor
addb
xchg
and
outsl
sti
fs
jg
jb
aaa
xchg
fdiv
adc
dec
xor
hlt
fimuls
fisubs
int
aam
lea
mov
loop
adc
aad
mov
mov
add
fiaddl
ds
inc
aaa
mov
xor
mov
aas
cs
rclb
cmp
mov
repnz
bound
mov
sbb
enter
xor
mov
xchg
scas
add
cld
jbe
sarb
clc
jne
cwtl
jp
scas
mov
jne
cmp
lahf
loop
out
ja
sti
out
iret
stos
jnp
mov
sarb
adc
sub
aaa
xor
pop
imul
fdivrl
lret
xor
fiaddl
scas
jno
cmpsl
test
rcr
mov
sub
and
jecxz
xchg
inc
jns
mov
mov
imul
jmp
fidivrs
pushf
inc
fldcw
sbb
mov
in
imul
repnz
outsb
push
sub
sbb
out
push
repz
ret
sbb
xor
je
hlt
ja
mov
sub
das
fdivrs
enter
out
mov
es
push
call
cmpsl
fcmovnu
call
push
push
add
xor
inc
movsb
test
out
notl
adc
dec
mov
xor
sub
into
mov
adc
lret
jp
ljmp
push
jbe
incl
xor
pop
mov
ds
or
pop
push
outsl
pop
stc
fdivp
mov
dec
rclb
push
adc
es
sub
xor
aas
ret
and
pop
xor
dec
mov
out
orb
daa
push
push
js
mov
les
adc
add
mov
push
mov
dec
inc
dec
pxor
les
jle
xlat
sub
pop
bound
imul
xor
and
loopne
cmp
iret
int3
xchg
xchg
pop
mov
mov
aam
and
ret
add
pop
mov
adc
jle
push
stc
aaa
xchg
sbb
ja
es
mov
push
xorb
pop
mov
insb
dec
add
jg
scas
ja
mov
hlt
shl
mov
ss
and
and
gs
pop
push
lock
in
ljmp
mov
jmp
jbe
mov
subl
sahf
push
dec
mov
stos
rcrb
js
jns
jmp
adc
dec
xchg
rcrb
aad
add
lahf
ret
insl
popf
dec
lea
pop
sbb
je
push
arpl
icebp
enter
pop
shl
sub
int3
mov
lcall
xor
push
les
cmp
adc
aaa
mov
popa
sbb
cmp
inc
dec
fsubrl
repz
sub
cmp
cld
loopnew
xor
add
push
and
push
pop
add
fisttps
adc
push
jecxz
push
fiaddl
jmp
sub
outsl
xor
pushf
add
dec
imul
mov
pop
gs
sub
addl
testl
fistps
je
push
jbe
pop
inc
push
and
jp
out
mov
or
popa
sub
dec
mov
mov
mov
dec
jle
mov
cwtl
in
sub
lret
shrl
push
lahf
sub
mov
jae
out
inc
push
push
mov
jmp
mov
out
popf
push
cld
jecxz
dec
loop
cmp
fildl
ret
or
and
mov
jae
inc
dec
lea
loope
push
in
cs
aas
adc
ljmp
jmp
mov
xchg
inc
pop
lcall
xchg
pop
mov
inc
cltd
pop
ja
mov
pop
and
dec
dec
sub
sbb
mov
xchg
out
cmc
sbb
cmp
pop
mov
enter
sti
cmp
pop
shlb
sub
cmp
inc
out
mov
test
push
mov
xchg
mov
mov
add
cmp
mov
cmp
es
out
in
push
inc
mov
popa
rcr
outsb
push
arpl
mov
inc
icebp
xor
testb
add
loopne
push
test
in
fs
test
inc
sti
lock
lock
gs
push
insb
push
mov
mov
jl
mov
inc
push
jp
ret
cmp
out
sahf
jg
movsl
pop
sub
jae
dec
ret
fucom
fwait
je
cmp
sti
in
lret
out
out
add
push
iret
test
add
push
cmp
jno
mov
adc
les
out
jno
pop
adc
repnz
xor
add
cld
dec
imul
cmpsb
or
and
cld
xor
jge
arpl
inc
or
mov
xor
sti
dec
sbb
push
dec
sbb
ficoms
xchg
mov
sub
adc
fistps
push
sbb
scas
repnz
xchg
scas
or
test
aas
fcmove
nop
out
movsl
ds
roll
fldt
cld
arpl
pop
popf
push
jecxz
movsb
xor
loop
sub
inc
sbb
fwait
iret
mov
adc
dec
dec
nop
rolb
jbe
mov
sar
mov
jecxz
cld
arpl
dec
push
pop
dec
popf
bound
repz
dec
dec
imul
imul
mov
inc
and
push
sbb
dec
imul
outsb
mov
push
xchg
sub
jno
pop
adc
mov
inc
add
xor
aam
sbb
mov
and
ret
inc
mov
mov
jo
mov
jmp
insb
loopne
outsl
cld
cmpsl
mov
data16
dec
es
arpl
sub
jb
jb
xor
sbb
inc
push
icebp
xchg
and
pop
lret
sub
cwtl
dec
sbb
pop
movsb
rcrl
int
xor
xchg
push
adc
push
out
je
hlt
fldt
xor
lcall
repnz
add
dec
xor
and
jl
fcompl
stos
and
clc
dec
ja
js
mov
shrb
push
mov
mov
jge
add
mov
xchg
imul
push
out
ja
inc
test
push
cmc
test
xor
adcb
push
cmc
xor
cs
jno
xchg
movsb
popf
outsb
xchg
pop
lcall
in
stc
push
jbe
out
cmp
mov
adc
scas
mov
pop
test
dec
das
lods
dec
loop
jnp
stos
stos
test
sbb
ret
pop
in
push
dec
idivb
mov
sub
cltd
rcrl
sbb
xchg
jb
or
inc
mov
pop
lods
js
mov
cmp
outsl
ds
out
cld
add
pusha
dec
mov
aam
sbb
mov
test
fimull
scas
decl
repz
mov
pop
inc
fildl
sbb
jg
dec
mov
pushf
cmp
adc
lods
loopne
xchg
xchg
arpl
jg
pop
mov
adc
repnz
int
js
popf
into
add
aaa
out
mov
sub
xchg
pop
adc
jl
jmp
mov
aas
pop
push
sbb
pop
mov
jle
das
dec
lock
add
in
stos
into
xchg
jl
bound
cmc
rcrb
push
fcompl
mov
sub
das
mov
jmp
sahf
mov
xchg
mov
mov
in
mov
push
movsb
push
pusha
add
xchg
outsl
mov
shlb
mov
xor
jnp
rorb
int
out
mov
leave
outsl
ja
add
dec
push
push
push
imul
mov
outsl
shl
lea
push
push
dec
repz
or
sti
aas
jl
out
inc
out
dec
jl
inc
rorl
ss
jno
scas
data16
dec
add
dec
push
call
pusha
cli
lea
xor
xchg
xchg
cs
test
push
push
je
and
or
scas
xchg
fldt
addr16
aam
mov
xchg
inc
and
pushf
out
stos
push
rcrl
aad
arpl
jl
stos
icebp
push
mov
pop
gs
sbb
dec
dec
arpl
in
adc
ss
out
jb
or
lret
xchg
mov
dec
lea
cs
lcall
mov
jno
sbb
xor
lea
hlt
pushf
adc
cltd
popf
or
adc
std
arpl
aad
pop
cmp
push
scas
loope
out
sub
jmp
jne
jbe
add
lret
inc
jns
insl
cs
sub
sub
aad
adc
jnp
out
xchg
das
stos
xor
mov
sub
jge
xor
inc
mov
or
stos
in
push
rcr
add
adc
jo
xor
or
pop
adc
sar
mov
mov
test
dec
pusha
mov
adc
das
stos
cwtl
adc
push
pop
jnp
ret
les
mov
jb
mov
popa
pop
jb
inc
out
in
xchg
sbb
jae
lcall
lcall
imul
dec
xchg
daa
icebp
mov
pop
mov
and
push
jno
out
iret
cmp
popa
xchg
pop
cmpsl
repz
ret
scas
fmuls
addr16
test
imul
sti
addr16
aas
mov
sub
divl
ja
jp
add
xchg
insb
xchg
push
repz
inc
jge
cmp
mov
hlt
mov
fdivrl
insb
insl
adc
or
daa
es
dec
mov
and
cmp
out
add
cltd
rcr
mov
adc
xchg
fisttps
pcmpgtb
mov
cwtl
push
test
jg
adc
test
mov
mov
inc
mov
add
or
int
jmp
jnp
xchg
das
lds
lcall
pop
inc
cmpsl
add
or
stos
sub
icebp
out
fistpll
cmp
xor
xchg
jae
lock
ds
xchg
out
ds
xor
dec
mov
pop
and
adc
and
jne
repnz
adc
dec
mov
mov
pushf
aad
fistl
xlat
mov
lcall
jbe
push
add
push
sub
and
add
popf
xchg
mov
xor
nop
aaa
repnz
pop
push
push
mov
sti
out
or
dec
pop
enter
sbb
fisttpl
aad
cltd
add
enter
lods
adc
lret
sub
push
aad
mov
adc
popa
cmp
pop
ss
ficoml
xchg
mov
aaa
mov
mov
push
pop
adc
fisubrl
enter
je
test
stos
inc
cmc
sub
hlt
or
ss
jae
sti
jae
mov
test
loopne
scas
leave
stos
sub
int
lods
mov
inc
push
mov
test
add
sub
inc
xor
lea
insb
lret
insb
scas
push
push
cmpsl
push
push
dec
cwtl
pop
jns
lods
mov
sub
push
out
bound
ret
xchg
inc
xor
sub
push
je
int
scas
pushf
dec
jbe
lahf
mov
das
push
shll
lods
daa
lds
sbb
mov
divb
add
into
push
mov
pusha
inc
in
mov
pop
sub
notb
adc
movsb
cli
or
pop
jmp
out
pop
xlat
jno
aaa
lret
mov
cmc
cwtl
sbb
sub
sahf
and
jl
xorl
xor
or
push
repnz
cmp
jle
outsb
movl
imul
out
shlb
lods
sub
cmp
xchg
sahf
adc
adc
mov
xchg
loopne
push
add
dec
inc
or
jecxz
mov
pop
xor
xor
sbb
jl
icebp
int
add
cltd
jle
mov
or
add
add
inc
ds
mov
dec
push
imul
or
les
or
scas
adc
leave
jo
cmpsl
add
call
xor
mov
imul
ss
loop
repz
jl
mov
pop
mov
imul
repnz
mov
cmc
push
data16
aas
pop
jge
ljmp
out
cmp
in
minps
lret
addb
xchg
fiaddl
cld
xor
out
vpmulhuw
push
stos
dec
loopne
inc
adc
xor
cs
jp
jne
and
or
enter
sbb
aas
jle
dec
mov
imul
sar
sahf
insl
popa
dec
xor
sub
add
pop
enter
call
sti
sarl
push
sahf
std
fidivrs
sbb
cmpsb
dec
xor
add
push
mov
nop
inc
daa
push
popa
lods
pop
clc
arpl
daa
push
or
leave
sbb
push
and
cs
and
and
jns
loop
inc
call
pop
repnz
dec
shl
inc
mov
aam
sbb
std
movswl
fld
andl
jnp
push
add
pop
sbb
xchg
xor
xchg
test
bound
es
jl
out
clc
lret
sub
mov
adc
mov
or
arpl
push
scas
pop
pop
ret
add
pop
inc
rep
jp
mov
cmpsb
mov
hlt
je
mov
sbb
btc
or
fcompl
xchg
add
dec
or
sti
out
pusha
or
aaa
insl
fcmovbe
aam
cmpsl
movsl
mov
je
cld
fwait
ljmp
sbb
jp
fcoms
and
add
iret
adcl
dec
xchg
and
jae
ret
pusha
mov
jl
nop
out
dec
jle
lock
jo
negl
fst
cmpsb
mov
inc
test
arpl
adc
mov
mov
pop
leave
pushf
outsl
vmovq
jb
in
enter
cmpsl
lock
xchg
subb
dec
pop
ds
and
daa
rol
push
push
cmp
jb
mov
push
inc
insl
adc
and
mov
add
and
jge
adc
sub
jmp
lods
xchg
jmp
dec
mov
mov
shlb
sub
cmp
and
outsb
shl
pop
push
lret
int3
fmull
or
inc
sti
sub
fidivrs
mov
aaa
fidivl
bound
mov
inc
roll
test
cli
lods
or
or
stos
sbb
cld
sub
cmp
push
clc
mov
and
mov
mov
adc
cmp
out
jae
insl
notl
mov
fsubr
jbe
clc
ffree
addr16
cmp
rcpps
sub
rcpps
jb
add
rorl
push
or
leave
cmp
inc
add
sub
pushf
mov
xchg
xchg
imulb
lret
mov
rcrl
sub
push
add
xor
xchg
sub
inc
push
sbb
es
clc
imul
nop
repnz
aas
jge
or
stos
mov
sub
xchg
cmp
pushf
jmp
aad
adc
push
pop
adc
lods
and
scas
xorl
pop
xchg
xlat
adc
lods
inc
loope
or
pop
je
adc
xor
stos
pop
push
lret
mov
pop
jns
mov
loope
xchg
nop
and
cmc
cmpsb
stos
repz
in
or
xchg
pop
jno
lret
stc
xor
icebp
lock
in
andl
sbb
movsl
outsb
mov
xchg
adc
jo
out
ret
int3
int
push
addb
jmp
repnz
stos
fldcw
jmp
cmp
pop
add
movsl
aas
push
shrb
cmp
inc
mov
dec
lret
das
and
and
mov
fsubr
dec
mov
dec
mov
call
fsub
push
movsb
stc
mov
dec
inc
cmpb
es
loope
pop
push
pusha
push
pop
xchg
pop
mov
cli
cli
lds
xchg
pop
inc
stos
sarb
fucomi
in
jb
push
bound
xchg
mov
test
sbb
mov
mov
lea
jb
lret
and
and
outsb
xchg
scas
adc
gs
xor
cwtl
arpl
rcr
xor
pushf
aad
or
mov
mov
insb
cltd
sbbl
scas
dec
pop
lahf
cmp
mov
or
lock
out
gs
sub
pop
rorl
adc
or
in
dec
sahf
xchg
jl
in
xor
sub
pop
ficomps
repnz
dec
ret
ret
mov
push
or
scas
jb
add
jmp
movsb
mov
dec
push
sub
notb
dec
push
adc
sub
stos
sub
insb
lock
fnsave
mov
js
xor
or
mov
mov
fwait
ret
dec
js
loope,pt
es
aad
jg
jnp
outsl
and
pop
add
sub
cld
insb
cld
mov
data16
cld
push
mov
mov
pop
mov
mov
ret
adc
gs
outsl
bound
add
mov
pop
mov
xor
push
sbb
movswl
sbb
jmp
push
movd
test
les
push
sub
cs
dec
mov
push
inc
sarb
stos
add
in
out
imul
cmpsl
xor
divl
incb
cmp
loop
mov
jecxz
iret
pushf
sub
cmp
popf
arpl
or
movsl
xchg
test
pop
popa
and
mulb
inc
fsubs
sbb
in
out
in
lcall
jnp
das
out
sbb
daa
dec
xchg
icebp
das
cmovbe
outsb
mov
cmpsb
xchg
es
push
shlb
fbstp
ds
push
out
add
cmpsb
idivb
pop
aas
pushf
inc
adc
push
lock
stos
das
ret
inc
js
cmp
lods
fcmovnu
fwait
mov
pop
inc
cmp
mov
jo
cs
xor
sbb
sbb
rcr
int
push
dec
das
add
dec
shrl
shll
ret
loope
clc
jns
insl
cmp
mov
orb
adc
bnd
push
mov
outsb
sbb
js
add
fcmovu
outsb
xchg
add
in
icebp
fs
jge
dec
lcall
pop
and
jecxz
dec
cmpsl
subl
aaa
dec
xor
jp
scas
mov
aam
mov
rclb
enter
clc
pop
cmp
inc
pop
jae
je
or
sbb
nop
sbb
dec
sbb
add
jno
loop
jp
push
mov
cmc
jns
lahf
stc
and
lods
dec
or
cmp
rorb
xor
adc
push
xor
cmp
xchg
in
dec
mov
mov
and
xlat
pop
mov
bound
outsl
test
adc
or
pop
mov
outsb
sarl
mov
test
cmp
mov
cld
mov
imul
push
loopne
dec
xchg
add
dec
add
xorl
shll
mov
xor
or
aam
jge
repz
jne
lock
and
aam
dec
push
rcl
or
shl
sub
imul
movq
push
std
arpl
mov
ss
insb
pop
lods
xchg
cltd
jno
lds
pop
pop
loop
xchg
sbb
lret
icebp
jae
std
adc
mov
add
ljmp
jo
pop
stos
loopne
sti
xchg
loop
and
iret
cwtl
xor
arpl
inc
push
mov
jo
aad
xor
bnd
cmp
fwait
mov
jl
iret
pusha
fwait
mov
mov
push
lock
js
subb
mov
cmpsb
sub
and
pop
stc
jl
mov
lods
jo
fistpl
mov
mov
or
dec
adc
jecxz
and
aaa
inc
mov
test
insl
notb
dec
popa
dec
outsl
pushf
or
pop
and
mov
pop
inc
sub
add
mov
xor
or
rolb
scas
dec
dec
and
and
clc
pop
int
push
sbbb
into
femms
inc
fwait
add
out
mov
or
jo
push
xchg
jg
jne
enter
jb
push
and
test
pop
movsb
test
mov
sbb
mov
sbb
adc
sbb
test
mov
cmp
dec
dec
push
jmp
mov
lcall
mov
adc
movsl
inc
dec
push
mov
lcall
cwtl
push
repnz
cmp
cmp
jecxz
mov
pop
ljmp
mov
out
jns
mov
fs
mov
sub
cwtl
inc
xor
dec
pop
je
xorl
mov
dec
fdivr
xor
les
xchg
sbb
lods
rolb
cld
inc
imul
movsb
enter
sti
cmp
popa
movsl
ss
add
mov
test
aaa
xorb
test
jle
in
dec
pop
inc
jne
pop
test
flds
imul
mov
inc
cmp
cwtl
dec
mov
push
out
gs
int
in
xor
jno
jb
sbb
jle
dec
sub
test
push
mov
mov
jb
adc
sbb
idiv
xchg
push
fidivs
xor
sub
scas
add
jecxz
mov
sub
int3
icebp
mov
fsub
arpl
ret
push
mov
xlat
movsl
cli
push
cmp
pop
fcoml
rorl
into
out
ret
test
shr
loopne
fs
lods
dec
inc
xchg
fbstp
and
scas
mov
lods
jecxz
dec
and
mov
aad
pusha
mov
sbb
in
mov
daa
in
arpl
fsts
inc
xchg
notb
mov
andb
mov
mov
xchg
pop
sub
cld
cmc
jge
arpl
insb
das
mov
stos
test
jl
aad
les
cwtl
adc
or
pop
jae
push
xorl
data16
jns
jmp
jp
fsubrs
add
enter
outsb
out
ret
xchg
testl
xor
sub
lods
pop
mov
pop
insb
clc
int3
lcall
pop
movsb
lock
sbb
pop
pop
je
lcall
inc
push
fdivs
cmpsl
sbb
loop
xlat
or
rep
mov
pop
test
imul
push
cltd
mov
outsb
outsb
mov
pop
sti
repz
sub
cmp
sub
pusha
jae
std
jae
test
or
pop
mov
xchg
or
sbb
enter
adc
ret
enter
add
pusha
push
xor
pop
mov
add
cmpsl
pop
ds
mov
sbb
mov
mov
mov
xlat
cmc
pusha
add
jmp
push
mov
mov
xchg
xchg
sub
jp
pop
lcall
mov
sbb
push
nop
jbe
push
aas
cmp
adc
pop
pop
bound
push
adc
movsl
dec
jmp
dec
lea
in
es
daa
pusha
cwtl
leave
cmp
xchg
xor
js
sub
shrl
int
insb
jge
cmp
cmp
xor
ret
jmp
add
in
jnp
mov
scas
lahf
loope
jge
fsubrs
cmp
lcall
inc
jnp
xor
jbe
cmpsl
sbb
pop
mov
lahf
xchg
fstp
pop
int3
push
aam
int3
in
mov
incl
out
fnsave
adc
cmp
or
mov
das
repz
sbb
mov
push
sub
xor
xchg
xor
pop
sbb
pop
adc
push
scas
jle
mov
int3
arpl
pop
jp
test
addr16
aad
dec
cmp
mov
xchg
or
mov
cltd
testb
xor
js
jmp
aas
cmp
mov
lds
inc
xor
or
pop
arpl
sbb
sbb
out
pushf
lods
lcall
mov
xchg
ss
mov
jle
mov
int3
push
lea
jnp
cwtl
mov
aas
xchg
ds
clc
xchg
xchg
push
shll
xchg
pusha
adc
in
push
lock
fimull
mov
push
out
jne
pop
cmp
dec
sbb
xor
dec
sbb
pop
aaa
mov
lcall
mov
call
jmp
ficompl
addr16
push
cmp
jmp
mov
mov
fstpl
out
sbb
add
inc
fucomi
out
push
inc
pop
cmp
inc
ficoml
push
std
out
lcall
fistpll
jge
call
mov
scas
lds
loopne
loopne
aaa
sbb
mov
jbe
out
xchg
xor
lods
push
ss
inc
sub
lods
xchg
xor
es
fidivrl
mov
jno
sbb
mov
mov
scas
mov
push
and
push
icebp
mov
mov
stos
mov
out
ret
mov
lods
popa
stc
sbb
mov
cmc
imulb
mov
test
add
pop
xchg
push
imul
mov
mov
cmp
adc
xchg
mov
mov
mov
and
insl
jmp
pop
rep
inc
sub
std
stos
aad
jb
sbb
xchg
nop
pop
fdivr
add
aaa
push
add
add
push
xchg
sub
jns
cmpsl
jge
dec
jns
in
adc
incb
xchg
xor
jp
rcrb
add
mov
add
out
leave
aaa
jns
enter
scas
jge
movsl
fisubrs
sub
mov
xlat
mov
fsubr
cmpsb
fs
out
sbb
xchg
push
das
cmpsl
jge
jb
push
sbb
mov
fisubl
hlt
fstl
or
sahf
xor
out
shll
mov
addr16
insb
xor
ret
in
aad
xor
adc
or
out
nop
dec
aaa
sbb
inc
dec
cmp
daa
stos
pop
lahf
outsl
and
mov
call
addr16
gs
adc
icebp
je
addr16
lock
dec
out
lret
inc
sub
mov
fsts
shrb
movsl
pop
loopne
test
or
inc
sti
xor
mov
and
insb
inc
xor
repz
ljmp
testb
mov
xchg
jmp
xchg
pop
fdivrl
sbb
jno
and
or
jmp
mov
icebp
outsb
sti
cmpsl
push
mov
mov
dec
scas
xor
inc
es
pop
xchg
adc
sbb
jnp
push
mov
ret
icebp
movsb
into
pop
add
add
call
push
es
cmp
dec
cmp
mov
daa
sahf
cmp
sbb
leave
and
jns
fisubrl
dec
idivb
adc
and
stos
pop
test
push
insb
repz
pop
inc
loope
sub
insl
ja
ror
nop
cmp
cmp
lahf
push
test
imul
imul
dec
and
sub
mov
mov
sbb
mov
and
jne
dec
es
int3
mov
test
pop
cmp
aas
cmc
enter
and
push
inc
jae
movsb
aas
mov
push
xchg
jg
roll
mov
pop
fstl
push
ret
mov
ret
mov
push
sbb
jae
mov
cs
std
cmpb
daa
das
sub
pop
cli
pop
xlat
test
adc
out
mov
shr
or
inc
add
lods
ficomps
or
dec
push
pop
jno
jg
loop
xor
adc
lods
mov
xor
jne
popa
enter
adcl
out
jno
jp
fcmovnb
xchg
cmp
shlb
pop
and
pop
pop
faddp
pop
push
inc
fs
fnstcw
mov
stc
mov
xor
imulb
pop
outsb
xorb
jnp
xchg
out
inc
pushf
scas
insb
data16
mov
stc
out
into
sub
enter
lods
test
jmp
jbe
xchg
cmp
mov
and
iret
lret
ds
and
mov
jmp
lock
js
xor
or
jb
enter
insb
adc
loope
jl
xor
push
cmp
fidivs
lahf
jle
repz
jns
jl
mov
adc
sahf
cmp
test
fistl
pop
pop
lods
adcl
jl
mov
popf
lods
movsl
clc
test
xchg
lock
mov
repz
fisttpll
mov
jmp
jecxz
jg
aas
in
inc
and
test
mov
into
jo
dec
call
mov
dec
gs
loopne
xor
ret
dec
lahf
inc
ss
xor
lret
inc
andb
cmp
loop
and
daa
xor
xlat
ljmp
sahf
jb
lcall
popa
jnp
sbb
das
lret
inc
fsubrl
mov
pop
cmp
sbb
nop
xchg
cmp
or
imul
mov
pop
ljmp
repnz
inc
repz
and
add
test
xchg
lahf
xchg
push
pop
dec
je
std
cld
sbb
jmp
int3
cwtl
jle
add
inc
jo
std
jmp
xorb
mov
fcomip
push
mov
pop
xor
rclb
adc
sbb
dec
jae
arpl
pop
and
mov
or
mov
orl
les
xor
cmp
dec
aas
inc
les
ja
arpl
cmp
pop
in
in
in
rolb
rol
shrb
loope
jle
and
and
jl
mov
in
vpcomub
out
cmp
inc
or
push
mov
ret
insb
bnd
mov
cli
jno
adc
push
jmp
stc
ficoml
xor
stc
lods
scas
lods
dec
mov
out
cli
pop
mov
enter
inc
ss
xchg
and
mov
xchg
jno
add
sub
decb
push
and
mov
test
xchg
and
mov
lcall
dec
rorb
pop
mov
inc
js
and
cli
xchg
cli
dec
jne
mov
sbb
xlat
sub
xchg
xchg
insb
dec
sub
push
mov
loope
jns
cli
dec
ljmp
lahf
dec
xlat
cmpsb
xor
dec
nop
inc
out
ret
in
mul
js
iret
addr16
sarl
fstpt
dec
dec
inc
inc
scas
and
xor
jl
cmp
ret
ss
das
cmc
pop
addr16
sub
mov
sti
sub
or
data16
popf
sbb
int3
sbb
popa
and
add
adc
and
arpl
rolb
jmp
test
inc
shll
out
fsubrs
add
sbb
neg
pop
mov
cmpsl
xchg
sub
or
loope
icebp
adc
inc
scas
mov
mov
cmc
cmp
and
cmp
in
lods
push
pop
pushf
stc
jbe
jnp
and
ds
ljmp
pop
lock
sub
xchg
lcall
ret
pop
xor
out
mov
jecxz
sub
daa
sti
nop
mov
fwait
jl
fisttpl
add
repz
fldl
loop
sub
pushf
jo
rolb
or
lods
or
sub
xor
push
arpl
arpl
pop
pusha
subb
movsb
jle
add
rcrl
enter
or
inc
inc
jp
call
outsb
insl
mov
jmp
jg
cld
lock
pop
subl
cmpsl
and
push
jmp
push
mov
int3
jp
sbb
adc
fdivrp
pop
mov
jp
aad
and
test
mov
cli
nop
aaa
aaa
jbe
inc
ja
subb
sub
mov
lret
xor
int
adc
movsb
sub
imul
mov
rorb
sbb
enter
cli
loopne
xchg
mov
in
sub
mov
out
out
int
pop
push
push
inc
jb
and
pop
rorl
ja
cli
pop
or
sbb
in
js
inc
mov
lods
mov
mov
mov
mov
add
inc
clc
adc
push
or
mov
pop
or
mov
push
xchg
adc
push
inc
xchg
pop
fistl
fbld
xchg
push
in
ret
pop
sbb
or
mov
test
imulb
daa
push
mov
out
mov
pop
out
xchg
mov
mov
cltd
movsl
push
or
cmpsl
mov
add
push
add
insl
ja
cli
add
roll
std
mov
dec
pop
sbb
cmp
or
jnp
pop
bound
dec
test
adc
and
sahf
push
sahf
cmc
or
or
dec
les
push
loopne
pop
cs
dec
jg
mov
imul
mov
mov
cmpsl
pop
and
adc
pop
jmp
stos
jecxz
sub
leave
add
dec
mov
mulb
daa
dec
stc
lock
cmp
jne
mov
jo
es
shr
mov
mov
ret
outsl
pop
xchg
leave
mov
push
sbb
in
bound
shlb
cmc
mov
xchg
sbb
cltd
or
sarl
in
orl
into
cmc
jbe
push
popf
dec
inc
ret
or
xchg
or
push
or
iret
mov
hlt
jle
adc
mov
xor
mov
mov
lock
ret
mov
pop
sahf
addr16
fiaddl
mov
fnsave
inc
xchg
rcr
and
mov
mul
imul
mov
pushf
loope
movsb
sbb
aas
xor
subb
jecxz
dec
xor
std
dec
dec
sub
mov
fcompl
sbbb
push
popf
jge
xlat
leave
fmuls
add
jns
pop
push
lahf
mov
lock
sub
repz
mov
out
stos
sarl
mov
pop
add
dec
dec
pop
dec
icebp
jp
ds
add
mov
lret
sbb
push
cmp
orl
inc
sahf
iret
add
int
test
pop
sbb
lahf
adc
inc
fsubp
insl
scas
aad
or
jl
shll
jns
jecxz
pop
xchg
mov
mov
or
and
mov
fdivrs
les
mov
jge
sub
in
or
ret
adc
sbb
jp
cwtl
dec
jecxz
xchg
dec
xchg
imul
xchg
jbe
cmp
jns
repnz
jmp
je
sbbl
scas
call
std
xor
mov
pop
adc
fdivl
dec
mov
and
and
mov
aad
insb
mov
xchg
jb
dec
int
xchg
sub
imul
lods
test
jl
fldcw
push
xor
cmp
mov
ret
movsl
sbb
adc
sub
lcall
push
add
jge
xlat
cltd
add
addl
adc
mov
std
mov
mov
pcmpgtb
xchg
aas
mov
test
xchg
mov
std
and
in
xchg
and
bound
or
mov
add
fcoms
jmp
cmp
mov
js
dec
cmp
scas
arpl
loop
fwait
mov
jnp
jno
into
mov
pop
mov
clc
inc
bound
outsl
es
loope
fbstp
js
jp
aaa
out
roll
stos
or
sub
stos
mov
sbb
bound
xchg
rcl
inc
testb
mov
sti
outsb
mov
mov
call
insb
stc
or
icebp
js
jmp
in
jns
pop
imul
cmp
loop
ja
cli
xchg
lret
out
pop
aad
xor
aad
or
mov
popf
idivl
jle
inc
jns
mov
setbe
push
out
dec
mov
int3
push
out
sbb
dec
sti
movsl
xchg
pusha
lret
rclb
lcall
inc
add
sbb
or
mov
xlat
xor
jecxz
cmpsb
push
cmp
das
inc
dec
mov
aas
rcr
scas
shrl
cmp
sub
lret
adc
js
push
aad
dec
out
pop
fsubl
dec
mov
fs
fisttps
mov
enter
dec
xlat
test
mov
jecxz
std
fiaddl
frstor
out
popf
pop
rcrb
sbb
das
mov
mov
mov
pusha
add
fiaddl
fsubrp
rcrl
push
int3
push
sub
out
loopne
dec
mov
pop
add
sti
jae
pop
std
ljmp
call
push
push
xchg
add
into
pop
pop
add
clc
jb
xchg
mov
mov
dec
lcall
lcall
jno
jb
xchg
test
insl
jecxz
push
decb
mov
mov
loop
imul
sarb
in
sub
adc
outsb
jmp
push
mov
mov
and
xor
pop
add
lret
call
jno
jge
sbb
fs
js
jo
das
or
pop
push
shlb
mov
outsb
hlt
popf
inc
sub
or
notl
sub
inc
pop
cmc
lods
mov
push
xchg
enter
call
sbb
test
adc
and
cld
test
pusha
dec
inc
out
rcll
push
cmp
and
icebp
cmp
push
inc
jmp
orl
mov
mov
jg
add
mov
movsl
xchg
xlat
imul
fcompl
cmpb
cli
and
enter
pop
push
sbb
fdivrs
sbb
out
roll
andb
push
lcall
shll
pusha
and
dec
cmp
sbb
call
pop
fidivl
rolb
decl
int
cmp
xchg
sbbb
and
aad
and
mov
mov
lahf
mov
inc
js
push
lock
add
ss
mov
repz
and
mov
and
imulb
cwtl
jnp
sbb
test
jmp
mov
ds
rorb
or
push
xchg
xchg
xchg
or
add
or
in
out
xchg
sub
fs
fs
lret
fdivs
fistps
xor
mov
xor
scas
dec
aaa
inc
icebp
das
pop
insl
ds
out
sbb
scas
jae
es
pusha
pop
add
lods
hlt
sti
loop
mov
mov
jmp
imul
femms
mov
pop
ja
fdivl
dec
mov
lds
xor
sub
push
orl
adc
fs
sbb
pop
hlt
andl
xchg
pop
pop
lcall
sbb
in
decb
jae
les
frstor
cwtl
add
ljmp
insl
push
xor
lcall
stc
lds
or
jecxz
mov
mov
rcr
imul
ja
popf
jo
stc
pop
cli
les
icebp
push
sarb
add
mov
mov
imul
mov
mov
adc
scas
jecxz
xchg
sarl
mov
pop
jne
loop
repz
movsl
lods
mov
stos
fisubrs
jae
in
pop
mov
fdivrp
outsl
ja
and
mov
scas
shlb
lods
push
stc
lahf
loop
cmpl
inc
and
inc
aas
xchg
push
jl
test
mov
push
dec
jp
ret
xchg
fsubrl
cmp
ds
mov
adc
or
shll
rolb
loopne
and
push
fcomps
dec
xchg
jb
cld
adc
mov
aam
dec
cmpsb
mov
jmp
stos
add
call
sbb
loop
jecxz
cmp
sahf
lock
xchg
mov
lahf
cmpsb
into
push
sub
inc
jae
dec
xor
push
xchg
adc
push
adc
lock
sbbl
insl
out
add
or
sar
inc
jo
lahf
popf
stos
ret
add
cli
cmp
dec
testb
jns
outsb
mov
mov
scas
inc
mov
aas
add
and
inc
cmpsb
dec
dec
xor
sti
mov
fs
mov
push
cmp
pop
sbb
push
inc
orb
es
dec
jo
xorl
sahf
jg
push
push
add
sbb
sub
out
push
inc
nop
pop
push
sahf
mov
inc
hlt
mov
rol
or
pop
mov
test
jmp
xchg
or
jecxz
jle
insb
add
sub
orl
cmp
sub
ficoml
mov
orb
push
inc
sub
pop
sbb
pop
xchg
dec
lods
xor
jnp
leave
out
xor
mov
push
mov
or
add
repz
js
ret
hlt
ret
xchg
jb
dec
xchg
jg
mov
cmpsl
test
mov
testb
mov
pop
push
push
dec
jle
sbb
lret
imul
ret
fxch
inc
sbb
or
mov
iret
outsb
mov
xchg
dec
enter
cmp
nop
or
inc
jl
mov
pop
cmpb
add
shll
xchg
hlt
sbb
out
scas
sahf
sub
adc
imul
pop
daa
dec
pop
popa
scas
subl
test
leave
dec
sarb
fdivrl
pop
add
or
adc
mov
lahf
inc
and
cmp
inc
push
popf
mov
out
call
xchg
and
pop
cmp
mov
out
je
add
out
jno
cmp
dec
xchg
mov
and
decl
js
and
loop
jb
and
xchg
dec
sahf
jne
mov
sbb
mov
jp
repnz
mov
push
aam
pop
stos
enter
pop
stos
and
in
aam
push
in
dec
test
sar
mov
dec
dec
pop
push
jg
shll
sarl
es
pop
call
mov
sti
loope
lahf
out
std
ss
mov
mov
pusha
stos
loopne
dec
jge
sarl
sarl
hlt
dec
cwtl
cmc
aad
fisubs
push
mov
jecxz
mov
enter
mov
adc
or
int
stos
xchg
jl
add
enterw
sub
or
push
xchg
cs
in
adcl
loop
xor
add
test
dec
call
cmpsb
jnp
outsb
sbb
stc
mov
call
xchg
test
std
sbb
sbb
dec
xchg
and
sbb
stos
loope
or
push
mov
loope
mov
jge
inc
jo
cmp
jge
fdivrs
sub
aam
or
inc
clc
not
data16
dec
icebp
movsl
movsl
ret
cmp
fld
lahf
cmp
and
movaps
jns
push
push
mov
call
add
repz
xchg
pop
fldt
adc
das
xchg
scas
push
add
nop
dec
sbb
jl
imul
aaa
aad
or
and
ret
mov
pop
mov
adc
in
xchg
inc
xor
rolb
mov
add
loope
inc
xor
out
sub
adc
cltd
mov
inc
aad
xchg
leave
cmp
mov
lods
or
shrl
fstl
sbb
loop
adc
int3
push
test
fimull
mov
cmc
dec
push
pop
ljmp
inc
push
inc
insl
xor
repz
sub
pop
test
test
pushf
in
fisubs
sahf
test
dec
inc
int3
mov
icebp
dec
pop
out
or
sbb
iret
pop
rcr
or
mov
int3
sub
push
push
mov
push
mov
icebp
call
pop
insb
lea
inc
sbb
scas
js
mov
mov
or
mov
aas
mov
stos
cmp
push
mov
pushf
outsl
adc
push
push
or
je
nop
sbb
push
mov
rolb
ja
xchg
sub
aas
jnp
popa
jo
add
jmp
and
add
clc
jle
jns
aad
mov
mov
test
cmc
out
inc
jae
xchg
mov
pop
mov
sub
int
mov
push
jbe
aas
push
ljmp
push
jmpw
xchg
sbb
xor
mov
xor
jbe
adc
outsb
jp
subb
stc
dec
pop
test
aas
stc
fildll
dec
or
lret
in
aas
push
pop
out
pop
adc
mov
or
imul
lock
into
push
or
xchg
in
mov
and
jl
je
lock
inc
cwtl
adc
hlt
mov
xchg
jnp
orb
mov
fisttps
ljmp
es
and
pmaddwd
js
adc
popa
in
pushf
pop
push
bound
or
fiadds
into
lods
sub
int3
shl
jl
je
and
jns
adc
adc
mov
mov
ret
cmc
shrl
mov
stos
jae
dec
hlt
inc
xchg
cmp
xor
in
int
fidivl
mov
cmp
imul
ja
lret
and
jmp
mov
daa
pop
jnp
jne
movsb
xor
out
rcll
inc
inc
jae
dec
je
imul
daa
mov
and
pop
pusha
ret
fstpt
xchg
aaa
pop
jae
cs
loopne
pop
xchg
or
jne
jg
aas
push
dec
jp
insb
in
pop
sahf
in
xchg
ret
int3
mov
out
dec
sub
out
ret
push
xchg
insl
dec
and
ja
lods
mov
test
decl
mov
jmp
outsb
jb
xchg
stc
sbb
loopne
xchg
jp
sub
push
out
lock
or
pop
push
loop
push
in
cmpsb
adc
jp
cmpsl
xor
push
and
xchg
les
pushl
popf
inc
inc
mov
sbb
fldt
cltd
mov
cltd
jnp
in
sbb
pop
repnz
or
test
push
jnp
adc
dec
pop
out
jbe
fisubs
and
fldl
sub
scas
mov
mov
jecxz
test
mov
int3
cmp
movsb
cld
ja
add
add
lea
pop
es
sub
pop
int
cli
push
push
xor
cmp
add
push
inc
out
adc
fisttps
xchg
or
pushf
gs
cmp
cmp
mov
aad
hlt
imul
jns
cmp
call
and
das
mov
gs
jg
push
jecxz
fiaddl
cld
and
fnstenv
mov
movsl
mov
lock
xor
xor
pop
push
int
jnp
out
xchg
pop
jo
out
dec
jecxz
jne
jo
jnp
cli
jp
out
mov
imul
lods
pusha
adc
scas
mov
hlt
dec
fadds
adc
cmpsb
ss
jl
fldcw
jge
in
out
mov
inc
sbb
xchg
mov
cmp
cmp
xor
lods
jo
xor
repz
dec
mov
mov
imull
std
jne
mov
push
cmp
jb
jbe
pop
aam
lret
popf
sbb
lea
adc
rorb
xlat
test
jg
in
jns
inc
ljmp
into
adc
push
mov
outsb
test
pop
nop
and
cmp
mov
lods
test
movsb
les
fdivr
mov
loopne
fwait
jo
outsl
lods
mov
add
mov
stos
inc
push
icebp
xchg
int
call
dec
sbb
movsl
repz
xchg
dec
jbe
and
mov
xor
lea
mov
mull
cmp
cltd
mov
pop
es
inc
dec
pop
xchg
mov
in
shrb
adc
stos
xor
jle
cmp
stc
push
mov
dec
addl
ljmp
js
fsubr
sbb
ss
pusha
faddp
add
add
loop
popl
fldt
pop
mov
les
scas
jp
dec
adc
icebp
mov
aas
lods
ficoms
rorl
ljmp
jno
and
scas
mov
repnz
ret
push
jb
hlt
mov
test
rorl
or
push
jb
mov
dec
mull
lods
xchg
insl
nop
xchg
iret
test
les
xchg
push
mov
add
inc
mov
mov
in
rcll
std
in
mov
xchg
mov
loop
lds
xchg
xor
xor
insl
jmp
in
inc
ss
out
stos
xchg
xor
jns
fimull
or
insl
adc
daa
mov
in
mov
arpl
push
sub
lock
xlat
add
push
insb
daa
push
dec
insl
xchg
sar
pusha
jb
xchg
outsb
enter
or
out
xor
add
rorb
fs
dec
push
push
xor
lock
enter
fisttpl
and
lods
ss
mov
insl
xchg
test
sbbb
and
lock
xchg
mov
jne
scas
int3
shlb
pop
shll
push
pop
popf
loop
add
add
dec
jmp
sub
movsb
ss
or
mov
pushf
mov
neg
aas
test
mov
pusha
stc
rcrl
scas
push
imul
jns
stos
jmp
mov
pop
fcomi
xor
popa
mov
and
jge
subb
adc
into
stos
push
inc
aas
mov
aam
xchg
and
inc
imul
leave
insb
xor
push
cmp
or
jge
sub
push
dec
sub
in
out
sub
dec
mov
jecxz
fstps
mov
or
test
test
pop
pop
icebp
mov
mov
js
xor
xor
and
movsb
lret
int3
or
pop
pop
jns
popa
mov
divl
in
xchg
clc
cmc
jmp
and
cmp
test
jne
addb
xchg
and
jecxz
jo
push
sbb
mov
mov
cmp
loopne
pop
ss
cwtl
dec
fscale
dec
cmp
call
sbb
xchg
fwait
jbe
mov
or
cmp
es
jo
sti
and
test
ret
sub
scas
iret
lahf
adc
mov
mov
jg
cmp
add
sbb
mov
rcrb
sti
cmp
pop
mov
pop
outsl
inc
data16
mov
push
push
loope
and
ds
dec
sub
mov
lcall
sub
and
push
adc
sub
and
imul
inc
icebp
ss
js
jmp
push
push
dec
dec
pop
pop
outsb
std
loop
mov
xor
cltd
sahf
mov
rorl
fwait
adc
cmpl
cli
pop
ret
mov
push
fistl
push
in
push
fisubl
xlat
push
pop
pop
jno
insl
loopne
movsl
inc
insb
ret
notb
pop
jb
dec
out
pop
xlat
clc
sahf
in
push
or
jbe
jg
ficomps
lods
popf
pop
int3
dec
xchg
xchg
repz
cli
xchg
jp
mov
inc
lds
shll
add
fdivrs
xchg
daa
and
in
outsl
and
in
mov
mov
lods
popf
pop
fisubl
lret
shlb
xchg
hlt
shlb
pop
sti
mov
or
sbb
push
movsb
rcl
int3
rorl
fs
xchg
sbb
inc
and
lock
test
pusha
imull
xor
aam
stc
stos
sbb
inc
shll
jbe
and
cmp
test
cli
ds
scas
push
sbb
jno
xchg
adc
fsts
ja
ret
mov
icebp
in
mov
dec
sbb
fs
fcoms
sar
pop
faddp
add
scas
adc
in
mov
push
ret
cmp
mov
inc
lds
push
and
mov
imul
dec
jnp
call
sub
adc
pop
mov
loope
insl
push
addb
fwait
cmc
pop
and
inc
mov
outsb
mov
and
sbb
shr
rcr
adc
pop
jne
lcall
mov
lods
mov
lret
fcoml
fcmovne
push
enter
leave
xor
fstpt
lret
and
jo
xor
ffreep
movsb
xchg
ljmp
xchg
adc
fsubrs
xchg
cmp
jl
or
cltd
dec
jne
pop
insl
jecxz
popf
mov
jne
and
hlt
into
add
stos
fstpl
inc
cmpsb
push
adc
xchg
or
shrl
jg
cmpsl
add
add
jmp
loopne
cmp
sub
cmc
push
jp
xor
push
dec
movsb
std
add
adc
rolb
ss
mov
push
and
loope
mov
sbb
push
aad
inc
je
xchg
push
mov
jecxz
mov
cmp
jo
inc
inc
mov
test
ss
andl
cmc
and
cmp
push
aas
xchg
pop
push
loopne
dec
scas
push
xor
push
sbb
xchg
sahf
xchg
push
cmp
mov
xchg
jge
andl
mull
out
pusha
mov
incb
pop
push
cmpsl
inc
je
insl
inc
mov
scas
repz
pushl
jecxz
adc
sbb
adc
mov
repnz
hlt
add
mov
fwait
cltd
cmp
cwtd
adc
cli
push
mov
pop
pushf
pop
popf
sbb
cmp
sub
sbb
xor
sarl
mov
jno
cmp
xchg
ja
repnz
and
mov
pop
in
scas
and
xor
in
mov
into
xchg
stc
iret
in
push
mov
adc
push
mov
and
sahf
nopl
fsubr
inc
sbb
pop
jecxz
jbe
scas
xchg
and
and
stos
inc
add
jle
cmp
mov
push
and
cwtl
jo
insb
add
mov
stc
cwtl
sbb
mov
scas
inc
mov
leave
repnz
es
pop
add
clc
push
sub
lea
mov
in
pop
rclb
mov
fsubrs
ret
xor
pushf
popf
test
lds
fdivr
mov
sahf
mov
cwtl
or
push
push
xor
cmp
cmc
daa
out
lret
sub
inc
into
xadd
pop
lcall
or
fistl
push
pop
inc
mov
cmp
xchg
inc
jno
sahf
rclb
or
test
sbbl
push
into
cmp
pop
aad
adc
sub
insb
stc
mov
mov
in
pop
cs
or
sub
leave
ficoml
divl
and
mov
sbb
pop
sub
pushf
jecxz
inc
lock
test
stc
mov
and
mov
movsb
test
ds
mov
mov
adc
loop
adc
jno
ret
mov
push
xor
xchg
mov
outsl
les
sub
lods
sub
pop
decb
fwait
sub
mov
inc
pop
cmp
cmpsl
test
jp
popa
cmpsb
xor
stc
and
cmp
pop
dec
outsl
fnstenv
hlt
es
mov
lret
movsb
pop
add
push
int3
push
fidivs
pop
sbb
add
sarl
push
or
lods
fs
and
push
xor
mov
jnp
imul
mov
xor
adc
jb
pop
negl
rep
push
or
ret
jecxz
sbb
sub
std
mov
aam
sbb
popf
pop
xor
daa
test
mov
jmp
je
lock
icebp
xor
jmp
mov
bound
lods
bound
pop
push
sub
mov
imul
sbb
adc
xlat
inc
cmc
mov
or
ljmp
push
lea
mov
mov
inc
movsl
add
icebp
rcrl
mov
push
xor
rcrb
fstpt
mov
popf
sbb
bound
xchg
sbb
in
push
popa
and
and
daa
arpl
xchg
clc
das
outsb
decl
sub
xchg
loop
and
push
out
mov
lds
pop
pop
rolb
pop
jg
fdivrl
mulb
mov
adc
lea
stos
mov
in
aam
das
test
dec
sahf
fnstenv
daa
push
mov
hlt
pop
ret
outsl
cmp
out
xchg
loope
mov
outsl
jbe
lret
adc
les
shrl
sbb
add
popa
popf
test
int3
cmp
scas
add
jp
push
dec
test
fsubl
loope
call
mov
iret
sbb
or
inc
fnstsw
shlb
sahf
clc
inc
or
test
js
adc
in
int
push
rcll
imul
or
fdivrl
inc
iret
adc
arpl
add
loope
xor
inc
jg
fsts
sbb
incb
dec
jno
into
xor
xchg
mov
add
pusha
mov
outsl
lret
jne
add
pop
push
stc
xor
jmp
jns
adc
pop
cmpsb
jae
fidivl
fs
xchg
test
shll
cmp
cwtl
mov
dec
xchg
add
xchg
xor
out
mov
jge
lock
data16
fiaddl
mov
lods
dec
inc
inc
std
mov
movsb
shrd
push
mov
jnp
lds
push
out
xchg
mov
mov
sbb
stos
dec
xchg
fsubl
pop
and
fstl
fildll
xchg
shll
push
iret
je
sarb
xchg
push
outsb
in
icebp
scas
jae
test
push
and
hlt
mov
lds
push
addr16
add
loope
jbe
ss
iret
push
mov
cld
ficompl
out
mov
xor
xchg
pop
sbb
lcall
pop
das
mov
pop
push
and
jno
lds
data16
aad
and
xchg
xlat
in
xorl
decb
jne
jecxz
adc
inc
cmp
adc
dec
ds
test
pusha
pop
arpl
mov
int
loope
push
adc
stos
pop
mov
aaa
pop
lcall
push
xchg
punpcklbw
movsb
mov
push
push
adc
mov
fidivrl
ret
mov
push
aam
sub
mov
sub
xor
daa
jmp
pop
pop
inc
sti
cmc
test
jb
inc
je
sub
pop
rcrb
jg
fdivp
xchg
dec
adc
sub
adc
push
mov
fcoms
add
jae
mov
or
xchg
push
loopne
out
add
mov
adc
lahf
jno
xchg
pop
lcall
mov
fsts
jbe
or
enter
pusha
adc
nop
sbb
push
fstpl
mov
dec
push
daa
fcmovnbe
or
xor
jmp
push
in
mov
jecxz
inc
push
inc
ljmp
push
mov
jp
ret
loope
sbb
lcall
xchg
xor
cmc
mov
xchg
or
orl
pop
add
xchg
pop
adc
xabort
icebp
adc
mov
xchg
stc
mov
mov
ds
adc
int
cmpsl
cmpsl
fsubs
mov
jmp
lods
mov
das
dec
xchg
lcall
ret
dec
cmp
push
aaa
dec
andb
mov
mov
nop
lret
pop
in
jnp
arpl
stc
stos
inc
pop
adc
inc
lods
cmpb
fisubl
out
pop
lea
pusha
mov
pop
jae
push
inc
movsl
xor
into
shll
jo
inc
inc
movsb
pushf
inc
andb
ss
arpl
sbb
cmp
popa
sbb
mov
mov
imul
inc
sbb
jecxz
xlat
sbb
popf
pusha
repnz
cmp
lds
or
pop
and
xchg
testb
scas
push
test
adc
lret
sub
mov
jl
mov
add
lahf
pop
addl
jle
rclb
sbb
push
push
sbb
outsl
mov
imul
dec
jecxz
pusha
div
stc
push
lds
ja
mov
fstpl
adc
into
enter
mov
mov
iret
ja
push
stc
inc
inc
inc
add
aam
test
cmp
pop
jnp
aaa
mov
push
adc
mov
pusha
aaa
jbe
add
fldl
xchg
stc
in
mov
pop
pop
xchg
dec
ss
push
mov
icebp
movsb
sbb
ljmp
mov
sub
adc
aad
mov
inc
dec
mov
push
push
mov
pop
cltd
sub
push
mov
jb
pusha
cld
jnp
dec
add
adc
test
add
add
pop
sub
rclb
xchg
jecxz
xor
aaa
jbe
mov
rclb
mov
pushf
stc
adcb
pop
mov
pop
mov
xchg
mov
mov
arpl
in
fwait
mov
pop
push
pusha
cwtl
jge
mov
add
dec
push
jecxz
lahf
orb
pop
shl
aas
mov
enter
call
hlt
test
jle
fbstp
mov
xor
mov
ljmp
mov
push
mov
push
adc
sbb
push
cmp
push
cmp
shrb
fdivs
lods
ret
jmp
fistpll
dec
divb
sbb
push
sub
lret
sbb
adc
adc
mov
cwtl
and
dec
sbb
or
out
leave
adc
add
adcl
mov
pinsrw
int
cmpsb
add
or
cmpsl
xor
mov
inc
repz
pusha
jbe
mov
xchg
daa
push
in
lret
pop
adc
cmc
cmp
sub
dec
adc
and
cmp
andb
mov
push
jl
jl
leave
inc
add
lcall
and
and
idiv
mov
cmp
mov
and
pop
adc
lret
xlat
scas
jg
xchg
pop
pop
andb
int3
adc
push
push
pop
push
fdivl
cmc
std
inc
lret
daa
add
sbb
pushf
test
lds
pop
inc
adc
mov
push
into
and
mov
sti
mov
cmp
push
mov
test
imul
subb
inc
fcomp
insb
jb
loope
cmp
rorl
insb
into
inc
mov
cli
int3
fistpl
leave
jb
cli
popa
adc
stc
in
in
je
jg
out
add
push
dec
lock
pop
and
adc
test
sub
stos
xchg
fdivs
pusha
call
mov
movsb
clc
jo
leave
add
gs
std
mov
xchg
adc
popa
inc
push
rorl
out
cmp
cli
test
mov
xor
dec
mov
xor
fistpl
int3
jmp
and
ds
int3
out
and
out
dec
push
sahf
ficoml
pop
ja
fs
sub
xchg
cmpsb
jmp
jae,pt
adc
push
jnp
ret
adc
clc
push
pop
cs
int3
arpl
cmpsb
jbe,pt
sub
das
dec
add
adc
data16
andb
push
sbb
call
jl
cmp
inc
popf
jnp
lcall
mov
orl
je
mov
rcrl
sbb
arpl
jle
mov
xchg
aas
pop
pop
jmp
jg
inc
inc
mov
sub
bnd
mov
into
or
push
sahf
jae
in
mov
jl
popa
jne
jb
or
loope
adc
insb
push
inc
sarb
adc
cmovae
test
in
rol
lret
cmp
sarb
ds
sub
lea
hlt
jb
out
jmp
mov
push
push
mov
dec
dec
cwtl
aam
pop
inc
jb
xchg
mov
mov
outsb
hlt
or
lcall
mov
mov
pusha
adc
ss
push
icebp
loop
adc
loopne
inc
add
xor
adc
fwait
aad
mov
jmp
stos
je
mov
data16
nop
mov
outsb
or
sbb
lea
out
dec
mov
cmpsb
jle
stos
sub
lahf
insb
aaa
adc
in
add
mov
cmp
test
test
rcrb
push
rorl
lea
xchg
mov
test
je
into
sub
sub
aas
and
adc
or
or
jg
jo
xlat
xor
pop
or
pusha
mov
mov
push
out
pusha
jbe
imul
mov
sub
xchg
sahf
mov
sbb
rorb
mov
lcall
pop
ds
pop
out
mov
dec
ret
inc
mov
mov
jg
add
in
push
add
rcrb
adc
dec
pop
insb
dec
and
mov
dec
arpl
rcrl
idiv
jle
scas
dec
arpl
push
mov
jns
cmp
shll
jb
rcrl
subl
jno
add
int
stc
test
and
fcomip
add
add
jmp
adc
jne
movsb
das
adc
aas
add
leave
adc
xchg
jmp
pop
dec
push
mov
orl
and
fpatan
shll
je
fstpt
icebp
cmp
inc
in
xchg
inc
shrl
ret
jno
std
or
ror
jle
fistps
jp
and
je
scas
jg
sti
inc
cs
dec
jg
push
pop
mov
aas
out
shlb
imul
xchg
out
leave
mov
jg
ret
cmpsb
inc
fnstenv
dec
pop
add
cmc
mov
push
out
sbb
add
jecxz
mov
mov
adc
push
daa
xchg
adc
clc
jae
add
mov
sbb
movsb
cs
nop
sbb
and
bound
mov
sti
mov
into
mov
push
cmpsb
insl
xor
sbb
clc
jge
xchg
mov
jbe
fdivrl
cltd
mov
jmp
dec
imul
bound
pop
icebp
icebp
push
js
addr16
xor
pop
aad
pushf
inc
ljmp
mov
jbe
dec
inc
cmp
in
or
add
xor
push
pop
adc
push
pushf
sarl
mov
lahf
test
pop
movsl
add
cmp
push
fstp
dec
or
lock
add
insl
and
mov
xor
inc
jo
arpl
ror
jno
stos
jne
movsb
int
cmpsb
jmp
das
cs
sbb
repz
mov
and
test
xchg
insl
xchg
insb
jae
mov
jne
ret
dec
fstpt
mov
sub
sub
add
orl
es
stos
fisubrs
fsubp
add
and
pop
enter
mov
xchg
movaps
sub
clc
enter
sbb
jg
mov
and
or
mov
js
fistl
fidivs
repnz
aad
cmp
add
mov
mov
inc
sub
sub
mov
gs
sub
mov
gs
and
push
push
cwtl
notl
lock
adc
stos
sub
dec
fsubs
inc
adc
sbb
fidivs
movsb
dec
inc
aad
mov
adc
pop
lods
pop
adc
pop
xlat
sbbb
mov
dec
add
sbb
ret
xchg
fnstsw
js
jbe
mov
jo
das
popf
out
dec
rcll
mov
mov
mov
jnp
xchg
shl
xchg
xchg
jle
jle
mov
pop
js
pushf
jae
gs
push
cmp
dec
lods
subl
pop
shrl
bound
dec
pushf
mov
hlt
and
sbb
mov
jg
insb
in
icebp
stos
stc
out
push
stc
jns
jge
or
or
loopne
lahf
enter
aam
sbb
pop
push
adc
pop
lock
lcall
loope
cmp
or
movsb
fstpt
and
sti
push
mov
fwait
test
xchg
sub
loop
leave
jg
xchg
xor
mov
mov
jno
xchg
cwtl
int
inc
jl
repz
mov
pop
aaa
aas
repnz
sbb
ja
inc
lods
sub
xor
call
rorl
fisttpl
sub
jne
in
push
xor
push
add
lds
cs
popa
push
and
into
adc
sbb
xchg
mov
mov
lods
jns
mov
mov
mov
inc
repnz
imul
stos
cmc
mov
sub
int
das
pop
push
mov
test
in
and
sbb
cmp
mov
lds
lods
and
cmp
loop
popa
ffree
sbb
jno
movsb
iret
mov
push
fiaddl
push
insl
mov
xor
pusha
test
sub
mov
add
and
mov
addr16
incl
sub
jmp
sarl
jmp
push
mov
lret
shll
add
loopne
mov
inc
adc
jb
xchg
inc
sbb
decl
je
and
pop
rcr
pushf
mov
aam
pop
mov
dec
pop
xor
sahf
loope
adc
jae
aam
dec
cmp
jg
pop
xchg
push
mov
sbb
cmc
mov
loope
mov
adc
inc
sbb
jmp
mov
xchg
push
js
sbb
jbe,pt
mov
rcrl
mov
mov
mov
xor
adc
movsl
filds
jnp
sahf
mov
cmpsb
insb
dec
adc
or
cmp
shll
repz
pop
mov
push
lea
mov
xchg
push
test
mov
popl
push
jb
gs
sbb
scas
popf
xor
inc
sahf
rcrb
or
xchg
into
and
cmpsb
iret
call
jg
mov
pusha
dec
fiaddl
fisubrs
or
xchg
inc
inc
test
jb
inc
sbb
jge
cmpb
mov
ret
add
mov
inc
pavgb
mov
jne
test
mov
neg
cmp
cli
dec
in
les
adc
test
mov
insl
sbb
je
ret
xchg
mov
add
inc
pop
xor
mov
mov
int3
xchg
in
lods
inc
jge
jecxz
les
data16
out
xchg
fisubrl
jnp
dec
and
inc
cmp
cld
scas
jnp
pushf
syscall
jmp
xchg
adc
add
mov
push
jo
fsubrl
mov
xor
lds
xor
or
dec
sub
rcll
scas
inc
mov
lds
adc
cmp
mov
jl
sub
mov
andb
jmp
fisubl
push
cs
test
add
cltd
and
mov
jae
pop
adc
adc
imul
jle
sub
mov
sub
xchg
fsubl
bswap
sbb
sub
mov
loopne
addl
in
xchg
inc
call
sbb
idivb
sub
jns
cmp
add
je
mov
mov
test
dec
mov
adc
xor
imul
fsubl
sahf
scas
mov
and
cmpsb
dec
push
sub
sbb
push
enter
dec
sarb
sahf
test
imul
pop
les
in
out
arpl
xchg
popa
jle
pop
and
cmpsl
lcall
mov
cmp
mov
scas
dec
jmp
nop
cmp
push
pop
std
add
push
inc
mov
adc
xor
xchg
inc
out
jge
push
gs
stc
movsb
shll
add
inc
leave
push
mov
push
dec
leave
aas
ficompl
pop
xchg
xor
push
jns
fistl
cli
pop
inc
add
mov
mov
jo
jne
cmp
ljmp
sbb
daa
cmp
and
idivl
js
mov
adc
movb
inc
mov
push
xor
fs
mov
jno
jno
bound
inc
dec
sbb
adc
sub
shlb
mov
enter
mov
pop
lock
pop
dec
sbb
shll
aad
or
imul
pop
or
mov
xor
mov
imul
inc
mov
movsl
mov
out
scas
dec
jp
sub
fdivrl
test
mov
movsl
cmc
lods
mov
pusha
pushf
dec
sub
cmp
sbb
jne
mov
add
lcall
sti
fisttpll
push
aas
mov
jbe
or
and
test
popa
xor
lea
mov
or
insl
adc
sbb
mov
dec
inc
jmp
fs
xlat
inc
out
daa
imulb
lahf
sub
popa
arpl
push
idivl
imul
in
popf
test
ljmp
pop
aas
mov
pop
popl
lret
and
cmp
push
pop
sbb
dec
fwait
mov
and
les
mov
push
adc
imul
out
popf
pop
mov
fucomp
push
jb
mov
je
in
aad
test
das
push
push
outsl
mov
cmp
push
adc
pop
in
cmp
pop
pop
sub
lock
push
adc
cmp
cmpsb
xchg
in
mov
fwait
cmpsb
test
lcall
dec
mov
lock
and
push
int3
mov
aad
ret
repnz
popa
mov
scas
pop
lods
mov
push
setne
movsb
mov
mov
lods
sbb
jl
add
and
jns
ss
cwtl
insb
sbb
push
std
inc
xchg
call
xor
imul
movsb
aam
push
add
mov
nop
cs
fadd
subb
push
movsb
std
xchg
mov
call
es
dec
xchg
push
gs
outsl
in
fsub
and
cmpsl
adc
jns
mov
lret
insb
pusha
es
in
mov
fsts
push
aam
add
sahf
cmp
mov
test
mov
ret
sub
decb
cli
lea
or
ret
stos
cmp
mov
cmp
aam
nop
sbb
xor
pop
scas
xor
pop
ja
push
add
push
pusha
mov
jp
sbb
sub
push
rcll
std
push
loope
cmpsl
push
mov
mov
repnz
xchg
mov
push
sub
or
add
or
cmpsb
test
adc
adc
andb
sub
xchg
sahf
mov
hlt
push
cmp
mov
mov
data16
sub
in
pop
sbb
cmpsb
mov
mov
push
cmp
inc
xchg
xchg
fnstenv
mov
ss
loopne
outsl
aas
ss
mov
xor
xor
xchg
cmp
aaa
add
dec
xchg
loopne,pt
test
cmpsl
adc
mov
push
lret
rorb
sbb
rcrl
jae
or
sub
sahf
clc
popa
xchg
inc
lods
ret
mov
xchg
push
sub
mov
in
jae
dec
testb
mov
mov
jbe
jp
mov
mov
hlt
into
fpatan
mov
xorl
aad
add
adc
xchg
rorb
dec
je
addr16
cmpl
das
mov
lcall
xor
and
add
mov
out
test
jl
cwtl
mov
fdivs
in
shl
mov
orb
or
pop
mov
cmpl
adc
pop
mull
dec
sahf
das
test
jmp
jno
sub
fldenv
sahf
mov
lret
mov
pop
push
ficomps
adc
outsb
je
in
push
and
lds
mov
mov
pop
sahf
subl
push
call
cmp
push
shlb
rcr
loope
mov
mov
cmp
rclb
jge
push
lret
xor
js,pt
lods
jge
and
sahf
mov
std
adc
mov
mov
xchg
outsl
js
nop
ds
mov
pop
sbb
jl
daa
mov
fdivp
bound
test
sub
mov
xchg
idivl
xchg
mov
test
sub
dec
xlat
adc
lods
in
jp
jno
aaa
add
je
rcll
xchg
jge
and
scas
push
push
imul
inc
cli
xchg
pop
std
shlb
int3
add
mov
jecxz
out
jle
mov
xchg
adc
push
leave
daa
xlat
pusha
roll
icebp
inc
xor
mov
sti
dec
je
pop
xchg
or
push
call
popf
jmp
push
push
jb
js
or
mov
add
cmc
and
cmp
sar
dec
aad
es
aad
outsl
inc
and
pushf
push
lock
std
jecxz
test
mov
xchg
ret
gs
es
int
sub
xor
add
push
bound
or
ss
mov
js
cmpsl
add
out
adc
hlt
movb
xchg
adc
jne
xor
dec
cmp
scas
jmp
fs
cmpsl
xchg
lahf
push
nop
xchg
mov
cmp
pop
aad
aam
or
enter
enter
jns
stc
xor
inc
inc
jae
sti
add
mov
xor
adc
cltd
pop
call
mov
lods
mov
pusha
jp
mov
lods
int
and
ss
cmp
icebp
mov
insl
and
add
xchg
sub
mov
cmc
xchg
lret
andb
sbb
jb
mov
ror
cmp
sub
aad
scas
lcall
scas
cli
ret
mov
icebp
xor
cwtl
cmc
sub
push
pop
sbb
into
je
negl
dec
inc
sbb
sub
or
xor
int
sbb
mov
add
loope
push
ror
sbb
call
loope
cwtl
dec
jb
shll
shlb
mov
aas
xlat
sbbb
xchg
lods
je
sub
sub
push
cmc
sub
fidivl
pop
and
into
mov
jp
pop
add
jnp
adc
adc
xor
mov
cld
push
aaa
in
jnp
push
cmp
fmull
leave
adc
fs
jge
out
loope
cltd
out
sub
mov
xchg
mov
aas
mov
sub
push
imul
and
adc
pop
push
aam
fidivs
mov
push
and
pop
imul
xlat
lods
mov
inc
jecxz
test
xor
add
jp
mov
inc
pushf
loopne
rcll
xchg
sub
mov
out
pop
arpl
xchg
mov
rol
jmp
out
pop
in
sub
mov
clc
dec
adc
idivb
mov
push
xor
mov
in
mov
movsl
repnz
nop
ret
enter
lods
pop
fs
and
inc
out
add
mov
xchg
lods
push
xchg
iret
add
enter
lock
fcoms
xchg
jle
mov
inc
and
dec
ds
test
xor
add
leave
cmp
cmp
adc
es
sar
mov
jecxz
movsb
xlat
ds
scas
cmp
jmp
or
lea
add
jecxz
pop
sub
sti
lret
fidivs
pop
dec
push
sbb
mov
lock
xor
xchg
jmp
ret
cmpsb
xchg
call
mov
iret
mov
rcrb
lods
adc
mov
scas
sub
sti
fwait
mov
add
mov
fisubs
cld
shrb
insl
fsts
das
dec
mov
or
pop
leave
sbb
pop
hlt
pop
sbb
lcall
shl
scas
dec
lods
mov
mov
jmp
fldt
add
movb
test
jl
push
pop
adc
mov
push
add
test
cli
das
xor
test
mov
sbb
les
js
push
mov
add
arpl
adc
fcoml
adc
dec
and
dec
inc
ja
xchg
sub
push
mov
loope
test
cltd
inc
mov
or
cld
lods
leave
push
dec
mov
mov
shl
rorl
mov
add
or
ret
xlat
cmc
push
jmp
aas
and
pusha
fcoms
mov
cli
outsl
arpl
pop
das
pop
lcall
jae,pn
in
enter
ljmp
inc
cmp
fmulp
mov
ret
out
ds
or
dec
dec
jmp
stos
divb
shlb
adc
dec
icebp
jae
pop
adc
jmp
cmovl
mov
incl
mov
aaa
call
repnz
sub
jo
dec
pop
cli
jmp
add
inc
mov
arpl
cmp
fdivrl
mov
xchg
jae
inc
cmp
or
std
test
jns
push
shlb
outsl
cmpsb
cs
adc
mov
out
pop
ss
out
xor
stos
arpl
lahf
bound
dec
adc
sub
sbb
shlb
hlt
aad
xor
jo
pop
cmp
cmp
test
sub
push
sbb
adc
lds
into
test
hlt
add
inc
xor
hlt
roll
xchg
xor
test
push
inc
aad
jp
push
movsb
dec
mov
rcrl
jnp
imul
aad
das
rcr
cwtl
push
xchg
push
inc
pop
leave
push
xor
jle
pop
pop
push
jnp
mov
cwtl
mov
insb
cld
push
pop
gs
cwtl
lds
fdivs
push
inc
push
outsl
push
jae
js
cmp
fbld
or
push
test
xlat
ss
daa
xor
pop
add
sub
inc
int
out
push
sub
dec
xlat
cmp
and
fstpt
lock
mov
sbb
fwait
xchg
hlt
pop
adc
shll
mov
fldcw
idiv
mov
dec
shll
or
mov
add
imul
stos
dec
sar
repz
or
or
lahf
mov
lods
and
lahf
push
sarb
xchg
movsl
cmp
xchg
pop
addr16
adc
mov
test
adcb
and
push
imul
fadd
mov
popf
roll
insb
rorl
shlb
and
dec
movsb
lds
inc
stos
idivl
popf
js
mov
lock
pop
dec
popf
jns
cwtl
xor
loop
push
outsb
gs
pushf
scas
pop
mov
int
sbb
rclb
fisttpl
stos
shlb
arpl
lds
sbb
push
add
xchg
xchg
mov
inc
add
dec
aaa
std
pop
ss
adc
repz
push
iret
jbe
push
jnp
mov
push
jmp
stos
adc
pushf
in
cld
pop
mov
add
xchg
dec
or
pushf
sub
ss
jbe
adc
or
push
nop
stc
movb
cmpsl
push
test
sbb
scas
je
adc
xor
enter
js
cltd
mov
cmp
rcrl
rorb
mov
fsubr
adc
pop
jl
les
xchg
dec
inc
jp
imul
int
push
call
flds
dec
cwtl
sub
mov
push
pop
int
push
pusha
jecxz
pop
xor
cli
jo
int
not
dec
or
test
test
jno
jg
bound
cwtl
lds
cs
pop
pop
aas
repz
or
ja
jle
jns
inc
adc
shlb
mov
jne
mov
xchg
mov
sti
or
in
and
dec
sbb
aad
mov
leave
mov
cmp
mov
add
fstpt
popf
sti
pusha
push
add
dec
or
xchg
xchg
mov
stos
and
xchg
rorb
mov
stos
ljmp
push
push
cmp
mul
xchg
pop
subl
push
jmp
xchg
and
pop
popa
test
inc
sarl
and
mov
xchg
gs
vpsubsb
mov
popl
pushf
xchg
jp
in
sti
jmp
test
push
fisttpl
ds
mov
in
fwait
add
std
outsl
jmp
lea
aad
push
in
outsb
pop
jo
push
sub
iret
decb
ljmp
lcall
movsl
scas
lods
je
loopne
dec
or
or
outsl
mov
fldcw
dec
enter
adc
cltd
add
decb
hlt
add
pop
xor
subl
jmp
jae
nop
and
test
addr16
leave
aaa
add
xor
lahf
lret
mov
mov
cmp
not
or
cli
or
mov
das
or
sbbl
test
and
dec
xor
test
dec
imul
push
test
inc
mov
mov
and
push
jp
cmp
add
mov
adc
push
fs
adc
pushf
push
cmp
cld
dec
cmpsl
iret
clc
andb
andl
jb
je
pusha
mov
mov
outsl
insl
mov
jne
mov
xor
insl
jne
xchg
arpl
out
push
push
out
dec
fcompl
repnz
push
sbb
dec
adc
jno
fs
sbb
mov
out
cmp
sub
mov
push
popa
and
lods
lcall
out
dec
cwtl
xchg
cmp
sahf
ret
jo
xor
fs
lds
out
pop
rep
sub
or
or
es
adc
jmp
dec
inc
scas
or
cmpsb
or
mov
adc
imul
ja
pop
push
repz
pop
xorl
std
je
xchg
fsubrl
and
lods
xchg
negb
mov
ljmp
cwtl
push
pop
dec
loope
pop
mov
mov
sub
cwtl
int3
jmp
push
add
xor
sub
scas
jbe
inc
and
dec
mov
xchg
mov
cmp
movl
mov
and
inc
mov
outsb
or
pop
cmpsl
scas
adc
movsb
sub
in
jns
xor
push
rep
adc
jae
xor
cli
mov
in
bnd
int
pop
dec
out
xchg
into
outsb
out
es
out
mov
ret
lds
pop
rolb
inc
ss
jb
jns
pop
dec
add
pop
and
imul
pop
les
mov
movsb
dec
mov
sbb
cmp
out
mov
mov
or
scas
xchg
dec
popa
stos
outsl
data16
sub
push
out
fld
test
fs
jns
jb
stc
jle
lods
lret
icebp
scas
jge
xchg
mov
xchg
aad
out
jo
aas
dec
jmp
pusha
push
sub
push
lock
xchg
add
clc
push
xchg
xor
int3
dec
inc
movsl
dec
xor
and
stos
cmp
rcl
aam
mov
lret
ss
jecxz
movb
mov
leave
adc
sbb
inc
adcb
fwait
xor
xor
jge
cmp
adc
dec
adc
into
mov
mov
sub
mov
push
mov
fadds
outsb
xchg
into
xor
jg
leave
ss
sti
scas
jl
fdivrs
xor
outsl
inc
cmc
mov
push
lcall
jae
dec
add
mov
cwtl
in
pushf
xor
popa
pop
nop
pop
xchg
xlat
daa
jo
cli
pop
stos
lock
loope
out
mov
inc
mov
jg
sub
jnp
push
push
mov
jle
fs
pop
push
sti
lret
inc
ljmp
sbb
movsl
jae
loope
orb
dec
out
cmp
and
and
icebp
pop
inc
add
loopne
lahf
xor
repz
enter
insl
in
or
jg
fs
in
jo
mov
out
out
jne
jecxz
inc
daa
adc
jno
jns
stos
jp
push
hlt
sarl
mov
pusha
lods
adc
pmuludq
add
fwait
and
inc
adc
imul
fwait
test
addr16
data16
or
and
mov
es
mov
cmp
rorb
addr16
mov
cmp
pop
xchg
call
or
xchg
cmp
mov
test
xor
scas
sub
stc
sahf
push
testl
arpl
fisubrs
divb
mov
mov
movsl
cmp
stos
std
push
dec
sub
clc
in
mov
inc
inc
jmp
dec
xchg
out
imul
dec
test
jnp
mov
rolb
add
add
mov
sbb
cmc
arpl
cmpsl
cmp
lahf
jle
jg
xor
lock
mov
jbe
ret
sub
xchg
cli
xor
push
aas
or
scas
in
sti
loopne
lret
fwait
daa
jb
lods
lea
pop
inc
and
and
pop
ret
stos
mov
cmp
loopne
push
mov
movsb
pop
dec
cmp
fsubs
pop
in
cmp
stc
dec
fistps
xchg
jecxz
in
sar
addr16
ja
hlt
test
dec
mov
push
cmpsl
cmp
insl
loope
mov
add
inc
mov
addr16
xlat
or
jae
push
mov
add
hlt
sahf
dec
out
in
xbegin
add
sub
outsl
xor
aaa
shl
lret
or
arpl
sbb
mov
sub
loope
ss
mov
das
movsb
repnz
cmp
cltd
sbb
adc
int
sub
pushf
mov
dec
push
push
inc
mov
or
rolb
out
inc
xor
outsb
jp
mov
jne
jne
leave
pop
subl
dec
sbb
movb
cmp
pop
orb
inc
xchg
jns
jge
mov
ret
ds
jmp
xor
push
push
out
es
mov
xchg
fstl
xchg
ds
add
push
pop
fisubrs
sbb
xchg
loopne
jg
mov
sbb
test
inc
add
inc
insl
dec
xor
push
imul
sub
sbb
mov
mov
jno
insl
xlat
ljmp
mov
jecxz
mov
loopne
add
pop
leave
push
mov
imul
and
cwtl
pop
mov
out
jae
out
ja
mov
jbe
out
pop
mov
mov
inc
call
cmp
mov
push
xor
xchg
cld
or
mov
test
adc
dec
fwait
in
int
out
icebp
imul
mov
sub
push
fdiv
pop
shr
sbb
lods
sahf
xchg
adc
inc
repnz
cmpsl
jg
repz
lock
pop
loopne
xchg
adc
divb
subl
adc
cmp
pop
xor
mov
lock
fists
xor
ljmp
gs
lahf
adc
xchg
stc
andl
dec
je
dec
aas
adc
pop
inc
mov
pop
ret
out
push
loope
xor
jbe
inc
addr16
fstpl
mov
cmp
jno
push
mov
add
cmp
cmc
movsl
jns
push
jl
mov
mov
push
adc
jns
sbb
fildl
imul
fbstp
jno
cltd
and
aad
leave
pop
cmp
lods
dec
mov
daa
outsb
mov
test
iret
mov
pop
or
repnz
clc
movsb
dec
loope
mov
sbb
test
pop
aas
adc
mov
cli
daa
sbbb
outsb
dec
cmc
leave
mov
in
imul
xor
and
or
mov
fisubrl
mov
mov
pop
icebp
mov
in
jo
leave
inc
mov
ret
adc
sbb
xor
clc
sub
loop
in
sbbb
pop
pop
or
adc
and
cmp
lods
sti
and
in
in
jl
and
cmpsb
jb
cmp
stos
int
xchg
insl
or
xchg
xchg
js
loop
or
fs
jg
jae
jle
dec
addr16
mov
mov
add
sbb
movsl
fcoml
roll
sbb
sub
ss
insb
flds
fmuls
xor
push
aad
out
les
and
xlat
lcall
push
jp
movsb
lock
std
mov
and
xchg
or
jno
movsl
fdivr
xlat
test
adc
mov
push
sub
js
mov
repnz
lret
int
mov
fs
cmp
adc
addr16
adc
and
pop
add
add
clc
fs
arpl
imul
jo
push
jl
scas
push
popf
js
push
imul
push
push
sbb
cmpb
mov
or
cmp
loop
dec
mov
icebp
lret
bnd
jecxz
push
mov
cmpsl
mov
push
dec
xchg
jne
sbb
scas
dec
xor
mov
mov
stos
push
fcoms
icebp
push
stc
pushf
out
push
sbb
les
pop
xor
fwait
jg
mov
or
pusha
jnp
or
adc
adc
mov
shlb
negl
dec
push
adc
mov
aas
or
mov
jge
in
loope
cmpsb
push
iret
fwait
cmpsl
pop
imul
ror
gs
xchg
push
jae
cltd
xchg
outsl
jge
out
or
add
cmpsl
xor
lea
add
addl
jo
rcrb
scas
adc
outsb
jne
in
aam
insl
jle
call
mull
test
jmp
adc
rclb
add
pop
xchg
or
sarl
test
inc
dec
paddb
jbe
pop
add
mov
das
xor
test
push
lds
mov
xchg
mov
test
enter
scas
xchg
in
lret
jbe
xchg
cmp
std
je
xor
fstl
cmp
push
adc
xchg
sbbb
stos
stos
shr
mov
or
ljmp
dec
notl
loop
aas
sub
outsl
stos
pop
enter
shlb
mov
cwtl
sub
adc
pushf
cltd
test
mov
sbb
or
add
enter
ret
bound
popf
or
dec
je
xor
enter
les
xor
pop
mov
inc
loope
and
neg
fistpl
clc
inc
dec
xchg
sbb
push
pop
cmp
push
and
sub
mov
sbb
imul
mov
sub
xor
push
pop
test
rorb
fsubl
add
jae
dec
pop
pop
insb
sbb
call
out
and
pop
pop
imul
dec
fs
push
pop
xchg
movsl
mov
pop
dec
mov
cwtd
imul
pop
xor
push
pop
jo
push
les
pop
push
pushf
insb
or
mov
inc
ficompl
dec
add
sbb
shlb
ret
pop
iret
cmpb
mov
loop
int3
add
aad
sbb
pop
sbb
insl
sbb
cmc
out
sub
repz
lahf
mov
dec
dec
inc
mov
aad
in
sarl
out
ss
and
mov
mov
xor
test
cli
in
out
jae
out
cs
sub
xchg
and
pusha
sbb
dec
les
push
repz
in
xor
es
pop
ljmp
das
sahf
lea
in
or
aam
sbb
push
scas
rcll
and
movsl
lock
mov
rolb
xchg
ljmp
adcl
std
pop
push
xchg
cmc
js
fwait
out
je
push
popa
cld
adc
pop
cltd
inc
push
or
xchg
fistpll
cmpsl
fadd
push
mov
mov
notb
dec
push
lea
jge
push
xchg
fwait
into
push
mov
push
fisttps
es
pop
into
jmp
xchg
negl
fildl
adc
repnz
mov
repnz
stc
data16
push
sbb
inc
dec
ja
test
filds
out
add
aad
sbb
repnz
sahf
repz
inc
ljmp
add
cmpsl
nop
stos
out
cltd
inc
add
repnz
std
push
mov
mov
and
outsl
push
pop
mov
sahf
rcll
jmp
cmpsl
outsl
or
adc
dec
pop
sbb
cmp
dec
mov
or
sub
xchg
or
mov
xchg
jmp
adc
int3
push
push
mov
mov
sarl
into
imul
lar
dec
hlt
jmp
or
xchg
pop
sbb
pop
push
in
or
jmp
rol
scas
and
dec
ja
or
orb
sbb
pop
sub
inc
test
cmc
adc
imul
cs
lret
jg
jmp
adc
pop
jns
addr16
add
jle
test
mov
scas
cmp
pop
sub
sbb
sub
and
ficomps
jns
stos
lret
pop
xor
out
push
ret
mov
lds
pop
ds
repz
subb
dec
adc
insb
es
fsubrl
add
pop
mov
mov
dec
fldenv
in
nop
orl
sbb
add
dec
mov
or
mov
pop
enter
fnsave
lds
mov
scas
andl
jl
adc
mov
sbb
mov
pop
scas
subl
or
insb
push
push
mov
mov
and
loopne
daa
js
je
jns
adc
mov
cmc
pop
das
or
jle
das
fcompl
sahf
mov
adc
xor
xchg
add
daa
loopne
outsb
jno
scas
jb
adcb
mov
repnz
dec
pushf
pop
xor
das
test
adc
movsb
inc
clc
test
mov
jnp
std
push
movsl
stos
fadd
inc
fucomp
jmp
ss
fcmovb
inc
jae
lea
sub
or
push
or
imul
push
mov
cmp
loopne
xchg
outsb
mov
shr
add
adc
lcall
xchg
xchg
insb
and
movsb
sub
int
sub
sub
mov
xor
dec
dec
aas
add
lcall
mov
xlat
out
in
mov
mov
cmpsb
test
xor
and
or
inc
shl
mov
cmp
xchg
push
imul
add
sbb
cmp
in
cmp
and
mov
push
push
shlb
or
scas
nop
jp
and
jl
mul
in
mov
push
aas
cltd
mov
jp
xor
lret
aad
icebp
in
or
cltd
fcoml
add
mov
fistl
xchg
xchg
xchg
stc
or
push
push
inc
push
or
sbb
fld
ficompl
test
into
jo
fimuls
push
push
mov
addr16
pop
cmp
mov
cmp
cltd
cmp
ljmp
or
cmp
xchg
mov
pop
lods
jle
jnp
decb
mov
mov
adc
int3
bound
std
aaa
sbb
sub
xorb
xor
mov
jne
and
mov
ret
lods
xor
lahf
fnsave
jecxz
adc
add
xchg
inc
in
pop
in
inc
enter
xchg
dec
pop
mov
xor
mov
jnp
pop
cmp
inc
out
repnz
jo
testl
fisttps
mov
lock
movsl
dec
imul
mov
or
mov
andl
mov
add
mov
xor
push
popa
xor
mov
fmuls
shrb
add
cmpsb
or
xchg
mov
xor
das
xchg
sub
notb
in
mov
bound
das
cmpsb
fidivrl
push
push
inc
mov
sti
imul
lods
jl
adc
xor
or
into
jg
test
xchg
push
daa
test
sbb
es
cld
jmp
rorl
or
out
ret
hlt
jge
lock
insl
lea
push
cs
push
je
push
outsb
in
aas
jnp
inc
in
aas
sub
mov
call
push
xor
sti
arpl
lcall
scas
test
fdivr
push
pusha
cmpsb
lods
jns
stos
jnp
mov
xor
add
fwait
cmp
fstl
add
mov
das
call
insb
adc
and
dec
adc
adc
into
imul
sbb
fildl
push
lahf
hlt
mov
or
xchg
rorb
loope
js
and
idivl
push
jecxz
mov
ljmp
sbbb
jns
and
int3
testl
and
sub
push
ficomps
cli
adc
rorl
or
lea
xor
adc
and
test
cs
sub
jl
lcall
xor
pop
cmp
ret
lret
stos
push
adc
jbe
lret
push
adc
inc
sub
xchg
cmp
xlat
orl
fwait
into
leave
test
aaa
dec
xchg
inc
mov
add
das
ja
jo
stc
xor
xor
mov
xor
cmp
mov
sbb
aam
sbb
insl
cmpsb
xor
xchg
aaa
push
pop
push
dec
enter
imul
inc
mov
push
outsb
xor
cmp
add
push
in
repz
out
mov
cs
mov
int3
rorl
out
adcl
les
push
push
imul
test
jbe
repz
mov
sbb
hlt
into
insb
movsb
ljmp
out
enter
sbb
add
insb
enter
fs
fistps
shr
lahf
and
popf
sbb
clc
adc
mov
aad
stos
out
fcos
xor
pop
popf
xchg
adc
dec
jne
xchg
insl
xlat
fwait
or
mov
lea
clc
lcall
mov
outsl
pop
fadds
jge
or
int
xchg
or
xchg
aam
and
mov
clc
adc
push
pop
mov
rcrb
dec
subl
popf
repz
shlb
fcoml
lcall
scas
mov
dec
ljmp
pop
inc
imul
mov
inc
xchg
iret
pop
jmp
jne
mov
insl
lds
add
xchg
in
mov
ljmp
mov
fs
mov
out
push
pusha
enter
dec
loope
out
out
hlt
jmp
fidivs
mov
cmp
jg
mov
lea
add
shll
ffreep
and
ljmp
mov
sub
shll
sahf
fwait
out
mov
arpl
cmp
daa
gs
clc
aam
adc
xor
sub
scas
cmp
or
xchg
fistpll
dec
xor
cmp
fimuls
cmp
push
mov
xor
jo
dec
dec
in
dec
mov
inc
pop
mov
aaa
imul
mov
sub
sti
call
stc
imul
push
pusha
cmpsl
inc
add
xor
scas
repnz
or
inc
xor
mov
push
pusha
cwtl
xor
inc
mov
lods
mov
xlat
loope
pop
pop
std
or
loop
cwtl
insb
bound
cs
mov
daa
gs
hlt
fisubrs
subl
dec
cmpsb
jnp
dec
test
sbb
xlat
and
mov
scas
mov
aam
cwtl
sbb
clc
adc
leave
stc
jbe
arpl
lret
xchg
ret
push
jle
in
pop
pop
sub
cmp
addl
popa
mulb
je
ds
mov
mov
sbb
aad
addr16
cltd
inc
lea
sahf
iret
outsl
loope
dec
mov
and
mov
iret
sub
pusha
lcall
xchg
pop
imul
pop
xor
jl
idivb
hlt
cmp
inc
lock
jl
lret
jl
push
packsswb
jecxz
insb
pop
add
adc
jmp
add
out
jb
stc
sbb
lahf
int
jg
mov
xchg
out
addr16
xor
sti
xor
bound
into
ljmp
jecxz
or
mov
inc
int3
mov
test
aam
fistl
pop
xor
mov
lods
push
les
inc
or
icebp
rorl
das
add
sbb
mov
mov
insb
sub
lcall
jnp
xchg
and
inc
leave
int
sub
add
fdivl
addr16
bound
sbb
inc
rorb
lahf
mov
add
rclb
adc
repz
mov
mov
lock
sub
and
pop
sbb
push
leave
addl
pushf
clc
pop
dec
out
lds
sbb
push
dec
push
sbb
gs
ret
movsb
mov
and
insl
rorl
pop
mov
sub
and
ja
loope
fs
or
aas
mov
push
sbb
out
out
mov
pop
push
fistpl
insl
arpl
push
std
mov
add
xchg
jp
outsl
inc
dec
sub
movsb
cmp
mov
mov
loope
jb
cmp
or
test
out
pop
leave
mov
xor
scas
out
mov
mov
jge
addb
cli
cmp
negl
cli
push
cmp
aad
popa
cmc
jne
push
mov
mov
cmp
fadds
out
iret
ss
jmp
rorb
mov
jecxz
jp
inc
clc
shll
inc
mov
jecxz
movsb
sbb
int3
popa
add
inc
mov
inc
jmp
sarl
bound
push
rcrl
ret
mov
mov
cmpsl
loop
lret
sub
mov
and
imul
xchg
ds
test
pop
dec
cmp
pop
add
inc
sub
faddl
xor
stos
mov
jbe
adc
rcl
or
int3
pop
push
lcall
jecxz
pusha
mov
mov
pop
jecxz
sahf
scas
inc
or
pop
jb
daa
testb
mov
xchg
jmp
pop
sbb
outsb
lret
setp
leave
insb
mov
repnz
sbb
cmp
push
pop
decl
aam
pop
sub
addl
mov
pop
jno
xor
mov
outsl
mov
mov
sahf
in
or
push
pusha
inc
icebp
or
adc
das
dec
pop
pusha
aas
jmp
dec
test
dec
aad
flds
lret
push
cmp
push
sub
cmpl
cmp
xor
out
jns
mov
in
adc
sti
testl
adc
inc
imulb
inc
pop
cwtl
insb
lods
es
aad
sub
jbe
push
out
adc
or
mov
cmp
aaa
and
pushf
sub
add
and
pop
pushf
ljmp
adc
add
mov
or
daa
aaa
pop
xor
cmp
jno
sub
rolb
sahf
inc
fwait
push
cld
scas
mov
and
mov
jp
shll
std
into
ficomps
pop
mov
inc
add
push
add
aam
lahf
mov
xor
aaa
in
mov
sub
jb
jmp
or
es
out
dec
pushf
mov
adc
pop
mov
je
sub
in
inc
adc
dec
mov
pop
cs
pop
mov
stos
aam
mov
mov
lods
and
ja
inc
inc
dec
out
pop
and
adc
sbbl
fcoml
bound
fdivl
push
or
pop
push
inc
test
add
leave
inc
flds
das
sbb
cld
mov
out
arpl
cmc
adc
adc
call
adc
push
mov
loopne
sarb
inc
in
pushf
popa
and
mov
in
pop
dec
or
cmp
xchg
jns
data16
cmpsb
adc
push
das
enter
inc
testb
push
imul
sub
aam
xchg
popf
ss
cmp
add
leave
cmpsb
pop
rorb
xchg
adc
popf
outsl
push
movsl
jmp
mov
bound
fucomip
aad
test
pushf
test
in
ss
mov
dec
test
sbb
jp
ret
mov
pop
div
adc
divl
rcrb
and
lods
jg
push
and
xchg
sbb
daa
and
and
and
pop
pop
pop
cmpsb
inc
mov
imul
dec
int3
cmc
fcmove
xchg
loopne
dec
cld
or
adc
loop
into
loope
xchg
cmp
cmpb
sub
inc
jae
xchg
pop
xchg
xor
test
hlt
mov
xchg
push
or
mov
fs
test
sbb
pushf
aad
adc
xor
mov
cmp
loop
imul
hlt
mov
jmp
cmp
mov
and
enter
adc
or
es
ret
mov
pop
out
es
push
add
rorl
push
and
cmp
pop
mov
inc
mov
shr
mov
jmp
push
dec
cmpsl
aam
hlt
divb
cld
xor
pop
xchg
jge
popa
rclb
push
inc
inc
pop
je
sub
in
adc
ret
mov
lods
sub
mov
cmp
fwait
dec
stc
push
les
out
pause
jle
insl
aaa
stos
and
fsubrp
dec
leave
dec
out
sbb
push
add
rcll
adc
je
adc
push
mov
adc
std
dec
aaa
and
call
enter
test
mov
xor
xchg
push
push
xchg
outsb
mov
js
mov
aad
pusha
xchg
repnz
and
xchg
mov
jge
inc
xchg
or
mov
subb
popf
aaa
adc
loop
and
sbb
cmp
and
faddl
fdivl
test
mov
cmp
cld
xor
inc
ret
mov
jp
pop
mov
mov
repnz
sub
test
lods
out
pusha
inc
push
in
aam
push
loop
mov
sarb
dec
push
mov
pusha
test
jno
dec
adc
out
scas
stc
add
pop
sbb
sti
arpl
xor
mov
int3
dec
adc
aas
in
jmp
out
inc
icebp
adc
lret
or
push
outsl
imul
sub
jae
repz
lods
sbb
inc
scas
mov
and
jl
cmpsb
into
push
sub
pop
cmp
sbb
jle
inc
xchg
testl
das
shlb
xchg
inc
xchg
lock
xor
test
cmp
inc
js,pn
mov
fcmovnu
push
adc
pcmpgtd
cltd
mov
movsl
or
add
fnsave
lock
push
scas
push
dec
scas
lcall
pop
push
in
in
pop
divl
dec
movsl
orl
cmp
pop
cmpsl
popa
int
aam
out
mov
xchg
push
jg
lahf
pop
cs
jecxz
xor
mov
arpl
mov
add
adc
iret
jg
pusha
sar
jne
jecxz
shlb
or
icebp
add
ret
sti
xchg
jns
xor
imul
movsb
or
and
sarl
mov
je
dec
fwait
test
dec
jae
or
dec
mov
pop
lret
ss
je
jmp
sbb
cmc
push
and
mov
outsb
push
mov
jne
mov
mull
iretw
std
mov
popa
jle,pn
xchg
rcrb
lods
out
mov
xchg
push
sbb
mov
call
jg
xchg
jle
test
addr16
pop
jae
hlt
jmp
imul
faddp
lret
xchg
dec
cmc
jmp
lds
cmpsb
nop
push
pop
sbb
lret
xlat
xchg
mov
sbb
mov
cmp
lea
inc
movsb
stos
psrad
or
cmp
adcb
cld
iret
adc
in
dec
aam
cmp
loopne
fmull
popf
push
inc
mov
imul
enter
fcomps
movsb
push
shr
repz
xchg
dec
movsl
sbb
xchg
cld
jge
sub
mov
pop
scas
add
insb
test
sbb
mov
rcr
ds
nop
add
cwtl
loopne
andl
out
and
int3
dec
fcomps
jle
test
xchg
xlat
leave
sbb
xchg
call
leave
aad
xchg
lock
mov
outsl
pusha
sub
xchg
test
scas
xor
es
pop
mov
push
repnz
fiaddl
pop
push
ret
or
jnp
inc
hlt
ret
cli
push
jae
pusha
sbb
push
addr16
enter
loope
idiv
or
outsb
pop
push
out
filds
lret
test
adc
mov
inc
ja
inc
jno
adc
pop
ret
jae
mov
test
rcrb
mov
rcl
push
ret
adc
sub
mov
cltd
mov
add
push
mov
mov
inc
push
into
inc
jl,pn
mov
mov
sbb
xchg
xor
push
jmp
shlb
push
push
jp
adc
and
push
jl
imul
dec
mov
mov
cmp
setl
ret
jns
scas
aad
sbb
stos
insl
subb
cs
push
inc
ss
push
push
mov
cld
mov
xchg
jbe
jl
xchg
sub
cmp
leave
rcrb
lahf
and
push
stos
pop
adc
cld
inc
decb
pop
push
adc
cmp
inc
adc
loope
mov
insl
add
push
cmp
ret
push
lock
push
inc
mov
jnp
jae
roll
xchg
cld
mov
ret
stc
xchg
xchg
fisttps
addb
test
inc
mov
xor
std
mov
rorl
mov
inc
adc
test
jno
sarl
push
call
push
insl
sub
fwait
push
lock
ret
pop
or
sti
jg
out
lods
push
fnstsw
sbbl
jns
push
shl
loop
orl
xchg
push
pop
idivl
or
shl
and
cmpsl
or
pop
das
lret
stc
mov
sub
das
mov
outsb
fs
and
pop
xorb
int3
jae
push
test
sbb
leave
fldenv
insb
push
cmp
jge
mov
jnp
adc
inc
lret
sub
idivb
test
sahf
subl
les
adc
inc
testl
fsubrl
inc
dec
mov
jnp
jp
das
repnz
jl
shlb
sbb
jbe
xchg
in
push
test
and
dec
mov
jg
inc
imul
mov
sbb
rcll
pop
scas
and
mov
cmpsl
add
mov
pop
adc
cli
cltd
fsubr
cmp
inc
inc
cs
push
fs
pop
sub
xor
mov
push
push
shrl
mov
and
nop
fisubrl
popf
rol
push
push
subl
jge
call
in
mov
cmp
sub
add
sub
stos
mov
cmpsl
enter
jge
add
in
fwait
adc
pop
mov
pop
add
jg
fnsave
popf
sbb
popf
xchg
hlt
xchg
daa
lcall
mov
push
scas
jae
daa
push
xchg
mov
add
movsb
addr16
cmpsl
sarl
leave
je
cli
shl
cmpsl
mov
lods
dec
adc
aas
imul
mov
pop
pop
cmpsl
aam
sbb
mov
cli
xchg
orl
into
lcall
enter
mov
fildl
rcr
sub
aad
inc
into
or
into
add
dec
fisubrs
repz
inc
ja
mov
or
lcall
add
inc
mov
mov
jmp
mov
rolb
fdivrs
sbb
pop
hlt
mov
mov
mov
inc
cmp
cwtl
xor
jno
push
sub
sbb
mov
mov
sti
inc
xor
xchg
pop
jg
xchg
dec
insl
daa
cmp
adcb
inc
xchg
jg
jge
test
xor
mul
cltd
out
pop
pop
scas
adc
aam
sub
mov
push
lods
sub
xor
jle
popa
cmp
jae
sarl
shld
mov
jmp
adc
fwait
shl
repnz
push
cmp
test
mov
daa
shlb
lcall
xchg
test
add
ljmp
inc
push
daa
test
scas
loope
and
scas
popl
cmp
aas
lods
adc
ja
lods
pop
push
push
lds
bound
pop
rcrb
mov
push
xlat
movsb
jp
fidivrl
mov
insb
cmpsl
cwtl
jbe
filds
mov
stos
repnz
adc
adcl
mov
push
jg
clc
ja
push
sbb
adc
adc
stos
sarb
xor
cmp
sub
mov
icebp
fsts
pop
mov
int
jp
lods
imul
loope
scas
cli
dec
sbb
ds
cmp
mov
push
stos
sbb
sub
push
mov
and
sbb
rcrb
gs
xchg
pop
gs
in
inc
test
xor
xchg
scas
add
mov
or
jecxz
xor
imul
cmp
ficoml
dec
and
dec
push
dec
jp
xlat
scas
stos
or
daa
ds
pop
pusha
jne
sbb
fs
cmp
mov
nop
mov
jg
adcb
lods
stc
mov
or
pusha
mov
jo
mov
lret
sbb
and
adcl
sbb
jge
andb
and
adc
cmp
mov
sti
stos
mov
or
sbb
pop
inc
push
pushf
pop
cmp
arpl
into
xor
repnz
pop
jnp
test
pop
pop
test
sub
inc
cmp
stos
out
jg
mov
ja
jnp
mov
pop
jae
into
pop
nop
fstpl
pavgb
roll
mov
xor
outsl
mov
fstps
out
inc
pop
fdivs
jge
sti
es
leave
push
mov
dec
movsb
aaa
jae
arpl
test
push
movsb
cmp
loop
das
push
scas
cmpsb
cli
pop
xchg
adc
les
insl
nop
jbe
movsl
push
jae
mov
pop
outsb
adc
pop
jp
sub
mov
lret
or
dec
cld
mov
sub
fdivrl
sub
dec
xor
pop
cs
out
push
adc
arpl
data16
fiaddl
shll
lret
shrl
cwtl
or
sbb
jo
adc
test
lahf
sbb
push
jnp
xor
dec
mov
fstpl
and
scas
fiaddl
dec
jne
shl
mov
sahf
xchg
mov
daa
mov
nop
cltd
xchg
push
push
shll
leave
push
mov
inc
mov
mov
ret
xchg
dec
mov
in
pop
shll
mov
sti
cmc
outsl
xor
pop
sub
dec
fistl
jg
cmp
leave
jle
adc
sub
in
enter
insl
mov
fsubl
add
sti
mov
mov
shll
cwtl
jp
jle
loopne
fadds
fs
test
nop
jl
add
inc
mov
adc
dec
fcomps
stos
aam
jmp
shll
sbb
lret
push
stos
lods
push
arpl
fdivrs
imul
into
lods
test
das
mov
pop
lcall
data16
jbe
in
scas
bound
mov
in
xchg
cmp
jns
mov
pop
sbb
jle
mov
pop
cwtl
pop
testb
mov
xchg
or
pop
test
inc
pop
lret
mov
mov
sarl
jne
pop
mov
cmp
in
add
int
xbegin
das
xor
cmpsl
adc
jl
adc
repz
dec
xor
push
in
fimull
mov
imul
inc
inc
ficompl
push
bound
jp
lahf
inc
loope
cwtl
ficomps
adc
sub
jbe
and
test
xchg
inc
sbb
rcr
stos
enter
pop
mov
outsl
aad
or
add
pop
and
popa
push
pop
cmpsl
in
test
lds
inc
mov
pop
inc
sbb
notb
cmp
into
jbe
mov
repnz
data16
icebp
sub
inc
std
sbb
jg
cltd
flds
xrelease
pop
popf
divb
sbb
cmp
popa
inc
iret
push
adc
clc
les
cmpsl
adc
cwtl
push
aas
pop
fdiv
mov
scas
pushl
mov
not
inc
push
addb
jle
or
pop
cmp
clc
test
or
lahf
inc
fst
call
insl
mov
fnsave
jp
dec
cltd
adc
sbb
lret
out
pop
mov
pop
loopne
arpl
je
adc
or
cmp
and
in
lods
push
cmp
test
jl
lret
dec
cli
pop
clc
sti
mov
shl
int
mov
inc
xor
jle
int
cmp
outsb
sub
andb
cmpsl
mov
in
or
mov
xchg
dec
iret
cld
mov
lcall
jb
stc
mov
shrl
inc
flds
dec
inc
das
andb
pop
imul
mov
xchg
pushf
cs
loope
sbb
dec
mov
push
shlb
pop
in
push
ret
sbb
in
dec
mov
xchg
inc
or
ret
movsl
jge
pop
or
pop
mov
clc
pop
mov
ds
cmp
add
fwait
pop
xchg
loop
flds
jb
out
push
pop
pop
inc
mov
cmc
test
xchg
pop
or
lea
jp
dec
hlt
xor
lds
push
cmpsb
iret
push
fidivrl
out
lea
stc
adc
cmp
imul
mov
loop
xchg
fs
cmp
adc
les
fsub
cmp
add
pop
mov
lret
out
sub
out
pop
mov
dec
jne
movsl
push
xchg
cmp
add
es
ffreep
lods
bound
push
js
aad
popf
into
scas
push
xchg
rcl
sub
xchg
popa
out
inc
jae
popf
rcll
sbb
iret
icebp
sub
push
outsl
jae
ljmp
dec
lahf
fs
xor
adc
cmp
outsl
leave
stos
mov
cmpsl
ret
jae
sbb
arpl
cli
mov
jbe
cmp
in
jb
aam
cmovg
add
mov
sbb
pop
lcall
or
cmpsl
jge
adc
dec
dec
das
fldt
fldcw
daa
dec
pushf
pop
mov
nop
adc
pop
aad
es
mov
and
leave
mov
movsb
adc
pop
jmp
test
scas
loope
push
or
test
ss
outsl
mov
mov
in
lock
aam
rcl
test
insb
xchg
mov
or
cltd
inc
fldt
mov
mov
dec
cmp
int
std
mov
int3
cmpsb
pop
icebp
push
test
rorb
jl
dec
sahf
icebp
gs
aas
cmp
add
push
dec
inc
push
and
adc
xorl
and
cmp
les
push
nopl
pusha
xchg
pop
les
dec
pop
iret
notl
mov
and
push
in
cmp
lods
movsb
pop
mov
xchg
addr16
ret
jne
outsl
cmp
mov
mov
sub
dec
and
dec
ret
cmpsb
mov
push
mov
call
jmp
mov
cmp
mov
inc
out
jns
mov
mov
sahf
jmp
xchg
mov
xor
mov
cmp
mov
daa
into
cmp
mov
and
insl
xchg
push
addr16
mov
push
jbe
cltd
cmp
arpl
mov
xor
stos
inc
adc
rep
pop
fwait
pop
roll
inc
mov
mov
or
movsl
xchg
dec
mov
insb
outsl
pop
sub
daa
loop
cmc
mov
or
push
aam
ds
push
pop
inc
lds
adc
sbb
add
pushf
push
or
in
mov
pop
xchg
or
dec
dec
pop
aam
xchg
imul
push
pop
xor
mov
fwait
icebp
xorl
fwait
push
insl
leave
in
mov
push
lret
push
sbb
and
mov
add
movsb
roll
add
pop
aad
hlt
dec
ror
sub
or
out
add
icebp
pmaxsw
pusha
in
sbb
pusha
loopne
jg
rolb
xchg
pushl
or
scas
mov
js
push
mov
mov
mov
shll
or
in
xor
arpl
xchg
pop
push
dec
add
pop
push
aas
mov
mov
sub
add
mov
fistpl
dec
mov
sub
add
nop
sbb
fs
lea
cld
xor
movl
scas
mov
add
xchg
jae
int
xchg
mov
pop
imul
mov
xchg
sbb
dec
out
mov
and
mov
cmp
out
sbb
imul
gs
mov
dec
popa
push
int
mov
mov
mov
int3
sbb
pop
rcrb
lock
imul
loopne
mov
mov
aam
mov
pop
push
and
fldcw
cmpsl
mov
lcall
mov
aad
jo
jbe
xchg
mov
mov
es
sarl
addr16
adc
jle
jp
out
push
mov
jg
xchg
pop
cmp
cmp
subl
das
adc
mov
ljmp
pusha
xchg
clc
push
fcom
stos
inc
jnp
mov
movsl
cld
add
xchg
lods
adc
adc
in
and
stos
fcmovnu
adc
sahf
mov
andl
aam
inc
xchg
ja
lret
cmp
adc
ja
iret
lea
idivl
test
aas
pop
leave
push
inc
fcompl
jp
push
gs
inc
adc
lret
aad
cmp
lods
or
mov
loopne
mov
shl
mov
add
or
fs
xchg
push
mov
out
inc
xchg
lds
mov
iret
fsubs
adc
mov
sbb
lret
sub
les
movsl
mov
fistpl
xchg
mov
shll
sbb
jg
sub
xchg
jmp
addr16
adc
idivl
sbb
adc
inc
pushf
shl
jo
fidivl
sar
inc
xor
adc
push
add
or
jecxz
mov
cli
inc
add
inc
fidivl
adc
outsb
aas
push
imul
inc
dec
mov
insl
ret
mov
sarb
xchg
repnz
push
jl
jno
test
inc
pop
insb
adc
add
insb
clc
push
mov
ds
xchg
mov
push
push
mov
cli
jg
popa
sbb
iret
mov
fs
xchg
fmull
mov
aam
rcrb
cmpsl
rolb
js
lds
mov
dec
inc
shrb
xchg
mov
xchg
inc
add
adcl
std
loope
dec
jae
js
and
mov
movsb
cmp
mov
add
and
mov
xchg
out
std
adc
dec
xchg
dec
lods
ljmp
mov
cltd
adc
fidivrs
cmp
mov
aam
mov
inc
mov
fs
jmp
mov
sahf
xchg
adc
rcrl
insb
inc
fldl
xor
adc
aam
jecxz
xor
add
mov
lret
xlat
out
jae
xor
push
fistps
and
or
xor
sarb
movsb
int3
push
fisubs
pop
sub
push
ret
adc
pusha
outsl
ds
inc
adc
test
in
jmp
test
fwait
jno
rolb
mov
lea
push
lret
es
add
sahf
push
mov
xchg
mov
adc
mov
mov
fistpl
in
fs
cmp
cmp
ss
mov
mov
loope
rcl
out
lods
pop
dec
xor
int
sbb
cs
inc
bound
lods
jp
fdivs
fiaddl
leave
push
sub
or
mov
and
add
in
pop
ret
adc
mov
sahf
out
aad
cli
mov
imul
outsl
mov
dec
js
out
inc
cmp
xor
repnz
pop
insl
mov
push
mov
push
lds
mov
cmp
out
adc
lock
movsb
test
jnp
call
int
mov
sbb
inc
js
push
stos
cmp
sbb
in
addr16
outsb
nop
and
push
sbb
inc
loop
loopne
arpl
inc
in
aaa
fldenv
shll
faddl
insl
jecxz
or
addr16
jl
mov
add
lret
bound
lods
cmc
mov
or
test
add
loope
jae
mov
sub
jno
or
mov
aam
fadd
stos
mov
fmull
add
inc
ds
adc
inc
test
adc
adc
test
sub
icebp
in
stos
rcrl
jp
mov
out
data16
jmp
aad
repnz
fstp
push
data16
push
sub
xchg
mov
insb
lods
imul
sbb
fidivs
je
gs
inc
orb
inc
push
push
push
push
into
push
jno
popa
gs
pop
inc
ud1
aas
sbb
adc
testl
mov
iret
and
cs
xchg
aad
cmp
push
test
mov
mov
cs
insl
add
in
inc
jg
pushf
push
jge
out
dec
mov
adc
loopne
jne
movb
daa
dec
and
gs
mov
mov
xchg
xchg
jmp
insb
dec
adc
shlb
mov
mov
sub
inc
cmp
cmp
shll
pusha
adc
stos
rorb
add
push
mov
jecxz
es
insl
mov
test
je
inc
xchg
pop
xlat
mov
repnz
pop
ss
addr16
notl
fimull
popf
jmp
pushl
in
push
xchg
insl
xchg
jle
cmp
fdivs
outsb
es
push
mov
fadds
cld
push
jge
test
sbb
orl
dec
inc
or
lret
arpl
jge
lcall
push
push
jns
movsl
mov
ret
jo
in
mov
mov
push
cld
xor
movsl
mov
mov
data16
push
adc
pop
into
push
int3
pop
add
movsl
cmp
inc
cmp
outsl
mov
mov
push
int
sbb
lahf
int3
orl
or
les
mov
jmp
jecxz
gs
test
jo
in
add
push
sbb
inc
push
shr
ret
cs
lock
jl
test
pop
dec
jge
dec
dec
or
in
mov
xchg
pop
add
sub
jmp
test
out
mov
push
xor
push
loope
popf
jmp
sahf
mov
jg
aad
insl
push
aad
adc
xor
unpcklps
adc
mov
out
mov
js
add
cmp
stc
fsubrs
cwtl
imul
inc
sbb
sub
mov
std
fidivrl
mov
mov
inc
stos
sub
xchg
push
sub
or
pop
pop
fstps
sbb
jb
popf
fildl
lahf
sbb
and
cmp
or
inc
sbb
imul
pop
mov
sub
mov
data16
mov
in
and
insb
adc
aam
xchg
jb
push
das
inc
stc
lcall
mov
out
aaa
data16
xchg
push
or
test
mov
outsl
nop
sti
push
movsl
ljmp
insb
and
popf
mov
notb
out
pop
jl
aad
int3
frstpm(287
adc
filds
rep
pop
add
cmp
xor
push
or
lret
and
or
adc
jg
lret
imul
call
into
xlat
sbb
in
push
aam
pop
sub
pop
inc
sub
sub
cmp
js
pushf
and
rep
test
movlps
xor
xchg
jmp
and
dec
push
pop
dec
push
daa
insl
jne
loope
das
aas
scas
xor
dec
data16
bnd
xor
loop
sbb
imul
cmpsl
cmp
inc
mov
add
xor
pop
inc
mov
iret
pop
cmp
sub
inc
das
push
dec
or
shl
and
imulb
mov
ret
jl
icebp
jne
js
mov
cmpsb
mov
sbb
popf
push
fnstenv
or
mov
cld
or
fldt
and
mov
adc
into
xor
mov
in
mov
dec
sahf
pop
mov
aad
sub
mov
pop
push
cmpsb
mov
sub
xchg
jae
dec
stos
jo
jns
daa
inc
aas
insb
pop
sbb
lcall
adc
orb
push
out
daa
inc
imul
inc
clc
lods
and
or
mov
idivl
popf
inc
pushf
inc
js
jns
xor
mov
idivl
fwait
sub
inc
xchg
sbb
arpl
cmpsl
jae
aad
adc
stc
mov
sub
push
mov
dec
les
in
and
test
in
and
pop
imul
add
add
icebp
pop
jnp
insb
xchg
add
enter
jbe
int
ljmp
out
jmp
pop
jp
xchg
scas
push
dec
int
sbb
int
mov
and
int3
ret
imul
addr16
add
adc
dec
adc
rorl
push
bound
notb
xlat
add
cmpl
and
outsb
add
mov
mov
stos
mov
insl
inc
and
mov
stos
adc
or
xor
sbb
or
hlt
jge
mov
fidivl
push
jb
sbb
int
xchg
std
push
cmpsb
sahf
jne
out
or
xchg
movsb
icebp
jo
adc
or
cltd
stc
push
mov
lret
adc
add
lods
in
or
stos
sub
push
push
inc
lret
pusha
ljmp
cmp
pusha
jno
leave
idivb
inc
mov
pop
jns
push
sbb
imul
add
loop
aas
jmp
lods
repnz
sbb
in
aad
mov
xor
and
imul
cltd
or
js
aas
hlt
imul
and
or
jns
arpl
outsb
leave
cwtl
or
arpl
imul
pop
adc
scas
cmc
xor
ds
sarb
clc
outsb
mov
and
sti
fisttpll
pusha
pop
xchg
pop
inc
test
dec
mov
sub
movsl
addr16
orb
repz
insl
sbb
cli
ret
ss
jbe
mov
in
push
sti
lods
nop
rcrl
enter
and
sti
mov
sahf
cmp
or
cld
cmpsl
sbb
xchg
add
sub
stos
call
xchg
dec
cmpsl
pop
inc
jl
roll
pop
sbb
ret
lods
imul
mov
xchg
das
mov
aad
mov
test
jae
in
rdtsc
jge
mov
sti
mov
stos
mov
les
pop
out
sub
out
add
xchg
xchg
dec
decl
pop
rcl
mov
mov
xor
cld
out
mov
add
in
jmp
add
inc
cmp
dec
fwait
pop
add
mov
or
movsb
xchg
inc
inc
sbb
shll
iret
stc
mov
bound
pop
fwait
rorl
les
into
inc
sarl
stos
ret
pop
sbb
aam
sahf
adcb
orl
out
push
mov
push
jg
dec
inc
cmp
loopne
enter
xor
jl
stos
push
ficomps
cmp
cmp
lds
mov
pop
push
pop
add
outsl
xor
das
sub
jmp
push
inc
and
push
jge
test
and
sub
lret
inc
mov
mov
pop
adc
pop
loop
and
ret
loop
sbb
sarb
sahf
pop
pop
fmuls
fwait
movsb
mov
fwait
mov
xchg
imul
test
incl
cld
sbb
sti
cmpsb
stos
and
test
clc
shr
mov
nop
fldenv
jae
sub
outsb
xchg
js
mov
mov
es
pop
and
paddusb
jge
pop
pop
fprem
push
movsl
mov
or
fsubrp
adc
push
jg
icebp
mov
int3
or
jnp
test
std
sbb
xchg
or
repz
push
add
sbbl
pop
cmpsl
push
push
jecxz
cmp
dec
jbe
jno
fwait
or
fstps
out
lcall
or
fs
mov
repnz
dec
decl
shl
jmp
xchg
das
jne
nop
imul
cmp
pop
or
dec
fs
xor
ret
or
outsb
movsl
mov
test
sub
sbb
sahf
inc
jno
jmp
mov
addr16
push
fs
rol
ret
ja
cmpsl
mov
out
mov
jnp
add
rep
repz
mov
push
inc
movsb
mov
adc
int
gs
cmpsl
or
fisttpll
call
sub
fucomi
ljmp
sub
mov
addb
dec
sub
outsb
pop
or
push
movsb
or
pop
push
cmp
loopne
rolb
push
rorl
add
push
in
and
loope
pop
xor
shll
cmp
or
repz
xor
int3
repnz
stos
rcll
mov
push
inc
stos
sbb
jmp
insl
fidivl
mov
cmp
pusha
push
cmpsl
push
sbb
mov
and
bound
fidivrl
and
shll
enter
pop
dec
popa
jecxz
sub
pop
add
or
aam
pop
xor
int
mov
out
dec
push
pop
aam
adc
jns
and
lcall
loop
fisttps
dec
int3
fimull
jnp
xchg
inc
adc
and
add
mov
rcll
bound
into
xchg
test
and
xchg
orb
add
inc
out
adc
push
adc
loop
fildl
in
xchg
inc
fildll
sub
cmpsl
dec
xor
stos
sub
out
movsl
jge
push
or
ret
jae
dec
push
adc
and
push
aas
pop
lock
loopne
aaa
push
sar
in
call
jp
push
xor
dec
test
push
movnti
mov
or
dec
idivl
cmpsl
arpl
or
mov
add
mov
aas
push
scas
jns
and
addb
out
jp
inc
mov
into
fmul
sub
jmp
pusha
xorl
inc
clc
xor
cmp
dec
mov
fcmovu
clc
add
dec
cmpsl
stos
xchg
mov
int3
lahf
mov
mov
jne
loope
test
sub
jl
dec
jbe
pop
sbb
xchg
mov
dec
stc
mov
push
test
adc
ja
mov
xlat
mov
sbb
pop
mov
adc
jge
daa
fldcw
imul
lods
push
and
fsts
in
and
pop
xor
xor
pop
es
adc
rcrl
push
loop
ljmp
pusha
push
enterw
outsb
shll
xchg
add
sahf
bound
adc
negl
push
cmpsl
adc
and
mov
fsubrl
xlat
or
cmp
sub
mov
inc
imul
loop
pop
mov
push
aad
loope
sub
pop
scas
and
xor
xor
bound
jb
dec
inc
xchg
mov
rclb
fdivrl
dec
mov
push
mov
mov
and
loopne
mov
int
cmp
jge
sahf
sahf
sub
inc
cmp
lcall
das
pop
lods
inc
sbb
sub
adc
xor
or
pop
inc
lock
popf
jns
dec
inc
mov
in
mov
int3
stos
inc
lods
gs
pop
mov
mov
shrb
in
xchg
xchg
or
pop
mov
ret
insb
or
jecxz
pop
cmp
push
adc
mov
je
ja
mov
xlat
faddp
push
insl
fwait
inc
loope
inc
nop
xchg
lret
push
inc
aam
loop
clc
xchg
mov
add
movsb
jl
mov
les
mov
fisubs
lea
cmp
dec
cli
arpl
mov
ljmp
incl
mov
addr16
loop
xor
rcrb
fwait
std
push
sbb
fsts
dec
dec
push
push
inc
mov
repz
add
sarb
ret
insb
lods
pop
les
outsl
stc
adc
xlat
lret
ret
mov
pop
push
jns
sub
sub
push
fdiv
aad
mov
js
dec
and
dec
pop
mov
fstpl
add
rclb
mov
je
cmpsb
lahf
xchg
mov
push
and
cmp
lods
mov
jmp
dec
sbb
mov
adc
lock
xor
add
jmp
lea
lahf
fstpt
xor
mov
adc
jl
sbb
cmpsb
sub
das
sbb
sbb
mov
cwtl
mov
xor
cmp
mov
pop
arpl
es
lahf
rcrb
push
push
ret
push
mov
xor
cltd
add
mov
rcl
scas
inc
sub
daa
push
and
and
push
fwait
lret
sub
imul
inc
bound
or
adc
xor
or
testl
imul
push
fidivl
dec
cmp
mov
xor
shlb
jecxz
incl
fistpll
stos
lahf
inc
insl
fcom
dec
jmp
mov
adc
aad
add
popa
pop
lcall
mov
rolb
jo
add
pushf
dec
xor
fsubs
cmc
adc
pop
inc
push
mov
lcall
out
out
cmp
aad
aaa
addr16
jns
ss
push
xor
aaa
lcall
sbbb
or
movsl
or
cli
fs
mov
mov
stos
jg
out
sti
dec
sbb
xor
sub
outsb
aas
jle
fwait
and
jp
inc
into
ja
arpl
inc
clc
mov
popa
lret
insb
fstpl
cli
add
js
sti
add
aad
xchg
push
cmpsl
pop
sub
in
std
mov
fisubl
inc
jb
lds
pushf
push
pop
ficompl
movsl
sub
cmp
jge
inc
push
or
cmp
xor
sarb
je
xchg
mov
xor
popl
mov
mov
and
call
cld
imul
andb
test
sub
inc
add
xlat
add
fwait
sub
lds
dec
mov
inc
mov
fnstcw
sahf
roll
inc
push
push
andl
jns
pop
in
jne
adc
or
mov
mov
daa
push
icebp
fdivp
iret
call
sbbl
popa
test
or
dec
in
cmp
cmp
stos
ljmp
jmp
cmpsl
mov
cmp
jl
cld
mov
lods
mov
xor
aas
out
push
sbb
in
ljmp
jecxz
dec
or
popf
push
hlt
and
mov
daa
call
mov
insb
out
test
dec
lret
inc
mov
push
cmp
and
std
int
lret
add
mov
rorb
xchg
inc
mulb
jnp
imul
jns
mov
fidivrs
aaa
add
movsl
adc
mov
xor
mov
dec
push
inc
jp
xchg
jno
fbld
bswap
sub
xchg
sub
das
pop
cltd
xchg
inc
push
andb
jge
fmull
les
and
test
cmp
mov
sbb
pop
mov
pop
fnsave
lcall
imul
cmp
addr16
mov
cltd
jmp
jnp
add
imul
or
fisubl
push
test
xchg
xlat
addr16
shr
das
mov
pop
dec
mov
stos
cltd
cmp
hlt
push
outsb
je
into
inc
dec
test
sti
cwtl
clc
jle
stos
xchg
add
fmulp
lret
and
out
cmp
xchg
shr
mov
adc
and
pop
fisubs
lret
int3
sbb
cmpsl
jnp
push
ret
por
mov
add
or
add
lcall
popf
inc
jbe
dec
jp
test
sbb
in
mov
and
fcoms
adc
cmp
scas
popf
pop
js
add
loop
jo
adc
out
jecxz
jle
cmp
push
addl
js
push
xor
das
xchg
push
arpl
dec
adc
stos
xor
clc
in
xorl
lret
jl
imul
popf
dec
add
fsubrp
or
das
gs
rclb
mov
cltd
mov
icebp
xor
cmpsl
dec
pop
inc
xchg
cs
xchg
nop
add
sbb
repz
outsb
rcrl
subl
icebp
loope
push
fistpl
int3
xor
loopne
xchg
js
js
inc
xchg
push
sarl
and
lds
jecxz
ss
pop
in
add
or
outsb
into
cmp
insl
xor
sub
push
adc
negb
mov
ficoml
daa
cmc
xchg
in
xchg
lea
mov
sub
ja
fisttpl
and
ror
dec
movsl
nop
lods
insb
mov
clc
loop
fcmovu
mul
and
mov
mov
push
mov
nop
dec
xor
fwait
push
std
adc
jnp
sbb
aam
ficoml
stc
adc
dec
and
enter
inc
shrl
mov
and
cli
and
adc
ret
shl
addr16
cmpsb
imul
adc
fs
es
adcl
jo
scas
cltd
jle
decl
scas
dec
fwait
sbb
mov
popf
dec
or
dec
dec
frstor
ds
test
dec
imulb
iret
pop
aaa
test
or
arpl
jae
jo
and
or
aam
xchg
xor
xchg
adc
ljmp
and
cmp
popl
das
orl
sbb
jo
mov
and
fisttpl
xchg
pop
xchg
cmp
aad
cltd
push
add
push
sarl
enter
mov
mov
loopne
mov
outsb
dec
in
sub
out
xchg
lret
stos
insb
or
repz
not
popf
jp
xchg
sbb
jg
adcb
inc
ret
mov
aad
xor
hlt
ret
sub
out
mov
dec
ret
pop
sbb
push
dec
es
sub
cwtl
aas
mov
xor
sub
nop
test
push
cmp
mov
jmp
or
stc
mov
pop
inc
loop
jge
jmp
scas
or
mov
sbb
inc
mov
push
push
sub
shl
sbb
dec
jns
leave
or
cmpsl
jnp,pt
inc
insb
inc
shr
cltd
mov
cwtl
xchg
cmpsl
jle
pop
fldcw
cmp
cmp
inc
and
fs
out
xchg
mov
repz
cli
xchg
cmp
rorb
push
xor
stc
popa
and
fldenv
inc
xor
cmp
mov
movsl
arpl
addr16
imul
or
mov
adc
and
xor
cmc
xchg
cli
jecxz
dec
ret
fadd
bound
pushf
push
inc
addr16
and
add
sahf
in
test
mov
test
in
hlt
mov
xchg
xor
lret
add
dec
fnstcw
mov
pop
loop
pop
or
dec
dec
cmp
jle
sbb
testb
cmp
pop
adc
lcall
jne
ja
sbb
repnz
cmp
test
dec
lds
push
enter
sti
mov
add
mov
cmpsl
fsubs
or
imul
fwait
mov
stc
push
or
movsl
leave
add
movsl
jns
inc
push
lcall
mov
push
and
mov
pop
jb
pushf
lds
and
add
mov
shrb
dec
in
sub
mov
jle
cmpsb
xchg
jno
jg,pt
fmul
mov
scas
out
mov
iret
cmp
push
rcrb
mov
cmp
div
xchg
lret
pushf
popf
adc
or
xchg
leave
jne
std
stos
dec
sub
rcl
pop
loope
and
lahf
les
ror
xchg
jmp
cli
xchg
scas
sub
out
sahf
clts
xchg
out
or
ret
dec
stos
pop
push
adc
mov
imul
adc
or
mov
outsl
outsl
leave
push
jns
mov
shlb
hlt
push
jb
inc
jnp
jbe
std
aas
ds
aaa
js
sbb
rorl
cmp
aas
mov
lret
fisttps
insl
mov
sbb
movsl
or
cmpsb
dec
push
sub
test
loope
repz
inc
sbb
mov
mov
adc
pop
adc
mov
data16
jnp
sbb
test
mov
test
push
aaa
add
sbb
jbe
or
mov
push
adc
mov
mov
dec
daa
dec
aad
jb
lret
loope
lret
cmpb
mov
sahf
jmp
inc
dec
inc
jmp
lods
push
jle
nop
mov
adc
loope
inc
inc
adc
addr16
repz
add
sbb
jecxz
ret
mov
xor
fstl
pop
ret
das
pop
inc
sbb
adc
out
fnstenv
and
jne
aas
nop
aaa
bound
movsb
and
lret
insl
lret
inc
xchg
movsl
aam
mov
js
cmc
cmpsl
mov
mov
fstpl
addl
xchg
add
jo
in
aad
mov
push
adc
adc
iret
pop
add
arpl
lods
dec
ficoml
cmp
es
mov
ss
test
in
dec
xchg
cwtl
sub
pop
pop
mov
out
adc
sarb
or
mov
stc
pop
arpl
pop
sub
and
jmp
in
insl
in
stos
dec
or
stc
repz
insl
xchg
pop
cmp
aaa
jecxz
cmp
cltd
or
adc
cmp
adc
test
jmp
addr16
dec
inc
cli
push
pop
cmpsl
or
or
es
daa
addb
shll
xor
ds
jmp
jp
outsb
scas
inc
inc
dec
push
out
push
shrb
outsb
lret
js
aas
outsl
aam
inc
xor
pop
adc
xchg
sub
push
mov
sbb
jecxz
test
push
push
push
cmpsl
pop
sbb
cmpsb
xchg
fdivrl
mov
inc
jmp
cmp
mulb
pop
cmp
add
xchg
dec
gs
into
mov
je
or
add
mov
push
daa
movb
fnstenv
inc
loope
aad
mov
aaa
pop
and
imul
test
push
mov
cld
sub
and
loopne
jae
scas
adc
cmp
sub
xor
mov
ret
push
icebp
sub
jno
cmp
mov
xor
and
or
add
push
or
ja
lret
ljmp
add
testl
mov
leave
fs
or
sub
test
jns
lcall
nop
outsb
push
push
mov
pushf
inc
insb
call
imul
and
mov
add
add
dec
jb
mov
call
int3
in
mov
cmp
mov
adc
push
pop
pop
stos
fsts
and
push
pusha
pop
cli
adc
insb
jb
roll
sub
in
push
rorw
movsl
outsb
imul
jmp
push
jae
lret
sti
and
mov
mov
jp
push
bound
sbb
ret
mov
sbb
fadds
leave
or
into
push
sub
pop
or
mov
imul
xchg
jbe
push
int
pop
dec
std
enter
scas
dec
cmp
sahf
movsl
addr16
lea
ljmp
fisubrl
lods
inc
cwtl
mov
lret
notl
addr16
pop
xchg
mov
dec
pop
jnp
test
jecxz
and
sbb
adc
in
sub
in
mov
repnz
icebp
lods
dec
sub
test
mov
push
out
sarb
in
stos
pop
dec
adc
mov
into
mov
sbb
js
mov
or
cli
dec
jge
or
lcall
addr16
daa
inc
loopne
shlb
jge
and
ja,pt
fstl
mov
xlat
in
adc
push
pop
das
push
xchg
push
in
imul
mov
cmc
popa
movsl
mov
mov
mov
cmp
out
int3
mov
loopne
jp
add
call
cmp
mov
in
lcall
push
jmp
popf
out
lock
xor
inc
add
or
outsl
jge
test
jl
push
imul
stos
imul
test
repnz
pop
aas
sub
je
jg
push
ss
pop
mov
imul
sbb
inc
sahf
add
adc
les
dec
xchg
shlb
loop
mov
xchg
sub
das
mov
and
aam
movl
fsubrp
les
mov
imul
mov
mov
dec
jecxz
cmp
in
push
hlt
xor
in
cmp
lcall
or
scas
outsl
lcall
sbb
pop
rcrl
sahf
das
jno
push
sbb
shlb
shlb
popa
inc
sbb
test
pop
mov
jns
push
fisttps
shl
and
js
mov
in
stos
mov
mov
xor
fisubs
pop
out
pushw
jae
fcmovnu
sbb
pop
push
xchg
bswap
add
dec
iret
mov
jmp
in
lea
testb
arpl
or
pop
sub
push
sub
pop
pop
mov
aad
inc
jge
push
or
test
jae
mov
inc
lcall
into
jns
movsb
pop
out
repnz
mov
mov
inc
sahf
js
std
inc
pusha
outsb
punpckhdq
addb
adc
dec
bound
dec
test
mov
subl
dec
adc
adc
dec
lcall
xor
adc
sti
add
fs
enter
push
inc
ret
xor
mov
sbb
loop
aam
add
sbb
outsl
add
sub
outsb
xchg
dec
jge
fidivrs
ret
lcall
addb
mov
or
jg
out
enter
in
pop
pop
testb
jns
cmc
dec
sub
sbb
stc
push
inc
jge
subl
frstor
xor
pop
in
je
or
push
jb
inc
mov
mov
xor
fisttpl
cmp
cmp
pop
aad
nop
sub
add
pop
int3
xlat
or
mov
or
inc
or
shrl
dec
pushf
jp
test
std
or
test
cmp
push
xchg
pop
mov
jp
inc
and
repnz
not
jmp
fbstp
adcl
push
movsb
icebp
cmpsb
push
insb
outsb
mov
or
clc
push
push
call
cli
pop
inc
lods
mov
aam
dec
add
in
add
jle
ret
adc
add
and
movsl
dec
shll
popa
xchg
jo
sub
inc
les
mov
cmp
leave
cmp
pusha
shl
jmp
clc
jmp
aas
adc
xchg
out
jecxz
add
inc
out
lock
aam
fisttps
in
dec
imul
es
push
hlt
dec
cmpsb
jl
cs
loop
jg
inc
pop
mov
pop
dec
or
cmp
shll
stos
add
jo
jns
aad
inc
movsl
cwtl
test
dec
clc
xchg
add
mov
idivl
and
push
leave
and
int3
jno
add
pop
sub
das
rol
das
fs
clc
cltd
shlb
imulb
push
push
pop
sbb
push
repnz
shlb
dec
clc
dec
jnp
xchg
sub
add
cmp
lods
and
test
xor
xor
mov
mov
popa
and
clc
jle
notl
bound
shlb
and
mov
scas
or
mov
mov
out
inc
pushf
repnz
data16
dec
arpl
adc
xchg
sbb
repnz
das
stos
pusha
cli
aam
sbb
movsl
sub
xor
in
adc
add
arpl
dec
jnp
pusha
xor
dec
xchg
int3
xchg
call
lret
mov
mov
call
lcall
pushf
mov
test
movsl
js
pushf
test
sbb
mov
imul
pop
fsubrs
and
stos
in
mov
dec
push
fistl
imul
push
mov
in
out
scas
loope
mov
fcoml
push
mov
cmp
jns
cmp
lock
sbb
xchg
fistl
enter
insl
cli
mov
pusha
pop
ljmp
xchg
dec
std
mov
or
dec
push
jns
or
xchg
mov
call
scas
cli
mov
mov
fldenv
jo
pop
gs
fldl
mov
mov
mov
mov
out
out
andb
test
jbe
arpl
int3
mov
push
jns
and
add
pop
scas
push
int
std
filds
mov
jmp
jl
push
jae
sbb
data16
in
jbe
xchg
mull
dec
jnp
movsb
push
xchg
xchg
mov
add
dec
fwait
sbb
cltd
push
stc
int3
ds
ss
push
cmp
aas
mov
cmp
cmpsb
mov
xchg
scas
jo
scas
mov
dec
add
out
stos
das
test
dec
xchg
call
and
stos
xchg
push
rcll
cmc
jb
mov
mov
jb,pn
movsb
pop
addr16
int
sub
movsb
daa
out
pop
cmp
sbb
jecxz
fiadds
call
sahf
jae
jle
sbb
push
hlt
and
sub
mov
aam
jmp
std
sbb
mov
fistpll
popf
fistpll
push
movsb
inc
mov
push
xchg
push
scas
popf
push
pop
loopne
iret
adc
lcall
jecxz
cmp
dec
loopne
pop
outsl
pop
shr
and
pop
push
xchg
push
pop
or
neg
push
jno
imul
testl
mov
jbe
add
adc
adc
pop
insl
mov
add
mov
imul
pop
mov
stc
inc
aad
mov
xchg
orb
sti
outsl
cmpsb
mov
rol
mov
iret
cltd
inc
inc
ret
lods
xchg
xor
aam
inc
in
in
fisubrs
loope
les
mov
or
adc
fisubl
inc
loop
loope
aad
lock
cwtl
mov
or
int3
cmp
ret
pop
cmpl
out
xor
pop
push
in
aaa
mov
jae
sahf
mov
ret
dec
dec
inc
pusha
cltd
xchg
pop
sti
pop
aad
xchg
lds
push
ret
int
fldpi
roll
stos
leave
fs
add
fmull
loop
insb
mov
clc
je
mov
loope
data16
jb
jbe
cmpsl
push
dec
xlat
mov
jnp
fidivl
jge
and
push
xor
es
stos
ret
push
or
out
and
daa
insb
scas
xor
lock
daa
jp
arpl
rorl
mov
jmp
outsb
push
push
pop
push
dec
imul
dec
rolb
push
xor
pop
jb
sbb
sbb
sbb
testb
sbb
jae
sub
push
pop
aas
loope
daa
pinsrw
xor
repnz
sbb
push
mov
pop
sub
stc
or
xchg
es
pop
movsl
and
dec
adc
icebp
mov
add
jmp
inc
push
jp
mov
jae
inc
mov
sbb
sbb
xor
out
add
dec
mov
cmpsl
shlb
sbb
fbld
add
popa
pop
dec
add
mov
mov
pop
test
mov
push
inc
mov
inc
jbe
stos
sar
mov
mov
loop
fwait
sub
dec
decb
lds
xchg
inc
ficompl
int3
sub
sti
mov
jp
push
mov
int3
xchg
add
push
push
sub
mov
les
push
rcl
addr16
cltd
ret
mov
push
dec
jae
jo
insb
insb
mov
dec
lods
cmpsb
ficompl
hlt
das
add
insl
mov
mov
mov
dec
xlat
jnp
insl
arpl
jmp
mov
cmp
mov
push
sbb
outsb
jno
add
mov
mov
pop
sbb
jmp
pushf
pop
mov
inc
and
push
rorl
dec
sbb
xchg
mov
sbb
adc
mov
das
pop
lods
test
mov
addr16
int
xchg
add
aad
pop
int
fnstcw
scas
call
inc
pop
nop
stc
repz
pop
xor
pop
cltd
leave
ja
into
mov
sbb
xor
xlat
dec
sti
cli
fidivrs
in
add
adc
cmp
or
fcmove
push
mov
ss
sarb
xor
insb
test
outsl
movsl
cmpsl
mov
sbb
shll
andl
jle
mov
pop
fisttpll
sub
fs
pop
jno
mov
hlt
es
xor
jecxz
or
jns
lahf
or
nop
stos
clc
lahf
ljmp
int3
inc
pop
movsl
pop
push
outsl
lock
lock
stc
push
push
jno
pop
cmp
push
sbb
add
idivb
xchg
pop
test
insb
cmpsb
in
data16
out
inc
into
cmpb
jecxz
push
popa
fs
inc
pop
cmp
cmp
sub
notb
cmp
fs
dec
sub
shrl
sub
xchg
mov
aad
js
out
mov
iret
jg
cmpsb
xchg
add
sbb
cmp
or
add
aam
int3
movsl
repz
jecxz
imul
shlb
repnz
mov
xlat
cmpsb
xchg
loope
test
imul
mov
push
cmp
xchg
imul
lret
sub
imul
jo
sti
mov
popf
sbb
jae
ret
call
xchg
fiaddl
and
shrl
das
loopne
dec
xor
mov
push
loop
mov
int3
cmpsl
adc
ficomps
in
dec
or
int
mov
or
sti
xchg
pop
xchg
pop
add
lock
int3
cs
push
sbb
sub
add
dec
sub
insl
adcb
pop
xchg
add
cmp
jmp
aad
push
cltd
push
dec
cli
jl
inc
lea
insl
addr16
addr16
daa
add
insb
mov
aaa
lods
dec
outsb
cmp
aad
xchg
push
out
leave
cmp
jbe
enter
popl
cmc
inc
sbb
or
xchg
mov
subl
in
fwait
fs
in
mov
stc
add
lods
dec
mov
rcrl
or
or
jnp
xchg
add
add
pop
xchg
jle
add
loop
mov
shll
jp
je
dec
test
orl
ficompl
repz
add
test
jge
xchg
inc
fdivl
cs
out
in
mov
sti
xchg
xchg
int
dec
outsl
cmp
movsb
dec
das
jbe
sbb
pop
push
notb
push
pop
cwtl
adc
sub
mov
loope
jo
stc
mov
stos
lock
pop
jae
push
inc
push
pop
cwtl
inc
loope
and
das
sub
dec
insb
into
jle
fidivs
pop
nop
mov
sbb
std
mov
ret
roll
out
div
ss
dec
mov
push
push
enter
dec
dec
inc
pop
mov
add
fcoml
test
jbe
popa
sub
negb
hlt
pusha
pop
testl
xchg
enter
push
fwait
ljmp
movsl
fsubp
xor
mov
xchg
movsb
movsl
adcb
addr16
dec
hlt
mov
xchg
mov
sub
sbb
or
fidivs
add
mov
push
mov
and
ja
or
push
and
jmp
and
lcall
jb
adc
fs
sbb
sbb
and
rolb
xchg
std
push
test
fisttpl
sar
xchg
daa
jle
jb
add
add
dec
xchg
push
loopne
mov
xor
dec
cld
mov
fsubrs
xor
mov
mov
pop
fstl
push
mov
mov
sbb
stos
shrb
loop
aam
xor
fstpt
lods
in
aas
sub
fiaddl
icebp
shll
mov
dec
pop
xchg
mov
sub
lds
js
lret
lods
or
sahf
orb
sbb
jge
iret
xchg
lcall
inc
fs
dec
jb
flds
out
repz
mov
push
addr16
jnp,pt
inc
xorl
lds
mov
out
stc
scas
idivb
popa
ss
and
test
dec
mov
xor
nop
dec
arpl
cmp
xchg
pop
or
jl
xor
loopne
fs
lock
jbe
loop
movsl
cmpsb
pop
nop
aaa
in
push
xor
push
ss
mov
cmp
outsl
mov
cmp
bound
dec
aas
lods
loopne
adc
pop
sbb
cmp
sbb
mov
xor
push
hlt
mov
fdiv
test
fildl
xor
popf
or
lds
xor
jp
jnp
mov
pop
xor
out
fdivrs
inc
arpl
test
mov
int3
int3
adc
out
scas
push
cmp
in
stos
lahf
push
cli
adc
jbe
dec
mov
test
mov
ret
mov
outsb
push
fsts
xchg
sub
test
jae
std
or
cli
ret
push
cmp
mov
add
mov
mov
jp
push
popf
push
jl
cmp
repnz
dec
mov
bound
iret
cmp
aam
add
repz
push
adc
sub
scas
in
jbe
push
stc
push
leave
dec
inc
pop
add
pusha
dec
jno
jl
rcr
loopne
inc
mov
dec
nop
push
adcl
loopne
pop
adc
push
leave
sahf
add
mov
sbb
leave
push
lock
inc
add
cmpb
sub
clc
mov
cld
inc
inc
mov
pop
pop
stos
ja
loop
mov
pop
push
xor
cmp
jmp
orl
xchg
push
es
sbb
cmp
jl
stos
int3
xchg
inc
inc
idiv
js
sbb
mov
rcrl
and
mov
cs
lahf
fwait
in
mov
subl
hlt
xor
push
imul
lcall
sarl
fdecstp
lret
out
fdiv
mov
xchg
add
mov
cmp
lea
fs
sbb
inc
sub
lret
popf
dec
xchg
sarb
xchg
xchg
mov
lret
sub
or
pop
cmpsl
cmp
cmc
insb
repnz
mov
xor
in
cltd
pop
aam
mov
add
repz
mov
inc
gs
in
es
xor
add
inc
sub
popa
bound
imul
dec
adc
mov
ret
ret
mov
aad
cmpl
sar
repz
lea
jge
sbb
ficoms
jl
in
test
or
xchg
mov
adc
dec
aas
mov
scas
in
lods
pop
fisttps
cs
cmp
insl
xchg
loop
push
out
repz
cmpb
sub
jmp
cmp
and
cld
lods
jns
lcall
lret
inc
mov
bts
cs
imul
push
dec
push
mov
incl
sti
or
cmp
mov
scas
dec
int
out
xchg
cs
mov
mov
in
leave
test
and
imul
cmpsb
sbb
aam
sahf
pop
pushf
cli
mov
jo
ret
lods
jg
ss
lahf
loope
test
dec
nop
pop
out
faddl
movsb
pushf
daa
repnz
das
mov
dec
sub
xchg
pusha
push
mov
outsl
mov
repz
cwtl
xchg
add
repz
push
adc
std
fimuls
sbb
push
push
or
lret
xchg
fldt
fstpl
xchg
repnz
lcall
mov
loop
adc
xor
sub
pop
scas
je
aas
add
loope
sbb
popf
inc
pop
loope
and
lods
lea
loope
dec
lods
imul
cmp
mov
add
inc
or
jp
add
add
sub
inc
cmova
outsb
cmpl
xor
insb
cmc
ds
dec
sub
or
sahf
cld
add
xor
xor
jl
sbb
sub
jl
dec
lods
push
sub
adc
lods
push
cmpsl
ds
mull
sti
aas
cmp
mov
movsb
ljmp
aaa
xor
and
aad
inc
ljmp
insb
push
rcll
fisubrl
cld
jp
clc
cmc
push
lcall
inc
addl
mov
imul
ja
inc
out
jge
and
aaa
into
jb
pop
syscall
sbb
mov
or
lods
roll
movsb
sub
xchg
imulb
xchg
xchg
cmp
mov
pushf
xor
mov
sbb
stc
xchg
or
lcall
adc
je
insb
mov
shlb
mov
sti
dec
mov
jb
or
add
sub
mov
rorb
jecxz
xor
add
cwtl
fistpl
or
mov
dec
aam
inc
and
and
js
push
dec
insb
and
not
lret
or
cmp
jne
aas
cmp
test
daa
popa
and
enter
cmpl
sbb
jle
push
pop
jg
pushf
add
inc
xlat
sub
clc
jge
sub
lret
jle
sbb
jb
sub
mov
jmp
loope
insl
adc
stos
test
push
lods
fdivs
push
popa
jb
jecxz
jp
repnz
lahf
dec
daa
mov
sub
mov
pop
adcb
jg
fstpl
negl
mov
jno
adc
in
sbb
dec
gs
test
outsl
inc
cs
test
notl
jne
loope
lods
xchg
sub
nop
xchg
ljmp
or
data16
loopne
int3
fsubl
pop
scas
and
fidivl
int
pop
mov
cltd
jns
jecxz
sub
jbe
aas
fsts
push
pop
jne
dec
push
das
sub
loope,pn
sti
pushf
sbb
adc
mov
and
jecxz
dec
repz
mov
es
mov
dec
test
mov
sbb
stc
sub
pop
jne
cmpsb
roll
mov
and
cmpb
mov
jae
std
icebp
dec
xchg
pop
mov
adc
add
xchg
xor
mov
cmpsb
stos
add
jp
sbb
scas
mov
dec
mov
adc
loop
and
int
push
adc
and
and
or
call
sarb
jp
divb
adc
popa
mov
sti
xchg
xchg
and
sbb
pop
mov
xor
push
dec
cmp
cli
lods
sub
xchg
inc
cwtl
mov
ficomps
adc
fisubrl
push
mov
jecxz
je
repz
aad
incl
outsb
mov
jle
add
jbe
cld
xor
mov
xchg
jmp
cli
add
dec
pop
rcrl
stc
fmul
bound
pop
dec
jnp
adc
xor
jg
jns
mov
leave
repz
imul
hlt
mov
arpl
or
cmpsl
gs
ds
inc
push
out
cmpsb
fwait
mov
outsl
mov
cli
or
or
inc
aas
and
iret
in
add
ds
and
fs
sahf
cmp
icebp
lods
dec
push
cmp
xchg
cwtl
aas
ljmp
mov
addb
imul
or
mov
inc
out
addb
rcrl
adc
shll
movsb
push
dec
cltd
jge
ret
int
adc
daa
inc
hlt
stos
sub
shl
cld
xor
add
sbb
xor
push
pusha
repnz
sbb
jo
icebp
out
and
jns
dec
insb
loop
mov
inc
lds
lret
insb
push
repnz
in
arpl
or
ljmp
lock
add
cmpl
dec
sbb
inc
sub
stc
popa
dec
loopne
sarb
jge
andl
xchg
sub
addr16
xchg
mov
and
call
inc
fs
push
fidivl
cmp
xchg
add
out
mov
sarl
stc
out
imul
sub
cltd
inc
sub
sti
mov
mov
mov
mov
cld
cld
fwait
int3
xchg
xchg
mov
mov
shlb
sbb
orl
xor
sub
out
clc
push
jns
pop
or
scas
addr16
push
in
or
lret
jle
cmp
mov
pop
mov
jge
and
pop
cmp
lcall
mov
cltd
and
in
loope
add
test
sub
cld
dec
inc
call
push
sbb
xlat
push
xor
push
mov
test
cli
mov
cmpsb
xchg
jns
popa
mov
and
mov
nop
cmp
or
imul
jae
xor
and
sub
or
jp
addr16
fisttpl
pop
das
loop
andl
jmp
xor
jg
fcom
cmpsl
lcall
xchg
sub
sbb
in
jb
frstor
orb
adc
insb
aam
sbb
rolb
ficompl
xchg
xor
and
add
xor
fildl
rcrl
jle
xor
mov
mov
lret
add
ja
popf
jae
pushf
add
rcr
push
popa
int
mov
lahf
jl
jae
subb
mov
out
mov
cltd
scas
bound
push
mov
add
movsb
test
jp
cld
mov
adc
push
push
mov
sbb
adc
jns
cmp
test
mov
out
mov
add
out
cmp
mov
popa
ds
push
xchg
mov
mov
cmpsl
cs
pushf
cmc
pop
out
pop
mov
stos
lea
test
je
and
add
jmp
imull
movsl
mov
fadds
sbb
and
dec
loope
xchg
cltd
add
lret
aad
sub
lock
cmp
cli
data16
xchg
sub
xor
inc
stos
xchg
popa
cmpsb
pop
fadds
test
repz
data16
pop
mov
push
out
pop
icebp
scas
loope
ds
push
inc
loopne
push
cmpsb
inc
enter
xchg
dec
sbb
pop
out
or
icebp
mov
ret
cmp
sub
lcall
fdivl
xchg
cmp
inc
sub
nop
mov
ficomps
xchg
inc
das
lea
mov
lock
lcall
sub
sbb
jmp
in
std
aad
hlt
inc
dec
push
icebp
lahf
adc
dec
std
inc
mov
inc
cs
cli
cwtl
mov
push
push
lods
or
popf
sahf
mov
mov
pop
sahf
je
sbb
js
jae
enter
sub
aas
jb
pop
push
popf
adc
xchg
mov
jno
fdivp
es
and
mov
mov
jp
xor
pop
call
mov
test
shl
popf
jne
ret
popa
icebp
lods
testl
fnstsw
fadd
sti
outsl
dec
movsl
jns
pop
cmpsb
mov
movsb
push
jb
push
fldl
pop
dec
jns
clc
add
push
push
jno
repz
cwtl
mov
mov
lds
inc
cmpsl
pop
push
scas
fwait
sub
add
mov
push
and
jge
mov
daa
jae
sahf
adc
xlat
loope
insb
pop
dec
add
jbe
ret
xchg
pop
push
push
fistpll
xchg
mov
rclb
pop
lret
mov
mov
stos
cmp
mov
or
pop
xchg
pusha
lret
lods
faddp
and
into
adc
in
hlt
mov
xchg
pop
lret
jmp
hlt
or
or
push
xchg
outsb
insw
push
pushf
pop
jmp
inc
arpl
sbb
aas
testl
adc
cs
mov
xor
mov
mov
xor
mov
out
add
dec
out
cli
pushf
mov
push
cmp
pop
mov
ror
and
sti
mov
outsb
sub
leave
or
jno
ja
stc
inc
cmp
lret
xchg
mov
ljmp
or
sbb
into
dec
rolb
mov
add
pop
out
and
mov
xchg
in
aas
jle
xchg
push
xchg
add
inc
test
mov
mov
xchg
jo
fistpl
test
or
sbb
xchg
in
mov
adc
lahf
neg
add
ja
stos
popa
mov
bound
in
cltd
fcmove
test
xchg
pop
fidivrl
loopne
jmp
mov
push
pop
add
fadds
or
or
mov
popa
sbb
or
mov
pop
outsb
sub
or
inc
xor
and
mov
jmp
mov
push
push
pop
lods
cmp
pop
jne
mov
inc
int3
xlat
jecxz
loope
div
stos
sub
loope
cmp
xlat
mov
dec
xor
test
inc
pop
das
or
scas
sbb
push
out
iret
and
test
jg
stos
test
hlt
data16
push
sahf
adc
dec
push
or
clc
adc
fstp
mov
or
add
imul
mov
andl
cmp
push
fadds
xchg
movsb
pop
mov
mov
mov
mov
les
jo
push
xor
mov
mov
lods
push
jmp
bswap
out
mov
push
loop
imul
lea
and
pop
das
mov
xor
leave
out
adc
xchg
or
xchg
mov
push
push
push
outsb
xlat
adc
mov
fisttpll
jno
mov
outsb
mov
fistpl
or
aam
in
push
adc
xchg
es
mov
pop
fdiv
out
mov
sbb
cmpsl
mov
leave
inc
jnp
cmp
inc
in
ljmp
lds
pop
sub
mov
inc
dec
jae
dec
loope
jp
movsb
lds
ja
movb
mov
pop
iret
sbb
loope
jo
fdiv
jle
out
ret
and
add
xchg
or
mov
and
jnp
test
fbstp
ret
mov
and
pop
xchg
adc
inc
addr16
in
int
sub
mov
pop
clc
push
sub
jle
dec
push
inc
adc
sub
sbb
jo
rcrb
shlb
nop
pop
lret
ret
jns
test
iret
movsl
aaa
dec
or
cmc
popf
dec
aad
popf
ljmp
xchg
nop
mov
inc
pop
stc
add
scas
mov
out
loope
fucompp
out
leave
fdiv
das
testl
and
inc
es
dec
push
lods
xchg
test
or
lret
shlb
or
cmp
inc
fwait
adc
popa
repnz
pop
sbb
push
and
push
shl
cmp
sub
test
dec
pop
xor
iret
lret
aam
or
addr16
fiaddl
es
in
jge
js
flds
push
push
imul
outsl
repnz
fsubr
ljmp
cwtl
sbb
mov
scas
imul
mov
jo
jae
adc
and
jle
movsl
shlb
cld
jnp
dec
in
inc
fildll
test
rclb
inc
adc
imul
xor
inc
icebp
arpl
lea
in
jae
loopne
xor
push
xchg
iret
mov
sub
and
xchg
imul
mov
xchg
cmp
cmp
cmp
mov
bndldx
inc
or
dec
inc
mov
cmp
flds
sbb
mov
xchg
push
decb
mov
or
nop
aaa
rcrb
mov
testb
out
scas
pop
push
cli
stc
shrb
out
filds
aad
cmc
mov
xor
aam
xchg
inc
ret
xchg
add
ret
aaa
imul
shlb
stos
xchg
pop
jmp
ficompl
jl
xor
mov
jns
and
sub
mov
pop
outsl
dec
dec
sub
jl
jo
in
adc
call
cld
or
lahf
push
xchg
test
repnz
jle
iret
roll
bound
adc
int
bnd
adc
mov
leave
lds
subl
les
add
pop
mov
jnp
jnp
jo
jmp
in
mov
dec
mov
mov
and
and
cmp
xchg
mov
add
insl
xchg
pop
jnp
mov
sbb
mov
xchg
pop
cmp
jae
xlat
clc
xchg
mov
mov
mov
out
outsl
push
mov
push
outsb
or
push
xorl
sahf
fs
inc
and
dec
fdivs
xchg
gs
data16
sub
mov
mov
ljmp
or
xchg
test
add
lods
pop
sti
mov
adc
sbb
orl
addl
inc
xor
loope
dec
mov
ljmp
fnstsw
les
and
xlat
pop
xchg
inc
ret
fbld
pop
test
pop
iret
pusha
cmp
fbld
add
mov
loop
imul
pop
jo
repz
xor
es
mov
push
fmuls
jle
push
and
fisubrs
rcr
stos
push
pop
push
sub
pop
cmp
dec
sbb
lcall
xor
dec
and
adc
and
sub
jae
pop
or
and
loop
int
sar
cmpsb
stos
add
pop
pop
mov
pop
mov
sub
sbb
mov
inc
or
cmp
ljmp
aaa
cmp
push
ss
outsl
or
jecxz
ficoml
add
movsl
cli
sub
sbb
jg
mov
pop
mov
or
dec
adc
ja
out
inc
negb
or
movsb
out
inc
add
lret
and
dec
lea
das
mov
jne
dec
lahf
and
in
out
mov
test
in
or
push
push
cli
stc
popf
cmp
lods
stos
or
loopne
fdivl
dec
pop
pop
adc
aas
xor
ror
fnstenv
or
rcl
scas
and
xchg
aaa
push
shl
jmp
fcompl
mov
insl
or
and
mov
std
test
or
jnp
mov
push
hlt
xor
sbb
lea
orl
cmpsl
mov
out
and
lahf
or
xor
popf
pop
fistl
iret
dec
mov
mov
daa
icebp
sbb
sbb
aaa
mov
mov
xlat
imul
or
push
imul
push
cmc
inc
clc
ret
js
scas
js
movsb
xchg
lcall
jno
popa
je
inc
xchg
adc
aaa
jo
jge
prefetchw
inc
or
jo
pop
push
sbb
and
call
or
arpl
and
cmp
xchg
clc
pop
xchg
mov
inc
mov
mov
ljmp
xchg
sbb
push
cs
cmpsl
cltd
scas
pop
das
cmpsl
sbb
addr16
jae
mov
xor
jle
xchg
and
inc
jp
inc
dec
repnz
pop
jl
pop
xchg
adc
movsb
push
rcl
adc
je
decl
cli
pop
adc
mov
sub
push
mov
sbb
daa
and
imul
cmp
orb
add
fisttpll
rclb
xor
pop
repz
add
jl
dec
rolb
mov
pop
fcoml
sbb
retw
xchg
cmp
inc
sub
jg
shlb
cmp
das
cmc
fnsave
es
ja
xchg
xor
or
xchg
shl
leave
shl
pop
push
mov
sahf
inc
push
xchg
xchg
jl
jns
pop
in
sbb
xchg
fucom
popa
ret
mov
inc
xchg
mov
adc
mov
mov
push
in
aam
insb
mov
inc
mov
daa
adc
vpor
jecxz
orl
mov
add
iret
mov
pop
mov
sub
xor
ds
cli
in
int3
jle
xchg
cmp
jne
dec
add
mov
push
xchg
movsb
arpl
popf
xchg
push
lds
push
pop
enter
or
lret
inc
mov
insl
xor
fldcw
fildl
daa
adc
adcb
push
mov
outsb
or
sub
and
mov
in
mov
or
stos
sub
int
test
jge
popf
add
fsubs
jnp
or
loopne
int3
jbe
bound
je
and
mov
add
in
mov
adc
add
roll
xor
push
rcll
cmpsb
fldt
cs
shrl
cli
test
mov
in
inc
lods
iret
adc
fimuls
das
push
bound
fs
jbe
or
call
mull
sbb
int
cwtl
dec
push
cmp
out
and
movsb
aaa
adc
dec
outsb
or
xchg
daa
pushl
in
dec
stos
push
sbb
or
loope
int
shl
sub
xlat
add
dec
dec
mov
andb
aaa
jne
loopne
sub
les
sbb
mov
stos
test
adc
orl
dec
stos
cmpsl
sbb
insb
sub
outsb
inc
iret
outsl
inc
sbb
mov
pusha
pop
test
push
pop
es
push
daa
jo
bnd
ret
cmp
movsb
dec
mov
dec
shrl
loopne
sub
push
cmp
push
dec
dec
sahf
outsb
out
lcall
ds
mov
mov
adc
fwait
sbb
js
ret
mov
out
push
bsf
pop
cwtl
imul
aad
dec
and
lea
aaa
push
sub
std
mov
or
mov
jnp
xor
xchg
mov
xchg
adc
icebp
mov
adc
test
jle
es
fs
inc
and
jne
popf
lods
into
sub
outsl
mov
mov
repnz
cmp
jae
rorl
mov
pop
sbb
add
hlt
and
sub
js
movsb
jmp
cmp
filds
xlat
fsubrp
pushf
mov
fcmovnb
inc
pop
or
rcl
adc
lcall
xor
sarb
mov
cli
xchg
jecxz
jne
pop
mov
and
add
imul
inc
lock
loopne
daa
scas
movsb
jg
lods
aam
lret
dec
adc
dec
imul
push
jns
add
xchg
xchg
pop
sbb
ss
cmpsb
sub
out
in
add
in
lods
inc
xchg
inc
cmpsb
jmp
insb
pop
xor
mov
mov
je
out
je
xchg
testl
movsb
inc
testl
push
sahf
stos
clc
outsl
jno
push
cmp
out
cmp
mov
push
push
sub
in
mov
in
test
sbb
mov
and
shll
pop
nop
mov
jb
cmp
pop
arpl
adc
mov
inc
push
aaa
scas
stos
jno
add
sbb
aaa
push
push
dec
gs
lret
test
fnstsw
pop
je
cmp
enter
cmc
pop
inc
test
jmp
lret
jbe
shll
imul
ret
lods
cltd
dec
and
test
test
mov
cmpb
and
pusha
out
cli
xchg
xchg
xabort
pop
imul
jecxz
pushf
pop
push
and
mov
es
dec
mov
adc
rorb
cvttps2pi
out
shll
mov
fxch
pushf
scas
imul
adc
cld
ds
pop
push
adc
dec
add
mov
cmp
sub
xlat
or
mov
or
aaa
jg
fwait
loop
mov
lahf
push
jp
call
iret
xchg
inc
dec
xchg
xor
xchg
and
xchg
xchg
ret
out
loopne
dec
popf
sub
rcll
xchg
repnz
add
xlat
sub
push
mov
mov
jae
push
mov
arpl
push
push
mov
scas
push
inc
mov
push
in
int3
dec
add
cmp
mov
xchg
mov
add
inc
outsl
mov
mov
jge
stos
bound
pop
add
cmp
inc
dec
js
mov
push
leave
mov
sbb
push
imul
and
xchg
sub
aam
shl
pop
imul
jmp
inc
fisubrl
ss
out
lcall
dec
pop
popf
mov
sahf
mov
icebp
insl
gs
stc
dec
sub
test
push
call
ss
insl
jo
or
xchg
mov
cmp
dec
dec
shl
add
and
mov
ljmp
xchg
push
jle
add
mov
xchg
shl
shlb
incb
ljmp
mov
insl
out
pop
xor
leave
or
fsubrl
push
xor
fwait
xchg
cld
testb
and
adc
test
and
cld
sbb
cmp
lcall
jns
mov
jle
mov
push
mov
add
jae
pop
pop
lods
or
mov
mov
mov
test
movb
scas
cld
outsw
insl
es
js
adc
test
or
arpl
xchg
hlt
lods
sbb
cmp
movsl
add
shl
cltd
arpl
out
sbb
sbb
repz
mov
push
loope
pop
add
iret
cmp
cltd
filds
push
les
pushf
jmp
test
jb
push
jmp
cmc
jbe
and
sbb
cltd
push
lahf
xchg
das
jno
jg
xor
push
repnz
popa
popa
cmpsl
cmp
cltd
cmp
into
mov
push
adc
outsb
popa
inc
sbb
fwait
ss
dec
cmp
push
mov
loope
gs
inc
xorb
mull
pop
adc
daa
sbb
or
mov
repz
bound
add
fildll
add
jle
dec
and
pop
out
cmp
movsb
mov
ret
loopne
xlat
fnstenv
lret
ljmp
popa
pop
mov
lds
xor
adc
cmpsb
out
xchg
xchg
out
dec
inc
pop
fidivrl
shll
mov
or
push
aam
sbb
and
inc
lods
into
lods
jecxz
sbb
and
out
xchg
test
outsb
xor
arpl
mov
xor
cmpsl
test
push
jg
sub
cmpsl
int
test
arpl
aad
repnz
loope
adc
in
adc
shlb
pushf
insl
adc
mov
pop
mov
sti
jo
popf
iret
sub
jns
sbb
mov
cltd
push
jmp
or
lcall
outsb
cmc
and
cmc
push
or
into
sbb
push
pop
outsb
int3
cmpsl
mov
dec
mov
mov
cmpsb
sub
int3
nop
pop
jno
jp
or
jno
loopne
les
sbbl
aam
mov
cmc
ljmp
and
and
mov
xlat
fs
pop
mov
les
sub
es
faddl
adc
dec
lret
jno
int3
xchg
popf
inc
loope
pop
std
andb
in
dec
jne
or
jmp
mov
test
or
cmove
pop
inc
call
fwait
daa
movsl
icebp
imul
nop
sbb
mov
jo
jge
std
push
cld
outsb
pop
fstl
pop
es
pushf
push
pop
adc
dec
push
aas
adc
add
imul
inc
and
aad
rol
push
lret
rorl
push
push
inc
aaa
test
xor
mov
push
cmp
nop
cmc
lcall
fdivl
in
jp
xor
push
push
leave
jp
add
popa
fs
out
xchg
lret
sbb
inc
cmp
movsb
pushaw
int
jno
xor
pusha
sbb
sbb
inc
jno
mov
std
pop
jns
mov
jbe
leave
mov
testl
jae
imull
dec
in
or
rorl
sti
int
call
add
mov
inc
pushl
inc
pop
fadds
pop
es
mov
das
cmp
fcmovbe
pop
mov
mov
aad
insb
fcmove
jae
pop
ret
cwtl
jmp
and
sbb
or
lret
sub
sbb
dec
test
in
add
push
in
cmp
cmpsl
loope
sub
sbb
add
dec
mov
push
push
sub
in
mov
jo
push
jl
lahf
test
insl
push
loop
icebp
jmp
push
fisubrl
cmp
fs
fcomps
mov
leave
xchg
mov
fmuls
jmp
mov
and
cmp
sahf
scas
stc
test
mov
dec
cltd
xor
lahf
in
sub
and
mov
negb
xor
data16
pop
add
xchg
mov
scas
mov
hlt
rcrb
xchg
xchg
fadd
mov
adc
mov
sbb
push
sti
in
call
xor
push
jg
pop
inc
call
mov
stc
adc
push
mov
xchg
mov
mov
mov
in
mov
pop
inc
push
push
mov
mov
dec
xchg
inc
das
int3
or
jo
fiadds
dec
aad
inc
jmp
lea
dec
call
stos
leave
nop
push
cmp
sbb
add
aad
ljmp
mov
pop
mov
dec
mov
das
push
aad
push
sbb
sahf
loope
mov
xchg
or
dec
ss
loop
fs
jmp
mov
in
jecxz
fnstenv
add
adc
in
fidivrl
adc
cmp
mov
jo
jbe
into
es
testb
mov
fidivs
je
push
das
sbb
clc
pop
or
pop
push
shl
sub
ja
sbb
push
clc
sbb
cwtl
pop
mov
xor
mov
ds
push
aad
loop
cmpsl
call
lds
xchg
pushw
jmp
sub
mov
lods
ja
mov
sbb
mov
add
out
push
cmp
or
pushf
out
outsl
mov
pop
cmp
insl
inc
test
stos
jl
xchg
pop
fsubrl
cmp
add
popf
dec
popa
jmp
stos
popa
adc
pop
shl
xor
sbb
in
popa
push
cli
in
aad
pop
lcall
dec
movsl
ja
divb
icebp
inc
pop
xor
cmpsb
cmp
sub
lret
cs
bound
adc
push
mov
test
xor
push
movsl
push
stos
and
loopne
jbe
test
jb
pop
sarb
addl
loope
or
and
out
dec
jmp
jae
nop
sub
ss
mulb
mov
adc
lock
push
push
in
xchg
cltd
loop
mov
or
and
cmpsb
dec
jnp
lret
mov
adc
insb
sub
bound
test
mul
dec
mov
stc
incl
fs
ss
roll
cmc
movsl
cwtl
xchg
ja
dec
or
sub
sub
mov
mov
sbb
adc
scas
jae
sbb
cs
push
pop
jne
scas
int3
pop
and
aaa
push
inc
pop
lock
lock
xchg
popf
iret
pop
aam
jbe
jae
add
jecxz
in
ret
loope
push
or
inc
cmp
and
dec
in
push
jle
mov
xchg
sbb
or
pop
repnz
inc
arpl
into
inc
cmpsb
fnsave
lds
outsl
adcb
mov
aam
jae
or
mov
sbb
push
out
fs
xor
fcomps
adc
pop
stos
push
add
dec
adc
imul
xchg
jns
js
add
js
xchg
imul
add
sub
dec
lods
mov
sti
fiaddl
rcrl
jl
insb
cmp
jno
push
pusha
les
ficomps
pop
jbe
dec
cld
mov
cltd
arpl
sbb
test
loope
out
jmp
xchg
inc
add
xor
stos
cli
fcomip
mov
adc
out
movsl
int
outsl
enter
repz
mov
loope
in
aas
daa
jns
scas
fisubl
push
dec
fildl
dec
jle
xchg
xchg
mov
movsb
cmc
jge
cmpl
int3
sahf
inc
aam
dec
sbb
cli
or
pop
jmp
mov
nop
aas
jecxz
fstpt
sarb
repz
adc
es
sub
pop
cli
inc
cld
jb
jmp
enter
pusha
rcl
shrl
ja
pop
sbb
sub
daa
inc
loop
add
jbe
out
sarb
das
es
sar
sbb
cmc
shlb
enter
jle
lret
and
aad
jns
orb
call
mov
std
xchg
xor
or
xor
pop
or
push
insb
mov
mov
sahf
jmp
dec
stc
inc
int3
sti
lahf
xor
and
cmpsb
jo
mov
push
ljmp
push
lret
imul
sbb
je
arpl
jne
pop
icebp
xchg
push
mov
or
leave
loop
adc
andb
in
sub
outsl
mov
cmc
sti
xchg
dec
cmp
orb
mov
mov
jb
jbe
jns
in
shrb
lea
enter
mov
shlb
jbe
push
loop
jmp
test
fnstcw
nop
andl
pop
int3
push
fldt
xor
leave
pop
sbb
pop
inc
xor
pop
je
add
popa
xor
es
and
ret
pop
sbbb
or
cmp
in
and
or
add
mov
movsb
int3
repnz
dec
outsl
mov
rcrb
adc
ja
sub
mov
in
lods
lods
mov
subl
fisubl
add
push
jg
push
enter
std
or
fistps
icebp
xchg
pop
arpl
into
scas
fdivl
mov
cmp
dec
hlt
xchg
sahf
dec
add
sub
fs
addr16
pop
orb
test
stos
ss
orb
repnz
add
xor
in
jne
cmp
cmp
mov
loopne
push
loop
jecxz
add
push
jmp
jnp
push
xlat
ror
sbb
out
pop
cmp
and
add
ficoml
repnz
push
sub
in
push
ffreep
mov
into
and
mov
test
jne
outsb
test
mov
mov
inc
bound
pusha
lock
ficomps
fadds
test
dec
push
cmc
push
icebp
add
les
push
sbb
add
sti
and
pushf
dec
pop
pop
int3
mov
clc
shlb
cwtl
inc
xchg
int
fsts
cvtdq2ps
pop
or
test
fstl
stos
shrl
rcrl
push
mov
test
je
pop
sub
pop
mov
aam
ja
add
jge
das
leave
pop
jmp
cmp
dec
xchg
cmp
leave
mov
leave
push
inc
stos
xor
sub
icebp
push
add
jg
pushf
sbb
clc
mov
repz
in
inc
mov
aad
mov
jo
int
sbb
xor
sbb
stos
jno
sti
in
cwtl
adc
cld
mov
out
and
xchg
aas
sbb
in
rorl
aas
xchg
lret
mov
lods
xor
lcall
mov
mov
or
jg
out
push
dec
rcr
es
inc
data16
mov
pop
sbb
sbb
fildll
mov
jo
rol
cmp
outsb
xchg
xor
cs
jno
xor
inc
scas
lea
out
mov
dec
xchg
cwtl
xor
daa
scas
lods
lret
mov
repnz
mov
aam
jmp
sar
inc
sbb
je
mov
mov
in
shl
adcb
cwtl
jg
push
addb
subb
xchg
mov
stc
push
xchg
or
or
push
xchg
xor
xchg
mov
jge
and
mov
jle
and
push
mov
faddl
int3
popf
flds
mov
sub
xchg
into
inc
in
dec
or
pop
mov
add
dec
loop
and
and
mov
mov
jne
fdivp
mov
cmp
xchg
jns
xlat
dec
imul
xor
jbe
and
idivl
mov
mov
cmc
aas
lret
or
xchg
shrl
outsl
test
sub
mov
sub
adc
xor
in
mov
jo
outsb
mov
push
mov
inc
cmp
mov
xor
push
pop
sub
fldt
pop
shll
outsl
push
push
sub
in
fnstcw
in
mov
mov
dec
rolb
jns
test
sti
lahf
mov
inc
jge
sahf
in
push
adc
mov
daa
ljmp
inc
scas
xor
pop
cmp
pop
sbb
cmp
pushf
cltd
mov
and
xchg
dec
out
popa
cwtl
inc
pop
xchg
add
test
shrl
lock
sbb
fstpl
fistl
jnp
movsl
mov
dec
in
and
lock
mov
jbe
rcll
fcmove
jnp
fnstsw
jb
mov
mov
mov
xor
aam
call
shrb
pop
xchg
pop
inc
ja
cli
push
fists
inc
or
mov
add
pop
mov
outsb
and
lock
and
sbb
and
insl
pushf
add
cli
stos
in
test
pushf
jo
or
scas
rorb
or
mov
xchg
mov
xrelease
pop
push
repz
jge
jle
cmc
inc
adc
icebp
jo
push
jo
fs
outsb
mov
pop
jle
or
sub
rcrb
pop
imul
ret
push
mov
popa
inc
jbe
insl
xchg
xchg
aaa
cmp
ljmp
xchg
mov
sub
sbb
xor
jmp
ss
pop
inc
rcrb
jmp
inc
in
rep
loop
stos
or
adc
loopne
sub
dec
mov
lret
lds
cmpsb
and
jne
lea
imul
aam
sbb
sar
and
jp
xchg
pop
push
mov
or
jbe
mov
adc
loope
jo
dec
mov
lahf
shrb
and
dec
rclb
stos
pop
xchg
movsb
lret
fimull
sub
inc
adc
push
cmp
xchg
push
xchg
mov
sub
rcrl
gs
dec
push
adc
sub
mov
dec
inc
out
repnz
icebp
std
out
cltd
leave
ja
xchg
jb
mov
mov
hlt
mov
mov
lcall
lret
xor
mov
xchg
lret
adc
xchg
ds
dec
mov
push
inc
shrb
adc
mov
or
sub
push
or
xchg
jo
lcall
cltd
add
lods
hlt
or
mov
push
xor
std
das
aad
push
xchg
fists
out
sbb
jne
mov
push
imul
or
mov
pusha
push
into
test
mov
xor
loope
pop
add
repz
xchg
repz
mov
das
mov
push
arpl
inc
pcmpgtd
fistpl
hlt
lods
push
outsl
jbe
and
lods
fistl
subb
add
push
dec
pop
sarb
call
sbb
push
je
mov
in
jg
push
out
call
popa
mov
int
jne
dec
mov
mov
imul
ret
sub
mov
bswap
ret
or
repz
inc
and
icebp
out
push
imul
add
inc
pusha
fucomip
leave
jp
or
lcall
imulb
sbb
ret
inc
xchg
rclb
push
shrl
test
test
rcll
adc
inc
or
push
sti
test
je
push
push
jbe
xchg
out
push
mull
in
je
insb
inc
fwait
xchg
aas
test
aam
xchg
inc
mov
cmp
arpl
cld
add
les
pushf
jmp
sub
sbb
outsb
or
sub
push
adcl
clc
imul
fdiv
or
inc
popf
les
sub
fimuls
in
adc
xchg
lcall
cmpsb
jl
or
pop
sub
and
cltd
xor
mov
jo
push
mov
add
or
jae
adc
gs
and
and
ja
lret
cmc
sub
movsb
ret
test
sub
xchg
mov
ds
jg
dec
arpl
mov
call
rcll
test
push
add
and
test
sbb
add
mov
push
je
ja
addb
sub
or
insb
fnstsw
jecxz
mov
enter
jp
cs
repz
mov
and
lods
xchg
inc
fistpll
cmp
mov
jno
cmp
sub
sbb
insl
addr16
mov
lods
nop
rcll
sahf
test
push
in
pop
adcl
je
in
jg
out
adc
add
jg
push
les
incl
add
addl
ja
push
mov
sbb
xor
sbb
insb
mov
sub
sub
js
aas
dec
push
les
push
dec
add
push
push
ret
push
int3
or
repnz
xor
pop
or
add
pop
pop
mov
pushf
mov
div
xchg
mov
xchg
jae
aad
sti
cmpsb
cmp
rolb
jg
jmp
and
xor
std
xchg
xor
test
std
jb
int3
push
sub
addr16
push
ror
jbe
adc
pop
outsb
or
aad
imul
xchg
pop
test
pcmpeqb
inc
and
mov
stos
pop
add
adc
stos
ds
dec
lea
shl
pop
test
stc
inc
loope
test
stos
xor
adc
sbb
xchg
rcrl
and
aam
jl
xchg
popf
jnp
cltd
pop
gs
shll
les
fucom
or
xchg
jg
rorl
xor
sbb
cmp
subb
lock
fsts
data16
jle
pop
cmpl
push
rcr
and
pop
xchg
mov
mov
pop
lahf
and
pop
cmc
fstl
jmp
mov
lahf
in
subb
mov
and
lea
fstpt
stc
push
lods
cld
nop
cmpsl
sbb
stos
test
loopne
push
imul
jbe
lds
or
xchg
sarb
xchg
xorl
pop
nop
cmp
loop
jno
or
mov
jge
xor
jecxz
cli
and
cmp
mov
bnd
data16
shr
lcall
clc
cmp
pusha
pop
mov
out
outsl
outsb
popa
inc
jnp
popa
push
xor
sbb
aas
shrl
outsl
enter
aas
xchg
dec
pushf
adc
cli
stc
test
in
jno
repnz
adcb
lock
pop
es
pushf
aad
mov
cmp
push
out
lret
scas
loopne
in
jo
ljmp
iret
or
xchg
mov
adc
mov
clc
movsb
scas
adc
jg
sub
imul
or
dec
xchg
ds
pushf
icebp
mov
ljmp
leave
dec
ds
sub
popa
sbb
rolb
sub
xlat
inc
cli
fidivrs
js
repnz
jb
sti
stos
stos
dec
orl
push
dec
dec
jns
mov
div
mov
cmp
and
push
jns
jle
mov
scas
je
fstl
iret
int
push
push
in
push
adc
pushf
loopne
fldenv
int
push
gs
mov
push
arpl
negb
xchg
xor
jo
mov
jp
adc
sub
jbe
mov
fdiv
mov
add
std
shl
inc
mov
push
popa
clc
pop
out
xchg
mov
xchg
das
out
jb
lcall
and
rorb
imul
pop
in
and
aad
outsb
dec
shlb
lods
inc
sahf
int3
enter
sub
dec
jl
enter
jns
das
test
movsb
cmpsb
neg
pop
xor
int3
popf
jb
ficompl
dec
ja
stc
dec
shrl
lods
jle
sbb
notb
lods
xchg
inc
dec
jo
clc
mov
jne
scas
mov
daa
inc
addr16
adc
pop
sbbb
out
popa
push
xor
rcrb
cld
or
sbb
arpl
sub
jl
jmp
and
cmp
mov
mov
xor
xchg
xor
xchg
lret
testl
mov
add
xchg
xchg
jle
sub
inc
and
pop
add
retw
jns
mov
jne
leave
adc
fmull
cmp
add
dec
mov
insb
add
dec
cmpsl
imul
scas
push
and
sti
std
jle
orl
nop
inc
outsl
inc
cmp
cld
adc
dec
jp
repnz
inc
cld
xchg
sbb
mov
sbb
cli
rcr
push
gs
add
popf
ret
loopne
bound
or
popa
insl
or
insb
in
iret
data16
stc
mov
sbb
jbe
pop
stc
mov
push
jo
jecxz
imul
push
daa
inc
jmp
mov
dec
sbb
cmp
sub
push
sbb
fisubrs
ljmp
or
inc
mov
leave
jl
inc
ljmpw
cltd
lret
out
shl
xor
jmp
gs
out
push
arpl
imul
pop
mov
dec
inc
sbb
xor
sti
stos
icebp
fcoms
daa
in
sub
insb
dec
xchg
scas
and
dec
jno
and
xor
xchg
rclb
cmpsl
das
mov
stos
xchg
insb
inc
ret
mov
and
sbb
mov
loope
push
xchg
outsl
clc
subb
movsb
das
push
jno
call
addr16
icebp
jg
cmp
out
insl
push
xor
adc
pop
scas
jns
sbb
push
mov
mov
daa
xchg
jbe
imul
inc
mov
xchg
pop
xchg
jecxz
or
stos
cmp
add
add
sub
notl
pushf
and
jg
sar
sbb
lcall
rorb
xchg
add
lret
adc
stos
inc
mov
out
incl
xchg
cmp
mov
gs
cmp
call
test
cmp
out
mov
int3
mov
mov
pop
mov
cld
rolb
cmp
push
pop
push
jns
mov
les
ret
test
push
add
orb
jo
mov
rclb
addr16
and
test
push
dec
cli
and
cwtl
jno
lahf
inc
and
ret
xchg
or
negl
and
mov
fimull
sub
or
jbe
adc
mov
pop
bound
movb
xor
dec
out
inc
sub
hlt
jl
pop
inc
scas
out
jg
lods
xor
adc
or
xor
aaa
sub
push
out
dec
fwait
xor
imul
xchg
sub
daa
sub
test
loop
mov
mov
aad
or
cmpsb
ds
sub
jmp
mov
adc
xor
sti
sahf
stos
lods
pop
xchg
add
xor
cmp
dec
pop
in
cmp
inc
mov
negb
xchg
lea
sub
test
aad
mov
push
mov
and
inc
lret
jl
insb
inc
jae
enter
gs
or
daa
push
sub
pop
hlt
and
jge
dec
pop
mov
cwtl
jb
mov
shll
lods
jp
arpl
testl
mov
jb
fwait
cmp
cwtl
hlt
add
xor
rcrb
lcall
or
imul
fisubrs
clc
ja
pop
push
xchg
cmc
mov
mov
sub
dec
outsb
popf
aam
in
adc
fildl
imul
cmpsb
or
xchg
dec
jle
pusha
loop
mov
push
stos
or
std
adc
fists
movb
fcmovnb
mov
pop
out
add
or
cld
ljmp
ds
dec
push
pushf
lea
inc
insb
add
dec
addr16
or
lret
or
fmul
xlat
mov
cltd
notb
sarl
iret
push
in
xlat
lret
dec
sbb
push
retw
push
cmc
sbb
repnz
xor
inc
ret
repz
adc
std
push
dec
shlb
mov
daa
call
pop
sub
push
add
and
loopne
rclb
jmp
push
bound
xchg
xor
jmp
test
lock
das
sbb
push
cmp
pop
enter
stc
iretw
xchg
dec
cmp
pushl
cmpsb
jg
cs
aas
or
loopne
int
cmpsl
lea
bnd
push
in
lahf
lcall
out
dec
cli
inc
stos
out
add
jbe
dec
jne
inc
popa
xor
nop
push
dec
divb
inc
pop
dec
in
mov
notl
popf
fs
test
cli
bswap
xlat
test
sti
icebp
jmp
cs
or
cmp
xchg
ret
stos
ret
jo
cltd
fcompl
jg
cli
jl
mov
inc
cld
push
lcall
jno
das
mov
jnp
lcall
jl
cmp
xor
cli
shrb
repz
xchg
inc
jge
neg
push
add
push
mov
data16
sahf
adc
sub
js
push
stos
rcrl
into
fsubs
mov
subb
pop
in
mov
pop
lock
lods
repz
inc
add
fs
or
incb
adc
lods
add
repz
add
xor
cld
sbb
xchg
int3
mov
adc
clc
ljmp
movsl
sub
cltd
les
out
jl
movsb
int
nop
outsl
jb
cmp
mov
push
mov
cmp
dec
daa
sub
jp
or
xchg
stos
into
inc
push
dec
lods
stc
sbb
xchg
lods
xor
movsb
push
add
clc
or
push
mov
mov
xchg
sub
add
sbb
jge
dec
movsb
pop
arpl
icebp
mov
mov
fadds
dec
pop
xor
cmp
hlt
cltd
and
mov
ret
adc
push
jg
ljmp
cli
subl
in
fsts
in
add
jo
sahf
cmp
and
test
fisttps
dec
push
ljmp
push
cmp
mov
mov
mov
shlb
sbb
pop
lret
call
insb
pop
add
aam
dec
cltd
pop
ss
xlat
das
mov
dec
shr
add
aas
out
jmp
loopne
popf
das
jge
cmp
hlt
sub
xchg
je
push
mov
mov
lret
pop
bound
xchg
xchg
decb
cs
lret
xchg
push
xchg
mov
dec
repnz
cmpl
mov
cwtl
jge
movsl
jo
stos
test
repnz
cs
adc
inc
clc
aas
add
mov
cmpsl
jmp
dec
adc
out
sub
clc
jns
repz
and
leave
arpl
push
shlb
push
jae
loopne
movsl
xchg
aad
popf
jne
stos
lcall
in
inc
xor
sbb
jae
and
mov
std
dec
test
loopne
cmc
dec
rorb
cmpsl
sub
das
in
pop
inc
lcallw
rcl
or
mov
pop
cmpsb
test
shrb
add
cmp
leave
rcr
sahf
lcall
pop
cmc
push
sub
jecxz
or
arpl
loope
jmp
jecxz
loopne
inc
push
lahf
adc
int3
ret
xchg
aam
xor
add
hlt
icebp
mov
aaa
inc
fwait
dec
lds
rclb
mov
push
and
aad
sub
sub
fwait
pop
scas
or
psllw
xchg
dec
cs
push
jnp
jno
push
xchg
arpl
shrl
push
xor
scas
popa
gs
xchg
xchg
inc
dec
fstpt
push
lods
sahf
push
cltd
xor
dec
cmp
inc
aam
out
in
imul
pop
add
jmp
mov
xchg
or
gs
rclb
negb
and
std
pop
and
xlat
xchg
cmc
arpl
test
mov
pop
lret
push
sti
xchg
not
cmp
push
adc
cmp
sbb
sbb
pop
int
mov
jo
push
pushf
xchg
faddp
ficompl
xchg
es
jmp
dec
addr16
rcr
pop
ret
and
jecxz
xor
imulb
test
shr
xor
jns,pt
lret
in
sub
mov
pop
fiadds
add
cmpsl
push
pop
mov
repz
cmpsb
scas
das
mov
gs
push
test
pop
pop
stc
stos
xchg
or
push
pop
nop
inc
iret
addr16
jbe
push
push
sub
sbb
fwait
mov
lock
xor
nop
cltd
and
subl
out
outsb
pop
clc
fidivrl
mov
ljmp
lock
mov
rep
add
and
test
ljmp
pop
sbbb
jae
out
lods
inc
jno
rolb
clc
mov
or
or
sbb
xor
xor
cmp
pop
inc
push
cmp
xor
and
out
jmp
inc
aad
in
aad
xor
mov
aaa
or
xchg
jp
adc
sub
xor
inc
das
rol
in
in
adc
sbb
ljmp
cltd
sub
fdivs
sub
lds
into
add
out
cli
repz
mov
mov
mov
scas
mov
xchg
push
mov
bound
jmp
push
xchg
int3
leave
out
sub
loope
in
or
sbb
nop
pop
das
jns
je
sbb
movsb
shlb
dec
jmp
js
and
outsl
fisttpl
pop
push
mov
mov
sbb
pop
mov
je
ljmp
push
ror
out
cli
add
cmpps
clc
and
jnp
pop
pop
mov
cmc
pop
sbb
arpl
push
icebp
repz
inc
movsb
mov
es
loope
es
mov
pusha
sbb
add
xchg
or
xchg
ljmp
cli
xchg
js
dec
lret
adc
jp
lcall
daa
cmp
sub
cltd
mov
add
mov
push
sbb
dec
negl
cmp
aaa
xchg
rcl
mov
cld
popf
test
mov
stos
mov
lods
mov
std
pushf
and
push
pop
test
mov
sahf
data16
push
mov
sbb
mov
mov
fucompp
jmp
shlb
lods
and
test
imul
int
bound
mov
mov
push
pop
icebp
ljmp
rcrb
lret
sbbl
out
dec
testb
pop
and
sub
jne
dec
lods
mov
imul
loope
push
out
test
and
cltd
mov
pop
dec
sbb
dec
push
ja
loop
ljmp
or
add
push
inc
fstp
add
addr16
cmp
pop
xor
in
loope
add
arpl
and
dec
cmp
cli
mov
pusha
aaa
into
lods
roll
andb
jle
jae
std
out
inc
dec
lret
ds
sbb
test
lea
das
adc
in
inc
fdivrs
idivl
mov
nop
ret
push
outsl
mov
lcall
out
sbb
testl
xchg
shlb
outsb
imul
repnz
inc
jae
and
lds
ja
mov
sti
repnz
fistps
adc
push
loop
movsl
mov
mov
adc
and
nop
cmpsl
and
dec
jle
outsl
xchg
nop
rcrb
and
ss
insl
jae
sbb
push
sub
fs
push
pop
out
adc
or
add
pop
shll
jno
xchg
scas
scas
mov
lahf
aad
jbe
loop
cmpl
sbb
mov
jno
inc
lahf
lcall
jge
ret
addr16
jp
out
aam
repnz
mov
mov
rclb
aas
out
mov
mov
push
fwait
imul
jne
out
dec
cmp
cld
push
sub
es
iret
repnz
aam
jne
inc
rclb
aam
sbb
adc
lods
aam
push
cmpsb
push
push
mov
jg
data16
mov
lods
repz
je
inc
sub
and
add
gs
cmp
jne
mov
jmp
add
xchg
jb
sbb
adc
test
xor
cltd
lahf
lods
in
addb
lock
lods
call
cmpsb
pop
arpl
sub
test
push
xor
xor
push
je
push
pop
push
cs
into
push
rclb
mov
cltd
scas
mov
dec
pop
mov
xchg
inc
pushf
add
popf
jo
add
cmp
in
int
xchg
das
pop
mov
push
sub
inc
mov
ret
loope
rol
mov
iret
aad
push
in
ss
test
adc
int3
lcall
cmp
loopne
adc
in
ret
and
adc
call
cmp
lcall
lods
mov
je
jg
movsl
xchg
adc
cli
fiaddl
lock
test
jne
in
sbb
pop
adc
and
mov
into
and
xchg
add
jns
jo
add
pop
repz
insb
stos
dec
aaa
push
loope
pop
loope
or
add
sti
xor
and
mov
xor
pusha
add
xor
pop
stos
sub
inc
iret
inc
rcl
enter
and
sysexit
mov
out
mov
shrb
fs
lret
lds
sub
pop
or
cmp
repnz
xchg
in
xchg
out
fimuls
insb
or
std
push
mov
enter
inc
jle
and
mov
jg
pop
dec
std
xor
rorl
fidivrl
pop
aam
arpl
pop
test
dec
xchg
or
adc
fs
sub
lcall
mov
cwtl
dec
adc
data16
outsl
jnp
xchg
aaa
outsl
in
and
js
push
lret
lahf
mov
mov
cmp
fadd
mov
dec
sub
mov
fbld
hlt
out
cmp
xlat
lods
fs
iret
adc
inc
outsl
sarb
jne
fimuls
stos
insb
repnz
bnd
push
ljmp
stc
hlt
dec
stos
push
dec
cmp
cmpsl
cltd
pop
sub
add
cmp
repz
xor
sbb
adc
mov
cli
adc
sub
adc
dec
lahf
in
shr
sub
pop
imul
out
shrl
pop
jns
test
repnz
into
mov
and
cmpsb
test
scas
inc
dec
or
or
xor
pusha
aad
and
mov
mov
into
shrb
xor
fld
cld
and
imul
push
xor
insb
inc
test
aam
es
cld
adc
test
xor
shlb
es
pop
push
loopne
push
inc
pop
ss
mov
xor
lret
inc
cmpsl
test
cli
sbb
xor
and
fnstenv
xorb
sub
mov
mov
sbb
pushf
mov
add
jp
shlb
filds
in
leave
mov
insl
add
xchg
daa
mov
add
adc
inc
push
xor
sub
mov
fwait
sub
jb
out
jbe
push
cltd
jmp
push
out
cmp
repz
gs
cmp
pop
ja
leave
icebp
arpl
mov
scas
xor
scas
outsl
xchg
bound
pop
jo
pusha
cmp
pop
cmp
xorb
add
xchg
mov
jo
and
adc
popf
fildl
idiv
icebp
mov
and
popa
jle
push
push
arpl
xorl
icebp
sbb
adc
cmp
push
xchg
shlb
jp
outsl
sbb
and
pusha
mov
shrl
push
add
xor
insl
mov
jnp
or
les
inc
sti
adc
mov
pop
int3
or
mov
pop
outsb
xchg
or
std
or
popf
mov
or
cmpsl
int3
inc
mov
jecxz
je
add
sub
ja
add
in
repz
inc
jecxz
sub
fcomip
call
pop
jnp
mov
ss
inc
dec
mov
ljmp
cmc
data16
shrb
add
jae
movl
lret
push
jmp
out
xchg
ret
cmp
or
cld
cltd
imul
xor
xor
sub
jbe
enter
add
leave
sub
insb
xchg
aam
push
add
sub
outsb
rorl
push
jb
ret
stos
mov
jmp
cmp
arpl
cmp
sbb
scas
sub
mov
push
mov
out
pop
xor
mov
adc
push
imul
add
mov
sbb
bound
int3
scas
and
cmpsl
cwtl
call
adc
jg
ret
sub
mov
cmpsb
inc
adc
or
push
xchg
lret
ds
jl
or
xchg
in
jbe
mov
pusha
loopne
rorl
and
dec
test
dec
sub
xor
xor
lret
mov
es
inc
push
lds
xor
push
inc
push
jmp
mov
andl
or
pop
push
and
sbb
and
dec
fs
rcrb
nop
xlat
lods
push
cmpl
and
mov
push
push
mov
fwait
mov
xor
fs
scas
aas
fwait
jbe
mov
lret
dec
fsubrp
push
or
ror
pusha
sub
jg
fnstsw
xor
push
xchg
and
xchg
xor
sbb
xchg
push
stos
and
clc
mov
or
test
mov
iret
sub
sbbb
cmp
sub
pop
mov
ja
sub
add
push
sbb
enter
shrb
inc
pop
jnp
xor
inc
fldl
je
in
sub
or
dec
or
bound
add
movsl
fisubrs
in
xchg
and
leave
and
adcb
dec
dec
mov
jp
xchg
js
lcall
jge
addl
in
fstpt
bts
xchg
pop
mov
mov
std
sbb
cmp
mov
cmp
xor
cmp
fists
pcmpgtb
fisubrs
stc
aad
fs
cmp
pop
add
xchg
lret
and
std
dec
imul
ljmp
add
jae
lret
adc
push
add
fisubs
inc
pop
fildll
aaa
aad
fldcw
psllq
lds
je
inc
bound
mov
jb
aam
mov
inc
fld
cmpsl
lcall
inc
cld
fs
ss
sbb
fstps
xor
imul
cmp
mov
or
sbb
pop
mov
sub
mov
add
inc
icebp
inc
lods
pop
jnp
fsubrs
fisttpll
dec
or
push
mov
cmpsb
push
mov
mov
pushf
mov
cmp
dec
lcall
or
push
fwait
xor
outsb
push
shl
push
mov
daa
jmp
mov
cmp
push
iret
and
or
insb
inc
or
or
mov
and
jne
test
iret
pop
gs
mov
mov
imul
sub
jno
testb
xchg
xor
into
jmp
push
lock
addb
iret
les
mov
fwait
cmp
or
and
repz
push
push
ret
or
push
mov
push
shrb
sub
pop
adc
sbb
xchg
mov
add
and
push
xchg
sti
pop
cwtl
and
mov
testb
xlat
rcrl
ret
stc
push
addl
pop
mov
push
add
and
sub
add
lahf
push
or
cltd
popa
andb
xor
push
mov
adc
incl
repz
mov
lods
add
adc
xor
or
loop
data16
cli
sub
mov
push
lods
and
out
ret
enter
and
outsl
xlat
xorb
cmp
xor
in
inc
stos
jnp
and
add
rcll
cwtl
dec
mov
pop
in
adc
mov
das
jb
daa
dec
sahf
jbe
lahf
xor
sub
inc
daa
scas
lock
mov
andb
loop
mov
sub
aad
adc
sub
push
ret
lret
and
fidivrl
push
jbe
les
jmp
add
sbb
es
shlb
add
push
push
sub
shll
shlb
dec
addl
int
jl
dec
out
stc
dec
inc
cli
mov
in
mov
icebp
scas
dec
fdivrl
xchg
leave
cld
popa
mov
outsl
dec
ror
mov
loope
pop
hlt
test
js
out
test
cltd
jns
sub
repz
or
mov
xorb
repnz
int3
ret
fistpl
bts
sbbl
out
into
loope
jo
add
mov
movsb
fs
sbb
stos
add
mov
push
mov
push
push
push
das
push
add
or
ds
out
outsb
pusha
scas
sub
mov
aas
daa
add
mov
or
mov
test
int
mov
sti
sub
jb
jge
pusha
sbb
xchg
mov
iret
jae
flds
or
fldt
outsl
push
lea
xor
mov
mov
les
loop
insl
jb
imul
cmp
lods
cmp
iret
push
sbb
and
ret
dec
lcall
iret
and
pop
dec
ja
cwtl
pop
loopne
cmc
das
adc
outsl
call
xor
adc
sbb
movb
sbb
jnp
xchg
in
push
ret
adc
nop
pop
call
mov
cmpsl
faddl
mov
inc
mov
push
pop
pop
mov
xchg
jecxz
cli
pusha
es
fcoml
mov
xor
lret
daa
or
dec
popf
lcall
and
loope
arpl
bound
add
jae
adc
lods
mov
push
insb
sarl
mov
lcall
sub
cwtl
fbld
or
lods
in
hlt
sub
dec
das
cmc
pop
or
imulb
jno
mov
sbb
enter
inc
push
lea
adc
ret
lret
xchg
adc
xchg
sub
cmp
push
adc
insb
loop
popa
xchg
fsubl
mov
idivb
sub
es
cmp
test
lcall
sti
data16
dec
in
sti
dec
ds
fimuls
jbe
in
repz
andb
adcb
cmp
jecxz
aaa
andl
inc
mov
rcrb
mov
fisubl
inc
fs
pop
push
lret
out
cli
imul
test
iret
pop
xchg
scas
inc
inc
test
movsl
adc
or
add
inc
enter
out
ds
jne
std
adc
xchg
xchg
ja
aaa
pop
sbb
push
jg
cmc
cltd
jle
cmc
pop
imul
pop
adc
insb
mov
fidivl
icebp
and
shrl
out
je
ds
leave
out
lods
sbb
mov
or
push
fsubp
mov
mov
pop
call
inc
inc
add
in
mov
fnstsw
nop
insb
or
jecxz
jbe
sub
shl
popa
stc
cmpl
jno
adc
addr16
pop
ja
pop
fisttpl
stos
imul
xchg
mov
mov
ljmp
insl
jecxz
enter
insl
dec
popa
in
mov
cmp
test
lds
icebp
xor
pop
jg
jge
popa
push
pop
mov
lock
jp
or
push
sub
inc
sti
inc
xchg
pop
inc
pop
rcrl
sbb
jb
xchg
and
fcmovnb
cmpl
ds
mov
sahf
push
imul
lods
pop
das
jae
fildll
xchg
cmc
pop
sti
jg
sbb
inc
jae
daa
int
jmp
dec
xor
fdivrl
mov
idivl
cmpl
jmp
inc
mov
bound
int3
xchg
cmp
inc
filds
das
mov
sub
shrl
cmp
xchg
outsb
pop
mov
dec
repnz
out
mov
sbb
icebp
shl
xchg
cld
adc
push
sarl
cmp
xchg
rorl
insb
and
xor
sahf
aam
pop
movsb
mov
jl
push
push
addr16
mov
and
shlb
push
lcall
sbb
adc
mov
ss
in
ja
in
xchg
and
push
mov
pop
in
movsl
mov
adc
dec
mov
jnp
sti
mov
das
pop
cs
sub
idivl
dec
fnsave
sarb
xor
lahf
leave
test
and
imul
lock
lgs
xchg
cmc
xchg
pop
out
shl
dec
sarb
cmpsb
inc
jl
jmp
inc
mov
sub
sub
inc
pop
in
rclb
xor
rol
shl
or
inc
fsubrs
jg
in
and
push
movsl
repz
push
scas
inc
rcr
lcall
inc
xchg
and
les
js
and
jno
pop
in
testl
jbe
jno
and
add
outsl
call
xchg
sub
hlt
stc
cld
jnp
xchg
jmp
aam
and
nop
sub
pop
fwait
das
mov
xchg
inc
iret
xchg
insl
dec
aad
popf
dec
in
pop
mov
std
mov
ja
mov
popa
sub
mov
xchg
stos
repz
xchg
xor
dec
es
jp
cmp
fldcw
mov
insl
inc
movsb
js
xor
insl
loopne
cmc
sub
les
mov
dec
fwait
into
pop
pop
inc
jne
pusha
ret
addr16
mov
jbe
rcll
cmp
sbb
sbb
andl
or
or
mov
rorb
mov
and
sbb
andl
xchg
ljmp
fadd
sbbl
mov
lcall
sbb
xchg
popa
std
outsl
mov
add
mov
xchg
aaa
jno
notl
ja
jbe
lcall
inc
cmp
in
pop
jmp
pop
dec
popf
les
sbb
mov
loop
out
lcall
inc
popf
repnz
popa
outsl
pop
hlt
cmpl
xor
sub
cmp
or
lods
loop
loopne
pop
movsl
and
adc
jmp
xor
cltd
dec
imul
test
ss
enter
iret
mov
shll
popa
xor
stos
mov
mov
mov
fnstenv
jg
dec
push
lods
adc
inc
add
ds
rcrb
je
mov
inc
and
mov
mov
cmc
adc
arpl
sbb
pop
shr
xor
cmp
cmpsl
xchg
negb
pop
fcomps
cwtl
lods
es
cltd
sub
xchg
outsl
jbe
jae
into
popa
ret
aaa
xchg
inc
or
jns
sti
adc
popf
sbb
testl
push
test
mov
fwait
shll
inc
divb
inc
jne
xor
push
mov
insb
pop
popa
out
pop
sti
and
sbb
push
mov
lret
cmp
push
testb
sti
jno
imul
cmp
sbb
jl
ret
shl
mull
xchg
loop
stc
cli
cs
push
test
sti
push
dec
clc
mov
pop
dec
fcmovbe
pop
lret
cmc
ret
sub
repnz
xchg
or
push
mov
push
cltd
and
in
psllq
lods
xor
and
push
or
cmp
out
movl
ret
add
mov
mov
imul
into
mov
call
fs
int3
repnz
int
das
imul
outsl
mov
les
loopne
xchg
or
or
inc
ljmp
or
xchg
jp
sub
xor
jbe
inc
mov
aas
mov
pop
and
lods
mov
test
fwait
cli
push
ds
fstl
imul
test
leave
cwtl
rolb
hlt
hlt
adcl
push
xor
sub
mov
or
push
lock
or
pusha
mov
cmp
into
sbb
aaa
data16
dec
sub
push
fcmovnb
rcr
sti
insb
push
xchg
lret
cmp
loope
or
into
xchg
sub
inc
mov
pop
mov
int
inc
sbb
xor
in
pop
and
cs
mov
fistl
xchg
mov
mov
add
in
rcr
imul
jns
sbb
mov
mov
jno
mov
adc
repnz
ss
add
sti
insb
pop
mov
lock
divl
je
inc
xor
lea
fnsave
out
test
cmp
inc
mov
ret
jns
stc
push
outsb
int
fistl
mov
sub
dec
in
or
in
xchg
dec
daa
inc
mov
push
jle
jecxz
dec
aam
js
aad
jl
pop
push
call
pop
push
test
fs
pop
mov
jns
pop
xlat
call
dec
dec
data16
addr16
sub
xchg
test
ljmp
and
inc
jb,pt
dec
mov
out
and
sub
push
shll
loope
adc
jge
xchg
test
sbb
pushf
inc
mov
imul
jbe
adc
cltd
mov
adc
pop
or
dec
mov
cmp
fmull
and
cwtl
xlat
push
sub
pop
cmp
cmp
jg
lock
adc
mov
fdivs
notb
in
mov
pop
ret
mov
adc
sarl
jg
cli
add
imul
cmpsl
scas
and
aad
sbb
lea
mov
sub
ds
stc
dec
lahf
push
aaa
inc
nop
ret
jmp
mov
andl
cmp
pusha
push
scas
mov
push
in
loopne
loop
out
sub
ljmp
pop
enter
pop
xor
loope
mov
in
cmpsl
popf
shlb
in
jge
test
inc
push
inc
in
ja
cmp
gs
imul
inc
push
jp
hlt
popf
sub
sti
or
sarl
inc
subps
in
mov
push
ja
push
lea
gs
clc
xor
imul
imul
test
mov
lock
adcb
icebp
lahf
fmull
pop
clc
into
in
dec
mov
in
test
sub
ss
lds
movq
xchg
cmc
fimull
cmc
mov
lea
mov
inc
les
and
andl
movsl
push
outsb
cmc
push
leave
ds
icebp
gs
mov
jecxz
cwtl
lret
jne
ja
fstl
mov
xchg
arpl
mov
jle
repz
imul
in
test
or
outsl
stos
icebp
fistpll
xor
and
leave
rcrb
xlat
int
int3
test
cmp
andps
lods
mov
dec
mov
iret
rcrl
data16
jae
data16
mov
cltd
push
jecxz
ss
scas
rol
scas
and
clc
or
inc
mov
or
adc
lds
lcall
outsl
mov
pop
shrl
or
mov
loop
lock
xchg
fiaddl
dec
pop
cmp
into
fcoml
rcrb
mov
xchg
xchg
xchg
ljmp
pop
test
dec
outsb
shll
mov
movsb
dec
loopne
shlb
mov
ss
cmp
fmuls
xchg
cmp
in
xor
sbb
xchg
and
mov
sub
pop
shlb
sub
pop
push
xchg
hlt
movsb
dec
push
lcall
mov
test
js
cmp
ficoms
mov
test
mov
dec
or
mov
aam
pop
push
sbb
out
mov
cmp
dec
std
divb
cmpsl
pusha
and
leave
cmp
shll
sbb
fnsave
sahf
pop
xchg
inc
pop
or
cmpb
sub
test
nop
cmp
dec
dec
mov
jmp
adc
mov
pop
inc
pop
call
pusha
lds
add
mov
xor
inc
jl
test
and
mov
lcall
std
and
mov
addr16
ffreep
push
cltd
mov
pop
adc
pop
mov
movsl
push
arpl
mov
jno
jl
sub
adc
and
into
pop
push
mov
ret
test
add
test
ret
psllq
adc
fildl
sub
clc
jno
dec
iret
jle
inc
int3
into
sbb
enter
filds
movsl
mov
xor
bound
pop
dec
mov
sbb
out
fptan
stos
in
mov
test
pushf
dec
rolb
lret
push
add
jl
xorb
xor
xchg
add
inc
adc
adcb
mov
mov
outsb
sub
out
scas
inc
call
inc
out
int
outsb
roll
sbb
mov
ret
les
add
lret
ret
xchg
adc
testl
enter
jnp
fwait
sbb
fwait
push
out
fwait
pop
cmpsl
push
fcomps
sbb
and
in
mov
lds
cmp
jecxz
imul
add
out
out
cld
cmp
aad
jnp
xor
sbb
inc
push
mov
dec
scas
cmc
fildl
insl
bnd
xlat
xchg
pop
hlt
cli
mov
sahf
sbbl
cltd
pop
cmp
dec
or
rcr
and
jbe
cmp
xchg
enter
js
outsb
cmp
aam
test
les
pop
stos
outsb
loop
add
mov
add
push
shlb
mov
xorb
sbb
sbb
loope
div
hlt
jae
inc
sbb
mov
ja
mov
repz
das
push
xor
or
fsts
shll
cmp
cmp
fildl
and
mov
push
xorl
xlat
das
rorl
call
dec
inc
dec
push
and
xor
dec
sbb
and
sbb
jl
push
pop
cmp
call
adcb
jmp
jno
data16
iret
jg
mov
mov
xor
inc
push
imul
push
cltd
leave
jbe
push
mov
mov
xor
or
push
stos
aaa
inc
xor
js
pop
cmp
mov
loope
aam
loope
jb
shll
xchg
popa
and
into
pop
test
xchg
cmp
push
leave
ret
jb
adcl
pop
pushl
lods
mov
std
xor
in
sub
rdmsr
xor
clc
shr
pop
pop
or
sbbb
enter
test
cmp
movsl
inc
pop
sub
lret
into
addr16
mov
loop
pop
and
mov
jge
inc
loopne
cli
mov
mov
push
dec
inc
sub
cmp
adc
jmp
dec
xchg
push
cmp
std
movsb
mov
jecxz
into
push
mov
sub
and
mov
sub
pop
cmp
out
jne
jae
mov
push
lret
push
pop
jns
inc
or
call
ljmp
sbb
in
sub
push
sub
stos
test
loop
xchg
pop
xlat
xor
sbb
mov
clc
xchg
in
pop
loopne,pt
out
loopne
push
xor
cmp
jle
mov
or
rcrl
mov
push
mov
mov
imul
inc
jmp
fs
leave
lods
add
sub
rep
mov
test
out
mov
in
cli
xchg
xor
lahf
jg
ds
xchg
jnp
dec
inc
add
bound
scas
push
hlt
dec
sbb
pop
inc
call
arpl
xor
sbb
loope
movsb
shrl
mov
mov
outsb
push
mov
dec
adc
sbb
imul
mov
dec
push
in
and
push
xchg
inc
sarb
arpl
addl
nop
test
sub
stc
mov
aad
push
lret
mulb
push
das
pop
pop
ret
jmp
mov
add
cwtl
int
fsubrs
mov
cmpsl
mov
mov
push
inc
xor
lahf
mov
bound
sub
jae
leave
jp
jmp
mov
sub
adc
in
xchg
hlt
dec
jmp
xchg
jmp
pop
pop
sub
int3
jp
cmp
push
dec
mov
pop
cli
lock
or
cwtl
loope
bound
or
push
shrl
iret
mov
mov
sbb
dec
and
mov
xchg
ljmp
xchg
icebp
or
jp
std
sub
lret
int3
pop
test
fldt
in
cs
repnz
cmp
aam
xor
sub
loop
add
stos
je
and
out
pop
cmp
fiadds
je
outsl
pop
fs
out
rorl
in
inc
mov
jnp
jne
mov
jp
movsb
fstps
xlat
lods
sbb
xor
mov
inc
std
shrl
scas
imul
mov
or
xor
sarb
ret
dec
jge
inc
sbb
fidivl
pop
cmp
es
incb
and
stos
adcl
add
ljmp
int
outsb
xor
ret
or
xchg
ljmp
inc
inc
mov
sbb
fcmovbe
add
dec
push
cmp
icebp
inc
rol
enter
fnstsw
mov
cmp
ret
cmc
jl
aaa
outsb
lcall
imul
xor
sbb
int3
add
lret
or
repnz
pushf
mov
mov
das
sub
push
fsubr
pop
cmpsb
mov
shlb
mov
push
aam
mov
push
sahf
pop
xchg
mov
int3
xor
cli
jo
push
je
push
or
sub
xlat
or
mov
in
testb
jecxz
add
add
stos
js
jecxz
add
jo
mov
pop
insl
push
or
pop
mov
bound
mov
adc
jmp
dec
mov
cld
or
icebp
add
pop
repnz
test
mov
loop
jecxz
cmp
inc
movsb
sub
lcall
mov
pop
pushf
or
and
sarl
xor
sub
cmp
shll
aaa
hlt
jb
std
push
push
iret
xchg
xchg
mov
add
les
sar
pop
insb
fnstcw
cmp
xchg
sub
ljmp
inc
or
jle
push
pop
cmpsl
sub
sti
sub
sbb
add
test
mov
jno
lods
in
xchg
aad
out
mov
pop
inc
cltd
gs
call
int3
adc
enter
sbb
mov
clc
fdivrl
pop
push
out
leave
xor
push
mov
mov
stos
in
in
mov
jae
aas
push
lds
fiadds
inc
dec
pop
sahf
sbbb
dec
fcomp
test
js
sbb
rclb
push
ret
adc
out
popf
repz
xlat
mov
es
dec
test
imul
iret
add
int
and
jnp
adc
adc
sbb
imul
mull
cld
xor
rcll
add
and
or
lods
rcl
cmp
adc
imul
js
or
jnp
lods
movsb
test
inc
pop
ljmp
inc
jno
pushf
stos
xor
ss
mov
adc
cmc
jmp
jg
jno
push
inc
daa
sbb
or
mov
cmp
push
sub
or
mov
dec
pop
mov
sbb
dec
repz
sbb
xor
enter
dec
cli
and
xchg
push
sbb
movsb
mov
xchg
sub
mov
sub
jbe
test
dec
sbb
adc
push
pop
xchg
push
pop
repz
mov
cmp
cmc
pop
mov
rcrl
mov
mov
int3
stos
pop
fisttpll
imul
jmp
xlat
xchg
pop
sahf
pop
push
imul
cld
cmc
popa
dec
enter
out
cmp
adc
dec
imul
scas
xor
dec
and
insl
dec
dec
aaa
mov
dec
mov
jp
jp
adc
sbbb
into
aas
xlat
ss
add
pop
and
xor
adc
sar
ret
es
mov
mov
ret
out
jl
mov
adc
rcrb
xlat
addr16
mov
shl
divb
sbb
rorb
jno
imul
aam
scas
cmp
out
icebp
or
imul
mov
inc
mov
jle
mov
push
inc
adc
ret
das
xchg
and
roll
mov
sub
insb
xor
ljmp
mov
sbb
push
enter
lahf
xor
loopne
mov
mov
sahf
adc
sbb
sti
pushw
std
stos
mov
test
jne
subl
mov
ds
ret
shl
movsl
inc
adc
repnz
sbb
aam
push
jecxz
shl
pushf
int
leave
xchg
subl
hlt
imul
xor
mov
add
loopne
push
jp
mov
xor
or
push
jo
xor
jmp
stc
jp
loopne
in
idivb
mov
jno
orl
test
rcr
outsl
hlt
lods
xchg
mov
rcll
inc
xchg
jecxz
push
cmp
fs
lods
dec
addr16
mov
ds
test
scas
push
jecxz
lods
push
ss
sub
and
incl
cmp
jmp
insb
adc
es
addr16
js
jmp
sbb
aaa
popa
or
push
leave
jecxz
mov
loopne
add
adc
and
jmp
xchg
leave
pushf
pop
inc
hlt
daa
enter
mov
jb
repz
data16
jl
lods
dec
scas
icebp
in
int
aaa
sbb
loope
scas
imul
mov
mov
lods
lret
sbb
ja
pop
xorb
sub
sub
mov
dec
jns
pushf
xor
and
cmp
sbb
ja
jg
loope
clc
dec
lret
into
pop
adc
mov
and
pop
xchg
dec
scas
ja
shlb
fiaddl
jbe
popf
and
jno
lret
mov
es
jb
lahf
xor
jmp
or
inc
arpl
jecxz
out
push
pop
loop
push
push
nop
in
or
iret
int3
or
mov
pop
jae
fwait
and
pop
lock
push
data16
sbb
int
into
test
cmpsl
jmp
and
test
stos
outsb
lods
ret
push
lods
xor
in
xchg
cwtl
push
test
les
in
mov
ss
xchg
dec
or
in
cwtl
test
sbbl
je
and
and
inc
mov
daa
and
jmp
push
das
fwait
stos
and
pop
push
add
xchg
fstl
movb
andb
dec
dec
mov
mov
pop
add
jmp
out
enter
jns
jne
rolb
xchg
and
xchg
mov
mov
fwait
mov
sub
loope
lahf
sti
pop
js
stos
outsl
adc
ss
out
testb
adc
sahf
sub
fstpl
idivb
inc
push
mov
jecxz
rcr
loopne
cmp
cmp
xchg
stc
ficoml
je
dec
sbb
xor
rorb
or
add
aad
dec
les
mov
in
int3
fistpl
fsub
add
sbb
inc
stos
jb
pop
mov
xlat
mov
loopne
push
not
repnz
outsl
sbb
clc
adc
add
stos
xor
pop
loopne
xor
sbb
lea
and
jg
xchg
in
push
xor
xchg
jb
lcall
or
insl
shlb
ss
push
mov
fisttpll
ljmp
push
xchg
mov
jmp
outsb
ja
std
push
sahf
adc
jl
sar
push
enter
outsl
inc
cmc
lret
ret
jne
xchg
sti
cmpsb
loopne
xlat
jne
push
xlat
shrl
or
insl
xchg
or
xchg
dec
into
lcall
test
cmp
jecxz
or
mov
fwait
lea
insl
mov
mov
cmp
dec
cmpl
cli
scas
mov
dec
insl
mov
dec
ret
pop
cmpsb
aas
lods
repnz
adc
mov
push
sub
imul
pop
jns
aaa
lods
stos
mov
pop
repnz
fistps
add
and
mov
loope
xor
push
or
iret
js
jne
cmpb
aad
lock
out
add
jmp
push
js
mov
pop
shr
and
sub
cld
orl
sub
cmp
push
in
jl
aam
scas
test
loop
popf
int
test
mov
scas
pop
ret
sub
mov
sbb
bsr
scas
stos
mov
sub
and
mov
rolb
mov
test
fsubp
mov
fstpt
and
bound
xchg
or
jp
jnp
mov
lcall
addl
cs
adc
sub
pop
stos
loopne
outsl
je
fsubrs
das
mov
jae
and
das
push
dec
cmc
ror
out
push
pop
jle
sbb
wrmsr
xchg
add
test
jecxz
jecxz
orb
data16
inc
add
jno
lds
adc
into
je
push
lea
ds
sub
mul
fsqrt
enter
sbb
lret
mov
shll
dec
sbb
inc
movb
add
mov
jno
test
cmp
sbb
xchg
ficomps
fisubl
inc
xchg
mov
je
f2xm1
dec
mov
negl
cmp
push
dec
fcoms
fisttpll
sub
fwait
sbb
mov
test
dec
or
xor
mov
mov
pop
mov
lock
cmp
cltd
push
or
xchg
inc
cltd
insb
incl
rorl
lcall
cmc
cmp
insb
sarb
addr16
jb
pop
out
cmp
loopne
jnp
in
cmc
pop
lds
mov
mov
aam
loope
loopne
pop
xchg
xor
outsb
jnp
ja
loop
iret
ret
fisubrs
in
leave
xorl
rol
mov
jns
sti
sbb
loopne
xchg
mov
aad
fcmove
shl
hlt
insl
stos
push
xlat
fs
jmp
mov
ds
aas
subl
inc
jae
mov
and
sbbl
inc
gs
and
jo
fiaddl
in
add
xchg
mov
lds
movntq
out
xchg
and
mov
add
daa
cli
test
fcompl
in
loope
in
rolb
inc
shrb
loopne
xor
dec
aaa
dec
jbe
push
mov
mov
lods
pusha
cmpsb
jmp
and
adc
adc
cmp
xor
aas
pop
and
fcmovne
mov
mov
mov
loop
cld
rcrb
sub
out
inc
into
fidivrl
xor
and
push
popa
and
pop
sti
xor
jb
xchg
outsl
jbe
mov
inc
ds
dec
pushf
cmpsl
xchg
incl
arpl
std
mov
pop
call
and
repnz
dec
and
or
sbb
les
ja
cmpb
jo
xchg
inc
jno
xchg
sahf
push
jl
repnz
adc
xchg
mov
ret
dec
push
scas
inc
or
xor
push
push
nop
mov
js
push
dec
or
pop
mov
adc
and
mov
cmp
or
lods
movsb
shll
aam
jge
pop
popf
loopne
xor
pop
ret
in
pop
or
lretw
lret
adc
mov
or
pop
leave
std
cli
push
cmp
adc
clc
dec
mov
lods
xchg
push
adc
in
ret
jnp
dec
xchg
incl
jle
data16
shl
push
mov
mov
inc
mov
adc
dec
xchg
les
pop
bound
mov
or
pop
and
dec
sahf
push
mov
mov
sti
data16
mov
push
adc
xlat
into
gs
adc
adc
jmp
dec
adc
into
inc
mov
mov
and
mov
mov
xchg
xchg
mov
shrb
movsb
imul
jl
movsl
adc
scas
add
xchg
cmpsb
xchg
sub
jbe
xor
lods
dec
lret
jns
jmp
add
dec
scas
out
and
push
fwait
pop
cmpsb
jmp
cmpsl
mov
ror
adc
sbb
out
mov
push
jae
enter
ret
js
jno
dec
jno,pn
cmp
popa
mov
push
paddsb
pop
adc
out
adc
cmp
iret
cmp
aad
mov
or
xchg
pop
add
out
es
sub
or
mov
int
fbstp
mov
mov
dec
xchg
daa
adc
push
jp
cli
dec
fadds
pusha
lods
jno
sti
jl
je
push
roll
jg
ret
lock
sbb
sub
movsb
cmp
adc
rcrl
jne
nop
pop
xchg
push
push
dec
iret
lahf
icebp
add
pop
dec
inc
mov
pop
mov
push
jo
test
mov
lahf
xchg
push
addb
ret
call
out
fsubs
xlat
mov
pop
jp
mov
and
hlt
cmpb
or
pop
mov
mov
jno
dec
fisubrl
loopne
aas
cmpsl
int
xor
jb
es
es
aad
ret
mov
arpl
adc
shrl
and
sbb
and
mov
and
lret
mov
imul
aad
lcall
lret
pop
lcall
repnz
js
stos
inc
mov
or
movd
jg
pop
repnz
inc
push
ficoms
xor
pop
fs
push
xor
leave
sahf
das
mov
xorl
int
mov
xchg
arpl
sub
ds
mov
sub
jg
sub
cli
repnz
sbb
push
pop
lods
lds
xchg
sti
iret
sub
jg
adc
add
jecxz
into
sbb
mov
test
push
out
pop
add
call
loope
out
loope
pop
sbb
push
sbb
insl
xorb
and
add
clc
sub
test
mov
scas
roll
push
dec
nop
push
rorl
sub
pop
insb
sti
cwtl
sub
dec
add
movsb
xor
mov
in
test
push
out
jae
lahf
pop
mov
ds
in
aad
pusha
xchg
test
inc
std
pop
push
insb
mov
push
and
leave
xor
lock
loope
pop
stos
jle
jl
test
shrb
jae
fwait
dec
add
mov
push
mov
outsb
mov
fwait
jne
xor
push
sub
sbb
dec
xchg
sub
flds
imul
sub
adc
in
andb
jge
js
pop
pop
push
hlt
icebp
mov
jecxz
xchg
and
call
sbb
xchg
hlt
push
not
mov
out
and
xchg
jb
xchg
sub
dec
mov
fidivrs
xor
inc
inc
mov
enter
sarl
xchg
enter
mov
mulb
lods
add
jb
pop
and
sbb
mov
cmc
and
and
push
lds
aas
jbe
insb
push
push
icebp
mov
pop
ss
add
shll
jmp
jns
jae
dec
lods
push
test
cmp
insb
ljmp
inc
adc
push
lds
mulb
adc
xchg
out
lods
xchg
xor
arpl
or
daa
mov
or
jle
addr16
clc
aam
enter
adc
ja
bound
imulb
int3
dec
or
fsubrl
adc
mov
dec
inc
lods
dec
out
jo
xchg
int
in
imul
or
sahf
push
pop
popf
inc
pop
push
stos
add
mov
bound
lea
cmc
fldl
adc
js
aad
in
outsl
pop
mov
push
ret
dec
stos
cmp
pop
sub
cmp
data16
xchg
pop
test
jge
adc
testb
adc
fmull
sub
push
dec
sub
pusha
filds
leave
xorb
jns
gs
stc
das
ljmp
loope
les
int3
sub
inc
outsl
xor
push
lods
adc
aas
test
pop
mov
mov
pop
ffreep
je
xchg
aad
std
cmp
jle
and
stos
dec
cmpsb
sbb
pop
or
push
sbb
add
push
xchg
loope
sbb
dec
lret
js
xchg
scas
push
adc
dec
into
fwait
jg
jmp
test
test
mov
jecxz
xchg
sar
pop
insl
mov
push
add
pop
call
jnp
cli
test
add
push
xchg
mov
and
nop
cld
jmp
repnz
lea
jnp
xchg
aas
mov
jnp
jnp
xchg
jmp
push
fwait
adcl
cltd
popf
in
test
int
dec
ret
sub
mov
pop
mov
outsb
test
pop
lret
mov
mov
insb
lea
aam
push
jne
lahf
fsubl
pop
push
roll
xchg
cmp
dec
ja
cmpsb
sbbl
imul
in
fidivl
or
stos
cmpsb
int
ljmp
je
add
imul
call
aaa
adc
xor
cmp
xor
lods
and
lret
lret
and
test
xor
jecxz
pop
lcall
mov
cli
rdtsc
lret
lods
mov
mov
xchg
sub
in
aad
fs
pusha
sbb
mov
push
and
mov
mov
push
jg
orb
call
repz
inc
scas
test
inc
fcom
mov
dec
das
clc
push
popa
outsl
imul
mov
pop
insl
imul
mov
push
ds
int3
cmpsb
addr16
cmpsl
sbb
and
pushl
int3
addr16
dec
cmpsl
scas
mov
mov
mov
pop
je
aas
in
dec
in
push
loope
push
jecxz
mov
pushf
stos
in
cwtl
fnstcw
lods
fidivl
inc
movsl
mov
pop
push
mov
leave
aam
leave
push
dec
adc
repnz
sbb
sahf
and
es
dec
mov
es
outsl
ds
std
cmp
lods
mov
jle
mov
shlb
sbb
add
stos
loope
int
push
inc
repnz
hlt
std
decl
sbb
push
inc
sub
jo
pop
loope
ja
cmpsl
jb
jg
or
fs
dec
sbb
jge
cmp
push
movsb
decl
dec
adc
sbb
in
cli
pop
jns
clc
inc
in
clc
mov
adc
test
dec
sbb
xor
inc
dec
mov
mov
add
xor
jge
or
jb
xchg
pop
add
xlat
adc
mov
std
mov
jae
sub
sbb
xorb
xor
jl
pop
sub
jb
mov
hlt
stos
mov
or
and
jl
or
inc
sbb
call
data16
add
int3
adc
mov
lret
orl
cmpsb
imul
nop
in
fimull
adc
and
mov
in
test
cmc
pusha
push
jno
test
ja
pop
or
test
icebp
orb
jno
xor
push
scas
mov
mov
rolb
jge
add
mov
out
pushw
push
imul
int3
mov
mov
fsubl
mov
dec
mov
xchg
pop
jl
lods
jo
pop
mov
mov
rcr
cmpsl
pop
insb
mov
cmp
icebp
sti
test
ret
or
dec
pop
add
aad
dec
sub
in
push
lahf
ret
call
mov
imul
cmp
lret
data16
or
ds
cmpsl
in
imul
and
data16
lret
xchg
push
icebp
dec
test
mov
loope
add
hlt
or
out
jnp
push
ss
add
inc
call
ret
pusha
mov
mov
movsl
cmpsb
adcl
lods
mov
sbb
nop
adc
repnz
inc
mov
xchg
fcoml
pop
insb
addl
mov
jnp,pn
mov
popf
xor
dec
push
into
jg
loope
fstps
inc
push
adc
pop
push
dec
cwtl
insb
stos
and
mov
sbb
xor
sub
int
cmp
mov
add
mov
or
xor
cmp
leave
outsb
or
rorl
andl
fdiv
sub
jnp
pop
mov
fistl
mov
js
cs
mov
xchg
jae
clc
mov
add
fldcw
das
lods
fnstcw
pop
sbb
cli
jb
scas
sub
pop
xchg
lods
loopne
in
adc
add
insl
fs
xor
xadd
inc
and
pop
push
dec
mov
push
mov
xchg
pusha
iret
sbb
into
cmovg
jp
jae
scas
cwtl
insl
sbbb
gs
jg,pt
fwait
negb
jmp
mov
ficoml
mov
or
xlat
fcos
push
int
cmpsl
clc
enter
test
sbb
jle
sbb
and
sub
pop
lods
daa
inc
and
test
into
popf
jl
xor
fwait
iret
test
or
mov
mov
ss
xchg
lods
stos
sbb
or
out
hlt
inc
popa
mov
rcl
jle
fucomp
adc
aad
test
xor
lock
push
dec
arpl
push
lock
scas
inc
popf
dec
mov
movsb
sahf
int
idivb
dec
lds
enter
rolb
cmpsl
sbb
mov
stc
iret
aaa
add
or
and
dec
scas
ret
jecxz
adc
mov
cmpsb
cmc
int
push
imul
xchg
pop
pushf
inc
push
xchg
dec
into
inc
sub
pop
mov
jp
xchg
sub
mov
jno
dec
xchg
loopne
out
out
dec
outsl
leave
insb
jp
daa
mov
nop
aas
gs
sti
rclb
or
fldl
mov
mov
test
fcompl
push
ret
jne
sbb
cmp
inc
test
push
cmp
scas
iret
cmp
fstpl
fmull
repnz
cmp
sbb
gs
inc
test
jo
out
push
pop
jbe
push
add
cmpsb
mov
int3
hlt
clc
mov
sub
push
jmp
push
fdivrl
vpandn
or
fs
jo
pop
ja
adc
mov
repz
test
xchg
push
dec
pop
jge
ret
rcll
ret
sbb
fidivrs
xor
xor
xchg
and
lahf
movsl
insb
rolb
inc
cltd
add
mov
mov
movsl
and
mov
and
xorb
push
mov
jbe
je
andl
fs
lret
mov
mov
lahf
shlb
push
dec
push
inc
cwtl
mov
xchg
int
xor
lahf
mov
popa
out
xor
inc
pop
enter
jp
outsb
or
mov
movsb
loope
orb
arpl
pop
lods
in
pusha
xchg
shl
inc
test
push
sbb
push
cmp
push
ficoml
mov
clc
fsubs
jno
into
loop
aaa
or
xor
mov
pop
jbe
mov
scas
push
pop
jno
sub
and
xor
insl
data16
push
mov
add
aad
cld
jmp
xchg
lock
les
pop
addr16
dec
sbb
int
dec
cmp
jo
mov
pusha
andl
call
dec
xchg
sub
pushf
mov
mov
or
mov
ja
out
and
xor
pop
fprem
bound
mov
je
in
js
push
adc
xchg
pop
and
sub
jg
jge
inc
sahf
shrb
jns
jne
cmp
and
xchg
xchg
push
insl
cli
cmp
xor
cmp
std
js
inc
test
jno
jl
loopne
rorl
mov
lds
sub
jno
mov
sbb
push
add
rolb
cmp
mov
jl
jecxz
cmp
out
push
cli
insb
ds
aad
mov
push
fld
flds
mov
xchg
inc
sub
pop
pushf
cld
in
imul
call
mov
mov
adc
inc
fcoml
pop
lods
cmc
xor
add
test
or
cmp
out
hlt
ret
cmpsb
mov
sbb
inc
cmpsb
in
mov
imulb
pop
sbb
lret
sahf
repnz
dec
sti
mov
mov
out
pop
sub
sbb
mov
xor
call
rorl
in
fwait
cwtl
xor
cli
js
int
or
stc
mov
in
xor
cltd
fstpt
adc
popf
cmpsb
pop
push
push
sub
cs
mov
adc
movb
popf
cmpsb
jl,pn
loope
pop
scas
test
mov
jns
mov
cmp
add
and
xchg
les
stc
in
and
roll
push
pop
test
adc
mov
jnp
aas
cmp
mov
push
dec
fistps
fwait
pop
mov
insb
adc
add
pop
inc
add
xchg
clc
or
jo
lds
imul
cmpsb
cmp
inc
add
add
jmp
push
xchg
dec
imul
sbb
outsl
sub
sbb
sub
mov
add
repnz
js
push
jp
loope
sub
mov
push
ret
add
stos
push
sub
insb
adc
outsl
jp
sub
push
ds
or
xchg
jle
jmp
inc
xchg
xchg
fistpll
and
inc
xchg
rcl
shl
ja
clc
mov
xchg
and
add
rorb
jg
sub
fbld
bswap
or
hlt
dec
mov
xlat
push
iret
int
lcall
add
pop
add
pop
dec
jbe
sbb
adc
insl
mov
sbb
mov
cltd
lret
aad
cmp
les
loope
ficoml
pushf
test
inc
fstpt
cs
aaa
into
push
sahf
stos
cwtl
xor
gs
outsb
lret
movsl
inc
or
mov
push
sub
sub
pop
push
loope
lret
sbb
dec
pop
inc
int3
xchg
add
lret
sub
or
add
xor
jb
in
jnp
jge
adc
mov
rclb
push
fisttpl
jle
push
fbstp
test
hlt
lods
add
xchg
and
cltd
nop
out
mov
aad
push
push
inc
pop
cmpsb
adc
jmp
jb
push
cmpl
jo
negb
push
sub
lock
fdivr
and
or
or
cmp
jmp
gs
jo
sbb
in
loope
and
pusha
adc
int3
fldcw
xor
arpl
pop
lcall
mov
cld
mov
mov
mov
mulb
cmp
lcall
shr
mov
stos
in
cltd
in
les
mov
test
mov
xchg
or
sbb
shl
hlt
ljmp
fisubrl
dec
pop
mov
push
mov
xor
cmp
stc
or
mov
mov
test
nop
and
xor
or
sub
lods
movsl
lahf
add
jmp
or
xchg
pop
dec
call
or
cmp
or
cmp
jb
jno
adc
jnp
push
sbb
inc
pop
bound
aaa
vpcmpgtb
push
out
mov
call
cwtl
adc
mov
aaa
push
xchg
and
jge
test
mov
imul
cs
xor
xor
inc
mov
jbe
or
jp
lea
std
psllw
iret
call
mov
cmc
or
jmp
mov
dec
repnz
adcl
cmp
ljmp
mov
xchg
loope
fwait
int3
mov
lcall
ljmp
mov
sbb
fldl
sbb
xchg
aam
cmp
aam
adc
enter
push
sbb
cld
mov
mov
stos
jnp
sbb
cmpsl
jae
or
xchg
sbb
nop
stos
imul
out
jmp
test
loope
fcmovnu
scas
sti
cmp
xor
mov
push
scas
xchg
sbb
sti
mov
popf
movnti
fs
data16
ss
insb
int
es
push
inc
pop
popa
es
pop
bound
inc
inc
mov
es
push
lret
and
movsl
imul
mov
and
ss
lods
out
imul
pushf
jg
dec
sbb
dec
dec
daa
test
push
xchg
mov
imull
es
jle
data16
or
les
cmpsb
rcll
int
and
je
pop
and
push
int3
flds
lahf
aas
push
out
sub
rorl
lcall
scas
xlat
sbb
je
inc
popa
cmp
imul
cwtl
cmp
and
shl
scas
popa
dec
ffreep
sub
dec
cmpsb
sub
mov
mov
mov
push
jo
pop
popa
scas
xchg
lret
push
stc
lods
jecxz
loop
adc
push
pop
enter
sti
pop
sub
mov
or
adc
or
xchg
dec
mov
into
test
cmpsb
out
push
xchg
cld
daa
stos
ret
fists
cmp
dec
loop
xlat
andl
nop
mov
insl
test
iret
or
ja
imul
jge
lahf
jo
sbbb
div
and
sbb
mov
add
fbld
repz
and
insl
js
and
test
mov
faddl
pop
mov
aaa
lods
iret
jmp
push
aaa
mov
mov
leave
jne
test
xor
out
adc
jmp
pop
jne
arpl
out
xchg
mov
leave
icebp
out
jae
mov
xlat
jne
adc
jbe
lods
daa
je
aad
lods
mov
xchg
cmp
je
cs
sub
mov
xor
pop
xchg
repnz
add
push
shr
repnz
sbb
pop
mov
mov
pop
loopne
in
pusha
cmp
jo
es
dec
dec
adc
pop
aam
imul
jbe
incb
push
lret
dec
dec
jb
and
inc
and
push
popa
sbb
jae
fsts
pop
fsubl
sbb
outsb
or
xor
mov
jge
stos
stos
pop
sub
pop
int3
inc
mov
pop
scas
test
cmp
fstpt
cmp
int
aad
mov
arpl
fistps
pop
out
fsubr
sbb
and
pop
or
rclb
cmpsb
pop
cwtl
scas
lret
mov
out
adc
ret
xor
push
int
push
je
add
sub
cmp
in
pop
fadds
mov
adc
lds
sbb
add
nop
sub
mov
mov
je
rcr
aaa
inc
or
mov
faddp
push
loopne
add
sub
pop
add
dec
inc
push
jmp
cmp
cmpsb
and
xabort
inc
out
pop
mov
test
movsb
mov
popf
int
mov
or
add
pop
loop
pop
jns
inc
iret
imul
sub
dec
and
adcb
stos
cli
shrl
mov
jbe
mov
cld
inc
sbbl
dec
dec
les
jecxz
jb
dec
jecxz
outsl
inc
adc
xchg
cmp
fiadds
mov
jecxz
jns
inc
xor
mov
and
and
push
xchg
scas
lret
es
cmc
jle
rcrb
and
enter
and
movsl
cmp
fs
cld
xchg
or
rcr
imul
jmp
imul
mov
inc
cmp
int3
aaa
aaa
add
or
cmp
cs
out
push
popa
mov
xor
aaa
dec
jnp
data16
mov
mov
inc
inc
scas
cli
mov
les
into
std
inc
pop
push
jbe
xchg
xchg
xor
lahf
mov
or
dec
jmp
and
jmp
lret
sub
xor
fnsave
mov
leave
push
and
aad
jl
call
push
call
xor
mov
in
xchg
adc
lahf
or
lret
jo
mov
dec
mov
mov
int
incl
jnp
pop
jnp
cmp
imul
mov
bound
inc
popf
insl
pop
push
stos
cmpsl
mov
negl
out
addr16
popf
fwait
test
outsb
mov
and
fdivl
movsb
ficompl
jne
push
aad
xchg
push
dec
jle
stos
adc
adc
pop
pop
fxch
or
mov
bound
jae
popf
cmp
lods
data16
adc
pop
iret
clc
test
sub
jp
cmp
repz
insl
lock
adc
jle
mov
or
mov
loop
test
mov
push
test
sarb
push
cmp
and
xchg
in
xchg
inc
pop
jae
and
test
push
add
sub
aam
orl
cmp
sbb
call
jl
push
or
dec
jp
js
pop
jae
inc
cmc
xor
jp
add
mov
mov
out
shl
mov
fcmovnu
jl
lahf
inc
push
orl
mov
lds
sti
adc
adc
inc
in
jle
push
lods
push
mov
sbb
in
pop
inc
mov
push
pop
insl
xor
int
sbb
inc
ss
sbb
mov
push
and
cmp
call
mov
and
cmpb
xchg
or
in
fs
xchg
clc
mov
fs
cld
sti
add
push
leave
loope
pushf
orb
ljmp
xchg
ret
mov
inc
cmp
fucomip
add
mov
inc
cld
sarl
jl
cmp
mov
popl
cmpsb
scas
push
filds
repz
sbb
mov
rorl
jmp
call
insl
stos
or
or
sub
mov
push
xor
test
sarb
push
call
jecxz
add
movsl
cmpsb
test
lods
adc
shl
pop
repz
inc
shrb
xor
cli
lods
mov
in
inc
inc
jo
xchg
stos
inc
les
mov
loopne
jbe
cmp
pop
cmp
push
jmp
mov
mov
cmp
xor
movsb
out
cmp
adc
ja
inc
dec
and
popf
insl
or
push
popa
inc
sbb
sbb
nop
cmp
sub
xchg
es
adc
test
mov
outsl
das
data16
xchg
or
stc
les
ret
scas
out
shlb
or
jp
adc
cmc
imul
pop
mov
gs
and
adc
mov
push
int
mov
xor
lods
lret
pop
xor
add
aas
mov
jmp
add
loopne
inc
push
ftst
clts
pop
add
or
push
sahf
fstpl
mov
lock
jno
shr
scas
fisubs
mov
sbb
lock
xchg
cltd
std
fstl
repz
or
sub
xor
inc
add
fsub
rcrb
fs
dec
adc
push
xlat
mov
sub
xchg
mov
mov
adc
adc
enter
mov
pop
lods
leave
cmc
ret
inc
int
stos
test
mov
sub
add
imulb
fwait
pop
lret
lods
pop
mov
fistps
inc
dec
mov
cmp
mov
test
das
or
jb
cmpsb
fcoms
pop
mov
inc
stos
push
sbb
lock
daa
add
ret
xor
cmp
and
mov
mov
dec
adc
cmp
lret
push
lret
outsb
cwtl
inc
imul
push
adc
filds
into
stos
sbbb
int
icebp
addr16
cwtl
lcall
fwait
inc
mov
sub
pop
sbb
repz
call
mov
stc
fsubrl
arpl
dec
add
cmp
adc
mov
adc
xor
stos
inc
jl
imul
decb
mov
or
test
adc
mov
adc
and
pop
jecxz
mov
mov
push
call
push
cmc
rcrl
dec
imul
jmp
in
minps
cmp
bound
add
in
in
push
mov
push
out
les
stc
fwait
stos
mov
mov
out
je
and
jp
add
mov
sbb
push
in
xchg
push
sahf
movsl
mov
aad
shlb
dec
jnp
test
loope
pop
repnz
inc
push
enter
adc
aam
xchg
xor
sub
in
jmp
or
insl
inc
mov
pop
das
mov
testb
inc
mov
cmp
idivb
push
lret
scas
out
mov
mov
mov
adc
test
cs
lods
and
fldl
mov
js
lret
div
aad
push
lods
jp
loope
jnp
xchg
gs
dec
mov
int
in
test
scas
out
jns
lahf
xchg
daa
jge
outsb
push
xchg
push
mov
incb
das
cmpsb
js
add
jl
hlt
into
mov
push
stos
xchg
pop
push
jg
into
jle
sarb
sub
xchg
hlt
sub
aaa
mov
push
int
add
or
outsb
ljmp
lret
ret
sbb
mov
push
xor
lea
stos
sub
xchg
clc
xchg
dec
int
ret
repnz
call
fbstp
add
mov
inc
cmp
and
jmp
rcrb
adc
dec
xlat
sti
sti
sbbb
addr16
out
dec
fisubs
loope
push
mov
repnz
stos
loope
lcall
jnp
dec
mov
out
mov
test
add
cmpl
popf
xor
xor
adc
cmp
mov
lods
mov
push
and
lock
pop
mov
mov
stos
pop
inc
jg
out
jno
sub
adc
mov
fdivl
test
movl
mov
insl
fsubl
push
jg
shl
into
fsub
movsb
pop
pop
and
sub
lret
movsl
push
leave
cltd
pop
pop
pusha
sbb
int3
inc
and
call
sbb
gs
jl
add
mov
inc
push
fidivs
xor
mov
cmc
and
aad
pusha
popf
xchg
dec
add
sub
jecxz
dec
addb
imul
andb
pop
cld
loop
aad
pop
mov
stc
adc
fisubl
jge
xchg
aas
xor
mov
mov
in
rcrb
mov
or
insb
sub
clc
mov
xabort
lret
addr16
aad
push
mov
cltd
sbb
lods
insb
sbb
push
pop
mov
add
push
in
scas
dec
push
jnp
adc
or
imul
insb
inc
sub
jns
mov
dec
out
xchg
out
lret
bound
insl
jmp
xor
ljmp
mov
cwtl
jmp
xlat
cmc
push
pop
aas
popa
jle
jnp
push
dec
jno
loopne
jnp
movsb
scas
adcl
inc
std
ret
out
movsb
bound
or
xchg
es
outsl
mov
mov
cmp
lods
int3
ds
xchg
dec
adc
test
sti
nop
add
add
lods
sbb
addr16
sbbl
aam
sub
xchg
test
and
shll
fidivl
fldt
fists
hlt
sub
inc
hlt
jnp
xchg
sbb
fnstcw
in
dec
adc
sahf
iret
movsl
movsb
adc
inc
lahf
and
adc
cli
push
data16
sub
mov
xor
mov
jmp
nop
cmp
inc
movb
sbb
pop
lods
arpl
sti
inc
add
loopne
push
jb
jb
in
jne
adc
cmpb
xchg
jg
ds
xchg
push
xlat
stos
sbb
or
jg
jns
xor
les
lret
add
cmpsl
xchg
cmp
aaa
inc
lret
sahf
pop
and
adc
js
ret
or
pop
sbbb
add
xchg
xchg
mov
lret
push
pop
adc
adc
mov
xor
outsb
int3
sub
movsb
ret
xor
pop
pop
popaw
in
inc
scas
lods
push
cmpsl
pop
mov
icebp
pop
lods
lcall
cmpsb
pmulhw
repz
test
add
adc
inc
mov
sbb
fsubs
fbld
aas
xrelease
lods
cld
xor
mov
cmc
int3
shr
push
cmc
xor
sbb
dec
out
jne
push
push
es
and
outsl
pop
cmp
imul
addr16
test
js
pop
sbb
out
outsl
call
enter
push
mov
and
rorb
push
push
and
xor
dec
jmp
rorb
mov
xor
sarb
xchg
pop
call
das
jmp
sahf
fiadds
add
jns
cmp
and
cmc
outsl
sbb
test
sbb
cmovbe
xor
psraw
pushf
shlb
mov
aad
lret
cli
sbbb
lret
push
pop
aaa
pop
pop
mov
inc
push
repnz
rcrl
adc
sub
sbb
insl
dec
das
shrl
pop
stos
sub
lea
dec
adc
pusha
xor
add
mov
call
test
std
lock
sbb
divb
push
adc
add
cmp
adc
add
mov
fst
rclb
sbb
sbbb
icebp
dec
mov
outsl
fildl
addl
stos
adc
sub
pop
push
jp
xor
and
scas
lea
lahf
jns
data16
cwtl
arpl
push
push
inc
inc
fnstsw
ja
add
out
je
repz
push
jl
outsb
add
and
rorl
addr16
insb
nop
je
xchg
mov
std
push
sub
or
int
sub
mov
lahf
mov
stos
dec
dec
jp
jp
push
inc
add
pushf
sub
mov
ljmp
lock
stc
loopne
dec
jg
addr16
stos
stos
xor
and
std
mov
lahf
ss
cmpsb
push
loop
mov
dec
mov
inc
mov
es
divl
popa
daa
lahf
daa
out
iret
mov
xchg
addr16
push
aaa
and
loope
mov
push
and
lock
sub
cld
mov
adcl
repz
and
pop
xor
daa
xchg
xor
jecxz
cmp
int3
push
insl
test
adc
sbbb
dec
xchg
or
in
cmpsb
push
push
test
lret
xchg
mov
popa
or
push
xor
xchg
jl
inc
adc
aas
fdiv
repz
clc
adc
lcall
imul
fnstenv
sub
clc
scas
and
xchg
lods
pop
nop
xor
aam
pop
fidivs
mov
jnp
mov
pop
scas
pop
mov
pop
imul
cli
lods
mov
fdiv
adc
sbb
mov
and
nop/reserved
inc
pop
sbb
sbb
lcall
mov
mov
fstps
mov
cltd
xchg
sar
cmc
pop
fwait
ja
cmc
jle
mov
fdivrl
sti
push
clc
push
addr16
stos
lds
out
out
xchg
in
xchg
scas
adc
pop
adc
fbld
or
daa
dec
test
cmp
push
in
add
hlt
dec
pop
outsl
gs
mov
ds
lock
into
and
xor
push
les
stos
inc
es
adc
test
les
mov
mov
hlt
test
sub
ss
out
dec
fldl
ds
je
fcmove
inc
frstor
stc
dec
lds
mov
jae
cltd
lods
mov
outsl
inc
dec
mov
cli
mov
jl
inc
push
mov
and
daa
push
loopne
xchg
data16
dec
outsb
inc
sbb
adcb
inc
jg
fdivl
pop
pop
lahf
push
xchg
movsl
sbb
in
repz
loopne
push
adc
dec
push
cmp
imul
push
mov
sbb
push
dec
sti
add
aaa
adc
pop
sbb
jg
mov
ror
cmp
fldl
bound
and
push
wbinvd
pop
sar
popf
fmull
xor
sbb
int3
push
sti
adc
stos
jmp
xchg
mov
int3
push
jp
push
xor
pop
or
imulb
jae
or
pop
cmp
inc
jb
icebp
repz
popa
sub
ror
lock
insb
mov
inc
jmp
in
out
jnp
xor
sbb
push
push
dec
cld
xor
ljmp
in
inc
stc
shlb
inc
movsl
shl
inc
in
jnp
push
andb
fdivrs
or
mov
add
out
imul
xchg
add
dec
in
dec
inc
popf
repz
fs
xor
int3
ret
dec
cmp
jne
popf
mov
sbb
mov
sbb
imul
imul
imul
push
push
cmc
out
lds
mov
ds
add
divl
fisttpl
sbb
jmp
dec
arpl
mov
add
cmp
cmpsb
lods
pop
cmp
leave
stc
push
sub
aad
xchg
sbb
add
sub
orl
das
push
adcb
xor
popa
mov
imul
jl
imul
jb
mov
ret
into
jbe
pop
jmp
outsl
int
stos
add
push
dec
jbe
push
jne
lcall
in
ljmp
das
rolb
xchg
xchg
pusha
test
fisttpl
xor
push
sub
repz
sahf
inc
xlat
mov
dec
rorb
sbb
in
jp
xchg
fwait
push
cmpsl
in
cmp
movsl
jno
shrb
enter
movb
js
loopne
or
out
pushf
mov
icebp
popl
rclb
push
xchg
imul
sarb
outsl
push
fldt
fwait
xor
das
cwtl
cmp
adc
int
mov
mov
mov
jl
orb
cmp
mov
cmp
out
fldl
push
mov
cmp
insl
inc
or
fisubs
adc
ror
or
jle
loop
mov
lahf
mov
mov
jge
fs
mov
xchg
push
mov
pmaddwd
je
mov
ror
mov
sub
test
sbb
mov
add
int
fcoml
lahf
mov
aad
jge
leave
pusha
cmp
adc
jbe
xor
mov
or
mov
inc
mov
cwtl
bound
fs
dec
push
jge
push
sub
enter
xchg
dec
xchg
jl
cld
jge
hlt
inc
loopne
or
dec
cmp
sbb
mov
push
cmpb
mov
sbb
je
idivl
mov
enter
pop
mov
adc
pop
sbb
xor
sbb
add
test
cmpl
sbb
sbb
ds
fwait
aas
or
mov
push
mov
jge
jae
pushf
push
fdivs
push
bound
orl
out
jge
xor
test
es
aaa
je
shrb
jecxz
int3
sbb
lds
jecxz
cmp
mov
outsl
or
mov
int3
sub
enter
out
lea
movsb
sbb
dec
cltd
cmp
push
xor
sbb
data16
notl
inc
or
add
lahf
stc
cli
xchg
loope
dec
mov
mov
xchg
push
xchg
call
cmp
pop
pop
push
lock
rcll
jnp
shr
rcl
pop
jns
loop
sub
push
jno
inc
sbb
ljmp
popf
or
pop
addl
sbb
mov
lods
test
or
push
stos
jg
popf
sbb
in
xchg
or
dec
sub
dec
scas
js
lcall
pop
pop
mov
cmp
clc
scas
scas
mov
add
gs
mov
fsubs
std
mov
movsb
or
sub
jge
ja
and
pop
jp
loop
imul
lea
push
jecxz
push
outsl
mov
cltd
inc
cmp
in
aad
jne
imul
pop
adc
cltd
popa
call
call
ljmp
or
es
push
data16
daa
bound
cmpsb
xchg
int
add
xchg
loop
and
in
scas
mov
gs
dec
sub
pop
add
fwait
inc
js
sub
pusha
imul
push
mov
das
pop
push
cld
cmp
or
and
sbb
push
or
cmp
rorb
push
cltd
dec
aam
pusha
xchg
hlt
xor
in
adc
repnz
pop
shl
repnz
movsb
imul
xor
into
xchg
dec
xlat
jns
scas
mov
mov
cld
outsb
mov
or
xchg
cmpsb
push
and
enter
sub
sbbl
jge
out
outsb
insl
in
mov
mov
in
pop
shrb
insb
sub
clc
cwtl
push
rcll
sub
jg
es
jns
pop
or
repnz
xchg
push
pop
xor
aam
pop
mov
iret
or
mov
add
push
dec
and
jne
mov
cwtl
or
push
insb
adc
test
movsb
notl
cmp
pop
iretw
std
mov
sub
ljmp
or
shlb
shrl
mov
lcall
rcrl
cld
pmaxub
sti
xchg
cwtl
daa
fwait
arpl
jg
inc
bound
dec
mov
rol
into
mov
cvttps2pi
lock
adc
fbld
test
icebp
cmc
test
fmull
xchg
lock
fstl
ficoml
mov
ljmp
in
outsb
add
sbb
mov
inc
shrb
mov
push
pushf
pop
rclb
lock
test
mov
setbe
mov
stos
pop
mov
test
pop
in
outsl
jns
pop
pop
std
pop
xchg
out
cmpsb
xchg
mov
cmpsl
jl
mov
cmp
mov
sub
nop
stos
jne
pop
xchg
dec
test
or
inc
lea
lods
dec
ret
test
sahf
fildl
xorb
test
mov
das
scas
adcb
in
lcall
add
jmp
sbb
cmpsl
lea
outsl
sub
clc
xchg
push
stc
rcll
pop
movsb
pushf
sar
popf
setae
and
sub
or
dec
imul
sbb
aad
jno
lds
fidivrl
cmp
pop
and
pop
mov
adc
push
test
mov
lahf
sub
mov
inc
xor
xchg
out
shrb
sti
mov
cmpsl
scas
cmp
cltd
sub
cld
lods
out
sbb
jns
std
xor
gs
and
or
cmp
inc
xor
push
and
xchg
loope
in
idivb
sbb
popf
repnz
or
jae
rorb
sbbl
arpl
icebp
xchg
mov
inc
outsb
aam
pop
fildl
fsubrs
popa
mov
fcoms
mov
shl
inc
mov
and
outsb
cmpsb
sbb
mov
mov
pushf
mov
adcl
out
xor
xchg
jno
push
xlat
shrl
lea
movsb
loop
and
out
xchg
sub
inc
cld
adc
arpl
add
stos
stc
mov
lret
jne
lret
fcmovb
jle
rol
dec
std
call
repz
xchg
enter
ljmp
test
fsubl
ja
dec
cmp
adc
movsb
ds
sub
aam
shrb
adc
push
cld
int3
jp
jp
and
enter
adc
jo
aad
int
inc
push
mov
add
gs
mov
sbb
fcoml
cmpsl
into
sub
inc
test
mov
inc
pusha
add
inc
xchg
or
sub
jns
pop
dec
dec
loope,pt
popa
stos
adc
shrl
daa
dec
inc
pop
into
cmpsl
fldl
lahf
roll
mov
cmp
inc
fsubrs
adc
aas
mov
pop
and
jmp
pushf
mov
jb
sub
or
adc
mov
push
fcomi
xchg
jg
jne
xor
add
iret
mov
push
inc
dec
test
bound
push
dec
repnz
mov
jle
mov
ja
aad
arpl
negb
xchg
adc
stc
lahf
lods
dec
pushf
inc
sbb
mov
cmp
xchg
clc
or
jp
or
dec
jecxz
inc
lock
hlt
dec
mov
push
int3
xchg
stc
mov
fsts
sub
jmp
cmp
cld
lret
std
pop
mov
pop
push
xchg
push
ret
imul
sar
scas
jecxz
sub
cmp
test
repnz
xor
mov
inc
aas
adc
xchg
loopne
shrl
push
sti
cwtl
add
lcall
aas
sahf
add
lods
inc
data16
imul
mov
pop
ja
mov
ret
fs
test
or
mov
shlb
xchg
gs
fistpll
inc
sbb
call
sbb
mov
jbe
ljmp
mov
xchg
or
add
pushf
ljmp
jo
mov
cmp
sub
pop
fsubrl
xorb
fimull
cmpl
out
adc
xchg
cmp
sub
sub
pop
lcall
or
sub
lret
ja
leave
into
mov
or
pop
push
stc
xor
out
cmp
fstpt
and
cmpsb
data16
sub
nop
dec
xchg
xor
jno
pop
mov
inc
out
pop
lret
mov
adc
daa
sbb
in
xor
rolb
lcall
subb
inc
and
lcall
aam
mov
adc
stos
or
pop
mov
cmp
pop
in
and
jno
push
lods
adc
mov
pop
bound
cmp
out
mov
shll
pop
xor
icebp
inc
xchg
sbb
test
addr16
push
inc
ret
movsb
outsl
add
adc
and
sub
mov
bound
stos
dec
aas
orl
sub
cmpsl
cmp
sbbb
ja
ret
sub
jmp
in
push
std
xor
loop
pop
sub
cmp
scas
jb
sahf
lea
outsl
test
sbb
add
xor
add
jg
pusha
sub
inc
stc
push
inc
in
lds
mov
cli
or
inc
inc
or
cmp
mov
sbb
stos
adc
pop
adc
jl
test
sub
fsubs
fiaddl
sbb
mov
int3
rorb
iret
hlt
cmp
push
imul
mov
cmpsl
inc
push
mov
sub
inc
add
hlt
repz
adc
aam
pop
add
lods
out
xor
xchg
xlat
or
cmc
mov
lods
jle
push
adc
xchg
and
arpl
dec
push
pop
in
jecxz
push
repz
xchg
cmpsb
push
inc
out
adc
jnp
add
mov
roll
outsl
int3
loop
pop
lret
or
fcomp
mov
cli
sbb
mov
mov
outsl
mov
jbe
xor
xchg
icebp
les
aaa
and
mov
mov
inc
jb
aam
enter
inc
shl
xor
xor
out
ljmp
dec
mov
push
fnstenv
jo
scas
cli
arpl
outsl
imul
sahf
xor
repz
hlt
push
shl
cmpsl
adc
stos
lods
dec
popa
cli
bound
mov
sbb
lahf
mov
push
iret
mov
mov
popa
jl
scas
hlt
inc
cmp
and
imul
jnp
mov
mov
ljmp
cmpb
nop
aaa
mov
pop
push
cmp
aad
jb
les
dec
rcll
xor
lock
mov
jne
lret
xor
stos
inc
call
pop
pop
movsb
aaa
lds
je
inc
mov
mov
repnz
ficomps
fistps
adc
fs
adc
cmp
lea
mov
sub
xchg
dec
stos
dec
scas
push
movsb
iret
daa
out
adc
lds
lods
lods
mov
mov
xor
jp
lret
ljmp
fiadds
mov
loopne
ljmp
cmc
pop
push
not
mov
xor
scas
mov
mov
pop
xchg
mov
jae
or
dec
xor
xor
ljmp
push
lret
stos
adc
adcl
repz
fidivs
xchg
or
cmpb
stos
mov
xor
push
xor
pop
mov
imul
fcmovbe
pop
mov
pop
jno
xor
insb
add
cmp
xor
fistpll
rclb
mov
dec
mov
dec
in
xchg
mov
mov
sbb
push
mov
imul
scas
sub
movsl
inc
push
iret
and
jge
lods
pop
mov
int
push
xor
insb
sub
dec
mov
das
jl
ds
lea
cmpsb
mov
mov
fbld
xchg
rcll
rorb
mov
mov
add
inc
cli
cmp
lock
cmpsl
mov
sti
jo
dec
xor
test
push
or
mov
xor
mov
fldenv
xchg
push
arpl
repz
add
test
outsl
shrb
jb
mov
inc
xor
or
jnp
cmpsl
dec
push
enter
imul
mov
addl
jg
inc
icebp
lea
xchg
stos
mov
fwait
push
loop
fidivrs
popf
pushf
lods
fiaddl
fimull
jl
jp
add
cmp
ret
fsts
cltd
outsl
sbb
mull
pop
in
or
test
add
mov
insb
subb
int3
jns
mul
nop
push
fwait
loopne
lret
cs
dec
stc
pop
sub
xor
cmp
shll
stos
adc
mov
out
jo
lret
lahf
mov
lret
xor
and
jp
test
loopne
sub
or
cli
jmp
pop
and
push
mov
nop
aas
inc
push
call
std
xchg
xchg
cmp
xor
in
notl
or
iret
sbb
out
rolb
std
add
jnp
mov
push
adc
scas
sbb
jbe
sarl
loopne
push
sub
mov
mov
xchg
bound
fnsave
lock
pusha
mov
dec
lahf
hlt
cmc
imul
sbb
hlt
mov
enter
scas
scas
mov
pop
push
inc
fiaddl
fsubrl
lods
fiadds
jmp
and
push
mov
fs
fs
fxch
jl
sbb
and
cmp
xor
cmc
dec
push
dec
fwait
and
aam
xchg
sahf
out
add
jmp
or
pop
mov
lcall
daa
pop
ja
dec
sbb
inc
stc
mov
push
pop
inc
pop
jge
mov
and
js
fisubrl
dec
stos
dec
fildl
adc
movsl
aaa
int3
cmp
sbb
xlat
mov
or
jmp
jbe
jae
jg
pop
cmpsl
popa
xor
sbb
fidivrs
mov
mov
addr16
enter
loopne
cmpsb
xchg
sub
mov
js
test
int3
mov
sub
pushf
jb
jle
test
inc
mov
jno
fwait
sbb
fcmovnu
mov
incl
xchg
push
xor
pop
fsubr
inc
inc
dec
iret
pop
in
xchg
call
xchg
inc
rclb
stos
call
push
mov
dec
aam
out
mov
leave
sub
testl
or
ret
aam
pop
mov
jp
push
mov
ljmp
shr
pop
or
mov
lcall
fdivp
stos
xchg
fwait
hlt
cmp
mov
cmp
add
cld
stos
ret
cmpl
or
cmc
frstor
js
imul
imul
pop
add
pop
fstpl
pop
aas
ja
pop
dec
cmp
divb
adc
dec
jmp
incb
sbb
js
push
or
out
lret
xor
mov
add
sub
addr16
clc
xchg
sbb
xor
inc
cwtl
pop
pop
xor
shrb
pop
adc
xchg
mov
lret
dec
mov
in
sbb
dec
sbb
cmp
call
mov
enter
mov
hlt
stos
sbb
in
ficomps
and
cmp
pusha
lds
jnp
pop
pop
sbb
fsubs
pushf
aaa
ljmp
jp
and
arpl
fisubs
shlb
add
pop
mov
xor
mov
sub
inc
lret
push
cld
and
jb
mov
lret
or
xchg
adc
mov
mov
sahf
int3
pop
mov
mov
pop
rclb
shrl
pop
mov
clc
xchg
insl
mov
cmp
xchg
jp
lahf
jp
pop
iret
fldt
bnd
mov
sahf
cmp
or
lock
and
aas
sti
lret
and
rcr
xlat
mov
imul
pop
insl
jle
js
inc
ret
js
adc
movsl
aad
jecxz
xchg
xor
nop
subl
ja
mov
push
je
fisubrl
aas
ret
adc
std
xchg
les
popf
inc
jb
data16
imul
lret
aas
push
jnp
sub
dec
cmpsb
shl
xor
push
or
fs
jnp
or
mov
mov
pop
mov
sub
nop
aaa
movb
cltd
jecxz
es
jns
dec
iret
sbb
ds
push
mov
xchg
cmp
mov
nop
lahf
pop
push
and
sti
outsb
and
lret
adc
push
aam
lea
cmp
mov
sub
enter
loope
mov
pusha
pop
enter
ljmp
push
dec
jge
aaa
ret
movsb
roll
cmp
movsl
mov
in
fistl
sti
jns
nop
sbb
xchg
sti
dec
mov
mov
sub
cmpsl
popf
arpl
ret
mov
sarb
sahf
neg
in
mov
xchg
sahf
cmp
xor
cltd
mov
push
or
lea
mov
push
iret
cmp
add
cmc
dec
dec
cmp
pop
insl
lret
lret
jmp
mov
lock
repnz
stos
mov
ret
pop
and
inc
mov
je
fsubr
or
pop
into
popf
lock
add
fwait
and
aad
adc
dec
nop
jg
mov
fcmovnb
ret
jecxz,pn
xchg
pop
fdivrl
lret
cmp
ret
sbb
mov
jns
outsb
mov
call
push
or
or
hlt
lea
leave
cld
pop
aas
mov
inc
mov
dec
aad
into
inc
popf
ds
lcall
mov
xor
call
shrb
mov
add
adc
or
sub
in
arpl
adc
inc
cmp
cwtl
and
and
mov
jns
pushf
xchg
pushw
cmp
mov
push
adc
sahf
mov
cli
and
stc
int
mov
pop
jae,pn
imul
out
adc
push
outsb
sub
push
add
out
repnz
or
mov
xchg
fs
jl
imul
lahf
pop
push
fstpl
and
fucomi
das
shrb
xor
mov
ljmp
dec
mov
movsl
push
repz
inc
sti
lahf
push
insl
dec
mov
leave
dec
add
and
out
push
in
pushf
inc
stc
pop
scas
imul
pop
mov
cmp
sbb
add
pusha
cli
stos
popf
adc
scas
decl
iret
rcrb
inc
shlb
push
test
sub
in
xor
mov
xchg
sub
test
adc
jnp
adc
enter
insb
and
mov
push
mov
mov
add
jl
insb
push
pop
imul
loopne
sbb
sbb
add
jb
repz
hlt
sub
push
lods
cmp
outsl
ja
mov
pop
mov
inc
xchg
jo
cwtl
sbb
pop
mov
xchg
mov
mov
gs
int3
fcoml
adc
mov
test
mov
imul
and
push
push
in
dec
pop
and
xchg
ja
rcrb
dec
rclb
call
xchg
ficomps
mov
pop
dec
and
mov
fsubr
pop
jne
and
push
cld
xor
ss
fists
and
inc
and
xor
scas
gs
std
out
pop
push
add
scas
pop
in
inc
sub
mov
dec
arpl
or
loop
sbb
and
pushf
insl
stc
addr16
pop
push
cmp
pop
int3
jb
lods
mov
repnz
xor
sub
push
push
sbb
jno
xor
xor
mov
stos
ds
ret
dec
dec
sub
in
push
sahf
add
pop
fcoms
fs
mov
xchg
cmp
ficoms
ja
ljmp
dec
dec
dec
and
out
jnp
cmpl
mov
mov
pop
fmulp
mov
mov
sbb
xchg
sub
or
shrl
sub
pop
mov
or
dec
cltd
adc
mov
mov
or
add
xor
add
push
loop
xchg
mov
arpl
fwait
jb
and
add
or
in
ret
idivb
std
cmp
cmc
and
repz
ret
lea
lret
cltd
data16
fstpt
int3
int
test
mov
mov
pop
repnz
sahf
popf
repz
clc
ror
jbe
aaa
cmp
xor
and
sub
push
lret
jo
je
orl
mov
shrl
imul
mov
lock
push
gs
xor
aaa
jge
lret
adc
xor
notb
cmc
daa
pop
repnz
sti
test
xchg
ds
adc
sahf
and
adc
cmovge
leave
push
insl
add
je
jo
fs
int
sarl
pop
ja
adc
in
fwait
lods
stos
pop
nop
cli
mov
clc
push
pop
lods
xchg
sbb
dec
icebp
push
xchg
ss
mov
cmp
ss
sub
push
jge
loop
data16
sbb
in
inc
adc
out
enter
xor
xchg
pushf
scas
jl
add
cwtl
and
sbb
stos
cmp
ljmp
out
rcll
leave
cmp
roll
xor
iret
pop
punpckldq
iret
mov
xchg
cmpsl
mov
orl
xchg
clc
dec
mov
cmp
sub
adc
int3
jae
xlat
cmp
in
ljmp
fsubs
rcrl
adc
repz
sub
push
cli
sarb
repz
ret
xor
fwait
mov
aad
xor
cmp
dec
sbbb
mov
fwait
aad
mov
mov
sbb
jnp
inc
scas
jns
adc
jo
xbegin
and
jge
jne
jmp
scas
xchg
call
divl
scas
xorl
in
adc
sahf
push
mov
stc
mulb
xchg
mov
rolb
imul
jp
out
pushf
push
lret
pop
aam
mov
mov
lods
inc
enter
jns
decl
jo
fs
mov
pop
pop
pushf
jo
gs
ret
lret
lods
mov
cmc
jnp
int3
js
cmp
test
mov
adc
fwait
icebp
inc
mov
inc
roll
ss
dec
cmpsl
jp
js
xor
orb
iret
sarl
cmp
scas
js
cmp
sbb
adc
mov
xchg
mov
stc
clc
and
push
mov
pop
pushf
fwait
fwait
jle
add
imul
xchg
inc
add
inc
ss
jl
popa
sbb
shlb
aad
inc
and
arpl
pop
xor
inc
movsb
or
rorb
pop
dec
mov
or
mov
sarl
popa
fs
sbb
dec
sbb
dec
cmpsl
lcall
js
lock
jns
jmp
sbb
in
xchg
lods
mov
cmp
push
xor
stc
xchg
jo
sarl
mov
fs
stos
das
xchg
stc
inc
pop
in
or
mov
aam
sahf
cmp
xchg
jne
pop
xor
sahf
jle
cwtl
test
sti
or
out
cli
shll
push
cmp
jno
dec
inc
xchg
ds
fcomip
out
mov
mov
or
shr
outsb
in
in
sub
cltd
jno
and
stos
pop
xchg
rol
fcompl
jmp
push
ds
loopne
pop
xorb
and
outsl
push
clc
out
frstor
enter
cmp
add
test
jg
jbe
aas
sti
jo
mov
int3
mov
push
mov
mov
repz
cmpsb
aam
cmp
out
xchg
xchg
lahf
jb
sub
push
icebp
clc
xor
xlat
sub
int3
movsb
mov
shrb
movsb
push
mov
sub
shll
pop
scas
das
jmp
insl
imul
push
fldcw
je
stos
xchg
inc
orb
push
sub
push
addl
outsl
into
xor
arpl
int3
aas
sbb
lret
xchg
repz
dec
insb
pusha
call
jle
xor
enter
mov
fisubrl
xor
mov
mov
loop
push
imul
adc
cmp
pop
shrl
rorl
xchg
rcll
cwtl
fdiv
inc
push
cmp
cmp
push
mov
mov
loope
and
add
adc
adcl
xlat
mov
iret
jge
xchg
xor
mov
lock
mov
fists
push
jg
cmp
scas
or
gs
mov
mov
jp
nop
sub
push
xchg
mov
dec
insl
insb
cmp
or
inc
leave
sub
sbb
xor
mov
test
jmp
cwtl
cltd
sbb
jae
popf
jg
jmp
lret
repnz
out
dec
ja
ret
pop
out
in
mov
nop
filds
sar
push
xchg
sahf
xor
sub
enter
icebp
out
imul
pop
nop
jmp
cld
ret
sti
mov
jp
jl
rep
fcoml
and
mov
js
inc
int
fs
hlt
push
and
jge
push
arpl
pop
ror
movsl
or
sti
inc
ret
lret
pop
cmp
cmp
add
sbb
push
xchg
lea
add
flds
sbb
dec
sub
sti
stos
sub
clc
adc
ret
js
lahf
and
pop
aam
ss
inc
mov
dec
sbb
cmc
pop
add
mov
cmp
xchg
xchg
push
movsl
hlt
jae
pop
jle
dec
sub
push
clc
or
ja
pop
pushf
sub
pop
mov
insb
mov
test
in
dec
aaa
fildll
xchg
leave
aas
sub
sbbb
out
outsb
inc
sub
xor
pop
push
mov
jmp
sahf
inc
mov
mov
je
ret
daa
cmpsl
fsubs
inc
jne,pt
sti
cmp
or
and
inc
dec
sbb
faddp
ret
fs
test
aam
out
push
or
mul
sub
xchg
sbb
inc
shlb
push
jecxz
pop
mov
mov
sbb
mov
dec
adc
out
aaa
pop
inc
jp
adc
or
xchg
or
adc
lret
sub
stos
sub
fwait
aam
inc
dec
add
pusha
mov
xchg
int3
ljmp
cli
sub
lret
scas
sbb
rorb
xor
mov
shl
mov
xchg
cmpsb
or
push
test
mov
inc
push
inc
std
cmp
inc
pop
ljmp
and
jns
push
push
stos
dec
mov
sbb
adc
cwtl
xor
sbb
in
test
push
cmp
push
pop
mov
add
mov
and
xchg
sub
and
mov
fiadds
mov
int
lods
xlat
popa
cmp
gs
pop
fstps
stc
stc
inc
ret
sbb
pop
cmp
shll
jae
dec
sbb
mov
sti
inc
out
push
mov
jnp
stos
mov
loopne
leave
jne
and
loope
es
or
pop
add
jmp
jecxz
jl
inc
std
mov
rorb
cltd
jp
out
jl
cmc
stc
sbb
out
rorl
dec
not
in
clc
push
enter
add
inc
and
mov
fmuls
fsubrp
jo
insb
sahf
icebp
in
clc
xor
mov
hlt
mov
cmc
movsl
test
xor
hlt
add
pop
enter
enter
ja
ja
ss
cltd
shrl
mov
test
jg
and
jg
or
out
es
add
jbe
repnz
push
inc
pushf
gs
dec
cld
sti
jmp
inc
mov
push
ret
jg
xchg
jo
prefetch
movsl
mov
enter
popa
mov
sub
pop
int3
lcall
frstpm(287
add
and
pop
pop
jg
ljmp
lahf
gs
fidivrs
pop
inc
xor
out
ss
mov
mov
inc
dec
insl
testl
hlt
cmp
js
mull
ljmp
into
call
jg
push
lods
enter
cmp
stc
cmpsb
je
ret
mov
and
inc
sub
xor
xchg
icebp
push
mov
test
push
inc
xchg
enter
mulb
insl
and
sub
in
int3
add
lret
dec
cmp
jns
je
xchg
add
fistpll
in
dec
jmp
arpl
pop
ret
mov
adc
pop
loop
xchg
je
mov
jne
or
imul
cli
push
jno
out
jb
test
xor
pop
fsubs
into
jp
gs
lock
addb
ja
pushf
mov
je
sub
fwait
mov
imul
or
in
mov
fnstenv
std
dec
inc
dec
xchg
xor
push
in
mov
inc
xchg
add
jp
scas
insb
pop
dec
push
mov
ljmp
out
or
sub
ds
or
stos
insb
ja
dec
sbb
xor
mov
jg
popl
call
daa
pop
sub
jp
call
xchg
addr16
add
jns
adc
add
in
xchg
sbb
orl
stos
in
cmp
xchg
stos
mov
xchg
aad
dec
sar
jge
push
cmp
lock
push
inc
mov
imull
inc
inc
push
sbb
and
add
xlat
xor
scas
pop
rcrb
test
xlat
sbb
stos
sbb
pop
add
call
insl
jnp
test
mov
and
scas
std
mov
jbe
xor
fadds
shlb
fwait
push
jg
adc
inc
movl
inc
int
lods
in
out
cmc
mov
in
xor
jno
push
xchg
mov
movsl
fbld
testb
push
lea
cmp
cmp
inc
scas
leave
js
sub
xchg
inc
lods
pop
test
inc
inc
xchg
out
inc
mov
inc
std
test
imul
addr16
std
mov
negl
push
fs
cmp
fdivp
jecxz
pushf
jbe
inc
ret
adc
or
push
cmp
lock
idivl
inc
loopne
test
fistpl
jmp
aaa
lret
push
cmp
scas
and
xor
je
out
pushf
jle
sbb
in
repnz
adc
stc
mov
pushf
lret
sbbl
leave
pop
sti
insl
push
scas
cmp
jg
fwait
xor
scas
push
pop
inc
sbb
xchg
xchg
cmc
mov
pop
loop
ficomps
mov
dec
add
loope
arpl
repz
xor
dec
jnp
cld
int
sub
shrl
cmp
sub
popf
cltd
outsb
mov
xchg
cs
inc
test
mulb
out
push
xchg
mov
xchg
lcall
mov
outsl
sbb
insb
add
insl
adcl
push
rclb
mov
mov
mov
jecxz
pop
jmp
adc
lods
add
repnz
repz
pushf
arpl
add
data16
nop
cs
lahf
shlb
adc
stos
test
cmpsb
push
xor
in
decb
sub
addb
loop
xor
push
mov
adc
cmp
mov
sahf
adc
jns
dec
mov
jg
shrb
sub
push
sti
mov
or
scas
gs
push
sti
adc
and
fs
mov
imul
dec
xchg
lock
jb
mov
mov
mov
adc
sbb
cmpsl
adc
cmpsl
incb
jne
xor
call
inc
fwait
cmp
jg
adc
lock
cmp
mov
in
sub
movsl
cli
scas
mov
fistpll
xchg
movsb
mov
jmp
int
sbb
jo
inc
push
rorb
xlat
sub
cmp
pop
pmovmskb
sub
mov
dec
push
mov
cmp
jp
sbb
sbbb
adcb
sub
out
adc
dec
xchg
mov
mov
mov
jno
loope
adc
sbb
lcall
and
push
cmp
test
orb
ja
daa
pop
stos
jg
pop
insl
mov
test
add
mov
or
mov
push
push
add
push
pop
jecxz
mov
outsb
into
movsb
pop
inc
mul
adc
jae
fimull
jp
cmc
fldcw
pop
aad
xor
imul
daa
test
lods
cmp
ds
daa
mov
jae
fistl
xchg
jbe
popa
sarl
add
movl
push
stos
push
aas
flds
mov
cs
loopne
lret
inc
int
jecxz
clc
testb
dec
xchg
xchg
jo
insb
push
xchg
mov
sub
rep
into
out
xor
clc
pusha
and
data16
and
pop
fsub
cltd
push
shrb
xor
dec
pop
add
test
dec
movsl
jo
xchg
jne
popl
int3
sbb
jno
xor
xor
cltd
hlt
repz
shll
shr
cld
lahf
adc
test
mov
movsl
xorb
push
mov
aam
jo
cwtl
and
fisubrl
mov
push
mov
or
out
pushf
add
dec
jl
xchg
jno
xor
std
stc
jb
mov
mov
popf
lret
pop
rorb
popf
inc
rol
mov
fbstp
sub
lea
leave
or
arpl
or
lea
inc
mov
add
sub
lret
sub
mov
jne
mov
test
mov
bound
adcb
jle
call
mov
scas
ljmp
cmpsb
std
or
adc
sub
xor
insb
xchg
inc
mov
or
js
and
loopne
or
cmpsl
sub
inc
xor
xor
loopne
lret
ja
xchg
scas
push
xchg
or
jno
rcrl
dec
stos
fsubl
mov
inc
mov
pop
std
push
mov
rorb
mov
adc
aam
sbb
or
xor
lea
lds
and
jns
aad
sarl
mov
dec
outsl
ss
add
imul
ss
ss
sub
outsl
xchg
scas
dec
jnp
jbe
and
push
int3
or
nop
xor
and
mov
jle
mov
in
pusha
stos
and
xor
ret
ljmp
pop
fnsave
dec
lret
scas
fsubl
sbb
mov
add
push
cwtl
mov
adc
ror
test
mov
jp
sbb
shlb
push
jp
inc
stc
jmp
dec
lods
or
jne
mov
cmpsl
sub
jle
cwtl
jns
jge
cmp
adc
jno
int3
jnp
lret
pop
clc
mov
push
jnp
lret
add
or
shlb
dec
unpckhps
hlt
cmpsb
push
aas
push
mov
rclb
repz
add
inc
pop
popa
sbb
xchg
push
pop
mov
mull
popa
popa
xchg
in
cli
shlb
dec
sub
rcll
cmp
iret
push
push
inc
fs
adc
stc
icebp
adc
cld
mov
test
stos
repz
add
cwtl
stos
xchg
insb
popf
pop
icebp
cmp
and
mov
or
ljmp
mov
sub
in
push
add
scas
nop
cld
scas
and
and
and
jnp
ljmp
fisttpll
mov
cmp
sbb
call
mov
xchg
mov
jp
inc
cld
aad
clc
mov
and
repnz
sub
inc
rcrl
mov
pop
in
cltd
mov
dec
shlb
jmp
or
arpl
nop
jb
mov
cmp
lcall
fsubrs
fwait
add
or
mov
inc
imul
lcall
sbb
aad
test
sbb
dec
fdivrs
outsl
mov
rcrl
jb
add
loop
test
popa
push
pop
cs
mov
pop
stc
sbb
sbb
es
cmp
in
sub
sahf
push
mov
shl
shlb
xlat
push
fsub
sbb
das
mov
fcoms
mov
push
js
mov
dec
dec
ja
lods
imul
cmp
dec
testl
fldcw
sub
pop
sub
mov
pop
push
adc
jnp
mov
loopne
movsl
inc
push
or
sbb
in
mov
pop
shlb
mov
ror
cmp
cmp
mov
icebp
pop
mov
mov
inc
push
cmp
push
int3
out
and
push
loopne
outsb
iret
pushw
xor
dec
adc
sub
es
adc
add
aam
out
popa
lret
dec
and
adc
mov
loop
lahf
loope
inc
dec
sahf
pushw
xor
jmp
in
jp
cmpsb
inc
or
insb
mov
ljmp
ds
adc
cmpb
push
sbb
sub
dec
mov
push
arpl
lret
sub
rcll
stos
mov
pcmpeqw
cli
aad
dec
inc
rorb
xlat
insb
cmp
mov
leave
pop
adc
and
jecxz
adc
lcall
add
int
addl
int
shl
mov
fs
pop
movsl
gs
dec
pop
shll
int3
jo
push
and
out
jmp
gs
mov
and
xchg
mulb
xchg
push
and
shl
mov
out
sbb
or
pop
add
xchg
mov
cli
xchg
xchg
xchg
jb
test
jge
adc
cmp
push
aam
inc
aam
test
movsl
imul
push
addl
mov
adcb
insb
xchg
lcall
mov
in
push
cmpsl
outsb
mov
je
outsb
fsubrl
ret
enter
scas
or
repz
pop
out
nop
leave
dec
pop
mov
sbb
or
inc
addl
jecxz
lea
push
insl
pop
aam
shrl
jge
fmuls
add
test
loopne
pop
xchg
jp
leave
fs
mov
fwait
xor
cmp
pusha
lods
das
adc
adc
pop
loope
inc
addr16
filds
xor
pop
out
mov
fnstenv
aad
in
mov
xchg
mov
into
xor
fstpt
out
xor
scas
imul
add
push
fisubrl
popf
pop
cmp
lret
arpl
mov
inc
repz
inc
hlt
adc
adc
in
or
add
dec
inc
out
mov
pop
dec
fnstenv
add
into
je
gs
decb
mov
lds
xor
in
das
addl
shll
daa
add
sub
in
push
imul
cmc
cs
imul
bound
cs
mov
jl
mov
js
cmpsl
pop
sbb
das
add
cmpsl
repz
pop
lock
sbb
into
addr16
jle
ror
cltd
and
adc
in
pop
xchg
push
xchg
mov
bnd
int3
fsub
loop
inc
lret
aas
icebp
movsb
and
sbb
pop
inc
or
shl
adc
movsl
outsl
aaa
jmp
add
mov
mov
out
adc
sar
pop
jns
or
sbb
stos
cmp
xchg
pop
call
ja
and
leave
es
sbb
in
and
mov
out
xor
rclb
popa
pop
xlat
xchg
mov
and
add
cld
jbe
mov
lcall
jle
loopne
cli
adc
lcall
fnstsw
dec
and
inc
hlt
add
cltd
aaa
mov
push
imull
cltd
mov
adcl
pop
mov
in
aad
sub
sbb
dec
addb
lret
addb
jae
icebp
orl
push
outsb
outsl
pop
adc
xchg
cmp
adc
adc
lret
mov
in
adc
mov
andb
mov
in
mov
stc
lret
out
ret
ror
push
sahf
ljmp
xchg
rcl
sbb
xor
mov
sysexit
pop
inc
pop
mov
inc
xor
push
std
fstpl
pop
pop
dec
sarl
aaa
push
call
jmp
adc
lods
in
and
bound
into
nop
nop
inc
fisubrs
fnstsw
lds
jno
jnp
fwait
mov
hlt
aaa
pop
stc
pop
fcmovnu
dec
or
sahf
jne
sbb
push
adc
lds
orb
xchg
jb
dec
jp
cmp
mov
mov
mov
sbb
into
mov
iret
jns
xchg
rorl
ljmp
lods
and
dec
mov
outsb
test
add
das
popf
dec
call
mov
or
shr
loope
sbb
ret
popf
fidivl
aam
xchg
mov
lea
test
inc
pop
nop
call
sbb
push
mov
dec
ljmp
mov
nop
iret
add
pop
bound
mov
sub
mov
sar
fcmovu
fucomip
jle
cmp
add
out
mov
adc
mov
aaa
push
lret
jbe
inc
dec
outsb
xchg
fisttpl
aas
jbe
loopne
aad
xchg
push
jns
andb
inc
dec
xor
cmpsb
addr16
in
sbb
lds
push
pop
mov
lret
hlt
loopne
ja
jl
testl
push
loop
in
orl
push
sbb
xor
xlat
outsl
cld
mov
popl
test
ds
in
xlat
and
imul
dec
lods
je
adcb
or
pop
xchg
mov
and
sub
dec
in
bnd
pusha
outsb
fdivs
xchg
das
data16
data16
scas
iret
into
adc
cmpsl
loop
mov
std
adcl
in
sub
sbb
in
and
insl
adc
mov
cwtl
test
adcl
sti
inc
mov
bound
nop
test
pop
mov
data16
scas
jno
mov
xchg
pop
mov
xchg
and
loope
stos
cltd
sub
jl
ret
cli
shrb
dec
dec
and
and
ficomps
loopne
mov
aas
sub
mov
push
xchg
mov
dec
mov
sub
loope
lcall
orl
aad
jmp
negl
aas
scas
xchg
add
addr16
xchg
loopne
jo
xor
mov
adc
add
test
les
push
ficoms
or
xor
push
cmp
inc
mov
xchg
outsl
mov
xor
xor
push
dec
jecxz
imul
dec
mov
sbb
sbb
xor
mov
xor
inc
jo
fcmovnb
and
mov
add
mov
fisttpll
xorl
int
and
push
jge
imul
mov
inc
dec
int
sbb
andl
xchg
adc
stos
push
inc
icebp
and
ds
or
jbe
aad
mov
aam
adc
jmp
jp
ret
cld
cmpsb
mov
test
jne
enter
out
inc
jle
out
mov
scas
imul
mov
or
push
push
sbb
ds
cmp
dec
ss
jecxz
loop
cs
les
imul
rorb
mov
mov
nop
mov
adc
dec
mov
scas
sub
call
sub
pusha
and
ss
dec
es
repnz
or
sub
aas
add
in
out
icebp
mov
sub
ljmp
xor
into
imul
fdivrl
ljmp
xchg
adc
sbb
push
repz
mov
add
je
adcb
and
testl
mov
dec
leave
xchg
push
in
ljmp
or
pop
mov
popa
aaa
push
mov
add
mov
fucom
mov
lahf
sub
sub
aam
in
in
scas
repz
test
add
movsl
add
nop
sarl
dec
mov
lods
inc
xchg
outsb
shl
movsb
inc
mov
test
subl
mov
mov
dec
xchg
xchg
push
aas
outsb
das
mov
sbb
rol
rorb
push
inc
lret
xchg
loopne
test
scas
mov
push
stc
int
ret
xchg
scas
fistpl
adc
push
ret
push
inc
data16
cmp
cmp
dec
dec
or
imul
int
cmc
fldl
push
lock
in
or
imul
xchg
cwtl
push
fdivrl
push
xchg
push
les
test
scas
and
mov
fninit
cmpl
iret
lcall
adc
cmp
je
mov
fwait
mov
xor
and
lds
fisubrs
xrelease
mov
xchg
repz
and
adc
dec
inc
pop
lds
cmp
popl
or
and
popf
adcl
sbb
xor
or
or
repnz
ret
add
movsl
mov
ljmp
pop
mov
divl
and
adc
les
and
aas
gs
pop
sbb
jne
dec
in
cmp
push
and
roll
psubq
add
adc
push
gs
fstps
fistpl
frstor
cmp
mov
lds
add
push
js
rcl
push
fucomi
xchg
aam
sub
imul
add
aas
sahf
in
sub
sti
or
aaa
pop
lds
sti
sub
test
mov
dec
mov
xchg
das
jmp
push
lea
inc
mov
pop
in
cli
and
pop
mov
sbbl
ret
push
bnd
jns
push
xor
pop
or
dec
scas
es
cli
dec
out
test
fbld
dec
xchg
inc
stos
je
add
pop
push
cmp
mov
dec
xchg
in
test
push
in
pop
or
sarl
mov
mov
pop
or
add
inc
inc
xor
or
fstps
dec
das
xor
xor
sahf
xor
movsl
ds
mov
lret
ljmp
addr16
sahf
xor
mov
or
jns
out
call
testl
jb
movsl
jge
push
lea
lods
jnp
jo
cmpsb
pop
jbe
das
sub
pop
dec
dec
and
sbb
mov
mov
sub
lea
dec
arpl
ds
cwtl
pop
or
pop
xchg
dec
mov
arpl
pop
insb
add
pop
cmpb
iret
hlt
gs
sub
pop
in
sahf
arpl
ficoms
in
or
iret
mov
push
add
push
push
jbe
adc
outsl
int3
and
xor
pop
stc
cmp
ljmp
aam
xchg
inc
add
push
sub
inc
int
out
arpl
xchg
sub
pop
cmp
into
cmc
mov
or
lock
je
mov
mov
stc
cmp
movsl
leave
xchg
xchg
inc
mov
xchg
jecxz
out
jg
mov
xchg
fnstcw
jno
pop
sub
lret
and
mov
xchg
jg
js
daa
clc
mov
push
mov
jle
mov
shll
loope
xor
mov
adc
push
xor
int
scas
clc
ja
jle
and
push
fimuls
mov
adc
in
push
ss
aad
pop
jge
jg
add
outsb
scas
and
mov
jmp
inc
add
mov
dec
jne
sti
mov
ret
jo
iret
xchg
sbb
sbb
or
repz
push
fnstenv
call
in
enter
pop
loopne
xchg
in
adc
or
push
pusha
bound
adc
xchg
pusha
or
push
test
stc
xor
cmp
inc
xchg
xor
sub
add
cmp
lret
lret
jle
int
inc
int3
ret
push
ja
xor
or
fsts
dec
fisttps
dec
mov
sti
test
loope
in
push
rcrl
add
xor
stc
dec
jmp
enter
mov
cli
cmp
leave
ret
jnp
mov
fdivrl
insb
adc
mov
adc
aad
shrb
std
mov
imul
pop
push
das
movsb
ficompl
test
ds
call
mov
idiv
sbb
in
jmp
cld
sahf
and
mov
jnp
sbb
mov
lock
nop
hlt
sahf
test
fcompl
cmp
mov
ds
aam
frstor
sbbb
stos
add
sub
icebp
fbld
push
mov
clc
sbb
sub
mov
push
popa
stos
cli
popf
lea
imul
scas
pop
sbb
ss
lahf
push
pop
jp
outsl
jp
pop
movl
ret
sbb
push
int
shll
addl
lcall
pop
movsl
jae
and
inc
inc
jo
xor
fimuls
dec
inc
add
push
sub
push
cmc
sbb
sub
adc
inc
add
or
mov
pop
lret
loop
push
pop
dec
or
xchg
divb
mov
cwtl
cltd
xor
mov
std
jno
js
push
xor
adc
sub
mov
hlt
dec
jnp
jecxz
push
pop
dec
dec
sbb
dec
ret
cmc
jnp
mov
lea
mov
sub
gs
jnp
and
pop
test
mulb
inc
mov
subb
mov
mov
pop
fs
ret
xor
mov
or
xor
jmp
jecxz
hlt
pusha
ja
xchg
jge
sub
jbe
dec
xor
daa
jmp
iret
and
in
mov
fldt
leave
fisttpll
pop
push
lahf
lret
adc
ja
mov
adc
enter
int
shlb
mov
jmp
outsl
sub
ljmp
ficomps
push
fucomip
push
jg
lcall
and
and
cmpsl
xchg
inc
lds
or
hlt
std
cli
test
in
xor
mov
out
xor
adc
pop
adc
stc
add
lods
ljmp
mov
popf
cmpsb
frstor
mov
out
inc
jae
sub
jg
arpl
ret
loopne
xchg
les
cwtl
outsb
insb
or
aam
fsubs
scas
jns
cmp
mov
roll
push
dec
imul
int3
arpl
push
sub
mov
leave
push
lcall
js
inc
test
scas
ret
mov
aad
mov
nop
cmp
fadd
pop
cmc
xor
cmp
xor
addl
inc
sbb
lret
dec
out
out
fadds
pop
pusha
and
push
sub
js
push
dec
pushf
out
cwtl
es
imul
mov
xchg
xor
pop
jae
inc
xor
iret
adc
dec
cli
adc
mov
in
in
movsl
cmp
pop
xchg
insb
fmuls
icebp
inc
xchg
mov
movsb
pop
std
pusha
out
dec
inc
jle
inc
mov
imul
jae
adc
jmp
mov
enter
aaa
neg
adc
enter
movsb
sbb
inc
mov
sub
je
outsb
sbb
mov
and
outsl
xor
sahf
add
pop
or
stc
and
outsb
addb
pop
clc
lahf
jge
sbb
sbb
jae
push
dec
push
mov
das
jns
lea
adc
jg
or
clc
pop
mov
das
jne
cmpsl
mov
dec
addr16
in
cmp
cmc
mov
cmp
sahf
dec
mov
ja
insb
lret
sbbb
inc
icebp
int3
repz
cs
and
iret
leave
adc
mov
aam
sbb
repz
shlb
sarb
dec
sub
lds
mov
ja
int
insb
push
and
cmpl
mov
loopne
dec
mov
inc
cmp
imul
sti
enter
mov
mov
push
mov
popf
push
mov
add
add
test
sbb
mov
sbb
les
aaa
arpl
jmp
shlb
push
or
imul
es
inc
push
xor
mov
xchg
out
xor
insl
cli
aad
or
mov
pop
or
sahf
sahf
xor
lret
dec
popf
pop
or
orps
dec
out
mov
ret
rolb
fnstsw
lds
incb
mov
mov
aad
and
jmp
bound
addr16
shll
adc
sbb
jl
pop
push
pop
jno
jo
in
out
cmp
mov
fiadds
lret
mov
in
dec
mov
mov
cmp
dec
mov
fstl
imul
mov
icebp
lahf
cmp
jp
jnp
cmp
outsb
mov
sarl
mov
inc
inc
xor
inc
sbb
mov
jbe
aaa
xlat
mov
mov
int3
mov
and
sbb
leave
out
stc
inc
pop
lret
out
and
icebp
dec
jp
outsb
push
mov
xor
nop
xor
in
pusha
xchg
mul
test
inc
or
adc
xchg
dec
sbb
adc
leave
adc
sub
inc
loop
outsl
adc
fldenv
jae
cmp
rcll
stc
in
xlat
ret
inc
jle
pusha
inc
inc
add
mov
and
adc
imul
ror
nop
cltd
jnp
inc
mov
add
repz
and
lcall
xchg
pop
push
jmp
das
js
push
scas
xchg
in
pop
cltd
push
mov
cmp
adc
jmp
icebp
and
notl
aad
fldcw
test
mov
push
lea
xor
or
mov
int
cld
xchg
inc
das
mov
test
aas
mov
adc
js
pop
stos
lock
lods
xor
pop
lcall
cwtl
cld
imul
lds
bound
push
arpl
in
out
cmpsb
ds
das
out
and
jp
and
and
and
stos
outsb
push
add
sbb
sti
dec
sbb
mov
clc
xchg
nop
popf
mov
sti
mov
fdivp
scas
out
ljmp
mov
xorb
pop
or
shrl
xchg
int
or
shll
push
mov
dec
dec
rcr
negl
rclb
cmc
pushf
stc
xor
aad
mov
ret
xchg
xor
push
cltd
or
insb
pop
bound
push
movsl
adc
aad
sub
push
shl
repz
fstpt
insb
dec
sub
andl
inc
push
imul
popf
add
js
mov
icebp
xor
adc
jb
sbb
sbb
cmpsl
bound
mov
dec
mov
faddl
or
test
xor
cli
adc
scas
jae
test
xchg
xchg
xchg
cmpsb
clc
inc
mov
fmulp
cmp
insl
loopew
xchg
jno
mov
adc
out
mov
clc
pop
jno
stos
jne
loopne
dec
and
jae
scas
repz
push
xchg
jmp
jb
aas
fmuls
sbb
pushf
mov
aam
imul
notl
add
push
sbb
or
std
jae
push
mov
leave
jg
sbb
inc
sbb
push
dec
mov
gs
or
icebp
popa
jp
fadd
incl
push
insb
seta
lods
sub
adc
aam
push
push
mov
sahf
push
xor
mov
push
inc
push
hlt
inc
and
mov
mov
mov
arpl
xchg
inc
push
cmp
mov
and
pop
mov
inc
test
daa
jno
push
ficoms
dec
leave
or
lret
sub
aaa
icebp
xchg
inc
dec
repnz
icebp
jge
pop
jbe
mov
fisttpll
dec
sbb
mov
cmp
outsl
or
xor
xchg
sub
add
mov
fistl
jno
outsl
rol
mov
fimull
pop
xchg
mov
xor
lods
jns
mov
jle
pop
xchg
push
mov
add
fbld
sbb
inc
sahf
push
in
or
mov
adc
nop
ffreep
sbb
jns
jmp
icebp
ja
jno
lret
sahf
and
or
fisttpl
movsl
jg
adc
add
mov
sbb
mov
push
push
jnp
lea
sarl
mov
fiadds
xchg
icebp
aam
xchg
movsb
mov
pop
mov
xchg
push
sub
mov
out
sarb
test
aas
in
xchg
ficoml
push
fldt
lock
or
aam
outsb
pop
xor
test
push
adc
addr16
in
dec
subl
cmp
cmpsl
jl
inc
idivb
mov
cmpsl
xor
cmc
stc
mov
push
inc
dec
mov
and
mov
ss
add
pusha
test
negb
cltd
call
mov
adc
daa
xchg
xchg
push
test
fldenv
sbb
push
sbb
je
pop
add
sets
insl
add
lret
daa
int
mov
outsb
inc
arpl
or
bound
mov
addr16
jbe
mov
cmp
test
jmp
ljmp
sub
add
lcall
cmp
test
cmp
mov
add
or
mov
aad
xchg
adc
mov
add
dec
or
fidivrl
push
sub
imul
push
jmp
pop
dec
mov
js
push
insl
movsl
shll
adc
int3
cmp
fdivr
in
roll
cmp
mov
push
sbb
cmp
iret
bound
mov
popf
test
pushf
psubq
push
stos
jbe
jbe
cmp
or
clc
push
push
test
mov
fstpt
orb
aaa
or
mov
add
xchg
jecxz
in
adc
outsl
testb
jg
js
sbb
ja
outsb
dec
lret
cmp
insb
fdivl
loope
jge
xor
jmp
dec
sbb
xchg
push
imul
sub
and
into
cli
pop
lods
sti
out
or
pop
aaa
sbb
xor
stos
pop
ficompl
dec
fsubr
add
ror
pushf
loop
add
mov
addr16
aam
or
popf
jle
aad
mov
mov
jl
mov
pop
adc
push
sub
stos
cmp
data16
shl
xchg
arpl
xor
mov
cld
adc
or
scas
push
or
xchg
rclb
stos
lds
iret
jp
dec
xchg
daa
add
mov
xlat
repz
jle
pop
jo
repz
xchg
or
sbb
imul
pushf
ja
inc
movsl
into
dec
insb
dec
cwtl
pop
dec
ds
mov
in
loope
cltd
out
lahf
push
dec
rcr
cwtl
sbb
jae
or
sub
ret
pop
mov
jmp
mov
iret
sub
push
out
mov
inc
push
stos
and
jns
cld
push
pop
xlat
movsb
es
and
icebp
push
arpl
inc
xor
jle
fcmovbe
and
fwait
test
mov
cmc
jnp
inc
mov
or
repz
roll
nop
add
mov
mov
popf
imul
mov
cmp
mov
lods
lahf
and
inc
mov
pop
mov
add
mull
loopne
jmp
popa
icebp
jecxz
jb
xchg
les
inc
push
inc
das
inc
outsl
xchg
jo
jmp
xchg
enter
mov
sbb
rolb
or
test
or
xlat
adc
test
mov
sub
pop
ret
je
or
jns
add
hlt
push
jnp
push
xchg
and
scas
fcom
jne
clc
mov
test
xor
mov
aad
ja
idivl
xchg
clc
dec
dec
cwtl
fsub
cwtl
push
ja
shrl
mov
sub
test
xor
mov
or
andl
cmp
sub
dec
dec
and
xor
push
push
inc
or
lcall
mov
xchg
lret
and
mov
mov
jl
mov
ret
mov
mov
aam
outsl
mov
scas
fnsave
lea
sti
mov
lods
sbb
fldenv
mov
mov
ficomps
pushl
cwtl
jecxz
shlb
imul
ljmp
fisttpl
stos
sbb
or
add
ja
sahf
ds
fwait
pop
data16
jge
pop
test
xchg
arpl
adcb
xchg
and
negl
lret
rcrl
xor
jb
shr
mov
mov
fwait
xor
fadd
outsb
dec
pusha
pop
xacquire
jno
xchg
adc
cs
fs
dec
xchg
cwtl
mov
mov
jbe
mov
int
sti
cmpsb
mov
lret
cmpsl
aas
push
pop
push
cmpsl
fucomi
inc
jge
jne
sahf
stos
mov
inc
adc
xor
adc
es
movsl
fildl
or
xor
and
aad
cmpsb
icebp
scas
ljmp
mov
insb
in
xchg
pop
pop
mov
ds
pop
or
mov
jne
sbb
lds
nop
hlt
icebp
nop
fld
and
adc
mov
jo
repz
push
insl
jae
add
cltd
inc
lods
cld
dec
jecxz
cmp
test
add
xchg
mov
sub
xor
and
lcall
fildll
daa
fidivrs
out
adc
cmc
cmp
ret
nop
sbb
ss
add
cmp
out
aam
nop
mov
mov
adc
pop
pushf
xor
and
out
notb
fisubl
jle
lds
loope
icebp
rcrl
push
int
and
fadds
push
mov
push
mov
jbe
xor
jo
cs
pop
fidivrl
add
nop
es
mov
xor
shrb
imul
adc
sbb
adc
and
movsb
jb
sti
adc
cltd
out
and
or
adc
ja
jl
mov
test
jl
cld
and
es
scas
xchg
scas
in
push
mov
dec
or
notb
out
fidivrs
cwtl
pushf
push
lahf
xchg
test
mov
mov
loopne
adc
popf
icebp
xchg
or
leave
xor
jg
jmp
jae
mov
xor
sub
cmp
mov
mov
imull
jecxz
xor
jmp
decb
cwtl
and
shll
pop
popf
pop
imul
mov
aad
fistps
in
push
sub
mov
inc
dec
jno
lret
sbb
jp
mov
adc
mov
fmul
movsl
inc
test
mov
cmp
fisubrl
daa
adc
mov
out
cmp
or
sbb
push
andb
cmp
or
sbb
xchg
leave
repnz
js
rcrl
sub
jmp
cmp
test
stos
lahf
inc
jp
xchg
mov
dec
cmp
push
cmp
sub
mov
mov
jmp
out
in
pop
add
loopne
pop
push
xlat
or
sbb
out
add
add
ss
and
nop
xor
inc
dec
lahf
fistpll
and
mov
adc
inc
cltd
xchg
lods
sahf
inc
mov
test
es
mov
jle
imul
adc
inc
lahf
sbb
cmpsb
sbb
clc
pusha
sbb
notl
sub
pushf
inc
jo
xor
push
movsb
pop
mov
adcb
shll
pop
add
mov
pop
jp
outsb
pop
or
sub
mov
jb
adc
xlat
mov
mov
imul
icebp
xchg
mov
mov
mov
test
push
mov
and
imul
adc
xor
adc
fdiv
sbb
lret
sahf
xchg
stos
loopne
add
xlat
das
add
jno
add
xchg
dec
mov
ss
cmp
jb
dec
jle
lods
xlat
mov
xor
and
adc
cmp
jno
fucomi
and
push
cmp
cmpsb
mov
cmp
cmc
cwtd
dec
xchg
jno
push
ljmp
int3
xchg
ljmp
ss
inc
icebp
bound
js
out
inc
int
push
sbb
mov
xor
inc
mov
les
int3
add
cmp
jae
in
movsl
fdivr
loop
jecxz
push
push
pushf
pop
mov
jmp
xchg
xlat
pop
out
xor
in
push
push
sub
sbb
aam
clc
mov
adc
sub
fcomp
loope
std
mov
or
adc
sti
lret
jge
sahf
pop
scas
mov
cmp
xor
sbb
sti
jmp
idivb
xchg
repnz
sti
mov
jbe
sbb
leave
jp
movsl
and
mov
mov
push
enter
xor
push
or
out
xchg
fwait
pop
adc
gs
nop
sahf
movsb
aas
call
bound
xor
call
or
int
jmp
push
and
xor
dec
movsl
imul
dec
mov
cmc
fcmovnu
outsb
cld
insb
jge
imul
pop
xorb
cmp
je
add
pop
mov
or
shlb
into
bound
jmp
sbb
aaa
icebp
std
sbb
and
and
or
mov
scas
int3
or
and
inc
xchg
adcl
pop
stos
push
pop
and
movsl
mov
sbb
push
je
inc
aad
cmp
mov
lea
adc
hlt
push
mov
cs
push
pop
sub
mov
inc
dec
imul
mov
mov
mov
daa
pop
call
shll
cmp
iret
xchg
adc
mov
pop
xchg
adc
cmp
jne
mov
sbb
mov
in
mov
mov
xchg
add
rcrl
aaa
jmp
ss
shlb
arpl
addl
fildll
lea
push
mov
push
mov
and
fnsave
arpl
bound
mov
pop
scas
pushf
mov
cmpsb
cmpsb
in
bound
cmp
push
jno
into
or
mov
add
dec
add
xor
iret
popa
xchg
or
not
shrb
int
xchg
stos
out
jle
fmul
cmp
jae
dec
popa
psubd
addl
loopne
mov
in
out
fwait
imul
test
sahf
xor
pop
mov
or
insb
sar
lahf
mov
sahf
bound
add
dec
addr16
fs
lea
int3
addb
pop
cli
push
mov
loop
movl
inc
xchg
fnstcw
lea
jno
stos
xor
xchg
frstor
aad
imul
loopne
movb
xor
shl
ds
into
mov
loope
ret
loop
mov
xor
insb
test
pop
stos
fistpl
xchg
dec
adc
in
cltd
pushf
mov
inc
adc
sub
and
lods
mov
sub
movsb
fsubl
jecxz
push
lods
xor
sbb
cld
stos
and
ret
jle
test
daa
out
add
mov
imull
rcrb
inc
xchg
leave
cld
dec
or
out
jecxz
sbbb
iret
roll
ja
aas
pop
int
into
mov
push
movsb
adc
pop
pop
arpl
jmp
dec
and
idivb
xchg
cmp
jb
xor
int
pop
arpl
shrb
call
jns
test
and
in
stos
inc
and
xor
sub
insb
dec
jne
aad
push
pop
sbb
inc
int3
test
cmp
ret
dec
xchg
mov
lock
mov
add
imul
pop
cltd
aam
pop
lds
pop
push
clc
push
out
pop
mov
xchg
add
fidivrl
es
pop
aaa
test
mov
mov
pop
push
or
in
jmp
cmp
or
push
inc
into
jae
xor
xchg
lahf
cmpsb
decl
cmp
loopne
das
movsl
mov
add
int
fists
std
ja
jge
pop
push
inc
dec
enterw
add
lcall
movsl
imul
enter
add
adc
and
shrl
xchg
das
inc
or
mov
push
int
pop
mov
lds
pop
push
enter
inc
pop
xor
je
outsl
cmpsb
dec
stc
hlt
movsb
adc
jle
shl
dec
xor
or
sti
adc
xchg
push
xchg
jb
xor
notb
ljmp
pusha
jg
and
sbb
cmp
cmp
xor
pop
sbb
and
mov
and
xchg
loopne
fistl
cs
pop
or
xor
test
test
mov
ss
rcr
pop
mov
in
cmp
add
andps
stos
vmovaps
pop
inc
int
fsubp
aas
pop
mov
and
mov
pop
nop
test
and
pop
stc
jns
sub
pushf
xor
mov
push
aad
xlat
mov
ljmp
loopne
sarb
shrd
mov
call
sti
test
imul
push
dec
fisttpll
jae
in
addr16
shlb
scas
movsl
inc
push
dec
lock
sub
bound
push
jae
fucomip
faddl
sarb
popa
cmpsl
fstl
push
mov
push
in
sub
jno
popa
mov
jae
lods
sahf
push
pop
pushf
xchg
push
mov
xchg
ret
or
popf
daa
inc
insl
pop
xchg
cmc
add
push
xor
sub
jge
daa
or
ss
movb
mov
sahf
dec
mov
test
fwait
dec
add
ret
dec
psraw
lret
ret
pushf
nop
mov
es
or
pop
mov
bound
int
aas
fidivl
xchg
cltd
shll
lret
mov
sbb
testl
nop
jno
adc
sbb
push
int3
js
aas
jo
jp
repz
inc
clc
shrl
int
push
js
mov
push
jg
cmpsl
push
adc
mov
xchg
xchg
add
add
mov
sbb
pop
incb
loope
pusha
jmp
lcall
jge
and
adc
frstor
pop
inc
sub
je
and
cmpsl
jb
pop
sub
stos
mov
xor
mov
push
xchg
int3
sbb
ja
or
bound
sub
in
push
sbb
add
add
xchg
scas
repz
inc
adc
in
jmp
cmp
mov
sbb
cltd
cld
icebp
popa
or
fdivl
dec
mov
adc
stos
inc
pop
out
into
arpl
jg
sbb
std
xor
pop
ficomps
repz
xor
push
xor
gs
les
mov
int
cli
and
xlat
and
cltd
stos
xlat
aas
aad
inc
cmpsb
out
pop
and
mov
cmp
fisttpll
in
imulb
pop
rcll
ja
enter
xchg
sbb
cwtl
les
pop
int3
mov
loop
mov
add
jl
ss
cmp
ja
add
in
inc
loope
andb
sahf
stos
lods
cltd
rorl
jbe
aad
cmp
jle
xor
mov
xor
das
es
pusha
pop
cmpsb
adc
movsb
in
lret
mov
mov
addr16
and
jg
or
push
jecxz
mov
sbb
lods
push
aaa
add
dec
es
sub
lods
cli
js
jno
mov
nop
dec
mov
cmp
mov
cmp
sarb
dec
push
adc
lret
clc
cmp
loop
pop
mov
gs
xor
push
pop
dec
inc
push
lahf
testb
push
inc
imul
jo
mov
jno
jo
test
or
fbld
inc
subl
mov
pop
inc
dec
add
cli
adc
dec
push
fnstsw
mov
aam
adc
fs
cmpsl
outsb
xchg
les
inc
jno
add
loopne
rclb
xor
dec
or
mov
jp
fdivrl
test
mov
aam
or
scas
cltd
jnp
jo
xchg
or
xchg
stc
jnp
xchg
ja
iret
push
inc
or
dec
divl
bound
sti
mov
dec
jle
shlb
cmc
cwtl
mov
mov
orl
add
imul
mov
pop
aas
in
fwait
pop
paddsw
shlb
scas
and
sub
lock
pushf
pushf
cwtl
mov
std
mov
jg
fwait
mov
aas
mov
push
or
cmp
adc
inc
mov
dec
mov
ret
cwtl
les
fcmovbe
addl
xchg
stos
mov
xchg
sub
or
ljmp
inc
jo
rcll
add
dec
xor
leave
loope
imul
push
stc
lods
sahf
adc
or
mov
jbe
lret
add
loop
and
arpl
in
cmp
sub
sahf
push
and
adc
xor
xchg
jle
sti
stos
fstpl
pop
and
pusha
test
pop
mov
add
stos
lret
enter
jbe
cmp
dec
xchg
sub
ror
cmpsl
jne
enter
mov
xor
push
add
jo
sub
push
int3
loope
cmpsl
xchg
sbb
add
gs
jns
pusha
sub
scas
fiaddl
cmp
ja
sbb
xor
push
pop
out
push
dec
fwait
mov
adc
mov
or
mov
jb
xor
out
shll
jo
dec
fstps
jns
push
aad
std
ljmp
shll
ret
mov
dec
sub
adc
imul
pop
lea
xchg
fcmovbe
push
push
pop
or
xchg
pop
int3
call
mov
icebp
cmc
int
dec
xchg
aam
pop
sub
in
sbb
sahf
hlt
addr16
cld
out
in
std
mov
stos
imul
lds
push
jno
push
mov
push
or
push
cmp
add
adc
fmulp
jns
aam
dec
sbb
dec
rolb
jmp
hlt
cmp
imul
mov
mul
rclb
shlb
mov
or
xor
push
aad
lret
jl
loope
push
add
jo
xchg
mov
sub
das
stos
in
loop
inc
shll
cmp
or
popf
sub
leave
scas
insl
aaa
lods
call
dec
iret
sahf
fidivs
sbb
nop
loope
pop
sub
pop
in
add
pop
sbb
aam
xor
jp
movsb
stc
pop
dec
adc
test
push
fs
je
int
sub
push
fwait
outsb
int
push
mov
lcall
inc
mov
dec
fwait
js
aam
add
cmp
jb
neg
mov
movsl
shrb
ficomps
xor
mov
cltd
mov
sarl
pushf
aad
mov
cmp
out
pop
inc
sub
mov
insl
dec
addr16
add
lods
ss
shll
add
clc
dec
aas
push
pushf
pop
push
jge
icebp
mov
cmpsl
popa
push
in
mov
mov
cmp
stos
jmp
popl
in
hlt
push
cmc
stos
ja
es
pop
call
out
mov
sti
jne
jnp
fidivrl
imul
inc
add
sbb
sbb
test
and
pop
xsha256
cmpsb
adc
xchg
mov
pop
push
add
test
or
inc
add
mov
pop
cmp
sti
rolb
push
adc
cmp
or
cli
lods
scas
lods
pop
lahf
cmp
int3
mov
lock
xor
lods
jne
aad
stos
loop
inc
movsl
dec
fdivrs
call
push
xchg
jl
dec
jg
mov
mov
mov
mov
mov
inc
int
notl
sub
add
mov
and
sbb
imul
xchg
fsubl
sti
mov
repnz
das
out
cmp
aad
sarl
push
cld
xor
pop
mov
cld
push
lea
cltd
mov
stc
and
push
ret
jb
pop
inc
lods
mov
inc
xor
pop
imul
repz
int3
or
cwtl
xchg
inc
orl
daa
xchg
jmp
inc
fmull
das
aaa
push
lret
push
out
cmc
rcl
sub
xchg
dec
jle
cmp
inc
mov
jmp
les
std
mov
enter
out
cmp
rclb
outsb
xchg
daa
xor
cltd
andb
lods
ja
cmp
dec
dec
mov
lods
inc
push
popa
test
jns
rolb
push
scas
pop
inc
test
mov
mov
mov
scas
int
cmp
xor
xchg
lods
ja
jecxz
inc
rcr
clc
xchg
out
nop
cmpsb
mov
out
mov
andb
lea
pop
ja
sahf
lret
in
cs
sbb
and
popl
inc
movsl
mov
adc
sahf
cmp
lods
icebp
add
imul
in
fiaddl
xchg
sbb
jbe
jge
test
push
add
frstor
addr16
add
loope
das
adc
sbb
hlt
xchg
xchg
xor
sub
xor
rcll
ljmp
cmp
dec
push
cmp
sbb
pop
xor
add
xchg
jno
pop
fldcw
ds
test
inc
sbb
jnp
mov
testb
push
outsb
sbb
pop
xchg
inc
mov
in
aaa
cmp
pop
aas
pop
mov
xchg
mov
jo
imul
mov
cmc
popf
subb
aam
imul
add
cs
dec
ffreep
popf
pop
jno
int
gs
jne
adc
pushf
cmp
push
scas
ret
mov
popa
jo
mov
pop
fst
mov
aad
stos
xchg
ss
std
jg
pushf
pusha
jnp
xchg
sub
push
pop
inc
sbb
jnp
xorb
ss
ja
and
add
xchg
pop
popa
pop
mov
push
in
cmp
les
ss
adc
mov
popf
pop
mov
push
and
xor
dec
pop
jns
lret
pop
adc
jmp
pop
pop
mov
test
out
mov
mov
pushf
cld
cwtl
mov
into
rcl
pop
fdivrs
mov
dec
sub
call
mov
out
dec
add
push
xor
add
dec
jle
sub
jae
jle
push
subb
lret
lds
aaa
sub
fimuls
jge
pop
ret
mov
int3
shrl
xchg
adc
xor
call
shll
and
sahf
sbb
pop
or
in
xor
mov
xor
mov
push
cmpl
sbb
mov
push
aam
mov
sub
lods
jbe
mov
pop
icebp
call
rolb
pop
hlt
nop
leave
lods
mov
cmp
xor
mov
sbb
scas
repz
cmp
push
fwait
push
les
mov
mov
ficompl
jecxz
scas
insl
jbe
mov
pop
xor
jae
outsl
ds
xor
fimull
and
add
add
pop
ljmp
aam
jge
mov
clc
mov
lahf
mov
or
mull
jle
std
pop
aaa
fcoms
test
dec
aaa
pop
push
aas
ljmp
sub
cltd
sahf
or
repz
outsb
inc
mov
xor
mov
std
add
adc
call
dec
xor
ja
mov
out
out
cmp
pop
in
ret
jp
add
push
dec
imul
or
inc
int3
mov
outsb
popa
sbb
add
mov
push
mov
jbe
iret
pop
lea
jp
xchg
mov
cwtl
int3
arpl
add
add
pop
inc
sub
xor
pop
pop
aad
test
sbb
cmpsb
mov
and
daa
repnz
cmpsl
lcall
fisubrs
dec
andl
add
scas
enter
movsb
add
pop
mov
shll
push
pushf
shll
sbb
test
or
or
loope
fnstsw
inc
mov
push
sbbb
add
rolb
repz
in
inc
xchg
mov
mov
cwtl
push
sbb
ljmp
orb
test
xor
push
mov
mov
mov
pop
sbb
nop
shlb
sub
sahf
lock
std
in
fildl
lock
mov
fnstsw
loop
mov
ljmp
jae
jae
push
ret
jg
std
scas
stos
dec
pusha
jno
dec
in
test
jl
pop
in
xor
sub
int
cmpsl
aaa
adc
sbbb
bound
lods
mov
aaa
imul
bnd
sbb
clc
dec
and
mov
divb
mov
lock
mov
cmp
push
mov
pop
adc
jp
pushf
add
sub
lret
mov
pop
mov
adc
sti
lcall
shrb
dec
or
mov
sbb
repnz
mov
sub
cmpsl
mov
jae
mov
das
cld
arpl
adc
sbb
mov
call
ss
dec
and
adc
adc
into
cli
add
lods
sbb
pop
inc
hlt
or
fcomp
out
mov
adc
dec
mov
inc
inc
jp
or
add
dec
pop
mov
cli
shlb
ljmp
jo
dec
testb
adc
adc
lock
roll
pop
fucom
jns
pop
sbb
adc
cld
shlb
hlt
sahf
std
shll
or
rclb
fisttpl
mov
inc
iret
testb
cmp
jle
cmpsb
xor
arpl
xchg
mov
add
outsb
jle
add
leave
push
pop
sbb
inc
adc
jo
cmp
outsb
fisttpl
mov
aas
and
sub
arpl
mov
test
shlb
or
xor
enter
aad
and
pop
pop
mov
xor
inc
fwait
dec
cmp
iret
jmp
rol
sub
pop
cwtl
je
out
stos
xor
out
rorb
repz
int3
imul
cmp
aad
rcrl
sahf
mov
lea
xor
adc
outsb
cmp
dec
decl
arpl
push
adc
mov
pop
rcrb
pop
ja
mov
das
push
mov
call
mov
nop
and
fists
add
push
xchg
imul
mov
fnsave
fdivrs
in
pop
mov
mov
out
cltd
lds
addr16
leave
divl
insl
out
repz
pop
ds
lahf
xchg
dec
out
addr16
cltd
popf
roll
aaa
pop
loopne
sbb
add
inc
xchg
cltd
adc
pop
rorb
mov
test
lret
push
xor
mov
data16
xorb
mov
dec
sahf
arpl
in
xchg
jg
jno
jecxz
dec
pop
stos
jnp
daa
jbe
dec
dec
ret
aad
mov
mov
mov
fwait
xor
cmp
rcrl
or
in
pop
or
jae
clc
lret
rol
mov
loop
xchg
mov
cmpsb
data16
nop
cmpsl
sub
fidivrs
mov
and
xor
fstps
mov
ja
shlb
adc
mov
push
sahf
daa
push
cli
pop
cmpsl
and
sub
hlt
mov
adc
loope
jecxz
sub
jb
out
sub
add
push
data16
mov
add
mov
and
jnp
out
outsb
pushf
push
xchg
lret
mov
mov
xchg
je
dec
loop
mov
dec
ss
fcmovnbe
pop
mov
cmp
loopne
cmp
sub
loop
inc
mov
popa
rorl
xchg
xor
adc
out
inc
push
pop
jb
jne
jecxz
inc
stos
adc
mov
dec
aad
add
rcrl
int3
adc
sbb
sub
jp
push
add
mov
cmp
sub
or
decb
fistl
fsubl
mov
sub
fidivs
cmpsb
jmp
test
jle
test
pop
pop
fidivrs
sub
iret
movsb
dec
in
nop
mov
lret
cmpsl
push
aam
negb
jno
lds
out
cld
adc
cmp
adc
mov
push
push
adc
lds
sti
js
lea
jae
add
pop
hlt
lret
out
aam
pop
inc
push
dec
arpl
aas
inc
ss
inc
dec
pop
outsb
lock
repz
xchg
ljmp
stc
imull
scas
lea
mov
push
add
add
pop
inc
push
add
lea
ret
stos
jle
call
cmp
adc
mov
xorl
and
data16
mov
inc
push
sbb
mov
mov
ds
pop
jo
fldenv
pop
xor
xor
ret
cwtl
sbb
and
je
and
mov
xchg
add
out
dec
insl
outsl
xchg
ret
dec
adc
mov
mov
cmp
adc
arpl
mov
xchg
sbb
scas
cmp
mov
cmpsb
mov
mov
mov
xchg
add
data16
cmpsl
repz
push
mov
mov
out
jg
mov
dec
and
push
nopl
ljmp
notl
fnstsw
bound
scas
out
rorl
leave
or
andb
cmc
inc
inc
mov
push
xor
call
sub
popf
outsl
pop
xchg
xor
and
pop
mov
bound
mov
in
xor
lds
xor
cmp
fisubs
jns
xchg
mov
sub
mov
jmp
mov
xchg
adc
pop
dec
test
test
push
sub
rcrb
mov
loope
xchg
repnz
movsl
pusha
xlat
jmp
loope
fs
in
mov
scas
mov
sbb
adc
lahf
mov
loope
inc
daa
sub
mov
leave
test
cmpsb
into
cld
sar
je
out
adc
push
mov
dec
lods
dec
cltd
lcall
ficompl
inc
or
xor
jle
inc
inc
push
bound
jno
adc
push
sbb
xchg
dec
js
xchg
lea
ja
out
sub
sbb
popa
andb
sti
mov
cmp
sub
xchg
adcl
in
es
insb
jns
sub
iret
notl
adc
lea
add
bts
adc
clc
or
stos
xor
lock
cmp
js
add
or
mov
and
xchg
pop
das
xchg
pop
lret
les
lret
pop
pop
and
popf
add
mov
sub
xor
pop
adc
es
arpl
in
adc
mov
lds
dec
dec
aas
and
test
in
pop
shll
lods
dec
mov
test
mov
or
fnstsw
shrb
push
mov
dec
mov
mov
mov
xor
mov
fmuls
xor
dec
cmp
pusha
adc
push
pop
out
mov
cmp
dec
dec
test
jg
mov
insb
int3
adc
in
sub
xor
push
fisttpll
adcb
cmp
mov
stos
adc
push
aaa
push
mov
pop
jno
mov
mov
dec
lahf
adc
jae
dec
jle
aaa
repnz
sbb
sahf
sbb
fnstsw
and
xchg
cmpsl
add
dec
insb
shrl
hlt
lods
bound
pop
cmc
insb
jle
pushf
testb
and
sarb
ljmp
nop
mov
loope
imul
test
cmp
inc
mov
into
xor
fsubr
sbb
push
mov
popa
push
dec
mov
dec
xchg
inc
mov
fs
int
inc
add
mov
jo
sar
mov
nop
cmovne
inc
movsb
dec
push
arpl
les
sub
mov
xor
xchg
jbe
adc
lods
divb
jnp
mov
sub
rcrl
dec
dec
inc
in
adc
inc
out
cli
cld
inc
mov
stos
add
jno
add
mov
ja
mov
inc
sbb
repnz
add
mov
aad
xchg
mov
stos
push
movsl
icebp
push
mov
xchg
repz
pusha
mov
insb
pop
imul
pop
fucomip
pop
push
lds
sarb
dec
mov
sbb
pushf
imul
fstps
jne
aam
ljmp
lret
imul
out
mov
dec
push
adc
dec
adc
loop
sub
or
repz
xchg
std
les
imul
add
in
sub
add
stos
xchg
out
mov
and
mov
testl
jmp
aad
xchg
cmp
jmp
cmp
push
inc
cmp
xor
adc
mov
sub
push
outsl
mov
mov
sbb
push
mov
and
xchg
adc
sbb
inc
sbb
lock
xorb
sbb
das
ss
sbb
mov
data16
add
mov
and
call
cmp
sbb
or
shrl
xchg
push
loope
ds
adcl
adc
mov
jo
arpl
mov
xchg
adc
mov
enter
or
stos
retw
mov
fs
dec
xchg
jb
push
pushf
dec
mov
xlat
call
ror
mov
mov
cwtl
cltd
lcall
aam
pusha
add
in
lret
flds
adc
mov
mov
pusha
add
mov
adc
mov
cmc
push
js
in
je
cltd
add
out
sub
mov
lds
mov
das
pop
xor
sub
jp
aam
negl
ficoms
js
xorl
sbb
sub
mov
bound
subl
jb
aas
inc
sbb
push
and
sbb
aam
sub
fisttps
jl
jne
mov
mov
insl
xchg
jmp
enter
arpl
lcall
dec
lds
inc
and
fidivrs
cwtl
push
iret
iret
xlat
out
jl
sub
cmp
pop
xacquire
insb
add
outsb
shr
add
mov
cmp
push
testb
or
jg
and
inc
scas
shll
pop
andl
sub
dec
aaa
cmp
cmp
add
inc
sub
pop
or
repz
pop
mov
mov
leave
aam
pop
pop
mov
push
jp
push
push
rcr
xor
shrb
jle
movsb
jno
jg
sbb
mov
dec
adc
pop
add
out
sahf
fs
lock
aam
jle
rorl
and
sbb
dec
xchg
dec
push
shlb
dec
mov
fcmovu
sbb
fcmovnu
cwtl
jno
in
sub
icebp
jb
into
movsl
push
setl
xor
adc
mov
pop
or
inc
inc
mov
rcll
mov
adc
mov
test
mov
mov
mov
out
rcr
add
cmp
int
xor
jne
jg
jmp
xor
in
lret
cmp
pop
in
outsb
pusha
xor
ret
daa
inc
es
call
in
add
jp
dec
out
test
ss
aas
mov
sub
arpl
gs
add
aaa
pop
sub
out
push
jle
mov
rclb
les
inc
lahf
or
or
lret
or
cmc
aam
aaa
je
orl
add
sahf
dec
orb
scas
mov
test
fimuls
and
jge
mov
lret
or
adc
jl
test
inc
mov
fsubr
test
dec
sti
mov
dec
fistl
add
pop
mov
fwait
adc
cmp
xchg
adc
pop
bound
shll
clc
clc
mov
jo
mov
insb
push
shlb
jge
ljmp
pop
dec
pop
imul
fs
fisubrs
mull
fistl
in
mov
ret
fs
mov
or
cwtl
in
out
and
inc
pop
stc
gs
lcall
mov
cld
out
xchg
adc
subl
int
inc
or
xchg
cli
push
and
sbb
push
jne
cld
fcmovbe
push
sub
neg
or
lcall
jg
mov
xor
lock
dec
sub
addr16
inc
test
into
movsb
popf
xor
es
nop
push
lods
ficoml
ds
inc
gs
sbb
mov
sahf
push
fsubr
fistl
clc
lret
jecxz
lahf
sub
loop
jnp
adc
mov
sbbl
pop
scas
adc
sbb
and
jne
dec
jb
dec
fstl
test
dec
aad
pop
or
rcrb
pop
das
push
adc
xchg
cli
adc
push
xchg
jge
fsubrs
cli
fwait
sub
scas
mov
adc
push
daa
je
mov
xchg
arpl
jb
jae
mov
leave
int3
mov
dec
repz
ss
icebp
push
frstor
inc
testl
xchg
in
push
shr
or
add
pop
jne
ret
loopne
jae
jne
loop
pop
sbb
cmp
fidivl
les
xchg
mov
mov
mov
cs
dec
iret
add
aad
lea
pop
xorl
insl
xchg
pop
out
and
pop
movsb
lret
push
push
lods
aam
sub
je
hlt
fbstp
dec
pop
dec
pusha
fsubrp
xchg
mov
adc
insl
mov
xchg
push
mov
sub
fwait
cld
pop
lock
popa
lcall
repz
cmpsl
jae
jb
cld
addr16
call
repz
nop
call
push
mov
jno
mov
jle
mov
or
ret
ss
mov
cmp
or
mov
stos
fsub
push
inc
data16
dec
sub
mov
pop
data16
jle
ljmp
addb
push
xchg
xor
aas
out
fildll
add
xchg
int
xor
or
mov
mov
fstp
xchg
mov
mov
scas
dec
push
aas
pop
mov
std
sub
sbb
mov
sti
sbb
stc
and
rcl
sbb
jb
push
mov
in
fs
pop
push
push
aas
jmp
cmpsb
push
push
sbb
dec
lds
xor
push
xor
dec
jo
into
sbb
pmaxub
adc
sarb
aad
adc
jp
lods
xchg
mov
xor
mov
sbb
das
dec
fidivs
xchg
push
cmp
leave
sbb
ljmp
jb
loopne
xchg
xchg
rol
xchg
mov
dec
ror
jecxz
push
in
fistps
mov
inc
add
add
mov
adc
sbb
add
pop
jbe
aad
es
lcall
mov
in
adc
push
push
loope
add
dec
mov
loop
test
sub
mov
inc
jbe
arpl
dec
jge
dec
data16
cmp
push
mov
mov
loopne
mov
das
pop
sub
pop
imul
test
jb
pop
push
mul
movsl
addl
out
or
mov
cld
adc
addb
cmp
jl
dec
jecxz
faddl
and
sub
mov
inc
xchg
mov
adc
ret
push
xor
mov
adc
lret
mov
insb
out
stos
jbe
fstl
xchg
ljmp
jp
mov
outsb
push
stos
sub
jge
xchg
out
or
jae
subl
jno
popf
cli
jnp
push
inc
add
and
sub
ret
rorb
xor
popa
orl
mov
lock
xor
dec
stos
aam
ret
add
popa
daa
mov
rcrl
sti
out
in
sub
pusha
gs
inc
xor
in
pop
mov
imul
lahf
mov
mov
cmpsb
add
pushw
lods
hlt
jp
push
aad
int
ss
or
jg
negl
mov
in
adc
lods
mov
rol
mov
mov
test
and
gs
adc
push
cltd
xchg
out
xor
push
sub
xchg
ror
add
jle
repz
pop
sub
or
cmp
call
inc
add
mov
sbb
cmp
cli
jae
adc
cltd
je
and
sub
sti
popa
stos
jb
stc
and
xchg
test
addr16
sub
lcall
lods
lock
imul
sti
out
lahf
jmp
jne
push
xorl
pop
xchg
fsts
xchg
mov
shlb
jmp
jbe
fidivrl
loope
jl
inc
es
shll
fildll
push
popl
outsb
inc
cmpsb
jp
mov
xchg
lds
jg
push
lea
push
int3
mov
adc
mov
cmp
test
dec
ljmp
std
mov
in
out
fdivrl
sub
sahf
push
enter
bound
divl
mov
mov
aaa
xchg
fnstenv
imul
xchg
movsb
mov
push
sub
addr16
cld
mov
aaa
and
int
sub
sub
xchg
adc
leave
cmp
pusha
jmp
sbb
or
lret
imul
xchg
push
arpl
mov
nop
and
push
push
ret
andb
mov
cmpl
adc
mov
aad
out
mov
fadd
test
xchg
andl
cld
push
mov
lock
lods
or
loope
adc
stc
mov
je
aam
xlat
mov
or
out
mov
jmp
jae
push
pop
icebp
or
xchg
rorb
imul
jg
mov
mov
ljmp
aam
cwtl
xor
jb
dec
insb
adc
mov
or
cmp
adc
sbb
sub
xor
int3
and
stc
scas
mov
adc
lds
mov
sbb
rorb
add
popf
hlt
xchg
test
xor
or
adcl
lods
movsl
int3
hlt
stc
jb
dec
sbb
std
arpl
add
sbb
cmp
jnp
xchg
enter
sbbl
scas
cmpl
dec
mov
jecxz
dec
mov
in
out
loopne
popf
or
jo
arpl
xchg
aaa
sarb
fisttpll
jo
jge
fbstp
cwtl
xchg
aad
mov
iret
lcall
or
xchg
xchg
outsl
xor
idiv
cwtl
or
test
insl
test
imul
and
out
inc
nop
xchg
scas
dec
cmp
outsl
push
arpl
xor
cmp
push
movsb
sbb
cmp
cs
jecxz
mov
cld
mov
inc
repnz
push
inc
data16
sub
mov
int
jne
icebp
aas
leave
mov
aam
push
mov
lahf
mov
inc
inc
rcll
popf
pushf
idivl
fldt
push
sbb
mov
sti
pop
xchg
xor
pop
cmp
cmp
pushf
lret
mov
and
dec
mov
fwait
addr16
pop
rol
push
mov
sbb
sti
dec
jg
xchg
loope
sbb
outsl
add
sbb
push
xchg
fdivs
sub
lahf
add
lcall
add
pop
popa
and
sbb
xor
pushl
mov
inc
lds
fcomp
divl
jnp
push
dec
mov
lods
cmpsb
fsubrp
or
cmpb
adc
sub
into
fwait
sbb
repz
jne
loop
test
js
or
cmp
xor
push
jbe
repnz
jmp
dec
push
movsl
iret
bound
aaa
or
shrb
and
outsl
stos
add
mov
jecxz
test
sub
inc
fmul
sub
xchg
xor
push
int
gs
mov
xor
in
lds
movsb
in
cmp
xor
movsb
push
mov
xchg
pop
dec
dec
jb
ds
rep
out
sbb
rorb
xor
adc
sub
or
pop
sub
and
in
fcomps
arpl
mov
clc
and
mov
cli
icebp
aam
lock
pop
inc
out
jecxz
sub
mov
pushf
int3
mov
repnz
mov
sbb
enter
leave
imul
xchg
lods
inc
mov
clc
pop
pop
hlt
call
repz
jg
cmp
lret
cmpsb
xchg
sub
and
test
add
dec
jle
push
inc
jg
push
sbb
jmp
pop
push
sub
sti
sbb
inc
adcl
cmp
mov
cs
or
or
mov
inc
test
mov
sub
leave
add
jge
mov
mov
mov
add
add
cwtl
jo
adc
add
movsl
dec
mov
lahf
xor
cmp
jns
xchg
xchg
jle
fwait
xchg
or
pop
and
es
cld
out
lock
jle
add
lea
dec
filds
xchg
test
cmp
outsb
shlb
cmp
sti
in
cli
mov
mov
mov
cmp
into
dec
lcall
pop
xchg
jb
add
scas
pop
pop
push
xor
mov
mov
les
mov
push
data16
pusha
ja
bound
pop
inc
cmp
cmpsl
add
push
sti
pop
push
xchg
jno
imul
sbb
xchg
jb
das
jmp
mov
cld
lret
push
inc
es
xchg
cmc
stos
outsb
out
and
jl
push
test
mov
jo
popw
mov
cmp
lahf
loopne
insb
or
push
stc
pop
int
sub
dec
push
mov
sub
jg
dec
loop
sub
xchg
daa
loop
inc
adc
xchg
mov
pusha
lahf
mov
mov
repnz
loope
je
mov
rorl
mov
lcall
imul
or
mov
mov
mov
mov
xchg
pushf
and
stos
notb
fsubrs
cmp
out
ss
sub
scas
dec
push
and
inc
cmp
lods
push
shl
nop
rcrl
daa
xor
jmp
lock
cmp
pop
lds
mov
test
popa
pop
scas
pop
sahf
or
xchg
mov
or
mov
xor
sbb
inc
mov
push
push
cmp
iret
insl
dec
pop
mov
pushf
test
mov
and
pop
mov
je
sub
dec
or
fiaddl
sub
outsl
ljmp
addr16
cltd
dec
and
orb
scas
jg
add
xchg
xchg
ficompl
mov
add
mov
or
adc
inc
mov
sub
push
shlb
jno
orl
and
popf
sbb
imul
xchg
dec
pusha
dec
sbb
or
test
mov
sarl
cltd
add
push
aam
jmp
push
ljmp
pop
shr
outsl
and
mov
repnz
mov
or
test
sarb
push
out
repnz
jo
or
lods
add
sub
mov
inc
jo
insl
adc
xchg
insb
orb
pop
lea
lea
ljmp
xchg
fistpll
push
sbbl
test
cmpsb
mov
jmp
xchg
inc
and
ss
adc
push
mov
adc
shrb
shll
cmp
shlb
fsubrl
push
ja
pushf
xchg
lret
subl
mul
cmp
sub
add
loop
rorb
incb
adc
push
adc
lods
mov
iret
or
sbb
test
inc
test
mov
xor
fs
test
es
jns
pushf
xchg
xchg
jae
icebp
push
lahf
cmp
data16
push
pop
mov
fistpl
dec
cmpsb
pop
fdivp
sub
xchg
mov
adc
mov
fstl
inc
jae
and
pop
shl
jg
gs
stos
fldl
lods
and
dec
les
pop
xor
jne
adc
mov
rcrl
leave
in
push
fdivrl
add
inc
andb
inc
jl
aam
imul
in
arpl
dec
sbb
xchg
and
cmp
sub
jg
or
push
shl
fucom
jl
xchg
addr16
or
insb
movsb
out
or
lods
mov
add
mov
sub
jge
adc
cmc
xchg
cmpsl
pop
add
gs
imul
mov
in
or
out
jns
add
fidivrs
js
outsl
loope
ja
popf
cli
cmp
rorl
test
push
frstor
in
bound
mov
mov
jle
jne
mov
in
mov
mov
xlat
push
dec
and
insl
js
mov
imul
add
ret
cwtl
loopne
ds
sti
out
pop
sbb
jbe
aam
repnz
imul
fucomp
popa
mov
jbe
jmp
add
sub
shlb
test
pop
cmp
inc
cmp
xor
fcoml
or
out
push
aaa
push
imul
out
popa
gs
fisttps
mov
xor
pop
leave
sarl
popa
enter
mov
icebp
adc
fdiv
outsb
dec
std
ret
pushf
cli
out
outsb
int3
lret
addr16
cmp
and
call
dec
or
out
cmp
popf
inc
push
pusha
leave
out
jne
pop
ljmp
je
fcmove
lods
divb
aad
xchg
inc
mov
inc
test
pop
bound
dec
xchg
jmp
xor
repnz
mov
loope
xor
xchg
lock
flds
mov
mov
push
xorl
adc
scas
scas
jp
lods
movsl
push
xchg
pop
sub
roll
std
mov
in
inc
insb
aad
or
mov
pop
pop
xchg
cmc
or
out
sub
ret
pop
stos
jge
lea
add
loopne
jns
cmp
mov
push
xor
ret
adc
repz
test
push
stos
clc
repz
jae
aad
push
mov
les
adc
test
inc
test
frstor
jnp
aam
ja
imul
or
andl
and
xor
push
push
jne
mov
std
sbb
notl
repz
popf
inc
xchg
push
push
dec
sub
mov
sub
bnd
jl
cmp
add
test
subb
push
cld
push
push
push
cs
pop
push
mov
xchg
or
add
adc
mov
gs
movsb
loopne
enter
mov
push
mov
in
mov
push
or
sbb
xchg
dec
push
add
cmp
xor
and
mov
jg
rol
sbb
aad
clc
fisubl
addr16
mov
mov
or
jne
loope
mov
gs
mov
add
jp
jae
inc
mov
dec
test
ja
xchg
std
loop
out
jge
stos
and
lret
aaa
scas
mov
pop
ja
loope
xchg
sbb
pushf
lret
cmp
inc
out
ds
jecxz
add
and
mov
add
mov
pushl
leave
movsl
xchg
mov
push
mov
popa
lahf
or
scas
fs
popl
push
inc
das
fidivrs
fstp
mov
cld
iret
inc
sbbb
loop
mov
lea
pop
fldl
bound
or
andb
gs
xor
xchg
cmp
test
leave
shrl
sahf
xor
xor
call
and
mov
sbb
lea
add
daa
outsl
movsb
jge
sub
fidivrl
pop
xchg
sub
pusha
stos
repnz
mov
xor
arpl
test
pop
mov
nop
aam
mov
flds
mov
inc
in
adc
push
roll
mov
rcrl
mov
pushf
jo
push
adc
mov
xor
inc
sarl
sub
nop
rcrl
mov
loop
std
or
pop
mull
rcrl
int
mov
cmpsl
inc
push
pop
inc
insb
or
sti
idivb
lods
int
fildl
ret
je
fimuls
dec
ds
les
lret
fists
sbb
lret
sbb
es
push
call
test
jae
repnz
es
jg
lock
test
lea
setp
cmp
add
sub
cld
adc
sub
sub
outsb
pushl
out
pop
stos
enter
push
das
nop
pop
popa
js
ret
mov
flds
sbb
cmp
sti
xchg
mov
xchg
fcmovu
imul
jecxz
cmp
mov
jne
test
cmp
ret
dec
push
repnz
xchg
test
hlt
cltd
pop
mov
push
movsb
mov
lds
test
sbb
es
fadds
sbb
pusha
push
sub
mov
cmp
mov
mov
sub
imul
xchg
ficompl
or
dec
inc
jne
pushl
sbb
fcmovnb
jnp
insb
fdivp
inc
shll
pusha
cmc
sub
negl
sbb
mov
or
push
fisubs
lods
mov
xchg
jmp
add
push
int
adc
call
jg
xchg
imul
int3
mov
xchg
pop
inc
and
lock
adc
out
push
inc
mov
sbb
mov
scas
test
push
mov
aas
sbb
mov
lods
out
xor
popa
mov
mov
imul
fsubr
push
inc
or
gs
imul
shl
pop
mov
rcr
cltd
pop
sahf
arpl
movsl
dec
jo
jne
ds
repnz
sub
mov
mov
jl
xorl
sbb
mov
pop
gs
leave
fcomps
jbe
xchg
and
push
out
lcall
movsl
jmp
cmpsl
mov
addl
xchg
add
aas
adc
cmp
jbe
ficoml
mov
rcrb
add
fnstsw
popf
cmc
inc
push
lock
rcrb
mov
inc
dec
cmp
xor
push
dec
jge
add
push
lds
fcmove
push
jne
mov
adc
mov
pop
jno
sub
movsb
pop
jb
and
jb
call
clc
loopne
in
mov
dec
aam
pop
cmc
jle
fs
scas
pop
mov
out
pop
fstps
cli
repz
stc
aad
enter
fnstsw
test
lret
loop
inc
cltd
loopne
fdivs
aaa
dec
dec
sub
push
lds
xchg
lahf
aad
bound
cmp
movsb
pop
push
popa
sarb
xor
test
and
inc
int
jnp
int3
cmpsb
lret
out
fnstenv
xlat
scas
or
ja
and
mov
scas
iret
jno
mov
xor
movsl
fnstcw
xchg
ss
jno
jno
sbb
mov
loop
push
aas
inc
mov
lret
hlt
cmp
add
out
push
xchg
inc
jnp
je
outsb
dec
lret
outsb
and
xchg
mov
or
add
cmp
lods
pop
aad
pop
cs
cltd
adc
sarb
push
shlb
loope
fimuls
lods
cmp
jmp
xor
mov
and
mov
push
lods
pop
adc
imul
dec
scas
push
sti
cwtl
in
pop
cmp
movsl
loope
dec
scas
mov
xchg
xor
cmp
xchg
xorb
jle
sub
dec
or
push
cmp
or
insl
sbb
xchg
mov
add
add
xchg
adc
jecxz
in
ljmp
pop
pop
push
lret
inc
xchg
dec
sub
cltd
lahf
push
imul
fucom
mull
mov
add
out
je
push
mov
test
sub
sub
pop
or
inc
xchg
dec
into
gs
adc
ds
jo
iret
xor
repnz
fwait
shlb
repnz
pushf
pusha
test
sub
notl
ret
xchg
std
fwait
repz
mov
outsl
sarb
in
mov
xor
adc
pop
js
adc
stos
push
stc
sub
mov
sbb
add
ffreep
dec
sub
lcall
mov
pushf
mov
cmp
shll
pop
jnp
push
mov
sub
pop
adc
mov
sub
cmp
loopne
add
movsl
sub
adcb
scas
sti
gs
and
cmp
cmp
sbbb
sub
fucomip
js
adc
pusha
xchg
and
push
es
inc
and
push
xor
dec
inc
inc
and
cli
push
popf
imul
lea
cmp
xchg
ror
mov
mov
in
lcall
rorl
add
push
add
add
add
and
sbb
mov
or
lea
repnz
hlt
mov
pushl
mov
adc
int3
inc
mov
lods
and
lods
cmp
inc
enter
lahf
dec
movsl
fwait
jmp
pop
cmp
loope
mov
std
dec
jmp
shll
repz
xchg
popf
aas
popa
js
or
add
mov
sahf
daa
cmpb
xchg
dec
gs
das
dec
sub
push
loope
push
mov
adc
sti
xchg
icebp
insl
mov
dec
rcr
loop
pop
xor
dec
in
das
mov
rcrl
bound
repnz
sbb
movsb
movb
cmp
aas
mov
and
fidivrs
cmp
insb
cld
mov
cli
call
xor
xchg
sub
inc
repnz
dec
jb
insb
jbe
xchg
and
icebp
mov
jle
inc
pop
rorb
leave
jmp
in
call
jl
sbb
call
pop
loopne
rcr
movsl
imul
cmp
mov
cmp
mov
bound
shll
les
fisubs
mov
cmpsb
adc
or
stos
jl
in
icebp
stos
in
or
cmc
push
cmp
pop
sbb
adc
fstpl
pop
ds
pop
in
icebp
mov
arpl
popl
testl
movsl
push
add
lret
xor
or
mov
mov
gs
adc
rcll
and
dec
push
xchg
add
cli
xchg
pusha
popa
insb
daa
add
pop
rclb
in
pop
sarb
ficompl
in
sbb
in
mov
or
jnp
movsbl
inc
aaa
fstpt
movsl
scas
test
push
flds
mov
pop
add
sub
loope
rcrl
inc
andb
notb
xchg
mov
int3
xor
mov
leave
push
xor
or
or
inc
mov
in
lahf
loopne
push
cwtl
jns
inc
cld
sub
data16
add
and
sbb
mov
movsl
push
cbtw
leave
sbb
adc
pop
stc
cs
mov
call
icebp
popa
mov
repz
out
mov
cmc
stos
insb
xchg
daa
jno
sbb
imul
xor
or
mov
dec
das
gs
jmp
adc
iret
push
add
mov
xor
jecxz
insb
flds
out
loopne
enter
sub
lcall
mov
lock
popf
sti
mov
arpl
mov
or
cmp
cmp
fcomi
jb
das
mov
mov
jle
lea
or
aad
outsb
push
gs
pop
jge
and
mov
in
ja
int3
mov
push
cmc
mov
lret
mov
pop
dec
enter
fildll
pop
pusha
out
pusha
mov
scas
cmpb
out
push
scas
stc
dec
and
bound
inc
xchg
cltd
movsb
sub
xchg
jno
aas
call
out
jmp
push
push
lahf
jae
jle
pop
pop
xor
pop
push
daa
scas
add
std
movsb
mov
and
add
insl
or
out
cmpsl
xor
and
mov
outsb
cwtl
call
push
test
jg
shrb
mov
cs
cmp
repz
sub
pushw
clc
fsub
es
inc
mov
fxam
sub
push
xchg
sbb
mov
xor
pop
mov
enter
inc
aas
in
lods
ljmp
scas
mov
inc
or
dec
les
test
xchg
push
sbb
popa
add
aaa
orb
cmpsl
rorb
outsb
xorl
add
stos
pushf
lods
pusha
pop
push
sub
sub
dec
in
fiaddl
shr
stos
sti
inc
scas
mov
test
test
xor
xchg
push
cmp
push
xor
mov
push
test
sub
in
and
notb
mov
movsb
mov
or
jnp
xchg
mov
sbb
mulb
aas
imul
add
cmp
pop
xor
ret
outsb
xchg
xchg
jg
sub
jns
out
cli
out
mov
shll
fisubl
xchg
jne
or
lea
fcoms
js
pop
push
pop
test
xor
cmpsl
mov
fsubl
xor
pop
inc
outsb
cmp
jle
adc
xor
leave
dec
or
subl
popf
and
je
cmpsb
dec
lds
imul
mov
out
and
add
lret
and
in
aam
mov
push
and
fcoml
pop
testl
pop
and
inc
dec
jl
clc
pop
outsb
clc
mov
dec
push
mov
cmp
ljmp
out
popa
test
fwait
test
sahf
insl
enter
andl
sbb
rcrl
out
inc
pop
dec
mov
inc
clc
adc
fistps
jmp
jg
imul
jl
push
adc
xorl
push
shl
dec
dec
xchg
insb
pusha
mov
cmp
and
jns
push
in
scas
hlt
mov
cwtl
dec
or
ja
sub
daa
out
mov
xchg
imul
fistps
xor
in
add
add
or
sub
and
les
jge
dec
fstpl
add
arpl
push
imul
and
dec
sbb
out
aas
negb
loopne
dec
insb
sbb
dec
lock
imul
dec
data16
shll
pop
mov
pop
or
jg
mov
dec
push
mov
mov
jno
add
bound
frstor
shll
inc
ja
test
rolb
addl
nop
dec
jns
test
push
icebp
mov
xor
jno
loop
sbb
push
sbb
push
ljmp
cmp
gs
sbbb
popf
aas
cld
insb
aaa
dec
test
hlt
mov
xor
shll
movb
scas
jae
scas
add
insl
push
stos
roll
bound
jl
icebp
popf
sub
pop
fs
mov
inc
pop
dec
sbb
jne
jbe
jmp
sbb
call
sbb
hlt
out
push
or
inc
sbb
stos
pop
lret
cld
sbb
dec
sub
xchg
adc
cmp
inc
cwtl
cmpsl
ret
stos
adc
mov
push
jns
dec
inc
loope
mov
fmull
popf
adc
pop
xorb
rcrb
nop
movsb
outsb
frstor
inc
and
push
pop
shll
int3
stos
inc
into
lods
std
stos
or
sbbb
jecxz
outsl
repz
sarl
test
push
adc
xchg
inc
mov
lods
jae
sbb
mov
clc
sub
sbb
jg
dec
test
mov
jnp
dec
aas
daa
movsl
and
xlat
mov
js
fisttpll
add
inc
adc
mov
push
push
mov
xchg
xchg
inc
inc
push
adc
mov
xlat
mov
pop
in
cmp
dec
push
mov
in
mov
or
sti
push
jge
test
imul
mov
mov
addb
mov
rcl
pop
dec
ds
mov
lods
mov
rolb
push
loope
sub
clc
cmp
push
pop
repz
ja
je
mov
movsb
data16
pop
and
jmp
stc
mov
jno
test
fisubl
sbb
jg
roll
push
rol
icebp
ss
xchg
inc
push
push
popa
add
fcmovu
xor
or
cmpsl
cmp
test
pop
cmp
lods
test
sbb
stc
ss
fldenv
pop
xchg
and
cmp
dec
in
and
xchg
neg
fstpt
repnz
ret
mov
jb
cwtl
insl
adc
jne
and
jo
cld
fwait
sarb
xchg
jb
test
cs
std
pop
mov
add
xchg
pop
push
scas
push
lds
inc
sbb
pop
xlat
test
add
and
pop
addl
and
ret
sahf
pop
sarb
test
pop
xchg
aam
lds
sti
je
jmp
mov
mov
mov
pop
xchg
mov
push
add
fcoms
mov
aas
cmpsb
mov
jne
lea
in
pop
adc
sub
scas
mov
or
xor
fidivrl
inc
mov
add
repnz
mov
aad
out
lds
jl
dec
jne
in
scas
and
xchg
arpl
or
idivl
sbb
mov
movsl
movsl
mov
bound
xor
mov
dec
shlb
lret
out
aam
push
dec
jmp
pop
dec
mov
cmpb
fists
fsub
cli
in
push
shrl
fmuls
pop
xorb
jbe
je
into
vmovapd
sbb
and
into
push
testb
mov
in
mov
push
lcall
inc
imul
popa
enter
clc
jg
adcb
or
imul
mov
fnstenv
lcall
cmc
addr16
adc
mov
lret
sbb
jl
mul
sub
inc
popa
sub
mov
popa
sahf
leave
aas
pop
jge
in
icebp
stos
mov
out
fstl
stos
mov
mov
je
jmp
jge
or
jno
jl
fcompl
or
pop
das
outsb
ret
sub
arpl
outsb
push
xor
adc
cli
mov
xchg
in
fldt
repz
fldt
aas
mov
xchg
xchg
icebp
fisubrl
sbb
jmp
adc
repnz
jb
lods
add
fdivrs
or
pusha
mov
sub
push
pusha
pusha
mov
and
or
in
fs
pop
add
imulb
mov
xchg
out
ret
inc
es
mov
fildl
xchg
shlb
pop
fdivs
lret
jnp
pop
jmp
mov
mov
insw
mov
in
stc
fldpi
aaa
sti
arpl
or
ds
pop
cmovbe
cwtl
aad
in
pop
pop
cmp
in
fldcw
xor
jnp
pop
adc
call
dec
add
out
imul
mov
pop
in
faddl
int
xchg
mov
orb
mov
inc
test
jnp
mov
popf
scas
or
ja
shll
insb
xor
add
push
mov
push
fcmovnbe
sbb
stc
push
xchg
lods
mov
cmpsl
inc
test
data16
sbb
push
lods
in
jbe
or
shll
push
movsb
inc
rclb
and
notl
aaa
mov
mov
mov
fsts
sbb
aam
pop
jmp
mov
mov
dec
lahf
in
repz
sbb
addb
sub
inc
mov
test
pop
mov
fwait
add
xchg
pop
jmp
mov
sub
bound
mov
test
xchg
or
shrd
fcmovb
call
aas
test
mov
testl
pop
adc
das
jae
mov
in
sbb
enter
mov
jle
insb
cmpsl
cld
jne
mov
xchg
sub
int3
andb
fs
repz
mov
dec
mov
xchg
aam
bound
rcrb
push
mov
cs
ss
mov
lea
dec
fimull
js
inc
inc
ljmp
cmpl
out
mov
cmpsl
or
cmp
je
jnp
jmp
hlt
xor
inc
int
add
das
inc
or
sub
repnz
cmp
fisttps
fstp
mov
push
lods
fucomp
adc
sub
call
xor
sub
shlb
jnp
xchg
arpl
inc
nop
loop
push
jecxz
push
mov
jl
lcall
mov
adc
sarl
in
pop
jge
sahf
xor
adc
mov
cmp
sub
or
mov
jp
sbb
imul
je
pop
mov
cltd
inc
fcmovnbe
aaa
xchg
orl
sahf
mov
aam
and
gs
loope
or
xchg
popl
out
test
mov
fildll
push
cmp
pop
in
xchg
xchg
hlt
mov
lods
insl
add
xchg
mov
cmp
sarb
sbb
jle
mov
shlb
xor
ss
xchg
popa
loopne
fs
push
jne
imul
mov
cmpsb
enter
push
mov
mov
fwait
and
movsl
dec
and
adc
cld
or
dec
les
jge
dec
cmp
add
sbb
xchg
sbb
sub
and
dec
adc
fcoms
push
sub
call
or
inc
sub
add
loopne
or
push
xchg
push
repnz
test
pop
sub
les
push
inc
sub
outsl
mov
and
addl
in
push
dec
pop
int
jecxz
fistpll
shrb
dec
repnz
pushf
in
lret
or
pop
mov
mov
mov
in
xor
in
adc
push
in
lods
lret
icebp
add
push
jb
ja
mov
and
or
outsb
xchg
mov
jno
push
dec
decl
dec
call
inc
fsin
test
jecxz
sahf
adc
cli
dec
inc
pop
jb
sbb
or
jl
mov
xchg
ljmp
pop
ficomps
cmp
sub
mov
xchg
divb
ret
mov
mov
jmp
dec
lods
pop
sbb
cltd
lea
xchg
mov
mov
jle
ror
pop
xchg
hlt
repnz
sahf
imul
out
ret
mov
cmpb
movsl
push
mov
adc
dec
inc
jno
scas
clc
inc
push
dec
inc
push
js
addr16
jae
xchg
cltd
mov
mov
outsb
sbb
xchg
jp
fcmovnbe
jmp
imull
ret
lds
movsb
repz
loope
add
mov
push
outsl
shlb
inc
xchg
mov
jae
in
or
popa
sbb
push
aam
inc
cltd
in
cmc
cmpsb
insl
out
pusha
sbb
pop
fs
xor
adc
in
mov
in
jmp
cmp
jno
ljmp
pusha
je
cmp
or
xchg
fadds
jp
and
test
cmc
xor
jmp
mov
stos
or
adcb
dec
push
bound
dec
mov
lcall
jne
inc
push
pusha
jp
fdivs
sub
leave
and
sub
bound
pop
sbbl
sahf
lods
lret
jecxz
sub
pop
xchg
jo
fdivrl
mov
mov
jne
push
push
aam
and
adc
cmp
sub
ja
mov
cli
aas
int3
call
xchg
lcall
pop
pusha
sub
pop
cmpsl
mov
push
inc
pop
jbe
enter
clc
adc
lret
into
outsb
push
lock
lds
push
lock
shl
dec
nop
dec
push
ljmp
movsl
xchg
push
push
dec
into
push
inc
mov
in
aas
fstpt
xor
pop
nop
int
es
ror
lret
test
mov
icebp
in
dec
cwtl
dec
or
ljmp
scas
xchg
out
push
sub
push
push
or
and
or
pop
fdivr
stos
icebp
mov
inc
pop
mov
in
cmp
jno
mov
inc
stc
jmp
mov
jp
pop
inc
jns
test
mov
shll
daa
sbb
push
clc
test
mov
or
dec
arpl
int3
inc
scas
data16
inc
fistpl
stc
cmpsl
lret
aas
std
dec
pop
sub
jbe
adc
es
flds
ss
adc
aas
xor
inc
pop
lods
cmp
popf
mov
mov
outsl
daa
rol
fstpt
sti
pop
sub
ss
mov
mov
sarl
push
loop
cmpsb
cmp
out
xor
out
add
adc
inc
xchg
lret
adc
inc
xchg
mov
sarl
fidivl
jne
and
das
sub
insl
jnp
jg
je
mov
cli
outsl
insb
mov
sarl
aaa
repnz
dec
jnp
out
dec
inc
and
mov
ficoms
loope
int
mov
fstl
jne
in
push
in
jo
cmpb
xlat
sbb
mov
es
jb
mov
std
fiadds
fwait
cmp
dec
iret
jae
pop
mov
sbb
adc
lret
cltd
lcall
jg
push
roll
or
push
out
shll
popf
cmpsb
pushf
inc
mov
add
or
aad
sbb
push
mov
fistps
loopne
scas
rclb
mov
jbe
fldl
adc
xor
sahf
mov
pop
lods
popa
adc
adc
cltd
scas
test
cmp
roll
jne
lds
repnz
pop
stos
xchg
js
hlt
mov
das
jb
rcrl
bndstx
mov
dec
fimuls
cmp
cmpsb
xchg
sbb
mov
dec
rolb
push
dec
inc
xchg
inc
cmp
loope
push
inc
outsb
xchg
pop
test
ltr
ljmp
adc
iret
cmpsb
jl
xor
mov
mov
sbb
cmp
cli
shl
pop
sub
repnz
or
cmp
or
mov
or
inc
orb
lds
lret
dec
iret
pop
and
adc
add
je
icebp
pop
or
cwtl
daa
imul
pop
jns
lds
jmp
out
push
cmp
in
cmp
out
addb
push
sbb
out
repz
xchg
xchg
mov
mov
inc
cmpl
andl
popa
cltd
sahf
xchg
jecxz
addb
push
loope
mov
jbe
inc
ficoms
mov
sbb
pop
mov
scas
cltd
dec
aam
jae
ret
hlt
mov
jbe
jp
popf
ret
sti
lcall
mov
je
cmp
cltd
pop
push
fstl
sub
popaw
ja
push
loopne
jne
or
ffree
ds
rorb
mov
int3
ljmp
test
outsb
ja
add
push
lret
movsb
fnsave
pand
mov
aaa
or
pop
scas
mov
mov
xlat
outsb
jg
or
ja
jmp
mov
jnp
inc
jne
hlt
mov
data16
icebp
repnz
add
pop
lods
daa
and
xchg
jbe
lret
addr16
popf
test
fst
jae
inc
adc
pop
xchg
insl
adc
dec
data16
or
lcall
aad
sub
add
hlt
movsb
push
adc
gs
mov
stos
mov
lea
pop
mov
out
sub
shl
push
sbb
sub
int
jl
jmp
inc
sub
jno
add
dec
mov
fldt
xchg
push
cmp
mov
pop
or
mov
push
lds
out
mov
xlat
lods
sub
push
scas
mov
test
jne
scas
dec
jno
and
test
xor
mov
aaa
adc
xor
lods
sbb
popl
xchg
iret
imul
mov
je
xor
mov
call
shrl
add
mov
aas
xor
into
jmp
fists
add
imul
jle
cmpsl
sarl
mov
mov
adc
int
sub
stc
addr16
fisubl
push
or
sbb
adc
int
mov
and
imul
ds
incl
mov
and
imul
and
ret
push
int
inc
lds
xchg
inc
ficoml
inc
xor
movnti
fldcw
neg
sbb
xchg
mov
push
add
adc
in
lcallw
sub
push
dec
clc
ss
inc
out
call
sub
ss
add
push
cmpsb
xor
push
arpl
sti
adc
aam
mov
mov
mov
outsb
repz
pop
cmp
xor
pop
cltd
xor
mov
mov
inc
xlat
inc
rolb
sub
repnz
sti
inc
imul
test
das
pusha
sti
cwtl
inc
add
and
xlat
cmp
sub
fmuls
lods
pop
sbb
and
add
mov
sbb
les
aad
xchg
cmc
pop
outsl
pop
insl
lcall
or
inc
mov
fidivs
mov
in
xchg
test
fisubrs
push
xchg
into
and
leave
inc
lods
mov
pop
jne
sbb
push
fcompl
lock
dec
lret
adc
int
je
iret
pop
sbb
mov
loopne
cltd
mov
into
stos
cmp
outsb
push
xlat
jp
cld
mov
repnz
jns
sbb
push
inc
push
out
icebp
scas
je
push
movsl
mov
in
stc
mov
jb
cmc
outsl
xchg
sar
sbb
nop
lahf
inc
cmp
imull
and
inc
mov
sarl
inc
bound
push
data16
cmpsb
insl
jbe
das
daa
shll
inc
jecxz
and
fs
push
push
outsl
lods
xchg
jmp
loope
xor
rcrl
in
pop
sti
outsl
pop
mov
push
imul
lds
xor
mov
pop
mov
movsb
scas
outsb
aaa
inc
push
pop
xchg
dec
insb
subb
mov
inc
xorl
out
jns
dec
notl
xor
fwait
jnp
mov
fwait
jge
andl
dec
cmp
push
loop
adc
mov
jmp
xor
dec
dec
add
cmp
fnstcw
cmp
out
je
inc
push
push
dec
add
xchg
fldt
jb
jle
cmpl
mov
mov
pop
loopne
jmp
and
imul
pushf
xchg
aaa
inc
mov
or
sahf
xor
mov
mov
jg
sub
mov
pop
lods
pop
pushf
or
xchg
loop
sub
les
jmp
sub
subb
push
ja
out
sar
outsb
cltd
inc
jns
push
adc
jne
fs
add
mov
aas
sbb
fcompl
mov
fsub
pop
sub
scas
les
int
cmp
sub
dec
ds
lcall
scas
jb
lock
pop
push
sub
mul
xchg
sub
push
inc
push
enter
xchg
iret
pop
jp
incl
jl
inc
mov
pop
or
in
sbb
or
xor
mov
add
and
jl
in
aam
arpl
xchg
mov
jbe
pop
push
test
scas
daa
pop
xor
scas
push
jns
xor
jnp
inc
push
xlat
push
sbb
or
lods
dec
mov
pop
add
push
cltd
nop
mov
repz
mov
lahf
xor
in
call
ficoms
test
jmp
mov
sbb
mov
mov
orb
push
mov
aam
pusha
mov
mov
sbb
sbb
cmc
rolb
add
dec
addr16
mov
xor
rclb
push
inc
add
pop
mov
push
jg
pop
xchg
stc
add
sbb
in
fldt
xor
pop
imul
dec
xor
inc
popa
cmp
fistps
loope
cli
jnp
in
cld
xchg
xor
sub
mov
jmp
push
ljmp
leave
fistpll
xlat
mov
outsb
sub
inc
cmc
ficomps
imul
pushf
adc
inc
call
jecxz
and
dec
imul
loop
stos
mov
cmp
scas
jbe
lods
and
lret
dec
ds
ffreep
fisubl
sbb
fisubl
iret
fisubs
xchg
push
cmp
jge
push
shll
loopne
outsb
mov
push
insb
mov
int
mov
dec
xchg
icebp
sahf
mov
pop
test
push
xchg
bound
cmp
test
and
aas
inc
sarb
pop
aaa
shrb
or
mov
rorl
data16
out
dec
out
aaa
or
pop
dec
xlat
jae
push
cltd
jo
frndint
aad
jnp
pop
xor
pop
and
sub
ss
std
adc
jno
pop
add
stc
scas
xor
xor
add
test
shll
jmp
ds
push
testl
cmp
call
movsb
test
push
aas
lods
inc
and
pop
xor
insl
xchg
enter
adc
mov
adc
cmp
pop
ds
xorb
dec
sahf
jno
or
cmc
xchg
andl
imul
push
shlb
cs
or
mov
push
xchg
lret
jle
dec
gs
sbb
mov
adc
xchg
dec
in
shll
adc
push
xor
testl
jae
imul
stc
movsb
sub
test
jl
lret
mov
cs
pushf
or
jg
call
negl
pop
loopne
pop
cltd
xchg
xlat
mov
cmp
xorl
cwtl
jecxz
scas
pop
xchg
cld
add
js
push
lods
das
cld
clc
inc
pusha
push
or
xor
dec
ja
push
xlat
xor
into
pop
aam
mov
xchg
pop
inc
sbbb
out
xchg
xchg
clc
and
das
imull
ss
test
sti
jmp
aaa
movl
add
stc
subb
rclb
pop
imul
jp
xor
loop
add
nop
cltd
sub
fsubs
pop
test
lock
sbb
dec
int3
sub
sbb
testb
into
add
cli
mov
sbb
jae
add
push
aaa
cmp
mov
cmp
add
aaa
lahf
fmuls
push
shrb
or
sbb
fcomps
icebp
or
xor
rclb
repz
mov
mov
lcall
loope
ja
loop
bound
stos
loop
xorb
cwtl
push
mov
dec
lods
inc
mov
sub
out
fcmovbe
ss
lcall
inc
out
mov
outsb
sbb
xlat
test
push
cli
das
or
inc
out
je
fstps
ret
stos
mov
jl
shrb
in
mov
cmp
pop
popa
out
xchg
cmp
ljmp
inc
mov
and
pop
fcom
ja
mov
sbb
fnsave
inc
sbb
fucomi
or
jne
add
es
mov
lret
ret
aad
inc
shl
sbb
xchg
jmp
or
popa
mov
lods
mov
pop
push
out
aaa
call
in
sub
jo
incl
mov
sub
push
rolb
daa
sub
orl
xchg
cmp
shll
inc
js
xor
ljmp
mov
push
cmp
outsb
movsl
popf
sub
or
and
add
adc
dec
push
int
cmp
mov
mov
scas
loope
mov
push
pop
jnp
test
scas
cld
stos
and
push
jl
f2xm1
add
iret
nop
sbb
push
scas
shl
cli
stc
jns
popa
mov
inc
leave
pop
clc
ljmp
inc
jle
adc
gs
jae
int
mov
aaa
cmp
xlat
scas
cmc
cmp
outsb
push
iret
push
or
push
add
sbb
jg
sub
inc
sub
jns
movsb
xlat
ljmp
ljmp
fwait
mov
pop
jl
sti
test
inc
mov
mov
out
out
shl
fucomip
push
bnd
add
and
imul
add
rcrl
cltd
sti
mov
push
outsl
aas
bound
inc
in
popf
lahf
xchg
mov
pop
mov
sub
mov
fs
pop
inc
inc
imul
xor
xchg
pop
inc
dec
arpl
jmp
in
inc
test
out
sbb
mov
xor
jnp
or
pop
into
and
movsb
or
dec
mov
scas
leave
les
xchg
or
out
mov
pop
ss
in
dec
lahf
out
movsl
movsl
adc
lahf
fwait
outsb
subl
xchg
jle
pop
xor
jnp
div
and
fiadds
shl
fsubrs
or
test
adc
jle
mov
add
hlt
icebp
jge
dec
mov
jne
divb
xchg
mov
and
xchg
jp
sbb
dec
mov
add
or
add
inc
stos
xchg
je
sub
mov
stc
and
add
leave
xor
cwtl
xor
jb
das
mov
ljmp
sub
pminsw
push
fimuls
ret
sub
dec
xor
pop
fucomi
pop
push
inc
ljmp
ret
jge
ljmp
cmp
in
jecxz
adc
and
insl
mov
push
sarb
ret
shl
add
mov
dec
into
sbb
outsl
mov
out
insl
pushf
out
jle
lea
dec
je
cmp
and
imul
fstps
in
adc
cmpsb
hlt
into
hlt
xchg
cmp
enter
dec
adc
inc
mov
test
cwtl
push
imul
int
pop
rclb
sub
gs
cld
sub
lcall
xor
movl
adc
and
adc
mov
cmp
sbb
push
cmpsl
jnp
loop
test
std
push
stos
lds
jmp
data16
inc
pop
push
popa
ficomps
push
or
ss
push
paddsb
fwait
lret
outsb
repz
inc
enter
add
sbb
aam
jmp
call
and
jb
mov
sub
inc
cmc
fs
subb
repnz
aas
sub
stos
insb
out
shrl
mov
add
jns
in
cmp
jns
stos
xor
jne
mov
scas
mov
je
adcb
lahf
push
push
ficoms
push
loope
inc
pop
daa
sub
nop
aam
xor
jns
lea
xchg
seta
repz
stc
xlat
xchg
in
jne
aaa
data16
jg
or
leave
or
and
rcl
cmc
jae
repnz
popa
rcrl
xor
push
add
andl
pop
lret
in
sub
xorl
dec
adc
mov
ret
lcall
dec
out
cs
js
push
cli
adc
pop
xchg
sub
std
cwtl
arpl
aaa
idivl
lea
stos
and
xor
jl
and
mov
push
xchg
mov
fimull
loope
adc
vmptrst
add
mov
cmp
mov
push
int
std
push
pusha
pop
jno
jge
lods
clc
out
popf
inc
jmp
les
pop
nop
pop
aaa
movsb
mov
aaa
icebp
or
add
scas
and
test
jl
rorl
ficompl
shll
mov
add
in
fsubl
cmc
dec
push
aad
mov
pop
xchg
mov
jns
sub
fnstsw
mov
je
dec
or
cwtl
xchg
shll
pusha
sahf
mov
fidivrs
dec
push
xchg
inc
mov
icebp
sbbb
ret
orl
pop
loope
mov
lahf
jo
fwait
dec
cmp
xorb
sbb
jp
pop
stos
ss
inc
stc
insb
adc
or
mov
imull
lret
jo
cmp
mov
mov
sub
mov
jne
movb
dec
pop
std
ja
js
lods
icebp
add
push
dec
mov
and
scas
incl
cmp
fstl
push
push
leave
out
jne
or
jbe
xchg
mov
push
inc
jmp
xchg
test
in
movsb
or
jmp
jecxz
subb
in
mov
or
push
sub
push
scas
daa
hlt
adc
mov
shlb
add
std
addr16
loope
lret
mov
sbb
xchg
mov
insb
dec
inc
mov
in
out
mov
pop
rclb
sbb
sub
jg
push
mov
or
push
cmp
out
lcall
xchg
and
pop
push
roll
cmp
mov
inc
or
mov
cltd
sub
xor
js
mov
in
popa
ret
mov
out
lods
es
adc
es
repnz
mov
fs
xchg
pop
es
mov
sbb
add
add
xchg
adc
stos
pushf
scas
test
cmpsl
ss
cld
fldenv
mov
mov
test
aas
in
or
sbb
pop
add
mov
push
in
cltd
or
inc
xchg
xor
sbb
pop
xchg
lret
cmp
mov
and
cmp
lret
push
jle
out
pusha
iret
xor
popf
mov
rorl
or
or
mov
or
jbe
shl
fdivp
int
push
add
xlat
dec
sub
test
popa
and
call
lcall
leave
cmp
xchg
lock
cmpsb
repnz
push
in
dec
and
lea
ficomps
lods
aam
add
xchg
imul
popf
inc
fcmovbe
call
loopne
dec
mov
fsubs
cmpsl
add
mov
popf
inc
jl
mov
mov
inc
aas
cmp
jge
mov
inc
sar
loopne
scas
rorl
enter
push
out
sub
cli
jl
xor
cmc
pop
mov
arpl
mov
fcoms
xchg
shrl
lret
hlt
pop
iret
mov
shll
mov
pop
sub
or
stos
ror
xor
nop
imul
pop
rorb
and
popa
test
pushf
jno
stos
jmp
in
mov
cmp
lea
push
aam
repz
cmpsb
ja
test
ljmp
int3
adc
aaa
sbb
lock
mov
insl
mov
add
insl
mov
pop
xchg
and
mov
inc
push
je
aad
insl
outsl
xchg
dec
adc
mov
sti
push
gs
inc
cmp
mov
mov
stc
push
push
adc
push
add
leave
jg
scas
lahf
mov
rolb
test
or
jae
ja
fs
push
xchg
jnp
mov
sub
push
loopne
and
mov
stc
xchg
in
das
xchg
push
lods
mov
xchg
mov
xchg
aas
ret
std
xchg
jo
sbb
push
sub
les
out
data16
sbb
lea
jmp
das
jg
dec
pop
das
xchg
ja
das
shll
aas
sbb
loop
and
repnz
ror
rorb
xor
cltd
mov
push
push
cmp
popf
std
flds
xchg
aas
imulb
xor
sub
testl
ret
jg
outsl
jp
loope
xchg
int3
push
in
cmp
std
xor
outsb
mov
xchg
repz
adc
scas
nop
add
lret
lea
enter
fcompl
mov
cmpb
lock
int3
mov
loop
sub
movb
mov
xchg
fs
and
push
shrb
outsb
add
nop
mov
lock
cs
xor
daa
dec
data16
int
scas
xchg
pop
pushf
inc
pop
divb
sbb
iret
cmp
or
cld
xchg
out
int
inc
inc
ret
adc
popl
xchg
lcall
mov
out
rcll
ja
pop
out
adc
add
ret
inc
sarb
scas
xchg
xchg
outsl
hlt
jmp
jecxz
sub
jg
inc
pop
fmull
jbe
lds
push
fstl
sti
mov
mov
dec
das
and
and
loopne
subb
xor
dec
mov
repz
pop
jmp
cli
inc
mov
into
xor
xor
sub
gs
repz
adc
das
inc
mov
insl
jecxz
sbb
xor
pop
mov
lret
adc
nop
jae
mov
pop
and
in
sbb
jle
gs
setno
or
out
sub
xor
bound
jp
push
adc
out
ffree
shlb
cwtl
inc
repnz
frstor
jecxz
repz
fstl
outsl
pop
flds
fdivrl
rorl
pop
lret
pop
daa
pop
mov
cwtl
jne
or
data16
xor
sahf
and
jle
cmc
mov
pop
call
outsw
mov
mov
sub
jb
fisubrs
out
leave
cmp
lds
xor
jmp
out
mov
testb
shll
movsb
inc
ds
popf
jmp
je
cmp
call
mov
jnp
xchg
mov
sub
pop
shl
daa
push
ss
pop
or
into
cld
cmc
push
xlat
jecxz
cmc
sbb
gs
stos
rolb
inc
iret
out
jg
cs
ret
jno
pusha
int
aad
pop
sbb
sub
cmp
insl
rolb
mov
fs
mov
test
cmp
xlat
and
inc
iret
xchg
int
in
lea
mov
or
sbb
or
xor
mov
outsb
mov
addr16
pushf
pop
ds
sub
mov
pop
mov
pop
fsub
and
test
sbb
mov
fwait
in
pop
jb
fs
imul
mov
cs
xchg
jle
pop
insb
repnz
adc
pushf
imul
jnp
mov
repnz
dec
lahf
fxch
xchg
mov
ljmp
dec
push
xchg
mov
jnp
mov
cmp
shrb
aad
xchg
jge
sub
mov
shll
push
lods
pop
lcall
or
and
ljmp
ficoms
push
sbb
dec
iret
rol
std
jo
pop
imul
in
outsl
cs
test
and
rcll
mov
rep
add
sub
testb
sbb
psubq
call
mov
test
sbb
addl
xor
es
push
sbb
push
xor
int3
xor
xchg
mov
shrb
xor
sar
cmpsl
ds
mov
test
aas
push
sub
inc
aaa
pop
test
inc
mov
lret
fbstp
xor
and
or
push
pop
sbb
inc
jp
addr16
and
and
pop
jbe
das
insb
call
jle
dec
lock
test
mov
jb
mov
and
lea
mov
popa
test
les
mov
rclb
mov
arpl
jne
into
dec
mov
push
into
rcl
jae
into
jns
test
jae
cld
mov
add
jo
pop
aaa
sbb
int
xchg
rcrl
xor
dec
xor
loope
fildl
or
push
pop
aaa
pop
sub
lret
in
mov
push
pop
cmp
sahf
add
ss
fisttpll
mov
sarb
call
or
rorb
pop
pop
or
mov
pop
popa
imul
cmovnp
sbb
mov
outsl
and
jl
inc
mov
inc
mov
scas
lret
and
mov
leave
inc
and
cltd
push
mov
flds
mov
stos
push
stos
adc
test
scas
mov
test
xor
cwtl
ljmp
loope
push
insb
call
add
out
push
fnstcw
sbb
xchg
xchg
aas
rcrb
les
and
xchg
in
cmpsl
orb
xchg
movsb
lds
addr16
xor
aaa
aas
sub
xor
xor
mov
cmp
je
sbb
cmc
inc
jbe
ljmp
adc
rorl
fst
xor
movsb
scas
loop
or
inc
in
add
sub
stos
shll
sub
inc
out
jbe
add
sub
xor
aam
or
add
mov
lahf
mov
pop
je
loop
stos
jne
mov
into
xorb
aas
faddp
sti
scas
filds
es
lods
loope
sub
inc
dec
or
ds
cs
fcomps
adc
nop
add
xor
mov
mov
or
addr16
or
fisttpll
ljmp
xor
ret
jp
push
jmp
or
movsl
pop
push
sbb
pop
int
lock
pop
xlat
jl
push
push
push
je
xchg
data16
dec
jbe
dec
xlat
pop
pop
aaa
insl
dec
mov
inc
push
divb
mov
inc
jo
repz
and
jmp
mov
jg
add
sahf
jne
jecxz
jae
mov
adc
cmp
xchg
mov
mov
aad
es
call
dec
cmp
leave
push
js
mov
stc
fldenv
mov
sub
lahf
jbe
cmp
insb
jne
popa
std
xor
jne
dec
lahf
out
test
adc
cmpsl
inc
scas
shr
xor
fmull
lods
mov
in
jp
inc
iret
hlt
das
fsubs
movsl
cli
add
pop
enter
sbb
inc
mov
fmuls
xchg
mov
std
adc
fdivl
clc
into
das
and
dec
ljmp
fstps
adc
lods
add
xchg
fildl
int3
add
xor
je
int
push
xor
fsubrs
push
arpl
jge
div
jb
loopne
jno
xchg
inc
xchg
or
jbe
loop
ds
cmp
mov
nop
std
call
xor
js
or
push
ret
lock
lods
pop
and
lahf
stc
loop
sub
and
mov
testl
orl
ja
outsb
cs
pop
js
gs
test
pop
lret
repz
or
cmp
push
jae
sub
insl
lods
mov
test
in
bound
ret
ret
mov
lds
sti
movsl
sbb
add
push
dec
iret
outsl
jbe
fsts
mov
leave
ret
add
incb
sbb
xor
jns
pusha
mov
xchg
ds
call
sahf
sub
jmp
enter
andb
inc
out
ss
popa
scas
test
add
sbb
jb
in
fdivr
ja
imul
cmc
shll
test
cmpsl
insb
lea
jl
push
mov
jle
add
std
notb
loop
mov
inc
jmp
in
std
imul
aas
aas
pop
push
inc
cmc
icebp
mov
icebp
jne
fimuls
xor
in
sub
push
sub
mov
fidivrs
jg
dec
shll
sbb
adc
loope
cmpsl
icebp
add
add
scas
popf
testl
jmp
and
push
or
push
dec
mov
add
fs
daa
xor
cmp
shlb
and
aam
into
mov
pop
dec
nop
movsl
xchg
clc
dec
lret
nop
subl
mov
jnp
cwtl
jae
lock
popa
rcll
push
pop
jmp
dec
mov
mov
mov
int3
mov
adc
movlps
mov
sub
cs
and
pop
out
jge
adc
adc
push
jns
sbb
sti
sbb
inc
inc
add
fwait
hlt
shr
scas
pop
arpl
sub
cmp
jo
negl
scas
cmp
push
flds
mov
rorl
stos
lahf
lahf
mov
sti
iret
cmp
add
mov
outsl
sub
pop
jae
mov
push
xor
nop
mov
push
push
pop
add
scas
add
ja
and
jecxz
rcrl
mov
cltd
loope
dec
cltd
adc
mov
cmp
jb
pusha
xchg
mov
cmp
push
add
faddp
insl
icebp
jle
fstps
or
movsb
jecxz
cli
cmp
int3
cmp
mov
or
or
pop
sub
inc
inc
popl
cmp
popf
xor
and
adc
inc
dec
add
sub
ret
scas
outsb
cs
inc
cmpsb
push
out
aas
test
pop
ret
outsb
pop
pop
dec
idivl
jno
repnz
jmp
dec
lahf
and
jge
or
cmp
mov
xor
cli
jle
cmc
mov
pushf
ret
push
push
xlat
mov
aad
xchg
nop
or
pop
stos
xchg
xchg
in
adcl
shll
or
pop
dec
jge
mov
push
mov
jbe
and
dec
inc
pop
jb
push
mov
das
jl
mov
push
sbb
mov
mov
jmp
mov
sub
loope
in
stc
in
add
mov
ret
jle
aaa
imul
cmp
push
pop
fstpl
lea
dec
mov
imul
sti
repz
lret
shlb
int3
pop
xchg
cmp
ja
div
mov
inc
leave
in
jle
push
fcoml
sbb
clc
jmp
adc
add
pop
pop
in
pop
fwait
sarl
rcrl
adc
sbbl
add
loope
je
add
notl
adc
popw
add
mov
lods
cmp
out
jb
lods
leave
xchg
cmp
dec
xchg
jl
or
push
cwtl
fists
xchg
dec
xor
xchg
js
cmp
cmp
lret
pushf
cs
fsubs
add
test
test
jp
mov
out
xchg
lods
jae
int
or
xor
sbb
sub
lret
fisubrl
sub
xchg
add
and
lret
inc
std
push
push
dec
inc
adc
pop
mov
or
jl
je,pt
orl
xchg
xor
repnz
or
xor
cmp
ljmp
lahf
enter
jg
insl
cld
and
adc
cmp
fisubrl
push
inc
and
cmp
dec
push
cmp
inc
fdiv
xchg
mov
sub
push
add
jmp
and
loopne
lahf
andb
insl
jae
pushf
out
adcl
mov
outsb
xchg
push
imul
inc
mov
mov
in
and
cmp
jmp
in
mov
and
sbb
fs
negl
jb
sub
sbb
inc
xchg
scas
dec
inc
pop
into
inc
pusha
fdivrl
jns
mov
inc
pop
fcomi
rcl
loope
aas
lahf
or
sbb
jne
and
cli
xchg
aaa
aad
jb
sti
pop
into
jno
fwait
lahf
cmp
lds
sub
movsl
jg
push
js
sbb
leave
std
ss
mov
repnz
pop
pop
outsb
mov
lahf
iret
rclb
xchg
loopne
std
stos
mov
sbb
xchg
or
adc
je
repz
test
bound
dec
or
aaa
fdivrl
repnz
mov
mov
mov
mov
adc
hlt
or
add
ss
or
std
cmpsb
stos
lds
jbe
mov
add
and
out
inc
mov
sbb
ret
adc
cmpsb
xchg
int
and
ficoml
inc
pop
stos
xor
out
add
jge
dec
iret
pop
outsl
cmp
mov
test
adc
cmp
in
xlat
sahf
aaa
test
addl
leave
pusha
lods
stos
loopne
cmp
stos
int3
lcall
xchg
mov
fsubl
popf
ljmp
inc
fdivl
and
movsb
arpl
jbe
jno
ljmp
cmpsb
in
lret
jl
dec
dec
or
or
das
pop
xchg
xchg
add
das
mov
or
scas
or
shlb
mov
jle
push
imul
xchg
xor
sub
xchg
in
mov
mov
jp
sti
mov
adc
adc
out
add
test
jg
inc
cwtl
xchg
pop
jp
imulb
and
jp
sbb
pop
xor
lock
push
xchg
lret
mov
test
push
popf
orl
cld
inc
add
or
dec
adc
inc
int3
sub
jecxz
jle
mov
repnz
xchg
sub
movsb
int3
sbb
cmp
cmpsl
ret
mov
jl
int3
mov
and
xchg
loope
cmpsb
dec
mov
inc
lea
add
xlat
add
fcmovb
push
push
push
lret
push
mov
call
out
sub
ret
sti
aas
xor
adc
cli
mov
adc
ret
mov
addb
adc
lcall
stos
fs
push
sbb
mov
jecxz
ss
out
xchg
rolb
pop
pop
add
repnz
sub
push
push
loope
call
psrld
xchg
mov
shl
leave
or
aad
test
movsb
sete
or
dec
cmp
inc
dec
fbld
scas
jge
ret
sub
mov
mov
jle
lods
loopne
test
data16
jle
push
push
cmp
jle
cmpsl
adc
sbb
pop
sbb
push
imul
jmp
mov
test
cltd
inc
sbb
jge
push
jne
jbe
sbb
push
mov
inc
je
imul
mov
loopne
mov
jbe
addr16
jns
push
js
movsb
bound
jg
sbb
shlb
gs
mov
mov
int
orb
xchg
sbb
ja
dec
lods
jecxz
and
mov
stos
and
sbb
push
jle
mov
outsb
scas
mov
pop
insl
and
pop
sub
popf
or
cmp
in
pop
xchg
mov
jmp
sbb
inc
iret
lret
mov
mov
scas
es
sbb
dec
imul
hlt
bound
rcll
mov
mov
sub
sub
inc
or
aad
push
stos
movsl
mov
or
bound
cltd
sub
fwait
inc
lea
test
push
mov
ret
jo
rclb
xchg
and
cwtl
dec
scas
cmpsl
jae
out
pop
push
cmpl
adc
cmp
pop
test
cmp
mov
iret
aas
jp
mov
js
loop
ds
test
cmpsb
and
repnz
or
aas
mov
jmp
lods
ret
jae
in
lods
adc
leave
mov
xchg
outsb
cmpsl
popf
xchg
scas
jnp
lock
mov
dec
xor
sbb
inc
sub
ret
fisubrl
insb
loope
inc
mov
mov
mov
cs
pop
jge
mov
pop
mov
jnp
jnp
pop
pop
cs
ret
mov
dec
daa
jmp
clc
fnstcw
push
add
push
dec
or
jge
outsl
jne
pop
sub
mov
cmpsb
jnp
push
addr16
jle
ficoms
test
push
pop
or
xchg
push
cmc
mov
sarb
lds
clc
scas
rcrl
in
xchg
cmpsl
xchg
and
cs
cmpsb
mov
cmp
call
in
bound
inc
dec
rcrb
pop
out
rcr
mov
ret
loope
icebp
in
inc
mov
add
clc
mov
mov
cmp
test
sub
xchg
fst
ficoml
repz
mov
mov
cmpsb
dec
aad
adc
scas
cmp
dec
pop
jecxz
cs
mov
jmp
out
xchg
lahf
cmp
mov
aam
mov
repnz
imul
js
mov
mov
sbb
xor
pop
inc
adc
push
test
sub
and
push
push
ljmp
out
mov
jecxz
inc
fidivs
int3
decl
int3
lcall
adc
mov
lahf
dec
in
ret
pop
adc
sarb
sbb
and
jmp
aas
xor
int3
adc
hlt
out
or
lahf
and
and
xlat
mov
sub
leave
icebp
ret
push
jne
mov
in
sbbl
jo
aas
mov
iret
sub
adc
sahf
cmp
sar
aad
lcall
jno
xchg
and
xchg
sub
addl
adc
push
iret
lock
pushf
test
mov
xchg
sub
adc
lahf
jp
add
mov
mov
fiadds
psllq
aad
mov
loope
xor
fdecstp
jbe
loopne
rcrb
loop
inc
pop
pop
cmp
push
push
jecxz
pop
mov
and
pop
push
dec
lods
aad
jecxz
cmpsl
push
and
les
xor
mov
stos
stos
inc
mov
std
push
adc
sub
jbe
ds
dec
push
fadd
push
or
inc
and
negl
testl
or
jl
cmp
fimuls
jb
arpl
aas
fstpt
imul
mov
jbe
xchg
lret
ret
shll
sub
xchg
push
cmp
ss
lcall
movsb
jae
sbb
cmp
inc
mull
sbb
lods
popa
mov
adc
dec
xchg
rcl
popa
shll
sub
jbe
pop
jg
jae
xchg
cmp
cwtl
push
out
xor
or
gs
ficoml
orb
pusha
stc
push
sbb
pop
imul
cmp
dec
fstpl
imul
add
mov
add
lods
out
iret
insb
xchg
push
pusha
ljmp
sbb
mov
daa
jle
dec
ja
enter
xor
fs
hlt
std
mov
fistpll
sbb
or
xchg
jae
add
pop
sbb
arpl
out
push
insb
sbb
ficoms
dec
push
mov
nop
lret
mov
xor
mov
xchg
mov
xchg
nop
and
divl
xor
and
movsl
cmp
pop
scas
in
jo
cmpsl
xor
dec
sub
cmp
fstpl
xor
lock
rclb
pop
test
enter
shll
jg
dec
mov
cmp
insl
push
push
fsubl
out
cli
cld
mov
cmp
out
push
fstpt
push
ficomps
lahf
lret
in
stos
test
jle
push
jmp
mov
pop
rolb
jb
xor
adc
daa
cwtl
or
cmp
sbb
loope
repz
scas
imul
lret
and
jl
inc
dec
lret
aam
dec
cld
cmp
adc
fwait
pop
scas
inc
pop
or
sbb
mov
ret
aaa
xchg
cmp
xor
iret
jne
cltd
int3
jmp
pop
mov
fbstp
mov
out
sbb
pusha
mov
lcall
push
or
es
mov
push
mov
loop
mov
js
loope
add
xorl
sub
ret
sub
dec
push
clc
cmp
je
mov
lret
and
ja
in
xchg
pop
ss
cld
hlt
push
in
jmp
aaa
std
pop
arpl
stos
jbe
sahf
xor
mov
xchg
jle
or
cmp
add
out
xchg
dec
loopne
movsl
in
jae
mov
lret
repz
dec
fs
dec
adc
stc
jbe
dec
pop
mov
daa
rcll
jae
pop
dec
out
enter
push
mov
add
lret
adc
dec
or
pusha
lea
and
mov
cmp
jno
sbb
cwtl
test
mov
sbbb
stos
in
cmp
add
pop
leave
shl
nop
shl
sbb
mov
push
mov
xchg
into
dec
jle
inc
test
mov
push
and
out
xchg
sbb
hlt
push
cs
mov
push
jecxz
mov
mov
movntps
out
inc
nop
icebp
mov
es
and
pop
add
mov
and
xor
adc
jne
lret
sub
sub
pop
out
mov
pusha
aad
das
mov
pop
jns
sbb
pslld
dec
jns
inc
lahf
cmp
mov
rcrl
imul
jns
and
ud2
sub
sysexit
pop
pop
add
add
pop
daa
jecxz
cmp
sub
shrl
and
or
icebp
fcmovnb
push
lock
pusha
push
cmpsl
dec
push
in
cs
jns
cmpsl
negb
push
fisttpl
jnp
jno
or
mov
xor
cmp
jae
or
int
popa
mov
cmp
adcl
pop
in
cmp
mov
stos
mov
iret
jp
rolb
clc
mov
call
xlat
pusha
push
push
and
test
jae
cmpsl
aas
cmp
add
push
mov
leave
aas
sbb
outsb
add
mov
mov
aas
rol
push
adc
sahf
stos
mov
out
xchg
sahf
ja
clc
jmp
jge
dec
jne
add
sti
pop
pop
ffreep
addb
mov
push
test
lahf
out
jle
out
movsb
jnp
mov
fnsave
daa
fsub
pop
sub
arpl
in
or
xor
arpl
es
insb
inc
test
repnz
xor
pop
jbe
scas
mov
or
mov
lods
lods
ret
es
in
xchg
ficomps
mov
es
dec
stc
push
dec
inc
hlt
imul
out
dec
xor
jle
dec
addr16
pusha
jl
popf
notb
push
sub
adc
cmp
xor
js
push
mov
push
aaa
jne
cmpsl
jno
xchg
mov
loope
mov
popf
mov
sub
sbb
enter
icebp
mov
jecxz
jno
in
mov
fdivrs
jl
xchg
add
addr16
xlat
out
ficoms
mov
cmp
adc
lods
xor
repnz
lea
cli
idivb
jo
aad
sbb
xchg
roll
pop
mov
add
pop
inc
fistps
cld
or
xchg
mov
cmp
test
mov
fwait
cli
ljmp
xor
push
int
pop
sub
movsl
ret
push
int
inc
jno
push
enter
notl
or
adc
in
jae
dec
dec
push
mov
cltd
std
lock
add
out
fbstp
adc
leave
insb
mov
mov
push
add
ret
jns
inc
push
mov
sub
push
mov
fldenv
mov
jg
xlat
push
cmp
or
shr
inc
mov
pop
sbb
sub
call
pop
mov
jmp
arpl
and
lock
mov
sub
jle
mov
adc
adc
mov
sub
xchg
jno
xlat
push
js
xchg
mov
fs
into
call
loope
arpl
leavew
lods
dec
or
lahf
add
mov
insb
add
pop
mov
pop
push
push
les
into
jp
mov
stos
js
or
and
xchg
pushf
or
mov
idiv
push
mov
aad
cmp
imul
pop
pop
sub
jno
sub
adc
pushf
pop
sub
or
ljmp
jnp
jae
ljmp
sub
inc
jns
orb
popa
pop
pusha
fdivrl
mov
mov
sub
test
leave
and
enter
push
pop
push
pushw
int3
adc
shlb
fsubl
scas
mov
ret
cmp
test
mov
imul
es
sub
loopne
sti
jnp
and
jb
js
lret
test
lea
test
jb
repnz
das
sbb
jecxz,pn
jb
jno
push
out
int
add
subl
xor
pop
scas
insl
jmp
adcb
jnp
ficomps
out
inc
inc
sbb
cltd
inc
cmpsb
aas
xor
clc
xchg
xchg
push
cmp
xor
lret
in
xor
mov
jp
mov
push
or
shlb
test
movsl
adc
mov
aad
out
or
or
test
adc
in
int3
frstor
and
cmp
bnd
insb
cmpsb
ret
and
or
mov
mov
mov
sbb
mov
scas
dec
push
sarl
add
mov
jae
das
dec
mov
and
xor
or
out
repz
mov
stos
inc
icebp
das
shlb
in
out
in
pop
adc
mov
cmp
cli
rolb
push
xor
mov
sub
loope
or
ja
cmp
int
jp
into
nop
loope
adc
cs
jb
inc
adc
cmpb
jo
mov
imul
fcoms
subl
push
enter
xor
sbb
cmp
dec
pushf
imulb
mov
fwait
lea
fstl
sub
inc
dec
mov
xor
mov
push
lock
nop
test
mov
add
outsb
xchg
fdivs
sti
xchg
jbe
jns
push
push
and
stc
xor
iret
pop
pop
icebp
add
sbb
add
loopne
sbb
fcmovnb
pop
stc
cld
push
stos
mov
sbb
mov
cmc
pop
push
inc
sbb
shll
ljmp
loope
push
adc
adc
sub
inc
cwtl
jnp
sub
fldcw
sbb
aas
clc
imul
or
cmp
pop
loopne
add
dec
sub
pop
daa
sbb
lcall
cmp
or
sbb
xor
scas
mov
sti
push
push
aas
pushf
cltd
sub
js
dec
push
mov
rcrl
mov
fildl
jmp
add
xor
pusha
addl
test
stos
or
mov
push
int3
xchg
mov
adc
jno
nop
jnp
insb
add
push
scas
fsts
or
jg
data16
daa
arpl
lret
sti
cmp
mov
adc
add
pop
idivb
insl
insl
mov
and
loop
pushf
jmp
inc
xchg
jge
cmp
add
std
arpl
js
jp
or
pop
in
add
fdivrs
jecxz
out
clc
mov
sbb
imul
sbb
mov
cltd
dec
push
daa
inc
loop
pusha
pop
stc
outsl
and
leave
mov
add
pusha
insb
sarl
jnp
adc
and
fcoms
outsl
mov
pop
cld
and
fcomi
nop
lret
cltd
popf
cli
cwtl
shl
imull
and
pushf
cmp
je
xchg
and
icebp
mov
sbb
dec
scas
and
xchg
outsb
stos
jmp
insb
je
fnstsw
sbb
push
inc
dec
shrb
pop
add
xor
adc
pop
mov
lret
push
shll
jmp
mov
mov
add
fwait
pop
pop
mov
push
xchg
jp
xchg
inc
cltd
ds
sbb
shrb
inc
movsb
add
out
dec
add
iret
test
cs
dec
pop
xchg
faddl
xor
jmp
pop
lret
pop
pop
fimuls
and
std
cmp
mov
insl
mov
shlb
pusha
fmull
push
mov
mov
push
and
or
bound
xlat
jnp
inc
push
inc
gs
pop
push
lea
incb
xorl
loope
adc
mov
out
sbb
xor
mov
pop
ss
movl
movl
clc
rol
int3
sbb
cmpsb
in
and
mov
imul
bound
and
nop
or
jnp
jbe
jae
jecxz
out
repz
pop
ret
jg
hlt
sahf
xchg
mov
lret
pop
cmc
mov
pop
andb
and
or
test
jge
imul
mov
xchg
dec
js
popf
aaa
mov
ret
pop
dec
pop
dec
inc
loopne
jbe
mov
enter
mov
out
aad
push
adc
push
repz
add
mov
or
pop
sbb
in
or
loope
pop
mov
scas
fwait
rcrl
push
sti
mov
mov
xchg
shl
pushf
subb
mov
fwait
sub
inc
adc
and
dec
mov
dec
repz
mov
mov
mov
or
testb
ljmp
xor
outsl
xorb
ror
pop
in
jp
adc
adc
call
imul
ret
inc
cmp
icebp
mov
les
sub
push
dec
mov
mov
dec
or
outsb
fistpll
ret
adcb
movsb
jmp
xor
lahf
sarb
inc
mov
fwait
nopl
mov
fadds
sar
pop
and
sti
pop
or
and
xchg
in
push
lods
popl
sahf
or
dec
outsl
xor
fs
push
dec
pusha
pop
outsl
sub
and
lret
sbb
leave
add
ja
mov
jecxz
mov
dec
inc
adc
inc
mov
xor
mov
in
xor
popf
out
pop
xchg
repnz
jle
fs
leave
inc
push
push
shll
jecxz
outsb
mov
js
mov
jno
and
int3
xlat
xchg
xchg
jmp
sub
push
jbe
mov
adc
in
or
sbb
out
lds
mov
mov
xchg
out
lods
push
pop
cmc
mov
jmp
pop
ja
adc
push
add
stc
and
sub
lret
xchg
out
jle
mov
stc
ljmp
sub
mov
push
fcompl
xor
mov
or
lods
lods
add
xchg
mov
iret
mov
ja
out
xchg
sub
mov
sub
xlat
sub
stos
push
dec
xor
xor
loopne
and
mov
stos
test
enter
cmpsb
pop
adc
sub
sbb
jne
adc
cwtl
cltd
add
cwtl
fsubp
mov
sbb
rcll
stos
mov
not
mov
lahf
dec
sbb
lock
insb
inc
ja
inc
mov
push
push
je
push
jo
sub
jp
rorb
sarl
jbe
jo
pop
mov
in
mov
and
dec
lret
stos
mov
sbb
fsubs
and
adc
adc
inc
adc
cmc
mov
pop
mov
sub
pushf
cmp
mov
das
or
inc
test
cmp
dec
loopne
sbbb
ret
les
cmp
lret
fs
std
lods
loope
or
stos
std
cmc
mov
ret
push
mov
jnp
cwtl
xor
je
rol
popf
aaa
ds
sti
movsb
ds
sbb
out
dec
push
test
push
adc
or
sub
stc
ret
aam
dec
mov
xchg
mov
and
xor
dec
aaa
lcall
dec
and
add
push
sbb
mov
pop
pusha
test
push
mov
xorb
fadds
or
push
dec
cmpsb
jae
lock
mov
in
iret
mov
out
bound
and
paddd
push
pop
xor
lods
cmp
and
mov
loopne
shl
xchg
mov
mov
jecxz
call
or
out
dec
xor
js
stos
int
lods
icebp
faddl
lret
out
es
fs
pop
push
fs
mov
xchg
inc
mov
inc
and
mov
inc
pop
push
insl
arpl
mov
subl
add
scas
ss
add
cmp
aas
cmp
out
cltd
out
dec
xchg
and
push
in
call
leave
jbe
in
inc
jmp
fdivrl
inc
xor
sarb
pop
cmpsl
je
mov
mov
xchg
or
push
cmpsl
push
and
pushf
out
add
xchg
jl
adc
adc
repz
addr16
mov
popf
cli
push
cmp
lcall
dec
mov
stos
repnz
pop
cmpsb
dec
and
and
ja
ljmp
cwtl
mov
adc
adc
inc
testb
push
pop
stos
subl
aas
or
pop
push
mov
int3
nop
es
fs
cmp
dec
nop
cmc
repz
mov
pusha
iret
inc
cmc
or
outsl
add
and
out
ljmp
fs
insb
or
and
push
cmp
sbb
loop
pop
test
mov
out
cmp
pusha
and
mov
jecxz
mov
or
mov
sub
ss
sbb
inc
sub
fidivs
pop
adc
stc
sub
not
inc
xor
test
jnp
pop
jns
icebp
test
inc
dec
in
int
outsl
shlb
dec
fwait
bound
pop
dec
push
mov
mov
xchg
movsb
dec
lret
and
sub
cmp
fs
xchg
ds
mov
mov
mov
cli
ficompl
hlt
out
popa
jns
pop
push
jecxz
pop
stos
and
jbe
int
pop
or
repz
mov
icebp
jae
xchg
test
mov
icebp
mov
inc
jnp
sub
lret
sti
cld
fstps
lret
add
jo
adc
or
in
mov
jae
jbe
rcrl
loopne
and
popf
retw
test
adc
pop
push
pop
mov
out
pop
sub
cld
sbb
out
dec
mov
jbe
gs
loope
stos
repz
add
mov
rcrb
fwait
xor
pop
pop
neg
test
inc
es
mov
pop
xchg
nop
adc
sbb
xchg
stos
push
insl
and
sbb
in
or
sub
fwait
jbe
cltd
rcl
mov
cmp
lret
imul
rorb
jecxz
cmp
orl
xchg
iret
inc
fcomp
repz
aad
or
or
jns
xor
dec
in
xadd
xor
push
insb
cld
repz
repnz
arpl
cld
std
fdivrl
repnz
xor
sub
out
pusha
sbb
xor
mov
imul
and
pop
inc
enter
pop
pushf
cltd
ds
fnsave
scas
or
lods
daa
insl
jle
das
in
enter
cmpb
cmp
push
jecxz
fsts
movsb
mov
ret
inc
ret
sbbl
cld
mov
and
adc
outsb
xchg
inc
sub
mov
xchg
call
aad
sbb
push
xor
pop
xchg
add
mov
push
cmpsl
lea
loopne
pop
adc
mulb
xor
and
iret
mov
add
pop
out
fistpll
hlt
jg
loopne
mov
mov
sbb
sub
jbe
mov
dec
in
into
lods
cli
imul
mov
lea
mov
jne
into
popa
into
jne
pop
xorb
cmp
shlb
add
test
insb
mov
fildll
stos
enter
daa
add
loopne
pop
inc
dec
pop
loop
in
je
xor
mov
cmc
ret
scas
shll
push
icebp
xchg
dec
adc
jo
inc
inc
into
ds
call
test
sbb
mov
aas
sbb
imul
and
fistpl
cmpsl
sbb
fs
xor
push
lahf
aaa
pushf
fxch
js
inc
and
aaa
repz
dec
outsb
push
mov
arpl
pop
movsb
fdivrl
jge
hlt
negl
ficoml
test
dec
out
and
lds
into
push
pop
cmp
jl
imul
and
sbb
jp
fsubl
addr16
or
xchg
cli
fs
add
xchg
imul
jecxz
cvtpi2ps
out
clc
mov
sub
pop
push
and
mov
pop
fnstsw
mov
xchg
loop
hlt
adc
xchg
add
xchg
or
jg
test
dec
and
clc
sub
aad
xlat
int3
add
stos
xor
dec
outsl
push
mov
cmc
sub
lods
mov
cmpb
pusha
xlat
xchg
popf
sub
arpl
dec
outsb
xor
mov
enter
imul
xor
push
sbb
movsl
decl
mov
push
aam
xchg
insb
idivb
sbb
dec
dec
dec
adc
and
mov
enter
loop
sti
push
lahf
test
add
jge
add
mov
xor
adc
adc
adc
push
dec
movsl
pop
dec
xchg
ds
test
out
jno
cmp
cmp
fsubl
mov
dec
lret
sub
jg
nop
fidivl
icebp
pop
mov
ss
in
mov
lods
jo
ret
dec
xor
xchg
cs
pop
mov
fcmovnb
inc
jmp
test
loopne
scas
dec
mov
jecxz
xor
shll
ffreep
adc
cmp
mov
push
push
adc
push
mov
xor
iret
outsb
add
push
or
shll
mov
loope
jl
pop
or
clc
xor
push
jmp
jp
xchg
in
inc
frstor
ljmp
icebp
arpl
push
adc
int3
xchg
and
loope
enter
nop
pushf
lea
cmpsb
inc
push
adc
mov
repz
push
sub
shr
xlat
push
popf
adc
andb
dec
jae
pop
jne
mov
adc
pushf
aas
mov
roll
lods
push
in
repnz
nop
jg
vcvtsi2ssl
fcmovnbe
mov
cld
jae
hlt
mov
adc
add
mov
insl
inc
push
adc
gs
mov
mov
adc
js
pop
xor
test
loop
pop
gs
dec
dec
add
fsubrs
lds
push
add
jns
pop
and
push
and
outsb
adc
or
ret
scas
mov
insl
popa
or
and
dec
cwtl
mov
icebp
and
clc
sub
xlat
jae
rorl
xor
mov
xchg
sub
push
mov
outsl
sbb
pop
and
loopne
or
pusha
mov
inc
scas
sbb
stos
in
int
out
add
mov
sbb
pop
push
imul
push
mov
push
jecxz
cmpsb
std
adc
pusha
and
subb
loope
lret
xchg
add
cld
jbe
xor
xor
movl
push
leave
int3
insl
xor
lods
xor
push
mov
lsl
fidivrs
mov
pusha
pop
push
jl
iret
cltd
mov
loop
inc
sbb
adc
movntps
push
or
test
iret
movsb
test
xor
cmp
iret
sbb
push
xchg
inc
xor
cli
movsl
push
pop
xchg
jbe
push
dec
addr16
mov
xor
outsb
int3
jo
jne
jg
push
pop
insb
lret
popf
pop
fists
roll
cltd
push
ficompl
dec
add
mov
ja
fst
stos
mov
push
idivl
and
cmp
fwait
mov
add
mov
cmpsl
jo
or
and
mov
adc
mov
cmp
sbb
out
adc
jge
test
mov
or
fimuls
inc
jbe
jo
scas
stos
sbb
cmp
imul
shr
lcall
lahf
push
cmpsl
mov
ror
pop
js
cmpl
fs
rorb
in
rorl
imul
xchg
adc
cltd
aas
mov
aaa
dec
push
xlat
cmp
mov
mov
sbb
loop
adc
pushf
mov
dec
or
add
aad
or
sbb
lahf
shrl
aas
add
int3
leave
sub
mov
rcrl
push
outsl
sbbl
mov
xchg
xor
pop
bound
fdivl
dec
cs
pop
iret
push
cltd
stc
lahf
mov
shrl
outsb
mov
and
add
xor
sti
or
movsl
aaa
mov
adc
mov
mov
xlat
fstpl
ljmp
cltd
inc
push
jne
nop
or
mov
xor
mov
rcr
jne
insl
add
pop
divl
sub
jae
xchg
data16
sub
jmp
cmpsl
mull
sti
cmpsb
fs
xlat
pop
sbb
sub
dec
icebp
xchg
fists
jnp
mov
push
inc
jecxz
push
push
les
and
add
xlat
in
loop
out
xlat
fldenv
pop
pop
jo
or
push
push
xchg
jp
nop
test
or
test
sbb
pop
sbb
lea
out
adc
fwait
inc
mov
insb
sbb
mov
jg
jecxz
mov
in
push
or
bnd
mov
lea
and
mov
dec
push
mov
sbb
fnstcw
lods
lock
stos
jno
loop
cmp
push
dec
scas
cld
dec
inc
aaa
stos
push
outsb
dec
ss
lret
or
inc
idivl
icebp
ja
stos
jge
add
or
out
pop
push
orl
pop
cmp
mov
inc
aam
cmc
pop
push
or
jg
lea
fldl
jae
and
jmp
ljmp
lock
or
test
push
add
pop
frstor
in
push
rcll
push
sbb
jle
mov
or
pop
dec
arpl
pushf
sub
fldenv
xchg
push
xlat
and
insb
mov
cltd
imul
xchg
xor
imul
xchg
push
faddl
xchg
cmp
repz
or
sbbl
mov
xchg
mov
call
sti
repnz
adc
popf
popf
popa
sbb
jmp
imul
mov
jg
gs
mov
mov
adc
stos
inc
adc
aaa
pop
push
dec
ja
mov
mov
in
scas
jnp
push
pop
xorb
adc
pop
push
scas
jmp
out
lods
in
mov
dec
or
cmp
inc
imul
fsub
dec
push
jp
into
je
ret
sbb
bound
into
mov
xor
and
jmp
inc
jns
dec
mov
xchg
cwtl
mov
dec
adc
mov
pop
xchg
lahf
fisubrl
cltd
push
add
test
xchg
sbb
pop
incb
test
sbb
inc
xor
dec
mov
popa
pop
movsb
or
sbb
cmp
ljmp
sbb
sbb
repz
loop
in
js
or
clc
js
push
xchg
ds
jbe
sub
je
scas
mov
mov
negl
loop
pop
xor
popa
sub
mov
out
stos
dec
rolb
xor
gs
push
push
inc
out
mov
xlat
mov
adc
pop
je
stos
add
mov
sbb
pop
ret
fwait
pop
je
add
int
mov
add
lret
jle
xchg
insb
push
sub
and
jo
sbb
and
fdivrs
mov
pop
lods
pop
push
push
adc
push
lret
into
jb
mov
scas
xor
push
mov
xchg
mov
out
xchg
inc
call
popa
pusha
test
and
push
scas
call
cwtl
gs
jle
outsl
mov
dec
sub
jae
pop
iret
push
lods
sbb
pop
mov
cli
mov
push
iret
adc
mov
outsl
cmp
sbb
mov
int
fisubrs
cmpsb
inc
dec
inc
inc
adc
jl
adc
std
jge
loope
pop
push
mov
fcomps
outsl
or
and
xchg
stc
and
bound
lods
in
leave
inc
pop
mov
jnp
ds
call
daa
sbb
lock
push
pop
mov
push
xor
dec
scas
mov
dec
lods
jno
jmp
dec
out
xchg
aas
jns
scas
or
iret
mov
push
xchg
mov
adc
lea
pop
mov
mov
cmc
jne
dec
test
xchg
push
mov
stc
xchg
xchg
jae
imul
pop
scas
mov
adc
out
xlat
cs
add
and
or
adcl
push
mulb
pop
cmp
sti
out
pop
jp
cli
pop
ss
std
dec
inc
cmpsb
inc
or
mov
xchg
xlat
outsl
jo
gs
sub
repnz
pop
sbb
das
lods
rorl
jbe
push
mov
jmp
cmp
jae
mov
sti
push
and
push
into
xchg
or
xchg
and
push
jno
mov
cmp
mov
scas
sar
fwait
sub
popa
mov
ja
mov
fdivs
jae
add
sub
imull
jecxz
mov
out
dec
inc
test
enter
xchg
and
iret
lods
jns
sarl
in
adc
not
cmp
jnp
outsl
adc
cmp
cmp
push
iret
cld
scas
scas
mov
nop
shlb
fcmovb
test
icebp
push
data16
stos
lds
jb
mov
in
std
lods
bnd
scas
dec
xor
std
in
jge
sbb
and
xchg
in
or
push
lock
adc
pushf
mov
push
pusha
lcall
jmp
add
mov
sahf
std
mov
inc
jle
ret
fs
adc
ret
lods
enter
dec
xchg
xchg
sbbl
repz
rolb
subl
dec
testl
bound
pop
mov
movsb
pop
test
pop
movb
iret
mov
fisubrl
fucomip
mov
mov
or
pop
es
mov
inc
sbb
jle
stc
xchg
shlb
ret
addr16
xchg
sbb
cwtl
and
mov
cwtl
pop
xchg
or
and
sbb
jmp
mov
mov
inc
pop
jg
push
mov
jl
dec
addl
in
std
xor
mov
lret
or
sub
popf
pop
fstpt
fimuls
xlat
ss
js
pushf
cmpsl
jne
xchg
inc
jae
xchg
mul
insb
and
and
mov
cli
outsb
and
xchg
xchg
sbb
scas
push
in
jns
test
test
or
outsl
popf
push
ss
dec
add
cmp
xor
add
add
push
out
cmpsb
aad
jmp
cmp
ss
imul
stos
inc
shl
mov
sahf
ja
xor
push
popa
sahf
clc
popa
add
gs
mov
iret
inc
and
mov
jb
cmp
fstp
icebp
in
mov
mov
xchg
out
ja
outsb
and
ffree
push
js
jge
inc
outsl
pop
xchg
aad
cmp
test
loope
mov
push
in
lret
xor
dec
push
or
adc
ljmp
mov
rolb
push
stos
rolb
jb
test
cmp
lcall
addr16
test
in
stos
test
pop
inc
dec
les
nop
sbb
inc
loop
mov
adc
ret
sbb
xorl
repnz
lods
iret
ja
lret
cmc
cmp
sbb
fiaddl
cmc
out
icebp
mov
xor
mov
sbb
cmp
sarb
arpl
add
das
pop
pop
xorl
add
sub
pop
pop
int
dec
xchg
xchg
mov
add
mov
orb
lock
loop
jmp
shlb
xor
daa
rorb
mov
ja
sbb
aam
int3
fs
popf
pop
push
push
subl
aam
movsb
mov
fsubrp
mov
leave
push
rolb
and
and
sbb
adc
mov
jl
or
or
stos
movsl
or
lahf
cmpsl
pushf
push
cwtl
mov
xor
dec
and
mov
ret
sti
add
push
add
jecxz
xlat
fstl
out
mov
or
out
pop
dec
loopne
outsb
in
negb
imulb
sub
popf
xor
push
decl
jo
rcrl
jbe
inc
cltd
leave
js
jb
clc
inc
sbb
daa
icebp
loop
clc
xchg
out
fwait
loopne
pop
cmp
inc
nop
ror
mov
es
lock
jne
mov
mov
dec
scas
xor
stos
pop
test
push
add
aam
dec
mov
jmp
mov
das
fcoml
pop
stc
jge
mov
rol
push
lret
mov
inc
mov
cmc
inc
adc
mov
gs
sub
movsl
adc
mull
bound
int3
sub
mov
dec
mov
iret
mov
jl
push
sahf
movsb
sub
or
dec
add
or
mov
cmp
mov
sar
push
and
gs
cld
xchg
int
push
mov
jmp
in
cmpsl
and
jp
push
in
cli
or
clc
pop
pop
lock
cmp
jae
jge
xchg
dec
sub
push
cmp
push
mov
mov
fscale
mov
shlb
mov
dec
sbb
sbb
jae
push
loopne
jmp
xor
mov
pusha
lret
sub
mov
jb
or
es
addr16
mov
mov
popa
lahf
add
mov
lret
rcll
push
xchg
fstpl
mov
fdivrl
or
andl
call
mov
imul
shlb
dec
test
cli
out
popl
shlb
mov
loop
mov
addr16
jle
sub
movsb
leave
dec
loopne
push
sbb
or
xor
loopne
add
test
idivb
pushf
mov
dec
test
add
shlb
or
and
or
dec
mov
ret
je
aad
inc
cmp
je
push
xchg
lods
lahf
mov
dec
cwtl
mov
into
sub
mov
fcmovnb
iret
cmp
in
ja
mov
insl
cmp
and
pop
push
imul
outsb
sub
cmp
rclb
fcomps
sahf
xchg
hlt
jle
inc
mov
mov
rolb
in
sbb
jae
frstor
inc
mov
jne
in
decl
mov
fidivl
int3
and
imul
ret
mov
repnz
mov
add
sbb
sub
pop
jecxz
jo
mov
push
imul
paddq
add
or
aaa
and
xor
push
rcrb
ficomps
mov
sbb
push
push
jl
ja
nop
cmp
jo
mov
push
cmp
push
loop
addr16
push
in
data16
fstps
lea
int
insl
shrb
xchg
ret
mov
mov
jecxz
adc
cmpsb
aam
push
dec
xchg
xor
fdivl
faddp
dec
cmp
aas
ret
bound
loop
wbinvd
xchg
add
pop
testl
and
movsb
push
inc
out
inc
and
std
jge
dec
cmp
xorb
ljmp
ljmp
std
gs
dec
xor
stos
popa
aam
int3
xchg
cmc
cmp
and
imul
mov
pop
aaa
mov
jae
es
xor
or
rcr
sub
sub
sbb
negb
push
rcrb
xchg
xchg
xchg
pop
add
or
enter
icebp
jmp
xlat
pushf
in
lea
imul
pop
imull
sbb
sbb
js
sahf
sahf
xor
jb
lea
sbb
int
jp
fimuls
xchg
loope
in
xor
xchg
mov
push
or
jg
sbb
mov
int
xor
pop
and
dec
or
jl
outsl
add
xchg
ss
xchg
xor
ret
arpl
popa
mov
cltd
xor
mov
rcl
loope
push
roll
sarl
subps
cli
fsts
hlt
nop
loope
jb
push
insl
inc
repnz
pop
mov
call
pop
pop
sub
inc
testl
hlt
out
mov
insl
loop
imul
lods
cli
sti
and
mov
scas
mov
lcall
shrd
add
call
xor
cltd
movb
je
jmp
ret
test
cwtl
in
test
clc
push
inc
cmc
xrelease
imul
xor
push
ss
mov
sbb
sahf
and
pop
ljmp
cmp
insl
lahf
shlb
mov
in
mov
lds
ds
inc
adc
arpl
scas
push
mov
xchg
xor
push
pop
pop
mov
out
rcrb
adc
dec
push
bound
sub
add
in
mov
push
int
sub
hlt
roll
lret
cmp
or
test
jecxz
mov
mov
icebp
in
jmp
lret
xchg
sub
sub
test
lods
loopne
jg
popa
lahf
dec
arpl
mov
hlt
ror
rclb
aaa
cmpsl
cltd
aas
movsb
adc
mov
movl
push
std
jecxz
rcl
inc
dec
pop
mov
shll
adc
int3
hlt
sub
xchg
hlt
hlt
sti
adc
jno
mov
movsl
push
and
es
dec
lret
divl
enter
sub
or
jg
jb
xlat
cli
mov
mov
mov
cld
aas
cmpl
push
mov
int
roll
xchg
mov
insb
imull
push
int
sahf
lods
cmc
jecxz
aam
or
push
insb
lea
mov
and
pop
xor
dec
call
add
jae
mov
ret
aas
dec
push
inc
cmp
xchg
stc
xchg
jecxz
in
jns
or
xchg
xchg
ljmp
add
stc
jno
popl
aaa
mov
lock
arpl
fdivrs
jmp
xchg
sbb
out
in
lods
lret
nop
cmpsl
test
lret
dec
cwtl
js
pushf
shlb
shll
and
out
xchg
bnd
pop
add
mov
aad
pop
mov
rolb
nop
popa
add
repnz
aaa
pop
nop
data16
jl
aas
mov
mov
insb
push
scas
dec
test
int
test
push
sarb
inc
mov
dec
mov
int
mov
inc
inc
aad
loope
xor
sahf
sub
sti
mov
std
jle
fwait
sti
xor
mov
das
xchg
sub
add
clc
ja
test
ret
stc
fdivrs
inc
and
mov
icebp
fadds
mov
sub
in
xchg
mov
pushf
adc
stos
rcrl
jmp
jbe
ret
pushf
xor
insl
jl
int3
mov
pop
dec
into
repz
jns
cmp
cmp
push
imulb
popa
jge
test
pop
popa
add
push
lods
out
push
mov
aas
cwtl
or
ror
mov
add
xchg
mov
imul
sarb
jno
test
add
rorb
lret
aad
cmp
push
inc
insb
inc
inc
andl
mov
push
mov
sbb
mov
dec
nop
sub
into
fldl
test
adc
idiv
andb
arpl
lock
fisubl
mov
sub
fmulp
lods
loop
xchg
inc
js
in
mov
gs
mov
aad
push
mov
xchg
push
lea
jne
rclb
stos
xchg
in
mov
fnsave
adc
out
push
in
cmp
mov
daa
je
ljmp
les
stc
subl
cli
cwtl
adc
inc
in
imul
aas
shrb
ss
mov
mov
push
out
hlt
gs
adc
xlat
jecxz
mov
inc
sub
cwtl
mov
cmp
push
sub
andl
test
les
push
fmulp
cmp
cmp
cmp
xchg
xlat
mov
jb
into
sahf
popl
mov
mov
dec
xchg
inc
ret
addl
das
bound
sti
jb
mov
pushf
iret
pusha
test
mov
mov
daa
fs
pop
jae
std
jl
pop
sub
cltd
les
cmpl
and
xor
cmpsl
mov
mov
aas
aas
and
jb
into
jl
shlb
jo
lea
push
ja
inc
cmp
push
cmpsb
sbb
adc
add
mov
push
test
or
lods
fsub
or
push
or
xchg
jae
outsb
sub
push
cld
add
inc
push
mov
pop
and
ja
mov
out
inc
inc
xlat
enter
xor
bound
mov
int3
cli
mov
hlt
iret
flds
js
jl
and
ficoml
inc
sub
cmp
popf
imul
add
ja
mov
arpl
push
out
cli
ret
js
and
dec
xchg
dec
punpcklwd
jl
add
jle
lock
pop
lea
adc
xchg
cmp
mov
push
adc
push
bound
test
cmp
xchg
xchg
xchg
fidivrl
pop
pop
pusha
leave
fidivrs
pop
repz
outsl
mov
fisubrs
xchg
dec
or
cs
mov
sbb
mov
cltd
jecxz
sbb
rolb
sbb
mov
fdivrp
add
push
mov
and
sub
sti
ljmp
out
xchg
inc
xor
xlat
int3
inc
shrl
xchg
repz
sbb
jno
repz
je
xor
dec
fbstp
mov
xchg
testb
push
std
cli
push
out
popa
add
les
and
cmp
insl
push
inc
adc
cli
shl
in
push
ficoml
push
pop
pop
and
in
pop
mov
mov
mov
fs
outsb
xor
and
mov
cmp
out
dec
push
pop
in
ljmp
sub
cmc
mov
pushl
add
mov
mov
push
out
les
sbb
push
loopne
and
scas
adc
xor
ljmp
xchg
loope
jae
je
mov
in
and
inc
xor
es
je
lcall
and
pop
pop
pushf
je
pushf
push
pop
push
test
pop
sahf
fs
frstor
mov
mov
pop
aas
aam
test
repnz
cmp
pusha
push
repnz
stc
movsb
icebp
jecxz
inc
cs
lcall
ljmp
xlat
or
pusha
pop
pop
add
cs
in
and
push
call
int
lock
dec
cwtl
std
lcall
int3
movsb
cmp
inc
push
jp
inc
mov
stos
sub
fxch
ja
fisttps
jb
scas
mov
and
daa
adc
fisttps
mov
lods
mov
mov
arpl
pop
lock
mov
jl
jae
xor
adc
dec
sbb
push
dec
imul
in
sub
icebp
out
js
rclb
mov
cli
loopne
das
inc
inc
dec
inc
pop
pop
pop
cld
clc
mov
push
fcom
inc
dec
lahf
cmp
out
xchg
mov
stos
sahf
dec
xchg
and
pushf
incb
jns
xchg
ret
lea
xchg
movl
stc
jne
xorl
push
xchg
fs
jns
jecxz
in
ds
aas
push
test
mov
out
sbb
cmp
stos
and
fs
cmp
xchg
lods
mov
sbb
inc
push
inc
xchg
outsb
dec
xor
int3
pop
mov
cmp
and
jg
add
mov
and
mov
fsubrl
jle
pop
add
loope
test
sbb
or
shll
xchg
ja
mov
pushl
outsb
mov
push
jnp
in
dec
cmp
mov
clc
ret
mov
ds
xchg
mov
leave
cmp
xor
xchg
push
xchg
mov
jno
mov
idivb
in
js
adc
pushf
mov
js
inc
sbb
jecxz
jb
push
inc
dec
xchg
adc
loope
sbb
sub
insb
push
enter
outsb
cmc
pop
dec
shrb
xchg
jmp
in
jmp
pop
cmp
cmp
dec
sub
je
jecxz
jo
addl
cwtl
jbe
sti
das
and
inc
je
fldcw
mov
ret
cs
add
gs
or
pop
imul
adcl
loopne
data16
pop
mov
mov
sub
xchg
push
es
mov
fwait
sbb
mov
stos
xchg
outsl
dec
or
ja
xchg
xchg
out
mov
xor
push
aad
jb
jle
loop
or
ret
dec
push
pop
xchg
mov
mov
xchg
mov
pop
jno
pop
clc
mov
out
movsb
dec
loop
jg
repz
daa
mov
lods
add
int3
pop
add
jl
fcmovnbe
push
loop
mov
sub
in
push
adc
mov
pop
fwait
push
dec
mov
pop
fdiv
popa
fsub
sub
lahf
or
rcll
aaa
mov
aaa
cltd
jns
mov
jo
fsubrl
cmpsl
dec
push
mov
xor
lea
test
jbe
repz
mov
into
jne
push
xchg
dec
dec
push
imul
mov
movsl
adc
into
dec
xchg
pop
adc
xor
fstl
ret
pop
push
mov
test
outsb
push
in
mov
insl
mov
popf
pusha
jge
jo
popa
arpl
xchg
or
cmpl
int3
dec
gs
fwait
cs
mov
cwtl
popf
leave
jbe
int3
cltd
xor
cmp
les
jl
into
pushl
push
mov
aas
xor
shrl
and
sbb
xchg
fnsave
mov
sub
es
fcomps
jbe
mov
fldl
dec
sub
cmp
mov
dec
repz
adc
and
mov
outsl
or
icebp
aad
jne
outsl
xchg
and
movsl
aaa
movsb
sbb
and
cwtl
or
dec
daa
cmpsl
xor
lds
fldpi
jmp
scas
mov
cmp
and
fdivrl
mov
push
dec
adc
or
xchg
xor
mov
idivl
mov
aas
dec
in
push
ret
sbb
ret
nop
sahf
imul
add
int3
pop
jmp
stos
mov
sbb
jecxz
shl
ret
pop
into
popaw
jbe
movsl
cltd
xchg
add
out
or
sub
shlb
in
outsb
inc
push
mov
add
lds
push
xchg
mov
cs
pop
xor
es
pop
sub
jle
insb
imul
mov
add
dec
aam
mov
jmp
test
jecxz
mov
imul
lcall
mov
outsb
mov
and
orb
dec
and
loop
inc
addr16
movl
mov
pusha
mov
stos
mov
add
pop
mov
stos
dec
testb
int3
mov
xchg
mov
enter
loopne
cmp
in
lea
test
pop
mov
ja
pusha
pop
pop
jae
xchg
xchg
clc
leave
mov
xor
shrl
test
lcall
lock
in
sub
adcb
nop
data16
call
lods
addr16
cmp
sbb
mov
out
ret
mov
xchg
test
mov
outsl
pop
xchg
ja
addr16
sbb
lret
mov
lds
mov
xor
jne
aas
lds
stc
pop
or
push
xchg
jecxz
rclb
bound
shll
in
inc
fbld
mov
pop
shll
dec
dec
dec
nop
xor
mov
shr
test
sub
mov
mov
adc
hlt
pop
xor
fnstenv
pop
loopne
xchg
sar
push
add
sub
mov
cmp
mov
mull
imul
aad
mov
test
add
imull
pop
jle
cmpsl
aaa
and
xor
rcrb
add
push
push
pop
and
ffree
out
mov
and
mov
out
test
rcrl
xchg
das
out
mov
fsubl
dec
movsl
repnz
addl
pop
ljmp
mov
cmp
push
out
sbb
pop
shrl
fisttpl
mov
adc
aad
stos
rclb
bound
out
cmp
adc
popf
cmp
popf
repnz
cmp
and
sub
in
outsl
insl
aaa
stos
popa
xor
jnp
jo
leave
outsl
xchg
adc
cmp
int3
mov
lret
xlat
jmp
fldt
movsb
lods
add
cltd
loop
add
xchg
inc
jp
les
pusha
sub
xchg
and
arpl
ljmp
sbb
les
push
test
adc
addl
pop
or
insl
xlat
mov
xchg
xor
lock
or
add
aad
or
pop
or
pop
lds
mov
arpl
imul
aad
mov
inc
and
dec
mov
cwtl
add
fadd
push
mov
sub
jle
sub
stos
bnd
stc
jb
sbb
jl
and
or
cmp
out
std
add
aas
gs
popa
scas
lret
dec
faddp
jae
cmp
ret
dec
mov
mov
lret
pop
aaa
mull
pop
mov
xchg
inc
rclb
pop
mov
subl
xchg
push
mov
jo
xchg
mov
hlt
inc
or
xlat
gs
sub
mov
sbb
cmc
int
mov
outsl
in
neg
lcall
jo
adc
inc
cli
or
rol
jo
and
test
xor
add
rclb
or
sbb
out
test
mov
mov
adc
pop
loopne
xor
add
lock
shl
jo
in
and
jle
dec
std
mov
bound
add
callw
in
cs
lahf
movsb
jmp
add
sbb
inc
adc
or
mov
or
and
jae
sbb
jae
add
lock
cmc
adc
push
add
adc
cmp
push
stos
repnz
push
and
xchg
lret
jle
lcall
icebp
leave
cmc
imul
sbb
je
cld
fucomi
shrb
xchg
mov
pop
out
scas
stos
mov
icebp
repnz
xchg
cmp
rorl
in
pop
push
clc
in
pop
fimull
aaa
sbb
mov
mov
pop
cltd
add
adc
sbbb
in
mov
push
js
adc
lret
pop
mov
sbb
movl
pop
enter
iret
mov
mov
jge
rorb
outsb
cld
outsl
ret
insb
mov
jge
mov
dec
cmc
mov
mov
daa
out
sbb
pop
jb
mov
fs
call
test
dec
mov
mov
inc
mov
xchg
stos
or
sbb
xor
sub
iret
xor
scas
jae
mov
clc
icebp
and
cmp
adc
aam
push
or
jg
inc
add
repz
or
test
mov
xor
shll
test
mov
adc
aas
fisttpll
inc
sbb
xor
xor
add
sbb
jnp
mov
iret
mov
pop
xchg
in
jg
aaa
cmp
lods
push
jns
loopne
pop
jecxz
lods
int
fmuls
pop
mov
add
jp
push
lock
mov
pop
cmpsl
xchg
loop
fimull
pop
jae
adc
outsb
jmp
dec
and
mov
decb
movsb
push
ss
sbb
fnstcw
pop
mov
push
sub
shrl
mov
pop
pop
in
mov
xchg
push
xor
push
scas
xchg
shrb
adcl
push
xchg
and
mov
push
lods
popf
outsb
jno
std
loope
dec
push
push
pop
shll
push
adc
mov
pusha
mov
fildll
and
nop
mov
sarb
or
mov
and
repnz
std
and
test
or
cld
jecxz
xor
popa
jg
mov
cmp
pusha
jp
push
pop
cmp
scas
dec
push
ljmp
or
sub
in
out
mov
adcl
ja
test
dec
das
push
ljmp
imul
or
lds
imul
pop
cli
mov
iret
inc
lret
xchg
xor
push
fisubrl
test
inc
sbb
adc
cmc
xchg
rcrl
mov
fimuls
outsb
lahf
icebp
inc
daa
or
adc
cwtl
pop
nop
or
mov
mov
push
mov
imul
xor
cmp
adc
mov
sbb
aaa
shr
mov
inc
add
pop
fwait
jp
das
pop
out
lahf
std
mov
inc
outsl
bound
cltd
dec
shlb
stos
cwtl
dec
shl
data16
and
stc
xchg
filds
daa
add
fistpl
popf
pop
mov
pushf
rol
fwait
mov
arpl
decl
xor
mov
cmpsl
xor
xchg
rcrb
dec
xor
lret
push
mov
cmp
into
jmp
negl
mov
mov
sbb
or
nop
iret
scas
jle
pop
sbb
push
xchg
fucom
cmp
lret
inc
pop
orb
sub
or
mov
push
cmpsb
xchg
test
movsl
pop
dec
mov
lock
ret
mov
pusha
mov
cmp
insb
cmp
pushf
pop
outsl
inc
or
dec
ficoml
lret
fcomps
movsb
push
pop
mov
xchg
mov
mov
fdivl
in
int3
jecxz
jmp
rcll
mov
push
sbb
jae
scas
xchg
popa
or
dec
push
pop
xchg
dec
or
sub
add
mov
mov
pop
pop
lcall
dec
dec
inc
mov
ljmp
xor
adc
add
xor
add
andl
js
das
setle
fistpl
or
mov
push
aas
pushf
daa
sub
sbb
lods
sbb
test
cmp
andb
dec
inc
insl
decl
js
shlb
push
sbb
inc
test
xor
or
sbb
xchg
test
gs
fstps
out
sbb
mov
fcomps
xlat
mov
push
cmp
ljmp
rcrl
out
aad
push
sub
xor
repz
jmp
and
stos
pop
inc
cmp
aas
leave
push
push
adc
fstpt
jle
xchg
jl
mov
mov
pop
mov
add
clc
in
xor
lods
add
dec
adcl
leave
inc
push
add
and
insl
in
or
cmp
int3
js,pt
pop
xor
lds
cli
sub
je
push
push
adc
inc
test
in
lret
lret
test
sbb
leave
push
xor
lret
mov
inc
clc
mov
mov
fimuls
loope
add
push
lods
insl
mov
cmp
dec
push
repz
andb
jp
and
adc
in
fdivrl
popf
int3
shlb
push
push
xchg
or
sub
jl
and
jb
inc
mov
dec
ret
jo
outsl
xchg
mov
sbbl
shl
fsubrs
xchg
loope
je
jae
xchg
pop
addr16
mov
test
push
mov
xchg
ret
jl
inc
test
xchg
pop
insb
mov
loopne
in
nop
gs
or
or
adc
add
sbb
sub
movsl
cld
loope
jge
lahf
add
xchg
push
loope
sti
xor
mov
pop
cltd
pop
loop
sbb
lret
dec
push
cld
sbb
test
cli
lods
fldl
add
and
mov
stos
mov
or
push
cmc
int
pop
xchg
sbb
cmp
pop
and
or
je
or
dec
mov
push
or
ret
lds
aaa
xchg
test
adc
xchg
repnz
add
mov
and
loope
sub
ds
loope
outsl
xor
lcall
inc
fcmovnb
stc
lods
fld
jge
jnp
mov
je
push
sub
push
inc
xchg
mov
pop
ja
aad
push
test
xlat
xchg
enter
les
push
mov
aad
loope
pop
cmpsb
mov
dec
out
stc
mov
stos
adc
mov
xchg
xor
mov
cmp
mov
cmpl
dec
jae
mov
sub
and
popf
adc
and
movsl
pop
es
mov
mov
pop
bound
test
push
leave
cmpsl
mov
jne
or
push
cmp
push
fwait
mov
cld
dec
jo
imul
nop
fisubrs
mov
aas
cmp
or
out
push
jnp
rorl
sbb
imul
outsl
mov
test
addb
aas
lcall
pusha
push
pop
push
retw
inc
mov
stos
fwait
insb
shrb
nop
mov
dec
jno
scas
in
jmp
subb
es
add
pop
jnp
jg
push
or
shrb
lcall
or
loop
lods
mov
sub
rclb
or
enter
and
cmp
call
push
hlt
or
dec
inc
in
data16
adc
fs
xchg
dec
cmp
mov
fcoml
add
jmp
cmpsb
aad
test
ss
sbb
int3
ret
push
jle
cld
sbb
add
lds
sub
cmpb
cmc
mov
fildll
or
fsubr
mov
adc
andl
jmp
stos
adc
fsubl
test
testb
scas
lods
out
xor
mov
jb
adc
out
test
or
popf
and
ss
dec
adc
bound
aas
mov
aas
jns
push
test
cmpsb
fstpt
bound
fsubrp
jmp
subb
sarb
test
daa
mov
lock
test
cltd
ljmp
jnp
or
stos
xor
imul
pop
xchg
notl
sbb
outsb
pop
mov
fld
int3
sub
xor
pop
inc
or
xor
subl
cmpsb
mov
inc
std
iret
push
pop
push
xchg
and
adc
lods
jl
loop
lahf
int
dec
cmpsb
xchg
and
dec
ss
popa
cmp
faddl
pop
movsb
je
pushf
cmp
jp
cmpsl
pusha
pop
cwtl
inc
add
aad
cmp
push
inc
sub
addr16
repnz
xor
jge
scas
fisubrl
and
inc
lret
xor
mov
loope
sub
int
push
ficomps
stos
mov
and
popa
push
sbb
inc
and
xlat
mov
xor
mov
rcrb
in
xchg
popf
dec
loopne
jecxz
dec
int3
or
push
push
add
pop
imul
inc
mov
xchg
in
cmpsl
pop
fwait
add
mov
cmpsl
stc
adc
dec
inc
mov
stos
lret
divb
pop
push
mov
jnp
inc
mov
sub
lahf
icebp
je
sti
fs
rorb
and
inc
out
movsb
jmp
add
movsb
mov
repnz
adc
jecxz
ja
adc
inc
push
sbb
mov
mov
mov
scas
jl
stos
dec
ficoml
jge
ret
xor
imul
mov
cltd
xor
or
xor
mov
lock
or
adc
inc
xchg
push
ljmp
leave
adcb
mov
std
mov
xchg
mov
lock
dec
mov
rcrl
aaa
inc
shr
sub
ret
ljmp
lret
mov
rclb
inc
push
push
xchg
out
sbb
into
daa
data16
and
pop
adc
mov
sbb
loope
inc
orb
adc
and
mov
out
jns
nop
rcrl
mov
iret
ret
sbb
xor
jle
xchg
gs
cwtl
outsb
rcrb
xchg
adc
mov
inc
les
push
leave
movsb
adc
gs
nop
lock
mov
pop
mov
xor
mov
shll
fs
ss
adc
dec
lret
cmc
mov
mov
xor
cltd
dec
mov
ss
push
xor
sbb
jns
pop
lcall
pop
test
das
test
loopnew
mov
inc
mov
ret
mov
xchg
data16
aas
ja
lcall
cs
or
fcompl
cltd
sub
sbb
in
hlt
cmp
pop
pop
xor
jns
ret
ret
pop
sub
push
mov
mov
loope
pushf
push
je
inc
hlt
and
stos
fwait
loop
cmp
push
mov
push
es
mov
int
nop
out
add
jnp
shlb
fisubrs
addl
divl
in
mov
mov
insl
dec
jae
pop
pop
fmul
mov
cwtl
add
sub
inc
pop
in
sub
mov
cmp
jbe
lods
mov
stos
arpl
je
jg
outsb
inc
sahf
gs
fbld
enter
mov
add
std
lcall
gs
adc
add
test
lcall
pop
pop
sbb
pop
fidivl
js
mov
inc
inc
jnp
mov
fmull
fisubs
subl
pop
dec
mov
mov
mov
leave
ret
dec
and
jns
mov
cmp
sbb
fimuls
cmpsb
int
xor
or
fcomps
xchg
xchg
mov
es
hlt
imul
mov
mov
popf
rcrl
lods
xorb
gs
lret
mov
cwtl
mov
pop
scas
inc
adc
sub
cmp
nop
ficoml
fstps
out
imul
xlat
in
and
or
ficompl
sbb
lahf
fisubs
adc
enter
lret
or
jne
pushf
insb
sbb
push
mov
push
jl
loop
fdivrl
adc
mov
pop
or
loopne
push
lods
mov
outsl
pushf
xor
mov
mov
xor
fnsave
sub
shll
stos
pop
cmp
in
gs
out
testb
fucomp
or
jne
sub
jne
arpl
sbb
movsb
cmp
in
jb
jns
aaa
std
dec
clc
out
add
bswap
pop
mov
adc
mov
jo
inc
mov
les
les
js
mov
roll
inc
in
pop
call
fcmovu
jg
xchg
or
imul
ret
mov
xor
xchg
call
cmp
filds
inc
push
jmp
andb
pop
fbld
in
arpl
movsl
dec
loop
int
ret
ss
cmc
add
movsl
or
out
sub
fcmovne
popl
rcr
sub
lods
cwtl
adc
sbb
mov
lret
mov
cs
mov
enter
lds
pop
push
imul
idivl
sub
incl
pop
cli
loope
cmpsb
mov
jmp
mov
add
pop
clc
sbb
lock
shl
push
lods
pop
mov
dec
dec
cmc
loope
jno
pop
imul
mov
inc
mov
xor
aam
pop
inc
inc
insl
add
es
mov
adc
cmp
test
pushf
pop
test
out
mov
pop
sbb
ret
cmpsl
xor
test
mov
sbb
clc
cmp
mov
pop
stc
icebp
or
pop
fwait
add
add
mov
mov
xchg
xchg
and
scas
pop
les
cmp
sbb
and
scas
inc
sbb
push
sbb
aaa
test
movsb
add
add
push
pop
aaa
push
clc
sub
push
push
int
sub
mov
out
lock
popl
std
les
mov
lret
fwait
mov
jae
add
in
jle
sub
dec
ficoml
xor
ficoml
pushf
insl
shll
in
jl
adc
fwait
adc
xchg
jb
sub
lcall
sub
add
or
mov
xlat
inc
sti
mov
lods
adc
pushf
inc
cmc
repz
xlat
stos
sbb
dec
icebp
out
jp
out
xchg
ret
lcall
ljmp
mov
imul
push
mov
mov
mov
mov
inc
mov
je
or
mov
jnp
bound
or
or
jnp
ja
stc
je
gs
jbe
sub
sub
dec
sub
and
mov
or
and
mov
mov
je
pop
cmp
fdivl
rcll
jecxz
or
lods
sbb
imul
in
mov
xchg
insb
inc
sub
jmp
aam
in
mov
sbb
gs
out
mov
shl
pop
push
dec
mov
add
or
and
or
xor
sub
pop
into
mov
sbb
repnz
repz
push
outsl
cmpsb
jne
lret
int3
loop
addb
mov
dec
or
inc
into
out
sti
stos
sbb
clc
rcll
in
hlt
rolb
scas
stos
sub
fmull
sub
int3
punpcklwd
pusha
and
out
mov
imul
lcall
aaa
repz
in
xor
mov
sub
orb
ret
sbb
xor
cli
mov
lds
scas
dec
rcll
loopne
insl
sbb
pop
pop
mov
adc
es
test
inc
lcall
std
cmpb
dec
int
fists
out
mov
daa
das
lds
xor
lea
xlat
cmpsb
push
dec
fidivl
add
sar
push
nop
add
outsb
fadds
iret
push
loopne
arpl
push
push
push
mul
imul
fcmovnb
mov
or
ss
push
pop
fwait
dec
or
lret
mov
mov
xlat
or
and
mov
stos
mov
jmp
clc
fsubl
orb
loope
fisttps
dec
popf
pop
push
das
pop
imul
and
xchg
ljmp
cld
aam
insl
adc
mov
push
into
add
push
bound
xor
push
mov
test
mov
xchg
push
sarb
push
mov
lret
and
jle
mov
jp
nop
pop
adc
stos
sbb
fucom
scas
and
or
clc
sarl
sbb
scas
jno
xchg
sahf
xlat
mov
icebp
sti
add
mov
insb
xor
rcrl
push
ds
insb
ljmp
xchg
outsl
lods
mov
pop
into
in
or
xor
rolb
aas
inc
mov
pop
mov
loopne
jns
outsl
fisttpl
out
lahf
in
divb
add
aaa
dec
pop
xchg
or
imul
push
pop
jge
dec
insl
movsb
aam
jge
jae
test
sbb
and
fs
stc
outsb
pop
lcall
dec
fwait
dec
sub
add
pop
movsl
clc
mov
inc
jns
xchg
outsl
jmp
dec
std
mov
mov
cmc
xor
and
mov
lods
sub
call
push
movsl
adc
and
test
sub
mov
add
add
xor
xchg
in
mov
mov
inc
xorb
jae
testl
aad
mov
loopne
sub
out
dec
mov
pop
fmuls
xor
xor
xchg
adc
test
sbb
and
sbb
add
gs
cld
cwtl
fistl
mov
push
jg
jbe
push
jle
xchg
xchg
xor
mov
scas
push
push
add
or
xor
loop
push
mov
lret
std
jno
xor
imul
ss
sbb
fcoms
or
pop
inc
pop
jno
pop
lcall
xor
repnz
and
aas
and
jg
faddl
sub
mov
dec
and
inc
xor
outsb
ficompl
mov
xchg
push
adc
cli
mov
xor
lret
nop
cmp
mov
sub
notl
push
xchg
repz
insb
sbb
out
rcrb
xlat
iret
movsl
jno
xchg
xor
sub
sti
out
push
dec
dec
fsubl
sbb
xor
fucomp
cmp
inc
xor
arpl
cmpsl
outsl
mov
test
pop
repz
adcl
repnz
shlb
shrb
mov
pop
out
movsb
inc
push
or
mov
repnz
out
adc
pop
test
rorb
jno
sub
add
xchg
xchg
loop
test
mov
insb
fcmove
push
mov
cmp
outsb
mov
push
pop
cmp
rolb
pop
push
mov
jns
scas
xorl
cli
pop
add
jecxz
inc
push
ds
mov
or
into
imul
pop
sbb
sub
and
imul
sti
movsl
mov
and
xchg
cmp
cmpsb
cmc
dec
loope
nop
dec
lret
fcompl
mov
gs
mov
lret
cmc
push
jmp
and
scas
and
mov
push
fistps
fdivl
sbb
popf
testb
shrb
xchg
mov
dec
lcall
pop
sub
or
cmp
xchg
shl
sub
adc
cld
jne
and
ds
jo
add
adc
ret
add
dec
inc
pop
lcall
mov
add
je
data16
lcall
sarl
and
or
xchg
push
jecxz
jg
movsl
outsb
jl
fsub
fwait
adc
pop
mov
add
cmp
and
insl
movsb
daa
jbe
shrb
out
call
push
add
push
add
mov
das
lahf
or
dec
cltd
mov
cmc
dec
sub
daa
cld
lods
xchg
push
fucomip
sbb
out
jns
data16
pushf
or
scas
inc
xchg
dec
iret
ss
push
fisttpll
sbbl
cmc
out
cltd
addb
mov
inc
mov
dec
mov
ret
jb
out
sbb
mov
out
inc
imul
jae
inc
cmp
pop
xor
cmp
icebp
imul
jecxz
mov
inc
sub
sub
test
pop
mov
xlat
fwait
jne
jmp
clc
rolb
adc
pop
or
lret
xor
int
enter
push
sti
or
cli
sub
out
icebp
out
push
sub
icebp
jp
call
sbb
or
pop
pop
movsb
fdivrl
push
cmc
push
out
lods
movsl
cli
fwait
pop
and
testb
arpl
mov
xchg
into
fdivrs
les
pushf
pushf
mov
cld
or
jno
in
jmp
sbb
push
cmp
pushf
and
add
mov
psrld
dec
fmul
addr16
movsb
fadd
cmp
push
mov
leave
mov
dec
sub
or
pop
xchg
mov
test
xor
leave
inc
xchg
mov
push
aam
jno
mov
sub
sti
or
stos
push
insl
ss
pop
xor
push
cltd
and
andb
jecxz
lcall
cmc
jno
lds
xchg
cltd
std
lods
push
insb
or
cmp
sti
in
or
fnop
jns
sbb
cmc
cmp
or
mov
repz
incl
rcrb
xor
pop
push
lret
minps
mov
gs
shll
or
adc
out
loop
xchg
xchg
sbb
sbb
adc
clc
jb
sub
push
pop
gs
xchg
rclb
repz
jnp
ds
vsqrtpd
xchg
rcll
adc
and
arpl
cs
lret
cmp
cmp
pop
jle
mov
adc
inc
add
ret
or
int
push
add
xor
inc
ret
leave
ss
mov
xor
pop
push
dec
aam
sub
cmp
xlat
add
xchg
stos
lcall
outsb
and
jmp
add
and
push
lret
adc
ja
mov
fadds
sbb
inc
mov
out
mov
jmp
jae
add
scas
xchg
jge
mov
push
inc
lret
push
pop
dec
fwait
xor
push
lahf
int
push
lret
sysexit
bound
sbb
sbb
jge
notb
in
xor
and
not
sub
popa
ds
dec
inc
pop
jno
imul
les
lret
sbbb
mov
fucomip
out
cmp
les
pop
ret
shl
adc
int3
inc
insl
pop
in
push
das
and
mov
outsb
xor
or
cmp
popa
fildll
out
jmp
cmp
fisubrl
mov
mov
inc
xchg
leave
mov
popf
push
mov
xor
in
shlb
cwtl
data16
mov
adc
xchg
mov
lcall
mov
push
into
fldenv
push
xchg
movl
push
fsubr
shrw
out
pop
sbb
add
mov
xor
je
sbb
cmp
jae
jp
xor
mov
es
fdivrl
std
es
inc
jmp
out
leave
fnstenv
and
out
inc
sub
sub
sbb
inc
xor
jo
stos
mov
mov
pop
jbe
mov
hlt
adc
cmc
inc
int
pop
and
and
mov
jecxz
inc
insl
cmp
scas
mov
enter
cmp
cltd
lret
add
sti
fdivl
inc
xlat
ss
or
ret
push
sub
sub
cltd
cmp
mov
into
mov
push
in
fisubs
and
cld
mov
push
push
sbb
vcvtps2dq
add
cmpsb
imul
nop
jbe
push
xchg
mulb
mov
dec
mov
imul
push
cmpxchg
or
in
repz
adc
pop
mov
in
pop
dec
mov
sbb
pushf
push
or
outsb
in
shlb
test
lods
outsl
fbstp
pop
jmp
repz
in
add
push
push
mov
cli
mov
int
push
mov
outsl
stc
xor
mov
icebp
in
add
mov
or
stos
push
sub
imul
xorl
aaa
pushf
repz
incl
outsb
jp
movsl
pop
cld
and
cmpsb
cmpsb
sbb
fcompl
test
out
push
add
push
nop
stos
mov
push
pushf
and
in
jmp
sub
sbb
ljmp
or
mov
ftst
sub
enter
sbb
fisttps
adc
andb
insl
add
cmp
andb
bound
adc
ljmp
outsb
iret
mov
hlt
loop
lcall
mov
and
mov
stos
mov
out
out
int3
pop
in
leave
pop
jl
inc
xor
jg
repz
sbb
pusha
sbb
nop
xor
dec
and
jns
xchg
mov
out
push
lods
outsb
push
iret
mov
das
or
mov
popa
in
repz
mov
mov
add
add
repz
mov
cmc
movsl
imul
and
and
mov
cmp
es
sub
add
jnp
mov
adc
sub
cmp
ss
das
dec
cltd
leave
into
rorl
pop
std
fwait
jns
mov
cmp
icebp
das
clc
dec
mov
imul
pushf
out
push
inc
add
and
sub
test
ds
add
adc
insl
lret
push
movsb
dec
popa
dec
cs
fadd
mov
add
inc
lret
inc
pop
sub
ret
fs
inc
mov
add
cli
icebp
imul
xchg
sub
loope
mov
push
lods
pop
fwait
mov
xor
fcoms
jl
inc
pop
push
icebp
iret
lret
ljmp
sar
xor
mov
adc
cwtl
dec
jecxz
pop
xor
sub
inc
lock
mov
imul
push
ss
mov
out
add
insl
cmpsl
aas
pop
xor
fisttpll
shr
fwait
mov
jo
sahf
adc
and
sub
jno
popf
and
push
fsts
cld
mov
imul
movsb
adc
jbe
xchg
leave
aam
nop
push
test
pushf
sbb
sbb
movsb
adc
lock
mov
jb
imul
pop
lret
int
jno
dec
nop
fiaddl
xchg
insl
push
lret
mov
or
xchg
outsb
jmp
or
mov
fs
out
jg
outsl
ljmp
leave
movsb
fwait
lahf
sub
and
les
shlb
cmp
imul
lea
jb
push
or
mov
test
adcl
mov
jecxz
pop
mov
sahf
das
out
mov
inc
push
pop
rolb
dec
xchg
sahf
mov
or
push
lods
scas
adc
nop
test
mov
fimuls
mov
rcrl
mov
orb
push
imul
int3
pop
stc
test
lds
sub
dec
out
test
arpl
fadds
stos
cmpsb
xchg
aad
mov
ljmp
insl
jp
cld
das
sbb
mov
push
pop
movsb
mov
mov
cltd
or
clc
push
xchg
adc
mov
fbstp
loopne
push
mov
pop
cmp
xorl
and
xchg
imul
xchg
loope
cmp
outsl
fistps
pop
mov
mov
ss
fisttpll
pop
fmull
iret
dec
push
call
lods
sti
je
xchg
inc
mov
xor
jmp
xor
imul
mov
push
push
push
lret
sub
and
xchg
rorl
pop
je
push
sarb
cld
rclb
jecxz
fisttpll
sbb
mov
pop
sbb
sbb
and
jno
sub
pop
and
pusha
or
xor
xchg
sbb
scas
xchg
roll
lods
adcb
iret
mov
les
outsl
leave
xchg
ja
mov
fdivrs
push
pop
pop
xchg
xor
loop
mov
push
xor
popf
jmp
mov
cmp
std
mov
push
pop
es
and
adc
jae
popa
lods
or
insl
and
movsl
dec
hlt
xchg
call
and
movsb
out
shrl
cltd
divl
je
lret
jecxz
popa
push
rorl
out
nop
add
cmpsb
cmc
je
mov
pushf
and
idivb
push
jmp
mov
cmc
lcall
mov
sbb
inc
imul
dec
mov
fnstenv
dec
daa
fcoml
out
imul
sahf
or
jle
jb
sub
negb
mov
xor
dec
jle
xorl
arpl
jo
int
mov
push
xchg
mov
ret
or
mov
inc
jae
aam
jge
pop
sarl
cs
sbbl
jno
fisttpl
nop
pop
jle
push
ret
mov
shll
mov
shl
and
add
inc
pop
inc
push
out
mov
or
ret
lock
leave
in
push
in
push
jae
dec
ss
mov
inc
out
pop
mov
scas
inc
mov
pusha
jecxz
daa
mov
daa
jp
add
inc
cwtl
inc
pop
movsl
sbb
xchg
push
inc
cmpb
enter
leave
adc
in
cmovnp
icebp
sub
leave
mov
clc
push
pop
pop
push
ljmp
mov
inc
and
jge
xchg
stc
cmpsl
dec
stc
dec
cmp
adc
lahf
fidivrl
xchg
test
or
hlt
mov
leave
push
pop
lea
mov
js
ret
inc
cld
outsl
cmc
push
inc
mov
push
and
ficoml
add
addr16
xor
popf
and
add
movl
lahf
mov
jle
xchg
adc
jns
cmpb
imul
shll
push
and
sub
pop
add
cmp
sbb
xchg
int3
ja
adc
popf
ret
lds
sbb
mov
push
cli
dec
scas
jl
test
sub
inc
pop
outsl
cwtl
aas
push
jmp
testl
fistpll
dec
dec
sbb
dec
cmpsb
ds
sub
int3
cmp
jo
int
pop
mov
sub
shr
jg
xchg
jp
sub
mov
mov
xor
inc
push
dec
add
int
adc
lcall
addl
xlat
divl
mov
sbb
pop
mov
xor
cmp
sbb
jo
push
add
jl
pop
cmp
jle
inc
mov
sahf
dec
mov
loope
pop
imul
cltd
cli
mov
mov
lods
push
hlt
push
jns
insl
outsb
sbb
mul
or
or
jne
inc
out
ficoml
push
out
sub
rcr
push
mov
adc
xor
push
sbb
cmpsl
push
mov
xor
test
pop
or
adc
cwtl
inc
pop
jns
jmp
adc
es
jb
push
mov
sub
jp
ret
repnz
addl
add
aaa
and
cmp
cmp
sub
sar
dec
and
push
inc
lahf
jno
clc
decb
fcoml
mov
stc
xlat
cmp
daa
xchg
inc
cmpsl
out
add
and
pop
inc
xor
dec
lods
loope
roll
test
inc
jg
dec
mov
pusha
jbe
mov
jno
test
icebp
out
sub
mov
ds
repz
mov
lods
jecxz
or
shll
xchg
xor
dec
push
out
or
or
pop
push
rorb
mov
cwtl
je
shll
cwtl
pop
mov
rcrl
mov
adc
inc
gs
sbb
pop
arpl
push
insl
add
shrl
popl
out
scas
pop
test
and
fidivs
stos
and
and
mov
aam
fs
jecxz
dec
cmp
fcmovnu
clc
nop
mov
fwait
mov
cmp
pop
cmp
inc
ror
mov
push
iret
icebp
xor
aad
fs
imul
push
sub
fmuls
mov
pusha
addr16
pop
hlt
mov
dec
mov
jle
inc
or
jmp
loope
mov
push
push
sbb
push
jb
push
cmpsl
int3
sub
mov
jl
lods
cmp
andl
cmp
aad
and
or
or
imul
adc
dec
ror
dec
dec
xchg
movsb
js
enter
leave
inc
and
or
in
sbbb
into
cmp
shlb
jmp
mov
xor
fstpl
jnp
adc
movsl
mov
std
cmpsb
push
in
mov
xchg
outsl
fsubp
fsub
push
xchg
and
cmp
ret
cmc
ret
insl
dec
cmp
loop
xchg
fistpl
jge
ficoml
cli
push
xchg
cmpsb
test
insb
test
cs
cs
pop
mov
loopne
pop
sub
push
sbb
stos
fdivrl
pop
addb
xor
sub
jnp
icebp
pusha
cli
dec
pusha
xchg
xchg
sbbb
addr16
insl
cs
mov
dec
test
jecxz
cmpsl
push
je
sbbb
adc
fcoml
add
pop
dec
inc
lea
mov
in
data16
int3
std
jb
lods
mov
aaa
mov
pop
aaa
sbb
pop
jg
pop
or
les
pop
adc
nop
mov
loopne
lret
dec
scas
cli
pop
add
add
sbb
xchg
pop
push
xchg
jno
inc
test
in
adc
mov
outsb
loop
call
ret
dec
scas
rcrl
and
lret
fldenv
lret
mov
out
jmp
mov
jne
xchg
insb
pusha
jo
cmp
stos
pop
decb
loope
add
mov
cli
jae
inc
push
clc
in
sbb
xor
inc
int3
sbb
pop
aas
mov
or
lock
fidivrl
lods
call
pop
pop
add
out
push
jle
xchg
ja
lds
sarl
dec
xor
mov
stos
mov
cmp
sahf
and
push
int3
inc
sub
repz
roll
and
jecxz
xlat
imul
pop
cs
cld
and
fdivs
xchg
add
sub
or
jns
outsl
sbb
jno
fs
add
inc
test
cmp
pop
cmp
add
and
and
jo
cmp
mov
into
pop
inc
or
stos
mov
lods
mov
mov
push
inc
fsubrl
hlt
int
jle
xor
imul
pushf
lahf
lock
jo
cmp
pop
mov
fisttpl
cmpl
add
or
mov
pop
or
inc
jle
xchg
les
mov
sbb
mov
lds
ficompl
in
imul
aad
sbb
sbb
adcl
aam
xchg
adc
loop
sahf
mov
negb
xchg
fmuls
jno
fcomip
imul
mov
loope
jmp
sub
mov
popa
out
mov
mov
das
ljmp
aad
out
inc
inc
repnz
outsb
lds
inc
es
sbb
lods
xchg
popf
gs
outsl
jne
ljmp
mov
loope
or
shlb
push
shrb
mov
xchg
test
xchg
mov
ret
pop
cli
cmc
cmp
mov
out
cmc
cli
or
xchg
fisttpll
fwait
dec
pop
jno
inc
inc
sub
fsubl
xlat
insb
leave
sbb
leave
jne
mov
stos
out
test
mov
push
fwait
or
jae
insb
push
scas
mov
xlat
sbb
jecxz
cmp
push
inc
bound
jb
loopne
push
xchg
fcompl
mov
xor
out
mov
lret
and
cmp
push
loop
in
pop
jns
pop
orb
movsb
add
rorb
push
cmp
clc
dec
mov
adc
pop
addl
or
imul
cmpsb
sbb
rcll
in
push
js
inc
scas
inc
pop
aad
fiaddl
lds
aaa
push
inc
mov
mov
mov
addl
xchg
das
dec
es
cmpsb
fstpl
mov
subl
scas
push
xor
push
jge
sahf
mov
inc
ret
add
test
fwait
sub
push
sahf
std
pop
jl
mov
or
cmp
add
pop
lcall
lahf
in
in
movsb
mov
loope
inc
adc
jo
mov
xchg
cs
pushf
fldln2
sbb
dec
in
aaa
leave
and
jp
xlat
jmp
shrb
push
jnp
mov
test
in
jge
mov
jb
test
test
sbbl
push
inc
cli
lret
sarb
cs
sarb
stos
mov
stc
cltd
in
push
sub
cmc
popf
icebp
insb
aam
mov
adc
dec
dec
lds
jle
jnp
in
lock
mov
adc
fstl
add
iret
mov
aaa
adc
lock
aaa
inc
add
mov
mov
and
je
push
jo
jns
sbb
gs
jp
mov
inc
lock
cmp
sti
shlb
enter
orl
xor
inc
mov
enter
cmp
pop
jge
pop
adc
mov
imul
insl
cmpsb
jo
mov
loopne
xchg
mov
and
pop
inc
fsubs
scas
jp
mov
aas
or
ds
jl
call
and
jmp
jae
xor
fiaddl
fstpt
mov
cltd
xchg
jne
cmp
cmp
xlat
fsubrs
add
push
das
std
loop
jo
adc
out
adc
popa
cmp
ret
cwtl
aas
lcall
xchg
aaa
or
jmp
cmp
lret
mov
mov
into
fwait
insb
pop
cmpsl
xchg
inc
mov
scas
mov
iret
lods
sub
aad
pushf
mov
insl
loope
lahf
aad
pop
or
gs
push
gs
mov
daa
mov
dec
push
lds
mov
orb
pop
nopl
sub
bound
arpl
and
push
pop
jmp
loop
xlat
sub
cmpsl
xchg
jecxz
and
aaa
push
shll
mov
xor
pushf
ja,pn
test
xorb
fists
fxch
mov
fwait
pop
loope
mov
icebp
fcoml
mov
mov
pushf
mov
rcr
mov
out
add
test
sub
lahf
andb
out
mov
bound
outsl
test
inc
mov
mov
push
fcmovnb
lcall
dec
sbb
scas
or
mov
cmp
stc
ret
adc
mov
sti
pop
sti
repnz
mov
dec
xchg
out
es
testb
into
sbb
inc
loope
inc
arpl
xor
mov
push
data16
jmp
dec
out
push
inc
imul
aaa
or
xor
adc
fcmove
repz
repnz
pop
rolb
lods
xor
sub
push
jge
test
sbb
mov
scas
popa
or
inc
lcall
test
aam
adc
add
imul
int3
jns
cltd
mov
adc
sub
sbb
mov
adc
inc
adc
lret
cmp
mov
loop
sbb
das
cld
loop
mov
jns
xor
jg
add
sahf
mov
push
xchg
bound
dec
rcl
mov
sbb
inc
push
add
pop
dec
xchg
pop
fisttps
pop
in
imul
pop
daa
and
cmp
jmp
xor
fmuls
push
mov
cli
and
dec
mov
sbb
movsb
xor
or
cltd
cmp
insb
lods
div
push
xor
sbb
push
jle
sti
jae
rorl
icebp
push
push
pusha
cld
rcll
dec
pop
add
adc
adc
andl
out
inc
inc
lods
push
dec
jle
inc
jo
pop
push
jae
sbbl
jecxz
cmp
es
aaa
pop
mov
mov
je
xchg
xchg
cmp
mov
dec
xlat
js
pop
mov
test
mov
mov
fiaddl
ljmp
iret
scas
fcompl
out
daa
push
fistpll
add
xor
mov
mov
cmpsb
jmp
sbb
add
inc
test
mov
and
jle
icebp
lcall
loop
jp
mov
or
out
iret
or
imul
in
or
add
jne
data16
addl
sbb
or
xchg
cmp
enter
mov
data16
mov
hlt
movsl
pop
inc
insl
jne
push
pop
icebp
cwtl
mov
push
xchg
sub
pop
push
sbb
push
test
hlt
mov
cmpsl
movsb
mov
mov
fldcw
into
sbb
jb
cmpsl
push
pop
stos
xchg
jb
call
dec
and
rclb
mov
cwtl
iret
sbb
ss
sbb
add
sahf
mov
cltd
adc
rcl
sbbl
xchg
pushf
gs
cmp
out
jnp
test
stc
xor
dec
cmp
addb
roll
mov
test
out
aaa
sbb
cmp
or
mov
push
fwait
inc
fadd
sbb
sbb
adc
mov
sbb
sbb
orb
shl
pop
ret
sar
fwait
mov
in
push
in
lods
movsl
mov
std
daa
adc
jae
into
loopne
int3
sub
int3
cmp
or
fistpll
push
sub
mov
dec
cltd
scas
test
xor
dec
sti
jp
in
jno
adc
les
stos
mov
inc
dec
outsl
adc
cmp
and
and
mov
pop
cs
cwtl
in
ret
mov
in
jl
and
adc
pop
xchg
inc
xchg
fidivrl
divb
push
mov
rol
movl
mov
icebp
mov
mov
and
jl
inc
xlat
jne
fldt
jge
mov
ljmp
lcall
into
or
pop
xchg
lret
mov
int
mov
or
xchg
mov
inc
les
rcl
mov
mov
in
or
sub
sarb
outsl
pop
lcall
test
in
and
add
dec
and
cmp
cmpsb
movsb
dec
mov
jecxz
popf
push
jno
sbb
ret
cwtl
dec
xor
cmpsb
xchg
inc
xchg
fbstp
inc
pushf
mov
cmp
adc
push
sbb
dec
mov
arpl
push
enter
xor
cltd
and
in
js
test
jne
push
cmpsl
mov
pop
cmpsb
cmp
lock
lods
cmp
cmp
fdivl
divl
xor
fsubrl
xor
imul
mov
mov
mov
xchg
addr16
icebp
pop
imul
dec
aas
xchg
push
cltd
repnz
mov
mov
push
pop
mov
or
mov
cmp
in
int3
sub
push
mov
pop
adc
gs
outsl
popf
test
mov
inc
fmull
es
adc
cmp
add
lock
and
adc
pop
push
jge
sbb
pop
scas
or
xor
or
aas
add
xor
adc
mov
sub
and
adc
hlt
cmp
mov
mov
add
out
add
fwait
jae
pop
dec
test
xchg
inc
add
popf
inc
iret
adc
mov
pop
cmp
scas
inc
lret
orb
push
in
iret
mov
and
out
repz
sub
xorb
and
les
and
cld
sbb
sbb
ljmp
hlt
push
loop
push
or
popf
xor
and
inc
xor
inc
sarl
inc
add
add
fs
xchg
push
adc
insb
sarl
iret
cmp
fxch
cs
or
xchg
push
call
sti
sbb
mov
out
dec
xor
jno
sub
out
jnp
stos
xchg
imul
push
lea
pop
test
insl
stos
scas
ror
or
fwait
divl
in
xchg
dec
inc
sub
sahf
stc
addr16
aad
pop
aam
xchg
xchg
sub
mov
xchg
mov
orl
pop
jle
xor
lods
pop
jb
inc
sti
jbe
or
dec
xor
imul
and
outsl
sarb
and
adcl
jmp
inc
sbb
push
push
push
in
ret
pop
push
ret
dec
push
lds
add
pop
test
mov
sti
leave
dec
outsl
rep
xchg
insl
jl
mov
gs
nop
push
stc
or
xchg
fnstsw
cs
cwtl
pop
lret
hlt
inc
in
jecxz
roll
gs
lds
lahf
lods
xor
js
cmp
stos
cltd
push
lea
xchg
icebp
loope
imul
or
add
out
and
jmp
lea
popf
inc
roll
popa
rolb
pop
mov
jbe
xor
cmpsl
mov
mov
dec
ret
repz
xor
mov
mov
jne
fldcw
fstpt
mov
inc
divl
jp
jmp
inc
ja
idivb
js
add
lahf
aam
pop
mov
icebp
sub
xor
xor
adc
add
test
mov
mov
mov
test
push
xchg
js
lret
pop
ljmp
adc
jnp
inc
xor
xchg
loope
pop
into
or
clc
and
loop
cmp
cmp
add
loopne
inc
fisubrl
das
test
inc
jl
rcll
cwtl
out
or
cmpsb
jnp
dec
lret
mov
xchg
pop
mov
lods
xchg
adc
orl
xor
push
aas
dec
in
or
push
sti
in
notl
loop
divb
xchg
and
cli
std
push
mov
sarb
jp
inc
or
mov
jecxz
orl
leave
fidivrs
xor
xchg
or
dec
pop
ds
cmp
pop
iret
lret
inc
imul
cli
mov
call
stos
loopne
in
xchg
push
xorl
call
in
and
push
out
mov
adc
movsb
push
and
jecxz
push
or
cmp
test
ret
jg
lods
mov
sub
iret
ret
adc
pushf
sub
das
imul
sub
repnz
xchg
dec
cmp
cmpsb
fdivrl
jb
mov
pop
js
pop
cmp
add
mov
and
push
sub
xlat
fsubl
into
and
cmp
aam
jl
mov
inc
rolb
pop
sub
mov
cwtl
sti
test
or
test
ret
jno
adc
shrb
mov
in
push
mov
mov
dec
adc
adc
and
xchg
rclb
add
add
mov
cmp
add
cwtl
call
gs
adc
popa
mov
dec
in
orb
push
loop
negb
lods
stos
and
pop
das
frstor
push
roll
jnp
stos
notl
or
xchg
nop
dec
lods
scas
mov
pop
and
sbb
enter
jecxz
jns
or
mov
into
data16
xor
pop
mov
mov
stc
add
insl
sub
pop
sub
jns
or
sbb
ret
cmp
xor
and
pop
push
das
or
stos
out
xchg
mov
dec
push
and
jecxz
jo
jne
jge
daa
ss
cmp
push
xor
or
push
out
xchg
sbb
pop
xchg
cmp
pop
and
or
loope
sbb
xor
xchg
je
imul
add
test
repz
loope
je
sahf
cmp
sub
mov
cltd
rolb
out
addb
stos
push
dec
stc
and
les
jns
jge
add
sub
sbb
and
xchg
jecxz
call
xchg
adc
adc
cld
lret
push
jmp
push
enter
gs
pop
dec
icebp
out
mov
xchg
iret
mov
cmpsl
sbb
std
testb
add
sub
adc
popa
lcall
add
ljmp
mov
stos
push
jle
mov
xchg
test
stos
fadds
data16
sti
lret
arpl
jecxz
mov
mov
icebp
xlat
gs
push
inc
jnp
push
mov
and
jmp
sub
or
cmp
adc
test
pop
out
sub
aad
jle
lret
xchg
mov
repz
mov
push
jo
inc
gs
test
pop
dec
fisubrl
pop
or
test
cmp
and
filds
and
aas
ret
and
sub
xchg
in
add
mov
je
xlat
jne
dec
mov
sub
cmp
xor
add
enter
xchg
mov
xor
test
ret
daa
mov
cwtl
test
dec
lds
imulb
jae
cmp
lods
in
adc
pop
fsubs
pop
ret
inc
dec
js
cmc
xchg
mov
jo
dec
mov
jl
push
mov
xchg
imul
inc
mov
movsb
dec
cmp
fisttpll
mov
ds
mov
insb
pop
aas
gs
dec
mov
lock
or
cmpsl
adc
cmpsb
test
and
out
xchg
in
push
adc
xchg
and
dec
or
or
in
jmp
jb
mov
leave
sbb
cmp
mov
jns
int3
dec
js
jp
jb
sbb
lods
push
mov
xor
call
shrb
push
ja
cli
scas
movsl
mov
mov
stos
xchg
push
fs
and
scas
lret
iret
ja
test
imul
sub
cltd
sbb
ss
ja
jb
pop
in
clc
inc
int3
pop
out
inc
add
ds
out
push
and
sbb
pop
and
dec
adc
std
mov
std
sbb
and
movsb
lret
sarb
inc
scas
xor
pop
push
cld
stc
cmc
xchg
jge
stos
mov
jmp
mov
mov
xchg
jne
int
mov
addb
dec
std
arpl
cmpsl
ja
mov
xlat
shlb
pop
or
dec
mov
lods
sub
nop
out
insb
aas
xor
push
in
int
out
sub
dec
out
rep
push
sbb
and
mov
xor
mov
pop
mov
and
mov
mov
cs
sarl
out
out
je
nop
outsb
cmp
cmp
in
std
mov
mov
mov
dec
mov
insl
clc
sbb
sub
jle
pop
sbb
sahf
into
insl
fwait
inc
fldl
pushl
cmp
mov
hlt
push
std
xor
inc
xor
inc
leave
xchg
rol
add
les
sbbl
push
out
mov
cmp
cmp
xlat
mov
or
into
test
jp
stos
or
repnz
lock
mov
dec
lock
dec
mov
bound
sbb
sub
out
call
cld
mov
or
icebp
pop
test
stos
jle
or
jg
lods
xor
pop
btc
xchg
xor
xchg
mov
pop
aam
jle
xchg
dec
jbe
movsl
lret
add
nop
bound
repnz
add
xchg
movsb
xchg
cltd
rcll
push
fdivrs
inc
jge
sbb
add
leave
sbb
fisubrs
jb
mov
xchg
not
mov
dec
sbb
inc
push
rcrb
pop
jo
mov
xor
gs
js
xchg
mov
rcll
adc
cld
inc
adc
lds
inc
ds
fistps
cmpsb
pop
pop
nop
dec
sbb
mov
ss
lcall
cli
xchg
jmp
call
push
jae
mov
xlat
mov
cmp
mov
lcall
mov
ds
ja
dec
sti
mov
jl
test
scas
or
pop
into
outsb
pop
cmp
in
pop
rcll
jbe
dec
dec
std
and
ret
mov
fs
mov
loopne
adc
aam
dec
cli
pop
lea
add
adc
jg,pn
stos
xor
xchg
or
and
pop
or
jnp
xchg
std
repz
fcom
ja
xor
or
pop
or
jo
sahf
push
push
or
mov
sub
fsubs
not
test
imul
repz
pop
jmp
les
push
jg
mul
sub
or
cmp
mov
push
popa
orl
sub
and
mov
mov
pusha
and
leave
and
aam
and
mov
sub
add
aam
rcrl
sub
dec
xor
ret
push
lcall
mov
movntq
out
push
popf
addb
outsl
pop
mov
xchg
sbb
das
jl
dec
std
fdivs
in
sub
jne
add
add
into
sbb
inc
fisttps
mov
dec
jle
add
dec
lock
lret
sub
cli
sbb
lods
pop
fdivs
cli
out
fsubp
test
data16
jno
iret
call
call
dec
fucom
mov
pop
xlat
mov
mov
shl
enter
in
xchg
mov
or
shrb
or
dec
in
lcall
daa
mov
sbb
push
pop
inc
aad
push
mov
push
and
pop
lods
nop
jmp
adc
test
fucomi
sbb
xchg
jge
decl
mov
mov
mov
pop
dec
or
jl
push
movb
mov
or
cltd
fisttpl
je
mov
sti
jae
inc
sub
ljmp
pop
cs
shrl
xchg
nop
xor
insl
push
pop
pop
mov
leave
mov
aad
mov
mov
daa
push
adc
into
daa
fildl
das
mov
mov
movsb
daa
test
inc
adc
push
mov
out
rcr
lcall
imul
aam
cli
icebp
mov
jns
dec
addr16
insb
in
sbb
pop
dec
sahf
xchg
fcmovbe
jb
addb
push
pop
ljmp
subl
dec
ljmp
es
js
push
cmp
out
xchg
leave
stc
and
mov
mov
lret
fwait
pop
lock
or
add
dec
dec
loop
or
xchg
test
repnz
cmc
cmpsl
je,pt
adc
push
aaa
pop
notb
cmpsl
and
in
repnz
outsl
leave
aas
pop
xor
and
add
in
int3
scas
repz
in
push
xor
fisttpl
cmp
arpl
xchg
xchg
inc
jno
cwtl
jns
cwtl
out
jae
shrb
or
inc
cmpsb
cmp
xchg
push
gs
int3
or
cmp
fcmovbe
adc
mov
scas
out
pop
push
loopne
adc
lds
rolb
dec
fistpll
cld
lcall
dec
mov
shrl
jmp
push
mov
sub
sqrtps
repnz
lahf
jae
aam
mov
add
lds
add
adc
sub
sbb
xchg
pushf
jge
dec
sub
mov
mov
lcall
dec
movsb
mov
lret
aas
iret
punpckhwd
adc
cld
daa
mov
pop
inc
dec
fdivrp
lret
push
xorb
cs
in
pop
pop
aad
or
mov
push
sub
xchg
sub
xor
jge
movsb
int
mov
and
push
xor
inc
cmc
push
xchg
aaa
stos
shlb
xchg
dec
and
sarl
ljmp
inc
scas
sub
sub
inc
jno
adc
insl
aas
jecxz
mov
daa
out
nop
sub
jp
xchg
and
loope
adc
js
mov
insb
lods
mov
test
sub
pop
and
adc
xor
sub
xor
aam
pop
mov
cmc
pop
repz
push
or
dec
mov
cmp
clc
loopne
cmp
push
aad
mov
ss
imul
gs
inc
add
das
fstl
sbb
sub
aas
lret
mov
pop
xlat
jge
sbb
mov
sbb
data16
mov
inc
icebp
pushf
xchg
sbb
or
int3
pop
bswap
cmp
jle
loope
sbb
fwait
ja
sub
lock
or
jecxz
loope
dec
loope
push
imul
fisubl
fisttps
aad
rorb
adcb
in
insl
outsl
sbb
into
mov
mov
cld
sub
into
inc
sbbw
ds
hlt
sub
mov
or
pop
inc
mov
add
lods
rclb
push
outsb
lret
xlat
andb
fstpl
jge,pt
out
xorl
aad
test
incl
divl
adc
cmp
jg
mov
or
ficomps
jb
lods
les
js
push
addr16
ljmp
mov
cmpb
sub
jge
cwtl
adc
fwait
dec
mov
ss
ds
adc
mov
add
mov
mov
or
roll
mov
mov
inc
ret
xchg
aad
cmp
jbe
xchg
lcall
es
outsl
inc
out
add
jnp
xorb
mov
dec
xchg
shl
enter
sarl
xor
xor
ja
ljmp
pop
clc
imul
push
pop
andb
dec
xor
repnz
push
enter
fsts
mov
inc
lea
addb
xchg
divl
jb
or
mov
cli
movsb
jb
adc
in
loop
cs
pop
xor
pushf
ljmp
fsubp
cwtl
cmp
rcll
push
push
push
pop
inc
mov
cwtl
mov
cmp
pop
xchg
adc
lock
mov
shlb
push
jmp
adc
sub
push
or
jle
sub
std
inc
dec
lret
out
jle
adc
scas
pop
dec
or
push
jp
sub
lock
cmp
push
mov
pop
lea
cld
push
mov
inc
das
inc
out
aad
mov
dec
dec
aas
in
cmc
in
shlb
sub
out
daa
cmp
sub
out
cwtl
push
sbb
mov
ljmp
in
lods
popa
dec
adc
jno
xchg
push
push
shl
mov
cmc
add
push
push
cmp
js
mov
jmp
mov
mov
jge
cmp
daa
imul
xchg
xchg
insb
cmpsl
or
inc
add
push
xchg
fwait
fwait
jnp
test
or
xchg
gs
into
enter
mov
pop
push
cmp
push
inc
sbb
add
push
enter
mov
pusha
mov
cwtl
ret
sbb
sub
jp
sti
loopne
test
mov
fstpl
call
sbb
xor
push
test
mov
test
stos
cltd
stos
xchg
lahf
mov
pop
insl
clc
adc
or
jg
pop
dec
fadds
xchg
fmul
out
les
push
adc
mov
jnp
ljmp
outsl
sbb
fdivrs
mov
cmpsl
jo
insl
repnz
and
sahf
xor
mov
xlat
push
decl
scas
in
cmovl
and
xchg
jl
cli
outsb
sbb
xchg
xchg
jae
xor
mov
mov
pop
pop
sub
pop
testl
mov
adc
es
pop
sbbl
add
and
cs
pop
jg
add
lods
sub
push
pop
jo
and
lcall
lahf
dec
icebp
jb
ret
sub
mov
fimull
mov
out
sti
jmp
rcll
jne
call
cmpsl
test
loope
fisttps
push
inc
lret
daa
dec
hlt
xor
test
and
data16
ja
dec
dec
xchg
jge
mov
xor
in
sub
stos
imul
dec
pop
inc
push
push
scas
fcomps
or
mov
mov
data16
jo
imul
cmp
hlt
xor
outsb
xchg
pop
or
fnstsw
push
cli
into
es
dec
in
popa
jnp
clc
mov
push
call
and
push
scas
adc
test
and
cmp
adc
inc
popf
jge
cmpsb
iret
xor
fs
mov
cmc
mov
sub
jae
ficomps
popa
xor
mov
loopne
imul
dec
sbb
push
test
sbb
test
rol
push
lcall
dec
xor
jl
push
loopne
jecxz
pop
stc
xor
xchg
stos
inc
inc
push
shl
add
jle
push
mov
sub
out
jae
add
loop
outsb
test
addr16
jb
leave
dec
add
and
sahf
sub
call
movsl
push
cmp
cmp
hlt
push
and
xor
xor
adc
push
xchg
dec
lds
sti
pop
scas
shrl
xchg
divl
inc
adc
cmp
push
mov
sti
xor
mov
cli
lahf
xor
in
mov
add
in
sbb
fsubs
and
loope
dec
daa
push
xchg
push
sbb
ss
adc
mov
into
and
iret
fldt
scas
mov
mov
fisubs
arpl
and
dec
sbb
push
addr16
invlpg
add
enter
push
sub
inc
jecxz
or
mov
mov
inc
mov
dec
cmp
mov
cmp
and
mov
scas
jl,pn
xchg
push
sbb
push
pop
aas
xchg
sbb
cmpsl
xor
cmp
in
mov
shlb
clc
rcr
adc
cld
fs
ds
jmp
jecxz
fadd
fwait
push
shlb
fstps
mov
scas
mov
shrb
jmp
ds
bound
cmp
pop
repnz
lret
or
xor
into
push
mov
mov
test
stos
and
pop
sbb
mov
xchg
push
sbb
pop
ds
mov
lods
add
neg
loope
sub
xlat
sub
fidivrl
mov
push
sub
pop
cmp
push
mov
pop
mov
jmp
xchg
lahf
into
iret
push
ret
push
sbb
stos
cmp
ret
sub
and
js
in
or
fildll
insl
dec
pushf
sub
sub
add
and
cmp
out
in
push
adc
xchg
lret
sbb
mov
pop
add
loope
mov
hlt
shll
outsl
xchg
pop
sti
popf
mov
mov
jmp
inc
das
sahf
pop
pop
enter
lret
push
lods
fwait
call
and
movsl
push
inc
push
stos
sbb
movsb
push
xor
pop
aas
jno
dec
mov
xlat
lds
and
faddp
inc
jle
ds
mov
ss
mov
adc
pop
adc
cmpsl
jmp
sub
push
outsb
jbe
loopne
or
cwtl
adc
sub
push
shll
pop
imul
mov
and
insl
sub
add
aad
imul
out
pop
out
jecxz
repz
mov
mov
dec
stos
lds
in
inc
mov
mov
mov
jl
inc
lods
loopne
cmc
and
arpl
cli
or
inc
call
push
pop
mov
rcrl
addr16
je
push
mov
mov
imul
inc
mov
outsl
jns
jge
stos
je
into
ret
dec
or
sbbl
mull
push
insb
sbb
mov
shll
push
sti
jecxz
pop
into
aaa
les
iret
xor
and
orb
lods
clc
or
out
push
clc
mov
idivl
ljmp
push
shll
mov
mov
fdecstp
outsl
insb
add
xor
cli
cmpsl
push
mov
fimuls
das
ljmp
fdiv
test
pusha
test
and
push
lods
sub
daa
inc
loop
jae
shlb
cmp
fwait
add
cmp
xor
divl
popa
nop
rorl
mov
addr16
outsl
out
sub
data16
roll
fidivl
loopne
or
xor
push
fs
movsl
sarl
jo
pop
stc
popa
in
shll
push
pop
daa
xchg
push
data16
inc
sbb
sbb
add
and
inc
sub
jg
push
mov
fwait
dec
xor
inc
xor
mov
sahf
mov
hlt
fidivs
cli
shrb
inc
or
pop
mov
lds
mov
fisubrl
rolb
and
test
push
mov
dec
iret
jp
fstpl
sbb
mov
adc
jp
mov
ljmp
pop
ds
mov
sub
sbb
pop
inc
imul
lahf
lret
fcmovbe
cld
aas
jmp
mov
repnz
cltd
fldenv
xchg
int3
sti
cmp
xchg
push
mov
adc
lea
call
ss
cld
scas
lock
cmp
mov
xchg
lock
or
jno
adc
pop
bound
addr16
ret
aad
or
mov
mov
lret
out
cltd
mov
inc
sub
xchg
fmul
testl
xchg
mov
addb
pop
test
lea
loope
leave
dec
aas
sub
sub
cmpsb
mov
ret
jg
in
lock
inc
imul
cltd
xchg
push
dec
jle
fldt
in
jae
jge
nop
mov
inc
stc
movsl
sbb
add
add
andb
sub
imul
ljmp
push
dec
push
sti
es
push
pop
hlt
or
mov
jl
lcall
js
loope
aam
push
inc
jns
push
xchg
inc
addr16
pop
fildl
sbb
mov
mov
xchg
aad
and
adc
pop
addb
lods
xchg
mov
mulb
or
cmc
insb
jne
dec
mov
addr16
in
out
xchg
push
mov
dec
push
xchg
ss
in
ja
jb
pop
mov
stc
sbb
idivb
shrb
jo
imul
and
lret
and
jl
aas
ljmp
call
out
arpl
push
fidivrs
into
icebp
mov
xchg
push
pop
jmp
je
mov
mov
stos
out
mov
mov
inc
sbb
lcall
inc
mov
xorl
cmpsl
fs
jne
dec
decb
mov
jl
sbb
fdivrs
or
pop
mov
and
sbb
xor
orl
stos
and
cmp
pop
fldt
mov
inc
mov
ficompl
jne
and
bnd
scas
jp
rcl
lock
js
push
pop
pop
sub
ja
or
cmp
fcoms
cld
cmp
das
mov
fbstp
icebp
push
dec
mov
les
push
or
test
das
or
in
cwtl
popa
ds
stos
xchg
ja
jp
pop
jo
ret
aad
lods
jns
mov
outsl
out
jg
mov
pop
js
cmp
pop
sub
xchg
inc
out
fs
push
and
cmp
and
test
mov
jle
gs
add
pop
pop
sub
insb
lcall
roll
jecxz
jle
stos
jg
clc
sub
nop
out
mov
aas
outsl
and
stos
aas
xchg
addr16
add
mov
jp
test
jns
negb
cmovnp
scas
shll
rorl
xlat
aaa
xchg
das
mov
xchg
adcl
xor
adc
add
pop
xchg
lds
stos
pop
addr16
jno
mov
cmp
push
adc
or
jmp
add
aam
inc
ret
test
ss
and
cmc
jl
mov
gs
imul
out
push
pop
sbbl
lret
or
movsl
clc
inc
fs
sbb
sub
mov
inc
les
mov
push
push
xchg
les
fnstsw
lahf
cltd
fcom
popf
or
xchg
cmc
ret
cs
je
sub
push
int3
cmp
test
xchg
cmp
dec
shll
idivl
add
dec
lahf
inc
loop
mov
mov
repz
rcr
cld
pop
repz
xor
lods
insl
mov
fmull
scas
ja
in
xor
repnz
fwait
mov
and
imul
pop
pop
sub
pop
arpl
hlt
aas
push
mov
std
mov
pop
or
pushf
pop
jle
pop
sbb
cmpsl
fwait
test
stc
aas
shll
mov
in
and
push
adc
jns
adc
mov
ljmp
ds
shlb
sahf
xchg
mov
outsl
xchg
mov
sbbl
mull
cmpsb
pop
sar
mov
mov
scas
lods
cmp
lret
cmc
mov
xor
loop
xchg
daa
in
jb
in
insb
xlat
mov
sub
mov
jl
mov
xor
and
arpl
lods
sbb
packssdw
xor
ss
mov
mov
xchg
pop
cmp
add
inc
sbb
jle
push
ljmp
lock
in
lock
sbb
insb
enter
test
lods
mov
or
neg
mov
call
add
and
jmp
cmpsb
xor
arpl
aam
test
jg
mov
jno
inc
push
inc
or
mov
pop
data16
cmp
inc
imul
xlat
sub
fldl2t
mov
jmp
lret
loopne
negl
mov
adc
adc
shl
lock
pop
mov
repz
dec
leave
sti
std
mov
inc
pop
cltd
or
je
stos
popf
adc
xchg
or
imul
mov
and
hlt
rcrb
push
mov
pop
pop
imul
rcrl
push
pop
mov
mov
scas
push
inc
movsl
or
xor
mov
aad
lcall
dec
jno
mov
in
mov
sbbl
jbe
out
cmpsl
sub
sub
push
cwtl
sbb
out
push
push
or
sub
cmc
mov
lods
mov
adc
ret
sub
cltd
add
inc
ljmp
mov
mov
std
icebp
js
mov
into
mov
cmc
adc
ret
xchg
loop
cmc
out
cmp
cltd
aas
xchg
adc
cwtl
pop
and
push
idivl
out
hlt
inc
jno
repnz
data16
stos
or
sub
inc
pop
dec
inc
sub
and
xor
and
or
push
in
in
test
sub
mov
leave
imul
cmpb
repnz
shl
mov
jp
lret
xor
stos
das
jo
clc
cmpsb
out
mov
mov
push
cmp
cli
cmpsb
loope
enter
rcll
mov
xor
cmpsb
sbb
fnstsw
jno
out
rcll
cmp
xchg
cltd
popf
mov
adc
mov
adc
outsl
add
mov
mov
aas
adc
cmpsl
sahf
xchg
cltd
pushf
lret
ja
test
outsl
jno
icebp
dec
xor
inc
dec
test
inc
decl
fs
aas
lcall
daa
lahf
and
aam
dec
lcall
fwait
pop
jp
and
jo
pop
jmp
pop
fs
mov
sub
nop
aam
fidivrs
int3
or
sbb
fldcw
movsb
mov
pushf
push
arpl
lret
ss
and
push
add
rcr
scas
sbb
pop
cmp
mov
pushf
pop
es
mov
add
push
in
lret
insb
adc
lock
outsl
pop
dec
outsb
das
mov
outsl
hlt
fwait
mov
les
stos
sbb
push
mov
or
scas
and
out
rorl
enter
jge
and
add
dec
jo
mov
leave
and
mov
fcomip
and
rorb
ja
xchg
cmp
push
cmp
inc
cmp
out
jbe
loop
xchg
rcll
mov
xor
test
xchg
xor
add
push
pop
pop
sbbw
add
mov
mov
ret
rorl
xchg
xor
xor
arpl
aas
lret
insb
rclb
loope
repnz
int
lods
sti
pop
push
fsubs
out
sub
das
nop
or
pushl
movlps
jns
add
jl
stos
cmp
pop
movswl
mov
ja
push
xor
dec
sbb
adc
ja
jb
cmc
add
push
push
out
mov
incb
mov
lret
xor
mov
mov
and
data16
stc
push
aas
sarb
pop
adc
loop
test
loopne
push
push
mov
jge
mov
sub
mov
test
call
pop
cmc
ret
and
hlt
out
mov
pusha
repz
mov
cmpb
xchg
push
add
pop
fwait
rcrl
xchg
and
pop
movsb
inc
cmp
pop
mov
cmp
add
mov
push
jp
incl
lret
imul
fmuls
fimull
enter
adc
int
call
mov
adc
nop
jns
xchg
out
mov
mov
sbb
pmulhuw
test
adc
jle
stos
int
and
shrb
dec
sbb
cmp
pusha
ret
shlb
mov
fistpl
ret
cs
mov
or
dec
nop
xor
lret
xor
inc
fdivr
adc
mov
leave
or
aas
inc
out
jp
shlb
dec
int3
lahf
rorl
cmp
push
mov
mov
pop
outsl
pop
sbb
pop
ja
mov
outsb
mov
iret
out
rorl
ja
stos
push
push
inc
andl
jb
in
in
out
pop
and
mov
xchg
inc
test
int
dec
jno
ja
dec
mov
out
xchg
jne
setae
aam
pop
fisttps
and
cmp
daa
fcomi
scas
repnz
jne
negl
mov
jno
jbe
jbe
lock
or
ljmp
std
loop
icebp
xchg
movsl
lds
cmp
pop
mov
xor
add
push
andl
xor
popf
ret
pop
lds
xor
jl
adc
dec
jbe
fisubs
inc
xor
cmp
mov
and
jecxz
in
xchg
popf
arpl
int
sub
into
cld
outsl
push
mov
std
ret
push
push
cld
mov
sub
jbe
enter
shll
lcall
stc
xchg
repnz
cmp
fs
mov
js
inc
dec
inc
jno
or
dec
mov
insl
iret
sti
std
pushf
out
adcl
or
jmp
and
mov
pop
cmpsb
lea
jecxz
stos
fistpl
or
leave
scas
in
push
lahf
push
jbe
fstps
push
in
sbb
mov
fisttpl
jns
sbbb
movsb
mov
push
daa
insb
or
and
xor
mov
sbb
lret
mov
sbb
lods
scas
pop
xchg
lcall
add
iret
pop
mov
sti
xchg
rclb
sti
mov
pushf
mov
inc
lahf
mov
popf
xor
out
arpl
minps
and
fimuls
aas
loopne
push
outsb
repnz
hlt
mov
mov
loopne
lcall
mov
cmp
cmp
stos
test
daa
dec
fwait
cmpb
dec
jnp
sbbl
cmp
loope
pop
pusha
aas
aad
cmp
or
mov
arpl
and
lcall
in
push
mov
mov
ljmp
dec
sbb
cmp
out
dec
jae
aas
ja
pusha
jns,pt
and
lds
xor
cld
add
or
inc
push
xor
pushf
sub
insb
mov
das
popf
cmp
out
jb
and
mov
cmp
addb
repz
mov
cmc
push
mov
and
mov
inc
sbb
ret
pop
ss
cld
mov
rcll
ret
jnp
cld
or
or
loop
int
icebp
inc
lock
gs
mull
stc
pop
xor
sti
leave
lret
pop
les
push
push
iret
mov
mov
or
inc
scas
lods
mov
mov
mov
loope
push
out
pop
xor
push
popf
inc
cmpsl
out
mov
jne
fsts
sbb
adc
mov
in
ret
push
adc
cwtl
loope
dec
mov
pop
xor
cs
sbb
jae
sub
push
movsb
inc
roll
push
dec
out
pop
xor
fstps
dec
mov
push
push
icebp
pop
jl
mov
adc
cmp
mov
fs
mov
mov
ror
in
lods
mov
push
inc
pop
push
xor
sti
notl
or
cmp
mov
or
call
addr16
psubd
fsubrs
xchg
pop
repnz
outsb
jnp
out
or
cltd
xchg
inc
mov
mov
sub
xor
je
das
xor
test
pop
sbb
mov
xchg
stc
cmpsb
fwait
pop
xor
cltd
cmp
adc
xchg
push
es
outsl
rolb
jle
outsl
xchg
imul
add
mov
scas
ret
add
aam
sub
fmulp
lahf
decb
jb
sub
insb
out
xor
shrb
loope
or
and
and
or
push
fistpll
adc
jecxz
lods
out
pushf
imul
lret
push
and
push
lock
pop
mov
fbld
jg
daa
or
push
pushf
or
jno
pop
rep
lock
pop
adc
mov
jmp
inc
addr16
lahf
mov
ss
adc
cmp
rcr
xchg
xchg
loop
mul
or
icebp
mov
pop
pop
test
add
jae
push
pop
ljmp
push
or
jo
jno
shrl
xchg
lods
or
or
scas
outsl
in
cltd
pop
stos
cmpb
repnz
inc
mov
mov
stc
sarl
enter
shrd
mov
outsl
sbb
pop
mov
pop
inc
nop
insl
lcall
cmpsb
adc
add
pop
sub
jmp
rorb
dec
and
cmp
lods
mov
in
jnp
js
inc
js
lds
xchg
pop
cmp
pop
data16
xchg
hlt
pop
dec
pop
adc
fsubrp
leave
out
popf
sbb
in
test
xor
xor
decb
pop
sahf
out
xor
fcompl
mov
and
pop
mov
and
clc
mov
push
mov
jge
sbb
bnd
addr16
sahf
scas
in
dec
bound
sub
push
inc
sub
mov
fnclex
jbe
lret
lea
lret
popl
pop
push
push
fimull
arpl
add
push
lods
inc
adc
add
pop
out
out
or
pop
cs
fsubl
xchg
sbb
sbb
sub
in
testl
sbb
mov
lods
xchg
dec
mov
push
gs
jmp
loope
popf
stc
inc
das
sbb
push
iret
in
nop
rol
std
fidivrl
jnp
mov
sbb
sbb
nop
jo
inc
mov
cmp
out
clc
ljmp
lret
adc
sahf
movsb
shl
movsb
shr
lcall
je
jmp
hlt
xchg
jmp
mov
je
xor
xchg
sub
into
xchg
xchg
add
lcall
adc
das
data16
mov
pop
out
fnstcw
mov
mov
xchg
push
jno
and
test
sub
cli
fs
inc
mov
aas
jmp
cwtl
inc
frstor
jmp
and
imul
jle
in
push
mov
insl
lret
rorl
jecxz
jae
xor
or
push
addr16
xor
jbe
nop
push
cmp
dec
xchg
shrb
dec
xchg
mov
or
cmpsl
inc
mov
dec
mov
clc
lahf
imul
cltd
insl
punpckhdq
push
lea
cmpsb
aam
movsb
pop
cmp
call
xchg
rcl
test
push
xchg
sbb
mov
sub
fidivrl
pop
jmp
mov
jg
sahf
inc
xchg
mov
out
addr16
lock
cmpsb
pop
xchg
xchg
mov
shrb
jae
fdivs
les
or
inc
xor
and
movsb
xor
add
stc
jl
nop
ret
mov
shrl
pop
fs
jecxz
dec
cwtl
out
pop
repnz
insb
cwtl
mov
push
cli
push
mov
jmp
icebp
loop
mov
sub
roll
ret
rorl
dec
lea
fldl
mov
out
or
daa
pop
loope
pushf
sbb
pop
shrb
xor
popf
popa
mov
dec
jb
outsl
or
xchg
flds
pop
pop
insb
in
fdivrp
xchg
repnz
xchg
cmc
inc
repnz
fists
pop
push
xor
adc
gs
dec
cltd
xlat
xchg
xor
push
and
pop
cmpsb
sbb
frstor
outsl
fldenv
int
pop
daa
addr16
jnp
sub
scas
add
imul
push
xor
sbb
sbb
int
sarb
test
lods
bound
jmp
pop
push
sbb
repz
ss
daa
sbb
and
testb
or
mov
addr16
lock
ret
jecxz
mov
dec
jge
cwtl
mov
lock
xlat
inc
adc
gs
xchg
xchg
pop
jo
js
jmp
adc
cmp
ja
add
xchg
mov
cmpsb
jbe
adc
or
add
mov
adc
push
push
sub
add
mov
push
jp
fists
add
leave
pop
inc
dec
jmp
xor
xchg
xchg
jmp
inc
jbe
insb
push
ret
xorb
je
mov
add
arpl
dec
xchg
xchg
test
js
jp
and
xchg
cmp
shl
jp
push
mov
shlb
fptan
mov
loop
cld
scas
jp
jge
mov
movsl
stc
pop
adc
out
stos
xor
adc
lds
clc
imul
push
out
fdiv
cmpsl
mov
or
movsb
and
xchg
mov
adc
jno
jmp
jecxz
outsl
ja
xchg
movb
or
sub
aam
push
adc
xor
xlat
popa
movsl
lods
out
pop
mov
jns
push
jp
ret
or
clc
lds
dec
pop
and
ja
in
add
in
push
lahf
aaa
mov
mov
xchg
arpl
fs
cs
xchg
jmp
adc
pop
fs
aam
mov
cmpsb
mov
add
sbbb
pop
test
mov
daa
jl
roll
lock
outsl
data16
xor
jmp
nop
mov
jmp
pusha
mov
mov
lret
dec
scas
push
int
adc
add
add
dec
sbb
in
inc
lea
subb
cltd
jg
xchg
mov
mov
xchg
pop
popf
xchg
inc
orb
mov
cli
inc
into
and
adc
pusha
dec
jmp
xchg
dec
xchg
lret
repz
add
xor
mov
pop
mov
cwtl
xchg
jb
xchg
xchg
mov
pushf
fdivrs
dec
xor
inc
dec
mov
xor
lock
clc
cmp
lret
es
popa
push
and
xor
lock
cwtl
sbbl
sub
jnp
in
imul
sbb
imul
mov
jne
cmc
xor
ficomps
push
fs
outsb
xchg
xor
loopne
mov
adc
mov
cmpsb
out
sbb
shrl
xchg
xlat
addb
mov
sbb
loopne
aas
mov
outsb
pop
insl
in
fdivrl
dec
addr16
sbb
mov
add
xor
in
ret
xchg
and
fs
mov
adc
sub
push
push
mov
jg
add
dec
enter
jnp
sbb
aam
lods
ja
push
and
add
xor
cs
aas
jne
and
into
mov
pop
dec
lods
mov
adc
lock
lods
xchg
shl
fwait
inc
push
divb
loope
inc
jg
add
jbe
fldcw
negl
jge
shrl
movsb
lret
mov
stos
or
mov
sbb
lea
sbb
addr16
mov
sbb
cltd
sbbb
pop
mov
sub
outsl
mov
dec
pop
iret
adc
in
lea
popa
test
in
shll
cli
adc
sbb
push
mov
or
dec
inc
inc
jge
fmull
enter
mov
call
mov
add
push
cmpsb
mov
insb
and
xchg
repnz
xchg
dec
xchg
stos
inc
shr
pop
arpl
insl
lock
inc
lods
adc
je
call
pop
jge
or
xor
add
add
mov
leave
or
sbb
pushf
xlat
mov
sbb
pop
outsl
dec
xor
xor
mov
imul
xor
push
inc
add
lret
inc
xchg
in
decb
jb
mov
fstp
ret
dec
scas
dec
sub
and
std
gs
lret
clc
sub
ljmp
cmp
sbb
push
pop
pop
pop
xchg
jmp
fildl
ljmp
adc
stc
daa
aam
stc
push
and
lret
lret
fisubs
mov
fcompl
jp
lods
add
jl
mov
jmp
xchg
cmc
cmp
int3
int3
fidivs
and
rcll
add
jo
dec
mov
daa
int3
mov
xor
add
fistps
aad
push
data16
adc
push
mov
mov
mov
movsb
dec
or
cwtl
xlat
add
aas
cltd
fwait
pop
popf
sbbb
icebp
mov
or
cmp
push
sub
inc
icebp
ficoml
shll
and
aad
inc
adc
cmp
xchg
dec
dec
fistpll
insb
inc
in
cmp
lock
jl
cmp
cs
and
out
sbb
cmp
pop
aaa
imul
add
mov
addr16
pop
pusha
clc
enter
inc
and
jo
push
nop
push
lods
pop
xchg
jbe
jae
call
clc
aad
cmp
arpl
dec
loope
subb
mov
pop
push
xchg
mov
lahf
jle
hlt
sbb
sbb
inc
imul
mov
cwtl
pop
fidivl
xor
and
in
insb
in
xor
mov
fwait
insb
sub
in
outsb
shl
loope
jecxz
or
sahf
movsb
xor
add
arpl
mov
jle
or
pop
into
ss
jmp
lcall
jl
jne
hlt
pop
rcrb
iret
das
mov
lahf
push
adc
imul
outsb
jmp
jl
and
fidivrs
xor
and
lahf
jecxz
ds
adcb
scas
daa
test
inc
xor
inc
xor
mov
mov
push
xchg
addr16
pop
lret
dec
popf
push
add
icebp
push
repz
clc
jne
mov
sbb
xchg
ret
or
fimuls
daa
lea
insl
dec
adc
pop
xchg
sub
mov
or
fwait
test
iret
sub
pop
clc
sbb
nop
dec
or
push
mov
lods
adc
jg
jmp
adc
cmp
push
xchg
jl
mov
loope
xchg
sbb
push
xor
inc
sbb
add
and
enter
lods
inc
adc
rcll
cltd
into
mov
jno
xchg
mov
pop
cmc
pop
sbb
mov
adc
daa
cmpsb
call
lock
data16
mov
xchg
cmpsl
mov
push
lret
outsl
pop
sub
popf
pop
out
cmp
mov
stos
movsb
ss
fldenv
fimuls
das
lret
subb
push
or
xchg
jbe
into
mov
inc
jno
sahf
in
xchg
adc
mov
cmpsl
xor
sbb
cmp
std
movb
push
cmp
repnz
xchg
xor
push
mov
dec
dec
xchg
adc
dec
push
aam
sbb
inc
pop
shlb
call
fcompl
repz
push
cmp
push
push
aad
call
pop
mull
pop
inc
sbb
xchg
dec
push
xchg
fisubl
popf
xor
pop
pusha
adc
pop
inc
sub
dec
add
dec
test
fists
sub
pop
inc
xor
mov
jl
ret
xorb
xor
rolb
adc
cld
jne
xchg
dec
mov
stos
xor
adc
xchg
jns
jo
testb
inc
int
or
sub
loope
sti
sbb
hlt
mov
ljmp
popa
stos
inc
xor
mov
and
push
pop
cmp
xor
push
sbb
xchg
sbb
xchg
mov
jmp
shrb
leave
cltd
and
pop
cmpsb
xchg
movsl
cs
xchg
push
add
iret
sbb
bound
movsl
sbb
dec
loope
in
iret
pop
sarl
dec
mov
mov
rorb
data16
mov
cmc
mov
jecxz
pop
inc
loope
popa
mov
add
mov
and
testb
xor
push
push
cmp
stc
dec
call
loop
pop
mov
push
cld
and
pop
ret
mov
push
aam
dec
mov
jle
xchg
mov
repnz
push
add
mov
iret
sbb
mov
data16
push
pop
and
xor
stos
jb
movsb
xchg
iret
movsl
jp
pop
jle
adc
shrb
cmp
lds
das
int3
out
add
push
jp
xor
add
jb
mov
cmp
jmp
das
mov
sbb
sub
cmp
push
popf
repnz
pop
imul
jmp
push
jle
data16
pop
sbbl
into
adc
scas
sub
mov
and
and
inc
imul
stc
jecxz
rcrb
inc
aas
cmp
aaa
cld
sbb
outsl
out
hlt
sarb
dec
dec
in
push
mov
lds
movsb
xor
adc
pop
jge
add
movsl
mov
xchg
scas
je
jp
std
jbe
stos
fsubp
sub
bound
mov
push
and
shll
ret
sbb
in
xor
sbb
repz
mov
je
dec
mov
push
sbb
push
mov
and
jns
xor
insl
and
fwait
add
loopne
test
stos
pop
fxch
jg
xchg
xchg
xor
shrl
aam
xor
sbb
repz
sub
and
test
fstpt
rcrl
adc
fiaddl
sbb
mov
daa
imul
cmc
push
cwtl
mov
mov
add
pop
cmp
xchg
mov
push
sti
sub
int3
mov
ret
insl
enter
jp
jno
push
sub
fneni(8087
sti
push
xor
mov
dec
mov
add
mov
inc
imul
pop
or
pop
sub
das
in
pop
cmpsb
daa
out
sub
shll
fwait
pop
push
mov
jl
cmpsl
sub
mov
mov
xchg
mov
rcrl
adc
dec
lret
mov
inc
mov
dec
pop
arpl
call
arpl
call
imul
loop
pushf
xor
rcrl
cmc
xor
pop
sbb
mov
outsl
out
fidivl
jo
or
fcomi
enter
or
pop
pop
and
cld
jne
mov
and
cmpsb
add
bound
jb
mov
fstp
fwait
or
shlw
in
push
mov
jle
testl
btr
adc
adc
in
popf
mov
cmp
scas
pop
jg
inc
sti
jno
mov
or
sbb
dec
sub
in
dec
cli
mov
mov
stc
lods
sahf
call
pop
pop
mov
bound
xor
pop
mov
maskmovq
lahf
cmpsl
jg
mov
pusha
mov
inc
std
sbb
inc
pop
mov
adc
movsb
sbb
iret
f2xm1
enter
outsb
mov
loop
and
ja
pop
lods
mov
jecxz
sahf
lahf
xorb
xchg
jnp
mov
add
fmul
pop
mov
inc
xchg
push
push
mov
lahf
sub
jge
mov
or
int3
and
fildll
xchg
mov
stc
seto
daa
push
pop
aam
fdivl
out
flds
das
inc
pop
je
add
sti
ljmp
cld
mov
mov
loopne
mov
les
gs
mov
adc
scas
pushf
sbb
popa
and
xor
mov
repz
mov
fs
roll
leave
arpl
out
jl
xor
mov
sbb
rorb
xor
call
pop
dec
lock
and
insl
out
adc
dec
pop
inc
cmpsl
push
cs
mov
dec
or
add
out
rorb
mov
push
fisubrl
cwtl
clc
push
daa
ret
xchg
ret
pop
mov
aad
lea
push
lcall
jbe
sub
or
jl
test
add
xor
scas
jo
scas
orl
leave
test
hlt
and
xchg
pop
cmc
scas
pop
shrb
or
inc
cmp
andb
add
mov
test
ss
idiv
nop
push
scas
rcll
xor
fistpl
bound
mov
pusha
testb
js
cmp
fwait
inc
inc
cmc
mov
cmp
inc
sub
out
xchg
mov
cmpsb
imul
push
push
test
insb
lea
sarb
sbb
icebp
out
aas
inc
icebp
xchg
xchg
nop
imul
add
mov
and
jno
aaa
cmp
stc
mov
mov
sbb
enter
pop
jp
mov
push
movsb
xchg
ja
jno
shrl
fs
shrb
sahf
test
add
test
outsb
mov
cltd
mov
lret
jns
lret
or
outsl
mov
repz
in
and
and
xor
stos
ljmp
mov
lahf
aas
imul
and
and
es
xchg
inc
jae
daa
xchg
std
mov
clc
movsb
xchg
bts
mov
mov
inc
iret
push
out
sbb
add
sub
cmp
stos
mov
jbe
int3
add
inc
sbb
jle
es
and
xchg
popf
jns
ds
push
mov
dec
inc
and
push
lret
jl
or
jbe
fdivrs
jg
decl
pop
push
mov
stc
mov
add
jge
repnz
and
mov
dec
mov
inc
or
stc
add
xchg
cmp
outsb
pop
lcall
out
dec
mov
rcll
js
mov
loope
adc
xchg
push
adc
dec
jg
pusha
test
jbe
repnz
stos
out
xchg
mov
lods
mov
mov
inc
xchg
xrelease
lock
cmp
iret
pop
or
pop
add
or
fmuls
aad
sahf
push
mov
fsubp
push
clc
pop
adc
loope
sub
sub
shrb
pushf
jmp
dec
cmpsb
movsb
sahf
das
mov
inc
mov
inc
adc
sbb
push
dec
cmpsb
adc
je
hlt
mov
ds
and
push
sahf
lock
jns
ret
mov
fwait
notl
clc
mov
out
fadds
test
lods
mov
shrb
test
scas
aad
pop
jo
fdivs
jae
xchg
push
jae
out
popa
push
nop
test
inc
rcrb
daa
xlat
mov
add
call
mov
lock
sub
push
cmpb
outsl
test
mov
mov
push
cmpsb
mov
adc
stc
cwtl
cmpsb
aaa
xchg
sub
mov
jbe
in
ret
sbbl
or
xchg
sbb
fwait
xchg
lret
lods
jno
rorb
mov
lahf
enter
dec
data16
push
scas
ss
imul
test
clc
xor
sti
dec
rep
adc
xor
fbstp
lahf
testl
mov
lahf
xchg
popf
jns
jge
shll
fisttpl
push
stc
shl
mov
inc
sub
mov
fdiv
scas
mov
cmp
cmp
push
and
lea
imul
sahf
sub
lods
xchg
cmp
add
testb
mov
fucomip
and
jl
stos
loopne
fwait
push
pusha
dec
inc
jmp
push
outsb
lahf
pop
movsl
aam
and
mov
dec
sub
dec
push
lret
and
stos
pop
add
jne
movsb
jmp
ljmp
sahf
fcomp
ds
push
mov
inc
push
xor
into
mov
jnp
stos
outsb
mov
sti
dec
into
hlt
and
mov
shll
cmpsl
pop
int
addr16
cmp
daa
addb
sbb
add
iret
mov
add
lock
cli
mov
fucom
mov
pop
mov
ret
xchg
mov
sbb
jbe
sbb
add
pop
and
mov
stos
cld
mov
mov
imul
out
cmp
sub
insb
cld
rcll
loope
andl
xor
adc
movsl
dec
stos
jle
pop
mov
sbb
out
stc
push
mov
mov
fnsave
aad
call
adcb
jno
rcrb
js
pop
adc
mov
add
mov
pop
daa
mov
adc
je
leave
push
enter
jp
stc
push
js
xor
test
into
and
cltd
jg
xlat
xchg
in
int
outsl
aad
pop
push
insb
sub
jmp
mov
sub
mov
pop
daa
es
add
push
sahf
jp
dec
or
and
mov
xor
dec
clc
aas
jl
shlb
xor
xor
insb
inc
frstor
pop
das
xchg
fists
sbb
fimuls
lret
inc
adc
ret
int
jp
and
jno
scas
jge
lret
repz
in
outsl
fcomps
pusha
lea
dec
push
pop
push
dec
jl
push
je
scas
sahf
insb
mov
popa
cmp
ss
fucomp
adc
das
aaa
je
enter
fldt
icebp
push
mov
mov
mov
mov
rorl
mov
adc
mov
mov
syscall
stos
cmpsl
xchg
jae
data16
mov
jecxz
ss
nop
mov
sbbl
pop
mov
xor
pop
mov
or
iret
popf
inc
jnp
dec
and
test
mov
xchg
jne
cs
push
jo
scas
pusha
mov
jecxz
cmpsl
adcb
sub
xchg
aas
lcall
addb
fwait
shl
add
adc
xchg
inc
std
movsl
xlat
js
jae
pop
cmpsl
sbbb
sub
mov
repnz
bound
mov
sahf
popa
aam
movsl
push
scas
lcall
or
lds
dec
jmp
shlb
xchg
sbb
nop
pop
out
inc
sarb
cmc
inc
std
stos
add
filds
lods
lret
or
int
loope
icebp
ss
cld
mov
cs
push
mov
inc
cmp
cli
cmp
in
mov
jmp
xor
cs
adc
pushf
ficomps
pop
pusha
adc
popf
inc
adc
dec
or
cld
fisttps
mull
lahf
mov
mov
ljmp
int
sahf
jbe
push
inc
add
mov
mov
test
push
and
xor
packuswb
jo
add
pop
xchg
fsubl
std
imulb
cmp
arpl
pop
add
cmp
dec
add
mov
aas
sub
lock
pop
mov
mov
addr16
inc
and
jecxz
imul
stos
add
fdivrs
adc
mov
outsb
pop
sbb
fildl
fmuls
sbb
inc
inc
mov
out
outsb
shrb
js
push
insl
push
stc
xor
push
into
sub
mov
gs
das
push
jne
ljmp
mov
incb
xchg
popf
cmp
fnstsw
fucomp
push
mov
xlat
divl
fs
movsb
out
test
into
sbb
and
arpl
jb
jo
aad
fldl
mov
adc
enter
ja
adc
sbb
mov
inc
je
adc
sub
aad
repz
sub
jns
mov
lds
add
std
xchg
sub
mov
xchg
push
xor
jbe
in
test
inc
ljmp
jo
fs
dec
sbb
dec
gs
ss
ss
and
sbb
popa
call
mov
mov
push
inc
stos
inc
push
mov
mov
aas
mov
mov
out
test
xor
cs
mov
sub
xor
push
and
cmp
lret
adc
jns
jns
xchg
xor
imul
sahf
movl
jo
cs
adc
dec
add
mov
sub
in
mov
in
mov
push
sbb
jnp
jecxz
push
dec
movsl
jmp
loopne
pop
jge
xchg
iret
lea
jmp
test
xchg
jns
stos
test
and
xchg
push
or
xchg
stos
lret
lahf
push
mov
rclb
push
add
daa
pop
js
ss
movsl
xchg
sub
mov
jmp
pop
not
dec
jns
outsl
loop
inc
add
rclb
pop
push
fsubl
mov
mov
lods
add
dec
movsb
cmp
orb
nop
mov
imul
xchg
int
dec
dec
cld
jmp
pop
dec
xchg
lods
jbe
shrb
insb
mov
xor
cltd
or
mov
cmpl
stc
movsb
push
idivb
jns
lahf
jge
enter
hlt
repnz
mov
lret
loopne
mov
test
lret
sub
mov
pop
das
fildl
fldenv
daa
loopne
test
cmp
xchg
and
les
and
dec
cld
imul
xchg
adc
fnsave
in
xchg
cs
inc
scas
push
dec
js
inc
push
and
add
jl
das
adc
sti
ret
shll
mov
jmp
push
in
add
and
sub
or
cmp
movsl
pop
repz
sub
inc
mov
inc
mov
mov
pop
gs
dec
sub
jl
xor
and
cmpl
add
aam
imul
or
mov
cmpsl
inc
pop
cli
movsb
cmp
ljmp
xchg
cmp
popa
sarb
into
in
aad
dec
sbb
or
pop
cld
gs
enter
mov
adcb
scas
inc
mov
pop
and
cmpsb
loope
pop
xchg
leave
out
sbb
inc
aam
ret
inc
cmp
pusha
pop
add
popf
mov
mov
test
cmp
pusha
mov
sarl
mov
jecxz
ljmp
cwtl
arpl
cmpsb
mov
mov
pop
std
cli
jb
fisubl
pop
rcrl
xchg
inc
loope
and
push
jnp
cli
add
pop
imul
jmp
cli
cmpsl
add
test
sar
mov
jecxz
mov
loopne
dec
das
inc
fs
push
outsb
pop
sub
icebp
loope
jns
insl
rcrb
sub
jecxz
pop
inc
pop
inc
add
sbbl
jl,pt
dec
jl
pop
daa
out
addb
xchg
andl
mov
test
mov
adc
or
cmp
pop
add
lret
fistps
shl
repz
add
push
out
xor
loopne
outsl
sub
pop
sbb
js
aad
addr16
sub
xor
scas
or
cmp
xchg
out
mov
cmp
xchg
jnp
push
push
rolb
dec
sub
subl
filds
ja
cmpsb
test
push
lahf
clc
xor
mov
or
hlt
adc
cmp
lahf
jp
into
mov
pop
movsl
cli
cmp
test
gs
jp
pop
jmp
mov
mov
repnz
mov
in
adc
push
mov
popa
ss
leave
push
test
sub
jp
mov
inc
or
aas
shl
sub
aaa
mov
adcl
cmp
xchg
and
mov
xchg
adc
scas
stos
test
aad
test
adc
push
xor
jp
scas
js
rcr
mov
mov
leave
into
adc
lret
pop
insl
aaa
lret
fs
xchg
es
push
fdivs
cmpsl
cmp
vmovups
insb
adc
push
push
bound
pop
and
lcall
inc
in
lea
mov
and
mov
jmp
mov
mov
imul
sub
inc
or
pop
sbb
out
adcl
pop
pop
mov
dec
jns
mov
inc
test
ja
mov
pusha
adc
inc
arpl
fsubr
std
loope
orl
sbb
leave
pop
inc
adc
mov
aad
sub
or
mov
adc
inc
test
das
push
cmp
lods
mov
or
or
rolb
aam
insl
das
ss
fsubs
mov
inc
dec
inc
inc
gs
jno
out
fimull
cld
add
int
or
pusha
and
mov
movsb
adc
movb
or
xor
std
int
fildll
loopne
jge
lods
shrl
bound
push
pop
sahf
mov
mov
rcll
lret
outsl
daa
mov
pop
data16
out
mov
mov
repz
push
aad
ret
mov
fdivl
repnz
cmp
xchg
xor
addr16
xchg
adc
int
sbb
xor
mov
js
je
mull
es
or
cmpsl
or
dec
push
js
inc
sub
xchg
mov
rcll
and
mov
mov
push
cwtl
sub
xchg
and
jno
rcr
ljmp
jg
imul
arpl
fwait
mov
jb
cmpb
xor
or
dec
mov
sbb
jmp
stos
mov
xor
mov
adc
cmc
outsb
lea
filds
mov
insb
or
cmp
xor
pop
jle
dec
dec
outsl
or
jle
dec
inc
mov
or
movsl
add
clc
pop
jbe
adc
rep
ss
sbb
pusha
mov
mov
insb
adcb
mov
adc
mov
xor
mov
dec
inc
repz
iret
subl
mov
and
mov
or
out
lret
mov
aam
sti
cmp
fisubrl
cld
adc
shl
push
pushf
pop
pop
and
out
insb
in
jecxz
mov
sbb
inc
and
arpl
aad
fcomp
mov
mov
pop
shl
jo
in
mov
sbb
test
xchg
dec
je
jg
mov
movsl
insl
lods
xchg
mov
add
pop
sti
cs
outsl
orb
or
push
aas
cmpsl
fidivs
mov
loopne
cmc
or
inc
je
inc
dec
jle
add
mov
xor
dec
xchg
out
push
jo
test
mov
sarl
add
inc
test
mov
int
jecxz
cmp
inc
and
sbb
xchg
jo
and
mov
cmp
hlt
push
mov
leave
dec
jns
je
inc
mov
daa
inc
xchg
leave
jmp
arpl
sbb
jae
repnz
dec
add
mov
push
sbb
jnp
repz
ret
xor
pushf
jns
add
test
jecxz
jns
xchg
xor
mov
sbb
add
ja
xor
mov
ret
sub
loop
bound
sbb
sti
add
pop
orl
push
arpl
adcl
fidivrs
loopne
unpcklps
ret
enter
adc
pop
imul
popa
repz
sub
ja
shl
sbb
shll
nop
cmp
cmp
clc
sub
sbb
pop
rcr
and
sbb
shll
shr
jp
bound
das
adc
dec
xchg
pop
stos
sbb
scas
negb
outsl
mov
cmp
arpl
hlt
aad
pop
xchg
lahf
dec
pushf
test
adc
xchg
and
and
or
testb
bound
icebp
add
and
pop
sub
stc
or
loopne
jo
movsl
movsb
cmp
sub
fadds
add
mov
lea
pop
mov
mov
idivb
mov
push
mov
xchg
loop
loopne
xor
pushf
movsl
adc
dec
gs
cwtl
test
sub
mov
dec
xor
xchg
icebp
insl
dec
sti
into
rcll
out
or
mov
xor
jo
and
inc
add
mov
es
pop
and
test
cltd
mov
dec
pop
not
mov
pop
pop
pop
fidivrl
fdivs
lret
loopne
fnstsw
rclb
notb
xchg
jns
mov
lret
lods
sbb
addb
add
sbb
jp
push
fnsave
pop
cmp
inc
mov
scas
daa
sub
dec
aas
in
out
hlt
jbe
sbb
jmp
out
pop
cltd
push
montmul
cmpsb
add
int
pushf
pushf
pop
mov
jb
sbb
mov
mov
sbb
lret
push
adc
das
or
int
xchg
loop
push
call
fbld
dec
dec
push
dec
mov
ljmp
pusha
loopne
push
test
ljmp
add
mull
push
sub
repz
dec
dec
mov
jg
add
pslld
mov
jmp
dec
int3
stos
pop
dec
jecxz
cltd
sub
push
inc
and
jb
cmp
push
mov
sbb
dec
sbb
aas
cmp
pop
or
sarl
leave
loopne
ss
dec
and
jmp
int
push
incl
jb
repz
cmc
jge
dec
jle
aaa
mov
and
arpl
jmp
or
fs
or
ret
jb
push
sub
je
or
xchg
sbb
jo
outsb
test
mov
mov
scas
ficomps
mull
push
dec
lahf
mov
cmp
jnp
js
stc
mov
jb
movsl
cli
sbb
jecxz
mov
mov
pop
xor
adc
dec
and
and
ret
out
test
mov
cmp
sarl
imul
fcomp
mull
adc
mov
es
add
fs
pop
icebp
dec
push
and
adc
cmp
xor
sbb
into
sbb
dec
inc
addb
cmpsl
int3
push
loopne
pop
enter
lcall
push
pop
push
fcomps
icebp
mov
fdivrl
push
mov
movsl
mov
int
adc
popf
sbb
in
mov
pop
push
inc
test
ljmp
in
test
sti
sbb
fnsave
bound
push
mov
and
call
cmp
xchg
lods
mov
mov
nop
cmc
sbb
scas
adcl
push
divl
fwait
inc
cli
stos
adc
and
lds
push
inc
loopne,pn
pop
dec
fldl
pop
orl
out
mov
push
adc
pop
testb
cmpsb
mov
xchg
adc
pop
sbb
repnz
and
or
mov
andb
mov
push
xor
dec
aad
mov
mov
sbb
insb
and
popa
loope
bound
cli
jno
int
mov
dec
dec
es
or
scas
hlt
xor
add
and
mov
push
jo
xorl
dec
dec
add
call
addr16
outsl
aam
sbb
pop
mov
repnz
add
sbb
and
enter
js
sarb
mov
out
fcompl
js
andl
push
lds
sbb
sbb
decl
mov
dec
cmc
out
es
xchg
mov
sbb
jl
fwait
sub
mov
inc
xchg
fucomip
adc
and
test
or
jb
adcl
sub
cmpb
adc
mov
loopne
iret
jns
mull
out
xor
aaa
add
jl
push
cld
stos
and
push
xchg
mov
push
or
xchg
push
ja
std
lret
sbbl
jp
or
push
test
xchg
jbe
mov
lcall
mov
icebp
mov
mov
aas
call
loop
mov
adc
and
mov
mov
mov
cmpsb
or
xchg
sbb
push
bnd
pop
arpl
xor
pop
sbb
pop
xchg
pop
test
or
icebp
fcomip
insb
push
cli
sti
shl
dec
mov
test
xchg
rorb
sub
mov
mov
push
adc
cs
and
and
dec
lds
lock
test
mov
add
push
gs
out
xchg
stc
add
popa
adcb
sub
insb
add
out
scas
das
sbb
xchg
dec
lcall
das
stc
sub
fucomip
pushf
hlt
sbb
xor
ljmp
pop
push
xchg
lret
jle
or
nop
out
pop
inc
test
fdivrl
pop
and
outsb
mov
scas
enter
ja
fldcw
fs
cmpb
ret
inc
jo
repnz
mov
pop
cmc
int3
sbb
jmp
imul
pop
mov
nopl
int3
data16
sar
lahf
inc
jns
xor
pop
cmp
lret
push
leave
inc
jg
sarl
lcall
dec
and
jl
pop
push
dec
repz
loop
lock
popa
and
js
mov
mov
or
aas
inc
aaa
test
out
ss
clc
dec
dec
sub
push
stos
fwait
mov
test
cmc
mov
in
cltd
add
or
add
cltd
aaa
cmpsl
xor
faddp
shl
or
xor
mov
add
lods
xchg
lret
push
adc
inc
fs
pop
mov
fnstsw
mov
add
dec
dec
cmpsl
push
out
shr
jg
shrl
push
movsb
jo
fwait
aam
fsubrl
shll
push
in
and
cmpsl
push
lods
cld
dec
mov
jl
dec
pusha
xor
ret
inc
lret
outsb
outsb
js
bound
xor
imul
lods
les
ret
loope
jae
scas
icebp
testl
xor
es
xor
popa
push
fmull
notl
out
scas
stc
adc
xor
mov
xor
lods
pop
mov
incb
mov
jae
cwtl
out
out
fs
iret
adc
std
pop
mov
jnp
or
jo
movsb
xchg
incb
test
xor
out
pop
cmpsl
jnp
stos
addr16
test
js
cmpsb
iret
lds
mov
and
nop
lret
mov
pop
pop
xor
push
divl
sbb
aas
lock
pushf
shrb
jp
sub
push
aas
daa
push
data16
sbb
cmp
insb
dec
cmp
call
fwait
or
jecxz
push
dec
std
orb
loopne
fldenv
xor
outsb
insb
xchg
cwtl
shll
lahf
or
cmp
dec
sahf
shll
push
std
push
xchg
inc
lods
sbb
lret
xchg
jnp
xchg
mov
in
ss
stc
out
xor
in
fildll
and
pop
mov
imul
or
add
push
add
and
xor
arpl
nop
cmp
loopne
jg
push
mov
dec
mov
sub
and
jno
nop
xchg
push
xor
add
xchg
jle
in
cmp
mov
pop
cltd
cmp
in
mov
adc
and
ja
push
jb
jle
scas
mov
jmp
push
mov
adc
fstps
stc
jecxz
adc
pop
pop
rcll
rol
mov
jno
push
ret
xchg
push
daa
ja
jno
jne
push
mov
in
mov
push
fisubrs
adc
test
push
out
loopne
jb
inc
loop
push
aas
dec
popl
pop
leave
pop
xchg
aam
or
lock
mov
or
inc
aas
fwait
mov
dec
jo
pop
jl
rcrl
lods
in
mov
iret
xchg
outsl
xchg
jae
xor
push
pop
mov
daa
lret
xor
cmp
add
aam
pop
outsb
mov
mov
sbb
mov
test
jl
sbb
adcl
mov
mov
add
call
push
decl
lcall
or
fdivrl
loope
push
sbb
mov
push
lahf
dec
cmp
pop
fwait
mov
jecxz
sub
fcompl
rorb
sbb
push
dec
jo
xor
lcall
xor
nop
push
lcall
out
fsubs
push
cmpsb
aaa
sbb
xchg
out
fsubl
cli
or
shll
cmp
sbb
inc
stc
dec
lret
mov
push
into
out
dec
xchg
outsb
mov
lock
lea
sar
push
loope
xor
xor
xor
in
cs
lods
hlt
add
xorb
cs
fs
cmp
in
push
dec
sub
ljmp
mov
sbbb
inc
pop
add
inc
lahf
mov
pop
loope
xchg
bound
hlt
jb
loope
push
pop
dec
in
add
scas
mov
aam
xor
stc
aad
mov
mov
rorl
repnz
adc
xor
sti
dec
jae
sbb
lcall
lret
test
mov
pop
mov
jg
les
xor
ret
jmp
scas
sub
sub
out
push
daa
sbb
test
lahf
push
mov
out
push
shl
sub
adc
clc
pop
daa
pushf
icebp
pop
cmp
push
mov
aam
adc
outsb
mov
push
xchg
jge
xchg
out
mov
add
dec
sbb
pop
test
iret
insb
aas
mov
xchg
rcrb
xchg
aad
sahf
jmp
mov
jae
or
mov
sbb
adc
or
pop
in
push
mov
push
inc
inc
jmp
js
add
je
fldcw
out
mov
dec
dec
mov
out
xor
xchg
mov
lret
test
aaa
jnp
push
ret
in
call
es
push
inc
subb
xchg
faddp
leave
daa
adc
or
jl
pop
mov
or
and
loopne
ret
push
adc
mov
adc
imull
sbb
mov
xchg
pop
fnsave
push
test
jns
cmp
nop
iret
into
push
pop
insl
pushf
adc
gs
xchg
les
lock
cmp
shll
outsl
sub
lods
in
fs
cmpsl
lock
push
pop
jmp
mov
xchg
adc
mov
dec
jo
into
xchg
test
dec
fdivl
cmc
cmp
jae
mov
dec
mov
test
xchg
xor
je
and
dec
jecxz
sbb
sti
jb
lds
in
sbb
lret
inc
sbb
mov
sub
sahf
lahf
clc
push
add
out
mov
int3
jb
lds
xchg
scas
outsb
cs
mov
cwtl
mov
movsb
into
in
fsubr
xlat
or
inc
sbb
repnz
lahf
ja
faddp
fs
jg
out
movsl
cmp
cs
aad
out
lret
das
mov
jbe
ret
gs
outsl
call
sub
pop
push
lods
jae
adc
subb
in
mov
pop
push
les
lahf
push
nop
or
sti
jmp
push
cmpb
adc
sbb
or
mov
loop
lds
xor
inc
out
adc
andb
mov
push
leave
aad
popw
addl
fwait
hlt
xchg
push
scas
fwait
jmp
aad
cmp
aaa
push
pop
add
jns
das
sub
nop
data16
icebp
cltd
les
test
popf
mov
adc
pop
xor
inc
sub
shrl
cwtl
in
jmp
and
sub
cmpsb
add
fstpl
push
call
or
pop
sub
insb
push
int3
pop
xchg
xchg
out
xchg
mov
cmc
fcompl
pop
in
mov
inc
sbb
and
inc
xor
pop
add
leave
push
push
cs
dec
pop
inc
sub
ja
ret
cs
out
dec
sbb
xor
xor
adc
mov
dec
test
sub
sub
repnz
dec
subb
mov
lea
pop
aaa
pop
push
aad
inc
and
cwtl
mov
jno
cmc
popa
xor
push
or
aam
push
addb
xlat
add
mov
mov
push
fwait
inc
jmp
stos
cmp
mov
xchg
add
repnz
dec
push
cmpb
std
pop
inc
and
div
ds
and
add
sbb
sub
mov
push
out
jle
pop
jo
test
or
pop
push
add
dec
dec
jne
loope
sbbl
fldt
daa
push
xchg
or
push
out
cmp
out
sub
imul
pusha
fildl
and
dec
les
insl
pop
fs
push
inc
loopne
jb
push
ret
fbld
bound
lods
aam
loope
cli
in
or
inc
dec
imul
xlat
aas
mov
cmp
inc
xlat
les
cmpsb
adc
fincstp
cltd
inc
xchg
nop
lods
loope
std
sub
add
fisttps
pop
cs
lods
addr16
sub
add
hlt
fidivs
dec
mov
pushl
sahf
inc
daa
lods
and
xchg
xchg
fimull
jle
stos
dec
andnps
or
xchg
lahf
jo
mov
push
adc
lret
testb
push
and
btc
pusha
mov
jle
push
lock
pushf
nop
xbegin
cmp
cs
adc
cmpsb
sahf
andb
xor
popf
xchg
das
jns
bound
mov
lcall
lcall
dec
pop
rolb
lcall
sub
addr16
test
lret
sbb
aad
aam
cmpsb
data16
cmpsb
add
repz
fisubrl
pop
test
xchg
rolb
test
add
dec
adc
mov
pop
aaa
int
or
popf
pop
cmp
sbb
insb
fiaddl
sub
out
mov
mov
or
stos
jge
inc
add
xor
xchg
icebp
out
dec
jae
xchg
scas
mov
insb
push
dec
adc
dec
sti
mov
in
pop
das
fsubrs
sbb
cmp
out
lret
xchg
jo
xor
xchg
sbb
jp
and
aam
movsb
add
xchg
mov
xorl
jne
mov
cs
push
sahf
mov
and
call
sub
inc
call
les
test
shrb
test
mov
ret
dec
gs
push
ret
fstps
outsb
xor
cwtl
mov
dec
mov
jb
sti
mov
add
ljmp
icebp
inc
adc
cmp
iret
mov
lret
jge
data16
mov
mov
cmp
fisubl
sub
sub
inc
inc
xor
mov
dec
mov
mov
lods
sbb
sti
lret
xchg
and
or
sti
or
xchg
stos
jle
sub
mov
enter
stos
jg
add
mov
cmp
xchg
adc
cltd
pop
inc
rol
mov
push
push
mov
jae
adc
aaa
and
dec
stos
add
movsb
pusha
add
inc
jbe
mull
and
popa
aam
lcall
fimuls
push
sub
sbb
dec
or
icebp
cmp
std
lods
std
xor
or
or
hlt
jg
mov
jl
jge
arpl
mov
jno
cmp
cs
mov
pop
sbb
xchg
dec
adc
ja
add
push
call
insl
jge
fwait
out
test
cmpsl
jnp
shr
sbb
mov
inc
notb
push
cli
and
stos
jle
and
outsl
ficompl
out
jle
jae
inc
pop
shrl
icebp
dec
xchg
aaa
dec
sbbl
movsl
dec
mov
cmpsl
xchg
pop
cltd
push
bound
adc
push
sti
je
out
aam
iret
xchg
jmp
sub
insl
lock
js
push
scas
sub
lahf
out
and
lahf
cmpsb
jl
jnp
out
bound
mov
xchg
xlat
mov
repnz
stos
pop
push
adc
jp
push
insb
mul
mov
push
inc
ficoml
inc
push
inc
popf
out
ret
cmpsl
pop
nop
repnz
jl
sti
mov
xor
mov
mov
dec
movsl
lds
fdivr
call
dec
inc
jecxz
lahf
and
je
out
iret
idivl
stos
cmp
sub
mov
or
cltd
daa
push
idiv
aaa
nop
cld
sub
xchg
fsub
xor
in
gs
mov
mov
xchg
cld
es
icebp
pop
mov
jnp
cmpl
cs
mov
xchg
mov
imul
movsl
inc
xchg
xor
mov
or
mov
xor
stos
shrb
pop
gs
cwtl
sub
or
imul
dec
pop
fsubrl
incl
aas
test
mov
jbe
inc
insl
into
les
mov
and
push
rol
xor
cli
push
ret
xor
andl
int3
fadds
xor
clc
inc
or
cmp
sbb
aam
add
fmull
fsts
jbe
mov
fsub
mov
arpl
mov
ja
xor
repz
into
sbbb
dec
jl
call
mov
lds
jp
lahf
pop
ficomps
out
lds
cwtl
mov
jno
or
clc
xchg
nop
cmp
je
test
rcrb
fs
lahf
movsb
fadds
orb
testb
add
cmp
shlb
xchg
adc
loop
or
test
jp
cli
xor
pop
sbb
adcl
loope
add
and
call
and
gs
mov
pop
jne
xchg
sbb
outsl
jb
divb
test
pop
fnsave
push
cmp
cmp
jae
mov
imul
sbb
sbb
fstps
xor
and
popa
in
mov
sbb
mov
pop
fdivp
dec
inc
inc
inc
lods
fucomip
fildl
xchg
push
arpl
lahf
jg
mov
cld
pop
push
xchg
fldenv
xor
pop
cmpsl
call
das
add
scas
xor
adc
into
jp
adcb
sbb
cmpb
loop
pop
push
cmp
jno
push
fldl
cmp
adc
sbb
ljmp
pop
pop
outsb
imul
repnz
lret
sti
into
nop
test
lock
in
fcoms
fdivrs
cmpsl
xchg
fs
daa
jne
das
cli
inc
icebp
mov
or
test
mov
xor
and
dec
scas
cld
and
push
mov
mov
mov
imul
pop
popf
pusha
add
mov
jg
mov
test
or
in
mov
pop
sbb
mov
dec
inc
pop
mov
inc
mov
ret
insl
xchg
xchg
mov
dec
sub
popf
das
jo,pn
cmp
cmp
and
jnp
fdivs
cmp
jge
outsb
mov
mov
mov
adc
leave
jecxz
iret
insb
push
dec
sbb
dec
std
pop
mov
inc
sbb
dec
mov
out
mov
inc
fldenv
or
test
lahf
test
push
lods
icebp
and
xor
xchg
pop
and
dec
add
jae
inc
test
dec
arpl
xchg
mov
arpl
or
pop
jp
mov
jmp
lret
jno
mov
xlat
rcrl
dec
jmp
mov
jb
in
fcmovu
xor
rcrl
aaa
es
es
cmc
gs
lea
jae
inc
xor
or
mov
imul
xchg
scas
jmp
xchg
xchg
xchg
stos
mov
in
mov
out
push
sub
mov
mov
jnp
in
cld
data16
push
pop
data16
mov
mov
push
mov
and
jne
jno
pop
xor
lea
xchg
xchg
or
xor
inc
xlat
xor
or
outsb
mov
mov
enter
fwait
cmp
rcrb
xor
mov
scas
movsl
jg
dec
dec
sub
pop
adc
and
ja
xor
push
std
jmp
pop
je
inc
daa
mov
out
jae
sbb
imul
sub
xlat
push
sahf
pop
cltd
sub
cli
fs
scas
outsb
hlt
xchg
xlat
stc
adc
into
xchg
shlb
mov
rcl
leave
incl
push
icebp
rorb
stos
gs
movsl
aad
leave
inc
ror
arpl
divl
pop
lock
imul
iret
negb
shll
add
divb
aam
pop
or
cli
push
push
iret
xlat
jne
xchg
je
mov
sub
pusha
clc
mov
in
fs
sub
or
bound
fidivrs
outsb
jle
mov
leave
icebp
mov
cmp
sbb
add
sbb
icebp
mov
mov
gs
inc
adc
push
shl
push
insb
sbb
inc
lods
je
lcall
jb
and
lcall
mov
sub
sub
add
test
sub
jae
repnz
xorl
testl
xor
lds
push
in
das
mov
cwtl
pushf
jae
test
dec
cmp
sbb
push
add
lret
pop
ret
and
in
xchg
xchg
or
in
inc
fdiv
dec
cmp
ja
loope
inc
call
icebp
lcall
push
jge
je
mov
and
nop
pop
clc
loope
xor
push
lods
mov
hlt
dec
pop
int3
mov
popa
test
movsb
sbb
push
add
je
rolb
and
loop
xchg
mov
pop
dec
mov
mov
loope
push
ja
dec
or
test
pusha
adc
test
or
push
movsl
cmp
outsl
mov
mov
push
push
xlat
dec
push
out
sbb
adc
sub
mov
and
mov
mov
inc
dec
in
and
jp
pop
jle
out
lock
lcall
xor
add
shlb
mov
inc
clc
mov
xorl
inc
adc
pop
sbb
jl
mov
push
or
addr16
jg
mov
insl
pop
dec
mov
into
aaa
jge
xchg
mov
into
sahf
filds
xchg
js
cmpsb
sahf
xchg
push
adc
and
js
jl
inc
mov
jns
xchg
xlat
pop
push
mov
push
int
mov
pop
test
jne
mov
and
test
mov
mov
dec
ds
or
push
cwtl
push
mov
xchg
cmp
push
mov
iret
and
int
mov
push
inc
cmp
pop
dec
pop
cmp
sahf
add
add
adc
add
jge
scas
sbb
mov
decl
icebp
repnz
fmull
imul
jae
inc
loope
aam
outsl
push
fbld
ret
xor
inc
or
xchg
shlb
dec
ret
dec
cwtl
dec
scas
mov
jb
xor
xchg
jae
and
in
mov
sub
test
cmp
dec
pop
lret
lcall
adc
dec
rolb
stos
cld
in
repz
scas
jae
pop
stc
mov
mov
xchg
cmp
jmp
sbb
addr16
iret
call
xor
or
xor
test
inc
outsl
std
push
shl
imul
fildll
lcall
jns
addb
jnp
das
in
arpl
jns
lods
data16
push
addb
inc
mov
xchg
sbb
mov
test
popf
sub
jl
imul
sahf
dec
sbb
sti
mov
pop
aaa
jp
mov
inc
push
pop
pop
pop
sahf
fisubrl
js
adcb
jno
cmc
jg
jo
push
pcmpgtb
mov
mov
cmp
popa
into
aad
mov
mov
jp
sbb
push
lock
and
mov
pop
jp
mov
pop
and
fnstcw
inc
xor
fwait
mov
cmpsl
fisubl
pop
out
inc
cmp
push
cld
insb
test
xor
dec
or
loopne
cltd
jmp
sbb
xchg
add
xchg
adc
xchg
repz
mov
cmp
test
mov
pop
mov
cmpsb
sub
pop
ljmp
subl
dec
add
or
mov
mov
idivb
inc
sub
lods
jno
mov
insb
or
ret
neg
in
xlat
xchg
out
jle
mov
adc
mov
xchg
xchg
push
aam
pop
std
push
outsb
in
mov
xor
shrb
mov
xchg
rcrb
jae
fisttpll
sbb
lret
enter
add
dec
into
xor
sub
stc
aaa
cmpsb
test
cld
dec
in
add
pop
xor
adc
cwtl
enter
je
cmp
lea
or
dec
cmp
and
push
adcl
inc
lds
inc
mov
cld
adc
dec
jne
stos
popf
jae
ret
insb
pop
mov
mov
test
mov
stos
fisttpll
imul
xor
cld
lcall
xor
or
pop
sahf
js
cmc
aad
shll
mov
mov
xchg
xlat
data16
jnp
daa
es
sub
clc
mov
gs
dec
daa
mov
out
int
sbb
btr
ja
call
mov
fstl
cld
inc
aad
and
out
movsl
pop
jecxz
cmc
scas
push
lret
pop
inc
orb
jb
mov
mov
out
stos
push
cmc
mov
inc
mov
loope
mov
les
pop
pop
or
xor
rorb
lds
jns
clc
cmp
int3
xor
pop
adc
add
xor
push
dec
push
pop
out
jb
insl
push
and
leave
test
dec
push
movsb
out
jae
and
mov
sarl
pushf
mov
sbb
sbbl
lcall
ret
push
mov
icebp
loope
notl
jbe
mov
adc
jb
in
pop
into
ficoms
inc
pusha
add
aad
aas
pop
pop
cld
test
movsl
dec
aam
mov
push
push
popa
outsb
add
jmp
mov
push
test
xchg
insl
sahf
sbb
stos
or
xor
ret
into
push
dec
icebp
lds
xchg
nop
adc
xor
pop
push
movsl
ljmp
clc
adc
inc
cmpsl
cs
enter
adc
fucomip
lock
mov
mov
popf
jge
xor
scas
mov
hlt
push
add
in
push
stos
xchg
mov
mov
aam
push
notb
mov
inc
add
xchg
add
xlat
cld
adc
sbb
or
cmc
xchg
jecxz
outsb
popl
mov
mov
xchg
int3
xor
movb
inc
jb
rolb
xchg
xor
shrl
subb
mov
stos
fldl
lahf
pop
inc
nop
das
cmpsb
push
in
jno
cmpsb
out
dec
mov
and
mov
push
fstl
scas
adc
jge
inc
fcomi
in
lcall
pop
add
icebp
adc
arpl
fbstp
mov
sub
jno
mov
dec
movlps
inc
xchg
mov
add
mov
test
pop
mov
fdivl
dec
shll
sbb
sub
mov
adc
mov
cmp
in
orl
sub
iret
outsl
int
pop
idiv
enter
fwait
pop
pop
setns
adc
ja
mov
rcrb
jle
or
and
push
ss
repnz
cmp
mov
es
push
jae
mov
je
pop
mov
pop
mov
xor
in
mov
call
jns
jge
sbb
cs
mov
je
add
lods
fimull
jo
pop
rcll
mov
mov
inc
inc
bswap
mov
sub
jp
fists
xchg
inc
add
lods
mov
mov
jbe
sub
lcall
loope
lcall
jmp
xor
out
icebp
test
sahf
in
lock
sti
divl
lods
cmpsl
out
sub
shl
and
mov
xlat
pop
adc
mov
mov
cmpsl
sahf
mov
mov
mov
jno
daa
les
add
adc
adc
into
mov
pop
inc
or
fisubs
imul
lcall
mov
insl
sbb
pop
nop
sbb
mov
sub
cmp
adcl
mov
add
test
sub
lods
mov
adc
pushf
xor
or
into
xchg
cli
mov
push
sub
lahf
pop
mov
ljmp
addr16
scas
into
fnstenv
pusha
xchg
sarl
rol
dec
cmpsl
and
sub
lahf
outsl
loopne
neg
stos
mov
push
sub
or
lea
inc
cmp
push
dec
xchg
xor
jg
in
dec
ss
movsb
add
or
loopne
out
fs
mov
gs
fsubs
jo
jg
outsb
sar
xor
stc
and
mov
pop
xchg
jmp
pop
adc
pop
negb
or
dec
into
push
jecxz
jl
pop
lea
nop
sbb
fwait
or
mov
ja
pop
ret
jp
lock
jmp
nop
or
push
bound
loop
data16
mov
arpl
ret
popf
or
sbb
cmp
loopne
loope
or
sub
fldt
ss
jecxz
sub
mov
loope
push
xchg
push
jns
in
clc
leave
fstp
fidivl
roll
fistpl
imul
cmp
andl
cltd
pop
aaa
outsb
and
push
rorb
in
stos
jnp
adc
in
in
cmpl
lock
xchg
push
dec
add
in
aam
aam
xor
lods
lods
das
pop
pop
int3
xchg
push
xchg
dec
pop
xor
ljmp
lret
pop
mov
test
xchg
sub
sahf
cmpsl
and
dec
loopne
jle
das
imul
and
sti
xchg
push
push
mov
orl
clc
push
add
pop
dec
out
cmp
movsl
dec
fwait
jno
mov
inc
xrelease
mov
lret
xchg
mov
flds
or
cwtl
movsl
rcll
cmp
mov
subb
scas
pop
subb
cmc
sub
test
add
push
sub
fiadds
leave
jmp
repz
mov
push
xchg
out
inc
mov
aam
in
loopne
push
test
cld
cmp
cwtl
cmp
mov
fs
xchg
push
ds
mov
pmulhw
xlat
ret
inc
jp
xchg
inc
adc
and
cld
mov
jae
jo
int
fs
lret
fcomi
clc
test
inc
out
pop
xchg
jae
mov
sbb
xor
pop
pop
push
cmp
xlat
daa
pop
and
stos
bound
xchg
loopne
jl
xchg
mov
sub
pop
loopne
je,pn
jp
test
mov
fucomp
mov
loope
pushf
es
mov
or
or
jo
jbe
ret
sub
imul
rcll
mov
or
addr16
je
inc
adc
and
das
jge
xor
arpl
es
insb
clc
imul
mov
mov
pop
in
and
xchg
sub
arpl
arpl
hlt
sti
out
mov
mov
jge
mov
insl
xchg
push
jle
inc
mov
aaa
scas
scas
sbb
lret
sub
adc
cs
xchg
or
fstl
loopne
jno
sbb
scas
xchg
test
xchg
jl
mov
sbb
push
sub
loop
mov
lds
jo
in
jo
leave
jnp
hlt
mov
mov
pop
pop
xorl
mov
cmp
pop
or
jmp
mov
mov
push
lea
xor
or
ds
push
mov
mov
leave
rolb
and
xchg
xor
inc
jo
out
mov
test
les
ret
dec
adc
stc
cs
pop
cmp
add
cmp
aas
rcrl
mov
insb
aam
or
mov
jge
nop
in
xchg
lret
xorl
clc
xchg
loope
xor
outsb
mov
lds
clc
jecxz
sbb
inc
jle
push
jbe
js
dec
xor
fs
sbb
incb
mov
xchg
xchg
mov
jb
or
out
jmp
lods
ficompl
es
scas
subl
push
inc
mov
add
mov
gs
outsl
push
push
and
mov
mov
add
xor
popa
sub
iret
push
rcl
adc
push
xchg
xor
inc
rclb
aas
sub
cltd
pop
xchg
lock
lods
sbb
aaa
mov
add
and
dec
mov
xchg
in
jl
loope
mov
mov
inc
stos
je
lret
lahf
inc
fbld
sbb
repnz
push
popa
jae
sbb
sti
sbb
out
mov
push
pop
cmpsl
int3
popa
cmc
inc
sbb
or
mov
movsb
mov
in
add
dec
jl
bound
pop
in
insb
add
cltd
test
sahf
jns
dec
push
xchg
and
push
je
add
test
aad
stos
das
bound
and
pop
into
push
push
ret
push
pop
mov
sbb
int
gs
cmc
nop
cwtl
inc
pop
xlat
pusha
cmc
cmpsb
loope
xor
cli
lahf
adc
adc
lods
adc
inc
sbbl
sbb
jne
inc
sbb
adc
ds
loope
andb
inc
mov
subl
mov
or
ds
mov
inc
and
push
fistpl
and
std
cmp
pop
adc
add
mov
and
sbb
fnsave
jp
ss
xor
inc
mov
lret
orl
cwtl
fcoml
fildl
lds
mov
jle
outsb
int
gs
jecxz
scas
stc
int
mov
mov
lods
das
or
xchg
lods
add
imul
icebp
push
popa
sub
push
sbb
xor
lahf
cmp
cmp
out
lods
xchg
xor
sbb
and
add
rorb
jb
xchg
mov
xchg
fwait
mov
jl
mov
cld
ret
pop
test
enter
inc
xchg
iret
repz
out
cltd
dec
aad
sbb
iret
insl
mov
jnp
xchg
fistpll
ret
js
pop
loopne
lods
clc
cmp
sub
cmp
into
mov
negl
pop
shll
aaa
dec
dec
lcall
loopne
cli
xor
jnp
icebp
and
les
sub
and
sbb
imul
add
aaa
mov
xor
rcl
or
popl
pop
shrb
push
scas
pop
jmp
int
andb
dec
sbb
mov
test
stc
mov
cmp
jne
jnp
pop
rcrl
cmp
into
mov
sub
sbb
and
movsl
cmp
cld
movsb
int3
add
ret
push
push
sbb
add
cli
push
pop
push
pusha
and
pop
inc
ja
insb
adc
cmp
fs
inc
pop
cmpsb
mov
out
lods
dec
or
rolb
push
bound
sbb
or
mov
outsl
jle
loopne
cmc
mov
push
pop
xor
in
sbb
scas
push
or
push
out
sbbb
fisttpll
mov
xor
inc
push
add
xchg
fidivl
std
dec
xchg
loope
ffreep
and
xor
inc
adc
icebp
and
shr
cmpsl
add
ret
call
push
xchg
mov
fcoms
incl
jecxz
add
into
pop
xchg
cmp
das
xor
adc
aad
orb
scas
pop
jp
mov
sub
xor
add
in
movsb
jo
loop
sbb
jne
mov
stos
out
xchg
lret
pop
mov
dec
ret
and
pusha
ror
imul
cmp
xor
jle
ret
ret
and
fcompl
push
cmpsb
fisubs
shr
inc
andb
mov
push
dec
jns
push
mov
push
mov
pushf
mov
andl
xchg
fnstsw
insl
adc
or
jb
sbb
stc
es
lods
lods
cmp
cs
pop
cmpsl
mov
add
jle
popa
sbbb
inc
popf
adc
pop
fcoms
and
and
inc
cld
and
in
sbb
aam
mov
pop
and
testl
xchg
xor
jle
xor
jge
push
mov
xchg
cmpsl
mov
outsb
jnp
push
rclb
pop
or
push
nop
xor
and
push
mov
repz
pop
in
cmp
repz
sub
sub
xor
sbb
ss
mull
jo
loopnew
cmp
nop
gs
pop
sub
testl
mov
cmpsb
mov
xor
arpl
cmp
push
fstpl
push
cmp
push
pusha
or
outsl
js
aaa
mov
jbe
pop
mov
adc
cmp
movsl
mov
test
push
sub
jnp
test
lret
add
dec
inc
cmpsb
mov
adcl
sub
pop
mov
int3
inc
loopne
mov
out
jns
shll
sub
test
cmp
push
dec
jecxz
jl
pop
cmp
outsb
idiv
mov
imul
mov
jo
in
jl
xchg
mov
mov
sbb
inc
cli
sbbl
cld
cmpsb
sub
icebp
fisubl
adc
popa
clc
cmp
xlat
cmp
xchg
pushf
dec
lds
ss
aas
fnstsw
test
sbb
rolb
cmpsb
fistpll
sub
xor
inc
jl
or
xchg
rcll
pop
mov
iret
lea
sub
out
fsubrl
test
bound
cli
in
jmp
and
popa
repnz
and
and
adc
xchg
xchg
lcall
mov
and
jmp
scas
fs
in
clc
ret
adc
add
out
cmpl
jo
les
mov
sub
jg
mov
inc
push
cmpsb
and
sbb
mov
aas
jecxz
pop
in
out
sarl
inc
shlb
jo
out
adc
xchg
les
mov
or
jb
ljmp
sti
dec
fsubrl
pushf
mov
ret
lret
adcl
es
lret
cmp
lret
mov
mov
push
fwait
imul
stc
inc
xlat
fstpl
ljmp
adc
repz
fdivr
xor
cltd
ret
and
sar
arpl
fcompl
xorb
dec
jno
stos
jae
mov
movsl
xor
xchg
sub
or
fsub
fucomi
loope
cmpsb
mov
pop
sub
andb
xor
pop
push
rcrb
jmp
cwtl
subb
pop
mov
jae
xor
cmp
pop
dec
cmp
aas
jb
cmp
sbb
hlt
push
jmp
mov
cmp
dec
rorb
sbbl
xchg
lock
je
dec
cwtl
and
pushf
adc
fstpl
sub
pop
jmp
or
xchg
xor
stos
add
jno
push
or
mov
into
xchg
lret
ret
push
ret
cmpl
cmp
push
ds
fidivs
data16
aaa
and
push
push
xchg
add
xor
push
and
add
rcl
mov
or
jg
pushf
add
add
lods
push
outsb
leave
xchg
jg
cmpsb
fisttps
lea
and
mov
repnz
adc
cmp
roll
in
xchg
stc
xlat
dec
stc
xorl
push
cmpsl
mov
pushf
mov
add
mov
xor
adc
clc
dec
jnp
in
inc
mov
push
push
mov
pop
addl
nop
divb
outsl
push
shll
ret
cmp
sbb
adc
xchg
sub
shlb
out
mov
add
mov
lahf
dec
fmul
push
xor
lret
cli
popf
sahf
ficoms
repz
jo
mov
xchg
out
push
repnz
cmc
nop
outsl
shll
fldl
push
out
fidivl
mov
inc
pop
mov
ss
and
sub
cld
dec
inc
pop
sub
sbb
jg
adc
mov
push
lahf
dec
lret
outsl
dec
lock
add
fsubrs
mov
push
test
das
outsb
pop
xor
add
fistl
dec
or
inc
mov
mov
rcrl
in
xor
sub
popl
mov
push
test
add
or
and
ss
lret
cs
out
ret
movsb
xchg
leave
rorb
jns
xchg
rolb
jae
xor
cmpsl
lods
sbb
ss
fimuls
xchg
xacquire
cmp
push
jns
cmp
jmp
pop
mov
jmp
outsb
sbb
aas
push
pop
pop
jb
std
cmp
frstpm(287
addr16
jl
enter
clc
mov
stos
cmp
fmuls
mov
mov
in
popa
lea
out
mov
mov
push
inc
into
pop
pop
jl
aad
or
add
xchg
jnp
lock
inc
mov
push
sub
cwtl
mov
or
dec
sbb
cs
pop
add
mov
ds
jle
lret
fisubrl
xorl
push
xor
inc
movsl
push
fucomp
bound
add
adc
sti
add
cmp
cmp
add
mov
sbb
test
aas
dec
jno
out
xchg
leave
cs
mov
jo
ds
stos
fwait
fdivr
test
cwtl
jecxz
std
rcrl
adc
stc
lods
enter
cs
fs
dec
xchg
shr
call
push
test
mov
sub
jnp
cltd
inc
or
mov
int
push
aaa
out
js
into
dec
in
adc
pop
jne
nop
cli
or
cmp
insb
aas
mov
sti
push
add
clc
mov
out
mov
in
pop
shlb
xchg
cmp
test
dec
sbb
and
stos
cli
push
pop
and
sbb
ret
or
jno
inc
cli
loop
mov
stos
inc
jae
in
or
cmpsb
pusha
in
jl
lds
sbb
out
push
sbb
fnstenv
push
adc
imulb
jecxz
addl
inc
sub
iret
mov
mov
idivb
and
mov
xor
loop
into
mov
dec
ljmp
leave
fisubl
adc
sti
and
mov
andl
push
rcll
xor
dec
sbb
mov
dec
leave
jae
popf
icebp
test
sub
jge
testl
nop
or
imul
addr16
cmp
sub
mov
mov
adc
bound
leave
mov
shrb
clc
mov
ss
mov
ss
jne
mov
xchg
bound
repz
dec
out
fwait
jnp
cwtl
rol
sub
int
aaa
cmc
pop
aam
jle
aam
adc
enter
sub
movsl
flds
outsl
sub
sub
sti
int3
pop
lock
ss
sub
lods
ljmp
adc
push
xchg
add
rclb
ret
lcall
push
daa
push
jo
xor
fcmovbe
sbb
or
add
mov
popf
push
add
cmp
repz
cmp
in
shll
pop
gs
test
shll
inc
xor
cmp
aaa
mov
rol
enter
mov
jmp
inc
inc
or
shrb
lods
inc
mov
mov
pop
arpl
int3
jg
iret
or
xor
insl
femms
push
push
dec
movl
daa
mov
fstps
jnp
faddl
insl
and
mov
js
std
out
push
and
dec
sbb
test
pushf
or
inc
enter
push
popa
popf
pop
mov
pop
in
stos
out
shl
pop
pop
outsb
mov
enter
push
popf
cltd
mov
ret
or
or
jns
xor
jne
fwait
aam
xor
arpl
loopne
int
xchg
push
rolb
ja
out
or
call
imul
jecxz
dec
sub
push
ret
adc
push
imul
and
mov
aas
mov
ret
test
pushf
fmuls
test
adc
test
imul
into
jo
es
or
lods
jge
insb
jns
out
pushf
out
addr16
mov
jmp
xchg
pop
xchg
aaa
les
add
mov
xor
push
lcall
imul
sbb
inc
inc
push
ja
pop
mov
in
or
cmp
cmp
mov
cli
pop
aam
test
xor
push
dec
jge
sarl
inc
pop
jae
jmp
icebp
sar
call
pop
mov
dec
push
mov
sbb
clc
cld
ret
iret
in
adc
jnp
sti
in
pop
imul
cmp
mov
jmp
and
cmp
movsb
shlb
or
test
mov
loopne
jl
pop
xchg
test
mov
dec
push
lock
push
push
gs
std
mov
les
sub
xchg
sub
jmp
jle
lcall
lea
adc
sub
sub
pop
mov
clc
sub
adc
jge,pn
push
test
cmpsb
inc
fildl
cmc
loop
js
adc
lcall
cmc
mov
push
sub
jecxz
in
cmpsl
xchg
scas
pusha
inc
mov
pusha
mov
sub
out
in
aas
divb
in
ret
jmp
test
add
cld
push
sub
and
lods
mov
shll
adc
and
mov
xchg
cmp
cmp
in
jl
rorl
mov
sahf
inc
movsb
out
insb
test
loope
mov
inc
xor
mov
push
mov
enter
or
cltd
rorb
mov
jl
jl
cmp
ss
call
cmpsl
scas
pop
movl
lcall
jo
dec
je
inc
push
enter
cwtl
stos
ss
jne
jo
push
ja
icebp
jno
cmpsl
in
in
cmp
int3
dec
loop
sarl
cli
enter
das
je
pop
xorb
pop
int
dec
test
enter
push
mov
pop
xor
jbe
int
lcall
lret
test
fdivr
insl
mov
push
inc
mov
outsl
ret
out
sub
mov
jle
gs
gs
mov
test
mov
pop
or
or
pop
hlt
popf
pop
fistl
jl
lods
js
and
sub
push
jb
push
sahf
fwait
enter
movsb
xchg
loope
cmp
xor
dec
leave
and
sbb
sbb
loope
lods
stc
lods
pop
leave
cvtdq2ps
hlt
mov
xchg
push
in
fdivr
repz
sbb
xor
add
jns
mov
ret
mov
inc
pop
subl
dec
subb
inc
sbb
sub
and
pop
and
les
bound
aam
fdivs
xor
or
add
mov
stc
in
cmpsl
dec
jo
sbb
cli
hlt
gs
jge
inc
mov
movsb
sti
fwait
dec
movsb
pushf
lret
xchg
divb
jmp
mov
mov
mulb
rep
mov
push
pop
mov
aad
jl
ja
in
inc
push
lock
std
jns
insb
dec
xchg
mov
popa
push
add
jns
pop
fidivrl
loop
jp
and
data16
shrl
mov
adc
stc
dec
ds
cs
mov
sahf
fldl
aas
mov
mov
xor
inc
rcr
mov
aas
or
test
fimuls
hlt
inc
pusha
mov
mov
movl
inc
mov
popf
sar
add
fldenv
int3
fsubl
and
bswap
inc
test
and
es
frstor
cwtl
movsl
cli
pop
pop
loop
jge
dec
into
lcall
js
repz
iret
cmc
mov
jl
push
arpl
mov
push
fistpll
jge
pop
or
imul
ds
jns
aaa
jae
jecxz
adc
gs
mov
pop
dec
les
ret
xchg
stos
jp
inc
and
push
cmp
sub
lock
scas
dec
outsl
test
in
or
push
inc
xchg
adc
fdivr
cmp
add
xchg
in
pop
push
adc
adc
or
inc
out
mov
movb
iret
loope
dec
mov
scas
adc
jle
scas
scas
push
inc
aam
cmp
jb
sub
xchg
stc
lahf
lods
sbb
dec
push
cmpsl
aaa
out
imul
jbe
mov
ljmp
gs
xor
paddb
xchg
adc
inc
push
mov
xlat
cld
fcomi
push
push
fcmovbe
aas
test
shr
jl
jno
arpl
test
inc
ljmp
dec
jl
iret
iret
xchg
jecxz
and
lea
aaa
mov
pop
test
pop
cmp
jg
push
ja
sbb
shlb
jl
cmp
push
cmp
or
mov
pop
push
fimuls
inc
push
cmpsl
popa
adc
push
test
scas
popa
xor
sub
xchg
push
out
loope
out
sbb
mov
cmp
or
xchg
in
sbb
inc
nop
in
stos
fimull
jmp
test
mov
aam
js
in
lods
mov
loop
out
daa
fs
cmp
jecxz
test
inc
or
adc
pushf
sub
jns
cmp
ss
jo
dec
in
lock
sbb
bnd
adc
cmp
adc
iret
adc
loopne
js
js
push
in
xchg
nop
cmp
mov
jmp
mov
stos
sbb
ds
pop
popa
cmpl
insl
pushl
adc
movsb
and
ret
sbb
jl
xchg
lret
and
fiaddl
iret
adc
xchg
movsl
fsubl
in
push
leave
jae
daa
imull
shlb
out
sub
orl
cmp
popa
and
mov
adc
lock
mov
inc
jne
test
clc
and
pushf
pop
leave
inc
lahf
sub
sub
add
ficomps
out
movsl
mov
ljmp
dec
dec
and
inc
popa
cmp
mov
jl
popl
xor
sbb
into
std
sbb
movb
addr16
xor
jle
or
scas
add
cwtl
xchg
or
lods
mov
inc
mov
add
push
sbbl
pushf
jmp
and
pop
and
arpl
pop
aas
cmp
add
mov
pop
jmp
cmpsl
fs
in
outsl
xchg
jecxz
cmp
mov
inc
jp
dec
call
shl
incb
xor
fbstp
add
jl
out
je
sub
test
jae
ss
sbb
cs
iret
sbb
ds
xor
xchg
xchg
sbb
xor
push
rorb
xor
addr16
pusha
lds
subl
sub
nop
cmpsb
pop
cld
pusha
mov
mov
popf
lret
xchg
fcmovbe
xchg
push
sbb
jns
jns
out
xor
push
xlat
xlat
lcall
lahf
ret
cmpsl
dec
dec
cs
xor
push
aam
dec
out
adc
insb
sub
mov
rcl
mov
mov
and
gs
cmp
aam
in
and
lods
jmp
mov
jle
sub
lret
les
adc
out
mov
or
ret
lock
out
push
out
push
mov
sbb
add
and
lret
inc
mov
push
push
jb
xchg
jmp
enter
ret
mov
sub
stos
movsl
pop
add
mov
in
or
xor
int
movsl
sti
add
out
punpcklwd
xchg
call
fisttps
and
outsl
jmp
pop
mov
in
inc
mov
addr16
scas
cs
scas
xorb
mov
cs
hlt
mov
add
mov
std
xorl
sub
adc
inc
ss
mov
inc
and
push
inc
scas
mov
iret
jle
shl
mov
or
mov
test
pop
out
faddl
push
cmp
push
mov
add
cli
jno
cmp
xor
jl
sbb
data16
lds
push
popf
pop
orl
and
ret
mov
ror
imul
jle
and
mov
mov
pop
adc
jge
clc
ljmp
or
stos
add
jle
scas
rol
xor
xchg
mov
xchg
mov
dec
jecxz
xchg
sti
add
cmpsl
dec
stos
repnz
cmc
pop
lds
and
mov
dec
rolb
stos
xchg
leave
fbstp
jl
sub
and
gs
in
mov
sarb
pop
pop
sti
repnz
adc
je
sbb
and
or
ret
scas
sub
lods
fldl
jns
movsb
sbb
mov
and
cwtl
aas
outsl
rcl
jg
jecxz
pop
rorl
cmc
inc
mov
adc
ds
into
add
pop
pop
mov
std
scas
out
mov
fdiv
push
out
das
inc
rolb
inc
jb
repnz
mov
jmp
cmp
mov
xchg
cmp
mov
loope
xchg
push
aad
push
and
inc
mov
cmpsl
not
lods
xor
xlat
jg
xchg
icebp
clc
dec
pop
loop
aaa
stos
pop
scas
dec
movsb
mov
lahf
out
jle
jo
into
out
cld
xlat
mov
leave
mov
sbbl
enter
sub
add
mov
sbbb
scas
dec
pop
lcall
mov
dec
add
pushw
push
dec
mov
pop
xchg
stos
jmp
mov
sub
int
sbb
fnsave
insl
cld
pop
enter
das
dec
sub
pushf
dec
sub
jmp
popa
movsl
mov
push
lods
mov
inc
lods
sbb
out
or
or
stc
call
mov
testb
xchg
mov
sbb
nop
pop
dec
jg
jmp
cmp
mov
xor
loope
adc
dec
xor
adc
inc
pop
mov
mov
gs
data16
xor
push
push
lds
sbb
hlt
pop
dec
cltd
stos
add
jbe
jne
arpl
imul
and
aaa
jecxz
pop
pop
adc
stos
sbb
adc
jge
stos
mov
cmp
fcmovnbe
mov
mov
xchg
sub
out
pop
jle
adc
push
fidivl
dec
fxch
sbb
pop
loope
stos
push
inc
pop
lds
dec
in
push
add
mov
jl
mov
repz
inc
insb
fcmovnbe
leave
iret
fisttps
js
jbe
xor
xor
mov
or
test
mov
adc
call
xchg
xlat
pxor
into
test
out
inc
dec
arpl
jae
out
in
cmp
fcompl
in
cli
jp
daa
clc
shr
shrl
mov
jmp
out
mov
xchg
jnp
jl
scas
out
xchg
js
pop
jae
outsl
mov
in
mov
movsl
mov
shll
in
push
push
add
jg
pop
fucomp
adc
aas
lea
mov
test
daa
jno
cltd
and
and
mov
loope
cld
push
add
adc
jnp
mov
adc
push
test
jnp
sub
adc
daa
cltd
sub
and
xchg
mov
push
fdivr
jne
dec
mov
jne
add
mov
int
cmpsb
and
rcl
leave
nop
fldcw
or
std
inc
mov
sub
daa
divw
or
sarb
je
lcall
dec
inc
inc
mov
lods
jecxz
cltd
daa
xchg
daa
ljmp
inc
cmpsb
mov
sub
xchg
mov
fidivs
xor
int
add
lods
xor
lret
push
inc
pushf
dec
adcb
je
push
in
rcll
push
outsb
iret
push
sbb
sahf
mov
dec
sbb
xchg
ljmp
fdiv
cmp
lea
jb
fidivrs
rcrb
adc
sbb
ds
insl
addr16
add
dec
scas
or
inc
pusha
shr
sub
cmp
jle
push
loope
push
ret
movsl
xchg
dec
arpl
xchg
movsl
pop
mov
pop
loope
ret
outsl
ljmp
lret
pop
adc
cmp
or
notb
cs
shrl
and
mov
and
jns
in
mov
in
fistl
filds
xchg
and
or
rcrl
pop
stos
addb
jae
iret
sub
fs
mov
jge
out
xchg
lds
daa
rcrb
and
rcrb
inc
sbb
and
mov
and
ds
xor
outsb
test
fildll
mov
aam
jmp
stos
xor
scas
cltd
sbb
addr16
outsl
pop
insl
fsubrl
popa
pop
movsl
ds
pop
mov
or
jge
pop
mov
cmp
dec
test
inc
dec
jle
sub
pop
lods
int
loopne
add
add
out
jmp
test
sbb
fisttps
xor
dec
mov
std
daa
and
test
add
dec
in
lret
loope
dec
xchg
rorb
add
iret
push
mov
divl
movsl
mov
sti
mov
stos
mov
xorl
sbb
add
in
adc
push
add
lcall
sbb
lods
mov
and
aas
sub
inc
and
shll
sub
stos
cld
mov
fstpl
dec
decl
ss
pop
mov
jbe
pop
xor
sub
into
in
repnz
notb
divl
or
cmp
icebp
dec
dec
mov
or
scas
adc
fsubs
mov
mov
int3
inc
mov
mov
and
je
or
rclb
fiaddl
loopne
cli
lock
mov
sbb
or
xchg
xchg
lds
mov
mov
loope
push
fimuls
sub
aaa
mov
lcall
sub
shrl
aas
and
mov
insb
or
lods
add
aad
mov
bound
or
jns
mov
mov
fwait
int3
loop
lret
mov
cmp
xchg
xchg
icebp
xlat
pusha
xchg
cli
dec
stc
or
pop
fidivrs
adc
sbb
jmp
es
sub
jmp
hlt
addr16
jbe
outsl
push
call
pop
and
scas
movsl
aaa
mov
adc
mov
cmc
cmp
mov
pop
sahf
out
test
daa
and
or
mov
mov
push
jmp
sbb
mov
sub
jge
jno
clc
jecxz
lods
vpackssdw
sbbb
lahf
xchg
push
int3
fsts
cld
inc
jp
jae
adc
jmp
cmpsb
and
shll
xor
inc
or
jp
mov
bound
in
cmp
out
shr
repz
fidivrl
sub
movsl
or
cmc
xor
xor
sbb
in
jle
sbb
sub
mov
aaa
setnp
out
push
movzbl
stos
rcll
fcoml
subl
dec
mov
icebp
outsl
or
sub
jns
ret
fprem
and
mov
inc
popa
pop
aad
fistpll
mov
sub
popf
mov
fs
push
inc
sub
and
data16
xchg
sti
jo
clc
clc
into
out
add
jno
loope
dec
cmp
test
jl
jbe
into
push
movaps
call
and
dec
shrl
movsl
sbb
leave
or
adcl
add
andl
fidivs
sbb
jmp
xor
xchg
mov
mov
lds
aad
enter
xor
adc
clc
dec
jns
cmp
sbb
and
cli
mov
dec
mov
movsb
test
xchg
push
call
rorl
pop
fisubrl
popf
inc
lret
clc
or
aad
rcll
sub
inc
fistpl
outsb
mov
test
mov
dec
push
dec
test
cmp
adc
mov
rep
push
cmp
iret
push
sbb
push
xor
adc
and
inc
sarb
out
sub
sub
adc
lea
hlt
bound
or
jp
test
stos
cmpsl
lcall
dec
mov
gs
mov
push
hlt
pop
xchg
sub
lret
jge
pop
push
fldcw
mov
mov
aam
cmpsb
dec
in
and
cmpsb
aad
loop
lods
and
and
sti
pop
pop
sbb
sahf
pop
testb
out
add
push
push
test
lea
inc
pop
repz
cmp
popf
xchg
aaa
xchg
mov
inc
arpl
outsl
jl
cmp
or
cmpb
mov
icebp
push
adc
js
xor
dec
add
cld
andb
and
jnp
mov
xor
ss
cmp
out
adc
cli
jbe
pop
mov
testl
scas
or
sub
adc
mov
mov
mov
test
inc
xor
push
int
mov
and
es
cli
sbb
sub
add
int
cltd
adc
rcr
xchg
inc
pop
mov
sbb
rorb
push
mov
add
inc
mov
ficomps
nop
mov
cmc
adc
lret
xchg
add
push
or
idiv
mov
cwtl
sub
je
lahf
jb
jl
add
stos
sbb
fsub
ja
jbe
xor
xor
ret
movsl
int
out
lods
sbb
or
fmull
loop
fisubrs
into
sbb
mov
or
loopne
pop
outsl
xchg
call
or
push
enter
jle
mov
repz
push
in
pop
loope
adc
pop
push
fidivl
rcll
ror
xchg
jae
mov
clc
push
xchg
jo
mov
sarb
mov
inc
push
lods
loope
xchg
jle
popa
out
pop
cmp
lret
ret
test
sbb
inc
xor
into
daa
mov
dec
jg
repz
mov
jo
scas
xor
ds
leave
lahf
jl
leave
dec
test
call
jmp
aad
push
mov
cmpl
sbb
mov
std
mov
fsubrl
jecxz
iret
popf
stos
xchg
xlat
cwtl
fists
lods
das
sbb
inc
add
outsl
pop
and
sbb
mov
enter
xchg
pop
mov
aas
sbb
aam
dec
sub
mov
adc
in
xor
push
xchg
dec
pop
lods
fs
mov
shlb
push
sub
ret
pushf
in
add
push
cvtps2pi
jmp
orb
jp
bound
inc
dec
jp
sti
loop
fwait
mov
ffreep
adcl
sarb
mov
aas
jns
mov
test
ljmp
adc
mov
out
popa
cmpsl
negl
xchg
xor
pop
jne
insb
add
pusha
popa
mov
pop
fdivrp
push
pop
dec
cmp
dec
sub
mov
std
lret
inc
flds
ds
clc
or
mov
add
jo
xlat
jne
arpl
fldl
arpl
fstpt
cmp
aad
stos
push
in
mov
std
pusha
shll
aad
push
push
mov
push
push
xchg
or
dec
shll
sbb
jae
mov
lret
stos
loopne
add
xchg
sbb
sbb
loope
sub
sub
xchg
jmp
and
notl
int
xor
xor
inc
sub
jp
shlb
add
pop
in
add
inc
fstl
movsl
or
movb
test
das
adc
aas
pop
in
movsl
mov
dec
and
inc
imul
xchg
sub
add
mov
clc
mov
add
sub
pop
adc
scas
out
push
push
setl
add
ret
aam
pop
mov
mov
fwait
jl
std
adc
pop
fnsave
es
jl
std
xchg
out
pop
sub
shlb
push
mov
in
jae
jns
loop
fidivrs
adc
es
sbb
int
jecxz
mov
mov
adc
jle
jmp
test
xchg
cmpsl
xor
ljmp
jmp
cltd
decl
idivb
or
outsb
xor
fucomip
fwait
addr16
jmp
jl
jmp
fldl
xchg
mov
lds
lcall
push
and
test
in
or
inc
repz
pop
sub
int3
popf
cmp
into
sbb
roll
mov
pop
fcomps
mov
arpl
and
in
push
int
ja
lods
dec
scas
adc
jle
mov
sbb
rolb
sub
xor
stos
pop
into
dec
jp
cmp
mov
dec
adc
push
mov
movsb
sub
add
and
bound
jnp
pop
push
cwtl
xchg
clc
push
shrb
dec
imul
push
daa
add
gs
sub
mov
jae
add
cmp
jo
fwait
stos
or
pop
push
fcoml
xor
es
or
mov
sub
xlat
fwait
lcall
push
push
popf
xchg
aam
hlt
arpl
adc
push
stc
pop
dec
bnd
xchg
out
cmp
cmp
fcompl
testl
push
mov
mov
inc
jne
shlb
and
sbb
fstps
in
adc
xchg
add
fiadds
mov
mov
jge
cmp
and
or
xor
pop
and
daa
sub
scas
jbe
xchg
ja
sub
cmp
out
int
adc
ss
mov
xor
or
imul
ret
push
jmp
imulb
sub
jbe
int3
add
adc
adc
mov
sub
into
xor
mov
mov
mov
int3
nop
cwtl
mov
out
movsl
aaa
lods
adc
ja
insl
int3
jbe
jmp
movsb
pop
jg
in
xor
das
dec
mov
pop
push
inc
into
mov
sbb
xchg
movsl
movq
int
sbb
jo
loope
push
inc
dec
cltd
sbb
mov
repnz
pop
pop
sub
mov
movsb
cmp
imul
mov
jge
test
fistps
mov
movsl
mov
cmp
add
push
push
or
loopne
out
aas
bound
loop
pop
punpckldq
lods
test
pushf
faddp
xor
std
push
popa
jae
mov
cmp
jle
dec
ja
les
adc
or
popl
cmp
or
xor
add
xchg
pop
adc
and
mov
mov
pop
stc
ljmp
inc
and
add
dec
lret
pop
ficompl
inc
shll
subb
and
addl
enter
xchg
pushl
cmpsb
add
jecxz
add
clc
addr16
pop
divb
and
test
movsb
mov
jmp
cmpb
or
mov
mov
das
sub
jno
and
cwtl
flds
stos
repnz
outsb
popf
and
jns
pop
adc
out
jne
imul
dec
lahf
enter
shrl
xchg
or
pop
fs
mov
xchg
push
add
and
sar
das
cmp
push
jmp
mov
cli
mov
popa
jne
mov
adc
mov
movsb
adc
jnp
pusha
push
lcall
push
push
out
mov
in
lahf
iret
sbb
mov
jae
outsl
cmp
fcomi
push
mov
ss
push
and
pop
fldcw
insl
mov
or
in
xchg
mov
insb
bound
pop
push
cld
pop
and
mov
iret
jno
lret
cli
cmpsl
xor
sahf
mov
arpl
sub
int
sub
xchg
shl
xchg
test
adc
inc
jnp
out
xlat
pop
inc
sub
outsb
mov
xor
inc
insl
outsl
mov
add
xor
cmpsb
inc
inc
pop
clc
mov
sub
movsl
and
inc
mov
ljmp
mov
mov
pop
sbb
push
or
xor
insl
jp
jg
inc
neg
dec
pusha
shl
pop
adc
jne
mov
xlat
scas
pusha
popf
sub
sub
data16
dec
insl
adc
fcmovu
mov
dec
mov
mov
cmp
mov
push
mov
inc
xchg
out
jle
xor
loope
test
or
xor
jle
movw
pop
jge
jge
add
push
shr
push
enter
filds
jg
and
les
pop
test
fsubr
or
adc
fldl
cmp
stc
divl
jns
mov
mov
movsl
push
loopne
insl
xchg
fbld
jae
mov
xorl
dec
adc
es
insb
in
test
repnz
dec
and
mov
loop
repz
and
xchg
cmc
jge
movb
inc
fdivrs
fsubs
cmp
cltd
mov
enter
push
mov
xor
jb
insl
push
hlt
call
and
and
jmp
mov
aad
das
pop
jl
pcmpgtw
push
hlt
sub
xchg
stc
mov
leave
andl
inc
lret
out
xor
xchg
or
pop
loop
add
xchg
or
or
push
or
jno
push
int3
out
sbb
daa
add
add
fsubp
pop
dec
js
imul
ja
test
inc
sub
stos
inc
mov
jae
jns
cs
int3
sbb
notb
das
mov
insb
outsl
push
xor
mov
jns
or
add
fimull
test
mov
mov
sbb
sub
cltd
dec
fcmove
inc
xorl
inc
push
mov
lret
xor
cmp
lock
sarl
lods
cmpsb
lret
pop
mov
sbb
xor
das
sbb
lds
popa
mov
into
inc
fs
je
sub
jg
ja
out
jnp
lds
ja
mov
test
inc
cmpl
mov
dec
push
mov
mov
popa
icebp
dec
and
js
jle
cmp
test
fldenv
bound
stos
add
mov
inc
arpl
addr16
adc
xchg
or
out
mov
mov
dec
into
aad
mov
jnp
jmp
adc
fldcw
pushf
sub
add
in
rorb
sbb
cmp
ret
ret
xchg
mov
subb
jbe
fcomps
push
sub
out
inc
cs
bound
loop
push
lret
mov
xor
mov
insl
daa
orl
push
inc
stos
pop
insb
cmp
pop
mov
cmp
xor
mov
jge
lahf
gs
aas
mov
ja
xchg
pop
or
in
gs
jb
adc
or
xchg
rcr
ljmp
xchg
adc
pop
pop
xchg
and
mov
xchg
lahf
rep
xor
inc
add
addr16
test
fs
or
arpl
sbb
test
int3
xlat
adc
rorb
pop
mov
sbb
push
push
add
xchg
xor
dec
into
dec
out
fiadds
lods
enter
mov
sbb
jne
cmpsl
pop
pop
pop
lods
push
hlt
movsb
imull
and
jmp
mov
pusha
dec
iret
pushf
push
data16
inc
jge
sub
leave
fisttps
pop
mov
pop
test
popa
rorl
insl
aad
shrb
popa
out
push
sub
loopne
push
aam
daa
inc
mov
leave
cmp
loope
pop
lock
cld
out
test
push
popf
pop
dec
out
push
rcl
cmp
dec
scas
stc
jmp
dec
jp
in
xor
rcll
imul
jmp
clc
push
jb
shrl
or
pop
jbe
mov
adc
adc
rorl
or
leave
loopne
iret
jnp
imul
test
or
jmp
inc
mov
jne
inc
jmp
popa
subl
xor
outsl
ret
lods
aaa
bound
cld
sub
lcall
cmp
inc
mov
xlat
aam
inc
mov
mov
pop
outsb
cmc
lahf
ret
stos
loopne
out
mov
adc
ror
add
inc
outsb
add
fmull
adc
xchg
dec
push
pop
xchg
hlt
aam
call
out
mov
test
mov
inc
test
cli
cwtl
cmpsb
or
mov
insl
xlat
popf
jmp
xchg
xchg
iret
sbb
fbld
ret
inc
mov
icebp
adc
jne
addps
in
mov
jmp
dec
xor
dec
pushf
xor
sub
pop
adc
mov
dec
sbb
in
mov
insl
pop
test
jns
gs
inc
dec
sub
mov
dec
shl
popa
or
jp
push
leave
adc
mov
jg
adc
es
testb
push
aas
jl
out
sbb
adc
call
and
sbb
or
decl
and
stos
pop
addr16
jns
xchg
or
mov
sub
fsubrl
pushf
fwait
jns
xchg
push
xchg
pop
outsb
ret
imul
cwtl
sti
icebp
rorb
test
imul
daa
and
popf
add
lret
sub
movsb
xchg
sahf
lods
into
mov
nop
cwtl
ja
andl
out
popf
xchg
imul
loop
loop
or
jge
or
lods
push
mov
mov
and
sub
push
ss
inc
mov
inc
xor
pop
push
jle
mov
lock
cmp
sub
xorl
pop
les
jmp
idivb
movsl
sbb
data16
mov
gs
pop
je,pt
mov
mov
sbb
in
push
mov
dec
dec
inc
mov
cmc
dec
stc
clc
xor
cwtl
mov
dec
add
mov
inc
dec
xlat
xor
xor
cli
add
imul
cli
or
pop
or
xchg
and
lock
rolb
cmp
jecxz
pop
xchg
pusha
xchg
cltd
fptan
stos
pop
pop
push
out
cmp
loope
sub
pushf
js
dec
jae
or
dec
mov
pop
mov
dec
cmpsl
data16
cltd
sub
mov
rcrl
mov
xor
or
mov
mov
sbb
test
rclb
cwtl
jg
or
ss
out
in
pop
dec
popf
les
mov
icebp
lret
fldl
inc
pop
imul
aaa
push
nop
push
cwtl
add
popa
sbb
inc
test
jnp
lods
fldenv
sub
jge
cmp
mov
push
cltd
jmp
call
lea
clc
arpl
std
in
rclb
mov
cs
in
jno
jecxz
shlb
add
sarb
push
inc
lock
stc
outsb
fcmovnb
shll
inc
mov
pop
push
dec
leave
push
mov
jecxz
std
pop
lods
xor
sarl
mov
sub
cmpsb
sahf
fidivrl
xchg
adc
loope
movb
inc
cld
out
popa
insb
jle
push
mov
stos
sbb
push
xor
mov
or
imul
push
fstl
sub
xchg
rcr
pop
sbb
popf
push
addr16
jg
push
mov
pop
ds
faddl
sbb
ja
mov
lock
repz
out
cmc
movsl
cmp
push
mov
fs
jmp
fst
jo
pop
push
xchg
lret
xchg
popa
loopne
cwtl
sahf
pop
dec
and
pop
popf
stc
inc
push
lods
dec
orb
mov
sarb
or
add
movsb
out
ret
and
es
mov
out
jl
imul
and
adc
std
popa
pop
movsl
cs
pop
fistl
mov
mov
sti
iret
cmpsl
loope
adc
push
sbb
scas
stos
push
clc
mov
popa
mov
clc
adc
cmp
and
push
test
push
dec
inc
loop
xchg
adc
dec
fs
movsl
mov
sbb
and
clc
out
movsb
mov
add
es
jg
dec
mov
into
jle
popf
sbb
xchg
cmp
scas
jmp
push
dec
jecxz
cli
mov
js
mov
lahf
pop
push
daa
data16
adc
shlb
pop
mov
push
pop
movsl
movsb
pushf
mov
mov
adc
fists
pushf
sbb
std
jle
pop
cmp
xor
push
xor
pop
clc
mov
outsl
dec
jb
xchg
movl
push
daa
mov
mov
ficompl
jp
xor
or
nop
push
and
add
cld
jle
and
lret
rcrl
pop
jmp
cltd
mov
lret
in
imul
repnz
inc
xor
and
mov
push
xor
mov
cmp
dec
xor
sub
pop
adc
adc
loop
xor
push
cmc
call
push
pop
gs
ja
jbe
push
add
ljmp
sbb
push
adc
popa
ret
int3
push
es
xor
mov
jns
jo
scas
sbb
fldt
mov
jbe
inc
inc
jno
mov
bound
aas
mov
outsb
sahf
out
dec
out
jae
xlat
jecxz
daa
daa
xchg
cmpsl
in
scas
cld
xchg
cmc
or
and
test
pop
pop
push
mov
sarb
movl
mov
or
mov
sbb
mov
sbb
insb
jecxz
shll
sbb
dec
ds
xchg
in
xor
adc
sbb
mov
data16
aad
out
js
out
ror
mov
lahf
push
cmp
imul
int3
mov
stos
fisubl
sbb
popa
lret
xchg
add
test
pop
cmp
jge
inc
sbb
stos
mov
mov
pop
xor
sub
dec
repz
jle
imul
dec
jge
and
ret
sbb
xor
jmp
xchg
sub
jo
mov
adc
jecxz
xchg
sub
stos
scas
sbb
repnz
sub
out
sbb
repz
cmp
cmp
das
das
int3
inc
jl
push
or
sub
jmp
addr16
xchg
mov
sbb
inc
nop
dec
pop
cmp
ljmp
sbb
hlt
pop
xchg
pushf
fistps
outsl
arpl
pusha
adc
cli
mov
not
das
pop
and
pop
or
dec
in
mov
rolb
fisubrs
mov
or
and
sub
cmpsl
cmpsb
sbb
jl
xor
mov
pop
adc
cmp
mov
adc
mov
cli
xchg
jg
jg
lods
mov
and
push
sbb
rcr
out
loope
jle
inc
sbb
cld
test
les
cmp
scas
add
push
pop
sbb
push
push
mov
lods
sub
pop
xor
outsl
mov
dec
mov
and
lods
insl
fistl
in
mov
mov
sub
insl
mov
xchg
and
sbb
xchg
dec
inc
fistpl
sbb
ljmp
mov
add
add
push
sti
dec
mov
mov
insl
adc
push
cmp
filds
sarb
push
add
fadds
mov
mov
add
rcll
das
pop
cmpsb
lret
lods
pop
push
lds
rcrb
out
rcr
push
mov
gs
pop
dec
push
out
add
mov
mov
push
sub
cmp
mov
xchg
cli
sar
push
nop
xor
sub
popf
fcomip
mov
mov
pop
mov
imul
sahf
add
sub
or
add
test
imul
rcl
push
cmpsl
cmp
or
mov
dec
jns
std
iret
in
inc
jle
inc
test
in
sbb
lahf
aaa
decb
xchg
mov
adc
push
adc
cmpl
pop
mov
cmp
int
jno
cmp
mov
push
xchg
xchg
inc
mov
pushf
adc
dec
lods
dec
xor
mov
xor
inc
push
cwtl
rcrl
push
pop
add
mov
ror
push
popa
mov
repnz
aam
mov
and
shl
pop
mov
push
mov
and
je
and
lahf
sahf
enter
sbb
fistpl
dec
cmp
or
xchg
js
popa
sub
jle
xchg
push
cmp
mov
fdivr
jl
inc
adc
pop
in
pop
push
frstor
mulb
int
push
scas
pushf
and
movsb
shr
xchg
dec
xor
jne
fiaddl
repz
jb
push
outsl
cmpsb
and
stos
cmpsb
imul
xchg
hlt
xchg
cltd
or
gs
push
das
inc
push
aad
dec
jl
sahf
sbbl
inc
int
and
push
xchg
add
addr16
mov
mov
arpl
fwait
mov
push
mov
jl
lret
lret
lcall
mov
out
scas
mov
das
lds
mov
jge
add
scas
mov
mov
or
pop
xor
sbb
nop
lret
dec
aam
out
out
test
mov
sub
or
stos
sub
and
cltd
xor
xchg
pop
jb
mov
or
shll
pop
in
sbb
inc
xchg
cmpsl
lods
xor
or
dec
mov
pop
pop
int3
in
mov
mov
jo
faddl
mov
shll
pop
mov
pop
mov
cmp
add
repnz
mov
fldcw
cwtl
outsl
and
sub
or
stos
into
mov
hlt
jno
adc
jl
call
callw
icebp
nop
mov
cmpsl
mov
add
cli
dec
jae
mov
mov
js
and
inc
mov
push
cmpsl
mov
flds
adc
je
mov
scas
ja
pop
daa
pop
push
cld
fpatan
lcall
out
jg
jb
lods
sbb
out
test
data16
aad
clc
add
or
xor
inc
mov
xor
jl
sub
mov
lcall
repz
in
addr16
int
mov
dec
dec
fcoml
inc
ss
test
jge
add
xchg
push
jne
or
rorb
loop
out
adc
add
out
pop
adc
xor
xchg
inc
imul
cmp
stos
push
adc
mov
jno
mov
pop
xchg
xchg
aad
mov
mov
das
hlt
jle
inc
movsb
or
and
xlat
mov
sbb
insl
test
inc
xchg
ljmp
vpsllq
jb
bound
xchg
jnp
xor
or
dec
clc
cmp
pop
mov
enter
mov
int3
push
adc
rorl
cmc
pop
out
iret
insb
fadds
and
adc
and
ret
iret
decb
add
icebp
lods
popl
dec
pusha
in
add
pushl
mov
adc
movl
cld
data16
mov
sti
mov
out
cmp
into
into
add
jb
sbb
sahf
fisttpll
pop
mov
test
js
push
pop
xchg
xor
mov
fcmovnbe
icebp
test
or
inc
or
mov
insb
mov
jecxz
nop
in
out
std
jno
xor
sbbb
lea
jb
mov
js
outsb
sbb
adc
mov
xchg
iret
outsl
add
bsf
stos
cmp
iret
xchg
add
pushf
mov
fildl
pop
icebp
xor
ret
aad
scas
test
test
add
push
testl
movsl
mov
mov
psrlq
push
ficompl
push
aam
ljmp
mov
repz
dec
push
repz
in
fnstenv
or
in
cmpsl
cmp
or
popf
mov
jecxz
notl
add
js
test
jle
out
pop
and
int
fidivs
scas
fldcw
lret
imul
jecxz
dec
mov
and
inc
stos
jmp
mov
dec
lock
push
pop
jp
mov
test
in
fildl
or
std
loope,pn
push
jecxz
decb
mov
jmp
sub
push
mov
adc
lahf
inc
repnz
out
fstps
cmpsb
inc
cmpsl
test
fs
sub
xchg
nop
imul
shlb
data16
pop
mov
fdivs
mov
xor
gs
mov
xchg
jl
rcrl
fisubrs
cmp
int
jne
je
mov
dec
mov
xchg
hlt
push
cmp
sub
mov
cs
adc
int
es
mov
shlb
mov
push
add
mov
ds
xor
loope
xor
rorb
inc
shll
cltd
fcoms
sbb
repz
add
rcll
dec
fstpl
lahf
add
dec
fsubrs
imul
sbb
lcall
stc
loop
mov
cmp
jmp
mov
in
popf
pop
jne
cli
sar
das
push
incl
icebp
mov
push
outsl
pop
dec
pop
dec
jle
sbb
push
in
push
fidivl
add
sbb
pop
xchg
dec
cmp
rcr
jno
ret
xchg
or
daa
inc
sti
xor
sub
movsl
mov
rol
xchg
mov
and
inc
xchg
addr16
dec
data16
fstps
shll
cltd
test
inc
pop
insl
out
sbb
gs
mov
imul
add
arpl
outsl
cltd
jg
push
clc
jle
pop
call
add
xor
sbb
cwtl
rcl
mov
pop
insb
loopne
jecxz
add
inc
mov
xor
data16
out
sub
pop
cmpl
push
push
mov
cli
pushf
and
mov
sti
mov
sub
pop
movsl
std
inc
pop
std
andl
adc
sbb
imul
mov
xlat
lds
rcrl
pop
push
aam
xorl
adc
jno
div
and
cmp
xor
dec
sub
xchg
smsw
xchg
daa
cwtl
int3
xlat
xor
mov
xchg
inc
mov
out
pop
mov
les
aaa
out
pop
and
js
sub
sbb
mov
xchg
aaa
mov
aad
dec
icebp
pop
mov
ss
icebp
mov
out
mov
jmp
mov
adc
add
fistps
mov
xor
push
movsl
je
push
clc
xor
jle
fsubrl
lds
inc
sub
sub
pusha
dec
pop
cltd
inc
fistps
push
testb
mov
sub
sub
ja
xchg
scas
push
movsl
stos
jb
popa
loop
fiadds
cs
add
negb
test
mov
sbb
lea
inc
push
divb
mov
loope
inc
stos
out
mov
lods
mov
push
imul
jmp
pusha
jle
mov
sbb
pop
sbb
aas
js
dec
xchg
sbb
aam
lahf
xor
pop
clc
sbb
mov
cmpl
add
push
hlt
xor
push
aaa
sti
xor
getsec
mov
aam
das
imul
and
push
sahf
loopne
fcomps
jae
int
lret
mov
mov
mov
dec
popa
pushf
gs
mov
push
adc
or
jg
dec
or
jge
cld
ja
mov
jo
test
aad
or
addr16
js
jae
sbb
imul
andb
xor
xchg
subl
bound
add
lods
pop
jle
cmc
push
cmc
enter
xor
mov
inc
mov
sbb
fdivr
dec
hlt
dec
neg
mov
add
mov
sbb
in
sub
add
aaa
inc
jmp
push
mov
jle
xchg
mov
push
lds
loop
stc
jmp
cmp
cmp
mov
pushf
dec
out
dec
jg
cld
ds
jno
pop
xor
cld
lcall
jo
add
sahf
lock
push
sbb
and
mov
jb
jne
mov
divb
pop
cmp
push
fwait
test
ds
sub
add
sbb
lahf
aas
mov
add
dec
mov
or
test
adc
rcrl
sub
test
icebp
xchg
jge
jb
sahf
dec
and
sbb
and
out
mov
xor
cwtl
in
mov
jmp
sahf
cmp
data16
or
pop
incl
mov
loopne
jnp
sarb
int3
ret
int3
cltd
mov
mov
iret
imul
add
mov
or
xchg
mov
icebp
push
stos
mov
xor
lret
pop
inc
mov
repnz
cli
and
cltd
mov
loope
xor
iret
dec
test
lods
push
loop
sbbl
or
and
adc
push
and
popa
mov
inc
bound
loopne
sub
clc
add
movsl
xchg
xlat
pop
pop
aas
cmp
into
add
gs
mov
fstl
popf
fdivrl
cmp
in
loopne
cmp
mov
iret
ljmp
mov
lods
sbb
fdivrs
adc
fcom
push
in
push
popf
xor
cwtl
cmpb
sbb
sub
stos
sbb
repnz
hlt
mov
ret
js
xchg
daa
xor
adc
sarl
inc
int
scas
mov
test
aad
mov
aaa
and
cmp
cmpb
jae
gs
and
repnz
aad
stos
xorb
jecxz
adc
inc
mov
mov
scas
shrl
pcmpgtd
sbb
inc
mov
adcb
ss
adcl
inc
imul
jno
jbe
pop
and
loopne
aam
and
cltd
jnp
xor
int
fs
dec
lds
cmpb
xor
inc
adc
arpl
jnp
ja
lret
mov
cmp
lret
fdivrl
stc
fstps
sbb
or
adc
push
lret
push
mov
jp
sbbl
xchg
in
push
or
stc
adc
ret
add
ljmp
sub
mov
push
jns
and
or
in
mov
push
repz
xchg
rcl
dec
mov
dec
mov
inc
in
adc
int3
enter
mov
cltd
sbb
xor
or
call
pop
push
push
mov
cmpsl
cltd
adc
cld
pop
cli
inc
xchg
dec
cmp
cmp
sarb
jns
xchg
shll
das
gs
mov
inc
xor
daa
shrl
mov
pop
jnp
pop
inc
push
cmp
push
data16
je
cmc
aam
mov
inc
cmp
insb
pop
adc
int3
sbb
push
cmp
mov
xor
dec
addr16
pushf
xchg
lahf
repnz
jne
pusha
sbb
leave
les
jb
mov
mov
push
mov
pop
push
push
repz
or
adc
lret
push
cli
test
shll
icebp
xor
push
fs
imul
mov
and
mov
mov
push
jnp
push
push
test
jmp
jbe
outsl
push
xor
xchg
ret
dec
cmp
jp
popf
js
cmp
bound
in
insb
cltd
xchg
dec
pop
or
mov
lret
mov
in
dec
hlt
adc
outsl
pop
dec
xchg
and
mov
cmp
scas
cmpsb
xor
cmp
xor
jno
test
imul
incl
imul
into
xchg
test
es
bound
daa
pushf
cltd
mov
and
xchg
leave
sahf
test
std
jmp
aaa
cli
pop
cmp
mov
jo
js
adc
or
mov
inc
mov
cld
xchg
push
repz
and
out
sbb
fidivs
ljmp
out
inc
mov
call
mov
xor
hlt
or
cmp
cmp
mov
and
mov
and
in
mov
daa
sbb
mov
and
add
mov
in
out
loopne
repz
out
xor
lods
scas
dec
ja
shrb
cmpsl
lock
insb
push
xchg
negb
outsl
test
stos
sahf
xor
es
icebp
cmpl
hlt
in
lahf
or
pop
out
push
xor
jnp
push
mov
repz
mov
inc
pop
sbb
rcrl
loopne
pushf
push
sti
add
push
dec
cmpsl
rorl
in
jnp
inc
test
into
cwtl
pop
loopne
xchg
cmpsl
in
dec
test
mov
jg
in
lea
push
mov
movsl
mov
xchg
mov
dec
push
stc
mov
pop
ficoms
cmpsb
pop
out
mov
popf
jge
pushf
repnz
lret
cltd
ljmp
ja
jb
lock
arpl
subl
sub
add
dec
js
stos
out
aam
mov
and
pop
cmpsl
mov
xor
pop
jecxz
inc
aam
xchg
jmp
cwtl
mov
call
push
mov
xchg
sub
inc
mov
lods
dec
dec
stos
add
sarl
cli
test
psadbw
lcall
cwtl
js
cmpsb
push
xor
xchg
mov
adc
pop
xor
hlt
outsl
xor
jns
insb
mov
shlb
or
sbb
add
dec
xor
mov
call
rclb
movsb
loop
inc
mov
mov
iret
call
enter
push
or
push
pusha
ljmp
lahf
inc
xlat
sbb
lods
bound
negb
inc
inc
ja
lcall
sbb
sbb
pop
cld
xlat
ret
xchg
outsb
xchg
in
sbb
push
cmpsb
push
jge
lahf
add
jno
lock
ret
lcall
push
fisubs
xchg
enter
mov
cmp
cwtl
sbbb
sbb
xor
sbb
cmpsb
notl
cs
xor
pop
fcomip
pop
jle
sbb
in
mov
sub
hlt
xchg
cltd
and
and
cmpsl
enter
lock
imul
cmp
inc
cwtl
pusha
js
stos
pop
inc
sbb
xor
psrlq
pop
out
je
xchg
sahf
or
repnz
pop
test
lods
ds
psllw
xchg
mov
test
imul
pop
cwtl
aas
push
sub
or
xor
fsubrl
fwait
sub
fwait
xor
add
xchg
imul
adc
test
cld
mov
orl
adc
repnz
clc
cmp
sub
lea
adc
xchg
repz
loope
and
sbb
mov
insl
push
push
ja
adc
mov
lcall
icebp
in
sti
and
mov
xchg
cld
mov
into
xor
pushl
loopne
dec
xchg
scas
pop
fistps
out
sbb
push
or
fwait
dec
call
mov
jnp
push
push
fists
movb
mov
les
inc
mov
inc
mov
jb
push
ja
rorb
nop
daa
mov
xchg
negl
mov
sub
inc
scas
mov
mov
push
jl
jg
adc
pop
fmul
daa
mov
movb
jne
sahf
cld
loope
popf
jl
scas
pop
pop
ljmp
test
in
cmp
mov
pop
cmpsb
push
xor
stos
sbb
out
sbb
xlat
setb
push
stos
dec
pusha
xor
sbb
dec
mov
xor
jno
pushf
push
popa
mov
loop
arpl
pushf
mov
add
call
std
pop
aas
adc
jne
fld1
cmc
xor
xchg
sahf
adc
push
and
std
cwtl
cmp
fwait
dec
mov
add
out
out
adc
sub
repz
adc
mov
popf
mov
arpl
pushf
xor
cwtl
pusha
xor
xchg
dec
vcvtpd2ps
or
paddb
fsub
inc
mov
lods
sbb
xchg
mov
insb
imul
ja
pop
nop
jl
jnp
sbb
in
daa
xor
and
loope
stos
mov
push
imul
xchg
pop
je
push
xor
xchg
push
jb
rolb
lcall
sub
pop
shrb
xchg
ss
dec
and
lret
fisubrl
xchg
stc
movb
aaa
popa
sarl
sub
iret
pop
rcrl
std
movsb
into
sub
roll
inc
fs
out
mov
gs
mov
cltd
cmpb
ret
xlat
shl
mov
push
ljmp
movsb
pusha
pop
push
xchg
mov
cmp
dec
mov
xor
push
mov
inc
into
xor
push
dec
je
pop
mov
lds
pop
cmp
stos
xchg
xlat
jo
bnd
mov
or
arpl
lods
aam
into
mov
cmp
jne
rclb
mov
push
inc
mov
dec
xchg
and
mov
pop
sti
sbb
loop
add
mov
test
or
repnz
add
outsl
repz
xor
jge
jle
push
lret
sbb
mov
mov
and
ljmp
push
pop
mov
int
out
outsl
xchg
mov
push
test
lods
repz
paddsw
fistpll
sub
push
xor
fldl
dec
nop
int
push
bound
xchg
inc
in
push
lods
mov
int
ds
cmp
xor
sbb
in
testl
in
inc
sbb
inc
idivl
stc
cld
fdivrs
pop
scas
jae
out
adc
and
sub
adc
inc
mov
pusha
lock
insb
not
push
jb
out
je
jne
cmp
lret
roll
mov
push
test
pop
outsb
lock
or
adc
mov
movsl
outsb
lods
mov
ss
jae
stos
in
bnd
cmpsb
xor
arpl
test
add
lea
push
data16
or
xlat
test
fstps
stc
xlat
jns
mov
sbb
jne
dec
imul
dec
sub
popa
mov
enter
xchg
pop
mov
add
hlt
out
cmp
inc
sbb
fidivrs
and
dec
movsb
mov
or
or
adc
xor
pop
push
mov
add
fsubrp
or
scas
jb
sarb
ds
xchg
test
cmpsl
sub
je
std
or
outsl
pop
aaa
push
mov
mov
pop
push
out
xchg
nop
add
adc
pushf
rcrb
loopne
pop
rcrl
add
jg
mov
dec
in
test
popa
negb
test
ljmp
sbb
sbb
xor
push
xchg
rorb
xchg
dec
sub
lret
pusha
faddl
dec
stc
xor
sbb
loopne
jbe
loop
or
or
hlt
mov
push
lcall
fimuls
enter
sbb
push
lods
sbb
xor
das
ret
jge
push
out
mov
mov
jg
aad
pusha
stos
daa
pop
decl
stos
mov
push
out
ss
imul
inc
jl
jbe
std
cmp
mull
add
das
and
cmc
test
cmp
test
lea
adc
or
aam
mov
scas
jmp
push
insl
xor
jmp
xchg
out
repz
jne
sbb
cmp
outsb
roll
mov
mov
xchg
add
mov
sbb
sti
pop
sti
jbe
shlb
out
jmp
scas
xchg
sahf
jnp
fbstp
dec
jns
push
push
and
push
in
cmp
in
rclb
pusha
xchg
and
pushf
cltd
or
lahf
pop
sbb
adc
out
add
xor
xchg
sub
fidivs
lock
sti
mov
pop
mov
nop
or
es
xrelease
les
stos
incb
in
jle
arpl
cmpsl
test
jmp
int3
jne
xlat
pop
ss
or
xchg
ret
notb
ficomps
push
xchg
into
stos
shrl
pop
jmp
rcl
push
sub
cmp
outsl
xor
and
jecxz
les
shlb
or
inc
push
jp
mov
test
mov
rcr
jmp
xor
cmp
mov
in
daa
xchg
pop
rclb
inc
dec
jge
popf
push
iret
mov
test
stos
fst
jl
mov
xchg
dec
repnz
add
or
decl
out
clc
out
test
xchg
add
loope
movsb
leave
in
xor
jnp
loopne
jecxz
call
add
sti
sub
push
je
inc
imul
stos
jl
imul
in
in
mov
int3
add
mov
rorl
fidivl
sub
jl
dec
sbb
mov
outsl
cli
pop
fldt
lret
sbb
mov
cmpl
test
cmp
inc
xor
mov
in
pop
fiaddl
fcomps
inc
ja
xchg
xor
xor
inc
and
adc
push
rclb
fildl
sub
mov
mov
mov
xor
insl
fs
dec
add
jg
repz
sbb
lds
cmp
fs
or
xchg
imul
xor
mov
inc
and
xchg
ret
inc
mov
addb
lods
lea
adc
ss
fwait
bound
xor
sbb
popa
pop
cld
popf
xlat
test
les
mov
fimull
xor
pop
mov
leave
filds
sbb
movsb
mov
inc
or
mov
daa
pop
stc
leave
push
daa
and
push
out
mov
sarl
out
cld
pop
xor
xchg
jl
sub
jl
ret
insb
dec
shr
cwtl
mov
cmpb
cmp
xlat
popf
fiaddl
leave
mov
dec
sbbb
cltd
push
mov
sub
insb
fdiv
pop
mov
jnp
pop
or
cltd
jl
xchg
test
mov
out
jno
repnz
mov
js
mov
cwtl
ds
push
popa
lods
cwtl
mov
dec
push
pop
mov
dec
arpl
push
mov
fldcw
jbe
dec
lcall
add
jne
fs
aaa
jbe
call
imul
iret
push
fisttpl
out
pusha
ret
lret
mov
test
push
aad
xor
dec
mov
jecxz
lock
iret
mov
mull
mulb
cmpsb
mov
fdivrl
sbb
sub
mov
out
jecxz
push
xchg
pop
lahf
in
push
mov
out
sub
or
and
jge
sub
mov
fimuls
xor
mov
shrl
arpl
cs
mov
adc
cltd
cmp
push
adc
or
or
dec
sub
test
in
xchg
inc
movsl
dec
es
ss
pop
out
and
jns
gs
or
test
xor
or
addr16
pop
or
jmp
sub
call
call
dec
les
mov
dec
fcmovb
push
xor
nop
jns
out
insl
mov
add
adc
ja
nop
rcrb
inc
orb
rcll
inc
cmpsl
or
jnp
clc
imul
or
test
jmp
fs
inc
imul
orl
pop
rorl
fs
push
cmp
pop
rol
outsb
aam
pop
xchg
xor
lods
mov
fisubrs
outsl
ja
rorl
out
cmp
xchg
fdivr
mov
push
mov
cltd
mov
add
cmp
pop
jg
inc
clc
insb
push
xor
js
mov
int3
popf
clc
pop
and
fs
repz
dec
dec
or
and
mov
jle
and
shrb
dec
jecxz
lods
cmp
fnstsw
pop
leave
xchg
sbb
xor
fldenv
pop
rcrl
jl
jb
pop
aam
xchg
ret
clc
out
push
sarb
insl
push
cmp
hlt
jle
sub
pop
out
cmpsl
mov
mov
xor
mov
in
adc
gs
rcrl
js
sbb
stos
test
jl
jl
xor
sbb
jb
lcall
iret
and
xlat
inc
push
sub
push
xchg
xchg
mov
inc
lahf
iret
inc
clc
inc
in
loope
push
incb
xchg
mov
mov
mov
fcoml
jmp
dec
jns
or
mov
add
movsb
in
aad
push
int
andb
pusha
aaa
sub
rcll
loope
es
or
adc
clc
jecxz
mov
in
shll
out
roll
adc
popa
mov
nop
add
dec
dec
xor
je
xchg
cmp
popf
pop
fiaddl
mov
mov
xchg
or
stc
push
jo
cli
fstps
inc
int3
icebp
pop
and
jle
mov
lcall
in
std
push
pop
push
adc
and
testb
dec
push
sti
jecxz
dec
xlat
sbbl
lods
dec
jge
loop
insl
aaa
mov
icebp
fs
pop
cmp
inc
leave
in
adc
leave
mov
mov
stos
sbb
or
xor
aad
xchg
pextrw
aad
push
stos
inc
shlb
es
lret
cld
mov
pop
lcall
or
or
cmp
mov
jmp
pop
cmc
andl
cs
push
lds
lock
mov
jb
push
dec
rclb
sbb
shrb
ret
mov
jnp
pop
cmp
incl
inc
in
pop
rorb
stos
pop
shll
insl
gs
out
aad
scas
out
mov
jbe
mov
js
pop
push
sub
lds
je
pop
pop
in
dec
dec
jae
das
iret
pop
xor
xor
ss
mov
fcomp
cltd
and
push
ds
mov
jg
jne
lcall
js
adc
inc
xchg
aad
add
mov
or
nop
jle
adc
adc
dec
mov
cmpsb
pop
inc
or
js
ret
data16
mov
xor
sbb
loope
in
and
or
shr
outsb
or
fisttpl
dec
lds
jbe
mov
sbb
push
xor
mov
add
pushf
test
xor
mov
repnz
pop
cs
lods
addb
mov
lds
xor
rolb
pop
aam
cmp
xchg
pop
inc
rcrb
jo
push
out
insl
shl
fsubs
sarl
into
or
jecxz
repz
add
test
cmp
sub
ljmp
lock
fists
out
cmp
push
cmpsb
ds
int3
adc
cmp
cltd
cwtl
repz
in
xor
inc
or
rorl
pop
shr
xchg
shll
lods
outsb
lods
sbb
loop
sbb
mov
fisubrl
or
xchg
mov
cmp
jle
inc
mov
push
addr16
mull
popf
pushf
in
sbb
and
mov
lock
xchg
pusha
dec
repz
sub
pop
add
push
cmp
aas
xchg
xor
pop
and
iret
or
jmp
fs
call
lahf
adc
rol
cmpsl
xorl
push
or
add
mov
out
ss
lea
sub
dec
xchg
cmp
roll
cmp
mov
dec
adcl
mulb
xor
jle
rolb
nop
cmpsl
cmpsb
xchg
jno
or
inc
movb
adc
inc
mov
push
xchg
sub
test
ds
jno
jns
xlat
test
cmp
imul
je
leave
mov
adc
mov
stos
cli
outsl
popf
pushf
jo
xor
mov
mul
lahf
clc
sbb
xchg
dec
sbb
fisubs
pusha
inc
and
dec
test
mov
xor
lock
push
or
lahf
xchg
jae
popa
push
loope
fwait
mov
scas
jmp
lods
xor
ds
fdivrp
popa
adc
je
cld
das
stc
lods
inc
out
lret
fstpl
ja
jmp
sub
sub
lock
test
push
jecxz
lods
and
out
nop
inc
repz
pop
les
and
push
setge
dec
adc
test
aas
inc
dec
xor
movsl
pop
lahf
sbb
dec
lcall
shlb
dec
pop
dec
adc
xor
mov
cmp
adc
popf
cmp
cmc
ds
add
data16
int3
lcall
outsl
lret
mov
pop
mov
or
mov
pop
dec
out
adc
mov
das
mov
mov
xor
mov
inc
or
and
filds
mov
stc
xor
push
dec
sbb
repz
lods
dec
mov
frstor
pop
sbb
mov
mov
jmp
cmp
rsm
lds
push
fdivrl
dec
inc
cwtl
movsb
or
pop
add
clc
addr16
dec
mov
popl
xor
xor
repnz
scas
aad
into
mov
add
cmp
dec
add
fdivl
xchg
fcmovbe
xchg
imul
fcomp
pop
xor
ja
sbb
and
lea
pop
cmp
sub
add
idivl
stos
enter
or
mov
xchg
test
rsm
mov
mov
call
pop
ljmp
xchg
int3
inc
adcl
das
in
out
sbb
dec
ffreep
adc
repz
outsb
in
or
fsubp
xchg
push
std
xchg
fs
push
out
addl
mov
add
jl
sub
cmpsb
cmp
in
call
popf
mov
mov
xchg
mov
aam
jge
out
push
cmp
inc
in
rol
das
adc
imul
gs
adc
imul
push
les
lret
movsb
sub
inc
orl
lods
dec
pushf
shrd
xchg
icebp
test
push
jb
js
cmc
rorb
dec
add
dec
xchg
aad
mov
or
and
mov
lods
sbb
sbb
icebp
xor
lahf
incb
inc
into
mov
popa
mov
int3
cmp
shlb
iret
push
or
mov
and
push
imul
bnd
arpl
sbb
shr
sti
test
add
push
cmp
mov
cmp
lea
sahf
leave
inc
cmp
xchg
push
rcrb
xlat
xchg
inc
mov
or
aas
test
pop
mov
shll
or
ficoms
ret
xlat
dec
and
xorl
rol
or
cmp
xchg
mov
inc
outsb
sahf
call
fistpll
and
out
ss
xchg
mov
fs
mov
jmp
add
je
xor
jp
js
in
sahf
sbb
cli
ja
add
jnp
addr16
inc
add
xchg
pop
cmp
into
and
add
jae
sbb
ja
scas
push
pushf
pop
dec
fnstenv
lods
add
push
and
push
cmc
imull
test
out
sarb
mov
adc
ret
add
in
es
icebp
orl
add
push
fsubrs
xor
outsl
movsl
pop
add
push
jle
lods
cld
or
sub
add
pop
call
inc
lock
lea
mov
mov
rcl
dec
int3
pop
cmpsl
pop
jecxz
xorb
fnstsw
cmp
ja
rcl
int
xlat
call
in
inc
sub
fcomi
call
push
cmc
mov
popa
sti
lds
out
into
add
cwtl
sbb
mov
jne
sbb
out
or
cli
jmp
sbb
xchg
pushl
sbb
mov
push
stos
inc
push
je
or
fimull
mov
mov
and
movb
stos
lods
insl
add
add
jo
hlt
dec
mov
repz
xchg
push
xchg
push
push
pop
dec
int3
xchg
call
fwait
sbb
addr16
mov
xchg
push
bound
pop
fstps
outsl
lcall
loop
clc
scas
mov
fstsw
add
es
mov
jge
push
mov
jp
hlt
adc
icebp
aad
es
pop
das
xor
inc
and
cmp
je
fistpll
movb
mov
push
push
lcall
sbb
dec
lahf
lea
data16
rcl
lret
aaa
mov
call
mov
add
xor
js
fnsave
lock
scas
insl
dec
rclb
inc
mov
das
fidivrl
push
popa
fdiv
dec
lret
push
rorl
xor
sub
ds
mov
sbb
mov
and
inc
nop
jne
sbbl
lcall
pop
push
fwait
inc
sbb
repz
jae
pop
jae
aaa
out
push
jae
sub
shrb
gs
mov
cmp
mov
dec
jbe
in
das
lock
xor
jle
and
ds
xchg
jbe
xchg
test
sub
xlat
mov
bound
es
stc
je
outsb
je
sub
call
daa
xor
daa
arpl
pop
inc
je
aas
and
fisubl
rol
std
repz
out
testl
mov
pop
mov
pop
jecxz
sub
xor
loop
cmp
testb
mov
cmpb
lods
push
xchg
imul
pop
loop
mov
test
fisubl
dec
loopne
lret
loopne
lea
or
push
ss
repnz
cwtl
fcmovne
mov
outsl
mov
mov
and
ds
sub
ds
jo
js
cmpsb
pop
dec
mov
loopne
mov
je
add
gs
out
mov
and
scas
jg
or
insl
cmp
pop
mov
adc
sub
inc
adc
cltd
loope
subb
dec
pop
or
mov
out
pop
in
xorb
mov
cmpsb
jnp
outsl
out
sti
clc
jno
mov
inc
xor
arpl
adc
mov
sysenter
sub
xlat
aaa
cli
repz
loopne
fbstp
xchg
mov
loope
pushf
fistl
outsb
outsl
mov
addw
lods
inc
jno
addb
imul
dec
jle
cmp
inc
xor
insl
cwtl
daa
int
cwtl
popf
jl
stos
enter
inc
fwait
lea
sbb
incl
aaa
rol
jg
out
aad
das
insb
xor
mov
xchg
xchg
mov
and
and
xor
in
fsubs
test
leave
lods
sarb
aam
lock
jo
rolb
dec
and
lods
lahf
push
daa
mov
push
addr16
xchg
xchg
movsl
sbb
fildl
mov
shll
mov
ljmp
mov
pop
and
sti
and
mov
inc
les
sbb
mov
popf
xchg
lahf
cwtl
mov
pop
arpl
inc
inc
sub
scas
sbb
sub
and
fs
push
mov
sahf
pushf
mov
into
jmp
xchg
sbb
loop
loop
push
jge
dec
lods
adc
pop
sub
push
lahf
jo
push
jecxz
jle
jg
fwait
push
fmuls
outsb
jb
add
xor
cmc
and
inc
popa
test
xor
pushf
dec
cmp
lcall
pop
jmp
shll
sub
pop
mov
mov
mov
xor
sbb
dec
ret
lods
dec
xchg
sbb
adc
aam
cmp
cmpsl
push
pop
inc
ljmp
and
stos
cli
mov
lea
lock
adc
inc
xchg
sbb
repz
sub
out
aam
and
loop
push
ret
cmpsl
push
sub
cmp
subb
pushl
push
lock
adc
sub
test
lods
fistps
pop
adc
and
mov
rol
repz
icebp
repnz
jecxz
sbb
std
in
dec
push
xchg
std
xchg
sbbb
rcrb
pop
shrb
divb
xchg
inc
push
lds
repnz
test
int3
mov
imul
int3
cmpsb
adc
je
repz
mov
mov
inc
aam
cwtl
mov
pop
jge
or
mov
sti
imul
jl
add
mov
jmp
inc
push
push
add
lds
aas
mov
lea
push
xor
lahf
movsb
pop
or
jg
sbb
shl
mov
hlt
fidivrs
xor
mov
jmp
pop
into
sbb
aad
fs
nop
fnstenv
pop
sbb
push
ja
sbb
jo
outsb
inc
and
test
nop
add
sub
mov
inc
adc
adc
jmp
icebp
icebp
mov
inc
out
dec
mov
mov
and
fwait
dec
loopne
sbb
arpl
test
jmp
aam
xor
adc
mov
push
sub
dec
sbb
ret
push
mov
adc
dec
sbb
jmp
sbb
lea
xor
leave
jmp
or
popf
xor
sub
dec
and
in
addl
pop
stos
xchg
inc
jno
js
scas
cmp
pop
or
jmp
movsb
stos
push
shlb
mov
push
ss
fcmovu
jmp
sub
clc
xchg
push
xchg
sbb
push
int
pop
lods
jle
and
fbstp
jge
xor
mov
inc
xor
cmp
push
shll
cmp
movsb
jae
jmp
mov
orb
mov
lcall
pusha
fldt
mov
mov
mov
jae
pop
fsubl
push
pusha
stc
cmp
xor
imul
push
sub
out
cmpsl
mov
or
adc
mov
mov
xchg
addr16
ljmp
lret
test
test
test
jl
fidivrs
mov
mov
xorb
lock
cmc
cmpsl
mov
les
rcrb
mov
outsl
jbe
mov
sti
xchg
stos
enter
fimuls
pop
xor
add
lret
jmp
ss
or
sbb
xor
out
inc
or
inc
sbb
in
fcoml
or
shl
inc
push
push
jae
aam
cmpsb
jle
dec
repnz
cmc
mov
sti
xchg
js
push
adc
bound
dec
loopne
fwait
clc
xlat
or
fidivrs
sub
shlb
fstps
lret
imul
js
push
shlb
icebp
or
xchg
xor
mov
and
jmp
mov
fstpl
not
add
fadd
sub
pusha
mov
xchg
push
jne
xor
push
sbb
repnz
jne
testl
sarl
push
cmp
xchg
mov
jle
add
xor
pop
mov
sbb
xchg
add
and
lcall
shrb
fs
cmp
xchg
das
jge
mov
push
pop
xor
lods
jge
sbb
push
xchg
mov
stc
repnz
mov
add
sbb
leave
out
insb
mov
sti
inc
add
adc
add
push
imul
adc
inc
fsubrl
lea
mov
lret
test
push
xor
xchg
add
mov
sub
std
and
add
sub
jno
push
ret
sub
jle
xor
adc
out
adc
sbb
scas
ret
je
adc
or
or
push
cmp
adc
xchg
inc
leave
and
adc
sbb
pop
data16
sbb
jnp
pop
jp
inc
or
dec
inc
test
outsl
adcl
and
xchg
dec
xchg
rorb
pop
scas
les
es
mov
hlt
scas
pop
and
inc
xor
inc
jg
mov
push
jg
cmpsb
pop
dec
fistps
enter
negb
pushl
cmp
enter
pop
pop
in
and
nop
in
dec
adc
dec
loopne
pop
add
mov
decb
push
loop
fisubl
enter
mov
fisttpll
lret
inc
ljmp
add
jecxz
pop
pop
jecxz
and
pusha
out
inc
in
call
test
and
cmp
std
jl
mov
jmp
mov
mov
negb
lds
push
out
xor
jmp
rclb
dec
jns
outsb
pop
je
pop
imul
fildl
jnp
sbb
push
cmc
in
loope
lahf
sbb
test
bound
or
lods
inc
inc
xchg
sub
out
jl
mov
ljmp
or
push
xor
test
lds
sub
pop
outsb
sub
lods
cld
ret
pop
icebp
fcmovu
cmc
xchg
notl
mov
pushf
addr16
sbb
sbb
testb
adc
sbb
mov
inc
or
ret
mov
ret
fnstenv
dec
or
subb
int
and
jl
mov
xchg
cli
jnp
sub
sub
xor
sub
cld
lea
fldt
jnp
outsl
out
xor
adc
jb
sub
sarb
call
addr16
mov
lods
jno
push
xchg
sub
inc
mov
sti
or
mov
insl
sbb
push
icebp
lock
adc
movsl
ja
repnz
jae
lods
sarl
sub
stos
in
sbb
jb
pop
push
sbb
adc
inc
and
mov
js
mov
or
lea
xchg
call
pcmpeqw
sbb
mov
notb
push
mov
int3
in
add
bound
mov
ret
imul
int
lock
cmp
out
cmp
fs
sbb
mov
ret
mov
sub
mov
mov
das
dec
xor
imul
lcall
ret
repnz
dec
fwait
movsb
cmp
mov
pop
les
addr16
cmp
clc
adc
bound
nop
inc
mov
icebp
pop
lds
adc
add
lcall
daa
push
push
mov
cmp
push
out
int
cmp
jmp
push
cmp
insb
jno
cld
fs
int
pop
lahf
pushf
inc
mov
mov
cmc
mov
add
xchg
jmp
adc
aad
xchg
mov
pop
xchg
pop
sbb
test
in
add
bound
ficoms
popa
mov
sub
mov
pop
mov
sub
aam
sbb
gs
jmp
add
sub
test
aaa
call
fldcw
xchg
lret
clc
enter
mov
mov
addr16
mov
push
cmpsl
cmp
xor
or
xchg
cmp
mov
adcb
dec
jno
pop
cmpb
in
jg
aas
pop
loope
lock
jno
xor
jns
dec
mull
mov
or
loop
cltd
out
dec
sub
fists
arpl
inc
ja
out
std
jmp
ret
inc
or
icebp
push
or
test
fs
dec
jmp
mov
in
cld
lods
fwait
or
inc
push
js
xor
cltd
jns
mov
imull
mov
pop
jbe
mov
bound
mov
push
pop
pop
fsubl
cmp
int3
fldcw
mov
lret
addr16
insl
fnstenv
push
mov
sbb
iret
mov
ja
cs
testl
sbb
sbb
push
shrb
repz
fstl
or
daa
sub
push
lea
jo
dec
dec
mov
rcl
dec
popf
sbb
mov
inc
loop
and
int3
adc
adc
stc
and
and
cwtl
mov
mov
jmp
and
push
arpl
jg
lock
pop
adc
mov
xor
movsb
jbe
fisttps
pop
leave
nop
cmpsl
test
mov
inc
int3
cmp
imul
aam
out
cli
xchg
sahf
inc
mov
jb
jae
movb
or
cmovo
xchg
sbb
ret
and
cmp
sbb
mov
fildl
inc
sbb
fnstenv
sub
sti
adc
mov
mov
push
ss
cmpsl
cwtl
xchg
shlb
insl
xchg
push
push
stos
jne
cmp
jo
je
int
lds
roll
cmp
sti
push
scas
loope
cwtl
add
int3
fcoms
ljmp
iret
repz
and
or
arpl
arpl
mov
adc
push
out
repz
inc
xor
scas
ds
in
and
jne
mov
lock
cltd
std
loop
test
daa
push
rorl
in
jnp
outsb
aad
cmp
pop
call
mov
gs
orl
orb
cli
add
cmp
mov
imul
add
stc
int
cmp
pop
bound
and
fimuls
inc
dec
jbe
mov
push
daa
cltd
pop
out
aas
loope
add
jno
xchg
movsl
imul
test
add
jo
pop
jecxz
jb
sbb
push
imul
xor
adc
addr16
imul
shlb
iret
rcll
xchg
pop
jne
add
fmul
or
sbb
mov
jg
xor
and
out
leave
inc
sbbb
xorb
dec
cli
xor
mov
mov
ror
sub
andb
mov
out
shrl
aaa
add
sbb
xchg
sub
sbb
gs
jnp
and
iret
dec
fsubrl
imul
mov
mov
in
jo
movsl
pusha
lcall
jle
jle
cmp
loopne
movsb
and
pop
pop
clc
sbb
and
out
jmp
inc
cmc
arpl
mov
pop
sub
jb
ljmp
or
outsb
sub
imul
es
jo
fwait
xor
dec
push
jp
and
pop
sti
xor
xchg
rcrl
shlb
and
mov
loop
ret
popf
imul
inc
ljmp
xchg
mov
gs
adc
int3
test
push
dec
push
ror
xchg
or
jecxz
xchg
insb
pushf
fwait
data16
in
dec
sbb
push
xor
roll
push
jg
mov
ds
outsb
and
sub
ret
pop
push
mov
out
sti
dec
addb
jmp
sbb
jb
popa
aas
shrl
out
aas
stos
inc
push
dec
popa
push
sub
shr
cwtl
lret
dec
inc
fs
ss
push
mov
mov
jl
push
lcall
pop
mov
ss
xchg
call
subl
test
adcl
adc
pop
nop
movsl
push
jle
ret
xchg
sbb
repnz
add
paddusb
dec
rclb
or
mov
push
lret
mov
aaa
adc
jno
xor
jns
movsb
call
cmpsl
ja
mov
pop
xchg
js
sbb
leave
xlat
push
mov
rorl
les
sub
sub
add
pop
out
enter
pop
add
push
mov
and
jmp
add
lahf
push
test
in
aam
sar
aas
imul
jno
inc
xor
lret
add
pop
iret
popf
popf
stc
push
add
dec
bound
das
pop
test
sbb
jb
xor
pop
sub
xor
push
repnz
fdivs
add
dec
fimuls
mov
repnz
sub
pop
fwait
add
push
xlat
adc
xchg
ds
adc
pop
mov
leave
imul
adc
mov
mov
pop
sub
xlat
xor
fneni(8087
inc
jae
out
push
or
adc
mov
std
xor
sbb
inc
cld
jge
pusha
aaa
xor
jns
mov
jmp
push
mov
adcl
andl
in
inc
adc
das
pop
hlt
in
fsubs
adc
mov
pop
and
imulb
mov
aas
movsl
jns
jp
test
test
sti
enter
sub
sbb
out
out
jge
xchg
insl
inc
clc
popf
je
aaa
push
divb
mov
loop
ljmp
ljmp
out
hlt
push
scas
adc
lea
js
mov
mov
stos
enter
mov
mov
shrl
add
push
arpl
andl
rcl
xchg
push
dec
mov
mov
inc
loop
or
push
cmpsl
out
lods
mov
and
jae
int3
xor
push
xchg
mov
arpl
adc
insb
xchg
daa
inc
cld
pop
or
into
scas
cmp
xor
push
push
ret
or
cltd
dec
out
inc
fcompl
cmp
adc
outsl
dec
xor
push
jnp
iret
cs
dec
cmp
push
data16
mov
push
push
inc
pop
sar
dec
jno
push
fiadds
repz
inc
pop
xchg
scas
jge
movsb
and
stc
or
jg
into
repz
mov
insl
test
xchg
jmp
fnstenv
or
sub
and
pop
dec
dec
sbb
testl
add
xchg
insb
movsl
int3
cmp
nop
rcll
jl
pushf
push
add
pop
sbb
shrl
sti
loopne
push
pop
push
daa
rcll
xor
and
lods
scas
xchg
rclb
cltd
dec
ret
les
jo
add
pop
xor
subl
dec
and
imul
push
and
dec
out
pop
xor
pop
aas
lahf
cld
add
movsb
sub
in
mov
frstpm(287
jge
push
addb
xchg
in
lahf
xacquire
xchg
cld
es
xchg
in
and
stos
icebp
fs
nop
mov
repz
sub
and
jbe
rdtsc
in
cld
arpl
xlat
fmuls
xor
pusha
jmp
mov
pop
xchg
outsb
xchg
outsb
jno
test
loope
cmp
and
adc
xchg
or
xor
mov
js
mov
xchg
test
or
mov
mov
js
insb
mov
mov
jge
mov
and
xchg
imul
or
arpl
cmp
push
mulps
popf
cmp
insb
push
jle
mov
inc
and
sti
push
push
dec
cmpb
out
cmpsl
orl
ret
push
or
mov
jl
sub
test
das
outsl
in
pusha
repnz
jne
jno
cltd
jmp
ds
fidivrs
mov
jp
or
mov
and
lahf
sbb
cmpsl
je
xor
rcr
push
and
mov
in
xchg
out
mov
cmp
jnp
cmp
mov
pop
js
mov
test
mov
pop
mov
inc
inc
mov
mov
and
sub
sbb
mov
push
incb
outsb
jp
cmp
jno
pop
fldl
mov
cmpsl
cmpb
test
push
inc
jns
mov
add
mov
push
cmp
jmp
jmp
fs
ds
sub
jmp
mov
jbe
sbb
or
jae
mov
and
mov
fldl
testb
and
ljmp
aaa
sub
mov
iret
pop
lea
into
imul
js
popf
ret
ret
popl
andl
ret
xchg
smsw
xor
shl
clc
xor
sbb
mov
add
fsubrs
fwait
and
gs
mov
pop
sub
fldz
and
dec
push
fwait
and
rcrl
dec
test
inc
mov
fwait
cmp
pop
inc
test
and
rcrl
enter
mov
lret
arpl
int3
repnz
xchg
pop
test
xchg
fnsave
jns
mov
test
stos
mov
ret
ss
ds
lods
enter
iret
mov
adc
cmp
loop
outsb
mov
loop
mov
jl
movsl
dec
adc
xor
mov
ror
mov
mov
jae
hlt
cmova
pop
shlb
test
in
pop
mulb
xor
cs
jge
mov
insb
scas
pop
cmp
dec
clc
int
sub
loopne
mov
mov
mov
repnz
cmp
or
into
outsb
rclb
adc
mov
jmp
movsl
incl
and
push
and
cld
or
or
mov
dec
iret
pop
sbb
push
or
mov
jle
inc
pushf
inc
xchg
in
nop
mov
cmp
loopne
mov
mov
pop
sub
faddl
in
mov
dec
mov
jbe
lcall
push
lahf
push
inc
jbe
push
andl
js
stc
cld
adc
rorl
call
mov
aas
ljmp
ja
rcrl
push
arpl
repz
movsb
aam
or
outsl
int
cwtl
mov
cwtl
mov
mov
lahf
js
jno
cmp
std
in
cmpsb
sbb
adc
fstl
in
lret
jno
les
push
mov
add
and
adc
std
cld
jae
enter
sub
or
lret
fs
fidivrs
lds
in
fistl
push
in
loopne
add
pop
clc
mov
jl
fwait
mov
sub
imul
cmp
xchg
jbe
sbb
sub
test
mov
mov
es
dec
icebp
cmp
rol
sub
jmp
popa
mov
pop
into
add
cwtl
ja
lahf
sub
cmpsb
sti
sti
adc
ds
in
add
mov
test
cmp
sahf
int3
sbb
test
lahf
sub
incb
sbb
xchg
push
pop
sbb
sub
lock
sbb
sub
mov
or
add
jl
dec
lcall
push
mov
out
imul
and
clc
lea
jbe
xor
hlt
fcmovne
rcrl
and
or
test
gs
add
cmpsb
push
sub
xchg
jne
repz
push
dec
mov
mov
cld
xchg
xor
nop
cs
xor
test
add
out
mov
test
movsl
xor
mov
cmp
fdivs
jle
shlb
cltd
inc
icebp
sbb
and
bound
add
int
jbe
sub
scas
xor
xchg
or
pusha
jno
jecxz
mov
sbb
inc
pop
repnz
jge
mov
jmp
push
cmp
movb
cmp
shlb
or
mov
lds
nop
xor
pop
inc
mov
push
push
add
idivl
inc
cmp
shlb
sbb
add
dec
movsl
mov
push
daa
sbb
dec
mov
rorl
cmc
sub
mov
adc
xor
in
inc
rolb
pop
movsb
cmp
pop
pop
fdivr
xchg
sbb
iret
pop
inc
bound
repz
or
and
pop
push
in
loopew
shl
mov
sahf
xchg
pop
sbb
das
dec
nop
mov
faddl
stos
outsl
pop
pop
pop
test
subb
jae
int
pop
aaa
aas
lods
bound
incl
inc
jne
testl
cs
xchg
lods
inc
mov
imul
test
test
mov
jae
cmp
sbb
jecxz
outsb
add
push
mov
jmp
sahf
mov
or
stos
dec
aaa
dec
mov
cmpb
or
pop
or
mov
jae
adc
daa
ljmp
into
cmp
lret
jnp
pusha
sarb
lock
push
inc
mov
adc
test
shr
sahf
add
push
cmpxchg
int3
push
push
mov
or
add
stos
test
pop
out
aaa
inc
xchg
mov
pop
and
scas
fcmovnu
aas
movsb
push
and
fildl
or
or
lret
push
xor
push
cs
sub
into
aaa
and
jnp
mov
loopne
bound
inc
xor
sti
mov
mov
insl
stc
dec
inc
aam
popa
clc
mov
or
fidivrs
pop
aad
jbe
jne
dec
push
in
push
ja
xlat
cmpsb
mov
popf
mov
aad
mov
ficoms
stos
inc
das
ljmp
into
mov
lock
pop
stos
mov
lret
pop
lods
mov
adc
nop
jl
outsb
fcompl
int
add
pop
xor
sbb
fmul
mov
je
clc
mov
fsubrp
dec
xor
xor
xchg
push
sahf
sub
ds
popf
dec
mov
icebp
mov
popa
mov
jb
in
cltd
jmp
inc
inc
xchg
add
pop
bound
aaa
in
mov
xchg
imul
in
jnp
or
insl
xchg
enter
jge
xchg
xor
pop
lcall
cmp
or
enter
lret
jns
gs
ret
shll
daa
out
jnp
mov
mov
cmc
cli
scas
divl
and
sbb
xorl
mov
mov
pop
xchg
fdivl
cmp
pusha
lods
shl
xchg
pop
cmpb
ret
jae
push
lods
xor
jns
outsb
cwtl
inc
inc
in
or
fistps
mov
mov
jbe
fisubrs
dec
daa
int3
dec
pop
test
test
or
popw
test
addl
push
jle
cs
in
cmpsb
push
adc
lcall
add
mov
lahf
or
daa
bound
sahf
sub
mov
adc
mov
movsl
add
das
dec
ret
sbb
adc
sub
loopne
lods
or
pop
xchg
lds
cmpsb
ret
mov
dec
push
adc
outsl
lcall
xchg
fsts
icebp
cmc
lods
les
in
into
inc
push
int3
shr
sub
jg
les
shrb
int3
cmpl
movsl
pushf
jbe
stos
or
mov
jp
lret
or
jae
sub
or
push
fcomip
sub
movsb
scas
pop
pop
adc
sbb
pop
stc
cwtl
dec
sbb
inc
popa
xor
aam
clc
and
xchg
cmpsl
xchg
jo
and
mov
xlat
push
insb
or
jbe
add
aas
sub
clc
clc
push
std
and
pop
movb
cmp
outsl
jbe
xor
je
xchg
out
add
pusha
push
insl
mov
inc
inc
out
sbb
in
dec
cmp
fisubl
adc
mov
fistps
aas
call
push
xlat
pop
mov
sub
jns
cld
sbb
mov
xchg
dec
pushf
cmc
insl
es
inc
lcall
push
cltd
pop
cmc
dec
imul
call
ret
test
mov
push
pmovmskb
cwtl
gs
mov
pop
sub
dec
mov
sahf
xchg
daa
rcll
push
ja
mov
mov
subb
in
and
into
aad
mov
aas
repnz
sbb
and
mov
test
aad
sti
ds
push
daa
cmpsl
sahf
lods
cwtl
hlt
mov
pushf
lcall
mov
mov
insl
xorb
aam
fs
notl
insb
inc
push
js
jne
cmpsb
outsb
sbb
shr
xchg
pop
push
and
sbb
stos
hlt
sbb
in
jbe
sbb
sahf
pop
mov
xor
stos
mov
iret
adc
fdivrl
imul
addr16
ss
xor
or
js
cmpsl
mov
repz
pushf
sti
ret
gs
jg
pop
mov
ss
pop
testb
les
nop
fdivrl
mov
movntq
inc
inc
outsb
in
ja,pt
inc
dec
xor
xlat
jle
cld
mov
aam
je
out
pop
xor
mov
inc
mov
fwait
cli
mov
xchg
push
lock
xor
push
ja
jge
or
sub
inc
inc
mov
mov
xor
and
loopne
and
stc
test
imul
pop
fmull
fldenv
fs
arpl
or
sub
jge
dec
jbe
push
jecxz
cwtl
imul
outsb
jg
lret
mov
add
nop
out
mov
faddl
inc
xchg
sbb
mov
or
pop
adc
mov
fldl2e
test
mov
dec
ficompl
rcrb
jmp
mov
stos
mov
sti
cli
inc
sub
add
or
adc
popa
loopne
and
jge
mov
xor
loopne
data16
pop
xchg
mov
insl
fsubs
pop
cmp
fisubrs
jns
daa
cwtl
mov
xor
iret
jb
or
dec
pop
bound
xor
cmp
aam
loope
inc
sbb
xor
movsl
test
xor
arpl
lcall
data16
adc
cmp
mov
and
in
test
adc
imul
sarl
es
xor
in
mov
test
mov
divl
pop
iret
inc
mov
addr16
pushf
xchg
lret
and
inc
push
sbb
cmp
lcall
nop
jecxz
into
insb
jno
xchg
or
pop
mov
lcall
sbb
sti
mov
cld
xor
xchg
test
incb
je
sahf
fbld
das
xorb
xchg
adc
cmp
xchg
mov
mov
fdivrl
cmc
sbb
aad
into
repnz
push
and
popf
sti
mov
mov
imul
mov
fs
lcall
leave
in
add
cs
jns
cli
enter
lahf
fstl
and
rcr
dec
pop
hlt
inc
sub
inc
mov
cmpsb
es
scas
insb
mov
jne
add
sarb
pop
pop
lret
out
or
pop
xchg
fs
fistpll
push
sbb
test
lahf
adc
repnz
add
nop
sti
jbe
jmp
mov
xchg
sbb
xorb
mov
ficoms
movsb
pop
repz
je
mov
or
inc
xchg
and
outsb
cli
rcll
adc
movsl
xor
add
adc
mov
idivb
stos
adc
push
inc
dec
stc
sub
pushf
repnz
cmp
lret
pop
ja
es
pop
clc
bound
mov
xlat
mov
popa
xchg
add
jmp
adc
pusha
sbb
xor
inc
sbb
cmp
out
ljmp
inc
loopne
je
xchg
test
mov
lods
fwait
sbb
dec
sbb
push
xchg
fildl
push
ret
ljmp
outsl
dec
mov
divl
cmc
add
mov
cs
xchg
mov
sbb
lcall
pop
mov
popf
std
and
xchg
jle
add
clts
loope
xor
push
add
dec
mov
jno
fidivl
insb
pop
cmp
ret
das
sub
stos
js
out
xchg
jmp
shrb
xchg
dec
xor
es
xchg
cmovp
bound
pop
push
push
pop
adcb
xchg
fldcw
lcall
cltd
cld
adc
dec
fwait
imul
adc
mov
xchg
clc
neg
test
test
popa
dec
and
into
pop
dec
or
jecxz
xchg
cmpsb
hlt
insb
dec
xlat
mov
mov
stos
loope
insb
or
or
pop
mov
xchg
cltd
psrld
push
sbb
dec
sbb
adc
mov
test
mov
test
js
out
adc
cmpsb
std
and
test
push
ret
loope
dec
sbb
enter
adc
dec
repz
std
imul
test
dec
push
nop
sbb
sbb
mov
mov
xchg
inc
push
xlat
lods
data16
mov
in
add
mov
iret
ja
repnz
mov
jecxz
push
dec
mov
push
test
in
and
repnz
loop
push
outsb
xchg
rorb
jle
fidivs
movsb
inc
xor
cmc
ficompl
fistpll
pop
cs
ss
jbe
mov
arpl
fisttpl
aaa
imul
xor
mull
sbb
jbe
sub
push
scas
push
gs
push
lds
push
shll
test
mov
test
mov
dec
pushf
ret
xchg
dec
imul
enter
stc
push
ret
pop
sub
pushf
mov
mov
addr16
neg
sub
pop
jmp
testl
pop
rcll
cmp
shll
and
gs
and
out
pop
pop
lods
sti
jbe
or
add
leave
or
pop
cmp
imul
icebp
cmp
shll
sub
jp
cmc
aaa
cmp
incb
ja
sub
pop
push
addb
xlat
shlb
sbb
jb
orb
mov
mov
mov
insb
xor
cmpsl
std
gs
addl
jb
dec
ficoml
adc
sti
jl
mov
sbb
jge
adc
cmp
adc
or
jp
out
mov
adc
xor
pop
es
mulb
icebp
mov
iret
paddsb
popa
fwait
push
shl
sbb
lds
stos
sahf
call
jo
mov
pop
inc
inc
nop
insl
or
xchg
lods
mov
cmp
pop
outsl
jbe
je
pop
movsb
cwtl
ret
xchg
scas
mov
ljmp
cmp
sbb
movsl
test
lret
sub
out
shlb
js
stc
lods
fs
push
sbb
jnp
jns
jg
or
aaa
xchg
imul
popf
mov
stos
in
ret
lock
cmp
xor
push
loopne
jae
cltd
sub
inc
mov
leave
add
lea
mov
incb
roll
in
andb
lock
fwait
aas
orl
sarb
mov
or
pop
jmp
aas
add
push
sbb
cmp
jl
test
hlt
cmpl
mov
sub
push
dec
xchg
dec
sbb
pop
or
stos
sub
jo
xor
rcl
lret
adc
push
or
stos
decb
jge
fs
movsl
adc
adc
add
out
push
mov
jns
imul
dec
push
ljmp
loopne
inc
adc
push
repnz
shrb
pop
pushf
or
into
sti
scas
inc
mov
lret
add
sbb
sub
es
sarb
adc
leave
add
or
and
fstps
mov
mov
cmp
jno
aas
das
es
ja
in
sbb
daa
in
mov
push
dec
sahf
jle
xchg
push
or
jmp
jl
xor
rcll
sub
add
outsl
sarl
outsb
fldcw
aas
sub
mov
push
aam
test
adc
subb
in
inc
push
lret
inc
aaa
lret
or
enter
push
nop
rolb
cli
ficomps
push
or
test
mov
mov
jp
loope
cli
xchg
dec
xchg
push
xchg
dec
pop
and
mov
mov
into
push
cwtl
jo
sbb
fstl
sahf
adc
sarb
jb
xchg
popf
inc
rcll
xchg
and
add
xchg
test
fwait
adc
in
insl
into
jbe
daa
jmp
sahf
lret
inc
and
sub
into
lock
loope
mov
mov
cld
inc
mov
dec
popa
js
aad
lcall
sbb
xor
repz
out
jae
jl
arpl
dec
outsb
jmp
push
xchg
insl
mov
cmpsb
mov
cmp
dec
dec
scas
rcll
in
movsb
jmp
sbb
xchg
pop
push
mov
insb
pop
lock
add
adc
imul
popf
stc
or
out
mov
movsb
imul
push
lea
add
ss
pop
pop
inc
shl
cld
xor
mov
mov
leave
call
bound
push
mov
filds
daa
les
cmp
imul
addr16
inc
adc
mov
mov
arpl
shll
add
mov
or
or
xor
shrb
fistpl
mov
jge
loop
imul
lret
mov
add
push
pop
pusha
inc
test
sbb
mov
pop
aam
cli
addr16
mov
xor
sbb
adc
or
daa
mov
and
es
lods
outsl
push
es
ret
int3
inc
cmc
push
sub
out
movsb
lret
fisubrl
adc
push
mov
mov
inc
pop
push
push
push
mov
push
jbe
sub
mov
test
mov
shlb
stc
int
fsub
call
sub
sub
jge
notl
out
addr16
mov
lcall
es
out
or
adc
sub
push
xchg
in
sub
fiaddl
xchg
insb
in
aad
sahf
dec
and
and
pop
pop
sub
or
rclb
lock
popa
xchg
call
xchg
inc
sbb
icebp
jp
in
in
xchg
xchg
pushf
imul
inc
adc
fistps
insb
fisttps
icebp
xor
push
test
test
into
sbb
fwait
adc
dec
movsl
fsubs
and
push
jbe
pop
test
fldcw
push
ds
add
push
lock
jmp
jecxz
cmp
mov
jmp
inc
mov
mov
shll
fistps
push
sbb
xchg
mov
outsl
adc
inc
and
pop
movsb
xor
jge
xchg
bound
jg
enter
ss
call
add
mov
mov
out
jae
and
fidivrl
je
sub
mov
shlb
inc
in
mov
loopne
loop
push
in
outsl
xor
into
inc
in
xor
fimull
add
imul
loopne
aaa
outsl
ret
imul
leave
lods
in
or
jae
aas
mull
push
sbb
insb
imul
inc
xlat
jbe
fisttpll
dec
es
popf
xchg
imul
sbb
sti
mov
add
and
insl
lcall
add
es
lret
sub
push
dec
adc
cmpsl
xchg
add
xor
iret
adc
or
loopne
pop
mov
stos
in
sbb
fiadds
mov
xor
ret
mov
sarl
push
xor
mov
sbb
mov
cmp
xchg
and
pop
sub
xchg
in
dec
imul
xchg
out
sub
pop
ja
aas
movl
mov
cmpsl
pop
jle
add
cmpsl
cmp
jecxz
jo
pop
lcall
mov
in
test
xchg
pop
ja
add
fisttpll
sbbb
gs
xchg
imul
cmpsb
push
hlt
daa
jl
xchg
inc
jmp
pop
pusha
dec
aaa
scas
add
rclb
add
ss
call
or
mov
pushf
fsts
sbb
sub
movsb
dec
cld
stos
cld
in
xor
aad
popf
subl
mov
and
add
ror
add
andl
addr16
and
stos
jl
lods
mov
or
imul
je
in
pushf
les
lret
inc
aas
mov
sub
pop
push
mov
sub
out
mov
adc
stc
jno
jl
adc
shll
mov
or
dec
push
jb
cmp
add
stos
dec
lods
mov
fsts
xor
pop
js
jge
add
lods
push
mov
in
mov
test
jle
xchg
mov
cltd
pop
shll
lret
lret
out
add
iret
pop
mov
jno
sarl
and
jmp
inc
fcom
mov
sub
push
mov
inc
rclb
fidivl
add
mov
xlat
pop
adc
pop
lahf
enter
xlat
mov
xchg
mov
lea
aas
fldenv
insb
add
pop
fnsave
jle
cli
or
xchg
stos
lahf
mov
sub
push
jae
adc
pop
mov
cld
cmpsb
js
pop
or
push
or
mov
js
xor
fsubs
jne
jnp
inc
pushf
fs
call
daa
pop
adc
loope
fxch
jae
inc
pop
inc
js
pop
fnstsw
js
loope
inc
stos
xor
mov
loopne
scas
gs
cmp
mov
bound
cmc
fwait
jecxz
jb
jns
in
dec
xchg
pushf
into
bound
ret
jl
mov
repz
test
mov
mov
push
cmp
js
insl
mov
mov
cmp
adc
mov
jnp
ja
pop
rcrl
imul
rol
movsl
bound
jg
movsb
mov
jl
out
add
xchg
insb
push
jae
jns
test
es
cld
mov
inc
insl
push
xchg
into
cmp
xchg
mov
inc
repz
in
mov
sbb
cld
imul
cmpl
mov
or
and
mov
movsb
test
mov
jno
adc
xchg
orl
or
jg
adc
fdivrp
ror
mov
jge
xor
in
adc
mov
and
inc
mov
pop
xchg
lea
pusha
jge
xchg
cmp
in
inc
inc
imul
ja
sub
xlat
shll
iret
inc
xchg
jmp
out
xor
bnd
sti
js
add
shrl
mov
sub
repnz
fcoml
movsl
sbb
xchg
inc
iret
test
popf
mov
jle
fwait
nop
stos
mov
adc
xor
mov
test
shlb
divl
in
sbb
mov
dec
cltd
mov
sarb
into
mov
out
mov
ljmp
sti
shll
sub
rcll
int
xor
roll
and
iret
sub
push
outsb
ss
cmp
lahf
out
push
push
xchg
std
or
fildl
or
popa
mov
in
and
or
setle
insl
divl
mov
ret
pop
push
ficoml
lcall
lods
mov
and
repz
mov
test
push
push
push
je
iret
out
push
jnp
and
ret
dec
ss
sbb
sbb
ficompl
jo
mov
jae
jecxz
inc
insl
outsb
sbb
dec
pop
loop
mov
stc
sub
xchg
outsb
addr16
icebp
sti
inc
xchg
push
sub
adc
sbb
imul
leave
lods
cmpb
fdivs
lret
jp
inc
dec
xor
pop
bound
int
into
std
xchg
fmul
mov
cmpsl
mov
or
or
ret
cmp
ds
fiadds
int3
rorb
cwtl
and
push
push
test
fisttpll
mov
sub
flds
nop
xchg
pusha
out
dec
clc
jg
push
int3
mov
scas
jmp
jns
pcmpgtw
in
mov
mov
mov
push
inc
cmp
lahf
test
rcll
adc
testl
pop
call
dec
xor
sbb
scas
ss
pop
xchg
push
push
cmpsb
aam
sbb
add
mov
cmp
dec
imul
popf
adc
in
lods
jmp
push
arpl
sbb
push
pop
into
push
imul
jge
mov
lock
dec
cmp
and
push
add
jp
mov
inc
out
xchg
adc
fisttpl
imul
or
push
add
jnp
fisttps
leave
and
push
aam
daa
insl
adcl
mov
mov
mov
mov
sub
xchg
mov
out
mov
adc
shll
out
dec
sti
xchg
dec
add
push
cmpsb
rcll
loop
fs
dec
cmpsl
outsb
or
mov
mulb
pop
mov
fsubr
sub
sbb
lea
or
fdivl
adc
inc
push
xchg
repz
and
loope
push
mov
sub
ret
push
nop
aaa
sub
mov
sti
lret
xorl
mov
sbb
je
int
pop
add
mov
dec
jns
mov
fxsave
mov
dec
out
adc
rcrl
sbb
andb
das
cli
add
inc
mov
pop
mov
mov
out
mov
push
lock
or
cmp
adc
dec
lret
aad
xor
insl
movsl
ret
idivb
push
andb
sbb
add
scas
fcmovu
or
push
jle
arpl
mov
repnz
repz
push
scas
push
lretw
mov
out
sub
cltd
mov
sbb
cmc
faddl
cmp
adcl
mov
and
cmpb
out
loope
out
mov
pop
dec
arpl
lock
xlat
or
xchg
mov
ss
imul
xchg
sub
insl
shrb
cltd
mov
sub
js
inc
mov
jae
bndstx
jno
and
cmc
sbb
sbb
mov
mov
mov
mov
mov
jae
pop
sahf
out
fisubrs
xchg
and
movsb
xchg
aad
sti
aad
daa
push
sbb
add
pop
xchg
rolb
cmp
or
lcall
pop
stos
jmp
dec
dec
out
push
jecxz
out
cmpsl
or
mov
dec
mov
leave
ss
mov
and
idivb
mov
cmp
push
mov
fists
xchg
ljmp
push
dec
loope
sub
inc
or
push
incb
inc
push
imul
les
xor
push
sub
ret
imul
hlt
mov
sub
pop
push
cmp
pop
mov
pop
pusha
or
popa
or
cmp
leave
mov
jnp
imul
and
fistl
sub
add
sub
adcb
fwait
lods
fists
pop
lret
cmpsl
dec
jg
jl
dec
sub
adc
inc
adc
dec
or
int
stos
cltd
cs
pop
pusha
and
mov
add
cmp
loope
dec
int
in
insb
xchg
repz
fnstsw
and
lods
leave
mov
stos
xchg
or
sub
movsb
push
in
push
push
and
push
sbb
int3
cmpsb
jle
cmp
mov
aam
sbb
mov
lret
jno
sbb
sub
jae
pop
inc
jmp
clc
mov
daa
cmp
cmc
fwait
repz
aad
sbb
cmp
ret
mov
xchg
jo
or
push
pop
in
rol
out
xor
xlat
outsl
and
sbb
ret
ja
nop
arpl
repz
dec
mov
lahf
es
cwtl
dec
rorl
rorl
jge
pop
xlat
sbb
pop
pop
je
pop
out
leave
mov
cmc
enter
stos
xor
nop
ret
ret
pusha
inc
add
push
out
sarl
push
dec
inc
dec
in
aad
js
add
mov
inc
hlt
loop
cmp
add
in
lret
int
sbb
arpl
adc
add
dec
addr16
or
es
inc
push
push
arpl
dec
mov
lods
xor
dec
insl
aad
pop
stos
mov
cld
mov
push
mov
or
call
jae
imul
fnstcw
dec
popa
aas
adc
int3
sahf
addr16
inc
push
aaa
enter
jle
int3
pop
inc
test
xchg
mov
lock
xor
mov
xchg
xor
sti
jecxz
clc
adc
test
adcb
ret
cmpb
jmp
pop
cmc
pop
adc
push
stos
push
push
mov
hlt
iret
dec
jge
jp
mov
dec
mov
xchg
mov
std
andb
xor
repnz
hlt
dec
testl
movsb
jb
mov
xor
xchg
mov
aad
jge
imul
fistl
lock
in
fmull
into
hlt
bound
shll
mov
pop
pop
out
movlhps
or
pop
jbe
in
leave
xchg
mov
cld
addr16
lcall
clc
leave
dec
push
mov
out
mov
and
fs
aas
stc
stc
mov
sahf
mov
xchg
cli
lcall
repz
jae
inc
pop
sbb
scas
aam
stos
jmp
xor
sti
cltd
xchg
sub
cmpsl
and
push
jp
push
outsl
push
sub
dec
sbb
hlt
out
cwtl
das
es
lahf
call
lahf
aam
jmp
ret
adc
out
fistl
pop
jle,pn
fsts
xchg
and
dec
lahf
loope
fs
inc
pop
ret
push
jno
mov
xchg
and
addr16
imulb
arpl
in
xchg
leave
mov
lea
aad
in
or
andl
lods
pop
mov
ror
testl
mov
icebp
push
push
call
int
or
adc
add
into
inc
test
dec
sub
mov
pusha
mov
add
jno
inc
xchg
xor
mov
stos
mov
jns
pop
je
pushf
loopne
je
fcomip
mov
sbb
lahf
jle
stos
sub
cmp
push
insl
adc
sbb
adc
repnz
ret
fxch
xchg
push
inc
mov
scas
popf
push
in
cmp
adc
jge
daa
aas
or
add
incl
out
cltd
mov
push
jg
imul
stos
xchg
and
enter
inc
xchg
outsb
adc
scas
push
bound
push
dec
cmpsl
inc
in
push
cmp
xor
das
jne
sarb
xchg
fisttpll
mov
push
insl
push
lock
daa
leave
adc
in
sbb
inc
outsb
pop
aaa
xor
les
adc
inc
hlt
dec
cmp
cmp
push
mov
fnstenv
push
movsb
repz
orb
mov
sbb
popw
dec
xchg
xchg
aas
mov
pop
xchg
sub
jo
jp
add
and
mov
cmpsl
in
subb
hlt
dec
inc
jmp
pop
sub
out
sub
addr16
pop
sbb
into
cmpb
test
lcall
lods
push
fwait
mov
cli
lret
add
inc
jnp
frstor
sti
in
nop
inc
push
ss
repnz
dec
stos
jnp
adc
in
cmpsl
test
mov
mov
je
mov
jno
jns
ficompl
inc
sbb
test
shll
mov
jns
arpl
lret
shlb
sub
xchg
enter
push
mov
xchg
test
popa
bound
test
sarb
scas
dec
fnstenv
mov
xor
pop
sbb
enter
cltd
sahf
clc
ja
rorl
sub
ror
pop
jle
je
pop
arpl
int3
sub
sbb
jb
cmpsb
mov
push
xchg
ret
push
mov
or
scas
jecxz
lea
jg
mov
push
in
lods
outsl
inc
aaa
cli
inc
outsb
mov
lret
add
xchg
test
daa
into
xchg
add
lock
push
es
iret
sti
push
or
sbb
adc
mov
jg
pop
insb
leave
cmpsb
iret
cmp
jno
mov
and
cmpsl
mov
fbstp
mov
call
mov
std
xchg
outsl
loopne
dec
test
mov
mov
xor
jnp
xor
adc
xor
loope
push
inc
cmp
inc
sbb
cs
ret
pushf
sahf
dec
and
cmp
pop
xlat
mov
pop
fcomi
mov
or
insb
xchg
jg
imul
dec
cs
jb
sub
jbe
ficoml
dec
xor
mov
aam
mov
or
ja
shrb
sub
mov
pop
jnp
dec
pop
jno
jl
and
inc
notb
jns
push
xor
cmp
loope
mov
and
mov
enter
mov
xor
pop
popa
cld
push
jno
fs
lods
push
inc
add
scas
dec
insb
cltd
into
in
lods
popa
mov
xchg
fsubrl
cmp
out
dec
adc
ret
inc
adc
jnp
mov
jge
xchg
dec
cmp
in
cmp
cwtl
sahf
je
aas
ja
testb
or
fcoml
cmp
call
out
fs
sti
sbb
cltd
out
inc
dec
push
aaa
jle
sub
addb
dec
pop
and
aad
scas
inc
loope
mov
mov
testl
pop
aam
xchg
lret
test
mov
outsl
fwait
into
mov
loopne
add
xchg
leave
test
test
lods
ljmp
sub
into
mov
adcl
jg
fwait
sbb
mov
lret
outsb
jbe
rclb
push
cli
icebp
int
fnstenv
jle
flds
rcr
jp
mov
dec
fildll
mov
xor
pop
adc
inc
adc
std
sahf
cmp
xorb
mov
push
fstpt
sbb
inc
mov
mov
and
fsub
or
pushf
test
pop
xor
repnz
xor
inc
sti
bound
add
mov
aad
cmp
int
pop
jp,pn
sti
pop
mov
inc
push
shr
movb
ds
add
sub
jl
dec
hlt
lcall
rorl
dec
jge
jg
jle
sbb
addr16
lcall
and
sub
mov
push
jae
mov
mov
jne
sub
pop
and
jmp
xor
fcompl
and
add
loopne
movsb
in
pop
pop
pop
jae
insb
rcl
mov
push
add
push
mov
sbb
int
popf
mov
andb
jns
sub
and
mov
pop
test
testb
int3
test
test
cmp
leave
xchg
sub
jl
daa
ret
add
push
adc
pop
ja
lods
pushf
mov
enter
scas
cld
mov
or
cmp
stos
mov
cmp
sub
add
sbb
pop
xchg
fidivs
sub
add
ret
push
and
add
sub
in
or
or
shr
xchg
sub
inc
rclb
clc
xlat
in
add
or
push
lods
push
mov
and
jge
aaa
ja
dec
mov
loopne
loopne
mov
out
movsb
xchg
cli
mov
rolb
imul
xchg
in
lods
and
ds
jp
mov
jge
minps
or
mov
out
faddl
mov
pop
and
xor
push
cmp
loop
adc
sti
or
mov
sub
loop
push
fidivrl
pop
sub
sub
fldl
inc
mov
mov
push
imul
xchg
sub
in
aaa
dec
stc
fisubrl
ljmp
dec
mov
push
and
xchg
jp
adc
cwtl
add
xchg
pop
or
inc
sub
pop
mov
xchg
cmpsb
les
xor
jl
lahf
push
inc
ljmp
in
enter
cmpsb
sbb
out
scas
and
nop
cmp
lret
sbb
push
scas
xor
popf
xor
or
arpl
mov
push
stos
sbb
popa
jge
jb
mov
adc
hlt
push
outsb
xchg
jno
hlt
mov
or
mov
pop
aad
in
cmp
js
adc
mov
es
test
je
arpl
pop
sahf
cld
mov
cltd
mov
jg
cmp
mov
aas
dec
sub
dec
out
call
ret
scas
repnz
cmp
mov
das
adc
data16
fidivrs
mov
dec
jge
jmp
jle
repz
call
popf
repz
bound
shrb
gs
test
cmp
shrb
lret
fildl
or
mov
mov
negl
outsl
rclb
enter
test
adcb
cmp
xchg
and
or
jb
push
push
inc
sbb
in
push
jb
mov
or
add
jl
sbb
ret
pop
cld
push
dec
les
pop
scas
xchg
in
aad
or
cli
sarb
jb
repz
aad
jecxz
outsb
mov
ds
rorl
sub
xor
fdivrs
test
mov
push
lahf
or
sbb
les
test
jg
push
mov
fstl
push
fiadds
ljmp
pop
jbe
push
movsl
push
loop
mov
pop
sbb
test
cltd
imul
inc
daa
add
jg
fwait
adc
sbb
sub
xor
arpl
jnp
loop
fimull
ret
push
out
xchg
dec
test
mov
movsl
and
jmp
mov
sub
lods
cmp
in
sub
test
pop
loope
fistpl
dec
xchg
pop
sub
fistpl
xor
cmp
test
xchg
jl
popa
cmc
outsl
cmpsl
or
pop
cmpb
fs
inc
push
sbb
add
jecxz
neg
push
cltd
xchg
sub
pop
lods
jmp
mov
mov
lcall
or
and
fldt
add
sbb
in
inc
lods
jle
add
cs
and
xlat
and
or
xchg
aaa
sti
xor
loop
inc
aam
mov
popa
dec
lcall
adc
jb
das
shl
dec
stos
pop
mov
popf
mov
inc
call
or
stos
ss
inc
out
xor
xchg
movsb
xchg
test
jae
lock
cli
daa
push
cmp
outsl
shrb
xchg
mov
add
jp
push
stos
jecxz
pushf
push
mov
xchg
mov
or
fsubrs
adc
and
inc
mov
aam
pop
pop
jne
lcall
sysret
cmp
into
push
in
nop
sbb
mov
xor
movsb
scas
or
stos
iret
jmp
pushf
xor
mov
dec
insl
mov
jne
outsl
shrl
decl
orb
mov
repnz
mov
aaa
scas
in
pop
test
jns
enter
mov
js
ret
or
hlt
iret
orl
inc
out
mov
mov
xor
mov
aam
jns
jnp
xor
leave
fadds
movsl
dec
add
dec
mov
inc
jno
pop
xchg
add
mov
sti
ljmp
fwait
pop
dec
ss
sahf
divb
mov
dec
lcall
loopne
bnd
adc
inc
adc
stc
test
sti
push
mov
push
sbb
jb
inc
inc
outsl
aad
pop
xchg
dec
dec
in
cmp
xchg
mov
lcall
int3
mov
cmc
clc
and
mov
push
inc
push
dec
jl
push
lods
inc
aaa
push
ljmp
pop
aam
or
xor
lret
adc
mov
cltd
arpl
lock
sbb
aas
rcll
push
subl
cmp
jae
cmp
add
subl
in
mov
insl
sub
xchg
push
cmpsl
jle
inc
lds
pop
dec
mov
test
int
jo
sub
out
daa
into
dec
sub
mov
out
jl
and
sti
test
jl
testl
notb
inc
out
fbstp
or
and
fdivrs
repnz
push
inc
sbb
in
rcrl
enter
sub
iret
out
lea
fwait
popf
repnz
cmp
enter
cs
mov
jns
gs
roll
movsl
jbe
or
sti
or
repnz
aaa
or
push
add
ffreep
xchg
cs
xor
cmp
dec
jbe
int3
daa
jmp
cltd
and
mov
iret
jmp
pop
mov
push
inc
dec
xchg
jno
xchg
sub
ret
dec
sbb
repz
pop
sub
insb
jmp
test
fmulp
xchg
dec
les
mov
dec
pop
pop
out
jge
sub
int
jb
imul
stos
inc
jg
jl
push
adc
mov
xchg
stos
ret
out
mov
xchg
loopne
std
xchg
mov
add
loopne
or
andb
out
std
sbb
movsb
xor
mov
dec
mull
add
dec
cmpsb
mov
cmp
enter
andb
sbb
cmpsb
ret
movsb
add
adc
imulb
dec
insb
loope
cmp
ret
mov
arpl
shll
inc
addb
xchg
jle
test
lock
lea
dec
call
cld
popf
aas
or
pop
repnz
mov
cld
pop
push
adc
cmp
add
inc
movsl
mov
adc
out
dec
fistl
je
cmp
andb
lret
pop
repz
jb
inc
jecxz
sbb
test
test
mov
into
test
out
loop
cltd
inc
clc
repnz
and
call
scas
xchg
and
jbe
in
pop
cli
add
test
cmp
push
inc
cltd
mov
test
xchg
pop
add
push
call
xorb
cmp
cmp
and
cmp
inc
stc
inc
mov
stos
fsubrs
jecxz
aas
mov
out
xchg
loope
lcall
in
sbb
or
mov
js
out
loop
lds
xor
sub
aas
or
sub
sub
clc
ljmp
lcall
mov
adc
and
mov
into
xchg
and
faddl
cmpsl
lods
mov
xor
mov
faddp
jge
xchg
lahf
cmp
cld
sub
mov
out
leave
mov
leave
or
dec
fnstsw
daa
jno
cmp
icebp
or
enter
xor
jae
add
adc
pop
mov
popl
fstl
add
jmp
or
cltd
dec
sti
mulb
mov
sub
xchg
adc
jl
push
outsl
leave
sbb
pop
mov
adc
outsb
mov
outsl
lock
sub
lea
rcrb
mov
sub
ljmp
pusha
cmp
imull
cmp
pop
lahf
mov
call
mov
pusha
outsl
scas
sbb
xor
bound
pop
into
int3
mov
fsubrs
jp
and
mov
insl
adc
out
pusha
repnz
imul
int3
daa
jo
cmp
push
inc
pop
push
test
inc
and
outsb
fadd
lret
rep
mov
add
and
jge
sub
shr
sub
lahf
repz
test
pop
aad
xor
lcall
sbb
stos
fbld
clc
sar
std
cld
xor
outsb
outsb
pop
and
mov
in
adc
mov
dec
xchg
pop
test
xchg
call
push
aam
push
xchg
jl
stc
push
push
xor
sub
int
xchg
je
ds
and
xchg
xchg
jb
or
mov
xor
jmp
inc
dec
repnz
mul
push
in
push
lds
pop
fdivs
decl
mov
fidivs
repnz
mov
adc
loope
sub
dec
ljmp
pusha
jbe
jg
data16
sbb
jg
je
test
fdivrl
or
adcb
adc
jle
xor
decl
test
and
int
xchg
gs
ds
and
scas
fbld
adc
imul
and
mov
test
jnp
sarl
pop
divl
xlat
dec
inc
jmp
push
dec
xchg
and
and
fdiv
sahf
lds
jnp
lret
lcall
jae
outsb
cmpsl
test
daa
xchg
pushf
sub
scas
cmp
xor
push
test
jbe
out
aad
cmp
jns
push
mov
jbe
clc
mov
jb
clc
sbb
cmp
pop
std
dec
xchg
add
clc
ret
pusha
sub
lahf
and
fs
emms
xor
test
dec
add
data16
xchg
int3
xrelease
xchg
xchg
insb
jge
push
call
inc
or
aad
lods
and
ffree
movb
xchg
cwtl
fsubrs
idiv
aam
ljmp
mov
push
jno
cltd
mov
mov
or
adc
in
push
dec
repz
inc
or
loope,pt
push
add
adc
lret
sar
mov
dec
push
inc
mov
jp
mov
mov
pop
pop
ja
mov
push
icebp
sbb
or
mov
pop
pop
imul
out
mov
es
fdivrp
shll
lcall
hlt
jmp
or
push
push
outsl
stos
shlb
sbb
js
jno
mov
in
mov
les
xchg
mov
and
jg
push
or
scas
sbb
xchg
dec
pop
jno
not
add
hlt
jbe
addr16
mov
lds
call
jmp
jg
sti
pusha
sub
xchg
sbb
imul
in
decb
cmp
icebp
fbstp
xchg
or
fs
repz
sbb
imul
fwait
ja
in
sarl
add
push
dec
imul
stos
push
dec
mov
dec
addr16
cmc
subb
pop
cmp
push
mov
mov
add
adc
cwtl
sub
test
jb
cmp
fs
fwait
lock
mov
les
xor
cmp
pop
cmp
cmp
stc
sti
fcoms
pop
mov
push
xor
adc
movsb
jnp
and
icebp
cmpsl
mov
or
movsl
push
mov
inc
jno
jno
ret
and
sbb
and
cs
jmp
push
xlat
fnstsw
push
jle
xchg
add
xorl
inc
sbb
mov
test
gs
fsubl
pop
and
rcll
dec
xor
and
dec
pop
or
testb
mov
sbb
inc
xlat
out
pop
rorb
xor
int3
mov
test
sub
adc
pusha
sti
cmpsl
mov
cmp
js
mov
into
xbegin
js
rcrl
out
popa
mov
enter
inc
dec
mov
adc
pop
jecxz
and
push
sti
inc
xor
in
insl
xor
pusha
ss
ss
fsubs
das
jmp
fists
cmp
mov
cmp
adc
mov
ds
xchg
fisttpll
or
push
je
inc
jg
mov
out
bswap
aas
push
cmp
mov
inc
mov
shll
add
daa
jp
into
adc
dec
test
sbb
stc
mov
jecxz
dec
gs
popa
xchg
cmp
xor
push
mov
pop
inc
in
push
pop
arpl
xchg
sbbb
jmp
stc
in
gs
lret
mov
std
or
sbb
or
cltd
fwait
xchg
in
add
add
lcall
cmp
sub
sbb
lea
pushl
mov
popf
add
inc
fs
xlat
sbb
add
dec
push
push
mov
xchg
lds
mov
or
inc
popf
negl
repz
pushf
in
or
rcrl
pop
icebp
jne
pop
inc
cmp
adc
scas
xchg
cli
push
data16
in
lret
push
cmpsb
pusha
mov
test
das
nop
cmp
pop
std
dec
shrl
jle
icebp
and
and
adc
aas
add
pop
jle
ret
dec
jb
ret
pop
rcrl
in
jg
test
fstl
xor
adc
inc
sarb
xchg
inc
iret
pop
mov
and
dec
arpl
jns
sbb
jecxz
jecxz
pmulhuw
js
rcl
test
mov
pop
pop
test
ss
mov
test
loop
fldl
icebp
xchg
sub
repnz
or
in
cmpsl
jl
dec
bound
mov
or
cmp
test
inc
out
inc
push
sub
jne
cvtps2pd
lds
orb
das
ret
je
adc
imul
pop
jl
dec
fstpl
mov
inc
mov
xchg
aad
mov
aas
mov
jp
repnz
fucomp
pop
cmp
in
scas
pop
push
sbbb
into
add
insl
in
mov
movsb
adc
add
add
incb
shl
and
rorl
adc
loope
pop
or
sub
push
shrl
dec
test
in
mov
xor
mov
mov
scas
mov
fidivl
inc
xchg
scas
lods
jbe
ljmp
xor
addr16
and
out
ret
push
std
hlt
mov
mov
inc
add
push
roll
jb
and
sub
jae
pushf
jmp
fdivrs
jnp
sbb
xchg
dec
and
das
adc
pop
or
testl
or
adc
cmc
and
sub
or
lds
push
inc
and
lods
mov
add
jbe
and
push
mov
mov
sub
pop
adc
mov
mov
test
jns
push
gs
lds
lcall
daa
lcall
push
insl
jnp
out
pop
jle
loop
cmp
insb
pop
mov
cld
insl
les
ljmp
mov
test
xchg
lods
movsb
jnp
hlt
shlb
cmpsb
dec
addr16
mov
out
jmp
inc
cmp
outsl
nop
pop
jmp
inc
rcll
daa
in
ljmp
orb
fsubr
mov
cmpsb
xor
shl
ret
xchg
or
mov
jmp
and
enter
dec
sub
mov
xchg
mov
mov
dec
scas
outsb
cli
out
jmp
in
in
sub
jl
mov
jle
mov
gs
fs
addr16
movsb
cmp
movsb
cmc
adc
and
adc
stc
cli
nop
scas
lahf
mov
dec
loope
dec
jp
jae
ljmp
ljmp
and
add
mov
and
jp
roll
movsb
movl
lods
je
jl
cmpb
cmp
imul
mov
mov
xchg
in
aas
pop
sbbb
cli
shl
fiadds
data16
adcl
xchg
scas
pop
daa
bound
mov
pop
lahf
jg
es
lods
mov
xlat
push
stc
sbb
and
enter
mov
cmc
stos
lods
in
pop
jl
stos
jg
jp
push
fcomps
pop
std
nop
sub
shlb
sub
das
pop
int
and
sahf
mov
int
jne
fs
dec
fnsave
or
iret
xor
jbe
xor
mov
add
mov
push
or
in
pop
push
xchg
or
cmp
ficoms
cmp
mov
cltd
add
mov
inc
ss
sbb
in
pop
cltd
loopne
inc
shl
mov
jnp
lea
stos
lods
sbb
loop
jp
add
frstor
lret
shlb
test
sbb
std
loopne
aam
inc
into
ljmp
mov
jg
or
shrl
lods
mov
jnp
outsb
je
sbb
or
mov
inc
jmp
mov
shlb
mov
aaa
push
hlt
sahf
add
sahf
pop
dec
daa
les
mov
push
shlb
sub
mov
dec
divl
pop
and
popf
dec
ljmp
in
out
or
cmc
push
lea
mov
mov
dec
jbe
lods
and
mov
mov
push
dec
jle
leave
fdivs
in
ds
mov
pop
cmpsl
popa
pop
inc
test
int3
inc
mov
ljmp
repnz
pushf
mov
mov
out
jl
dec
in
in
popf
loope
xchg
mov
lcall
mov
test
mov
in
xor
aad
jnp
inc
dec
repnz
adc
ja
mov
push
mov
push
rcr
mov
clc
enter
pop
jbe
push
or
ret
and
dec
mov
dec
ds
test
jle
pop
or
dec
adc
dec
add
pop
mov
imul
dec
mov
pop
push
pop
sub
lret
enter
arpl
jns
lods
in
pop
xchg
pushf
dec
pop
sbb
mov
and
pop
scas
sub
test
rclb
ljmp
enter
mov
in
mov
add
sub
push
shll
lods
repnz
sar
sbb
sbb
or
out
mov
dec
ja
jbe
andl
iret
lods
pop
in
outsb
xchg
push
push
das
mov
cmp
xchg
xchg
inc
sbb
mov
push
ljmp
dec
sub
out
xchg
loopne
and
in
mov
jns
fnsave
testl
stc
push
or
ds
add
push
out
loop
adc
jno
pusha
gs
xchg
dec
push
dec
je
shll
aam
into
sbb
inc
shrl
pop
rcrl
imul
inc
int3
xor
iret
out
pusha
imul
mov
mov
outsb
xchg
pop
mov
jmp
pop
enter
mov
dec
shrl
pop
das
in
or
sbb
or
cmpsl
scas
stc
jmp
or
pop
xchg
cmpsb
inc
jge
mov
mov
js
sub
das
lea
dec
ljmp
scas
and
test
sti
les
sarb
sbbb
scas
insb
int
aas
or
push
popa
xchg
pop
mov
pop
jae
push
movb
and
adc
pop
int3
mov
neg
ret
mov
add
and
test
cs
fnstsw
jo
adc
jl
push
aam
xchg
add
in
leave
into
movsl
popl
das
fisttpl
rcrb
outsl
pushf
sahf
mov
mov
pop
sbb
notl
jmp
pop
ja
ret
testb
lods
scas
mov
scas
adc
xlat
or
fistl
adc
push
ss
lcall
lcall
sbb
sbb
mov
add
divl
push
and
xor
xor
movsl
inc
xchg
rclb
scas
clc
les
outsb
pop
bound
cmp
mov
xchg
push
std
andl
dec
inc
cmp
xchg
out
imul
mov
je
idivb
daa
add
rorl
xchg
xor
icebp
div
mov
std
pop
imul
in
jge
aam
mov
fcmove
fs
jecxz
test
cld
loopne
add
addr16
outsl
std
inc
push
fs
iret
cmp
dec
repnz
test
dec
cmc
ret
fcom
data16
cmc
xchg
sub
inc
add
mov
ret
add
xchg
iret
mov
aam
push
es
dec
push
jae
jg
inc
sarb
scas
adc
loope
fmul
jne
imul
push
push
or
rol
gs
dec
cli
jl
pop
adc
popf
mov
jb
xchg
scas
popf
mov
xlat
jns
popf
dec
and
sbb
and
mov
or
outsl
out
out
je
stos
sti
and
ds
mov
sti
jg
mov
iret
out
std
mov
jle
sti
pop
cwtl
js
xchg
xchg
int3
or
mov
xor
std
jbe
push
mov
jecxz
divb
mov
jnp
jmp
movsb
sub
cmp
in
fisubrl
rcrl
pop
cmpsb
ja
mov
icebp
orb
incb
push
dec
add
pop
xchg
sbb
shlb
mov
orb
out
in
jmp
sbb
jne
push
pusha
pop
dec
pop
jns
push
loop
pop
test
and
sbb
mov
roll
aaa
pop
idivb
mov
dec
dec
repnz
mov
mov
repnz
clc
mov
bound
xlat
fs
or
out
call
lret
in
xchg
gs
xor
movsb
rclb
add
adc
iret
es
inc
pop
cwtl
sbb
jnp
jno
clc
and
inc
cmp
pop
mov
jbe
mov
stc
cs
jo
xchg
js
xorb
jecxz
aad
loop
cmp
lcall
mov
sbb
icebp
sub
popa
dec
add
push
xchg
out
push
sti
out
xchg
or
decb
test
cs
ja
enter
inc
jg
outsl
adc
iret
adc
sbb
repz
sar
xor
stos
adc
outsl
aam
sahf
shlb
fbstp
dec
sti
mov
pusha
bnd
call
xchg
sbb
pop
dec
mov
cltd
fcompl
loopne,pn
lret
fwait
leave
insl
ss
jbe
jno
sbb
int
or
cmp
aad
shlb
icebp
mov
es
jmp
cltd
negb
mov
das
nop
fwait
fwait
out
mov
push
js
in
inc
jl
int
jns
cmp
and
loope
mov
pop
scas
cmpsb
enter
gs
mov
xor
add
mov
js
push
pop
sbb
push
fwait
pop
fdiv
jp
pop
mov
sbb
sarb
and
bound
jecxz
out
movsb
adc
mov
testl
push
mov
inc
adc
dec
inc
xor
enter
test
lods
push
xlat
add
pop
jae
sub
or
in
pop
iret
shrb
push
adc
leave
shl
fisttpll
lods
fwait
cmp
fisubs
pop
out
loop
roll
mov
sti
mov
test
add
jnp
je
das
xchg
dec
mul
mov
insb
pop
or
push
inc
pop
lock
mov
push
xchg
aaa
das
sbb
test
xchg
inc
outsb
data16
das
xlat
mov
ret
loop
iret
pushf
out
jg
pop
pop
ja
es
lret
sbb
push
lret
mov
gs
out
cld
shr
pop
movsl
xor
dec
dec
xor
cmpsb
out
xchg
inc
xlat
jmp
iret
lods
fidivl
lret
in
push
and
cmp
popa
cld
arpl
dec
inc
cmpsb
shll
std
movsb
mov
vxorpd
push
push
xchg
or
xor
push
cltd
dec
or
shrl
popa
pop
sbb
or
cmp
pop
push
pop
ret
cmp
fcompl
fldcw
outsb
cmovns
cmc
sub
dec
push
mov
ja
addps
inc
cmp
cmp
cwtl
ljmp
push
inc
testb
cmc
inc
into
out
or
mov
push
xor
sub
bnd
cmpsl
sub
or
lea
adc
add
adc
cmpsb
cld
jns
repz
mov
xor
mov
mov
jo
xchg
out
mov
adc
or
repz
popa
sub
je
and
loope
lock
xor
jae
xchg
xor
or
xor
pop
add
xchg
filds
pusha
add
test
inc
shll
dec
jmp
std
and
ret
cmpsl
adc
lea
adc
mov
xchg
add
and
enter
inc
adc
cmpsl
cwtl
push
sbb
cld
test
aas
lcall
pop
dec
imul
cmp
or
or
iret
pop
xor
out
das
popf
in
insl
popa
add
cwtl
pop
jb
mov
pusha
xor
mov
test
ret
xchg
jne
cmp
es
shlb
add
decb
mov
insl
dec
rcll
or
mov
inc
andl
and
cmp
cmpsl
pop
push
cmp
cmp
mov
cs
adc
popa
push
subb
in
sbb
pop
adc
rcrb
add
daa
ret
xchg
scas
fcompl
xchg
add
xor
pop
inc
fs
aad
addl
and
jne
push
add
cwtl
dec
mov
add
xor
mov
int
inc
inc
outsl
ds
pop
int
arpl
mov
push
push
xor
mov
inc
loope
rcr
into
jmp
loopne
shll
sub
mov
inc
cwtl
shrb
das
dec
scas
clc
dec
or
subb
pop
push
lret
and
call
jae
xchg
mov
test
push
loope
mov
mov
scas
clc
cmc
push
rorl
jl
cmpsl
lret
pushf
push
outsl
push
nop
push
cmc
out
shlb
mov
xchg
inc
push
cmp
cmp
xor
fdivs
pop
push
push
pop
outsb
xor
call
scas
add
gs
mov
je
icebp
lds
rorl
mov
push
mov
jle
fucomip
mov
mov
mulb
cltd
aad
test
ds
std
aad
into
sub
adc
inc
sub
xor
lahf
fcmovnu
mov
dec
xchg
in
idivl
inc
add
dec
xchg
xlat
mov
hlt
call
cmc
std
and
push
dec
repnz
jecxz,pn
and
sbb
xchg
pop
icebp
insl
sub
pop
dec
xchg
cmpsl
push
push
sbb
ja
loope
lcall
push
push
dec
pop
lods
inc
lea
cs
loopne
mov
int3
icebp
lods
adc
and
xchg
push
inc
lods
sarl
clc
fidivrl
repnz
xor
cmp
cmp
addr16
add
movsl
sahf
jl
test
enter
xor
mov
in
inc
add
cmp
sub
call
xchg
jb
sbb
sti
arpl
notl
mov
inc
outsl
repnz
in
dec
pop
jge
pop
add
sub
int
and
out
ret
mov
les
jecxz
sbb
sub
mov
mov
in
and
xlat
sbb
xchg
adc
dec
jns
inc
fcoms
mov
push
js
loopne
mov
mov
mov
mov
sub
lds
adc
xchg
mov
sbbb
adc
cmc
bswap
stos
cmp
loope
cld
fstpl
jne
or
push
jae
pushf
cmp
pop
adc
and
jl
shrl
sbb
out
mov
adc
sub
cmpb
cmp
xchg
popf
mov
mov
inc
orb
leave
mov
push
mov
pop
aas
orl
sbb
bound
ret
push
gs
dec
cmp
sbb
leave
push
cmpsl
sbb
fildl
into
cmp
xchg
pop
filds
adc
mov
jecxz
mov
test
shlb
mov
xor
ret
pusha
andb
mov
mov
mov
inc
ja
pop
adc
mov
int3
out
mov
xchg
jb
jno
leave
inc
push
push
cmc
fstpt
mov
jbe
mov
cli
jb
in
cmp
push
in
enter
icebp
add
and
jmp
mov
in
test
push
daa
ljmp
movsb
repnz
data16
xor
cmp
cwtl
xlat
cmpsb
jl
test
popf
mov
aaa
imull
dec
test
lock
cwtl
push
cmpsl
adc
hlt
jbe
ficoml
xchg
inc
push
sbb
test
cltd
lods
enter
push
xor
pop
jg
cmc
lret
loopne
sbb
shrl
out
cld
stos
sbb
dec
aas
sub
push
adc
push
jbe
pushf
sub
dec
aam
dec
addr16
not
push
ja
xchg
icebp
mov
sub
dec
mov
or
lret
outsl
sbb
cmp
sti
stos
aam
or
mov
pop
and
mov
xlat
inc
push
jo
add
or
adc
mov
cmpsl
pusha
ret
fnstenv
out
in
inc
cmp
fisttps
xor
pushl
inc
jp
outsl
daa
adc
lods
add
int
mov
add
dec
jbe
and
jecxz
shrb
pop
mov
xor
push
adc
fwait
std
movq
push
inc
sub
insl
push
ja
mov
leave
outsb
pop
mov
lea
pop
movsw
repz
out
xor
lret
fwait
xor
in
scas
int
gs
mov
dec
pop
mov
xor
or
mov
xlat
push
sbb
out
sub
push
inc
sbb
sbb
fdivrs
imul
push
repnz
mov
mov
sub
out
popa
dec
xor
mov
inc
cwtl
cld
fstl
add
outsl
jge
push
jecxz
xor
adc
das
dec
inc
sarb
std
jno
cmp
xchg
cmp
movsl
aas
xchg
fcmove
lea
lods
or
sub
movsb
sub
leave
or
cli
xchg
decb
scas
push
shlb
out
jg
add
mov
xlat
insb
int3
pop
xchg
dec
mov
stc
xor
xchg
adc
andl
mov
lock
dec
inc
fs
stc
ljmp
aad
js
add
adc
push
xor
sub
mov
or
and
aas
mov
push
lea
pop
cmp
test
cltd
std
stos
inc
add
cmc
sub
stos
in
inc
inc
cmc
mov
dec
mov
adc
and
sub
add
fimuls
and
mov
mov
fwait
and
or
jge
out
dec
push
scas
dec
shl
adc
aas
iret
lret
flds
insl
aas
jg
xchg
fwait
ja
hlt
inc
sub
loope
sti
pop
outsl
cmpsb
dec
adc
nop
nop
add
jo
popaw
aaa
mov
xorb
repz
sarb
loopne
rorl
test
nop
aad
pusha
mov
sahf
push
adc
lds
rol
sbb
jbe
rorl
ficoms
xor
lahf
aam
insb
inc
cmp
test
test
xlat
movsl
lret
pushf
inc
sbb
mov
fldcw
lret
loopne
daa
and
out
stos
sub
push
test
int
xor
aam
jne
loopne
jo
insb
adc
jbe
lahf
js
and
fbstp
sbb
cmp
or
jp
inc
ret
scas
pop
out
lea
mov
cmc
inc
in
lahf
dec
inc
notl
mov
incb
nop
adc
insb
mov
stc
hlt
popf
lods
jne
mov
in
arpl
jmp
sti
stos
or
test
call
mov
dec
xor
testl
rorb
pop
xchg
test
sbb
jmp
sbb
in
fs
dec
scas
and
mov
imul
pop
dec
cmp
xor
inc
stos
jns
ja
imul
sti
pop
mov
xchg
and
or
int3
jge
shl
popf
or
inc
ja
sub
jne
add
jbe
out
imul
dec
sbb
addl
shll
cli
sbb
push
push
add
mov
dec
out
sub
daa
repz
insl
add
dec
jo
hlt
jb
shrl
mov
lds
push
cltd
insl
insb
dec
ret
push
xchg
cs
pop
inc
leave
mov
xor
xchg
js
clc
mov
and
stos
jae
mov
push
and
test
dec
sbb
testb
xchg
inc
out
mov
jmp
and
shrb
sub
in
sub
mov
fists
xchg
sbb
popf
test
sbb
ror
xchg
in
mov
lock
loopne
aaa
mov
sbb
icebp
aad
ficoms
xor
add
test
data16
add
iret
shll
sbb
inc
aaa
xor
sbb
adc
push
mov
shlb
xor
jmp
push
mov
add
outsb
or
dec
loopne
lret
and
shr
aaa
add
filds
pop
leave
fdivrl
inc
sbb
jg
mov
jns
iret
incb
dec
test
mov
clc
mov
push
push
cli
cwtl
in
inc
xchg
mov
lea
pusha
push
xor
push
jp
lock
ds
dec
into
in
das
sub
cmp
jmp
cmpsl
rorl
in
mov
int
hlt
or
xchg
fnstsw
jge
cld
dec
jp
jo
pop
rolb
int3
hlt
adc
outsl
mov
and
dec
clc
cmp
or
lds
and
fistl
dec
pop
into
sub
iret
pop
cmp
aad
xchg
fcmovbe
push
lret
mov
outsb
ret
adc
push
mov
cmp
xchg
in
divb
std
lcall
fnstcw
fisubl
xchg
pop
aaa
pop
mov
cmp
fbstp
dec
shlb
pop
sti
jbe
leave
xlat
arpl
pop
fstps
or
push
mov
ret
int
mov
stc
sub
or
add
sub
cmpb
add
mov
push
ljmp
sub
inc
lea
inc
outsl
and
out
add
cmc
sbb
gs
jmp
push
fisubrl
and
mov
cmp
adc
adc
jle
push
int
push
mov
jmp
rolb
ss
cmp
dec
jo
add
gs
sbb
adc
repnz
sbb
call
mov
out
test
or
jmp
stc
cmp
mov
sti
leave
mov
mov
lahf
cmpl
test
cli
movb
cmc
xor
mov
xorl
and
mov
push
sbb
ret
out
aad
inc
lret
subl
mov
ss
loop
cld
mov
int
and
or
push
and
js
imul
fistl
adc
mov
dec
popf
int
in
je
jae
ja
xchg
sbb
pop
fcmovbe
aaa
jle
and
xlat
jmp
cli
mov
fs
gs
lcall
jbe
mov
in
jae
shr
jnp
mov
inc
xchg
cmp
aam
pop
mov
jnp
push
dec
int3
cmpsb
stos
movsl
cmp
clc
dec
out
lahf
jecxz
or
fst
test
mov
rcrb
mov
test
cmp
lahf
repnz
push
xor
mov
mov
loopne
fldenv
dec
or
ficoml
dec
in
mov
mov
xchg
mov
in
scas
mov
mov
xchg
pop
addr16
cmp
sbb
int
imul
push
les
outsb
js
inc
dec
test
mov
aaa
mov
out
mov
sbb
pop
inc
xchg
out
fmuls
jb
jmp
daa
das
xlat
inc
test
icebp
stc
sub
adc
out
stc
pushf
je
cmp
sub
pusha
xchg
mov
sub
push
mov
daa
rorb
std
clc
xchg
push
jle
imul
mov
out
in
fbstp
fmull
nop
cmp
push
sti
mov
jo
sarb
cmc
mov
jmp
mov
sarw
push
div
dec
cmp
push
adc
leave
push
and
fcomps
jp
or
mov
int3
leave
es
pop
fcoml
xchg
test
ja
jl
mov
inc
or
xchg
mov
sub
inc
out
pop
adc
pop
pop
nop
shlb
add
popf
or
xchg
mov
shr
pop
int
out
shl
in
fcmovnb
lea
pop
ss
push
and
jmp
or
cs
repnz
lret
addr16
push
xchg
jle
push
ss
mov
and
or
adc
aaa
lahf
lea
ljmp
jne
call
ret
stos
fsub
imul
mov
or
mov
mov
mov
push
sbb
adc
cltd
aas
or
jl
rorl
out
insb
addr16
xchg
or
jge
cmp
mov
mov
clc
lods
out
pushf
ret
push
ja
sbb
jmp
add
xchg
dec
cmp
push
addr16
sbb
dec
dec
aam
pop
fdivl
sub
stos
mov
in
mov
test
popf
jecxz
mov
xchg
aas
cmpl
negb
mov
movsl
mov
pop
nop
jmp
pop
pop
repnz
inc
aas
xor
mov
xchg
iret
sbb
fdivr
xchg
adc
cli
sarb
cwtl
jne
stc
add
int3
jmp
xchg
mov
mov
shll
xlat
cs
sub
push
inc
adc
fisubl
movsl
or
add
and
out
shlb
dec
xchg
or
push
js
fistpl
in
adc
stos
add
cmp
sbb
push
cmp
cwtl
scas
cld
push
or
int
jmp
addl
pop
xchg
jg
cmp
clc
sub
mov
fisttpl
cli
push
shll
sbb
ljmp
popa
and
push
add
sbb
into
jo
cmp
sub
dec
mov
fwait
insb
in
fstps
inc
int3
jge
sub
pop
cmc
js
inc
iret
inc
push
push
ss
mov
sbb
aam
addl
adc
jp
push
xlat
notl
addr16
lods
jno
mov
arpl
mov
jge
xor
cmpsl
inc
sub
mov
pushf
jecxz
iret
dec
inc
push
add
sub
pop
mov
dec
fldenv
inc
rcll
shlb
jmp
and
add
mov
mov
adc
pop
lahf
mov
add
mov
jo
mov
xchg
push
inc
mov
enter
xchg
addr16
leave
or
shll
xor
rep
ffreep
push
xor
data16
and
nop
in
mov
xchg
mov
mov
cmc
pop
data16
or
cs
pop
cltd
repnz
jno
jns
nop
je
mov
hlt
cwtl
aaa
jb
insb
cmpsl
mov
stos
clc
dec
xchg
push
inc
imul
cmp
xchg
cltd
xchg
add
ds
dec
xchg
shll
or
xor
sbb
ja
movsb
mov
arpl
mov
cli
stos
push
jnp
mov
mov
pushf
and
fisttpll
cmpsl
or
push
sbb
cld
pop
xor
and
icebp
bound
aad
into
out
jl
addr16
lods
stc
mov
sbb
dec
xor
push
dec
add
addr16
sub
out
add
gs
adc
mov
psllw
daa
in
xor
dec
test
jo
sbb
sbb
nop
push
sbb
fwait
dec
inc
cli
stos
movsl
and
jge
jl
or
cmpsl
into
cs
mov
jle
push
adc
lock
fstpl
xchg
loop
pushf
inc
or
sbb
jne
sti
data16
aaa
or
pop
fwait
outsl
js
fwait
inc
adc
sti
mov
jmp
int3
insb
ficompl
push
push
cmpsl
push
mov
popa
mov
dec
out
jp
xor
xchg
shll
mov
push
fnstsw
xor
cmpsl
shlb
pop
int
add
jns
mov
pop
push
stos
mov
sbb
jno
movsb
in
pop
xor
sbb
out
or
mov
cmp
inc
mov
and
pop
mul
movsl
adc
shlb
pop
jmp
loop
adc
sbb
or
cmp
out
adc
dec
fs
movsb
incb
adc
and
iret
insl
repnz
jne
ds
jnp
mov
adc
out
sarb
js
inc
cmp
pop
dec
clc
push
jo
cs
xchg
shlb
mov
mov
imul
addr16
stos
xchg
outsb
xor
gs
xchg
mov
push
aas
sti
ja
outsl
dec
cmpsb
push
ja
xor
push
xor
xchg
daa
push
int3
mov
repnz
sbb
int3
outsb
sti
adc
cmp
ljmp
mov
cmp
cs
jge
movsl
mov
cltd
movsl
cltd
jbe
rcl
iret
pop
mov
mov
mov
test
lcall
data16
or
imulb
mov
inc
cwtl
stos
cmp
sub
xchg
sub
jmp
add
mov
pop
outsl
mov
das
add
mov
adc
jbe
sub
and
cmpsb
lods
fildl
fs
dec
jbe
jl
xchg
xchg
dec
mov
pop
popa
call
mov
int
cmc
dec
or
adc
cmc
insl
jl
lods
adcb
cmp
push
ficoml
cmc
xor
inc
mov
loope
adc
cmp
mov
les
xchg
dec
push
sbb
roll
xchg
lods
jne
xchg
lock
sub
loope
xchg
and
cmp
or
add
outsb
fsubs
xor
and
cs
pop
jae
sub
adcl
leave
xchg
decl
dec
mov
ds
inc
orb
mov
mov
pop
cmp
pop
cmpsl
jmp
dec
das
insl
idiv
add
leave
cltd
add
push
add
sarb
and
lock
ss
outsl
jbe
add
dec
and
sahf
cmp
hlt
nop
test
xor
adc
lock
pop
dec
das
dec
test
push
rcrl
lea
in
jno
sub
inc
lods
cmp
push
lahf
aaa
adc
sti
neg
adc
xchg
stos
daa
daa
jmp
or
cwtl
jae
out
mov
shl
and
adc
cmp
lahf
rcrb
gs
mov
pusha
and
sbb
pop
mov
lds
jecxz
jno
test
adc
and
out
push
xchg
cs
mov
shlb
cmpb
nop
cmp
test
xor
cmp
xchg
xor
adc
dec
fistl
js
fldpi
ret
adc
aas
jb
xor
adc
ds
push
dec
jmp
in
dec
dec
mov
lea
adc
xor
ds
pop
fcoml
add
xor
mov
add
add
and
sbbl
lret
push
push
xchg
mov
scas
arpl
push
jns
ficoml
jno
pop
add
popa
adc
pop
inc
in
pop
jle
sub
jge
loopne
pop
jle,pt
popa
idivb
sub
cs
lods
scas
popf
out
adc
into
pushf
or
mov
sbb
rolb
mov
or
mov
call
or
xor
adc
xchg
and
jl
scas
clc
mov
aam
dec
fadds
das
xor
leave
push
sub
push
loopnew
ds
lods
pop
test
cmp
out
and
loop
dec
xlat
and
xor
mov
cmp
in
mov
inc
inc
mov
sub
neg
shlb
and
je
leave
dec
jg
lods
stos
imul
fidivl
pop
repz
arpl
jae
xchg
pop
pushf
enter
pop
adc
pop
stc
popf
movsl
jae
xorb
mov
pop
mov
ret
xor
sub
bound
out
std
stc
lret
cmc
sahf
test
fwait
add
xchg
mov
inc
cltd
testl
jl
ficoms
test
lret
lcall
loopne
jg
inc
pop
vcmpss
pushf
sbb
popf
imul
movsb
bound
sub
adc
popa
in
ret
push
subb
rcrl
pop
sbb
add
test
rcl
xchg
cmp
inc
mov
xor
and
jbe
mov
ja,pn
test
cmc
stc
ret
insl
dec
push
sub
dec
or
loopne
inc
xchg
cmpsl
negb
shll
sahf
sbb
push
push
movsb
js
int
ret
dec
xor
lods
pop
jae
jne
mul
pop
aas
push
outsb
test
mov
movsb
sbb
jg
sub
data16
ss
cmp
enter
push
ljmp
fldcw
jbe
ja
cmpsl
add
lcall
sbb
popa
pop
lock
mov
cmc
adc
mov
popf
push
cmp
add
mov
push
stos
out
or
mov
out
daa
je
push
sahf
dec
mov
or
ljmp
inc
and
xchg
jl
mov
push
lcall
ds
sub
mov
imul
cmpsb
xchg
loop
sahf
sub
sbb
and
mov
stos
gs
test
lahf
jo
mov
mov
add
jp
or
pushf
lods
pop
cmpl
adc
push
call
movsl
xlat
mov
cmp
enter
xor
rolb
aas
adc
pop
ja
fwait
mov
test
inc
cmp
insl
xchg
lods
lods
ja
loop
and
push
push
ret
add
popa
cmp
sti
out
cmc
in
xor
popa
xchg
leave
cld
inc
adc
dec
mov
jb
out
mov
adc
sub
mov
mov
jecxz
jmp
fists
outsl
or
lods
push
dec
inc
mov
mov
xchg
in
sbb
push
pop
xchg
adc
sbb
in
jae
pop
call
hlt
or
leave
sbb
pusha
hlt
and
or
mov
cwtl
inc
add
leave
insb
nop
cmpb
xchg
out
int
jbe
data16
lret
xor
dec
notl
inc
stos
lret
rcrb
xchg
xor
loopne
sahf
cmp
push
ds
add
mov
pop
xor
mov
sbb
call
sbb
lret
mov
arpl
add
add
cmp
push
shll
or
icebp
jo
or
mov
rolb
sub
and
popf
pop
sbb
fmull
dec
lods
iret
and
outsb
cmp
xlat
and
mov
aas
push
out
and
cmp
into
pop
xchg
shrl
das
pop
add
adc
jg
cmp
inc
jmp
or
int3
mov
sub
jne
mov
mov
inc
loop
frstor
xchg
pop
add
add
movsl
jle
xor
pop
out
sub
push
cltd
dec
add
dec
cmp
lcall
in
jae
jno
inc
push
push
out
lods
lock
lahf
xor
cmp
xchg
data16
pop
sub
into
mov
call
rolb
or
das
xor
stos
xrelease
xchg
xchg
mov
out
js
adc
pop
ds
pusha
adcb
lods
int
jmp
out
fistps
fnstcw
mov
mov
mov
mov
adc
mov
lret
jp
fstpl
outsl
fcmovb
sub
movsl
les
sbb
out
and
mov
fcomps
cmpsb
push
add
dec
insb
inc
and
aad
test
or
push
imul
fadds
sbb
movsb
stos
test
loop
leave
add
cs
pop
rolb
sti
test
inc
shlb
cmpsb
xor
insl
mov
inc
scas
fdivrs
stos
popf
sti
jae
sbb
xchg
sub
out
incb
mov
add
dec
popa
insl
out
lds
xor
cmp
xchg
ja
into
out
dec
mov
sub
gs
dec
mov
das
sbb
pusha
shll
call
lret
mov
mov
push
mov
sbb
fstpt
push
mov
loop
ds
mov
and
adc
std
push
push
je
fstpt
inc
loope
fwait
sub
stos
das
inc
xchg
mov
popa
jo
loope
or
cs
aaa
cmp
sub
sbb
xchg
push
adc
jnp
xor
or
mov
movsb
pop
inc
rol
test
sbb
inc
add
pop
inc
movaps
mov
cmp
imul
push
add
jnp
punpcklwd
or
fisubrs
pop
gs
sub
mov
cwtl
pop
push
js
mov
data16
mov
pop
je
mov
je
add
add
xchg
loop
dec
mov
int
mov
les
cmpsb
lods
or
std
sbb
sahf
sti
push
or
or
orl
cmp
addb
mov
or
int3
sbb
pop
or
or
sbb
xor
stos
cmc
icebp
loop
popa
pop
jp
mov
sbb
cmp
lret
outsl
mov
push
iret
test
mov
hlt
orl
xlat
pop
cmpl
icebp
call
pop
mov
or
sub
iret
std
xchg
mov
jmp
xchg
or
enter
outsb
pop
xor
mov
adc
jo
xor
jmp
cltd
fisubrs
sub
es
vmread
and
mov
mov
xchg
cmp
test
stc
subl
push
mov
push
sub
mov
add
pop
sbb
ret
and
out
out
inc
sub
sbb
fsubl
jecxz
fbld
lods
leave
dec
cmp
xchg
fcomip
pop
mov
mov
or
adc
stos
das
sbb
arpl
sbb
arpl
es
stc
push
dec
adc
mov
test
mov
lret
lret
pop
mov
repnz
repz
cmp
lock
push
dec
lret
jecxz
in
loop
nop
scas
in
nop
sbb
xlat
xor
pushf
adc
ret
pop
sbb
js
sub
fwait
push
insl
lahf
fs
mov
js
aas
jno
leave
push
daa
sbb
dec
dec
push
sti
mov
adc
mov
int
popa
adcb
clc
idivl
push
fcoml
dec
xor
enter
negb
ret
pop
dec
sbb
adc
ss
aas
aam
adc
inc
push
dec
pop
lcall
lock
or
pop
mov
mov
dec
pop
mov
add
and
cwtl
jbe
pop
pop
adc
xchg
bound
in
xor
jecxz
sub
pop
fisttpll
ret
jns
roll
popa
and
fildll
call
sbb
sbbl
adc
cmp
sub
adc
sbb
sbb
or
push
les
push
pop
ficoml
and
sub
push
cmp
rorl
jle
cmp
shrl
or
fstl
pop
mov
sbb
sarl
mov
add
add
sub
das
das
ret
sbb
xor
mov
jl
shll
push
adc
ja
jns
sbb
mov
frstor
arpl
inc
or
dec
aam
call
rclb
ljmp
mov
push
push
int
in
xor
jne
in
ja
shlb
push
inc
aas
scas
fs
jae
adc
shr
bound
test
fisubs
mov
test
lret
adc
mov
pop
aaa
fstpl
pop
mov
xor
dec
jo
dec
fisttpl
jle
pop
push
pop
mov
cmp
jb
je
mov
inc
push
ret
mov
jae
add
xchg
dec
xorb
push
movsl
add
cmp
out
es
mov
add
push
cmp
push
sbb
pop
dec
scas
sub
aam
cmp
xor
dec
popa
jae
sbb
add
mov
fistpl
and
test
int3
xchg
jno
imul
lret
jmp
repz
clc
cmp
or
movsb
pop
dec
mov
mov
mov
sahf
ss
test
lods
xchg
rol
sbb
mov
lcall
mov
cmpsl
arpl
mov
jb
in
adc
dec
adc
add
movsl
mov
xchg
ret
rclb
popa
stc
jg
in
cmpsb
inc
jl
neg
pop
loopne
mov
ficoml
or
stc
cmp
jecxz
notb
shll
lock
idivl
add
sub
xor
fldenv
cwtl
insb
or
std
movl
test
jg
rcr
arpl
fisubrl
pop
or
sbb
push
mov
movsl
lds
pop
js
sub
dec
bnd
sbb
inc
mov
mov
into
repz
mov
xchg
xchg
loopne
xlat
mov
adc
lret
cld
leave
rcrl
xchg
adc
cmp
aas
push
cltd
stos
das
int
cmp
dec
cmpsl
dec
push
add
pop
in
dec
cmp
adc
mov
xor
mov
test
cwtl
add
popf
loope
xor
jne
iret
and
pop
jmp
ret
xchg
or
scas
in
dec
inc
ljmp
adc
and
dec
push
es
test
cmpsb
pop
xor
sahf
and
bound
repz
xor
pop
mov
jge
fwait
cmp
repz
cmp
inc
jle
out
and
sbb
gs
incb
xorb
iret
jo
mov
dec
aas
orb
xchg
dec
pop
cld
sub
fsubs
arpl
aaa
fwait
adc
mov
sbb
push
in
lret
jbe
adc
in
jno
enter
imul
or
sbbb
sbbl
callw
mov
mov
jg
xchg
xor
xlat
cmp
int3
in
adc
das
push
inc
iret
ret
xchg
les
fcmove
xchg
push
mov
xor
sub
js
xor
push
int
adc
jae
std
ja
mov
ret
pop
clc
mov
sub
es
lcall
test
push
jno
scas
dec
xor
sbb
pop
pop
data16
mov
pop
popa
idivl
call
test
loope
add
push
xor
in
push
mov
inc
test
lock
scas
xor
out
sbb
fsubs
xchg
lcall
mov
popf
dec
shrb
cmp
pushf
mov
push
dec
mov
roll
fadds
pop
enter
jne
data16
leave
cmp
mov
inc
repz
inc
pop
jae
stc
stc
inc
shr
stos
push
cmp
inc
int3
lock
call
cld
js
dec
jl
lods
mov
sub
adc
sub
xlat
shlb
jge
cmp
mov
mov
fildl
ljmp
test
sub
cmp
cmp
pop
sbb
mov
into
inc
js
in
inc
pop
les
mov
or
mov
push
clc
jg
adc
loopne
loope
out
lret
pop
jno
call
mov
cmp
xor
jno
xchg
push
ret
adc
jecxz
orl
fisubrs
push
stc
nop
xchg
ret
into
dec
xor
loope
or
jb
push
adc
xchg
aam
call
imul
dec
sub
ss
loope
add
inc
in
es
cmp
jmp
or
jae
xor
inc
jp
rcrl
push
sbb
sti
into
imul
sbb
mov
je
sub
cmp
out
xor
mov
push
xor
iret
nop
mov
jae
jae
ljmp
test
pop
loop
jno
andb
xchg
mov
in
fcos
and
test
insl
xchg
addr16
adcl
in
aam
ja
mov
loop
cs
mov
xchg
aas
mov
push
cs
xor
sti
xor
mov
jmp
int3
or
cmpsl
in
pop
mov
adcl
je
stos
mov
xor
jg
in
mov
aaa
push
xchg
mov
rol
mov
pop
pop
xor
imul
and
sub
jno
insw
push
jecxz
xor
cmpsl
stos
pop
pop
jp
out
loope
jle
outsb
adc
aaa
rcrb
leave
xor
mov
andb
arpl
clc
push
clc
push
je
scas
inc
ds
jle
mov
xchg
int
adc
push
mov
jbe
sahf
push
insl
pop
push
inc
or
sbb
jecxz
imul
cmp
out
int
jmp
push
adc
pop
jae
lea
ret
xor
jnp
sarl
sti
stos
xchg
lret
push
mov
test
adc
add
mov
mov
push
xchg
popa
das
das
and
cmp
and
in
fsubrl
mov
sbb
in
cmp
out
pop
out
and
fildl
pop
mov
out
cltd
loopne
cltd
push
adc
vmread
pop
jno
enter
cwtl
popa
loop
cmpsl
leave
cmp
iret
enter
nop
or
ljmp
in
fwait
imul
mov
sbb
fnstsw
lods
out
add
shrl
loope
pop
mov
mov
ljmp
aas
or
cmpsl
xor
cmp
shlb
std
bound
addr16
ja
xchg
subl
test
ret
add
cwtl
icebp
es
cmc
or
stos
call
add
sub
jo
jbe
test
add
xchg
sub
negb
jmp
or
add
pop
movsb
test
aaa
adc
hlt
test
pushf
in
cmpsb
lret
sbb
push
loope
jmp
pop
addr16
dec
mov
test
xchg
xor
jbe
cmpsl
int
cmp
das
outsb
xchg
push
mov
push
sbb
xchg
jecxz
xor
daa
and
aas
mov
cs
iret
xchg
jae
fld
fadds
lcall
ret
test
fisttpll
mov
ret
pop
mov
add
mov
pop
loopne
jnp
dec
xor
das
fadds
adc
push
and
xchg
jg
lods
pop
aaa
jg
pop
lahf
ss
and
mov
inc
jle
xchg
loopne
test
bound
push
dec
xchg
xchg
fcmove
push
insl
mov
imul
pop
mov
bound
insl
mov
mov
jnp
or
push
fwait
iret
rcrb
shrl
and
add
int3
out
test
pop
lds
xchg
rorl
repz
xor
dec
por
xchg
push
cmp
test
push
mulb
push
mov
push
push
jg
or
inc
xchg
ss
push
lret
mov
in
daa
push
cmpsl
jns
add
pop
std
ja
mov
cli
jae
leave
lret
lret
jecxz
iret
pop
mov
push
xchg
xor
pushf
fnstenv
mov
pop
stos
sti
pop
test
xchg
shl
xchg
ds
test
fs
aaa
xchg
pop
test
aas
inc
in
out
or
dec
cwtl
daa
insb
adc
xchg
mov
dec
add
cmp
test
pop
push
outsb
xchg
xchg
ja
mov
stos
aam
nop
add
sbb
pop
imul
adc
pop
jno
dec
add
mov
sbb
nop
dec
fisubrl
and
dec
les
jmp
and
lods
mov
xor
in
je
pop
sbb
dec
insl
sub
rorb
sbb
aad
into
sub
push
sarl
dec
std
xchg
test
int
mov
das
imul
movsl
cmp
lods
jne
call
das
xor
inc
sahf
das
loopne
xor
loope
mov
adc
aas
cli
lods
stc
scas
jno
stos
repz
mov
lds
adc
and
orb
jbe
sub
ja
imul
in
jns
popf
mov
push
and
adc
movsl
sub
fidivs
adc
xchg
or
cld
mov
repz
ret
fistps
insl
scas
adc
insb
test
lock
icebp
outsl
mov
adc
inc
cmc
sti
idiv
mov
sbb
pop
ret
cwtl
fstps
sbb
iret
push
jmp
push
mov
lcall
jno
inc
mov
pushl
inc
insl
mov
adc
xchg
stos
add
add
das
pusha
jle
cmp
stos
adc
or
cmpsl
lds
std
mov
add
mov
pop
enter
sbb
adc
fidivs
pop
cmp
or
adc
push
mov
adc
pop
pop
add
push
negb
ss
ret
inc
or
cmpsl
xor
push
out
ficoml
stc
inc
mov
push
lods
lea
add
or
mov
icebp
ja
add
add
aaa
loope
pop
xchg
jo
std
insb
xchg
out
aam
dec
push
mov
dec
sbb
cmpsl
clc
stos
mov
mov
xor
cmpsb
jnp
es
and
xor
in
aad
fmull
jle
xchg
mov
and
mov
lods
repz
aas
arpl
push
mov
pop
mov
adc
and
incl
adc
outsl
or
mov
aam
scas
jnp
xor
cwtl
jb
push
scas
int3
jae
int
lahf
insl
rolb
imul
xor
or
ja
sub
clc
mov
xchg
mov
lcall
loopne
cmp
mov
repnz
icebp
clc
dec
ret
jbe
adc
mov
push
dec
ds
mov
xor
adc
cmp
sbb
jb
xchg
iret
push
mov
cltd
pushl
iret
cs
pop
imul
xlat
adc
lcall
repz
jge
insb
packsswb
jl
imul
inc
mov
daa
push
jl
test
sbb
inc
mov
adc
push
call
adc
pop
testb
mov
jle
pop
cwtl
ds
push
push
fmuls
cmpxchg
cmpb
pop
out
or
jle
sub
daa
stos
jecxz
push
ljmp
cmp
repz
mov
or
jg
dec
fidivrs
xor
cs
mov
cli
gs
push
shrb
adc
mov
sub
xchg
cmpsl
push
std
push
mov
rolb
cld
jae
adc
sbb
out
xchg
shll
push
pusha
push
jp
add
decl
loopne
and
xchg
inc
lods
loope
cmp
add
push
popf
iret
pusha
lret
sbb
add
fdivrs
sbb
add
loopne
fwait
lahf
adc
jecxz
das
es
jb
cmp
cmp
mov
in
repz
or
icebp
faddp
mov
add
add
lock
mov
cmp
sbb
add
jno
in
lahf
or
and
cmp
push
movsb
inc
dec
cmp
pop
out
lea
fsts
sub
inc
sbb
inc
dec
cmp
push
bound
inc
xchg
dec
mov
lods
test
sahf
ja
xchg
mov
rcrl
sbb
pop
inc
outsl
push
iret
out
mov
jge
cmpsl
addr16
lods
sbbl
cmpsb
mov
jae
dec
jno
mov
sub
jge
hlt
sbb
cld
iret
imul
adc
test
in
add
in
fcoms
push
inc
pop
mov
cmp
cwtl
aaa
cmc
cwtl
xchg
out
xchg
ficoms
es
js
adc
add
cmp
sbb
pop
and
xchg
fcmovne
sub
int
testl
les
das
pop
in
outsb
jmp
and
push
stos
push
mov
xor
les
or
sub
test
cmpsb
rep
outsb
in
clc
je
lahf
jecxz
je
setns
xchg
push
jbe
cmpsb
pop
jecxz
jne
test
dec
ljmp
out
jo
jno
mov
cmp
cmc
push
push
jp
out
lea
or
push
xchg
pop
cmp
dec
pop
cmc
ret
or
xor
sbb
fsubrs
mov
xchg
xchg
xchg
cmpsl
sub
fstp
push
mov
jae
and
scas
adc
lcall
ljmp
shll
icebp
js
adc
fwait
push
cmc
call
inc
lcall
enter
dec
push
push
sbb
loop
cmp
js
lret
pop
inc
imul
int3
pop
mov
pop
mov
fimull
jno
inc
cmpsl
lret
pusha
xchg
sub
test
cmove
xor
jge
daa
jmp
subl
sbb
out
loopne
pop
xchg
jge
xor
adc
sub
jge
mov
push
and
adcb
jae
call
in
adc
push
lds
jb
cltd
dec
xchg
scas
push
sub
and
inc
jg
sub
test
cmp
rclb
xor
lods
xchg
flds
pop
pop
dec
stos
sub
pop
jp
xchg
idivl
sub
pushl
mov
jl
lcall
out
orb
lods
mov
pop
push
dec
cmc
or
rcrb
jge
iret
data16
gs
cmp
notl
mov
repz
sarl
in
xchg
pop
push
mov
les
ljmp
cmp
stc
movsb
cmp
sub
call
and
sbb
jge
ja
xchg
arpl
dec
and
mov
jecxz
jnp
add
fisubl
push
xor
xor
push
or
xchg
daa
push
test
in
insl
out
int
int3
and
cmp
push
adc
push
dec
mov
xchg
inc
inc
push
push
std
aaa
pop
lret
pop
in
insl
push
pop
shrl
loop
dec
push
xor
leave
arpl
lret
mov
dec
test
mov
lret
or
add
je
push
mov
jne
add
or
insl
cmp
dec
dec
jbe
into
mov
mov
and
mov
mov
mov
lret
mov
sbb
adc
aam
mov
mov
fs
or
dec
test
push
sub
adc
movsb
roll
icebp
gs
dec
mov
aam
ret
fdivrp
loope
je
jno,pt
movsl
lcall
sbb
bound
xchg
jl
mov
fists
out
jns
mov
popf
push
pop
mov
out
addr16
js
pop
mov
and
lods
pop
cld
lret
jg
ret
pop
out
pop
stos
loope
inc
insb
push
fdivl
mov
stc
add
js
jg
das
or
scas
and
loope
rorb
push
push
in
cmp
jae
adc
mov
and
movb
push
test
orl
out
xor
adc
add
das
enter
adc
push
and
and
xor
int3
cs
mov
orb
pop
push
cmc
jecxz
ret
mov
icebp
shrl
and
mov
push
or
repnz
pushf
insl
mov
jb
push
cld
call
sar
rclb
ljmp
lret
cmp
mov
lcall
mov
das
je
out
jno
add
test
push
cmp
mov
aam
add
or
pop
and
and
sarl
sti
pusha
shlb
rclb
inc
std
out
and
sbb
push
dec
dec
std
and
pop
pop
popf
mov
mov
jne
xchg
and
or
in
mov
pop
jae
in
int
mov
and
pushf
ljmp
lods
adc
push
push
pop
loop
popf
xchg
xor
inc
xchg
popa
aam
jno
adc
jb
sahf
push
leave
lahf
sbb
in
sbb
nop
jb
dec
pop
mov
sarl
or
cmp
mov
std
repz
inc
movsl
in
and
clc
mov
movsb
stos
sbb
icebp
ja
jnp
jg
rcrb
orb
lret
loope
sbb
icebp
stos
push
add
mov
jl
or
cwtl
push
mov
fbld
int
xchg
pop
outsb
scas
cmp
cmp
in
shll
fidivrs
mov
insl
js
jae
push
push
mov
cmovbe
js
pop
adc
in
es
cwtl
sbb
pop
pop
loopne
pop
test
pop
sub
push
jp
repz
stc
cmp
pushf
repz
js
mov
in
cs
add
cmp
fcomps
push
clc
icebp
push
xchg
stos
xchg
cmp
sbb
inc
push
mov
test
in
negb
int
push
xor
jns
xchg
or
jae
inc
sbb
xor
mov
loopne
dec
sub
or
sub
or
cltd
leave
das
and
fcmovne
jl
xor
cli
sub
mov
lods
cmp
lcallw
cwtl
sbb
sub
int3
add
xor
aam
call
out
xor
jle
sub
jno
ret
loopne
mov
xor
sub
call
push
aad
push
xlat
aam
cmp
adc
pusha
outsb
jae
mov
orl
testb
lea
mov
push
jae
sub
mov
sub
cmp
lds
pop
mov
scas
jae
in
dec
inc
cmp
xchg
cmp
jg
dec
or
popf
aam
mov
sbb
jecxz
xor
rclb
adc
je
lret
enter
push
mov
mov
mov
cs
push
sub
or
repz
mov
push
mov
mov
push
xor
pop
clc
aas
cmp
jle
jmp
jl
dec
dec
mov
bound
or
enter
lcall
push
test
orb
sub
imul
or
icebp
sti
xchg
scas
int
mov
enter
in
jg
rorl
dec
lock
addr16
clc
and
mov
pusha
in
test
xchg
add
mov
mov
inc
mov
or
mov
mov
out
in
das
inc
adc
mov
dec
xor
sti
jo
jge
xor
pusha
push
ss
movsl
sub
push
cmc
loopne
dec
sub
sahf
repz
mov
sub
sarb
mov
enter
mov
pusha
mov
ret
gs
clc
xorb
call
lret
push
push
out
fildll
pusha
fdivs
inc
adc
jp
sub
mov
movsl
dec
andb
fstpl
add
or
xchg
lods
cli
adc
jmp
cmp
out
jns
and
adc
popf
jp
or
jg
dec
lods
inc
call
jbe
stc
in
adc
adc
push
cltd
or
fcompl
cltd
leave
in
cld
add
or
in
dec
jp
jo
mov
imul
jp
lcall
add
pop
rcrl
mov
imul
add
out
pusha
push
push
add
jb
or
jno
adcb
imull
push
push
lock
aaa
cwtl
shlb
jne
aas
adc
xchg
loop
les
cwtl
movsb
in
fimuls
pop
mov
dec
mov
insl
pop
rorl
jl
adc
inc
leave
mov
pop
nop
cmp
jg
data16
testb
push
and
or
sti
cmp
xor
inc
aam
shrl
cmpsb
inc
inc
xorb
data16
sarb
leave
lcall
lret
fistl
inc
aam
insb
sub
aas
rcll
movsb
stos
xor
xor
scas
mov
xchg
add
andb
dec
add
mov
inc
add
or
or
jae
in
daa
or
sub
fldl
or
push
stc
and
inc
inc
imul
stos
sbb
rclb
and
sbb
addr16
xor
mov
pusha
daa
ds
xchg
jnp
sbb
lahf
jge
mov
cmpsb
cmp
or
jle
imul
add
lcall
mov
into
jae
or
aam
inc
push
inc
push
sti
add
lret
jns
or
hlt
xchg
xchg
pop
and
icebp
jle
fs
or
sbb
clc
pop
jmp
fs
cmp
xlat
mov
xor
xchg
hlt
test
push
and
xor
imul
in
push
arpl
ljmp
loope
cmp
popa
test
push
pop
sbb
lret
movsl
aad
cltd
mov
xlat
call
sub
gs
ds
les
fcmovnb
xchg
shl
flds
xchg
xor
and
mov
push
sub
xchg
rcrl
insl
xor
cmp
adc
cltd
mov
mov
dec
adc
mov
mov
sub
imul
jns
imul
push
sub
dec
fstpt
add
lret
je,pn
push
jnp
jle
and
mov
rcll
jecxz
xchg
jne
lea
cmpsb
inc
xchg
push
cmpsl
aaa
sub
and
adc
cmp
jae
or
sub
mov
xchg
inc
mov
out
test
call
ss
push
or
inc
in
xor
mov
pushf
mov
xchg
aaa
sbb
popf
aam
dec
call
imul
mov
adc
sbb
sbb
and
jbe,pn
es
add
pop
aam
and
mov
pop
stos
push
sub
mov
sbb
xor
jmp
xchg
out
jb
xchg
enter
pop
andb
fdivrl
movsl
test
mov
or
lret
mov
pop
add
cmp
rolb
sbb
fstps
fdiv
push
mov
fdivrs
insl
adc
aas
adc
mov
jg
dec
fdivs
pop
fisubl
or
nop
imul
push
sbb
cmpsl
mov
inc
fucomi
xchg
inc
inc
dec
iret
xchg
adc
frstor
lret
push
adc
ficoml
and
fsts
sub
jo
adc
pop
fdivrl
in
enter
cld
mov
dec
sbb
sbb
sbb
adc
cmp
dec
das
aam
jae
test
in
jnp
loopne
mov
dec
pop
push
cmp
push
ss
mov
leave
jmp
in
repz
in
and
lods
stos
fiadds
repnz
std
shll
lcall
pop
mov
loopne
insb
dec
out
call
mov
dec
push
iret
add
and
loopne
cmp
pop
pop
push
mov
iret
sbb
out
cld
fdivrs
fnstenv
adc
jg
std
cmp
sub
repz
pusha
sub
mov
sub
or
mov
js
les
sub
inc
fcmovu
and
add
out
pop
test
inc
add
mov
das
xor
xchg
cli
cli
inc
aaa
sti
repz
lret
movsl
dec
test
mov
sub
dec
xlat
ss
push
aam
sub
data16
in
mov
jb
in
jg
xlat
adc
fsts
sti
pop
and
sub
test
sub
jl
fcomi
cmp
addl
mov
mov
enter
jbe
jecxz
out
push
jo
xchg
push
sahf
mov
int3
add
adc
add
ja
mov
add
negb
xor
subl
jmp
nop
mov
gs
sub
movsb
lret
sub
outsl
cmp
daa
pop
jp
mov
xchg
into
jno
stos
adc
dec
sub
lea
pop
icebp
scas
jmp
stc
jle
rcrb
inc
pop
sbb
in
dec
push
pop
sub
pop
out
push
mov
fisubrl
adc
clc
test
jns
sbb
cmp
bound
repz
dec
adc
pop
adc
mov
scas
sbb
push
les
xor
into
ss
sub
jo
arpl
xchg
in
rorl
fsubs
lods
test
std
inc
sbb
dec
inc
rclb
xchg
dec
inc
mov
lret
lods
mov
stos
pop
test
sub
roll
sbb
test
repnz
int
pop
dec
mov
push
iret
or
loop
add
pop
imul
cmc
add
gs
jp
xchg
push
pop
test
mov
cmpsl
sub
push
sbb
out
lods
outsb
sub
xor
outsl
wrmsr
mov
les
ret
sbb
cwtl
jo
mov
mov
je
add
test
jmp
push
arpl
repnz
jnp
and
xor
add
push
cs
cmpb
jmp
outsb
push
mov
push
mov
push
cmpsl
push
mov
nop
out
addr16
rcll
cmp
into
lock
cli
mov
jo
inc
pop
jnp
jae
xor
das
lcall
outsb
data16
in
jge
xorb
fcompl
jne
cld
jg
stos
inc
imul
aas
push
subb
daa
xor
mov
test
scas
jg
or
sub
scas
lds
or
cld
and
push
in
mov
ret
mov
jo
dec
lret
pop
out
stos
mov
inc
lcall
xor
les
lcall
repz
out
clc
sbb
sahf
mov
mov
and
mov
movsb
paddb
xor
sbb
das
push
pop
jne
shr
sub
and
push
mov
sbb
xor
cmp
out
jle
in
pop
sub
aas
pop
stos
loope
popf
icebp
add
xchg
xorl
mov
into
sub
js
pop
sbb
inc
xchg
pusha
push
or
or
shrl
add
inc
mov
clc
push
mov
push
xlat
negl
jp
xor
push
mov
imul
dec
out
je
xchg
push
dec
cmpsb
aaa
mov
movsb
mov
fbstp
mov
pusha
in
push
mov
sbb
push
pop
test
inc
pushf
jecxz
loop
js
xchg
ljmp
push
sbb
aas
int3
xchg
bound
rorb
sbb
sar
js
inc
xchg
xor
int3
fs
add
inc
jmp
aam
sbb
ljmp
pop
cmp
xor
push
icebp
inc
loopne
mov
fsts
stos
cmpsb
setl
cmpsb
loopne
adc
and
mov
gs
add
mov
test
incb
lahf
push
cmc
sub
push
lods
pusha
push
pusha
fstpl
xchg
push
xchg
out
xchg
mov
test
loop
sub
xor
ss
outsb
push
lcall
vmaxpd
stc
cmc
lret
sbb
push
dec
mov
in
add
ja
ljmp
mov
fcomps
adc
movsb
pop
dec
sbb
outsl
xor
cltd
aas
idivb
xlat
xor
and
push
or
leave
push
cld
test
cmc
stos
mov
add
out
sbb
imul
aaa
mov
scas
pop
and
movsb
mov
cld
mov
or
and
rcrl
dec
dec
iret
cltd
jne
xor
ficoml
push
mov
and
sbb
mov
fcoml
cmp
fcoms
lods
sub
andl
daa
jecxz
int
cmp
in
ret
adc
lahf
addb
add
cmc
out
xchg
int
dec
out
xchg
fsubs
rolb
pop
lds
inc
mov
rorl
dec
scas
jbe
mov
int3
mov
loop
test
mov
fdivrl
mov
mov
mov
or
mov
lods
dec
fpatan
orl
or
arpl
aam
fs
xor
mov
div
lock
dec
int
bound
or
imul
inc
out
jns
jns
cld
dec
test
pop
loope
out
adc
adc
and
or
cwtl
cmp
repz
sub
ds
fiaddl
mov
popa
cmp
mov
cld
subl
jge
out
xchg
gs
pusha
loopne
aad
adc
arpl
imul
into
js
repnz
jno
ja
fnsetpm(287
xchg
loopne
mov
movsb
test
add
in
dec
inc
cli
cld
stc
in
sbb
sub
aaa
add
sub
sbb
and
lock
gs
inc
cwtl
jge
push
jecxz
mov
pop
mov
cmp
loopne
jmp
xlat
pop
jmp
and
pop
or
sub
test
jnp
fstl
or
cmc
pop
lods
out
stos
leave
fwait
xchg
cmp
sbb
dec
data16
sbb
and
push
jmp
push
adc
aaa
ja
and
imul
lret
call
xor
push
mov
stc
nop
jnp
sub
adc
cmp
adcl
mov
insl
out
bound
test
jl
pop
mov
jae
ljmp
mov
adcl
hlt
xchg
jle
jo
lock
xchg
sub
sbb
sbb
lret
mov
or
out
cmp
adc
and
hlt
jo
inc
xor
and
adc
andl
test
pusha
movsl
add
test
idivl
enter
js
dec
jo,pt
sub
inc
add
jl
fisubrl
or
lret
jl
scas
adc
cmp
clc
lret
insb
mov
and
mov
mov
lods
adc
sub
inc
sahf
push
adc
xor
cmp
dec
pop
lock
and
jo
add
subl
sbb
or
in
jo
stos
rolb
xchg
lds
arpl
ss
aam
xchg
scas
adc
jl
dec
jns
cmp
pop
sahf
or
adc
or
cltd
and
mov
ret
cs
mov
inc
jb
mov
push
push
cmp
push
sbb
push
sbb
and
test
pop
inc
or
adc
leave
testl
push
jae
xchg
sub
xchg
xchg
lcall
mov
or
popa
arpl
mov
inc
push
scas
into
or
orb
jae
repnz
sbb
scas
jne
xchg
dec
mov
pop
inc
cmp
aam
or
mov
adc
push
imul
test
pop
jge
cmp
cmp
loop
ffreep
in
or
sub
outsb
sbb
inc
out
pop
cmc
xchg
icebp
scas
ss
dec
pop
out
mov
dec
sbb
adcb
push
pop
negl
aad
inc
add
loope
xchg
push
leave
xchg
cmp
shlb
mov
data16
pop
ret
jbe
incl
or
bound
mov
pop
or
adc
inc
test
sub
sub
sbb
jecxz
pop
sub
xor
or
xor
enter
jns
jbe
mov
mov
scas
sahf
xchg
js
loope
cltd
inc
arpl
mov
dec
mov
iret
fisubrl
sbb
push
out
rcll
adc
lcall
xor
push
sahf
push
mov
subl
xor
out
add
js
aaa
push
mov
mov
adc
aad
aas
add
ljmp
mov
outsb
or
jmp
pop
scas
dec
and
int3
stos
dec
fnstenv
sbb
pop
int
pop
test
jle
outsb
xchg
sbb
pushl
bound
jge
mov
and
repz
push
bound
lds
mov
aad
in
or
movups
lcall
add
xchg
cmp
in
mov
fldenv
into
test
repnz
push
jns
lret
mulb
popf
test
cld
pop
sub
mov
mov
mov
in
cli
stos
xchg
push
aas
inc
xor
insb
rorb
add
xchg
or
mov
loope
sbb
dec
cmpsb
adc
add
push
pusha
fwait
in
sbb
fwait
sahf
and
rorl
pop
out
adc
fsincos
cmp
mov
addb
inc
popf
pop
jne
decl
dec
test
lods
and
mov
mov
imul
cwtl
dec
outsb
adcb
fsub
repz
mov
pop
push
pop
movsl
ficomps
repnz
ret
jg
adcl
aas
jnp
jg
adc
fs
adc
mov
mov
out
and
inc
xor
cltd
jnp
ret
iret
xchg
test
or
sbb
jae
cmp
stc
les
testl
cwtl
inc
sar
push
sub
repnz
pop
std
sbb
sub
xor
cs
in
xchg
adc
nop
out
ficompl
mov
mov
hlt
or
push
sbb
fdivs
inc
imul
inc
dec
add
cmpsb
lahf
call
mov
cmp
mov
or
or
xchg
mov
mov
cmpsb
add
test
insb
in
sub
mov
mov
mov
mulb
repz
xchg
aas
inc
dec
xor
cli
lods
or
lds
fsubrs
insb
daa
fisttpl
push
lret
scas
inc
xor
inc
xchg
fisttpl
jnp
dec
cmp
les
inc
shrb
cmp
xchg
aam
mov
or
inc
leave
jne
pop
frstor
and
fdivl
stos
add
xchg
xor
je
mov
mov
loopne
cmc
cmp
fimull
xor
into
inc
das
cmp
cltd
out
cli
in
iret
mov
lea
cmpsb
cmp
lcall
enter
jae
pop
fidivl
test
pop
pop
in
mov
fidivrs
jp
sub
inc
pop
mov
scas
jns
adcb
or
test
jns
add
test
movsb
sahf
fimull
cs
mov
sub
jnp
sub
int
cmpsl
pop
lret
dec
and
in
lock
pop
stos
mov
push
push
or
mov
push
fisttpll
fdivrl
lods
aas
pop
push
push
outsb
js
cmp
ret
sti
dec
adc
sbb
push
fnstenv
nop
adc
aad
imull
xchg
xchg
mov
pop
loope
sbb
cli
xchg
xor
js
pop
mov
xchg
jl
inc
mov
ret
cltd
or
pushf
fiadds
mov
xor
test
lods
or
shrl
push
insb
mov
pop
jnp
nopl
inc
mov
lahf
sub
shrw
outsl
jg
outsl
dec
pop
aad
stos
enter
pop
insl
push
mull
es
cmp
push
jns
xchg
lods
aam
add
adc
addr16
iret
jae
test
loope
jle
push
sub
leave
jp
mov
negl
or
push
sub
mov
xchg
sub
xchg
into
repz
xchg
cmp
stos
test
out
lcall
sbbb
push
lods
dec
cld
dec
std
and
add
mov
jge
mov
imul
jl
lret
jmp
jle
xor
ljmp
and
outsl
adc
jno
pop
clc
shrb
push
push
loop
xor
jb
test
insl
or
push
gs
rorb
add
adc
cld
mov
add
inc
push
arpl
jge
mov
and
mov
outsb
in
jnp
icebp
adc
add
test
xchg
out
imul
pop
push
out
aam
lret
pop
add
cli
push
and
fiaddl
mov
divl
aam
or
daa
mov
loopne
cmp
inc
imul
push
xor
addb
shlb
fadds
ljmp
mov
push
popa
test
push
stc
daa
xor
mov
jge
out
cli
inc
add
cwtl
ljmp
add
xchg
pop
xchg
adc
add
clc
pushf
push
xor
in
ljmp
mov
ficoml
adcb
rcr
insl
push
out
aam
and
or
xchg
mov
insb
inc
fs
sahf
adc
outsb
cmp
addr16
ljmp
xor
adc
fcomps
add
pushf
mov
mov
cmp
rcll
adc
insl
push
push
mov
pop
test
cmp
notb
jmp
pop
mov
ljmp
cmc
push
mov
xchg
aam
sub
dec
loopne
xchg
jno
inc
push
cmp
sub
test
inc
ret
js
mov
imul
call
pushf
inc
mov
sahf
push
and
repz
je
fs
out
mov
outsl
lahf
jno
test
sub
xchg
icebp
pushl
or
stos
dec
jbe,pn
mov
repz
cs
adc
sbb
orl
mov
mov
or
push
aaa
lds
jb
shlb
jns
pop
stos
dec
mov
or
fisttps
jge
and
test
movsl
ret
fwait
fs
jne
mov
jge
call
mov
sbb
pop
push
dec
pop
jb
xor
cli
dec
fstpt
test
mov
in
fs
dec
sahf
xchg
pop
test
add
sahf
inc
mov
push
arpl
cli
xlat
pop
dec
movsl
sub
scas
push
pop
ret
add
test
popa
sub
arpl
daa
xor
lods
push
mov
cs
cmp
loop
inc
mov
nop
or
daa
les
inc
adc
inc
sub
cmc
jl
stc
je
push
cmp
jp
adc
push
scas
pop
divl
lods
adc
and
bound
pop
rclb
popa
lods
inc
or
icebp
stc
xchg
fmuls
push
subb
call
add
jne
mov
mov
xchg
lea
jae
subl
add
sub
and
push
inc
outsb
aam
mov
ja
jne
push
mov
mov
pop
push
fnstcw
jne
sarb
add
mov
jecxz
jmp
mov
lock
and
ret
imul
pop
and
and
imul
lock
call
cmp
mov
inc
and
pop
or
sub
loopne
loop
ja
mov
lahf
in
jne
push
out
lret
xchg
cmp
fisttpl
popf
cmp
pop
sarl
add
outsl
sub
mov
mov
mov
out
lahf
jbe
add
jl
aam
xchg
divl
inc
pop
xchg
test
jmp
in
daa
sti
loope
mov
shlb
xchg
adc
cmp
jns
sbb
cmpsb
jp
add
fisubl
push
and
and
mov
jnp
aas
je
lds
mov
cwtl
xor
mov
lret
insb
inc
jns
add
push
rcr
mov
test
dec
add
mov
mov
les
ss
dec
mov
cmpsb
repz
psubusb
addr16
lock
bound
hlt
add
sbb
repz
sub
xlat
dec
lods
iret
scas
in
movsb
xchg
xchg
pusha
mov
test
sbb
cmp
sbb
adcb
rcl
push
test
popl
fwait
push
pop
enter
jb
in
lcall
pop
xchg
mov
out
arpl
cld
lahf
xchg
pushf
jae
repz
mov
enter
pop
jae
stos
jmp
hlt
add
lods
pop
data16
pop
sbb
mov
lods
test
jne
ljmp
xchg
lock
movsb
loope
cs
nop
xor
cmp
and
adc
dec
clc
pop
sti
sarl
push
jns
mov
or
addb
out
or
sub
jle
dec
addl
xchg
test
call
mov
fs
mov
dec
inc
xor
call
rcll
mov
pop
lret
sub
jae
mov
addb
stos
enter
or
aad
jne
jb
es
adc
cmp
insb
and
scas
and
and
test
jg
cmp
into
aaa
sti
movsb
scas
test
fdivl
popf
jne
push
adc
sbb
fldt
cwtl
aad
aad
outsl
faddl
add
pop
int
aad
mov
mov
mov
mov
aas
mov
adc
xchg
jp
mov
adc
mov
and
xor
insb
add
stc
pop
cltd
xchg
bnd
test
push
inc
shl
nop
jbe
leave
addl
out
pop
adc
call
xor
lcall
sbb
mov
adc
xlat
adc
lret
xchg
jo
xchg
jb
in
pop
or
icebp
fiadds
mov
fidivrl
adc
mov
pop
shrb
addr16
xchg
push
repnz
dec
push
roll
dec
mov
out
mov
push
ss
sarb
jbe
cmc
aam
das
or
lcall
mov
pop
and
cmp
icebp
lods
fstpt
add
subb
sub
jno
mov
xor
and
out
push
fs
jp
cltd
test
lahf
push
inc
dec
inc
jl
mov
add
adc
subl
adc
in
int
loope
cmc
imul
add
dec
outsl
testl
pop
lods
aad
mov
out
push
cmp
mov
cmpl
xchg
ljmp
stc
mov
movsb
and
imull
cmp
jnp
add
dec
cwtl
xchg
pop
scas
cmpsl
test
pop
mov
es
and
ret
stos
adc
dec
loope
adc
fbld
insb
pop
push
mov
fidivrl
loope
jge
call
cmpsl
add
sbb
xor
jecxz,pt
out
push
push
repnz
js
cmc
inc
inc
sub
cmp
fwait
les
test
sti
push
mov
pop
sahf
std
mov
sbb
mov
push
bound
xor
cmpsb
dec
mov
and
push
rcrl
cmpsb
or
imul
push
add
lods
ret
mov
fcmovnu
mov
push
dec
or
shl
dec
test
jmp
jne
lods
mov
rcrb
dec
or
iret
mov
ja
push
pushf
outsb
jecxz
insl
jnp
xor
rolb
cmp
loope
sbb
dec
adc
es
std
mov
shll
in
jns
cwtl
pop
sub
sarb
jbe
ja
imul
mov
test
insl
mov
mov
push
fisubrl
or
out
mov
and
loop
xchg
cmc
lods
adc
arpl
cmp
int
cwtl
scas
mov
jbe
mov
data16
sub
jmp
cmp
push
in
mov
inc
mov
mov
xchg
xor
rolb
cmc
rolb
test
cli
sbb
sarb
in
sti
fldenv
xchg
lcall
or
mov
jbe
pop
mov
lret
sub
pop
or
push
or
nop
xchg
jecxz
inc
int3
pop
fadds
dec
pop
xor
rorl
hlt
push
lods
push
sub
movsb
inc
mov
fs
into
out
adc
testb
gs
pop
jne
lret
pop
iret
fadds
jb
mov
add
lahf
sbb
sbbl
scas
sbb
jp
test
xchg
andb
scas
ror
aas
mov
jmp
inc
aam
mov
xor
daa
or
sbb
adc
jnp
add
add
mov
fdivl
out
cmpsl
outsb
fldenv
incb
sbb
mov
cmpl
cs
or
sub
cmpsl
and
fsubrl
push
adc
add
gs
mov
mov
adc
cmpsb
adc
cwtl
dec
icebp
mov
gs
pusha
into
add
std
idiv
jecxz
test
pop
jns
inc
fs
cmpsl
adc
mov
mov
loop
arpl
ds
cwtl
int
shrl
mov
fnsave
out
imul
jle
xchg
mov
lret
test
vpsrlq
hlt
fldenv
test
and
in
gs
push
mov
fimuls
pop
xchg
and
insb
cmp
mov
dec
sbb
pop
aas
mov
mov
stos
mov
or
xor
outsl
mov
arpl
test
jns
hlt
and
scas
dec
movsl
mov
mov
negb
andl
jnp
jnp
and
inc
cmpsl
xchg
add
cli
imul
repz
mov
xchg
or
push
and
js
shlb
out
ret
std
sbb
sbb
jg
sub
mov
mov
inc
add
dec
popf
sub
scas
pop
jno
sti
int
iret
cmovb
add
jge
mov
aam
in
fcmovu
mov
and
and
pop
mov
dec
mov
xor
jmp
adc
fbld
inc
popf
lahf
dec
aad
scas
and
out
adc
fsubl
jne
orb
movb
ficomps
xor
testb
dec
mov
mov
pop
lea
mov
daa
into
outsl
fisubrl
sbb
add
test
dec
xlat
adc
sub
pop
push
mov
int3
jns
icebp
sbb
aas
hlt
scas
scas
jne
lea
fwait
cli
jne
shll
aad
cmpsl
jle
inc
cld
aaa
xchg
es
inc
and
popa
xchg
xor
pop
cmp
imul
cvttps2pi
loope
imul
out
cltd
data16
xor
pop
and
cmp
sub
mov
lods
ret
les
inc
xchg
shll
nop
cltd
loope
pop
mov
push
popa
cmpsl
shr
stos
and
test
cld
out
lods
repnz
sbb
psrld
iret
lock
popa
sub
shl
ret
daa
mov
fsubl
ss
cld
mov
mov
inc
rcrb
mov
mov
icebp
sub
lret
jo
ficoml
scas
out
shlb
pusha
jns
orb
lods
push
jns
xchg
in
lea
ds
bound
or
outsb
dec
loop
es
or
clc
call
cld
inc
or
mov
xchg
push
sub
or
xor
shlb
jmp
adc
inc
sbb
inc
mov
ret
dec
add
mov
rcrb
inc
mov
lods
mov
mov
test
popa
xor
cmpsl
dec
js
jl
mov
sub
pop
or
movsl
aaa
cmp
xorl
lahf
movsb
and
adc
push
arpl
sub
pop
jg
popf
sub
push
and
jbe
das
cltd
sub
sbb
push
mov
mov
cmp
in
fisubs
pushf
clc
dec
jecxz
mov
pusha
repz
mov
mov
mov
fsubrs
cmp
fyl2xp1
cs
inc
sub
push
dec
lcall
outsl
mov
push
nop
jbe
iret
out
inc
pop
adc
icebp
and
mov
loop
roll
lods
test
push
or
iret
scas
in
call
pop
mov
ljmp
mov
xor
push
adc
mov
bound
mov
xor
pop
lods
insb
rcl
xor
push
adc
cmp
sti
dec
lds
cmp
jmp
adc
stos
ja
insl
idivl
cli
cmp
dec
loopne
ljmp
es
fisttpll
sub
push
dec
dec
pop
pop
xchg
fdivl
pusha
mov
jmp
insb
xor
mov
push
ss
insl
lahf
xchg
rcll
adc
out
enter
cmp
fs
sub
cmp
fsubl
fidivrl
xchg
imul
filds
popa
push
or
push
in
cmpsb
cmp
aaa
fisubrl
sbb
out
push
loopne,pn
pop
shll
mov
add
sbb
cltd
std
cmpsl
xchg
jne
push
daa
mov
sbb
sub
test
ret
data16
cmp
mov
jmp
push
clc
mov
call
cmp
mov
or
mov
mov
addb
mov
gs
and
cmp
jb
movsl
mov
fcmovnb
and
dec
jnp
cld
inc
mov
repz
add
arpl
jecxz
out
aam
testl
lock
sub
cmp
mov
or
mov
jmp
movsl
test
outsl
dec
cmp
out
push
stos
mov
adc
or
push
es
int3
fnstenv
pop
test
pop
int3
test
mov
addb
dec
movsl
int
and
xchg
movsl
adc
scas
mov
lds
clc
cs
fidivs
test
rcr
adc
decl
cmpl
stc
sti
shlb
and
cltd
and
xor
leave
adc
fdivl
filds
fwait
lahf
ror
pop
in
popf
insb
mov
sub
mov
xchg
xchg
js
xchg
sub
mov
adc
popa
push
fsubs
jmp
cmp
lock
cld
push
or
dec
fildll
rcrb
push
jnp
and
sub
pop
mov
jnp
pop
or
test
adc
inc
mov
inc
adc
mov
cld
fldcw
lret
mov
idivb
hlt
mov
adc
mov
sarb
xchg
leave
jmp
inc
scas
jae
mov
push
pop
and
andb
sti
xlat
mov
insb
xor
fst
xchg
push
sarb
mov
jno
push
cmpb
lcall
in
jg
sbbl
outsb
sarl
inc
jge
pop
fwait
lods
mov
rcl
int3
and
cmp
jb
leave
and
jmp
mov
cmpsl
or
add
icebp
popa
dec
xchg
mov
cwtl
xor
inc
fwait
mov
enter
xchg
cmpsb
lea
dec
cltd
cmp
lret
subb
dec
jl
lods
incl
add
fucomi
ds
xor
dec
dec
mov
xor
inc
ljmp
lock
cmp
fcompl
mov
insb
xchg
add
lret
push
sahf
sbb
push
loope
xchg
mov
lea
cld
stos
pop
cwtl
roll
mov
ljmp
lock
inc
xchg
pop
ret
in
lock
sbb
inc
fmull
out
ljmp
leave
adc
mov
gs
or
jl
lods
fistpll
add
test
popf
scas
mov
movsb
popa
arpl
int
fbld
push
pop
jmp
or
arpl
xchg
fisubrl
scas
and
xchg
mov
mov
stos
pop
daa
int
push
out
imul
sarl
scas
shlb
iret
cmc
push
call
je
inc
rcrb
xor
iret
fidivl
aas
arpl
bound
stc
arpl
div
shrb
inc
test
jl
mov
push
mov
pop
icebp
dec
sarl
lds
movsl
lret
xor
or
jbe
mov
rcll
push
mov
jecxz
inc
pusha
sbb
mov
mov
inc
sti
jp
inc
repnz
mov
jle
iret
cmc
sub
add
pop
jns
mov
out
xchg
pop
insl
push
les
push
mov
pusha
lret
dec
cmp
cltd
xor
and
xchg
jge
test
jo
push
xor
insb
dec
stos
adc
adc
and
push
cld
nop
outsl
xchg
jge
leave
arpl
mov
int3
cmp
jmp
in
cs
out
dec
push
ljmp
or
stc
pop
and
fs
push
ret
pushl
mov
jno
add
shlb
insl
insb
ja
sub
mov
arpl
or
push
xor
dec
mov
out
cmpb
push
mov
popf
lahf
aam
push
stos
movsl
hlt
cwtl
cmp
fcoml
add
or
inc
repnz
mov
les
mov
sbb
loopne
xchg
cmc
negl
pushf
les
jp
pop
popf
sbb
cmp
not
sub
xor
scas
mov
mov
hlt
out
fisttps
jge
lock
nop
adc
shrl
sub
stos
ljmp
pop
test
inc
fimull
mov
loop
push
cld
clc
cltd
cmpsl
dec
imul
or
mov
sbb
or
out
shll
xor
nop
jo
test
push
dec
adc
xchg
mov
xchg
xor
std
sbb
mov
mov
jle
loop
mov
jnp
lcall
iret
xchg
xor
mov
cwtl
inc
mov
insb
testb
mov
inc
fmul
add
les
jns
popa
inc
jns
je
push
mov
push
mov
mov
aad
addl
push
repz
mov
lcall
dec
jns
bsf
fisubrl
pop
mov
data16
push
jmp
mov
std
or
insl
mov
jnp
mov
rcrb
mov
cwtl
cmp
mov
inc
cmp
cmp
sbb
mov
sbb
push
push
inc
add
divb
add
ss
lret
bound
les
nop
pop
imul
add
movb
lcall
mov
dec
mov
test
mov
ret
pop
jnp
xchg
pop
push
mov
insb
popf
icebp
mov
pusha
inc
fwait
jp
fildll
es
movsb
rolb
ds
jne
push
lods
in
push
inc
dec
adc
add
jno
sub
pusha
or
scas
mov
xchg
mov
jno
xlat
je
pop
lods
ja
mov
out
cmc
test
xchg
jecxz
fnsave
pushf
push
shrl
xorb
lea
lods
push
dec
fisubs
push
ror
in
adc
mov
mov
xlat
fistpl
cs
frstor
loopne
or
out
jb
stc
fcoml
xlat
xor
mov
pop
test
frstor
sub
lds
test
shrl
adc
jo
popf
aam
pop
shll
add
mov
xchg
inc
lods
adc
jne
or
test
sbb
xor
fldl
ja
nop
jno
xchg
repz
test
cs
cli
adc
sbb
ret
int3
push
push
imul
ret
sub
arpl
and
icebp
das
jge
popl
jbe
adc
lcall
rcll
in
adc
insb
mov
sub
test
add
lods
call
mov
es
or
repz
sub
notb
std
lret
pushf
aas
mov
xchg
xchg
pop
inc
aaa
xor
test
bound
iret
push
lcall
sub
sub
adc
clc
mov
nop
std
lea
xchg
aad
jns
cmp
andb
arpl
lahf
outsl
jp
xchg
cs
mov
cmp
push
mov
mov
and
sub
icebp
inc
adc
or
and
inc
int
ljmp
dec
add
das
pushf
cltd
sbb
xchg
jne
and
push
loope
inc
loop
and
push
hlt
add
pop
mov
xor
mov
shll
push
pop
loope
mov
loope
xor
pop
cmp
mov
ret
mov
daa
mov
xor
or
pushf
addr16
sub
aad
mov
movl
inc
cld
mov
orb
gs
dec
hlt
loope
loop
jg
ds
xorl
cmc
push
in
in
rcrl
push
dec
ret
mov
fwait
sbb
adc
test
jns
jns
xor
lock
std
fdivs
in
fisubs
cld
mov
push
push
insb
xor
out
es
lcall
mov
js
or
jne
xchg
dec
movsl
scas
or
cmpsl
fiaddl
xorb
push
out
nop
std
daa
ss
lret
mov
mov
mov
stos
rolb
push
addr16
dec
sbb
add
pop
dec
xor
lock
adc
es
iret
or
ret
sarl
shl
adc
xor
repz
cmp
inc
mov
inc
adc
sbb
shlb
call
xor
clc
xchg
inc
xchg
inc
cltd
cmp
or
mov
imul
notl
stos
lret
lahf
jo
rcrl
jns
mov
adc
cs
sbb
shlb
clc
cmpsb
stc
adc
clc
pop
loope
shll
mov
aam
mov
outsl
sub
les
sbbl
inc
add
sbbb
mov
xor
jle
xor
jo
jb
sbb
lock
popa
fsts
adc
aaa
cmp
inc
loope
cmp
pop
sub
mov
in
loope
icebp
andl
inc
nop
or
jecxz
push
loope
push
push
ficoml
mov
lret
or
xlat
dec
sti
ficompl
mov
aas
cbtw
and
xchg
mov
movsb
inc
adc
or
into
add
hlt
into
nop
push
sti
js
out
pop
xor
xchg
les
jle
int3
int
sbb
mov
stos
dec
adc
xor
fsubl
push
xor
mov
mov
push
mov
testb
jno
sub
sub
call
inc
lret
mov
mov
bnd
mov
pop
add
inc
cmpb
sti
ljmp
clc
jnp
in
fimuls
xchg
test
mov
xor
ljmp
xchg
mov
cmpsb
jmp
mov
and
sti
lock
xchg
pop
lea
fiaddl
or
fcompl
xchg
in
xchg
jmp
jns
jns
inc
sbb
rclb
jns
cs
sbb
mov
pop
push
push
pop
sub
sbb
adc
xlat
and
xorb
mov
sbb
ficoms
cltd
push
mov
sbb
lret
lds
adc
add
test
scas
mov
je
imul
or
aad
jmp
jecxz
dec
icebp
mov
jno
pop
dec
fs
mov
mov
mov
xchg
aad
es
in
stos
stc
inc
xlat
ret
dec
xchg
mov
jg
xlat
cmp
mov
mov
ds
and
clc
mov
cmp
add
cmp
daa
test
outsl
mulb
repnz
cmp
jge
add
dec
cmp
cmp
push
jl
add
into
mov
xchg
jg
mov
fbld
enter
into
fldl
into
sub
push
mov
shlb
sbb
mov
sbbl
add
scas
je
add
shll
cmp
lea
lcall
ficoms
dec
and
dec
pop
shr
lcall
out
xor
mov
das
jne
jl
addr16
les
negl
sub
mov
pop
or
bound
xchg
mov
pop
aad
in
jo
js
je
nop
or
mov
jne
ja
movl
or
fcoms
xchg
cmp
fcomps
dec
add
mov
inc
dec
inc
mov
repnz
mov
push
lods
xchg
ja
xor
add
xchg
loop
int3
xor
out
scas
or
pop
adc
cmp
ss
fdiv
sub
syscall
sti
cmovno
mov
xchg
inc
jl
inc
pop
xor
fidivrs
std
cmp
in
adcb
outsb
mov
arpl
push
inc
cmc
jae
mov
leave
out
lss
sbb
divl
jl
and
mov
push
into
sbb
push
mov
fdivl
loope
cmp
cld
mov
gs
inc
fiaddl
std
xlat
adcl
inc
pop
sbb
outsl
pop
cmp
inc
cmp
push
ror
mov
xchg
pusha
push
fsubrs
jo
push
inc
push
test
ret
xor
pop
sbb
xor
push
subb
in
in
adc
les
out
xchg
outsl
push
mov
loopne
mov
in
lods
imul
rcrl
aaa
push
mov
jecxz
dec
jge
dec
mov
xor
mov
mov
arpl
aas
cvtdq2ps
mov
lods
xchg
movsb
hlt
pushf
jp
insb
arpl
das
stc
mov
push
pop
fwait
add
dec
shll
and
xor
cmp
rcl
je
fscale
or
ret
lods
mov
iret
arpl
lret
or
mov
lcall
and
sarl
mov
push
lret
scas
lods
and
sti
rolb
add
cmp
fsubs
inc
pop
add
jb
inc
stc
xchg
xchg
xlat
jo
jb
test
imul
imul
outsl
inc
popf
jb
test
jo
cmp
call
mov
faddl
cwtl
jns
roll
mov
fwait
arpl
aam
aaa
add
out
iret
repz
inc
ljmp
mov
faddl
inc
ja
jnp
cli
flds
call
push
dec
pop
dec
push
loopne
ja
jge
repz
aad
scas
and
push
adc
ja
pop
out
scas
jbe
rcrb
dec
je
add
and
js
lods
icebp
xchg
cmp
clc
stos
and
pop
outsl
or
xor
cli
push
outsb
loop
in
shlb
push
lret
les
adc
push
mov
cmp
sub
ljmp
stos
or
push
ljmp
jo
repnz
jmp
jp
ljmp
nop
outsb
push
sub
dec
fnstsw
cmpsl
imul
push
dec
xchg
push
pop
ficompl
jp
push
adc
and
sub
inc
mov
adc
sarb
ds
ljmp
push
daa
shrl
xchg
lods
fimuls
test
and
jno
imul
dec
arpl
add
dec
aas
sbb
add
call
mov
movntq
enter
arpl
inc
pop
cmc
leave
jmp
insl
leave
push
bound
mov
fimull
dec
mov
in
scas
push
outsb
mov
xchg
push
jecxz
or
test
in
and
call
pop
jl
pop
adc
and
pop
aaa
cmpl
jmp
mov
je
jo
xor
push
test
dec
add
xchg
xor
out
cmp
jecxz
out
mov
xor
and
mov
sbb
xchg
test
add
jno
cli
aad
jl
pop
iret
xchg
icebp
and
jmp
pop
adc
outsb
in
ret
mov
push
push
dec
int
cltd
das
or
jbe
add
shrl
cs
cmpsl
mov
jnp
xchg
sbb
jne
lea
divps
lock
mov
shl
out
aam
mov
imul
push
les
sahf
and
movsl
mov
jno
lea
sbb
inc
dec
mov
dec
gs
aam
or
aas
mov
in
pop
repz
dec
jne
jne
test
stos
leave
sbb
mov
mov
test
in
pop
mov
nop
notl
rolb
xchg
jmp
test
aam
repz
in
or
xchg
xor
std
mov
and
sub
das
xchg
inc
jns
outsb
pop
shlb
mov
jo
jbe
xor
stos
pop
insb
test
inc
jge
add
xchg
aas
sub
insb
lcall
mov
sbb
sbb
jmp
sub
mov
out
jnp
adc
inc
push
xlat
cmpl
adc
or
sbb
xor
mov
outsb
push
cmp
xchg
rol
ja
push
cmp
stc
shlb
jo
adc
inc
adc
fistps
cmc
inc
xchg
out
sub
or
js
dec
jecxz
mov
push
push
pop
mov
sbb
test
test
sbb
xchg
popa
outsl
lea
ss
jecxz
push
xor
rcl
xlat
jmp
mov
mov
mov
into
mov
sbb
iret
lock
notb
aaa
enter
mov
es
movhps
in
jle
sub
in
cmp
negl
mov
mov
sbb
fsubrs
adcb
dec
lret
adc
mov
xorl
cmc
mov
xor
pusha
jp
scas
push
dec
push
push
test
push
in
mov
xchg
inc
std
outsb
rcll
inc
xchg
cmc
sbb
das
pop
int3
jae
sarb
inc
jno
push
jno
inc
xor
lcall
lods
jbe
push
push
mov
jg
jp
hlt
mov
mov
or
inc
ljmp
dec
push
jns
mov
lods
push
or
pop
inc
inc
dec
and
icebp
inc
or
in
outsb
fs
sbb
sbb
hlt
sbbb
jp
adc
in
faddl
pop
or
mov
dec
faddp
cmp
cmp
shrl
fwait
jnp
lock
cmp
adc
jbe
fcomps
push
or
mov
xchg
int
inc
xor
add
and
add
pop
out
adcb
add
adc
mov
aad
lcall
ret
rol
add
adc
addr16
cmp
bound
and
movsl
nop
ljmp
lods
sub
addb
aaa
jle
int3
stos
pop
cmp
repz
or
ds
idivb
fdivr
and
inc
test
add
in
push
repz
pop
mov
insl
xchg
test
jne
stos
pop
into
mov
hlt
push
mov
mov
push
stc
push
das
sbb
loope
fstl
xor
loope
mov
sarl
loope
lock
aas
add
mov
dec
ret
cli
and
pop
sub
mov
mov
mov
jmp
lret
repz
fidivrs
cmpsb
out
adc
stos
sbb
es
pushf
cld
ss
mov
mov
sbb
lea
adc
sub
pop
les
inc
leave
and
arpl
or
add
dec
enter
in
mov
das
nop
mov
in
popa
ret
inc
mov
sbb
pushf
add
adc
mov
loope
push
fistl
fldl2t
push
mov
mov
scas
test
out
stc
mov
jnp
pop
mov
or
jg
jmp
lock
pop
jb
mov
in
xchg
inc
lret
cmp
pushf
mov
cmc
clc
add
insl
pusha
pop
in
mov
push
arpl
stos
pushf
fimull
xchg
add
pushf
mov
shr
inc
lods
mov
leave
jb
notl
pop
push
jbe
mov
jno
pop
inc
xchg
mov
lahf
xchg
jnp
push
jne
stos
xchg
jl
jae
jl
dec
sub
scas
sbb
mov
push
outsb
adc
jo
mov
cs
mov
push
aad
mov
cld
jae
lds
pusha
inc
cld
test
jle
inc
cmp
sub
les
jmp
mov
in
aas
add
xor
addr16
outsl
mov
pop
adc
mov
or
xchg
cmp
xchg
mov
adc
movsl
mov
es
inc
xchg
mov
xchg
fdivrp
sbb
out
sub
mov
lahf
sbb
movsl
jle
sbb
mov
xor
jae
repz
or
dec
movsl
jb
sbb
add
xchg
call
cs
stos
push
mov
mov
sub
dec
jmp
pop
pop
sub
test
jg
cmpsb
add
movsl
repnz
shlb
pop
mov
movsb
mov
sbb
or
enter
adc
inc
pop
mov
arpl
and
es
pop
sbb
xor
push
xchg
dec
imul
mov
mov
adc
rorb
push
mov
repnz
stc
mov
lahf
int
push
pop
mov
jge
sbb
cwtl
stos
das
pop
daa
xchg
pop
push
mov
test
add
neg
lock
sbb
mov
sbb
jno
int
push
adc
push
inc
sbb
inc
mov
out
xor
xor
cmc
adc
stc
in
push
out
mov
loopne
inc
mov
pop
inc
dec
mov
lock
mov
push
test
in
loope
mov
lock
fcoms
in
out
iret
lcall
call
push
flds
int
push
test
xchg
insl
cld
icebp
xchg
repnz
int3
dec
aas
int
inc
sti
sti
dec
mov
cmp
das
in
icebp
out
mov
xchg
mov
rorl
dec
pop
cmpsb
add
lret
js
loopne
out
pop
pop
je
sahf
mov
jp
mov
mov
mov
or
js
out
nop
jne
xchg
add
jge
xor
imul
inc
lret
dec
adc
iret
pop
push
jae
fidivrs
cli
out
dec
out
or
cmpsb
fldenv
or
pusha
push
cli
fstpt
cmp
cwtl
cmpsl
mov
mov
test
inc
ret
dec
pop
test
adc
sahf
test
mov
xor
movsl
popa
dec
cli
psadbw
xlat
cmp
lods
insb
sti
sbb
sti
pop
ljmp
int
stos
scas
add
clc
hlt
je
add
mov
xor
inc
outsb
leave
jno
loopne
scas
fwait
push
dec
fisttpl
mov
jp
icebp
stos
dec
cmp
sahf
cmp
inc
inc
pop
sbb
xchg
add
mov
xor
data16
jbe
aad
fcompl
movsb
dec
pop
cmp
push
mov
rorl
popf
jmp
mov
adc
mov
leave
in
jae
cmp
call
jo
inc
cmp
pop
push
mov
xor
sar
fwait
lahf
in
xchg
addr16
adc
push
ret
mov
sub
ret
daa
pop
inc
leave
dec
or
add
sahf
mov
lahf
inc
js
out
mov
dec
and
shl
cmpsl
lods
dec
sbb
cmp
inc
xchg
jno
stos
lret
xor
jo
out
daa
mov
popa
or
push
xor
jno
fistpl
and
push
jnp
jmp
fwait
sub
lcall
mov
scas
cmp
lock
in
insb
dec
test
cmp
hlt
xlat
rorl
repz
or
push
jl
aad
add
lods
add
jg
dec
cmp
cmp
daa
dec
jno
stos
cmp
test
outsb
out
dec
inc
push
push
cli
hlt
add
jbe
dec
sub
test
xchg
xor
iret
aad
inc
ljmp
mov
jle
adc
mov
push
mov
push
or
add
push
pushf
mov
jo
inc
or
cwtl
in
xchg
movsl
idivl
jbe
fmuls
je
idivb
roll
fdivrl
pusha
pop
outsl
push
add
arpl
mov
leave
and
xlat
cmp
stos
les
rcrb
mov
inc
faddp
sbb
cli
xchg
std
add
bswap
jns
ret
lods
movsl
rol
std
fldenv
and
rol
inc
or
loopne
aaa
dec
xchg
mov
pop
in
cltd
lahf
sub
jns
and
push
sbb
inc
fisttps
mov
sarb
push
sbb
push
pop
ficoml
lods
bound
ret
xchg
xchg
aas
int
leave
scas
iret
add
cld
outsb
jge
sub
mov
int
add
fnop
in
dec
fdivrl
in
jmp
lret
xchg
mov
rorb
jne
rcrb
les
fnstsw
stos
cmpsl
dec
xchg
jae
cld
mov
push
stos
notb
iret
popa
mov
jae
or
pop
popa
xchg
shr
ljmp
out
xchg
sub
aaa
loope
mov
imul
insb
sbb
movsb
jno
ror
rorl
jne
inc
add
out
jns
or
push
jge
pop
sarb
rclb
sarl
clc
sbb
aam
pop
into
es
xchg
add
mov
arpl
xor
dec
sbb
ljmp
mov
aas
dec
mull
mov
xor
jecxz
sbbb
lcall
pop
sub
cld
stc
leave
in
dec
sub
mov
jae
in
cmpsb
adc
add
push
xor
inc
cmp
mov
aad
sbb
jmp
ja
clc
jle
mov
sahf
mov
cwtl
push
push
das
je
scas
sbb
leave
mov
sbb
mov
clc
push
inc
outsb
jg
les
xchg
loope
outsb
call
xor
dec
outsb
fsts
mov
ss
xchg
push
xor
cmc
addb
dec
pop
out
iret
push
sarl
sub
or
jne
push
dec
aas
ljmp
aaa
xor
arpl
or
mov
jecxz
ds
cmc
xchg
call
insb
ror
add
test
xor
bnd
testb
inc
mov
pop
mov
xor
xchg
jge
call
or
shrb
int
mov
sub
sub
jbe
jmp
dec
mov
mov
jmp
sarb
mov
cld
in
xorb
adcb
dec
bound
sub
or
fisubrl
aaa
add
cld
outsl
cwtl
mov
jns
mov
les
into
stos
fisttps
pop
movsl
pop
sbb
xor
adc
andb
subl
test
add
and
mov
rolb
ret
jl
or
test
add
call
sub
sub
inc
jp
and
sub
push
mov
js
hlt
leave
xchg
pop
cmp
scas
fnstsw
sbb
mov
int3
push
sbb
mov
les
push
xchg
call
shll
pop
pop
inc
into
push
xchg
cwtl
sti
push
and
bound
out
and
mov
fildll
sbb
loope
pop
and
and
lcall
cmc
xor
ja
pushl
add
jl
push
and
pop
sub
and
pop
mov
lods
xor
mov
aam
or
xor
fimuls
pop
or
sbb
pop
cmpsl
cmp
push
imul
inc
push
jl
sub
clc
in
add
test
in
mov
into
pop
sarl
sbb
mov
rclb
aas
dec
mov
lock
cmp
sbb
js
jae
das
stos
faddl
cltd
sbb
imul
sub
ja
lods
aad
xor
mov
adc
add
out
popf
lea
scas
idivb
in
aas
xchg
in
pusha
push
cmc
or
push
push
in
repz
inc
mov
popa
push
jb
ljmp
cmpsb
mov
inc
xlat
xchg
hlt
jno
xchg
decb
leave
sarl
mov
sbb
shlb
push
dec
shl
cmp
in
push
sub
iret
mov
pop
shlb
enter
and
enter
lods
loope
aaa
and
xchg
sbb
enter
in
jns
dec
std
pushf
fmull
adc
and
lods
mov
pop
mov
mov
mov
cmc
or
sbb
imul
inc
pushf
and
cld
mov
adc
jmp
lods
sti
lahf
cs
xor
cs
sub
cmpsb
cmp
lcall
out
arpl
movsl
mov
sbb
and
leave
std
mov
inc
mov
pop
fsin
fwait
sbb
lock
fiadds
clc
mov
nop
mov
sub
insl
hlt
pop
loop
cmp
xchg
or
in
cmc
sahf
xor
xchg
ret
orb
pop
pop
jae
cwtl
mov
push
imul
push
int
leave
test
mov
xchg
fisubrs
ja
ds
sarb
mov
or
pushl
jecxz
sbb
out
mov
pop
dec
add
add
repz
and
comiss
jg
andb
cmp
pop
cmc
loope
jnp
mov
rol
or
loope
mov
add
mov
in
mov
cmpsl
rcrl
inc
mov
or
xchg
jmp
std
rcrb
jmp
jg
imul
mov
cmp
dec
into
ja
aas
mov
popf
mov
xchg
into
pop
or
mov
fistps
adc
sbb
push
aam
repnz
in
in
sbbb
in
pushf
inc
pop
xchg
mov
lcall
fimuls
or
mov
jb
je
xor
imul
jge
xchg
mov
dec
rcll
js
out
test
sbb
cmp
sbb
adc
test
jns
out
imul
mov
adc
repnz
sbb
mov
or
dec
mov
in
flds
push
add
test
xlat
lods
mov
repnz
and
mov
data16
ss
sub
lea
lods
lods
add
push
js
inc
sub
sub
ret
test
lds
shlb
adc
repz
mov
jle
mov
push
clc
leave
sahf
mov
fcom
in
mov
add
and
insl
or
jl
fsubrs
mov
movsb
icebp
mov
shlb
movsl
push
ret
push
sti
hlt
repnz
cmp
ljmp
js
mov
sbb
push
inc
pop
pop
xchg
or
pop
fcomip
imul
cmpsl
add
sbb
add
arpl
xchg
lret
xor
xchg
insb
shll
mov
mov
and
imul
inc
shll
pushf
fwait
clc
add
adc
cmp
mov
movsl
sub
int3
xor
push
mov
or
dec
test
mov
add
push
into
les
scas
jg
popa
ss
push
and
jge
or
call
jmp
fistl
mov
ds
mov
xchg
and
sub
jnp
call
lret
clc
add
iret
push
pop
xchg
xlat
push
mov
pop
int
mov
dec
push
xchg
xor
push
jnp
sbb
int
xor
es
pop
data16
pusha
addl
lcall
frstor
dec
idiv
xchg
mov
scas
loopne
fcoml
ficompl
mov
jp
push
cltd
sbb
loope
push
test
out
loop
mov
add
loopne
sar
enter
push
xor
add
repnz
aam
jmp
imul
roll
cld
mov
dec
sbb
and
jnp
cmc
add
in
cmp
sti
call
mov
into
sbb
dec
mov
in
ljmp
inc
pop
jns
addl
test
int
mov
mov
std
ds
sahf
loope
addr16
test
sbb
imul
int
adc
mov
xor
test
jnp
out
bound
outsb
pandn
mov
xchg
into
jl
test
aad
push
push
arpl
js
jmp
lock
xor
ja
fcomps
adc
out
fbld
iret
jl
pop
fimull
arpl
push
mov
movsl
and
test
and
inc
ljmp
addr16
dec
mov
adc
leave
js
sub
jge
icebp
push
sbb
bound
push
into
inc
pop
sbb
les
mov
pop
shlb
and
push
insb
test
dec
shll
push
adc
adc
jae
jle
ror
pop
inc
pop
cbtw
popa
and
pop
repnz
xchg
out
in
pushf
lea
mov
mov
sti
subl
js
jge
nop
push
adc
lret
scas
movsb
test
std
icebp
pushf
or
jp
cmpsl
jle
inc
jns
test
stos
and
xchg
push
push
push
and
cli
push
lret
cmp
mov
sbb
add
out
cltd
sub
adc
jp
adc
sbb
pop
popf
inc
enter
rorl
data16
mull
inc
ljmp
xchg
mov
xchg
in
push
out
mov
mov
add
jns
leave
xchg
mov
sub
cmp
stos
xor
shlb
cmp
mov
pop
mov
outsb
cmp
cmpsl
xchg
movq
rep
inc
loopne
ficoms
mov
out
sbb
xchg
or
stos
aad
xor
dec
xor
dec
xor
fdivrs
cwtl
mov
fldenv
outsl
or
dec
and
popf
xchg
andb
lahf
pop
jl
and
adc
test
repnz
sbb
or
sub
mov
sub
or
cld
mov
push
sahf
lahf
lods
adc
int3
aas
lea
inc
inc
insb
mov
lods
adc
or
dec
adc
sub
xor
push
out
sub
push
subb
cwtl
mov
inc
mov
shlb
mov
pushf
mov
loopne
pop
lret
mov
jae
inc
sub
dec
pushf
stos
add
icebp
lret
icebp
xchg
int3
addr16
jmp
imul
add
not
adc
or
sbb
shll
hlt
xlat
dec
xchg
jge
idivb
inc
movb
negl
sub
mov
xorl
popf
xor
mov
test
ljmp
mov
sbbb
into
cmc
loope
daa
lock
mov
flds
mov
inc
js
popf
fsqrt
scas
stos
ja
fs
mov
insl
cmp
sub
popa
xchg
outsb
jo
cmp
insl
push
jmp
jbe
add
dec
fprem1
into
inc
pop
add
daa
call
popf
mov
repnz
mov
aam
imul
mov
test
sbbl
bnd
push
sbb
test
repz
rcrb
shlb
lret
ret
lds
pop
dec
inc
cmp
enter
xchg
jo
jnp
or
and
inc
fidivs
popf
push
cmp
insl
out
popa
daa
out
mov
mov
xor
loopne
popa
ljmp
sbb
adc
cli
scas
mov
sub
sbbb
pop
pop
push
inc
dec
bound
movsl
cmp
in
sub
jne
repz
mov
and
in
mov
mov
sub
and
adc
push
lds
mov
mov
mov
push
pop
ja
sub
jp
mov
dec
sbb
xor
insb
loopne
idivl
add
dec
pusha
flds
rorl
lea
push
or
mov
insl
popf
jecxz
cli
inc
notl
aad
jle
push
test
add
mov
mov
bound
subl
jno
sti
xor
test
loop
sub
sarb
jns
bound
dec
mov
sub
js
pop
jle
cmp
movsl
pop
xchg
mov
cmp
adc
incb
leave
cmp
rcrl
pop
popf
and
cmpsl
mov
push
es
cmp
popf
mov
mov
fcoms
shll
sub
sub
sbb
stos
mov
sarl
dec
xchg
pop
gs
jle
inc
test
fnstcw
push
xchg
les
call
mov
push
cmp
pop
scas
pushf
mov
aam
nop
xchg
dec
fwait
cmp
daa
insb
lcall
sub
aam
sahf
adc
mov
adc
sbb
das
pop
push
movsb
mov
add
jo
popa
in
adc
push
inc
ficompl
sbb
popa
dec
push
mov
sub
in
ljmp
xlat
cmp
bound
sub
push
std
mov
mov
into
stc
ret
cmpl
dec
jnp
out
xchg
mov
fistpll
bound
fstps
mov
fstpl
inc
loopne
dec
cmc
push
xchg
xor
in
mov
int
lret
sub
loopne
rorb
repnz
jle
repnz
adc
iret
mov
popa
jno
lock
loop
add
inc
and
mov
sbb
addr16
dec
es
imul
and
testl
ret
cltd
inc
lods
dec
testb
mov
ror
jne
pusha
pop
inc
cmp
cwtl
mov
mov
aad
add
and
outsb
out
lea
gs
out
test
cmp
lea
dec
popa
sbb
std
add
and
jo
mov
mov
pop
pop
bound
jo
cltd
lods
pop
cld
jmp
aad
ret
lods
dec
lock
shl
xor
outsl
push
out
shll
int3
mov
inc
adc
decb
xchg
outsb
stc
inc
outsb
mov
pop
and
push
outsl
dec
push
std
mov
inc
dec
stos
dec
fidivrl
out
test
sub
sub
mov
xchg
addr16
mov
out
fwait
daa
jae
stos
pop
jle
pop
and
push
mov
repz
sbb
cmp
pop
xchg
cmc
jle
mov
mov
push
cmp
sub
mov
xor
outsl
mov
sub
adcb
dec
sahf
jp
xchg
fbld
in
push
ja
loop
scas
cmc
xor
lods
sahf
rclb
insb
inc
fldl
fidivrs
cmp
fistps
adc
in
andl
jae
es
cmp
inc
inc
mov
push
jg
lods
pop
iret
mulb
bound
xchg
dec
bound
mov
fldl
mov
mov
or
mov
shll
loopne
call
mov
ret
xor
push
xchg
std
test
mov
shlb
mov
hlt
leave
pmaddwd
mov
aaa
adc
mov
jg
cmp
nop
inc
mov
aam
sti
mov
pop
or
and
shr
push
mov
adc
aas
out
xchg
movsl
sarb
xchg
imul
add
mov
cmp
cmpsb
cli
fnsave
cld
scas
or
push
insb
cmpsb
sub
lret
daa
cmpsl
dec
push
insb
bound
sub
pop
jns
xchg
mulb
or
fstp
dec
addb
lock
pop
or
add
enter
lcall
fcoms
stos
fsubr
adc
mov
inc
mov
les
mov
sbb
popf
mov
add
loopne
popf
sub
mov
outsb
in
cld
jl
fistps
and
mov
cld
out
xchg
rol
mov
jp
inc
mov
loopne
orb
mov
daa
inc
mov
or
and
je
xor
xchg
xchg
lahf
push
daa
lock
sbb
sbb
or
in
xchg
sti
cmp
or
pop
in
ljmp
sahf
mov
add
xchg
cmc
jmp
jb
pop
mov
push
and
popa
enter
andl
fcoml
pop
sub
mov
jne
dec
sar
mulb
in
data16
jb
mov
xor
dec
cwtl
xor
aad
lds
int
dec
shl
push
cmp
add
add
xchg
jl
push
mov
aam
xchg
jecxz
bound
loop
sbb
fucom
stos
repz
xchg
loope
mov
roll
inc
cmpsl
lcall
inc
adc
lahf
jae
push
test
incb
add
mov
leave
mov
or
and
dec
push
xor
pushf
les
jge
jmp
fs
pop
mov
in
jns
scas
jge
lret
jge
push
dec
ljmp
sub
shl
outsb
add
sbb
ret
sbb
stos
out
inc
or
and
or
mov
xchg
push
repnz
or
test
arpl
imul
jge
mov
ret
imull
movsl
pusha
leave
cltd
leave
stos
outsb
cmp
sub
pop
or
test
pop
nop
insb
mov
mov
std
xorb
scas
iret
mov
mov
pop
inc
dec
test
iret
mov
jb
pushf
pop
mov
pushf
jg
ror
mov
sub
loope
insl
aam
arpl
not
or
roll
js
arpl
cltd
sub
aam
inc
mov
add
daa
daa
and
aad
jle
pop
xor
sbb
cld
mov
dec
js
insb
lods
pop
sti
mov
xrelease
lret
pop
insb
iret
push
int3
dec
jle
adc
push
mov
or
push
adc
pop
mov
push
mov
cmp
les
out
scas
mov
jmp
movsl
fistps
aaa
xor
adc
jmp
pop
sti
mov
scas
in
outsb
inc
xor
add
cmp
faddl
jno
mov
add
nop
les
fcoml
mov
lock
jae
pop
cmpsb
dec
or
sub
mov
std
into
push
pop
and
test
mov
jge
ret
and
iret
sub
jg
mov
aas
jae
sbb
mov
test
mov
mov
xor
mov
cmpsb
add
add
scas
push
cwtl
outsl
or
sti
insb
div
movsb
mov
and
mov
xlat
fiaddl
cld
in
outsl
inc
pop
mov
roll
test
push
int
inc
and
test
push
mov
fwait
mov
inc
fcomp
fistl
es
sbb
stos
fucom
push
js
xor
sub
ja,pn
loop
int
in
out
popa
pop
in
adc
xor
das
aam
lcall
jo
int
jnp
xchg
mov
sub
jmp
mov
sbb
scas
dec
aad
pop
cwtl
inc
movsb
test
push
mov
sub
push
andl
mov
cmc
test
inc
mov
jns
mov
stos
inc
mov
pusha
inc
jmp
lcall
cmovne
xchg
push
xchg
add
mov
inc
ss
lea
jecxz
and
daa
pop
out
cmpsl
leave
push
in
imul
pop
pop
arpl
mov
out
cmp
cmp
push
mov
jns
push
add
xor
loop
fdivl
cmp
into
cmp
scas
add
vmaskmovpd
mov
imul
xchg
dec
leave
es
mov
je
dec
imul
xor
dec
mov
jge
mov
mov
movsb
jl
mov
dec
scas
pop
int3
addl
push
mov
mov
adc
cs
push
fisttpl
sbb
inc
loopne
out
stos
sub
mov
cmpsl
addr16
pop
jge
in
xchg
pop
sahf
adc
push
pop
std
jnp
inc
sbb
loopne
ficoml
adc
movsl
mov
ret
faddl
or
lret
mov
xor
cmp
out
ret
xor
add
xchg
pop
dec
ret
xchg
and
xchg
pop
sub
cli
mov
sbbl
push
sbb
cmc
mov
jns
jle
and
push
cmp
frstor
add
pop
sub
push
pushf
fdivs
jecxz
dec
jne
jp
nop
mov
jae
test
inc
jecxz
pop
xor
lahf
lcall
mov
jecxz
sbb
nop
mov
push
fcomps
push
mov
pusha
das
shr
mov
mov
cmp
imul
scas
scas
andb
sbb
inc
imul
cmpsb
add
xchg
in
cmp
cmp
push
jge
sub
cmpsb
push
jns
sbb
clc
movsb
mov
inc
push
in
mov
dec
cmpsb
jnp
enter
fucomi
mov
stos
int3
and
and
mov
mov
xchg
or
or
cli
in
cmp
dec
out
push
mov
jg
mov
cmpsb
xchg
scas
sbb
shr
mov
ljmp
mov
scas
jecxz
jle
push
sbb
mov
mov
mov
mov
in
xchg
adc
test
inc
mov
dec
jmp
test
jbe
cmp
mov
inc
push
mov
jle,pt
fs
scas
cmc
aad
pop
or
add
int3
pop
xchg
or
push
and
in
aam
cmp
inc
mov
sub
jmp
sbb
pop
loop
inc
mov
push
mov
mov
sub
add
pop
imul
jl
das
mov
jecxz
push
sbb
pop
imul
scas
cmpsb
jns
push
fists
mov
dec
cmpb
imul
lahf
push
and
lret
enter
std
ret
test
jmp
add
lods
enter
aam
xor
iret
loop
sub
and
stos
fbstp
mov
lds
xor
pop
cmp
sbb
xor
imul
sub
out
loopne
add
push
repz
in
aam
push
xor
inc
idivl
and
imul
pop
push
aaa
sti
jmp
les
cmp
hlt
mov
mov
mov
push
and
pop
and
jecxz
lock
mov
or
push
add
cld
cmp
mov
cmp
pusha
pop
int
jge
mov
testl
sbb
ret
fstpt
jb
xchg
test
jecxz
into
in
lcall
sub
stc
cmp
outsb
push
fs
mov
lret
loope
inc
add
cld
push
mov
insb
sti
repz
pop
js
lcall
dec
push
jno
add
stc
outsb
lret
fwait
mov
pushf
sub
or
mov
cwtl
insl
addl
mov
dec
cmc
cld
jae
movsl
std
jbe,pn
mov
rclb
mov
gs
dec
or
mov
jns
loopne
mov
fmuls
fdivs
inc
int3
xlat
ret
and
push
pop
pop
fcom
dec
mov
push
jge
cmp
call
je
mov
out
inc
roll
aaa
mov
jle
pop
lods
sbb
arpl
push
mov
ret
dec
mov
push
mov
push
push
icebp
cld
insb
daa
pop
lds
dec
xchg
push
or
mov
ljmp
and
subl
xor
xor
sub
xor
mov
xchg
loope
lret
inc
mov
mov
testb
xor
insb
movsl
arpl
int3
inc
lret
mov
push
andl
fmulp
pop
aaa
pop
sbbl
pop
loop
inc
pop
test
adc
push
xor
push
sub
xchg
sbb
adc
js
sarl
cltd
dec
sbb
aas
stc
dec
mov
mov
aad
ja
ret
pushf
fbld
jmp
add
jb
adc
add
and
test
fdiv
mul
xchg
sub
mov
jb
and
insb
cmp
leave
ret
jno
int3
pop
filds
jecxz
int
std
xor
sbb
test
push
mov
ds
dec
scas
movlhps
jne
or
das
jp
inc
inc
dec
shll
lret
call
pushf
pop
push
outsw
insl
add
sub
cmp
lock
mov
push
dec
jg
xchg
dec
dec
sub
and
pusha
mov
shr
xchg
sahf
test
or
sbb
jns
or
xor
fwait
sarl
dec
filds
test
stc
movsl
inc
xlat
sahf
add
lahf
data16
push
jle
push
scas
int3
shlb
push
xchg
lods
data16
jno
test
scas
stc
mov
jmp
sbb
stc
xor
xchg
sub
xor
push
mov
insl
sbb
lock
xchg
xor
xor
es
fdivl
cwtl
push
mov
jnp
arpl
or
mov
inc
shll
cs
cltd
in
test
int
adc
test
outsb
inc
addr16
jl
ds
idiv
and
je
mov
sar
in
jo
push
dec
bound
cmpsb
and
mov
addr16
and
addb
dec
gs
nop
mov
int
loop
arpl
inc
call
cli
cmpsb
pop
cwtl
pop
mov
outsb
sub
pop
in
mov
pop
adc
push
sub
mov
es
push
stos
jnp
mov
iret
insl
les
sub
cltd
jecxz
mov
adc
jg
cmpsl
mov
aam
cmpsb
cltd
sbb
enter
adc
sbb
xor
repnz
bound
in
xchg
adcl
negl
dec
in
sti
test
push
jae
mov
das
sbb
outsl
dec
xchg
pop
fucomp
sub
outsl
sarb
popf
test
inc
xchg
ds
push
push
mov
in
xor
dec
xchg
pop
into
add
mov
enter
pop
loopne
lods
insl
or
mov
mov
adc
push
call
std
jp
push
pop
fisubrl
mov
clc
loop
faddl
hlt
subb
pop
sbb
repnz
and
pop
mov
out
inc
movsl
movsl
adc
xchg
mov
fnstenv
adc
pop
push
aas
dec
out
aaa
aas
leave
stos
cmp
mov
pushf
jl
ljmp
aad
nop
or
cmc
jl
inc
cmp
mov
add
mov
incb
xlat
loopne
in
add
sahf
jb
arpl
jno
cmp
jb
das
xor
jb
or
lds
xchg
adc
push
xchg
push
inc
stos
test
jbe
std
jno
sti
movsl
bound
inc
jne
outsl
sbb
and
mov
and
std
es
push
insl
sub
xchg
jnp
mov
fadds
dec
popf
mov
cmp
and
fidivrl
pop
mov
enter
test
mov
inc
xchg
jecxz
push
cmp
into
or
cltd
imul
outsl
push
cmpsl
inc
lahf
test
sub
jge
and
test
push
jg
lcall
ljmp
jecxz
or
js
sbb
jo
and
dec
cmovno
sbb
mov
dec
ja
test
fcoms
jmp
pusha
sti
daa
repz
push
add
out
movsl
out
adc
jecxz
push
rcrl
cmpsb
and
clc
lret
and
aam
cltd
rorl
addr16
dec
pusha
lds
mov
iret
leave
aam
pop
mov
push
adc
mov
cmc
mov
fisubs
fstl
in
mov
inc
fldcw
popf
loopne
jb
jne
mov
pop
adc
add
call
or
dec
decl
pushl
lds
cld
xchg
aas
push
cld
pop
add
aaa
adcb
int3
sbb
or
es
dec
arpl
int3
sarl
add
pop
push
push
cmp
push
outsb
in
sbb
add
and
push
cmp
jp
je
iret
cmp
pop
loopne
pop
movsl
imul
mov
jb
jg
jg
and
push
xchg
hlt
adc
cmp
insl
xlat
jae
insl
push
xor
push
mov
shr
inc
insb
in
cmp
ja
sbb
lock
fsubs
adc
pop
out
cwtl
aad
hlt
lret
and
mov
xor
mov
jl
mov
aam
adc
fdiv
jmp
xchg
addl
test
cltd
sti
repnz
mov
dec
add
inc
fsubs
scas
push
insl
cwtl
fcoml
into
add
in
xor
out
out
sbb
movsb
andl
jg
push
or
or
adc
cmp
repnz
fwait
out
dec
cmp
jbe
test
add
lret
mov
inc
lods
les
xor
aaa
daa
movsl
jge
inc
outsl
movsl
inc
mov
pop
andl
jno
inc
xchg
sub
jp
mov
lcall
xchg
and
xor
in
pop
jo
jnp
stos
lea
push
xchg
lds
cs
movsb
sahf
popa
jo
jbe
enter
adc
cmp
jmp
add
int3
sbb
pop
adc
icebp
into
ret
lcall
inc
out
xor
jge
clc
insl
sbb
clc
in
mov
mov
fisubrs
sarl
jl
xchg
adc
dec
adc
in
insl
xor
out
jmp
fsubs
push
bound
test
out
cs
sub
notl
in
dec
arpl
mov
int3
mull
sub
inc
bound
addr16
jg
fisubl
mov
in
mov
mov
cmp
inc
jmp
aam
aaa
jb
cmpsb
popl
mov
pop
dec
and
push
je
cmpsl
in
push
or
mov
repnz
loop
inc
cmpsl
sub
sub
cwtl
arpl
insl
movsl
fprem1
lret
jno
mov
inc
out
out
push
sti
movsb
dec
mov
in
cmpsl
leave
xchg
dec
xchg
dec
dec
sbb
cmpsb
daa
inc
clc
adc
hlt
mov
dec
inc
stos
int3
jns
jmp
ss
pop
jo
stos
shl
imul
loope
in
stos
adc
pop
stos
cld
aam
inc
mov
or
insb
push
adc
shrb
sub
sar
outsl
xor
xchg
imul
jae
jno
xor
push
das
and
bound
enter
mov
out
dec
or
fisubrl
inc
mov
mov
jp
sarl
dec
or
out
std
lret
push
pop
movsl
fisubrs
in
sbb
aaa
cmp
pop
inc
inc
ret
in
outsb
xor
mulb
adc
adc
fistl
xchg
add
or
stos
mov
lcall
scas
xor
fistps
scas
sbb
add
sbb
pop
lock
loop
adc
inc
inc
or
add
mov
lock
jmp
aad
adc
call
icebp
es
into
xchg
sbb
cmp
mov
and
je
inc
out
lea
jl
mov
jo
jnp
pop
loope
test
test
rcl
popa
scas
mov
lret
and
mov
subl
mov
movl
mov
fcmove
or
rcrl
mov
sbb
sub
inc
adc
sahf
mov
lret
repnz
adc
test
jae
add
lret
and
ja
stos
adc
dec
jnp
sbb
mov
imul
push
mov
daa
sbb
pushf
dec
pop
shl
jns
lods
bound
pop
push
es
mov
test
xchg
jno
ficoml
cmp
push
ret
dec
shll
jbe
inc
addr16
dec
pop
std
add
xchg
mov
and
adc
sub
sub
aas
jle
cli
mov
sbb
test
js
adc
pushf
insl
jg
out
xchg
push
ljmp
pop
shlb
aas
push
mov
gs
sub
xchg
sbbb
fadd
in
in
cli
sub
jecxz
mov
mov
sbb
dec
cmp
mov
cs
fisubrs
jg
xchg
inc
aaa
jae
push
movsl
adc
jge
push
mov
dec
or
in
sahf
inc
jmp
out
lock
inc
xor
js
ja
movsb
les
mov
ja
cmp
sbb
ljmp
aam
xor
das
xor
mov
adc
loope
and
jmp
lock
sbb
loopne
cmp
subl
pushf
sub
add
mov
add
inc
sub
mov
mov
xchg
cltd
nop
les
cwtl
add
rcrb
loop
sarl
cmc
push
and
sbb
sahf
pusha
add
dec
fldl
jge
push
sbbb
or
jg
pop
data16
fcomp
xchg
aas
ss
movsl
in
das
push
lock
hlt
testl
bound
or
negl
int
push
mov
inc
aas
sbb
push
cmp
cmp
push
push
sub
in
sarb
and
add
sbb
fstl
push
or
testl
or
sbb
mov
sbb
fwait
add
xor
repnz
mov
push
xchg
push
stos
adc
mov
in
xor
add
dec
cmp
xor
push
shrl
aam
iret
xchg
lods
mov
frstor
mov
inc
push
roll
mov
inc
lret
or
sarb
xchg
lds
cmp
or
push
cmp
jb
sti
sbb
popa
shrb
lret
inc
neg
sub
add
mov
jle
pushf
jle
mov
sub
leave
lret
aad
jecxz
sbb
les
shll
push
cli
movsl
push
sbb
or
sub
lcall
mov
subl
jae
add
dec
test
nop
and
lahf
mov
pop
xor
test
xchg
imul
ja
push
sti
test
adc
xchg
sbb
sti
je
movsl
inc
cmpsl
sub
pop
pop
mov
jb
sbb
pop
or
test
pop
lds
test
mov
in
jno
xor
fisubs
dec
arpl
sbb
sbb
ret
nop
mov
out
xor
push
pop
loopne
js
xor
mov
lds
mov
jno
mov
jno
sbbl
cwtl
xchg
push
push
test
ja
xchg
adc
aam
outsl
cmp
mov
push
int3
push
jmp
jmp
daa
add
aam
sub
sbb
push
sub
dec
add
push
sbb
cmc
xor
sbb
and
pop
mov
jl
popa
aas
inc
call
ja
scas
test
lcall
xchg
lret
add
jmp
add
jmp
and
or
lcall
pop
mov
orb
jae
sbb
sub
lahf
lea
fsubrp
cmpsl
push
pop
paddusb
mov
loop
mov
xchg
lods
aaa
jmp
xor
in
stos
push
in
arpl
pusha
inc
lds
dec
bsf
mov
rorl
subl
add
repz
mov
push
mov
lods
pop
fistps
js
xor
stos
mov
sub
or
and
and
sbb
xor
mov
push
stos
gs
jg
gs
push
add
or
jmp
adc
sub
dec
data16
pop
pushf
arpl
loope
sbb
pop
pop
nop
icebp
mov
mov
cld
test
out
mov
adc
cmp
fcoml
scas
mov
push
stos
leave
push
iret
out
sbb
dec
iret
push
sbb
dec
xor
dec
js
ja
lds
pop
in
leave
sub
xchg
lret
and
icebp
in
or
inc
imul
dec
add
lods
inc
push
and
bound
mov
outsb
out
adc
xor
inc
xchg
lret
push
test
imul
daa
pop
dec
mov
dec
les
cs
jns
jae
mov
add
lea
outsl
insl
mov
or
or
ret
adc
push
pop
xor
fldl
sahf
dec
pusha
dec
mov
mov
aam
and
mov
or
sub
lods
cmp
xor
out
xchg
dec
inc
mov
push
std
mov
movsb
fldl
ds
fdivs
jb
stos
ljmp
addr16
inc
cltd
fdivs
dec
clc
sbb
inc
mov
push
push
adc
jbe
icebp
stc
les
xlat
mov
lea
mov
scas
xchg
outsb
xlat
call
add
sbb
jg
mov
ss
cmpsl
sbb
push
addr16
sub
jbe
add
mov
sub
cld
sbb
sbb
xor
adcb
or
mov
lcallw
push
mov
and
lock
test
clc
sbb
aam
cld
cmp
out
mov
mov
add
imulb
xor
xor
inc
pushf
pop
int
adc
jg
js
test
pushl
dec
xchg
mov
les
arpl
mov
xor
in
enter
cmp
mov
xchg
mov
outsb
loop
jl
dec
xchg
or
stos
xchg
outsb
subb
in
mov
aad
mov
mov
insl
inc
icebp
inc
fwait
movsl
adc
out
scas
fs
sub
fs
fcmovne
mov
mov
sub
call
mov
adc
negl
push
pushf
mov
lret
adc
xchg
xor
mov
sub
jmp
shl
int
ror
in
mov
xchg
or
lahf
adc
push
lock
jg
pusha
lods
sub
push
out
adc
inc
push
mov
jp
jmp
pop
jne
push
sbb
cmpb
ret
mov
pop
movsb
mov
iret
inc
push
bound
icebp
mov
out
jne
imul
cmc
pop
xor
ss
clc
pop
add
sti
inc
dec
dec
sbb
and
stc
jge
je
int
mov
push
addr16
into
hlt
adc
repz
mov
cmp
dec
imul
lret
cli
cmp
pop
inc
scas
cli
stos
jo
push
into
jnp
test
cmp
mov
movsb
iret
push
and
fldcw
mov
push
stos
mov
xchg
call
jg
and
pop
cmpsl
ss
jae
nop
fbld
pushf
or
repz
push
scas
mov
xchg
shl
cmc
sbb
dec
movsb
cmp
aam
icebp
inc
ret
cmp
lods
cs
jmp
test
hlt
xchg
adc
cld
je
xor
cli
and
mov
movsb
loope
movsb
pushf
ds
mov
jmp
fwait
and
arpl
mov
aam
dec
jns
mov
int3
xor
ljmp
fmull
push
jo
sbb
pop
dec
jb
mov
and
lods
js
and
decl
test
xor
sub
mov
lea
and
sahf
sti
fmuls
movsb
jns
fisubrs
add
repz
dec
adc
cmp
stc
dec
sbb
ds
dec
pop
xchg
fidivl
mov
mov
loopne
mov
fwait
les
mov
mov
fidivl
lods
inc
ffree
pop
push
jnp
pop
or
cmpsb
cmp
enter
xchg
mov
aam
adc
adc
or
and
into
jne
pop
outsl
stc
insb
icebp
dec
mov
lock
fs
and
imul
imul
shll
scas
adc
movsl
sahf
call
rcrb
xchg
mov
cmp
xor
pushf
fdivp
rclb
mov
loopne
xor
pop
mov
and
mov
pop
lea
cmp
ret
push
jg
xchg
mov
and
sub
or
lret
insb
sub
incb
hlt
insb
ja
into
dec
popa
mov
ds
insb
xchg
sbb
add
rcll
ljmp
mov
cmp
push
add
dec
sbb
and
xor
not
mov
pop
pop
and
inc
testb
mov
call
mov
ret
jb
or
popa
push
mov
sarl
push
leave
pop
xchg
sbb
inc
pusha
insb
mov
push
loope
mov
cmp
mov
call
push
xor
and
jp
jmp
inc
sbb
iret
js
fs
fadds
and
dec
clc
clc
pop
pop
adc
out
je
inc
xchg
clc
adc
fidivrs
dec
or
fwait
std
mov
push
xchg
pop
xchg
lahf
xor
repz
rcrl
shll
cmp
cmp
lcall
pop
and
imul
jnp
inc
sbb
push
push
add
push
into
push
imul
inc
decl
jae
inc
xchg
scas
jmp
xchg
lret
jb
cmpsb
subl
cmpsl
test
xchg
cld
jne
adc
push
jo
mov
outsl
mov
xor
xchg
in
loopne
ret
ret
inc
int3
sbb
lock
pusha
ds
roll
and
movsb
popf
inc
rclb
mov
xor
dec
mov
jnp
xchg
clc
mov
add
aas
lahf
data16
int
mov
leave
sbb
pusha
lock
popl
jnp
mov
outsb
xor
out
rcrl
loopne
mov
jle
sbb
pop
enter
dec
dec
dec
and
fmull
mov
adc
mov
add
adcb
sbb
dec
push
add
aad
scas
jnp
dec
pop
inc
popf
adc
andb
dec
dec
and
or
lret
sbb
dec
out
out
lock
cltd
xor
ret
pop
push
mov
int3
addl
syscall
add
shrl
test
in
mov
aam
mov
je
mov
cmp
pop
sbb
jo
cmpsb
loope
adc
adc
push
sbb
rcll
push
and
icebp
ret
rcll
mov
xchg
inc
stos
mov
jp
xor
repnz
push
and
in
push
inc
mov
or
sbb
mov
lcall
flds
into
inc
xchg
repnz
arpl
lea
cmp
cmpsl
fadds
jl
sbb
mov
jne
and
sarl
or
popf
loopne
bound
lods
mov
lock
xlat
jecxz
ret
jne
stos
sub
xchg
pushf
inc
jo
dec
test
and
push
or
mov
cmpsb
nop
adc
imul
push
dec
repz
pushf
inc
xchg
call
push
dec
call
shll
outsb
les
arpl
ja
ret
ja
push
mov
xor
lret
and
insl
stos
add
or
hlt
andb
rclb
xchg
test
ja
jge
pusha
test
and
inc
or
notb
fsts
inc
fwait
sub
cli
pop
mov
insl
mov
call
dec
outsl
pop
sete
push
push
pop
lcall
pop
sbb
aaa
lcall
dec
jmp
push
pop
push
or
mov
sti
call
xchg
push
imul
notl
adc
not
cmp
in
ja
adc
and
mov
inc
cmc
bound
fisttps
scas
adc
and
inc
cli
insb
mov
or
test
add
sti
test
das
sbbl
cmc
mov
movsl
stc
and
sub
mov
push
jbe
shrl
mov
inc
mov
push
fwait
push
push
xor
pop
jbe
sub
int3
cmpsb
push
and
lret
push
out
adc
pop
jg
test
and
inc
add
in
les
push
inc
jge
enter
in
cmpsb
dec
mov
mov
ret
cmp
ret
sbb
jns
test
ja
cwtl
adc
in
xchg
mov
dec
lahf
rorl
out
in
ss
outsb
ljmp
div
jle
dec
xor
pop
push
push
in
push
mov
cmp
cmp
addb
mov
mov
cli
lods
adc
fnsave
mov
ds
push
dec
int
add
repnz
sub
lret
iret
or
adc
sbb
pop
pop
pop
fs
jmp
xor
jb
lods
dec
cmp
add
movsb
adc
pop
sub
es
sahf
ret
pop
fdiv
mov
xlat
addr16
xor
adc
add
jmp
les
fsubl
popa
jnp
arpl
mov
addr16
push
out
push
insb
jg
pop
mov
test
scas
and
sub
jbe
and
push
adc
sbb
sbb
leave
or
cmp
jecxz
les
push
xor
outsb
outsl
decb
js
xor
addb
inc
push
mov
or
cmp
adc
icebp
xor
decb
and
push
test
pop
pop
sbb
std
jae
mov
xchg
mov
out
xchg
pop
mov
add
jnp
jge
inc
xor
fadd
dec
insb
mov
lret
cmp
pcmpgtb
push
and
inc
adc
adcb
outsb
ja
mov
pop
sbb
movsl
imull
out
inc
mov
test
vpxor
fmul
daa
xchg
add
adc
jo
and
fwait
lock
push
push
add
stc
sbb
sub
mov
mov
clc
ds
jl
subl
pop
xorb
enter
and
dec
cmp
hlt
cmp
jl
sub
pcmpeqb
lods
cmp
xor
outsl
shlb
sub
icebp
mov
mov
sub
xor
xlat
pop
mov
dec
xchg
sub
inc
mov
jecxz
iret
mov
inc
push
sbb
pop
into
inc
jns
push
xchg
mov
lret
lea
lahf
sub
and
lret
or
subb
mov
cld
scas
testl
ds
repnz
addr16
mov
lock
add
sub
stos
xor
pop
jne
fisttps
xlat
movsb
xchg
stc
add
push
pop
shl
imul
scas
xchg
pop
sti
add
daa
cs
xor
data16
rolb
shl
pop
or
mov
not
bound
xchg
hlt
sub
or
jecxz
pushf
or
fildl
add
and
pushf
scas
cmp
in
sahf
mov
push
outsb
rcrl
std
mov
inc
or
ficomps
push
mov
push
test
mov
adc
loope
inc
add
and
stc
out
out
push
iret
inc
aad
jmp
xchg
aaa
cmc
mov
fisubrl
js
push
ret
sbb
aam
and
shlb
pop
je
data16
sbb
stos
lock
dec
and
repz
xlat
aad
arpl
jl
sbb
mov
cmc
clc
xor
clc
test
dec
sub
cwtl
ja
sbb
cmp
sbb
pop
and
cli
lcall
pop
xchg
dec
sub
ja
hlt
fildll
lds
pop
add
js
pop
xchg
jns
push
add
pop
inc
in
cld
clc
adc
xchg
cmp
pop
mov
or
mov
push
daa
sahf
cmp
dec
add
in
or
cmc
sahf
mov
push
inc
and
cmp
aaa
jae
pop
daa
test
ret
lock
pushf
shlb
or
cmp
sub
push
movsl
frstor
jmp
nop
notb
xor
jecxz
pop
xor
jne
aad
jp
pushf
lret
jmp
or
push
mov
push
hlt
jno
mov
xor
push
mov
call
inc
fldcw
adc
pop
sub
mov
cltd
ljmp
push
js
xor
lock
push
sbb
or
and
and
ficoml
ret
sbb
adc
adc
xor
test
mov
je
sbb
shll
push
add
outsl
imul
daa
js
sahf
mov
jno
lcall
and
xchg
fcomps
fistps
int
cwtl
or
inc
mov
adc
push
adc
cwtl
and
stos
inc
test
scas
inc
pop
filds
push
fisttpll
push
add
xchg
repz
adc
xor
xchg
mov
or
inc
ret
std
lahf
xchg
jb
sub
sbb
jecxz
movsb
addr16
ds
call
ja
or
loopne
pop
fiadds
aas
dec
pop
cs
shr
repz
ret
xchg
data16
mov
rcll
jge
or
add
scas
push
jmp
push
scas
scas
es
sub
test
dec
pop
xor
inc
arpl
in
cmpsl
sub
jae
ficompl
adc
popf
add
out
gs
ds
jno
push
dec
adc
dec
fldenv
popf
push
data16
shlb
sahf
fsubrl
and
dec
sub
xchg
add
cmp
sbb
adcl
sbb
adc
add
aam
cmc
dec
test
sti
xor
cmpsb
push
out
lret
pushf
dec
pushf
mov
popa
xchg
sbbb
mov
xchg
testb
repz
add
push
gs
jle
lods
imul
fs
repnz
cmp
mov
jnp
sbb
mov
sub
rcll
ljmp
popa
jno
add
cld
mov
sub
je
stos
arpl
cs
pop
fistps
shl
pop
popf
mov
xor
mov
mov
push
sti
loope
fwait
pop
stc
or
hlt
cmpsb
aad
jae
mov
xor
nop
jg
cli
in
insl
test
xor
and
lea
pop
in
mov
ficoms
rolb
adc
ret
sahf
or
es
pop
ljmp
xor
ret
lds
cmp
fwait
cld
fs
mov
icebp
push
rcr
test
mov
pop
lcall
cmp
fcomip
loopne
sub
adc
mov
cmp
notl
mov
jo
mov
lcall
aas
or
ljmp
icebp
daa
cmp
sbb
mov
adc
mov
in
sbb
popa
push
jo
sbb
mov
icebp
push
cli
mov
mov
jb
inc
fwait
mov
out
mov
pop
xor
lds
xor
cmp
dec
int3
push
lds
ja
mov
scas
sbb
daa
xor
fidivs
outsl
fstl
xchg
test
fs
mov
push
mov
bound
jmp
mov
dec
adc
mov
cmp
jbe
mov
pop
sub
sbb
push
clc
cmpsl
fldz
jnp
fisubrl
push
mov
jb
xacquire
jecxz
bound
subb
repnz
popa
mov
sbbb
pop
pop
pop
into
scas
lea
stos
sbb
fwait
mov
mov
addr16
inc
ret
pop
rcl
mov
jnp
dec
xchg
scas
ljmp
imull
mov
jbe
pop
push
loopne
cli
and
movsb
push
mov
int3
sub
jp
cmc
mov
data16
adc
jge
or
das
repnz
and
sbb
fisubrl
mov
pop
adc
addr16
pushf
push
pop
into
pushf
nop
add
mov
adc
insb
or
sahf
fisubrs
xchg
mov
je
add
adc
fyl2x
stc
cmp
aaa
add
push
lret
imul
fdivl
xor
aas
sahf
mov
xor
sub
sub
lret
lret
push
aad
data16
adc
nop
jmp
test
test
jp
jge
outsb
mov
insl
pop
mov
push
xchg
stos
xor
orb
repnz
mov
mov
and
xchg
adc
negl
pusha
dec
xor
inc
push
mov
dec
pop
scas
stc
bound
enter
loopne
lcall
ss
loopne
sub
bound
test
jmp
push
lock
mov
dec
cwtl
pusha
cwtl
jns
xor
inc
mov
xchg
jo
inc
pop
lods
fmuls
gs
lods
scas
les
mov
or
loope
repnz
lea
push
cmpsb
insl
mov
scas
push
pop
jnp
pop
mov
inc
sub
mov
popa
pop
in
sbb
clc
push
ret
imul
push
stos
pushf
and
push
addl
push
stos
mov
jmp
push
jb
and
pop
dec
fld
fildl
pop
test
mov
and
in
and
jbe
push
aam
jns
in
aam
pop
adc
fndisi(8087
cmp
adc
sub
sbb
test
sahf
jp
sarl
popf
xor
dec
cmp
sub
loopne
mov
das
mov
int
cmp
push
mov
lcall
jno
mov
push
inc
xchg
ss
fucomip
push
push
dec
int
lret
jmp
jno
push
add
sbb
es
orl
mov
sarl
cli
push
add
xor
lcall
ret
inc
mov
cmp
std
xchg
sub
dec
pop
call
fdivl
mov
jbe
sbb
mov
mov
xchg
push
subb
jae
loop
jnp
or
shll
clc
subb
test
aam
xor
mov
and
jo
cmp
and
cs
imul
jecxz
pushl
and
xor
std
imulb
rorl
xchg
std
rol
subb
push
out
and
xor
shlb
and
xchg
ret
loopne
movsb
int3
movsl
std
shll
imul
mov
cmc
or
rorl
xchg
mov
sub
data16
xchg
mov
sbb
cld
or
loope
pushl
or
rcr
sub
out
in
xchg
push
lcall
mov
cmp
pop
repnz
dec
push
jmp
pop
adc
inc
rolb
pop
popf
ret
mov
sbb
or
xchg
cli
insl
mov
lcall
sbb
icebp
rorl
push
cmp
clc
scas
dec
jmp
jge
sub
dec
repnz
or
fidivl
inc
add
push
sbb
jne
ljmp
rcll
xchg
in
loope
lret
push
fs
or
inc
dec
in
or
shll
pusha
sti
add
ror
jae
jl
jmp
jne
xor
or
fcomp
mov
test
test
insb
xchg
adc
insl
inc
dec
cmp
cwtl
icebp
sub
int
cmp
sahf
push
xor
fcmovne
ficomps
pop
js
not
out
popa
inc
bswap
push
lret
loop
outsl
lods
fwait
outsl
xor
push
popa
mov
stos
add
mov
shrl
test
or
imul
xor
jbe
mov
mov
ret
or
mov
push
xchg
add
inc
mov
shl
mov
dec
scas
mov
int
sub
pop
decb
xchg
push
loop
aad
jle
lods
xchg
adc
mov
popf
cwtl
negb
mov
push
cmp
or
loope
repnz
fsubrs
pop
mov
push
xchg
or
push
orb
imul
fnsave
or
push
lahf
add
xchg
cmpsl
push
jb
mov
pop
ret
add
dec
inc
pusha
or
ss
mov
popf
pop
xor
sarl
xchg
fistpll
and
sahf
inc
out
adc
ret
lods
cmc
jnp
shrl
sub
cld
lock
mov
jg
xchg
cmp
dec
adc
lcall
xor
adc
subb
mov
xor
mov
sti
out
or
jmp
add
jp
and
movsb
pop
sub
push
sub
adc
fdivs
cs
push
ds
aas
cmp
dec
or
shlb
xorl
or
sub
mov
call
sbb
gs
mov
adc
adc
and
jle
int
fs
mov
or
mov
xor
int
mov
call
mov
mov
cmpsb
mov
or
mov
mov
lea
mov
les
adc
and
mov
jb
mov
int3
mov
lods
popf
mov
and
or
mov
jle
test
stc
sub
fiaddl
or
lds
rcrb
cmp
push
jmp
imulb
rcrl
nop
cmpsl
push
push
ja
fs
add
sti
iret
and
push
mov
push
add
aas
xchg
aad
pop
test
stc
arpl
adc
xlat
dec
mov
das
mov
xor
int3
or
lods
xor
shll
mov
mov
into
dec
clc
sbb
in
call
cmp
mov
mov
cmpsl
sbb
or
stos
xchg
dec
lret
pop
idivl
stos
or
and
loopne
mov
push
dec
add
mov
xor
pop
repz
add
mov
les
in
pop
jp
fwait
cmp
push
push
jno
push
and
sbbl
push
ds
cmp
lcall
inc
ret
imul
xor
push
add
add
cmp
insl
add
dec
sbb
sub
lcall
mov
add
push
xchg
mov
xchg
call
clc
mov
mov
movsb
fs
out
pop
stc
into
jg
jle
cmpsl
loop
cmpsb
jl
shr
decl
mov
push
sub
lcall
dec
in
lret
dec
mov
push
jl
push
cmp
lds
cmp
out
lahf
mov
int3
andb
stc
xor
cmpsl
nop
xor
ja
xor
lret
adcb
pop
mov
stc
push
ret
cltd
mov
out
jno
or
sub
out
jno
ret
test
pop
mov
mov
aad
ja
out
and
cmp
inc
mov
xor
jo
mov
fyl2x
xchg
in
mov
mov
mov
xor
inc
push
imull
dec
cwtl
rolb
xchg
jp
and
testl
not
jns
add
cmpsl
inc
mov
cmpl
ret
pop
iret
adc
lret
push
pop
push
xchg
in
js
insl
jae
insb
jecxz
and
push
insb
jno
insl
sahf
or
inc
dec
xchg
dec
jg
jmp
lock
inc
xchg
clc
aam
inc
aas
std
lock
and
stos
sti
mov
lret
ror
stos
xor
sahf
push
pop
scas
scas
sbbl
mul
push
jne
jns
sub
pop
xchg
and
nop
xchg
lahf
mov
inc
jo
mov
test
xchg
out
adc
in
test
inc
icebp
mov
into
cwtl
sbb
push
dec
mov
pop
std
sbb
mov
or
xor
clc
add
xor
lock
lret
pop
inc
adc
cmp
xor
arpl
les
int
jbe
cwtl
cmp
push
mov
rorl
dec
jmp
test
push
inc
inc
repz
cmp
cmp
nop
or
pop
fs
pushf
roll
sbb
adc
xor
push
shll
sub
in
cmpb
and
ljmp
pusha
stc
mov
sub
xlat
roll
ss
mov
mov
and
jnp
mov
jnp
out
sarl
lret
push
std
popf
addr16
push
push
into
cmp
add
ss
push
sub
inc
mov
inc
adc
sbb
mov
clc
jne
sbb
jns
ljmp
inc
push
xchg
sti
xor
push
imul
movsb
imul
mov
orl
jmp
jns
mov
dec
sbb
jbe
loope
or
sbb
in
jge
aad
cmp
xchg
pop
jp
sarl
icebp
mov
enter
addr16
mov
mov
lret
xor
push
into
xchg
or
or
sbb
mov
jg
fsts
jo
push
imul
mov
outsb
sub
movsb
in
clc
jns
cmp
push
mov
inc
insl
xor
lock
mov
cltd
push
scas
mov
push
cld
mov
in
cwtl
rcrl
dec
mov
popa
push
lcall
push
or
jl
mov
pusha
loop
xchg
adc
push
fwait
dec
loope
mov
stc
or
inc
and
mov
pushf
sub
pop
xchg
ss
and
sub
repz
or
or
xchg
shlb
aad
jo
push
inc
add
push
jg
push
mov
mov
nop
adc
inc
pushf
mov
and
das
mov
inc
inc
cli
clc
imul
pop
mov
arpl
xchg
dec
mov
xor
sbbl
push
cmp
sbb
dec
pushf
mov
or
inc
lahf
xor
adc
pop
inc
leave
and
jo
fimull
dec
xlat
lds
mov
push
fdivs
mov
icebp
push
cmp
test
mov
jbe
or
xchg
dec
leave
mov
mov
fistl
cmp
jnp
push
xchg
cmpsl
mov
loope
sbb
cmp
jmp
daa
cmpb
mov
filds
rol
add
push
cmp
lcall
ss
andl
and
add
sarb
scas
mov
shll
movsb
in
cwtl
xchg
popl
push
pop
fs
jmp
dec
cs
mov
push
jle
cli
xchg
fsub
pop
jae
data16
mov
xchg
test
stc
dec
in
lret
cmpsl
in
popf
jecxz
mov
jp
stos
enter
fidivrl
mov
push
sbb
or
jp
mov
xor
push
xchg
shll
psraw
adc
lret
insl
mov
movsb
adc
enter
xor
mov
enter
sbb
jmp
mov
jmp
insl
lds
adc
inc
mov
daa
shll
test
pop
aas
push
push
pop
push
mov
pushf
pop
xchg
out
pop
adc
or
inc
dec
and
sub
mov
and
jg
dec
push
insb
and
adc
lea
sub
fcmovne
daa
dec
lret
pushf
test
push
jg
andb
pop
or
out
pop
pop
xchg
cmpsb
push
fsubs
dec
pop
fists
pop
and
jl
in
and
inc
adc
fadds
dec
push
cmp
loop
ja
lods
xchg
add
jae
adc
pushl
cmp
mov
mov
out
pop
sbb
in
push
sbb
or
jnp
adc
mov
lock
lcall
stc
sbb
jbe
lret
add
sub
and
pushf
lcall
iret
fstl
add
loope
xchg
sub
ret
mov
or
xlat
testl
daa
adc
sbb
mov
shlb
or
lret
xor
out
stos
pop
xor
add
roll
mov
add
popf
add
cmp
inc
iret
fisubrs
xchg
or
cmp
loopne
rcrl
mov
dec
pop
lcall
sahf
or
inc
shlw
sub
mov
rorl
aad
subl
xchg
je
jg
repz
mov
add
add
ja
cmc
iret
lcall
pushf
aam
rolb
mov
pop
inc
and
sbb
aaa
jbe
sub
and
imul
lret
or
orb
std
daa
flds
push
sbb
cmp
jne
xor
fnsave
pop
rcl
and
jb
mov
dec
mov
mov
push
and
lock
outsl
mov
adc
rclb
xchg
pop
push
jmp
fwait
dec
in
adc
adc
mov
push
cmp
pop
aam
xor
fwait
aad
aaa
loop
push
into
idiv
mov
lret
jo
popa
sub
addr16
pop
adc
ret
loopne
mov
stos
mov
test
mov
lods
push
cltd
ljmp
push
mov
mov
stos
fbld
dec
xor
cld
cwtl
pop
dec
and
leave
pusha
leave
cmpsl
xchg
xchg
insl
hlt
cltd
outsb
in
inc
stos
adc
cwtl
cmpsl
lds
enter
push
inc
sbb
push
ret
mov
inc
xchg
push
daa
aam
dec
or
ret
mov
sahf
out
sti
mov
inc
loope
jns
sub
and
outsb
and
sbb
test
lret
pop
inc
adc
lods
sti
arpl
jl
and
adc
mov
mov
add
cmpl
clc
aas
mov
cmp
mov
outsl
dec
test
dec
pop
pop
cmpb
outsl
inc
mov
into
sarl
ja
fildll
cltd
lock
pop
xor
add
out
repz
addb
push
cmc
cs
cmpsl
xor
or
sub
lock
inc
or
dec
cwtl
jecxz
int
fnsave
jmp
lahf
js
addr16
lcall
into
push
pop
add
cltd
or
rolb
shrb
ficoms
adc
sub
mov
lahf
scas
cmc
lcall
shlb
out
push
mov
lret
push
inc
je
push
push
mov
fldcw
mov
cmc
push
xor
lret
test
mov
mov
push
out
iret
push
or
shlb
sub
pop
mov
and
js
adc
pop
jno
add
xchg
rolb
js
add
sub
scas
outsb
stc
rcrl
out
mov
sbb
and
mov
ljmp
sbb
ror
test
mov
jl
add
dec
cmp
nop
mov
pop
andl
pop
addr16
lods
lock
and
jmp
lock
stos
outsb
lea
adc
insb
lcall
sub
nop
stos
ret
and
adc
int
push
pop
sub
cmpsl
xlat
out
test
in
xchg
xor
out
pop
sub
inc
mov
mov
jp
pop
mov
cmc
mov
ret
mov
or
xor
movsb
mov
mov
mov
fadds
mov
jb
stos
push
push
pop
test
scas
test
xchg
jae
push
out
add
int3
jno
and
sub
push
mov
xlat
adc
mov
adc
es
int3
fiaddl
dec
fs
rcll
pop
adc
sbb
inc
fsincos
add
fsub
test
and
and
enter
xlat
das
clc
in
xor
mov
jle,pn
test
mov
in
sub
pop
shrl
xchg
mov
inc
gs
inc
pushf
pop
dec
rep
lret
mov
out
jecxz
rcl
daa
lods
dec
inc
mov
sahf
cmpsl
sub
int
in
dec
xor
shlb
jl
mov
iret
xchg
or
jne
mov
outsb
xlat
push
mov
fiaddl
or
jmp
xchg
movsl
or
hlt
aaa
mov
js
outsl
and
push
int3
adc
repz
and
int3
pop
push
ret
ja
out
jns
lods
testb
iret
in
insl
cmp
jb
adc
xchg
aas
cmp
add
sub
decl
dec
mov
rclb
mov
shrb
xchg
jmp
push
aam
test
lods
adc
fisttps
and
cmpsb
fidivrl
fsqrt
sbb
imul
jge
jp
es
les
push
mov
push
enter
sbb
lock
shlb
lock
loopne
xor
fsubl
mov
cltd
shrb
in
mov
dec
inc
add
jae
aaa
test
mov
cmp
jo
ffreep
mov
pop
or
add
mov
push
mov
xchg
call
add
pusha
ja
cltd
lcall
cwtl
mov
daa
cld
pushf
divb
jno
das
loope
or
mov
lret
int
cmp
enter
test
push
test
pushf
shr
ror
dec
add
pop
xchg
shl
mov
cmp
andl
sub
add
icebp
imul
leave
call
inc
fiaddl
push
sub
adc
fnstsw
test
mov
or
imul
int
sub
inc
aad
dec
jbe
bound
into
xchg
pop
lret
call
mov
sbb
xor
bound
lods
pushf
push
in
and
arpl
ljmp
mov
push
xchg
push
cmp
jno
ja
inc
mov
insb
cmc
sbb
xor
xchg
push
push
les
popf
sti
fistpll
xor
push
test
push
adc
xor
ret
jg
dec
push
mov
mov
fs
insl
push
adc
jo
and
outsb
divl
or
cmp
loop
jecxz
push
push
scas
pop
clc
push
mov
sahf
in
sub
cmp
add
mov
or
jge
ja
pop
mov
fwait
rcrb
ss
in
jle
or
adc
jno
pop
clc
daa
sub
subl
fisubrs
or
xchg
cwtl
cmpsb
xchg
or
add
xor
or
mov
lock
testb
fists
push
fistpl
hlt
dec
fs
mov
xchg
xchg
jmp
int
jecxz
xchg
add
push
push
push
int
mov
daa
stc
rclb
ds
push
and
rcrl
ljmp
pop
cmp
test
mov
mov
in
dec
sbb
pop
sbb
push
jecxz
and
push
ret
sahf
xchg
cmpsl
inc
mov
inc
ds
lret
sbb
mov
stos
fcmovne
enter
jle
test
pop
fdiv
jae
pop
fwait
or
daa
divb
cmp
cmc
mov
cltd
push
es
sub
mov
mov
imul
lcall
aad
add
in
mov
loope
xor
or
fwait
test
dec
lcall
in
popa
mov
enter
xchg
sti
das
mov
divl
pop
cmp
add
rcl
int3
jge
in
insb
push
sbb
insl
push
arpl
sub
mov
xor
int3
loope
cmp
and
mov
sbb
fstps
xor
dec
mov
mov
jle
jne
lock
and
sti
fld
rclb
mov
shrb
jo
push
in
or
jg
daa
push
scas
add
aad
pop
add
mov
sbb
or
enterw
sarb
incl
sub
repz
dec
scas
xchg
inc
xor
cmp
lret
pop
les
subl
or
mov
mov
ja
push
dec
dec
scas
in
and
out
inc
sub
dec
insl
mov
xchg
mov
push
lahf
pop
push
gs
dec
in
gs
mov
xchg
adc
test
sbb
stos
cltd
jo
add
fisubrs
push
adc
pop
pushf
aas
pop
sub
mov
andl
cmp
dec
out
scas
repnz
popf
add
dec
pop
xor
orl
jns
mov
notb
xor
idivb
lahf
mov
loope
or
jnp
mov
mov
push
mov
pop
jp
pop
cmp
lret
scas
hlt
sbb
sub
fst
add
inc
scas
mov
in
push
or
sub
rcr
adc
fidivs
or
pop
outsl
lock
cwtl
lret
dec
cmp
sub
jne
push
adc
test
jno
test
push
push
push
mov
rcll
xchg
adc
cld
mov
jp
pop
mov
mov
mov
mov
jo
mov
mov
mov
dec
sub
sarl
nop
es
cmp
cli
out
inc
fcompl
mov
fwait
or
inc
sbb
adc
mov
lret
cmp
mov
shl
push
jp
scas
dec
pop
push
pop
leave
or
add
sub
jl
sbb
sahf
aas
dec
mov
andb
test
mov
jp
cmpsb
rorb
mov
mov
add
lock
ret
int
movsl
ss
lock
xor
jo
call
mov
stc
insb
fistl
xchg
js
adc
cmc
adc
das
mov
jge
mov
addr16
out
sbb
push
scas
dec
aaa
mov
das
inc
push
pop
xchg
mov
lods
rorl
in
mov
lds
in
adc
insb
mov
mov
mov
or
pop
iret
or
popf
aas
arpl
clc
mov
mov
inc
int
cld
adc
mov
imul
in
or
inc
push
cltd
insb
scas
sub
negb
insb
outsb
inc
push
push
or
lcall
cmpsb
push
sahf
mov
sub
xchg
lahf
adc
adc
cwtl
stc
hlt
inc
sub
jmp
push
jle
add
cmpsb
dec
mov
cs
and
in
out
sti
push
mov
js
mov
xchg
icebp
pop
sbb
jg
adcl
xchg
mov
es
sti
sti
lcall
mov
mov
test
or
inc
and
pop
mov
dec
out
xchg
mov
imul
stos
in
jge
cmp
push
je
jb
mov
insl
scas
addr16
dec
fucom
inc
mov
sbbl
das
outsb
fsubrl
push
cli
jne
mov
ret
daa
jbe
fsub
or
imul
in
inc
cmpsb
xchg
rcll
mov
fwait
popa
mov
fnsave
push
xchg
fstpt
xchg
test
jns
add
xchg
fsubrs
mov
push
lea
scas
insb
test
mov
out
sbb
cmc
test
inc
xor
mov
cmp
fldt
sbb
aaa
and
adc
jnp
mov
inc
push
ja
push
popf
rcrl
jmp
enter
ja
and
sbbl
adc
das
inc
call
mov
push
cmp
js
fcmovne
adc
fs
std
lods
out
jno
pop
maxps
iret
inc
out
lret
sbb
leave
push
jne
add
mov
mov
shlb
call
pop
mull
call
loop
xchg
mov
addl
mov
movntq
loop
mov
and
sbb
xchg
mov
loop
std
jl
xchg
aaa
push
loopne
sti
mov
outsb
sbb
mov
mov
fdivs
or
daa
xchg
dec
jmp
sbb
jae
add
adc
stos
aad
pop
repnz
repnz
mov
repz
and
inc
pusha
push
aaa
sbb
sahf
mov
cmp
push
sub
and
mov
pop
lods
scas
cmp
ljmp
add
mov
scas
jnp
loop
loopne
push
stos
mov
or
mov
loop
daa
xchg
push
aas
out
popa
daa
mov
xchg
jb
je
dec
into
lea
rorb
dec
mov
pop
pop
shll
insb
test
mov
push
sub
mov
movsl
out
xchg
nop
pop
cmp
scas
andb
int
xor
xor
xchg
ucomiss
sbb
xor
test
dec
push
mov
imul
scas
mov
das
mov
movb
mov
push
dec
in
pop
pop
jecxz
fldcw
jmp
test
mov
or
test
sbb
int
mov
hlt
sub
sbb
repnz
lea
loopne
into
or
add
andl
mov
lds
dec
fstpl
push
or
in
mov
lret
or
xchg
addr16
nop
fisttpll
or
sti
sub
inc
stc
push
rorb
shrb
pand
inc
or
xor
add
inc
scas
sar
cmpsl
xor
rcll
and
sub
mov
inc
cltd
or
adc
pop
in
inc
outsb
sub
jge
mov
sti
mov
out
jecxz
sarl
mov
xchg
pushf
ljmp
insb
dec
jl
push
and
in
jns
inc
fiadds
lods
mov
or
in
mov
nop
mov
popa
add
fmulp
loop
in
sbb
jbe
pop
mov
enter
repnz
in
mov
stos
jmp
add
jge
xchg
push
jbe
subb
imul
in
sbb
pop
mov
addr16
ljmp
leave
out
push
pusha
inc
xchg
scas
adc
hlt
outsb
mov
and
into
push
les
sbb
gs
and
xchg
dec
jp
fcmove
test
mov
cltd
sbb
shrl
push
gs
mov
inc
fisubl
pop
lock
xor
sar
lret
adc
jno
fwait
scas
adc
pop
aad
orl
fcmovnbe
fnstsw
insb
push
das
insb
ds
xchg
lcall
pop
pushf
push
pop
test
ds
shlb
dec
or
fistpll
cmp
push
push
in
xchg
in
xchg
aad
dec
push
cmp
arpl
fwait
ds
popl
sbb
fimuls
xor
xchg
popa
cmp
mov
dec
out
jne
fwait
jne
or
bound
fmull
stos
popf
lahf
stc
test
sbb
scas
sub
push
out
dec
xor
mov
add
or
mov
mov
fsubr
xor
sub
shl
inc
pop
sbb
xchg
lcall
repnz
push
js
push
sbb
cmp
mov
aam
out
adc
fsubp
mov
sbb
xchg
add
jg
movsl
cmpsb
stos
cs
xchg
movsl
movsb
xor
enter
lcall
std
je
ss
dec
mov
or
or
dec
sub
jbe
hlt
sub
or
pop
aas
inc
jnp
stos
push
adcb
inc
inc
jmp
and
mov
jmp
push
xchg
inc
push
sarb
push
outsb
pop
sub
inc
push
push
sub
in
fiadds
dec
sbb
add
add
dec
aas
adc
jle
push
xchg
lock
xchg
fs
int3
xchg
popa
roll
stos
and
jle
inc
pushf
jmp
sbb
mov
fists
xor
jb
scas
negb
cmp
test
push
push
dec
sbb
inc
stos
jecxz
arpl
pushf
push
stc
lds
xchg
into
fists
ja
jae
dec
jo
loope
cmc
test
inc
sbb
adc
push
out
push
and
fdivrs
mov
pop
movsb
cmc
bound
fisttpl
add
outsb
mov
and
jge
or
jmp
gs
shrl
xor
test
dec
loop
gs
es
and
aas
in
sbb
cli
cmpl
jae
ficompl
and
pop
add
xor
jns
or
mov
mov
sbb
cli
into
popf
inc
push
bound
int3
pop
sti
mov
lret
push
fwait
int
aam
mov
rorl
jno
push
insb
sub
pop
inc
push
std
lods
aas
in
test
loope
in
inc
and
xchg
out
dec
sbb
rolb
ret
jbe
inc
out
xor
xor
xor
or
shrl
dec
neg
fwait
jl
adc
mov
dec
mov
shlb
loope
fdivrl
jnp
and
repnz
test
sub
inc
pop
xchg
cmpsl
pop
lret
hlt
fadd
mov
adc
pop
xor
and
dec
data16
fdivrp
dec
cmp
cld
loopne
cli
loop
ret
popa
sbb
in
outsb
mov
jl
call
mov
push
inc
and
adc
xor
shll
out
fnclex
loop
orl
jge
lods
inc
outsl
mov
addr16
mov
add
and
scas
shll
xor
mov
cli
add
push
push
push
mov
into
mov
adcb
and
mov
cmpsb
dec
repnz
jno
in
insl
inc
or
push
test
or
pusha
xor
mov
fsts
ljmp
fnstcw
faddp
faddl
xor
scas
add
out
sahf
pusha
pop
out
fsubs
shlb
fwait
or
test
lds
jmp
mov
enter
xlat
mov
jmp
mov
andb
popa
call
sbb
out
dec
inc
xor
roll
adc
cmpsb
cltd
enter
nop
loop
mov
sub
xchg
int3
ja
scas
add
and
mulb
mov
cwtl
ret
insl
sub
loopne
hlt
xchg
aas
and
ljmp
xchg
int
lret
sarl
pop
and
rcrb
xchg
jno
mov
sbb
push
in
jge
in
pop
das
sti
out
xchg
shl
pop
or
ds
int3
xchg
or
dec
and
aas
jno
aad
cmpb
fwait
daa
and
test
add
arpl
cli
dec
ret
mov
test
pcmpeqd
mov
mov
rolb
jne
lods
pop
jb
sbb
das
icebp
adc
mov
mov
or
dec
cmp
jne
sbb
cmp
scas
and
pop
jne
mov
fwait
jecxz
into
adc
push
push
filds
leave
sub
stc
sbb
dec
int
idivl
mov
and
mov
push
pop
imul
pop
add
sbb
push
xor
sbb
push
int
xorl
cmpsl
pusha
xchg
cli
push
xor
push
pop
xchg
icebp
out
lret
in
dec
inc
mov
lahf
adc
nop
out
jnp
mov
test
push
or
mov
mov
std
jge
sub
push
into
clc
pop
shlb
or
out
fbld
jmp
aam
fistpl
push
push
cld
xchg
add
aad
dec
fisubrs
jecxz
adc
xor
scas
cmpsb
mov
movsb
adc
ja
out
and
mov
inc
or
stos
insb
mov
mov
std
mov
aad
testl
pop
mov
imul
cmovl
cli
inc
icebp
in
repz
ljmp
stos
mov
ja
out
and
jae
lret
sahf
sar
lret
push
fcmove
dec
xchg
mov
push
or
mov
or
insb
fwait
out
out
adc
xchg
inc
xor
mov
mov
mov
fimull
sbb
mov
stos
insl
mov
adc
test
xor
mov
dec
subb
add
shrb
pusha
loopne
jmp
in
xchg
ss
leave
pop
jbe
js
cmc
icebp
pop
imul
sub
imul
cmpsb
test
out
shlb
xchg
lds
xorl
imul
mov
pop
movsl
roll
in
scas
push
lds
sub
enter
or
fimull
jmp
push
flds
sub
pop
push
lods
push
xor
lret
mov
add
int
xor
cli
outsl
jns,pn
dec
mov
jmp
pop
inc
movsl
push
test
clc
jns
insl
mov
lret
mov
pushfw
icebp
test
movsb
fisttpll
fwait
rolb
jnp
clc
dec
jg
loop
or
xlat
xchg
jl
sub
push
xor
lea
std
sub
movsl
xor
out
call
xchg
lcall
popa
dec
sub
stos
mov
jecxz
or
mov
je
ret
dec
testb
bound
push
loope
je
jg
mov
and
mov
mov
push
test
rcll
push
ljmp
incb
add
in
addr16
mov
out
xchg
push
xor
addr16
adc
je
scas
addr16
xor
or
gs
popa
inc
dec
inc
push
adc
add
repnz
hlt
insb
dec
pop
inc
fwait
arpl
xor
add
fsubl
out
repnz
ret
cmp
and
mov
test
add
dec
mov
je
les
clc
cwtl
sub
mov
and
lahf
cmp
pop
and
not
cltd
loopne
add
mov
iret
pop
dec
lret
nop
mov
aam
je
aas
dec
pop
enter
jbe
mov
cmpsl
addr16
and
add
cmp
roll
inc
mov
test
push
or
arpl
mov
rclb
push
adc
aas
iret
ljmp
sbb
push
jns
test
out
xchg
sbbl
add
adc
or
shll
and
pop
xor
and
mov
dec
pusha
dec
f2xm1
inc
pop
and
loope
stos
xor
out
adc
sbb
call
pop
jo
les
xchg
xchg
sahf
outsl
mov
lret
hlt
int3
lret
fstl
push
add
test
jnp
mov
sub
adc
movsb
outsl
imul
daa
jo
hlt
popf
in
mov
cmpsl
loop
call
out
push
jl
aad
mov
mov
test
mov
ret
popf
mov
loope
lock
cmp
dec
mov
xor
push
mov
je
push
shlb
mov
ja
ja
mov
addr16
pop
push
bound
xor
popa
mov
out
pop
fdiv
xor
jle
jne
mov
jg
pop
add
jbe
inc
movsb
rol
pusha
aaa
add
push
xchg
cmp
addb
sbb
mov
inc
and
loope
inc
cmp
addl
mov
cld
daa
mov
fnstsw
leave
call
sub
mov
cmp
pop
jle
jp
ljmp
dec
sahf
jns
daa
and
add
adc
xor
out
fnstsw
add
xor
les
mov
lret
dec
clc
lret
lods
outsb
cld
imul
sti
icebp
mov
dec
cmpl
pop
mov
xor
stc
cmpsb
cmp
test
cmp
adc
jae
jbe
pushl
adc
in
sarb
push
lcall
inc
test
jne
cli
popa
pop
mov
cwtl
adc
scas
fnstcw
inc
mov
jle
mov
sub
mov
push
mov
jge
test
fidivrl
loop
inc
das
adc
aaa
dec
test
popa
rclb
lock
xor
scas
cwtl
fistl
jle
in
ds
ja
fsubr
ljmp
or
or
pop
sti
jno
pop
outsb
mov
int
leave
ret
mov
iret
lea
insb
sub
pop
insl
jmp
mov
je
ret
adc
cmp
add
test
lret
xor
shl
mov
stos
daa
loop
movsl
loop
push
aam
loop
js
shll
stos
jecxz
ljmp
pop
fsubs
pop
arpl
pop
mov
out
jbe
daa
push
mov
aaa
jnp
jge
nop
inc
push
xor
sub
xor
sub
and
pop
sub
mov
pop
rclb
jl
sub
xor
mov
mov
dec
pop
sub
add
push
nop
sub
mov
insb
xor
push
and
pop
scas
js
xchg
pop
pusha
enter
ret
xor
xorl
mov
jle
dec
add
fwait
mov
add
out
hlt
imul
leave
xchg
cmp
repnz
or
xchg
pushl
jl
xchg
cwtl
pop
pop
mov
aas
testb
and
dec
int3
fwait
push
or
sbb
aam
and
ljmp
jne
mov
sbb
aam
ljmp
aad
cmc
sub
push
iret
xor
test
xchg
fisubrl
xlat
add
bound
inc
cmpb
push
mov
pop
negb
sbb
in
push
clc
sbb
les
jge
call
xor
adc
loope
xchg
xchg
in
std
lods
add
push
in
mov
frndint
rol
mov
push
pusha
push
mov
fs
mov
push
roll
shrl
repnz
cmp
stos
and
lahf
mov
jbe
fists
xor
addr16
sbb
xchg
sbb
sub
test
data16
inc
iret
or
scas
adc
lods
imul
xlat
sahf
loopne
out
jns
nop
cld
xchg
cli
nop
push
push
int3
aaa
push
gs
inc
xchg
mov
icebp
das
mov
rorb
fs
jbe
in
mov
pop
popl
dec
sub
mov
or
mov
lock
cld
sub
xor
mov
sarl
xchg
or
mov
adc
and
scas
iret
loopne
mov
out
jg
dec
test
jae
inc
push
adc
dec
and
push
ljmp
out
loopne
push
rcll
lret
sahf
lret
cmp
lret
adc
xor
jge
jae
js
fabs
aas
push
loope
div
push
add
popf
test
dec
xchg
iret
mov
cwtl
cmp
stc
xor
mov
xchg
inc
xchg
shll
mov
mov
scas
gs
loop
ss
or
mov
lea
and
push
shll
jle
and
push
jbe
xchg
mov
fwait
xchg
adcl
jp
cmp
cmp
cmp
xchg
or
cltd
dec
pop
inc
cwtl
sahf
jbe
lock
rcrl
mov
pop
adcb
loop
jle
adc
jae
test
mov
ljmp
mov
and
into
inc
xor
jo
xor
dec
cmpsl
mov
sahf
scas
sbb
adc
push
icebp
int
mov
add
mov
imul
stos
mov
out
sti
or
imul
ror
mov
idivl
ss
xorb
add
dec
call
mov
push
cmp
bound
pop
jbe
lret
insl
test
sbb
dec
cmp
test
cmp
jnp
mov
mov
popf
mov
repnz
dec
pusha
pop
xor
sahf
jmp
mov
fs
adc
out
mov
repz
imul
cmp
jge
les
lods
add
pushf
push
packssdw
mov
inc
test
cmp
test
jae
and
sbb
orb
test
test
inc
jne
xor
in
xchg
sub
sahf
adc
add
aaa
inc
dec
stos
es
add
test
fs
mov
or
adc
fcomip
and
add
roll
xchg
lods
cmp
inc
popa
and
stos
inc
mov
pop
sbb
lds
fs
cli
aaa
mov
repnz
pop
add
imul
in
mov
sub
movsl
push
aad
mov
mov
xchg
inc
lds
mov
pop
daa
leave
sub
and
popf
shr
jo
sbb
mov
iret
push
out
lds
lds
aad
dec
fisubl
xor
dec
mov
lods
jo
push
mov
inc
inc
test
icebp
lahf
cli
mov
and
jb
mov
scas
and
xchg
movsb
aas
or
test
ret
adc
mov
stc
shrl
push
dec
mov
or
pop
lea
imul
and
inc
sahf
repz
and
js
adc
dec
or
fsubs
or
mov
sbb
inc
inc
sbb
lock
mov
in
insl
test
add
mov
push
repz
int
pop
pusha
sbb
cmp
into
data16
addl
test
imulb
shr
das
idivl
pop
fs
gs
icebp
mov
jns
dec
cmp
cmp
pop
dec
cmp
push
mov
es
push
orl
or
push
je
icebp
aas
inc
sbb
xor
cmc
xor
pop
push
xchg
nop
inc
pop
bnd
xchg
stos
ret
idivb
xor
cld
push
ret
sahf
cwtl
int
roll
push
mov
mov
mov
cs
cmp
loope
xchg
jg
cltd
scas
nop
dec
clc
daa
sarb
push
int
lock
popa
idivb
roll
mov
fcoms
sbb
xchg
sbb
sarl
lahf
orl
inc
cmc
pop
jge
outsb
cmp
ljmp
pop
or
sbb
pop
cs
mov
aaa
jb
lcall
ss
fucomip
jmp
ja
fcmove
cltd
movsb
push
jno
arpl
lret
inc
repz
push
lods
pop
repnz
in
sub
pop
mov
mov
xchg
sub
jno
js
sbb
loop
ret
mov
clc
pop
xchg
jae
ja
inc
push
movsb
movsl
fdivrs
clc
push
and
push
xor
pop
dec
das
lret
mov
mov
lret
lds
nop
jae
nop
add
sub
adc
xchg
scas
pop
cmp
daa
les
jne
push
das
mov
push
lahf
pusha
cld
stos
insl
les
in
mov
adc
lods
jp
jecxz
fsubr
push
sbb
mov
es
loop
adc
push
mov
stos
pop
test
lahf
ja
daa
mov
pop
out
dec
jl
cmpsb
sti
insl
pop
mov
dec
xlat
inc
mov
adc
xor
and
stos
test
mov
sub
fs
and
loope
call
pop
test
rol
add
ja
mov
sbb
mov
xchg
inc
sahf
fnsave
add
mov
rcrl
cmp
xlat
jp,pt
push
xor
in
fistpl
or
sub
push
lret
inc
scas
push
and
mov
xchg
sbb
xlat
pop
add
ss
pop
sbb
ljmp
rorl
push
test
push
int3
loop
xlat
repz
fdivl
ficoms
add
test
add
bound
mov
addr16
add
or
push
mov
sbb
mov
pop
in
jl
dec
dec
xor
inc
call
or
bound
sbb
pop
lds
or
out
enter
ss
ja
fisttpll
inc
pop
and
xchg
cmp
dec
inc
mov
jne
adc
idivl
dec
mov
xchg
or
dec
pop
mov
push
ljmp
jmp
loop
adcl
rorb
lret
lcall
pushl
subl
dec
jae
repz
lods
mov
push
or
pop
jns
in
push
push
fwait
lahf
mov
jmp
pop
adc
jp
sub
xor
std
popf
or
pop
imul
adc
cwtl
bound
in
mov
xlat
dec
je
bound
push
test
adc
push
ja
scas
dec
sbb
xlat
xchg
test
cld
jo
nop
and
aad
pop
push
dec
mov
jb
ss
mov
pop
test
mov
push
pop
and
in
rcr
mov
push
popf
mov
in
call
mov
cwtl
jl
cwtl
es
mov
mov
add
ss
pop
test
xor
add
insl
daa
lock
inc
dec
sahf
arpl
adc
sub
xor
shll
leave
inc
adc
js
fisubs
clc
pop
adc
mov
cmp
push
in
mov
shll
bound
aaa
mov
fldl
xor
jae
arpl
cmp
out
or
inc
std
push
inc
and
pop
iret
popf
lods
add
mov
fcmovu
inc
sub
jmp
insb
add
push
leave
xchg
add
pop
cmpsl
into
adc
mov
shrl
mov
mov
add
add
push
fwait
adc
cmp
js
lds
push
mov
mov
jnp
decl
fs
xor
xchg
xchg
jl
or
mov
popa
pop
shrl
mov
aaa
arpl
int3
mov
mov
jmp
inc
xchg
imul
jecxz
clc
mov
mov
cmp
mov
mov
sub
loope
out
gs
fldcw
xor
movsl
jl
dec
scas
dec
clc
fdivl
repz
lcall
adc
sub
inc
test
mov
or
mov
pop
scas
xor
into
or
test
shr
inc
scas
jge
inc
leave
adc
xchg
mov
cmp
aam
lods
adc
adc
nop
jne
and
add
imul
cmpsb
bound
and
icebp
aad
scas
imul
lret
mov
sbb
inc
xchg
jg
jecxz
push
in
xchg
dec
sbb
cmpl
aas
jns
or
enter
cltd
mov
lods
cltd
mov
aad
rcrl
push
outsb
test
pop
sbb
pop
fwait
shlb
pop
mov
push
or
dec
pop
adcl
push
arpl
mov
xor
pop
xor
mov
daa
push
inc
in
jle
in
xchg
lret
aad
cmc
je
push
jge
pusha
sbb
or
jno
roll
xor
pop
jge
push
and
movsb
jmp
pusha
jne
push
gs
ret
les
enter
add
xor
hlt
popf
inc
shll
rcrb
stc
cs
cmp
xchg
icebp
or
inc
sti
rorb
mull
jecxz
aad
xor
fcmovnbe
push
jle
popa
jae
outsb
mov
mov
fsubr
mov
lds
pop
sbb
or
cmp
dec
rcll
jne
jge
lret
int
adc
loopne
push
out
rcl
ds
rorl
add
std
mov
xchg
ja
outsl
jge
mov
inc
mov
shlb
loop
in
inc
dec
or
mov
in
xchg
push
xlat
fs
sbb
insb
fimuls
dec
sahf
and
mul
ljmp
icebp
test
repz
xlat
jbe
addl
andl
jecxz
rolb
or
insl
jl
pop
adc
xorl
pop
addb
pop
and
les
out
ds
call
outsl
outsb
idiv
add
in
mov
scas
mov
gs
stos
das
push
or
notb
push
jo
push
and
and
das
imul
pop
adc
xor
test
sub
sub
dec
ljmp
mov
fsubs
mov
aad
adc
frstor
dec
frstor
mov
jg
jl
das
imul
ficompl
decb
cmp
pop
lret
mov
xor
mov
das
mov
xchg
arpl
xor
adc
mov
mov
addr16
lcall
dec
orl
cmp
mov
and
insl
int
pop
jp
adc
push
pop
pusha
adc
jecxz
out
pop
jle
mov
xor
inc
loope
mov
aam
fwait
cmp
mov
imul
nop
or
pop
or
add
add
adcl
cmpsb
cmpsb
push
fwait
jmp
ret
mov
or
in
mov
aaa
subb
pop
movsb
pop
xor
insb
mul
xchg
dec
dec
cld
or
jge
in
inc
cmc
int3
cmp
shl
mov
xor
jno
cmpsl
aas
les
popa
js
pop
jl
sbb
mov
pop
sub
fs
bound
pop
jbe
mov
cs
lret
jns
sub
stos
enter
dec
fadds
or
pusha
outsl
in
je
dec
adc
xchg
aaa
add
adc
pop
pop
repnz
and
push
in
xor
push
and
aas
xchg
movsb
movsb
nop
sbb
or
js
imul
mov
fs
inc
mov
call
mov
mov
sbb
jbe
shrl
push
mov
jl
stos
pop
or
and
rolb
or
lret
or
sbb
add
mov
aas
mov
push
in
jmp
stos
sbb
repnz
mov
sub
out
inc
pop
mov
fdivrl
xchg
js
cltd
fwait
inc
jae
fidivl
inc
jns
lea
mov
insb
dec
adc
push
pop
insl
stos
xlat
adc
faddl
ret
sbb
adc
test
jbe
push
mov
and
fldcw
lret
enter
les
imul
sbb
addl
insb
scas
xchg
mov
int
add
pop
mov
js
imul
inc
jno
out
notl
cld
jmp
mov
mov
ret
lret
cwtl
dec
lock
mov
inc
xchg
scas
xor
je
subl
rclb
mov
scas
test
mov
xchg
popa
inc
lret
adc
jle
iret
pop
jmp
sub
cld
cmp
adc
addr16
mov
shll
dec
gs
jns
xchg
fcoml
stos
mov
jb
test
mov
stc
add
cmpsb
adc
insb
lds
sbb
outsb
shr
outsb
addr16
jecxz
pushf
jns
mov
pop
mov
sahf
jnp
sbb
or
movsb
dec
lahf
lods
aas
add
subb
and
mov
sbb
addr16
add
sub
and
mov
fmuls
lds
aad
or
inc
mov
and
jecxz
and
cmp
scas
lds
mov
lea
mov
fwait
push
movsb
int3
loop
jl
xor
test
inc
jno
add
and
out
repz
xchg
lods
addl
jo
dec
xor
inc
lea
ss
sahf
jg
mov
stos
loopne
adc
dec
bound
xchg
mov
ss
or
movsb
xchg
adc
sub
adc
pop
mov
shrl
mov
jb
jno
adc
push
imul
loopne
mov
int3
jno
int3
mov
mov
ja
cmp
imul
ss
in
lock
adc
lods
shlb
or
jmp
add
cmpsb
push
lock
dec
pop
sbb
fwait
pop
mov
insl
call
inc
test
insl
push
jae
mov
rorl
mov
cmc
rcrl
imul
mov
sbb
mov
inc
mov
xor
sbb
add
push
mov
xchg
add
xchg
jnp
sbb
into
jno
jno
lods
ds
inc
shrb
dec
lahf
ret
mov
movd
roll
jle
jae
aaa
push
lcall
sbb
enter
lea
add
fmuls
or
ret
jg
push
jo
rcr
lea
repnz
bound
int3
and
popf
insb
push
int
out
xchg
std
stc
aas
lds
dec
or
mov
pop
aaa
xchg
nop
iret
pop
xchg
mov
mov
sub
test
jmp
xchg
iret
adc
lea
jge
mov
sarb
inc
jae
pop
dec
dec
fucomi
inc
daa
int
testb
mov
scas
in
movsb
out
inc
loope
jle
stos
addl
loop
xchg
adc
int
mov
jno
enter
adc
xor
xchg
adc
mov
pop
sbb
les
pusha
push
movsl
fcoml
int3
and
push
adc
sbb
popa
sbb
pop
jg
outsl
add
mov
loope
fcompl
aaa
xor
add
sub
inc
add
popa
sbb
jl
cltd
jnp
in
or
pop
push
add
mov
sbb
adcb
mov
loopne
popf
lea
add
int
push
cli
fdivp
pop
ret
loope
pop
ss
inc
xor
lea
lcall
add
rorl
scas
jl
mov
xlat
std
xor
call
lret
ret
sub
sti
shll
sbb
adcb
rol
cmp
mov
pop
imul
jno
movsb
push
sub
bound
rcll
mov
push
mov
sbb
add
sub
dec
cli
or
daa
mov
cmp
cmc
pop
jo
pop
cwtl
scas
inc
inc
mov
es
outsl
aaa
stc
fstpl
js
loop
stc
lds
adcl
mov
jbe
fildl
int
mov
push
aam
and
int
add
popf
sti
mov
sarb
cmp
mov
and
push
add
mov
dec
filds
xchg
es
inc
sbb
lahf
adc
outsl
mov
arpl
xchg
push
xor
popf
stos
mov
dec
and
in
pop
jae
jmp
mov
outsl
scas
sub
cmpsl
push
fbstp
inc
out
mov
mov
ja
mov
fnstsw
mov
int3
push
jb
mov
xchg
daa
mov
or
adc
pop
loop
inc
inc
sbb
div
repnz
jle
insl
popl
loop
push
jg
shll
insl
mov
push
cmpsl
pop
push
mov
repnz
xor
lret
cmp
add
xchg
inc
jne
mov
xchg
and
xchg
fs
movsl
sarl
adc
arpl
lock
mov
int3
and
loope
mov
cmp
mov
and
push
fidivl
jb
add
xlat
pop
mov
test
pop
jl
cli
push
mov
popf
push
cmp
cwtl
pop
pop
shll
nop
loopne
xchg
cmp
dec
push
adc
sub
ds
xor
mov
repz
push
xchg
inc
jp
fs
cli
std
pop
dec
adc
sbb
pop
lret
lret
sub
je
les
mov
xor
xor
pop
test
pop
adc
jp
xchg
mov
popf
push
decb
nop
bswap
loope
push
iret
lahf
sti
or
in
jns
jae
mov
inc
inc
nop
xchg
mov
clc
ja
test
int
bound
push
iret
inc
mov
jae
pop
or
inc
or
loopne
cmp
cs
dec
cmpsb
stos
lods
jne
cmpsb
loope
mov
std
xchg
lods
mov
gs
dec
jmp
faddl
add
sbb
sbbl
push
daa
sbb
nop
cmpsb
or
jbe
andb
les
xchg
sbb
clc
into
lods
push
push
ffree
mov
enter
jg
xchg
mulb
repnz
mov
push
aad
xchg
or
xorb
stc
push
xchg
cmp
movsb
pop
inc
in
adc
sbb
fiadds
and
push
xor
or
inc
rcrb
adc
lret
nop
mov
dec
std
inc
jne
mov
xor
out
add
repz
je
lea
scas
je
pushf
push
mov
test
out
fdivr
scas
stc
adc
adc
fldcw
or
jbe
xor
xchg
jmp
jmp
add
xchg
add
lods
leave
lret
cltd
inc
test
inc
add
fsubrp
jno
jo
and
push
movsl
pop
push
outsl
enter
mov
iret
loop
test
mov
cmc
shll
cmp
movsb
add
fldt
or
arpl
xor
sbb
ljmp
and
sub
cwtl
cmp
test
popa
mov
xchg
fs
aaa
loop
or
mov
ljmp
dec
mov
js
cmp
jg
mov
push
push
pop
fs
adc
rcl
and
lahf
cmpsl
dec
leave
inc
cmpsb
out
sub
int
adc
out
insl
fistps
cmp
cld
js
shr
lods
sub
inc
out
xchg
pop
icebp
cmc
push
daa
fadd
or
sar
or
das
dec
xor
test
iret
cmp
mov
mov
pop
ja
and
outsb
jne
mov
icebp
jnp
xchg
mov
mov
das
test
ret
aad
pop
lock
xor
movsb
jg
push
push
mov
push
call
push
pop
loope
in
into
sub
fistpll
or
mov
outsl
inc
pusha
jnp
lods
mov
adc
xchg
icebp
pop
pop
sti
pop
jbe
xchg
cmp
rcr
add
pop
clc
out
xlat
xchg
cmp
int3
push
divb
mov
daa
cld
sbb
cli
ret
jle
dec
imul
mov
sbb
cli
adc
xor
repnz
inc
sbb
not
adc
test
mov
adc
aam
jno
insl
fs
lcall
inc
push
jae
lret
pop
pop
jb
data16
pop
fs
push
stos
pop
jno
rol
pushf
lods
pop
pop
lcall
out
hlt
mov
adc
neg
call
jl
or
fsubrs
mov
or
data16
pushf
vmulss
jb
test
scas
mov
repz
lret
ficomps
daa
fs
jnp
lret
int3
imul
pop
mov
dec
and
pusha
cmp
jg
jno
add
or
pop
in
das
jp
sbb
dec
int
mov
sbb
inc
pop
cmp
inc
mov
mov
xor
subl
cmp
ret
popf
shll
int
out
shrl
push
and
adc
stos
aad
in
or
cmpsb
test
or
cltd
call
push
repz
jo
out
outsl
jge
mov
sub
lahf
daa
jne
fsub
push
sub
repz
es
icebp
test
mov
addr16
push
cmpsb
sbb
inc
pop
push
xchg
ja
je
fwait
jecxz
add
xchg
andb
pop
rolb
inc
popf
mov
pop
inc
les
ds
push
and
jl
imul
stos
mov
movsl
mov
jae
add
cmp
cmp
xlat
scas
sbb
in
mov
test
shll
arpl
xor
sarb
add
aas
or
jb
push
sub
sbb
rol
lret
adc
enter
xchg
cmpsl
pop
jbe
xchg
xchg
fisttps
fldcw
and
jecxz
adc
push
data16
dec
ds
int
push
pop
mov
cwtl
cmp
cmp
jb
adc
xchg
and
call
les
and
sbb
mov
and
in
xchg
xchg
out
aad
lahf
pop
cmc
xor
test
sub
cmpsl
mov
pop
cmpl
xchg
fwait
sbb
lds
fincstp
test
push
add
cmpsl
mov
dec
and
sbb
sarl
jb
mov
mov
sbb
sbbb
outsl
push
fcomps
lods
cwtl
in
xor
pop
jns
cmc
lret
pop
jp
pop
rcrl
add
sbb
int
aam
ss
mov
sub
cmp
das
push
pop
mov
test
dec
cmpsb
mov
pushl
push
mov
mov
mov
xchg
loopne
mov
jl
jmp
push
push
fnstenv
adcl
pop
adc
stos
out
jnp
lods
popf
daa
iret
jno,pn
cli
fnstenv
xchg
outsl
imul
pop
mov
pop
push
pushf
cmpsl
sbb
mov
repnz
std
push
nop
arpl
inc
and
sbb
sub
dec
or
insb
push
sub
sub
movsb
push
dec
outsl
cmpsb
lcall
jge
mov
and
pop
inc
push
out
lds
mov
in
out
scas
fcmovnb
inc
dec
ds
adc
jmp
pop
jo
clc
rcl
fisubs
mov
out
dec
fcomps
mov
mov
lcall
push
pop
sbb
mov
test
cli
dec
out
push
add
cmpsb
mov
iret
lahf
xor
pop
mov
xlat
push
push
daa
in
xor
dec
int3
dec
mov
cmp
insb
sbbb
and
sub
xor
mov
or
cmpsl
inc
call
push
mov
xchg
lea
bound
xchg
lea
in
adc
push
int3
inc
pop
lds
cltd
lcall
outsl
nop
test
mov
push
mov
cli
cwtl
jae
pop
inc
jns
jle
insl
lods
imul
or
ret
jg
pusha
mov
int3
xor
xchg
mov
mov
push
mov
cli
test
push
pop
jl
inc
adc
mov
in
scas
and
hlt
andb
push
aaa
inc
dec
out
sub
cs
mov
jae
and
cmp
cmpsb
jo
fidivl
fwait
push
cmp
dec
enter
mov
push
pusha
dec
jbe
loop
push
ret
or
mov
sbb
imul
jne
jne
in
jo
xor
fiadds
outsb
loop
push
sub
mov
sar
shll
lea
dec
or
xchg
stos
or
popa
dec
imul
sub
push
xchg
lcall
aaa
dec
cmp
out
add
popa
jno
mov
fidivs
outsb
cmpsb
cwtl
test
fldt
popf
cmp
ficomps
pop
out
pop
std
dec
cmp
sbb
add
popf
and
insb
mov
popf
pop
pop
aas
inc
xchg
sub
cmp
iret
insl
mov
jl
jne
and
lahf
and
lret
add
mov
imul
mov
leave
fsubrl
xor
sub
fldenv
or
lahf
adc
cmp
es
jl
jg
fiadds
dec
in
jl
in
adc
mov
and
movsb
pushf
cmp
ljmp
jg
xorl
rcrb
int
arpl
inc
mov
push
gs
mov
gs
loope
scas
into
dec
scas
mov
cmp
ja
sbbl
lret
mov
lcall
std
inc
stos
mov
fs
fnstsw
popa
outsl
and
sbbb
shrb
mov
fiaddl
xchg
sti
test
pop
push
cmp
cmc
in
int
imul
pop
inc
into
repnz
icebp
ret
pop
lods
cmp
adc
daa
xor
outsl
in
aam
jl
imul
shlb
es
mov
addr16
and
hlt
pop
lods
scas
add
xchg
add
mov
inc
sub
add
cmc
in
push
xchg
inc
movsl
cmp
inc
add
cwtl
mov
jns
inc
call
xchg
dec
pusha
insb
pop
sbbb
push
ljmp
fsubl
fidivl
xchg
fstpt
xchg
jle
jg
mov
fistl
rcrb
or
cld
adcb
mov
sub
jg
test
cmpsb
movsl
stc
cmp
or
mov
xlat
xor
leave
imul
push
stc
jns
je
xchg
mov
mov
out
ds
push
xor
cmp
das
jl
mov
lods
mov
jnp
outsb
inc
loope
add
imul
dec
push
inc
xchg
xor
mov
adc
jnp,pn
pop
mov
call
jo
or
cmp
or
dec
pop
seta
push
xor
stc
leave
imul
cmpsb
jns
out
sbb
add
mov
aas
adc
lcall
cltd
mov
jns
cmp
cmp
adc
cwtl
fsubp
pop
xor
or
clc
into
data16
into
pop
clc
add
in
js
mov
sub
bound
cmpsb
jge
les
aas
sti
test
add
dec
jo
loope
popa
cli
outsl
dec
iret
or
sub
outsb
icebp
and
xchg
or
jns
cmp
insl
test
popf
fdivl
fcompl
in
jae
xchg
xchg
idiv
lods
fldl2t
idiv
xor
pop
int
popf
add
movsl
inc
jle
in
pop
std
push
mov
iret
lods
sub
pusha
xor
negb
testb
adc
shll
mov
pop
sub
js
xor
es
repz
imul
push
or
cmc
sahf
add
push
xchg
popa
fsubrs
push
mov
xchg
push
adc
fistpll
std
cmp
xor
ss
negb
repz
push
cmp
adc
enter
xor
dec
in
cmpsb
add
movsl
je
sbb
paddq
les
push
call
mov
inc
cli
js
mov
out
hlt
sub
and
xchg
out
jg
mov
nop
jbe
aam
mov
fwait
in
mov
fidivrs
or
add
jp
push
mov
outsl
gs
int
outsb
sbb
and
or
inc
cmc
cmp
mov
adc
arpl
cmp
xor
or
fcoml
fs
jno
sbb
push
and
es
jl
sub
dec
mov
mov
aad
cmp
or
fstps
leave
in
pop
pop
mov
and
test
and
cmpsl
in
sahf
push
jmp
sarl
xchg
push
pop
sbb
sbb
aad
add
and
jmp
lcall
mov
sbb
pop
inc
adc
rclb
insb
push
xchg
mov
push
xor
lods
call
mov
andb
ja
int
addb
xor
pushf
loope
or
jnp
out
loop
push
sbb
out
out
imul
test
ficompl
inc
mov
pop
in
lcall
and
addr16
test
andb
jecxz
lods
mov
out
mov
push
jb
ja,pn
movsl
mov
je
int3
sbb
and
adcl
inc
jnp
loopne
lock
sbb
jnp
dec
fsubr
jo
pushl
pop
xchg
cmp
adc
push
neg
inc
or
lret
mov
jge
sub
imul
call
frstor
addl
sbb
mov
cmp
jbe
jo
outsl
popf
xchg
movsb
inc
ja
test
icebp
xchg
mov
pop
mov
cmp
jmp
jecxz
popf
adc
pop
mov
rep
or
adc
mov
lcall
push
xlat
in
push
popf
mov
cmp
adc
mov
dec
outsl
jmp
pop
je
sub
jecxz
mov
icebp
mov
xor
cmpsl
lret
add
gs
aas
adc
xor
inc
hlt
mov
aas
cli
xchg
dec
outsb
lds
dec
xor
cld
movsb
sbb
inc
daa
lret
pop
daa
jo
subb
add
movsl
ss
adc
mov
jp
sbb
xchg
btr
cmp
pop
add
pop
or
push
mov
test
sbb
lods
sbb
xchg
jp
dec
pop
int
out
push
inc
outsb
push
lret
call
les
lea
sbb
adc
inc
pop
or
icebp
jmp
ss
movsl
inc
dec
sbb
mov
or
dec
mov
push
adc
mov
xchg
lea
pop
xchg
adc
adcl
adc
loope
fcoml
and
rorl
lea
pop
adc
stc
and
xor
jmp
flds
movb
mov
repnz
jge
lret
rcr
stos
mov
fmul
jns
pusha
sub
inc
pop
mov
repz
or
rolb
jmp
cwtl
les
rcr
inc
mov
insb
cmpsl
int3
incb
icebp
add
dec
out
cmp
aaa
in
jne
pop
or
cld
fiadds
dec
jbe
or
sti
pop
mov
and
popa
str
pop
bound
inc
sub
add
stc
adc
sbb
jecxz
fwait
push
aam
orl
imul
rorb
inc
xchg
rdmsr
and
mov
inc
sbb
inc
std
ja
int
insl
je
push
and
in
mov
and
mov
out
pop
aad
push
sbb
adc
pushf
xchg
push
int3
inc
cmp
rcr
shrl
aaa
pop
add
pushl
mov
pusha
dec
jmp
mov
mov
stos
adc
enter
andb
pop
nop
test
xchg
adc
pop
mov
dec
mov
outsl
inc
pop
enter
xchg
xchg
out
jg
subl
clc
cltd
addr16
mov
test
sbb
mov
sub
lcall
mov
lret
jmp
mov
push
test
mov
mov
adc
fs
and
imul
mov
add
into
mov
fwait
aam
fbld
cld
cmpsb
cwtl
mov
jns
mov
mov
xchg
inc
and
mov
imul
xchg
out
lret
pop
cmp
cltd
jp
in
mov
jnp
mov
fadds
jg
out
push
xchg
adc
dec
arpl
ds
xor
fcomi
shll
int3
and
push
ja
enter
fcoml
cmp
test
adc
push
add
movsl
das
jns
sub
xlat
test
lret
push
add
adc
inc
test
int3
xchg
sbbb
xchg
shll
or
int
push
lods
scas
sti
dec
push
mov
mov
add
push
fdivrl
js
xchg
pop
xor
xor
xor
pushf
push
cmpsb
ss
and
and
xchg
fcmovb
adc
jp
cmp
sbb
xor
lock
sbb
xchg
pop
out
in
mov
cmp
or
mov
sar
jle
ds
pop
mov
stos
and
inc
or
sbb
js
xchg
mov
inc
or
xchg
sub
nop
xchg
xchg
jle
pop
xlat
mov
push
add
dec
adc
ror
or
xchg
hlt
lds
pop
jmp
inc
dec
xchg
fcmovnu
insb
sbb
dec
or
pushf
lret
xor
sti
push
push
pop
mov
push
mov
stos
inc
or
aas
dec
shlb
dec
mov
ret
add
lcall
mov
xor
into
mov
xchg
cwtl
inc
in
xchg
adc
ja
pop
divl
out
or
cmp
int
fwait
imul
inc
in
in
fdivs
aam
lret
lods
pop
sbb
outsb
adcb
lock
lret
movl
push
push
jb
xchg
push
sub
lods
mov
push
clc
push
dec
sahf
fwait
sub
clc
push
cmp
ret
or
and
clc
jle
cwtl
in
pop
cmc
fists
jb
mov
fs
jno
dec
fsubl
push
ret
repnz
adc
out
pop
dec
rep
cmp
dec
aaa
es
xchg
aas
jo
pop
in
mov
sbb
pop
test
mov
lods
das
jle
hlt
movb
xor
repz
jg
notb
jbe
mov
dec
mov
and
mov
cld
adc
stos
fildll
not
rclb
insl
hlt
jl
inc
pushf
jg
ret
lods
jnp
les
test
lea
cltd
aas
mov
add
add
jle
push
out
dec
cltd
aas
or
aam
sub
sahf
rclb
mov
sub
clc
stos
push
nop
and
or
pop
int
dec
mov
pop
pop
into
sub
call
icebp
mov
cmpsl
xchg
iret
mov
test
jg
sbb
push
inc
mov
imul
add
enter
and
dec
hlt
xor
nop
xchg
nop
push
add
pop
mov
mov
xchg
sbb
je
inc
inc
mov
jle
insb
into
lahf
push
jge
std
loope
xor
loopne
jmp
mov
push
mulb
push
or
enter
repnz
and
lea
sub
push
sbb
sahf
inc
lret
or
shll
js
aam
pop
cltd
inc
movsl
cli
sub
cmp
xlat
jno
loope
into
mov
xchg
jbe
xor
dec
push
fildll
nop
sbb
mov
or
xorb
dec
jl
outsl
sbb
mov
xchg
inc
test
xchg
cmp
popa
dec
roll
div
sub
mov
int3
cmp
pusha
arpl
lcall
add
repz
jge
jecxz
and
sub
stos
inc
add
add
gs
push
mov
pop
in
sbb
push
mov
push
push
aad
jne
mov
fwait
xchg
push
addr16
mov
rcll
hlt
lcall
xchg
xchg
jg
imul
je
addl
outsb
jp
mov
push
dec
loope
xchg
call
jmp
jecxz
and
fs
xor
mov
testb
mov
mov
jle
and
mov
xchg
dec
mov
negl
stc
pop
mov
jle
ds
and
daa
lret
push
jnp
and
and
pop
mov
rolw
mov
mov
stc
enter
xor
scas
jne
mov
add
inc
out
pop
negb
mov
nop
insb
xchg
and
ja
test
and
pop
fbld
push
mov
ja
insb
or
js
adc
inc
and
mov
loop
xor
adc
sbb
into
push
es
dec
mov
icebp
call
aaa
add
inc
sarl
cmpsb
js
not
sbb
jp
outsl
mov
cmp
movsb
sub
dec
sbb
xchg
mov
xor
pop
jno
inc
or
and
jb
movsl
add
insb
out
notl
xorl
mov
fimuls
xorb
sbb
jmp
outsl
out
std
mov
gs
cli
ret
addb
or
insl
nop
jnp
jb
mov
inc
dec
cmp
xchg
xor
push
pop
sub
add
addl
imul
insb
arpl
stos
cmp
adc
popa
or
sub
dec
lcall
sub
pop
je
push
mov
cmp
push
add
cmp
and
sub
mov
insl
fcoml
bound
xchg
jle
or
add
leave
push
mov
pop
sbb
movsb
mov
push
or
jmp
std
lahf
jmp
add
aas
mov
lock
in
mov
sbb
aaa
sub
dec
fs
jmp
sbb
sahf
jae
jle
test
dec
roll
pop
push
ljmp
in
mov
ss
ja
mov
sbb
xor
shlb
push
and
jge
fnstcw
lcall
repnz
fisubrs
fimull
jne
sub
pop
mov
pop
adc
in
mov
mov
cwtl
lret
push
out
outsl
jp
cmp
mov
ss
call
or
sub
xor
cwtl
and
nop
repz
adc
mov
dec
add
inc
xor
nop
aad
push
out
mov
cmp
out
add
fdivrs
lahf
loop
daa
not
dec
xor
push
jecxz
out
pop
shrl
pop
hlt
jl
xor
pop
out
mov
push
mov
mov
adc
lods
movsl
cmp
lahf
rcl
mov
test
mov
mov
cli
fisubl
movsb
lods
jp
mov
jle
sbb
xchg
fs
sbbb
xchg
pop
mov
sbb
mov
outsb
sbb
mov
scas
pop
push
cmp
insl
cmp
mov
mov
push
pop
cmpsl
cld
pop
inc
cmp
jl
in
clc
add
mov
push
sbb
push
arpl
cmpsl
add
lret
into
pushf
ret
xchg
push
pop
jmp
cmpl
pop
xor
mov
imul
out
dec
fcmovnbe
jnp
mov
imul
pop
cwtl
dec
mov
loop
daa
jle
sub
dec
dec
cld
or
add
ret
cmpsl
add
dec
push
xor
fiaddl
jp
cmc
ret
and
jae
arpl
mov
loop
mov
js
mov
in
push
or
sub
fcmovbe
daa
adc
mov
cmp
daa
into
mov
cmp
enter
xchg
test
jg
jns
mov
cld
imul
imul
daa
xor
loop
in
dec
cmpsl
cli
jne
sub
push
cmp
push
outsb
inc
or
out
mov
shrl
fadds
dec
imul
dec
int
pop
mov
inc
pop
in
sbb
cmpsl
cld
dec
and
inc
jo
jge
imul
aaa
fldcw
pop
jo
sub
mov
jg
or
pop
jbe
inc
ret
xor
push
leave
mov
pop
popa
jmp
out
lock
jbe
in
out
and
insl
in
inc
push
inc
hlt
xlat
rcrl
rclb
jl
pop
punpckhwd
pop
xchg
out
mov
or
lahf
leave
mov
outsb
jmp
les
ja
sarb
jmp
xor
cmpsb
sbb
xor
push
or
ds
es
or
xor
subl
fisubl
mov
in
push
mov
loopne
mov
push
sahf
rep
push
lret
sarb
or
daa
add
sub
sbb
lret
enter
pop
in
or
insb
sbbb
jo
insl
lods
jg
mov
jg
sub
mov
pop
movsl
ds
imul
dec
je
mov
fdiv
std
lods
inc
adc
inc
jnp
jg
pop
and
xchg
xchg
loopne,pt
sbb
and
jns
test
sbb
mov
inc
imul
js
push
xorb
xorl
pop
test
xchg
jle
aaa
gs
cmc
cmp
fistps
lock
jp
xchg
adc
jp
test
and
sbb
jb
xchg
and
xchg
insb
jae
jecxz
push
lret
into
call
cli
mov
adc
dec
mov
cmp
imul
jmp
stc
pushf
and
aaa
mov
lods
scas
add
cli
mov
cs
sbb
std
add
push
sub
fisttpll
dec
cwtl
insb
and
mov
push
mov
es
adc
imul
cmc
and
jle
pop
mov
je
movsl
clc
mov
hlt
cmpb
ret
addr16
add
mov
in
sub
fiaddl
and
push
xchg
outsl
add
sbb
mov
cmp
cmp
lock
inc
fiaddl
insl
dec
lods
jl
cltd
push
push
pop
mov
sbb
sub
xor
movsl
jl
add
pop
test
repz
aam
mov
sub
ror
or
mov
shlb
bound
fisttps
gs
mov
out
cmp
movsl
fnstcw
mov
adcl
lds
jecxz
ret
inc
sbbb
pop
outsb
xchg
xor
loopne
mov
mov
call
pop
lods
dec
xlat
xor
rcrl
mov
push
pop
mov
pop
aas
fs
mov
popf
sub
mov
dec
jle
cld
jb
jge
mov
cmpsl
add
push
sahf
jae
shr
and
sarl
jns
stc
sarb
add
fstps
lds
jnp
mov
xor
test
mov
sahf
js
or
cmpsb
mov
je
push
rorb
stos
scas
dec
add
mov
pop
cli
mov
popa
mov
mov
lret
out
dec
ds
data16
lock
int3
fiaddl
jb
filds
sbb
pop
hlt
pop
psubb
jmp
cmp
sub
mov
sub
push
add
lea
mov
movsl
pushf
and
mov
adc
movsl
adc
dec
insl
mov
fldenv
push
pop
xchg
pop
inc
das
pop
pop
repz
lret
jo
fwait
mov
nop
pop
push
xor
inc
lret
pop
fidivrl
es
fs
nop
icebp
push
push
inc
xchg
push
mov
mov
fimuls
sbb
mov
dec
loop
pop
sbb
out
jge
enter
adcb
pop
pop
lcall
inc
inc
mov
in
jg
addr16
pop
ja
jecxz
cmp
andl
insl
mov
mov
jae
fs
adc
dec
push
cmpsb
fldcw
inc
xchg
cwtl
cld
lock
xchg
add
out
stos
dec
cli
in
ret
mov
in
cmp
testl
sub
es
xchg
add
fnsave
in
repz
ja
fbstp
hlt
ja
test
mov
test
js
outsb
nop
outsb
inc
stc
sub
push
andb
pop
jne
inc
sub
dec
mov
popa
scas
mov
cmp
lahf
mov
xchg
jecxz
push
mov
jl
cmp
xchg
mov
mov
nop
adc
pop
and
cmp
push
push
mov
loopne
dec
xor
fsubs
jno
dec
push
aad
and
dec
add
mov
inc
out
and
mov
and
mov
dec
ja
pop
test
xchg
dec
pop
jns
inc
stos
addr16
daa
aaa
push
aaa
leave
rclb
add
loopne
xchg
scas
inc
divb
jecxz
xchg
lods
pop
subb
repz
mov
push
sbb
ss
pop
pop
lret
and
sbb
insb
les
sub
pusha
enter
into
adc
inc
pop
lock
and
lret
pop
dec
and
cltd
mov
or
fnsave
loopne
sbb
jno
dec
mov
adc
leave
or
dec
xchg
cmpsl
pop
fcmove
sbb
jo
mov
arpl
aam
inc
push
or
and
inc
shll
jg
adc
aas
pop
mov
pushf
dec
add
subb
mov
xor
ja
mov
cmp
mov
xchg
inc
mov
xchg
and
hlt
dec
idivb
jg
js
push
outsl
xchg
dec
mov
stos
call
sarl
int3
enter
pop
test
add
out
add
jmp
pushf
out
loope
lret
pop
push
pop
imul
jnp
inc
xor
stc
jge
adc
mov
adc
jl
cmp
mov
sbb
notl
loope
dec
mov
cmpsl
dec
adc
mov
xor
fnop
das
mov
mov
out
jo
or
cmp
pop
mov
xchg
aam
icebp
test
jno
cmp
mov
inc
enter
pop
popa
orb
pushf
and
and
ret
add
lods
push
push
sbb
pop
mov
push
push
ret
jae
call
movsl
push
test
mov
mov
pusha
cmp
out
adc
mov
daa
push
cmp
stos
imul
xchg
fnstcw
rcr
adc
jbe
xor
inc
cld
jp
dec
btrl
or
repz
repz
rcrl
dec
stc
fdivrp
leave
mov
push
ficoml
repz
fidivrl
mov
das
xor
je
pop
shrb
subl
daa
dec
mov
mov
dec
lcall
jl
jge
repz
mov
mov
daa
mov
pop
fstpt
and
adc
ja
mov
scas
mov
dec
push
sub
jo
jle
add
dec
neg
push
push
sub
out
push
or
pop
aad
mov
or
fsts
fistl
adc
inc
or
cmp
repnz
cmpsl
dec
sahf
lcall
ljmp
sahf
fisttpll
cmp
out
cli
push
outsb
stos
ja
aam
test
jle
xor
or
insb
movsl
pop
js
xlat
cld
mov
outsl
mov
lds
jno
fstps
pop
cmp
popf
testl
and
xchg
lea
dec
jno
outsl
pop
inc
and
jge
gs
cli
jbe
pusha
arpl
inc
pop
mov
pop
dec
add
xor
mov
mov
xchg
dec
or
xor
hlt
adc
sti
xchg
mov
pop
andl
jmp
or
call
pop
gs
in
scas
and
dec
hlt
cmpsl
in
xor
mov
add
adc
xchg
jge
jo
es
in
mov
mov
xor
inc
xchg
in
mov
jnp
push
adcl
test
sbb
lcall
sub
insb
lods
xlat
subb
ja
addr16
jae
das
push
push
aas
dec
xchg
dec
push
and
mov
aaa
mov
ret
add
shlb
cld
push
xchg
add
std
mov
hlt
gs
xchg
cmp
sbb
pusha
std
pop
push
sbb
mov
jecxz
jns
pop
shrb
ret
dec
add
and
jg
push
mov
xor
pop
popf
movsl
ja
testl
xor
push
rolb
mov
cmc
js,pn
int
cmpsb
insl
cmp
negb
jge
test
pop
scas
sbb
xchg
stc
pop
out
pop
xor
and
lahf
insb
bound
sahf
fildll
or
pop
cmpl
dec
int3
dec
or
pop
bound
into
push
add
push
movb
mov
sbb
arpl
mov
movsb
jmp
xor
or
sub
imul
aas
mov
push
push
cwtl
push
sub
sub
je
xor
fstl
pop
mov
and
adc
ljmp
sti
mov
jle
cmp
cmp
add
adc
mov
ljmp
popa
pop
pushl
adc
test
daa
in
daa
pop
into
btc
push
jmp
ret
rorl
inc
out
mov
pop
xor
jmp
scas
dec
sub
mov
int
dec
xchg
or
xor
adcb
lds
sbb
pop
cmp
out
fstl
sbb
pop
mov
int3
fstl
or
aaa
into
insb
ja
movl
dec
shl
adc
sbb
pop
shlb
mov
outsb
cmp
inc
pop
in
inc
dec
xchg
and
lret
jge
popf
loop
icebp
ds
jae
lock
les
iret
cmp
jecxz
and
daa
pop
mov
aaa
in
inc
push
pushf
mov
ljmp
sarl
cmp
lock
add
fcompl
data16
out
out
shl
neg
adc
and
data16
mov
loopne
aas
push
pop
std
xchg
xchg
pop
subb
or
and
imul
in
jno
pusha
sub
js
add
test
xchg
loope
int3
movsb
mov
scas
pushf
lret
arpl
sub
mov
outsl
push
jb
jne
in
insl
cli
push
jnp
aam
mov
lahf
xchg
dec
es
aaa
sahf
adc
xchg
push
push
popl
lds
mov
sbb
fisttps
addr16
mov
out
and
roll
or
and
jg
xor
push
or
bound
and
popf
orl
clc
stos
mov
mov
and
in
push
ret
fsubrl
fmuls
mov
shll
dec
cs
push
lock
cmc
cs
cmp
push
fisubs
inc
cmovle
scas
sti
add
jmp
adc
cmpsl
jmp
inc
cltd
mov
test
les
mov
sbb
lods
or
cmp
or
cli
lret
cmpsl
in
sbb
bound
jno
sub
lahf
mov
lods
push
popf
mov
into
ja
iret
mov
cmp
ret
jl
xchg
mov
lret
nop
les
cmp
movb
mov
popa
sarb
sub
xor
repz
cmp
in
sbb
xchg
inc
sbb
outsb
add
sbb
out
sahf
push
or
hlt
cld
dec
xchg
daa
aas
pop
mov
mov
or
mov
mov
ud0
iret
mov
fsubl
mov
iret
pop
jge
mov
aam
pop
mov
dec
enter
insl
jno
test
syscall
mov
mov
mov
test
ja
sbb
xchg
es
cmpsb
xchg
fistpl
ret
push
and
cmpsb
adc
std
sahf
inc
jnp
jb
jmp
outsl
stos
lock
and
repz
sbb
pop
movsl
xchg
mov
arpl
adc
negl
cvtps2pd
outsl
sub
pop
jmp
nop
add
sbb
adc
fwait
insb
cmp
subl
adc
xchg
jb
nop
out
mov
sub
adc
test
imul
in
int
test
stos
adc
dec
clc
sahf
xchg
aam
dec
sbb
or
orb
fwait
push
cmp
add
int3
imul
fists
cwtl
iret
mov
fs
lods
push
inc
and
andl
adc
add
addr16
push
enter
lahf
xchg
mov
xchg
xor
insb
aad
mov
aad
push
push
push
outsl
mov
mov
xchg
pushf
call
lock
test
scas
pushf
lret
loop
jne
fldcw
mov
rorl
ret
xor
aad
rcrb
xor
dec
shrb
iret
mov
pop
and
and
ret
jl
scas
jecxz
mov
inc
mov
cmp
mov
popf
insl
pop
cmp
adc
fldl
nop
cmpsb
data16
arpl
xor
shr
jnp
adc
or
cltd
sbb
or
lahf
and
push
les
jnp
jge
in
and
lds
test
out
mov
inc
jp
pop
mov
or
nop
push
or
pop
or
lret
test
pop
mov
insb
mov
out
movsl
and
rcll
lds
and
mov
fwait
lds
xchg
addl
inc
lea
mov
in
fdivs
nop
jno
and
mov
mov
cltd
add
jecxz
xchg
cmpsb
xor
mov
mov
jb
cmp
outsl
stc
dec
xor
mov
pushf
adc
adc
stc
xchg
inc
aas
fmuls
or
inc
outsl
xlat
aam
cwtl
xor
test
lahf
jno
mov
insb
stos
mov
test
loope
add
jecxz
andb
xor
popl
stc
js
mov
popa
inc
xchg
aad
mov
xchg
cld
stos
jg
mov
in
js
daa
or
add
push
or
xor
prefetchnta
stc
adc
daa
pop
dec
jae
push
cmpb
mov
and
push
fcmovnb
adc
repz
push
test
cmpsb
jne
shlb
shll
fsubrp
stos
popa
mov
jno
sub
add
xor
push
rclb
xchg
out
add
out
mov
out
cmpl
fimull
inc
mov
push
popf
push
sbb
pop
into
add
add
pop
jl
int
popf
inc
lds
jbe
loopne
ficomps
pusha
aad
cltd
push
je
and
adc
or
xchg
dec
aas
push
rep
and
dec
or
leave
roll
inc
stc
popf
inc
idivl
cs
gs
out
pop
int3
lods
or
inc
or
or
testb
loopne
ds
xchg
repnz
cmp
out
fs
popa
jns
sti
jl
push
outsl
fucomip
repz
push
sbb
addr16
stc
mov
or
cmp
scas
sbb
in
ret
int
sub
leave
inc
pop
leave
ja
popf
repz
push
mov
sbb
inc
cmpsl
cwtl
les
mov
out
jns
sbb
push
mov
pusha
dec
out
dec
or
pop
fwait
aaa
add
scas
and
or
lods
nop
cmpsb
jnp
jno
mov
push
mov
lcall
jno
push
jo
xchg
movsb
movsl
mov
cwtl
scas
je
cwtl
mov
mov
dec
jb
mov
mov
gs
test
lock
xor
jnp
pop
or
and
clc
mov
mov
mov
out
pop
pop
test
sbb
cmp
fisubrl
lods
xor
in
pop
mov
lds
imul
test
xchg
imul
sbb
dec
mov
insb
out
push
loopne
cmp
imul
inc
mov
daa
jnp
inc
das
add
lods
xchg
xlat
imul
pop
insl
nop
dec
ret
jno
mov
add
or
pop
dec
mov
xlat
mov
push
js
add
cld
mov
sub
jo
sarl
cmp
mov
cltd
subl
aaa
and
aaa
pusha
adc
mov
dec
mov
cmp
in
dec
pop
xchg
test
mov
jge
fnstcw
shll
inc
pop
mov
icebp
adc
pop
jb
ljmp
enter
and
out
jae
pop
mov
pusha
enter
in
shrl
shlb
adc
enter
dec
rcrl
sbb
pop
mov
lea
leave
cmp
lods
or
nop
mov
or
adc
xchg
les
sahf
push
fiaddl
mov
xor
dec
cmp
fwait
sub
xor
mov
sahf
inc
adc
inc
pop
push
lds
push
pop
movsl
ret
mov
aad
rorl
sub
aas
jg
rcl
add
mov
out
mov
xor
hlt
mov
in
lahf
or
jge
orb
pop
mov
js
cmp
lds
rclb
mov
ljmp
mov
push
mov
fnstsw
int3
inc
ja
jbe
stc
movsb
xchg
cmpsl
or
js
mul
repz
xchg
jl
ja
popf
cltd
cmp
cmp
fsubr
addr16
scas
movsl
mov
push
sbb
dec
insl
push
xchg
inc
mov
imul
icebp
dec
ljmp
shr
jge
mov
dec
gs
and
mov
pop
les
enter
popl
jmp
aad
ret
xchg
cmp
add
dec
mov
mov
push
push
arpl
enter
fyl2xp1
ss
icebp
mov
sbb
push
or
or
cwtl
rcll
mov
lea
sti
add
mov
inc
lods
mov
test
shrl
sbb
scas
hlt
or
xchg
cmc
xchg
sub
roll
and
lock
fimull
dec
stc
pop
dec
nop
jecxz
mov
test
subl
push
daa
or
cmp
mov
fs
adc
repnz
and
add
xor
push
pop
inc
ror
fnstsw
incb
call
rorb
sbb
or
fmull
jbe
inc
in
sub
xchg
fcoml
es
gs
pop
jecxz
rcrb
sbb
xlat
test
mov
cltd
push
cmpsl
lcall
add
imul
dec
and
push
rorl
mov
mov
mov
mov
xor
or
in
adcb
sub
dec
pusha
mov
cmp
or
daa
repnz
jl
sub
xchg
add
int3
and
scas
repz
outsl
push
push
pop
nop
jmp
mov
push
pop
jne
cmp
popa
mov
mov
outsb
lcall
movsb
fwait
add
rcll
and
mov
xlat
pop
xor
decl
in
movsb
mov
dec
enter
and
lret
push
adc
dec
pop
lcall
mov
std
xchg
scas
push
pop
pop
out
or
mov
xor
dec
int3
in
sub
sbb
cmp
sub
add
add
movsl
dec
adc
sbb
adc
pop
add
stos
xchg
jo
cmp
cs
push
dec
aad
sub
or
sub
dec
imul
das
jae
jge
into
fucom
bound
addl
adc
sub
sub
xor
dec
or
jle
test
push
ja
inc
xchg
mov
jl
jb
into
rep
mull
je
inc
cmp
xor
test
add
xchg
pusha
add
xchg
scas
mov
fidivl
aam
mov
and
pop
push
pop
inc
push
jnp
test
imul
sbb
jmp
in
cmp
inc
adc
jne
divb
insb
mov
test
fcmovbe
inc
inc
push
js
add
sbb
sbb
pop
in
pop
jecxz
or
sbb
mov
rorb
xor
pop
dec
addr16
cmp
cmp
dec
std
arpl
pop
push
xchg
cld
xchg
pop
mov
popa
mov
add
cmp
pop
aam
adc
gs
mov
sbb
xor
xchg
xchg
inc
xor
cmp
subl
pop
xlat
cs
pushf
sub
xchg
test
pop
or
dec
xor
sbb
jmp
xchg
jle
cwtl
in
filds
sarb
test
cmp
or
push
int
mov
es
scas
jmp
lcall
push
jmp
jmp
cmp
daa
lea
fdivs
mov
adc
insb
and
push
dec
mov
call
clc
lret
and
movsl
call
fidivrl
jecxz
pop
ret
or
adc
dec
xchg
sbb
iret
mov
repz
pop
pop
pushf
or
cmpsl
in
dec
push
push
les
mov
jb
mov
out
push
jp
dec
rolb
hlt
jne
jne
mov
popa
add
fwait
mov
xchg
in
fmull
std
test
mov
cmpsb
cmp
stos
test
movsl
push
lret
fwait
outsl
mov
push
scas
jmp
movsl
and
cmp
addr16
xor
mov
mov
and
inc
inc
sub
shrl
fsubr
cmp
iret
inc
pusha
fldenv
imul
mov
dec
xor
repz
cmpsb
or
in
jae
popf
mov
jge
jl
mov
adc
mov
aam
sub
ret
sahf
pop
and
cli
mov
push
rorb
push
adc
and
ja
test
cs
pop
pop
ror
ss
mov
jae
cmp
jg
lock
out
mov
bound
xchg
xlat
outsl
mov
sti
insl
xchg
xchg
fimull
sti
adc
int3
sub
daa
nop
test
das
or
push
inc
popf
mov
and
jp
mov
scas
leave
xor
sbb
mov
inc
je
hlt
in
dec
dec
in
ja
test
sarb
mov
push
sbb
mov
mov
pop
and
xor
cs
pop
shrb
jae
test
jmp
std
add
dec
inc
dec
mov
xchg
mov
jmp
pusha
test
xchg
std
jo
fcomps
xor
insb
pop
jb
popf
mov
dec
xchg
stos
jo
rcpps
push
push
aam
addr16
outsl
popa
dec
inc
or
dec
sub
xchg
mov
fstp
push
lret
sbb
data16
cmpsb
scas
inc
movsl
sub
aad
pop
dec
cli
sbb
insb
outsb
mov
jle
sbb
iret
lahf
xor
adc
cld
out
je
pop
xor
push
lock
adc
pop
sbb
xor
mov
jmp
jne
loopne
adc
jp
movsb
out
sbb
jae
enter
stos
dec
test
lods
mov
add
pop
xor
shlb
sahf
pop
fisubl
imul
cmp
push
push
jbe
mov
mov
sahf
or
cltd
mov
nop
ret
mov
into
inc
out
jmp
mov
test
inc
inc
ja
enter
sub
pusha
lret
loope
mov
xchg
cmpb
jp
arpl
aas
mov
mov
sub
xchg
pop
jbe
inc
inc
es
adc
pop
shrb
inc
jg
leave
push
xchg
sub
dec
test
movsl
sbb
in
loopne
pop
sbb
push
jmp
mov
inc
jle
mov
cmp
jno
in
or
inc
ss
aas
outsl
insl
and
pop
cmpsb
and
xor
jo
pop
mov
iret
sub
inc
and
test
dec
shl
xchg
inc
xchg
push
mov
pop
out
xor
adc
or
scas
jo
pop
inc
lret
movl
pop
adc
mov
daa
dec
clc
ds
cld
xor
out
and
jecxz
lcall
bound
push
in
pop
in
push
jg
sbb
je
into
mov
rclb
sub
push
fsubrp
shl
pop
inc
inc
lahf
aas
cmpsl
adc
mov
pushf
adc
xor
in
sbb
xor
pop
jmp
lcall
sub
sbb
sub
add
loopne
jbe
jle
movsl
push
jo
ds
mulb
mov
mov
out
cld
adcl
movsl
popf
mov
das
mov
add
sbb
sub
mov
loopne
mov
movsl
mov
ret
fld
pushf
add
enter
jns
ljmp
insl
mov
ja
sti
dec
out
ret
movsb
das
mov
xchg
in
pminub
inc
sti
dec
push
into
test
jge
sbb
arpl
add
or
jge
dec
jp
ljmp
cltd
out
or
gs
sub
sub
roll
dec
iret
bound
test
icebp
in
dec
in
push
pop
add
imul
iret
jno
and
mov
sub
cli
loope
push
xchg
add
movsl
dec
sbb
mov
je
aaa
xchg
jmp
mov
icebp
inc
xor
gs
loopne
outsl
shl
push
test
lcall
scas
sbb
incl
xchg
sbb
xchg
jb
outsb
and
es
iret
xor
push
push
out
mov
outsb
pop
call
push
dec
sbb
jbe
stc
cmp
in
fnstsw
scas
xchg
xor
jnp
shrb
aas
push
hlt
aam
jbe
adc
and
adc
pop
mov
daa
and
gs
xchg
sbb
mov
cmc
inc
xlat
fmuls
xchg
test
outsb
in
loop
xor
lods
call
test
xor
sbb
adc
fcmovnu
icebp
xor
xlat
push
and
dec
outsl
push
mov
ret
add
outsb
xchg
or
xchg
inc
stos
sbb
and
fstl
adc
pop
enter
fstl
sub
scas
push
arpl
les
xchg
mov
pushf
inc
iret
ss
dec
push
in
aaa
jno
inc
arpl
mov
mov
xchg
mov
jmp
mov
test
sbb
sbb
mov
and
mov
mov
loopne
cwtl
int
mov
dec
cmp
pop
add
je
push
sbb
ds
popf
movsb
lock
xor
test
gs
ret
mov
lods
inc
fnstsw
push
sub
out
aas
loope
lods
adc
jno
lea
leave
jg
jnp
xor
mov
mov
and
es
call
dec
cmp
push
add
xchg
jbe
add
xchg
les
mov
rcl
rorb
sahf
leave
loop
mov
jb
ss
fdivl
hlt
movsl
inc
sti
mov
sahf
inc
sar
mov
push
sbb
push
inc
sub
adc
and
adc
sahf
mov
in
jg
pop
rorb
dec
sbb
or
pop
js
sub
add
lret
out
adc
push
add
loopne
mov
imul
dec
ret
push
mov
lret
pusha
ljmp
std
sbb
add
rcr
jne
push
repz
xlat
xor
mov
out
sbb
fwait
jg
in
enter
bnd
mov
push
add
add
pop
aaa
xchg
mov
mov
mov
sahf
xlat
xchg
and
lea
in
outsl
and
stos
jge
xor
xor
pop
repz
cmp
xchg
inc
mov
test
in
add
enter
dec
xchg
les
cmpsl
movsl
sahf
cld
mov
repz
xor
iret
fstp
mov
mov
dec
jge
push
insb
jecxz
popf
mov
cwtl
lcall
or
lahf
cwtl
mov
movsl
pusha
sub
mov
es
inc
ds
test
push
dec
movl
mov
cmp
sbb
repnz
scas
jo
test
or
mov
or
mov
or
and
and
addb
addr16
adc
add
mov
pop
imul
bound
adc
push
fsubs
push
adc
xor
sub
jae
iret
test
test
or
xlat
adc
in
dec
inc
push
or
insl
mov
pop
mov
jge
aas
test
cwtl
mov
jle
mov
cmp
cmp
outsl
mov
shl
pop
std
into
adc
pushf
push
xor
out
and
add
inc
mov
xor
xor
push
outsb
adc
popf
add
ss
xor
rorb
in
mov
cmpsb
pop
fwait
mov
dec
sub
or
mov
aaa
rcrb
dec
push
push
scas
negl
mov
cmp
out
imul
dec
adc
or
sub
js
push
cmp
and
or
or
aam
adc
shlb
out
cmp
mov
add
mov
xchg
hlt
pushf
dec
or
mov
mov
shrl
sub
dec
push
out
icebp
sti
push
lea
rcll
out
mov
stc
mov
push
mov
pop
fs
mov
xchg
push
rorb
pop
js
mov
cld
lods
test
xor
mov
shr
and
adc
pop
lea
jb
push
mov
pop
outsl
shl
enter
sti
lods
mov
test
es
mov
pop
iret
push
adc
jns
inc
mov
lds
insl
fwait
mov
shll
fadds
icebp
mov
push
jne
or
jnp
jecxz
int
fildll
test
adc
cmp
cmp
popa
rolb
dec
mov
xorl
scas
lahf
xchg
out
mov
lcall
mov
leave
fdivrs
mov
mov
cmp
dec
popf
js
mov
dec
test
adc
sbb
pop
sbb
add
sbb
and
cmp
loopne
inc
cs
adc
cld
pop
mov
pop
xlat
jae
pop
cld
popf
out
push
adc
daa
mov
fwait
stc
lds
sub
xorl
jb
out
dec
dec
xor
bnd
adc
imul
stc
sub
ljmp
add
arpl
outsl
ja
xchg
lods
movsl
data16
add
jg
leave
gs
arpl
or
insb
pop
jae
fsts
out
xor
pop
addr16
dec
icebp
pop
and
push
xor
jno
cmp
shl
inc
imul
xor
idiv
lret
adc
nop
sti
mov
lods
loope
mov
subb
cli
mov
or
ret
lahf
jno
inc
pushf
sbb
jl
fldenv
jecxz
mov
ret
lds
pop
imul
xchg
je
lods
shr
xor
mov
add
in
mov
je
add
xchg
push
das
orb
sub
inc
pop
cmc
pushl
jg
es
xor
fidivl
in
pop
push
dec
mov
js
hlt
xor
push
loop
jbe
insl
lcall
inc
adc
shrl
adc
es
shl
sbb
dec
lret
lds
iret
inc
cs
inc
punpckhbw
aaa
shr
mov
and
arpl
les
mov
xchg
pop
push
xor
nop
mov
push
sub
mov
sbb
out
call
mov
pop
shr
mov
movsl
sbb
out
dec
push
and
hlt
cmp
icebp
fbstp
insb
cmpsl
sarl
mov
fldl
scas
outsb
xlat
icebp
jnp
xchg
jae
jae
sub
int3
add
push
xchg
inc
rcrb
sub
add
pop
stos
jle
rorb
popa
mov
push
test
leave
push
adc
xlat
mov
fsubrs
sub
fnstenv
cmp
mov
call
int3
jmp
sub
fidivrl
test
sub
pop
cli
xchg
movsl
pop
and
mov
inc
mov
jae
pop
dec
movb
xchg
mov
dec
lods
pop
pushf
inc
outsb
lods
jp
or
les
push
loope
mov
movsl
adcl
pmaddwd
jnp
fwait
sbb
push
sub
jnp
scas
cwtl
push
test
mov
pop
push
gs
mov
or
loop
and
rcrl
cli
and
cmpsl
sub
insl
xor
lods
add
push
cmc
inc
mov
jb
sbbb
in
outsb
dec
stos
push
fisubl
push
xchg
fnclex
fs
mov
xorb
inc
mov
xchg
jp
mov
int
inc
jle
cmp
out
adc
sbb
sahf
lea
test
lahf
xchg
fcomps
iret
in
scas
sub
sub
sbb
add
mov
mov
xor
out
loop
cmp
jae
dec
lea
mov
mov
xchg
int3
dec
andb
dec
xchg
xor
sub
xor
enter
out
mov
dec
pop
scas
addl
dec
dec
jno
cmc
pushf
mov
rorb
pop
cmc
sub
mov
xchg
xchg
inc
mov
jle
std
mov
adc
mov
lcall
xor
cmp
lock
cmp
movsb
popf
sub
jecxz
mov
sub
aas
sarb
and
stc
cmp
cmpsl
jns
xchg
in
out
xchg
dec
clc
call
inc
sbb
jmp
sub
nop
sbb
test
cmp
aaa
jo
dec
arpl
test
adc
sbb
mulb
mov
push
cs
fdivrl
cli
sub
loop
mov
stc
test
sub
fidivrl
pop
adc
mov
movb
jle
or
ljmp
or
loopne
cmp
inc
shlb
pop
loope
xchg
ss
lahf
jbe
mov
mov
mov
pusha
scas
test
sbb
cmp
jg
ljmp
xlat
mov
mov
mov
sbb
fdivl
repnz
aam
pop
shll
adc
notb
adc
lods
inc
jo
inc
rclb
adc
cmpsl
push
popf
lret
cmp
inc
andl
cmp
out
xchg
pop
aad
pop
mov
int
xchg
shrl
cmp
sub
mov
outsl
dec
add
cs
mov
or
push
add
pusha
or
ss
pusha
lcall
inc
jno
pop
mov
shl
stos
push
daa
aad
jo
outsb
xor
shll
jnp
hlt
scas
testb
mov
stos
cmp
enter
pop
inc
xchg
add
imul
mov
iret
add
testl
rcrb
lds
sub
aam
in
push
inc
out
push
jne
xchg
test
dec
lret
sub
xchg
insb
aad
cmpsb
fidivrs
std
push
negl
insl
mov
jmp
movsb
inc
fmul
shl
les
and
add
scas
decl
rolb
xchg
loop
and
clc
inc
push
ficomps
repz
test
dec
jmp
or
ljmp
ds
test
adc
addr16
clc
dec
out
cld
xchg
cmp
aam
mov
push
ret
pop
ret
ljmp
aad
aam
inc
loope
stc
lahf
jmp
push
inc
pop
xchg
mov
xor
dec
dec
add
sbb
vcvttsd2si
adc
jge
js
xor
dec
add
les
mov
xchg
leave
rolb
out
and
pop
jno
dec
sub
inc
jo
test
in
inc
iret
aam
add
data16
adc
jecxz
paddd
cld
jne
sbb
dec
push
push
loopne
mov
inc
dec
adc
mov
xchg
ficomps
pusha
fsts
in
and
inc
adc
xchg
mov
mov
jns
or
cmp
lds
xor
lret
sbb
mov
mov
sbb
mov
lret
sub
lea
xchg
test
test
out
stos
pop
sbb
cmc
adc
sub
enter
push
push
leave
add
push
mov
stos
xchg
push
lahf
mov
inc
mov
inc
loope
ret
inc
xor
test
daa
sbb
cmc
loopne
addr16
add
int
icebp
data16
push
lret
imul
call
jne
in
cmpsb
xchg
dec
jno
mov
into
mov
int
jnp
sub
lahf
or
sub
adc
cmpb
adc
movsb
push
fsubp
mov
std
scas
sub
sarl
pop
mov
inc
mov
pop
and
push
mov
ficoml
adc
fstl
or
pusha
dec
ss
mov
jae
push
test
cmp
pop
cmp
sarb
push
jne
sub
cmp
cmpb
mov
sub
shrb
mov
inc
dec
movntps
add
adc
notl
sbb
xor
inc
push
push
je
mov
fstps
mov
add
lcall
dec
adc
fldpi
rclb
mov
xor
mov
xor
jl
scas
inc
incb
sub
or
add
fisubs
adc
push
hlt
imulb
jae
testb
pop
dec
xchg
das
adc
jo
cwtl
sbb
hlt
je
pop
mov
cmpsb
lods
dec
adc
xor
adc
or
adc
mov
testl
insl
pop
or
stos
and
add
rorl
daa
pop
subl
or
jo
xchg
rorl
cmp
push
shr
or
nop
andb
mov
pop
xchg
jb
out
int3
dec
xchg
sub
loopne
inc
jae
inc
cmp
daa
cmp
cmp
lcall
lds
adc
testb
pop
lret
cmp
in
push
mov
mov
sbb
add
adc
and
jge
or
ret
test
clc
sub
fstpl
shl
enter
daa
mov
add
sub
dec
cmp
aas
insl
inc
enter
out
stc
and
pop
pop
or
inc
cli
test
sahf
movsb
ret
jbe
stos
dec
or
pcmpgtd
push
push
xchg
xchg
fisubs
das
sarb
or
scas
fwait
push
jns
popf
stc
clc
ret
xrelease
cli
mov
mov
or
sbb
enter
ja
jnp
jmp
cwtl
test
mov
loope
out
imul
cmp
and
mov
movsb
outsl
fs
xor
dec
push
mov
daa
or
loop
aam
dec
insl
pop
push
mov
xchg
inc
and
push
pop
lret
cmp
cltd
outsb
in
push
testb
sarl
in
dec
pop
cwtl
ds
cmp
or
dec
imul
sti
les
jle
lds
xor
js
shlb
lods
dec
mov
outsb
or
in
or
les
pop
or
sbb
call
and
add
movsl
or
or
sub
in
mov
sbb
adc
pop
mov
sub
dec
jg
in
sub
lcall
pushf
adc
popf
fwait
inc
sub
jecxz
dec
and
jge
daa
cli
pop
adc
jge
lods
pop
dec
ja
jg
mov
daa
stc
inc
and
inc
mov
insl
or
jae
fs
int3
leave
cmp
stos
sub
jecxz
and
flds
pop
or
leave
cmpsl
sub
mov
push
xor
lahf
scas
xchg
int3
inc
repnz
mov
jmp
notb
into
sub
sbb
sbb
test
cmp
popf
mov
pop
push
adc
out
jmp
ret
mov
sahf
in
and
mov
add
pop
jno
aam
stos
pushf
cmp
enter
popa
and
cmp
hlt
out
cwtl
xor
inc
jb
push
push
dec
push
and
psubd
dec
sbb
jp
xchg
pop
mov
pop
addr16
leave
in
add
pop
mov
mov
pop
xchg
mov
lret
repnz
sbb
pop
push
mov
movsb
mov
dec
push
mov
jmp
adc
mov
in
mov
data16
scas
movsl
inc
call
jns
inc
aam
mov
cmp
mov
ret
pop
jp
mov
test
sbb
imul
arpl
rorb
mov
test
sbb
orb
xor
adc
jb
popa
ljmp
loop
pop
cmp
sub
xchg
gs
nop
push
test
lods
jp
rcr
push
and
mov
or
arpl
out
xlat
insl
es
in
push
test
mov
mov
pop
push
jl
daa
call
mov
dec
ds
pop
xor
jnp
in
mov
jp
sbb
mov
cmpsl
cmpsl
mov
push
mov
mov
mov
repnz
leave
pop
inc
pop
fs
outsl
xor
lods
xchg
arpl
adc
dec
fdivs
test
into
imul
cmpsb
or
sbb
adc
cmpsl
sub
insb
sbb
rcll
dec
int
xor
mov
test
dec
jmp
aam
xchg
add
shll
out
fbstp
push
lea
inc
out
repz
jne
and
insl
aam
adc
leave
sub
pop
std
mov
test
fsub
or
and
xorl
sar
loop
xor
fstps
fs
push
adc
sarl
sub
cmp
sub
mov
shlb
lahf
add
dec
test
sbb
je
loope
mov
ret
jbe
mov
rorl
dec
dec
stos
dec
xchg
adc
mov
movsl
inc
loopne
repnz
leave
mov
test
and
outsw
out
fcomps
jbe
mov
mov
sbb
mov
inc
cwtl
xor
pop
lock
out
push
sbb
inc
or
jno
and
iret
xor
xchg
aad
jl
push
pop
cmp
stos
lret
arpl
dec
push
rorl
jns
sbb
sub
cmpsl
dec
mov
sub
repz
arpl
leave
push
fdivrl
push
std
gs
or
ljmp
fisubrs
test
outsb
mov
xor
mov
adc
jle
mov
insb
mov
mov
in
lret
mov
shlb
mov
adc
xor
ds
push
mov
pop
lret
ror
mov
das
pushw
pop
mov
inc
sti
sbb
or
addr16
ja
in
cmp
prefetcht2
fstps
pushf
push
outsl
sbb
movsl
xor
inc
in
lds
leave
lcall
jle
into
cmp
push
outsl
lock
loope
stos
mov
adc
ss
imul
xlat
mov
shlb
out
mov
cmp
dec
push
fiaddl
sbb
jle
inc
push
add
out
mov
mov
cwtl
push
xlat
pop
jecxz
pop
shlb
inc
mov
mov
arpl
fsub
in
xchg
xchg
icebp
or
fwait
sbb
xlat
lock
popa
jp
mov
ret
scas
movb
stos
fldenv
mov
enter
push
xchg
sbb
hlt
ret
push
mov
and
repz
mov
aas
leave
xor
scas
cmp
mov
xor
aam
das
mov
movsl
in
data16
stc
jns
repnz
fldenv
and
lret
adc
xchg
cli
add
pop
inc
enter
sbb
int
push
sbb
mov
xchg
out
insl
rorb
jo
or
pop
clc
jnp
xor
xor
or
cmp
sbb
push
fs
xchg
mov
js
inc
in
pushf
push
push
pop
iret
js
jmp
jae
sub
dec
mov
sarl
scas
popf
into
jae
pop
add
repnz
push
sbb
loop
out
outsl
adc
xor
in
push
js
sbb
into
push
mov
or
sub
xor
cmp
movsl
stos
xchg
xchg
ret
cmp
push
insb
stos
sub
xchg
dec
nop
stos
mov
mov
ret
aad
and
cmp
mov
aam
cmpb
sub
pop
push
repz
je
fsqrt
dec
loopne
call
cs
sbb
push
mov
sbb
pop
in
cs
or
push
adc
fcoms
es
rorb
fbld
aaa
sbb
adc
push
jp
inc
adc
xchg
fsubrl
scas
inc
test
mov
fnstenv
outsb
push
enter
pop
out
xchg
aas
nop
mov
mov
sub
pop
mov
pop
aas
in
or
lret
rorb
add
pop
repz
dec
popa
xchg
jo
test
lcall
xchg
xor
cmpsl
bound
int
xchg
mov
clc
popa
sbb
push
cmpsb
cmpsb
add
mov
jl
jb
stos
and
gs
inc
in
add
jge
ret
cli
push
xor
xor
inc
es
iret
imulb
push
in
dec
push
and
int
inc
xor
push
pop
or
cmp
subl
push
add
jno
lds
and
jb
js
push
adc
or
movl
push
sbb
pusha
sar
popa
ret
mov
ret
ds
or
mov
xchg
aam
fsubrs
fs
leave
sub
inc
mov
popf
pop
leave
adc
scas
setge
or
push
stc
jae
pop
ret
sub
rorb
out
xchg
arpl
xor
xor
int
out
push
daa
push
fistps
adcl
lret
sub
jnp
or
add
es
cmpsb
out
xchg
xor
xor
jmp
sub
imul
mov
test
dec
pop
or
mov
push
and
sub
enter
addr16
dec
mov
pop
adc
gs
rolb
and
daa
push
cltd
cmp
mov
daa
inc
outsl
cs
jge
mov
hlt
mov
adc
add
lods
ret
pop
js
das
cs
jmp
das
aam
fidivl
fisttpl
xor
mov
push
lods
xchg
mov
cmpsb
daa
std
cmpb
je
shlb
jbe
iret
scas
sub
aaa
mov
pusha
icebp
loop
xchg
jb
adc
push
cwtl
lcall
add
ficompl
clc
stc
mov
push
xor
push
ds
arpl
sarl
xchg
xor
shr
push
jle
ja
loopne
cld
jno
and
loop
dec
lods
daa
loopne
insb
inc
mov
lcall
clc
cli
sbb
push
jbe
jns
loop
push
ss
fisubrs
test
mov
orb
and
cltd
cmpsb
jbe
ss
icebp
mov
jp
sub
mov
outsb
ss
inc
pop
hlt
or
imul
push
ret
rcl
stos
xchg
mov
idivb
mov
push
adc
in
jns
or
in
stc
jnp
jg
sbb
inc
inc
mov
ljmp
mov
push
xchg
inc
int3
mov
and
clc
aas
mov
repnz
dec
lahf
xchg
in
mov
sub
movsb
stc
mov
dec
adc
pop
mov
mov
push
hlt
sbb
out
sub
xchg
movsl
adc
jnp
inc
in
pop
sub
mov
jbe
sub
cmc
xchg
mov
fwait
mov
xlat
aad
mull
mov
push
lods
jecxz
push
mov
daa
movsb
fcoms
repnz
shll
or
adc
cli
sub
xchg
out
adc
in
repnz
mov
push
dec
adc
cwtl
add
jl
and
rol
mov
data16
add
dec
movsb
xchg
mov
xchg
push
mov
mov
mov
test
or
jne
xor
dec
jnp
or
sbb
sbb
outsb
push
add
or
mov
xchg
mov
and
mov
cmp
mov
inc
mov
fistl
test
call
cmp
sub
ljmp
sub
aas
and
mov
dec
dec
repnz
dec
mov
pusha
repz
stc
fisubs
in
js
push
push
jne
push
xchg
notl
int3
jbe
fisubrs
and
add
push
inc
flds
test
mov
std
mov
roll
lock
mov
loopne
shlb
and
lret
mov
pop
shr
add
jns
mov
sti
xchg
dec
dec
mull
sub
xchg
mov
sub
adc
popf
and
fistl
push
pop
imul
lret
int3
jnp
scas
sbb
lea
pusha
push
inc
fwait
pop
mov
loope
mull
sub
pushf
cmp
or
adc
cmpsb
lods
adc
ret
adc
mov
stc
mov
mov
sub
sahf
dec
stos
leave
test
leave
sub
xor
or
add
cmp
mov
xor
pushf
ds
test
andl
outsl
out
push
loop
das
cs
faddl
stos
cmpsb
mov
pop
repz
pop
popa
adc
pop
insb
icebp
mov
mov
and
mov
mov
dec
adc
rcrb
xor
je
push
enter
or
xchg
jnp
add
shll
aaa
xchg
stos
nop
movsb
mov
sub
int
data16
js
dec
inc
bsr
mull
dec
test
mov
mov
lock
aam
fs
add
outsb
into
mov
es
in
and
stc
outsl
xchg
scas
push
lods
sti
jg
addr16
cmp
pop
inc
mov
outsl
je
orl
xor
cmpsl
pop
cmp
adc
movsl
push
push
and
sub
and
fdivrs
xor
inc
mov
cmc
imul
jg
xor
pop
mov
aam
add
lahf
ljmp
outsb
dec
mov
scas
ret
into
shll
enter
and
loope
pop
pusha
xor
inc
sbb
ficompl
pop
adc
in
test
add
frstor
test
pushf
jno
push
inc
sbb
rcrl
in
and
and
rolb
popa
les
inc
out
dec
push
mov
outsb
clc
inc
pop
jae
mov
repz
nop
subl
push
fisubrs
inc
std
outsb
lret
arpl
fsubp
inc
push
clc
sub
dec
incl
mov
aaa
sbb
sub
enter
mov
or
enter
inc
lods
call
or
or
movsb
addr16
aas
sahf
xlat
pusha
mov
fwait
popa
xchg
push
xchg
lods
mov
arpl
pop
das
jb
jmp
jmp
push
insl
negl
fpatan
mov
push
jl
subl
lods
pusha
mov
fbld
push
pop
push
ficoml
pusha
ljmp
pop
push
sub
fisubs
jne
mov
add
sbb
mov
insb
icebp
in
call
test
sbb
jno
dec
test
aad
mov
adc
push
cmp
push
addb
or
jae
mov
jno
rorb
inc
add
cmp
movsl
dec
mov
sub
jmp
add
add
das
sub
loopne
das
sbb
sub
xor
mov
cwtl
xchg
xchg
jge
jo
ror
jb
xchg
push
repz
lods
or
push
jnp
out
fwait
adc
xor
and
inc
inc
inc
je
or
push
mov
arpl
pop
dec
scas
sub
cmp
sub
adc
add
push
jnp
out
sub
imulb
mov
in
xchg
das
mov
fnstcw
mov
sahf
lcall
movl
in
pop
and
xchg
cli
inc
mov
push
mov
sub
and
jmp
push
ror
sbb
xchg
in
lods
pop
cld
aad
and
fs
or
and
adc
and
inc
mov
or
sub
gs
sub
enter
push
arpl
xor
movsl
lahf
outsb
sub
loop
pop
icebp
cs
movsb
outsl
scas
scas
xor
repnz
lock
inc
pop
out
pusha
clc
cmp
aas
jo
scas
scas
psrld
add
pop
loopne
call
ss
lret
push
or
lret
mov
or
insl
add
fs
test
mov
mov
loop
pop
ljmp
jecxz
js
mov
sub
add
and
out
clc
test
jno
out
inc
addr16
sub
mov
xor
fs
jg
pop
shl
mov
mov
or
test
cli
cmpsl
jp
push
je,pn
ja
inc
mov
cltd
repz
cmp
test
sbb
mov
pmullw
adc
mov
icebp
insb
out
fdivp
push
push
movsb
sbb
xchg
xor
test
dec
bound
push
push
stos
ljmp
repz
sbb
push
or
movsl
mov
in
gs
aaa
fs
mov
and
mov
pop
ficoml
xorl
add
xor
adc
jo
das
nop
ss
movsb
push
int
or
jge
loop
or
dec
pop
dec
or
mov
shrl
lds
add
sahf
test
vmread
jo
and
cmpsb
xchg
jo
insb
cmpsl
pop
scas
dec
sub
icebp
cmc
xor
xor
cmp
pop
pop
sbb
into
xorl
mov
call
addr16
jle
orb
mov
add
sbb
out
xchg
pusha
pop
popf
mov
stc
aas
out
popf
jae
jns
xor
jl
icebp
add
dec
out
mov
jnp
cmc
and
xchg
or
loope
xchg
adc
shlb
xor
cmpsb
mov
or
jae
leave
push
mov
pop
jg
xchg
ss
or
cmpsb
inc
mov
in
pushf
pop
inc
mov
mov
notl
jae
add
jl
jmp
dec
std
les
jmp
xor
pop
xchg
push
insl
aaa
fs
sbb
in
jae
sbb
out
cmp
cmp
imul
out
and
loop
mov
jae
mov
ret
sub
outsb
mov
clc
mov
jb
aaa
add
mov
fldcw
sbb
stc
into
sbb
or
mov
ret
popa
jbe
test
pusha
and
fisttps
or
and
dec
enter
into
dec
int
arpl
ret
rorl
jge
pop
leave
xchg
jp
dec
shrl
mov
sub
sbb
xchg
iret
push
jmp
cmc
push
mov
ret
cli
pushf
sbb
daa
adc
or
jle
jg
les
aaa
sub
mov
inc
pop
clc
sti
push
ret
push
mov
cwtl
sar
cs
into
pop
mov
add
jae
jno
sar
lds
lahf
rorl
bound
add
js
std
data16
aad
mov
pop
mov
pop
push
clc
add
bnd
subl
lahf
adc
jp
cmp
xlat
cwtl
pushf
lahf
in
pop
insl
aam
shrl
js
jnp
lea
pop
cmc
lahf
jle
cmp
and
insl
push
mov
sti
xchg
cwtl
xchg
test
jne
imul
stos
mov
mov
imul
fstl
loope
xor
mov
add
and
mov
stc
mov
and
aaa
fcoml
fcoms
add
movsb
or
js
inc
xlat
adc
jl
xchg
dec
ja
ror
stos
or
cmc
push
lea
mov
ljmp
rcr
inc
fsubrs
inc
scas
rcrl
pop
fbld
into
cli
lcall
lret
stos
fbstp
loopne
lds
or
mov
bound
pop
xor
lods
mov
loop
pop
adc
cmpsb
fs
xchg
lods
sub
mov
inc
loope
and
or
ds
pop
cwtl
push
adc
int
rorl
adc
incl
sub
lock
into
sub
addr16
cmp
ret
aad
call
nop
mov
add
or
jo
xor
repnz
sub
shlb
lea
and
mov
dec
in
sbb
fisubrl
cmp
sti
addr16
int3
cmp
mov
lea
sub
dec
lcall
enter
jl
in
shr
adc
and
cli
jnp
mov
pushf
mov
xor
out
pop
ljmp
and
mov
std
lret
sbb
add
jae
lret
aad
cmc
icebp
and
test
add
mov
adc
xor
in
jge
sti
sarb
xchg
sbb
movsl
movsb
lahf
in
add
push
add
xchg
and
dec
pop
mov
xchg
cmp
test
js
ret
ret
mov
stc
mov
and
mov
fndisi(8087
adc
xchg
data16
add
lods
pop
pop
adc
aaa
cs
out
cmp
movsl
mov
pop
dec
push
lcall
add
js
sub
in
jae
aad
gs
and
add
scas
xor
js
sahf
jmp
or
push
add
loopne
mov
in
in
mov
push
jns
jp
cltd
lods
add
negb
mov
aad
add
xor
dec
mov
ljmp
mov
inc
xchg
xor
mov
sahf
fwait
cmp
mov
inc
out
and
mov
cmp
sbb
test
nop
inc
cmpsl
lods
imul
lret
mov
jg
out
lret
cmp
mov
sub
cmp
popa
pusha
jo
andb
fisubl
jnp
inc
inc
outsl
and
cli
int3
xor
icebp
dec
inc
shrl
insb
mov
lcall
push
push
scas
lret
ja
imul
rcrb
sub
ret
jmp
jmp
adc
nop
testb
dec
outsb
idivb
mov
mov
mov
and
lcall
mov
movb
pop
imul
out
dec
jae
fwait
xchg
mov
lret
cwtl
rorb
out
mov
ret
stos
or
mov
fldenv
sahf
sar
clc
push
es
xor
idiv
push
fistpll
test
pop
test
pop
sbb
adc
jns
inc
or
jl
rorb
gs
cmp
mov
add
adc
sbb
push
mov
jnp
and
sahf
arpl
imul
mov
rclb
jge
dec
sub
jge
jae
sti
shrl
pop
jae
popf
out
push
test
xchg
push
mov
inc
test
clc
imul
lds
and
xor
dec
in
shl
push
add
pop
sbb
test
jmp
cmpsl
mov
push
jb
hlt
shl
cmp
scas
add
lods
xor
cltd
movsb
scas
mov
jg
sahf
xchg
fucom
push
adc
andl
push
xchg
dec
xchg
repz
mov
mov
rorl
ds
fiadds
push
imul
data16
inc
insb
sti
jecxz
sbbb
ret
iret
nop
int
jecxz
jns
or
notb
mov
or
mov
arpl
xor
and
mov
xchg
add
mov
lcall
mov
test
push
out
mov
popa
fwait
add
sub
xchg
aam
mov
jmp
xorb
push
jmp
icebp
es
imul
inc
hlt
cmp
mov
jns
outsb
loopne
add
xchg
inc
mov
xchg
lock
lods
add
movsl
mov
or
adc
in
add
inc
mov
jg
loop
push
cmp
adc
jns
mov
xchg
cmpb
ffree
ffree
mov
cmpsl
inc
movsl
cmp
and
pop
idiv
aaa
pop
xadd
cmp
sti
push
xchg
cmp
es
inc
pop
xor
mov
inc
jecxz
sub
xchg
test
inc
or
loop
mov
lcall
or
push
das
loopnew
sti
or
into
mov
mov
bnd
outsb
daa
jnp
cmp
sbb
jnp
jle
xchg
add
pop
iret
rcll
add
cmc
adc
inc
ss
adc
in
pop
push
jae
imul
in
mov
xchg
jle
outsb
xor
mov
stc
lods
movsb
pop
icebp
aas
xor
insw
cmpsb
addl
lods
mov
frstor
pop
and
cwtl
mov
mov
push
orl
int
jmp
push
jo
cs
cmpsl
jb
cmpsb
fiaddl
scas
testb
pop
flds
mov
dec
cmp
sub
ds
lds
ljmp
pop
sub
out
and
dec
sub
inc
or
scas
js
add
sub
and
in
pop
jb
lods
test
in
jecxz
jne
in
jle
sbb
adc
jns
ss
repz
push
fildl
clc
fstl
movsb
mov
cmp
and
add
xor
sub
adc
sahf
ss
stos
and
movsb
aam
fsubs
push
mov
movsb
and
mov
push
jns
std
ret
std
lock
jle
jns
mov
mov
mov
sti
jae
fcmove
xor
pushf
mov
test
pushf
mov
xchg
and
xchg
sbb
mov
outsl
xchg
pop
cmp
outsb
inc
and
mov
adc
xor
sbb
clc
mov
cli
cmp
xor
stc
mov
mov
xlat
int
outsl
popa
aas
cs
xor
push
jnp
sbb
mov
jnp
xchg
jp
jp
jno
scas
dec
shrb
sub
shll
movsb
aaa
cmp
mov
xor
inc
cmp
mov
sbb
pop
jnp
add
xorl
scas
xchg
fdivr
xor
xchg
mov
xchg
inc
push
xlat
mov
jecxz
loope
hlt
jl
jmp
xor
dec
dec
sahf
and
jo
lret
mov
cmp
xorl
lahf
adc
cmp
jbe
popa
sub
jecxz
addb
inc
sub
es
mov
cmp
cmpsb
lea
dec
fnsave
ficoml
inc
movsb
or
daa
jg
call
push
or
push
and
dec
sub
adc
push
inc
jle
addr16
inc
mov
pop
dec
pop
cmpsb
loope
aam
push
je
cmp
lcall
push
inc
movsb
je
push
jae
jns
cmp
out
adc
aad
ret
ja
stos
xlat
inc
bound
xchg
cmp
lret
lds
lahf
bound
jl
out
addr16
inc
sub
and
push
out
xchg
cli
push
adc
es
cmp
sbb
mov
or
ljmp
or
mov
mov
and
sub
sub
ret
push
aam
or
loopne
popa
xchg
std
sub
leave
repnz
loope
aas
test
aaa
shll
xor
mov
imul
push
pop
xchg
add
rep
fnstsw
pop
and
mov
xor
push
cpuid
les
out
ficompl
xor
xchg
adc
sub
iret
sarb
push
mov
xchg
mov
fwait
dec
inc
inc
enter
sub
jg
fnstsw
mov
pop
andb
cmp
mov
imul
xchg
dec
aas
int
jp
in
test
mov
jmp
add
fimull
repnz
add
push
jno
push
mov
fadds
jle
xor
inc
int
xor
or
adc
and
fcomip
fistl
and
sub
pusha
cmp
sub
fcmovnu
pop
sub
repnz
jno
xchg
push
or
imul
fmuls
jb
or
sbb
push
insl
add
jp
sub
and
ret
insl
icebp
ja
loopne
cltd
aas
sahf
xorl
in
orb
pop
ja
cmp
jp
daa
rcrl
leave
adcb
sbb
xor
std
pushl
mov
or
lret
imul
movsl
and
fcomp
rcrl
scas
or
stos
cwtl
aam
idivb
mov
pop
lds
aaa
mov
jb
or
inc
mov
fisubl
jae
lods
dec
aam
jae
addr16
mov
mov
pop
push
jl
nopl
roll
ficompl
fnstsw
je
add
add
push
jg
cmp
cmpsl
xchg
movsl
subb
inc
repnz
lret
sahf
subl
mov
lock
cltd
imul
xor
std
dec
adc
xor
lods
out
push
je
popf
and
dec
cmp
cmp
and
mov
mov
leave
push
bound
xlat
mov
mov
fucomp
sbb
jne
incl
sbb
call
and
movsb
xchg
daa
dec
rorb
das
idiv
clc
pop
mul
and
sti
jbe
adc
ret
add
cld
xor
add
test
sti
loope
push
fsubp
push
sub
and
mov
pop
cmp
negl
cwtl
xor
push
xor
fwait
jmp
mov
push
iret
daa
push
sub
add
adc
lds
pop
xor
out
jmp
outsl
jl
popf
incb
push
mov
int3
insl
pop
adc
in
out
pusha
jb
xor
mov
lret
pop
movsl
mov
daa
jle
add
or
cwtl
xchg
imul
sub
sahf
lea
in
xchg
push
scas
push
imul
mov
rclb
push
in
ja
pop
xchg
jg
xchg
jne
fnstenv
pushf
and
mov
cmp
cld
pop
xor
test
pop
lock
inc
mov
and
sahf
xor
popf
or
sub
xor
psubsw
push
sbb
jne
call
movsb
cmpsl
mov
push
jl
and
imul
adcl
insl
jae
and
and
enter
sbb
pusha
inc
cmp
arpl
xor
push
in
sbb
inc
xchg
popa
xor
outsb
xlat
sahf
xchg
jg
lret
push
mov
stos
jo
loop
push
stos
xor
cs
mov
add
sbb
ficoml
sbb
add
popa
cmpl
pop
mov
shlb
sub
or
sti
and
push
jmp
mov
mov
jae
lret
out
mov
jmp
das
inc
decl
daa
cmpsb
dec
cmp
loope
or
test
movsb
dec
push
fdivr
mov
mov
lret
xchg
sbb
lret
push
mov
add
inc
inc
xchg
adc
sti
pop
xor
and
or
dec
repnz
cmp
adc
cmp
out
jg
push
clc
aas
mov
and
cmp
fidivrs
daa
fwait
fs
aas
bound
lods
jno
and
mov
push
nop
xchg
add
sub
xchg
jno
push
ret
jne
pop
push
and
pushl
sub
mov
xchg
xchg
add
nop
inc
in
add
inc
test
inc
insl
shrb
xchg
mov
mov
mov
jl
jns
cmpsl
lret
or
mov
sbb
xor
inc
jl
push
in
ret
push
sbb
jg
enter
xchg
ds
pop
out
adc
dec
mov
test
test
jg
aad
lcall
aas
in
sub
xor
mov
out
dec
mov
lds
movsb
jecxz
filds
hlt
je
lock
cld
addl
fnstenv
rdtsc
mov
adc
or
in
inc
ja
pop
es
gs
fnsetpm(287
test
cmp
pop
sub
lahf
pop
mov
or
mov
push
fucomp
jmp
loopne
inc
adc
ds
in
jg
adc
es
mov
xlat
sbb
stos
repnz
pop
xor
pop
popa
pop
daa
inc
push
push
mov
sbb
add
jns
sub
mov
cld
mov
in
mov
adc
push
sub
cli
inc
outsb
sbb
or
mov
leave
sub
addr16
fists
push
mov
and
lahf
imul
jno
pop
lahf
sub
addr16
repz
jmp
sub
sub
sbb
ss
jo
movsl
dec
rorl
cmp
fcmovnb
mov
lret
incl
xlat
notb
jae
int3
lods
mov
aam
hlt
ficompl
mov
push
fdivrs
fdivs
or
inc
jecxz
dec
hlt
cmc
and
in
xor
mov
mov
jl
fbld
and
div
adc
xlat
push
shrb
lahf
out
lret
jecxz
imul
ficoms
mov
imul
pop
nop
je
aad
jae
sub
adc
cmp
decl
mov
jle
add
test
dec
icebp
push
jl
jmp
dec
push
sub
xchg
sbb
cmpb
add
pop
jge
xchg
int
xchg
sahf
pop
aam
mov
shr
or
clc
test
or
scas
xor
aad
mov
fidivl
mov
testb
add
mov
nop
pop
cmpsb
ficompl
clc
sbb
fnstsw
das
fwait
cmp
lret
xchg
pop
mov
test
jp
rolb
and
ret
stos
stos
jnp
or
pop
xchg
jb
dec
push
fcomps
cmpb
pop
cmp
or
add
push
xor
test
movsl
popf
mov
adc
iret
inc
fs
rorl
xor
cltd
sti
add
cli
pop
inc
js
cmp
mov
outsl
and
xlat
push
cmp
jbe
push
xor
movsb
add
scas
and
orb
out
add
inc
mov
imul
push
mov
dec
pop
test
pusha
pusha
adc
sub
inc
lods
aaa
iret
sahf
cld
stc
cwtl
cmpsl
push
loope
aas
nop
lock
adc
jne
push
ret
sub
mov
int3
into
leave
ljmp
dec
cmp
and
jae
dec
out
aaa
add
push
add
mov
sbb
xchg
push
les
mov
xorb
hlt
mov
lretw
push
orb
cmp
jecxz
inc
lcall
mov
jo
mov
xor
xchg
xchg
lcall
and
mov
jp
mov
cli
pop
push
aam
loope
pop
push
add
decb
pop
lea
gs
inc
ret
and
lret
out
popf
xor
lahf
push
dec
pop
pop
jb
sub
pop
and
fstp
enter
sub
nop
movsl
shlb
xorb
dec
mov
inc
pop
inc
addr16
in
fistpll
sbb
shr
jae
rorl
mov
aaa
stos
mov
int
mov
call
pop
sub
jge
addr16
mov
adc
and
mov
lret
xor
in
sbb
aad
hlt
pop
movsl
adc
push
mov
fldenv
xchg
inc
mov
and
stos
jle
insb
mov
pop
and
pushf
outsb
jle
cmc
jmp
out
out
sbb
cmpsl
push
popf
inc
out
mov
add
sub
mov
fsts
pop
mov
mov
xchg
mov
dec
scas
addb
mov
xor
sub
hlt
test
adc
fcoms
pop
xchg
imul
cs
out
lds
bound
push
mov
pop
jge
std
xor
pop
or
add
cmpsl
sub
mov
in
incb
inc
pop
out
call
inc
mov
pop
mov
imul
repnz
std
ds
or
enter
int3
stos
and
jae
testb
pop
mov
sbb
ficoml
push
int
lcall
aad
imul
jp
ficoml
fildll
pop
cwtl
out
movsl
std
mov
push
cmpsl
and
insl
mov
js
aas
fldenv
xor
popf
stc
cli
add
rorb
cmp
jno
mov
in
lds
repz
adc
push
call
sbb
lea
scas
in
dec
pop
sar
mov
cwtl
jne
sub
sub
mov
js
add
gs
pop
adc
xchg
aam
rorb
xor
pop
xchg
cli
fistpll
popf
in
dec
fadds
lahf
pushw
push
mov
sbb
fimull
add
mov
ret
aad
jle
sbb
out
data16
push
aam
sbb
sti
mov
jo
aas
icebp
cmp
or
mov
popf
pop
sbb
iret
fs
xchg
scas
cld
filds
or
push
or
popf
cmpsl
dec
or
xchg
lods
pop
dec
lods
jp
mov
push
and
cltd
xor
jl
popf
aad
into
das
es
adc
cmp
addr16
int
testb
test
push
mov
push
lods
fisttps
dec
xchg
add
in
push
inc
sub
fldl
mov
iret
add
push
js
cltd
pushf
inc
xchg
xor
cli
add
cld
ficompl
dec
mov
cmpsb
pop
mov
mov
subps
loopne
sbb
push
sarb
pop
call
or
add
sub
mov
sub
sub
dec
sub
dec
pop
retw
jecxz
outsb
xchg
popf
xor
add
notl
stos
out
push
push
outsb
into
sbb
sbb
push
add
fnsave
pop
sbb
push
or
test
roll
add
cmp
push
imul
test
mov
mov
bound
push
shll
pinsrw
dec
xor
loop
jb
pop
or
and
xor
dec
sub
scas
sbb
cmpsb
push
pop
add
das
repz
sbb
or
mov
dec
mov
rcr
cli
insl
xlat
movsb
les
xchg
mov
mov
sbb
xchg
in
mov
xor
xchg
call
aas
sti
push
cmpsl
sbb
jno
jle
or
subb
fcomip
mov
and
scas
or
cmp
mov
jp
inc
lods
aad
add
cmc
sbb
xchg
sarb
mov
add
adc
cmc
xor
dec
mov
adc
adc
push
xlat
jb
data16
pop
icebp
pop
push
loope
xlat
mov
mov
mov
xor
lds
adcb
pusha
cmpsb
push
sarb
push
imul
push
fwait
popf
fdivl
scas
aas
jmp
mov
adc
push
push
mov
dec
imul
and
cmp
imul
stos
sub
push
jle
add
out
shll
imul
jmp
xchg
mov
pop
push
lods
xor
xchg
pop
testl
mulb
xchg
loop
popf
mov
sbb
cmp
or
outsb
movsb
call
adc
push
adc
clc
jle
mov
jno
ret
stos
jp
inc
adc
lods
cmp
pop
jmp
repz
sub
inc
ds
jg
ja
ja
dec
add
xchg
adc
add
movsl
fxch
xor
inc
mov
clc
push
xor
xchg
xlat
jmp
and
jo
fwait
mov
add
fstl
mov
adc
xor
pop
xor
adc
sbb
cmp
jmp
mov
cmp
aaa
cli
push
fimull
xlat
jo
or
and
cmp
jnp
hlt
mov
pop
mov
jmp
fstl
jbe
push
inc
or
mov
inc
mov
adc
push
lods
in
cwtl
loopne
sbb
push
cmpsl
push
aam
sbb
sub
ret
out
rclb
outsb
cmp
hlt
pop
movsl
lods
out
pop
ljmp
add
push
ja
mov
sub
pop
mov
divb
xchg
mull
pop
insb
cmp
sar
ja
jne
mov
sbb
repnz
shlb
jl
xchg
aas
pop
inc
inc
and
mov
xabort
adc
xchg
dec
pop
sub
in
pop
add
cmpsl
push
mov
mov
movnti
bound
cltd
sub
adc
pusha
popf
nop
cwtl
data16
jb
pop
loop
lods
mov
cld
popa
shl
sbb
in
xchg
mov
xorl
sbb
in
outsb
and
xchg
sbb
mov
add
out
add
fmuls
jnp
xchg
inc
push
stos
jg
fcoml
stc
rorb
out
iret
js
jnp
popa
jno
xchg
fs
js
xchg
jo
clc
inc
leave
insb
xchg
fcmovnb
push
mov
rcrl
outsb
mov
mov
mov
mov
int
inc
scas
std
fidivl
adc
adcb
xorb
pop
jnp
adc
xor
cmp
adc
lods
mov
sub
push
xchg
push
mov
shrb
jno
lock
jnp
scas
inc
mov
mov
mov
push
insl
pushf
jno
dec
nop
aas
fcomps
lret
movsl
not
lods
nop
shlb
stc
ret
lea
mov
adc
push
out
cmpsl
lret
push
lahf
and
xchg
cmp
cmpsl
and
lcall
sbb
push
ret
mov
mov
inc
mov
add
pop
and
bswap
popl
mov
or
popa
sarl
cmpsb
xor
sub
pop
orl
fisubrs
int3
not
xchg
dec
dec
or
andb
out
call
int3
jecxz
cltd
dec
imul
jge
push
adc
and
outsl
pop
dec
or
sub
fwait
push
adc
pop
fs
int3
lret
test
cmp
imul
fildll
xor
roll
out
mov
rolb
mov
mov
push
jmp
fisubrl
scas
xchg
and
pop
inc
inc
insl
pusha
jb
je
stos
inc
or
push
inc
rcll
in
add
jge
cmp
add
and
fwait
ret
rcrl
int3
jle
rorl
xor
sub
jmp
jne
sti
insb
fisttpl
jnp,pn
imul
bswap
cmp
aaa
add
or
push
mov
aas
out
push
inc
mov
xchg
int
add
push
ss
or
aaa
add
andb
push
mov
and
jle
outsl
mov
ret
mov
and
or
jl
fisttpll
je
or
enter
shrb
mov
mov
add
push
ret
stos
popf
push
enter
fisttpl
pop
cltd
push
jge
push
icebp
mov
cli
daa
adc
add
lea
adc
nop
sub
jmp
insb
cmc
pop
iret
add
scas
pop
in
jp
mov
push
and
out
popa
xchg
dec
in
fistl
dec
mov
fstl
mov
add
rcrl
clc
adc
cmc
push
pop
add
mov
pop
cmpl
sbb
mov
adc
std
jecxz
jns
xchg
mov
arpl
out
sbb
push
adc
mov
adc
repz
shll
in
cmp
inc
add
jle
xchg
mov
orb
pop
shlb
inc
adc
das
scas
xchg
pop
cmp
mov
imul
sub
push
cmc
inc
cmp
push
sbb
add
subl
flds
or
into
jnp
in
icebp
pop
dec
ss
daa
sub
jg
cmp
inc
fists
xchg
rcll
pop
outsb
mov
sbb
scas
adc
mov
xor
fdivp
in
insl
pop
leave
mov
lods
inc
insl
jns
js
sub
incl
lcall
pushf
fisubl
out
fwait
popa
lock
mov
dec
dec
sahf
leave
push
cli
test
ja
xorps
mov
pop
and
push
mov
cli
imul
xor
pop
mov
cmp
push
mov
gs
inc
out
aad
sbb
ds
xchg
xchg
fbstp
fldt
adc
loope
pop
movsl
jae
fcoms
xchg
insb
pop
mov
mov
dec
je
out
fs
jmp
test
mov
mov
mov
je
inc
xor
mov
js
mov
inc
mov
roll
outsl
mov
xchg
xor
or
in
xchg
or
and
add
jb
add
jae
adc
jle
inc
subb
sbb
adc
ret
sbb
imul
pop
rcrb
mov
out
xchg
fwait
mov
adc
sub
sbb
jp
popa
out
loope
lea
into
or
sti
stos
loope
xor
dec
adc
fisubl
mov
pusha
imul
pop
fiaddl
rcll
lret
mov
push
sub
nop
adc
divl
icebp
aas
sahf
cmp
inc
jmp
fwait
xor
push
add
ljmp
test
push
data16
fisubrl
je
mov
jne
and
push
sbb
xor
test
imul
out
mov
leave
dec
jmp
push
fldcw
mov
test
adc
les
mov
adc
outsl
scas
push
ss
dec
mov
inc
jnp
inc
loop
mov
xor
lcall
cmp
jecxz
xor
dec
mov
jb
adc
fwait
cmpsl
inc
andb
imul
cmpps
add
push
cs
jno
ja
test
arpl
adc
adc
fdivs
cwtl
mov
or
or
dec
sbb
test
mov
push
repnz
jae
fnstenv
inc
fs
or
lcall
add
sahf
jb
adc
outsb
shrl
addr16
hlt
and
std
out
jg
insb
mov
xor
int
sub
push
popa
loop
or
bound
aas
dec
jg
or
aad
cmp
stc
inc
push
mov
pop
xor
push
movsb
adc
addr16
add
subl
jae
and
mov
in
sbb
leave
xor
sti
xor
inc
pop
dec
mov
pushf
stos
sub
pop
sub
mov
cmc
sub
leave
gs
movsl
js
xchg
in
mov
xor
mov
ret
jle
mov
sub
xor
inc
ret
mov
adcb
dec
scas
rcl
cmp
cmp
outsl
ret
and
cmpsl
cmc
cld
hlt
inc
jb
push
das
and
iret
add
xor
cmpsl
mov
rorb
xchg
jmp
rcrb
push
xorb
cmp
sbb
pushf
subl
fs
sub
int3
or
or
cmp
mov
mov
mov
cmp
mov
bound
and
cltd
incl
add
or
mov
std
dec
jns
clc
sub
mov
insl
push
xchg
in
scas
cmpsb
and
mov
mov
stc
ror
ljmp
icebp
mov
roll
push
jge
into
adc
push
xchg
xor
fldcw
sbb
clc
out
out
movsb
push
imulb
and
jp
push
pop
or
scas
hlt
ficoml
inc
push
cmp
and
imul
fwait
push
test
jns
pushf
mov
dec
scas
shrb
orb
xor
xchg
popf
add
in
add
insb
dec
addb
push
insl
and
or
mov
sub
sarb
sub
imul
loope
orb
lea
lea
adc
jle
cld
xchg
dec
sbb
sarl
add
or
call
mov
jg
js
and
mov
jae
sbb
inc
cmp
adc
outsb
call
mov
loopne
xchg
or
test
das
dec
fbld
push
sbb
xchg
sbb
out
test
je
rcll
icebp
xor
test
fdivp
push
mov
add
call
xorl
scas
sti
scas
scas
cmp
or
nop
and
aam
imul
adc
sbb
out
imul
jne
lahf
scas
dec
imull
je
push
movsb
xchg
lahf
lds
out
dec
imul
idivl
popf
test
xor
iret
loopne
pop
and
inc
lea
in
icebp
nop
sbb
or
ss
sti
sub
ds
out
mov
faddl
hlt
mov
data16
stos
out
dec
mov
xchg
or
adc
inc
incl
push
sbb
pop
rcl
loopne
jg
imul
imul
cmpsb
xchg
fbld
stc
jg
sub
xor
or
aas
addl
and
dec
xchg
dec
pop
mov
fistpll
pop
rcrb
add
outsb
shrb
jns
jp
stos
mov
jl
cmp
sub
fisubrl
xchg
mov
mov
popf
sbb
js
xchg
dec
inc
jno
jecxz
out
mov
sbb
jae
or
xchg
imulb
pop
int3
pop
sub
mov
add
jno
and
inc
mov
cmp
adc
negl
xor
pop
push
jmp
and
adc
cmp
mov
xor
mov
xchg
inc
aaa
pop
icebp
adcl
sbb
mov
roll
inc
int
pop
into
dec
mov
scas
sbb
pop
js
jmp
sbb
adc
bound
call
fisttps
dec
sahf
push
mov
shl
bswap
jo
rcrb
shll
jl
adc
mov
jae
adcl
adcb
fdivrl
fmull
jg
rorl
adc
cli
bound
mov
cmp
or
test
jbe
or
fildl
push
mov
jnp
xchg
xchg
ret
lds
nop
adc
das
sbb
xor
test
push
pop
xlat
dec
xlat
out
jnp
push
add
out
stos
push
dec
jmp
aas
rorb
sub
insb
inc
xchg
iret
mov
in
mov
jecxz
outsb
adc
dec
inc
lahf
jo
dec
call
clc
sub
aam
sbb
add
popa
sbb
cmp
or
aaa
fildl
in
dec
jns
sti
dec
pop
stos
adc
sub
cmpsl
cli
fwait
xchg
sbb
or
divb
sub
imul
sbb
cmp
stc
sbb
pop
adc
aam
sbb
add
mov
lds
stos
sub
mov
dec
sarb
mov
jecxz
and
data16
mov
hlt
int
cli
pop
pop
flds
xchg
adc
mov
hlt
cli
loopne
pop
mov
loop
xchg
mov
das
lret
jmp
fiadds
lods
jp
shll
cmpl
pop
mov
in
pop
adc
adc
mov
mov
pinsrw
push
mov
pop
mov
popa
push
or
insb
sbb
js
cmc
cmpl
stos
jnp
stos
sub
push
aam
ds
pop
sti
dec
fstl
lcall
ja
dec
lods
add
push
inc
sti
xor
repnz
jmp
stos
push
add
sub
adcb
push
dec
test
push
mov
lret
sbb
xor
fwait
sub
xchg
pop
shl
or
insl
push
nop
mov
stos
xchg
dec
xor
mov
adc
or
pop
mov
push
jl
imul
pop
push
lcall
test
mov
ds
sti
addr16
icebp
push
inc
mov
xor
sub
mov
xor
es
sub
data16
mov
pushf
jno
sub
ror
testb
sub
dec
pop
les
xor
imul
jae
aaa
add
fstl
les
in
shl
mov
inc
jg
cltd
daa
mov
jno
and
xlat
btr
mov
mov
cmp
push
repz
sahf
xchg
jp
iret
es
cwtl
mov
fcmovne
cmp
sub
bound
xchg
fisubl
fs
mov
jp
out
int
arpl
test
dec
call
push
mov
int3
data16
imul
das
std
imul
pop
sub
dec
pop
fnstenv
pop
leave
fcmovnu
out
or
pop
out
pusha
xor
sar
or
mov
test
orb
mov
sarl
fisubl
insl
sub
les
pop
mov
sub
adc
pop
out
sbb
shll
push
push
arpl
xchg
loopne
dec
fs
mov
xor
repnz
fsub
mov
sub
and
icebp
sub
mov
pushf
dec
les
test
lock
dec
lret
inc
cmpsb
stos
xchg
pop
ss
leave
dec
jno
push
xor
stc
fnstsw
mov
mov
and
out
inc
cmp
or
push
or
jl
fmul
fldcw
mov
push
fldenv
out
pop
add
push
xor
mov
dec
push
pop
and
push
xlat
lods
add
xchg
pusha
xchg
decl
inc
aad
jns
add
in
mulb
pop
push
cld
daa
gs
sbb
pop
mov
icebp
in
shll
add
lret
or
sbb
inc
mov
lcall
lods
nop
fwait
test
pushf
xor
rcr
pop
add
mov
jmp
mov
dec
cmp
mov
pop
cwtl
repz
shl
sbb
jl
dec
xchg
in
pop
add
sahf
nop
out
add
out
mov
cmpsl
sub
outsl
imul
rcrb
outsl
ret
pushf
sbb
lds
pop
mov
adc
and
xchg
mov
mov
lahf
sti
sub
cwtl
cmp
xchg
sub
fndisi(8087
jmp
pop
dec
mov
hlt
cmp
or
aam
cmp
and
sysret
and
fldcw
movsl
ss
xchg
shrl
xchg
dec
or
and
jo
adc
and
movsb
inc
cld
mov
pop
ljmp
add
in
loope
popf
dec
aaa
pusha
mov
fcoml
mov
sub
sub
repz
scas
movsl
xor
adc
ljmp
jo
xchg
lahf
cmpl
test
jle
and
nop
mov
xor
mov
jbe
dec
lret
mov
pusha
push
aaa
cmp
aaa
inc
lds
es
or
sahf
mov
cmp
int
pop
add
icebp
mov
jb
fwait
lcall
js
jae
repz
jle
nop
ret
mov
xchg
mov
ret
fisubl
xor
inc
mov
jns
pop
adc
adc
mov
repz
sbbl
addr16
test
and
dec
mov
mov
cld
jbe
pop
shl
sub
jo
dec
inc
clc
incb
popf
inc
xorb
xchg
or
subl
aaa
sub
fiaddl
imul
lds
cld
fcmovbe
cwtl
xchg
inc
cmpsb
subl
pop
shlb
add
pop
int3
repnz
push
popa
pop
shld
out
orl
ret
jb
push
ds
dec
outsb
test
int3
adc
pop
xor
dec
popa
mov
xchg
dec
xor
mov
sbb
jp
sub
sti
push
mov
repz
aaa
and
test
ds
cwtl
push
in
insl
sub
rolb
cmp
out
jge
mov
outsb
lock
jbe
sub
ds
daa
dec
bound
je
test
dec
into
stos
and
lods
xlat
pop
and
sub
in
fidivs
sub
in
jp
cmp
aaa
sahf
in
xchg
xor
xchg
jns
stos
push
fisttpll
push
push
inc
pop
lret
cmp
mov
push
and
gs
dec
mov
mov
add
pop
lock
data16
pop
and
mov
aaa
inc
popa
and
mov
insl
sbb
lret
jecxz
xor
ljmp
int
push
sub
or
js
pop
mov
mov
adc
mov
push
jne
mov
pop
adc
push
loopne
cmp
leave
lret
sub
mov
mov
imul
mov
jno
sbb
outsb
pop
adc
out
xor
imul
mov
sbbl
ja,pt
mov
sub
inc
sbb
repz
cmc
aam
call
xorl
clc
inc
clc
lret
dec
adc
adc
aaa
dec
outsl
sbb
sub
mov
dec
cmpsl
mov
or
fscale
pop
push
push
push
insl
xlat
or
adc
mov
mov
adc
mov
outsl
inc
lcall
jns
outsl
sub
mov
pop
inc
dec
mov
dec
xchg
test
ja
lea
ss
adc
and
fcomps
mov
lcall
mov
pop
dec
dec
xor
push
insb
pop
mov
mov
jp
lods
xor
insb
lcall
cmpsb
fwait
xchg
inc
push
icebp
in
rol
sbb
movsl
xor
mov
sbb
push
xor
movsb
inc
xchg
pop
lret
pop
add
sbb
adc
xchg
insb
les
inc
mov
cmc
sbb
xor
push
aam
add
inc
mov
dec
xchg
cmpsl
and
xor
pop
dec
pop
jecxz
jne
stos
rclb
ds
mov
inc
pop
or
out
pop
es
or
cmp
das
mov
mov
xor
cmp
xchg
xchg
jno
jp
and
mov
push
or
fs
mov
inc
cli
outsb
pushf
inc
xor
shrb
out
addr16
sub
fs
dec
ja
pop
fwait
inc
fwait
and
xor
in
cmp
mov
sub
or
pop
mov
mov
cmc
fisubs
jmp
outsb
pop
enter
adc
push
jecxz
mov
mov
out
xor
loopne
mov
cmp
sbb
shl
clc
pop
jle
leave
adc
dec
mov
outsb
call
xchg
mov
xor
imull
pusha
cmpsl
sar
push
dec
insl
js
negb
sarl
jp
fmuls
ljmp
fstpt
adc
xchg
cmp
imul
dec
push
cmpsb
mov
enter
movsl
mov
les
ja
cmpsl
arpl
push
push
push
sar
mov
aas
fs
test
adc
jl
dec
cwtl
push
fiaddl
cmp
lret
adc
test
adcl
mov
lods
push
jnp
adc
js
pop
and
adc
cmpsl
fwait
testl
jnp
imul
ret
aas
adc
pop
xchg
divl
jb
pop
fcoml
pop
notb
bound
sbb
inc
ror
jp
xor
mov
xor
cmp
mov
stos
ficompl
add
xchg
xor
divb
aad
imul
dec
iret
add
ss
cltd
add
sbb
test
outsl
pop
les
mov
addr16
or
cs
dec
or
outsl
xor
sub
dec
pop
enter
mov
and
xorl
and
xlat
arpl
push
aad
cli
int3
sbb
cmp
jl
jae
xor
adc
sub
movsb
dec
inc
sbb
mov
repnz
mov
jmp
mov
sbb
add
shll
nop
fs
xchg
push
jecxz
leave
mov
divl
fmuls
in
xor
mov
test
in
incl
fldenv
in
xor
add
jp
call
mov
call
mov
sub
push
mov
lcall
mov
mov
jae
mov
dec
and
out
shll
and
xchg
fistl
fwait
insb
cltd
fwait
dec
leave
rcrb
adc
push
scas
sub
and
lds
dec
jbe
sbb
pop
movsl
mull
xchg
rorb
ficoms
push
xchg
xchg
outsb
sub
inc
ret
xchg
test
clc
sahf
or
dec
cmpsl
cmpsl
fsubrs
xor
and
mov
xchg
mov
test
jae
add
jmp
loopne
adc
sbb
in
subb
jae
pusha
call
xchg
xchg
lcall
sbb
addr16
or
or
jp
lock
xchg
int
jge
aam
jbe
and
push
add
out
roll
push
pop
and
iret
mov
sti
das
stc
es
mov
imul
inc
mov
fadds
test
push
sbb
cmp
sub
es
rclb
gs
sub
shr
xchg
fadds
sub
movsb
xorl
pop
pop
adc
xlat
ret
dec
adc
js
clc
orb
push
or
imul
or
into
xor
push
loop
popa
add
jnp
iret
add
lock
fisubl
dec
cmp
sti
mov
shlb
jns
pop
icebp
idivl
add
cs
fchs
cmp
or
and
sbb
fstps
mov
xchg
outsl
cltd
jb
in
aad
int3
fisttpll
repnz
adc
push
sti
and
and
test
push
inc
mov
imul
out
sub
mov
stos
nop
rcll
int3
adc
xor
repz
push
cmp
aam
aad
push
das
xchg
popa
mov
call
stos
mov
loopne
fucomip
jb
sbb
push
mov
xor
test
insl
cmpsb
fcoml
push
push
jno
addr16
sub
sbb
ds
lock
inc
jne
arpl
sub
cld
aam
test
mov
inc
dec
pop
sub
sub
mov
push
fimull
add
xchg
or
outsl
hlt
or
sub
dec
lret
jg
sbb
clc
out
les
in
mov
dec
sub
dec
push
pop
shlb
mulb
ss
jle
pusha
xor
add
adc
mov
lods
mov
clc
inc
enter
mov
shll
lds
dec
les
scas
jnp
jle
popa
call
pop
add
jl
arpl
lods
iret
push
fldenv
or
addr16
xchg
mov
mov
xchg
push
mov
rcl
cmp
loopne
add
ficoml
lods
insl
insl
add
xor
call
loopne
pop
xchg
sub
lds
js,pn
lds
and
std
push
test
inc
aad
sti
fwait
stc
lret
cmc
test
jl
adc
jne
hlt
mov
ljmp
mov
push
jmp
mov
dec
lea
das
cli
mov
jbe
push
mov
mov
loop
out
mov
mov
jae
and
adc
adc
mov
lret
pop
mov
popf
jns
mov
fldt
arpl
dec
lret
pusha
jae
ret
aad
add
sbb
mov
jecxz
lock
call
adc
push
stc
out
stos
jae
icebp
or
loop
imul
aas
mov
mov
je
int3
fs
les
jmp
movsl
mov
out
xor
mov
mov
jg
pavgb
xor
xchg
dec
push
cmp
jg
insb
lea
adc
xchg
fs
pop
leave
mov
mov
xchg
adc
scas
push
out
dec
dec
push
xor
push
push
addr16
repnz
ret
sahf
jnp
das
das
jns
xchg
push
cmp
lock
sub
sub
sbb
xchg
add
ds
in
outsb
fildl
test
jns
jmp
cld
adc
and
jmp
xchg
add
sarl
or
lahf
xchg
popa
push
push
subb
jmp
dec
aad
int3
movsl
lock
dec
ss
mov
jle
cmp
cwtl
sti
xchg
nop
lcall
lds
iret
adc
add
sbb
ljmp
or
pop
test
int
stc
sti
call
xchg
adc
sbb
cmp
jnp
add
sahf
jne
jo
adc
push
pop
sbb
pushf
push
pop
shl
out
jb
xlat
xor
test
mov
sbb
rcrb
rcrb
cmp
out
jns
mov
clc
jl
pop
orb
cmp
inc
incb
lret
or
pop
pop
dec
addl
mov
or
push
js
pop
bound
pop
cmpsb
imul
mov
xchg
movsb
fdivs
and
ficoml
out
jl
jo
add
dec
cmc
jecxz
dec
lret
shrl
cmpsl
lea
lds
inc
mov
mov
cmp
movsl
mov
inc
add
mov
push
dec
cltd
mov
out
xchg
cmpsb
inc
fdivrl
xchg
test
sbb
dec
das
in
bound
xorb
xor
xor
mov
gs
daa
xchg
mov
stos
roll
insb
dec
dec
out
ret
add
or
ret
inc
andl
jo
pop
adc
repz
xor
mov
fldenv
adc
push
pop
or
ljmp
fidivrl
je
xlat
leave
insb
mov
push
lcall
shlb
xchg
call
jle
orb
shl
insb
add
icebp
aam
pushf
inc
pop
out
mov
outsl
ss
aaa
inc
sbbl
mov
fimull
imul
std
stos
lods
push
dec
add
adc
fisttpl
repz
lea
pop
inc
xchg
xchg
jecxz
pop
dec
adc
adc
fs
pop
mov
sbb
jecxz
sahf
jne
sbb
cli
fstpt
mov
mov
mov
ds
sub
in
cmpsb
xchg
lcall
add
scas
pop
push
insl
roll
jae
test
mov
fs
cmp
pop
data16
hlt
and
rcll
lcall
stos
aaa
add
mov
mov
pop
call
jns
and
or
fwait
mov
clc
sbb
stc
adc
loop
rcrb
jg
xor
movsb
lock
jb
pop
cmp
loope
pop
fwait
jle
in
and
xor
cmc
cs
clc
in
add
cmp
jmp
outsb
adc
dec
jmp
pop
hlt
nop
cwtl
pop
dec
in
or
icebp
fcomi
or
daa
sti
les
adcb
call
add
adc
mov
xchg
pop
enter
shlb
movsb
xchg
rcll
cmp
cmp
dec
cltd
xchg
cmp
sbb
pushl
scas
xchg
sub
out
imul
pushf
outsb
mov
sbb
in
jb
xchg
out
cmp
xor
dec
sub
adc
xor
jno
dec
ljmp
cmp
and
insb
mov
int3
lret
lahf
jg
and
stos
mov
mov
jne
insb
les
ljmp
and
enter
rcr
shll
subb
add
and
or
mov
arpl
or
mov
jge
adc
mov
inc
loope
xchg
das
mov
xor
es
test
or
mov
fwait
push
adc
mov
fwait
bound
aam
insb
cmp
xchg
push
mov
pop
pop
ss
jp
js
inc
popa
pop
int3
mov
xchg
lock
xchg
mov
rol
adcb
add
push
cmp
test
xchg
in
push
fstpl
mov
pop
imul
mov
inc
mov
add
and
xchg
movsb
add
and
inc
mov
cmpsb
dec
cmp
mov
jp
data16
mov
outsb
shll
mov
mov
adcb
xlat
mov
adcb
push
mov
push
sbb
xchg
inc
add
fsincos
in
xchg
mov
stc
mov
fsubs
ja
cwtl
ss
mov
mov
test
loopne
adc
call
mov
dec
xchg
jnp
rcll
pop
clc
pop
push
pop
push
xchg
push
inc
fistpll
sub
sbb
and
fwait
adc
jl
dec
cmp
iret
pop
fs
rolb
sbb
jne
jb
test
xor
push
mov
iret
jg
mov
test
add
push
mov
icebp
cmp
dec
sub
out
dec
and
jle
lahf
shll
lret
xchg
adc
mov
jg
lods
lret
gs
imul
lret
mov
pop
in
pushf
mov
ret
jo
sub
nop
cmp
test
jns
in
mov
pop
dec
mov
scas
pop
pop
push
mov
xchg
jge
xor
insl
lods
rcrb
inc
mov
jo
push
shrb
nop
dec
movsb
sbb
dec
jle
and
jns
and
mov
stos
cmp
dec
iret
loope
shl
jae
adc
inc
inc
les
xor
sub
pop
rol
inc
dec
sbb
rorb
and
test
mov
xor
test
cs
stc
xchg
test
mov
fs
icebp
pop
dec
mov
orl
les
loope
and
sub
daa
cs
cs
push
xchg
mov
or
add
push
lret
in
addr16
nop
insb
out
jmp
arpl
lret
inc
xchg
push
adc
cld
adc
fsubl
push
xchg
inc
out
aam
cmp
add
arpl
andl
loopne
xchg
sub
and
jnp
rorb
adc
add
sbb
test
xchg
jecxz
add
test
xchg
scas
data16
jae
dec
sbb
test
xchg
aas
gs
andl
hlt
data16
cmpsb
push
addr16
lahf
add
movsb
push
pushf
test
mov
cltd
enter
cmpsl
repnz
mov
aaa
dec
out
pop
popf
fsubl
jb
movsl
mov
sbb
clc
jne
inc
in
pop
jne
and
adc
pushf
sbb
pop
or
pop
aaa
dec
sar
sahf
mov
mov
daa
call
je
sbb
in
xchg
xor
jp
lods
sub
push
dec
shll
scas
loopne
orl
or
decl
fdivrl
call
pop
mov
cmpsb
add
icebp
pushf
ljmp
sbb
and
cmc
push
shll
add
movsb
cmpsl
mov
inc
mov
sbb
or
jbe
in
pop
les
jl
pop
insl
and
ror
mov
adc
inc
or
out
arpl
mov
adc
push
mov
movsb
jmp
enter
lods
add
ret
pop
pop
add
pop
ja
or
aad
test
fsubl
test
mov
test
lods
or
scas
adc
xor
loopne
adc
jle
sub
rcrl
xchg
std
shll
imul
push
mov
xor
fdivl
or
mov
aad
cli
pusha
and
cmp
xchg
hlt
cmpb
lds
in
inc
repnz
add
stos
or
jno
adcb
adc
add
test
xlat
xchg
cltd
lods
nop
lock
shlb
jns
or
das
mov
or
imul
loop
sbb
xlat
push
out
xchg
out
clc
test
inc
les
shlb
fmull
mov
fmuls
jo
and
shl
xchg
es
in
je
inc
sub
jo
sbb
insb
ds
adc
sbb
xor
aaa
pop
add
mov
adcl
repnz
pusha
mov
insl
fnstsw
sbb
push
subb
add
jo
pusha
xor
or
outsb
das
aad
insl
sbb
pop
in
cli
push
cld
mov
and
cmpsl
inc
jno
mov
test
loopne
bnd
in
jb
jecxz
aam
add
pop
frstor
push
cs
in
sub
in
mov
push
mov
in
lea
fs
cmp
aaa
sti
dec
icebp
xor
dec
cmpsb
adc
addr16
adc
xchg
add
mov
sub
mov
test
mov
insl
push
mov
shlb
pop
cli
sub
xchg
adc
cmp
push
push
inc
movsl
lods
sahf
inc
inc
mov
mov
mov
dec
aad
mull
mov
cmp
xor
add
test
jle
lret
sub
and
mov
nop
xor
jge
or
inc
sbb
sbb
sub
adc
mov
pop
fsubs
pop
cwtl
pop
xchg
dec
mov
inc
jl
movsl
jne
out
stos
enter
mov
add
imul
sub
fcmovnb
sub
cs
movsb
test
aaa
lock
or
add
pop
push
mov
lret
push
push
mov
fldt
adc
or
and
sbb
mov
loop
test
adc
adc
adcb
or
xchg
jl
jecxz
push
add
out
jbe
xor
or
lds
and
adc
inc
mov
xor
bound
jmp
inc
fstpt
mov
pop
les
pop
inc
add
inc
fnstsw
mov
push
jns
mov
loope
dec
call
or
faddl
idivl
sbb
sbb
push
popa
mov
adc
xchg
shlb
mov
ljmp
popf
mov
push
das
repnz
cmp
jecxz
or
mov
lret
lds
mov
cmp
stc
mov
stos
mov
cmp
addr16
dec
dec
mov
out
pop
push
adc
je
dec
ret
imul
adc
jb
adc
lcall
pop
dec
add
jp
push
jnp
and
xor
iret
cmc
mov
xchg
aad
push
adc
clc
sub
dec
add
add
mov
sub
cmpsb
push
ficoms
scas
call
test
push
insb
and
pop
bound
daa
pushf
aaa
or
call
sub
dec
mov
cs
jbe
lock
testb
xor
add
mov
daa
mov
mov
sub
mov
sti
ljmp
adc
adc
xor
push
and
pop
push
xchg
jne
or
ss
out
je
xor
inc
imul
nop
and
xor
decb
push
xchg
push
repnz
push
popa
sbb
cmp
mov
popa
add
push
jp
cld
rolb
cld
scas
sbb
add
xchg
jecxz
shrb
loop
lret
dec
xor
cmp
stos
or
leave
and
pop
push
mov
sbb
cltd
sbb
cmp
test
repnz
repz
xor
fcoms
xchg
lahf
popf
and
insb
inc
xor
xor
mov
repz
pop
pop
ds
sbb
jne
sti
mov
jmp
or
or
outsl
fdivrs
movsb
outsl
imul
scas
sbb
cli
mov
inc
cmp
clc
and
push
enter
sbb
jmp
clc
sub
push
xchg
xchg
jae
lret
sbb
mov
mov
stos
in
xabort
dec
push
push
ret
mov
xchg
cmp
mov
jg
inc
pop
and
in
or
push
xor
aaa
cltd
push
bound
mov
fsubs
push
fstpt
int
push
clc
sbb
sbb
notb
insl
je
aam
inc
xor
mov
fcom
repz
ret
pop
dec
mov
pop
cmp
sub
or
and
jecxz
add
pop
sbb
pop
jae
and
jl
pop
gs
or
push
mov
outsl
add
jg
hlt
stc
and
mov
jp
pop
sub
leave
fists
pushf
pop
adc
mov
mov
adc
mulb
pushf
aam
cmp
sti
iret
dec
out
add
sub
cmc
pusha
mov
pop
outsb
cmpsb
stc
push
and
int3
pushf
mov
inc
pusha
push
jne
mov
adc
push
lret
movsb
sub
xor
rolb
push
rcrb
xor
or
scas
mov
decb
sub
std
sbb
outsl
adc
fbstp
push
insb
nop
and
or
mov
fisubrl
cmc
sub
shlb
jo
sub
sub
pop
mov
xor
dec
inc
push
mov
push
cmc
dec
fwait
mov
call
movsbl
popa
mov
out
cmp
mov
xchg
xchg
repnz
iret
or
or
pop
xchg
aas
gs
xchg
sbb
rcll
js
mov
cld
add
pop
add
imul
fisubl
sbb
and
push
dec
mov
sub
sub
mov
push
test
push
inc
cltd
xchg
lods
nop
inc
js
push
stos
ss
ror
xor
sub
cmpsb
lods
push
xchg
pop
and
add
and
cmpsl
out
jae
cmpsl
xchg
je
clc
insb
ss
cmpsb
xor
mov
repnz
lea
enter
subl
in
rcrb
add
push
sahf
sub
xchg
add
pop
int
clc
mov
adc
daa
aas
sub
mov
or
je
inc
jnp
inc
inc
dec
mov
into
stos
divl
push
add
adcl
int
inc
pop
nop
jnp
lods
mov
imul
pop
push
pop
stos
jmp
lds
out
cs
out
inc
shll
je
lret
or
mov
clc
mov
and
in
or
mov
aaa
cltd
mov
dec
outsb
xchg
jl
cmp
pusha
mov
adc
push
add
outsl
jo
xor
aam
inc
pop
iret
out
inc
push
add
and
jne
cmpsb
push
movsl
outsb
or
aas
adc
loopne
sbb
dec
lahf
jae
cmpsb
add
pop
std
lds
sbbl
add
ljmp
pop
or
addr16
sbb
gs
cmp
mov
mov
mov
jg
loopne
and
add
in
mov
cld
xor
inc
push
push
shr
adc
xchg
fdiv
xchg
push
stc
mov
data16
and
popf
mov
xor
pop
pop
sub
xchg
fs
mov
inc
lahf
xor
arpl
mov
movsl
sbb
pop
dec
inc
xor
pop
sub
add
mov
lcall
or
mov
adcl
stos
jle
xor
fimuls
xchg
cs
clc
and
in
dec
jecxz
subb
stc
dec
fs
adc
pop
lret
jg
cmp
pop
xor
xchg
jg
adc
xchg
dec
mov
cli
add
xchg
mov
sub
in
dec
or
adc
std
xchg
mov
pop
pusha
ret
xchg
or
ss
inc
cmpl
cmp
outsb
cwtl
fisttpl
xlat
jo
fwait
dec
sub
add
ret
jecxz
push
icebp
push
mov
pop
int
pusha
scas
xchg
scas
cmp
sbb
movsl
xchg
or
mov
addr16
daa
jnp
data16
cltd
insb
mov
push
pop
iret
or
add
and
pop
das
fdivrp
push
hlt
and
pop
or
aad
push
pop
pop
xchg
clc
mov
add
hlt
popa
stos
mov
xchg
jp
xor
shl
inc
into
mov
mov
outsl
push
xchg
testb
ds
pop
add
mov
aas
add
add
xchg
push
cli
push
mov
pop
xlat
inc
push
mov
mov
sub
out
mov
roll
jl
imul
or
stos
loopne
cmpsl
mov
pop
movsb
inc
arpl
pop
idivb
lock
pop
and
aam
frstor
jae
les
pop
adc
stc
push
ret
mov
mov
mov
push
test
add
pusha
pop
push
ja
fcmovnu
jmp
negl
push
jne
mov
mov
or
mov
mov
mov
mov
repz
lahf
frstor
aas
add
and
test
mov
xor
sub
test
xchg
sbb
dec
jb
cltd
stos
sarb
dec
loopne
xchg
inc
loope
or
loopne
fisubrs
fildl
mov
ret
adc
repz
jp
pop
ret
sbb
lea
inc
push
mov
or
mov
sub
mov
inc
jnp
jle
xchg
ds
sbb
dec
jne
jne
in
xchg
xor
std
mov
or
sbb
cmpsb
push
call
mov
xor
sbb
sahf
test
iret
push
lcall
inc
sbb
neg
shll
in
pop
out
add
inc
xchg
xchg
dec
popa
mov
les
das
fcmove
test
mov
lods
pop
enter
lret
mov
jns
sbb
stos
inc
dec
and
add
sub
daa
movsl
sub
scas
add
push
pushf
pop
fcmovne
add
mov
pop
andl
mov
sahf
push
inc
jnp
mov
add
or
cltd
adc
fs
adc
out
ret
cmp
in
sub
insb
cmp
sub
ss
in
scas
aas
mov
fcoms
pop
out
dec
add
dec
ss
add
add
or
cmp
jecxz
mov
cwtl
or
xchg
cli
jae
xchg
push
fcoms
rclb
call
das
fstl
sti
mov
and
pushf
push
mov
jp
add
inc
jle
sti
fistl
sbb
xchg
mov
sub
iret
push
inc
push
inc
test
arpl
jmp
cmp
aaa
cmpl
pop
dec
adcl
inc
or
mov
cmp
xchg
data16
push
xor
addr16
xlat
divb
or
add
mov
aam
mov
je
int
inc
mov
ljmp
ljmp
or
int
enter
cltd
jb
add
mov
adc
jge
and
push
dec
xor
or
mov
push
adc
test
incl
sti
dec
inc
or
icebp
adc
fistps
adc
insb
test
push
addr16
es
movsb
push
jae
push
into
jle
pop
pop
inc
mov
inc
std
mov
mov
sbb
imul
xor
push
cmp
shll
ds
nop
fucom
and
jnp
and
mov
inc
pop
push
pop
xor
xlat
shl
fiadds
xlat
lods
jne
pop
movsb
aas
xchg
or
jb
mov
dec
cs
imul
stos
clc
stc
push
xor
dec
test
nop
in
mov
push
cmp
sti
and
pop
sarl
dec
dec
out
jmp
leave
mov
xchg
mov
stos
jb
add
mov
jno
push
lret
jl
pop
das
loop
cli
enter
fldt
push
jg
fs
in
mov
ds
jle
jge
pushl
fldcw
dec
push
movsl
insl
sub
rcrl
mov
ss
xor
adc
ret
xchg
rcrb
ror
ret
inc
ds
pop
sub
pop
int
inc
sbb
orb
mov
stos
popa
inc
sarb
fists
sbb
adc
fs
inc
pop
xchg
inc
cmp
inc
sub
int3
scas
mov
insb
mov
pop
lahf
and
cmp
cmp
out
rcrl
in
adc
aam
jo
lods
jl
ja
push
xor
insb
je
lods
in
push
jge
lods
jecxz
pop
and
in
fs
cmpsl
nop
pop
mov
push
es
xchg
inc
sub
je
sub
pop
xchg
fisttps
loope
movsl
aaa
pop
ljmp
dec
sarb
cld
and
lods
test
push
les
out
cmp
and
xchg
in
and
pop
mov
and
icebp
mov
test
xchg
dec
out
push
mov
cmc
adc
and
push
out
es
scas
gs
and
arpl
dec
inc
pop
cmp
inc
jno
out
aad
imul
das
cmp
adcb
add
in
ds
mov
mov
ljmp
push
adc
test
pop
scas
lahf
pop
adc
roll
mov
aam
adc
data16
cmp
mov
jno
pop
mov
insb
int
iret
or
jge
js
push
div
jle
loopne
jmp
scas
dec
xchg
dec
das
mov
mov
xchg
imul
or
sar
fwait
pop
aad
mov
lret
push
fstpt
fwait
push
sub
mov
push
ret
mov
mov
sub
lcall
test
adc
lret
lds
inc
or
daa
add
add
sahf
je
rorb
bound
add
out
int3
aam
pop
xchg
loope
push
pusha
inc
shll
mov
neg
clc
or
push
mov
add
bound
gs
movsb
jmp
mov
jge
xchg
dec
and
gs
es
cld
add
filds
mov
sub
sahf
cmp
into
icebp
mov
into
loop
int3
loopne
mov
into
cli
in
fmuls
fdivs
inc
pop
mov
dec
cmp
xor
lea
insl
fildl
rolb
dec
je
cmp
les
aas
mov
inc
fdivrl
add
jbe
lret
pop
and
inc
mov
les
push
and
mov
movsb
mov
iret
mov
dec
sbb
jnp
and
test
into
xchg
mov
gs
pop
mov
lret
imul
pop
push
inc
test
shll
sub
test
int
imul
loop
sub
cmp
iret
cmpsb
imul
adc
cmpsb
push
fnstsw
adc
inc
out
outsl
sub
or
popf
sahf
jge
gs
cmpsl
add
cmp
cmp
mov
inc
dec
addl
or
pop
cmp
jg
sarb
stos
fdiv
dec
add
fisubl
cmp
or
jns
mov
push
pop
mov
inc
push
mov
xor
fstpl
mov
stos
dec
decb
push
mov
and
mov
jle
mov
out
in
sub
inc
xlat
mov
popa
add
imul
ror
pushf
push
sarb
dec
cmp
shr
idivb
sbb
push
mov
and
xchg
push
outsb
lea
dec
xor
js
std
fdivrp
push
add
xchg
mov
mov
es
popf
shll
ljmp
lret
adc
int3
push
cs
add
aam
movq
push
cs
decb
movsl
jnp
outsb
js
jg
mov
pop
jb
mov
mov
adcb
pop
aaa
jp
outsb
int
mov
decl
movsl
sarb
or
sub
cmp
ss
jmp
scas
push
add
scas
dec
xchg
loope
pop
dec
scas
jo
xor
push
fmull
xlat
jnp
push
and
xor
xor
fsubs
mov
adc
inc
xchg
mov
movsb
sbb
push
xchg
mov
adc
lock
fldcw
mov
xor
in
pop
daa
or
dec
test
fisttpl
dec
mov
push
scas
push
decb
mov
es
and
dec
mov
mov
push
or
jg
jb
cwtl
mov
pusha
jg
js
jno
das
xchg
pop
sbb
inc
stc
pop
lods
fwait
jge
cmpsl
add
loope
cmp
outsb
or
push
fcomi
push
das
mov
rol
inc
insb
adc
aaa
dec
add
or
dec
mov
pop
add
cs
and
mov
sbb
js
mov
das
repnz
jno
jl
mov
push
jno
scas
xor
jg
xor
sbb
out
inc
mov
popl
xchg
call
jo
and
ss
bound
loope
mov
cmpsb
sub
test
push
icebp
pushf
scas
push
dec
icebp
sbb
insl
jecxz
sbb
jp
xor
mov
xchg
lods
aad
push
lret
ljmp
sub
scas
push
in
sbb
sub
inc
xchg
mov
push
shrb
loopne
pop
and
cli
inc
mov
out
or
outsl
out
xchg
sbb
push
push
outsb
mov
cmp
xchg
or
arpl
push
push
mov
adc
push
ret
movsl
pusha
daa
pop
gs
push
xor
dec
imull
mov
repz
test
xlat
je
xchg
repnz
bound
cmp
dec
mov
mov
and
loopne
fdivrs
jno
loopne
scas
pop
out
movb
xchg
or
test
pcmpgtw
or
lret
and
dec
imul
fdivr
cwtl
shll
sbb
scas
pop
inc
nop
or
jle
loope
push
mov
bound
cmpsb
xor
push
jecxz
mov
push
pop
mov
fs
sahf
jl
xchg
jl
cmpsl
pop
in
cmpsl
mov
or
and
mov
push
pop
sub
mov
movsb
xor
lahf
xorb
pop
inc
mov
bound
lahf
insl
dec
and
lock
push
btc
push
enter
aam
bound
incl
inc
jecxz
xchg
daa
fildll
fucomip
sub
rcll
and
and
cwtl
jl
stos
mov
dec
push
iret
sub
pop
lock
stos
inc
inc
push
ss
sti
cmc
pop
jne
cli
pop
xor
cmp
clc
sti
fsubrs
hlt
xchg
jmp
shlb
outsb
xchg
cld
cmpb
iret
rclb
and
xchg
leave
loopne
pop
faddl
sbb
xlat
or
mov
xor
cmp
call
loop
inc
lods
xchg
int3
pop
cmpsb
aam
rcr
dec
fidivs
pop
mov
and
gs
arpl
mov
mov
lea
cltd
mov
xor
mov
es
jle
sbb
jmp
into
int
xor
hlt
popa
imul
sbb
jb
cmp
ret
or
cltd
popf
dec
stos
add
shll
add
repnz
xchg
pop
insl
inc
mov
mov
mov
cmp
insb
xchg
push
xadd
add
push
mov
xchg
fwait
mov
test
xchg
fldt
cmp
push
inc
ds
rolb
xchg
lret
xor
orb
sub
dec
cld
ja
shrd
push
lcall
xor
jp
out
push
mov
fstpl
mov
cltd
jns
cmp
add
or
lock
mov
mov
adc
negb
popf
inc
ret
paddd
adc
andb
push
mov
push
aaa
xor
and
xchg
cmp
sbb
mov
fisubs
sbb
xchg
daa
cmpsb
sub
mov
mov
or
mov
xor
sbb
jnp
mov
mov
pushf
ret
add
scas
mov
jbe
wrmsr
out
out
arpl
and
xor
mov
loope
dec
mov
subb
rcrl
mov
js
lcall
sti
xchg
mov
adc
mov
inc
or
mov
dec
push
jno
add
rcrl
sbb
test
daa
add
xchg
je
adc
mov
fnstenv
pop
lods
dec
dec
lea
repz
pusha
or
inc
inc
outsb
or
lea
repnz
clc
mov
in
scas
mov
cmp
sbb
and
insb
push
or
ret
adc
push
je
fdivrl
xorl
loopne
divl
stos
fs
das
sbb
test
xchg
mov
subb
sbb
aad
xchg
mov
movsl
mov
push
js
and
jecxz
or
mov
fiaddl
mov
repnz
mov
sahf
push
bound
lods
lods
ljmp
add
cmp
mov
sbb
sub
loopne
dec
adc
adc
jno
xchg
sub
rcrb
addr16
mov
dec
addr16
dec
pop
aam
mov
js
outsb
movsl
popf
hlt
mov
je
call
inc
sub
fiaddl
std
jbe
fwait
cmp
or
push
pushf
fucomip
adc
stos
test
cmp
lods
sub
lods
divl
in
jb
mov
leave
fwait
icebp
leave
mov
pop
aas
adc
faddl
lds
mov
std
enter
cmp
loop
std
outsl
cltd
xchg
adc
dec
loope
ljmp
lock
loop
imul
and
iret
xchg
xchg
sarl
and
scas
int
mov
pop
daa
mov
sahf
inc
push
in
mov
out
fcomps
inc
std
repz
jmp
lods
dec
int3
jle
mov
add
inc
or
cwtl
add
lahf
dec
idivl
lods
sbb
insb
aas
cmpsb
dec
xchg
jmp
int3
or
cmp
out
dec
into
dec
int3
insl
mov
mov
pusha
mov
bound
jecxz
inc
or
jno
repz
rcr
jns
mov
ljmp
scas
dec
arpl
les
arpl
inc
mov
sub
pop
add
mov
push
in
repnz
jbe
dec
in
fadds
jae
push
fsts
lods
sarb
les
addb
rcll
jmp
popa
push
fnstsw
xchg
mov
cmp
jne
jnp
push
mov
rorb
sti
ret
ljmp
inc
js
cmp
and
sub
iret
xlat
fs
adc
pop
push
popf
cmp
and
outsb
insl
xchg
adc
dec
push
ja
mov
sbb
or
mov
cmpsb
int
xor
adc
lahf
cs
adc
dec
imul
daa
test
sbb
movb
pop
xlat
push
ja
pop
cmpsb
mov
cmpsb
ja
sbb
fnsave
enter
pop
sbb
pop
sti
ret
fidivl
cmovb
repz
mov
imul
push
fcoml
and
subl
mov
push
sbb
sbb
dec
xchg
sub
jb
sbb
or
jne
adc
jbe
jp
mov
movsl
rcr
adc
jecxz
test
aam
adc
jno
outsl
add
arpl
repz
cwtl
test
rcrb
ss
inc
mov
mov
repz
xchg
jb
std
aaa
or
fnstcw
cmp
pusha
inc
push
test
xor
lea
aad
rorb
pop
sbb
sub
in
jae
in
outsb
cli
es
and
mov
inc
jp
sbb
mov
enter
int3
fsubrl
popa
sub
ja
loop
push
inc
test
rorb
imull
nop
add
adc
enter
pop
inc
pop
jne
mov
push
lcall
mov
std
cmp
mov
add
out
rorb
pop
inc
lcall
jge
lods
push
push
ljmp
bound
imul
dec
cmp
movsl
sub
mov
sti
xchg
imul
stos
mov
imul
pop
or
sbb
add
stc
mov
data16
jge
pop
mov
mov
popa
idivb
nop
adc
mov
mov
cmc
add
inc
scas
cmp
mov
mov
dec
adc
or
js
loop
mov
dec
int
lods
xor
inc
push
xor
and
dec
sarb
push
ss
in
mov
sub
sbb
xlat
movsb
pop
mov
pop
xor
dec
sub
adc
cmc
inc
adc
and
jb
jo
loopne
and
push
sbb
fistps
call
cmpsl
callw
cwtl
push
aaa
stos
sub
gs
int3
repnz
and
inc
push
cld
cmpsb
mov
ja
scas
sti
lret
pop
ret
cmp
enter
das
inc
test
adc
push
mov
cwtl
lock
add
int3
jmp
dec
cmp
add
fildll
out
pop
cmp
pusha
or
push
addr16
add
xor
mov
or
out
nop
mov
into
cmpsb
mov
sar
into
fistpll
scas
fdivrl
cmp
push
dec
pusha
sub
push
mov
xlat
cmpb
xor
push
mov
pop
mov
cli
xchg
xchg
push
jmp
xor
add
cli
pusha
add
mov
xchg
leave
and
cmp
daa
lret
subl
lahf
sbb
jg
sarb
xor
js
movsb
pushf
jl
aas
jle
xchg
xchg
ljmp
xchg
xor
sub
push
jbe
push
xor
and
xor
mov
xchg
or
aam
xchg
sahf
dec
jno
mov
test
imull
mov
jae
inc
push
clc
jecxz
call
add
inc
xlat
pop
pushf
dec
aas
cld
shrl
mov
cli
call
idiv
jl
stos
rcll
cmp
fstpt
jp
inc
push
lods
out
and
stos
hlt
ljmp
pop
jecxz
lea
push
xchg
push
xorl
dec
daa
or
xlat
pop
mov
xchg
push
mov
mov
out
dec
lods
out
in
push
cmc
out
cmp
lret
les
hlt
jb
sbb
mov
rcll
mov
out
xor
loop
pop
xor
and
fnsave
jecxz
xchg
sub
add
jecxz
or
jge
xor
sbb
cmc
xchg
sbb
mov
push
dec
ror
ret
jno
test
addb
aaa
jae
fs
stc
std
jmp
out
mov
jae
jle
in
pop
push
adc
push
adc
lods
and
rorb
lock
bound
and
add
int
inc
ds
adc
cltd
mov
mov
in
xchg
and
mov
add
stos
js
sbb
bound
push
repz
jns
iret
aaa
or
lods
cmp
cwtl
inc
ret
mov
mov
clc
fcomps
jl
push
mov
jg
cmc
xor
test
lds
sub
and
cmpsl
xor
sti
std
lret
jle
hlt
int3
inc
pop
add
jp
pop
mov
mov
scas
fidivrs
mov
imul
stc
out
inc
es
lock
test
out
cmp
sub
xor
scas
lods
je
sbb
sub
jo
jp
stos
fwait
sub
and
shlb
jb
lahf
in
dec
cmp
mov
clc
mov
lock
loop
lahf
add
loope
std
mov
or
mov
mov
cmp
inc
add
jecxz
mov
out
hlt
test
push
pusha
fmull
xor
mov
or
mov
mov
jmp
adc
ffree
enter
and
and
cmp
add
outsl
or
stos
mov
xchg
or
mov
jmp
insl
rcrl
adc
cmp
pop
scas
pop
repnz
and
pop
ffree
sahf
in
mov
in
sub
inc
push
and
jg
pop
pop
cmp
test
xor
rolb
sbb
cwtl
shlb
mov
repnz
push
ja
out
xchg
aad
sub
mov
adcb
sbb
push
ret
je
scas
fidivrl
sar
gs
fstpl
sarl
pop
push
mov
cmp
outsl
dec
inc
xlat
int3
xchg
push
adc
ret
shll
push
stc
cmc
push
repz
test
mov
fadds
push
dec
mov
pop
ds
out
outsl
adc
jg
pop
mov
add
xchg
nop
mov
pop
dec
mov
popa
xchg
bound
xchg
sbb
cmp
mov
test
add
test
inc
in
data16
sbb
inc
xchg
xchg
ret
jno
mov
cmp
movb
pop
push
fsubl
into
lock
jns
repz
shrb
sbb
ds
and
movsb
inc
push
jb
add
push
arpl
inc
jnp
imul
mov
pop
push
lret
lea
cli
sbb
aad
lods
movsl
jl
dec
les
or
adc
insl
inc
jle
mov
add
test
dec
cmp
nop
xchg
rcl
cld
push
xchg
mov
shlb
mov
sbb
movb
pop
sbb
test
test
xchg
jge
jge
or
das
jle
out
sbb
xor
lahf
and
daa
je
pop
inc
stos
fs
popf
lods
add
jl
xor
jle
dec
pusha
imul
or
loope
mov
mov
xor
or
mov
std
fisttpll
retw
frstor
dec
mov
ds
push
lods
fisttpll
push
pop
icebp
inc
jecxz
mov
cld
xchg
lock
jge
jb
pop
inc
fst
outsb
popf
sbb
mov
test
or
cmpsb
sahf
cmc
test
pop
push
sub
ds
cld
sub
mov
xchg
adc
add
ret
nop
unpcklps
mov
xor
mov
cmp
fisttps
neg
inc
sti
fsubr
inc
push
jg
enter
test
xchg
xchg
dec
les
test
push
ror
cmp
mov
mov
sbb
cli
push
xchg
popa
fcoms
test
scas
fwait
sbb
pop
jp
ss
hlt
addr16
cltd
loopne
addr16
xlat
push
mov
imul
mov
sbb
inc
les
rcrl
sbb
inc
mov
pop
cmp
out
das
aas
shlb
rorb
sahf
cmp
rcrb
dec
divb
dec
pop
inc
ja
mov
scas
mov
test
jne
push
incl
and
mov
pop
mov
cmp
repz
jecxz
sub
mov
sub
sub
mov
ret
pusha
jb
mov
hlt
add
pop
jns
cmpsb
cmp
inc
int3
mov
jle
and
pop
mov
and
out
subb
out
clc
add
fistl
xchg
out
call
xchg
outsl
imul
inc
outsb
inc
js
pop
mov
ja
sub
sbb
in
aad
jecxz
movb
movsl
cli
add
or
cmp
test
jmp
lds
push
xor
icebp
xchg
xor
and
lahf
ljmp
push
jg
xchg
pop
in
in
shll
or
push
inc
pop
inc
sub
push
pop
mov
icebp
mov
adc
fcomp
inc
push
pusha
inc
int
mov
sbb
jge
stos
inc
xchg
add
pop
pop
repz
mov
sub
xchg
mov
dec
add
fdivrp
adc
ret
sbbb
rorl
stc
mov
dec
mov
daa
xor
insb
fs
pop
sub
xor
rolb
popf
imul
sub
and
aam
imul
aam
mov
mov
into
fdivs
cmpsb
ljmp
hlt
mov
aad
shll
in
out
imul
xchg
mov
mov
dec
or
imul
fldcw
jae
test
into
adcl
scas
push
add
jmp
ficoms
cmp
dec
pop
mov
out
stos
pop
shrb
pushf
or
mov
inc
call
es
mov
rorl
sub
pusha
loopne
mov
cmc
adc
xor
in
mov
sarb
out
fwait
mov
adc
push
arpl
pop
adc
mov
clc
jmpw
addr16
push
loope
or
mov
mov
or
push
mov
inc
repnz
repnz
pop
stc
adc
mov
aas
sbb
push
xchg
mov
jl
push
xor
cmp
sbb
mov
insb
mov
andb
idivb
pop
cld
mov
test
inc
shrb
andl
rcll
test
mov
sub
lods
nop
fdivl
push
lret
inc
jecxz
xchg
fstl
adcl
and
xlat
fucomi
lock
into
mov
int
push
mov
out
inc
mov
mov
sub
mov
xchg
pop
cmp
sbb
ret
rcll
push
test
rcl
mov
add
fisttps
stos
inc
in
or
jle
in
outsb
push
mov
xlat
dec
adc
dec
dec
gs
xchg
mov
imul
enter
test
push
xchg
mov
add
loope
adc
jmp
adc
pop
mov
aam
jns
xchg
or
loopne
pop
xchg
lds
fsub
add
inc
arpl
shll
pop
popa
push
fs
sub
mov
icebp
pop
sub
cltd
lret
ret
test
and
jnp
xor
sub
xor
fldcw
sub
fldl
jmp
and
xchg
ret
cmpb
mov
andl
mov
cmp
inc
pusha
jge
and
xor
sbbl
fdivrs
nop
out
stos
dec
addr16
pop
imul
lahf
cmp
roll
mov
xchg
cmc
jle
je
jl
mov
mov
jp
notb
stc
outsb
push
roll
arpl
xorl
pusha
repnz
push
xor
xlat
lods
in
rol
insb
push
shlb
cmp
inc
xor
call
ljmp
pusha
xchg
cli
adc
jns
nop
xchg
mov
mov
fcompl
fistpll
cmp
incb
je
pop
xchg
into
cmc
rclb
jl
pop
cmp
push
enter
jne
pop
and
fs
push
mov
shrb
in
ror
pop
das
mov
cmc
and
mov
add
aad
pop
shl
rcll
mov
add
jge
push
mov
ret
test
add
jg
dec
pusha
push
xchg
dec
sbb
test
sti
xchg
add
in
outsl
inc
lds
sub
inc
aam
cmp
mov
outsl
inc
mov
in
clc
shlb
dec
lods
fmuls
daa
lds
rorl
mov
or
in
xor
aad
cmc
shl
das
inc
xchg
push
out
shld
jo
lods
mov
pop
fsub
fdivrs
mov
lahf
les
mov
xor
mov
xlat
rcrl
add
push
add
ds
push
ds
mov
inc
adc
jbe
mov
cmpsb
pop
jno
jmp
and
mov
mov
xor
xchg
push
dec
fbstp
clc
or
mov
or
fiaddl
aam
lret
shll
aas
ret
pushf
imul
mov
and
cmp
xchg
xchg
push
ljmp
arpl
jnp
jae
cmpsl
rcrl
outsb
call
iret
repz
cmp
jns
adc
cmpsl
mov
jl
xor
and
ret
inc
xor
push
stc
scas
sub
sbb
std
out
js
ret
or
out
pop
daa
outsb
xor
mov
aad
add
inc
mov
cmc
filds
push
push
pop
les
iret
jo
xor
add
inc
sbb
leave
sub
sti
cltd
jns
sub
ja
push
ds
out
add
loop
xchg
sbb
ficoms
xchg
and
sub
pop
fdivs
cmp
jmp
outsl
pushf
arpl
push
push
repz
push
jge
fs
jae
test
ret
dec
jl
sbb
stc
shl
out
mov
mov
pop
push
in
add
mov
je
sub
fistpl
je
cmp
out
dec
mov
cmp
lret
mov
jge
jl
inc
push
sub
jo
push
xchg
lret
mov
jne
jno
test
push
xchg
pusha
xorb
jo
or
xchg
mov
stc
lcall
xor
popa
subb
mov
aam
sahf
sub
ja
xchg
jmp
loope
int
fidivrl
les
stc
xor
mov
mov
push
inc
aam
in
cmpsl
xchg
and
inc
fdivl
add
out
or
daa
sbb
jae
pop
sub
inc
ljmp
aad
dec
mov
push
frstor
inc
or
and
je
mov
pop
pop
ror
fdivrs
scas
jo
aas
sub
jno
add
mov
push
cmp
ret
inc
jne
incl
push
pop
lcall
and
stos
ljmp
and
and
mulb
lret
enter
lods
cmpsl
aad
out
pop
push
push
scas
pop
dec
mov
loopne
sbb
add
shll
mov
and
push
push
gs
mov
or
stc
aad
jbe
scas
stc
lret
inc
mov
lods
test
cmp
movsb
fcoml
fiaddl
in
xlat
lret
push
dec
mov
je
sahf
jb
mov
jl
pop
mov
subb
int
icebp
addb
incb
mov
cmp
imul
fdivrl
add
add
je
subb
add
push
testl
pop
in
cmp
mov
out
sbb
sbb
mov
sbb
inc
ret
adc
xchg
int3
mov
subl
fadds
out
in
mov
or
rol
mov
rcrb
cmpsb
cltd
dec
mov
pop
inc
push
inc
mov
mov
test
inc
and
pusha
xor
mov
dec
test
cltd
das
sub
inc
sub
aas
jge
jg
lahf
jge
sahf
ret
outsb
push
pop
push
or
or
enter
pop
and
xchg
mov
je
push
mov
loope
and
sbb
mov
sbb
mov
les
hlt
stc
in
lock
dec
aam
push
test
test
xor
popa
mov
push
add
and
and
arpl
fwait
push
imul
lcall
inc
pop
stos
add
xor
and
dec
aam
subl
mov
out
pop
fdivr
add
daa
loop
fldcw
mov
mov
arpl
adc
xor
subb
ja
xor
loop
in
adc
push
ss
mov
fs
cs
cmp
inc
xor
xchg
push
bound
orl
popa
aaa
jp
xchg
xchg
outsb
inc
jo
insb
frstor
push
jae
fdivr
inc
rcrb
popa
cmp
pop
cmpl
movsb
sti
cltd
cltd
loop
push
jg
int
xchg
xchg
or
js
jl
pushf
dec
mov
int3
in
and
lds
xchg
lock
lods
push
sbb
insl
sub
mov
imul
cmp
pop
dec
popa
push
jae
loope
jp
adc
inc
mov
xlat
push
sbbl
mov
adc
mov
pop
add
lods
sbb
pop
push
inc
sub
addr16
sub
dec
ror
in
sbb
jecxz
mov
xor
xor
sbb
jbe
test
adc
sarl
xchg
fildll
repz
mov
iret
add
lret
mov
punpcklwd
scas
pop
aad
cmp
rorl
jp
push
pop
call
das
jmp
fidivrl
sbb
push
and
je
cli
sbb
and
sub
icebp
out
sub
pusha
add
mov
push
mov
sarl
xor
and
cmp
lock
cmp
cltd
aaa
cmp
insb
xchg
out
js
dec
stos
xchg
icebp
mov
cmpl
ss
frstor
and
in
inc
lret
dec
mov
jg
fisttpl
xor
push
xorl
sub
lods
mov
call
push
pop
sbb
cmc
xchg
fwait
push
mov
or
aad
xchg
sub
ljmp
xor
incb
stos
jbe
cld
aas
jns
push
gs
jnp
arpl
fsubrs
addr16
lea
mov
in
add
mov
mov
mov
clc
cld
arpl
push
mov
rcrb
mov
inc
xlat
imul
sub
pop
sbb
dec
mov
dec
add
adc
int3
adc
call
dec
or
jo
sub
xor
cmp
push
xor
lahf
aas
add
fdivrl
imulb
pop
lock
sub
and
push
mov
imul
xlat
xchg
outsl
fisubrl
or
iret
push
cld
popa
mov
xchg
popa
mov
push
cmp
or
btr
or
out
out
stos
addl
sbb
fistpl
mov
inc
mov
lods
mov
sbb
adc
inc
dec
inc
pop
mov
das
pushf
push
xor
lcall
test
sarl
lret
sub
lahf
sbbb
insb
rorl
add
mov
ret
ljmp
sbb
neg
ds
jl
sahf
fisubl
xlat
sarl
imul
mov
js
pop
inc
xor
lods
loop
sub
cmp
push
addr16
mov
call
sub
sub
or
or
inc
into
adc
lret
pusha
insl
and
pop
pusha
repz
cmp
jge
lods
shlb
fiadds
dec
mov
or
jbe
jl
icebp
push
cmp
pusha
fmul
test
rcll
ds
xlat
roll
loop
lahf
pop
ficomps
cmpsl
loopne
mov
fadds
mov
in
xchg
and
cmp
inc
xor
cwtl
add
adc
cli
mov
cmp
pop
jno
or
ror
pop
and
pop
rcr
xchg
add
cmp
mov
adc
sbb
jns
inc
cmp
es
xchg
aam
out
add
cld
lcall
pop
push
add
cltd
in
xchg
jmp
aas
mov
jecxz
jb
hlt
pop
or
cmp
push
inc
lahf
sub
add
xor
out
inc
push
stos
mov
lods
jb
iret
hlt
add
sti
fdivrs
pop
fisttpl
jge
ljmp
jmp
adc
or
scas
in
lea
mulb
pop
xchg
loopne
and
stos
xor
and
int3
in
cmp
mov
sahf
and
popf
mov
mov
mov
mov
cmp
loope
pop
and
fnstsw
iret
out
and
stc
lcall
andl
cs
aaa
popf
xlat
inc
cwtl
lahf
xchg
in
sub
pop
mov
std
xchg
repz
ja
and
add
repnz
fs
add
push
dec
hlt
adc
mov
jno
out
mov
mov
mov
fiadds
and
jo
scas
movsb
loope
sub
mov
mov
xor
ja
movsb
push
fs
xchg
movsb
in
mov
mov
sbbb
test
das
mov
xor
call
adc
enter
inc
test
or
mov
mov
decl
mov
icebp
add
sub
cmpsl
sbb
fbstp
mov
arpl
lret
adc
cmp
aam
sub
or
dec
cltd
inc
out
push
cwtl
rcll
popf
sbb
aas
sub
test
mov
scas
in
dec
push
lret
inc
subl
xchg
push
pop
mov
mov
push
pop
arpl
xchg
pop
repz
and
jne
xchg
inc
mov
pop
cltd
xor
jbe
fsub
lods
hlt
xor
xor
gs
pop
popf
dec
pop
nop
inc
xchg
add
add
stos
icebp
stos
sarb
bound
ds
adc
jnp
in
adc
sbb
loope
mov
add
inc
int
test
push
loopne
jge
jle
cmp
cmpsl
xor
sub
sub
and
icebp
adc
add
mov
and
sub
xor
mov
xchg
push
ret
test
sbb
cld
add
jp
mov
add
jg
mov
cmp
mov
std
popa
scas
call
inc
rclb
out
xchg
sbb
jne
pop
cmc
out
dec
dec
push
in
in
arpl
js
mov
and
sarl
jne
dec
pop
fisubl
add
xor
push
add
push
add
lahf
push
add
push
shl
daa
pusha
xchg
add
sbb
das
in
mov
sub
cmp
and
push
mov
fsubrl
push
xchg
jno
and
dec
shr
aam
jns
lahf
push
xchg
cmpsb
out
loope
sub
or
push
sbb
inc
add
or
inc
inc
lods
je
cmp
aas
out
xchg
or
xor
mov
ret
dec
push
fisubrs
test
mov
in
mov
imul
adc
push
popf
dec
pop
dec
icebp
push
mov
adc
hlt
ret
ja
sbb
repz
mov
jg
push
outsb
sub
sti
xchg
or
mov
aad
mov
mov
fimull
push
scas
sti
int
pop
pop
xchg
fcmovnbe
inc
add
in
lahf
orl
ljmp
lret
pop
push
jb
outsb
cwtl
in
sarb
lock
iret
mov
frstor
or
movsb
and
xor
in
out
push
test
pop
or
fwait
nop
roll
ret
jb
sub
mov
mov
pop
out
vxorps
dec
sahf
aaa
sub
lods
mov
sub
popf
inc
jecxz
jle
call
pop
sbb
sbb
clc
pushl
sti
fimull
xchg
adc
add
test
inc
pop
mov
mov
outsb
or
mov
std
jmp
or
loope
lds
xchg
jl
and
xchg
addr16
cmp
fsubrp
push
adc
cmp
push
xor
mov
ffreep
orb
fstps
es
inc
mov
jp
mov
mov
or
dec
jmp
out
xchg
aaa
inc
test
push
loope
mov
leave
in
push
ss
pop
and
pop
movsb
int
adc
lea
and
mov
lret
nop
dec
pop
mov
les
loope
call
fwait
loope
lods
mov
in
fs
pop
repnz
xchg
push
ret
cltd
add
stos
push
xchg
sub
enter
nop
xor
mov
sub
pop
jmp
in
pop
xchg
push
sbb
int3
mov
stos
add
rcrl
dec
mov
pop
je
lock
and
xchg
lods
stos
xchg
in
cmp
loop
test
mov
aad
sbb
jns
dec
leave
and
les
arpl
out
push
and
sbb
sub
inc
popf
mov
mov
roll
push
or
adc
sbb
cmpsb
push
push
xor
sub
mov
test
adc
packssdw
xchg
jbe
lea
cmpsb
sub
bound
and
sbb
icebp
and
adc
imul
outsb
add
in
in
call
std
xor
insb
jno
push
push
dec
test
mov
or
pop
mov
hlt
cmp
test
push
and
jp
add
imul
addr16
push
cwtl
scas
adc
push
mov
xchg
fcom
xchg
xor
mov
add
xchg
stos
push
xor
fistl
jbe
inc
mov
jmp
daa
pop
lret
ficoms
popa
pop
jp
sub
sub
gs
inc
push
or
pusha
mov
out
dec
shlb
and
mov
nop
jnp
adcb
movsl
xchg
popf
or
fstps
cli
adc
pusha
iret
pop
xor
push
rcll
or
jb
inc
stos
ja
addr16
ss
sub
push
inc
sahf
cmp
js
sub
adc
xchg
cmp
test
mov
js
push
push
popa
pop
sub
stos
jo
insb
repz
jnp
cmp
and
inc
test
mov
cwtl
jns
jl
xorb
pop
hlt
inc
cmp
insl
bound
cmp
push
cmp
add
mov
jne
popf
adc
inc
mov
sarl
dec
stos
dec
or
jmp
fcompl
pusha
dec
clc
in
mov
movsl
xor
adc
inc
dec
ss
int3
rorb
aam
addr16
mov
sbb
ljmp
repz
sbb
shll
jg,pt
adc
pop
ret
scas
mov
jg
xorb
je
bound
hlt
leave
push
adc
insb
inc
pop
popf
adc
test
pop
popf
push
cmpsb
imul
mov
inc
je
mov
mov
xlat
mov
rcrl
test
loopne
popa
cmp
or
fdivrs
mov
jge
test
dec
ret
add
adc
adc
aas
in
mov
stos
std
les
push
fcmovnb
adc
mov
cmp
fisubrs
xchg
add
out
mov
stc
sbb
test
sbb
ret
adc
pusha
scas
fcompl
jbe
xorl
push
daa
fildl
fdivrs
sbb
popf
jecxz
addr16
call
in
jae
int3
mov
data16
mov
neg
push
add
cwtl
jae
cmp
pushl
mov
mov
repz
push
nop
fwait
je
test
xchg
cmp
loop
ss
add
push
in
xor
hlt
cmpsl
push
push
cmpsb
and
repnz
mul
mov
mov
mov
rcrl
hlt
in
dec
aad
jl
or
and
in
cmp
test
stos
insl
xor
ret
push
jp
scas
popf
jl
sbb
addr16
or
push
cs
pop
push
frstor
adc
mov
or
push
das
lock
inc
sbb
sti
shll
sub
or
mov
sbb
int3
pop
xor
inc
or
out
push
and
loope
xor
lret
test
mov
fwait
stc
mov
fsubl
popf
add
pop
in
loopne
inc
cld
pop
pop
and
incb
data16
mov
js
nop
mov
mov
jno
cli
mov
shll
ljmp
lods
cmp
mov
aad
scas
mov
adc
fwait
xchg
and
loope
imul
cmp
or
rorl
ret
xchg
lcall
aam
dec
shrb
mov
outsb
jno
into
ja
cmp
daa
and
imul
cmp
inc
mov
mov
lcall
sbb
push
jns
push
or
xor
cmp
test
ret
rorb
sbb
pop
ja
cmp
outsl
inc
popf
jmp
subb
mov
sbb
and
gs
mov
or
push
int3
ja,pt
sbb
inc
dec
sub
and
sbb
repnz
sbb
push
aas
scas
add
fwait
mov
or
cmp
shl
push
outsl
dec
or
push
std
sub
cltd
xor
mulps
inc
inc
fs
pop
add
and
pop
xorl
adcl
aad
popa
mov
push
mov
and
ds
fsubr
cli
shlb
dec
les
mov
int
cmp
addr16
enter
aam
mov
mov
divl
fwait
icebp
add
hlt
dec
bound
out
lea
in
adc
xchg
into
sbb
add
xchg
je
add
dec
ret
pop
dec
mov
mov
xchg
adc
movsb
xlat
mov
add
cs
xchg
inc
out
cwtl
leave
leave
or
pop
orb
cltd
adcl
jle
jecxz
cmp
dec
fisubrl
push
dec
out
lret
fwait
jmp
popf
jo
test
mov
les
rcll
cmpl
les
sbbb
stos
imul
cltd
subl
gs
cmp
ds
mov
scas
mov
icebp
in
lret
ds
add
sbb
cmp
xlat
fsubrl
out
hlt
mov
dec
adc
ss
xor
mov
xor
inc
mov
inc
inc
in
mov
ds
lcall
sub
push
nop
mov
mov
pop
lcall
rcrl
outsb
stos
les
cmpsl
roll
pusha
jno
xchg
clc
rclb
inc
xchg
arpl
mov
je
push
add
sub
das
es
fsubrl
stos
push
mov
xchg
sbb
jge
sub
push
movsb
call
ss
fwait
mov
mov
dec
repnz
shlb
or
adc
fs
sbb
call
add
cmpsb
cmp
mov
mov
repz
arpl
sub
xchg
cmpsb
in
mov
fstp
popf
jl
imul
inc
mov
add
in
icebp
sub
call
or
mov
cmp
lret
ja
mov
call
add
pop
cli
lahf
aaa
jno
call
xchg
ret
jne
outsb
or
insb
sahf
into
sbb
mov
or
jne
mov
addr16
leave
insb
mov
aaa
fisttps
inc
dec
and
and
mov
inc
lahf
idiv
add
movsl
xchg
ds
push
or
pusha
mov
scas
sahf
mov
mov
cmp
lret
xchg
out
pop
sbb
aaa
add
or
dec
adc
sbb
and
lods
outsb
pop
repz
daa
mov
dec
jmp
rorl
lcall
dec
mov
add
popa
sub
call
or
aad
push
pop
ljmp
cmp
xor
push
arpl
push
cmp
packssdw
and
shrl
loopne
fmulp
or
ds
jmp
dec
test
pop
xlat
mov
mov
cmp
aas
sub
xor
sbb
ja
dec
mov
test
int3
and
adc
sbb
bt
inc
sarb
pop
mov
popf
stc
push
test
fs
xchg
push
xlat
xchg
ds
ja
sbb
hlt
cs
push
mov
hlt
xchg
or
dec
mov
push
xchg
fimull
inc
pop
and
pop
sbb
lret
ret
inc
jmp
jl
xchg
jne
pop
incb
lds
ds
push
mov
push
lcall
in
mov
es
xorl
jge
xchg
inc
pop
and
xchg
std
adc
arpl
movb
mov
repz
int3
out
dec
movsb
cmp
loope
scas
push
xor
xchg
push
xchg
dec
pop
xchg
sub
leave
in
dec
call
xor
pop
fcmovb
sub
stos
and
inc
mov
lret
mov
dec
insb
xchg
outsl
pop
mov
jg
sbb
subl
push
ja
or
mov
pop
in
in
mov
loopne
adc
aad
push
fisttpll
cld
test
dec
scas
adc
push
sub
mov
sub
dec
inc
adc
sub
pushf
test
sub
mov
and
jnp
mov
outsl
inc
iret
sub
lret
and
sbb
cld
xchg
subb
inc
mov
dec
and
add
mov
addr16
mov
ret
xchg
xor
test
mov
pop
xor
out
into
xchg
add
into
jmp
mov
cwtl
xchg
xchg
mov
mov
ja
out
push
scas
jmp
movsl
dec
and
sbb
sbb
mov
notb
sub
push
xchg
addr16
lods
mov
aad
dec
and
push
and
fistps
ds
jle
adc
sub
loope
xorl
cmc
ret
scas
es
adc
mov
rcrb
cmpl
test
pop
pop
lea
insl
je
jle
aad
push
insb
xor
pop
xlat
dec
jnp
cmp
outsb
xchg
outsb
sub
popf
fidivrs
jg
jnp
inc
jp
pushf
cld
push
enter
pop
xchg
jmp
loop
sti
lock
xchg
dec
xchg
das
inc
shll
push
jg
or
sub
adc
pop
jns
stos
repz
clc
jae
aas
test
inc
rcl
nop
jp
jns
imull
pop
hlt
inc
push
les
ja
imul
lods
cmpsl
insl
dec
push
imul
in
andb
sbb
jle
fisttps
cmp
or
repz
scas
mov
xor
sti
mov
push
insl
add
push
lds
les
cmc
fcomp
int
fadd
add
into
or
jno
add
iret
inc
jle
xor
das
shrl
int3
neg
sub
inc
dec
les
leave
add
push
loopne
dec
jno
mov
aas
out
dec
push
out
pushf
addr16
xchg
imul
rcl
gs
cmc
adc
int3
dec
and
push
mov
dec
das
mov
mov
or
mov
push
dec
adc
xchg
ja
mov
or
push
adc
imul
xor
rorl
and
cmpsb
or
push
jmp
xchg
ja
mov
adc
mov
mov
andl
push
adc
mov
or
sbb
js
enter
cmpsl
sub
xchg
or
jns
add
fwait
xchg
jne
xchg
dec
flds
loop
jmp
mov
mov
inc
jle
es
testb
js
xchg
mov
and
inc
dec
enter
insl
mov
jle
out
lds
aam
push
jp
lcall
das
mov
dec
or
fsubrs
and
add
clc
mov
cmc
imul
lods
lods
jae
mov
lea
in
pop
pop
mov
movsl
icebp
out
mov
mov
cmp
movsl
mov
dec
lods
iret
imul
aaa
push
out
cmp
test
insb
filds
test
fnstsw
adc
lea
jb
mov
in
push
xor
js
int3
shr
dec
mov
dec
pushf
xchg
lea
test
mov
inc
dec
adc
loop
xor
and
dec
add
pop
stos
xchg
inc
insb
sbb
leave
inc
inc
push
xchg
mov
cltd
cli
or
repnz
dec
fxch
mov
cmpsl
pop
push
inc
mov
pop
mov
mov
lret
lahf
es
cmp
dec
xchg
xchg
pop
imulb
aaa
inc
xor
xlat
iret
mov
mov
add
cmp
rcrb
insb
andl
pusha
aas
sub
addr16
push
or
mov
xchg
mov
jb
jmp
push
ja
jb
dec
cmp
repz
mov
pop
shrl
cmp
xchg
popa
push
sbb
and
lds
leave
icebp
mov
aas
scas
xchg
popa
lret
mov
imul
jne
cmc
test
pop
inc
cld
addr16
mov
adc
shlb
or
loop
jp
mov
cmpsl
adcl
and
iret
cltd
mov
scas
add
push
sbb
sub
jne
mov
bound
stc
pop
adc
shl
rorb
mov
jl
inc
leave
cmc
lods
and
xor
fcom
scas
xchg
sub
stos
jbe
push
idivl
ss
push
arpl
lret
femms
sub
in
stos
rcll
dec
cmp
gs
es
nop
sub
add
sahf
js
push
and
cwtl
addb
pop
sub
ss
imul
sbbb
negl
loopne
fs
dec
xlat
adc
or
loopne
mov
xchg
ljmp
mov
cmp
cmp
aad
out
sub
cmp
mov
cs
push
sti
fxch
xor
pop
sub
dec
andb
insb
or
adc
mov
mov
hlt
xor
in
push
imulb
xor
loop
cld
lahf
lock
arpl
pop
in
dec
bound
fidivs
or
sbb
addl
or
enter
imul
out
jp
pop
pop
scas
out
mov
pop
cmp
pop
popa
add
jno
adc
repnz
popf
pusha
daa
push
int3
dec
xlat
adc
sbb
ret
xor
adc
ja
pop
shll
and
fwait
mov
sti
out
movsb
adc
loopne
fs
lods
sub
adc
aas
popf
sub
mov
movsl
outsb
mov
sti
mov
mov
stos
pop
loope
mov
jle
xor
sbb
push
xor
hlt
in
jp
mov
mov
shl
arpl
enter
lods
jmp
gs
jnp
out
push
mov
lcall
cwtl
arpl
out
jge
fadds
push
data16
mov
ss
inc
lret
flds
sub
iret
iret
sbb
testb
or
jnp
pop
push
sbb
xchg
roll
adc
or
cmp
aas
push
ja
xchg
push
xchg
loopne
sbb
movsb
cmp
data16
aaa
dec
jp
push
test
push
enter
xor
sub
int
xor
faddl
sub
mov
test
repz
cmp
insb
inc
add
or
jle
outsl
mov
inc
clc
int
push
andl
addl
mov
pop
cwtl
adc
jle
pop
sbb
loopne
lahf
inc
adc
mov
addb
and
stos
fimuls
inc
mov
jae
cli
popf
xchg
sarl
loope
mov
cltd
loope
adc
dec
pop
loope
imul
stos
lret
mov
push
fstpt
inc
fistps
repz
adc
jmp
iret
pop
test
scas
cwtl
int3
mov
rcl
sbb
test
jle
rolb
data16
push
push
mov
call
push
popf
jns
cltd
clc
sbb
push
cmp
mov
cmc
pop
scas
add
inc
fstl
sub
call
pusha
rcr
bound
mov
xor
lods
cli
test
popf
jb
call
cld
pusha
pop
lods
popf
jp
and
cmp
into
or
jl
je
xor
push
call
jecxz
cmp
aam
add
mov
sub
xchg
push
mov
sub
pusha
mov
jmp
pop
push
inc
mov
aaa
adc
ficomps
pop
or
rcll
out
repz
and
aam
pop
mov
aam
daa
cmovo
sahf
js
inc
repz
or
push
jp
ljmp
addb
add
or
sbb
jnp
pop
popf
lret
pop
mov
xor
jle
outsl
xchg
rclb
push
inc
inc
push
daa
bound
mov
add
shr
xor
incb
mov
jns
int3
test
mov
pop
hlt
sbb
jns
rclb
out
inc
push
pusha
adc
pop
push
cmpsb
pop
pusha
in
aas
shll
dec
enter
leave
jne
test
insl
adc
sub
popf
xor
test
mov
cld
scas
test
test
inc
push
bound
nopl
jp
aam
js
cmp
in
stos
xor
inc
ficompl
jge
or
lret
cmp
mov
pushf
xor
in
and
push
inc
cmp
nop
lods
lock
js
cmp
fbld
or
xchg
out
loop
mov
sbb
dec
push
out
or
lcall
loop
jae
fcompl
sbb
cmp
out
popa
sbb
sub
inc
adc
pop
stos
in
mov
enter
fistps
scas
test
outsb
xchg
adc
movsl
out
jle
lea
cmp
in
mov
fsts
mov
out
pop
and
adc
jmp
mov
leave
mov
insb
adc
adc
push
mov
repz
and
imulb
xor
inc
das
les
and
ds
or
out
xchg
pop
or
cmp
xor
data16
jns
lcall
nop
loope
push
enter
jl
cmpb
loop
xchg
push
push
out
mov
mov
inc
mov
es
lds
cwtl
dec
jecxz
adc
push
xchg
inc
push
sti
add
sbb
dec
mov
test
lock
jb
inc
pop
xchg
xor
mov
adc
mov
ficomps
jge
inc
sub
ret
ficompl
dec
xor
sub
mov
adc
xchg
mov
std
push
pop
sub
xchg
push
mov
xchg
sub
imul
inc
jmp
inc
test
add
sbb
lcall
arpl
sub
shlb
gs
sub
fsubl
xor
and
sti
add
rolb
mov
rorl
mov
xor
shr
out
mov
jecxz
shlb
out
test
inc
xor
jo
addr16
out
and
mov
loope
mov
and
ficompl
je
and
jae
xchg
insl
ret
xchg
ljmp
cmp
inc
and
pop
in
sub
sub
pop
jne
das
pop
mov
lock
daa
fmul
popa
mov
das
in
mov
add
repz
int3
add
sbb
mov
sub
adc
sbb
fisttpl
and
push
out
mov
rolb
pop
cmp
iret
cmc
lods
or
mov
test
mov
gs
mov
xchg
mov
repnz
mov
jno
cwtl
pop
xchg
mov
nop
enter
out
cmp
nop
mov
cmp
je
mov
mov
rolb
mov
adc
push
negl
mov
sub
imull
inc
lcall
pop
sub
out
push
scas
inc
jmp
cltd
cmpsb
jo
cmp
call
arpl
and
inc
cmp
popf
or
inc
push
fucomi
add
stos
inc
andb
in
imull
pusha
inc
inc
repz
mov
cmpsb
imulb
jl
movsb
or
sub
test
push
loopne
xor
loope
mov
pop
lcall
loop
inc
rcll
and
fsubrl
loopne
dec
push
jbe
repnz
mov
pop
scas
imul
push
rolb
jo
xor
aad
cmc
fs
into
pop
or
stos
mov
fs
pop
lcall
aaa
pusha
mov
popf
mov
repnz
push
outsb
add
inc
int3
imul
rcll
lea
add
mov
test
jno
cld
loopne
pop
pop
inc
cltd
fimull
insl
out
xchg
fimull
or
lods
mov
movsb
mov
call
outsl
cmp
mov
adc
pop
push
call
outsl
and
loop
push
out
ret
filds
add
lds
mov
pop
cmp
push
cmc
dec
shl
push
pop
stc
pop
inc
fcomps
adc
rcll
dec
inc
jp
outsl
push
and
inc
jmp
or
das
scas
xchg
lea
and
xorb
pop
pop
ds
xor
or
dec
lret
into
icebp
pop
sub
inc
clc
jbe
test
xchg
add
sub
gs
mov
and
daa
or
fsubrs
jl
jns
xchg
add
jb
or
je
jo
xor
jne
out
cli
arpl
arpl
cmp
aaa
sub
mov
pop
pop
lds
inc
mov
sub
dec
jmp
pop
jb
mov
mov
dec
or
jo
shlb
testl
shll
push
jo
pop
sbbl
neg
ss
jae
insl
gs
in
shlb
bnd
sbb
bound
push
in
lret
xchg
in
or
loop
dec
jg
repz
ret
lret
xchg
dec
dec
adcb
xchg
movsb
adc
out
out
and
jb
inc
cmpsb
mov
outsb
lds
cmc
lods
outsl
mov
jg
cmp
jno
inc
rcl
repz
push
xor
xchg
or
imul
imul
add
in
in
pop
in
outsb
scas
clc
add
cmpsl
lds
orl
adc
pop
aad
jecxz
mov
into
inc
xchg
gs
add
jb
sbb
fwait
orl
pushf
clc
imul
lock
xchg
inc
aaa
pop
sub
xchg
mov
xlat
cltd
sub
xchg
adc
sub
cmp
push
sub
xchg
push
leave
fs
sbb
mov
or
js
inc
push
dec
stos
push
fildll
test
jp
cmp
jp
push
dec
es
and
mov
adc
shrb
dec
mov
ljmp
cmc
dec
mov
mov
xchg
adc
mov
dec
xchg
xchg
div
add
jge
pop
pop
sub
xor
or
rol
xchg
fs
add
xchg
or
cs
lock
and
sub
loop
mov
adc
pushf
repnz
mov
pop
jne
addr16
mov
movsl
push
cld
push
xor
aaa
xchg
lea
fimuls
pop
sbb
mov
in
xchg
out
ss
mov
outsl
addl
pop
enter
jns
jecxz
push
xor
mov
dec
cltd
clc
mov
scas
mov
pop
jnp
loop
cmp
sbb
jns
mov
mov
cmpsb
fists
mov
pop
cmp
ja
sahf
jl
rcrl
mov
cmp
in
xor
movsl
sub
dec
pusha
pop
push
mov
pop
jno
jl
in
scas
cmp
push
lahf
dec
pusha
jno
in
rolb
inc
stos
push
mov
dec
xchg
cwtl
add
lahf
push
sub
es
loope
pop
je
incl
pop
insb
pushf
subb
mov
loopne
inc
fistpll
ds
mov
mov
cmp
enter
andb
cmp
fs
call
push
mov
mov
lds
loop
movsl
pop
loope
insb
push
in
js
fbstp
sti
dec
and
mov
in
fwait
sub
jmp
stos
mov
mov
sbb
xchg
sbbb
lret
mov
add
xor
outsb
cmp
inc
mov
dec
mov
mov
inc
outsl
jbe
push
js
dec
imul
les
lret
cmpsl
add
dec
test
mov
mov
push
mov
dec
imul
mulb
out
jmp
add
xor
pop
sub
mov
cmp
dec
into
mov
and
adc
cmp
in
aad
mov
cmpsl
mov
pusha
stos
xchg
jp
cmp
inc
repz
out
push
insl
std
in
mov
stc
mov
and
clc
jae
jle
inc
mov
insb
adc
rclb
arpl
mov
jg
mov
xchg
mov
adcl
out
js
jbe
add
gs
fnstsw
sub
mov
lcall
pop
ljmp
cmp
enter
xchg
cmp
cmpsl
cmpsb
xchg
sti
mov
or
xchg
cwtl
cmc
sub
stc
push
jmp
sub
mov
fcompl
imul
cmpsb
mov
rolb
xchg
test
dec
notb
and
aas
mov
lret
pop
les
and
outsb
daa
xor
or
inc
iret
xchg
ffree
stos
je
push
and
add
xchg
sbb
sub
in
js
mov
lahf
sub
sub
cmp
inc
jne
aas
add
iret
testb
xor
jl
mov
mov
lock
sub
ret
mov
and
cmp
cld
cmpsl
sub
idiv
lahf
lret
popa
rcll
adc
adc
or
xor
sbb
cmp
inc
dec
mov
cmpsl
lahf
cld
fcmovnb
xchg
das
hlt
pusha
or
daa
inc
clc
push
mov
fsts
fldl
push
inc
fistpll
and
aas
rclb
clc
roll
addr16
std
mov
shll
jae
mov
ljmp
or
add
sbb
sbb
mov
adc
je
and
mov
pop
xchg
cmp
les
lds
xor
sarb
mov
sub
jmp
imul
out
push
cmp
dec
dec
les
pop
ds
xchg
inc
arpl
mov
add
push
mov
je
mov
loope
insb
out
inc
pop
add
loop
push
push
dec
popa
scas
mov
daa
jg
imul
jmp
int3
leave
call
xchg
cli
mov
sbb
cmpsb
pop
aaa
xchg
fdivp
adc
pop
fsubl
add
mov
enter
ret
test
outsl
cmc
sbb
aaa
repnz
cli
pop
or
push
lods
sub
pop
inc
jecxz
jno
and
shl
push
scas
in
out
mov
mov
mov
and
or
sub
lea
dec
xchg
push
cwtl
and
xchg
mov
jle
xor
sub
imul
ja
jecxz
cltd
push
popa
add
or
dec
xor
test
ds
test
shrl
nop
leave
popf
imul
push
xchg
pop
mov
dec
or
notb
and
loop
decl
daa
loope
mov
sbb
adc
add
inc
popa
jg
int
mov
lahf
fisubs
das
mov
xchg
mov
mov
int3
lret
shll
sti
push
mov
pop
adc
cmp
loop
je
pop
adc
sbbb
or
sub
notl
adc
ss
pop
adc
mov
call
dec
loop
stos
rcll
cld
pushf
push
rcrl
cs
test
add
cmpsb
xor
ret
test
cmp
mov
rcrl
std
or
cmp
push
push
ret
xchg
ret
add
push
fs
sub
cli
fildl
sbb
mov
push
xchg
add
jg
movsb
push
inc
mov
jmp
cmp
fnsave
pushf
add
sub
test
lret
js
sar
lcall
inc
loope
dec
xor
xorb
icebp
mov
xor
addr16
and
cld
xchg
jae
nop
add
mov
hlt
mov
jmp
xchg
mov
sub
clc
add
rclb
mov
data16
movsb
pop
stos
stos
movsb
sub
test
aaa
js
jle
fwait
roll
cld
pushf
mov
pop
loopne
dec
jbe
lahf
popa
imul
pop
push
imul
sbb
pop
adc
jne
sub
inc
push
and
sub
and
mov
sub
movsl
sub
test
mov
imul
enter
add
xchg
cli
add
pop
add
pop
adc
mov
lret
adc
in
pop
adc
sub
ds
mov
cmpsl
repz
in
test
adc
sbb
push
rcll
mov
dec
mov
int
int3
mov
mov
movb
jne
movsb
mov
dec
iret
cmp
mov
imul
aam
sahf
mov
daa
cmp
int3
and
inc
push
mov
mov
in
data16
andl
fsubrl
jo
notb
pushf
push
movsl
or
loop
dec
inc
dec
jbe
cmp
movsl
mov
cmc
fimuls
outsl
adc
mov
inc
imul
shll
mov
mov
int
cmpsb
xchg
jae
mov
ljmp
pop
or
int
mov
insl
sub
sub
cmp
push
inc
push
ffree
repz
add
mov
jne
pusha
into
addl
and
jl
jp
and
push
add
jo
lock
sbb
mov
pop
add
cmp
stos
jg
sbb
push
inc
or
daa
call
stc
clc
mov
in
jns
cmpsb
add
or
addb
dec
rcrl
or
enter
mov
fistpl
or
cwtl
or
jmp
fmull
lods
jp
pop
adc
and
add
loope
sbb
int3
mov
mov
subl
jg
sub
cmpsl
push
psadbw
nop
test
xchg
xor
jle
xchg
sbb
or
sub
orb
pusha
repnz
sub
es
addr16
xchg
subl
roll
jnp
arpl
sbb
push
sbb
xchg
test
jns
add
in
rcll
seta
fidivs
mov
pop
push
xchg
adc
mov
sub
sbb
cmc
sbb
nop
gs
mov
push
mov
lea
sub
sub
fs
xor
cmp
ret
scas
into
inc
jg
fdivrs
mov
xchg
pop
mov
push
and
fmull
or
mov
fstps
jecxz
in
xor
mov
mov
or
test
idivl
mov
lcall
jl
xchg
inc
es
xchg
int3
test
dec
mov
mov
mov
int
lcall
cmc
jl
cltd
out
loopne
int3
pop
dec
xchg
xlat
hlt
mov
jl
stc
mov
adc
imul
mov
xchg
inc
stos
loope
push
stos
push
mov
int
inc
inc
mov
xchg
notl
test
dec
popa
cmc
dec
scas
mov
aad
inc
adc
sub
xchg
std
push
das
jo
test
xor
lea
les
pop
push
dec
aas
cmc
mov
test
fs
rorb
hlt
flds
in
xchg
testl
mov
imul
cmp
mov
mov
adc
pushl
icebp
jns
sbb
lock
popf
push
inc
or
out
lcall
js
mov
pop
mov
insl
pop
mov
mov
jmp
loopne
andl
andl
xchg
pop
cmp
and
and
loopne
pop
cmp
int
outsl
mov
stos
adc
je
sahf
clc
jnp
ljmp
pop
push
xchg
les
mov
xchg
sbb
jae
push
mov
fcomp
jl
mov
test
dec
and
enter
js
xor
lods
lret
sbb
movsl
lods
push
in
or
sahf
and
pop
enter
and
scas
std
jnp
xor
ficoms
fmull
sbbl
aas
movsl
int
lcall
int
sbb
jns
mov
test
xor
add
decb
sbb
xchg
pcmpgtd
jecxz
sbb
loope
stc
push
and
lods
cmp
mov
cmpb
and
sbb
and
or
subl
mov
in
mov
mov
adc
rcr
lods
in
jbe
jl
sti
add
jmp
dec
xor
xor
mov
jne
mov
or
mov
lahf
mov
mov
insl
push
push
mov
mov
ljmp
imul
adc
fidivrs
or
jne
mov
ficomps
cmp
enter
or
add
daa
and
cmp
mov
arpl
mov
jle
jo
imul
mov
xchg
daa
call
test
dec
iret
pop
repz
inc
in
mov
add
mov
jae
jo
mov
lods
daa
int
and
xchg
out
jns
loope
or
adc
dec
jnp
xor
mov
dec
mov
mov
loop
stos
sub
xchg
mov
outsb
stos
imul
pop
jae
adc
mov
pop
es
gs
push
push
pushf
inc
pushf
cmp
int
pushf
and
xchg
push
pop
push
stos
fstps
js
mov
add
inc
sbb
xchg
sbb
test
inc
cmpsl
adc
pushf
jns
ljmp
stos
add
xchg
mov
push
pop
fldenv
repnz
ret
out
adc
mov
stc
xchg
add
or
push
test
sbb
push
and
shrb
pop
push
jae,pt
pop
dec
in
enter
rol
push
xlat
sub
shrl
ja
or
mov
pop
xchg
test
add
xor
roll
incb
pop
ret
xor
loopne
int
xchg
adc
adc
js
mov
mov
decl
inc
xor
xchg
inc
fwait
rorb
xor
imul
xchg
addr16
adc
push
out
in
ret
jp
popf
ljmp
ret
dec
out
xor
xorb
push
sbb
hlt
dec
ficomps
sub
inc
mov
aam
xchg
mov
dec
sbb
add
roll
ss
popa
mov
mov
or
jp
xor
sbb
ficomps
loope
lahf
test
or
faddl
aaa
dec
jmp
pushf
aas
testl
sbb
ret
mov
sub
movsb
fucomi
xchg
jne
test
lds
outsl
jmp
bound
daa
addr16
sub
push
mov
imul
adcb
cld
jp
jmp
and
push
xchg
fdivr
inc
cmc
push
and
in
dec
inc
jbe
push
pop
pop
jge
stos
pop
jp
pop
or
mov
lods
sub
aas
pop
mov
insl
out
sahf
cs
jnp
fistpl
push
in
cmp
call
mov
pop
into
add
sti
addb
popf
inc
add
jmp
sub
es
mov
mov
mov
pop
or
sbb
das
mov
xor
mov
sub
sbb
mov
movsb
inc
push
fwait
orb
aaa
adc
push
inc
test
hlt
add
ror
or
pop
lea
push
out
cltd
xor
arpl
js
movsb
pop
out
call
das
sub
dec
movsb
jge
xor
arpl
cwtl
pop
pop
mov
insl
mov
leave
add
arpl
mov
mov
mov
xchg
add
xchg
sub
or
xor
add
pusha
shrb
jnp
xor
int3
pushf
addr16
or
shll
sti
mov
xchg
imul
inc
sbb
ret
adc
fs
sub
addr16
and
xor
mov
int3
insb
lds
or
repz
std
pop
ljmp
push
xor
xchg
popf
cli
sti
add
arpl
in
test
in
pop
ja
out
adc
sub
jnp
scas
aad
repz
sti
xchg
sub
test
insl
mov
jecxz
inc
cwtl
mov
jecxz
clc
repnz
inc
in
sbbb
mov
iret
mov
ror
insl
aaa
aaa
mov
fnsave
mov
imul
xor
adc
inc
nop
rorb
cmc
fstl
inc
xchg
testl
mov
xchg
xor
mov
ja
fidivs
push
push
add
dec
pop
xchg
loopne
mov
cli
mov
pop
cmp
call
pop
or
ja
inc
mov
popa
rcl
out
fcmovnb
subb
add
mov
and
not
les
icebp
dec
push
cmp
jbe
lea
dec
imul
mov
call
or
sub
jecxz
or
lds
pop
jecxz
aad
out
xor
or
js
nop
pop
movsb
and
xchg
repz
sub
jmp
adc
mov
push
xchg
idivl
cmpsl
pop
sub
jl
rcll
les
in
dec
mov
mov
lock
pop
scas
xor
jecxz
adc
shlb
insl
fildll
add
mov
pop
mov
hlt
adc
adc
cmpsb
stos
lea
lahf
out
rcrl
test
out
cwtl
mov
decl
mov
mov
and
sbb
and
xor
cmp
sub
pop
scas
sti
mull
sahf
sahf
jns
pop
xlat
or
cmp
jl
cmp
push
sbb
adc
es
inc
stos
jl
mov
sbb
movsl
sub
push
or
or
fucomip
xchg
fsubrs
mov
adc
std
stos
arpl
loopne
add
or
mov
movsb
lock
sub
cmp
lret
out
shlb
xchg
cmp
pop
in
mov
push
repnz
mov
or
rol
jne
fildll
mov
adc
shll
cmp
add
mov
add
xor
lahf
mov
cmp
ja
bound
je
push
mov
add
or
scas
adc
out
or
mov
xorl
pop
add
das
add
mov
xchg
mov
xchg
fwait
sti
icebp
and
out
dec
xor
add
sahf
aam
jmp
and
mov
add
adc
pop
bound
inc
jmp
dec
and
jg
mov
lods
mov
daa
insl
bnd
mov
xchg
icebp
iret
mov
aam
xchg
in
xchg
pop
adc
jns
adcl
call
xchg
and
or
sub
shlb
xor
ss
pop
sbb
cs
fiaddl
loope
ret
xor
add
sbb
gs
aaa
aad
pop
push
sub
sub
test
imul
clc
dec
imul
test
jns
test
loop
or
shlb
jbe
imul
dec
jbe
fstl
cmp
xchg
add
dec
push
sbb
fs
pop
sub
mov
jmp
jno
dec
in
mov
cmp
stc
cltd
dec
insl
jmp
xor
scas
push
mov
icebp
or
call
xchg
xchg
and
cld
pop
clc
loopne
or
and
aas
push
inc
jb
divl
push
jo
fidivl
dec
lret
sbb
adc
jl
enter
jmp
pushf
ja
loopne
int
xchg
loop
push
dec
ljmp
push
sti
sub
sub
xor
or
dec
mov
adc
sahf
pop
mov
mov
jne
mov
push
in
xor
push
cmp
pop
xor
ret
pop
sub
xchg
cmp
and
cmp
dec
repnz
dec
push
sbb
adc
pop
sbbb
inc
and
pop
jg
cmpl
andb
aam
sbb
xchg
jmp
in
pop
rcl
movsl
ss
aas
inc
cld
or
out
aad
pop
jecxz
jno
pushl
and
rcrb
rorb
dec
or
out
sbb
cmpsb
xchg
in
loope
xchg
fwait
inc
scas
std
xchg
inc
xlat
mov
inc
ja
stos
lret
jo
cs
out
call
dec
cmp
daa
lahf
ret
dec
add
xlat
and
xchg
xchg
out
out
mov
addr16
push
mov
xor
and
cltd
rcrb
cli
jne
mul
sahf
aas
aaa
add
mov
add
loope
mov
sub
xor
popf
stos
es
daa
add
clc
mov
gs
repz
subb
jle
jle
jle
xor
pop
rolb
jp
pop
pusha
cmc
test
jmp
out
rcrb
pop
mov
pushf
cld
pop
mov
ss
push
mov
cmp
pop
pop
xor
out
mov
cli
ja
xor
inc
lods
xchg
lds
frstpm(287
scas
sbb
cmpsb
lock
std
dec
cltd
lods
movsb
pop
pop
xor
popf
push
push
mov
xor
rcll
inc
fs
test
push
inc
call
mov
call
and
enter
sub
rcll
rol
cmc
mov
inc
inc
das
xchg
loop
pop
ret
xor
xchg
pusha
sub
inc
loop
sahf
lea
out
xlat
dec
push
mov
pop
push
and
push
push
xor
in
xchg
fsubs
ss
fbstp
subb
cmp
and
rorb
rep
stos
lret
jge,pn
pop
cmpsb
push
and
sbb
sub
push
or
mov
test
mov
xor
add
insl
mov
sub
leave
sub
outsb
fs
pusha
ja
dec
int3
inc
aam
push
jns
andb
std
push
xlat
jae
push
mov
fadds
sti
cmp
jns
clc
cmp
push
out
fs
add
dec
mov
adc
test
outsl
sbb
sbb
add
cld
xor
sti
lods
ja
xchg
insl
mov
mov
mov
pushf
test
ds
jge
jge
dec
mov
in
pop
xor
mov
inc
fildll
incl
pop
sbb
pop
jnp
icebp
xor
lods
lds
int3
paddd
sub
ds
lods
enter
test
int
adc
and
cmpsl
mov
popf
dec
mov
insb
mov
lcall
push
mov
dec
mov
inc
outsb
sub
pop
fwait
test
stos
push
mov
dec
shl
add
mov
mov
movsb
arpl
jecxz
in
fidivrs
push
xchg
sbb
jb
lret
les
adc
jp
push
out
lock
mov
in
xchg
cmpsl
inc
push
pop
inc
in
stos
popf
xchg
push
pop
fcomps
mov
into
into
fdivrs
ljmp
and
cmp
into
push
xchg
push
stos
mov
mov
fstp
arpl
fdivrs
leave
jae
xor
aam
jge
lock
lea
inc
mov
sbbl
hlt
aad
mov
xor
sub
jne
and
jmp
stos
pop
and
push
clc
jecxz
rcl
aad
aam
test
cmp
xor
mov
sbb
insl
out
push
xchg
pop
test
pusha
test
cltd
or
ds
lcall
inc
lret
orb
arpl
inc
xchg
clc
shrb
add
jo
js
or
jno
mov
sahf
aas
imul
stos
gs
into
adcl
xchg
push
sbb
cmp
das
leave
es
adc
push
hlt
or
jmp
jbe
xchg
jno
mov
addr16
push
in
pushf
lret
mov
inc
and
stc
imul
lea
jo
pop
dec
lock
push
fwait
mov
test
ret
aad
aam
hlt
xchg
xor
das
add
inc
push
iret
mov
int
sub
mov
or
fistpl
scas
xchg
outsl
repnz
jle
add
aam
jo
sub
ret
bound
and
sub
adc
pop
pop
add
cld
mov
iret
scas
in
test
pop
mov
iret
mov
inc
jp
lea
jnp
inc
ds
sarb
pop
lahf
xchg
jle
xchg
enter
mov
enter
bnd
xchg
xor
cmp
and
adc
loope
mov
scas
push
js
ds
or
rcll
sbb
add
stos
subb
xlat
bound
adc
push
inc
dec
int3
push
dec
xchg
lcall
out
pop
xchg
and
jae
jno
cmp
and
lea
mov
push
cmp
ljmp
pop
or
js
pop
inc
ja
and
ss
sbb
dec
push
xchg
xor
rclb
enter
adc
adc
xor
pop
cld
or
jmp
sbb
jb
testb
pop
js
add
orl
into
xor
iret
adc
xor
fwait
outsb
insl
cmpsl
cmp
push
mov
int
or
xor
test
mov
pop
jl
jo
pop
fs
jle
js
ret
movsl
sbbb
mov
iret
xor
leave
mov
and
dec
adcl
scas
fisubl
fs
mov
pop
pop
lret
rcll
xchg
or
cmp
arpl
nop
bound
mov
jmp
mov
repnz
and
insl
xchg
jg
cmp
mov
sub
movsb
inc
arpl
dec
cli
xchg
mov
movsl
in
and
ret
loope
mov
cmp
adc
and
jmp
or
inc
lret
test
pop
lret
xchg
push
xchg
cs
sbb
arpl
icebp
xor
in
sub
push
outsl
lods
inc
stos
add
fdivr
dec
in
into
js
mov
loop
in
jne
arpl
xor
mov
das
inc
push
or
add
jecxz
or
xchg
insb
out
cmc
and
sbb
bound
dec
lea
jmp
jae
or
and
jne
push
lret
das
push
cmp
sbb
dec
aam
pushf
push
push
in
sbb
xchg
adc
mov
sub
dec
mov
push
xchg
adc
push
sub
mov
lret
cmp
mov
bound
divl
ficomps
addl
gs
std
rcll
jg
loopne
mov
cli
xlat
daa
cwtl
adc
sbbb
add
fidivs
jns
and
scas
clc
mov
sti
push
adc
pop
outsl
aaa
in
ds
ljmp
mov
ljmp
or
bound
sbb
xchg
cltd
or
pushf
mov
fistl
scas
movsb
sub
push
adc
aaa
cmp
mov
pusha
es
xchg
arpl
and
ficoml
jmp
ja
fmulp
push
push
cmpb
fcompl
loopne
enter
cwtl
push
add
adc
push
addr16
push
div
push
std
xchg
cmpsl
inc
pop
jmp
mov
dec
adc
fwait
sahf
and
pop
jle
clc
sub
mov
rorb
imul
mov
jp
aam
and
repnz
and
sub
dec
lock
movsl
ds
pop
test
lcall
inc
jecxz
sub
fldt
hlt
xchg
jne
mov
inc
in
mov
mov
fcom
loop
nop
rorb
in
cmp
and
ret
mov
inc
fcomps
mov
ljmp
add
bound
daa
dec
in
ds
stc
adc
out
imul
ret
pusha
push
fwait
aas
pop
add
out
or
ret
push
test
and
ret
out
stos
xchg
sub
std
sbb
adc
and
xor
sbb
jp
push
loope
ljmp
loop
push
arpl
inc
int
cmp
mov
ljmp
addr16
ljmp
mov
fisubrl
pop
add
addr16
mov
mov
mov
push
cld
push
movb
adc
inc
test
cmpsb
xchg
hlt
arpl
push
loope
cltd
lahf
subps
cwtl
dec
setns
mov
lret
jbe
inc
push
jne
icebp
pop
mov
cmp
dec
std
test
dec
jmp
pop
jge
mov
mov
fwait
test
nop
xchg
outsb
in
inc
outsl
jmp
dec
add
les
add
enter
sbb
imul
inc
test
jmp
sub
push
pop
jb
mov
inc
mov
into
jl
xor
push
xchg
fwait
insl
sbb
pusha
xchg
add
cmpsb
test
add
mov
aas
and
mov
fwait
add
or
or
cmp
outsb
test
dec
cld
out
mov
pop
jle
push
cmp
push
adc
push
aaa
and
shll
sbb
mov
mov
mov
sbb
pop
nop
mov
inc
jp
cltd
cmp
cmp
lods
js
gs
cmc
scas
clc
jl
cmp
lcall
into
adc
mov
int
cmp
fucomip
insb
mov
push
negb
ret
imul
sbb
js
xchg
xor
dec
addl
fcoms
ficompl
pop
mov
xchg
pop
fst
imul
fcomp
mov
scas
add
aas
pop
test
roll
pop
sub
scas
push
sbb
repz
push
aam
dec
push
pop
cmc
negb
cmp
inc
icebp
pop
mov
add
jp
mov
shr
nop
sarb
jmp
cli
pop
popa
sbb
out
adc
mov
das
inc
lret
in
cmpl
sbb
gs
out
xor
repz
popf
sub
frstor
out
and
lret
dec
fiaddl
scas
adc
mov
js
dec
or
dec
int
inc
fwait
rcrl
sub
test
movsb
or
mov
cmp
std
test
pop
mov
or
imul
pushf
ss
sub
cmp
jge
das
cmp
sbb
cmp
imul
iret
jnp
and
pop
imulb
fimuls
or
push
lret
filds
fdivrl
mov
aas
sbb
movsb
dec
xor
repnz
cld
insl
push
fimuls
incb
ret
mov
imul
mov
jnp
jno
mov
rcrb
xor
jg
xchg
and
mov
xchg
push
jae
adc
inc
sti
xchg
xor
jns
jae
test
inc
add
aam
jae
cmp
fmuls
or
push
adc
mov
mov
out
das
cld
sub
es
xor
dec
mov
mov
xchg
fistpll
mov
fwait
dec
cmpsb
mov
sub
int3
daa
cmp
xchg
cmpsl
call
push
mov
in
push
test
scas
stos
cld
cmp
push
int
test
and
xchg
mov
xchg
daa
shlb
mov
sub
mov
adc
fildll
adc
mov
sub
adc
fs
sbb
sti
mov
lock
add
fstl
and
rolb
insb
adc
lock
jmp
xchg
je
inc
push
mov
mov
dec
push
test
xchg
and
lahf
popf
push
add
push
addb
das
loope
ja
out
jne
jns
or
rorb
mov
xchg
insl
lods
push
fsubrs
xor
out
insl
test
loope
data16
sbb
xor
sub
inc
dec
jno
or
aad
icebp
daa
icebp
add
pop
ficoml
pop
or
or
or
push
pushf
sbb
addr16
xor
call
andl
fwait
mov
jecxz
sub
movsb
xor
or
mov
cmp
inc
jns
lahf
lock
jnp
pop
add
xlat
test
pop
mov
into
mov
movsb
mov
iret
dec
lods
adc
mov
outsl
sbb
inc
cld
cli
dec
bound
jg
jno
fdivs
fwait
push
jge
das
test
xchg
xchg
dec
lahf
add
ss
or
jbe
adc
leave
adc
push
rol
mov
push
loope
jmp
out
in
sbb
pop
xor
inc
jo
in
addr16
fmul
inc
cmp
out
push
scas
xchg
movsl
ljmp
addr16
sar
andps
mov
xor
jp
mov
out
push
aas
add
in
icebp
lahf
push
mull
inc
sub
adc
mov
inc
lcall
add
add
out
or
aas
pop
test
aam
or
jg
xchg
xchg
stos
rcrb
mov
aaa
cmp
and
mov
mov
sub
prefetchnta
sahf
incl
push
jbe
outsb
popa
sub
testb
pop
insb
push
pop
testl
cmp
mov
sub
cmp
dec
mov
mov
roll
addr16
sbb
shlb
dec
in
jb
js
and
filds
jmp
mov
jge
sbb
cmp
dec
xchg
jno
es
out
mov
cwtl
lret
push
mov
les
mov
test
aad
cmp
jmp
in
adc
pop
adc
push
pop
pop
dec
das
mov
insb
push
aas
dec
es
lds
test
xchg
sbb
ss
int3
fildll
pusha
pop
pop
jbe
xor
jmp
add
cwtl
insb
hlt
out
push
daa
dec
neg
dec
dec
sbb
movsl
ljmp
pop
mov
jo
sahf
shll
dec
hlt
insb
push
out
movsb
or
xchg
fsubrs
or
mov
icebp
mov
dec
adc
adc
inc
sub
ss
or
int
push
mov
mov
jecxz
sub
adc
mov
xor
mov
lods
jae
xor
shrb
xchg
jge
cli
mov
sub
cs
mov
cli
add
test
rorl
lahf
sub
lods
jns
mov
or
sub
ljmp
adc
add
jo
sete
jnp
out
icebp
addl
jne
fwait
pushf
adc
pop
adc
les
jle
jnp
aad
push
jno
mov
sub
or
loope
outsl
push
andb
dec
into
push
aad
divb
call
orb
in
sbb
out
ficomps
hlt
push
and
rcrb
xchg
push
adc
fcmove
push
or
aas
sub
jmp
add
ret
xlat
mov
ja
adc
pop
sbb
inc
cmc
xor
dec
or
mov
push
or
in
pop
pop
popa
mov
xchg
add
inc
pop
dec
inc
in
jns
out
sub
xchg
jns
jmp
loopne
and
push
lds
movsl
inc
and
adc
sub
inc
xchg
cltd
test
inc
jne
test
jmp
or
xchg
push
xor
push
scas
decl
and
adc
add
pusha
cmp
and
int
popa
mov
call
nop
fcom
cld
push
movsl
out
daa
pop
add
stos
lret
jno
mov
pop
xchg
test
inc
jne
jne
lock
mulb
mov
xor
mov
push
inc
mov
mov
stos
adc
xor
xchg
js
pop
andnps
and
mov
aad
dec
pop
divl
shlb
pop
mov
and
int
jge
jno
sub
mov
jae
scas
or
mov
lret
insl
popf
cmp
lahf
add
imul
adcl
fwait
test
adc
inc
cmpsl
and
cmp
fsts
inc
or
fs
add
mov
lds
mov
sbb
jns
outsb
jp
std
mov
or
or
mov
mov
mov
jl
fldcw
aaa
mov
int3
jmp
jp
popf
mov
lahf
repnz
cmp
xor
fcompl
xchg
pop
aam
push
mov
xchg
lods
repz
jecxz
loope
and
dec
cmp
inc
icebp
push
stos
mov
fmul
int
fwait
pop
aam
jb
mov
pusha
jb
push
not
and
pop
mov
insb
inc
jno
cmc
mov
imul
jg
mov
ror
jl
mov
and
andl
mov
in
icebp
int
sbb
call
lods
jecxz
sub
int
xchg
lahf
data16
sbb
cmp
mov
repnz
xlat
jb
outsl
push
dec
dec
aaa
lods
vpcmpeqb
add
adc
inc
leave
xchg
out
call
cmpsb
add
cs
push
or
pop
or
mov
push
jmp
ja
dec
call
push
in
inc
mov
xchg
and
aam
xlat
jg
addr16
lock
mov
orb
lods
add
mov
rcr
adc
stos
pop
inc
pop
inc
sub
xor
inc
cmp
sub
fcomi
pop
xor
push
cmp
dec
addl
orb
fcoml
push
int
fstpl
pop
dec
inc
mov
test
jbe
inc
test
jle
sub
adc
xor
jne
push
enter
jae
aas
sub
fidivrl
xchg
fcmovnb
fwait
mov
xchg
cmpsb
sarb
imul
mov
xchg
fst
out
pop
or
out
stos
fs
lock
inc
pop
and
xchg
jno
lret
test
mov
jecxz
add
or
or
scas
lock
xchg
sbb
lcall
lahf
add
les
xchg
dec
and
and
mov
sub
sub
repnz
fcomps
add
bound
add
and
int3
add
test
jmp
mov
lods
cmp
popa
dec
je
movsl
inc
iret
jbe
std
dec
ror
add
push
sbb
mov
aad
lahf
xchg
decl
or
xor
sbb
shll
push
mov
je
mov
loope
xor
jp
xchg
iret
call
iret
or
xchg
clc
hlt
xor
subl
cmp
xchg
push
push
imul
inc
dec
dec
cmc
ret
xchg
lret
and
mov
je
mov
push
loope
mov
int3
push
jle
push
clc
inc
pushf
fdivrl
sub
dec
cltd
jb
and
or
or
mov
outsb
nop
lret
pop
mov
loop
or
stc
aaa
jmp
pop
adc
add
xchg
out
aad
adc
push
std
and
mov
xorps
pop
pop
sub
xor
repz
mov
mov
or
adc
push
mov
gs
repz
mov
sbb
cmp
or
test
repnz
pop
mov
call
push
insl
les
shr
shl
test
pop
ds
imull
inc
and
idiv
imul
fsts
dec
stos
push
add
mov
pop
call
adc
inc
xchg
cwtl
das
xor
andb
mov
imul
and
adc
add
mov
cltd
sbb
popf
aaa
cmp
subl
add
in
mov
cli
pop
mov
enter
out
fistpll
divl
and
sahf
es
popf
lcall
jne
in
iret
xor
sbb
mov
stc
cmc
lock
mov
inc
nop
and
pushf
loopne
mov
lds
sub
and
aam
cltd
addr16
mov
jle
ljmp
repz
and
divb
dec
pusha
inc
and
dec
fwait
mov
repnz
sub
out
cld
sar
mov
mov
adcl
pop
mov
test
ds
adc
pop
sbb
xchg
out
xchg
test
pop
pop
xlat
push
add
push
gs
jl
adc
push
stos
mov
nop
pop
inc
push
or
dec
out
lret
sti
fadd
inc
int
test
add
cmp
stos
incb
dec
aad
inc
xchg
dec
push
es
pop
pop
adc
aaa
jo
and
out
mov
sbb
xchg
mov
sbb
xor
pop
jnp,pn
mov
popf
in
or
fcomps
jg
aas
inc
call
daa
mov
or
or
dec
cmpsb
or
jl
loopne
fldenv
adc
iret
call
adc
inc
andl
push
pop
lods
addr16
inc
hlt
out
int3
in
pop
leave
loop
pop
je
idivl
mov
fnstsw
es
pop
sbb
jb
scas
jg
jnp
enter
je
rol
scas
sbb
loop
jb
dec
lods
inc
int
aad
jle
jge
xchg
repz
fildll
gs
push
or
push
mov
mov
cmp
cltd
or
cmpb
push
data16
adc
mov
and
inc
xor
and
lea
cmpxchg
nop
cmpsl
mov
xor
test
dec
dec
and
dec
sub
int3
sti
out
lcall
int
mov
aam
out
sbb
cs
test
out
stos
pop
call
mov
add
jnp
mov
inc
mov
aaa
add
dec
addr16
adc
or
push
addr16
mov
push
lahf
lahf
push
or
adc
loopne
outsb
push
or
shld
pop
arpl
xchg
mov
xchg
mov
call
mov
dec
fnstcw
lcall
nop
mov
notb
jnp
lea
insl
or
call
adc
ficompl
mov
xchg
add
jb
push
iret
ss
adc
pop
mov
fsubrs
daa
xor
cmp
sub
bound
ffreep
dec
nop
iret
inc
mov
push
fstp
pop
and
daa
push
mov
sbbl
sbb
pop
mov
nop
test
xchg
or
xlat
xor
js
inc
cmp
sub
jnp
mov
in
outsl
icebp
mov
xor
inc
lock
and
mov
sti
jno
leave
push
pusha
leave
add
incb
dec
push
mov
enter
and
ss
mov
lods
clc
or
xor
cmp
mov
adc
dec
xor
roll
stos
mov
negl
and
into
push
ljmp
and
xchg
fistl
cltd
xor
aam
lds
inc
push
clc
lods
cld
and
fcoms
fwait
lods
insb
ficomps
jp
pusha
push
or
in
repnz
and
xlat
test
sbb
leave
ret
dec
lods
push
enter
dec
subl
lcall
in
fisubl
imul
notl
xchg
in
mov
mov
xchg
jp
adc
repz
jmp
aad
dec
gs
pop
mov
sbbb
and
and
xchg
jecxz
mov
pop
rorb
xchg
add
lods
repz
push
xlat
movsb
push
sub
dec
mov
mov
cmp
ja
mov
and
fwait
and
fs
mov
and
push
xchg
mov
sub
mov
pop
jge
xchg
inc
ljmp
rorl
xchg
add
pop
dec
dec
aad
or
rorl
mov
jmp
or
inc
imul
or
and
fidivrs
mov
dec
xchg
fisubl
push
stc
push
lahf
push
jbe
mov
fwait
jecxz
daa
jecxz
popf
dec
cmp
ret
mov
addb
fdivl
lret
scas
testl
ret
aaa
mov
shr
mov
xchg
outsl
and
fisttpll
dec
movsl
mov
mov
cmpsb
add
test
xchg
push
mov
inc
stos
pop
cmp
repnz
pop
adc
dec
cli
movsb
or
jne
pop
icebp
test
in
pop
jmp
cmp
sti
jno
adc
cwtl
xor
addr16
sub
jecxz
cmp
mov
pop
fisttpll
sub
xor
stc
scas
xor
lods
cmp
or
cmc
fwait
mov
popf
jbe
xchg
sbb
push
ficoml
mov
inc
mov
add
add
out
pop
add
xor
jmp
imul
mov
jmp
push
adc
decl
outsl
fmul
sbb
mov
add
rcll
push
call
mov
int3
fistpll
cmp
mov
sbb
cli
ret
outsb
jle
icebp
inc
shrl
adc
mov
fistps
mov
popa
cwtl
inc
sub
add
jle
xchg
int
scas
jmp
outsl
std
je
roll
shll
icebp
sub
rcrb
jae
or
xchg
push
ret
icebp
stos
mov
negb
push
jmp
hlt
mov
call
xor
or
sub
lret
adc
mov
lods
push
rclb
cs
mov
mov
lret
mov
cs
and
push
aad
push
test
or
ret
je
xor
push
mov
popf
int3
pop
xor
add
incl
cli
scas
icebp
sub
pop
xchg
xlat
lods
and
mov
dec
pop
xor
xor
stos
mov
lock
xchg
xor
rorb
inc
cmc
or
inc
cltd
iret
sbb
inc
popf
inc
or
test
push
and
dec
xchg
in
ret
aam
notb
divb
leave
lods
pop
daa
push
add
daa
mov
pop
gs
stc
leave
js
xor
dec
stos
lds
push
ljmp
pushf
push
inc
outsl
rol
sub
cs
sbb
in
test
movsl
nop
call
aam
mov
mov
es
fwait
sbb
inc
jg
dec
pop
ficoml
test
std
xchg
cwtl
add
adc
inc
outsl
sahf
fs
mov
fwait
or
xrelease
push
dec
addb
adc
xchg
jae
dec
scas
add
ret
jle
enter
push
dec
dec
inc
fs
scas
mov
xchg
adc
inc
dec
or
ljmp
iret
bound
xchg
and
aad
dec
mov
cmp
inc
jg
push
movsb
imul
jnp
bnd
add
pop
jmp
mov
arpl
sub
or
insl
mov
adc
mov
sbb
ss
inc
cli
push
or
lret
fsubrs
jo
dec
fisttpl
sub
loop
and
shlb
cmc
out
imulb
scas
fildl
mov
loope
imul
je
ficoml
pusha
lret
or
lods
mov
pop
imul
jns
and
orl
xchg
sub
nop
sbb
sub
std
ds
pop
mov
data16
shlb
mov
stc
outsl
jecxz
stos
loop
aam
mov
jne
adc
and
pusha
mov
int3
inc
imul
fiadds
sub
and
jmp
or
dec
mov
mov
faddp
push
mov
jnp
mov
add
rcrb
jge
test
dec
out
and
es
push
sbb
add
sbb
and
pop
popf
inc
dec
inc
test
pop
push
sub
sub
adc
ss
test
test
jnp
movsb
outsl
test
ljmp
mov
or
movl
mov
xchg
add
pop
mov
aaa
or
xor
pop
sub
dec
sub
outsb
cmpsl
test
fcompl
dec
pop
loope
test
push
fimull
cmp
test
fstps
out
incl
xor
movsb
addr16
dec
repnz
aaa
aas
das
add
mov
fnstsw
xor
mov
cmc
js
cmp
icebp
fnstenv
push
xorl
js
push
insl
test
mov
mov
scas
inc
pop
cmp
adc
sbb
mov
mov
sub
mov
jle
popa
sub
in
dec
or
nop
ret
out
xor
aam
pop
dec
inc
daa
mov
adc
pop
stos
shrl
out
in
push
mov
repnz
jnp
ficomps
dec
xor
pusha
fstpt
mov
mov
jl
dec
jnp
lcall
test
das
pop
mov
in
cltd
mov
aas
pop
leave
or
xlat
orl
inc
xchg
test
or
mov
mov
inc
add
xchg
push
stc
fisubl
cli
mov
xchg
jb
test
pxor
inc
adc
lahf
aam
xor
inc
test
jp
push
add
pop
loopne
xchg
test
out
xlat
push
js
cltd
stos
pop
push
or
test
cld
push
add
jbe
fwait
cltd
mov
sbb
xchg
rcr
jnp
or
fwait
pop
int3
gs
xor
test
cmp
add
pop
incb
or
sbb
in
aas
sti
das
adc
lret
push
sub
push
rcrl
outsb
mov
stos
jge
mov
and
fwait
and
push
mov
in
mov
xchg
int
fwait
clc
push
ret
add
shl
cmp
sbb
cmc
or
rolb
inc
sbb
ret
add
dec
adc
es
aad
jle
xchg
mov
inc
in
inc
ret
mov
popaw
incw
loop
adc
lcall
ja
test
sbb
mov
jae
xor
out
repz
inc
sub
ja
xor
cmp
stos
test
mov
or
mov
xorb
cmp
rcrb
push
in
test
dec
or
nop
fisttpll
call
dec
int3
mov
push
cmp
call
mov
sbb
cmp
xchg
sub
sub
add
push
sbb
xlat
sbb
jns
cld
ljmp
jle
inc
add
mov
out
fdivrs
sti
push
adc
rcrl
cmp
je
call
out
dec
dec
or
dec
arpl
out
mov
add
mov
mov
xchg
fwait
dec
lret
sub
out
imul
pushf
cmp
addb
xor
add
add
or
jge
jno
aad
xchg
or
mov
sub
sbb
mov
clc
out
leave
cmc
push
pop
cwtl
mov
sbb
loopne
inc
dec
lahf
arpl
jnp
lods
add
dec
push
jne
orb
pop
sti
loopne
mov
fisubl
cmp
and
imul
xchg
scas
sub
and
dec
mov
test
adc
lods
pop
dec
into
push
pop
lods
xchg
clc
loopne
test
or
mov
rep
jmp
pop
xchg
repnz
shl
fdivrl
out
push
je
stos
or
les
shlb
push
cs
xchg
cmpsb
jmp
sti
out
test
or
lret
push
xchg
fstl
fwait
push
outsb
js
js
mov
sbb
lret
out
sti
je
cmc
add
imul
and
dec
lahf
jl
dec
cmp
and
leave
mov
xchg
lret
sub
mov
popf
aaa
xor
jle
fdivr
aaa
inc
imul
aam
stc
pop
mov
aaa
cwtl
push
sub
push
and
mov
dec
into
mov
lcall
rcll
mov
stos
es
into
pop
xor
inc
cmc
lds
inc
push
imul
mov
pop
in
aaa
loop
bound
pop
or
and
xchg
cmp
out
out
dec
mov
popa
mov
jecxz
div
into
add
scas
push
mov
ficoml
adc
test
pop
dec
lcall
inc
ljmp
and
enter
gs
test
ficoms
mov
or
pop
and
je
cmp
fwait
lods
pop
sub
das
and
lret
sti
mov
adc
or
xor
insb
add
add
mov
sbb
add
and
jne
icebp
mov
jp
push
mov
hlt
insb
fisttpl
adc
cld
adc
stos
jg
pop
xchg
xchg
mov
movsl
sbb
jnp
mov
push
rcrb
inc
inc
mov
outsb
das
adc
fidivl
xchg
jge
iret
pop
lret
xchg
add
out
mov
nop
out
adc
daa
mov
aad
mov
mov
fwait
dec
mov
and
sub
ret
sbb
adc
or
std
lret
sbb
or
mov
out
push
cltd
mov
push
lea
popa
jnp
cmp
adc
stos
xor
inc
cmp
sub
icebp
ss
shrd
inc
in
or
sub
nop
cmp
loope
pop
mov
lret
shll
pop
sub
mov
cmp
mov
popf
add
sub
ret
lds
std
jo
repz
sub
pop
aas
dec
jp
fldenv
mov
orl
inc
in
mov
je
and
in
aam
pop
jge
in
pop
mov
pushf
xor
jp
and
mov
idivb
sahf
outsl
jae
mov
mov
dec
xchg
shr
push
jl
in
fstl
es
sub
mov
pop
test
outsl
nop
mov
jno
insb
fwait
loope
lods
fsubrl
rcll
cmp
jbe
push
mov
push
aam
mov
popf
xor
in
cmp
push
testl
bound
sbb
sbb
in
sahf
jle
xor
cld
jb
subb
cmpsb
fbstp
pushf
push
cmp
clc
lahf
cmpsb
ror
hlt
inc
loope
adc
sub
jg
mov
sbb
jle
orb
sarl
mov
lret
gs
lea
and
xchg
add
js
and
jae
fs
adc
mov
out
roll
push
push
xchg
shrl
pop
xor
push
push
jb
sbb
adc
or
inc
popf
jbe
adc
loope
aas
jecxz
jno
sub
add
rclb
push
mov
ss
sbb
adc
call
leave
leave
js
sub
addr16
testb
jae
push
jns
shll
add
jnp
cmpsb
adc
insl
into
mov
je
std
cmp
fdivr
adc
jle
cmp
stc
mov
test
jp
ret
mov
mov
fstps
push
outsb
inc
roll
pop
lods
xchg
add
rcr
mov
jg
fsubl
push
dec
mov
xor
sub
aaa
scas
sbb
outsl
mov
push
xor
sub
inc
sub
sub
enter
dec
jle
mov
leave
mov
stos
test
xchg
repz
mov
xchg
dec
cmpsb
fsubrl
push
pop
imul
push
scas
outsb
jp
cmc
pop
test
push
mov
mov
sub
dec
xchg
lahf
push
cmp
test
sahf
dec
sarb
scas
pop
test
lock
mov
sub
imul
jmp
stos
or
movsl
sub
push
adc
dec
inc
clc
xchg
adc
roll
cli
repz
icebp
mov
bound
inc
dec
inc
fstpt
mov
shlb
outsl
daa
insb
jbe
cwtl
cli
cmp
cmpsb
push
mov
mov
lahf
inc
js
jp
and
enter
stos
xor
mov
sbb
mov
das
int
loope
ret
adc
insb
cld
add
mov
icebp
pushf
stos
xchg
add
push
or
enter
jl
xchg
sub
shlb
push
jnp
mov
pop
inc
push
jbe
psubb
add
in
cltd
push
leave
mov
xchg
mov
jmp
and
inc
or
clc
push
and
mov
push
daa
test
xlat
idivl
lahf
mov
pop
push
mov
repnz
pop
fs
lahf
mov
out
imul
sbb
xor
inc
xor
leave
adcb
jae
es
in
mov
in
add
je
vmovaps
scas
movb
sbb
loop
jnp
into
inc
xchg
fcoms
cmp
loopne
push
es
cwtl
adc
xlat
xor
loopne
push
dec
loop
test
fwait
cltd
out
mov
mov
mov
cmp
dec
sbb
loop
cmp
push
adc
gs
push
test
push
fimull
xlat
xchg
jns
pop
jnp
movsl
mov
mov
sub
adc
rol
inc
mov
dec
and
push
dec
imul
clc
dec
push
pusha
outsb
sbb
pop
xor
cmp
testb
stos
pop
mov
add
mov
insb
movsb
ds
repz
js
idivb
cltd
pop
pop
mov
and
mov
inc
repnz
inc
sbb
icebp
scas
pop
sub
xchg
cmovp
jg
pop
outsb
bound
movsl
das
jbe
sub
cmp
insl
pop
std
dec
sub
cmp
jo
jg
in
fdivp
adc
sahf
arpl
stos
dec
outsb
addr16
popf
sub
cmpsl
addr16
data16
adc
or
add
imul
fwait
mov
sub
out
pop
inc
and
mov
fwait
int3
out
inc
adcb
push
dec
adc
aaa
push
notl
inc
clc
mov
mov
lahf
es
nop
repnz
fcmovbe
popf
int3
cmpl
stos
aaa
popf
iret
shlb
cmp
scas
ja
dec
pop
test
add
push
cmp
jge
inc
xor
lods
hlt
pop
lds
lods
frstor
xchg
or
push
add
roll
mov
les
loope
mov
subb
nop
dec
cltd
popf
addb
cld
cmp
xor
mov
mov
inc
xor
xor
and
mov
pushf
outsb
ret
in
mov
fsts
in
lret
mov
dec
mov
mov
incb
inc
scas
imul
push
and
idivl
ds
sbb
lret
mov
lcall
inc
mov
and
iret
cld
jl
and
mov
js
fadds
pusha
mov
shll
mov
or
les
clc
sub
inc
inc
aad
sti
cmp
jno
and
pop
and
jle
adc
roll
jl
loop
xor
outsb
cld
sbb
repnz
ss
xor
out
mov
or
adc
inc
sub
fwait
or
cltd
js
orb
pushf
andb
fxch
adc
and
jbe
mov
mov
inc
cs
imul
mov
cmpsb
pop
mov
push
repnz
push
lcall
mov
sbb
es
push
xor
lock
jmp
loop
adc
fbld
mov
sub
jb
mov
pop
add
jns
push
inc
fcmovnbe
sub
push
pushf
cmpsl
and
mov
lods
subl
push
add
mov
icebp
mov
push
push
popf
cmpsb
sbb
fisttpll
push
adc
xchg
push
cltd
adc
mov
adc
test
aad
mov
movsl
jb
push
subl
lcall
push
ljmp
xor
out
outsl
mov
xor
js
in
pop
mov
cmp
js
roll
ljmp
ja
rclb
pushl
sbb
dec
inc
inc
sub
out
xchg
xchg
adc
sti
push
mov
lret
mov
xchg
add
pop
out
repnz
cmpb
push
cmp
popa
sahf
rolb
ljmp
cmp
popa
std
pop
mov
mov
xchg
and
cs
or
repz
xor
fldl
movsl
mov
mov
mov
mov
out
xchg
bound
roll
jge
rcll
call
les
insb
xchg
sti
push
popa
inc
inc
add
dec
push
int
jg
adcl
rolb
hlt
inc
push
dec
inc
sahf
rcrb
push
jae
jns
adc
sbb
push
ja
adc
push
mov
mov
aam
push
xchg
int
mov
or
or
sbb
sbbl
sub
int3
xchg
xchg
jae
cmp
pop
mov
ds
pop
cmp
inc
or
inc
sti
sub
movsl
dec
test
into
lock
cmpsl
inc
jns
add
add
fldenv
leave
in
clc
lea
arpl
dec
mov
fdivl
mov
fmuls
sbb
fdivl
pushf
icebp
ret
cmp
xchg
das
mov
push
aas
fwait
mov
scas
mov
int
mov
add
mov
test
sub
js
leave
or
iret
repz
or
out
sub
popa
jp
xchg
and
lods
push
cs
loope
test
in
cmp
shll
mov
or
push
xlat
lcall
push
add
daa
sbb
ja
bound
daa
dec
in
push
addr16
in
xchg
cmc
pop
add
jle
dec
popf
inc
lock
cmpsb
out
sub
sarb
test
shl
inc
push
push
in
pusha
movsb
imul
and
aaa
scas
lcall
rcrl
lret
aaa
ja
dec
jne
cltd
dec
xor
push
sbb
mov
inc
mov
stos
dec
and
mov
lds
rclb
in
shlb
pop
or
lret
iret
and
xchg
jle
lods
mov
inc
pop
adc
in
aaa
imul
pop
mov
rorb
roll
pop
push
mov
call
push
aad
lret
mov
dec
mov
mov
ret
mov
pusha
sbb
and
or
inc
and
sub
jecxz
xchg
ds
lret
in
jg
cli
sbb
sub
je
out
mov
loopne
and
xor
cmp
add
jp
aad
sahf
jecxz
aaa
sarb
inc
mov
bound
aam
lcall
xor
in
inc
out
push
sbb
cli
fdivrs
imul
fwait
incb
movsl
xorl
mov
pusha
xor
vmwrite
cmp
jge
stos
stos
jae
fisubs
xor
inc
xor
pop
movsl
mov
add
push
stc
inc
data16
dec
icebp
xor
int
pop
push
iret
pop
dec
idiv
push
mov
and
xor
cmpsl
nop
dec
adc
inc
inc
adc
ret
pop
mov
jl
adc
mov
push
mov
into
ljmp
xlat
mov
rorb
cmpsb
es
jne
xor
inc
cmpsb
test
in
movsl
dec
inc
pop
nop
lcall
push
lods
push
sub
lret
hlt
pop
das
pop
mov
or
push
cmp
test
xchg
pop
mov
mov
adc
test
fildll
dec
jge
xchg
xor
icebp
cwtl
mov
mov
addr16
icebp
mov
mov
imul
sbb
cmp
cld
pop
mov
cmp
inc
sarl
fucomi
stos
insl
int3
sbb
xchg
sti
bound
inc
cmp
fsubrp
rcrl
mov
inc
cwtl
pusha
inc
pop
or
lea
aaa
sbb
test
pop
push
popf
xchg
sub
cmp
int3
pop
pop
jmp
inc
imul
addr16
sub
dec
movsl
mov
dec
rclb
xor
adc
xchg
lods
stc
adc
in
mov
test
jmp
mov
add
or
mov
mov
nop
mov
pop
fdivrs
cmp
cltd
aas
scas
and
cs
jl
test
mov
enter
into
cmc
lds
out
xchg
push
popf
shrl
xor
jp
cwtl
push
js
or
ror
jle
dec
shlb
push
xorb
xchg
inc
rorl
and
jmp
jp
movsl
xor
int
sub
jp
push
repnz
sahf
cli
imul
call
cmpsl
cwtl
loopne
repz
push
inc
and
inc
icebp
lods
lods
into
dec
test
inc
outsb
icebp
inc
xor
xor
sarb
jp
inc
fsubl
mov
lea
das
cwtl
xorb
in
cmp
jmp
movsb
mov
outsb
movsb
test
pop
pop
sub
mov
pushf
bound
fistps
hlt
mov
mov
mov
fldt
jp
cld
mov
adcl
sar
ljmp
out
cmpsb
out
movsb
dec
mov
xchg
dec
mov
out
jae
cmc
imul
bound
orb
fsubrl
inc
mov
decl
mov
sbb
loop
push
mov
cli
xchg
ror
bound
mov
test
je
loope
mov
cmpsl
pop
cmc
cmp
icebp
imul
les
cmp
nop
mov
and
jmp
sub
cmpsb
data16
ficomps
popa
out
out
test
les
in
sbb
mov
adc
aam
pop
and
cmc
mov
adc
pop
jg
xchg
and
andb
movsl
incl
pusha
fisubs
imul
hlt
and
inc
nop
dec
cmc
dec
xchg
adc
hlt
push
push
leave
xchg
inc
ret
lods
xor
fwait
addr16
add
pop
inc
aas
xor
sub
stc
repz
ret
scas
xor
gs
jbe
dec
jecxz
loopne
jle
mov
lock
stos
arpl
push
inc
cmp
aaa
mov
cmpsb
in
fstpl
add
push
lods
aam
movsb
xor
adcb
popa
pop
add
pop
sti
mov
xor
pop
pop
out
mull
dec
fcompl
push
lcall
not
and
sbb
sub
sbb
aaa
jmp
test
mov
dec
mov
xor
inc
arpl
cmpsb
mov
ljmp
or
pop
arpl
jl
push
ds
loope
in
mov
bswap
mov
fadd
add
fistps
push
scas
mov
sbb
lods
test
xchg
or
aas
sub
movntps
mov
shrb
jge
mov
xchg
and
iret
inc
jge
data16
aam
das
fsubp
push
bound
mov
lock
inc
pop
cs
xor
or
nop
outsb
daa
pop
jns
xchg
bound
and
jl
out
inc
movl
sub
test
xlat
adc
adc
test
xor
rol
push
mov
loop
imul
xor
cltd
xchg
bound
sbb
fisubs
decl
inc
out
push
xchg
js
sub
daa
iret
xor
cmp
mov
dec
sub
jl
mov
xchg
adc
mov
adcb
insb
sbb
mov
stos
add
int
sbb
loope
mov
xchg
cmp
jge
je
loope
mov
hlt
shl
mov
xor
sub
mov
fwait
popl
subb
pop
push
sub
lret
leave
jl
lock
mov
xchg
xor
mov
stos
pop
lock
mov
push
jp
adc
and
clc
imul
lea
nop
mov
cmp
sbb
pop
mov
in
leave
xchg
push
int3
lahf
mov
jmp
and
sub
icebp
xchg
add
dec
push
cltd
movsb
fcmovnbe
jo
cmp
add
mov
mov
mov
mov
shlb
pop
dec
lods
xor
gs
inc
and
and
cwtl
outsb
jne
dec
hlt
adc
xchg
inc
mov
fnstsw
pushf
dec
ljmp
arpl
into
and
jge
sub
sbb
lret
mov
mov
jno
dec
es
mov
or
sub
mov
add
mov
mov
adc
repz
mov
mov
lret
ret
ficompl
push
push
fsubl
or
loop
pop
mov
out
mov
mov
and
inc
fcmovu
xlat
adcb
icebp
xor
rcll
in
jnp
cld
leave
xor
dec
loopne
roll
arpl
xchg
fld
sbb
add
inc
movsl
punpckldq
movsl
xlat
cmpsb
sbb
sahf
jo
inc
test
cmp
cmp
jno
arpl
adc
pop
popf
fcoms
lods
jle
add
ss
ret
cmpsl
or
pop
push
pop
ds
adc
es
iret
sbb
repnz
inc
test
imulb
xor
js
cmp
ds
inc
flds
push
mov
cmpsl
push
lahf
enter
scas
in
sub
out
fcoms
dec
mov
jnp
imul
push
jno
mov
ficompl
sub
sbb
and
insl
push
lods
loope
andb
push
add
mov
subb
pop
je
fwait
dec
sbb
pop
sbb
xchg
out
jp
adc
in
xchg
sub
sub
lock
clc
neg
xlat
push
outsl
sub
cmp
das
sbb
aas
rol
inc
cltd
idivl
sbb
sbb
shl
rcrl
push
xor
and
aas
repz
jg
mov
pop
xor
jne
adc
cmp
pand
loop
or
pop
ja
data16
pop
sub
lea
inc
add
fimull
jnp
push
stos
pop
out
hlt
and
rcrl
cmp
xor
fistl
sbb
xorl
mov
jg
lods
mov
daa
mov
lods
adc
ret
cmp
or
fcomps
adcb
test
test
lret
mov
shll
in
repz
fstl
outsl
add
fstpl
mov
repnz
jno
mov
mov
lret
push
push
cmpb
or
xchg
pop
in
xchg
and
sub
dec
push
imul
pop
sbb
sahf
or
mov
jl
inc
clc
jmp
push
mov
lcall
outsl
mov
ljmp
shl
xor
out
or
pop
push
push
mov
mov
sub
shll
lcall
or
hlt
lret
xchg
rcr
cmp
fisubl
sarl
xchg
cmp
mov
dec
adc
ja
into
pop
jmp
pop
xchg
push
loope
dec
xor
cmc
xor
into
lds
add
and
sub
cmp
insb
push
mov
xor
fcompl
icebp
test
pop
sub
stos
pushf
mov
mov
push
adc
and
and
scas
lods
xorl
test
mov
or
sbb
cvttps2pi
mov
xchg
jg
sbb
stos
loopne
stos
add
subb
push
pusha
inc
imul
push
xchg
push
ja
fwait
xchg
pop
in
fistps
cmpb
mov
or
cld
fisubrs
pop
lret
and
inc
aam
loope
sub
dec
sbb
stc
in
outsb
and
fldenv
inc
out
lods
mov
lret
push
jno
lret
test
pop
push
xor
ret
addr16
fwait
add
js
js
movsb
xchg
push
notb
jmp
mov
push
rcr
mov
or
sbb
or
sub
shll
ficoml
sti
out
fstl
stc
mov
mov
scas
lods
cmc
sbb
sbb
push
repz
fnstsw
push
mov
popf
push
or
and
lds
fsubl
mov
push
sti
pop
adc
xchg
xchg
test
fmull
jl
sbb
mov
ljmp
idivl
imul
sbb
jo
and
jbe
inc
xor
xchg
xor
enter
push
jo
push
and
in
pushf
cltd
and
xor
add
dec
pop
pop
xchg
inc
cmpsl
rorl
jbe
or
cmp
repz
out
je
movsl
xor
sub
push
xor
sbb
mov
sti
xor
add
pop
xchg
stc
aam
xchg
mov
mov
loop
push
dec
sbb
dec
or
mov
int3
mov
jo
rcr
jo
add
cmpsl
js
in
icebp
movsb
bound
jnp
inc
sbb
xchg
adc
mov
inc
ret
and
mov
or
das
outsb
mov
aaa
cmp
les
ja
sub
cmp
lock
sbb
outsl
mov
inc
xor
imul
sbb
enter
or
shll
dec
sti
jbe
adc
xchg
loopne
clc
xchg
fsubrp
jnp
fdivs
xchg
stos
ret
pop
xchg
push
sbb
icebp
jp
push
and
push
movsb
sar
scas
xlat
in
push
inc
cmpsl
lret
sbb
or
lods
xchg
loopne
leave
pop
leave
inc
jp
and
adcb
stos
adc
push
out
leave
les
iret
iret
sbb
pop
sub
add
aas
aas
push
cltd
dec
or
daa
adc
adc
and
sahf
or
inc
and
shll
push
xchg
shlb
jo
int
stc
push
adc
adc
jg
test
xchg
cltd
addl
and
add
sbb
popa
cmc
xor
fistpl
mov
xchg
jg
push
xchg
dec
data16
jecxz
movsl
lods
xbegin
je
jno
mov
stos
jge
jmp
lock
pop
push
mov
jo
inc
lea
and
mov
inc
iret
ss
xchg
fisubs
out
xchg
je
cli
test
iret
lahf
filds
stos
outsb
pop
cwtl
cmp
mov
push
inc
stos
jmp
xor
jae
or
push
mov
loope
inc
sahf
cmc
lahf
add
mov
pop
es
addl
dec
test
in
stos
xor
mov
rcrl
push
xchg
add
xor
xchg
lods
jle
pushf
notl
xor
xlat
or
jp
and
loop
jae
and
or
xchg
inc
mov
adcl
lock
sub
inc
jle
mov
dec
pop
mov
xchg
outsb
dec
notb
dec
and
mov
jmp
mov
mov
ljmp
inc
xchg
in
dec
and
ret
test
jle
insl
loope
sbb
xor
ret
add
cltd
push
shlb
fwait
xor
mov
sbb
mov
fildll
std
xor
or
aaa
or
mov
rorb
xor
adc
mov
pop
daa
cli
mov
les
fldenv
adc
xor
insl
mov
call
addr16
inc
lea
and
push
out
movsl
sub
outsl
xor
fistpll
jo
fs
das
movsl
data16
aaa
add
dec
gs
gs
or
lods
add
out
and
pusha
out
pop
or
inc
cli
out
sbbl
dec
scas
push
insb
in
add
sub
mov
jp
cld
mov
pop
out
push
and
std
pusha
adc
test
and
mov
cwtl
push
sbb
pop
dec
test
xor
test
into
stc
dec
jecxz
and
mov
mov
fdivl
push
movsb
ljmp
out
pop
out
in
repz
mov
or
sub
jnp
xchg
and
dec
sub
insb
xor
push
or
clc
sub
nop
pop
es
xor
imul
mov
ds
dec
pop
pop
pop
fwait
mov
inc
xchg
add
jnp
push
cltd
mov
and
enter
or
lret
pop
lahf
loope,pn
add
add
outsb
addr16
add
sbb
pop
loop
xchg
mov
mov
xor
dec
adc
xlat
cmp
mov
out
inc
andl
mov
mov
imul
sub
imul
addl
ds
mov
sbb
cli
xor
xor
mov
fstpl
cmp
aaa
push
cmc
pop
lds
jg
clc
call
dec
insb
xchg
pop
pop
insl
mov
xchg
add
lock
cmpsl
mov
out
hlt
test
hlt
sub
fs
xchg
inc
outsl
xor
js
les
sahf
mov
add
adc
fcmovnbe
xor
pop
jnp
push
outsl
sarb
decb
jno
mov
sbb
and
and
xor
mov
test
jbe
xorb
ljmp
nop
jno
mov
nop
jl
xchg
cwtl
xor
mov
dec
mov
push
pop
push
sub
jmp
hlt
adc
mov
insl
jmp
mov
fldl
cmpb
lods
push
and
push
mov
scas
inc
sbb
mov
lds
xchg
xchg
jmp
cmc
push
outsb
dec
out
scas
pushf
push
ret
enter
and
add
mov
inc
mov
gs
push
insl
arpl
lods
imul
mov
dec
mov
inc
outsb
mov
mov
jmp
aas
lock
or
mov
mov
cli
scas
dec
and
mov
pop
pop
pushf
enter
aam
mov
adc
stos
pop
fistpl
mov
std
roll
shll
xor
insb
mov
xor
sarb
bound
and
jbe
jnp
and
test
data16
insl
fidivrl
xchg
jae
inc
and
icebp
cmp
testl
imul
test
adc
cltd
lock
jne
pusha
pop
xchg
test
mov
inc
lea
lds
mov
shl
dec
popf
push
pop
inc
jecxz
pop
jmp
arpl
dec
sbb
xchg
dec
mov
fldl
push
mov
jp
mov
in
mov
scas
mov
xchg
loope
fwait
pop
leave
sbb
push
lahf
jbe
loopne
pop
push
aad
adcl
out
lret
or
sub
testb
das
in
hlt
cmp
addl
fwait
adc
ss
je
dec
mov
cmc
call
pop
ror
aam
add
ja
test
outsb
and
sub
sbb
loope
cwtl
and
xor
xor
push
sahf
test
jo
insb
in
cmc
cmp
inc
mov
outsl
ja
out
mov
pop
add
in
in
mov
jne
pop
mov
cli
add
loopne
sbb
imul
mov
cmc
cmp
enter
mov
adc
aaa
or
and
ret
test
fimull
pop
sbb
xor
sbb
fisttpl
pushf
shr
jae
ljmp
outsb
sub
repz
data16
mov
jnp
out
daa
aad
pop
fs
mov
inc
mov
pusha
xchg
dec
sub
rclb
mov
repz
fdivl
or
push
movsl
mov
ret
aas
call
mov
jp
inc
adc
add
push
test
inc
int
or
ljmp
in
outsb
xor
fisttpl
push
pop
xchg
pop
mov
leave
jmp
fimuls
andl
movsb
sbb
fidivl
mov
repnz
in
pop
icebp
mov
insb
mov
cltd
imul
icebp
outsl
fimuls
rcrl
out
pop
and
outsb
outsb
pop
scas
jmp
test
mov
cmpsl
mov
add
insl
mov
lods
push
imul
scas
jmp
jecxz
cmp
push
push
cmp
enter
mov
les
outsl
sbb
push
sub
test
sbb
add
les
push
dec
leave
sub
inc
push
inc
and
push
mov
sbb
scas
fidivl
divb
scas
mov
lock
aas
or
in
call
and
ja
jl
aaa
fnstsw
hlt
mov
scas
insb
cli
in
cld
xchg
lea
jnp
xchg
mov
fbld
ja
mov
push
jge
inc
fdivs
into
lahf
cli
js
mov
xchg
xchg
test
pop
jne
mov
jge
inc
mov
imul
cmp
fildl
sahf
nop
xchg
imul
loope
int3
mov
inc
es
sbb
cltd
adc
sub
cltd
aad
lock
fidivrl
xor
sbb
adc
inc
or
push
adc
adc
xchg
pop
pop
or
jmp
pop
jne
cs
imul
xchg
sbb
enter
sarl
mov
pop
push
fnstcw
shrl
jmp
fdivp
pop
ret
push
call
clc
push
cli
psubq
fldl
add
lahf
add
or
stos
pop
lods
sub
mov
sub
insb
xchg
addr16
pop
lret
out
or
xor
addr16
jno
adc
add
cmp
jp
sbb
stc
mov
pusha
ret
imul
imul
ljmp
daa
out
mov
and
lock
push
add
mov
enter
cld
mov
push
mov
rcll
adc
insl
push
stos
hlt
inc
mov
shrb
pop
addr16
into
sbb
xor
adc
cmc
mov
xchg
cwtl
mov
cmp
dec
mov
icebp
outsb
mov
xor
adc
push
jns
xor
adc
jle
push
inc
call
movsb
in
inc
daa
jno
jecxz
je
inc
jecxz
dec
lahf
push
movsl
push
cmc
dec
mov
movsl
mov
push
bnd
pop
adc
pop
xor
jae
inc
mov
int
incl
movsb
fisttps
sbb
inc
xchg
out
out
cmpsl
inc
scas
stc
aas
or
sbb
out
sbb
out
xchg
pop
dec
into
scas
ret
popf
xor
dec
mov
pusha
sahf
cmp
out
lods
xor
sub
lahf
sbb
jge
pop
in
les
mov
scas
js
pop
add
lods
pop
ljmp
mov
leave
cmc
and
or
scas
jmp
imul
cmpsb
mov
inc
std
sbb
sub
xchg
cmp
fstp
push
dec
or
push
out
pop
xor
mov
inc
std
aas
lods
xchg
cli
adc
jg
outsl
mov
xorl
mov
mov
add
data16
pop
mov
mov
fstl
xor
js
stos
sub
or
mov
mov
popl
sbb
cmc
mov
insl
repz
into
aam
cltd
stos
pop
mov
jmp
mov
dec
jne
xor
add
into
and
jg
fbld
adc
push
lods
ss
scas
or
stos
sbb
movl
notl
aam
ds
dec
fwait
jo
adc
negb
mov
cmp
adc
mov
jo
dec
rorb
dec
jnp
pusha
psraw
xor
lods
ret
lahf
clc
test
fsts
dec
nop
out
ljmp
inc
push
pop
xchg
sbb
fcom
ljmp
pop
insl
xchg
aad
repnz
jae
xchg
push
and
mov
outsb
insl
or
xchg
enter
scas
sub
stos
sbb
fimull
aad
xchg
aam
mov
pop
rorl
test
mov
mov
out
rcrb
sbb
fistl
push
rcr
and
cmpsl
cmc
shll
xchg
add
xchg
push
or
push
pop
sbb
insb
xchg
mov
xchg
sbbb
lcall
adc
loop
out
inc
inc
ud0
cmp
test
imul
stc
push
ret
inc
ficompl
or
repnz
test
jp
add
or
fbstp
jle
jo
stos
mov
jae
or
je
mov
out
je
daa
jl
jno
mov
dec
iret
lea
push
imul
mov
cmp
clc
das
xchg
shrl
pop
fwait
and
jle
das
cwtl
les
iret
push
mov
jbe
cmc
push
ret
pop
jle
ljmp
imul
popa
ja
imul
mov
repz
push
or
cmp
lret
lea
lods
faddl
cli
lods
sbb
add
testl
inc
mov
pusha
push
ljmp
fmul
sub
cwtl
ds
and
mulb
outsb
out
arpl
mov
xor
lds
les
dec
jecxz
xchg
push
sub
mov
mov
jle
aam
cli
push
xchg
daa
mov
popa
push
fwait
sbb
jno
call
xchg
repnz
pop
adc
andl
pop
cmpsl
rcll
imul
lahf
cmp
sbb
push
adc
xor
or
jns
ret
pop
fisubrl
push
arpl
cmp
in
sub
inc
push
cmp
dec
stos
cmpsl
xor
cmp
xchg
pop
sub
in
adc
rclb
lods
push
adc
cmpsl
xchg
arpl
adc
int3
out
cmp
lcall
or
pop
stos
mov
cmc
fnstenv
adc
cmp
push
mov
xor
ljmp
nop
mov
aam
inc
push
pop
out
xchg
mov
sub
test
gs
stc
roll
scas
les
inc
add
push
adc
cmpsb
insb
lcall
into
arpl
cmp
xor
jg
cmp
cmpsl
int
imull
mov
pop
jns
pop
out
dec
mov
js
repnz
add
jbe
fmuls
arpl
sbb
es
ret
insb
inc
adc
push
js
push
add
inc
jg
inc
sbb
jl
insl
aad
rcrl
mov
jno
int3
mov
outsb
fsts
dec
rcrb
icebp
fmuls
mov
mov
neg
inc
js
scas
mov
inc
ljmp
sbb
dec
jnp
lret
xor
dec
daa
gs
cmp
pusha
mov
shll
xor
mov
scas
clc
lcall
adcb
aas
push
xchg
inc
xchg
push
aas
sub
cmp
push
cli
inc
jl
mov
mov
les
pusha
ret
inc
in
aas
fistl
xchg
ret
in
mov
sbb
je
jge
push
xchg
lock
ja
ror
mov
fimull
mov
cmp
adc
lods
lods
or
test
out
movsl
std
imul
sub
push
fcomps
aas
or
call
jns
into
addb
leave
mov
test
push
fnstenv
fucomi
mov
push
rclb
sbb
mov
fistps
adcb
ficompl
mov
in
sub
ficoms
cmp
sub
pusha
and
shl
aam
sub
xor
lret
sbb
mov
mov
in
sub
sbb
dec
sbb
jge
js
fisttpl
jmp
loopne
sahf
cmpsl
fwait
or
xlat
andb
jg
aad
or
sbb
mov
test
sub
mov
pop
sbbb
sahf
pusha
pop
xchg
dec
stos
ds
xor
imul
or
add
xor
mov
inc
add
scas
sub
push
cmp
mov
add
dec
fadd
fmuls
lods
fildl
lods
mov
movsb
inc
cli
jns
imul
stos
mov
mov
mov
mov
sbb
call
dec
imul
mov
dec
sub
xlat
das
mov
addr16
ror
sahf
ljmp
push
ret
or
ds
jle
sub
lods
repnz
popa
ret
cmc
jecxz
int3
or
push
mov
rolb
movsl
pusha
jb
xor
in
cmpsl
orb
pop
icebp
jae
popa
pop
psubusb
and
xchg
xorb
icebp
fldenv
pop
faddl
rcrl
nop
add
test
mov
int3
jg
jbe
jl
pop
scas
test
cmc
lcall
lea
es
jge
mov
xchg
xor
movsb
jecxz
test
push
dec
add
mov
imul
and
xchg
mov
faddl
jne
mov
cmp
ret
sahf
ja
add
push
fdivl
add
call
cmp
out
xor
je
insl
lods
mov
mov
push
sbb
lahf
test
or
jge
mov
mov
push
shl
or
jmp
and
int
fsubp
xchg
push
in
pop
adc
addr16
lret
lret
and
adc
je
mov
push
or
add
jmp
in
jge
in
js
aad
ljmp
and
mov
enter
jp
nop
or
rolb
cmc
mov
adc
xor
aam
mov
lret
in
sti
and
out
dec
inc
pop
push
sub
inc
adcl
in
push
ret
push
dec
out
mov
rcrl
sbb
add
pop
test
sbb
adc
inc
cmpsl
lods
and
xchg
sbbb
push
addr16
add
push
cld
data16
addl
and
sbb
dec
aam
sahf
cld
cmp
inc
xchg
dec
inc
in
mov
popa
inc
test
lret
sbb
sti
add
aam
fdivrs
outsb
or
cmpsl
rolb
xchg
dec
mov
dec
lea
or
divb
inc
test
pop
push
loope
mov
out
jno
out
add
sbb
test
in
xor
incb
mov
loope
xchg
dec
aad
sub
xchg
or
dec
lds
or
sub
and
nop
mov
fsub
adc
mov
loope
pop
and
push
mov
stos
lods
xor
sub
cmc
dec
xchg
aam
aas
aam
sbb
testl
clc
pop
pop
int
loopne
fwait
pop
push
loopne
mov
andl
sbb
data16
movsl
nop
pop
icebp
and
mov
adc
sub
idivl
dec
xor
in
call
mov
test
or
jbe
hlt
dec
les
jecxz
sbb
or
std
xor
idivb
mov
jg
sub
add
repz
mov
nop
jle
pop
js
or
mov
popf
pushf
mov
sub
out
mov
push
loop
jb
adc
repz
xchg
out
jecxz
adc
cli
or
xor
push
testb
daa
in
loope
pop
dec
jle
add
andl
mov
mov
rolb
inc
add
inc
and
out
add
vpmadcswd
aas
lock
mov
rorl
lods
cltd
cmp
dec
or
loopne
sub
jge
cli
out
xchg
call
or
add
pushf
scas
imul
daa
cld
imul
aam
sbb
lret
mov
sub
push
add
adc
mov
mov
into
jae
outsb
out
push
mov
getsec
jmp
xchg
mov
pop
jp
dec
jb
lock
cmpsb
std
clc
inc
clc
mov
aas
dec
pop
adc
pop
cmp
xor
inc
mov
dec
imul
jmp
shll
pop
lods
ficoml
jbe
mov
insl
mov
mov
jle
jl
sub
mov
gs
xor
adc
lods
mov
jge
pushf
sub
push
addr16
cmp
cmp
inc
and
pop
ljmp
cltd
sub
and
jnp
repz
cli
jl
fwait
push
js
push
cmp
mov
adc
into
push
and
pop
ret
emms
pop
and
clc
mov
fcomps
adc
icebp
cmp
jle
ret
jmp
mulb
test
xor
lret
loop,pt
rcll
aaa
and
pop
and
add
mov
dec
dec
cwtl
gs
mov
xchg
or
gs
test
mov
dec
sub
jnp
lock
jmp
dec
icebp
lret
stos
mov
mov
leave
push
dec
call
cli
imul
push
inc
adc
or
pop
enter
push
stc
jle
push
push
push
cmp
loope
in
lret
out
jo
dec
pop
add
cmp
sbb
cmp
mov
mov
push
xor
add
mov
sahf
shrb
out
cs
cmp
popf
addr16
dec
mov
imul
jo
test
pop
ror
sub
xchg
cmpl
cmp
jo
movsb
inc
xchg
scas
mov
jbe
dec
mov
cmpsb
cmpsl
out
test
lahf
jnp
push
insl
mov
iret
pop
hlt
push
scas
iret
daa
mov
xchg
push
xor
icebp
pop
inc
mov
fidivs
cmp
popf
inc
call
loope
test
cld
push
fisttpll
in
mov
ja
add
cmp
dec
aas
pop
ds
sbb
mov
mov
lods
push
push
push
and
in
dec
sub
add
notl
mov
loopne
stc
divb
out
outsl
xor
inc
rcrl
int3
pusha
neg
pushw
aad
test
adc
sbb
repnz
inc
pop
and
stos
ret
sub
inc
repnz
dec
outsl
jo
rcrb
cmc
cli
xchg
add
call
mov
mulb
pop
push
mov
inc
dec
idivl
icebp
movsl
cwtl
mov
and
sub
sub
in
add
cmp
cmp
inc
inc
fdivrl
divl
fstpl
pop
testb
add
or
shlb
cwtd
jnp
mov
sbb
lcall
jp
add
push
or
mov
or
xchg
les
rcl
jmp
subb
scas
out
mov
or
sbb
mov
stc
mov
inc
xchg
loope
shrb
mov
mov
jne
push
jp
add
int
inc
lret
mov
add
dec
jmp
jp
aad
or
test
xchg
aaa
in
das
out
fistl
imul
jae
cmpsb
inc
repnz
xor
add
xor
scas
add
push
xor
popa
mov
xchg
inc
pop
or
mov
fwait
dec
movsb
dec
mov
loop
shrb
sub
out
popa
cmp
cmp
push
je
ljmp
orl
add
mov
hlt
outsl
jmp
iret
sbb
jbe
and
mov
inc
xchg
cmc
push
xchg
lret
mov
jp
call
xor
dec
cmp
mov
subb
xlat
dec
insb
add
mul
or
and
insb
cmpsb
bound
inc
js
xor
out
stos
pop
or
pop
add
lahf
jge
cli
jns
scas
sub
inc
gs
lock
pop
aad
fisubrl
xchg
nop
inc
pop
mov
aaa
lods
pop
jl
sub
and
fmul
fnstsw
outsb
jle
rorb
push
lret
mov
xchg
ret
imul
ret
imul
mov
xor
sbb
sub
add
mov
rclb
push
mov
pop
push
dec
mov
fwait
sbb
jl
adc
xchg
popl
aaa
adcb
jp
or
stos
rcrb
or
or
loope
shrb
cs
aaa
pusha
ss
lcall
arpl
push
dec
xchg
in
add
mov
adc
sbb
hlt
aaa
jnp
and
and
ja
popa
add
pop
cmp
mov
loope
jl
add
fs
add
xchg
fldlg2
push
pop
roll
les
sub
dec
push
cltd
pop
xor
imul
dec
adc
mov
enter
shll
into
je
test
addl
and
adc
pop
xchg
add
imul
scas
rol
outsb
ss
inc
ja
dec
test
and
sub
inc
adcl
pop
movb
test
push
gs
inc
ja
jno
add
insl
mov
pop
push
sti
mov
stos
mov
adc
int
out
cmp
fs
sbb
out
jno
ror
das
xchg
or
push
xor
pop
data16
pop
xchg
popf
xlat
rol
mov
aas
int3
dec
sub
cmc
into
daa
fwait
sbb
push
adc
sub
out
ret
pop
jno
mov
pop
pop
cltd
lret
xchg
jns
push
lea
adc
aad
sub
mov
jns
popf
jmp
push
out
sbb
push
cmpsb
add
cmp
pop
adc
xchg
cli
faddl
xchg
xchg
add
daa
leave
dec
cmp
push
std
push
scas
jne
dec
xor
movsb
test
jmp
ret
arpl
rcrl
lahf
repnz
out
xor
call
xchg
gs
call
or
cwtl
adc
jae
scas
lahf
idivl
jnp
pop
push
mov
aaa
xchg
fwait
mov
out
ret
dec
xchg
inc
in
pop
or
mov
popf
mov
out
out
test
adc
dec
jecxz
jmp
loop
pop
add
pop
mov
fmuls
popa
mov
test
adc
dec
xchg
sahf
or
push
cmp
movsl
lea
cmp
cmpsl
jne
mov
gs
sbb
sub
inc
inc
pop
xchg
inc
cs
test
dec
fcmovne
hlt
mov
enter
mov
divl
xchg
jp
fs
sub
inc
fdivrs
and
mov
push
shlb
sbbl
int
xchg
cmpsb
out
jno
xchg
repnz
sub
jb
addb
add
jmp
sbb
rcl
mov
lea
sub
mov
xchg
dec
mov
dec
rcl
ljmp
dec
xchg
dec
mov
push
push
popf
jbe
xchg
out
mov
jnp
loope
xchg
repnz
add
xor
dec
jae
xchg
xchg
cmp
and
cmp
mov
jbe,pt
data16
inc
pop
mov
mov
mov
daa
inc
sub
push
sub
inc
lcall
and
jge
loope
jnp
sub
adc
es
loop
xchg
or
sub
jl
jno
pushf
mov
fwait
and
test
push
push
xor
mov
ja
outsb
test
xchg
dec
fsubl
mov
inc
movsb
mov
frstor
adc
mov
loop
lock
outsl
or
fwait
sub
in
cmp
cli
fwait
cmp
repnz
xchg
or
mov
xchg
mov
mov
push
hlt
mov
adc
xlat
inc
sub
int3
sti
mov
pcmpeqd
mov
test
jl
push
or
nop
dec
mov
cs
lret
repnz
jnp
sbb
imull
aas
jne
or
in
pop
jl
jmp
mov
xchg
push
aaa
outsb
sub
pop
and
fisttps
jnp
and
xchg
jp
mov
jge
sub
adc
nop
int3
mov
les
adc
adcb
jl
mov
mov
jecxz
inc
add
jp
cltd
pop
pop
in
aam
add
insl
arpl
xchg
decb
jo
add
jg
insb
notl
mov
mov
flds
or
pop
in
add
mov
xchg
lret
and
push
cmp
push
js
imul
or
xor
fdivrl
rcrb
int
lcall
popa
inc
mov
pop
mov
rclb
xchg
loope
scas
out
xor
adc
cmp
push
jnp
daa
jno
int3
jg
aaa
mov
and
push
dec
movsb
mov
mov
mov
roll
test
in
leave
int3
xor
xor
rol
add
lds
cltd
les
fisttpl
fiaddl
push
sbb
shr
add
or
and
ret
or
ret
jbe
iret
dec
sub
mov
lea
jp
clc
push
sti
fwait
stos
mov
jmp
mov
sbb
mov
orl
ret
mov
push
jb
xchg
hlt
xchg
or
adc
cmp
int3
stc
sub
ret
hlt
test
adc
lret
mov
outsl
dec
aas
pop
jp
xor
sub
inc
xchg
xor
loop
test
push
jle
pop
sub
insl
cmp
jecxz
mov
inc
add
xchg
inc
cld
jmp
popf
push
dec
fiadds
aas
in
xchg
jb
jp
fsubl
adc
xchg
jge
inc
mov
fnsave
jnp
pusha
fidivl
cmp
ficoml
push
scas
sub
lods
rcrb
aam
cmp
jmp
add
cmc
xchg
cmp
inc
xrelease
in
push
jp
lret
es
mov
call
popa
in
xlat
clc
into
int3
xlat
in
cli
mov
sbb
sbb
dec
xchg
jmp
sbb
mov
in
push
or
lods
mov
dec
mov
dec
sbb
ret
fmull
bound
into
imul
push
cld
sbb
stos
enter
cmp
repz
daa
xchg
lret
inc
mov
ljmp
lret
fwait
loope
rorl
cmp
adc
scas
xchg
pop
and
insl
xchg
xchg
jne
sbb
dec
add
lret
das
movsb
shlb
and
out
sub
add
insl
loope
sahf
popa
icebp
cmp
pushf
and
imul
cmp
push
push
or
jnp
mov
pop
push
fadds
mov
clc
aaa
cli
les
arpl
sub
push
cmpsl
push
scas
cwtl
adc
cmp
cld
and
sub
insb
jmp
insl
push
adc
jp
mov
cmc
and
stos
loope
aaa
loop
jne
enter
fucomi
je
xor
cwtl
or
loop
imul
cmpl
dec
mov
and
mov
xchg
fnclex
movsl
es
xchg
incb
inc
scas
in
sets
and
jbe
add
cmpsb
lods
add
int
mov
xchg
test
cwtl
pop
sahf
lock
pop
adc
mov
sub
subb
xchg
inc
push
add
cltd
pop
xchg
and
inc
pop
and
sub
push
add
std
jmp
cmp
pop
push
adcl
fisubrl
scas
stos
mov
pop
sarb
xacquire
dec
jge
test
test
and
fnstcw
stos
sbb
shrb
dec
xchg
mov
cmpsl
add
mov
jecxz
lock
mov
imul
push
mov
in
or
fildll
lods
stos
sbb
loopne
in
in
fisubl
xor
stc
iret
and
mov
jge
mov
sbb
mov
cmp
cmpsb
in
inc
call
or
cli
paddb
imul
sub
add
jno
loope
jae
iret
mov
inc
mov
sub
fwait
jecxz
repz
scas
or
ret
mov
movsb
push
test
inc
dec
pop
sub
jne
pop
lahf
fildll
mov
jg
aas
fdivrs
push
cwtl
movsb
lret
sub
lods
xchg
fdivrl
sti
mov
add
aas
mov
mov
cmp
out
and
cmpsl
loopne
xchg
jge
lds
hlt
lods
mov
mov
mov
test
pusha
aam
stos
cwtl
sbb
jns
xchg
aas
xor
test
rorl
sarl
cmp
mov
jns
into
repnz
cmp
pop
in
mov
sub
mov
mov
int
outsl
mov
test
mov
mov
repz
add
mov
rorb
fiaddl
or
adc
inc
push
mov
mov
jno
or
or
sbb
pop
inc
test
pop
test
cmp
inc
ror
push
es
aad
inc
mov
adc
adc
stos
les
aam
out
inc
in
push
imul
call
mov
iret
ficomps
ds
mov
sarl
test
jbe
push
inc
test
sbb
insl
mov
adc
mov
rcll
sbb
and
lods
cwtl
gs
jge
mov
pushf
xchg
pop
repz
mov
add
adc
ja
mov
out
add
bound
mov
stos
aam
adc
idivl
inc
pop
pop
add
bound
outsb
shrb
lock
hlt
jmp
ret
jge
jmp
addr16
cmp
lods
jmp
pop
jg
ja
and
in
cmp
adcb
jmp
outsb
shl
cmp
xchg
cltd
jmp
clc
xchg
dec
jp
dec
xchg
aaa
pop
cmp
mov
lret
or
div
adc
sub
mov
inc
popf
cmp
js
iret
inc
sub
rolb
xorb
mov
outsl
xchg
and
mov
inc
repnz
test
ja
add
jbe
pop
daa
xchg
mov
andb
cmp
fistl
pushf
cmp
pop
repnz
push
mov
sbb
loop
pop
arpl
jmp
and
sub
jg
pushf
push
jo
aad
xor
arpl
cmp
rclb
mov
push
cmp
dec
insl
dec
imul
cmp
push
sbb
or
sub
iret
jmp
loop
data16
test
mov
or
idivb
in
loope
sbb
stc
int
iret
es
movsl
hlt
sub
add
popf
in
imul
xor
xchg
jmp
cmp
xchg
lret
lcall
andb
test
inc
test
mov
rcrb
sbb
cmp
jmp
cmp
dec
fisttpl
xchg
mov
jb
jo
xchg
push
daa
fnstsw
movsl
jne
inc
pop
imul
pop
lea
bound
out
xchg
ljmp
iret
inc
adc
inc
leave
out
adc
jecxz
lcall
aad
jmp
rcl
or
out
bnd
sub
push
fsubp
push
icebp
ja
mov
jle
mov
xchg
gs
sub
xchg
fs
or
orl
push
cmp
stos
adc
js
mov
cmc
subl
pop
cmp
in
lea
push
imul
js
mov
icebp
rol
inc
pop
or
sub
and
or
nop
mov
dec
ja
enter
inc
imul
icebp
cmp
cld
imul
or
ror
xor
repnz
aas
es
pop
aam
mov
mov
mov
xchg
dec
add
in
fiadds
xchg
sub
aas
loopne
cmc
das
cmp
out
inc
xchg
jp
jno
ss
jle
int3
sub
stos
je
jbe
push
cmp
pop
repz
cltd
int
push
lods
dec
adc
lods
enter
mov
mov
inc
jbe
aad
ret
mov
je
pop
pop
mov
dec
bnd
xchg
or
ret
dec
sbb
or
xchg
adc
test
push
mov
nop
cmp
out
movsl
stc
or
aas
and
cmp
icebp
xchg
addl
mov
jnp
xchg
mov
pop
cmc
pop
pop
or
in
shr
repnz
and
test
scas
int3
pop
mov
inc
es
inc
leave
in
outsl
rclb
pop
mov
xor
mov
movlps
leave
fcomps
fdivrl
pop
into
movsb
aas
fyl2x
aad
pop
mov
lret
incl
enter
frstor
jb
fsts
pop
cmc
sbb
xlat
inc
mov
sbb
pushf
mov
cmpsb
jns
insb
mov
jl
loop
xor
sub
nop
imul
jle
lds
ret
push
inc
adc
cmp
mov
aas
imul
pushf
ret
scas
out
ret
mov
stos
in
iret
push
fwait
and
push
sub
aad
in
and
push
in
pop
cs
testb
dec
add
mov
int
and
test
in
lcall
outsb
pop
xlat
xor
xlat
mov
adc
jbe
cwtl
push
xlat
or
lods
pop
mov
mov
pop
daa
test
mov
js
adc
mov
pop
and
shll
js
outsb
movsb
out
clc
imul
in
mov
icebp
shr
inc
push
or
pop
cmp
lea
out
mov
jp
movsb
dec
loop
mov
popf
fst
push
sti
aad
inc
or
xchg
and
and
and
aam
subb
adc
iret
shrb
clc
fwait
inc
addr16
es
mov
enter
pusha
pop
rcrl
sahf
ljmp
call
push
test
lods
ret
sub
push
stos
pop
jbe
xor
mov
fsubrl
or
cmpsb
or
mov
lret
push
popf
cli
fstp
xlat
stos
je
adc
and
pushf
mov
inc
not
aaa
xor
fdiv
rcrb
or
dec
lret
scas
adc
fneni(8087
pop
jg
dec
adc
rclb
mov
popa
mov
test
xor
cs
or
adc
in
stc
inc
jno
lret
pop
nop
call
lds
mov
sti
rorb
fnstcw
fcoml
outsl
cmp
cmp
lret
adc
xchg
cli
xchg
and
and
jg
mov
jg
lea
daa
fnsave
inc
lea
or
jo
push
dec
cmp
sub
push
dec
addr16
jo
and
inc
add
fbstp
jns
sub
daa
out
sbb
arpl
dec
jl
scas
lcall
or
or
jno
and
cwtl
sbb
imul
push
push
aad
clc
popf
sub
jno
mov
aaa
out
xchg
xchg
jge
es
xor
sub
mov
xchg
fs
gs
mov
mov
jl
dec
push
cwtl
push
xchg
xchg
jmp
push
sub
hlt
fs
sbb
cmp
xchg
mov
out
or
push
fcompl
test
sahf
dec
pushf
dec
imul
or
arpl
ficoms
in
cmp
jecxz
sahf
inc
jb
aad
add
inc
mov
xchg
lcall
mov
int3
test
adc
out
out
mov
fs
and
out
shlb
mov
pop
and
jmp
mov
gs
mov
pop
push
lock
and
xchg
and
insl
mov
pop
bound
and
sub
push
inc
mov
lcall
incl
pop
xchg
mov
stc
jae
xchg
mov
adc
jne
fidivl
outsl
xor
fwait
adc
mov
xor
insb
mov
push
adc
mov
push
ret
flds
mov
inc
and
lea
and
sbb
outsl
jae
movsl
shlb
jnp
jnp
sub
mov
sub
mov
aad
mov
jecxz
pop
sub
push
rcl
sub
xchg
sbb
dec
push
icebp
fbld
inc
xor
test
jb
xchg
ds
mov
out
stos
pop
daa
sub
add
or
flds
sbb
stos
movsb
in
popf
in
xchg
jnp
repz
sub
sbb
jmp
mov
and
inc
mov
push
cmc
es
cmpsl
mov
pushf
data16
xor
or
shrb
xor
in
fistl
out
sbb
imul
jge
dec
xchg
cmp
clc
ds
inc
insl
enter
inc
add
out
out
adc
int
loope,pn
push
xchg
movsl
ds
sbb
cwtl
je
xchg
call
fisttps
ficoml
test
mov
mov
mov
mov
dec
sbb
popa
std
int
xchg
mov
adc
and
jle
inc
mov
dec
pushf
jge
fidivl
imul
out
mov
mov
mov
sub
subb
lahf
mov
mov
sti
int
lods
pop
mov
fcoml
pop
push
decb
mov
stos
insb
aaa
jg
push
add
loopne
jmp
neg
stos
pusha
fidivs
adc
movsl
addr16
push
mov
mov
dec
sbb
xorb
adc
mov
rcrb
sbb
mov
add
jmp
pop
push
out
enter
adc
imul
movsl
mov
inc
nop
aad
add
mov
push
sbb
sbb
leave
mov
ljmp
out
push
inc
xlat
xor
cmp
gs
jae
mov
fmulp
mov
ret
jno
lret
mov
mov
dec
cmpsb
divb
fldt
dec
push
pop
int
or
push
jl
addl
sub
dec
cwtl
fwait
mov
lods
dec
pushf
jb
insb
sahf
push
fimull
or
xor
xor
out
rcl
outsb
jo
cmp
enter
popa
pushfw
mov
fidivl
lahf
push
ficompl
repz
mov
push
sti
popa
es
and
dec
jmp
test
mov
cmp
pop
aam
pushf
xorb
and
pop
in
cltd
jne
mov
ds
xor
ret
push
sbbb
in
dec
pop
cmp
lea
shlb
ljmp
inc
pop
inc
fisubrs
cmp
inc
out
popa
adc
push
bound
pop
sbb
mov
sub
xlat
testb
sbb
sbb
mov
insl
lds
cmpsl
jmp
adcb
push
lret
pop
inc
bts
fisttps
xchg
lds
xchg
cmp
mov
flds
adcl
sub
in
dec
push
inc
xor
paddw
cmp
fdivl
or
and
fdivs
push
das
iret
imul
xchg
or
pop
arpl
das
mov
sti
fnstenv
sti
xchg
imul
pop
mov
dec
sbb
pop
fcoml
clc
add
dec
mov
lret
push
mov
mov
mov
fwait
outsl
cmpsl
xor
dec
push
in
nop
popa
jns
dec
lret
adc
and
rorl
ret
jp
dec
pop
sbb
pop
pop
fbstp
pop
mov
sbb
xchg
cmp
xchg
jle
mov
add
call
lcall
sbb
and
mov
cmp
fs
jge
sbb
push
mov
out
lods
sbb
jns
jge
in
scas
xchg
rcr
ficoml
or
roll
cltd
nop
aaa
push
cmp
adc
jl
adc
popa
jg
mov
pushl
out
adc
mov
pop
inc
out
test
mov
repnz
cltd
xchg
cmpsb
jae
js
jp
dec
mov
xchg
les
jae
jle
aaa
mov
add
fcomip
sbb
inc
fldl
xorl
fisubl
out
jmp
xchg
push
jae
adc
push
cmp
inc
aas
daa
xor
sahf
lret
sbb
adc
ret
mov
pop
sub
shll
pop
inc
cmp
test
pop
push
ss
mov
mov
data16
xchg
out
xor
adc
cmc
adc
jno
mov
popa
fldcw
into
test
sbb
scas
add
mov
add
pop
inc
push
mov
es
add
call
sbb
jne
pop
mov
test
pop
idivl
cmpsl
ret
daa
jg
or
push
mov
mov
cmp
mov
sbb
movsl
movsb
movnti
imul
mov
mov
ja
movsl
cmpsl
rcl
mov
daa
jo
pop
ja
int
fistl
xor
in
in
cltd
les
pop
in
push
mov
xchg
mov
out
mov
negl
jns
ret
mov
pop
xchg
cltd
cld
cmp
xor
xor
popf
lods
sub
adc
leave
mov
lret
push
aam
leave
sbb
rclb
testl
jne
mov
insb
jbe
or
fbld
and
loope
xor
cmp
rcrl
push
in
pop
add
sete
ret
cmp
mov
pop
imul
sbb
adcb
or
insl
push
lret
ds
sub
mov
into
push
fstpl
fcoms
sub
xchg
iret
pusha
jb
mov
mov
adc
fildll
inc
repnz
pusha
outsb
add
lret
daa
push
add
sub
push
cltd
pop
cmc
stos
mov
lahf
jbe
sub
mov
test
popf
shll
and
jns
inc
rolb
cwtl
popa
nop
cmc
int3
cld
dec
inc
sti
sbb
aam
jne
jl
sub
xor
outsl
or
adc
mov
cmpsb
xor
jg
mov
divb
loopne
or
nop
aas
mov
lods
xchg
jle
ljmp
cmp
pop
cmc
ja
adc
rorl
push
and
push
ljmp
idivb
ret
push
nop
sub
insl
orl
dec
pop
in
add
mov
xlat
setg
jbe
out
lds
jno
inc
repnz
mov
cmc
les
push
cmp
mov
adc
idiv
inc
pushf
iret
push
mov
stos
cwtl
jmp
nop
bound
push
mov
test
cs
cmpsb
pop
jbe
add
into
cmp
and
pushf
lahf
das
and
scas
sbb
mov
and
sbb
gs
cmp
and
mov
inc
out
jae
fs
adc
rcrb
cs
jo
sub
add
xor
imul
insl
sbb
icebp
imul
add
add
adc
adc
addr16
sub
insb
mov
fnstcw
xor
loopne
lock
dec
out
repz
sbb
negb
inc
cmp
rolb
pop
shl
sti
bound
adc
push
push
ss
jnp
xchg
fisubrl
mov
aas
sbb
cmp
insl
fildl
jns
mov
aad
icebp
or
cmc
inc
pop
cmp
adc
cmc
daa
jae
int3
scas
xchg
mov
mov
orl
icebp
out
imul
cli
aas
xorb
orl
mov
aas
lret
sahf
sub
rorb
popa
mov
aad
adc
push
pop
clc
out
jne
inc
stos
push
pop
iret
push
scas
dec
adc
das
ret
push
sub
js
add
in
push
sub
sub
add
mov
sub
sub
in
push
mov
loop
sub
add
inc
pop
push
xor
pusha
pop
jo
adc
jbe
lock
fdivl
in
push
xor
es
lock
aas
enter
sbb
scas
jg
repz
and
imulb
lods
or
add
aad
sti
xor
jo
dec
jecxz
shl
aas
lret
imul
test
lds
fidivrs
mov
sub
dec
add
or
sub
add
testb
inc
cli
andb
dec
and
das
cmpsb
lock
out
mov
dec
iret
hlt
iret
cmp
dec
sub
hlt
lcall
pop
mov
fildl
pusha
push
ret
jns
movsb
add
push
lahf
mov
not
lahf
adc
mov
ret
lds
insl
dec
mov
cltd
test
shrb
ret
or
aas
ss
cmp
or
shlb
mov
mov
adc
jl
dec
int
ja
lods
jle
push
and
dec
sbb
push
das
test
leave
jl
lret
out
pusha
push
pop
loope
adc
mov
mov
push
push
sbb
fsubl
fimull
sbbl
fidivrl
push
ret
pop
add
adc
pop
mov
mov
or
les
icebp
mov
arpl
out
sbb
fnstenv
fsubl
sbb
pop
pop
add
sub
jmp
mov
pop
sbb
dec
adc
bound
cmp
ss
or
shl
mov
xchg
cmovbe
sbb
pop
flds
pop
sbb
cmp
xchg
add
nop
punpckhdq
neg
or
jg
inc
dec
ljmp
push
adc
aam
jno
iret
jge
mov
fistps
adc
out
mov
push
push
push
push
ffreep
jmp
idivb
jb
scas
aad
or
frstor
xor
test
xchg
movsb
das
sahf
push
fistps
pop
inc
pushf
push
cmp
push
shrl
or
inc
xlat
xchg
pop
inc
cmpsl
adc
int
lds
or
fildl
inc
dec
xchg
push
enter
popa
lahf
inc
cmpsl
jle
ret
lods
std
fs
cmp
add
add
rcr
lods
outsl
fnstsw
in
mov
popa
xchg
pop
inc
outsl
testl
push
xchg
mov
add
scas
js
out
and
xchg
xchg
jns
loopne
cmp
cltd
aaa
push
sbb
or
mov
jbe
inc
sbb
adc
outsl
cmp
fcomi
cmp
movsb
pop
fisubl
or
je
ret
jp
and
insb
loope
push
xor
and
pop
js
jne
pop
int
inc
inc
cmp
mov
popf
ja
movsb
and
cmpsl
test
fbld
pop
sub
rolb
pop
in
or
mov
jns
push
adc
xlat
leavew
lret
dec
popa
pusha
sarb
notb
jb
mov
adc
js
jl
mov
xchg
adc
out
mov
decb
mov
in
repz
sahf
xchg
hlt
mov
push
fcoms
sub
ljmp
fsubl
cmc
pusha
sub
call
jbe
xchg
pop
lret
ja
and
sbb
imul
fstp
mov
adc
ret
pop
movsl
sbb
stos
or
stc
xor
dec
mov
pop
orb
int
mov
lret
add
jb
repnz
int
call
pop
inc
push
mov
dec
bound
mov
stos
pop
loope
cmp
repz
fidivs
minps
pushf
in
mov
mov
movhps
fdivl
push
jmp
movsl
push
mov
fwait
add
push
lahf
push
iret
and
iret
xor
mov
rcll
push
push
sub
lcall
inc
push
test
dec
adc
iret
test
xchg
fldcw
filds
in
mov
xor
xchg
xchg
and
int3
dec
mov
rcrl
fiadds
sub
and
ret
xchg
mov
leave
cltd
cld
dec
jge
cmp
mov
xor
push
shlb
pop
xchg
in
xor
sarb
sub
movsl
loopne
mov
and
cmp
in
mov
int
mov
xor
pusha
cld
push
mov
mov
mov
mov
sbb
fsubr
pop
pop
inc
je
fwait
bound
aad
enter
xor
mov
call
mov
jg
cmp
aam
and
jo
mov
push
leave
add
push
cmp
std
andb
sbb
add
cmpsb
dec
test
pop
leave
cmp
pop
sbb
test
mull
and
mov
aas
ret
popa
xchg
push
cmp
test
insb
dec
inc
out
mov
clc
call
push
inc
or
cmpl
add
adc
pop
jecxz
mov
inc
ficoml
and
or
push
jne
mov
xorl
push
in
mov
push
and
adc
idivl
lret
xorl
test
sbb
mov
ror
sub
sub
cmp
push
or
push
pusha
xchg
out
xchg
arpl
mov
lock
jp
cmp
cmp
lods
mov
jbe
scas
popf
iret
push
sahf
out
ficompl
test
loopne
push
insb
insl
jno
sbb
das
insl
sub
adc
mov
cmp
or
insb
decb
nop
out
push
repz
dec
adc
enter
mov
bnd
fsubrl
push
sti
sub
arpl
dec
shr
jl
sahf
jge
loopne
and
jle
add
imull
stos
or
cmpsl
xchg
popa
mov
jle
xchg
jae
and
leave
push
pop
mov
push
jge
jbe
js
ds
andb
mov
xor
shlb
mov
pop
adc
aam
lock
pop
jbe
pop
cmp
shl
inc
sub
adc
repz
dec
adc
mov
push
pop
cmp
cmp
cwtl
testl
push
sbb
cltd
fsubp
outsl
inc
add
cmp
mov
inc
mov
jb
pop
ficompl
pop
mov
hlt
and
loope
adc
inc
call
imulb
cmp
mov
imul
test
gs
pop
bound
xor
outsb
jmp
sbb
sahf
sbb
lcall
adc
jge
lea
mov
dec
imul
xchg
out
mov
dec
or
inc
lock
cmp
xchg
push
cmp
cwtl
adc
clc
cmc
lret
adc
mov
jecxz
push
incl
push
jmp
add
mov
xor
jle
stos
mov
cltd
jns
cmpsb
fwait
rcr
jge
cwtl
sbb
test
lods
add
test
test
scas
fs
inc
je
jns
pop
repnz
inc
jge
gs
jmp
int3
mov
mov
fstps
nop
lods
xlat
sbb
cld
mov
adc
lea
push
js
jne
lds
test
rolb
cmpb
lea
mov
les
not
out
cmpsl
fstpt
sub
pop
outsl
ljmp
xchg
arpl
and
jbe
add
imul
lods
inc
inc
addl
and
xor
or
aaa
sahf
mov
bound
xor
lock
ret
inc
shll
aad
sbb
daa
lds
xor
scas
insb
fxch
push
jle
das
imul
and
push
es
mov
add
cmp
jmp
data16
mov
loop
mov
call
inc
bnd
xor
cmpsl
fidivl
sbb
sbb
mov
adc
xchg
cmp
repnz
shll
push
data16
leave
xor
mov
imul
das
and
jmp
sahf
das
add
jle
mov
mov
mov
addr16
mov
xlat
sbb
jmp
or
pop
push
dec
scas
xorl
jle
lds
push
hlt
enter
int
mov
scas
mov
out
out
jnp
lods
xchg
add
ret
mov
fmulp
and
xchg
icebp
cmp
dec
imul
jno
and
fs
pop
add
addl
jo
pop
in
mov
stc
push
pop
pop
rcrl
push
push
or
mov
movsb
fwait
cli
mov
xor
sbb
push
lcall
pop
mov
sub
subb
push
xchg
clc
vmwrite
rol
add
mov
fisttpll
in
jecxz
xlat
or
rclb
dec
xor
mov
xchg
pop
cli
imul
xchg
cwtl
test
subb
xchg
jo
sbb
add
jae
or
jge
mov
ss
andl
add
sahf
add
mov
ss
or
aas
push
rclb
xchg
and
dec
jns
dec
in
test
sub
pop
cs
xor
mov
jecxz
sub
bound
xchg
lahf
inc
inc
push
ret
mov
ss
stos
rclb
dec
or
cmp
and
fyl2x
mov
lds
mov
jns
mov
je
movsl
pop
push
lret
mov
inc
sbb
pop
mov
sarb
pop
out
gs
mov
add
sbb
add
mov
ja
insl
cmp
add
mov
jp
push
sahf
cli
mov
xchg
xor
cltd
ret
ficompl
push
fdivr
push
sub
mov
jns
push
sub
mov
adc
add
sbb
popa
add
fmul
pushf
xchg
xchg
and
imul
push
mov
imul
or
lret
or
popa
xchg
dec
inc
mov
mov
dec
leave
cmp
loop
jns
in
pop
mov
iret
adc
mov
sbb
push
jp
mov
xchg
adc
fmull
aas
dec
aaa
pop
mov
jg
push
int3
xor
mov
in
mov
dec
push
jmp
add
jno
and
and
jnp
cmc
seta
push
inc
daa
mov
sbb
add
jne
mov
dec
mov
push
test
jbe
movsl
jge
dec
mov
jbe
test
sub
mov
fwait
js
imul
cltd
shll
inc
fbstp
dec
jp
call
leave
fildl
dec
lret
and
push
mov
ficomps
imulb
int3
mov
ret
dec
and
pusha
in
jne
pop
mov
outsl
or
shll
cs
mov
ja
insb
xor
cmp
fidivl
insb
cmp
and
sub
adc
jo
addl
push
sahf
add
rcrb
mov
test
xchg
daa
push
aas
enter
mov
adc
mov
xor
or
cmp
mov
sub
roll
cmp
out
dec
xchg
xor
arpl
inc
pop
add
adc
lock
mov
inc
shll
test
jp
enter
xchg
or
scas
fidivrl
sbb
loop
or
xor
stos
lock
fs
mov
push
sub
orb
mov
and
push
out
inc
call
inc
or
dec
fsqrt
xor
leave
sub
gs
xor
cmpsl
jl
pop
std
ficoms
test
mov
dec
sub
mov
mov
test
movb
mov
jmp
xchg
dec
jno
scas
sbb
push
cmp
enter
imul
sahf
movsb
cmp
pop
mov
cmp
call
test
push
iret
repnz
xchg
xor
lds
mov
ds
jg
push
les
mov
xor
cmpsl
jmp
bound
notb
cmpsb
pop
cmp
push
insb
sarl
push
adc
or
je
xchg
lock
sarb
fs
je
pop
xchg
int3
daa
push
lods
lahf
xchg
pusha
jnp
je
fs
fcmovb
sub
mov
stc
cld
cmp
dec
inc
pop
mov
shrb
and
sahf
cmc
inc
inc
mov
into
ja
addr16
or
and
xchg
mov
pop
mov
call
and
test
pop
dec
nop
mov
lret
push
popf
inc
ret
in
insl
stc
clc
mov
icebp
pop
mov
xor
lods
xchg
clc
iret
dec
lcall
neg
mov
inc
mov
and
scas
sub
inc
mov
call
pop
mov
sti
mov
decb
mov
daa
dec
pop
add
inc
cltd
jecxz
mov
jbe
pop
frstor
stc
jo
lods
mov
xchg
sub
pop
mov
ja
jae
jg
xor
lcall
mov
and
ffree
mov
mov
sub
pop
ror
das
rcrb
cltd
hlt
es
sarb
and
jae
movsb
jge
cs
jae
mov
lods
nop
mov
outsb
xchg
inc
inc
and
mov
xorl
dec
xchg
push
sbb
ja
xor
cld
scas
lret
add
xor
fchs
clc
and
mov
addl
popa
and
mov
mov
mov
dec
push
in
mov
stos
sub
sub
in
test
insl
ret
xchg
and
pop
int3
sub
sbb
popf
fcoms
fwait
pop
xor
jp
popa
ret
repz
aad
sti
pop
pushf
inc
stos
sti
xchg
dec
negb
mov
sbb
inc
rolb
pop
cmp
sahf
aam
add
mov
add
subb
pop
inc
sub
pop
xlat
cltd
out
add
pop
std
daa
in
bound
pop
shl
shll
cmp
pop
rol
push
je
jle
int3
mov
dec
xor
outsb
out
fmull
inc
das
xchg
mov
and
xor
movsb
testb
cld
outsb
dec
sarb
pushf
popf
adc
addb
fdivs
push
mov
xchg
add
out
mov
jp
mov
imulb
mov
out
out
push
sub
add
push
jae
push
or
mov
sub
mov
shll
iret
xor
xchg
es
cmpsl
bound
xchg
imul
nopl
lods
mov
pop
adc
jnp
cmp
and
sbb
lcall
xchg
pop
xchg
cld
add
imul
aad
inc
gs
aam
sub
push
pop
hlt
jae
out
inc
popa
xchg
sub
mov
data16
xor
int
mov
fnstenvs
fdivs
loope
sub
cs
xchg
call
and
les
cltd
mov
mov
into
clc
loopne
jne
lret
xchg
inc
cltd
pop
aaa
jb
imul
mov
add
jne
add
mov
ficomps
pusha
or
jmp
jbe
aaa
jmp
iret
lret
lcall
adc
jbe
clc
nop
outsb
icebp
les
test
lcall
cmp
lds
pop
mov
sub
add
mov
rorb
stc
cs
add
loop
or
push
mov
adc
jae
mov
mov
adc
loop
adc
inc
hlt
pop
xchg
dec
adc
imul
sub
and
dec
push
shll
cs
cmp
jge
in
mov
or
add
std
xor
andl
add
adc
add
xchg
sbb
das
fisttpl
or
sbb
imul
aas
cmc
daa
xlat
outsb
jnp
jmp
lret
popa
dec
divb
jno
cmc
pop
and
jl
push
jecxz
dec
mov
mov
lds
xor
imul
mov
test
cmp
cld
fs
cmpsb
add
xor
repz
xor
mov
in
mov
shrb
hlt
lods
inc
pop
arpl
dec
adc
cmp
int3
mov
test
mov
ljmp
jmp
cwtl
stos
in
daa
test
sbb
in
scas
mov
cmpsb
xchg
sbb
jecxz
cs
mov
inc
pushw
xor
push
jae
jl
lret
add
adc
or
mov
pop
orb
jmp
jns
inc
add
jl
data16
scas
int
add
pop
dec
push
add
nop
jbe
jle
sbb
mov
inc
aas
cmp
sub
shrl
mov
add
xor
imul
popf
mov
push
pushf
in
rcrl
testb
ljmp
movsl
add
popf
xchg
orl
push
shr
xor
insb
or
fbstp
rclb
loop
push
dec
xor
push
and
inc
pusha
mov
out
xchg
addr16
and
push
jb
jnp
insb
xor
lods
mov
ja
cmpsb
imul
add
push
aaa
mov
push
push
mov
jg
push
mov
in
dec
push
cmp
fisttpl
mov
int3
lret
ljmp
sbb
cltd
pop
popf
lods
mov
lcall
cmp
and
test
and
xchg
mov
das
pop
sub
addr16
sub
push
int
in
jl
sti
sbb
or
ret
and
mov
xchg
insb
pop
jae
ror
jne
nop
movsb
mov
dec
cmc
and
and
jae
daa
cld
insl
lret
test
jp
fsts
jo
sub
data16
mov
sub
into
icebp
pop
mov
jecxz
lods
add
pop
popa
jmp
adc
push
ds
aas
ror
jnp
cmc
or
scas
bound
call
mov
push
push
adc
inc
inc
add
jmp
stc
jb
inc
cmpsb
mov
ja
and
jecxz
pop
arpl
pushf
out
dec
outsl
or
call
loopne
xchg
mov
fcomi
jnp
popa
push
shr
mov
les
gs
mov
nop
adcl
call
lcall
lea
iret
dec
dec
fmulp
mov
xchg
jmp
rolb
sbb
cwtl
push
bound
adc
test
fucomip
push
stc
add
sub
pop
shrb
jae
clc
inc
inc
mov
dec
scas
xor
pop
inc
ljmp
aaa
dec
xchg
mov
mov
push
push
push
repnz
jae
push
cmp
lock
inc
xlat
push
jg
mov
push
addr16
lret
xor
dec
fmull
shrl
push
cwtl
pusha
jnp
jae
mov
cmp
mov
shrb
pusha
mov
orb
add
clc
push
loopne
adc
js
scas
jle
sti
xchg
mov
sahf
xor
cmpsl
push
lds
nop
xor
mov
sbb
aam
sub
inc
fmuls
cmpsl
jge
sahf
pop
push
and
testl
sub
mov
leave
cmc
mov
adc
test
test
sub
xorl
sub
inc
pop
mov
push
push
or
lcall
out
xchg
aas
sbb
xchg
cmp
dec
push
push
add
jle
stc
js
ja
pushf
xchg
inc
test
jmp
mov
int
mov
aas
pop
or
pop
mov
sub
fmull
inc
cmp
or
mov
add
je
xchg
les
jl
std
sbb
jb
push
mov
mov
imul
cld
das
mov
lods
das
pusha
cwtl
out
pop
jnp
nop
adc
cmpsb
fdivr
jns
mov
aas
rorl
scas
mov
cmp
fnstsw
fiaddl
fdivrl
rcll
add
push
inc
jg
jg
fdiv
ljmp
addr16
jp
cmp
fsts
ficoml
adc
fcmovbe
scas
pop
xlat
cmp
mov
decl
int
add
pop
xor
lahf
mov
subl
add
mov
mov
adc
mov
js
adc
inc
cmp
cmpb
xchg
cmp
dec
ret
xchg
jae
repnz
mov
mov
mov
ret
lcall
add
int3
int
jp
adc
sub
adc
lock
sub
dec
rcr
mov
xlat
dec
mov
adc
cmpsb
adc
mov
scas
jne
adc
xchg
test
in
mov
cwtl
outsb
out
js
insb
push
call
xchg
jo
jne
pop
jae
cmpsb
push
mov
out
loopne
scas
push
pop
in
addr16
xor
mov
mov
and
inc
cmpsb
jne
fsubl
fstpl
add
les
cmp
outsb
fwait
loope
loop
jle
xchg
ficompl
mov
popa
test
lods
nop
pop
sahf
mov
push
sarb
jb
jmp
adcb
mov
stc
notb
mov
fmuls
nop
jmp
hlt
sbb
jo
out
push
adc
enter
jp
rorb
enter
inc
sub
mov
stos
adc
cs
cmpsb
fstpt
movsb
mov
lods
add
add
in
shl
pop
sarl
arpl
mov
inc
and
into
mov
sbb
fldl
out
mov
insb
out
shll
sti
pushf
inc
mov
aas
cli
sbb
xor
xchg
sub
dec
mov
aad
movsb
cmp
mov
ret
div
mov
fdivl
jb
add
mov
in
jb
pushf
add
mov
jl
dec
roll
in
mov
rclb
pusha
aaa
outsb
and
mov
and
mov
jmp
pop
and
and
lods
jp
rep
mov
or
mov
pop
sub
jo
lock
or
movsb
adc
clc
dec
mov
into
pop
mov
push
bound
xchg
call
cmpsl
add
xchg
arpl
fidivl
jae
mov
cmp
movsl
mov
add
test
inc
ds
std
xchg
push
jmp
pop
aad
jl
xchg
jae
std
fistpll
aas
lahf
js
adc
sarl
and
pusha
mov
inc
mov
dec
movsl
jo
push
push
or
push
dec
mov
pop
insb
xchg
idivl
fs
mov
and
rcll
adc
jp
cmp
inc
inc
lock
mov
icebp
sbb
or
movsb
mov
pop
out
loopne
push
out
fdivp
aad
fs
repnz
mov
push
adc
mov
mov
std
das
jnp
lds
inc
mov
outsl
nop
cltd
or
das
fucomp
testb
push
or
cltd
or
std
scas
addr16
mov
mov
aas
or
hlt
into
movsl
arpl
das
cwtl
mov
int
jb
mov
fpatan
mov
push
cmp
jecxz
aas
add
dec
sbb
scas
or
jp
test
imul
pop
mov
popf
adc
nop
xchg
leave
xor
cmp
aad
imull
inc
xlat
mov
xchg
and
or
mov
shrb
sbb
je
fcomip
jmp
or
fmuls
cmp
xchg
filds
rorl
add
cmp
stos
or
sbb
push
xor
das
dec
mov
xlat
add
test
jne
jo
out
cmp
iret
lret
sbb
lock
pop
aas
and
test
inc
pop
jecxz
lods
rorb
test
and
xor
sahf
pop
int3
push
dec
lods
les
les
sub
es
or
mov
xchg
js
cld
lods
sbb
popa
mov
sti
and
mov
cmpsl
lods
push
addl
inc
cmp
inc
std
xor
sti
cmp
enter
inc
adc
add
lds
sub
mov
inc
ljmp
push
mov
mov
int3
xchg
push
sub
js
iret
push
test
out
push
movsl
jecxz
sub
and
xchg
sbb
movsb
inc
ret
lahf
pop
ljmp
aas
movsb
xor
mov
lock
dec
xchg
cmpsb
sbb
sti
jl
xchg
lock
int3
sub
gs
mov
jb
lret
push
jecxz
xor
sbb
shl
or
pop
mov
jb
push
push
sub
jns
sbb
xchg
ss
bound
cld
adc
jmp
pop
jecxz
in
jno
or
arpl
gs
icebp
addr16
add
inc
or
stos
xor
jl
dec
pop
push
push
dec
jl
lock
add
cmp
loope
jbe
pop
mov
in
inc
push
sub
enter
lahf
ljmp
js
cli
sti
pop
gs
stos
adc
sti
sbb
or
and
int3
or
in
sub
add
mov
push
int3
aad
nop
mov
sbb
mov
dec
push
shl
xor
pop
sub
loopne
mov
sub
adc
jno
push
ss
mov
xor
scas
sub
sahf
sub
loop
push
xor
cli
sahf
mov
aaa
push
ljmp
mov
bound
fbld
fimuls
jnp
xchg
sbb
in
je
push
dec
movsb
pop
movsb
or
push
es
cmp
mov
pop
outsl
gs
fcomp
fiaddl
sbb
xor
hlt
jne
cmp
add
fimuls
scas
push
mov
cmp
ret
xor
adc
test
cli
cmp
push
and
dec
jno
gs
or
sub
jle
movsb
rol
je
test
dec
xor
jle
mov
sbb
and
jb
testl
fadds
adc
pop
pop
jl
out
es
das
xchg
mov
cmp
shlb
push
xchg
mov
mov
lahf
mov
fwait
add
add
jns
or
mov
rcll
pop
sarb
js,pt
or
mov
pop
push
dec
ja
cwtl
enter
inc
mov
lock
sbb
bswap
xor
hlt
jmp
push
push
cmpsl
inc
or
movsb
ss
xor
cld
mov
dec
add
jbe
mov
shlb
arpl
in
mov
lea
xchg
push
mov
mov
push
fdivrl
rcl
stos
hlt
ds
dec
loopne
testb
mov
incl
fucom
xchg
ret
test
and
sbb
int
shl
and
fisubrl
xchg
daa
cmpsb
stos
inc
idivb
cmp
jge
and
xor
mov
mov
stos
das
lret
cmovnp
inc
cli
add
iret
call
sbb
imul
add
mov
pop
and
jno
push
jmp
cmp
fcompl
sbb
aam
pop
fmul
mov
insl
popf
add
test
pusha
inc
inc
pop
xor
popf
ret
mov
add
rorw
arpl
mov
dec
int3
mov
or
mov
push
stos
add
stos
loope
jo
mov
adc
addr16
and
cmpsl
cmc
jecxz
ret
lret
xchg
pop
xor
lea
enter
shrl
and
test
test
shlb
xor
clc
xor
mov
stos
mov
xchg
xchg
mov
dec
cwtl
decb
mov
roll
and
adc
sti
sbb
movsl
pop
dec
int
pop
aas
insl
jo
cmpsl
pushf
mov
dec
pop
or
mov
fsubrs
les
inc
adc
push
ftst
sahf
mov
insl
divb
adc
cmp
cmp
shl
fisubl
dec
jl
aam
lret
dec
lret
mov
aaa
incl
nop
lahf
ret
push
pop
pop
ja
call
mov
and
add
pushf
sub
cmp
jg
cmpsl
mov
test
fstpt
or
add
dec
push
jle
sub
cwtl
and
or
and
jge
dec
into
jle
cmp
gs
pop
mov
mov
mov
jne
jb
push
jg
push
ss
xchg
data16
jg
daa
jg
outsb
inc
repnz
lods
pop
pop
lret
test
or
push
gs
adc
dec
push
cmpsl
jle
mov
fisubs
add
inc
or
fisttpl
cmp
push
mov
jmp
dec
sbb
jne
jp
pop
sarb
das
mov
mov
dec
sbbl
fcmovb
pusha
jae
mov
mov
imul
adc
ret
rolb
or
mov
insb
arpl
xchg
sbb
and
inc
cmc
xchg
adc
fsubs
mov
sahf
repnz
push
outsb
fcomps
xor
mov
sti
and
iret
jge
jno
lret
inc
stc
xor
and
sti
add
imul
fs
cmp
std
lods
jo
jmp
mov
shll
loope
fdivrl
sbb
out
mov
cmpsl
stos
aaa
outsb
leave
push
out
add
out
cld
push
inc
cmp
inc
lret
scas
xchg
rcll
insb
jnp
std
mov
aas
mov
mov
mov
cmp
aam
addr16
fs
mov
aas
ja
add
sbb
lahf
jge
xor
lahf
cmpsl
mov
nop
aaa
pop
mov
lods
mov
call
in
xchg
fsts
addr16
sub
rcrl
fistpll
push
lret
test
js
jae
lret
add
hlt
and
lret
push
push
xorl
mov
cli
dec
and
dec
movsb
xor
mov
inc
lock
cs
stc
mov
push
insl
adc
std
xorb
mov
sub
push
fisubrs
dec
xor
inc
jbe
add
stc
dec
and
mov
jns
faddp
outsb
pop
cmpsl
sub
popf
jp
jns
jl
mov
movsb
rol
sub
mov
dec
sbb
test
mov
stc
mov
inc
dec
sbb
movsl
adc
xor
popa
stc
int
cmpsb
rol
jge
aad
mov
loop
lea
icebp
ljmp
inc
inc
inc
cmp
pop
cwtl
dec
or
and
xor
sbbb
lock
xchg
out
jg
pusha
adc
inc
sub
lret
adc
add
sub
das
hlt
mov
lea
sbb
or
sti
pop
test
cmp
out
push
popf
imul
jmp
push
loope
xchg
in
or
and
sbb
rcrb
jp
xlat
cmp
stos
mov
add
int
mov
in
mov
mov
xlat
mov
movsb
insl
repnz
repnz
inc
adc
out
cmp
stc
shlb
pop
mov
ja
loopne
mov
loop
daa
out
in
adc
aam
test
mov
xchg
call
mov
push
sbb
sbbl
jp
outsl
dec
loop
and
xchg
jb
jle
xchg
xor
xor
sbb
jge
dec
popf
and
test
nop
pushf
mov
loope
mov
pop
mov
cli
popf
pop
push
cmp
jne
push
pushf
movsl
out
mov
pushf
inc
out
push
je
dec
out
adc
inc
inc
mov
xchg
push
and
push
or
mov
stos
flds
aas
inc
push
mov
mov
scas
or
lea
lret
jle
jp
xchg
movsl
xlat
push
sub
mov
loope
dec
pusha
int
sti
pop
pop
clc
outsb
mov
inc
add
inc
mov
push
add
sahf
pop
notb
jns
mov
mov
inc
mov
jb
jp
test
sbb
imul
and
movsl
inc
push
sub
dec
das
sub
repnz
cld
inc
mov
test
enter
lahf
mov
mov
lods
repz
ret
das
dec
mov
clc
jae
lods
clc
icebp
je
lcall
mov
cld
mov
sbb
fisttpll
add
sub
loope
adc
cmp
mov
subl
mov
mov
cmp
adc
es
bound
cmove
pop
sti
pop
mov
repz
jecxz
es
cmp
test
aaa
stos
fwait
js
fsubs
push
jbe
add
pop
mov
cmp
ljmp
mov
pop
decb
push
in
shrb
mov
or
mov
mov
aad
lret
push
push
fstps
gs
add
enter
js
cmpsl
dec
or
mov
jbe
or
mov
scas
ret
rol
sbb
lock
ss
sub
lods
mov
sub
push
mov
mov
jl
adcb
es
lcall
sbb
insl
sbb
movsb
sti
sub
or
dec
ja
dec
shrb
lret
repz
loop
inc
fucomip
lahf
xchg
inc
mov
fwait
inc
or
xor
xchg
pop
xchg
mov
scas
inc
out
xor
nop
add
les
daa
xor
sarb
imul
mov
jae
movsl
fimuls
xchg
out
cli
mov
mov
ljmp
sub
scas
enter
push
mov
or
repnz
cltd
push
jo
ds
inc
jp
fiadds
js
repz
push
pop
sbb
mov
xchg
mov
cwtl
mov
imul
and
push
jmp
mov
xchg
add
fcoms
lea
enter
inc
fstpl
lods
negb
mov
rcll
xchg
push
push
adc
jne
shll
insl
xchg
mov
cld
adc
and
fdivrs
push
or
mov
cltd
sbb
sarl
pop
xchg
js
sar
lret
es
add
or
mov
loop
bound
rorb
lret
pop
push
aad
fisubrs
xor
pop
sbb
js
loopne
ljmp
test
mov
mov
or
scas
dec
mov
pop
mov
mov
push
clc
fldenv
mov
mov
xchg
jns
sub
xchg
push
int3
out
dec
outsl
push
jmp
daa
pop
fwait
mov
adc
leave
in
scas
inc
add
in
and
cmpsb
xor
setg
test
insl
out
aad
test
dec
sub
int
movsl
pop
mov
push
xor
shlb
mov
pop
xchg
imul
mov
popa
es
mov
aas
icebp
negl
sarb
fsubl
cwtl
fistpl
and
cmp
mov
jmp
jge
aad
ds
add
out
xchg
jae
test
xor
les
dec
pop
out
push
mov
sahf
fists
xchg
cmp
pop
dec
push
push
ffree
jecxz
add
mov
add
stos
out
adc
lret
aaa
dec
xchg
and
pop
fs
call
jnp
add
jnp
mov
int3
out
and
pop
jp
mov
cmp
cmpsl
ja
andb
jns
les
pusha
pop
insb
hlt
sub
cmpsl
fsin
outsl
mov
and
jg
xchg
lcall
mov
in
dec
scas
rorl
jno
rorl
dec
fcomi
jns
scas
std
add
mov
push
jp
mov
mov
popa
xor
ss
mov
aad
stc
fwait
or
sbb
addr16
xchg
mov
dec
push
inc
aaa
test
mov
lods
dec
jb
add
repz
inc
dec
insl
xor
dec
cmp
aas
lock
jo
cli
push
mov
lret
shr
inc
imul
das
fildl
repz
mov
mov
mov
sbb
push
sbb
pop
mov
push
mov
js
mov
in
mulb
mov
pop
push
std
xchg
pop
pop
push
in
sti
mov
gs
jnp
cmc
inc
rcr
int3
add
or
xor
ljmp
sbb
mov
inc
push
pop
pop
dec
mov
lcall
rcr
mov
repnz
pop
push
loope
or
inc
pop
mov
adc
pop
xchg
inc
dec
mov
rcll
lods
pop
in
mov
dec
jns
loope
fisubl
mov
dec
mov
les
mov
cwtl
js
sub
insl
adc
dec
aad
fisttpl
and
int
pop
and
nop
adc
les
or
sbb
cmpsl
cltd
scas
add
xchg
mov
jecxz,pn
aaa
or
mov
scas
lret
xchg
notb
jmp
paddsb
les
push
test
icebp
loop
out
mov
ret
pop
jp
jmp
sbbl
ljmp
lret
cmc
pop
add
les
and
jecxz
dec
mov
sbb
push
pop
xor
dec
xchg
outsb
insb
jmp
inc
dec
and
cmp
lcall
popf
ljmp
mov
mov
imul
adc
dec
std
xor
je
loop
std
addl
cmp
sarb
sub
iret
lods
faddp
pop
out
outsl
sbb
sbb
mov
sahf
clc
jg
adc
adc
jnp
ja
test
mov
mov
imul
mov
push
rdrand
fiaddl
sub
mov
jns
lret
gs
sbb
dec
popf
shrb
mov
nop
mov
loope
cmp
pop
sbb
fldt
cmpsl
dec
inc
roll
outsl
push
lds
es
bound
fmulp
sub
cmp
imul
xchg
mov
pop
or
pusha
cs
xor
add
xor
bound
jl
les
xchg
inc
mov
mov
lcall
inc
dec
fsts
enter
es
cli
lret
jne
cmp
push
dec
gs
subb
inc
dec
adc
enter
push
sbb
lock
das
add
push
pushf
mov
stc
xchg
lods
xor
fdivr
xchg
xchg
test
cmp
pop
sbb
inc
xchg
mov
popf
repz
imul
pushf
cmp
sbb
sub
popf
fimuls
es
xchg
jecxz
das
add
scas
jg
mov
je
fxch
in
popa
into
xchg
push
ds
sbb
and
adc
mov
jns
xorb
pop
and
jb
mov
bound
dec
push
jne
das
add
jbe
in
call
dec
rol
movsl
out
scas
cwtl
cmp
jnp
sub
ja
insl
inc
loopne
sti
or
push
adc
xor
cmp
fcmovb
mov
xchg
inc
push
pop
cli
je
and
fwait
mov
cmp
sbb
insl
ret
loope
scas
mov
xchg
pop
xchg
mov
mov
push
cmc
sti
iret
dec
int
lods
mov
or
mov
mov
push
rcrb
insl
test
push
pop
and
mov
adc
ds
cmp
orl
xchg
movsl
gs
test
add
push
in
movsl
daa
lret
and
aad
lods
ja
and
sti
mov
loop
xor
and
movsl
filds
inc
mov
int
subb
jbe
cmp
and
and
dec
jae
mov
fidivrl
negl
cmc
movb
test
adc
movsb
fs
popa
sub
call
clc
data16
or
int
or
mov
ret
adc
fists
shll
scas
pop
lret
or
nop
cmpsl
test
je
ljmp
sahf
and
xchg
fbstp
notl
mov
xchg
add
fs
mov
sahf
jae
cs
fadd
mov
je
in
pop
scas
or
and
enter
jbe
test
jmp
mov
add
pop
pop
xchg
add
sbb
les
scas
mov
cwtl
xchg
mov
sub
jo,pn
out
mov
cmp
cmp
cmpsl
mov
xor
inc
pop
mov
movsl
pusha
sub
loop
inc
jae
fdiv
push
iret
inc
dec
jno
pop
lock
or
insl
sbb
movsb
cmc
jo
xor
dec
in
lahf
dec
jl
lds
out
mov
bound
cmpsl
fdivr
push
decl
and
int3
dec
sbb
xor
jge
pusha
mov
mov
cli
xchg
js
aaa
inc
js
adc
mov
pop
sahf
std
push
cltd
pop
loop
inc
pop
jl
fimull
mov
sbb
xor
adc
push
mov
jns
ljmp
out
loop
pushf
arpl
jne
push
test
mov
push
in
dec
testb
aaa
and
lret
ret
cmp
cld
push
push
add
push
imull
shl
incb
ja
mov
push
ficompl
addb
cltd
clc
subb
sub
jg
xchg
fistl
mov
jle
lcall
add
sti
pop
aam
or
and
add
insl
jecxz
jbe
mov
test
lea
pop
push
lret
int
or
popf
sbb
mov
lds
insl
loopne
jo
push
xor
das
mov
imul
loope
insl
sbb
ljmp
or
xor
adc
add
sub
rorb
aad
cmp
inc
test
les
push
cwtl
les
mov
xchg
and
rcll
sbb
hlt
and
test
arpl
aad
out
adc
adc
inc
nop
lods
cwtd
sbb
in
xchg
lds
cmp
push
cmp
arpl
add
add
je
inc
jb
in
push
sbb
aaa
pop
sar
xor
pop
sub
push
imul
lahf
jbe
mov
inc
rorl
mov
les
or
or
fs
cmpsl
mov
add
xchg
lods
sahf
cmp
mov
mov
fwait
test
and
lcall
xchg
jne
sub
mov
out
leave
pop
mov
aaa
pop
inc
popa
mov
push
mov
or
in
pop
gs
cmp
daa
pop
xor
add
lock
xor
nop
test
adc
push
test
cmp
dec
ds
xor
adc
dec
dec
jnp
mov
xor
int
gs
scas
sub
js
inc
or
ds
int
lods
and
sti
ds
lods
lock
push
add
mov
push
and
aaa
cmp
aam
nop
and
adc
cmp
rclb
mov
aam
xchg
cmp
ljmp
nop
notl
mov
sub
fildll
sub
or
sbb
add
rolb
aad
xchg
dec
ficoms
sarb
fnstcw
xchg
cmpsl
loopne
jo
fstpl
push
int
mov
stos
outsl
dec
out
dec
inc
cmp
adc
pop
insl
loope
inc
fs
daa
outsl
fiadds
and
outsb
call
cmp
ret
mov
sub
mov
sbb
iret
out
loopne
lret
lea
in
push
lret
push
sbb
loopne
adc
out
sbb
adc
xchg
push
xlat
push
sti
dec
test
xlat
push
or
add
fidivrl
mov
test
adc
add
push
xchg
shll
js
lods
cmp
push
cltd
jle
loop
ss
orb
dec
inc
add
sub
imulb
jg
test
mov
std
push
in
shll
mov
popa
loop
and
mov
imul
xor
stos
fildll
mov
and
and
pop
mov
movsl
cmpsb
cmp
ficoms
and
pop
push
gs
sbb
or
cmovs
mov
xchg
out
jne
mov
pop
or
or
pop
sub
push
daa
xor
add
add
pop
dec
push
xchg
pop
xchg
std
mov
push
int
xor
and
in
mul
jg
aad
pop
std
rcrb
fcoml
idiv
pop
icebp
add
and
notb
push
pop
jmp
insl
aaa
add
sarl
pop
cs
das
pop
js
cvtpi2ps
mov
stos
fmuls
js
test
pop
xchg
aad
inc
and
sbb
inc
fistl
ja
pusha
inc
xchg
lods
mov
outsb
jbe
xchg
repz
test
mov
dec
jp
rcll
sub
mov
mov
push
stos
inc
push
adc
bound
mov
dec
cmp
lods
cmpb
sub
ja
mov
nop
loope
xchg
cmpsl
cmpsl
add
fildl
pop
pusha
sub
push
push
mov
cltd
add
dec
lret
roll
rclb
jecxz
fcmovu
int
lods
push
xchg
imul
pop
loopne
and
enter
mov
sub
inc
pop
fsubrl
push
negb
out
mov
mov
pop
cmp
std
mov
shll
cmp
inc
sub
rclb
mov
pop
sub
mov
mov
add
push
sbb
rol
jp
mov
jno
push
cmp
ja
and
data16
add
pushf
inc
int3
sbb
fstpt
subl
cmp
push
ljmp
push
jne
dec
pop
pop
lcall
sbb
mov
xor
mov
lds
add
arpl
lahf
ficoml
call
sub
add
or
je
insb
cs
push
ja
pop
jmp
shr
jns
cltd
xor
nop
push
pop
mov
pop
aaa
fwait
mov
sub
pushf
fnsave
rolb
loop
in
aaa
sbbb
jbe
movsl
sbb
cs
cmpsb
mov
aam
or
pop
or
add
in
xor
fcmovnu
cmp
in
jle
mov
outsb
pop
mov
xor
fld
xchg
sub
loop
xor
clc
mov
mov
sti
xchg
mov
unpckhps
jecxz
inc
rcrl
movb
xchg
push
aam
lock
cmp
lcall
and
test
outsb
xchg
sbb
or
js
dec
test
lea
or
inc
inc
cmp
imul
push
jae
mov
jno
add
lods
test
push
adc
inc
push
push
lret
movsb
inc
data16
les
mov
mov
xchg
jb
and
mov
into
rclb
sub
xor
loop
push
adc
push
mov
cli
in
js
movsl
adc
dec
popa
sbb
sbb
or
jg
cmp
fs
decl
insb
pop
jo
push
jno
inc
sub
insb
shrl
pop
jmp
push
jecxz
inc
ja
jl
xchg
scas
rorb
push
cmp
adc
mov
mov
xor
jns
add
mov
push
xor
and
cli
inc
cli
idivl
dec
xchg
xor
xchg
out
mov
or
mov
decb
mov
jecxz
ss
add
xlat
inc
pop
inc
push
mov
mov
ret
pop
into
mov
daa
testb
cmp
jne
dec
fisttpl
add
imul
and
es
inc
lods
or
fimuls
push
imul
adc
sub
out
test
in
aam
enter
or
and
inc
cs
lahf
orl
test
cmp
cs
outsb
jmp
out
inc
xchg
lret
scas
jnp
pop
adc
or
and
add
cmp
inc
jg
gs
mov
adc
fs
and
push
dec
push
push
stc
inc
lret
fistpl
in
cltd
sub
cmp
mov
je
scas
add
in
xchg
in
and
mov
arpl
imul
sub
adcl
cmc
adc
fmul
push
fsub
ret
sub
insb
jne
mov
pop
and
sbb
jne
xchg
inc
dec
ror
dec
dec
jl
jmp
in
sub
stos
std
jge
mov
ljmp
mov
cwtl
add
xchg
jno
adc
iret
repz
js
xor
xchg
lret
je
je
mov
jmp
fidivrl
dec
push
int
scas
test
add
testb
rcr
and
test
add
loopne
mov
popa
xchg
push
fisubrl
test
pop
inc
sti
mov
popa
jno
push
xchg
negl
jbe
fcmovb
mov
leave
inc
sbb
imul
mov
test
mov
icebp
jl
or
jb
mov
push
inc
nop
lret
daa
cmpsl
pop
lcall
mov
aas
lret
mov
je
jle
sti
pop
and
cmp
aaa
icebp
push
lods
add
imull
push
inc
dec
loopne
jmp
cmp
adcb
mov
and
mov
add
sbb
call
cmp
call
mov
and
xor
faddp
ds
lahf
add
scas
cli
jae
subb
pop
jle
mov
arpl
jmp
xor
out
jno
mov
in
cmpsl
cs
lods
jp
cwtl
ret
stos
jnp
jbe
mov
push
das
test
and
mov
cs
and
and
imul
mov
mov
aaa
xchg
mov
pop
and
cld
sbbb
pop
adc
pusha
push
pop
nop
and
sbb
in
xor
icebp
sub
cs
adc
rolb
insb
push
clc
jl
xor
loop
lret
xor
dec
mov
mov
cwtl
into
lea
sub
popa
cmp
pop
shrb
xchg
mov
mov
push
repnz
hlt
fbstp
mov
sbb
incl
or
addr16
dec
arpl
dec
inc
js
in
push
mov
xchg
hlt
xor
and
int3
sti
movsb
in
fcom
jne
xor
aam
and
mov
inc
jno
out
push
jmp
inc
sbb
scas
xchg
out
or
add
sbb
push
or
dec
jecxz
data16
xchg
ds
and
push
jbe
sbb
out
inc
mov
fisubl
mov
jecxz
movsb
mov
jl
in
faddl
lock
push
scas
pop
out
aas
push
sub
adcb
and
pop
xor
jne
add
sarb
test
mov
push
pop
or
xchg
inc
sub
ret
call
sub
insb
cmp
xchg
jo
lods
shll
pop
out
xchg
cli
loopne
cmp
lcall
jge
sbb
pop
jnp
jle
je
rclb
push
test
jg
popa
outsb
mov
in
pushf
in
push
adc
data16
cltd
pop
sahf
pop
xchg
leave
pop
xchg
xor
loopne
dec
or
rcrl
lahf
push
mov
and
push
data16
imul
jg
pop
and
cmp
mov
sub
imul
lret
shrb
mov
or
in
lods
add
leave
mov
pop
outsl
mov
dec
gs
in
dec
jmp
dec
adc
push
fistl
out
mov
jnp
adc
adc
dec
clc
repz
movsb
test
add
aas
sbb
mov
lcall
ss
cli
fdivl
dec
fwait
rcl
sbb
repnz
scas
inc
inc
pop
mov
aad
outsb
lea
scas
fnstsw
popf
xchg
push
sbb
mov
in
adc
mov
in
sub
cmp
push
test
bound
out
inc
xchg
mov
inc
pop
jg
jnp
xchg
lret
xorl
add
aad
insb
xchg
cmp
sbb
test
mov
jmp
popf
add
leave
mov
mov
cld
in
mov
mov
sahf
mov
ds
ret
jnp
pop
movsl
enter
cmp
in
mov
jae
cltd
adc
shll
ja
xorl
lods
push
sbb
cmp
cmpb
sbb
jg
mov
cmp
faddl
les
loop
sub
sbb
bound
ret
adc
call
ficoms
and
cli
adc
aad
cmpl
add
xchg
inc
out
jge
sub
dec
sbb
addl
xor
clc
stos
das
adc
xor
mov
and
int
push
popa
fmull
loope
xchg
imul
jns
cli
sub
not
cltd
pop
or
clc
pop
int3
and
pop
stos
stos
js
and
add
cmp
es
imul
inc
dec
fwait
in
dec
jns
adc
leave
pop
xchg
adc
cmpsb
scas
xchg
cmp
jno
fcom
aaa
jge
mov
pop
idivl
cmp
cmp
aaa
mov
sbb
gs
rcll
jmp
cmpsb
in
inc
stc
xchg
notl
nop
mov
xor
or
mov
in
and
cmc
mov
repnz
cmpsl
mov
xchg
or
and
push
push
ret
cs
pop
add
cmp
inc
push
sub
iret
jbe
hlt
loopne
xchg
mov
shr
or
pop
outsb
push
stos
mov
cmp
dec
sbb
jne
jp
adc
and
mov
outsb
je
movsb
inc
cmc
cld
pop
and
andl
divb
aam
jl
and
ljmp
popf
dec
pop
repz
xor
mov
dec
push
jb
push
cmp
inc
pop
lds
push
add
aam
mov
or
outsl
lods
in
aad
rclb
add
rolb
or
ds
pop
jne
pop
push
push
jns
lcall
data16
mov
icebp
push
outsl
lahf
mov
test
nop
mov
push
cld
fiadds
lea
xchg
jbe
sahf
ljmp
mov
aad
mov
cmp
xor
mov
add
adc
inc
test
jb
cli
and
xchg
imul
dec
push
adc
jl
add
sarb
out
scas
adc
jle
xor
sbb
add
sub
jle
scas
lea
test
and
pop
push
stos
in
cli
imul
xchg
aaa
add
repz
pop
pop
shrl
or
bound
add
repnz
je
out
adc
add
adc
pusha
jle
faddl
cltd
cmp
scas
ret
movsb
mov
pop
push
mov
push
sub
in
int3
inc
mov
cld
xchg
aas
into
or
push
data16
lahf
jge
sbb
imul
shl
daa
js
xchg
adc
je
xchg
pop
cmpsl
mov
cmp
hlt
in
fdivrp
sub
out
enter
ds
sbb
movsb
in
insb
sahf
and
inc
lcall
add
mov
movsb
cmp
and
mov
test
jg
lds
cld
adc
mov
cmp
xchg
adc
jge
inc
aam
add
nop
xchg
adc
sub
mov
jge
mov
mov
mov
sbb
mov
adc
nop
mov
push
xor
fildl
pop
cmp
mov
sub
adc
cmp
xor
bound
cli
cmp
cltd
aad
push
repnz
jmp
ret
popf
cmp
enter
setno
data16
pop
mov
dec
sbb
mov
sub
test
xchg
xchg
dec
shrl
adc
fwait
mov
mov
adc
movsb
sub
loop
jo
jo
mov
sub
nop
mov
jae
inc
vmovddup
pusha
push
sti
les
sbb
push
lock
mov
or
lock
mov
fcomps
mov
inc
add
xchg
push
aaa
ja
sbb
adc
sub
es
xchg
and
sti
lcall
push
add
mov
xchg
clc
ss
das
std
mov
imul
mov
bound
je
testl
sub
cmp
and
cmp
mov
sub
insb
ret
sub
testl
inc
mov
les
data16
out
jne
jl
jne
or
xor
mov
loopne
sbb
outsb
fdivrl
rcrl
lock
std
push
sarb
pop
sarb
pushf
test
lds
sub
push
jnp
ret
movsb
movsb
mov
imull
adc
out
inc
sub
roll
aaa
xor
mov
cmp
test
test
aam
out
shrb
xor
sub
inc
sub
inc
shrb
and
aaa
iret
out
scas
rcl
daa
jl
fnstcw
out
pop
popf
mov
jecxz
sar
pop
xor
rorl
sbb
mov
mov
call
imul
lods
aaa
and
push
lcall
mov
fadd
pop
ret
dec
es
inc
arpl
idivb
sub
pop
push
ret
sbb
fcmovnu
dec
mov
jb
push
arpl
or
sahf
fwait
mov
nop
repnz
or
push
mov
or
xlat
or
negl
stc
cld
roll
mov
imul
push
jl
ljmp
pop
rcr
shlb
pop
sti
shrb
and
mov
movsl
lret
out
sbb
inc
mov
mov
cmpsl
into
fadds
sbbb
int
pop
into
popa
setno
push
mov
mov
lahf
adc
repz
lret
add
mov
and
js
mov
adc
rcr
in
or
ficomps
pop
push
in
mov
dec
call
add
pop
and
pusha
loop
sub
or
loope
je
loope
call
lods
inc
pop
fists
std
rol
dec
stos
or
fistl
nop
icebp
scas
scas
jbe
dec
leave
fadds
add
sbb
ret
inc
iret
jge
mov
aam
outsl
adcl
inc
ret
lods
sbb
mov
je
jne
out
push
sub
cmp
jl
push
int
enter
jge
pop
lods
dec
pop
popa
orb
xor
push
sahf
pop
and
es
mov
sub
mov
mov
popa
push
mov
jno
add
sbb
fidivl
jae
cmc
xor
ljmp
cltd
sub
push
lods
sarl
cmp
jae
add
push
mov
ss
sbb
or
sub
imul
mov
jo
movsb
inc
add
pop
fwait
repnz
pop
xchg
xchg
fbstp
adc
jnp
sbb
add
pop
in
or
popa
add
loopne
cmp
test
push
mov
jmp
mov
jge
bound
dec
nop
sbb
ds
scas
pop
outsb
pop
subb
xor
ret
repz
repnz
jne
jg
jbe
loope
scas
outsl
mov
or
lds
lcall
xchg
sbb
and
mov
push
mov
pop
out
flds
and
lock
stos
xor
jmp
pop
incl
jmp
dec
cmpsl
insl
outsb
ror
xchg
movsl
mov
rorl
jbe
dec
mov
cmp
and
rcrb
lods
int3
mov
fstl
and
jp,pt
xchg
sbb
ror
cltd
cmpsb
incb
jle
lret
jae
xchg
sbb
xchg
lock
pop
rep
push
out
or
sbb
push
loopne
jle
fstpl
daa
pop
les
nop
pop
mov
pushf
fistpl
dec
xor
sub
or
adcl
lods
adc
gs
xor
dec
pop
jge,pt
dec
jmp
jge
jnp
popl
pusha
add
pop
out
les
cltd
push
push
jl
jnp
pop
pop
cmp
ret
xchg
xor
push
sbb
inc
sub
mov
pop
push
int3
xchg
sub
xchg
mov
dec
push
scas
cld
insl
fdivrs
mov
mov
rcrl
aam
fdiv
imul
roll
mov
cld
or
in
rolb
jmp
pop
out
xor
xor
mov
icebp
pop
sbb
mov
repz
sahf
ljmp
aas
push
in
and
out
dec
stc
jmp
jbe
lock
jns
jge
incl
sbb
push
aam
mov
cmp
nop
pop
enter
loopne
addb
cmp
stc
sbb
int
dec
or
aaa
xchg
cli
les
fimuls
jns
cwtl
mov
adc
mov
aas
clc
pop
or
cld
incb
xchg
je
mov
sub
loopne
movl
popa
ret
sti
pop
mov
cltd
adcb
xor
add
lods
or
lds
loop
int3
push
enter
test
dec
mov
scas
aas
int3
popa
out
inc
lods
or
inc
dec
sbb
mov
lret
sbb
je
cmpsl
lods
fnstsw
jnp
stos
cmp
scas
jg,pn
sub
mov
loopne
call
cld
in
aad
loopne
inc
dec
push
ret
pop
mov
daa
hlt
mov
int
lds
mov
mov
mov
cli
outsb
std
test
xchg
cld
pop
adc
fistl
lcall
cmpsb
sti
push
jmp
cmpsb
pop
shl
repnz
shrl
dec
jnp
nop
mov
push
sahf
nop
mov
xchg
test
inc
xlat
loopne
shrb
jg
pop
inc
inc
and
or
sub
sub
enter
dec
jno
and
xchg
push
pop
cmp
divl
and
cmc
xchg
adc
sti
jae
jns
or
jle
sbb
mov
inc
jne
mov
xchg
push
fiadds
inc
xchg
mov
or
jle
jbe
les
dec
dec
hlt
pushf
xlat
sbb
mov
push
xor
jnp
lea
fwait
or
sub
push
es
sbb
movsl
icebp
push
push
pop
mov
in
cmpsl
cmpsl
xor
mov
stos
and
mov
jg
xor
mov
fwait
sarb
add
pop
xor
icebp
lock
pop
lea
and
rclb
or
in
flds
push
mov
xchg
push
sbb
lcall
xor
sbb
dec
stos
int
jle
ret
xor
test
rcrb
hlt
or
lea
aam
test
sbb
loopne
mov
sub
pop
movsl
inc
icebp
or
ret
cwtl
add
out
pop
lret
sti
addr16
repnz
int
xor
dec
out
cmp
xor
lods
mov
rol
mov
jecxz
into
sbb
cwtl
loope
sbb
lds
rolb
dec
iret
das
mov
dec
add
and
out
ds
mov
push
dec
test
cwtl
adc
addl
mov
in
bound
dec
xchg
mov
cmp
pop
leave
inc
loope
lahf
push
in
inc
fcompl
and
test
repnz
jne
andl
and
jge
stc
xor
pop
adc
mov
cmp
insb
adc
xadd
movsb
or
sbb
arpl
bound
mov
push
daa
loopne
sbb
and
je
cmpsl
cmp
test
test
sahf
push
push
mov
mov
dec
out
mull
xchg
xchg
call
nop
inc
and
mov
add
fbld
pop
scas
lahf
push
mov
shrl
push
jge
dec
pop
jmp
add
nop
xchg
fsubrl
fnsetpm(287
mov
adc
or
fistpll
jae
lds
mov
lock
inc
xorb
push
jmp
xchg
adc
mov
aam
mov
ret
hlt
jno
push
mov
lods
mov
adc
and
sub
sub
imul
jmp
int
scas
fwait
test
loop
sti
pop
add
dec
add
lret
add
xor
pusha
cmp
cld
cld
test
out
mov
push
jle
icebp
popf
aam
pop
ret
adc
je
cmp
movsl
mov
or
add
and
sahf
cmp
inc
push
int
jae
fsubrl
xchg
scas
inc
xor
sub
and
inc
test
pop
lret
out
loope
sub
add
shl
jbe
pop
push
mov
pop
jnp
pusha
dec
lret
clc
jnp
pop
adc
into
push
mov
sub
insb
loopne
movsl
cmp
mov
mov
pop
lea
add
jp
rcrl
dec
pop
fs
adc
in
xchg
in
push
cmpsb
inc
loope
idivb
sub
jo
fcom
les
and
mov
mov
or
push
sub
inc
cltd
and
mov
jne
sub
shl
mov
rol
mov
sub
mov
sbb
inc
flds
mov
out
push
imul
repnz
mov
xchg
mov
xchg
and
and
test
pop
sub
icebp
mov
out
jecxz
out
sbb
and
jle
mov
clc
xchg
jecxz
add
mov
imul
xchg
push
mov
test
jne
adc
repnz
in
mov
into
insb
loope
fidivrs
loop
lret
cmp
stos
push
sub
data16
aaa
sti
push
mov
imul
or
divps
jle
cs
pop
sub
xlat
xchg
push
iret
fwait
test
add
and
sub
xchg
lret
icebp
lock
arpl
push
outsb
pop
sub
lods
idivb
out
mov
cltd
ja
and
inc
addr16
or
jmp
dec
test
mov
adcl
mov
pop
je
leave
sti
js
and
pop
mov
rorb
sbb
xor
fdivrp
ret
and
jns
mov
sub
negb
arpl
adc
hlt
cs
stc
repnz
add
clc
cli
inc
inc
lods
int
imul
push
inc
push
loopne
cltd
in
outsb
arpl
dec
pop
fwait
adc
loopne
test
mov
ror
outsb
repz
jecxz
mov
cltd
sbb
mov
outsb
cmp
or
inc
es
mov
xor
lds
sub
scas
cmp
aaa
push
mov
dec
stos
push
imul
or
xchg
pop
cli
dec
and
fisubrl
arpl
test
loop
pop
inc
ror
xchg
xor
lods
xchg
dec
adc
insb
stos
lods
mov
xchg
inc
push
insl
inc
int3
xchg
test
xchg
cs
sub
loop
mov
fs
or
mov
icebp
leave
icebp
sahf
and
xchg
repz
call
faddl
jmp
inc
cmpsl
sbb
cltd
mov
outsb
mov
test
inc
xchg
fisttpl
je
dec
xlat
inc
mov
test
shrb
xchg
jbe
push
loopne
jmp
in
or
test
mov
xor
lret
test
jp
outsl
in
mov
or
mov
cld
cld
cmpb
data16
test
jmp
add
jg
pop
cmp
leave
sub
jge
push
cli
xchg
arpl
jno
out
fmull
sbb
add
lahf
pop
and
push
fimuls
popa
sar
cmp
ret
sarb
mov
mov
leave
jmp
fwait
cld
fldenv
negl
adc
add
dec
xchg
sbb
xor
jns
xchg
fs
mov
jmp
sub
ret
scas
pop
lock
adc
ret
js
and
mov
xor
sarl
sbb
pop
int
cmpsb
dec
ret
adc
ficoms
fwait
mov
cmp
addr16
icebp
add
pop
lock
call
cmpsb
pop
into
mov
mov
dec
pushf
sbb
dec
mov
push
arpl
pop
ds
ja
or
sahf
jg
pop
jp
int
es
lcall
dec
jno
sti
fcmovne
mov
ja
dec
push
adc
jmp
adc
scas
cld
dec
or
mov
jp
pop
sub
mov
mov
fs
cmc
dec
cltd
push
or
arpl
inc
stc
loope
push
icebp
sbb
pop
ja
ds
sbb
mov
pop
xchg
adc
xor
dec
dec
scas
iret
mov
cmp
push
or
dec
mov
nop
mov
filds
mov
inc
call
push
cmpsb
aam
or
push
hlt
or
add
mov
orb
notb
mov
loope
dec
or
imul
lcall
addr16
sbb
lret
aaa
std
pop
lahf
add
imul
nop
inc
cmp
xor
xlat
stos
orb
mov
push
inc
jle
sub
pcmpeqd
mov
ja
xchg
loop
ljmp
test
sbb
test
stos
adc
sub
push
push
pushf
testl
inc
push
imul
push
sub
addr16
ficompl
inc
pop
pop
dec
mov
rcrl
push
or
mov
rcl
out
je
loopne
push
push
sub
push
and
inc
push
jle
fcmovne
and
int
lods
arpl
lods
dec
in
hlt
lret
scas
xchg
sbb
jnp
pop
lea
mov
shrl
fs
clc
xor
out
pop
xor
mov
mov
mov
jb
and
jo
jmp
rorb
or
movsl
push
adc
or
mov
sarb
jb
mov
mov
or
or
cmpsb
gs
mov
fsubl
xor
sbbl
leave
xchg
inc
sub
xchg
es
ud2
mov
cli
inc
xor
cwtl
jecxz
jae
xor
outsb
enter
pop
out
repnz
and
daa
pop
loope
sbb
imul
xlat
in
repnz
and
lcall
mov
adc
sbb
inc
leave
mov
popa
stos
bndstx
scas
shr
aam
pop
cmp
jecxz
stos
mov
nop
mov
cmp
mov
inc
jne
lds
fsubr
mov
cwtl
notl
int
ljmp
mov
or
lods
rcl
ret
push
sbb
fstpl
out
cmp
adc
sbb
xor
sbb
xor
sti
ret
xor
scas
mov
bound
cmp
sub
push
pop
das
or
aas
pop
dec
lret
mov
xor
sbb
jns
mov
dec
loop
icebp
decl
shll
stc
mov
mov
cltd
jne
scas
fidivs
add
movq
xchg
das
and
inc
ja
push
jno
inc
fsubrs
adc
lret
mov
loope
jnp
inc
cmp
aam
inc
mov
or
setg
mov
push
dec
add
push
cmp
sbb
test
mov
push
mov
inc
std
inc
add
shll
xchg
les
adc
rclb
insl
jo
and
scas
or
jle
and
or
test
repz
aaa
and
fisubl
jmp
mov
push
sbb
jp
and
sub
stc
push
jb
fidivs
daa
adc
out
call
out
xor
bnd
test
xlat
ret
icebp
add
mov
loope
aam
xchg
aam
xchg
popa
push
mov
out
adc
movsl
mov
pop
mov
lea
xchg
xchg
daa
cmp
shlb
cmp
rclb
sbb
ficoml
jbe
or
out
mov
xor
mov
rcl
mov
loopne
sbb
push
imul
mov
pop
xor
stos
pop
mov
mov
xchg
fisubs
mov
in
lods
sbb
in
cld
ret
jnp
ja
and
out
movsb
sbb
mov
sbb
out
adc
and
jg
push
xchg
test
pop
mov
jg
add
hlt
jge
inc
cmpsb
mov
add
jbe
dec
mov
xchg
dec
push
pop
imul
mov
jns
iret
xor
pusha
hlt
fsub
sub
mov
rcll
insb
mov
adc
les
jl
add
and
mov
jo
int3
mov
cmp
aad
jmp
add
xor
xlat
pop
xchg
xchg
and
adc
sarb
pop
es
mov
jo
push
mov
es
testl
adc
stos
sbb
push
push
inc
leave
push
daa
jbe
cli
cmpsb
jne
cltd
or
pop
fdiv
jmp
pop
xor
push
mov
inc
mov
int3
aam
mov
jb
pop
inc
test
push
inc
insl
daa
cmp
ljmp
aas
loope
jne
rcrl
push
addr16
and
inc
pop
sub
daa
fnstenv
hlt
add
ja
dec
ss
ret
mov
nop
imul
and
sahf
or
iret
lods
shr
enter
inc
mov
or
sahf
mov
in
add
jns
jnp
pop
das
adc
imul
sbb
push
add
or
pop
xor
pusha
sub
pop
pop
fldt
repnz
push
xchg
mov
popl
loopne
data16
sahf
xchg
ret
stos
call
dec
or
loopne
pop
imul
and
std
test
sub
and
push
ds
fs
adc
sub
mov
dec
in
mov
lret
push
out
mov
jmp
xchg
stos
mov
iret
lods
jo
sahf
mov
inc
cmp
fimull
addl
push
adc
fistps
fmuls
adc
mov
loop
cmp
add
aaa
sbb
out
insb
sub
dec
or
sti
loop
mov
push
js
jp
ret
rcrb
test
fdivs
aaa
flds
and
imul
push
mov
inc
shrl
jnp
inc
sbb
dec
test
push
xchg
and
sti
daa
pusha
inc
sub
lret
fwait
fs
push
push
lods
sub
insb
mov
xchg
cmp
loope
sbb
hlt
sub
jg
loope
imul
stos
jmp
inc
sub
loop
xchg
sbb
jae
xlat
les
stc
sbb
ljmp
add
mov
repz
cmpsb
cli
out
icebp
clc
xchg
imul
loopne
sub
jge
mov
push
fdivrp
xchg
mov
or
adc
dec
icebp
and
roll
xchg
dec
shll
shrl
out
fnsave
or
or
pushf
cmp
aaa
mov
sahf
imul
sub
insl
mov
sbb
mov
sti
cmp
adc
xchg
leave
mov
sbb
fistpl
fnsave
jnp
fisttpll
dec
push
push
jg
add
fidivrs
sbb
mov
lock
mov
rorl
xlat
sbb
popa
repnz
push
ret
mov
in
sub
gs
sbb
insl
movsb
and
cwtl
mov
lea
inc
aas
sbb
xchg
inc
adc
psraw
cli
xchg
inc
mov
popf
lret
ror
out
sbb
xor
in
jae
stc
mov
ljmp
pusha
fiaddl
xchg
lods
or
and
xor
pop
aaa
call
ret
frstor
scas
dec
fdiv
lea
inc
dec
inc
stos
pop
sar
lods
xchg
mov
mov
jmp
rclb
fnsave
jle
mov
mov
mov
dec
into
cmp
push
mov
inc
xchg
inc
hlt
inc
push
cmp
pop
test
shrl
push
cmp
sub
sbb
js
fs
or
sbb
aam
or
xchg
sbb
pop
dec
lcall
into
xchg
roll
mov
pop
jae
pop
inc
test
leave
xchg
fcoml
test
in
cltd
cmpsb
push
mov
adc
mov
cmpsl
scas
inc
imul
cmpsb
cmp
inc
and
dec
jmp
sarb
movsl
mov
mov
jnp
ljmp
lcall
leave
dec
mov
hlt
std
mov
hlt
inc
mov
jp
pop
movsb
mov
jne
mov
cltd
sub
sub
stos
ret
cmp
pop
sub
mov
ret
lods
sub
pop
cmp
js
mov
out
sub
xor
mov
std
mov
and
cmp
aam
sbb
popl
jle
add
sub
arpl
enter
or
and
xlat
xchg
or
popa
loop
jbe
repz
hlt
add
iret
fdivrs
sbb
loopne
sub
loop
fistl
mov
pop
fnstsw
or
bound
push
add
shll
shll
aad
stc
les
and
icebp
pop
mov
xchg
push
inc
pop
call
cmp
push
lods
jmp
xorb
enter
jp
dec
jp
jmp
cmpsl
add
leave
mov
pushf
sbb
sub
adc
mov
sbb
ss
adc
and
in
push
push
dec
sub
mov
fimuls
xchg
adc
repz
negl
in
mov
ret
jno
or
mov
data16
jns
jnp
punpckldq
jle
insb
xorb
sub
fstl
pop
int
ja
pushl
push
jg
pop
sub
arpl
dec
jle
ror
rcrb
popa
or
jbe
xor
xchg
pop
cmp
cmp
dec
sbb
sub
sub
shr
dec
shl
out
sbb
xor
dec
sub
add
mov
scas
and
jp
push
call
cmp
push
out
add
ljmp
inc
inc
fidivl
pushl
out
test
inc
jge
shrb
into
dec
push
pop
arpl
mov
bound
lret
es
cmc
out
cld
mov
fcomip
adc
add
mov
rclb
or
pop
les
icebp
lods
in
mov
sti
jecxz
cmp
shlb
push
into
dec
movsl
cld
insl
aaa
xchg
cmp
popl
jnp
push
scas
loopne
mov
adcl
fimull
hlt
int
xchg
pop
push
push
adc
test
and
imul
fucomp
push
inc
clc
mov
sahf
sub
popa
les
cmc
push
inc
adc
jmp
xchg
adc
mov
faddl
int
inc
add
into
fs
fdivrl
add
or
hlt
mov
xor
test
dec
stos
or
xchg
out
outsb
push
pop
sbb
stos
push
ds
xchg
jle
fidivrs
mov
into
pop
outsb
sub
aaa
fs
push
data16
imul
adc
lret
mov
inc
push
add
jl
cli
lock
loope
cmpsb
pop
inc
xlat
cmpsl
sub
push
push
push
sbb
pushf
dec
sub
subb
adc
mov
jns
aad
gs
outsb
hlt
mov
mov
out
jae
xor
push
inc
notb
xchg
sub
or
rcrl
xchg
mov
jno
ret
xchg
mov
dec
data16
xchg
push
jno
jb
push
sbb
cmp
leave
cmp
lods
nop
mov
inc
fsubs
decl
dec
push
jb
mov
inc
mov
call
inc
pop
pop
test
popf
jp
stos
jae
decb
mov
movsl
aas
and
pop
sbbl
bound
jno
cs
push
pop
fucompp
mov
inc
xchg
fnop
push
rorl
mov
sbb
xorb
call
mov
jne
addl
jne
lods
sub
mov
loopne
lds
mov
insl
cmp
xor
jp
loope
sbb
call
das
das
jno
mov
xor
xchg
ds
scas
iret
into
mov
fucomip
inc
insb
fisubs
sub
fists
roll
xor
or
aad
ret
inc
xor
or
stos
sub
aas
xchg
sbb
jnp
addl
ret
or
ljmp
adc
pop
xor
push
lahf
hlt
cli
loopne
pop
xor
xchg
dec
xchg
pop
cld
out
pop
inc
pop
sbb
or
lret
inc
scas
or
ljmp
test
add
sbb
cmp
test
mov
pushf
push
and
shlb
hlt
push
jle
popa
andl
fidivrl
mov
jge
dec
rcll
or
dec
rorl
fisttpll
xchg
roll
jne
movsb
add
es
nop
cmp
pusha
sub
arpl
mov
xlat
jp
inc
jo
adcl
icebp
lcall
sbb
ljmp
and
das
inc
add
jns
jmp
adc
test
push
rcrb
mov
dec
fidivl
fwait
ret
aaa
pop
lods
addb
pop
adc
shrb
mov
loope
mov
cmp
in
lds
cmp
pop
cwtl
xchg
cmpl
outsb
mov
loop
mov
cmp
and
lds
pop
xor
jno
in
adc
dec
in
adc
jle
dec
or
lods
data16
mov
jmp
aad
push
mov
mov
lds
inc
cmp
xor
mov
iret
aad
call
insl
mov
cmp
cltd
addr16
push
jno
sbb
add
aad
lcall
loop
sub
inc
out
pop
jae
sub
sbb
cmpsl
xor
dec
push
fimuls
push
jecxz
and
mov
xchg
xchg
out
and
popa
fisttpll
push
sti
push
sub
inc
fs
jnp
loop
xchg
inc
mov
sti
push
aas
adc
pop
out
pop
mov
jl
popa
jl
mov
cmp
push
jno
hlt
sub
mov
or
es
cmp
popa
mov
pop
dec
arpl
mov
lea
sbbb
inc
pop
cli
mov
mov
pop
movsl
cmpsl
sub
inc
mov
jge
and
out
frstor
cld
xchg
mov
sti
and
cmp
jno
js
nop
dec
push
push
movsl
stos
repz
popa
scas
mov
imul
inc
and
push
int3
loop
sbb
sub
lret
les
cli
mov
xchg
sahf
adc
into
inc
xor
out
lret
mov
jb
mov
aaa
xchg
test
or
cs
inc
daa
xor
mov
mov
mov
dec
cli
inc
sbb
jp
lea
jne
and
stc
fs
inc
xchg
xor
sbb
mov
jb
leave
dec
fs
cltd
jmp
xchg
push
scas
and
cmp
or
leave
xchg
mov
adc
add
mul
inc
lock
ljmp
pop
in
repz
add
aaa
insl
cld
mov
sarb
and
push
xchg
mov
xor
int3
outsb
pop
jle
cmpsl
push
mov
int
lar
lock
dec
cltd
inc
in
xor
sbbl
jecxz
cmpsl
shrb
mov
sbb
fst
mov
popa
adc
rorb
pop
cmp
int
jge
loope
dec
mov
popa
adc
scas
push
sbb
daa
fs
mov
out
dec
push
inc
dec
mov
nop
pop
sbb
dec
ss
mov
dec
lret
sub
arpl
add
mov
jno
repnz
jp
and
cwtl
pusha
sbb
mov
lds
push
xchg
fistps
clc
rorl
push
or
add
xchg
daa
negl
sbb
int3
ljmp
fsubrl
sbb
xlat
or
imul
sub
cmpsl
je
arpl
adc
cmpsl
pop
xor
outsl
int
loopne
pop
jo
pop
sub
rcll
sbb
cmp
ficoms
push
jnp
mov
and
inc
js
pop
mov
xchg
jge
imul
xchg
outsb
ja
cld
mov
push
xor
push
in
lret
ljmp
jl
int
hlt
fs
insl
mov
fsubr
addb
adc
outsb
fnstcw
es
cmpsb
leave
push
adc
hlt
mov
cmp
add
notl
iret
sarl
mov
ss
dec
cs
leave
xchg
adc
cmp
jns
sbb
jo
sbb
sub
or
fistpll
push
jle
mov
dec
cmp
movsb
popa
adc
lods
push
mov
fldcw
mov
imul
call
xor
addb
cmp
jno
test
outsl
sarb
shll
jnp
cmpsb
jbe
mov
adc
push
sar
cmp
mov
sub
inc
xor
cmp
inc
into
out
sti
and
cwtl
cmp
mov
cmp
mov
mov
icebp
dec
and
repnz
imul
pop
fcompl
dec
lea
fstl
rorl
jno
call
push
sbb
out
pop
dec
sbb
jg
xchg
ret
adc
xor
ret
int3
stos
sub
sbb
test
aad
push
ret
xchg
stos
je
outsb
cmc
pop
jbe
adc
mov
gs
je
imul
outsb
jecxz
ret
pop
jb
mov
icebp
das
inc
cmpsb
mov
loopne
xchg
push
jmp
lods
call
cmp
cld
addr16
or
push
jae
add
das
push
jbe
jb
divb
sub
push
adc
inc
adc
xchg
neg
or
pop
inc
and
mov
mov
popa
cs
sahf
es
sub
sub
mov
lea
mov
pop
aas
inc
and
test
enter
scas
xchg
mov
or
mov
ret
and
sub
jg
adc
enter
jmp
cld
loope
cmc
mov
xchg
aas
or
xor
rcrb
inc
mov
fwait
lahf
adc
add
jnp
out
in
cmc
add
inc
dec
out
iret
xor
pop
sub
or
xchg
jno
adc
outsb
cli
mov
nop
mov
or
mov
dec
jl
lret
inc
xchg
mov
xchg
scas
xor
cli
test
les
push
lret
jo
xchg
add
testl
dec
rorb
in
jae
mov
lcall
daa
int
outsb
jb
adc
xchg
sbbl
inc
or
dec
mov
pop
imul
decb
mov
mov
push
jle
in
xor
hlt
inc
pop
mov
mov
das
and
dec
add
pop
data16
ret
out
xchg
xor
mov
mov
outsl
movb
lds
xchg
push
dec
es
in
and
mov
iret
jecxz
cmp
sub
lret
gs
pop
in
movsl
cmpsl
lcall
mov
arpl
xor
fdivs
mov
insb
jmp
cmp
sub
out
leave
inc
cmp
dec
pop
data16
dec
jg
inc
bound
lret
jns
jne
cmp
and
repz
inc
lret
loope
sub
rclb
es
pop
aas
roll
mov
test
lret
sahf
sub
dec
adc
cmc
cmp
iret
jmp
out
int3
lcall
jnp
push
inc
fdivs
lret
push
loopne
movsb
cmp
pushf
popf
pushf
mov
shr
dec
push
push
push
pop
fcmove
dec
and
mov
mov
loopne
into
sub
add
outsl
loop
insb
loope
sbb
pop
xor
xor
pop
insb
rcrl
adc
mov
push
dec
adc
jg
cmp
pop
mov
out
cmpsl
cmp
or
mov
jecxz
sbb
fs
fisttpll
fs
inc
fdivp
or
fisttps
inc
cmp
jnp
mov
mov
ds
sbb
mov
aaa
add
pop
fisubl
iret
addr16
lret
jmp
test
data16
hlt
fsubp
out
repz
sbb
cmpsl
outsl
pop
jae
sarb
and
ja
inc
inc
fs
mov
jmp
push
aam
and
dec
push
dec
sub
add
fs
jbe
pop
lahf
ljmp
xchg
xchg
pop
sahf
xchg
lock
sub
adc
sarl
stc
iret
les
sbb
cli
repz
imul
movsl
mov
mov
push
push
xor
mov
ljmp
adcl
mov
call
jae
imul
jns
push
jp
movb
xchg
lea
or
sbb
xchg
sbb
into
cwtl
or
outsb
mov
jns
fisubs
push
lahf
lret
cmp
xor
scas
adc
xchg
std
sbb
sub
fs
sbb
popl
fbld
mov
nop
mov
jbe
pop
inc
push
test
pop
sbb
push
fsubrs
testl
sbb
and
hlt
pop
cmpb
jne
loope
shll
sarb
mov
leave
ret
ret
mov
orb
filds
mov
cmp
mov
sub
sbb
mov
inc
pop
lock
andb
pop
stos
dec
into
pushf
and
xchg
mov
out
rclb
cmpsl
inc
mov
mov
sbb
popf
jl
jmp
cld
movsl
shll
add
xor
out
mov
insb
cmp
nop
std
cmp
mov
arpl
mov
cmp
mov
fdivs
stc
dec
cmp
push
andb
in
mov
cmp
shrb
lea
cltd
mov
push
mov
lds
inc
push
xchg
sub
xchg
je
or
pop
insl
sbb
jl
fadd
pop
cmp
shl
je
das
push
jbe
or
mov
mov
mov
roll
inc
cmp
mov
fnstenv
sbb
mov
idivl
pop
adc
push
mov
cmp
sub
mov
xor
add
mov
out
adc
movsl
cmpsl
pop
rcr
ficompl
xchg
xchg
aam
adc
adc
rcl
sbb
out
jbe
je
or
xorl
dec
js
and
repnz
and
ljmp
test
xor
sbb
inc
aaa
push
aas
xor
ss
rclb
repz
jnp
push
mov
jecxz
mov
sahf
sub
cmp
sub
scas
in
cwtl
add
jmp
xchg
mov
mov
cs
popa
in
or
xchg
jmp
hlt
inc
aaa
xlat
mov
stc
and
sub
std
decb
test
xchg
test
movsb
mov
inc
cs
cld
sahf
xchg
xchg
cld
cli
jne
add
add
dec
div
mov
mov
enterw
js
out
mov
mov
std
xlat
mov
das
inc
mov
add
xor
push
mov
mov
scas
jle
je
jge
dec
and
sub
sub
popa
dec
loop
sub
lcall
pop
dec
loope
adc
adc
gs
and
xchg
dec
adc
movsl
push
ja
pop
pop
mov
fs
es
or
int
xchg
dec
cmpsb
lret
mov
push
dec
xchg
cwtl
adc
or
pop
add
push
xchg
pop
and
repnz
push
adc
popf
mov
mov
xor
int
sub
add
leave
pop
push
pusha
pop
pop
in
fstpl
sub
testb
adc
int3
add
and
push
lds
ret
lock
pop
sbb
fildll
insl
and
push
mov
xchg
faddl
lret
sbb
in
dec
mov
int3
add
inc
inc
inc
dec
fiaddl
pop
lret
shl
adc
ficoml
pop
stos
shll
push
jo
xchg
dec
mov
pop
jns
mov
in
xchg
push
fistpl
out
xor
push
fcomip
jno
leave
fisubrl
dec
mov
ret
test
jle
inc
add
ljmp
jb
fs
jl
pop
xor
incb
mulb
outsl
mov
pop
sbb
or
sbb
dec
inc
sbb
stos
adc
cmpsb
or
or
es
mov
loop
sbb
mov
cld
fdivs
stc
divl
fwait
push
adc
jae
lahf
cmp
in
loop
out
je
stos
cmp
cltd
push
adc
xor
aaa
movsl
jbe
adc
cmp
stos
jno
dec
push
fsubrp
std
push
adc
cmp
clc
inc
and
mov
test
fwait
cmc
or
imul
xor
mov
rorl
pop
shlb
inc
and
movb
mov
mov
xor
sarl
aad
fmull
xchg
aam
test
jl
fdivrs
mov
les
adc
xchg
out
pop
or
cmp
cmpb
call
fsubl
loope
mov
inc
add
pop
xor
pop
fdivl
inc
nop
cli
xor
es
xlat
cmpl
dec
jg
testb
lock
inc
les
dec
int
inc
fildll
ficomps
push
cs
push
mov
dec
push
adc
sub
or
mov
out
ljmp
popf
cwtl
std
xorb
xchg
pop
bound
xchg
ljmp
outsl
inc
mov
pop
or
adc
xchg
lea
lahf
xor
inc
fiadds
push
sub
les
testl
jp
xor
push
or
mov
push
test
or
mov
jmp
inc
jl
jno
inc
mov
sub
xchg
mov
or
inc
stos
sub
in
jo
aas
daa
and
mov
dec
hlt
push
scas
pop
mov
movsb
inc
rcll
sbb
cld
and
mov
ret
mov
inc
mov
roll
insl
cmc
lods
dec
int
mov
add
xor
rolb
lret
scas
ljmp
xchg
adc
das
lods
icebp
sub
lret
in
or
aas
iret
popa
or
lahf
fwait
lret
sub
outsl
mov
je
dec
imull
mov
pop
push
iret
xor
sbb
mov
outsb
xor
outsl
inc
shlb
in
in
mov
decl
inc
scas
nop
jmp
sub
out
ja
jmp
cmpsb
jns
and
sbb
push
in
popf
xchg
mov
adc
popf
xchg
mov
test
mov
inc
xchg
ret
push
sbb
xor
adc
push
pop
mov
xchg
mov
cld
mov
sub
mov
mov
cltd
and
scas
cli
and
rolb
add
mov
movsl
cmp
cltd
mov
fwait
sub
aaa
cld
inc
mov
mov
imul
jl
imul
dec
je
or
loopne
insb
lods
andps
mov
mov
out
xor
inc
mov
js
neg
xor
ljmp
pushl
lods
subb
aas
in
fwait
mov
mov
cmp
insb
mov
mov
mov
orl
push
call
and
pusha
bound
xchg
jecxz
std
mov
out
sahf
pop
in
jbe
push
cmp
xchg
xor
add
test
push
out
lcall
jg
mov
and
add
sahf
push
addr16
push
push
loope
push
push
in
jl
inc
sti
pop
or
out
aam
or
data16
ljmp
repz
xor
lret
incb
mov
inc
mov
xchg
push
call
adc
cld
les
je
pop
stos
imulb
inc
mov
loop
dec
arpl
aam
std
mov
ss
mov
lret
nop
mov
mov
js
rol
lock
ret
sub
movsl
and
xchg
mov
scas
cld
push
jge
je,pt
cld
addr16
xchg
xchg
jbe
out
fistps
jecxz
xlat
inc
push
xor
ja
push
xchg
mov
aad
cld
insl
addr16
cltd
ret
daa
jbe
into
sbb
inc
adc
xor
push
js
push
push
adcl
xor
sub
int
xchg
fsubrl
scas
xor
ret
pop
das
sub
ds
nop
pop
pop
leave
sub
pop
nop
dec
add
imul
scas
push
dec
jno
xchg
sub
inc
in
movsb
test
jbe
jg
int
push
mov
adc
cltd
pop
mov
lods
in
or
xchg
jmp
popf
xchg
nop
ljmp
lahf
xchg
repnz
inc
outsb
js
jg
dec
and
psubd
and
mov
mov
sbb
test
pop
xchg
cmp
andb
repz
fisttps
sbb
mov
push
xchg
adc
dec
mov
testl
fstpt
sub
cmc
inc
adcb
mov
shrl
mov
add
bnd
js
cmp
loopne
push
mov
mov
mov
dec
cli
xor
inc
stc
jmp
test
adc
add
js
mov
pop
push
addr16
cmc
dec
xchg
loop
loope
outsl
insb
or
jno
pop
ds
jnp
lds
push
popf
mov
dec
jecxz
pop
sbb
movsl
sbb
adcl
pop
adc
xor
and
nop
ret
in
int
and
mov
cmc
mov
add
xchg
push
adc
into
cmp
mov
loop
inc
out
xor
push
movsb
jl
or
or
dec
inc
mov
aam
or
mov
push
pop
mov
cmc
mov
mov
mov
mov
movsb
loopne
std
out
xorl
dec
sbb
outsb
inc
xor
stos
sbb
push
inc
hlt
sbb
jp
xor
insl
je
pop
lcall
push
xchg
or
pop
mov
sub
pop
bound
lea
xchg
mov
mov
bound
sub
icebp
mov
dec
pop
mov
pop
clc
jecxz
push
lea
cld
cli
jp
pop
sbb
nop
and
xor
pop
je
movsb
in
adc
cmc
lcall
add
and
pushf
sub
mov
insb
inc
ljmp
xchg
div
into
andl
push
cmp
pop
frstor
add
fdivr
mov
dec
fildl
stos
adc
xorb
push
imul
int
gs
or
pop
cmp
or
cwtl
or
push
nop
mov
mov
inc
sub
lret
xchg
nop
dec
cwtl
add
hlt
add
sbb
repz
add
je
pop
aad
lock
outsl
mov
shl
sub
mov
movsl
sub
push
and
js
mov
shrl
test
aas
cltd
dec
call
sub
sbb
dec
xchg
hlt
dec
mov
xor
add
mov
stos
add
lds
mov
mov
fwait
aad
mov
cmp
lret
ret
out
daa
mov
test
bound
test
add
pop
into
out
pop
pushl
jge
addr16
cmp
out
mov
push
pop
xchg
jge
aaa
pop
cmpl
loop
sahf
xor
inc
inc
ret
dec
cli
or
aas
addr16
rcrb
sub
xor
pop
inc
sbb
push
shl
inc
and
fs
mov
aam
sbb
cltd
adc
data16
fldenv
sub
jne
dec
xor
ret
push
cmpsb
adc
pop
and
dec
pop
lds
shr
or
mov
aaa
lret
sbb
or
pop
js
inc
jbe
push
shl
inc
or
inc
sahf
sub
xchg
loope
stc
xchg
mov
ljmp
popa
ret
push
push
mov
xlat
cmp
or
test
leave
push
ja
cwtl
icebp
adc
movsl
repz
xchg
adc
ljmp
dec
jne
leave
loopne
movl
xor
stc
ret
push
dec
repz
clc
jns,pt
push
clc
jo
mov
push
xchg
fucom
push
jge
cmp
movntps
dec
aaa
insb
loop
and
loop
fwait
clc
sub
mov
rcll
imul
mov
mov
push
mov
push
outsl
xor
les
and
sahf
arpl
test
xor
movsl
cmp
mov
mov
cvtdq2ps
dec
addr16
xchg
pusha
imul
test
clc
cmp
add
subl
mov
lret
stc
push
mov
cmp
inc
push
pop
add
mov
js
inc
add
push
sbb
xor
jne
push
cmc
mulb
test
mov
hlt
mov
sbb
jmp
xor
stos
jg
add
test
aaa
test
dec
scas
mov
out
and
enter
andl
js
inc
push
and
adc
pop
repz
mov
stos
mov
lahf
push
lds
jb
pushf
nop
and
adc
mov
xor
roll
nop
mov
addr16
sub
and
pusha
adc
adc
sbb
fs
out
jne
stc
cltd
outsl
outsb
add
into
mov
jb
jmp
in
leave
aas
sub
lea
sub
addl
imul
push
push
leave
out
lock
or
jns
fistl
add
dec
hlt
inc
movsl
pop
add
pop
xor
push
leave
nop
inc
jbe
inc
mov
out
notl
sub
cltd
outsl
shlb
ss
add
and
mov
mov
stos
cmp
mov
cmp
clc
and
inc
cld
push
iret
js
xchg
adc
pop
lret
mov
dec
aas
add
add
ss
arpl
sar
jmp
scas
cltd
clc
fidivl
mov
pop
or
push
out
mov
jae
iret
xor
push
mov
sbb
lret
pop
das
mov
imul
cmpsb
mov
mov
insl
jb
add
mov
bound
testb
test
pop
sub
cmp
inc
ret
adc
jae
call
pop
push
cmp
test
inc
fs
arpl
test
pop
or
mov
xlat
stos
xchg
pop
mov
cmpsb
in
mov
stos
push
xchg
mov
in
jne
in
out
in
pop
repnz
lahf
stos
bound
fcom
add
insl
lret
or
mov
subl
dec
mov
sub
ret
xchg
lcall
pop
jle
in
repnz
mov
jo
popa
xchg
push
jno
mov
xchg
lock
mov
jmp
outsl
addr16
cs
iret
mov
xchg
xchg
stc
sub
adc
ds
aam
cmp
add
xor
mov
mov
mov
or
pop
repnz
cmp
sbb
dec
jg
pop
push
add
push
xlat
arpl
daa
pop
jl
aas
jle
mov
fildll
fldenv
xchg
adc
inc
out
push
adc
das
dec
push
dec
cltd
xor
and
fadd
adc
and
aam
outsb
popf
sarb
aas
loopne
add
leave
aaa
call
jmp
sbb
jle
leave
fs
dec
push
xchg
js
fidivl
mov
or
addl
insl
mov
leave
mov
fcomp
imul
sarb
dec
loop
mov
add
cs
dec
jp
bound
popf
stos
mov
fsubrs
iret
mov
xchg
idivl
dec
fstpl
lahf
sbb
pop
xor
adc
adc
sub
aam
mov
fmuls
sub
sbb
movsb
cmpsl
mov
imul
pushl
popf
inc
adcl
lods
dec
push
jmp
jns
cwtl
sub
inc
adc
insb
push
sub
scas
nop
xlat
mov
cmp
push
inc
out
or
push
pop
mov
push
stc
add
loopne
lods
mov
and
fstl
int
add
mov
lods
sbb
roll
fwait
hlt
jne
arpl
loopne
fcomps
dec
fwait
pushl
or
cmp
jge
daa
or
pop
mov
aas
repnz
int3
insl
push
and
lahf
jb
daa
loop
andb
mov
push
pop
test
stc
adc
nop
dec
mov
lcall
adc
mov
cmp
mov
stc
in
test
out
sbb
ret
mov
adc
xchg
dec
sub
stos
dec
addr16
js
adc
mov
cltd
add
ds
and
cs
mov
mov
add
cmp
mov
in
fiaddl
lahf
pop
repz
out
aam
mov
sbb
ja
sbb
xchg
jle
cmpsb
and
xchg
cmp
test
pushf
mov
ret
mov
dec
pushf
scas
dec
out
push
pusha
push
adc
out
outsl
xchg
dec
sbbb
jecxz
pop
xchg
or
imul
mov
mov
mov
inc
mov
fcoml
stc
pop
ljmp
sbb
mov
call
and
adc
lods
loop
jbe
adc
dec
and
or
lods
adc
push
int3
push
mov
xor
lock
mull
mov
in
clc
clc
push
fistl
jg
fdivs
orl
sbb
leave
call
out
ror
xor
push
sti
sub
popf
cmp
enter
mov
mov
ret
pop
mov
jae
cmp
sub
mov
mov
test
or
push
popf
adc
inc
fbstp
repnz
jb
addr16
sub
adc
add
jmp
adcl
jmp
lea
xor
pop
adc
sbb
rolb
adc
and
sti
jno
or
cmp
lcall
test
fs
stos
dec
ja
cmpsl
xor
mov
and
das
mov
push
xchg
or
cmpsl
pop
xchg
mov
cwtl
dec
insl
xor
push
dec
repz
pop
dec
and
mov
sub
stos
jns
sub
lea
mov
imul
imul
sbbl
lods
aas
and
lds
cmpsl
xchg
cmp
les
fisttpl
pusha
arpl
mov
bound
xlat
into
add
stc
push
or
and
popl
mov
sub
mov
add
jno
das
sub
jl
cmp
ds
mov
jle
mov
dec
aad
sbb
push
jae
rclb
xlat
sub
out
bound
add
xchg
iret
lea
push
adcl
out
mov
js
pop
sbb
jne
hlt
push
xor
mov
hlt
rolb
ret
mov
push
pop
add
mov
es
subl
rorl
mov
inc
test
jl
xchg
mov
insb
dec
pop
mov
mov
into
icebp
mov
mov
filds
mov
xchg
pop
inc
imul
cmp
xor
mov
mov
inc
xchg
arpl
push
pop
addl
cltd
lret
xchg
mov
jp
adc
in
sub
push
sbbb
and
pop
js
insl
dec
jbe
mov
shrl
and
cmp
addr16
and
ds
shrl
popf
xchg
shll
push
and
cmp
cltd
fsubl
lcall
out
jg
inc
pop
cld
mov
inc
out
inc
jne
pop
mov
sti
stos
jns
andb
aad
push
in
push
icebp
int
mov
add
pop
mov
pop
frstor
dec
std
xchg
lods
sti
lods
testl
fcoms
or
imul
jae
add
sbb
mov
ja
mov
ficompl
mov
xchg
mov
adcb
cld
paddw
fidivl
pop
mov
dec
pop
jnp
xor
in
pushf
gs
imul
jne
pop
add
xor
mov
pop
pop
jo
cmp
aaa
sub
push
or
call
or
or
xor
adc
ljmp
inc
xchg
testl
jo
ss
loope
roll
aam
pop
or
jge
stc
insb
or
adc
adc
pop
sahf
adc
sti
mov
into
enter
mov
outsb
fwait
inc
lahf
cmpsb
pop
into
scas
movsl
lods
rclb
pop
arpl
lret
in
imul
out
xchg
out
pusha
jmp
xor
lret
inc
testl
adc
cmc
ret
pop
lcall
cmpb
mov
test
mov
sub
add
jecxz
aaa
cli
cmp
cli
in
jns
les
pop
lahf
adc
jge
js
and
mov
sbb
out
push
out
dec
lds
jmp
and
popa
push
dec
frstor
mov
movsl
mov
dec
imul
hlt
pop
in
into
mov
fwait
ljmp
add
xor
aaa
rcll
cmp
pop
in
pop
enter
pop
pop
pop
xchg
adc
out
jecxz
fisubs
and
pop
popf
hlt
inc
add
xor
or
mov
gs
ss
lods
in
adc
mov
sub
lock
adc
dec
dec
mov
stos
push
ret
xchg
das
mov
imull
setne
mov
or
jle
jnp
xchg
mov
cwtl
inc
fwait
cmp
or
pop
outsl
into
shr
int3
enter
mov
imul
add
and
push
xchg
and
fistpl
jg
mov
loop
lahf
adc
jecxz
imul
jge
inc
add
fisubs
inc
cmp
pop
int3
mov
add
stc
in
lret
adc
adc
adc
and
es
jbe
iret
dec
jmp
lds
cmpl
jp
jle
dec
jno
fdivs
popa
add
mov
push
test
adc
sub
hlt
xchg
loopne
cmpsl
sbb
xor
stos
repnz
and
pop
push
sub
and
std
jnp
out
iret
mov
fimull
mov
add
arpl
test
scas
inc
or
inc
xlat
je
popf
icebp
jmp
dec
lcall
scas
add
inc
push
stos
and
decl
std
cmp
jmp
xlat
lock
scas
jmp
cmp
push
push
in
movsb
push
jge
or
sbb
add
or
push
sbb
jbe
jbe
sbb
rcl
in
in
dec
in
aam
sub
adc
mov
cmpl
mov
test
mov
outsl
mov
pop
mov
mov
mov
jno
pop
push
cmp
stos
cmc
rol
js
jbe
xor
xchg
loop
popa
jb
dec
hlt
movsl
xor
iret
cmpsb
mov
mov
mov
add
sub
mov
ret
xchg
pop
mov
repnz
or
daa
cmp
jecxz
mov
adc
mov
mov
call
mov
pop
out
cli
sub
sub
andps
or
push
shll
dec
setne
loopne
jmp
lret
sbb
xchg
insl
aaa
add
xchg
xorb
sub
adc
pop
pop
ljmp
imul
inc
pop
xchg
aaa
in
jo
jnp
sbb
addr16
sub
adc
adc
adc
cmc
jge
mov
adc
and
mov
stos
adc
das
sbb
pop
xchg
pop
fstpt
fwait
add
test
ja
js
dec
fldt
shl
xchg
pushf
dec
mov
cld
popf
in
adc
or
xchg
inc
ja
test
imul
enter
dec
insb
test
add
or
repz
stos
mov
jg
mov
int3
xor
pop
ja
jp
sub
inc
lcall
adc
das
stc
xchg
mov
andb
lods
pop
sbb
arpl
fucomip
adcl
sub
cmc
cmpsl
jle
or
mov
pop
arpl
clc
cs
movsb
fidivs
xchg
fstpl
push
and
adc
inc
dec
pushf
int3
inc
aam
pop
and
mov
in
in
lods
mov
pop
insb
and
jp
out
addl
adc
sarl
push
xchg
lds
ror
aad
pop
mov
mov
data16
sub
pop
leave
ret
lds
lds
fists
cmp
sbb
xchg
sahf
cli
add
mov
and
jl
popl
lahf
jb
aad
fsubs
push
aas
push
leave
loope
arpl
mov
mov
sbb
pop
inc
dec
or
in
roll
cmc
scas
outsw
bound
sub
adc
xchg
jns
fdivrl
lea
mov
xchg
pop
sub
mov
cmpsb
or
push
lods
xor
fwait
in
jg
fcompl
cld
cld
jae
or
jae
push
add
pop
jle
cmp
mov
cmp
mov
sbb
push
insb
roll
int
xchg
sub
sub
shrl
adc
jnp
imul
mov
outsl
test
loopne
fdivs
out
int3
jno
inc
in
das
jmp
mov
ss
pop
cmp
and
lods
inc
leave
test
rorb
push
jo
repz
lea
into
nop
push
adc
xor
add
fucomi
sub
or
sti
jg
jnp
or
popa
adc
les
sahf
mov
and
mov
mov
test
lock
cmp
cltd
cwtl
push
adc
std
ret
push
clc
loop
imul
ret
sub
or
stos
mov
and
adcb
jno
stos
cmp
pop
push
int
and
or
int
shrl
pop
push
lods
adc
arpl
outsb
lods
fucomip
inc
arpl
mov
loop
imul
std
cmp
icebp
or
adc
test
sub
push
cmp
xchg
fs
fs
cmp
and
vmread
or
ret
pop
cli
inc
add
lcall
push
push
mov
mov
aas
push
in
and
inc
sbb
dec
jmpw
push
and
mov
and
add
jmp
xor
out
push
mov
jg
aad
push
push
mov
mov
push
mov
mov
xchg
jno
cmc
sub
mov
cmpsb
sub
repz
rorl
sti
xor
jp
xchg
xchg
xchg
jge
and
push
xlat
cmc
call
mov
cmp
mov
inc
adc
pusha
cld
add
jae
inc
xchg
test
jmp
sbb
xchg
test
test
insw
fildl
mov
push
repnz
inc
add
out
dec
jle
pop
das
scas
xchg
ja
add
stc
add
xchg
lods
push
cmp
and
xchg
xor
sahf
lcall
lret
iret
xor
aaa
push
cld
test
in
sub
xlat
fists
jge
daa
icebp
daa
or
xchg
arpl
mov
cwtl
leave
mov
les
xchg
jp
pop
adc
mov
inc
sbb
push
xchg
push
ds
push
jns
mov
out
cmp
or
push
ret
out
mulb
inc
movsb
sti
mov
sbb
je
mov
jge
xor
test
fst
outsl
push
cld
dec
push
mov
arpl
jno
mov
in
stc
ret
mov
mov
cli
testl
pop
inc
je
dec
mov
sub
in
pop
add
and
mov
outsl
dec
icebp
sti
lods
xchg
sub
mov
lock
push
rcrl
mov
bnd
mov
lcall
test
adc
sbb
repz
dec
dec
xchg
ret
fcmovnb
or
outsl
leave
pop
stos
scas
fstl
adc
jecxz
push
mov
jmp
ficompl
sub
pop
cmp
nop
push
pushf
loop
mov
and
xor
sbb
test
sub
aad
add
inc
fwait
xlat
xchg
int
inc
xor
adc
or
hlt
or
add
and
xor
mov
cli
daa
lock
std
ss
out
push
jns
shr
arpl
mov
or
or
xchg
inc
std
push
aad
fildll
loope
xchg
mov
xchg
dec
lea
lret
out
cld
into
jnp
mov
shlb
jne
into
sub
mov
ljmp
gs
jecxz
repnz
sbb
mov
sbb
jecxz
lahf
lods
sub
mov
and
pop
mov
std
sub
sub
xchg
jecxz
and
sub
push
add
inc
mov
adc
pop
push
sbb
jle
pop
pushf
adc
addr16
adc
fs
test
mov
lret
bound
ret
add
mov
xchg
fwait
inc
mov
sub
inc
cmp
loop
popf
xor
stc
adc
popf
lret
sbb
push
aad
addr16
jnp
add
or
mov
xor
addr16
out
mov
mov
pop
lea
mov
or
sbb
cmp
cltd
sub
jp
dec
test
repnz
shrl
imul
push
sub
sub
adc
loopne
loopne
pop
pop
xchg
les
out
negl
sbb
cltd
adc
loopne
lcall
cld
lret
dec
nop
out
test
and
mov
testb
stos
movb
mov
xorb
js
sti
mov
push
into
fistl
jns
jecxz
xor
inc
clc
push
iret
test
out
call
int3
lods
jg
scas
rcrl
adc
dec
pop
stos
pusha
fcmovne
sub
cmpb
push
sbb
call
mov
jb
push
mov
jb
movsb
testl
mov
and
cmp
and
cli
pop
in
fnstenv
jnp
or
rorl
ja
leave
test
pushf
outsb
mov
movsb
enter
dec
test
aad
stc
popa
test
mov
sub
xchg
stos
fstps
mov
xchg
and
movsl
push
scas
pop
xchg
std
out
loope
data16
xchg
and
mov
mov
stos
adcb
jb
fstpl
cmp
jmp
stc
lahf
sahf
pop
js
icebp
xor
mov
push
sbb
mov
rcl
mov
push
add
and
and
int
jae
sub
sub
out
je
xlat
cmp
pop
push
imul
sub
movsl
ljmp
xchg
inc
mov
jmp
in
les
movsl
nop
push
out
jecxz
sbb
les
insl
dec
dec
icebp
or
pop
mov
pop
and
push
cs
iret
clc
or
jp
cmp
fmuls
test
jmp
adc
pop
sbb
xchg
std
sbbl
lea
aad
int
cmp
jg
xchg
xchg
fldenv
or
insb
sarb
cmp
enter
sbb
dec
mov
add
in
inc
rcrl
cmp
mov
jbe
jo
outsb
sub
pop
sahf
movl
stos
loope
and
mov
ljmp
dec
xor
imul
mov
and
jnp
push
pop
push
mov
rclb
in
or
xchg
lock
mov
fcoms
mov
mov
mov
or
mov
loop
jge
and
add
sub
dec
jp
popa
in
mov
stos
scas
loope
flds
insb
clc
data16
and
and
pop
cmpsl
xor
ret
mov
jl
clc
test
mov
ret
popf
imulb
rorl
stos
sub
sbb
fcmovu
ljmp
aad
mov
jle
mov
mov
inc
ret
push
inc
outsl
and
lds
jge
cmp
iret
adc
jo
insl
hlt
stc
ficoms
xor
inc
fs
aaa
mov
dec
or
jb
push
jae
dec
lahf
arpl
leave
mov
xchg
mov
mov
xchg
cmp
adc
ljmp
sbb
jge
cmp
ja
je
mov
cmp
lock
add
mov
cs
out
or
into
movl
mov
jno
mov
leave
mov
in
dec
xor
cmp
clc
shl
inc
stos
out
inc
movsl
add
sbb
addr16
lahf
push
pop
xor
fiaddl
mov
xlat
je
icebp
cmpsl
mov
jns
fdivrs
sahf
dec
fisttpl
pushf
adc
jg
xchg
push
call
rep
into
pop
xchg
in
adc
add
cmp
push
mov
cwtl
inc
jge
fimuls
test
mov
adc
into
idiv
mov
sar
pop
stos
arpl
dec
fwait
loopne
pop
mov
out
call
data16
push
ror
movsb
push
es
adc
or
in
mov
in
jl
fisubrl
pop
fadds
ret
stos
pop
xchg
sti
pop
xlat
ret
cs
shr
insb
pop
cmpsb
dec
sub
cmp
xchg
jbe
and
stos
pop
sbb
xlat
push
push
sti
mov
outsb
inc
popa
sbb
aam
fwait
stc
lds
pop
popf
hlt
inc
or
out
adc
stos
pop
aaa
mov
jo
outsl
loope
clc
lods
mov
adc
adc
mov
push
or
mov
sbb
jge
xor
push
cld
xchg
fcomp
dec
and
fcoms
insl
sbb
add
pushf
enter
sbb
stos
clc
push
idiv
nop
popf
and
or
or
popf
add
icebp
jle
mov
sarl
mov
jg
push
mov
adc
lret
dec
mov
adc
cmpsl
int
push
fwait
adc
mov
push
sti
add
outsb
and
and
adcb
dec
dec
ret
adc
ret
repnz
push
icebp
xchg
add
jmp
push
shlb
mov
cld
inc
popa
sbb
dec
xor
inc
dec
add
lret
testb
cld
sbb
sbb
test
jmp
xchg
jmp
cmp
hlt
lret
cs
mov
adc
push
mov
loope
jns
mov
test
je
or
cmc
cld
pop
dec
sbb
fld
jecxz
jae
mov
adc
inc
test
test
filds
test
adc
jns
in
add
mov
add
push
int
test
movsl
mov
pop
mov
xor
jbe
or
addr16
or
jbe
xchg
sbb
daa
or
fdiv
jo
add
lret
jae
lret
shr
data16
daa
sub
rorb
xchg
incl
jmp
aad
loope
scas
xor
sub
inc
cltd
dec
ja
arpl
sti
xchg
xlat
outsb
out
testb
fcmovbe
mul
xchg
in
pop
adc
xor
push
cwtl
pusha
aam
adc
loop
pop
in
mov
shrb
push
js
test
cs
inc
add
movsb
xlat
frstor
mov
mov
pusha
cmp
daa
inc
aad
les
sub
out
outsb
add
call
mov
inc
pop
mov
loopne
jl
out
sti
ja
xchg
repnz
repz
or
xchg
xor
ss
sub
mov
andb
sub
lods
cld
rorb
in
test
repnz
cli
enter
xchg
fistpl
ret
ret
out
push
sub
pop
mov
out
dec
and
add
or
sub
mov
fwait
dec
mov
and
test
xor
pop
cwtl
pop
data16
sbb
push
imul
dec
pushf
std
adc
mov
mov
addr16
int
mov
and
out
dec
pusha
enter
movsl
ret
mov
adc
xor
ss
or
xchg
or
daa
cmp
pop
insl
inc
push
je
jne
rorb
or
test
test
push
xchg
jne
test
lcall
das
or
jmp
pop
popa
push
imul
jbe
xchg
mov
add
cwtl
daa
cmc
addr16
jge
jne
xor
sbb
inc
dec
shl
notb
imul
daa
dec
ret
mov
out
cwtl
sahf
jae
shl
jnp
out
movsl
int3
lods
icebp
lods
inc
cld
roll
xorl
push
rcr
in
mov
mov
shlb
xor
insl
cwtl
movl
loop
dec
push
add
leave
shrl
lret
jns
or
inc
or
fbld
xchg
xchg
xor
push
lcall
and
jbe
lahf
insl
dec
jge
xchg
add
dec
xor
dec
ds
leave
out
cmpsb
out
gs
stos
roll
aam
sub
mull
push
int
sbb
fs
leave
mov
and
dec
adc
or
pop
mov
xor
rclb
dec
leave
loopne
fistpl
and
aam
inc
cmpsl
stos
sbb
aaa
or
rcr
sbb
sbb
cmp
pushf
inc
pushf
pop
mov
repz
dec
jl
orb
sub
add
jp
ss
loop
and
cmp
aas
popf
lods
dec
push
arpl
or
xor
mov
sub
push
sub
inc
test
mov
out
jmp
add
add
and
mov
rorb
inc
jbe
rol
add
add
push
mov
repz
cmp
divb
add
mov
imul
faddl
aas
mov
sub
adcb
enter
lea
cmp
cmp
sti
add
jge
mov
lcall
xchg
inc
into
inc
rclb
xchg
aas
ficoml
inc
inc
adc
sub
loopne
and
ficoml
mov
xor
insl
insl
jge
inc
insb
mov
ret
and
dec
and
mov
cmp
pop
sti
or
sub
lea
daa
xor
inc
rol
popf
pop
repz
aas
outsl
mov
jnp
jmp
sub
rcr
push
in
mov
sub
jl
popf
mov
inc
mov
loopne
int3
in
sahf
dec
into
ret
hlt
ret
sbb
cwtl
subl
add
pop
ss
dec
sbb
outsb
sahf
push
imul
pop
cld
leave
push
push
std
rolb
pop
xor
xchg
dec
iret
mov
and
fldl
test
mov
dec
stc
mov
inc
scas
icebp
fcmovnb
lock
scas
mov
sbb
sub
fcomps
and
xor
add
fsubrl
cmp
and
jmp
mov
pop
mov
repz
and
and
das
ja
outsb
mov
dec
adc
mov
negb
fwait
in
daa
loop
pop
into
imul
fwait
orl
addr16
cli
add
arpl
sub
roll
xchg
cltd
add
bound
repnz
push
mov
pop
pushf
iret
adc
mov
loope
movsl
addl
repnz
push
addr16
jo
dec
xor
ret
jns
mov
pop
mov
stos
or
out
mov
mov
out
daa
and
mov
sub
xor
jmp
pop
or
add
adc
jo
cmp
arpl
ljmp
gs
arpl
out
lret
out
dec
loop
pop
lret
ficompl
pop
mov
pop
add
xchg
arpl
adc
loope
loope
cmp
loop
cmpl
icebp
jmp
psubsw
jecxz
cmpsl
jge
scas
push
sbb
ss
xor
shll
out
mov
and
into
leave
iret
sbb
dec
mov
adc
in
lret
out
dec
pop
lahf
outsb
dec
xchg
dec
jbe
mov
addb
xor
sub
sti
pop
mov
mov
mov
repnz
rcrb
nop
adc
mov
cld
cs
bnd
addr16
leave
lahf
cmp
sbb
into
adc
xchg
mov
dec
mov
outsl
iret
jge
jb
rcrb
sub
mov
rclb
rcll
js
sti
ja
sbb
mov
mov
jg
adc
test
lret
sub
das
int3
arpl
in
aad
in
mov
shll
mov
mov
popf
nop
push
jno
xchg
aam
scas
orb
lds
stos
adc
mov
in
dec
pop
cltd
rol
out
pop
scas
cmp
dec
sti
jl
ds
jb
mov
push
add
mov
lahf
orl
add
insb
mov
lods
mov
in
jne
inc
xlat
stos
xlat
sbb
jl
push
or
or
mov
iret
xlat
dec
out
inc
dec
push
aam
enter
mov
or
test
cmp
jbe
call
sarl
inc
mov
push
test
cmp
sub
mov
mov
cld
push
lcall
icebp
icebp
xchg
xchg
cmp
xor
mov
bound
cmc
jmp
adc
pop
mov
dec
lret
imulb
les
addb
inc
gs
xchg
inc
stos
cmp
js
pop
xor
filds
jl
push
lea
jp
cmp
nop
lods
mov
mov
dec
int3
test
arpl
adc
push
inc
mov
mov
jle
dec
xchg
inc
enter
jmp
aam
lret
pop
pop
add
cmp
xchg
pop
cs
je
and
adc
mov
call
sub
repnz
ds
and
ret
inc
cltd
mov
push
push
lcall
mov
test
cli
push
inc
push
adc
adcl
mov
pop
call
xchg
ja
sub
stc
mov
les
mov
inc
fxch
mov
incl
cmp
xchg
stos
adc
sahf
mov
and
loop
pop
add
test
mov
push
movl
out
dec
pushf
dec
and
les
mov
push
adc
add
cmp
cmpsb
ja
stos
fildll
imul
sbb
adc
dec
popa
iret
xchg
jne
sub
add
lret
push
or
mov
sub
xchg
rcrb
jns
test
outsl
jl
rcll
push
sbb
loop
into
rclb
fcomip
std
je
push
lahf
or
mov
or
mov
lahf
push
mov
in
imul
loope
in
jle
pop
fnstenv
inc
add
mov
mov
mov
jp
mov
repnz
jg
ljmp
pop
jbe
aam
jge
cld
sbb
and
addr16
cmp
outsl
dec
leave
ljmp
lock
testb
out
jecxz
cltd
push
xchg
repnz
in
movsb
mov
loope
lock
push
cmp
std
scas
out
mov
push
outsl
cmpsb
jbe
cs
aas
push
or
mov
xor
sub
push
mov
psadbw
repnz
popf
divb
push
hlt
cmp
das
test
fwait
inc
jge
inc
fsubl
xor
inc
and
fwait
push
sbb
dec
dec
pop
dec
xor
fnstenv
mov
mov
outsl
scas
cld
jmp
lret
fldenv
test
and
arpl
and
adc
in
push
push
dec
inc
dec
outsb
rcrl
push
cmp
popa
fs
mov
call
adc
mov
xlat
add
or
jecxz
mov
push
in
jns
in
lret
jo
jae
jle
xchg
stos
jecxz
movsl
enter
jne
sbb
lcall
dec
xor
stc
dec
loopne
pop
dec
or
in
mov
adc
dec
mov
lahf
js
out
push
or
mov
faddl
call
rcrb
lds
leave
mov
ret
ljmp
int3
xor
mov
enter
xchg
cli
dec
stos
ds
fistps
jle
mov
cmp
adc
and
xchg
dec
cmpl
jo
adc
add
xor
cmp
inc
lahf
call
add
outsl
sbb
push
mov
scas
lahf
sarb
ret
xor
aas
stc
jecxz
sbb
jge
sub
mov
or
sbb
xor
loope
cs
sbb
mov
xlat
cli
mov
pop
lods
adc
or
and
jge
mov
sbb
xor
jmp
sub
xor
pop
inc
mov
mov
mov
mov
sahf
rcrb
rorb
and
inc
scas
icebp
sub
shr
bnd
lods
loop
lahf
pusha
xchg
jb
push
outsl
xor
sub
cmp
stc
shll
addr16
insb
inc
inc
mov
clc
mov
sbb
sub
lds
add
mov
fimuls
xor
and
sub
add
mov
push
mov
mov
fldenv
or
or
imul
cmc
inc
clc
es
push
fadds
xchg
cmpsl
dec
lret
scas
sti
mov
das
stos
repz
int3
test
mulb
pushl
mov
pop
push
add
and
jb
xor
cmpb
mov
and
or
jbe
mov
sbb
fisttpll
and
cmp
mov
cmp
pushf
pop
dec
lods
imul
stos
pop
add
jns
xchg
mov
shll
sbb
mov
andl
sub
roll
sbb
stc
push
inc
lods
adc
leave
adc
stc
xor
pop
adc
scas
movsb
and
adc
inc
mov
add
add
js
cmp
adc
mov
push
outsb
sbb
bound
sub
jae
mov
dec
pop
test
sub
stos
dec
aas
mov
cmp
jge
int
imul
test
enter
mov
rclb
cmp
xor
or
fidivrl
add
jl
aad
jmp
inc
sbb
repnz
loope
xor
xchg
loop
andb
push
scas
sub
dec
pop
mov
idiv
mov
jns
mov
dec
xchg
movaps
aaa
mov
insb
push
mov
dec
test
fidivrl
push
stos
jo,pn
dec
loopne
mov
push
pop
mov
adcb
out
in
xchg
inc
outsb
daa
insl
and
sbb
or
jmp
pop
jns
popf
pushf
mov
in
jmp
fadds
shlb
mov
push
mov
insb
mov
cltd
lahf
push
add
outsl
or
pop
add
jne
jle
in
xchg
push
inc
xor
sbb
repz
into
gs
and
fs
scas
arpl
add
mov
outsl
fildl
inc
nop
sub
repnz
aas
xchg
pop
add
jecxz
mov
ljmp
pop
arpl
mov
scas
jle
or
ret
sub
mov
and
fisubs
movsb
shl
repnz
add
jmp
std
and
mov
repnz
sbb
pop
sub
or
add
push
sbb
enter
imul
outsl
push
add
or
xchg
dec
cmpb
xor
in
jne
push
xchg
sbb
add
rcrl
xorl
ficoml
xchg
jne
ss
sbb
xor
lret
ret
adc
mov
cwtl
in
adcl
fcmovne
fs
out
imul
jne
into
sti
push
std
mov
push
icebp
push
jb
subb
fdivl
jle
incl
scas
mov
into
mov
xchg
add
or
outsb
hlt
cmp
sbb
shl
adc
femms
cmc
jge
push
jo
addr16
icebp
shrb
mov
lahf
cmp
and
cmp
sbb
jb
pop
adc
mov
jae
mov
add
ret
push
add
adc
imul
fadd
shlb
call
rorl
jne
xchg
xchg
call
scas
aaa
xlat
mov
outsl
insb
je
and
sbb
inc
test
fidivs
nop
test
test
mov
stc
inc
jo
mov
xchg
fwait
pusha
negb
testl
testb
sub
xor
pop
add
xchg
push
cmp
nop
xchg
int
jnp
cmp
shl
xor
in
fimull
pop
dec
test
mov
iret
cmpsl
sbb
and
cmp
std
pop
cmpsl
imul
cmp
imul
fcoml
jge
or
mov
push
cmp
sbb
dec
cmp
addr16
dec
test
adc
mov
jae
sbb
adc
test
dec
fstps
mov
pop
or
jp
push
icebp
ror
sub
mov
insb
rclb
andl
pop
mov
lret
test
pusha
es
xchg
xor
add
and
mov
adc
add
lods
and
cld
aas
popf
adcl
mov
std
mov
cwtl
push
cmp
push
jo
setl
and
int
lret
iret
dec
jmp
clc
jbe
in
es
push
je
pop
fucompp
inc
sub
dec
leave
push
push
insl
mov
ss
ret
inc
hlt
sub
adc
sbb
pop
mov
pushf
push
push
ds
mov
lcall
fbstp
out
cmp
shlb
pop
push
dec
stos
or
cmc
je
jle
aad
mov
lds
lahf
and
out
stc
mov
and
arpl
and
ret
mov
add
icebp
sub
sub
sti
add
repnz
shlb
cmpsl
jno
push
xor
xchg
adcl
stc
fisttpl
push
rcl
mov
out
mov
insb
mov
inc
sub
fldl
inc
ja
rorl
int
jbe
xor
pusha
lahf
sti
sbb
popa
out
mul
pop
std
push
pop
push
aas
aam
lds
loop
int
pop
push
jns
mov
and
inc
pop
sti
popa
inc
jno
mov
push
sbb
jle
mov
sbb
xchg
mov
jg
pushf
mov
rolb
int
addb
cmp
loop
push
add
cmp
inc
aam
incb
cld
daa
in
cmp
lds
mov
add
fs
add
cmpsb
mov
sub
mov
js
xchg
rcr
rcl
leave
dec
jle
xchg
lret
adc
xor
xchg
loop
mov
mov
mov
mov
scas
rcll
xchg
insb
aas
test
sbb
hlt
dec
sub
xchg
lret
cld
jns
pop
fbld
mov
aaa
or
in
pop
arpl
mov
lock
mov
add
int
jle
pop
xor
test
inc
mov
or
rolb
xlat
sbb
and
xchg
addb
popf
push
icebp
jl
pusha
cmp
sub
dec
stos
adc
push
mov
mov
jne
adc
push
mov
mov
outsl
je
aad
cmp
outsl
cmp
jecxz
and
scas
dec
xor
ljmp
fwait
outsl
jp
mov
je
mov
notb
mov
mov
gs
in
add
or
leave
adc
and
enter
sbb
mov
aas
aas
push
mov
sub
hlt
pop
fcmovnu
push
push
lds
add
mov
push
adc
lods
mov
lret
data16
dec
sbb
inc
ljmp
popa
decl
and
xchg
leave
loope
shll
out
in
dec
add
sti
out
scas
xchg
or
mov
imul
arpl
stos
jo
movsl
mov
in
in
fstpl
js
mov
jmp
dec
pop
push
dec
call
mov
inc
ss
add
daa
sbb
pop
jg
xchg
xchg
popa
fcoml
add
icebp
lret
fwait
mov
sbb
xchg
and
gs
repnz
mov
psubq
push
add
push
nop
jb
push
sti
gs
scas
cltd
sbb
jno
jmp
into
enter
sub
or
cmp
jo
inc
gs
dec
push
bound
xor
in
pmulhw
movsb
ret
xor
jl
lcall
cmp
push
cmpl
and
mov
repnz
or
inc
sbb
mov
jg
push
sbb
jno
pop
les
and
dec
or
xor
lret
sti
rcr
xchg
mov
mov
mov
adc
ljmp
add
sub
lret
jl
cli
jge
jne
clc
in
jmp
jo
loope
pop
andl
sbb
loop
dec
and
pop
in
int
clc
pop
dec
sbb
pop
insl
loopne
aam
and
mov
dec
fsubl
mov
pop
jnp
cmc
jnp
pop
sub
xor
xor
push
sbb
mov
and
pop
add
cs
cltd
xchg
ljmp
imul
cmp
std
mov
mov
push
inc
dec
gs
repnz
mov
mov
mov
movsl
test
imul
sbb
jo
cmpsb
lods
mov
sub
sub
push
pop
ja
cltd
movsb
scas
arpl
test
addr16
push
sbb
andl
and
lock
xor
lret
sbb
push
jbe
sbbb
mov
fsubl
hlt
add
adc
pop
clc
xor
iret
and
and
fwait
adc
add
sti
shl
decb
xchg
lods
bound
popf
leave
sbb
int
fists
jg
mov
jne
adc
notb
inc
sub
fsub
inc
das
int
xchg
push
dec
pop
cmc
fdivrl
int3
mov
idivb
sti
lcall
push
mov
mov
push
cwtl
or
fs
int
test
and
js
mov
cltd
lods
pop
adc
sbb
mov
pushw
out
sub
dec
call
push
divl
ss
sbb
in
or
bnd
cmp
cmp
in
pop
popf
mov
mov
frstor
fdivs
adc
in
fwait
lods
mov
cmp
mov
push
inc
in
mov
aam
lock
test
pop
daa
stos
lret
jns
in
movsb
stc
cwtl
pop
or
mov
in
pop
mov
int3
rorl
iret
push
jge
mov
inc
ret
jge
sti
aad
or
or
cwtl
icebp
stos
aas
jbe
mov
jo
loope
dec
xchg
xchg
mov
sbb
shlb
pop
das
xchg
insb
xlat
cwtl
ret
in
into
sahf
cmp
cmc
mov
stos
fists
in
dec
out
dec
xchg
dec
outsb
sbb
loop
jmp
inc
out
outsb
addr16
movsb
cli
fs
in
jg
fs
fldenv
jmp
int
mov
pop
movsl
sub
mov
mov
adc
mov
jge
repnz
mov
aaa
xor
stos
jg
xor
mov
xor
out
mov
add
jl
test
pushf
or
fwait
ja
sub
cltd
es
jge
dec
test
cmp
add
sub
inc
cmc
xorl
add
push
sub
xchg
push
cmp
aad
ret
ljmp
cli
out
es
addr16
and
jb
xchg
scas
cmp
dec
inc
in
sbb
lods
aad
lods
pusha
xchg
adc
xor
mov
in
pushf
add
ret
mov
addr16
les
mov
sarl
push
fists
loop
jb
push
sti
mov
cmc
in
mov
inc
mov
xor
push
rclb
bound
jecxz
jg
aad
xchg
or
int
jge
xchg
jae
stos
xchg
add
jo
rorl
dec
iret
aam
lods
or
push
fimuls
jecxz
mov
mov
pop
inc
push
fisubs
repz
or
insb
dec
mov
in
andl
xor
push
or
psrlw
inc
mov
cmp
pusha
adc
cmpb
mov
outsl
popa
mov
ret
sahf
and
lahf
in
rolb
repnz
arpl
mulb
ja
mov
enter
mov
aaa
pusha
sub
rcr
pusha
mov
jbe
push
ret
jns
mov
cmp
test
add
mov
jge
jmp
xorl
push
test
nop
xor
cmp
adc
fiaddl
inc
add
xchg
push
jae
mov
push
leave
inc
outsl
enter
dec
repnz
lahf
leave
push
or
mov
cmp
sbb
into
push
or
cmp
es
popa
xor
les
data16
cmp
fcoml
ret
pop
add
loop
lahf
fstpl
shl
in
clc
push
in
dec
sbb
mov
jae
mov
xchg
lock
js
sub
push
into
movsl
cmp
mov
push
test
pushf
mov
in
lcall
fwait
pop
xchg
pop
hlt
cli
stos
loope
popa
mov
sub
in
test
ret
dec
test
add
pop
or
nop
sbb
cmp
jae
push
mov
cmp
shr
andb
sub
shr
push
mov
cmp
xor
jg
pop
mov
mov
push
test
xchg
cmp
call
lock
push
add
popf
nop
xchg
mov
aas
pop
mov
lahf
das
repnz
faddl
inc
sbb
and
jecxz
cmp
and
sub
dec
mov
inc
loope
mov
je
call
mov
and
lcall
cs
movsb
loop
mulb
dec
cmp
mov
clc
xchg
mov
popa
sti
pop
or
out
in
dec
pop
or
scas
das
movsb
mov
ret
movsl
movb
lds
sbb
sar
lcall
push
loop
jecxz
jne
lea
lods
cmp
lahf
xor
mov
mov
pop
jb
sbb
xlat
ds
and
pop
jnp
mov
jl
pop
lret
lds
ja
add
or
enter
mov
pop
mov
push
outsb
mov
sbb
add
fwait
sbb
imul
ret
loop
aas
cmc
dec
shr
int
test
dec
icebp
jae
mov
loop
add
add
imul
aad
and
sahf
dec
imul
stos
jae
jl
mov
cmpsl
and
sub
adc
stc
inc
mov
fimull
push
inc
pop
pop
test
sbb
adc
ret
sub
sbb
xor
mov
call
mov
ds
inc
cmp
in
jecxz
or
push
cmp
outsl
and
mov
mov
flds
or
cmp
xchg
scas
cmp
lret
arpl
dec
jmp
int
cmc
scas
loop
rcrb
testl
jo
pop
stos
dec
inc
add
pop
pop
test
xchg
and
mov
add
mov
fnsave
outsl
cmp
sbbb
dec
cmc
les
mov
push
lock
lcall
dec
enter
neg
inc
cmp
inc
inc
sbb
add
cmp
in
ljmp
cli
fidivs
mov
stos
cmp
ret
push
call
insb
mov
leave
fwait
push
shrl
shlb
negl
out
lods
ret
xor
popa
mov
inc
xor
sbb
shlb
cs
inc
lods
inc
mov
jno
and
movsl
xor
ds
test
orb
xchg
subb
loopne
cmp
jmp
notl
mov
fisubs
add
stos
dec
nop
cmpsb
and
cli
mov
xor
and
loopne
mov
pusha
test
lods
std
out
xchg
mov
push
stos
sti
cli
mov
insb
stos
adc
jl
dec
push
jb
daa
pop
cmpsb
and
adc
add
fsubrl
or
inc
mov
lds
aad
pop
sbb
int
mov
adc
insl
xor
test
fbld
sbb
adc
adc
pusha
lea
mov
data16
mov
add
xchg
in
cmc
aaa
mov
mov
pop
repnz
imull
mov
ret
gs
or
loop
aas
mov
je
movb
pop
and
dec
enter
pop
les
hlt
cmp
inc
sbb
pop
adc
aad
leave
pop
inc
inc
inc
fs
or
mov
push
jnp
enter
mov
push
jb
scas
or
and
jne
xchg
call
adc
inc
movsb
dec
mov
pop
and
scas
push
pop
cmpl
divl
jg
inc
jbe
sbb
lock
bound
jb
lcall
sub
lret
movsb
iret
aas
dec
sahf
mov
cmpsb
sar
orb
jmp
push
sbb
jb
lea
out
mov
ficoms
mov
pop
mov
fisubrs
stc
mov
mov
aam
enter
mov
xchg
aas
sub
adc
and
jnp
hlt
add
in
add
icebp
nop
imul
mov
jne
xchg
in
adcl
dec
enter
xor
enter
leave
mov
popa
dec
faddp
aad
mov
scas
cld
test
arpl
mov
mov
push
cwtl
mov
jl
mov
xor
pop
pop
lea
mov
adc
fildll
inc
inc
dec
mov
cwtl
or
cmp
cmpsl
fwait
mov
add
or
and
mov
arpl
sub
push
xchg
xchg
hlt
mov
xchg
movsb
xor
xchg
mov
xchg
push
add
ret
jmp
xchg
roll
popa
data16
test
loop
int3
jae
out
xchg
outsl
stos
cwtl
ds
sbb
xor
mov
dec
scas
pop
out
jmp
lods
int3
push
test
xorl
or
xor
outsl
inc
outsb
cli
lea
stos
adc
adc
cmpl
iret
sub
lock
mov
pop
stos
in
stc
mov
xor
mov
ffreep
xlat
and
adc
ds
jle
sub
xor
aas
fsub
in
or
pop
cmp
divpd
sub
repnz
psrld
xor
cs
jp
inc
jg
and
loope
js
ljmp
out
fwait
mov
jne
fadds
in
sub
or
add
enter
cmp
mov
sub
push
and
or
aas
mov
mov
mov
fcmovbe
scas
and
push
loope
pop
mov
sbbl
push
ss
dec
mov
lods
jo
mov
in
and
jmp
outsl
mov
jbe
sbb
into
mov
sbb
inc
adc
cmp
dec
mov
pop
cmp
jnp
pop
mull
mov
imul
jmp
adc
pushf
mov
xchg
mov
mov
mov
daa
fsubp
inc
ds
mov
push
dec
cwtl
and
cltd
jl
adc
xchg
adc
jns
out
loopne
leave
pop
popa
push
fldenv
cli
fbstp
in
push
jmp
sub
outsl
mov
arpl
cmpb
mov
rcrb
lods
pop
fcomps
xor
mov
aad
xchg
fnsave
or
lret
xchg
sub
sbbb
cmp
loopne
out
hlt
jl
mov
ret
les
sbb
out
iret
mov
movsb
mov
adc
sbbl
adc
lahf
cli
iret
lock
sbb
insl
xchg
mov
sbb
push
mov
subl
int
pop
in
pusha
pop
gs
push
scas
jb
imul
movsl
mov
sbb
sbb
dec
xor
xchg
es
decb
mov
mov
lret
pop
mov
sub
xor
das
lods
in
xor
xor
fcmovne
inc
jne
cmpl
ss
mov
cmp
out
or
xor
push
fwait
sbb
stos
lods
fstl
and
fmul
mov
and
xor
test
jge
add
popf
jne
or
push
mov
in
cmpl
sub
pop
lret
push
loop
sbb
addb
out
fs
nop
fcoml
xchg
cmp
dec
cmp
fdiv
add
mov
inc
jg
and
mov
cmpsl
iret
iret
shll
gs
addb
mov
scas
sbb
adc
int
pusha
pop
loopne
and
popf
mov
ss
addr16
popf
jp
popa
or
loopne
xor
mov
push
or
test
ja
push
test
sbb
inc
inc
and
shrb
jmp
add
add
pop
shll
dec
jae
fsubrp
scas
shr
mov
jp
or
dec
and
ficomps
pop
enter
jecxz
xchg
rorl
fstps
mov
lea
mov
add
xchg
mov
daa
mov
jns
repz
mov
sub
inc
repnz
mov
add
and
or
pop
mov
or
or
mov
mov
mov
ret
insl
add
roll
aad
call
and
lea
cmp
fs
inc
imul
fs
icebp
push
dec
sub
xchg
icebp
sarl
jmp
pusha
aad
adc
xchg
mov
push
aam
push
pop
jmp
mov
xchg
push
xchg
push
xchg
in
out
adc
jne
inc
jmp
ret
dec
dec
mov
cmp
xchg
into
rorb
mov
sbb
fildll
repz
leave
mov
mov
fmul
mov
inc
lcall
fidivrl
and
in
mov
das
inc
in
orl
daa
outsl
lcall
sub
inc
and
mov
lock
push
inc
insl
dec
jg
clc
or
xor
sub
fmulp
push
mov
out
mov
push
sub
xchg
push
add
pop
pop
xor
dec
out
test
out
push
aas
ljmp
les
adc
cltd
push
inc
sarl
shlb
mov
shrb
push
repnz
cltd
mov
adc
add
loopne
mov
popa
bnd
popa
or
and
push
mov
pop
sub
or
into
jmp
xchg
ja
jo
sub
jmp
lea
in
aas
aas
xor
sub
inc
mov
lcall
pop
cld
loopne
cwtl
adc
add
mov
mov
mov
push
mov
int
out
call
push
and
dec
sub
mov
cwtl
mov
pop
decb
mov
faddl
jo
fdivrs
add
int
inc
pop
sbb
adc
stc
mov
xchg
adc
aas
adc
pop
iret
movsl
fildl
fnstsw
inc
bound
lods
dec
inc
int3
inc
cmp
dec
sub
lahf
xor
pop
mov
cs
fldt
lock
clc
int3
dec
add
test
les
test
xchg
or
or
jb
pop
test
into
pop
mov
fs
dec
jne
add
mov
jmp
push
xchg
fnstsw
scas
dec
iret
sti
or
xchg
jecxz
test
jne
cltd
ror
ret
fisubl
push
cmp
ss
mov
neg
test
xchg
sub
ss
int
call
xchg
fwait
mov
and
pop
movsb
add
mov
and
jg
addb
xor
out
push
and
sub
or
sub
inc
sbb
lcall
scas
dec
fstp
rcll
mov
fstl
dec
clc
lods
popa
cmp
pop
mov
fsub
arpl
idivb
xor
cmc
call
inc
jb
test
stos
lret
cli
xor
push
mov
jns
insl
push
jno
and
cmp
xor
xchg
inc
cmpsb
xchg
fwait
xchg
sbb
fsts
xchg
mul
xchg
insb
das
sub
sbb
push
clc
sbb
push
jp
or
dec
mov
mov
lahf
jmp
int
mov
faddl
leave
adc
or
inc
in
inc
pop
fisttpll
dec
xchg
xchg
aaa
jge
jecxz
scas
cli
push
cmc
sahf
mov
dec
cmp
ret
ja
xchg
xchg
sbb
cmp
mov
push
cltd
ret
cmp
push
or
stc
or
idivb
dec
pushf
arpl
pop
pop
out
mov
xchg
insb
xor
push
pop
addb
cli
mov
xchg
push
mov
or
jle
sarb
aas
insb
cmc
dec
cld
xchg
insl
call
or
pop
mov
fistpll
inc
fbld
iret
xchg
mov
cmc
cmp
shlw
idivb
pop
shlb
ficoml
insl
addr16
rorb
jmp
push
mov
cmpsl
push
mov
pop
pop
add
lcall
and
cmp
in
lea
out
fldcw
dec
inc
xchg
mov
cmp
aas
arpl
pop
pop
test
mov
insb
ss
xchg
jecxz
cmp
pop
jb
sahf
cmpsl
and
or
push
in
push
out
lods
imul
dec
jno
imul
in
adc
rcll
push
mov
and
aad
mov
sub
and
add
xchg
sub
aam
push
outsb
jle
xlat
sbb
jp
mov
loopne
jl
push
mov
mov
mov
idivb
les
add
mov
in
or
adc
push
punpckhdq
xchg
test
lret
mov
pushf
or
mov
ljmp
jnp
mov
fnstenv
mov
dec
in
je
pop
and
cli
adc
movsl
arpl
lcall
mov
sbb
pop
xchg
push
sub
shl
in
cmpsb
jge
sbbb
or
xchg
pop
pop
jnp
and
pop
rorl
xchg
mov
jmp
add
inc
dec
sub
xchg
dec
leave
loopne
adcb
jne
and
rorb
cld
xchg
pop
lds
fstpl
stc
jp
cmp
sub
jg
sahf
xor
push
jge
and
dec
jle
jns
fdivrs
jmp
xlat
pusha
loopne
lods
push
test
lods
mov
fsubl
xchg
inc
xor
xchg
fldenv
bound
push
inc
xchg
jg
aam
xor
dec
das
xchg
pop
jecxz
call
mov
sti
jb
movsb
cwtl
pop
movsl
xor
int
push
popf
int3
dec
je
fsubp
add
xchg
cmp
lret
scas
fisubrs
inc
insb
out
xchg
mov
ja
add
daa
int
mov
mov
mov
int
lret
dec
dec
adc
data16
dec
mov
xor
repz
mov
aaa
jecxz
xchg
cmpsb
mov
in
lds
gs
and
es
nopl
mov
adc
jnp
xorl
nop
fdivr
sarl
pop
push
or
dec
jns
mov
adc
clc
lock
inc
lret
decl
inc
and
in
inc
adc
pop
or
lcall
jno
mov
jl
mov
jno
push
dec
repnz
lret
popf
fdivs
je
fs
ret
cwtl
js
sahf
push
cmpsl
pushf
fmull
mov
mov
xor
sbb
ror
insb
or
or
cld
push
cwtl
push
lret
sbb
dec
loop
sbb
jmp
pushf
into
pop
pop
add
ds
dec
sbb
push
dec
or
es
xchg
ds
cli
cltd
mov
lock
test
pop
mov
push
jbe
int3
push
psrlw
repz
loopne
test
jbe
pop
imul
in
xchg
stos
adc
test
push
jae
or
pop
cltd
int3
mov
push
mov
std
aam
add
adcb
mov
fdivl
cs
stc
dec
or
jg
fs
and
cltd
repz
fdivrp
lret
out
loope
adc
push
sub
push
push
adc
pop
pop
sbb
out
lcall
repz
iret
inc
popa
ret
xchg
das
dec
pushf
mov
les
push
adc
and
pusha
mov
in
addl
pop
cld
call
jo
lods
cmp
into
mov
push
or
xorb
lods
hlt
cmp
mov
idivb
push
test
inc
sub
insl
je
lea
mov
insb
xor
dec
rolb
bound
fldcw
mov
aad
mov
push
out
bound
or
pop
scas
lahf
out
outsl
ficoms
mov
add
inc
pop
xchg
xlat
fstpl
into
mov
cmc
mov
test
test
lret
adc
fsubl
jecxz
stos
cs
mov
sub
push
and
and
xchg
xchg
xor
mov
sub
dec
and
push
in
int3
jmp
rclb
jge
adc
test
jg
xor
in
in
dec
xor
mov
insb
insb
fwait
xor
mov
mov
pop
xchg
lea
lds
stc
ret
mov
mov
push
aad
les
and
cmp
mov
add
ja
mov
scas
inc
jmp
into
mov
xchg
jp
xchg
sub
fldcw
inc
adc
in
and
imul
mov
test
repz
push
lret
scas
mov
std
scas
push
shll
mov
in
inc
outsl
sahf
pop
testb
sarl
push
sub
test
sbb
add
xor
dec
scas
push
mov
cmpsb
mov
fildl
push
sub
fsubrl
fmull
int
loope
dec
jl
in
adc
xor
mov
adc
adc
push
pop
lock
add
push
into
mov
push
hlt
outsl
lahf
repz
shll
push
test
fmull
shll
push
pop
rcrl
jl
jge
mov
das
out
sbb
sarl
shl
mov
cmp
dec
jns
cmpsl
in
rcrl
pop
or
pop
push
daa
jbe
cmc
mov
dec
sub
ljmp
mov
out
xchg
sub
bound
jbe
cmp
sbb
jl
arpl
xchg
pop
jne
rcrb
inc
dec
dec
adc
dec
mov
cmp
jbe
xor
je
repz
jle
pop
icebp
adc
je
dec
dec
add
xchg
or
lds
pop
push
mov
xor
xlat
ja
gs
cld
stos
mov
xor
int3
bound
pop
dec
jae
inc
push
xchg
mov
push
shl
out
sbb
fadds
cmpsl
aaa
pop
int3
pop
insl
mov
cmp
cld
insb
out
lds
dec
cmp
repz
cmpsb
adc
cmp
and
push
adc
hlt
jnp
xchg
cmp
in
lock
xor
data16
cli
fcomip
sub
repz
fidivrs
ljmp
test
sub
sub
adc
rorb
lds
mov
jno
adcl
cmpsl
add
add
popa
andl
sub
jne
sbb
jl
push
xor
xchg
cmp
mov
add
push
dec
mov
ret
and
or
mov
out
mov
mov
xchg
in
in
sub
adc
xor
mov
mov
enter
out
clc
cwtl
shrb
add
xor
lcall
mov
add
aad
aaa
lcall
pandn
mov
int
loope
push
sti
sbb
rol
out
adc
test
repnz
aam
sub
mov
dec
shll
int
sub
jnp
dec
pop
test
je
jp
fildll
inc
mov
or
inc
aam
xchg
push
cmc
in
movsb
mov
xor
mov
cwtl
adc
bound
adc
loope
sub
or
jne
pushf
ljmp
jnp
xchg
loopne
in
and
mov
push
lock
cmp
sar
mov
sbb
movb
jns
repz
mov
call
mov
jmp
addb
in
push
mov
sti
data16
mov
pop
jp
mov
out
in
xchg
dec
lods
int
mov
mov
hlt
outsb
or
push
adc
mov
imul
mov
xor
adc
shlb
dec
dec
mov
add
fisubs
gs
adc
add
push
psrld
rep
jb
push
enter
xor
pop
mov
jb
mov
or
fiadds
mov
adc
test
fcompl
pop
test
mov
adc
mov
jle
ss
ret
jl
ret
shlb
mov
fbld
mov
outsb
pop
adc
lahf
jecxz
and
mov
cvtdq2ps
sbb
sbb
and
pop
inc
loope
into
add
xchg
pop
sub
in
sub
in
hlt
dec
fcoml
sbb
pop
push
mov
std
rolb
cmp
out
xchg
mov
push
add
jg
jnp
rcll
pop
sahf
xchg
aas
test
mov
cmp
nop
push
mov
aam
jmp
mov
sbb
aam
scas
add
addr16
insb
andl
stc
int3
rcrl
pushf
imul
es
mov
mov
mov
xor
jle
mov
int
adc
sub
pushf
icebp
mov
xor
mov
fucomp
repz
aas
xlat
ds
pop
pop
mov
inc
in
push
enter
dec
push
inc
mov
xchg
fcomps
fbstp
loopne
xchg
jg
xor
inc
imul
aaa
or
hlt
adc
pop
push
adc
pop
imul
push
mov
jl
fstp
out
cld
inc
lret
imul
js
and
cwtl
nop
adc
cld
nop
jns
ret
cmp
mov
pusha
and
scas
mov
ljmp
xor
or
or
or
call
fdivrs
push
ret
mov
test
inc
add
dec
pop
xor
movsb
inc
xor
mov
cmp
push
xchg
lods
mov
mov
jg
jne
out
inc
int3
and
and
mov
inc
ret
cmc
repnz
inc
in
in
xor
sbb
scas
inc
jno
push
jne
cmp
jg
adc
cmp
sub
lcall
pop
push
lods
fwait
hlt
sbb
xchg
push
mov
pop
jp
out
pushf
sbb
xor
loopne
inc
pop
sub
cltd
sbb
xchg
push
push
xchg
xchg
stos
out
sub
mov
mov
jnp
dec
add
pop
int
adc
in
adc
or
cmp
in
or
inc
scas
lods
pop
xchg
mov
ljmp
jns
cltd
cmp
jne
jb
xor
and
mov
cltd
and
ljmp
cwtl
or
mov
sub
xchg
sbb
enter
scas
push
pushf
fucom
in
mov
lcall
mov
out
leave
push
sbb
and
ljmp
mov
rcl
stc
mov
cmpl
test
scas
loope
popl
dec
pop
rorl
stos
cmp
pop
test
dec
ljmp
inc
fidivrl
dec
and
xchg
shll
xchg
scas
dec
mov
push
push
mov
loop
or
adc
movsb
sub
iret
or
sahf
inc
jge
push
out
mov
mov
push
jnp
sub
fcmovnu
ss
nop
inc
jb
cmc
inc
jle
faddl
add
dec
cmp
mov
out
dec
fmul
pusha
popa
in
sub
mov
rcrb
icebp
add
or
aam
idivl
imul
out
or
ljmp
imul
adc
movsl
xor
iret
jl
repnz
lock
inc
dec
adc
or
cmpsb
aam
pop
out
fiadds
lods
cmc
mov
xchg
pushf
mov
or
aaa
scas
sbb
or
out
adc
movsb
adc
leave
add
or
mov
xor
sub
loopne
imul
push
inc
jo
adc
test
loop
jmp
rcrb
cmp
loope
xor
cmc
popf
xor
mov
cmp
push
sub
mov
das
cmpsl
and
jb
into
scas
or
lahf
and
mov
outsb
mov
pop
in
mov
pop
or
cmp
xchg
add
or
cli
popf
pop
lret
xchg
std
sub
add
pop
jle
pop
mov
sub
fcoms
cmp
jmp
lds
cs
sub
push
es
xor
sarb
push
hlt
sahf
lret
cmp
dec
xor
mov
xor
sbb
cmp
loop
xchg
pop
hlt
cmp
test
or
outsl
call
mov
lods
push
jnp
loope
mov
in
lock
sbb
pop
sub
and
adc
enter
les
push
jp
pop
mov
pushf
in
add
loopne
outsb
out
sti
rcl
testl
cmp
in
leave
repnz
incl
mov
in
cltd
push
sbb
addr16
push
lods
inc
sbb
xchg
or
mov
fnsave
loopne
mov
or
fstpl
mov
adc
ljmp
push
mov
mov
push
adc
stc
push
push
jb
clc
mov
cmp
repnz
dec
pop
movsl
inc
movsb
fwait
stc
mov
daa
mov
mov
jns
scas
lcall
xor
mov
jg
enter
sbb
hlt
or
imul
xlat
jbe
fistpll
pop
sarb
jg
add
jp
and
xchg
mov
imul
dec
lods
xor
xchg
cmp
imul
add
dec
mov
in
imul
pushf
call
push
add
outsl
mov
mov
imul
and
jmp
inc
push
in
repnz
fidivrl
jmp
xor
inc
icebp
push
or
das
or
inc
mov
and
lea
das
dec
sbb
sub
pop
dec
push
iret
inc
mov
mov
jle
cwtl
inc
pop
xlat
sbb
sbb
jo,pn
sub
arpl
imul
adc
sbb
cwtl
or
int3
cmpsb
nop
xor
xchg
jne
cmp
or
add
dec
sahf
mov
in
push
out
and
sub
inc
adc
nop
daa
popf
cmp
loope
in
fcmovu
push
xchg
movsl
sub
fists
adc
es
xchg
jo
js
mov
jmp
add
xchg
ret
pop
dec
sub
ljmp
jp
test
mov
pop
fimull
andb
vmulps
and
push
jp
aad
into
icebp
xor
dec
loop
xor
jecxz
repz
daa
xor
sbbb
pop
push
sti
jg
adc
or
pop
ret
pop
cmp
sbb
inc
add
repz
cmp
cmp
xchg
pop
mov
arpl
imul
sub
adc
jne
out
insb
ret
xchg
add
jle
mov
lock
jno
jae
xlat
jecxz
jbe
jbe
ret
out
dec
call
jno
jbe
xchg
cmp
or
jmp
sbb
imul
clc
ss
dec
jbe
or
push
lcall
sbb
push
mov
jo
movsl
mov
cmp
imul
pop
push
pop
mov
inc
outsl
clc
xchg
mov
sbb
mov
lar
cmp
jnp
sbb
jnp
sbb
jno
cmp
fwait
shrb
push
inc
loop
or
xchg
fiaddl
sub
cld
dec
xchg
jb
inc
daa
je
jmp
pop
rolb
hlt
adc
inc
lea
in
sahf
cli
imul
enter
subb
sub
into
xlat
push
inc
icebp
mov
xor
aam
mov
or
sub
out
movsb
jne
pusha
insb
daa
push
in
adc
sbb
xor
call
xchg
jb
icebp
xchg
sub
sub
mov
stos
inc
and
out
std
adc
shll
xlat
or
jp
gs
add
mov
jae
cld
loope
push
or
repz
test
pop
test
lea
sub
pusha
xchg
mov
ss
in
jp
or
cld
or
or
cmpsb
add
xchg
loop
sti
xchg
and
aaa
add
cwtl
test
jg
mov
enter
cwtl
sahf
sbb
jecxz
lds
xchg
lds
cmp
sahf
xor
lahf
sti
add
in
cmp
inc
outsb
and
pop
mov
jecxz
mov
adc
out
mov
fsubr
sbb
add
ljmp
imul
in
mov
inc
ja,pn
sbb
xchg
pop
test
cmp
inc
inc
aad
xchg
popa
add
jo
pop
lods
pop
mov
push
xor
aam
mulb
aad
stos
sbb
fwait
xchg
les
jnp
and
jo
mov
or
iret
xchg
mov
dec
jge,pt
mov
rolb
jmp
xchg
mov
sub
mov
cmp
push
insl
cmp
sub
clc
int
mov
inc
jecxz
mov
shlb
cld
jo
ret
shll
push
int3
daa
mov
adc
sbb
and
test
subl
sbb
fcomi
sub
mov
inc
sbb
and
dec
mov
xchg
sub
pop
fcmovnu
push
insb
pop
icebp
adc
mov
fldt
adc
jno
fdivrs
push
aad
cmc
iret
ss
xchg
mov
lret
fcomi
and
arpl
push
push
outsb
into
js
dec
dec
pop
mov
or
popf
jg
adc
shr
pop
fsubrl
fdivs
push
dec
mov
push
dec
movsl
movl
jb
outsl
pop
or
sub
pop
das
hlt
lea
mov
movsb
popf
aaa
scas
sbb
test
mov
repz
sub
test
push
mov
int
test
push
insl
mov
lods
sub
xor
enter
outsb
pop
mov
pop
mov
outsl
decl
loope
mov
push
jae
jae
cld
push
mov
cli
bound
dec
cld
enter
gs
dec
jns
stos
cs
xchg
mov
xchg
adc
jmp
add
outsb
sub
cmp
mov
pop
adc
cld
lea
pop
sub
scas
add
repnz
xchg
xor
fidivrl
dec
imul
out
or
inc
pop
mov
xor
stos
iret
mov
jnp
jnp
inc
sti
jb
and
mov
stos
xor
xor
pop
inc
in
push
dec
push
jo
es
mov
lock
dec
imul
xchg
repz
sub
and
or
in
jbe
push
repnz
mov
sub
or
jmp
xchg
popf
das
int
icebp
shrl
sbbl
lds
sub
shlb
out
dec
lods
cmp
mov
push
or
mov
mov
push
jnp
pop
stos
es
jb
jo
cmp
ficomps
mov
loope
xchg
xor
cmp
xor
mov
mov
ret
push
je
push
mov
push
imul
pushf
int
out
loop
mov
push
mov
mov
pushf
ret
or
jnp
adc
lahf
push
push
jno
mov
fisubs
cli
ret
icebp
mov
mov
ret
sub
add
xchg
das
mov
pusha
mov
and
loopne
imulb
pop
pop
mov
fisttpl
enter
inc
sub
add
loop
test
dec
sbb
mov
jle
mov
ja
pop
xor
jnp
sub
push
mov
push
xor
sbb
insb
psubusw
fmull
imul
aam
mov
jp
call
sahf
push
pop
loop
add
inc
push
xchg
pop
repz
xor
lret
repz
inc
pop
add
sbb
mov
cs
jg
rorb
dec
pop
sbb
inc
xor
push
sahf
arpl
or
gs
xchg
jmp
imul
repz
push
add
dec
sub
xor
es
mov
cmc
inc
lds
mov
popa
pop
mov
scas
sbb
insl
cli
pop
imul
jbe
loope
mov
js
dec
mov
dec
repz
aam
fucomi
pop
adc
in
sbb
cmp
pop
push
cld
into
jbe
or
and
jns
test
addr16
xor
les
xchg
jl
rclb
aas
cmpsl
repz
decl
iret
pop
mov
push
call
int3
insl
add
fs
sbb
lahf
mov
cmc
xchg
sbb
mov
cmp
js
adc
stc
jecxz
jecxz
test
jp
outsb
xor
jae
data16
xor
rol
dec
inc
out
sub
into
pop
cmp
sbb
movsb
lret
aad
xor
aas
mov
push
add
and
hlt
xchg
imul
iret
test
loop
insl
xchg
lods
icebp
inc
std
lahf
stos
inc
xor
insl
add
ja
hlt
daa
lods
sub
cld
add
and
pop
mov
sub
mov
or
pcmpgtb
fcmovb
dec
pop
mov
dec
mov
sub
mov
jnp
pusha
aaa
cltd
enter
data16
sbb
sub
sahf
jae
mov
mov
push
and
bound
movsl
push
cwtl
pop
ret
push
in
cmc
hlt
jo
and
outsl
cmp
inc
subb
lods
jmp
mov
aad
push
mov
sub
inc
outsl
pop
add
mov
or
xor
sarb
add
imul
mov
dec
icebp
shrl
cmc
pop
es
cmp
cwtl
dec
mov
mov
pop
nop
and
sbb
movsb
cs
leave
pop
mov
xchg
add
leave
test
test
pop
call
rorb
and
in
inc
fidivrl
pop
das
xchg
jge
icebp
test
xchg
jae
sub
pop
lahf
pop
and
sub
ljmp
mov
int3
cmp
out
push
cmp
mov
pop
mov
clc
jecxz
mov
loop
es
mov
icebp
sub
repz
sub
xchg
pop
cmc
les
push
clc
lock
sete
jb
ss
scas
adc
or
pop
mov
ss
stc
pop
or
leave
mov
int
loop
int
dec
mov
or
nop
movsb
pop
movb
push
jp
sub
dec
push
xor
rclb
std
sahf
cmp
mov
int3
lock
jl
in
je
stc
or
jbe
arpl
jle
cltd
pop
dec
adc
mov
cmp
xor
xchg
ud0
imul
out
ds
push
inc
nop
adc
xor
daa
inc
mov
jge
das
fcomps
push
pop
mov
cmp
mov
dec
into
sbb
or
sbb
mov
divb
lock
mov
mov
xlat
mov
mov
sub
push
sbb
cli
sbb
loope
xchg
sbb
cmp
jecxz
jb
hlt
mov
mov
fwait
mov
mov
jo
ljmp
push
add
inc
ret
or
and
das
sbb
mul
in
std
mov
imul
fsts
lcall
cmp
enter
xchg
xchg
add
ja
cmpsl
sbb
in
or
adc
adc
data16
test
lahf
into
fildl
rolb
pushw
scas
add
jge
test
aas
push
rorb
jb
outsb
clc
fcompl
jg
jmp
push
xor
or
jge
lds
push
js
xor
pusha
dec
mov
sub
pop
mov
cmpsb
jns
push
or
loopne
sbb
or
jg
ret
mov
xor
dec
xor
sti
fwait
add
popf
ds
clc
or
jp
jne
xchg
mov
adc
cmp
sub
test
sbb
shr
cli
cwtl
test
dec
cmpsl
lods
sahf
lret
xor
mov
imul
and
mov
movl
pop
lock
mov
jb
out
push
or
es
add
or
xchg
or
jo
push
ja
jge
pop
sub
mov
or
leave
test
sub
push
mov
jge
inc
pop
and
cmp
jmp
das
mov
pop
rolb
leave
test
cmp
mul
in
xchg
or
dec
sbb
addr16
sti
int3
sbb
outsb
scas
mov
xor
dec
icebp
mov
push
insl
out
repnz
stos
popf
sbbl
ljmp
inc
cmp
inc
sbb
xchg
pop
out
sti
int
cmp
xchg
repz
ljmp
add
pusha
in
iret
aaa
ds
push
imul
mov
hlt
sarb
aaa
adc
sti
fcomi
and
adc
lods
mov
sarb
arpl
xchg
sahf
mov
sbb
add
xchg
mov
add
cmp
mov
sahf
mov
mov
lcall
fbld
push
call
sbb
cli
push
mov
push
dec
sbbl
ljmp
sub
in
movsb
aas
ljmp
xor
and
inc
enter
mov
jecxz
xchg
sub
sub
xchg
and
mov
push
iret
mov
daa
inc
js
mov
lods
jmp
inc
popa
stc
add
in
mov
stos
mov
jne
clc
push
sbb
jge
sub
popf
insb
inc
stos
inc
xor
cmc
push
and
xchg
inc
int
sahf
and
into
jge
inc
pop
mov
cmc
add
push
fldl
adc
dec
rcll
push
mov
cmpsb
mov
repz
sbb
fnstenv
ret
adc
sbb
leave
sub
lds
mov
push
arpl
push
jl
sbb
popa
cmpsl
fldl
call
mov
call
adc
ficompl
lods
das
repnz
push
adc
ficomps
popf
push
out
idiv
sbb
std
inc
jge
mov
sbb
inc
lock
add
ss
add
jno
mov
push
cmc
jnp
into
rorl
dec
mov
loope
mov
arpl
add
xchg
sub
icebp
lahf
or
icebp
push
push
sbb
cmc
inc
and
jmp
push
and
js
scas
fisubrs
dec
or
decl
xchg
shll
pusha
fisttpl
jnp
push
ljmp
int
popf
mov
inc
pop
out
mov
xor
loopne
lahf
stos
xchg
test
aam
int
dec
lret
rolb
pushf
inc
lods
js
mov
cmpb
stos
js
clc
cld
adc
je
xchg
sbb
xchg
xchg
mov
cmp
xor
ja
rcrl
js
or
icebp
sbb
cli
out
xchg
push
xor
scas
int3
pusha
cmp
sti
xor
nop
mov
mov
mov
or
push
adc
test
mov
mov
xor
jecxz
xor
je
add
and
frstor
and
cmpsb
ret
sub
dec
lret
out
sub
je
std
pusha
lcall
decb
lcall
jl
jno
adc
xor
es
test
dec
lods
and
push
adc
inc
push
scas
enter
mov
and
push
dec
nop
sub
xlat
sub
sti
fbld
js
xor
loopne
mov
loop
sbb
mov
sbb
mov
or
gs
sub
lock
push
sub
fmull
jne
lahf
mov
dec
pusha
in
adc
sbb
leave
adc
cmp
mov
popf
pop
adc
es
ja
sub
stos
mov
sbb
jae
inc
or
mov
mov
mov
sti
add
rcll
das
mov
out
adc
mov
fsts
loop
push
out
sbbb
cwtl
adcl
ja
cmp
in
dec
roll
sub
repz
xchg
je
xor
mov
pop
mov
cs
insb
mov
ret
xchg
mov
lahf
cmp
mov
popl
lods
insl
jmp
enter
enter
gs
mov
scas
test
js
jb
jno
pusha
add
adc
inc
mov
xlat
push
or
lock
and
clc
popf
aas
push
inc
mov
xchg
inc
and
pushf
js
decb
xor
dec
inc
inc
sti
clc
jb
iret
pop
in
sub
in
imul
add
mov
in
aas
ja
jg
lcall
or
pop
pop
cmp
fistpll
sub
outsb
inc
rep
fcmovnu
js
xor
mov
imul
cmp
sbb
in
mov
add
dec
adc
xchg
jmp
inc
popa
xchg
loop
in
jmp
filds
cmpsb
xor
cli
push
mov
jmp
sub
pusha
sbb
or
push
or
mov
mov
adc
rcl
adc
xor
or
sbb
ss
addr16
dec
pop
outsb
inc
pop
int3
dec
shlb
jp
pop
test
cmp
insl
das
out
inc
pushf
sub
xchg
hlt
push
inc
xchg
stos
or
jbe
mov
push
mov
mov
xchg
pop
xor
pop
clc
je
sbb
mov
pop
fptan
popa
sti
add
xor
inc
outsb
std
test
aas
outsb
adc
push
es
push
mov
cltd
jbe
dec
sti
popa
sbb
or
add
sbb
mov
mov
inc
push
mov
idivb
popa
inc
and
out
mov
scas
push
sub
xlat
arpl
loopne
cwtl
sub
mov
hlt
push
push
mov
cwtl
ds
outsb
outsl
in
insb
pop
mov
mov
cmp
xchg
and
sbb
sarl
inc
das
imul
push
xchg
pop
jp
test
aas
push
lds
stc
imul
data16
fsts
sub
add
fidivrl
mov
out
mov
adc
sbb
lahf
cmp
fdivl
outsl
sub
int3
stos
je,pt
mov
sbb
jns
nop
fs
imul
push
xor
xchg
popw
push
bnd
sub
add
loop
dec
pop
xchg
mov
dec
xor
movsb
mov
lahf
xchg
xchg
scas
stos
insb
mov
xlat
out
dec
sub
push
jae
or
jno
daa
mov
lahf
test
outsl
clc
shrl
sti
cld
iret
push
ret
jl
js
in
sub
ret
mov
je
cmp
mov
jno
outsb
pop
xchg
das
push
lcall
addl
emms
in
cmpsl
mov
shlb
mov
aaa
repz
int3
push
xchg
pop
mov
adc
fsubrl
les
or
std
lds
stos
mov
aam
jnp
in
mov
insl
loopne
xlat
cmp
mov
sbb
pop
mov
jb
repnz
mov
xor
jb
xchg
push
js
rcll
lahf
sti
cmp
cmpsl
xchg
or
int
sub
mov
into
pop
xchg
stos
or
stos
xor
lahf
mov
mov
loope
mov
dec
inc
nop
mov
aas
fisttpl
pop
dec
mov
fidivl
xchg
ret
adc
lods
and
movsl
push
xchg
fbld
jmp
dec
popf
xor
not
and
xor
xchg
sbb
xchg
rcr
dec
or
dec
push
fucomi
inc
xchg
push
sub
mov
jp
dec
push
imul
push
shl
xchg
xchg
call
jle
int3
adcb
dec
push
or
aad
jno
repz
andl
xor
daa
aam
add
shlb
pop
outsb
cwtl
daa
adc
lcall
nop
cltd
or
xor
mov
xchg
repz
stos
out
ret
adc
xor
enter
mov
flds
jno
mov
add
xlat
sbb
int
movsl
in
xor
sbb
cmp
pop
push
movb
or
sbb
xor
jns
sbb
ja
mov
sahf
cwtl
push
mov
les
jle
testb
sbb
cmp
or
xchg
adc
ret
in
fsubrs
dec
or
xchg
mov
clc
or
sarl
repnz
jb
int3
movsb
sub
or
cmp
sahf
jae
xor
std
jl
xchg
mov
pop
push
mov
lahf
mulb
add
sbb
mov
call
and
shlb
call
push
inc
mov
xchg
cmp
daa
stos
or
adcl
test
test
adc
sahf
sbb
or
jb
repz
pop
rol
test
loop
dec
lods
outsb
sbb
jp
mov
xor
jmp
out
imulb
add
sub
add
aaa
jo
dec
mov
out
or
pop
jo
inc
push
stos
sbb
cli
mov
pop
mulb
pop
push
inc
fisubs
or
popf
xlat
shlb
jb
mov
and
xchg
cmp
outsl
xor
lcall
xchg
inc
imul
lahf
clc
out
pop
pop
enter
sub
cmp
mov
or
jp
xorb
xchg
aad
pop
and
adc
or
push
dec
cmpsl
push
ja
iret
fsubrl
loopne
popa
sbb
mov
or
cmp
das
mov
or
addl
cwtl
mov
pop
dec
jmp
imul
mov
lahf
or
xchg
mov
jns
jnp
cld
pop
jge
mov
cld
pop
xchg
mul
push
dec
cmpl
outsb
adc
push
pusha
cwtl
fs
mov
mov
je
mov
fnstenv
ds
xor
shlb
fs
ds
pop
cmp
or
ds
popf
push
cmp
xchg
inc
repz
test
push
es
jno
mov
out
and
aad
add
xchg
rolb
jnp
dec
lods
cmpsb
cli
pop
inc
sarb
adc
loopne
pop
test
js
push
lea
xchg
test
lahf
xchg
fdivrs
and
outsb
mov
stos
jnp
sti
icebp
and
lods
jno
test
into
sub
pop
adc
xchg
xchg
pop
mov
cmp
cwtl
dec
push
adc
and
out
pop
add
fidivs
hlt
out
mov
xchg
mov
and
pop
push
loop
mov
shll
sbb
lret
sub
stc
testl
and
test
lock
rolb
mov
or
inc
lock
std
aas
out
dec
inc
loope
lds
mov
xchg
pop
mov
popa
mov
jp
add
dec
push
jmp
and
sbb
loopne
pop
pop
fnstenv
cmp
add
jo
adc
cmp
dec
jae
jmp
sbb
cmp
and
mov
cmp
movsb
mov
ret
sahf
adc
sbb
or
jmp
xor
movsb
rclb
jbe
add
mov
shlb
cmp
loopne
fst
or
fs
in
lods
cs
dec
xor
cmpsl
jb
push
pop
cs
sbb
mov
pop
repz
inc
shll
mov
and
stos
outsb
jmp
jp
lods
push
mov
notb
adc
xlat
andl
dec
mov
mov
fucomi
call
add
push
push
pop
adc
jle
das
fisubl
cld
mov
fisubs
xlat
mov
pop
cmp
mov
fcomps
cli
adc
jb
gs
inc
cmpsb
or
push
push
out
mov
clc
arpl
dec
popf
loope
cmp
sbb
jae
movsl
int
int
movsb
and
fmull
dec
enter
std
mov
int
icebp
sbb
and
pusha
js
enter
ret
or
pop
cmp
or
jo
xor
mov
and
xchg
push
repz
fnsave
adc
inc
adc
data16
push
cmc
xchg
mov
push
ljmp
mov
sarl
jle
push
sbb
les
sub
enter
sub
sub
pop
or
js
daa
xchg
and
mov
hlt
inc
push
mov
pop
idivb
xor
dec
decl
loop
mov
dec
cmpsl
jle
mov
mov
mov
adc
jmp
cld
push
mov
jne
push
jge
insl
pop
lret
rcll
repz
pop
pop
adc
mov
fwait
in
stos
dec
pop
adcb
leave
sub
int3
and
dec
xchg
in
sti
add
pop
repnz
fbstp
adc
mov
jg
idiv
xor
fmull
xor
ds
rolb
ret
xchg
cmp
push
pop
xor
jb
mov
push
add
movsl
and
into
adc
mov
and
addr16
sub
inc
enter
or
mov
inc
shrb
mov
sbb
dec
push
loop
jmp
ljmp
sbb
jne
dec
pop
jnp
insl
aaa
lods
and
cmpsb
add
mov
and
xchg
jb
into
sahf
rcrb
pslld
jnp
lcall
js
ret
dec
dec
xchg
adc
cld
cmp
cmpsb
cmp
daa
inc
popa
mov
ljmp
dec
xor
inc
icebp
rcrl
popa
pushf
cmpsl
or
sbb
fildl
xchg
loopne
out
mov
test
sbb
mov
push
dec
add
out
adc
push
jge
or
lahf
xor
pop
push
mov
push
and
jle
lock
xor
xchg
xchg
pushf
cmp
mov
push
lds
roll
mov
mov
daa
push
imul
gs
push
jbe
adc
negb
lret
inc
fnstsw
jne
lods
fildll
push
xchg
and
hlt
mov
adc
add
bt
sub
or
frstor
sub
outsl
push
lods
movsb
outsl
mov
mov
out
cmp
imul
mov
ljmp
push
lret
cmpb
jp
icebp
jns
dec
je
jmp
call
xor
xor
in
mov
dec
cmp
push
xchg
in
icebp
mov
mov
pop
mov
dec
mov
dec
test
fiaddl
fwait
stc
movsl
aad
test
subl
pop
push
inc
xchg
ret
cmpsb
test
lea
cmp
arpl
or
mov
inc
push
mov
aad
addr16
aad
sub
mov
push
out
fwait
mov
clc
or
mov
xchg
pop
adc
add
mov
dec
jo
repnz
push
subb
jmp
lods
imul
mov
jbe
sbb
fs
pop
stos
nop
sahf
sbb
jge
xchg
aas
sti
adc
xchg
sbb
out
or
push
addr16
and
xor
adc
mov
inc
mov
ret
inc
mov
jno
or
sti
or
mov
fdivs
push
nop
jno
daa
rcrb
dec
daa
cmpb
or
mov
xchg
loopne
pop
adc
loop
pop
mov
ret
rcr
daa
jl
jp
pop
sbb
sub
push
mov
popf
js
mov
inc
bound
cli
cmpsb
sbb
mov
mov
pop
push
test
dec
mov
jbe
out
cmp
pop
xlat
popf
mov
mov
stc
adc
int
std
mov
fisubl
lret
push
repz
fsub
jecxz
frstor
sbbl
lds
mov
mov
push
out
cmp
test
push
push
xchg
movsl
mov
mov
mov
and
pop
scas
xlat
add
jle
dec
add
mov
cs
mov
cltd
ss
jmp
add
ret
pop
sarl
sahf
or
pop
add
add
pop
clc
lods
mov
aas
mov
fstl
push
add
cwtl
cmp
and
jg
push
fdivrl
or
mov
sub
push
pop
xchg
jle
pop
jmp
lock
aad
sti
push
jns
push
je
loop
pusha
mov
gs
movsl
mov
sbb
loope
jns
mov
ja
mov
inc
aaa
mov
lret
cmp
push
push
or
fldl
xor
cmp
pop
inc
cmp
push
jecxz
ret
push
stc
repz
mov
jge
push
ret
shlb
cwtl
sub
subl
lock
jle
mov
and
mov
mov
pop
out
jmp
mov
test
sbb
push
adc
fimull
pop
mov
rorl
fwait
out
stos
add
in
or
repz
shl
daa
fdivrp
mov
fiadds
or
xchg
int
xlat
call
inc
push
mov
mov
jbe
sahf
imul
pushf
sub
scas
pop
hlt
xor
shll
cli
test
mov
mov
shr
jle
jecxz
inc
dec
fidivrs
adc
cmpsb
inc
adcl
in
ret
cmc
mov
mov
jnp
data16
test
std
push
cmp
sbb
dec
dec
fsubp
rcrb
inc
imul
clc
stc
jge
push
icebp
stos
add
inc
sbb
lds
out
cmpsl
pop
xchg
out
jp
push
xchg
lcall
arpl
rcl
stc
jb
int
movlps
adc
adc
rclb
aas
ds
pusha
pop
adc
mov
test
popf
xor
stos
push
pop
insl
das
lods
adc
or
push
push
hlt
test
cmp
mov
push
mov
and
fcomp
notl
gs
jmp
scas
lahf
add
dec
std
or
repz
mov
pushf
pop
sub
jbe
jecxz
mov
cwtl
pop
inc
push
lods
or
pop
add
jmp
sub
inc
in
or
fwait
and
pop
incl
jle
outsl
and
outsl
add
mov
imul
and
sbb
loop
mov
cmpsb
push
mov
mov
push
movsb
stos
push
or
inc
and
test
lahf
fwait
popf
adc
clc
mov
loop
sahf
outsb
xor
mov
fyl2xp1
sbb
mov
stos
mov
adc
inc
dec
rcll
pop
add
add
shr
push
jo
push
fwait
nop
sbb
test
sbb
pop
add
mov
xchg
xlat
mov
roll
test
jge
subl
data16
pop
inc
cmc
mov
jae
push
and
adc
outsb
sbb
adc
loop
jnp
jmp
mov
jg
add
mov
inc
mov
cmp
into
push
or
gs
jl
sbb
mov
jmp
movsb
and
jb
jmp
dec
test
push
pop
pop
outsb
iret
xchg
dec
andnps
shrb
lret
mov
pop
rcl
mov
shrl
in
mov
inc
jo
in
lahf
or
mov
movl
mov
dec
dec
xor
lds
fstpt
push
fdivrl
cmp
out
outsb
sbb
rorb
cmp
mov
icebp
inc
jl
ds
movsl
and
inc
out
mov
or
pop
stos
push
test
outsl
pop
adc
xor
inc
scas
dec
aam
gs
cltd
xchg
dec
xchg
sub
pop
int3
xchg
into
loope
add
rcrl
mov
stos
das
sbb
lea
xor
pop
pop
push
jb
push
cmpsw
int3
push
xchg
dec
repnz
dec
imul
cmpsb
loop
xlat
sub
mov
mov
mov
or
pop
loopne
sbb
popf
mov
mov
jecxz
xchg
mov
mov
lcall
movsb
pop
push
and
popf
and
push
pop
aas
jge
cltd
fldl
fistps
push
hlt
push
rcrl
filds
aad
jl
mov
test
pop
jle
pop
mov
jmp
mov
mov
je
adc
sbb
pop
mov
fisubs
mov
in
in
xchg
mov
or
lret
js
das
andb
xchg
push
fs
fnstsw
fsub
cmp
cmp
aam
pop
mov
add
cwtl
xchg
cmp
std
bound
push
xchg
xor
clc
es
mov
mov
or
notl
int3
xchg
pop
dec
in
mov
jbe
dec
mov
add
and
push
or
aad
sub
test
sub
outsb
or
pop
sbb
sbb
xlat
jo
repnz
imul
mov
inc
loop
popf
cli
add
shrl
shl
xor
pop
push
test
sbb
push
fwait
pop
dec
jae
mov
push
bound
ds
jb
aad
js
lcall
pop
mov
xchg
push
ljmp
sbb
loopne
xchg
jmp
in
ds
repnz
mov
mov
pop
jl
jo
lods
lret
dec
pop
mov
or
lret
hlt
inc
cmpsb
das
inc
inc
sbb
cmp
iret
test
xor
or
sbb
pop
xchg
test
push
mov
sbb
sbbl
stos
dec
mov
inc
cwtl
addr16
mov
sbb
pop
dec
aad
insl
push
xchg
xchg
pop
push
cs
dec
fcompl
sti
mov
rcrl
icebp
fxch
sbb
test
jmp
mov
arpl
xchg
mov
mov
test
sbb
movsb
sbb
cmp
push
lock
inc
cld
cmc
cmp
push
push
jmp
adc
je
mov
test
push
push
nop
lods
aas
dec
sbbl
leave
sbb
mov
mov
push
inc
jp
aam
xlat
in
je
xlat
loop
inc
in
fcoms
fsincos
xor
push
gs
push
and
cli
idivb
adc
xor
js
out
jno
jbe
push
popa
jmp
xchg
mov
or
fnstcw
push
mov
andl
fcoms
in
mov
sbb
mov
pop
outsb
push
jle
jl
mov
and
lock
push
aaa
cmpsl
inc
push
pop
hlt
xlat
fldenv
loope
push
fldt
lds
mov
cmp
ret
pop
sti
mov
jno
cmp
mov
mov
dec
rcrl
cmpsb
xlat
xchg
cli
repnz
frstor
dec
and
and
es
lock
sbb
movsl
popa
mov
xchg
fldl
push
adc
mov
and
cmp
xchg
push
xlat
inc
push
adc
and
fs
mov
or
mov
addb
dec
stc
daa
in
insb
inc
mov
xchg
into
cmp
mov
inc
sub
sbb
loopne
aas
aaa
dec
dec
xor
xor
imul
dec
fsubrl
push
xchg
sbb
xor
aam
enter
mov
lea
xchg
sub
dec
filds
aaa
push
cmp
jmp
test
mov
pop
adc
dec
inc
mov
rcrl
stos
cmp
xchg
xor
mov
outsl
jae
shr
or
xchg
pop
and
movsb
sahf
push
stos
dec
add
mov
pop
mov
frstor
dec
ficompl
adc
outsl
or
mov
dec
xchg
mov
sbbb
rorl
cmp
cmp
jbe
sarl
adcl
and
add
inc
mov
shrl
cltd
flds
dec
pop
mov
mov
testl
leave
cmpsl
push
int3
add
xor
sbb
sahf
ficomps
and
mov
mov
cmp
lret
mov
fmul
dec
and
jecxz
pop
test
mov
clc
nop
fs
lret
dec
inc
fdivl
repz
repnz
insl
xchg
in
mov
jle
lahf
sbb
and
or
jge
inc
dec
test
xlat
jp
or
sbb
sbb
test
cmp
and
outsb
cmp
add
adc
pop
sbb
dec
sub
mov
or
xchg
jbe
dec
xchg
cmp
mov
loope
stos
sub
daa
adc
sub
mov
sub
test
push
sub
mov
add
pop
ds
pop
std
add
mov
rclb
or
icebp
inc
pop
inc
pop
sahf
jnp
cs
jo,pt
lods
daa
out
and
test
push
sbb
push
daa
xchg
test
mov
xchg
or
jb
push
mov
mov
pop
cmp
lock
adc
jns
in
aam
jae
and
jns
jl
in
sbb
jmp
shrl
les
dec
shll
test
sbb
lods
push
adcb
lea
mov
pop
outsb
jmp
ret
pop
js
adc
inc
xchg
mov
mov
pop
cmc
fwait
sbb
xchg
or
xchg
mov
pushf
dec
add
xor
mov
movsb
lods
sbb
aas
mov
pop
sbb
hlt
lods
push
inc
pop
mov
add
and
lds
jae
sbb
addr16
push
adc
jae
fwait
cmp
pushf
cli
jns
cmpb
call
jecxz
inc
sub
push
inc
dec
jg
roll
push
jmp
inc
or
mov
sub
cltd
call
push
scas
xor
add
adc
pop
and
xchg
adc
push
sbbb
pop
and
sti
dec
sti
cmp
xor
stos
mov
icebp
mov
out
or
out
gs
lcall
rolb
add
xor
xchg
xchg
fiaddl
mov
dec
push
xchg
movsl
arpl
mov
lea
xor
je
test
xchg
mov
into
xlat
hlt
addl
add
pop
jae
gs
imul
mov
sbb
lods
mov
pop
sub
fwait
ret
fimuls
ss
dec
scas
cmpsl
dec
push
das
or
xor
popa
div
jg
xchg
add
push
jbe
lea
sbb
dec
rclb
xchg
xchg
mov
inc
shl
mov
add
sub
incb
mov
adc
in
and
xor
data16
ds
mov
mov
mov
lahf
push
and
push
sub
aas
push
jecxz
fnstcw
adcl
mov
int
adc
adc
cltd
push
cld
icebp
sbb
leave
jae
pop
dec
pop
aas
cld
cltd
in
fs
into
xchg
out
mov
rolb
cmp
ret
int
pop
jb
fdivrl
hlt
js
and
and
repnz
bnd
sbb
imul
or
insl
bound
sbbb
sub
mov
in
xchg
fists
xchg
mov
loopew
in
or
sbb
mov
out
jp
jle
mov
mov
pop
mov
mov
in
shll
xchg
sti
adc
pusha
and
ja
aas
mov
xor
inc
sbbl
pop
pop
xchg
call
jmp
stos
push
daa
bound
pushf
icebp
aad
sbbl
mov
lods
shll
cltd
aad
jb
icebp
fstps
dec
addr16
hlt
pop
xor
add
imul
jge
daa
push
cmp
mov
fldt
fstl
inc
sbb
lea
out
jge
popa
pop
test
mov
push
sub
and
or
push
lods
adc
pop
fsub
cmp
inc
pushf
loope
push
pop
jbe
and
mov
pop
shll
xchg
xchg
cmp
sbb
lcall
pop
pop
cmp
movsb
aaa
sub
lods
mov
stos
je
mov
fisubrl
test
bound
inc
cmp
shrb
lahf
cs
stos
inc
mov
mov
popf
dec
pushf
add
or
imul
lahf
dec
rorb
mov
dec
push
mov
clc
jns
adc
cmp
lahf
or
fildll
jge
movsb
jg
test
mov
scas
xchg
sub
mov
mov
cwtl
fadds
adc
xchg
scas
pushf
not
jbe
and
add
xchg
and
sub
ret
icebp
lret
bnd
lret
aad
add
mov
adc
in
mov
cwtl
test
sbb
push
fldt
cmp
adc
data16
sbb
inc
mov
in
mov
xor
pop
sahf
jp
popl
fidivl
repnz
test
mov
call
nop
xchg
ret
ds
pusha
xchg
inc
and
xor
dec
mov
inc
inc
jae
out
dec
in
mov
dec
pusha
outsb
lahf
cld
jbe
mov
fwait
call
and
inc
push
scas
pop
inc
or
aad
dec
mov
aaa
mov
sub
sbb
call
sbb
mov
cmp
add
jp
pop
mov
call
gs
in
outsl
lahf
jno
mov
repnz
movsl
or
jmp
cmc
ret
mov
in
outsl
int
xchg
scas
clc
out
inc
push
inc
and
ljmp
lds
push
pop
or
push
and
adcb
scas
es
sahf
cld
pop
cmpsb
jmp
insl
dec
dec
cli
mov
and
hlt
dec
push
push
adc
daa
sub
adc
xchg
adcb
je
pop
imul
call
pop
incb
push
push
xor
addr16
ss
xchg
rol
lcall
fcomp
je
and
xchg
inc
xchg
cmpl
jmp
rcl
jne
xor
in
sbb
mov
mov
cmp
jmp
add
pop
mov
sbb
jle
fsubrs
dec
outsl
aaa
mov
or
add
cmc
dec
mov
lds
stc
dec
xor
movsl
add
out
lahf
les
lcall
cmp
adc
outsb
jns
movsl
mov
mov
add
sub
or
pushf
jge
repnz
int
or
sbb
xor
and
or
dec
lock
cmp
roll
divb
or
mov
sub
aaa
in
pop
xor
push
imulb
mov
out
xlat
push
push
adc
dec
mov
movsb
pusha
dec
flds
add
and
das
adc
popa
mov
shlb
ficomps
jb
sbb
mov
out
jp
rorl
jns
subl
xlat
or
xchg
xlat
dec
dec
dec
sbbl
mov
mov
stos
xor
push
jae
shll
push
inc
andb
push
mov
fldl
ror
inc
mov
dec
cmpsb
jne
pop
cmp
dec
clc
dec
in
pushf
aam
subl
xchg
and
jbe
add
ja
popa
inc
add
jmp
add
or
or
mov
sub
ljmp
test
repz
mov
out
mov
leave
insl
andps
jecxz
imulb
add
pushf
sbb
add
pop
or
sti
cmp
das
mov
ljmp
imul
movsl
subl
inc
fnstsw
out
pop
fmul
in
xor
loopne
mov
lret
push
add
retw
inc
sub
daa
xor
mov
xor
out
aad
leave
sbb
add
adc
faddl
testl
ds
xchg
xchg
pop
es
pop
sbb
addl
inc
loop
je
aas
inc
ror
fisubs
pop
add
lds
mov
and
aam
cmpsb
mov
inc
sti
cmp
mov
jne
outsl
inc
je
scas
stc
lret
dec
shrb
dec
sbb
or
in
ret
fiadds
xchg
mov
and
pop
jg
mov
shlb
mov
jle
shr
shrl
pushf
xor
lods
sbb
das
push
mov
addr16
dec
xchg
xor
call
std
mov
scas
in
sahf
cmc
inc
jl
movsb
sahf
mov
in
jecxz
push
dec
sbb
xlat
arpl
or
adc
das
mov
lods
bound
add
add
jne
pushf
movsl
int3
mov
outsl
pop
sbb
insl
mov
sbb
or
inc
cmpsb
and
mov
add
ds
es
xchg
cmpsb
lret
sbb
pop
insl
std
orl
mov
xchg
fldcw
jo
push
loope
pushf
outsl
xor
arpl
xor
sbb
cmc
pop
fldl
and
in
mov
scas
pop
fstp
clc
sub
sbb
cmpsl
fstpl
cmp
in
test
xlat
out
or
pop
scas
cmp
loope
jo
jg
add
jle
ja
testl
pop
mov
mov
or
dec
in
test
sbb
movsl
cld
jo
cli
inc
dec
loop
pop
out
lea
inc
insl
daa
fmull
test
iret
std
les
lods
xchg
mov
mov
sub
cmp
cmpsl
sarb
inc
jno
fnstenv
xchg
jbe
dec
xchg
addr16
mov
add
pop
idivb
insb
mov
mov
fldt
js
rorl
pop
adcb
insb
jbe
mov
jnp
in
pmuludq
xlat
fidivl
addr16
and
inc
and
push
add
sub
cwtl
push
neg
push
jg
pop
arpl
push
repnz
ds
and
mov
xor
lds
jg
mov
outsb
adc
repnz
lds
insb
popf
pop
test
pop
xchg
clc
push
push
inc
call
mov
and
xchg
inc
xchg
mov
sbb
mov
dec
dec
shlb
ljmp
and
fs
jp
dec
ja
adc
call
push
rcrl
ja
add
fisubrl
add
sarl
cld
adc
xor
call
or
rorl
mov
jae
rep
pop
std
rorb
adc
inc
sub
cmp
xchg
push
mov
adc
das
xchg
and
lret
lds
in
sti
cwtl
lods
mov
push
sbb
mov
and
leave
ret
ljmp
xchg
dec
iret
mov
fidivl
push
xchg
xchg
fnstsw
fiaddl
pop
es
jbe
arpl
and
xchg
sub
sub
mov
stos
sti
call
nop
pop
sub
add
cmc
mov
adc
jae
test
xchg
jmp
scas
stos
adc
das
jge
mov
stos
add
jle
inc
ss
lods
in
adcb
gs
ja
mov
popf
jbe
jo
dec
mov
fidivrs
dec
leave
jb
call
mov
push
and
push
and
repz
jg
sub
mov
dec
add
outsl
js
decb
notl
sub
mov
push
jo
cmp
pop
ret
xchg
xor
mov
sub
adc
in
pop
xchg
sub
inc
test
daa
pop
cmp
lock
adc
das
sbb
test
pusha
pop
mov
fistpl
xchg
std
arpl
mov
mov
adc
jb
imul
out
lds
cmpsb
mov
pushw
arpl
cltd
addr16
mov
dec
int3
fcomi
and
mov
or
jle
sub
mov
in
or
inc
aam
jmp
testb
xor
and
and
adcb
mov
or
mov
lret
and
cwtl
jo
loop
daa
adc
rolb
mov
insl
cltd
rcrb
adc
xor
outsb
sbb
jmp
dec
jmp
daa
pop
adc
push
mov
movsb
xchg
jne
xorl
popa
lods
mov
dec
and
rolb
std
pop
insb
mov
lcall
fldt
mov
mov
fadd
loop
add
movsb
or
orb
cltd
aad
jno
dec
daa
in
push
test
push
adc
adc
xchg
or
pop
jp
sarl
hlt
xchg
lcall
mov
movsl
mov
loopne
add
aas
pusha
mov
jo
inc
mov
adc
bound
test
dec
or
jg
inc
iret
lret
inc
call
cmp
jno
xlat
out
mov
inc
mov
loope
cmp
xchg
mov
adc
and
loopne
add
jg
mov
mov
pop
jl
or
pmaxsw
rclb
jl
mov
lcall
iret
fstp
enter
jmp
into
push
jns
loope
cld
cmpsb
mov
rsqrtps
out
adc
cmp
mov
ret
xchg
out
mul
mov
fiaddl
push
mov
lret
int
mov
fsubrs
xor
out
mov
dec
popa
repnz
aam
xchg
jg
add
push
stc
iret
movsl
insl
cltd
add
lods
leave
repnz
mov
or
mov
scas
arpl
jle
ret
jmp
les
inc
and
xlat
mov
and
jae
dec
lods
int
mov
mov
add
push
or
clc
and
xchg
mov
std
push
xchg
jge
mov
ret
or
into
fcomps
in
fdivs
mov
xchg
out
add
jmp
cmp
in
movsl
jl
dec
lods
pop
sub
add
xchg
lods
rclb
lcall
push
stc
test
imul
in
sub
test
mov
ljmp
jnp
inc
push
cs
jnp
inc
adc
pop
aas
xchg
cmp
or
mov
out
stos
or
jle
mov
pop
fwait
cmp
push
sub
mov
cmpsb
scas
ljmp
cmp
test
ror
lds
or
mov
loop
pop
cmpsb
daa
mov
push
lret
cmp
xchg
xor
cmpb
test
mov
fadds
fistl
sbb
pop
mov
mov
jns
fmull
cmp
sub
movsb
xchg
fisubrl
arpl
aad
mov
and
adc
cld
jmp
shrd
test
pop
pusha
stos
adc
rolb
dec
fstps
in
sar
push
jae
pop
stos
pop
sub
mov
pop
sbb
test
arpl
decl
sarb
cld
test
lahf
xor
dec
imul
stc
push
jo
cmp
add
mov
push
test
inc
dec
icebp
out
movsl
jo
xchg
hlt
pop
xchg
mov
icebp
add
cli
sub
gs
inc
insl
jne
enter
lcall
insl
sub
add
ret
shrl
add
push
mov
mov
sub
pop
and
call
add
es
cli
adc
jge
xor
jne
mov
mov
add
xlat
fstl
icebp
jnp
mov
jg
outsl
jmp
pop
and
sub
push
or
sbb
fists
lahf
mov
dec
mov
loope
sahf
divl
imul
imul
leave
mov
test
mov
icebp
dec
add
test
jg
lods
xor
loopne
bound
dec
mov
xor
fimuls
dec
pop
xor
mov
or
outsb
mov
mov
dec
dec
cmc
jb
jmp
insl
jle
adc
adc
xchg
mov
mov
push
bound
leave
test
sbb
dec
mov
xchg
cltd
fs
xchg
pop
test
jle
and
inc
adc
in
insb
mov
mov
mov
incb
sbbl
jl
fisubl
rclb
push
dec
sbb
mov
lods
mov
cmp
or
xchg
iret
cmc
clc
mov
push
inc
dec
push
push
jg
sbb
sti
dec
pop
in
out
jns
mov
or
add
std
outsb
xchg
mov
xchg
aaa
icebp
jns
push
insl
sbb
js
sub
loopne
add
stos
pop
xchg
arpl
test
push
add
lock
jecxz
leave
jne
adc
cwtl
dec
inc
insb
out
xchg
fidivs
push
enter
and
lods
cmpsl
cmp
sub
and
out
xchg
pop
into
pop
out
push
rcr
mov
cld
fbld
out
out
repz
cmp
dec
add
test
sbb
daa
in
outsl
ret
mov
pop
shll
loopne
dec
shl
repz
test
xchg
jmp
or
pop
or
repz
sub
andl
adcb
mov
fimull
rcl
mov
or
mov
cmpsb
loopne
rol
sbb
imul
ret
sbb
xchg
scas
ljmp
jne
cmpsl
sub
pop
sti
jns
adc
mov
push
aam
jne
sahf
dec
push
push
iret
pushf
xor
scas
push
jo
xchg
and
inc
push
lret
outsb
sub
xor
push
gs
imul
inc
fsincos
scas
push
sahf
mov
push
adc
mov
cmp
nop
jmp
push
pop
cmp
push
loop
inc
shll
mov
hlt
xchg
cmpsb
into
gs
pop
mov
subl
push
dec
enter
inc
or
jns
push
sbbl
sbb
fs
iret
push
mov
xchg
sub
addb
into
iret
cmc
cwtl
in
cmp
cwtl
hlt
dec
mov
push
xchg
push
daa
ret
js
xchg
andb
cltd
rorb
dec
add
out
jg
decl
js
adc
stos
jo
shlb
mov
mov
clc
daa
movsl
jmp
ljmp
je
and
daa
sbb
ret
cs
loope
not
add
jle
lods
shl
mov
jmp
add
mov
and
aas
in
int3
dec
cwtl
and
in
xor
and
jmp
jno
xchg
jp
jo
push
aam
jae
cmp
outsb
push
js
mov
xchg
mov
xor
xor
outsb
jle
idivl
insl
and
das
or
push
pop
out
nop
xor
out
xchg
insb
and
rorb
nop
xor
insl
scas
mov
inc
je
sub
and
adc
mov
sbb
cmp
cmp
xchg
mov
pop
mov
icebp
or
repnz
stos
scas
xlat
out
mov
ret
lret
mov
pop
pop
daa
jne
in
outsl
cmp
add
add
mov
es
xchg
repnz
mov
daa
push
or
push
pop
lahf
adc
add
movsb
ret
in
lret
jns
dec
push
cmp
push
cmc
lds
mov
dec
mov
inc
mov
sti
loope
cmp
fs
xor
out
jno
sub
movb
scas
inc
and
mov
testb
cli
inc
xor
or
mov
inc
nop
cmpsl
std
enter
cld
sbb
clc
daa
movl
and
push
push
addr16
data16
outsb
mov
scas
sarl
cmpl
in
pop
adc
repz
mov
cltd
and
out
add
stos
int3
pushf
push
cmp
js
je
imul
or
cmp
bound
hlt
popa
sar
das
nop
icebp
mov
mov
rcrl
fistpll
mov
cmp
sub
mov
push
sub
cmp
pop
lcall
xor
or
fstpl
xchg
xor
add
aad
dec
cmc
fstpt
insb
add
mov
insl
jmp
incb
add
sub
scas
js
adc
fwait
hlt
je
mov
jns
cld
inc
fyl2xp1
mov
daa
clc
notl
adc
dec
push
jle
mov
popf
pushf
jae
movsl
xchg
pushf
jo
cmp
xchg
adc
fisubl
push
push
xchg
fstps
pop
insl
call
lods
or
aaa
popl
jp
mov
lea
add
ja
adc
icebp
gs
out
xchg
sub
mov
cmp
or
std
pop
dec
cmp
pop
nop
push
cmpsl
jle
repz
movsb
xchg
or
push
mov
in
fimuls
lods
and
aad
sub
mov
rclb
and
jg
movsl
iret
sbb
adc
fwait
int3
sub
arpl
enter
mov
sbbl
sbb
add
and
xchg
adc
shlb
mov
or
inc
push
popa
xor
popf
or
in
mull
pop
xchg
jg
push
push
mov
popf
xchg
xchg
xchg
xchg
or
hlt
insl
out
popa
sbb
xor
jg
dec
mov
jae
imul
cld
xor
push
mov
xor
xor
cwtl
repnz
push
repnz
dec
in
and
and
push
addr16
adc
cmp
and
inc
jo
lret
hlt
sub
in
add
xor
and
push
ret
leave
adc
push
and
out
cmp
sahf
or
cmp
or
or
iret
pop
cmpsl
cmp
mov
cwtl
cmp
jl
push
push
movsb
inc
cmp
mov
sti
dec
mov
shrd
pop
repz
sub
xchg
cwtl
fisubl
es
std
xor
lods
fisttpll
ret
hlt
fwait
xor
dec
fstpl
movsb
arpl
rcl
clc
fidivrl
aas
sub
xchg
inc
leave
mov
roll
push
repnz
movsl
add
mov
call
pop
call
lea
or
inc
xor
or
dec
mov
insb
inc
push
mov
in
int3
mov
callw
xor
jno
imul
hlt
xor
jle
add
aad
dec
push
jno
hlt
rolb
adc
test
popa
ljmp
test
and
mov
mov
xlat
out
sub
xchg
stos
xchg
test
pop
adc
mov
outsl
pop
popa
imul
push
push
xabort
or
push
adc
rorl
insl
cmp
pop
pop
in
dec
push
add
cwtl
pop
cs
loop
sub
ret
xor
cltd
daa
enter
aam
loop
xchg
mov
rorb
xchg
hlt
xlat
shll
outsl
setne
sub
adc
jecxz
das
add
pop
cmp
add
push
cmp
inc
mov
pop
scas
outsl
movb
or
rcl
loope
stos
lcall
int
xchg
aam
ljmp
mov
insl
cli
dec
jae
add
loope
ljmp
cwtl
and
cltd
inc
pop
mov
arpl
cmp
int3
mov
sub
or
jge
popf
rolb
pop
sub
xchg
fldcw
stos
mov
push
fcmove
lret
mov
mov
pop
xchg
push
jmp
xchg
xchg
and
fists
inc
add
jns
jl
sbb
or
shl
adc
xchg
xchg
jb
or
cmp
cltd
loopne
pop
pusha
cmpb
mov
cmpsl
add
addr16
gs
add
je
fnsave
sbb
es
ret
cmp
add
jne
nop
pop
ds
leave
ljmp
ret
out
mov
popf
adc
xor
test
hlt
sub
sub
add
sti
adc
sbb
call
scas
mov
and
nop
add
add
mov
mov
pop
jecxz
sub
imul
jno
fwait
mov
and
imul
push
mov
xor
cwtl
cli
add
or
lock
imul
sbb
lods
pop
xchg
xchg
int3
jp
xchg
loop
and
mov
gs
xlat
ret
popa
add
mov
out
add
ret
sub
mov
mov
mov
push
mov
xchg
test
rclb
mov
fcomps
call
or
js
and
jo
add
popf
call
bound
ljmp
adc
scas
popa
add
fldcw
cltd
fsubrl
dec
ret
push
cmc
inc
fmull
sub
add
jno
sub
lods
in
fsubl
int
sub
pop
or
roll
xchg
and
mov
repz
rcll
add
repnz
popf
aaa
or
shlb
mov
dec
cmp
and
fisubrs
cs
push
or
negl
testl
aas
or
stos
cmp
pop
pop
lea
adc
pop
and
jb
aas
jae
xor
mov
xchg
jno
js
cmp
in
mov
pushf
sbb
test
std
fs
dec
xchg
dec
inc
pop
shr
aad
negl
leave
adc
pop
xor
or
inc
mov
stos
cmp
xor
insb
add
je
popf
mov
iret
pop
xchg
jp
iret
push
mov
addr16
gs
hlt
push
iret
cld
lret
mov
inc
mov
scas
mov
fs
aam
stos
insb
fdivl
mov
in
xchg
insb
pop
int3
lds
inc
xchg
lock
adc
outsl
pop
cltd
dec
test
andl
mov
sbb
inc
push
mov
test
sub
insb
popa
in
addr16
dec
cwtl
nop
mov
dec
pop
outsb
addr16
aam
adc
and
jmp
add
jle
ret
pop
mov
call
fisubs
std
push
and
xor
ljmp
popf
mov
inc
jbe
pop
mov
int
dec
and
call
inc
loopne
cmp
in
sbb
fsubrs
popf
jge
or
adc
in
call
sub
mov
cmp
and
sub
cmp
push
push
mov
jge
mov
repnz
and
adc
lcall
push
sub
add
lcall
xchg
gs
sub
cmpsb
dec
int
xchg
xor
fidivrs
adc
inc
push
xor
xor
adc
jge
dec
in
loopne
aaa
cwtl
jnp
repz
clc
jmp
mov
int
push
add
push
movaps
jg
adc
movsl
mov
enter
push
arpl
xor
cltd
mul
aas
xchg
std
xchg
add
enter
adc
ficompl
push
iret
adc
add
inc
sti
mov
pop
or
std
push
aaa
test
pop
and
pop
insb
pop
add
adc
mov
lods
and
push
mov
mov
mov
cmp
and
outsl
push
icebp
pop
scas
cmp
pop
lds
shlb
mov
scas
inc
test
jo
push
shrl
testl
mov
adc
push
pop
inc
push
lds
pushf
or
nop
mov
add
adc
int3
repnz
inc
mull
fisttpl
sahf
stc
xchg
es
arpl
jo
push
mov
and
dec
jnp
push
pop
hlt
stc
sahf
push
inc
push
roll
shrb
pop
or
push
mov
sbb
insl
push
fnstenv
mov
inc
arpl
test
push
iret
mov
cmp
std
and
sub
mov
js
jl
pop
sbb
dec
mov
sub
mov
cli
sbb
xchg
cld
sub
and
sub
cwtl
push
mov
jp
pop
cmpsb
xor
pop
das
mov
push
pop
sbb
clc
gs
mov
mov
in
jbe
scas
push
push
jecxz
pusha
push
mov
aam
push
jne
and
pop
ja
lods
jcxz
and
and
mov
add
push
inc
addb
jo
jbe
sbb
pop
cmc
or
xor
repnz
loop
push
fdivr
loope
sub
mov
fnstsw
scas
dec
fldenv
cmp
iret
or
push
pop
jno
push
push
pop
loopne
add
js
mov
push
mov
stos
mov
mov
popa
rcrb
movsb
jmp
add
insb
xchg
int3
in
andl
jl
add
jae
push
or
enter
fnstsw
mov
test
mov
jecxz
mov
iret
xor
mov
sbb
jmp
scas
lods
cmp
cld
popa
xor
adc
push
mov
das
add
mov
aad
call
add
jb
test
add
push
mov
mov
sub
mov
xchg
loopne
les
push
ljmp
shll
add
pusha
mov
inc
xchg
aad
in
mov
test
lea
fsubs
iret
popa
cmp
js
daa
call
repnz
aaa
add
inc
test
sbb
push
sbbb
dec
push
insl
mov
xorl
pop
or
shl
mov
mov
fiaddl
sti
mov
mov
in
jecxz
xchg
cmp
fucom
inc
push
js
outsl
dec
lret
jecxz
pop
mov
div
push
out
popf
enter
xor
fildl
push
dec
xlat
stos
xchg
mov
outsl
iret
mov
xchg
cmp
mov
xor
popa
xchg
lret
dec
sbb
or
dec
rclb
push
lgs
sahf
das
xchg
mov
push
and
popf
adc
xchg
daa
rcll
sbb
fld
stos
jp
pusha
test
dec
or
fs
in
lds
cmp
adc
cmp
inc
popf
fisttps
add
fcoms
stc
or
or
pop
push
sbb
test
test
arpl
sub
dec
pop
repz
es
xchg
popl
aas
es
pop
rcrl
dec
ja
sub
fisubl
or
add
adc
aas
out
cmp
xor
lret
loope
cmp
pop
pop
and
push
pop
js
mov
ret
mov
shll
mov
iret
mov
test
das
pop
inc
divb
xor
adc
cmp
dec
adc
hlt
push
icebp
or
mov
xor
enter
stc
mov
xor
das
cld
push
mov
rcr
add
xchg
jno
jae
scas
cmpb
in
xchg
inc
pop
pop
std
mov
mov
subb
jl
stos
leave
sub
xchg
mov
int3
xor
pop
or
daa
mov
out
xlat
cmp
in
mov
xor
pusha
and
add
cmpsb
bound
ret
jb
xchg
andb
jp
fucomip
fs
push
xor
mov
ja
sub
aad
xchg
aas
scas
imul
cmp
loope
pop
out
xor
shl
insl
mov
jp
scas
add
sub
push
fistpl
jnp
enter
mov
test
adc
sahf
ljmp
sti
fwait
iret
call
and
adc
into
dec
out
call
sahf
xor
push
cli
pop
mov
repnz
xchg
pop
and
lcall
insb
mov
ret
int
sbb
mov
pop
push
cmpsl
shll
shll
mov
xchg
jno
daa
enter
addr16
outsb
push
push
sub
adc
sbbl
iret
pop
and
out
jae
in
rcrl
mov
lret
jbe
pop
cmp
adc
sbb
test
out
mov
fildll
mov
or
add
xor
mov
iret
inc
dec
sbb
mov
fwait
jle
arpl
cmp
testb
pop
pop
and
adc
xlat
pop
out
xchg
sub
sbb
dec
mov
mov
dec
ret
int3
dec
pop
inc
sbb
loopne
jo
add
lods
dec
adc
lods
mov
mov
icebp
xchg
mov
pop
mov
lea
mov
dec
xchg
gs
in
js
mov
push
cmpsb
scas
shll
inc
cmp
sbbl
nopl
lds
outsb
loope
loopne
bswap
sub
sti
loopne
mov
mov
arpl
gs
sti
add
mov
sub
nop
repz
mov
mov
jmp
dec
sbb
xrelease
sbb
lret
pop
push
push
rcr
rolb
cmp
into
xchg
fsubs
imull
sbb
xor
movsb
orb
dec
jns
cmp
lcall
fld
xor
xor
inc
mov
test
mov
ffree
and
xchg
insb
or
lds
jns
mov
dec
out
sti
or
inc
jl
sbb
add
pop
pop
cmc
add
popf
xlat
scas
lds
dec
and
pop
inc
mov
lea
jle
cmp
adc
or
ja
ja
aas
jne
ret
xchg
sbb
gs
dec
pop
cwtl
jnp
adc
sahf
cmpsb
inc
aaa
enter
cmpsb
push
test
sub
push
scas
inc
mov
push
test
out
jl
cmp
adc
shl
ficomps
add
int
mov
gs
in
adc
jp
adc
sbb
mov
sbb
sbb
bound
and
sub
inc
mov
adc
dec
cmp
xchg
ret
and
or
dec
add
or
mov
addr16
push
xor
bound
xchg
inc
xchg
xchg
cli
dec
xor
add
cwtl
pop
insb
mov
das
sbbb
adc
cmp
fiaddl
mov
enter
dec
xor
pop
mov
popa
test
sti
and
push
mov
cmpsb
outsl
lea
jp
inc
je
mov
pop
nop
andb
dec
cld
and
mov
inc
dec
fs
mov
js
pop
icebp
sub
sub
push
cmp
adc
lcall
push
addb
mov
sbb
push
in
sbb
mov
cmpsl
sub
mov
mov
addr16
xor
sub
dec
cld
add
xchg
popa
xchg
inc
pop
dec
inc
adc
dec
jmp
adc
xchg
sarl
cmpsl
push
fisttpl
mov
xchg
imul
cmp
jno
loopne
inc
push
pop
push
sbb
pop
inc
jo
stos
mov
rep
mov
sub
icebp
out
lret
enter
lret
inc
frstor
jnp
xor
dec
loopne
cs
insb
pop
lds
xor
outsl
pop
xlat
xchg
sbb
push
stc
jle
pop
es
test
repnz
ljmp
iret
and
call
xor
sti
orl
jp
loop
ss
dec
ja
in
mov
aam
fildll
jae
cmpsl
nop
addr16
enter
and
pop
icebp
xchg
shl
jbe
sbb
aam
mov
imul
xor
pushw
xor
stos
nop
testl
leave
je
stos
xor
jmp
sbb
push
sbb
imul
loop
xor
out
in
jno
or
je
jnp
pop
push
aam
je
pop
out
lcall
dec
scas
mov
xchg
mov
lods
out
mov
dec
push
lods
les
ficomps
test
pusha
jecxz
fimuls
cmp
movsb
imul
mov
xor
adc
add
and
pusha
push
out
xorb
push
in
stc
jg,pn
lds
jmp
sti
dec
lock
mov
andb
lret
test
xchg
xchg
ficoml
sub
clc
bound
jg
leave
int3
cltd
jge
dec
sub
pusha
add
cli
jecxz
loope
or
mov
cs
js
popf
bnd
push
inc
rcll
jae
cld
push
push
pop
insb
pop
in
sub
pop
and
je
pop
mov
or
out
sub
push
out
stc
gs
pop
imul
lcall
pop
inc
pop
mov
inc
jno
incb
arpl
outsb
add
ret
repz
xchg
stos
mov
inc
test
inc
jnp
push
dec
cld
xchg
iretw
inc
pop
mov
jae
pop
sarb
or
stc
inc
stos
aam
loope
pop
adc
lods
jb
mov
or
push
nop
sbb
in
lcall
push
test
sar
xchg
pop
fimuls
int3
mov
out
jmp
jg
pushf
cld
insb
mov
push
jbe
ficompl
jle
lods
rolb
xor
lahf
fbstp
inc
pop
pop
xchg
popa
dec
pop
push
and
fimull
enter
add
pop
xchg
ficoml
xchg
orb
xchg
jecxz
jle
push
or
pop
out
les
mov
ss
pushf
fstps
xchg
jg
test
orl
push
lods
les
push
fisubs
add
js
js
xor
mov
rolb
push
insb
mov
push
sahf
adc
xor
push
scas
loop
insl
jo
cs
call
stos
mov
and
ret
popf
xchg
sub
pusha
sbb
xlat
lret
out
pop
fstpt
in
mov
dec
rclb
adc
sub
inc
pop
pop
xor
loop
mov
cmpsb
mov
adc
jbe
or
mov
mov
add
sub
add
pop
jmp
cwtl
stos
cltd
jo
and
xchg
popf
jecxz
daa
and
and
aad
bound
dec
enter
cmpsb
jg
xchg
inc
sub
ljmp
or
sbb
out
cwtl
ss
pop
xchg
xor
adc
loopne
arpl
xchg
or
js
sbbl
inc
and
mov
out
decl
mov
lds
xor
adc
aad
inc
xor
inc
mov
lcall
sub
scas
loop
adc
pop
cmpsb
inc
and
jl
inc
jl
dec
cmp
cmp
inc
mov
sbb
aas
movsl
les
sarb
inc
fcompl
lret
mov
sti
jae
or
inc
fwait
das
mov
stos
xchg
jge
idivl
nop
bound
sub
inc
push
stos
mov
pop
cli
xchg
adc
outsb
je
int3
jg
add
sub
and
repz
dec
shlb
cmp
sub
fimull
jno
adc
mov
cmp
push
stc
or
push
sbbl
push
inc
cmp
sbb
jo
sub
jae
cmpsb
dec
mov
xchg
and
sbb
jns
xchg
outsl
sub
xor
jnp
jne
xchg
test
idivl
incb
in
adc
ljmp
push
out
pop
jbe
add
jnp
rorl
adc
xchg
push
ret
inc
and
push
mov
clc
out
dec
pop
add
xchg
jge
push
inc
add
cmp
fldl
ret
or
jo
push
lret
adc
xchg
popa
aaa
cwtl
mov
sub
lock
fs
enter
mov
mov
jae
imul
cs
lock
mov
pushf
int
push
fcom
dec
xor
push
inc
nop
push
popf
clc
mov
rclb
push
pop
rcrl
idivb
push
enter
inc
or
xlat
push
or
dec
dec
es
mov
int3
or
rorl
mov
inc
cmpl
fldenv
and
icebp
mov
or
jg,pn
push
jb
inc
rcrl
out
leave
std
jp
or
mov
mov
mov
mov
stos
dec
ficomps
dec
repz
fdivrp
mov
and
dec
mov
pop
popf
pop
lret
out
aas
pop
cmp
dec
xor
fsts
repnz
adc
ficomps
les
lret
pop
in
sbb
push
xor
add
clc
jmp
and
dec
add
jecxz
clc
push
inc
outsl
xchg
fldt
not
sub
pusha
xor
jmp
cmp
mov
test
lahf
cli
rcrl
xor
enter
scas
mov
scas
into
fstps
xchg
aaa
sub
rcll
mov
adc
pop
scas
out
xchg
aad
ficompl
fcmove
add
mov
mov
mull
in
jb
or
lock
aas
add
aad
mov
gs
inc
sub
movl
xor
adc
push
mov
add
jno
or
sub
sub
iret
mov
popa
fistpll
sbb
popa
enter
sub
ss
insb
sbb
sbb
push
inc
je
inc
mov
inc
fldl
bound
dec
into
cmpsb
insl
push
mov
scas
push
xchg
xchg
jecxz
stc
pop
sbb
sbb
and
mov
clc
xchg
pop
aas
cmpl
mov
xor
ds
jno
stos
jle
adc
les
lods
xor
dec
enter
push
jg
cmc
icebp
ss
nop
in
xor
xchg
mov
stos
xlat
pop
add
test
pop
cmpsb
push
pop
inc
xor
das
or
cmp
sub
mov
pop
roll
scas
in
push
cltd
adc
cmc
jle
or
mov
jp
pusha
or
add
fidivs
mov
ss
adc
into
fistpl
loop
ds
inc
imul
lret
test
mov
fisubl
jp
stc
xchg
add
and
jo
jbe
je
pushf
mov
pusha
stos
ss
adc
cmp
inc
in
pop
push
nop
ja
add
fnstcw
sahf
mulb
mov
jg
push
and
cwtl
mov
dec
sub
scas
test
cmp
mov
iret
inc
push
mov
jb
jnp,pt
push
inc
inc
enter
add
lret
daa
repz
pop
sub
xor
mov
push
push
mov
dec
add
inc
popf
or
clc
adc
push
inc
jl
in
ds
fstp
inc
cs
ss
lahf
xchg
imul
cli
mov
inc
sub
hlt
push
test
stos
dec
test
rolb
jae
add
mov
add
push
je
inc
out
out
call
hlt
arpl
pushw
scas
mov
repz
orl
decb
fnstenv
imul
aad
xchg
rcr
in
into
leave
jnp
in
push
jo
push
dec
notl
jbe
and
inc
cs
dec
add
jo
out
pop
int3
xlat
jl
enter
sub
cmp
xchg
cwtl
cs
jmp
pop
adc
jbe
push
add
push
cmc
dec
sahf
dec
adc
xchg
out
jbe
and
pop
mov
xlat
and
ja
adc
pop
fcmovnb
push
fs
xor
daa
xchg
push
pop
in
inc
sub
xor
adc
mov
mov
pushl
sti
or
out
or
adc
sarl
mov
push
push
sbb
xor
sub
jb
fnstsw
insb
pop
xchg
add
aas
js
pop
xorb
cmp
dec
pop
pusha
pop
cmc
inc
push
frstor
inc
test
data16
xlat
nop
in
fnstsw
or
xchg
mov
fimull
mov
pusha
inc
bnd
sub
xor
xlat
out
mov
rol
ljmp
clc
and
loop
pop
pop
cld
pop
adc
bswap
cmp
mov
leave
sbb
dec
test
cmp
or
rcrl
mov
mov
outsb
jecxz
dec
xchg
clc
sbb
les
out
jb
std
mov
ljmp
outsl
fsubrl
or
test
inc
xchg
hlt
mov
sbb
xchg
fs
je
imul
or
lods
or
xchg
push
cmpsl
inc
fstpt
jne
std
jb
jae
cs
js
mov
enter
adc
inc
lods
in
in
repnz
lock
jne
clc
cmpsb
in
fstl
add
pop
jb
dec
ja
push
xchg
dec
jnp
fistpl
pushf
bound
dec
in
pop
dec
incl
or
std
mov
cmpsb
push
or
call
mov
push
subb
jnp
xchg
roll
cs
add
je
push
mov
aaa
push
movsb
add
icebp
add
adc
lds
and
sub
inc
jns
jge
push
xchg
sub
mov
scas
mov
fildl
jecxz
jnp
xlat
rcrl
scas
insb
jae
repnz
or
out
mov
jae
cs
in
insb
jp
cmp
dec
mov
rol
cmpsb
jae
sbb
pop
cmp
xor
push
enter
out
xorb
or
inc
lret
in
test
test
cmp
es
fisubs
out
and
test
test
dec
test
sub
pusha
and
sti
popa
jle
or
movsb
push
add
in
xchg
adc
cmpsl
mov
mov
mov
adc
in
pop
rolb
push
int3
negb
pop
mov
loope
or
mov
sarl
int
mov
push
mov
adcl
fs
ss
in
shlb
subb
loop
out
sub
xchg
bound
xor
orb
addr16
add
mov
hlt
movsl
hlt
data16
lods
inc
and
repnz
pop
xor
mov
sub
and
xchg
xor
stos
repnz
sbb
and
lds
jmp
les
mov
adc
scas
pop
cld
gs
mov
add
jmp
ja
rorl
push
rol
clc
or
cwtl
and
xor
aas
lcall
pushf
pop
sti
lret
mov
add
test
cli
inc
in
mov
jnp
xchg
jle
adc
mov
add
mov
js
insb
adc
cli
in
addr16
jb
test
fdivs
int3
xchg
loop
mov
cmp
dec
in
aas
push
in
cmc
lahf
jns
sub
mov
lds
sub
ret
rorl
jno
cmp
cmpsl
enter
loope
mov
sub
jg
jecxz
push
repnz
stc
adc
xor
dec
arpl
testb
push
rcr
sbb
mov
loopne
dec
mov
repz
cmp
imul
push
and
setno
or
bnd
push
push
sar
pop
insl
js
or
test
inc
fldt
test
cmpsb
cli
xchg
inc
xchg
sub
test
mov
cli
mov
dec
dec
outsl
lcall
jnp
xor
arpl
fwait
scas
aaa
cld
push
out
fnstsw
sbb
insl
or
and
inc
dec
scas
push
mov
add
in
fucomp
sub
sbb
andb
jne
dec
cltd
call
loopne
and
xchg
jl
pop
cmc
scas
clc
test
and
hlt
pop
out
call
jb
pop
jp
lea
xchg
insl
bound
mov
dec
lods
xchg
or
mov
stc
mov
push
pop
or
sbb
mov
pop
jecxz,pn
aam
pop
cmp
mov
push
push
push
aad
mov
push
mov
lret
jnp
arpl
fstl
jg
movsb
ret
or
aaa
cmp
inc
lds
xor
sbb
sub
cmpsl
rolb
adc
or
pop
inc
ds
jge
out
xchg
orb
sub
nop
xchg
push
repnz
out
mov
jne
add
call
nop
pop
and
mov
or
cltd
pop
mov
or
sub
cld
out
pop
jo
stc
fisubrs
in
inc
lret
sti
mov
mov
movsb
pop
pusha
gs
icebp
pop
ja
loope
add
dec
scas
pop
cwtl
aas
shrl
sbbl
mov
add
mov
arpl
xor
aaa
or
jnp
divb
pop
adc
mov
into
in
dec
xorb
sbb
jp
mov
pop
lahf
mov
jns
sbb
xchg
repnz
cmp
push
std
loope
test
push
mov
mov
pop
ret
decb
nop
push
fdivr
mov
cmpsb
sbb
or
or
adc
push
add
mov
int
cltd
outsb
adc
push
mov
js
insl
lcall
sub
push
mov
call
js
iret
jno
fcoms
push
sbb
mov
jmp
mov
mov
dec
adc
ficoml
xor
mov
aam
ss
insl
popf
loopne
lahf
loop
or
mov
sbb
stos
sbb
cmp
push
adc
fwait
inc
out
adc
push
jb
das
out
js
mov
ds
add
imul
dec
mov
xchg
mov
sbb
mov
dec
sbb
cmp
arpl
adc
sub
mov
jge
cs
and
out
xor
xchg
add
je
xor
icebp
lret
add
pop
scas
in
fcomp
cld
loope
fidivrl
mov
icebp
fs
shl
mov
dec
jbe
popa
inc
cmpb
shrl
cltd
dec
fmulp
sub
sbbl
mov
fcoms
movsb
cmc
out
pushf
test
arpl
mov
push
test
mov
loopne
test
out
in
dec
lea
push
sti
cmp
sub
stos
xor
test
jns
int
mov
jnp
ret
arpl
nop
or
push
aas
das
stc
fsubl
sbb
insb
int
aad
mov
and
pusha
lret
mov
outsb
pop
lcall
sub
int
cmpsb
popf
sbb
sbb
into
add
stos
jle,pt
cmp
mov
in
push
stos
jae
fsubrs
mov
test
xor
mov
xor
jge
dec
test
int3
mov
mov
shr
test
scas
mov
imul
ret
adc
inc
enterw
jbe
jb
push
clc
int
js
idivb
adc
or
cmp
gs
or
ds
popa
push
cltd
in
pop
xor
arpl
stc
and
pop
mul
in
and
xor
popf
or
adc
push
xchg
dec
jo
mov
lock
rcr
sbb
xor
jbe
hlt
push
sub
dec
pop
push
add
stos
push
cmp
add
dec
out
mov
orb
insb
outsb
push
xor
or
xor
cwtl
cmp
je
into
xchg
gs
jo
or
cmp
into
and
insb
mov
mov
mov
loopne
jo
fnsave
mov
inc
mov
sbb
mov
aaa
jae
jb
dec
dec
dec
outsb
leave
lcall
inc
cmp
rclb
mov
cmp
jle
pop
pushf
mov
aaa
adc
push
lcall
dec
mov
push
rcrl
mov
rcl
scas
pushf
mov
cltd
sbb
cmp
lahf
sbb
sbb
xor
loop
ss
sub
daa
fwait
cli
popf
pop
pop
or
mulb
cwtl
mov
lods
shrl
packssdw
xor
push
insl
inc
daa
push
inc
cwtl
imul
scas
push
inc
fwait
movl
test
fists
aam
adc
mov
adc
jl
push
stc
dec
icebp
fwait
je
leave
negb
xor
dec
xchg
or
rcrb
pushf
push
and
inc
push
aad
rclb
and
sub
push
cmp
mulb
jns
adc
bound
and
jno
dec
rolb
sbb
mov
pop
in
out
push
das
lcall
lods
lock
push
jno
dec
inc
shld
aas
orb
mov
aad
mov
decl
adc
push
and
es
lret
push
aas
std
mov
enter
iret
movsl
add
jbe
jnp
imulb
adc
dec
jp
sbb
negl
or
adc
adc
pop
fstpt
sahf
xchg
and
lret
adc
jl
decb
shll
xor
xor
cltd
in
jle
in
jle
adc
xchg
mov
stos
inc
mov
clc
cmpsb
xor
dec
pop
jl
repnz
sbb
push
and
aaa
inc
adc
mov
jecxz
imul
cmp
sbb
mov
xor
lcall
xchg
xlat
scas
data16
icebp
jmp
mov
push
notl
outsl
push
cwtl
jne
xchg
imul
notb
dec
sbb
leave
push
lds
push
jl
jo
stos
out
adc
in
sub
or
dec
or
xor
insl
in
add
lods
xchg
je
or
jno
jge
scas
inc
cmp
jno
mov
or
push
arpl
imul
clc
fiaddl
jmp
pop
in
xchg
dec
xor
fstps
xchg
imul
jg
sbb
pop
jl
cmp
jle
mov
test
mov
add
rolb
hlt
jns
pop
dec
add
out
hlt
mov
lea
mov
pop
add
gs
notl
sub
push
les
int
popa
mov
cmp
push
mov
mov
xor
arpl
lret
cmpsb
inc
sub
push
lods
testl
mov
pop
clc
cwtl
mov
mov
push
or
jl
rolb
insl
push
call
test
testl
mov
sub
fisttps
mov
out
mov
enter
add
and
movsl
fs
mov
adc
push
or
jge
popf
je
cmpsl
mov
mov
out
dec
arpl
icebp
add
pop
xor
inc
push
jge
jae
dec
fimull
push
xchg
adc
dec
adc
stos
cmp
jo
call
imul
fcoms
dec
xor
test
push
iret
repz
shl
mov
lea
orl
sub
push
les
xchg
pop
ja
call
iret
push
inc
mov
mov
pop
outsw
aam
das
mov
das
fisttpl
addr16
mov
mov
or
fdivrl
out
pop
icebp
mov
pop
dec
cmp
mov
and
dec
in
xor
neg
fs
xchg
mov
out
mov
imul
jnp
xchg
xchg
shll
scas
jmp
notl
clc
mov
lock
mov
notl
cmp
jl
dec
add
jo
jl
push
orl
and
adc
icebp
stos
xor
push
xchg
inc
popa
cmp
sti
test
dec
test
stos
mov
adc
mov
mov
fsub
push
cli
or
imul
out
mov
and
repz
push
les
stos
mov
inc
pop
shl
mov
arpl
aam
cmpsb
ret
pusha
mov
cmp
push
fdivr
mov
xor
mov
xchg
jo
xor
rcrb
mov
adc
fistpll
push
mov
arpl
rcrl
adc
repnz
sub
aaa
gs
fwait
push
ja
and
daa
movsb
jb
ja
or
mov
mov
mov
mov
pop
adc
add
sbb
dec
adc
addr16
lods
push
cmp
hlt
aaa
hlt
mov
outsl
pop
icebp
jo
inc
jge
lcall
push
xchg
arpl
jo
movb
es
shlb
bound
or
xor
lds
mov
adc
test
pop
imul
jmp
ja
mov
test
add
aaa
xchg
adc
mov
int3
add
fcoml
sub
xlat
lods
mov
aaa
or
adc
pop
sub
das
dec
adc
iret
out
cmpsl
cmp
insl
dec
out
rcl
sub
mov
ss
negb
jecxz
cmp
add
out
adc
int3
or
adc
jnp
leave
mov
popf
fcompl
dec
lret
fbld
sub
stos
cltd
rcll
push
lret
dec
ljmp
iret
or
adc
jmp
std
ss
push
fimull
pushf
sbb
sti
out
cld
int
sub
jmp
pop
enter
pop
mov
dec
fsub
inc
cld
cmp
es
and
lret
outsl
push
insl
stos
pop
lret
jmp
out
ficoms
fwait
jg
inc
sub
test
js
cs
ljmp
std
loop
rorl
mov
jo
hlt
hlt
mov
das
int3
fwait
enter
mov
fmull
out
adc
inc
out
ret
xchg
push
sbbb
cwtl
test
inc
mov
shrb
mov
xor
cwtl
mov
and
dec
leave
out
sub
jo
adc
enter
and
xorb
inc
data16
xor
hlt
dec
pop
fisubrl
mov
test
jl
cmp
dec
repz
rcll
mov
xchg
mov
xor
scas
pop
in
cmpsb
or
jp
inc
push
lret
mov
rol
jnp
cmpsb
inc
cmp
aad
xor
rorl
dec
pop
sahf
arpl
cld
mov
pusha
inc
mov
sub
rolb
sarl
inc
pop
enter
mov
dec
push
cli
aaa
inc
rclb
jno
lcall
dec
sti
mov
jbe
xor
lcall
in
fisubs
add
and
in
lock
jmp
mov
jge
hlt
outsl
leave
adc
loope
mov
jns
cmp
mov
inc
cmp
inc
int3
rorl
push
jecxz
or
loope
fildll
lret
sbb
lret
fnstenv
mov
pusha
ljmp
movntps
push
cli
iret
fcomps
mov
xlat
dec
jp
add
dec
cli
push
enter
cltd
mov
fwait
int3
xchg
xchg
mov
popa
iret
fimull
xchg
mov
addl
daa
dec
sub
cmp
scas
or
pop
popa
pop
les
cli
or
inc
cmp
inc
shrb
mov
das
pop
add
loop
frstor
loope
subl
pop
and
movsl
xorl
nop
std
test
mov
pop
call
in
xchg
dec
cmc
xchg
or
jns
sbb
call
or
leave
ret
cltd
cld
test
insb
ret
shlb
adc
movsb
mov
mov
int
jbe
push
je
das
shll
outsb
loopne
andb
jp
xchg
add
test
pop
jae
fadds
aas
jle
out
xor
mov
pop
cmp
mov
mov
outsb
mov
mov
inc
cmc
cltd
ljmp
xor
out
in
and
jl
push
aam
aas
mov
sub
cmpsb
jecxz
xor
jg
addr16
push
scas
adc
push
pop
dec
addr16
out
or
mov
jo
ss
jp
cs
loop
pop
push
sbb
dec
xor
add
xor
loopne
xchg
fidivrl
out
or
jle
adc
leave
mov
std
clc
mov
push
in
add
inc
pop
mov
cmp
xor
jl
lods
std
nop
lret
in
shll
pop
adc
dec
sub
addr16
sarl
xlat
int
pop
or
jge
inc
dec
dec
or
lds
jnp
insb
jo
fcomp
dec
outsl
pop
dec
repnz
inc
xabort
or
and
and
lds
pop
psllq
xor
jge
mov
push
or
xor
aaa
adc
scas
loopne
jae
hlt
test
in
int
testl
cltd
dec
icebp
bound
ss
mov
lahf
cmp
js
cmpb
sub
adc
dec
dec
pushf
lahf
in
dec
jge
fxch
lret
pop
fists
mov
sub
push
js
dec
jne
dec
mov
into
jo
push
inc
jbe
rcl
add
test
clc
scas
int
dec
or
add
xlat
insl
shr
ret
lcall
xchg
cmp
and
push
jmp
push
push
mov
add
xor
pop
dec
stos
loop
mov
adc
push
in
negl
aas
xor
std
push
xchg
outsl
sub
cmp
loopne
pusha
rcrb
arpl
fsubs
repnz
call
sub
lahf
pop
insl
sbb
gs
repz
shrl
popf
mov
pop
imul
ljmp
jle
rorl
lods
cs
xor
test
ljmp
pop
mov
sbb
push
std
movsb
pop
dec
mov
jge
fdiv
out
ljmp
loop
jmp
fadd
ljmp
test
lahf
xor
and
jae
xor
push
jnp
xor
shlb
pop
add
cmpl
sti
sbb
xor
jg
xchg
sti
les
pop
insl
pop
push
notl
lods
jmp
movsl
dec
xor
rcrb
into
pusha
fs
lds
ret
add
sidtl
mov
adc
pop
test
int
cmp
clc
mov
pop
mov
mov
add
cmpsl
das
movsb
lret
call
push
mov
inc
nop
in
jg
fbld
mov
jge
mov
mov
mov
add
fstpt
into
jp
dec
sbb
or
scas
pushf
pop
cltd
nop
push
pop
pusha
out
inc
and
outsl
mov
pop
movsb
outsl
add
xchg
fwait
xlat
mov
arpl
xor
ficomps
sbb
jno
outsl
jl
inc
push
inc
xorb
mov
insb
push
pop
pop
sbbl
cmp
addr16
test
aad
je
push
js
imul
test
inc
push
in
mov
insl
fidivs
ret
daa
cmp
sti
mov
dec
hlt
ja
mov
inc
subl
or
aaa
stos
push
cmp
mov
add
jbe
adc
je
sub
add
cmpl
movsl
je
fsts
mov
stos
lret
movsb
add
cmp
xor
mov
push
jmp
mov
enter
cwtl
call
and
cmp
sub
xchg
jb
subl
inc
cltd
fidivrs
xlat
push
ljmp
mov
popa
or
add
adc
xor
xchg
enter
jno
xchg
or
push
fs
push
dec
jle
loopne
bound
mov
or
xchg
out
movl
mov
mov
int
insb
mov
sub
inc
mov
dec
xchg
or
mov
shlb
add
xchg
popf
and
adc
lock
push
js
dec
sti
bound
sbb
cmp
dec
ds
xor
pop
and
mov
bound
mov
push
inc
sub
xchg
les
popa
sub
cmp
int3
dec
dec
imul
lods
rorb
jb
nop
mov
outsb
sbb
xor
jne
scas
sahf
adc
lahf
adc
pop
mov
mov
sbb
fimull
imul
rorb
jne
aas
mov
push
cmpsb
test
mov
cmp
pop
dec
loop
into
sub
push
enter
or
or
out
inc
lea
ret
scas
cmc
scas
cmp
add
dec
sbb
or
rcl
dec
xchg
inc
jmp
icebp
sub
inc
and
sub
fcoml
sbb
rol
fwait
rorl
sarl
xchg
xor
lods
add
xchg
pop
xchg
jbe,pt
xchg
sahf
sbb
stc
sub
pop
mov
adc
push
xor
cmpsl
sbb
hlt
stos
repnz
sbb
ret
cmp
xchg
nop
or
loope
xchg
rolb
push
stos
iret
daa
push
inc
xchg
push
shrl
mov
mov
mov
xor
test
inc
mov
inc
adc
test
roll
inc
dec
and
xchg
jae,pt
pop
mov
xchg
call
push
outsl
xchg
inc
jmp
cmpsb
ret
and
pop
push
adc
outsb
pop
sbb
mov
xchg
or
pop
pop
xlat
loopne
loope
push
jle
outsl
das
mov
popf
adc
mov
or
push
cwtl
test
dec
shl
dec
cs
inc
sub
pusha
or
test
incb
movsl
inc
and
xchg
movsb
dec
rcr
int
nop
dec
jne
movsb
repz
add
mov
mov
pop
ja
testl
mov
or
lahf
ret
int
fnstenv
fildll
lods
sbb
mov
jbe
lret
adc
xchg
mov
insl
add
std
jge
xchg
addr16
cmp
sbb
ret
rclb
out
mov
pop
pop
dec
cmc
dec
xor
jmp
iret
mov
mov
cmp
clc
cmp
imul
xor
dec
pop
insb
divb
pusha
jp
cmc
loop
push
popa
ss
int3
data16
js
fmull
pusha
fldenv
xor
fsts
jecxz
jne
outsl
sub
test
sub
out
rcrb
xchg
adc
or
fsts
int
sub
cmp
xchg
xorl
clc
sub
pop
je
lods
stos
jns
or
call
fdivrl
inc
rcrl
lock
mov
dec
jmp
inc
outsb
mov
orl
mov
jecxz
jecxz
cmp
add
mov
mov
and
hlt
das
cli
shrl
xchg
inc
fwait
call
pop
dec
mov
cwtl
lods
es
or
pop
and
lahf
sti
sbb
cmp
fwait
loope
das
mov
sub
mov
inc
cwtl
mov
aad
mov
cmpsl
inc
repnz
mov
test
scas
imull
push
and
push
xor
fildl
test
push
les
outsb
outsb
test
lret
jae
mov
fadds
test
test
add
mov
sub
aas
inc
mov
lret
and
arpl
xor
cli
adc
leave
dec
scas
sub
and
push
add
jne
pop
sub
fcoms
enter
test
pop
idivl
stc
pop
movsb
rorl
stos
cwtl
test
popa
adc
adc
es
cmp
loop
lret
test
push
sbb
iret
mov
xor
bound
outsl
stos
cmp
mov
stos
sbb
lods
dec
pusha
push
cmp
cmpsb
add
dec
xor
xchg
out
inc
push
pushf
ljmp
test
cld
shlb
mov
scas
sbb
mov
sbb
pop
sbb
ja
loopne
loope
lods
imul
lret
dec
mov
repnz
int3
pop
sub
xchg
outsl
add
xchg
ss
pop
ds
js
addr16
imul
push
out
or
ds
dec
int3
pop
ret
or
cmc
push
or
pop
push
out
jge
sbb
add
fdivl
pop
or
dec
pop
movsb
mov
mov
in
add
jmp
sahf
aad
mov
int
or
inc
inc
mov
hlt
push
adc
push
iret
test
dec
rorl
push
or
andl
sbb
test
lea
lcall
popf
jge
rorb
dec
pop
repnz
enter
xor
leave
ljmp
jl
sub
mull
dec
filds
or
lock
inc
mov
out
jbe
mov
sti
dec
pusha
mov
imul
subb
aad
jmp
dec
imul
and
decl
les
imul
push
out
test
dec
out
pop
pop
addr16
je
sub
pop
inc
fs
in
push
mov
sub
rep
pop
fcmovne
adc
jae
hlt
xor
and
push
push
les
adc
adc
dec
xchg
and
xchg
mov
xor
sub
and
fsubs
jecxz
sub
sbb
ret
sahf
xchg
sahf
xor
cmpsb
ds
mov
in
scas
jns
mov
fidivl
jne
aad
or
roll
push
or
xor
sub
inc
int3
add
arpl
jg
sbb
add
jbe
mov
lods
mov
and
sub
outsb
pop
or
pop
lret
sti
ljmp
imul
and
out
aad
mov
adc
and
cld
ljmp
or
lods
xchg
mov
sarl
pop
repnz
stos
movsl
gs
insb
sbb
out
mov
pop
mov
lret
dec
or
inc
sbb
arpl
mov
inc
inc
push
xor
mov
jne
lcall
adcb
pop
cmp
jae
test
icebp
sbb
dec
dec
call
pop
adc
dec
jmp
movsl
pop
insb
mov
mov
fs
and
mov
sub
shll
mov
addr16
push
out
icebp
mov
negl
pop
stos
mov
mov
stos
arpl
mov
adcl
push
ja
ljmp
iret
mov
xchg
pusha
clc
mov
test
fsubr
lods
iret
xchg
push
adc
mov
mov
inc
daa
mov
cs
imul
icebp
mov
clc
sub
or
mov
inc
divl
pop
adc
pop
inc
loopne
je
into
jo
or
addr16
mov
cmp
rol
jle
or
xchg
mov
jne
xchg
ret
mov
jb
sarl
sub
ljmp
xchg
mov
mov
cmp
mov
inc
je
aas
sub
mov
push
mov
cld
data16
and
lods
pop
bound
cld
jge
pop
call
sub
fnstenv
xlat
inc
mov
stos
cmpsl
adc
lahf
sahf
rcrl
mov
fisttps
shlb
out
andl
cltd
loopne
inc
adc
dec
imul
jge
mov
lods
aam
test
xor
mov
xchg
cmp
das
xor
push
stc
test
or
push
call
orb
add
mov
roll
adc
lcall
shlb
mov
and
jae
std
sub
ficompl
pop
nop
mov
sub
push
into
out
nop
aad
or
mov
xor
cmp
fistps
push
mov
mov
pop
and
xor
sub
in
stos
scas
mov
stos
dec
cmpb
cmp
insl
bound
imul
jbe
shll
push
push
xor
out
jg
ret
in
mov
imul
cmp
adc
fwait
add
or
dec
jle
clc
add
iret
pop
mov
mov
sti
jl
jl
shlb
cld
sub
add
or
fstp
lds
push
lods
pop
scas
insb
push
mov
inc
ss
xor
mov
ljmp
int3
sub
fldt
scas
push
mov
aad
bound
nop
in
notb
ret
stos
jnp
addr16
hlt
pop
test
lods
adc
push
dec
cltd
and
cmp
call
lods
pop
adc
daa
ret
in
ds
aas
sub
call
dec
inc
or
dec
lock
sub
fisttpl
aam
pop
les
mov
dec
mov
shlb
xchg
loop
arpl
xor
inc
mov
mov
das
jmp
cmp
push
sub
bound
mov
cmp
mov
sbb
mov
aaa
adc
push
inc
xchg
or
pusha
cmpsl
in
cmp
fisttpl
inc
pop
or
jmp
addr16
notl
mov
int3
mov
jo
fisttpl
out
fnstcw
sub
mov
sub
adc
enter
xchg
jecxz
jp
mov
cmp
int3
addr16
roll
incb
jae
clc
xchg
jbe
lods
ja
insb
jp
andb
loopne
std
cwtl
shl
adcb
cltd
int3
cwtl
rolb
lds
cmp
lcall
and
push
hlt
mov
inc
sahf
mov
aam
lock
data16
push
sbb
pusha
lahf
dec
adc
shlb
mov
mov
add
or
cmc
cltd
mov
add
lret
in
cli
inc
mov
add
int
xchg
loop
sub
frstor
xchg
mov
fisubl
leave
add
idivl
mov
dec
pusha
mov
inc
mov
ror
jae
jo
call
clc
mov
fs
lcall
xor
xor
xor
arpl
cmp
cmp
notb
cmc
cmp
adc
shl
xor
or
or
push
lahf
adc
insb
mov
sub
enter
cmc
inc
int
lcall
aam
push
jp
xchg
pushf
xchg
incb
cld
imul
pop
xchg
push
or
xchg
cmp
clc
and
dec
jg
imul
jg
ljmp
mov
sub
sbb
scas
inc
popa
fistps
xchg
pop
in
repnz
or
mov
dec
outsb
pop
cltd
push
mov
icebp
mov
fwait
in
cmp
cltd
add
fisubs
and
mov
repnz
cli
imul
lret
pop
push
sub
cmp
fsubl
mov
dec
and
cli
sub
in
mov
mov
mov
repnz
lock
ret
xor
fidivrl
cmove
jo
ja
mov
das
mov
pop
mov
mov
pushl
mov
fcomp
mov
add
lcall
clc
sub
outsb
adc
sub
push
fdivrp
push
pop
sub
aas
aam
pop
xor
cmp
xchg
vpsubd
dec
shll
and
dec
push
fwait
in
aad
inc
imul
je
cmpsb
lret
ss
push
filds
pop
aam
notb
add
test
inc
or
mov
mov
sbb
movsb
pop
insb
add
inc
mov
insl
push
dec
leave
fisttpll
inc
pop
push
jae
maskmovq
divl
sbb
rcr
cmpsl
pop
sub
js
popa
out
les
rcl
mov
inc
les
pop
lahf
mov
or
inc
jecxz
add
test
pop
out
mov
lock
push
sbb
cmc
aam
movsl
test
ja
std
jl
arpl
cmp
test
jle
out
xor
daa
cwtl
clc
push
fyl2x
sub
jmp
ret
mov
and
loope
mov
sub
and
insb
mov
pop
scas
lcall
push
andl
and
scas
or
inc
mov
add
dec
mov
cmp
push
adc
clc
fimull
xchg
or
mov
fildl
cmp
pop
adc
fimuls
pop
xchg
jmp
test
xchg
nop
dec
arpl
jbe
ret
mov
xor
loope
fnstsw
or
ds
inc
sarl
into
ror
sub
call
mov
scas
lret
scas
sbb
mov
dec
cmp
call
in
outsl
and
mull
xchg
mov
adc
fldt
pushf
movsb
mov
imul
enter
pop
andl
in
out
gs
repz
cmp
pop
ss
sub
loope
ljmp
pop
jae
push
sub
cli
leave
sub
ret
sbbb
test
lea
inc
xchg
std
dec
xlat
scas
aas
mov
sti
mov
mov
enter
add
dec
xor
movsb
xchg
sbb
and
add
mov
rcr
mov
xchg
ss
xor
in
add
ret
xchg
or
lds
cmp
jae
dec
mov
lock
add
psraw
shr
aam
addl
iret
jmp
pop
push
fsubrl
lret
and
adc
adc
sub
push
add
inc
mov
xor
jb
xchg
std
hlt
lods
add
xlat
and
xor
xchg
jmp
lahf
sub
cmp
xor
or
hlt
mov
lret
int3
cmpsl
add
mov
int3
cld
xor
scas
lret
push
mov
cmp
bound
repz
cli
mov
pop
stos
or
pop
dec
sub
mov
sub
or
sub
pusha
ret
sbb
and
mov
jg
lods
sbb
push
stos
jo
icebp
or
iret
cmpb
mov
lods
fidivl
inc
ja
or
mov
out
sbbl
sub
in
popa
fsubl
dec
pusha
aaa
mov
pushf
cmp
jne
addr16
test
sbbl
add
lret
ja
ficoms
cltd
out
or
cltd
cmp
outsb
adc
mov
popf
addr16
ficoml
jmp
dec
mov
lcall
jbe
outsl
fdivl
add
xor
daa
jae
push
or
pop
push
psrlq
sub
popf
mov
sbb
out
mov
fs
jmp
cmp
shll
negb
scas
inc
pop
je
inc
les
pusha
aaa
shll
shll
aaa
out
addr16
xor
icebp
xor
fs
out
fwait
push
stc
dec
sbb
cld
loop
mov
fdivs
adc
push
push
repnz
mov
sbb
repz
int
in
push
lock
ljmp
sahf
sahf
mov
push
cltd
cmpsl
in
jne
imul
ret
stos
cmp
sub
roll
sbb
jmp
adc
pop
ljmp
pop
cld
lea
aad
scas
lea
sbb
add
and
xchg
cmp
push
ret
push
das
js,pn
icebp
and
mov
jmp
xchg
or
ror
mov
jno
mov
pop
xor
fisttps
lret
test
shlb
std
inc
mov
mov
pop
cmp
cmp
dec
ja
outsb
loop
and
xor
pop
push
repz
adc
hlt
xor
xor
and
rcll
ret
cmp
ljmp
mov
and
pop
lods
sub
cld
pushw
push
fildl
cld
xor
jnp
xchg
jbe
xchg
or
push
lcall
pop
mov
add
dec
pop
cs
sar
imul
adc
sub
sub
sub
and
in
jb
jno
cmpsl
int
in
cltd
jo
cmp
icebp
inc
xchg
jl
cmp
test
outsl
mov
jb
leave
dec
jo
lret
aad
in
adc
xchg
add
mov
aam
xor
sub
fisttps
mov
pop
in
push
xchg
call
jmpw
cmpsl
jns
mov
and
cltd
sbb
lahf
sbb
in
push
cs
fcomps
outsb
mov
cmp
ja
rcrl
std
add
xchg
jbe
dec
sbb
add
jbe
inc
popa
cltd
testb
loopne
jg
add
sub
or
pop
adc
fsubrl
sbb
movsb
sub
outsb
mov
mov
and
sub
mov
pop
pop
sahf
dec
cli
or
cmpsl
jb
cli
jns
push
pushf
or
data16
dec
icebp
sar
ljmp
shrl
jbe
int
add
aas
int3
ljmp
mov
stos
or
out
rcrb
cwtl
loop
xchg
icebp
nop
cld
addb
in
pop
sbb
xchg
xchg
or
into
or
hlt
cmpsb
cmpsl
jb
rorb
das
mov
add
mov
shl
xchg
push
shlb
cltd
imul
shl
lahf
pop
data16
ja
fidivrl
pop
fcoms
lret
imul
dec
push
icebp
cmp
enter
dec
je
lods
mov
scas
aad
clc
aaa
sbbb
sub
sbb
push
fldcw
lcall
sbb
fistl
and
xchg
jae
mov
push
in
xchg
idiv
mov
push
shl
adc
aas
push
jp
ss
out
sub
rcr
aas
jo
or
mov
sub
jmp
or
inc
loop
and
and
xchg
insl
stos
ror
or
lds
cmp
jne
or
cmc
cmp
int3
aam
gs
out
call
arpl
sub
jns
pusha
dec
and
jge
test
subb
add
mov
cmpsb
adc
popf
lock
rolb
and
xchg
lock
push
ja
fbstp
scas
leave
mov
mov
xchg
ret
push
aam
push
stos
pop
mov
mov
jle
jg
push
test
aaa
inc
out
loope
pop
clc
adc
adc
jmp
push
ret
push
clc
add
arpl
pop
in
adc
mov
cli
adc
adc
out
nop
jge
aam
daa
xor
push
inc
insl
orb
push
mov
xchg
xchg
add
dec
cmp
pop
mov
cld
imul
scas
imull
je
jge
pop
fisubrs
dec
cmp
out
cli
cmp
jmp
xor
imulb
sarl
sbb
jecxz
pop
pushf
out
push
lret
int3
out
pop
inc
movsl
popf
aaa
lods
in
sbb
adc
mov
and
aaa
push
mov
bound
xchg
inc
stc
push
adc
mov
pop
fwait
sbb
les
leave
jmp
mov
mov
lahf
and
imulb
pushf
hlt
loop
stos
push
xlat
push
push
dec
dec
jns
das
ljmp
popa
mov
outsl
into
mov
mov
mov
push
xlat
scas
jl
scas
sahf
ss
fabs
sub
fs
lods
lea
lds
cmp
mov
les
push
imul
push
or
movsb
lds
cmp
loopne
pop
cli
mov
or
jno
repz
dec
or
adc
sub
and
push
clc
bound
adc
mov
lea
out
sbb
imulb
mov
scas
pop
xor
lcall
out
mov
dec
fwait
cld
cmp
push
xchg
push
dec
enter
btc
adc
xor
pop
push
mov
lahf
inc
adc
rcl
shrl
popa
call
gs
bound
cmp
adc
movsl
lahf
imul
pop
add
xchg
sti
stos
sbb
outsb
add
cmp
xchg
mulb
sti
call
xchg
es
adc
or
sahf
mov
outsb
push
and
fcmove
sub
in
jl
std
insl
xchg
arpl
stos
add
dec
dec
mov
and
inc
cmp
jo
in
mov
add
adc
push
xor
aas
ret
mov
mov
mov
jnp
scas
mov
ficomps
daa
sbb
sti
arpl
lahf
add
cld
lret
push
insb
hlt
adc
test
mov
cmpsl
mov
fisttps
push
lock
xchg
xchg
shr
push
stos
insb
xor
mov
jg
cmc
lret
mov
xor
sahf
sbb
adc
imul
mov
adc
jmp
jp
sarl
fstpl
add
push
sarl
icebp
inc
pop
aam
ljmp
cmp
inc
insl
out
rcrl
xor
ret
gs
out
add
fcomps
dec
rolb
push
into
adc
add
push
fmuls
int
jp
or
dec
xchg
mov
fucomi
xor
jg
jnp
call
cs
stos
arpl
cmpsl
inc
rorb
negl
les
fcmovnbe
arpl
push
lcall
jmp
sarb
sti
loopne
sbb
rclb
mov
leave
mov
jb
stos
cmp
mov
cwtl
pop
shlb
fcmove
jne
cmp
sbb
or
das
das
sub
or
int3
nop
and
adc
xchg
fbld
and
cmpsb
cld
mov
mov
hlt
add
cmc
mov
jl
inc
stos
cmp
xorb
pop
mov
inc
cmpsb
lods
fildl
add
fwait
neg
push
fs
xor
scas
add
jp
sbb
outsl
ret
incl
mov
mov
jbe
movsl
in
dec
pop
mov
inc
jg
outsb
fstl
fimuls
cmp
mov
stc
fwait
les
jno
mov
or
pop
and
ds
mov
lods
lds
jp
mov
ja
dec
mov
cmp
xchg
orl
xor
notb
push
mov
inc
mulb
jmp
stos
icebp
jp
pop
add
jecxz
adc
pop
test
stos
dec
adc
push
add
xlat
or
ret
pushf
lds
cmp
xor
xorl
nop
sbb
pop
fs
movsl
shll
push
iret
ss
ret
pop
mov
dec
pusha
pop
sub
iret
sub
pop
sbb
ja
sub
mov
cmp
push
xchg
add
or
cmpsb
ljmp
mov
fidivrl
mov
mov
xor
push
dec
xor
push
data16
or
push
lock
fstpl
mov
fnstsw
mov
sub
xchg
in
insb
enter
pop
push
imul
fildll
pop
pop
jle
jbe
jo,pt
lea
sti
pop
lods
pop
test
push
xchg
mov
xor
nop
cvtdq2ps
mov
dec
xchg
push
add
cltd
xor
bound
sahf
mov
inc
or
pop
jno
stos
xchg
lret
js
repnz
js
or
mov
leave
fcomip
lret
pop
pop
cmp
lret
sub
ljmp
fmull
inc
mov
pop
pop
push
jae
orl
roll
dec
notl
mov
out
dec
mov
stos
dec
jp
mov
ja
daa
or
enter
dec
in
repz
mov
daa
xor
mov
inc
sub
pop
out
test
push
or
mov
das
out
rorl
out
sahf
add
stos
mov
repz
loope
mov
mov
mov
nop
pop
push
popa
outsb
pop
ficomps
pop
aam
out
xchg
and
push
pop
cli
mov
loope
inc
adc
repz
jmp
and
sub
xchg
mov
aam
add
pushf
insl
aas
cmp
and
mov
das
shlb
xchg
add
lret
and
push
cld
lods
push
andl
pop
jl
mov
rorb
add
jns
xor
lods
test
or
ljmp
data16
insb
testl
push
out
mov
cwtl
fsubrs
rorb
stos
push
xor
addr16
jb
shll
sub
pop
xor
inc
out
mov
add
dec
popf
call
lahf
cmpsl
inc
stos
xchg
orl
ret
gs
addl
cmp
in
out
cmp
mov
mov
mov
aad
out
add
cmp
and
xchg
mov
jp
rcr
pop
xor
in
test
loopne
jle
push
mov
out
test
jmp
or
adc
mov
test
fadds
fs
imull
mov
fcoml
lds
aam
jle
jg
nop
je
arpl
xor
lods
negl
and
aam
pop
addr16
push
dec
adc
mov
test
xor
jno
xchg
add
push
push
pushf
xchg
iret
insb
adc
and
pop
sub
xor
jbe
clc
rorb
sub
enter
test
cli
lret
aas
mov
mov
inc
testb
jb
sub
movsl
inc
stos
pop
out
lds
or
and
std
jl
add
ret
push
mov
adc
call
dec
add
int3
or
ljmp
das
fstps
pop
mov
jle
cld
clc
xchg
xor
int3
fsts
or
daa
pop
jmp
sti
dec
or
pop
je
cmp
stos
in
lahf
cmp
arpl
dec
data16
xchg
aas
push
pop
ss
scas
push
dec
and
mov
jbe
mov
dec
loope
xchg
cmp
mov
enter
loope
bound
sbb
rcrb
dec
ljmp
pop
xchg
loop
sbb
xchg
cmc
cltd
movsb
mov
sub
cli
insl
repnz
js
fcmovnb
orb
mov
test
ret
adc
and
les
das
mov
and
xchg
mov
fildl
pop
sbb
cmp
jp
int3
ss
outsb
xlat
add
les
js
pop
push
pop
btr
cmp
sbbl
dec
mov
jnp
in
ret
std
das
mov
cmpsl
add
cmpsb
out
xor
xor
mov
mov
jle
push
fld
aaa
add
stos
insb
repz
aas
je
push
cmp
loop
adc
es
dec
cmp
popf
scas
xor
imul
inc
cmp
aaa
and
or
fcomp
loope
testl
mov
in
xchg
push
mov
dec
inc
test
andl
xchg
loopne
jae
xchg
mov
pop
fs
push
add
jle
addb
in
push
push
add
into
movsb
dec
sub
mov
cli
fs
adcl
mov
or
lds
in
sbb
lods
shrb
mov
jge
jns
outsb
or
daa
cmp
or
xchg
xor
jmp
dec
xor
mov
add
xchg
clc
mov
xchg
clc
add
iret
nop
test
or
in
js
test
push
mov
xchg
push
cmpl
es
enter
mov
sti
testl
jo
ds
or
push
sub
push
cld
test
or
ss
xchg
fcoml
pusha
mov
fmul
cmp
xchg
out
push
das
imul
shrl
sbb
sbb
pop
cld
das
mov
pop
popa
xchg
xor
ret
ja
or
push
ret
fists
sbb
adc
out
xchg
leave
fdivl
dec
std
jb
ret
sub
mov
loope
adc
fnsave
fwait
shl
std
loop
push
int3
outsb
into
cmpsb
inc
push
es
imul
pop
bound
cs
loopne
and
sbb
cmp
scas
xlat
jne
ret
mov
jb
or
notb
and
lock
push
into
leave
fsubs
push
adc
ss
jmp
inc
daa
sti
lea
inc
push
mov
pop
dec
adc
sub
lods
push
out
and
mov
sbb
xor
popa
mov
popa
add
and
pop
in
dec
pop
clc
cmp
pop
jp
mov
imul
adc
nop
aas
jmp
pop
xor
movsb
popa
lods
and
jecxz
jp
enter
dec
mov
push
sbb
pop
in
pop
in
mov
test
and
xor
int3
pop
xor
mov
cld
pop
sbb
inc
cmp
rcrl
mov
add
jp
test
and
test
push
push
les
xchg
cmp
cmp
sbb
insb
nop
dec
pusha
and
stos
push
roll
leave
or
sub
dec
dec
fs
out
mov
xor
pop
add
or
jle
mov
jle
dec
xchg
sbb
push
cmpb
cld
mov
or
fbld
fldl
push
lret
jg
sub
fidivl
adcl
das
sbb
add
push
into
inc
fucom
int3
sub
pushf
imul
rorl
mov
leave
dec
popl
sbb
imul
mov
popl
pop
adc
push
push
or
and
mov
push
adc
jge
add
pusha
lahf
inc
mov
adc
scas
das
mov
scas
mov
call
ljmp
inc
sbb
push
stos
punpckhbw
pop
xlat
xchg
les
mov
mov
mov
cli
pop
divb
je
xchg
les
mov
inc
lea
and
sub
sbb
and
pop
andb
arpl
test
mov
dec
add
xchg
xor
dec
sub
mov
movsb
cmp
fisubl
rcrl
jnp
jnp
pushf
outsl
mov
pop
sub
pop
xor
addr16
xchg
es
adc
mov
shll
add
inc
and
lds
adc
mov
ljmp
jae
mov
cmp
popa
mov
sti
cwtl
mov
sub
inc
aas
add
bound
xor
sub
lds
push
xchg
test
xor
setb
dec
add
mov
pmulhw
mov
into
inc
add
lea
gs
add
dec
add
fidivs
jb
movd
push
pusha
push
sar
sti
push
icebp
and
lds
xor
fcoml
and
jecxz
push
idivb
icebp
fidivs
ds
jnp
add
sahf
mov
cmp
and
andb
and
fsubs
out
ss
pop
mov
aas
dec
mov
lock
in
aas
mov
in
mov
sahf
je
loop
mov
fstpl
hlt
pop
xor
in
lods
add
in
or
mov
mov
ja
mov
sbb
lea
jg
jge
ret
pop
lret
sbb
mov
mov
ja
lret
and
shl
insb
sub
jl
xchg
dec
inc
xchg
fimull
sbb
or
mov
cld
inc
popf
cwtl
mov
mov
adcl
aaa
jge
insl
test
jl
jecxz
ret
pop
movsl
or
movsl
fadd
xor
imul
jne
pop
ss
adc
movsb
sub
push
punpckhwd
lcall
push
sbb
xchg
sahf
jp
or
dec
dec
outsl
outsb
int
jp
popf
or
fdiv
out
dec
push
lds
inc
movsl
inc
adc
cmpsb
xor
cmp
enter
js
popa
in
sbb
add
mov
fwait
inc
fimuls
mov
dec
push
add
mov
sub
out
sar
xchg
repnz
sbb
fwait
mov
pop
aam
je
stos
mov
pop
insl
adc
mov
out
fists
stos
mov
aaa
int3
mov
xchg
xchg
jae
push
in
pusha
jmp
pushf
loopne
rcrl
or
lods
cltd
cmpsb
xor
rep
icebp
cmp
cmp
inc
or
jo
mov
mov
inc
jae
mov
lea
setge
jbe
adc
adc
fsubrs
popf
popa
shlb
cs
negl
sbb
pop
cmp
fdivs
clc
or
push
sbb
nop
mov
sbb
pop
dec
mov
or
mov
bound
movsl
iret
inc
fwait
aaa
or
sbb
xlat
adc
pop
add
rcll
xor
mov
rcll
hlt
and
cli
stos
fiadds
pop
aaa
or
fadds
out
adc
int3
push
ljmp
pop
shrd
out
scas
jnp
pop
in
aaa
sub
mov
out
cmpsb
sub
stos
outsl
mov
fwait
jl
sbb
dec
xchg
hlt
lods
and
sub
pop
inc
pop
sahf
dec
jg
jbe
int
push
and
lret
iret
xchg
ja,pn
sahf
lahf
cli
adc
xchg
jp
fucomi
adc
push
fimuls
lcall
dec
lods
mov
out
pop
sbb
xchg
xlat
xor
orb
sarb
out
sarl
insl
adc
rcr
scas
cwtl
push
xchg
jns
push
dec
xlat
dec
jne
loopne
mov
repnz
push
stos
pop
gs
mov
push
fimull
xor
sbb
add
test
inc
lods
stc
int
sbb
call
lea
loop
adc
sbb
and
cmpsl
lock
fcoml
mov
mov
xor
les
fs
jnp
sarl
cmp
fdiv
push
lds
and
mov
cmpsl
ss
stc
push
jle
sbb
jmp
imull
cmp
jno
cmpsl
mov
test
arpl
sub
stos
int3
inc
idivb
dec
sahf
lahf
mov
das
idiv
lock
pusha
jle
mov
fisttpl
pop
mov
ficomps
push
mov
pop
scas
pop
lret
mov
dec
repz
cli
xor
pandn
jmp
adc
mov
sub
xchg
stos
scas
dec
add
add
jae
jno
sbb
into
arpl
mov
cmp
xchg
cwtl
add
add
mov
shlb
insl
jb
mov
call
mov
mov
ret
inc
jge
cmc
imul
int3
cmp
mov
shll
ret
add
mov
cltd
cli
xchg
inc
out
fidivs
loop
dec
fildl
push
dec
dec
popa
arpl
inc
pop
xchg
scas
pop
inc
call
lahf
lret
mov
imul
fmuls
shrl
adcl
or
sti
outsb
jg
mov
or
fnstsw
sbb
addb
dec
xor
mov
frstor
sarb
pop
pushf
pushf
push
insb
dec
movsb
cmpxchg
imul
daa
dec
aam
xor
ficomps
sub
pop
xchg
pusha
leave
int3
loop
xlat
dec
mov
adcb
fsts
jns
loop
push
ljmp
inc
imul
stc
imul
xchg
push
inc
fsub
dec
cltd
int
sbb
xchg
jns
std
je
fadd
and
cli
jmp
mov
mov
push
stos
imul
inc
fnstcw
xchg
jae
std
aas
cmp
and
test
imul
stos
loope
xchg
arpl
pop
repnz
add
sub
out
mov
mov
inc
cmp
dec
cli
jns
jne
out
outsl
movsl
pop
pushf
or
lret
rorb
xchg
push
stos
pop
cmpsl
mov
int
jmp
bound
jae
test
sub
xchg
daa
ret
je
jp
push
cs
pop
pop
jp
or
cmp
mov
mov
iret
out
mov
fnstenv
test
iret
loope
xchg
push
roll
and
lods
mov
add
ret
and
stos
int
frstor
or
xorl
add
xchg
lret
out
xchg
addr16
cmp
ret
mov
mov
pop
and
push
lahf
fisttpll
cwtl
les
pop
push
jo
js
push
cmp
or
mov
xchg
fs
and
loopne
clc
or
repz
imul
jecxz
addr16
sub
jp
out
xchg
icebp
pusha
dec
fisttpll
orl
stos
pushf
mov
dec
push
and
inc
push
xchg
lds
repnz
push
repz
int3
sub
addl
pop
xchg
out
sbb
mov
mov
or
or
mov
in
and
add
jne
pop
jge
add
mov
jmp
inc
cmc
insl
cmpsb
ja
lcall
gs
lcall
mov
in
fnsave
repz
xlat
cmp
adc
mov
scas
jns
xlat
rorl
mov
test
and
dec
jmp
xchg
mov
dec
inc
or
and
iret
mov
shll
sbb
and
ficoms
fcomip
mov
lahf
push
and
fs
cmp
xor
fistl
cmp
stos
push
int
jnp
in
pop
aad
adc
mov
dec
fcoms
mov
out
jl
xchg
jg
push
adc
mov
push
pop
mov
adc
fs
ret
lcall
pusha
sub
push
pushf
xor
aaa
sub
arpl
xchg
js
adc
adcl
ret
jl
push
mov
sbb
xor
fwait
and
insl
inc
test
lret
aad
dec
imul
pop
call
cmp
out
xchg
neg
in
int
clc
sarb
sti
lahf
fwait
outsl
dec
in
imul
xchg
cltd
enter
push
scas
call
aam
add
sub
xchg
mov
rorl
or
cmp
iret
mov
nop
stc
ljmp
pop
test
shlb
push
dec
out
sahf
mov
lods
and
iret
mov
sub
push
mov
mov
push
sub
add
or
cltd
and
test
fdivs
lock
clc
rcll
mov
aad
cltd
test
ss
pop
mov
test
dec
or
jae
push
scas
je
jmp
push
inc
sarb
clc
aas
jnp
pop
int3
int
ljmp
mov
sub
xor
push
and
and
ss
pop
sbb
cmc
xor
jmp
adc
sbb
dec
leave
mov
imul
cmp
sbb
and
xor
je
mov
sbb
mov
sahf
sbb
inc
dec
push
mov
fimuls
pop
cld
jmp
push
mov
xlat
repz
shll
aad
jne
mulps
ja
inc
clc
or
pop
mov
outsl
pushf
rclb
pop
ss
sbb
sar
jecxz
outsb
mov
and
das
imul
stos
je
dec
es
adc
fstl
sahf
jb
daa
or
cwtl
fsubrl
fmuls
sub
rorb
mov
aas
movsb
push
mov
fcoms
mov
imul
iret
mov
adc
pop
out
sbb
add
xchg
scas
test
mov
inc
repz
in
popa
inc
ret
mov
fadd
lret
popa
in
push
push
outsb
push
in
add
or
sbb
outsl
ffree
dec
fisttps
fcmove
stos
and
xor
mov
cmp
adc
add
add
push
inc
lret
cs
je
or
ds
int3
frstor
popf
sbb
lret
and
push
mov
gs
insb
push
sbb
pop
mov
lds
shll
sub
stc
add
sbb
ret
lock
mov
jnp
lods
into
loopne
cmpsl
mov
inc
lahf
adc
mov
sbb
gs
xorb
fsubrl
andl
ds
rorb
adc
stos
push
out
lods
mov
xor
mov
into
sahf
int
cmpsl
add
xor
dec
aad
xchg
mov
or
adc
fnsave
pop
imul
pop
mov
loopne
push
rcrb
sahf
insb
mov
leave
test
aad
bnd
orb
push
add
inc
push
int
test
cmp
movsl
das
test
mov
sub
sub
sub
cwtl
pushf
in
pop
lret
bnd
push
push
mov
lock
mov
pop
jo
ds
shrl
inc
lret
add
or
ret
xchg
mov
xchg
jno
inc
aaa
mov
sbb
jno
fwait
mov
push
sbb
stc
iret
dec
jl
rorb
cmpl
mov
ficompl
or
push
lahf
adc
push
insl
or
cli
jne
fidivrl
mov
outsl
sahf
sti
lds
jo
mov
sub
cltd
bound
pop
outsl
jo
sbb
loop,pn
add
ja
inc
mov
xchg
and
les
xor
ljmp
pop
sbb
and
xor
mov
cmp
out
loopne
xor
or
aaa
xor
fdecstp
jo
mov
js
xor
sub
test
arpl
xchg
nop
pop
xchg
outsl
cltd
mov
test
and
insb
push
notl
inc
jnp
cmp
lcall
test
push
cli
xor
jmp
pop
push
lds
mov
insb
movsb
mov
sbb
sarb
mov
sahf
outsb
popf
cmp
push
lods
mov
sbb
js
lcall
scas
xchg
push
das
out
mov
movsb
sbb
incl
pop
mov
fadd
pop
xchg
out
mov
push
rsm
out
inc
mov
push
sbb
stc
pop
jb
test
lds
sub
hlt
lret
lahf
pop
scas
sbb
or
adc
sbb
jns
dec
xor
dec
mov
dec
and
dec
xor
jge
test
mov
jb
icebp
or
aam
nop
insl
xchg
in
mov
xor
jns
sbbb
rep
adc
sub
jg
cmp
mov
and
scas
jp
jno
cmpsb
lds
cmp
or
sbb
rorb
cltd
test
lret
add
in
jmp
cmp
insb
or
xchg
shl
adc
or
mov
sub
int
adc
mov
orl
scas
out
repz
mov
pusha
stc
pop
loop
fs
lea
lret
icebp
mov
adc
sbb
pop
dec
loop
mov
fisttpl
es
les
mov
mov
push
jns
das
fmulp
outsl
mov
mov
dec
imul
push
push
mov
cwtl
mov
hlt
ljmp
cmp
ja
push
push
cwtl
cmp
test
int3
mov
mov
sbb
aas
stos
xchg
push
out
movsb
push
lcall
fstpt
xchg
call
sub
std
or
outsb
add
jns
mov
mov
mov
xchg
mov
les
sub
sahf
jmp
cmp
add
pusha
push
inc
inc
incb
adc
test
inc
sbb
fwait
pop
repz
cld
inc
imul
arpl
fcmovne
pop
cmpsl
ds
cld
test
xchg
push
mov
inc
mulb
out
sub
mov
or
cwtl
lock
es
adc
inc
xor
loopne
and
sub
fstps
out
vminss
sbbb
mov
popf
inc
jg
decl
cli
push
frstor
or
ds
lcall
cmc
mov
add
pop
inc
call
xor
out
ret
ljmp
daa
or
mov
mov
xchg
dec
push
push
popa
in
ss
mov
nop
or
sbb
das
out
jg
fsts
mov
aaa
adc
mov
repnz
aaa
sbb
mov
test
fisubrs
out
cmp
je
pop
enter
movsl
mov
xchg
cmp
repz
das
mov
pushf
dec
jle
aaa
out
cmp
mov
jnp
and
fidivs
xchg
mov
pop
leave
ljmp
test
out
jecxz
out
cmp
inc
movsb
mov
idivb
out
jg
int
cmp
push
jp
dec
xchg
mov
sub
fsubl
or
cmp
xlat
inc
lods
cmpsl
stos
add
fs
pop
mov
loopne
pop
or
es
cmp
and
arpl
mov
jle
push
ja
scas
adc
pop
cmpsb
mov
ljmp
insl
movsl
mov
stc
inc
fists
adc
sub
gs
push
in
pop
movl
jne
xor
ret
in
pop
jno
pop
xchg
test
outsl
fs
push
push
inc
leave
lcall
jle
mov
jl
loope
dec
stos
sbb
ret
ret
fs
xor
outsb
push
sbb
adc
and
iret
mov
ljmp
xchg
inc
cltd
or
push
xlat
ror
xor
dec
sub
stos
insl
negl
cmp
stos
mov
lcall
mov
dec
repnz
adc
adc
jp
mov
and
add
or
mov
les
nop
out
or
shlb
inc
inc
jb
ss
sbb
mov
lret
gs
adcl
push
lock
std
jno
jnp
xchg
in
icebp
addr16
dec
popf
xor
test
push
outsb
out
lds
jp
nop
mov
jb
inc
pop
out
jne
lods
pop
aam
fidivl
mov
xor
lcall
pop
fwait
int
sub
fidivrl
inc
push
mov
mov
sbb
push
add
mov
out
push
inc
fbstp
mov
in
jb
jo
addr16
out
xchg
std
and
push
mov
nop
sub
push
jge
aas
xchg
mov
adc
jg
xor
xchg
xchg
xor
mov
test
pop
xchg
ja
adc
and
popa
sub
addb
mov
pop
stos
outsb
push
movsb
psubusw
pushf
lahf
cmpsb
lods
fdivrl
stos
fcmovnb
icebp
outsb
mov
or
lock
iret
cmp
and
jbe
stos
dec
and
inc
fyl2xp1
cwtl
fwait
inc
xchg
jnp
dec
jns
lods
add
jne
outsl
and
sbb
hlt
je
sub
insb
sub
loope
ret
sti
outsl
repz
pop
pop
inc
lock
xchg
rcr
push
sti
scas
sbb
jmp
xchg
push
dec
jnp
popa
inc
mov
push
fidivrl
jp
lock
popf
sub
mov
loop
lret
xchg
nop
inc
jge
mov
les
scas
into
cmpsl
and
push
sbb
mov
stos
dec
dec
out
les
sub
mov
mov
adc
fnstenv
mov
loop
jbe
fidivl
push
fisubs
jl
into
mov
mov
test
sarb
cmpsb
enter
jb
enter
test
stos
outsb
inc
jnp
les
dec
add
sbb
inc
out
imul
pushf
lods
aam
lahf
stos
andb
jl
popa
xorl
push
fidivrs
sbb
test
pop
cmp
push
mov
add
adc
add
fdiv
jmp
or
fstpl
jne
popf
outsb
andb
lds
push
mov
dec
imul
or
mov
psrlq
cmp
cmpsb
enter
add
push
and
push
and
aam
aaa
push
sub
or
xor
sbb
sbb
xchg
xor
xlat
push
lock
xor
adc
aad
pop
cmp
sbb
pop
sub
shrl
daa
nop
pop
icebp
jbe
xchg
xor
fisubrl
mov
mov
mov
aas
mov
jg
icebp
xor
ret
fadds
add
ljmp
cld
cmp
mov
daa
scas
cmpsl
jl
dec
lcall
lds
and
cmc
cmp
mov
or
cmpsl
andb
imulb
cld
mov
sub
inc
sub
mov
insb
pop
and
mov
out
nop
jnp
fwait
cmp
loop,pt
adc
jnp
sbb
lcall
dec
dec
cmp
mov
xlat
mov
or
movsb
pop
inc
repz
mov
mov
pop
rorl
iret
cmp
scas
stc
jbe
dec
lcall
inc
loopne
call
cvtps2pd
add
and
push
push
fnstcw
outsb
push
movsl
or
inc
push
push
sbb
aam
test
ret
cmpsb
mov
lahf
mov
mov
gs
cmp
inc
mov
cmp
or
mov
arpl
cld
aam
xor
rclb
int3
lret
sbb
andb
lea
sub
xchg
fcoms
pop
jge
inc
aad
push
gs
pop
dec
pop
icebp
mov
cmpsl
sbb
push
dec
sbb
mov
out
test
jge
add
xor
fmuls
pushf
jp
cmpsb
loope
and
sub
push
gs
out
fdiv
hlt
jae
cwtl
imul
push
lea
idiv
jg
outsl
rorb
inc
mov
int
aad
addr16
ss
scas
stos
mov
fistpll
or
sti
sarl
lds
mov
xchg
dec
in
sbb
out
ja
mov
jbe
addl
imul
adc
sahf
push
jp
imul
in
int3
rcll
and
push
sahf
in
scas
dec
mov
sbb
cmp
xor
loop
std
test
or
pop
xchg
cmp
sub
out
xchg
or
adc
jbe
sbbl
pop
push
shlb
sub
imul
inc
sbb
sub
dec
lret
pop
js
negl
iret
in
sahf
cld
or
mov
pop
fs
shrl
hlt
fs
aad
pushf
push
mov
sahf
shrl
push
rorb
push
and
adc
lret
test
ficomps
xor
push
adc
aad
mov
shll
ret
jmp
lods
sub
pop
mov
dec
or
clc
hlt
sub
fisubl
dec
repz
dec
cmpsb
clc
jl
jns
add
lret
clc
jns
loopne
push
popf
ja
sbb
cmp
cltd
cmpl
dec
pusha
cmp
fidivs
sbb
mov
ret
icebp
sti
dec
lods
pushf
daa
pop
mov
xchg
pop
pop
ds
lret
dec
push
js
aam
xchg
jl
add
scas
aam
add
fs
pusha
pop
andb
inc
mov
sub
sub
test
mov
mov
shll
movb
aad
and
sub
insb
inc
xchg
or
out
xchg
out
add
jae
adc
xchg
xchg
xchg
sbb
cwtl
test
dec
mov
sti
push
mov
jge
cmp
lahf
rolb
icebp
test
dec
pusha
pop
xor
dec
stc
mov
inc
inc
cli
stos
or
or
add
push
xchg
push
push
fidivs
mov
push
mov
pop
daa
loopne
aaa
lods
ret
movsb
xor
jl
inc
mov
jl
loop
cli
std
rorb
loop
popf
lahf
rolb
jmp
push
adc
or
ja
jnp
insb
and
xor
das
inc
out
std
movsl
stc
sar
jne
test
push
pop
xchg
xchg
mov
push
outsb
jo
sub
cmc
rcrl
jne
mov
adc
std
xchg
dec
rorb
mov
sub
aas
addr16
adc
jo
andb
xor
pop
add
xchg
jle
mov
push
fwait
popa
roll
fsubl
mov
push
push
mov
dec
es
pop
xor
mov
push
xchg
and
rclb
jecxz
inc
cmpsb
loop
mov
sub
sahf
mov
and
cmp
xchg
adc
lcall
adc
fadd
stc
popa
mov
imul
jae
sub
or
fs
jecxz
mov
sbb
jmp
roll
inc
add
icebp
sbb
inc
popa
lds
scas
mov
filds
push
xchg
sarb
fisubrl
in
cmp
cmp
lods
jo
sbb
fnsave
mov
ds
push
icebp
das
iret
ficoms
adc
mov
out
xchg
and
ficoml
out
movsl
push
popa
dec
dec
cmp
addr16
loop
or
and
jmp
adc
adc
sub
fildl
mov
push
mov
adc
pop
and
fstpt
dec
mov
sti
pop
or
cwtl
push
scas
xor
push
dec
cmc
inc
fsts
mov
adc
mov
or
ret
inc
adc
dec
aam
clc
xchg
orl
add
insl
ljmp
inc
jb
cwtl
js
or
adc
adc
pop
inc
subb
cmp
icebp
inc
lahf
ss
arpl
lods
xchg
cmp
cmpsl
adc
js
outsb
mov
dec
fyl2x
into
mov
enter
lret
scas
pop
int
repnz
push
sbb
inc
int3
fidivl
xor
in
cmc
sarb
lahf
push
ret
dec
clc
jge
inc
sbb
clc
xor
dec
aam
mov
popa
rcrb
jecxz
repnz
sub
ss
push
fnstcw
scas
cld
mov
and
in
jmp
inc
ss
xchg
cmc
dec
inc
sub
mov
test
inc
ret
pushf
arpl
xchg
lods
dec
adc
adc
mov
dec
adc
daa
or
lret
push
jb
sbbb
mov
roll
lahf
incl
mov
jle
insb
or
mov
dec
dec
scas
addr16
pop
mov
or
call
mov
pop
xchg
cmpsl
cli
sub
mov
dec
in
sbb
mov
fs
add
mov
sub
sbb
cld
je
and
cmp
jo
mov
js
push
and
jl
and
mov
add
pop
es
aad
ret
cmp
xlat
fs
xlat
movsl
mov
shll
and
mov
lcall
mov
cwtl
push
std
add
pop
xchg
pop
cmovp
push
lea
jecxz
fnstsw
movsl
je
imul
leave
shl
dec
inc
gs
jb
adc
aaa
vpmaxsw
push
insl
js
push
cmpsl
cmp
nop
jno
xor
pop
xchg
mov
pusha
js
xor
fstpl
stc
std
insb
and
outsb
inc
or
jo
fcomi
push
cmp
aaa
lahf
jae
and
mov
ja
push
addl
mov
iret
dec
enter
xchg
and
mov
sbb
test
sbb
cmpsb
fs
inc
jns
sahf
or
mov
jl
jmp
or
popa
dec
mov
icebp
cld
xor
mov
gs
and
push
pop
outsb
out
or
mov
fadds
sahf
xchg
jo
rclb
mov
fucomip
add
ret
das
mov
loopne
push
test
sbb
in
clc
fcompl
mov
push
inc
pop
in
mov
cmp
ret
mov
dec
stos
jecxz
js
mov
sub
test
stos
mov
mov
cld
pop
xchg
test
fwait
sub
negb
or
xchg
data16
push
into
push
add
mov
ja
in
push
xchg
sbb
cli
imul
je
mov
cmp
aam
jo
fsubs
sbb
mov
cmpsb
leave
lret
pop
mov
pop
xchg
es
add
ja
xchg
mov
xchg
sti
mov
pop
inc
notl
jmp
or
dec
cmpb
ret
jne
flds
add
push
add
enter
mov
xchg
xor
loop
jb
shlb
stos
cmpsb
jbe
movsb
sub
pop
ret
xchg
lods
jae
loope
cmp
and
lret
lahf
in
inc
lret
aam
test
mov
mov
inc
loopne
iret
mov
cwtl
jle
in
dec
cs
test
hlt
cmp
into
fimull
mov
popa
mov
xor
fwait
xor
popa
cmp
xor
mov
aam
es
jg
mov
xchg
xchg
mov
loope
cmp
pop
pop
pop
inc
and
mov
in
cwtl
jnp
test
cs
cli
push
dec
add
mov
shlb
test
sbb
and
mov
mov
test
lock
int3
mov
ja
push
push
mov
sarb
call
sahf
inc
mov
lock
fwait
push
fdivrl
xor
pop
repnz
sub
inc
adc
cmp
pop
mov
js
testl
and
adc
dec
pop
and
xchg
and
in
call
mov
mov
lods
cli
mov
and
mov
clc
aam
mov
pop
aad
cmpb
lcall
push
sub
jne
mov
lret
jne
cmp
jne
sub
mov
bound
and
sbb
std
inc
add
lock
lods
mov
test
jp
and
sbb
or
lock
dec
add
insl
mov
adc
iret
pop
aad
ret
mov
out
push
fmull
ret
loopne
xchg
and
jo
dec
jge
popf
aam
jecxz
addr16
sbb
rorb
stos
movsb
xchg
sbb
hlt
jae
jmp
mov
in
insb
xchg
xchg
xor
sub
mov
test
xorb
cs
mov
mov
imul
std
test
scas
mov
lds
adc
out
das
movsb
push
xchg
and
adc
cmp
sbb
aaa
out
mov
jnp
aaa
and
mov
jo
xor
test
xlat
cmp
mov
cmp
cmp
out
adc
fistpll
sub
nop
movsl
cltd
les
addl
fisttps
in
rclb
and
call
pop
ja
adc
test
les
aas
mov
mov
cmpsl
mov
fs
ja
out
lods
mov
addb
pop
leave
dec
jmp
ljmp
insl
mov
aam
das
mov
adc
sub
mov
lods
jb
int3
scas
sub
notb
xor
xor
push
sbb
or
sub
pop
jp
mov
popf
add
push
add
mov
dec
xchg
xchg
loope
mov
jge
stc
pushf
stos
adc
mov
ret
xor
loopne
jne
shlb
add
popa
xorl
dec
hlt
ljmp
hlt
push
jg
popa
mov
cmp
xor
or
in
loopne
xor
ljmp
dec
jmp
in
cmp
in
jecxz
inc
mov
adc
lahf
lods
pop
popa
aad
pop
and
mov
adc
fcom
inc
ljmp
sub
mov
in
jmp
jl
jno
or
jne
dec
xor
pusha
dec
scas
xchg
xchg
fadds
adc
test
ror
rclb
xor
cmp
jno
jae
fidivrs
fcmovne
in
es
jl
sub
mov
std
mov
or
jbe
add
popa
popa
lret
cwtl
xchg
sub
dec
sbb
mov
or
test
jmp
scas
enter
idivb
push
in
cmp
pop
stc
shlb
imul
test
sbb
aas
cli
test
xchg
sti
jg
popa
in
mov
adc
nop
mov
mov
negb
lret
out
lret
das
aam
dec
push
leave
in
jb
jne
and
dec
test
push
sbb
stos
or
icebp
sti
sub
popf
cmp
mov
fsubr
into
shll
sbb
xor
adc
mov
or
push
test
push
xor
push
xor
inc
dec
pop
or
iret
xchg
lahf
sarb
dec
movsl
xchg
sbb
fmulp
mov
inc
test
push
mov
stos
insb
cltd
inc
jle
sub
xchg
mov
stc
fimuls
sub
dec
mov
ljmp
dec
cmp
jp
repz
test
add
and
flds
shll
push
popa
cmp
jg
cmp
and
and
xchg
stos
pop
jl
aad
sete
adc
mov
inc
adc
clc
jbe
mov
dec
mov
into
inc
rcrl
pop
inc
jae
xchg
or
adc
dec
pushf
fstps
xchg
push
clc
outsb
pop
fs
sti
xor
jge
pop
fisubs
pop
loop
cmp
scas
cli
stos
aaa
push
dec
imul
xor
dec
inc
pop
mov
ret
and
fisubrs
popa
xor
push
sbb
lret
daa
sub
or
xor
loopne
lret
or
mull
or
das
clc
ss
mov
leave
push
rcll
or
sahf
dec
adc
or
mov
xor
dec
xor
sub
and
push
and
cmp
adc
in
cli
add
mov
sbb
dec
bound
jg
mov
mov
dec
sbb
jl
fs
xlat
int
or
sub
mov
stos
sub
jne
inc
jg
mov
push
lret
cmp
mov
dec
in
imul
das
push
add
rol
inc
mov
jp
cmpsb
mov
adc
or
adc
fbstp
inc
push
mov
xchg
mov
imul
mov
cmp
and
sub
out
repz
sbb
daa
rcll
roll
jp
dec
shll
cmc
push
stc
pop
decb
roll
dec
mov
jecxz
push
or
mov
cld
dec
mov
int3
pop
or
xor
pop
mov
mov
fstpt
or
js
das
and
mov
or
vrsqrtss
lods
aad
cwtl
add
sbb
adc
stos
lahf
mov
sbb
cmp
negb
test
ds
jmp
and
int3
lret
movsb
lods
jnp
inc
dec
jns
data16
ja
sbb
add
scas
xchg
test
sbb
inc
pop
js
call
sub
das
out
movsb
cld
fisttps
sti
leave
lods
and
pop
pop
push
xor
subb
xchg
insb
enter
in
jbe
mov
movsl
ds
iret
pop
ror
insl
test
xor
xor
leave
jp
mov
pop
fwait
mov
addr16
pop
xchg
jp
gs
dec
iret
mov
pushf
pop
test
test
cmc
shrl
xlat
cwtl
sbb
cwtl
mov
mov
mov
ss
dec
das
pop
nop
lods
push
loop
je
rclb
dec
dec
cltd
sub
pop
int3
push
mov
add
mov
adc
pop
push
push
out
mov
pop
xchg
mov
or
leave
je
popa
aam
fwait
cmp
hlt
jge
lret
gs
fldcw
push
and
loopne,pn
pop
test
pusha
jne
out
adc
mov
pop
es
loop
in
dec
cmp
loopne
add
inc
xchg
pop
outsb
inc
xchg
mov
adc
pop
sub
in
test
loope
pusha
imul
ret
jae
stos
sbb
hlt
cmp
mov
rcll
adc
cwtl
cmp
inc
arpl
insl
sub
mov
jmpw
mov
push
negl
or
jne
je
sub
lods
test
sub
mov
sub
sub
popf
or
rcr
jg
rorb
test
test
outsb
iret
inc
jmp
scas
inc
ss
lcall
cmc
cwtl
push
insb
inc
out
jo
push
dec
rorl
sbb
pop
out
mov
test
pop
fcoml
dec
ret
sub
mov
js
rsm
or
inc
mov
cmc
ja
or
pusha
ret
lods
add
nop
cs
popf
mov
or
mov
lahf
gs
outsb
pop
inc
xorb
movsb
lret
sub
sahf
mov
xor
inc
fbld
int3
fs
xor
ss
aam
pop
or
dec
ss
adc
or
or
pop
push
call
xchg
mov
push
lea
mov
ds
inc
pushf
dec
xchg
scas
hlt
in
push
movsb
push
dec
scas
jg
push
adc
jge
call
push
xor
jo
or
call
inc
loopne
cli
nop
subb
fiaddl
mov
mov
jmp
mov
mov
pop
popa
push
xor
outsb
pop
cmp
aaa
shlb
mov
ja
cltd
into
dec
pop
rcll
loope
mov
out
push
loopne
nop
cmpsl
xchg
add
jp
loop
loopne
int
or
jle
pop
mov
mov
stc
add
pushf
adc
ds
or
and
cs
orl
adc
int
xchg
stos
dec
push
mov
sahf
or
dec
sbb
pop
negb
sbb
jle
adc
xchg
push
cmp
arpl
pop
aad
add
jae
dec
mov
push
stos
push
push
push
icebp
into
rolb
mov
sub
setg
jnp
pop
pop
inc
dec
mov
xor
in
test
or
cltd
or
mov
mov
jae
popf
fadd
idivb
xor
push
push
into
fbld
movb
inc
xchg
lods
data16
pop
sahf
ret
movsl
jg
fwait
cmp
popa
xchg
or
sub
mov
mov
push
cmp
testl
xorl
push
imul
sbb
push
cs
in
enter
dec
rolb
and
and
push
fisttps
mov
lret
jecxz
add
adc
mov
fildl
and
xchg
xchg
inc
dec
hlt
orl
pop
jne
jge
push
xchg
pusha
or
xchg
cmp
out
jge
pusha
xchg
inc
fists
and
xchg
adc
loopne
fisubrl
lret
outsb
cmp
repz
cli
jno
sbbb
imul
push
xchg
jae
filds
lret
push
sub
and
iret
sub
push
and
xlat
mov
jae
repz
pushf
cs
lret
dec
cmp
stos
mov
hlt
push
fs
push
pop
jmp
test
lea
mov
cmp
or
mov
mov
dec
xchg
test
jge
movsb
adc
loop
mov
mov
test
lock
lds
or
int
jl
mov
jmp
jmp
stos
inc
cld
cmp
fists
jg
stc
mov
sub
dec
nop
and
minps
pop
push
cli
cmp
fdivrl
xchg
aad
dec
stos
test
sub
push
outsl
cmp
adc
scas
mov
push
dec
fisubl
pusha
push
cmp
ss
lods
fstpt
movsl
test
int
sti
fsub
sbb
loope,pn
pop
dec
jb
stc
jge
cmpsl
mov
movsb
out
lret
lcall
mov
ds
mov
xchg
out
fcmovnu
mov
dec
bound
mov
mov
mov
jbe
push
add
dec
lret
mov
pop
out
cmp
pop
into
or
test
movsl
inc
nop
out
lret
mov
std
lock
sbb
adc
pop
clc
pop
add
fldcw
inc
lock
dec
cld
mov
mov
and
push
mov
push
cmpsb
ds
push
ret
call
mov
inc
scas
lahf
lahf
data16
add
aad
iret
xchg
popf
stos
call
into
sarb
orl
sbb
mov
lods
decb
sbb
stc
pop
int
dec
leave
jb
xchg
insb
push
push
adc
adc
out
push
or
ret
pop
cmp
cmp
pop
sub
clc
cmp
jno
ljmp
and
clc
add
dec
dec
xchg
mov
mov
jns
loopne
lock
gs
jo
stos
xlat
pop
test
xchg
push
stos
mov
out
and
push
fadds
or
clc
adc
push
stos
inc
or
bound
outsb
mov
xor
lahf
and
test
mov
in
jle
es
and
mov
pop
add
ljmp
ljmp
aam
scas
and
pusha
jl
fisubrs
or
mov
cwtl
outsl
inc
call
jb
inc
scas
nop
cmpsb
movsb
sub
pop
xchg
out
push
xor
js
xchg
data16
adc
push
repnz
into
stos
and
andl
mov
out
subl
mov
sbb
aaa
push
and
xchg
dec
faddp
lea
mov
jno
dec
aam
les
and
xchg
repnz
fldenv
enter
ja
cltd
ljmp
lret
jne
and
ret
ret
pop
jle
ljmp
clc
pop
jmp
leave
fdecstp
dec
add
push
mov
jbe
mov
xor
adc
push
shlb
lcall
je
pop
and
pop
add
sub
imul
test
fstl
and
mov
stc
stos
adc
jnp
ret
add
or
jl
test
fsubs
push
lea
and
and
insb
adc
cld
mov
pavgw
pop
iret
sub
cmp
pushf
inc
fldt
aas
aaa
jb
or
in
addr16
dec
mull
scas
jno
jle
jae
popf
xorl
imul
std
jmp
xchg
lret
outsl
xor
push
mov
shll
hlt
xlat
jne
adc
dec
out
push
mov
loopne
in
scas
fwait
jbe
add
lods
loope
push
test
add
cs
inc
mov
and
inc
nop
mov
and
lea
sub
inc
iret
and
and
xchg
push
dec
pop
pop
cmpsb
adc
pop
imul
jle
loopne
fiadds
inc
push
inc
pop
cmp
adc
pop
mov
ss
mov
insl
jo
mov
gs
cmpsl
pop
shll
or
in
lea
fsubp
aam
loope
cmpsl
fstps
cmc
xchg
push
test
leave
fwait
xchg
xor
out
aaa
pop
pop
xchg
sub
push
dec
jne
xchg
jno
ds
call
push
fildl
xorl
adc
cwtl
jnp
mov
inc
mov
xor
loope
out
imul
add
icebp
andl
mov
aam
push
jmp
xor
out
and
fmul
sub
add
xor
sub
xchg
mov
je
pop
mov
in
jle
subl
add
enter
movsl
pushf
sub
jne
in
jns
repz
shlb
and
fbstp
aad
test
jge
jge
sarb
pop
mov
xchg
out
mov
negl
xor
and
jo
lret
movsl
stos
mov
iret
out
or
cmc
or
mov
outsb
insb
fdivrl
lods
xchg
in
addr16
ret
pushf
sub
push
repz
gs
xchg
cld
popf
fsts
fdivrl
pop
mov
mov
test
xor
sub
std
add
and
iret
pushf
and
loope
ret
daa
dec
xchg
sbb
or
dec
mov
sub
pop
ret
inc
rcl
mov
cs
jg
sti
inc
outsl
jmp
es
pop
mov
xchg
cmp
fcmovu
js
mov
aaa
mov
popa
mov
inc
inc
or
pop
inc
jo
or
jbe
xor
lods
fiaddl
inc
in
mov
je
loope
dec
jecxz
int
jae,pt
push
stc
ret
lcall
add
repnz
imull
jae
mov
lret
mov
stos
mov
jmp
mov
aas
cmp
jp
mov
andl
xchg
cltd
inc
out
ret
jmp
jne
cltd
lods
fldenv
mov
cmpsb
push
fcoml
popf
fiadds
dec
lcall
out
lret
mov
sbb
sub
dec
orl
mov
mov
fucomip
scas
test
repz
mov
jecxz
dec
stc
cwtl
jge
dec
aad
test
jp
or
loope
test
xchg
sarb
ss
cmpsl
frstor
mov
dec
inc
push
jbe
pusha
mov
adc
push
add
sbb
lahf
mov
sbb
pop
push
mov
cmovbe
push
fiaddl
jbe
xor
in
test
xchg
arpl
inc
aaa
lahf
bound
cli
push
pop
cmc
or
pop
movsb
jecxz
inc
leave
int
sbb
sub
repz
mov
xchg
dec
shrb
into
xchg
jno
jg
push
jg
mov
clc
aas
popa
in
pushf
addb
jb,pn
cmpsb
inc
push
cmpsb
xchg
movsb
jge
jnp
mov
sbb
or
repz
fists
add
ret
pop
sti
inc
xor
cld
lea
fst
int
popa
movsl
or
xchg
hlt
jno
jno
sahf
iret
mov
inc
pop
call
mov
pand
out
stc
mov
mov
ss
outsl
jmp
dec
sti
sub
push
and
jp
adc
mov
push
cmc
push
leave
inc
push
cmp
stos
ror
sbb
or
int
push
mov
test
popf
mov
and
cmp
addr16
cld
notrack
and
push
sub
inc
es
fsubrs
lock
aas
pop
mov
adc
sub
rolb
ljmp
cmp
adc
ffreep
sahf
xor
sbb
pop
sbb
sub
xor
jg
xchg
sti
imul
pop
icebp
into
pop
mov
jo
add
mov
outsb
adc
or
pop
lret
xchg
out
and
xor
in
cmpl
rcll
mov
inc
jo
outsb
addr16
fnstsw
inc
push
xor
xchg
test
bound
sub
add
lret
outsl
inc
pop
mov
xchg
loop
mov
hlt
xlat
mov
adc
shlb
mov
mov
push
jg
mulb
xchg
dec
sbb
movsb
sub
imul
aaa
or
fdivr
imul
cmc
dec
outsl
hlt
loope
push
push
in
test
push
inc
out
inc
sbb
cmp
ret
mov
sub
lods
dec
dec
divb
sbb
gs
push
gs
dec
std
imul
call
mov
aad
and
int
cmpsl
inc
lahf
dec
fwait
dec
out
out
sub
clc
adc
xchg
push
xchg
dec
inc
sbb
js
fbstp
mov
jl
mov
call
fwait
mov
lock
hlt
add
iret
test
es
or
bound
or
dec
add
inc
mov
fdivs
in
mov
inc
in
int3
pop
cmp
cmp
xor
int
sbb
mov
push
or
dec
dec
fisttpll
jae
push
mov
lock
or
mov
push
or
mov
pop
xor
sarb
dec
mov
push
fistpl
ret
mov
sbb
into
or
sub
insb
dec
add
mov
insl
clc
nop
scas
add
aas
dec
pop
mov
jb
xor
cmp
mov
popf
test
xchg
fisubrl
jp
out
xchg
mov
xchg
sub
stc
int
mov
loop
adc
dec
and
mov
push
push
mov
fbstp
icebp
push
or
fildl
lods
btr
lahf
adc
or
mov
aas
addr16
imul
aas
es
cmp
arpl
in
xchg
lret
and
dec
shrb
in
pop
adc
jns
or
mov
enter
xchg
scas
and
test
movsl
imul
iret
adc
dec
jb
add
test
mov
mov
and
cmp
jo
iret
add
mov
add
jns
pop
test
stos
jo
and
shl
push
add
lods
xor
hlt
inc
dec
xor
popf
or
mov
andl
fucomip
fnsave
iret
arpl
push
dec
pop
out
pop
das
aam
bound
out
dec
aas
addr16
test
fidivrs
cmp
mov
lret
mov
push
push
mov
out
stc
jb
sbb
sub
call
loop
cvtpi2ps
leave
push
fnsave
push
scas
stos
sub
ficompl
fs
lea
outsb
push
sbb
sti
mov
hlt
les
xchg
sub
push
int
jl
test
xor
xchg
daa
xor
lcall
cmp
jge
aaa
test
jle
fs
or
lods
push
negl
insl
xor
push
ds
insl
subl
xor
mov
pop
sub
mov
aam
rorl
enter
sbb
sbb
lods
sbb
mov
lods
adc
pop
mov
mov
insl
jl
jbe
out
push
arpl
dec
xchg
stc
push
sbb
add
or
sbb
loopne
fstpl
daa
jnp
enter
ret
mov
pop
inc
fildll
lea
lea
mov
rcll
push
mov
stc
sub
js
or
insb
adc
test
cmp
insl
cmp
dec
jb
inc
shrb
sub
inc
inc
out
cmpsl
ret
or
push
xchg
mov
jne
test
aad
mov
daa
mov
stos
subl
iret
pop
ds
pop
in
fsubs
xchg
xor
int
fs
fsts
jns
ja
push
xor
out
ljmp
sub
enter
xorb
xchg
xor
daa
arpl
fldcw
rcr
cwtl
pop
popf
sub
sarl
scas
or
cmpsb
ret
in
les
cmp
imull
sbb
mov
xor
sbb
das
mov
and
in
iret
mov
sbb
es
jae
dec
fwait
cs
mov
mov
ret
adc
test
rolb
adc
nop
inc
shr
xchg
aas
scas
clc
mov
sbb
cld
data16
imul
mov
mov
push
ja
addl
xchg
xor
push
mov
pop
inc
cwtl
inc
and
lods
mov
lea
ficoml
pop
push
fwait
aas
jecxz
xlat
adc
cltd
dec
jae
js
or
in
in
ret
cli
pop
imul
lock
and
sbb
test
dec
sbb
or
loop
mov
push
test
mov
push
rolb
and
and
mov
cmp
dec
pop
pop
add
mov
cld
in
cli
mov
mov
xchg
mov
in
mov
stc
repz
mov
test
jbe
sub
xlat
dec
bound
cmpsb
orb
push
fstps
lds
lret
push
stc
cmp
sbb
and
or
mov
jns
out
stos
seto
into
pushw
sbb
push
inc
xchg
mov
inc
inc
addr16
or
sub
xchg
jg
xchg
jne
adc
fucomp
jns
dec
inc
sti
cld
test
mov
jge
mov
mov
dec
lds
subb
lods
bound
xor
aam
inc
les
sbb
clc
into
cmp
adc
popf
int3
mov
xor
sub
pop
and
adc
xor
and
mov
ja
loop
mov
mov
jmp
xor
xor
sub
and
nop
stos
mov
les
xlat
out
in
xchg
mov
icebp
adc
xor
int
jp
push
ficompl
add
lret
fsubp
outsb
neg
push
ret
and
dec
sti
cmp
arpl
mov
xchg
sets
out
js
inc
cld
ror
es
cltd
orb
fwait
sub
push
pop
lcall
pop
stc
inc
dec
pop
loop
leave
xor
xor
das
and
cmp
xor
std
xchg
aad
jae
jp
add
imul
pushf
adc
add
lea
cs
dec
ja
gs
fldt
shll
sbb
call
add
lds
aaa
test
cmp
add
call
pop
popf
push
lcall
cmp
aad
ror
test
rorb
mov
shlb
pop
mov
mov
js
out
mov
and
push
mov
xchg
add
xlat
xor
rcr
clc
cli
mov
lret
jle
mov
mov
fwait
js
adc
jo
aas
and
daa
add
sahf
or
sets
aam
std
push
xchg
push
pushf
mov
imul
cmp
push
pop
sbb
xchg
cmpsb
imul
pop
add
dec
inc
mov
in
andb
xchg
cmp
imul
imul
mov
push
arpl
out
mov
or
popf
push
cmp
sub
mov
sbb
mov
in
adc
lds
or
mov
adc
xchg
xor
push
mov
ljmp
dec
dec
jg
mov
fstl
lcall
out
dec
jnp
jp
mov
in
mov
xor
loopne
scas
add
sti
push
rcll
or
and
fildl
lahf
pop
pop
xchg
ljmp
push
jp
vpmacsdd
out
jecxz
xor
pushw
adc
ja
jecxz
jns
mov
pop
bound
fistpl
push
sub
cmp
sub
stos
sub
add
sbb
clc
sbb
xchg
dec
mov
mov
push
pop
or
push
jl
jg
ja
inc
sarb
outsl
adc
inc
repz
mov
cwtl
pop
sub
add
lret
addr16
or
das
xchg
xor
das
rcll
xor
jl
pop
push
mov
xor
int3
sahf
inc
push
fimuls
mov
outsl
dec
fldenv
scas
shlb
ficoml
les
dec
cmp
xchg
sub
xchg
lea
adc
xchg
lcall
push
push
in
cmp
leave
inc
int3
inc
sbb
adc
cmc
push
sbb
rorb
pop
mov
mov
fidivrs
cs
jp
mov
mov
iret
mov
mov
add
lds
nop
adc
out
sub
mov
mov
and
dec
shrl
xor
pop
xor
adcl
add
pushf
cmp
lret
mov
xor
in
fists
dec
adc
sbb
mov
imul
sub
cmpsl
mov
repnz
nop
xchg
cli
in
nop
inc
js
imul
jmp
xchg
dec
rclb
rcrl
dec
adc
jle
cwtl
or
push
in
cmp
sub
decl
lods
js
divl
shl
mov
ja
fcoms
or
mov
fmul
loopne
dec
std
sbb
pop
xchg
dec
cmp
and
mov
fwait
ret
out
pop
mov
pop
lret
inc
push
or
mov
ret
mov
xchg
iret
je
loopne
cmpsb
mov
in
jecxz
mov
xchg
mov
push
mov
push
fwait
bnd
jp
xor
xor
fwait
mov
sbb
mov
jno
pop
mov
push
pop
sbb
mov
cmp
adc
movsl
fcoms
dec
scas
lret
adc
push
lds
test
mov
sub
mov
cmp
pop
sbb
std
lret
add
outsl
jns
push
psrlw
lret
pop
and
push
xlat
call
mov
insb
inc
add
push
xchg
idiv
add
test
daa
push
movsb
das
push
shrl
gs
pop
sbb
adc
cmpsl
jbe
cli
sbb
andl
fdivs
sub
outsl
xchg
sub
nop
sti
add
in
sub
mov
pmuludq
mov
cmpsl
movsb
lahf
or
lret
inc
xchg
pop
add
divb
movsb
push
dec
std
test
or
inc
pushf
std
in
push
pop
pop
mov
jb
loope
mov
shlb
outsb
xchg
jnp
popf
filds
jl
push
leave
adc
xchg
lods
shrb
scas
dec
xor
dec
arpl
int
roll
sub
pop
pop
sbb
mov
pushf
pop
ljmp
lret
xor
stos
push
in
push
test
inc
outsb
mov
dec
or
pop
pop
dec
mov
add
ljmp
cmpsb
rcrb
adc
sub
lcall
adc
mov
ds
or
mov
jne
xchg
adc
or
sbb
jnp
pop
lods
mov
push
dec
xchg
xchg
dec
lock
jb
jmp
sbbb
mov
jecxz
mov
aas
je
scas
jbe
pop
mov
cld
ror
mov
loop
cmp
xor
movsb
adc
pop
jle
cs
je
jmp
dec
xchg
jmp
out
cmpsl
std
ja
test
ja
jmp
sbb
ret
add
adc
or
adc
adc
int
mov
pusha
ljmp
aas
dec
push
repz
xchg
or
mov
sub
push
sub
int3
sub
dec
fdivr
mov
loop
adc
fcmovb
push
mov
dec
pop
xor
and
arpl
cmpsl
sub
and
inc
ret
xchg
pop
jnp
daa
mov
pop
dec
lcall
cmpsl
cli
xor
mov
push
popa
xor
sti
iret
jae
mov
fstps
mov
jbe
out
andb
inc
addr16
test
rcll
xchg
jge
arpl
dec
roll
cmp
or
imul
outsb
mov
cltd
add
inc
add
nop
mov
cld
push
imul
lock
jnp
pop
sbb
outsl
push
repnz
and
js
cli
lret
cmc
cmpsl
mov
sbb
mov
push
dec
push
adc
jmp
push
xchg
add
rcll
pop
xchg
xor
push
mov
push
arpl
mov
scas
stos
lods
nop
fpatan
sbb
or
inc
mov
aad
fiadds
mov
adc
sub
loopne
fwait
sub
mov
int
dec
dec
rolb
jp
lea
pop
rcl
push
pop
pusha
out
shll
add
stos
stos
out
out
and
mov
fiadds
cmc
adc
or
push
xor
lods
test
sbb
loopnew
mov
mov
aaa
loope
mov
pop
cld
adc
int3
xchg
popf
pop
and
shl
ror
cmp
rolb
enter
push
fldt
fisubs
sbb
pop
jo
fldl
mov
mov
xchg
jae
pop
bound
jecxz
adc
out
test
out
jno
fcompl
add
std
jo
xlat
jmp
das
iret
push
sub
orb
imul
fcom
test
shlb
sub
mov
icebp
into
call
outsl
dec
movsb
add
movsb
push
jb
pushf
mov
mov
push
push
aas
addl
int
mov
mov
filds
lret
cmp
or
pop
jbe
sahf
ret
adc
pushf
dec
adc
aaa
jae
hlt
jne
push
or
jmp
popf
and
ret
push
loopne
pop
ret
ffree
stos
jno
jp
add
int3
outsb
fildll
loop
nop
stos
sub
sub
or
ret
les
mov
lcall
enter
cmp
cmp
insb
dec
mov
ja
scas
cld
xchg
mov
push
dec
outsl
faddp
cmp
stos
pop
or
jae
mov
outsb
jo
pop
in
incl
sub
sti
repz
jp
sbb
sub
cmpsl
fisubrl
sub
dec
lcall
outsl
mov
fistpll
lcall
mov
int3
xlat
les
xchg
lcall
cmovg
mov
adc
cmp
repz
lods
and
cmp
fmull
into
lret
sub
xchg
popf
cmp
mov
pop
pop
push
addr16
and
addr16
pushf
mov
fidivl
adc
lods
inc
and
push
jbe
sti
adc
mov
popa
das
call
xor
push
iret
lret
dec
and
xor
xor
push
ds
mov
add
mov
push
fmull
sub
in
sbb
pop
sub
out
sbbb
scas
mov
sub
sar
push
scas
fbld
call
or
inc
mov
lds
jmp
decl
and
sub
int3
rol
adc
iret
fld
in
sub
fistpl
lret
inc
xchg
sub
push
xchg
addr16
out
push
xchg
add
jmp
jns
daa
push
lods
xchg
aam
aad
fnstsw
arpl
iret
out
mov
stos
addb
dec
pop
fimull
in
in
sbb
sub
push
shrl
mov
in
stc
xchg
cmp
mov
push
movsl
mov
popl
outsb
xor
push
xlat
sub
fwait
fs
and
xchg
cli
jmp
push
push
loopne
xor
hlt
xor
lret
cs
out
push
test
inc
jns
push
testb
in
adc
sub
jno
mov
sub
lahf
and
cmp
add
outsb
mov
mov
xor
lods
mov
call
mov
fidivrs
idiv
scas
cmpsb
jne
daa
mov
nop
or
inc
lret
mov
cmpsb
mov
sbb
jne
jmp
jnp
add
pop
sbb
adc
pop
fisttps
mov
mov
fsubrs
mov
cmc
loop
mov
out
jno
cmp
pop
sub
add
cmp
pop
xchg
into
rcr
add
inc
adc
loopne
and
stos
push
mov
or
sub
inc
das
arpl
lahf
sbb
xchg
arpl
mov
imul
aad
pop
jg
mov
outsl
cld
cmp
push
dec
ja
mov
adc
in
xor
dec
mov
add
jne
and
stos
mov
jmp
cmp
popa
mov
sbb
or
shr
lds
popf
rorb
insb
mov
in
cmc
rclb
and
adc
xorb
and
xor
dec
lods
das
fdivs
lea
dec
arpl
stos
and
out
adc
push
xchg
cs
sub
repz
jb
into
and
hlt
imul
js
and
enter
movsl
xchg
sbb
sbb
push
jge
pop
daa
mov
mov
mov
and
repz
lods
loope
sub
leave
aaa
aad
out
out
divb
push
nop
frstor
fistpl
mov
jl
dec
mov
das
mov
rclb
jle
push
xchg
inc
mov
push
lret
and
scas
xorb
stc
mov
add
xchg
sti
sahf
sbb
mov
push
and
pop
mov
push
sbb
mov
shl
leave
dec
cmp
and
sbb
cmpsb
popf
jo
sbb
add
or
xlat
cltd
adc
addr16
addr16
jnp
add
movsl
aam
mov
mov
insl
fldl
nop
lock
mov
or
jbe
dec
leave
mov
sub
clc
mov
fdiv
movsb
jo
sub
mov
push
int
xchg
enter
pop
mov
test
cld
cmp
push
ficompl
stos
cmp
outsb
js
or
jnp
push
scas
pop
mov
xor
stos
add
or
popf
sbb
or
mov
dec
lods
mov
and
loopne
sbb
fsts
cmp
scas
ret
inc
movsl
cmpb
out
pop
jb
xchg
fnstsw
push
cmpsb
std
lock
and
add
sub
mov
push
and
adc
xchg
out
not
scas
fimuls
pop
imul
cs
mov
jmp
or
lcall
mov
adc
mov
lea
jl
or
test
and
jmp
hlt
icebp
mov
mov
mov
push
sbb
push
imul
repz
sub
xor
sbb
xchg
dec
lods
jle
std
imul
fdecstp
cmp
xchg
mov
insl
leave
mov
pop
inc
pop
xchg
out
icebp
lock
cmc
xchg
call
cmp
lahf
int
jb
nop
clc
push
aaa
cmp
es
cmpsb
pop
adc
in
fildl
xchg
daa
sub
mov
inc
add
pop
mov
leave
inc
ret
jecxz
or
das
xor
sbb
mov
push
dec
mov
into
add
jnp
adcb
cmp
pop
pop
pop
sti
iret
loopne
clc
cli
xor
lds
jecxz
iret
dec
adc
cmp
xor
mov
mov
mov
adc
fsts
addr16
or
lret
and
jg
imul
xchg
mov
out
sbb
or
cmc
test
and
adc
pop
lds
xor
mov
cmp
or
fcmovb
in
icebp
dec
cmp
fimull
sti
xchg
dec
mov
js
out
int3
mov
fs
in
sub
add
popa
bound
jmp
cmp
push
jmp
and
cmpsb
mov
inc
dec
pop
and
popf
adc
sub
test
jne
inc
cmp
into
sarb
jb
push
icebp
imul
jmp
ficomps
movsb
dec
jbe
or
leave
fldl
enter
loop
outsb
addr16
fs
ljmp
adc
addr16
sub
popl
mov
push
ja
pop
clc
gs
pop
push
int3
mov
int
pop
and
cld
pushl
call
test
mov
inc
cmp
sub
stos
xchg
mov
jl
push
cmp
jecxz
sbb
lcall
les
dec
aas
pop
push
or
out
mov
out
fdivs
mov
mull
mov
enter
test
data16
and
in
and
ret
mov
rcr
inc
mov
cmp
cmp
inc
cmp
es
popa
and
sub
lahf
cmp
xlat
lods
or
sbb
jmp
call
add
lahf
movsl
jae
xlat
dec
sbb
popa
and
call
test
sbb
and
inc
mov
or
sarl
clc
mov
push
lock
in
jbe
mov
xor
jg
push
inc
jb
add
sub
adc
aas
pusha
cmp
out
xor
jp
bound
clc
or
add
xor
daa
rolb
jae
cld
add
inc
push
js
cltd
jp
xchg
push
and
inc
adc
jne
sti
sbbb
test
fistpl
xor
sub
inc
popa
mov
sbb
dec
dec
adc
ja
lret
adc
mov
loopne
mov
mov
das
lods
icebp
loopne
movsl
insl
aad
mov
js
mov
push
sbb
jb
xor
test
jl
xor
cmpsb
xor
cmp
push
mov
adc
in
sbb
dec
add
andl
mov
or
cmp
mov
ret
call
mov
mov
fwait
addb
into
inc
std
ss
adc
sub
daa
push
rclb
adc
cmpsb
stos
inc
cmpsb
ret
movsb
jge
div
cld
sti
add
adc
sbb
push
lods
and
fbstp
imul
lods
popl
xor
inc
stc
aaa
imul
push
cwtl
pop
int3
mov
or
clc
and
loop
mov
push
mov
sub
cmpsl
sahf
sub
ja
jo
icebp
xor
insb
dec
out
or
mov
loop
roll
lods
fcomp
movsl
jmp
aas
out
xchg
or
xchg
xchg
or
shlb
gs
shl
sub
dec
mov
cwtl
jb
xchg
or
in
imul
je
in
insl
jmp
push
pop
cpuid
incl
pop
xor
outsb
scas
xchg
cmp
cmp
dec
movsl
repnz
mov
mov
push
ds
pop
ffreep
inc
ss
outsl
loopne
push
popf
mov
rcrb
push
arpl
out
popa
popa
mov
mov
jno
sti
imul
out
adc
fs
clc
lods
movsb
std
push
lock
adc
shl
insb
xor
xor
int3
pop
sbb
and
test
push
std
jnp
sub
das
jl
lret
adc
jp
scas
outsl
push
inc
xchg
jl
call
aam
ss
pusha
loop
mov
mov
call
lods
or
jmp
push
lret
data16
pop
mov
mov
std
enter
cmc
stos
inc
bound
lahf
xchg
jo
push
ret
inc
cltd
pop
inc
ljmp
xchg
mov
pushf
and
sbb
in
in
ret
or
data16
in
lds
fmuls
inc
shrl
in
out
addr16
sbb
mov
cmp
pop
dec
xor
ja
sbb
adc
mov
mov
lock
jbe
pop
loopne
mov
mov
aas
lods
test
and
xchg
mov
std
lret
sti
xor
in
adc
jecxz
xchg
cmp
testl
xlat
fidivs
loopne
push
mov
incl
fcomps
fiadds
jae
loop
lods
js
jp
cmc
sub
ja
icebp
cmp
jle
adcb
xor
adc
mov
sbbl
int
and
addl
js
push
hlt
stos
test
adc
divl
insb
mov
pop
sbb
outsl
pop
jbe
lret
fidivrs
dec
mov
jp
push
mov
cmp
push
or
and
xor
mov
repz
cmp
test
xor
es
stos
add
lahf
leave
fisubrs
cwtl
bound
jl
inc
fnstsw
shl
mov
out
mulb
cwtl
xchg
cwtl
pop
inc
shrb
lahf
or
cli
xor
daa
jbe
inc
insl
sbb
push
cmp
mov
test
sti
mov
loopnew
outsb
and
cmp
add
jnp
fcomip
sub
imul
add
shlb
mov
mov
cmpl
mov
dec
mov
fcoms
sahf
xchg
mov
std
shlb
pop
or
pop
pop
xor
mov
out
pop
repz
pop
fimuls
ss
lret
sub
push
enter
loop
mov
and
or
addl
inc
aaa
les
xor
xchg
push
xchg
je
out
add
xlat
mov
adc
insl
and
movsl
cmc
xlat
inc
repnz
sub
cmp
mov
aam
xchg
xor
scas
xor
jne
sub
out
jge
scas
cmpsl
sarb
adc
in
into
inc
cmp
icebp
jecxz
dec
cmp
repz
cmp
cmp
xchg
xchg
xchg
mov
pusha
mov
call
mov
mov
dec
ret
xchg
xchg
jmp
inc
addb
cvtps2pi
fnsave
pop
inc
cmovge
arpl
shrl
jnp
mov
lods
xor
xor
mov
dec
fsts
cltd
psrlw
ret
and
pop
push
push
outsl
lods
aad
cltd
mov
adc
pop
cmp
shll
push
data16
std
fsubs
out
mov
pop
int
dec
imul
cld
loope
cmpsl
mov
orb
in
nop
cmp
lea
xchg
scas
sub
xor
ds
mov
xchg
roll
fwait
push
mov
xchg
addl
push
aam
mov
aas
mov
xor
jg
add
hlt
test
sbb
inc
sub
dec
nop
lahf
pop
inc
leave
push
pusha
pop
scas
sahf
sub
pop
stos
fists
inc
mov
cs
pop
pusha
cmp
xchg
sarb
dec
cmp
lahf
mov
test
test
push
pop
xor
add
stos
push
or
sub
lcall
push
or
mov
imul
rolb
pushf
sub
xchg
lods
aad
mov
into
dec
into
jns
cltd
jnp
dec
or
jns
test
dec
inc
vmovdqu
out
clc
ret
mov
aaa
and
xor
and
adc
mov
cmc
ret
jg
and
scas
int3
int3
sub
adc
push
aas
popa
or
mov
stos
xchg
fsubrs
out
lahf
stc
xchg
in
sbb
or
sahf
xchg
push
imulb
or
or
out
or
rcll
sbb
test
bound
add
test
shlb
add
dec
mov
arpl
orb
cmp
push
xchg
sahf
mov
jb
or
add
shl
pop
dec
pop
sub
add
mov
and
jbe
and
ljmp
adc
inc
push
test
sub
test
shlb
dec
add
xor
out
popa
sbb
push
fnstenv
das
push
xchg
xchg
orb
popf
mov
out
int
neg
ja
test
imul
add
xor
inc
mov
data16
call
stc
mov
scas
push
and
mov
fidivl
jecxz
cmc
or
xor
shll
mov
sahf
mov
sahf
mov
clc
insb
sti
inc
and
stc
xchg
add
mov
shll
and
roll
push
xor
lea
faddl
mov
pop
pop
mov
imul
xor
mov
into
loopne
popa
mov
add
jbe
test
pop
cmpb
movsb
ret
cmp
sub
loope
jmp
das
push
sub
jmp
lods
icebp
cld
lret
cwtl
out
jns
sbb
scas
nop
out
in
roll
repnz
mov
mov
mov
ja
mov
sbb
mov
shrb
subl
jmp
outsl
push
pusha
lret
push
clc
sbb
mov
jl
popf
loope
iret
orb
das
jle
push
inc
sti
in
sbb
lods
jg
std
pop
xchg
sub
adc
popf
xchg
jl
adc
xchg
test
mov
dec
imul
mov
mov
push
out
in
sub
negb
fimuls
dec
and
in
int
adcb
out
imull
movsb
mov
nop
inc
mov
mov
xchg
cmp
lret
jmp
pop
add
mov
cmpsl
xchg
imulb
cmp
les
pop
xor
adc
ja
stos
push
sub
dec
addr16
jae
mov
jo
jno
aad
out
gs
je
repz
or
scas
sub
mulb
add
sbb
scas
test
js
dec
lret
sub
loope
js
outsl
jle
mov
sub
aam
pop
call
aas
cmpsb
mov
adcb
lea
push
sub
and
das
adcl
lcall
aad
fstl
lods
push
or
xchg
mov
lds
adc
sbb
cld
jne
xchg
inc
dec
jbe
aaa
fcoml
out
jge
hlt
cmp
cmp
push
add
stos
aam
pop
push
jle
jns
popf
push
jns
inc
jne
sub
fcompl
mov
cmpl
and
dec
arpl
xchg
aad
cmp
adc
mov
push
daa
cltd
sub
cmp
dec
mov
pop
cmpsl
add
pushf
aas
icebp
in
adc
pop
outsb
repz
inc
pop
adc
mov
mov
daa
xchg
mov
cld
rcr
push
pop
out
call
adc
and
cltd
xor
and
pusha
dec
stos
push
xchg
out
jbe
xchg
movsb
aas
fists
mov
mov
dec
mov
xchg
adc
pusha
cmpsl
loop
stos
iret
roll
daa
cwtl
push
pop
je
cmc
adc
lods
pop
cld
test
stos
inc
sub
les
sahf
in
sti
mov
add
push
sbb
mov
ror
shl
xor
mov
test
jae
push
out
cmp
in
shl
rolb
movsl
add
mov
xor
nop
jl
icebp
loopne
cmp
add
rcl
xor
mulb
adc
rolb
je
xor
mov
and
jno
pop
xorb
mov
inc
stos
and
mov
call
dec
mov
icebp
iret
dec
mov
jl
daa
push
sub
lock
xor
rol
lods
ficoms
js
xchg
testb
loopne
pop
ret
scas
dec
mov
jmp
add
xchg
test
movsl
mov
test
push
ror
les
jae
nop
lret
aad
jle
jb
or
jns
icebp
push
jb
adc
aas
outsl
and
adc
or
or
cmp
jge
jae
mov
dec
rcr
out
ja
mov
fdivl
leave
xorb
test
jno
push
adc
hlt
pop
pushf
iret
into
or
cs
xchg
fsqrt
es
stc
push
or
aaa
mov
pop
mov
jl
cmp
jne
jmp
cmc
sbb
icebp
fldt
xchg
fdivl
pop
and
shll
sbb
outsl
add
jp
jmp
in
mov
pop
and
jns
adc
jp
bswap
xor
mov
rcrb
push
sub
inc
bound
test
inc
adc
or
mov
or
mov
cwtl
adc
imul
cmp
or
xchg
adc
in
mov
mov
sub
pop
fnstcw
cwtl
sbb
call
dec
lea
xorb
mov
in
jne
int3
mov
fcomps
mov
pushl
in
daa
in
ret
push
sub
mov
dec
pop
test
mov
pop
repnz
push
imul
push
jno
stos
les
leave
push
call
jecxz
push
jecxz
rcrl
jbe
addb
aas
data16
jle
int
addr16
insl
add
inc
shrw
shll
addb
inc
clc
xchg
fwait
xchg
stos
xlat
dec
getsec
xchg
faddl
push
adc
inc
jmp
or
ljmp
stos
cmp
xlat
inc
push
testb
pop
or
sub
and
xchg
inc
in
jb
addb
scas
nop
iret
mov
jecxz
lahf
test
in
jnp
adc
imul
scas
lcall
aam
imul
sahf
and
into
imul
imull
movsb
fsubs
dec
inc
dec
lods
popl
call
jbe
sub
pop
xor
call
imul
arpl
add
xorb
scas
xchg
cmp
mov
sahf
xor
aad
fsubs
test
iret
cltd
add
leave
testl
lds
mov
lods
mov
xor
mov
fisubrs
arpl
lock
fwait
sub
ja
int3
mov
xor
icebp
sub
mov
andl
push
adc
xchg
lock
sub
jl
insb
sub
mov
les
pop
in
aad
push
fstps
sarl
xlat
sbb
sub
xchg
jno
cltd
push
xchg
arpl
mov
cmp
daa
and
and
push
mov
inc
mov
push
je
into
add
aad
xor
inc
in
iret
shll
push
pop
lds
jge
and
mov
inc
divb
fisttpl
icebp
mov
cmp
add
movsb
xor
inc
sbb
clc
lea
xor
mov
sub
push
icebp
pusha
adc
or
inc
mov
pop
xor
or
ret
inc
xor
mov
xchg
fildl
shr
icebp
loope
aad
jae
lods
add
inc
and
divl
mov
xchg
fwait
addb
mov
popa
mov
mov
mov
jb
xchg
test
arpl
add
cmp
mov
hlt
das
pop
cmp
loop
sub
jb
gs
je
jle
cmp
push
mov
sbb
out
or
cmp
sub
icebp
mov
std
in
mov
mov
xor
ss
adc
stc
test
mov
mov
pusha
inc
orb
or
xchg
cli
dec
mov
jns
mulb
dec
jbe
popa
cmp
inc
xor
repnz
xor
add
neg
cmp
or
or
mov
fdivs
arpl
sbb
insl
and
outsb
test
mov
mov
aaa
imul
sub
popf
scas
mov
sbb
imul
cli
xor
mov
leave
sub
sbb
dec
fstps
mov
push
jp
jmp
jno
out
or
rclb
xlat
insl
cmc
cltd
xchg
sub
jno,pt
dec
inc
out
mov
jnp
les
icebp
test
ja
dec
pop
enter
data16
aaa
cwtl
pop
stos
out
lods
mov
dec
fcomp
mov
and
xchg
loope
ret
mov
mov
push
add
or
fs
cmp
jl
cltd
mov
adc
sahf
mov
inc
lcall
iret
cli
sahf
pop
sub
mov
mov
movsl
or
or
cltd
pushf
add
leave
push
rolb
adcl
inc
rol
sbb
enter
divb
stos
or
sbb
mov
mov
pop
cmp
fisubrl
nop
cmp
mov
inc
jne
popf
fiaddl
or
and
mov
fchs
lods
push
imul
dec
filds
sub
jne
mov
push
jg
xor
sbb
js
xchg
adc
add
mov
subb
lock
aam
mov
mov
xor
push
mov
jo
stc
pop
cmpsl
in
in
repz
mov
mov
adc
lods
in
mov
push
bound
xor
test
xor
add
pop
lds
and
clc
pop
bnd
mov
mov
add
dec
xor
lret
add
lock
pusha
mov
ss
stos
lea
sbb
jo
mov
push
cli
insl
inc
lds
inc
push
subb
lds
mov
pop
in
lods
aad
test
pop
pop
lret
xlat
sub
das
adc
aam
inc
and
into
pop
lcall
jb
inc
jecxz
ret
adc
jl
sbb
test
test
jle
lret
outsb
jmp
arpl
scas
inc
movsb
sub
test
shrl
insl
das
mov
ja
dec
mov
mov
rep
and
aas
outsb
adc
sbb
add
xchg
push
mov
adc
jbe
loopne
cmp
mov
rcrl
mov
jbe
scas
fildl
mov
mov
sahf
jbe
xchg
jo
rorl
idivb
pop
mov
out
lds
stc
nop
insl
lds
sarb
insl
pop
mov
int3
imul
ret
out
out
retw
pop
jo
int
pop
sub
in
hlt
rcrl
push
cmp
cmp
loopne
daa
vminsd
sbb
add
cmp
cmc
sbb
ret
sub
loope
xchg
fbld
out
in
adc
sub
mov
inc
insl
push
pop
add
lds
scas
enter
xchg
out
stos
cmpsb
lock
inc
pop
jno
cmpsl
hlt
ja
out
mov
iret
cmp
fldenv
dec
cmp
int3
mov
sub
scas
mov
push
sbb
bound
sub
inc
and
sub
add
jl
test
out
adc
out
loopne
mov
fldl
imul
push
jp
aaa
dec
mov
jno
dec
andb
mov
std
int
jle
lods
sub
out
mov
mov
sbb
or
pusha
std
sbb
inc
add
popf
cmc
sub
jns
dec
sbb
or
stc
fdivrs
push
and
sbb
out
nop
xor
into
cs
mov
sbb
jb
or
jo
cmp
mov
xor
mov
fcomp
out
add
bsr
in
sub
jnp
add
xor
inc
in
fdivrp
andb
stos
loope
lods
shlb
mov
push
les
jle
adc
stos
mov
out
jmp
push
notb
add
rorb
outsb
inc
jo
mov
mov
mov
stc
nop
xchg
cmp
add
xor
mov
in
and
mov
push
sub
test
insl
and
inc
aas
roll
out
mov
push
push
or
mov
or
cli
nop
pop
lock
outsl
sub
mov
add
pusha
pop
mov
in
fbstp
jno
or
adc
jo
loope
pop
mov
inc
pop
xor
inc
dec
bound
jo
or
daa
jo
and
mov
popa
call
mov
sbb
fstps
stc
mov
iret
sub
inc
sbb
movsb
jae
mov
aas
mov
dec
dec
daa
sbb
and
xchg
push
or
mov
push
mov
daa
jbe
pushf
lock
mov
out
push
shlb
inc
push
movb
add
or
std
cmp
mov
mov
stos
cmc
dec
xor
frstor
fwait
push
and
shrl
stc
cli
jle
scas
xchg
loopne
push
arpl
inc
mov
int3
imul
std
xor
dec
test
fstps
cmp
lahf
sub
sahf
mov
xchg
scas
iret
jge
mov
lcall
leave
push
std
sbb
pop
fldcw
test
out
jno
inc
jo,pt
add
loopne
mov
mov
xchg
bnd
stc
rolb
mov
push
movsl
enter
outsb
and
fwait
stos
push
test
xchg
je
push
push
sbb
lea
call
fidivrl
sbb
movsl
or
dec
repnz
adc
sar
mov
cmp
out
inc
out
xchg
lods
push
cwtl
aam
icebp
jmp
jno
mov
cmpsl
es
pop
fistl
mov
mov
mov
inc
sbb
jo
inc
xor
xchg
jb
cli
rorl
inc
push
inc
push
es
leave
lods
add
mov
test
out
push
into
lds
cmp
mov
mov
inc
sub
xchg
fcomi
cmp
stc
jmp
fcoms
mov
push
and
orl
mov
ljmp
jbe,pt
pop
cmp
lcall
sub
mov
jnp
movsl
adc
loop
outsb
and
and
sbb
adcb
inc
push
cmpb
cmp
cmp
hlt
aas
ljmp
dec
dec
cmp
fstpl
mov
or
arpl
pushf
dec
adc
mov
jne
rclb
push
aad
pop
xchg
add
sar
xorb
jp
mov
mov
je
mov
in
in
fisubrs
sbb
imul
xchg
ja
cs
mov
mov
int3
push
pop
push
into
push
push
mov
shl
fildl
xor
jmp
mov
arpl
and
add
int3
cs
ljmp
xchg
stc
insb
xchg
mov
jecxz
fldt
mov
mov
ja
xor
xchg
mov
pop
or
pop
insb
xor
std
cmc
out
sub
or
test
iret
cmpsb
xor
enter
out
dec
jae
sbb
fsubl
insb
adc
mov
mov
jnp
dec
jne
mov
movsb
push
push
cmp
mov
jne
jbe
mov
push
sbb
xor
out
fldcw
enter
inc
xor
jb
sub
or
add
or
mov
adc
mov
pop
mov
lcall
shll
sub
out
push
lea
enter
inc
cltd
js
cmp
int3
pop
fs
fisttps
lods
xchg
ss
mov
mov
rolb
xlat
scas
popf
jne
outsl
gs
push
out
jg
and
or
in
arpl
mov
and
and
push
mov
inc
into
cmpsl
inc
enter
push
in
das
lret
mov
loope
add
dec
xchg
pop
gs
lcall
scas
xor
lods
iret
dec
sub
pop
or
mov
jecxz
jle
xchg
inc
cmp
dec
movsl
sub
cmp
push
mov
push
mov
push
in
cmpsl
push
js
xchg
enter
cmc
adc
divb
fsts
data16
in
movsl
mov
add
add
enter
adc
sbb
rorl
or
bound
mov
sbb
add
fadd
mov
xchg
xor
push
mov
js
rcrl
in
and
jne
cmp
cmpsl
call
ljmp
pop
push
or
das
jmp
dec
js
ret
cmpsb
ss
out
js
xor
pop
mov
imul
loopne
ficompl
xchg
xor
test
sahf
sti
lds
aam
cmc
lret
dec
js
rorb
scas
repz
les
add
into
adc
jge
out
and
pop
shrb
div
and
stc
or
fimuls
sbb
mov
xchg
or
ret
mov
in
push
popf
dec
std
mov
repnz
lea
jne
test
fidivl
in
xor
shll
dec
stos
lcall
xchg
mov
icebp
dec
mov
push
pop
lock
ret
jecxz
push
les
mov
xchg
and
mov
mov
fimuls
sti
cmpl
mov
push
shlb
lret
add
in
sbb
fwait
or
fcoms
ds
aam
ljmp
andb
popf
push
imul
lret
fs
out
mov
cmp
jnp
aad
cmc
fwait
and
popf
out
bound
insb
xor
or
rcl
int3
jnp
mov
test
inc
inc
jb
lahf
ljmp
fsubl
push
sub
add
call
scas
imul
mov
icebp
xor
dec
push
fcmovb
cmpsb
push
pop
mov
push
dec
rol
mov
stos
xchg
in
paddb
pop
jp
inc
or
adc
sbb
lods
xchg
je
frstor
dec
jno
lret
pop
out
mov
sti
and
icebp
loop
es
add
add
push
or
push
push
sbbl
jnp
jle
sarb
ficoms
dec
add
lahf
add
mov
je
inc
jmp
pop
hlt
enter
pop
sbb
xlat
mov
pop
repz
imul
sti
pop
jle
insl
add
sub
lcall
xchg
adc
js
jl
dec
imul
mov
inc
or
imul
orl
jae
pop
mov
and
outsb
push
or
adc
aas
icebp
into
and
repnz
push
leave
cmpsb
mov
in
in
mov
inc
int3
push
mov
int
xchg
xchg
mov
jb
int
das
sub
and
sbb
xor
insb
and
pop
xchg
xor
fistps
push
mov
leave
shrl
inc
in
popf
push
pop
cmp
sbb
incb
sbb
aas
add
pop
test
add
aas
adc
int
dec
add
add
mov
leave
push
mov
cmp
stos
bound
hlt
push
sub
and
sub
add
push
dec
pushf
sub
insb
sbb
test
push
mov
mov
pop
aaa
pop
jae
outsb
subl
mov
sub
push
loopne
cmpsl
repnz
int
pop
test
mov
mov
sub
ror
push
jns
push
pushf
pop
loopne
scas
sahf
push
aad
mov
mov
call
mov
cltd
add
or
jmp
adc
rol
and
cmp
inc
pusha
sub
in
inc
in
mov
or
call
or
jae
imul
push
sub
test
and
mov
inc
dec
mov
add
sahf
xorl
pusha
mov
js
test
fistpll
xor
sti
inc
mov
stc
mov
inc
stos
out
ret
or
inc
test
sub
pop
sbb
rcl
mov
lcall
aam
iret
add
dec
sub
mov
mov
into
ljmp
insb
jae
lret
jne
sub
mov
cmp
xchg
cmp
fwait
das
xchg
out
popa
lahf
enter
xchg
sti
int3
ljmp
cmpl
mov
cmp
jp
xchg
pop
dec
pop
test
mov
xor
movl
add
rcll
sbb
xchg
inc
pop
pop
fcoms
xor
cmp
jo
pop
and
roll
pop
dec
mov
icebp
jecxz
in
mov
cmp
mov
clc
xchg
pop
lods
pop
sub
and
sub
loop
cs
mov
divb
jmp
enter
aas
imul
aam
loopne
mov
and
repz
push
mov
outsl
pushf
lahf
bound
aad
inc
gs
pop
sub
push
fwait
sub
cmp
dec
mov
out
repnz
pop
insl
mov
rdmsr
mov
jl
inc
cmp
int3
pop
mov
frstor
stos
push
aad
cmp
mov
mov
xchg
call
loopne
hlt
aas
cli
add
sbb
test
sub
pop
pop
pop
lret
xchg
jg
inc
or
push
push
pop
stos
data16
std
jns
add
sbb
loopne
loopne
adc
xchg
dec
mov
sbb
ret
js
cld
sbb
jo
push
call
mov
aam
stos
pop
int
stc
cmp
in
jl
push
jns
mov
pop
dec
incl
int
insl
jns
jns
mov
xor
sahf
jno
xchg
and
mov
fidivrl
in
cmp
or
es
clc
inc
or
jbe
fmuls
xor
std
cmp
decl
add
dec
ret
lods
push
sbb
js
xchg
orl
xor
mov
sbb
xor
cmpsl
cmpsl
xor
adc
pop
xchg
shrl
ss
pop
mov
sahf
mov
lret
mov
cmc
stos
push
xor
aaa
ficoms
loope
pop
and
hlt
cltd
and
aam
shl
std
inc
jmp
dec
lahf
lea
lahf
addb
ret
cltd
mov
or
and
or
movsl
pushf
jge
push
inc
imulb
dec
leave
scas
adc
loope
popa
xchg
leave
fucomi
sbb
lret
push
shl
out
sbb
xchg
sysret
cld
dec
loop
std
inc
lcall
pushf
sbb
pushl
adc
inc
in
call
push
outsb
mov
mov
pop
xor
inc
adc
adc
cmp
xor
inc
in
cmp
sahf
adc
xchg
addr16
jg
push
daa
adc
mov
or
mov
sbb
xchg
in
dec
fadd
push
call
inc
jne
cli
sti
cmp
shl
sbb
and
inc
inc
shrl
cwtl
inc
roll
push
dec
repz
mov
push
popa
fld
mov
or
mov
inc
addb
or
addr16
jae
outsl
pop
mov
and
jbe
dec
out
outsl
mov
dec
sbb
rcrb
adcb
mov
outsb
xorl
xchg
pop
loop
mov
aas
je
mov
xlat
lds
xor
adc
fs
imul
addr16
repz
and
flds
lcall
dec
in
xor
ret
cmp
push
lfs
adc
xor
pusha
adc
shll
mov
push
pop
jge
movsl
roll
jle
test
push
in
jnp
into
stc
pop
insl
sub
test
ljmp
mov
iret
cmp
xchg
cmp
les
jmp
and
call
ds
xor
mulb
shlb
fistpll
adc
mov
mov
lock
dec
jnp
dec
inc
mov
jne
aad
xchg
test
stos
ffreep
pop
xor
adc
dec
imul
test
cmp
push
sub
dec
xchg
movsb
mov
stc
js
out
adc
sbb
lods
push
mov
mov
add
sbb
xchg
fwait
add
lock
mov
lea
mov
xor
push
repnz
pop
inc
ljmp
mov
xor
insb
add
xor
fs
in
and
mov
pop
mov
mov
or
int
lret
sbb
outsb
mov
imul
and
and
jbe
sbb
call
add
sub
loope
jae
cld
pusha
int3
jb
and
incl
cld
jl
add
movb
aam
in
cmp
mov
sbb
xchg
popa
cmp
mov
jns
pop
xor
rcr
iret
mov
add
movsb
test
outsl
pop
leave
xor
mov
inc
cmp
sub
int3
add
sbb
xor
test
lods
scas
and
test
das
sbb
pop
ds
pushf
fstpt
or
and
sti
xchg
xchg
dec
arpl
test
add
pop
mov
xor
shrl
aam
pop
push
jnp
call
aad
ss
adc
es
sbb
pusha
add
xchg
cmpsb
push
divl
mov
and
xchg
pop
mov
fistpll
pop
mov
test
sbb
daa
fwait
jns
dec
pop
loopne
outsl
loopne
fwait
inc
adc
movsb
mov
cmp
ljmp
sub
les
sbbb
or
pop
leave
aam
scas
cmp
lahf
xchg
pop
inc
insl
in
in
mov
mov
inc
outsl
loopne
jmp
shll
mov
ds
or
into
jg
mov
aaa
mov
mov
xor
mov
sub
daa
aas
pop
rcl
adc
fsubl
cwtl
jae
ja
push
lds
sbb
mov
cmpsb
fdivs
fnstcw
sub
scas
jb
aaa
or
in
icebp
push
loopne
mov
push
pushf
mov
xchg
icebp
jne
repz
inc
addr16
imul
sub
push
test
or
mov
xor
dec
inc
cwtl
gs
outsb
out
pop
lds
and
scas
ja
ror
xchg
insb
jno
es
lock
nop
imul
xorl
push
mov
sti
cli
mov
pop
scas
dec
shr
jns
xlat
jmp
pushf
pop
xor
xchg
dec
or
xchg
loope
inc
out
movsb
insb
scas
xor
xchg
gs
rorl
repz
jno
aam
fdivs
and
mov
test
push
lds
push
pop
ss
in
add
arpl
push
mov
adc
adc
scas
call
mov
push
xchg
ja
inc
cmp
push
push
push
hlt
mov
sub
fildll
enter
jae
test
cwtl
repz
mov
pop
andb
dec
and
sbb
sbb
pusha
jecxz
lcall
out
mov
xor
mov
xchg
out
sub
andb
jmp
dec
fldenv
int
or
mov
mov
and
add
mov
dec
popf
mov
or
fs
imul
pop
stos
jmp
pop
jle
ficompl
subb
les
cmpb
mov
pop
sub
xor
add
push
movsl
mov
mov
pop
adc
push
cmp
sbb
stos
adc
movsl
lcall
pop
pop
cmc
pop
adc
sbb
and
mov
jge
cmp
std
push
mov
stos
mov
jae
lods
jnp
adc
adc
outsl
gs
mov
imul
xchg
cmp
lret
loope
fnstsw
xlat
sub
jbe
jbe
rcll
and
mov
xchg
fadd
jmp
cmp
cld
sub
insl
push
out
icebp
enter
and
fstl
and
push
loop
xlat
je
sbb
aaa
dec
jmp
jae
decb
mov
jg
cmpb
loop
jb
insl
ja
jnp
xchg
or
pop
fadds
frstor
add
add
sbb
daa
lret
int
pop
movsl
outsb
sbb
sub
bound
daa
mov
pop
test
mov
cmp
cmp
lea
dec
shlb
repnz
imulb
cli
mov
lea
addr16
lock
in
xor
jle
sahf
std
sub
pop
sub
xor
pusha
imul
jp
shll
cmp
jne
cs
scas
adcb
out
or
and
sbb
or
mov
in
jl
jp
aad
popf
jmp
out
pop
push
xchg
add
inc
jle
test
pop
aad
fwait
jns
xchg
or
pop
xor
mov
xchg
pop
out
add
push
sbbl
sti
or
andb
dec
mov
xor
sub
imul
lock
fistl
lea
test
rorb
xchg
jno
pop
inc
fwait
adc
data16
hlt
push
mov
xor
pushf
divb
fsubrs
pop
arpl
mov
scas
std
out
pop
stos
cmp
jb
mov
xchg
sti
idivl
ljmp
in
inc
test
pushf
scas
dec
enter
lock
inc
call
mov
sti
loope
xchg
lods
stos
adc
jle
popf
loopne
lea
mov
sbb
and
stos
push
pop
test
mov
movsb
xor
pushf
adc
xchg
movsb
fnstsw
pop
ss
out
mov
popa
and
cmp
add
xchg
call
int
pop
mov
mov
lret
add
mov
inc
add
popa
pop
fists
push
enter
inc
and
add
lahf
cmc
mov
xor
mov
adc
dec
cld
nop
sub
or
xchg
ja
or
inc
xchg
dec
mov
std
cmpsb
or
outsb
sti
adc
call
push
rcll
jno
divl
cmpl
shrb
sahf
push
xor
inc
ret
js
xorb
or
xchg
jbe
inc
xchg
adc
push
lret
shr
cmp
dec
add
mov
divl
aad
leave
mov
cmp
and
push
in
jb
mov
fisubrl
and
jne
adc
clc
or
sbb
inc
stos
mov
out
push
add
and
push
dec
sub
add
incl
cld
mov
xchg
test
push
stos
loope
xchg
sbbl
out
mov
or
pop
lcall
ds
ljmp
xor
das
out
into
adc
fimull
xchg
mov
aaa
rclb
sbbl
push
jne
test
mov
lds
pop
mov
cmp
addr16
fistps
les
xor
dec
rcll
or
push
pop
sbb
mov
rcrl
cmp
adc
inc
movl
push
push
test
dec
inc
fists
andl
test
in
sbbl
mov
xchg
xchg
pop
fwait
lret
mulb
push
push
ret
xor
mov
clc
out
mov
js
les
push
and
pushf
out
mov
add
push
pop
insl
add
push
and
inc
mov
js
sub
fs
test
adc
repnz
jecxz
lcall
je
mov
fbld
sub
adc
imul
push
dec
fwait
adc
pop
imul
insl
adc
insl
subb
loop
imul
movsl
imul
mov
loope
loope
mov
adc
lret
jp
stc
and
adc
ljmp
and
xor
loope
stc
push
test
push
xchg
insb
in
mov
cmp
jo
adc
inc
dec
and
imul
jno
lods
pop
jp
mov
or
or
bound
jnp
push
jb
clc
fs
aaa
outsb
dec
xchg
mulb
jecxz
popl
or
mov
insb
mov
dec
add
pop
rorl
imul
sar
data16
mov
daa
inc
mov
lock
push
and
sbb
iret
out
xor
cltd
cwtl
lods
aas
jp
inc
push
or
pushf
cmc
mov
or
lock
out
or
push
cs
mov
loop
or
jb
aad
cmc
and
scas
stos
xorl
fldenv
cmp
mov
or
ja
lahf
sbb
test
data16
das
adc
push
jl
mov
push
mov
add
popf
inc
xchg
jbe
sarb
lock
cmpsl
filds
orb
and
mov
repz
mov
inc
out
andl
cmp
iret
stc
mov
ret
mov
inc
inc
iret
jmp
adc
dec
mov
test
test
mov
scas
jnp
cwtl
test
jecxz
pop
mov
pushf
xchg
lret
xchg
and
into
sbb
cmc
loopne
ss
xchg
xor
cmp
pop
jl
js
xchg
aam
push
pop
mov
mov
or
mov
idiv
pusha
add
push
jp
sub
lds
jmp
xchg
jae
mov
rcll
and
fldl
sahf
lret
mov
cmpsb
pop
inc
adc
sub
pop
ljmp
mov
hlt
push
jmp
or
mov
jg
jbe
fadds
aas
adcb
inc
xchg
mov
test
xor
sbb
inc
outsl
shrb
push
fnsave
adc
cmpl
and
punpcklwd
movsb
in
fstl
cmp
js
and
aas
push
jno
xor
pop
insl
jno
shrb
movl
xor
int3
test
push
mull
sbb
mov
pop
mov
cld
test
es
xchg
cmpsb
mov
cmp
mov
push
mov
xchg
into
pandn
enter
sub
push
inc
shrb
xlat
jp
cmpsb
fnstenv
and
mov
ficomps
imul
sbb
sub
in
out
fcoml
cmc
mov
jae
scas
and
cmp
adcb
adc
pop
or
leave
in
jo
sti
xchg
xchg
dec
cmp
negl
loop
xor
mov
and
dec
xor
imul
cmp
test
test
mov
sbb
lock
iret
inc
mov
or
xchg
ret
out
push
loopne
sbb
or
lret
mov
push
and
xchg
xchg
mov
jnp
or
xchg
rcr
movsl
nop
orl
or
out
or
push
rcrl
xchg
sbb
insb
push
test
in
ret
sub
adc
pop
fbstp
popf
icebp
hlt
testl
adc
push
xchg
dec
cli
mov
push
rolb
lock
fistl
scas
cmpsl
dec
pop
rcrb
cmp
xchg
jmp
pop
rcll
outsb
mov
scas
cmp
lds
push
xchg
fld1
pop
jmp
lret
and
cmpsl
mov
adc
jo
std
std
aaa
es
stc
push
xor
inc
in
mov
mov
stos
shrl
xchg
les
aaa
fs
ds
dec
and
xor
xchg
bound
push
ror
lret
rcr
popf
pop
xchg
cmp
dec
xchg
rorb
lcall
mov
iret
pop
and
call
stc
pushf
fsubl
ja
push
or
std
jnp
les
outsb
movsb
movsl
push
pop
stc
dec
stos
sti
out
and
bound
cmp
mov
mov
mov
ljmp
pop
movsb
sbbl
enter
repnz
jb
mov
inc
ljmp
fnstenv
retw
loop
pop
xor
stos
cmpsl
addr16
xchg
jle
lods
mov
stc
dec
fwait
add
sbb
mov
sub
imul
ror
aad
jg
loope
push
or
mov
mov
mov
aaa
scas
icebp
mov
mov
insl
sbb
cmpsb
xor
adc
mov
ja
mov
rol
push
inc
addr16
or
mov
out
int
mov
fcmovb
inc
dec
cltd
dec
xchg
es
stc
pop
ffreep
or
in
pusha
aaa
and
inc
loopne
call
sbb
mov
mov
push
xor
aas
aaa
je
xchg
or
xchg
mov
push
sub
mov
fistpl
xchg
loope
imul
dec
cmp
push
mov
jmp
insb
out
add
lret
adc
out
xor
adc
mov
mov
movl
std
sahf
cmc
adc
jae
std
add
mov
lods
sub
int
test
xor
jns
in
ja
mov
push
cmp
out
mov
jg
test
fdiv
xchg
cmp
jecxz
aas
out
push
test
cli
popa
pushf
test
int3
jb
cltd
sub
sbbl
int
lret
call
fcomp
jo
sarl
mov
jecxz
arpl
jge
out
shrl
or
xchg
pop
xchg
sbb
test
arpl
add
mov
push
das
pop
xchg
push
sahf
mov
cs
pop
push
xor
xchg
inc
test
fwait
jb
lock
add
jp
xchg
gs
dec
push
fs
iret
push
xor
test
repz
fdivrl
lea
loop
nop
ljmp
and
bound
cmp
out
hlt
jns
push
mov
jp
sbb
mov
xchg
fsubr
sub
out
push
or
add
mov
add
sbb
push
xor
popf
or
loop
testb
add
sbb
xor
mov
fisttps
nop
addr16
or
push
pop
cmp
inc
cmp
add
jg
in
call
xchg
pop
out
and
adc
mov
xchg
add
fxch
jmp
mov
push
pop
dec
sub
imulb
and
lock
insl
sub
iret
or
mov
loope
popf
out
aas
lea
sub
xchg
fwait
js
pop
lahf
rorl
hlt
in
rolb
dec
jbe
mov
cmp
call
xor
dec
lea
xor
insb
mov
jo
sub
mov
in
pusha
lret
mov
in
cmp
mov
js
repz
jmp
push
adc
push
inc
mov
mov
jb
mov
mov
loope
ffree
mov
std
daa
sbb
adc
and
sahf
jecxz
or
ss
xchg
cmp
insb
add
rcll
cltd
sbb
or
jns
arpl
inc
jecxz
cmpsb
nop
or
lahf
fwait
nop
mov
stos
cmpsl
outsl
sbb
jge
testb
hlt
jns
pop
jl
xchg
popa
mov
adc
lcall
cmp
sub
cmp
jbe
adc
ss
cmp
mov
pop
dec
popf
lea
lcall
inc
scas
inc
hlt
inc
mov
add
stc
dec
xor
inc
les
cwtl
lds
jbe
mov
xchg
pushf
ljmp
pop
rcrb
fdivrl
inc
mov
inc
js
push
mov
mov
push
aam
out
test
xorb
fsubrs
and
cli
mov
loop
xchg
rcll
dec
clc
mov
mov
aad
inc
shr
xor
pop
fwait
jnp
xchg
popa
push
push
xchg
jg
stos
mov
pop
and
out
loope
cmc
fiaddl
xchg
sbb
jle
cmp
dec
je
addr16
lahf
cmp
xor
repz
in
hlt
jge
inc
fs
rcll
pop
push
dec
stos
add
rorb
cmpb
insb
push
cmp
loop
jne
mov
scas
pop
pop
xor
mov
int3
js
fld
mov
push
pusha
xchg
popf
xchg
dec
test
add
mov
loop
push
cmpsb
insl
ljmp
mov
xchg
sbb
or
mov
adc
cmp
cld
cld
mov
pop
jmp
cmp
xchg
xlat
loope
insl
adc
or
imul
scas
mov
push
mov
pop
fnstenv
ja
nop
nop
nop
pop
in
loope
stos
push
mov
push
daa
push
jp
push
mov
andb
push
imul
and
xchg
aam
sbb
or
mov
dec
sub
test
xor
mov
data16
dec
or
pop
mov
dec
or
insl
in
nop
xchg
inc
adc
arpl
sbb
lcall
jge
cmp
mov
sbb
orb
xor
iret
cmp
outsl
dec
cmp
int3
adc
imul
mov
in
int3
inc
xor
cli
rolb
jl
out
dec
fmul
mov
ficoml
in
adc
xor
std
mov
mov
sub
jb
popf
add
mov
mov
out
sbb
or
or
lahf
cmpsb
sub
lds
jnp
pusha
aas
or
adc
add
push
push
sub
and
add
xor
divb
subl
in
or
ss
mov
mov
jge
adc
into
xor
xchg
lods
xchg
mov
mov
cmp
inc
add
lds
add
cmpsb
in
adc
add
ret
and
inc
cmp
ds
mov
sti
jae
push
jns
mov
nop
xchg
sbb
movsb
and
and
pop
inc
or
std
pop
rolb
cmp
pop
and
fisttpll
sub
push
incl
std
imulb
or
cs
push
ljmp
inc
pop
push
inc
sbb
cmp
inc
inc
push
mov
sub
aas
into
test
gs
or
xchg
mov
ss
dec
imul
lds
mov
and
aas
lahf
dec
xchg
dec
push
add
shlb
add
in
sub
push
push
sub
mov
mov
mov
fisttpl
mov
test
and
push
test
mov
xor
or
divb
dec
add
repnz
stos
daa
cmpsb
inc
aam
shll
adc
cwtl
sub
mov
lods
adc
lret
call
and
out
dec
xchg
inc
cmc
repz
jge
mov
pop
or
lret
pop
int
aam
mov
shlb
adc
mov
push
es
das
sbb
scas
ret
pop
mov
dec
sbb
fstpt
ljmp
cltd
cmp
orb
and
mov
outsb
or
addr16
jg
out
jle
jle
push
push
sbb
sub
or
sub
and
flds
adc
popa
add
xlat
jmp
out
adc
inc
sbb
mov
adc
sub
data16
dec
lret
imull
adc
insl
pop
shlb
xchg
xchg
cmp
das
ret
cmp
mov
aam
icebp
xchg
xor
adc
or
or
push
daa
sahf
out
or
out
xchg
lods
xchg
mov
loopne
mov
stos
push
mov
inc
scas
xor
xchg
popa
push
sbb
sbbb
xor
in
push
xchg
rorb
xchg
cmp
insl
outsl
adc
rorl
jb
packsswb
sub
setbe
xor
arpl
scas
sbb
dec
popf
arpl
data16
mov
ret
cmc
xchg
fisubl
je
add
sbb
or
mov
and
mov
fmuls
inc
push
jo
jbe
xor
xchg
or
xchg
cmc
sub
stos
out
mov
ret
call
mov
leave
cmpsl
jns
cmc
push
cmp
fs
dec
fists
dec
fisttpl
or
lea
push
xor
nop
cmp
fcoms
sbb
cmp
movsl
in
aas
ds
mov
add
pop
loope
mov
adcb
mov
fs
mov
loop
mov
mov
jl
rol
lock
mov
xchg
inc
jne
pop
xchg
enter
out
mov
xchg
je
outsb
xchg
sub
jno
fsubrs
aas
mov
aaa
add
adc
lret
divl
push
aaa
xor
lds
lods
out
inc
jecxz
ss
adc
bndldx
insb
sbb
jg
push
adc
cld
mov
rdmsr
xchg
iret
cmpsl
jmp
lret
enter
or
mov
add
lret
fs
repz
in
aad
movsb
push
daa
xchg
fimull
mov
and
xchg
shlb
or
cltd
cs
addr16
fs
fdivs
dec
jmp
cmp
or
je
mov
repz
aam
mov
repz
xchg
adc
popf
sbb
popf
fildll
adc
xor
sub
dec
lea
push
test
aas
sti
cmp
js
mov
in
aam
xchg
xchg
xchg
xchg
cmp
das
mov
cs
add
xor
fists
icebp
pop
sub
lock
insb
mov
imul
jae
lods
mov
nop
loope
xchg
jl
sbb
sbb
and
adc
adc
sbb
popa
faddl
cs
sub
test
test
lea
mov
inc
insl
addr16
and
cmp
pop
jne
pop
sbb
ds
mov
adc
and
mov
pop
ficompl
or
cld
jecxz
cmp
std
int3
sbb
pop
mov
xlat
xor
jae
sbb
jecxz
ss
push
xchg
jno
jne
jnp
sti
aas
and
lds
lea
fldcw
lods
inc
push
ljmp
push
push
in
outsl
adc
ffree
adc
aas
enter
orl
sbb
cmp
clc
fs
in
lahf
add
mov
out
stos
daa
pop
gs
pusha
mov
and
lock
jae
or
pop
inc
loopne
ds
mov
jbe
push
mov
push
and
inc
push
imul
adc
cmp
adcb
cmpl
mov
aaa
dec
pop
arpl
xor
das
stc
cmp
adcl
aad
ficomps
cltd
mov
rcrl
adcl
pop
loope
xchg
les
jmp
and
dec
dec
mov
hlt
cmp
mov
mov
xchg
ljmp
push
popf
fdivs
ret
fwait
inc
fisubs
jp
pop
sbb
ja
loopne
push
push
mov
and
outsl
cmp
mov
or
lcall
mov
pop
cmp
mov
add
cmp
test
jo
inc
xchg
sub
push
in
xor
mov
nop
or
test
into
xchg
imul
and
dec
into
shrb
bndldx
and
jp
les
je
push
fidivrl
jmp
pop
add
xchg
jb
enter
mov
or
iret
inc
movsl
mov
imul
add
dec
jns
js
les
imul
inc
and
mov
add
jnp
push
ret
fcompl
cmp
filds
in
mov
cmpsb
mov
mov
out
ss
mov
dec
aas
stc
loop
mov
adc
lcall
in
sti
aaa
ret
enter
xchg
lds
loopne
cmp
xor
xchg
pop
mov
mov
and
adc
and
iret
mov
xchg
sub
lock
or
movsb
inc
pop
adc
out
aas
mov
lea
sub
mov
adc
xor
leave
popf
push
das
or
loopne
pop
lock
sub
je
ret
shrl
or
lock
movsl
cltd
inc
add
arpl
cmpsb
dec
adc
mov
jne
fnsave
mov
mov
insb
sti
inc
stc
aad
popa
push
jns
and
je
mov
mov
mov
shlb
cwtl
pop
lds
or
push
dec
and
or
jo
cmp
sbbb
push
movsl
fldl
push
add
inc
inc
insl
cmp
outsb
sub
mov
movsb
inc
mov
bound
and
repnz
aas
inc
daa
jg
mov
mov
xchg
fs
dec
call
aad
mov
aaa
and
inc
mov
sbb
test
fwait
outsb
mov
push
pop
xor
rcrb
jno
sbb
mov
decb
cmp
dec
insl
adc
ss
sub
dec
jp
jnp
sbb
rcl
cli
mov
loope
push
pop
fucom
xchg
add
jno
in
cltd
add
push
jo
and
dec
xchg
orl
lods
xchg
mov
cmp
je
push
add
inc
leave
sub
xchg
stc
inc
rorl
mov
cmp
aaa
es
fxch
cmp
push
movzbl
clc
clc
dec
xacquire
mov
xchg
dec
dec
iret
dec
jb
std
aaa
fistps
and
lea
jne
push
insl
lock
jmp
mov
and
inc
in
das
into
or
sarl
fiaddl
mov
js
ret
mov
dec
cmc
mov
cs
cmc
imul
stc
sbb
rolb
out
add
jae
aas
adc
inc
dec
sbb
pop
push
insl
lock
pop
jge
add
add
add
pop
mov
xor
out
stos
cltd
out
loop
js
jne
jae
pusha
dec
sahf
dec
jo
scas
push
arpl
adc
jnp
pop
pop
cli
lcall
pop
lods
sbb
sarb
adc
sarl
inc
and
movsl
mov
push
and
sbb
lahf
add
sub
xor
inc
mov
int
arpl
push
sbb
and
inc
push
lea
xchg
mov
add
cmc
add
lea
xor
and
out
repnz
fists
xor
jne
sbb
dec
test
aad
mov
fucomp
sbb
stc
cmpsl
mov
xor
dec
int
js
fistl
shrb
jle
clc
sub
rclb
jp
adc
push
push
out
ret
xchg
dec
iret
cltd
dec
into
movl
mov
cmc
jecxz
lods
stos
gs
ss
ja
jmp
ljmp
mov
xchg
adc
jbe
jns
adc
lock
loope
and
mov
cmpsb
xchg
dec
shrb
pop
mov
cmpsb
mov
mov
push
fwait
int3
sub
jg
sti
cmp
push
xor
pop
jnp
xor
call
dec
fistpl
sbb
and
and
inc
mov
scas
adc
cmp
and
mov
mov
jecxz
test
sbb
mov
or
sub
jb
mov
mov
pushf
stos
push
das
aaa
ret
and
mov
lret
push
subw
es
dec
into
mov
test
cmp
xor
int3
jns
int
out
neg
and
pop
push
repz
xchg
cld
sub
or
xor
push
adc
xchg
mov
test
fidivrs
jge
je
out
test
leave
push
sbb
les
test
mov
test
lods
xor
mov
lods
cwtl
fiadds
inc
movsb
add
popf
mov
movsb
inc
aaa
popl
cli
xor
loop
lds
inc
push
stc
jns
pop
lcall
jl
push
and
cmc
or
or
test
sbb
scas
ret
adc
ja
add
sub
sub
push
adcw
lods
rcrb
mov
push
jnp
fwait
dec
push
adc
sub
jbe
jno
mov
loope
enter
add
lods
int3
aad
repz
popl
cmpsl
dec
clc
dec
imul
xchg
pop
sbb
and
mov
lds
xchg
fcomps
sub
cwtl
push
jae
inc
inc
push
das
adc
in
pop
pop
cmp
lahf
pop
loop
aas
push
and
jne
fsubs
jmp
xchg
fcmovne
cmp
das
pop
xchg
test
addr16
cs
and
or
cmp
insb
rorb
mov
int
sub
cltd
inc
lahf
aaa
fsubrs
sti
or
fmulp
idivl
mov
aaa
jbe
scas
push
sahf
leave
jns
mov
in
stos
mov
mov
daa
movsb
pop
rclb
jo
sub
int
push
xor
xchg
out
fimull
jno
rorl
popf
push
pusha
pop
push
dec
inc
and
pop
fisttps
cmp
call
add
xchg
fiaddl
cmc
out
pop
pushf
sub
stos
out
les
xlat
sub
mov
mov
push
sbb
xor
std
cmc
jl
sahf
stos
sarl
cmp
sub
jge
fcmovb
sub
dec
es
sbb
push
adc
out
cmp
adc
push
cmp
add
or
mov
sub
fdivrs
mov
mov
adc
lods
xor
int3
js
pop
lret
subl
clc
add
mov
aas
mov
sbb
inc
cmc
push
sahf
inc
lret
imul
hlt
pop
enter
xor
dec
xor
jp
jecxz
imul
lret
cwtl
js
loop
cmp
ret
cwtl
popf
jmp
je
aam
pop
jmp
adc
cmpsl
cmp
pop
int
push
adc
loop
xlat
insl
xchg
in
push
test
cmp
lcall
xorb
add
mov
push
sbb
push
mov
xor
xchg
fwait
sti
clc
pushf
adc
fadds
add
mov
mov
ret
xchg
sqrtps
fmull
popa
push
and
loopne
mov
lahf
mov
stc
pop
push
jle
push
cmp
gs
mov
xorb
mov
ss
aam
cs
in
fs
imul
fistpl
mov
push
mov
fiadds
pop
inc
cmpl
pop
push
testl
test
iret
loope
rcl
stos
dec
or
xlat
jle
xchg
subl
and
adc
out
lods
cld
cmc
sarl
mov
cli
les
cmp
test
or
andb
inc
push
add
insl
pop
mov
orb
ja
sbb
mov
mov
daa
test
loope
mov
stos
in
test
jno
call
enter
dec
cmp
imul
lret
xlat
cmc
and
jle
lret
imul
lcall
adc
or
jl
or
jnp
lcall
enter
scas
xchg
fs
jle
sub
or
cs
mov
pop
add
clc
pop
pop
addl
jno
push
bound
imul
jmp
jecxz
sub
pause
das
sbb
add
loop
repnz
out
pushf
adc
std
fwait
cmp
jle
lcall
sub
and
imul
adcl
test
cmpsb
push
stos
dec
in
dec
mov
xor
add
pop
dec
enter
lds
cmc
jno
or
push
push
and
push
insl
js
jbe
mov
xchg
call
shl
cmp
mov
idiv
daa
or
cmc
push
sub
imulb
lds
xchg
jns
jecxz,pn
popf
jbe
pop
add
shll
xor
test
xchg
add
outsl
lods
sub
xlat
fwait
dec
dec
bound
into
or
ja
add
inc
stos
test
fistl
cld
jecxz
imul
inc
fdivrs
jbe
dec
leave
cltd
xlat
adc
cs
inc
sub
ret
sbb
mov
mov
jo
psllw
jb
rclb
cmp
add
in
stos
cmovns
sub
stos
jmp
in
ljmp
sti
lahf
adc
mov
imul
insl
xchg
cmpsb
fsubl
jp
mov
mov
mov
in
push
or
sar
cmp
mov
aad
fistps
cltd
enter
inc
cmp
mov
push
std
cmpsl
lock
adc
fcoms
mov
sbb
jp
movsl
adc
add
sub
nop
xor
inc
mov
xchg
fcomps
fstpl
cmp
std
pop
xor
cwtl
xchg
jle
arpl
sub
inc
add
lods
pop
in
cmovs
ss
dec
lds
xchg
pop
dec
jae
call
xchg
dec
loope
jle
mov
xchg
jmp
push
ds
push
jno
loop
lahf
mov
out
pop
cmp
jmp
hlt
or
sahf
fwait
inc
jmp
dec
mov
push
popf
rclb
cmp
aad
adc
mov
and
out
pop
lock
scas
les
lcall
test
and
in
inc
lret
les
pusha
loop
lcall
and
ret
mov
cmpsl
ficoml
inc
cltd
imul
xchg
pop
xchg
je
push
sbb
lods
cmp
mov
cwtl
cld
insl
cmpsb
push
test
adc
push
dec
adc
xchg
sub
push
jg
xchg
das
xor
pop
add
push
push
fcmovbe
fwait
dec
call
jno
mov
xchg
xchg
and
lock
adc
bound
adc
pop
decl
jbe
add
outsl
int3
cli
lret
outsb
ffreep
sub
pop
fstpl
decl
mov
mov
std
mov
addr16
mov
inc
cmp
push
int
js
test
arpl
jle
ja
add
out
xchg
inc
lahf
pop
clc
shl
dec
jne
movsl
lock
sbb
cmp
cmp
dec
jns
or
ret
inc
inc
fists
jle
mov
xchg
repz
mov
dec
ret
cld
inc
outsl
xlat
dec
sbbb
mov
pop
inc
aaa
xor
xchg
mov
mov
neg
ja
jl
mov
lret
out
test
and
rolb
jmp
outsl
mov
hlt
pop
std
sub
aam
jle
rcrl
pop
jmp
dec
sbb
xor
jg
sbb
addb
leave
fldl
stos
clc
bound
nop
add
pop
sbb
dec
push
inc
mov
lea
sub
inc
bound
cld
jnp
mov
in
push
aad
push
lods
enter
inc
shrl
pop
js
jecxz
mov
sub
dec
inc
jp
mov
repz
ljmp
inc
xchg
add
sahf
jne
outsl
pop
mov
nop
or
ja
add
loope
gs
mov
pop
stos
repnz
xchg
push
and
outsl
sarl
popf
sub
aas
add
out
fs
mov
lahf
push
jl
sbb
fadd
cmpsb
fs
mov
mov
mov
fwait
cmp
xchg
test
into
fnsave
ss
aaa
dec
dec
fimuls
inc
sub
or
and
pop
cmpsb
adc
mov
mov
ffreep
hlt
js
rorb
fbld
mov
mov
lods
pushf
inc
ss
dec
cmp
add
out
ljmp
sbb
and
xor
sbb
rcr
xchg
mov
out
or
pop
adc
add
or
imul
or
xchg
cmp
mov
sbb
out
sbb
xchg
push
clc
icebp
int3
xlat
push
lods
shrb
sbb
mov
mov
jb
mov
popf
test
jp
jge
cmp
and
sub
push
mov
mov
dec
shll
test
add
jno
xchg
xchg
mov
ss
subb
dec
divb
mov
fsubrl
pop
lcall
inc
sbb
ficompl
pop
jb
mov
mov
jns
fstl
call
push
cmp
leave
push
addb
ja
mov
xchg
push
mov
jmp
fstpl
shl
pop
insb
inc
mov
push
mull
loop
into
pop
push
mov
dec
mov
jne
mov
fucomip
push
xchg
inc
cmpsl
std
push
and
cmp
sarl
cmp
cmpsl
inc
ret
popa
lea
push
and
pop
arpl
pop
xor
mov
ret
pop
cwtl
mov
pop
or
adc
adc
scas
xor
and
cwtl
into
data16
scas
cmp
dec
dec
dec
mov
arpl
sub
sbb
adc
dec
sbb
in
ficoml
cld
iret
jge
cmc
cmp
mov
or
sti
idivl
rolb
adc
jp
imul
sub
cmp
mov
xchg
and
jno
xchg
push
xlat
in
mov
add
imul
imul
lods
xchg
mov
adc
xchg
fimull
icebp
mov
ja
or
xchg
lods
test
cmp
push
adc
cmp
adc
mov
push
fsubrl
adc
movl
enter
pop
outsl
clc
iret
inc
sub
shr
xor
into
dec
or
es
movsl
jl
push
fstpl
push
pop
jno
insb
ret
pushf
mov
lods
and
mov
push
lcall
bound
xlat
xchg
loopne
ret
ss
jne
imul
arpl
cmp
sbb
insl
cmpsl
jae
scas
xchg
or
pushf
ret
insb
imul
fcmovbe
popa
jl
jb
aad
pop
cmp
mov
inc
or
inc
dec
and
sub
pop
hlt
cmp
inc
mov
and
pop
xchg
dec
pusha
and
mov
jae
pop
dec
aaa
sbb
insb
pop
decb
mov
inc
cmpsl
xlat
orb
sub
sahf
mov
imul
and
cltd
clc
mov
daa
cmpsl
int
nop
jno
push
mov
lods
and
cmp
and
push
sbb
lods
push
icebp
or
roll
scas
fldt
lds
es
stos
mov
mov
rorl
push
jmp
shll
out
and
stos
pushf
test
sbbl
lock
dec
lahf
sub
sbb
push
dec
jae
mov
out
jns
rcl
into
mov
popa
jle
popa
push
das
sub
push
jb
sti
mov
test
mov
jbe
mov
jbe
inc
fidivrl
push
test
rcll
jno
add
and
notb
pop
test
xor
inc
fsubrs
jns
xchg
xchg
push
ja
mov
xor
jb
push
xchg
xorb
cmpsb
leave
ja
aas
inc
xor
and
pop
cmpsl
loopne
sti
cmp
push
jl
push
ja
add
add
push
xor
mov
in
sub
xorb
fisubrl
lea
xor
cmp
push
aas
lcall
jle
add
leave
leave
cmp
movsl
aaa
shlb
pushf
fsts
xor
mov
mov
icebp
jno
mov
loop
ljmp
jmp
cli
pop
incb
jl
fcos
fstpl
push
sub
xor
imul
ja
and
dec
sti
lahf
loopne
dec
or
fs
mov
push
sub
jmp
cld
mov
lret
mov
fwait
and
je
lret
and
push
dec
sbb
add
sub
jne
jecxz
xchg
dec
mov
and
mov
xor
mov
sbb
jecxz
mov
daa
vpcomq
lahf
pop
lods
dec
inc
mov
fchs
mov
fs
pop
inc
dec
add
je,pt
lods
fldt
push
negb
inc
js
xchg
dec
test
xor
push
inc
fcomps
push
into
push
push
push
addr16
ja
cmp
adc
inc
pop
hlt
pop
into
in
fdiv
pushf
mov
mov
rcll
pop
in
jnp
push
in
test
sub
dec
rclb
in
mov
shlb
in
popa
dec
cmp
adc
or
or
xchg
inc
imul
push
sbb
cltd
insl
shll
out
push
sbb
push
or
and
stc
test
mov
mov
mov
mov
jmp
inc
ss
jge
sub
fimull
subb
dec
mov
jmp
xorl
inc
aas
pop
mov
adc
and
das
jae
xchg
sub
rcrb
sbb
sbb
mov
outsl
mov
outsb
cwtl
inc
fsubl
inc
cmp
loope
lods
xor
and
xor
dec
mov
mov
jl
hlt
int
push
test
punpckhbw
push
inc
lock
mov
pusha
mov
loop
pop
add
pop
push
or
mov
ret
in
pop
adc
stos
mov
test
mov
mov
xchg
test
repz
mov
jo
sbb
mov
dec
sbb
shll
pop
stos
fidivl
clc
mov
pop
fmull
mov
sub
pushf
in
lods
popa
fld1
cmp
aaa
or
jecxz
cmp
mov
lods
loope
xorl
pushf
rsm
mov
jle
int3
pop
dec
mov
adc
shl
fwait
ss
sub
out
and
imul
jae
int
stc
int3
cmp
ljmp
add
andl
test
xor
mov
fwait
mov
sub
jno
aam
pop
pop
xchg
mov
mov
mov
in
xor
xchg
iret
cmp
push
cmpsl
ds
mov
adc
mov
mov
ds
mov
lldt
add
jns
xlat
popf
cmp
cwtl
inc
push
out
dec
push
adc
inc
iret
add
xor
mov
fimuls
mov
adcb
clc
nop
jnp
add
pusha
movsl
dec
inc
and
jae
push
out
mov
inc
ds
sarb
jnp
mov
xor
out
mov
filds
sub
xorl
push
cmp
mov
mov
leave
inc
rcrl
sbb
ja
repz
out
iret
push
fs
mov
cmc
and
sub
scas
aam
loope
outsl
lahf
mov
xor
das
outsb
or
jle
lahf
push
and
push
adc
pop
inc
adc
pushf
jmp
sahf
adc
lods
and
movsl
insb
or
push
in
idivl
mov
add
add
cmp
fwait
jno
sbb
pop
or
add
mov
fsub
pop
mov
out
and
sub
loopne
lret
or
addl
ret
out
jo
arpl
cmp
inc
imul
fdivrl
testb
fcomip
sbb
sbb
out
ret
jge
jnp
and
xor
lret
test
inc
xchg
fsubp
rclb
out
pushf
call
mov
adc
add
mov
lods
mov
scas
decb
pop
sub
mov
jnp
lea
sub
jns
arpl
cmp
icebp
rorb
icebp
inc
xchg
pop
lods
pop
imul
cmp
sbb
repz
mov
jp
jb
mov
stc
adc
mov
fidivl
sub
mov
fcoms
mov
jge
lahf
test
je
sbb
popa
xor
jnp,pn
in
mulb
adc
ljmp
add
jns
push
lea
mov
sbb
mov
push
filds
inc
xchg
push
lcall
and
or
outsb
mov
push
iret
cmp
fwait
ret
ljmp
pusha
mov
inc
pop
cs
or
sbb
mov
cmc
adc
sub
mov
sub
mov
pop
pop
int
lret
sub
sub
jnp
imul
inc
sub
repnz
mov
stc
frstor
loop
test
pop
mov
dec
aad
popa
fidivrl
popf
mov
inc
outsl
outsl
pushf
inc
shlb
lret
cmp
scas
and
cwtl
cwtl
xchg
cmc
dec
mov
or
sarl
call
sbb
push
daa
ficomps
lds
cs
scas
rcll
and
mov
push
mov
dec
inc
push
xchg
xlat
in
fld
inc
pusha
jo
js
fsubs
out
jns
das
jl
ds
push
loop
dec
adc
das
push
das
repnz
xchg
loopne
imul
ljmp
lahf
inc
push
inc
insl
cmp
mov
mov
or
push
add
loope
sti
outsl
dec
mov
add
fbstp
pop
mov
xor
push
sub
movsl
cmc
adc
inc
sbb
mov
mov
dec
fs
dec
sub
shl
mov
mov
xchg
call
call
mov
icebp
jle
mov
cmp
insb
inc
stc
fisubs
aaa
ret
mov
cmp
push
adc
adc
insb
leave
adc
inc
lahf
into
mov
lcall
add
xlat
xchg
xchg
and
lahf
mov
push
cmpsb
in
pop
clc
lods
mov
jb
dec
mov
adc
jb
mov
pop
push
loopne
fucom
inc
nop
push
ljmp
mov
lret
sub
inc
outsb
mov
push
xlat
sub
xchg
cmc
xor
pop
and
dec
sbb
sbb
das
jmp
subl
xchg
mov
fwait
cmp
sahf
mov
popf
add
or
jnp
fdivrl
cmc
and
std
fwait
jmp
jp
jbe
dec
mov
leave
lods
pop
jecxz
cwtl
inc
cmp
lret
sub
xorb
pop
out
test
fistps
sub
in
xor
or
jmp
mov
xor
idivb
lods
icebp
lahf
ret
mov
inc
or
adc
test
xchg
mov
popa
dec
jle
rcrb
data16
mov
sub
cmp
sub
push
lods
gs
call
or
mov
bound
adc
cmp
xchg
dec
pop
push
shll
dec
enter
inc
pusha
outsb
dec
add
mov
mov
pop
addr16
cltd
cmp
test
mov
push
mov
shl
aad
pop
shl
and
scas
scas
adc
fs
xor
mov
lret
pushf
sarb
xchg
dec
rorb
cmp
sti
clc
or
jnp
in
cwtl
adc
fs
mov
sbb
ds
lock
sahf
xchg
fidivs
stc
push
outsl
stos
out
shl
lret
mov
js
enter
in
mov
imul
cmc
mov
push
lahf
mov
pop
mov
ret
push
out
call
aaa
lods
and
ja
inc
sub
inc
mov
xor
fldenv
mov
sub
sbb
xor
xchg
pop
or
loopne
iret
mov
dec
call
xor
in
cmp
sarb
pop
ds
mov
outsl
mov
cmc
in
andl
push
cwtl
fildl
xchg
xchg
dec
pop
loope
out
clc
jnp
lret
out
sub
ret
sbb
cli
mov
cmc
mull
pushf
jns
loope
in
call
and
xchg
lods
lds
hlt
adc
movsb
sbb
or
aaa
popa
test
sarl
jecxz
aad
cmp
mov
and
mov
mov
popf
xchg
pop
sub
sub
outsl
dec
push
hlt
adc
popa
pop
mov
and
rol
jo
call
lods
test
icebp
inc
lds
xchg
dec
xchg
ror
imulb
jne
mov
fidivs
inc
cmp
sub
bnd
cltd
je
adc
mov
jns
add
mov
stc
inc
stos
mov
push
mov
mov
call
lods
lods
and
cmpsl
push
dec
mov
cmp
pop
pusha
jo
xchg
push
lcall
arpl
add
mov
fwait
mov
push
test
xchg
movsb
fsubr
mov
cwtl
rcr
lds
out
ljmp
adc
and
sbb
insl
lock
sub
lock
pop
mov
add
insl
clc
xchg
repz
and
sbb
lock
gs
shr
jbe
pop
push
cltd
cmpsb
sbb
mov
rcl
bound
test
dec
movsl
or
pop
cmp
sbb
fnstsw
movsl
andb
lcall
mov
cmpsl
sbb
xor
test
sarb
fmul
jp
sub
out
adc
mov
dec
dec
cld
ss
lret
pop
out
hlt
mov
mov
xchg
fsubrl
enter
adc
in
rolb
or
sti
fiaddl
mov
push
pushf
orl
adc
mov
sub
subl
push
sbb
nop
xor
sbb
mov
jb
push
mov
out
aam
add
test
int3
enter
sbb
in
nop
and
inc
into
add
sbbb
orl
gs
fcomip
adc
push
fcmovu
push
xchg
xor
bound
iret
std
mov
les
clc
jns
sub
sbb
push
movsb
or
ljmp
fcmovb
add
cmpsb
rorb
enter
mov
je
sbb
jle
push
xchg
cmc
push
mov
pusha
stc
das
xorb
sub
mov
cmc
sub
mov
jp
test
xor
xchg
push
stc
adc
push
xchg
mov
adc
push
adc
push
clc
mov
and
rcll
cmp
mov
xor
sub
or
pop
jo
sub
sti
push
xchg
shr
sbb
sbb
jbe
hlt
stos
cmpsl
ss
pop
decl
push
out
pop
mov
lcall
cmpsl
mov
push
add
sub
and
push
outsl
out
sbb
mov
stos
mov
mov
cmp
jge
sub
fnstcw
setae
pop
das
insl
push
jmp
test
testl
ja
ja
push
mov
daa
or
mov
aad
pop
push
and
xor
loope
dec
cld
pop
into
or
fstps
ds
mov
add
and
dec
in
std
cmp
mov
add
out
rorb
cmpsl
nop
addr16
mov
inc
pop
pop
sbb
and
jo
push
or
in
ret
inc
out
mov
push
xor
and
mov
or
shl
cmp
and
sti
test
and
fsubr
mov
mov
lods
mov
bound
cmc
cmpsb
fists
stos
pop
clc
insb
and
push
aaa
and
sub
xchg
in
mov
popl
lcall
test
mov
call
adc
add
loope
add
loopne
cmc
imul
ret
push
xchg
repnz
hlt
jl
lret
stc
xchg
icebp
loop
repnz
ja
push
aas
jnp
subl
cmp
icebp
add
mov
jmp
xlat
adc
out
repnz
jnp
xchg
sbb
sbb
push
or
mov
push
aam
sbb
push
mov
or
mov
mov
aas
ja
int3
cmp
xchg
data16
fs
mov
fldenv
jb
bound
cs
pop
jo
outsl
or
ret
fdecstp
cs
mov
mov
fisttpl
adc
pop
ror
cmc
movsb
iret
test
add
aaa
stos
push
aam
loope
sub
int3
and
push
jne
xor
pop
nop
xchg
aas
or
xchg
popf
jp,pt
push
movsl
mov
loopne
sub
lahf
clc
jb
cmpsl
jmp
test
cmp
call
loopne
sbb
mov
mov
xlat
cmc
lret
jbe
jle
loopne
ret
push
repz
jbe
lret
or
or
lods
movsb
test
pusha
mov
mov
arpl
test
out
mov
jno,pt
aam
sub
push
jl
pop
jecxz
mov
pop
pop
fcomp
inc
sarb
cmc
pusha
cmp
xor
add
pusha
mov
push
jns
push
mov
and
aaa
jp
fiaddl
sbb
shl
int
sbb
fsubrp
mov
mov
sub
pusha
fstps
fidivl
jnp
paddw
xlat
mov
ret
lcall
sti
loope
xchg
lahf
cltd
or
dec
sbb
pop
mov
pushf
inc
mov
or
ret
je
mov
xlat
xor
mov
jmp
fbld
xchg
xor
inc
xchg
xorl
stc
ret
jae
xor
sub
jo
push
cmp
out
lahf
negl
sbb
arpl
cwtl
pop
lret
jns
pop
dec
insl
mov
pop
add
std
sarl
jns
in
mov
es
inc
andl
insb
dec
jecxz
leave
mov
dec
inc
jp
out
lahf
test
xor
jge
lahf
xchg
push
mov
mov
jo
out
jno
xchg
push
and
sub
fnstenv
mov
jmp
sub
cli
mov
and
stc
loope,pn
and
pop
or
sbb
movsb
jmp
jne
mov
jg
sahf
add
xlat
insb
lret
div
rorl
fs
and
jecxz
mov
out
sbb
mov
lret
ljmp
dec
jp
add
push
out
dec
lods
pop
inc
xlat
insb
mov
inc
out
xlat
cmpsb
aas
lock
lods
push
xchg
shlb
jp
daa
and
mov
loop
mov
sbb
push
bound
dec
inc
pop
dec
cmp
or
std
test
scas
repnz
mov
push
pop
jl
add
cltd
rcl
hlt
xchg
shl
bound
xchg
cld
xor
jb
sbb
rcrl
adc
data16
ret
inc
adc
repnz
xor
xor
push
pusha
aas
clc
fs
sub
push
push
in
sbb
mov
jg
sbb
gs
mov
in
lock
push
jbe
xchg
cs
dec
mov
push
lds
mov
inc
mov
adc
lods
std
shr
aas
mov
rcl
cmpb
movsl
mov
in
fstpt
aas
cmpsb
adc
das
cmp
inc
jp
lcall
jg
or
jl
cmp
insl
xor
or
mov
mov
pushl
testb
xor
mov
inc
pop
dec
push
cmp
mov
sti
repz
out
pushf
and
clc
xchg
add
hlt
enter
scas
dec
add
cmp
jl
into
int
fmuls
cmp
popf
adc
sti
mov
test
mov
inc
mov
jp
lret
add
mov
inc
xor
fs
jb
addr16
aam
ljmp
aam
scas
push
fiaddl
adc
xchg
add
push
xchg
mov
out
sbb
adc
std
mov
adc
push
push
popf
xchg
add
dec
fs
aad
pushf
or
ss
dec
jne
jnp
out
mov
adc
inc
push
pushl
test
cmp
push
add
sub
jmp
push
sar
fwait
stc
aam
pop
and
popa
or
adc
mov
in
flds
cmpsb
xchg
xchg
inc
lods
ret
shrb
sahf
shlb
test
stos
leave
sbb
stos
lock
loopne
test
decl
int
or
test
jbe,pt
and
lods
js
cli
outsl
pop
cmpsb
pop
subl
pop
ljmp
jmp
mov
loope
pop
push
test
cwtl
loopne
cvttps2pi
scas
fistpll
int
adc
sub
adc
mov
in
mov
mov
and
mov
adc
ss
in
icebp
mull
loope
test
out
xchg
inc
std
mov
fimull
ds
mov
and
nop
push
or
adc
mov
dec
mov
ret
loopne
mov
dec
and
add
add
faddp
outsl
push
cmpsl
shr
data16
rclb
xchg
rcll
xchg
lock
cwtl
push
in
std
mov
xor
leave
lret
sub
rorl
adc
daa
cld
cmp
popf
xchg
cmp
pop
or
arpl
pop
leave
push
sub
loop
shrl
movsb
scas
pop
hlt
mov
jmp
icebp
and
sahf
lret
fsubrs
aaa
and
mov
outsb
ret
xchg
icebp
out
push
jecxz
mov
xchg
lcall
mov
cltd
mov
jae
jle
pop
pop
inc
push
fsubrs
xor
jne
cmpsb
ror
insb
adc
iret
fsub
push
add
sub
scas
aaa
and
or
mov
add
lcall
in
cwtl
add
dec
xor
repz
decb
scas
and
addr16
shl
mov
sahf
jle,pn
fs
lods
jbe
popa
xchg
jl
push
aas
lds
pop
repz
mov
dec
dec
jno
arpl
jg
pusha
hlt
push
mov
pop
or
enter
sti
js
adc
push
jno
add
movsb
inc
jmp
cmp
call
pusha
dec
es
les
fsubl
sub
loop
add
mov
jg
mov
jge
jne
lock
jno
in
inc
adc
cmc
data16
xchg
decl
inc
adc
lcall
inc
fwait
xor
xor
into
mov
inc
leave
inc
sub
push
push
pop
fcompl
xor
pop
inc
cltd
mov
mov
lret
mov
mov
pop
mov
fs
int
ror
cmpl
add
push
mov
dec
jmp
cwtl
xlat
lods
jnp
sbb
xlat
sbb
fcoml
movsl
shlb
xchg
icebp
fwait
scas
daa
or
lret
sub
lcall
lahf
cmpsl
fwait
ja
pop
jmp
add
addr16
mov
adc
adc
xor
movsl
mov
in
pop
pop
mov
or
push
lods
lret
mov
sti
movsb
fnsave
shrb
pop
ds
fcmove
repz
out
popa
add
gs
dec
test
insb
push
movsl
iret
sub
rorb
jecxz
mov
mov
pushf
fadd
sbb
push
lret
mov
aaa
outsb
inc
popf
fisubrs
jp
push
int
rcr
shll
push
jmp
cmc
pusha
out
cltd
outsb
test
fbstp
inc
stc
pop
dec
loop
imul
daa
xchg
rcll
sub
lds
add
test
mov
jge
cmp
ja
add
push
divb
das
mov
xor
mov
int
loop
out
add
cmp
pop
std
data16
add
dec
add
loope
push
sbb
fists
inc
rcl
push
mov
add
jae
or
xchg
push
pusha
mov
pop
std
cmpsb
mov
push
movsl
push
test
in
xor
and
bound
in
mov
cmpsl
iret
call
std
xchg
mov
cmp
xchg
stc
test
movsb
mov
and
out
jnp
cmp
shll
xor
cmp
mov
out
mov
or
rorl
mov
addr16
sub
xor
bound
stos
setb
sbb
jmp
in
mov
lock
test
sub
xchg
push
out
jl
bound
test
mov
mov
and
movsl
xchg
test
lds
xchg
cmp
xchg
xor
pop
lret
xor
inc
inc
subl
mov
or
sub
in
sti
shll
adc
test
call
adc
xchg
sub
mov
mov
jp
cmp
jnp
test
gs
mov
stos
lods
cmp
outsb
popa
cwtl
dec
mov
cmc
xchg
fst
mov
push
mov
pop
dec
xchg
dec
aad
sbb
cmp
sub
mov
lods
sbb
mov
pop
mov
cmp
cmp
cmp
rorb
ret
sti
mov
pop
jnp
dec
pushf
lock
fidivl
push
les
or
pop
fldt
in
mov
xchg
test
int
lock
jmp
pop
mov
jbe
pop
jnp
out
out
pop
pop
std
lods
int
sbbb
sub
mov
inc
mov
add
movsl
mov
js
adc
out
xlat
mov
jns
or
jb
push
lret
cmpsb
add
test
hlt
ret
outsb
sbb
cs
movsl
test
or
push
adc
sbb
cltd
fwait
scas
pop
inc
repnz
fcoml
in
lahf
cwtl
test
cmp
jecxz
lret
fisubl
testb
ds
mov
xchg
mov
push
cmp
cltd
jge
hlt
ret
inc
in
js
sub
mov
xchg
stos
xor
pusha
mov
xor
in
dec
fists
mov
cltd
ja
inc
fistps
aaa
add
lret
in
imul
out
pop
test
mov
jge
xchg
test
lds
cltd
cltd
aas
dec
push
leave
insl
xor
clc
adc
cmp
and
xchg
loopne
js
jecxz
outsw
lock
sbb
lret
scas
lods
mov
xor
jnp
push
pop
xlat
and
jle
push
inc
mov
arpl
int
lods
sbb
mov
mov
sub
ret
mov
cltd
jle
or
mov
xchg
cmp
xchg
and
in
add
jns
loope
stos
adc
fldt
fsubr
sub
mov
mov
add
mov
xorl
mov
cwtl
fadd
sbb
cs
dec
lret
xor
into
outsl
jmp
repnz
repz
jo
pop
jg
insb
imul
test
xor
xor
rclb
push
pushf
or
shr
and
rorb
xchg
pusha
pop
movsl
push
mov
push
fnstsw
lret
out
in
fldl
xor
cmp
xor
inc
orb
sub
adc
pusha
test
xchg
fwait
inc
dec
ret
jg
mul
or
push
ret
sahf
pusha
add
mov
test
fcmovnb
mov
jp
cmp
out
data16
lret
sti
adc
mov
push
movsl
mov
mov
cmc
test
ret
out
int
leave
out
loop
pop
xchg
mov
or
jns
sti
inc
xlat
into
std
roll
jecxz
enter
sbb
bound
cli
xorl
sbb
and
adc
nop
test
cmpsb
add
dec
inc
mov
jecxz
imul
mov
test
fld
push
loop
or
std
int
into
sti
lock
scas
add
insl
mov
cltd
add
cmp
imul
sbb
mov
lahf
cmp
call
scas
cmpb
dec
pushf
popf
lock
sbbb
addr16
dec
ljmp
xchg
outsb
dec
lret
mov
pop
cwtl
jg
adc
dec
aaa
cli
cmp
mov
push
fdivl
mov
test
icebp
inc
in
mov
out
dec
pop
or
insl
cwtl
sub
sbb
or
push
call
test
cmp
outsl
stos
pushf
shrb
out
sbb
xchg
adc
fwait
lds
mov
jecxz
xor
ja
xchg
xchg
dec
iret
jmp
imul
xchg
inc
icebp
adcl
pop
mov
out
popf
cmp
cmp
outsb
add
add
test
cmc
push
cli
cmc
aad
lods
xlat
mov
mulb
mov
cmc
mov
add
fdivs
icebp
and
mov
add
imul
test
adc
les
push
mov
and
shll
les
mov
mov
pop
mov
push
xchg
gs
movsl
push
les
jns
enter
cwtl
neg
insl
and
cmp
adc
dec
out
or
imul
lret
popf
sub
sbb
mov
mov
out
or
in
call
outsl
mov
dec
mov
sahf
cmovs
jle
cwtl
outsb
or
mov
shll
or
test
push
out
orps
add
in
loop
addb
inc
push
dec
int3
mov
cmp
push
xchg
cmp
push
sub
pop
hlt
cmp
jne
xchg
stos
int3
fsubr
xchg
or
xlat
mov
out
cmp
sbb
ljmp
jl
imul
cltd
mov
xor
or
into
mov
subb
imul
adc
dec
jae
jge
push
pusha
nop
mov
xor
repz
rol
xchg
rcrl
lds
cmpsl
fnstenv
sbb
movsl
add
cwtl
gs
push
rclb
and
subl
sti
dec
cmp
lea
mov
movsl
pusha
inc
xchg
push
and
mov
in
and
push
mov
adcl
sbb
jecxz
popa
cli
scas
scas
aaa
aad
pop
cs
push
sbb
test
aad
jo
fildl
mov
incb
push
and
mov
loope
or
je
push
aas
cmp
testb
cwtl
into
inc
test
test
push
loop
inc
mov
or
lcall
clc
xchg
daa
into
daa
add
xchg
jbe
int
xor
js
std
iret
mov
adc
mov
jae
mov
cli
lods
sbb
out
inc
jne
or
mov
in
jecxz
inc
std
pop
subl
push
adc
mov
cwtl
cli
std
cltd
mov
dec
shrb
mov
dec
dec
out
mov
shll
mov
clc
sub
lea
cmc
pop
aam
mov
jb
push
inc
cmpl
mov
inc
mull
or
xor
jmp
jb
cli
outsb
pushl
dec
stos
sub
xor
call
jmp
xchg
call
push
mov
scas
shl
and
mov
mov
xor
cmp
push
cmc
mov
jl
ret
cmp
movsl
pusha
mov
add
dec
pop
inc
clc
xor
imul
mov
jo
lock
fcmovnb
sub
mov
dec
dec
push
lahf
xlat
adc
sahf
fisubrl
sbb
pop
adc
mov
xlat
add
clc
add
xor
mov
xor
int3
fwait
jne
lds
dec
les
repz
inc
and
lahf
stos
pop
imul
jecxz
addr16
stos
push
jp
xor
xchg
xor
sti
xlat
loope
scas
mov
mov
in
int3
push
add
fwait
sub
dec
daa
popf
rcl
mov
push
orb
pop
outsb
out
or
sbb
dec
test
mov
repz
loop
loopne
shrl
dec
and
test
shll
push
js
jo
adc
ja
dec
mov
arpl
ss
aam
testl
push
xchg
pop
dec
rol
push
mov
cmc
cmp
pusha
push
jl
dec
mov
cmc
jge
inc
ret
sbb
mov
and
adc
rorl
fcomps
jp
test
icebp
jecxz
daa
xchg
test
mov
xor
add
fnsetpm(287
mov
movsl
push
test
mov
roll
divb
pusha
jns
mov
pop
gs
data16
faddl
repz
stos
lea
jge
test
arpl
scas
in
aaa
shl
jo
mov
cltd
xor
ficoms
or
pop
and
iret
out
mov
test
and
repz
dec
pop
lret
adcl
xor
out
fstl
xlat
mov
jbe
cli
subl
sub
insb
movsl
dec
or
leave
xlat
cmp
sub
pop
mov
stos
push
jg
ss
sbb
ja
jge
mov
adc
nop
fwait
cmp
movsl
lcall
dec
jns
fidivrl
pop
mov
das
scas
mov
out
loope
loope
imul
or
ljmp
xchg
fisttps
mov
adc
push
xchg
cltd
xlat
sub
dec
movb
notl
xor
inc
and
adc
xchg
push
mov
sub
arpl
pop
pop
pop
ljmp
jae
clc
aas
popa
xor
cmp
nop
icebp
aaa
cmp
pop
push
add
push
push
xchg
or
jl
cmp
xlat
cmpl
pop
or
inc
andb
and
test
test
push
addl
rcrl
jle
popf
shrb
rol
and
lods
cmpsb
add
pop
mov
jmp
mov
add
repnz
mov
test
xchg
adc
mov
jge
xchg
mov
aaa
test
jecxz
jae
daa
enter
mov
jne
jle
in
scas
leave
push
dec
out
insb
mov
sbb
movsb
in
xchg
xor
mov
testl
movsl
adc
fdivrl
push
mov
mov
lods
dec
add
inc
mov
sbbb
aas
xorb
cld
adc
popf
adc
mov
jle
mov
pop
mov
sub
adc
ss
pop
negb
jb
xorb
jecxz
cmp
ret
and
sbb
fsts
dec
repz
push
icebp
adc
mov
hlt
and
test
rcl
shrl
dec
push
in
addr16
mov
lcall
es
shlb
fbld
movsl
out
sti
inc
dec
ret
add
sub
stos
xor
inc
cmpsb
jg
pusha
push
popa
insb
movsb
pop
push
mov
call
lahf
cmp
ret
sub
insl
push
cmc
out
inc
clc
add
adc
pushf
out
out
and
mov
int3
fisubrl
pop
mov
xchg
stos
mov
loope
pushf
fsubr
push
fildl
shl
or
mov
loop
std
pop
int3
jmp
dec
rol
pop
mov
lret
xchg
push
pop
loop
push
cmp
sub
pop
mov
loope
mov
mov
jo
ss
in
add
loope
inc
leave
push
pop
pop
jbe
outsl
fdivs
dec
int
xchg
push
ss
and
les
push
jns
mov
mov
in
jb
sahf
inc
mov
icebp
sbb
mov
sarb
test
mov
push
pushf
pop
out
mov
mov
mov
jns
cwtl
jp
fs
hlt
sbb
mov
je
jne
adc
loop
mov
or
aaa
inc
shll
ret
inc
mov
iret
adc
mov
rol
and
cmpb
popa
xor
adc
out
ret
xor
pop
repnz
and
mov
cs
cld
adc
lods
and
je
dec
jmp
fmuls
jmp
push
arpl
int
or
lahf
popf
pop
inc
pop
call
mov
mov
ficompl
mov
inc
imul
mov
sbb
xor
pusha
pop
and
leave
cmpsl
push
sub
cltd
mov
or
out
dec
sbb
xchg
dec
jle
pop
cmp
repz
inc
sahf
cmpb
inc
pushf
fisubrs
movsb
jns
jns
icebp
lds
addb
dec
lea
out
mov
aad
mov
xchg
inc
push
jno
jecxz
fdiv
je
int3
xlat
fldcw
lahf
dec
stos
mov
adc
mov
idivb
bound
das
rcll
ljmp
pop
ds
jno
ret
inc
int3
sub
and
mov
cmp
jg
stc
sbb
subl
jo
cmp
add
cmp
mov
out
xor
test
mov
pop
lcall
test
xor
hlt
push
out
outsb
int
inc
jo
shll
iret
daa
sub
arpl
or
jno
pop
out
pop
imul
sbb
imul
dec
test
mov
and
cltd
dec
sbb
std
inc
sbb
pop
movb
sarl
mov
loopne
cmp
xor
push
sub
lcall
dec
ja
lret
es
inc
and
cmp
fstps
lahf
les
cld
into
test
jnp
mov
jp
inc
mov
dec
or
push
sub
scas
mov
aad
fdivl
cmp
repz
push
xor
test
pop
out
sub
cltd
push
ret
loope
jns
inc
sbb
dec
xchg
adc
shrb
jge
mov
jg
in
sbb
push
es
adc
out
rcrb
mov
push
pop
mov
or
sub
cld
sbbb
adc
xchg
xor
mov
test
test
inc
stos
jo
ss
or
adc
pop
adc
xor
rcrl
into
xchg
fisubs
fcoms
subl
or
adc
adc
repnz
sarb
repnz
xor
test
sbb
pop
js
shll
rcrl
out
cmp
and
outsl
add
lods
aaa
dec
bound
iret
and
cltd
stos
pop
and
sub
pop
dec
adc
mov
cmc
push
push
adc
or
outsb
ja
nop
sub
add
shlb
push
add
add
lea
leave
xor
or
jo
imull
mov
add
pop
or
int3
mov
lcall
cs
push
xor
inc
xor
in
pop
cmp
ret
out
cmp
aad
stos
or
dec
lods
lods
popa
adc
push
leave
mov
mov
pop
add
test
push
cld
shl
stos
into
in
and
xor
bound
xor
cmpsl
pop
pushf
stc
movsl
shrl
push
cld
cld
mov
fldl
pop
push
mov
push
jnp
daa
or
shll
clc
aas
adc
push
mov
and
inc
mov
mov
xor
cld
jno
jns
stc
call
dec
rcll
aam
or
xor
nop
push
and
insl
inc
dec
fwait
ss
mov
clc
mov
dec
and
out
xchg
sbb
icebp
xor
pusha
jle
out
int3
push
fldt
in
sub
xor
cmp
xchg
loopne
stc
int
mov
add
ss
dec
scas
add
push
adc
mov
das
sub
mov
pop
mov
inc
dec
in
add
in
xchg
inc
stc
mov
rolb
or
test
jl
js
fldl
iret
fiaddl
es
test
sbb
stos
jmp
jmp
jne
pop
and
dec
das
mov
mov
out
cmp
notb
iret
inc
add
mov
call
sub
mov
outsb
sbb
insb
mov
lock
test
jns
inc
pushl
idivl
out
mov
lds
or
repz
add
add
outsl
mov
adc
fs
ret
shrl
loopne
cmpsl
inc
cmp
dec
adcb
push
or
cwtl
sub
aam
aad
adc
jg
stos
add
lds
or
cwtl
jecxz
sub
frstor
mov
fs
mov
hlt
int
xor
lret
sub
les
xor
dec
sub
jle
fcomip
mov
cmp
lret
loope
scas
testl
imul
bound
mov
xor
or
and
push
xchg
inc
jmp
mov
mov
pop
test
cmpsb
das
clc
inc
and
into
jb
fcoml
lea
bound
cltd
cli
jge
in
dec
pop
add
out
xor
mov
sub
paddw
cmp
out
adc
xchg
mov
inc
or
bound
add
jae
idivb
push
push
mov
cmc
cmp
loop
jb
fnstsw
sbb
test
cwtl
xchg
cmp
in
cmp
lds
xchg
xor
dec
into
js
adc
inc
add
fs
push
jo
and
pop
repz
mov
and
movsl
and
ficoml
mov
mov
imul
cwtl
xor
jecxz
stos
dec
lahf
loopne
fs
mov
dec
out
xchg
inc
out
dec
adc
push
flds
aas
out
clc
test
pop
imulb
in
je
clc
arpl
cltd
adc
adc
lods
in
sub
cmpsl
jecxz
gs
mov
mov
add
inc
inc
mov
loop
dec
pop
inc
xchg
stos
cmp
lods
mov
jb
xchg
divl
jp
mov
sub
pop
ds
movsb
in
sub
aas
adc
cmp
sbb
dec
imul
mov
dec
adc
fnstsw
sbb
js
fcmove
push
add
sbb
aad
idivl
dec
jmp
cmp
xchg
js
push
cmp
sbb
ret
add
roll
mov
mov
out
dec
out
mov
mov
insb
fistpll
pop
ret
cmp
cwtl
inc
adc
push
add
imull
sahf
mov
jae
loop
mov
hlt
inc
ss
mov
loop
dec
jne
adc
arpl
imul
ret
mov
add
dec
add
shl
cmp
jg
int3
adc
add
and
repz
dec
pop
adc
cmp
dec
mov
fdivrs
push
jns
aad
sub
or
mov
dec
sbb
cmpsl
hlt
mov
mov
add
xlat
shll
mov
lds
and
mov
cmpsb
jge
lret
push
stc
inc
push
call
and
add
pop
insb
pop
mov
and
aad
xchg
jns
cld
dec
leave
into
pop
mov
push
fcomps
lcall
inc
push
addr16
jb
xchg
fldl
pop
fcomip
inc
pop
out
cmpsl
push
push
xor
aaa
cmp
dec
pop
dec
cmp
or
sub
mov
je
lods
pop
push
lret
iret
out
sbb
cmp
xor
das
pop
mov
mov
outsl
jnp
jae
cmp
jno
aaa
pop
add
gs
cld
stos
fdivrs
sar
mov
imul
je
xchg
mov
mov
inc
or
adc
pop
and
mov
cmpsb
out
or
cs
or
adc
imul
popf
fidivrs
xor
xor
mov
imul
lret
call
repnz
dec
push
or
xchg
popf
xor
mov
xchg
mov
mov
adcl
push
push
dec
mov
cmp
cmc
add
mov
jecxz
loopne
adc
push
push
pushf
push
xor
into
or
pushf
and
gs
cwtl
fldt
iret
mov
pop
pop
aam
sbbb
push
insb
lds
aam
push
popf
lret
sbb
xor
call
ds
cmp
pop
cmpxchg
roll
jbe,pt
mov
add
dec
mov
adcb
aaa
mov
test
or
adc
call
adc
mul
aaa
insl
cmp
sbb
outsb
movsb
dec
pop
aad
bound
jle
adc
push
push
cmp
mov
ret
or
sub
add
or
jmp
cmc
in
movsb
push
out
mov
mov
ficomps
jl
daa
or
cld
xor
mov
hlt
or
enter
xor
inc
inc
lcall
and
cmp
adc
cmpsl
add
xor
daa
fisttpll
out
xchg
insl
pop
aas
mov
scas
jg
jmp
roll
push
pop
mov
stos
pushf
sbb
push
mov
push
sub
pop
push
repnz
jmp
cwtl
xchg
and
dec
fdivrp
loop
xchg
mov
int
pusha
mov
add
mov
pop
jge
pop
es
mov
fsubl
test
in
add
mov
inc
jp
inc
call
jg
jb
fisttpll
mov
aas
mov
inc
and
cwtl
add
inc
shrb
mov
xor
xor
push
outsb
xchg
dec
add
and
inc
or
aas
sub
xchg
cmpsb
dec
mov
mov
data16
clc
int
jg
push
fwait
lcall
jb
jmp
push
enter
repnz
repz
jge
shll
cld
call
inc
xor
out
mov
xchg
adc
add
mov
mov
inc
in
sbb
jnp
mov
loop
push
jne
cld
fs
push
js
popa
jle
xor
shrb
push
movsb
stc
jp
pop
cld
add
dec
sub
sub
mulb
mov
scas
or
sub
or
popf
mov
jp
cmp
ljmp
inc
in
ja
dec
lahf
sahf
inc
dec
mov
test
in
aam
sub
push
scas
andl
or
pop
ds
clc
jg
and
nop
adc
cmp
pop
fucomip
mov
dec
jae
sahf
aad
xorb
xchg
push
loope
mov
hlt
daa
mov
xchg
jno
xchg
sbb
inc
inc
pusha
mov
movsl
test
test
push
jg
ret
jae
xor
gs
or
mov
and
inc
aaa
xor
jmp
fcmovnb
dec
call
aaa
mov
or
jbe
int
adc
mov
lahf
fldcw
push
or
nop
imul
stc
lods
jmp
dec
push
cmp
shlb
xchg
cli
aad
jl
mov
sub
xchg
cli
xchg
dec
or
mov
jae
hlt
loopne
out
cmpsl
dec
fldenv
faddl
mov
mov
testb
jo
or
js
insl
call
mov
decb
cmp
data16
je
or
mov
mov
mov
inc
mov
lcall
cwtl
stos
mov
pop
daa
ljmp
scas
pop
mov
xor
pusha
xchg
fwait
jge
mov
sub
push
dec
xchg
sbb
sub
fdivrl
clc
std
xchg
inc
lcall
cmp
add
mov
lahf
lret
adc
imul
mov
pop
push
add
jo
push
insl
dec
outsl
push
dec
stc
enter
mov
popa
sbb
lods
or
dec
xchg
xor
loopne
push
ficoms
or
cmp
inc
inc
mov
jnp
lret
cli
pushf
or
push
pop
out
loopne
into
rcr
jo
inc
test
mov
jnp
inc
pop
dec
repnz
push
sbb
fwait
cmp
fisttpl
xchg
das
ja
mov
fildl
jns
scas
hlt
xchg
inc
outsb
xchg
clc
xor
jno
adc
jnp
inc
ret
cmp
aaa
call
sbb
shll
xchg
mov
adc
cmp
fiadds
les
jg
fidivs
push
adcb
lahf
lds
imul
dec
sbb
test
shrb
and
ja
fnclex
mov
mov
shlb
mov
adc
outsl
sub
ret
inc
cltd
xor
add
xor
outsl
jb
rorl
push
and
cmp
int3
idivb
into
xor
in
inc
adc
xchg
aas
pop
mov
loopne
adc
test
mov
out
mov
sbb
sub
mov
cmp
ficompl
test
jae
add
adc
xor
gs
movsb
sbb
xor
enter
inc
icebp
sbb
loope
int3
enter
pop
cmp
scas
sbb
xchg
pop
bound
fstpt
mov
loope
popa
xchg
jns
cmp
clc
xchg
orl
data16
adc
outsb
daa
adcb
and
xor
movsb
mov
or
test
fdivr
sub
mov
popa
cltd
lret
int3
pop
imul
pop
fs
data16
dec
adc
ss
mov
mov
xchg
jns
outsb
es
lods
rolb
dec
mov
movsw
cli
es
aaa
sahf
inc
testl
mov
pop
push
lcall
call
cltd
xchg
popf
sti
pusha
sub
mov
sub
fisubrs
cmpsl
jae
xchg
push
adc
addr16
mov
hlt
pusha
pusha
push
mov
bound
push
popf
mov
and
push
mov
xorb
pop
and
arpl
fcomps
xor
adc
sbb
std
cwtl
push
mov
cmp
add
lahf
or
jo
sbb
and
daa
cmp
xchg
lods
decb
mov
int
pop
out
pop
adcb
jne,pt
imul
in
movsb
cs
in
add
sub
xchg
xchg
and
pop
lock
ljmp
jmp
mov
or
mov
fcmovu
mov
shll
sahf
cltd
dec
sbb
pushf
test
gs
stc
enter
lret
lret
adc
insb
adc
cmp
stc
outsb
mul
dec
hlt
push
jg
pushf
jle
sbb
add
add
xchg
fisubl
jmp
lret
add
repz
mov
in
sub
es
or
push
mov
popf
pop
pop
xor
dec
je
xchg
dec
push
int
inc
sbbb
push
inc
pop
out
loopne
repz
dec
xlat
int
pop
jmp
xchg
xchg
lret
scas
aam
push
fbld
jmp
xchg
xchg
mov
xor
popa
mov
std
loopne
loope
pop
in
mov
test
pop
movsl
in
sbb
sbb
inc
mov
mov
fs
adc
fisubrl
push
rorl
and
adc
sub
mov
mul
adc
add
xchg
and
ljmp
aam
shl
push
mov
mov
std
das
dec
add
jno
jmp
js
jp
clc
xor
cmp
cli
mov
cmpb
xor
lea
cmp
notl
mov
das
ljmp
inc
sbb
orl
push
cmp
sub
ljmp
call
mov
dec
mov
gs
mov
jb
std
xchg
sub
mov
shlb
out
sarb
adcb
std
inc
add
push
xor
push
mov
fwait
and
das
cld
pop
jmp
pop
out
popf
sbb
cmpsl
aam
jge
push
sub
push
mov
es
xor
mov
shlb
test
stos
sti
aam
mov
ljmp
adc
jne
mov
push
adc
lods
jle
dec
push
mov
mov
jecxz
or
cli
insl
roll
lret
loop
jl
xchg
mov
xor
xor
sub
mov
outsl
pop
hlt
push
addb
lret
sti
iret
call
ds
fidivs
xlat
les
xchg
jp
cmc
stc
xor
xor
pop
inc
push
and
loopne
pop
hlt
cmc
call
xchg
pop
add
pushf
pop
mov
fistpl
sarb
in
cmp
shlb
gs
xchg
jle
pop
inc
int3
adcb
rcrb
mov
xlat
in
mov
mov
std
out
adc
lcall
pop
adc
mov
or
and
push
mov
shr
sarb
incl
mov
or
ss
sbb
mov
mov
cli
jnp
xchg
sub
and
sub
add
adc
cmpsb
in
into
int
rol
and
adc
out
incb
mov
and
sub
push
xchg
or
sbb
mov
stos
int
push
scas
dec
inc
ficoms
imul
or
xor
jnp
aaa
add
add
pop
movb
mov
into
mov
les
rolb
popa
imul
pop
je
inc
ja
movsl
fstpt
lret
pop
jns
das
shll
inc
mov
daa
shr
insb
divb
mov
jl
mov
or
cwtl
mov
inc
push
sti
dec
mov
xor
jle
repnz
add
in
adc
mov
jecxz
xor
out
pusha
pop
aas
pop
outsb
lea
data16
lret
ja
xor
and
jge
fs
stos
adcb
xchg
test
push
pop
push
push
repnz
test
dec
scas
and
int3
in
divb
dec
addr16
and
add
es
imul
cmpsl
add
mov
jmp
inc
xchg
sub
adc
out
ret
stos
popa
fcoml
push
adc
out
aad
push
sbb
pop
outsb
mov
orb
sub
ret
out
lahf
jno
or
dec
push
clc
neg
in
aas
jbe
rcl
loope
mov
inc
xor
scas
sbb
or
jl
out
mov
mov
lret
fwait
jmp
rcll
xchg
add
andl
in
mov
jo
cmpsl
sub
filds
lods
popf
fcoml
into
add
pop
sbb
sbb
jnp
adc
les
sub
inc
faddl
pusha
push
sub
movsl
mov
in
jae
fdivl
ds
stos
jne
dec
and
mov
and
cmp
es
inc
test
out
and
push
jno
out
pop
call
nop
mov
fsubrs
out
push
mov
fdivrp
push
and
mov
xor
inc
jmp
mul
out
cmpsl
add
mov
repz
cmp
pop
lret
lock
cmp
test
ds
pop
cmp
repz
cmp
fildll
cmpsl
xchg
je
stos
fwait
inc
jns
and
in
jle
jae
dec
and
mov
xor
pop
imulb
jle
mov
mulb
repnz
mov
push
and
sub
cmpsl
push
or
cltd
pop
das
add
int
rcrb
shlb
mov
pshufw
dec
jae
adcb
sub
mov
enter
jmp
and
cmpsl
bound
incb
inc
pop
stc
sub
add
ja
adc
bound
ss
jbe
insb
pop
iret
pop
push
imul
xor
and
or
dec
inc
mov
mov
xor
cmp
jp
xchg
ror
cld
pusha
aaa
mov
adcb
dec
adc
mov
cmp
lods
xchg
xchg
cmp
pop
jb
sub
sbb
js
arpl
dec
fs
and
push
mov
cli
lods
jl
xchg
arpl
mov
addr16
cmp
jb
push
add
cmp
lea
sbb
xor
or
xchg
sub
testb
fbstp
cwtl
inc
ljmp
mov
mov
adc
insl
dec
aam
insb
test
xchg
or
jns
outsb
mov
cmp
notb
stos
or
add
adc
sti
outsb
push
test
test
dec
jle
mov
inc
or
outsb
ds
push
gs
adc
mov
in
inc
push
test
cltd
add
push
test
int3
xor
inc
push
mov
arpl
je
pop
test
mov
fisttps
mov
ds
jl
push
or
xchg
outsb
dec
int
into
daa
call
mov
clc
add
cwtl
jbe
dec
xchg
and
cmp
mov
lcall
sbb
push
aaa
lods
dec
test
icebp
sub
sti
fmul
mov
mov
and
push
dec
add
mov
insl
adcl
std
lret
sub
push
pop
adc
mov
out
pop
inc
push
out
jge
add
into
push
sbb
pop
insl
or
inc
mov
mov
popa
sbb
lds
pusha
aas
xchg
inc
gs
rcll
jmp
int3
adc
mov
jmp
mov
push
adcl
mov
addr16
ret
repz
das
lcall
sub
inc
sub
js
mov
clc
sbb
xor
mulb
xchg
icebp
repz
bnd
lock
enter
clc
shll
and
int3
testl
out
dec
test
iret
pop
cli
je
cmp
clc
adc
xchg
xchg
xchg
adc
xchg
xchg
xor
sbb
mov
cs
pushf
jnp
sub
rol
push
in
lahf
adc
cmp
hlt
and
es
dec
pushf
mov
pop
fld
lods
sbb
cmp
cmp
xor
xor
and
xchg
cmp
mov
aad
mov
jbe
push
inc
sub
dec
scas
mov
mov
test
or
addr16
aad
test
pop
cmp
jnp
dec
mov
xorl
add
stos
mov
xor
jge
xchg
dec
jg
cld
mov
addb
pop
sub
mov
push
mov
pmulhw
imul
mov
clc
scas
dec
pop
test
lahf
push
pusha
xor
fstpl
cmpsb
lock
xchg
les
cld
dec
jg
cli
lock
lock
xorl
inc
movsb
scas
inc
jne
mov
dec
test
and
dec
arpl
cmp
out
ja
pop
mov
subb
jp
mov
or
inc
testb
mov
insl
fstpl
idiv
xor
iret
cmp
stos
fisttps
sbb
mov
loop
hlt
inc
mov
adc
dec
dec
cltd
mov
icebp
int
shlb
cld
rcrb
pop
xchg
sub
imul
mov
sub
xor
jo
sub
bound
shll
stc
in
icebp
mov
push
sub
jb
and
push
add
out
and
incb
pop
sub
dec
lock
cs
push
sbb
and
jns
mov
jno
in
push
out
dec
and
ja
imul
pop
push
lock
ret
popf
sub
out
in
push
inc
sub
div
xor
addr16
dec
shl
mov
ror
mov
pop
xchg
mov
idivb
hlt
pop
mov
lahf
jp
mov
imul
iret
stos
jae
adc
mov
inc
dec
push
adc
and
inc
into
test
xor
cmp
sbb
inc
rcrb
inc
adc
jbe
out
idivl
inc
add
inc
pusha
test
push
and
cmp
lods
adc
mov
pop
in
cmpsb
jae
orb
pop
and
jns
or
sbb
adc
jecxz
mov
cmc
mov
jmp
out
les
jbe
push
lds
and
xor
fimull
adcb
mov
cmp
subl
fsubs
lds
cs
mov
hlt
in
add
mov
dec
and
xor
pushf
push
jbe
cld
mov
popf
jecxz
scas
leave
daa
or
and
insl
sbb
outsl
fistpll
pop
mov
pop
mov
push
mov
pop
ja
int
hlt
into
inc
shll
idivl
test
out
jae
cli
jle
std
popf
inc
sub
xor
pop
cmp
adc
cmp
call
or
jge
dec
gs
lahf
xchg
xor
mov
sarl
scas
sahf
xor
adc
or
ljmp
cmp
out
inc
mov
mov
inc
jnp
jle
mov
fucompp
mov
cmp
sbb
icebp
jp
xlat
out
jmp
sbb
decl
loope
inc
push
jle
dec
test
jecxz
idivl
insb
sub
leave
mov
gs
push
mov
roll
jge
out
stos
adc
test
sub
roll
jp
push
sub
mov
mov
fiaddl
pop
adc
mov
ret
mov
lods
mov
jnp
pop
and
add
cwtl
add
sub
outsb
dec
push
mov
dec
iret
mov
mov
in
pushf
pop
cmp
jne
mov
sub
test
mov
pop
dec
pop
popa
movl
cmpb
sbb
in
aad
pop
lock
cmp
repz
mulb
scas
test
jnp
jae
repnz
add
ret
sbb
and
jns
jbe
pop
ror
xchg
mov
shll
add
into
leave
xor
or
cwtl
inc
daa
pop
cwtl
push
sarl
lahf
sub
in
dec
xchg
sbb
mov
imul
dec
ss
push
lret
adc
sbb
sti
movsl
sub
jg
mov
jno
xchg
sub
int3
cli
cli
pop
lds
xor
xchg
xor
fisubs
jle
cltd
pop
imul
incb
push
les
cmpsb
push
mov
lock
out
jae
repz
out
lock
cmp
rcrl
sub
mov
imul
pop
jg
dec
shrl
ds
sub
in
push
mov
stos
add
dec
sbb
and
int3
cmp
pusha
jne
sub
adc
cmp
es
add
scas
call
sahf
pop
adc
xchg
add
imul
repz
jp
mov
ret
std
rclb
or
fsubrl
fwait
mov
fs
mov
jmp
adc
gs
inc
mov
push
xchg
inc
sbb
js
or
push
sti
lds
addr16
adc
dec
roll
cmp
cs
iret
pop
sti
push
int
lea
push
movaps
xchg
stos
dec
int
or
and
or
orb
jae
adc
nop
lds
paddd
fsubrs
into
fwait
mov
and
mov
xor
mov
es
shrl
stc
mov
cltd
or
fwait
scas
call
jecxz
push
mov
test
test
cs
cli
or
push
ja
ds
dec
je
xchg
mov
scas
dec
mov
sub
mov
out
jae
or
or
jmp
inc
sub
repz
push
enter
leave
push
pop
rcll
sub
ret
enter
stos
push
imul
pop
add
cli
sub
dec
in
jmp
dec
pusha
repnz
pop
addr16
imul
in
jp
adc
jmp
pop
xchg
inc
xor
outsl
shrl
pushf
sbb
stos
and
cmp
pop
inc
add
add
fldl
aas
add
mov
mov
loope
or
xor
inc
sbb
lods
test
iret
rcll
jb
mov
pop
sahf
add
pop
xchg
dec
out
push
pop
add
dec
jo
pop
or
pop
dec
pop
adc
es
fcomps
cmp
call
mov
and
stos
arpl
loopne
repnz
int
sub
push
mov
cmp
popa
sar
pop
inc
sbb
inc
dec
aam
rcrb
adc
mov
and
lods
data16
jecxz
xchg
ret
pop
stos
sub
std
lock
pop
pop
sbb
inc
cmp
movsb
lret
lds
rcl
out
mov
mov
sub
mov
sbb
pop
add
push
and
inc
test
mov
movsb
mov
pop
fsubl
jmp
xor
jl
push
gs
push
imul
pop
push
dec
orl
pop
addr16
mov
shrl
ror
sub
xchg
sbb
outsb
add
adc
adc
fs
or
int3
push
nop
aad
ret
popf
cmp
outsb
fs
mov
cmp
adc
movsl
dec
lea
jbe
jno
shll
shll
or
sbb
sbbl
cmp
and
lahf
push
sbb
test
xchg
or
std
daa
ds
mov
outsb
sbb
dec
add
xor
in
jb
pop
adc
mov
fld
mov
out
xor
xor
aad
frstor
or
sahf
dec
mov
pop
loope
aas
cli
mov
mov
or
xor
push
mov
cmp
sahf
dec
imul
sbb
orb
movsb
das
bound
jle
je
sti
add
push
stos
mov
inc
mov
cmp
lock
add
sarl
sbb
cmp
mov
fisttps
jno
mov
xor
mov
fwait
cmpsl
ljmp
repz
fwait
das
cmpsl
cli
inc
xor
test
in
pop
xor
adc
leave
imul
xor
cmp
orl
lret
nop
lock
sbb
addr16
mov
add
mov
xor
outsb
cmp
dec
sarb
jmp
mov
mov
and
mov
icebp
stc
push
add
xchg
xchg
lock
in
in
inc
inc
leave
js
jns
adc
daa
test
mov
or
orl
mov
mov
fcoms
mov
jo
push
sub
and
js
dec
add
jg
pop
push
imulb
pop
mov
inc
outsb
jo
jg
or
pop
call
dec
dec
stc
mov
sub
mov
sbb
sahf
ficomps
or
mov
addr16
add
stos
std
mov
xchg
add
and
sbb
aad
inc
rcl
repnz
pop
addl
gs
jge
iret
cmpsl
imul
jle
imul
jecxz
negl
je
rorb
add
push
jae
mov
popa
cmp
out
mov
outsb
and
and
bound
sbb
mov
jl
out
ja
je
fdivrp
mov
add
cmp
pextrw
xchg
mov
dec
sub
dec
in
xor
inc
jle
imul
cmpsb
cmp
sbb
mov
fisubrl
sbb
clc
cwtl
fwait
pop
mov
jl
in
xor
sbbl
scas
movsb
dec
jle
pusha
inc
aam
xchg
xchg
out
mov
push
sub
mov
mov
add
inc
fidivrl
jnp
aam
das
scas
negl
rclb
mov
icebp
sbb
cmpl
rcrb
add
out
pop
sub
dec
lds
scas
add
mov
push
repnz
mov
loopne
pop
cmp
dec
call
xchg
add
fdivl
push
jmp
dec
jbe
loopne
mov
xchg
cmc
mov
inc
ja
push
jle,pt
test
add
mov
bound
dec
inc
enter
pop
shlb
and
jae
and
xor
and
mov
jmp
clc
pop
or
icebp
rorb
shr
jnp
out
fiaddl
gs
dec
ljmp
or
mov
andl
das
sti
and
and
in
mov
je
loop
iret
scas
cmp
adc
push
push
int
popl
mov
and
mov
fmul
imul
repz
mov
pop
insl
shlb
add
in
std
push
into
pop
enter
jp
test
repnz
cmp
sbb
cli
or
pop
in
jnp
pop
jo
jno
sbb
scas
pop
movsb
push
inc
cltd
imul
pop
push
imul
cltd
out
aaa
sbb
and
mov
aas
aas
loop
inc
xor
add
mov
mov
mov
sub
cmp
or
rcll
aam
fildl
xor
adcb
rolb
ljmp
cmp
and
adc
pop
and
or
jge
pop
adc
psllq
repnz
push
rcl
jmp
adc
loopne
in
mov
pop
aam
jmp
mov
insb
and
es
mov
cmp
inc
jp
das
and
push
or
and
xchg
lock
and
cmpsb
pushf
loope
outsl
push
lods
xchg
mov
xchg
insb
int3
ret
roll
fcomi
fbld
xchg
into
dec
sti
jns
lock
mov
pop
sbb
sarl
and
jbe
inc
or
inc
mov
adc
gs
ljmp
mov
cmpsl
test
lea
ds
fwait
dec
je
or
mov
adc
movsl
xlat
cmp
sub
iret
mov
add
sti
adc
xchg
sub
div
test
inc
push
add
cmp
jo
pusha
lret
js
icebp
repz
popa
popa
mov
jecxz
jp
xchg
divl
sahf
leave
push
jnp
push
push
sub
xchg
loop
mov
jo
push
movsb
push
test
movsl
stos
scas
out
add
inc
ljmp
cli
cwtl
shl
movsl
dec
cmp
lahf
sbb
arpl
movsl
hlt
fisubrl
or
or
add
jge
add
into
repz
imul
cmp
jmp
mov
xlat
or
mov
push
stc
outsl
jl
mov
stos
out
dec
rcl
or
jle
aas
leave
mov
mov
xchg
sarl
shll
sarb
and
push
and
xor
ljmp
imul
cmp
int3
push
dec
stc
xchg
and
ret
fsubrl
stc
mov
inc
pop
xor
or
jle
leave
add
out
sub
jne
xor
in
addb
ss
pop
roll
hlt
inc
push
push
gs
adc
sbb
lock
push
xor
mov
ss
mov
mov
mov
or
push
inc
mov
shl
pop
jae
push
in
filds
sbb
fildl
lahf
xchg
mov
in
aaa
inc
int3
dec
or
std
mov
mov
cmp
xor
add
out
push
or
jb
subb
mov
loope
xor
add
insb
sub
sahf
sbb
outsb
in
jmp
sahf
sbb
pop
xchg
jbe
and
sub
pushf
mov
into
push
inc
popf
xor
xchg
mov
dec
sub
inc
jnp
add
adc
sbb
and
pop
loop
push
sarb
mov
dec
mov
xlat
push
mov
push
das
mov
out
xor
adc
nop
cli
jp
mov
sub
push
cmpsl
int3
or
inc
inc
insb
pop
sti
cld
push
movsl
fs
cmp
test
jno
mov
push
adc
movsl
add
mov
push
jns
cmp
xchg
lods
dec
inc
pop
outsl
jle
lret
movsb
or
aad
pop
sbb
pop
aas
sub
push
test
pop
inc
add
rorb
push
cmp
in
jecxz
fmul
jae
mov
mov
fwait
pop
sub
push
or
or
ljmp
sbb
fisttpll
cmpsb
xor
loope
cwtl
push
cmp
rcrb
adc
movsb
mov
out
jecxz
out
fcompl
cltd
std
imul
ds
ficompl
icebp
cs
sub
es
xchg
mov
imul
xchg
or
fisttpl
lcall
and
cmp
pop
call
cwtl
dec
mov
inc
sub
cmp
movsl
lock
sub
sar
aam
pop
push
nop
aad
jg
out
rcr
clc
jge
inc
jmp
repnz
sbb
xor
fiaddl
push
pop
mov
sti
inc
scas
pop
data16
pop
mov
hlt
or
decl
les
enter
or
cli
xor
push
out
fisubl
js
mov
pop
ljmp
mov
fcmovb
xor
enter
push
clc
mov
pop
and
orb
mov
inc
cmp
or
push
popa
fs
lcall
sbb
cmp
subl
xchg
pop
inc
add
jle
mov
repnz
test
xchg
fwait
or
push
inc
in
add
movsb
jnp
sbb
mov
mov
movsl
dec
and
in
add
xchg
lahf
xor
inc
je
negb
xlat
jbe
je
lods
cmp
dec
mov
jae
push
aaa
cmp
test
ret
cwtl
xor
adc
es
xor
mov
inc
adc
mov
repnz
nop
jge
and
mov
push
fs
push
fistps
dec
test
xor
sub
lds
push
add
or
pop
daa
push
test
jmp
in
jae
stos
lcall
shl
lahf
das
xor
iret
lods
movsb
push
jge
out
cli
fs
push
xchg
dec
push
imul
out
jmp
pop
cmp
loope
mov
dec
test
je
xor
fisttpll
cmp
gs
pop
cmc
nop
mov
out
jmp
mov
loop
fs
test
in
push
rorb
movsb
popf
outsl
popf
sub
lret
shll
jbe
lret
jnp
mov
xchg
push
xor
icebp
loope
xchg
test
sbb
scas
in
je
loop
cmp
shlb
aas
icebp
popa
fwait
cmp
adc
pusha
loope
sbb
std
adc
push
bound
cld
enter
dec
xor
rcrl
movsl
dec
pop
mov
int3
lods
sbb
loope
mov
pop
stc
aaa
sbb
fxch
test
xchg
dec
cli
scas
or
sub
sbb
xchg
push
cmp
jecxz
cmp
call
in
inc
out
popa
and
sbb
cmp
call
scas
pop
clc
fs
loope
leave
lret
add
sbb
mov
popf
mov
mov
cs
movsl
aad
adc
std
pop
xchg
cmp
sub
sbb
cmp
adc
insl
loopne
add
imul
or
push
lret
test
sarl
adc
or
ret
xor
mov
cmpb
dec
adcl
adc
filds
cwtl
pop
jmp
push
popa
adc
cwtl
fwait
add
ds
push
out
mov
cld
push
adc
push
mov
or
cmp
addr16
mov
cmp
imul
xchg
cli
mov
sub
arpl
push
std
xchg
sbb
icebp
out
fmuls
sbb
mov
lds
cltd
add
mov
sub
arpl
fistl
push
mov
ja
inc
dec
stos
jecxz
inc
fiaddl
stc
pusha
cmp
xlat
jmp
jo
pop
push
xlat
divb
fwait
lods
mov
or
mov
push
fidivl
int
stc
mov
loop
mov
add
dec
pop
ljmp
push
pop
in
and
sbb
aas
stc
inc
sub
popa
shll
sub
push
adc
jle
cld
cmp
dec
xorb
pop
out
lds
jge
adc
shrl
daa
and
push
cmp
sti
push
ret
dec
add
loopne
pop
adc
movsb
std
hlt
loope
pop
ja
cmc
pop
pop
cli
out
nop
pop
sahf
dec
mov
testb
dec
and
cltd
jbe
int
mov
stos
inc
lahf
js
movsb
inc
jp
pop
cwtl
aas
xlat
push
adc
or
mov
mov
bound
push
xor
jo
xchg
mov
sti
inc
sbb
js
popa
mov
test
jmp
ret
rcrb
cmp
add
sbb
mov
or
js
mov
ret
and
adc
bound
mov
mov
xchg
fs
mov
mov
sbb
jo
push
loopne
aam
fdivrs
aas
jne
int3
or
pusha
je
scas
enter
mov
xor
lcall
ret
sahf
mov
mov
orb
jne
bound
sbb
xchg
cmp
pop
pop
sbb
dec
ds
lahf
int
insl
outsb
sub
je
mov
mov
add
and
sbb
pop
sbb
dec
sbb
mov
fyl2x
dec
pop
xchg
outsb
mov
jg
rolb
mov
test
cmc
adc
out
cmp
mov
mov
out
xchg
add
gs
sub
jge
cmovg
aad
pop
mov
mov
andb
sbb
push
adc
notb
aad
pop
jns
fs
mov
in
mov
rclb
insb
dec
cmp
jne
neg
stos
push
popf
adc
sub
ljmp
lock
jo
ds
sbb
mov
test
mov
jae
lcall
lds
shlb
test
pusha
cmp
loopne
cmp
add
int
xor
gs
jnp
push
mov
arpl
xor
inc
lock
jb
jns
inc
push
or
xor
nop
outsl
xchg
mov
jo
jecxz
mov
iret
jne
lahf
bound
mov
test
jecxz
andnps
rclb
adc
fs
mov
arpl
out
pop
xor
sbb
gs
insl
cmp
xchg
cld
sub
imul
mov
jmp
mov
add
add
or
mov
mov
mov
imul
jecxz
or
and
pushf
lods
push
sbb
adc
xchg
dec
or
and
add
fcmovu
sbb
int3
int3
aad
insb
enter
pop
daa
push
add
aad
pop
jl
ds
push
fs
xor
in
inc
outsl
out
or
mov
mov
leave
mov
cmp
aam
sbb
and
push
sbb
sbb
adc
mov
int
push
faddl
ljmp
xchg
add
pop
push
push
push
mov
mov
shlb
aad
push
fsubr
jo
pop
cs
xor
or
and
ficoml
or
iret
aam
addr16
call
and
movnti
xchg
jne
in
outsb
cmp
stos
sti
sub
add
fdivs
cmc
inc
sbbl
and
xor
cld
inc
stos
imul
rcll
cmp
jbe
pop
in
fcoms
pushf
and
xor
aam
jb
rcrl
fdivrs
pop
imul
dec
les
cmp
and
ds
mov
add
xchg
cmp
dec
js
jno
in
inc
jmp
mov
hlt
xor
cld
scas
aas
in
sub
nop
push
arpl
pop
fdivrl
outsl
cltd
push
std
xor
push
dec
xor
inc
scas
sbb
mov
dec
adc
jg
ficompl
inc
test
pop
std
and
push
xchg
out
test
sub
xchg
daa
mov
xor
pop
inc
push
enter
addr16
aas
ss
stc
in
call
xchg
adc
loope
add
stos
add
ret
xlat
cmp
jg
sbb
lret
sub
inc
and
cs
ja
es
inc
test
adc
hlt
leave
fdivs
push
lret
add
mov
jecxz
xchg
cltd
or
cli
and
ss
or
push
roll
daa
das
and
add
lcall
movsl
dec
ficoms
or
sbb
es
int3
sti
pop
jmp
inc
test
jo
test
hlt
js
mov
add
xchg
xchg
and
aaa
sbb
push
mov
dec
dec
mov
sub
push
pop
hlt
insb
xor
int
mov
pop
mov
xor
jne
aam
shr
out
push
mov
nop
pop
jmp
or
dec
mov
fldenv
sbbb
jge
mov
fiaddl
cmp
int
push
js
addr16
or
scas
jns
jmp
insb
int
xor
dec
icebp
pop
ret
push
mov
mov
xchg
adc
xor
pop
dec
sarl
mov
lea
arpl
call
xor
adc
push
aam
mov
movsl
jg
lods
mov
inc
dec
imul
ds
xchg
dec
int3
adc
mov
xchg
pop
jecxz
push
in
sbb
jno
inc
xor
lock
jle
jmp
xlat
test
push
imul
jo
adc
xchg
arpl
lcall
out
cmp
mov
fwait
xchg
decb
push
iret
and
xlat
add
add
inc
lret
and
and
pop
sbb
aam
adc
sub
ljmp
les
scas
cli
cmp
out
sti
test
hlt
jge
jnp
test
or
sbb
mov
mov
gs
xchg
sbb
out
js
imul
stos
es
aaa
pop
lea
jno
jmp
test
dec
adc
pop
rol
mov
repz
or
and
notb
sbb
push
add
movsb
push
xchg
mov
cmc
fdivs
sbb
xor
or
mov
sbb
sbb
das
aad
stos
pop
lcall
pop
out
mov
xchg
xor
in
push
out
in
and
jae
jg
inc
shll
and
push
sarl
pop
cmp
inc
scas
sbb
xor
stos
xor
int3
dec
jecxz
popl
loope
popa
lahf
dec
dec
jle
mov
push
push
or
pushf
pop
cmp
and
leave
testl
stos
es
bound
cmpb
pop
push
xchg
arpl
ret
adc
pusha
pop
bound
lea
sbb
icebp
int
in
xchg
in
mov
enter
imul
pop
lods
mov
jmp
add
or
in
cmpsl
insb
repz
sbb
sbb
or
sbb
xor
adc
or
or
xchg
ffree
rdpmc
dec
xchg
fiadds
fs
sub
fsubrl
sbbl
jbe
pop
fdivrl
xorb
xchg
and
or
lds
dec
ljmp
popf
xchg
mov
outsl
into
sub
jmp
xchg
loopne
rcrl
mov
iret
sbb
inc
daa
mov
pop
fidivs
dec
push
adc
lea
sub
adc
and
push
outsb
gs
aas
in
out
cld
dec
inc
push
test
dec
aam
mull
lret
sarl
mov
notl
int3
lcall
fwait
cmpsl
jnp
sbb
xor
push
bnd
jnp
ja
fidivl
insb
mov
divb
js
sub
popa
cmp
sub
push
sub
dec
lahf
mov
push
repnz
call
dec
sarl
adc
jp
xor
dec
xor
popa
out
jp
mov
pop
fsub
xchg
dec
dec
inc
btr
aas
push
add
rcrb
mov
popa
jne
push
cwtl
xchg
jns
mov
jo
mov
in
cmp
lds
das
xlat
push
or
out
mov
sti
sbb
and
mov
sbb
std
ss
or
adc
imul
sbb
mov
rcr
and
dec
dec
lock
sbb
xor
pop
lret
sub
cmp
in
cmp
cs
inc
inc
sahf
and
out
cld
or
jl
mov
sbb
ja
rorl
out
div
dec
push
ss
cmp
dec
repnz
xchg
adc
je
mulb
mov
adc
rcrb
inc
push
popf
lds
addr16
add
adc
push
mov
shll
vpinsrw
sub
and
fistpll
repz
mov
jne
push
jg
inc
and
adcl
adc
arpl
push
jmp
pop
sub
lea
pop
mov
push
idivl
movsl
inc
xor
test
test
aas
dec
out
pushf
in
leave
jmp
sbb
icebp
lds
inc
xor
popa
cwtl
pop
adc
mov
pop
popf
pop
add
cmp
std
sub
mov
outsl
xchg
sbb
inc
xchg
mov
xchg
cmp
xchg
out
xor
dec
dec
shlb
movsb
jg
ss
cmp
mov
mulb
push
enter
lods
add
cmp
loope
jnp
lods
cmp
sub
mov
push
mov
dec
jle
jb
movsb
or
sbb
xor
pop
xchg
mov
pop
into
fistl
cli
push
popa
arpl
ret
xor
lds
inc
aaa
rol
mov
xchg
sbb
sub
add
jmp
mov
or
lods
lds
dec
cld
or
cmpsb
int
inc
fwait
rcll
aad
pushf
hlt
shll
cld
jp
inc
in
push
out
sbb
pop
scas
xchg
add
mov
int
inc
push
mov
add
or
mov
push
jns
lahf
in
inc
loope
add
pop
cmp
add
xchg
pop
ljmp
sub
cmp
xchg
repz
sub
cld
mov
inc
out
das
xchg
outsl
push
xchg
or
in
push
sbb
mov
mov
je
lds
dec
clc
hlt
xchg
sti
adcl
mov
pop
or
mov
pop
and
in
push
inc
dec
jecxz
cs
mov
mov
push
repz
fxam
addr16
jp
cld
add
inc
or
jp
aam
pop
ljmp
ds
jecxz
xor
loope
sub
or
fildll
sub
xchg
adc
and
fwait
sbb
mov
stos
cmp
lock
jmp
shr
push
add
leave
dec
rorl
and
adc
out
cld
adc
arpl
inc
sbb
pusha
fwait
adc
cld
sbb
pop
push
xchg
or
clc
imul
iret
pop
or
scas
sahf
xchg
aad
push
in
adc
lds
stos
cmp
jnp
pusha
xor
or
cld
add
xchg
pop
cwtl
leave
mov
cltd
jae
cld
aaa
or
sbb
cmp
out
pushl
leave
in
leave
jae
mov
movl
ret
mov
inc
lcall
jmp
loop
jo
outsb
pop
sbb
inc
mov
mov
mov
dec
aam
scas
loop
into
out
pushl
stos
ret
xchg
pusha
cmovg
mov
xor
jp
cwtl
ja
jl
jae
jg
xchg
rorl
mov
iret
dec
idiv
jle
dec
or
scas
jl
xchg
popf
aam
adc
insb
jle
fidivs
fwait
cs
lock
jno
jl
inc
xchg
push
mov
loop
push
cli
fidivrl
cld
dec
jno
cmc
iret
jae
and
xchg
xchg
sbb
cwtl
and
dec
or
mov
imull
inc
aad
out
jp
xor
add
pop
xlat
sbb
psubb
cli
xchg
pop
sbb
push
in
sub
jg
fwait
and
loopne
mov
es
sub
lods
fstl
outsb
pop
or
popf
and
adc
roll
mov
push
pop
mov
icebp
js
rolb
imul
out
sub
push
cmp
mov
xlat
rcll
call
mov
mov
stos
mov
sub
lock
lods
cld
add
in
adc
adc
call
mov
and
movsb
mov
in
pop
or
jno
daa
sarl
dec
push
ret
mov
out
push
lock
sub
jb
adc
fs
add
in
imul
push
mov
or
hlt
aas
stos
insl
cmc
adc
mov
pop
inc
out
sbb
dec
pop
shrb
inc
stos
inc
mov
stc
mov
lock
xor
repnz
push
aam
stc
xchg
loop
push
jl
xor
lods
push
shlb
inc
xor
jg
in
mov
clc
cmp
mov
push
adc
mov
jnp
divl
fsubrp
dec
outsl
pop
jns
mov
in
rorl
ret
stc
jne
lea
sbb
imul
fwait
out
dec
nop
and
add
ret
push
adc
enter
loopne
inc
inc
sbb
arpl
scas
dec
jo
cmp
jmp
cmp
rcr
xchg
add
pop
inc
mov
jmp
mov
pushf
movl
mov
nop
push
add
cmp
daa
fmuls
jle
add
nop
xchg
and
cmc
subb
mov
shll
inc
adc
sbb
test
ja
mov
mov
push
pop
mov
xchg
cs
sbb
inc
cwtl
mov
add
cwtl
mov
sub
push
and
add
rcr
popa
mov
lods
rorl
movsl
lods
in
es
dec
adc
xchg
jne
inc
aad
sub
pop
sbb
push
fwait
add
xor
in
jne
cmp
ret
loopne
mov
jbe
mov
dec
pushf
fimuls
aam
ja
mov
add
push
int3
xchg
cmp
xchg
fsub
aaa
stos
inc
xor
add
pop
gs
rolb
dec
lahf
popa
or
xor
push
jle
push
leave
mov
negb
add
xchg
sti
mov
add
insl
sbb
cli
sub
in
sarl
xchg
push
cmp
xchg
fwait
lds
push
pop
cltd
add
xchg
dec
sbb
jp
cmp
mov
test
in
daa
iret
jmp
call
sets
stc
sub
push
pushf
aam
push
loopne
dec
or
inc
lods
mov
xlat
mov
mov
icebp
xchg
sub
pop
xor
in
sbb
jne
leave
iret
jmp
rol
out
and
negl
inc
pop
lea
jecxz
insb
popa
cmpsl
popf
dec
jns
int
fcmovnbe
jnp
test
leave
enter
and
dec
cld
xor
cmp
lret
repnz
mov
adc
or
mov
mov
jl
adc
mov
ret
mov
dec
sbb
cmpsb
testl
jo
lahf
incl
cli
mov
outsl
xor
mov
in
das
jne
jae
adc
dec
sbb
mov
add
jno
pop
mov
dec
adc
ret
push
sbb
rclb
xchg
or
jo
gs
and
jno
daa
js,pt
pusha
stc
mov
push
pop
cmp
lods
ss
fisubl
idivb
jl
cltd
addr16
nop
dec
ret
xchg
rcrb
lods
xchg
cmc
repz
addl
icebp
mov
and
repnz
adc
mov
std
jecxz
sbb
outsb
incb
cmc
or
bound
xor
push
xchg
es
stc
data16
idivb
pushf
push
sub
mov
gs
cmp
cwtl
adc
pop
out
mov
lds
cli
mov
repnz
enter
inc
xor
xor
test
pop
adc
pop
negl
in
out
pushf
arpl
jo
mov
lret
xor
cmpsl
in
jp
roll
pop
jmp
iret
cmc
pusha
mov
aas
rorb
jns
sbb
inc
jmp
data16
xchg
aaa
xlat
fildl
mov
movsb
fsincos
lcall
in
and
mov
sbb
inc
inc
gs
pop
push
cmpsb
ljmp
mov
sahf
scas
movsl
pop
or
fidivs
mov
in
in
sahf
clc
xorb
jg
inc
mov
adc
adc
stos
in
pop
dec
and
cli
mov
push
sbb
jp
mov
jo
iret
push
push
push
inc
loop
dec
shlb
fidivs
in
mov
insl
push
ds
cs
pushf
push
popf
sbb
lods
push
dec
std
dec
or
cmpsb
xor
insb
jb
dec
adc
lods
mov
dec
pop
cltd
inc
or
shlb
scas
fdivrl
clc
popa
jae
pop
jae
test
or
inc
es
data16
das
lock
inc
add
ss
ror
push
push
test
popa
in
outsl
adc
sbb
fcmovu
or
dec
dec
mov
fs
mov
add
pushf
arpl
xchg
xor
jg
les
mov
pop
push
add
arpl
xchg
xlat
add
push
data16
xorb
dec
lods
xchg
data16
cmp
in
push
add
lods
sbb
inc
jno
sub
das
pop
int
sub
out
mov
dec
push
jno
lds
inc
loope
push
jbe
jb
dec
cld
dec
ja
jl
pop
cmc
int3
mov
rclb
outsl
sbb
insb
or
jno
mov
sbb
repnz
cmp
push
test
test
insb
shrl
in
mov
outsl
xchg
xor
imul
dec
sti
and
mov
and
leave
sbb
imul
lcall
xchg
movsl
jmp
mov
mov
out
insb
push
xchg
push
cmpsl
mov
push
sbb
inc
pushf
sub
add
in
hlt
mov
add
les
movsb
and
iret
ja
adc
sbb
shlb
cmp
sbb
pop
dec
ret
add
hlt
add
add
jmp
mov
pop
cmpsb
or
adc
scas
arpl
movsb
addl
shll
addb
sub
xor
in
in
sti
and
enter
popa
popf
out
aaa
mov
cmp
push
fnstcw
jge
test
out
inc
dec
sub
test
movsl
mov
aaa
addb
inc
fidivl
add
dec
sbb
sti
inc
or
jb
into
sub
faddp
jb
inc
add
pop
mov
jg
pop
fs
stc
scas
inc
test
sbb
out
mov
jno
pop
mov
gs
or
stos
mov
mov
mov
fisubrs
decb
and
xor
sbb
sub
cwtl
add
xor
fwait
jl
lds
xchg
push
lds
movsl
decb
ss
xchg
cmc
xlat
lret
xchg
jo
repz
pop
ljmp
cmpsl
ljmp
pop
test
out
or
js
mov
repnz
xchg
sahf
add
lock
out
cmp
jmp
incl
pop
jb
jne
lods
dec
sbb
mov
inc
mov
in
nop
into
insb
loope
xor
pusha
jns
mov
mov
lods
pushf
mov
xlat
mov
push
ret
sbb
lods
pop
or
lds
pop
out
stos
xadd
pop
in
adc
push
lea
shrb
cli
movsb
xor
jecxz
and
test
repz
jno
xor
aaa
mov
fisttpll
and
int
mov
lock
cmovo
int
and
loopne
push
nop
dec
cmp
pop
mov
fwait
int
shll
in
lcall
dec
mov
pop
cltd
fadds
ret
cld
inc
fs
stos
lds
not
mov
shr
fcoms
adc
sti
and
sub
gs
clc
mov
loopne
dec
mov
jg
mov
cli
fiadds
mov
mov
cmpsb
mov
stc
lock
nop
mov
into
fs
dec
push
inc
sar
and
jge
xchg
fstps
pusha
insl
aad
push
testb
rcl
xor
mov
pop
mov
mov
rcrb
fwait
daa
fldcw
loop
sbb
scas
rcrl
and
or
clc
in
leave
push
xchg
sbb
outsb
pop
push
mov
popa
jecxz
iret
adc
clc
mov
cmc
xor
mov
add
pushf
inc
adc
cmpsb
std
lock
xchg
aad
push
shrb
mov
mov
test
xchg
adc
jae
sub
and
test
jg
mov
fisttps
pusha
sbb
test
loopne
add
jo
ret
lods
lcall
inc
push
pop
data16
mulb
fdivs
shrb
movsl
sbb
mov
mov
or
or
adc
icebp
test
cmpsl
cmp
nop
cmpsb
call
sahf
mov
push
mov
call
iret
push
cwtl
inc
fxch
xchg
xchg
sub
push
add
into
in
xor
or
and
dec
sbb
scas
mov
imul
mov
sarl
loop
push
mov
sub
inc
xchg
dec
xchg
mov
adc
lcall
mov
into
cmpsb
test
outsb
cmp
in
adc
lods
xor
cmp
adc
leave
sbb
repnz
cmpl
mov
dec
test
mov
push
iret
pop
mov
mov
daa
mov
scas
mov
sub
and
or
movsb
loope
push
inc
dec
xor
lret
insb
mov
dec
sbb
lahf
scas
or
aaa
jno
decl
lea
and
hlt
decb
push
sbb
ret
in
sub
jo
mov
in
lods
cmp
cmp
sbb
mov
test
xor
insl
shr
test
inc
cmp
test
or
cltd
cs
roll
fisttps
mov
mov
jns
gs
push
dec
loopne
data16
mov
mov
lds
sub
sub
test
cmp
and
arpl
mov
aas
das
pop
mov
fiadds
mov
outsl
adc
in
sub
mov
aad
push
sbb
test
cmpsb
fidivrl
imull
push
xchg
out
fcmovne
fldcw
jb
out
mov
loopne
push
daa
cmpsb
mov
adc
sub
push
add
sti
xor
int3
sub
rcrb
dec
cmc
mov
cmp
ljmp
pusha
fcmovb
jnp
rcr
pop
addr16
mov
sub
aas
ret
daa
in
shll
push
inc
rdmsr
ret
jne
leave
push
add
repnz
mov
or
jno
pop
sbb
addr16
or
clc
pop
je
fnsave
lcall
dec
in
sbb
ljmp
lcall
xchg
ret
sbb
or
pop
dec
pusha
xchg
shl
les
jbe
cmp
ss
sbb
sub
cld
add
inc
add
rcll
dec
xchg
jbe
fisubrs
add
nop
movsb
mov
test
sbb
stos
xor
mov
push
or
cwtl
mov
push
lods
test
ljmp
inc
out
dec
orb
sbb
ret
fstl
ss
arpl
dec
nop
adc
data16
xchg
mov
jae
enter
icebp
aad
lcall
inc
rcr
adc
add
push
addr16
rcr
arpl
xchg
push
das
das
adc
or
mov
loope
xchg
cmp
mov
sub
add
dec
ljmp
mov
xchg
jns
stos
adc
cmc
add
jno
sub
sub
loop
add
popf
pushf
jnp
add
lea
jle
mov
movsl
pop
jns
dec
stos
jo
clc
adc
shr
mov
mov
cmp
sub
sub
cmpsl
add
mov
cltd
stos
xchg
sahf
dec
sub
mov
push
fldcw
enter
ljmp
sbb
push
sub
insl
mov
or
adc
push
shrl
sbb
out
pusha
sub
nop
cltd
push
addr16
push
test
arpl
sub
and
fwait
push
add
ret
or
sub
fmull
cmp
iret
scas
mov
mov
pop
push
adc
xor
jbe
inc
sub
mov
hlt
scas
into
xchg
ficompl
cmp
xchg
jns
dec
pop
insb
add
add
ds
pop
inc
add
mov
ret
aad
jp
cmp
vfrczps
aas
lcall
cmp
and
nopl
leave
cwtl
pop
xchg
jmp
xlat
insl
ljmp
lods
push
mov
and
lret
ret
das
cmp
test
iret
add
das
xchg
out
inc
sbb
sub
cmp
lahf
es
pusha
inc
mov
sahf
cmp
xchg
sub
orl
es
pop
cmc
movsl
loope
stos
mov
pop
push
out
test
pushf
push
add
clc
cld
jl
adc
aam
xchg
lea
xchg
pop
mov
xchg
sbb
gs
cmp
mov
bound
push
adc
or
ror
cltd
aas
ja
mov
rcr
cmp
loope
adcl
or
mov
mov
add
das
xchg
dec
aad
das
mov
outsb
mov
out
outsb
sbb
sbb
test
push
jb
pop
mov
ja
pop
stos
cmc
lock
lcall
iret
jae
sbb
test
gs
adc
xlat
adc
fptan
xchg
dec
mov
in
xchg
jle
ret
insl
aas
sub
pop
adc
inc
iret
das
sbb
lahf
lcall
xor
adc
out
mov
add
cmpsl
out
inc
stos
and
xor
adc
js
dec
movsw
call
orl
xchg
hlt
pop
fiaddl
jo
add
lahf
pop
lahf
popa
filds
repnz
add
orb
mov
addr16
insb
fcoml
xor
shlb
inc
dec
shl
push
sbb
les
insl
mov
jp
daa
pop
out
popa
jecxz
repz
insb
pop
dec
jle
mov
mov
cmpsl
mov
hlt
aad
push
repnz
sub
sti
data16
adc
lahf
mov
dec
addr16
push
xchg
or
jge
jae
push
or
add
jge
and
jg
mov
jo
imul
call
sbb
xor
push
scas
mov
dec
int
mov
pop
repnz
xor
mov
data16
int3
out
repnz
paddw
adc
fcmovnb
xor
xchg
iret
cmpsl
inc
popf
out
lahf
loopne
cmp
outsb
jns
xacquire
inc
dec
out
and
dec
dec
add
add
dec
dec
pusha
test
mov
add
dec
jle
mov
dec
push
in
lret
imul
aaa
cmp
and
or
sbb
mov
and
dec
fsubs
xchg
lods
stos
in
outsb
jecxz
pop
inc
test
test
mull
cmp
movl
scas
cwtl
jg
mov
loope
div
popf
cmc
addr16
sbb
push
stos
push
dec
hlt
movl
das
ljmp
std
sti
in
lcall
mov
into
gs
adc
cmc
movsl
mov
gs
ds
out
mov
add
int3
inc
pop
adc
nop
push
movsb
jbe
data16
fs
repz
jnp
pushf
fistl
lods
mov
or
xchg
pushf
xchg
imul
lret
jle
ret
add
ud1
push
in
mov
add
mov
xchg
inc
inc
pop
sub
sub
rol
mov
pop
aas
push
addr16
lea
das
jle
inc
scas
jmp
and
stos
xchg
filds
addr16
leave
xchg
mov
or
addb
inc
inc
add
cmp
inc
push
arpl
xchg
or
je
movsl
imul
or
jbe
in
mov
popf
mov
and
xlat
xor
les
cmpsb
bswap
imul
inc
cltd
fadd
pop
test
push
cli
es
ss
and
loopne
mov
xchg
in
fnstenv
xchg
mov
mov
sbb
mov
addb
dec
cmp
data16
lds
int
mov
add
sbb
add
inc
orl
jnp
and
add
jecxz
js
sub
mov
sbb
add
stos
push
sub
imull
sbb
dec
pop
lods
add
or
cli
xor
inc
sti
push
add
inc
js
pusha
push
xchg
inc
push
push
sub
mov
fstl
rcrl
aaa
das
outsl
sbb
mov
out
shll
rcr
sbb
cmovl
dec
mov
test
lds
cmpsb
aaa
shr
mov
push
fs
bound
bound
hlt
out
test
add
popf
stc
cmp
mov
int
lock
roll
bound
adc
xchg
sub
pop
arpl
cmc
sti
pop
sub
jecxz
pop
mov
in
arpl
mov
cmp
popa
add
mov
lahf
dec
pop
sahf
and
cld
insb
sub
hlt
add
cmp
mov
and
fnsave
inc
and
and
pop
adc
inc
inc
test
inc
add
mulb
loope
out
aad
ficomps
or
std
ds
push
fcmovnbe
and
mov
cmp
jp
mov
insb
cltd
push
and
outsb
aam
xchg
iret
or
pop
hlt
sbb
mov
pop
jl
mov
ja
push
adc
fwait
enter
mov
push
add
inc
push
mov
mov
repnz
dec
and
imul
xor
push
mov
test
mov
cmpsb
and
jns
dec
push
push
sahf
mov
loope
jg
mov
ds
pushf
pop
inc
insl
inc
in
mov
jnp
mov
push
ret
pop
mov
or
mov
in
push
pop
pop
cwtl
into
fldt
sub
sbb
insl
aas
rdpmc
and
mov
jg
fcoml
push
adc
sbb
push
add
add
jmp
add
fwait
sti
ss
sbb
push
js
inc
shll
and
stos
icebp
push
mov
fstps
in
sarb
in
fs
add
xchg
daa
mov
popf
pop
cmp
jbe
ret
mov
fstpl
cmc
inc
jl
out
mov
movsb
fcomp
adc
inc
mov
mov
arpl
repz
outsl
aaa
imulb
adc
jo
loopne
xchg
dec
mov
mov
mov
xchg
inc
cmp
arpl
xchg
out
sbb
cmp
pop
cmp
add
outsb
cs
or
xor
popa
sub
mov
aam
stos
inc
hlt
insb
push
stc
mov
mov
sbb
adc
stc
and
sub
aad
sbb
popf
iret
insl
or
adc
out
imul
fninit
push
mov
repnz
mov
cmp
jl
adc
daa
sub
mov
daa
xchg
adc
mov
sahf
jne
jo
mov
into
and
xorb
lcall
mov
adc
inc
insl
call
sbb
xor
cmp
inc
movsl
ljmp
xchg
mov
fsubrs
fmul
jecxz
clc
or
movsb
lret
lret
shrl
push
pop
ljmp
jo
sbb
das
mov
cmp
into
add
push
mov
gs
cmp
mov
dec
jmp
dec
dec
aad
leave
push
shrl
sub
mov
dec
inc
aam
xor
add
les
popa
std
int
mov
jne
arpl
les
pushf
xchg
mov
addl
or
es
mov
push
bound
and
adc
mov
xchg
sbb
jno
pop
ret
adc
add
movsl
mov
jb
and
or
cwtd
out
jge
orb
jns
xchg
fs
mov
dec
scas
in
and
inc
dec
mov
mov
pop
adc
inc
pushf
mov
dec
dec
mov
lds
daa
outsl
popf
or
pop
gs
sbb
mov
add
repz
inc
adc
or
xor
push
sar
adc
movsb
push
push
push
xchg
test
or
lahf
sbb
pushf
std
adc
mov
fsub
scas
adc
fisubrl
jle
or
dec
or
loopne
or
scas
push
mov
mov
push
mov
shlb
pop
pop
mov
xchg
out
ja
or
push
outsl
aaa
push
xor
mov
sub
in
test
mov
aam
sbb
sti
out
sub
outsb
sbb
icebp
mov
in
or
outsl
scas
aad
scas
fstps
test
ljmp
push
pop
jnp
mov
xabort
and
sub
adc
jge
push
lock
or
sub
push
dec
in
test
loopne
jl
ret
inc
sbb
add
imul
xchg
xchg
addl
mov
adcb
jmp
call
sbbb
sbb
sbb
test
mov
fdivs
pop
add
imul
cmpsl
push
insb
rcll
or
and
out
add
rol
outsl
mov
rcrl
xchg
sub
cs
sbb
hlt
decb
adc
jecxz
dec
xor
aas
sub
out
pop
cwtl
in
adc
repz
fistl
cmp
mov
jle
xchg
and
mov
cmp
adc
int
jge
mov
insl
push
xor
test
jo
mov
cs
outsb
lcall
xchg
lret
and
sbb
fs
es
in
in
cmp
mov
xor
push
andps
inc
stos
cmp
and
in
inc
and
out
mov
mov
and
into
and
or
jmp
jg
sub
jle
pop
jb
xchg
inc
das
inc
pop
mov
icebp
cmp
int3
into
and
jbe
pop
addb
aaa
pop
mov
scas
pop
jg
pop
inc
pusha
outsl
or
dec
cltd
xchg
jno
adc
loopne
or
cmp
push
cmp
pop
cmp
cmp
pop
push
push
xchg
inc
mov
mov
sub
outsb
ljmp
mov
out
push
xlat
or
add
repnz
mov
cmp
mov
arpl
insl
cmc
xchg
mov
jno
jmp
lahf
pop
repz
push
dec
out
inc
pop
pop
jb
test
rcrl
je
dec
jmp
and
divl
loop
stos
sub
test
mov
je
xchg
jle
jecxz
or
xor
enter
dec
or
jl
stc
ret
sbb
jno
divl
pushf
adc
xchg
xchg
lods
arpl
int3
xor
jo
ljmp
pop
mov
in
mov
inc
push
xor
add
push
inc
je
loope
pushf
setnp
add
lret
mov
sub
xchg
sub
inc
lcall
outsb
or
mov
enter
notb
dec
test
jp
roll
arpl
or
stos
inc
imulb
call
imul
mov
push
mov
cmp
jg
mov
adc
daa
sbb
or
pusha
pop
xor
movl
sbb
sub
xchg
adc
sti
fdiv
sahf
adc
and
jp
sbb
jns
mov
mov
cwtl
and
bswap
scas
je
jle
imul
adc
inc
or
cld
sub
mov
cmp
pop
cmp
inc
adcb
push
das
and
or
inc
ret
lahf
subb
push
cmp
scas
inc
or
mov
xchg
inc
out
in
xor
jmp
icebp
jge
push
mov
sti
stos
mov
push
push
jp
sbb
lds
dec
arpl
int
dec
fsts
mov
rorb
clc
inc
popf
add
push
scas
xor
incb
push
in
out
sub
cwtl
dec
int3
iret
stc
adc
sub
cmp
sub
mov
aaa
ret
inc
ret
stos
leave
xchg
cltd
data16
dec
cmpsb
cli
iret
cmp
sti
rorl
sbb
mov
push
cmpsl
outsb
fucomp
inc
cld
mov
sahf
dec
addr16
lcall
dec
aaa
xchg
mov
ds
lods
mov
add
mov
mov
icebp
pop
dec
xor
mov
into
cld
iret
data16
icebp
jb
push
jns
out
mov
in
lds
test
loope
cmp
in
fidivl
adc
das
in
fbstp
and
or
cmp
or
lods
or
sbbl
xchg
push
sbb
arpl
loopne
add
sub
jle
add
mov
pop
xor
aaa
filds
call
inc
psubusw
mov
cld
imul
jbe
fwait
jmp
push
cwtl
push
adc
rcll
outsl
or
add
xor
lock
ret
sbb
pop
push
mov
sbb
add
movsl
jns
popf
push
dec
or
sarb
and
pop
test
mov
aas
or
sub
ret
int3
jp
xor
jo
js
ja
movsl
cli
loope
inc
xor
pushf
xchg
sbb
jne,pt
popf
in
call
push
sub
lret
fcompl
adc
xchg
adc
mov
add
stos
xor
pop
add
push
hlt
jp
cs
or
sbb
sbb
sahf
aas
nop
inc
mov
and
bound
inc
imul
aas
stos
jnp
push
and
data16
int
dec
cmp
rcr
cmc
xor
les
or
inc
and
fistps
addr16
xchg
stc
in
pop
loop
jmp
ljmp
hlt
or
std
pop
pop
sub
js
fadds
pop
xchg
test
dec
or
mov
mov
fbld
and
fucomp
fdiv
push
xchg
pop
jbe
mov
pop
sahf
ficompl
int
dec
sahf
jp
fiadds
push
sbb
test
mov
orb
push
fimull
jns
inc
popa
aas
pop
inc
ret
jns
fs
dec
xchg
mov
mov
xchg
shl
dec
cmp
rcl
add
pop
inc
and
xor
inc
lds
sbb
sub
stos
outsl
jmp
imul
add
sub
in
fidivl
int
fisubrl
in
clts
pop
stos
rclb
fimull
call
sbb
loop
ja
mov
out
sub
ret
inc
sbb
lds
stos
roll
cmp
jmp
imul
mov
mov
into
cld
lds
fisubl
add
cli
lods
add
dec
inc
movsb
push
sbb
adc
add
push
pop
bt
fwait
add
and
iret
and
out
xor
adc
inc
arpl
inc
ret
or
iret
mov
pop
xchg
or
inc
das
out
mov
lock
ret
ja
or
xchg
sbb
xor
wrmsr
mov
cwtl
add
or
iret
mov
stos
and
aaa
loop
lea
jbe
push
addr16
pop
fisttpl
inc
ja
cmp
iret
sahf
movsb
imul
in
insl
cmp
inc
in
iret
cmp
mov
mov
push
and
enter
jecxz
mov
vshufps
and
pop
jae
mov
test
ljmp
xor
inc
or
in
dec
cmpsb
xor
mov
sub
xor
jne
mov
xchg
popl
push
fcomps
sub
add
inc
sbb
and
ret
fistpl
sub
mov
das
nop
sahf
mov
inc
ret
rcr
enter
ficomps
out
sbb
inc
fmuls
jo
ret
push
and
mov
xor
outsb
jo
bound
rorb
mov
cmp
pop
pop
rcrl
ljmp
inc
fsubs
shll
push
add
sub
add
ljmp
mov
and
out
jg
adc
mov
adc
sbb
aas
cmp
je
in
das
cmp
cltd
mov
xlat
test
lcall
fimuls
div
les
xchg
negl
xor
mov
xchg
outsb
add
pusha
mov
jne
int
sub
dec
sub
pop
lret
popf
nop
data16
fsts
shl
sub
call
lock
lret
negb
jo
fadds
shl
sub
jns
mov
pop
outsb
jg
jmp
dec
fisttpll
adc
adc
repz
jno
sbb
mov
jmp
pusha
pop
add
xor
shl
jp
add
mov
stc
adc
sahf
pop
mov
push
ds
cmc
push
push
mov
push
mov
arpl
jecxz
subl
pop
add
hlt
imul
faddl
add
xor
pop
sahf
add
fdivl
les
pop
jne
inc
test
movsl
lock
nop
sti
sub
sub
jecxz
popl
lds
sbb
daa
call
arpl
pop
js
push
add
test
aas
int3
mov
mov
inc
pop
mov
iret
sbb
jmp
mov
loopne
jge
std
xorl
push
es
add
pusha
rcl
mov
push
cmp
xor
sti
jmp
jno
mov
cmc
mov
add
cmp
aaa
ret
or
bound
test
iret
daa
push
mov
jno
jmp
jns
jno
orb
pop
lods
jg
repnz
pop
aaa
pushf
jo
into
aas
mov
shrl
fisttps
je
pop
fs
ja
add
sub
pop
sub
and
pop
cmpsb
jecxz
ret
inc
pop
loope
imul
push
push
mov
mov
stc
imul
int3
jb
pop
inc
aam
sarb
xor
xor
test
sub
lret
mov
sub
mov
test
mov
push
aad
cmc
inc
insb
dec
cmovae
hlt
flds
mov
pop
fdivs
insl
das
lea
pop
dec
sahf
jne
shrl
gs
shll
push
mov
into
jne
ds
mov
cmp
jge
ss
xor
sbb
hlt
loop
xor
mov
fisttps
cld
enter
jl
push
addr16
iret
jg
sbbl
adc
sbb
jecxz
cltd
fcomps
cli
cmp
test
cmp
inc
flds
lods
sub
into
mov
xchg
in
xchg
incb
jecxz
mov
add
dec
dec
pop
fdivrl
push
mov
cmp
ja
xchg
test
cmp
icebp
loope
adc
fs
inc
cmp
nop
cs
imul
test
enter
adcl
popf
les
mov
sub
cmp
or
repz
push
pop
and
pop
push
mov
int3
jb
stos
jbe
dec
sbbb
sbb
stos
repz
test
lcall
enter
sahf
movsl
push
mov
sub
mov
fnstenv
cli
dec
pop
lahf
sbb
ljmp
subb
lods
addb
insl
lds
out
repz
push
imul
xchg
push
ret
pushf
int3
add
xchg
pop
jmp
or
sbb
int3
stos
sahf
fmuls
inc
adc
and
jle
sbb
or
cmp
call
pop
cmpsb
mov
movsb
popf
pushl
push
imul
int3
add
mov
mov
or
inc
loopne
cmp
sub
mov
pop
mov
sub
mov
and
les
push
push
mov
fwait
test
mov
jecxz
jp
pusha
std
fwait
adc
pushf
dec
popf
fistpl
hlt
popa
std
push
or
adc
mov
push
lods
int
or
fprem
addl
bsr
and
lods
sahf
insl
or
sbb
mov
test
xor
jo
dec
xchg
sub
stc
nop
add
fsubrs
add
imull
addl
pop
enter
leave
xchg
sti
mov
lea
cltd
add
inc
rol
insl
add
pop
push
stc
sti
jecxz
addb
pop
cmpsl
es
mov
dec
mov
rolb
std
add
rcll
fwait
xchg
inc
call
add
aaa
pop
add
test
xor
pop
cs
test
and
lock
cmp
ror
push
jno
mov
pop
adc
imul
xchg
fwait
shrb
stos
mov
adc
movsl
inc
dec
push
insl
aas
lock
cltd
pop
lods
int
mov
cmp
mov
fnstenv
pop
das
stc
and
or
cmp
lahf
or
int3
dec
jnp
daa
lret
cmovs
push
add
sub
fistps
enter
cwtl
pop
test
in
dec
icebp
jge
andl
push
mov
je
inc
mov
dec
out
mov
mov
data16
mov
lods
fxch
incb
iret
lock
mov
jle
stc
pop
sbb
sbb
inc
push
cmpsb
data16
into
cltd
shr
xchg
add
dec
sbb
pop
movntq
out
test
call
lret
movsb
lcall
jmp
mov
fs
xor
daa
lds
push
pusha
pop
lret
in
jne
push
mov
loope
mov
xchg
adc
lret
std
pushl
xchg
shrl
dec
inc
jbe
jno
sub
xor
adc
cmc
icebp
or
sub
add
xchg
push
jno
inc
aas
movsb
out
dec
inc
dec
cmc
sub
rolb
cltd
mov
push
lahf
popa
fildl
ret
in
dec
roll
or
push
xchg
add
imul
push
loopne
bound
inc
and
push
test
cmp
hlt
adc
clc
icebp
fadds
int
sbb
sbb
clc
cmp
cmp
adc
dec
jne
es
rclb
sbb
lret
test
jae
jae
mov
sbb
dec
insw
adc
pop
push
sbb
mov
rclb
call
mov
add
xor
mov
outsl
pop
cmp
mov
xchg
clc
xor
dec
mov
shrb
add
insl
or
addl
repnz
dec
movsl
mov
test
or
out
sub
mov
cmp
repnz
stc
popa
mov
xchg
dec
fisttpl
push
pop
sub
mov
jge
jle
enter
stos
push
adc
mov
das
mov
repnz
stos
stos
lahf
mov
daa
gs
repz
pop
inc
loop
sahf
lret
and
xlat
adc
mull
mov
push
mov
inc
pop
adc
sbbl
cmp
dec
add
lock
mov
mov
rclb
lahf
sbb
xor
add
outsb
xor
dec
xchg
popa
scas
enter
in
insb
sub
xchg
pop
int
adcl
pop
fisubs
xor
xchg
add
lock
pusha
pop
mov
loope
or
sbb
xor
adc
jp
fsubp
jbe
add
adc
outsb
sub
pop
and
cmc
leave
loope
dec
push
lret
xchg
js
inc
adc
stc
sbb
xchg
mov
xchg
xor
fidivrl
mov
mov
xchg
and
je
push
jp
lea
xor
cmpsl
call
add
andl
pop
pop
sub
lock
lcall
cmpsb
pop
cmp
or
cmpsl
add
sets
cmc
mov
inc
and
and
out
xor
mov
inc
hlt
dec
mov
pop
adcb
iret
into
cmp
test
dec
movsb
xor
gs
loopne
mov
or
sbb
mov
gs
push
cmpsb
push
fildll
out
enterw
push
std
addr16
dec
out
pushf
mov
jno
fsubl
mov
out
imull
pop
cmp
insl
sub
mov
cmp
adc
jmp
or
iret
es
arpl
dec
pop
cltd
idivl
jle
lahf
mov
aad
mov
out
and
or
and
jecxz
gs
mov
in
sbb
lahf
inc
fdiv
mov
mov
pop
inc
fwait
rolb
out
stos
cmpsl
test
adc
scas
pop
xchg
sbb
sub
pop
jns
insb
stos
ror
sarb
push
pop
mov
loopne
mov
and
push
and
sbb
lea
mov
leave
in
lds
rolb
mov
adc
jle
and
pop
cs
repz
add
cltd
aad
ss
je
in
mov
stos
sub
xchg
fsubrp
lret
mov
push
dec
inc
ss
popa
aas
in
addl
in
adc
cmp
cmp
dec
pop
sbb
mov
lods
cltd
inc
out
sahf
lods
or
sahf
xchg
ljmp
jmp
xchg
mov
cwtl
or
sbb
jnp
adcl
push
mov
insl
imul
xor
cmp
andl
and
mov
shrb
xchg
insl
imul
aas
cltd
adc
and
in
cwtl
jecxz
jo
sbb
inc
lcall
addr16
or
ror
lods
cmpsl
sar
out
sarb
push
jno
lahf
fwait
inc
nop
fadds
jle
movsb
cmp
movsb
mov
les
ljmp
cli
adc
push
pusha
and
cwtl
pop
in
cmpsl
adc
andl
adc
sub
xlat
fmulp
sbb
and
xchg
cmp
in
push
inc
mov
push
arpl
fisttps
decl
sub
push
adc
jmp
adc
mov
cmp
jnp
mov
sub
and
stc
xchg
push
jg
bnd
mov
lahf
mov
mov
sahf
xchg
adc
jne
lods
ds
mov
xor
bound
pop
add
inc
sti
dec
jl
dec
negl
pop
fcomps
xchg
xlat
cmp
or
lea
lods
pop
sub
loope
xchg
sbb
mov
lcall
in
or
cmp
adcb
sbb
dec
movsl
adc
ds
sub
call
fstpt
dec
stos
inc
and
insl
push
jmp
leave
mov
xor
test
jl
gs
fistl
enter
int
pop
xchg
movsl
enter
movsl
xchg
inc
imul
cld
insl
int3
dec
sub
subb
out
pushf
aas
jns
xorb
enter
xor
xlat
cmc
adc
xor
into
clc
dec
bound
insl
mov
add
push
das
and
mov
int
stos
push
iret
fistl
or
or
pause
pop
mov
stos
or
lret
sahf
cmc
rolb
movsb
adc
call
sub
jge
mov
dec
js
cmp
cmp
sahf
jmp
jl
popf
dec
lock
add
push
jg
pop
lods
inc
add
bound
push
inc
xor
cld
fnsaves
out
or
jbe
lods
sar
call
test
les
pop
inc
imul
in
ret
pop
jle
dec
jp
or
jmp
push
mov
inc
daa
movsl
inc
or
fucomi
sbbb
lret
ss
xlat
adc
jecxz
enter
pushf
push
push
fnstsw
pop
lock
jp
mov
push
in
jbe
pop
in
pop
fadds
sahf
push
jg
and
pop
jno
mov
test
cmp
jb
pop
pop
jge
jge
sbb
xchg
loope
jecxz
out
jmp
xchg
push
enter
push
les
bound
and
mov
mov
xor
pop
inc
add
loope
imul
sub
test
mov
sub
mov
inc
adc
mov
lret
jecxz
mov
xchg
pusha
cmp
aad
sub
xchg
mov
dec
aad
ss
mov
push
iret
inc
insl
hlt
pop
fidivs
iret
push
push
xor
or
into
dec
lret
iret
inc
loope
inc
rcrl
jp
rolb
push
daa
fucom
mov
enter
inc
jbe
mov
xchg
out
testl
jnp
rcrb
repnz
imul
aad
scas
in
cltd
inc
xchg
pop
mov
rolb
cmc
jle
in
jo
ljmp
push
dec
jae
jg
mov
jb
movb
jbe
jbe
pop
jno
sub
push
enter
or
adc
fistps
outsl
pop
jecxz
ds
xchg
sub
test
push
dec
and
and
test
inc
or
cs
jecxz
and
push
jbe
mov
sub
repz
cli
sbb
scas
rorl
movsl
jbe
jmp
add
pop
pop
sub
fwait
test
cli
loope
lret
mulb
pop
insb
push
std
cmp
cmp
xchg
sbb
mov
push
and
aam
sti
inc
cmp
mov
nop
jo
or
add
pop
out
mov
cmc
roll
dec
jmp
sbb
add
adc
clc
lea
shll
dec
ret
lods
dec
das
fs
roll
sbb
std
sub
or
mov
cmc
dec
fsubrl
cmp
mov
loope
sbb
rcrl
out
mov
lret
dec
adc
hlt
pop
lods
mov
jns
fisubrs
test
inc
adc
mov
add
into
xchg
lods
inc
jnp
add
sbb
push
and
insb
push
aad
stc
aad
addl
dec
mov
nop
sub
fs
mov
fwait
mov
fiaddl
mov
fs
add
add
jb
or
lock
mov
data16
pop
fwait
icebp
lods
paddb
dec
sbb
or
out
jae
repz
ret
arpl
notb
push
stos
sahf
mov
dec
cmp
jbe
inc
cld
imul
into
jae
pusha
pop
fcmovne
xor
pushf
sarl
cmpsl
cmpb
mov
aaa
xchg
jmp
lds
jmp
rolb
test
lods
pop
cmp
aam
xchg
xchg
sub
cs
dec
xor
fwait
jg
sub
in
jl
test
aaa
fists
iret
enter
push
xchg
mov
cmc
push
data16
dec
or
dec
inc
mov
adc
jge
test
into
mov
add
test
jl
and
stos
iret
lea
repz
xor
mov
mov
pop
add
xchg
add
stc
jg
leave
push
rorl
fwait
paddusw
in
insl
ret
mov
xchg
mov
pop
test
pop
mov
adc
divb
in
data16
fdiv
jae
aas
mov
dec
je
jne
popf
push
jmp
pop
lahf
repz
cmp
out
imul
sub
fs
loope
mov
sbb
pop
shlb
lcall
hlt
mov
and
or
push
ret
pushf
mov
sbb
mov
sbb
cwtl
add
pushf
jecxz
call
sub
jno
cs
adc
sbb
fidivrs
xchg
test
pusha
push
or
outsl
add
mov
xchg
adc
push
insb
bound
rcl
jbe
xchg
hlt
lds
repnz
sti
mov
sbb
lock
pop
popa
jno
mov
out
xchg
call
aad
les
je
pop
cmp
lret
ss
or
or
mov
mov
pop
loope
popf
xor
adc
xlat
push
xchg
pop
and
ss
insb
push
inc
loope
pushf
lcall
in
mov
subb
sub
popf
loop
lock
pop
jb
mov
or
fdivs
out
xor
addr16
test
pop
sub
dec
mov
cwtl
dec
inc
rcrb
mov
jg
cmc
add
sub
enter
jmp
test
jb
dec
in
hlt
lret
inc
call
and
popf
xlat
inc
das
fcomi
xor
xchg
pop
mov
sarl
or
int
cld
aad
jmp
pop
xor
jecxz
sbb
popa
adc
movsb
imul
loopne
dec
xchg
xor
xchg
ds
sub
js
repnz
sbb
cmc
call
jns
dec
icebp
imul
xchg
pusha
jns
inc
sbbb
imulb
mov
push
jns,pn
addr16
push
loope
mov
jge
mov
inc
mov
inc
mov
cmp
add
mov
sbb
arpl
push
inc
mov
sub
js
ja
aaa
adc
inc
add
fucom
scas
jns
push
or
int3
cmp
std
leave
inc
loopne
fs
fdivl
mov
mov
push
push
pushf
add
pop
or
and
or
sub
mov
into
lock
or
sti
gs
out
sbb
popa
xor
mov
insb
sahf
rcrb
push
movsl
mov
sbb
cmpsl
pop
inc
mov
xchg
ja
xchg
dec
push
rcl
jno
arpl
xor
movsb
push
popa
icebp
push
xor
pmulhuw
sarl
xchg
or
adc
and
inc
mov
push
or
in
xchg
scas
mov
xchg
scas
jmp
fimull
lods
and
mov
jnp
ss
mov
out
pop
mov
mov
mov
or
ret
sub
adc
sti
cmpsb
mov
lret
cld
into
int3
xchg
out
add
aaa
jo
or
data16
xor
mov
pop
jbe
or
push
insl
test
jmp
call
push
sub
jl
cmp
faddl
jne,pn
movsl
ljmp
lods
in
adc
mov
outsb
push
arpl
loop
inc
cwtl
inc
inc
xor
repz
pop
mov
xchg
add
xchg
dec
adc
push
call
les
dec
xorl
subl
fwait
and
pop
or
push
sti
jbe
mov
ss
xchg
push
mov
repz
adc
stos
xor
adc
loop
shrl
call
iret
mov
stc
add
imul
xor
adc
cmp
jne
fisttps
add
aaa
bound
mov
subl
push
fwait
jecxz
xor
mov
stc
mov
out
push
in
cltd
nop
shl
ret
mov
testb
test
sbb
fsubrl
mov
push
push
or
push
outsl
lods
add
out
cltd
dec
pop
mov
sub
adc
imul
adc
repz
and
mov
scas
jns
sub
mulb
movsl
or
cwtl
adc
cld
mov
xor
jbe
mov
push
ret
roll
fsubrp
mov
sarl
lahf
pop
orb
sbb
insl
cli
mov
jle
frstor
popa
add
pop
ss
loope
sub
lock
in
call
sbbb
cmpsl
add
je
push
pushl
xchg
adc
inc
repnz
test
mov
fisubrl
add
cmp
jp
push
cmp
adc
mov
cld
lcall
adc
shr
imul
pop
outsl
outsb
test
incl
mov
jb
mov
push
ja
xchg
push
xchg
lods
aas
and
sub
popf
pusha
loop,pn
popa
test
xchg
js
xor
lods
or
loope
add
and
out
push
adc
jb
outsb
cmp
sub
fnstenv
push
xchg
push
cmp
lret
push
inc
sub
stc
cltd
insb
shrl
or
push
out
or
inc
sbb
faddp
dec
dec
rolb
jo
sbb
pop
sbb
outsb
push
sti
js
dec
push
lret
insl
in
inc
imul
adc
xchg
outsl
or
subl
sbb
lea
dec
xorb
jne
sbb
push
jno
in
dec
daa
sahf
or
xorb
enter
adc
clc
push
dec
je
dec
icebp
je
outsb
aam
mov
push
jecxz
bound
addr16
xchg
dec
push
in
inc
jb
lcall
jae
mov
mov
cmp
dec
sbb
lcall
push
std
lret
scas
daa
decb
mov
addr16
inc
gs
pushfw
test
sub
and
arpl
test
ds
in
lods
or
movsl
push
adc
pop
mov
int
addr16
xchg
add
out
scas
cmpsl
pop
jae
cld
jno
inc
dec
pop
xor
mov
sbb
loope
push
lret
stos
dec
cld
cwtl
enter
sub
fbstp
test
dec
cmp
std
or
mov
fdivr
in
nop
mov
cwtl
insb
add
jl
aad
mov
push
xor
sub
add
dec
and
xchg
sub
xchg
push
dec
lods
add
dec
sub
in
mov
lea
or
mov
mov
jbe
mov
jnp
add
pop
or
pop
push
push
sbb
repz
push
leave
xor
fistpll
cmp
inc
adc
xchg
push
mov
adc
xchg
lcall
in
push
cltd
addr16
jle
js
out
and
jecxz
cmp
das
cmpb
imul
pushf
pop
push
add
aad
enter
mov
pop
or
or
cmp
outsb
xchg
and
jae
mov
aaa
call
adc
cmc
jmp
add
mov
push
test
xchg
andl
sub
cmc
inc
adc
mov
stc
xchg
out
scas
out
push
gs
out
jnp
mov
fld
xor
subb
cwtl
mov
pop
stos
sbb
push
xor
mov
add
lcall
fucom
cmp
mov
pop
bound
and
cmp
lods
mov
fisubrl
repz
lock
aas
clc
loop
dec
repz
in
inc
or
jnp
inc
jmp
les
insb
iret
xchg
add
movsl
mov
clc
fcompl
jge
push
ret
and
xchg
cli
inc
push
mov
test
stos
mov
fimuls
lock
bound
cs
pop
pop
fmuls
adc
mov
out
adc
and
not
adc
jg
imul
push
pop
psadbw
pop
dec
xchg
pop
push
push
mull
fldenv
out
dec
icebp
lahf
sbb
or
lcall
cmp
rcl
inc
js
cwtl
jle
xor
fcmovnu
scas
mov
jne
push
fistpl
sbb
jae
jle
inc
jg
cmp
scas
std
xor
popf
cmp
aam
mov
pop
cli
push
mov
test
xchg
out
dec
mov
mov
push
out
jp
xchg
adc
bound
push
adc
mov
xchg
jnp
adc
imul
bound
jmp
and
mov
inc
dec
xchg
and
or
aam
ret
aam
sbb
and
test
jle
or
cwtl
xchg
mov
test
in
pop
pop
xchg
mov
aad
imul
xor
and
inc
mov
xchg
popf
insb
jl
push
inc
outsl
stos
aam
lret
or
jno
cmpsb
inc
push
inc
jb
rorb
and
mov
cmp
push
lret
push
push
ds
jge
add
out
or
adc
push
pusha
test
pop
mov
inc
nop
les
outsl
sub
mov
jnp
jo
call
lret
mov
adc
ret
les
lahf
cmp
sub
mov
out
or
sub
pop
aaa
subl
sahf
mov
aaa
mul
ret
xlat
xor
loope
cld
fnstenv
lahf
jno
stos
dec
sbb
dec
pop
mov
fs
xor
xchg
mov
enter
add
in
stc
cmp
out
or
or
and
enter
add
cmc
mov
test
arpl
shll
outsb
push
ljmp
int
shll
fsubp
adcl
jno
pop
jo
insb
jne
mov
push
and
mov
movsb
pop
inc
js
fisttps
jnp
je
mov
inc
xor
mov
cltd
inc
push
test
cmpsb
scas
inc
xchg
and
mov
andl
sbb
outsl
push
ficompl
mov
jl
lods
cmc
push
scas
push
dec
not
or
add
or
bound
push
xchg
das
mov
dec
sub
into
push
in
lcall
int3
mov
rclb
jge
dec
mov
movsb
addb
pop
xor
outsb
sbb
jmp
andl
out
in
pushl
call
in
scas
pop
leave
in
aad
jl
inc
loop
out
loopne
icebp
sbb
es
ret
mov
lock
mov
daa
sub
mov
push
inc
lds
sbb
es
sti
xchg
inc
cli
pop
fld
pop
jg
mov
cmpsl
hlt
dec
mov
add
bound
cmp
sbb
scas
ja
push
insb
mov
adcb
xchg
int3
adc
shlb
jge
mov
incl
dec
sahf
lret
add
jo
stc
xchg
jecxz
lcall
add
les
or
in
adc
nop
dec
push
aaa
stc
lods
pop
fdiv
adc
ss
adc
cmpsb
clc
mov
aaa
xor
lods
xchg
cld
lret
cmp
mov
out
dec
out
pushf
jns
jecxz
pop
xchg
pop
fldenv
mov
or
stc
mov
sub
sub
mov
add
jl
dec
and
cmp
adc
out
pop
sub
adc
add
ja
mov
retw
add
test
sbb
pop
out
bnd
cltd
dec
inc
jge
jno
and
in
mov
aam
pop
repz
cld
push
repz
jo
inc
ret
shl
sub
mov
inc
and
cltd
push
mov
cltd
or
nop
mov
jns
aad
mov
dec
lret
insl
cld
mov
cld
mov
xor
dec
xor
push
and
cmpsl
fidivs
adc
mov
and
fsubr
ljmp
mov
subps
push
mov
test
fdivrp
mov
sub
call
pop
mov
out
mov
aaa
xchg
test
mov
dec
and
ret
aam
inc
call
test
sbb
je
jge
pop
pop
jno
adc
notl
adc
fisttpll
shrl
test
sarl
jo
cwtl
sbb
mov
mov
xlat
xchg
imul
lea
out
mov
loope
ja
cmp
jl
test
mov
fistpl
xchg
cwtl
pop
fwait
mov
xor
dec
outsl
sbb
rorl
and
lds
inc
daa
test
scas
or
or
into
shlb
lods
mov
ljmp
mov
pusha
leave
inc
mov
sti
in
xchg
pop
lahf
imul
mov
loope
lret
rcrb
add
enter
mov
into
or
xor
fwait
sub
test
imul
into
rclb
cwtl
sbb
inc
stos
lock
mov
pop
daa
jb
mov
adc
dec
xor
or
repnz
xor
out
sub
gs
xor
jb
push
loop
xor
in
xchg
xchg
adc
jnp
or
sub
testl
mov
test
andl
jg
scas
shr
test
faddp
sub
mov
in
mov
pop
jno
pop
push
stos
pusha
ljmp
cwtl
adc
cmp
out
sbb
jbe
push
movsl
andb
stos
ljmp
scas
out
mov
jmp
cld
mov
dec
divb
clc
or
mov
and
push
xchg
xor
test
push
ret
and
rcrl
sahf
aaa
mov
das
lods
inc
fisttpll
out
ret
cmpsb
test
xchg
pop
jnp
lods
adc
nop
xor
testb
mov
pop
xor
clc
out
jmp
jb
push
mov
push
sbb
xor
pop
dec
mov
pop
fldenv
mov
test
ret
xor
xchg
and
xor
ja
sub
lret
or
cmc
cmp
aad
mov
roll
into
xor
and
mov
push
scas
mov
cmp
and
les
rolb
pop
icebp
frstor
fldlg2
pop
das
push
test
jo
push
mov
bound
sarl
push
sbbb
test
xchg
mov
mov
fwait
push
pop
std
sbb
es
and
jmp
dec
test
xor
add
sbb
in
jb
sub
loopne
push
push
adc
fsts
mov
mov
pop
add
arpl
idiv
xor
shrb
sahf
jnp
nop
daa
sub
into
test
sub
mov
cmp
jae
push
nop
dec
inc
mov
mov
push
adc
and
mov
ja
daa
pop
mov
inc
daa
jb
and
gs
add
mov
lret
cmpb
inc
stos
imul
ret
loope
inc
ret
xor
lea
std
sub
inc
lods
fildll
jne
jecxz
and
mov
pop
push
xor
std
inc
jmp
mov
jecxz
mov
mov
inc
jge
mov
ret
lretw
loopne
jecxz
arpl
jmp
xor
and
ficompl
pop
in
gs
repnz
movsl
in
dec
fs
adc
mov
mov
xchg
lahf
rcrb
hlt
loope
data16
and
and
inc
popw
sub
and
inc
xor
sbb
and
scas
mov
dec
lea
dec
loopne
sbb
jne
dec
outsb
push
sub
lret
insb
inc
sub
pop
mov
pop
fs
adcb
jbe
or
or
mov
mov
in
out
sbb
faddp
xchg
xor
pusha
movsl
dec
lds
add
and
sbb
push
imul
ficompl
fldl
in
adc
cmp
mov
ljmp
lds
inc
jns
mov
sbb
and
inc
shlb
inc
loope
jns
icebp
fsts
mov
cltd
cwtl
mov
inc
outsb
stos
jmp
out
xor
pop
pop
test
cmp
jecxz
loopne
pop
pop
pusha
lods
and
dec
xchg
sub
lock
adc
mov
and
fisubl
mov
add
xor
xchg
out
pop
adcb
test
test
jg
ss
popa
push
rcrl
sbb
mov
xorl
lods
xor
jmp
pop
or
jne
inc
jge
and
fs
sub
cmp
into
imul
mov
popa
shll
xchg
sub
cmp
adc
pop
jl
add
sub
ficompl
cmc
cmp
pop
xlat
mov
jmp
and
bound
dec
cmc
or
cmc
xchg
jle
test
jb
sub
pop
xchg
dec
shrl
outsl
adc
ss
cmp
les
dec
rclb
and
nop
cmpsl
repnz
xchg
mov
or
imul
sub
xor
xlat
adc
and
mov
dec
mov
repnz
add
orb
ret
lea
mov
jg
mov
mov
xor
cmp
pop
test
push
scas
adc
rorb
clc
orl
aaa
fcmovnbe
jmp
out
lahf
or
pop
jne
movsl
bound
out
pop
sub
cmp
or
adc
xor
add
jmp
pop
ss
dec
addr16
sbb
mov
cmpl
sahf
add
adc
dec
stos
jg
mov
fistps
inc
add
jb
push
xor
lret
les
inc
mov
movsb
lock
push
aaa
fdivs
popa
inc
arpl
addb
aam
adc
cmp
mov
mov
lods
loope
lods
adc
dec
xor
rcl
inc
les
into
loope
adc
cld
cmp
js
mov
inc
test
movl
arpl
dec
std
jp
fidivs
mov
adcb
mov
fadds
push
mov
and
mov
inc
push
clc
pop
xor
inc
mov
mov
nop
fldt
inc
xchg
aam
lahf
adc
lret
jno
dec
mov
dec
aaa
pop
cltd
push
push
pop
sahf
fldcw
cmpsl
hlt
fbld
sub
xor
sub
int3
stos
icebp
mov
xchg
jne
je
out
add
pop
mov
lds
lods
in
sub
and
je
aaa
dec
scas
xchg
mov
in
jmp
fwait
clc
pop
lods
xor
sub
pop
icebp
enter
sub
pop
and
mov
mov
inc
push
gs
lock
pop
cmp
imull
sbb
int3
pop
cmp
pop
aam
cmpl
stos
stos
push
fisubrl
mov
mov
lret
adc
push
fstps
lret
pop
lret
push
ret
inc
das
aad
int3
mov
pop
scas
lods
push
cmp
sbb
or
insl
mull
cwtl
xchg
dec
pop
xchg
xchg
jne
movsb
cmp
push
das
cmp
xchg
in
push
jae,pt
test
adc
mov
test
and
popa
adc
enter
mov
cs
cmp
rorl
inc
sti
je
mov
xchg
jle
sarb
fists
rcrl
jmp
cmp
mov
scas
stc
jl
in
insl
rcrb
lcall
sbb
imul
jecxz
mov
mov
aaa
fwait
jnp
mov
push
sub
sbb
xor
mov
nop
push
xchg
out
pop
xor
xchg
dec
mov
mov
test
cmc
adc
push
fsin
mov
mov
and
jbe
pop
lock
sub
jecxz
inc
push
dec
lods
clc
out
mov
mov
dec
sub
inc
jl
dec
cmp
cmpb
jno
or
inc
popa
mov
insb
mov
mov
es
inc
insb
arpl
mov
pop
mov
dec
into
fld
push
dec
xchg
jnp
dec
mov
addb
cld
fs
rclb
pushf
es
sbb
aam
or
lsl
jo
jo
dec
out
cmp
mov
dec
jle
mov
pop
into
add
aad
lds
stos
dec
dec
inc
xor
add
shrl
pop
mov
inc
mul
jae
mov
hlt
jae
js
lods
sbb
sbb
adc
outsb
lcall
adc
push
ljmp
mov
xchg
jle
cld
loopne
sub
pop
shlb
loope
aas
aas
jge
dec
cmp
pop
dec
les
pop
inc
arpl
or
xchg
xorl
lea
and
popf
insb
inc
ljmp
and
insb
ja
std
xchg
aas
sti
push
xchg
arpl
cmpsl
std
into
add
aad
in
icebp
dec
inc
notl
inc
adc
ret
out
scas
lret
xor
add
push
addb
aas
pushf
insb
xchg
std
sub
add
shlb
rcrb
sti
push
cwtl
dec
mov
jne
or
push
gs
lods
push
loope
cmp
sahf
add
sahf
flds
movsb
daa
xor
andb
sub
sti
pop
pop
push
aam
popf
dec
imul
push
lods
adc
inc
pop
dec
lahf
incb
test
fs
and
scas
lcall
mov
jp
dec
jo
lret
lds
fsubl
pop
jo
es
mov
adc
push
sar
popf
and
lret
sti
adc
repnz
add
jno
cmp
shll
adc
and
jg
mov
and
in
pop
pop
xor
jbe
pop
repz
pushf
pushf
pop
pop
cmpsb
mov
rorb
mov
stos
pushf
jmp
leave
push
outsl
test
push
and
int3
or
mov
inc
pop
outsl
sub
test
xchg
cmp
inc
mov
fcompl
push
inc
mov
push
inc
sub
das
rcrl
add
popf
aad
mov
add
xor
dec
cmp
and
test
mov
mov
enter
cwtl
mov
xchg
in
jl
cmp
sub
stc
mov
dec
fdivr
xor
fadds
adc
insl
jnp
and
cmp
xor
imul
cmp
jno
cwtl
sub
lds
push
aas
sbb
nop
add
mov
dec
int
out
and
clc
push
push
add
orl
shlb
neg
and
push
notl
inc
add
dec
jle
mov
stos
sbb
lds
jb
aad
mov
sahf
sar
ja
sub
mov
add
out
mov
adc
xchg
jg
jne
loope
cwtl
push
shrl
fistps
jle
in
ds
adc
push
aam
sub
xor
mov
lods
fs
jge
je
jle
dec
xchg
xchg
sbb
addb
fsub
popf
jl
dec
imul
push
adcl
cmp
sbb
pop
mov
sbb
orl
test
js
fisubl
addps
js
dec
xchg
dec
inc
test
pop
push
jae,pt
es
lds
lods
dec
lods
mov
xchg
and
and
jecxz
outsb
js
ret
mov
leave
dec
sbb
xchg
fmuls
pop
mov
test
pushf
push
mov
xor
decl
out
mov
rol
call
out
dec
leave
rol
and
pop
mov
cmpsl
out
xor
lock
add
push
push
inc
jg
push
mov
daa
push
mov
sahf
or
pusha
out
int3
sub
daa
inc
dec
jecxz
es
into
mov
pop
js
mov
inc
jmp
stc
sub
aad
iret
push
sbb
repz
inc
das
aad
push
shrb
lea
fstps
stos
mov
and
mov
negb
add
loope
orb
jno
cli
fsubrs
je
pop
sub
sbb
ss
dec
push
std
cmp
and
cmp
rcll
ret
push
xor
aaa
rorb
push
jmp
pop
push
push
and
fistps
pop
insw
add
pushf
mov
ret
aam
inc
adc
js
mov
scas
jno
push
in
aas
cs
out
in
shl
shll
add
inc
loopne
xchg
jne
add
push
inc
xchg
aam
inc
mov
jbe
ja
sar
jbe
inc
test
daa
pushf
fdivrs
push
hlt
shl
arpl
sbb
lods
mov
test
add
inc
mov
shlb
inc
sbb
insl
lock
out
add
adc
adc
dec
mov
sub
add
pop
rsqrtps
lcall
ljmp
mov
cwtl
add
adc
lsl
ret
stos
fsts
es
push
icebp
out
inc
adc
out
leave
fs
mov
mov
add
ljmp
ljmp
outsb
adcb
dec
mov
pop
sub
loopne
mov
cmc
ss
adc
cld
mov
std
push
icebp
out
loope
xor
xchg
popa
iret
loopne
out
inc
stos
outsb
fsubrl
push
sahf
push
mov
lds
push
cmpb
cmp
je
inc
repnz
push
iret
pusha
cmpsl
mov
xchg
stc
rolb
add
sbb
jmp
shrl
scas
and
cmpsb
and
mov
pushf
enter
jb
fnstsw
icebp
ret
lcall
fnstsw
xor
adc
cmp
add
push
loopne
pop
fwait
mov
sub
or
push
or
rcrl
adc
mov
clc
cmpsb
jb
imul
adc
mov
fdivrp
sub
inc
xchg
mov
shlb
cltd
mov
lock
jne
ja
cmpl
dec
mov
mulb
cli
sub
add
add
jne
add
lds
insl
jb
les
aam
mov
rorb
lock
cmp
js
mov
dec
repnz
leave
or
enter
push
xor
dec
loope
out
aaa
xor
mov
jmp
xor
shl
int
aaa
adc
test
cmp
cli
sub
mov
out
add
jae
and
cmp
sub
lret
lcall
sahf
movsl
adc
rcrl
push
shlb
mov
add
or
xlat
dec
and
ljmp
sbb
in
or
jp
pop
and
and
out
xor
enter
nop
shll
fwait
mov
jnp
divl
cwtl
mov
aad
cltd
fs
imul
mov
jae
push
push
and
lret
xchg
shll
sub
mov
cld
push
xchg
xor
jo
pop
dec
mov
adc
mov
les
xor
insb
ret
insl
test
jg
cld
jl
dec
loop
ds
lods
fs
gs
out
ja
sbb
adc
xchg
mov
les
loope
addr16
insl
call
jmp
sbb
or
sbb
cmpps
jns
jnp
les
add
es
daa
jns
insb
out
enter
dec
push
adc
fisubrs
mov
push
sub
enter
mov
adc
xchg
cmc
cmp
jb
or
in
jbe
adc
sbb
push
rcrl
scas
sbb
lcall
sahf
lcall
jle
rol
sbb
mov
repnz
shlb
xchg
mov
cmc
rcl
adc
es
lret
bound
pop
aas
xchg
push
dec
mov
jecxz
pop
aad
or
add
imul
clc
lahf
jbe
test
gs
jecxz
mov
pop
lods
mov
sbb
pop
cli
gs
and
mov
push
bound
push
pop
push
fldcw
push
addb
sbb
inc
rorl
push
sub
xor
push
daa
jecxz
scas
xor
add
xor
sub
push
call
push
ljmp
push
xchg
xchg
call
or
filds
loope
sbb
sbb
lret
or
sub
testl
inc
out
je
or
out
gs
sahf
adc
jnp
sbb
push
lret
fwait
sbb
add
or
mov
inc
loop
hlt
push
fs
stos
pop
inc
out
sub
daa
cmp
cmp
mov
sub
jne
test
repnz
mov
jp
loopne
xchg
int3
jnp
push
xchg
sub
nop
xchg
jo
ret
xor
mov
leave
pusha
push
fdivs
es
fimull
and
rol
rorl
xchg
inc
xor
push
mov
ljmp
jl
outsb
lret
jne
mov
adc
shll
sub
shrl
icebp
sbb
mov
mov
ficoms
and
mov
push
cmp
cmp
xchg
lods
ja
add
testb
mov
push
jb
xchg
pop
or
sub
mov
adc
fistpl
idivb
cwtl
pop
xor
dec
mov
popf
jnp
maskmovq
imull
inc
pusha
and
lcall
cmpsl
hlt
leave
in
dec
jle
adc
mov
mov
xor
cmpl
sbb
or
mov
push
cmp
xchg
push
fdivs
insb
jno
adc
bound
pushf
out
enter
xchg
loope
insb
push
fcompl
cmp
jno
pushf
dec
sbb
adc
jbe
sub
xor
sub
inc
or
add
push
fidivs
sbb
das
xchg
stos
pop
out
js
ret
outsl
and
or
add
clc
loopne
sub
mov
inc
movsl
test
inc
daa
or
filds
jbe
jecxz
lods
xchg
push
xlat
je
addr16
jge
mov
pusha
mov
and
jg
push
jae
repnz
xchg
js
inc
lcall
movsb
dec
ret
cs
scas
sbb
jmp
aas
adc
dec
lret
in
pop
and
fstl
mov
lock
adc
std
inc
repz
and
mov
pop
push
lods
call
push
repz
cwtl
and
fwait
imul
jmp
pushf
addb
mov
loopne
dec
mov
cmp
dec
add
mov
mov
xor
stos
xor
out
and
sbb
add
sub
cmpl
mov
and
xor
insl
fstps
shrl
mov
mov
and
xchg
lret
jo
push
and
arpl
outsb
mov
dec
jle
hlt
int
mov
and
aam
pop
inc
cs
loopne
mov
into
sbb
hlt
dec
cmpsl
ficoms
into
cmpsl
incl
mov
push
pcmpeqw
jecxz
cld
xchg
add
ja
ljmp
push
push
dec
push
mov
sbb
mov
aaa
cmp
int
dec
nop
lds
mov
xor
xchg
push
and
jmp
ret
das
icebp
mov
push
jle
push
mov
test
xor
push
mov
sub
rolb
ds
mov
dec
xchg
in
cli
jno
lret
xchg
ds
shl
sub
cmp
xor
repnz
push
cmc
aaa
mov
and
xchg
mov
insl
mov
outsl
xor
add
out
or
icebp
nop
loope
jns
dec
ret
dec
loopne
sub
dec
out
fistl
loopne
mov
jge
clc
lret
inc
pop
rcrb
xchg
movhps
sbb
xchg
xor
int3
rorb
and
ds
mov
dec
in
mov
aas
outsl
pop
mov
xor
xor
jbe
xor
jl
and
or
mov
lock
ret
or
stos
fsub
xlat
push
or
jnp
mov
pop
fmuls
cs
dec
mov
test
sbb
aam
mov
mov
xor
jne
dec
jo
aas
popa
out
faddl
je
cmp
push
mov
mov
and
inc
push
cmc
mov
xchg
mov
call
mov
mov
rcr
add
lock
fnstcw
lret
les
js
fsubp
shll
push
add
es
lahf
mov
xor
adc
sub
clc
fst
push
dec
cwtl
dec
pop
ret
div
stc
cmp
lea
sbb
xor
mov
push
ss
ljmp
fmull
add
lea
push
sbb
stos
push
out
xchg
leave
xchg
push
or
mov
inc
inc
inc
cwtl
and
and
sbbb
ret
or
stos
mov
inc
mov
xchg
xor
clc
lret
mov
or
jae
daa
lret
inc
and
adc
adc
ficomps
jmp
stos
fisubs
test
pushl
idivl
lahf
sub
ja
adc
in
andl
xor
mov
lcall
test
pop
pop
loop
test
aad
pop
aas
push
cmp
fidivs
data16
cmpl
pop
sub
aam
pop
pop
mov
fisubl
pop
xchg
xchg
test
insb
loop
in
mov
ljmp
xchg
enter
icebp
jmp
adc
dec
cltd
pop
rcl
jg
jo
push
pushf
aaa
jae
mov
sbb
adc
call
mov
sahf
sahf
imul
mov
xchg
xchg
outsl
jb
aad
mov
mov
fisttps
ds
mov
addr16
pop
std
jb
push
sar
fstpl
pop
je
pop
cltd
mov
cmp
loope
cwtl
cld
addb
pop
test
aam
or
inc
pop
insb
pop
mov
or
inc
or
dec
sbb
adc
aam
pop
adc
push
inc
popa
cld
or
sarl
andl
cmp
mov
or
xlat
fadds
cmp
or
clc
vhsubps
movsb
pop
xchg
fsubrl
sub
clc
addb
pusha
fidivrs
cmp
lret
jno
push
or
push
mov
add
rcrb
lock
cmc
sub
add
cmpsl
sub
imul
mov
or
test
stos
lcall
movsl
mov
clc
mov
or
cwtl
lcall
in
lahf
js
cmp
cli
or
test
mov
lahf
jl
and
dec
shrb
pop
fisttpll
dec
add
add
pushf
cmp
add
push
sub
mov
inc
xlat
add
sub
rorl
xchg
inc
bnd
sub
cli
or
pop
add
add
roll
out
addr16
push
dec
pop
jmp
dec
dec
out
cmp
mov
mov
dec
aaa
mov
sub
cmp
adc
jle
mov
pop
shll
lds
stc
and
push
mov
push
xchg
xor
and
xchg
mov
pop
add
push
mov
pop
imul
push
push
imul
aaa
imul
cmp
lods
cli
add
or
ror
adc
push
and
sbb
cmp
stos
movsb
and
aas
movsb
hlt
jno
cmpsb
lea
xchg
mov
repnz
mov
mov
lret
adc
jb
jle
lea
inc
mov
mov
loope
int
fldcw
jecxz
pushf
lods
jne
and
mov
jne
push
mov
je
pop
fstps
or
iret
inc
mov
add
fidivrs
mov
pop
xor
pop
lcall
or
loope
xchg
add
jmp
fcomps
pop
dec
adc
and
pop
subb
sahf
inc
or
xchg
int
jecxz
test
cmp
out
inc
xchg
daa
pop
imul
mov
add
test
pop
lods
or
pop
pop
es
lods
dec
int
dec
scas
es
pop
mov
xlat
and
cmp
inc
push
mov
mov
mull
fwait
clc
mov
insb
sub
mov
jae
stc
dec
test
push
std
testb
mov
or
fdivl
mov
fsts
xchg
fsubs
sarb
xchg
xor
out
push
add
jae
and
adc
xchg
bound
inc
push
pop
filds
and
mov
mov
dec
mov
pop
lcall
rorb
popa
pop
jg
ss
sbb
ljmp
xchg
mov
lahf
lahf
rcl
mov
outsl
fsubl
sub
xchg
pop
mov
aad
lods
fwait
pop
jns
sub
stc
addr16
out
and
and
outsb
faddl
addr16
sbb
inc
into
cmpsb
sub
xchg
jae
int
dec
js
popa
in
cmp
mov
xlat
jle
push
mov
sti
scas
sbb
jge
inc
stc
mov
es
add
arpl
mov
adc
sbb
mov
js
leave
rolb
or
cmp
repz
cmc
push
shrl
lds
add
ret
xor
mov
test
dec
jle
dec
sbb
add
xchg
mov
shll
je
mov
lock
xlat
scas
push
push
inc
arpl
gs
or
push
out
sbbb
jbe
mov
bound
cltd
or
or
les
cmp
jp
add
loope
rcr
pop
or
xor
ret
leave
scas
xor
lahf
sbbl
xchg
push
add
aas
xchg
mov
addr16
test
jg
ds
ret
xor
xchg
dec
lret
repz
mov
push
mov
ja
out
pop
sbb
and
xchg
mov
out
int
loope
cmpsb
inc
mov
js
pop
adc
repnz
mov
lcall
cltd
push
dec
mov
push
xorb
dec
test
sbb
xor
inc
imul
daa
sbb
adc
hlt
outsl
cmp
xchg
jmp
fildll
jmp
js
nop
fucomp
jo
pusha
push
dec
cmp
lcall
xchg
add
jno
jmp
xchg
push
les
xchg
and
insb
daa
sbb
sub
jle
js
sets
jb
mov
or
out
addr16
data16
push
jb
call
mov
in
out
test
aas
xor
mov
bound
leave
ret
das
sub
stos
fdivs
pop
inc
jmp
add
pop
stc
lahf
jnp
jl
push
aad
push
pop
mov
out
push
dec
mov
xchg
ljmp
push
cmp
hlt
repz
aam
test
jnp
push
cmp
lock
js
call
aam
or
push
jb
xor
rep
sbb
mov
sub
pop
call
cmp
jns
pop
jo
pop
xchg
cmp
push
dec
adc
jg
sahf
lds
fwait
dec
cmp
xchg
push
mov
shll
dec
mov
in
inc
loopne
call
movsb
in
inc
daa
adcl
inc
cmp
dec
ret
insb
std
dec
lods
xchg
xchg
add
stc
cltd
inc
or
pop
sbb
xchg
movsb
leave
ljmp
jae
xchg
out
push
xor
shr
cmp
xchg
add
and
dec
gs
js
jecxz
sbb
fnstcw
inc
jg
sbb
or
repz
mov
icebp
pop
sub
ret
and
dec
ret
cmp
xor
fstl
adcl
loope
and
test
jl
sub
jmp
popf
movsl
jbe
or
mov
mov
add
pop
sub
jno
mov
ret
push
fsts
lds
inc
dec
pusha
mov
rorl
adc
add
das
sbb
inc
ret
adc
sub
movsl
mov
cli
adc
bound
stc
inc
cmc
pop
adc
adcb
mov
mov
push
push
repnz
and
sub
shrb
stos
cmpsl
push
and
dec
ret
fdivr
dec
lock
xchg
inc
test
xchg
ds
sub
xchg
repz
int3
aas
lret
aas
mov
je
cmp
or
aad
dec
push
push
push
push
test
in
mov
adc
sbb
cs
or
cmp
andl
jle
push
addl
enter
push
and
adc
stos
mov
jae
lahf
cmp
cli
jecxz
or
out
xor
jecxz,pt
arpl
mov
and
out
iret
push
mov
mov
add
xor
and
adc
lcall
jmp
and
mov
jae
fnstcw
add
fdivrl
mov
adc
out
gs
test
fwait
mov
mov
jmp
add
sarl
test
push
shlb
out
mov
cltd
lea
loopne
mov
enter
out
dec
shlb
das
xchg
es
arpl
xchg
add
stos
test
iret
or
cmpsl
or
test
mov
mov
xlat
fwait
shll
sahf
ljmp
mov
jb
push
gs
inc
imul
xchg
negb
mov
testl
inc
pop
add
add
cwtl
pop
mov
lcall
adc
fsubs
stos
inc
mov
and
loop
pop
int
pop
cli
mov
fimuls
test
in
xchg
fs
int3
jecxz
add
mov
fdiv
dec
inc
movsb
inc
mov
mov
pop
xor
jp
cmc
push
lods
popa
push
lret
cmpsl
test
aam
mov
mov
out
mov
fbstp
pop
lods
inc
mov
xchg
sbb
add
sub
dec
rcrl
inc
fbstp
aaa
je
ret
sbb
push
dec
and
clc
sub
bound
ret
sar
ja
jp
push
ljmp
sub
cwtl
lods
out
mov
mov
dec
xlat
arpl
and
rcrb
or
dec
test
pop
mov
gs
pushf
mov
push
loop
dec
scas
mov
adc
mov
stc
cmp
xchg
and
fadds
or
xchg
jo
mov
lret
push
mov
lods
dec
es
add
cmp
dec
jb
dec
mov
rcrb
add
movsl
insb
cli
sub
es
movsl
mov
decl
stos
adc
add
or
pop
push
mov
xor
push
gs
pop
pop
xlat
sbb
pop
add
movsl
push
sub
cmc
jmp
push
lahf
xor
fildl
xor
into
dec
sub
cmpsl
ficomps
mov
inc
out
mov
cmpsb
pop
jge
cs
andl
cmp
loope
jl
adc
push
mov
push
stos
jp
imul
fucomip
movsl
es
mov
xchg
lock
mov
js
loopne
xlat
push
sub
or
daa
add
pop
push
test
inc
ljmp
mov
lods
jae
loope
inc
out
push
jae
sbb
mov
xchg
leave
test
repz
jne
xchg
add
dec
into
in
cmp
or
and
out
into
rolb
pop
outsl
adc
loopne
cltd
mov
adc
adc
movsb
in
add
jne
aam
sbb
xchg
test
leave
jge
rcll
roll
mov
jl
cmpxchg
int
enter
imul
lds
jp
insb
out
js
outsl
pop
sti
push
jbe
lret
and
mov
aas
dec
test
cmp
xchg
xor
call
jb
lods
scas
std
fistpl
dec
lds
push
incl
imul
inc
xchg
scas
lea
mov
adc
shlb
inc
lea
sbb
loope
out
jmp
xchg
insb
or
cmp
pop
ja
test
pop
cmp
ja
mov
in
push
push
push
sbb
mov
mov
subl
ss
add
loop
iret
and
leave
subl
ja
out
js
sahf
aaa
mov
xor
add
aas
sub
dec
daa
dec
loopne
les
pop
fstp
popa
xchg
jecxz
or
push
insl
jnp
mov
popa
clc
xchg
jle
jb
sbb
dec
fadds
cmp
cmc
or
loopne
sub
mov
mov
pop
cld
push
mov
cmp
imul
fnstenv
and
cmp
out
xor
pusha
dec
mov
loop
sbb
testb
xor
sub
movsb
inc
adc
xor
imul
lcall
cltd
call
inc
shl
jge
jg
popa
mov
xor
mov
out
ljmp
out
jae
lret
push
inc
insb
fwait
cmp
aam
sti
dec
dec
movsb
in
jge
insb
cmp
add
xchg
pop
inc
xchg
add
push
ficomps
lret
mov
push
mov
les
ljmp
cmpsb
call
iret
xor
incl
sbb
pop
lods
aad
rcll
idivb
and
pop
mov
rcll
jmp
cld
je
sbb
inc
jae
jo
mov
outsl
push
not
cmp
push
rcrb
pop
cmp
pop
fnstsw
cmp
pop
pop
scas
loopne
loop
fistl
loope
dec
cmpsb
dec
cmp
add
pop
xlat
push
pop
popa
adc
scas
mov
sbb
cwtl
enter
pop
inc
loope
pop
sub
jp
lods
js
iret
cmp
mov
scas
xchg
push
bound
sbb
outsl
inc
cmp
fwait
outsl
jg
ret
xchg
mull
or
cmp
in
mov
jnp
mov
xchg
mov
je
daa
and
push
pusha
hlt
push
push
and
mov
fisttpll
mov
jge
testb
les
inc
and
mov
or
push
mov
mov
out
rolb
addr16
mov
and
jo
mov
and
mov
pusha
call
cmpsb
xchg
xor
in
aam
andl
shlb
sar
sub
pop
and
and
push
icebp
jle
mov
inc
xlat
xchg
lock
mov
in
pop
stos
mov
out
fbstp
data16
cmpsb
lcall
inc
mov
repnz
mov
cmp
add
insl
add
popa
gs
pop
ja
movsl
push
mov
shrb
je
push
pop
insl
aam
test
push
test
dec
mov
stc
nop
arpl
jmp
or
jno
das
xchg
xor
loopne
pushf
negl
fcoms
loope
add
xchg
cmp
dec
insb
stos
mov
add
loope
lock
mov
outsl
fnstcw
pop
icebp
pop
xlat
dec
pop
jno
pop
insb
push
pop
cwtl
sub
rorl
sub
mov
movsl
test
hlt
shll
mov
mov
or
repnz
mov
push
mov
mov
mov
mov
fdivrl
es
sbb
lods
inc
das
add
adc
test
icebp
test
insb
jle
imul
sbb
cltd
pop
sbb
push
stos
test
adc
repz
in
shll
add
test
clc
and
ret
ss
out
lods
adc
pop
xchg
imul
mov
mov
or
das
jg
aaa
das
cmp
push
xchg
xchg
mov
loope
loopne
push
jb
in
push
jae
popf
pusha
xor
mov
dec
mov
insb
push
les
lret
das
cli
xchg
fmuls
fwait
pop
mov
or
lock
xor
repz
hlt
fisttpll
movl
push
in
sahf
mov
orl
push
and
cmp
xlat
jp
aas
movsb
mov
push
aam
lock
sbb
pop
hlt
pop
push
scas
ds
inc
mov
inc
or
and
inc
mov
xor
push
cmpsb
and
pop
scas
cmp
mov
movsb
aaa
orb
aad
in
cs
sahf
popa
sahf
ficoml
pop
fists
pop
xchg
loopne
cltd
stos
inc
lds
gs
xchg
and
push
xlat
test
pop
nop
dec
xchg
ret
push
aad
popf
adc
sub
add
add
hlt
sbb
or
mov
enter
iret
sub
mov
push
dec
inc
loop
shrl
sub
loop
jp
fstpl
mov
out
mov
outsb
adc
fwait
pop
mov
and
cmp
in
mov
ds
cmp
and
jbe
mov
out
jge
pop
sbb
or
sub
bound
mov
mov
dec
pop
dec
imul
cmp
jmp
adc
shrb
daa
nop
push
arpl
out
sbb
or
pop
loop
xchg
or
and
mov
icebp
cli
push
or
jg
fwait
in
adc
lds
mov
xlat
mov
pop
aam
ss
ljmp
leave
xor
mov
ljmp
jo
jno
mov
mov
sub
xlat
jg
cmpsb
repnz
push
loop
push
pop
fisubrs
mov
sub
mov
int
pop
lret
mov
xor
sub
sbb
mov
lds
xor
in
in
mov
push
dec
mov
mov
fs
push
dec
iret
mov
inc
clc
repnz
orl
cs
bound
push
push
mov
fcoms
cld
enter
aaa
push
shll
test
mov
out
inc
out
js
mov
imul
jae
ljmp
stos
sbb
inc
dec
out
and
shlb
pop
cmp
dec
movsb
imul
orl
sub
inc
sub
test
scas
push
repz
lret
add
cmpsb
jmp
pop
inc
rcrl
movsb
mov
jmp
stos
adc
into
hlt
test
pop
mov
lret
and
fistpll
and
mov
aaa
dec
xor
and
popa
sub
dec
or
and
or
sub
call
dec
xchg
lcall
mov
mov
pushf
sbb
xchg
xorl
xlat
inc
shlb
adc
andb
fisubs
xor
vmovdqu
adc
cltd
mov
shll
aas
cmp
pop
pop
xor
xchg
dec
jnp
mov
mov
adcl
mov
lea
xor
sub
or
mov
jmp
xor
adc
iret
ficoms
jne
push
lahf
push
xlat
fwait
es
xor
cmp
pop
and
sbb
pop
sub
imul
stos
mov
push
or
mov
dec
or
out
or
jbe
jecxz
add
dec
repz
mov
rcll
dec
push
shl
pop
ret
sbb
popl
into
inc
mov
adc
mov
insl
test
pop
fsub
mov
nop
sahf
insl
and
addr16
out
or
and
popf
and
mov
lret
popf
adc
loopne
scas
pop
and
shrl
filds
mov
lahf
cmp
pop
jne
test
xchg
mov
dec
pop
sbb
adc
mov
mov
lahf
mov
inc
push
movsl
outsb
pop
pop
dec
aam
nop
sbb
enter
mov
and
nop
xchg
cmp
mov
in
cwtl
repnz
mov
sub
cmp
popf
repz
mov
ret
xchg
stos
inc
mov
js
ja
stc
jecxz
addl
das
mov
insl
and
test
int
jbe
xor
pushf
fsts
pop
cwtl
inc
sahf
sbb
sbb
pop
inc
mov
or
push
cwtl
test
xchg
loope
shrb
data16
enter
cmp
or
out
cmp
push
or
call
xchg
mov
adc
lcall
jmp
pop
push
lock
test
sub
std
mov
push
and
sti
mov
mov
xchg
int
cmp
add
popa
popf
pop
loopne
or
sbb
repz
fdivrs
fwait
out
lret
push
mov
cmpsl
cmpsb
push
pop
dec
les
mov
lret
call
stos
push
mov
xchg
dec
mov
fxch
fstpt
ss
xchg
fsub
xchg
out
jge
push
cmpsb
adc
dec
sub
iret
stc
addr16
and
or
lret
in
adc
or
mov
sbb
fwait
mov
jns
fistl
test
scas
or
inc
aaa
pop
inc
jae
or
sahf
rol
aaa
mov
jmp
jle
movsl
push
aam
jle
xchg
out
arpl
pop
out
sub
sbb
cwtl
test
mov
fsubrl
es
fiadds
mov
inc
lea
jg
mov
daa
ljmp
sahf
push
pop
fists
sub
adc
rolb
inc
ss
xlat
xor
les
or
test
jmp
loop
popf
jns
in
dec
cs
lret
mov
repnz
incl
adc
pop
cli
stos
lds
movsb
lods
push
lock
add
aaa
sbb
xchg
sub
rorb
cltd
and
test
jl
ret
je
pop
lret
mov
inc
xor
jb
sbb
push
pop
mov
shrb
cltd
cld
in
scas
jecxz
mov
push
mov
subb
xor
bound
outsb
stos
mov
jb
ret
mov
je
and
and
mov
imul
nop
jbe
ffreep
imul
push
loopne
mov
push
andb
jmp
stos
inc
in
arpl
faddl
add
pushf
out
xchg
inc
pop
xchg
push
ror
mov
sub
test
mov
push
dec
jmp
xor
inc
fs
inc
fsincos
cmpsb
adc
pop
cmp
add
cmp
shlb
mov
and
stos
out
jp
aas
andl
inc
and
sbb
add
jnp
xor
arpl
pop
sbb
and
and
addl
push
lret
out
mov
cmc
pop
mov
dec
mov
ljmp
cmp
adc
xor
lahf
ss
mov
js
iret
cmpsw
add
outsl
cmp
pop
dec
xchg
loopne
lcall
fwait
xchg
xor
testb
mov
call
call
xor
cmp
and
ds
and
xchg
add
add
call
inc
fucom
ds
jae
ljmp
int
pop
outsl
jae
mov
imull
dec
mov
xchg
bnd
sbb
mov
in
inc
jmp
pop
punpckhbw
jecxz
mov
adc
mov
pushw
movb
jno
clc
sbb
in
nop
jl
adc
ret
pop
pop
sub
and
pop
inc
mov
fwait
aad
outsl
stos
pop
xacquire
mov
aam
mov
mov
cmp
rcl
push
xor
push
xchg
scas
test
push
lcall
add
adc
movsb
inc
cs
ret
aam
adc
inc
or
ljmp
mov
mov
movsl
sbb
test
sti
cld
mov
xchg
mov
movl
in
daa
or
mov
ss
sbb
ret
pop
ds
push
cmc
pop
cmp
push
xchg
shr
decb
das
jmp
push
jge
inc
loope
or
lret
cmpsl
rolb
imul
sbb
nop
xchg
loope
lcall
lret
add
mov
sarb
into
out
mov
mov
push
add
add
std
and
out
scas
lret
out
filds
ret
lcall
in
movsl
jnp
fucom
mov
mov
push
add
cmp
insb
mov
jns
nop
std
out
or
js
xchg
in
jns
out
cmp
jo
mov
mov
out
add
inc
and
rcrb
xor
and
sbb
stos
int3
and
imul
xchg
mulb
rcrb
push
sub
mov
sti
iret
pop
mov
dec
cmp
push
fwait
cmp
dec
sub
jb
sbb
sub
lahf
jmp
call
sti
cmpsb
cmc
sahf
jnp
push
mov
mov
mov
int
int
or
push
mov
cmpl
sbb
push
adc
ja
repz
lret
lcall
mov
dec
pop
adc
outsb
sbb
popf
jecxz
sbb
fs
cltd
xchg
xor
or
mov
cmp
pop
push
and
faddp
sbb
test
cmpsl
cmp
mov
incl
inc
xor
xchg
icebp
sbb
add
repnz
inc
nop
daa
add
out
nop
inc
hlt
pop
in
test
fwait
push
dec
adc
cltd
sub
cmpsb
cmp
cmpsl
out
ret
in
mov
adc
cmp
sbb
xchg
out
adc
lahf
xchg
mov
or
xor
stc
and
iret
xor
and
stc
xchg
adc
stos
test
sbb
inc
adc
ds
xchg
scas
test
pop
jae
je
arpl
in
mov
add
pushf
xchg
pop
mov
jns,pn
jo
stos
sub
cltd
imul
pop
mov
movsl
or
add
lahf
out
mov
test
insl
push
fld
stc
fidivrs
adc
and
xor
xor
test
adc
jns
and
ret
inc
cmp
rcrb
xor
push
out
jae
push
imul
out
adcl
fwait
test
adc
loope
nop
mov
iret
push
and
sub
into
xor
mov
pop
sbb
int3
leave
jne
cmpsb
sbb
dec
lahf
mov
mul
in
hlt
call
push
fcompl
jno
inc
mov
push
pop
jae
sti
pop
sahf
jecxz
cli
fwait
testl
adc
rorb
dec
sub
jmp
loopne
das
mov
push
jne
out
xchg
adc
repnz
adc
dec
add
inc
lods
jge
lahf
xchg
jp
mov
sub
xchg
sub
pop
js
cmp
sub
inc
and
das
fcoml
sub
add
lret
mov
iret
out
mov
xchg
fstpl
cmp
mov
lahf
gs
mov
inc
push
call
in
mov
mov
adc
scas
in
adcb
cld
sti
xchg
mov
dec
xchg
loop
xchg
add
jmp
sbb
sbb
sub
add
inc
movsb
mov
ja
fstpt
addr16
xchg
push
hlt
cltd
dec
mov
fisubs
inc
repnz
pop
dec
or
pop
mov
and
ja
inc
std
push
mov
ss
mov
mov
lret
xor
jcxz
mov
es
and
inc
fcmovu
jmp
jmp
movl
cli
sbb
loope
dec
ror
mov
lret
cmp
sarl
push
push
push
cld
mov
outsb
test
lods
add
mov
loope
cmc
jecxz
rorb
cs
sub
scas
dec
cmc
sub
mov
xchg
loop
push
movsb
push
lods
rorl
adc
and
in
mov
fistpl
lea
aas
jne
pop
pop
cs
mov
dec
aaa
mov
cltd
sub
jno
je
mov
mov
pop
cmc
pop
or
or
dec
xchg
mov
andb
and
pop
into
lods
mov
nop
lea
lods
rcl
xchg
fldenv
push
cmp
mov
lcall
sub
gs
nop
pop
push
popf
and
fidivrs
nop
popf
jle
add
subb
mov
mov
shll
lea
popa
sub
mov
or
mov
push
pop
js
xor
mov
jg
push
lock
adc
andl
pop
push
xchg
fldt
cltd
sub
arpl
sub
adc
sbb
stc
cmp
loopne
pop
sbb
pushf
lahf
call
pushf
pusha
pop
movsl
cvtps2pi
bound
outsl
xchg
jge
pop
pop
rep
or
clc
loope
and
aad
and
jecxz
push
in
pop
push
movl
cli
movsl
push
xor
repnz
jp
outsl
pop
dec
sti
sbb
mov
mov
out
pop
xor
jnp
out
mov
mov
loopne
in
cwtl
dec
and
inc
inc
mov
and
shrl
insl
jb
dec
sahf
xlat
push
movsl
mov
xchg
in
lock
inc
sbb
scas
cmp
rcrb
rcrb
loope
lret
cltd
ss
incb
imul
mov
jl
mov
inc
cmc
fidivrs
js
cmp
xor
mov
mov
sti
xchg
mov
push
stos
mov
shrb
aaa
push
mov
push
fdivrs
cmp
lods
xchg
mull
or
jb
cmpsl
sub
add
fsubrl
mov
outsl
push
ja
dec
cld
sbb
das
jle
dec
neg
lahf
cmovbe
jb
cmp
inc
or
stos
insl
push
xor
inc
sub
clc
lret
imul
aas
jp
add
add
es
jns
in
addr16
and
sbb
mov
addr16
dec
test
cmovs
xchg
push
push
icebp
jb
mov
mov
mov
ja
movsb
sub
dec
in
mov
addl
cmp
cmp
jl
jbe
leave
shll
pop
test
sub
xor
push
scas
fildl
mov
insl
mov
aad
xchg
test
cli
sub
dec
jl
int3
dec
inc
add
lret
loop
jnp
ret
mov
or
not
dec
push
inc
gs
shll
insl
push
aad
pop
adcb
mov
cmpsl
jp
out
push
add
inc
push
inc
mov
or
loope
andb
scas
pushf
pop
or
scas
insb
stc
xorl
lds
jo
add
lea
loop
xchg
pop
fwait
sub
dec
dec
int3
aad
mov
add
dec
xchg
repnz
xor
pop
mov
sub
sbb
adc
add
pushf
imul
inc
loop
jp
adcl
mov
xor
iret
js
mov
jns
iret
pop
out
mov
lea
push
les
push
add
xchg
scas
fisubrl
out
adc
ljmp
sbb
inc
pop
push
pop
dec
jle
jo
stos
popa
push
int3
mov
aad
and
ds
dec
daa
mov
inc
or
aas
mov
js
cltd
pop
daa
test
aaa
out
movsl
mov
sub
nop
ds
pop
and
addr16
pushf
sbb
inc
cmpsb
insb
or
into
jno
lds
loop
cli
inc
adc
test
and
in
int
xor
pop
cmc
or
clc
test
sbb
cmp
neg
fidivrl
dec
cmp
jge
push
fsubr
lahf
repnz
xor
lock
cltd
pop
xchg
add
fsubrs
aaa
mov
aam
push
cs
std
aaa
in
aad
and
jne
mov
test
scas
adc
jnp
psraw
xchg
out
jg
dec
les
push
cmp
fcoms
int3
sbb
daa
mov
movsl
adc
sbb
ficompl
loopne
cmpsb
jmp
out
push
das
xchg
pop
sbb
mov
loopne
jg
iret
sub
mov
cwtl
negl
pushf
xchg
stos
cltd
push
or
add
das
push
out
mov
push
shl
push
xor
xor
cmc
imul
xchg
in
hlt
lahf
fcmove
push
cwtl
sbb
and
and
shlb
xchg
sbb
popa
fucom
xor
aam
mov
mov
mov
jbe
ljmp
aam
push
push
fadds
data16
cld
adc
add
movsl
jnp,pt
or
sub
add
mov
ss
call
sbb
in
rorb
push
sub
es
mov
xor
pop
stc
push
xchg
mov
test
pop
loope
mov
sub
add
loope
fwait
dec
je
push
stc
mov
cmp
add
add
shlb
adc
jb
push
das
loopne
push
add
mov
nop
idiv
lods
pop
shll
jge
mov
mov
jbe
mov
add
push
push
sub
adc
loopne
mov
test
sbb
add
stos
lahf
inc
mov
fisttpl
pop
in
int3
popf
jae
pop
orl
xlat
mov
mov
test
fs
int
cmp
xchg
into
mov
pop
sbb
pop
xchg
scas
mov
mov
in
jp
push
fwait
aam
fnstsw
movsb
xchg
cmp
ljmp
pop
dec
flds
xchg
clc
into
orb
jmp
es
enter
out
dec
dec
or
mov
jae
subb
jb
push
loopne
xor
lret
nop
push
mov
outsb
pop
fcompl
adc
inc
outsb
jno
aaa
mov
ja
sub
inc
lock
mov
cmp
data16
pop
jo
xor
movsb
or
lds
mov
les
movsl
lods
aas
lahf
push
or
popf
test
xor
rcll
sub
addr16
xor
movsl
add
mov
shl
js
dec
adc
std
pop
imul
insl
pop
add
in
or
enter
iret
in
cmp
and
or
outsl
jp
fs
sbb
push
push
dec
inc
mov
call
adc
loopne
xlat
mov
mov
les
test
loope
loope
mov
ljmp
shrb
in
inc
lcall
cmp
jp
add
dec
dec
insl
and
daa
iret
imul
loope
es
shll
ret
adc
aad
adc
fadds
ret
or
notl
mov
and
mov
jecxz
mov
mulps
pop
nop
mov
imul
mov
push
test
xorl
or
pop
jb
sahf
stos
sbb
cmp
gs
fnstcw
cmp
movsl
popa
popa
scas
gs
and
popa
pop
dec
sahf
pop
jne
mov
lahf
stos
push
mov
and
jns
xchg
pushl
fldl
xor
jns
push
ljmp
push
adc
pop
mov
push
mov
xchg
lds
push
mov
lods
inc
imul
lds
mull
add
movsl
insb
mov
sub
into
push
sub
pop
int3
fidivrs
inc
xorl
ficomps
sti
roll
push
dec
fldt
pop
insl
sub
sub
ss
stc
cwtl
mov
dec
into
loop
movsl
ror
or
sub
mov
jne
jge
and
mov
lods
nop
in
aas
and
inc
movsl
mov
shll
dec
xchg
sti
sub
testb
js
ss
xlat
ljmp
fucomip
stc
sti
ret
add
cltd
xorb
jae
jge
out
push
or
xor
lds
arpl
adc
fwait
dec
dec
movsl
enter
mov
mov
dec
shl
or
adcb
jle
in
xchg
cs
pop
mov
fdivs
lods
mov
sub
ss
stc
pop
rcr
iret
push
sbb
aam
int3
xchg
das
pop
sbb
movsb
pop
jnp
negl
mov
push
xchg
pop
jl
jno
xchg
jg
insb
cmp
adc
and
mov
xor
pop
inc
ret
arpl
les
mov
pop
frstor
mov
jmp
pop
push
xlat
jge
loopne
or
movsb
cmp
insb
xor
jbe
subl
stc
fnstenv
dec
mov
xchg
mov
in
mov
aad
out
cmpsb
fsubl
cmp
insl
inc
xchg
pop
std
or
fildll
mov
xchg
iret
mov
andl
and
push
ffree
ficoml
jmp
jge
sbbb
ja
icebp
push
dec
test
jp
mov
push
lods
std
jne
call
rol
jg
icebp
mov
out
out
sti
xchg
loop
cmp
cld
iret
leave
ret
xchg
mov
imul
pusha
pop
fistpll
out
pusha
lret
dec
inc
pop
out
push
pop
mov
inc
lods
push
jno
iret
inc
rcl
outsb
push
pushf
xor
inc
xchg
mov
add
push
in
pop
and
fs
and
adc
cli
call
adc
fs
negl
pop
imul
in
popf
insl
jae
dec
jl
popf
pop
mov
inc
dec
scas
xlat
mov
std
xor
inc
add
ja
mov
cmp
xor
cli
mov
stos
ror
jmp
subb
divb
in
fcmovb
shl
mov
mov
add
icebp
sahf
jle
or
lea
xor
arpl
cltd
pop
nop
mov
mov
push
pop
loopne
loopne
cli
add
mov
mov
mov
repnz
dec
cmc
psubq
cmp
sbb
test
fisttpll
push
gs
pop
daa
lcall
fidivl
and
push
cmpsl
xlat
inc
cmp
pop
mov
cmp
jb
loope
push
into
arpl
subb
out
inc
movsb
push
sti
cmp
xchg
sbb
jno
dec
push
inc
js
in
sub
ret
push
jge
mov
clc
xor
lods
ljmp
add
stos
sbb
sub
les
fstpl
sub
insb
or
inc
lret
or
or
mov
jg
or
sahf
pop
mov
leave
adc
mov
fidivrl
xor
imul
lret
pop
loope
lock
fiadds
lods
std
pop
test
sbb
lcall
jne
mov
test
and
lret
sbb
filds
lods
bound
sub
iret
test
outsb
out
jmp
in
cmpsb
in
cmp
in
inc
pop
jb
jecxz
jno
xchg
dec
ljmp
add
inc
in
sub
dec
into
out
push
je
stc
faddl
std
push
imull
and
ljmp
lcall
add
sub
inc
scas
mov
jp
iret
sbb
and
dec
bound
fwait
out
add
mov
pop
mov
pop
fs
lahf
je
lret
in
daa
jge
shll
xchg
lea
arpl
icebp
sub
xor
insb
rcrl
fstl
sti
xchg
testl
jne
outsl
adc
ret
es
pop
les
mov
dec
das
shlb
inc
push
mov
xchg
adc
adc
fcmovnbe
popf
shrl
mov
mov
sub
adc
fndisi(8087
lret
jns
lock
scas
add
xor
mov
adc
push
popf
mov
test
adc
xorb
adc
out
adc
lock
mov
aad
out
insl
or
iret
fs
and
sub
pop
pusha
mov
repz
dec
adc
adc
cmpsl
inc
jnp
sbb
inc
insb
test
popa
sbb
clc
and
cmp
push
iret
cs
xlat
dec
lea
mov
fdivrs
inc
jb
sahf
mov
mov
sub
sbb
in
mov
dec
icebp
and
dec
lods
adc
stos
stc
fwait
loop
push
mov
cmp
ret
mov
fwait
imul
testl
mov
into
lods
pop
push
mov
insl
fbstp
call
roll
sbb
aam
js
sub
jnp
cmp
lock
xchg
or
xchg
icebp
mov
pop
scas
adc
iret
and
loopne
pop
mov
rcl
cs
lods
insb
movsl
in
cmp
inc
lret
inc
fbstp
adc
cmp
sbb
jbe
push
cmpsl
js
cs
xor
mov
xor
mov
xchg
cmc
stc
sbb
nop
sbb
adc
pop
notb
push
imul
addr16
test
je
inc
mov
into
jecxz
aad
xor
das
test
shll
sub
fwait
or
ds
scas
je
pop
lcall
std
lods
ss
mov
dec
jnp
mov
or
inc
in
sub
int3
es
repnz
dec
movsl
int
jge
int
sbb
pop
mov
fwait
sbb
pushf
shrl
mov
xchg
out
sub
xor
je
mov
in
or
adc
cmp
and
inc
imul
cltd
cs
cmpb
popf
lds
cltd
insb
adc
in
push
sbbl
in
int
into
adc
jae
xor
bound
sbb
daa
mov
rorb
jne
jnp
bound
out
in
cmpsl
and
icebp
and
iret
or
aaa
fisubrs
iret
sqrtps
fdivl
cs
aaa
adc
push
xchg
jg
pop
mov
dec
inc
insl
incl
lahf
push
divb
pop
int
rcrb
sahf
mov
or
xchg
fmuls
mov
popa
or
stos
jmp
iret
push
jmp
vaddps
lea
dec
shll
outsl
sub
dec
xchg
icebp
jno
sti
cmp
in
inc
scas
je
jge
aad
fstl
pop
dec
ret
jo
enter
jp
imul
roll
hlt
loop
pop
push
push
and
xchg
lea
out
sub
iret
pushl
out
jae
pop
pop
in
lcall
lret
add
les
cmpsl
cmp
mov
mov
xor
push
inc
js
adc
and
push
insb
mov
adc
jbe
lea
xor
pushf
and
in
hlt
xor
push
outsl
add
ret
lret
or
cmp
pop
mov
leave
test
lea
and
ja
pop
ja
lret
lods
test
adc
insl
add
fistpll
in
mul
stos
mov
mov
call
in
adc
adc
fwait
aad
push
or
in
xor
fidivl
pop
loop
stos
movsl
pop
fdivl
dec
sbb
xchg
push
xor
mov
sub
pmulhw
adc
cld
push
lret
pop
test
sbb
notl
and
pop
dec
push
adc
test
inc
shrb
jp
dec
push
test
cltd
bound
fcoml
mov
stos
mov
cmp
inc
jmp
push
mov
stos
dec
push
mov
out
xchg
xor
lds
mov
push
aam
sahf
and
mov
rorl
push
push
or
leave
jnp
lods
leave
ja
outsb
int
mov
imull
jmp
xor
ret
rclb
stc
sbb
rcll
lret
xorb
cmp
cmc
jo
cmpsl
cmp
add
inc
jp
addb
jno
in
inc
inc
out
push
cmp
arpl
xor
xchg
sub
cmp
out
ret
in
mov
pop
stc
and
push
pop
mov
jecxz
rclb
sub
es
cmp
lods
lock
mov
icebp
loope
mov
in
loop
icebp
adc
adc
outsb
dec
shll
in
sub
shll
std
sbb
and
mov
in
out
es
into
adc
mov
jmp
push
cmp
mov
jg
inc
call
mov
push
sbb
scas
ret
push
mov
jno
enter
or
shr
incl
inc
mov
mov
in
repnz
cmp
mov
push
pop
lock
or
pop
in
and
ret
pusha
add
aad
adc
add
adc
adc
bound
rcll
lahf
push
sbb
cmp
div
jge
popa
jle
mov
or
pop
subl
xchg
shrl
pop
movsb
mov
shrl
cmpsl
loop
addb
ss
pmaddwd
je
cwtl
es
cmpsb
pop
call
xorl
push
mov
dec
test
add
out
pop
lds
lds
cmpsl
jno
mov
inc
les
adc
inc
add
movsl
hlt
ljmp
and
aad
mov
and
and
dec
push
jae
sbb
jp
or
gs
inc
nop
adc
insl
shrb
mov
xchg
mov
pop
jbe
std
xor
mov
xchg
testl
movsl
pop
roll
fldenv
pop
jbe
ds
rcrb
shrl
mov
xor
and
pop
dec
xchg
push
pop
push
cmp
push
inc
enter
cmc
cmp
mov
mov
dec
xor
add
movsl
aaa
add
jge
imul
popf
lods
ret
rcrb
adc
outsb
ret
cld
inc
jo
cmp
dec
cmpsb
sub
fcomps
mov
jbe
or
lods
inc
cmp
sbb
add
cmpl
aaa
stos
jecxz
pop
out
dec
lea
mov
or
or
rorl
mov
fwait
imul
sub
and
sahf
ret
pop
mov
and
and
insl
test
in
mov
or
shlb
les
outsb
lahf
icebp
pop
jle
or
cwtl
cs
shlb
leave
testl
jnp
aaa
lds
cltd
xchg
adc
jp
gs
sti
test
mov
inc
daa
sub
add
xor
mov
jno
dec
out
mov
jge
test
add
dec
gs
sub
add
inc
shll
movsb
rcl
xor
iret
xor
int3
out
jge
push
andl
push
mov
insb
sub
sub
and
mov
shlb
scas
mov
pushf
xlat
in
lock
fwait
movl
inc
in
xchg
push
out
mov
or
pop
into
cmc
ret
mov
jle
lds
jl
dec
pop
int3
inc
ret
cmp
or
lret
mov
andb
adc
jmp
inc
out
imul
subl
inc
mov
aas
aas
xchg
nop
adc
andb
fmuls
sarl
and
ficompl
decl
adc
mov
jb
testl
outsb
bound
sub
add
movsl
out
in
pop
iret
xchg
mov
fsubl
repz
ret
xor
jmp
mov
sub
xchg
fisubrl
fdiv
mov
test
mov
insb
out
cmp
shll
movsl
and
fldl
dec
mov
adc
push
cmpsl
outsl
fldt
xchg
gs
stos
xchg
jmp
mov
iret
repnz
rcl
pop
add
and
push
jmp
jnp
ret
add
repz
in
int3
and
insl
lcall
push
das
shl
push
ret
sub
cmp
mov
jp
out
dec
inc
jle
insb
addl
xor
and
push
dec
loope
fnstsw
mov
xor
and
popf
gs
jb
jne
insl
out
sub
aaa
cld
sub
test
jne
sbb
and
mov
pushf
cmp
je
cmp
mov
dec
arpl
test
jmp
xchg
scas
or
jl
repz
jns
loopne
or
xchg
dec
sub
or
pop
xchg
pop
daa
inc
push
add
cmp
scas
mov
xchg
jnp
and
cli
idivb
bound
pop
iret
xlat
add
fwait
sub
inc
mull
inc
out
cld
push
push
push
and
xor
push
jo
jae
imul
xor
and
sbb
popf
aad
dec
dec
mov
sub
adc
fnstenv
es
stos
jp
popl
dec
pcmpgtw
outsl
aas
roll
mov
mov
jae
or
xchg
cmp
notb
dec
aad
jae
mov
inc
std
jae
loopne
test
inc
icebp
stc
mov
in
gs
cmp
sahf
mov
popf
jp
int3
lea
insl
jo
jecxz
jge
push
cmc
cmpsl
movsl
sti
nop
int3
jb
iret
pop
or
xchg
movsl
ret
pop
cmp
push
das
pop
daa
jns
push
int3
push
inc
adc
lret
test
stc
add
loop
and
mov
icebp
sub
icebp
push
mov
rcll
inc
or
and
pop
inc
mov
int3
push
xchg
inc
or
into
int
sub
mov
push
xchg
mov
and
pop
sub
jmp
jo
test
ret
shrb
dec
mov
fmull
addr16
bound
enter
jno
shll
add
rcrb
push
stos
cmp
adc
jl
pop
pop
nop
add
in
add
mov
push
and
je
sbb
outsl
push
mov
movsl
aas
pop
icebp
data16
cwtl
xor
aam
jno
inc
inc
sub
mov
rcll
loop
xor
scas
hlt
js
mov
dec
push
adc
jp
out
add
sahf
mov
test
mov
jg
push
lea
add
push
mov
push
xor
mov
mov
mov
inc
scas
sub
pop
cmp
mov
es
test
xor
shlb
cmpsb
xchg
int3
int3
lock
in
mov
jo
push
push
mov
arpl
popfw
enter
in
mov
ficoml
insb
test
adc
fcoml
inc
inc
sbb
in
out
mov
inc
pop
inc
sub
rcr
mov
ficompl
das
xchg
pop
mov
daa
and
leave
mov
fnstsw
lea
stos
es
sbb
adc
sbb
insl
out
repz
fdivr
das
imull
js
cmp
push
or
subb
out
lret
pop
inc
imul
xchg
add
cltd
jne
jmp
or
insb
popf
push
push
dec
add
movl
mov
or
xchg
xor
pop
insl
and
push
lods
rclb
inc
adc
je
mov
adc
inc
mov
out
xor
incl
and
in
push
dec
xor
rclb
or
push
aas
mov
enter
xor
mov
cmp
repz
in
push
or
mov
jb
or
jge
push
call
xchg
pop
cmp
mov
sbbb
push
mov
int
mov
cmpsb
push
jns
sbbb
mov
sub
or
jg
pop
mov
nop
popf
lods
pop
pop
inc
ds
lds
icebp
mov
and
or
xor
add
jno
dec
adc
cmpsl
xor
and
mov
dec
cltd
xchg
mov
outsb
adc
mov
orb
mov
and
test
jb
fcomip
dec
inc
mov
add
repz
int
adc
xchg
insb
mov
dec
or
mov
test
add
add
cmc
popf
xor
xchg
or
pushf
cmc
lret
ret
in
lcall
or
or
das
adc
scas
scas
push
sub
lret
lcall
jl
ljmp
sub
outsl
sahf
mov
jae
les
mov
leave
add
leave
sbb
cmc
xor
dec
shl
test
xchg
imul
cmp
lds
loop
jae
dec
inc
lret
adc
xchg
rcrl
cmp
je
inc
movsb
add
dec
popa
pop
enter
xchg
aam
ds
test
push
rcl
fldl
sub
jg
lock
or
pop
arpl
lock
pop
stos
repz
jns
test
jge
add
movsl
dec
add
lods
sbb
test
mov
lcall
adc
out
and
or
dec
jns
cmp
ficoml
icebp
cmp
xor
push
cmc
mov
scas
test
xchg
je
int3
pop
add
repnz
pushf
cld
mov
inc
sbb
daa
inc
movsl
mov
push
cli
rol
cmc
jg
lahf
pop
xchg
jp
push
int
xchg
js
xor
and
mov
inc
std
jnp
mov
mov
pop
xor
loope
lods
cld
rcl
or
adc
and
push
test
add
sub
aaa
imul
std
inc
push
jnp
sbb
mov
inc
scas
push
outsb
icebp
scas
push
and
push
jp
mov
xchg
mov
scas
inc
pop
add
bound
insl
and
cmp
cld
and
xor
push
cwtl
call
mov
pop
fwait
jbe
movb
pop
bound
inc
push
xor
mov
jne
mov
loopw
int3
mov
cli
and
jnp
xchg
pop
fimuls
cmp
scas
xchg
jle
mov
xchg
xchg
inc
insb
shl
jle
xchg
and
ret
push
fisubrl
gs
xchg
call
lods
cwtl
test
adc
aam
addr16
or
or
dec
and
xchg
jl
int
js
jo
lret
cmp
jp
sbbl
mov
pop
jmp
cmp
fdivrs
popf
inc
les
push
fisubrl
data16
lds
mov
add
leave
jo
adc
test
adcb
sbb
shrl
lock
shlb
pop
xchg
mov
push
sbb
jb
fidivrl
stos
jge
inc
jl
ficoml
sarl
or
addb
cmc
dec
lret
sub
add
pop
jo
mov
pop
lods
stc
mov
xchg
and
fcompp
outsl
mov
sub
mov
shl
subb
imul
xor
jne
negb
inc
lret
dec
test
mov
int
jg
jae
out
lret
adc
sarb
mov
adc
dec
dec
cmpsb
lods
push
or
jae
lods
and
mov
out
out
ja
adc
test
cld
loopne
movsl
jb
gs
jo
test
js
sbb
push
and
lcall
fidivl
and
cmpsb
xchg
enter
dec
je
ss
inc
sahf
add
pop
push
sub
cmc
adc
sbb
mov
push
ljmp
insl
lret
loope
fiadds
pop
es
lods
popf
cmp
sbb
sbb
addr16
loope
xchg
inc
shll
call
es
cltd
sub
jge
inc
aam
fs
cmp
cmp
jae
testb
push
cmp
xchg
dec
xor
out
fsts
icebp
xchg
and
movsl
aas
nop
push
pop
fdivrs
push
fwait
cltd
and
test
mov
push
adcl
lret
and
mov
ss
test
xor
test
inc
aas
push
cld
rclb
add
jmp
sub
fldenv
jbe
xorps
pushf
mov
push
jo
imul
js
mov
jae
xchg
shl
jmp
adc
arpl
negb
mov
jo
in
aam
insb
negb
mov
sbb
jae
xchg
ss
adc
lock
ss
push
mov
cmpsb
ss
dec
adc
data16
std
mov
pop
or
pop
xchg
push
jecxz
mov
dec
popf
iret
ror
add
sbb
addr16
mov
mov
gs
in
or
mov
es
push
mov
mov
jmp
push
nop
pop
gs
outsl
jnp
push
inc
or
lock
xchg
test
into
fistps
jae
rcrl
nop
mov
rcrl
or
sub
adcb
pop
cmp
in
rcrb
pop
clc
scas
imul
rclb
stos
or
push
dec
fldl
stos
xchg
inc
gs
push
outsl
pop
ljmp
mov
insl
jo
jle
ja
pusha
sahf
jnp
cwtl
xchg
xchg
fsubl
jmp
lds
fdivrl
ret
lds
sbb
fistps
fmull
shlb
jle
repnz
sub
push
push
ror
adc
orl
jnp
sbbb
mov
lea
outsb
into
mov
xchg
push
jbe
mov
mov
idiv
mov
dec
dec
imul
push
bswap
xchg
ret
add
imul
ja
pop
push
int
push
mov
stc
xor
mov
jbe
sbb
ljmp
mov
pop
aam
push
sub
imul
mov
rol
push
stos
sar
xchg
xor
xchg
push
insl
add
xor
cmp
add
jge
clc
insb
push
lea
repz
mov
imul
ja
fnstenv
popf
icebp
fstl
jo
and
xor
out
xlat
mov
mov
mov
push
orb
incl
dec
lds
cli
mov
adc
ljmp
outsb
xor
mov
add
push
call
aam
mov
mov
incl
inc
fnstsw
jb
outsl
int
lret
loope
ret
sbb
cmp
cmp
data16
sub
mov
pushf
and
sbb
les
mov
rorl
mov
aad
sub
jb
push
sub
sbb
clc
xchg
cmp
cmpsb
xor
lods
das
xlat
enter
cwtl
add
jl
stc
sahf
pop
cltd
add
in
inc
xchg
and
mov
out
rcrb
js
ss
int
sti
sbb
cli
xchg
nop
fstps
and
cli
and
push
fildl
sbb
or
xchg
outsl
inc
mov
xchg
aaa
jmp
imul
jae
ss
pop
jp
shll
ffree
cmpsl
xchg
movsb
sbb
in
into
jno
pop
jnp
filds
mov
stc
leave
push
mov
push
mov
mov
popa
lods
sbb
popf
xor
xchg
shll
mov
inc
cld
pop
insb
dec
cmp
jno
notl
and
mov
mov
adc
fbstp
cltd
xor
mov
adc
insl
in
mov
mov
sub
sbbl
cmc
roll
mov
adc
cmp
into
rcrb
lret
inc
ret
in
sbb
arpl
pushf
pop
jg
scas
sub
push
or
pop
cmp
xor
ss
rcr
pop
clc
loop
stc
in
sub
loope
mov
pop
je
mov
fcoml
push
or
ljmp
sbb
adc
jno
outsb
ficompl
jne
and
lret
add
stc
push
aam
shr
fs
xor
orps
cs
lahf
fwait
mov
test
push
dec
loop
mov
sub
pop
arpl
loope
or
cmpsb
xchg
iret
fwait
sub
cmp
inc
cmc
inc
add
xchg
fildl
xchg
cmp
mov
rcll
in
pop
xchg
sbb
mov
int3
xchg
imul
dec
jge
mov
enter
cmpl
adc
add
rcll
push
movsl
inc
jp
push
test
js
in
cmp
aam
dec
dec
cmc
cmp
cmp
int
xchg
shl
cmp
call
je
cwtl
xor
add
pop
daa
mov
push
push
dec
call
dec
arpl
mov
cltd
in
jns
lret
sbb
and
das
in
adc
add
xor
xchg
stc
call
or
fiadds
mov
xchg
jne
filds
pop
rolb
dec
or
jg
out
cmp
stos
popf
mov
adc
in
insb
je
pop
testl
adc
mov
inc
imul
pop
frstor
sbb
pop
push
test
and
ss
test
xchg
std
je
add
xchg
mov
pop
loopne
xchg
ss
imul
cmp
pushf
adc
push
or
push
rcrl
jo
into
jae
in
stos
in
lahf
push
sub
jl
pop
add
out
and
insl
xchg
pop
jns
xchg
and
pop
das
xlat
and
mov
jo
mov
mov
mov
push
mov
out
inc
ss
push
dec
cmp
pop
hlt
leave
mov
mov
js
pop
pop
dec
addl
xor
or
repz
into
jg
or
inc
mov
cld
adc
mov
inc
negb
push
popf
add
insb
and
inc
or
jbe
ljmp
outsl
mov
inc
test
jp
push
cld
sahf
mov
push
xchg
mov
mov
cmp
int
adc
jb
in
daa
ds
dec
icebp
dec
mov
xor
inc
adc
cmp
mov
add
into
push
dec
mov
sbb
sarl
das
push
sub
pusha
call
subb
xchg
dec
mov
fistpl
xlat
push
adc
jp
call
int3
dec
dec
ror
loope
adc
cmc
mov
xchg
inc
stc
insl
cld
sub
je
inc
fdivp
iret
xor
add
pop
dec
adc
aad
adc
inc
test
sub
cmp
sbb
and
jno
ss
andl
movsl
aaa
push
xchg
repz
jae
shlb
jnp
push
xchg
xchg
dec
or
push
or
ret
pop
lock
mov
xchg
mov
je
movsb
push
mov
add
inc
cmc
shlb
mov
std
mov
ja
fmuls
add
jne
cmp
mov
and
cmp
or
or
shl
dec
test
out
xor
test
std
icebp
mov
mov
dec
loopne
push
mov
lock
mov
push
insb
push
mov
push
into
shlb
ret
mov
ljmp
stos
mov
rolb
ljmp
or
cmpsb
xor
stos
lods
mov
stc
stos
mov
outsb
ret
arpl
ss
adc
mov
xchg
jns
pop
jg
insl
shl
inc
add
adc
loope
adc
popa
loopne
push
test
jo
sbb
inc
fwait
pop
cmp
adc
dec
mov
jmp
push
imull
cs
dec
jecxz
push
dec
xor
dec
les
cmp
lahf
xor
jmp
xchg
lret
mov
mov
xchg
icebp
mov
jmp
hlt
xorb
cmp
and
iret
add
sbbb
ret
rclb
pop
cli
cmpl
mov
xchg
pushf
xchg
lds
mov
sub
add
mov
mov
sbb
cmc
into
test
nop
popf
les
fs
stc
fcomps
jae
fists
jp
or
adcb
mov
jp
jg
int
xor
jl
mov
in
std
sub
lcall
daa
test
aam
fisttpll
sbb
or
jecxz
in
lret
ficoml
xchg
shlb
scas
out
movsb
pop
push
sub
fisttpl
xorl
stc
std
mov
gs
mov
cmp
xlat
jb
test
push
cmp
sbb
pushf
fstl
push
xchg
imul
xchg
lods
sub
mov
enter
pop
cli
rclb
int3
shll
adc
push
mov
repz
nop
sub
imul
not
push
mov
xchg
push
push
jmp
insb
stos
xchg
ret
mov
xor
push
mov
inc
aad
je
mov
ds
fstl
xor
and
mov
sbb
in
ror
sbb
cmpsb
jno
sbbl
xor
push
loop
cmp
cmp
inc
cmp
cmp
and
pop
popa
int
mov
sbb
insb
iret
rcll
xor
xchg
dec
adc
xor
or
mov
ds
aad
sahf
insl
adc
ljmp
fwait
int
push
cmp
xchg
leave
les
push
mov
inc
jg
test
clc
xor
jno
dec
js
out
ret
pop
test
xchg
or
xor
sahf
adc
mov
dec
jp
aaa
call
imul
outsl
xor
pop
sbb
shll
mov
aaa
xchg
insl
cmp
pop
outsb
jb
or
xorl
jp
xchg
data16
gs
cltd
push
das
repnz
xor
stc
addb
inc
jmp
xchg
sti
xchg
sub
lret
and
and
dec
rcll
xchg
cmp
pop
mov
xchg
jno
movsl
sbb
aas
pop
push
lret
jae
test
pusha
push
mov
jns
mov
inc
inc
repnz
sub
rcrl
mov
mov
test
fisubl
adc
fsubs
filds
xor
ret
stos
repnz
pop
or
jl
ljmp
popf
sahf
mov
mov
adc
andb
push
push
shl
jnp
mov
movsl
ljmp
push
or
push
mov
test
add
clc
popf
xchg
out
js
mov
add
incb
cmc
or
inc
das
adc
dec
je
lods
int
pop
subb
and
cmp
sarb
mov
jmp
mov
push
mov
inc
dec
jbe
int
inc
pop
cmpsb
xchg
stc
stos
adc
call
or
xchg
inc
sti
jb,pn
mov
sti
inc
mov
fsubr
cli
stc
aam
cwtl
loope
aas
fcoml
leave
mov
jo
in
insb
jge
test
out
add
das
xor
loop,pt
shrl
das
pop
dec
aas
fbstp
and
cmp
ret
jnp
adc
mov
cmp
out
gs
lods
fidivrs
stos
adc
test
sub
loop
mov
mov
jg
mov
jns
sub
inc
imul
data16
mov
in
push
imul
sbb
mov
mov
pusha
mov
sub
xchg
add
in
popf
jno
or
mov
addr16
mov
insb
jno
pop
inc
mov
jbe
aam
fadds
cld
int3
and
inc
pop
repnz
out
xchg
xchg
js
adc
push
cmp
pop
cwtl
mov
mov
int3
and
cmp
inc
cmp
js
lock
out
jge
sbb
arpl
out
and
stos
out
mov
sub
adc
mov
test
inc
mov
and
pushf
fmuls
mov
fs
popa
dec
popf
or
cmpsb
sbb
xchg
dec
mov
xchg
stos
mov
std
cmp
jp
cmp
lock
add
cmc
outsl
dec
call
cmp
jo
xchg
push
test
jp
mov
push
mov
fwait
ss
inc
sbb
and
pop
jns
nop
mov
adc
gs
dec
repz
mov
jno
cwtl
sub
insl
pop
jmp
das
fsubl
lret
clc
add
mov
xchg
mov
int3
push
dec
mov
cmp
roll
test
out
add
in
ja
jecxz
addl
cmp
or
mov
call
xchg
fs
sub
add
push
or
jne
sub
push
cwtl
cmpsl
mov
jbe
paddsw
sub
hlt
roll
daa
or
pushf
mov
shl
cmovae
sub
mov
dec
fnsave
out
push
shrl
push
pop
jno
imul
jmp
fmuls
push
push
or
dec
outsb
sahf
jl
xor
and
cld
cmp
shrb
lea
ss
popf
inc
push
pop
jp
inc
cltd
and
jnp
xchg
gs
imul
movsl
dec
out
outsb
push
ljmp
mov
jb
pop
in
test
jle
dec
inc
xchg
sub
mov
sub
jnp
inc
orl
lcall
pushl
jp
adc
divl
push
sbb
xor
mov
sarl
dec
in
mov
call
xor
popa
cmp
or
mov
add
xchg
sub
in
rcrb
popa
les
lods
pop
jo
rclb
jl
nop
inc
sbb
jge
aas
sbb
decb
out
insl
jno
fmull
pop
pop
xchg
pop
lahf
add
pusha
sbb
aas
mov
cmp
ljmp
sahf
adc
lahf
ja
mov
int
in
andl
data16
and
jnp
outsl
addr16
movsl
add
xorb
cmp
push
mov
adc
clc
jae
jbe
shrl
fimuls
push
dec
push
adc
sbb
mov
ret
xchg
sub
sbb
pop
mov
bound
movsb
xor
psubb
inc
rolb
fwait
push
out
testb
push
bound
or
jmp
fwait
mov
repnz
mov
popf
loopne
and
jne,pt
shll
jle
fucom
lahf
or
sub
into
sti
lods
mov
or
inc
jg
je
out
data16
xchg
test
lret
out
mov
inc
dec
jns
in
fbstp
inc
fwait
xor
leave
into
fs
add
xor
addb
push
shll
pop
out
aaa
insb
fsts
and
lret
push
outsb
insb
das
adc
inc
mov
jmp
and
xchg
mov
dec
push
repnz
jo
test
test
and
dec
mov
ljmp
lock
xor
clc
xchg
rcl
add
fistpll
insl
or
jg
xor
in
jb
imull
mov
push
sbb
cmp
dec
pop
mov
mov
roll
test
push
pop
cwtl
ja
mov
rcll
fwait
mov
sbb
sbb
insl
not
rolb
sub
adc
stc
sub
xlat
inc
je
outsl
roll
push
rcrb
ret
adc
pushf
lahf
iret
add
jno
out
leave
iret
icebp
stos
sbb
pop
mov
push
jns
ret
rcl
dec
in
popa
push
xor
push
les
shrb
cli
cmpsl
sbb
sbb
sbb
gs
lock
out
loope
imul
or
out
mov
pop
mov
imul
sub
pop
enter
mov
sti
arpl
dec
aas
das
mov
jle
and
fcomi
into
jecxz
sbb
bound
push
mov
jbe
or
xlat
in
movsb
out
dec
add
jmp
ds
mov
jle
stos
jge
cmp
mov
lea
cmp
push
jae
cmp
ljmp
or
inc
addr16
lea
sbb
dec
sub
mov
dec
outsl
xchg
sub
jle
hlt
jns
scas
add
push
cmp
repnz
jmp
scas
popa
lcall
repnz
cmp
test
push
and
cmp
or
pop
mov
pop
lcall
mov
push
out
jl
bound
or
add
xchg
jg
pop
lcall
add
dec
mov
js,pt
rcrl
push
icebp
cltd
dec
lcall
js
insb
push
imul
mov
incb
mov
scas
pop
jns
in
jb
add
popf
mov
or
sub
or
test
test
xor
cmp
inc
xchg
inc
jp
inc
mov
push
push
or
dec
in
mov
leave
dec
shrl
and
out
mov
and
pop
mov
sub
add
test
push
inc
or
cmp
add
and
mov
lahf
fcmove
mov
stos
pop
fs
insl
cwtl
cmc
pushf
xchg
fs
cmc
fidivrs
push
lahf
std
int3
in
movsl
popa
outsb
scas
sub
lock
jns
add
gs
ret
adc
jp
mov
test
idiv
insl
dec
rcll
test
scas
mov
jnp
dec
pop
adc
mov
stos
out
jp
adc
cwtl
dec
mov
fdivs
cmpsl
outsb
das
jmp
loop
dec
jne
mov
adc
fucomp
in
scas
add
out
repnz
jnp
ficoms
out
cmp
lea
ljmp
scas
pop
cmp
or
dec
ja
or
icebp
xchg
cltd
mov
dec
inc
negl
enter
ret
neg
rolb
fwait
adc
rclb
call
inc
lret
dec
inc
mov
pop
lds
inc
addr16
out
push
cmc
mov
cmp
xor
xor
es
pop
fcoms
shr
aam
jl
jg
push
cmp
ror
shrl
dec
mov
jecxz
pop
daa
enter
xchg
mov
pop
in
subb
xlat
dec
rol
sub
popf
sub
ljmp
jne
xchg
fcoms
insl
inc
or
int3
notl
insl
mov
push
mov
push
xchg
fnsave
lcall
pushf
jmp
dec
lds
inc
loopne
sbb
sbb
and
aam
xchg
jae
call
sbb
bound
repz
in
sbb
pop
add
push
pop
add
fdivrs
out
adc
imulb
das
rol
mov
das
mov
cmc
out
or
lods
sub
jno
mov
fcomp
mov
nop
jl
push
js
rolb
xorb
lahf
sub
scas
nop
mov
in
call
daa
es
sbb
shll
std
enter
xor
mov
cmc
in
pop
push
pop
cmp
sbb
shlb
in
aam
pop
test
xor
cmpsb
rorl
sbb
cmc
adc
push
jmp
fisubl
push
insl
cmp
dec
add
call
add
mov
pop
inc
and
mov
sbb
mov
lock
cmp
mov
mov
dec
shll
adc
rorb
jmp
hlt
gs
xor
mov
push
in
and
je
lcall
fs
sti
loop
pop
js
pushf
sahf
mov
mov
fisttpl
jo
jl
cltd
mov
cmp
adc
inc
or
aas
inc
insl
adcb
push
mov
jp
push
lret
pop
out
mov
pop
add
in
in
or
xchg
lret
out
aam
or
sahf
push
sub
shrb
sbb
shlb
mov
inc
pushf
shrd
mov
je
pop
jge
sbb
push
inc
sahf
push
mov
out
lea
insl
mov
enter
out
add
xor
fdecstp
out
sar
mov
rcrb
loopne
ljmp
test
xchg
inc
sbb
daa
dec
mov
out
push
jp
lahf
pop
push
dec
cmp
jge
out
pushf
dec
lret
les
mov
cltd
inc
cmp
aaa
lock
push
add
lret
and
jns
daa
cmc
and
enter
cmp
mov
aam
repz
push
and
imul
js
pop
lea
and
xor
lock
push
int3
mov
jo
fadds
pop
jne
jle
push
pop
add
push
aas
rolb
jb
pop
mov
dec
and
xchg
shrb
test
jb
dec
hlt
test
or
xor
xchg
mov
cmpsl
sub
jno
cmp
test
dec
xchg
imul
filds
das
pop
fs
xlat
lahf
pushf
jl
mov
insb
leave
test
or
fstpt
test
stos
scas
mov
mov
fucom
aaa
fwait
pop
mov
fisttps
mov
push
int
push
dec
mov
shrb
in
inc
or
dec
adc
inc
inc
cwtl
sbb
icebp
sub
lcall
mov
and
pop
push
adc
nop
xchg
adc
pop
sbb
hlt
jne
loopne
imulb
rcrl
imul
mov
jne
pop
popa
xlat
pop
add
adc
dec
imul
popa
sub
mov
xor
sub
cmp
es
jne
js
push
mov
lock
or
mov
sbb
iret
icebp
int
incb
fmul
out
sub
cld
rolb
xchg
or
pop
lret
push
enter
inc
add
call
ljmp
jbe
or
or
xchg
fmulp
outsb
loopne
repz
pop
iret
andl
icebp
xlat
jg
pop
loopne
and
mov
mov
and
jmp
addb
clc
adc
pop
push
jg
mov
insb
jl
and
xor
jp
repz
mov
fdivp
repnz
inc
add
mov
dec
or
je
sarl
mulb
pop
xchg
arpl
pop
mov
pop
in
xchg
push
push
test
push
popf
aaa
lea
mov
push
cltd
in
xchg
test
test
add
dec
add
enter
addr16
stos
movsb
fcom
adc
pop
mov
sbb
mov
repnz
mov
aaa
loop
push
cmp
mov
jge
and
and
orps
xchg
int3
popa
lock
pop
inc
popf
sub
sbb
sub
ja
fistps
int
mov
cld
in
jp
mov
cmp
popf
add
pop
jns
sub
in
xchg
adc
inc
loopnew
je
popl
leave
push
add
scas
test
cmp
mov
mov
mov
ret
xor
add
les
aam
rcrl
ljmp
fcompl
inc
mov
sbb
xchg
ljmp
push
daa
movsb
mov
clc
shlb
ljmp
arpl
mov
mov
jae
xchg
xchg
pop
cmp
sub
pop
mov
mov
mov
aam
or
fcom
cmp
jbe
ret
fsubl
ffree
pop
lds
push
push
cld
outsl
aam
hlt
imul
rolb
test
mov
addr16
std
nop
adc
cmc
lea
ffree
fadds
xchg
cli
gs
xchg
rclb
fs
mov
sub
push
pop
jl
data16
cmp
or
sbb
stos
cld
out
mov
mov
stos
insb
jnp
icebp
pop
cwtl
ret
lahf
loop
pop
mov
scas
mov
jbe
push
das
subb
popf
add
cmpsb
into
enter
test
or
aad
rcll
sub
lea
mov
push
lods
pop
stos
push
inc
in
rcrl
add
cmp
and
xchg
mov
add
mov
pop
pop
mul
aaa
or
sbb
sti
test
inc
fdivs
into
jns
or
pop
sbb
fs
adc
push
mov
push
je
and
sar
sbb
leave
aad
inc
jmp
es
mov
mov
sub
inc
dec
or
int3
sub
xchg
scas
iret
fnstenv
inc
sbb
cmc
out
jmp
mov
cmpb
push
sbb
dec
cli
mov
test
or
repnz
mov
sbb
lock
fldlg2
pop
lret
std
ljmp
push
fstl
in
cltd
xchg
adc
or
dec
jne
pop
imul
bound
rorb
std
fadd
fistps
add
mov
fdivrs
pop
xchg
repnz
popa
out
aad
adc
data16
call
adc
out
sti
scas
mov
and
lds
rorb
arpl
push
cmp
add
jb
cmp
repz
lock
out
bound
aam
mov
jge
push
jbe
outsl
jbe
mov
and
xor
push
test
sti
popf
xchg
iret
lea
add
fisubrl
scas
push
add
int3
cwtl
scas
cmp
ret
gs
call
flds
out
xor
inc
addl
int
andb
jns
push
repnz
out
test
mov
mov
div
mov
fidivrs
mov
popf
dec
xlat
aam
pop
stc
inc
pop
dec
cli
sub
mov
inc
sarl
cmpsl
push
and
mov
into
jecxz
push
xchg
fidivrl
dec
test
std
or
xchg
and
negb
sub
clc
lcall
lret
addr16
out
enter
cmp
sub
rol
mov
push
fistps
pop
pop
xor
loopne
addl
mov
pop
mulb
xchg
testb
pop
dec
sbb
jp
inc
subb
adc
leave
jo
lcall
out
and
sbb
sbb
imul
outsb
insl
sub
aaa
insl
das
mov
xchg
ds
sub
fisubrl
test
hlt
sbb
fistl
out
sarb
push
nop
cmp
cwtl
jecxz
adc
movsb
adc
outsb
push
in
mov
sub
jmp
dec
push
xor
jl
sar
xchg
fisubl
int
mov
ret
pop
fwait
mov
sub
lods
je
repz
xchg
in
mov
and
cmpsl
xor
pop
jp
inc
subl
sbb
mov
sahf
cmp
sub
cmp
out
xor
pop
xor
cwtl
xchg
les
pop
lods
mov
scas
inc
daa
mov
jg
pop
or
fidivrs
add
shrb
aas
push
jmp
mov
cmpsl
aas
add
imul
rcll
je
outsl
push
mov
sbbl
mov
rclb
lcall
arpl
xchg
xchg
ret
stc
test
mov
fistl
or
and
cmc
lods
and
pop
adc
ljmp
cli
addb
loopne
xchg
in
in
sbb
mov
add
mov
ss
mov
xchg
cmpsb
lcall
sahf
repz
int3
mov
in
mov
xchg
sti
push
mov
cli
add
jo
repnz
dec
mov
dec
sbb
push
add
jp
notb
inc
sub
mov
cmpsb
cmp
jmp
jle
pop
mov
ljmp
cmpb
popa
or
popl
pop
mov
lahf
push
pop
test
fs
push
inc
sbb
dec
sbbl
out
out
out
add
dec
xor
xor
inc
inc
jg
and
out
xlat
or
decl
jecxz
or
fndisi(8087
cltd
push
mov
jbe
mov
lahf
clc
fldt
add
mov
mov
cld
in
sbb
mov
or
inc
ss
add
or
and
add
adc
xor
call
push
dec
out
jmp
mov
push
imul
xchg
mov
out
cmc
decl
xchg
mov
mov
jecxz
mov
xchg
lea
jnp
ret
mov
jl
push
out
and
mov
rcrl
ljmp
loopne
loope
xlat
shlb
clc
bound
jnp
and
cld
stc
lds
dec
out
mov
inc
jle
in
in
inc
cwtl
xchg
sahf
rcr
popa
push
pop
mov
idivb
bound
jmp
movsl
fwait
pushf
in
stos
enter
lahf
inc
adc
xchg
inc
cmc
xchg
mov
pop
mov
xchg
lret
js
dec
mov
lods
or
fidivl
roll
mov
int3
push
mov
addr16
nop
fidivl
shr
mov
sti
jb
int3
lea
lds
push
lds
fs
sub
mov
stc
rorl
jb
sarb
lcall
aas
pop
jb
cmp
jns
cmp
std
je
cli
dec
data16
test
lret
mov
movsb
loopne
pop
shll
or
mov
lcall
test
imul
arpl
dec
mov
mov
rcl
xchg
mov
add
call
sub
inc
cmp
xchg
xchg
ljmp
and
push
in
jge
cmpsl
ret
sti
xorl
mov
dec
jae
cltd
mov
divl
jmp
popf
jecxz
icebp
scas
xchg
subb
push
ror
xchg
daa
out
fisubrs
out
sbb
add
or
jb
shrb
lea
lret
jge
jns
jno
pop
lret
dec
xchg
out
or
fldenv
mov
imul
out
addr16
pop
inc
mov
sets
inc
mov
mov
pop
inc
sbb
pusha
aaa
sub
jb
sbb
and
push
sub
and
dec
sub
repz
jo
test
insb
fldenv
in
sar
adc
sahf
mov
sub
mov
and
mov
loop
add
enter
aam
lret
stos
int
lret
mov
lcall
mov
ret
addr16
xchg
fwait
cld
out
movsl
dec
ljmp
jmp
xor
leave
cmp
ret
cmp
mov
xor
lock
cmp
pop
lea
fidivrs
mov
cmp
pop
stc
cmpsb
mov
xlat
inc
jle
scas
sarb
leave
push
mov
and
mov
es
or
aas
scas
addr16
pop
push
scas
mov
scas
jge
sub
test
inc
push
adc
add
repz
mov
lret
and
insl
xchg
sti
dec
mov
pushf
enter
rorb
sub
mov
pop
iret
mov
lods
lret
jo
xor
cmp
lods
fstpl
push
jmp
pop
mov
xlat
insb
fstps
ficompl
adc
sub
and
cmp
je
sbb
mov
xchg
xchg
daa
fsubrp
pop
faddl
pop
ret
fcoms
lahf
pop
shrl
sbb
mov
lret
mov
jp
mov
test
sbb
mov
jmp
int3
leave
or
push
fistpll
pop
insl
xchg
data16
insb
icebp
cmpsl
mov
cmp
mov
out
aad
and
cmp
pop
pop
dec
call
enter
mov
adc
lea
popa
or
ret
push
sub
mov
ljmp
dec
mov
into
loopne
pop
push
push
movsl
jno
mov
push
incl
jno
dec
dec
ror
out
adc
popf
xchg
ds
pop
add
adc
pop
xor
sub
push
dec
outsb
mov
sbb
idivb
or
mov
inc
dec
jge
lret
push
cld
stc
jg
pop
xor
jecxz
or
stos
pop
adc
imul
pop
sub
mov
mov
mov
bound
cmp
out
rorl
sbb
inc
es
pop
cmp
mov
jne
pop
addr16
jge
ror
add
call
cmpsb
aaa
mov
shrl
and
mov
and
loope
test
push
add
pop
inc
add
inc
cmp
testb
jg
cmp
adc
jno
mov
ss
mov
outsb
jl
jno
pop
hlt
shll
xchg
pop
adc
sarl
scas
scas
pop
bound
outsb
std
or
cmc
jecxz
stc
push
xchg
cmp
aas
sbb
fwait
mov
dec
in
mov
push
ja
icebp
andl
push
dec
pop
mov
fsubl
cmp
add
dec
insb
jnp
std
lret
mov
mov
cld
jbe
mov
sub
fdiv
jmp
cmp
lock
mov
daa
dec
mov
mov
xchg
dec
fs
jno
lret
jo
xchg
mov
popa
and
sbb
xlat
ret
mov
jge
xchg
mov
xlat
adc
dec
cltd
jnp
cmp
nop
out
dec
or
inc
xchg
jo
inc
lcall
push
adc
loopne
int3
push
jns
rcll
mov
dec
or
mov
sahf
cltd
pop
and
mov
cmp
stos
out
push
loope
or
push
mov
test
pop
jmp
lret
mov
cld
dec
xor
lret
or
movsl
inc
sbb
pop
shl
test
inc
cli
jns
or
out
xor
mov
out
or
or
popf
dec
lcall
daa
pop
dec
push
imul
jmp
arpl
js
push
scas
adc
add
popa
xchg
pop
adc
cmpb
inc
cmc
in
pop
rcrb
in
cmp
scas
addl
pop
cli
mov
or
sbb
das
adcl
scas
outsb
cltd
popa
stos
rcrb
sub
in
insl
dec
test
jmp
pop
sub
inc
in
pushf
fwait
hlt
jno
pushf
stos
pop
jge
mov
mov
cmc
push
mov
scas
push
push
out
fs
push
push
stc
mov
lock
in
inc
xor
inc
add
int3
mov
dec
xor
divl
pop
jne
sbb
negb
aad
add
shrl
insl
cmp
in
dec
push
xchg
mov
pop
mov
sti
ljmp
repnz
sub
and
inc
popf
js
jmp
in
test
les
jecxz
dec
leave
popa
sbb
mov
out
jne
jle
cmp
les
aad
fstp
inc
sbb
dec
mov
mov
repnz
xorl
sarb
xchg
jmp
add
inc
stos
hlt
std
or
test
fsubl
xchg
xchg
out
mov
repnz
lret
pop
lea
push
out
aam
or
mov
out
std
popl
jne
push
sbb
cltd
mov
or
pop
fmull
fildll
aas
addb
loope
adc
xor
daa
jmp
push
sub
fidivrs
cmp
dec
fisttpl
xchg
andb
xor
adc
stos
fimuls
insl
mov
outsl
mov
pusha
jne
out
and
and
les
insl
mov
out
test
into
les
lcall
lods
lcall
push
sbb
shll
sub
mov
cmp
les
pop
dec
pop
adc
xchg
or
push
add
jbe
loop
das
xchg
add
adc
mov
sti
divl
add
cmp
ss
inc
sbb
dec
xor
dec
jae
insl
insl
adc
pop
adc
cwtl
sub
mov
mov
repz
mov
mov
cld
xchg
cltd
mov
int
lock
outsl
push
adc
cmpsb
or
jecxz
inc
popf
out
add
mov
xchg
add
rclb
ja
jns
aas
jecxz
cwtl
mov
adc
std
xor
pop
cmpsb
and
sahf
pop
adc
sub
out
adc
push
push
pop
pop
and
push
lret
jbe
ljmp
addr16
sbb
or
fidivrs
sar
add
inc
int
jne
add
adc
or
mov
es
out
fcmove
adc
jns
adc
fistpl
mov
or
xchg
pop
pop
dec
or
sub
dec
jmp
xchg
test
cmc
clc
cmpsl
sub
jnp
mull
shrb
imul
aam
inc
xchg
arpl
fsubrl
pop
inc
adc
loopne
inc
cltd
lret
push
add
stos
push
mov
mov
int3
jp
aad
js
cltd
test
cmc
sub
cld
sahf
fstps
push
es
jmp
lahf
lret
fisttps
in
cwtl
subl
stos
push
push
daa
adc
std
mov
mov
inc
ja
add
add
mov
jl
cltd
fsubs
and
sbb
fwait
aas
mov
ds
sub
scas
cmpsl
pop
pusha
xor
push
mov
jo
or
pop
sbb
sbb
mov
clc
push
lds
repz
cld
mov
inc
stc
xchg
mov
fs
test
dec
aaa
mov
jbe
mov
out
inc
mov
lds
loope
sub
sub
leave
xor
pop
addr16
aaa
cmp
lea
mov
loop
pusha
in
cmp
push
add
je
orl
push
mov
push
roll
movsl
mov
sbb
sbb
mov
movsl
cmp
nop
inc
jbe
je
and
cmp
mov
rclb
je
xor
clc
mov
cmp
mov
rclb
es
ret
rorl
into
pop
int
mov
jnp
push
or
cmc
mov
cmpsb
ret
test
adc
xchg
stos
lcall
outsb
andl
arpl
out
push
sub
int
lcall
and
cmpsb
xor
into
push
test
xchg
sbb
sub
loop
loopne
fs
insl
adc
popw
and
testl
in
mov
jg
xchg
dec
cmp
adcb
std
or
sub
dec
aaa
fwait
xlat
fwait
sbb
ljmp
or
sbb
testb
dec
shrl
jne
pand
and
push
fldt
add
fwait
lods
inc
lods
ret
lcall
jae
mov
incb
adcl
jne
jbe
jnp
mov
add
jp
cltd
cmp
cwtl
adc
leave
dec
cld
cltd
lods
fimull
notl
adc
jmp
rorl
sbb
gs
push
or
push
pushf
sub
sbb
test
adc
in
jg
adc
inc
or
int3
leave
sbb
jno
pop
xchg
mov
adc
jle
or
jecxz
fsub
xor
mov
faddp
push
test
xchg
push
mov
fstps
imul
imul
mov
leave
xlat
pop
xor
inc
add
pop
sti
and
mov
insl
xor
imul
sub
fdivr
mov
aam
loopne
mov
push
rorl
mov
push
repnz
push
jge
cli
mov
xchg
mov
sub
jnp
inc
std
out
lret
insl
dec
inc
test
push
sub
sub
xor
imul
adc
insb
les
jo
arpl
lahf
mov
into
cmp
adc
cltd
push
and
ja
sbb
sbb
bound
add
jg
or
add
dec
pop
loopne
xchg
fdivrl
fists
mov
decb
scas
mov
fsub
push
ss
pop
and
push
scas
jnp
mov
inc
jns
mov
pop
push
mov
or
ds
cltd
or
flds
jmp
xchg
pop
add
sar
std
inc
rcrb
sbb
inc
cmp
gs
test
je
xchg
xchg
es
fldcw
jno
sub
arpl
sbb
ficoms
xchg
sub
mov
hlt
cltd
add
pop
pop
push
xchg
and
dec
movsb
cli
sbb
push
mov
aad
gs
incb
mov
cmp
mov
ret
pop
scas
faddl
scas
sbb
jae
pop
mov
idivl
idivl
xor
inc
mov
jbe
jmp
adc
dec
jb
xchg
jmp
push
mov
jne
sub
sti
dec
fistps
shlb
pusha
mov
movsl
out
loopne
bound
js
xchg
pop
ret
inc
push
push
jecxz
insb
lahf
notb
aas
dec
test
mov
lock
xor
mov
xchg
sbb
imul
sub
cmp
in
stos
into
fistps
test
mov
or
es
sbbb
add
aas
filds
jbe
cltd
pop
nop
sbb
xchg
insb
and
dec
lds
pop
cmp
cmp
and
icebp
mov
xor
adc
dec
cmp
lods
int
cmpb
stos
push
sbb
mov
pop
jl
outsl
shlb
aam
mov
jnp
cmp
call
ret
cwtl
sub
mov
daa
add
cli
xor
cmp
jno
sub
in
aaa
dec
xor
or
out
outsl
pop
sbb
xor
int
out
lock
cwtl
xchg
aad
repz
and
fwait
rorb
cmc
std
lahf
int3
mov
xor
push
push
outsb
mov
in
subb
dec
pop
adc
fcmovnu
shrl
adc
adc
dec
mov
rolb
dec
add
test
adc
pop
jbe
ds
lock
push
mov
inc
jp
pop
loope
movsb
xor
pop
and
or
xor
or
xor
lds
int
pop
test
mov
or
or
loopne
mov
dec
nop
imul
mov
stos
icebp
out
ljmp
xchg
cs
mov
je
in
inc
or
xlat
pop
and
inc
test
adc
cltd
jbe
xchg
arpl
sub
sub
cmp
mov
inc
mov
cmc
clc
imul
dec
sub
mov
loopne
int
iret
xor
pop
enter
xchg
sbb
add
push
push
js
loop
std
sahf
push
iret
arpl
cld
lret
enter
scas
sub
mov
xchg
add
or
sbb
cld
jns
test
orb
or
xor
mov
repnz
sub
jle
lea
out
mov
cmc
test
and
or
jne
sub
gs
pop
sbb
xchg
xor
mov
fstpl
mov
addr16
and
xchg
imul
adc
dec
or
push
push
call
mov
or
mov
mov
xlat
sbb
lret
jbe
and
into
mov
inc
fisubs
test
pop
adc
add
push
mov
test
stc
sub
jbe
and
enter
leave
jns
mov
push
pusha
pushf
cmp
in
sbbl
mov
jb
dec
push
mov
sti
movsb
stos
in
jmp
mov
sub
xor
lret
xchg
je
jg
jns
mov
sub
subl
dec
fs
inc
jb
lahf
inc
jg
pop
push
stc
es
lods
dec
fwait
sbb
fldenv
idivl
cmp
ja
loop
inc
iret
xor
cld
nop
xchg
nop
xor
xchg
push
shlb
xchg
and
jl
imul
mov
enter
dec
and
adc
adc
pop
outsl
push
fcmovbe
clc
xchg
dec
mov
sub
xchg
aad
jmp
add
cs
sub
jnp
xchg
ret
stos
jl
les
outsb
add
inc
mov
imulb
mov
add
mov
inc
mov
mov
test
aam
imul
and
jmp
add
sarl
clc
movsl
pushf
push
aaa
sub
in
cli
mov
lea
push
out
dec
es
gs
push
mov
aas
call
xchg
xchg
sbb
sti
push
rcr
clc
notl
xorb
mov
daa
shl
das
sbb
adc
mov
pop
push
out
jbe
push
add
xchg
mov
adc
inc
jge
addr16
movsb
popl
cmp
cmp
xchg
mov
inc
imulb
nop
cwtl
lahf
sbb
jnp
test
into
or
lods
mov
les
or
mov
test
in
cltd
int
cmp
xchg
pop
or
outsb
mov
or
push
jnp
je
ljmp
ja
jg
test
and
mov
push
inc
out
test
jno
fimuls
lock
fdivs
push
cmpsl
inc
jae
lods
xchg
mov
dec
hlt
cld
add
adc
push
xor
sar
xor
test
sarl
mov
and
and
aaa
test
in
aaa
pop
sub
js
cs
mov
sti
pop
test
fsubl
cli
pop
sbb
cwtl
cmp
mov
imul
push
sub
enter
mov
inc
andl
cmpsb
dec
xor
fiaddl
and
xchg
xchg
arpl
icebp
test
mov
rol
loopne
lcall
sbb
outsb
out
jl
mov
mov
cld
push
pop
xor
mov
jbe
mov
cmp
adcl
ljmp
inc
stc
repz
jle
push
sub
xor
filds
out
lds
sub
sub
pop
in
push
inc
lahf
cwtl
or
aas
fbstp
sbb
test
clc
push
jo
inc
sub
clts
mov
cli
das
mov
gs
cmp
fs
mov
and
mov
push
cmpsl
or
jo
filds
int3
xor
xchg
push
pushl
adcb
or
sub
xor
test
dec
je
adc
cwtl
sub
data16
enter
mov
mov
and
cld
adc
andb
add
adc
push
out
push
sub
pop
dec
sbb
mov
mov
out
adc
fildl
in
push
jo
out
dec
cmpsl
and
push
adc
and
lret
mov
cmp
mov
sub
insb
and
cmpsl
loopne
sbb
jle
scas
cwtl
ret
cmp
inc
call
rcll
add
aad
adc
xchg
mov
jmp
mov
mov
xchg
push
xchg
mov
movsl
imul
mov
iret
sub
es
jno
push
fwait
test
pop
loope
dec
mov
xchg
inc
mov
and
daa
adc
orb
xchg
add
scas
xor
dec
pop
popa
pop
cmc
mov
inc
pop
mov
ds
fiaddl
cmp
cmc
push
inc
int3
or
call
ficomps
sub
pop
ret
outsb
das
xor
loop
stos
fwait
xor
ds
test
bnd
fwait
cwtl
leave
outsl
pop
dec
fcom
or
mov
sti
xchg
lds
mov
insb
and
enter
shll
mov
sub
add
add
mov
sbb
mov
jp
xor
cli
sbb
xchg
stos
pop
xchg
stos
or
rorl
scas
mov
repnz
out
cwtl
popa
pop
mov
adc
jle
and
icebp
repz
add
mov
sub
inc
imul
data16
inc
dec
ljmp
roll
enter
invd
jge
stos
adc
leave
and
jb
or
fbstp
lahf
add
mov
or
fwait
jae
pop
ljmp
xchg
adc
push
mov
cli
jp
xchg
inc
stos
xchg
push
add
mov
or
push
sub
jno
mov
pop
mov
adc
addr16
push
daa
adc
lahf
push
inc
xchg
cwtl
pop
std
add
fildl
push
sub
in
out
mov
jp
pop
sbb
or
mov
div
jns
jecxz
dec
lods
cli
add
pop
xchg
jnp
mov
imul
xlat
stos
mov
int
cli
add
pop
or
cld
or
scas
mov
push
mov
js
int
loop
mov
pushf
mov
clc
adc
pop
data16
rolb
jp
repnz
inc
push
mov
sub
adc
pop
inc
pop
cmp
pop
xor
inc
stos
jbe
lretw
mov
out
cmp
pop
fldenv
dec
fistpl
xor
in
ljmp
ss
xor
xchg
lock
xchg
out
shll
hlt
or
aam
ss
cmc
mov
insl
mov
pushf
std
pop
xor
shr
out
mov
add
sahf
cmp
movsb
or
jp
lcall
shl
pop
in
or
movsb
out
ret
shl
loopne
call
in
mov
push
mov
or
out
dec
adc
push
cld
iret
out
aaa
pop
inc
out
jb
jp
sub
xchg
or
mov
loop
and
xchg
mov
insl
mov
jmp
repz
xlat
shll
mov
movsl
lret
adc
xor
mov
aaa
leave
inc
movsl
jno
inc
jno
mov
popf
sbb
iret
cmp
fnstcw
cmpsb
push
imul
testl
and
inc
fldt
dec
xchg
ds
or
loopne
fwait
hlt
enter
mov
jmp
mov
pop
pop
clc
imul
std
stos
movsl
push
orl
mov
hlt
inc
out
gs
sbb
xor
pop
adc
dec
xor
jecxz
mov
add
js
jg
push
inc
mov
and
stos
and
std
or
adc
adc
aam
outsb
scas
lods
aam
adc
pop
mov
add
bound
arpl
lret
dec
fisubrl
pop
sub
gs
xchg
das
popf
scas
sub
inc
inc
jl
sarb
cmpsl
icebp
jbe
call
and
jg
jbe
lods
ss
xchg
mov
xor
mov
jp
push
jns
pop
xchg
insl
inc
mov
nop
mov
inc
scas
inc
cmp
enter
push
pop
xor
pop
outsb
lock
frstpm(287
pop
gs
cmp
adc
sbb
push
dec
into
insb
js
xchg
xor
sbb
pop
sbb
dec
xchg
inc
mov
push
mov
push
mov
lahf
pusha
mov
rclb
mov
pop
xor
stos
fwait
cwtl
jp
imul
jecxz
jae
shll
pop
pop
dec
enter
mov
je
xchg
int3
les
pop
fmull
fs
xor
repz
idivb
fisubl
jp
sub
lret
rcrb
imul
pushf
and
ret
mov
hlt
pop
inc
or
in
xchg
mov
mov
jbe
mov
cmp
inc
leave
imul
stc
int
aas
dec
sbb
jmp
sbb
sub
lret
inc
and
adc
cli
fldlg2
or
jns
xchg
and
aad
cmp
lret
push
test
lret
mov
adc
loopne
xor
js
cs
mov
cmp
push
lret
mov
push
inc
test
or
xor
testl
pop
and
or
cmp
xchg
sbb
insb
fsubrl
mov
icebp
sub
mov
sbb
sysret
and
jo
xchg
imul
inc
cltd
negb
arpl
mov
or
shl
fidivrl
and
xor
pop
mov
xchg
xchg
out
add
fisubs
adc
cmovge
and
lahf
dec
lea
mov
mov
sbb
rep
enter
jae
push
cld
cmpl
daa
mov
cld
scas
jge
sbb
loop
dec
aad
add
jecxz
cmpsl
push
xchg
jae
in
fwait
xchg
mov
xchg
clc
fildll
mov
push
xchg
mov
sub
outsb
push
mov
cli
mov
test
pop
sti
mov
dec
push
out
mul
dec
aaa
xor
jns
sbb
adc
or
das
mov
mov
sbbb
cli
or
xlat
sub
lret
aaa
adc
aam
out
jge
pop
jge
out
std
cmp
ja
out
cmp
lret
push
push
loop
and
cmp
adc
xlat
dec
jno
aas
jmp
lods
mov
and
adcb
dec
test
loope
loopne
and
insl
std
lret
sub
xor
ljmp
add
data16
ds
sub
and
adc
movsb
icebp
bound
mov
dec
inc
pop
stos
out
fucom
adc
inc
xchg
cltd
cmp
outsl
out
inc
mov
push
fildll
push
std
and
out
xchg
repnz
lods
sbb
ret
push
push
xchg
sbb
pop
addr16
ljmp
xchg
les
fadds
xchg
sub
xor
cld
lds
sti
iret
or
loop
faddl
pop
cmp
mov
inc
mov
test
imul
movsl
sti
std
nop
mov
pop
and
fcmovne
scas
jg
or
jno
test
fadds
dec
pop
and
shr
outsl
dec
mov
dec
mov
jnp
inc
mov
adc
sub
mov
jmp
sub
mov
iret
imul
out
in
jl
into
inc
jb
loopne
addb
andl
lret
dec
mov
data16
adc
iret
and
or
add
lock
ret
cmpsl
imul
scas
std
daa
and
into
mov
aam
inc
repz
inc
mov
lods
push
pop
mov
mov
loope
mov
adc
sbb
std
dec
in
fldl
loope
cmp
je
leave
sbb
sti
orl
xorl
ret
pop
cltd
mov
dec
add
int3
mov
dec
or
fcoml
fcomip
inc
lds
movsb
es
and
or
fcomps
push
outsl
lcall
ror
jecxz
stos
out
inc
dec
cmp
pop
mov
les
insb
cmp
push
inc
shr
out
add
mov
jle
test
sahf
push
imul
jbe,pt
xchg
mov
cwtl
ret
xchg
or
stc
in
repnz
jns
cs
mov
ljmp
mov
xchg
cmpsl
cmpsb
addr16
mov
xlat
rcll
add
scas
gs
jne
fistpl
lret
xor
pop
mov
fcompp
xchg
adc
cmp
loope
add
lea
rclb
pushf
xlat
adc
js
jae
xor
fstl
rclb
nop
xchg
add
sbb
loope
int
push
push
xor
jmp
inc
filds
in
jbe
push
inc
lock
aaa
iret
mov
pop
lcall
push
adc
pop
fidivrl
cmp
pushf
pop
mov
and
mov
jle
stos
adc
test
inc
loop
jmp
addr16
shlb
je
inc
data16
fs
test
sti
nop
push
cmpsb
test
add
and
daa
lret
mov
popf
stc
jae
xchg
dec
dec
lea
loope
and
imul
shll
mov
cmp
out
js
out
mov
test
mov
dec
add
lret
or
inc
iret
enter
mov
xchg
fiaddl
clc
dec
pop
sub
add
sub
xchg
fsubrs
les
mov
pop
mov
mov
lahf
mov
cmp
les
neg
in
jbe
inc
fsubrp
loope
pop
rcrb
jo
sahf
sub
mov
lahf
scas
sub
cmp
scas
mov
movsl
pop
mov
jl
lods
movsl
and
loop
sub
mov
pushf
js
divl
pushf
shlb
and
mov
pop
roll
mov
jp
or
push
sbbb
shrl
negb
push
cmp
push
mov
inc
sub
push
shlb
sbb
and
cld
sbb
mov
dec
vpsubusw
fdivl
nop
or
imul
and
cmp
jp
cltd
scas
inc
std
movsl
and
dec
xor
clc
sub
inc
js
push
imul
xor
xchg
lcall
insl
in
arpl
imul
fsubrl
mov
pusha
mov
adc
mov
sub
arpl
loope
mov
cmpsb
test
mov
nop
mul
mov
movsb
mov
xchg
sub
mov
sarl
and
lahf
sub
mov
enter
mov
xor
icebp
inc
push
xchg
and
sub
pop
fcmovnb
xchg
xchg
mov
sbb
lret
daa
or
xlat
jle
sbb
add
cs
cmp
nop
outsb
cmp
clc
enter
jb
push
add
in
mov
ljmp
jg
dec
pop
dec
push
add
push
aam
fs
pusha
imul
and
hlt
cld
mov
jbe
aas
das
popa
pop
xor
push
push
rcll
test
xor
sbb
cmp
mov
sbb
insl
adc
sti
dec
or
call
mov
sbb
pop
cmp
ret
mov
addr16
inc
xchg
inc
or
and
mov
sub
fists
ret
movsl
lahf
and
in
add
xchg
add
cmp
js
push
and
or
movsb
push
sub
cmp
repnz
adc
cmpsb
dec
jbe
dec
dec
ljmp
xchg
addr16
out
mov
sub
mov
lret
inc
push
rol
pop
xor
flds
jb
mul
inc
mov
mov
jp
sub
mov
xor
add
mov
pop
insb
inc
cmpb
mov
test
sub
repnz
cltd
aam
stos
ret
mov
fcmovb
roll
cmp
ljmp
push
gs
fdivs
jne
sub
adc
mov
movsl
and
xor
jbe
jo
push
inc
and
adc
out
mov
pop
mov
gs
aad
inc
mov
popa
js
ret
push
imul
repz
sbb
pop
jns
mov
test
js
bound
jmp
jne
mov
imul
jo
sub
sbb
adc
rorb
jecxz
push
xor
nop
pop
cmp
xor
cmp
and
inc
rcll
and
xchg
sbb
rcr
lods
inc
gs
ret
mov
inc
cmpsb
xchg
fisubrl
call
mov
xchg
push
mov
cmpsb
sarb
fsubs
pusha
sti
mov
idivl
jne
xor
ds
sbb
push
stos
mov
push
mov
push
pop
mov
sahf
pop
test
xchg
jl
repz
mov
mov
in
sbb
push
xor
jbe
push
lods
xor
lods
addr16
in
adc
or
insb
test
adc
push
loope
daa
push
test
adc
fwait
push
loopw
fistpl
aaa
rorl
pop
xchg
adc
inc
es
gs
aas
or
arpl
jne
test
stos
mov
sbb
leave
lahf
sub
jmp
cli
push
test
int
pusha
inc
bound
and
mov
imul
outsb
fidivl
and
inc
sbb
cmpsb
xchg
arpl
cmc
cmp
push
ljmp
scas
lcall
iret
inc
into
jb
scas
fmul
loop
inc
mov
out
bound
das
insl
sarl
xor
mov
sub
cltd
mov
jo
lds
loop
cld
inc
hlt
fwait
divl
movsb
sub
cmpsb
inc
jae
pop
mov
add
cmp
and
sbb
mov
xchg
add
ljmp
dec
ret
inc
mov
fstps
pop
cmp
int3
out
inc
sti
pop
iret
lcall
sbb
ds
xchg
outsl
cmp
mov
andb
cli
pop
loope
loop
negl
adc
mov
mov
lods
lcall
push
xor
mov
jg
adc
mov
xchg
sub
cmp
mov
das
inc
push
lahf
imul
sbb
insl
aas
ret
mov
pop
inc
xchg
ret
sarb
sub
stc
pop
loope
fsubrs
loopne
xorl
mov
xor
cmc
and
popa
cwtl
into
mov
repnz
sub
stc
push
sahf
out
or
mov
mov
loop
push
push
bound
cmp
jae
push
or
mov
pop
sbb
xor
push
xor
inc
fists
push
pop
cmp
sahf
or
mov
ljmp
jbe
pop
sub
in
lods
inc
mov
mov
lcall
in
dec
fistps
sarb
xchg
lock
orb
jae
add
and
lock
add
shl
mov
push
repnz
aaa
inc
lods
xor
push
scas
in
inc
push
pop
lea
aam
fidivrs
sbbb
out
nop
sbb
jnp
xchg
imul
mov
inc
data16
mov
jg
dec
and
and
or
cmp
jle
adc
inc
pop
leave
sbb
loop
add
xchg
gs
adc
lahf
xchg
mov
adc
jne
mov
and
and
stc
dec
sub
push
xchg
loope
shll
test
xor
idivl
jecxz
and
mov
jo
aam
mov
fiadds
mov
repz
mov
repnz
mov
mov
scas
adc
jnp
sub
addr16
scas
xchg
lock
inc
xchg
inc
aad
testb
push
ja
pop
pop
scas
mov
or
js
push
mov
nop
imul
inc
adc
push
int
inc
fstp
add
xlat
js
fnsave
fwait
shll
aam
scas
inc
bound
xchg
outsb
jecxz
sub
jo
test
and
stos
sahf
pop
fdivr
icebp
push
inc
or
jb
das
mov
notl
dec
mov
mov
lds
nop
ljmp
or
iret
or
xchg
push
movups
jl
into
aas
sarb
sbb
adc
or
imul
bswap
loope
and
out
mov
mov
aaa
push
pop
lods
and
adc
push
dec
cs
push
cmpsb
shl
dec
mov
adc
pop
cmp
mov
pop
inc
es
dec
xchg
stos
mov
in
movsb
fneni(8087
jl
btc
jbe
xor
cmp
ss
mov
in
sub
cmp
loop
ljmp
sub
andb
outsl
out
push
cmc
add
lcall
notb
lahf
and
mov
into
mov
inc
data16
add
ret
and
adc
addr16
sti
leave
out
int
mov
call
call
sti
cmc
repnz
stos
imul
insl
add
aas
aad
ss
sub
mov
pop
lahf
or
decb
stc
jns
jg
mov
imul
push
data16
aad
sub
movsl
mov
nop
in
clc
xor
and
aas
xchg
lods
aaa
fldcw
jp
fidivrs
dec
inc
andb
addr16
cmc
cmp
cmpsl
xchg
sti
sub
xorb
nop
xchg
js
pop
and
lds
in
fisttpl
enter
push
cmpb
sbb
ficompl
shlb
xchg
stc
or
add
stc
dec
into
mov
int3
sbb
cmp
outsl
mov
inc
sub
out
daa
sbb
addr16
into
push
mov
jg
pop
xchg
and
sbb
sub
inc
or
mov
les
cmp
rcrb
push
fimull
xor
fcoml
out
insl
jp
dec
cltd
cmpsb
clc
cmc
sahf
dec
xchg
call
pop
xor
inc
cmc
lods
fcmovnu
jg
mov
sarl
mov
mov
jb
inc
nop
lds
adc
cmp
sbb
dec
cmc
jp
push
and
int
jno
loop
test
push
adc
or
mov
mov
cli
pop
inc
outsl
ud2
popa
mov
fsubrl
sbb
adc
and
ja
cwtl
pop
jbe
insl
push
mov
ficompl
shlb
fisubrl
ret
dec
jge
rol
sbb
test
push
arpl
jnp
cmp
sub
cmpsl
xor
sbb
mov
iret
in
or
in
cmpsb
bswap
fisttpll
rcrb
ror
mov
jo
or
adc
sbb
or
dec
jge
adc
sub
jg
shll
mov
xor
xchg
cltd
iret
sbb
ljmp
ds
enter
add
out
fimuls
sarl
insl
sarb
insl
cmpsl
jb
mov
xlat
call
mov
mov
pop
in
stos
mov
dec
aas
push
mov
push
dec
jne
mov
adc
fwait
sub
pop
scas
pop
xor
xlat
leave
cmpsl
gs
repz
sbb
jg
cmp
inc
or
rcll
push
je
xor
mov
icebp
or
sub
xchg
mov
cmpsb
ret
imul
lret
cmp
stos
and
mov
std
outsb
xchg
xchg
xlat
pop
mov
lods
dec
shrl
xor
sbbl
mov
popa
inc
mov
dec
test
mov
aam
lea
lods
ss
in
int3
popf
popa
mov
testl
cltd
push
adc
lock
mov
push
ss
or
out
repnz
or
imul
out
adc
stos
xchg
xor
shl
pop
out
test
mov
ljmp
push
cmp
adc
and
jecxz
cmpsb
pop
je
cmpsl
sbb
mov
cmp
xchg
fistpl
or
dec
sbb
mov
sub
cmc
test
jne
xchg
add
lock
sub
mov
imulb
lahf
in
add
sub
mov
ret
cmp
push
mov
or
into
cmpsb
dec
addr16
push
and
lahf
movsl
jne
cmpsb
xchg
mov
jae
mov
cmpsl
push
out
jp
pop
fadd
loope
adc
outsl
xchg
mov
sti
inc
shr
enter
bound
dec
jbe
cmp
fistpll
mov
cmp
mov
les
subb
jo
dec
mov
pop
cwtl
arpl
insl
adc
fcoml
cmp
imul
mov
add
dec
push
or
inc
loope
mov
adc
std
sarl
out
dec
fists
sub
fdivrl
jecxz
sub
push
add
clc
loop
pop
jnp
dec
icebp
icebp
xchg
js
jnp
out
jo
xchg
test
or
cmpsl
ret
mov
mov
xor
add
cs
lahf
lods
xor
gs
enter
aad
mov
push
xchg
ror
add
gs
test
dec
das
fildll
leave
jae
js
sbb
push
into
xchg
popf
inc
fnsetpm(287
mov
leave
in
xor
stos
mov
or
ja
jge
mov
xorb
fcomps
push
imul
cmp
jp
pop
mov
sbb
lock
shl
mov
mov
jne
fldt
jnp
add
cs
je
and
mov
cld
xchg
lcall
mov
inc
push
xchg
inc
lock
dec
and
add
pop
add
rclb
in
in
push
sub
shrl
jle
dec
enter
outsb
pop
movsb
dec
cmc
fsubl
inc
pushf
sti
fistpll
mov
flds
pop
imul
stos
or
jb
push
ja
arpl
inc
adc
mov
sbb
das
test
imul
fsubrl
pop
shrl
es
pushf
div
test
cmovbe
jle
xchg
push
testb
xchg
cmpsl
into
mov
pop
ss
insl
cs
nop
xor
jp
and
loope
push
push
cmpsl
cmp
aad
xchg
sub
pusha
arpl
int
rcll
add
and
xchg
faddl
xchg
or
xorl
mov
test
mov
daa
mov
in
shlb
in
stos
or
aad
and
ret
and
iret
or
rcrl
sbb
arpl
int
fidivs
sub
shrb
les
insl
stc
sbb
push
xor
mov
mov
xchg
int3
aaa
sbb
cltd
pop
dec
add
out
pop
cwtl
sub
and
and
xchg
xor
rol
aam
outsb
pop
cltd
aaa
mov
adc
jl
push
xor
incb
loope
rcr
mov
xor
adc
jl
in
fildl
mov
dec
rol
cmp
iret
mov
enter
stos
sub
xchg
inc
sti
or
out
xchg
and
cs
and
and
nop
lahf
cmp
icebp
sti
sub
loopne
push
push
jae
xchg
mull
lea
subb
in
testl
inc
mov
int3
lock
mov
in
idivb
mov
ret
fwait
ret
lcall
scas
je
movsb
fcomps
mov
add
ret
sarb
inc
fcmovnb
jne
hlt
mov
mov
es
adc
ret
push
mov
xor
ror
cwtl
xor
or
pop
jge
aam
jg
jno
movsb
xchg
lret
mov
ljmp
xor
cli
lds
ss
mov
popf
in
push
lahf
push
mov
rcl
insb
jno
and
mov
leave
mov
insl
out
or
addr16
xchg
mov
shll
punpckhbw
in
subl
pop
mov
jle
sbb
test
ds
adc
mov
leave
rorl
inc
mov
mov
mov
stc
jns
jp
sub
mov
or
add
adc
mov
fisttpl
inc
loope
inc
xchg
inc
into
movl
pop
clc
mov
mov
ret
rorl
aas
mov
adc
xchg
jbe
mov
nop
pop
mov
iret
xlat
aaa
jnp
xor
mov
leave
ljmp
pop
sbb
or
xlat
mov
jecxz,pt
dec
pop
inc
inc
mov
or
jle
negb
sbb
mov
pop
and
roll
xchg
xchg
xor
int
jge
jb
mov
pop
lods
mov
xor
ljmp
sbb
imul
push
cs
into
shll
mov
and
and
pop
mov
incl
cmp
cmovnp
inc
daa
pop
sbb
mov
mov
ja
mov
adc
xlat
dec
aad
dec
aad
fsincos
sub
nop
mov
jg
cld
mov
adc
dec
outsb
daa
jg
pushf
mov
cmc
inc
fnstenv
jne
jge
sbb
int3
sub
or
jb
scas
and
cmp
cmp
shrl
sbb
add
fwait
bound
mov
decb
xchg
dec
add
pop
push
push
adc
ljmp
mulb
mov
in
cmp
inc
pop
xor
outsl
cwtl
pusha
push
out
mov
jne
pop
dec
and
shl
rdmsr
das
dec
inc
fsts
jle
stos
pop
call
mov
stc
jno
iret
test
outsb
jge
mov
adc
fldcw
fmulp
scas
add
or
mov
mov
mov
pop
add
pop
lea
stos
daa
jno
fnsave
push
in
push
add
iret
dec
imulb
sub
mov
out
jnp
cli
inc
cmp
mov
cmp
insl
scas
xor
gs
pop
mov
std
imul
mov
idivl
in
inc
lret
jl
adc
jno
ja
sub
push
jge
push
mull
ds
adc
jmp
mov
push
xchg
add
fisttpll
pop
push
dec
fcomps
mov
cltd
mov
out
dec
bound
or
mov
xor
add
out
push
adc
mov
sti
cmpsb
int3
mov
shrb
pop
imul
test
call
inc
mov
and
pop
jnp
jge
sbb
js
pop
xor
mov
cmp
jg
gs
mov
lret
in
scas
jecxz
jecxz
sub
pop
les
jecxz
andl
jle
cmp
cmc
mov
xor
mov
xchg
cmc
enter
addr16
pop
cmpsl
push
jnp
mov
mov
xchg
inc
sbb
inc
push
add
jnp
cmp
mov
int
loope
aam
or
pop
lahf
bound
imul
mov
cmp
xlat
je
mov
lret
jle
mov
das
out
add
pushf
loope
add
and
mov
dec
mov
mov
jno
inc
imulb
cmc
jnp
stos
xchg
cld
cmp
movl
fsubl
dec
dec
aam
out
and
xrelease
lahf
shlb
loope
lds
mov
out
sub
mov
aam
xchg
push
adc
jmp
ficoms
es
cltd
lods
jg
bound
es
lcall
pop
out
and
mov
test
cmc
pop
in
push
ss
lods
mov
clc
shl
inc
stos
and
add
dec
pop
sub
inc
sub
or
movsb
popa
mov
lret
sbb
imul
inc
pusha
and
xor
mov
popf
cmpsb
mov
adc
loop
leave
aam
pop
in
add
arpl
lods
daa
jne
ja
jle
mov
mov
sbb
arpl
push
mov
push
or
xchg
push
or
insl
push
mov
add
push
cmpsl
jno
je
adc
dec
push
icebp
pop
psraw
cmp
mov
xchg
push
mov
mulb
loop
stos
cmp
mov
push
enter
inc
notb
int
in
leave
data16
outsl
test
gs
or
dec
mov
xchg
cmc
je
test
loopne
mov
aas
movsl
pop
jne
cmp
jecxz
pusha
and
xchg
mov
adc
pop
out
cmp
mov
ds
jmp
fildll
push
cs
adc
ds
enter
xor
jmp
push
inc
rep
mov
fimull
cmpsb
inc
lock
test
fcmovbe
rclb
aas
mov
and
and
lret
lahf
divb
and
mov
inc
popa
cltd
das
sti
scas
shll
stos
fdivl
mov
push
dec
jge
dec
xchg
sbbl
out
and
movsb
sarl
not
test
lods
sbbl
adc
mov
lcall
das
fucomi
pop
jnp
dec
out
dec
pop
dec
jnp
pop
or
aas
ds
cs
sub
iret
jge
addb
out
fucom
inc
gs
add
xchg
jae
sbb
sbb
sub
sti
adcl
and
or
mov
rol
sub
test
movsl
or
bound
imul
lahf
sub
out
jae
jo
lock
stos
out
mov
inc
dec
ss
sbb
and
jb
imul
jno
leave
addl
dec
pop
orb
inc
fwait
test
mov
push
mov
cmp
shl
scas
fwait
cli
xorl
outsb
cmc
ficomps
fnstcw
and
outsb
idivl
lret
xlat
iret
dec
ss
sbb
js
ret
sbb
inc
dec
sahf
push
push
test
xor
mov
jbe
xor
jle
mov
xor
and
and
fucom
cmc
xor
prefetcht1
idiv
mov
rcrb
add
xchg
and
adc
rorl
adc
rcrl
inc
push
daa
aam
mov
das
clc
ret
fs
aas
push
push
repnz
jle
mov
or
aaa
sub
pop
leave
jno
cmp
int3
notl
out
lds
pop
clc
jns
fadds
outsl
inc
in
pop
out
addr16
cmpsl
je
iret
push
sub
jns
fidivs
jp
xchg
out
fstps
cltd
xchg
popa
jge
loope
out
dec
push
sub
mov
fcoms
shrb
mov
ljmp
jge
loopne
mov
rolb
xor
cli
add
insb
mov
cmp
sbb
mov
stc
xor
cwtl
push
pop
pop
mov
sbb
negl
enter
mov
cmp
mov
and
rep
jmp
mov
fs
mov
cmpl
add
xlat
fists
fbld
mov
pop
enter
nop
xor
push
mov
jmp
bound
xchg
roll
lods
andb
sahf
mov
clc
adc
or
inc
ds
xchg
sbb
or
out
test
cmp
inc
clc
test
es
sub
out
cld
pop
inc
lods
mov
dec
repnz
lcall
push
loop
hlt
xchg
or
xor
icebp
sbb
and
or
xor
xor
mov
sub
bnd
jecxz
test
mov
push
rorb
mov
adcl
dec
ror
aas
push
push
mov
std
push
sbb
jl
push
xchg
mov
mov
jno
or
and
les
jno
out
cmp
xor
mov
push
or
and
cmpb
lahf
cmc
or
lock
and
inc
mov
mov
in
in
xorl
dec
cmp
sub
jp
daa
lock
mov
sub
jl
pop
ljmp
aam
xor
outsb
ss
xor
clc
sahf
sub
add
add
test
mov
aaa
in
dec
call
inc
or
pop
adc
add
pop
pop
aam
sbb
mov
gs
cmpps
fisubl
sbb
cmpb
xchg
sbb
imul
cmp
je
and
in
xor
jecxz
lods
inc
insl
test
int
add
shll
out
lret
mov
pop
dec
or
mov
inc
pop
cmp
lea
adc
out
lea
jg
cmovnp
lds
call
testl
mov
fists
in
cmp
jp
jp
movsl
sbbb
lret
mov
xchg
lock
jmp
dec
aas
pop
daa
inc
dec
jns,pn
sbb
insl
rol
aam
movsl
jb
or
out
popf
mov
cmp
jl
inc
ret
in
insb
rcl
lock
das
push
mov
jne
roll
sub
icebp
adc
pop
sub
inc
push
xchg
scas
movsb
iret
mov
add
pop
pusha
aam
test
push
lret
imul
enter
aas
not
gs
mov
stos
mov
out
inc
jo
jnp
lds
dec
into
out
xor
adc
xchg
outsl
or
hlt
sub
mov
mov
mov
inc
test
add
test
pop
loope
loop
out
jo
jae
test
in
cmp
and
scas
dec
outsb
jno,pn
jmp
ror
sahf
and
push
mov
sub
jne
mov
push
repnz
ds
lock
sub
jl
push
xchg
pop
pop
dec
sub
cmp
movsl
lods
test
lcall
push
jbe
pop
push
ficompl
popf
lret
movsl
inc
popa
dec
test
push
or
and
ret
imulb
jbe
dec
aaa
mov
das
out
jo
loopne
cmpsb
mov
mov
cs
lods
mov
sbb
cs
add
icebp
subb
repz
and
outsb
lock
daa
pushf
pop
pop
cmp
xor
mov
xchg
push
leave
andl
jg
mov
out
and
outsl
xor
test
sti
das
icebp
mov
adc
cmp
bswap
out
iret
and
xor
sub
in
test
mov
xchg
outsl
inc
push
add
dec
and
insl
aam
and
loopne
cmp
add
mov
mov
push
dec
fdivrs
es
push
es
mov
in
fwait
repnz
icebp
push
out
or
sbb
sub
aam
shlb
or
js
fadd
or
fwait
movsb
es
cs
jge
pop
xchg
fiaddl
sbb
xchg
cli
mov
fcmovne
in
mov
xchg
arpl
ss
mov
mov
mov
mov
insl
push
lods
pushf
xlat
repnz
daa
stc
ret
ret
movsb
lret
jae
sarb
mov
scas
add
pop
lret
or
das
leave
cmpsb
add
lret
arpl
in
iret
push
dec
daa
sbb
dec
jnp
lea
loop
mov
and
mov
pop
and
xchg
je
pop
mov
add
lahf
cs
outsb
ror
cltd
and
sbb
sbb
insl
xchg
sub
push
mov
enter
adc
push
inc
xor
dec
pop
jle
jg
std
mov
cmp
sar
lahf
jae
es
or
popf
inc
push
sbb
fwait
pop
inc
mov
adc
popf
mov
pop
aas
xor
aad
inc
inc
xor
inc
xchg
or
jg
xlat
insb
pop
fildll
mov
jbe
xor
repnz
jbe
push
pop
dec
ds
into
inc
push
shrl
add
sbb
fstp
mov
xchg
push
sti
fbstp
sbb
mov
jne
das
sahf
add
insb
fwait
out
and
cmpsb
fnsave
or
dec
shl
repnz
mov
push
adc
inc
mov
enter
cmp
add
lret
loop
xchg
loope
sub
mov
inc
mov
cwtl
xor
out
mov
mov
adc
sbb
and
mov
pop
cli
sahf
loope
adc
mov
jb
jb
mov
daa
pop
fsubs
cmp
jb
sti
dec
add
sbb
jp
cli
cmp
xlat
dec
xorl
fisubl
adc
inc
jmp
int
loop
cli
sub
iret
mov
stos
cmp
cmp
adc
jns
dec
bound
pop
cmc
in
shll
cmpsl
xchg
into
xor
std
adc
stc
out
idiv
cmpb
mov
adc
push
aam
out
hlt
dec
ds
imul
dec
and
xor
shrl
ja
repz
mov
mov
sbbl
les
pushf
into
fcmovnb
mov
adcb
mov
and
daa
stos
push
lcall
or
push
xorb
sbb
popf
lds
mov
and
popa
in
loope
fsubrs
mov
sbb
xchg
fldcw
lea
cs
fidivl
scas
stos
mov
call
xlat
lds
xchg
stos
sub
rorb
jge
bound
cs
loopne
stos
jl
jo
push
inc
fsubr
aaa
cmp
mov
ffreep
xchg
popf
stc
adc
mov
jbe
sub
cmp
jg,pn
cld
sbb
shrb
sbbl
je
xorl
xchg
dec
pop
lods
mov
rcll
negb
jo
cmpsb
fistpl
push
lahf
adc
lock
data16
push
movsl
data16
pop
add
addr16
push
mov
imul
lods
mov
sbb
dec
testb
sbbl
xor
mov
mov
mov
inc
arpl
gs
jg
mov
or
pop
fnstcw
out
add
jo
aam
mov
jmp
jne
jae
mov
flds
pop
das
xchg
mov
ret
sub
sahf
ja
jae
jns
adc
sub
dec
hlt
jl
sub
mov
add
or
adc
push
mov
push
movsb
ror
sbb
cltd
dec
in
pop
lock
pop
inc
loope
iret
mov
bound
and
adc
aam
mov
insb
jl
repnz
sbb
or
out
mov
pop
icebp
pop
sbb
mov
cmpl
sub
fcomps
nop
jb
sbb
addb
push
xor
loopne
cmpsl
stc
leave
xchg
lret
mov
out
push
jbe
add
js
insb
cmpsl
and
fdivr
lahf
jecxz
andl
inc
cwtl
jg
cmpsl
cmpsb
push
mov
iret
hlt
jbe
sbb
pop
add
dec
lods
repnz
rorb
fwait
cmp
jle
sub
shr
mov
mov
out
fsubs
xchg
fwait
les
insl
icebp
fisubrl
add
xor
dec
xlat
test
sub
add
pop
aad
outsb
and
add
cltd
lods
dec
mov
and
or
add
lods
lret
lea
iret
inc
add
add
movsl
jne
fdivrl
mov
lret
sbb
or
outsb
leave
repnz
cmpsl
repz
lds
out
fiadds
pop
mov
xor
and
in
push
xchg
addr16
adc
add
mov
push
fistpl
xchg
ljmp
jae
ljmp
ja
dec
push
adc
stos
adc
ds
shr
rcrl
push
test
pop
cwtl
jne,pn
jmp
xchg
addl
and
pop
or
fistps
mov
orl
jno
cmp
out
xorb
mov
xlat
xchg
jae
cmpsb
rcl
cwtl
push
out
rorb
xor
mov
push
insl
push
xchg
jmp
cs
jecxz
js
lcall
shlb
iret
sbb
ljmp
dec
fsub
xchg
jle
out
ja
rcrl
je
cwtl
mov
mov
ss
in
movsb
mov
sub
lods
cmp
mov
ret
mov
je
lods
popf
sub
dec
xchg
pop
jne
sbb
mov
pop
xor
lcall
ret
xor
popa
test
insl
adc
incb
arpl
dec
xchg
jb
movsb
add
js
popa
fucomp
jg
fbstp
frstor
and
repnz
adc
gs
cltd
popf
sbb
fnstcw
popa
std
push
pop
add
jnp
in
dec
sti
jbe
fsts
push
dec
dec
je
std
out
cltd
int
in
aad
mov
sbb
add
jno
nop
js
mov
xchg
dec
in
cmp
pop
scas
lock
pop
fcmovnb
imul
fwait
inc
sub
fmull
pop
je
daa
rclb
jb
dec
outsb
into
jne
icebp
pop
and
sbb
loopne
mov
or
subl
jnp
pop
push
scas
popf
imul
mov
bound
pusha
jge
inc
stc
out
cmp
test
sub
fbstp
mov
lds
and
pop
xchg
or
or
sbb
mov
lcall
sbb
sbb
aaa
xchg
pop
arpl
negl
rolb
daa
fsubrs
fildl
pop
call
test
out
das
lret
push
scas
out
cmp
and
insb
jg
cld
lret
add
sti
leave
xchg
cld
jmp
das
inc
adc
pop
dec
mov
imul
cmp
sti
in
add
push
iret
and
add
inc
lods
repnz
jns
fwait
inc
cld
jb
mov
inc
cmp
push
in
das
mov
sbb
insb
jae
add
lcall
cli
jb
iret
loope
pop
aad
mov
pop
fidivrl
les
jl
push
inc
inc
cmp
lods
xchg
sub
push
iret
adc
das
ss
ljmp
pop
inc
xchg
xchg
jecxz
sub
dec
mov
mov
mov
das
scas
sahf
bound
std
cmp
jb
push
fbstp
scas
pop
clc
jecxz
sbb
xchg
adc
jge
mov
mov
cwtl
arpl
jne
dec
mov
mov
fs
push
sub
addr16
xchg
hlt
dec
push
cmp
ds
mov
cmpsl
arpl
jg
dec
inc
pop
cmpsl
mov
cmpsb
cs
icebp
mov
pop
cmp
andb
icebp
pusha
aaa
inc
insb
outsl
iret
mov
mov
mov
inc
cs
aam
rolb
sbb
inc
orb
xchg
jno
jp
enter
xor
xor
pop
das
loope
push
lret
fbstp
or
movsl
ljmp
arpl
out
es
cmp
loop
add
xchg
inc
pusha
test
jecxz
lods
dec
rcr
fs
ljmp
popa
outsl
push
jo
aas
ja
dec
psubusw
rolb
loopne
pop
out
xchg
cmpl
push
dec
sar
pop
dec
cmp
ds
movsl
fwait
mov
rol
cmp
mov
out
jl
xchg
xor
jns
xor
mov
test
imul
or
daa
mov
test
inc
mov
inc
mov
shr
or
insb
test
xchg
idivl
push
xchg
repnz
xor
push
sbb
mov
mov
jge
stc
jmp
adc
dec
jno
push
cmp
test
shr
out
out
jns
xchg
add
mov
sbb
orl
ja
fldcw
movsb
mov
lock
sbb
fwait
jecxz
icebp
mov
scas
fwait
mov
idivl
daa
aad
xor
subl
inc
es
in
ficomps
cmp
cmp
add
sub
jb
pop
cmpsb
nop
aas
mov
inc
pop
mov
inc
xchg
or
out
lock
push
out
aaa
pushf
and
dec
pop
mov
mov
xor
or
fwait
movsl
mov
pop
subb
movb
add
fsubrp
sahf
das
loopne
idivb
mov
mov
push
add
scas
les
out
pop
bound
add
sti
or
outsl
sbb
lret
aam
loopne
jl
roll
fwait
pop
xchg
xor
xchg
push
scas
call
pop
pop
es
jnp,pt
lea
jl
mov
dec
jbe
lret
in
out
adc
mov
nop
scas
mov
xlat
lods
inc
sub
xchg
mov
push
fs
int
mov
rcr
mov
add
inc
xchg
or
nop
rcrb
stc
cs
ljmp
jnp
rcll
in
push
xor
or
sahf
repz
mov
test
ror
imul
dec
pusha
or
bound
xchg
inc
jns
int3
pop
push
inc
add
mov
mov
sub
jae
cmpsb
mov
aas
cmp
cs
sub
and
fidivrs
jecxz
xchg
int3
ret
mov
arpl
aas
jge
jmp
jnp
jmp
dec
jno
push
jge
ret
inc
movsb
xor
bound
test
inc
and
out
or
in
and
xor
out
add
xor
xchg
mov
sbb
xchg
mov
xor
mov
mov
xor
fidivl
and
push
fbstp
lea
dec
cmp
ficomps
lret
cld
pop
cwtl
stc
ljmp
mov
dec
movsb
xor
bound
lret
jno
roll
fistl
clc
jne
daa
sbb
mulb
lods
or
pop
aam
call
fldcw
inc
fistpl
clc
sti
and
ret
jl
dec
xor
mov
mov
mov
lret
mov
xchg
sbb
roll
push
jecxz
or
iret
repnz
mull
loopne
dec
mov
fstpl
mov
aaa
pushf
enter
jbe
in
fistpll
push
push
clc
push
jmp
jecxz
jle
lret
js
sub
sti
mov
or
xchg
mov
and
xor
stos
inc
sbb
sbb
xchg
xor
fbstp
sbb
lcall
sbb
sub
fbld
mov
aas
lahf
dec
jb
popa
adc
xchg
xor
sub
flds
adc
pushf
out
jg
add
sar
clc
es
fldcw
push
mov
lret
xlat
inc
into
movsb
mov
mov
and
lods
ds
adc
add
jge
or
add
cld
popf
sbb
outsb
mov
xchg
or
xchg
stos
sarb
mov
dec
lock
movsl
std
inc
and
inc
lods
out
lret
dec
stos
push
push
decl
rcll
jnp
stos
std
les
out
daa
int3
insl
and
test
jge
adc
xrelease
sub
lods
pop
add
jns
xor
out
sbb
cmp
test
ret
adc
adc
xor
dec
pop
imul
int
fists
out
cmpsb
sbb
lahf
fmull
outsl
mov
es
movsb
mov
pusha
adc
xor
push
cmc
ds
push
sti
add
in
sbb
adc
ds
mov
adc
push
or
jp
aaa
rcrb
xor
cmovg
sbbb
sub
lds
rcll
dec
push
inc
orb
cwtl
adc
lret
leave
aaa
xchg
out
xor
cmp
xor
jb
dec
sbb
sti
lcall
mov
fdivrs
inc
and
add
dec
movsb
xchg
mov
stc
shlb
add
mov
lods
mov
fldt
shll
mov
cs
out
xor
ds
or
adc
in
cmpsb
shlb
push
mov
stos
mov
push
test
mov
mov
xchg
insl
clc
sbb
push
cwtl
js
gs
and
jae
cmp
mov
dec
jnp
sahf
sahf
sbb
in
stos
or
imul
std
inc
lret
cmp
and
dec
das
adc
sbb
movsl
fisubrs
xchg
sbb
inc
mov
or
and
mulb
add
cmpsl
aas
iret
jle
mov
push
cmpb
mov
cmp
loop
inc
mov
repnz
mov
cs
lcall
enter
xchg
addr16
push
movsl
loop
mov
or
mov
mov
inc
push
and
in
push
sbb
xchg
inc
icebp
out
out
int
mov
push
shll
xchg
pop
mov
xor
inc
push
lods
loopne
movsb
jae
out
and
iret
aaa
jb
push
decb
add
jae
dec
negb
add
sbbb
jb
lds
jmp
rclb
lods
push
popa
ret
and
jmp
in
arpl
es
imulb
jmp
lock
and
xorb
mov
xchg
mov
pop
jp
ret
xchg
mov
jp
pop
push
mov
cltd
xlat
fdivr
ud2
jno
mov
fmull
movsb
adc
test
outsb
sahf
inc
insb
jns
pop
cmpsl
xor
cmp
fsubl
xchg
jle
out
sbb
stos
ret
cli
or
js
and
out
out
push
rcr
inc
inc
inc
popf
sub
dec
adc
adc
add
lock
arpl
cmp
movsb
iret
das
cmpsb
outsb
push
mov
mov
sbb
pop
fcmovnb
lcall
fsubrl
fwait
mov
mov
ja
xchg
fmull
popf
xor
xchg
out
cwtl
sti
mov
ds
or
movsl
imul
aas
jno
movsl
jmp
xorb
aad
out
jge
and
xchg
fisttpll
aam
das
xor
in
test
adc
cmpl
jecxz
push
lcall
out
and
shll
rcl
xor
cli
push
fnstenv
shl
neg
rcrb
or
in
lcall
sti
testb
cmpl
jmp
push
mov
mov
test
or
mov
popa
jecxz
std
shll
fisubl
mov
mov
dec
mov
or
imul
jg
mov
lahf
mov
mov
inc
dec
movsl
dec
shrb
and
mov
test
xor
dec
or
cmpsb
xor
xor
and
and
fs
sub
data16
push
mov
pop
jae
and
inc
icebp
push
jae
aad
mul
adc
dec
ss
xor
mov
mov
ljmp
lahf
sbb
dec
cmp
inc
ds
in
arpl
out
xor
repz
pop
mov
insb
sub
mov
lods
mov
insb
jp
mov
leave
push
dec
ss
xchg
lods
arpl
ja
xchg
jge
mov
mov
test
cmpsb
push
lcall
push
shrl
sub
inc
inc
fsubs
sbb
mov
imul
xchg
div
pop
addr16
push
imul
jmp
das
popf
push
sbb
pop
adcb
xchg
or
sarl
xorb
xlat
lcall
push
push
xchg
jb
fs
fmuls
out
xchg
cmp
or
call
push
rolb
mov
lea
aaa
pop
mov
nop
inc
and
push
in
es
add
sbb
push
inc
outsb
lahf
jnp
iret
mov
sbb
cli
ljmp
cmp
in
pop
jno
mov
xor
xor
xchg
dec
jmp
int3
xor
or
xor
into
mov
dec
jmp
sub
cmp
or
mov
popa
push
sbb
mov
int
std
cmp
lock
ret
lret
aad
shl
sti
and
out
lret
add
xchg
test
test
lahf
pop
inc
cmp
cld
cli
sub
cwtl
int3
inc
lods
scas
sahf
cmp
loopne
inc
adc
stos
imul
mov
push
jp
dec
lea
and
fisttps
jne
gs
xor
bound
mov
jbe
cmpsl
nop
adc
add
ficoml
xchg
sub
mov
and
push
aad
mov
add
mov
sbb
adc
xchg
movsb
mov
std
cmc
fnstsw
lcall
in
push
push
in
test
add
int3
lret
in
pop
stos
loop
jo
pop
mov
fstl
fdivrl
inc
jp
jge
cmp
stc
push
mov
sub
mov
fstps
mov
push
xchg
test
or
jg
mov
inc
cs
stc
mul
and
or
in
cwtl
push
or
lret
sbb
dec
sbb
sbb
fadd
outsb
xchg
sub
mov
mov
leave
xchg
adc
xchg
dec
jb
popl
mov
lretw
pop
outsl
xchg
mov
mov
iret
mov
ljmp
jmp
add
xchg
sbb
loope
hlt
push
ds
pop
pop
adc
aaa
out
xor
in
sbb
repz
add
sarb
push
cmp
add
daa
inc
into
sbb
jb
xor
lods
stos
adcl
stc
jns
mov
enter
push
sti
popf
popf
jle
out
inc
push
jns
popf
ficompl
add
or
pop
inc
iret
pop
mov
jl
rorl
clc
or
fwait
enter
push
add
xchg
pop
lods
into
das
xor
add
sbb
mov
xorb
pop
out
adc
pop
repnz
push
add
xchg
adc
sti
add
push
cmpsl
scas
cltd
sub
xorb
cmpsl
adc
push
aad
sbb
fisubrs
pop
xor
sub
xor
jae
xor
in
in
cmp
incl
mov
nop
fcmovb
popl
inc
push
stos
xor
sbb
jns
sbb
jge
aam
lock
adc
add
shll
jge
xor
clc
push
and
lds
adc
push
mov
insl
dec
int
cmp
cmp
mov
es
ss
and
cltd
lods
inc
pop
fwait
movsb
inc
arpl
inc
pop
or
scas
inc
dec
rorb
hlt
aad
rcll
add
lods
push
mov
bound
pop
lahf
mov
mov
popf
lahf
ljmp
ja
loope
xchg
fcompl
push
mov
mov
add
inc
movsl
and
test
cmpsb
or
mov
and
popa
stos
push
and
and
and
lret
ds
imul
dec
orb
test
ja
out
sti
cmp
lea
xchg
mov
push
mov
push
push
orl
pop
mov
jl
cmp
push
js
pop
jnp
cmpsl
mov
jp
or
repnz
and
ja
enter
and
mov
ret
cmp
cld
adc
xchg
lahf
imul
sbb
es
lock
inc
fs
sbb
dec
ja
mov
xor
stc
mov
popa
xchg
mov
xor
aas
jg
decb
mov
pop
nop
jne
sbb
jnp
pop
jbe
add
mov
dec
push
or
push
add
xchg
jge
aad
adc
cmpsb
inc
mov
test
repnz
ret
rclb
aas
aad
jno
cmp
jg
xchg
push
mov
arpl
add
loope
cmp
inc
mov
ljmp
mov
popf
test
insl
repz
sti
je
dec
sbb
sbb
mov
mov
cld
lea
and
adc
dec
xor
orb
out
iret
repnz
sub
es
push
pop
mov
imul
mov
pop
rclb
gs
add
sahf
dec
inc
outsl
cmc
mov
pop
lret
or
fldl
gs
cmp
adc
mov
sbb
add
dec
push
aad
xor
scas
enter
mov
push
les
aam
loopne
cmp
jecxz
xchg
pop
pushf
sahf
xchg
xor
pop
enter
sub
pop
sbb
fiaddl
mov
xchg
loopne
push
xchg
stos
dec
ds
movsb
ret
and
ja
cwtl
mov
stos
push
sbb
inc
sbb
ficoml
sahf
out
xchg
in
movsb
push
addr16
loop
or
pop
cwtl
pop
sub
sbb
mov
hlt
jns
test
and
into
ljmp
testb
test
xchg
adc
sbb
sbbb
cmp
rolb
ss
sahf
imul
lahf
lahf
dec
jbe
mov
mov
leave
lret
out
or
pushf
lret
pop
mov
cmpsl
sbb
mov
lret
jne
es
stos
mov
out
mov
sub
sbb
adc
mov
push
cmpsl
jmp
pop
sahf
dec
inc
repnz
inc
mov
test
notl
pop
insb
pop
loopne
xor
sbb
push
lods
addr16
lret
test
xor
mov
mov
pop
ljmp
out
pushl
jge
repz
aam
dec
fistpll
data16
adc
jnp
lock
je
imul
push
aad
lock
sbb
ret
popf
dec
movsb
mov
jp
sub
pop
jg
jle
xchg
lcall
add
push
inc
dec
rcrl
nop
xlat
pop
cld
dec
sbb
ja
cmp
loop
nopl
mov
pop
repnz
cmpsl
mov
xor
push
adcb
cmpl
fimuls
addl
adc
cltd
xchg
cmp
pop
test
scas
sbb
mov
jmp
xchg
cmp
dec
movsl
jae
xor
test
clc
clc
lods
push
fbstp
add
ficompl
int
sahf
cmp
fsubs
stc
lahf
push
sbb
aas
addr16
jns
in
sub
push
xor
call
pop
dec
xor
cmp
repz
rolb
mov
or
popf
orb
cmp
testl
into
mov
ret
ljmp
xor
cli
xchg
dec
js
xor
xor
cli
push
sbb
push
aas
inc
iret
push
scas
inc
xor
pusha
mov
popf
fcoms
jnp
mov
add
dec
lds
and
xlat
adc
pop
jo
push
and
ds
cmc
and
xorl
adc
adc
mov
push
xchg
ficompl
call
mov
dec
stos
mov
popa
into
sbbl
movsl
fwait
push
add
in
xchg
sub
xchg
adc
add
cmp
mov
dec
xor
imul
call
out
jno
jns
lea
out
sahf
scas
into
loopne
push
aam
and
outsl
mov
xor
aam
jle
iret
movsb
leave
jmp
fsubrs
ss
adc
sub
rep
pop
enter
mov
in
push
test
cmp
pop
and
xor
sahf
jp
sbb
std
rcll
cmpb
mov
leave
push
lds
jo
in
dec
mov
pusha
sub
dec
or
leave
fists
mov
and
ret
xchg
add
sbbl
cmp
lcall
mov
pop
loop
cmp
clc
ror
add
cmp
cs
sub
mov
adc
and
and
pop
mov
js
std
xchg
xor
or
imul
je
jb
lret
ds
xchg
leave
pop
or
int
fdivr
and
fstpl
push
out
add
movsb
ja
dec
cmpsl
cli
into
dec
cmp
mov
mov
pushf
test
xchg
or
xchg
jo
push
xchg
inc
pop
xor
push
mov
pushf
xor
adc
push
clc
stc
nop
inc
sbb
sub
cmp
pop
sahf
out
xchg
lret
sbb
addb
call
cmp
pop
push
rclb
cli
add
and
sub
push
pusha
in
jle
sbb
xchg
cmp
cs
cmp
xor
mov
and
out
and
clc
lods
shlb
sub
aam
add
lcall
pop
sbb
pop
and
int
pop
jge
or
test
cld
lahf
lock
stos
or
aad
xor
fidivl
sub
cmp
push
jmp
dec
pop
pusha
sub
test
daa
or
mov
mov
push
pushf
sbb
int
cmpsl
mov
cmp
xchg
xchg
fisttps
hlt
and
xchg
mov
pop
inc
lcall
mov
out
mov
cs
cmc
arpl
movsb
mov
mov
inc
test
mov
test
push
leave
mov
adc
fiaddl
ljmp
jecxz
sbb
cmc
push
lods
pop
cmp
imul
cs
jl
iret
test
push
xor
fcoml
lret
sbb
jo
cmp
mov
jmp
sub
jecxz
mov
mov
cmp
cld
or
sti
daa
dec
sti
push
les
sbb
pop
int3
push
jae
and
adc
push
lahf
jge
push
or
xchg
push
mov
negl
and
ljmp
jge
push
jo
gs
mov
mov
cli
pop
jecxz
pop
iret
mov
scas
in
aas
or
rclb
push
jne
mov
fldcw
mov
push
mov
nop
or
dec
imul
cmpsl
mov
iret
dec
adc
aaa
cmpsl
cmp
xor
ss
cmp
xchg
xchg
das
push
movsb
insb
and
sbb
sub
push
mov
or
shrb
inc
stos
cmp
pop
xchg
push
out
mov
out
sarb
ds
cld
jmp
imul
xchg
bound
les
aas
lret
add
cmpsl
rcrl
and
incb
sbb
test
cmc
sbb
bound
or
inc
sub
or
push
push
xchg
dec
cmpsl
stos
loop
into
notl
xlat
popf
jecxz
mov
scas
pop
in
xor
rol
adc
imul
dec
ljmp
scas
add
sub
jmp
ljmp
adc
jb
mov
nop
out
ja
pop
add
xchg
xlat
mov
outsl
filds
mov
or
lret
idivb
dec
adc
ja
stc
or
arpl
sbb
insl
lds
mov
mov
xor
xchg
rolb
lea
shlb
iret
lcall
pop
loopne
xor
adc
and
ss
insl
arpl
dec
cmpsl
dec
mov
mov
adc
xorl
pop
les
sub
sub
in
dec
cltd
ret
aad
popf
std
popa
add
push
aas
fcmovne
lret
daa
jle
daa
mov
cld
adc
icebp
lock
cmp
lds
into
dec
inc
mov
mov
sbb
mov
mov
sub
xor
push
popa
or
mov
pop
inc
inc
inc
mov
pop
filds
mov
cmpsl
mov
addr16
lea
add
int3
push
data16
mov
dec
pop
negl
push
mov
and
jmp
inc
cmc
push
cli
jecxz
push
in
sbb
fimull
or
mov
sbb
pop
sbb
inc
insl
jmp
adc
mov
sub
popf
pop
das
scas
mov
ror
popa
ret
iret
push
pop
bound
ret
mov
jle
sbb
in
push
jae
mov
xchg
ss
mov
xchg
lret
jb
pop
fmull
je
jp
adc
lock
adc
rcrl
ffreep
and
stos
adcl
les
nop
adc
lds
loop
adc
xchg
sub
fwait
outsb
lods
dec
lods
jo
or
mov
out
or
inc
scas
inc
or
lahf
inc
cltd
ja
push
pop
cmpsl
xchg
add
loop
cli
sbb
pop
aaa
incb
lock
inc
mov
cmp
sti
loop
pop
lret
mov
mov
out
js
jae
mov
xorl
xor
ja
rclb
mov
lea
sub
lahf
fwait
jne
and
ret
mov
jb
push
mov
sub
test
outsb
or
rcr
or
mov
or
cld
sbb
inc
mov
mov
mov
xchg
hlt
jge
jae
mov
mov
jmp
daa
push
mov
loope
push
jl
cmpsb
cld
sbb
add
addr16
lods
xchg
out
xchg
loopne
jns
cmp
lcall
or
jl
jbe
repnz
in
mov
mov
adc
test
push
jp
shlb
in
pop
mov
pop
leave
rcll
adc
cmc
jne
jno
ret
and
lods
loopne
push
iret
push
pop
adc
pop
shlb
insb
xchg
movsb
xchg
rcl
leave
shll
dec
pop
pop
jmp
jne
cwtl
mov
loopne
add
jne
inc
stos
test
inc
sarw
ds
scas
fildll
es
adc
xor
sbbl
push
subl
add
lret
push
inc
test
mov
add
adc
cmp
int
int3
xchg
push
inc
hlt
clc
in
scas
clc
add
pop
repz
mov
add
pushf
mov
out
fbld
xchg
jne
mov
scas
or
aaa
and
dec
shlb
sarl
shrb
lahf
testl
sub
dec
mov
jecxz
mov
jae
sbb
loopne
mov
dec
push
dec
xchg
pushf
mov
aad
sbb
test
fcmove
add
inc
jecxz
xlat
dec
std
cs
arpl
push
adc
sub
sub
mov
mov
mov
enter
inc
fmuls
js
sub
int
sub
hlt
push
cmp
pop
fstpl
push
and
shl
mov
icebp
aam
mov
rcrb
loope
adc
xor
cmp
mov
rcrb
and
aas
stos
ficomps
cmp
mov
cs
and
pusha
shrb
repz
por
inc
fisttpll
inc
inc
mov
lds
ficoms
sti
add
lret
inc
inc
cmpsb
ss
mov
sub
int
push
jp
sub
decb
cmp
cmp
or
or
in
rcrl
arpl
scas
add
popa
jg
repnz
test
and
aaa
adc
xchg
ror
mov
xlat
test
test
push
or
into
les
jl
xchg
push
imull
sub
sub
push
pop
push
xchg
cltd
sahf
push
ja
and
iret
push
mov
push
or
inc
push
jo
stc
jle
sbb
in
inc
divb
out
insl
add
pop
inc
or
stos
cld
lods
dec
int3
sub
mov
mov
mov
sahf
xchg
lods
xchg
mov
fwait
aad
mov
lea
mov
lods
out
psllw
mov
push
mov
mov
jle
ljmp
rorl
jg
daa
popf
pop
cmp
jecxz
gs
or
push
test
cmovo
fidivl
in
sbb
cmpsl
or
sarl
fwait
and
push
fwait
cmpsl
mov
das
loop
into
inc
sub
sub
xor
in
das
sbb
std
sub
shl
xchg
ja
cmpsb
adc
jo
aas
pop
incb
or
imul
cmp
mov
mov
cs
dec
sahf
sbb
inc
xor
int
ds
arpl
and
roll
pop
push
xchg
scas
lahf
scas
jae
test
and
mov
add
cmpsb
mov
xor
push
and
out
popf
dec
sbb
outsl
jo
xor
mov
push
and
fwait
leave
sub
push
int
aas
pop
add
xchg
xchg
xor
jns
lcall
ret
mov
adc
push
loop
lock
fisubl
into
es
add
mov
xchg
push
out
rcll
jecxz
xchg
das
mov
lcall
mov
xchg
dec
or
or
jl
jo
fisubrl
mov
dec
push
push
and
dec
sub
inc
sub
sbb
mov
int3
sbbl
data16
cmp
xor
cmp
loope
outsb
enter
mov
xchg
push
mov
lds
les
mov
in
daa
jo
add
sbb
popf
les
xor
scas
clc
cmpsb
pop
push
pop
cmp
les
imul
std
and
push
dec
bound
test
jmp
clc
out
jbe
jae
movsb
mov
and
aas
jno
xor
je
imul
jp
ds
test
or
stc
push
xchg
orl
mov
les
fistpll
xchg
fisubs
dec
addr16
addr16
mov
shlb
xchg
sbb
int3
cmp
flds
inc
or
clc
ficomps
jno
jo
std
xor
in
iret
lods
add
push
sbb
push
pop
dec
or
xchg
sti
add
mov
outsl
add
push
into
and
movsb
movsb
clc
aas
lock
cmp
fwait
lret
icebp
pop
movsl
in
ret
push
inc
fdiv
jae
push
and
add
scas
arpl
mov
stos
pop
neg
std
pop
inc
mov
fcmovb
ljmp
dec
and
cs
loopne
imul
nop
js
dec
loope
ret
loope
test
mov
jb
cmp
xchg
test
pop
mov
or
lret
sub
or
sbb
mov
es
jnp
mov
mov
idivb
icebp
jae
shrl
iret
or
mov
cmp
loopne
pop
mov
sahf
lods
dec
fldl
in
push
dec
mov
stos
add
jle
add
xor
rorl
adc
mov
sub
and
rorb
pop
push
xor
das
popf
dec
mov
mov
lret
sbb
jmp
int
jecxz
dec
repnz
cmp
add
imul
imul
mov
push
inc
dec
inc
repnz
lcall
rclb
ss
dec
imul
test
into
lahf
mov
movsb
mov
push
aas
rorb
mov
jge
dec
ret
sbb
pop
dec
jns
mov
jmp
lods
xchg
push
ret
xchg
jno
inc
jnp
cwtl
cwtl
push
mov
fs
cmpsb
repz
sub
dec
fisttpll
lods
ja
mov
pop
jb
lods
and
pop
clc
mov
cld
sub
lods
in
rcr
lods
or
mov
and
mov
repz
aas
push
lock
pop
sub
aad
fwait
inc
cmp
pop
xchg
idivb
adc
pop
div
loope
test
test
jns
daa
xor
pusha
das
adc
inc
xorb
push
lahf
adc
lods
imul
pop
mov
movsb
js
call
vpaddusb
pop
sbbl
outsl
fsubs
jb
or
repz
filds
scas
push
loope
jb
clc
push
jl
and
adc
loope
mov
lcall
aas
mov
sub
mov
pop
adc
push
ds
push
add
arpl
or
test
daa
out
aad
sub
lea
mov
xor
or
mov
cmp
testl
fs
divb
push
movsb
sub
fisubrs
xchg
mov
xchg
mov
sbb
add
jge
sub
mov
jne
mov
xchg
pop
js
mov
aad
subl
pop
fisttpll
pop
movsl
enter
loope
fldenv
pop
in
shrl
cmp
pop
pop
outsb
cmpsb
mov
adc
out
push
movsb
xchg
inc
icebp
fabs
sahf
xlat
jl
push
inc
xchg
outsl
lds
pop
pop
dec
xor
inc
sub
enter
mov
aaa
adc
aad
cmc
call
fidivrl
test
inc
jg
jmp
inc
push
aaa
push
mov
add
push
inc
mov
jp
sbb
cs
scas
pushf
sbb
sarb
jg
xchg
aad
push
sti
cmp
pop
mov
dec
mov
xchg
popf
mov
push
aam
ret
xor
xchg
sbb
stos
jmp
verr
pop
jnp
leave
pop
jge
test
popf
aas
jp
enter
lods
jg
je
mov
xchg
fs
ds
jecxz
and
pop
dec
fsubrp
aas
enter
sub
push
stos
pop
lods
mov
jg
fsubrs
pop
lret
xor
jns
jp
mov
mov
ljmp
and
jg
pusha
faddl
fstp
in
lcall
test
and
pop
jae
add
ret
ret
xchg
mov
rclb
pop
cmp
and
idivb
cs
sub
jp
jne
mov
jnp
sbb
sti
cmc
outsb
mov
negl
rclb
sub
mov
xor
mov
sbb
add
xchg
notl
fisubl
lods
cmpsl
jne
add
std
lock
mov
sbb
daa
xor
insl
pop
xor
pop
ja
arpl
sub
mov
loop
add
out
fisttps
testl
repnz
jnp
mov
popa
ss
fcoms
mov
insl
ja
xor
stos
iret
sti
scas
push
inc
mov
mov
fwait
call
and
xchg
inc
mov
xor
sub
pop
xchg
lods
popf
and
jae
cld
std
outsb
push
ret
mov
push
xorl
adcb
mov
dec
and
pop
push
mov
jecxz
ret
ss
inc
data16
test
pop
flds
or
mov
sub
jge
fwait
xchg
jp
xor
or
xchg
int3
push
jge
xchg
xchg
jno
insb
shlb
xchg
xor
and
scas
xor
sbb
repnz
fildll
fwait
int
fiadds
jo
cld
and
mov
and
sar
fstpt
sub
pop
mov
adc
into
mov
mov
repnz
cmp
jmp
add
fstpt
dec
xlat
pop
sub
clc
xor
mov
mov
lcall
inc
cld
cmp
test
aas
xchg
push
mov
ljmp
mov
inc
pushf
push
inc
test
adc
jae
xor
cltd
dec
stc
mov
roll
mov
cmp
lock
sub
pop
push
or
cmp
jecxz
mov
in
lahf
add
test
sub
inc
jg
jle
pop
sbb
cwtl
lds
xchg
dec
or
das
mov
push
inc
and
jns
xchg
jecxz
sbb
int3
fdivrs
xchg
pop
mov
or
cmp
outsb
jne
std
je
dec
mov
push
pop
scas
mov
push
es
icebp
sti
push
mov
and
and
mov
jnp
cmp
sub
mov
das
lret
inc
mov
movsl
hlt
stos
rclb
ja
lock
mov
push
jb
sbb
orl
mov
ret
or
xchg
popf
dec
int
push
cvttps2pi
ret
xor
fdivl
or
aas
addr16
fisttpll
dec
sub
mov
std
pop
push
sub
insl
push
sbb
dec
pop
pop
stos
push
ret
xchg
scas
test
mov
inc
js
loopne
div
out
sub
mov
xor
cwtl
mov
and
ret
rolb
dec
adc
mov
std
pop
test
lods
mov
ja
add
insl
adc
out
into
jle
and
test
and
xchg
cmp
shlb
xchg
cmp
or
shrd
xor
xchg
call
mov
mov
pop
out
int
std
ret
mov
dec
adc
xorl
shlb
idivb
movsl
cmc
lods
push
push
mov
cwtl
out
jo
inc
add
jne
stc
or
jo
and
popf
dec
sahf
sub
xchg
in
cmp
dec
call
xor
push
cmp
leave
jno
sti
js
mov
lods
pop
pop
fstpl
sub
out
cmp
cli
inc
fwait
je
mov
ja
nop
or
negl
sub
mov
adc
pop
enter
aas
jno
ss
sbbl
stos
xor
mov
out
xor
mov
cmovp
insb
std
jl
adc
lds
js
and
pop
icebp
cltd
or
mov
mov
test
imul
jg
stc
sbb
mov
pop
call
cmc
in
popa
mov
enter
mov
inc
inc
popa
aam
jmp
inc
scas
movsb
and
icebp
movsl
add
addr16
mov
xor
int
fisubs
cld
cmp
imul
sub
gs
jbe
cltd
xchg
std
mov
sub
test
lret
pop
add
and
inc
les
push
xchg
loope
in
adc
push
popa
sub
les
push
cltd
xchg
jecxz
das
insb
xchg
in
lret
loop
scas
mov
adc
xchg
les
loope
nop
shr
add
fcomi
dec
adc
jg
cmp
sbb
aaa
sub
push
fisubrs
mov
out
lahf
fwait
test
pop
arpl
out
jno
jne
lock
out
jnp
mov
cmp
je
std
add
ffree
pop
or
lret
xchg
and
push
inc
mov
inc
add
xchg
inc
arpl
test
mov
mov
enter
mov
bound
sub
cmp
leave
addr16
push
xor
das
rcr
xorb
inc
adc
outsl
scas
jno
iret
add
and
ds
sub
ja
dec
pop
test
mov
xchg
jae
cmp
pushf
mov
push
mov
aad
int
sbb
fildl
sub
inc
xor
dec
loop
sbb
es
or
scas
lcall
sbb
jb
xchg
push
inc
mov
loopne
mov
adc
stos
cmp
xchg
cmpsl
pushl
lcall
push
pop
jg
lods
test
adc
xchg
sbb
jns
outsb
push
les
jne
dec
insl
call
jle
push
mov
jae
xchg
jecxz
mov
out
push
mov
test
adc
popf
xchg
push
and
testl
sti
je
outsl
inc
enter
xchg
jmp
or
sti
mulb
repnz
jnp
loopne
pop
inc
stos
std
sahf
and
cmp
add
add
xlat
sbb
aaa
fs
das
push
andb
nop
stos
daa
sub
jle
mulb
cltd
ds
dec
and
or
sbb
push
push
iret
sbb
fcoms
inc
jnp
shrl
clc
push
mov
bound
mov
mov
xchg
pushf
lret
sbb
push
add
lods
fisubrl
imul
mov
cltd
ficomps
movsb
jb
sbb
dec
lret
in
mov
das
push
adc
lea
adc
in
jecxz
daa
inc
iret
aaa
mov
loope
inc
popl
cmpsl
imul
cld
dec
or
loop
daa
fimull
orl
jno
add
mov
and
pop
gs
call
lds
adc
push
test
ficoms
dec
jnp
and
cli
setge
repnz
pop
pushf
rolb
sub
xor
sub
shll
jno
xchg
lods
mov
into
pop
cmp
jmp
mov
jo
dec
jmp
jg
add
fidivrl
xchg
sbb
push
data16
popw
jbe
sbbb
xchg
push
add
dec
xchg
inc
jecxz
outsb
idivl
sahf
sbb
dec
dec
inc
test
lcall
imul
lods
fistl
mov
jnp
in
mov
cmp
sub
mov
rolb
xchg
into
repz
xchg
and
push
jne
sbb
loope
jge
jle
sbb
jne
push
or
cmp
xchg
push
pushf
shrb
data16
sub
sbb
push
cwtl
adcl
arpl
in
mov
jno
inc
jg
loope
pop
pushf
mov
scas
fsts
pushf
and
ffree
or
in
pop
test
int3
fs
aad
jns
rcll
mov
adc
cmp
mov
push
adc
lea
ja
xor
mov
jl
incl
shlb
insb
cmp
icebp
test
lds
les
or
mov
jo
cltd
cmp
mov
sbb
mov
mov
mov
jp
not
out
inc
push
and
inc
fs
adc
jge
sbbl
in
scas
jo,pn
lods
push
popf
scas
push
cmpsl
les
xchg
sbb
or
mov
jp
mov
mov
cmp
cwtl
fdivs
enter
aad
mov
cmp
es
mov
aaa
lret
cmpsl
pop
mov
xor
push
lods
mov
call
xor
jnp
rorl
test
test
adc
nop
push
test
call
push
cmp
sbb
sub
cmpsb
ret
rorl
or
pop
mov
sub
pop
fwait
adc
mov
aaa
dec
fmuls
sbb
mov
jno
push
push
xchg
cmp
push
aas
pop
lret
cmp
inc
cmc
fcmovne
cld
pop
push
inc
cwtl
and
xchg
sub
sub
mov
mov
dec
or
repz
enter
pop
lds
test
mov
nop
jns
inc
loope
push
pop
loope
push
xor
jmp
into
push
addr16
inc
mov
cs
and
repnz
test
mov
out
jle
mov
xchg
inc
fs
cltd
inc
enter
pop
add
mov
xchg
or
out
fisttpll
mov
or
xor
inc
jae
popl
fmull
xchg
xor
outsb
popa
popa
jae
cmp
addr16
sub
fcoml
std
sbb
aas
add
mov
xchg
xor
adc
insl
dec
call
mov
rorl
fiadds
sub
mov
daa
jb
xor
lock
in
lret
cmp
adc
sbb
stos
rolb
sbb
xor
and
push
jae
insl
inc
and
jge
or
outsl
lods
popf
pushf
lock
fimuls
cli
lea
add
jg
and
arpl
adc
xchg
dec
push
or
pop
cmp
pop
push
clc
add
aad
pop
and
pop
aad
sub
inc
mov
xor
inc
mov
into
pusha
sub
popa
jl
pop
jmp
stc
fsubrp
jl
push
pop
or
sbb
adc
xchg
xchg
mov
mov
mov
ret
out
mov
pusha
mov
imul
mov
and
jb
mov
cli
popf
jae
jge
test
inc
aas
imul
push
pushl
push
jbe
sub
pop
inc
and
push
lret
add
jge
cmp
testb
mov
in
mov
add
lods
fisubs
xchg
call
out
aas
jecxz
repz
add
aas
push
mov
push
in
add
xor
jo
repz
movsl
dec
push
dec
jecxz
shlb
xor
imul
je
mov
scas
movsb
lods
mov
mov
mov
pop
nop
jo
jp
xor
push
aam
addr16
popa
sub
loopne
pushl
mov
adc
push
pop
shl
xchg
mov
mov
sub
sbb
addr16
push
push
rclb
insb
pop
push
dec
aas
stc
lret
pushf
mov
mov
xchg
lock
mov
inc
cmpl
inc
es
mov
push
dec
xlat
inc
pop
mov
xlat
arpl
dec
sub
mov
dec
cvttps2pi
push
ja
push
sbb
cmpsl
fucomp
cld
sbb
loopne
aas
fidivs
push
push
bound
out
jo
push
jmp
inc
or
pop
push
std
and
cmp
push
adc
push
xor
cs
push
addr16
addps
push
and
sbb
imul
and
iret
loopne
jno
mov
jae
or
into
enter
mov
aam
jge
xor
push
sti
mov
adc
xlat
xchg
and
cs
test
and
add
cltd
jge
fs
les
and
adc
mov
nop
pop
test
pusha
mov
mov
sbb
xchg
cmpsb
and
iret
mov
sbb
mov
xchg
push
stc
jbe
pop
mov
inc
pop
imul
ljmp
adc
dec
mov
stos
sahf
int3
sti
adc
adc
add
push
std
les
add
lock
jo
dec
push
jnp
orl
fwait
or
pop
pop
add
je
xlat
fcomps
pop
pop
sub
shll
dec
xchg
leave
or
pushl
outsb
test
outsl
mov
cmc
lds
sahf
cmp
ds
pop
jle
adc
sub
rcrb
pop
lahf
ret
mov
dec
dec
xor
mov
addr16
adc
lahf
pop
pushf
push
jecxz
scas
bound
xchg
aas
dec
mov
dec
insl
adc
adc
rclb
mov
daa
mov
cmpsl
mov
icebp
jae
sub
pop
inc
shrl
cmp
cld
aad
inc
repnz
jb
or
cmp
cs
and
inc
xor
popf
mov
fcomps
stos
fstp
mov
leave
jae
mov
dec
adc
or
imul
rcrb
pop
fucomi
mov
adc
xchg
pop
cmp
sub
ss
mov
adc
test
jge
dec
inc
mov
movb
movsl
into
jbe
into
jne
dec
dec
cmc
sbb
push
and
rorl
cmp
lock
arpl
out
dec
dec
stos
adc
lea
mov
int
into
dec
pop
in
mov
int3
xor
loope
push
repnz
lds
xor
sbb
xchg
mov
mov
daa
dec
mov
lods
cmpsb
mov
lret
mov
cltd
add
das
fidivl
jle
and
push
mov
cltd
dec
repz
es
pusha
cmp
xor
fwait
rclb
repnz
pop
loope
pop
jle
and
adc
call
dec
cli
push
ret
ss
fcmovb
jne
mov
mov
dec
inc
addb
adc
mov
jp
scas
loopne
push
icebp
xor
hlt
cmpl
lret
pusha
rcl
pop
jb
push
xor
lret
jp
das
push
mov
movsl
sbb
xchg
xchg
xchg
ror
out
pusha
rol
icebp
lret
movsb
dec
or
in
add
scas
mov
ds
lds
lret
sbb
popf
cli
cmpsl
shrl
add
sbb
stos
inc
add
ss
mov
pop
sbb
mov
in
into
and
mov
sti
or
mov
xchg
fdivrp
std
imul
dec
retw
cmp
add
sahf
lods
adc
mov
cmp
cmp
xchg
std
adc
popa
pop
mov
and
jge
lods
mov
mov
clc
std
imul
pop
sahf
aad
shl
cmp
jbe
mov
mov
mov
lret
sub
cmp
and
out
push
xor
pop
or
inc
cmp
and
add
xchg
aad
aaa
in
mov
sbb
ja
mov
loopne
test
mov
add
xchg
lret
sub
mov
fisttps
inc
sub
mov
std
pop
in
fdivr
cmpsb
fisttpll
lock
cmp
lcall
pop
cli
lcall
data16
cltd
mov
ret
sahf
mov
mov
dec
lea
cli
decl
int
mov
lds
pop
and
mov
test
jnp
in
enter
sub
inc
jp
xor
xchg
sub
sub
lea
scas
inc
arpl
cmp
mov
jae
xor
lahf
or
mov
int3
cmp
mov
pop
ret
mov
sbb
mov
mov
or
cmpb
pusha
cmp
xchg
mov
add
scas
loop
add
mov
push
rol
push
mov
icebp
mov
jge
mov
aas
inc
out
xchg
ret
in
cmp
dec
fdivrs
and
imull
repnz
xchg
jne
je
and
mov
mov
cmp
sub
inc
cli
stos
cmp
int
dec
dec
ljmp
push
mov
or
mov
out
shlb
cld
xchg
fmull
lcall
cmp
jns
shrl
xchg
pop
adc
push
jecxz
mov
aad
push
es
dec
lock
fcomps
out
inc
push
xchg
out
aam
das
jne
add
xor
cs
test
out
mulps
dec
sub
icebp
in
mov
mov
and
das
or
imul
jnp
cmpsl
dec
xchg
dec
push
mov
insl
inc
inc
sub
outsb
pop
mov
cmpl
mov
xchg
ja
loope
stos
ja
and
lods
pop
aam
inc
aas
inc
outsl
jbe
aam
mov
mov
aad
pop
jne
hlt
ljmp
mov
aas
iret
push
loopne
test
add
mov
xor
cltd
ja
mov
mov
mov
sbb
xchg
scas
nop
hlt
dec
mov
jl
dec
inc
out
imul
dec
pop
cmp
mov
fwait
cmc
add
cmp
enter
mov
xchg
sbbb
xor
arpl
sub
mov
scas
cmp
shll
in
test
addr16
xor
cwtl
xchg
sbb
data16
inc
fwait
outsl
negl
les
push
icebp
cmpsb
fcmovne
imul
cmp
outsl
mov
outsl
xchg
nop
dec
enter
add
xor
mov
cltd
xchg
in
addl
outsl
jle
cmpsb
or
movsl
jge
xor
popa
ret
inc
nop
cmp
and
movq
mov
loope
loop
andb
xchg
out
push
aas
dec
insl
in
aas
cwtl
adc
dec
mov
cmpsb
loopne
cwtl
xor
and
aam
jne
pop
mov
out
push
dec
mov
sbbl
ljmp
sahf
push
or
lods
lods
and
dec
push
daa
outsw
in
jae
xchg
jl
or
filds
lods
pop
sub
pop
test
mov
push
dec
xor
pusha
sti
or
out
lret
jle
push
push
ja
in
pop
into
loop
lods
movsl
inc
jp
xchg
xor
mov
pop
lea
jmp
or
inc
mov
inc
or
mov
fucomip
popf
or
das
ds
sbb
pop
cwtl
mov
stos
rolb
stos
adc
imul
mov
pop
sbb
icebp
out
xchg
cmp
shrl
or
jo
rep
int
cmpsb
cmpsb
or
int
mov
push
xchg
aaa
xchg
mov
xor
add
mov
add
pop
jne
sahf
sbb
rorl
mov
icebp
jnp
mov
bound
push
push
imul
lock
push
mov
aam
jl
mov
push
popa
imul
add
sbb
jns
mov
movsb
sbbl
cli
test
cmc
or
add
sahf
sub
adc
sub
dec
mov
adc
jbe
lods
dec
inc
cmc
jp
lcall
aad
fidivrs
pop
xchg
test
ljmp
nop
ljmp
and
inc
jns
data16
out
gs
cltd
or
bound
and
call
sbb
jae
into
das
xchg
or
cmp
in
xlat
mov
fildll
popa
loopne
notl
out
jle
jo
pop
mov
enter
repnz
or
push
xchg
mov
jmp
mov
inc
pop
xchg
dec
jno
sbb
inc
sbb
push
test
das
mov
popa
std
or
push
cmp
lds
jmp
cwtl
adc
shrl
or
stc
xchg
hlt
shll
in
ljmp
mov
data16
mov
clc
jbe
lret
mov
mov
outsl
cmp
stos
cmp
xchg
je
push
pop
imul
js
mov
js
mov
fdivs
int
rcr
shll
clc
bound
cmc
fcmovnbe
xchg
pop
or
insl
fcomps
out
dec
mov
push
lea
xchg
jmp
mov
movsb
pusha
xor
and
fisttpl
xor
loop
fidivrs
fs
loopne
dec
sti
fsubrs
sub
mov
leave
iret
lods
cmp
pop
mov
push
cs
pop
and
in
mov
xlat
xor
inc
push
dec
std
xor
pop
and
inc
add
fs
decb
lahf
mov
lret
add
bound
es
xlat
rcrb
inc
insl
les
jmp
cmp
cmp
dec
mov
mov
inc
sbb
xchg
jle
or
cmp
outsb
test
testl
movsb
imul
shrl
cwtl
jbe
sub
in
jg
mov
sub
push
icebp
adc
push
dec
adc
jg
mov
pop
lods
sub
jno
xor
xchg
sahf
addr16
in
into
and
push
cmp
or
mov
mov
sub
and
ret
cmpsb
out
add
dec
push
pop
ret
cmpsl
rolb
into
imul
mov
mov
lods
add
and
fistps
lods
fwait
popf
ljmp
je
int
inc
je
cmpsb
xor
fdivr
or
outsb
mov
bound
lock
jb
mov
push
xchg
adc
jns
rcr
lods
popa
push
cmc
pop
adc
push
pusha
pop
dec
ja
inc
fwait
and
jmp
daa
dec
mov
push
ret
je
pushf
cmpsb
dec
inc
mov
mov
test
enter
or
xor
sub
popa
pop
imul
into
hlt
in
push
dec
pop
stos
mov
inc
pushf
test
mov
in
adc
mov
mov
test
rorl
cmp
mov
test
test
mov
jbe
mov
add
loope
loope
movsl
stc
call
jl
test
call
and
push
test
mov
mov
mov
push
ss
sub
dec
push
aam
xor
adcl
jl
imul
mov
shlb
mov
add
push
mov
js
adc
xchg
cmp
xor
cmpsb
int3
outsb
xchg
mov
or
dec
cmpsb
mov
cmp
stos
lahf
add
std
mov
push
mov
lcall
outsb
xchg
or
fs
hlt
pop
xchg
lods
pop
out
jbe
dec
inc
out
icebp
jns
call
mov
pop
pop
mov
das
xchg
popa
jnp
dec
mov
mov
adc
add
mov
imul
mov
lock
mov
adc
cli
mov
scas
push
push
jnp
dec
cmpsl
xor
inc
fwait
mov
jo
inc
jle
mov
aaa
mov
push
or
test
dec
mov
out
xchg
rcrb
dec
jge
ljmp
cmpsb
mov
out
inc
int
fwait
push
inc
rcr
xor
bound
arpl
out
lcall
and
push
mov
lock
jno
arpl
pop
call
sub
xorl
and
push
cld
xor
jecxz
add
das
clc
addr16
mov
sbb
sti
mov
cli
popf
lock
or
out
cmpsl
outsb
popa
das
lock
icebp
push
icebp
out
lret
or
data16
lods
sbb
mov
popa
jecxz
ficomps
jno
roll
and
mov
stos
test
pop
adc
fisubrl
or
mov
adc
les
sti
andb
adc
xchg
or
mov
clc
pop
or
and
pop
and
push
mov
and
pop
push
in
xchg
inc
cwtl
pop
shr
xchg
pop
ret
popa
jp
das
sub
jl
cld
rcll
notl
adcb
xchg
pop
insl
mov
inc
adc
lret
add
sbb
push
cmpsl
or
popa
or
cmp
mov
dec
sbb
inc
mov
mov
repnz
mov
adc
scas
stc
mov
test
in
out
fxch
and
xor
imul
test
sbb
mov
adc
addl
or
push
pop
mul
outsl
repz
daa
shll
outsl
sub
add
lcall
fldenv
loopne
jmp
and
mov
adc
insb
test
out
push
fwait
sbb
mov
or
xchg
out
movsb
pop
iret
fidivs
jp
xor
dec
test
pop
cmp
movsl
lock
lret
sbbb
ret
inc
test
jecxz
roll
sub
out
imul
ficomps
aam
out
jnp
fwait
repnz
clc
lods
shrb
pop
sub
mov
arpl
xlat
jno
fists
int3
xor
mov
inc
inc
dec
aad
inc
xor
jne
mov
pop
dec
das
aaa
mov
push
dec
xor
in
xchg
fwait
cmpsb
fsts
xchg
pop
or
jb
sbb
loope
jle
xor
iret
je
push
fsubrs
dec
fs
outsb
hlt
repnz
lret
adc
fimuls
movsb
imul
loop
insl
int
fmull
xor
xchg
shl
das
ret
dec
movl
pop
pop
scas
or
jbe
mov
insb
xlat
cwtl
rorb
nop
lahf
cwtl
ficompl
cmp
fwait
xchg
cmp
xchg
mov
push
mov
adc
sbb
inc
and
lcall
inc
repz
xchg
cmp
cmp
add
test
je
mov
mov
movb
lods
lahf
in
aaa
test
ret
pop
push
xchg
sbbl
jecxz
insl
repnz
not
pop
jbe
orb
dec
mov
and
movsb
sbb
lds
xchg
xor
fcomip
test
frstor
loope
filds
loop
lret
std
xor
cld
sub
fnstenv
dec
rorl
repz
fst
mov
cmp
mov
lds
jae
jb
cwtl
ficoml
dec
push
xchg
rcrb
cli
jnp
xor
mov
cwtl
int
xchg
in
test
jno
das
test
pop
xchg
shrl
dec
push
lods
mov
adc
hlt
popf
mov
popa
pmaddwd
pop
mov
mov
fstps
sar
add
sbb
bound
xchg
push
adc
pop
mov
je
mov
ss
adc
sbb
test
mov
lea
aad
push
pusha
icebp
mov
cmp
adc
inc
inc
dec
push
dec
jle
add
jg
jmp
sub
pop
stos
mov
cmp
push
mov
loopne
xor
dec
jnp,pt
push
es
jns
jecxz
popa
mov
ljmp
iret
mov
sub
cmpl
test
popl
xorb
mov
cmp
jmp
xor
fstpl
pop
fdivs
scas
daa
mov
int
nop
mov
cmp
fsubl
mov
daa
data16
ss
mov
test
cwtl
fsubs
loope
fwait
ret
fs
sbb
addr16
les
aaa
mov
mov
inc
ds
and
push
out
shll
leave
aas
dec
add
sub
mov
movb
sub
aad
fs
fs
cmp
pop
sub
ret
iret
sti
xor
les
lea
cmpsl
outsb
mov
rcrl
sub
cmp
pop
sbb
lret
imul
add
test
sti
push
je
out
jge
mov
xor
mov
jae
pop
jmp
inc
jne
xchg
mov
cld
jne
js
pushf
lods
jle
hlt
gs
inc
push
or
popa
or
out
test
jl
outsb
arpl
in
pop
lea
sub
imul
inc
add
sbb
lahf
nop
rorb
xchg
sub
jne
sbb
pushf
popf
xchg
sub
mov
mov
outsl
fiadds
orl
jle
adc
adc
mov
or
cli
cmp
lahf
xchg
ljmp
jbe
movsb
loopne
jecxz
or
repnz
xchg
insb
clc
aad
std
rol
and
in
jns
mov
es
inc
mov
pop
or
pop
mov
and
dec
dec
movsl
sub
mov
bound
jbe
sbb
clc
decb
xor
mov
inc
into
sbb
adc
test
int
rorb
lret
jg
pop
sbb
gs
mov
adc
addl
fucom
lds
jl
sub
rclb
lods
std
not
jmp
jecxz
mov
sub
xchg
outsb
outsb
dec
aaa
sub
xchg
addr16
subb
movsl
inc
popf
push
lods
push
xchg
je
outsb
push
out
or
loop
pushf
loop
cld
aaa
fsubs
nop
scas
add
fmull
xor
and
test
mull
fcompl
in
sbb
loop
outsl
ret
add
push
and
mov
mov
fdivrl
imull
adc
fstps
insb
ret
lds
loopne
sub
xchg
mov
sub
ds
gs
movsb
outsl
add
mov
pop
add
mov
adc
fcoml
call
pop
rcr
shr
dec
pop
push
push
and
mov
add
mov
mov
lret
fxch
push
ss
cmp
mov
jo
movq
jmp
std
das
push
cmp
adc
xor
push
rcl
mov
sub
fistl
popf
adc
test
mov
pusha
xchg
dec
rolb
aad
cltd
mov
sbb
repnz
sub
pop
test
sbb
daa
mov
in
xor
jecxz
ret
sub
ret
push
popf
inc
and
cli
mov
adc
sbb
fimuls
ret
add
or
jb
cmp
es
and
pop
jno
aam
out
push
mov
and
hlt
daa
popf
jo
lock
jecxz
shrb
jno
sbb
jmp
mov
mov
dec
xlat
sbb
lods
xor
jno
push
cmp
in
cli
test
cwtl
mov
push
aad
mov
movsb
xchg
idivl
mov
mov
pop
mov
dec
ficomps
dec
cmpsb
mov
loop
and
pop
rcrl
xor
pop
mov
cmpsl
ljmp
out
xor
mov
out
cmp
int3
leave
xorb
mov
mov
mov
pop
jge
hlt
push
inc
aaa
dec
xchg
rcrb
out
hlt
inc
lea
ret
popf
jae
sub
pop
std
mov
insl
stos
push
imul
xchg
xor
out
and
pusha
mov
mov
mov
incl
pop
sbb
lahf
inc
xor
loop
sahf
push
xor
xor
cmp
jns
subb
addr16
fcmovnu
dec
cmp
daa
lahf
loop
imul
push
sbb
xchg
adc
xchg
jle
xchg
lods
movsl
pop
mov
setb
fs
call
call
xchg
popf
push
ja
ds
fstp
jns
movl
imul
arpl
movsb
outsb
js
leave
sbb
jo
cmp
sub
add
mov
lahf
adc
dec
jns
insl
jno
inc
jp
jl
lahf
xchg
or
mov
loope
add
mov
loopne
lret
and
int3
xor
cli
jmp
mov
imul
hlt
xor
inc
repz
sub
lea
pop
dec
adc
rcr
mov
outsb
jae
mov
frstor
add
cld
inc
add
stos
push
or
shlb
jecxz
sbb
jg
jno
out
jl
das
mov
cmp
push
adc
xchg
sub
pop
adc
shll
sti
fcmovb
leave
push
pusha
dec
aad
cmpsb
sti
mov
pop
test
adc
insb
aaa
jno
push
test
imul
lods
add
frstor
fwait
rolb
fidivrs
xchg
lock
lcall
mov
pushf
pop
out
jmp
cwtl
sbb
sti
and
out
push
aad
test
leave
in
test
enter
mov
push
mov
fldcw
sbb
mov
xor
aam
jl
mov
or
out
jmp
lock
loopne
cmp
stos
jnp
mov
call
movsb
inc
hlt
subb
mov
fsubl
sbb
xlat
mov
fld
jno
aam
mov
int
dec
dec
sub
push
inc
sbb
cmp
xchg
test
pop
imul
push
dec
mov
xor
rorb
sahf
mov
adc
lods
push
in
dec
push
jp
add
xchg
or
int3
xor
adc
push
inc
cld
cmpsb
add
test
rcrl
mov
in
jbe
mov
pop
dec
icebp
pop
into
loop
xchg
inc
fcomps
sbb
out
cmp
cmc
rcll
mov
nop
in
lret
test
repz
out
stc
xchg
or
jp
and
scas
and
pop
push
filds
loop
push
scas
dec
jo
or
gs
xorl
sbb
call
jge
dec
xor
adc
push
lret
pop
cmp
shlb
imul
scas
push
pusha
aad
aas
dec
fucomi
and
or
mov
mov
pop
ss
xor
outsb
fbstp
xor
mov
gs
repz
pop
movsl
pop
pushf
enter
add
jb
push
xor
mov
pop
jns
in
and
out
mov
cwtl
into
mov
popf
dec
mov
xlat
push
ljmp
mov
clc
lods
cbtw
jecxz
stc
push
and
mov
cwtl
jmp
xchg
fsubs
xchg
or
or
enter
cmp
fwait
sti
xchg
addr16
mov
xor
xchg
push
std
xor
dec
pusha
dec
xchg
xor
bound
push
outsb
mov
mov
add
aad
sbb
repnz
call
push
mov
rcll
cltd
vminss
aaa
lret
data16
xor
addr16
mov
imul
cmp
pop
mov
pusha
std
lea
jmp
add
rclb
fisubs
pop
sbb
inc
popa
pop
jle
lret
push
xchg
mov
gs
stos
pushf
cmpsb
xor
rcll
push
sbb
push
hlt
mov
cmp
les
fisubl
mov
call
push
xchg
adc
sarb
sbb
xchg
daa
sbb
aam
scas
test
adcl
je
inc
or
aas
xorb
xchg
sub
int3
out
mov
loope
loopne
lds
fs
and
and
inc
jg
jp
or
ds
imul
adc
mov
imul
divl
pop
fcmovnb
dec
mov
xchg
mov
cs
xchg
push
sub
push
xor
inc
mov
test
sbb
ret
push
add
pop
popa
fs
dec
loopne
ret
add
xlat
pop
mov
mov
pop
and
cmp
lcall
mov
dec
call
push
push
dec
inc
ljmp
adc
call
fs
inc
jle
xor
test
lea
sub
add
mov
cmp
ljmp
dec
xchg
adc
mov
ret
int
sub
sbb
inc
xchg
insb
mov
sbb
imulb
push
xchg
inc
pop
sub
or
in
adc
push
int
push
js
aaa
aas
iret
add
mov
mov
xchg
fnsave
lods
pop
shrb
jmp
imul
int3
sbbb
imul
idivl
out
test
ja
lea
test
lds
inc
daa
xchg
jbe
mov
pop
pop
xchg
lods
les
test
fmul
mov
in
inc
popa
xor
push
fisubl
xchg
xor
jle
inc
pop
and
or
sbb
mov
mov
mov
dec
das
or
xor
sahf
push
cmpsl
mov
lods
fwait
sub
push
lcall
cmpsl
adc
addr16
mov
out
add
stos
add
or
pop
scas
std
inc
loopne
push
mov
sub
jae
ret
mov
nop
stos
xlat
and
inc
gs
sbb
xorb
jg
ss
fimuls
cs
cmp
adc
gs
aam
insb
jno
or
cltd
enter
mov
or
pop
cwtl
outsl
pop
push
and
stos
or
mov
fimull
shlb
addr16
and
jmp
imul
push
in
imul
psrad
test
mov
cmp
outsl
lret
idivl
inc
es
dec
je
loope
fadds
jbe
into
scas
cltd
cmpsl
in
jp
sub
add
sbb
bound
cmp
jb
leave
sub
add
nop
xlat
and
inc
aaa
fmul
lret
aaa
jecxz
rclb
jmp
mov
lahf
sub
inc
inc
std
adc
pop
lock
inc
repz
xchg
sub
xchg
test
add
lret
cltd
inc
mov
pop
enter
mov
sbb
inc
mov
push
fs
jge
repz
dec
push
lret
and
adc
adc
xor
jns
mov
flds
sbb
js
dec
cmp
popf
cmp
lret
fwait
push
jmp
mov
imul
out
inc
jo
outsb
mov
loopne
mov
out
add
mov
cmp
xchg
cmpsb
insb
fs
dec
inc
mov
jle
mov
mov
stc
scas
and
scas
adc
in
ds
pop
or
pop
mov
lret
mov
dec
jbe
lock
insb
or
inc
mov
loope
adc
jl
sbb
movsb
xchg
pop
mov
sbb
xor
add
cwtl
outsl
mov
jnp
icebp
shll
jg
mov
or
inc
daa
mov
jo
bound
mov
or
mov
gs
jns
push
lods
mov
mov
sbbl
push
mov
dec
loop
int3
cmp
mulb
mov
mov
dec
sahf
repnz
dec
sbb
and
sbb
fbld
mov
test
mov
stos
fcmovne
repz
movsl
fbstp
or
dec
jg
mov
mov
lcall
add
out
xchg
lods
push
add
xor
insl
mov
je
add
add
rcrb
mov
mov
paddb
xchg
je
outsb
mov
rcrb
lea
jg
ret
in
inc
fcomi
dec
xchg
pop
mov
mov
or
fs
repnz
out
lds
ret
cmpsb
mov
dec
mov
pop
xchg
mov
pop
inc
mov
nop
add
xchg
mov
pop
out
mov
xor
pop
push
sub
add
nop
adc
mov
jp
movsb
cltd
in
pusha
cmpsl
out
xchg
int
ret
adc
sti
data16
loop
js
and
dec
xchg
inc
cmp
pop
mov
outsl
mov
dec
sbb
or
ficomps
jns
xor
cwtl
mov
pop
addr16
ds
cmp
sub
push
daa
stos
mov
jle
in
pop
inc
push
mov
adc
pop
cmp
lods
test
mov
cmp
fisubs
testl
pop
inc
testb
jbe
or
dec
xor
or
push
and
and
mov
ljmp
sbb
pop
sub
loope
dec
jno
push
lcall
push
cmpsb
jle
outsl
pop
xor
mov
adc
pushf
outsb
test
sub
add
test
dec
cmp
push
cs
pushf
adc
bound
nop
das
loopne
cmpsb
and
popf
es
rorb
sbb
jnp
lea
jb
movl
loop
mov
rorl
jne
jno
jns
jnp
call
push
mov
pop
cmc
ret
xchg
add
subl
pop
sbb
sbbb
sub
pop
movsb
mov
cmc
test
add
sub
pop
ficoml
imul
mov
clc
xor
xchg
inc
pop
adc
orps
repnz
lret
lret
out
jge
je
dec
mov
pop
xor
std
subl
jle
es
xlat
push
inc
cmpsb
xchg
mov
andb
fstpl
out
mov
mov
mov
sub
jge
pop
mov
push
js
xor
xor
pop
add
popf
xchg
call
mov
movl
ds
icebp
js
pop
xor
jno
or
inc
cmp
adc
test
and
imul
sbb
repz
xor
cmp
fdivr
and
dec
pop
fs
sub
xor
enter
fsubl
jmp
ret
sub
movsl
pop
lds
fisubs
aad
mov
mov
add
pop
push
cwtl
aaa
nop
sub
loop
aam
loop
mov
jae
cmp
test
shll
pushf
mov
dec
insl
sbb
sbb
popf
fstpl
mov
es
lea
cmp
sub
dec
ffree
scas
icebp
mov
lahf
lea
repnz
mov
mov
or
cltd
test
pop
cmpsl
test
mov
add
lock
aas
adc
cli
pushf
iret
push
sti
pop
ds
int
xor
pop
xchg
scas
aaa
cmpsb
pop
outsb
add
pop
into
dec
mov
mov
mov
push
mov
jo
shl
xchg
and
dec
mov
adc
and
loop
fsubrs
daa
xchg
inc
adcl
jns
mov
aaa
push
movsl
mov
cmpsb
sbb
mov
or
xlat
negb
xchg
dec
mov
cld
std
jp
mov
ss
xchg
popf
mov
sub
sti
nop
xchg
mov
fs
push
gs
incl
dec
jmp
xlat
hlt
push
loope
sarl
stc
mov
fildll
cmp
movsl
out
pop
mov
sbb
mov
mov
jmp
mov
jnp
jnp
jb
push
pshufw
aas
lods
sbb
push
sti
inc
ljmp
iret
and
sbb
lock
jl
mov
mov
lret
mov
xchg
sti
sub
call
mov
and
lea
int
out
cmp
iret
mov
je
repz
lock
imul
inc
das
inc
in
movsl
jae
fwait
xchg
addr16
and
mov
jne
mov
pop
adc
add
jg
rcrb
fsubp
push
pop
filds
and
push
push
push
xlat
mulb
popa
enter
and
jnp
xchg
jnp
mov
xchg
outsb
out
lods
lods
mov
cmc
std
out
test
mov
scas
subb
rclb
jbe
bound
into
push
and
pusha
mov
cmp
xchg
mov
cmpsl
scas
clc
mov
mov
jle
adc
and
movsb
lret
jae
loop
xor
push
data16
cmp
out
fsub
and
pusha
adc
push
xor
lods
sbb
add
mov
shll
pop
sub
scas
or
jge
xlat
popf
adc
sbb
testb
les
mov
leave
cmp
jo
jmp
int3
cs
imul
xchg
or
rol
aam
inc
fwait
mov
adc
jg
push
dec
jmp
imul
dec
test
inc
xchg
into
push
adc
mov
xchg
jl
cmp
pop
mov
mov
imul
cmc
pop
hlt
inc
idiv
and
xor
pop
xchg
inc
pop
fstps
dec
mov
pop
nop
adcb
mov
imul
clc
mov
pop
pop
pop
mov
aam
push
dec
add
push
in
imul
jo
les
adc
xchg
into
ja
dec
stos
sbb
cmp
ret
xchg
inc
imul
jns
fs
in
pop
paddq
add
mov
imul
aas
arpl
mov
jecxz
mov
mov
das
aas
out
cmp
and
sbb
rolb
and
aam
jno
and
aam
cmp
push
jmp
mov
jne
sub
mov
mov
push
mov
cli
imul
lds
repz
fwait
mov
fsubl
mov
test
loope
adc
popa
ds
xchg
mov
outsl
insl
sbb
xor
je
ss
lcall
lea
mov
enter
mov
lds
fcoms
and
je
sarl
pop
stos
or
pushf
add
inc
fld1
add
xchg
mov
stc
rorl
xor
sub
or
xchg
sahf
dec
mov
mov
jl
fsubrl
mov
cmc
xor
lret
jne
movsb
mov
mov
imul
movlps
dec
call
pusha
sti
and
push
in
in
shrb
pop
adc
xchg
xlat
cmp
ret
dec
cmp
jl
das
cli
sub
mov
mov
xorb
scas
scas
push
push
inc
xchg
aad
fsubrs
mov
shlb
dec
lds
or
and
addr16
mov
es
cmp
xlat
xchg
mov
bound
or
cmp
inc
aas
in
push
in
js
xchg
jnp
aad
stos
fistpl
aas
fwait
inc
jge,pt
das
popa
dec
dec
popf
xlat
gs
ret
gs
xor
adc
mov
and
jecxz
fsubrl
aaa
inc
pop
add
or
xor
arpl
xor
mov
aaa
leave
jne
inc
stc
add
sub
mov
mov
jno
cmc
out
mov
shl
movsl
aas
sub
notl
sub
nop
sbb
ficoms
imul
adc
mov
pop
mov
cmp
test
jmp
fcmovne
xor
adc
mov
dec
cmpsb
bnd
mov
pop
daa
aaa
add
inc
inc
xor
mov
inc
adc
mov
jns
mov
adc
dec
push
sti
jae
dec
xchg
jbe
dec
push
inc
in
or
rol
lea
leave
addr16
loopne
sbb
mov
jle
les
pushf
lret
mov
jae
and
lds
mov
fmul
clc
fbstp
lret
dec
dec
add
lret
pop
mov
popa
loope
adc
inc
xorl
lahf
dec
xor
and
ret
out
ja
arpl
outsb
adc
push
sub
adc
add
lods
xor
inc
xor
rol
sub
push
cmpsb
cmp
stc
adc
push
push
out
test
adc
jne
mov
add
xor
cmp
scas
jge
aad
iret
mov
test
js
dec
xchg
in
rcll
add
imul
xor
les
int
pop
js
mov
sub
push
xchg
int3
sub
jb
lods
cmp
jns
mov
mov
sarb
pop
repnz
fisttps
fwait
clc
or
cmp
ds
sub
push
or
in
mov
push
insl
insl
cs
insb
ss
into
pop
push
mov
mov
jmp
orl
and
mov
scas
nop
fstl
out
or
aad
pop
cmpsl
leave
mov
adc
xor
cld
pop
enter
mov
cmpsl
mov
imul
sbb
add
sub
mov
mov
mov
xchg
fldenv
jmp
cmp
cltd
push
add
xchg
mov
mov
adc
hlt
daa
push
fwait
fnstsw
test
scas
out
inc
jle
imul
xlat
testb
dec
int
push
gs
xorb
shrb
sbb
jmp
push
or
dec
ljmp
shll
sahf
add
pusha
ret
jb
pusha
cmp
sub
mov
lods
loop
fldt
sub
cmpsl
movsb
jbe
xchg
cmp
popf
inc
subl
xor
jmp
cmp
cmpsl
mov
push
cmp
stc
mov
mov
and
and
cmp
nop
jl
pop
fisttpl
pop
pusha
out
xchg
sti
inc
pop
or
clc
popf
push
dec
adc
sbb
fimull
cmp
xor
pushf
lcall
call
in
pop
out
inc
sub
pop
xchg
cmpb
lods
mov
jo
sbb
inc
lcall
add
loope
sbb
sub
cmpb
pop
shrl
nop
lods
sbbl
mov
icebp
pop
sub
mov
jnp
and
push
inc
les
fst
jns
adc
cmpsl
adc
mov
or
daa
lea
inc
jnp
sub
push
adc
pop
xchg
push
push
pop
xor
dec
cmpsl
pop
fcompl
das
xchg
xor
jnp
iret
and
outsl
data16
mov
pop
scas
push
jecxz
xchg
imul
dec
inc
aad
nop
push
in
insl
push
mov
cmpsb
jb
ror
sbb
sbb
cmp
popa
cmp
insl
or
movsl
jae
int3
into
mov
push
es
into
mov
lcall
shr
cli
das
and
adc
shlb
enter
fucomip
push
idivl
imul
cmc
mov
out
aad
xchg
mov
sub
pop
sti
sub
and
pop
cli
mov
push
int
mov
inc
lret
pop
cwtl
adcb
mov
in
leave
xor
leave
es
adc
repz
xchg
mov
out
call
dec
dec
jg
add
lahf
outsb
stos
and
cmpsl
cmp
pcmpeqb
adc
shlb
outsb
pushf
xchg
outsb
jp
sbb
dec
ljmp
outsb
cmp
jecxz
pushf
xchg
ret
lods
pop
and
pop
sbb
cmp
jmp
out
nop
jb
rorb
pop
or
and
push
in
sub
mov
aas
mov
mov
aas
cmp
pop
repnz
jmp
lea
sub
or
movsb
mov
sbb
mov
pop
cltd
call
rorl
daa
ficoms
pop
jb
repz
es
lds
fwait
sbb
or
test
cmp
fs
sbbl
push
pop
push
xlat
popf
imul
jp
mov
and
sub
jno
lret
lock
testb
mov
jno
mov
rorb
and
add
dec
mov
aam
pop
mov
jb
mov
push
jae
sbb
pop
xor
or
es
or
mov
in
in
ljmp
inc
jb
xor
imul
jbe
adc
sbb
das
jg
shll
in
jle
mov
fs
in
xchg
subb
xchg
fstps
adc
scas
in
sub
cmp
dec
pop
inc
push
jle
int3
or
add
je
test
test
mov
dec
xchg
notb
fsubp
push
mov
mov
rcll
shll
loop
mov
fsts
add
xchg
pop
mov
mov
mov
mov
andb
dec
xchg
sub
addr16
out
dec
mov
addr16
push
cmpsb
es
mov
fwait
bnd
xchg
add
or
xchg
rep
outsb
mov
or
aas
mov
lea
lcall
je
sahf
jp
adc
sub
repz
inc
pop
cmc
adc
xlat
stos
xchg
jp
xchg
mov
lds
icebp
xchg
call
xor
loopne
daa
call
das
in
push
rorl
aas
cmp
adc
and
mov
xchg
pop
xorb
jge
pushf
and
cmp
lahf
shl
rcll
jmp
xor
jb
nop
mov
bound
cmpps
lds
stc
pop
insb
push
addl
cmp
nop
lds
movd
notl
cmpsl
push
xor
es
lock
pop
push
push
xor
scas
es
and
jo
push
push
shrb
les
mov
es
mov
jbe
outsl
mov
jns
test
dec
pop
push
xor
inc
cmpl
inc
add
dec
cmp
arpl
adc
in
push
cmpsb
les
push
push
inc
out
push
sti
or
jae
xchg
addr16
das
mov
cmp
mov
xchg
sub
sbb
sbb
xor
cs
jne
test
lcall
adc
push
pushf
mov
xor
or
push
arpl
hlt
aas
insl
stos
insl
push
mov
jmp
rolb
lock
jl
or
push
cmp
clc
jns
fildl
cmp
adc
xorb
add
pop
enter
add
aam
cltd
loopne
jge
stos
sub
jp
adc
mov
push
or
xchg
cmp
adc
test
xchg
ret
mov
arpl
sahf
ffree
push
mov
fcompl
fidivl
je
lret
les
lods
jne
data16
mov
in
fstpt
inc
jno
push
lahf
jmp
jbe
mov
cmp
in
adc
lods
js
repz
call
mov
pusha
negb
mov
jae
sbb
cmp
repnz
adc
cmp
scas
add
repnz
movsb
and
cmp
lret
or
into
mov
out
cmp
int3
pushf
pop
lret
xlat
mov
pusha
sub
push
sub
lods
push
je
sbb
fs
jnp
cmpsb
mov
shrb
or
lds
and
pop
scas
jbe
ljmp
sti
or
sti
into
inc
mov
mov
xor
xchg
mov
cmpsb
push
add
or
mov
push
scas
mov
movsb
push
adc
testb
adc
mov
jmp
mov
stc
adc
sbb
iret
movsb
cwtl
sub
and
mov
les
push
mov
fdiv
push
hlt
fst
push
bnd
jge
inc
push
cmp
mov
inc
or
xchg
daa
andl
shl
cmp
xor
lsl
push
lods
mov
inc
cs
xchg
push
insb
loope
rorl
xor
or
into
fs
mov
imul
in
cwtl
mov
push
shl
push
push
fimull
negl
pop
xchg
fisubrs
and
push
das
mov
xchg
lahf
or
jns
inc
lcall
insb
andl
dec
pop
mov
fnstenv
mov
jo
int3
sbb
pusha
outsl
sbb
or
mov
pop
sbb
sub
loopne
dec
out
push
sbb
in
test
fmul
leave
aas
in
ja
mov
out
std
lods
call
insb
or
or
pop
lret
cmp
xor
pop
lcall
add
repz
pop
pop
nop
int3
out
push
rcr
push
popa
fwait
cs
jb
int3
mov
dec
mov
and
jecxz
sbb
orl
or
repz
mov
cld
sbb
mov
jns
mov
mov
xchg
inc
mov
pop
and
xchg
data16
inc
jo
les
nop
inc
adc
mov
dec
jmp
clc
xlat
add
sub
imul
dec
and
mov
out
and
mov
test
and
sub
pop
mov
loope
stos
ds
dec
insl
and
pop
xchg
nop
or
jmp
mov
stos
jmp
mov
and
cli
push
js
push
into
mov
inc
fbstp
repnz
int
jp
adcb
lahf
xchg
sub
push
imul
rcr
imul
lret
jmp
pop
jne
out
je
mov
mov
pop
push
cmc
gs
push
mov
adc
lret
and
pop
mov
inc
add
and
mov
mov
and
mov
lret
push
call
sbb
push
add
jl
jae
arpl
sub
cmc
cmpl
sbb
test
sub
add
pop
push
cmc
fistps
jnp
lcall
and
fisubl
push
out
lock
stos
leave
imul
ds
arpl
inc
fs
shlb
repnz
mov
add
xor
ret
lcall
je
cmp
cmp
jnp
rorb
pop
and
mov
std
cmp
and
sub
dec
notl
dec
cmp
sbb
subl
inc
std
add
push
mov
repz
jg
cli
test
cltd
imul
je
add
sahf
leave
stos
test
leave
xchg
mov
add
dec
adcb
hlt
sub
inc
pushf
inc
jg
jecxz
add
out
inc
sub
jl
in
xor
xchg
pop
cld
and
mov
mov
loope
test
xchg
test
xor
adc
repz
lods
add
lods
mov
mov
or
cmp
jb
jl
arpl
adc
dec
pop
push
subb
popf
in
inc
and
mov
fwait
iret
pop
gs
xchg
fimull
fs
aad
jg
jecxz
xor
lock
sub
addr16
push
push
cmpb
inc
add
pop
adc
or
popa
jle
mov
and
popf
mov
arpl
sub
lcall
cltd
aaa
mov
ds
ss
mov
insb
xchg
adc
xchg
sbb
xchg
imul
cs
outsb
push
into
lcall
mov
or
repz
and
gs
aam
xor
or
fmull
add
push
cmp
nop
dec
mov
mov
or
xor
jle
inc
xlat
lods
sbb
frstor
cmp
mov
rol
in
movsb
das
rorb
arpl
push
int3
sub
push
xchg
jle
comiss
jbe
cmp
add
stc
hlt
sbb
imul
push
mov
or
adc
jbe
sbb
aas
xchg
pop
aas
in
lret
pusha
fs
and
int
lahf
cmp
mov
mov
add
xchg
sahf
mov
sbb
jb
sub
cmp
sti
cld
loope
out
lret
divb
dec
adc
ss
leave
mov
mov
or
jae
mov
inc
out
sub
cmp
out
inc
cmp
inc
fistpl
and
sub
sub
jns
dec
dec
cs
stos
ljmp
clc
hlt
cld
outsl
inc
or
scas
test
call
dec
out
or
pop
add
popa
call
xor
cwtl
push
test
mov
xchg
scas
pop
pop
mov
bnd
push
fwait
int
icebp
fisttps
cmp
loop
imul
negl
or
adc
fldl
mov
pop
movb
lds
mov
xor
std
jg
mov
push
rcll
lret
fimull
dec
icebp
sub
pop
adc
das
mov
xchg
hlt
es
loopne
lret
leave
cltd
in
lret
lea
inc
test
cmpb
xchg
jl
les
cmpl
jmp
fstl
sbb
push
in
sbb
inc
or
push
mov
mov
push
push
and
mov
call
adc
popf
loop
aaa
or
mov
mov
xchg
or
jecxz
neg
mov
add
xchg
lea
nop
clc
jmp
fiaddl
inc
out
aam
push
xchg
jnp
dec
push
mov
imul
sbb
pop
xor
sti
sbb
cmc
inc
imul
sbb
dec
pushf
add
and
cli
jne
mov
xor
and
pop
xor
mov
orl
scas
push
or
push
add
cmpsb
dec
ljmp
add
mov
movsb
mull
or
gs
hlt
aas
fnstenv
and
mov
mov
and
cmpb
cmpsb
push
shrb
in
sub
jmp
out
lods
pop
xor
adc
je
and
mov
xor
aaa
cmpsl
sahf
dec
inc
aad
addr16
mov
notb
stc
dec
mov
pop
jecxz
ja
dec
pop
arpl
push
stos
and
push
lea
ljmp
out
lahf
dec
nop
mov
adc
out
jmp
fisubl
out
outsb
pop
and
mov
icebp
dec
cmp
sub
xor
cmpsb
sub
lock
fwait
addr16
leave
ret
cwtl
fs
push
lods
jle
iret
lret
setns
je
jae
out
pop
int
cmp
add
push
mov
stos
loope
jmp
fsubl
and
inc
pop
das
fucomi
sub
inc
sbb
gs
js
push
mov
mov
sbb
aad
daa
outsb
imul
je
sbb
fwait
div
test
mov
add
adc
inc
test
pop
mov
mov
jb,pn
or
dec
mov
sbb
push
push
fidivs
or
jne
call
or
and
js
in
pusha
cmc
sbb
addr16
dec
popf
int3
push
les
dec
pusha
dec
aad
cs
jp
xchg
mov
cmp
dec
sub
pushf
jns
mov
mov
pop
xlat
ja
outsl
shrl
insb
pmovmskb
or
ret
pop
in
mov
lahf
sbb
push
sbb
cmp
and
inc
xchg
mov
ds
mov
in
int3
inc
mov
out
mov
lcall
push
sub
jno
mov
add
pop
cmp
roll
dec
aaa
xchg
mov
push
rclb
adc
inc
mov
jmp
ljmp
loope
jp
inc
idivb
sti
xor
shll
mov
inc
fldt
push
insl
pusha
shl
aaa
xchg
dec
sbbl
out
xchg
inc
sub
fcomps
mov
in
cltd
sbb
fnsave
cmpb
pop
mov
scas
inc
es
test
sub
cs
cmp
xchg
pop
mov
inc
mov
lcall
push
jbe
ljmp
xchg
imul
in
push
je
sub
sub
xor
lahf
push
int
lods
dec
jg
and
rorl
dec
movsb
rcll
movsl
pop
sbb
mov
jo
push
sub
dec
jae
add
ljmp
inc
xchg
adc
sub
adc
or
outsl
adc
and
pop
push
sqrtps
sub
add
xor
dec
aad
sbb
push
insl
mov
stos
fwait
sbb
xchg
hlt
and
jecxz
test
jecxz
fsubp
jecxz
loop
pop
sbb
out
fnsave
mov
arpl
lahf
enter
inc
xchg
mov
adc
cmp
dec
dec
cs
out
imul
jl
popa
mov
jae
punpckhbw
or
add
bound
aas
xor
out
in
dec
rcr
mov
fucom
adc
inc
inc
xchg
push
gs
sahf
testl
mov
scas
clc
int3
mov
sbb
push
test
push
popa
mov
xchg
inc
add
add
fcoml
sbb
fnstcw
addr16
rolb
push
loop
mov
mov
mov
rcrl
ja
fcomps
push
aam
pop
add
jo
sub
mov
addr16
fldl
fistl
fisubl
xor
loopne
push
popf
mov
int
xlat
add
lods
and
cs
fistpll
mov
icebp
lcall
aaa
call
sarl
scas
mov
sub
mov
rcrb
lea
leave
xorb
mov
add
int3
adc
or
jmp
aaa
cmp
inc
icebp
jb
hlt
cmpsl
es
sub
mov
test
dec
jecxz
nop
scas
aad
dec
mov
inc
imul
jmp
add
lret
push
jecxz
mov
dec
and
mov
sub
jnp
jecxz
lds
jae
inc
mov
cmp
jmp
inc
imul
fs
inc
je
jge
sbb
ficoms
pop
xor
das
xor
mov
pop
inc
out
push
mov
fcompl
arpl
cmp
mov
aaa
ljmp
sub
in
and
push
inc
rorl
iret
mov
repz
int
add
push
inc
out
das
in
fcmovnbe
dec
xchg
repnz
dec
sahf
lret
xlat
mov
ret
lds
mov
aas
xor
xor
arpl
imul
sar
xor
aaa
mov
pop
lret
sub
lea
xchg
lods
stos
jge
push
xchg
cs
mov
mov
ret
insb
mov
lret
sub
cmp
mov
shl
pop
cmp
sahf
mov
or
mov
imul
cmp
dec
mov
fs
lea
scas
fisttpll
sub
aam
mov
loope
lret
cs
movsb
jno
ss
sarb
cmc
xchg
cs
xlat
aad
push
mov
imul
and
mov
or
jg
and
and
repnz
push
pop
das
enter
xor
pop
jne
cli
std
mov
scas
shl
pop
out
and
out
and
sub
mov
dec
pop
cltd
out
lahf
cld
dec
cmp
add
adc
add
inc
daa
lcall
inc
sar
or
movsl
test
push
mov
pop
loope
bound
iret
mov
push
test
fildll
cmp
mov
pop
cmp
cmp
scas
arpl
sbb
and
jb
sub
xor
sar
sub
xchg
push
mov
int3
cltd
aas
push
repz
stc
inc
or
pusha
push
cmpsb
ljmp
jae
inc
mov
push
mov
rcrb
sub
inc
or
and
inc
inc
add
cltd
sub
jae
pop
out
scas
fwait
mov
pop
les
mov
pop
inc
xchg
std
or
stc
iret
mov
pop
cmp
or
xor
adc
fsubrs
loop
outsb
cmp
pushf
lcall
mov
dec
sarl
jne
xchg
repz
cmp
xor
loopne
and
adc
imul
adc
dec
jns
mov
insl
outsl
sar
mov
popf
hlt
shl
int3
sarl
add
lods
mov
nop
pop
decl
jo
push
daa
add
imul
subl
lret
pop
pusha
xchg
es
cmpl
cmp
nop
mov
adc
cmp
bnd
mov
mov
jae
stos
and
jmp
les
xchg
sub
xchg
mov
add
xor
jg
ret
sub
xchg
clc
mov
fistpl
pop
ja
sub
sub
mov
xlat
mov
mulps
cli
dec
repnz
and
ret
pop
jl
out
scas
xorb
imul
dec
or
or
xchg
sub
lock
sbb
mov
cmp
ss
inc
xchg
enter
xchg
jecxz
cmp
aam
and
xor
add
outsb
adc
sub
push
pop
push
jge
das
repnz
pop
cmp
mov
cs
xchg
cli
pop
jg
cmp
adc
push
push
xchg
or
movsb
ljmp
ljmp
nop
scas
adc
jge
push
cmp
push
cmp
shlb
imul
data16
adc
repz
cmp
test
clc
shrb
test
frstor
lahf
dec
js
stos
jno
adc
mov
repnz
pushl
add
add
addr16
mov
movsl
mov
sub
jmp
or
jns
mov
push
mov
sarl
and
inc
mov
std
repz
xchg
cmc
dec
dec
inc
ret
mov
jne
inc
and
fisubrl
xchg
or
adc
xor
mov
dec
sbb
xor
sbb
or
fcmovne
jnp
push
and
jmp
mov
jns
jmp
cmp
test
mov
inc
orb
gs
rorb
dec
mov
insl
lea
mov
mov
push
cmp
fldcw
inc
test
mov
xchg
inc
fs
movsb
sbb
hlt
rcl
xor
inc
aam
push
and
mov
testb
mov
inc
shll
popa
fimull
in
int
sub
out
test
mov
sbb
mov
out
sub
aas
mov
test
or
dec
push
mov
call
jne
or
or
inc
jecxz
push
lods
das
leave
cmp
lret
sub
pop
inc
pushf
outsb
aad
xor
nop
xchg
hlt
mov
cmp
sub
std
testl
mov
iret
cltd
mov
roll
dec
jne
xor
in
les
iret
and
jmp
in
jmp
and
outsl
or
jge
sub
in
mov
mov
cmpsb
push
xor
and
add
mov
rcll
or
out
inc
push
sbb
pop
test
add
jb
mov
pop
out
fsubl
repnz
shrl
cld
movsb
jno
data16
test
ss
push
adc
xor
xchg
daa
rcr
pusha
add
mov
push
sub
rorl
inc
test
sbb
jg
cmp
movl
fisubs
fsubl
or
push
in
sub
ss
outsl
cmc
in
pop
xchg
test
pushf
mov
popa
fdivrl
push
repnz
dec
xchg
test
gs
xchg
cmp
mov
and
dec
mov
cmp
loope
scas
lods
jl
dec
or
mov
test
out
loopne
pop
insb
dec
pop
fimull
mov
mov
mov
lods
jecxz
aad
int3
adc
int
pop
xor
inc
jmp
xchg
sub
rcll
scas
jne
inc
leave
shrb
push
add
inc
mov
and
mov
pop
js
sub
push
mov
sbb
lcall
xchg
dec
outsb
iret
cwtl
mov
out
adc
fcomps
shlb
adc
xchg
fadd
lahf
or
lea
sub
es
popa
xor
hlt
mov
sbb
dec
push
loop,pt
stos
sub
push
or
add
inc
add
add
int3
sahf
call
std
fwait
bound
pop
mov
fbstp
xorb
push
aaa
aaa
push
or
adc
cmp
jecxz
mov
push
and
rcrl
jg
rcll
mov
mov
in
sub
add
mov
sub
dec
mov
popf
arpl
int3
xchg
mov
xchg
adc
sbb
adc
out
sti
ds
aaa
imull
in
int3
push
sti
icebp
mov
xchg
dec
scas
flds
cmc
in
mov
dec
popf
jle
mov
push
push
int3
movsb
lods
inc
sub
lret
nop
sbb
repnz
loopne
gs
mov
fsub
inc
ja
add
jg
push
or
mov
shrb
push
pop
scas
lcall
mov
mov
sub
inc
jo
lcall
cmp
and
addl
punpcklbw
dec
fidivs
imul
insl
jge
rclb
rorb
into
test
mov
aas
mov
int3
adc
mov
pop
mov
loope
popf
ja
or
pop
add
xor
xchg
subl
js
out
sub
sbb
stos
sbb
rcrb
adc
inc
loope
lods
lahf
pop
push
sub
addr16
ds
js
mov
loop
jmp
cltd
jns
xchg
and
aaa
xchg
icebp
stos
leave
mov
hlt
mov
sbb
mov
xchg
lahf
insb
stos
mov
xchg
mul
fldl2e
outsl
add
shll
adc
scas
or
out
pusha
inc
cwtl
sti
push
rcll
add
aas
les
jg
stos
xchg
jmp
std
movsb
rcrb
jo
icebp
pop
mov
cmp
shl
mov
fimuls
clc
xlat
push
push
add
cwtl
fdivl
bound
insl
lret
mov
pop
je
adc
imul
push
inc
ret
loopne
sahf
mov
mov
pop
push
es
cmp
cmp
inc
and
icebp
rcrb
push
test
movsl
fwait
pop
dec
fwait
xor
iret
in
test
inc
cmp
stc
push
jnp
inc
dec
push
ljmp
loope
or
xchg
sbb
mov
pop
scas
jp
xor
sbb
push
icebp
xchg
vpsubsb
inc
mov
sbb
add
inc
or
add
pop
adc
ds
jno
cmp
pop
mov
sbb
sbb
cmp
in
andl
stc
ucomiss
mov
out
out
dec
sahf
mov
lahf
mov
ficomps
pop
shl
pusha
jae
icebp
pop
mov
push
dec
jns
dec
or
sbb
fisubrs
xchg
call
push
jecxz
ljmp
mov
jns
sbb
out
pop
stos
test
outsb
add
mov
sahf
fs
je
addr16
mov
pop
mov
cmp
mov
repz
sbb
jno
sub
fists
dec
je
xchg
in
out
pop
loop
add
adc
movsb
pop
int
or
xchg
or
inc
stc
insb
mov
jno
jg
arpl
jne
sub
and
int3
add
jno
arpl
sub
imul
pop
xlat
scas
push
jecxz
dec
andb
cli
std
fidivl
pop
jne
fnsetpm(287
cmp
dec
nop
xor
xchg
das
lea
fiadds
ror
les
and
lcall
sub
in
cwtl
jns
dec
ret
jb
push
or
stos
cmp
dec
cmp
ja
add
cmp
cmp
outsb
sbb
clc
fisttps
jl
jbe
cs
decb
adc
lods
add
leave
jmp
iret
sbb
movsb
ja
dec
je
sbb
jg
test
mov
jp
cmp
or
data16
in
pop
arpl
push
push
in
pop
ret
jo
mov
and
les
not
dec
mov
stos
xchg
jp
mov
bound
inc
xchg
sub
psubusb
test
fdivrs
push
pop
arpl
add
dec
mov
ss
sti
fwait
push
add
cmp
mov
imul
jge
ret
loope
cs
orb
movsb
lret
ret
pop
xor
push
mov
ret
outsb
sub
ficompl
mov
xchg
in
pop
xor
divb
sbb
mov
cli
out
xor
mov
xchg
ficomps
pop
insb
loopne
add
sbb
xchg
enter
fs
inc
leave
push
mov
test
cmp
or
xchg
shrb
scas
pop
push
pusha
mov
movl
fiaddl
pop
filds
sbb
mov
xor
push
or
decl
dec
and
dec
or
lods
jle
sbb
jecxz
out
jecxz
ret
cmp
out
or
test
stc
loopne
push
negb
mov
daa
test
sbb
dec
mov
stos
rcll
sar
je
pop
pushf
mov
das
sub
sub
add
jb
out
mov
loope
xchg
mov
or
pop
ljmp
cmp
test
lahf
repz
sahf
fcomps
imul
inc
sbbb
jle
xchg
xchg
movd
mov
vcmpsd
pop
dec
jmp
add
mov
fwait
jle
out
pusha
mov
and
dec
enter
adc
jg
jno
fucomip
jb
ss
jmp
leave
stc
ja
sti
sub
icebp
cld
dec
jle
pop
dec
push
mov
lods
das
lahf
ljmp
push
mov
fs
cmp
or
inc
data16
movsb
test
push
jnp
push
outsl
loopne
out
mov
xchg
cmpsl
sti
sub
and
inc
push
pop
push
sbb
cmp
dec
pop
pop
mov
out
lahf
subb
mov
xchg
push
out
inc
std
ret
add
mov
das
sbb
cmp
push
and
add
addr16
mov
scas
mov
enter
outsl
sbb
movsb
and
xor
les
stc
inc
rorb
adc
sub
cmp
sbb
popf
test
pop
rcll
push
adc
test
into
inc
frstor
cwtl
sbb
push
push
or
xchg
lds
inc
icebp
sahf
subl
jae
xor
mov
inc
flds
popf
mov
mov
addl
jo
pop
xor
adc
in
and
inc
out
and
push
mov
mov
pushf
xchg
xor
leave
ficompl
roll
or
mov
push
arpl
sub
gs
sar
cs
or
dec
jne
mov
es
mov
repz
bswap
push
jg
leave
and
sti
push
repnz
es
popa
push
add
jno
lods
ljmp
cmp
or
adc
loopne
aad
pop
mov
jecxz
and
inc
hlt
je
pop
mov
push
fcompl
adc
pop
add
dec
addl
mov
jl
pop
incb
pop
das
jge
push
out
insl
les
cmp
repnz
xchg
sti
sahf
loopne
xchg
out
out
lods
push
aas
es
add
leave
sbb
outsl
out
cltd
or
js
dec
imull
lcall
in
mov
inc
mov
clc
sub
mov
add
sbb
rolb
imul
icebp
inc
and
out
jns
pop
movl
aad
loopne
push
sub
mov
ds
cmc
sbb
xlat
xorb
leave
mov
lret
loope
sub
cld
stos
imul
movsl
push
pop
xchg
xchg
or
pusha
add
sbb
xor
xchg
adc
or
xor
and
fidivrs
test
test
jae
add
or
mov
push
stos
into
mov
push
sbb
in
iret
into
mov
dec
iret
mov
pusha
xor
ja
adc
test
or
cmpsl
mov
mov
xor
fisubl
sbb
inc
fsubl
stos
shl
mov
sub
fsts
or
out
and
and
lea
cwtl
cmp
xchg
sub
and
push
and
out
mov
jbe
add
or
loopne
or
aad
imul
and
and
adc
test
in
out
push
inc
inc
enter
movsb
mov
sbb
out
pop
call
dec
nop
gs
or
fmul
push
sub
icebp
cmp
jl
icebp
push
jle
and
ljmp
xlat
aam
mov
xchg
loopne
jp
test
mov
int
rcl
xchg
mov
jp
aad
push
or
icebp
in
pop
test
loope
mov
inc
negb
bound
sbb
xchg
adc
ret
add
test
cwtl
cld
xor
cmp
xchg
into
xchg
pop
adc
js
mov
sti
cld
rcrb
jns
adc
cmpsl
mov
fwait
fnstcw
enter
xchg
pop
pop
movsb
les
sahf
ja
sbb
cld
mov
hlt
pop
insb
xchg
loopne
jp
int
fimull
or
adcl
jmp
filds
sbb
adc
push
aas
jnp
cmp
xor
dec
scas
and
cmp
test
aad
or
mov
push
cmp
scas
ljmp
inc
mov
inc
clc
mov
loop
mov
lods
sub
add
jecxz
test
mov
pop
push
repz
or
jne
inc
jg
and
jg
pop
popf
sbb
mov
addr16
mov
das
inc
out
das
into
pop
adc
adc
and
ljmp
and
jge
ds
pop
pop
adc
pop
sub
pop
jnp
sbb
out
inc
or
popf
sti
mov
into
int3
mov
jb
pop
aaa
mov
es
jno
dec
into
push
cs
bound
test
push
xor
ljmp
adc
push
cmp
inc
cmp
fnstcw
xchg
push
adc
xchg
loop
in
nop
fs
stc
add
jmp
mov
sbb
inc
mov
cmc
lahf
sub
and
pop
push
push
jae
jno
inc
dec
adc
mov
cmp
push
inc
subl
test
inc
xchg
lock
lcall
xor
jns
mov
push
divb
mov
fstpt
sti
movsb
orb
scas
mov
mov
lret
shl
sbb
pop
and
lret
pop
mov
sub
cs
out
cmp
stos
stos
fisubrs
popa
sub
sub
and
xchg
into
cld
push
xchg
cmp
bound
push
imull
sub
nop
dec
outsb
in
push
fnstenv
iret
outsb
inc
jecxz
rcl
mov
jle
and
pop
adc
mov
mov
leave
mov
pop
xchg
jl
lret
notl
fs
mov
push
lahf
and
mov
cmp
mov
adcb
cwtl
lods
insl
mov
cmp
call
mov
jl
sbb
pop
imul
in
push
jl
iret
pop
xchg
mov
aad
pop
mov
xchg
lock
xor
or
mov
frstor
cwtl
xchg
or
xchg
push
stos
fists
ret
insb
dec
out
fs
int3
lds
call
test
jmp
mov
xabort
sarb
cli
iret
fwait
arpl
inc
jae
das
sub
pop
out
fcompl
adc
inc
fcoml
pop
cmpsb
mov
or
jb
fiadds
or
sub
or
fimuls
or
test
ja
popf
fisubl
mov
push
cmp
test
or
inc
daa
scas
or
faddl
lods
int
ljmp
push
stc
lahf
wrmsr
and
xchg
adc
fcompl
jecxz
iret
pop
mov
in
mov
inc
pop
sbb
jmp
cld
and
shll
cld
cmp
mov
push
insb
mov
xchg
fsubs
push
outsb
sub
scas
inc
add
addb
pop
sarl
mov
inc
aaa
adc
ja
mov
sbb
or
mov
stc
aas
test
jp
cmp
incl
xchg
jae
mov
movsl
pop
shlb
scas
jo
sbb
add
xchg
push
ja
jbe
push
mov
outsl
ret
ret
pusha
dec
clc
jns
rcll
ret
sbb
cmp
decl
imul
std
bound
and
mov
xor
daa
andb
cmc
out
mov
and
enter
pop
clc
insb
jle
xor
test
aas
mov
and
push
xchg
stc
inc
sub
movsl
cltd
addr16
testl
mov
inc
insl
bound
adc
mov
fcoml
pop
stc
sub
jp
mov
mov
adc
popa
aas
adc
mov
out
leave
mov
cmp
ss
push
fs
hlt
inc
ret
mov
je
cmpsl
insb
mov
out
shl
push
and
les
jnp
mov
adc
mov
xchg
adc
mov
xlat
mov
popf
pop
sbb
sbb
adcb
out
test
mov
aaa
jge
pop
into
aaa
pop
push
add
dec
dec
dec
jl
ljmp
ficoml
cmp
push
loop
les
jb
shrl
in
mov
out
les
stc
out
dec
in
jmp
cld
push
das
jno
add
test
loopne
imul
fisttpll
lret
outsl
jl
loop
test
jb
fdivl
xchg
scas
mov
cltd
push
fnstenv
roll
add
pop
xor
dec
push
rorl
mov
add
mov
sub
rclb
and
sbb
loop
outsl
sbb
testb
out
jo
xor
push
dec
add
fdivrl
pop
shlb
xchg
xor
mov
add
sbb
mov
cld
rdmsr
out
shlb
mov
mov
mov
mov
lods
sbb
aaa
cwtl
jae
fwait
lret
and
xor
sub
rol
sbb
ret
or
sub
subb
sbb
jo
add
mov
push
gs
stc
popa
insl
repnz
ret
sarl
dec
out
jecxz
loop
mov
pusha
xchg
push
cs
xor
mov
inc
push
lods
lret
adc
hlt
nop
inc
int3
je
movsl
add
inc
inc
xchg
xchg
mov
outsb
or
cmp
pop
adc
shlb
arpl
imul
and
and
sahf
out
xchg
int
faddp
jmp
aam
cmp
shlw
aam
mov
push
push
mov
mov
ljmp
ret
stc
icebp
adc
cltd
add
in
dec
pop
pop
ret
jnp
cmpsl
xor
mov
cmp
nop
cmp
in
xchg
adc
lahf
lahf
inc
into
stc
jnp
aaa
mov
mov
or
sbb
inc
aam
fmull
test
mov
out
pop
sbb
sbb
jle
int
mov
and
mov
cltd
leave
inc
fs
fwait
pop
push
test
dec
inc
xchg
mov
aad
ljmp
or
xchg
lcall
or
rol
popf
dec
push
test
xor
stc
mov
jecxz
adc
xchg
leave
cmp
aad
addr16
or
dec
add
xor
cmp
les
cmp
or
xor
lods
jae
and
push
fldcw
jb
mov
adc
push
loopne
cmp
js
lock
inc
fldenv
cwtl
inc
into
cmp
xchg
stos
inc
hlt
push
addl
push
jne
jmp
in
ja
pop
popw
fwait
xor
mov
jbe
sarb
out
cmp
aam
fnstsw
insl
pop
push
loopne
fdivs
aaa
mov
icebp
dec
lods
mov
pop
arpl
dec
xor
and
call
or
je
xchg
lretw
xor
lret
adc
bnd
imul
jl
push
cltd
test
or
shl
add
and
pop
in
inc
inc
fstps
stc
mov
pop
insl
sbb
bound
pop
jl
nop
test
fbld
fstpt
push
int3
aam
cmpl
mov
xchg
dec
cmpsl
data16
fwait
sub
out
inc
push
inc
stos
lods
cmc
stos
push
or
clc
add
mov
add
fnstsw
and
pop
sahf
pop
ss
sbb
scas
sbb
les
test
xor
call
xlat
out
mov
test
fisubrs
lret
out
xlat
cmp
int3
or
push
stos
and
ljmp
mov
xchg
shl
xor
lods
outsb
mov
sub
xchg
test
mov
repnz
sbb
mov
jecxz
sbb
sarb
push
sub
ret
in
loop
sbb
sub
icebp
lret
into
sub
fwait
mov
loopne
fmull
enter
add
sub
fdivrs
stc
pop
cmpsb
test
cmp
rclb
mov
adc
dec
sbb
jae
or
lcall
popa
or
add
dec
in
imull
outsl
xchg
sbb
push
lret
jno
cmp
das
mov
cmpsl
fs
inc
push
jae
cmp
testb
loope
push
cmp
fsubp
xor
push
push
bound
out
push
push
sbb
in
mov
stc
aaa
lret
add
clc
hlt
push
push
mov
jb
jg
sbb
cwtl
adc
inc
repz
cmp
lea
push
inc
in
je
push
cmpsb
shrb
cmp
jp
aad
add
dec
filds
mov
out
dec
leave
test
lcall
mov
outsl
mov
dec
sbb
add
xchg
imul
test
inc
dec
sub
aam
call
xor
in
add
ljmp
push
pop
push
stos
xchg
sarl
inc
fildll
lcall
mov
dec
jg
xlat
stos
jl
jge
rorb
mov
icebp
jno
ret
jo
adc
leave
mov
dec
cmp
lret
push
daa
sbb
mov
mov
lock
jne
hlt
gs
jnp
ds
ret
je
lcall
mov
jne
das
push
push
jle
jnp
pushf
mov
int3
adc
movsb
icebp
int
test
mov
out
arpl
and
add
pop
jne
sub
out
pop
pop
push
push
stos
pop
adc
test
lahf
dec
popf
enter
out
ret
xchg
mov
aas
mov
lock
cmp
dec
fucomip
push
xor
sub
inc
xlat
mov
in
cmp
jg
adc
lds
sbb
mov
pop
test
add
lea
mov
sti
inc
sub
out
outsl
cmp
iret
popa
mov
js
and
pop
push
and
adc
mov
hlt
pop
xchg
out
movsl
dec
in
hlt
das
call
push
enter
movsb
push
xor
ds
js
dec
jnp
sub
push
and
ss
mov
and
mov
mov
or
and
sub
lcall
dec
and
clc
daa
xlat
dec
jne
aas
sub
inc
sti
sbb
fisubrl
push
outsb
aas
outsb
repz
cmpsb
sub
sahf
xchg
and
cmc
jno
push
inc
and
xchg
push
out
popa
cmp
xchg
jno
adc
pop
xlat
xchg
fistpll
test
xor
loopne
push
je
dec
cmp
scas
and
in
xchg
ret
sub
mov
ret
scas
and
mov
outsl
rcl
jmp
xlat
push
ljmp
sbb
mov
les
adc
addb
into
mov
leave
or
push
xor
sub
cmp
push
lock
aad
or
stc
inc
sub
sbb
ret
ror
icebp
cmp
mov
xor
outsl
cmpsb
test
pop
idiv
dec
pop
test
adc
mov
fcompl
sbb
adc
adc
push
jbe
mov
loopne
add
js
ds
sbb
xchg
push
js
int
sbb
pop
inc
or
jg
test
adc
flds
fwait
push
mov
adcl
add
jl
fiadds
jo
fptan
loopne
push
js
insl
or
mov
jmp
ror
and
mov
scas
sub
push
repz
mov
in
add
xor
jbe
inc
adc
mov
pop
cmp
in
cmp
jmp
cmp
push
mov
xor
xor
mov
jmp
fsqrt
mov
mov
pmaddwd
add
cmp
fcoml
arpl
sbb
hlt
out
fistl
pop
push
add
push
xchg
and
mov
pusha
jo
icebp
dec
and
movsb
ficompl
mov
stos
mov
and
xchg
mov
lock
jnp
push
fisttpl
jnp
xor
in
xchg
lods
in
mov
xor
xor
out
pusha
icebp
aad
lcall
popa
rdtsc
adc
mov
popf
fcompl
and
lea
mov
xchg
stc
insl
push
mov
shrl
cmc
cli
loop
mov
push
test
sbb
pop
out
fwait
sub
mov
push
jmp
imul
movsb
filds
lahf
cltd
sbb
add
add
jb
jno
sti
push
mov
cwtl
lods
rorb
aam
jecxz
cmp
sbb
xor
mov
hlt
fisttpl
scas
cltd
or
xor
jns
jb
xchg
sbb
xchg
cmp
inc
test
inc
lcall
ret
cmpl
clc
insb
xchg
shrb
into
mov
adc
ss
add
lods
or
into
and
in
mov
stos
rorl
cld
add
xchg
adc
xchg
mov
xor
cld
lock
sub
adc
aaa
dec
movsb
cmovg
sbb
fadd
push
adc
sahf
das
outsb
xor
add
outsl
aaa
push
std
cmp
call
nop
aam
push
jae
xchg
or
xor
pop
lock
xchg
loope
rclb
push
clc
push
dec
or
pushf
dec
pop
in
nop
xchg
cs
push
sti
fdivrl
ss
add
push
fdivrs
out
mov
mov
xor
mov
in
jge
or
jmp
arpl
or
test
popa
pop
popa
fadd
dec
mov
ss
clc
loopne
scas
fbstp
insb
insb
in
aad
mov
or
adc
xchg
pop
loope
jle
int
andl
or
arpl
jae
jb
lods
mov
add
dec
jecxz
cmp
in
bound
sbb
cli
subb
fwait
pusha
movsb
xchg
dec
mov
cltd
mov
in
lock
pusha
cmpb
out
out
les
mov
shl
repnz
imul
add
xchg
sbb
pushf
xchg
add
sub
push
pusha
mov
into
fidivl
jne
daa
push
cmp
into
jnp
inc
punpckhwd
pop
std
adc
int3
sbb
push
rcll
hlt
out
nop
xor
push
push
fists
js
cmp
cmp
or
shrl
mov
je
cmp
rolb
pop
aaa
add
dec
popf
movsl
out
jg
mov
scas
cmp
sub
xchg
xchg
add
bound
mov
push
sub
jge
std
adc
push
push
fmuls
es
jmp
outsl
cmc
sbb
pushf
xor
dec
mov
push
mov
sarl
iret
sub
call
xor
lods
sarb
inc
out
dec
and
repnz
mov
mov
je
daa
and
out
in
inc
rcrl
pop
mov
sbb
int
inc
mov
add
or
sbb
cli
and
or
push
sbb
jnp
xlat
sar
mov
xchg
rol
jnp
xlat
xchg
push
jl
xchg
daa
pop
pop
dec
mov
and
popl
in
movb
dec
popl
test
adc
or
rcrb
pop
andb
sahf
pop
mov
outsl
push
add
loopne
and
mov
xchg
ja
push
xchg
out
aad
inc
in
pusha
jne
std
push
mov
in
push
mov
xchg
daa
leave
cmp
lcall
jno
nop
push
adc
enter
pusha
in
cmp
cmp
rolb
xchg
leave
dec
mov
jo
lock
mov
mov
imul
sub
pop
je
push
cmc
scas
sbb
gs
mov
jb
js
test
xchg
addb
and
xchg
mov
push
inc
sub
es
out
mov
dec
xor
stc
ret
fisubs
pop
jnp
pop
or
lea
fxch
out
sub
jb
cmp
xor
arpl
popf
js
jg
sbb
lea
nop
xor
mov
pop
test
ljmp
sahf
and
cmp
repz
jmp
push
fnstsw
push
add
je
lock
mov
jo
push
mov
mov
push
jae
and
and
out
sbb
clc
mov
roll
fbstp
adc
and
pop
dec
mov
repz
sbb
out
mov
pusha
pushf
aaa
add
rcl
rolb
add
int
insb
sbb
iret
jl
ja
test
pop
adc
adc
sahf
out
pop
hlt
cmp
ficompl
ljmp
test
push
jp
adc
test
int3
mov
and
shll
enter
seto
cmp
dec
out
and
inc
cltd
fstpl
scas
or
enter
or
jle
xor
pushf
pop
push
cmp
xor
inc
lds
inc
rclb
add
arpl
inc
stc
into
call
sub
and
sub
mov
add
in
inc
push
sahf
out
inc
inc
mov
out
pop
jp
je
sbb
js
pop
fisubs
xchg
test
xchg
mov
into
xchg
lods
loop
pop
cli
lret
dec
push
sub
or
mov
add
sub
shrl
sarb
jne
add
shr
addb
or
xor
push
sub
cwtl
add
pop
sahf
mov
repz
push
jle
mov
push
jecxz
lahf
rcrl
dec
adc
cmpb
pop
mov
jge
cmpsl
in
outsl
mov
loope
mov
jg
fists
aaa
jnp
ret
repnz
dec
imul
pop
jmp
push
jge
xchg
imul
sbb
push
loop
int
and
sbb
movsb
insb
mov
cltd
push
mov
lock
lods
sub
orb
xchg
mov
inc
xchg
and
lock
push
fwait
or
fnstsw
inc
lcall
cmc
subl
pop
cmp
sbb
scas
add
into
xchg
out
sub
push
jo
loopne
decl
pusha
mov
aam
je
jbe
sbb
pop
pop
andl
adc
mov
and
mov
cmp
push
nop
gs
adc
ror
imul
push
xchg
add
xchg
or
aad
aaa
js
sbb
xchg
lods
pop
or
adc
inc
sbb
or
not
mov
sbb
add
mov
in
push
pop
fidivrs
mov
jecxz
jge
out
fdivs
or
rcrb
pop
sbb
lahf
scas
ret
mov
or
dec
nop
mov
lds
mov
xchg
cli
in
push
jne
arpl
sbb
cmp
cmp
mov
jl
and
into
repz
push
pop
in
xor
jmp
ja
dec
push
add
in
lea
out
push
mov
fidivl
dec
fsubrl
adc
cmpsl
js
xchg
cmp
mov
mov
add
loope
or
lds
mov
bound
nop
sbb
daa
hlt
jp
add
leave
lret
and
lret
push
fldl
cmp
or
fiaddl
pop
out
push
stc
stos
shll
dec
fwait
insb
cwtl
add
jp
jns
xor
inc
out
fistpl
test
in
xchg
int3
jb
sar
xor
push
cmp
in
sar
call
mov
xchg
or
pop
and
popf
popa
add
popf
std
cli
mov
add
adc
mov
sub
mov
leave
les
push
sub
inc
ljmp
stos
xchg
mov
rcr
icebp
jle
cmp
lds
ret
stos
aam
pop
movsl
je
xchg
neg
adc
mov
fs
call
nop
adc
test
push
fsts
movl
lea
cltd
leave
mov
popf
test
fisttpll
adc
mov
pop
aam
cmp
mov
inc
push
pop
repz
push
add
or
flds
popa
mov
inc
pop
ret
cmp
js
mov
mov
add
test
push
and
std
xchg
int
imul
orb
lds
cli
in
repz
pop
push
aaa
rolb
ds
adc
push
sahf
scas
outsl
mov
insb
push
sbb
clc
mov
aad
mov
dec
hlt
pop
rclb
mov
test
mov
fisubrl
inc
pop
jnp
out
jae,pt
xchg
mov
jl
add
leave
int3
xor
roll
shll
and
pop
imul
jbe
jecxz
jno
jl
insb
add
pop
add
jbe
dec
jns
add
outsb
sar
inc
push
jp
out
in
jl
jle
dec
xor
fisttps
add
cmp
out
cmpsb
int3
push
loop
mov
iret
popa
out
mov
addr16
adc
add
cmp
ret
lock
xchg
or
cmc
movhps
cmpsb
cs
imul
popf
push
sbb
xor
dec
enter
jae
negb
icebp
scas
js
arpl
pop
mov
adc
fistl
loopne
enter
and
nop
cmp
and
mov
pop
dec
add
mov
adc
jne
jge
cwtl
xchg
mov
and
xor
sub
mov
pop
inc
lret
arpl
and
cwtl
cmc
cmp
jae
mov
loop
shr
inc
fdivp
ljmp
ret
xor
lods
sub
fildll
xor
cwtl
subl
stc
jle
pop
cmpsl
pop
cmp
inc
pop
mov
out
aad
sub
testb
jno
stos
mov
mov
and
pop
lahf
stos
push
and
xchg
cmp
xor
sahf
xlat
jo
adc
sbb
cmc
dec
imul
fucomip
test
daa
cmp
push
push
xlat
mov
mov
xchg
sbb
cld
ss
rep
negb
movsb
lcall
or
add
stos
push
test
pusha
jl
roll
jl
dec
or
inc
gs
leave
insl
movsl
ret
inc
jecxz
jns
inc
inc
xor
ljmp
pop
inc
mov
jle
push
cmp
pop
push
adc
pop
jnp
add
jae
js
sbb
jecxz
cmp
ret
mov
xchg
jnp
or
stos
insl
dec
xor
push
push
fdivl
inc
and
enter
mov
jge
inc
rcrl
mov
cmp
sub
jne
int
arpl
xchg
js
hlt
aas
mov
fcomi
cmc
int
mov
fidivl
cld
jns
nop
jne
lods
int
out
jge
inc
adc
mov
xor
scas
fsubl
push
mov
inc
inc
sub
testl
sub
in
es
mov
cmpsl
stos
mov
jecxz
mov
and
stos
inc
xchg
popa
xchg
nop
push
mov
sbb
movsl
fdivrl
cmc
jb
test
pop
repnz
cmp
stos
mov
mov
out
sbb
stos
mov
enter
jnp
adcb
mov
addr16
aaa
xor
xchg
sub
dec
cmp
pop
fs
fwait
jl
fidivs
enter
push
push
push
sbbl
push
mov
mov
repnz
sub
pop
xchg
pop
mov
and
loop
ret
xor
push
pop
test
push
arpl
loop
inc
xor
out
sub
mov
hlt
push
xlat
and
push
icebp
ljmp
lea
push
xor
push
leave
sub
iret
clc
pop
pop
lcall
sub
pop
mov
mov
ds
xchg
pop
mov
movsl
enter
jmp
idivl
fwait
inc
jp
lock
cmp
pop
popa
push
js
sub
add
push
mov
jp
imul
cwtl
inc
fdivrl
mov
fs
imul
stos
movsb
out
sbb
fs
pop
sbb
popa
mov
push
push
pop
cmp
pop
dec
sbb
or
sub
push
lret
cmp
js
push
mov
je
sbb
xchg
sub
cltd
push
iret
cli
mov
movsb
fwait
dec
mov
pop
cmpsl
or
dec
xor
cmpsb
daa
or
les
leave
dec
jae
mov
adc
mov
xchg
cmp
lret
ror
movups
or
mov
int
out
pop
pop
dec
jnp
ret
test
fbstp
mov
imul
adc
int
jl
jg
sarb
out
sub
add
push
inc
repz
fiadds
scas
leave
push
data16
test
xlat
or
movsl
lds
popf
loopne
or
lods
xchg
test
mull
push
or
jae
or
xchg
sub
sub
repnz
sub
neg
stos
shlb
and
push
aad
imul
pop
push
add
in
push
cmpsl
mov
bound
cltd
mov
mov
cmp
mov
push
pushf
add
or
mov
ret
mov
int3
mov
gs
xor
ss
and
inc
inc
stos
sbb
sub
fcoms
subb
ljmp
test
enter
pusha
jg
insb
fsubp
fidivl
nop
movsl
or
xor
fstps
pop
repnz
sti
add
adc
sub
sbbb
decb
push
jle
in
jl
sbb
or
jae
ljmp
hlt
cld
test
data16
push
outsl
fwait
add
cmc
push
pop
lcall
jp
scas
adc
lgs
mov
push
or
sahf
inc
cmp
dec
mov
lods
outsb
adc
and
dec
jo
jle
subl
ljmp
ja
add
jmp
pusha
cmp
ds
jbe
adc
lret
pop
push
dec
stos
jbe
inc
jle
sti
cld
addb
sbb
xchg
push
jnp
dec
outsb
outsl
sbb
push
sub
subb
jno
arpl
in
add
sub
push
xor
sahf
jae
lods
icebp
loope
push
sbbl
add
xor
shll
cmp
cmp
push
notb
test
shlb
loop
ds
das
ror
mov
mov
cmpsb
pop
add
or
inc
sub
loopne
inc
pusha
adc
aam
pop
inc
mov
mov
notb
cmp
add
push
out
out
and
xchg
add
inc
add
daa
cwtl
bound
addl
lds
arpl
push
sub
xchg
inc
push
data16
rclb
and
arpl
nop
or
aam
mov
loopne
jle
sarb
fnstenv
inc
inc
testl
int
sub
das
daa
inc
stc
xchg
in
cmp
outsb
add
sbb
addb
pop
mov
fisttps
sar
inc
pop
dec
and
std
sub
cmp
insl
cmpsb
xchg
or
sub
xchg
and
xchg
das
pushf
mov
call
out
repz
in
push
pop
and
cmp
fldenv
insl
cli
jg
dec
dec
repnz
insb
cmpsl
mov
and
rolb
jg
shlb
ret
cmp
fdivp
inc
jno
and
add
xchg
daa
out
pop
push
mov
dec
add
movsl
mov
add
xor
push
jno
insl
lret
aam
ljmp
jl
xor
push
pop
xchg
mul
or
push
aas
loope
mov
and
call
sarb
push
subb
mov
cwtl
adc
pop
loope
or
mov
pushf
shr
test
mov
mov
inc
cs
pop
jle
cmpsl
xor
pop
loope
cltd
push
xchg
ljmp
push
jne
and
dec
dec
loop
and
pop
leave
mov
ror
add
cltd
inc
js
cs
mov
sbb
outsl
xchg
dec
dec
add
cmp
pop
pop
sub
mov
push
or
or
push
add
sbb
movsb
pop
push
sahf
enter
inc
outsb
test
dec
cmpsl
xchg
xlat
bound
xor
dec
icebp
inc
and
jp
int3
fists
sbb
sti
inc
adc
fwait
dec
jmp
nop
cwtl
int3
test
sub
aad
data16
das
xchg
cmp
mov
pop
jmp
ja
mov
mov
mov
mov
lods
js
fidivs
inc
out
hlt
movsl
cmc
inc
icebp
cs
ljmp
pop
mov
stos
and
in
or
dec
xor
sbb
cltd
das
mov
pop
push
js
jmp
mov
cmp
cmpsb
or
test
test
scas
into
pop
cmp
push
in
pop
scas
jl
ficoms
add
adc
push
xchg
inc
es
xchg
jecxz
aam
faddl
add
addr16
das
adc
shll
pop
mov
repz
test
pop
aas
xchg
nop
mov
jp
xor
ds
dec
enter
mov
repz
cltd
lahf
adc
inc
hlt
or
or
jb
sti
xchg
lods
fsub
jecxz
sub
cmp
call
add
add
mov
outsb
out
pop
mov
and
dec
pop
mov
mov
push
inc
inc
push
add
insb
insl
and
rolb
or
mov
push
xchg
out
sub
loop
sbb
js
mov
adc
jmp
adc
inc
inc
fistpll
lahf
adc
sub
negb
loope
fisttps
pop
cmpsl
mov
sbb
ret
negb
dec
aaa
and
add
out
cmpsl
mov
add
dec
or
out
mov
idivl
hlt
dec
push
stos
ret
mov
leave
lock
xchg
lock
adc
push
rcll
movsb
fs
adc
cmp
adc
add
stc
stos
insl
pop
cld
adc
lods
inc
iret
fwait
enter
xchg
loopne
aad
popf
dec
mov
sub
in
pop
sub
ror
pushw
and
lret
aad
fsubl
cmp
nop
mov
cmp
add
dec
lods
in
or
xchg
and
adc
mov
xchg
xor
cmp
imul
push
mov
xor
imul
shlb
fdivr
iret
out
loopne
xor
notl
idiv
insl
pop
ret
or
les
cmp
repnz
outsb
insb
idivb
cs
dec
and
pop
clc
mov
inc
pop
adc
testl
outsl
adc
mov
xor
dec
mov
fs
aas
inc
sahf
bound
stc
mov
jb
xor
sahf
jp
or
push
std
icebp
push
xchg
js
inc
sub
cld
push
or
in
xchg
mov
mov
shrb
out
jp
xor
cmp
cmp
and
aas
stos
cmp
lods
cwtl
or
fdivrl
xchg
sti
mov
fdivrl
jge
or
mov
cmp
cmpsb
inc
cwtl
adc
cs
std
cmpl
add
push
enter
pop
push
mov
pop
rcrb
insl
leave
sbb
call
movsb
xchg
jae
mov
and
pop
cli
inc
mov
or
or
sub
or
sbb
fcoms
leave
jo
xchg
scas
jno
mov
cs
adc
adc
jecxz
orl
add
xor
inc
jmp
dec
dec
mov
inc
dec
stos
or
nop
adc
mov
cld
dec
xlat
add
scas
adc
jp
xchg
adc
xor
test
test
or
xor
mov
sub
int3
ljmp
mov
sbbb
dec
xchg
hlt
sub
inc
frstor
imul
adc
sub
cs
sub
or
push
test
fsub
cmp
enter
jb
jg
sahf
icebp
push
movsl
mov
xchg
imul
xchg
mov
loop
xlat
or
cwtl
add
or
repnz
mov
subl
xchg
xchg
daa
gs
int
movsl
sub
fiadds
lahf
jbe
rorl
pop
test
push
mov
call
sub
inc
es
fwait
jp
ret
lods
jmp
es
mov
xchg
leave
rcll
out
shr
aad
and
in
mov
xchg
shlb
inc
push
test
sub
pop
push
stc
or
pushf
inc
iret
addb
mov
or
in
nop
pop
sbbb
mov
and
add
mov
sub
or
lods
sbb
cmp
jae
into
ljmp
jno
adc
push
mov
mov
test
xchg
jo
sbb
ljmp
pop
shlb
test
insl
and
ja
shlb
jnp
int
movsb
push
lods
scas
inc
sbb
ljmp
lods
scas
out
dec
jo
aas
divl
popa
xchg
sub
lock
sbb
pop
xor
in
shl
cld
fcmovnu
dec
xchg
mov
popa
lahf
mov
jns
pop
mov
sub
jb
out
sbb
mov
push
cmc
mov
mov
outsl
and
in
sbb
pop
aam
fdivr
jbe
push
dec
xchg
int3
jle
lahf
add
xlat
cld
add
pop
ja
popa
into
emms
mov
shlb
test
lods
push
imul
pushf
jl
in
mov
movsl
adc
test
pop
push
jmp
jl
test
mov
int
push
sarl
ljmp
dec
outsl
mov
add
int
mov
scas
fwait
lret
push
dec
popa
fcoms
or
sub
mov
popa
mov
mov
pop
dec
mov
addr16
addr16
adc
jns
popa
cmc
mov
lods
sub
inc
pop
cmpsb
and
inc
or
les
jne
jl
notl
add
jno
mov
mov
pop
imul
adc
dec
fistl
jmp
and
pop
divl
xchg
add
sahf
jb
dec
lods
mov
cmp
es
push
push
aam
cld
adc
xor
test
dec
ret
pop
aad
sbb
xor
je
scas
add
sub
mov
add
lcall
mov
or
push
jb
sbb
andb
outsb
and
sti
mov
and
sahf
incb
mov
outsl
cmp
cmp
lcall
dec
add
mov
and
sbbb
jp
dec
jg
push
rorb
mov
js
daa
clc
mov
or
call
dec
xchg
xchg
gs
mov
daa
xor
or
cmp
lock
insl
pop
fmull
dec
sarl
pushf
rclb
sahf
sbb
sbbl
cmpsl
cld
sbb
mov
adc
cmpsb
stc
push
jne
add
mov
out
shrl
or
inc
cmpsl
popl
dec
les
mull
jbe
outsb
xlat
cltd
insl
adc
push
and
data16
adc
and
or
and
out
push
push
jo
add
rol
mov
cld
push
mov
out
cmp
scas
or
or
mov
pop
ficompl
dec
pop
js
lcall
xor
xchg
jno
test
mov
test
repz
mov
push
rorb
test
adc
es
repnz
push
ljmp
dec
in
repnz
push
sbb
pop
push
imull
xchg
shrb
aas
pop
and
test
adc
ret
rcrb
dec
mov
sub
es
fistl
out
dec
lret
and
test
out
das
in
xor
rclb
xor
imul
xchg
pop
dec
js
hlt
nop
jb
mov
jmp
pop
std
mov
inc
out
mov
es
aad
push
mov
xor
and
aas
mov
out
push
add
adc
push
pop
faddl
xlat
ds
pop
sbb
push
dec
ljmp
add
loop
add
in
ret
xchg
cmp
in
mov
shlb
outsb
icebp
inc
xchg
or
push
fildl
mov
pop
xor
sub
test
add
fs
dec
int3
mov
push
rclb
int3
cmc
or
insb
gs
imul
daa
cmp
lret
or
jne
popf
xor
pop
jecxz
xchg
pop
nop
pop
mov
repnz
add
mov
dec
jne
jp
subb
push
arpl
loope
lods
mov
sbb
push
aas
xchg
dec
divl
dec
xchg
push
mov
xor
sub
mov
cwtl
sbb
sbb
fwait
sbb
mov
fstl
inc
call
inc
iret
iret
rolb
rol
mov
or
out
punpckhwd
push
pop
push
xor
sub
push
stos
ss
adc
mov
stos
and
push
cmp
dec
scas
mov
rol
int3
or
push
insb
aad
cmpsb
pushf
stc
imul
fistl
call
roll
shll
rcll
jb
adc
out
mov
mov
rcrb
fildl
lods
punpcklwd
inc
shr
push
and
bound
ljmp
gs
adc
dec
imul
mov
sub
movups
and
inc
enter
or
sbb
add
test
insb
repnz
mov
pop
pop
jmp
cltd
orl
lds
xchg
stos
mov
cltd
loope
jae
dec
cmp
les
pop
inc
divl
mov
xchg
lcall
rorb
insb
inc
insl
sub
sahf
out
sub
inc
iret
popa
cld
sub
push
fs
push
fimuls
xchg
sub
pop
cs
sahf
xchg
xchg
lock
push
imull
sbb
jmp
add
mov
mov
pop
stos
mov
mov
jne
push
jae
stos
nop
sar
pop
jl
mov
js
or
outsb
wrmsr
jle
jne
enter
sub
insl
loope
inc
cmp
mov
mov
int3
sahf
add
xchg
mov
xor
test
sbb
lahf
repz
inc
cmp
mov
out
sub
sarb
sbb
loope
or
adc
in
inc
lret
xchg
test
out
mov
jle
push
cmp
dec
mov
mov
lahf
or
loop
sti
jne
orb
and
cmpsl
sarb
inc
test
dec
jp
push
push
loop
jno
lds
add
cs
and
mov
xor
jmp
test
push
pop
jl
dec
mov
sbb
jp
mov
cld
repnz
xchg
mov
and
rclb
mov
enter
jne
dec
add
cwtl
pop
cmp
enter
push
dec
mov
fstps
or
gs
in
lcall
gs
or
dec
push
mov
data16
push
push
cmp
inc
dec
bound
fsubrl
jmp
cmp
push
or
scas
cmp
test
enter
les
pop
and
int3
scas
dec
cmp
mov
imul
sbb
dec
outsb
test
scas
adc
xchg
adcl
sub
lods
loope
notl
aam
pop
hlt
enter
or
or
adc
pop
lret
jmp
xchg
xor
xor
imul
test
cs
mov
or
aad
std
ja
mov
sbb
je
lea
mov
sbb
dec
or
push
jmp
cmp
rolb
mov
mov
pop
scas
test
shlb
pop
in
fmull
shlb
mov
sbb
or
jne
adc
das
mov
inc
inc
fistps
add
fidivrs
jns
push
mov
popa
shll
leave
fmull
rcll
add
testl
inc
mov
std
jge
xor
les
pusha
sbb
push
sbb
or
pusha
and
pop
lcall
std
test
out
stc
mov
cld
out
incl
sub
in
push
movl
cmp
cwtl
lret
adc
sub
add
popf
js
push
dec
decb
pop
repnz
adc
or
lock
push
xchg
push
shrl
sti
mov
jmp
mov
test
out
lods
or
loope
cmp
xlat
test
sub
repnz
in
or
fcoml
ret
add
xor
jmp
scas
jge
imul
pop
dec
jle
repnz
xlat
sub
inc
cltd
pop
mov
cld
in
xchg
fwait
pop
pop
cmp
insl
cmc
popf
pop
adc
adc
add
in
mov
adc
mov
xchg
enter
in
out
push
jo
xchg
push
jb
push
scas
xchg
xor
lds
loopne
movb
pop
jns
mov
xchg
lcall
cmpsl
sbb
or
xor
adc
push
jle
adc
aad
jp
add
jb
or
repz
xchg
das
or
test
jae
movsl
jmp
into
lods
cmp
inc
fwait
bound
and
fdivl
cmp
mov
or
sub
ja
fildl
inc
dec
mov
emms
inc
push
dec
icebp
ss
call
cmpsl
sbb
es
data16
mov
jg
or
loope
pushf
pextrw
outsb
fwait
mov
mov
imul
aad
sti
push
push
test
subl
movsl
fsubr
popa
sbb
sub
cmpsb
into
cltd
std
or
bound
cmpsb
clc
leave
jg
test
cmove
push
cld
lahf
jb
add
jmp
aas
dec
hlt
jmp
jp
dec
sti
push
sahf
lea
mov
xchg
and
adc
out
out
jg
pusha
insb
sub
mov
cmp
lods
pop
iret
jmp
cmpsl
addr16
jmp
cld
mov
ret
ret
jo
pop
test
push
insl
dec
fdivrl
adc
repz
lods
xor
das
and
je
pop
pop
sub
dec
ljmp
ljmp
dec
or
es
testl
push
cmp
into
out
inc
push
ss
pop
or
lods
stos
fisubs
mov
mov
cmpb
lahf
popf
mov
loope
lret
addb
mov
sbb
nop
xchg
les
in
adc
nop
mov
add
inc
inc
fdivs
fildll
sti
adc
xor
jnp
inc
jb
dec
sub
jmp
and
and
ret
mov
cmpsb
add
fs
or
lods
jl
sub
sarb
sbb
sub
push
insb
inc
mov
and
divl
adc
cmp
mov
mov
stc
icebp
or
out
dec
mov
ss
outsb
adc
sbb
sti
movsl
jg
jnp
mov
int
cld
aad
add
lock
adc
pop
daa
cmp
mov
sub
das
iret
out
adc
jg
imul
dec
mov
lret
mov
fisubrs
into
std
cld
and
data16
dec
push
aam
je
and
fisubrs
fwait
mov
shll
fiadds
out
outsb
sahf
push
inc
inc
in
test
rolb
jo
jne
mov
jno
mov
insb
and
push
fiadds
push
mov
or
lods
lahf
adc
push
call
and
or
movsl
or
mov
and
add
sbb
jle
mov
fs
adc
or
andb
adc
ljmp
jb
pop
pop
in
mov
inc
loopne
cltd
rorb
dec
into
lret
aad
jbe
xchg
push
add
ja
ds
jg
scas
xor
cli
xchg
mov
fsubrs
aaa
xchg
out
and
push
inc
push
scas
imul
xchg
divb
scas
scas
test
push
xchg
adc
out
ljmp
cmp
dec
or
int3
rolb
xchg
out
or
xchg
mov
push
out
sbb
cmp
int
sbb
sarb
xlat
pop
fsts
repz
enter
jbe
mov
sub
stc
fsubl
jecxz
push
jbe
inc
stos
jbe
decl
xor
mov
dec
clc
sti
jmp
leave
daa
xor
cwtl
pop
inc
sahf
sub
mov
in
rol
mov
cwtl
mov
lds
sub
xorl
lret
ret
adc
sub
dec
jo
cld
jb
sbb
call
not
pop
bound
int
js
pop
dec
xchg
movsl
and
push
ljmp
insl
dec
insl
stos
sbb
cmpsb
cmp
mov
mov
mov
int3
sub
xor
add
push
cmp
sbb
outsl
pop
pop
mov
repnz
push
stos
jbe
adcb
popa
loop
jge
and
inc
sbb
test
jnp
repz
daa
ror
push
push
stc
xchg
ja
jge
addl
adc
inc
fnstsw
clc
nop
ret
or
subb
mov
pop
mov
addr16
shll
pushf
fldcw
sbb
gs
repz
dec
outsl
mov
sbb
sub
pop
fwait
xor
outsl
leave
lea
push
test
movsl
ds
addr16
and
xlat
mov
movsl
sahf
test
or
movsb
sub
mov
cli
xor
xor
xor
sub
mov
roll
inc
dec
push
mov
aas
xchg
xchg
test
cwtl
xor
cmc
mov
addb
fs
gs
in
sub
imul
dec
push
mov
mov
addr16
scas
test
mov
aas
push
xorw
xchg
jo
ud1
push
dec
enter
das
stc
mov
inc
cmp
xor
lcall
jnp
mov
and
arpl
outsl
pop
xchg
jnp
clc
nop
inc
jp
fists
repnz
pushf
aam
push
adc
inc
pop
inc
mov
push
test
test
adc
lret
sar
and
xor
cs
pop
sub
pushf
mov
cli
clc
cmp
pop
faddl
xor
bound
test
mov
repnz
pop
out
test
stos
rorb
in
sub
xor
mov
xchg
cmp
xchg
fnstenv
push
stos
imul
jb
mov
dec
cs
or
adc
cmp
pop
lods
pop
stos
mov
cmp
pop
sbb
inc
loop
inc
or
adc
mov
mov
pop
scas
mov
pop
mov
mov
out
add
xor
test
mov
xchg
mov
mov
sahf
js
pop
test
cmpb
and
lock
add
lods
leave
mov
jo
dec
enter
pop
sub
cs
ds
stc
inc
movsb
sub
xor
dec
mov
xor
jns
xchg
nop
cs
pop
push
rcl
mov
add
jns
xor
pop
and
loopne
enter
roll
insb
inc
sub
adc
outsl
xchg
sbb
lds
movsb
int
mov
lahf
insb
add
dec
fadd
popa
and
int3
pop
mov
lret
xchg
popf
jno
xchg
mov
pop
outsl
enter
jo
push
std
xor
dec
in
xor
in
jb
dec
push
cmp
adc
pop
ja
dec
mov
ja
jno
mov
pop
movb
popf
sbb
xchg
sub
push
call
xchg
clc
mov
inc
shll
cmovns
pop
push
jns
nop
ret
cmp
in
out
push
jns
shll
fs
loope
rcl
mov
and
lods
mov
sarb
mov
xchg
fcomps
adc
add
pop
sbb
loopne
imul
bound
aad
mov
jo
sahf
pop
pop
loop
mov
ja
sub
fs
push
xor
shlb
dec
mov
into
jb
xchg
mov
or
in
xchg
fucomp
pop
adc
mov
test
das
rorb
mov
mov
lods
adc
dec
push
sub
mov
into
dec
push
into
sbb
pushf
push
imul
mov
sbb
adc
sti
ds
adc
pop
sbb
cs
cmp
cli
push
cld
inc
xor
ds
clc
xor
inc
sbb
stos
add
cmp
shlb
dec
jl
cmpxchg
sub
fldenv
pop
pushl
sbb
shll
pushf
imul
out
push
push
pop
ja
stc
jno
adcl
int3
pop
pop
mov
cli
or
scas
sub
ficoml
mov
and
sub
iret
xchg
nop
es
xor
fcomp
inc
cmpsb
scas
lahf
movsb
mov
stc
in
call
sti
sbb
scas
mov
mov
push
add
jl
inc
ftst
movq
pop
sahf
jmp
pop
nop
movsl
pop
std
mov
dec
and
and
jl
adc
mov
mov
pop
lret
outsb
leave
sbb
fs
ret
mov
lods
imul
or
ja
cmp
mov
mov
aaa
xchg
dec
adc
sub
das
pop
out
adc
sbb
outsb
in
test
or
mov
mov
xchg
ds
mov
cli
push
movsb
cltd
sub
and
shufps
dec
mov
daa
mov
or
lcall
push
and
mov
adc
dec
lret
add
ds
dec
push
in
xchg
pushl
cmpsl
ss
and
xchg
cmp
pop
movsl
iret
cs
decl
cmpsl
push
inc
out
mov
outsb
and
dec
push
int
mov
sub
out
jl
mov
insl
xor
xor
test
lahf
scas
cmp
push
or
mov
cmp
xchg
pop
push
hlt
jne
insb
addl
dec
cmp
jb
adc
addl
call
mov
ljmp
mov
inc
push
push
jb
mov
cwtl
adc
pop
addr16
sbb
push
mov
mov
fbstp
rol
test
lret
pusha
push
adc
loope
push
add
pop
adc
or
outsb
push
pop
inc
xchg
add
ret
sarl
into
inc
movb
push
jne
pop
adc
adc
das
aaa
mov
popf
rcrb
int3
jge
outsb
insb
test
int3
fmull
aaa
in
mov
out
ficomps
insl
mov
and
out
jp
xor
mov
push
ljmp
adc
mov
push
jnp
mov
lea
cmp
shlb
push
jmp
push
push
pushf
pusha
sub
jns
std
inc
mov
ret
mov
pop
pop
xchg
pop
iret
xlat
popf
std
loope
neg
pop
lahf
pop
jl
out
xchg
and
mov
shr
movsl
xor
and
sbb
mov
xchg
push
outsb
fsts
lahf
ds
adcb
cmpsb
sbb
ret
or
mov
mov
adc
sbb
das
enter
mov
pop
jbe
popf
cltd
fistpl
shlb
xor
in
pop
out
or
xchg
pushf
push
repz
sar
frstor
repnz
dec
bound
popa
repnz
loope
in
cmc
enter
add
movsl
mov
dec
lock
andb
xchg
sub
jp
sub
dec
popa
arpl
push
xchg
gs
mov
dec
mulb
lahf
lds
enter
xor
outsb
sub
mov
push
add
push
out
addr16
and
loop
mov
xchg
ret
loop
das
dec
push
out
cwtl
ret
add
mov
cmp
mov
and
sbb
dec
xchg
outsb
pop
sbb
icebp
into
mov
jno
sub
dec
lcall
jmp
or
test
jne
adc
jo
cmp
insl
and
sub
je
cli
jg
adcb
mov
dec
xor
cmp
stos
add
movsl
fcomi
jae
xchg
sub
pop
es
or
rclb
mov
es
popf
nop
insb
mov
stc
cmp
out
aas
dec
sbb
push
out
jne
aaa
xchg
sub
xchg
fldenv
mov
sub
shlb
jns
std
test
roll
lea
aaa
and
stc
and
xor
and
fidivl
lods
lahf
int
jnp
jmp
fstps
ficoml
gs
hlt
or
jg
fbld
mov
or
insb
fwait
pop
xchg
mov
popa
dec
jecxz
jo
xchg
pop
inc
test
fidivs
jno
gs
inc
inc
sub
lods
jne
mov
mov
fwait
jecxz
fcompl
cs
sbb
push
push
push
jae
cmp
je
ss
call
fcomps
push
mov
nop
xor
ljmp
in
inc
or
xlat
adc
pop
pop
pop
movsl
pop
push
add
test
adc
jecxz
pop
dec
call
lock
sub
sahf
les
mov
shrb
pop
dec
sbb
fs
in
fs
fstl
pushf
aas
or
fdiv
xorl
adc
fwait
push
mov
lock
movhps
cli
scas
popa
ret
mov
out
movlps
jno
lret
movsl
fsubr
add
lcall
aad
sub
mov
cld
sub
sub
add
out
sahf
sbb
inc
cmp
cmp
mov
sbb
pushf
lret
loope
nop
and
xchg
pop
pusha
mov
add
fwait
or
test
mov
popf
shll
pop
aam
mov
jne
shll
cmp
shrb
frstor
cmp
pop
fimuls
enter
mov
cltd
clc
add
les
ds
push
sbb
imul
dec
sahf
add
cli
jne
and
or
aam
mov
dec
ret
movsl
jno
cwtd
addl
les
fwait
in
mov
shrw
push
rclb
shll
frstor
bound
push
fsubrp
out
add
adcl
add
sahf
xchg
inc
bound
loop
fidivs
dec
push
jmp
push
subb
mov
jecxz
dec
sub
dec
mov
in
lods
out
ror
pusha
mov
pop
iret
inc
pop
test
aam
aas
sbb
mov
mov
lock
fcoml
cmp
dec
sbb
sbb
sub
je
loopne
jmp
push
xchg
mov
and
push
or
orl
sub
mov
sahf
sbb
arpl
adc
das
shrb
mov
cli
test
fnop
ret
movsl
in
xor
cs
and
fucomi
push
cmc
pop
imul
sar
mov
ja
push
sahf
cmp
mov
faddl
xor
mov
mov
daa
mov
arpl
ret
inc
insb
daa
pop
sub
push
xchg
xlat
into
mov
push
out
adc
in
mov
shll
in
dec
lea
pop
movsb
inc
stc
dec
test
insl
call
ja
dec
jle
adc
xchg
add
insb
mov
dec
mov
push
icebp
rorl
int
jl
inc
push
fcoms
js
pop
call
stc
jle
jmp
incb
sub
aas
cmpsl
mov
movsb
sbb
lret
adc
inc
inc
scas
clc
insb
cmp
jb
or
fisubs
popa
fs
loopne
add
daa
adcl
dec
cmp
sbb
jmp
in
mov
or
daa
ljmp
mov
stc
mov
in
jp
movsl
ret
dec
fsubs
test
jno
mov
xor
push
or
push
fwait
iret
test
repz
mov
bound
cwtl
jmp
hlt
mov
test
aas
and
xor
cltd
fisttpll
dec
fnstsw
dec
enter
into
inc
jne
or
inc
inc
jecxz
enter
mov
std
cs
int
scas
sbb
mov
mov
and
or
push
fstp
lds
sbb
adc
push
mov
mov
ret
repnz
pop
xchg
insl
xor
mov
jnp
pop
icebp
mov
xchg
lods
jle
call
adc
fstpt
aaa
rcl
pushf
mov
mov
dec
ja
push
dec
pop
mov
lret
jb
dec
fsubrl
adc
dec
adc
fsubl
loope
push
imul
testb
xchg
loop
scas
jnp
outsl
cmpsb
aam
push
and
push
arpl
pop
icebp
inc
jecxz
andb
sbb
cmp
pop
add
stc
sbb
out
adc
push
xchg
mov
je
mov
jl
pop
push
icebp
push
cmp
and
fs
insb
mull
adc
jo
mov
ds
mov
fiadds
clc
fs
sbb
je
fcmovbe
add
cmp
mov
decl
mov
add
adc
mov
int3
cmpl
hlt
aam
dec
fwait
movsb
jb
sub
imull
and
adc
je
sbb
pop
shl
adc
mov
stc
cld
mov
lret
aam
stc
adc
push
out
clc
pop
mov
ret
pop
mov
xorb
push
adc
rorb
pushl
stc
add
daa
loopne
xchg
jge
loopne
xor
mov
adc
sbb
dec
mov
lret
scas
or
imulb
aaa
mov
divl
es
mov
cmp
pop
jbe
sahf
call
dec
dec
mov
das
test
pushf
mov
scas
cmpl
pop
stc
movsl
imul
push
add
std
int3
js
and
cmc
and
xor
aad
jo
imul
push
int
loope
cmp
jmp
push
xchg
es
cmp
dec
pop
sbbw
fucomip
mov
jns
xchg
iret
lds
dec
add
cmc
lcall
sub
and
ja
mov
pop
repz
cltd
xor
cmp
or
arpl
and
pop
inc
out
icebp
pop
push
or
shl
xchg
divb
js
loope
jle
adc
cli
inc
pop
dec
stc
cmp
mov
inc
pop
add
and
fildl
xchg
mov
clc
es
jmp
xchg
pop
scas
in
and
movsl
inc
sub
xchg
mov
pop
insb
or
mov
xchg
xchg
or
xchg
push
add
push
test
mov
mov
jg
pop
imul
pop
minps
mov
and
aas
movsl
xchg
sub
mov
lret
ficompl
das
xchg
mov
lods
sub
mov
xor
xchg
xchg
bound
mov
dec
incb
jae
scas
rolb
sbb
mov
fsubr
stos
jecxz
hlt
int3
add
gs
out
or
je
add
scas
cmpsb
inc
jl
ljmp
pop
scas
cmpsb
sbb
popf
fisttpl
insb
in
fcom
fistps
mov
and
shr
lods
scas
mov
lods
fwait
and
shrl
cmp
sub
mov
adc
pop
orb
cmp
pusha
ds
dec
loop
mov
pop
arpl
or
pop
rcr
sti
mov
mov
sub
push
fs
rcll
cmc
test
push
sbb
dec
lods
pop
rcll
das
or
jecxz
push
aas
jle
loopne
push
dec
loop
xchg
aam
dec
cli
lods
mov
mov
pop
push
mov
mov
adc
mov
dec
dec
jl,pt
inc
and
xchg
sbb
and
jg
sarb
or
loop
repnz
lcall
lock
adc
in
int
nop
std
cmp
js
sub
push
xor
stos
mov
inc
dec
hlt
push
clc
sbbb
stos
loope
pop
repz
or
sbb
inc
outsb
popa
in
sub
jno
outsb
sarb
inc
scas
jmp
xchg
cmc
dec
das
jl
mov
lret
enter
xchg
mov
mov
insb
out
mov
jb
jle
push
mov
into
cwtl
inc
pop
dec
scas
jge,pn
push
std
pop
inc
xor
ffree
sub
scas
int
out
push
out
bound
aam
mov
sub
divl
out
stc
aad
sbb
imul
add
mov
outsb
pop
xorb
movsb
adc
pusha
jmp
push
adcl
push
ja
or
mov
cli
mulb
cmpsl
mov
outsl
inc
lds
sbb
hlt
or
sub
aad
in
in
aaa
sbb
mov
mov
lret
aas
lcall
xor
mov
inc
xor
dec
xor
xchg
mov
inc
ds
pop
push
cmp
mov
int3
cld
loope
cmc
cld
push
push
cltd
daa
mov
andl
push
xchg
sti
pop
int
and
dec
push
xchg
sbb
mov
lods
cmpsl
adc
enter
xchg
movsl
popa
xor
das
dec
jno
loopne
cvttps2pi
arpl
mov
xchg
movsl
fistps
pop
jmp
xchg
push
push
scas
mov
sub
add
divb
adc
cmpsb
test
add
adc
and
dec
mov
xchg
rcl
inc
pushf
dec
or
repz
imulb
xchg
insb
int3
popf
pushl
incl
sub
cmp
dec
cmpsl
mov
fwait
pop
add
dec
or
call
pop
jecxz
cmc
cmp
push
jnp
pushw
cwtl
jno
test
jae
pusha
testb
xchg
pop
fldenv
cli
xor
xor
ljmp
push
pop
jbe
and
ret
adc
das
push
adc
fmull
dec
sbb
aas
popf
cmp
fs
mov
pop
xchg
dec
inc
push
idivl
movsb
push
ret
mov
out
ds
dec
hlt
push
xchg
ffreep
movmskps
sub
or
repz
test
ds
sahf
xchg
lcall
jl
and
dec
inc
insl
pop
jns
addr16
int
fstps
dec
fsubl
mov
dec
pop
test
or
lret
pop
pop
aad
lret
and
inc
movsl
repnz
jecxz
xchg
pop
jle
dec
sbb
mov
add
add
in
cmp
imul
and
in
popa
or
sub
push
adc
aaa
repz
mov
repz
roll
das
aad
adc
inc
ljmp
dec
cs
js
adc
inc
test
adcl
jnp
mov
adc
xchg
mov
test
mov
add
jl
pop
call
mov
inc
xor
cmp
insl
dec
leave
into
xor
std
loope
mov
inc
mov
or
sub
push
add
scas
jae
inc
jne
pop
test
push
lea
push
enter
fdivrl
jg
lahf
repnz
and
loop
imul
push
cli
int3
out
in
sub
test
pop
inc
test
xlat
sub
adc
pop
fsubrl
repz
cld
mov
inc
mov
jno
cmp
pop
lea
dec
cltd
mov
imul
inc
rclb
sub
push
lret
push
and
call
xlat
mov
push
push
xchg
fwait
andb
adc
aam
push
mov
sti
fdivr
lock
mov
jl
fldenv
sarb
mov
cmp
cmp
pop
cld
cltd
cmp
mov
outsb
cmp
pushf
dec
inc
je
loope
cltd
ds
iret
stc
dec
lds
cmp
movsb
cmpsb
xor
roll
aam
inc
add
ja
lods
mov
xchg
lcall
push
mov
cmp
cmp
repz
aas
insl
nop
inc
mov
sbb
or
jnp
xchg
ss
scas
sub
or
sbb
hlt
cmp
jno
xor
mov
filds
repnz
repnz
and
add
es
fcom
xchg
sbb
mov
jno
test
mov
mov
xchg
cli
adc
movsb
lock
cld
dec
sti
and
dec
scas
negl
or
add
or
and
xchg
daa
icebp
xchg
mov
cltd
lods
jp
or
adc
cwtl
push
cmp
popf
jmp
fidivs
int3
mov
es
sub
pop
jbe
mov
in
shrl
mov
sbb
lods
or
clc
dec
and
icebp
pusha
outsl
adc
mov
enter
shrb
mov
xlat
out
das
xor
scas
add
inc
bound
jmp
and
sub
fldt
jl
repz
popf
cmp
xchg
ficompl
fistpll
std
insl
stc
mov
adc
movsl
pushaw
dec
ret
adc
pop
push
ja
imull
out
pop
xchg
ret
stos
lret
in
dec
clc
xchg
adc
add
pusha
stos
pop
icebp
imul
repz
sarl
scas
loopne
or
lock
dec
test
push
mov
lock
pop
sub
fwait
xor
pop
cmp
fstpl
iret
push
out
mov
daa
inc
mov
xchg
mov
outsb
xor
fnstsw
jmp
orl
cmp
adc
or
aas
and
add
ds
test
out
jo
cltd
jmp
lcall
ficompl
mov
in
lds
fbstp
push
ljmp
add
mov
mov
and
sbb
test
cmpsl
pop
and
in
mov
cltd
xor
mov
adc
mov
mov
add
mov
mov
pop
ret
insb
in
cmp
pop
and
xlat
add
mov
mov
outsl
out
ret
ja
lcall
lret
scas
xchg
mov
loope
inc
lret
sub
push
insl
jo
sbb
fwait
add
in
or
mov
add
xchg
rclb
mov
div
lea
jbe
insl
or
sub
bound
fildl
lods
in
mov
scas
arpl
dec
ds
sarb
mov
mov
rolb
and
jno
test
stos
adc
aaa
pop
int
or
pop
lret
push
mov
mov
xchg
mov
jp
sbb
clc
ja
jae
jno
cmpsl
data16
pop
sti
imul
add
cmpsl
inc
inc
sbb
add
and
sbb
iret
stc
xor
push
sbb
negb
ficoms
call
push
fdivrp
incb
out
outsb
inc
hlt
and
xlat
shr
mov
lea
rcrl
pop
loope
sub
mov
test
xchg
aas
xor
adc
lret
and
rcrb
pop
lret
push
lds
shrl
xchg
dec
ror
mov
mov
loope
and
nop
rorb
jmp
nop
lods
mov
ljmp
mov
mov
xchg
sbb
or
xchg
enter
mov
test
clc
jp
fisubl
mov
pop
inc
test
jne
mov
lods
cmp
xchg
add
push
xor
int3
popa
fwait
mov
nop
pop
fsubr
sahf
cwtl
sbb
adc
cli
es
mov
shl
mov
outsb
scas
pop
mov
lods
mov
loope
xchg
or
mov
jecxz
repnz
xor
insb
je
nop
loop
xor
sbb
adc
mov
hlt
cmpsl
dec
clc
fdivp
cmp
lcall
stos
jns
lds
ret
mov
sahf
cmpsb
xlat
nop
outsb
mov
int
out
push
cwtl
das
test
adc
test
cmp
mov
cmpb
mov
jg
mov
push
or
sbb
imul
orb
sub
adc
std
cmp
dec
js
imul
sbb
mov
ljmp
mov
stos
mov
lods
pushf
xchg
jg
das
inc
cmp
test
repnz
jmp
and
dec
xchg
mov
inc
insl
divl
mov
xor
idiv
shlb
jno
call
outsb
jbe
movsb
outsl
adc
adc
sub
cmp
and
sub
outsl
cmc
das
test
mov
movsb
arpl
nop
push
addr16
push
push
add
ja
xor
xlat
sub
fs
aad
pop
in
add
gs
mov
mov
shll
pop
int3
test
xor
inc
jae
rolb
adc
aam
lea
arpl
sbb
ret
jge
or
mov
test
sub
xor
shl
mov
movb
mov
andl
arpl
jmp
repnz
inc
test
sub
pop
loope
lds
cmp
inc
cmp
inc
cmp
mov
lea
adc
add
xchg
iret
cmp
or
cmpb
fldenv
and
gs
jbe
cmp
lods
out
mov
mov
ja
sub
mov
jo
mov
jne
xchg
xchg
add
rclb
mov
test
xlat
xchg
push
imul
jns
mov
loop
outsl
int3
ja
push
mov
inc
xor
jecxz
cli
jnp
clc
sub
mov
and
ja
fdivrp
test
sarb
cmpsl
pop
xchg
jne
mov
xchg
mov
push
sahf
and
lods
dec
cmp
addr16
iret
sub
je
mov
cmp
jge
in
into
pop
jge
test
xchg
jmp
lcall
adc
jmp
pushf
das
cmp
int
repnz
je
pop
loop
mov
mov
arpl
iret
or
test
in
cltd
add
pop
jp
rclb
or
les
mov
xor
push
jecxz
mov
repz
and
pushl
or
pusha
les
or
mov
sub
xchg
mov
push
xchg
mov
addr16
mov
lahf
pop
test
sub
outsl
shlb
and
xchg
jg
flds
pop
cli
adc
push
insl
shll
mov
or
pusha
jo
repz
testb
jg
push
inc
daa
test
xchg
push
fsub
stos
fistpll
fbld
push
adc
jo
test
or
mov
aaa
pushf
ret
ja
add
aad
int
insb
inc
icebp
and
sahf
mov
rcrl
add
les
in
or
loope
adc
out
inc
stos
jae
mov
hlt
daa
add
adc
adc
das
mov
aam
ss
rcrl
pop
jecxz
popa
into
repnz
cmpsb
fnstenv
stos
jo
sbb
lods
push
xor
push
xlat
jae
cmp
add
push
adc
xchg
arpl
cwtl
incl
clc
sahf
ss
jbe
dec
jmp
mov
pop
mov
adc
dec
push
std
dec
mov
addl
movsl
movsb
and
pop
pop
addr16
fildl
xor
push
test
sbb
push
and
cmp
jecxz
ljmp
push
jecxz
stc
sub
movsb
lods
mov
xchg
pusha
add
push
arpl
idiv
jecxz
lret
lds
inc
das
les
add
mov
ds
imul
lret
fistps
mov
mov
mov
and
negb
xchg
in
stos
out
fs
xchg
xchg
jb
mov
pop
je
bound
mov
pop
jbe
in
shlb
sub
test
sbb
dec
xchg
lods
dec
mov
ljmp
lcall
cltd
push
mov
sub
or
fmul
movsb
sbb
es
sbb
into
cmpsl
or
stc
mov
dec
popf
test
pop
inc
stc
or
jbe
inc
xchg
jecxz
cmp
in
push
xor
std
sbb
xchg
add
inc
sbb
inc
adc
pop
mov
mov
or
pop
sub
out
imul
push
mov
imul
adc
dec
and
lcall
cmp
pushf
cmp
test
adcb
dec
icebp
xchg
push
addr16
stos
out
jb
imul
mov
cmp
aaa
adc
pop
jp
and
push
lea
mov
pop
out
pop
inc
aaa
mov
adc
jmp
cmp
out
sbb
push
stc
fisubl
rolb
stc
loopne
cs
mov
les
xchg
mov
lods
mov
incl
testl
mov
aad
ljmp
mov
cmp
add
adc
pop
push
jl
cmp
repnz
mov
pop
push
push
ret
stos
xchg
xor
popf
fidivrs
fcoml
test
cld
jo
sub
subb
inc
xchg
mov
pushf
pop
or
test
xchg
test
rorb
dec
call
pop
adc
icebp
or
test
jnp
pop
and
pop
and
iret
mov
jle
xchg
ja
cmp
shrl
loop
lret
or
mov
adc
mov
adc
cwtl
aad
iret
insl
cli
rcrl
inc
mov
sub
inc
lcall
lock
inc
pusha
dec
lods
fs
or
cmp
pop
mov
stc
out
pop
jnp
sbb
or
bswap
mov
mov
xor
test
incb
scas
xlat
dec
cmp
jns
cmpsb
aas
test
jo
insl
adc
dec
imul
popf
and
je
xchg
inc
ret
stos
and
mov
xchg
jnp
dec
jmp
pop
stc
xor
ds
mov
mov
loop
mov
icebp
sbb
mov
leave
xchg
andl
rorl
mov
sbb
insb
movswl
or
sub
fbld
xor
stos
daa
out
mov
movsb
in
dec
adc
clc
mov
add
and
mov
push
add
div
jns
fists
sti
loop
cmp
lahf
js
mov
loopne
jae
cmp
sub
fs
lret
jg
adc
jg
xor
nop
jne
jns
hlt
push
ret
inc
ds
push
repz
lret
inc
xor
ds
xor
adc
sbb
and
iret
dec
outsl
icebp
out
push
xlat
cli
repnz
nop
inc
mov
push
push
cmp
lahf
pop
pop
adc
sarl
lea
and
mov
push
int3
lea
out
push
adc
ds
jae
cmpsl
adc
mov
clc
imul
adc
adc
ja
cld
xor
pop
loope
mov
mov
out
inc
mov
loope
mov
neg
sub
imul
sub
test
js
outsl
xor
xor
loopne
test
mov
out
pop
xor
cld
adc
adc
fisttpll
addl
add
xor
xlat
mov
fwait
and
lods
pop
dec
out
cmp
notl
or
nop
xor
test
jnp
jnp
clc
inc
and
mov
push
mov
ficomps
fisubs
pop
test
sub
inc
mov
push
adc
bound
jmp
sub
fistpl
pop
push
shrl
bswap
add
jnp
mov
push
loopne
push
gs
test
pusha
sbb
les
xchg
jae
adcl
lcall
xchg
xchg
mov
sbb
mov
jns
sub
in
shlb
cltd
gs
addb
int
in
jmp
xor
xor
mov
lock
adc
cmp
out
out
lret
insb
fdivrs
mov
mov
add
roll
mov
in
sub
xor
call
or
push
inc
pop
fimuls
cld
fdivrl
jnp
dec
pop
mov
sub
lea
ds
call
dec
bound
scas
or
jge
xchg
movsl
movsl
aaa
xor
inc
mov
gs
sahf
movsb
and
adc
xchg
gs
lds
sub
fnstenv
xor
jne
ja
cli
xchg
ja
and
adc
jl
incb
or
or
call
fsubrl
pop
xor
cwtl
pop
mov
sub
mov
xor
fbld
push
les
pop
mov
xchg
ja
lahf
movsl
xchg
mov
mov
pop
mov
faddl
adc
es
and
pop
out
xor
test
arpl
aad
jle
repnz
inc
xor
push
jb
adcl
inc
out
pop
iret
mov
mov
add
mov
mov
nop
inc
repz
pop
fimuls
ja
xchg
jp
xchg
and
jl
imul
fwait
xlat
clc
jb
lret
pop
mov
cli
int3
lahf
sub
xlat
shrb
out
dec
adc
gs
ret
adc
jle
loope
pop
jbe
adc
daa
mov
aad
pop
ds
mov
mov
dec
xchg
mov
pop
shl
out
lock
mov
jecxz
das
cld
filds
sbb
xor
push
push
inc
dec
adc
icebp
xchg
lods
sarb
sbb
xchg
fldenv
xchg
mov
fidivs
arpl
fcoml
outsl
mov
dec
mov
jle
clc
frstor
pop
in
jb
lds
adc
icebp
rcrl
jle
push
test
scas
pop
aam
sbbl
sub
xchg
mov
xchg
and
js
cmp
ja
lea
dec
stos
ds
jns
lret
faddl
mov
jae
cmp
addr16
sbb
adc
dec
pop
adc
mov
mov
push
icebp
loop
xchg
addr16
ret
push
mulb
icebp
fbld
mov
cwtl
repz
adc
push
call
pusha
std
std
lahf
cmp
mov
fsubrp
and
loope
imul
std
lds
jne
mov
adc
fnstcw
mov
adc
mov
dec
jae
or
shll
shlb
ret
push
data16
call
sbb
enter
scas
cltd
daa
xor
mov
push
push
dec
sbb
pop
add
jg
jmp
adc
int3
int
push
sbb
mov
adc
pop
js
in
cmc
test
sub
mov
leave
aad
mov
clc
adcb
icebp
ss
xor
lcall
sub
xor
es
mov
cltd
ret
mov
mov
add
rcll
cli
popa
mov
addb
push
movsl
fwait
das
push
ss
dec
xor
jl
shll
mov
sbb
data16
xchg
test
jo
or
out
in
test
dec
add
xchg
popl
notb
mov
imul
lods
xchg
in
sbb
inc
adc
pop
push
inc
push
in
sbb
lahf
sbb
cmp
test
in
push
lahf
jge
and
dec
jp
dec
mov
dec
xor
jmp
cmp
lcall
jns
loope
fcomps
jne
jne
sti
push
or
loopne
pop
rclb
in
xor
int3
add
xor
fwait
jae
in
dec
imul
loop
stc
jne
mov
mov
push
inc
fwait
outsb
add
dec
shlb
xchg
jl
mov
dec
jae
out
test
and
xchg
lret
sub
scas
iret
enter
lods
ror
mov
rcl
rcl
xchg
mov
sti
loop
aaa
mov
ja
adc
mov
cmp
xlat
push
jle
inc
mov
sub
lcall
xchg
cmp
jge
hlt
and
adc
push
cmp
add
arpl
and
or
push
jmp
aaa
divl
out
movb
jle
adc
ljmp
jl
mov
and
fs
pusha
add
popa
outsl
push
ret
pop
daa
das
sarb
inc
sub
mov
daa
mov
repz
aad
cmp
sarl
xor
int
daa
adc
ret
aaa
or
push
jp
xchg
push
mov
adc
and
icebp
jle
xor
lock
pushf
aam
xchg
jecxz
mov
orb
mov
cli
push
test
xchg
dec
lret
mov
xchg
fnsave
stos
jl
xchg
cwtl
call
pop
repz
ljmp
adc
ja
xchg
sbb
rsm
setge
dec
les
cmp
lock
cld
mov
imul
inc
cltd
push
mov
cmp
pop
sub
stc
dec
mov
stc
cmp
in
jl
and
dec
and
mov
pop
mov
sbb
mov
leave
cwtl
leave
cmp
or
or
xchg
jnp
loopne
jmp
inc
adc
add
mov
pop
adc
jnp
call
inc
cmp
cmpl
mov
icebp
int
push
adc
inc
loopne
lods
xchg
mov
lods
call
dec
pop
js
pushf
cmc
je
sub
sub
and
jp
shlb
mov
and
fsubrl
dec
les
inc
gs
fbstp
lds
or
jbe
popf
bound
lds
mov
jge
cmp
aaa
mov
xor
out
addr16
mov
fimull
jbe
and
push
push
into
xor
sub
push
xchg
pop
mov
dec
les
push
out
mov
pop
or
sbb
sbb
pop
inc
xor
aaa
pop
dec
inc
sarb
ds
movsl
adc
addr16
pop
lods
add
mov
inc
stos
mov
mov
aad
sbb
daa
mov
pushf
stos
push
xchg
mov
pop
out
jmp
cli
notb
int
xor
xorl
je
scas
cmp
or
push
adc
aam
dec
inc
and
rol
jecxz
popa
and
and
loope
cmc
ficoms
test
jae
fcmovne
insb
subb
int
pop
movsb
dec
fisubrl
fld1
dec
pop
pop
mov
data16
enter
push
xor
in
xor
arpl
and
push
mov
dec
lahf
pushf
arpl
xor
or
pop
cmp
outsb
sbb
cmp
cld
repnz
fdivs
aam
pop
stos
xchg
scas
fidivrl
or
xlat
js
arpl
xchg
les
filds
sbb
mov
shrb
jmp
mov
inc
xchg
lahf
outsl
mov
call
xchg
negl
movsb
es
loopne
or
sub
sub
mov
sub
loop
call
sahf
hlt
lock
mov
aad
lret
js
jbe
mov
lret
inc
ss
jg
xlat
int3
mov
xchg
add
xchg
in
sarl
bound
adc
ds
shrl
mov
cmp
sub
daa
popa
adc
lret
push
xor
int3
jp
cmp
adc
movsl
add
ret
jmp
movsl
pop
mov
push
aas
movsl
iret
imul
call
ret
add
out
jno
push
xchg
outsl
cmp
aam
hlt
dec
std
ja
lds
sbb
cmc
jle
cmp
ss
loop
aam
cmp
push
pop
mov
push
dec
push
jbe
cli
xchg
mov
dec
jge
jns
call
jp
faddl
movsl
cmp
push
mov
out
loope
mov
inc
sbb
pop
mov
push
sub
mov
mull
xchg
inc
and
mov
mov
push
leave
push
stc
rolb
ja
clc
jb
dec
push
mov
sub
mov
xchg
ss
mov
jl
mov
and
mov
sub
rol
xor
cs
ret
mov
push
rcl
cltd
mov
adc
cmp
jge
push
lcall
mov
jo
xchg
adc
imul
ss
pop
mov
js
mov
xchg
cmpsb
dec
outsb
shrb
movsl
inc
mov
loope
cmpsb
ljmp
aaa
mov
push
dec
sub
mov
loope
pop
aad
dec
std
dec
mov
adc
mov
sub
sbb
sub
sbb
dec
fmuls
inc
adc
insb
test
mov
insb
dec
adc
mov
mov
sar
movb
fsubrl
in
mov
cltd
stos
xchg
loope
xchg
pop
pop
add
xchg
call
xchg
cwtl
hlt
mov
sarb
imul
mov
lods
inc
loope
popa
mov
dec
sub
pop
int3
mov
inc
lcall
cmpsl
mov
push
adc
imul
and
sti
inc
cmp
movd
mov
into
pop
jle
outsl
repz
test
iret
aaa
cmp
dec
cmp
push
pusha
fmull
cmp
lds
cmp
popa
mov
in
push
push
xor
or
daa
std
hlt
cmpsb
xlat
sbb
mov
fcoml
in
mov
mov
in
std
mov
leave
jo
xor
ror
aad
adc
mov
push
jnp
push
stc
mov
cmp
mov
inc
sub
data16
hlt
pop
test
sub
or
lret
mov
adc
sahf
clc
ret
adc
push
and
xchg
test
test
int3
pop
adc
rorb
sub
insl
push
shrl
push
push
sub
loopne
mov
cmp
sbb
sub
loop
jp
sub
scas
aam
in
icebp
mov
aam
inc
lcall
mov
cltd
pop
mov
inc
in
mov
sarl
push
ja
jne
call
inc
jb
inc
sub
dec
mov
pop
in
xchg
scas
shll
jns
cmp
or
xchg
push
stc
sbb
fs
adc
ficomps
sahf
push
pusha
xor
jo
pop
and
rcrl
popa
das
cld
daa
xchg
outsb
int3
es
sbb
or
add
fidivs
push
or
fildl
outsb
adc
sub
mull
mov
enter
push
inc
sub
test
sub
les
fdivs
stc
or
nop
jno
ds
imul
lds
loope
dec
cmp
sbb
pop
xchg
jle
jge
xchg
das
imul
loopne
cmpsb
stos
mov
out
test
adc
inc
stos
ljmp
cmp
adc
ret
jnp
mov
jne
hlt
cmp
in
fdivrl
and
loopne
lods
notb
and
jb
dec
ds
sahf
jns
xor
int
mov
jno
jae
jmp
hlt
pop
out
jmp
mov
shrl
push
or
aam
mov
xor
xlat
jno
addr16
mov
inc
push
pop
gs
out
or
fildll
jmp
popa
sbb
aas
xor
testb
xor
leave
jge
add
idivb
cmp
cmpsb
add
mov
and
inc
ss
repnz
cs
mov
hlt
dec
mov
fcmovbe
push
iret
pop
pop
inc
jmp
mov
lret
inc
dec
jno
inc
addr16
in
pop
sub
push
dec
stos
add
movsb
insb
pop
add
pop
aam
popf
mov
add
and
xchg
inc
xchg
test
push
psubq
addr16
jp
ljmp
shlb
scas
sbb
mov
add
pop
imul
roll
sbb
xchg
das
test
push
loope
pop
les
ret
out
leave
shlb
pop
sbb
push
xchg
cmp
ljmp
jg
xor
add
push
aas
adc
dec
aam
adc
bswap
push
mov
sbb
clc
add
fisttps
fs
jb
mov
mov
insl
movsb
jge
sbb
adc
cmp
xchg
jp
enter
cli
cmp
adc
pushf
lods
xchg
out
push
push
pop
aam
mov
je
mov
lea
add
mov
andl
dec
mov
mov
push
xor
or
aas
mov
fbstp
jg
mov
mov
enter
fwait
es
js
divl
scas
lret
xchg
testl
add
lret
cltd
ret
push
jo
movsl
fnstenv
out
nop
ja
push
xchg
mov
push
int
mov
mov
imul
scas
dec
test
pop
out
mov
and
sub
loopne
mov
adc
adc
pusha
push
flds
add
lea
ficoms
js
enter
cmp
dec
mov
mov
cmp
add
nop
mov
das
aas
lret
mov
add
xchg
sbb
sbb
dec
aam
dec
push
adc
je
fisttpl
enter
shll
push
aas
jnp
push
jne,pt
mov
push
and
add
pop
lcall
gs
aad
mov
movsb
cmp
sub
daa
ret
lret
dec
push
insl
sbb
jns
std
jg
scas
ljmp
incb
push
mov
add
insb
push
stos
mov
test
cmp
mov
lock
daa
imul
out
ret
mov
xchg
xchg
pop
push
jmp
arpl
lods
push
lods
arpl
pop
push
fadd
xchg
push
cld
cmc
or
lret
jo
pop
xchg
bound
cmp
cmp
sub
mov
mov
add
mov
stc
xchg
mov
sbb
lret
call
mov
in
mov
test
scas
push
adcl
fdiv
stc
inc
jp
js
inc
stc
push
ss
mov
loopne
js
cwtl
push
nop
xor
and
in
pop
arpl
fs
cwtl
or
jne
sbb
dec
inc
pop
pop
arpl
les
sqrtps
mov
sbb
cwtl
scas
mov
repz
cli
insb
out
mov
xor
xorb
xsha1
cmpsb
paddb
out
push
test
fs
pop
ret
xor
add
mov
jp
cmp
shll
mov
fcoml
and
add
inc
imul
jmp
push
popf
orb
pop
push
aas
flds
jbe
fisubs
cmpsl
shlb
fbld
lods
fwait
adc
mov
fdivl
ljmp
sub
mov
jecxz
mov
push
xchg
xorl
pop
sbbl
push
clc
ficoms
xchg
mov
xchg
xchg
dec
mov
cmp
js
adc
cmpsb
adc
add
imul
xchg
repz
mov
daa
ja
add
pop
mov
sti
pop
insb
stos
std
pusha
mov
aad
xor
add
sub
push
inc
mov
cmc
dec
out
or
pop
sbb
push
adc
aaa
cmc
test
and
push
or
mov
push
jecxz
cwtl
push
fcoml
pop
pop
dec
adc
xchg
rorl
xorl
jmp
and
sub
fwait
bound
or
lock
add
aas
mulb
lret
inc
out
jge
cmpsb
popf
mov
sbb
xor
jge
loope
push
cwtl
mov
add
js
int
xor
xlat
leave
repz
push
mov
int
enter
shr
adc
mov
movsb
lcall
out
push
outsl
shlb
sbb
or
jmp
shrb
xor
mov
lcall
imul
adc
jno
push
xchg
das
lds
dec
pop
repz
xchg
aam
jnp
fbstp
lds
mov
xor
into
hlt
mov
add
mov
stos
bound
inc
or
andb
push
mov
stc
mov
movsl
mov
or
dec
sub
ljmp
pop
clc
je
fdivp
iret
outsl
dec
inc
sbbb
insl
pusha
movsb
lods
scas
insb
inc
mov
je
or
iret
es
pop
mov
and
jns
mov
or
sub
dec
and
sbb
scas
xor
cmp
lahf
sbb
in
xor
sbb
mov
ljmp
imul
xor
scas
and
adc
fcoms
xchg
add
cltd
loopne
fistpl
cmpsl
faddl
lods
jg
or
fwait
scas
dec
std
arpl
xchg
inc
stos
jl
adc
pop
pop
adcb
or
inc
inc
xorl
call
cmp
and
push
pusha
xor
dec
pop
iret
ret
cmp
sbb
mov
push
dec
popf
push
test
fnsave
into
in
or
and
sub
lret
filds
cwtl
mov
mov
and
sub
pop
int3
add
shrb
mov
xchg
mov
pop
xor
sbb
pop
cli
arpl
sbb
add
ds
xor
lds
jo
xchg
mov
es
sbb
test
inc
outsb
loope
inc
sarl
xor
mov
mov
sarb
mov
xor
cmc
and
mov
and
sbb
fwait
cld
loopne
inc
dec
js
mov
adc
fstl
out
out
push
fimuls
mov
rep
std
fisttps
pop
sbb
and
lret
mov
cmpsl
lret
ss
hlt
icebp
push
cli
rcrl
xchg
lods
cmp
insl
arpl
sbb
sub
mov
or
pop
repnz
push
sub
jnp
push
scas
mov
push
inc
pop
and
add
xrelease
das
daa
push
push
push
push
outsb
outsb
icebp
sbb
adc
inc
mov
jns
fwait
orps
mov
adc
cmpsl
ja
lea
inc
jmp
adc
jno
sbb
adc
cs
lret
inc
ljmp
mov
scas
pop
dec
iret
cmp
loop
movsb
cmpsl
pop
rorl
xchg
xor
push
xchg
add
add
flds
fdivl
ret
xchg
aas
mov
xchg
cmpsl
test
pop
or
insb
pop
ret
pop
iret
ss
dec
jb
mov
fs
rcrl
in
hlt
sbb
in
test
xor
fistl
inc
xchg
xchg
daa
sbb
inc
bound
es
aas
add
mov
aas
sti
or
jmp
adc
push
movsb
shll
adc
lcall
in
addr16
mov
pop
imul
or
loop
test
mov
inc
fwait
pop
mov
aaa
hlt
or
push
addb
sti
mov
or
push
mov
lret
movsb
test
imul
cmp
sbb
pop
cwtl
movsb
adc
push
xchg
sti
inc
add
jge
shlb
notb
push
stc
cmc
jbe
sti
adc
mov
jge
lods
jecxz
inc
add
mov
nop
dec
lds
lds
dec
es
push
mov
stc
ret
dec
mov
adc
pop
xchg
xor
cwtl
inc
cld
test
test
mov
xor
cld
pop
pop
adc
dec
xor
cmp
adc
push
mov
sub
mov
push
pushl
bound
or
pop
cmp
jge
shl
mov
mov
fidivrl
pop
jbe
xlat
cmp
add
hlt
pop
ss
loopne
sbb
xor
fwait
or
int
outsl
xchg
movb
in
or
fwait
sbb
iret
andl
loope
repz
or
movsl
icebp
fisubrl
cltd
stos
js
jno
pop
stc
add
sahf
sub
notb
or
mov
push
ds
gs
mov
mov
sahf
inc
sbb
movsl
xchg
add
mov
std
sarb
push
inc
in
mov
mov
xchg
orb
jmp
repz
test
jbe
cmc
les
lock
add
sub
cwtl
pop
and
pop
popa
sahf
testb
fyl2xp1
or
fwait
pop
lods
lods
dec
jo
in
clc
rcl
test
pop
dec
and
inc
xor
test
xor
loopne
mov
ljmp
ljmp
sub
sbb
or
movsb
out
jmp
xor
int
std
dec
daa
mov
orb
add
test
dec
inc
lret
cltd
dec
mov
sub
adc
xor
push
add
jb
pushf
test
mov
xlat
stc
dec
jp
push
inc
xchg
js
cmp
mov
lret
iret
xchg
lahf
mov
jae
jnp
lods
subl
test
andl
imul
and
sub
or
cmpsb
shlb
sti
inc
aaa
pop
inc
lret
ds
fsubl
add
lds
or
adc
push
je
ret
xchg
imul
inc
cmp
and
lock
jecxz
mov
in
mov
fbstp
cmp
push
imul
pop
pushf
inc
xorl
mov
or
mov
inc
std
nop
jge
nop
or
js
and
dec
shll
out
or
int3
mov
pop
add
sbb
push
pop
stc
pop
mov
add
or
jmp
movsl
sahf
stos
cmp
and
es
imul
lret
pop
mov
cwtl
arpl
aaa
ds
pop
inc
fiaddl
ret
sbb
xchg
daa
cmp
dec
push
push
and
or
cmp
and
lods
jg
jno
ficoml
enter
push
fistps
test
fdivrs
lods
movsl
les
xchg
dec
push
or
lret
push
push
sbb
xchg
aam
xchg
or
ljmp
mov
test
push
lea
mov
call
ret
loop
xchg
inc
xchg
mov
push
int3
popa
and
pop
mov
stos
push
xchg
rcll
sub
scas
pop
fidivl
es
iret
mov
dec
jno
or
mov
and
sbb
ret
pusha
push
les
mov
push
jg
and
xor
je
sub
sub
stc
das
in
iret
cmp
cwtl
test
rol
lret
ljmp
test
push
mov
lds
data16
sbb
jecxz
xor
mov
pop
out
sub
out
ror
arpl
sahf
pop
into
xchg
push
jmp
mov
adc
test
pop
dec
or
cld
repnz
rcll
gs
mov
mov
jo
js
push
mov
dec
inc
sbb
stos
pop
adc
ret
in
das
push
jmp
mov
xchg
movsb
add
test
idivb
repz
pop
int3
jl
add
xchg
push
imul
xor
outsb
lret
adc
jbe
nop
cld
rorb
sbb
pop
mov
fwait
pop
popf
push
loop
jb
push
in
cmp
dec
out
aam
xor
mov
pop
sub
sub
repnz
in
push
addb
cmc
fisttps
fs
inc
cmpl
dec
fists
jle
mulb
mov
sahf
inc
push
stos
arpl
aad
xchg
jmp
ljmp
mov
insl
adcb
mov
ret
prefetch
rcl
in
aas
dec
enter
add
shl
mov
cs
std
fists
lret
repz
dec
mov
lods
pop
insl
test
std
pushf
push
cmp
inc
push
test
mov
and
clc
inc
test
test
push
inc
xor
ds
shlb
test
inc
push
out
fildll
mov
push
push
loope
mov
cwtl
or
jl
mov
xor
push
jl
add
pop
jb
jecxz
std
pushf
cwtl
adcl
shrl
mov
mov
pop
and
dec
inc
or
jecxz
sarb
xor
mov
mov
hlt
data16
out
decb
lods
out
fcmovnb
loop
orl
sub
push
ds
cmpsb
inc
adc
divl
in
push
cmpsl
add
mov
icebp
lret
into
cmpsl
push
pop
pop
jb
mov
sub
fucom
sub
inc
imul
jmp
insb
xor
popa
outsl
negb
addl
lds
and
xor
out
movsl
pop
lret
mov
scas
jbe
xchg
pusha
sub
arpl
add
dec
adc
stos
fidivrl
movsl
sub
pop
mov
push
add
push
lods
jecxz
adc
cs
xchg
lret
push
xchg
repz
in
cmp
in
or
and
lock
dec
enter
in
adc
cmpsb
mov
add
sub
push
dec
repz
fdiv
outsl
mov
orb
lcall
cmc
inc
mov
int3
xor
inc
sub
jmp
push
adc
cmp
lock
xor
insl
xor
stos
int3
add
js
fwait
mov
push
sub
clc
int
imul
add
stc
xor
addb
je
sub
sbb
sub
push
sub
out
xchg
stos
xor
mov
jnp
das
inc
hlt
xchg
repz
push
aam
das
dec
mov
ret
pusha
jno
jbe
clc
test
inc
jae
xor
inc
orb
pop
sbb
inc
mov
rcrl
int
push
adc
dec
jp
les
shl
popf
xchg
xchg
push
inc
repz
daa
nop
sub
mov
cmpsb
or
out
cli
in
mov
mov
scas
jns
shll
mov
mov
insb
pop
test
mov
nop
push
dec
xchg
pop
mov
push
add
xor
test
jbe
xor
pop
cli
push
fnstcw
jb
ljmp
xchg
rorb
mov
mov
out
cli
les
push
sbb
popf
jns
leave
dec
into
jmp
testb
addb
push
mov
in
idivl
sbb
fsts
cmpsb
imul
pop
cli
sbb
cmc
sub
mov
add
inc
stc
movsb
inc
xchg
sti
daa
mov
mov
repz
ret
pop
jb
or
push
loopne
sub
outsl
and
icebp
jno
shl
sub
mov
sub
gs
adc
pop
add
mov
inc
es
scas
fstps
adc
clc
mov
rclb
dec
mov
dec
hlt
lds
je
fnstsw
hlt
inc
ja
fwait
jne
lock
bound
clc
cmp
fsubs
jne
and
sbb
jb
or
push
in
push
jmp
push
jnp
jmp
xchg
mov
dec
push
imul
sbb
popf
testl
fs
cmp
or
or
fcmove
xchg
je
out
cmpsb
sub
mul
push
adc
push
test
mov
rorb
xor
xchg
jmp
loop
dec
push
adc
aam
sub
push
fidivs
pop
loop
xchg
in
js
inc
sbb
rclb
xor
in
loop
dec
xchg
in
and
cltd
lds
inc
fistps
enter
xor
sub
fimuls
mov
movsl
mov
and
xchg
aam
pop
cwtl
add
mov
pop
cmp
sub
or
sarb
or
sub
mov
ret
in
inc
inc
call
mov
bound
pop
jo
sub
push
pop
bnd
mov
fwait
stos
jns
icebp
ja
mov
ds
rcrl
lret
push
jecxz
adc
int3
jno
pop
filds
xor
rol
bound
mov
jae
inc
gs
jo
pusha
rcll
out
call
dec
cmpsb
sbb
in
and
sub
xor
lods
sub
pop
int3
cmp
cmp
imul
pop
adc
rcrl
roll
out
dec
aaa
in
mov
movsb
inc
jne
sbb
pop
movsl
inc
clc
movl
std
popf
adc
divl
cmp
int
mov
loopne
repz
xor
cmp
sbb
repnz
cwtl
xchg
loop
in
cmc
xchg
repnz
xor
inc
mov
int
sub
leave
cli
mov
jmp
popf
lahf
push
push
popa
jl
sub
ja
in
xlat
cmp
and
fisttpll
pop
push
cmp
outsb
stc
xor
lods
push
and
cmp
mov
push
and
cmp
notl
sub
xor
inc
pop
data16
shrb
mov
jo
adc
aad
or
mull
xchg
pop
sbb
mov
clc
mov
and
mov
sbb
rorb
sub
xor
ror
gs
or
divb
mov
xor
dec
lret
dec
mov
dec
test
dec
cmp
stc
test
movsb
cmp
sub
pop
sbb
pop
jle
ja
mov
mov
loope
push
mov
push
push
sbb
int
mov
rcrb
sub
out
or
stos
jno
bound
gs
pop
insl
sbbb
ss
lret
fmull
in
inc
jb
dec
test
mov
add
shl
or
into
mov
push
jno
jnp
insl
icebp
fsubrp
rcr
dec
push
push
lret
js
push
popw
movb
rorb
jbe
mov
xor
add
dec
pusha
outsl
test
mov
cs
aas
adcb
aam
cltd
mov
inc
imul
jno
fwait
xchg
les
xchg
in
test
pop
jne
and
dec
pop
int3
in
shl
ret
ljmp
scas
hlt
adc
jp
test
jl
out
scas
cs
dec
outsl
call
xor
mov
push
fwait
sub
jg
mov
pop
out
and
pushf
ljmp
inc
mov
ret
push
cld
push
jl
push
lods
das
sbb
jle
std
clc
cmc
dec
test
rorl
cs
mov
scas
insl
mov
movsl
xor
scas
lods
ljmp
jno
jne
pop
mov
dec
lea
call
dec
insl
mov
sbb
xlat
push
pop
cmp
cmp
jecxz
imul
pop
push
add
les
xchg
fisubs
cs
imul
push
inc
cmp
cmpsb
imul
enter
xchg
cwtl
xchg
adc
mov
cmp
shl
shr
inc
sub
dec
int
cld
push
sub
cmpsl
or
aad
fsts
mov
xchg
jg
stc
pusha
incb
fdivrs
stos
xchg
or
pop
jnp
lock
pop
sub
rolb
out
dec
inc
rcr
adc
xchg
rol
inc
lret
xorl
popa
push
sti
in
ja
jecxz
nop
mov
jecxz
cld
aam
fisubl
je
outsb
mov
add
insb
mov
shl
pusha
dec
mov
sub
imul
in
xlat
repz
inc
and
shlb
jb
cltd
xchg
aas
in
pop
or
mov
jnp
add
aam
mov
pop
mov
sbb
cmp
sbb
sub
or
aad
movsb
lret
push
enter
or
cmp
std
aad
test
popf
dec
xchg
adc
dec
mov
fsubs
dec
mov
cmp
cmp
ss
xchg
or
mov
pop
lret
xchg
jl
inc
lods
mov
rcll
fdivrl
push
mov
sub
add
or
insl
les
sub
mov
inc
mov
loopne
push
push
mov
arpl
lret
fdiv
jl
lods
inc
cmp
imul
jnp
out
cmp
mov
adc
lahf
dec
jnp
xlat
xchg
sub
mov
xchg
loop
pop
sbb
shlb
imul
std
aam
cmove
lods
mov
cmpsl
jnp
adc
push
out
adc
scas
sti
stos
jge
roll
arpl
cmp
dec
rolb
pusha
jl
add
popf
scas
mov
sbb
in
sbb
lods
mov
subl
dec
pop
push
mov
xchg
es
stc
loopne
mov
jg
push
loope
jge
dec
lret
jl
add
nop
push
es
icebp
cmp
sbb
rorb
and
inc
xchg
das
mov
shr
jge
int
test
push
xor
pop
lods
sbb
jle
divb
mov
or
cmp
xchg
cld
mov
xorl
loop
cmp
ja
repnz
dec
mov
inc
sub
loopne
cltd
lea
in
shll
pop
jmp
dec
test
cmp
fildll
fsubl
mov
scas
out
push
repnz
xchg
dec
fcomip
xchg
mov
mov
loope
sbb
fwait
je
sub
pushf
push
jg
fsubrp
addr16
rcll
ljmp
add
cmc
adc
mov
jae
sub
and
mov
pop
fsub
inc
cmc
sarl
adcl
ds
mov
or
fstps
xlat
sub
mov
sbb
adc
and
jecxz
push
int
stos
pop
dec
sarb
stc
cmp
call
cmp
mov
insb
pop
mov
mov
test
aaa
stos
subl
test
xchg
xchg
mov
movsb
push
add
hlt
dec
and
pop
or
mulb
sub
icebp
adc
jo
inc
iret
add
cmp
fmulp
sbb
out
loope
pop
aam
lcall
imul
clc
xabort
rcll
jno
jne
and
mov
leave
xchg
mov
mov
push
aad
cmp
ja
insb
pop
test
shll
stos
scas
adc
dec
test
push
insl
sbbl
invd
div
mov
xor
jne
push
pop
lods
movsl
add
into
xor
sti
outsb
fsub
iret
dec
mov
in
cli
aam
hlt
divb
dec
jno
cmp
sub
mov
mov
lret
cmp
idivb
scas
pop
cmp
clc
imul
das
push
cmp
mulb
fstpl
nop
jle
into
or
test
inc
mov
rcr
sbb
outsl
dec
ffree
lea
push
push
and
imul
push
push
push
stos
xchg
pop
sahf
sub
xchg
lea
movsb
inc
insb
pop
dec
xchg
stos
call
flds
xchg
jmp
lahf
movsl
rclb
dec
jmp
cmp
and
loopne
add
popa
add
fldl
out
pop
hlt
mov
enter
es
xchg
mov
hlt
mov
xor
lods
stos
dec
daa
mov
leave
arpl
mov
xchg
and
or
inc
dec
dec
cmpb
xor
dec
adc
inc
and
push
out
push
test
mov
cmp
mulb
mov
out
pop
adc
pop
aam
jo
mov
call
in
fwait
test
mov
push
movsl
loop
aaa
inc
inc
and
pop
dec
lahf
push
mov
push
mov
ljmp
daa
rcrl
popf
fsubr
xchg
daa
pushl
rcrl
std
lcall
lcall
push
out
ret
xchg
clc
dec
add
outsb
dec
jle
jae
fildl
sbb
loope
add
or
fs
push
or
add
push
ds
sbb
jecxz
sub
or
adc
clc
xor
fdivl
and
xchg
test
jle
int3
jmp
and
xchg
dec
sbb
xor
xor
pushf
push
cmp
mov
or
cmp
arpl
xchg
push
stc
test
jg
pop
aam
mov
xor
inc
ss
pop
xor
lods
out
daa
cmp
aad
push
jle
jne
push
in
addr16
mov
cmp
repnz
fisubl
jp
dec
lret
cmp
pop
inc
pop
mov
popa
xor
add
pop
shlb
sub
ja
mov
out
arpl
loope
loope
stos
pop
jg
aad
movsb
mov
mov
jmp
cmp
dec
aam
imul
jecxz
stos
jp
cmp
fsts
mov
dec
cld
bound
iret
fdivrs
stos
mov
outsl
sub
fbstp
mov
addb
sbb
shlb
mov
negl
pop
or
lock
dec
mov
push
or
sub
xchg
sub
lods
ret
stos
fldenv
or
lea
ficompl
out
push
cmp
xchg
mov
or
and
push
cld
fidivl
ret
out
cld
adc
rorb
mov
int
and
faddl
sbb
adc
pop
mov
inc
std
mov
or
fcmovnbe
sub
xor
mov
out
jns
fnstenv
data16
and
mov
inc
aad
cmp
inc
mov
pop
repnz
bnd
js
add
andb
xchg
test
dec
lcall
not
and
xchg
je
dec
scas
or
or
sub
ficoms
je
ret
push
leave
hlt
mov
sub
sahf
cmpsb
mov
cli
jl
sbbl
lcall
outsb
lods
pop
andl
mov
test
push
add
gs
pop
mov
xchg
cwtd
mov
addb
cmpl
stc
lret
dec
xor
mov
lret
xchg
pop
addl
cmp
test
push
dec
jae
in
inc
clc
popf
mov
lcall
pop
push
sbb
pusha
sub
cli
les
adc
call
rcl
push
jecxz
xor
jb
add
jns
jge
aam
enter
fsubl
sbb
xchg
sub
add
push
out
rol
stos
mov
jmp
insb
test
cmp
inc
push
decl
sti
and
adc
cmp
loop
sahf
mov
or
jge
test
mov
ret
movsb
xchg
popf
add
nop
stos
pop
xor
inc
int3
and
push
ljmp
aaa
xchg
stos
sbb
addr16
jo
mov
stos
dec
in
ret
mov
or
fnstenv
cmpsl
push
imul
xor
adc
mov
fisttpll
fcmovnbe
hlt
aam
sti
sub
das
testb
pop
xor
les
inc
dec
dec
jmp
shl
pop
mov
mov
mov
cltd
mov
pop
inc
ja
lahf
dec
aad
ja
das
cmp
xchg
int3
cmp
sbb
jae
sbbl
sarl
add
push
lret
mov
xchg
xchg
or
jg
js
jp
or
mov
pop
mov
push
addb
mov
push
scas
std
aad
jecxz
pop
call
pop
add
aas
scas
mulb
dec
adc
dec
fldenv
pop
inc
in
pushl
mov
adc
pusha
sbb
sahf
lcall
sbb
pop
mov
lret
enter
mov
push
mov
leave
pushf
pop
daa
and
test
push
jecxz
jge
xlat
or
int3
sti
scas
dec
fildll
xchg
fisubrl
xchg
data16
out
add
pop
push
pop
lret
mov
movsl
jmp
jp
lods
stos
push
popf
inc
sbb
out
cwtl
repz
mov
insl
lret
int3
xchg
mov
mov
xchg
xchg
cmpsb
lods
dec
out
mov
xlat
add
dec
mov
push
lret
pop
movsl
mov
push
icebp
sbb
or
and
jnp
mov
mov
movsl
pushw
adc
gs
jns
add
out
lcall
fadds
or
or
sarl
loop
in
sbb
negb
outsb
xor
fldl
adc
repz
xchg
sbbl
xchg
fs
lds
dec
lea
out
mov
pop
lods
pop
loop
jb
mov
xor
shll
adc
insl
cltd
inc
divl
push
dec
dec
imull
add
scas
pop
mov
fdivs
and
outsl
xchg
mov
mov
test
pop
idivb
movsl
rcl
xlat
and
mov
enter
sahf
xchg
jge
and
sbb
xorl
mov
mov
pop
subb
loop
pusha
iret
addr16
movsb
add
xchg
test
or
dec
push
mov
jns
stc
mov
pop
dec
stos
mov
pop
pop
add
jg
adc
jnp
out
xchg
or
inc
nop
pop
adc
aam
ja
sub
mov
cmp
gs
jns
sbb
lahf
push
jl
xor
sub
loope
insb
dec
jmp
outsb
inc
lcall
xor
and
jp
xor
test
dec
dec
xor
cli
cmp
data16
xchg
imul
imul
jle
arpl
mov
mov
int3
pop
mov
fsts
push
mov
jge
pop
or
pop
xlat
dec
mov
add
mov
cmc
cmp
sbb
pop
stos
dec
jg
lods
adc
pop
inc
inc
repz
stc
and
fistpll
dec
mov
sbb
imul
push
cltd
sarl
int
hlt
xchg
mov
mov
scas
add
je
leave
adc
mov
sbbb
das
fdivs
xorl
inc
je
and
lahf
jp
xlat
jae
hlt
or
arpl
and
je
mov
adc
sbb
dec
les
jl
test
and
shl
dec
in
stos
out
mov
adcl
dec
pop
imul
clc
xorb
fs
lret
pop
and
pusha
aad
pop
jns
scas
mov
cwtl
sbb
jb
dec
cmp
in
mov
sub
dec
xchg
dec
in
cs
fiadds
pop
push
push
aad
cmp
fsts
xchg
and
and
jne
ss
lods
pop
cmp
nop
in
or
sub
jge
mov
arpl
jl
jae
mov
jmp
xor
xor
add
es
xor
repnz
inc
fnstcw
add
sahf
push
clc
sub
popf
pop
mov
imul
in
orb
adcb
inc
pop
pop
inc
movsl
or
je
cmp
dec
sbb
cmp
add
inc
stos
sbb
xchg
gs
cltd
push
jecxz
outsb
mov
push
jmp
dec
stc
mov
pop
xchg
int3
pusha
sub
xor
xlat
pop
pop
fwait
add
je
xor
sbb
mov
repz
out
sbb
sarb
hlt
clc
cmp
push
jb
sbb
stc
je
mov
in
sub
mov
ds
pushf
sub
cmp
rorb
cmp
dec
xchg
mov
adc
mov
sbb
out
or
sub
fdivl
dec
fiadds
add
or
cmp
ja
jmp
jbe
push
or
or
bound
pop
lret
shlb
jmp
les
pushf
add
clc
jmp
sub
xlat
cmpsl
jge
push
push
rcrl
jns
pop
mov
sub
ja
ss
mov
rolb
pop
jne
cmc
or
rorl
out
and
dec
rcll
or
adc
pop
divl
rorb
mov
mov
xchg
push
push
mov
xchg
hlt
cmp
mov
mov
cmp
shl
iret
nop
aaa
inc
cmc
fistpl
pusha
inc
mov
and
int
ret
dec
mov
inc
lea
pop
fwait
mov
mov
inc
or
and
mov
ds
in
jns
aas
xchg
outsl
ret
out
inc
roll
jae
inc
fisubrs
cmp
push
and
test
notb
mov
lea
xor
outsl
mov
xor
mov
sub
cmp
add
xor
orl
cmp
inc
call
ds
xchg
adc
gs
inc
mov
cli
or
mov
mov
cld
arpl
push
mov
mov
call
fdecstp
xchg
xor
push
cli
in
inc
xchg
mov
lahf
push
pop
lret
daa
sbb
mov
adc
xchg
das
or
pop
mov
repz
fcmove
divb
pusha
in
mov
or
mov
scas
pop
inc
jne,pn
popa
xor
stos
jp
pop
iret
hlt
pop
add
fs
mov
icebp
lret
cmc
insl
call
add
xchg
mov
testb
xchg
push
mov
lods
mov
push
repz
cwtl
xchg
aam
fwait
insl
adc
aas
test
pop
repnz
inc
inc
jecxz
out
inc
mov
fdiv
cmp
mov
in
scas
push
imul
xor
inc
sub
push
out
mov
mov
or
test
rcrl
cs
sbb
sbb
push
iret
sub
test
push
xor
jbe
fiadds
mov
std
mov
icebp
sbb
repz
push
add
and
jmp
mov
mov
sub
arpl
out
pop
movsl
mov
out
test
mov
ss
insb
or
nop
mov
push
or
jecxz
cmp
movsl
xchg
popa
scas
pop
ret
pop
lods
pusha
roll
pop
jmp
test
or
ss
xor
testb
mov
mov
jle
mov
add
xchg
dec
popa
and
pop
add
pop
outsl
mov
sub
adc
pop
mov
repz
sub
adc
push
sub
and
inc
jno
and
push
xchg
popa
sbb
cltd
icebp
mov
ds
out
cmp
sbb
push
cmp
mov
mov
loop
dec
shrb
int
push
les
cmpb
adc
push
je
lods
call
push
sub
jns
cltd
xor
aaa
movsl
cmc
sub
jae
popf
dec
xchg
xor
cld
repnz
dec
sub
test
insl
mov
inc
daa
cs
and
bound
mov
push
testb
cmp
xchg
mulb
test
pop
jmp
mov
jmp
fnstcw
mov
sbb
xor
fwait
lods
pusha
daa
es
cmc
and
jg
jae
pop
sarb
or
outsb
rolb
adc
enter
adc
push
jecxz
push
sub
and
out
aam
inc
xchg
stos
sub
rcrl
push
out
sub
adc
push
mov
jl
jmp
push
xchg
mov
push
dec
fldl
repz
enter
push
stos
test
pusha
out
or
inc
je
mov
lahf
sarl
loopne
clc
mov
and
push
or
jle
xor
add
mov
loope
add
jp
xlat
shlb
or
sbb
or
mov
in
in
jb
in
repz
jnp
push
cltd
mov
mov
notb
dec
les
sar
or
fsin
pop
xlat
pop
cld
lds
fdivrs
ficompl
jne
cmp
push
mov
sub
mov
jecxz
xor
daa
cli
dec
inc
jge
mov
daa
mov
lret
jo
add
in
jb
add
cltd
xchg
cmp
je
inc
sbb
and
int3
pop
daa
pop
and
sbb
clc
mov
movsl
leave
mov
pushl
add
jnp
sbb
lret
xchg
shlb
jb
cmc
mov
mov
jns
jl
pop
fistl
pop
xchg
mov
sbb
adc
iret
mov
adc
inc
lret
inc
scas
jg
sub
adc
push
push
les
cmpsl
lcall
inc
mov
out
dec
xor
jns
sbb
into
mov
call
fcoms
pop
repnz
rcrl
and
xchg
ja
pop
enter
rcl
leave
fdivrs
inc
pop
iret
lea
outsb
adc
sbb
aam
xchg
jae
loop
dec
jg
jmp
dec
add
sub
push
or
push
sahf
mov
xchg
aam
sub
daa
mov
js
and
in
sub
dec
xchg
sbb
push
stos
stc
sub
push
adc
inc
subl
aad
mov
les
loop
in
enter
lock
xchg
sbb
xor
call
pop
pusha
test
push
xchg
xchg
icebp
rorb
xchg
aam
mov
daa
jo
push
movsb
in
repz
inc
testl
pop
jae
xchg
cmpsb
mov
xchg
sub
jns
loopne
pop
iret
das
into
icebp
test
adc
leave
mov
mov
punpcklbw
push
sahf
pop
push
lea
repz
sub
aad
frstor
ds
mov
into
mov
sub
popf
inc
jno
mov
sti
mov
test
inc
jno
xchg
cmp
movsl
subb
inc
std
mov
jle
xchg
mov
sub
scas
loope
xchg
sbb
outsb
cmp
leave
rep
movsb
cmp
and
pop
lahf
fwait
pushf
loop
test
jl
xchg
jmp
mov
pop
jp
dec
mov
adcl
adc
mov
or
cmpsb
sti
pop
xchg
test
test
mov
jle
adc
add
jo
and
aas
push
imul
and
jecxz
fsubrl
add
pop
jmp
subb
imul
ljmp
scas
cmp
rcrb
mov
fimuls
dec
and
dec
mov
push
lcall
fmul
inc
je
nop
fs
out
xor
out
mov
inc
cmpsb
mov
out
lock
adc
ds
jno
fstl
mov
test
pop
xchg
fisttps
mov
imul
sbb
xorl
xor
cmp
cmc
stos
out
lock
jae
cld
xlat
xor
aas
imul
jae
dec
repz
mov
inc
mov
repnz
mov
das
jge
mov
mov
mov
xchg
in
xor
das
and
fisubrs
jecxz
sbb
ficompl
sbb
rol
lds
test
cmp
addl
icebp
mov
pop
add
lods
imul
sub
repnz
xlat
pop
sub
or
bound
xchg
and
in
inc
int3
add
fnstenv
push
enter
pop
add
out
icebp
lods
xchg
cs
imulb
in
roll
sbbb
lahf
xchg
out
jno
rcrl
fdivrl
sarl
stos
movsb
pop
adc
adc
push
vxorps
jecxz
sahf
jmp
mov
add
mov
je
add
xchg
adc
jge
outsl
xor
jge
push
out
pop
ficoml
ret
pop
xchg
in
fstps
les
repnz
int
push
pushf
test
jle
std
mov
pop
mov
out
loopne
loop
jge
ret
fistps
clc
and
jo
popf
push
add
cmp
add
lahf
and
push
add
fwait
jne
lock
insl
add
cmp
pop
enter
stc
in
testl
or
add
fsubs
leave
pslld
loop
mov
lea
pop
ficompl
pushw
pusha
cmp
repnz
jecxz
lds
jmp
imulb
push
arpl
ficoms
shrb
stos
mov
cltd
pop
outsl
stos
cmpsb
mov
out
cmp
cmc
lea
and
es
mov
in
push
inc
xadd
mov
pop
add
rcr
pushf
jo
pop
hlt
mov
popa
add
loop
jae
jmp
add
jl
pushf
nop
movsb
loope
iret
pop
sbb
ret
icebp
ficoms
dec
es
mov
test
pop
mov
add
mov
mov
loope
test
push
sti
mov
mov
out
adc
cmp
stc
leave
loopne
mov
push
mov
shl
flds
xchg
andb
adc
or
imul
dec
fdivs
sbb
loop
repnz
push
adc
and
fnsetpm(287
or
stc
mov
in
fs
icebp
sbb
neg
stos
ljmp
js
nop
sub
loop
add
imul
add
mov
or
iret
cmp
in
clc
test
es
data16
std
ret
push
jmp
fld
sub
shrb
jne
jbe
jl
dec
in
mov
inc
popf
and
add
pusha
mov
ds
cld
sahf
sti
inc
inc
cmpsb
xchg
in
jns
out
mov
hlt
leave
adc
jmp
or
sbb
decl
jb
inc
jns
adc
ret
shl
fbstp
sti
adc
jb
in
cmp
sbb
outsl
jo
or
lds
mov
cmpsb
and
mov
sbb
pop
icebp
int3
insb
iret
adc
vmwrite
aaa
call
loope
std
push
pop
and
xor
adcl
das
mov
out
repz
push
enter
mov
cmp
hlt
sbb
rcrb
pop
ljmp
cmp
cmp
sti
ja
cmpsb
insb
fldenv
in
testb
lret
inc
std
fsts
stos
stos
fxam
sub
jnp
adc
icebp
and
rol
xor
aaa
mov
dec
lcall
loopne
pop
pusha
lret
imul
add
inc
and
aad
fistps
dec
sti
sbb
jno
push
adc
lods
pop
imul
jae
clc
mov
and
xlat
sub
ret
xchg
cmpsl
in
iret
inc
jb
lock
out
cmp
jmp
or
clc
loop
xlat
mov
xor
es
push
gs
pop
addb
imul
pop
fcmovnb
xchg
inc
push
cmp
fists
hlt
scas
mov
rcll
cwtl
add
in
push
xchg
fstpt
dec
push
popf
push
sbb
or
mov
mov
sbb
or
xor
inc
pop
stos
inc
push
mov
inc
aas
leave
stos
mov
fbld
xor
jle
in
out
or
daa
or
inc
mov
mov
xlat
test
ss
adc
pop
mov
add
jl
cmp
or
dec
xchg
flds
inc
nop
cmp
lret
inc
inc
dec
push
test
add
push
sbb
mov
lods
jmp
dec
cmp
ds
xor
mov
and
jb
lahf
sahf
dec
mov
ljmp
add
or
cmp
xchg
dec
adc
int
lock
push
xchg
mov
jno
inc
push
xchg
movsl
aad
aas
fadds
fmuls
aam
sub
add
and
and
xor
push
out
pushf
inc
sbb
mov
inc
dec
mov
adc
in
pusha
mov
add
add
aam
ds
add
cltd
movl
nop
das
adc
add
cs
cmc
cmp
push
pushf
dec
pop
fbstp
and
cmp
xlat
add
push
js
mov
adc
add
adc
lock
inc
jo
push
pop
mov
gs
cmp
and
pop
scas
out
xlat
push
ja
popfw
mov
dec
jno
addr16
xchg
ljmp
fwait
cs
scas
mov
insl
or
in
cmp
push
push
stos
test
and
inc
pop
cmp
mov
or
sub
sbb
sbb
jnp
adc
imul
dec
or
xchg
fimuls
test
dec
cwtl
rcrl
cmpsb
sbb
add
jbe
pop
xchg
cmp
mov
and
mov
pop
hlt
jnp
xor
ja
test
fstl
jae
mov
out
cwtl
stos
push
adc
mov
push
call
jg
mov
sbb
or
faddl
js
lret
test
js
mov
pop
cmp
shrl
mov
cld
sub
imul
and
or
xchg
aas
imull
rcrb
sbb
imulb
push
or
and
inc
mov
test
loope
inc
fidivl
pop
mov
push
lock
xor
inc
repnz
andl
ljmp
cmpsl
xchg
ret
dec
mov
outsl
cmp
mov
push
xor
or
lcall
cmp
negb
lea
push
sbb
out
inc
pushw
push
push
or
stc
xor
sub
es
lods
dec
sub
aas
push
cmp
out
ljmp
dec
mov
fistps
int3
jne
adc
loopne
cmp
mov
jmp
mov
popa
push
insl
adc
xchg
fs
scas
shl
xchg
addr16
pop
push
cmp
adc
xor
cmp
and
fwait
mov
fs
adc
nop
js
inc
ljmp
lods
fldenv
enter
dec
icebp
dec
mov
jmp
cwtl
sub
cmp
add
stc
xchg
data16
pop
outsl
pop
mov
dec
or
mov
loop
xchg
fistl
or
jb
xor
mov
mov
pop
fisttpll
sti
jmp
fisubrl
je
shrb
lret
mov
xlat
icebp
jno
andb
sub
inc
cmpsl
std
in
sub
int3
lds
mov
lods
pop
into
push
and
or
js
add
pop
ljmp
std
dec
outsl
and
rcr
jecxz
mov
lock
add
sbb
sahf
enter
and
pushf
lock
jns
sub
xchg
in
mov
mov
xchg
inc
or
and
lods
jmp
jae
xor
dec
pop
push
sbb
fwait
imul
sbb
inc
cmc
inc
cli
xchg
inc
dec
cmc
push
std
lcall
sbb
cmp
inc
xchg
xchg
inc
inc
inc
push
cmp
mov
or
push
xchg
cmp
insl
jg
sub
popf
stc
rclb
aas
mov
aad
adc
pop
data16
jns
adc
sub
lcall
mov
mov
xor
dec
fsts
mov
ja
loopne
add
mov
push
push
pop
adcl
xor
lea
inc
int3
adc
dec
mov
notl
test
and
sti
xorb
aam
pop
xchg
jl
push
lods
and
lock
pusha
mov
xchg
movsl
testl
repz
jmp
push
jmp
loope
jge
jne
jg
aam
pop
aam
cs
clc
out
dec
div
imul
shl
mov
jno
aas
mov
xlat
push
stc
lock
pop
mov
sub
cmc
sbb
in
out
andl
fwait
loopne
aaa
pmaxub
cmc
int3
add
inc
jp
mov
lcall
xor
and
xchg
and
scas
cmpsl
into
pusha
xchg
xor
push
sub
push
clc
shrb
cld
inc
daa
test
das
ret
or
jnp
lods
and
testb
push
out
dec
mov
ds
and
into
loopne
mov
sbb
inc
jb
mov
mov
xchg
push
push
ja
loope
pop
es
test
xchg
rcrl
jl
mov
fnsave
add
lret
lock
gs
dec
movsb
adc
xchg
or
sub
leave
sahf
pop
inc
iret
loopne
lahf
popa
xchg
popf
je
inc
enter
adcl
sub
dec
jo
push
xchg
test
sbb
push
xor
mov
out
arpl
add
push
cmc
faddp
xchg
sbb
pop
aad
mov
imul
jb
ficoms
push
jecxz
sbb
negl
mov
in
nop
imul
xchg
pusha
mov
imul
cld
das
cmp
in
aaa
adc
jbe
dec
pusha
loope
pop
in
insl
mov
bound
cmpsb
dec
les
ss
mov
pop
pop
shl
pop
out
push
jecxz
mov
mov
enter
inc
lods
push
mov
les
or
cmp
xor
or
arpl
mov
xlat
cmp
or
sub
jo
inc
aas
addps
lret
cmpb
aaa
imul
dec
rolb
pop
push
subb
iret
jns
dec
gs
mov
test
popa
je
enter
jle
cmpsl
jae
jns
scas
push
addb
das
lock
je
mov
pop
lea
or
sub
mov
or
jl
pop
jle
sub
mov
dec
adc
jbe
into
mov
push
movsb
sti
sbb
gs
add
lods
idiv
repnz
push
popf
pop
mov
movsb
stos
fisttpll
and
cmpsb
rcll
cmp
xchg
popa
pop
stc
or
sti
adc
adc
jo
xchg
xlat
int
mov
imul
jnp
inc
out
call
inc
out
xor
test
xchg
sahf
cmp
inc
stos
ds
inc
fildll
sub
mov
nop
js
jge
cmp
push
mov
xchg
in
in
imul
xchg
icebp
inc
imul
cwtl
add
roll
std
out
fnstcw
push
push
xchg
push
in
loop
xor
stos
cld
loopne
js
inc
imul
clc
jmp
sbb
pop
cmp
add
call
inc
aam
rol
aam
repnz
mov
std
adc
lcall
adc
xor
lahf
mov
or
stc
push
adc
ljmp
push
ljmp
out
rol
movb
push
xlat
push
lret
pop
sub
enter
std
pop
into
shr
cwtl
in
iret
lea
fadds
jnp
xlat
popa
mov
out
mov
push
in
xor
in
insl
mov
jle
fs
xchg
pop
test
jns
sub
mov
cmovne
sbb
dec
test
insb
sahf
cmpsl
stos
jnp
lahf
jmp
mov
jbe
in
sbb
movb
pop
lods
addl
in
sti
out
mov
aam
xchg
scas
cmc
ficoms
xchg
sti
mov
cmp
movsl
inc
stc
xor
xchg
dec
leave
out
xor
movsb
sar
repz
sub
insl
hlt
inc
lcall
jne
mov
out
andb
mov
or
adc
ja
notb
and
mov
push
inc
xor
fisttps
outsl
adc
sbb
jmp
or
pop
mov
xchg
and
dec
inc
out
inc
sub
jl
mov
bound
lret
lds
xchg
sarb
jp
pop
in
fdivrl
xchg
lret
push
loop
mov
jb
xchg
call
bnd
fisttpl
fldt
loop
enter
add
adc
pop
lock
mov
movsb
insb
mov
scas
inc
cld
inc
add
icebp
push
je
dec
inc
addb
jne
inc
xor
xchg
mov
imul
lock
clc
sar
jmp
fldcw
add
jne
cs
fwait
mov
daa
mov
mov
push
xchg
fwait
outsl
in
mov
loopne
mov
fwait
sub
shl
mov
aaa
sti
inc
push
ja
mov
cltd
push
movsl
xchg
jae
mov
inc
arpl
inc
int
sub
adcb
sbb
lahf
dec
adc
ja
loop
pop
bound
je
decl
push
test
aad
add
scas
das
push
push
inc
clc
popa
fnsave
inc
sub
cmc
movsl
out
fsts
push
add
and
sahf
test
icebp
pop
mov
push
jbe
mov
shrb
repz
push
popa
inc
ds
lcall
cmp
into
push
pop
or
push
add
data16
ss
or
shlb
pop
out
popa
dec
mov
pop
test
out
mov
repnz
pop
mov
push
xchg
and
aad
int
or
xor
int3
or
mov
adc
or
aam
stos
clc
pushf
ss
jae
stc
jge
dec
dec
adc
mov
add
add
pusha
xchg
movb
in
sub
inc
scas
adc
jb
dec
push
arpl
out
push
mov
adc
or
loop
pop
jmp
sbb
jne
lahf
push
out
loope
sub
fcomip
sbb
or
or
xchg
xchg
aam
mov
sbb
pop
std
push
cmp
sbb
ficoms
lods
pop
mov
xor
xchg
ret
mov
hlt
push
in
aaa
dec
fcompl
add
rolb
mov
clc
mov
popf
ret
ljmp
scas
scas
fdivl
jge
in
mov
ret
sbb
ds
shrb
test
sub
shrb
push
call
into
ja
dec
or
sahf
int
sbb
xchg
add
out
push
and
leave
cmp
pop
lods
xchg
sub
es
xor
stos
adc
mov
adc
xorl
sbb
dec
mov
pop
cmpsb
adc
xor
pop
int3
daa
push
cmp
dec
push
std
arpl
insl
scas
inc
lahf
adc
mov
lret
push
in
insb
dec
inc
aas
cmpl
xchg
and
dec
mov
scas
jnp
lret
aam
jge
cltd
fdivl
leave
cmp
add
repnz
inc
fnsave
pop
mov
addb
jmp
call
imul
xchg
add
mov
int3
jg
or
movsl
mov
mov
sub
icebp
notl
loope
mov
repz
push
push
movsl
ss
test
sahf
das
cmpsb
jp
mulb
ss
sbb
dec
sub
push
aam
add
loop
into
jae
cmp
dec
lds
adc
push
sbb
sbb
ret
mov
push
xor
fs
add
jp
js
jns
jno
ja
lds
loopne
jl
lret
dec
sbb
mov
xchg
inc
sub
stc
mov
mov
dec
js
hlt
xchg
outsb
dec
outsl
and
popa
mov
dec
mov
inc
jbe
lret
repnz
fdivrs
push
int3
and
ljmp
sub
lret
fsubrs
cmpl
ficoml
adc
mov
push
out
into
xchg
fstps
mov
sahf
scas
aam
arpl
xlat
jne
pushf
jno
push
sbb
movsb
fisttpl
adc
mov
and
push
lret
pop
or
fcoms
adc
imul
stos
gs
shlb
jb
ret
or
cmpxchg
mov
lret
adc
call
mov
stos
inc
stos
test
pop
pop
inc
adc
lods
push
sbb
mov
cwtl
cwtl
inc
fisttpll
jae
std
mov
fwait
push
mov
xor
cli
lds
and
ret
inc
jb
and
jle
aam
ret
and
push
cmpb
ja
xor
jno
lret
loopne
mov
lcall
insl
sahf
scas
jnp
fxam
es
aaa
lock
inc
mov
jmp
and
or
or
shlb
cmp
das
mov
sbbl
push
mov
inc
fildll
nop
addr16
aas
jns
sahf
imul
adc
in
xor
out
cmpsl
imul
jmp
ds
xor
fbstp
frstor
xor
mov
cmc
push
dec
push
adc
fldl
xor
int3
inc
mov
cmp
push
cmp
add
sub
mov
cmp
add
pop
jecxz
insb
jae
fidivs
dec
mov
jno
push
dec
sub
cmp
popf
mov
repnz
jge
xchg
xchg
sbb
outsb
xorl
std
stc
fsubrs
mov
lahf
dec
mov
orb
cs
mov
add
bound
push
pop
cmp
dec
popl
xchg
inc
jns
cli
xor
test
mov
sbb
nop
adc
fadds
das
leave
dec
inc
pop
lret
adc
xchg
jl
lahf
mov
das
stos
lret
push
adc
or
cld
ds
mov
fmuls
jb
sbb
cmp
mov
clc
dec
je
or
jg
add
out
cli
out
sbb
push
mov
movnti
ror
std
arpl
sbbl
sbb
loope
inc
jg
mov
mov
xchg
rcll
out
aad
mov
test
lahf
and
push
mov
dec
xchg
xchg
inc
insl
pop
and
stos
test
jge
jmp
xchg
sti
arpl
jle,pn
mov
fstpl
enter
push
or
cld
scas
rcrl
rcrl
cmp
jg
adc
ret
aam
push
jns
fistpll
mov
mov
push
shr
jecxz
mov
sarl
repnz
mov
in
push
pusha
jg
xchg
inc
call
in
in
mov
or
xor
pop
mov
adc
jbe
lret
testb
add
add
testb
leave
mov
pop
aaa
xor
pop
mov
test
or
pusha
std
cmpsl
push
insb
xor
xlat
sub
inc
dec
dec
arpl
xchg
push
jecxz
xor
mov
icebp
push
inc
mov
loope
mov
pop
pop
mov
es
lcall
nop
or
jmp
out
orl
xchg
adc
in
xor
push
mov
cld
int3
cmc
mov
xchg
pusha
pushf
cmp
lock
or
xchg
xchg
jmp
andb
push
jb
call
xor
pop
jl
pop
jl
jo
pushf
pop
movsl
sub
fwait
or
test
gs
outsb
fisttpl
add
cmp
jl
jl
mov
mov
cltd
adc
dec
adc
mov
xchg
add
sbb
pop
sbb
add
enter
sbb
into
mov
pop
fwait
xchg
mov
jge
pop
or
adc
ss
mov
adc
pop
jbe
sub
mov
fmull
in
ss
dec
mov
insb
jnp
in
ljmp
andb
pop
cmpsl
jno
mov
aam
dec
rolb
test
cmp
mov
push
dec
pop
xchg
clc
test
xor
test
mov
rcrb
xchg
dec
out
mov
loopne
mov
loopne
popf
add
or
hlt
out
inc
cwtl
ds
repz
sub
dec
notb
rcll
in
xchg
gs
pop
mov
dec
aaa
fisttpl
sub
push
push
leave
out
std
loope
push
negl
out
lods
inc
enter
jns
add
cmp
jbe
sub
adc
adc
inc
pop
mov
xchg
imull
xchg
xchg
icebp
std
clc
mov
push
jge
mov
xchg
sbbb
lcall
or
imul
push
jle
jge
sahf
push
ret
ljmp
lret
ret
jno
mov
push
xchg
insb
mov
enter
mov
shr
fistpl
loope
adc
push
mov
sbb
cmp
pop
or
push
mov
mov
pop
cmp
pshufw
pop
outsb
ret
push
in
lock
and
jo
movl
aaa
je
mov
scas
test
xchg
sahf
xor
push
arpl
mov
pop
mov
in
lcall
inc
xchg
loope
add
add
fcmovne
sar
mov
loopne
xchg
insl
stos
scas
rcrb
into
mov
lea
push
aad
dec
sub
sub
cmp
ss
mov
aam
add
shl
mov
push
xor
inc
adc
jb
mov
xchg
les
pusha
or
sub
loopne
fwait
clc
lret
leave
pop
push
pop
and
add
cli
aas
mulb
fdivrs
movsl
jne
or
fs
in
ds
sub
testl
push
pop
mov
lcall
movsb
ljmp
and
push
ds
loopne
imul
add
daa
inc
in
pop
push
pop
or
add
pop
cmc
push
inc
in
xor
mov
jo
push
inc
stos
loop
mov
adc
xchg
jmp
or
jmp
adc
cwtl
int3
adc
push
inc
repnz
sbb
pop
insl
popa
sub
and
mov
ret
data16
or
cmp
mov
adc
sarl
mov
cmp
jl
mov
std
sbb
call
pop
ja
js
cmp
push
or
int
mov
lcall
mov
lods
sbb
enter
lds
push
popf
test
sub
in
pop
push
jg
daa
push
ror
jmp
pop
int
mov
mov
imul
ret
in
xchg
out
outsb
adc
mov
add
in
fwait
xor
mov
cmpsb
scas
sbb
lret
mov
jnp
inc
xor
test
or
dec
mov
push
lea
jl
cltd
inc
push
shll
sub
aas
ret
or
fisubs
inc
xor
or
lret
icebp
pop
test
scas
push
sbb
adc
int
std
icebp
mov
xor
stc
lret
decl
fs
rcrl
pop
lea
mov
cmc
mov
test
subb
ss
jnp
cs
in
push
jo
aam
ja
mov
in
cmpsb
pop
adc
inc
pop
jbe
sbb
pop
adc
fistpl
jo
adc
cmpsb
pusha
sbb
jle
ret
lret
pop
loop
aas
test
pop
cmc
stc
iret
test
cmpsl
mov
xchg
lret
popa
stos
xchg
les
adc
mov
popf
or
push
cmpsb
dec
inc
div
mov
mov
or
cmp
push
push
test
out
jecxz
xchg
xchg
dec
add
rcl
xchg
cltd
ja
jecxz
xchg
cmp
or
aas
mov
adc
ret
mov
pop
clc
pop
dec
sbbl
shll
mov
jno
aam
mov
pop
cmp
adc
jae
popa
hlt
pop
call
dec
das
flds
mov
xor
sub
or
xor
popf
mov
mov
repz
jp
sbb
jne
stc
xor
cmpsl
ret
mov
mov
jmp
adc
stos
out
ss
or
outsb
arpl
cwtl
testl
call
cmp
pushf
stos
mov
xchg
cmp
push
imul
jo
push
pushf
mov
cmpsb
lds
imul
outsl
jo
xor
jns
sbb
vprotq
dec
lret
in
shl
mov
stos
aad
or
mov
xlat
and
xchg
xchg
inc
xchg
jge
cmpsl
cmc
adc
out
xor
mov
mov
loop
sarb
sbb
out
mov
in
incl
aam
mov
and
lahf
arpl
cmp
adc
pushf
dec
es
mov
pop
mov
imul
paddsw
loope
sub
cmp
ficomps
sub
ret
push
adc
gs
stos
xor
dec
cmp
scas
sub
stc
lods
daa
jl
insl
js
insl
ret
repnz
inc
in
es
inc
lods
aaa
and
pusha
pop
aaa
mov
dec
xchg
jecxz
push
adc
xor
cs
and
repz
test
xchg
jecxz
jp
xchg
sbb
xchg
aas
add
icebp
sahf
mov
sahf
mov
dec
loope
daa
iret
cltd
mov
in
rcr
pushf
call
mov
aas
cld
icebp
dec
fs
and
and
fidivrs
pop
sbb
loop
xor
cmpsl
jmp
rolb
or
jp
mov
inc
push
mov
xchg
mov
xor
in
ret
add
xor
int3
outsl
stos
gs
and
fs
sub
repnz
mov
outsb
cltd
test
out
push
shlb
sbb
pop
add
insl
push
xchg
arpl
addl
adcl
mov
inc
push
nop
into
pop
popf
cmovo
pop
or
sti
xchg
cmpsb
jp
icebp
je
or
jo
cmc
int3
lea
es
scas
loopne
test
fisttpll
mov
sub
jle
adc
fs
les
jae
pop
pop
cld
or
lret
pop
jb
lret
and
lahf
in
ja
mov
sarb
push
sbb
xchg
aas
out
andl
sbb
mov
or
xor
or
jnp
scas
movsb
jl
cs
sbb
sub
rorl
aam
xlat
pop
dec
clc
cmp
int3
cld
xchg
mov
sbb
test
data16
mov
or
cmc
mov
or
aad
push
aam
test
insl
and
and
inc
adc
test
fadds
out
cwtl
mov
mov
xchg
adc
mov
mov
aaa
ljmp
mov
jg
mov
scas
xchg
bound
loopne
xorl
sub
out
xchg
in
test
popa
in
scas
jmp
or
out
mov
mov
jb
test
mov
dec
add
cmc
cmp
lret
mov
lret
ds
sub
pop
pop
in
xor
fdivr
mov
mov
out
pop
pop
inc
xchg
jno
adc
sbb
pop
jl
dec
xchg
sbb
pop
cmp
ds
push
dec
and
iret
mov
mov
mov
sub
fldcw
pusha
scas
push
adc
sbb
dec
gs
xor
cmp
add
das
push
push
loopne
mov
jecxz
insl
push
mov
scas
pop
mov
mov
out
stos
mov
dec
xor
add
adc
mov
dec
sarb
dec
repnz
add
mov
sbb
add
inc
pop
ljmp
aas
cmc
add
fnstsw
or
in
sub
iret
sub
jbe
test
out
jle
xchg
jmp
sbb
sarl
inc
xchg
or
in
xchg
rclb
insl
lcall
test
cmp
push
hlt
smsw
stc
test
xchg
sub
stc
cmpsb
scas
push
inc
test
rcr
xor
test
daa
sahf
or
or
je
or
pop
repnz
testb
xchg
fildll
cmpb
arpl
icebp
loope
arpl
and
or
imul
sbb
pop
pop
insl
aad
test
mov
cmp
pushl
and
ljmp
call
push
push
jge
inc
orb
shlb
std
data16
adc
fs
inc
cmpsl
movsb
pushf
sbbb
add
daa
movb
jno
imul
mov
das
pop
mov
loopne
aam
inc
mov
xor
or
cltd
mov
jp
roll
dec
sbb
sub
lock
jge
negb
les
add
ret
ja
xlat
rcrb
mov
jne
stos
insl
sub
scas
mov
xlat
dec
ljmp
outsb
or
aaa
cmovno
aad
jecxz
xor
mov
inc
push
orl
popf
xchg
push
xchg
aaa
lods
testb
xchg
stc
jns
cmpsl
leave
shufps
out
mov
jp
cmp
jg
cld
xchg
xchg
hlt
sbbl
xchg
ficoms
mov
cs
jns
or
pop
or
movsb
enter
fldcw
jle
xchg
out
rcrb
pusha
jle
jns
andl
push
or
or
sub
and
mov
push
repnz
dec
lods
stc
sbb
sub
push
movsb
cltd
subb
adc
sbb
mul
ljmp
scas
movsl
fs
adc
cmpsl
daa
into
push
inc
inc
add
outsl
jmp
inc
mov
xlat
dec
repz
scas
adc
jb
sub
popa
ja
stc
subb
rclb
jne
movsb
sub
or
adc
jb
mov
std
stos
cltd
xor
loop
mov
xchg
inc
lea
aam
or
sub
shrl
add
dec
cli
in
shll
pop
add
test
addb
xor
loop
and
mov
insl
fcoms
jp
sbbb
pop
sub
dec
cmpsb
enter
dec
daa
in
pop
hlt
sub
and
inc
movsb
dec
mov
inc
jge
or
add
in
cmp
popa
fdivrs
ds
movsl
or
es
dec
scas
or
or
or
cs
pop
sbb
push
and
inc
fs
repnz
mov
sti
idivl
cld
movnti
fstl
add
dec
push
sbb
stc
or
das
in
mov
nop
fildll
jecxz
jbe
jne
pop
jg
mov
xchg
inc
mov
sbb
pop
in
pop
notl
stos
or
cmp
cmp
fmull
mov
dec
sbb
ss
mov
sti
xchg
push
mov
sub
cmpsl
outsb
xchg
cmc
add
pusha
cmp
and
fildl
sub
lret
mov
in
pusha
push
xchg
sub
inc
ds
mov
loop
push
xor
incl
stos
inc
das
sub
lcall
push
mov
xchg
adc
out
sbb
test
and
sbb
push
test
or
rclb
or
pushf
ja
mov
inc
scas
orb
rol
mov
jg
jl
jp
jle
pop
and
adcl
in
pop
cli
push
pop
mov
repz
mov
rcrb
fxch
push
dec
xlat
js
sub
ljmp
cli
stos
sub
test
lock
inc
mul
test
outsb
push
push
mov
pop
loope
loope
or
negl
call
leave
in
insb
mov
shrb
call
push
inc
andb
mov
insl
pop
in
cmp
mov
inc
or
cltd
bound
cmp
push
xchg
add
imul
mov
push
and
daa
popf
inc
loop
xor
inc
cmpsl
jp
nop
mov
pop
in
mov
dec
adc
xlat
pop
stc
es
cwtl
cli
push
jl
lcall
mov
jns
xchg
movsb
push
fsubl
mov
pop
pop
push
lret
fwait
or
xchg
push
push
ret
sti
neg
mov
xorb
flds
pusha
test
inc
imul
jae
or
dec
test
mov
mov
jne
and
xor
test
cmpsb
inc
lds
arpl
gs
push
sbbb
pop
test
xchg
stos
jno
jnp
mov
shll
arpl
outsl
mov
add
xor
push
rcrb
outsb
clc
adc
jp
push
ret
push
push
pushf
jmp
push
add
ja
popa
pop
enter
mov
jbe
cmp
into
sbb
bound
or
hlt
es
out
stos
mov
sbb
xchg
dec
pop
xor
popf
push
jg
movsl
sbb
es
fnstcw
ret
xchg
mov
push
pop
sahf
xorb
das
fwait
and
xor
aam
mov
dec
adc
adcl
clc
push
clc
sti
xorb
call
ret
add
and
adc
or
int3
xchg
sub
mov
dec
push
xchg
loop
stc
cmc
inc
lock
int3
cmp
xchg
pop
daa
pop
fldl
mov
xchg
cbtw
cmp
sub
ja
mov
into
cmp
mov
fwait
cmp
popf
or
lahf
ret
testl
jns
xchg
or
dec
stc
dec
mov
daa
or
or
shrl
scas
out
cwtl
push
jne
js
insb
or
std
cmpsb
jle
push
xchg
jle
mov
andb
sbb
out
data16
and
xor
or
adc
movsl
mov
xchg
gs
xlat
adc
add
cmpsb
jae
sbb
daa
cmp
in
cmp
pusha
jecxz
dec
mov
xor
test
stos
sbb
adc
leave
cmpsb
sbb
pop
push
jnp
jp
leave
adc
jne
push
sbb
mov
jle
inc
aad
cltd
outsb
outsl
or
fldcw
mov
repz
push
mov
mov
es
in
inc
loopne
arpl
add
sbb
jbe
fbstp
pop
and
sahf
cmpsb
xchg
push
pop
lahf
pop
push
shrl
out
sbb
pop
dec
push
aam
sbb
xor
ficoml
jmp
push
add
push
in
cmp
sti
lcall
repz
xchg
js
push
pop
or
jmp
sti
inc
ficomps
stos
in
jno
dec
and
jmp
mov
das
fists
loope
scas
jne
lret
rclb
cmp
and
jne
popa
sbb
sbb
mov
clc
push
pop
addr16
sbbb
call
nop
pop
ror
mov
xchg
pop
dec
pusha
adc
xchg
pop
lods
fisubl
aas
enter
mov
popa
sub
sti
push
inc
adc
sbb
stos
mov
or
ljmp
cs
sbb
inc
xchg
push
jle
jge
lahf
test
incl
jmp
and
or
sbb
mov
sbb
or
in
adc
inc
xor
pop
mov
mov
pop
xchg
cltd
sub
xchg
sbbb
enter
sbb
shlb
test
aam
xchg
loope
adc
sbb
iret
insl
fnstsw
fistpll
out
gs
int3
in
mov
jnp
mov
cmpsl
push
mov
test
std
adc
outsb
or
and
out
aaa
mov
sub
outsb
cs
sbbl
iret
cmpsl
or
mov
test
ficoml
jg
out
popa
jo
xchg
cmp
lods
push
push
sub
cmp
pop
pop
sub
sbb
and
dec
dec
and
xchg
push
push
mov
fwait
jle
jg
bound
fstl
sub
fcmovnu
ds
insl
mov
jno
fmull
mov
arpl
adc
stos
push
add
dec
add
adc
or
stos
ds
jns
sbb
adc
and
int
imul
adc
icebp
xchg
repz
xchg
jno
sbb
pop
test
pop
or
mov
lahf
les
ss
push
adc
and
test
dec
loopne
jg
inc
je
nop
aad
dec
sbb
pop
popa
loop
jnp
dec
sbbl
in
cs
xchg
mov
push
lock
pop
pop
sbb
fs
out
mov
sti
add
test
jge
pop
popf
rcll
hlt
and
fxch
call
mov
bound
adc
pushf
ficoms
dec
out
cmp
jnp
xchg
test
daa
pop
scas
mov
push
xchg
cmp
and
xor
aaa
gs
add
jbe
cld
pushf
repnz
sub
shlb
aad
sahf
aas
adc
cli
stos
enter
inc
push
rolb
push
jnp
mov
sub
or
mov
les
xchg
push
adc
mov
xor
adc
mov
call
ror
xor
inc
std
mov
adc
lcall
addr16
insl
and
jnp
fiadds
mov
xchg
push
cmpb
aas
lret
add
lock
out
adc
scas
in
mov
mov
jnp
mov
xor
adc
jns
rcll
push
outsb
inc
push
mov
movsb
push
or
out
add
loopne
sub
sub
ljmp
adcb
xchg
xchg
dec
arpl
mov
mov
jle
adc
and
mov
sar
idivl
ret
out
pop
icebp
add
pop
inc
lcall
xchg
out
lretw
xor
std
lods
inc
sub
cmp
jl
cmp
repz
aad
xchg
int
popa
dec
adc
add
dec
out
cmc
addr16
lret
mov
out
and
adc
xor
jl
xchg
out
jno
inc
xchg
mov
popa
repnz
scas
out
ds
sbb
add
lret
movb
out
pop
mov
inc
lret
mov
sahf
lret
int
jle
pop
repnz
insb
jns
dec
pop
cmp
push
push
sub
pop
lds
pop
sub
mov
dec
iret
xchg
cltd
shll
sbb
or
fs
xchg
ljmp
and
orl
inc
xorl
mov
mov
pop
ss
jb
imulb
dec
shrb
push
or
cmp
sar
cmp
aam
adc
pop
in
cwtl
popa
push
insl
js
pop
push
pushf
dec
mov
push
popf
fiaddl
sbb
push
xchg
in
xor
mov
and
cmc
pop
test
test
push
gs
movsb
push
lret
adc
and
push
sbb
int
dec
fwait
xor
push
or
mov
adcl
cmp
sbb
inc
mov
std
mov
xchg
inc
mov
icebp
adc
xchg
adc
jmp
popf
sbb
ljmp
xchg
test
mov
mov
lret
clc
sub
sbb
fwait
dec
dec
gs
insl
add
subl
push
sub
arpl
int
cli
xchg
cld
insl
scas
fisubrs
mov
js
sar
and
dec
jl
testl
sbb
and
or
mov
repnz
adc
inc
outsb
push
insl
sbb
outsb
movsl
mov
xchg
movsb
mov
imul
lahf
sbb
sbb
ss
xchg
pop
push
dec
push
fstps
ror
test
ret
iret
pop
lods
orl
movsb
cmp
jo
xor
xchg
jns
mov
lret
push
or
js
outsb
shrb
xchg
sub
cld
xchg
call
cwtl
push
int3
inc
inc
mov
jb
xchg
movsl
sbb
push
fsubrs
and
adc
mov
cs
jo
ljmp
ret
hlt
sbb
or
repnz
lods
xor
mov
bound
ss
in
lock
push
fidivs
add
loopne
cmp
outsb
or
and
xchg
xchg
lds
out
lock
sbb
les
push
mov
or
jbe
mov
sub
leave
jo
js
mov
xor
cli
movsb
sub
add
loopne
inc
dec
insb
xor
in
and
loope
or
into
dec
mull
pop
fmull
jnp
shll
jecxz
fdiv
pop
jae
add
leave
movsl
scas
test
sbb
sub
and
test
push
jbe
push
dec
aaa
jp
mov
or
int
adc
notb
jecxz
pop
int
add
pop
pop
jmp
insb
add
add
call
pop
bound
movsl
sti
inc
adc
fbld
mov
mov
mov
scas
cmp
imul
cmpsl
test
sbb
nop
and
sub
imul
lcall
into
test
xor
loop
stos
sub
pop
repz
dec
pop
mov
out
pop
adc
push
pop
stos
mov
dec
leave
cmp
sahf
mov
or
sbb
into
pop
jnp
and
mov
mov
xchg
and
push
cmp
add
cmc
mov
lret
mov
js
popa
jne
add
out
push
xlat
movsl
jmp
jo
in
insb
repz
and
aad
push
mov
lret
hlt
jmp
repz
cmc
cmpsl
popa
pop
fsub
pop
rcr
cs
and
in
jl
xchg
dec
aad
pop
xchg
icebp
sub
push
dec
aaa
ret
rorb
mov
adc
mov
mov
loopne
cltd
fwait
xor
jecxz
inc
sbb
mov
inc
mov
flds
xor
dec
jg
mov
addr16
and
testb
roll
pop
aad
repnz
add
jno
push
data16
adc
and
mov
cli
inc
rcrb
cmp
pop
mov
xchg
stc
nop
lret
les
and
sbb
push
sub
adc
dec
cs
cmp
out
mov
mov
fwait
mov
push
push
add
lock
fiaddl
mov
iret
mov
mov
jle
sub
mov
lret
pop
loop
es
adc
test
push
fwait
inc
add
insl
pop
fcompl
aas
cmpsl
insb
push
push
xchg
xorb
cwtl
out
fiadds
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
jecxz
and
mov
sub
push
push
ja
cmpsb
imul
icebp
cld
sbb
or
daa
mov
xor
cmp
mov
inc
or
jg
sarl
cmc
addr16
mov
ret
inc
add
mov
test
addl
test
addb
mov
test
out
fcomi
adc
lahf
out
mov
std
cmc
sahf
pop
lahf
push
push
xor
pop
sbb
icebp
lock
and
enter
outsl
pop
sbb
pop
mov
test
scas
mov
lcall
pop
push
pop
sub
xchg
push
jge
push
sub
loope
dec
mov
xchg
outsb
stc
and
inc
jg
inc
dec
sbb
xor
notl
imul
cmpsb
mov
jl
dec
mov
adc
or
das
cmp
push
ficompl
push
js
hlt
pop
popa
out
hlt
or
test
add
out
sub
xor
pop
loope
sub
xor
fsub
mov
test
pushf
pop
mov
mov
push
fsts
enter
adc
add
push
cld
neg
addr16
cmp
cmp
jbe
movsl
inc
pop
mov
sub
adc
rcll
xor
into
mov
xchg
and
mov
push
inc
or
mov
sbb
xor
popa
fcmove
mov
dec
lcall
xorl
mov
or
fsubs
jmp
mov
movsl
pop
popf
ds
jno
push
xchg
fcmovnb
movsb
outsb
jle
push
cmp
nop
adc
pop
mov
fisubs
adc
cli
jle
int
je
add
mov
out
imul
sti
dec
add
add
adc
mov
push
arpl
xor
sti
dec
sbb
pop
and
orb
xchg
imul
rol
mov
adcl
sbb
nop
jge
and
or
loopne
icebp
imul
pop
icebp
icebp
leave
adc
lock
push
dec
xchg
xchg
fldt
out
inc
and
sbb
add
mov
cmp
cmc
bound
fldt
hlt
sub
inc
call
icebp
xchg
xchg
nop
add
pop
or
or
out
test
aaa
cmp
add
cmp
sub
xchg
lds
xchg
xor
jg
mov
fstpt
jno
dec
mov
andb
pushf
fsubs
js
pop
jge
pop
inc
test
pop
rcll
in
add
bound
jbe
lock
mov
mov
gs
add
mov
push
lds
in
flds
nop
sbb
sub
leave
lcall
ret
testb
scas
scas
sub
movsl
popa
ret
std
insl
lahf
mov
inc
xor
xor
pop
pop
add
jo
repz
bnd
lcall
and
push
xorl
outsl
nop
cwtl
fs
pop
in
mov
inc
jo
xlat
xorb
inc
std
lods
sbb
mov
mov
je
outsb
imul
jle
inc
sbb
movsb
in
imul
and
cmp
sbb
mov
or
addr16
add
imul
pop
lods
out
sbb
add
divl
shrl
adc
fimull
ror
cmovge
test
xor
fldt
sub
std
cmp
jb
mov
lea
leavew
sbbb
sarl
jb
mov
fcmovne
push
inc
out
xchg
push
scas
popa
add
lret
pusha
leave
leave
ds
push
iret
sub
jle
jge
sbb
xchg
loope
push
out
fadds
aaa
pop
out
sbb
xchg
bound
mov
rcrb
add
lea
pop
cmpl
sbb
jmp
push
rcl
add
in
scas
shlb
push
pop
dec
repnz
xor
xor
cmpsb
jne
ret
test
inc
addr16
jmp
stc
inc
lods
rcrb
sub
jne
outsb
dec
std
or
xchg
es
sub
jmp
lock
jo
scas
mov
lock
lea
push
in
jb
jo
loopne
push
push
xor
ret
sbb
addr16
nop
shr
inc
mov
sbb
or
decl
aas
jne
and
movsb
dec
inc
or
sub
les
stc
adc
cmp
lahf
mov
arpl
inc
mov
ljmp
xor
fldl2e
add
jecxz
imul
and
mov
cmp
loopne
xor
push
clc
dec
pop
cmpsl
jns
sbb
lock
les
in
inc
lret
pop
mov
jle
jo
cmp
loop
xchg
daa
jl
mov
sub
daa
dec
push
fildll
adc
insl
cltd
sub
push
pop
push
xchg
xchg
rcr
scas
xor
fwait
push
nop
jbe
add
add
mov
mov
fsubl
int3
loope
outsb
xchg
or
push
loope
je
jl
test
pextrw
nop
or
jge
push
jbe
cmc
mov
lret
mov
lods
fisubl
shr
loope
mov
icebp
jle
mov
adc
fildl
loope
push
lcall
das
cmc
negb
push
cli
cwtl
fwait
loope
fisubl
sbb
mov
outsl
dec
push
jae
ja
xchg
push
ret
jb
adc
adc
mov
out
pushf
in
xchg
or
aas
call
sbb
sbb
inc
mov
scas
roll
in
cmp
sub
repz
mov
mov
xor
adc
cmp
enter
es
xchg
scas
jmp
pop
xchg
js
push
out
dec
jl
sbb
inc
mov
xlat
add
and
sahf
or
insb
pop
rclb
popf
xor
add
push
mov
pop
nop
in
mov
jmp
sub
mov
jns
sub
push
push
pop
or
push
pop
push
xchg
mov
or
push
jecxz
stos
adcb
imul
lahf
fs
jo
add
mov
dec
pushf
out
testb
and
xchg
mov
lods
stos
scas
mov
lret
inc
cld
pushw
rcrl
inc
mov
xchg
pop
into
cmpsb
in
cmp
sub
pop
mov
xor
clc
push
shrb
sbb
pushf
lods
add
and
and
stc
xor
adc
jb
repz
xchg
mov
outsl
xor
mov
add
es
dec
aam
jg
xor
lret
rcll
mov
fstps
adc
xchg
insl
aas
xchg
imul
dec
push
mov
and
dec
stc
xchg
and
sbb
mov
adc
sbb
int3
aad
les
fldl2e
xlat
xor
shlb
pop
fisubrs
inc
repnz
popf
and
mov
adc
ja
pop
xor
add
and
push
push
xchg
and
pop
aad
lret
andb
push
cmpsl
movsl
jmp
cmpsb
lahf
sub
mov
add
add
xchg
add
inc
xchg
popa
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
