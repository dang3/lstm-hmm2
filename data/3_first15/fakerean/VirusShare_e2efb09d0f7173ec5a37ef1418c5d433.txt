adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
mov
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
jae
mov
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
call
mov
push
call
pop
mov
call
push
mov
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
cmp
jne
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
cmpl
je
pushl
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
pop
xor
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
andl
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
xor
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
sub
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
cmp
je
cmp
je
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
mov
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
push
lea
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
lea
call
lea
call
lea
call
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
movl
movl
movl
cmpl
jge
cmpl
jne
mov
test
je
push
call
pop
mov
mov
push
call
lea
lea
movl
call
lea
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
mov
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
lea
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
push
push
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
lea
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
pushl
movl
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
call
mov
pop
ret
push
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
cmp
lea
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
lea
lea
call
test
je
xor
cmp
mov
jne
mov
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
jne
mov
mov
mov
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
jmp
mov
jmp
mov
push
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
jne
xor
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
mov
test
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
push
call
mov
scas
add
add
subb
mov
fstp
add
jmp
add
xchg
add
add
pop
loop
jecxz
repnz
adcb
add
stc
xchg
cld
add
ficomps
add
fcmovne
jge
test
ja
inc
sub
push
mov
add
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
in
rolb
push
mov
xchg
pop
popf
add
hlt
je
add
fldl
push
fs
mov
add
test
add
add
add
mov
movb
add
add
fldcw
pop
out
add
loope
data16
icebp
ret
add
add
call
imul
in
push
push
push
push
lea
push
push
push
push
call
xchg
jl
arpl
xchg
jnp
add
rolb
add
pop
add
mov
xchg
mov
mov
fldenv
nop
add
add
add
xchg
add
sarb
mov
add
into
xchg
mov
push
push
push
push
push
push
push
call
mov
rol
mov
jecxz
hlt
push
xchg
pop
add
int3
pop
ljmp
pop
add
push
test
movsb
mov
cltd
add
add
cmc
add
push
pusha
add
add
int3
add
jns
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
push
pusha
nop
mov
enter
add
xlat
add
add
pushf
add
jmp
loopne
push
cld
mov
pop
add
enter
lcall
stc
jmp
add
add
add
add
lcall
call
push
push
push
call
imul
aam
add
cltd
add
iret
pop
add
add
out
add
mov
mov
add
addr16
add
add
outsl
mov
add
pushf
jae
xchg
lcall
add
or
test
add
stos
call
cmp
push
and
add
add
mov
jne
fiaddl
xlat
add
stos
xchg
xchg
push
push
add
test
add
mov
add
in
add
add
mov
mov
in
call
call
push
push
call
imul
jb
clc
push
movb
faddl
pop
add
sahf
add
pop
add
add
roll
lds
add
out
nop
pop
fidivl
push
add
cltd
add
lds
vmaskmovdqu
icebp
testl
testl
add
sub
pop
jmp
ret
push
push
push
push
call
add
fldl
cli
cmc
je
roll
xchg
imul
movl
les
ljmp
nop
add
cmpsb
xchg
add
cwtl
add
rcrl
add
sub
pop
mov
push
push
lea
push
call
mov
out
add
add
sti
add
pushf
push
jle
shlb
push
out
loope
mov
faddl
mov
scas
movl
push
add
test
cmpsb
mov
mov
mov
pushw
adcb
hlt
pop
mov
push
push
call
add
addl
add
vorpd
pushf
shll
repnz
add
mov
add
add
loope
add
add
cmc
add
lret
jle
mov
hlt
fcmovb
add
add
jns
shl
add
clc
pop
add
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
ljmp
leave
add
add
add
jo
add
je
add
add
div
lahf
xchg
mov
add
add
jns
xchg
in
pushf
pop
add
sub
pop
add
add
push
push
push
call
hlt
add
sti
add
add
add
xchg
add
jbe
xor
add
add
test
loope
lds
fld
add
xchg
movl
add
add
arpl
int
push
je
push
add
shl
jp
jne
loop
mov
lods
lea
hlt
lcall
pop
add
cmp
andl
push
push
call
add
pop
lods
addl
jno
add
hlt
fmul
add
rorl
jmp
sarb
jmp
loope
jp
mov
mov
cmc
repnz
lcall
sbb
push
push
push
push
push
push
lea
push
push
push
call
push
jbe
add
stc
xchg
jbe
jae
rcrb
add
js
int3
mov
add
xchg
add
jb
add
add
mov
pop
add
push
push
rol
rol
push
xor
add
shl
ror
sub
shl
sub
lea
add
pop
rol
pop
push
push
push
push
push
call
lret
mov
add
add
add
into
add
push
push
mov
popa
push
add
add
fadds
push
add
les
mov
loop
add
mov
add
cwtl
mov
pusha
add
add
mov
xlat
add
in
in
pop
pushl
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
popf
add
clc
push
stc
add
add
mov
int
add
mov
add
pushf
mov
rclb
mov
add
imul
in
fdivr
lcall
cmp
add
pop
cmp
call
test
push
cld
add
add
add
add
add
testb
add
addr16
fs
mov
loop
popf
outsl
mov
loop
ljmp
push
add
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
call
lods
add
cld
add
scas
add
mov
enter
mov
push
cltd
xchg
cld
roll
and
add
filds
add
add
jnp
push
add
out
mov
iret
add
jns
add
into
add
add
insb
mov
sub
pop
movl
push
push
push
push
call
push
roll
add
popf
enter
jnp
fldenv
push
fcomps
mov
test
jmp
add
aam
loop
add
std
loope
add
jmp
add
in
lock
lea
push
lea
push
push
push
call
outsl
add
xchg
addl
rclb
add
into
add
add
out
jl
mov
in
add
add
lock
add
jae
out
popa
iret
jns
push
add
add
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
lahf
add
add
fwait
mov
add
test
add
imull
mov
push
jae
pop
mov
cmpsl
roll
mov
movsb
cld
add
add
clc
hlt
push
add
fdiv
lea
jge
add
int3
imul
push
imul
in
in
pushl
push
push
call
add
add
xchg
add
lret
jecxz
add
mov
je
add
lock
add
add
arpl
add
movl
lds
add
push
hlt
jno
ja
add
loop
mov
add
sub
pop
pushl
push
push
lea
push
push
lea
push
call
movsb
add
subb
fidivrl
add
iret
pop
js
add
xchg
add
add
add
out
add
push
fcmovb
add
mov
pop
call
pushl
push
push
lea
push
push
call
icebp
add
addr16
mov
add
lock
into
add
test
roll
cmc
add
movsl
mov
xchg
shr
add
add
mov
jne
lock
sti
mov
loopne
add
add
in
push
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
push
call
fiadds
nop
mov
add
jmp
addl
mov
add
add
divb
clc
scas
mov
xchg
pop
add
and
add
push
push
not
add
add
sub
push
xor
add
add
sub
rol
pop
dec
pop
push
push
push
push
push
push
lea
push
call
fiaddl
add
add
add
pop
mov
popa
add
outsl
pop
add
add
cld
movl
add
add
add
jae
add
add
in
bound
out
lods
ret
add
add
push
pop
add
mov
xchg
add
add
imul
add
mov
movsb
add
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
outsl
add
add
mov
out
movsb
repnz
add
xchg
movsb
jo
lcall
in
add
insb
lahf
out
pop
cltd
mov
leave
add
lcall
ljmp
test
mov
in
loopne
lcall
pop
pop
add
push
push
push
push
push
push
push
push
lea
push
call
iret
xchg
add
jecxz
rolb
aam
add
out
scas
cli
lret
roll
add
pop
xorb
bound
sti
movsb
add
add
mov
add
add
pop
add
jns
add
jno
arpl
mov
pop
xchg
add
sub
pop
push
push
push
rol
push
sub
add
sub
inc
add
sub
sub
pop
not
pop
push
push
push
call
lds
lods
add
add
cwtl
mov
add
ljmp
mov
add
mov
pop
mov
movsl
add
bound
fldl2e
sub
pop
push
push
push
call
add
add
fnstenv
add
pop
repnz
cmpsl
add
add
add
add
in
add
jge
cwtl
add
lea
pop
push
push
lea
push
push
lea
push
push
lea
push
call
jp
mov
nop
mov
negb
xchg
mov
add
std
fsqrt
test
gs
add
call
call
push
push
push
call
outsl
add
jne
mov
loope
add
mov
flds
add
test
out
push
add
add
sahf
add
cmpsl
add
add
cwtl
gs
stos
xchg
shlb
add
clc
add
sub
shl
add
aad
loopne
add
sub
pop
mov
push
push
push
lea
push
call
lahf
mov
add
mov
add
add
fadd
add
add
fwait
loope
repnz
add
add
mov
lock
addl
cmp
add
movsl
filds
add
mov
jnp
cmpsb
mov
jbe
add
add
add
pusha
subl
icebp
scas
fwait
in
addl
push
push
push
push
push
push
push
push
push
call
lret
arpl
popf
add
mov
in
movl
add
pop
int
mov
add
loopne
lods
ret
pop
add
add
pop
hlt
push
lea
push
push
call
call
add
mov
push
clc
add
ljmp
add
jne
scas
xchg
mov
mov
add
jne
in
hlt
lcall
pop
in
push
push
push
push
push
push
lea
push
call
mov
add
mov
xchg
jb
mov
add
xchg
mov
add
add
pusha
add
cli
add
add
xchg
mov
add
mov
aad
add
add
mov
add
sti
sub
pop
add
add
push
push
push
push
push
push
push
push
push
call
cmpsl
mov
je
add
jl
jne
add
insb
cmpsb
add
add
add
xchg
mov
push
negl
in
add
negb
test
add
add
loope
add
ficompl
fwait
add
add
xchg
mov
push
fdiv
lcall
jl
sub
pop
mov
push
push
lea
push
push
push
push
call
add
in
fstpl
loope
out
mov
add
clc
mov
movsb
add
xchg
add
cmpsl
mov
sarb
add
lods
mov
lock
jno
add
scas
iret
shlb
add
add
testl
sub
pop
xor
push
lea
push
call
cltd
cli
cld
add
mov
add
cmpsb
repnz
cmp
add
cli
add
add
cltd
sub
pop
add
push
push
push
lea
push
call
xlat
add
in
add
add
push
movb
shl
add
add
popf
add
sarl
mov
add
add
in
out
sub
pop
add
push
push
push
push
push
push
lea
push
call
insb
push
cli
add
out
add
test
add
add
add
add
add
cli
std
fstl
les
mov
mov
xchg
divl
mov
sahf
mov
in
call
push
push
push
push
lea
push
push
lea
push
lea
push
call
cmpsl
mov
add
add
add
add
add
add
jns
pusha
jae
pop
push
out
cmc
mov
stos
add
in
incb
jmp
in
in
xor
push
push
call
bound
add
pop
add
add
add
fwait
add
aad
flds
push
add
mov
add
add
add
fldl
add
nop
jns
cmc
leave
test
in
mov
lods
sti
add
sub
pop
add
push
push
push
lea
push
lea
push
push
push
call
add
add
xchg
jns
imul
cld
add
add
mov
xchg
xlat
add
scas
mov
jecxz
jns
pop
add
mov
int
hlt
add
ja
pop
aam
add
add
flds
mov
add
mov
popa
xlat
std
mov
add
push
push
call
add
jp
add
nop
add
jge
add
out
add
shll
add
jne
add
push
cwtl
mov
mov
stos
add
jo
add
add
fdivrs
in
xchg
add
add
mov
jl
add
sub
pop
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
xchg
jne
add
jo
sbb
add
add
push
push
add
in
mov
lea
sahf
add
leave
scas
sub
pop
xor
push
lea
push
push
call
sti
movsb
loope
enter
add
xchg
add
add
pusha
movsl
add
jnp
add
rcl
add
lret
roll
add
add
pusha
popl
jecxz
out
movsl
mov
fwait
movsb
jl
mov
movsl
pop
mov
push
fldl
add
popf
bound
mov
hlt
lcall
les
add
push
push
push
push
push
push
push
call
xchg
mov
adcl
add
add
add
insb
add
cltd
fiaddl
mov
loopne
shr
stc
xchg
lahf
iret
cwtl
shll
jo
add
out
out
add
push
ljmp
jecxz
add
loope
lret
cwtl
pop
arpl
jle
mov
in
lcall
push
push
push
push
push
call
add
xchg
add
add
push
add
jne
add
fcomps
push
xchg
testl
add
add
scas
add
cmpsl
fildll
gs
add
movb
popf
xchg
lahf
out
jmp
in
in
lcall
inc
or
or
or
sub
add
not
mov
add
add
add
pop
xchg
add
add
popf
jae
jle
mov
jb
fwait
jl
in
hlt
lcall
add
push
push
push
call
add
add
popl
add
jmp
cmpsl
add
hlt
shr
in
add
roll
pusha
cli
jnp
add
loope
pop
add
add
sub
pop
add
push
lea
push
call
add
loop
push
push
push
shlb
push
shl
std
mov
out
outsl
nop
add
popf
test
in
sar
test
rolb
mov
add
add
jo
xchg
mov
cld
test
mov
aad
add
out
add
pop
add
mov
aad
lds
sarl
clc
lcall
enter
push
push
push
push
push
call
mov
add
sti
xlat
repnz
push
jecxz
lcall
stos
add
fsub
lahf
add
sti
in
movsl
scas
mov
pushf
add
add
add
add
lods
imul
into
add
ljmp
add
add
add
test
add
fbld
add
in
in
lcall
movsb
push
push
lea
push
push
push
push
lea
push
push
push
push
call
ljmp
fnsave
rcrl
add
add
arpl
xlat
add
lock
fnstenv
add
fwait
imul
in
mov
add
ljmp
in
scas
mov
fwait
xchg
xchg
cltd
xchg
push
int
popa
mov
pop
lods
xchg
mov
call
sub
pop
pop
push
push
push
lea
push
push
call
add
mov
add
mov
rcrb
std
hlt
out
icebp
add
cwtl
add
mov
pop
jns
add
add
test
enter
rolb
hlt
push
push
push
push
push
push
push
call
test
jns
push
add
add
add
lret
add
mov
les
mov
test
mov
testb
add
add
add
add
in
lcall
pop
in
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
test
add
aam
mov
fiaddl
roll
ret
hlt
mov
add
movsb
or
add
ret
add
add
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
cmpl
movsb
add
add
mov
add
test
aam
idivl
jp
mov
add
cwtl
add
add
xchg
ljmp
add
bound
add
aam
fwait
add
add
stos
push
add
lcall
inc
and
mov
push
push
push
call
fwait
add
add
loopne
add
scas
in
mov
hlt
add
sbbl
add
ljmp
movb
add
add
lock
add
add
push
push
add
add
sub
pop
mov
xor
push
push
push
push
push
lea
push
push
push
push
push
call
push
add
add
add
je
insb
add
jb
add
shlb
ljmp
jp
lret
roll
mov
jae
in
add
sti
cmpsl
add
add
cwtl
add
add
add
jmp
shlb
les
fcomps
dec
sub
or
cmpsb
inc
push
push
push
call
push
mov
add
add
mov
cmpsb
push
add
add
pop
add
pop
pop
add
int
add
nop
jne
add
pop
add
cli
call
xchg
add
push
add
pusha
data16
popl
int
add
add
add
loope
in
lock
xor
push
push
push
push
push
push
push
call
ficompl
add
push
popa
jb
add
add
jmp
mov
add
jae
rolb
jnp
add
addl
rcll
fildll
xchg
cli
jmp
mov
mov
add
add
icebp
add
add
add
in
add
push
push
push
lea
push
push
lea
push
lea
push
call
pushf
add
cli
scas
lcall
in
jmp
lret
ja
add
xchg
insb
push
add
add
add
out
pop
leave
add
add
add
lock
add
lea
stos
add
add
add
add
lods
scas
add
add
rcrl
in
lcall
ret
sti
push
push
push
call
add
add
in
mov
shlb
jmp
add
nop
jno
jmp
add
mov
sbbb
jb
int3
add
data16
mov
add
sub
pop
add
push
shl
sub
lea
pop
mov
push
push
dec
sub
xor
sub
push
or
inc
add
shl
sub
rol
sub
add
dec
not
pop
rol
shr
inc
xor
pop
push
push
push
call
add
add
test
fstpt
jmp
add
ja
imul
shl
add
add
mov
incb
in
loopne
scas
test
xchg
out
jl
fiaddl
mov
add
jb
xchg
scas
stos
stos
add
imul
addr16
pop
pushl
call
push
push
push
push
push
push
push
push
call
add
mov
mov
xchg
add
stos
lea
add
add
faddl
hlt
lret
faddl
add
pop
mov
add
add
xlat
add
arpl
add
add
aam
pushf
iret
sub
pop
push
push
push
xor
ror
lea
push
xor
add
sub
not
sub
add
add
shr
pop
rol
pop
push
push
push
push
lea
push
lea
push
lea
push
call
out
lds
out
stos
xchg
cmpsb
add
movsb
addl
mov
scas
add
stos
add
add
repnz
add
add
add
add
mov
imul
mov
add
lcall
in
in
push
push
push
shl
sub
pop
call
mov
push
sub
lea
rol
dec
pop
push
push
push
xor
inc
sub
pop
mov
add
push
sub
pop
add
push
lea
push
lea
push
lea
push
call
lret
add
cltd
add
in
cltd
hlt
ljmp
cwtl
int3
jmp
gs
pop
add
add
add
add
into
std
push
mov
mov
add
fisubs
andb
in
lock
add
push
push
push
call
add
jns
push
ret
hlt
jecxz
mov
pop
add
test
ret
mov
loope
js
rcll
cmpsb
sahf
test
jns
clc
add
push
add
add
mov
add
add
sar
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
aam
push
cwtl
cwtl
add
xchg
add
add
add
add
pop
ja
popl
push
jb
add
add
add
test
add
add
add
xchg
arpl
test
add
cwtl
pop
nop
add
xchg
add
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
call
mov
add
push
arpl
lds
add
add
ret
add
cwtl
arpl
out
push
add
ret
push
hlt
aam
mov
jecxz
stos
mov
mov
sub
pop
push
mov
push
push
lea
push
push
push
push
push
call
roll
add
add
lcall
fdivs
mov
imul
add
int3
add
add
sbb
filds
add
mov
std
aam
pop
test
adcl
mov
add
xchg
shlb
pop
add
cltd
add
xor
push
lea
push
call
jp
enter
out
push
adcl
xchg
add
loop
add
add
fiadds
add
mov
add
pop
add
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
push
add
stos
add
add
add
add
add
add
lret
in
fcmovnbe
std
mov
test
add
xchg
pop
cmpsb
jmp
loopne
stos
add
ja
mov
add
mov
add
arpl
mov
pop
add
add
xchg
xchg
ja
sub
pop
add
pop
push
lea
push
push
push
lea
push
push
call
jo
jbe
add
bnd
nop
add
gs
lock
xchg
xor
mov
add
xchg
mov
add
add
loopne
pop
mov
call
mov
xor
push
push
push
push
lea
push
call
add
add
lds
add
ja
xchg
test
add
add
in
lcall
movsb
push
sub
lea
pop
mov
xor
push
dec
not
pop
or
je
push
lea
push
call
mov
jb
add
jge
mov
add
xchg
imul
add
stos
pop
add
add
add
fisubs
pop
enter
mov
pop
test
add
xlat
add
test
lcall
xor
mov
shl
not
add
not
pop
mov
push
push
push
lea
push
call
jbe
lods
roll
std
add
add
je
repnz
outsl
fisubrs
xchg
add
add
push
add
stc
add
cwtl
jl
pop
add
rolb
add
add
pop
add
mov
sub
pop
xor
push
push
push
push
push
lea
push
call
push
je
add
jge
mov
mov
lock
mov
jb
stos
add
mov
push
cwtl
pop
testl
add
movsb
test
add
mov
outsl
shl
lods
add
les
lea
push
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
add
call
mov
add
add
cwtl
shl
mov
xchg
add
into
add
add
pop
roll
jbe
nop
fildl
test
xchg
mov
les
sub
pop
add
add
push
inc
pop
push
mov
push
push
push
push
call
add
pop
fists
loopne
test
lahf
imul
add
mov
jl
add
mov
mov
pushf
mov
add
popa
data16
xchg
fcomp
add
xchg
faddl
lea
rolb
xchg
sub
pop
xor
push
push
push
push
push
push
push
push
call
fcmovnb
xchg
je
pop
lock
pusha
add
arpl
movl
mov
add
add
add
add
add
in
add
filds
sub
pop
add
push
inc
not
pop
add
pop
push
add
shr
pop
rep
mov
xor
push
push
lea
push
push
push
call
pop
into
mov
pop
hlt
popa
add
fs
xorb
out
add
adcl
add
stc
pop
mov
add
ret
add
clc
cli
mov
imul
mov
xchg
mov
mov
add
mov
add
iret
xchg
add
pop
or
je
push
shr
sub
add
pop
mov
add
push
push
call
add
mov
push
lcall
faddl
add
fs
cmpsl
add
add
ljmp
add
push
bound
ja
out
mov
outsl
cwtl
add
sub
pop
add
push
add
pop
rep
pop
push
push
xor
push
sub
add
dec
sub
sub
xor
not
rol
pop
rol
pop
push
push
push
push
call
jmp
cwtl
mov
addr16
lds
mov
popa
movsl
mulb
push
vmulsd
je
jmp
shl
add
repnz
mov
add
add
xorb
add
add
mov
pop
aad
shl
mul
cmpsl
cmpsl
stos
push
in
add
add
add
lcall
mov
push
sub
sub
rol
pop
mov
push
push
lea
push
lea
push
push
push
push
call
popf
lcall
fisubs
add
add
pushf
mov
stos
aam
lret
jmp
mov
add
mov
filds
add
add
jae
ja
add
push
testl
in
lcall
inc
and
push
push
push
push
push
push
call
out
jecxz
add
fidivs
lret
add
add
movsl
add
in
add
call
pop
lock
bound
jmp
std
pop
add
mov
add
add
sti
ret
scas
add
lcall
loopne
push
add
add
not
ror
pop
mov
add
push
add
pop
push
push
lea
push
lea
push
push
lea
push
call
add
rcl
jmp
push
add
cltd
jle
push
add
add
pop
pop
incb
lock
pop
push
push
shl
sub
ror
pop
push
push
not
shl
pop
push
push
not
pop
mov
push
ror
sub
ror
pop
pop
push
ror
sub
rol
pop
pop
pop
push
sub
pop
pop
push
dec
pop
leave
push
add
pop
ret
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
jns
cli
xchg
xchg
pop
clc
add
add
add
mov
jp
ja
xchg
enter
add
shl
les
out
outsl
push
mov
aam
add
add
jb
flds
andb
filds
stos
lret
mov
lcall
push
ror
add
add
pop
mov
push
lea
push
push
push
push
push
lea
push
call
add
xchg
add
add
addl
jecxz
ja
jo
fadds
add
pop
addl
add
movsl
add
add
in
in
add
push
sub
pop
push
push
push
push
call
jb
add
mov
mov
add
mov
enter
test
add
add
add
pop
mov
add
icebp
xchg
addr16
testb
cli
fs
pop
add
add
insb
cltd
roll
add
add
add
pop
add
jbe
in
clc
pop
push
push
push
lea
sub
pop
movl
addl
push
lea
inc
pop
test
je
push
not
ror
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
fsts
jns
cmpsl
mov
cmpsb
roll
arpl
push
fldt
pop
ljmp
add
mov
faddl
add
sub
pop
pop
pop
push
rol
shl
pop
pop
pop
push
lea
push
push
push
push
push
call
add
les
add
mov
add
add
ror
testb
andl
test
les
push
pop
mov
movsl
gs
pop
push
add
add
add
add
cmpsb
add
xchg
movl
add
loopne
incb
roll
int3
add
add
cld
cwtl
add
ret
push
sub
add
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
int3
add
arpl
fldl
add
push
cli
call
shlb
add
add
pop
add
xlat
xchg
add
mov
filds
mov
std
xorl
xchg
stc
lret
mov
add
add
add
mov
add
loopne
in
fdivr
lcall
in
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
stos
jmp
push
push
ljmp
clc
movsb
flds
nop
outsl
lea
cmc
add
lret
mov
add
pop
push
addl
flds
lcall
cld
push
push
push
push
push
call
lds
cltd
imul
stc
loop
add
add
scas
add
fldl
add
fisubs
jmp
cmc
movsb
popf
jp
pop
rcrl
add
icebp
add
push
add
notb
add
add
into
add
add
push
add
out
add
add
lock
lcall
push
lea
push
push
call
jne
add
add
stos
add
jmp
pop
push
add
popa
in
jp
add
mov
mov
add
cmc
add
add
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
loopne
je
add
add
mov
mov
jae
movsb
cmpsl
imul
add
gs
iret
pushf
addr16
mov
fs
fcmovbe
cwtl
sbb
in
loopne
lcall
push
shr
pop
testl
push
push
lea
push
push
push
push
push
push
call
add
fildl
movl
mov
out
add
jo
add
mov
add
push
push
add
test
add
shll
add
jmp
add
out
sub
pop
addl
push
lea
push
call
int
mov
mov
add
add
popl
ja
xchg
push
test
add
add
xchg
lret
js
lods
add
stos
lret
lret
mov
add
icebp
add
add
mov
add
xlat
popa
add
scas
repnz
pop
push
call
push
shl
xor
pop
mov
pushl
push
push
push
lea
push
push
push
push
call
lret
shll
incb
cltd
into
mov
jne
je
andb
add
jl
int3
add
add
add
add
lds
clc
sub
pop
push
push
push
push
push
push
push
call
add
mov
add
addb
add
add
pushf
test
add
pop
hlt
call
pusha
repnz
add
add
mov
push
ljmp
jp
incb
lods
add
mov
stos
mov
ljmp
in
in
pop
call
cmpl
jne
push
rol
pop
pop
push
push
push
call
add
mov
rclb
ja
add
lea
movsb
jl
stc
addl
add
cmpl
shlb
stc
jmp
add
mov
jmp
add
mov
add
pop
out
sub
pop
pop
push
pop
pop
push
push
push
call
xchg
add
pop
push
std
lds
push
add
add
add
add
lret
add
add
test
mov
pop
xchg
add
sub
pop
pop
leave
push
not
add
pop
ret
push
push
push
lea
push
lea
push
push
push
push
push
call
popl
in
add
add
pop
add
xchg
xchg
jae
pop
je
add
add
leave
je
push
add
flds
add
mov
add
out
arpl
jnp
add
lods
jecxz
in
flds
fiaddl
add
hlt
pushf
cmpsb
add
in
loopne
lcall
in
add
push
add
dec
pop
push
push
inc
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
out
mov
add
idivl
xchg
fisttpl
fldl
clc
add
add
scas
add
add
stos
add
ffreep
mov
in
fcomps
movl
push
not
pop
push
push
shl
shr
pop
call
push
push
push
lea
push
call
loop
pop
add
add
add
jl
add
je
lret
fstpt
add
add
add
fldl
mov
cld
add
faddl
add
add
imul
movsb
add
mov
cltd
mov
shll
mov
in
hlt
lcall
aas
cli
incl
dec
sub
ror
lea
pop
cmpl
jne
push
push
push
push
push
call
add
ljmp
mov
stc
add
mov
jl
add
insb
ljmp
lods
out
add
add
push
jge
mov
addl
add
mov
js
add
sarl
jle
add
test
in
in
pop
pop
pop
push
add
inc
shl
pop
pop
push
shl
inc
dec
pop
pop
push
inc
add
pop
leave
ret
push
pop
push
mov
push
sub
pop
add
push
lea
pop
push
push
rol
pop
push
push
push
push
push
push
push
push
push
push
push
call
ja
mov
add
add
add
cli
icebp
add
out
cld
add
out
add
ret
add
loop
rolb
jb
sub
pop
push
push
push
call
add
aad
add
add
gs
add
mov
add
add
add
add
nop
lock
fdivrs
push
jnp
imul
in
clc
lcall
inc
or
lea
pop
lea
push
push
push
push
lea
push
push
push
call
xchg
in
add
loope
popf
movsl
cld
cli
add
lods
add
push
add
lods
add
add
and
xchg
ljmp
pop
mov
add
add
addr16
add
sub
pop
sub
mov
push
add
pop
shr
add
push
lea
push
push
call
fiaddl
jne
add
push
filds
testl
add
mov
jbe
pusha
in
add
add
add
add
add
add
add
mov
add
pusha
clc
sub
pop
mov
mov
push
push
call
js
addl
add
mov
cmp
andl
pop
add
jo
hlt
mov
add
aam
stos
push
add
add
add
xchg
jl
mov
mov
push
add
filds
popf
bound
rcll
pop
add
push
inc
not
pop
add
mov
push
push
push
push
push
push
push
call
add
pop
add
fsub
add
les
test
roll
iret
std
add
add
clc
in
std
addl
jmp
in
stos
int3
sahf
mov
ret
rclb
clc
add
add
test
roll
repnz
add
add
rolb
push
out
cld
jnp
addb
nop
nop
nop
push
push
lea
push
call
xlat
hlt
add
movsl
push
std
add
in
jb
divl
add
ret
faddp
rcrl
lods
jb
xchg
pop
stc
popa
addr16
pop
cmp
jne
push
dec
pop
cmp
jne
push
lea
sub
pop
mov
movl
push
add
pop
jmp
push
push
push
push
push
lea
push
lea
push
push
call
sti
pop
icebp
stc
add
jo
push
add
add
nop
movsb
movsb
add
add
xlat
call
loop
xchg
sahf
add
fsubrl
mov
pusha
les
add
pop
add
xchg
gs
andl
mov
rcrl
mov
jmp
lods
jl
add
cwtl
lods
mov
xchg
data16
in
loopne
mov
mov
push
sub
ror
rol
dec
pop
sub
jne
push
xor
inc
inc
sub
pop
mov
movl
push
push
lea
push
push
push
call
rolb
int
movl
add
add
mov
loopne
add
mov
push
add
lods
mov
in
in
pop
jmp
push
lea
pop
mov
push
push
call
jne
mov
add
mov
lret
test
jae
testl
add
out
mov
in
add
add
cmpsl
jo
enter
xchg
add
stos
lret
add
add
add
cld
jmp
add
movsl
jmp
clc
pop
mov
push
push
lea
push
lea
push
push
push
call
pop
add
loop
repnz
addr16
jge
ja
add
sti
mov
mov
add
jge
add
mov
icebp
mov
lcall
cli
add
test
add
add
shll
pusha
not
sub
pop
mov
movl
push
push
push
lea
push
call
out
add
aam
movb
iret
add
test
mov
sti
bound
sahf
mov
mov
add
leave
lcall
sbb
add
push
push
push
push
push
push
push
push
push
push
call
add
out
add
add
add
add
je
pushf
bound
data16
mov
add
rolb
add
popf
add
insb
xorb
out
add
imul
jl
xchg
xchg
add
add
mov
add
add
in
sub
pop
mov
push
push
push
push
push
push
push
call
mov
in
aad
add
add
incb
leave
jo
insb
idiv
lds
fisubl
add
add
xchg
rolb
pusha
push
test
add
add
out
movsl
add
mov
add
mov
push
imul
sub
pop
cmpw
jne
push
xor
sub
dec
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
rolb
adc
add
jecxz
add
stc
add
fsubrs
add
fs
add
shll
fildl
jnp
add
imul
push
clc
add
fwait
in
gs
add
in
addl
add
lea
push
push
call
mov
add
add
imul
xchg
add
lock
test
lock
add
add
add
sub
pop
jmp
push
ror
xor
not
shr
pop
pushl
push
push
push
lea
push
lea
push
push
call
insb
add
out
add
nop
in
in
pushf
jmp
roll
mov
add
leave
mov
add
clc
add
add
imul
xchg
les
lcall
push
inc
dec
pop
mov
push
push
lea
push
call
add
stc
pusha
add
add
out
movl
push
push
add
ljmp
pop
loope
add
add
clc
add
mov
mov
mov
icebp
cmp
add
popa
call
add
jmp
add
jecxz
add
add
lcall
inc
sbb
push
lea
push
push
push
call
clc
xchg
stc
sahf
mov
in
jne
add
mov
aam
add
add
mov
jecxz
add
mov
mov
add
leave
push
jge
add
enter
add
cmc
scas
add
add
lcall
push
or
test
inc
push
not
push
or
inc
add
add
add
rol
sub
xor
pop
dec
add
pop
push
shr
ror
xor
not
pop
push
call
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
lret
lea
clc
loope
call
add
add
in
add
lds
roll
add
add
leave
lods
xchg
add
insb
add
add
movl
pop
lods
mov
add
add
add
push
popf
movsl
push
mov
add
jae
add
icebp
sub
pop
cmpl
je
push
push
dec
push
or
inc
add
add
sub
lea
inc
pop
sub
sub
pop
push
shl
dec
pop
push
call
push
dec
xor
pop
cmpl
je
push
push
rol
lea
inc
push
or
not
add
xor
rol
sub
lea
pop
xor
dec
inc
inc
pop
push
push
push
push
lea
push
push
call
mov
fnstenv
push
mov
shlb
add
ja
add
add
pop
leave
ljmp
rcrb
lds
out
in
call
adcl
inc
mov
sbb
sbbb
sbb
and
inc
test
xchg
cmp
push
jecxz
aad
jo
push
add
flds
add
push
xlat
popa
hlt
imul
add
xchg
scas
jns
lods
xchg
shlb
add
push
shr
jge
mov
rolb
add
ja
add
push
add
pop
cmpl
je
push
push
shl
rol
xor
push
or
inc
add
sub
sub
not
sub
sub
not
lea
pop
dec
lea
pop
push
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
xchg
loope
add
add
add
pop
pop
add
add
popa
mov
pop
add
sahf
add
rolb
xchg
add
mov
xchg
outsl
pop
les
add
fisubrl
add
jmp
add
add
int
add
pop
call
cmpl
je
push
push
sub
inc
shl
push
sub
add
shl
rol
xor
sub
sub
ror
pop
inc
inc
lea
xor
pop
push
push
push
push
call
mov
push
andl
mov
idivb
mov
data16
add
xchg
add
jbe
add
add
aam
add
add
add
test
add
add
rolb
movl
pop
call
cmpl
je
push
push
shl
sub
add
sub
push
or
inc
add
rol
sub
xor
not
dec
pop
sub
rol
dec
pop
push
push
push
lea
push
lea
push
lea
push
call
lret
jae
mov
mov
fnstcw
ret
rorl
add
clc
lcall
add
xchg
ret
xchg
test
jmp
add
data16
je
sahf
movsb
lods
add
add
mov
add
add
add
mov
add
push
push
push
inc
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
imul
loope
add
stos
lods
loop
add
add
add
push
cld
in
js
push
sti
mov
mov
std
add
add
mov
pop
add
test
add
xchg
ret
scas
add
repnz
enter
add
std
push
add
in
add
mov
add
add
std
add
lcall
cmp
or
int3
je
push
push
lea
inc
inc
push
or
inc
add
ror
sub
add
inc
dec
pop
add
sub
pop
push
ror
ror
dec
shl
pop
push
push
push
lea
push
push
lea
push
push
call
add
cmpsb
sahf
add
in
jp
aam
pop
ret
pop
mov
add
add
in
push
fldl
fs
add
int3
jge
add
out
lods
popa
loop
cwtl
in
lods
cwtl
add
jns
in
call
add
cmpl
je
push
push
add
add
push
or
not
add
not
dec
sub
add
pop
shl
pop
push
push
call
lea
add
add
add
add
enter
lret
std
test
add
loopne
scas
jo
add
mov
addl
add
jge
mov
add
add
cmc
incb
stc
add
add
jl
jb
loopne
stos
ret
clc
lcall
push
ror
inc
pop
call
push
lea
pop
cmpl
je
push
push
add
dec
sub
push
push
pop
add
shl
sub
lea
xor
add
pop
rol
pop
push
inc
pop
push
push
lea
push
push
call
leave
ja
fsts
jp
cltd
loop
xchg
into
push
leave
lods
add
add
stos
add
xchg
add
stc
add
leave
int3
mov
jmp
add
add
sbb
leave
add
add
sti
js
add
add
jge
fwait
cld
add
int
imul
aad
push
add
scas
add
xchg
lret
in
hlt
pop
call
push
ror
dec
pop
cmpl
je
push
push
sub
push
or
inc
add
rol
sub
sub
pop
sub
shl
pop
push
push
push
call
mov
add
add
add
add
mov
cmpsl
add
in
addb
add
mov
out
gs
add
add
add
into
xchg
int
add
pop
test
xchg
add
add
jmp
add
lds
sub
pop
push
push
push
lea
push
lea
push
lea
push
call
mov
fsub
lahf
add
icebp
jae
test
popf
add
jp
add
add
add
sahf
mov
frstor
loope
sub
pop
call
push
xor
shr
pop
cmpl
je
push
push
dec
xor
shl
shl
push
or
not
add
inc
inc
sub
rol
add
pop
dec
pop
push
add
pop
push
push
push
lea
push
push
push
push
call
add
pop
add
jae
add
pop
jbe
add
jge
addl
hlt
add
out
js
add
movsb
test
add
cltd
pop
pop
mov
add
add
jmp
add
cmpsl
jno
add
add
fcmovb
repnz
mov
in
call
call
cmpl
je
push
push
add
add
push
xor
add
sub
rol
dec
sub
add
pop
lea
ror
lea
rol
pop
push
sub
pop
push
push
add
add
rol
add
pop
call
push
push
push
push
lea
push
push
call
out
add
jb
add
lock
fldenv
lcall
loope
pop
mov
add
pusha
add
add
rcr
cli
add
cli
push
add
jl
iret
pop
add
add
add
add
add
add
add
pop
cmpl
je
push
push
sub
shl
not
push
push
pop
add
inc
sub
xor
shr
pop
pop
push
lea
push
push
call
cmpsl
clc
in
add
movsl
movsb
xchg
fwait
into
sahf
iret
add
add
add
jmp
add
repnz
mov
jmp
add
add
push
idiv
jno
add
add
mov
add
add
stos
jae
leave
loope
add
add
lret
incb
add
add
sub
pop
push
push
shl
pop
call
push
sub
rol
pop
cmpl
jne
push
lea
push
push
push
lea
push
push
lea
push
call
jbe
out
pusha
movsb
push
add
xchg
jb
ja
add
loop
mov
add
test
lock
add
add
add
add
add
pop
jle
mov
add
xchg
jp
iret
movsl
sub
pop
mov
push
push
push
push
push
call
add
jae
push
ficoms
add
xchg
test
subl
add
add
ret
into
add
lods
lock
out
test
imul
pop
movl
push
rol
pop
jmp
push
push
push
push
lea
push
lea
push
call
jp
mov
add
add
add
popf
insb
add
jmp
addb
push
cli
lret
lods
sub
pop
xor
push
add
xor
add
ror
pop
pop
pop
push
push
call
pop
scas
movsb
jb
add
add
stos
add
add
add
rolb
add
scas
shlb
pop
cmpb
fwait
test
jne
lds
add
mov
add
add
ret
in
add
add
cwtl
mov
lcall
push
xor
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
roll
add
xchg
add
push
add
add
test
add
push
xchg
movsl
ljmp
mov
add
add
fiadds
lcall
push
sub
add
not
pop
ret
push
shl
not
pop
push
push
push
push
lea
push
push
call
test
add
ljmp
add
add
jge
jnp
add
mov
add
cmpsl
fsts
add
stos
rcl
add
int3
mov
jnp
add
sub
pop
mov
push
sub
dec
pop
add
cmpl
jne
push
push
rol
not
add
push
sub
add
ror
ror
rol
sub
ror
shr
ror
pop
add
ror
dec
pop
push
lea
push
lea
push
lea
push
lea
push
push
call
xchg
mulb
add
addb
pop
xchg
add
cmp
fidivl
cli
fiaddl
push
mov
add
scas
out
jns
mov
shll
add
mov
add
push
xchg
add
add
add
lcall
add
lock
xchg
jge
in
call
pushl
push
push
push
push
push
push
push
call
cltd
add
ficoml
mov
add
pop
data16
push
lahf
lret
add
add
enter
lret
sahf
addr16
mov
test
add
mov
lock
add
clc
jae
in
in
call
push
add
pop
push
push
ror
sub
add
pop
call
push
pop
jmp
cmpl
je
push
add
pop
cmpl
jne
mov
push
xor
ror
sub
pop
call
ret
push
inc
pop
jmp
push
lea
dec
pop
cmpl
jne
push
push
shl
ror
rol
push
push
pop
add
rol
ror
sub
shr
pop
shr
add
pop
push
sub
sub
pop
pushl
call
push
rol
sub
pop
push
push
shl
lea
shr
pop
call
push
inc
ror
shr
shl
pop
jmp
push
push
lea
push
push
push
call
xchg
movsl
add
add
jns
add
loope
add
add
addr16
pop
add
mov
jne
add
mov
mov
movsb
sub
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
call
add
fdiv
add
jns
test
jp
jno
push
add
test
lock
mov
ror
push
add
hlt
xchg
add
add
movb
mov
push
push
push
push
push
call
into
mov
add
iret
add
mov
test
std
lds
add
add
into
add
iret
add
loop
in
add
add
aad
test
add
add
add
add
test
sub
pop
mov
push
push
push
sub
push
sub
add
add
add
ror
sub
pop
xor
xor
inc
pop
push
ror
pop
pushl
push
push
call
insb
add
leave
movsl
pop
enter
pushf
sarl
add
in
push
icebp
add
xchg
lcall
add
mov
scas
jecxz
add
add
add
lret
loopne
call
add
add
add
mov
add
mov
out
add
add
out
add
mov
add
add
add
and
add
shrb
mov
cmp
sub
add
add
push
or
inc
add
lea
ror
sub
shl
pop
sub
dec
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
push
lret
mov
add
hlt
js
mov
push
add
add
out
mov
add
fiadds
xlat
add
in
jge
flds
add
addb
pop
pushl
call
push
push
call
out
mov
add
add
cmpsl
add
stos
jge
mov
add
scas
mov
mov
cmc
lods
hlt
cmpsl
test
pop
shl
test
mov
xchg
fiaddl
mov
gs
add
add
in
add
testb
aam
in
in
cmpsb
xchg
add
mov
je
add
xchg
in
clc
pop
call
push
push
add
sub
push
or
not
add
ror
ror
sub
inc
sub
add
inc
pop
sub
pop
push
push
lea
push
push
call
add
mov
movsb
sarl
leave
add
add
mov
jmp
out
lret
pop
pop
cltd
fisttps
jo
mov
popa
fwait
add
pop
pushl
push
sub
lea
pop
call
push
pop
call
push
push
sub
shr
push
and
add
inc
rol
sub
shr
shr
pop
shl
rol
pop
push
lea
push
push
push
push
push
push
push
push
call
cmpsb
mov
xchg
mov
ljmp
jp
int3
filds
xchg
mov
add
lods
add
pop
mov
int3
scas
xchg
out
hlt
mov
out
add
add
jmp
out
pop
sub
pop
pushl
push
add
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
stos
shll
xchg
in
add
data16
roll
cmpsl
fidivl
add
lret
add
arpl
pop
jp
lret
mov
push
add
cld
rolb
add
imul
push
push
inc
inc
push
or
not
add
not
sub
not
sub
xor
pop
sub
rol
xor
pop
push
rol
pop
pushl
push
push
push
push
push
push
push
call
fwait
jo
ja
out
add
jno
movsb
jecxz
mov
push
add
add
add
jl
add
cli
add
add
in
call
push
push
push
call
mov
add
loop
add
std
xorl
cltd
lock
stos
add
rolb
add
add
bound
add
add
fiaddl
xchg
add
pushf
out
in
pop
mov
test
jp
outsl
add
add
mov
std
test
sub
pop
call
push
push
add
push
xor
add
rol
add
add
sub
pop
add
pop
push
lea
push
push
call
jecxz
xorl
fwait
add
lret
add
mov
popa
jecxz
rcr
mov
fcoml
add
pop
outsl
add
push
add
fildl
add
add
jp
sub
pop
pushl
call
push
push
lea
push
call
push
add
cmpsl
bound
cmpsb
mov
popa
add
lock
cld
add
add
pop
hlt
add
pop
mov
mov
add
add
add
mov
add
add
add
add
jns
mov
stos
add
add
cli
add
add
jns
xlat
ret
add
fstpl
sub
pop
call
push
push
inc
shl
sub
rol
push
or
inc
add
shr
add
sub
sub
lea
pop
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
pop
lcall
insb
add
ret
rcrb
add
jno
mov
add
add
add
movsb
add
add
fwait
xchg
xlat
pusha
incb
lods
xchg
add
int3
push
add
jno
ret
mov
add
add
rolb
mov
lcall
jne
push
not
rol
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
rclb
loopne
mov
shl
add
xlat
cltd
mov
out
movb
add
int3
fisubrs
add
filds
mulb
jb
mov
mov
lcall
shrb
mov
ljmp
incl
ret
pop
xchg
add
not
sub
shl
sub
pop
dec
pop
push
not
ror
ror
pop
pushl
push
ror
pop
call
call
push
push
shl
push
or
inc
add
ror
shl
dec
dec
sub
add
add
rol
pop
ror
pop
push
push
push
lea
push
call
cmpl
add
add
add
shl
int
add
mov
imul
add
push
jo
lahf
add
add
cmp
add
add
jne
mov
test
add
add
roll
popf
shlb
repnz
sub
pop
pushl
push
rol
pop
call
push
lea
xor
rol
pop
call
push
push
ror
push
and
add
add
dec
rol
sub
not
dec
lea
pop
sub
pop
push
sub
pop
pushl
push
push
push
call
push
add
jp
cmpsb
imul
add
out
mov
xchg
mov
add
movsl
rclb
add
int3
mov
lods
roll
xchg
jb
in
mov
cltd
int
add
add
mov
add
in
roll
into
xchg
sub
pop
call
push
add
add
sub
pop
lea
push
push
inc
lea
xor
pop
call
push
push
add
not
dec
push
or
not
add
add
add
dec
sub
lea
add
pop
add
add
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
aad
add
mov
pop
add
fldl
add
test
add
arpl
jge
shrl
add
xchg
add
add
add
push
add
add
lods
stos
add
mov
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
cmpb
add
repnz
add
fadds
mov
push
add
mov
add
add
lret
add
fildl
add
imul
fcmovb
sub
pop
call
push
push
push
push
push
push
push
push
push
call
loop
add
add
out
add
add
add
add
test
jge
add
push
outsl
add
lock
out
mov
add
add
add
stos
add
xlat
add
add
add
add
sub
pop
call
push
push
push
xor
add
dec
inc
inc
lea
sub
dec
lea
pop
sub
pop
push
lea
push
lea
push
push
push
push
push
call
xchg
add
jae
add
add
add
cltd
add
add
jl
add
ja
add
add
leave
add
add
add
jp
jl
arpl
xchg
jno
add
mov
push
add
cwtl
add
pop
repnz
add
add
push
add
in
sub
pop
pushl
call
push
shl
pop
call
push
push
lea
sub
push
sub
add
lea
add
inc
sub
xor
sub
ror
pop
not
pop
push
push
call
add
sahf
ljmp
mov
add
add
pushf
push
add
lods
add
gs
lods
scas
add
filds
lcall
mov
add
jae
mov
stos
lds
add
movsb
add
add
sub
pop
pushl
push
dec
pop
call
push
push
push
push
push
lea
push
call
bound
outsl
add
std
pop
shr
rcrb
addb
push
addl
push
add
add
out
add
jne
mov
jno
add
ja
in
add
scas
mov
jb
sarb
jb
push
add
push
rolb
mov
add
add
jae
sub
pop
call
push
push
dec
not
push
xor
add
sub
rol
sub
sub
sub
rol
lea
add
pop
xor
xor
pop
push
rol
pop
pushl
push
sub
sub
add
pop
call
push
push
sub
lea
dec
rol
push
or
not
add
sub
xor
ror
shl
pop
inc
sub
add
add
pop
push
push
inc
rol
lea
push
or
inc
add
sub
not
xor
pop
sub
ror
pop
push
push
push
push
call
out
std
add
fmul
pushf
mov
sti
add
add
shlb
int3
lret
xchg
mov
test
addl
add
add
out
cltd
mov
add
add
add
mov
loop
add
loope
push
push
mov
clc
sub
pop
call
push
not
xor
pop
pop
dec
jne
push
add
lea
pop
call
push
rol
shl
sub
xor
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
call
into
stos
add
add
cmpsl
call
xlat
add
mov
stos
add
mov
mov
add
add
add
call
test
add
add
add
les
icebp
add
add
scas
ja
stc
mov
orl
pop
int
push
push
lea
push
push
push
push
push
call
cltd
add
sahf
mov
add
test
add
int
cmc
leave
leave
jl
push
mov
mov
mov
jle
xchg
lcall
add
cli
pop
xchg
fst
add
loope
add
in
in
lea
push
push
inc
sub
add
push
and
add
xor
sub
add
shr
pop
inc
not
pop
push
push
push
push
push
push
push
lea
push
call
add
add
add
loope
add
insb
popf
jnp
add
movsb
aad
add
pop
add
add
add
add
in
rcr
pop
mov
add
jle
hlt
mov
add
mov
add
xchg
mov
add
lea
add
flds
data16
cld
sub
pop
pushl
push
shr
dec
inc
pop
call
push
push
push
push
push
push
push
push
call
add
mov
jp
add
add
add
add
out
jl
add
cmpsb
pusha
pop
popa
ljmp
add
mov
mov
add
add
je
xchg
mov
mov
cld
add
lcall
push
inc
lea
pop
call
push
push
add
push
or
not
add
add
lea
add
sub
rol
pop
xor
xor
pop
push
pop
pushl
push
lea
add
pop
call
push
push
call
mov
xchg
add
lds
fwait
jp
add
add
add
mov
add
add
scas
jmp
sahf
add
add
add
jl
mov
add
add
xlat
mov
pop
mov
nop
jmp
sub
pop
call
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
negl
enter
clc
add
lret
jo
add
mov
lahf
jle
add
scas
mov
add
cmc
add
lahf
add
imul
pop
lea
push
push
sub
push
push
pop
add
dec
shl
sub
lea
inc
pop
dec
pop
push
sub
add
pop
pushl
call
push
dec
inc
sub
pop
lea
push
rol
sub
pop
push
push
lea
shr
pop
push
push
push
push
lea
push
lea
push
call
add
lahf
fwait
mov
add
lds
add
hlt
stc
add
xchg
add
pushf
add
xchg
xlat
mov
push
add
xchg
mov
sub
pop
push
pushl
push
push
add
rol
push
or
not
add
sub
add
not
shl
not
pop
dec
pop
push
push
lea
push
push
push
push
call
pop
add
add
lret
std
lods
enter
jnp
mov
cmpb
jbe
pusha
bound
mov
sahf
add
mov
add
int
out
in
in
call
push
push
rol
ror
ror
push
or
not
add
shr
sub
add
pop
xor
shl
pop
push
add
xor
ror
add
pop
pushl
call
push
xor
add
pop
push
push
not
pop
call
push
push
add
sub
push
or
not
add
shr
sub
add
add
add
pop
shr
pop
push
push
push
lea
push
push
lea
push
push
call
xchg
loop
andl
cli
in
in
add
add
add
add
scas
xlat
xchg
push
add
js
scas
add
lahf
mov
ja
out
add
add
add
add
mov
add
push
stos
add
add
pop
popf
cwtl
scas
sti
add
sub
pop
pushl
push
lea
push
call
aad
cli
xchg
fldenv
fiaddl
add
add
addr16
add
mov
add
add
add
add
add
mov
std
addl
add
add
in
clc
lcall
adc
add
call
push
not
shr
pop
pushl
push
add
not
pop
mov
push
push
push
call
mov
jo
pop
push
jecxz
ret
mov
je
add
gs
lods
add
clc
add
xchg
add
add
hlt
lcall
and
ljmp
jbe
mov
push
and
add
rol
shl
sub
dec
add
not
pop
pop
push
lea
shr
sub
pop
pushl
call
push
dec
shr
dec
add
pop
push
call
push
push
add
sub
rol
push
or
not
add
lea
not
lea
sub
sub
add
pop
sub
not
shl
pop
push
inc
pop
pushl
push
rol
pop
call
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
push
jl
pop
jns
add
pushf
je
js
stc
add
jne
in
popf
add
add
xchg
add
add
xchg
add
push
lahf
lds
test
mov
add
add
jge
je
loope
mov
add
add
add
jecxz
cli
rolb
xchg
pop
call
push
add
pop
leave
add
push
push
push
call
rcrl
fsubrp
arpl
out
add
mov
incb
add
lock
add
shl
add
add
add
pop
test
xchg
sub
pop
pop
push
push
call
add
add
cwtl
xchg
add
stos
shrl
arpl
aad
in
addb
mov
mov
add
mov
pushf
ficomps
add
out
mov
add
mov
add
out
stc
int
push
add
sub
pop
pop
push
lea
push
push
call
xchg
aam
insb
rcrl
call
add
xchg
mov
add
cmpsl
add
add
imul
add
pop
add
add
lcall
lret
xchg
add
add
movsb
mov
add
add
pop
outsl
scas
mov
sub
pop
pop
push
lea
push
push
push
call
jge
gs
jge
sti
add
push
call
jae
mov
mov
add
ljmp
push
icebp
pop
int3
pop
stos
add
add
cltd
add
add
icebp
out
jle
rorb
mov
add
lds
xchg
fdivl
add
roll
lea
add
lret
add
pop
sub
pop
xor
push
push
push
push
push
call
std
add
mov
add
add
fnstcw
add
mov
push
call
mov
mov
add
icebp
xchg
jbe
in
add
add
popl
add
stos
incb
add
stos
add
sub
pop
inc
ret
push
dec
add
not
pop
leave
push
lea
push
push
push
push
push
push
push
call
add
add
pop
nop
pop
flds
jnp
xchg
pop
roll
jnp
add
add
add
scas
xchg
pop
mov
pop
add
add
add
add
add
sahf
repnz
add
sub
pop
ret
push
lea
push
push
push
push
push
push
lea
push
push
call
pop
add
add
xchg
addb
fsubrs
sarb
mov
add
pop
shll
lret
add
add
add
data16
mov
jae
mov
or
les
push
add
push
push
roll
add
jmp
into
call
std
iret
add
push
lea
push
call
add
add
mov
arpl
mov
mov
fwait
add
add
add
test
add
out
mov
add
lahf
js
push
push
add
add
add
add
push
jbe
outsl
incb
add
xchg
ja
add
insb
repnz
sub
pop
mov
cmpl
jne
push
ror
sub
sub
pop
mov
push
rol
dec
pop
jmp
push
not
shl
not
inc
pop
mov
push
rol
pop
and
push
dec
not
pop
xor
xor
push
push
push
push
push
push
call
out
enter
lcall
add
fldl
add
pop
stc
add
add
add
cmc
push
roll
cltd
add
sbbl
add
cli
add
lods
movb
add
add
pusha
aam
push
add
cli
add
add
sub
pop
add
push
shr
pop
xor
push
rol
inc
not
pop
dec
push
not
sub
pop
sub
jmp
push
sub
pop
sub
push
rol
not
add
pop
pushl
push
lea
push
push
call
fiaddl
jns
add
mov
mov
add
jmp
add
out
icebp
aam
addl
in
int
lods
cmpsl
jb
test
enter
add
sarb
add
filds
add
jne
in
idivl
add
mov
add
xchg
filds
lcall
push
not
not
pop
sub
push
push
call
movsl
ja
add
les
add
lahf
gs
add
filds
mov
sar
mov
stos
push
sarb
add
mov
incb
into
call
outsl
out
mov
add
add
in
clc
lcall
cmp
pop
call
int3
sub
sub
lea
pop
mov
lea
push
lea
push
call
call
jo
loop
add
add
out
nop
add
test
add
add
xchg
popf
add
add
cld
movsl
jl
gs
addl
pushf
mov
push
addl
lcall
jmp
rol
ror
pop
mov
push
lea
push
push
push
call
push
add
add
add
leave
add
movsl
jae
movsl
add
popl
mov
add
add
loope
jne
enter
add
sub
pop
shr
add
push
push
push
push
push
push
lea
push
call
add
lret
nop
out
jo
lcall
pop
bound
mov
mov
lods
add
add
pop
push
sub
pop
sub
push
shl
ror
pop
pushl
push
sub
pop
pop
shr
push
push
lea
push
push
call
icebp
fcompl
in
faddp
add
clc
test
jp
jl
add
add
ret
add
add
mov
iret
ffreep
addb
loop
add
jne
roll
add
imul
pop
and
push
push
call
pusha
mov
out
xchg
add
add
add
xchg
add
add
shr
jge
repnz
fadds
cltd
add
loop
add
hlt
in
add
mov
add
add
add
pop
imul
jb
loopne
cld
add
fstpt
lds
add
cmc
sub
pop
sub
push
push
push
lea
push
push
call
add
xchg
add
out
add
test
outsl
lahf
jmpw
js
clc
add
add
add
mov
cwtl
aam
test
cld
add
add
mov
add
add
addb
lods
jle
add
add
add
imul
add
test
cld
call
mov
mov
lea
push
lea
push
push
lea
push
push
call
cli
add
in
add
test
push
add
add
add
enter
add
add
jns
add
addr16
add
mov
add
data16
add
lahf
test
mov
call
add
pop
push
fadds
add
add
stc
cmpsl
add
add
mov
lcall
push
rol
xor
not
pop
ret
push
xor
sub
pop
push
mov
push
add
pop
add
push
sub
sub
pop
push
push
push
call
add
rolb
iret
cld
lds
add
popa
out
add
add
shll
jle
aad
add
add
add
add
mov
in
clc
lcall
push
dec
ror
pop
push
push
add
shl
ror
not
pop
push
push
add
inc
pop
push
mov
push
shr
pop
lea
sub
push
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
push
add
add
jl
mov
pushf
xchg
pop
jno
int
loope
push
xchg
cmpsb
mov
add
andl
pop
shr
push
shl
sub
sub
pop
add
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
nop
test
imul
add
gs
je
pop
jle
aad
add
add
movsl
loope
mov
lea
pop
mov
add
add
jno
add
pop
or
pop
std
cld
xor
cltd
pcmpeqb
bound
add
pop
loop
cli
add
pop
add
cwtl
add
xchg
pop
add
jbe
push
je
fdivr
add
push
shlb
mov
add
lods
jnp
mov
std
out
add
add
stc
pop
mov
add
push
pusha
xchg
add
test
in
js
cmpb
mov
add
sub
pop
mov
push
shr
pop
add
push
lea
push
push
push
push
push
call
add
add
add
out
roll
cmc
outsl
mov
sti
rolb
in
filds
xchg
lret
add
add
cmpsl
icebp
mov
add
jl
addl
add
notb
ret
fidivrs
dec
pop
mov
push
push
push
call
or
add
mov
jo
iret
jns
add
filds
add
pop
sahf
lods
jo
cwtl
ja
jle
add
mov
imul
add
add
fwait
lret
movsb
add
add
in
leave
xchg
push
jle
add
lcall
loopne
push
lea
push
push
lea
push
lea
push
call
add
js
jmp
add
add
add
xchg
jo
test
mov
add
add
add
add
in
pop
rol
rol
push
rol
dec
lea
lea
pop
xor
push
rol
sub
add
sub
pop
inc
cmpb
jne
push
push
push
push
push
push
push
lea
push
push
push
call
clc
add
jo
cmpsb
add
pop
add
add
add
lret
mov
pop
mov
in
push
popl
add
out
rolb
add
add
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
push
mov
mov
mov
jp
add
add
aam
movsb
icebp
scas
jle
cmpsb
aam
xlat
repnz
push
in
icebp
ljmp
add
add
xchg
add
out
ficomps
cmc
pop
cld
add
int3
mov
test
call
add
into
add
lret
add
add
out
mov
popl
add
lcall
inc
or
test
add
push
lea
push
lea
push
push
push
call
add
insb
data16
pop
add
fiadds
fmulp
hlt
fmul
pop
jmp
add
fildl
add
add
jns
add
push
add
lret
add
sahf
add
lcall
ret
adc
ror
xor
pop
cmpl
jne
push
push
push
push
lea
push
push
lea
push
push
push
call
jl
add
jne
add
push
add
xchg
add
add
ret
testb
lds
add
jecxz
leave
ret
push
out
add
add
add
add
fiaddl
add
jnp
in
call
add
lcall
rclb
cli
sub
add
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
cltd
sahf
add
add
jo
add
pop
add
add
shll
lret
push
add
andl
jae
push
add
pop
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
push
add
add
pushf
addl
in
ret
xchg
push
jo
arpl
shr
imul
xlat
js
add
in
add
loopne
arpl
add
in
xchg
push
sub
pop
pop
push
sub
add
add
pop
pop
push
inc
pop
pop
push
lea
push
push
push
call
add
test
add
add
insb
add
data16
add
add
add
add
push
add
cwtl
cld
jns
pop
les
in
je
mov
add
xchg
lahf
add
add
loop
andl
add
stos
push
nop
ja
add
ret
push
push
call
roll
add
test
scas
lock
jb
jbe
jp
push
add
add
movsb
flds
xchg
roll
addr16
popf
icebp
popa
mov
mov
test
out
std
jp
gs
popf
add
faddl
data16
sub
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
call
in
xchg
popa
add
jns
arpl
add
popl
mov
add
int3
add
xchg
jns
scas
add
add
xchg
add
add
mov
out
iret
ja
push
add
in
fdivr
lcall
push
or
lea
pop
push
push
inc
pop
mulb
push
dec
pop
pop
push
dec
not
add
xor
pop
call
push
push
sub
pop
call
push
push
lea
push
push
call
jne
add
js
pusha
andl
lret
add
lahf
cld
add
popf
rcll
jp
sahf
xchg
lods
add
xlat
loopne
add
popl
cmpb
add
roll
add
ret
add
cwtl
mov
loop
mov
xlat
add
sub
pop
xor
pop
push
dec
ror
sub
pop
pop
pop
push
lea
push
call
ja
add
lcall
imul
add
lcall
add
movsl
add
nop
add
add
movsb
loopne
in
int
js
add
add
cmpsl
arpl
mov
test
shlb
js
shrl
add
pop
push
push
push
push
push
lea
push
call
popa
add
loope
loop
lahf
mov
lret
xchg
add
add
mov
add
test
push
xchg
ret
add
test
add
jl
push
lock
mov
ret
sub
pop
leave
push
add
pop
ret
push
add
shr
pop
push
mov
push
not
sub
pop
add
push
xor
sub
not
pop
push
push
push
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jmp
add
int
add
push
stos
cltd
scas
lret
add
int3
mov
add
fidivl
mov
in
in
fldl
jge
ja
addl
hlt
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
movsb
int3
lahf
mov
cld
xchg
pop
push
add
lea
push
add
add
add
add
push
lret
jne
sahf
add
lock
add
sub
pop
push
pop
push
ror
not
shr
pop
lea
sub
push
push
lea
push
push
call
imul
push
add
ja
add
shr
cld
ror
test
jne
add
out
insb
add
bnd
out
ficomps
add
jmp
in
enter
jb
add
mov
add
add
add
add
pop
movsl
icebp
add
jle
jnp
xchg
add
add
lcall
adc
ljmp
push
push
push
call
jns
lret
lcall
add
data16
add
fistpl
add
mov
mov
add
push
rcrl
pusha
popf
add
lods
movsb
add
mov
pop
lret
add
add
pop
add
ficoml
shrl
lea
push
push
push
push
push
push
call
popa
add
add
popl
add
pop
mov
pop
add
stos
add
add
add
add
imul
add
push
imul
in
fcomps
pop
js
push
push
push
push
call
mov
add
pop
add
add
pop
outsl
and
add
roll
popa
add
stos
popa
lcall
lods
add
add
data16
in
fistpll
sti
cwtl
sub
pop
add
push
push
push
push
lea
push
push
call
movsb
push
mov
jmp
add
test
mov
pop
mov
add
enter
fidivs
add
add
addr16
pusha
test
add
mov
mov
out
sub
pop
pushl
popl
push
shr
add
rol
lea
pop
mov
push
shr
rol
pop
add
xor
push
push
push
push
push
push
lea
push
push
lea
push
push
call
rcrl
add
add
fst
add
add
add
movl
shl
mov
mov
add
add
add
loopne
rolb
add
add
ficoml
add
pop
add
shlb
in
fcomps
adc
push
shr
pop
mov
push
push
push
push
lea
push
push
push
call
jge
bound
add
pusha
lret
fsubr
mov
int3
add
pop
out
outsl
add
out
pop
add
jnp
lcall
jmp
call
jo
add
add
add
pop
gs
sub
pop
add
xor
push
not
pop
rol
push
push
push
push
push
push
push
push
push
push
call
add
xchg
mov
shrb
loop
sti
jp
cld
lock
xchg
add
add
add
add
add
push
push
jae
mov
imul
add
lcall
in
add
add
add
add
add
jp
sub
pop
nop
push
inc
rol
add
pop
nop
xor
push
rol
pop
nop
push
add
inc
shl
pop
nop
inc
push
lea
push
push
push
call
pop
in
push
push
add
add
mov
xchg
add
jecxz
incb
mov
aad
push
add
std
lahf
jecxz
add
cmpsb
add
sahf
mov
cld
add
rolb
lcall
push
inc
shl
pop
nop
cmpb
jne
push
push
push
push
push
push
lea
push
push
call
xchg
sahf
icebp
jl
fstl
cmp
mov
fidivl
call
add
lret
add
add
push
lock
jae
not
faddl
add
in
loopne
lcall
inc
pop
ss
nop
push
add
add
pop
nop
push
lea
push
push
lea
push
push
call
jnp
test
add
add
mov
add
pop
add
mov
imul
add
jo
cwtl
pop
push
into
mov
leave
jl
add
add
add
push
add
fildl
fcomi
add
jecxz
jge
add
iret
movsl
add
add
fstps
add
add
add
add
in
pop
cmp
je
push
rol
rol
shl
sub
pop
nop
push
push
lea
push
call
push
jns
add
fld
add
add
add
xorl
scas
add
hlt
jns
pop
pop
add
mov
add
mov
loope
add
mov
pop
add
in
hlt
pop
nop
inc
push
dec
shl
pop
nop
push
shr
lea
shl
pop
nop
push
lea
push
push
call
add
lea
fildl
add
repnz
jnp
add
out
mov
jmp
aam
xchg
je
add
add
sub
pop
cmp
jb
push
lea
push
call
test
add
jae
fstl
jl
add
add
in
add
add
popf
mov
pop
add
addr16
add
repnz
pop
add
push
flds
arpl
mov
lock
in
imul
movl
ja
loope
jge
add
xchg
pop
add
sub
pop
xor
jmp
push
lea
pop
mov
add
push
push
push
push
push
push
push
call
xchg
insb
pop
sti
repnz
xchg
mov
mov
jb
add
add
add
pop
add
stc
addl
add
add
shrl
lds
add
iret
pop
insb
add
mov
lcall
mov
jb
lea
push
push
lea
push
push
push
push
push
push
push
call
mov
add
push
std
add
add
rorl
int
mov
add
push
js
push
lahf
add
add
sub
pop
mov
add
push
push
lea
push
push
call
out
add
cmpsb
jae
xchg
int3
xchg
in
add
bound
lods
lea
mov
imul
test
icebp
add
add
add
stc
mov
sub
pop
mov
xor
push
add
lea
add
pop
xor
push
shr
shr
inc
pop
shl
push
inc
xor
not
pop
xor
shl
push
push
push
lea
push
call
ja
add
add
add
iret
add
icebp
jge
cltd
xchg
popf
int
shll
fldz
jp
lock
loopne
push
add
les
cltd
arpl
add
loope
repnz
gs
pop
in
xlat
mov
pop
add
data16
lret
shlb
add
sub
pop
xor
shl
push
add
not
pop
xor
push
push
push
push
push
lea
push
lea
push
push
push
call
fldpi
mov
add
jle
xchg
out
add
sahf
add
add
add
add
jae
arpl
call
mov
stos
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
jae
add
add
add
add
add
mov
add
mov
mov
add
int
push
pop
cmc
add
add
aam
xchg
mov
add
aad
pop
scas
add
test
add
add
imul
lock
add
mov
xchg
cmpsl
test
mov
sub
pop
add
pop
push
push
push
call
mov
push
adcb
mov
andb
pop
pop
add
cmpsb
cli
mov
add
ljmp
stc
add
add
imul
fildl
enter
add
add
lcall
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
sahf
mov
enter
add
add
add
addl
add
add
iret
mov
jle
add
popa
test
add
add
aad
dec
add
add
add
add
mov
in
fcompl
push
push
push
call
cli
mov
add
xchg
push
add
je
in
ja
add
add
arpl
mov
jle
fldl
add
divl
movl
pop
movsl
push
add
fninit
add
add
notl
mov
push
add
add
add
xchg
mov
lcall
ret
push
push
push
push
push
push
call
add
icebp
bound
movsl
push
test
add
add
add
add
add
mov
out
add
fisubl
add
mov
pushf
pop
mov
pop
gs
add
rol
add
add
in
call
push
lea
pop
push
push
push
sub
not
inc
pop
push
push
push
shr
rol
pop
mov
mov
push
lea
push
push
push
lea
push
lea
push
call
lods
jbe
xchg
incb
iret
jo
sti
xchg
iret
fisubrs
scas
add
mov
filds
mov
cltd
jae
nop
sti
mov
add
mov
jle
jns
popf
add
lcall
jge
push
push
push
lea
push
push
push
call
sahf
rorl
pop
add
add
pop
add
push
popl
cltd
or
enter
pop
jl
jo
mov
add
mov
mov
add
add
add
shlb
mov
mov
lcall
rorb
test
or
add
test
je
push
add
pop
mov
push
dec
not
inc
pop
mov
push
add
pop
mov
inc
push
pop
cmp
je
push
ror
sub
pop
test
je
push
push
lea
push
call
add
mov
add
mov
add
add
pop
jne
add
rolb
imul
add
push
add
lcall
testl
add
insb
add
add
add
mov
inc
push
lea
push
push
push
call
out
add
add
push
call
push
push
arpl
xlat
std
jl
add
mov
add
je
testb
ja
push
pop
mov
roll
pop
push
ret
xchg
test
bound
pusha
rorl
fbstp
add
jecxz
lods
mov
sub
pop
cmp
je
push
push
lea
push
lea
push
push
push
lea
push
call
add
xchg
popa
test
add
mov
fsubrs
add
add
add
jne
add
add
fistps
outsl
movb
pop
icebp
add
add
lods
add
add
lcall
rorb
and
call
ds
push
lea
push
push
push
push
lea
push
call
cmpsb
movsb
add
mov
pop
bound
movsl
leave
add
add
mov
add
pop
movsl
add
icebp
add
cltd
out
pop
pop
xchg
add
stc
add
add
pusha
mov
out
lcall
xlat
add
imul
add
pop
xor
pop
push
push
call
mov
jb
cltd
xchg
icebp
nop
add
add
movsb
test
add
jmp
test
add
add
mov
leave
add
jns
pop
mov
stos
jae
std
movsl
add
jmp
sti
xlat
arpl
push
lea
push
call
add
jne
fwait
add
add
call
add
test
add
ret
add
push
add
scas
popa
mov
popa
cltd
push
aam
jle
add
mov
mov
jp
out
sub
pop
pop
push
shl
lea
pop
pop
push
push
push
push
lea
push
push
call
mov
fidivl
fstpl
xlat
nop
jge
sahf
push
add
lea
std
add
test
js
add
pop
add
add
call
leave
push
push
push
lea
push
lea
push
call
add
add
stos
mov
in
mov
call
pop
add
add
add
add
loopne
jp
loopne
cwtl
add
lds
add
add
rcl
add
in
cmc
cwtl
add
jb
sub
pop
ret
push
lea
push
push
push
lea
push
push
call
loopne
add
jge
add
jb
xchg
lcall
loopne
add
add
add
add
add
stos
iret
jmp
add
sub
pop
mov
push
not
sub
sub
pop
inc
push
lea
lea
add
pop
cmp
jne
lea
push
lea
push
push
push
call
out
add
jo
push
in
add
mov
insb
out
fwait
add
fildl
add
xorb
filds
mov
add
jae
bound
stc
bound
rolb
add
in
add
pop
jo
add
imul
je
push
ror
not
add
shl
pop
mov
push
dec
add
pop
add
push
push
push
push
push
lea
push
push
push
call
pop
loopne
test
out
mov
pop
push
add
add
lds
push
add
in
add
sahf
test
add
add
nop
mov
push
add
add
loopne
test
decl
push
push
push
call
cmpl
movsb
add
mov
add
imul
mov
add
cmpsl
add
jge
push
lcall
jo
cwtl
shl
mov
lods
test
add
add
add
add
sub
pop
test
je
push
push
lea
push
push
push
lea
push
push
push
call
add
add
int
mov
mov
add
bound
cld
lds
addl
mov
les
add
popl
pop
addb
add
addr16
add
in
arpl
add
add
shl
pop
int
add
popf
add
pop
or
stos
test
roll
gs
add
xchg
mov
xchg
out
stc
add
add
sub
pop
mov
add
push
pop
cmp
je
push
push
push
push
push
push
lea
push
push
call
notb
add
popa
mov
add
add
add
add
add
add
add
sub
pop
jmp
push
push
lea
push
call
in
imul
add
fwait
cwtl
rcll
loopne
pop
add
add
add
xchg
rclb
mov
push
loope
add
add
ja
icebp
add
xchg
xchg
add
add
in
roll
add
mov
add
movsl
add
add
lcall
rclb
int
addr16
call
add
add
roll
add
add
clc
mov
rclb
js
and
jo
mov
push
mov
push
add
fwait
add
in
hlt
lcall
push
lea
push
push
push
push
push
push
push
call
imul
mov
mov
jb
add
cld
test
pop
add
add
pop
xchg
pop
insb
add
popa
sub
pop
pop
pop
push
push
lea
push
lea
push
call
jecxz
pushf
mov
add
scas
mov
nop
push
add
add
mov
add
lds
int3
add
gs
add
lods
push
rolb
add
lods
clc
add
je
xchg
push
cmpsl
add
negl
add
int
testl
out
mov
lcall
leave
push
xor
pop
ret
push
shr
shl
pop
lea
pop
push
xor
pop
pop
push
shr
ror
pop
pop
pop
push
shr
shr
pop
leave
ret
push
push
lea
push
push
push
push
push
push
lea
push
call
push
add
add
mov
add
sti
test
xchg
add
mov
test
add
add
mov
pop
xchg
fs
add
add
scas
fcmovnbe
cld
int3
add
add
add
in
fcompl
push
lea
push
lea
push
lea
push
push
lea
push
call
lods
mov
xchg
rclb
add
jnp
mov
push
mov
fwait
add
nop
add
mov
push
jbe
add
add
cltd
pop
push
add
scas
add
add
stc
add
fwait
stc
add
pusha
jnp
sub
pop
pop
pop
push
push
push
lea
push
push
call
mov
loopne
add
mov
stos
sahf
fs
push
xchg
insb
addb
in
add
add
cwtl
loope
add
lods
mov
lods
mov
cld
lret
add
add
in
in
pop
pop
pop
push
push
push
push
push
push
call
leave
pop
push
adcb
add
fistpll
add
int3
popf
clc
pop
add
add
mov
aam
sub
pop
leave
ret
cmp
mov
xor
mov
mov
mov
icebp
into
mov
loope
mov
ror
stos
out
lret
cld
lret
xchg
lret
or
rorl
insb
shrl
dec
cmp
mov
pop
std
sub
or
cmc
cmp
xor
std
jnp
dec
sub
adc
cmp
or
pop
outsb
and
pushf
lcall
jnp
enter
pop
push
test
mov
repnz
inc
mov
out
sub
sahf
cwtl
cmp
inc
lret
jp
inc
inc
daa
mov
int
xor
or
inc
faddl
in
cli
loope
fimull
mov
lds
lret
data16
out
rolb
insl
jmp
dec
clc
dec
fwait
jp,pt
sbb
xlat
jns
fbld
xor
gs
lods
fisubs
inc
sub
push
dec
loop
push
xchg
xchg
pop
in
sub
shr
or
jae
cmp
jae
pop
leave
shll
push
jl
cmp
loope
sbb
fcomi
jmp
insb
xchg
pusha
pop
repz
mov
dec
lahf
movsl
and
ror
ret
and
pusha
mov
or
mov
das
pop
pop
push
incb
xchg
push
aam
inc
test
jp
add
popa
dec
dec
int
or
inc
lods
int
fwait
jle
fiadds
shrb
xchg
cmpsb
mov
dec
popf
pop
inc
inc
imul
jne
jp
xor
movsb
int
cmp
decb
xor
mul
popf
addr16
cmpsl
xchg
and
mov
mov
ret
test
ss
mov
addr16
aam
jp
lret
push
dec
ret
clc
pusha
mov
aaa
ljmp
pop
jno
inc
and
jl
add
shll
movsb
or
ret
sub
shl
not
dec
push
je
adc
divl
cmp
fcomps
iret
cltd
push
mov
xchg
mov
scas
dec
cli
arpl
scas
add
dec
sub
adc
cli
sub
add
cmp
xor
push
das
xchg
repz
sbb
aam
das
fs
jb
outsl
mov
int3
cld
pop
dec
sub
shlb
xchg
or
mov
data16
and
cli
ficomps
jne
mov
movb
mov
lds
or
or
cmpsb
add
into
hlt
or
xlat
out
dec
jno
pop
pushf
mov
xchg
adc
mov
mov
pop
mov
dec
iret
arpl
cwtl
pusha
jae
push
dec
imul
pop
jmp
mov
shl
xor
sbb
or
pop
stos
cmp
xor
mov
shlb
mov
mov
icebp
sub
push
xlat
add
and
push
jp
repz
insb
ja
pop
scas
cs
jns
cltd
ret
cltd
mov
pushf
fidivl
cmp
push
ret
movsb
mov
jle
or
dec
es
mov
clc
cs
inc
xchg
scas
mov
jp
lods
lret
stos
test
cs
movl
inc
jae
or
mov
xor
mov
fcmovbe
ret
lret
inc
push
xor
fwait
call
dec
loop
xchg
lods
lret
inc
xorb
mov
sbb
test
cmp
dec
jg
jne
or
pop
ljmp
ret
xchg
push
ja
fnstenv
push
add
jbe
ret
push
add
add
pop
pop
push
mov
and
pop
ret
loop
push
dec
lea
push
shrb
pop
inc
and
insb
cmp
in
mov
in
sub
out
ret
sbb
cwtl
push
mov
mov
inc
fwait
cmc
push
xchg
das
xchg
xchg
fiadds
int
mov
cmp
and
pop
int3
lea
mov
jg
mov
jo
adc
test
loopne
fwait
vpminub
clc
cmpsl
mov
or
popa
fdivrs
or
lret
aam
adc
leave
sub
scas
jp
test
pop
jle
adc
mov
loope
lret
xchg
das
ds
or
popf
fisttpl
outsl
out
loopne
xchg
aaa
movsl
adc
sub
test
outsl
mov
aad
lea
xor
or
xchg
sti
out
push
mov
mov
arpl
imul
and
xchg
jnp
add
adc
sub
xchg
fwait
std
lahf
scas
pop
nop
push
inc
push
jb
ja
pop
ror
jns
int3
or
loop
xchg
aas
out
jge
jg
xor
loope
jno
jg
cwtl
je
data16
jns
addr16
mov
loope
lret
inc
cmp
sbb
testb
loope
cmp
loopne
fs
mull
or
movsl
pop
lcall
sub
aam
jl
push
xchg
push
adc
vmaxps
xchg
jle
xchg
add
test
aam
addr16
sub
cltd
dec
iret
test
add
dec
inc
xchg
fs
sub
xor
and
cmp
lock
mov
ret
sbb
dec
xor
add
xor
in
fucompp
pop
mov
pop
mov
shrb
fwait
push
int
adc
lods
outsb
mov
repz
out
jp
repnz
aad
rclb
aad
sub
xchg
ja
and
stos
mov
cmpsl
dec
xor
nop
rep
add
pop
adc
adc
inc
cmpsl
xlat
push
adc
aaa
pop
adc
ds
xor
sbb
and
inc
ljmp
int
adc
and
jl
es
xor
or
jnp
test
stos
std
pushf
xchg
scas
lds
jbe
jecxz
xor
call
shl
inc
mov
test
mov
mov
push
add
nop
push
dec
xchg
je
out
fwait
enter
pop
mov
int3
jns
mov
push
je
xlat
cmp
xchg
cmp
ss
sbb
popa
in
mov
inc
mov
push
cli
mov
xchg
rcrl
pusha
andl
mov
dec
xor
mov
addr16
lock
test
and
xchg
jns
stos
sub
movb
sbb
jne
jne,pt
insl
jle
cmp
mov
test
push
enter
dec
scas
adc
pop
xchg
mov
xchg
std
rcrb
popf
xchg
and
xchg
addr16
sub
cmp
or
mov
out
jns
adc
jp
sub
xlat
test
pop
pop
imul
add
js
nop
pop
pop
bnd
cmp
dec
imul
aad
pop
in
dec
sub
repnz
push
fnsave
shl
cmpsl
sbb
lods
cld
push
mov
and
or
cmp
mov
xor
mov
fstpl
cltd
mulb
outsb
xchg
xlat
add
gs
rclb
dec
es
ljmp
fcmovbe
in
fildll
pushf
addb
loop
fwait
pop
repnz
sahf
stos
ret
jg
mov
mov
push
std
cmpsb
cmp
std
xlat
scas
jo
push
cmp
mov
and
jnp
pop
or
icebp
leave
dec
pushf
dec
push
das
ret
xor
mov
mov
xor
xchg
push
jl
je
dec
or
iret
pop
cli
adc
push
sub
sahf
mov
cwtl
or
movsb
cmp
arpl
xchg
addr16
in
mov
sbb
ja
and
xchg
inc
pop
imulb
xchg
adcb
adc
mul
mov
fsubs
ret
pop
adc
and
pop
aam
das
andl
push
mov
push
xchg
loopne
imul
lds
xor
and
add
cmp
enter
jmp
push
fstpt
jo
mov
add
insl
push
sub
cltd
cli
out
clc
cld
dec
push
pop
out
cmpsl
cmpsb
and
loopne
sub
mov
mov
sbb
or
push
stos
inc
shll
rol
or
rorb
inc
das
sbb
out
adc
int
dec
outsl
mulb
pop
cltd
test
and
arpl
and
scas
xor
cmc
or
cmp
loope
je
dec
mov
mov
mov
lret
push
mov
imul
pop
in
adc
outsb
repnz
sub
and
sub
add
cmp
push
incb
jb
xchg
jmp
jb
out
dec
aas
js
in
cmp
or
sbb
addr16
in
imul
sbb
loopne
push
clc
sub
xchg
aas
test
push
inc
xor
inc
fistpll
add
cs
xlat
out
loopne
xchg
movd
jmp
loop
fisubs
jp
aad
pop
adc
cmp
xlat
or
cmpb
sub
leave
std
fstps
jle
mov
jecxz
xchg
xor
jno
mov
daa
fdivrs
das
ss
loop
sbb
mov
aas
jnp
test
repz
add
mov
mov
and
push
pop
fcmovu
ljmp
or
mov
adc
pushf
inc
mov
das
xlat
outsb
push
sub
aas
mov
test
pop
jle
mov
xchg
push
outsl
inc
mov
inc
scas
cmp
or
sbb
cmp
add
lock
test
scas
int3
and
push
jecxz
pop
push
das
xor
push
stos
jo
push
cmp
jmp
in
scas
ret
jge
inc
cmc
pop
or
mov
xor
add
cmp
adc
xorl
mov
sub
sub
aas
add
frstor
outsl
xor
cwtl
sti
loopne
lret
and
mov
data16
in
leave
sbb
mov
jo
cmc
mov
mov
pop
repnz
fwait
push
mov
imul
les
enter
inc
outsl
add
cmc
test
push
jns
sub
fldenv
mov
lcall
add
cmp
jmp
fs
fs
adc
cmp
adc
pop
cmc
enter
cmp
xor
push
addr16
lret
or
lret
dec
mov
xchg
subb
loopne
dec
jle
cmp
push
push
jle
cmp
inc
std
mov
cmp
shll
push
or
adc
lods
jp
and
xchg
add
mov
dec
xor
lock
push
xor
pop
xchg
xor
pop
cmp
std
shlb
imul
rcrl
sahf
int
loope
decb
inc
shl
hlt
mov
sbb
and
push
test
xor
mov
jl
mov
es
pop
cld
xlat
cs
and
or
cwtl
mov
push
sarl
addr16
inc
jbe
in
ljmp
sub
clc
xor
fdivrs
cwtl
out
xlat
dec
and
fildll
push
lods
inc
ret
and
xchg
loopne
pop
in
jp
aaa
dec
out
add
das
aas
stc
in
ja
pop
jns
xlat
add
andb
cmp
fimull
xor
ror
sbb
xchg
fildl
push
ror
add
cltd
add
xlat
out
loope
sbb
shr
mov
inc
and
lahf
pop
cmpsl
sbb
pop
movsl
pop
dec
gs
xorb
mov
jb
ret
sub
jg
cld
test
xchg
inc
aad
jnp
sub
pop
dec
jnp
mov
and
inc
jns
add
sbb
xchg
xchg
dec
stos
ret
mov
pop
dec
pop
jle
push
rol
test
mov
loope
dec
iret
cmp
push
jne
shr
fs
push
adcl
scas
dec
mov
jb
in
outsb
into
out
and
leave
cli
add
inc
stos
inc
mov
int
mov
fwait
cmp
xor
cmp
or
jnp
mov
jecxz
mov
push
test
cltd
jecxz
sbb
or
or
xor
enter
sbb
add
inc
mov
push
or
mov
jg
and
lods
push
stos
jno
repnz
shl
push
inc
ja
int3
jg
jmp
add
repz
inc
jo
pop
or
faddl
add
pop
dec
sbb
adc
fildll
stc
cmp
stos
mov
lret
mov
test
inc
and
xchg
test
mov
and
or
pusha
jbe
loope
ja
aad
and
push
fidivrs
xchg
jge
and
add
xchg
adc
daa
ja
sub
scas
addr16
xchg
xor
push
mov
pop
fs
add
ret
sub
pop
mov
loope
xlat
or
cmp
cmp
adc
inc
cmp
fstpt
sub
xchg
std
nop
popf
gs
pop
cmpsl
jo
fcoms
sub
mov
test
mov
cltd
dec
sub
outsl
adc
cmc
mov
loope
mov
lret
int3
jmp
lods
or
mov
negl
sbb
adc
adc
imul
sub
push
lock
out
and
pop
hlt
loope
mov
callw
cwtl
loopne
jbe
cmp
mov
cmp
mov
jns
rcrb
movd
lret
movsl
sti
ljmp
fwait
in
aaa
jle
int3
test
mov
popa
push
push
mov
neg
pusha
push
xor
stos
js
out
sbb
or
lret
call
xchg
cmp
lret
dec
sbb
push
imul
xchg
push
addr16
push
sub
data16
js
sbb
dec
pop
rcr
inc
movsl
push
sbb
or
xchg
xchg
lret
fldl
and
or
lret
jp
lods
sbb
xchg
loopne
in
jp
jb
data16
adc
or
or
add
ja
stos
fsts
jl
in
sti
adcb
push
push
std
jge
mov
push
lahf
inc
enter
dec
sbb
clc
in
jge
and
fdivp
dec
outsb
xchg
ret
mov
fcoml
stc
into
push
xchg
imul
sbb
cli
inc
sahf
mov
pop
jae
les
and
jg
frstor
xor
lahf
xor
dec
stos
lret
cmpsl
cmp
push
stos
shll
add
stc
mov
int3
imul
scas
dec
in
test
ja,pt
fsubrl
inc
sbb
outsb
popa
add
and
imul
fisubrs
xchg
mov
out
int
lcall
lods
jno
dec
jmp
adc
daa
lcall
pusha
aas
xchg
loop
dec
jb
in
mov
jl
xor
insl
test
or
add
sti
loope
shll
jbe
xchg
mov
mov
push
adc
push
ds
loope
pop
pop
mov
repnz
pushf
lret
and
pop
outsb
add
xlat
add
lret
add
push
mov
inc
inc
pop
xchg
rcr
cs
mov
adc
or
pop
imul
push
rorb
lods
inc
or
cmp
and
mov
inc
out
xor
bound
out
stc
test
adc
add
fstpt
inc
in
push
icebp
dec
inc
inc
xchg
popf
sub
xchg
in
add
idivb
loopne
pop
mov
shll
bound
xor
sub
nop
bswap
test
push
sbb
pop
xor
mov
mov
lods
xchg
clc
ret
pop
cwtl
add
mov
ds
ja
inc
imul
clc
sar
mov
cmp
add
inc
pop
in
jmp
arpl
adcl
insb
mov
add
or
pusha
cmp
sbb
out
ds
cmp
jbe
ss
xchg
test
test
or
dec
call
jbe
jecxz
fcomi
xlat
lods
insb
or
inc
lret
in
mulb
dec
push
cmp
fnstenv
pop
mov
push
ds
sbb
in
fs
roll
sbb
insl
xor
cs
adc
mov
gs
out
in
fnsetpm(287
mov
lret
push
fidivrl
mov
lahf
xchg
loope
mov
jne
sti
mov
insb
sub
xchg
mov
push
mov
les
xchg
aad
sub
inc
notb
lock
mov
add
push
cmp
addl
dec
lahf
cmp
in
or
mov
aad
add
sub
inc
adc
jbe
lahf
push
lds
sahf
mov
inc
fists
mov
outsl
and
and
mov
je
adc
push
xor
xlat
jbe
call
inc
jae
mov
cs
cs
mov
xchg
aaa
jge
leave
jo
sti
cwtl
or
add
insb
ja
mov
leave
lret
test
jp
sarb
push
or
ret
divb
xor
mov
and
mov
add
test
lret
push
ret
cmc
out
shr
loope
or
lods
jmp
cmpsb
mov
inc
mov
out
ret
mov
cltd
xchg
sub
jbe
aad
xor
das
sbb
mov
bound
inc
lahf
pop
dec
sbb
jne
mov
lds
repnz
push
fnsave
xchg
mov
jp
jge
clc
insb
sbb
mov
iret
loop
mov
push
js
aad
mov
mov
shll
popa
pop
pop
jb
dec
sahf
leave
mov
mov
cmp
mov
or
addr16
cmpb
arpl
push
cli
sub
aad
xchg
mov
clc
ret
repnz
mov
push
aad
adc
sub
mov
shlb
les
bound
pop
shlb
sti
jle
dec
lods
jnp
clc
stos
bound
ljmp
rcr
push
jmp
fstpl
add
shrl
insl
adc
lods
inc
mov
cli
jge
setl
adcb
les
test
and
xchg
xchg
scas
les
lds
mov
mov
fidivrs
pop
test
rep
xchg
out
xor
imull
dec
adc
jno
adc
pop
ds
insb
add
sbb
les
scas
inc
fistl
xchg
xor
push
lret
adc
inc
push
imul
xchg
inc
push
mov
cmpl
or
lret
lea
or
adc
out
fidivs
cmp
pop
ds
dec
inc
fwait
jge
pushf
cmp
movsb
lock
sub
mov
push
sarl
imul
and
ret
mov
xor
test
adc
out
or
lahf
sub
test
mov
push
cmp
ror
mov
addr16
loope
adc
mov
imul
sbbb
mov
movsb
lods
faddl
pop
push
jns
or
mov
xor
mov
loop
out
xchg
packssdw
outsb
mov
arpl
shlb
dec
and
sub
arpl
inc
or
jns
or
pop
mov
es
mov
sbb
scas
pop
mov
addr16
out
mov
mov
jnp
adc
lods
nop
sbbb
out
mov
js
clc
movsb
mov
inc
xchg
test
push
sub
inc
cli
hlt
int
xor
mov
or
clc
lahf
shr
mov
dec
xlat
add
orb
addr16
mov
movsl
pop
and
jbe
icebp
mov
fwait
pop
aas
and
mov
mov
aad
js
add
rclb
add
mov
imul
pop
dec
pop
jnp
mov
inc
inc
push
mov
xlat
jge
mov
sbb
out
mov
mov
xchg
or
push
icebp
push
pop
push
fildll
inc
mov
outsb
icebp
add
cmp
iret
jle
out
sbb
pop
sbb
movsb
add
mov
bound
ja
xchg
adc
pusha
push
cli
cld
and
pop
scas
mov
xor
sarb
movsb
jge
xchg
imul
nop
mov
lret
shrl
imulb
cmpsl
jmp
adc
movsl
imul
or
nop
popf
rorb
inc
js
push
rcl
cmp
outsl
xor
jecxz
sbb
adc
nop
inc
mov
or
mov
pop
imul
mov
sbb
sbb
rclb
je
call
xor
fildl
xchg
and
dec
mov
mov
mov
or
jmp
pop
ja
adc
push
pop
test
aas
adc
and
popf
test
shrb
lods
add
addr16
jb
std
ds
lock
mov
adc
dec
cmc
xchg
mov
orl
aaa
ja
xor
adc
cmp
adc
and
scas
push
lods
mov
neg
in
push
sbb
pop
mov
fstl
adc
cli
mov
xor
cmpsb
adc
jb
push
inc
inc
or
clc
sbb
push
sbb
pusha
inc
ljmp
inc
insb
loopne
mov
push
clc
jecxz
jb
mov
xor
sub
aad
jecxz
imul
inc
jne
popf
push
jae
das
dec
mov
pushl
push
test
cmc
xor
mov
sub
mov
or
insb
daa
scas
decb
test
fstpl
mov
xor
arpl
pop
test
inc
sti
push
ret
lret
les
xchg
adc
mov
aad
negl
repnz
fimull
incl
adc
cmp
dec
and
call
ret
rep
test
test
test
xlat
aas
outsb
mov
jns
sub
fmull
sti
scas
xlat
outsb
or
sub
jae
push
or
and
loopne
pop
mov
and
popf
dec
mov
inc
stos
jle
sbb
add
dec
mov
fwait
mov
dec
mov
push
mov
dec
pop
scas
xchg
loop
sub
rorb
mov
imul
bound
dec
and
push
adc
xchg
lods
mov
cs
lods
or
enter
out
pop
aam
mov
pop
imul
adc
pushl
jg
or
add
sahf
adc
mov
std
adc
aam
imul
add
dec
ds
out
leave
popf
jae
and
add
adc
hlt
in
jg
jne
outsl
pop
jne
mov
lret
adc
xor
pop
lret
dec
or
pop
lods
pop
jne
call
sti
out
fistl
push
lahf
test
pop
add
sbb
adc
pop
leave
imul
sbb
jae
hlt
cmp
mov
add
and
sub
stc
or
scas
pop
pop
and
mov
mov
outsl
or
iret
pminub
sub
ds
into
mov
movsl
mov
and
adc
jmp
cmp
and
mov
or
jmp
roll
dec
adc
aad
scas
and
xchg
scas
inc
adc
or
test
add
dec
nop
test
mov
xchg
xchg
add
sti
dec
insl
jl
inc
push
ja
jecxz
mov
mov
sub
rcrl
rolb
add
or
sub
and
lret
lods
mov
pop
loop
es
repz
or
push
rcll
inc
rorb
test
test
jmp
cmpsb
xchg
mov
xchg
ljmp
dec
sbbl
adc
sub
and
mov
xor
adc
in
jb
out
out
and
loop
shll
aaa
or
fsubrl
les
xorb
and
add
jo
push
shlb
jae
in
cmpsl
pop
inc
mov
sbb
push
inc
mov
stc
adc
pop
lods
pop
mov
push
jns
push
insl
and
adcb
loop
cmp
fcoml
test
jmp
push
lods
xlat
push
push
pop
adc
ja
enter
cwtl
stc
sbb
pop
adc
dec
xor
mov
mov
mov
xchg
push
outsb
sbb
daa
test
and
or
mov
mov
movups
test
js
test
lods
cmp
lret
das
dec
lds
adc
mov
dec
in
mov
call
sub
call
jne
shlb
mov
xor
popf
xor
pop
outsb
jae
jns
xchg
push
push
jp
fists
dec
mov
xor
dec
xor
mov
cmc
shrb
pusha
aas
xchg
mov
adc
xor
push
orb
fprem1
mov
sub
jne
fcoms
fldt
mov
stos
ret
and
popf
inc
bnd
imulb
in
arpl
mov
test
pop
adc
add
jmp
push
mov
mov
ret
rolb
cltd
repnz
jmp
sub
clc
cmp
cmp
sub
sbb
rcrl
outsl
popa
jnp
lds
test
sbb
ja
adc
add
mov
ret
xchg
in
fwait
and
mov
imul
imul
fdivl
inc
clc
dec
push
insb
into
dec
nop
pop
divb
mov
inc
jp
out
pop
clc
push
jnp
pop
sbb
fs
jp
dec
ret
jne
add
lret
div
loopne
fs
pop
mov
dec
or
js
out
xchg
adc
lea
inc
lods
ja
adc
dec
sub
addr16
add
xor
daa
or
xor
sarb
push
mov
mov
out
cltd
jle
cmc
outsb
xchg
adc
js
aam
mov
inc
mov
decb
shr
mov
movsb
lea
roll
test
lret
xchg
nop
mov
loop
insl
dec
jo
ret
icebp
pop
insl
jp
mov
push
aad
cli
cmpsl
push
push
jnp
xor
aad
or
int3
xchg
sbb
out
jnp
sbb
pop
xor
stos
mov
xchg
mov
cmp
cld
lahf
inc
insb
inc
or
mov
xor
fidivs
xor
dec
mov
test
add
jle
lods
sbb
jmp
outsb
popa
mov
cmp
push
inc
mov
add
inc
mov
hlt
xor
push
cltd
pop
mov
stc
in
and
and
push
xor
and
jle
mov
jae
xchg
mov
out
movsl
adc
paddusb
icebp
in
rclb
mov
out
mov
dec
xor
dec
testb
test
stc
adc
mov
pop
dec
xorb
dec
xchg
rcrb
or
ss
shrb
add
stc
insl
clc
std
pop
mov
pop
iret
les
pop
pop
sbb
add
repnz
imul
push
inc
lock
mov
mov
mov
pop
sub
lret
fcoml
sub
xchg
popl
or
ss
inc
lret
es
inc
adc
mov
xlat
or
jmp
push
and
push
sub
cmp
mov
subb
pop
pop
or
orl
pop
sub
lods
in
movsl
adc
mov
sti
push
cmp
lahf
adc
rcrl
push
sarb
lahf
xorb
inc
add
push
rolb
mov
jae
or
push
rcr
test
shll
jle
dec
out
push
add
xchg
lock
loopne
sbb
fstp
fcoml
xor
jo
push
mov
or
es
icebp
push
inc
out
jecxz
orb
stos
dec
jns
out
adc
or
mov
aaa
jo
negb
mov
xor
add
jbe
movsb
xchg
mov
call
jae
fxch
mov
adc
or
bound
insb
mov
dec
pop
lret
lods
pcmpgtd
std
repnz
sbb
pop
fs
mov
cmp
pop
pop
inc
mov
jmp
dec
mov
mov
mov
ret
cmpsb
mov
out
js
cmc
cmp
into
xchg
mov
mov
inc
dec
mov
mov
incb
xchg
fists
ret
test
mov
scas
popf
mov
sbb
cmpb
ret
jne
sti
mov
sub
jbe
aaa
stc
pop
sbb
pop
sub
sub
dec
mov
shll
sbb
rorl
sbb
into
int
push
sbb
data16
iret
inc
rcl
xchg
cmpsl
aam
sbb
push
clc
std
or
lods
adc
fstpt
leave
push
dec
fcoml
inc
dec
shrl
adc
mov
cmp
fsubl
push
jns
sub
push
dec
in
add
icebp
sbbl
xor
fdivr
js
decb
mov
push
sbbl
mov
dec
jb
out
int
iret
sarl
mov
cmp
jnp
imul
insl
xor
and
popa
iret
pop
leave
test
push
push
aad
lock
fimull
cmpb
loop
push
dec
aas
inc
in
fcomps
divl
lret
lds
jbe
mov
scas
roll
clc
out
divl
xchg
dec
rcrl
decl
dec
push
or
ljmp
sbb
orl
lods
push
lods
add
jp
fstps
mov
cwtl
rcrb
scas
ret
sbb
jle
lods
stc
add
jnp
addb
push
pop
std
pop
test
imull
pop
and
nop
pop
fiadds
jmp
push
mov
into
cmp
hlt
or
xchg
sbb
or
int3
cmp
fucomip
into
lret
cld
insb
xchg
ljmp
lods
push
pop
xchg
inc
pushf
or
roll
inc
mov
aaa
and
shl
xor
jb
and
push
mov
ss
mov
add
mov
ds
aaa
adc
ror
mov
mov
xchg
sub
setl
push
pop
cmp
aad
or
clc
mov
xor
das
sub
push
inc
lock
imul
or
pop
std
outsl
push
mov
lock
xor
add
and
es
push
inc
pop
aad
dec
jg
mov
cs
cmc
mov
cwtl
push
mov
je
cmp
in
rcl
sahf
call
int3
bound
ret
and
mov
mov
insb
pop
test
rcrl
add
mulb
pop
std
mov
stos
cmc
adc
xchg
ja
sub
adc
sub
idivb
movsb
mov
mov
mov
jns
mov
jo
push
lds
sbb
inc
loop
dec
mov
aaa
aas
pop
ljmp
test
bound
insb
xor
loop
mov
add
cmpsl
push
sbb
cmp
push
stc
pop
fsubr
jnp
aaa
or
cmp
sti
xchg
repz
pop
mov
rorl
sbb
inc
jp
gs
leave
test
stc
insl
lret
sub
repz
jae
xor
xchg
into
pushf
mov
jae
mov
sti
cmp
out
inc
mov
pop
jl
jns
cmc
sbb
inc
add
cli
mov
mov
xchg
stos
push
int
mov
nop
mov
inc
sub
data16
ds
int3
mov
nop
loop
cmpsb
imul
shll
lods
adc
mov
sub
aaa
jg
mov
mov
pop
loope
mov
lret
mov
mov
mov
mov
cmpsl
mov
adc
or
sbb
dec
fmull
mov
cmp
enter
jns
jmp
pop
imul
pop
mov
cwtl
push
rcl
pop
xchg
in
movb
test
pop
out
sbbl
pop
daa
nop
enter
and
icebp
fisubl
mov
addr16
shl
inc
mov
loopne
test
push
test
outsb
pop
xor
dec
outsl
dec
sub
xchg
cmp
test
pop
sbb
data16
hlt
mov
mov
int3
lods
xchg
pop
jl
insl
xor
or
adc
xlat
ja
cmp
aaa
fistps
push
movsl
xchg
fdivr
mov
xor
or
aaa
ds
js
jne
mov
testl
pop
and
in
sbb
push
jae
dec
into
outsl
inc
pop
pop
dec
out
jae
inc
nop
cmp
addb
add
call
jno
popw
jl
sbb
test
or
jb
add
lahf
mov
adc
sbb
lret
xchg
mov
xchg
fsubrl
pop
adcl
cmpsl
pop
cs
outsb
xor
mov
add
scas
subl
cmp
in
fildl
popa
cld
into
mov
pop
dec
stos
movsl
dec
in
mov
mov
xchg
mov
and
mov
push
lods
inc
shlb
les
or
mov
incl
lahf
pop
outsb
mov
sbb
add
fistps
mov
mov
dec
pop
rorl
jbe
push
sub
gs
sarb
mov
int
fsts
imul
push
add
mov
or
rcl
fists
dec
lret
mov
mov
or
aaa
in
mov
insl
sub
mov
lods
insb
push
fyl2xp1
mov
into
testb
scas
fdivrs
add
dec
lahf
cmp
push
outsb
stc
in
xor
inc
imul
push
shlb
aas
inc
fwait
ret
aam
sbb
mov
xchg
lret
aam
out
cltd
cld
adc
sbb
push
xor
std
sub
scas
pop
mov
dec
or
in
mov
in
ret
call
mov
lock
or
repnz
push
pop
das
adc
and
fcomps
shrb
andl
mov
dec
shlb
ret
dec
ljmp
and
out
inc
sahf
leave
mov
cmpsb
dec
fiadds
pushf
cmp
hlt
aas
cli
jmp
lcall
dec
test
bound
arpl
cltd
leave
out
aad
pusha
mov
nop
sbb
push
test
sub
sub
sub
cs
loopne
xor
mov
std
fsub
jne
push
and
push
insl
movsb
push
push
add
into
loopne
inc
dec
pop
sbb
and
add
mov
add
mov
dec
xor
cmpsl
dec
incb
subl
loop,pt
into
sahf
mov
movsl
fiadds
push
pop
adc
jb
or
aam
pop
mov
cld
jns
push
mov
push
sub
xchg
ret
imul
jge
and
sbb
pop
out
pop
lods
xlat
jbe
scas
xchg
in
and
push
test
ret
push
stos
mov
mov
xlat
fcoms
jmp
imul
ds
lahf
mov
lea
mov
out
inc
push
sub
pusha
out
xorl
cmp
mov
or
mov
add
fs
add
and
call
fwait
mov
push
mov
mov
imul
jmp
pop
rorl
gs
pop
sub
test
daa
leave
sahf
jno
sub
pop
ja
jns
mov
push
push
gs
adc
pop
repnz
dec
cs
xchg
mov
jne
mov
ss
pop
sub
sbb
pop
push
cmp
mov
int
insl
mov
aam
sub
sbb
jb
pop
xor
xchg
mov
dec
jo
aas
mov
cmc
fildl
mov
out
jge
mov
test
repz
mov
addr16
repnz
dec
add
xchg
imull
out
mov
add
inc
into
and
lcall
xor
and
out
adc
mov
jbe
loope,pn
jecxz
testb
popa
jbe
mov
inc
aas
lahf
aas
shrl
aaa
xchg
jp
popa
mov
cmp
sbb
shlb
gs
dec
pop
pop
or
in
pop
dec
clc
inc
jle
repz
pop
shr
mov
rcrb
shrb
adc
daa
adc
scas
lods
fistpl
sbb
ret
dec
mov
in
test
mov
sub
mov
aad
fcomip
push
or
xchg
stos
and
mov
adc
test
movlps
insl
add
pop
inc
popf
sub
lcall
and
notl
mov
xor
sbbl
addr16
mov
xchg
int
cwtl
jo
push
rol
pop
cmpl
pop
inc
pop
add
sbb
pop
ret
xor
fmull
jb
inc
jne
dec
cli
mov
push
stos
dec
into
std
mov
xchg
inc
fimuls
aad
adc
sub
repz
cmp
leave
popf
inc
test
push
and
negl
xor
jmp
mov
xor
jno
adc
pusha
lahf
clc
cld
sbb
subb
push
shr
push
decl
or
js
mov
ss
jmp
aaa
and
mov
ret
pushf
cli
add
cltd
mov
fwait
mov
sbb
fdivrp
pushf
ds
mov
pushf
movsl
push
call
leave
lret
leave
push
sub
adcb
ljmp
inc
dec
sbb
and
mov
add
scas
and
sub
sbb
mov
testl
pop
xor
es
pushf
push
inc
add
cltd
pop
repnz
aaa
scas
xor
add
xor
lcall
jmp
adc
xor
and
out
bound
cmp
jne
jb
out
test
jmp
jecxz
jle
pop
in
inc
pop
daa
mov
mov
or
fistl
test
stos
mov
and
stos
cmp
lock
pop
mov
in
push
out
stos
fcoml
shll
ret
aaa
mov
scas
aam
pushf
and
mov
ljmp
shlb
fs
dec
mov
jbe
js
dec
sub
inc
fsubr
xchg
mov
xchg
lahf
repnz
cmp
iret
dec
sub
or
xchg
scas
push
fmuls
shl
cs
testb
ss
in
pusha
or
cmp
jns
popf
aas
enter
sti
ret
fnstcw
sub
test
mov
jg
cs
loope
loopne
push
mov
inc
push
mov
jns
enter
xor
jl
imull
pusha
lods
push
leave
add
scas
out
rcr
sbb
jno
fwait
pop
test
mov
jge
and
fadds
cmp
ret
les
pop
push
ss
xchg
sbb
test
adcl
push
lahf
stos
and
dec
daa
xchg
je
addb
lds
dec
and
and
repz
jnp
xchg
outsb
lcall
push
je
adc
mov
mov
sub
jle
mov
mov
push
out
jae
in
xor
add
rsm
in
scas
hlt
imul
jae
les
addr16
adc
lret
mov
cmp
jle
pop
imul
fidivrs
int3
cmp
subl
push
lcall
adc
cmp
lods
inc
cli
mov
movsb
mov
mov
fldenv
add
inc
stc
icebp
inc
jns
stos
cltd
lods
sbb
loopnew
and
jecxz
mov
or
inc
out
push
addr16
xor
pop
mov
adc
pop
int3
outsb
mov
iret
loope
rcpps
nop
cmp
add
orl
add
or
pop
adc
sar
aam
idivb
insb
pop
dec
frstor
outsb
repnz
outsl
push
xchg
pop
sbb
dec
pop
adc
nopl
dec
ds
lods
gs
orl
mov
mov
scas
push
cmp
inc
jle
dec
enter
lea
push
popf
in
int
popa
pop
cwtl
dec
rclb
mov
fisubrl
out
mov
jle
out
mov
hlt
mov
mov
ficomps
xor
shrl
and
mov
and
mov
mov
aas
int
mov
xchg
cmpsl
loopne
ljmp
or
lcall
or
ds
inc
jle
aad
inc
and
pusha
and
inc
xor
or
or
cmp
mov
cltd
add
and
add
inc
ret
push
stc
sbb
jne
mov
jno
das
aad
push
add
xor
cmc
xchg
push
cmpsb
jecxz
dec
adc
xchg
add
cmpsl
sbb
inc
call
xchg
and
cmpsb
xchg
mov
adc
inc
stos
test
mov
add
adc
shlb
es
mov
cld
push
dec
fimuls
loopne
xchg
shrb
rcll
rcr
sbb
test
xor
sub
mov
in
push
dec
cmpsl
out
popf
mov
stos
psrlq
sbb
mov
pop
push
or
mov
cmp
mov
scas
aad
push
loope
and
push
sub
in
loop
test
xor
jmp
mov
es
add
add
push
std
ret
and
inc
pop
imul
ds
je
add
jne
decl
pop
pop
sbb
sub
add
dec
jne,pn
pop
leave
inc
push
lcall
shll
insl
pop
jae
pop
divb
cmp
mov
loope
push
stos
test
fstpl
out
xchg
lods
mov
xor
ja
sarb
fstl
cli
pop
in
mov
add
cmp
xchg
popa
leave
fsubrs
mov
adc
lods
inc
fucom
shlb
loope
outsb
into
fcmovne
sub
hlt
xchg
sub
leave
cmp
adc
daa
ljmp
stc
and
sbb
cmp
mov
aam
jno
fwait
inc
out
inc
out
rorl
data16
stc
cmpsb
push
pop
pop
cmc
sahf
loope
sbb
adc
fcomps
lahf
test
dec
hlt
or
mov
bound
jg
dec
movsb
push
cli
xor
mov
popa
int3
inc
jmp
add
jae
subl
cmp
js
mov
dec
popa
bound
mov
xor
jbe
inc
jb
outsb
cmp
push
mov
cmp
pop
mov
jns
xlat
adc
popf
jmp
aad
cmp
je
mov
cmc
arpl
xor
cmp
cmp
push
mov
addr16
jge
call
sub
in
push
sbb
testb
push
data16
xchg
dec
push
jns
push
mov
out
pop
xchg
lcall
mov
call
adc
push
mov
incl
scas
jae
jo
jbe
sub
pop
push
adc
xchg
cwtl
and
pop
cmp
fwait
adc
push
cli
inc
loope
pop
mov
mov
js
pop
andl
mov
mov
pop
jmp
in
cmp
sub
int
adc
sbb
outsb
js
xor
xor
xchg
add
jo
inc
ljmp
nop
dec
cld
rclb
cmpsl
xlat
push
out
xlat
sub
mov
mov
inc
cltd
xlat
movsb
pop
mov
iret
idivb
mov
pop
js
out
sub
sbb
nop
js
pop
adc
ljmp
sub
add
icebp
in
mov
mov
std
lcall
notl
mov
nop
and
lods
pop
mov
inc
aam
ret
jecxz
cmp
cs
xor
push
cmp
cmp
push
dec
leave
jmp
xchg
jnp
rorl
adc
pop
pushf
dec
lcall
outsl
cmpsb
jecxz
aam
and
in
int3
addr16
cmp
mov
orb
ds
out
xchg
or
pop
mov
into
sbb
jo
jbe
or
xchg
and
push
stc
data16
test
add
jmp
in
sub
cld
mov
jg
mov
inc
orl
push
sub
dec
inc
and
imul
cmc
cli
cwtl
add
mov
xchg
sbb
or
dec
outsb
xchg
into
bound
mov
sub
push
add
mov
test
and
pop
xchg
int
incb
push
pusha
fistps
jno
clc
das
and
les
push
lock
xor
cs
xchg
aas
into
pop
pop
pop
cli
adc
jge
aaa
xorb
out
scas
sub
js
shrl
mov
push
mov
lret
jle
xor
sbb
fbstp
in
or
mov
mov
fstps
sub
std
lods
cltd
daa
jns
push
mov
pop
xchg
inc
shll
push
into
rorl
mov
xor
cmp
in
dec
gs
int
sarl
push
mov
mov
inc
mov
push
mov
mov
mov
in
push
insl
enter
icebp
jno
mov
or
mov
lock
add
mov
popa
fwait
push
insb
sub
xlat
in
jo
loopne
imul
xchg
cmp
mov
pop
inc
arpl
test
cltd
push
xlat
mov
les
insb
outsl
mov
or
mov
cld
aad
leave
adc
xchg
push
xor
mov
lret
jecxz
cmpsl
loop
mov
pusha
cmp
fcmovnbe
push
inc
addr16
jecxz
xchg
mov
push
jle
lret
push
inc
stc
push
lea
push
pop
lcall
push
mov
lret
mov
out
jmp
sbb
out
sub
scas
lret
mov
add
orb
lea
inc
mov
jg
sbb
cmpsl
je
mov
test
sbb
inc
fs
jbe
ds
mov
mov
lret
jnp
test
add
jb
mov
stc
fwait
mov
jae
xchg
loope
mov
imul
or
in
push
and
jo
adc
movsl
insb
js
mov
in
jecxz
arpl
xor
push
shl
fldl
push
cmp
repz
ror
inc
shr
lahf
in
xor
aaa
shl
adc
xor
inc
jns
dec
mov
leave
or
dec
push
in
test
out
stc
loopne
push
aam
xchg
mov
cmpsb
sbb
test
mov
mov
push
xchg
mov
push
inc
mov
sahf
fdivrl
clc
pop
repz
stos
mov
mov
test
cld
cmp
aad
mov
xchg
xor
push
add
adc
dec
sbb
ja
fs
popa
mov
jb
xchg
push
sbb
ja
pop
faddl
mov
pop
fmul
inc
pusha
push
inc
es
sub
out
adc
inc
loop
call
mov
int3
push
sub
mov
mov
fstps
sbb
sub
lock
test
push
pop
dec
sbbb
lahf
and
mov
in
xchg
in
sahf
sub
mov
or
mov
or
into
lcall
imul
fimull
xor
add
out
hlt
lret
cli
ret
je
cmp
or
ds
fwait
mov
repz
mov
mov
nop
enter
xchg
or
addr16
lods
adc
imul
jmp
aaa
push
push
pusha
mov
sahf
fnsave
xchg
addl
ficomps
cltd
mov
aad
adc
xor
or
std
notb
fcomps
stc
addl
aaa
fidivrl
mov
stos
hlt
or
int3
jae
sub
push
adc
imul
gs
mov
or
jmp
js
or
cmp
inc
loope
mov
jbe
jmp
pushl
insl
push
ss
or
movsb
mov
adc
dec
daa
dec
jo
push
test
outsl
mov
shlb
and
adc
addr16
dec
arpl
rcrb
adc
xchg
cwtl
add
shrb
inc
xchg
push
sub
pop
and
fcoml
xchg
out
jg
insb
lcall
sti
add
adc
std
popa
xchg
aaa
mov
js
shrb
pushf
adc
or
and
nop
fidivrs
inc
movsb
rorl
pop
xor
out
jae
xor
xor
cmp
and
pop
and
mov
adc
add
sti
dec
sbb
outsb
and
repz
movsb
movsl
mov
mov
arpl
pusha
xchg
imul
sbb
or
jle
sbb
push
enter
inc
sbb
outsl
icebp
pop
cmpsl
ja
or
outsb
mov
sub
cmp
rcrl
int
inc
sbb
ljmp
sarl
out
lahf
sbb
push
mulb
and
mov
clc
imul
pop
ss
sbb
jle
xchg
loopne
sbb
int3
xchg
sub
int
sub
popa
inc
cmc
xchg
pusha
mov
sub
push
cmp
lock
int
mov
xchg
out
imul
inc
sti
shl
xor
xor
mov
int3
cli
push
mov
mov
imul
popa
nop
xchg
clc
jne
push
jmp
jb
mov
or
xchg
add
ds
into
add
jp
arpl
and
push
lea
mov
sbb
arpl
push
das
int
rcrb
clc
add
test
lcall
sbb
cltd
outsl
adc
clc
inc
scas
add
cmp
lret
pop
gs
in
fnsave
xchg
add
push
testb
rclb
ljmp
lcall
push
jae
mov
xchg
setge
xchg
pop
inc
imul
mov
in
pushf
rorb
xchg
insb
movsl
pop
aam
dec
dec
sbb
mov
or
push
in
adcl
dec
and
cmp
and
stos
lcall
fs
leave
aas
popa
iret
in
mov
std
addr16
jmp
push
sbb
pop
addr16
les
int3
lods
cmpsb
mov
outsl
rol
loop
push
pusha
cmpsl
testb
mov
xor
cmp
and
shlb
jl
je
add
xchg
je
rorb
jge
sub
mov
push
pusha
cmc
fdiv
jmp
in
loopne
add
lret
pusha
adc
cmp
out
mov
ret
imul
and
jo
shlb
inc
dec
outsb
gs
aam
cmpsb
out
enter
aas
and
jle
aad
inc
mov
nop
mov
xchg
push
sbb
sub
xchg
inc
jb
mov
imul
lcall
jne
ret
scas
or
pop
xchg
in
jno
lds
pop
push
push
notb
into
adc
popf
jmp
inc
ja
pop
xchg
outsb
int
hlt
ret
jmp
in
jnp
jae
dec
je
call
dec
scas
pop
mov
clc
mov
push
jne
sub
rorb
sub
nop
test
aad
add
dec
xor
dec
pop
cld
xor
dec
ret
mov
add
dec
mov
in
mov
dec
leave
sub
test
sub
rorl
test
jl
lret
add
adc
imul
lret
ficomps
fldcw
sti
dec
cli
aam
xor
aaa
nop
add
lcall
ret
mov
or
std
mov
sti
mov
lea
or
fsubs
sbb
mov
add
vmovntps
je
lcall
sub
pop
inc
sbb
rol
fwait
mov
dec
and
dec
hlt
jnp
sbb
data16
data16
enter
add
rclb
cmp
jno
mov
and
lea
xchg
push
lea
pop
adc
lock
jle
xchg
xor
imul
sbb
lea
addb
orb
in
mov
sub
mov
mov
sbb
mov
mov
adc
cli
add
jno
mov
push
xor
lahf
mov
cmp
aam
cmp
cld
xchg
push
lods
inc
xchg
cmpsl
nop
jnp
sub
add
rcrb
cmc
or
repnz
ja
cmp
sbb
or
fldcw
adc
cmp
insl
jmp
mov
adc
daa
js
in
mov
sub
lret
adc
daa
daa
mov
lahf
out
testb
mov
fistps
dec
into
mov
lods
ss
mov
xchg
test
ret
or
lock
mov
inc
dec
rorl
outsl
inc
adc
jg
ret
mov
sti
in
scas
mov
out
push
aaa
ds
or
lcall
loope
mov
jp
cmpl
push
mov
push
imul
outsb
push
mov
jp
mov
aas
or
xor
mov
scas
enter
insl
add
popa
pop
mov
repz
mov
aaa
daa
add
shl
xlat
ret
xorl
repnz
arpl
in
divb
test
ret
aam
repnz
or
aam
push
das
ja
cmp
es
pushf
sti
test
fcompl
je
insl
pop
or
popa
mov
jle
cmp
movsb
push
sbb
mov
pop
fs
fmull
sbb
rcll
jmp
jb
enter
inc
xchg
dec
dec
xor
jne
hlt
aam
ljmp
cmc
xchg
jl
xchg
call
aad
leave
out
add
icebp
fxch
ljmp
enter
inc
loopne
jecxz
shlb
ret
or
mov
movsl
or
push
jae
jbe
jae
push
ret
mov
ds
xor
loopne
dec
xor
in
aaa
sub
aas
aad
pop
lods
repnz
scas
jnp
aad
push
mov
ss
jle
push
loopne
call
jg
xchg
cli
ret
push
cmp
int3
sub
movsl
in
dec
or
xchg
ljmp
or
jle
imulb
jo
std
lret
mov
sbb
add
xor
xor
jmp
lahf
or
je
cmp
add
dec
push
jo
or
fisubs
addr16
repz
stos
addb
lahf
sub
sbb
insl
or
pop
fcompl
int3
lret
stc
shlb
dec
inc
xor
cmp
es
push
or
pushf
ss
clc
mov
sbb
mov
push
dec
imul
scas
xor
inc
cmp
ret
adcl
call
vmovntps
dec
adc
hlt
xor
jno
dec
out
add
push
mov
mov
cmp
fsubr
sbb
cmpsl
or
dec
mov
add
lcall
push
scas
hlt
out
mov
dec
std
test
aas
nop
call
repnz
inc
dec
lcall
xor
aad
lret
cmpsb
shl
outsb
popf
inc
dec
shll
xor
inc
testb
cld
adc
andb
enter
push
shl
jns
je
and
fwait
sub
mov
mov
lea
shr
fld
inc
aaa
movsb
mov
dec
sub
push
xchg
mov
mov
js
aad
pop
inc
lret
and
mov
add
xchg
push
push
notb
ret
xor
mov
push
test
inc
insb
and
int
arpl
movsb
ss
fldt
pop
jae
not
jmp
lcall
jge
addr16
mov
lcall
sbb
leave
leave
shrl
or
pop
jl
add
cmp
outsb
or
sub
adc
cmpl
pop
sbb
imul
xor
xchg
lcall
subb
push
and
frstor
add
lret
int
rcll
mov
fwait
sbb
ds
mov
mull
xor
mov
cld
dec
test
rolb
push
mov
mov
mov
mov
daa
gs
pusha
dec
nop
divb
lods
add
fcomps
xor
adc
and
mov
push
into
adc
aas
push
xchg
sbb
iret
stos
cld
enter
mull
sbb
lcall
stc
shrb
das
xchg
ja
pop
shr
aad
pop
in
jne
orl
pop
cmpsb
enter
jo
les
jp
mov
xor
aad
sub
dec
ret
out
push
imull
fimuls
pop
jle
mov
paddsw
pop
fistps
lret
cmc
in
loop
add
jnp
jmp
sub
push
inc
inc
sarl
mov
inc
jg
rolb
in
addr16
mov
fstl
fstpl
cmc
stos
xorb
js
outsb
lods
mov
loope
and
jno
mov
add
mov
stos
inc
addr16
jno
ja
pop
jae
ja
add
into
sub
sbb
xchg
or
add
gs
sbb
sbb
aas
movsl
loope
int
and
add
fldl
popf
mov
mov
mov
stos
sub
or
popa
adcb
dec
cmp
xchg
mov
stos
icebp
push
aam
std
shlb
out
sbb
rcrb
enter
sbb
fldln2
roll
cltd
in
cmc
xchg
pop
mov
sbb
or
push
test
inc
orl
adc
std
adc
sarb
or
sahf
mov
jb
mov
cmp
call
jge
adc
test
repz
push
mov
ss
repz
pop
xchg
or
push
lahf
pop
shl
push
xchg
fwait
mov
and
cmpsl
mov
jmp
in
xchg
jno
test
xchg
push
jp
inc
mov
lahf
jns
les
aad
mov
outsl
jnp
pop
jns
mov
int
dec
loope
mov
mov
dec
mov
xchg
push
jbe
arpl
xchg
xlat
sub
sti
cmp
sti
filds
rcl
in
xchg
xchg
jl
sbb
icebp
jle
nop
aad
ljmp
cmpsb
dec
ds
pop
cmp
mov
adc
xchg
dec
pop
mov
mov
aam
dec
mov
cmp
enter
dec
lea
lds
mov
int3
dec
mov
mov
ret
add
cli
data16
lret
inc
add
insl
adc
test
in
cmp
xchg
jbe
push
cmp
mov
test
mov
push
insb
movsb
flds
pop
je
shl
cmp
adc
pop
mov
sbb
repnz
aad
insl
cmp
mov
out
aam
add
jp
xchg
push
adc
mov
sub
mul
cmc
inc
repz
push
mov
out
les
dec
aad
mov
loope
mov
inc
adc
push
xchg
xchg
or
xor
loop
mov
add
fiaddl
fs
movsl
and
push
pop
fisubs
and
push
and
movsb
fs
fsubs
ficomps
dec
jno
cmpsl
jnp
sbb
and
push
and
insl
jno
xchg
cmp
test
xchg
dec
add
xor
mov
xor
sub
xor
mov
sbb
fidivrl
sahf
push
push
shrb
lods
aaa
inc
xchg
jae
pop
xchg
push
mov
and
dec
iret
push
mov
or
test
xor
jecxz
dec
hlt
mov
in
and
xlat
mov
popf
xor
jnp
xor
dec
xor
mov
pop
push
push
push
cltd
jno
sbb
scas
add
mov
jb
push
cmp
mov
or
out
sub
imul
sbb
xor
cmp
jg
out
or
push
mov
adc
mov
adc
xchg
ljmp
dec
idiv
xchg
mov
sub
fists
pusha
mov
or
jb
mov
sti
ja,pn
adc
cmpsl
sbb
clc
cli
cmc
das
or
fadds
jecxz
loopne
rep
insb
sub
test
test
or
sbb
mov
pop
push
mov
mov
jae
push
orb
lret
lods
adcl
push
lcall
cmc
testb
xchg
cmp
xor
cli
mov
jo
add
mov
jo
pop
or
out
mov
lret
out
and
ret
int
insb
das
cmp
jbe
xchg
dec
and
push
add
cmp
clc
les
jbe
jl
jecxz
inc
adc
addb
pop
dec
mov
sub
cmc
mov
es
es
xchg
cmp
scas
ret
fcoms
lcall
xorl
outsl
xchg
push
push
ljmp
das
into
pop
sti
pop
cmp
adc
iret
cli
mov
hlt
ja
dec
andl
in
rcl
fisttpl
stc
xor
add
adc
stos
cmc
lret
inc
or
dec
adc
xchg
or
fnstsw
inc
xchg
jbe
jl
mov
mov
int
shlb
mov
mov
loopne
inc
pop
xor
inc
test
rorb
push
mov
ljmp
jp
pop
mov
outsl
aas
jbe
cmpsb
sub
cld
cmp
fs
fwait
or
mov
mov
xor
or
es
lds
lcall
jnp
mov
sub
sti
mov
inc
adcb
adc
or
sub
adc
xor
scas
jb
xor
cmp
mov
lea
xchg
dec
adc
cltd
jl
ret
push
xchg
pushf
out
jecxz
test
jge
sbb
imul
mov
insl
out
pushf
out
add
sub
push
cmp
jg
addr16
cmp
dec
test
sub
lock
push
insb
lock
cmp
add
cmp
inc
adc
add
inc
cmp
push
popf
enter
push
sbb
inc
dec
sarb
jecxz
jne
and
imul
cmpsb
inc
mov
cs
pop
push
insl
pop
inc
or
mov
insl
movsb
les
aaa
vzeroupper
outsl
scas
rol
ret
lea
mov
shlb
loope
call
pop
ja
pop
les
jmp
in
insl
mov
mov
pop
mov
out
out
jle
das
mov
in
call
pop
or
aaa
or
mov
adc
scas
imul
ficoms
loope
leave
scas
outsb
shl
jmp
shr
jb
repz
testb
and
sub
mov
popa
mov
jno
lahf
mov
jle
or
jo
ss
push
inc
add
dec
sbb
adc
inc
fwait
daa
aas
adc
fldenv
jo
in
xchg
jno
or
adc
mov
ljmp
icebp
cmp
pop
sub
dec
jg
pop
fwait
push
int3
or
ficoml
cli
lds
jecxz
pop
repnz
inc
jbe
mov
mov
dec
add
jae
adc
mov
int
cwtl
inc
lret
and
in
fsubrs
push
cmp
rclb
sahf
in
test
jbe
push
mov
sub
pop
mov
sbb
cmpl
fcoms
push
rcl
popa
sbb
mov
test
dec
and
adc
jl
xor
inc
or
mov
mov
aam
sub
push
xor
push
les
sahf
cmp
out
es
dec
mov
in
div
loop
dec
xchg
xchg
xchg
popa
negb
mov
movb
cli
mov
outsl
rcll
fldenv
movsl
movsl
iret
andl
fstpl
jae
das
out
inc
xor
stos
ds
add
in
cmp
ds
adc
mov
add
sarb
and
jo
bound
popl
outsb
repnz
flds
cmpsb
aaa
xchg
jmp
pop
mov
pop
bound
fidivrs
pusha
in
fcmovu
add
mov
jmp
or
sbb
adc
movsl
ror
fidivs
push
outsb
xor
jp
imulb
ss
rol
sub
lods
pop
nop
ljmp
push
jg
dec
and
fs
jmp
rol
lods
lcall
mov
out
and
or
sbb
push
js
sbb
mov
cld
fmull
cmp
xor
cmp
not
dec
bound
push
or
dec
lahf
test
fstpt
cmp
into
cli
imul
cmp
pop
cli
xchg
push
mov
adc
shlb
out
dec
rclb
sarl
push
push
insl
lahf
out
daa
mov
addb
mov
lods
add
pop
stos
test
ljmp
add
jbe
clc
inc
rclb
ret
or
pop
inc
sbb
xlat
add
mov
loope
mov
or
or
or
lock
xor
ss
pop
outsl
pop
int3
inc
push
lds
addr16
lret
or
inc
mov
cmpsl
adc
push
ja
sub
mov
push
aaa
mov
jle
stos
ja
mov
mov
cmp
mov
clc
pop
iret
mov
mov
mov
pop
adc
mov
je
and
push
cmp
aad
sbb
out
lret
sub
xchg
xlat
repnz
scas
lret
pop
rcl
pop
aas
or
daa
clc
fld
inc
enter
lcall
inc
movsb
sarl
push
adc
test
mov
out
xor
jne
inc
jb
sub
cmp
mov
xor
test
adc
sbb
sub
dec
pop
dec
insl
js
and
addr16
stc
push
leave
jo
mov
add
arpl
add
xlat
repz
cmpsb
icebp
xor
and
loopne
xor
xor
cli
out
in
dec
cmp
pop
fiaddl
jne
inc
inc
pop
shrb
test
aad
clc
push
arpl
jmp
outsb
or
push
mov
cld
pop
lock
and
sub
push
cmp
aaa
xchg
mov
out
and
insl
inc
inc
arpl
inc
popf
mov
mov
cmc
jno
mov
dec
and
int3
pop
push
popf
or
fldcw
rol
repnz
test
popa
mov
mov
cltd
test
clc
xchg
aad
or
cmpsl
pop
pop
xchg
scas
shrl
repnz
shlb
shlb
imul
dec
add
scas
ds
pop
cmpsl
call
aam
mov
xor
mov
xchg
test
pop
add
je
shll
inc
fistpll
and
jmp
sub
jmp
jecxz
fld
test
in
mov
push
test
gs
std
add
cmpsl
inc
inc
push
mov
lds
mov
adc
xchg
enter
std
add
out
roll
mov
fs
and
jp
mov
jmp
add
jns
orl
xchg
jge
push
xchg
push
pop
call
inc
jmp
xor
int3
movsb
dec
mov
cltd
test
mov
dec
sti
arpl
xchg
add
popf
mov
and
cmp
shll
pop
pop
inc
xchg
sbbl
pop
ficomps
aaa
adc
rcr
add
notb
bound
cmp
pop
and
lret
or
cmc
push
dec
jl
xor
jae
dec
movsb
out
xchg
cmpl
xor
scas
adc
imul
aas
mov
ss
push
xchg
into
lret
ja
mov
js
ret
xchg
xlat
enter
jo
mov
ret
push
lea
dec
mov
inc
ds
cmp
cmp
in
les
dec
movsl
add
add
pop
out
push
or
push
repz
or
mov
sbb
mov
jnp
fwait
mov
mov
cli
sbb
test
dec
neg
aas
jg
test
xchg
mov
sub
sbb
jmp
xchg
adc
lret
addb
pop
add
jo
lret
mov
inc
cmp
mov
push
cmp
adc
lret
imul
push
sbb
push
jb
sbb
mov
jne
iret
push
jae
add
push
sub
jb
rcrl
popf
test
inc
xchg
jmp
test
add
rorl
jmp
cld
loop
sti
push
cmp
and
mov
inc
sub
or
stc
je
jo
mov
orl
dec
and
in
cli
add
shlb
lret
push
inc
cmp
adc
cli
ss
add
rolb
fsub
ss
add
xlat
push
icebp
pop
mov
ds
push
das
sbb
fdivs
jns
xchg
or
test
xor
lcall
sbb
fmull
jge
dec
adc
ret
jo
fs
mov
mov
sbb
add
insb
jo
add
sub
hlt
lds
lret
mov
dec
xchg
ljmp
inc
cmp
out
lds
dec
pushf
mov
mov
mov
push
repz
lcall
gs
std
rcrb
cmp
jg
scas
mov
mov
sbb
lds
and
cmc
lcall
inc
push
and
mov
mov
and
or
push
loope
fisttps
jl
cmpsl
push
lret
inc
enter
lea
adc
add
daa
clc
cmpsl
inc
inc
ljmp
mov
pop
pusha
repz
jnp
sub
lds
insl
loopne
fcmovnb
or
mov
and
cld
add
jg
cld
xchg
fcoms
xchg
out
or
aaa
add
inc
sti
insl
rolb
out
mov
nop
out
dec
fldl
mov
fadds
in
cmp
push
repnz
test
shlb
inc
jb
pmaxub
sub
cmp
cmp
fstpt
fidivs
dec
and
sub
out
mov
sub
jnp
lcall
xchg
into
push
adc
mov
xor
fidivrl
mov
out
shrb
push
out
jl
sbb
stos
mov
outsb
lds
dec
test
ret
pushf
dec
loopne
xchg
lahf
cltd
aas
test
dec
jb
dec
imul
jae
cmpsl
pusha
jno
mov
mull
push
pop
in
adc
jle
lds
pop
in
fcompl
mov
mov
rol
scas
xchg
roll
xor
scas
outsb
and
jno
jbe
into
in
js
adc
cmpsb
test
stos
dec
cmp
fcmovne
jns
repz
movl
sahf
mov
sbb
pushf
into
or
add
in
ret
sbb
sbb
sub
fcomps
lock
je
sub
hlt
int
push
rolb
rolb
loope
and
push
out
jo
out
mov
jge
sbb
lahf
push
fwait
inc
xchg
hlt
push
ds
imul
adc
inc
add
sub
cmp
aas
lods
cmpl
repnz
imul
movsl
out
addl
test
sbb
or
mov
mov
sbb
cli
repnz
jo
mov
jno
imull
mov
mov
dec
xor
jge
lods
call
push
loopne
dec
mov
ja
jmp
clc
cwtl
mov
nop
pop
leave
js
inc
push
pushf
jns
pop
or
out
sbb
jmp
repnz
dec
pop
inc
fdivs
call
cmpsb
ss
je
clc
lds
and
stos
rcl
mov
push
mov
mov
test
ds
dec
or
pop
icebp
mov
mov
mov
adc
dec
pop
imull
cltd
cs
fxam
add
aaa
out
or
adc
jb
mov
mov
mov
and
or
daa
test
mov
xor
div
hlt
sub
and
cmp
mov
ret
movsl
push
divb
inc
loope
cmp
cmp
lods
push
dec
iret
popf
inc
movsl
pop
loope
xchg
sahf
mov
xchg
mov
ds
addr16
call
iret
and
leave
ja
add
dec
lcall
xor
pop
out
push
in
push
dec
ja
rcl
mov
mov
jnp
push
inc
and
cwtl
sbb
cmp
cmp
movsb
mov
movsb
rcll
adc
or
aam
xchg
das
mov
mov
addl
push
gs
or
mov
in
inc
inc
shr
add
loope
aaa
outsb
and
mov
xor
push
testb
mov
or
dec
fsubs
mov
xchg
sahf
add
jno
cmp
xor
cli
adc
mov
push
or
push
int
mov
push
popa
inc
push
test
rolb
cmpsb
mov
or
xor
imull
mov
call
pusha
cltd
mov
mov
shrl
sub
bound
push
jnp
push
movsb
jge
rorl
int
xchg
add
cmp
aas
push
pop
das
sti
jb
aas
mov
insb
sahf
jns
mov
pop
je
adc
xor
stc
out
adc
jo
sbb
lcall
sub
loopne
push
orl
ja
ror
rcrb
jmp
mov
fcoml
ljmp
scas
loope
out
subl
push
pop
imul
jg
dec
mov
in
and
shll
mov
push
cmpl
sbbl
jns
mov
and
dec
mov
jle,pt
daa
lahf
std
hlt
shll
das
pusha
jbe
dec
ja
or
sub
lea
mov
ss
pop
push
sbb
xchg
jp
loop
nop
and
or
jg
scas
inc
out
ret
xor
fmuls
mov
jge
mov
mov
mov
mov
mov
setae
loope
mov
repz
out
dec
fstl
inc
jecxz
push
test
lret
aam
movsl
push
adc
jne
cltd
xchg
dec
or
popf
and
fbstp
pop
mov
push
sub
mov
jo
iret
ljmp
movsl
mov
orb
stos
inc
iret
sub
clc
sub
aad
push
xchg
andl
es
cmp
sub
adc
pushf
imul
mov
cmp
scas
outsb
add
jecxz
mov
add
dec
and
idiv
push
cmp
jns
out
cmpsb
xchg
iret
sbb
mov
movsb
ja
cmpsb
jp
subl
inc
mov
and
adc
repz
jg
daa
mov
xorl
mov
fidivrs
pop
sub
cmp
sbb
push
mov
outsl
jl
pop
icebp
test
stos
insb
add
cli
inc
pop
cmp
aam
dec
pop
push
sub
and
outsl
dec
mov
cli
cmp
jo
xor
shr
lea
int3
inc
cmp
bound
push
mov
loopne
cld
sbb
cmp
out
cmp
jno
pop
ja
lret
inc
xor
andl
mov
xor
xchg
adc
js
add
push
fcom
pop
push
aas
scas
push
xchg
jae
sub
or
adc
mov
mov
mov
paddusw
push
scas
mov
aas
jl
ljmp
rcr
push
jecxz
and
in
idiv
jmp
fucom
jne
std
rclb
cmpb
and
and
insb
mov
inc
out
dec
dec
fwait
jnp
push
aas
jmp
das
rcl
nop
and
repz
dec
outsl
cmp
sub
mov
xor
cwtl
push
jb
mov
sbbl
adc
xlat
repz
pop
mov
jle
in
mov
aaa
mov
and
dec
std
push
lcall
fwait
mov
sub
imul
push
dec
cmp
cmpsb
jl
shll
dec
mov
cmp
cld
je
std
push
add
fimull
mov
pop
fs
inc
js
mov
inc
xor
pop
leave
inc
xchg
sub
ret
into
fwait
or
jne
xchg
push
hlt
outsl
dec
push
mov
int
repnz
pop
lea
add
iret
add
add
ret
and
stc
jmp
sub
dec
bound
lahf
fistl
adc
jo
xorl
enter
in
mov
dec
imul
leave
mov
xchg
stos
mov
cmp
push
out
xchg
sbb
jmp
or
add
aas
icebp
daa
adc
jge
xor
sbb
filds
adc
and
jno
ljmp
dec
jno
or
fimull
mov
aas
sub
out
cmp
xor
cli
push
das
cmp
loopne
adc
ffreep
iret
jle
or
pop
iret
test
in
int
inc
aas
sti
inc
ficoml
jns
jmp
cmp
mov
ljmp
mov
pushf
in
pop
in
xchg
sub
jae
add
xchg
jo
clc
jmp
fstp
cmpsb
mov
int
inc
popf
and
sub
xchg
call
movsl
in
loope
xlat
pop
sbb
mov
in
jecxz
xchg
sub
not
hlt
sbb
dec
daa
popf
sahf
adc
pcmpgtd
nop
sbb
dec
xchg
dec
outsb
sahf
adcl
sbb
and
push
outsb
popa
loope
add
dec
lcall
pop
call
sti
shll
jbe,pt
lea
cmp
add
popa
xchg
adc
jg
ds
sub
sbb
push
jmp
pop
ss
push
dec
pop
aas
jnp
jb
addl
cmovae
cli
rcrb
outsb
mov
cmpsb
subb
mov
push
mov
push
sbb
aad
shrb
push
ret
xchg
call
hlt
int
adc
pop
xchg
xchg
cmc
fmuls
pop
sbb
push
gs
or
jecxz
or
push
pop
add
mov
and
sub
dec
pushf
call
cld
es
pushf
mov
inc
fwait
cmpsb
ljmp
stos
das
popa
int
jbe
and
outsb
xchg
cmp
push
je
movsb
je
inc
cmc
dec
pop
mov
out
repz
insb
mov
out
inc
pop
xchg
and
cmpsl
aaa
pop
push
push
pop
lcall
sub
lods
xchg
out
adc
push
test
lahf
test
push
push
lods
into
enter
jns
dec
sbb
and
xchg
dec
into
push
test
or
cmp
lods
pop
cwtl
gs
incl
sub
jl
rorl
pop
push
lret
push
adc
stos
not
inc
imul
add
adc
pop
sbb
jne
jbe
pushf
mov
and
cs
insb
pop
sub
dec
gs
adc
lahf
pop
or
adc
mov
imull
mov
jle
jmp
scas
jo
adc
loope
scas
xor
in
jae
pop
inc
dec
mov
hlt
shr
das
cmpsl
imull
lahf
sbb
xchg
lret
sub
js
fnstcw
push
fnsave
mov
push
movsb
clc
jno
xor
pop
daa
xchg
shlb
into
xchg
jnp
lcall
xor
add
push
push
inc
ficoms
je
jmp
mov
cs
or
mov
scas
mov
pushf
pop
mov
jmp
or
hlt
sub
jmp
push
mov
mov
jnp
sub
insb
mov
nop
and
jae
jecxz
arpl
pop
lcall
aaa
jne
mov
jae,pn
xor
clc
stos
mov
lret
lods
and
xchg
sbb
aam
cs
inc
insl
icebp
inc
out
cmpsb
mov
addl
mov
cmp
lcall
mov
fcoml
push
js
and
jg
xchg
imul
xchg
pop
mov
stc
in
scas
and
inc
xor
dec
mov
xchg
test
mov
ret
dec
cmp
insb
fistps
jmp
sub
xchg
mov
add
mov
pushf
sbb
sub
mov
movq
dec
lods
sti
fyl2x
mov
cmpsb
stos
imul
mov
add
cmpsb
lret
push
adc
jmp
jmp
roll
pop
mov
xchg
cmp
xchg
cmp
lds
mov
push
aad
into
mov
in
pop
out
xor
push
addb
push
lods
aad
inc
adc
loopne
ja
push
mov
out
cmpsb
sub
out
mov
sub
mov
jge
imul
jne
mov
fidivs
or
mov
imul
mov
xor
add
pop
jmp
mov
aad
shll
cmp
push
fistpll
adc
mov
xchg
mov
cmp
mov
xchg
pop
mov
pusha
nop
dec
mov
mov
and
movq
pop
mov
das
les
xor
xor
mov
ds
xchg
rorb
addr16
inc
mov
push
dec
or
jb
sahf
add
mov
sub
sub
mov
add
cmpsl
pop
dec
mov
ficompl
xchg
notb
pop
mov
and
adc
xlat
jmp
jnp
call
je
cmp
jae
insl
cmpsl
mov
jbe
push
dec
cmc
sarb
stos
aad
enter
cmp
mov
cmpsb
rclb
mov
sub
ljmp
arpl
inc
sbb
mov
rcrl
test
mov
lahf
test
daa
in
sub
ret
mov
jbe
aam
pop
or
jo
jno
shrb
dec
push
sub
sbb
bound
lret
or
xor
push
insl
xorb
sbb
insb
incl
notb
stos
mov
sbb
jns
fcoms
mov
push
cmpl
adc
cmpsb
jne
push
loopne
pop
push
ret
inc
adc
jbe
test
or
xor
push
xchg
cli
adc
dec
mov
push
xchg
ja
sbb
orl
movsl
xchg
cmp
leave
jecxz
or
test
mov
scas
ja
push
scas
hlt
push
mov
je
jns
mov
jmp
cmpsb
inc
cltd
popa
pushf
fucomp
xor
lahf
pusha
bound
jge
xchg
push
testl
leave
scas
dec
mov
mov
pop
lock
adc
sbb
mov
pushf
and
sub
mov
sub
stos
or
ljmp
or
popl
lret
mov
mov
movsb
aam
jl
enter
add
xor
mov
call
frstor
mov
adc
lods
jnp
jp
jmp
dec
outsb
jge
rcrb
push
shll
sub
lea
mov
lods
xchg
pop
js
test
bnd
je
call
mov
mov
out
pop
aad
daa
pop
test
fsub
jmp
dec
insl
int3
and
movsb
cmc
mov
push
mov
or
pusha
repz
les
bound
movsl
xchg
mov
push
fcmove
jmp
scas
rclb
lods
pop
into
adc
mov
cmpl
mov
add
sub
sub
test
pop
xor
push
aam
mov
adc
mull
and
push
xor
dec
fsubs
cmp
add
mov
sarl
lods
pop
mov
inc
pop
sub
xor
js
insl
mov
push
dec
adc
rcrl
mov
inc
cwtl
imul
jl
jecxz
mov
dec
cmp
aaa
mov
and
pop
mov
lods
stc
clc
andb
in
outsl
scas
test
icebp
push
mov
dec
arpl
das
xchg
ficoms
or
pop
adc
mov
xchg
or
mov
dec
push
xor
arpl
fs
jmp
inc
enter
add
add
xchg
or
lret
cmp
inc
std
mov
shr
rcll
pushf
movsb
or
push
inc
jnp
cmpsl
fisttps
ret
dec
xchg
pop
outsb
push
or
inc
outsb
and
push
jnp
in
adc
jp
sbb
dec
loopne
cmp
inc
add
fsqrt
sbb
lcall
or
sub
inc
mov
out
sbb
mov
int3
pop
sbb
dec
fsubrs
lods
repnz
mov
js
inc
or
out
mov
pop
xlat
sahf
mov
clc
push
js
ret
out
divl
inc
xchg
sbb
mov
lret
sbb
mov
or
cli
pop
ret
push
fcoml
push
fimull
jecxz
into
ss
push
push
adc
cmp
ljmp
repz
mov
mov
pop
fistps
fbstp
mov
js
push
out
mov
jbe
lret
push
out
sub
ret
dec
das
lods
shlb
sub
jg
xor
sbb
inc
mov
pop
cmp
jge
dec
mov
cmp
daa
jno
stos
adc
and
inc
cld
pop
repz
movsb
cmpsb
xor
jecxz
movsl
pop
stos
mov
mov
sbb
fldz
push
daa
or
test
jge
inc
mov
jbe
cmc
repz
lahf
out
jg
sbb
adc
dec
orb
push
fs
in
je
pushf
inc
push
pushf
in
lret
mov
jle
or
fbstp
xor
mov
sbb
jo
pop
pusha
adc
sbb
jbe
add
jecxz
sbb
push
iret
pushf
scas
addl
dec
and
fdivrl
negl
mov
in
mov
push
in
rorl
adc
repz
arpl
aas
lods
push
fldcw
popf
mov
shlb
cmpsl
push
dec
aaa
xchg
mov
cli
xorb
pop
sti
inc
pop
xchg
or
scas
ja
sbb
repnz
arpl
aaa
aaa
add
mov
lods
inc
mov
fsubrl
pop
out
adc
pop
pop
testb
mov
inc
mov
jg
sub
inc
cs
outsl
test
push
inc
or
int3
int3
outsb
scas
sub
add
outsl
clc
jnp
decl
mov
fnstsw
pop
pop
cltd
cmp
xchg
cmp
mov
lock
mov
test
sti
fcmovne
adc
mov
pop
out
pop
jl
sahf
or
aaa
add
jb
dec
pop
push
movsl
cmp
shrl
jae
inc
jno
cmp
outsl
jl
xchg
sbb
xor
push
mov
mov
into
mov
js
push
mov
and
stos
mov
xchg
aaa
mov
jecxz
pop
cld
lock
std
fcomi
add
test
call
lahf
cmpb
jl
adc
sbb
adc
inc
lahf
mov
stos
mov
cmc
cmp
add
aad
stc
mov
jecxz
out
mov
jp
add
roll
and
pop
jmp
mov
movsl
cmp
cwtl
inc
dec
andl
fsin
add
dec
or
pop
fdivs
cmp
xchg
test
clc
repnz
fwait
aaa
lods
lret
lret
int
or
ds
dec
ret
daa
bound
jge
push
push
dec
mov
jecxz
add
mov
out
je
pusha
sub
mov
jmp
ss
and
adc
dec
jnp
inc
lahf
adc
fcompl
cli
pop
into
and
mov
sub
lahf
fcoml
call
fbld
adc
sbb
rclb
cmp
push
lock
adc
or
es
adc
xor
loopne
fnclex
adc
loop
les
dec
fists
jae
fisubrl
xor
fldl
jns
loop
inc
ficompl
andl
test
inc
pusha
cmp
imulb
testb
mov
scas
lcall
pop
mov
and
jle
into
repnz
sbb
dec
daa
pop
cmp
adcb
iret
sbb
sbb
movsl
fwait
cmp
dec
pop
lcall
pop
aam
stos
mov
or
mov
subl
stc
add
iret
xchg
outsb
and
fsubrl
fsts
xorb
xchg
jb
or
cwtl
xlat
mov
dec
xor
fdivrl
adc
pop
scas
movsb
leave
pop
add
bound
popa
pop
leave
push
lds
mov
ficoml
call
scas
jge
adc
dec
xor
aad
lods
mov
fmulp
xchg
or
xchg
inc
cmc
ret
stc
loope
adcl
add
xchg
fdivl
and
jo
push
mov
movsl
mov
neg
adc
in
int3
out
pop
es
in
shrb
mov
lret
cmpsl
mulb
pop
in
test
mov
mov
ss
fimull
dec
adc
ret
ret
out
addl
bnd
iret
xchg
push
dec
inc
dec
mov
testb
mov
jge
inc
mov
out
aad
and
mov
lock
pop
xchg
js
inc
sbbb
mov
dec
xor
fcoml
or
push
cmc
mov
and
mov
ret
jge
sub
fisttps
cwtl
sti
mov
add
mov
xlat
into
scas
mov
enter
fsubl
ffreep
sub
dec
push
push
pop
xor
outsb
jo
int3
test
aas
iret
int3
jno
xchg
mov
mov
cmp
lret
das
icebp
sahf
iret
mov
loop
inc
dec
test
das
or
negl
cwtl
jbe
dec
pop
xor
fwait
pop
cwtl
sub
push
sbb
jo
xor
cwtl
add
adc
jmp
mov
xor
lock
test
and
jge
pusha
popf
movsb
loop
insl
es
cmp
test
xor
mov
popf
jmp
mov
repz
subl
push
adc
push
aam
ret
sarb
cli
in
fwait
push
dec
cmp
dec
mov
cld
lcall
jbe
ret
pop
sbb
pop
jp
xchg
arpl
lret
pop
aas
push
add
pusha
xor
and
sub
fists
inc
ljmp
xor
cmovs
pop
mov
test
xchg
inc
push
lret
sti
fsub
adc
cmp
jno
ss
and
sub
pcmpgtw
in
sahf
jb
mov
jle
pslld
mov
hlt
in
push
push
cmpl
aas
push
dec
ds
mov
sub
pop
idiv
push
mov
lods
movsb
repnz
int3
add
mov
lret
pop
add
jmp
xor
addb
aam
sub
sub
rorl
xchg
repz
int
pusha
in
sub
mov
xchg
xchg
sub
sub
stos
iret
frstor
sub
jo
repnz
movsl
out
add
jecxz
test
scas
mov
mov
or
lahf
cmp
fstl
stos
mov
add
adc
rolb
js
mull
dec
das
push
jl
push
xchg
pop
mov
add
sti
sbb
pop
push
sahf
inc
cmp
sbb
inc
int
push
aad
dec
mov
mov
scas
xchg
out
pop
jae
nop
xlat
out
sarb
rcrb
xor
push
xchg
divl
addl
aam
popf
and
sbb
cli
lock
adc
xchg
shrb
leave
jne
daa
leave
inc
xorb
roll
imul
daa
js
inc
cmp
pop
jle
ja
int
mov
jle
sub
mov
daa
adc
sub
cmp
cld
dec
lret
movsl
pop
mov
adc
and
cwtl
lods
movl
jge
aam
insl
fsts
in
fsubrs
fidivl
mov
jno
rcll
movsb
cmp
mov
push
sahf
push
imul
leave
jp
inc
lds
mov
sbb
lret
fcomip
pop
dec
and
ljmp
jl
mov
jle
stc
js
mov
push
mov
jno
arpl
test
dec
pop
ja
xchg
mov
pop
dec
clc
xor
test
je
stc
mov
ds
outsl
fs
stos
bound
mov
xor
push
adc
xchg
fimuls
or
sub
push
sbb
mov
lcall
mov
adc
cld
dec
clc
lahf
cltd
jnp
leave
mov
fisubs
cmp
mov
dec
stos
dec
xchg
adc
hlt
inc
in
or
fisubrl
inc
addl
pusha
shl
stos
icebp
xor
or
jp
out
or
jmp
or
jmp
in
mov
jmp
ds
insb
adc
pop
faddp
bound
data16
xor
leave
cmp
add
sbb
mov
dec
dec
loopne
add
pop
inc
test
icebp
aas
xchg
and
das
repz
xchg
inc
inc
jnp
jo
test
mov
or
scas
es
jne
pop
cmp
and
pop
jae
mov
cli
aaa
clc
cmpsb
int
imul
mov
push
sbb
fcomps
xor
mov
rcr
mov
push
je
movsb
mov
mov
inc
inc
repz
lcall
aas
aad
dec
into
lods
std
test
mov
jae
imul
mov
jp
outsb
pop
cmpsl
fstps
mov
pop
test
adc
adc
loop
leave
loopne
jmp
mov
jb
test
dec
add
inc
lret
mov
rorl
movsb
lods
push
sbb
mov
pop
mov
int
gs
pushf
mov
sti
mov
rcr
addl
sub
aad
mov
ja
add
pop
das
cmpsl
test
jecxz
pop
sbb
inc
mov
or
sub
and
rol
imul
push
sarl
xchg
into
lock
dec
outsb
imul
mov
outsl
dec
adc
pop
repnz
insb
lods
xchg
les
push
scas
pop
es
jno
mov
mov
ret
repz
jp
cmc
mov
incl
push
stos
fwait
lods
pop
in
adc
xchg
push
jns
mov
mov
scas
xchg
sub
xchg
sahf
xor
imul
adc
or
sarb
clc
fwait
dec
push
push
dec
push
push
jns
jmp
jno
sub
and
mov
decl
mov
aam
xor
pop
jns
imul
lret
es
mov
xor
loopne
jle
dec
jl
xor
ss
gs
leave
loope
sahf
orl
xlat
fdivrl
xor
cli
xchg
loop
mov
push
mov
dec
push
jl
pop
out
xchg
andl
adc
push
fcomps
xchg
pop
into
or
pop
or
jecxz
rorb
movsb
rcl
adc
sbb
lcall
dec
scas
pop
je
das
xor
popf
xlat
adc
jl
push
ret
out
movsl
pop
xor
jns
loop
mov
push
cs
lret
adc
out
leave
inc
xchg
mov
mov
or
mov
pop
ds
mov
mov
dec
out
push
icebp
and
cwtl
dec
aam
mov
push
cmpsb
push
ja
add
sbb
sbb
pop
cmp
sarl
orb
icebp
push
aad
cmpsl
outsb
popf
loop
pop
xchg
cmp
rol
sbb
add
cmp
mov
js
hlt
cmpb
ds
negl
imul
iret
nop
fistpll
ja
and
fwait
add
clc
hlt
add
jnp
mov
xchg
or
stos
cmpsl
out
mov
mov
jb
insl
cmp
data16
inc
or
jne
xchg
xor
push
jle
or
push
cwtl
mov
cli
sbb
push
and
sub
in
sub
or
icebp
dec
loope
testb
out
arpl
pop
call
mov
jl
lret
std
dec
les
or
gs
mov
les
shll
xchg
adc
adc
out
dec
or
lcall
or
scas
lret
mov
pushf
popa
dec
std
or
cld
es
in
popa
outsl
lcall
jge
pop
sub
sub
mov
mov
mov
push
mov
dec
push
mov
cs
inc
jnp
out
sarb
stc
jno
imul
sub
mov
xor
sarl
cld
bound
cltd
mov
sbb
aaa
and
xor
xor
inc
inc
cwtl
stos
ucomiss
xchg
sbb
pushf
inc
daa
xchg
xchg
adc
bound
push
pop
pop
sub
push
push
loop
outsl
jle
ljmp
inc
dec
pop
sahf
xchg
pop
sbbl
inc
xchg
arpl
adc
das
adc
jge
inc
es
cmp
sbb
fwait
cwtl
leave
dec
nop
jg
jmp
sbb
scas
dec
in
cwtl
xchg
sub
sti
adcl
pop
nop
xor
fimull
jmp
add
repnz
cmp
jmp
leave
ret
dec
outsb
xor
add
xchg
movsb
faddl
adc
inc
mov
mov
jge
pop
ds
sbb
cmp
and
jmp
daa
cmpsb
jge
mov
adc
rcl
adc
xor
loopew
faddl
lret
movsb
out
ret
js
push
fdivp
ficompl
rcrb
xlat
cld
aam
or
stos
mov
fwait
orl
gs
negl
js
comiss
mov
add
sbb
jne
adc
outsb
mov
das
aaa
mov
hlt
cmp
jae
and
lea
loope
stos
jle
or
jo
inc
mov
mov
sub
je
popf
ljmp
arpl
es
fisttpll
or
push
adc
dec
jmp
and
mov
pushf
jge
jbe
outsl
movsb
pop
mov
mov
fldlg2
jg
leave
inc
or
ss
movzwl
adc
jecxz
jno
jae
pop
jle
and
lea
mov
or
pushf
mov
dec
xchg
out
push
mov
bts
icebp
int3
jo
frstor
xor
xor
mov
sti
or
ss
pop
xor
add
mov
ljmp
jo
push
rorl
sbb
ljmp
movsb
mov
and
mov
out
iret
pop
addr16
mov
repz
cld
add
arpl
adc
mov
inc
mov
leave
sti
or
incb
jecxz
shll
jb
rcl
lsl
stos
add
xchg
in
push
jae
shrl
xor
mov
xchg
inc
shl
jns
cmp
inc
test
xor
sbb
rclb
clc
sbb
imul
fcomps
mov
dec
pop
xchg
lea
aam
leave
lea
cmp
push
outsb
lret
jne
shll
jp
cmc
mov
mov
outsl
das
dec
mov
imul
loop
inc
push
cld
lock
push
scas
jae
mov
std
push
sbb
jle
lahf
adc
orl
jp
adc
dec
scas
test
mov
imul
insl
cmp
shrb
aas
adc
inc
dec
clc
inc
cltd
stos
stos
mov
jecxz
jl
aas
inc
mov
push
sub
sahf
arpl
and
jecxz
aas
scas
lds
cltd
hlt
dec
jge
pop
xchg
popf
ja
mov
jae
fwait
sahf
mov
adc
mov
mov
jmp
test
iret
dec
hlt
addr16
pop
clc
mov
sub
insb
xchg
fmuls
cltd
lcall
jnp
aaa
cmp
push
adc
nopl
jmp
inc
data16
xlat
ja
sbb
aaa
mov
lret
lret
imul
mov
sub
mov
pop
xor
scas
dec
loope
mov
rcrl
mov
mov
inc
add
push
xchg
push
dec
mov
sbb
sbb
xchg
xor
jne
outsb
adc
cmpsb
mov
pop
daa
leave
repnz
mov
push
mov
xor
hlt
enter
pop
pushf
mov
aas
mov
mov
mov
popa
jl
rcr
movsb
or
mov
sbb
stc
test
cmpl
notb
rcrb
jb
adcb
out
fwait
adc
jbe
add
cltd
inc
push
jns
mov
lock
gs
mov
imulb
push
inc
xlat
pop
sub
cmpsb
lahf
mov
arpl
out
fstpt
aam
addl
outsb
movsl
pop
or
jmp
leavew
clc
leave
pop
and
movsl
andb
mov
xlat
push
lods
bound
pop
dec
imul
sahf
cld
in
jg
dec
negl
ja
loop
mov
ss
dec
pop
xor
js
ret
arpl
dec
xor
mov
dec
xor
jmp
stos
outsl
in
jl
mov
sub
mov
repz
ss
dec
pop
jns
jo
jae
mov
popf
sbb
rep
in
pop
rcrb
out
fstps
popa
inc
sub
in
jmp
add
jmp
fistps
cmp
push
scas
lahf
mov
cmc
adc
je
in
inc
push
dec
pop
loop
lret
rcr
inc
insl
pushf
ret
xor
in
pusha
push
mov
cld
les
fdiv
lods
aam
mov
inc
enter
in
daa
cwtl
fisubrl
fs
test
ret
stos
aad
shrl
and
rcrl
cmp
pop
cmp
mov
adc
stos
pusha
or
add
cli
nop
and
pop
rclb
jecxz
and
in
add
or
bound
cmp
add
lods
mov
push
and
fldenv
jp
pop
fsubr
outsl
aaa
cmp
xor
mov
nop
mov
dec
sub
bound
pop
push
fstps
mov
add
testl
shlb
add
aas
pop
cmp
mov
arpl
mov
and
in
sub
mov
pop
inc
jnp
and
rol
pop
leave
xchg
cmp
pop
inc
call
fwait
popa
ljmp
mov
lock
out
dec
orb
repz
repnz
mov
incb
push
nop
dec
cli
leave
xor
push
add
out
dec
mov
sbb
test
pop
mov
dec
adc
pop
xchg
mov
cmp
addb
fbstp
lock
inc
idivl
push
lret
mov
push
hlt
divl
xchg
xchg
fisubs
jp
imul
rolb
int
cmp
add
jg
shr
repnz
call
inc
pop
lods
push
enter
daa
mov
imul
xor
popf
sub
xchg
add
cmpsl
mov
inc
movsb
jne
push
and
pusha
and
mov
mov
mul
mov
xchg
push
pop
lcall
clc
sti
lea
jne
popa
mov
xchg
in
test
or
mov
cs
jo
mov
lret
dec
lret
dec
mov
sbb
jecxz
hlt
or
xor
sbb
cltd
in
jb,pt
loope
adc
jle
xor
in
loope
rcrl
push
int3
lods
xor
bound
xlat
insl
sbb
jle
stos
enter
pop
xchg
stos
cmpsb
and
adc
cmp
mov
mov
sub
xchg
vpsubw
push
jl
repnz
lods
or
movsb
inc
push
popf
xor
xor
mov
out
sub
dec
testl
xchg
pop
ret
movl
orb
xchg
xchg
cmpsb
mov
and
in
pop
xor
or
loope
pop
cmp
and
and
lods
test
push
sbb
adc
or
stc
dec
lock
into
sub
aam
stc
xor
sarl
rclb
jne
lods
push
shrb
pop
mov
mov
sub
data16
lock
sub
les
sub
or
data16
push
stc
idiv
pop
roll
adc
sub
jl
les
mov
lcall
and
aad
cmp
aam
pop
aam
mov
dec
xor
sbb
cmpsb
dec
subl
lcall
and
sub
popf
loope
mov
and
popf
fbstp
and
and
add
in
arpl
cpuid
xchg
int3
mov
inc
pop
les
mov
push
and
mov
inc
ret
push
sbb
gs
lock
xchg
cmpsb
inc
cs
xor
hlt
push
fwait
lock
and
shlb
or
leave
lahf
xor
insb
xchg
repz
xor
aaa
js
cmp
push
adc
sbb
push
pop
ficompl
test
js
or
mov
adc
and
arpl
pushf
daa
pop
fisttpll
popf
ret
or
mov
lahf
lret
stos
ljmp
sbb
stos
sbb
ja
push
sub
jne
ret
dec
dec
fiadds
jmp
add
cs
push
outsl
es
cmp
movsl
cmc
dec
xor
stos
dec
push
or
pop
inc
adc
mov
push
dec
test
xchg
mov
outsb
stos
fstl
inc
cmp
ret
in
inc
loop
out
scas
push
push
push
dec
lret
add
int3
stos
jge
adc
dec
out
call
fnstsw
test
dec
sub
adc
mov
add
sub
iret
test
loope
test
repz
sub
cmp
std
or
mov
in
push
pop
cwtl
addl
inc
pop
clc
test
das
or
loopne
jge
loopne
xchg
push
push
lret
lock
inc
xor
mov
stos
stos
in
call
jbe
stos
fisubrs
and
push
jo
test
mov
sti
push
pop
pop
outsb
mov
cli
ds
push
dec
js
xchg
ljmp
adc
mov
stos
iret
sub
pop
mov
data16
dec
imul
aas
lods
adc
enter
inc
call
repz
out
mov
jnp
and
or
and
test
mov
cmp
inc
jmp
andl
dec
inc
mov
fs
sub
add
in
inc
or
lods
mov
mov
push
loope
imul
outsb
xor
in
adc
mov
pmaxub
xchg
js
or
hlt
mov
sub
push
push
mov
in
mov
sbb
mov
popa
into
xchg
insl
inc
jb
mov
sub
mov
mov
inc
adcl
push
sahf
jle
testl
fdivrp
ss
lods
nop
hlt
ffreep
insb
sbb
jmp
scas
leave
add
mov
pop
mov
mov
mov
aam
or
rep
leave
and
jno
pop
mov
popa
into
out
push
mov
pop
scas
sahf
leave
mov
lods
pop
std
xchg
pop
or
add
jmp
test
add
enter
cmpsl
mov
fcmovb
rcrl
lea
lcall
repnz
push
fidivs
mov
push
andl
div
mov
pop
hlt
jnp
add
int3
lock
mov
sub
in
das
sti
xchg
std
push
movsb
arpl
and
xchg
push
ljmp
add
mov
mov
jno
pusha
les
jae
data16
nop
outsb
xchg
enter
adc
mov
mov
dec
aaa
stos
stos
xor
sbb
call
or
xchg
cmpsb
mov
mov
filds
jnp
aas
out
inc
mov
sarl
sarl
fisttps
xchg
decb
mov
jbe
adc
jbe
sar
add
mov
sbb
cmp
push
push
add
aas
je
je
mov
sbb
dec
push
pop
inc
adc
mov
fdivrs
jecxz
mov
and
mov
jmp
or
mov
cmpsb
fldt
jne
cmp
subb
mulb
sub
shll
adc
sar
push
pushf
add
aad
aam
xchg
scas
mov
stos
xchg
hlt
mov
dec
roll
scas
and
in
dec
ret
fld
inc
nop
fistpl
push
sahf
pop
dec
test
cmp
adcl
fadds
sub
mov
mov
fwait
out
cmp
movsb
test
xchg
outsb
sub
adc
mov
hlt
test
or
sub
pusha
outsb
xlat
lea
mov
rcrb
push
sbb
inc
pop
pop
jbe
sbb
and
push
aam
pop
push
in
mov
cld
int
push
add
gs
idivb
adc
lods
enter
stc
repz
lcall
fwait
lcall
pop
nop
aad
or
pusha
jae
out
push
mov
mov
sbb
xchg
das
lahf
jae
mov
xor
clc
sbb
in
xchg
mov
hlt
imul
push
cli
mov
jmp
cmc
fsubrl
xor
mov
add
push
and
fimull
jnp
out
and
inc
out
mov
jl
push
and
sub
pop
or
jmp
or
insb
cmpsb
jno
or
lahf
dec
into
loop
mov
roll
loopne
frstor
outsl
rorl
cltd
sti
scas
mov
test
inc
inc
xor
xor
mov
mov
enter
andl
je
sub
sub
adc
xor
mov
es
sbb
nop
test
sbb
hlt
push
adc
cwtl
imul
xchg
push
loop
sub
inc
ljmp
shrl
mov
push
pop
nopl
rolb
nop
jge
jmp
mov
adc
outsl
or
add
jmp
les
mov
inc
out
addr16
or
adcb
notl
out
lret
jecxz
pop
mov
adc
xor
push
lcall
mov
inc
push
or
sti
out
pinsrw
stos
call
sbb
rcrb
and
rcr
cltd
or
cmpsl
scas
sub
add
aaa
lret
inc
pop
dec
nop
das
out
cwtl
xor
imul
adc
leave
in
sbbb
push
js
and
cli
xor
shlb
xor
inc
daa
cli
push
mov
jnp
mov
adc
cltd
fadd
je
sub
add
jae
sahf
push
jno
dec
inc
cli
inc
sub
push
movsl
stos
dec
sbb
sbb
scas
leave
add
scas
add
mov
and
pop
clc
aas
mov
lcall
pop
push
mov
stos
jno
sbb
in
pop
xlat
add
xchg
push
pop
mov
dec
repnz
enter
and
bound
orb
icebp
fsubs
mov
pop
push
mov
popa
and
lcall
ret
call
in
loope
mov
repz
inc
pop
popf
fs
xor
nop
fwait
ljmp
jmp
insb
mov
jb
daa
mov
repz
inc
sti
fbld
mov
xor
xor
push
xchg
arpl
inc
cmpsl
or
call
jnp
jne
test
inc
arpl
mov
push
add
inc
mov
inc
mov
stos
inc
loopne
jno
mov
cld
pop
cmp
inc
stc
mov
out
roll
mov
mov
call
jmp
arpl
iret
mov
push
outsl
mov
shrl
stc
dec
mov
daa
insl
repz
js
push
mov
dec
data16
flds
mov
shrb
pop
jp
fcmove
cmpb
adc
jl
sbb
xchg
push
pop
enter
je
addr16
gs
std
add
jl
xchg
jns
into
scas
xchg
inc
cmc
daa
jb
test
sahf
popl
adc
mov
shrl
or
notb
mov
mov
stc
adc
out
mov
loope
push
and
imul
icebp
pop
add
rorb
gs
dec
dec
movsb
out
divl
sahf
insl
bound
out
or
ret
or
in
add
sbb
and
lcall
mov
sub
leave
xlat
aaa
les
fsubs
lods
lods
cmp
clc
xor
shlb
negl
push
adc
sbb
adc
imul
add
out
out
jne
push
inc
lcall
jne
mov
popf
pop
ja
das
ss
rclb
sarb
dec
mov
cmp
mov
cmp
or
ja
stos
xor
push
sub
mov
lret
mov
pop
and
xor
aaa
cli
ds
cmp
add
out
movsb
sarl
jecxz
rcll
xlat
scas
jo
fstpl
mov
scas
jbe
mov
icebp
pop
pop
out
push
push
push
pop
test
rolb
push
fs
out
fisubl
cmp
add
mov
mov
or
popf
shlb
cli
loope
mov
dec
out
and
push
inc
sub
je
xchg
xchg
add
gs
push
xchg
dec
out
adc
mov
xrelease
stos
xor
pop
or
cmp
inc
imulb
scas
pop
insb
jg
jnp
pushf
mov
dec
sbb
rolb
add
and
jbe
mov
or
scas
cmp
vcmppd
pop
pushf
pop
js
mov
iret
push
cwtl
sub
test
and
in
dec
testb
mov
sbb
mov
add
push
ljmp
cmpsb
add
mov
push
xor
sbb
fadds
mov
jle
leave
or
push
or
roll
adc
jmp
push
sahf
jae
inc
mov
lret
jnp
or
dec
and
jae
sbb
xchg
or
jne
fbstp
mov
repnz
lahf
lds
adc
lret
sti
in
jecxz
jne
xorl
xchg
test
sbb
aam
test
adcb
sbb
add
jle
inc
inc
sbb
faddl
add
add
cli
add
cltd
mov
rcrl
mov
dec
iret
repnz
xchg
xchg
push
hlt
jnp
les
push
sub
add
mov
mov
sbb
loop
push
stos
inc
jp
mov
dec
sbb
pushf
push
jo
adc
in
pop
xchg
cmpl
mov
cwtl
ds
pop
out
mov
aas
cmc
push
pop
cmpsl
loope
fsubr
dec
outsl
jb
xor
cmp
sub
mov
mov
addr16
pop
xchg
imul
movsb
mov
fildll
std
dec
icebp
cmpsl
adc
sbbl
or
jg
cltd
outsb
lret
les
xor
call
dec
fidivs
mov
lret
inc
mov
mov
jbe
dec
jnp
jae
cld
out
add
jmp
xchg
adc
push
adc
aam
sub
fisttps
je
call
and
dec
sub
pop
fisubl
and
outsl
xchg
stos
lea
push
jl
sub
loope
inc
clc
addl
xor
pop
push
dec
pop
stc
mov
jle
jo
push
push
pop
xor
repnz
mov
loopne
mov
gs
inc
iret
sahf
shr
adc
lock
sarl
test
bound
sub
fldcw
es
lds
push
jo
add
in
xor
mov
in
popf
xchg
add
and
push
int
mov
pop
push
dec
adc
xchg
inc
mov
lds
and
sub
sub
push
xchg
icebp
lods
adc
clc
sti
jmp
or
adc
imul
dec
gs
std
nop
repz
bound
int
dec
aas
push
out
lods
dec
adc
popa
sub
popa
in
sub
sti
cmp
fnsave
push
add
insb
cmpsl
jae
jo
sub
pop
cmp
inc
push
xchg
cmp
fisttpl
add
cmp
push
pop
fs
in
jnp
xchg
add
popa
sbb
rolb
push
push
ja
lods
sbb
add
push
stc
and
xchg
push
scas
jne
shl
mov
xchg
mov
ljmp
cmp
pop
push
sub
sbb
dec
idivl
arpl
mov
mov
dec
push
outsl
xchg
in
xchg
adc
rorl
test
cld
enter
jb
push
push
std
test
sbb
pop
sarb
andl
loopne
mov
sub
stos
fnsave
mov
test
cmp
mov
xorl
outsl
hlt
or
out
dec
cld
mov
sahf
mov
pushf
sbb
call
repz
sbb
es
add
cmp
das
jnp
mov
lods
xchg
in
mov
mov
cmpb
fadds
and
or
aaa
dec
xorb
aaa
dec
cwtl
movb
pop
pop
inc
out
movsl
add
imul
adc
popa
mov
jp
lea
cs
divl
fs
jnp
adc
mov
sbb
mov
sub
test
in
daa
test
enter
jns
stos
push
cmp
adc
test
cmp
imul
sidtl
loope
insl
mov
jle
stc
fwait
pop
and
or
les
pop
push
mov
dec
movsb
xchg
aaa
jmp
sub
arpl
popf
sub
loope
mov
shll
fldl
out
xchg
cmpsl
pop
hlt
sub
add
inc
lcall
mov
jmp
nop
nop
adc
inc
sub
loopne
xchg
dec
adc
fmuls
adc
xor
mov
adc
push
inc
cld
fistps
ret
dec
mov
stc
js
dec
add
mov
mov
out
mov
ljmp
inc
cwtl
loope
cld
xchg
je
sub
mov
stos
xchg
jge
dec
pop
addr16
rorb
pusha
lea
inc
push
and
adc
mov
sub
add
dec
fsubrs
imul
out
in
mov
lea
adc
lret
and
jnp
dec
push
imul
add
cmc
add
xor
hlt
push
sarb
aas
cmp
inc
pop
pusha
call
js
das
data16
sahf
inc
mov
inc
sbb
inc
js
push
xor
mov
rclb
xlat
or
mov
inc
js
xor
sub
out
sbb
js
xor
and
ss
rol
gs
stc
sbb
movsl
je
dec
xchg
cltd
mov
popa
adc
sbb
and
mov
in
lcall
inc
mov
sbb
push
ret
or
pop
inc
pop
push
lea
pop
jmp
mov
cld
sahf
push
lock
jns
lea
call
out
mov
jae
notl
push
popf
or
popf
jno
and
fwait
repnz
sbb
dec
mov
push
iret
push
insl
or
movd
xchg
sub
test
leave
xchg
adc
dec
xchg
adc
xor
les
and
fxch
fnsave
out
push
lret
and
mov
ret
jbe
push
inc
out
adc
insb
cmp
sub
je
jae
push
mov
dec
dec
shr
aad
leave
sub
nop
mov
xor
aas
sbb
sbb
notl
fisttpl
jbe
push
or
pushf
aas
in
scas
lcall
xchg
pushf
bound
out
push
clc
daa
inc
notb
push
adcb
mov
xchg
mov
mov
xor
pop
mov
add
enter
and
jne
imul
pop
pop
das
lcall
push
lret
push
pop
push
adc
mov
adc
and
insl
lock
fs
inc
pop
fiaddl
pop
int3
fsubrl
sahf
add
sub
add
test
jle
xor
push
xchg
aaa
mov
xorb
push
repz
aad
push
jmp
out
pop
cmp
icebp
sub
inc
xor
sub
push
repnz
hlt
push
cli
fxtract
push
notb
outsb
xlat
cmp
cld
lock
mov
jge
jle
pop
dec
push
xor
popf
les
gs
adc
test
push
lods
sub
sbb
mov
jecxz
sbb
jl
jg
add
addr16
cmp
jns
movsb
nop
push
test
addr16
test
pop
cmc
stos
pop
aaa
sub
xor
dec
sub
lods
and
adcl
mov
adc
vmread
cs
dec
push
sub
push
push
call
push
aas
sarb
pop
mul
pop
push
ja
movsb
xchg
jb
or
incl
push
mov
or
add
or
stos
inc
and
xchg
cmp
js
mov
ret
scas
dec
das
icebp
mov
jb
mov
jge
xchg
push
pop
popa
sub
je
dec
xchg
mov
adc
xlat
sbb
xor
sbb
xchg
neg
push
jge
arpl
cmp
aam
cltd
sbb
mov
dec
bnd
outsb
mov
jno
mov
insb
pushf
sbb
int
push
adc
dec
enter
je
dec
repz
popf
int
int3
adc
and
pop
les
popf
das
test
lahf
out
pop
ss
xor
dec
popf
or
push
out
mov
dec
fadd
leave
mov
aam
pop
inc
mov
xor
fs
in
and
or
es
dec
cmc
addb
out
ljmp
pushf
mov
subl
or
push
test
int3
repz
cmp
cmpsb
inc
outsl
sub
lret
fsubrs
jnp
sbb
jne
xor
and
inc
lret
jnp
inc
jge
and
lock
mov
mov
jnp
dec
cmp
test
test
cmc
sub
punpcklwd
xchg
push
loop
pop
cmpl
negw
jmp
mov
fistps
xchg
jne
stos
in
test
jb
es
sbb
push
mov
loopne
outsb
mov
fnstcw
inc
cwtl
mov
fistps
or
sub
loop
jmp
dec
mov
andb
push
mov
pop
arpl
mov
xor
pop
fisttps
aad
addr16
das
jmp
jb
dec
inc
xor
mov
pop
cs
pushf
lret
gs
xchg
sbb
adc
aad
mov
sub
sub
fs
stc
scas
xor
push
pop
mov
out
repz
jecxz
pop
or
mov
and
push
test
test
adc
dec
and
pop
cmp
inc
bound
or
lahf
in
in
ja
mov
pop
jo
jl
iret
inc
popf
mov
add
lods
sub
sbb
pop
scas
jo
pop
movsl
jge
and
sbb
ljmp
and
push
leave
enter
neg
pop
jns
or
dec
xor
das
cmp
in
fs
fs
mov
pop
scas
push
andl
or
jl
jno
loope
xor
sti
mov
push
sbb
pushf
push
hlt
clc
in
jo
dec
daa
push
cwtl
adcl
ja
out
es
fdiv
push
pop
or
jmp
or
or
dec
test
jecxz
cmp
jge
pop
dec
fstps
xor
dec
adc
fwait
sti
sub
fcoms
aad
out
dec
cmp
in
ret
jo
mov
jb
xchg
jne
lret
fstpl
iret
or
mov
xchg
jae
js
loop
std
push
or
jmp
push
push
sbb
push
or
or
push
fsubrs
filds
pop
pop
cmpsl
negl
lret
inc
loope,pt
xor
mov
xchg
ret
push
or
popf
xchg
cmp
movsl
pop
push
lret
sbb
jg
in
scas
andb
cmp
dec
xchg
pop
sub
sbb
dec
jne
fisubrs
adc
test
xchg
mov
jb
gs
daa
xor
negb
sbb
fadds
jno
stos
in
xchg
mov
fwait
popf
daa
cmp
sub
mov
cmp
mov
imul
sbb
cmp
inc
int3
andb
fisubs
mov
and
in
out
jb
push
repz
mov
push
in
addr16
jmp
xor
and
jb
jge
lcall
mov
and
jo
and
es
nop
out
repnz
mov
mov
dec
xchg
mov
addr16
imul
mov
les
push
stc
lret
and
dec
sub
inc
mov
sbb
aaa
adcb
cmp
mov
cmpsl
dec
flds
push
lret
or
push
push
inc
dec
imul
xor
inc
and
mov
icebp
shl
pop
sub
push
out
rorl
cli
jp
js
clc
add
insl
or
sarl
rolb
fsubr
jo
ja
nop
xlat
mov
cmp
sub
inc
lods
or
aam
imul
test
jle
outsb
xor
sahf
std
ficoml
stc
cmp
xor
rcll
aaa
sar
pop
cmp
cmc
lret
jns
and
mov
jge
stos
mov
bound
push
and
xchg
jmp
outsl
out
in
pop
sbb
mov
dec
and
push
and
push
mov
lahf
out
sbb
in
mov
xor
filds
mov
loope
ja
in
mov
mov
or
fisttps
jge
addl
or
mov
pinsrw
fmull
lock
imul
hlt
je
cmp
test
cmp
enter
xor
aam
xor
push
pop
xor
xchg
push
mov
mov
addr16
push
push
or
jmp
movsb
bound
pop
add
mov
stc
clc
or
insl
dec
mov
movb
xor
jns
jbe
scas
lock
cs
int
adc
mov
stc
inc
insl
pop
nop
add
lds
fwait
cmpsl
mov
loopne
sbb
mov
jbe
cltd
push
shlb
or
movsb
inc
dec
push
sub
fwait
or
aad
insb
insl
lahf
jp
push
sub
mov
and
lods
mov
lret
pop
fcmovnbe
insb
into
xchg
and
dec
notl
inc
sub
insb
fdivrs
mov
cs
adc
out
movsb
jle
mov
in
mov
lret
add
sub
repz
cltd
cs
out
adc
mov
pusha
sbb
sbb
xor
sub
sbb
int
push
push
jge
or
push
in
mov
mov
jns
divb
loope
in
xchg
faddl
push
jnp
stc
sub
ja
mov
jbe
es
push
cld
sbb
lds
adc
add
adc
movsb
mov
jo
repnz
pop
shrl
imul
mov
mov
cwtl
dec
lock
pop
into
mov
dec
mov
jp
jns
push
mov
rol
shlb
paddq
int
out
les
jbe
inc
loope
pop
aas
jne
mov
push
dec
or
mov
mov
xchg
mov
mov
pop
jge
arpl
fcmovb
xchg
push
scas
sbbb
cmp
stc
ret
adc
adc
cli
inc
or
push
pop
sarl
jg
ret
negl
pop
dec
push
out
mov
mov
out
shrl
into
int
dec
pushf
out
shrl
insl
aad
mov
jecxz
jle
push
xchg
jnp
call
out
jmp
mov
or
or
or
push
fidivrl
ret
and
and
movsb
dec
pop
jno
sbb
sbb
cltd
cmp
lret
cmpsb
pop
mov
enter
pop
sub
and
cmp
faddl
jne
inc
mov
shlb
cmp
sbb
idivl
jp
pop
shll
movsl
cwtl
lods
cmp
imul
mov
xor
xchg
call
les
es
mov
leave
push
or
jno
jge
sbb
test
lods
popf
mov
mov
dec
and
fistpll
leave
cmpsl
sub
inc
mov
pop
push
mov
insl
movsl
push
dec
lods
cli
repnz
jmp
mov
jge
scas
in
jecxz
nop
outsb
pop
cltd
dec
inc
shll
pop
movsl
call
sub
inc
mov
xor
int
or
scas
add
mov
mov
push
out
outsl
adc
dec
icebp
movsb
pop
push
mov
xor
mov
push
nop
push
scas
mov
outsb
out
enter
ljmp
cmp
fs
xor
fdivs
shrb
call
icebp
cmp
jg
inc
or
sbb
pop
sahf
xchg
push
jne
fs
mov
inc
inc
push
mov
pusha
pop
jae
pop
and
xor
sub
inc
fs
inc
mov
jae
pop
push
sarl
aad
push
inc
pop
pop
mov
mov
ja
pop
xchg
mov
inc
push
fists
dec
cld
das
jg
dec
insl
dec
lock
and
icebp
hlt
mov
leave
lret
jmp
pop
shr
dec
addr16
add
cli
jb
int3
adc
add
repz
xorl
add
mov
push
push
pop
iret
cltd
ja
iret
sahf
lds
into
and
test
mov
adc
adc
roll
inc
arpl
jo
sub
in
dec
stos
sub
jb
inc
xchg
aam
adc
mov
cmp
daa
mov
or
add
out
pop
test
loop
fistl
aas
jge
das
nop
mov
arpl
adc
xor
add
movsl
ret
mull
test
int
adc
sarl
mov
mov
dec
mov
pop
mov
test
mov
dec
movsb
push
lret
in
ret
xchg
xchg
and
fcomp
or
inc
or
and
and
mov
sbb
xchg
cmp
ss
fimuls
cwtl
push
fscale
mov
push
jl
mov
xchg
call
ljmp
xchg
cmc
pop
cmc
lods
or
push
mov
je
into
inc
or
int
lea
mov
nop
jns,pn
bound
cmp
insb
add
mov
mov
shrl
mov
ljmp
sbb
je
jge
and
xor
add
repz
mov
pushf
mov
mov
xorb
enter
arpl
and
jo
imul
xor
fcomps
mov
cmp
mov
testb
mov
aad
cli
aam
sbb
dec
pop
jecxz
lock
pop
adc
pop
lret
movsb
mov
mov
inc
jmp
ss
push
cld
loope
and
std
test
jns
arpl
push
mov
xchg
cmpsl
xor
roll
pusha
and
loop
sbb
icebp
xchg
out
ret
mov
out
push
loop
xor
cmp
fcoml
jb
sbb
or
jmp
sub
in
mov
pop
dec
mov
dec
pop
or
daa
jnp
push
add
jle
or
add
dec
mov
mov
cmpsl
movsl
sub
fcomp
push
fcomi
dec
int
mov
dec
xorb
cmp
push
js
adc
in
fadd
out
std
and
add
stos
dec
vaddsd
std
jns
ja
fldl2e
sti
jp
xchg
pushf
decb
clc
ret
lret
jl
js
insb
add
add
pusha
push
fabs
inc
stos
scas
scas
aas
adc
mov
add
aaa
cmpsl
outsl
ss
sub
outsl
or
inc
jbe
lret
jae
mov
cmp
movsb
idivb
arpl
push
cmovl
mov
jae
mov
js
pop
sbb
xchg
push
jne
sbb
adc
mov
dec
push
jb
clc
mov
adcl
add
in
or
popf
ljmp
push
aaa
add
enter
sub
lcallw
daa
add
in
ds
int
mov
cld
xor
repnz
xor
mov
jge
adc
out
cmpsl
outsb
push
xlat
mov
jmp
adc
sub
lcall
lret
andb
xchg
and
gs
loope
mov
pop
add
cmp
mov
sbb
bound
or
pop
jbe
and
jle
cmp
fsubrs
pop
mov
lcall
add
push
or
incl
adc
dec
jl
shl
push
and
nop
in
mov
push
or
adcl
dec
mov
shl
and
push
sub
push
ret
js
mov
adcl
ret
cli
jne
inc
dec
xlat
push
jecxz
xchg
out
arpl
add
cli
leave
jo
lcall
into
inc
sub
icebp
adc
iret
sbbb
cli
les
mov
stos
jb
pop
ljmp
negb
mov
subl
shl
das
cmpsl
out
mov
pop
pop
cltd
dec
cmc
daa
dec
cwtl
xlat
add
mov
loop
dec
ret
sarl
pop
test
fcomps
mov
cmp
mov
xor
repnz
mov
test
test
call
test
jb
jne
xlat
ja
aad
mov
inc
mov
mov
mov
loopne
les
push
inc
clc
or
push
push
sarl
mov
pusha
mov
sahf
mov
xchg
cwtl
ret
xor
mov
jp
in
test
inc
xor
scas
cltd
lods
fidivrl
jle
leave
push
ss
into
mov
call
pop
jle
pop
mov
sub
and
push
add
xor
movzbl
cmp
push
fmulp
inc
cmova
mov
cmp
cmp
pop
shll
and
cmpsl
imul
pop
mov
js
xor
hlt
jo
add
sub
ja
scas
jns,pn
cmpsb
mov
inc
pop
into
out
adc
jns
int3
cmpsl
mov
inc
mov
add
cmp
movsb
stos
adc
iret
push
adc
out
into
ja
inc
pop
dec
inc
jbe
decl
nop
pop
loop
push
sub
xchg
push
popf
cmp
test
test
mov
dec
inc
test
lret
ficompl
icebp
cltd
dec
mov
or
mov
and
repnz
inc
gs
repnz
bnd
mov
and
sbb
fstl
dec
adc
xchg
mov
enter
shlb
pusha
cmp
aad
add
in
sbb
jae
insl
jbe
sbb
pop
sarl
add
lcall
xchg
outsl
mov
aas
xor
repnz
sbb
cmp
xchg
pop
jl
sahf
push
testl
cld
and
popa
mov
mov
mov
cmp
es
mov
or
rorl
add
pusha
mov
xor
cmp
xor
push
pushf
pop
xchg
xchg
cmp
hlt
cmp
add
repz
mov
test
and
adc
enter
test
or
push
in
push
rcrl
pop
cs
in
sbb
outsb
rsm
or
out
enter
xor
and
ja
xlat
add
cld
fbld
cmp
into
xor
mov
jb
add
call
test
loop
test
inc
cwtl
inc
jmp
test
out
mov
movsb
mov
and
fisubs
adc
sti
mov
lcall
add
sbb
ljmp
movsb
jle
fmuls
xorl
cmp
mov
mov
jl
mov
push
adc
outsl
cmp
adc
push
dec
repnz
pop
mov
cmp
sarb
je
sarb
orb
in
and
push
ret
call
ja
adc
jle
lock
mov
mov
mov
cmpsb
jle
add
pusha
push
sub
xchg
aam
adc
push
inc
jle
aaa
dec
es
loopne
scas
push
stc
ds
jge
cld
mov
pop
sub
movb
push
jb
mov
jmp
xchg
mov
in
ljmp
push
jo
mov
dec
jg
sbb
or
pop
dec
inc
fdivrp
cwtl
adc
mov
hlt
int3
push
out
jl
dec
test
push
es
jmp
pop
imull
add
subl
pop
push
rcll
not
dec
sbb
xor
and
stc
mov
call
and
mov
pop
test
add
lret
data16
dec
and
xchg
add
leave
push
sbb
adc
pop
jmp
out
ss
ror
xchg
in
sub
repnz
push
and
loop
cmp
insl
cmpsl
lahf
mov
sub
jbe
mov
xchg
xlat
bound
or
cmpsl
pop
dec
jp
mov
icebp
pop
jecxz
jg
or
psrad
cmp
mov
pop
adcb
inc
push
dec
rolb
js
enter
add
inc
lahf
and
imull
xchg
lds
cld
jmp
hlt
ja
je
mov
add
fisttpll
cli
sbb
mov
lods
rorl
inc
inc
fwait
sti
jg
clc
jg
je
mov
cmp
sti
add
inc
ret
sub
in
test
aaa
mov
test
iret
pusha
mov
sbb
inc
iret
fimull
adc
pop
or
aad
and
jns
sub
pushf
in
mov
xor
adc
push
xchg
or
cld
mov
push
cld
inc
and
add
xchg
add
mov
adc
adc
cmp
cli
cld
dec
dec
mov
sti
in
insl
dec
in
dec
pusha
jnp
ljmp
imul
cmpsb
push
xchg
test
jne
jge
xchg
mov
xchg
ljmp
mov
xchg
mov
cmp
daa
jb
lds
clc
jnp
add
or
mov
imul
lcall
cmp
mov
test
jg
mov
imul
rorb
dec
rclb
mov
mov
and
xchg
push
add
cltd
bound
test
lea
mov
mov
and
dec
jns
movsb
inc
je
leave
mov
mov
mov
es
mov
xchg
push
cmp
fcomps
shlb
in
cmpl
out
fs
cli
mov
hlt
cmp
sub
mov
mov
jo
push
mov
mov
xlat
into
or
inc
enter
imul
sahf
xor
mov
addr16
in
loop
icebp
or
xor
push
inc
xlat
pop
and
cwtl
mov
rcrl
scas
jbe
xor
je
push
fmull
pcmpgtw
popf
repnz
test
sbb
adc
int3
sti
add
adc
cmc
mov
cmpsl
daa
popa
mov
filds
sbb
insb
pop
ds
lock
pshufw
xor
pop
cmp
cmpsb
aaa
push
mov
movb
hlt
mov
dec
in
inc
leave
jno
cli
pop
movsl
packsswb
xor
cmp
cld
mov
xlat
xchg
sbb
mov
and
popa
or
add
or
addr16
fdivs
out
xchg
sbb
icebp
pop
and
mov
stos
inc
add
mov
jge
sub
pusha
xchg
jnp
lret
icebp
fdivl
mov
xchg
mov
divl
jg
inc
int3
scas
lret
ret
movb
lea
jmp
movsb
scas
in
xchg
or
mulb
mov
sbb
cwtl
mov
lret
push
hlt
mov
ror
pop
or
into
pop
add
repnz
mov
fmull
dec
xchg
scas
popf
inc
cld
mov
fs
mov
push
mov
cmp
daa
rorb
jne
inc
xlat
loope
mov
out
bnd
cltd
mov
cmpsb
push
shlb
dec
push
in
or
jl
das
lret
lret
jp
or
insb
sar
sbb
arpl
jne
mov
lahf
neg
shll
jb
addr16
push
out
outsb
jns
mov
dec
cmpsl
fwait
clc
add
sbb
cltd
pop
xchg
lock
adc
andb
aas
or
in
jno
leave
adc
lahf
das
fs
or
out
js
mov
lret
decb
lods
out
and
test
mov
lods
pop
xchg
stos
sbb
push
bound
shrl
push
mov
orb
pop
mov
cmpsl
stc
dec
mull
stos
xchg
aad
divb
pop
xor
icebp
lea
fneni(8087
push
lret
std
mov
xor
or
cwtl
cld
scas
psadbw
ret
shr
call
or
push
sbb
pop
dec
push
jbe
ret
jnp
mov
xor
mov
repz
fcomps
popa
xchg
iret
cmpsb
xlat
mov
insb
adc
stos
popa
xor
imul
cmp
rorb
cmp
idiv
stc
push
pop
clc
imul
inc
dec
cmpsb
lcall
jg
sub
lret
clc
push
sbb
inc
stos
cmp
aam
nop
in
imul
jp
jo
push
xor
popf
adc
mov
gs
lcall
mov
lods
xlat
es
int
mov
mov
fnstenv
dec
xchg
js
pop
or
sbb
xor
leave
in
mov
lds
mov
sbb
outsl
and
pop
push
xchg
arpl
sub
cmp
rcr
scas
pop
cli
outsl
and
repnz
int3
cwtl
mov
into
or
sub
insl
filds
shrb
or
testl
je
sub
dec
addr16
nop
mov
cli
sbb
add
mov
sbb
inc
fwait
sahf
adc
add
daa
xor
sub
push
push
sbb
jl
ja
dec
cs
rorl
test
mov
pop
mov
lcall
push
icebp
scas
stos
mov
cmp
jmp
ficoml
xchg
xor
lds
mov
or
xchg
repnz
cmp
inc
mov
xor
divb
hlt
test
outsb
jp
mov
pop
push
call
cmp
dec
mov
adc
pop
mov
or
test
shl
add
push
test
push
push
sub
movsl
sub
mov
out
insb
mov
sbb
mov
movsb
cmp
jge
pop
lods
jbe
inc
xchg
sti
sbb
mov
xchg
fnstsw
pop
testb
and
es
insl
pop
mov
filds
mov
lock
rcll
xchg
es
lea
push
out
out
ret
femms
xchg
xor
mov
xor
mov
std
xor
iret
cmp
aad
adc
std
pop
pushl
adc
cmp
or
push
addr16
dec
xchg
es
fcomps
ja
or
push
bound
sub
mov
xchg
sbb
and
orl
imul
add
add
adc
mov
dec
push
mov
shlb
lcall
negb
jl
and
int
icebp
pop
adc
mov
xlat
addl
iret
xchg
decl
stc
adc
lret
sbb
pop
mov
mov
xchg
cmp
insb
cmc
mov
jmp
sub
xchg
xchg
mov
or
lock
sbb
out
or
or
xchg
adc
sbb
mov
jb
aam
repnz
jge
mov
add
shll
orb
js
sbb
insl
test
cmpsl
xor
lret
xchg
out
dec
lock
cwtl
and
cmpsb
outsl
loopne
insb
add
jp
xlat
divb
cld
push
dec
insb
arpl
mov
sub
je
movlps
enter
sub
dec
sarl
lahf
jns
xor
insb
rclb
in
pop
xchg
jge
fs
cmp
stc
xchg
fistl
fs
sti
xor
inc
dec
lahf
aam
push
add
ljmp
mov
adc
or
xchg
psadbw
jle
jb
adc
outsb
xor
push
faddp
loopne
dec
inc
stc
pop
sbb
lret
mov
ljmp
into
jb
fmul
fdivrs
cmp
push
cmpsb
push
mov
mov
pop
sbb
cld
pop
mov
into
lret
cld
pusha
je
mov
mov
bound
test
pop
in
out
xchg
dec
sbbl
adc
push
adc
jae
xor
or
adc
add
loop
cmp
push
jmp
add
cmp
jle
sti
rcll
loopne
inc
loope
add
xor
sbb
subb
or
fildl
xchg
in
sahf
imul
movsl
lea
or
ljmp
push
les
cs
mov
rorl
pop
into
add
dec
cmc
inc
mov
mov
je
xchg
cmpsl
jecxz
add
push
inc
mov
fcoms
adc
leave
lock
stos
xor
insb
fistpll
pop
xchg
call
out
adc
stc
movsl
call
add
adc
push
sbb
fisttpl
push
xor
dec
and
xor
mov
push
mov
mov
dec
xchg
in
inc
mov
mov
pop
add
jo
and
or
push
dec
jecxz
xor
mov
cltd
sub
enter
mov
push
testl
sub
mov
rcl
mov
mov
mov
jmp
ret
dec
and
push
mov
cmp
xor
xorb
xor
mov
jmp
sub
or
sub
pop
ss
jle
add
xchg
adc
pop
push
push
filds
rcll
jb
and
bound
cmpsb
adc
pop
lretw
cmp
and
ds
dec
jb
mov
test
or
int
mov
loopne
negl
sub
jmp
mov
xor
pop
pop
movsl
cmp
sbb
subw
gs
in
sub
sub
inc
mov
sbb
jle
jg
lahf
ret
push
in
jno
inc
repnz
pop
in
fdivr
push
popa
bound
cli
mov
fmul
and
roll
es
ficoms
pop
or
mov
into
xor
sbb
out
mov
xchg
pop
dec
loope
mov
xor
push
add
push
iret
sbb
inc
mov
lods
scas
incl
scas
xchg
sbb
daa
shlb
sbb
mov
fcoms
push
cmp
outsb
mov
push
mov
xchg
sub
mov
lock
inc
fisttpl
fsubrl
mov
ret
test
push
insb
test
and
inc
out
outsb
lods
pop
adc
adc
dec
out
loop
cmpl
nop
loopne
je
mov
leave
enter
fnstenv
sbb
into
mov
adc
mov
dec
dec
insb
mov
inc
pop
cmp
mov
and
xorb
aad
pusha
xor
std
xchg
into
and
aad
pop
inc
xchg
xor
fisttps
outsb
xchg
fldt
xor
sub
leavew
xchg
testb
scas
scas
test
dec
xor
mov
femms
inc
inc
nop
stos
std
pusha
arpl
mov
les
fwait
inc
or
add
stos
lret
andb
sbb
fnstenv
or
int
out
out
fildll
jp
mov
loopne
lret
movsb
mov
fadds
and
pop
inc
pop
push
push
inc
jg
cwtl
subl
pusha
mov
imul
push
xchg
jb
xchg
cs
ret
push
or
xchg
sbb
or
outsl
xor
imul
jo
xor
adc
into
jle
stc
outsb
int
mov
adc
pop
into
inc
outsb
push
mov
fimull
mov
fwait
dec
pop
dec
jg
imul
cmp
or
je
push
or
push
xor
sbb
cmp
pop
jbe
push
inc
add
loopne
outsb
mov
push
xchg
cltd
test
jbe
jge
lods
fdivrp
push
out
cs
fmul
inc
addr16
push
icebp
jae
ljmp
in
popa
rorb
cmp
lds
push
fdivs
mov
sbbl
pop
aam
das
sub
test
scas
imul
mov
push
sarl
ja
cmp
and
mov
jae
shlb
cmp
ss
mov
imul
add
push
mov
mov
add
xchg
pushf
aam
mov
iret
adc
iret
repnz
enter
sbb
pop
cmp
int
fwait
add
frstor
subb
cmp
jb
nop
add
adc
or
out
push
lods
jnp
sub
jl
cmpsl
sbb
imul
and
sub
es
daa
push
ljmp
pop
rcr
sbb
or
add
test
sbb
cmpsb
push
aaa
xor
iret
mov
mov
jo
pop
aam
dec
mov
lods
movsb
adc
pusha
jmp
sbb
lret
push
jae
adc
sbb
add
push
pop
mov
jecxz
rcrb
sub
lds
adc
dec
push
movsb
pop
add
popf
inc
pop
sbb
sub
pop
or
rep
popf
or
cltd
rcrl
cmp
dec
rorb
fsubl
push
dec
push
jae
je
aad
mov
ret
jo
shll
enter
lods
jnp
test
cmp
bswap
mov
jmp
push
lock
pop
inc
jge
ja
and
sbb
xchg
aam
push
sbb
pop
rorl
dec
pop
jg
out
hlt
xchg
stos
negl
cmpsb
mov
dec
push
mov
outsl
adc
adc
xor
call
or
aas
dec
in
lods
push
lcall
shl
xchg
gs
loopne
add
xchg
aaa
test
mov
ljmp
repz
out
mov
jmp
mov
dec
das
in
fcoml
adc
out
int3
mov
lods
aaa
mov
pop
or
xchg
inc
mov
stos
inc
mov
outsb
mov
mov
pop
icebp
cmpsb
push
cltd
lahf
and
fdivs
bound
sbb
int3
mov
ljmp
aam
dec
scas
hlt
lcall
add
in
mov
mov
negl
pop
adc
mov
or
aad
scas
lcall
cmp
imul
or
xor
test
xor
mov
in
mov
mov
push
stc
inc
std
inc
xchg
sbb
fsub
pop
and
adc
mov
stos
lds
inc
out
fstl
arpl
hlt
sbb
sahf
pop
mov
xchg
icebp
mov
insb
sarb
sbbb
mov
sbb
pop
dec
mov
cs
das
xchg
ret
ss
in
in
lcall
les
add
pop
mov
sbb
into
cmpsb
mov
dec
mov
fscale
insb
lcall
mov
and
cwtl
cmp
mov
pop
and
loop,pn
jnp
fbstp
or
xor
pop
inc
lods
pushf
movsl
test
shlb
jae
bound
jnp
mov
push
pop
mov
push
pop
mov
ljmp
mov
or
in
mov
mov
shrl
lea
ja
and
pop
fiaddl
add
mov
lret
or
hlt
push
lahf
jns
out
inc
je
test
lock
and
shrl
pop
lea
adcb
push
dec
outsl
jl
dec
and
dec
lods
jnp
adc
and
adc
daa
inc
xchg
ljmp
adc
mov
sbb
imul
repz
push
imulb
add
dec
and
cmp
js
mov
dec
rorb
pop
adc
cmp
xchg
addr16
dec
and
imul
f2xm1
out
repnz
popa
inc
outsl
cmc
aam
xor
mov
dec
or
mov
sbb
nopl
add
mov
lret
js
xchg
jne
es
mov
cmpsb
pop
test
out
int
ja
fsubrl
jne
cs
or
dec
mov
xor
adc
call
int
adc
shlb
lea
pop
adc
or
imul
pushw
sub
xchg
insb
ret
iret
ret
hlt
int
xchg
cmpsb
jb
pop
int3
xchg
lret
stc
pop
push
push
das
jmp
das
arpl
mov
mov
daa
fists
xlat
cmp
popa
pop
push
jo
sbb
cmpsb
jno
pusha
hlt
mov
cmp
in
leave
loop
push
jb
fisubs
filds
fwait
outsl
in
pushf
xchg
sahf
cwtl
jmp
mov
xchg
pop
outsb
shrl
push
sbb
in
xchg
adc
ficompl
insl
in
test
mov
mov
outsl
xchg
cmp
mov
xlat
lds
in
xor
cwtl
dec
imul
sti
inc
das
xchg
out
mov
push
fsubrs
push
adc
fisttpll
pop
outsl
adc
pushf
jl
fistpll
push
in
cmp
or
dec
add
leave
cs
outsl
mov
mov
inc
ror
jae
imul
je
jmp
cmpl
outsl
add
jbe
adc
mov
shrl
push
xor
jb
inc
jmp
imul
out
adc
in
xchg
lea
in
test
push
mov
mov
sub
insl
add
cmp
mov
testb
add
lret
mov
nop
mov
fcmovnb
pushf
aad
cltd
cmp
cmc
or
in
add
fwait
hlt
mov
pop
addl
sbb
pop
in
fstpl
sub
nopl
adc
jg
dec
mov
mov
xor
and
lods
cmpsb
test
and
pop
fs
stc
lret
insb
outsb
adc
jae
mov
andb
push
jl
movsl
nop
imul
jne
rorb
add
loop
ret
call
mov
add
stos
rolb
jl
repnz
es
outsl
test
inc
insl
loope
cltd
out
mov
jp
movsl
pop
leave
jg
out
inc
dec
mov
push
sbb
mov
pop
das
add
pop
cli
cmp
adc
sub
jmp
inc
mov
add
lcall
pop
push
jecxz
jne
xor
test
push
mov
inc
xchg
int
filds
push
out
movsl
xchg
and
sub
push
xor
cmpb
adc
jns
sarb
xor
loop
dec
and
pop
xchg
repz
adc
es
jmp
insl
and
xor
cmp
aas
cmpb
stos
xor
clc
dec
ret
jl
mov
sbb
pop
mov
insb
fwait
add
sbb
aaa
dec
fwait
sbb
push
je
adc
and
enter
inc
pop
pop
add
xchg
imul
sub
pushf
xlat
jns
inc
push
jne
nop
pop
ljmp
jnp
add
adcl
pop
lahf
mov
cltd
insb
fistl
add
enter
ss
fidivrs
repz
add
jne
push
in
jbe
call
or
jo
sbb
js
xchg
notl
fsubrs
int
ret
test
lret
lea
icebp
push
jmp
outsb
rol
dec
push
adc
mov
iret
mov
inc
xchg
mov
jmp
lods
xchg
insl
inc
xchg
cmp
pop
in
or
sarl
in
cmp
movsb
inc
lcall
fisttps
xchg
hlt
ljmp
mov
out
movsl
rcr
cs
stos
dec
std
adc
test
shl
cmpsb
mov
outsl
push
cmp
pop
daa
mov
push
mov
rcrl
or
int
into
mov
dec
mov
xchg
je
scas
mov
and
dec
fistps
ret
push
sub
cmp
sub
jg
inc
out
loopne
flds
push
incl
cltd
push
mov
insb
and
shrb
jmp
ljmp
aaa
enter
leave
imul
mov
in
nop
ds
inc
jp
out
ficoms
hlt
pusha
aas
dec
push
jb
aam
imul
je,pn
jp
dec
gs
mov
mov
popf
testb
insb
jns
jae
and
addr16
xchg
cmp
mov
mov
cmp
cmpsl
js
in
ret
scas
out
mov
lcall
into
push
lahf
inc
push
pushf
insl
mov
pop
xor
dec
mov
sub
adc
or
xor
adc
mov
repz
cmp
call
sub
push
jne
mov
sub
push
adc
jg
and
or
pop
xlat
push
shll
dec
mov
dec
lods
insl
inc
mov
mov
in
jnp
ffreep
pop
add
xchg
mov
inc
aam
mov
sub
fucomp
sbb
cmp
mov
push
cmp
in
inc
add
mov
lcall
aaa
out
imul
push
xchg
and
out
fstps
rolb
jo
lods
or
shrl
mov
pop
add
and
cmp
adcb
stc
and
rcrl
inc
jb
call
adc
lods
ss
lret
xor
jb
loope
sbb
out
shlb
adc
inc
mov
pop
or
ljmp
test
xchg
cmp
push
xchg
insb
push
xor
sbb
jg
jns
int3
mov
jbe
call
mov
ror
in
sbb
and
hlt
xchg
jmp
adc
ret
dec
jp
jmp
sub
dec
lahf
imul
lahf
inc
outsb
push
adc
icebp
push
mov
mov
mov
in
ds
jae
pop
xor
mov
jp
xchg
jg
jo
xchg
ret
sub
iret
push
adc
sbb
cmp
das
frstpm(287
add
sbb
mov
movsl
dec
and
inc
add
jl
or
iret
insb
fs
or
and
mov
shll
inc
push
pop
mov
rolb
mov
adc
popa
bound
lods
out
jns
movsl
lods
jge
adc
mov
push
push
jge
sub
push
movsb
xor
fisttps
pop
cmpsb
in
mov
clc
mov
ja
stos
fcoms
xchg
les
neg
mov
sub
fiadds
sti
xor
xor
dec
rcll
shlb
xchg
push
mov
or
shrl
sub
cmp
and
lock
add
inc
inc
rorb
ja
push
in
pop
xchg
sbb
std
aam
mov
je
xchg
in
mov
mov
push
sub
xor
fidivrl
lret
int
lea
jp
add
fsub
or
ret
fiadds
std
sub
sbb
loope
sub
out
ret
push
jns
mov
jne
das
jbe
es
outsl
inc
mov
sub
in
data16
push
adc
and
insl
jle
repz
cs
jmp
xchg
jge
dec
clc
insl
sbb
loopne
loop
push
sahf
cmp
and
push
mov
shr
mov
lret
mov
ja
sbb
out
and
sub
push
adc
inc
shll
sti
nop
pop
push
pop
out
int3
sbb
clc
dec
xchg
pop
test
cmpsb
icebp
mov
loop
lds
popf
cli
or
sub
and
test
aas
and
hlt
push
sbb
iret
sahf
push
and
push
sub
xor
bnd
xchg
sarl
and
stos
jbe
outsb
sub
gs
int
cmpsl
pop
fdivrs
or
loope
add
jmp
cmp
jns
addr16
add
mov
mov
mov
mov
cmpxchg
push
adc
pop
cmp
fildll
xchg
test
stos
in
cmp
outsb
mov
dec
sbb
lds
mov
inc
pusha
fisubrs
jno
mov
or
shl
push
dec
dec
push
stos
sub
sbb
cwtl
mov
push
inc
mov
iret
es
dec
mov
dec
mov
cmpsl
pop
cmp
outsl
rcr
jle
sbb
cmp
mov
cli
movsl
fwait
mov
lcall
call
mov
out
push
fimull
cmpb
lret
lcall
mov
xor
es
loopne
movb
jnp
mov
jl
dec
lret
ja
popf
sub
jge
jno
cmp
mov
icebp
das
test
push
mov
mov
cmpsl
lret
enter
xlat
jne
cmp
add
pop
push
mov
je
adc
inc
adc
sbb
fdivrl
sarl
pop
jne,pt
sub
mov
popa
sub
loopne
mov
inc
and
push
out
mov
or
aad
or
mov
in
and
jmp
inc
sahf
adc
xlat
xchg
sbb
sti
mov
scas
cmp
testb
and
lods
inc
test
stos
jle
fdivl
movb
movsb
jns
dec
orb
adc
sbb
stc
movsb
movsb
movsl
sti
bound
fwait
sbb
scas
jb
and
push
push
push
addr16
js
or
rclb
jmp
iret
push
or
repnz
adc
imul
fstps
push
hlt
push
push
lcall
add
mov
negl
cmp
ss
xchg
push
lcall
or
aad
push
cwtl
outsl
cld
test
aam
in
inc
in
cmp
cli
outsb
pop
sub
or
mov
xchg
es
enter
hlt
or
mov
jnp
das
inc
repz
test
test
dec
push
jg
cmc
mov
hlt
lds
mov
out
rcl
and
fwait
xchg
push
data16
push
outsl
je
into
std
pop
and
ret
cmp
and
out
inc
mov
jb
pop
test
insb
popf
inc
in
lods
out
cs
jp
call
sub
arpl
loopne
call
outsl
ret
loop
mov
jle
sahf
push
mov
cmp
fwait
mov
xor
clc
fnstenv
xor
icebp
mov
and
jmp
pop
cli
jne
jmp
fnsave
inc
cmp
sbb
pop
out
mov
jmp
cmp
ljmp
jg
mov
mov
pop
mov
js
push
orl
fcomi
stos
ret
movsb
jbe
cld
test
shlb
popa
sub
lcall
stc
dec
leave
in
cli
cmp
arpl
jle
gs
sbb
jo
cmp
push
cs
cs
in
enter
push
gs
mov
or
fmull
jno
bound
stos
sub
movsb
mov
outsb
leave
xchg
ljmp
fisubrs
push
pop
test
subb
sub
sbb
scas
mov
inc
jg
mov
jle
call
push
popf
testb
imul
aam
lret
mov
mov
pop
int
fldcw
inc
lahf
sbb
mov
mov
inc
pop
sub
mov
cmp
pop
lods
mov
pop
fistps
dec
jns
repz
xor
cld
aam
sbb
scas
or
add
xchg
push
xlat
into
xchg
loope
mov
aaa
lods
xchg
xor
cmpl
out
cmpsl
cwtl
jle
cmp
pushf
or
ss
push
aad
loopne
aaa
sub
loopne
in
pop
xchg
test
jmp
outsl
ret
xor
mov
enter
es
jo
push
dec
ret
in
ficomps
stc
nop
jb
sbb
pop
test
dec
int3
shr
sbb
xchg
xor
sbb
enter
dec
mov
lods
loopne
sbb
push
sahf
pushf
mov
outsb
je
cmpb
push
fmull
push
mov
test
cld
imul
sbb
rolb
or
repnz
into
adc
and
test
sub
push
jp
mov
call
in
and
lret
xchg
fcmovne
int
or
ficompl
add
add
mov
cwtl
pop
jl
push
stos
push
popf
xchg
dec
sub
jg
js
clc
lods
pop
rcrl
add
lods
xchg
out
aam
adc
rcrl
icebp
pop
mov
jns
pop
scas
push
pushf
shrl
call
shrl
push
xchg
in
or
loope
xchg
mov
sbb
dec
pop
xchg
lods
pop
sbb
xchg
lea
sub
and
adc
mov
lret
push
pop
pop
lods
mov
dec
ds
sbb
fs
push
add
pop
inc
sbb
sub
mov
jb
inc
sbb
js
xchg
test
out
ret
pop
jnp
outsl
cmp
xor
mov
dec
popa
fucom
daa
jns
or
sbb
into
pop
lret
mov
repz
out
xchg
xchg
mov
insb
cmpsl
cld
jae
sbb
in
xchg
xchg
nop
mov
fdivr
xlat
fstps
stc
xlat
jo
lea
data16
sbb
movsl
pop
xor
push
inc
dec
jle
dec
pop
jns
xchg
pop
or
inc
not
fnstenv
cmpsl
xorl
sub
cmpsb
fildll
mov
notb
repz
push
xor
xor
cmp
repz
and
in
cmpsb
and
imul
lock
mov
mov
xchg
test
mulb
sahf
js
cwtl
xor
jnp
fwait
xchg
icebp
sahf
out
leave
push
movzwl
xchg
xor
adc
sti
mov
das
jbe
insb
xor
mov
xchg
cwtl
push
xlat
cmpsb
lahf
call
xchg
sub
subb
icebp
and
and
fsubrl
pop
dec
stc
adc
push
and
add
pop
mov
test
mov
ja
or
jb
scas
pop
lods
mov
stos
cltd
stos
out
pushf
jb
xchg
push
and
cmpb
nop
and
pop
in
push
in
mov
sub
movsb
mov
int3
mov
movsb
sub
xchg
in
pop
xchg
outsb
push
xor
pop
cmp
mov
adc
fwait
or
add
sub
add
filds
scas
xchg
xchg
or
outsl
sbb
sbbl
mov
jnp
js
mov
pop
loope
std
dec
jle
mov
xor
aas
cmp
ret
popf
cmp
sub
add
lock
enter
sbb
clc
jo
xor
dec
fsubrs
mov
and
in
pop
aad
dec
jb
mov
inc
arpl
or
xchg
sub
sbb
cli
dec
push
test
jb
lea
pop
rclb
lock
repnz
and
lret
gs
stos
lods
sahf
pop
stos
and
and
mov
jge
loope
fnstsw
adc
jno
sub
loop
lcall
mov
stos
inc
dec
mov
int3
mov
outsb
scas
popa
xor
adc
fisubrl
sti
xor
mov
notl
mov
inc
push
jl
cld
loop
push
sub
mov
fwait
insl
es
or
es
mov
add
dec
xchg
fs
sbb
inc
out
fisttpll
or
out
sbb
sbb
and
jmp
and
add
mov
pop
addl
push
mov
es
adc
or
mov
adc
jbe
dec
cs
mov
aaa
call
sub
and
gs
adc
lret
outsb
movsl
dec
mov
add
fdivr
inc
mov
fsts
mov
adcb
push
pushf
xchg
dec
or
int3
xor
fldt
cltd
sub
dec
xlat
jmp
xor
inc
dec
and
mov
roll
jmp
lock
add
pop
add
pop
xor
xor
sub
int
fistpl
cmp
push
lods
push
mov
or
in
das
cmp
xchg
out
lods
stc
insb
int
adc
subl
mov
lods
mov
stos
das
addr16
daa
add
push
test
lret
outsb
and
cltd
paddw
shrl
loope
mov
jmp
scas
and
adc
xor
decl
stos
mov
sub
mov
into
dec
cs
mov
stos
stos
stos
inc
xchg
sub
push
push
gs
and
push
adc
in
cmp
sti
jnp
fdivrp
rcll
hlt
dec
mov
or
cmp
dec
leave
dec
fcompl
push
in
pop
push
push
sahf
mov
hlt
xor
xchg
ret
aad
leave
cmpsb
int
jns
jecxz
sub
lds
movsb
push
dec
cltd
jne
mov
loope
imul
add
jle
shll
xchg
push
icebp
mov
enter
stos
repnz
adc
addl
pop
jle
popf
cmp
out
xor
add
outsl
rcrb
jbe
mov
jmp
cmp
addr16
out
int
mov
sub
add
shlb
cltd
pop
jnp
xchg
sub
ret
shll
in
sub
inc
fptan
sahf
clc
jg
scas
inc
mov
push
pop
sub
data16
clc
fbstp
adc
jmp
jnp
leave
mov
ja
fs
mov
outsb
dec
inc
iret
popa
icebp
mov
dec
cmpsb
stos
icebp
es
int
lock
cmpl
mov
enter
repz
jo
add
push
adc
xor
dec
push
data16
sar
inc
inc
add
mov
fwait
mov
mov
push
jno
leave
xlat
out
addr16
fs
lods
pop
jge
jecxz
xchg
or
insl
and
dec
icebp
dec
mov
das
dec
push
test
mov
mov
mov
popa
frstor
sbb
in
jmp
cmp
hlt
in
jmp
imul
add
stos
stos
jnp
repnz
xchg
sbb
loop
jge
and
cmp
inc
mov
add
xor
cmp
fldcw
xor
inc
imul
jge
cmc
and
movsl
cltd
mov
leave
or
and
imul
or
inc
push
cmpsb
and
mov
push
fcoml
cmp
mov
gs
lret
lahf
inc
inc
xor
jmp
test
arpl
mov
ss
insb
std
outsl
add
push
orps
xor
lahf
ss
pop
mov
sbb
das
sbb
jno
iret
sti
push
push
lock
ret
addr16
pop
cmp
xor
mov
dec
icebp
lods
push
inc
sarb
inc
fistps
push
ss
pop
jo
ror
and
dec
jl
xor
or
js
jo
xchg
decb
test
or
arpl
xchg
loop
aaa
sbbl
add
sldt
popa
cli
adc
loope
jo
lds
pusha
pop
sub
mov
sahf
mov
and
fistpll
cmp
fwait
xlat
movl
mov
add
jno
lods
xchg
xor
xchg
lahf
adc
aam
lods
lods
mov
xlat
and
jo
push
xchg
push
xchg
xor
or
mov
mov
je
aam
shll
push
imul
dec
inc
xchg
xchg
filds
and
mov
lock
cltd
add
cmp
xchg
out
sti
call
movsb
js
and
repnz
jmp
hlt
adc
stos
clc
cmp
mov
mov
roll
scas
in
sub
xor
les
adc
lods
or
or
pushf
cmp
adc
pop
scas
jns
in
or
loop
cmp
jmp
fcomip
dec
out
xchg
stos
xchg
repnz
sub
and
adc
daa
jmp
cwtl
jl
in
adc
lret
rcll
rcll
outsl
fisubrl
xchg
push
movsb
repz
cmp
or
cs
jge
ret
in
jns
jns
imul
pop
popf
clc
xor
ret
xor
cltd
sbb
dec
jg
inc
aaa
and
dec
cwtl
push
ja
in
push
add
xchg
cmpl
les
mov
inc
out
and
and
and
and
pop
and
ret
cmp
sahf
and
movsl
adc
out
insl
mov
push
adc
inc
pop
inc
test
and
stos
iret
xchg
push
aam
mov
test
mov
int3
out
add
mov
xlat
inc
or
xchg
or
in
loop
xchg
stc
adc
add
addr16
cmpsb
xor
pushf
sub
stos
imul
mov
xchg
or
jle
mov
ret
jmp
jl
idivl
insl
js
fsubs
cmp
popf
xchg
adc
and
ficoms
int
bound
dec
cmpl
fdivrl
mov
fstpl
repnz
push
loop
fadds
xchg
jle
push
aad
mov
mov
cmpl
sub
cltd
push
or
mov
pop
or
outsl
cs
mov
addr16
pop
insb
and
popl
push
out
test
fs
ret
sbb
or
sub
outsb
mov
sbb
lahf
inc
jmp
pop
add
loop
iret
std
addl
bound
jno
lods
and
adc
int3
mul
ffree
push
sahf
cmpsl
inc
adc
imul
jb
imul
cs
inc
cmpsl
hlt
pusha
sub
push
rcl
xchg
mov
push
les
inc
mov
lret
lods
js
leave
xchg
jno
and
lea
jo
jnp
mov
adcb
jnp
adc
outsb
xor
jne
cmpsl
stos
int
loope
adc
ret
jnp
pusha
popf
cld
cld
jo
inc
push
push
add
mov
or
hlt
pop
ret
add
xor
ss
xor
or
jle
stc
roll
cwtl
mov
stc
ficompl
ljmp
into
dec
repz
push
inc
adc
push
dec
push
push
pop
mov
mov
outsl
js
or
cwtl
fsubs
add
stos
push
js
mov
pop
dec
ret
out
inc
sub
mov
in
dec
sbb
or
push
les
sbb
in
fcmovb
adc
stos
inc
push
call
imul
mov
js
cli
icebp
jmp
adc
inc
pop
vpsllq
clc
mov
mov
or
aaa
test
or
fsubrs
repnz
int
je
inc
mov
add
and
lret
jg
test
and
mov
mov
sbb
loopne
repz
fdivrl
xor
int
sub
nop
out
dec
xchg
jp
or
roll
lret
and
adc
stos
arpl
jae
xchg
mov
pop
add
jbe
lea
frstor
jnp
dec
out
sbb
psrld
int
stos
and
and
in
sbb
dec
xor
sar
pop
push
mov
pop
add
xor
rorb
inc
int3
lcall
push
jge
fidivrl
lock
popa
icebp
xchg
iret
xchg
xchg
xchg
das
daa
fsts
mov
xchg
sbb
cld
mov
push
and
adc
test
push
mov
outsl
push
push
mov
xchg
loopne
dec
push
leave
jl
adc
push
popf
xchg
mov
xchg
out
out
xor
mov
pusha
out
cmp
mov
ljmp
js
ljmp
inc
movsl
loopne
aas
and
jle
xchg
notl
inc
in
and
iret
xchg
mov
bound
add
into
and
in
sbb
jg
aas
lahf
xchg
std
lret
mov
add
mov
popf
imul
call
dec
out
cs
dec
pop
out
pop
imul
push
lds
ss
inc
push
pop
push
and
icebp
jl
fdivrl
cmp
xchg
inc
lock
push
cmpsb
jmp
das
xchg
mov
pop
cmp
xchg
mov
mov
scas
sbb
and
shlb
xchg
fucom
xchg
mov
lret
jb
int3
pop
das
sub
repnz
cmc
pop
outsb
xor
dec
mov
bound
xchg
fldt
pop
or
push
sub
fsubrs
testl
outsb
xor
outsl
icebp
push
dec
fwait
xor
hlt
rolb
fldenv
cmp
outsb
pop
fistl
insl
lahf
and
mov
hlt
or
imul
and
pop
sbb
cmp
pushf
sub
or
mov
inc
mov
mulb
jmp
scas
sbb
sbb
in
xor
jge
pop
jne
cmp
pop
shlb
pop
sbb
sbb
add
fsubrs
outsb
mov
imul
xor
pop
sbb
adc
pop
jns
jl
jnp
xchg
stos
movb
mov
dec
and
popa
jno
mov
dec
aaa
nop
jnp
push
push
mov
or
sbb
or
cmp
jecxz
hlt
fnstcw
dec
xchg
add
nop
jg
adc
movsl
fwait
psllq
aam
aas
pop
loope
sarb
xor
ja
clc
int
mov
sub
scas
roll
inc
cltd
loop
jbe
sbb
mov
cmpsb
cltd
sbb
mov
aaa
rclb
sub
push
inc
lcall
push
or
stos
lds
cmp
ret
pop
xchg
push
dec
int3
dec
pop
mov
rclb
jnp
sbb
and
loopne
aaa
dec
dec
out
movsb
dec
sub
inc
and
dec
inc
enter
mov
inc
nop
xlat
gs
cltd
jns
pop
ret
xor
imul
jge
jbe
je
jge
fisubrs
test
jns
arpl
mulb
nop
jo
int
hlt
pop
cmpsb
outsl
sbb
aad
push
push
fmul
insb
sahf
inc
daa
je
mov
add
arpl
fiadds
pop
mov
arpl
je
fsubrl
mov
movsb
stos
ja
xchg
loop
test
sub
aas
dec
cs
xchg
pop
testb
in
mov
fnstenv
push
add
pop
popl
ja
or
into
xor
jbe
test
gs
iret
push
or
pop
add
ja
push
daa
mulb
inc
xchg
and
xchg
int3
in
inc
nop
dec
inc
mov
adc
insb
in
adc
lcall
dec
mov
xor
inc
jnp
jne
add
pop
cld
pop
mov
popa
lock
add
in
roll
mov
jnp
ss
aaa
pop
jge
jecxz
or
mov
sarl
mov
mov
mov
rep
and
pushf
lds
in
cmp
je
out
fwait
pop
cmp
and
shlb
sub
xor
push
ljmp
test
clc
mov
sbb
push
clc
push
ja
les
mov
pushf
push
sbb
fists
pop
pushf
mov
mov
mov
das
add
outsb
fnstcw
push
pop
and
or
aam
aaa
mov
jae
pop
jo
mov
xchg
negl
stos
es
stos
mov
cwtl
xchg
mov
in
adc
sub
cltd
xchg
mov
dec
mov
shll
in
inc
adc
sub
rolb
jnp
ret
stos
mov
js
inc
inc
push
mov
xrelease
or
leave
notl
sub
pop
decl
dec
mov
aas
pop
subb
adc
das
and
mov
lret
lods
cmpsl
aaa
or
mov
cmpsb
add
sbb
data16
shlb
icebp
sbb
pop
push
iret
pop
or
sbb
sbb
mov
rolb
shlb
repz
fmul
rorb
jns
xorl
jno
push
xchg
jmp
mov
bnd
mov
movsb
jnp
mov
cmp
push
and
or
lret
movl
cmp
lods
mov
push
mov
insl
jo
sbb
xchg
jb
push
daa
xchg
aaa
add
push
shll
push
sbb
ror
mov
add
repz
pop
repnz
outsb
jno
jl
and
fwait
aam
pop
in
int
popf
xchg
sbb
inc
test
xchg
inc
in
lods
popa
mov
insl
sbb
mov
sti
mov
jnp
call
fistpll
fs
dec
das
xchg
pushl
jg
add
inc
nop
leave
lds
sahf
push
cmp
mov
pushf
mov
fildl
jmp
sub
pop
mov
cli
or
adcl
mov
fucomi
sbb
sbb
jns
frstor
fldl
mov
mov
inc
mov
sbb
xorb
mov
xchg
lods
jg
pop
mov
mov
mov
xor
dec
lahf
pop
push
daa
shlb
shlb
nop
lea
push
mov
and
loopne
and
fisttps
lea
lods
mov
jle
popf
xor
dec
add
ja
leave
test
daa
jne
addr16
popf
jmp
or
mov
mov
push
mov
ljmp
test
out
push
push
cld
sub
ret
jl
rcrb
in
dec
rorb
sbb
push
movsb
push
dec
and
stos
dec
push
fnstcw
call
adc
shlb
popa
mov
inc
push
push
cwtl
or
aaa
mov
outsl
xchg
pop
cwtd
mov
mov
je
out
jne
lock
or
test
aam
jmp
dec
in
sub
or
xchg
addl
push
and
cmp
or
adc
loop
mov
sub
xchg
and
sbb
jnp
xor
std
jp
aas
xchg
ret
mov
and
fs
mov
jb
push
or
mov
xchg
test
lret
sub
inc
cmpsl
shrl
stos
ret
out
adc
jmp
sbb
jbe
and
les
jmp
xchg
fisubrs
ljmp
cmpsl
or
shrb
dec
movzbl
pushf
iret
fs
out
dec
cmp
mov
movb
push
sbb
in
push
jae
push
xchg
loope
repz
push
pop
sub
or
mov
xor
movsl
leave
sub
nop
mov
push
and
leave
mov
notl
fmuls
clc
sub
xor
stos
popa
sbb
testb
mov
pop
mov
push
orb
pop
or
sbb
pop
push
bound
pop
test
fistpll
sbb
sub
push
rcrl
leave
loope
xchg
fiadds
scas
pop
xor
out
mov
in
sti
faddl
sub
sbb
jmp
test
jns
into
mov
mov
or
cmp
jecxz
push
fucom
dec
movsl
enter
in
jge
ljmp
inc
adc
push
popf
jnp
fisttpll
mov
insb
adc
add
mov
ja
leave
je
mov
data16
popa
out
in
ja
jg
jge
cmp
and
out
cmp
jnp
or
fiadds
jge
stos
movsl
lret
divb
nop
movsl
xchg
aas
adc
add
lret
repz
ljmp
xchg
fs
test
movsb
jle
out
pop
test
or
aas
outsb
ja
push
mov
jge
pop
dec
lret
push
out
xchg
pop
mov
rol
xchg
cmc
mov
shrl
adc
popa
roll
jmp
pop
lds
adc
arpl
pop
aad
rcll
push
add
int
in
or
pop
je
jmp
lret
sbb
mov
cs
sahf
sbb
mov
in
adcl
dec
dec
inc
sub
je
int3
fs
int
insb
iret
in
std
push
outsb
add
aad
daa
dec
mov
pop
insl
insb
nop
stos
int
cmp
add
add
mov
jbe
and
sbb
loopne
xor
sbb
rep
inc
push
ss
dec
or
or
xchg
xor
aaa
adc
mov
push
cltd
fidivrs
mov
sub
outsl
lds
dec
or
pop
aas
pop
stos
xchg
neg
xor
addr16
ret
fwait
cs
in
mov
adc
push
negl
sub
xchg
push
mov
cmpsb
nop
inc
adc
fsubs
lea
inc
cmp
sbbb
pop
sbb
mov
mov
fidivs
xor
imul
in
cs
jns
out
ret
divl
shrb
pop
fmul
pop
pop
push
imul
out
cmp
iret
sub
out
xor
jl
mov
sub
push
xor
in
push
sub
cmp
imul
repnz
mov
ror
les
cmp
mov
jbe
sub
mov
cmc
jmp
rolb
xor
lods
shrb
push
cs
xor
or
xchg
lret
std
pop
or
ficoms
loopne
outsb
and
mov
inc
outsb
jecxz
jecxz
pop
lods
jae
mov
stos
push
addl
mov
cmpsl
fsubr
cltd
in
cli
repnz
out
orb
mov
pop
cmp
out
mov
mov
enter
cmpsb
sahf
stos
cli
incb
icebp
jp
sahf
cmp
hlt
arpl
lods
fbld
jmp
cmp
pop
or
add
push
das
xor
push
push
fiadds
jnp
adc
push
xchg
sub
test
mov
lahf
sub
insb
js
dec
adc
xor
fstpt
add
bound
add
rcl
sbb
andl
xor
mov
push
mov
sbb
inc
xor
xchg
jl
ffreep
push
cmp
cmp
pushf
mov
in
cmp
inc
jle
adc
add
test
scas
mov
mov
mov
mov
mov
mov
das
lcall
daa
inc
cmp
imul
sub
leave
leave
push
xor
xchg
pop
int
mov
add
test
xor
jmp
loopne
iret
sbb
mov
divb
stos
imul
incb
inc
movsl
out
jg
fbld
and
out
imul
faddl
sbb
in
xchg
jo
rorb
mov
cmpsl
cmp
sti
fimull
mov
xor
pop
cmpsl
in
pop
pop
push
lds
scas
das
test
jle
inc
lahf
fldenv
movsl
mov
in
adc
inc
mov
cmpsl
pop
and
or
mov
and
xchg
sub
xchg
cmp
iret
mov
shr
xchg
xchg
dec
xchg
mov
rcr
sbb
ror
div
enter
out
pop
mov
and
xchg
insb
pushf
dec
mov
push
pop
cmc
negb
mov
nop
push
pop
ljmp
mov
cs
lea
add
pop
mov
pop
jb
and
mov
loopne
mov
adc
jne
xor
mov
icebp
ds
addr16
in
ja
xchg
test
rcl
xchg
or
adc
in
rcll
repz
inc
mov
mov
stc
insb
push
or
jecxz
xchg
mov
ss
and
jnp
in
cwtl
and
dec
xchg
jle
mov
or
or
mov
fldln2
sbb
inc
sarb
push
cmpsb
outsb
jle
push
pop
scas
andl
xchg
push
and
stos
sbb
and
movb
xchg
pop
fsubs
xchg
mov
xchg
pop
xor
mov
in
loopne
aas
cmp
jge
jp
cltd
pop
mov
pushw
cmp
push
or
xor
or
cwtl
push
daa
dec
lcall
test
out
flds
pop
ss
and
addr16
loope
xlat
jecxz
mov
sbb
pop
push
sahf
jmp
repnz
jp
loop
int
ljmp
jns
dec
cmp
popa
ss
lods
loop
inc
fnstsw
or
jne
and
sub
ret
add
xchg
xor
sbbl
mov
jmp
push
jge
out
popa
mov
jl
jge
in
aad
mov
ljmp
stos
add
jbe
into
dec
div
pop
adc
mov
sbb
sub
movsb
mov
ret
and
in
stos
mov
dec
mov
cmp
inc
mov
pop
sbb
pop
ficomps
jge
repnz
in
push
outsl
fs
rcrl
sbb
loope
mov
cmp
pop
inc
mov
cmp
scas
cmpsl
ds
jl
aas
xchg
test
imul
xchg
in
inc
push
inc
pop
mov
sub
or
in
push
out
mov
icebp
aam
push
in
cmpsb
cmp
push
mov
lahf
data16
scas
cs
jo
imul
mov
xchg
mov
out
lea
lret
popa
test
out
cmc
push
out
pop
repz
orl
mov
mov
sbb
mov
mov
sub
and
cltd
jb
xchg
and
pop
mov
gs
jge
imul
lds
mov
std
pusha
push
faddl
and
ss
out
aaa
cmp
mov
dec
jb
mov
jo
adc
jmp
mov
xchg
mov
cmp
stos
faddl
es
testb
push
call
cltd
idiv
mov
inc
mov
pop
je
mov
in
sbb
cmp
push
pop
sti
lods
rclb
cld
jge
jns
out
into
push
sub
shrb
inc
je
mov
mov
sub
inc
cmp
fnstcw
ficoml
push
jge
lea
bound
jb
fnstenv
lret
leave
sbb
mov
addr16
call
outsl
add
mov
in
cmpsb
sbb
mov
mov
out
pop
add
sbb
aas
add
pop
hlt
jp
les
mov
mov
push
test
xor
mov
xor
dec
cvtpi2ps
in
cmpsl
push
loopne
insb
mov
insl
add
jl
jne
or
pop
xor
leave
push
mov
pop
pop
fcoms
jecxz
clc
dec
mov
gs
push
sbb
in
adc
and
gs
jecxz
push
push
hlt
into
lock
lahf
pop
pop
cmpsb
lret
insb
jbe
sub
fnsave
adc
out
leave
and
cmp
movsl
jecxz
push
insb
cwtl
pusha
lret
push
xlat
das
jmp
xlat
dec
mov
jb
dec
or
clc
mov
scas
sub
jno
and
ror
or
mov
push
mov
mov
outsl
aam
pop
lds
cmp
aas
xlat
outsl
adc
add
mov
jp
fs
dec
cmp
push
int3
push
hlt
lret
xor
pop
jo
jbe
movsb
push
push
cwtl
loop
test
xchg
jmp
test
sub
xchg
inc
out
out
mov
push
in
outsl
bt
push
jne
xchg
fsubp
es
or
xchg
mov
test
clc
mov
push
xor
pop
jmp
sub
jmp
clc
adc
push
pusha
push
pop
loop
add
mov
cwtl
add
aaa
push
sub
xor
rcrl
and
pop
pop
jecxz
imul
jns
es
push
sahf
cmpsb
fcmovnu
mov
push
test
mov
mov
sbb
loop
inc
sbb
pop
int
xchg
scas
jmp
lock
rcl
inc
shlb
call
jecxz
outsl
outsl
mov
jg
repnz
repz
sbb
lcall
mov
bnd
mov
fwait
clc
mov
pop
and
cwtl
int3
fldl2e
mov
cltd
fcmove
movsl
cmp
adc
xor
test
fisubrs
testb
rorl
hlt
or
ret
jp
bound
dec
add
jo
pop
pop
sahf
push
jb
lock
jp
pop
pop
movsb
sbb
mov
orb
imul
aad
shrb
daa
loope
mov
mov
sbb
mov
xchg
push
xor
add
pop
xchg
jg
xchg
push
imul
sahf
fnsave
movsb
inc
dec
mov
adc
dec
rclb
pop
jnp,pt
data16
fs
incb
adc
ret
es
sbb
in
inc
inc
arpl
jnp
int3
push
sub
ficoms
in
push
sarb
popf
mov
dec
into
clc
sbb
lret
ds
xchg
adc
and
out
je
pop
sbb
das
inc
and
push
fcoml
dec
rorb
arpl
mov
jmp
aad
mov
ljmp
rep
sbb
mov
js
fmuls
std
jg
jle
mov
mov
sar
mov
xchg
and
mov
sahf
push
cmp
pop
xchg
xchg
or
cmp
jb
or
xchg
enter
dec
jle
cli
dec
mov
sub
fwait
out
repnz
test
or
mov
fbstp
mov
pop
mov
test
cltd
in
pushf
les
addr16
push
ss
outsb
insl
in
sbb
push
sbb
cli
pop
clc
sbb
lret
leave
push
popa
pop
sbb
adc
xchg
adc
mov
pop
adc
std
xor
mov
fstp
outsb
filds
adc
outsl
and
pop
add
or
ljmp
cld
outsl
ror
ret
pushf
lahf
or
push
pop
xchg
fsubr
xor
fsubs
mov
mov
lcall
call
and
xchg
ret
ret
lret
or
test
adc
cmp
pushf
pop
adc
hlt
push
daa
mov
movl
inc
jmp
push
cld
nop
dec
dec
pusha
push
fwait
push
xchg
xchg
add
lret
inc
and
mov
rcrb
jo
cwtl
xchg
sub
sbb
pop
ja
cmp
rcl
jo
jp
inc
sub
pop
pushl
aad
xchg
pop
jle
addb
mov
mov
push
dec
add
mov
vpmacsdqh
nop
divb
hlt
cmp
cmp
sub
shll
lds
adc
out
sub
movsb
insb
stos
jae
mov
movsl
adc
jo
mov
bound
std
cmpsl
dec
push
push
xor
scas
jp
clc
jge
dec
mov
sbbb
std
xchg
sbb
xor
ret
inc
cmpsl
neg
out
mov
adc
loope
andb
or
inc
inc
lcall
dec
and
jnp
fistpll
idivl
jb
outsb
roll
pop
jb
xor
out
ss
push
lods
sub
dec
sbb
stos
aam
adc
iret
sbb
adc
or
cmp
and
sbb
lds
sbb
adc
test
cmp
ds
lock
mov
enter
gs
adc
inc
cmp
xor
adc
addr16
sub
push
sbb
xor
cltd
push
cs
fcomps
sbb
iret
cld
adc
icebp
popf
mov
fnstcw
imull
xchg
push
enter
jg
mov
clc
dec
out
inc
loopne
mov
sbb
mov
in
loopne
xchg
in
and
mov
mov
and
pop
sub
jmp
mov
pushf
les
mov
sahf
test
mov
orb
std
leave
sub
inc
sbb
xchg
sahf
mov
push
sub
mov
xchg
stc
paddq
mov
jle
movsl
popa
push
mov
and
andb
and
subl
pop
bound
jne
mov
movsb
enter
push
imul
sti
fildll
rcll
arpl
adc
lock
jl
mov
or
push
test
adc
or
and
out
inc
lea
iret
cld
inc
in
aaa
mov
adc
push
enter
jl
es
lock
mov
xor
inc
stos
xor
mov
out
test
ja
pushf
les
je
out
cmc
repz
daa
mov
cmp
or
iret
cmp
lahf
mov
sub
pop
aas
pop
inc
xor
xorl
add
aad
jb
mov
inc
sbb
inc
xchg
fs
push
les
push
pop
stc
xchg
lret
mov
or
insl
dec
hlt
test
pop
push
push
pop
push
mov
jo
mov
sbb
sub
xor
mov
inc
xchg
cmpl
sar
faddp
loop
jmp
int
and
loop
or
cwtl
es
das
out
adc
insb
sbb
dec
jecxz
lods
lock
mov
and
xlat
lods
xor
add
xchg
negl
test
mov
xchg
imul
mov
push
sbb
ja
and
lods
mov
mov
addr16
sub
push
jmp
icebp
jmp
add
loopne
mov
jb
cwtl
xchg
hlt
dec
std
fimuls
outsl
mov
sbb
mov
mov
inc
fs
outsb
xor
mov
adc
push
cmp
mov
xacquire
cltd
dec
aam
sbb
fwait
dec
sarb
loop
cwtl
or
pop
shl
aas
popf
lea
xchg
jmp
xor
push
jnp
sti
xchg
call
push
stos
mov
movsb
or
sub
jb
rcll
pop
or
daa
sub
into
xor
ljmp
add
adc
sbb
add
fldt
fildl
mov
pop
sub
push
xor
lahf
int3
inc
sub
rcrb
sbbb
pop
adc
inc
dec
pop
and
sbb
mov
sbb
aas
push
fldenv
mov
int3
cld
cwtl
pop
mov
cmp
jg
in
cmpsl
jge
nop
jbe
pop
iret
leave
xchg
dec
xor
mov
icebp
cmp
inc
in
sub
jo
push
pop
loopne
jbe
rorl
sbb
pop
jns
and
mov
jle
xchg
add
mov
gs
shrb
fmuls
mov
ret
xchg
dec
fidivl
cmp
loope
fildll
dec
js
andl
sub
xchg
adc
inc
in
push
adc
int3
dec
popf
fnstcw
pop
xchg
pushf
mov
ds
push
xchg
lods
jne
rorb
jae
sub
movsl
sbb
xchg
push
or
scas
sub
movsb
mov
cld
mov
int3
xor
xlat
les
cmp
cli
xchg
insl
sahf
gs
mov
mov
loopne
test
mov
xor
mov
ficoml
rcrb
or
adc
jae
sbb
push
push
dec
gs
in
jne
adc
fsubrs
jbe
xchg
addr16
add
inc
rorb
and
shll
nop
push
mov
adc
rorb
test
pop
xor
sti
cld
pop
pop
xchg
jae
enter
pushf
cmpsl
roll
mov
pop
pop
mov
xor
icebp
mov
les
cld
fsubrl
cmpsb
mov
fisubrs
inc
enter
into
fcoms
mov
sbb
and
mov
stc
inc
mov
mov
fnstenv
dec
cld
arpl
fcmovbe
mov
xor
inc
xchg
lret
movsl
bound
sub
call
cmpsl
xchg
int
mov
pop
pop
cmp
or
or
push
jbe
adc
mov
lods
jbe
xchg
sbb
icebp
fiaddl
in
jbe
pushf
inc
adcb
ljmp
push
ss
sbb
xor
xchg
mov
imul
jnp
fs
pop
sti
xchg
cmpsb
jmp
int
inc
pop
push
test
dec
sub
imul
aaa
imul
sbb
iret
sub
dec
push
and
xchg
fwait
mov
pop
je
add
pusha
jmp
mov
popf
insl
pushf
jne
dec
daa
stc
xchg
rcl
jno
xchg
das
rcll
mov
pushf
or
push
inc
lcall
fdivl
jae
jne
addl
fists
shlb
cmpsl
sysexit
adc
test
jbe
pop
scas
ret
lds
aas
mov
or
lret
fcomp
call
cmpsb
xchg
scas
xlat
pop
arpl
inc
cmp
fwait
inc
hlt
ficoml
mov
sbb
mov
jp
call
cmp
push
mull
cwtl
dec
imul
out
pusha
mov
pop
mov
inc
and
push
or
outsl
pop
bound
sub
jb
jp
mov
xchg
cs
gs
daa
out
scas
mov
push
mov
adcl
dec
les
jl
and
leave
test
hlt
subb
sub
cmpl
push
imul
loop
mov
mov
loop
outsw
pusha
aaa
push
jbe
cmp
lods
loope
js
int
pop
push
scas
push
mov
das
cwtl
fildl
inc
mov
insl
or
or
jecxz
imul
stos
pusha
daa
mov
mov
sbb
dec
mov
mov
xchg
arpl
divb
cmp
lret
in
jnp
inc
movsb
sbbb
or
dec
cmc
lock
mov
jo
clc
test
stos
loopne
inc
stc
lret
dec
mov
cmpsb
or
ret
or
push
ss
std
inc
pop
mov
ret
mov
mov
inc
loope
ljmp
mov
adc
mov
xor
xor
pop
dec
adc
mov
sbb
add
das
and
and
stc
jnp
xchg
xchg
outsb
sbbl
lcall
aaa
insb
gs
in
and
inc
in
mov
mov
insl
jne
outsb
mov
test
mov
call
and
fs
jb
push
roll
inc
inc
xchg
ss
and
pop
mov
enter
or
jle
pop
sbb
mov
sti
test
mov
jg
mov
pop
enter
jbe
sbb
loop
mov
loope
sahf
mov
inc
pop
mov
dec
sbb
ljmp
pushf
js
push
jne
mov
add
xlat
ds
out
in
push
cmpsb
fsubrl
movsl
inc
leave
xchg
sbb
xor
ljmp
jp
inc
es
sbb
push
xchg
dec
lea
cmp
repz
sahf
jae
jo
js
xchg
dec
adc
sbb
stos
aaa
adc
addr16
sbb
inc
scas
dec
and
outsl
mov
push
mov
stc
aas
push
not
dec
out
call
aam
mov
xor
cmc
mov
mov
daa
mov
sub
jae
pop
mov
mov
fcmovnb
into
repz
mov
lea
dec
jl
rcr
mov
push
filds
outsb
jp
cmpsb
dec
lods
imul
adc
ss
mov
imul
fsubl
movsb
jnp
adc
jp
adc
enter
sub
adc
cs
add
iret
cmp
and
mov
and
dec
jne
movsb
xlat
mov
cmc
fcmovb
out
xlat
add
adc
sbb
push
sub
stc
mov
cwtl
jae
adc
mov
cmpsl
hlt
xor
sahf
rorb
or
add
cld
dec
mov
rolb
push
popa
subl
arpl
icebp
inc
popa
ficompl
add
mov
mov
cld
std
jmp
mov
push
inc
arpl
dec
mov
int3
out
mov
lea
call
cmp
call
pusha
add
adc
push
adc
arpl
xlat
xor
js
sbb
scas
sahf
pusha
dec
inc
gs
inc
jge
jl
jnp
call
mov
pop
mov
mov
lret
inc
jmp
jp
mov
jp
mov
mov
popf
jl
push
inc
movsl
cmp
sarl
mov
push
mov
pop
pop
mov
pop
filds
arpl
test
loope
add
mov
add
jmp
outsb
pop
push
adc
xchg
push
cmp
nop
jbe
push
xor
into
pop
mov
scas
push
cld
dec
mov
cld
outsb
enter
sahf
cmp
push
in
sbb
nop
inc
and
adc
mov
sub
mov
fnstcw
fisttpll
cmp
out
outsl
pop
inc
jle
ret
pop
jle
hlt
xlat
sahf
aad
out
xchg
sbb
les
and
adc
pop
dec
iret
fdivs
sbb
or
and
popf
cmp
sub
ror
jmp
xchg
mov
push
mov
mov
xchg
fcmove
movsl
xchg
fsub
arpl
push
dec
aam
outsb
lret
pop
lea
test
mov
push
cmp
cwtl
and
pusha
xor
faddp
lock
pop
insb
mov
mov
test
or
or
jmp
bndstx
test
fimuls
adc
jmp
inc
or
xchg
scas
les
inc
aaa
jmp
mov
xchg
push
out
shlb
fistl
add
fnstsw
test
push
sub
xor
xchg
call
fs
inc
sbb
jecxz
adc
pop
repz
xor
lcall
pop
mov
test
cmpsb
push
sub
lret
push
jl
dec
aad
aam
inc
jb
mov
imul
sbb
xchg
mov
push
sbb
sub
push
sbb
loop
and
sub
jmp
push
imul
fsubs
adc
push
push
push
xchg
lea
pop
mov
sarl
push
or
adc
push
movsb
xchg
enter
cli
fstpl
push
push
and
fs
inc
jl
mov
jae
xor
jae
pop
stos
xor
popa
push
into
jbe
dec
xor
dec
push
mov
loop
cmp
gs
outsb
mov
xor
pop
orb
adc
movsb
pop
dec
std
rcr
jg
xchg
loop
loopne
mov
ret
mov
out
mov
sub
aas
cltd
push
inc
fcompl
and
or
shll
cmp
cmp
std
pusha
jg
cmp
ret
jmp
out
adc
pop
cs
ds
cmp
scas
mov
dec
or
mov
xor
add
test
daa
xchg
adc
outsb
jnp
aaa
inc
das
inc
repz
add
shl
adc
movsb
aaa
shlb
mov
scas
mov
je
sbb
adc
popf
cmpsb
mov
xchg
in
and
mov
dec
sbb
mov
je
jle
sbb
hlt
je
jg
and
sti
daa
mov
push
rol
push
jae
dec
lds
hlt
dec
mov
leave
push
mov
dec
fiaddl
in
dec
inc
jl
inc
cltd
cmp
lret
cmc
daa
or
sbb
ja
aaa
jbe
jl
push
adc
push
lods
mov
loopne
mov
les
js
ljmp
cli
dec
cmp
sbb
xor
roll
and
daa
hlt
dec
outsl
xlat
js
out
xchg
cwtl
cltd
push
dec
sbb
fsubrl
or
insb
pop
pusha
popl
lods
push
out
lea
xor
in
lods
xor
push
dec
xchg
sbb
adc
or
and
fsubp
sti
dec
mov
cltd
sahf
pop
pushf
ja
inc
fwait
fs
lods
mov
les
jae
test
pop
daa
fbld
jg
frstor
int3
out
xchg
xchg
mov
mov
xchg
sbb
xlat
push
arpl
xchg
sub
aas
mov
xor
out
ljmp
std
dec
cli
aaa
icebp
shrb
inc
cmp
fidivrs
adc
mov
out
xchg
push
mov
outsb
arpl
in
sbb
popl
xor
cmpsb
mov
in
pop
pop
mov
stos
test
pop
and
les
pop
test
shll
cltd
xor
addr16
jbe
aad
xchg
lods
xchg
inc
frstor
aam
movsl
sbb
repz
jl
mov
mov
ljmp
stos
mov
xchg
mov
int
xchg
add
cmc
cli
or
scas
sub
into
das
mov
lock
jno
hlt
sub
xor
xlat
repnz
or
inc
inc
fldt
gs
xor
and
xor
xchg
std
rorl
push
sarb
jg
int
aam
mov
dec
xchg
inc
pop
pop
shr
mov
and
mov
out
mov
mov
inc
cmpl
pop
cwtl
add
dec
fucom
mov
adc
mov
pop
mov
cmp
pop
fwait
mov
loop
in
test
pop
out
push
push
movsl
lcall
inc
mov
mov
xor
test
data16
adc
mov
mov
enter
outsl
adc
loop
lret
xlat
mov
inc
rcll
jae
outsl
inc
imul
repnz
push
rolb
jecxz
mov
subb
jno
add
or
sub
jp
mov
sarl
loope
jmp
adc
push
mov
lret
dec
inc
cli
jmp
xor
push
sahf
mov
cmp
sub
stos
cmp
push
dec
xchg
xor
lret
xchg
cmp
hlt
cmp
sub
sahf
pop
das
das
xchg
lds
add
dec
stos
dec
das
add
scas
adc
inc
pop
and
sbb
and
ja
sbb
xor
out
out
fnstcw
xchg
imul
lock
jle
mov
pop
mov
mov
and
cmp
lods
sti
or
jne
jnp
push
push
in
mov
jne
add
cmp
insl
mov
leave
dec
addl
movsl
je
mov
cmpsb
add
jecxz
sahf
jnp
mulb
pop
dec
gs
and
xchg
iret
mov
mov
shrb
sahf
out
dec
xchg
test
mov
cmp
inc
lret
pop
repz
xchg
aad
int
loop
mov
dec
call
lods
inc
decl
add
sub
add
mov
jo
les
fcompl
mov
popl
mov
mov
fbstp
repz
fwait
sbb
mov
cld
push
or
movsb
pop
cld
mov
out
mov
cmpsb
sub
in
push
pop
mov
push
out
nop
test
cmp
jns
movsl
shll
pop
popa
or
rorb
sbbl
inc
add
int3
test
int3
adc
mov
out
das
xor
leave
mov
icebp
das
in
jo
loope
fsts
xchg
loope
mov
loop
push
xchg
and
mov
jae
inc
lret
loopne
cmp
xor
jb
outsl
or
lret
bound
movsb
les
xchg
xchg
stos
sub
out
pop
daa
pop
jp
mov
hlt
jae
push
jbe,pt
mov
nop
push
in
sbb
push
loop
and
add
fwait
pop
jl
orl
and
inc
push
and
jnp
pusha
add
pop
rol
aaa
mov
or
dec
or
fildll
lods
cmp
sub
arpl
pushl
testb
inc
sahf
decb
mov
out
xlat
fsts
mov
fcomip
xor
int3
mov
fadds
cltd
or
push
rorb
mov
xchg
idivl
loop
imul
roll
inc
cmp
dec
rolb
push
inc
xchg
movsl
mov
ficoml
sti
jno
aad
or
ret
inc
mov
sbbl
fiaddl
sbb
shlb
pop
cwtl
mov
test
xchg
push
test
lea
test
jns
jg
pop
ss
pusha
push
push
and
sbb
shrl
icebp
sub
sbb
push
stos
test
inc
jns
test
xchg
jge
test
psrlw
adc
add
imul
in
xor
mov
std
sarl
decb
sbb
pop
mov
lret
push
rcrl
push
sub
movsl
dec
test
add
std
sub
out
mov
and
lahf
xor
test
mov
ret
dec
ljmp
xchg
fcomps
addr16
imul
das
sbb
out
int3
mov
js,pt
xchg
inc
jns
add
ds
in
fdivrl
lmsw
mov
and
jmp
xor
jl
sbb
call
xchg
or
pop
fstpl
pushl
sub
enter
push
push
cmp
mov
shll
mov
frstor
das
cmp
mov
ret
xchg
std
cmpsl
or
rcrb
outsb
fs
ljmp
cmpsb
std
inc
cwtl
idiv
les
xor
and
or
testl
data16
push
imul
xchg
cmc
ja
aam
aaa
push
in
xor
sub
repz
xchg
xchg
pop
lds
and
andl
mov
adc
mov
loopne
mov
mov
push
fnstenv
xlat
rcll
stos
icebp
or
into
sub
sti
dec
ss
inc
inc
and
mov
lret
cmp
add
sub
cmpsl
or
sub
in
test
inc
pusha
xor
lock
les
push
movsb
cs
rcl
sahf
pop
mov
aam
or
and
ret
mov
imul
mov
fs
ljmp
cmpsl
into
mov
xor
scas
or
mov
cmpl
jle
mov
cs
bound
lret
cli
mov
int
outsl
xlat
bound
insb
lods
pop
push
adc
lods
pushf
sub
inc
testb
shl
loopew
xor
adc
call
sub
mov
jecxz
dec
add
fisubrs
mov
test
mov
lock
out
xchg
movsb
jg
push
push
popa
std
add
push
sbb
fcmovnu
addr16
lret
loopne
adc
add
dec
bound
pop
xchg
pop
pop
jae
lret
sahf
xchg
bound
dec
loopne
push
add
pop
and
inc
in
hlt
sub
pop
lods
push
js
xchg
mov
sahf
add
jmp
mov
pop
aam
xlat
aas
leave
enter
cli
sub
pinsrw
mov
lcall
arpl
daa
out
pop
outsl
rcl
into
testb
jp
sbb
shll
cmc
insb
pop
cmpsb
xchg
mov
stos
mov
mov
imul
in
cmpsl
pusha
pop
fbstp
ljmp
jecxz
pushf
add
sarl
mov
mov
out
dec
mov
ret
fs
outsb
pusha
sub
lret
xchg
mov
sub
cmp
xor
xchg
cs
xlat
dec
inc
ss
mov
std
lea
inc
pop
das
adc
jae
mov
jae
fisubrl
fld
xchg
jb
pop
outsl
das
out
aaa
stos
hlt
cltd
out
sbb
lock
mov
inc
xchg
stos
in
adc
sub
into
fs
or
rclb
add
push
xchg
fnstenv
jle
jae
out
or
adc
inc
mov
shll
rolb
fidivl
jno
xchg
jno
rcrl
imul
movsb
lds
lods
cmc
sub
cmp
and
dec
data16
pusha
adc
mov
fldl2e
mov
dec
clc
int
gs
scas
jae,pt
inc
cmp
adc
fildll
jno
out
dec
jle
pop
inc
fistpll
dec
mov
sub
inc
push
lods
push
or
fdiv
std
mov
stos
inc
jge
cmp
inc
jecxz
daa
push
lahf
mov
add
leave
jle
subb
stc
sub
test
int3
shll
mov
icebp
imul
sub
or
jl
jne
rcrb
push
or
mov
stos
and
popa
cmp
push
incl
mov
out
mov
cmp
xor
mov
fwait
pop
sub
add
repz
ds
pop
jle
lods
std
sbb
lret
cmpsb
sarl
inc
push
fildl
outsb
inc
dec
add
clc
rcrb
nop
mov
adc
push
push
sub
inc
daa
jb
cmpsl
sbb
xor
lods
inc
shl
stos
mov
stc
push
rorb
mov
jo
xchg
push
jl
dec
cmpsl
dec
sub
repnz
inc
jecxz
into
in
mov
xchg
insl
test
cmpsl
and
mov
inc
sti
mov
adc
xor
test
sub
pop
xchg
orb
bnd
jbe
int
dec
andb
cwtl
test
lods
sbb
lods
fstpl
scas
jmp
mov
cwtl
cmp
jge
add
adc
sub
or
jne
pop
into
dec
adc
repnz
repnz
movsb
notl
cmp
jmp
jmp
cmpl
rcl
pop
test
mov
sub
xor
mov
pop
inc
or
and
lcall
test
loop
rcl
cmc
adc
adc
mov
popa
mov
pop
rol
fsub
mov
gs
sbb
std
jle
mov
je
mov
lret
out
and
inc
pop
dec
insb
js
rcll
test
inc
mov
int3
test
dec
jmp
mov
adc
lahf
adc
rcrl
and
dec
and
pop
andb
mov
and
pop
popf
inc
test
fwait
pusha
push
pop
adc
mov
push
fstps
mov
cwtl
add
and
dec
into
jecxz
push
ret
and
pop
fisubrs
cmp
jns
je
fdivrl
push
dec
das
push
lods
out
test
aaa
cs
jl
mov
pop
sbb
test
jbe
or
sbb
or
scas
shl
scas
mov
lret
pushf
jg
enter
fdivl
xor
sbbl
lcall
jno
cs
ljmp
mov
shrl
pop
jge
sub
lcall
jae
daa
aam
sbb
lock
jae
daa
in
and
pop
movsl
fldcw
xor
cmpsl
mov
push
mov
inc
mov
jmp
and
push
inc
test
orb
jne
hlt
jo
mov
dec
pop
mov
mov
fnsetpm(287
jl
add
in
loope
xor
mov
pop
dec
pop
push
pop
mov
imul
and
push
mov
cwtl
lods
add
nop
push
test
sub
loopne
jp
call
mov
fsubl
push
jae
pop
mov
in
lds
je
inc
fmul
dec
pop
mov
dec
mov
popf
xor
stc
fimull
inc
add
push
subb
gs
or
push
adc
dec
jb
jns
jne
adc
in
lahf
adc
out
and
cltd
sub
aas
test
mov
sub
in
in
mov
jecxz
sarl
push
in
nop
js
movsl
xchg
out
xchg
sti
std
rol
sub
dec
mov
and
out
cmc
jg
xchg
mov
lcall
mov
ja
xor
sbb
dec
mov
xchg
in
and
fidivl
mov
dec
xchg
mov
test
pop
addr16
aam
arpl
inc
aam
test
movsb
out
insb
cmp
mov
sub
cwtl
aas
divb
daa
scas
jp
daa
jmp
stos
es
insb
adc
ja
jle
pop
mov
mov
cmp
cs
mov
mov
or
lds
movl
bound
aas
sar
in
sub
inc
mov
repz
stos
and
xchg
xlat
or
je
add
mov
jl,pt
enter
daa
sbb
xor
xchg
outsl
hlt
loop
sub
mov
xchg
mov
daa
adc
xchg
push
lds
inc
dec
mov
mov
push
in
mov
int
rcll
mov
dec
pop
fsubl
in
adc
dec
mov
mov
pop
popa
pop
mov
jne
push
bound
int
jnp
pop
fs
jp
imul
outsb
pop
ds
jno
push
cmp
and
insl
and
out
rorl
and
ljmp
dec
bound
aaa
arpl
push
sub
dec
es
add
out
test
cs
or
test
add
es
ja
cmc
mov
stc
xchg
insb
and
jbe
repnz
mov
andb
icebp
push
arpl
push
inc
jno
pusha
mov
mov
ret
jg
sub
stc
lods
or
jno
int
add
fists
in
aas
popf
dec
push
sub
add
cmp
lret
out
fldt
cwtl
jne
inc
lock
lods
popa
inc
mov
xor
hlt
loop
mov
xor
addr16
add
pop
adc
add
add
sti
scas
in
frstor
jle
test
add
dec
pop
pop
push
push
fdivs
mov
loopne
shlb
enter
loope
jae
inc
movsb
xor
in
mov
cld
fstpl
inc
test
pop
or
cli
add
aam
xor
pushf
xchg
enter
xchg
mov
out
mov
sub
inc
add
sbb
mov
fs
mov
pop
jle
cmpsb
push
fnstcw
clc
insb
dec
leave
xor
mov
rcrb
cmp
in
out
mov
mov
out
lahf
in
dec
xlat
int
mov
mov
xchg
stos
mov
mov
pop
movb
dec
out
test
jne
jl
das
jb
scas
push
rol
fwait
mov
jnp
sbb
in
mov
inc
cmpsl
push
xor
jns
lods
or
aam
adc
std
push
push
lock
or
cwtl
dec
mov
mov
jmp
xchg
jno
jne
scas
add
stos
xor
cwtl
enter
lea
outsl
pushf
xor
test
stc
mov
insb
lahf
mov
pop
mov
and
jle
sub
jmp
enter
lret
mov
xchg
rorl
jmp
and
clc
pop
mov
sbb
ret
arpl
add
xchg
mov
scas
mov
dec
mov
pop
pop
dec
and
movsl
mov
scas
push
add
sub
mov
stc
outsb
jb
inc
gs
scas
mov
mov
push
rorb
mov
inc
out
add
adcb
repz
pop
or
inc
pop
incl
push
nop
jp
inc
inc
xchg
mov
cmp
xchg
jge
pop
sub
aad
scas
adc
lea
insl
js
cmpsl
insl
ljmp
pushf
lret
cmpsb
push
cmc
pop
inc
test
cmpsl
xchg
repnz
add
jb
inc
pusha
rorl
movsl
cmpl
cltd
in
pop
lock
or
xchg
popa
adc
ds
xchg
repz
or
sub
adc
cltd
jae
shll
std
fisubl
pop
fbld
jne
lahf
out
pop
cmc
cli
inc
push
sub
fistpll
push
addr16
je
pop
cmp
inc
push
je
xlat
or
mov
mov
pushf
push
mov
movsb
pop
das
stos
lock
push
jno
cmp
imull
call
pop
pop
jbe
mov
aad
fs
fs
dec
repnz
mov
pop
jle
sub
or
jle
int3
lea
mulb
outsl
mov
sbb
insb
ss
in
mov
or
ja
push
xchg
sar
dec
push
lret
mov
adc
inc
add
repz
jge
xchg
js
icebp
sbb
xor
or
xor
inc
mov
int
in
cmp
add
cltd
cwtl
xor
insl
xor
sub
sub
pop
imul
xlat
sub
and
lock
mov
mov
popf
shll
les
or
or
push
dec
cmpsb
push
idivl
outsb
loop
jg
push
mov
nop
xor
out
fidivrl
pop
aas
mov
adc
pusha
xchg
imul
push
ljmp
shr
adc
cmp
shll
or
dec
js
or
mov
hlt
iret
jp
and
mov
pop
dec
loop
lcall
add
test
sub
jns
lock
dec
pop
xor
nop
bound
pop
adc
inc
repz
pop
jl
out
testb
dec
cmp
push
pop
mull
cmc
popa
jmp
lock
inc
xor
arpl
test
pop
adc
icebp
pop
or
fldcw
jnp
stc
daa
arpl
inc
das
paddusb
fisttpll
ja
mov
push
je
push
out
sub
ret
mov
push
andb
dec
sbb
mov
pop
or
cmp
sub
mov
mov
push
pusha
pop
rolb
daa
rcrb
xor
xchg
int3
push
cmp
inc
add
mov
mov
sbb
add
push
shlb
jmp
mov
frstor
ret
icebp
add
jb
cltd
in
jmp
mov
and
popf
in
pop
popl
dec
adc
dec
xor
leave
add
cmp
lock
jnp
inc
inc
mov
cwtl
or
aad
mov
in
pop
lcall
addb
inc
xchg
xchg
dec
dec
mov
mov
int
mov
cmp
out
pop
mov
cmc
pop
in
or
andb
cs
sub
push
outsl
add
les
sub
mov
adc
icebp
mov
mov
jl
das
xor
sbb
cwtl
clc
sbb
fldcw
iret
mov
mov
vpcmov
pop
xchg
outsb
mov
cwtl
pop
out
aam
inc
xchg
pop
xchg
xchg
sub
cmpsb
jnp
mov
cld
out
push
cmp
and
mov
inc
or
fidivl
or
js
movl
lret
add
adc
sbb
cmpsb
pop
gs
or
testb
sbb
cmp
sub
jl
dec
and
inc
adc
or
jmp
adc
test
in
pop
test
cwtl
mov
stos
pop
ret
dec
repnz
xorl
call
xchg
or
dec
insl
add
push
sub
outsl
push
mov
orb
movsb
jg
inc
iret
in
mov
or
sti
push
mov
jl
dec
jge
fwait
mov
lods
into
and
data16
subb
dec
jmp
insb
xor
inc
mov
sub
imul
inc
pop
pop
adc
inc
lock
cmp
ret
mov
mov
enter
pop
ds
and
fidivs
jae
imul
sti
fsubr
sbb
lahf
cmp
fistl
and
lds
push
dec
inc
sbb
xchg
pop
stos
jge
add
push
jbe
arpl
mov
mov
inc
xchg
mov
iret
test
mov
sub
cli
cmpsl
mov
inc
pop
mov
pop
call
add
pop
or
adc
scas
mov
cmp
pop
mov
xor
sbb
jl
mov
push
xchg
add
sbb
testl
inc
movsb
insb
ds
gs
xor
sub
ret
pop
in
mov
xor
lods
cltd
pop
mov
pop
push
xchg
xor
pop
enter
lods
stc
rorb
and
in
popf
shl
pop
xor
or
ftst
pusha
sub
adc
jmp
sbb
andl
pop
sub
jnp
xor
lea
mov
jecxz
pop
pop
js
jno
add
xor
sbb
mov
and
fcompl
jne
push
mov
xlat
add
cmp
mov
add
sbb
sbb
sub
jno
push
imulb
xchg
adc
sbb
jnp
dec
cs
cmpsl
ret
outsl
daa
mov
lds
loop
hlt
cmp
jp
or
mov
aam
push
pop
xchg
loop
mov
cld
jns
mov
pop
xor
jl
mov
xchg
sbb
mov
dec
mov
mov
shrb
push
cmovne
mov
test
repnz
sbb
je
out
adc
mov
pop
push
stos
sub
xlat
repz
out
xor
fadd
ja
aaa
pop
dec
nop
sbb
fdivrs
in
pop
xor
rep
xor
ficoms
xor
out
xchg
rorl
cwtl
cmpb
imul
adc
sbb
or
dec
push
dec
pop
in
loop
hlt
pop
je
cmp
test
lods
pop
mov
insb
in
cmp
dec
push
mov
lahf
aad
mov
jb
popa
jb
jne
and
jo
or
xor
push
jnp
push
icebp
lds
into
sbb
pop
mov
imul
inc
adc
nop
loope
scas
cli
insb
xchg
clc
sarl
aad
xor
movsl
push
insl
ljmp
push
push
shr
cmpsl
push
mull
subb
push
test
add
in
std
add
mov
pop
shrb
or
sarb
mov
test
mov
scas
icebp
adc
pushf
ds
bound
stos
sbb
cmc
and
or
sahf
xlat
dec
lock
fcmovnbe
insl
sub
insb
pop
sub
mov
stos
inc
cmp
aaa
leave
mov
dec
mov
test
imul
addl
test
mov
int3
out
pop
cmp
mov
jp
pop
xchg
adc
ja
jo
loop
dec
lahf
paddusw
inc
and
pop
sbb
dec
sbb
push
jecxz
repnz
or
arpl
sub
sarb
pop
and
mov
iret
sahf
mov
imul
mov
adc
and
jg
pop
add
incb
jnp
sbb
adcl
aas
dec
mov
or
sub
lret
cld
cmp
pop
xchg
xchg
pushf
and
lret
aad
xor
imul
lahf
pop
lcall
jae
mov
in
inc
add
or
fs
inc
js
pop
cmovae
mov
mov
clc
xchg
pop
in
mov
lds
dec
adc
pop
lock
inc
lahf
scas
ret
mov
rorb
jg
cwtl
cs
sub
mov
mov
in
popf
clc
jae
leave
cmp
pop
mov
sub
sahf
icebp
xchg
jo
fucomi
pop
mov
loop
sbb
inc
int
add
mov
mov
adc
sbbb
arpl
stos
out
and
popa
test
hlt
dec
gs
into
push
nop
and
cvttps2pi
movsl
xor
and
cmp
andl
mov
sbb
out
push
sub
jge
loop
mov
xchg
sbb
jns
movsl
std
adc
rorl
pop
or
mull
outsb
jmp
dec
push
movsl
mov
mov
mov
je
stos
and
xchg
sbb
lds
imul
ret
sbb
add
popa
adc
std
stos
gs
fs
dec
and
mov
mov
pop
xchg
jge
sti
xor
int3
lods
cmp
sbb
inc
mov
scas
or
cmpsb
or
mov
nop
sub
lods
and
pop
lods
xchg
xchg
inc
adc
les
in
xchg
and
test
mov
sbb
shlb
dec
setge
je
loope
push
fmull
push
imul
cld
adcl
inc
mov
mov
jb
mov
out
cmp
ss
mov
flds
repz
hlt
push
das
cltd
loope
pop
test
lret
daa
ds
stc
xchg
jmp
loop
cs
mov
sbb
push
mov
mov
sub
aad
or
xchg
scas
in
lahf
sub
test
mov
in
push
aaa
int
cwtl
rorl
cmp
mov
mul
xchg
mov
loope
or
cmpsl
fildll
jge
push
inc
xlat
rorl
addr16
push
mov
pop
in
out
dec
outsl
outsl
or
xchg
dec
add
xchg
call
clc
jbe
cltd
cmpsl
pop
inc
mov
stc
inc
inc
pop
sahf
cli
test
out
xor
aas
popa
cli
mov
adc
push
and
loope
xchg
aas
mov
push
call
xor
or
fmulp
push
mov
dec
mov
or
push
and
push
inc
push
sub
fstpt
jge
out
nop
mov
negb
jg
sbb
jp
cmp
dec
sahf
or
test
adc
adc
push
out
push
mov
pop
push
xchg
sbb
ss
mov
cmpsl
movsb
pop
cmp
sbb
loop
mov
and
or
or
lret
add
lahf
or
inc
sbb
sbb
sbb
or
jno
pop
inc
lret
adc
addl
or
mov
lret
cmpsb
cmp
pop
enter
mov
mov
cld
loop
xor
pop
pop
or
jbe
imul
mov
xchg
push
xchg
inc
mov
adcl
ret
inc
add
sub
int3
cmp
or
outsl
pop
push
notl
stos
add
jge
jmp
mov
or
or
xlat
in
lods
popf
dec
inc
push
push
mov
mov
lahf
xchg
sbb
xchg
roll
jp
std
inc
hlt
enter
rclb
mov
pusha
mov
enter
and
xor
imul
out
call
and
add
repz
test
scas
jo
or
cmc
int3
adc
cmp
add
mov
xchg
js
mov
xchg
or
movsl
xchg
jnp
nop
jb
stc
sarb
int
lret
xchg
or
sbb
push
cmp
ja
xor
icebp
out
cmp
pop
cs
xlat
shl
lods
lock
popf
shlb
into
loope
mov
insb
cs
inc
psadbw
mov
cltd
outsl
daa
pushf
test
pop
jge
mov
sti
xchg
mov
mov
sub
mov
shrl
cmp
and
inc
test
cwtl
add
gs
xchg
push
les
pop
push
add
lock
movsb
sbb
sbb
in
xlat
and
das
data16
in
aaa
jmp
filds
add
sti
sti
mov
mov
jle
stos
xchg
and
fsubr
and
xor
fs
nop/reserved
adc
pop
loop
sbb
mov
lret
mov
jo
xchg
mov
adc
les
rclb
mov
icebp
fdivr
mov
es
xlat
mov
add
add
and
lahf
jns
inc
pop
mov
lcall
or
pop
push
popa
or
mov
sub
pushf
adc
movsb
jno
sub
pop
push
add
das
mov
mov
sbb
add
dec
ljmp
sahf
or
mov
popa
mov
mov
cmpsb
cld
cmp
push
repz
and
push
xchg
xchg
add
ljmp
aam
xchg
pop
dec
pushf
das
call
jle
mov
clc
jg
add
push
pop
pop
inc
lods
push
repz
jmp
es
pop
and
loop
fnstcw
les
mov
adc
push
lahf
stc
jecxz
pushf
xchg
jl
daa
js
push
pop
call
push
or
test
bound
cmp
pop
dec
stos
test
inc
cmp
enter
or
mov
xchg
jb
pusha
ret
cmp
jb
dec
call
push
lods
mov
ret
sub
repz
rorl
mov
out
scas
sbb
les
lods
xor
in
xor
sub
out
mov
mov
outsb
push
push
mov
add
popa
fs
sbb
xchg
fnstsw
sbb
dec
js
and
fsubl
or
cmp
xlat
and
xchg
ja
push
jmp
mov
adc
jns
imul
mov
mov
test
shll
mov
mov
mov
das
sbb
subl
sahf
subl
cmp
add
sarl
adc
lret
jge
sub
cltd
mov
cmpb
sbb
sub
fiaddl
ljmp
or
imul
adc
jl
pushaw
jp
mov
sahf
sbb
repnz
xchg
dec
int
or
push
scas
test
and
mov
pop
pop
pusha
scas
imul
cli
sarb
outsb
nop
lcall
lret
js
cmp
sub
jle
and
jp
sti
popf
and
jmp
repz
sti
dec
sbb
enter
outsl
lahf
jne
int3
pop
ret
adc
sbb
daa
cmpb
and
push
ret
adc
mov
jbe
jle
jecxz
sbb
or
xchg
aaa
std
and
mov
ficoml
pusha
push
cmc
and
fwait
pop
mov
ds
subb
inc
in
mov
sub
bound
es
xchg
xor
shll
inc
sub
mov
les
xlat
bound
or
push
xchg
arpl
push
ljmp
cwtl
push
fdivrs
add
inc
add
jp
mov
hlt
sahf
adcl
or
fdivrl
push
jg
mov
cmp
xor
push
stos
insb
xor
xor
push
rorl
mov
dec
jp
lahf
xchg
rol
cmovle
cmpsb
push
xlat
add
jne
sbb
mov
jb
testl
icebp
xor
test
testb
push
inc
mov
and
fcmovnb
mov
mov
bound
adc
or
fcmovb
dec
adc
cs
xchg
push
ljmp
add
and
pop
pop
sbb
cmpsb
into
lret
add
cwtl
xchg
xchg
jle
int
into
fidivrs
dec
sbb
xchg
sub
fcmovu
cmp
loopne
scas
enter
lds
mov
out
das
add
adc
ret
add
add
adcb
sub
or
mov
cmc
ret
push
mov
xor
fimuls
mov
sbb
sub
push
push
add
push
shr
inc
sti
jbe
and
stos
or
mov
xor
fldenv
or
jp
lock
or
push
or
pop
or
decl
ret
fwait
cs
add
negb
sub
xor
loope
lret
xchg
iret
or
jo
pushf
mov
imul
ljmp
sahf
dec
loopne
lret
in
push
xchg
fildl
cmpsb
out
push
xchg
test
outsb
repnz
mov
cmp
inc
mov
mov
je
jmp
pop
cs
push
sarl
pop
out
js
pop
xchg
sub
add
mov
jne
std
inc
addr16
pop
sub
nop
fbld
arpl
or
cmpsb
stos
jns
push
adc
pushf
jne
dec
sub
jns
mov
xchg
cmc
neg
sbb
js
test
test
mov
cli
sti
xchg
sub
fstl
jp
adc
cmp
jo
dec
sbb
aam
rcrb
pop
mov
lcall
out
ljmp
cmp
cld
stos
lahf
mov
cmc
imul
adc
mov
aad
cmp
icebp
adcb
xor
ror
sub
and
jmp
adc
ljmp
push
inc
iret
lret
dec
xchg
mov
imul
iret
or
add
pusha
and
js
adc
jl
mov
jns
int3
in
mov
fwait
les
mov
pop
xchg
push
or
neg
in
cmp
cmp
sub
and
pop
adc
mov
out
loopne
andb
pop
leave
lret
call
fisttpl
faddl
mov
int3
sbb
dec
sarb
adc
push
das
in
jg
fnsave
jge
stc
pop
loop
stos
jg
into
ja
adc
cmp
adc
sub
fsub
outsl
or
xchg
pop
mov
pusha
ror
dec
inc
mov
sbb
sub
jle
bound
clc
push
mov
adc
xchg
jae
psraw
andb
push
pop
add
sub
shrl
ficoms
xchg
das
dec
in
cwtl
repz
push
loop
xor
cli
inc
or
hlt
xchg
out
push
loope
pop
jmp
jg
shrb
cld
faddl
pop
adc
shll
sbb
hlt
mov
loopne
stos
jle
call
jno
lret
or
pusha
clc
mov
jge
sbbl
cmpsl
out
test
dec
das
enter
adc
mov
cmp
push
sbb
lcall
movsl
mov
enter
xchg
dec
xlat
dec
inc
dec
iret
bound
out
and
mov
lahf
addr16
or
rcll
out
sub
popf
mov
lcall
fnsave
movsb
xchg
xor
jbe
in
xchg
bnd
add
test
jnp
mov
ret
xchg
repnz
mov
xchg
xchg
mov
rolb
cmp
mov
dec
in
es
jmp
bound
cmp
rolb
pushf
mov
test
addl
dec
ret
jl,pn
push
cmpsl
push
cmc
stos
dec
inc
sub
fldl
movsl
xor
mov
rolb
xor
jb
aas
sahf
lcall
inc
or
mov
sbb
out
adc
dec
xlat
and
in
push
mov
negl
and
outsl
push
mov
fwait
test
insl
pop
popf
push
js
jp
sub
dec
inc
dec
mov
nop
aad
add
pop
je
loopne
xor
ja
adc
fnstsw
jecxz
inc
push
add
fcom
cwtl
rorb
cmc
mov
stos
ljmp
ljmp
clc
arpl
mov
jno
mov
cld
adcb
adc
mov
outsb
packuswb
mov
pop
int3
mov
mov
adc
mov
push
in
lock
into
mov
repnz
popf
pusha
stc
push
mov
mov
fdiv
add
add
clc
shl
sbb
loop
divb
popa
fdivs
inc
out
mov
fcompl
cmp
dec
and
add
jmp
sarb
inc
fcompl
xor
push
xor
nop
movsb
mov
ja
out
fmull
dec
int3
ds
scas
enter
loop
lcall
jle
xor
int3
push
pop
int
mov
lods
fstpl
ds
leave
dec
shl
mov
aaa
jbe
xchg
int
imul
lds
inc
sbb
cmp
mov
shlb
adc
cwtl
sbb
outsb
push
jmp
and
cmc
add
xor
mov
mov
cwtl
ficompl
pop
pop
pop
inc
fbstp
in
jg
push
pop
push
popa
fwait
test
mov
add
xchg
sub
leave
popf
shll
imul
inc
and
loope
inc
fadds
cwtl
stos
mov
adc
and
movsl
mov
cmpl
jg
sbb
cli
sahf
out
mov
mov
push
aas
pushf
mov
or
dec
jno
lds
cwtl
in
dec
test
mov
bound
push
leave
movsl
sbbl
push
push
xor
sarb
mov
cltd
inc
nop
xor
push
mov
push
aas
jnp
int
mov
lahf
daa
push
and
and
ljmp
repnz
pusha
xor
inc
add
or
aaa
mov
data16
pop
dec
sahf
inc
push
push
shrl
fucomi
dec
sbb
fwait
in
fldcw
subl
add
scas
or
pop
or
adc
sti
loope
outsb
cmp
enter
les
pop
pop
ret
pop
xchg
xor
ds
mov
mov
out
cs
xchg
movb
or
jo
rclb
jp
jp
pop
dec
cmp
mov
daa
push
adc
pop
cld
call
int3
jl
je
call
push
ret
inc
adc
ja
cwtl
icebp
xchg
hlt
jo
inc
shll
mov
sub
inc
mov
out
addr16
repz
es
jb
jle
ror
iret
lahf
out
jmp
into
mov
fisubrs
ja
lods
insl
repnz
shrb
rclb
mov
in
mov
or
leave
sbb
fwait
popa
xchg
out
jne
popa
lock
div
xor
add
sub
cwtl
jne
iret
inc
xchg
in
hlt
xor
bound
shlb
or
das
xchg
xor
mov
fildl
xor
pop
or
into
ffreep
loope
mov
repz
iret
int
decb
cmp
lock
inc
pop
je
xchg
cmp
iret
push
and
ss
push
cltd
ret
aas
lahf
addb
lock
movsl
pop
push
adc
int3
dec
and
push
adc
pop
es
in
movsb
mov
arpl
js
fcompl
outsl
data16
inc
push
mov
clc
xchg
cmp
es
loopne
xor
add
pop
bound
jns
mov
mov
iret
or
in
lret
je
in
insl
dec
jecxz
jo
stos
test
dec
mov
push
gs
lcall
jne
outsb
jl
dec
push
mov
adc
test
inc
stos
inc
std
flds
or
pusha
sub
rorl
outsl
dec
sub
adc
xchg
fsubl
xor
mov
testl
jno
push
mov
pop
loope
sbb
and
adc
pushf
mov
fs
mov
sti
mov
mov
adc
and
cld
scas
mov
pop
aam
stos
mov
test
pop
inc
dec
int
dec
nop
mov
subl
sub
imul
inc
loope
add
movsl
sbb
cmp
je,pt
mov
add
aad
loope
adc
out
jmp
mov
inc
push
mov
lea
cmc
push
and
or
cs
hlt
mov
adc
cmp
lcall
jno
ds
cmc
adc
and
aam
lods
sub
mov
rolb
jmp
push
outsb
ret
sbb
pop
fsubrs
mov
gs
popf
movsl
jne
mov
mov
jmp
pop
cld
or
lea
or
sub
cld
sbb
and
xchg
lods
sbb
stos
stc
xor
cmp
mov
push
into
jno
or
push
scas
popf
ja
cmp
jl
ljmp
mov
into
xlat
fsubp
mov
mov
xchg
mov
idivb
in
push
xchg
or
adcb
sbb
mov
jo,pt
inc
aad
enter
xchg
adc
rolb
dec
jb
repz
fstps
pop
push
pop
pusha
xchg
fcom
out
add
jecxz
inc
xorb
sub
push
mov
push
jne
pop
mov
cwtl
clc
and
mov
mov
shlb
pushf
push
pop
icebp
xchg
inc
jbe
sbb
je
pop
xchg
cmp
sub
mov
cmp
xchg
lods
lahf
inc
mov
ja
mov
popf
fldt
mov
andb
in
addr16
mov
ret
mov
and
and
push
pop
data16
sahf
cmp
cld
jbe
leave
pusha
fists
pop
jle
pop
and
cs
xor
cs
pop
imul
inc
mov
or
jge
push
pop
fmull
cmp
push
arpl
movsl
call
ret
shrl
lret
xchg
inc
ja
into
test
dec
dec
and
jmp
sbb
sbb
add
les
stos
pop
cli
pusha
add
or
lds
test
sub
sarb
lea
leave
inc
cmp
mov
xor
mov
cs
gs
mov
pop
or
or
adc
gs
dec
lret
lahf
jp
sahf
mov
sbb
call
pop
add
mov
insb
pusha
fdivs
out
in
ljmp
repz
jecxz
and
jbe
outsb
scas
push
fsubs
or
fnstsw
in
and
push
mov
mov
shrl
jp
pop
pop
stos
mov
jno
mov
mov
xchg
jecxz
xor
js
cmp
imul
sub
inc
insb
int3
inc
sub
nop
cmc
sbb
cld
jge
xchg
imul
and
xchg
stos
or
push
inc
sub
push
xor
pop
jecxz
inc
sti
lcall
xchg
inc
mov
lea
cmpsl
pusha
mov
pop
inc
inc
inc
inc
mov
shlb
add
mov
orb
fcoms
cld
ljmp
xchg
mov
data16
sub
shrb
jg
sub
imul
addr16
dec
pop
sbb
add
xchg
call
and
lahf
adc
mov
jo
fisubrs
lcall
lea
adc
scas
ljmp
sahf
add
push
mov
and
push
add
cld
dec
jge
add
hlt
stos
jnp
enter
cmpsb
cmp
adc
mov
or
pop
cwtl
add
mov
addl
pop
pop
mov
xor
in
aam
dec
mov
js
aas
jg
sub
arpl
mov
cmp
sbb
sub
aas
scas
je
scas
inc
sti
movsb
inc
jae
xchg
into
xchg
fstp
dec
jg
lret
insl
lret
aad
out
add
sub
jnp
pop
dec
aam
xor
push
sub
sbb
lcall
sub
lods
fs
pop
inc
lock
sub
lcall
xlat
dec
cmpsl
and
xchg
lods
aam
sub
aam
ja
leave
sbb
rcl
mov
mov
sub
jb
in
xchg
inc
and
int3
adc
and
mov
pop
je
in
das
sub
adc
fstpl
repnz
sub
jns
insb
das
mov
inc
adc
add
mov
adc
loopne
sub
lcall
cli
cmp
sub
cld
jmp
test
out
stos
sti
in
jne
loop
xchg
lock
jle
mov
test
xchg
lods
rep
mov
jmp
mov
jmp
adc
and
outsl
add
dec
insb
adc
sbb
jb
xlat
in
mov
mov
cltd
fstp
pusha
jo
mov
pop
cmc
int
addr16
dec
mov
shll
bound
rcr
clc
lock
popf
add
rorb
shlb
inc
sub
mov
mov
ja
loope
aas
int3
jb
jae
jbe
arpl
outsl
push
enter
mov
pop
mov
cmp
lds
or
sub
int
stc
sbb
shl
fs
mov
orl
nop
fpatan
dec
fisttps
std
xor
add
in
mov
or
mov
cmp
xchg
pop
mov
dec
fistpl
addb
je
rorb
push
jg
imul
inc
xor
inc
inc
pop
sbb
insl
jno
pop
push
popa
arpl
adc
cmp
call
cmpb
xor
lcall
or
xor
in
jbe
cmpsl
cwtl
mov
gs
or
test
dec
cmp
push
mov
cmp
jno
push
inc
mov
mov
mov
in
mov
xchg
scas
inc
je
push
ljmp
mov
clc
push
fsubs
call
adc
pop
subb
cmp
inc
mov
add
inc
popa
adc
outsl
and
fldenv
test
adc
mov
dec
es
fistpl
in
push
pop
popf
test
cltd
js
push
mov
dec
xor
or
mov
sbb
inc
mov
lahf
pop
push
insl
decb
jns
jg
dec
push
jl
lods
je
daa
push
lds
sbb
in
in
mov
fs
jmp
dec
or
hlt
or
cmpsl
lahf
ret
jnp
sub
mov
mov
sahf
rorl
es
mov
adc
loope
adc
jmp
adc
rol
sar
mov
pop
shr
nop
lret
iret
mov
mov
pop
inc
mov
out
repnz
lret
repz
and
test
pop
ja
andl
stos
xchg
shlb
xchg
sub
lods
iret
fidivrl
mov
and
js
in
imul
mov
pusha
inc
into
addb
and
into
fnclex
and
xchg
jl
pop
push
mov
imul
ljmp
dec
mov
jbe
cmp
xor
mov
or
push
mov
outsb
mov
dec
jno
rolb
testb
loop
xlat
mov
adc
sbb
icebp
xchg
ljmp
loope
push
mov
mov
pop
mov
rclb
mov
aas
sbb
push
rorb
fbstp
decb
sbb
sbb
rcrl
dec
cmp
dec
ret
clc
loope
mov
sbb
test
stos
movsl
jb
sub
lret
shlb
mov
push
ljmp
fadds
in
mov
sub
lock
clc
shlb
sub
aaa
sub
xchg
test
repz
or
sub
pop
push
in
or
fsub
aas
inc
leave
mov
rcrl
sub
sbb
stos
sub
jae
push
xor
xchg
cmp
pop
dec
xchg
in
dec
lods
cmpsl
inc
pusha
xlat
ja
rorb
mov
fmul
sahf
outsb
les
xor
test
push
push
cmpsl
aaa
mov
fisttps
insl
adc
je
je
es
popf
fdivrl
pushf
push
push
lods
leave
pop
scas
cmp
test
insb
jo
or
movsl
aas
sbb
pushf
nop
ja
xchg
jbe
mov
rcrb
je
sbb
hlt
scas
push
mov
xchg
adc
xchg
imulb
inc
fwait
nop
stos
jo
xor
sub
inc
dec
xor
and
mov
mov
js
mov
mov
add
insb
mov
jb
fs
aad
hlt
fimull
jns
faddl
xchg
mov
jp
jo
mov
idivb
pop
adc
hlt
fimull
mov
sbb
sti
mov
mov
dec
jmp
mov
cmpsl
clc
daa
enter
sub
xlat
roll
into
scas
dec
mov
mov
and
les
inc
imul
repz
arpl
mov
sbb
jns
test
das
inc
lret
cmpsb
inc
mov
nop
xor
mov
lret
roll
out
mov
xor
nop
fcoml
pop
xor
in
pusha
jnp
lds
jb
or
mov
sbb
aaa
mov
dec
or
and
sbbl
push
outsl
dec
scas
pop
sbb
and
dec
adc
pop
and
or
cmp
imul
or
mov
cmpsb
push
mov
test
test
sbb
mov
or
cmpl
out
rcl
data16
pop
out
inc
inc
sub
push
push
insb
pop
push
cld
push
in
aaa
or
push
inc
rcll
fs
and
push
xchg
pusha
hlt
outsl
fidivrl
inc
orb
pop
mov
sbb
lcall
js
cmpsl
scas
ror
jns
stos
dec
xchg
aam
lods
lret
call
push
xlat
dec
paddusb
and
aam
or
pusha
xchg
adc
rcll
int
pop
cmp
shrl
push
mov
mov
cwtl
xor
sahf
dec
int
mov
mov
icebp
adc
pop
out
or
sbb
xchg
popf
mov
dec
lret
cmp
movsb
mov
sub
adc
lods
sub
push
jns
repnz
imul
mov
dec
rclb
xchg
adc
mov
mov
adc
push
aam
decb
and
pop
loope
mov
mov
bound
xchg
dec
mov
mov
push
out
pop
in
aam
sbb
xchg
sbb
and
in
mov
push
repz
stos
ds
aam
dec
std
iret
in
xor
faddl
xchg
cli
mov
es
dec
jne
addr16
adc
hlt
pop
cmp
push
push
cli
pop
and
push
mov
call
xor
xchg
jne
mov
sub
scas
inc
daa
cmc
xchg
decl
cld
loop
cmpsb
pop
cmc
test
jle
mull
mov
les
or
mov
sub
sbb
call
cmp
mov
addr16
arpl
sub
addr16
mov
inc
mov
dec
sarl
popf
insl
mov
xor
xchg
es
stos
and
sub
fstpl
push
push
jbe
insl
mov
int3
test
sbb
mov
or
xor
adc
sbb
lcall
stc
jb
je
unpckhps
xchg
and
mov
jl
and
mov
mov
mov
js
movsl
aad
mov
mov
ja
push
mov
inc
dec
pop
in
out
add
add
mov
mov
test
enter
stc
enter
cwtl
jmp
and
adc
jnp
jp
add
mov
jbe
inc
jmp
in
subl
adc
mov
adc
xor
mov
div
sub
adc
fisubl
push
sbb
and
inc
dec
cmp
xchg
jl
xor
jge
or
clc
test
xor
inc
push
jecxz
sbb
add
mov
cld
fcmovb
subb
mov
cmc
add
pushf
sbb
mov
push
fdivl
outsb
pop
xchg
mov
inc
inc
mov
and
sub
xchg
sub
mov
add
sub
mov
icebp
lret
out
das
cmp
bound
xor
hlt
xor
or
sbb
iret
jmp
ror
sbb
push
pop
sub
pop
push
mov
inc
pop
outsb
ret
and
pushf
cmc
loope
jne
subl
jne
add
cmp
inc
roll
cmp
xor
loopne
pop
cwtl
rorb
enter
pop
jb
dec
and
mov
push
pop
imul
inc
hlt
mov
fidivs
inc
mov
scas
outsb
stc
inc
xchg
mov
mov
pop
pusha
cltd
out
test
adc
add
test
pop
aam
mov
fs
and
dec
mov
adc
sbb
sub
mov
cmpb
adc
pushf
lahf
xchg
lcall
into
xor
cmp
jge
outsl
repz
das
mov
sub
push
je
jno
pop
lock
pop
push
add
call
sbb
aaa
jge
xchg
push
mov
repz
addr16
mov
daa
sbb
mov
popf
sbb
testb
adc
mov
clc
aad
mov
jae
arpl
js
shl
mov
mov
or
and
sahf
pusha
cmovae
fdivrl
lods
cmp
cmp
cmp
mov
lret
movsb
sti
arpl
or
xchg
adcb
call
repz
jae
jmp
pusha
lcall
adc
pop
xchg
gs
dec
jo
cwtl
jne
popa
dec
jp
scas
sub
rol
sub
adc
lret
xor
into
pop
jg
sbb
cltd
scas
or
xchg
mov
jb
lret
adcb
add
addr16
repz
mov
call
fsubl
push
cld
mov
fmul
inc
xor
inc
jo
adc
add
out
mov
sub
scas
insb
jecxz
adc
aam
pop
and
xchg
arpl
cld
in
jne
pop
mov
adc
hlt
inc
mov
orl
mov
jo
adc
pop
mov
push
rcll
out
fwait
lret
aaa
sub
stc
movb
lret
xchg
cmp
sub
aam
push
les
mov
mov
jle
mov
pop
insb
ret
mov
adc
clc
lock
mov
js
and
mov
sarl
mov
add
mov
sbb
cwtl
dec
jbe
xchg
mov
in
mov
push
sbb
js
fstpl
adc
scas
data16
lahf
cwtl
movsb
or
sbb
movsb
sbb
inc
int
rcll
cmp
push
mov
and
cmp
lea
adc
dec
fnstenv
popa
sbb
mov
mov
mov
mov
std
sbb
push
pop
lret
cmpsl
push
arpl
mov
mov
jns
adc
push
mov
jg
jnp
lcall
pop
jo
push
push
in
out
dec
push
pusha
mov
cmp
jns
cs
add
jae
scas
or
mov
ror
data16
ja
push
and
icebp
dec
ret
adc
icebp
mov
clc
lcall
and
push
push
dec
or
sti
mov
or
push
pop
inc
test
aam
cli
inc
das
fld1
mov
pop
jnp
jmp
xchg
lahf
dec
jne
sub
scas
filds
inc
and
xchg
lods
mov
or
test
ss
xchg
cmp
pop
xor
imul
xor
aad
adc
in
out
push
fcmovnu
cmpsl
push
iret
pop
xorl
xor
fadd
jo
jle
push
push
pop
mov
mov
popf
bndstx
push
and
mov
pop
dec
aaa
sub
cli
sub
ja
fbld
cli
adc
outsb
pop
xchg
movsb
mov
into
repnz
pop
aam
je
rorl
pop
xor
sub
and
adc
and
push
mov
stos
adcl
cmpsb
clc
leave
sub
cmp
call
lret
jbe
jmp
sete
fists
test
dec
adc
dec
cmpsl
adc
cmp
sti
adc
adc
xlat
mov
insb
sub
movsl
rcl
push
popl
stos
pop
xchg
lcall
adc
or
mov
sbb
scas
mov
inc
push
into
xlat
gs
jecxz
mov
into
fdivrs
push
mov
aam
adc
imul
cmp
mov
lock
push
pop
lcall
jno
mov
mov
cmp
add
cli
andb
out
iret
or
ja
bound
inc
dec
jp
sahf
cmpb
inc
cmpsb
mov
or
dec
push
inc
cmc
push
mov
sarl
std
push
test
xor
lret
ss
outsl
dec
mov
sbb
mov
shll
test
sarl
leave
cltd
mov
lret
inc
mov
or
fnstsw
std
fisttps
xor
mov
sbb
scas
xchg
sbb
push
xor
xchg
xchg
dec
pop
dec
pop
xlat
movsb
push
popf
xchg
or
push
mov
inc
push
rorl
jl
es
pop
jge
and
and
or
out
inc
idivb
add
in
push
add
orl
push
cli
stos
mov
cmc
das
push
mov
ds
inc
lds
sbb
sub
jbe
jge
sbb
pop
inc
adc
nop
inc
loop
mov
nop
into
ret
and
adc
or
mov
imul
mov
pusha
popf
lahf
push
and
movhps
add
and
pop
mov
repz
shll
pop
mov
call
shr
jno
push
push
push
mov
ja
xchg
mov
cmc
xchg
xchg
push
sbb
jno
stos
inc
push
pop
in
je
push
xor
or
ret
jns
push
and
sbb
and
or
dec
loop
fdivrs
ja
pop
cmp
sub
pop
dec
xchg
xchg
xorl
jge
rclb
push
adc
pop
adc
add
mulb
inc
push
mov
stos
and
mov
pop
add
mov
mov
fwait
inc
jmp
icebp
jae
or
cld
pop
scas
mov
mov
mov
mov
loop
or
xor
ja
mov
cli
divb
je
in
icebp
dec
mov
mov
rolb
je
popa
cwtl
dec
push
js
das
fdivrs
stos
inc
addr16
jnp
push
cmp
push
sub
sti
in
call
dec
xchg
popf
xor
mov
jecxz
mov
mov
in
mov
cmp
mov
out
leave
mov
test
sti
arpl
cmp
mov
mov
loop
in
or
mov
mov
les
imul
dec
dec
jnp
cmp
push
inc
insb
pop
mov
jp
mov
push
imul
adc
lcall
aad
aam
push
je
ljmp
cwtl
es
inc
mov
lods
rclb
dec
dec
push
mov
in
aad
xor
pop
adc
adc
xchg
es
in
call
sub
push
mov
or
in
sbb
in
scas
in
jbe,pt
lret
sub
jb
cmp
dec
adcl
add
adc
test
popf
shll
movsb
jge
pop
mov
ret
loopne
fidivl
add
inc
je
insl
fucomi
mov
cs
popf
xor
daa
inc
cli
push
out
mov
and
inc
push
cld
pop
fstps
xchg
sub
stos
pop
loope
mov
jp
fs
mov
out
add
jae
cmp
jae
aaa
out
in
xchg
repnz
das
scas
mov
lcall
sub
jle
jle
sbb
xchg
stos
mov
xchg
jnp
es
jae
fcmovnu
jnp
sub
jmp
int
push
lds
jnp
mov
jecxz
scas
aad
cmp
mov
cmp
addl
ficoms
jno
jp
mov
mov
mov
adc
fbstp
mov
mov
sarb
pop
push
push
lods
dec
leavew
adc
mov
loopne
stos
clc
in
mov
sub
mov
sbb
cltd
xor
imul
add
jl
adc
inc
lods
in
in
daa
add
mov
pushf
inc
mov
jmp
xor
mov
xchg
lods
mov
out
ds
lret
out
and
cli
fisttps
iret
scas
add
in
ret
enter
push
scas
loope
mov
cli
int3
push
pusha
outsb
xor
push
ja
push
leave
and
outsb
xchg
mov
mov
adc
pop
je
push
enter
mov
xor
insl
in
jno
push
shlb
int
cmp
dec
in
mov
mov
fcmovnb
jae
or
outsb
jns
cmpsl
cmpsl
ds
jae
jl
push
xchg
dec
test
loope
cmp
or
and
fsubs
stos
inc
xchg
stos
lods
mov
aas
lock
cmpsl
push
lret
ret
pop
lock
inc
cli
inc
jnp
pop
loopne
repz
push
ret
sahf
lods
popa
pushf
ficomps
sbb
loope
adc
mov
and
gs
push
lock
inc
sub
cmpsl
jbe
cli
sub
enter
test
sub
es
sub
mov
js
mov
lods
inc
pop
dec
xorb
sub
in
sub
repz
imul
sti
lcall
dec
movsl
cmp
sbb
shrl
ss
pop
or
unpckhps
mov
xchg
sbb
xchg
mov
inc
and
les
out
jnp
pop
sub
gs
aad
jg
inc
push
ret
ret
in
movsl
call
gs
jle
out
sub
push
test
ficoml
fistps
jnp
mov
push
js
out
imul
cmp
outsl
loopne
sbb
and
outsl
ds
sub
hlt
jg
fsubrl
push
jne
jae
xor
jo
dec
insb
inc
inc
loop
mov
nop
xor
sbb
inc
sahf
jg
or
mov
mov
lods
jge
jne
mov
ja
icebp
cmp
push
inc
xchg
scas
and
ret
in
les
lds
call
repnz
mov
pop
cmp
loope
sbb
jge
dec
add
outsl
xorl
arpl
rclb
ja
mov
stc
sub
adc
and
or
sub
insl
and
push
roll
mov
sub
int
test
add
hlt
out
mov
jbe
mov
mov
push
jmp
cmp
or
insl
mov
mov
jno
ljmp
loopne
push
mov
imul
fwait
xor
or
fbld
lahf
mov
fisubl
scas
and
scas
out
mov
test
or
enter
xor
jge
pop
cmpsl
mov
cmp
js
pop
pusha
and
xchg
cmpsl
outsb
jb
sub
mov
cli
daa
dec
jns
out
xchg
push
movsl
fldt
jbe
loopne
int
aas
sub
loopne
mov
xor
test
inc
jne
and
xchg
fnstsw
in
loopne
push
fcoms
jp
loope
pop
fldt
data16
sub
mov
push
and
pop
mov
add
add
ds
insl
push
lea
popa
adc
cmp
sub
movsb
mov
mov
push
jg
outsl
adc
lock
jno
lea
lock
pop
pusha
jae
push
fisubl
enter
adc
ss
mov
sub
push
test
data16
lret
repz
outsl
ret
jae
jmp
adc
addb
xor
nop
mov
sub
pop
cmp
popa
aaa
pop
rclb
repnz
xchg
pop
stos
sub
out
mov
stc
mov
andl
adc
mov
pop
loopne
addr16
sahf
out
mov
jle
js
inc
shr
stos
rcl
jge
ficoms
or
pop
and
fxtract
xchg
or
xor
mov
cld
pushf
pop
pop
cli
adc
into
fisubrl
sub
insb
dec
outsl
jecxz
mov
cmp
mov
sbb
xor
xor
mov
jae
xchg
jbe
cmc
dec
in
das
fs
push
mov
in
xor
push
sub
hlt
dec
loopne
pushf
xchg
mov
cwtl
xchg
dec
cmp
xor
or
push
pop
cmpsb
imul
addl
scas
into
loopne
mov
cmp
pop
push
cwtl
movsb
in
pop
test
lods
mov
ds
xchg
popf
std
sub
sub
adc
cmc
cld
mov
push
pop
ja
push
mov
shll
mov
sbb
lahf
mov
sub
ss
loopne
js
fimull
dec
mov
add
and
or
mov
leave
loopne
mull
mov
rcll
rorl
push
jne
push
dec
clc
divl
xchg
cli
mov
ljmp
iret
enter
stos
dec
pushf
xadd
sti
push
jle
out
xchg
out
or
in
push
ljmp
mov
je
sbb
jo
push
data16
in
inc
or
ret
out
xbegin
adc
cmp
xor
scas
push
mov
sub
mov
mov
adc
add
cmp
inc
out
lcall
ud1
repz
jge
fwait
adc
loopne
pop
add
mov
lods
inc
bound
sbb
jg
jecxz
dec
loop
mov
xor
sub
or
jbe
aaa
inc
or
out
push
pusha
mov
repnz
jno
jecxz
inc
mov
xor
jno
cmpb
shrb
shl
adc
push
mov
scas
mov
mov
mov
jb
faddl
ret
insl
addr16
push
comiss
inc
inc
in
inc
push
mov
xor
mov
jne
pop
adc
icebp
ror
je
xchg
pop
adc
icebp
sub
inc
xchg
xchg
lcall
adc
push
lods
leave
xlat
stc
dec
es
lods
inc
outsl
and
lods
pop
dec
push
mov
and
leave
sbbb
std
lds
xchg
xchg
lods
cmpsl
push
adc
xor
in
repnz
adc
roll
dec
fdivr
div
sub
andb
sbb
push
rcrl
xchg
pusha
popf
mov
test
flds
cmp
es
add
mov
outsb
jb
inc
addr16
mov
ds
pop
mov
xlat
dec
cwtl
push
sub
sub
xchg
xchg
int
mov
bound
inc
jg
orl
mov
mov
push
xlat
rolb
jbe
pop
fimull
and
push
xor
lods
sbb
shll
mov
xchg
sub
rorb
repz
lret
xlat
dec
test
inc
pop
or
adc
imul
pop
mov
dec
mov
sub
mov
mov
popa
sub
std
or
jp
inc
dec
aas
jge
or
data16
jne
scas
rcr
sub
sahf
insb
or
notl
pop
inc
or
dec
adc
stos
call
cltd
jecxz
imul
fnstsw
push
rclb
shrl
mov
daa
inc
out
adc
pop
imul
mov
sti
pop
or
lret
inc
xchg
nop
mov
loopne
popf
icebp
mov
movsb
scas
sub
lds
or
lock
leave
inc
scas
push
aad
int
lret
data16
std
inc
jae
lods
sbb
iret
nop
pop
testl
divl
xchg
push
sarb
xchg
adc
sub
mov
or
icebp
inc
data16
aas
insl
test
mul
inc
cmp
push
ds
sub
lahf
repnz
xchg
scas
in
sub
xchg
movsl
lock
cmp
lds
push
inc
shll
fldcw
mov
sub
sub
rcrb
push
xor
inc
mov
mov
repz
outsb
leave
clc
gs
fisubrs
mov
enter
push
sub
sbb
pop
or
ds
test
das
lods
pop
sbb
mov
xchg
pop
pop
sbb
jmp
pop
sbb
cltd
fistps
sti
sbb
stos
in
cmpsb
cmp
mov
mul
dec
sub
and
fsubrs
xor
dec
jmp
orl
xchg
jb
mov
push
lods
fildll
sbb
cmp
xlat
pushl
cmp
or
xor
mov
sahf
jmp
mov
push
pop
mov
scas
add
pop
hlt
icebp
sbb
js
mov
pop
ds
dec
mov
mov
in
hlt
daa
ja
pop
adc
xchg
shrl
dec
push
nop
ret
jge
mov
ljmp
int3
lods
test
xor
scas
pop
loope
aam
xlat
sub
sub
mov
push
jmp
ret
stc
adc
jp
push
jb
push
ret
xchg
mov
push
movsl
mov
adc
jns
adc
lods
mov
subb
jae
pop
aad
push
add
pop
les
das
mov
xor
add
and
or
pop
pop
fwait
addr16
or
mov
dec
pop
mov
sarb
inc
and
or
pusha
movsl
dec
push
and
insb
frstor
outsl
aas
inc
test
push
xchg
cmp
rol
aam
xchg
sub
fs
cmc
and
insb
push
out
test
mov
adc
flds
add
enter
popf
sub
mov
nop
cli
je
ja
sbb
cmc
pop
mov
and
jmp
stos
mov
sbb
jp
sub
or
aaa
cmp
inc
add
je
test
add
and
add
inc
xchg
xor
or
mov
icebp
push
jge
mov
xchg
add
mov
sub
fs
aas
aas
out
stos
sub
std
and
mov
push
cltd
scas
inc
or
xchg
inc
roll
mov
add
or
adc
add
ja
inc
jmp
xor
andb
pop
cmp
cwtl
xchg
insb
out
insb
mov
ss
xor
add
jo
push
into
jne
lods
sahf
call
mov
mov
in
add
stos
mov
dec
div
mov
dec
gs
cmp
push
jp
ljmp
fcoml
mov
popa
adc
xor
push
sbb
cld
test
mov
out
or
mov
cmp
daa
xor
sbb
mov
icebp
fsubrs
stos
xlat
add
ret
popa
mov
lds
inc
in
dec
sbb
jl
sub
out
mov
jg
ud2
fnsave
adc
lds
sub
sbbl
inc
xor
jge
gs
lock
pop
mov
jbe
outsb
cmp
adc
push
mov
out
jmp
stc
sbb
es
mov
pop
add
fdiv
cli
icebp
test
movb
loop
fimull
or
bound
fwait
mov
xchg
subb
out
xchg
and
mov
xor
mov
mov
jmp
pop
inc
and
jp
faddl
jmp
xorb
jecxz
movswl
mov
imul
ds
jns
jge
outsb
in
pushf
sbb
jbe
xor
pushl
jmp
xor
dec
add
icebp
inc
xor
out
lds
into
dec
or
inc
andl
ljmp
into
std
pop
sti
inc
hlt
out
icebp
fs
bound
mov
bound
xchg
sbb
xchg
pop
jae
into
fs
mov
sbb
add
dec
hlt
xchg
lret
adc
iret
lcall
pop
sbb
ret
repz
int
mov
adc
jno
repnz
mov
push
in
enter
hlt
jbe
pop
sub
mov
call
mov
cmp
nop
and
fs
cs
clc
sbb
mov
xchg
call
stos
mov
test
lds
ds
add
lock
dec
addr16
movb
ljmp
mov
jl
adc
loopne
add
sub
cmp
sub
mov
ffree
jle
cmp
jne
sub
js
xchg
mov
repnz
fwait
in
inc
xchg
arpl
roll
dec
fistpl
sub
es
add
inc
enter
dec
sub
or
ret
movsb
sbb
clc
jl
lret
and
jo
push
subl
xor
sub
push
test
jg
add
cmpsl
fdivs
int
mov
xchg
and
mov
cmp
mov
inc
in
xor
mov
cmp
sub
mov
cltd
mov
add
fsubl
xlat
mov
in
gs
test
aaa
mov
dec
or
push
mov
leave
pop
xor
or
mov
fistps
xchg
xor
mov
adc
jge
cmp
bound
aaa
repnz
or
repnz
repz
test
dec
add
pop
fmuls
rcll
test
push
adc
jno
dec
and
cmpsl
les
lret
add
addr16
test
adc
or
add
jnp
out
ljmp
lahf
jae
scas
jnp
dec
jae
es
xchg
aad
push
lods
andb
adc
mov
popf
mov
sub
cmp
push
icebp
loopne
push
aaa
fsubrp
inc
outsb
and
push
sub
cmp
push
ror
lock
or
sbb
int
lcall
pop
mov
pop
lahf
orb
ds
mov
mov
cs
rep
jno
cmp
hlt
mov
aad
mov
dec
xchg
or
test
fisubrl
sbb
sbb
insb
addl
cli
mov
sahf
rorb
push
push
cmovge
in
test
arpl
push
jmp
mov
or
and
js
lahf
or
xor
hlt
mov
lea
mov
idivb
fnsave
lret
nop
jbe
std
xor
pop
add
lret
sbb
or
mov
xchg
jae
ja
sub
xor
push
xchg
loopne
frstor
sub
gs
scas
out
insb
popf
cwtl
xor
push
sbb
or
testl
int
lds
cmp
inc
jnp
pop
je
jmp
xor
jno
pop
stos
outsb
adc
add
lods
xor
repnz
or
call
sar
js
mov
cmpb
in
and
popf
lahf
xor
pop
cmp
clc
pop
dec
adc
dec
in
stos
insl
cmp
dec
clc
and
repz
pop
repnz
daa
push
repnz
js
pop
xor
adc
push
repz
dec
inc
test
sub
adc
cld
loop
sti
xlat
mov
and
fwait
xorb
mov
pop
insl
stc
shll
mov
cwtl
cmp
mov
ret
sbb
mov
ljmpw
mov
ret
cli
cmpsl
popa
in
addl
frstor
xchg
push
jg
js
arpl
jno
or
popf
in
sbb
pop
cmpsl
les
popa
mul
or
jae
les
fstp
bound
cmp
rorl
lret
mov
xor
popa
push
in
add
arpl
js
leave
repnz
dec
cmpb
outsl
mov
push
test
gs
mov
xchg
hlt
insb
push
out
pop
lea
dec
dec
aaa
dec
or
enter
push
and
push
inc
loopne
addl
jmp
inc
fadds
cmc
inc
in
std
out
mov
into
cmp
add
aad
sarl
dec
lahf
mov
inc
pop
dec
mov
pop
mov
iret
cld
xor
push
cmp
fsubs
pusha
addr16
stc
inc
xchg
aaa
cwtl
or
mov
mov
inc
lock
stos
lret
pop
sahf
ds
sbb
shlb
adc
sub
fwait
insl
cmc
imul
sub
gs
pop
add
cmc
push
dec
insl
movsl
add
sub
inc
aaa
test
xlat
je
cmp
xchg
dec
and
insb
out
inc
cmp
insl
imul
aam
pop
pusha
adc
lock
jecxz
cwtl
mov
add
pushf
cli
and
int3
les
xchg
add
mov
dec
cmp
mov
dec
imulb
call
fwait
cs
sub
shrl
xor
cmp
and
pop
lcall
stos
cmpsb
inc
and
xchg
clc
aas
fistpl
cmp
or
xchg
movsb
xchg
cwtl
add
fcomps
dec
inc
outsl
sub
pop
popf
pusha
repz
aas
xchg
cmp
inc
out
xchg
mov
jo
lcall
mov
push
out
pop
inc
or
add
push
orb
into
jp
inc
pop
shrb
iretw
mov
aam
cwtl
into
popa
lds
xchg
adc
sbb
mov
push
pusha
ljmp
mov
std
pop
xchg
shll
clc
mov
push
mov
aas
pop
cltd
enter
jmp
notb
cmc
or
inc
mov
cwtl
pop
cld
pusha
dec
jmp
icebp
inc
dec
jne
mov
inc
mov
push
mov
pop
ss
pop
mov
outsl
lea
xor
push
sbbb
mov
sub
jb
mov
cmp
push
std
out
and
mov
stos
sub
sbb
lds
in
adc
icebp
xlat
inc
arpl
and
pop
pop
lods
gs
adc
mov
call
pop
insl
repz
sub
scas
lret
ja
or
nop
pop
push
sti
fs
rep
ret
push
lds
pushl
ss
mov
mov
mov
fadd
xchg
iret
std
test
cmp
add
jne
fldcw
xchg
push
addr16
or
pop
dec
pusha
sub
xor
fwait
or
add
test
push
xchg
inc
pusha
xchg
push
jge
cmp
xor
cmpsb
jp
sbb
push
cmpsb
mov
xor
or
test
addr16
mov
aaa
cs
dec
mov
fwait
mov
fcmovu
mov
mov
jl
ljmp
shrl
pop
adc
xor
scas
nop
mov
sbb
shlb
jo
cmp
insb
push
lock
jp
mov
nop
inc
icebp
adc
stos
cld
xlat
lea
mov
xor
xchg
into
frstor
and
std
pop
arpl
or
fnsave
inc
test
sub
movsl
jnp
and
ret
xchg
scas
jge
insl
loop
cmpb
cmp
mov
push
das
dec
lret
rcr
aas
cmc
mov
adc
ret
adc
xor
inc
mov
jb
adc
js
sub
or
cmpsb
orl
dec
mov
inc
arpl
jnp
mov
rcl
add
data16
adc
xor
imul
aaa
sub
jns
orl
aas
xor
inc
push
or
out
mov
bound
test
out
fidivl
cmpsb
inc
push
and
aad
push
add
aas
stos
fisubrs
pushf
cld
pusha
nop
bound
adcl
movsl
push
sub
inc
xchg
out
enter
push
call
fs
or
mov
scas
mov
xlat
ret
mov
push
jg
add
dec
add
std
adcl
lret
mov
mov
pop
mov
dec
mov
insl
xchg
inc
xchg
sahf
mov
inc
mov
movq
mov
psubsb
sub
ret
adcl
add
jns
ljmp
push
mov
pop
pop
xor
mov
movsb
rol
hlt
scas
push
and
jbe
xchg
in
shr
and
pusha
sbb
nop
imul
xchg
insb
and
or
shr
bswap
jg
popa
stos
lret
addr16
xchg
test
mov
adc
pusha
rol
mov
jb
push
xor
std
pop
jmp
notb
scas
pop
sbb
adc
aaa
test
cmpsl
jmp
cmp
pop
clc
scas
iret
inc
in
mov
cmp
iret
ds
cmc
push
xor
mov
pusha
xor
loope
in
adc
mov
data16
pop
add
xchg
test
outsb
or
flds
in
or
or
fsubl
inc
cmp
lahf
popf
imul
adcl
adc
sub
pushf
das
dec
out
or
lret
push
test
push
movsl
mov
jbe
movsl
push
xchg
pop
cmpsb
mov
lods
push
cltd
movsb
repnz
jno
push
pop
js
into
lret
orl
mov
out
or
mov
jnp
sbb
rolb
sub
pop
fs
xor
adc
inc
and
mov
dec
cmp
push
jne
flds
cltd
add
pop
in
cvttps2pi
int3
jns
sbb
or
jb
lea
xchg
xchg
cmpsl
fwait
aas
insb
aam
lods
scas
sbb
js
mov
add
int3
push
pop
aaa
daa
mov
pop
adc
sub
jno
loopne
lahf
mov
jl
mov
insl
mov
xchg
jmp
rcr
push
mov
popa
push
sub
mov
mov
shlb
dec
or
cmp
mov
xchg
out
fimuls
jge
sbb
loope
imul
xor
outsl
mov
push
inc
loopne
mov
push
ret
es
mov
rcl
mov
daa
sbb
or
adc
adc
cmp
pop
mov
clc
lret
sub
xchg
or
nop
int
mov
pop
out
enter
data16
pop
fsubrs
mov
into
scas
stc
xor
or
rcll
test
pop
into
or
dec
mov
dec
std
adc
xchg
movb
mov
xor
or
dec
loope
ret
in
lods
mov
arpl
ret
jb
xor
shlb
pop
cmpsl
scas
cmp
addb
rcrb
sub
dec
or
out
jp
sub
cmpsb
cmpsb
mov
movsl
push
cmc
pop
insl
fistpll
cmpsb
pop
xorb
fisubrl
or
pop
or
cmp
dec
loop
lods
jge
in
push
push
je
and
shrl
out
lods
shlb
or
iret
lret
push
or
mov
int3
mov
and
rorb
outsb
mov
xchg
stc
cs
cwtl
push
jae
sub
jo
add
dec
call
cmp
into
push
insl
add
icebp
sbb
mov
pop
jp
cld
lods
rorb
fdivs
xchg
loop
cmp
sbb
pop
das
hlt
push
test
out
stc
or
js
orb
cmp
addl
pop
in
rorl
pop
sub
outsl
inc
pop
int3
jo
stos
push
dec
shlb
jp
rcrb
cld
xor
add
ret
jmp
xlat
std
imul
sbb
pushf
pop
insl
ror
xor
jno
add
dec
fistpll
out
jecxz
movsl
and
stos
mov
stos
jp
push
adc
shll
inc
cmp
in
divb
inc
lcall
into
cmp
addr16
sbb
push
sbbb
adc
push
xor
mov
or
mov
sbb
pop
enter
enter
xchg
inc
mov
outsl
mov
mov
push
cmpsb
xor
int3
insl
lock
in
stos
lods
repnz
scas
push
adc
mov
sub
pop
pop
movsb
daa
enter
movl
pop
pop
js
repnz
or
mov
mov
mov
pop
aaa
leave
inc
push
push
xchg
notl
punpcklbw
sub
je
cmp
cmc
jg
ljmp
jge
mov
inc
xor
movsb
and
or
bound
scas
aaa
movb
popa
lods
cmp
sub
cli
dec
dec
movsl
pop
imul
lret
xor
cmp
add
mov
jnp
test
mov
cmpsb
mov
push
iret
iret
popa
int
xor
cmp
push
std
jne
jle
jl
fwait
mov
inc
pop
insl
jnp
test
xor
sub
pop
lcall
lret
hlt
jge
fildl
in
mov
popa
mov
mov
cwtl
ficompl
adc
popf
push
and
ja
decb
cmpsb
jp
aam
jo
jge
dec
out
fisubs
mov
cmp
movsl
rcrl
repnz
icebp
in
sbb
aad
adc
lds
int
inc
jne
xor
std
mov
repnz
ret
enter
mov
mov
xor
xor
repz
jle
in
push
jne
jb
icebp
or
outsl
ja
and
dec
stc
cmc
xorb
ds
push
iret
push
scas
add
imul
rcll
insb
shl
xor
dec
mov
adcl
repnz
inc
pop
or
fcmovb
push
cld
rcll
jecxz
cltd
sub
nop
mov
push
mov
mov
popa
cmp
inc
sub
adc
cmp
mov
out
arpl
daa
cmp
adc
cmp
cmpsb
scas
or
dec
aam
ret
and
xchg
mov
sbb
pop
dec
lds
in
mov
cmp
mov
mov
mov
sbb
inc
sbb
add
dec
push
mov
mov
sbb
stos
fwait
and
jbe
cmp
out
mov
inc
push
sahf
xchg
dec
dec
fdivl
stos
sub
add
add
pusha
mov
ret
or
or
iret
xchg
sbb
scas
popf
shll
inc
fwait
sub
push
hlt
xor
pop
jb
xchg
rcll
arpl
mov
xchg
cmp
push
ja
xor
inc
and
stos
cmp
popf
mov
lret
push
outsl
mov
je
rorb
test
stc
and
in
aam
insb
rolb
xchg
mov
or
nop
jnp
and
ds
xchg
ds
mov
add
add
mov
pusha
fistpll
test
dec
ret
into
mov
jae
xor
fwait
push
bnd
out
add
sub
sub
shrb
mov
fistpl
xchg
cmc
push
or
xchg
in
adc
sarl
inc
push
jbe
xor
push
shll
pop
pusha
or
in
xchg
pop
filds
jbe
lahf
andl
mov
lcall
push
push
fidivrl
or
xchg
iret
mov
xor
sbb
adc
clc
mov
cs
inc
or
dec
add
ret
push
mov
data16
mov
sub
push
mov
rcrb
xor
adc
mov
outsb
cmp
xor
jbe
arpl
push
stos
mov
fstl
pand
pop
scas
sbb
call
fistps
jge
jp
pop
jb
add
jo
nop
mov
test
mov
sbb
stos
cltd
or
daa
daa
push
lods
push
sbb
jo
gs
push
popf
pop
in
out
sbb
add
testl
dec
ss
gs
das
mov
popf
add
dec
dec
mov
jecxz
inc
xchg
cmc
test
mov
cmp
mov
xor
push
cwtl
scas
inc
cmc
mov
stc
xchg
and
scas
ja
fsts
mov
fwait
mov
cmp
lods
adc
jge
in
sbb
xor
adc
xchg
xor
pop
mov
sub
pop
and
mov
mov
sbb
adc
pop
lcall
daa
dec
xchg
aaa
in
push
pop
or
or
sbb
dec
or
out
mov
insl
loop
ret
rolb
cmc
insl
outsb
cltd
mov
mov
mov
pop
push
mov
mov
cmp
pop
stos
aas
push
cmc
sub
xor
jo
fsubrl
mov
hlt
out
stos
xor
pop
and
inc
add
ss
jl
sub
and
jmp
jae
xchg
add
fstpt
and
scas
sub
or
and
rcr
incb
mov
pop
pop
jnp
and
andw
xor
incb
nop
mov
inc
js
cli
stos
inc
xchg
mov
psllw
std
cli
lods
sti
and
mov
and
pop
push
push
push
pop
xchg
or
sub
bnd
lock
test
jmp
inc
add
and
out
roll
and
sbb
mov
mov
and
int
cmp
lods
add
adcb
repz
adc
adc
pop
jne
mov
cwtl
inc
pop
cmc
mov
sbb
imul
imul
lahf
and
movsb
out
shlb
sbb
push
cmpsb
inc
ja
testl
add
cmpsb
insl
in
mov
in
sti
scas
pop
pushf
pop
mov
bnd
pop
xchg
mov
je
in
inc
and
sub
and
push
dec
imul
or
pop
dec
pop
repz
movsb
jb
mov
cmc
cmp
inc
dec
adc
js
mov
cmpl
iret
sbb
loope
nop
sub
fdiv
dec
call
ret
clc
sbb
mov
push
and
xlat
repnz
or
outsb
fiaddl
xor
js
data16
push
mov
lea
jns
xlat
push
bound
scas
cmp
or
je
call
aas
jb
xchg
add
sub
dec
push
pop
leave
jbe
inc
push
icebp
push
outsl
movsb
stos
in
xchg
mov
mov
fs
rorl
push
daa
cwtl
xor
or
jb
cmp
cltd
data16
cmp
out
decb
push
add
test
in
cwtl
mov
push
or
adc
jnp
sub
jp
test
xchg
insl
inc
adc
push
add
pop
sub
mov
mov
sbb
les
push
or
jb
mov
dec
stc
jae
ret
fwait
xor
jg
jb
jno
jl
mov
bnd
jmp
mov
imul
xor
into
and
dec
test
enter
fldt
sub
imul
push
pop
pop
call
mov
inc
ret
popa
not
pop
pop
lea
or
sbb
in
scas
cwtl
in
pcmpgtw
push
pop
sub
mov
test
dec
mov
xchg
js
icebp
ljmp
outsb
jp
lcall
push
sahf
mov
mov
xchg
lods
jl
ja
lods
push
ljmp
out
inc
mov
nop
jo
pop
and
fnstcw
gs
push
add
inc
xchg
lods
sbb
mov
mov
mov
or
imul
fwait
mov
pop
xor
shrb
ds
into
adc
jecxz
hlt
dec
jp
fisttpll
call
ss
sti
jbe
jge
fwait
outsb
adc
fbstp
sarl
pop
cmpsb
pop
mov
mov
fisubrs
push
xchg
sbbb
fisttpll
cltd
xor
imull
and
dec
push
mov
and
mov
test
roll
rolb
push
pop
fstp
in
sub
push
test
andl
int3
mov
je
lods
int
jge
fldcw
mov
dec
or
xchg
cmp
lock
es
stos
push
test
jne
lods
cbtw
push
mov
fwait
sbb
imul
stc
cs
jae
pop
mov
add
pushf
mov
cmp
push
jno
stc
clc
stos
cmpsb
stos
inc
push
mov
popf
jb
adc
jae
lret
aad
cmp
cli
repz
insb
mov
std
xlat
dec
aaa
inc
call
stc
pop
cmpsb
les
pop
jecxz
sti
dec
loopne
cmp
arpl
push
lods
jp
mov
lods
dec
fidivs
scas
and
mov
ret
add
imul
lods
bound
lret
jns
jmp
push
pop
fisttps
inc
gs
fs
and
add
pusha
icebp
stc
icebp
fbld
pop
push
mov
int3
in
dec
push
mov
lods
call
dec
pop
sub
test
mov
cmpsl
scas
pop
push
xchg
inc
pop
sub
pop
leave
push
dec
pop
push
or
xchg
or
dec
sahf
clc
imul
xor
ret
inc
sbb
ret
clc
push
in
fwait
jae
mov
mov
stos
sar
in
mov
and
or
or
xor
iret
in
aad
jmp
cld
adc
popl
loope
xor
addb
adc
mov
cmp
ljmp
fdivrl
sub
push
lock
dec
dec
fdivp
dec
add
scas
sub
add
and
xchg
sti
mov
xor
fidivl
cltd
pop
shrb
inc
or
cmp
xchg
rorb
cmp
mov
das
xlat
jo
add
xchg
jg
iret
cld
sbb
push
movsb
sbb
pop
int
nop
add
and
movsb
pop
xlat
or
xchg
cli
or
mov
sub
sahf
in
lcall
jge
sbb
mov
mov
in
insl
inc
and
and
sbb
jl,pt
dec
xchg
pop
or
pop
mov
clc
jle
jno
subl
addr16
aam
mov
xchg
mov
jo
je
push
xchg
lods
int
syscall
mov
gs
insl
or
shll
rcrl
pusha
pop
lea
pop
jns
add
pop
mov
imul
xchg
inc
gs
mov
dec
lea
sbb
mov
in
xor
jo
lret
xchg
stos
mov
outsb
lcall
mov
jp
adc
mov
push
cmp
sarw
sbb
je
and
call
sbb
fists
sbb
stos
rolb
sub
mov
push
pop
shl
xchg
push
shrb
sahf
adc
add
lock
mov
jo
movsb
push
les
incl
stos
mov
adc
ss
jg
mov
pusha
inc
iret
rcl
shlb
call
sub
scas
mov
xchg
pop
adc
outsb
movsb
inc
lods
out
add
and
pop
cli
arpl
fdivrs
stc
sub
or
pop
mov
test
pop
clc
and
loope
out
mov
push
adc
lcall
icebp
addr16
daa
fwait
in
out
xor
mov
ficompl
les
scas
insl
add
out
sub
scas
xor
jbe
ss
mov
fs
pop
add
xchg
movsl
sbb
hlt
ret
jmp
cltd
pushf
push
jne
fisttpll
or
inc
loope
call
daa
hlt
mov
pop
mov
inc
mov
test
ss
xchg
fiadds
jbe
and
jmp
and
adcb
imul
xor
cltd
jbe
mov
pop
dec
sbb
cmpsl
sub
sti
jmp
bound
jge
inc
or
sahf
js
mov
and
mov
outsl
test
inc
test
ficoms
and
dec
jecxz
push
int3
inc
cltd
sub
addl
jne
push
jecxz
imul
jns
sbb
rorb
inc
fnstcw
jle
cltd
cs
sub
sti
push
jecxz
mov
popa
xchg
jp
add
ret
enter
pop
decl
je
rcrb
mov
push
inc
lret
inc
out
adc
fnsave
and
outsb
in
fbstp
ds
or
cmp
push
and
scas
mov
xor
jns
adc
stos
adc
mov
fidivs
bound
xchg
sbbl
xchg
sbb
cmp
add
cmpsl
fstl
test
aas
mov
loope
adc
dec
xor
movsb
rcrb
loope
mov
push
loopne
fisubs
popf
les
dec
outsl
cmp
add
sbb
mov
lods
in
sahf
add
in
push
pop
push
dec
mov
fs
add
cmc
xchg
out
and
es
mov
stos
sub
repnz
ret
sahf
dec
mov
shrb
adc
lods
divl
mov
or
daa
inc
js
loope
or
pop
dec
dec
inc
adc
pop
icebp
repnz
in
adc
cmp
push
iret
cmp
xor
int3
pop
jb
cmpsl
push
push
insb
push
dec
sub
pop
add
rcrl
les
sbb
sbb
mov
lds
pop
dec
mov
mov
push
mov
test
std
inc
push
enter
adc
pop
bound
inc
mov
jnp
or
jl
rcl
in
clc
ds
daa
aam
cmp
int3
sarb
repnz
inc
jecxz
xor
insb
or
mov
pop
mov
gs
test
adc
mov
data16
sbb
and
into
into
test
add
orl
loope
mov
or
fwait
sbb
nop
in
mov
mov
inc
xchg
imul
mov
mov
test
nop
mov
in
jo,pt
in
call
ret
test
pop
ss
je
pop
call
lea
and
jne
in
andl
mov
out
xlat
jo
xor
xorl
imul
cmp
lret
mov
lahf
xchg
int
sub
stos
fsubl
xchg
cmp
xchg
push
imul
pop
jle
sub
mov
adc
adc
inc
lret
leave
dec
leave
mov
pop
inc
sub
fcmovnbe
cld
mov
mov
lock
jo
loop
negb
ret
push
dec
push
pushf
shrl
in
and
sub
rolb
call
mov
push
cmp
mov
and
jp
fidivrl
ja
mov
add
cld
inc
xchg
pusha
jg
scas
adc
ljmp
jecxz
gs
out
xchg
and
xor
addb
push
and
mov
jb
mov
push
enter
mov
mov
push
dec
and
inc
cmc
push
cmp
sub
test
pusha
push
sar
fs
cmp
xchg
fld
inc
and
and
pop
xlat
or
out
cwtl
inc
icebp
mov
or
and
sub
outsl
push
inc
jnp
sub
mov
jecxz
mov
push
add
nop
or
jle
fsubrl
repnz
xor
popl
dec
cwtl
mov
mov
fwait
lock
loopne
mov
shrl
sbb
roll
lock
mov
pop
lods
ljmp
add
aam
sbb
mov
or
iret
out
loopne
push
mov
jp
push
xchg
aad
and
xlat
jle
lods
pusha
jge
cmp
mov
sub
sbb
mov
lods
shrb
mov
jge
enter
sbb
pop
daa
cmovo
mov
enter
pop
jbe
dec
xor
add
fstpt
or
enter
mov
pop
dec
movsl
pop
fistl
mov
xchg
inc
mov
pop
sub
out
cmp
cli
add
cs
sarb
cmpb
mov
jns
mov
sub
mov
adc
or
inc
adc
dec
mov
mov
mov
aaa
push
dec
ja
dec
ret
dec
call
sbb
out
filds
pop
aam
sub
jbe
adc
dec
imul
notb
inc
notb
aas
pop
pop
jne
sbb
sbb
ficompl
adc
insb
repnz
ss
jge
mov
stc
mov
in
fisubl
sbb
pop
cmp
clc
jne
lods
mov
cmp
fcoml
dec
mov
mov
movb
pop
xorb
or
int
dec
lcall
sub
sub
repz
xlat
jb
int3
adcb
xchg
mov
push
sub
ss
dec
daa
fmull
adc
lcall
xchg
inc
cmp
mov
sub
ljmp
mov
sub
pop
and
hlt
mov
arpl
test
pop
jae
aad
lcall
lods
pop
test
mov
or
and
pop
jbe
inc
add
cmp
ret
iret
jns
repz
mov
push
mov
pop
jmp
or
xor
mov
cwtl
jle
insb
xchg
hlt
test
scas
pusha
clc
clc
cld
xchg
sbb
sbbb
lcall
add
push
jecxz
testb
mov
mov
sbb
inc
xchg
xchg
adc
xchg
bound
fwait
xchg
mov
mov
aad
jbe
xchg
int3
xchg
jmp
and
push
and
imul
movl
cmpsl
and
pop
outsl
insb
imul
cmpsw
in
test
and
daa
sbb
mov
pusha
dec
aas
ja
mov
lods
out
add
adc
or
shll
lea
lods
in
dec
sub
rorl
jl
xor
or
inc
out
cmc
lahf
and
cmpsb
pop
cmc
sub
cwtl
adc
shlb
out
jecxz
xor
stos
jmp
notl
pop
mov
add
and
imul
mov
int3
jle
cmc
into
pop
rcrl
pushf
sbb
jl
idivl
sbb
andl
dec
scas
orl
pop
push
nop
lods
es
add
dec
dec
loop
fmuls
sub
insb
movsb
add
je
jne
add
add
mov
sub
fadd
daa
mov
dec
aaa
push
mov
dec
fcoms
xchg
icebp
ret
mov
ljmp
adc
rol
add
push
inc
enter
outsl
sbb
xor
int3
jge
cmpb
inc
add
mov
jg
adc
adc
or
and
out
and
into
aas
cld
xor
inc
dec
into
add
sbb
fadds
pop
cmp
popa
ja
gs
int3
dec
lcall
lds
jle
pop
inc
shlb
loope
cmp
cmp
xor
mov
sarl
jns
mov
lahf
fbstp
jo
mov
lret
cmp
dec
pop
cmp
pop
out
pop
addl
addr16
jmp
cmpsl
xchg
lods
inc
sub
aaa
mov
popf
clc
sarb
pop
jae
movsl
inc
jno
bound
sub
loopne
push
mov
push
test
cmp
pop
int
xchg
aaa
mov
ss
imul
lods
mov
cli
push
das
fidivrl
mov
setb
sub
mov
mul
int
mov
push
cmc
mov
ja
arpl
ret
in
or
jge
jmp
pop
cmc
out
push
lea
shll
popf
xchg
jo
cmp
cmc
mov
xchg
cmc
add
pop
or
mov
push
and
inc
push
dec
add
inc
aas
mov
je
dec
imul
adc
xchg
adc
pushf
std
test
xchg
ss
repnz
jbe
ja
fadds
xchg
cmp
add
out
dec
test
in
jmp
mov
hlt
incl
mov
rcr
mov
mov
jge
xor
dec
dec
ljmp
adc
mov
scas
insl
cs
xchg
das
sar
nop
adc
dec
lahf
std
and
xor
repz
loope
inc
enter
mul
jb
mov
stc
push
inc
sub
adc
leave
adc
dec
mov
or
pop
dec
push
inc
cltd
xchg
mov
inc
stos
jecxz
mov
add
jne
loopne
jl
mov
fiaddl
sbb
sti
xor
fsubrp
jle
enter
add
xor
dec
jl
mov
xrelease
addr16
cmp
add
cmp
int
loop
dec
adc
ja
lahf
inc
add
ret
sub
jl
stos
lcall
mov
fwait
dec
mull
and
sub
test
pop
jno
jmp
into
pop
int
imul
cmp
out
imul
icebp
loop
inc
jp
in
mov
or
cmp
daa
sub
sub
push
add
sbb
fwait
pop
iret
enter
jp
mov
test
jp
push
int3
xchg
insb
repz
mov
gs
adc
rolb
loopne
cs
inc
add
xbegin
mov
out
stc
ficomps
cmp
and
add
shlb
fsubl
rclb
jecxz
hlt
sarb
mov
and
in
outsl
nop
test
popf
mov
pop
mov
and
sbb
mulb
mov
negl
sbb
mov
jl
adc
dec
fidivs
push
pop
popa
cmp
push
dec
pop
mov
lcall
xchg
js
xchg
sbb
mov
or
fs
pusha
xchg
or
sbb
pop
out
xchg
fldt
popf
fmuls
in
dec
repz
push
nop
or
mov
aam
add
cltd
test
jp
mov
movsl
test
orps
ljmp
jl
add
nop
rcrb
mov
scas
cwtl
sbb
das
mov
dec
pop
mov
pop
aas
mov
bswap
in
popa
dec
and
insl
dec
nop
lret
insb
js
adc
pop
xchg
adc
mov
mov
ss
push
dec
mov
movsb
repnz
mov
ffree
push
pop
dec
gs
inc
shl
and
jle
or
mov
push
sub
fwait
bnd
mov
aaa
xchg
mov
sub
dec
inc
mov
pop
xchg
push
mov
xor
dec
sbb
pop
ljmp
pop
mov
add
loop
inc
fsubrs
jl
xlat
push
popf
xchg
mov
inc
lds
sahf
push
sub
push
push
jle
pop
mov
sbb
adc
mov
mov
mov
in
into
sarl
sbb
jo
pop
jno
in
jno
dec
or
adc
jbe
pop
or
arpl
mov
sar
fucomip
lret
in
cmp
scas
daa
testl
loop
scas
lret
pop
inc
imul
inc
mov
cmp
shl
ret
icebp
or
inc
out
imul
cli
mov
stos
xchg
fcomps
fisttps
iret
push
adc
or
lods
or
lods
cmpsb
fwait
or
gs
dec
shr
ss
add
push
js
icebp
add
pop
jbe
pop
sub
dec
fisttpl
cltd
ss
pop
push
push
lods
outsl
jo
dec
insl
push
xor
pop
into
test
or
jge
push
or
adc
sub
adc
mov
sub
xchg
fildl
mov
mov
dec
aad
add
fs
repnz
mov
sti
add
cli
cmp
sub
aaa
pop
xchg
add
aad
adc
mov
jg
cmp
cmpsl
push
push
ret
jnp
testb
jecxz
pusha
mov
and
adc
cltd
sbbb
sub
insb
repnz
jne
test
popf
and
jnp
mov
jbe
es
pop
ret
ret
sub
cs
xchg
sbb
xchg
xor
pop
mov
mulb
mov
push
pushf
rcr
pushf
bound
jno
push
mov
sub
fidivrl
xor
jp
cmp
loope
sahf
nop
xchg
mov
or
adc
dec
xchg
mov
test
sbb
mov
dec
call
sbb
xchg
mov
aaa
shrb
xchg
pop
les
jmp
sub
lock
jmp
notb
and
das
jl
pop
inc
imul
data16
fcmovu
mov
popf
scas
xlat
add
std
pop
std
orl
cld
cli
or
in
stos
scas
imul
sub
rorl
xor
bnd
or
and
arpl
int3
in
mov
sbb
mov
cmp
pop
test
adc
xlat
int
loop
inc
test
mov
ror
add
sub
lcall
pop
stos
out
push
or
xchg
mov
xchg
movsb
notl
lds
scas
movsl
mov
jnp
pop
cmpb
std
shlb
repnz
aaa
xchg
dec
push
adc
dec
addr16
adc
repz
call
scas
push
pop
xor
push
sbbl
sub
mov
xchg
aaa
fisubl
or
sbb
addr16
inc
sbb
ret
call
ss
sbb
xor
cmpsl
cmp
add
aas
cmp
adc
dec
stc
cmp
imul
inc
sub
mov
mov
inc
stos
xchg
or
push
test
frstor
pop
cltd
push
push
divl
sahf
repz
fs
sbb
fnstsw
xor
mov
pop
scas
mov
cld
outsb
push
clc
inc
cmp
inc
shl
push
or
out
into
lret
decl
lret
push
ret
cwtl
jmp
ret
je
or
adc
icebp
and
mov
dec
dec
cmp
out
jns
pop
iret
in
fdivrp
mov
repnz
hlt
fdivrl
aam
stc
cmp
push
mov
xor
and
cmp
negl
aaa
sub
fnstenv
inc
sahf
lds
jmp
nop
sarl
ret
enter
jnp
mov
add
and
and
inc
pop
jnp
jl
loop
cltd
mov
xchg
and
mov
sahf
jb
jns
pop
test
mov
mov
imul
xchg
addr16
push
sbb
jns
jbe
xor
lcall
jmp
test
nop
pop
sbb
adc
int3
xchg
loopne
sub
xchg
cli
mov
lcall
cltd
sub
sub
and
sahf
popf
mov
aam
popf
das
add
mov
jo
lret
push
sub
imul
cmpsb
cmp
outsb
sub
into
jne
pop
ljmp
out
repz
scas
inc
int3
and
push
jmp
add
cld
loopne
inc
mov
and
pop
and
icebp
jb
mov
adc
imul
push
outsl
fsubr
ja
lretw
xchg
inc
in
xchg
cmp
fwait
and
jo
dec
int3
xor
in
jno
stc
imul
push
sbb
add
enter
fidivs
fs
outsl
notb
mov
lds
les
scas
push
cmpsl
and
mov
jae
lahf
inc
int
adc
sbb
popl
fcomip
pop
add
dec
push
sbb
popf
in
xchg
mov
in
aaa
into
call
mov
rolb
sub
js
imull
outsl
mov
adc
mov
pushf
test
call
xchg
in
addl
or
bnd
xor
into
inc
or
nop
sbb
enter
mov
jae
mov
inc
xchg
dec
pusha
sbb
pusha
sarl
xor
sbb
out
inc
rcll
add
pop
or
sub
push
inc
mov
cld
or
push
sub
movsb
data16
adc
popa
push
in
lds
stc
mov
fs
push
xlat
arpl
add
cmpsl
test
mov
imul
or
sbb
shlb
pop
cmp
push
lds
jno
into
in
dec
pop
fists
push
push
cld
negb
sbb
fwait
and
es
sub
mov
mov
outsl
fstpl
pop
movsb
inc
mov
pop
pop
xchg
fwait
mov
lea
sub
jae
dec
adc
sbb
pop
add
pop
push
testb
lret
xorb
stos
pop
loop
jl
shrl
mov
add
pop
nop
or
int3
push
pop
or
push
mov
push
int3
test
sub
imul
or
pop
mov
jne
mov
adc
je
inc
lcall
daa
fs
bound
pop
hlt
sarl
std
enter
cmc
cmp
pop
cs
pop
jb
pop
xchg
lods
cmp
xchg
pushf
iret
mov
dec
cwtl
aaa
push
orb
dec
pop
pushl
dec
ret
sti
and
aam
xchg
jb
dec
ja
iret
gs
mov
xchg
lret
bound
jge
xlat
imulb
adc
jno
pop
ja
sbbl
leave
pop
xchg
dec
cmp
pop
fisubrl
push
xor
fiadds
out
inc
push
cmp
fsubrp
popf
lcall
in
scas
mov
outsl
lret
add
loopne
jp
inc
mov
lds
jecxz
sahf
add
lods
es
jnp
xor
pop
pop
lea
xchg
mov
sub
xlat
stos
lret
stos
popa
inc
out
loopne
and
das
aaa
ret
xchg
ret
fldt
scas
or
fdivrl
or
xchg
arpl
repz
jmp
arpl
iret
rol
mov
adc
rcrb
mov
cmp
mov
pop
mov
pop
jno
ss
mov
pop
loope
pop
sarl
sub
and
cmpsl
jmp
pop
pop
leave
xor
inc
pop
sub
adc
jmp
jne
pop
cmc
clc
sbb
pop
lret
popa
and
push
movq
mov
mov
pop
dec
jne
lea
lods
sub
loop
call
pop
push
fisubs
mov
xor
xchg
push
jecxz
ret
imul
shlb
push
pop
cwtl
inc
icebp
and
inc
add
xor
push
lcall
and
add
jge
in
rcll
push
jmp
pushf
xor
je
fstl
inc
or
sbb
out
jno
lahf
dec
scas
jae
cs
jno
pop
mov
add
sub
pop
int3
sub
cmovb
mov
push
mov
fidivrs
push
icebp
out
icebp
mov
in
outsb
push
mov
xchg
test
adcb
cwtl
stos
mov
scas
jns
mov
xor
rcl
sbb
jmp
aas
push
xor
aad
fstpt
jnp
loopne
push
test
fsts
pop
dec
stos
sub
cli
sar
push
sbb
shrl
faddl
jmp
jmp
and
loopne
ljmp
adc
cmc
outsl
or
xor
arpl
iret
lret
jbe
out
les
orl
insb
aaa
adc
inc
mov
insl
cltd
pusha
scas
sbb
outsb
fidivs
push
adc
das
push
popl
add
repnz
mov
cmp
add
test
xor
mov
imul
ja
push
popf
call
push
dec
adc
xchg
xchg
clc
out
cltd
add
and
inc
cmpsb
movsl
out
adc
xchg
xor
mov
add
push
in
loop
jg
stc
adc
inc
dec
imul
sarl
bound
cmp
push
imul
icebp
daa
dec
stos
push
push
rcrb
scas
lea
push
or
mov
adc
pop
je
add
loop
lret
clc
inc
in
pushf
mov
push
cltd
xlat
push
pop
cld
add
mov
mov
mov
clc
cmpsb
mov
aad
fsts
mov
jae
xor
loopne
ljmp
mov
aaa
mov
call
mov
ja
pop
jg
sub
pop
cmpsb
and
and
loopne
ds
rolb
sbb
jb
sbb
ret
shr
mov
leave
test
push
add
inc
and
cmp
xchg
aad
movsl
jnp
pop
pop
dec
mov
adc
aam
das
movsl
sti
sbb
jns
lods
cmp
push
outsl
mov
test
xchg
xchg
test
das
xchg
push
mov
movsb
pop
xchg
mov
popf
int
pushf
mov
jno
inc
add
std
jl
fwait
shll
mov
mov
cmp
call
int
popf
pop
push
lods
pop
aaa
push
imulb
aas
outsb
pop
ret
in
mov
adc
lea
imull
call
add
into
ficoms
push
xchg
jnp
sbb
cwtl
cmp
inc
jg
xlat
xchg
jmp
jae
stc
fidivrs
pop
jb
jecxz
push
aaa
repz
aaa
mov
jecxz
mov
inc
pop
in
inc
sbb
nop
xchg
inc
add
into
loop
sbb
rcrl
fldl
mov
pushl
int3
pop
xchg
jp
adcl
out
dec
mov
pop
shl
xchg
fisubrl
scas
cmpsl
push
sbb
hlt
sbb
lret
sbb
pusha
ds
adc
dec
fildll
sub
and
mov
xor
lock
cmp
adc
xchg
and
rclb
adc
rclb
xchg
cmp
and
jo
hlt
test
ss
sub
rorb
mov
inc
inc
inc
repnz
inc
sub
lods
scas
popf
test
cli
mov
pop
lret
push
dec
mov
mov
add
enter
jecxz
lret
sub
in
lret
clc
fldcw
xchg
and
push
pop
sub
aam
xchg
or
cwtl
in
lock
mov
call
pop
int3
mov
mov
sub
and
in
cmp
sbb
sbb
xchg
jmp
fiaddl
push
jae
hlt
or
xchg
push
dec
pop
jbe
mov
ss
aad
subl
into
adc
xchg
jbe
mov
scas
shll
sahf
out
xor
arpl
lea
stos
cmp
push
push
mov
stos
push
rclb
inc
and
repz
mov
daa
roll
jno
xchg
add
and
pusha
call
mov
test
addr16
push
rcr
or
sbb
xor
jno
add
pop
or
push
mov
cmp
shll
jo
ftst
cmp
icebp
inc
test
adc
data16
rcrb
outsb
int3
pop
lea
or
ds
sahf
pop
sub
dec
mov
fimull
inc
pop
lret
inc
adc
out
repnz
add
xor
rorb
cld
insb
add
dec
xor
push
in
aas
push
cmc
repnz
dec
stos
imul
divl
xor
push
out
ds
xor
xchg
testl
or
dec
fisttpl
sub
sti
and
outsl
stos
jmp
das
roll
daa
xor
outsl
and
stc
sbb
jb
dec
pop
in
jmp
lret
inc
mov
push
imulb
cmpl
mov
jecxz
leave
sbb
subb
push
iret
sbb
jb
lret
std
fcmove
jmp
cli
daa
imul
shll
and
test
roll
mul
lock
neg
scas
dec
sbb
cmc
add
call
lods
pop
stos
pop
xor
movsl
mov
push
in
and
imulb
mov
mov
int3
ret
lahf
iret
dec
xlat
adc
jae
jl
stc
mov
mov
sub
xorb
sub
xor
scas
loope
std
call
imulb
jmp
dec
pop
iret
dec
push
cmp
jb
in
mov
nop
inc
das
mov
into
std
paddd
popa
cmpsb
aam
leave
das
movsl
push
enter
push
add
or
inc
in
or
xlat
dec
in
pop
jno
popa
mov
jo
ja
xor
ret
arpl
mov
dec
repnz
dec
shl
ljmp
mul
xor
iret
je
add
pop
pushf
adc
mov
mov
ljmp
jge
pop
and
scas
icebp
cltd
mov
into
and
nop/reserved
lods
jne
push
fsubrs
stc
test
movsb
lret
mov
jmp
testl
or
lods
cmp
repnz
outsl
jecxz
test
daa
frstor
sub
addb
pop
popa
mov
xor
scas
stos
jecxz
sbbb
or
popa
stos
cld
push
pop
mov
cmp
ret
lahf
inc
jge
mov
lahf
cmp
or
adc
ds
adc
push
fcmovnbe
sub
jbe
push
aaa
dec
cmpsl
lcall
jecxz
xor
xchg
mov
jae
jbe
rcll
mov
pop
cli
mov
inc
pop
dec
notl
push
loope
call
xchg
push
into
sub
adc
arpl
lret
adc
int
rdtsc
in
add
cmp
adc
fisttpll
add
sbb
sub
mov
jnp
inc
jp
inc
hlt
add
mov
jmp
cmp
lods
mov
xor
stos
movsb
push
mov
jbe
jmp
and
mov
insl
cmpsl
fsub
jo
pop
lods
jnp
mov
lea
fsub
test
es
adc
dec
inc
and
arpl
cltd
sbb
out
clc
adc
nop
js
mov
imul
and
dec
test
sbb
gs
add
xorb
push
rcl
cltd
mov
setb
cwtl
dec
fmull
xchg
pop
pop
jae
test
fildll
push
mov
stc
dec
and
std
push
clc
dec
inc
hlt
pop
pop
add
add
repz
out
mov
cli
stc
push
pop
insb
inc
in
dec
aaa
stos
mov
aaa
fs
and
loope
push
inc
xor
or
mul
jbe
push
cmp
std
sbb
sahf
or
mov
xor
jmp
int
sub
shl
xor
negb
nop
sbb
inc
stc
lret
repz
push
inc
clc
cld
movsb
add
xlat
imul
mov
mov
push
test
or
jae
ret
mov
test
shrl
jecxz
mov
inc
xchg
sub
mov
lcall
scas
das
push
xchg
scas
mov
dec
add
cmp
int3
xor
cwtd
inc
test
mov
js
cmp
mov
adc
xchg
sahf
jg
pusha
fbstp
add
fs
jmp
add
mov
inc
into
into
mov
adc
lahf
imul
testl
dec
mov
sub
and
mov
fs
push
dec
ret
push
int3
cmp
lods
inc
mov
xchg
pop
jg
lods
and
dec
push
mov
out
cmp
cmc
jle
scas
fcoms
sbb
pop
repnz
jne
test
pusha
stc
adc
sbb
inc
or
or
mov
sbb
and
pushf
xchg
pop
inc
pusha
mov
loop
pop
insb
inc
xor
aad
out
lea
shr
iret
cltd
mov
push
sub
pop
jmp
hlt
jb
inc
cmp
out
add
dec
ljmp
xchg
subb
mov
sti
movnti
pop
jge
jnp
hlt
and
test
cld
sub
mov
xlat
lds
push
push
loopne
cmp
das
pop
pop
jge
add
mov
mov
pop
add
cmpb
mov
mov
daa
inc
ds
inc
mov
dec
cltd
jno
xor
sub
loopne
xchg
sbb
pop
nop
jmp
inc
lock
aam
icebp
inc
inc
dec
jns
clts
adc
arpl
in
lds
popa
pop
test
aas
rolb
scas
mov
push
jae
mov
dec
sbb
mov
lds
insb
xor
cmpsl
test
rolb
lret
cmp
imul
aad
fnstenv
jp
cltd
mov
imul
cmp
in
cmp
ljmp
test
and
jmp
imul
or
and
rclb
xlat
out
sub
cltd
mulb
mov
inc
or
xor
and
push
or
cmpsb
loopne
dec
cmp
cmp
out
mov
inc
fidivl
push
dec
jmp
ret
loopne
jns
xchg
data16
jg
les
imul
mov
cltd
movsb
mov
push
outsb
inc
in
xchg
jae
leave
and
bound
and
jle
jle
mov
or
clc
cwtl
cmp
push
adc
mov
ss
add
insl
adc
adc
enter
imull
xlat
ret
cmp
call
inc
fisttpll
fstpl
adc
push
mov
xchg
jb
mov
pop
movsl
and
pop
in
sahf
aad
dec
ljmp
mov
sbb
sbbb
xor
lods
sbb
jle
ljmp
add
adc
and
pop
stc
aaa
outsl
inc
sub
arpl
in
mov
or
bound
cmp
or
aas
lods
mov
lret
mov
cwtl
mov
adc
cld
sbb
jge
aam
repnz
lods
lods
jecxz
jge
pushf
into
cmpsb
das
cli
sbb
push
jecxz
add
lret
fs
out
aaa
xor
inc
sbb
push
inc
das
xchg
xchg
jg
push
jbe
outsl
lret
cmp
iret
lcall
imul
adc
arpl
int3
popf
push
mov
inc
daa
repnz
clc
arpl
xchg
push
pop
lods
push
and
push
mov
mov
jae
hlt
sub
fisttpll
lock
stos
jno
and
inc
mov
adc
test
push
pop
xor
rclb
or
mov
xlat
out
jbe
pop
jle
mov
sub
inc
xchg
rcr
xchg
or
lret
es
mov
cwtl
mov
cmp
adc
xchg
out
roll
in
test
adc
popf
andl
add
std
jp
add
jmp
jge
les
mov
pop
or
xor
jne
or
or
in
sub
testb
mov
pop
jecxz
inc
cld
adc
mov
testb
cld
mov
fwait
cld
cmpsb
inc
inc
or
pop
jo
dec
inc
cld
ja
add
mov
add
or
in
stos
je
adc
pop
cmp
out
xchg
gs
movsl
mov
sub
or
dec
dec
neg
mov
xor
cmc
inc
or
movsl
inc
fstpt
adc
fcoml
lcall
pop
mov
daa
cmp
cmp
test
or
daa
sub
xchg
push
stos
sbbb
mov
xor
ljmp
ljmp
xchg
in
out
insb
dec
sub
jb
mov
cld
pop
test
jmp
fnstsw
adc
lahf
paddw
or
bound
out
into
xchg
aaa
cld
rcll
xchg
std
xchg
mov
push
sarl
jb
loop
inc
rcl
scas
loopne
add
jecxz
and
leave
into
fs
insl
lods
popa
neg
ja
outsl
push
jg
add
repnz
out
mov
int
mov
xchg
jne
mov
sbb
sbb
ret
sbb
dec
lds
popa
scas
aam
cmc
jmp
cmpsb
iret
or
xor
jge
inc
dec
mov
dec
inc
push
sti
popa
daa
jae
jmp
xchg
int3
push
xchg
js
mulb
shll
stos
jmp
sub
lret
mov
sub
dec
sub
inc
push
int
cs
jne
mov
imul
sarl
lds
or
cli
push
ljmp
lods
pushf
aaa
cmp
andl
adc
stos
mov
mov
scas
cmpsl
xchg
dec
adc
mov
lods
loop
loopne
sub
mov
mov
mov
mov
push
jnp
jae
jae
fs
fbstp
scas
clts
xchg
mov
cld
clc
sbb
ret
xorb
xchg
call
loopne
xor
filds
push
je
std
int
imul
pusha
shl
stos
shrl
lods
lahf
push
inc
and
fdivrl
pop
push
lods
lds
jmp
jle
imul
jmp
mov
arpl
mov
popf
inc
xor
pushl
mov
shlb
sbb
mov
xor
orl
das
ja
dec
cld
scas
pop
clc
push
lret
loop
push
js
cmpsb
push
dec
stos
cmp
sub
mov
leave
sub
out
or
mov
inc
lods
push
mov
jmp
je
aaa
test
jo
push
divl
jnp
mov
sbb
gs
xchg
jb
push
push
adc
subl
dec
rorb
lods
lret
and
inc
pop
xlat
xchg
aas
or
xchg
sahf
mov
cmp
mov
fadds
sub
addr16
push
add
push
cmp
adc
xor
xchg
sbb
test
push
sub
das
cmp
push
ss
insb
mov
stos
mov
out
pop
pop
add
ret
xor
adcb
inc
mov
cmp
std
jg
or
fcompl
jne
mov
shl
outsl
xchg
loope
xlat
add
test
jbe
outsb
and
cmp
dec
icebp
sbb
ljmp
movsl
imull
adc
inc
cwtl
movl
inc
push
stos
inc
sub
inc
into
mov
or
inc
es
add
inc
scas
mov
call
pop
cmp
xchg
push
loope
jbe
mov
std
adc
push
out
add
lret
mov
ljmp
rclb
in
repnz
loopne
jns
pop
cmp
jnp
arpl
add
int3
lds
add
xchg
adc
mov
inc
sarl
negl
insl
lret
jno
or
repnz
mov
in
inc
xlat
int
push
fnstsw
in
push
dec
movsl
mov
mov
lds
adc
scas
sub
jge
jns
loope
adc
je
cltd
mov
std
lcall
adc
shrb
inc
xchg
rcrl
or
ss
push
xor
jg
rcpps
pop
cli
repnz
add
loop
pop
sbb
xor
js
inc
cmpsb
fistpl
or
je
ret
pop
sbb
jmp
cmp
and
notb
or
sub
rclb
pop
jb
ret
jmp
fwait
dec
out
push
dec
js
push
xchg
js
pop
push
mov
xor
pushf
sbb
lret
in
imul
out
xor
mov
add
fcomps
dec
jnp
adcb
pop
rdpmc
mov
jne
pop
and
shll
cmpl
pop
scas
es
out
mov
mov
or
cmp
push
negl
or
mov
cmp
fnstcw
adc
jecxz
push
mov
mov
loope
movsl
ja
ret
daa
cmc
orb
pop
add
pop
sub
jg
mov
jb
imul
xor
dec
fldt
popa
nop
or
out
imul
test
roll
gs
cmc
out
push
mov
int3
sahf
mov
rol
pop
jecxz
ds
aam
mov
mov
xorl
add
xchg
jno
js
ja
les
mov
nop
inc
dec
xor
insb
or
in
lods
xchg
lods
stc
push
sbb
vpunpckhdq
outsl
xchg
ficoms
mov
dec
enter
mov
rcpps
aas
repz
and
ds
push
mov
xchg
addr16
sub
jns
in
imul
lock
jo
loop
or
inc
lods
push
adc
fstps
jge
lcall
test
popa
lahf
movsb
and
xor
testb
mov
mov
push
lret
insl
popf
mov
clc
mov
adc
in
hlt
mov
push
rcr
ud2
cmc
mov
xchg
cmpsb
std
scas
mov
xchg
aam
sahf
mov
call
cli
out
xor
mov
data16
push
jp
push
xor
adc
imul
mov
inc
pushf
add
cmp
movsl
dec
scas
repnz
lea
imul
in
test
das
imul
lcall
sub
repnz
adc
push
aaa
mov
lea
push
push
sbb
icebp
xor
xor
or
adc
jns
lret
subb
mov
cs
push
push
out
enter
test
adc
mov
aas
in
jne
iret
sub
aam
inc
mov
adc
popf
and
cltd
mov
stc
cmp
sbb
or
dec
lahf
dec
mov
jmp
movsb
sub
mov
pop
rolb
sub
rcl
pushf
jge
mov
mov
sub
pop
leave
ljmp
insb
sub
shrl
das
mov
fmuls
or
aas
ror
inc
jg
icebp
popa
adc
sarb
ret
mov
pop
jp
enter
sbb
cmpsl
jecxz
pop
or
mov
test
iret
imul
dec
lahf
lret
pop
mov
jmp
jecxz
xchg
push
sub
adc
mov
ja
mov
jnp
insb
add
out
test
inc
xchg
jle
ret
mov
stos
pop
xchg
popa
pop
rclb
aad
pop
loopne
ret
int
ljmp
stc
cli
push
dec
outsb
jg
push
xor
dec
loop
push
xor
mov
push
sbb
fucomi
mov
dec
aaa
dec
cmp
add
add
mov
xor
clc
inc
xchg
sete
dec
adc
mov
xchg
iret
aad
mov
dec
xchg
std
int
in
std
xor
and
nop
mov
ret
ffree
cli
xchg
and
arpl
lods
mov
dec
adc
aam
mov
lods
add
sbb
push
movsl
dec
outsl
and
incb
lds
add
imul
jle
fistpl
gs
adc
cmp
pop
sbb
rcrl
jmp
clc
jmp
stos
cli
sub
jb
xchg
sub
mov
jmp
push
movsb
inc
sbb
sub
add
stc
orb
pop
sti
dec
stc
fnsave
or
pop
cwtl
pushf
jo
jno
popa
or
xor
jecxz
mov
mov
data16
sbb
push
pop
mov
and
shl
outsb
dec
xor
out
push
daa
inc
and
out
sti
add
xor
scas
adc
cmp
push
push
push
idiv
jg
xchg
xchg
cmc
pop
clc
jns
mov
pop
call
les
movsb
xor
sbb
add
and
imul
enter
leave
iret
dec
sbb
jb
push
cmpsl
and
cmpsb
cmp
inc
cmpsl
adc
les
lods
mov
jge
cmpsb
jp
nop
lock
xchg
test
mov
adc
jo
test
or
cmp
test
shll
orl
int
jmp
lock
add
jno
pop
xchg
scas
shll
cmpsl
fnstsw
cmp
std
lds
gs
cmpb
inc
sarb
scas
jecxz
push
subb
pop
sbb
loope
loopne
jne
iret
in
test
xchg
fistps
stc
xchg
dec
fwait
pushf
movsb
mov
push
push
sbb
push
jl
push
outsl
jle
lcall
dec
push
mov
icebp
leave
sbb
inc
out
rcrb
aam
push
daa
cmpb
mov
jne
repz
aas
mov
adc
jnp
mov
popf
fmulp
jecxz
or
lock
pop
mov
roll
nop
jge
int3
mov
aam
out
inc
test
jne
mov
add
xchg
insb
out
xchg
aam
jmp
cltd
xor
push
inc
mov
adc
aaa
add
push
ror
cmp
adcl
out
fdivs
adc
pop
sbbb
mov
imul
shll
cmc
cmpsl
in
pop
xlat
push
ljmp
es
xlat
pop
test
and
mov
scas
fs
push
sub
cli
mov
arpl
mov
xor
lods
arpl
mov
int3
jmp
jle
push
adc
sahf
mov
sbb
aas
cmp
cmpsb
mov
sub
or
lret
inc
mov
ret
push
sub
fistl
add
mov
adc
push
xor
pusha
xchg
adc
scas
mov
fbstp
mov
outsb
or
fisttpll
push
jns
inc
push
mov
jne
dec
jb
dec
imul
or
jl
aam
outsl
out
sub
aas
dec
inc
xchg
xchg
pop
sbb
mov
cmp
popf
push
and
mov
mov
lods
push
ss
fwait
and
add
je
mov
jecxz
adc
inc
adc
leave
in
add
xchg
and
inc
mov
bound
enter
ds
cmp
fnstenv
hlt
or
in
or
pop
cltd
adc
shl
fnsave
fiadds
in
xchg
push
int
dec
mov
dec
subl
out
dec
fld
inc
mov
dec
push
ljmp
push
push
outsb
adc
mov
inc
pop
jne
sub
cmp
std
enter
xor
mov
sbb
sbbl
mov
das
lds
loopne
jbe
push
mov
dec
dec
stc
xchg
mov
stos
movsb
xchg
dec
aad
dec
dec
clc
stc
incb
mov
std
aad
add
test
jg
jp
in
pop
movsl
cld
jle
loop
roll
rcl
out
sahf
in
push
insl
int
popa
stos
push
lret
sbb
mov
mov
outsl
sbb
decb
xlat
or
add
out
lock
subl
jbe
mov
imull
jg
fdivl
call
negb
push
inc
loopne
lods
inc
js
sahf
sbb
in
iret
out
shr
jl
mov
pop
pop
icebp
cmp
mov
inc
dec
jle
sub
pop
lock
push
xor
sbb
cli
int
sbb
fmuls
sbb
inc
mov
fwait
outsb
imul
imul
fdivr
mov
dec
add
mov
hlt
fdivrp
repnz
adc
dec
inc
mov
or
xchg
out
shrl
jne
stc
mov
xor
cmp
scas
or
sbb
orb
inc
aas
cmp
mov
repnz
mov
xchg
inc
rol
xchg
les
rcll
mov
out
ret
pop
add
push
sbb
dec
add
cli
test
push
movl
call
mov
xchg
lods
mov
sbb
je
repz
inc
dec
mov
xchg
pushw
adcb
adc
lret
sbb
insl
test
inc
xor
pop
pshufw
shrl
inc
data16
leave
lahf
popa
stos
cld
add
mov
sbb
or
popa
rclb
adc
xchg
arpl
push
les
cmp
rorl
hlt
jp
jne
gs
mov
jbe
stc
fwait
decl
xor
jg
mov
mov
ss
xor
int
pushf
inc
jb
xchg
lods
aas
inc
xor
push
xor
sub
sbb
inc
or
movsl
sarb
xchg
loop
fs
inc
adc
stos
in
add
mov
mov
cmp
or
movsb
shr
out
pop
clc
sbb
cs
and
push
int
out
jge
push
ds
ret
cwtl
shll
cmp
loop
jns
aad
xchg
test
push
movsb
xor
pop
cwtl
aam
pusha
iret
xchg
and
adc
lods
hlt
addr16
jmp
lahf
inc
add
ljmp
mov
jp
ljmp
jb
xchg
clc
mull
insl
outsb
repnz
cwtl
mov
cmpsb
outsb
inc
ds
lods
add
pushf
xor
jmp
sub
imul
push
sbb
jae
sbbb
cmp
aad
dec
and
adc
xchg
pop
xor
push
pusha
roll
mov
push
daa
enter
mov
outsb
adc
into
xlat
mov
mov
scas
sbb
ljmp
cmpsb
rcl
je
in
pushf
pop
dec
lret
incb
nop
adc
mov
mov
or
decl
mov
add
inc
inc
std
bound
imul
iret
pop
popa
xchg
cmp
aaa
lahf
popf
mov
outsl
sbb
outsl
sub
mov
ret
push
or
lahf
inc
mov
adc
inc
mov
fidivs
fsubs
rol
fs
sbb
stos
movsb
int3
push
and
daa
mov
sbb
mov
or
dec
dec
jbe
enter
lock
out
xchg
in
adc
cld
pop
jge
inc
push
loopne
inc
cmpsl
dec
sahf
test
push
cmp
bound
jle
adc
or
cmpsl
jno
mull
mov
scas
xchg
lcall
test
mov
insl
in
fs
add
jae
rclb
sahf
cltd
push
iret
neg
jnp
in
ret
or
mov
insb
bound
loope
stc
int3
mov
inc
aas
push
std
pushf
dec
ja
push
push
sub
pushf
je
pop
or
or
fdivl
cmp
nop
or
ljmp
or
rcrl
into
sbb
dec
out
fcoms
lret
cmp
mov
in
dec
adc
scas
push
push
aam
sbb
push
dec
adc
adc
test
pop
pop
pop
sub
ret
aas
gs
mov
dec
out
daa
mov
xlat
leave
imul
xchg
xchg
or
lods
test
pop
pop
test
fst
dec
adc
insl
mov
xchg
push
fldenv
or
xchg
xchg
aaa
in
xchg
scas
add
xor
push
push
stos
cmpsb
mov
xchg
inc
sbb
outsl
in
sub
lret
test
scas
mov
xchg
jg
dec
mov
xor
cwtl
cmpsl
jg
lods
out
repz
es
xchg
mov
xor
pop
or
sahf
fdivl
insb
jnp
xor
mov
xchg
xor
mov
push
movl
jns
jo
pop
lcall
adc
cmp
xchg
xor
lods
sbb
inc
incl
mov
dec
xor
mov
popa
add
fldcw
mov
push
in
jmp
push
enter
dec
xchg
pushf
push
sbb
push
test
or
arpl
outsb
jl
inc
mov
dec
ljmp
jne
jns
sub
xchg
das
mov
fistpll
xchg
movsb
leave
mov
sahf
adc
mov
nop
sbb
cmpb
movl
sub
popa
xchg
xor
lods
icebp
xor
pop
inc
ret
mov
cmp
fdivrl
jb
inc
les
jge
or
jns
je
mov
mov
xlat
jne
or
stos
jmp
mov
mov
xor
jge
inc
ret
cmpsl
test
ret
stc
lods
add
repnz
ljmp
out
mov
dec
movsb
in
jp
notl
pop
imul
or
sub
fnstsw
pop
sbb
add
popa
or
cmp
cmp
mov
rorl
decl
xchg
dec
jle
inc
out
inc
add
jmp
push
cmp
push
dec
iret
lods
mov
cltd
imul
dec
pop
insl
les
sahf
pop
adc
cmpsb
cli
mov
faddl
or
adc
cmp
dec
jl
imul
jae
rcrb
cmpsb
aad
clc
movsl
or
jnp
adc
in
xchg
xor
mov
sub
mov
pop
into
mov
rorb
mov
subl
orb
addr16
dec
shrb
adcb
stc
mov
repnz
mov
add
cmp
incb
andl
js
dec
movb
mov
mov
clc
sub
sub
daa
scas
ret
adc
lea
push
inc
push
cmp
sub
shll
xor
popf
jne
dec
jg
divl
sbb
xchg
push
mov
sbb
std
push
out
xchg
dec
mov
fs
mov
cld
repnz
outsb
sub
inc
mov
pop
jge
xchg
leave
jns
xchg
pushf
cmp
or
mov
inc
inc
dec
rcrb
movsb
mov
nop
jo
or
arpl
and
lcall
jbe
xchg
pop
mov
xchg
loop
xchg
pop
lahf
mov
es
xchg
xor
mov
dec
xchg
icebp
add
pop
jnp
hlt
push
sbb
jecxz
pop
ss
movsb
mov
shrb
repz
mov
dec
shl
mov
fwait
mov
repz
cmpsb
fldenv
int3
lret
cs
lahf
jge
mov
lahf
mov
pop
xchg
lret
loop
ja
fdivr
in
icebp
in
cltd
adc
or
ficompl
pop
mov
adcw
mov
jp
nop
hlt
add
lea
insb
icebp
pop
aaa
lret
test
mov
push
aas
mov
pop
cld
mov
loope
xchg
mov
dec
ljmp
cmp
dec
xorb
pop
lods
sbb
mov
jae
or
pop
or
daa
lock
sub
dec
daa
adc
sub
mov
aas
movsb
cmpb
shr
xchg
mov
jnp
xor
jae
jp
ljmp
stos
cmpsl
fbld
pop
ret
iret
jnp
adc
test
jp
and
enter
push
sbb
add
es
int3
jno
sbb
nop
repz
out
cs
add
adc
pop
add
dec
je
dec
outsb
push
mov
mov
add
in
fcmove
fsubrl
push
dec
out
xor
or
fbstp
jb
enter
pop
repnz
or
sub
adc
push
div
ffree
clc
inc
xchg
in
mov
push
subl
imul
xlat
xchg
andb
stos
out
cmc
in
addb
aam
and
add
jns
sbb
add
jmp
ret
ja
orb
imulb
cmpsb
dec
sub
or
xchg
ret
jbe
out
std
outsl
out
mov
jo
call
jmp
fldcw
or
xchg
rcll
or
cs
in
in
inc
and
add
xor
je
rorb
loopne
call
daa
stos
jae
cs
lcall
lods
mov
mov
ret
add
jb
or
mov
and
jge
hlt
aad
push
cli
or
sarl
xchg
xchg
popa
mov
pop
insl
lock
cmp
negb
sti
sub
pop
ss
lods
rolb
orl
outsb
sbb
dec
in
or
pop
pushf
popf
movsb
xchg
es
imul
xor
popf
add
mov
leave
or
ljmp
push
pop
mov
rcrb
mov
push
movsb
sub
les
ret
adc
movsl
fisttpl
inc
xor
in
iret
or
inc
andl
push
movsl
or
sbb
test
fidivrs
jb
cmp
shll
ds
call
mov
fmull
inc
xchg
jo
repz
jp
iret
pop
lahf
loop
sbb
ret
inc
cmpb
jb
cmpsb
loope
or
adc
ret
loop
ljmp
and
out
out
div
mov
lcall
mov
add
xchg
mov
popf
adc
les
stos
popa
jp
js
in
ret
dec
scas
mov
lret
add
test
js
jno
push
scas
xchg
add
stos
jge
and
mov
sbb
nop
pop
dec
cmpsl
rolb
cmp
ret
mov
frstor
out
nop
cltd
pop
jae
outsb
dec
push
divb
push
xchg
inc
push
stc
popf
mov
push
cmp
xor
push
faddl
rclb
out
ret
xchg
movsl
mov
in
mov
insb
or
outsl
cs
roll
mov
faddl
rorb
test
pop
enter
xor
push
loope
adc
repnz
data16
aas
cmpsl
xchg
xchg
cmp
cld
mov
mov
mov
fs
das
or
jl
fninit
pop
ds
cmp
xchg
or
push
in
jge,pt
and
push
mov
loope
cmp
insl
pop
leave
into
pop
lcall
outsl
dec
jno
scas
int
scas
call
movl
mov
pop
jno
jl
xchg
je
jp
add
mov
icebp
je
adc
insb
repz
idiv
lcall
xchg
xor
cs
and
das
or
rolb
xorb
movsb
jmp
or
testb
sbb
and
test
adc
ljmp
jp
addr16
mov
and
mov
adc
or
lods
sbb
mov
sbb
js,pn
rorb
mov
aam
sahf
out
sub
push
out
mov
sub
sub
scas
adc
xchg
lods
arpl
cmpsl
xor
jo
mov
ud2
insb
lea
in
inc
insb
add
push
add
cmp
mov
push
pusha
mov
sti
movsb
pop
and
loope
xchg
adc
mov
inc
inc
pop
xchg
add
stos
sti
cmp
add
int
or
movsl
cli
aaa
or
add
dec
movsb
inc
xchg
xlat
jnp
lahf
push
lds
aad
mov
sbb
in
sub
jle
shr
push
mov
out
jno
or
stos
imul
add
clc
xchg
ljmp
int
adc
popf
nop
adc
dec
dec
cli
inc
lods
push
out
add
jl
mov
out
cmp
push
mov
mov
ret
rol
inc
mov
pushf
add
mov
and
push
push
mov
retw
in
jnp
sbb
lock
fldenv
push
cltd
sub
test
clc
fdivs
xlat
mov
add
mov
xchg
sarl
mov
mov
lea
sbb
ror
mov
adc
jle
arpl
in
fwait
in
xor
incl
cmp
jb
mov
pop
popa
ret
sub
and
mov
in
outsl
sbbl
jmp
subb
inc
test
add
mov
nop
pop
and
mov
cmp
enter
inc
addr16
lods
and
repnz
pop
mov
push
rol
out
push
lcall
scas
sbb
dec
cs
arpl
sub
lods
push
dec
dec
inc
leave
or
jbe
iret
adc
and
pop
test
lret
cmp
ljmp
test
mulb
sub
in
test
sahf
add
sbb
fisubrl
loop
sub
mov
test
or
movsb
outsl
les
aaa
pop
adc
sbb
test
in
lahf
popf
js
push
icebp
pop
dec
test
inc
scas
lret
dec
aas
fisubrl
dec
inc
enter
pop
test
inc
cld
out
push
test
aam
loope
pop
adc
out
or
in
outsb
lret
mov
pop
adc
mov
ds
push
pop
mov
and
jp
enter
fwait
sbb
and
test
mov
sbb
mov
adc
mov
decl
out
repz
nop
es
sbb
mov
adc
shrb
mov
xchg
xchg
loope
and
sarb
int3
test
inc
sti
dec
sbb
adcl
pushf
sub
jl
mov
cmp
sbb
mov
pop
push
inc
lret
push
mov
add
fcom
mov
pop
fmuls
popa
xor
add
incl
jg
fistpll
sub
sahf
pop
adc
xchg
mov
mov
inc
in
fsub
dec
mov
mov
jmp
or
sti
push
xor
mov
mov
jae
dec
jb
cmp
xchg
sub
and
cwtl
fstps
jnp
mov
insl
dec
sub
mov
fwait
stos
xor
mov
push
stos
cmc
imul
and
pop
sub
mov
adc
push
aas
clc
inc
mov
scas
adc
jno
mov
ror
adc
or
adc
pop
test
push
pushf
arpl
sub
jns
xchg
movsl
mov
inc
ds
cmpsb
test
add
cmp
ja
sub
or
rorb
test
int3
inc
jbe
enter
negl
adc
pop
jecxz
push
fstpl
push
insb
or
int3
cmpsl
rolb
and
cmp
repz
in
ret
pop
mov
sbb
sbb
inc
movsb
push
cs
lods
adc
mov
dec
fimuls
sub
push
mov
cmpsl
test
sub
cmp
rolb
leave
cld
rcrl
shlb
repnz
cmp
rclb
dec
ret
pop
aaa
add
lods
dec
mov
xchg
arpl
xor
xchg
sub
push
lea
adc
xchg
cmp
xor
ds
mov
inc
aas
pusha
ror
xchg
lahf
sub
xor
pop
out
mulb
fisubl
lods
jge
rcrl
fwait
movsl
pop
out
push
pop
mov
scas
mov
enter
adc
dec
outsl
mov
xor
pop
and
test
adc
aaa
and
repnz
or
add
xchg
sbb
shr
sbbb
sbb
mov
adcl
add
dec
fcompl
jae
adc
lea
jecxz
jo
inc
jl
shl
xor
or
leave
or
xchg
mov
xchg
cmc
scas
adc
outsl
push
jne
fcmovb
and
add
lods
outsb
inc
push
mov
xor
or
divb
xor
xchg
adc
mov
loop
mov
mov
add
add
enter
mov
dec
or
scas
push
and
inc
adc
cmp
fidivs
pop
cs
dec
xor
aaa
icebp
repnz
jne
push
push
push
adc
cmpsb
insb
xlat
and
add
pop
jl
pop
mov
movsb
sbb
and
mov
mov
jge
repnz
out
mov
popa
sub
nop
inc
dec
inc
mov
jl
push
and
inc
movsl
sahf
ret
scas
mov
sbb
stos
jge
xor
sub
sbb
fidivrs
jb
dec
popf
mov
scas
lret
stos
mov
xchg
sub
pop
sub
adc
or
lret
push
fbld
cwtl
repnz
xchg
jp
mov
popa
sbb
jl
cld
iret
lret
test
stos
clc
mov
test
jecxz
sbb
push
or
mov
shrl
jnp
call
lret
addr16
dec
das
iret
xchg
mov
out
mov
flds
jecxz
aaa
jno
mov
out
xor
stos
dec
mov
cs
imul
addr16
dec
lods
xchg
cwtl
test
out
ret
lahf
jb
mov
xchg
popa
pusha
jg
mov
repz
inc
add
push
and
push
outsb
sarb
insb
cld
out
xlat
xor
mov
shlb
mov
subb
jle
movsb
xor
jnp
insl
mov
push
test
inc
inc
and
faddl
mov
push
adc
xchg
sahf
or
and
push
imulb
fidivrs
in
jmp
imul
mov
mov
test
sbb
jns
pop
pop
mov
push
loopne
fildl
pop
push
dec
inc
loopne
inc
sbb
aam
fdivrl
and
mov
in
hlt
mov
push
mov
cli
push
stos
cmpsl
mov
xor
test
test
pmaxsw
inc
lahf
ljmp
sub
aam
sahf
cmc
out
xlat
push
orb
addr16
cmp
mov
add
popf
int3
xor
sbb
cmp
inc
xor
sub
enter
sub
xor
inc
syscall
int
popa
les
adc
hlt
mov
push
ret
fcoms
jge
or
daa
jp
jmp
xchg
sahf
popf
std
aas
sar
pusha
adc
pop
mov
cltd
adc
out
jo
xchg
lcall
inc
lret
mov
data16
mov
insl
fprem
popf
sub
xchg
mov
loop
addr16
imul
stc
ds
inc
mov
xlat
adc
mov
lods
mov
mov
jl
adc
adc
sub
jae
xor
faddp
dec
nop
push
cmpsl
jbe
cltd
mov
mov
scas
insb
es
mov
mov
mov
lods
or
std
push
push
divl
jne
cli
pop
cwtl
popa
and
insb
sub
mov
andb
add
into
cltd
popl
je
mov
loop
mov
inc
pop
push
stos
cmp
or
add
mov
push
sbb
push
stc
in
push
pop
fstp
out
or
mul
rol
shl
adc
loop
dec
push
mov
inc
dec
and
cmc
shrl
out
hlt
and
adc
sbb
mov
mov
and
and
jle
mov
js
dec
jnp
imul
incl
shlb
mov
fstp
es
repz
jmp
in
fmull
mov
xor
mov
sahf
aad
ss
pop
nop
pusha
mov
add
adcb
lcall
mov
cmp
popa
imul
cli
jae
jecxz
and
imul
fucomip
mov
xchg
push
pushf
mov
dec
jmp
mov
vcvttpd2dqx
mov
imul
mov
pop
xchg
lret
mov
mov
enter
repnz
std
pop
mov
xor
inc
xchg
adc
pushf
lods
xchg
or
mov
ss
jne
push
fsts
push
jle
test
dec
mov
jo
fwait
sahf
jo
xor
push
and
push
cmp
std
fs
fsubrl
and
inc
cmc
repz
sbb
popa
push
mov
jp
push
and
sbb
push
rolb
imul
aas
mov
pop
insb
mov
jb
leave
adc
aam
loope
xchg
addb
out
mov
lcall
cwtl
cmp
dec
cltd
jmp
pop
daa
push
addr16
jae
adc
bound
sarb
fnstenv
ud2
lds
xor
jecxz
xchg
or
mov
xor
adc
mov
je
pop
cmpsl
scas
jno
aas
xchg
int
sahf
cmc
stc
xchg
adc
xor
adc
adc
pusha
or
roll
push
adc
sahf
jp
lock
ret
inc
aam
sub
fimull
jbe
shll
add
lods
mov
cwtl
pop
ret
dec
outsb
outsl
mov
pop
cltd
pop
test
inc
das
push
pop
dec
xchg
fldenv
js
mov
mov
fwait
pop
jecxz
lret
xchg
push
xor
xor
enter
test
pop
sub
lret
aam
aas
push
nop
in
ret
push
xor
mov
cmp
push
sahf
jne
dec
nop
pop
jmp
repz
repnz
sub
lea
call
xchg
push
add
arpl
rolb
ss
rol
jbe
rcr
hlt
cmp
jge
dec
mov
mov
and
mov
loop
out
sbb
mov
add
mov
jle
dec
push
xlat
mov
sahf
push
push
adc
adc
std
and
xor
sub
or
jl
push
popf
in
xchg
mov
adc
push
adc
pop
popa
xchg
and
lea
es
jb
add
insb
leave
cmp
mov
imul
stc
int
cmp
adc
aas
icebp
stos
jnp
xchg
aad
sub
pmullw
int3
pop
pop
pop
ret
jecxz
insl
fnstcw
sbb
add
daa
xchg
jae
leave
mov
inc
ret
in
cltd
mov
add
add
jnp
pushf
or
fs
aas
xchg
pop
adc
ds
insb
cli
and
out
xor
jmp
xlat
inc
in
lods
adc
sub
mov
sub
call
xchg
sbb
sub
mov
pop
dec
stc
fstpl
ret
out
ficoms
pop
loope
add
cmp
mov
leave
scas
es
adc
lods
dec
inc
addl
mov
sub
pop
add
inc
imul
and
fistpl
mov
clc
cmc
mov
cmpsl
sbb
xor
fildll
pushf
push
sub
scas
dec
sub
push
adc
pop
scas
mov
jbe
dec
flds
das
sbb
call
jns
ficompl
pop
dec
dec
negl
pop
push
orb
ljmp
stos
mov
pop
push
scas
mov
nop
scas
dec
cmpsb
push
cmpsb
or
aaa
jge
ret
inc
fwait
stc
cmp
push
pop
mov
add
mov
dec
pop
push
jnp
push
dec
rcr
insl
add
mov
sub
pop
sub
rsqrtps
test
loopne
insl
repz
xchg
cmp
sahf
and
imul
loop
adc
mov
fiadds
stos
push
loop,pt
mov
or
dec
jbe
fwait
push
sti
insl
adc
mov
sub
xchg
fisttpll
push
sub
in
call
pop
lods
lret
repnz
dec
sbb
cld
inc
adc
aad
repz
cwtl
push
in
xchg
dec
xor
int3
aaa
fists
mov
daa
adc
subb
push
xor
jecxz
shll
add
addb
mov
mov
dec
adc
pop
into
inc
pop
mov
clc
jne
jno
mov
xor
ds
cmpsl
int3
push
fiadds
adc
add
lea
jno
pusha
mov
pop
xchg
inc
loop
dec
adc
xchg
jl
xor
or
pop
nop
mov
cmp
add
mov
lret
mov
xlat
test
popf
aam
sbb
pushf
adc
mov
lcall
xchg
mov
call
jge
outsl
into
pop
dec
and
test
jg
bound
cmp
out
xor
bound
in
xchg
sbb
inc
ret
stos
cli
cmpsb
jne
cli
in
scas
int
nop
or
push
lret
in
xchg
adc
pop
loop
pop
fldcw
push
dec
notb
iret
or
sbb
lea
icebp
jnp
cmp
push
ljmp
loop
mov
jecxz
and
je
shll
or
sbb
lret
push
dec
mov
es
xchg
pop
mov
mov
push
sbb
and
out
jnp
subl
les
repz
xchg
aaa
sbb
movsl
cli
outsb
outsb
test
loopne,pn
insl
cltd
jno
mov
dec
sub
popl
pop
not
xchg
sub
lcall
push
mov
bound
lea
test
jmp
pop
das
loope
push
push
hlt
mov
cs
repnz
gs
in
dec
push
sti
inc
mov
pop
das
lods
and
or
aad
jg
test
add
sarb
out
ficompl
cwtl
inc
push
mov
mov
adc
adc
xchg
and
test
nop
arpl
push
mov
push
ss
xchg
fwait
jno
mov
push
ss
push
shlb
push
movsl
adc
mov
inc
lea
pushf
pop
jp
fsub
jae
aas
pop
inc
inc
out
or
fimuls
push
push
out
lret
dec
cmpsl
jp
push
push
fidivrl
cmpsb
inc
out
jbe
lret
or
xorb
xchg
or
rep
push
xchg
cmp
fimull
loopne
jne
push
push
pop
clc
mov
idivb
push
in
rcll
cmp
xor
mov
inc
push
jb
jg
movsb
faddp
push
fistpl
out
dec
hlt
xor
loopne
repnz
and
ds
dec
inc
push
adc
inc
dec
testl
outsb
insl
jmp
es
iret
inc
movsl
push
cmp
inc
push
sbb
insb
dec
lds
pop
adc
cmpsl
push
imul
cld
mov
push
popf
aaa
push
adc
pushw
and
mov
mov
loope
daa
imul
ljmp
scas
add
sahf
adc
mov
cmpl
loope
sub
jl
movsl
push
daa
mov
stc
lcall
jb
cmp
and
movsl
je
cld
test
sbb
mov
inc
cmc
shll
lods
jp
mov
je
cmc
mov
mov
negb
xchg
adc
push
add
clc
mov
movsb
push
or
jns
lret
mov
dec
push
or
js
xor
dec
or
loope
aaa
dec
fimuls
mov
fs
add
mov
sbb
mov
and
loopne
jmp
and
cmp
sub
insb
xchg
inc
stos
gs
sahf
jl
shll
add
inc
ja
in
cmp
outsl
or
dec
mov
xor
dec
outsb
inc
shl
out
pop
fidivrs
pop
xchg
data16
in
sbb
pop
xchg
lds
jmp
shrb
cmp
sub
mov
xlat
fcomps
mov
mov
std
shrb
push
popf
iret
test
mov
test
mov
cmp
ret
jns
pusha
jae
mov
jle
jp
stc
xor
add
aaa
and
inc
test
xor
push
sub
sub
sub
pop
popf
das
cltd
pop
stos
cmp
incb
cwtl
fwait
inc
call
and
jno
stos
pop
ja
repz
das
js
or
xor
xchg
mov
xchg
pop
sbb
xchg
inc
cli
cli
fsubrs
loope
icebp
outsl
or
pusha
daa
out
aaa
pop
jp
pushf
sub
je
pop
sar
pop
lcall
sub
repz
stc
mov
addr16
or
mov
repz
cmp
push
movsl
mov
repnz
and
jle
mov
xchg
mov
mov
sub
shll
fnstcw
lods
pop
inc
ret
cmp
mov
cld
mov
call
mov
sub
dec
lock
and
sbb
mov
add
jae
les
jns
adcb
int3
mov
arpl
mov
mov
adc
inc
xor
add
dec
adc
jb
fildl
gs
data16
clc
ret
sub
les
inc
mov
inc
in
loopne
push
mov
jg
daa
iret
jne
adc
sahf
imul
sbb
out
jmp
fs
sarl
outsb
inc
adc
in
stos
dec
and
xchg
test
clc
daa
pop
outsl
icebp
lret
fcomps
mov
push
dec
xchg
in
and
xor
inc
inc
rcrb
popa
int3
stc
cli
adc
or
sbb
add
es
inc
pushf
data16
mov
xor
mov
ds
cmpb
dec
cmp
aas
pop
pop
sub
outsl
inc
clc
outsb
adc
adc
cmp
insl
sbb
in
cmp
adc
add
ja
pop
pop
roll
cmp
scas
adc
lcall
xor
ret
aad
data16
addr16
repnz
pop
adc
into
xor
cwtl
add
sub
dec
icebp
sbbl
arpl
aaa
cld
sub
dec
mov
es
add
push
xor
and
dec
jmp
pop
jl
call
les
sbb
jge
inc
jne
aas
push
fwait
movsl
sbb
cmp
repz
adc
cmp
sbb
or
pusha
or
data16
lret
sbb
out
ret
dec
add
jge
xor
sub
dec
mov
shrb
test
dec
jbe
inc
andb
gs
scas
add
imull
pop
test
pop
xor
cmp
flds
xchg
cli
insl
pop
fcomps
popf
push
or
inc
test
aad
push
pop
push
or
and
add
fwait
outsb
push
jnp
jge
rcl
gs
mov
aas
test
cmpsl
mov
ss
sbb
jp
mov
push
pop
pop
shr
push
jae
stos
and
push
inc
shll
dec
out
xchg
mov
mov
scas
and
mov
and
jge
lret
nop
mov
call
and
jo
xor
pop
xchg
mov
divb
les
out
xchg
and
pop
cmpsb
out
jmp
cltd
dec
dec
jae
xchg
dec
or
or
cwtl
in
xchg
out
pushf
or
dec
in
fiaddl
les
adc
test
or
pop
out
dec
mov
dec
stos
lods
push
movsl
hlt
stos
pushf
sub
push
repnz
jmp
push
push
inc
ljmp
push
xchg
es
mov
mov
inc
loopne
and
and
mov
loop
add
mov
leave
mov
pop
xchg
cmp
mov
mov
push
xor
adc
sub
add
cmp
int3
mov
cwtl
and
and
pop
data16
mov
add
jb
adc
call
push
mov
icebp
dec
hlt
xor
fsubs
xadd
cld
inc
out
jne
xlat
jmp
mov
adc
cmp
mov
cwtl
ds
stos
lahf
adc
in
xlat
push
clc
mov
jae
dec
push
fcos
sbb
or
aaa
xchg
fdivl
call
jno
mov
inc
ficoms
lret
jmp
jmp
repnz
scas
sub
xchg
data16
dec
outsl
mov
or
imul
xor
jge
dec
push
lcall
ljmp
ljmp
leave
add
loop
clc
pop
stos
fisubrl
add
flds
pushf
jo
je
ljmp
int3
adc
or
sub
pusha
inc
cmp
mov
pop
mov
repz
pop
sti
mov
mov
jae
adc
pop
mov
popf
cmpsl
sahf
add
fsubr
mov
aad
inc
mov
xchg
mov
sar
je
lret
mov
out
push
enter
mov
cmp
adc
push
shrl
jno
xor
mov
xchg
testb
jne
cmc
out
stos
jne
test
mov
push
insb
jge
out
mov
ljmp
nop
add
mov
ret
enter
add
adc
xor
fdivr
lret
or
scas
sbb
pushf
fs
push
aas
lock
jg
mov
clc
inc
jmp
mov
cmp
psubq
aam
daa
test
mov
int
aad
mov
mov
mov
imul
jns
cmp
iret
rcll
outsl
xchg
pop
sub
out
loope
push
movsl
mov
xlat
scas
fwait
inc
rol
jbe
push
inc
insb
sub
shlb
insb
cmpb
orb
ror
or
xor
sub
adc
sahf
ljmp
lea
pop
mov
pushf
imul
jl
mov
loope
in
mov
repnz
cltd
adcl
das
stos
dec
inc
test
arpl
call
lret
lret
xchg
sbb
and
jp
add
or
in
push
xchg
fidivrs
int3
call
pop
jb
inc
popf
xchg
repz
aas
pop
fildl
mov
enter
pop
inc
mov
push
mov
mull
stos
dec
mov
mov
hlt
sbbl
push
sub
cltd
xor
iret
mov
sahf
fsts
inc
dec
pop
sub
rcr
cmp
adc
pop
and
lcall
dec
dec
ret
mov
xchg
xor
lds
cmc
cmp
cs
mov
orb
cmp
add
stos
fisubs
mov
scas
cmp
or
add
insl
lcall
pop
out
push
xchg
and
mov
jmp
lret
jb
mov
nop
pop
and
inc
mov
push
cmp
xor
rclb
or
out
test
inc
out
ret
rcrb
cmp
and
test
push
push
sub
or
inc
mov
lock
xchg
or
sub
mov
ljmp
pop
jne
in
in
lds
addb
ljmp
loopne
xor
dec
ficoms
jns
adc
test
std
xchg
out
movsb
loope
cmp
mov
mov
mov
jmp
lock
aaa
xchg
xor
and
inc
vmovapd
lahf
insl
ret
xor
cmp
pop
leave
push
arpl
dec
testb
xchg
or
lods
popf
aam
cmp
xor
and
push
jp
xor
inc
stc
dec
jo
sub
push
add
ret
and
mov
cmovl
jg
mov
push
mov
lret
or
push
add
popf
cltd
stos
and
iret
stos
fcmovbe
push
arpl
or
scas
fcomip
hlt
jmp
aaa
loope
in
mov
fs
jle
lea
imulb
or
in
or
out
add
test
and
jmp
mov
add
filds
outsl
loop
test
hlt
fisubrl
enter
movsb
stos
fisttpl
adc
sbb
mov
sbb
orb
in
ja
bnd
pusha
and
test
sub
cmp
insb
pop
push
cli
and
xor
cmp
rorb
xor
sbb
les
cli
sbb
xchg
xorb
inc
jmp
push
pop
fsubs
in
fcmove
mov
sar
mov
sti
cmc
filds
loop
sbb
pushf
stos
fwait
out
popa
je
neg
cmp
cmpsb
mov
add
sbb
out
test
sbb
rcr
pop
jecxz
jno
cmp
xchg
imul
xchg
repnz
ds
int
or
out
adc
sbb
loopne
jp
scas
add
mov
das
pop
jl
jmp
mov
in
cmp
dec
sub
imul
shl
jl
mov
cmp
cs
push
sub
mov
mov
jmp
mov
movb
scas
imul
lods
mov
xor
and
and
mov
fildl
lahf
mov
add
fwait
mov
icebp
xor
or
xchg
xchg
daa
dec
inc
and
aas
movswl
or
imul
sti
fstpt
inc
push
xchg
xlat
dec
mov
xor
push
in
ds
sub
push
and
dec
insl
lret
test
int3
rcr
ljmp
jbe
sbb
pop
or
cmc
pusha
or
mov
push
data16
add
mov
inc
mov
xchg
lock
xor
push
and
iret
xchg
sahf
into
insl
push
mov
xor
js
test
xchg
dec
xchg
pop
gs
ficoml
push
cmpsb
sarb
mov
arpl
sbb
mov
mov
int3
mov
sub
fstp
dec
pushf
fnstsw
mov
push
add
xchg
repz
mov
mov
jnp
insl
dec
add
mov
out
scas
mov
fs
je
jo
or
pop
push
mov
jae
push
or
popf
xor
mov
pushl
cltd
scas
dec
xor
into
dec
xchg
xchg
rcrl
dec
mov
shlb
aad
ljmp
testb
xchg
int3
jne
sti
pop
inc
push
test
pop
mov
mov
popf
shlb
xchg
aam
lret
pop
in
dec
imul
in
popa
repnz
cmp
in
cmpsb
test
lods
test
or
mov
das
insl
shr
sbb
or
sbb
jecxz
das
mov
mov
mov
and
adc
movsb
mov
pop
jl
and
aas
xchg
loope
fldcw
fdivl
ret
cmp
jae
and
dec
es
jno
or
ds
bound
cmpsl
inc
sub
or
mov
mov
xor
add
xor
cwtl
sbb
mov
repz
mov
test
jo
jmp
jbe
js
in
jecxz
das
pop
cmp
insb
inc
clc
xor
ret
pop
xsaveopt
in
pop
imul
or
inc
movsb
push
imul
clc
insl
sub
aaa
mov
jno
rcpps
sbb
out
xchg
pop
jmp
and
pop
int3
jle
pop
lcall
xchg
ljmp
addl
xchg
movsl
int
mov
push
pop
adc
adc
cmc
mov
jo
dec
inc
out
xchg
add
xchg
imul
es
insb
push
jo
repnz
xor
push
jo
rclb
and
inc
cmc
je
test
into
rorb
push
pop
scas
loopne
xorb
push
cltd
mov
cmpsb
stos
and
pushf
push
lahf
push
push
xor
fs
cli
addr16
xchg
leave
xchg
jge
xor
dec
loopne
stos
cmc
inc
sub
lret
inc
fildl
push
adc
int
mov
inc
int
inc
iret
adc
and
and
imul
mov
inc
mov
outsb
xchg
pop
int
sbb
stos
sbb
push
jbe
push
dec
out
xchg
inc
add
fnstcw
push
aad
jecxz
pop
fldt
inc
out
in
dec
mov
inc
inc
pop
adc
push
xorl
pusha
fsubl
hlt
mov
xchg
cmpsb
mov
push
bound
ret
pop
jmp
inc
gs
mov
pop
jmp
std
lcall
and
jns
mov
or
unpckhps
push
adc
dec
cwtl
sahf
call
sbb
cmp
test
call
lcall
cmp
scas
data16
popf
fs
test
in
cwtl
sti
in
repnz
xor
dec
fistps
shlb
pop
lods
sbb
out
cmp
push
sarl
adc
outsb
negl
ljmp
add
inc
iret
out
mov
or
sti
pop
inc
jo
jmp
push
dec
repnz
int3
push
ja
sbb
mov
in
mov
xchg
dec
and
mov
pop
xchg
push
xor
test
stc
sub
incl
into
out
test
inc
dec
inc
sbb
dec
out
or
xchg
addr16
jmp
aad
test
mov
std
dec
mov
jp
pop
add
cmp
xchg
cld
adc
xor
mov
enter
fisubrs
stos
les
loope
sbb
movsl
xor
sub
fisttpll
aaa
aad
js
fwait
arpl
lcall
decb
repz
and
popf
adcl
mov
push
pop
sbb
mov
enter
jmp
sahf
sar
sarl
cmp
sub
mov
aam
ror
mov
cmc
xor
xchg
mov
pop
pop
int3
or
pop
or
sbb
pop
les
push
sahf
xor
jmp
orb
xchg
js
push
aad
xchg
cmp
lds
cmp
or
or
in
push
mov
outsl
xlat
gs
andl
pop
loope
xchg
ffree
jbe
into
xchg
xor
mov
cwtl
in
sub
mov
cmc
push
pushf
mov
inc
mov
jl
xchg
push
push
inc
clc
scas
ret
movsb
imul
dec
cmp
scas
fidivl
push
cwtl
imul
mov
int3
mov
insl
xchg
dec
pop
daa
ret
push
xorb
into
in
fcompl
aaa
or
dec
cmp
jle
adc
mov
int3
in
das
aaa
mov
mov
sub
cwtl
imul
ja
cmp
cmpb
sub
ret
hlt
mov
jl
test
ss
cmp
dec
decl
jno
repz
ret
rcr
pop
rol
std
xchg
test
loope
sub
out
sub
ja
fistpll
push
inc
hlt
fs
mov
stc
adc
mov
sub
dec
call
and
repz
lea
dec
jmp
xchg
ja
ss
repz
dec
inc
or
fisubrs
pop
pmullw
clc
andl
fstl
mov
sbb
sbb
out
dec
repz
mov
mov
jle
shlb
mov
xor
in
popf
in
add
cmp
push
mov
push
xor
xchg
scas
mov
jp
pop
andl
and
lods
pusha
int3
mov
cmpsl
push
add
or
jg
sbb
jo
in
mov
sbb
rep
shll
push
jge
stc
testb
shlb
or
sbbb
test
sbb
push
inc
in
or
mov
xor
lods
sarl
dec
fsub
xchg
jne
ret
add
mov
push
push
inc
adc
pop
ja
push
ljmp
sub
icebp
or
adc
mov
lods
pop
inc
dec
dec
je
push
sarb
inc
ja
loop
mov
xchg
dec
add
xlat
lea
fisttps
iret
jl
mov
lods
sti
fs
in
mov
push
pop
cli
aas
inc
test
aad
inc
addl
rorb
ficoms
xor
mov
jns
push
lods
jno
mov
iret
push
mov
repz
pop
jbe
shl
fidivrs
jno
xor
mul
sbbl
pusha
sub
int3
mov
bound
repz
dec
in
jne
lret
fwait
mov
mov
div
push
clc
mov
std
fnstcw
subl
iret
jae
out
mov
stc
fiadds
ss
sbb
mov
mov
add
shll
mov
inc
or
pushf
adc
js
out
xor
cmp
sub
xor
mov
mov
scas
xabort
dec
imul
inc
loopne
cli
add
jb
jno
pushf
testl
icebp
aaa
push
loopne
pop
fimull
addr16
aaa
in
mov
aad
inc
lcall
sti
iret
dec
and
mov
xchg
jae
adc
jbe
xorb
cmpsb
fnstcw
push
das
sub
inc
xlat
mov
outsl
xor
mov
int
js
pop
lret
mull
movsl
adc
mov
and
aaa
jle
pop
cs
mov
jnp
aad
arpl
jp
cmc
mov
adcb
fnsave
inc
aaa
xor
rolb
fsubl
gs
in
popa
imul
push
pop
idivl
and
shrb
cltd
push
add
addl
aaa
pusha
ds
xchg
lods
and
insb
and
sbb
mov
fcoms
jae
inc
movsl
sbb
lret
cs
cmp
xor
mov
stos
rclb
outsb
in
cmp
lea
imul
cwtl
movsb
in
imul
out
mov
adc
sbb
inc
loop
xchg
out
pop
out
scas
stos
dec
in
mov
dec
xchg
add
int
or
dec
push
jns
lea
adc
pop
add
add
mov
xor
loop
icebp
xor
in
addr16
mov
cmp
cli
cwtl
insl
inc
rorb
jne
std
aad
xor
out
jecxz
mov
jb
mov
fcoml
aaa
mov
and
and
mov
cmp
aas
dec
imul
inc
out
adc
mov
ret
call
stc
mov
jge
fsubs
test
movsb
test
dec
push
jb
add
shll
and
cli
addb
sub
add
hlt
inc
out
xor
push
or
and
mov
push
xorb
push
or
dec
cmpsb
dec
test
aad
and
pusha
test
fstpt
adc
popa
mov
mov
lret
addr16
adc
fistps
mov
push
mov
inc
daa
inc
add
dec
sti
or
ffreep
jo
jbe
inc
sbb
iret
das
imul
mov
or
sub
push
popf
cmp
inc
push
call
insl
pop
pop
sub
inc
cmp
call
inc
push
xor
push
test
jmp
pop
stos
push
lret
and
xchg
xor
and
add
inc
cmp
bnd
adcb
nopl
sub
pop
mov
inc
std
loop
clc
cli
inc
rolb
idivb
jne
testl
rclb
cltd
push
insb
adc
jno
dec
or
xor
mov
xchg
pop
push
jae
mov
aad
out
out
iret
sub
cmp
cmpsb
sbb
mov
jbe
mov
xchg
dec
cmpsl
mov
int
nop
add
jne
out
dec
flds
cmpsl
jl
divb
fldenv
inc
push
enter
dec
xchg
out
fldl2e
shl
sbb
mov
stc
imul
call
dec
loopne
aas
sbb
int3
push
out
lret
xchg
cmp
bound
jb
mov
cmpsb
cmp
jne
js
addb
sbb
testb
stos
lock
mov
dec
cmpsl
mov
pop
xchg
jo
jecxz
or
out
jmp
jg
cmpb
or
mov
jnp
movsl
xlat
mov
pop
fwait
mov
mov
pop
xorb
rcrl
clc
mov
sub
scas
dec
inc
roll
int3
push
xchg
mov
lahf
popa
xchg
in
lods
into
push
pop
shlb
hlt
sub
insl
sub
pop
ffreep
cwtl
mov
rcl
pop
pusha
jl
jmp
xor
notb
push
sarl
jns
cmp
push
fdivs
stos
je
dec
xor
cmp
inc
test
mov
jle
lds
btsl
xor
push
out
xor
mov
xchg
mov
mov
stos
add
or
xchg
sarb
adc
nop
sub
push
lret
shlb
imul
cmpsb
popf
dec
repnz
pop
or
push
in
sub
inc
jge
jl
mov
dec
push
ds
jle
add
jno
sub
mov
jge
xor
jns
push
test
jge
xchg
ret
dec
mov
xchg
sub
pop
outsb
rorb
loopne
rorl
les
inc
pop
mov
sbb
sbb
jmp
push
xchg
cmpsl
push
add
xor
cmp
negl
add
mov
in
mov
and
cmp
insl
xabort
lock
jnp
push
daa
cwtl
pslld
push
add
sub
jns
dec
adc
xchg
in
jle
loopne
mov
cmp
lock
aas
mov
pusha
into
push
test
add
adc
and
push
movsl
or
stos
ja
lock
mov
ret
lcall
sti
pushl
sub
xor
sbb
mov
push
sbb
out
sbb
icebp
push
pusha
out
mov
out
into
or
or
pop
mov
mov
into
pop
inc
mov
jne
pop
mov
push
in
lods
mov
test
ret
add
jbe
ret
xchg
pop
or
xchg
adc
jae
sub
les
inc
iret
sub
pop
ss
inc
shl
xor
lea
bound
or
xchg
xor
test
xchg
pop
mov
mov
and
sub
iret
call
ss
aaa
dec
inc
mov
outsb
sub
inc
or
jge
clc
int
and
xor
lods
outsb
mov
into
mov
sub
mov
rcll
jecxz,pn
add
fiaddl
repnz
fsub
sub
mov
hlt
fs
inc
xchg
or
enter
or
xchg
inc
nop
test
std
out
mov
sub
mov
outsb
ds
pop
push
push
mul
mov
imul
out
mov
dec
cmc
pushf
fisttpl
or
jb
xchg
ljmp
dec
in
cli
lcall
dec
sbbb
loope
rolb
cli
add
fisubrl
adc
inc
mov
sub
lcall
addr16
inc
push
mov
cmp
into
std
and
sahf
push
mov
mov
push
xor
mov
andl
out
or
aad
adc
out
inc
aad
push
hlt
sub
call
daa
int3
jl
test
xchg
leave
adc
or
dec
in
or
and
jge
lods
ljmp
xchg
mov
add
dec
mov
cmovo
out
push
mov
cmp
pop
mov
dec
fisubrl
jle
cmp
movsb
mov
adcb
pop
enter
pop
aad
fdivrl
push
dec
ds
cmp
jp
push
xchg
xchg
testb
repz
dec
hlt
orb
repnz
xchg
jnp
scas
and
mov
fiadds
shl
dec
pop
add
pop
mov
cmpsl
jae
scas
sbb
or
movsl
push
rolb
sbb
xchg
adc
into
cwtl
int
faddl
cmp
lcall
les
xor
pop
outsb
adcb
cwtl
dec
mov
lret
sbb
mov
jmp
bound
popf
mov
mov
pop
pop
sub
push
dec
loop
aas
dec
or
add
pushf
mov
je
lods
cmp
enter
out
xor
sbb
fmul
pop
lret
push
jl
das
pop
int3
and
je
in
pop
mov
pop
faddp
xchg
and
aas
jo
jg
mov
and
loop
lods
dec
xor
add
in
lds
dec
jmp
lret
cwtl
imul
cld
jmp
movb
sub
int3
repnz
ljmp
push
jle
sahf
fdivrl
dec
lret
jo
jle
sub
ret
pop
adc
sti
sbbl
pop
fsubs
fdiv
je
lret
rorb
push
adc
inc
sbb
cltd
subb
stos
inc
sub
leave
call
xor
cmpsb
in
dec
test
scas
fisubrl
movsb
xchg
jmp
stos
dec
mov
stc
cltd
subl
mov
scas
dec
sub
fidivl
adc
cmp
int3
pop
inc
pop
and
mov
adc
sub
cmp
subb
sarl
xchg
sub
and
icebp
jge
jae
mov
mov
mov
fiadds
cmp
incl
lret
jmp
aam
sbb
add
data16
loop
addr16
jns
inc
push
push
repnz
int3
push
aam
add
lahf
lods
pop
test
out
cmp
cmpl
incb
inc
repz
jbe
call
aad
adc
cmpsb
adc
in
fdivrl
stos
ret
lods
pop
fldenv
mov
xchg
jnp
push
jecxz
jg
pop
cmp
js
outsl
cltd
dec
cwtl
jp
jnp
bound
lds
push
pop
mov
dec
fists
fcom
aad
ljmp
sti
lret
movsl
adcl
cmp
pop
iret
ja,pn
in
pop
mov
int
push
xchg
frstor
sahf
movsb
movsbl
cmc
mov
adc
mov
movsl
dec
lahf
int3
les
ret
dec
dec
incl
sbb
sub
adc
daa
inc
push
push
dec
jb
rcll
pop
jne
mov
inc
adc
out
call
aas
push
imul
test
dec
and
inc
pop
sar
mov
loopne
das
pushf
mov
add
xor
pop
cmp
xchg
fsubl
fmull
out
adc
aas
fisubl
test
popf
sbb
popl
dec
xchg
call
xor
xchg
mov
call
cmpsl
adc
imul
push
push
and
rcl
mov
je
xor
adc
cmp
cmpsb
nop
jp
mov
cmp
cmpsb
mov
jns
mov
xor
inc
fs
jo
xchg
call
int3
psrlq
loop
xchg
icebp
inc
lock
add
xchg
cmpsb
stos
push
out
sbb
bnd
in
fcomps
sub
test
pop
xlat
loopne
in
pop
cmp
pop
leave
push
fisubl
sti
les
js
mov
in
test
lods
fistl
adc
jb
clc
sahf
into
mov
push
and
cmp
outsl
and
inc
pop
add
cmp
in
mov
sub
out
xor
sbb
arpl
pop
sub
mov
mov
repnz
cmpsb
lock
in
push
lods
xrelease
les
push
sub
xchg
cmp
mov
mov
movsl
bound
push
sahf
bound
test
js
das
xchg
daa
insl
lahf
stos
in
inc
shrl
roll
jmp
arpl
repz
add
push
push
daa
xchg
sbb
cmc
je
pop
sub
es
int3
out
scas
lods
cmpsl
mov
loopw
imul
fsts
fistl
cmp
fimull
aad
test
sbb
test
je
fs
mov
mov
sub
es
shl
add
scas
mov
sarl
inc
inc
sbb
xchg
jecxz
push
pop
adc
rolb
incb
repz
push
add
cs
xchg
fcmovbe
nop
ss
mov
cmp
outsl
das
mov
push
inc
enter
jo
shlb
pushf
cmp
call
mov
sub
dec
mov
cmp
jmp
cmc
rcl
mov
cmp
rcl
xchg
pop
mov
std
aam
jecxz
inc
mov
stos
inc
pop
push
xor
pop
mov
pusha
insl
mov
mov
imul
push
xchg
fs
pop
pop
adc
hlt
sub
xchg
jno
mov
jb
sub
stos
lock
dec
icebp
adc
mov
es
jne
sub
mov
pop
cmp
lret
xor
cltd
cmp
or
stos
sbbl
mov
outsl
pop
push
shll
sarb
sti
cmpsl
xchg
out
add
mov
mov
nop
cmp
mov
jle
jae
aam
clc
or
add
pop
inc
xor
aam
or
sub
daa
mov
in
jo
xchg
or
cmpsb
add
sub
notl
mov
movb
push
addr16
xor
ss
mov
push
dec
dec
flds
ljmp
and
add
jns,pt
add
loopne
movsl
loopne
imulb
adcl
pop
xchg
sbb
psubw
dec
pop
add
pop
xchg
leave
mov
fldcw
pop
jmp
dec
outsb
scas
lahf
push
jg
les
out
or
and
jno
add
fs
adc
xchg
jne
sub
sbb
filds
dec
push
imul
sub
lea
sbb
iret
in
jl,pt
add
jmp
mul
xlat
adc
mov
mov
or
jmp
mov
push
fs
repnz
mov
mov
leave
cmpsb
and
out
cmp
and
sarb
adc
rclb
test
imul
rcr
aas
lret
clc
and
ja
jo
sub
jns
mov
dec
push
outsb
aaa
push
mov
or
mov
and
xchg
cmp
cmpsl
sbb
addr16
or
pop
lahf
movsl
ljmp
mov
pop
pcmpgtb
in
rsqrtps
negb
ffreep
repnz
xor
ljmp
sbb
icebp
or
dec
cmpl
leave
mov
shl
fnstsw
mov
or
add
ss
fisttpll
enter
xchg
adc
mov
xor
test
dec
jp
mov
or
jmp
mov
imull
shlb
lods
inc
lods
stos
lds
xor
pop
js
das
mov
jg
testb
sbb
push
fistpl
jge
xchg
mov
loope
iret
mov
popa
jnp
pop
hlt
movb
cmp
fisttps
inc
je
xor
jecxz
or
push
sub
in
xchg
push
jnp
mov
push
fistl
std
mov
cld
imul
sub
jbe
and
xchg
xor
fwait
shll
xchg
aas
mov
loopne
pop
fcmovnb
les
aaa
jnp
adc
cwtl
adc
movsl
jbe
popf
jae
or
lea
push
and
jecxz
xchg
imul
and
mov
jmp
pop
dec
dec
enter
xor
aam
rorl
out
fprem1
call
push
in
xor
bound
add
mov
push
and
mov
fisubrs
je
lea
jns
sbb
dec
negb
adc
aam
mov
or
add
sub
cmc
dec
aam
in
hlt
jge
cwtl
cmp
mov
popa
pop
inc
jo
dec
int3
repz
and
orl
add
rorl
dec
pop
test
push
popf
inc
jbe
cmp
adc
dec
pop
mov
add
jl
les
fiaddl
cmpsb
test
jae
mov
jmp
pop
jle
mov
data16
cmp
pop
stc
or
fcomps
mov
cmp
loope
rcrb
dec
jl
mov
fwait
nop
xor
ja
jns
xor
jge
int
push
mov
xchg
and
pushf
push
gs
ja
jl
lods
xchg
push
lret
rol
in
jns
out
sbb
push
jl
loopne
addr16
aam
and
ds
cmp
std
push
mov
ficomps
mov
dec
inc
mov
dec
inc
js
mov
notl
rorb
fdivrs
test
dec
sar
mov
adc
lock
sbb
jno
mov
mov
and
iret
out
jmp
cmp
and
mov
mov
aas
xlat
out
push
aam
push
mov
xchg
xchg
pop
xchg
and
adcl
jae
lock
jae
lcall
sub
pusha
and
ja
fwait
stos
add
push
imul
pop
sub
outsl
xor
push
cmp
ds
xor
into
or
jae
sbb
js
outsb
in
nop
dec
cmpsb
cmc
popfw
adc
xchg
dec
inc
mov
push
cli
mov
hlt
lahf
xchg
and
movl
mov
loope
mov
and
mov
dec
cmp
xrelease
mov
sti
sub
cmp
lcall
or
pusha
dec
out
and
inc
xchg
mov
out
cltd
dec
sbbl
mov
sbb
nop
ds
xchg
or
jo
jmp
xor
sbb
lret
inc
ret
pop
movb
and
cmp
gs
pop
sub
scas
inc
pop
insb
lds
das
fdivrl
dec
int3
cltd
ljmp
push
push
or
cltd
pop
jecxz
jns
daa
mov
sbb
jne
cs
adc
push
rcl
ss
mov
add
add
test
cmpsl
cwtl
shrl
fwait
push
sbb
fmul
dec
fcoml
inc
lcall
cmp
lods
sar
mov
out
sbb
sahf
and
jl
jmp
xchg
lret
les
or
or
sub
aaa
lock
xchg
cmp
ds
sbb
ffreep
lret
push
lret
dec
sbb
out
sbb
mov
mov
andl
sub
mov
sub
mov
vmwrite
imulb
inc
mov
in
dec
test
dec
push
int3
in
popf
mov
orl
jbe
inc
hlt
jmp
xchg
lret
sub
cmc
shll
adc
sbb
mov
push
push
xor
rcrb
andl
push
push
dec
in
test
fwait
adc
stos
mov
js
mov
or
jmp
fs
dec
int
in
outsb
dec
mov
inc
jbe
xchg
out
mov
sub
lds
push
xchg
fcoml
das
out
frstor
andl
outsb
mov
add
mov
lahf
fsubrp
pop
mov
mov
jecxz
push
out
shrl
in
or
push
imul
add
adc
dec
jl
inc
lock
dec
stos
jbe
mov
mov
adc
test
mov
and
sbb
cmp
icebp
roll
mov
push
pop
stos
or
push
loop
push
mov
push
scas
lods
test
ljmp
daa
stos
jge
cmp
mov
jno
mov
add
pop
or
sarl
fcmovnb
xor
cmp
fidivrs
leave
mov
and
gs
and
ret
mov
or
mov
adc
test
mov
lods
repz
aas
mov
add
int3
jae
sarb
sbb
and
add
ret
jl
mov
testl
sahf
js
fcmove
pop
add
rolb
mov
sub
pop
jnp
cmp
mov
dec
pop
sub
sbb
notb
mov
cmp
dec
fwait
push
cmpsl
in
pop
jno
cmp
enter
adc
push
ss
mov
fisubs
sar
cmp
addr16
pop
sbb
cwtl
cmpsb
mov
popa
cmp
in
fwait
pop
leave
cmp
xchg
shrl
imulb
xchg
sahf
out
hlt
add
adc
mov
inc
out
out
stos
mul
push
xor
stc
fsubs
pop
lret
aad
cmpl
loop
repz
jne
mov
pop
ret
sti
addr16
mov
shrl
int
mov
repnz
out
fisubs
insb
mov
loop
cmpl
iret
xlat
mov
insl
cld
lods
cmpsb
cwtl
xchg
or
sub
and
addr16
add
inc
daa
pop
in
mov
mov
push
enter
mov
iret
lea
sub
mov
xchg
out
push
daa
movsb
inc
cmpsl
mov
lock
aas
xchg
das
into
sbb
lahf
leave
mov
popa
out
imul
mov
mov
gs
loope
add
mov
pop
xor
stos
mov
jne
dec
dec
mov
xlat
xchg
jge
fcoml
cmp
adc
pop
mov
stos
mov
aaa
jp
lahf
inc
pop
push
xor
test
nop
scas
movzwl
xchg
jb
fmull
mov
add
adc
push
pop
loopne
jne
dec
jno
ljmp
or
pop
shlb
lea
outsl
jge
add
nop
jo
sbb
mov
mov
jmp
sub
dec
mov
sahf
mov
fs
out
out
aaa
push
mov
dec
mov
nop
aad
push
push
popf
adc
jo
xor
pushf
enter
jnp
push
push
ljmp
clc
adc
orb
in
sub
repnz
adcb
add
out
cmpsb
push
pop
cmp
push
jmp
mov
lret
fldt
scas
xchg
push
xor
cmpsl
fsts
decl
xchg
add
das
ds
push
dec
sub
out
or
repnz
mov
int
js
movsl
mov
shr
sub
inc
and
cs
out
xlat
subl
xchg
xlat
iret
lret
dec
and
pusha
xor
inc
pop
mov
ror
mov
stc
push
mov
scas
add
imul
mov
lds
les
and
xchg
in
push
mov
inc
mov
out
lea
adc
pop
inc
ljmp
xor
sbb
lret
aam
push
or
pop
inc
jg
lods
xchg
in
mov
add
pop
sbb
push
filds
pop
pop
xchg
dec
cmp
lods
rclb
sub
push
lahf
aaa
imul
pop
aam
cmp
loop
dec
imul
xor
pop
js
dec
lea
jae
or
pop
repnz
fmull
inc
inc
xlat
xlat
loopne
les
lods
dec
stos
sti
inc
sub
cmpsl
sub
mov
or
arpl
push
dec
call
push
push
mov
inc
push
pop
in
cs
sbb
xor
xchg
xor
fiaddl
sub
in
pop
pop
out
or
movsb
shrl
cmc
leave
pop
icebp
cmp
mov
add
push
xchg
add
imul
cmpsl
les
nop
mov
popa
stc
and
xor
repnz
aaa
and
sub
jp
mov
jmp
pop
rclb
add
mov
inc
ss
push
std
xor
sbb
outsb
sbb
loopne
lcall
cmp
mov
cmp
nop
lock
fcmovu
sub
sub
adc
or
popa
dec
shll
push
pushf
xor
inc
xorb
xchg
add
sub
and
lock
sbb
adc
dec
push
sbb
out
out
jae
push
js
fsts
out
and
jbe
dec
fs
daa
sub
sub
push
cs
sahf
mov
mov
mov
sub
xor
dec
loope
mov
loope
push
and
stc
mov
push
lods
gs
inc
dec
cmp
pop
mov
jo
push
jne
jle
adc
icebp
fcoms
and
jne
lcall
cmp
add
dec
pop
adc
mov
imul
cmpb
lds
jns
sub
imul
aaa
dec
push
jns
xlat
imull
into
or
mov
pushl
mov
add
out
inc
inc
fisttpl
jecxz
aam
fists
daa
jecxz
sti
outsb
cld
scas
push
cmp
fsubrp
inc
inc
mov
or
adc
in
mov
mov
add
lea
divl
pop
rorl
and
xor
out
fstps
arpl
mov
jg
mov
mov
sbb
dec
xchg
mov
jnp
das
dec
test
test
pop
inc
inc
aaa
jo
shrb
pop
jl
fnstenv
mulb
add
xchg
mov
leave
jnp
test
pop
xchg
rol
inc
shr
jno
stc
pop
or
nop
in
movsb
push
subb
incl
dec
addr16
or
lcall
mov
cmp
iret
xchg
mov
das
test
mov
inc
push
negl
test
shll
mov
cltd
inc
lcall
dec
jno
inc
pop
mov
xor
cmpsl
loop
call
inc
movsl
add
add
test
out
pop
xchg
sar
mov
imul
cmpl
in
mov
test
jmp
ficomps
cli
sbb
sahf
push
roll
jne
lahf
push
or
out
cmpsl
pop
mov
xchg
bound
roll
popa
scas
scas
icebp
add
daa
int3
gs
and
pop
adc
sahf
aad
test
fcmovne
and
cmp
scas
or
arpl
cmp
ljmp
add
cmp
inc
testl
pop
sub
cs
int
jle
inc
mov
fucomp
in
mov
add
mov
inc
sbb
and
adc
or
jae
je
aaa
subb
pusha
push
dec
arpl
cltd
cmpsl
lret
mov
and
pop
mov
inc
test
add
xlat
movsb
jb
add
into
push
dec
daa
fstl
xchg
inc
stos
sbb
sub
ret
adc
or
fcmovnu
dec
push
mov
repnz
mov
inc
adc
inc
mov
mov
cmp
mov
sub
cmp
xor
cmp
fadd
js
and
cltd
orl
scas
nop
les
pop
scas
xor
adc
dec
dec
aam
or
push
lods
pop
and
sub
mov
rcl
scas
xchg
loop
push
cld
push
cmc
mov
scas
ja
jno
jno
mov
mov
dec
in
repnz
mov
sub
push
and
dec
sbb
sub
and
ficompl
xchg
movsb
incl
fcomp
mov
xchg
test
jmp
xor
popf
ret
cmpl
stos
gs
loopne
mov
mov
mov
idivb
cwtl
pop
jge
ret
push
lcall
pop
lret
lods
jg
test
js
push
std
filds
sub
sub
pop
adc
mov
lret
inc
mov
daa
add
pop
jmp
imul
and
daa
adc
out
aam
int3
fcmovnbe
xchg
bnd
out
sub
pop
js
xorl
xchg
scas
std
sub
push
dec
incl
mov
ret
fs
add
xchg
mov
outsb
sbb
and
and
out
shl
mov
mov
and
pop
or
pop
out
xchg
mov
sahf
orl
ret
out
scas
jb
enter
in
ja
lds
adc
xor
push
mov
ds
cmp
or
xchg
and
mov
movsb
push
in
decl
pop
jmp
shlb
xchg
xchg
jp
push
movb
outsb
pop
sbb
sub
pop
push
push
fs
xor
jmp
outsl
insl
dec
mov
insb
ret
sbb
sbb
jb
imul
inc
sbb
movsl
insb
mov
nop
into
adc
pop
xchg
popa
fsubrl
mov
inc
jl
lret
mov
sbb
xor
mov
fidivrs
cmc
pusha
dec
cltd
subl
insb
jb
arpl
dec
in
fiadds
testb
xchg
mov
fisttps
mov
sbb
mov
dec
xor
repnz
clc
flds
test
insb
cli
cmpl
jae
int3
jmp
xlat
mov
mov
data16
fstpt
xchg
xor
into
fldt
and
out
into
mov
add
mov
inc
add
xchg
mov
jnp
cld
push
sbb
xchg
testl
xchg
loop
adc
mov
outsb
cmpsl
out
je
mov
kandw
adc
aaa
cmpsl
add
iret
testl
pop
ficoms
sbb
testb
mov
mov
enter
daa
mov
es
leave
mov
mov
and
mov
mov
flds
fcomp
push
ds
test
and
test
ret
dec
out
jl
out
into
insb
les
pop
or
daa
add
push
push
pushf
popf
lock
movd
into
mov
sbb
mov
adc
pop
enter
cmp
decb
cld
and
cmp
xor
push
les
addr16
loop
inc
loopne
push
notb
lcall
or
push
rorl
xor
les
or
inc
jno
stos
fildl
pushf
push
test
into
aas
dec
mov
xor
mov
mov
jne
insl
mov
imul
je
jb
xchg
mov
or
fisubl
ret
icebp
mov
iret
daa
jmp
sub
pop
lock
xlat
jle
adc
mov
lds
js
mov
loopne
jns
sahf
push
jl
rclb
mov
fidivrs
ljmp
lods
fs
aad
ret
out
inc
mov
in
das
and
dec
ja
or
clc
and
in
adc
cmp
pushf
and
pop
rcrb
pop
jl
and
push
incb
sbb
fiadds
cli
or
inc
xlat
stos
dec
shrb
mov
adc
rcll
or
jne
pop
adc
roll
out
xor
cmp
xchg
ss
ds
sti
pushf
sbb
idivl
inc
adc
test
test
jp
je
cmp
and
std
ret
out
ds
xor
mov
push
or
cld
adc
xchg
sbb
jne
mov
sub
ja
or
sbb
pop
shrb
in
push
iret
mov
aas
pusha
inc
jo
mov
lret
js
push
notl
sarl
cs
inc
xchg
jno
xchg
add
rcrb
pop
cmp
enter
xor
xchg
mov
push
in
and
nop
push
adc
mov
sbb
test
jbe
cmp
cmpsb
aam
lret
fwait
xchg
mul
push
jg
add
mov
cmp
dec
lods
repz
stos
pop
out
popf
push
mov
or
pushw
adc
dec
cs
push
daa
lods
and
rorl
adc
in
or
negl
add
sub
inc
jb
mov
xchg
sti
adcb
push
mov
xchg
mov
fsubr
inc
mov
lret
mov
ss
push
add
mov
jle
cld
sbb
xor
jle
and
mov
shl
mov
into
imul
mov
icebp
xor
das
sub
leave
mov
xor
add
outsl
mov
add
fs
fldl
or
mov
cld
stos
out
and
push
jg
leavew
dec
mov
sub
push
clc
jecxz
ficoms
dec
in
mov
ds
mov
inc
add
sub
int3
push
subb
jmp
popf
inc
imul
cld
or
sbb
inc
sahf
and
repz
sbb
out
sub
sti
arpl
cmp
sbb
push
and
rcrb
dec
jae
stc
js
arpl
push
pop
xchg
aaa
je
into
cmp
out
pop
cmpb
ss
stc
nop
outsb
push
add
push
add
sbb
adc
or
xchg
mov
fsts
pusha
mov
pop
mov
lods
xchg
mov
fidivl
test
imul
cmp
mov
repnz
inc
roll
call
iret
cmp
iret
jp
add
push
sub
fs
xchg
push
jo
mov
shrb
or
jmp
jmp
mov
cmpsb
cmp
fldenv
xchg
lret
lcall
jl
sub
sbb
ficoml
ss
loopne
dec
hlt
jmp
sbb
push
mov
ret
test
pop
mov
addr16
fnsetpm(287
out
add
xchg
cli
mov
cwtl
fmull
mov
ljmp
lods
inc
push
mov
lods
cmp
scas
aam
or
arpl
mov
inc
dec
loop
sbb
push
ljmp
lock
jns
pop
mov
cmp
fisttps
adc
clc
mov
sub
inc
repnz
lahf
jae
xchg
divb
notb
adcb
and
sub
fstps
mov
cmpsb
mov
arpl
ss
sbb
out
push
aad
push
lds
sub
pop
lcall
pop
rorl
pop
cmp
fwait
in
test
or
push
std
xlat
push
push
dec
add
rcrb
pushf
or
xor
cmpsl
cmp
xchg
gs
cmpsl
shl
out
push
mov
mov
cmp
dec
sbb
es
lds
dec
jmp
pop
xor
xadd
sti
mov
call
inc
pop
xchg
scas
pushf
roll
jecxz
mov
clc
scas
jae
sbb
out
scas
add
jb
loopne
mov
jne
pop
iret
lcall
inc
push
xor
js
fptan
mov
adc
das
dec
push
jnp
xchg
std
mov
int
inc
jl
or
and
mov
clc
jecxz
xor
enter
cli
psraw
insb
mov
dec
or
adc
fists
inc
lods
in
mov
fsubp
sahf
mov
test
and
scas
xor
jg
or
xchg
mov
cmc
test
and
scas
jnp
dec
inc
pop
jp
mov
rclb
xchg
js
dec
xor
jmp
fdiv
call
xor
pusha
xor
sbb
xchg
fiaddl
pop
adc
ret
lock
out
stos
cmpsb
sbb
push
or
outsl
cmc
sbb
sti
jmp
out
dec
lea
popa
out
push
and
xor
fs
dec
aam
xor
je
mov
and
mov
adc
xor
inc
ret
adc
xlat
mov
mov
xchg
stc
and
cltd
lods
or
js
cli
and
adc
fidivrl
fmull
xchg
push
test
stos
push
sub
addr16
out
or
cmpsl
mov
xor
cmc
xchg
lods
lcall
sbb
and
mov
or
lods
mov
std
loop
les
enter
outsb
fildl
addr16
leave
adc
in
dec
jg
mov
mov
arpl
inc
xchg
rclb
add
dec
jns
jg
cmc
pop
insb
sbb
mov
movsb
jns
sub
cld
outsl
mov
pop
fistl
mov
repz
mov
xchg
pop
dec
mov
sub
outsl
mov
dec
mov
mov
xor
push
pop
inc
or
cs
dec
imul
lahf
aam
cmpsb
or
in
or
test
ret
pop
pop
or
mul
aad
mov
mov
movsb
data16
pop
inc
mov
xchg
inc
mov
jl
sbb
mov
iret
jo
into
sbb
and
inc
inc
xchg
mov
in
jns
mov
add
adc
xchg
lock
lahf
or
sbb
aas
inc
jns
and
xor
xchg
cli
pop
jb
sbb
xchg
cli
mov
popa
add
xor
shll
mov
add
ljmp
pusha
sbb
and
out
jmp
or
test
mov
jb
loop
sub
or
pop
sub
jns
ss
popa
movsl
hlt
movsl
jae
and
and
in
test
inc
add
or
adc
rorl
cli
cmpsl
jno
xor
es
js
rclb
sti
mov
push
or
sub
or
inc
sbb
call
lock
cs
or
and
xlat
adc
xchg
mov
sub
pop
xchg
in
test
mov
xchg
stos
sub
adc
sub
mov
clc
out
lock
xor
in
out
push
loop
jne
cmpsl
bound
and
scas
add
cltd
ficoms
jns
stc
jg
outsb
jne
jge
adc
pop
orl
jnp
jae
cmp
push
popf
mulb
and
pop
mov
insl
shll
pop
sub
mov
stos
inc
aam
lret
cmp
mov
loopne
fs
cli
sbb
repz
xlat
insl
cwtl
sub
insb
fcmovu
mov
faddl
push
push
inc
sub
fs
lea
lahf
xor
decb
dec
repnz
add
shr
pop
sbb
cmp
and
and
adc
adc
mov
test
push
mov
addr16
sbb
idivl
ss
jp
jmp
decb
mov
bound
xchg
mov
mov
pop
lcall
aam
mov
lods
movsl
push
in
push
mov
pop
fwait
dec
jo
xor
js
adc
sahf
sub
les
aam
sbb
sarl
ja
repz
stc
sbb
pop
cmc
inc
lahf
movsb
in
in
inc
inc
push
pop
add
add
adc
and
cmp
push
jo
scas
repnz
lahf
cld
fdivrs
leave
cmp
mov
jb
inc
fimull
xor
dec
into
rcrb
xchg
push
xchg
sbb
daa
xchg
xchg
fcomp
push
lods
mov
cmpsl
push
mov
and
push
mov
lret
push
adc
adc
scas
dec
xchg
dec
out
push
rclb
sbb
lods
lods
add
scas
adc
adcb
mov
and
loopne
call
test
pop
rorl
and
test
cs
ss
cmpsl
cmp
popf
xchg
loope
int3
popa
sub
jnp
cmp
inc
ss
cmpsl
clc
xor
or
lret
lret
not
push
push
popf
cmpsl
xor
mov
scas
sbb
and
addr16
insl
mov
xchg
out
jo
adc
fcomps
mov
or
fsts
sbb
sbb
cmp
sahf
js
lock
mov
mov
push
movsb
mov
cmp
out
cltd
data16
mov
mov
xorb
push
xchg
add
jns
push
fsubrs
enter
pop
jmp
je
addr16
sti
jp
pop
push
cmp
aas
ret
jle
aaa
shlb
jae
call
lahf
jge
ret
push
xchg
inc
cli
mov
cmpsb
pop
sbb
jnp
sahf
pop
and
push
sti
das
dec
adc
or
imul
movsl
out
ljmp
jmp
pop
fsubs
test
fucom
pop
inc
push
push
fs
lret
mov
adc
mov
mov
mov
push
addr16
push
mov
arpl
call
jo
push
mov
iret
push
jae
mov
cltd
test
mov
addr16
mov
or
and
dec
je
aad
in
inc
sahf
rcrb
inc
imul
cmp
into
xor
or
inc
dec
sbb
rclb
sbb
rcrb
xchg
cli
ficomps
pusha
mov
dec
mov
pop
cs
sbb
pop
aam
cwtl
cmp
aam
dec
std
xor
stc
aam
mov
jecxz
sti
mov
push
orl
loope
test
cmc
mov
scas
enter
mov
enter
dec
call
mov
adc
push
cmp
sub
rorb
sub
mov
cs
mov
stc
divb
mov
jge
fiaddl
add
out
cli
or
dec
in
pop
and
jle
mov
push
sbb
in
cmpsl
cmp
push
and
push
cli
inc
es
insl
push
arpl
sub
cmp
arpl
mov
mov
and
into
fimuls
jne
fwait
xchg
or
mov
jecxz
push
pop
outsb
dec
ja
xchg
inc
xchg
movsl
clc
push
or
push
inc
es
pop
aas
mov
xorl
sti
adc
test
aad
adcb
into
and
aaa
mov
jge
fsubp
lahf
or
out
push
xchg
hlt
sub
sub
jp
enter
mov
or
xlat
jno
cli
and
inc
xor
add
cs
ljmp
adc
test
pop
inc
pusha
sub
sub
cmp
add
mov
push
push
cmp
mov
lods
jbe
push
idiv
xor
cmp
xchg
adcl
rcll
pushf
sub
aam
push
pop
ret
xor
bound
data16
cltd
loopne
jmp
out
mov
add
pop
and
jbe
call
pop
adc
ret
dec
aaa
jmp
adc
mov
sar
test
lods
das
pop
loop
mov
dec
and
xchg
xchg
and
cmp
mov
add
push
and
je
leave
mov
and
jmp
ja
jnp
je
call
adcl
push
inc
ljmp
sbb
jo
jmp
add
add
test
imul
pop
mov
inc
dec
mov
xor
jnp
idivb
loop
je
cmp
popa
cmpsb
repz
add
pop
jp
ljmp
or
mov
add
jl
sahf
incl
lods
clc
pop
rcl
iret
adc
fiadds
mov
popf
rcl
lea
out
shrl
stc
out
loop
jmp
loop
xor
aad
out
pop
call
pop
cli
sbb
pop
out
scas
xchg
lea
shrl
lahf
pusha
scas
adc
or
fsubrl
cli
xchg
jo
in
mov
out
add
xchg
dec
mov
and
mov
mov
pop
sbb
stc
sub
mov
or
fsubrs
xor
jno
fldcw
mov
push
stc
jo
addb
loopne
mov
movsb
pop
insl
mov
sti
sub
and
jno
mov
sti
push
bound
loopne
enter
xchg
ror
jae
scas
jo
xchg
mov
iret
imul
ret
jp
xlat
pop
sbb
data16
lods
lds
mov
sub
popf
pop
xor
jo
lahf
pop
repnz
jb
sub
push
sbb
xor
xchg
shlb
mov
jl
cwtl
and
test
aas
std
out
pop
andl
into
lds
scas
popa
in
or
test
dec
mov
mov
rolb
pop
mov
mov
jmp
cmp
cmp
or
shll
mov
cmp
aas
inc
cmp
bound
pop
jbe
mov
cmp
ja
imul
sbb
lock
outsb
add
mov
adc
adc
out
add
gs
push
mov
adc
dec
pop
sub
lods
fcoml
mov
aaa
fucomip
aaa
sub
xchg
stc
dec
lahf
mov
mov
xor
aad
and
mov
test
pop
sti
adc
add
flds
mov
add
repz
clc
xchg
or
jno
fs
and
pop
in
lods
shlb
rcll
mov
inc
xchg
test
outsb
in
jb
or
pop
jbe
lret
mov
xchg
mov
sub
mov
and
scas
mov
adc
jmp
flds
jns
es
push
ret
jne
add
mov
xchg
mov
mov
inc
or
push
lea
bound
test
js
xchg
push
mov
adc
mov
mov
push
shlb
xor
xor
or
imul
xchg
xor
mov
lea
fwait
push
push
sub
or
lods
mov
sbb
mov
sbb
ja
fnop
cmp
xchg
mov
mov
test
mov
push
jmp
leave
loope
imul
popa
jb
bound
push
cmp
das
mov
sub
insl
out
add
mov
xchg
jle
dec
or
add
add
mov
les
iret
and
xor
cs
mov
imul
sub
test
repnz
adc
dec
sbb
rclb
push
sub
adc
push
mov
jmp
mov
mov
repnz
add
sar
sbb
xchg
pop
stc
xor
into
subps
inc
in
mov
imul
or
enter
sbb
jb
addr16
loope
psubb
jmp
sub
ja
sub
sub
cmp
lods
sub
aad
std
fmulp
jno
dec
std
loopne
pop
xor
xor
stos
adc
sub
or
jg
mov
fidivrl
sti
into
inc
sub
out
stc
and
mov
xor
or
addr16
push
cmp
dec
ja
xchg
ror
inc
ja
xchg
int
xchg
hlt
out
jne
mov
sub
iret
rcll
int3
sub
shll
pop
bound
pop
cmp
call
sbb
aas
cmp
or
sub
lds
sbb
dec
adc
test
lret
fmull
cmp
aad
xor
mov
xchg
mov
adc
movl
pop
mov
rclb
mov
xlat
shll
hlt
mov
popf
out
std
daa
or
sti
shl
push
mov
repz
pop
mov
dec
push
pop
outsl
adc
xchg
es
pop
xchg
nop
pop
arpl
mov
fldt
lcall
mov
inc
sbb
data16
inc
cmp
lods
xor
add
dec
sahf
xchg
insw
std
push
adcb
jo
addb
loopne
jbe
jl
push
push
addl
scas
sbb
int3
dec
push
xchg
xchg
xor
shll
cmp
adc
mov
int
rcll
in
call
dec
adcl
data16
sub
cmp
int3
lret
imulb
je
add
cs
jmp
push
mov
fucomi
cmp
divb
mov
or
jl
insl
cwtl
out
mov
sbbl
mov
shrb
in
in
cmp
cs
ret
dec
or
pusha
mov
jo
orl
iret
or
and
in
rol
and
sub
mov
test
scas
imul
jbe
mov
aad
mov
or
or
or
or
nop
movsb
cmp
frstor
lahf
ja
int
jbe
inc
sbb
push
imul
pop
and
cmp
pop
repnz
pop
lds
test
cld
adc
ret
mov
add
mov
mov
and
pop
sbb
shlb
cltd
or
inc
imul
mov
rcrb
push
fnsave
addb
jmp
sbb
pusha
and
bt
add
mov
cmp
into
jl
xchg
or
popf
add
imulb
pushf
xchg
add
and
xor
imul
cmp
and
call
stos
test
push
and
xchg
rorl
ss
jo
jo
jbe
repz
dec
es
out
xchg
adc
int3
jne
pop
xor
inc
mov
clc
cmp
xchg
add
enter
stc
mov
lea
mov
es
jns
lahf
outsl
in
outsb
add
mull
fisttpll
lods
cli
subb
icebp
xchg
inc
inc
cmpsb
sub
subb
or
mov
mov
xor
bound
mov
aad
pop
stos
mov
lcall
pop
and
aas
test
mov
popa
mov
push
dec
aam
mov
xchg
rol
rclb
comiss
jecxz
lock
cmp
push
xchg
jo
lcall
es
push
loop
dec
add
sbb
rcrl
pushf
xchg
adc
push
lods
xchg
xor
dec
inc
xor
or
enter
loop
mov
jl
cld
xchg
cmp
into
xchg
adcb
int
cld
sbb
fcmovu
jae
xor
sbb
or
adc
jae
push
int
cld
stos
or
cmpsb
sub
lret
add
pushf
pusha
pop
push
or
mov
scas
aad
push
pop
popf
sbb
popf
mov
mov
je
and
cmp
lods
mov
fcmovnb
les
rcr
add
push
in
mov
push
mov
mov
pop
ja
mov
mov
xchg
sub
je
pop
sbb
lahf
fdivs
pop
cli
add
pushf
addb
dec
imul
loop
and
adc
jno
fisubrs
and
loop
jle
loopne
into
test
pushf
lcall
inc
mov
mov
rorb
xchg
and
pop
lods
gs
pop
mov
mull
lcall
int
mov
inc
repnz
sub
push
fidivl
cmc
mov
or
insb
sub
aad
shr
or
sub
xchg
nop
xor
lds
lret
push
dec
loopne
movsb
out
mov
das
pop
mov
xlat
cmp
inc
cmc
or
pusha
or
lock
or
and
lods
out
push
cmp
mov
jecxz
xor
fisttps
mov
clc
das
popa
popa
dec
pop
stc
int3
jmp
pop
test
ja
pop
out
mov
enter
inc
inc
inc
cmp
push
adc
pop
loopne
dec
inc
pop
xor
in
pop
data16
mov
lods
sahf
inc
fadds
mov
lahf
push
lods
xchg
inc
hlt
add
leave
pop
mov
add
imul
scas
fs
jo
out
daa
adc
pop
adc
outsl
push
daa
and
cmp
je
aaa
mov
xlat
sub
inc
push
scas
fwait
dec
out
sbb
add
loope
push
sub
and
sahf
mov
push
and
ljmp
lret
inc
dec
cwtl
push
mov
pop
xchg
xor
fcompl
jb
js
inc
pop
adc
mov
push
mov
xor
and
sub
sub
ds
lret
push
lret
cmp
cld
sbb
mov
lods
rcll
popf
inc
mov
mov
out
push
pop
mov
cmpsb
iret
mov
mov
sub
or
les
mov
nop
jb
repnz
ficomps
mov
mov
popf
mov
push
inc
scas
cwtl
mov
cmp
lahf
out
mov
iret
dec
je
jmp
mov
std
lret
das
push
inc
pop
mul
movsl
out
in
bound
loope
jl
mov
in
es
mov
xor
pop
aad
pop
lcall
and
cmp
cmpsl
pop
stos
dec
sub
insl
fidivrl
adc
stos
sbb
add
in
lret
mov
cmp
add
js
mov
cwtl
out
call
add
pop
cli
out
xor
dec
dec
sbb
dec
dec
inc
iret
idivl
or
mov
adc
mov
mov
sub
dec
inc
repz
aam
mov
dec
in
mov
push
cmp
push
out
dec
jmp
mov
imul
outsb
in
movsb
mov
cmp
out
mov
jmp
push
mov
arpl
xchg
lock
xchg
mov
in
rcr
dec
fisttpl
incl
lret
mov
in
or
jg
test
sbb
pop
sbb
mov
sub
popf
loope
lret
ret
ffree
mov
test
mov
jo
out
xchg
fs
bound
lret
inc
lods
sbb
fucomip
cmp
xor
mov
sbb
mov
cmp
or
pop
rcrb
rcll
and
mov
mov
add
fnsave
xor
lret
cmpsb
out
mov
ret
fidivs
jnp
lret
cmovae
rolb
sub
mov
jge
dec
scas
lods
sahf
cltd
inc
jnp
mov
cltd
dec
or
jge
jl
in
lret
xor
das
or
jns
pop
dec
pop
cmp
jns
out
mov
fwait
inc
leave
clc
push
ss
push
sbb
jno
mov
cltd
icebp
into
addr16
and
or
adc
dec
xchg
pop
sahf
push
push
sub
cmpsl
cmpsl
pop
or
mov
inc
dec
adc
rcrb
ret
into
movsl
int
imul
pop
pop
mov
inc
push
xor
out
popa
add
leave
fnstsw
xchg
sub
push
fwait
arpl
mov
and
or
test
push
clc
jge
adc
test
in
push
push
mov
push
scas
pusha
inc
push
or
bound
movsl
lret
test
subb
adc
clc
add
scas
cmc
jle
or
test
pop
mov
cmp
jno
jne
sti
pop
mov
dec
dec
mov
aas
je
jne
add
rorb
mov
ret
ds
cmp
xor
mov
add
repz
xchg
add
and
loope
out
icebp
aas
aam
mov
xchg
mov
and
and
adc
shlb
js
jne
shrb
test
fsubs
dec
cmp
or
jecxz
xor
movsl
inc
jno
mov
int
imul
mov
mov
scas
cmp
cmp
inc
xchg
test
fsubrs
sub
push
imul
push
xchg
mov
mov
and
mov
mov
mov
push
vmptrld
imul
and
xchg
jno
xor
ret
shll
test
pop
and
push
and
jl
test
mov
je
push
sbb
cwtl
cs
insb
fbld
push
push
push
inc
hlt
dec
clc
cmp
jne
mov
test
mov
xor
loope
add
repz
inc
int3
mov
loopne
sbb
add
mov
test
inc
add
and
outsl
test
dec
add
add
js
sarb
mov
rcll
loop
scas
out
ss
xchg
pop
xchg
inc
mov
jmp
leave
jbe
orl
pop
jmp
sub
mov
add
inc
stos
inc
xor
push
pop
mov
push
cmp
in
mov
loop
loop
fistpl
adc
sbb
sub
scas
cmc
in
movsl
cmpsl
aas
fdivs
sbb
xor
cmc
loope
xor
push
add
nop
add
push
mov
lcall
inc
rcrl
clc
pop
push
jg
pop
or
insl
mov
jp
sti
jne
pop
out
les
xlat
popf
adc
sbb
mov
outsb
je
pop
movsl
inc
test
cwtl
xchg
xor
lods
jmp
std
fisttps
jnp
mov
jae
dec
sub
insl
fmul
push
ficomps
dec
stc
lcall
cwtl
imul
setne
sti
frstor
jmp
push
fnstsw
inc
loopne
cmp
cmc
jb
and
mov
mov
negb
mov
mov
fisubl
movsb
cmp
les
fmuls
rol
fdecstp
shlb
mov
xchg
push
test
add
inc
je
inc
mov
or
shlb
fs
mov
fidivrs
push
icebp
sbb
adc
pop
jbe
sbb
lret
lret
fwait
lods
iret
mov
scas
cmp
jno
repz
adc
push
push
pop
arpl
push
mov
mov
shrb
cmp
dec
xchg
iret
movsl
mov
lea
rolb
pop
shlb
push
xorb
cmp
or
out
je
fimull
push
mov
dec
sbb
les
fisttps
mov
scas
fdivrl
into
or
ret
insl
mov
andl
sti
sub
pop
cwtl
or
push
xor
jecxz
mov
clc
mov
aas
rcr
add
xchg
or
mov
inc
push
push
jbe
daa
mov
lods
leave
data16
xor
sahf
mov
lds
pop
mull
les
adc
fs
jae
imul
cmpsb
jno
loope
xchg
testb
push
fisubl
cmpsb
mov
leave
stc
enter
imul
mov
rcr
push
jg
in
lcall
cmp
sbb
std
and
mov
push
push
pusha
scas
fidivs
lea
cltd
icebp
pop
fisttpl
mov
add
jbe
and
push
or
jno
inc
push
xchg
jno
jnp
in
push
xchg
cmc
aas
stc
fcomi
xchg
jp
and
ljmp
icebp
mov
outsl
lea
ss
jl
sub
loopne
lods
scas
pop
shl
in
jne
gs
cltd
mov
cli
lds
rcll
mov
adc
ds
adc
push
adc
popf
push
jbe
and
sub
unpckhps
out
stos
mov
fldlg2
xor
add
mov
out
cmp
mov
in
stos
stos
jmp
insl
push
pop
xchg
dec
push
jmp
sbb
sub
popf
xchg
divl
enter
push
out
xor
leave
repnz
dec
clc
rol
testl
jmp
cmc
ret
mov
data16
mov
dec
fwait
xchg
mov
fcomps
pop
sub
insb
ja
in
repnz
add
fimuls
aad
sti
sub
jle
add
into
xchg
ljmp
fstps
mov
or
mov
push
cmp
pop
sahf
hlt
adc
jl
test
mov
jns
pop
arpl
inc
adc
in
lods
adc
lret
hlt
adc
arpl
mov
and
mov
jp
cmp
pop
stc
fucomip
sbb
push
scas
pop
mov
jnp
movsl
bound
fcompl
sub
sbb
jne
out
daa
outsl
sub
dec
std
mov
int3
leave
test
inc
popa
ljmp
nop
cld
mov
loopne
popf
add
int
lock
lcall
aaa
sahf
cmp
gs
pop
sbb
shr
fsubp
out
push
cmp
test
fcmovnbe
lcall
mov
and
pop
dec
xor
mov
or
sub
or
mov
sbb
lock
fadds
std
movsb
lret
xchg
ret
test
lcall
popa
pop
add
stc
enter
xchg
or
test
adc
cmp
sub
sbb
mov
out
fdivrs
stos
fldcw
cmp
adc
fisttpll
sahf
sarb
cmp
cmp
fisttpl
cmp
lods
sbb
rorl
add
in
stc
std
cmpsb
ret
jae
ficompl
pop
bound
cmc
pop
mov
mov
pop
mov
adc
inc
mov
je
and
jmp
fcmove
pop
push
shll
cmp
cld
xchg
push
ds
mov
pop
jmp
cmp
inc
sbb
push
xchg
movsb
lds
ret
add
shrb
dec
jg
call
jp
test
xchg
xchg
xchg
fwait
pop
mov
fnstsw
fstpl
stc
cmc
add
call
push
mov
jne
jae
in
clc
jns
sbb
xchg
push
insl
push
mov
or
outsl
jo
popa
lock
in
arpl
pop
fisubl
icebp
jle
cmpsb
cs
cmp
add
jne
fcmovbe
pop
jb
sbb
and
in
mov
jmp
mov
xchg
add
add
sub
int3
cmp
xchg
mov
sbb
cmp
xchg
push
fcompl
or
jmp
mov
cmc
sarl
xor
cmpsl
sbbl
lea
inc
mov
dec
mov
mov
pop
test
imul
xorb
sub
jecxz
lock
stc
out
push
clc
pusha
mov
inc
sub
cmc
adc
pop
sbb
cs
pop
in
mov
xor
sbb
jle
jmp
movb
xor
mov
das
decl
add
ja
pop
push
dec
push
pop
jae
pop
mov
sub
mov
push
push
adc
mov
lods
sub
iret
cwtl
enter
mov
mov
jmp
lahf
repz
push
loopne
fwait
xchg
hlt
aaa
je
lret
sahf
xchg
das
dec
out
cld
add
pop
imul
xchg
lock
insl
je
shlb
lods
mov
mov
push
rcll
fimuls
inc
stos
leave
das
outsb
cmp
cmp
rorl
in
xor
cwtl
imul
mov
cmp
and
faddl
or
pop
nopl
test
mov
repnz
hlt
fxch
xchg
dec
or
scas
cmp
push
stos
dec
mov
aad
xor
push
int3
dec
sahf
push
ss
icebp
fdivrs
jae
insl
inc
and
into
pop
imul
jge
adc
icebp
or
call
xchg
push
push
pop
sub
ret
jne
fstpt
lods
cmp
rclb
in
pop
ret
and
fwait
ret
mov
ja
lds
rol
jo
iret
test
cmp
ror
pop
bound
pop
fs
mov
cmp
int
sub
sub
mov
pop
cmpsl
dec
std
imul
sbb
pop
push
adc
fldcw
mov
arpl
adc
cwtl
int
sbbl
loop
call
cmp
mov
xor
insl
pop
and
arpl
mul
ret
xor
jo
stos
dec
mov
xchg
mov
ja
cli
decl
sti
jbe
xor
mov
mov
xchg
push
add
push
enter
stc
xlat
or
adc
push
xchg
and
xor
add
or
xorl
jbe
mov
lea
clc
sbb
inc
add
or
ss
inc
movsb
scas
test
cmp
lods
cltd
mov
out
outsl
adc
mov
and
add
add
push
fadd
mov
cmp
mov
fldenv
pop
clc
loop
test
shl
mov
pop
cld
daa
xor
mov
inc
inc
cwtl
in
jp
sub
xchg
jmp
shr
daa
push
popf
fcompl
inc
lret
dec
pop
cld
lahf
jns
ljmp
sub
adc
ja
dec
dec
and
mov
hlt
dec
push
test
insl
fs
mov
scas
jno
push
sahf
out
adc
push
enter
je
add
addr16
ret
inc
loopne
fs
scas
aas
xorl
lahf
cmp
fcomps
push
fwait
inc
or
mov
push
sbb
push
cld
std
dec
inc
je
pop
outsl
mov
rorl
xchg
mov
pop
cwtl
xchg
push
fadd
push
shrb
aad
inc
inc
cmpsb
iret
or
jecxz
jge
cmpsl
xchg
sbb
mov
jg
push
xchg
fistl
cwtl
int
mov
ja
xchg
adc
rorl
scas
shl
lcall
mov
jo
test
jnp
jnp
ljmp
push
mov
fistpl
pop
test
filds
ljmp
mov
lods
jb
jnp
jb
mov
push
pushf
cmp
cli
pusha
out
xor
dec
test
mov
sbb
das
or
mov
es
arpl
dec
mov
cwtl
inc
addl
push
or
push
xchg
lods
inc
sar
fucomi
sbb
ficomps
and
mov
fstl
test
rcl
loope
mov
enter
jnp
adc
cmp
xchg
leave
xor
jne
or
jmp
jle
pusha
push
in
fwait
and
and
push
movsl
mov
stc
cmp
pop
dec
lods
mov
testb
out
fcmovnb
push
jb
dec
lcall
mov
loope
jbe
arpl
jmp
test
or
cs
loope
lods
mov
pop
pop
xor
xchg
mov
ret
mov
dec
or
mov
aas
jnp
push
das
movsl
and
mov
dec
andb
sbb
lahf
mull
ds
mov
aam
mov
shlb
loop
push
xchg
or
add
das
add
shl
stc
push
pop
hlt
jnp
xchg
lods
lods
pop
enter
nop
mov
mov
inc
clc
lods
sub
cmp
adc
mov
or
push
lahf
pop
pop
sub
sbb
mov
and
cmp
test
inc
ret
cmp
ret
push
shll
fldlg2
or
flds
xchg
sbb
sbbb
inc
daa
inc
test
cld
test
pop
cmpsl
cs
cmpsb
mov
xchg
dec
push
out
and
cmp
ret
mov
sbb
leave
leave
lds
mov
jae
dec
jecxz
test
call
adc
add
mov
xchg
aaa
add
or
out
cltd
jno
cmp
push
dec
adc
pop
sub
mov
lods
pop
push
cli
arpl
lods
adc
mov
xchg
loopne
aas
sub
adc
add
or
adc
out
mov
xor
cmp
imul
mov
xchg
orl
repnz
push
pushf
out
adc
test
or
roll
jp
push
lahf
or
lcall
cmp
test
adc
adc
repz
and
add
inc
inc
cmp
arpl
into
pop
mov
ret
aaa
stc
inc
mov
pop
cld
add
dec
lods
sub
mov
lds
sub
mov
xchg
andl
mov
cld
sbb
insl
outsl
fistps
testb
mov
sbb
test
repz
stos
data16
mov
cmp
cld
jmp
clc
aas
dec
mov
aaa
mov
or
fwait
mov
jp
in
sbbl
push
adcl
scas
xchg
or
mov
inc
jns
arpl
mov
test
or
rcrl
test
xchg
test
fwait
jnp
pop
test
pop
fwait
call
insb
pop
cmp
rcr
sub
push
mov
les
dec
push
sahf
lods
dec
and
jecxz
jns
ret
push
fwait
or
push
sbb
sub
in
mov
and
shl
cmp
sbb
fsubs
xchg
je
mov
mulb
imul
pop
push
out
adcl
xchg
mov
dec
xchg
sub
cmp
mov
push
sub
repz
push
fcomp
test
rorb
inc
jge
int
xchg
pusha
jecxz
test
sbb
jne
roll
data16
mov
cmp
sbb
or
divl
stos
addl
ret
pop
inc
out
pop
xor
adc
xor
ret
jne
mov
inc
negl
add
dec
jg
and
mov
test
test
jbe
leave
test
mov
sub
hlt
push
xor
insl
cld
mov
pop
push
or
dec
mov
inc
dec
add
repz
dec
and
lods
out
out
add
mov
scas
in
pop
cmc
rolb
lcall
out
push
sub
jns
repnz
and
jb
inc
pop
jge
adc
pop
filds
jns
sub
dec
xchg
mov
push
pop
test
dec
pop
fwait
dec
adc
lahf
add
loope
add
pop
add
mov
mov
packssdw
cmp
mov
sub
pop
pusha
ret
scas
iret
mov
imul
sub
push
xchg
insb
jno
mov
mov
or
mov
sub
pop
add
das
das
inc
pusha
add
mov
mov
jl
dec
call
das
movsl
sahf
dec
cmc
jb
mov
jo
jae
js
mov
aas
lret
sbb
roll
sti
mov
mov
enter
xor
cmp
jne
mov
sbb
pop
mov
pop
jecxz
cli
stos
cmpsb
rcl
mov
pop
push
add
sahf
icebp
cmp
sub
loope
add
add
jno
leave
jbe
repnz
sub
mov
test
gs
fists
pop
push
ret
mov
sbb
test
cld
out
fchs
cmpsb
loope
stc
or
xor
lock
and
ss
push
sub
mov
std
mov
pop
fdivrl
arpl
pcmpgtb
stc
loope
shrl
imul
push
mov
lret
pushf
cs
jne
stos
popa
pop
jae
in
push
inc
sbb
jns
sbb
xor
std
add
je
andl
iret
js
and
inc
xchg
mov
sbb
mov
enter
test
shlb
jmp
cmpsb
int3
mov
rcll
cmc
testb
push
push
pop
add
scas
sbb
sbb
repnz
xchg
subl
xchg
loop
xor
xor
mov
repnz
cmc
imul
lret
out
shll
sbbb
into
call
jg
mov
or
ficomps
mov
shrb
call
mov
inc
inc
shlb
cmp
out
push
xor
popa
bound
filds
mov
divb
popa
shrl
push
mov
sub
idivb
xchg
into
xor
ror
xor
std
xchg
scas
mov
into
push
pop
cmp
gs
sub
outsl
mov
out
idivb
testl
sub
xor
fldl
sbb
sub
jge
sbb
or
mov
scas
cwtl
sti
pop
ja
dec
mov
in
mov
movsl
sbb
testl
or
gs
in
les
cltd
aad
cld
push
aas
mov
xchg
inc
stos
inc
cmpsb
test
std
lea
jae
dec
bound
mov
mov
xchg
jecxz
cmpsb
scas
into
sbb
lcall
icebp
mov
lds
cs
xchg
out
outsb
jmp
imul
in
pop
lock
jb
test
sbb
cmpsb
into
out
add
notb
dec
add
push
inc
nop
mov
mul
lds
jecxz
push
andl
insb
or
lea
dec
pop
xor
pop
adc
cmp
xor
push
test
mov
push
cltd
lret
xchg
outsl
jmp
sbb
rolb
stos
sbbl
push
cld
notb
shll
xchg
bswap
scas
add
adc
add
repz
xchg
bound
inc
es
jae
pop
xorb
inc
mov
insb
andb
jl
cmpsb
xor
mov
jg
mov
or
pop
cmpsb
enter
movsl
cltd
fnstsw
mov
and
call
ficomps
filds
mov
shl
mov
loop
and
hlt
adc
inc
mov
test
dec
inc
jmp
popf
pushf
mov
das
sub
jb
mov
leave
outsb
les
clc
mov
aad
sub
ja
and
dec
xchg
cmpb
jo
and
jo
addr16
push
cli
dec
rclb
rorb
sbb
push
cmp
in
jmp
sbb
sub
mov
stc
sbb
mov
mov
sarb
out
gs
dec
movsl
sbb
test
xor
mov
mov
flds
add
mov
inc
insb
xor
loopne
add
inc
mov
or
adc
or
sbb
iret
les
or
fcomip
popf
push
push
in
ljmp
js
cmp
clc
std
lods
jnp
inc
loop
xor
sbb
dec
pop
pop
sti
add
inc
mov
cwtl
mov
xor
stos
jb
sti
out
jge
xlat
add
jo
pop
push
xchg
mov
repz
push
ljmp
cmp
inc
dec
shll
imul
in
sbb
mov
fwait
add
call
das
xor
or
lea
inc
push
nop
std
or
mov
imul
jl
dec
pushf
lahf
sbb
call
dec
and
push
sub
sub
movsb
dec
dec
push
inc
jno
sub
xchg
ljmp
inc
lcall
and
cmpsb
mov
xor
add
add
lods
arpl
mov
fistl
data16
jl
test
ret
mov
pop
cmpsb
jnp
xchg
inc
into
jl
das
pop
loop
fisubrl
fs
mov
js
adcb
or
mov
shlb
push
sbb
fneni(8087
ret
pop
push
pusha
cld
outsl
dec
lds
test
jne
push
js
mov
lock
dec
lea
adc
xchg
rorb
aam
xor
cmpsb
sub
pop
sbb
cmp
jne
inc
adc
test
mov
sub
lahf
mov
sbb
gs
mov
inc
xor
cmp
or
sub
inc
and
daa
adc
ret
pop
imul
dec
jecxz
pop
cmp
xchg
add
add
pop
scas
mov
test
adc
cld
xchg
mov
xchg
pushf
push
pop
add
stos
hlt
hlt
inc
xor
jl
push
sbb
daa
add
cli
in
cli
leave
subb
sub
jne
loopne
data16
rcl
mov
outsb
ss
push
adc
decb
stos
jns
xchg
lret
divb
inc
mov
pop
rcrl
push
sbb
jl
mov
stos
pusha
mov
add
fistpl
xchg
loopne
inc
fadds
pop
xor
and
lahf
cmpsb
fwait
imul
out
pop
fstps
clc
hlt
shrb
std
inc
mov
dec
rclb
fsubrp
lock
fstps
cwtl
out
sbb
mov
fld1
adc
lcall
shll
push
mov
es
icebp
int3
ja
out
inc
sbb
std
push
inc
pop
test
int3
push
xor
fiaddl
aaa
dec
cmp
mulb
jb
ss
sbb
dec
mov
dec
lock
sub
cmpsb
mov
imul
inc
out
mov
sbb
mov
dec
aad
mov
dec
in
xor
nop
loopne
fucompp
test
rolb
cmp
imul
mov
clc
loopne
cmpps
jne
add
xchg
xchg
adc
outsb
repnz
push
int
inc
ja
mov
loopne
iret
mov
mov
mov
inc
sbb
insl
fstpl
mov
adc
ja
lea
xor
xlat
clc
inc
sub
cmp
cmpxchg
popf
add
jmp
movsl
xor
cltd
out
inc
testb
ret
push
hlt
ret
icebp
sbb
loope
mov
cli
lods
std
jno
inc
leave
fildll
sbb
sbb
test
pop
into
sbb
cld
cld
les
ljmp
mov
int3
cmp
xchg
cmp
test
outsl
push
std
cwtl
idivl
sarl
sbb
cmc
xchg
and
fwait
dec
fnsave
jl
ds
mov
lahf
mov
add
sub
aas
int
clc
enter
les
enter
jmp
jmp
loope
lret
out
cmpsl
out
jo
lock
ret
repnz
adc
stc
and
test
sbb
inc
sbb
mov
jp
pop
lret
loopne
jno
shll
sbb
and
and
inc
pop
xchg
mov
shll
pop
push
sbb
daa
inc
ss
dec
jp
mov
sub
jmp
jb
inc
jnp
xchg
xchg
xor
ret
mov
or
jae
cs
arpl
and
and
mov
jbe
xchg
aad
fists
out
jmp
cltd
js
mov
inc
outsl
stos
ss
cmp
lret
pop
lods
cld
sub
mov
ret
jmp
sarb
dec
cmpsl
mov
repz
mov
adc
dec
cmp
mov
dec
jno
test
mov
enter
test
jno
jo
comiss
mov
jns
cltd
or
out
and
adc
pop
mov
mov
out
sti
push
loopne
out
or
add
or
xchg
loop
mov
in
sub
pusha
adc
rcrb
mov
add
imul
xchg
cs
cli
jle
sub
pop
mov
aad
mov
ljmp
inc
cmpsb
or
mov
je
scas
xchg
jno
cmpl
mov
add
addr16
adc
xor
bound
and
lods
xchg
add
mov
jecxz
test
rcll
sub
add
lods
inc
outsb
mov
je
dec
or
lret
inc
in
ja
inc
inc
jne
add
dec
or
bound
clc
movsl
adc
leave
mov
jae
sub
mov
in
test
jmp
outsb
pop
adc
cmpsl
mov
not
movsl
insb
adc
mov
mov
pusha
xor
mov
jp
fwait
test
or
fidivs
mov
pop
jle
and
lahf
jbe
sub
lods
mov
out
jg
xor
cmp
insl
mov
frstor
inc
rcrb
daa
push
mov
jg
or
and
sti
fwait
dec
pop
dec
push
imul
cmpsb
imul
push
mov
add
xchg
mov
stc
pop
movsb
mov
in
jb
mov
add
imul
filds
push
and
sub
sub
data16
xchg
jb
sub
test
cmp
test
and
fsubl
jnp
loop
scas
xor
jg
mov
push
mov
mov
mov
into
test
lret
jne
jp
shrb
lds
add
lcall
cmp
jno
xchg
iret
or
outsb
mov
sbb
and
movsb
push
jne
scas
mov
pop
dec
or
xchg
ljmp
cmp
mov
ffree
jo
push
mov
jns
imul
iret
imull
dec
lret
jns
jne
insl
sub
jns
jne
cmp
mov
clc
inc
and
mov
ja
sub
movsb
xchg
cli
ret
xchg
jle
or
cmpl
dec
jmp
mov
xor
xchg
daa
mov
negb
pop
stc
in
pusha
js
cmpsl
sub
stc
mov
cs
push
mov
and
inc
fs
xchg
xchg
pop
xchg
ss
dec
orl
mov
ret
mov
mov
inc
fldcw
mov
sub
sbb
shrl
arpl
pusha
stc
mov
dec
shll
lods
inc
jle
outsb
cmp
insb
lret
pop
cmp
testl
out
aad
rcl
cld
and
pop
insb
fldt
lea
gs
cmp
cmp
adc
sub
popa
sbb
push
add
int3
outsb
loop
dec
stos
pusha
push
nop
lret
mov
sbb
dec
scas
dec
fisttpll
lret
lds
xchg
cmp
xor
jbe
or
cmpsl
jecxz
outsl
mov
xor
cmp
lea
dec
hlt
test
mov
lret
mov
sub
add
hlt
insl
mov
das
and
cmp
daa
cmp
jbe
mov
cld
pushf
inc
cltd
lods
cmp
jbe
in
cld
out
push
cmc
out
or
sub
cmc
adc
adc
mov
mov
inc
stos
push
inc
in
mov
and
pop
stos
outsb
mov
xchg
mov
push
adc
or
loop
movsb
or
inc
adc
stos
daa
push
fmull
aas
nop
sti
leave
std
sbb
imul
es
leave
js
mov
jnp
mov
adc
imul
add
movsb
cmp
and
push
outsb
test
orl
sbb
repz
dec
pop
push
jns
arpl
push
push
adc
adc
cs
sub
push
jae
cltd
das
in
cs
xor
lock
outsl
adc
and
push
shrl
sub
sub
mov
ret
test
xchg
subl
push
adc
adc
sbb
sub
js
hlt
sub
mov
ljmp
jmp
imul
int
xor
adc
pusha
dec
dec
cwtl
xor
imul
scas
and
xchg
pop
sub
lcall
mov
mov
lea
aas
insb
adc
push
sub
data16
data16
mov
test
fwait
loopne
shlb
push
ja
sbb
loop
cmpb
iret
adc
nop
and
sbb
add
jno
cmpl
mov
pop
mov
or
xor
push
xchg
adc
lahf
xor
adc
pop
dec
test
push
adc
and
mov
les
mov
inc
add
push
bound
lock
dec
mov
popa
sbb
in
pop
push
or
jecxz
sub
adc
out
stos
jbe
mov
add
xchg
inc
mov
das
jnp
or
pop
test
int
gs
pop
call
sahf
or
dec
je
push
sub
cs
sub
mov
inc
notl
mov
dec
imul
mov
fbld
pusha
out
insb
or
xchg
jp
stc
test
pop
enter
out
and
sbb
pop
lret
adc
xor
int3
loop
addb
popa
pop
stos
cmp
int3
out
cmp
stos
data16
into
inc
aad
subb
sub
pusha
ficomps
cmp
jge
sbb
cmp
xor
imul
lds
sar
push
sbb
mov
clc
mov
ljmp
mov
pop
dec
or
arpl
mov
popf
mov
fisttpll
jmp
out
int3
sbb
pop
pusha
lret
data16
imul
pop
stos
in
jge
aas
repnz
xor
sub
loope
or
or
dec
and
cwtl
xor
mov
jno
loopne
sbb
insb
idivl
jbe
mov
pusha
pushf
jmp
cmp
mov
sub
xor
pop
cwtl
push
push
ss
push
mov
fwait
cmpsb
decb
pop
movsl
bound
xchg
orb
cmc
xor
push
jno
dec
cmpsb
lods
dec
push
mov
dec
and
or
mov
int
mov
sbb
pop
xchg
push
es
rclb
dec
adc
mov
and
mov
xchg
mov
cmp
leave
mov
test
ljmp
mov
add
xor
pop
lods
mov
ret
shlb
popa
sbb
fisubl
hlt
ja
jmp
xor
pop
push
test
xlat
xchg
dec
out
xchg
and
sub
xor
sarl
cld
test
popa
and
in
cmp
jo
xor
and
popa
loopne
ja
clc
lds
inc
stos
clc
call
fcom
clc
outsb
xchg
aaa
clc
int3
mov
cmp
jns
mov
xor
and
mulb
cmpsb
and
sbb
or
arpl
mov
mov
pusha
cmp
adc
push
cs
cltd
loopne
mov
mov
mov
fsubrs
cmpsl
and
call
jmp
add
mov
clc
outsl
inc
je
fnsave
or
popf
out
xchg
mov
dec
inc
xchg
rcrl
cmp
jp
push
fimuls
mov
xchg
dec
pop
movsb
out
daa
adc
mov
insl
loopne
xor
mov
pop
lods
cmp
idivb
popf
mov
dec
ret
mov
adc
sar
jmp
enter
jnp
pop
mov
lret
enter
mov
mov
dec
mov
inc
cwtl
dec
sub
push
adc
xchg
push
adc
bound
push
dec
add
adc
push
sbb
cmp
clc
push
pop
orb
cld
pop
jg
lds
out
fs
push
inc
addr16
cmp
and
scas
adc
jmp
aam
sub
ret
pop
jle
or
mov
mov
es
cmpsb
jbe
inc
test
ret
mov
adc
and
std
add
je
mov
dec
mov
cmp
cmpsb
les
inc
mov
push
mov
xor
xchg
xor
sbb
mov
xchg
mov
xchg
out
xchg
add
adc
mov
cld
mov
pushf
call
jns
js
data16
push
or
sub
pop
push
fistl
scas
fwait
jae
lods
mov
cltd
xor
imul
stos
int3
dec
jmp
xor
push
or
xor
inc
int3
mov
lea
ret
inc
cmpsb
mov
or
pusha
inc
mov
outsb
out
ss
out
jbe
lods
xor
mov
lcall
in
nop
je
push
cwtl
sbb
cmp
cmpsb
idiv
pop
xchg
jb
pusha
sub
and
adc
lret
test
push
pop
enter
stos
and
xchg
push
into
mov
and
push
pushf
or
mov
mov
push
or
movsb
test
sub
mov
hlt
in
aaa
or
mov
add
scas
insb
jge
adc
inc
ret
dec
cld
lods
add
ss
fsubl
sub
xchg
sbb
mov
jb
ficoml
xor
push
pop
mov
fwait
jae
mov
sbb
sbb
lods
clc
loopne
sub
mov
jecxz
aad
inc
sbb
dec
adcl
cli
fadds
into
in
faddl
lock
repz
jbe
xchg
cmp
or
and
add
cwtl
xchg
insb
aad
mov
mov
inc
je
jg
mov
mov
dec
iret
mov
mov
add
push
adc
mov
xchg
inc
push
pop
or
les
cmp
dec
sbb
jle
and
mov
adc
adc
mov
adc
add
push
adc
mov
rcl
icebp
jo
push
mov
mov
cmp
push
mov
in
cmpsl
mov
loope
cmp
jmp
dec
push
cmpsl
push
jno
jnp
cmp
movsb
lds
sub
inc
cltd
das
js
cli
ret
inc
mov
stc
sub
pop
mov
test
dec
fnsave
push
inc
sbb
push
testl
and
cmpsb
lahf
ret
dec
cltd
pop
out
into
push
mov
mov
ja
or
xorb
rclb
rorb
add
and
or
jb
in
cmp
rcrb
add
fbstp
push
sub
adc
push
mov
mov
gs
and
jo
dec
mov
mov
negb
cmc
sub
sub
arpl
xchg
outsl
ljmp
fistps
pop
test
mov
mov
push
aam
dec
mov
in
lahf
lret
js
nop
xor
iret
xchg
jg
mov
int
ds
cltd
lret
push
cmp
ljmp
adc
and
pop
mov
negb
mov
lds
bound
nop
jnp
repz
add
les
mov
sub
mov
leave
daa
or
mov
pusha
jl
jne
xor
shlb
mov
mov
insl
sbb
fwait
loopne
xor
jle
xor
add
into
lea
jno
or
inc
sub
mov
je
dec
mov
icebp
inc
shl
add
and
das
test
out
inc
jp
xchg
leave
sbb
arpl
push
std
jecxz
nop
mov
rclb
adc
or
fdivl
push
xor
lods
sti
popf
push
xor
shl
xchg
sbb
pop
cmpsb
inc
pop
popf
outsb
insb
push
and
cmpsl
cli
int
xchg
inc
mov
inc
repz
adc
int
or
shlb
call
mov
aas
xchg
and
outsl
ret
stos
daa
mov
pop
insb
inc
repnz
leave
lods
cld
popf
enter
call
hlt
pop
cmp
mov
out
pop
in
mov
cs
sub
dec
pusha
pop
add
pushf
icebp
sbb
out
movsl
mov
rcr
and
pop
test
out
popf
jg
mov
jle
out
or
xor
adc
divl
dec
ja
ja
lret
mov
mov
inc
adc
push
mov
clc
push
ja
sarl
inc
in
mov
movsb
gs
aas
out
es
idiv
hlt
pop
cmp
cmpsl
cli
imul
lcall
sbbb
sub
cwtl
sub
psubb
es
push
je
mov
ds
dec
push
lret
adc
push
mov
mov
cmp
sbb
imul
mov
xchg
mov
jge
or
fwait
push
fs
add
or
cmp
orb
aas
repnz
pop
cli
fstpl
mov
cwtl
outsb
pop
add
mov
ja
push
nop
mov
mov
inc
call
xchg
ficompl
rol
adc
xchg
andb
inc
test
xchg
xchg
mov
adc
movsl
pop
push
or
nop
cwtl
mov
scas
mov
pushf
lods
fcoml
das
test
test
push
adc
in
xchg
and
fsubr
packssdw
insb
lock
lods
je
aaa
mov
xor
nop
lret
xor
sub
jg
insb
icebp
hlt
inc
jle
push
in
rclb
cwtl
dec
push
sub
aam
and
in
sarl
out
stc
mov
push
in
lods
push
and
in
fbld
push
je
lsl
in
jl
jae
cli
pop
scas
jnp
xchg
flds
jmp
imul
adc
sbb
mov
cld
insl
jmp
sub
out
in
mov
mov
add
jp
push
ss
ljmp
xchg
cmp
push
call
fwait
mov
jg
fdivr
xchg
and
arpl
jp
lods
xor
adc
jb
aam
push
sbb
shrl
pop
xchg
les
sbb
fadds
stos
mov
mov
inc
loop
rorb
cmpsb
fadd
jne
jae
jns,pt
mov
cs
ficompl
dec
imul
lods
mov
sahf
or
jnp
adc
sbbl
sbb
les
sahf
mov
faddl
pop
sbb
pusha
out
lret
jns
hlt
clc
daa
cmp
mov
jge
sbb
mov
xor
push
pushf
jle
xchg
mov
cld
add
adc
je
xchg
ds
mov
pop
mov
jl
movsb
repz
or
popf
mov
fwait
in
jge
call
arpl
inc
sub
mov
sbb
mov
lcall
gs
mov
push
jne
js
xchg
cmpl
lret
sbb
fimuls
add
dec
pop
pop
fiadds
jns
dec
cli
lahf
jns
in
orl
nop
xor
mov
out
inc
jmp
inc
bound
push
shrb
and
test
lcall
cmpb
cwtl
sub
in
mov
insl
addr16
adc
insb
jae
icebp
mov
in
je
fisubrs
jae
sub
pusha
ss
sbb
ret
and
sbb
mov
sti
cmp
xchg
test
js
cwtl
cwtl
adc
rorl
mov
and
mov
imul
mov
inc
push
xor
call
xor
pushf
jne
push
pop
sbb
dec
call
jno
shl
add
sbb
orl
stos
xor
xor
and
cmpsl
add
stos
inc
int3
data16
lcall
add
inc
inc
xchg
fsts
repnz
arpl
cs
daa
mov
mov
push
cmp
sub
into
lea
popa
addr16
pop
ret
aam
ja
shrl
js
jb
mov
rcrl
jne
inc
addl
orl
add
pop
cmp
fcmovnbe
scas
jmp
divb
mov
arpl
mov
and
mov
lahf
movsl
lds
test
test
fs
add
movsb
xchg
scas
dec
imul
or
cld
fs
rclb
sub
fcomps
in
push
stos
dec
sbb
mov
pushf
aad
adc
inc
les
xchg
adc
pop
cmp
stos
push
inc
jno
dec
fcompl
and
or
jb
test
push
fwait
dec
xorb
fwait
or
mov
sub
and
push
in
loope
jp
aaa
inc
push
in
push
xchg
sbb
sti
mov
sbb
sbb
popa
lods
mov
das
call
test
cmc
lods
frstor
jne
sub
mov
xor
dec
or
loope
pushf
bound
test
sbb
add
test
ds
add
rcll
imul
pop
or
popa
mov
cmc
incb
mov
imull
test
mov
inc
xchg
and
inc
clc
cmp
sarl
mov
std
and
subb
pop
rorl
fs
xor
mov
sbb
es
dec
aaa
xor
jmp
pop
roll
fwait
pop
fstp
push
adc
arpl
xchg
mov
ret
lods
adc
dec
cmp
cwtl
pop
xchg
fdivrl
mov
rol
sbb
cwtl
das
mov
push
cmp
mov
sbb
icebp
btc
sub
nop
pop
nop
arpl
clc
add
or
and
cmpl
pop
push
aad
in
gs
fnstenv
mov
loopne
jge
rcll
lcall
ret
movsl
cmc
das
cli
decb
sub
les
xchg
mov
inc
aad
push
lahf
outsl
inc
fsts
inc
pushf
cmpsb
dec
dec
cmpsl
aas
mov
lcall
or
push
cmc
and
stos
mov
jmp
xchg
arpl
sbb
sarb
ja
dec
test
jb
insl
mov
int3
mov
sub
inc
adc
mov
jmp
in
and
push
inc
repz
xchg
mov
cmp
dec
fsubrl
inc
sub
daa
dec
leave
leave
pop
xor
jno
test
xchg
and
cli
mov
xor
xor
xchg
mov
jbe
test
les
dec
dec
sti
mov
inc
shlb
outsl
mov
pop
sti
or
pop
rorb
push
lods
sbb
les
cs
mov
adc
into
dec
fs
push
xor
stos
mov
fidivrs
icebp
fisubl
lea
inc
iret
js
or
sub
lds
sbb
mov
bound
nop
dec
ror
and
in
sub
das
xor
test
outsb
sub
push
fstl
vmwrite
iret
lock
fisubs
xchg
pop
std
scas
jp
gs
pushf
into
or
pop
ljmp
fstps
xchg
fisttpll
leave
sbb
lds
pop
jg
adc
sub
pop
push
sahf
nop
lea
add
in
push
pop
ja
and
test
popf
fistl
mov
lds
pop
sarb
jl
into
push
xor
push
pusha
mov
and
sbb
sbb
arpl
fidivs
lea
icebp
aas
bt
sub
or
movsl
sub
leave
test
shll
movsl
dec
fs
dec
insl
subb
and
jmp
data16
mov
dec
jae
out
jp
cmp
mov
rcl
mov
in
sti
push
push
fbstp
dec
or
imul
fidivrs
and
imul
sub
dec
mov
nop
jl
mov
out
xchg
stos
mov
jns
enter
fdivrl
add
jnp
mov
in
sbb
mov
inc
inc
mov
inc
push
mov
or
test
inc
dec
push
jecxz
push
xor
out
sub
in
daa
push
outsb
push
fwait
sbb
sub
je
cs
xor
loop
inc
addl
je
stc
add
je
pushf
jge
adc
xor
jp
pushf
xor
dec
test
fists
pop
insl
xor
push
out
scas
push
xor
push
mov
mov
dec
add
outsl
pop
push
mov
insb
sbb
jae
push
pop
adc
icebp
push
inc
jmp
dec
push
aam
cmc
cmp
gs
jecxz
add
xchg
cltd
cltd
push
lock
pop
xchg
addr16
dec
aaa
add
in
pushf
fistpl
daa
dec
mov
pinsrw
xchg
push
test
ljmp
scas
clc
mov
lret
stos
xor
cmp
repnz
sti
int
movsb
sub
mov
dec
jnp
push
seto
xchg
subb
xchg
jg
jp
jle
jecxz
cmpsb
mov
cmp
mov
imul
jge
shll
push
pop
push
arpl
xchg
dec
sub
push
lcall
inc
xor
lcall
adcb
push
aad
in
cmpsb
das
jne
clc
clc
add
adc
and
push
lds
push
push
pop
sub
push
scas
push
nop
bound
dec
mov
mov
in
push
sbb
loope
pop
xchg
mov
pop
xchg
xchg
mov
popa
jae
ja
cmp
xchg
ss
popf
jmp
icebp
add
xchg
movsl
idivb
lds
dec
sub
xchg
xlat
inc
hlt
test
filds
sti
stc
jno
mov
fldt
scas
inc
mull
mov
jl
scas
cmpsb
inc
scas
hlt
movsb
call
cltd
jle
sub
sti
and
in
push
add
mov
insb
loop
or
icebp
ret
xchg
add
fsts
xor
jae
rcrl
jae
clc
fdivrl
dec
jle
add
repnz
cwtl
subb
hlt
push
xchg
data16
js
les
sbb
lock
xor
push
mov
call
aad
cwtl
lea
adc
mov
test
movsb
jb
or
dec
mov
leave
cmpsb
sub
test
mov
iret
test
pusha
pop
mov
xchg
out
push
adc
roll
pushf
push
enter
shrb
bound
add
and
rclb
inc
rcrl
adc
and
push
cmpsb
pop
cmp
cmp
push
cmp
insb
stc
dec
dec
jmp
sub
mov
pusha
cwtl
int3
pop
mov
push
test
add
daa
jmp
clc
pop
inc
xchg
mov
cli
popa
jo
mov
and
add
sahf
pop
lods
lret
xchg
fmull
outsl
test
and
lock
cmp
xchg
mov
nop
pop
sub
outsb
xlat
cltd
insl
mov
icebp
fwait
mov
daa
movsl
dec
xor
pop
aam
ss
lods
in
mov
xchg
lret
and
in
dec
out
lds
das
or
dec
ret
out
adc
sub
iret
fidivrs
lods
xchg
push
dec
cltd
xchg
push
xor
sub
cmp
xchg
adc
cmp
outsb
scas
fildl
shr
dec
cmp
adc
pop
pop
mov
xor
and
push
cmp
scas
pop
clc
cmc
xor
paddw
pop
jg
lock
aas
ud0
adc
jp
push
cmp
sar
or
or
loop
pop
jp
adc
xor
shll
jne
sbb
push
dec
test
sbb
jb
cmp
sbbl
divl
fsubs
ss
stos
sbb
cmpsl
sub
dec
adc
pop
and
rcrl
insl
xor
mov
adc
xor
ja
pop
xchg
jecxz
rcr
xchg
mov
bnd
insl
out
add
sub
jp
mov
mov
cmpsl
xchg
cs
xlat
cs
push
push
hlt
jge
sbb
push
fnstcw
push
inc
inc
add
out
in
int3
xchg
fucomip
imull
jbe
sub
leave
cwtl
insb
fxch
mov
adc
aad
jecxz
lret
dec
arpl
and
jbe
pop
cld
xchg
pop
fstpt
dec
push
jae
test
cmpsl
negb
lock
sub
add
pop
push
mov
pop
pop
push
lds
pop
mov
jae
loopne
ja
sbb
dec
lret
in
addr16
and
ltr
stos
and
pop
mov
rclb
repnz
adcl
ret
cmpl
popf
enter
cmpsl
hlt
push
pop
and
xchg
orb
loope
leave
pop
jmp
jb
pop
push
pop
and
sarl
pop
dec
push
pop
loop
sub
push
movzwl
ljmp
fstpt
inc
cmp
gs
lock
outsb
dec
xchg
cmp
in
dec
lret
xorb
add
push
mov
aam
mov
std
mov
or
adc
outsl
xor
icebp
ja
xchg
sub
pop
xchg
dec
dec
test
push
pusha
subb
loope
cmp
dec
fnstenv
xchg
cmpsl
cld
xchg
push
jl
and
jge
sarb
fisubrl
cmp
cs
inc
fistpl
pop
test
pop
mov
sub
pop
xor
les
lods
pop
sbb
mov
mov
in
in
sahf
push
pop
xchg
xchg
sub
cmp
inc
mov
mov
ss
mov
pop
xchg
lea
aas
jecxz
rorb
movsl
test
lcall
imul
sub
sahf
icebp
xor
loopne
std
xchg
lea
xor
das
mov
add
pop
stc
or
push
iret
dec
iret
movsb
shll
sub
pop
test
sbb
sbbb
jl
notb
sbb
lods
test
mov
sub
das
sbb
cmp
cli
lcall
sub
test
sub
cmpsl
repnz
call
xchg
cmp
adc
mov
xchg
mov
xor
or
add
fs
xor
cli
inc
lldt
xchg
iret
rdmsr
jg
mov
stos
add
aad
mov
cli
mov
pop
mov
ljmp
lds
xor
adc
int
inc
leave
mov
or
xchg
dec
dec
or
inc
sub
push
lahf
fs
in
movsb
fsubrs
cli
imul
mov
add
mov
test
iret
fsubs
cltd
ret
xchg
enter
and
loop
in
out
or
push
into
or
push
jno
inc
out
fdiv
je
ja
fnstcw
and
clc
std
jle
addr16
jae
adc
sub
xchg
fisubs
cmp
jo
adc
out
xor
dec
jmp
lock
dec
mov
cmp
lcall
push
int
nop
popf
notl
int
pop
out
cmp
cmp
loopne
mov
push
stc
jae
sbbl
xorl
rcrl
dec
in
jae
scas
add
xlat
and
ret
sar
or
adc
sahf
je
and
jae
xor
sub
inc
adc
mov
sbb
jns
mov
and
inc
sub
or
lret
ljmp
sbb
jno
sub
jecxz
scas
pop
mov
sub
insl
dec
pop
mov
sub
ja
push
and
push
jmp
dec
shl
cmpsb
mov
xchg
fistl
cwtl
popa
or
cmpsb
push
aad
adc
xor
push
adc
cmp
into
lds
lret
fstps
fst
cli
adc
mov
ljmp
xlat
mov
pop
inc
xor
cmp
pop
fwait
out
out
xchg
movsb
orl
sbb
outsl
ja
outsl
pop
fldl
lcall
lods
dec
jbe
int3
lds
ljmp
ds
and
loope
jns
fs
dec
stos
xchg
sbb
test
leave
inc
cmpsb
mov
fwait
mov
inc
jp
pop
and
out
xor
stos
jbe
cli
and
xchg
insl
sbb
lock
lods
add
pop
stc
mov
fbstp
jo
xlat
sbb
stc
lods
das
lock
add
add
dec
jmp
popf
pop
shl
es
je
mov
inc
push
cmp
mov
mov
cmp
loope
mov
test
daa
mov
and
popf
add
lret
leave
repz
cmp
int
mov
shll
xchg
mov
dec
test
test
push
rcl
xchg
fldt
mov
sub
dec
leave
ja
push
sub
jle
scas
scas
shll
aaa
daa
cltd
pusha
popf
hlt
test
adc
jg
sti
cmp
pop
clc
or
mov
jbe
inc
pop
pop
fs
jbe
mov
out
jg
sbb
nop
mov
leave
rcll
je
out
rcll
addr16
mov
pop
sbb
test
jl
out
jg
les
or
nop
cmp
lahf
test
xchg
bound
inc
imul
loope
lahf
lods
inc
js
xchg
xor
imul
fistl
mov
jmp
aad
xchg
sub
jge
repnz
popf
enter
push
mov
push
test
fs
push
cmp
stc
xor
mov
adc
mov
push
sbb
push
mov
sti
in
out
shlb
into
mov
jno
call
rcr
sbb
lock
shlb
out
sbb
mov
or
aas
push
mov
mov
jno
fmuls
and
jle
movsb
fbld
inc
jne
mov
pop
mov
push
dec
jnp
fwait
inc
fs
xchg
and
cld
outsl
push
mov
icebp
xor
iret
inc
jmp
fisttps
mov
dec
add
jb
roll
popa
sbb
and
mov
fs
pop
pop
xchg
sbb
aas
pop
sbb
imulb
inc
add
push
es
jns
adc
out
xchg
jecxz
mov
jne
aad
mov
fists
sbb
dec
cmpsb
add
ror
sub
xor
xorb
fstp
cs
and
and
and
scas
fisttpll
ja
sbb
xor
shl
insl
out
xor
and
mov
jbe
push
es
jb
jno
and
xchg
mov
sub
arpl
inc
in
cmp
xlat
sub
dec
jne
lea
cmp
mov
adc
adcb
imul
xlat
xchg
push
jmp
mov
xor
add
sbbl
loope
sbb
sbb
or
int3
je
gs
cmpsb
in
inc
mov
sbb
sti
ja
lods
mov
pop
cmp
adc
gs
roll
inc
mov
adc
fcompl
insl
sbb
xchg
iret
cmp
mov
or
scas
push
xor
push
scas
mov
and
lds
mov
test
pushf
arpl
orl
cmpsb
lock
orl
jno
sbb
mov
and
mov
inc
dec
xchg
jns
sub
int3
gs
cmc
mov
push
push
push
addr16
ret
pop
pop
dec
and
sbb
xchg
jae
pop
int
scas
nop
sub
ss
aas
test
leave
push
or
adc
adc
ss
mov
pop
rcrb
xchg
push
scas
xchg
arpl
sbb
xor
mov
out
xor
jecxz
mov
and
mov
inc
pop
int3
adc
mov
mov
insl
rorb
sti
popa
popa
jmp
add
test
lahf
mov
add
adc
imul
xor
push
mov
stos
mov
cmp
sbb
ret
jne
xor
dec
loopne
xor
dec
icebp
data16
inc
pop
shrl
je
in
ds
in
in
push
test
and
or
in
sbb
in
cmp
inc
jb
adc
mov
sbb
inc
pop
in
in
ror
jle
xor
loope
xor
inc
loope
jo
xchg
pop
bound
loope
int
push
stc
jns
adc
sbb
fs
xor
lcall
xor
xor
inc
loope
addr16
mov
mov
test
inc
popa
dec
xor
mov
and
in
std
ror
xor
xor
xor
out
lahf
mov
push
jmp
mov
cmp
pop
mov
xchg
push
mov
add
loope
enter
jbe
inc
aas
adc
pop
int3
pop
xchg
pop
fidivrl
aas
lock
push
xchg
sbb
mov
pop
pop
iret
in
int
or
jno
pop
les
add
into
fdivrl
sbb
or
ficoms
gs
imul
pop
adc
iret
push
lods
mov
test
cmp
push
lahf
repz
push
fs
jno
imul
inc
jae
xor
cld
cmp
push
pop
imul
xor
bound
daa
xor
add
outsl
cmp
mov
cmp
call
xchg
xor
lds
out
add
in
mov
adc
imul
push
call
mov
xor
cs
inc
les
mov
stos
lcall
mov
cmp
xchg
jmp
mov
dec
outsl
mov
sbb
fcmovnu
cmp
call
inc
repnz
push
cltd
test
push
xchg
push
lret
aam
xchg
shrl
jbe
push
xor
cmp
xchg
sti
scas
out
mov
fisubs
lock
pop
loope
shrl
or
in
pop
sbb
pop
pop
mov
sbb
sbb
daa
inc
sbb
push
addl
ret
jno
mov
je
mov
insb
adc
xchg
push
push
pop
sbb
test
prefetch
fistpll
test
ljmp
lret
pushf
xor
dec
sub
xchg
aas
xchg
dec
xor
push
sbb
and
add
cmc
push
pushf
lret
push
push
lea
sahf
or
shll
aaa
xor
inc
ljmp
mov
divb
addb
and
movsl
push
js
outsl
xchg
loope
clc
mov
xchg
shl
pop
pop
je
mov
or
dec
adc
insl
cmp
xchg
movsl
sub
inc
ret
mov
and
mov
call
sbb
shrl
cmpsl
dec
jne
out
cmpsl
or
push
dec
ficoms
pushf
movsb
scas
std
mov
push
push
cmp
or
add
jns
aad
or
xor
fnstsw
daa
jmp
jo
xchg
mov
lods
test
push
mov
xchg
cmpsb
mov
mov
pop
dec
xchg
or
lods
in
and
add
shll
mov
lret
jbe
adc
hlt
pop
push
adc
pop
dec
xchg
call
xchg
push
fisubrs
or
test
lahf
jg
cld
cs
mulb
sarb
pop
dec
mov
movsl
jmp
mov
sahf
sub
jge
jg
and
or
stc
and
lret
add
dec
daa
pop
mov
push
dec
mov
test
lea
push
xor
sub
cmp
std
mov
adc
jg
pusha
jge
and
lahf
xchg
inc
fcoml
cmp
repnz
xor
or
pop
mov
jo
mov
sub
shrl
movsb
fdivs
cmp
aad
xchg
jmp
and
mov
repnz
mov
arpl
xchg
aas
pop
mov
xchg
test
roll
push
mov
cli
xor
out
aam
dec
cmp
lds
notb
lcall
sub
dec
sbb
les
dec
mov
popf
pop
mov
les
clc
test
jno
nop
xor
sbb
fmull
inc
adc
lret
fcoms
icebp
mov
mov
int3
imulb
fidivrs
adc
mov
shll
lret
dec
adc
fdivl
mov
test
dec
and
mov
jmp
and
jne
mov
jae
dec
pop
shll
sbb
sub
cwtl
negl
out
jo
adc
test
lods
mov
jecxz
or
adc
out
pop
dec
mov
or
shlb
fdivl
and
ret
sarb
inc
pop
lcall
cmpsb
ret
mov
call
jp
or
shlb
pop
mov
xchg
out
and
pop
int
sub
adc
inc
sbb
xor
sarb
inc
bnd
xor
adc
repnz
addr16
lea
cmp
or
dec
xchg
lcall
jg
cltd
stc
dec
mov
xlat
inc
xchg
inc
ljmp
loopne
daa
pop
sub
mov
push
sub
mov
or
jecxz
lret
shl
xlat
cmp
into
inc
das
testl
mov
ficomps
add
divl
fldt
mov
ret
test
cmpsb
test
out
sbb
addb
pop
sahf
sub
mov
neg
out
push
inc
and
rorb
repz
hlt
cwtl
lock
cmpsb
cmc
push
hlt
in
out
jge
fs
xor
push
inc
clc
enter
dec
sti
arpl
and
scas
adc
out
push
leave
dec
loope
call
and
into
cmpsl
or
mov
push
loop
leave
adcb
lret
jge
fdivrs
sub
sbb
insb
sti
cmp
inc
mov
jle
lods
dec
lret
mov
mov
sub
or
mov
push
jmp
xchg
int
jge
cs
dec
sbb
sbb
or
push
leave
lock
mov
arpl
mov
nop
test
jecxz
mov
mov
sbb
mov
orb
in
bound
push
mov
mov
mov
testl
inc
lock
subb
pushf
push
bswap
pop
imul
scas
pop
sub
push
idivb
repnz
xor
jecxz
cmp
push
xlat
ss
icebp
fistps
ljmp
dec
pushf
in
dec
int
fdivs
in
xor
xorl
mov
lcall
jae
fcoml
jo
sbb
loopne
aam
or
sbb
xor
jnp
lea
inc
mov
dec
jne
pop
ja
scas
mov
movsl
xor
arpl
push
cltd
mov
inc
cmc
adc
adc
call
push
test
mov
xchg
loopne
sub
jle
cmpsl
cmpsb
rorb
xchg
add
pop
jp
loopne
sbb
or
dec
cli
cs
bound
mov
rcl
sub
mov
mov
xchg
in
fwait
loope
adc
mov
sti
mov
das
or
mov
dec
sub
in
xchg
sub
popf
scas
jmp
ds
add
sbb
sub
cmpsl
ds
sub
enter
test
bound
faddl
cmp
push
inc
in
cmp
pop
inc
leave
je
cmc
mov
push
adc
dec
dec
mov
nop
pop
adc
xor
mov
test
mov
cwtl
and
sub
pop
xor
lds
mov
data16
in
jne
dec
orb
jg
shl
ret
leave
out
repnz
dec
mov
lea
mov
pop
or
cld
sbb
push
int3
mov
jp
push
jp
xchg
adc
sbb
stos
sub
popf
sbb
inc
push
adc
nop
filds
addr16
mov
mov
or
adc
sbb
and
inc
or
dec
sub
push
aas
mov
loope
loopne
cmpsl
test
push
scas
push
mov
push
test
jns
jo
push
push
ljmp
push
push
push
jns
add
xchg
add
int3
fdivl
fbld
ret
xor
daa
dec
jo
jnp
xor
pop
into
xor
cld
xlat
mov
clc
loop
xchg
out
in
outsb
cmp
sarl
daa
sbb
dec
dec
push
ss
out
flds
jbe
daa
xchg
pop
dec
push
scas
and
mov
icebp
ja
shll
stos
add
add
adc
push
data16
arpl
mov
sub
movsb
lods
dec
int
xor
ljmp
dec
and
sub
std
pusha
or
sahf
popa
bound
inc
int3
mov
or
mov
push
inc
aas
mov
faddl
mov
push
jns
pop
call
dec
mov
xchg
mull
push
pop
or
mov
push
and
add
in
ja
xchg
pop
xchg
pop
ret
mov
inc
add
popa
and
push
stc
repz
xor
pop
add
movsb
es
cmpsb
scas
movsl
js
push
adc
inc
jl
loopne
dec
ljmp
push
inc
dec
js
insb
jne
xchg
cmc
mov
fnstcw
gs
xor
mov
repnz
xorl
in
lock
mov
xor
scas
push
xchg
test
mov
mov
mov
loope
jnp
out
inc
pop
xchg
mov
sbbl
sub
sti
jg
cltd
xor
jl
dec
clc
add
movsb
dec
roll
mov
mov
ljmp
xor
jle
setno
mov
std
mov
decb
fcmovne
jb
sub
pushf
adc
push
movsl
sub
fcompl
je
sbb
push
sbb
out
mov
jle
lock
mov
aad
inc
xchg
or
movsb
fstpt
test
cli
push
pmaxsw
jg
shr
or
fdiv
or
ss
faddl
mov
int
push
push
dec
or
inc
inc
cmp
jle
xor
pushl
xor
or
daa
jl
xor
cs
inc
pop
int
fbld
push
cmp
addb
inc
add
push
rcr
popf
rcrb
fsubl
mov
cs
ds
lock
sbb
scas
jb
scas
out
pusha
hlt
jl
mov
and
pop
mov
inc
sub
cmp
in
enter
cld
arpl
or
mov
dec
push
into
jmp
inc
jo
sub
test
shlb
jns
mov
cmpsl
test
shll
and
mov
pop
stos
scas
xchg
mov
adc
ja,pt
repz
push
scas
cmp
mov
enter
mov
inc
fbstp
pop
xor
mov
xchg
jmp
in
or
jae
inc
jle
mov
jl
jp
pop
leave
enter
popa
inc
scas
jo
dec
xor
jae
scas
cmpsl
loope
adc
mov
in
leave
push
icebp
fdivrp
jge
adc
jo
mov
lea
popa
test
shlb
in
ficoml
into
mov
dec
or
sbb
arpl
dec
cmp
std
mov
jecxz
clc
or
mov
sbb
push
pop
and
hlt
lods
addr16
mov
push
xor
sub
mov
push
jbe
shlb
adc
add
inc
push
jmp
cmp
dec
pop
sub
add
and
andl
jl
ss
sbb
pushf
mov
mov
mov
arpl
in
or
dec
mov
aad
xor
mov
leave
fidivl
jle
xchg
jl
decb
sti
push
mov
je
in
movsb
stos
pop
jge
cmp
mulb
and
leave
es
int3
jbe
push
sahf
in
scas
mov
pop
mov
xor
sbb
movsb
jle
mov
xchg
ja
shl
xchg
adc
and
gs
jle
sti
fisubl
orl
rep
sbb
cmpsl
leave
or
addr16
movl
movsl
sub
aad
enter
jl
xlat
pop
xchg
inc
icebp
xorl
sub
test
push
push
mov
call
jp
push
jo
add
ja
je
or
ss
or
xor
pop
push
add
ret
mov
jp
hlt
mov
loopne
fidivrs
jmp
inc
add
addl
or
mov
jae
push
add
push
xlat
mov
push
push
push
xchg
mov
inc
rolb
shl
pop
mov
dec
dec
ror
add
subl
mov
mov
or
icebp
mov
mov
rcll
inc
or
jno
in
cmpsl
js
dec
or
fidivl
or
dec
movsl
in
clc
inc
mov
aam
pop
dec
mov
mov
mov
loop
sbb
popa
pop
out
test
into
cmp
jnp
jp
mov
loope
xor
setnp
movsl
mov
in
test
jno
sub
loope
cmpsl
pop
jne
gs
add
cmp
in
xchg
in
add
jmp
hlt
and
inc
mov
faddp
sbb
mov
out
cmpsb
hlt
mov
shlb
test
mov
pop
fstl
xor
mov
into
jbe
push
jmp
inc
inc
rolb
lcall
sbb
gs
in
mov
scas
cli
push
and
xchg
add
xor
push
or
jo
add
fwait
jns
add
out
popf
popf
repz
sub
cmc
popf
push
cmc
mov
inc
xchg
xchg
negl
xor
movsl
or
je
cmpsb
sti
inc
mov
movsb
fs
in
imul
stc
sbb
testl
and
loope
xchg
stc
push
sub
popa
push
imul
sbb
stos
test
mov
xor
sub
dec
push
stos
fs
repz
add
enter
xor
mov
rcr
mov
movsb
jae
xchg
sub
stos
push
mov
mov
test
dec
push
gs
fs
pop
xor
or
pop
orb
je
lret
and
or
pop
and
lods
cwtl
jae,pn
int
mov
out
or
mov
pusha
daa
mov
jns
mov
subl
sbb
cld
lods
push
xchg
adc
rorl
dec
jnp
dec
pop
push
das
cmp
mov
xor
xchg
fptan
into
in
je
repnz
in
adc
nop
les
stos
mov
xor
leave
add
xchg
xchg
xchg
cmp
out
fisttps
dec
je
mov
add
or
and
dec
psubd
sahf
sbb
inc
fwait
push
mov
sbb
movsl
outsl
sub
out
xor
mov
dec
mov
jno
js
adc
ja
mov
sub
movaps
jb
icebp
daa
mov
cmp
mov
bound
aaa
mov
xrelease
dec
jp
push
pop
lret
cmp
push
adc
inc
push
popf
cs
xchg
pop
int3
inc
ret
gs
mov
jl
mov
rcll
sub
dec
scas
fnstenv
insl
stos
mov
xchg
push
xchg
fdivl
adc
mov
lea
sahf
test
test
cli
jl
lods
or
xor
mov
ds
mov
and
insb
outsl
in
out
cmpsb
add
mov
repnz
repz
jmp
js
sti
stc
mov
pushf
dec
mov
jmp
push
xor
xchg
push
pop
in
aaa
std
jmp
sub
sub
mov
cmpsb
orb
pop
lods
and
xorb
cwtl
icebp
call
add
mov
dec
xchg
jo
repnz
gs
jle
mov
mov
mov
test
inc
je
mov
cli
add
insl
jmp
inc
adc
cwtl
scas
std
inc
leave
add
xor
jg
xchg
movsl
mov
das
add
loopne
out
lret
cmp
aam
scas
div
stos
mov
push
in
lds
mov
data16
push
rclb
mov
retw
gs
into
sbb
enter
pop
out
out
rolb
ljmp
or
xorl
fs
fdivr
out
rorb
adc
adc
stos
cmp
jg
sbb
xchg
fdivp
insb
xor
adc
cmpsb
add
pop
and
sbb
hlt
hlt
orl
cwtl
es
sub
xchg
imul
fldenv
lret
mov
jecxz
dec
xchg
cmp
ds
pushf
scas
xchg
js
cld
imul
stos
pop
stos
test
popa
cltd
lret
fcoms
pmulhuw
sbb
push
mov
xchg
xchg
push
enter
lahf
popf
aaa
fiadds
and
inc
cltd
inc
mov
or
out
mov
sbbl
insl
lds
mov
push
sub
xchg
in
mov
dec
jg
xchg
push
adc
push
aad
pop
rcrb
shll
loop
mov
imul
rcl
test
cmpsl
rcrl
or
xor
dec
dec
dec
dec
add
jbe
mov
shrb
cld
sbb
addr16
aad
hlt
mov
cltd
add
cmpsl
push
pushf
mov
hlt
adc
push
mov
loope
and
push
cmpsl
cmc
movsb
js
imul
pushl
nop
cmpsb
jp
aaa
hlt
and
fsub
xor
add
mov
ret
dec
mov
jmp
xor
mov
fadd
jp
push
cmpsb
or
inc
popf
mov
repnz
outsb
mov
divl
cmp
insb
sbb
rol
and
shrb
int
push
flds
in
loopne
out
xchg
add
movsb
or
inc
arpl
adc
and
sub
mov
ja
mul
aaa
out
adcl
in
cmp
jle
jbe
pop
mov
jg
repnz
sarl
jno
js
mov
xor
hlt
rorl
lods
ret
jae
xchg
gs
cltd
cmc
mov
leave
mov
xchg
inc
idiv
xchg
xchg
aad
xor
adc
stos
sub
shrb
sub
jnp
mov
out
push
imul
rol
xchg
test
vunpckhps
add
or
mov
pop
sub
lds
lea
jns
mov
in
sub
mov
in
daa
dec
daa
fimuls
pop
and
inc
or
cmpsl
or
dec
add
xchg
enter
sbb
repz
stos
dec
inc
lea
pop
mov
or
lret
pop
add
mov
testb
jge
lods
insl
adc
sbb
lret
xchg
pop
push
jl
cltd
jmp
xor
sub
mov
cmpsb
scas
bound
mov
and
ss
loop
lcall
vcvtpd2psx
in
inc
mov
aaa
xchg
hlt
and
sbb
add
jmp
or
sbb
mov
ret
rclb
lea
sbb
mov
adc
lock
addr16
mov
xor
mov
sub
repnz
or
adc
lds
in
sub
out
arpl
sbb
and
ret
aaa
pop
enter
push
and
push
push
divl
sub
gs
das
push
lret
sbb
or
fsts
cmc
cltd
xchg
int
add
arpl
push
pop
lods
xchg
fcmovu
or
cmpsb
cmp
clc
mov
mov
sbb
in
call
push
jns
dec
adc
and
int3
jge
ret
fwait
sbb
aas
xchg
dec
lods
pmaxub
mov
sbb
fnstenv
stc
xor
jb
add
hlt
outsl
cmp
pop
add
xor
cmpl
mov
nop
adc
data16
xchg
faddl
call
adc
int3
push
inc
test
cltd
hlt
loop
inc
xor
stos
mov
movsl
scas
sbb
test
scas
movb
jmp
dec
dec
jnp
movb
loope
mov
out
mov
xchg
lds
sbb
icebp
dec
repz
inc
subl
out
mov
sbb
aaa
cmc
loope
fnstcw
cmp
jge
jge
mov
push
sarb
mov
test
outsb
mov
inc
iret
in
mov
imul
shlb
ja
dec
adc
jecxz
xchg
ret
loop
negl
adc
jmp
ja
clc
sub
gs
dec
mov
mov
mov
aaa
sub
dec
or
mov
stc
and
movsb
lahf
cmp
cmp
dec
xor
fistpl
addl
fcomp
xor
cltd
xchg
mov
jg
sub
aaa
scas
dec
sub
gs
and
into
insb
xchg
fwait
lds
inc
popa
lods
sub
aam
out
mov
sbb
add
shlb
mov
jge
and
jmp
dec
mov
inc
cmp
outsl
addb
inc
in
xchg
jne
and
test
shrb
or
push
xor
popf
xorl
lcall
sub
les
xchg
scas
ja
shrl
mov
data16
lcall
dec
inc
mov
inc
hlt
xor
in
xorl
xor
jge
inc
sarb
cmp
sbb
mov
lods
fbstp
in
add
out
sahf
mov
cwtl
mov
jmp
mov
or
ficoml
jp
mov
or
test
out
xchg
stos
in
mov
jae
cmpsb
dec
mov
dec
idivl
mov
xor
or
movsl
mov
adc
mov
cltd
and
mov
lock
jne
lcall
filds
jle
mov
data16
add
xchg
cli
sub
fs
mov
pusha
and
fldcw
and
mov
sbb
inc
cs
or
insb
in
mov
mov
inc
push
pop
mov
and
mov
mov
imul
cmpsl
in
out
xchg
add
mov
sub
movhps
xor
lds
scas
inc
xor
pop
push
mov
shr
xchg
cwtl
cld
mov
inc
in
pop
imul
lea
xor
je
insl
xor
push
imul
sub
push
stos
cmp
insl
inc
rcrb
arpl
fldcw
cmp
movsl
lock
xchg
push
pop
cmp
xor
loop
fiadds
xchg
mov
popl
or
push
jg
xchg
fsubp
mov
aas
lahf
imul
inc
leave
scas
out
clc
aad
pop
push
test
lea
scas
mov
adc
push
rorl
pop
cmp
daa
dec
mov
xorl
aaa
mov
leave
iret
movb
ss
repnz
add
jecxz
cmc
sbb
jmp
add
xor
insl
ret
or
add
adc
inc
rclb
inc
mov
and
mov
push
movsb
jns
andl
out
in
push
orb
rolb
fs
cmp
adc
push
push
pop
jecxz
js
sbb
roll
das
out
push
std
or
add
mov
push
hlt
sbb
arpl
sbb
daa
pop
in
inc
cmp
shll
roll
fsubl
out
push
loope
cmp
movsl
andb
inc
jg
mov
sub
ljmp
aad
xchg
and
rcrb
mov
mov
mov
pusha
jle
std
sbb
jno
cmp
inc
xor
lahf
aad
or
push
xchg
lret
xor
out
xchg
mov
mulb
fnstsw
imul
add
into
inc
or
in
xchg
fimull
dec
sbb
mov
cmp
pop
cmp
clc
inc
daa
in
lock
movsl
and
jbe
int
push
dec
jbe
mov
jl
sbb
cmp
fneni(8087
icebp
push
popa
cmp
in
js
incb
dec
test
pop
test
cmpsl
movsb
inc
xor
loopne
cmp
data16
and
add
mov
push
data16
or
jmp
es
jle
rorb
or
loope
int
xorl
jbe
cmp
adc
jae
and
fs
mov
mov
sub
rcrl
movsl
mov
mov
rclb
push
stos
faddp
mov
int
insl
sti
out
pushf
jbe
repnz
jb
in
es
pop
pop
dec
cmpsb
dec
mov
xorb
mov
mov
inc
mov
lods
mov
aam
lahf
cmpl
sbb
insl
scas
and
mov
and
cmpsb
aad
jo
mov
cli
sbb
ret
mov
in
fcoms
out
dec
pop
repnz
push
in
fcmovu
cmpsl
fsubrl
push
std
cmc
gs
aas
xchg
lods
pop
stos
mov
imulb
sub
sbb
mov
jmp
fsubrp
pop
sub
dec
mov
stc
mov
popl
int3
cs
pop
cmp
aaa
or
pusha
jno
jns
test
mov
xchg
xchg
daa
popf
push
clc
jg
pop
sub
adc
add
notb
fmuls
mov
aaa
das
and
sub
dec
insl
in
ret
jnp
pop
in
leave
jge
das
mov
jb
repnz
and
cmp
cld
add
loopne
dec
pop
pop
ret
pop
jns
iret
shrl
into
lds
test
ja
mov
lahf
int3
cmpsl
push
mov
mov
sarb
pop
in
lret
mov
call
dec
cmp
cwtl
push
loopne
mov
mov
cli
imul
push
fcmovnbe
mov
in
enter
push
aad
push
mov
dec
divl
das
movsb
sbb
mov
jno
jecxz
cmp
xchg
mov
daa
add
or
and
adc
pop
jnp
jno
mov
pop
sbb
adc
and
and
inc
mov
adc
inc
les
inc
adc
mul
cmp
sub
imulb
jnp
or
pop
mov
cmp
mov
fisttpll
lcall
xchg
jo
in
sub
fbstp
mov
inc
push
pop
inc
popa
cwtl
mov
sbb
pop
dec
pop
cmpsl
jb
cmpsb
sub
mov
push
movsl
std
sub
xor
sub
and
cmpsl
xchg
adc
fmulp
mov
cmp
out
pop
pop
xchg
aam
jbe
in
adc
fisttps
leave
sub
dec
outsb
int3
mov
cmp
xor
jno
xchg
dec
sub
mov
xchg
fisubrl
fildl
clc
xchg
sub
ljmp
test
sub
mov
sub
or
cwtl
cmc
mov
jge
inc
outsl
push
lea
or
add
sbb
popf
sub
fisubrl
push
sub
vpaddq
add
mov
pushf
adc
imul
loope
mov
sub
pop
inc
or
cli
push
les
icebp
and
repz
mov
test
sbb
std
cmpsl
lods
inc
dec
fnstsw
ret
or
push
iret
shll
imul
and
jb
iret
bound
pop
mov
inc
xlat
push
mov
mov
daa
adc
or
mov
jecxz
cmpsl
cmp
or
lea
push
scas
pop
pop
lahf
mov
sti
cmp
rol
pop
aaa
or
push
push
and
ja
hlt
aad
xor
sti
repz
cmp
push
sbb
in
test
pop
test
mov
xor
mov
fnstcw
lods
cmc
mov
mov
arpl
ds
jle
mov
add
cmpl
add
adc
scas
cmp
dec
mov
jge
js
lock
fcmovb
mov
fwait
cmpsb
lods
imul
decl
aad
push
popa
xchg
dec
pop
pop
addr16
mov
mov
mov
mov
ds
mov
out
fsub
ret
jmp
testb
popf
in
gs
xor
aas
mov
mov
lea
std
push
je
popa
sarb
int3
filds
or
push
out
fcoms
imul
cmpl
loop
cs
aaa
jmp
add
push
xchg
sbb
push
fldt
adcl
ss
jmp
xchg
or
loop
mov
sub
jle
pop
test
out
shrb
inc
sub
imul
mov
and
movsb
les
jg
push
fisubrl
pop
pop
cmp
mov
pop
xor
push
fsubl
xor
add
jmp
lods
mov
fbld
stc
mov
scas
cmp
xchg
jnp
fs
cmpsl
adc
adc
mov
hlt
sbb
push
aam
mov
push
cmp
jne
insb
aaa
and
fistps
pop
imul
testl
je
cs
pushf
pop
xor
pop
daa
push
cld
sbb
mov
or
loopne
scas
xchg
xchg
bound
xchg
jnp
sbb
bswap
in
dec
call
cmpsb
inc
mov
or
movsl
popf
xor
xor
mov
leave
mov
insl
popf
add
lret
test
jno
cli
inc
aam
and
aas
inc
xchg
jne
adc
or
jl
and
aam
repz
push
mov
ja
idivl
mov
xor
add
push
mov
daa
push
lret
clc
and
pop
leave
aam
mov
loopne
out
pushf
bound
xchg
stos
adc
xor
jl
cmp
inc
adc
dec
mull
or
pushf
pop
xchg
or
add
cmpsb
and
cmc
inc
xchg
adcl
vpsraw
mov
dec
mov
sbb
ljmp
dec
push
pop
out
sbb
nop
push
mov
push
xchg
mov
sub
inc
sbb
dec
pop
je
cmc
movsb
movsb
xlat
outsl
adc
jmp
pop
jmp
lea
xchg
ja
push
xchg
push
mov
inc
dec
dec
mov
push
iret
test
pop
movsb
push
orl
ret
push
dec
es
xor
push
data16
pop
inc
cs
mov
mov
or
jno
inc
or
icebp
xor
jbe
sahf
jg
jnp
and
pop
mov
and
pop
mov
sbb
dec
sti
mov
and
addr16
rorb
pop
jle
cmp
xor
js
int3
sub
fmuls
test
hlt
imul
mov
sahf
ja
and
movsb
pop
and
pop
addr16
mov
jne
pushf
incl
sarl
mov
pushf
sbb
and
psubsb
faddl
lahf
pop
negb
or
mov
fwait
in
fwait
inc
test
aaa
movl
or
cmp
fabs
jmp
sub
inc
jno
aaa
cmc
cld
cli
cmpsb
icebp
xchg
adcb
pop
inc
push
or
fwait
push
jns
push
test
lods
shl
dec
pop
pop
aas
xlat
mov
add
or
add
pop
cli
fwait
in
pop
mov
mov
jbe
fldenv
mov
idivb
arpl
insb
sub
jg
ret
test
or
fimuls
xchg
ljmp
dec
movsb
adc
xor
push
mov
pusha
and
lcall
lahf
mov
jae
push
out
adc
clc
lret
inc
sbb
aad
jmp
mov
lods
push
std
jne
sbbl
jg
imul
sbbb
test
jecxz
mov
int3
xchg
roll
sub
inc
xchg
sti
dec
or
dec
pop
push
lret
add
out
xchg
imul
stc
nop
jb
or
rolb
lret
mov
or
clc
mov
xchg
cmp
jg
mov
stc
and
jl
jge
sub
cmc
insb
mov
pop
xor
and
shlb
pop
sbb
push
lea
filds
add
repz
mov
std
les
mov
and
test
idivl
outsl
mov
jmp
mov
sarl
inc
mov
and
xchg
push
out
mov
mov
andl
mov
push
fisttpll
popa
fldl
addr16
mov
idivb
ret
jecxz
int
popf
cmp
hlt
xchg
sti
pop
cmpsl
jle
icebp
xchg
int
cmp
aas
cltd
mov
fs
xchg
enter
pop
rolb
scas
mov
add
pop
sbb
loop
or
pop
jbe
cmpsl
out
in
fidivl
xchg
xchg
mov
xchg
sbb
mov
in
jb
das
popl
cld
xchg
xor
insb
mov
push
mov
popf
jns
insb
adc
adc
loope
sbbb
decb
add
mov
or
fdivrs
sbb
lret
outsl
imul
iret
jmp
xor
push
inc
xchg
xchg
je
imul
sbb
inc
shlb
mov
jle
test
sbb
sbb
shll
mov
push
pop
xchg
pop
jne
mov
stc
xlat
pop
pop
mov
loop
idivl
loop
sarl
mov
xor
and
mov
mov
addr16
mov
cmpsl
pop
das
rcr
cmp
adcl
pop
jge
fnstsw
mov
xor
jp
mov
push
sub
lock
int
adc
je
xchg
enter
test
jecxz
lahf
inc
xor
clc
repnz
add
pop
outsl
cs
fidivl
popf
push
aad
ret
pop
mov
xchg
or
lock
ss
lret
mov
push
xor
jb
and
stc
add
xchg
jecxz
xor
add
jecxz
xchg
or
inc
jae
push
js
adc
mov
sub
and
inc
dec
insl
push
mov
movsb
adc
lds
mov
add
aas
fidivs
add
and
push
cltd
hlt
push
and
pop
dec
jbe
aas
out
cmp
adc
daa
fiaddl
fidivl
jg
jg
daa
sti
jae
sbb
mull
mov
adc
push
mov
repnz
cld
std
and
inc
inc
adc
sub
fstpt
es
inc
sti
dec
dec
mov
sbb
push
pushf
fcoms
pop
xchg
flds
jo
inc
jbe
mov
enter
inc
es
pop
imul
jbe
imul
je
sbb
aaa
fcompl
outsb
popa
pop
sbb
or
adc
mov
rolb
iret
lcall
dec
nop
loope
lea
or
pop
repnz
fdivrp
jbe
fdivl
arpl
lock
mov
bnd
hlt
lret
lret
icebp
les
cmc
jp
aad
iret
int3
cli
xchg
out
icebp
int3
push
push
sbb
jbe
sbb
jmp
fildll
push
js
mov
mov
movsl
sahf
loopne
jns
mov
pop
roll
push
push
jge
xor
jne
enter
inc
sbb
ret
adc
in
mov
pop
add
ficoms
xchg
adc
sbb
pop
xlat
mov
dec
and
push
adc
mov
lcall
daa
int3
pop
fcmovne
fsubrs
jp
hlt
or
push
repz
jne
or
inc
pop
mov
jb
lea
ret
mov
mov
add
jecxz
mov
or
popf
ficoms
and
fwait
and
xor
pop
insb
fcomps
fildll
add
cli
xchg
xchg
push
pop
fs
repz
call
clc
mov
sarb
xor
sbb
inc
jp
inc
mov
add
ss
aam
push
js
cmp
jp
call
xor
test
xchg
inc
mov
jp
arpl
xchg
xor
pop
out
shl
inc
push
cmp
adcb
sbb
test
insl
call
or
aaa
dec
jl
mov
test
cmp
push
shll
sbb
dec
pusha
aas
push
sarl
mov
imul
jg
aad
int
sbb
and
push
mov
jbe
push
fidivs
jle
mov
ljmp
push
scas
or
adc
or
mov
jecxz
shrl
repnz
jle
cltd
insl
pop
cmp
mov
out
bsf
ret
pop
pop
pop
cmc
rcrb
add
jns
loope
bound
xor
jb
orb
stc
mov
adc
mov
xchg
pop
mov
arpl
loopne
xor
pop
lahf
arpl
lea
roll
stc
in
or
cwtl
stos
imul
outsb
xchg
inc
cmp
cmpsb
rolb
cmp
data16
pop
xchg
nop
pop
cmpsl
mov
pop
fcomp
dec
push
pop
inc
shr
pop
mov
subb
jle
xchg
mov
movl
dec
pop
out
xchg
jns
mov
pop
pusha
jne
jo
xor
adc
enter
lds
mov
and
xchg
sti
sbb
add
and
das
jp
fisttpll
mov
xchg
mov
in
or
imul
test
mov
insb
adc
mov
cmp
fstpt
push
insl
xchg
xor
inc
xchg
ljmp
push
lods
mov
nop
pop
or
xor
gs
inc
lret
xchg
sub
scas
jo
cmp
xchg
daa
or
pushf
mov
cmc
aaa
sbb
and
xchg
insb
cmp
fwait
lcall
mov
sbb
mov
movsb
sbb
in
mov
arpl
cmp
rolb
js
mov
mov
jo
in
adc
hlt
and
pop
pop
xlat
xchg
adc
subl
jbe
jg
fs
out
adc
test
and
aam
test
scas
rolb
jb
pop
fists
frstor
inc
insb
in
jle
push
inc
hlt
sbb
push
sub
mov
movsl
mov
push
pushf
mov
mov
xchg
inc
jnp
jge
mov
cmpsb
adc
vpacksswb
test
hlt
fnsave
add
aaa
mov
popa
arpl
sti
je
int
out
ret
xchg
imul
xor
mov
push
fwait
leave
push
mov
mov
mov
fs
scas
ljmp
int3
xchg
push
test
cs
shrb
in
mov
adc
sahf
xchg
jle
aas
lea
cmp
add
std
push
mov
cmpsl
xor
out
or
add
add
lds
sti
in
cmp
dec
and
shlb
sub
mov
jnp
rol
xchg
add
mov
ret
inc
pop
fnstsw
or
or
xchg
rcrl
sub
push
sub
jge
dec
shrl
ror
jne
rcrl
mov
push
jno
or
lods
sbb
xchg
pop
add
push
jnp
movsb
dec
jnp
mov
cmp
mov
mov
in
arpl
arpl
dec
fiaddl
mov
sti
push
push
jmp
mov
mov
add
pop
inc
pop
mul
iret
xor
xchg
push
hlt
mov
outsl
sbb
mov
test
mov
pop
add
ljmp
xor
in
pop
or
dec
out
push
and
cwtl
decb
xor
jne
faddl
xchg
xchg
xor
lds
out
ficomps
cld
push
js
cld
fldcw
cmp
or
mov
rorl
mov
addl
push
mov
mov
adc
pop
cmp
sbb
jg
sub
mov
adc
notl
mov
mov
or
jae
sti
and
inc
movl
fsub
imul
popa
mov
add
xchg
push
fs
or
outsl
mov
dec
lahf
cmpsb
fistps
jne
das
and
fucom
lds
pop
jnp
aaa
jo
outsl
sbb
xor
das
repz
lret
es
daa
cmp
mov
or
cli
lret
mov
jmp
stc
cli
shll
clc
je
mov
repnz
jae
jge
out
std
shrb
cltd
in
pusha
adc
lahf
dec
shlb
or
push
and
mov
xchg
xlat
xchg
pop
fs
lods
jne
adc
push
jb
stc
int
fstp
fisttpl
sbb
mov
testb
xchg
je
dec
push
sub
fwait
mov
sbb
xor
data16
ds
add
or
int3
adc
out
outsb
dec
icebp
or
mov
or
mov
sub
sahf
xor
xor
sub
out
inc
lock
and
or
and
call
in
jecxz
push
sub
pop
pop
jo
inc
inc
dec
push
imul
pop
lods
fisubs
cmpsb
cs
cmp
mov
push
sbb
or
fmulp
lret
adc
mov
loopne
push
bound
fcoml
pop
mov
mov
imull
pop
inc
icebp
inc
adc
mov
dec
bound
push
cmp
or
icebp
outsl
cltd
adc
int3
xchg
sti
mov
dec
mulb
lods
loope
dec
jge
push
out
aam
xchg
jb
or
aas
daa
or
sete
jg
addr16
xor
xchg
cli
outsb
outsl
jnp
lea
jbe
xchg
aaa
int3
into
jg
cmpsb
cltd
push
clc
xor
aam
and
jo
pop
stos
adc
add
adc
lods
and
sub
push
adc
in
fs
orb
leave
movb
imul
sbb
xchg
push
sbb
sbb
mov
push
popf
aad
mov
inc
test
xor
lea
or
data16
add
push
popf
int3
rcrl
sbb
sub
jb
sahf
push
mov
adc
cwtl
arpl
rcrl
sub
push
mov
xchg
mov
hlt
jle
shl
jo
outsl
test
adc
xor
mov
jle
adc
outsl
inc
in
cmp
lds
lods
xchg
add
lea
fdivrl
ds
addb
jecxz
shlb
sub
jno
enter
cmp
push
push
jg
inc
mov
dec
in
fcmovu
dec
fdiv
and
xor
sub
addr16
sbb
lcall
inc
mov
sahf
lcall
imul
xchg
jge
sbb
sub
cmpsb
arpl
shlb
sahf
adc
push
mov
mov
outsb
inc
xchg
insl
dec
lea
cmp
rcl
cmpsb
xchg
ja
and
jecxz
mov
aad
mov
ret
stc
push
inc
lds
lahf
push
adc
aad
cltd
xchg
and
cli
cmp
jne
mov
or
and
push
jns
repz
jne
fisubs
ja
outsb
and
jp
call
lret
in
pop
cmp
or
sub
or
dec
fisubl
icebp
jns
dec
adc
shl
sbb
and
lret
mov
mov
mov
fidivl
test
fildl
test
mov
adc
enter
cmovbe
push
or
mov
xchg
cmp
stos
or
mov
pop
xchg
rcl
cmp
or
mov
lods
xchg
mulb
and
mov
add
xor
jmp
pop
fcomps
or
pop
mov
mov
xor
stos
mov
icebp
stos
es
pop
cltd
lods
mov
sbb
mov
inc
jg
jl
and
repnz
mov
mov
rcll
push
mov
xchg
jg
sub
xor
push
ficoms
push
mov
shl
jg
lret
xor
stos
in
or
add
out
test
push
cs
inc
mov
mov
lods
movsl
popa
cmp
outsl
fs
mov
adc
lret
and
xchg
or
aad
cs
arpl
and
xor
mov
push
add
das
or
pop
test
cmp
jge
les
adc
and
dec
icebp
cli
popa
icebp
movsl
jns
test
aam
xchg
jb
pusha
xchg
sub
jns
rcll
in
mov
test
jb
adcb
jno
outsb
and
jb
push
mov
push
and
sbb
inc
jp
js
xlat
pop
sub
mov
lret
sub
xchg
int3
sbb
mov
dec
inc
pop
mov
cmpl
movsb
stos
inc
pop
and
stos
xchg
adc
and
ficoml
out
cmp
fdivrs
cltd
cltd
outsl
in
lds
repz
in
xchg
jno
test
mov
scas
repnz
mov
shll
mov
push
inc
mov
dec
icebp
ja
movsl
fwait
movl
xchg
in
insl
stc
shrl
fwait
out
scas
push
filds
movsb
lcall
in
inc
sti
sahf
popf
bound
icebp
lahf
lret
fwait
aam
fnstsw
testb
cltd
ror
lcall
push
xor
mov
jp
or
aam
in
ja
arpl
jae
pop
dec
add
lahf
aad
add
mov
mov
loope
pusha
xchg
lahf
loopne
mov
pop
ds
jmp
cwtl
out
call
aam
mov
mov
test
les
sub
popl
dec
in
cmp
enter
sub
les
daa
inc
xchg
aad
dec
cwtl
inc
mov
xor
in
xor
add
push
mov
push
test
mov
je
dec
sub
jne
into
inc
pop
push
adc
stos
inc
add
jb
data16
cwtl
repnz
pop
push
subl
dec
dec
push
dec
loop
jp
repnz
mov
adc
or
xchg
int
cld
mov
call
lock
sub
pop
outsl
or
mov
shrl
mov
pop
sbbl
pop
cld
inc
std
jbe
or
dec
insb
push
mov
cmp
fs
int3
ljmp
dec
mov
out
mov
add
prefetcht2
add
sbbb
arpl
cwtl
cmpsb
xor
sbb
xor
jo
sahf
pop
jecxz
enter
ljmp
mov
test
mov
jg
lods
mov
nop
into
es
add
inc
jp
or
sub
out
iret
sub
sub
xlat
loopne
imull
inc
in
pop
std
adc
mov
add
mov
les
les
aad
push
movsb
scas
add
xchg
frstor
dec
lods
sub
push
dec
ljmp
shrl
mov
push
cmp
sbb
pop
subl
movsb
mov
ret
test
xchg
jp
add
ret
push
outsb
mov
out
popa
cmp
inc
mov
movsl
jecxz
push
adcl
int3
sub
jb
cmpsb
jl
jae
cli
cmp
adc
cwtl
fstl
data16
xchg
scas
fistpl
jp
test
dec
jle
push
loop
pusha
nop
jmp
pop
and
hlt
call
dec
lret
jns
lock
in
adc
add
xchg
push
cltd
push
test
mov
cmp
push
xor
loop
jle
mov
sub
jmp
andl
mov
or
bound
push
fisttps
mov
fisubl
push
push
cmp
and
test
add
mov
sbb
cmp
gs
and
inc
call
dec
aas
lea
aaa
adc
push
lock
or
pop
add
inc
aad
xor
int3
and
sarb
jns
dec
mov
aad
pop
sahf
cwtl
outsb
jbe
jbe
mov
mov
push
inc
pop
dec
mov
jbe
or
cmp
and
clc
xchg
mov
xchg
movsb
or
xchg
in
cmpsb
ja
adc
rol
scas
sub
mov
mov
pop
xlat
pop
fwait
roll
push
add
test
fwait
push
sbb
dec
cwtl
mov
fcomp
mov
sbb
cmp
jp
daa
scas
scas
mov
clc
sub
push
js
add
daa
test
mov
push
movsb
subl
push
scas
shrb
leave
xlat
and
xor
sub
fiaddl
and
push
outsb
mov
dec
int3
subl
jl
stc
mov
cmp
inc
xchg
inc
aas
incb
pop
mov
std
push
iret
clc
ret
les
gs
ljmp
mov
dec
xchg
xchg
adc
out
cmp
push
lock
mov
jmp
lahf
pop
mov
arpl
mov
jmp
push
pusha
adc
scas
jns
dec
or
push
cmc
or
out
mov
pop
jbe
add
in
sahf
pop
xchg
bound
pop
add
jmp
sarl
push
leave
data16
sti
es
rorb
stos
pop
loopne
bound
jle
fistps
out
inc
pop
or
inc
jo
sar
ss
push
xchg
mov
nop
mov
mov
mov
sbb
jb
dec
add
sbb
dec
or
mov
sarl
fldl
push
out
adc
adc
sbb
push
mov
xchg
cmpsl
inc
adc
push
cmp
or
dec
ljmp
and
sub
shrb
and
add
inc
push
out
clc
sub
jb
rcrb
lods
loopne
and
and
or
sub
jmp
pop
test
dec
mov
push
ljmp
mov
jle
insb
mov
and
or
lds
cmp
adc
push
cmp
addr16
xor
push
jg
adc
les
out
adc
pop
les
inc
insb
sbb
cltd
fnstenv
lea
xorb
push
mov
mov
push
test
out
std
adc
lahf
aas
iret
xchg
adc
and
pop
mov
xchg
pushf
fcoml
in
fsubs
mov
mov
out
lcall
ja
xchg
cmpsl
jge
dec
jbe
adc
cltd
push
jge
sbb
data16
push
orb
out
lahf
pop
lods
mov
sbb
mov
test
test
inc
cmp
pop
gs
mov
in
or
rcrb
mov
xor
sub
mov
mov
jp
adc
add
into
mul
ja
mov
sbb
inc
push
jl
mov
sbb
fistl
xor
data16
hlt
loop
mov
ret
mov
mov
dec
cmp
cmpsb
xor
xor
sti
fistpll
lock
je
push
pop
movsl
add
imulb
mul
mov
and
aam
sub
mov
push
imul
cmp
adc
mov
scas
xchg
sbb
cmpsl
call
rcrl
lea
pop
std
dec
dec
xchg
aad
gs
cmpsl
sbb
loope
outsl
pop
pop
nop
faddp
inc
sbb
add
lea
jmp
or
das
mov
mov
hlt
imul
sub
xor
jns
mov
fistpl
xchg
rol
pop
adc
sub
xchg
sub
mov
sub
pop
shl
and
in
pusha
gs
imul
arpl
shl
movsl
in
fwait
pusha
jns
movsb
or
or
add
sub
mov
std
scas
mov
aaa
or
xor
inc
lock
xchg
std
movb
ss
mov
call
xchg
inc
cmp
popf
out
cmpsl
rorb
adc
inc
pop
fldl
rolb
test
cmp
int3
pop
mov
or
rol
gs
mov
jno
cwtl
mov
ficoms
dec
pop
shrl
mov
lods
jg
sbb
push
push
fdivl
call
add
fldcw
ret
in
mov
outsl
insl
es
jnp
std
mov
fwait
jmp
xor
lds
xor
lea
inc
sub
cld
xchg
insl
adc
and
xor
mov
push
mov
xor
jns
in
test
xchg
mov
jnp
push
cmc
cltd
push
insb
push
and
mov
mov
ja
pop
sub
and
call
getsec
push
jmp
adc
movsb
xor
adc
add
call
sub
lahf
sti
sub
out
and
dec
mov
mov
sub
and
in
cmp
repnz
xchg
or
and
insb
jecxz
pop
jb
adc
imul
pop
xor
push
xor
ret
push
mov
push
les
mov
add
sub
int
insl
mov
ret
pop
aas
inc
jae,pt
js
repz
arpl
jg
adc
mov
fcoml
xchg
out
jno
xchg
ds
dec
jl
adcb
mov
xchg
movq
pop
cmpl
call
cli
addr16
xor
fildll
mov
out
pop
scas
push
popf
cmpsl
aaa
sti
ss
inc
cmpb
testl
dec
aam
pxor
dec
push
inc
mov
and
popw
mov
jbe
sbb
outsb
es
out
hlt
jmp
imul
sbb
dec
lods
xor
mov
fcmovne
pushf
push
jns
cmp
fistps
cmpl
push
add
or
stos
cmp
daa
lock
adcb
jno
movsl
inc
out
test
insb
xor
lahf
xor
jns
mov
lds
mov
pop
jnp
lock
pop
add
inc
and
xchg
mov
inc
adc
repnz
ja
paddsw
lds
loop
in
hlt
or
out
arpl
or
fnstenv
dec
cmp
xor
ret
mov
jae
ljmp
mov
je
pop
cmp
pushf
push
inc
mov
or
mov
rep
mov
sbb
fdivrl
push
icebp
adc
mov
rolb
push
adc
imulb
xchg
pusha
fistl
ds
mov
mov
mov
push
xchg
or
shl
jl
dec
iret
fildll
daa
ja
mov
lea
sarl
mov
xorb
sbbb
inc
add
sti
aas
enter
jns
fisubrl
repz
negb
add
mov
dec
ret
cmp
out
pop
mov
xchg
dec
sahf
mov
lods
daa
std
fistpll
pushf
fwait
jp
dec
iret
movsl
pop
and
es
ficompl
adc
push
cmp
jbe
out
lds
pushf
movsl
adc
gs
jno
jg
fucomp
into
jg
dec
lods
and
jecxz
adc
pusha
int
xor
fsub
inc
cli
out
or
aad
mov
or
inc
loopne
cmp
mov
call
mov
mov
stc
adc
aad
adc
mov
and
mov
inc
jae
push
imul
inc
stc
push
clc
ficoml
mov
mov
ja
cli
pop
add
sti
push
ficompl
sbb
movsl
jae
or
shrb
stc
outsl
ds
ljmp
jbe
or
mov
lea
js
mov
mov
jmp
in
in
and
inc
imul
addr16
jl
mov
popa
hlt
and
repnz
imul
add
in
insl
push
ja
xor
jl
cmp
mov
into
stos
fwait
loopne
xor
aaa
lea
mov
icebp
loopne
or
jg
scas
leave
shll
and
aaa
lods
add
cmc
repnz
hlt
punpcklbw
movsl
negb
or
mov
cmp
aam
in
adc
pushf
rcr
ds
and
push
dec
mov
cltd
loop
ja
push
lea
mul
dec
movsl
dec
es
gs
push
into
add
rcrb
dec
xchg
mov
push
jle
mov
adc
xchg
sbb
mov
test
fcoml
les
movsb
xchg
xchg
push
pusha
xchg
les
push
fiadds
dec
xor
jno
loop
in
cmc
movsb
dec
popf
pop
pop
mov
push
pusha
ret
iret
faddl
mov
push
dec
cmp
out
ss
je
aad
cmp
mov
aas
fwait
in
mov
jo
adc
sbb
aam
clc
outsl
in
sub
fucomi
mov
jbe
xlat
nop
pop
in
and
nop
push
dec
clc
cmpsb
dec
mov
movsb
fidivl
sub
into
jbe
xchg
pop
xchg
orb
adc
dec
mov
das
mov
fiadds
xchg
mov
stos
adc
jne
shll
and
hlt
mov
enter
mov
push
adc
mov
inc
lds
pop
sti
leave
dec
cltd
sbb
imul
insl
push
das
ja
or
clc
cmpb
aad
rep
fcomps
out
andl
das
sub
inc
ret
push
inc
std
call
add
inc
or
inc
xchg
adc
xor
push
rcrl
jp
je
js
imulb
fisubrs
dec
mov
sbb
mov
lret
push
movsl
lea
xor
or
mov
sbb
cli
outsl
adc
movups
ds
pop
lcall
pop
dec
pusha
lret
bound
aad
inc
inc
xchg
int3
popa
jno
fwait
lcall
inc
ficoml
jb
push
fidivrl
cmp
shrl
arpl
pop
push
repnz
repnz
out
icebp
push
pop
iret
jmp
jno
mov
int
pushf
xchg
cmp
iret
dec
push
inc
sarl
cs
jae
ja
cs
ftst
sub
aam
daa
stos
jge
mov
mov
jae
cmpsl
pop
mov
push
shr
sub
xchg
jg
and
sbb
pop
or
xorb
jp
fs
ficompl
cmp
adc
push
sbb
inc
aas
cmpsb
jbe
mov
push
mov
loop
xchg
cmpsl
mov
push
loopne
cltd
cmp
add
jecxz
push
inc
cmpsl
dec
adcl
imul
or
or
inc
fcoms
push
cmpsb
out
jmp
shr
cltd
add
mov
fistl
sar
xor
jmp
xor
pop
ret
jl
cmp
pop
mov
dec
or
pop
repz
and
pusha
xchg
in
in
add
mov
push
inc
adc
cltd
aad
test
lock
pusha
adc
fidivrl
int
pop
mov
pop
in
inc
aad
cmp
jae
test
clc
jbe
je
jbe
mov
xorb
test
int3
xchg
mov
inc
sbb
call
and
in
call
adcl
and
adc
adc
xlat
shll
xlat
xor
arpl
lds
repnz
mov
inc
push
dec
adc
cmc
mov
xor
pop
or
cmpsb
lds
push
inc
dec
pop
sbb
sbb
cwtl
lds
xor
stos
cmpsb
iret
jle
mov
or
jp
lods
push
iret
mov
mov
fwait
loope
pop
mov
add
in
sahf
xchg
inc
shrl
xorl
add
scas
adc
push
mov
or
ja
fwait
icebp
into
jo
sub
pop
std
movsb
add
jge
ja
pop
cld
outsb
adc
popf
leave
xor
dec
nop
sub
xor
push
testb
in
xor
insl
lods
popf
out
fildl
xor
push
jle
mov
in
sbb
fnstsw
insb
gs
push
clc
pop
sub
inc
arpl
mov
call
icebp
jl
insl
mov
pop
sti
cmpsb
dec
dec
in
sbb
sbb
jle
and
imul
pop
mov
fisttps
call
lods
add
jge
mov
int3
mov
push
shrl
or
sub
imul
aaa
push
inc
nop
scas
roll
clc
imul
inc
jmp
add
out
mov
jno
mov
gs
or
jns
cli
mov
cmp
js
inc
sub
xchg
adc
mov
mov
cmc
imul
arpl
addb
in
sbb
iret
fsub
mov
pop
and
lahf
mov
mov
aam
or
dec
jne
cmp
jne
iret
add
pushf
push
neg
push
inc
push
pop
lret
js
sbb
movsb
cltd
sub
repnz
jle
scas
aam
jb
mov
addb
movsl
xor
flds
push
cmp
and
cmpsb
push
push
mov
pop
dec
cwtl
into
shll
pop
pop
and
mov
aaa
jae
xchg
pop
and
ret
jns
xchg
add
dec
add
loopne
cld
mov
push
xchg
iret
imul
pop
mov
jge
sub
mov
mov
add
cmp
dec
sarb
cmpsl
cltd
out
out
mov
aad
aas
lods
mov
int
mov
stos
sub
or
cmpsb
pop
xor
mov
sub
push
jb
out
sbb
sbb
shl
lcall
in
xorl
lahf
dec
inc
loope
add
sahf
mov
sbb
push
sbbb
and
sbb
push
mov
lcall
lock
jb
imul
adc
lds
cli
xorb
sbb
daa
push
fildll
les
incb
pop
adc
addb
lock
ljmp
pop
fmull
stos
add
ss
inc
push
cmpsb
in
sbb
xchg
xor
jge
cmp
sub
sbb
push
enter
push
pop
jecxz
push
and
dec
addr16
pusha
pop
rorb
dec
mov
xlat
or
push
and
cmp
daa
leave
and
cmp
test
mov
aad
inc
sar
loope
sbb
inc
arpl
push
mov
leave
dec
pop
jne
aad
lcall
push
fucomi
call
add
mov
jnp
pusha
xchg
mov
push
xorb
test
mov
mov
cmp
sbb
movsb
sbbb
lret
je
xor
out
icebp
jno
nop
bound
fstpl
jge
aas
rol
icebp
jp
dec
or
or
aad
fcmovnu
outsb
data16
mov
pop
xchg
jle
dec
mov
inc
inc
adc
lds
in
addb
and
pop
add
xchg
cmp
rcrb
lret
test
arpl
or
aaa
lods
out
sbb
adc
fwait
cli
push
frstor
push
cmp
fcmovb
outsb
rsqrtps
inc
xor
push
ret
mov
dec
add
movsb
stos
cmp
sti
out
cmp
ja
and
ficompl
aas
scas
add
lds
xor
add
mov
rolb
imul
rcrb
arpl
loop
idiv
clc
jle
mov
cmp
xchg
subb
pop
dec
pop
pop
leave
dec
or
add
cmp
dec
fucomp
mov
loopne
jle
mov
daa
in
push
sbb
push
jl
add
inc
push
aad
popf
icebp
ds
add
fcmovnu
repz
jae
inc
icebp
test
jno
mov
icebp
sbb
or
sub
ret
push
or
push
xor
add
sbb
std
loope
inc
repz
and
insl
cli
bound
sbb
cmpl
loopne
xchg
pop
inc
into
les
and
adc
popa
xlat
sarb
call
cmp
or
rorl
sub
iret
lock
fwait
push
jae
pop
mov
jge
fnstsw
scas
cs
ss
pushf
cmp
xor
jno
xchg
mov
mov
sbb
sbb
aad
leave
inc
push
inc
jnp
mov
test
lcall
test
mov
loop
jg
out
stos
cmp
stos
mov
in
jmp
push
das
jne
insl
mov
stc
mov
and
pop
pushf
or
cmp
and
pop
std
xlat
mov
dec
xchg
test
sbb
add
dec
ljmp
lcall
out
pop
loope
shll
nop
hlt
lds
sub
push
aas
pushf
int3
mov
pop
shll
dec
mov
test
jge
mov
inc
stos
or
test
mov
outsl
lock
pop
xlat
ljmp
sti
inc
cltd
add
jmp
mov
jecxz
ret
addr16
movsb
dec
out
adc
sub
test
adc
addl
call
xchg
mov
fidivl
stos
rcl
pushf
or
out
sbb
test
pop
aas
push
outsb
adc
clc
and
fwait
das
mov
jnp
insl
adc
insl
daa
enter
cmpsl
and
xchg
fimuls
std
mov
push
mov
cmp
in
js
xchg
adc
test
sub
mov
mov
mov
mov
mov
jmp
and
xor
xor
xor
cmp
mov
test
dec
xorb
ficomps
mov
fs
add
cs
xor
pop
adc
addr16
aad
cltd
add
repnz
xor
xchg
sbb
sbb
xor
mov
jle
lea
jl
adc
stos
in
mov
jae
mov
aaa
xorl
test
and
cmp
in
fiadds
mov
and
sub
sbb
and
in
movsb
out
sub
pop
cs
or
cmp
xchg
adc
jbe
sahf
and
imul
mov
clc
add
pop
les
xor
jnp
xlat
sub
xchg
push
mov
movsl
insb
dec
or
sbb
push
fdivl
popf
aaa
or
adc
dec
inc
push
adc
fdiv
inc
jbe
ret
inc
mov
mov
sub
cwtl
mov
test
movsl
loopne
cld
jl
cmp
sbb
and
adc
fwait
cwtl
jge
andl
mov
mov
bound
mov
inc
testb
pop
push
push
mov
mov
mov
sbb
sti
xor
sbb
lds
sub
pop
adc
fistl
jne
std
dec
lret
push
mov
and
xchg
shll
sahf
add
add
inc
sbb
loopne
mov
call
xchg
jmp
es
je
inc
pop
jl
int3
xor
jne
insl
mov
mov
sub
in
pop
enter
mov
bound
shr
call
nop
je
mov
out
mov
mov
add
mov
xor
lods
sub
shl
sbb
jmp
in
mov
pop
mov
sub
lret
lods
add
xchg
cmc
mov
dec
and
cmp
inc
popa
rclb
sbb
rolb
jbe
adc
jle
mov
daa
negb
cmp
outsl
inc
fnstcw
sub
pop
cmpl
popf
cld
loopne
daa
hlt
adc
ret
mov
mov
add
xchg
mov
gs
in
fimuls
in
clc
push
sbb
das
mov
iret
pusha
enter
pop
sub
jg
cli
jo
lds
sub
mov
insl
push
push
mov
fisttpll
lret
or
mov
dec
pop
jo
or
mov
xor
mov
mov
sub
fistl
out
bound
and
cld
or
and
mov
xor
dec
mov
les
xor
leave
ja
decb
pop
mov
lret
push
lcall
mov
cs
jne
push
cmc
adc
jb
test
mov
lcall
xchg
pusha
and
push
inc
in
push
mov
lods
mov
mov
es
test
xlat
or
ds
add
dec
xor
rep
pop
mov
imul
lods
mov
xchg
pop
or
in
or
xchg
mov
push
push
dec
jbe
adc
add
mov
or
cmp
sahf
dec
and
or
pop
mov
or
xchg
xchg
ljmp
fimuls
xchg
push
inc
sub
je
sbb
mov
das
push
pop
mov
jne
mov
lds
pop
xlat
add
loopne
push
mov
pop
lock
sub
add
jg
insb
push
push
test
out
jo
cwtl
out
xchg
jno
hlt
int3
jns
lahf
push
div
int
aaa
pop
or
test
mov
or
imul
mov
in
push
lcall
xlat
div
add
pop
mov
movsl
lds
jle
rcr
inc
imul
repnz
inc
test
sbb
push
lds
pop
in
sbb
insb
push
sbb
mov
dec
sarl
imul
jnp
jl
sub
xchg
or
push
mov
cmp
mov
add
into
out
lret
cmp
loopne
push
repnz
jp
sbb
in
cmc
inc
push
subl
rcrl
ffreep
xchg
std
mov
jmp
mov
pop
popf
or
and
imul
push
lods
ljmp
pop
sbb
movl
je
dec
cmpsl
pop
xlat
cld
dec
gs
fwait
lea
call
popa
jbe
loopne
aam
lret
js
mov
adc
lock
and
inc
out
mov
and
testb
sbb
arpl
sub
sub
pop
out
push
mov
lea
inc
dec
outsb
adc
in
clc
push
cmc
mov
in
pop
mov
nop
pop
pushf
int3
dec
and
dec
xlat
jl
addr16
and
push
pusha
or
xlat
sarb
adc
push
shrl
xchg
and
sub
popa
jmp
dec
cld
lods
adc
mov
arpl
jbe
adc
push
fs
jne
ja
leave
jge
pop
loope
daa
aad
mov
aam
movsb
push
push
std
test
push
jle
adc
imul
mov
jl
or
fistl
jmp
arpl
and
pop
cmp
xchg
pop
add
mov
pop
lahf
mov
adc
mov
lods
and
pop
mov
fists
faddp
jge
mov
lods
inc
ret
addl
mov
jmp
sbb
es
pop
mov
or
xchg
push
mov
fwait
idiv
fwait
mov
enter
and
and
inc
or
stos
imul
pop
xor
xchg
or
inc
scas
je
xor
cld
jg
cltd
insl
sub
sub
xchg
ljmp
enter
cmp
dec
jo
mov
jle
and
push
jbe
push
mov
test
movsl
call
aas
cmpsb
aad
pop
cmp
dec
xor
insl
shll
in
pop
sbb
dec
mov
xor
and
pusha
into
jcxz
push
ljmp
add
das
add
stos
imulb
dec
addr16
jbe
sbb
push
fnstenv
sbb
mov
mov
push
cmpsb
add
iret
cmc
inc
mov
dec
jp
sub
xchg
dec
mov
repz
sbb
inc
xor
xchg
adc
sub
push
xchg
jle
mov
mov
jge
es
sbb
mov
mov
loop
cmp
dec
cld
iret
mov
push
call
adc
lret
jl
pop
sbb
xchg
cmpb
mov
test
xchg
fs
xchg
gs
jbe
pop
sub
mov
test
mov
mov
fcompl
pop
pop
clc
push
data16
inc
mov
add
xlat
jns
xchg
imul
sahf
inc
pop
pop
cltd
scas
ljmp
sti
or
fdivp
addr16
cmpsl
stc
sub
ss
stos
and
dec
or
push
mov
mov
daa
outsl
cmp
sbb
adc
inc
mov
aas
push
insb
add
lds
mov
sbb
xchg
repnz
insb
pushf
cld
pop
movsl
dec
aas
push
pop
ds
xchg
and
cli
sub
shlb
dec
adc
lret
pop
xor
and
push
pop
jmp
call
inc
push
sar
cs
adc
xchg
arpl
dec
fstpl
gs
push
pop
addb
add
mov
mov
imul
or
mov
lods
fsincos
insl
inc
into
mov
jmp
or
cmc
mov
mov
inc
xor
ljmp
adc
lock
xchg
shl
push
xlat
dec
mov
insl
sub
mov
test
and
or
loope
lahf
mov
ret
sbb
pop
movsb
xorb
cli
stc
mov
sbb
outsl
loop
lds
insb
sarb
adc
and
insb
lea
or
jl
dec
into
push
push
pop
in
adc
mov
mov
pusha
outsl
adc
or
push
out
repnz
fsubrl
pop
je
mov
and
aas
pmaxub
cmpsl
pushf
and
fcmovnu
repnz
inc
jo
mov
insb
cmp
cmpl
aas
icebp
addr16
ret
hlt
mov
fcompl
xchg
xor
insb
mov
in
notl
mov
cmp
dec
in
sbb
and
repnz
outsl
adcl
int
test
std
adc
add
adc
aam
lods
sub
push
cwtl
mov
or
test
push
sbb
int
jne
test
test
not
ret
mov
cmp
push
and
xchg
dec
inc
push
out
fdivs
inc
lods
fisubrs
mul
int
and
cmc
dec
movsl
cltd
fcoms
shrl
pop
sbb
pop
stos
push
ret
mov
nopl
adc
adc
sub
outsl
je
shl
call
lahf
jne
cli
lret
push
mov
xchg
xor
es
xlat
dec
out
xchg
cwtl
outsb
scas
in
sbb
sbb
or
mov
inc
or
pop
mov
dec
call
pop
ret
data16
sub
jo
xchg
jmp
or
stos
imul
iret
and
hlt
adc
ret
sub
ret
add
and
daa
xor
xor
inc
mov
jmp
lret
mov
ret
push
aad
cmc
imull
jae
mov
or
pop
das
call
jl
lcall
imul
icebp
in
into
shlb
sub
xchg
pop
push
lds
or
xchg
sbb
jns
pusha
rorl
jecxz
in
icebp
dec
add
or
and
add
and
push
lds
xchg
adc
pop
test
xchg
adc
push
xchg
in
cmp
ja
pop
cld
xor
adc
xor
leave
or
mov
mov
adc
int
adc
dec
int
in
adc
mov
scas
cld
loope
ljmp
mov
dec
test
fstpl
mov
ss
mov
shl
outsb
adc
xchg
mov
out
shrl
adc
pushf
dec
xchg
xchg
push
out
ret
sub
fnstenv
ret
xor
stos
bound
lret
stc
mov
dec
test
pop
lds
daa
mov
mov
in
mov
or
repz
loopne
test
and
or
xor
cmp
insl
pop
das
jge
fnstcw
pushl
adc
fld
sahf
pop
inc
mov
inc
xor
cmp
out
addb
jge
cmc
pushf
test
stos
addl
jbe
scas
xor
mov
test
adc
js
sub
or
mov
push
mov
xor
rcr
jp
push
push
jle
cmp
jecxz
fldl
sub
mov
daa
in
ror
inc
add
push
popf
sub
xchg
push
inc
sbb
lea
ret
inc
inc
xchg
ljmp
sub
pop
loop
inc
dec
inc
adc
and
int3
pop
mov
fs
dec
call
or
ds
int
aaa
out
jae
adc
xor
out
push
pop
sub
cmp
mov
mov
in
dec
and
dec
and
inc
aam
cmp
mov
cmpsb
out
pop
dec
jno
and
xchg
out
jge
xchg
aas
cmpsb
sub
jb
lea
mov
sbb
push
fadd
add
nop
cld
mull
cmp
dec
in
pop
lock
jle
add
dec
jnp
dec
inc
cs
pusha
xchg
or
pop
rclb
pop
dec
adc
push
iret
jns
xor
adc
ja
mov
dec
into
in
cmp
xor
and
mov
test
jl
xor
adc
mov
jle
cld
dec
mov
gs
icebp
fstp
bound
test
inc
test
xlat
cmc
mov
jle
ficoms
sub
fbld
jmp
or
add
enter
icebp
pop
pop
cld
cmp
mov
jo
dec
pop
hlt
sbb
cmp
ljmp
push
lock
pop
dec
and
aas
aas
and
push
stos
nop
fdivrl
popa
in
dec
test
lcall
dec
inc
fldenv
fistpl
inc
xlat
mov
movsl
nop
mov
shrl
pop
adc
loopne
loopne
xchg
xchg
popa
mov
ror
mov
mov
jmp
mov
leave
cli
dec
rcrb
movsl
addr16
dec
fisubrl
mov
shlb
out
lcall
sbb
pushf
outsb
xchg
cwtl
cli
mov
repnz
or
enter
in
mov
sub
adc
jge
cmc
rolb
jbe
mov
inc
data16
sahf
mov
mov
in
xchg
add
cmp
ss
and
cs
fisttpll
ss
mov
xchg
mov
mov
outsl
in
mov
jae
inc
jo
out
shlb
in
mov
mov
dec
xchg
jo
inc
repnz
mov
sbb
xor
fildll
push
ret
test
mov
test
mov
mov
in
pop
dec
add
sub
jp
mov
xchg
xor
test
lret
and
imul
sahf
test
testb
cli
stos
jle
inc
loope
repz
out
xchg
mov
add
stos
mov
mov
popa
mov
inc
sahf
nop
repnz
popf
call
inc
ss
mov
outsl
mov
mov
or
pop
mov
dec
imul
lods
jmp
dec
les
fcompl
outsb
cmc
and
jp
ljmp
pop
fistpll
nop
loop
and
cmpsl
loopne
faddl
mov
xchg
mov
sbb
cs
loopne
mov
cli
mov
dec
jno
pop
fstpt
xchg
movsb
dec
mov
mov
iret
jns
mov
loopne
xacquire
push
dec
loope
jae
in
orl
xor
mov
adc
cmp
icebp
push
and
adcl
sbb
gs
gs
das
sub
ror
xlat
inc
xchg
adc
std
jo
repnz
popa
xor
dec
jne
out
pop
sahf
test
inc
arpl
negb
mov
int
or
pop
fiaddl
ss
sub
push
push
sbb
or
scas
shrl
nop
dec
inc
mov
leave
mov
scas
push
in
fnstcw
sahf
push
iret
mov
mov
cs
pop
pop
lahf
fmull
aas
gs
add
mov
fstps
ss
movsb
jbe
mov
lds
stos
pop
out
jnp
bound
pop
cmp
dec
mov
scas
mov
jp
push
mov
push
insb
xchg
cmp
imul
or
daa
push
iret
mov
mov
cmpsl
ja
pusha
sbb
imul
or
popa
xchg
test
in
inc
jne
scas
fsubrl
rorb
cmpsl
mov
push
inc
push
mov
jbe
sbb
jmp
pop
arpl
push
int
or
out
push
popf
ret
mov
dec
push
cmp
jnp
pop
lea
inc
mov
pop
dec
jnp
pop
mov
xchg
push
sahf
jmp
imul
pop
pop
mov
cmp
pop
movsl
lods
add
sub
mov
push
push
xchg
xor
cltd
sbb
sub
sahf
sub
mov
cmp
sub
fnstsw
lahf
xor
jno
aas
mov
and
insb
lahf
adc
mov
call
and
repz
add
clc
push
mov
lcall
xchg
ret
pop
test
in
push
gs
xor
cmc
shrb
inc
mov
rcr
test
jge
sbb
cli
inc
jmp
mov
cmp
jp
imull
scas
mov
sahf
xorl
test
mov
in
pop
stos
hlt
cs
in
ja
sub
mov
stc
fidivrl
arpl
add
lea
adc
inc
mov
fsubrl
dec
std
getsec
or
push
test
inc
test
cmpsl
xchg
jmp
add
add
mov
mov
fisttps
pusha
xor
hlt
add
push
or
cmp
push
jae
cmpl
popa
movlps
or
outsl
call
jp
lods
enter
imul
pop
adc
push
xorb
push
push
mov
cmpsl
sbb
mov
ljmp
call
xor
pop
dec
sbb
pop
popf
mov
data16
pop
push
sub
test
pop
and
lods
fdivs
add
push
sub
std
xchg
mov
fmuls
adc
xor
add
out
rcrb
or
mov
xchg
push
fs
pop
adc
stc
mov
lea
cli
add
addr16
negl
mov
xchg
inc
bound
loope
movsl
ss
dec
pop
xor
lcall
popf
pop
fucomp
aam
cs
cmp
lds
jp
insl
xor
lret
pop
popa
mov
imul
and
arpl
ja
mov
sub
add
arpl
xchg
pop
out
call
scas
cwtl
out
jno
jl
int3
aas
jns
cltd
jno
in
mov
mov
mov
mov
cmp
xor
sysexit
cmp
loope
push
push
push
leave
in
mov
mov
fldl
xor
push
mov
out
mov
orl
and
decl
flds
xchg
shl
out
jge
int3
in
das
dec
or
pop
jecxz
mov
xchg
gs
push
adc
jl
clc
out
mov
dec
lret
mov
daa
divb
cwtl
add
jg
fwait
cmpl
fadd
stos
and
add
rorb
je
push
hlt
fs
xchg
data16
outsl
jge
fwait
push
inc
lret
sub
ret
cltd
cmp
pusha
lret
push
cmp
jl
sbb
shl
mov
inc
push
pop
mov
lahf
call
dec
in
push
sub
out
in
popf
rolb
jo
mov
repz
mov
imul
push
and
push
dec
jecxz
hlt
inc
int3
or
dec
rdmsr
add
fwait
cli
ficoml
ret
pop
xchg
cmp
jp
fs
lea
and
out
inc
fildll
sub
leave
xchg
fwait
sbb
fs
movsb
mov
aaa
lods
ds
enter
or
xor
xchg
inc
fmuls
adcb
cmpb
cmpsl
out
incl
xchg
push
pop
inc
pop
mov
data16
movsb
fisttpl
or
mov
and
mov
and
cmp
mov
sbb
sub
mov
jae
stos
or
cltd
mov
std
inc
push
xor
cmpsl
adc
insb
ds
pusha
imul
lods
notl
jp
xor
jnp
pop
sbb
fwait
cltd
cwtl
leave
or
push
and
pop
ss
inc
or
ss
pusha
pop
popa
outsl
dec
test
call
add
cwtl
push
stc
xchg
je
ds
mov
push
mov
nop
cmpsb
cwtl
mov
addl
fdivs
gs
pop
mov
mov
into
pushf
call
lods
out
sub
lods
clc
lret
mov
addr16
sub
xor
cwtl
andl
sbb
mov
jno
das
jb
pop
nop
fcoml
or
fistpll
shll
xor
in
and
xor
cwtl
xor
jbe
jmp
cmc
mov
out
scas
rol
xchg
xor
sarb
jns
fmull
mov
lds
popf
cmp
sbb
jae
scas
lds
sti
test
jo
add
test
xchg
push
lcall
test
ret
addr16
or
or
scas
movb
mov
scas
test
lds
das
mov
es
adc
jle
and
ljmp
mov
fidivrl
push
ljmp
scas
dec
mov
movsl
mov
inc
pop
jl
pop
imul
xor
push
sbbb
dec
mov
adc
lret
cmp
fsubrl
incl
jb
pop
inc
pop
call
cmp
mov
sub
push
xchg
or
lock
imul
int3
test
mov
mov
jle
pop
adc
out
daa
sahf
push
push
pop
inc
test
xchg
in
xor
pushf
outsb
in
jo
mov
or
leave
dec
outsl
std
repz
sbb
push
mov
in
cmpb
ret
cwtl
subl
mov
inc
in
cmpsb
adc
mov
xchg
int3
jae
mov
xchg
xor
rcrb
stos
repnz
sub
mov
add
in
test
jae
shll
jb
sahf
scas
sbb
std
addb
lods
scas
cmpb
inc
dec
lds
and
xchg
movsb
comiss
xchg
int3
addr16
sbb
and
das
js
fwait
and
jns
xchg
repz
pop
xor
push
xchg
test
aas
cmpsb
xor
iret
ret
fnstenv
das
jmp
dec
adc
test
pop
dec
push
and
pop
fwait
int3
js
mov
sbb
fildll
lods
mov
loope
sti
jae
call
push
nop
repz
xor
dec
and
dec
sbb
sub
fldenv
inc
insl
jg
fidivrs
shlb
push
cs
jle
roll
inc
clc
xlat
push
dec
pop
pop
jns
sbb
js
or
pushf
pop
adc
fidivl
or
sarb
xlat
jno
pop
enter
shrd
adc
or
ljmp
mov
cmp
daa
int3
jge
mov
outsb
lret
enter
push
or
push
mov
or
aam
popf
push
inc
adcl
lret
fnstcw
std
lods
jbe
popa
or
add
add
mov
adc
test
out
clc
es
mov
mov
pop
dec
push
orl
mov
jp
js
out
inc
push
loopne
sub
loop
mov
cmp
out
xchg
jnp,pn
fmuls
stc
ljmp
rcrl
outsl
pushf
lock
mov
pusha
cmpb
repz
inc
lock
outsl
fadds
icebp
fcmovnbe
insl
jae
sbb
sub
popa
mov
movsb
divb
rolb
adc
jo
fwait
test
or
sub
sti
popa
outsl
sti
lret
xchg
and
cli
push
mov
stos
fldl
xor
dec
scas
imulb
and
iret
mov
fdivs
inc
push
adc
repnz
addr16
cmp
out
and
in
jno
loope
pop
inc
dec
adc
xor
cmp
inc
or
mov
sbb
cld
jbe
adc
xchg
jne
negb
mov
cmpsl
jno
mov
mov
xor
mov
cld
sub
push
lock
xchg
sbb
daa
push
pushf
mov
stc
add
es
mov
ficomps
xor
hlt
fcmovnu
mov
mov
or
adc
jno
cmpsl
add
fstps
xchg
or
arpl
movsl
mov
xor
dec
push
mov
add
and
es
in
xor
mov
push
aaa
cmp
scas
add
loop
fldenv
and
in
mov
jnp
dec
ljmp
subb
data16
mov
shlb
and
movsl
sub
lods
sbb
adcb
rcll
mov
fsub
pop
and
mov
mov
cwtl
push
movsl
in
fbstp
adc
push
push
stos
mov
xchg
lcall
pop
xor
or
pop
pop
or
and
loop
out
mov
rorl
shrb
ret
fsubrl
dec
push
sbb
stos
xor
lret
repnz
in
iret
pop
and
leave
add
adc
jo
mov
add
push
pop
movsl
sub
adc
xlat
lret
mov
fdivs
cmc
push
push
mov
scas
lea
xchg
fwait
jno
mov
cli
cmc
xor
int
in
dec
jne
push
xchg
mov
add
xor
sbb
icebp
sbb
xor
ss
les
in
flds
or
xchg
xchg
mov
sub
pop
adc
test
xor
push
cltd
push
out
jg
fsubrl
inc
cltd
loopne
sub
mov
cmp
mull
xchg
jnp
out
adc
mov
xchg
sbb
fidivrs
inc
std
pop
aas
mov
sub
xchg
pop
jne
sbb
mov
xchg
jecxz
outsl
pop
cltd
in
fs
cmp
jns
push
loopne
loop
pop
leave
loopne
cmp
add
les
rorl
mov
xchg
imul
les
push
cmp
xor
inc
push
movsl
in
imul
push
cmpsb
adc
jo
dec
dec
add
in
mov
fcmovb
add
insb
into
ficompl
fbld
jb
pushf
out
or
mov
inc
sub
je
fstpl
inc
cltd
nop
idivl
xchg
adc
mov
rcrb
movb
clc
repnz
push
into
xor
or
push
jl
cltd
jg
movsb
push
jl
popf
ficoms
mov
adc
pop
jge
repz
inc
daa
mov
aaa
push
stos
add
adc
nop
and
xor
pop
sahf
pop
mov
sub
sub
andl
dec
stos
pushf
or
leave
mov
rcl
orl
addr16
add
xchg
andb
scas
xchg
je
popa
ss
adc
jl
clc
cmp
test
jl
cmp
mov
xchg
pop
add
pop
sahf
out
hlt
imul
aaa
push
sub
xchg
enter
loope
pushf
popf
int
lret
js
fldcw
mov
stos
repz
dec
in
gs
jg
mov
imul
lds
mov
sarb
or
mov
xor
or
add
inc
ret
mov
pop
pop
cwtl
cmovns
notl
jg
add
inc
aaa
xchg
sbb
adc
repnz
out
cld
shlb
inc
aas
getsec
sbb
lds
xchg
pop
jg
pop
adc
mov
shll
hlt
ds
icebp
jnp
out
mov
cmpsl
fisubl
mov
push
cld
mov
xchg
jnp
xchg
mov
setae
and
out
push
data16
mov
test
lds
iret
sub
push
sbb
repz
sahf
jae
faddl
dec
daa
lock
pop
pop
sub
adc
je
pop
sti
add
and
pop
lret
pop
mov
xor
in
mov
adcb
dec
popa
xchg
lea
insl
jne
loop
or
lods
icebp
and
cmp
jge
mov
adc
sahf
and
out
add
xor
sbb
xor
xchg
ss
cmp
mov
jle
jge
scas
mov
repz
adc
or
or
clc
out
addb
sbb
negl
mull
gs
shll
std
test
cwtl
movsl
out
and
shll
das
sub
mov
dec
mov
push
int
jno
mov
xchg
rcll
mov
xor
cmpsb
enter
or
in
jmp
add
xchg
cmpsb
push
mov
std
daa
mov
mov
jg
dec
xchg
out
aad
dec
jg
inc
fdiv
mov
scas
arpl
aad
dec
das
or
sub
lods
ss
push
inc
jns
nop
aad
cltd
add
inc
ret
imul
insb
mov
sub
loope
ret
xchg
sbb
enter
inc
cmpsl
loope
or
and
ljmp
mov
dec
ljmp
xchg
repz
into
add
sub
icebp
jmp
fisubs
push
loop
sbb
cmpsb
adc
mov
mov
cmp
rcll
in
mov
icebp
push
iret
mov
cld
mov
jp
xor
jecxz
mov
push
mov
jae
mov
jmp
pop
fnstenv
push
inc
and
add
xchg
repz
adc
mov
orl
dec
lods
push
test
int3
std
adcb
cmp
dec
or
add
js
pop
popl
and
inc
add
jmp
repnz
jnp
or
movsl
xchg
mov
adc
jbe
shlb
or
fistpll
and
adc
test
cwtl
sbb
mov
pop
jbe
push
std
rcrb
mov
or
stos
xchg
sahf
xchg
outsb
imul
mov
int3
jl
or
push
xchg
pop
sbb
and
popa
sbb
sbb
jmp
jno
daa
push
ss
cli
stos
and
mov
xchg
jp
add
popf
dec
jp
arpl
push
adc
jo
inc
jp
lcall
addr16
pop
in
mov
mov
std
adc
stc
loop
xor
divb
imul
in
push
push
push
arpl
inc
loope
jecxz
std
jb
mov
cmp
inc
mov
dec
xchg
repz
mov
jno
iret
push
stc
pop
sub
jl
lods
shrl
movsl
ss
adc
xchg
scas
push
dec
xchg
mov
fisttpll
push
ja
pop
sbb
add
mov
xor
sub
sbb
jg
mov
ss
test
adc
xor
mov
sub
mov
dec
mov
or
jg
test
pop
sti
mov
enter
addr16
cmpl
push
inc
fimuls
mov
jnp
cs
stos
cmp
push
ljmp
or
push
sub
add
push
je
leave
mov
std
cmp
xchg
mov
ss
mov
jle
or
loop
jl
paddd
push
pop
xor
jp
jecxz
pop
or
hlt
scas
imul
push
mov
adc
test
sarb
sbb
call
lds
push
jae
shl
add
adc
sarb
jae
imul
push
pop
ja
xor
xor
mov
or
sub
stc
je
shlb
es
jno
stc
cs
mov
test
or
mov
pop
lret
sahf
repz
pusha
rcrl
sbb
js
jae
inc
insl
mov
jl
cmp
sub
jne
test
daa
cld
lahf
or
scas
push
jo
int3
leave
sub
add
insl
push
lock
orl
in
ss
cmp
pop
roll
ret
push
lods
push
mov
js
or
lret
jno
push
sbb
xlat
sbb
cmp
sbb
imul
xor
xchg
jg
insl
shrb
sub
test
mov
testl
mov
mov
push
mov
aaa
outsb
addb
or
sbb
fistpl
mov
je
lcall
call
stos
xor
addb
ret
pop
push
aaa
sub
in
inc
ss
lds
es
pop
imul
sti
cwtl
cltd
pusha
cmpsb
imul
rcr
pusha
das
fldcw
mov
loope
lret
dec
call
adc
in
cmp
jp
cmc
mov
mov
flds
jnp
mov
inc
push
pextrw
aaa
mov
js
in
dec
mov
shll
fstps
les
xor
lock
jb
pop
movb
pop
mov
push
and
mov
lods
lds
hlt
stos
dec
bnd
jle
jmp
inc
push
cmc
pop
call
dec
lods
movsb
xlat
sbb
or
pop
cmp
int
int3
ljmp
addr16
lar
fbstp
cs
in
add
inc
mov
int3
add
mov
cmpsl
xchg
stc
jecxz
push
xchg
jecxz
pusha
imul
or
push
push
cmpsb
cs
stos
loop
bound
adc
lahf
stos
loopne
popa
cmc
testb
xor
mov
shlb
shl
pop
pop
fidivrs
lret
cmp
xchg
cmpsl
inc
bound
lods
xchg
xchg
repnz
xchg
ds
cmpsl
lods
xor
lcall
jle
add
aaa
add
icebp
pop
push
mov
in
inc
lods
dec
lret
adc
cmpsb
push
sub
mov
fsubrs
push
xlat
aas
inc
lock
xchg
or
pop
je
cmp
mov
sub
test
in
pop
jnp
fmull
mov
inc
arpl
out
ret
popa
fdivr
pop
mov
cmp
imul
sub
mov
iret
push
lret
inc
fst
mov
adc
or
pop
pop
int3
xchg
out
adc
or
addr16
nop
xor
inc
fwait
lods
cmpsb
jo
mov
xor
jmp
sbb
xor
imul
in
dec
popf
ljmp
ret
mov
mov
in
hlt
insl
gs
or
mov
mov
loope
xchg
and
adc
jmp
sub
fadd
aam
pop
lahf
xor
sbb
aam
push
xor
xchg
push
popa
sbb
mov
xchg
xchg
push
jmp
ret
or
pop
mov
fldt
jle
loop
inc
mov
mov
sub
leave
xor
jo
aam
sbb
int3
cli
aas
popf
out
aam
pop
and
stos
mov
clc
lods
movb
dec
into
jo
pop
lret
and
inc
ret
push
clc
out
dec
out
jl
ret
adcl
repnz
mov
les
mov
das
leave
in
test
sahf
lods
imull
sbbb
out
and
icebp
push
fadds
sub
mov
imul
push
push
jnp
sbb
test
jb
mov
mov
sub
cmp
add
pop
xchg
mov
mov
es
icebp
shll
inc
rcrl
dec
push
in
lds
and
pushf
addr16
dec
imul
xchg
jp
rcl
sbb
fisubrl
mov
lods
dec
push
cmpsl
pushf
mov
and
shl
sub
les
adc
stc
and
push
lcall
or
dec
in
cmc
das
out
out
add
mov
sar
daa
sub
cs
out
sahf
jecxz
push
int
sub
ret
adc
sbb
in
push
loopne
into
ret
lcall
mov
mov
jo
mov
sub
mov
in
and
hlt
shrb
pop
addr16
in
jle
lods
lahf
xor
pop
jnp
jmp
cli
jp
enter
adc
mov
xor
and
adc
mov
adc
sub
leave
and
xchg
or
push
sbb
pop
aad
mov
test
pop
xor
xchg
scas
xor
and
lret
loopne
xchg
enterw
mov
loop
ds
lods
or
data16
outsb
subb
mov
movsl
ret
ss
loop
lret
add
dec
es
push
rorb
or
jg
and
fwait
or
adc
out
sbb
sbb
aad
nop
or
add
cmp
ficompl
cmp
pop
sub
push
fisttpl
push
out
call
lahf
xor
lock
dec
or
insb
and
mov
test
ret
pop
mov
in
cmp
icebp
out
adc
insl
mov
add
mov
rcrl
inc
pusha
int3
icebp
gs
mulb
lock
adc
jae
dec
jecxz
pop
in
cmp
lods
mov
jno
add
pop
and
inc
fdiv
sbb
jns
dec
cmp
scas
or
mov
lret
scas
insb
stc
push
and
push
fwait
cmp
dec
pusha
test
mov
dec
and
cli
pop
daa
in
fs
gs
xlat
and
lea
leave
xchg
mov
scas
jbe
std
pushf
add
arpl
loop
mov
std
les
cmp
jmp
outsl
cmpsb
push
enter
test
scas
mov
lcall
mov
sub
ds
arpl
cmp
loope
roll
in
push
push
leave
jp
sahf
xchg
fwait
push
insb
dec
pop
mov
in
jnp
mov
sbbl
fsubl
stos
mov
test
sub
fdivs
in
mov
das
test
loop
ret
aad
mov
test
or
popf
rcll
mov
fldcw
push
loope
icebp
mov
dec
mov
xchg
xor
shrl
bound
loop
lcall
pop
sbb
jne
mov
in
xor
mov
aaa
scas
xor
dec
push
repnz
dec
sub
fistpll
out
jno
push
xchg
faddl
mov
ret
or
inc
and
push
and
js
int3
cmp
aad
jmp
hlt
outsl
inc
mov
getsec
lret
fstl
push
push
pop
loopne
xchg
cmp
adcl
fimull
lea
icebp
xor
in
mov
mov
stos
or
mov
mov
lret
iret
iret
flds
mov
mov
adc
cmp
mov
mov
mov
sub
sbb
sbb
scas
add
inc
cmc
push
dec
in
mov
push
fwait
adc
or
jae
aas
push
mov
sbb
cli
loop
sbb
add
test
aaa
adc
adcl
fisttps
lea
fcoms
push
lret
popf
cmp
push
iret
gs
das
mov
fsubrs
xchg
leave
mov
sub
aam
and
js
push
dec
lock
outsl
pop
clc
mov
imul
movsl
lret
jae
sub
push
pushf
mov
into
repnz
clc
in
xlat
out
jl
lcall
adc
or
mov
xor
xchg
xchg
cmp
data16
into
mov
lds
pop
daa
popf
jno
xlat
xor
and
iret
push
enter
mov
mov
fsubs
aad
in
pop
outsl
cs
jg
and
ss
fmul
inc
insb
ja
fsubr
shl
repz
xor
movsl
insl
sbb
pop
cs
xorl
fadds
outsb
adc
nop
pop
adc
pop
repz
inc
pop
jne
mov
mov
adc
lods
in
sbb
hlt
jns
xchg
lahf
and
cwtl
sbb
arpl
sub
sti
mov
aad
mov
gs
sbb
sub
mov
xchg
push
lcall
xchg
test
idivb
pushf
es
xor
cmp
sub
negl
jno
add
sub
insb
roll
or
jl
cmp
insb
insl
stos
mov
inc
add
dec
testl
and
xor
fs
xor
cmp
test
int3
lock
mov
ret
mov
jne
cmc
je
shlb
rorl
out
push
and
bound
btcl
fidivl
pop
fwait
addr16
adc
outsb
mov
lahf
lea
popf
int
adc
test
out
xchg
lret
add
cmp
sub
cmp
jge
stc
mov
aas
sub
adc
xchg
and
xchg
sub
test
loope
mov
push
shll
stos
cmp
sti
fs
pushf
add
inc
out
xor
adcl
push
adc
test
test
into
data16
push
jle
sub
pop
cmp
xchg
or
fnstenv
push
xor
cmp
outsl
inc
cwtl
rol
pop
jl
lcall
xor
fs
sbb
repz
addb
dec
sarb
pop
out
mov
add
and
and
jae
add
and
push
repz
mov
daa
int
fiadds
enter
mov
mov
xor
xor
or
pusha
sbb
add
inc
inc
lahf
fcompl
insb
cmp
fcmovne
xor
je
push
and
roll
ljmp
cmp
pop
imul
push
xor
int3
arpl
mov
nop
and
leave
cmpsb
xor
pop
jns
mov
ds
push
arpl
pop
cmp
inc
arpl
lcall
shrb
lahf
sbb
jne
stc
jp
mov
inc
cs
in
test
dec
les
mull
jmp
jp
add
frstor
imul
push
or
and
push
movsb
in
pop
push
in
sub
push
jae
xchg
fistl
pop
dec
fiadds
sub
dec
lods
fisttps
popa
push
lcall
pushf
or
mov
leave
nop
lcall
into
mov
and
arpl
dec
push
mov
xchg
pop
pop
cmp
mov
mov
mov
pop
cmpb
pop
mov
notl
enter
push
mov
leave
into
aad
and
iret
imull
add
pushf
movsl
sbb
arpl
daa
aad
ja
inc
addr16
or
pop
xchg
mov
and
test
lods
add
xchg
in
ret
adc
pop
hlt
loope
jl
outsl
test
stos
test
data16
in
cmp
pop
mov
jecxz
push
insl
lahf
lret
in
sbb
xchg
icebp
add
jg
pusha
andb
xchg
sbb
pop
mov
enter
mov
xchg
add
bound
xchg
xchg
xor
inc
xchg
jmp
jns
sub
aas
orb
negb
leave
mov
pop
scas
outsb
and
fldenv
mov
shrl
dec
sahf
scas
or
stc
cmc
add
fisubs
adcl
sbb
lea
aam
dec
cwtl
xchg
clc
and
mov
mov
xor
mov
nop
ss
out
and
xor
mov
pop
jo
idivb
lcall
sub
push
imul
lds
icebp
pushf
sti
push
xor
and
xchg
sbb
xchg
fimuls
dec
mov
stos
nop
add
subl
inc
sub
dec
dec
dec
inc
mov
out
add
mov
jle
cmp
ret
sub
lret
hlt
fldenv
add
sbb
xor
xor
xchg
mov
sti
cmp
test
stos
or
xchg
sub
jnp
xor
daa
insb
popa
inc
gs
pop
xor
stos
jmp
test
lret
nop
pop
repnz
xchg
pusha
andb
leave
movsb
jnp
les
dec
loop
scas
lods
inc
dec
xor
sti
mov
ss
jns
subl
aas
jne
lea
pop
std
lock
mov
aas
iret
sbb
negl
mov
jnp
jns
adcb
pop
in
dec
dec
jecxz
rorl
addr16
out
lcall
sub
xchg
xor
mov
cmpsb
pushf
inc
and
mov
test
mov
adc
out
push
add
xorl
aas
js
mov
testb
mov
loop
fsubrs
int
sbb
jae
and
jae
xchg
test
test
fwait
mov
add
cmp
adc
mov
push
jl
insb
or
sbb
inc
jbe
test
cmp
mov
xor
xchg
xchg
adc
stc
inc
les
or
push
cwtl
fdivrs
mov
mov
lods
push
jns
push
jle
pcmpgtd
xchg
adc
inc
in
push
ds
loop
aas
add
push
ret
adc
cwtl
xor
xchg
aas
out
test
lcall
or
jns
mov
fistpll
stc
cmp
ja
lods
lret
popf
jae
fcompl
int3
icebp
roll
and
aas
xchg
and
stos
shll
xor
gs
pop
jg
mov
outsl
inc
mov
mov
shll
scas
push
dec
sub
dec
or
nop
cmp
mov
fs
xchg
cmp
lahf
test
and
testl
cld
nop
and
out
loopne
jge
cli
outsl
push
in
and
add
sub
pop
movsb
iret
testl
sub
mov
jne
sub
insb
test
mov
roll
and
mov
mov
sub
cwtl
mov
and
or
xchg
jo
lcall
outsb
bnd
sbb
or
inc
sub
sub
clc
mov
pusha
mov
push
addl
dec
mov
jae
adc
pushf
sbb
lods
xchg
mov
xor
in
push
shll
fwait
push
jle
add
into
in
mov
lret
xchg
jns
mov
xlat
aam
pop
out
out
rclb
add
lods
std
hlt
dec
ret
dec
std
mov
xor
push
dec
cmp
add
xchg
inc
jnp
adc
push
pop
mov
adc
add
int
or
sbb
push
aas
insl
push
int3
idivl
call
add
jb
sbb
cmpb
out
adcb
dec
mov
jg
adc
test
sbb
cmpsl
sbb
mov
clc
or
inc
jne
cltd
cmp
push
fadds
jle
aad
xchg
loop
fists
popf
cmp
pop
cli
mov
mov
aas
into
out
and
lea
xchg
jge
test
mov
dec
cmp
popf
sbb
xchg
lods
add
or
test
stc
dec
pusha
push
adc
adc
pop
ss
call
test
mov
pop
mov
lret
inc
dec
adc
xor
nop
fwait
jl
cmc
mov
mov
xchg
mov
xor
sbb
mov
push
in
fidivrl
adc
push
mov
pusha
pop
data16
mov
test
jnp
je
fs
cltd
cs
push
stc
lret
sub
mov
xor
aad
outsb
inc
scas
arpl
xchg
filds
ja
fstl
push
insl
dec
cmp
out
add
cmc
dec
cli
ss
fisubl
mov
lahf
daa
cmp
addr16
pop
xchg
pop
sub
mov
adc
test
ret
push
push
orb
pusha
push
fucomip
and
call
arpl
mov
hlt
lds
iret
xchg
aaa
sbb
sahf
xchg
jl
adc
pop
cld
addr16
ret
int
sbb
mov
adc
cmp
repnz
pop
ret
xchg
inc
xchg
aam
and
mov
or
stos
sbb
mov
inc
in
add
addr16
jl
lea
push
leave
mov
mul
or
insb
lds
mov
mov
cmp
cs
clc
xchg
xchg
addr16
sahf
mov
in
cld
pop
mov
cmp
cli
mov
xchg
stos
dec
in
fisubrl
pop
iret
or
push
lahf
les
out
jmp
stos
sub
push
test
and
fwait
xchg
mov
inc
nop
cltd
fstl
xchg
je
pop
lret
test
sbb
popf
ret
jbe
insl
enter
pop
mov
scas
sbbl
repz
mov
adc
inc
cmpsb
xchg
subb
and
movsb
xchg
loope
pop
jb
sub
sbb
fs
std
push
rcrl
or
pop
xchg
sar
iret
jo
jmp
fsubl
cltd
imul
mov
xor
sub
jns
jns
pop
dec
scas
and
cmc
and
sbb
push
mov
pop
subl
xor
lds
pop
lock
test
std
test
mov
add
aam
fldenv
add
inc
into
cmp
cmpsb
sbb
push
imul
cmp
jecxz
push
add
out
or
mov
sub
fstl
mov
stos
loope
decl
mov
repz
cli
pushf
arpl
mov
gs
repnz
in
pop
cmp
add
popa
xchg
push
in
mov
push
lcall
xchg
icebp
mov
fsubrs
mov
jmp
frstor
movsb
lods
dec
add
jo
icebp
stos
in
movhps
out
decb
subb
jp
add
std
ljmp
jmp
int3
xchg
dec
dec
ret
mov
push
push
xor
adc
push
into
jl
imul
xchg
das
imul
jne
mov
in
push
mov
das
pop
outsb
push
pop
or
ja
test
inc
repnz
in
stc
push
mov
push
mov
jp
mov
out
inc
mov
nop
mov
add
mov
jns
lea
aam
iret
push
scas
mov
mov
test
cmc
xorb
jmp
xchg
and
lea
push
andl
cmp
sarl
ljmp
adc
dec
roll
push
repnz
pop
adc
repnz
xchg
cmp
ja
or
es
mov
inc
xchg
sbb
lods
into
xchg
sub
mov
pusha
or
xor
mov
lods
in
pop
scas
sub
rcll
test
shl
int3
lods
cld
sar
outsl
in
pusha
xchg
push
push
push
stos
and
push
inc
pop
loop
sbb
fs
xor
cmp
push
pmaddwd
pop
loop
mov
enter
in
jno
mov
outsb
sub
mov
lods
mov
and
fisubrl
sahf
mov
add
adcl
lcall
mull
sbb
test
stc
mov
inc
sahf
adc
jg
dec
mov
js
std
lock
mov
xor
push
mov
jp
dec
cld
repz
lods
dec
sub
sbb
fsubl
mov
push
mov
pop
sub
adc
loope
inc
dec
in
sub
add
mov
cmp
push
cmp
iret
mov
cmp
xchg
cli
lahf
dec
sbb
jle
mov
outsl
je
stos
adc
xor
dec
test
pop
xor
cmp
daa
cmp
xchg
cmp
dec
in
lock
loope
xlat
popa
nop
push
out
lret
pop
mov
xchg
ror
icebp
daa
ret
sbb
inc
fldl
cmp
cli
into
dec
pop
adcl
jne
leave
mov
aam
add
pop
dec
ficomps
mov
fildl
cmp
push
aam
ret
enter
add
mov
scas
push
mov
mov
shll
adc
popa
lods
mov
and
push
and
cmpsl
imul
sbb
xchg
test
aas
mov
cmpsb
sbb
cmp
sub
ss
decb
lock
pusha
outsb
lahf
cmovl
lods
push
pop
xchg
jae
ffree
ret
shr
lods
inc
inc
sbb
push
ror
add
add
dec
adc
into
xchg
mov
xor
push
fcomp
ds
dec
inc
dec
mov
lahf
xor
mov
mov
out
rcl
add
stos
and
cmc
pop
pop
push
add
into
jae
mov
mov
dec
sub
pusha
dec
loopne
ffreep
dec
add
cltd
jns
xchg
loop
jmp
fildll
push
sbb
adc
dec
sub
repz
shlb
fs
fwait
or
sbb
fnstcw
mov
jge
aam
pop
sbb
je
fucomp
aam
jb
mov
xlat
test
mov
lea
xor
push
fwait
dec
mov
adc
lods
and
jg
push
inc
cmp
or
aad
xchg
int3
or
pop
aaa
adc
jb
push
push
fldt
xchg
jno
jge
test
nop
mov
lahf
dec
cmp
lea
leave
int3
mov
imul
pop
and
xlat
negb
jb
lahf
scas
test
cwtl
scas
dec
rol
inc
fistps
test
mov
out
ror
sub
mov
mov
aaa
mov
fisttps
adc
pop
xchg
add
inc
mov
fisubrs
pop
mov
nop
fstpt
enter
hlt
jae
adc
jo
jno
jge
pop
add
inc
js
mov
pop
mov
aad
or
cmpsl
test
aam
mov
jl
int3
pop
lahf
ret
push
insb
out
pop
sbb
movsl
sub
leave
scas
push
push
divl
mov
je
out
test
sbbb
inc
scas
repz
sahf
adc
mov
into
stos
jle
test
std
ret
mov
pop
daa
mulb
mov
fdivrs
xchg
jl
push
sub
adc
outsl
std
sti
dec
cmp
std
popf
and
pop
iret
sbb
jo
cmp
nop
int3
ficomps
lods
ret
and
xchg
insb
or
fists
pushf
or
repnz
add
shrb
push
push
mov
mov
mov
stos
jo
ficoml
and
test
mov
add
and
xchg
divb
repnz
notb
mov
in
leave
rclb
jo
jne
in
test
lret
mov
xchg
das
cmp
sbb
cmp
jne
xchg
iret
dec
mov
xor
push
sbb
addl
imul
pop
cmp
int
mov
or
movb
mov
push
dec
movsb
rol
cs
in
pop
psraw
add
pop
cmp
aad
icebp
mov
and
insb
sbb
jns
mov
daa
dec
add
dec
hlt
cmp
iret
pop
xchg
pop
jp
push
test
xchg
inc
lods
aaa
iret
adc
andb
mov
mov
insb
and
mov
lret
jb
and
or
in
dec
push
jns
adc
mov
cmp
out
sub
jl
insb
lds
pop
and
dec
push
lahf
cvtdq2ps
add
jb
test
je
pop
ffree
adc
repz
jno
dec
cmp
mov
mov
pop
ljmp
je
sar
jmp
mov
lods
gs
push
push
in
enter
sbb
sub
jg
inc
push
iret
stos
push
aaa
sbb
add
lds
gs
aaa
iret
jecxz
adc
jno
xor
cltd
mov
int3
jle
outsb
mov
data16
add
repz
add
lahf
push
js
dec
mov
cmp
enter
fcmovnb
jg
cltd
push
in
mov
dec
out
test
add
std
imul
out
or
je
mov
iret
mov
mov
mov
es
mov
sub
fcomip
out
pop
inc
mov
ja
xor
jmp
in
std
add
add
mov
pushf
lods
push
mov
addr16
mov
inc
cmp
push
cmp
or
ja
jg
mov
xor
push
sarb
push
xor
mov
ret
pop
pop
stc
into
xchg
push
loope
cmpsl
fdivp
fwait
hlt
push
lock
shlb
mov
jns
push
es
lock
cmpsb
filds
mov
jmp
shrl
aam
add
xor
enter
cmp
sub
pushf
xor
jae
sub
dec
add
fwait
aas
jg
xchg
aam
and
sub
lahf
sub
push
in
xor
loope
cmp
cmp
xor
leave
lahf
sbb
sub
rcl
mov
add
jg
sub
push
mov
cmpsl
push
inc
sti
add
sub
cmpsl
js
jmp
fdivs
adc
dec
nop
mov
pcmpeqw
fsubs
sbb
xchg
lock
pop
pop
mov
mov
push
and
xchg
jecxz
pop
xchg
mov
cmpsl
mov
xor
test
add
cmpsb
xchg
pop
adc
out
inc
push
push
jmp
clc
or
or
or
shlb
inc
xlat
gs
add
out
sub
fnstenv
gs
stos
cwtl
insl
sbb
loopne
add
cmpsl
imul
jecxz
imul
loopne
pop
loope
test
dec
push
sbb
push
dec
cmc
ret
mov
inc
pop
dec
pop
jae
pop
cwtl
nop
lock
imulb
movsl
xchg
fimuls
aaa
inc
pop
cmc
dec
push
int3
decb
jno
sbb
lahf
pop
jge
inc
xor
hlt
nop
inc
outsb
jl
addr16
fs
lret
rcr
adc
test
popf
push
inc
pop
jae
fstps
mov
orl
iret
outsl
jge
fwait
mov
jne
xor
ss
inc
add
gs
cmp
dec
in
outsl
clc
cmp
mov
fidivrs
adc
fadds
xlat
and
nop
sarl
js
es
pop
lahf
aaa
xchg
les
out
js
add
inc
mov
sub
js
jns
adc
popa
outsb
push
outsl
ds
in
bound
sahf
mov
fs
inc
sbb
xchg
push
add
or
rolb
mov
sub
shrb
xchg
test
iret
into
push
push
arpl
xchg
adc
sbb
and
iret
icebp
cmp
rcrb
leave
mov
pop
fs
mov
insl
cli
into
insl
in
mov
scas
xor
enter
dec
dec
insl
or
lods
xchg
xchg
add
cld
cltd
xchg
cmp
or
sbb
push
push
int
xchg
inc
divb
out
dec
and
leave
jb
fsubrs
cmp
cmp
adc
jbe
mov
enter
cmpsl
ret
lahf
inc
arpl
cmp
push
test
push
jbe
jo
mov
data16
pop
loopne
sub
dec
or
jle
jp
in
mov
pushf
adc
mov
out
xor
mov
mov
push
sbb
insb
aas
push
xchg
xor
cmp
dec
call
jmp
push
add
push
cmc
test
dec
insb
sub
movswl
mov
push
int
clc
nop
int
xor
sbb
fs
mov
push
dec
mov
cwtl
js
out
sub
sahf
mov
and
sbb
loop
mov
add
das
dec
xchg
inc
lods
ret
or
add
dec
push
pop
fildll
shrb
aas
lock
or
cmpb
es
push
xorl
cmc
xchg
fisubrs
mov
ret
cmpsl
cmp
cs
lock
adc
arpl
fadds
push
add
xchg
xor
loop
cld
or
fs
and
mov
sbb
das
cmp
dec
add
jmp
and
or
icebp
xor
add
addb
jecxz
leave
shr
cmp
pop
sub
jns
and
lret
sbb
push
insl
xor
cs
add
mov
ja
or
mov
xor
loopne
and
or
lret
jle
and
pop
jbe
fisubs
xchg
inc
mov
push
push
push
mov
inc
lahf
or
mov
negb
pop
adc
push
rcll
cs
je
stos
pop
mov
push
xchg
in
push
adc
int3
cmp
jge
dec
add
into
ficoml
shr
cmpsb
jl
mov
mov
clc
pop
xchg
shr
in
sub
shll
inc
jecxz
mov
push
push
cmpsl
adc
in
pop
sub
imul
adc
ror
aas
mov
data16
push
iret
push
sub
mov
mov
sub
sbb
mov
push
mov
sahf
sti
pop
aad
cs
cmp
inc
xchg
mov
dec
jl
cwtl
fnstenv
out
test
movsl
pop
mov
dec
jae
xchg
mov
inc
in
lds
add
ret
stc
in
xorl
cli
jbe
outsl
das
xchg
pop
int3
pop
aad
xchg
repnz
xchg
add
pop
divb
cs
ja
mov
mov
push
mov
stos
fsubrp
in
jo
xchg
pusha
sub
fisubrl
add
xchg
mov
adc
dec
sbb
inc
dec
jmp
insb
xor
cmp
test
add
jg
notl
jmp
test
mov
cltd
mov
push
xchg
out
in
fdivr
inc
pop
or
sbb
and
insb
xchg
or
dec
mov
mov
xchg
aaa
mov
sub
inc
inc
incb
jge
xor
pop
mov
fnstsw
out
lahf
pcmpgtd
negl
loop
arpl
add
and
jne
sarb
lds
jle
int
roll
mov
mov
adc
push
and
push
push
jbe
mov
fcoms
pop
or
fistps
jae
loope
sbb
lock
mov
mov
dec
test
lret
lret
ljmp
jp
push
and
enter
push
cmp
ret
pop
inc
out
imul
dec
dec
jle
daa
xchg
and
adc
pusha
dec
movsl
mov
inc
add
fsub
push
sbb
cmp
jmp
mov
shrb
jbe
mov
xchg
dec
xor
mov
cmp
inc
mov
rcll
fsts
pop
out
pop
stos
cmpsb
cs
cld
add
cmp
js
mov
lods
jmp
enter
jg
xchg
movsl
mov
lret
xchg
jno
push
mov
xchg
xor
ljmp
cld
sarl
popa
or
std
jge
push
pop
int3
pop
xchg
adc
jne
ret
pop
dec
mov
cld
pop
sbb
int3
adc
lock
jb
jg
out
mov
fbstp
jl
popf
fldt
push
cmp
popa
std
sub
out
enter
adc
rcrl
in
jo
jecxz
sbb
shr
mov
into
out
dec
jge
push
int
dec
shrb
mov
cmp
xor
clc
int
in
xchg
mov
dec
add
out
add
fwait
or
into
sub
cmp
mov
repz
sbb
jl
mov
sbb
mov
cli
fbld
out
insl
sbb
push
movsb
and
mov
mov
fimull
movsb
outsb
mov
push
aam
jge
mov
imul
rcrb
inc
push
xchg
inc
bound
addb
js
mov
das
dec
out
cmpl
nop
mov
mov
movsb
push
add
xchg
sub
filds
add
cli
pop
outsb
xchg
daa
jle
nop
sti
jle
push
and
and
imul
or
das
xorl
das
xchg
xchg
in
xor
mov
lods
xor
mov
pop
mov
push
in
xlat
pop
mov
aam
push
ret
push
dec
cmp
repz
sbb
leave
xchg
sbb
lods
test
push
and
mov
arpl
pop
or
dec
pop
push
int
cwtl
xchg
dec
mov
sub
xlat
mov
scas
and
dec
xor
push
mov
int3
loopne
xchg
enter
cmp
arpl
mov
scas
mov
in
leave
lods
add
andb
mov
mov
repz
mov
fmuls
test
xchg
ret
jae
repz
xchg
inc
xorb
mov
sbb
ss
js
inc
push
xor
push
icebp
sbb
adc
mov
xor
nop
push
pop
jb
mov
sahf
jnp
xchg
js
xor
mov
xchg
jl
test
pop
and
cmpsb
mov
data16
sbb
int3
xlat
jmp
jbe
inc
adc
xchg
out
imul
xchg
ss
arpl
pop
scas
adc
sbb
stc
into
mov
mov
adc
or
cltd
inc
outsl
cwtl
sbb
andb
lahf
xchg
mov
bound
jnp
mov
sbb
lods
ret
lret
sbb
dec
in
jmp
shlb
ss
daa
and
icebp
movsb
inc
mov
or
sahf
lea
test
sub
lods
enter
shr
mov
or
jbe
movsl
pop
cli
les
rorl
lock
xlat
sub
or
dec
jns
jmp
icebp
push
lock
iret
fisubl
pop
xchg
mull
lods
jle
push
pop
mov
ljmp
mov
add
cld
sbb
adc
cmc
orl
aaa
inc
std
dec
les
mov
jge
pop
stos
inc
in
movsl
out
push
movsl
xchg
cmpsl
or
cmp
cmp
js
jo
sub
bound
mov
dec
fcmovu
pop
mov
adc
and
and
enter
jno
loope
mov
xchg
repnz
lcall
mov
adc
decl
xchg
mov
stos
jno
negl
inc
lret
inc
dec
ficoms
inc
xor
leave
push
push
cltd
dec
or
lods
cld
loopne
adc
fmull
in
icebp
sti
push
mov
lods
roll
jae
cmpsb
xchg
sbb
pop
mov
xor
and
mov
xor
shrb
pusha
in
imul
xor
stos
out
mov
dec
mov
sbb
scas
xchg
sub
fisubrs
xor
jg
dec
lods
enter
lods
inc
mov
insb
or
push
mov
jns
dec
aam
mov
xor
inc
sbb
jmp
addl
push
sub
les
inc
sub
jbe
pop
sbb
hlt
stc
std
mov
inc
jns
jae
inc
add
push
mov
jb
lret
outsl
cmp
jp
ds
xchg
rcl
push
fptan
aaa
repz
add
sahf
cmc
lock
adc
xchg
pop
test
repz
popa
mov
movsl
dec
push
pop
push
xchg
sbb
mov
cli
sbb
mov
and
mov
lock
rolb
add
push
mov
lods
outsl
into
stos
and
ret
push
jp
push
jnp
or
cmp
pop
cli
les
test
or
cmpsl
pop
sub
mov
and
scas
addr16
dec
pop
les
dec
add
jns
cld
cmp
pop
pop
adc
mov
cs
adc
cmc
fcmovu
lock
inc
adc
inc
loopnew
addr16
jg
mov
lret
addb
movsb
hlt
ss
in
stos
imul
add
sarb
mov
push
lcall
cmpsb
push
repz
out
loopne
repz
rcll
cmpsl
mov
add
mov
sbb
or
xchg
mov
sub
dec
cld
cld
jmp
ret
ss
pop
jl
imul
or
push
lds
out
or
aad
jle
out
jle
mov
jecxz
pop
add
inc
dec
pop
add
dec
sbb
add
arpl
int
inc
int3
cmpsb
xor
cmp
das
insb
sub
inc
pusha
jno
jecxz
and
mov
roll
outsb
xor
arpl
fsubrp
insb
lahf
repz
xchg
and
add
jge
test
push
push
rorb
je
aaa
enter
add
loopne
shl
sub
mov
add
jecxz
xchg
pop
int
ljmp
jl
cmp
test
or
mov
inc
dec
pop
xor
xlat
mov
lcall
jg
mov
adc
and
scas
scas
in
out
mov
push
fimuls
sarl
pop
lods
mov
cmp
cmc
inc
cmpsb
lods
mov
daa
je
jg
push
out
sbb
pop
lds
xor
fs
jns
add
xlat
or
adc
xor
mull
xchg
cmc
dec
icebp
sbb
cs
add
popa
fdivrl
imul
lods
push
sub
and
lock
adc
call
adc
nop
js
ljmp
stc
fwait
testl
jp
push
call
daa
xor
or
shll
mov
and
insb
sub
pushf
pop
repz
imul
mov
enter
movsb
jmp
push
add
int
stc
push
xchg
and
inc
es
test
add
mov
rcrl
mov
test
push
insl
cmp
std
pop
jns
ljmp
outsb
ds
sbb
leave
xor
in
cmp
jmp
cmpsl
inc
pop
add
lea
adc
push
and
add
jmp
inc
add
push
dec
loopne
lret
mov
je
lods
aas
push
andl
ljmp
xchg
cmpsb
ret
bound
adc
push
dec
lock
decb
jle
idivl
movsl
inc
xlat
add
jge
cs
sub
mov
shl
movsl
icebp
leave
push
into
xchg
fwait
aad
outsl
push
jo
lods
jmp
pop
push
lret
sbb
pop
and
push
in
repz
ss
sub
mov
sub
or
mov
repnz
dec
cmpsb
in
jmp
add
