add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
mov
inc
add
decl
decl
test
mov
testb
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
mov
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
cs
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
leave
std
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
cwtl
hlt
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
add
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
xchg
testb
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
add
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
es
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cltd
sti
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
icebp
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
and
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
orb
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
and
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
or
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
push
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
adc
mov
or
inc
add
inc
or
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
subl
decb
add
push
add
add
add
push
lret
fidivrs
movsb
in
add
pop
cmpsb
xchg
andl
add
mov
popa
imul
add
call
add
push
fsubl
add
test
mov
add
push
push
push
call
mov
add
add
mov
jnp
shrl
popf
arpl
adc
add
pop
mov
fs
in
imul
xchg
push
cltd
insb
add
xlat
movsl
mov
popf
pop
loop
lret
add
add
fldenv
add
jecxz
rolb
mov
add
xchg
lock
mov
fmull
inc
in
lea
push
push
push
call
clc
loope
pop
test
add
jne
add
mov
ret
xchg
add
add
ja
pop
in
arpl
add
xchg
add
xchg
mov
mov
add
stos
add
fwait
add
add
mov
lea
pop
push
push
push
push
push
push
lea
push
push
call
data16
in
add
stos
addr16
add
add
mov
xchg
mov
ror
out
add
into
xor
je
jecxz
add
js
stos
add
add
push
call
push
mov
mov
add
shrl
lret
icebp
iret
add
fsubp
add
test
out
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
rolb
add
add
push
loope
mov
add
xchg
loope
out
add
lds
fcoml
add
stos
arpl
add
add
mov
cmc
pop
add
xchg
and
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
cwtl
add
mov
les
clc
xchg
movsb
popl
cmpsb
jnp
add
mov
add
rolb
add
ret
add
add
add
mov
push
push
rcr
add
jae
add
xchg
popa
test
rolb
aam
bound
pop
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
iret
repnz
cmc
push
movb
add
xchg
jmp
jae
stos
sahf
add
lock
test
add
nop
pop
add
mov
popa
mov
add
xchg
rcrl
pop
notb
cld
lea
pop
call
push
push
push
push
push
lea
push
push
push
call
call
addl
ret
mov
pop
pop
mov
mov
add
add
add
add
icebp
mov
cmpsl
movsl
xlat
jl
add
push
cmpsb
roll
hlt
call
add
jns
js
mov
lods
jne
js
mov
scas
fiaddl
mov
lea
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
movsl
arpl
add
pop
mov
add
fildl
sti
mov
add
cli
jne
add
into
mov
pushf
push
add
xchg
add
popf
repnz
rolb
add
add
push
add
out
lds
lods
cld
mov
sub
imul
add
push
push
call
adcb
mov
js
add
jno
add
fistl
add
add
loope
jb
add
add
add
jle
add
out
movsb
add
add
jb
mov
xchg
mov
jmp
pop
test
add
push
insb
add
mov
add
fmull
inc
in
push
push
lea
push
lea
push
push
call
add
add
add
pop
add
cmpsb
add
push
into
xchg
xchg
out
xchg
fsub
mov
add
shrl
repnz
mov
mul
mov
mov
cmc
nop
add
cld
lret
mov
aad
nop
in
mov
add
add
testb
add
pop
mov
add
push
push
lea
push
push
lea
push
call
lock
cmc
add
bound
add
rolb
add
icebp
add
lea
jle
add
add
add
lea
add
les
fs
add
mov
lahf
aad
mov
cmc
jle
into
add
push
std
pop
jle
in
loopne
int3
cli
out
xchg
add
in
add
add
add
pop
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
push
mov
loopne
cltd
shll
popa
fwait
xchg
roll
add
fistpll
add
mov
xchg
add
test
mov
shr
xchg
add
add
sti
les
add
fwait
jp
jp
fcmovb
jae
mov
lea
pop
add
push
push
push
call
add
std
gs
add
mov
jle
nop
add
add
add
ja
mov
mov
mov
add
int3
nop
roll
fs
fcoms
jmp
mov
aam
mov
add
pusha
or
mov
xor
push
push
dec
push
push
pop
add
not
xor
sub
shr
pop
rol
pop
push
push
push
push
push
push
call
movsl
add
imul
add
arpl
pop
ja
mov
add
add
mov
pop
data16
movsl
add
mov
clc
mov
cli
xchg
add
pop
pop
fsubl
xchg
mov
pop
jle
add
pop
add
xchg
out
add
mov
lea
pop
pushl
call
push
push
push
lea
push
push
push
call
mov
mov
jecxz
add
pop
add
int
std
clc
mov
pop
clc
add
out
add
mov
add
jns
add
add
out
xchg
add
mov
add
sti
add
jmp
call
mov
loopne
add
mov
add
movl
add
hlt
jo
cld
lea
pop
mov
movl
push
push
lea
push
call
add
add
pop
mov
cli
add
add
out
rclb
jp
fidivl
xchg
add
call
push
add
mov
add
xchg
into
call
add
clc
jmp
in
add
fiadds
movsb
add
outsl
add
in
subb
add
nop
add
add
add
mov
lea
pop
lea
push
push
push
push
push
push
push
push
call
pop
clc
fiaddl
add
movsb
out
std
rolb
mov
xchg
movsl
add
mov
jo
xchg
mov
jno
mov
add
add
out
add
jb
gs
xchg
mov
add
mov
add
pop
int
out
fbstp
add
clc
add
add
pop
pushl
pushl
push
push
push
push
push
push
call
mov
add
imul
std
xchg
in
lret
pop
add
out
add
scas
cwtl
data16
add
add
icebp
add
fildl
fsubrp
add
in
push
popf
fdivs
add
push
jne
add
hlt
lea
pop
call
push
push
push
push
call
movsl
fwait
sti
add
pushf
pop
add
xchg
lea
add
add
add
test
fmuls
mov
aam
lahf
add
add
out
fwait
lahf
in
add
mov
lea
pop
pushl
push
push
lea
push
call
add
popa
imul
add
andl
jp
pop
mov
add
add
imul
jbe
arpl
add
loop
shl
add
add
mov
mov
add
clc
add
push
add
add
mov
cld
lea
pop
pushl
push
push
lea
push
push
lea
push
call
ret
add
ljmp
popl
pop
jge
stc
in
jp
mov
mov
in
imul
mov
pop
lret
mov
enter
jp
add
add
add
add
add
xchg
mov
arpl
add
jno
push
add
lahf
bound
jnp
mov
lea
pop
call
push
push
ror
push
sub
add
sub
shr
sub
lea
shr
dec
add
pop
shr
inc
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
loope
add
mov
add
add
out
lock
xchg
in
add
lea
test
rolb
add
movsl
mov
stc
loope
lods
add
add
bound
repnz
int3
mov
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
fwait
mov
add
sti
add
xchg
mov
fwait
mov
fsubl
scas
add
push
insb
std
mov
mov
add
cli
shll
jl
test
add
cld
mov
add
stos
mov
lea
pop
call
push
push
push
ror
push
and
add
rol
shl
add
sub
not
ror
pop
xor
sub
add
rol
pop
push
push
push
push
lea
push
push
lea
push
call
int3
cwtl
fbld
add
ljmp
test
add
add
aad
cmpsl
fadds
cltd
cmpsb
popf
loop
loope
jp
add
xor
leave
add
add
in
shl
lds
add
fildl
test
jmp
sbb
push
push
push
lea
push
push
push
call
faddl
cltd
aam
push
add
add
jbe
jge
test
pusha
add
jl
add
lods
jo
shrb
jp
int3
mov
mov
fiadds
xchg
pusha
lea
add
test
add
pop
push
call
push
push
call
enter
orl
add
push
repnz
add
aam
add
push
sti
fiaddl
add
mov
jle
add
or
clc
push
push
push
lea
push
push
push
lea
push
push
call
add
xchg
frstor
add
add
jmp
sti
lahf
add
mul
test
mov
jno
add
add
rclb
xchg
add
push
jle
jge
lea
push
jge
add
roll
mov
add
jne
jbe
pop
lock
add
push
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
imul
test
jae
fwait
ja
data16
popf
add
pop
mov
add
sti
add
mov
add
aam
shrl
add
int
push
add
aam
bound
add
ret
leave
add
add
aad
fiadds
stc
aad
add
lahf
add
add
pop
mov
add
push
push
call
in
lea
out
add
lods
add
add
push
imul
mov
test
add
add
ja
mov
add
add
movsb
mov
lea
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
rolb
fcoms
mov
add
jns
add
icebp
add
fistps
test
je
cmpl
mov
add
mov
add
add
xchg
add
leave
jns
jnp
stc
fimuls
movsb
mov
fmuls
pop
add
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
add
loopne
fsub
stos
xchg
insb
add
mov
add
jbe
mov
add
add
jae
add
pushf
pop
test
add
imul
mov
clc
popf
jno
add
push
add
mov
pushf
xchg
mov
lea
pop
xor
push
push
push
push
push
push
call
orb
and
add
in
lret
cli
fdecstp
add
ljmp
add
push
jo
cmc
outsl
add
enter
sahf
stos
mov
in
add
mov
clc
testl
xchg
leave
add
iret
enter
cltd
jnp
mov
xchg
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
add
addb
add
add
out
cmpsl
mov
mov
aam
cmpsb
add
add
pop
fldl
mov
cwtl
pop
fcmovb
mov
jle
xchg
push
repnz
mov
cli
add
data16
outsl
jmp
add
out
xlat
add
add
pop
add
add
fmul
mov
add
mov
lea
pop
add
push
lea
push
push
call
scas
xchg
push
xchg
test
add
add
nop
add
popl
xchg
cltd
out
enter
lock
add
cmc
insb
add
in
mov
mov
mov
add
addl
pop
cmpb
mov
fbstp
add
pushf
xchg
lods
add
flds
incb
add
icebp
aam
mov
lea
pop
push
push
push
push
push
push
call
fdivl
mov
mov
add
add
mov
cmpb
cld
add
call
lea
rol
add
add
add
add
push
mov
mov
add
xchg
add
add
scas
testb
mov
mov
push
add
adc
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
popf
std
mov
jo
xchg
cmpsl
add
add
push
xchg
jns
add
add
int3
push
add
je
testl
add
push
js
add
mov
pop
cmc
mov
gs
les
in
add
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
call
int3
lea
fs
cli
cld
add
add
pop
std
add
addl
jne
add
mov
jne
in
add
add
lret
add
pushf
mov
add
in
push
push
lret
lock
xchg
mov
add
scas
push
scas
sti
add
pop
add
insb
lret
mov
add
mov
lea
pop
add
push
push
push
push
call
add
jl
shll
cmpsb
xor
add
add
add
push
js
faddp
add
add
mov
jge
addl
pushf
enter
mov
jnp
add
cli
cld
add
add
lcall
add
mov
add
add
mov
hlt
lea
pop
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
in
imul
int
add
aam
fcomi
add
mov
fwait
outsl
fnstsw
jae
xchg
testb
add
add
imul
add
add
jmp
jmp
lods
mov
push
fwait
rcl
jae
testl
add
jnp
add
mov
lea
pop
mov
xor
push
push
push
push
push
push
push
call
add
add
fucom
fadds
test
xchg
jb
jns
add
add
add
jp
mov
add
add
add
add
add
add
xchg
add
cmpsl
add
movsb
add
fs
add
add
iret
xchg
pushf
ljmp
add
mov
add
mov
clc
stos
xchg
push
add
xchg
in
mov
sbb
push
push
push
push
push
call
add
in
scas
add
rol
add
imul
xchg
std
add
push
mov
add
gs
cli
sahf
cmp
jne
add
add
pop
xchg
testl
hlt
add
fcoml
add
leave
add
mov
add
pop
lock
mov
add
pop
flds
add
add
outsl
push
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
push
call
add
push
test
add
roll
add
jbe
mov
in
into
fcmovnu
jne
mov
cmc
lock
cld
add
rcrb
add
add
jo
sahf
sahf
mov
push
push
scas
add
add
in
add
cmpsl
add
test
add
add
rcl
jle
cmpsb
jbe
nop
rolb
add
popf
pop
mov
lea
pop
sub
push
push
push
push
push
push
push
push
call
add
add
fildl
div
movb
fcoms
jbe
add
out
out
xchg
jns
add
add
add
add
mov
add
cwtl
add
pop
pop
push
push
lea
push
lea
push
push
call
addl
aad
in
pop
pusha
test
add
add
pusha
jno
cwtl
add
add
push
xchg
add
popf
add
add
loop
xchg
mov
mov
lea
pop
rep
pop
push
push
call
add
jbe
add
iret
mov
mov
jge
test
push
add
add
add
divb
pop
imul
add
int
enter
jmp
add
push
add
add
jns
je
add
add
pusha
xchg
add
js
mov
add
fcoml
mov
lea
pop
mov
push
push
lea
push
call
in
add
jmp
add
add
data16
pop
jne
add
add
pusha
int3
in
pusha
xchg
add
and
popl
add
shl
mov
add
add
jne
ffree
push
mov
add
les
pop
in
push
push
call
rcl
imul
mov
mov
add
lods
pop
add
add
cmc
js
add
test
add
add
pop
jnp
add
in
add
call
mov
lea
pop
add
add
push
push
push
push
push
push
push
lea
push
push
push
call
mov
testl
add
add
mov
add
add
mov
add
add
add
je
lahf
addr16
mov
add
add
lret
add
add
fildl
incb
add
in
add
hlt
lea
pop
mov
push
push
push
lea
push
lea
push
call
add
test
fwait
movsb
clc
xchg
jns
lret
add
imul
mov
hlt
shrb
add
subb
cli
filds
ficomps
flds
cmc
add
add
aam
bound
pop
xor
push
push
lea
push
push
push
push
push
push
push
push
call
mov
in
add
add
add
call
pop
subb
shr
loop
out
mov
lret
movsb
xchg
add
add
test
arpl
mov
mov
ljmp
add
add
imul
add
clc
cltd
jp
stc
jecxz
mov
mov
lea
pop
add
push
lea
push
push
call
add
les
adc
add
mov
xchg
addl
add
add
add
into
mov
in
add
mov
addr16
ret
add
mov
pop
mov
push
push
push
lea
push
push
push
call
xchg
jo
push
xchg
movsl
pop
out
xchg
icebp
mov
add
jecxz
ja
movsb
ja
add
loop
add
stos
mov
add
jp
jno
bound
jb
add
popf
push
scas
pop
mov
add
push
sti
mov
int3
lea
pop
xor
push
lea
push
push
push
push
call
loop
jmp
fwait
jmp
add
lahf
out
movb
add
add
add
pop
aad
mov
mov
imul
lcall
into
add
cltd
add
add
std
ret
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
lret
mov
imul
fnsave
test
addb
in
pop
add
pop
add
add
fdivr
pop
add
sahf
add
pop
push
mov
add
jne
arpl
mov
data16
in
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
loop
out
loop
enter
nop
in
cld
add
repnz
mov
mov
fldenv
in
ror
in
cmc
into
add
popa
add
ljmp
insb
test
cwtl
mov
mov
movb
rcrl
int3
lea
pop
xor
push
lea
push
push
push
push
push
push
call
pop
pop
cli
fiadds
add
loop
lret
stos
in
pop
pop
popa
add
call
cwtl
pop
jae
add
lock
add
add
popf
fnop
add
add
aad
push
scas
sbbb
xchg
clc
clc
xchg
add
add
in
add
add
mov
lea
pop
add
push
push
call
add
add
push
mov
add
repnz
cmpsb
in
filds
sahf
fldl
je
leave
add
mov
mov
loope
mov
add
shll
mov
push
add
jl
add
je
add
cwtl
add
lahf
sahf
popf
mov
test
xchg
aam
add
add
add
imul
rcll
cli
add
push
lea
push
push
lea
push
call
push
fiaddl
shll
xchg
int
mov
add
jle
test
xchg
add
nop
cltd
lea
adcl
add
icebp
fldenv
lea
pop
mov
push
push
lea
ror
push
sub
add
sub
sub
add
add
sub
lea
pop
rol
pop
push
push
lea
push
push
call
xchg
test
mov
add
out
add
add
mov
add
repnz
test
push
scas
add
call
add
add
je
sahf
mov
popa
adc
jne
call
push
push
push
push
push
call
insb
add
jmp
rolb
add
scas
jns
popf
cwtl
enter
nop
lods
add
add
hlt
add
movsl
imul
add
bound
movl
xchg
pop
shlb
add
mov
addl
addr16
mov
mov
lea
pop
push
push
push
ror
rol
sub
push
sub
add
dec
shr
add
sub
rol
pop
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
jbe
rolb
add
jp
pop
add
cwtl
xorb
scas
jmp
bound
mov
out
add
add
mov
mov
xchg
jmp
test
incb
bound
rcrb
mov
cmpl
std
push
push
in
add
int3
mov
lea
pop
push
push
sub
dec
pop
push
call
push
push
push
lea
push
push
push
push
push
call
add
add
movb
fiadds
cltd
add
pusha
mov
test
addr16
xchg
cmpsb
test
lret
cmpsw
xchg
add
add
add
add
icebp
add
add
add
add
ffreep
add
mov
lea
pop
mov
push
inc
pop
push
push
shl
shl
pop
push
mov
push
rol
ror
dec
pop
add
push
pop
add
add
push
lea
push
push
call
pop
xchg
rcrb
leave
xchg
out
imul
imul
add
add
add
add
clc
cli
jb
add
add
les
clc
out
mov
loop
iret
mov
mov
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
fucomip
or
pop
push
cli
add
gs
add
add
je
add
add
leave
hlt
add
add
add
lahf
repnz
add
add
in
iret
mov
jb
pop
xchg
add
xchg
add
add
jbe
add
add
test
popa
add
jno
add
add
fs
mov
add
clc
add
add
mov
lea
pop
add
push
lea
pop
push
push
sub
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
out
fildl
add
add
add
lahf
add
pop
cmpsl
ljmp
add
xchg
xchg
out
add
mov
cwtl
add
imul
add
add
fucomp
add
xchg
addb
out
lahf
cltd
push
add
repnz
fisubrl
mov
pop
add
icebp
fldl
add
add
xchg
add
pop
xor
push
push
push
push
push
lea
push
call
cltd
addl
mov
add
lret
add
outsl
leave
add
outsl
cwtl
fldl
add
mov
je
mov
fnstsw
cltd
cmpsb
pop
lret
cmpsl
mov
lock
mov
cmc
jb
jbe
mov
xlat
test
sbb
les
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
add
add
into
scas
test
test
mov
add
std
add
xchg
mov
add
xchg
add
mov
add
add
add
cltd
data16
add
xchg
add
add
int3
add
add
mov
sub
lock
push
push
push
push
call
add
add
and
add
jns
add
pop
add
rcl
movsb
xchg
loopne
add
movb
cli
cwtl
add
ficoml
push
add
xchg
insb
add
mov
mov
gs
mov
in
pop
add
push
add
mov
add
add
pop
faddp
gs
cmc
mov
arpl
lcall
aam
bound
pop
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
jp
add
popf
mov
push
add
add
add
jl
fidivrl
mov
jb
cmc
add
andl
mov
stos
add
add
add
add
addl
cld
xchg
lret
into
add
push
add
test
mov
imul
xchg
les
add
add
scas
cmpl
mov
lea
pop
mov
push
push
lea
push
push
push
push
call
add
add
imul
loopne
mov
adcb
push
cltd
imul
add
loop
out
add
add
testb
out
ret
jmp
add
movsb
in
add
add
add
add
movb
add
xchg
enter
pop
push
push
add
add
push
mov
popa
adc
xor
push
push
call
add
lret
insb
stos
add
add
add
add
outsl
imul
add
push
add
mov
add
scas
mov
insb
rol
add
movsb
add
add
add
xchg
xlat
add
add
add
add
push
sahf
stc
add
or
les
pop
rep
push
add
shl
pop
mov
xor
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
add
jp
add
fldl
add
add
add
add
add
add
add
ret
jmp
add
call
xchg
jl
fsubs
add
aam
bound
or
je
push
push
call
add
add
add
pusha
mov
push
cmpsb
push
add
jmp
add
add
add
xchg
test
add
data16
cmc
cmpsb
fimuls
pushf
mov
xchg
in
je
test
add
add
popf
addb
add
insb
add
movsl
in
clc
add
add
lea
pop
add
push
cmc
mov
lea
pop
mov
xor
push
push
push
call
add
jecxz
pop
xchg
add
aam
mov
add
push
popl
xchg
add
jo
xchg
add
pop
in
mov
add
add
stos
add
into
push
lea
lahf
add
add
jns
jp
fcoms
push
push
mov
lea
pop
mov
xor
push
push
push
push
call
pushf
add
insb
out
pop
add
jge
push
xlat
add
mov
add
add
les
lea
cmc
jo
fcmovnb
addr16
lret
out
add
lea
rcrb
add
test
mov
fs
add
push
mov
add
add
add
pop
add
push
rol
pop
add
push
push
call
pop
add
mov
add
mov
cmc
xchg
flds
mov
mov
aam
add
mov
faddl
test
js
js
lret
add
pop
mov
mov
lea
pop
push
push
push
push
push
push
push
push
call
xchg
popf
jbe
lahf
stos
add
mov
clc
add
in
add
insb
mov
add
add
mov
jnp
stc
mov
mov
stc
add
pop
add
add
add
stos
add
int
ja
aam
cld
lea
pop
mov
xor
push
shr
add
pop
add
push
xor
add
add
pop
pop
push
push
call
int3
add
add
add
arpl
add
add
jl
jcxz
add
cwtl
mov
add
je
add
testb
add
outsl
add
add
add
lock
cmpsb
sarb
call
lahf
add
add
subb
add
add
mov
lea
pop
rep
push
push
lea
push
lea
push
call
add
push
add
icebp
add
mov
in
add
xchg
add
add
lds
add
mov
add
add
std
jl
add
add
xchg
cmpb
push
popf
jecxz
pop
push
add
mov
xchg
aam
mov
fwait
into
xchg
mov
mov
add
into
add
lea
pop
mov
xor
push
push
push
push
call
popa
add
cmpsl
in
add
leave
add
popa
jmp
add
add
mov
mov
add
add
popf
add
subb
call
mov
mov
data16
lret
movb
mov
lea
pop
or
je
push
add
add
sub
pop
mov
push
xor
pop
add
push
lea
rol
inc
pop
add
rep
push
xor
shr
pop
pop
push
push
lea
push
xor
add
inc
add
sub
sub
shr
shl
pop
xor
add
pop
push
inc
lea
ror
pop
pop
push
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
add
cld
cli
je
movsl
lock
xchg
mov
add
ficompl
mov
and
cmpb
add
addr16
add
add
mov
lea
pop
mov
push
sub
rol
pop
mov
jmp
push
lea
push
push
push
call
add
scas
add
std
aad
out
add
jl
pop
add
mov
les
push
jb
test
sarb
xchg
int3
add
jae
imul
pop
jmp
sti
shll
add
cld
add
add
add
jno
les
mov
push
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
fisubrl
add
add
mov
add
push
lea
mov
add
jne
add
push
ja
fadds
add
pop
add
add
addl
xchg
pop
add
sbbb
in
imul
add
insb
mov
in
add
insb
push
jl
cwtl
push
push
add
pop
add
ror
push
std
mov
add
add
loop
mov
lea
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
insb
scas
add
mov
in
mov
add
add
pushf
test
sti
add
call
push
jns
add
jle
add
add
add
int3
add
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
scas
add
add
add
repnz
in
ljmp
fsubl
mov
add
add
add
add
jns
push
jne
add
xlat
add
int3
add
incb
mov
lea
pop
push
push
rol
dec
dec
pop
mov
push
ror
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
add
in
add
push
popf
repnz
pop
cmpl
shrl
add
add
xchg
stos
add
add
push
mov
jmp
xlat
fwait
add
nop
add
iret
add
cmpsb
popl
add
add
push
ja
lahf
sbbb
xchg
mov
mov
lea
pop
pop
push
pop
pop
push
push
push
push
push
push
push
push
call
data16
add
cmpl
push
shr
xchg
add
add
cltd
sahf
ret
stos
pop
clc
out
mov
fs
add
add
fidivl
lock
pop
testl
inc
into
rcrb
push
push
call
rolb
add
pop
pop
roll
out
fadds
test
cltd
add
std
jbe
cmpsl
jns
addl
add
lret
test
push
add
add
jge
add
stos
jecxz
pop
loopne
push
add
add
shll
mov
lea
pop
leave
push
push
push
push
lea
push
push
call
out
stc
lods
cmc
xchg
loope
push
rolb
add
add
xchg
add
add
std
shrb
add
add
add
add
fiadds
add
jp
mov
lea
pop
ret
push
push
call
add
fsubp
mov
fnstsw
cltd
or
test
or
sahf
movsb
xchg
add
add
scas
add
jbe
pop
mov
insb
testb
add
add
add
repnz
add
mov
mov
lea
pop
push
push
xor
shr
pop
mov
push
push
call
xchg
jo
repnz
int3
cltd
repnz
add
add
movb
addr16
xchg
push
add
pop
push
sbbb
jnp
add
js
in
pop
addl
subb
test
add
ret
mov
jmp
popl
xchg
add
push
add
cwtl
stc
cmpsb
insb
mov
lea
pop
add
push
push
push
call
add
mov
add
mov
add
addb
add
les
enter
pushf
bound
std
add
out
add
xchg
mov
jno
mull
cmc
add
add
add
mov
jge
xchg
xchg
roll
push
jmp
add
scas
add
lods
add
jo
add
icebp
mov
lea
pop
push
push
push
shr
pop
push
push
sub
pop
push
push
not
add
inc
pop
movl
push
lea
push
push
lea
push
push
lea
push
push
call
cwtl
add
add
mov
js
rol
out
add
xchg
add
idiv
add
sahf
pop
add
aad
add
test
add
clc
mov
add
stc
cmpsb
icebp
add
add
pop
ret
ret
add
int
add
mov
loopne
testl
ja
in
add
int3
lea
pop
addl
push
not
add
pop
test
je
mov
push
add
ror
dec
pop
pop
pop
push
shr
pop
pop
push
ror
dec
pop
pop
push
add
add
pop
leave
push
sub
xor
pop
ret
push
pop
push
mov
push
ror
add
lea
pop
add
push
pop
push
push
push
push
push
lea
push
push
push
push
push
call
jae
push
add
hlt
shlb
push
jae
add
faddl
pop
add
fwait
mov
add
js
int
mov
test
add
pop
push
push
sub
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
pop
into
add
add
add
add
add
add
test
add
add
icebp
rclb
push
gs
add
add
fidivs
cmpsl
xchg
cmpsl
mov
stos
stos
arpl
les
popf
add
mov
sti
add
mov
js
add
mulb
mov
lea
pop
push
testl
push
push
push
push
push
push
push
push
call
stos
call
sti
rolb
add
mov
add
add
add
add
imul
add
mov
mov
push
add
mov
add
nop
add
mov
scas
test
add
pop
addl
push
lea
inc
pop
push
push
pop
call
push
shl
sub
pop
mov
push
push
push
lea
push
push
push
call
loopne
pop
rorl
push
fwait
add
add
add
repnz
add
mov
out
mov
lcall
add
je
add
scas
bound
add
add
pop
pushl
push
push
push
call
in
lret
add
push
mov
push
add
cltd
add
add
lock
add
into
mov
xchg
popl
add
imul
clc
add
lcall
add
add
add
lret
mov
lea
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
in
and
jle
add
testl
pop
movsb
mov
aad
add
popf
pop
js
jb
jne
add
mov
out
mov
sahf
cltd
iret
imul
jp
mov
sahf
add
add
addl
mov
lea
pop
push
call
push
lea
push
lea
push
push
call
cmc
add
add
cmpsb
add
mov
add
aam
test
fdivl
xlat
imul
icebp
add
jae
jns
mov
add
fwait
int
lcall
les
mul
repnz
xchg
add
add
add
sahf
push
cmpsb
add
pop
cmpl
jne
pop
push
inc
xor
pop
pop
push
inc
ror
pop
pop
push
lea
push
push
push
call
push
and
add
scas
addb
mov
popf
stos
push
add
insb
add
fbstp
add
hlt
enter
je
add
add
enter
add
sti
lock
add
adc
push
add
pop
leave
ret
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
ret
ret
jl
add
andb
incb
lods
add
in
in
leave
cltd
aad
xchg
mov
jle
xchg
add
cld
ljmp
add
std
mov
add
push
mov
ljmp
add
imul
add
xchg
add
popf
ja
cmc
fbld
add
add
lea
pop
push
push
push
lea
push
push
call
mov
stc
add
add
mov
add
add
jbe
lcall
test
jns
lods
and
add
add
pop
mov
mov
jmp
fdivrs
js
mov
add
pop
sti
loope
enter
xchg
add
add
pop
mov
push
rol
pop
add
push
push
call
cmc
jge
add
outsl
mov
add
xlat
aad
sti
ljmp
add
movsb
imul
add
arpl
jge
mov
mov
scas
pop
imul
add
add
add
add
bound
pop
push
push
not
pop
push
push
push
push
push
push
push
call
jmp
in
fcmove
out
mov
jnp
mov
jge
xchg
add
mov
std
add
cld
add
add
jecxz
mov
fxam
jle
add
add
out
lods
add
lea
pop
push
push
sub
pop
push
push
sub
add
pop
movl
push
push
shl
pop
call
push
push
push
push
call
stos
stos
mov
gs
mov
add
fcompl
cmpsl
bound
add
mov
push
mov
movsb
add
stc
gs
fcmovbe
add
sahf
add
add
add
add
mov
xchg
scas
repnz
fs
scas
add
pop
push
call
push
ror
shl
pop
subl
cmpl
jne
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
gs
push
add
lret
xchg
add
add
jle
test
jno
add
dec
push
mov
add
add
mov
shll
add
je
call
add
and
pop
push
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
ljmp
pop
push
add
loope
add
xchg
clc
test
mov
lcall
add
roll
add
add
mov
loop
mov
les
push
push
push
push
push
lea
push
push
lea
push
push
call
add
arpl
add
jmp
add
fiaddl
add
add
xchg
frstpm(287
add
add
test
jae
aam
jns
sahf
add
addb
loopne
xchg
add
add
aam
jecxz
add
jecxz
mov
jnp
add
into
mov
jno
cmpsb
fisubrl
mov
lea
pop
leave
ret
push
ror
pop
push
push
push
push
call
add
hlt
add
add
int
mov
jae
ljmp
add
jp
add
scas
push
mov
icebp
movsl
test
add
out
jmp
pop
add
loopne
add
je
push
lcall
les
in
icebp
mov
lea
pop
mov
add
push
lea
rol
inc
shr
pop
push
push
shr
not
ror
pop
push
push
push
push
push
push
lea
push
call
add
add
ljmp
mov
les
add
out
add
push
lret
add
pop
idivb
add
ja
rclb
add
data16
mov
xchg
pop
jae
add
add
add
loop
add
xchg
pop
lock
add
movsb
add
pop
push
push
lea
push
push
call
lea
xchg
cwtl
int3
test
mov
lods
jo
jle
out
add
jmp
mov
addl
in
add
add
add
add
out
mov
add
pop
mov
mov
add
pop
push
push
push
push
lea
push
push
call
add
add
lea
or
add
add
insb
sahf
xchg
scas
add
pop
push
add
mov
ficomps
imul
push
test
add
push
jno
add
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
bound
out
jp
filds
bound
add
pop
jp
xchg
xlat
repnz
sti
push
jnp
test
add
lods
ljmp
xlat
pop
add
add
movsl
rolb
pop
popa
mov
stos
lret
add
add
lock
add
clc
mov
pop
pop
add
loopne
add
mov
add
cld
lea
pop
lea
push
xor
shl
shl
pop
sub
push
inc
ror
sub
pop
mov
push
add
shr
ror
pop
shr
add
push
push
lea
push
push
push
call
add
add
jl
pop
leave
add
jp
add
faddl
push
mov
add
add
add
std
testl
add
add
xchg
movsl
add
lcall
loopne
add
jl
jbe
push
add
jnp
add
add
jecxz
frstor
add
mov
lret
iret
jae
add
add
lcall
lea
pop
mov
push
lea
sub
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
call
filds
add
filds
jno
into
add
add
add
lret
push
lret
add
popa
fisttpl
mov
loopne
rclb
add
add
std
add
mov
pusha
add
add
pop
add
push
lea
push
push
push
push
push
lea
push
call
out
add
fiadds
xchg
xchg
cli
mov
add
lret
add
mov
add
add
clc
add
stos
add
xchg
jo
xlat
cmpsb
xlat
add
mov
cld
add
xchg
jae
enter
lea
pop
mov
push
push
push
push
push
push
push
call
fs
add
add
mov
in
add
iret
shlb
popa
xlat
pop
mov
hlt
mov
lock
add
in
fiaddl
add
add
mov
mov
mov
jp
std
shr
mov
lea
pop
mov
push
push
push
lea
push
call
xlat
mov
add
push
cmc
add
popf
cmpsl
lds
add
movsb
jmp
cltd
add
call
add
ljmp
add
in
cld
les
in
pop
flds
in
lds
iret
mov
ljmp
popa
lock
add
mov
jne
int3
lea
pop
cmp
jne
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
sahf
mov
fwait
jno
test
movb
fwait
cmpsl
rorl
cmc
add
xchg
jnp
out
pop
add
xchg
add
imul
add
testb
add
mov
add
xlat
add
int3
lea
pop
cmp
jne
mov
push
ror
add
dec
pop
movl
push
sub
pop
jmp
mov
push
push
call
add
loop
pop
add
add
ror
mov
push
fadds
add
add
outsl
movsl
jno
add
cwtl
jmp
popa
push
add
push
push
loopne
stos
mov
lea
pop
mov
push
rol
pop
sub
jne
push
shr
dec
rol
inc
pop
mov
movl
push
lea
pop
jmp
mov
push
lea
push
push
push
push
push
push
call
mov
lods
in
ret
lahf
push
imul
xchg
xchg
add
sahf
jb
add
negl
mov
mov
xlat
mov
mov
jne
add
add
sub
mov
lea
pop
mov
push
inc
pop
cmp
jne
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
imul
pop
pushf
pusha
add
add
aad
mov
add
popf
pop
xchg
pusha
add
mov
scas
add
test
add
into
add
push
pop
add
sub
pop
mov
add
jbe
pop
add
jae
add
add
add
add
movsb
add
rcrl
sbbb
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
mov
pop
loope
lahf
mov
ficoml
fs
sti
add
movl
add
push
add
add
mov
add
jo
roll
testl
addb
mov
add
lds
fmull
add
add
add
jecxz
shl
not
rol
pop
jmp
push
push
call
sarb
mov
add
add
add
add
cld
add
push
push
std
rcll
add
test
add
push
mov
mov
in
fadds
mov
sti
pop
add
je
add
call
leave
add
add
jecxz
les
mov
add
add
add
loopne
xchg
mov
jmp
add
jp
lds
cld
lea
pop
mov
cmpw
jne
push
dec
pop
mov
movl
push
lea
push
push
call
add
add
add
pop
add
sti
add
add
add
add
ficoms
mov
mov
add
add
stos
lock
enter
roll
pop
add
push
add
add
add
divb
lods
mov
gs
jmp
add
loop
push
add
into
arpl
add
icebp
mov
lea
pop
jmp
push
ror
pop
pushl
pop
push
sub
add
pop
mov
push
push
push
call
lahf
fiadds
out
in
add
xchg
jmp
add
int
out
mov
add
add
cwtl
lcallw
out
add
lea
add
iret
test
add
shl
mov
popf
add
aad
push
add
out
pushf
fistps
add
ja
popf
add
mov
add
mov
lea
pop
mov
push
ror
shr
pop
mov
push
push
xor
push
or
not
add
xor
not
sub
rol
dec
pop
sub
pop
push
xor
lea
xor
pop
push
push
rol
dec
sub
pop
call
cmpl
je
push
push
shr
shl
shl
push
push
pop
add
sub
add
xor
sub
inc
dec
add
pop
dec
add
pop
push
shr
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
mov
lcall
mov
add
pop
ficoml
mov
lds
jae
add
mov
mov
loopne
add
add
add
add
test
add
loope
mov
add
mov
add
pushf
add
pop
call
push
push
push
push
push
push
lea
push
call
add
mov
add
add
add
shr
add
pushf
xchg
add
add
mov
add
xchg
pusha
push
filds
add
xchg
add
fildll
add
mov
add
cmc
clc
jb
lods
add
add
add
in
add
fwait
cmpsl
mov
sbb
cmpl
je
push
push
not
push
and
add
not
shr
sub
sub
inc
shr
shl
pop
shr
pop
push
lea
push
push
lea
push
lea
push
push
push
push
call
xchg
mov
pop
add
les
jae
popa
push
test
ja
add
cltd
int
pop
add
add
add
add
lds
pusha
and
push
push
push
push
push
push
push
lea
push
push
call
out
fists
add
ljmp
jnp
add
cmpsl
add
scas
add
mov
nop
add
add
filds
jo
in
out
lahf
iret
add
pop
call
push
push
push
call
lahf
add
icebp
add
jae
xchg
xchg
scas
loope
add
mov
sti
add
push
add
mov
jle
add
mov
testb
add
add
imul
pusha
cwtl
add
les
js
int3
fldz
ret
and
adc
inc
inc
push
and
add
add
sub
rol
rol
pop
add
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
jb
je
xchg
stos
add
add
rclb
mov
movl
pop
add
gs
repnz
add
loope
out
nop
add
add
cmpsl
popl
add
cwtl
mov
call
faddl
add
std
rolb
add
in
add
add
data16
add
jae
jne
cmpsb
mov
lea
pop
push
call
push
inc
ror
pop
cmpl
je
push
push
add
shr
add
push
sub
add
sub
rol
pop
ror
pop
push
rol
dec
sub
pop
push
call
push
push
push
push
push
push
push
push
call
flds
add
jmp
add
add
pop
repnz
jne
mov
fldl
add
add
in
lds
add
std
les
popl
int
add
add
js
add
add
jmp
add
xchg
xchg
in
add
loop
jo
les
cmp
rol
je
push
push
sub
push
sub
add
dec
add
sub
ror
pop
inc
shl
sub
sub
pop
push
sub
rol
inc
xor
pop
push
call
push
push
push
push
push
push
push
push
call
add
popf
mov
js
add
add
orl
add
lods
jmp
jbe
jo
push
fadds
mov
mov
stos
add
add
lods
fwait
add
shll
xor
xchg
out
andb
add
jge
icebp
jl
jmp
mov
lea
pop
cmpl
je
push
push
dec
push
and
add
sub
sub
ror
rol
sub
pop
not
rol
lea
pop
push
rol
rol
lea
pop
push
call
push
sub
pop
cmpl
je
push
push
lea
push
and
add
dec
sub
shr
lea
sub
shl
not
inc
pop
not
sub
sub
pop
push
dec
pop
push
push
push
push
call
movsb
loop
out
pop
add
add
jmp
in
add
in
scas
cli
clc
add
add
jns
add
add
pop
add
insb
add
mov
faddl
pop
add
add
add
xchg
leave
jo
shr
add
jge
in
add
add
mov
mov
bound
call
cmpl
je
push
push
not
push
sub
add
rol
lea
shl
sub
ror
dec
sub
pop
add
sub
ror
pop
push
add
lea
sub
pop
push
call
push
push
lea
push
push
lea
push
lea
push
push
call
add
xchg
add
jne
add
lahf
add
add
stos
aad
icebp
mov
jns
adcb
add
mov
test
lret
in
outsl
mov
pop
mov
rolb
in
mov
fnstsw
lea
pop
cmpl
je
push
push
shr
push
push
pop
add
sub
shl
sub
xor
add
shr
pop
pop
push
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
stos
add
add
insb
addl
movsl
add
mov
add
lret
cmpsl
mov
add
fiadds
std
cmpsl
fcomps
add
outsl
sbbl
pop
add
cmc
int3
add
pop
mov
lea
pop
call
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
add
addr16
lret
add
add
lock
push
add
add
fldt
data16
jge
cmpsl
push
int
addb
add
add
cli
add
xchg
push
pop
mov
rcrb
mov
add
add
add
iret
test
add
mov
add
lea
pop
cmpl
je
push
push
lea
not
push
or
inc
add
inc
sub
lea
ror
dec
pop
inc
sub
lea
pop
push
shr
ror
pop
push
push
dec
sub
pop
call
cmpl
je
push
push
ror
shl
push
xor
add
add
sub
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
flds
add
mov
scas
add
in
test
pop
clc
add
pop
add
popa
mov
add
add
stc
mov
add
mov
add
jle
xlat
lcall
jae
add
std
add
in
stos
mov
scas
add
cmpsl
add
rolb
bound
sub
call
push
rol
add
pop
cmpl
je
push
push
not
push
push
pop
add
sub
sub
pop
shl
add
pop
push
pop
push
call
push
lea
push
lea
push
lea
push
call
loop
jno
add
push
subb
aad
add
add
add
fdivrs
pop
into
loop
test
addl
fiadds
push
jbe
pusha
jmp
ljmp
pop
sti
add
loopne
addb
fadds
add
add
lods
fwait
mov
pushf
lcall
fwait
out
mov
scas
add
add
adc
js
xor
pop
ret
xchg
add
push
sub
shr
pop
mov
push
sub
shr
inc
pop
movl
push
push
push
push
call
add
mov
into
stc
mov
cmpsl
je
mov
xchg
add
push
fdivl
add
loop
add
stos
jns
add
in
add
jp
add
add
jbe
movsl
add
call
add
pop
jmp
push
sub
sub
pop
xor
push
push
push
push
push
push
push
push
call
fimuls
shr
push
add
add
pushf
mov
je
ret
clc
add
mov
add
in
add
add
mov
add
add
shrb
add
in
cwtl
sahf
add
stos
imulb
add
add
add
jge
divl
add
popa
pop
mov
lea
pop
pop
pop
push
ror
not
lea
pop
pop
push
dec
lea
pop
pop
leave
push
push
lea
push
push
lea
push
push
push
lea
push
call
imul
cltd
mov
mov
add
cwtl
lds
movsl
add
add
mul
cltd
add
add
add
xchg
mov
cmc
mov
out
add
stc
fldl
add
not
add
mov
lahf
rcl
add
mov
xchg
stos
add
mov
lea
pop
ret
push
push
push
lea
push
call
jb
cmc
add
cmpb
add
pop
add
mov
std
out
push
add
mov
add
outsl
data16
add
cwtl
push
jge
add
jmp
js
add
pop
jno
mov
cwtl
add
add
call
add
fwait
lods
sahf
add
sarb
mov
outsl
lock
ljmp
mov
push
shr
shr
ror
pop
add
push
sub
pop
cmpl
jne
push
push
sub
add
shr
push
and
add
sub
sub
dec
sub
shr
pop
inc
shl
sub
pop
push
lea
push
push
push
call
add
add
add
add
mov
add
add
add
mov
scas
mov
in
test
mov
add
mov
pusha
lock
ja
icebp
xchg
jp
lret
jb
enter
pushf
add
ja
add
mov
lea
pop
pushl
push
lea
push
call
mov
add
add
add
cmpsl
add
mov
add
lcall
lods
add
mov
stos
add
mov
ja
test
add
add
add
lea
cltd
add
out
mov
add
add
pop
call
push
push
push
push
lea
push
push
lea
push
call
loop
pop
add
add
jl
fiadds
addb
pushf
lret
rolb
jbe
add
mov
add
add
xorl
jbe
out
mov
imul
add
out
add
stc
add
mov
stos
add
add
je
cmpsl
push
add
add
add
addl
imul
mov
les
add
out
jno
cld
neg
mov
lea
pop
push
push
pop
call
push
sub
not
pop
jmp
cmpl
je
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
pop
cmc
add
push
jb
cmc
mov
cmc
add
and
add
jnp
push
cli
mov
ljmp
add
xlat
xchg
outsl
jns
cwtl
iret
jo
add
add
ja
add
mov
call
add
add
mov
add
mov
mov
lea
pop
cmpl
jne
push
lea
push
push
push
push
push
call
lret
add
fstps
add
les
testl
xchg
repnz
add
mov
lds
cld
push
in
fwait
nop
add
jnp
add
jo
ja
add
xorl
add
add
add
fstpt
jmp
xchg
mov
lea
pop
leave
add
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
xlat
icebp
add
in
sahf
add
rcrl
insb
add
test
add
in
jo
outsl
movsb
mov
add
icebp
push
add
in
je
hlt
lea
pop
pop
pop
push
add
not
ror
pop
pop
push
lea
push
push
push
push
push
push
call
je
jl
fdivl
test
imul
xchg
jbe
add
add
ljmp
imul
lds
outsl
pop
leave
add
add
add
lods
mov
mov
mov
imul
movsl
add
mov
lea
pop
pop
push
pop
leave
push
not
ror
sub
pop
add
push
add
sub
pop
ret
push
add
pop
jmp
push
inc
lea
pop
cmpl
jne
push
push
sub
push
push
pop
add
dec
sub
ror
dec
xor
pop
xor
ror
shl
pop
push
shr
rol
pop
pushl
push
push
push
push
push
call
pop
add
out
out
pop
mov
cmpsl
scas
add
add
add
mov
fidivrl
stc
mov
ja
cmpsl
jne
push
popl
pop
aad
movsl
bound
scas
add
hlt
add
shlb
arpl
imul
jle
add
push
push
push
lea
push
call
jmp
add
mov
add
add
push
add
add
push
jp
in
outsl
xlat
cltd
scas
movsb
xchg
push
sti
pop
add
add
add
mov
add
test
je
mov
mov
out
add
popa
add
rcll
add
add
out
add
in
mov
lea
pop
push
push
lea
xor
pop
call
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
lods
mulb
xchg
in
lods
add
add
xchg
aad
add
into
mov
aam
add
vpshlb
add
in
jae
xchg
add
push
movsb
out
add
xchg
scas
iret
add
push
out
test
add
push
jmp
add
add
movsb
pop
mov
lea
pop
jmp
push
push
push
push
push
push
push
push
call
add
fbld
lock
imul
out
pop
jmp
add
add
jl
add
jne
mov
push
loope
cli
fadd
jb
aad
mov
jle
add
add
add
movsl
out
add
fcoms
add
add
popa
xchg
popa
add
mov
lret
add
test
add
mov
fidivrs
and
jge
add
test
sbb
add
fadds
fistps
add
add
push
push
push
push
lea
push
lea
push
call
add
mov
roll
add
mov
mov
jp
push
add
push
scas
mov
cmpsl
les
add
add
aad
loop
add
pop
mov
push
sub
add
shl
inc
pop
push
push
push
lea
rol
push
or
not
add
sub
xor
shr
sub
sub
add
pop
pop
push
xor
inc
shl
pop
pushl
push
push
push
push
push
call
loopne
rcll
lcall
repnz
call
add
cmc
xorl
cmpsb
pop
out
imul
mov
add
nop
add
insb
mov
add
ljmp
add
mov
mov
in
pop
out
push
add
add
movb
add
jle
orl
call
push
push
sub
add
add
lea
push
xor
add
lea
shr
sub
lea
rol
not
pop
inc
add
pop
push
lea
push
push
push
push
push
push
call
add
mov
mov
scas
repnz
add
lret
add
add
out
add
add
add
les
add
stos
add
push
add
add
xchg
push
arpl
add
incb
add
callw
sarl
in
cmpsl
int
sahf
mov
mov
out
add
outsl
add
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
xchg
shl
cmpsl
cli
mov
stc
add
rolb
fldl
add
pusha
pop
pop
add
add
mov
out
xorb
jno
add
nop
add
mov
je
add
aad
mov
loope
fmull
insb
sub
add
shrb
push
popf
mov
rol
push
xor
add
lea
sub
rol
sub
pop
rol
pop
push
inc
lea
pop
pushl
push
dec
shr
ror
inc
pop
call
push
push
push
push
push
push
push
push
call
add
add
mov
add
mov
movsl
fistps
testl
add
lods
mov
leave
mov
xchg
add
add
leave
add
pushf
call
fs
popa
shll
mov
les
stc
add
add
movl
test
add
and
shrb
or
push
rol
shl
add
push
xor
add
shr
ror
sub
not
pop
sub
sub
ror
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
jb
add
add
mov
add
add
add
add
add
sar
mov
pop
divb
add
add
add
out
imul
mov
insb
pop
test
test
add
add
ljmp
add
add
add
xchg
jo
popf
loope
int3
lea
pop
pushl
call
push
shl
pop
call
push
push
add
push
and
add
shl
add
sub
xor
inc
sub
pop
add
add
pop
push
lea
sub
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
call
push
lock
lahf
add
loopne
add
test
add
fnsave
push
xchg
shl
xchg
xchg
mov
hlt
rcrb
movsb
fiadds
add
loop
jp
lds
pop
add
lock
add
scas
lds
mov
add
add
into
outsl
add
cmpsb
xchg
popa
loop
add
mov
add
add
jb
stc
add
popf
push
lods
pushf
add
add
mov
lea
pop
call
push
push
xor
shl
add
push
or
not
add
shl
sub
shl
pop
lea
inc
rol
pop
push
xor
ror
pop
pushl
push
push
push
push
call
add
jmp
add
push
rol
movl
and
add
int3
data16
mov
jle
clc
add
scas
jae
mov
ret
xchg
ljmp
mov
loopne
call
repnz
mov
add
adc
pop
daa
add
push
xor
inc
pop
call
call
push
push
shl
push
push
pop
add
sub
shr
shl
add
sub
shr
rol
pop
shr
add
add
pop
push
inc
inc
pop
pushl
call
push
push
push
push
lea
push
call
lcall
call
hlt
lcall
add
repnz
add
add
out
jno
jp
lahf
fadds
cmpsb
lea
stc
jecxz
cltd
cli
fldl
shlb
popf
pop
mov
lock
add
mov
jp
add
add
in
pop
test
lea
pop
lea
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jne
add
je
fxam
cli
add
add
bound
popf
add
out
subb
mov
jge
xchg
add
mov
mull
add
movb
scas
mov
cwtl
add
stos
cmpsb
add
push
mov
and
call
push
push
xor
sub
push
push
pop
add
xor
add
sub
shl
shl
rol
xor
pop
sub
shr
shr
shr
pop
push
not
ror
lea
rol
pop
pushl
push
xor
not
ror
pop
call
call
push
push
add
add
sub
rol
push
or
inc
add
shr
not
inc
sub
not
add
dec
dec
pop
shl
pop
push
add
pop
pushl
call
push
xor
not
pop
call
push
push
rol
not
dec
push
or
not
add
dec
xor
shl
add
sub
rol
pop
add
shr
pop
push
inc
sub
shr
pop
pushl
call
push
push
push
push
call
loop
push
add
jge
jae
add
add
stos
cmpsb
add
rolb
outsl
in
fsts
mov
sti
rcrl
add
call
add
adc
rclb
hlt
xor
pop
lea
push
push
xor
inc
push
xor
add
dec
sub
xor
ror
sub
pop
inc
sub
pop
push
ror
pop
pushl
push
push
push
push
push
push
push
call
mov
add
add
push
fnstsw
test
add
addb
mov
aam
loopne
jnp
rolb
cwtl
add
add
int3
add
movsb
lea
test
mov
add
add
loope
mov
arpl
add
test
jns
xchg
imul
add
add
mov
roll
fldl
cmpb
lods
mov
lea
pop
call
push
push
sub
sub
pop
call
push
push
dec
inc
xor
push
push
pop
add
shl
sub
sub
add
inc
inc
pop
inc
sub
sub
pop
push
sub
add
shl
xor
pop
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
add
cwtl
shl
add
jge
test
xchg
add
add
xlat
stos
in
call
add
mov
sti
fsub
enter
add
fadds
add
pop
pop
bound
data16
mov
mov
jne
loopne
in
add
add
lahf
add
add
mov
rorl
jb
testl
add
mov
lea
pop
call
push
lea
push
push
call
rcl
mov
pop
add
add
add
add
add
imul
in
out
icebp
add
mov
add
lret
rolb
pop
mull
xchg
scas
add
jb
add
cmp
flds
loop
out
xchg
cmc
hlt
add
hlt
xchg
pop
mov
mov
cmpsl
add
mov
lea
pop
call
push
lea
push
push
push
push
push
push
call
int3
repnz
lods
add
fadds
stos
mov
arpl
pop
push
add
add
add
test
add
add
push
in
scas
add
add
addl
mov
sti
add
add
add
add
mov
lea
pop
mov
push
push
inc
push
xor
add
add
sub
add
sub
sub
lea
pop
shl
pop
push
add
sub
dec
pop
pushl
push
lea
sub
sub
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
cli
add
add
mov
shlb
fisubrs
jo
mov
mov
xor
add
lods
add
jle
xchg
out
addb
cld
cltd
add
add
add
pop
lea
add
add
cld
add
mov
cmc
add
lock
add
mov
add
roll
fmull
add
add
rol
pop
call
push
push
ror
inc
push
sub
add
xor
sub
add
sub
inc
sub
pop
ror
ror
sub
pop
push
push
push
push
push
push
push
push
push
push
call
xchg
js
add
rolb
popf
add
add
out
add
outsl
lds
shr
push
pushf
flds
imul
loopne
in
add
pop
mov
xchg
repnz
add
mov
je
mov
lcall
add
lret
mov
cld
lea
pop
pushl
push
push
push
push
push
push
push
call
add
add
add
enter
add
jge
jecxz
add
add
mov
jecxz
jnp
adcl
xchg
lahf
add
add
popa
lods
push
aam
imull
mov
bound
add
mov
lea
pop
call
push
push
sub
push
or
not
add
add
inc
sub
shr
pop
sub
ror
pop
push
push
ror
xor
push
push
pop
add
rol
sub
not
pop
not
lea
add
pop
push
not
pop
call
push
push
inc
sub
add
push
or
inc
add
not
shr
add
sub
add
dec
shl
shl
pop
sub
lea
sub
ror
pop
push
sub
ror
pop
pushl
push
pop
call
push
pop
mov
lea
push
dec
add
dec
pop
lea
push
push
push
lea
push
push
push
push
push
call
enter
add
fisubs
add
leave
add
add
add
mov
jl
lahf
add
gs
cli
ret
data16
add
add
add
stc
addl
add
loopne
add
std
add
std
ljmp
jnp
add
int3
lea
pop
push
push
ror
pop
push
push
push
push
push
call
add
rclb
test
mov
into
add
mov
push
leave
add
add
push
mov
add
shrl
add
add
les
add
fwait
lea
push
lea
push
lea
push
push
push
push
call
add
flds
add
jb
into
xchg
hlt
clc
leave
add
out
cmpsb
add
add
add
jbe
push
hlt
icebp
push
add
xchg
add
add
add
stos
add
push
mov
jnp
mov
jnp
mov
add
testb
add
add
cld
loop
add
ja
movsb
test
cwtl
mov
movsb
fst
pop
push
push
sub
add
xor
pop
push
push
push
push
push
push
push
push
push
call
ret
mov
test
add
add
xchg
idivb
add
imul
lret
add
call
rcl
popa
add
push
loope
bound
add
add
fwait
jae
add
add
add
fsubr
add
in
addr16
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
movsl
add
mov
in
rorl
add
in
add
add
mov
add
mov
mov
jmp
bound
stos
cld
add
xchg
add
mov
movsb
mov
pop
out
mov
add
test
mov
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
add
add
stos
add
scas
jno
add
mov
add
mov
fdivrp
in
mov
add
cwtl
add
sar
in
loope
aad
mov
add
pop
int3
loope
adcl
add
lea
pop
pushl
push
xor
xor
shl
shl
pop
push
call
push
push
sub
inc
dec
rol
push
sub
add
shr
sub
sub
ror
sub
lea
pop
ror
add
pop
push
add
inc
rol
pop
pushl
call
push
shr
lea
sub
add
pop
call
push
push
push
push
push
lea
push
call
add
lods
jne
mov
aad
add
stos
add
add
pop
push
lock
mov
add
pop
movsl
add
cltd
add
loopne
add
movsl
jp
out
les
add
cmpsl
add
lods
loope
mov
nop
add
add
lret
add
add
repnz
add
sti
add
lea
pop
mov
pop
push
ror
pop
dec
jne
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
shlb
push
add
add
jno
cltd
scas
cmc
add
mov
push
add
xchg
enter
arpl
out
mov
lea
pop
jmp
call
push
push
add
xor
ror
push
push
pop
add
shr
sub
sub
shl
not
shl
pop
rol
dec
pop
push
ror
rol
pop
pushl
push
push
push
lea
push
call
add
add
add
pop
mov
mov
in
mov
cwtl
mov
add
xchg
clc
add
jnp
lods
rol
jmp
call
addr16
add
rolb
shlb
pop
add
mov
add
add
mov
icebp
fwait
lods
xchg
repnz
cwtl
imull
int3
xchg
addb
cmpsb
pop
add
cmc
mov
lea
pop
call
push
push
shl
rol
shr
pop
call
mov
push
sub
ror
pop
lea
push
push
add
add
push
sub
add
sub
inc
sub
sub
ror
pop
rol
rol
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
push
add
jne
add
add
mov
gs
loope
mov
add
in
jo
addl
add
jb
call
out
add
pop
pushl
call
push
rol
ror
pop
push
call
push
push
not
ror
not
not
push
and
add
shl
add
sub
not
add
not
pop
dec
not
shl
lea
pop
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
mov
add
add
xlat
mov
add
rolb
out
jbe
add
push
add
enter
add
add
xchg
add
add
add
add
add
nop
add
mov
mov
add
pop
pushl
push
not
pop
call
push
not
pop
call
push
dec
pop
mov
push
push
lea
push
push
push
push
push
push
call
add
in
in
add
mov
add
cwtl
out
add
out
add
add
test
add
add
add
mov
mov
lods
mov
cmpsl
cld
add
fisttpl
pop
lea
push
push
shl
inc
push
sub
add
add
sub
not
not
ror
pop
add
pop
push
push
lea
push
lea
push
lea
push
call
add
add
add
push
xchg
movsb
mov
imulb
sahf
jns
icebp
filds
out
add
lret
add
lret
mov
xchg
add
mov
cltd
lcall
lea
aam
mov
lea
pop
pushl
push
lea
push
push
lea
push
call
push
add
add
cld
test
push
shr
add
push
add
add
jecxz
movl
mov
add
mov
mov
arpl
pop
call
push
shr
pop
lea
push
push
lea
push
push
call
mov
add
mov
faddl
mov
addb
add
add
stos
jnp
jge
xchg
add
pusha
add
pusha
add
rolb
add
js
push
lcall
add
lea
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
aam
idivl
add
mov
add
add
add
mov
add
shrl
mov
clc
aam
imul
iret
mov
sbbb
jbe
add
push
movsb
jmp
add
add
pop
add
jge
out
jbe
fmull
add
lea
push
call
add
add
push
add
pop
mov
jle
aam
les
add
mov
test
jp
add
add
in
lds
add
mov
pusha
add
jnp
pop
hlt
mov
add
pop
pushl
push
push
add
add
shr
xor
push
push
pop
add
add
dec
sub
sub
sub
dec
pop
sub
dec
inc
pop
push
not
dec
shl
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
jecxz
addl
into
lds
pop
jmp
add
lods
add
add
add
add
add
fmull
shrb
mov
clc
push
or
not
add
not
sub
sub
pop
dec
not
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
addb
sarb
mov
lods
add
mov
mov
ret
test
popa
add
pusha
ja
add
xchg
scas
rolb
add
push
int
add
outsl
mov
sarb
call
add
lea
pop
pushl
call
push
xor
not
pop
push
push
lea
add
xor
pop
call
push
push
ror
add
push
or
inc
add
shl
rol
sub
shr
pop
ror
inc
ror
lea
pop
push
add
rol
rol
pop
pushl
push
lea
shr
sub
pop
call
call
push
add
pop
jmp
pushl
push
add
sub
xor
pop
mov
jmp
push
push
rol
xor
sub
push
push
pop
add
add
sub
rol
lea
pop
not
pop
push
push
call
jp
rolb
incb
add
add
test
rcl
shll
add
mov
add
aad
add
mov
add
jb
ljmp
ljmp
xchg
pop
ret
mov
into
insb
add
bound
pop
pushl
push
sub
shr
add
inc
pop
call
push
push
call
mov
test
repnz
aad
add
mov
movsl
in
sti
outsl
clc
in
mov
outsl
add
add
add
add
ror
into
add
stos
add
fwait
mov
add
fdivl
add
outsl
in
push
jno
add
js
lds
add
ljmp
add
call
fmull
lcall
pop
push
call
push
push
inc
dec
not
push
push
pop
add
sub
sub
rol
not
pop
sub
add
sub
pop
push
xor
not
pop
pushl
push
push
call
add
mov
push
fisubrs
add
add
je
cmc
rolb
mov
jle
push
clc
add
add
add
mov
add
stc
xlat
add
push
add
imul
add
xchg
add
add
roll
add
out
add
shlb
movsl
test
push
add
add
pop
call
push
push
sub
add
pop
call
leave
push
rol
not
rol
sub
pop
add
pop
push
push
lea
push
push
push
push
push
push
call
roll
and
mov
add
add
jbe
test
rcll
push
lahf
add
add
add
addb
add
roll
movb
add
jne
add
add
add
add
add
fwait
xchg
testb
mov
bound
into
xchg
bound
bound
pop
pop
push
rol
lea
lea
dec
pop
pop
pop
push
inc
shr
rol
pop
leave
push
add
pop
add
ret
push
lea
rol
shr
shl
pop
leave
push
lea
rol
pop
ret
push
push
push
push
push
push
push
push
push
push
call
add
add
flds
add
iret
fcmovnu
add
mov
addb
mov
add
add
rorb
test
add
fs
hlt
add
fwait
fs
mov
fiadds
icebp
mov
shl
leave
jnp
xchg
add
mov
pop
xchg
fstpt
mov
mov
lret
ja
lock
out
nop
mov
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
fiaddl
xchg
add
add
add
add
jl
add
add
fnstenv
add
add
push
leave
add
pop
mov
push
push
call
call
add
add
sti
pop
xchg
add
add
lods
stos
add
add
mov
fdivp
iret
mov
add
lods
data16
add
pop
cmpl
jne
mov
push
lea
push
push
push
push
push
push
push
call
js
movsl
rolb
mov
cli
cmpsl
fwait
bnd
xchg
mov
arpl
negl
pushf
icebp
add
add
add
add
les
in
out
mov
lcall
pushf
repnz
ljmp
add
pop
mov
fldl
sbbl
iret
test
mov
pop
add
add
iret
sti
mov
mov
lea
pop
jmp
push
inc
pop
mov
and
push
sub
shr
lea
inc
pop
xor
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
subl
popf
add
std
addb
je
flds
mov
add
add
jno
push
pop
pop
mov
loopne
jl
lock
add
jp
mov
cmpsl
push
xchg
add
add
pop
xor
push
ror
pop
add
push
push
call
mov
pop
add
add
fldl
add
nop
imul
add
xchg
lock
add
add
add
mov
add
pop
popf
in
xchg
mov
fwait
xchg
add
subl
mov
in
xchg
jge
add
mov
mov
leave
add
add
add
fsts
mov
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
push
push
call
add
cli
iret
stos
lods
mov
pop
fldl
add
mov
xchg
add
add
out
mov
mov
add
add
cmpsl
xorl
out
lahf
add
jmp
mov
mov
lea
pop
dec
push
ror
rol
add
pop
sub
push
add
pop
jmp
push
add
pop
sub
push
sub
rol
not
pop
pushl
pop
push
push
push
push
call
test
push
leave
add
in
lea
jmp
lods
mov
add
mov
add
add
pop
fwait
add
add
add
lcall
test
mov
xchg
add
pop
add
insb
add
sbbb
add
jne
add
mov
add
out
decb
pop
sub
cmp
jne
push
xor
pop
mov
push
rol
not
pop
lea
sub
push
xor
inc
shl
inc
pop
mov
shr
push
push
push
push
push
push
push
call
lea
add
rolb
lcall
fiaddl
add
push
aam
add
mov
push
add
addb
add
mov
lds
add
add
movsl
popa
jne
ret
mov
mov
mov
pusha
sbb
add
push
add
dec
pop
sub
push
sub
sub
lea
not
pop
pushl
push
push
call
roll
add
rcr
add
movsl
cmpsb
pop
jmp
add
bound
addl
add
add
xchg
rol
add
add
add
divl
xchg
js
add
jno
test
add
add
add
enter
iret
add
test
add
mov
clc
add
jmp
arpl
add
or
shr
push
sub
shl
pop
and
push
shr
pop
sub
cmp
jne
push
lea
push
push
call
clc
les
add
add
movsl
add
xchg
fbld
mov
add
add
push
popl
imul
jle
cwtl
mov
insb
enter
imul
popa
mov
add
add
pop
leave
ret
push
push
push
push
lea
push
call
filds
add
mov
add
add
aad
pop
add
insb
add
fldt
fiaddl
push
mov
lods
call
add
imul
lods
mov
push
add
pop
push
mov
push
lea
push
push
call
shll
pop
add
addr16
sahf
out
mov
jns
ret
add
cld
movsl
lret
mov
push
lret
add
add
xlat
out
add
bnd
add
mov
add
mov
pop
add
push
sub
pop
push
push
lea
push
push
push
lea
push
call
mov
sarl
in
add
in
add
rcrl
addr16
mov
fadds
add
push
jne
add
iret
add
jmp
add
xchg
add
add
rolb
mov
add
out
pop
testb
bound
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
fwait
add
stos
ret
test
imul
int3
jmp
pop
add
iret
jae
mov
mov
add
rclb
roll
pop
imul
mov
add
movsb
popa
add
popa
add
lea
pop
push
push
push
xor
shl
pop
push
push
push
call
mov
jb
leave
pop
popa
add
xchg
out
jns
movsl
add
add
enter
add
add
mov
add
add
add
mov
mov
mov
add
jae
mov
add
imul
add
sti
outsl
imul
adc
add
mov
mov
mov
lea
pop
mov
push
ror
shr
rol
pop
lea
push
xor
inc
rol
sub
pop
sub
mov
push
lea
pop
shr
push
push
call
mov
add
jno
jae
fisubrl
cli
movsb
pusha
rcll
mov
add
icebp
mov
mov
pusha
add
mov
add
add
add
push
add
stc
pusha
lds
cli
mov
mov
mov
int3
lea
pop
add
mov
push
not
ror
pop
add
mov
push
push
call
add
mov
add
mov
mov
mov
xchg
mov
push
jecxz
add
add
add
jle
cwtl
les
ljmp
mov
add
imul
scas
popf
pop
out
outsl
xchg
push
clc
add
add
add
mov
add
mov
loop
add
mov
mov
lea
pop
add
push
ror
pop
xor
push
add
pop
mov
push
push
push
push
push
call
add
fcmovu
jo
movsb
push
stos
add
in
add
add
imul
push
add
jae
testb
add
add
loopne
jle
mov
stos
xchg
add
add
mov
add
mov
test
pop
and
rol
push
lea
push
push
call
add
roll
add
add
mov
ja
mov
out
add
add
push
add
testl
add
loope
dec
imul
cmpsb
pop
stos
repnz
int
cmpsb
add
add
insb
movsb
int3
jmp
jns
std
out
in
add
mov
add
add
lea
pop
rol
xor
push
lea
push
call
mov
popf
jae
in
add
add
jbe
add
add
mov
jmp
icebp
les
add
jae
add
add
gs
add
fwait
test
push
mov
cmc
icebp
testb
ja
les
add
mov
mov
stos
mov
mov
add
add
popa
add
mov
mov
lea
pop
inc
push
lea
dec
shr
pop
cmpb
jne
push
ror
pop
add
cmp
je
push
lea
push
push
push
push
push
push
push
push
push
call
mov
leave
mov
mov
lret
and
xorb
add
cmpsb
in
fcoms
push
add
mov
in
fildl
mov
add
jle
mov
jnp
frstor
pop
jnp
cltd
gs
gs
movl
cld
pop
add
lcall
add
movb
popa
sub
ret
adc
lea
lea
pop
cmpl
jne
push
shr
sub
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
push
call
pop
add
mov
in
add
fldl
fcoms
shr
iret
add
clc
add
add
mov
fildl
rolb
push
add
add
fsubrl
add
push
pop
add
push
fldl
jecxz
lock
fsubl
addb
roll
mov
movsl
lret
lea
jne
neg
fisttps
pop
pop
push
rol
add
pop
pop
pop
push
sub
shl
pop
pop
pop
push
lea
push
push
call
fistps
in
mov
add
scas
add
insb
jno
in
add
add
add
iret
add
scas
stc
movl
hlt
data16
scas
add
pop
iret
pop
add
arpl
add
add
fcomps
icebp
negb
add
std
shlb
leave
add
jp
loopne
mov
add
add
pop
add
ret
int3
lea
pop
leave
push
push
lea
push
lea
push
call
push
pop
jl
xchg
mov
mov
roll
jno
leave
loope
add
lea
add
pop
xchg
add
jb
add
add
popl
xchg
stos
xchg
jbe
ror
add
test
mov
lea
pop
ret
push
push
push
lea
push
push
push
push
push
lea
push
call
int
fnsave
test
mov
push
add
add
iret
int
add
mov
add
loope
aam
pop
sarl
add
sti
push
xchg
add
outsl
stc
xorb
mov
add
jecxz
add
add
leave
add
and
mov
add
push
rol
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
filds
adc
jno
add
add
popa
jnp
int3
popf
xlat
sbb
mov
aad
outsl
add
add
add
xchg
in
lock
push
add
scas
enter
jno
add
add
add
nop
add
pop
add
mov
push
lea
push
push
lea
push
call
loope
add
arpl
rolb
jne
mov
jl
or
fmuls
add
add
push
jmp
roll
sti
mov
xchg
add
lds
add
add
hlt
pop
add
stc
xchg
roll
add
iret
add
add
outsl
sti
mov
mov
imul
add
aad
aam
mov
adc
cmpl
push
push
push
push
push
push
push
lea
push
call
jge
shr
add
mov
add
add
jae
leave
addr16
loope
add
shlw
popf
add
add
add
bound
ja
xchg
add
pop
pop
push
push
push
push
push
push
push
push
push
push
call
out
fs
add
out
add
sahf
jle
out
add
add
cmc
jl
mov
test
repnz
scas
xchg
mov
add
iret
mov
xchg
push
add
add
add
loope
pop
in
add
add
and
int3
add
cld
lea
pop
pop
mov
push
push
push
lea
push
call
add
xorl
add
xchg
add
add
add
jns
add
push
jmp
leave
add
ror
imul
mov
pop
xchg
lods
push
pop
out
ljmp
mov
in
xchg
fsub
addr16
shlb
add
add
mov
cld
lea
pop
push
call
push
not
ror
lea
pop
xor
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
push
add
add
jns
fiaddl
mov
add
mov
xchg
jno
stc
add
movsb
push
add
in
test
imul
add
add
add
add
add
sub
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
enter
movb
jmp
aad
insb
data16
add
call
movsb
xlat
lea
add
pop
add
add
leave
add
add
jno
stos
add
add
enter
push
mov
cmpsb
jl
jmp
fiadds
lds
add
add
add
add
add
add
outsl
cmpsl
loope
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
call
pop
test
call
loopne
mov
xchg
add
test
jl
push
add
mov
ret
add
add
add
push
in
add
xlat
imul
ffreep
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
xchg
jecxz
xchg
movsb
stc
add
add
cmc
fnstenv
add
insb
sti
out
add
add
add
mov
mov
mov
mov
lea
pop
leave
ret
push
push
push
push
push
push
lea
push
push
push
push
call
loop
jmp
mov
fdivrl
push
mull
xchg
jns
in
add
fmulp
movsl
push
push
add
xchg
add
add
lds
les
add
add
lret
add
mov
mov
add
add
hlt
mov
lea
pop
push
mov
push
lea
push
lea
push
push
call
xlat
push
pop
add
jnp
ret
xchg
mov
testb
pop
mov
push
add
add
fwait
push
addl
fsubr
add
je
cmc
fwait
test
add
fstpl
add
lea
popf
fiaddl
xchg
std
lock
add
adc
hlt
push
ror
shl
pop
push
push
push
push
push
push
push
push
lea
push
call
mov
lods
out
mov
gs
add
xchg
leave
popa
arpl
add
scas
add
xchg
add
push
fwait
push
push
movb
push
test
jbe
add
repnz
into
fwait
mov
add
add
add
mov
mov
add
mov
hlt
cmpsl
add
add
repnz
loope
arpl
xchg
add
mov
add
add
aam
bound
push
push
push
lea
push
call
add
xchg
add
jae
add
bound
pop
add
add
add
add
scas
add
add
jp
add
rolb
imul
pop
scas
int3
popf
add
mov
nop
add
add
int3
pop
je
add
jb
stos
lods
add
add
cmpl
pusha
or
pop
or
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
fwait
jecxz
add
out
add
lock
add
add
add
add
xchg
add
cmc
test
mov
mov
addl
stos
add
jp
add
int3
pop
add
mov
loope
lock
add
cld
lea
pop
pop
push
ror
pop
lea
push
lea
push
push
lea
push
lea
push
call
lret
pop
out
nop
jne
ror
add
mov
push
add
jo
xchg
mov
scas
jle
add
mov
fld1
jge
test
jb
hlt
mov
add
xchg
imul
pop
cmpsl
add
mov
lea
pop
sub
mov
push
push
lea
push
push
push
push
call
movsb
aad
add
rolb
add
pop
test
pusha
sahf
xchg
fldcw
add
aad
loopne
add
add
mov
int
mov
aam
movsb
add
add
mov
stos
scas
mov
movb
push
into
mov
add
mov
add
icebp
jnp
add
lcall
shr
push
push
push
lea
push
lea
push
push
push
call
pusha
imul
pop
xchg
add
add
fptan
add
add
add
add
movb
js
enter
lret
mov
add
add
ja
mov
loopne
add
pop
add
push
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
add
jno
int
loope
popf
mov
lret
add
add
add
push
add
add
lret
lock
jae
add
cmpsb
xchg
jmp
pop
stc
jno
pop
add
add
pop
add
push
sub
pop
pushl
push
sub
inc
pop
popl
push
push
push
lea
push
push
push
lea
push
call
add
jp
push
add
mov
add
jno
add
lds
mov
out
add
add
add
repnz
ffreep
xchg
add
add
addl
int
data16
add
int3
lea
pop
mov
add
push
lea
pop
xor
lea
push
inc
add
not
pop
mov
push
dec
dec
pop
add
push
push
push
push
lea
push
push
call
in
add
add
mov
add
mov
mull
out
xchg
add
in
add
mov
cmpsb
rolb
mov
push
mov
lea
pop
xor
push
lea
pop
rol
push
not
pop
nop
push
lea
push
push
push
push
push
push
call
out
lahf
jge
xchg
hlt
ja
movsl
add
add
lods
rcrb
ficompl
add
add
fildl
test
mov
add
add
mov
std
add
ja
add
lods
mov
add
add
pusha
js
jp
clc
ljmp
push
add
pop
add
not
insb
add
add
pop
nop
push
inc
xor
pop
xor
nop
push
lea
add
sub
rol
pop
nop
push
push
push
push
call
in
mov
add
xchg
pop
add
cli
add
hlt
add
popa
mov
nop
add
add
add
jns
jecxz
mov
pop
mov
mov
add
add
scas
jecxz
jae
into
add
fiadds
rolb
lcall
testb
pushf
or
add
fidivrl
mov
add
add
insb
cli
add
pop
inc
push
push
push
push
push
lea
push
push
push
call
jnp
mov
jmp
test
add
add
add
ja
push
cmpb
xchg
xorb
mov
add
add
add
xchg
add
out
xchg
push
and
jge
fmull
push
add
pop
nop
push
inc
sub
pop
cmpb
jne
push
push
push
push
push
push
push
call
add
add
in
mov
mov
int3
mov
add
std
jmp
push
mov
repnz
lret
jecxz
add
xchg
add
filds
ja
add
add
aad
add
popa
sbb
add
push
push
push
push
push
push
push
call
int
cwtl
mov
add
rolb
mov
xchg
clc
add
lods
add
cltd
je
add
xchg
mov
add
cli
in
add
xchg
add
add
add
add
out
aam
add
push
enter
add
jmp
stos
popf
push
jne
add
add
mov
add
add
sbb
nop
push
add
rol
pop
nop
push
inc
dec
pop
cmp
je
nop
push
pop
nop
push
ror
rol
pop
inc
push
inc
not
not
add
pop
nop
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
scas
add
add
mov
pop
push
jl
pusha
add
loop
mov
andl
add
add
lds
out
jecxz
stc
add
add
je
loop
mov
jmp
mov
add
cmpsb
mov
jo
add
fidivs
mov
in
pop
mov
in
mov
lea
pop
nop
push
shl
sub
add
pop
cmp
jb
xor
push
shr
pop
jmp
mov
push
lea
push
lea
push
lea
push
push
call
rolb
mov
add
lds
pushf
add
cwtl
imul
filds
cmc
add
add
mov
pop
int
add
into
test
xchg
add
lock
add
pusha
adc
add
movzwl
push
inc
lea
shl
pop
mov
push
push
push
call
mov
xchg
pop
imul
loop
cmc
add
data16
jno
ja
add
fcompl
add
loope
rolb
mov
pop
add
rcrb
cld
jl
gs
add
jne
test
add
xchg
rolb
call
test
push
cmpsl
movsl
mov
push
add
mov
lea
pop
add
mov
push
push
lea
push
push
call
pop
add
arpl
rolb
add
add
mov
push
add
add
iret
lock
lds
nop
jne
add
add
test
mov
add
out
mov
mov
fadds
add
add
mov
out
add
xchg
jmp
lcall
lea
pop
xor
push
sub
not
rol
pop
xor
shl
push
pop
xor
shl
push
add
not
pop
xor
push
add
not
pop
shl
push
rol
shr
pop
xor
push
push
push
push
call
add
test
add
fimull
movsl
add
adc
add
fwait
pop
add
fiaddl
rcrl
pusha
jne
add
mov
pop
mov
loop
mov
lea
pop
mov
push
add
sub
pop
add
push
push
push
push
lea
push
push
call
bound
add
add
popf
add
add
mov
push
mov
add
add
push
pop
sti
pop
add
pop
add
add
add
icebp
pushf
pop
scas
add
xchg
add
add
in
add
add
imul
add
into
js
add
add
add
add
lea
pop
pop
pop
push
rol
pop
pop
push
sub
shl
sub
not
pop
pop
push
add
xor
xor
pop
leave
push
rol
pop
ret
push
shr
sub
pop
push
push
shr
add
dec
ror
pop
mov
push
push
push
push
call
add
add
jle
repnz
mov
add
add
jp
outsl
lock
gs
add
add
add
mov
mov
mov
xchg
xchg
pop
jnp
mov
lea
pop
push
push
push
add
pop
push
push
shl
ror
not
pop
push
push
push
push
push
push
push
push
lea
push
call
add
add
mov
lret
pop
add
mov
repnz
pop
add
stos
jl
add
ficompl
add
lock
cmc
into
xchg
xchg
xchg
fadds
out
add
mov
movl
fisubl
lea
pop
mov
push
add
pop
mov
push
shr
pop
mov
push
shr
add
pop
test
je
mov
push
shl
sub
inc
lea
pop
test
je
push
push
lea
push
push
lea
push
push
push
push
push
push
call
in
mov
add
add
add
push
cwtl
add
add
add
ficompl
pusha
mov
add
lret
shl
movsb
add
mov
mov
add
cld
add
mov
lea
pop
mov
push
lea
push
push
push
push
lea
push
call
roll
add
fnsave
cli
add
hlt
rcl
pop
gs
add
add
add
popl
fldl
add
add
loop
roll
lea
pop
mov
push
push
push
push
call
xchg
hlt
xchg
popl
add
xchg
outsl
cld
add
add
stos
stos
into
add
gs
push
add
push
in
push
test
cld
xlat
add
lahf
jge
hlt
add
imul
mov
pop
add
out
pop
out
rolb
add
jb
add
mov
movb
testl
xchg
add
lods
mov
lea
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
add
arpl
add
stos
popf
push
out
ror
movsl
mov
add
sahf
pop
add
mov
push
in
add
jle
add
stos
out
rolb
jo
add
add
aad
jmp
add
ja
add
lea
mov
lea
pop
inc
push
ror
pop
cmp
je
push
push
lea
push
lea
push
push
push
call
js
add
adcl
pop
add
clc
add
mov
div
out
pusha
add
push
add
jo
add
add
add
out
hlt
aad
lods
add
sti
shrl
int3
idiv
jmp
sahf
add
add
pop
test
je
push
ror
add
pop
mov
push
lea
push
push
push
push
call
add
push
mov
movsb
push
jmp
add
add
add
lcall
jno
cltd
xchg
in
jle
add
add
jmp
insb
les
add
add
jbe
add
loopne
pop
xchg
mov
add
stos
mov
in
orb
inc
push
add
sub
pop
cmp
je
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
add
scas
add
pop
int
add
lods
add
add
jmp
add
subl
nop
fsubs
add
add
addb
add
movsl
incb
icebp
loope
iret
add
mov
mov
jbe
cmpsb
stos
in
cli
cld
xchg
fadd
bound
push
movsl
bound
popa
and
test
jne
push
inc
pop
xor
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
scas
add
out
add
icebp
push
add
add
mov
ljmp
add
call
int
add
lock
add
rol
lods
fucomp
std
mov
imul
add
push
push
mov
cli
ret
in
notb
add
pop
pop
push
ror
sub
pop
pop
pop
push
push
lea
push
push
call
add
add
add
sbb
movsb
fsubp
add
outsl
add
xchg
ret
mov
push
cltd
jne
loopne
add
mov
shr
push
add
add
insb
scas
call
scas
add
push
lahf
je
testl
add
addr16
pop
imul
push
add
pop
push
xacquire
add
mov
mov
mov
lea
pop
pop
push
sub
dec
lea
pop
leave
push
push
push
push
push
lea
push
push
push
push
call
mov
jl
add
add
mov
add
roll
add
add
in
lret
add
jnp
add
add
call
add
add
jecxz
in
test
add
add
add
mov
mov
lea
pop
ret
push
push
push
lea
push
push
call
add
add
add
add
add
add
add
pop
pushf
add
sahf
sahf
in
in
mov
fsubrp
add
jmp
cltd
mov
add
push
add
push
mov
xchg
add
xchg
add
push
push
add
pusha
add
leave
add
add
add
add
stc
stc
xchg
mov
in
add
incb
jae
pop
push
rolb
clc
pop
cli
orb
mov
push
push
push
push
push
push
push
call
add
aad
sbbb
add
push
add
mov
mov
add
jns
add
add
add
add
pop
lahf
mov
lea
pop
inc
cmp
jne
push
push
call
add
add
jnp
add
add
movsl
mov
add
add
lock
add
in
xlat
pop
add
add
out
push
flds
add
lcall
add
hlt
test
mov
lea
pop
lea
push
rol
ror
rol
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
clc
mov
in
add
add
pop
xchg
add
add
shll
add
lcall
aam
lea
roll
mov
add
push
mov
add
add
add
add
add
add
lods
add
addb
push
je
add
add
add
add
add
jne
mov
lea
pop
test
je
push
push
push
push
push
push
push
lea
push
push
call
flds
xchg
loopne
nop
lds
sahf
add
add
loopne
add
add
enter
xchg
lds
hlt
pop
push
fcom
xchg
mov
add
movl
mov
cli
in
lret
scas
add
les
stos
insb
add
add
pop
add
aam
outsl
loopne
add
pusha
xchg
xlat
add
add
bound
pop
mov
push
push
push
push
push
push
push
call
add
add
sti
mov
shlb
js
push
movl
add
jne
repnz
mov
lods
mov
add
jbe
stc
rcr
ror
add
mov
add
add
pop
movsl
add
fldl
cltd
pusha
add
lods
add
mov
lea
pop
add
push
xor
xor
pop
cmp
jne
mov
push
lea
push
push
push
push
call
insb
add
lods
int
xchg
rolb
arpl
insb
popf
add
fadds
nop
jne
incb
cmc
mov
aam
sti
call
add
push
xchg
loope
int
push
add
add
add
cltd
fwait
add
add
std
add
mov
add
mov
mov
add
add
push
mov
lea
pop
test
je
mov
push
push
lea
push
lea
push
push
call
mov
fmul
leave
jo
rcr
add
mov
out
add
in
add
add
insb
roll
in
hlt
add
call
mov
add
add
mov
shrb
stos
mov
mov
popa
loope
test
jp
add
add
pop
test
test
ljmp
addr16
add
push
push
push
push
push
call
iret
pop
xchg
mov
lods
add
fbstp
popf
add
popl
add
add
sti
mov
test
mov
data16
int
add
jo
add
xchg
mov
add
add
in
mov
pop
jne
add
jmp
add
pop
cmp
je
push
lea
push
lea
push
push
lea
push
push
call
cmpsb
add
enter
add
xchg
add
hlt
mov
jmp
add
sarl
enter
add
lods
add
pop
cmc
jge
add
imul
add
add
pusha
insb
add
add
mov
push
lret
ret
lea
pop
jmp
push
ror
shr
pop
xor
pop
push
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
jecxz
xorl
add
add
mov
fwait
aad
clc
cmpb
jnp
ja
add
push
and
xchg
fs
xchg
add
out
add
mov
repnz
add
add
add
add
add
add
in
shrb
mov
nop
movl
fmull
push
shr
sub
sub
sub
pop
pop
leave
push
push
call
add
fcoms
movb
les
testl
movsb
add
fcomp
push
addr16
add
jns
add
int3
popa
bound
add
shl
in
mov
mov
lods
addb
add
add
shll
pusha
xchg
into
scas
add
add
add
add
add
iret
mov
add
add
in
pop
add
mov
lea
pop
ret
push
lea
push
push
push
call
mov
push
push
leave
push
xchg
loop
stos
fcomip
add
add
fisubl
add
push
insb
xchg
ret
push
fildl
addl
add
add
lahf
arpl
jbe
add
lahf
filds
mov
add
test
add
les
inc
call
into
in
pop
pop
push
not
pop
pop
push
add
shr
pop
pop
push
xor
pop
pop
leave
push
push
push
push
push
push
call
add
hlt
add
test
add
mov
shlb
jge
filds
test
add
fcomi
push
jmp
add
add
add
add
xchg
add
add
add
cwtl
jge
mov
fadds
mov
lea
pop
ret
mov
push
xor
sub
sub
pop
pop
pop
push
rol
sub
shl
shr
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
int3
add
jmp
add
out
jne
test
mov
scas
mov
cmpsb
int3
pop
iret
mov
pop
in
mov
add
xchg
cmpsb
add
lea
rcrb
add
add
add
enter
jns
add
sbb
ret
test
jae
test
jae
test
jb
mov
fidivs
mov
mov
jae
add
jb
inc
icebp
dec
inc
cltd
or
es
adc
jae
mov
fadds
out
push
leave
dec
ja
sahf
adc
lret
imul
mov
mov
pop
xor
adc
cwtl
xor
jnp
repz
test
add
sbb
cmp
add
inc
mov
hlt
mov
sbb
lahf
imul
xor
sbb
fldl
push
sub
gs
push
popa
pop
sbb
push
push
and
clc
fisubl
fisubrs
inc
enter
dec
cmpxchg
enter
mov
pop
rcrl
enter
xchg
and
shlb
add
lock
jb
es
rorl
xchg
js
cmp
shll
ret
nop
or
mov
push
outsb
cmp
mov
or
popf
pop
scas
mov
mov
cmpsb
xor
jo
mov
mov
and
jnp
leave
xlat
clc
pop
shrb
aam
mov
xchg
pop
push
push
xchg
fdivs
dec
mov
dec
mov
mov
sarb
pop
push
lods
mov
push
fwait
mov
mov
scas
adc
cld
movsl
push
inc
sub
mov
js
call
mov
or
rcll
xchg
push
stos
fisubs
mulb
dec
jne
lods
mov
jg
and
in
jo
cmp
ja
pop
push
dec
es
shlb
rsqrtps
xor
mov
lods
xor
mov
mov
imul
imul
pop
mov
add
push
sbb
add
and
dec
pop
cmc
btr
xor
fwait
mov
inc
adc
cmpsl
mov
jmp
dec
mov
dec
adc
and
mov
push
fsubrl
mov
cld
stc
mov
faddp
in
out
adc
mov
sub
cmp
sub
mov
sbb
add
insb
cwtl
jne
and
imul
cmpsb
ja
cmpb
repnz
jne
xor
sbb
push
addb
push
sub
pop
push
push
push
xor
jl
fsubrp
push
add
dec
shrl
ss
inc
adc
mov
cmp
pop
nop
je
cmp
jo
pop
mov
ficomps
push
pand
outsb
jns
mov
mov
cmp
mov
hlt
aad
fdivl
outsl
out
popf
jb
sub
dec
mov
mulb
cs
jne
out
hlt
mov
popa
push
add
and
mov
daa
loopne
jmp
incl
mov
shlb
jle
mov
repnz
int3
mov
movsl
dec
hlt
loope
or
push
or
adc
clc
into
bound
arpl
push
pushf
loop
jl
mov
in
ret
mov
in
daa
clc
mul
imul
aam
ds
cwtl
push
mov
xor
into
xor
xor
dec
jl
pop
test
lds
and
sarl
outsb
push
dec
addr16
mov
es
mov
dec
pushf
push
in
popa
jge
jnp
test
xor
lcall
xchg
push
mov
xor
ss
iret
out
pop
adc
mov
js
add
push
test
cltd
push
fcomp
addb
rorb
fdivrl
push
test
pop
pop
call
sub
push
pop
ljmp
loope
adc
loop
clc
cmp
adc
fs
fs
subl
mov
loopne
bound
xchg
inc
cwtl
jno
jl
je
dec
inc
mov
or
push
addl
mov
test
pop
mov
dec
mov
add
or
add
shll
ds
mov
ljmp
ret
dec
or
loopne
cmc
sbb
movups
or
mov
mov
int
imul
iret
add
mov
fucom
push
sub
movsb
bnd
in
dec
test
daa
je
mov
mov
adcb
lcall
mov
iret
aas
push
fdiv
xor
ds
pop
pop
dec
fucomip
clc
mov
or
or
les
fmull
loope
hlt
add
fisttps
inc
in
cmpsl
inc
aam
test
inc
sbb
lcall
mov
outsb
jmp
repnz
sarl
repnz
enter
addr16
mov
mov
mov
adc
pop
jg
cmpsb
pop
repnz
sbb
mov
pop
jb
jb
sbb
cmp
lcall
das
repz
dec
xchg
in
fidivs
add
or
scas
xor
aam
jns
and
fxch
out
out
sub
cmp
add
stc
bound
dec
or
push
jns
shrl
cld
insl
sbb
mov
sbb
in
mov
pusha
call
inc
jle
jecxz
rorl
icebp
and
cmp
push
mov
pop
loopne
fwait
pop
lret
loop
push
fs
or
or
jp
out
enter
fwait
pop
arpl
bound
pop
ss
xor
lcall
loope
ljmp
int
mov
or
xor
clc
stc
out
push
divb
and
shlb
mov
inc
inc
pusha
push
cli
jb
pop
arpl
inc
hlt
sti
daa
mov
push
xor
and
pop
dec
mov
xchg
scas
xor
lret
out
callw
fnstsw
dec
pop
jmp
xchg
js
shll
jbe
jle
es
push
mov
add
mov
inc
sti
sbb
cwtl
push
out
scas
adc
mov
pop
sbb
fistpll
sub
popa
mov
fwait
sub
or
sbbb
xchg
xchg
jmp
or
scas
fs
jbe
add
pop
movsb
fwait
outsb
dec
xchg
pushf
adc
andb
imul
xor
insl
dec
push
add
movsl
test
and
loope
inc
sti
in
lods
mov
in
cltd
push
iret
icebp
lock
cmpsl
mov
aad
mov
pop
push
movsl
sub
add
push
mov
push
xor
enter
outsb
jb
adc
pop
ret
test
leave
sub
mov
or
push
in
and
sbb
test
enter
fldl
jae
pop
dec
sub
popa
test
jae
or
mov
mov
pop
xor
cmp
fistpll
cmpsl
xchg
add
lock
jne
iret
push
addb
cmpb
cmp
ret
mov
add
sbb
mov
iret
dec
rorl
jecxz
pop
sbb
pop
testb
add
mov
lret
xor
and
sahf
movsb
jno
jg
mov
leave
les
mov
sub
add
push
aas
pop
stos
jb
xor
dec
lahf
fisubrl
aad
fcompl
sar
rcll
frstor
pop
mov
sub
mov
inc
js
mov
cmp
rcrl
clc
inc
imul
sub
xchg
inc
roll
test
mov
inc
mov
fnstenv
sub
push
xchg
sub
test
jnp
mov
push
cld
out
test
mov
inc
cmc
adcl
outsb
out
mov
jne
sub
cld
xchg
in
or
pop
sub
or
test
add
mov
mov
lret
push
mov
jp
pop
push
or
dec
add
jbe
xchg
push
adc
push
inc
and
xchg
repnz
xchg
cmc
add
test
push
jg
movsl
iret
pop
sub
push
lcall
add
mov
hlt
cs
jmp
rolb
movb
fcmovnbe
hlt
pop
adc
add
pop
outsl
and
enter
push
cmpsl
cwtl
test
jp
inc
cmpsb
lods
adc
das
cmpl
adc
push
out
mov
jmp
jg
nop
inc
sub
mov
in
adc
fcmovne
dec
jecxz
leave
dec
loope
xchg
in
mov
dec
std
mov
adc
push
mov
pop
decb
enter
lods
jmp
push
jb
xor
sub
or
adcl
cmp
cmp
or
in
sbb
adc
inc
xorb
inc
mov
iret
jle
aad
jp
aaa
pop
sahf
add
xchg
mov
in
jecxz
sub
xchg
sbb
lods
xor
out
imul
jecxz
dec
int3
dec
push
bound
cmp
and
imul
sub
adc
mov
add
mov
mov
lods
lahf
push
mov
mov
lods
cmp
push
push
mov
jmp
or
pusha
jne
mov
dec
movsl
outsb
hlt
xchg
test
pop
lock
loope
lcall
rorl
and
xchg
fiadds
pop
stos
and
or
cmpsb
xor
dec
aad
adc
push
fwait
cmp
jle
xchg
xchg
movsl
mov
mov
or
popa
test
adc
xchg
subb
dec
and
ss
sub
sub
iret
test
test
mov
xor
leave
inc
push
loop
adc
shlb
push
or
pop
dec
mov
sbb
in
sbb
dec
xor
mov
mov
push
xor
fadds
aas
mov
or
mov
in
xor
jl
aam
fstps
test
arpl
jae
pop
pop
outsb
or
sahf
inc
mov
and
pop
in
xor
je
jae
mov
jae
or
dec
fwait
repz
arpl
dec
fistpll
cltd
push
lods
arpl
mov
subl
mov
push
adc
mov
ss
mov
xor
pop
lahf
jb
loop
sbb
imul
sub
sub
sbbb
cmp
mov
and
lods
scas
shr
je
scas
in
sub
cmp
sahf
sub
inc
cmp
push
pop
xchg
inc
movsl
leave
dec
or
sbb
jecxz
inc
jge
pop
cmp
and
mov
jg
call
and
data16
test
adc
into
stc
dec
jns
cld
fldl
arpl
xchg
shrl
jmp
push
lods
test
roll
out
cwtl
fnstcw
add
add
fnsave
jecxz
add
dec
mov
loopne
add
seto
cs
fwait
notb
adc
push
xor
popa
cmp
mov
jb
adc
sbb
adcl
xor
roll
mov
fwait
in
js
leave
xlat
dec
int3
mov
mov
lods
and
mov
cmp
lods
push
mov
or
into
mov
pop
inc
push
sti
pop
push
pop
jl
loopne
lock
lods
mov
ret
aam
push
stos
shrb
clc
decl
push
and
je
mov
adcb
add
stos
sub
mov
int3
pop
mov
pop
lea
push
sarb
mov
jle
mov
test
pop
push
push
out
fnsave
dec
enter
cmp
sbb
jp
stos
pusha
rclb
repz
inc
jnp
arpl
out
adc
orl
loopne
xor
cltd
fsubrs
lcall
sbb
xlat
scas
inc
rcrb
addr16
mov
jbe
jo
fmull
imul
daa
adc
popf
in
insl
pop
frndint
shlb
std
xor
das
ret
scas
je
mov
stos
xor
std
push
ret
popf
aad
sahf
inc
lods
rcll
sub
mov
xor
out
pop
imul
jecxz
mov
push
bound
std
or
mov
jae
out
stc
pop
addr16
push
add
mov
adc
lahf
leave
mov
sbb
les
test
mov
fisubrs
xor
mov
imul
lret
inc
dec
jmp
rcrl
xchg
shr
les
rcll
sbb
mov
rcll
sbb
add
fstpt
and
sbb
mov
sbb
scas
dec
adc
lret
push
jecxz
scas
jmp
fildll
pop
pusha
push
cmc
push
int3
fwait
push
rorb
xor
add
repz
mov
mov
ja
xor
int3
movsl
lods
mov
add
jl
cmp
ret
ja
or
mov
shll
jns
call
xchg
cltd
test
mov
or
shll
sub
add
pop
in
out
xchg
jp
sbb
jmp
icebp
sbb
adc
and
add
inc
mov
lahf
add
mov
mov
pop
cs
pop
cmp
sub
mov
aad
ficomps
in
call
push
jge
xor
mov
adc
pop
in
fmuls
or
xor
into
dec
fistl
xchg
lret
add
cld
mov
jmp
mov
out
sbb
imul
sbb
stos
and
js
pop
lahf
xor
mov
clc
pop
ja
sbb
enter
mov
imul
dec
out
movsb
sub
mov
ret
mov
mov
mov
das
aam
test
xor
mov
adc
mov
in
cmp
dec
scas
xchg
movsb
roll
lods
mov
or
shl
mov
daa
not
add
imul
imul
and
push
jle
mov
movsl
jp
lea
mov
dec
or
out
aaa
in
cmp
shrl
xchg
lahf
push
cwtl
xchg
imul
dec
fsts
in
aam
sub
inc
lea
enter
pop
mov
shlb
inc
jnp
popa
adc
push
push
push
or
mov
dec
mov
flds
inc
iret
jns
lahf
loopne
scas
loope
js
cmp
add
adc
dec
fbstp
sbb
fbstp
pop
dec
popf
test
lret
xchg
loopne
std
cmc
or
aam
enter
push
pop
jl
je
push
mov
inc
shr
add
adc
add
dec
sarl
test
mov
inc
popa
lret
jmp
outsl
xchg
addl
js
cmp
jmp
add
repnz
lds
hlt
xor
dec
adc
jmp
mov
and
sub
or
hlt
inc
or
add
adc
out
es
sbb
ret
movsl
popf
cmp
clc
insl
inc
cwtl
cmp
je
cmp
cmp
push
stos
jge
pop
xchg
fldcw
mov
xchg
push
loop
push
mov
push
or
and
jnp
stos
dec
sbb
test
pop
cmp
adc
arpl
insl
jg
loop
add
or
cmpsl
add
and
sbb
repz
in
inc
pop
mov
mov
mov
repz
mov
aaa
jge
mov
sub
pop
cmp
je
int3
fdivrl
add
push
test
enter
rol
push
bound
xchg
cli
rcll
xchg
cmp
sbb
and
hlt
lock
out
lahf
cld
cmpsl
dec
xor
test
gs
mov
pcmpgtw
sbb
xchg
ja
xchg
sbb
rolb
and
mov
adc
aad
jae
jmp
add
notb
add
and
sti
dec
aam
or
jp
xor
xchg
jl
cwtl
pushf
pop
mov
roll
mov
arpl
lahf
add
scas
xchg
sub
or
push
jp
pop
xor
notl
stc
add
aad
pop
dec
mov
push
or
loopne
push
sbb
ret
mov
sub
cltd
jne
out
xchg
in
lods
dec
decl
xor
test
cmp
push
and
sbb
jno
aam
cmpsl
mov
movsl
popf
fidivl
mov
test
jl
xor
sbb
int
ds
push
aam
ja
int3
cmc
jb
std
cmp
pop
addb
add
cs
lcall
mov
adc
pop
sbb
xchg
pushf
addl
mov
cli
push
or
in
cld
pop
dec
xchg
sbb
cmp
push
out
jnp
inc
loope
cmpb
loop
add
cmp
jno
xchg
jp
aaa
sti
loope
xchg
xchg
fimull
imul
mov
xchg
inc
fs
repnz
adc
push
jmp
inc
faddl
test
incl
mov
or
push
pop
popf
mov
rorb
insl
adc
pop
mov
pop
loop
aaa
hlt
fsubrl
pop
cld
scas
inc
es
dec
mov
xor
in
jmp
mov
mov
and
cmp
popa
bound
inc
rcrl
mov
jns
and
push
xor
add
loop
mov
mov
stos
clc
xor
mov
push
mov
clc
les
push
repz
mov
arpl
sub
xchg
and
push
mov
jmp
clc
stos
jae
lock
fcoml
or
icebp
addr16
dec
bound
outsl
mov
lea
popf
out
push
pop
xor
mov
in
mov
mov
enter
testl
pop
pop
js
dec
add
dec
insl
adc
fs
add
push
les
in
mov
cs
ds
stos
xor
imul
inc
or
mov
ss
jne
loope
sub
adc
sahf
sub
scas
nop
cmp
sub
jns
add
lahf
xchg
xor
cmp
push
or
fcompl
add
push
inc
in
mov
cld
push
or
and
sarl
pop
mov
lahf
mov
js
aam
sub
cmp
fs
ja
aaa
rol
dec
mov
mov
pop
loope
and
jbe
test
mov
sbb
in
mov
pop
mov
icebp
push
mul
or
adc
pop
xchg
cmp
andl
pop
jb
mov
icebp
jbe
push
and
cltd
test
or
es
pop
int3
xchg
inc
mov
testb
add
inc
adc
adc
xchg
lahf
push
in
addr16
xchg
mov
push
repz
imul
xchg
loop
mov
mov
pop
add
xor
jnp
xchg
call
loop
jge
xchg
divb
idivb
decl
aaa
cmp
push
and
push
and
sahf
subl
fidivl
js
inc
pop
sbb
and
sbb
mov
das
mov
push
mov
int
jns
out
or
jns
int
ffreep
nop
idivl
add
push
scas
xchg
cld
cmp
push
je
and
stos
xor
shl
mov
stos
sahf
insb
sub
xchg
jne
ss
iret
rcr
icebp
adc
push
aad
mov
cmc
push
cmp
cld
pop
jae
int3
push
iret
xlat
cmp
dec
jge
jge
add
xchg
testb
mov
mov
in
xor
push
insl
jg
hlt
imul
inc
insl
stc
cld
imul
or
fadds
fwait
cld
pop
cwtl
lock
sub
fdivrl
gs
mov
push
and
out
adc
frstor
adc
test
mov
mov
rclb
push
push
xchg
addr16
cmp
add
xor
xchg
inc
fstps
fwait
lahf
sub
push
aam
dec
mov
mov
adc
cltd
xor
jp
lahf
fbstp
out
jns
mov
call
std
add
sbb
rcrl
xchg
push
xchg
sbb
mov
push
mov
ljmp
inc
mov
shr
mov
mov
sbb
movsb
scas
and
fistpll
sbb
in
pop
mov
mov
or
jmp
enter
nop
jecxz
mov
sbb
mov
jnp
pop
scas
mov
movsl
pop
pushf
in
shll
mov
push
pop
push
pop
mov
int
repz
sub
out
in
add
popa
pop
roll
or
xchg
ret
outsb
loop
jle
fcoml
lahf
cmp
pop
clc
incb
js
jo
add
mov
jecxz
mov
mov
cmp
aas
and
stos
jno
and
and
test
lods
enter
in
sub
jnp
test
xchg
pop
push
xchg
addr16
jbe
cmpl
push
add
push
sub
ror
xchg
xchg
and
push
pop
stos
lds
jno
shll
xchg
cltd
cld
adc
daa
scas
insl
mov
or
cld
cmp
pop
scas
jp
xchg
pop
int
mov
mov
sbbl
mov
daa
jmp
pop
inc
cmp
and
vcvtdq2pd
cmp
jnp
inc
push
jmp
adcb
inc
cltd
fwait
lahf
adc
mov
mov
iret
imul
imul
xor
hlt
push
idivl
scas
into
ja
lahf
stc
test
notl
arpl
mov
out
xor
stos
or
loope
xlat
mov
ret
in
ret
inc
ljmp
or
data16
lret
lods
xor
aas
dec
dec
dec
scas
mov
out
movsb
test
ja
mov
cmpsl
jecxz
inc
lret
ja
loopne
mov
out
sahf
xchg
int
or
mov
jecxz
jne
pop
js
into
mov
inc
loop
lods
std
sub
das
fs
xor
dec
jne
es
and
xor
repnz
inc
popf
lods
jb
scas
push
or
mov
inc
jle
gs
pop
inc
addl
mov
pop
outsb
mov
leave
xchg
or
mov
mov
xchg
or
sub
mov
pop
sub
aaa
jl
fadds
or
test
stc
mov
fnstenv
cmp
pop
mov
push
and
jnp
inc
dec
outsb
ja
leave
outsl
xchg
sub
fdivrs
clc
sub
call
add
lahf
push
daa
insl
out
xor
mov
test
mov
adc
xlat
mov
or
push
push
and
cltd
xor
push
xchg
jl
mov
dec
add
dec
xchg
sub
stc
je
subb
incl
ds
cmp
mov
test
mov
xchg
jbe
inc
xchg
ja
aas
mov
mov
dec
mov
iret
push
das
xor
out
sbb
sub
pop
lcall
clc
cmp
testb
pusha
jmp
aas
mov
sbb
push
das
gs
ftst
and
stos
hlt
lcall
mov
and
dec
pushl
aam
push
inc
mov
dec
insl
jno
jo
cmpsl
test
inc
jo
mov
call
mov
or
popf
ljmp
scas
sbb
aam
xor
sbb
sub
pop
rcrb
dec
fsub
nop
xchg
repnz
sub
sub
mov
dec
push
pushl
mov
mov
sub
push
aam
loope
out
loopne
insb
into
sub
pop
sub
cmp
adc
cmp
cmp
cmpsb
out
faddl
insb
mov
mov
mov
out
repz
pop
jg
jmp
and
sbb
out
aad
lea
ret
jns
neg
fucomi
sbb
push
xor
mov
mov
push
pop
test
scas
loopne
and
jno
rclb
inc
mov
jp
test
sub
lcall
iret
jne,pn
push
rorl
inc
xchg
inc
pop
ja
es
lahf
push
fwait
inc
xor
sbb
inc
add
inc
incl
jns
xchg
sub
test
xor
cmpsb
ficoms
adc
out
sti
in
shl
vmread
out
xchg
lret
loop
repz
jmp
sub
inc
push
xchg
cli
enter
push
adc
fimull
mov
jae
cli
xchg
mov
xlat
or
pushf
out
add
push
or
mov
in
imul
rcll
js
test
dec
and
cmp
push
movsb
fildll
lock
pusha
loopne
xchg
lods
mov
mov
pop
add
jb
jp
xchg
bound
jp
in
cmpsb
imul
pop
rol
xor
sbb
cltd
test
lock
cmpsb
mov
or
gs
ja
in
loopne
test
jmp
pop
pop
push
adc
push
nop
fistl
jo
icebp
daa
sub
and
mov
test
cmp
std
mov
popa
xor
cmp
shr
pop
das
imul
outsb
xchg
sbb
int3
mov
sub
ja
pop
aam
and
cmpl
xor
jo
add
xchg
xchg
sbb
ds
jg
mov
dec
loop
adc
popf
iret
inc
pushf
xor
and
add
jecxz
add
mov
cmpsl
js
xchg
repz
pop
add
mov
js
sti
mov
mulb
arpl
cmp
rcrb
xchg
aam
push
sbbb
pop
mov
mov
movsb
ja
cwtl
add
outsb
nop
xor
jp
mov
jp
hlt
cltd
cmp
out
addr16
movsb
shl
sbb
xchg
stos
sbb
lret
pop
ja
jae
fs
les
pop
in
dec
adc
push
call
lock
lret
push
or
xor
xlat
mull
cmp
cwtl
int
mov
and
and
clc
mov
dec
mov
pop
inc
rcll
mov
fwait
loopne
jle
pop
sub
mov
test
jge
pop
push
divb
xchg
lods
push
mov
mov
popl
inc
dec
push
imul
xor
dec
push
jg
push
cmpsb
cld
and
lahf
popa
shlb
pusha
sbb
leave
js
cmpb
jns
add
push
mov
dec
stos
dec
loop
cmp
inc
int
jecxz
shrl
mov
daa
mov
stc
fnsave
ss
xor
or
out
pop
and
popf
les
xor
frstor
mov
adc
roll
add
outsb
cmp
rcrl
movsl
test
stos
push
mov
sub
xchg
inc
das
in
call
xor
push
sub
add
mov
add
mov
add
push
mov
add
ja
mov
repnz
or
dec
mov
pushf
divl
push
xchg
out
nop
jg
mov
xor
in
sbb
aas
xchg
jl
pop
xlat
dec
inc
push
jb
mov
in
push
lods
jle
sub
shlb
test
jmp
stos
shl
mov
out
xchg
scas
or
cld
jp
mov
push
jbe
loop
bound
mov
mov
pushf
jle
ret
xor
outsb
scas
adc
jnp
pop
outsb
push
jns
mov
xchg
and
adc
push
pop
nop
insl
mov
xchg
lcall
dec
jle
mov
into
adc
lret
fidivl
mov
popa
jmp
pop
xor
mov
mov
pusha
mov
insb
mov
rol
mov
lds
xor
xchg
cmpsb
stos
loope
andl
sub
addr16
and
stc
jle
and
push
add
mov
add
loope
ss
inc
shl
inc
sbb
mov
xchg
lret
loopne
sub
cltd
js
shlb
out
mov
lods
cltd
inc
or
adc
sub
movsb
std
push
cltd
gs
jmp
aam
mov
mov
mov
sbb
rclb
mov
dec
sub
lcall
xchg
popf
cmpsl
je
mov
add
movsl
sub
jno
ja
mov
jns
jl
jno
mov
incb
push
xchg
loopne
roll
cmp
clc
arpl
daa
cmpsb
dec
sbb
sbb
dec
inc
repnz
pop
sub
addl
mov
bound
repnz
movsl
fmull
out
fstpl
push
mov
jb
cs
jb
and
sub
add
daa
popf
in
js
push
lods
aas
sbb
ret
stc
pop
sbb
jp
into
add
mov
xchg
add
and
iret
test
jp
or
daa
scas
jmp
sbb
outsl
xor
push
aas
popa
push
lods
adc
out
xchg
push
ss
test
test
dec
notl
ds
dec
jl
fldenv
loopne
sarb
push
cwtl
push
inc
pop
fnstcw
push
call
fsubp
fists
fidivl
push
idiv
data16
fdivr
popf
fbld
dec
sub
jnp
int3
daa
cmp
jb
push
mov
test
mov
stos
leave
pop
sub
test
push
mov
out
pop
lea
call
fwait
cmp
mov
and
shl
test
adc
out
imul
cli
mov
mov
rcll
dec
rclb
rcrl
aam
icebp
add
std
leave
lret
loope
lret
rclb
fisttpl
dec
outsb
shll
dec
dec
cmc
fldenv
xor
adc
in
in
jnp
nop
ret
int
sarl
out
dec
in
das
aaa
dec
lret
aas
fbld
stc
pop
and
out
mov
sbb
xor
out
cmp
xorl
rorb
mov
movsb
mov
fld
xlat
loop
push
dec
addr16
stos
dec
sub
sahf
daa
je
lret
call
aas
push
pop
lret
inc
movsl
insl
pop
pop
rcrb
iret
jge
mov
pop
jb
int3
jne
out
arpl
iret
pop
xchg
daa
jmp
jg
int
adc
aam
add
notb
cmp
mov
pop
ja
push
jns
in
pop
sub
xorb
nop
pop
clc
mov
jae
sub
jno
loop
mov
adc
scas
aam
or
test
cltd
test
arpl
mov
pop
or
adc
ficoms
cmp
jmp
add
fisubs
xchg
jmp
adc
std
xchg
dec
xchg
es
jae
mov
out
fisttps
retw
push
into
ret
mov
addr16
and
scas
lds
mov
js
pop
mov
dec
jge
sub
adc
scas
mov
xchg
adc
jns
sbb
cli
jae
mov
pushf
jge
orl
or
add
stos
jp
mov
xchg
dec
push
scas
xorl
dec
inc
gs
sub
push
loopne
gs
add
ja
xor
gs
sahf
cmpsl
mov
xor
jl
and
mov
and
iret
mov
test
mov
loopne
add
bound
xorl
mov
lahf
ret
enter
ljmp
nop
xor
loope
jae
mov
icebp
fidivs
ret
jle
leave
int3
xchg
fsubrl
test
rorb
add
inc
jge
inc
jnp
mov
add
stc
dec
jecxz
imul
jecxz
sbb
mov
cli
inc
dec
imul
aam
dec
out
imul
dec
mov
rorl
flds
loop
dec
pop
and
xor
addr16
xor
dec
aaa
mov
or
pop
imul
scas
add
inc
sbb
adc
push
cmpsl
js
into
pop
jmp
push
repnz
ljmp
sbb
jle
push
pop
popf
fildll
xor
xchg
icebp
ss
outsl
test
repz
xchg
dec
hlt
lods
out
add
or
jp
inc
dec
jecxz
pop
pop
cmc
sbb
enter
sahf
idivb
int3
imul
icebp
into
mov
test
mov
adc
adc
add
je
jno
or
pop
lods
push
pop
nop
dec
or
iret
aad
mov
jmp
pop
out
push
hlt
insb
bound
int
std
mov
icebp
adc
push
xchg
adcl
incl
add
mov
adc
and
lods
shrb
js
ror
dec
jns
cmp
clc
cmp
mov
outsl
jmp
sbb
shlb
xor
mov
in
sub
sub
xor
lcall
add
jnp
mov
mov
int
sub
or
or
scas
stos
icebp
xchg
arpl
jae
mov
inc
shll
lods
xchg
imulb
jne
mov
imul
into
mov
pop
cmp
jnp
sar
sbb
xchg
pushf
movsl
cld
dec
mov
cmp
jno
add
cmp
repnz
pop
and
sbb
mov
xor
sbb
mov
cmc
mov
mov
xchg
dec
cltd
push
addb
cld
add
push
loopne
pop
das
std
mov
cli
out
ljmp
rcll
fdivl
push
and
in
inc
in
inc
inc
fs
fisubrs
or
lods
lods
push
push
popa
out
repz
ret
mov
add
out
cmp
into
add
add
or
repnz
dec
jne
test
or
lret
and
mov
xchg
roll
add
popf
and
ucomiss
xchg
icebp
mov
lods
test
mov
mov
mov
push
add
aam
sti
mov
in
pop
sub
push
xchg
cwtl
cmp
lcall
enter
cmp
xor
jo
xchg
arpl
cmc
inc
test
adc
sbbb
das
les
mov
loopne
movsl
inc
xor
mov
mov
stos
sbb
push
lcall
fildll
or
cli
sub
sbb
adc
ljmp
adc
and
xor
and
dec
xor
jp
mov
roll
scas
xor
daa
rcll
lret
enter
dec
xor
clc
inc
fcompl
in
testl
jno
adc
and
or
pop
xorb
cs
cmp
mov
xchg
not
jg
mov
lds
sar
loope
iret
lea
shlb
push
aam
mov
mov
pop
popa
fwait
or
jmp
pushf
xchg
test
mov
lret
mov
add
movsb
inc
incb
lcall
and
out
push
vpcmpgtb
mov
cltd
ja
adc
popa
bound
loop
xchg
call
sub
jo
inc
push
outsl
xor
scas
push
xor
xlat
scas
push
stos
shrl
sbb
add
ljmp
ror
push
sbb
std
inc
and
pusha
popa
dec
sub
jl
mov
mov
xor
fs
mov
inc
adc
xor
adc
popa
psubd
orl
jge
dec
test
stos
mov
inc
int3
push
out
mov
jmp
repnz
pusha
dec
repz
jo
lret
test
rcrl
lods
add
insb
lahf
add
lcall
add
sub
scas
lds
mov
cs
xchg
jae
ss
mov
ss
mov
das
jae
jecxz
rcll
dec
xchg
mov
ja
ficoms
push
sahf
loope
arpl
aam
pop
loope
imul
inc
xor
es
mov
mov
fstpt
pusha
arpl
xchg
mov
fldl2t
xchg
jbe
std
iret
cli
jl
push
cltd
mov
fcmovu
add
sub
dec
sub
movsb
sarb
push
push
inc
ret
cmp
and
clc
movsb
add
sahf
aam
xchg
xor
ficomps
shlb
adc
xchg
cltd
insl
and
sbb
scas
test
jge
in
test
iret
addr16
mov
sbb
lcall
sub
mov
nop
inc
and
in
xchg
std
xor
push
adc
fidivs
lds
aaa
je
mov
shr
out
aam
fsubrl
test
and
fmulp
imul
pop
pop
out
es
call
jp
mov
adcl
in
add
pop
mov
ret
adc
mov
stos
mov
in
fcomi
sub
xchg
xchg
mov
jg
pop
loop
stc
push
jbe
lcall
enter
inc
incl
into
cmp
xchg
ljmp
sarl
sbb
out
pop
sub
mov
jno
loop
push
out
sahf
pop
lret
stc
into
mov
insl
pop
mov
idiv
negb
sub
push
push
gs
imul
insl
mov
into
xchg
inc
test
cltd
cmp
loop
enter
push
cltd
and
xor
and
aas
cmp
xlat
xchg
dec
fs
sub
rorb
push
shrb
test
xchg
cmp
mov
mov
lret
in
addr16
cltd
or
les
rcrb
mov
js
xchg
mov
inc
add
xor
arpl
jnp
inc
decb
mov
faddl
fwait
dec
out
aaa
daa
mov
add
lea
sbb
jbe
xchg
testl
in
popf
inc
faddl
and
sbb
sbb
mov
mov
add
ret
outsb
sti
loope
insl
shrl
or
xchg
mov
fnstenv
call
scas
cmp
shll
cltd
xchg
repz
test
dec
aad
inc
test
jl
mov
dec
jge
ret
scas
dec
cltd
mov
fnstcw
and
push
cmp
dec
push
inc
push
ret
icebp
insb
push
shrb
xor
lcall
lret
cwtl
mov
das
mov
roll
and
das
lods
push
jae
sub
int3
iret
pop
fsubr
xor
push
xor
test
mov
je
jmp
xchg
mov
scas
inc
arpl
jge
jle
out
rcll
sbb
and
mov
loop
es
test
mov
lods
mov
inc
mov
mov
xchg
sti
jmp
out
xchg
cmp
cltd
je
sbb
subl
stc
cltd
and
imul
addr16
ja
inc
ja
pop
mov
loope
mov
ret
test
ja
pop
inc
sbb
add
mov
cli
adc
adc
ret
es
outsb
scas
add
sbb
mov
popf
jno
push
mov
jl
out
ljmp
push
es
cmc
lods
add
fistps
push
jg
negl
push
xor
mov
rcr
dec
cmpsl
movsb
test
cmp
inc
fists
mov
and
cli
jo
imul
sahf
mov
pop
cwtl
cmp
inc
push
adc
popf
ljmp
std
jp
aaa
inc
leave
xchg
loop
sub
jge
inc
arpl
xchg
dec
ficomps
les
pop
add
icebp
sarb
imul
sahf
clc
xor
shl
rcrl
shll
andb
xchg
mov
and
leave
cmp
jg
dec
call
into
fmull
push
adc
stos
arpl
cmpsb
ds
push
jg
mov
in
out
test
mov
cmp
fs
inc
pop
push
mov
mov
ret
cmp
inc
lret
sub
mov
and
subb
mov
or
aas
scas
xchg
cltd
in
add
fwait
push
pmullw
insb
ljmp
scas
pmullw
mov
or
pop
adc
sbb
jo
ficoml
jns
nop
pop
out
movq
lahf
jae
loopne
fcmovnu
xchg
jnp
in
dec
adc
or
cmp
mov
dec
test
fndisi(8087
shrd
cmp
dec
shl
in
outsb
int
mov
pop
mov
imul
and
out
fwait
pop
mov
mov
ficoms
setne
popf
jle
stos
mov
pusha
aam
mov
cmpsl
pop
mov
sbb
mov
movsb
mov
incl
hlt
addr16
mov
mov
xchg
test
or
dec
sbb
jge
sbb
out
mov
add
lcall
xchg
mov
push
scas
psubsb
adc
xchg
out
xor
add
push
lods
inc
es
adc
and
sub
mov
pop
mov
aam
fsubs
aad
mov
lcall
std
mov
fisttpl
inc
aas
fldl
sbb
ret
mov
cmp
into
cltd
and
mov
or
mov
push
xor
data16
or
pop
pushf
and
inc
bound
adc
sub
or
sub
sub
lods
dec
aas
stos
mov
rcl
jbe
int
or
xor
in
sarb
push
sbb
push
repnz
cltd
imul
fsubrs
inc
xchg
jbe
ljmp
xor
mulb
pop
movsb
stos
add
aad
add
arpl
fists
xor
insl
popa
adc
push
bound
in
test
mov
pop
add
sub
js
movsl
inc
push
xchg
sbb
inc
adc
cmp
mov
xchg
xchg
mov
leave
rorl
xchg
and
mov
test
cli
into
sub
push
ror
nop
sbb
fisttps
jae
push
shl
mov
repnz
cmp
pop
mov
cmp
jo
jbe
daa
aad
push
es
dec
mov
push
add
pop
test
sub
lahf
bound
idivl
loopne
lea
lds
in
and
mov
std
xchg
fdiv
pop
ret
test
cmp
jne
push
dec
aaa
xor
out
mov
xchg
incl
pusha
push
cmpsl
popf
cmp
push
jmp
and
ss
testb
pop
les
mov
add
ret
cwtl
xchg
ja
mov
dec
popa
dec
xor
repz
popf
idivb
dec
stc
cmp
iret
mov
xchg
add
or
mov
mov
add
fsubs
xchg
scas
fadd
mov
aam
pop
mov
std
jne
mov
insl
sahf
mov
ja
cmpsl
sbb
stc
arpl
push
xlat
inc
fisubrl
dec
lret
pop
and
mov
test
push
out
insb
pop
les
inc
into
sarl
pop
cwtl
clc
mov
ja
addr16
add
mov
mov
data16
lods
mov
fcmovnu
push
enter
ja
outsl
call
or
jp
adc
std
lods
movsl
rorl
shl
divl
cmpsl
pusha
cmp
sbb
outsb
adc
lods
cmp
dec
mov
fisttpl
mov
lahf
imul
gs
xchg
inc
pop
jge
xlat
cmp
hlt
xor
mov
mov
push
hlt
dec
push
lcall
aaa
int
cmp
push
sub
les
fsubrs
aam
cld
insl
sar
jbe
shr
lret
flds
gs
mov
fwait
cwtl
test
jb
popa
and
inc
push
inc
imul
fs
sub
jg
aam
add
idiv
lret
push
push
imul
ss
lret
mov
push
or
or
jmp
xchg
cld
ja
xor
lea
and
in
mov
push
push
xor
mov
sub
insl
stc
outsl
js
jno
lret
xor
cltd
icebp
movsl
dec
pop
repz
daa
mov
inc
push
push
pushf
mov
xchg
jmp
sbb
mov
jns
enter
xor
dec
add
mov
imul
cmp
mov
cwtl
xor
push
adc
adc
and
inc
pinsrw
pop
push
rcrb
sub
pushf
fstpl
cs
jmp
rol
add
jns
icebp
ja
dec
pop
pop
push
and
in
iret
push
mov
lret
sbb
xor
fsts
cmpsb
push
ds
cmpl
stos
stos
in
jae
das
sbb
dec
cmp
adc
loope
mov
mov
insl
mov
in
icebp
inc
pushf
inc
inc
adc
nop
iret
xchg
pop
push
mov
pop
xchg
ret
add
add
lock
pinsrw
or
mov
nop
imul
push
mov
pop
std
lret
test
fs
int3
loope
or
push
stos
inc
adc
push
je
test
test
sbb
push
repnz
mov
xchg
mov
fldt
psrld
cld
std
and
sbb
stos
xchg
add
ljmp
aas
arpl
cmp
stc
sbb
sbb
push
and
mov
cmp
pop
sub
lock
pop
pop
jge
or
push
add
cwtl
and
cltd
dec
cmpsl
mov
add
mov
jae
dec
push
rclb
jge
orb
aaa
cmp
outsl
imul
btr
add
inc
xchg
adc
mov
mov
dec
mov
clc
and
pop
sub
stos
inc
mov
pushl
mov
insl
mov
pop
or
call
aad
xchg
and
mov
lods
push
dec
dec
int
data16
das
das
pop
scas
adc
into
sbb
enter
sub
ret
mov
outsl
mov
std
outsl
jbe
mov
or
lret
imul
mov
mov
shll
movsb
jno
and
popa
pop
repnz
movsb
btr
sub
aaa
sbb
pop
xor
or
popa
dec
mov
or
icebp
adc
test
xchg
mov
inc
and
cld
sti
int3
sti
and
add
outsl
test
pop
jae
int3
das
std
ljmp
in
push
ljmp
leave
ret
dec
sbb
gs
push
shl
or
mov
sub
mov
adc
loopne
or
or
xor
mov
pop
jns
mov
add
dec
inc
and
js
das
mov
aas
mov
jle
out
cmp
mov
xor
sahf
xor
lods
push
inc
aaa
and
add
mov
add
pop
cmpsb
fnstsw
and
adc
adc
nop
cld
ret
lahf
xchg
stos
fildl
fsubrs
jb
lods
insl
mov
pop
ret
rcr
cmpsl
mov
mov
sub
gs
mov
add
fwait
in
out
rorl
push
jp
xor
imul
cmp
xchg
cs
lahf
and
xchg
xor
and
mov
or
xchg
add
sub
mov
or
jl
aad
inc
mov
or
fisttpl
fistl
or
iret
ret
xchg
push
fcoms
pop
and
gs
lock
int3
leave
jb
dec
inc
pusha
xor
movb
in
fwait
mov
testl
lret
ret
adc
push
inc
xchg
pop
jae
iret
xchg
imul
hlt
repz
pop
add
je
add
int3
fcmovnb
pushf
rorb
mov
andl
inc
int3
push
adc
adc
mov
mov
orb
push
je
add
adc
dec
aad
ret
cmc
inc
les
sub
fcompl
loop
in
xchg
out
stos
adc
cmpsb
dec
sar
aad
mov
xchg
mov
jge
xchg
xchg
fsubp
ret
loopne
pop
and
mov
imul
push
jnp
jl
push
cwtl
in
mov
lahf
inc
adc
push
out
hlt
stos
lods
xchg
shll
dec
pop
dec
data16
xchg
dec
or
stc
stc
movsb
jb
mov
popf
mov
or
dec
int
in
fnstcw
cmp
repnz
xchg
add
dec
xchg
lock
ss
adc
lods
popf
dec
add
and
pop
fdivrs
daa
lods
out
mov
pop
push
icebp
cmp
ljmp
lock
adc
xor
or
fsubp
repz
pop
sbb
push
cmp
in
mov
dec
fwait
les
pop
and
adc
push
fildl
sub
rclb
xchg
push
push
iret
mov
mov
mov
movsl
and
popa
jnp
dec
adc
push
cmp
gs
test
push
push
rcl
testl
sbb
subb
in
jmp
les
lds
enter
sbb
sbbb
jge
sub
fidivrl
int3
xlat
cli
fwait
inc
mov
mov
int3
push
loopne
xor
imul
push
xchg
hlt
add
lea
aad
test
push
sub
scas
daa
repnz
sub
dec
hlt
ss
cmp
aam
mov
jmp
fldz
mov
lahf
adc
test
mov
mov
mov
negl
xor
dec
les
jl
inc
shr
pusha
push
call
push
xor
jno
cmp
stos
addr16
xor
add
rclb
push
cmp
loop
pop
or
cmpb
fucomp
jno
add
or
lock
mov
lret
scas
sub
cwtl
mov
jl
ss
push
mov
or
jg
sti
pop
mov
jno
inc
in
ret
pop
cld
sub
cmp
xor
mov
scas
cli
rorl
and
mov
dec
push
dec
les
test
in
or
add
fs
push
mov
andb
cmp
repz
scas
loope
and
jmp
ja
stos
xchg
repz
xor
push
mov
bnd
push
out
adc
gs
and
call
inc
sub
xor
add
inc
sbb
cltd
add
std
stos
movsb
inc
int
mov
adc
lahf
sbb
xor
xor
lods
cmp
sub
xor
out
sbb
or
mov
lret
je
ljmp
push
cli
leave
or
xor
add
pop
dec
addr16
out
cmpsb
jge
cmc
sub
lds
jne
pop
ret
pop
fwait
inc
mov
mov
sbbl
lcall
mov
dec
or
or
aas
pop
clc
out
mov
add
fldt
je
sub
aaa
shrb
test
xchg
std
xchg
iret
leave
fs
xchg
imul
xchg
jnp
and
cmp
outsl
lcall
mov
adc
cmpsl
mov
cwtl
data16
mov
push
xchg
jae
imul
inc
sub
dec
inc
mov
mov
cmpsl
adc
sbb
fcoml
movsb
mov
out
jecxz
sub
cmp
mov
out
cmc
lock
xchg
xor
xchg
sbb
out
cmc
pop
push
push
dec
jne
pop
bound
sub
dec
fistl
ss
mov
pop
cmpsb
dec
jns
call
fwait
mov
out
jb
xchg
lods
loopne
xchg
lcall
push
push
jmp
push
dec
movd
inc
push
shll
ss
push
push
inc
ljmp
push
aam
push
inc
xor
outsb
push
add
cld
cmp
test
bound
rcrb
inc
mov
mov
cwtl
ds
sub
arpl
lcall
xchg
mov
xchg
pop
cld
pop
mov
xchg
mov
fdivr
shl
or
or
loope
dec
pop
ret
add
sub
jmp
jg
add
call
add
jge
adc
cmp
mov
pop
les
pop
in
push
push
mov
int
adcb
fadds
in
xchg
shlb
xchg
pop
xor
nop
leave
and
cmp
lahf
das
cli
sar
and
adc
rcrb
xor
leave
movsl
jne
inc
pop
ret
mov
std
mov
and
sub
imul
push
adc
fadds
rorl
mov
sbb
adc
fidivrl
add
jp
xchg
dec
cmp
lahf
test
jns
mov
sbb
imul
jl
test
add
or
mov
or
daa
int
or
loope
mov
mov
pop
ss
enter
sbb
aad
mov
ret
mov
mov
cmpsl
jl
cmp
andl
inc
xor
mov
mov
mov
imul
or
sub
hlt
inc
pushf
clc
inc
cmpl
mov
inc
aad
mov
imul
push
jmp
fs
mov
xchg
scas
xchg
dec
adc
and
xor
mov
lcall
cmpsb
dec
adc
cld
mov
fimuls
pop
mov
add
ss
lcall
ret
cmp
xor
fs
fiadds
leave
flds
jmp
cmp
pusha
andl
pop
push
xor
fnstcw
shlb
in
imul
int
addl
xchg
jb
pop
pop
or
out
cmp
mov
out
outsl
pop
push
push
mov
pusha
popa
mov
je
test
mov
xchg
xor
out
lock
adc
call
jge
call
pusha
dec
adc
xor
jnp
jg
shlb
mov
lods
lods
jns
movsl
test
mov
push
pop
or
int
or
idivb
cwtl
add
xor
orb
scas
or
xor
or
sub
fidivl
and
fdivp
mov
add
sub
mov
xchg
mov
scas
inc
ljmp
icebp
test
arpl
lods
jo
andb
lods
mov
loope
scas
lret
mov
and
rorl
jno
mov
gs
mov
push
test
fdivl
addb
mov
dec
leave
push
push
or
mov
lds
lods
pushf
int3
dec
dec
sub
jmp
icebp
repz
pop
gs
stos
ret
xchg
push
mov
mov
add
cli
scas
enter
xor
lret
jbe
and
pop
xor
ret
into
cmc
dec
cmp
xchg
rorb
pop
and
xchg
nop
push
loop
loop
xchg
push
aaa
int3
inc
in
popa
mov
out
fistpll
xchg
sbb
stc
xchg
aaa
clc
fsubrs
sub
mov
js
push
sbb
or
repz
sub
outsb
inc
daa
out
add
xchg
pop
xor
sbb
movsl
push
xchg
outsb
add
push
push
sub
outsl
or
sbb
or
fnstcw
orb
mov
add
rclb
pusha
clc
movsl
cmp
pop
arpl
adc
push
cld
jmp
inc
call
in
lods
pushf
rorb
cmp
cmpsl
hlt
fwait
sbb
xchg
mov
jbe
jge
mov
loop
test
cli
cmp
push
imul
imul
cli
add
les
mov
in
sbb
mov
fldl
lods
por
dec
push
gs
push
int3
or
xchg
sub
xchg
sub
add
inc
inc
inc
jns
in
mov
loope
ficompl
mov
dec
ret
repnz
push
in
leave
pop
dec
pop
int3
rorb
arpl
mov
inc
sbb
jno
mov
paddusb
mov
insl
xor
out
pushf
cwtl
xchg
dec
inc
xchg
ret
jns
ja
fwait
xchg
movsb
push
xor
pusha
adc
in
in
inc
es
lcall
stos
adc
cmpsb
cli
loop
adc
imul
ds
mov
shlb
and
popa
mov
aam
sbb
adc
test
jl
jnp
popf
movsb
popa
cmp
sbb
in
xor
incl
pushl
fnstcw
aam
popf
push
push
jg
xor
roll
lock
ret
mov
inc
insl
and
adcb
xor
decb
pop
mov
inc
subl
pop
jns
inc
mov
cmpsb
aaa
pop
xchg
jnp
pcmpgtw
inc
mov
mov
sub
pushf
mov
mov
dec
test
aas
pop
lret
enter
scas
stc
fistpll
ss
mov
xchg
testl
loope
in
and
aam
fdivs
add
test
push
cld
cmc
fldcw
dec
pop
or
and
out
pop
jge
outsl
fldt
hlt
push
loope
jmp
out
xchg
mov
push
xchg
cmp
outsl
jns
jbe
lock
or
dec
je
aas
push
out
mov
push
pop
popf
enter
mov
mov
mov
mov
nop
add
dec
lock
test
imulb
loope,pt
pop
out
mov
mov
scas
jecxz
jle
hlt
jo
popf
aaa
xchg
dec
pop
pop
roll
add
sub
mov
add
add
out
rorb
inc
rolb
insb
imul
mov
xor
gs
aad
imul
icebp
mov
stos
imul
mov
push
mov
outsl
xchg
dec
neg
push
negb
sub
xchg
cmp
lret
enter
in
xchg
dec
cltd
je
jne
inc
xor
mov
or
mov
rorl
ds
das
xor
hlt
fidivrs
int3
insb
cmp
dec
sbb
push
std
in
sub
shll
addb
aam
addr16
inc
xchg
rcl
sbbl
es
sbb
pop
lcall
int
xchg
pop
mov
lcall
dec
push
push
popa
inc
fisubl
push
xlat
adc
sub
cwtl
mov
push
andb
pusha
xchg
es
loope
or
daa
test
sub
movsl
sub
rcr
jp
dec
cmp
adc
mov
cmpsb
out
sub
mov
fidivrl
mov
lea
fxtract
fists
and
dec
xchg
ljmp
push
cwtl
rcrb
mov
out
rorb
add
js
test
pusha
push
or
and
into
shrb
xchg
dec
fistpl
xlat
pushl
shlb
push
add
cmc
insb
in
sbb
fstpl
aaa
mov
lea
jl
pop
jno
dec
lea
and
adc
add
lods
xchg
int
sbb
mov
cmp
lods
dec
int
push
sti
mov
push
or
fidivrs
movsb
sub
fldcw
jbe
aas
ds
pushf
fsubrs
pop
sti
jmp
fnsave
xlat
jb
std
mov
aad
in
stc
adcb
push
std
jb
hlt
lock
jns
xchg
arpl
stc
sbb
pop
lods
lods
xor
mull
push
addr16
mov
jp
fucomi
mov
sub
test
fs
leave
adc
out
int
popa
ds
push
or
xor
push
lret
iret
xchg
lret
and
add
fdiv
mov
cmp
mov
fbstp
push
insb
jg
inc
push
jp
loop
leave
xlat
addb
popf
push
bound
in
mov
test
cwtl
jne
popa
sbb
xchg
sbb
dec
sti
mov
std
or
arpl
nop
int3
jne
insl
inc
sbb
mov
mov
push
cld
inc
sti
pop
xchg
scas
pop
je
loop
bound
movsl
sub
testl
test
js
pop
ret
and
cwtl
push
xchg
mov
mov
push
je
cmpl
adcl
cmpsb
and
cltd
adc
cmp
mov
cmp
pop
mov
repnz
cwtl
and
stos
xor
in
mov
call
and
inc
xor
pop
shlb
ret
outsl
popl
popa
rorl
inc
add
out
add
jecxz
mov
add
lods
insl
arpl
mov
xor
mov
sub
stos
ja
cld
rcll
mov
fstpt
xchg
or
loopne
ljmp
pop
inc
mov
jbe
ds
aad
push
mov
fs
notb
stos
push
out
cld
fwait
lea
clc
pop
sub
jg
xchg
imul
lret
popa
jne
sub
dec
out
popf
or
jno
mov
inc
mov
popf
inc
inc
pushf
in
bound
xchg
in
pop
mov
jle
mov
jl
and
rcrl
mov
sub
adcb
push
cmp
popf
sbb
hlt
cli
fwait
insl
sub
out
sbb
pop
push
stos
dec
sbbb
jnp
sbb
scas
or
push
jle
inc
rcrb
cmp
jbe
lcall
cmp
loop
inc
push
or
mov
and
not
cmp
sub
les
mov
or
aas
inc
lret
cwtl
fsts
push
lods
aam
imul
ret
inc
sbb
jns
out
adc
dec
lock
pusha
ss
insb
arpl
rclb
sbb
out
pop
add
or
leave
rolb
mov
dec
jbe
cmc
daa
lds
jb
cmpsl
pushl
dec
xchg
and
repz
cmp
and
inc
cmpsb
mov
xchg
stos
sbb
xchg
mov
fs
dec
ds
call
lcall
cmp
cltd
jmp
ret
xlat
mov
sti
rol
inc
jns
and
and
lcall
movl
mov
pop
into
adc
jns
ss
sub
imul
sbb
push
mov
inc
jge
cmpsb
or
jmp
cwtl
inc
in
stos
push
sbb
test
push
stos
cwtl
or
loop
sub
sahf
sbb
cltd
adc
or
cmpsl
call
mov
shlb
xchg
fdivrl
aaa
test
clc
and
or
js
scas
mov
rcll
cmp
lahf
inc
fistpll
pop
sub
popa
push
inc
rcrb
push
push
jnp
and
lock
xor
dec
or
sbb
cs
iret
add
imul
jle
lock
enter
push
add
and
cmpsb
sub
adc
or
mov
stos
cwtl
xchg
or
into
and
sar
lcall
cmp
pop
mov
lods
in
imull
mov
aas
rcrb
add
inc
pop
mov
jge
mov
daa
ret
pushf
in
bound
and
push
jecxz
push
jns
mov
dec
mov
jnp
push
jl
jnp
data16
push
cmp
mov
insl
inc
add
ja
xor
jno
mov
add
std
int3
mov
mov
pop
shll
add
int3
xor
pminub
dec
dec
pop
lahf
adc
fcmovnu
xchg
pop
sbb
dec
lds
sub
je
addr16
fsubl
push
ljmp
jmp
and
arpl
fadds
test
fnstsw
stc
out
mov
sub
in
lds
icebp
jo
sub
cmp
mov
push
xor
mov
lret
lcall
add
xor
xor
xor
clc
sarb
sub
jb
cli
lock
test
stc
loop
adcl
sti
cs
sbb
jae
fcomi
dec
sbb
cs
jl
scas
add
add
loop
hlt
add
pavgb
orb
adcb
inc
inc
sahf
adc
sbb
aaa
dec
ss
xor
inc
push
push
outsl
pop
sub
push
jbe,pn
dec
fidivl
popf
into
and
cmp
ljmp
es
xchg
fisubs
inc
mov
bound
mov
pop
je
mov
mov
lock
movl
loope
xlat
cld
sbb
mov
pop
mov
xchg
jno
jae
loopne
into
repnz
mov
hlt
mov
push
sarl
jecxz
xor
and
sub
ja
jge
sub
sub
fs
and
jns
mov
sub
daa
cltd
arpl
sbb
add
jnp
fnstcw
cmp
push
aam
in
outsb
jne
inc
adc
mov
repnz
stc
rorl
jne
jbe,pt
pop
jg
data16
mov
pop
pop
inc
push
dec
sub
rep
or
shlb
sub
mov
loop
hlt
pop
jp
fdivl
or
push
dec
cmp
aas
aad
jb
xchg
xlat
cmp
cli
inc
aad
out
and
xchg
outsl
dec
xor
pop
int3
sub
inc
iret
jp
lock
xchg
ja
movsb
pop
arpl
mov
push
rcrb
mov
std
lret
clc
mov
shl
cmp
xchg
lods
jg
push
sub
fs
test
and
mov
lods
ds
popa
scas
sbb
jae
add
and
xor
add
sub
mov
mov
daa
sub
lds
push
in
cmp
out
aas
loope
lea
gs
sbb
and
sbb
std
cmp
push
jge
jb
in
std
inc
adc
and
or
mov
into
nop
sub
in
pop
cmpsb
adc
shrl
pop
mov
adc
sti
xor
push
jbe
push
add
dec
in
sub
std
sub
mov
fsqrt
cmp
cld
mov
jb
div
test
mov
mov
and
pop
push
incb
repnz
mov
sub
push
or
sub
rcrl
sub
rclb
adc
cmpsl
std
mov
push
mov
jmp
push
aad
sar
mov
adc
pop
cmpsl
push
push
out
and
push
push
mov
out
mov
add
lret
mov
adc
pop
pop
mov
sub
pop
push
jnp
or
mov
push
lods
xchg
pop
ljmp
hlt
hlt
jnp
cmpsl
push
mov
jp
out
movsb
mov
into
imul
lods
jae
mov
xor
mov
xor
test
xchg
push
xchg
adc
shrb
sbb
xchg
pop
xchg
repnz
leave
into
add
movsl
ljmp
cmp
cmp
lods
mov
cmp
rorl
or
or
cld
xor
cmpsl
pop
repz
jge
dec
arpl
subb
orb
in
mov
inc
imul
into
test
push
int
mov
ret
add
arpl
ficompl
pop
xchg
outsb
xor
das
inc
ja
sub
add
xchg
xchg
faddp
nop
dec
cmc
shrb
test
add
xor
mov
and
sub
leave
icebp
loope
cltd
xor
pop
xor
pop
dec
mov
jl
sub
xlat
dec
push
add
scas
mov
sub
dec
push
bound
andb
xor
mov
xor
mov
dec
iret
daa
lahf
dec
adc
pop
cli
sub
stos
je
inc
ds
adc
cmp
add
xchg
xor
scas
add
call
sub
popf
nop
inc
jne
add
sub
jno
add
push
dec
mov
imul
and
dec
xor
call
dec
push
cmp
xor
dec
enter
popf
sub
test
xchg
push
mov
outsl
loop
out
pop
jle
sbb
ljmp
fwait
adc
and
xor
push
into
ljmp
sbb
pop
mov
ljmp
bound
adc
lea
fdivrs
add
push
je
imul
mov
clc
mov
test
push
lahf
pop
iret
lds
enter
sbb
dec
and
inc
pushf
je
push
cmp
in
xchg
mov
cli
sbbl
cmp
rorl
cmc
je
adc
jnp
fldt
cmp
push
addr16
mov
or
or
imul
mov
fstps
aad
addl
aad
jb
rcr
pop
mov
rorl
or
dec
mov
inc
ja
pop
scas
fsubl
loope
arpl
jo
or
add
cmp
int
popl
lret
sbb
add
jno
sub
or
shl
mov
xchg
aaa
fwait
dec
es
leave
repz
aad
or
andb
cmpsl
xchg
ret
jecxz
dec
inc
popf
add
xchg
mov
push
or
xor
cmp
rclb
cmp
mov
test
and
ja
lods
xor
movsb
lret
push
inc
xchg
lcall
lds
mov
push
and
aaa
fisubrl
inc
into
fstpl
push
xchg
dec
pusha
sbb
mov
mov
inc
shrb
fsubp
test
aas
stos
mov
dec
stos
jae
xor
out
jmp
fistps
negb
cmpsl
lock
dec
pop
jnp
mov
sbb
jmp
mov
jle
jle
and
push
es
fsubl
lret
jo
sub
lods
sub
cmp
inc
outsl
rcr
test
fwait
adc
adc
mov
add
cmp
push
imul
mov
sub
mov
adc
jle
outsb
cmp
push
dec
pop
fisttpll
mov
cltd
push
mov
loop
pushl
push
mov
sbb
mov
ljmp
test
sbb
cmpsb
push
add
inc
and
mov
dec
jbe
inc
arpl
jg
push
jmp
push
in
std
in
loop
daa
test
insb
popf
and
xchg
test
iret
xchg
jae
movsb
insl
sub
mov
in
orb
popf
cmpsl
enter
sub
push
and
sbb
fwait
cwtl
inc
push
sub
out
push
popf
sub
mov
rcl
dec
mov
fldt
cmpsb
cwtl
or
cmp
cmc
les
sbb
hlt
or
shlb
out
cwtl
push
incl
in
jmp
jno
jno
adc
pop
push
decb
mov
adc
dec
rorl
lret
inc
and
mov
lahf
lds
sti
mov
jb
loop
push
repz
mov
stos
jp
in
inc
jo
xchg
or
mov
mov
scas
lcall
addr16
out
test
imul
int3
jmp
jmp
pusha
inc
mov
pop
std
sub
adc
push
shl
lret
xchg
ljmp
inc
sbb
pop
movsl
push
movsl
mov
inc
in
outsl
push
mov
leave
mov
hlt
inc
fcompl
mov
mov
iretw
stos
es
mov
dec
sbb
movsb
push
aam
dec
lods
xchg
bound
pop
mov
mov
je
add
aas
push
or
cmp
stc
fcmovu
aas
push
xchg
out
xchg
push
sbb
pop
sub
movsl
pop
inc
into
mov
ror
in
lock
rcrl
pop
sbb
xchg
stos
loop
mov
add
push
es
cmp
push
aad
push
cmpl
mov
ja
pop
daa
movsb
adc
outsb
scas
pop
inc
jb
outsb
enter
xchg
rcrb
subb
add
cmpsl
cmp
sub
pop
lock
dec
add
lods
imul
pop
or
fsubs
pop
cmp
adc
out
shr
stc
ret
lret
sbb
shrl
adc
inc
pop
out
xchg
sahf
mov
lcall
dec
daa
cmp
je
xchg
rcll
mov
fdivrl
out
aaa
out
in
test
xchg
jbe
stc
imul
pop
pusha
je
pop
cmp
dec
movsl
hlt
iret
mov
mov
jns
lods
movsb
fwait
ret
jmp
popa
les
inc
dec
test
or
sarl
and
push
jecxz
xchg
mov
mov
stos
inc
xchg
or
fwait
aad
xor
into
jge
mov
mull
jecxz
loop
dec
xchg
dec
mov
lods
enter
mov
out
dec
fwait
pop
popa
lods
xchg
fnstcw
cmc
mov
nop
lea
xchg
sub
or
iret
in
xor
or
mov
loope
insl
out
xor
xlat
xchg
sbb
mov
or
imulb
in
cs
rcr
repz
scas
shl
into
gs
jo
adc
fsubl
lds
jo
push
sbb
fadds
pop
jo
mov
push
pop
sub
push
fidivs
mov
cmp
sbb
sbbb
mov
pop
ljmp
sbb
loop
mov
jp
xor
push
sbb
movsb
pop
test
xor
pop
mov
dec
out
pop
and
shl
jecxz
jmp
movsb
aam
mov
adc
cmp
xor
jae
add
sti
push
repnz
jecxz
dec
cmp
in
mov
ror
pop
mov
pop
sbb
call
insl
lret
mov
fadd
or
xor
bound
aaa
xchg
pop
mov
js
and
inc
sub
aaa
sbb
je
int3
sub
sub
pop
xor
sub
mov
or
sub
mov
xor
nop
or
or
sahf
iret
movsl
pushf
pusha
jae
jg
popa
and
insl
push
lahf
pop
xlat
sbb
mov
into
or
fistps
cmp
xchg
ret
decb
icebp
lds
or
xor
xor
fnstcw
hlt
inc
xor
dec
ret
lret
lods
mov
stos
rcrb
lcall
mov
sti
sti
pop
rcll
fimuls
sub
xchg
inc
js
adc
in
push
or
js
pop
aaa
aad
outsb
mov
aad
sti
adc
insl
add
fmull
push
and
in
or
push
mov
and
ss
or
mov
push
loopne
mov
or
or
pshufw
inc
pop
dec
or
sub
push
sub
repz
lods
rcrb
xchg
dec
shlb
pop
aad
xor
cld
repnz
imul
lahf
jns
ficoms
in
movsb
mov
cltd
in
sbb
or
lret
inc
pop
adc
mov
test
dec
sar
ficoml
sub
loopne
and
imul
push
sbb
xchg
jl
lcall
out
and
jle
jns
mov
dec
nop
andl
int3
adc
hlt
loopne
dec
in
imul
pop
mov
jb
cld
cmp
dec
ret
or
jl
dec
cli
add
cs
xchg
jns
ljmp
hlt
sub
adc
jp
jle
xor
xchg
rorl
loopne
lea
in
popa
xchg
jbe
notl
xchg
push
cmpsl
dec
jno
fcom
push
push
mov
mov
andl
jnp
loope
sub
stc
or
out
push
xchg
adcl
test
inc
and
adc
push
xor
xchg
push
push
push
lods
adc
sbb
sahf
imul
rcrl
mov
xor
shll
or
cs
imulb
in
adc
sbb
lds
sbb
inc
mov
adc
shl
outsb
imul
xor
pop
fucomp
push
xchg
mov
cmp
mov
lods
int3
push
sarb
xchg
or
pop
pop
or
orl
cmc
xlat
push
out
mov
pop
xor
notb
out
fstpt
push
xor
mov
sub
mov
clc
add
inc
ret
sub
pop
xchg
dec
xor
enter
not
xchg
pop
cmp
fs
jae
dec
adc
push
pop
pop
dec
out
sub
nop
jne
dec
imul
ret
cmpps
sahf
mov
jno
xor
dec
adc
and
outsl
sbb
clc
pusha
cmpl
push
push
pop
mulb
adc
sbb
pop
xor
pop
xlat
in
xchg
xchg
mov
mov
push
enter
pop
mov
rclb
dec
out
pop
or
lcall
lret
push
mov
ja
in
and
jbe
jle
movsl
fldenv
movsl
pop
nop
and
imul
cmp
mov
insl
xchg
push
stos
enter
or
jecxz
call
lea
in
insb
imul
inc
lret
bound
adc
mov
cld
pop
rolb
mov
or
xor
insb
cmp
in
scas
aas
jno
shlb
mov
lods
sbb
mov
sbb
fldcw
into
notb
ret
lcall
shl
pop
push
movsl
dec
fistpll
push
pop
lret
movsl
dec
outsl
inc
insl
daa
pop
test
dec
cmp
les
sbb
xchg
mov
dec
out
xchg
adcl
mov
shlb
test
adc
clc
mov
jg
ss
test
das
bound
inc
pop
scas
xchg
mov
mov
pop
fs
jg
popf
fidivl
add
iret
jne
test
mov
inc
cmc
add
ss
fcoms
loop
dec
cmpsl
inc
mov
xchg
jl
jo
sub
inc
call
clc
outsl
xchg
xchg
jnp
mov
sub
push
pop
and
cmp
xchg
daa
sub
popl
cmpsb
jmp
shl
mov
pop
lret
jg
aam
out
lcall
add
mov
gs
cmp
and
shll
addr16
jb
lahf
test
fdivl
js
outsl
xchg
js
cld
sahf
lret
inc
mov
pushf
std
test
je
cmp
adc
iret
lods
cwtl
fcmovu
mov
adcl
or
dec
dec
jg
push
sbb
mov
cltd
lock
fwait
das
xchg
or
lret
mov
push
and
gs
adc
mov
mov
cmpsl
int
roll
mov
inc
rclb
mov
add
mov
imulb
add
in
cwtl
cld
xorb
test
std
out
shrb
pop
lods
jnp
mov
push
loope
loop
push
into
dec
lods
lea
test
push
adc
mov
shll
sbb
pop
push
inc
sub
fisubl
lds
add
mov
rcll
in
mov
out
pop
mov
loop
mov
loope
jle
in
lcall
int
rolb
sbb
add
pop
movsl
mov
push
sar
push
scas
jae
sbb
lods
adc
push
cmp
cmpsl
adc
cmpsl
dec
sub
ret
insl
mov
or
dec
fsts
xor
xchg
xchg
cmp
divb
dec
ret
xchg
hlt
push
insb
mov
dec
fs
fldcw
shll
push
adc
dec
xchg
jecxz
xor
mov
cmp
sbbb
fcomi
sbb
sub
js
xchg
adc
insb
or
lods
add
lret
or
lcall
dec
cld
mov
push
fwait
sbb
dec
jno
jbe
pop
cwtl
add
mov
add
cmc
and
fimull
enter
mov
xor
clc
mov
dec
out
jbe
push
pop
je
lods
fcoml
fstl
xchg
cmp
sub
jns
in
fildl
xchg
mov
divl
sbb
fsubrl
pop
testl
fcmovnbe
sti
je
xor
insb
sub
jo
jmp
pop
outsl
mov
adc
pushf
stos
aas
sub
imul
pop
pusha
adc
xchg
mov
push
rcrb
imul
es
lcall
scas
mov
nop
lds
stos
sub
xor
sub
movsl
sub
mov
adc
push
hlt
mov
ds
or
jns
scas
ja
ja
push
test
jecxz
mov
lods
jle
je
faddp
lahf
pop
mov
sub
pop
xor
jb
push
pop
cmpsb
pop
cld
cltd
inc
adc
or
mov
dec
sbb
fstp
stos
out
lcall
fwait
test
aaa
aas
jg
mov
jno
push
loope
or
mov
ss
fisttpl
movb
and
dec
push
mov
or
add
popa
and
data16
dec
sahf
aam
out
ficoml
pop
daa
andb
cld
dec
push
push
in
in
sub
sahf
xchg
lret
pusha
out
sbb
orl
mov
andl
ret
ss
push
mov
into
jl
push
pop
dec
sarb
cwtl
int
xchg
pop
popa
enter
xor
adc
negl
push
lods
repz
sbb
insb
xor
add
sbb
psraw
test
push
xchg
enter
lds
xchg
bound
int
mov
mov
loope
inc
loope
dec
and
imul
xchg
inc
movsl
cmpsb
push
mov
push
pusha
mov
into
xchg
popa
sub
loop
mov
fsts
inc
xor
test
in
pop
or
fistpll
rcr
jg
jmp
inc
sub
loopne
jae
sbb
imul
jmp
cmpsl
fadd
test
mov
dec
ja
push
in
inc
xchg
xor
mov
mov
and
mov
fbstp
inc
adc
insl
jg
cmpps
rclb
hlt
push
ds
testl
test
pushf
addr16
out
ljmp
pop
pop
scas
jecxz
mov
pop
aaa
or
fldenv
mov
stc
pop
pop
scas
scas
lods
sub
fsubs
push
mov
mov
imul
scas
lods
or
mov
cmp
inc
and
sbb
cmpsl
xchg
int3
dec
sub
sub
push
sarb
cmpsl
jo
scas
jecxz
insb
push
xchg
cmpl
add
inc
ds
enter
loope
cli
mov
out
nop
and
mov
xor
subl
movsl
aam
push
int3
cmpsl
das
je
fs
mov
fcomps
stos
divl
or
mov
clc
jecxz
and
lea
mov
cmpsl
push
pop
mov
dec
mov
out
mov
push
push
ja
leave
cmp
call
mov
mov
cmp
movsl
outsb
popa
in
punpckldq
dec
iret
mov
clc
jmp
fnclex
push
mov
cmp
sbb
push
fnstenvs
mov
mov
sti
mov
cli
fidivrs
stos
mov
jnp
loope
cltd
and
sbbl
xchg
imul
fdivrs
push
sub
in
imul
adc
sbb
repnz
es
sbb
popf
js
jecxz
popa
cmp
and
std
xchg
jl
or
mov
or
add
push
sub
mov
mov
fadds
leave
shrb
pop
aas
cmp
xchg
xor
lahf
and
jns
repz
sub
add
inc
pop
sbb
enter
in
dec
mov
movb
cld
shrl
test
xlat
mov
mov
or
in
or
seta
nop
inc
mov
sbb
nop
nop
or
mov
xchg
push
pop
aam
cmp
loopne
xchg
pop
mov
imul
and
ljmp
lret
adc
scas
add
fstps
mov
popl
mov
inc
pop
lret
scas
shrb
cmpsl
and
dec
fisubs
outsl
lret
not
cmp
xchg
jo
repz
cmp
stc
mov
jmp
dec
out
inc
push
int3
xor
orl
rcll
lret
push
andb
test
nop
nop
lock
sbb
arpl
dec
stos
int
insl
shl
sarb
cmc
mov
cltd
inc
test
cmpsb
lret
sbb
pop
cmp
jmp
cwtl
or
lret
inc
push
dec
les
mov
push
lret
lcall
adc
in
cli
je
lret
in
jae
imulb
outsl
push
outsb
test
sar
push
ds
pop
out
inc
push
sti
push
gs
adc
push
psrlw
dec
stos
mov
mov
hlt
lea
mov
imull
scas
add
sbb
pusha
data16
sub
jnp
ja
aam
in
pop
cltd
sub
ds
mov
ljmp
shlb
call
jns
sbbb
test
add
adc
das
test
shrl
call
jge
popa
loopne
sbb
adc
stc
inc
arpl
test
and
icebp
popf
rorl
call
pop
sti
fwait
movsl
mov
sub
push
inc
mov
xchg
mov
mov
rcrb
sub
cmc
cwtl
enter
iret
cli
jns
push
sbb
pop
jb
testb
jge
icebp
push
push
mov
aas
mov
mov
mov
cmp
adcl
dec
jbe
jge
mov
clc
lahf
sub
nop
mull
lret
cmp
pop
adc
or
into
movsb
add
insb
add
add
cld
mov
pop
mov
sub
cltd
stos
in
int
jge
sbb
mov
add
pop
mov
out
cltd
ljmp
fadds
in
arpl
xlat
adc
icebp
xchg
inc
in
fbld
cmp
out
ds
inc
lods
dec
js
cltd
jne
mov
and
adc
es
mov
hlt
mov
jge
mov
and
mov
xor
sub
int3
mov
in
pop
cmp
push
jecxz
add
pop
lea
fistps
mov
out
cmp
push
popa
and
cmp
rcll
cmpl
int3
sbb
leave
push
aaa
jae
les
test
push
push
out
frstor
sub
cli
enter
movsb
mov
or
es
mov
sub
xchg
mov
or
xlat
inc
loope
imull
fdiv
bound
test
and
xchg
in
xor
adc
jnp
orb
pop
loopne
lretw
add
adc
shrl
rorb
fidivs
lds
mov
cmpsl
add
pop
xchg
in
inc
xchg
jne
inc
mov
dec
shl
stos
and
out
cltd
popf
xchg
xchg
sahf
and
iret
cwtl
pop
mov
mov
jp
push
mov
pop
int
xchg
mov
dec
in
jecxz
jle
test
cwtl
mov
jbe
adc
sti
cmp
testl
addr16
hlt
or
shrb
ret
sub
jnp
mov
divb
ret
jg
call
fcomps
push
int3
xor
push
pushf
xor
cmpsl
into
test
arpl
xor
sbb
inc
popfw
out
pop
push
sbb
aas
jns
jbe
out
cmpsl
js
cmp
jmp
xor
fimuls
sbbb
mov
test
in
scas
mov
mov
clc
sub
inc
mov
xchg
arpl
repnz
test
or
scas
icebp
sbb
inc
sub
sahf
mov
mov
sti
fimull
shlb
mov
js
out
jl
rcr
jno
mov
push
repz
shl
aam
lods
sub
std
push
bound
xchg
inc
lock
cmpl
ljmp
test
adc
add
pop
call
test
xor
mov
nop
arpl
sub
fcoms
mov
sbb
xor
sub
mov
in
jo
jl
addb
out
cmpxchg
push
sub
bound
stos
adc
or
stos
xchg
outsb
jge
inc
ljmp
aam
cmp
sbb
shl
repz
mov
stos
pop
pusha
dec
jnp,pt
cmpsb
inc
push
mov
pushf
scas
out
cmp
ret
gs
insb
pop
sti
aas
popa
fs
cmp
fisttps
daa
sub
leave
dec
lea
loop
add
test
mov
jnp
out
cltd
cmc
hlt
loop
pop
das
xchg
sub
notb
add
in
arpl
fstpl
add
test
stc
div
aam
and
xor
dec
mov
int3
push
lret
ljmp
notb
fisttpl
jge
movsb
fmull
ret
fidivs
icebp
add
pop
jnp
mov
mov
dec
repz
xor
add
data16
fnstsw
mov
out
roll
add
loop
mov
in
pop
jnp
xor
and
test
mov
in
and
mov
inc
push
jl
lea
loopne
or
mov
add
fwait
or
and
jae
push
mov
and
daa
pop
xor
stos
adc
adc
push
ss
sub
aaa
xchg
dec
add
or
and
xor
ret
stos
pop
cwtl
and
in
push
repnz
dec
aaa
push
or
test
dec
add
clc
and
pop
in
bound
jne
add
imul
mov
pushf
pop
adc
lret
lods
inc
js
inc
pop
ficoml
popa
outsb
adc
sbb
jae
mov
ret
les
addr16
pop
stos
pop
push
fwait
ret
shl
jmp
cli
add
test
adc
insl
cmp
ds
ds
dec
push
dec
xor
xchg
or
mov
sub
test
xor
aam
push
popf
mov
scas
loope,pt
adc
push
mov
int
inc
lret
xor
sub
pop
sub
pop
outsb
test
or
push
push
int3
roll
cli
shll
mov
cmp
fwait
mov
xorb
dec
mov
inc
xor
xchg
inc
repz
mov
add
sbb
stc
frstor
addr16
int3
subb
jge
mov
in
sub
or
hlt
shrl
aad
or
outsb
repz
add
in
inc
imul
jbe
mov
pop
bswap
pushf
pop
jle
aaa
call
pop
push
pop
in
sti
dec
xchg
or
dec
scas
imul
mov
imul
mov
jo
mov
push
adc
adc
aas
mov
xchg
jno
push
sbb
dec
cld
mov
or
enter
mov
aaa
scas
mov
rcrl
out
push
and
add
aaa
jl
sub
cmpsb
mov
data16
mov
push
xchg
clc
and
fisubl
cmp
lds
mov
stos
ror
mov
daa
mov
repnz
mov
rcl
sbb
in
mov
cmp
push
or
mov
adc
inc
mov
pop
adc
xor
mov
adc
int
pop
subl
lock
aam
pop
push
and
adc
xchg
mov
ss
in
repz
cmp
je
push
jmp
and
mov
in
jnp
adc
and
cmp
test
cmc
and
cmpsb
stos
in
and
adc
cs
js
fwait
int
dec
out
or
and
ja
push
js
dec
loop
out
xor
stos
fidivrl
mov
out
imul
mov
movsl
fcoms
sub
shr
jle
xor
test
xchg
dec
mov
push
xchg
ret
lds
adc
lcall
add
or
pop
test
aad
xchg
push
xorb
jmp
mov
popa
pop
add
dec
enter
loop
adc
add
bound
sub
pop
cmp
mov
jl
icebp
push
fidivl
hlt
inc
inc
in
daa
insb
or
mov
loop
mov
dec
outsl
xchg
jle
mov
xlat
jae
cltd
outsl
ficomps
sbb
clc
push
dec
cld
mov
aaa
xchg
addr16
ljmp
push
fs
rorb
or
outsb
mov
daa
mov
les
lahf
mov
jnp
sahf
cltd
and
ret
test
cmp
mov
loop
fs
std
sbb
icebp
jl
inc
shl
push
xchg
pop
je
movsl
lcall
ss
or
jbe
dec
inc
pushl
sti
xorl
or
cmp
int
dec
pop
pop
add
add
and
mov
adc
pop
in
js
mov
aas
dec
rol
cmp
stc
iret
int
dec
xor
jo
int3
pop
sub
enter
test
stos
repnz
jne
scas
jb
mov
enter
std
add
xchg
out
pop
or
adc
movsl
divl
repz
pop
ret
inc
add
and
pop
jg
dec
and
fucomip
das
test
mov
mov
xor
icebp
loopne
loopne
add
and
jnp
or
fdivr
or
mov
les
aas
push
ret
sbb
call
push
testb
mov
mov
add
aaa
push
mov
sub
mov
sbb
push
mov
out
cli
lea
xor
cld
jle
sub
fwait
test
push
ret
pop
mov
je
inc
ret
leave
sarb
cmpsl
rcll
adc
push
ljmp
pop
pop
shrb
mov
add
outsl
fcmovu
mov
fcmovne
pop
rcrl
imul
jo
repz
lock
push
mov
push
xor
xchg
sub
jg
xor
test
loope
hlt
mov
jb
inc
lds
fistpl
jle
sbbl
cmp
xchg
or
test
dec
sub
fxch
mov
je
mov
out
pop
cmp
add
pop
xor
aam
imul
add
push
enter
outsb
das
test
sar
inc
mov
xor
insl
popa
dec
lods
pushf
xchg
leave
cld
movd
ss
push
and
clc
lahf
lret
mov
sbb
scas
push
sbb
mov
dec
insl
cmp
cltd
pop
aas
addr16
dec
or
mov
and
lock
rorl
jbe
ss
out
cmp
out
xor
or
out
out
lahf
inc
pop
je
mov
test
in
mov
jge
mov
shll
idivl
dec
mov
xchg
inc
nop
adc
inc
pop
xchg
xor
lock
loop
pop
outsl
pop
and
mov
fmul
adc
mov
add
xor
stos
pusha
add
dec
push
push
sbb
or
dec
mov
inc
into
lods
mov
sbb
and
shlb
dec
mov
xchg
xchg
and
cmp
push
mov
call
inc
lods
into
je
push
dec
xor
subb
and
in
mov
adc
push
nop
pushf
out
mov
frstor
cmpsb
fwait
push
cmp
xor
inc
lahf
lahf
cmp
jo
xor
loop
test
sti
int3
repnz
or
mov
lds
xchg
cltd
iret
in
mov
es
into
inc
daa
sub
insl
arpl
add
ds
push
jae
pop
mov
push
jmp
mov
sti
mov
mov
xor
sbb
pop
jecxz
xchg
sbbl
pop
fadds
adc
lret
and
insl
inc
jge
jp
dec
sub
js
outsl
fsubs
jg
test
and
ret
jle
loopne
popf
inc
fmulp
sub
mov
jns
jbe
or
inc
dec
scas
adcl
mov
mov
pop
push
inc
lret
mov
sub
int3
mov
inc
pusha
push
arpl
fcoml
cld
inc
out
loope
ss
push
pop
and
mov
fisubl
repz
sbb
mov
and
xchg
mov
mov
xchg
mov
jo
mov
ret
cmpsl
or
pop
subl
daa
jecxz
mov
movsl
shlb
pusha
mov
test
pushf
rcrl
leave
cmp
psrad
or
pop
lea
ficompl
pop
in
lcall
push
in
rcll
call
subl
stos
aam
or
enter
xchg
shl
push
push
sar
cmp
xor
sub
popa
adc
mov
pusha
lret
push
rorb
mov
mov
ds
pop
xchg
push
cmp
cmp
and
aas
add
add
xchg
subb
lods
out
mov
jnp
cmp
xchg
jnp
xchg
test
inc
xlat
out
fmul
add
in
lock
mov
ljmp
arpl
xchg
sub
int3
scas
insl
xor
mov
push
pop
inc
pop
out
xor
dec
pop
mov
hlt
jbe
push
sbb
insl
sbb
dec
and
pop
sub
je
xchg
mov
and
mov
stc
add
mov
or
pop
lea
lods
mov
inc
movsl
test
icebp
mov
pusha
pop
pop
sarb
lods
les
ljmp
mov
xor
push
or
add
cmpb
mov
cmp
push
push
sub
jge
out
ds
stos
pop
jnp
scas
inc
lds
push
fldl
jecxz
mov
xchg
ja
xor
sub
and
jns
adc
ret
push
xchg
sub
dec
adc
out
cmp
push
icebp
pop
stc
add
mov
loop
sbb
out
sub
shll
and
xchg
mov
adc
pop
mov
inc
mov
sub
cmc
adc
mov
mov
dec
test
mov
xchg
mov
repz
ljmp
aam
adc
mov
lea
jns
sbb
push
inc
outsb
mov
push
hlt
and
sbb
cmp
out
pushf
inc
mov
push
sbb
stos
or
xchg
ret
cmpsl
mov
jg
dec
jae
and
int3
out
and
jp
sub
lods
xchg
sub
je
mov
js
mov
xor
out
cmp
lods
cmc
fidivrl
shlb
mov
mov
scas
inc
sahf
mov
sarl
nop
in
inc
outsl
dec
sbb
mov
pop
daa
ffree
pop
arpl
mov
aaa
rcr
jp
mov
in
imul
push
lods
push
adc
or
pop
push
push
bound
jno
cmp
mov
adc
sbb
sub
sbb
lea
shlb
stos
jmp
mov
fwait
xchg
inc
rcrb
lahf
jnp
lret
cmc
call
les
push
jmp
sub
insl
sbb
into
in
cmp
iret
fbld
mov
push
cmp
mov
icebp
std
pop
hlt
insb
mov
or
mov
pop
xchg
imul
aas
shlb
loopnew
cmp
lods
gs
sub
pop
ss
mov
mov
xor
mov
repnz
xchg
mov
ljmp
cmp
xchg
pop
jg
pop
pusha
cwtl
inc
out
ljmp
loope
mov
aaa
cmp
adc
or
fidivl
js
cld
inc
mov
out
mov
stos
jle
fcoml
add
stos
mov
xchg
mov
or
pop
dec
hlt
pop
pop
xchg
jb
mov
sub
ret
push
imul
add
xlat
andl
or
xchg
cmpl
enter
jp
notl
pop
inc
test
or
mov
rolb
rcrl
mov
jecxz
dec
jbe
insl
pop
sub
outsl
shrb
inc
or
jo
ljmp
out
fsubl
lret
mov
pushf
lds
sub
xor
imul
stos
pop
pop
outsl
inc
test
xor
out
stc
mov
ljmp
mov
push
fisubs
adc
inc
and
mov
or
imul
inc
in
mov
xlat
psubsb
and
mov
xor
pop
xchg
or
addr16
subl
and
mov
aaa
dec
or
test
mov
sbb
xor
and
mov
std
jae
enter
aaa
cmp
std
enter
xor
inc
outsb
cltd
icebp
mov
mov
pop
inc
push
mov
es
es
add
out
stos
cltd
or
jbe
nop
idivb
and
adc
fimuls
adc
xor
stos
je
push
lods
cmp
push
sbb
pusha
loop
stc
scas
push
outsl
xor
inc
mov
mov
movsl
lock
jnp,pn
imul
add
fdivr
add
cmc
fisubl
and
add
push
pop
pop
jnp
scas
imul
in
sti
mov
sbb
pop
sarb
outsl
dec
mov
mov
xchg
sub
push
inc
adcl
cld
lea
pushf
xchg
inc
and
push
outsl
mov
push
insb
mov
adc
out
push
fs
cpuid
sarl
jmp
cmpl
jge
jmp
je
cld
add
lea
out
or
out
icebp
sub
int3
lcall
cmc
insl
mov
and
into
in
popf
fs
mov
lds
fadds
icebp
bound
mov
out
call
mov
dec
inc
mov
cmpsl
mov
lahf
push
jle
fnstsw
enter
mov
add
cs
fsub
xchg
dec
xchg
sub
pop
xchg
sti
push
jne
sbb
dec
xor
mov
xchg
cld
mov
outsl
xchg
stc
into
xchg
cmc
stos
std
orl
aaa
in
ret
mov
xor
loope
sub
loop
push
xlat
push
cmpsl
add
iret
repz
in
and
js
ds
jb
adc
inc
mov
xor
jns
addr16
cmp
mov
imul
fs
cld
mov
sbb
out
lea
push
xchg
jmp
shlb
adc
iret
jnp
test
dec
insb
aad
int
pop
pushf
stos
inc
in
repnz
mov
mov
aam
aaa
ja
test
jecxz
sub
xchg
int
sub
imul
xchg
sub
xchg
fsubrs
shlb
jbe
pop
jl
or
je
pop
loop
and
frstor
jns
pop
outsl
int
mov
xor
sub
jmp
or
out
add
xor
daa
cmp
mov
add
jecxz
jnp
fs
xchg
mov
test
aad
push
sbb
addb
movsl
bound
cwtl
xor
xor
in
cmpsb
test
je
fsubl
ljmp
popa
jmp
wbinvd
push
xchg
fdivr
enter
aaa
sahf
je
int
test
inc
xor
pop
scas
popa
jbe
add
popa
repz
fsubs
stc
mov
iret
push
xor
pop
jp
enter
mov
jmp
jg
loop
jb
dec
jbe
add
or
aaa
loopne
push
jnp
lret
daa
mov
loop
jbe
lret
inc
xor
lock
dec
fisubl
data16
pop
outsb
push
imul
enter
mov
into
xorl
sbb
fsubrl
loopne
or
mov
das
popa
adc
sub
adcl
cmpsl
add
fmull
iret
inc
int3
lcall
push
shr
inc
adc
cli
push
fsubrs
mov
ss
jo
pop
mov
scas
push
mov
xchg
adc
outsb
loop
sbb
aas
xor
jns
movsl
sbb
mov
xor
call
test
scas
pop
or
xlat
jno
fcompl
cmp
cs
rolb
js
insb
push
dec
insl
int
and
mov
sub
jo
adc
lods
shrd
rcll
out
xorl
dec
sbb
or
ja
fwait
xchg
ret
popf
jmp
push
jmp
mov
xchg
cmp
inc
pushf
out
test
test
shlb
jle
stos
jmp
sbb
stos
fildll
int3
stos
mov
ja
add
jno
or
mov
sbb
fildl
std
jae
push
jo
xor
call
dec
imul
sarl
and
push
lds
ds
sbb
xchg
xor
aam
test
push
mov
adc
test
adc
std
fcomi
xchg
ret
fidivs
sub
loop
cmp
test
cmpsl
mov
mov
sbb
sbb
jl
insl
mov
scas
in
orb
call
scas
xor
repnz
sti
mov
jecxz
add
add
and
ljmp
xchg
jnp
and
aaa
aas
fs
push
xchg
xchg
jg
mov
jle
lods
fs
mov
addr16
pop
mov
push
cmpsb
test
push
imul
test
inc
xchg
adc
lahf
mulb
roll
and
pop
dec
push
leave
xchg
or
lods
jg
test
push
push
movsl
ficoml
add
pop
rcrl
mov
cwtl
mov
cmc
jnp
or
xor
cwtl
mov
or
sub
cli
addr16
jnp
inc
sub
push
test
cmpsl
hlt
test
repz
xor
jmp
in
popa
adc
jne
mov
push
popa
push
xor
outsb
cld
aaa
or
imul
pushf
ret
scas
mov
ljmp
loop
jno
negb
inc
imul
add
popf
mov
sbb
inc
sti
mov
repz
les
ret
sub
xor
stos
cmpsl
insb
outsb
xor
flds
mov
fchs
adc
aad
xchg
xchg
ret
sub
aad
repnz
jae
adc
mov
addb
lret
rol
ss
add
inc
dec
ret
stos
mov
stos
add
dec
mov
push
sub
xorl
dec
mov
adcl
push
jmp
adcl
in
sbb
sbb
push
pusha
sub
outsb
add
outsb
sub
or
test
pop
mov
nop
adc
sub
jne
sbb
dec
ja
into
jg
leave
aaa
dec
fwait
cltd
inc
cld
negb
fmull
inc
sahf
pop
cmp
pop
inc
loop
mov
push
or
aaa
gs
test
lahf
loopne
push
inc
aaa
lcall
clc
xor
push
cmp
mov
in
mov
add
fs
sub
popf
loope
je
jns
dec
adc
cmp
in
xchg
dec
cmpsl
dec
mov
inc
mov
subb
fdivl
scas
lea
dec
adc
and
mov
popf
test
notb
dec
or
mov
dec
cmp
jmp
jle
add
sub
fisttpl
std
push
cld
imul
dec
pop
fstp
fisubrs
stos
or
jp
sti
jecxz,pt
xchg
adc
and
add
sbb
into
jl
and
sub
pop
es
outsl
or
push
and
mov
ljmp
add
sub
fmulp
repnz
out
jne
int3
mov
loop
popf
sbb
add
movsb
jns
sarl
sub
rcl
iret
inc
mov
leave
sub
xchg
lods
and
or
and
ss
add
jo
push
sbb
add
xor
shrl
movsl
inc
imul
inc
ljmp
mov
fsubl
lcall
jne
popa
push
aas
fistpl
test
in
repnz
dec
add
mov
dec
xlat
jmp
loopne
sbb
rorb
int
jmp
adc
pop
and
add
mov
cmpsl
cmp
add
mov
jo
sbb
sbb
les
idivl
popf
sub
adc
int3
or
in
xor
inc
xor
test
dec
cld
lret
ret
jnp
adc
mov
xchg
mov
mov
fwait
cld
pop
repz
fdivl
pop
dec
or
cli
mov
jg
les
cld
cmp
into
add
pusha
cmp
dec
mov
dec
pop
or
or
mov
cmp
ds
push
mov
test
sahf
arpl
jnp
ret
pop
cli
sbb
outsl
sbb
loopne
push
in
xchg
shrl
adc
pop
push
cmpsb
daa
mov
xor
jge
inc
in
lds
pop
mov
pop
mov
jle
subl
outsl
mov
sbb
pop
mov
and
xchg
inc
rolb
mov
push
movsl
cmp
fnstcw
push
xchg
mov
adc
pushf
add
cmpsb
call
sti
into
std
and
fsubrl
out
rep
lcall
imul
jp
and
cmp
xor
mov
xchg
rorl
jbe
enter
out
inc
ss
jo
ja
push
jnp
cmp
cltd
jmp
popf
mov
faddl
xor
pop
inc
daa
pushf
adc
dec
loopne
std
out
jg
dec
xor
je
push
push
dec
xor
sbbb
xor
data16
xchg
add
scas
mov
dec
add
mov
repnz
mov
cmp
in
flds
mov
movsb
outsl
adc
shl
ret
in
sti
fistl
mov
adc
in
add
add
divl
sbb
cmp
pushl
popl
flds
sbb
xlat
subb
or
cmpsl
sub
push
jo
jne
outsb
xor
xor
add
sbb
test
jg
out
nop
cld
add
pop
mov
icebp
lahf
out
shl
loop
dec
pop
imul
inc
loopne
stos
or
ljmp
push
inc
das
stos
roll
shrb
ss
imul
testb
inc
and
sbb
fcmovnbe
je
imul
mov
fisubl
lea
test
movsb
rol
push
add
and
call
ret
dec
mov
clc
xor
dec
aas
insl
xchg
lds
pop
stos
xchg
mov
adcb
add
dec
mov
stos
xchg
inc
iret
dec
leave
cld
pusha
or
pop
xchg
jmp
pop
mov
mov
outsb
ja
or
sbb
push
cmc
cmc
adc
in
loopne
and
fs
and
sbb
mov
pop
shlb
xchg
jecxz
lds
arpl
push
js
sbb
xchg
mov
scas
adc
mov
imul
inc
adc
movsl
ret
and
pop
mov
shr
test
add
pop
imul
sahf
in
cli
dec
inc
or
rcrb
xchg
push
int3
fstpt
ja
mov
jns
mov
test
imul
push
fsts
shlb
rcll
inc
jbe
nop
jno
dec
movsl
sub
jnp
pop
pop
jno
fistps
out
pusha
dec
fistpl
mov
jae
or
imul
ret
mov
add
cli
outsb
mov
std
sub
sbb
mov
fdiv
in
jno
addps
push
int3
int3
push
sub
mov
lods
pop
push
cwtl
nop
imul
sub
sarb
stos
mov
add
movsl
test
xchg
xchg
pop
pop
pop
loope
shr
push
rcrb
movsl
or
adc
adc
icebp
mov
jnp
dec
push
mov
daa
loope
add
jns
rcl
jl
adc
xor
out
cld
call
push
sub
pusha
sbb
movsl
lahf
push
lods
sbb
jg
sub
mov
jmp
fwait
ss
ret
insl
push
fistpl
and
mov
enter
aam
xchg
jno
aaa
push
mov
xor
and
das
cmp
icebp
cmp
fdivrs
sti
xchg
insb
gs
add
and
xor
dec
cmc
gs
adc
inc
pop
xor
scas
rolb
add
and
fiaddl
fs
xor
addr16
mov
mov
stc
je
jne
mov
shrb
xor
pushf
push
mov
ja
xor
ficoml
pop
jle
and
sub
cmpb
ja
and
cmpsl
lahf
repnz
pop
scas
dec
xchg
and
ja
jne
popa
mov
sub
scas
mov
sub
in
out
fdivs
and
or
int3
push
or
idivb
cmp
sbb
clc
pop
ss
sub
rol
fld
fcoms
ss
aaa
jge
sub
cmpsl
jne
inc
leave
mov
ret
imul
aam
into
pop
fnsave
cmp
adc
jle
fnstcw
jno
sub
cmp
xor
adc
push
adc
sbb
and
xchg
cld
repnz
push
xchg
int
dec
mov
pushf
lcall
fucomi
cmpsb
dec
hlt
xchg
ja
adc
fisubrs
in
andl
add
cmpsb
lds
adc
jmp
cmp
jae
push
js
pop
gs
pop
fstps
mov
clc
mov
push
inc
jecxz
sub
enter
lret
add
adc
packssdw
pop
lret
and
test
aam
cmp
outsb
cld
nop
arpl
lcall
add
or
fistpl
mov
dec
inc
xor
xor
or
pop
pop
and
je
mov
ret
adc
in
arpl
dec
imul
dec
dec
mov
xchg
mov
insl
ja
dec
mov
data16
xchg
jb
sbb
add
mov
jb
mov
mov
jo
fmuls
mov
fwait
cmp
xchg
mov
mov
test
mov
mov
leave
sub
hlt
xor
dec
js
jne
xor
add
inc
mov
sub
daa
stos
das
inc
lahf
sub
add
pop
fidivs
in
inc
dec
stos
xchg
dec
subb
outsb
xchg
imul
out
clc
mov
and
out
sbb
xor
xor
sti
imul
adc
add
push
fwait
jne
loope
andl
bnd
fimuls
and
inc
stos
xor
lds
mov
int
push
stos
push
push
cmp
mov
pop
iret
lods
mov
or
inc
xchg
mov
mov
lea
loope
repnz
dec
mov
stos
ja
jle
cmc
int
mov
inc
or
int
xor
pop
and
out
aaa
out
pushf
out
or
sarb
push
mov
xchg
sarl
pop
push
lea
js
movsb
clc
pop
inc
iret
jl
ja
daa
adc
enter
sbb
ja
xchg
imul
sub
push
loope
ret
xchg
dec
adc
stos
outsb
xor
insl
mov
mov
test
imul
das
imul
movsb
shrl
loopne
fcmovne
shll
rcl
dec
push
and
xor
iret
dec
add
pop
ss
rorb
mov
add
aam
dec
mov
ja
shrb
scas
ljmp
testl
imul
lcall
xchg
lods
jp
lds
inc
test
sbb
sbb
test
jp
adc
push
and
add
test
dec
test
ja
mov
add
aas
adc
notb
stos
ret
js
dec
mov
push
popa
fists
in
addr16
sbb
jge
out
xor
push
and
pop
push
mov
dec
movsl
repnz
push
xor
cmpsb
mov
and
test
in
mov
gs
mov
push
subl
add
jp
and
je
push
adcl
jnp
into
cmp
jnp
rcrb
xchg
add
shr
jg
mov
sub
scas
inc
dec
jg
ljmp
jb
or
jge
or
and
call
xchg
ds
adcl
mov
mov
mov
popa
mov
jae
pop
lea
orl
mov
lcall
push
mov
sahf
push
or
sub
xchg
mov
mov
cmp
jg
sub
nop
or
stos
rcll
push
enter
imul
loop
test
mov
lods
ret
adc
scas
sbb
insb
jmp
jge
lret
enter
add
push
jg
idivl
ficoml
cmpsb
roll
push
jl
out
push
cmpsb
clc
bnd
lcall
loop
cltd
loope
or
movsl
mov
push
gs
cmp
xchg
fs
and
ret
scas
xchg
in
jge
shrl
cmp
push
adc
mov
mov
loopne
xchg
jle
psubw
sub
add
sbb
dec
jg
add
mov
pop
pop
xchg
mov
iret
mov
pushf
push
aas
imul
insb
dec
mov
and
jge
cwtl
fldenv
cli
inc
mov
fldenv
jp
push
dec
and
dec
pop
mov
push
rorl
jne
pop
push
mov
sti
cmp
inc
add
leave
int
sbb
ret
stos
cwtl
fisttpll
add
mov
xor
daa
movsb
int
fsubrl
mov
faddp
loopne
rcll
lock
jno
sbb
popa
push
sbb
mov
xchg
js
jb
inc
push
hlt
push
rorl
fiadds
lds
shr
sub
mov
dec
dec
enter
cmpsb
mov
and
lds
mull
jl
xor
fmuls
cmp
lock
into
loope
fs
andl
push
mov
lea
adc
adc
outsb
sti
xchg
cmpsb
cmp
add
inc
push
cmpl
call
bound
push
iret
pop
int
cld
sub
xchg
cmpsb
arpl
jg
xor
sahf
daa
test
in
xor
shrl
popf
pushl
pop
not
dec
sub
adc
cmp
jb
xor
mov
or
or
inc
push
lods
cs
ljmp
stc
subl
lret
loop
stc
mov
into
pop
jle
push
shll
mov
div
lret
add
js
adc
stos
ficoml
negb
mov
mov
mov
mov
or
cmpsl
pop
gs
test
dec
jmp
bound
cmp
push
loop
ret
fcomps
popf
in
xchg
push
outsl
xor
cmpsb
jbe
push
repz
mov
xchg
pop
repnz
mov
cltd
push
cs
pop
loope
stos
cmp
push
fwait
shlb
in
insl
mov
cmpsl
inc
push
push
cld
cmpsl
lea
and
mov
dec
out
jp
loopne
hlt
pusha
push
cmp
jecxz
icebp
sbb
ja
mov
cmp
sbb
je
outsb
cmp
cmp
sti
int3
fcmovb
mov
nop
and
movsl
stos
js
cmpsb
nop
jge
loopne
adc
arpl
imul
adc
jg
push
sub
addr16
mov
movsb
aad
xchg
ds
adc
rorb
int
in
fists
shlb
loopne
jo
xor
push
xchg
sub
movsl
jns
sbb
outsb
rcll
fcomps
js
insl
add
outsl
xchg
orb
ss
mov
mov
lods
scas
sub
add
cli
outsl
dec
sarl
rol
mov
sahf
xchg
and
or
ror
loope
sub
lret
dec
in
push
push
cmp
mov
sub
add
xchg
dec
cmp
dec
mov
ds
shl
cmc
js
lea
adc
fwait
std
or
pop
ljmp
xchg
aad
fsubrp
mov
leave
inc
cmp
xorl
je
lea
and
jno
push
cli
rorb
lods
pop
hlt
popf
fwait
jns
rol
xchg
mov
push
sub
lea
push
adc
in
fisubrs
mov
fwait
jbe
pop
mov
lret
and
clc
mov
push
dec
mov
mov
or
sbb
or
rcr
sub
das
adc
push
popf
inc
jb
xchg
out
mov
xchg
ficoml
and
sub
and
or
mov
lcall
push
sti
jne
inc
mov
mov
adc
inc
lds
dec
adc
aam
xchg
mov
adc
cld
mov
pop
jo
mov
cltd
dec
rcl
or
push
aaa
inc
add
xchg
sub
insb
out
pop
mov
sub
sbbb
in
inc
xor
xchg
jmp
roll
sti
push
and
jbe
call
mov
xor
aam
test
pop
add
pop
fisttps
cmp
in
and
std
dec
dec
in
mov
pop
js
pop
fnstsw
lock
sbb
mov
pop
iret
dec
jg
pusha
fsubrs
fldl
clc
mov
fs
adc
sub
sub
repnz
leave
inc
cmp
jnp
faddl
lods
jge
jne
mov
bnd
sbb
ds
cmp
std
rolb
pop
push
mov
cld
jo
js
push
ss
and
clc
fnsave
ret
cmp
mov
iret
jle
enter
cmc
jo
lcall
pop
test
mov
xor
je
and
loopne
mov
xchg
jmp
inc
pop
and
movsb
and
cmpsl
or
ljmp
rolb
psubb
js
inc
inc
jns
lock
add
popa
sub
mov
add
out
std
popf
mov
lods
xlat
cmp
ja
into
or
mov
pop
and
jne
lds
lods
movl
repnz
stc
dec
popf
add
mov
xor
add
pop
aad
arpl
push
jecxz
lods
xchg
push
xchg
xchg
mov
cmp
mov
inc
aad
scas
pop
push
dec
jp
test
arpl
push
mov
fldl
jge
add
aam
push
dec
inc
dec
and
adc
adc
xlat
dec
xchg
lods
sub
cmpsb
les
dec
mov
hlt
mov
mov
adc
mov
dec
push
xchg
int
lock
mov
dec
and
mov
fs
sub
ss
add
fld
pop
dec
jbe
or
and
dec
stos
xchg
cmc
cmp
dec
hlt
adc
jb
and
aaa
or
shr
loope
mov
cmpsl
adc
insl
jle
adc
ret
pushw
pusha
js
lods
aam
outsb
cli
cmp
hlt
lock
xor
sbb
xor
sbb
in
push
jp
cld
insl
push
mov
mov
addl
cmpsb
sub
sbbb
inc
cld
mov
push
rsm
in
nop
das
iret
adc
addr16
pop
sbb
or
cmp
ds
mov
movsb
xchg
ds
jmp
stc
add
push
xchg
jns
push
lods
push
cltd
mov
cmp
jne
jmp
mov
mov
jb
stos
inc
mov
jg
cmp
jecxz
sub
std
insb
outsl
out
jb
push
add
add
add
and
xchg
jg
jecxz
shr
enter
mov
shrb
mov
push
daa
stos
lret
sbb
mov
add
aas
sbb
dec
cmp
lcall
ja
sar
mov
push
pop
xchg
mov
jle
push
mov
add
sbb
inc
jmp
scas
xchg
inc
mov
xchg
mov
pop
mov
cmp
inc
push
pushf
sti
jns
pop
inc
add
xor
fadd
xchg
sahf
fldl
and
add
out
jmp
sti
insl
jecxz
mov
je
fsts
or
and
xlat
inc
arpl
jp
cltd
mov
xor
mov
inc
push
jnp
repz
cmp
mov
outsb
dec
aad
fwait
lock
popf
sbb
add
xor
push
mov
xchg
sbb
hlt
fisubl
sub
js
pop
jne
inc
mov
out
sub
dec
outsb
or
stc
push
inc
daa
cmpb
jbe
icebp
jl
les
add
nop
mov
xchg
jmp
push
mov
adc
mov
xchg
out
xor
sub
dec
xor
mov
ds
inc
sub
dec
push
cmp
sub
pop
movsl
push
inc
out
cmc
push
addr16
test
outsl
iret
mov
cli
sahf
mov
push
addr16
and
nop
xchg
fbstp
int
les
stc
movsl
push
sbb
push
fscale
mov
gs
cld
fcoms
sbb
aas
cwtl
xor
fcmove
ljmp
and
pusha
xorb
push
xor
cli
lods
cmp
pop
icebp
lock
orl
dec
jno
or
push
push
imul
mov
pop
push
cld
sbbb
push
sahf
xchg
cmpsl
xchg
iret
cmp
js
stc
movsb
and
ret
aam
leave
lcall
cli
cmp
cs
jae
stos
lret
mov
pop
loope
nop
push
fldenv
inc
sbb
add
xchg
mov
lahf
js
jns
ljmp
cli
cmp
inc
test
sbb
jl
jns
aad
lds
and
cmp
dec
add
push
in
filds
popf
fdivs
mov
jl
sub
push
pop
fs
adc
xor
push
cld
loope
cmp
cwtl
or
push
ja
leave
popa
rcrb
mov
mov
add
repnz
fisttpll
ljmp
push
lret
out
sbb
adc
add
jecxz
sbb
int3
je
xor
mov
shrl
xor
ljmp
mov
fnstcw
jmp
pop
mov
or
sbb
in
xchg
adc
inc
and
mov
dec
fiadds
ret
and
notb
call
or
sub
adc
imul
aas
push
or
rol
divl
in
insb
xchg
jecxz
mov
sub
push
mov
in
push
movsl
lock
or
mov
fld
adc
push
dec
xchg
push
bound
cmp
push
scas
mov
aam
xchg
sub
fs
push
lcall
sub
pop
sbb
adc
xor
arpl
inc
rclb
test
subb
inc
mov
and
rolb
or
outsl
mov
mov
pop
xor
lods
push
xor
negb
pop
sub
xor
mov
push
outsl
hlt
pop
xor
das
xchg
inc
push
mov
addr16
in
insb
adc
mov
cmpsl
inc
nop
loope
add
sbb
fs
cmp
sti
push
inc
sbb
pop
mov
xchg
ja
dec
inc
mov
mov
icebp
lret
jns
jmp
cmp
fdivs
sbb
and
xchg
inc
mov
fiadds
jbe
ss
dec
and
lcall
push
push
push
cmp
adc
jns
inc
icebp
and
jl
rcr
out
jbe
lret
pusha
sub
imul
xor
in
imul
and
mov
jg
pop
test
or
adc
repnz
fdivrp
ljmp
incl
mov
jb
mov
jae
sahf
or
push
fmul
test
lea
mov
cmp
pop
lock
dec
stc
loopne
xor
mov
push
cmp
jp
sbb
rclb
adc
insb
mov
rorb
mov
push
lcall
outsb
mov
add
aam
std
cvttps2pi
nop
andl
aad
mov
sbb
shrl
push
mov
in
xchg
push
pop
pop
sub
lock
dec
fadd
loope
inc
arpl
inc
into
mov
movsb
out
lods
in
mov
popf
cltd
or
jecxz
out
push
jb
sbb
out
adc
lds
mov
mov
or
insl
adc
sub
mov
cmpsl
sbb
ds
movsl
xchg
pusha
xor
mov
mov
in
sub
mov
sahf
pop
retw
int
adc
add
xchg
popf
or
sbb
ds
mov
inc
stos
mov
or
int3
fucom
inc
add
jp
fsubrs
adc
cmp
jb
mov
push
push
ja
xchg
sub
mov
inc
fnstsw
mov
cwtl
int
jnp
adc
add
mov
mov
jge
int3
pop
scas
mov
dec
dec
jmp
aaa
scas
mov
lock
mov
movsb
loope
xor
faddl
addr16
rcrb
cmc
loop
rolb
sub
push
mov
inc
test
mov
out
popf
jp
inc
imul
scas
scas
xchg
daa
xchg
sbb
push
jo
clc
int
imul
pop
popa
bound
in
xorl
xchg
cmp
cmp
push
lods
jns
cmc
shrb
cmp
jp
and
or
mov
sub
and
fdivrl
enter
xor
scas
stc
test
repnz
jae
push
cmp
jg
inc
or
mov
mov
push
pop
mov
fwait
mov
and
aad
xor
gs
xor
addr16
dec
xchg
sub
lcall
aam
mov
pop
imul
outsb
mov
mov
inc
or
imul
mov
cs
or
inc
inc
pop
xor
repz
inc
mov
popf
add
add
dec
shll
cmp
cmc
repz
les
in
maxps
jb
push
fs
sti
popf
cmp
cld
aaa
mov
push
dec
dec
pop
mov
out
popf
stos
fdiv
lds
or
fcoml
sbb
std
ret
cli
jbe
call
in
sub
sbb
ret
sub
push
jns
lret
or
sub
xchg
inc
pop
pop
iret
pop
sub
add
out
enter
movsb
fs
stos
cmp
cmove
pop
adc
xor
jno
adc
cmc
inc
insl
push
and
lret
test
sub
or
jmp
or
dec
mov
push
pushf
int
cld
push
fidivrs
xor
in
arpl
fdivrs
lret
sbb
adc
sub
cmp
jg
jge
fdivs
imul
loopne
adc
jle
dec
pop
scas
lock
fsubp
pop
lea
movsb
mov
jp
mov
or
into
xchg
sbb
subl
sbbb
mov
scas
bound
hlt
add
xchg
dec
and
dec
fdiv
shrb
sub
in
pushf
outsl
vpunpckhwd
adc
mov
and
inc
cmp
xlat
push
mov
pop
mov
jecxz
test
dec
mov
ds
out
mov
adc
xchg
jns,pn
add
xlat
loope
pop
cmpb
out
jns
jae
in
mov
mov
cmpsb
lods
std
add
sbb
adc
popa
out
movsb
test
mov
test
sub
mov
jl
scas
ret
mov
mov
std
stc
push
fnsave
mov
xchg
in
fucompp
popf
mov
sbb
outsl
push
stc
pop
add
cmp
clc
cmp
out
cmp
inc
or
std
dec
adc
fwait
sahf
arpl
pop
out
xor
mov
adc
add
lcall
orb
cltd
xor
dec
shrb
or
call
sub
popf
or
cwtl
into
repnz
mov
mov
mov
inc
rcrb
inc
cmp
and
call
mov
repz
dec
ret
pcmpeqb
or
jno
sub
xor
add
sbb
inc
jl
adc
pop
mov
fbld
popa
les
add
mov
add
imul
repnz
movsl
outsl
in
mov
push
idivl
mov
mov
sbb
add
gs
test
jmp
mov
or
sahf
int
imul
dec
inc
rcrb
sahf
faddl
add
sub
mov
lcall
xor
mov
dec
cli
cmp
adc
and
outsb
jl
xchg
hlt
dec
cmpsb
or
mov
inc
add
lods
int3
mov
cmp
dec
jbe
sbb
imul
jle
enter
stos
mov
sbb
addr16
repnz
jnp
call
sbb
jno
test
lods
rcll
imul
mov
arpl
cmp
ret
in
ljmp
add
ret
xor
cmpsl
and
les
cli
popf
xchg
xchg
movsb
scas
jmp
loopne
mov
test
ljmp
pop
inc
push
pop
jmp
cmp
push
in
mov
inc
xor
jo
xor
sbb
bound
ret
or
inc
xchg
push
xchg
push
cmp
jmp
add
loope
jns
cltd
and
sbb
pop
cmp
outsl
dec
das
pusha
popf
daa
shrl
clc
dec
add
fcoms
repnz
icebp
lret
stos
mov
dec
ja
inc
add
mov
dec
aaa
add
add
adc
mov
shrl
aaa
dec
sbb
loop
sbb
add
jecxz
out
jb
es
test
rcl
lret
mov
ret
rorb
push
sahf
jmp
call
xor
push
in
test
adc
jae
or
stos
loopne
outsb
in
push
mov
mov
mov
dec
ss
test
pop
xchg
cli
sarb
lret
sub
pop
sti
pop
mov
jo
push
adc
jecxz
pop
jo
add
test
add
push
xchg
pop
movsl
add
decl
daa
xlat
lcall
or
outsl
jp
sahf
mov
mov
lret
out
push
adc
ret
mov
imul
rclb
xchg
insl
xor
repnz
mov
sti
cwtl
mov
fisubrs
test
fst
jbe
inc
out
push
fcoml
sbb
sub
stos
insl
mov
in
push
iret
test
cmp
push
or
jne
aam
and
bound
fs
mov
mov
shll
jbe
xor
repnz
and
pop
sti
mov
inc
xor
inc
js
sub
stos
xchg
fidivrl
ret
xchg
pop
push
mov
cs
push
or
rol
jno
push
mov
inc
loop
lods
out
pop
movsb
outsb
ja
xor
adc
add
and
in
xor
fwait
dec
xlat
in
adc
das
jecxz
into
xorl
mov
fwait
xchg
popf
dec
inc
outsb
adc
js
aas
rcrb
jb
ret
xchg
add
push
stos
rorl
iret
push
fisttpl
pop
pop
xor
repnz
xor
cltd
add
mov
mov
in
and
mov
popf
outsl
cltd
loop
sub
lcall
adc
xor
add
inc
pop
mov
nop
iret
call
and
pop
dec
cld
sahf
shrb
mov
cld
inc
mov
mov
mull
out
pop
imul
and
pusha
xor
iret
outsl
xchg
out
into
in
push
lea
xor
fdivp
aas
xchg
mov
xchg
or
dec
mov
cmp
mov
mov
sbbb
mov
ficoml
leave
inc
sub
insl
or
and
popf
mov
sbb
add
sbb
in
cmp
popa
daa
mov
dec
sbb
xchg
inc
stos
rol
in
dec
sub
std
mov
jbe
clc
mov
stos
cmp
into
jmp
add
jo
stos
sbb
sbb
add
jg
inc
or
and
jle
loop
ret
shr
sahf
cmpsl
lcall
xchg
xor
roll
mov
icebp
cmc
mov
mov
shlb
out
xchg
pop
lea
lret
or
fnstsw
fstps
cs
pop
add
scas
rclb
mov
sub
sbb
push
sub
jl
or
push
repz
out
ljmp
arpl
mov
or
mov
lret
jne
popf
iret
jle
pop
js
mov
out
cmpb
add
aas
cmp
push
adc
stc
cmp
fs
clc
sbb
or
cmc
sahf
clc
out
or
push
lods
enter
xchg
dec
pop
add
arpl
pop
subl
fsubrl
popa
sbb
pop
xchg
sahf
jl
rclb
movsl
mov
or
jns
add
bound
jle
sbb
in
sbb
add
xor
mov
mov
xor
xor
mov
xchg
or
imul
into
mov
ljmp
mov
xchg
cs
add
shll
dec
fstl
dec
xor
in
push
mov
pop
dec
int
add
lret
fldl
jae
lahf
sbb
icebp
pop
mov
adc
in
push
cwtl
lock
movsl
xor
xchg
and
clc
sub
xchg
jo
test
mov
mov
jp
in
mov
dec
int
imul
sub
and
sub
inc
inc
sub
add
push
dec
add
mov
add
xlat
movsl
dec
std
cmp
jecxz
clc
xor
scas
cmpsb
psrlw
and
or
dec
xchg
sbb
adc
sarl
push
lods
popa
aad
inc
imul
icebp
sub
pop
mov
andb
pushf
xor
jecxz
jb
add
jl
push
mov
or
pop
ja
adc
hlt
adc
es
lahf
pop
xchg
divl
sub
sub
xchg
hlt
mov
cmp
dec
pushf
and
arpl
dec
mov
pop
push
cld
test
or
adc
and
sub
sbbb
mov
lea
lds
lret
scas
mov
sub
sub
fcomp
cld
aas
mov
cmpsl
movsl
push
sbb
icebp
or
push
out
repz
add
leave
enter
cmp
pusha
pop
int3
cmp
lahf
insl
and
test
gs
fwait
cmpl
pop
or
sti
sti
push
pop
cmc
push
shl
mov
xor
pusha
mov
or
rclb
push
popf
mov
or
xor
repnz
mov
mov
pop
in
jae
cmpsb
fcmovu
popa
nop
das
push
aad
sti
cmpsl
arpl
scas
lock
pop
and
mov
in
fistpl
cmp
cli
fcomip
fiadds
loopne
in
mull
or
push
enter
push
das
rorl
push
adc
mov
or
shrl
jb
sbb
nop
sbb
ja
adc
jnp
sub
inc
shr
cmp
cmp
into
pop
into
mov
outsb
mov
mov
xor
iret
push
mov
lret
jns
xchg
and
adc
sbb
aaa
cs
jge
test
add
jns
loop
mov
xchg
dec
cmp
movsl
jmp
dec
xor
adc
fs
fstpl
test
inc
mov
insl
push
sub
imul
pop
mov
lea
cmp
jecxz
mov
or
fsubs
aas
aad
mov
xor
stc
dec
xchg
test
dec
xchg
lahf
adc
mov
je
mov
inc
rcll
and
cmp
jne
dec
aad
movsl
movsb
mov
dec
mov
pop
ss
out
xchg
add
cs
test
add
xchg
mov
stos
aam
mov
inc
pop
cmp
test
cmp
xor
xor
adc
mov
push
xchg
je
xchg
xchg
cmp
pushw
cmpsb
mov
inc
in
dec
test
sbb
inc
mov
sti
xchg
push
in
push
icebp
mov
inc
mov
add
loop
mov
cmp
and
sbb
xor
es
fdivs
outsl
jae
cmp
push
pop
loope
stc
or
adc
mov
stc
jmp
stos
mov
in
cwtl
pop
jbe
push
pop
loopne
call
arpl
stos
test
and
popl
lock
adc
dec
sbb
add
in
and
pusha
addr16
je
test
push
mov
pushf
xchg
cmp
pop
mov
rolb
pop
int3
mov
jmp
fstpl
test
das
dec
inc
loope
lods
cmpsl
call
ret
xlat
and
mov
xchg
push
test
out
imul
pop
rcrb
shll
sbb
inc
in
push
fdivrs
cmp
dec
pop
mov
das
je
xchg
mov
aaa
pop
popa
dec
sbb
imul
jg
mov
les
xchg
cmp
pop
int3
addl
cmp
pop
or
inc
mov
das
and
rol
fsubrs
lret
xchg
push
push
rol
xchg
jnp
pop
sub
inc
inc
push
lods
sbb
in
mov
pop
outsl
addr16
cmp
stos
fucomp
jg
jle
fstpl
repz
pop
sbb
cmpsl
stos
loope
nop
push
pop
rol
pusha
add
jo
dec
push
lods
daa
xor
cmp
mov
dec
dec
jmp
cli
fs
iret
xorl
notl
jb
scas
popf
sbb
xor
shrl
int3
jg
ljmp
mov
out
daa
dec
imul
cmp
or
and
pop
das
and
jmp
sbb
ficoms
push
mov
jp
mov
ss
cmp
sub
sbb
lret
neg
mov
xchg
xor
fs
add
cmp
ljmp
icebp
insb
sti
push
in
xorb
pop
push
rolb
mov
std
and
inc
pop
push
sbbl
cs
or
je
inc
xlat
inc
cmp
mov
in
loope
and
adc
pop
ja
test
out
jmp
adc
fisubrs
pop
cmpsl
mov
cmp
mov
xchg
loopne
lock
mov
call
inc
push
xor
ds
sub
stos
scas
jmp
dec
dec
jg
jnp
pop
dec
sbb
sub
cli
inc
xchg
or
int
fs
push
movsb
arpl
xlat
out
push
dec
xchg
add
lret
jg
mov
pop
lcall
mov
arpl
jmp
cwtl
fldcw
imul
ss
mov
mov
mov
jae
lock
pushf
enter
xchg
add
arpl
sbb
mov
adcl
xorb
push
nop
adc
xor
loop
out
test
pop
out
cmp
push
scas
lock
repz
in
out
int
aad
cwtl
fdivrl
daa
cmp
xchg
xchg
jbe
mov
xacquire
cld
ss
outsb
jge
fldenv
cld
xchg
js
mov
or
xchg
imul
xor
incl
das
adc
pop
mov
bound
inc
mov
inc
dec
out
popf
mov
sti
ja
push
mov
mov
cs
cld
or
ret
movsb
mov
ror
fildll
jmp
lret
scas
sbb
shr
add
das
and
fldcw
outsl
mov
or
push
imul
repz
inc
movsl
movsb
jecxz
shl
mov
xlat
in
loop
inc
jno
jb
test
orl
jns
sbb
or
fmull
or
in
jb
stos
mov
popa
push
jns
xchg
pop
mull
insl
adc
pusha
sub
sbb
mov
clc
mov
xchg
mov
mov
sub
repnz
in
movsb
loope
adc
jns
int3
mov
stos
out
pop
stos
adc
pop
pushf
push
mov
mov
out
and
push
fiaddl
inc
xchg
jle
enter
mov
insl
ret
clc
and
test
repnz
div
and
call
fidivrs
cmp
out
and
dec
or
cmp
inc
jns
pop
or
lods
out
sub
sbb
mov
stos
and
or
mov
sar
in
shl
xor
mov
lods
cmpsb
sti
inc
push
sub
mov
hlt
pop
mov
and
pop
dec
movb
jns
orb
aam
cmp
out
stc
xchg
lret
xchg
jne
arpl
jecxz
jbe
dec
out
jp
lods
movsb
test
into
pop
in
mov
clc
add
sti
sub
xchg
mov
ret
and
adc
adc
xchg
xchg
xchg
push
movsl
push
xchg
add
sbb
mov
ss
dec
mov
out
mov
decb
out
sahf
or
pop
xchg
insl
popf
rcll
xchg
add
fisttps
mov
out
mov
mov
int
js
js
sahf
mov
fiaddl
jg
aaa
or
push
lcall
inc
insl
add
fwait
aas
inc
clc
or
add
jg
shl
inc
adc
subb
xchg
or
lahf
into
mov
xorb
adcb
mov
rcrl
out
push
cmp
mov
xlat
pop
sbb
xchg
je
loopne
xor
push
add
iret
sub
sbb
rorb
loope
and
push
or
jg
test
sti
add
shl
or
stc
cltd
mov
in
cmp
fists
cmp
mov
inc
loope
dec
or
daa
nop
adc
sub
xchg
sbb
mov
fisttps
sbb
fwait
popf
pop
dec
lret
cmpsl
jl
sub
sbb
mov
xlat
and
repnz
xchg
xor
fsubrs
lods
out
mov
ret
idivb
jecxz
ror
lock
mov
mov
loop
pop
sbbl
bound
popa
les
mov
iret
enter
or
repz
sub
pop
mov
xchg
iret
mov
cli
shl
clc
xchg
loope
pop
or
adc
inc
mov
imul
lods
int3
jno
testb
stos
xor
push
test
pop
das
andb
adc
fwait
and
mov
sub
aaa
inc
push
push
rorl
test
sub
cmp
sub
cli
pop
lcall
push
enter
and
into
mov
dec
enter
sbb
sbb
mov
ret
imul
jp
mov
fsubl
jmp
fiaddl
jnp
cltd
out
rolb
hlt
sbb
sahf
jne
sbb
add
nopl
lods
pop
mov
data16
repz
dec
and
xor
push
test
dec
push
jae
sub
mov
xlat
in
pop
loopne
pushf
jp
pop
clc
xchg
je
out
mov
adc
fs
cmp
in
sahf
call
sahf
lock
dec
jp
insb
lret
dec
int
in
mov
dec
push
pop
pop
pop
sbb
adc
sbb
sub
xchg
cmp
pop
aas
mov
adc
mov
repz
sub
int
pop
lods
outsb
cmpsl
lahf
add
dec
jne
jns
daa
scas
lahf
xor
stc
inc
aas
and
cmp
pop
and
push
sbb
mov
int
and
or
outsl
fdivs
dec
sbb
ret
cmp
negb
inc
push
popa
xor
ret
arpl
push
lcall
push
and
data16
pmuludq
sbb
and
and
call
fmulp
leave
out
cmp
lret
pop
push
xchg
mov
push
dec
loopne
sbb
js
adc
in
in
les
xor
cmpsl
or
dec
aad
fiaddl
cmpsb
sub
or
xor
and
int3
orb
pop
bound
dec
std
stc
xchg
pop
sbb
ja,pt
loop
cltd
pop
addb
adc
sarb
xor
sbb
mov
push
add
test
mov
inc
pop
ficompl
xchg
movsl
out
and
push
sub
cwtl
stos
xor
inc
inc
mov
or
in
fcmovbe
sub
sbb
mov
pop
and
mov
push
int3
stos
inc
lret
push
call
test
cs
fs
xor
push
scas
andb
mov
cmp
inc
leave
sbb
dec
test
xor
icebp
sbb
xchg
mov
dec
or
xorl
and
xor
or
bound
pop
xchg
mov
xor
or
pop
nop
pop
fdivrl
push
cli
pop
push
pop
sbb
lods
mov
pop
mov
int3
pop
and
cli
les
mov
lret
call
test
lret
aad
push
add
sub
cmc
add
insl
mov
stc
mov
sbb
dec
mov
jecxz
push
push
mov
fs
cwtl
mov
mov
call
cmp
call
out
pop
test
dec
sar
dec
dec
mov
fs
flds
jge
in
pop
push
jle
scas
lods
jns
gs
dec
and
push
sub
lret
adc
les
fs
aad
stc
fisubl
test
int3
pop
sbb
jb
jbe
imul
inc
ljmp
push
xchg
lods
scas
dec
das
sbb
sub
jmp
mov
or
icebp
cwtl
mov
cli
int
lods
cwtl
jns
ficoml
icebp
mov
xchg
mov
outsb
insb
jne
mov
xor
mov
inc
movsl
int3
xor
call
sub
cli
mov
xchg
cwtl
mov
add
jns
mov
mov
push
inc
jae
jge
jne
mov
out
sbbl
mov
lock
in
cmpsl
dec
mov
mov
xchg
andl
jge
push
pop
jbe
xchg
mov
hlt
pusha
fsts
pop
aad
test
push
std
ret
push
dec
jns
mov
jno
xchg
sbb
enter
call
out
or
cltd
add
or
cmp
pop
int
sub
in
cmp
mov
mov
aad
xchg
lea
cmp
add
inc
xor
aas
xchg
and
cmp
jnp
cwtl
cwtl
jno
pop
sbb
leave
or
lret
sbb
cli
add
jmp
xchg
pop
imul
dec
insl
and
jo
lock
aaa
or
movsb
test
mov
movsl
or
adc
out
adc
icebp
jle
ficoms
js
fnsave
loope
push
cli
mov
lods
jno
inc
pop
int3
ret
mov
mov
int
mov
sub
push
stc
cmp
icebp
push
sub
xchg
pop
insb
cwtl
jnp
pushf
push
inc
mov
into
add
add
pop
pop
into
mov
clc
popf
add
dec
popf
mov
cmpsl
fs
rol
push
or
xchg
dec
enter
test
xor
cmp
or
add
in
popf
xchg
movsl
pop
push
cltd
aas
ret
pop
push
gs
and
xchg
and
das
in
mov
dec
movb
outsb
mov
adcb
divb
push
in
jmpw
dec
movsb
xchg
fimuls
push
pop
or
add
ja
mov
mov
cmp
jecxz
es
and
cmp
or
imul
js
cmc
iret
ds
fsubrs
mov
sub
inc
mov
inc
in
loopne
mov
in
jno
xor
xchg
jle
out
pop
push
inc
les
xchg
mov
aam
push
rolb
xchg
or
ficomps
sahf
addr16
out
ja
add
dec
mov
rorb
in
loope
iret
dec
xchg
jbe
data16
adc
jg
mov
in
insl
mov
sti
and
out
in
lcall
fnsave
imul
stos
push
out
mov
frstor
test
adc
pop
rcrl
push
dec
or
out
andb
dec
mov
dec
iret
mov
les
cmp
jp
std
adc
cmp
adc
pop
sbb
jg
sub
jp
sbb
filds
or
dec
add
adc
mov
out
and
cmp
fwait
pop
repnz
pop
xor
push
scas
fcmovb
fneni(8087
pop
int
lds
push
mov
xchg
push
inc
mov
add
in
sbb
push
mov
inc
push
test
add
xor
repnz
fstps
cmp
shl
dec
inc
dec
push
pushw
push
mov
pop
mov
lea
lods
push
jnp
popa
cltd
addb
mov
cs
mov
outsl
inc
mov
std
popf
sub
negl
lcall
xchg
inc
cmpb
fsubl
ret
dec
mov
adc
into
pop
adc
in
loop
ret
pop
daa
xchg
cli
clc
cli
jnp
push
xor
lcall
push
imul
add
xchg
aas
imul
sub
xor
push
xchg
add
mov
inc
and
mov
inc
adc
push
sbb
lahf
mov
push
push
jno
sbb
and
cmp
enter
mov
adc
push
movl
inc
xlat
mov
dec
ljmp
std
or
popf
popa
lahf
rcl
push
aaa
pop
push
push
shll
xlat
loopne
push
std
jns
test
inc
mov
push
rclb
cmpsb
ljmp
les
test
repz
mov
xor
imul
push
jae
sub
lods
in
add
in
sbb
jbe
lods
into
scas
push
adc
push
mov
out
jl
andl
arpl
leave
mov
stc
jbe
mov
enter
ja
sarl
clc
repz
stos
data16
cmp
imul
xor
in
scas
popa
inc
mov
shlb
enter
cwtl
lods
and
mov
sub
inc
sarl
aad
cld
push
sbb
cmpsl
fsts
outsb
xor
movl
xor
call
decb
mov
pop
cmpsl
repnz
cli
pop
jns
jns
std
sbb
jb
ss
call
dec
mov
iret
add
xor
push
xchg
or
cmpsb
filds
clc
jo
inc
lds
outsb
pushf
sub
ret
add
mov
inc
sti
dec
rolb
pop
pop
ss
inc
in
jb
stc
or
add
into
in
sbb
call
add
or
scas
jne
push
inc
insb
xchg
test
inc
cmp
imul
jo
aas
dec
pop
cmp
repz
mov
jns
shll
inc
popf
in
movsb
mov
mov
es
ljmp
out
ds
jl
mov
out
shrb
cwtl
xchg
cs
pop
cmp
pushf
dec
sbb
add
not
push
data16
jns
es
mov
jbe
and
mov
icebp
movsl
cmp
std
mov
ss
mov
add
es
adc
xor
int3
cmp
adc
repnz
pop
lock
xchg
cli
adc
rclb
push
adc
test
inc
in
xchg
testb
mov
pop
xor
and
in
mov
pop
adc
popa
lea
insb
or
mov
mov
lds
mov
push
adc
jge
addr16
subb
sub
pop
dec
inc
fxch
fstp
fstpt
outsl
lea
xor
or
lea
or
and
lock
addr16
pusha
cmp
aaa
mov
cmpsb
aad
hlt
xor
clc
pop
movsb
fwait
push
pushf
sti
jbe
mov
inc
and
movsl
jae
sub
mov
cmp
inc
gs
inc
fisubrl
imul
sub
in
mov
enter
mov
and
mov
jg
cmp
sbb
repnz
lea
xor
push
shld
mov
cmc
js
cmp
pop
xor
mov
mov
bnd
inc
mov
fsts
addr16
inc
les
or
daa
fwait
rcrl
inc
jb
push
lcall
pop
in
fmuls
xor
lahf
pop
mov
pop
int3
lcall
or
ret
fmull
xorl
mov
leave
pop
test
jp
dec
add
mov
dec
add
jne
nop
flds
and
iret
jl
push
xor
faddp
jne
dec
push
fwait
sub
adc
pmaxsw
lock
inc
insb
cmp
sub
adc
xor
jmp
stc
lock
mov
push
jbe
outsl
mov
inc
cmc
push
fbstp
push
xor
mov
ds
dec
mov
mov
xlat
in
loopne
daa
dec
adc
sti
dec
or
add
xor
push
mov
mov
jmp
inc
and
das
inc
aad
fsubs
add
icebp
lods
std
adc
mov
aaa
inc
adc
aad
clc
or
lock
decl
nopl
xchg
jecxz
mov
cwtl
testl
push
fidivs
aad
pop
dec
dec
int3
mov
insl
xor
jp
xchg
pop
sbb
jl
cmc
xchg
xor
scas
rol
dec
aam
lods
add
dec
inc
test
lcall
cmpsl
xlat
cmp
cmp
dec
dec
addr16
vmovq
add
aam
ret
mov
daa
mov
icebp
push
ds
mov
or
bnd
ja
mov
adc
rcll
mov
xor
or
sar
in
cs
push
icebp
jle
test
mov
ss
jne
ret
lds
imul
ret
inc
xchg
out
or
and
pop
lret
add
push
mov
bnd
mov
push
subl
pusha
test
lods
jl
stos
out
mov
ja
sbb
loopne
fldt
aam
inc
mov
pop
jp
shrl
xchg
mov
xchg
out
das
push
scas
mov
sbb
sub
add
xlat
sub
mov
push
push
dec
in
mov
shrb
push
stc
jg
lret
je
mov
push
adcl
push
lods
dec
dec
fs
nop
addb
mov
rcr
or
xor
sahf
popa
das
jo
add
push
push
nop
push
jae
dec
add
stos
sub
repnz
call
leave
fmull
dec
xor
or
fsubr
outsb
pop
mov
xor
mov
insb
cld
mov
and
xor
jmp
pop
inc
push
pop
aaa
jo
push
mov
xchg
mov
inc
fcoml
dec
out
sbbl
sub
mov
push
push
jns
mov
ds
push
lea
fwait
sub
or
or
pop
insl
mov
imul
fs
test
mov
and
adc
lock
test
out
xchg
les
test
jne
bound
xchg
sbb
cmp
test
rcl
das
stc
inc
in
jp
adc
out
aam
hlt
cmp
jbe
mov
jo
lods
pop
xor
xor
cli
dec
jb
pop
jo
xor
cmpsl
stc
lcall
mov
arpl
cmp
sub
cmp
leave
lret
pop
in
xor
rclb
inc
xchg
xchg
pop
test
mov
mov
imul
mov
inc
xchg
mov
in
pop
add
pusha
cmp
sub
mov
add
or
mov
scas
jp
xchg
sub
repnz
adc
mov
jo
ss
out
sub
lret
stos
xor
pop
jp
iret
fimull
in
mov
mov
inc
lret
ret
jno
dec
cmpsb
cmpsl
mov
inc
ss
push
sub
outsl
rolb
push
dec
cmc
cltd
fidivs
test
lea
loop
fimuls
rcrl
adc
insl
imul
xor
lret
or
jle
push
or
add
bound
stos
xor
faddl
xchg
inc
icebp
jbe
shrb
fcomi
inc
and
loopne
jle
pop
push
pop
mov
mov
cwtl
jl
jmp
jbe
pop
das
in
dec
js
and
cwtl
pop
jmp
inc
xchg
int3
jmp
and
cmpsb
subb
pop
enter
and
push
dec
inc
lock
fnsave
add
and
or
outsb
sbb
adc
fs
hlt
fiadds
jmp
std
fnstcw
cmp
dec
push
lods
mull
mov
xor
xor
ror
pop
cltd
icebp
pop
sbb
scas
int
add
pop
xchg
pushf
data16
roll
outsb
rorb
push
pusha
sti
and
mov
sbb
push
cmpsb
lret
jns
addps
xchg
sub
cmp
mov
push
out
push
xor
movsl
mov
sbb
ds
push
mov
addl
jl
out
cmpl
jbe
out
and
xor
mov
ret
mov
fildll
cmpsb
push
jno
xchg
push
jecxz
iret
rclb
cld
insb
in
cmp
mov
xchg
jg
pop
mov
loopne
pop
int
pop
sti
mov
insl
fmuls
xor
push
pop
std
fwait
in
mov
out
iret
outsb
clc
stc
psubd
jae
dec
mov
push
imul
pushaw
addl
aad
add
xchg
stc
ljmp
mov
mov
xchg
cmp
test
into
sbb
push
add
cmpsl
push
jno
push
mov
pop
xor
dec
out
test
cli
mov
test
je
push
cmpsb
pop
pop
mov
push
mov
daa
cwtl
add
mov
call
xchg
iret
jle
test
pushf
push
clc
pusha
in
and
adc
xchg
mov
push
mov
cld
das
aaa
sub
sub
cmpsb
jns
push
in
outsb
addl
into
rcll
pop
dec
popf
fidivrl
mov
imul
cmpsb
js
sbb
loope
into
scas
inc
cmpsl
repz
jl
cld
xor
popf
icebp
inc
pop
adc
push
add
ljmp
and
or
mov
aas
pop
dec
pop
inc
xor
cwtl
fs
adc
out
ds
or
out
jl
test
jge
pop
test
fs
pop
cmc
mov
mov
inc
sbb
jb
lea
out
dec
cmp
cmpsl
std
or
aam
cld
call
adc
xor
lret
xchg
or
pop
mov
pop
ret
and
sub
je
test
lret
mov
sarb
push
cli
sbb
cmp
lods
insb
xor
insb
push
mov
and
lods
mov
push
out
inc
in
in
jle
aaa
push
fmuls
insb
dec
pop
ret
rcr
js
sbb
ret
mov
bound
jge
mov
sbb
scas
inc
test
mov
out
cmpsb
cmp
nop
dec
push
hlt
pop
stc
xchg
lcall
ljmp
mov
lahf
pop
lcall
shll
ss
xor
cmp
adc
jmp
sub
cmp
imul
mov
ret
jae
mov
inc
dec
xchg
mov
sub
xchg
jmp
fcompl
adc
jne
lds
fisubs
call
mov
scas
outsb
into
cwtl
jbe
sbb
js
daa
data16
scas
or
or
sbb
ja
push
ss
mov
pop
jno
insb
push
and
popf
push
sbb
cmc
xchg
mov
loopne
pop
call
imul
aam
jle
arpl
std
or
arpl
dec
pop
xchg
sub
insb
xor
gs
xor
push
in
cmp
sarl
test
iret
dec
push
inc
lret
push
mov
iret
movsl
sbb
rcl
xchg
push
mov
into
jne
dec
mov
inc
loopne
enter
dec
push
add
jge
repnz
divl
adc
add
and
pop
repz
cmpsb
ss
jae
std
mov
push
and
aaa
and
adc
sub
stos
test
loope
gs
cltd
inc
mov
sbb
jp
in
push
cli
ficomps
mov
fsubrl
inc
adc
or
or
cmp
xchg
int3
sahf
stos
aas
or
clc
roll
inc
mov
jae
inc
push
push
repnz
cmc
sbb
sub
decb
repz
lea
inc
in
scas
shrb
jle
sub
dec
adc
mov
push
and
lret
mov
int3
xchg
and
sti
in
cmp
test
dec
lret
loop
stc
xchg
stc
add
lods
mov
fs
imul
cmpsl
fdivrs
jp
jno
dec
addr16
sbb
movsl
adc
scas
in
cmpl
stos
lds
pushf
test
arpl
mov
loop
push
push
sub
xchg
in
sub
lods
sbb
sub
lahf
xchg
js
mov
test
jecxz
leave
sbb
out
outsb
jae
js
loope
dec
lods
mov
xchg
jle
mov
std
aam
repnz
xlat
sbb
les
loop
iret
jne
mov
in
xor
pushf
push
sbb
ret
jg
jl
xchg
popa
adc
arpl
addl
or
mov
shr
sub
fisubl
imul
mov
rcr
jp
jge
jecxz
imul
add
push
shrb
ds
icebp
mov
push
sahf
xor
lahf
mov
adc
lret
lret
lcall
push
imul
test
cmp
mov
sbb
add
test
mov
aad
sbb
fs
cmp
repz
fildll
fucomip
test
sub
mov
jl
rclb
sub
sti
ss
stc
sub
ljmp
xchg
inc
push
pop
daa
out
stos
bound
xor
mov
shlb
fcmovbe
mov
cmp
pop
add
pop
insl
adc
loope
aam
pusha
jae
test
mov
mov
sbb
xor
lock
xlat
pop
inc
jp
fldl
xchg
dec
orb
push
jmp
leave
dec
mov
icebp
lock
dec
jle
mov
sbb
xor
cmp
add
rcr
mov
xor
inc
es
inc
fs
lods
scas
bound
or
push
ss
push
int
xor
or
pop
sahf
notb
jo
jl
xchg
xor
xchg
jge
adc
in
gs
bound
cs
les
sti
sbb
and
lahf
jp
popl
push
mov
and
add
jmp
fs
or
sub
push
testb
fcmovnu
push
js
pop
cwtl
popl
loopne
ror
and
sbb
arpl
inc
mov
lret
mov
adc
sub
push
out
mov
stos
imul
out
in
and
jno
push
nop
mov
adc
push
fwait
dec
rcrw
inc
pop
outsb
shlb
or
sarb
ret
xchg
add
lahf
insl
inc
gs
xchg
test
lds
mov
test
das
sub
jp
or
popf
hlt
insb
dec
pop
inc
jmp
mov
jl
loop
das
mulb
mov
pop
lds
mov
dec
or
mov
je
xchg
xchg
into
sbb
loope
xchg
xor
add
fsubs
mov
xchg
fwait
lods
jne
sub
mov
cmp
int
outsb
cmp
fcmovbe
or
arpl
push
out
push
or
inc
push
jne
les
xchg
fwait
mov
cmc
jmp
add
jg
cmpsl
mov
pushf
insb
and
and
adc
mov
add
loope
fcoms
ret
clc
sub
jns
das
test
mov
push
adc
das
test
xorl
pop
ss
nop
xchg
popl
ret
stc
gs
out
pop
mov
push
addl
and
dec
jge
sti
xor
pop
cmpsl
in
inc
xor
pmuludq
mov
aad
jmp
bound
mov
pushf
and
add
fstpl
ds
subl
pop
imul
jbe
cmp
icebp
stc
jnp
stc
aaa
insb
inc
push
pushf
insb
mov
movb
lret
adc
cmp
inc
jmp
sbb
pusha
mov
xor
fwait
sbb
jo
mov
push
arpl
jmp
and
sbbb
xchg
lcall
inc
adc
mov
std
mov
mov
mov
sbb
xor
int
jne
xchg
movsb
cwtl
mov
jmp
sub
pop
and
xor
pop
xchg
icebp
mov
cmp
lret
fneni(8087
inc
scas
in
das
push
test
cmpsl
popf
enter
and
out
dec
jns
adc
adc
lds
dec
ja
cmp
int3
pop
mov
mov
jb
movsb
jg
lcall
jne
or
or
jmp
shrl
pop
xchg
ja
sub
mov
jg
jnp
mov
xchg
add
aaa
mov
roll
repz
inc
push
in
xor
sbb
adc
shrl
pop
repz
nop
ftst
xchg
lahf
add
in
and
repz
sbb
jecxz
mov
cmc
xchg
mov
xlat
repz
mov
repz
push
jle
adc
fldl
or
sbb
jne
lock
sub
mov
arpl
arpl
and
arpl
pop
push
add
add
push
lods
lock
test
ret
push
and
cmpsl
xchg
pop
and
xchg
sbb
mov
inc
lret
shlb
addr16
mov
es
pop
xchg
jno
inc
fwait
xor
cmp
sarb
cmp
mov
add
or
inc
loope
lea
pop
mov
jl
inc
cmp
sbb
add
icebp
mov
insb
push
push
lds
lds
out
sub
add
addb
mov
push
mov
xor
push
xor
cmpl
or
loop
fistps
in
popf
xchg
cmp
stos
add
fwait
jmp
std
add
lods
or
cmp
lret
push
or
popa
in
lret
std
jl
jp
sub
movsb
push
xor
fs
push
loopne
arpl
jg
mov
pop
test
testl
mov
pop
movsb
sarb
sbb
xlat
pusha
cmp
mov
testl
mov
in
and
fs
lods
jbe
popa
repz
mov
outsb
mov
call
stos
mov
push
fs
push
mov
mov
and
jb
je
xchg
mov
test
repnz
fwait
ss
out
sbb
pop
fisubs
push
xchg
sti
out
push
jns
out
dec
jp
filds
jns
jbe
mov
in
xchg
cmp
dec
aaa
dec
pop
and
leave
ror
cld
add
sti
xor
xlat
push
jle
push
or
lret
pop
mov
push
into
fxch
xchg
mov
sub
adc
mov
imul
or
push
xor
add
sub
push
outsl
or
lcall
inc
lret
cmp
mov
jb
insb
ljmp
mov
xchg
mov
mov
and
movsl
cmp
adc
icebp
mov
and
inc
xor
pop
int3
ds
sbb
mov
lahf
pop
outsl
addl
mov
and
int3
push
and
inc
jmp
push
out
outsb
dec
insl
mov
or
pop
je
cmpsb
cmc
loopne
cmp
call
mov
sub
mov
dec
movsl
enter
js
fstps
cmpb
lods
sub
aas
xchg
iret
adc
insl
or
test
dec
enter
xchg
push
test
jp
arpl
repnz
sti
mov
xchg
push
movsb
push
rcl
pop
pop
pop
into
int
repnz
xor
mov
imul
ljmp
and
push
call
arpl
mov
arpl
mov
pop
loope
adc
cmp
popa
lods
pop
popa
xchg
popf
aad
adcb
flds
pop
into
test
xlat
jno
push
daa
add
mov
js
jns
js
pop
add
cmpsb
js
ficompl
lret
mov
int3
jg
popf
push
movb
ss
aas
mov
mov
cmp
in
loopne
jmp
mov
ds
leave
icebp
mov
iret
sbbb
mov
decb
mov
mov
scas
fwait
stos
bound
stos
int3
push
add
popa
mov
movsb
jnp
popa
mov
mov
insl
scas
imul
jg
push
fistpl
out
mov
mov
add
pop
dec
adc
mov
loop
fmuls
fs
arpl
push
rclb
xor
out
inc
or
xchg
into
mov
adc
adc
jnp
cmpsl
mov
push
pop
bswap
mov
scas
addr16
cmp
push
push
adc
and
cmp
aam
sti
aam
fldl
stc
adc
xchg
jg
pop
or
push
push
outsb
ja
ljmp
dec
aad
jns
sbb
pop
xor
and
jnp
pop
stos
stc
sub
sahf
mov
lahf
imul
repnz
xlat
in
ljmp
aad
sbb
in
sbb
inc
fisttpl
lret
nop
pop
and
addr16
lds
dec
mov
mov
adc
insl
aas
pop
loopne
lcall
movsb
clc
int3
aad
rorb
imul
push
or
pop
mov
in
and
in
scas
jp
sub
es
xchg
mov
into
xor
sub
push
and
dec
and
pop
movsl
int3
addl
bound
mov
mov
nop
jnp
adc
jge,pn
data16
scas
imul
inc
jo
scas
or
insb
jne
push
fldenv
icebp
sub
lahf
sub
mov
jae
ja
insl
out
outsb
shr
fiadds
push
sbb
sbb
xlat
ss
arpl
movl
or
and
push
mov
outsl
pop
fcom
cmp
xchg
leave
inc
lret
adc
cmp
xchg
pop
add
mov
fimull
sub
mov
xchg
std
movb
inc
lock
mov
bswap
cmp
fsubrl
sbbb
std
movsb
xor
pushf
xor
stc
aam
pusha
push
cmpsb
movsl
pop
xchg
push
push
fcomp
mov
xor
test
frstor
mov
sarl
jae
lods
pop
sbb
stc
jne
ficoml
dec
or
sti
call
pop
enter
movsb
push
jle
repz
cmpsl
and
cmp
pop
xchg
push
movaps
pop
call
fildll
sbb
sub
mov
push
minps
push
pop
fs
and
adc
sub
cmp
sarb
sub
adc
nop
test
dec
fmul
std
dec
cs
mov
test
add
xchg
fidivl
mov
addb
mov
adc
mov
xchg
out
adc
data16
test
inc
dec
fwait
lea
or
push
aad
and
mov
xchg
mov
sub
sbb
imul
fxch
pop
lds
fcompl
pop
sub
cmp
call
lcall
lcall
sub
xchg
push
mov
and
mov
push
dec
movsl
add
jl
mov
inc
cmp
xchg
loope
push
pop
xchg
icebp
in
clc
sbb
subl
outsb
add
cmp
inc
rclb
adc
cli
ss
jle
inc
sbb
rol
out
js
or
inc
sahf
or
push
inc
adc
lahf
and
add
inc
icebp
ss
lock
mov
mov
fucomi
xchg
pop
inc
sbb
lret
cs
mov
fisubl
push
and
push
lea
pop
cmp
mov
jl
jecxz
mov
cmpsl
mov
push
sub
dec
add
sarl
in
ja
enter
adcb
inc
push
inc
dec
sti
push
mov
pop
pusha
inc
ret
cmp
lea
sub
push
xlat
adc
sub
fadds
inc
dec
enter
pop
mov
sbb
cmp
dec
xchg
fidivl
lcall
ret
sbb
mov
fisubs
enter
sub
out
sub
loopne
hlt
aad
xor
and
outsl
mov
movsl
xlat
add
mov
nop
pop
mov
es
lcall
xchg
insl
cmc
xchg
idiv
mov
push
push
dec
cwtl
push
vmwrite
das
shrl
pop
jge
cs
loope
dec
ret
dec
fcmovu
call
jmp
or
dec
std
stc
sub
aas
xchg
sarb
insb
inc
js
cwtl
dec
add
adc
aad
aam
stc
adc
mov
in
cld
mov
xchg
les
insb
mov
or
aam
fninit
mov
insb
pop
test
flds
adc
pusha
hlt
js
daa
outsl
push
ss
rol
add
mov
int
movsl
and
inc
xor
js
out
pop
sti
push
addb
gs
mov
or
dec
jns
add
sbb
pusha
or
nop
hlt
and
push
insl
pop
test
mov
ret
out
dec
and
mov
and
jae
inc
xchg
ret
push
sti
pop
push
inc
vmread
ds
cmp
into
jne
sub
sub
in
std
mov
adc
mov
outsb
popa
aas
nop
mov
sti
inc
xchg
and
cli
push
fld1
push
imul
push
jg
jge
imul
mov
and
insb
into
xor
xor
cltd
push
stos
push
pop
aam
inc
shlb
and
push
les
add
push
jno
loop
mov
jg
lock
call
stos
fistps
lcall
mov
sbb
in
jae
inc
arpl
cmc
mov
aam
aam
lea
sub
cmp
and
adc
jl
mov
dec
dec
cmp
fsubrs
sub
inc
ficoms
xor
adc
test
mov
aad
notb
adcl
stos
inc
xchg
mov
mov
sub
out
ja
lret
inc
divb
xchg
int3
mov
sub
stos
sub
dec
std
pop
loop
xchg
sbb
or
mov
xor
std
sti
xor
jmp
jns
push
mov
loopne
mov
pusha
and
dec
pop
fcoms
or
data16
xchg
shr
inc
outsb
adc
or
jno
bound
test
jne
movsb
int3
mov
cmp
scas
inc
loopne,pn
outsb
in
sub
cli
sbbb
rorb
fnsetpm(287
fstpt
adc
scas
adc
push
pop
mov
mov
shrl
rorb
enter
dec
sub
cltd
cmpb
mov
aas
add
mov
cwtl
pop
xchg
cmp
mov
pop
mov
insb
xor
imul
cmp
lahf
cmp
dec
jae
jmp
ds
ja
xchg
repnz
xlat
xor
pop
dec
sub
movsb
cld
orb
cwtl
pop
and
mov
pop
push
sbb
cmpsl
ret
fcompl
movsl
cmp
pushf
mov
inc
push
xor
or
push
jle
xchg
push
clc
jmp
mov
lret
mov
popa
and
xlat
mov
cmpsb
pop
sbb
aad
mov
xlat
push
lock
mov
sarb
pop
ret
shll
mov
mov
inc
push
pop
out
mov
jge
dec
add
stos
push
test
dec
adcl
pop
sti
mov
sub
sbb
cmpsl
ja
call
movsl
xchg
adc
test
in
push
in
inc
pop
sahf
int
inc
push
pop
hlt
cmp
fistpl
rep
jle
jne
mov
push
jns
decl
adc
out
pop
std
cltd
jne
icebp
movsl
sub
xchg
in
or
int3
mov
sbbb
pop
clc
aam
test
sub
movsl
stc
inc
sub
cmp
ficoms
clc
inc
loope
nop
sbb
lret
fucom
rcrl
out
jno
and
adc
jecxz
int3
inc
popa
jns
in
dec
out
pop
mov
and
ds
lret
inc
dec
and
sub
sbb
shrb
rol
leave
std
xor
sub
addr16
loope
stos
jecxz
push
and
push
push
vmovaps
adc
or
sbb
sbbb
xchg
test
clc
int
push
fdivs
loope
dec
outsl
cmp
add
or
ss
push
mov
sbb
jb
sub
test
fwait
lahf
sbb
add
push
mov
sets
and
jecxz
mov
pop
fnstcw
aaa
mov
cs
mov
adc
ljmp
jg
and
repz
cmpsb
push
pop
sbb
sbb
imul
leave
insb
ja
ret
or
cmpsb
repz
push
push
push
inc
scas
inc
jb
in
xchg
stos
orb
dec
push
xchg
mov
fld
lds
inc
jne
js
dec
xchg
imul
stc
and
mulps
pop
out
in
xor
sub
mov
ja
or
into
stc
in
out
scas
in
pcmpeqd
adc
adc
cmpsb
ficoml
shr
jl
sub
loop
pop
lods
pop
push
add
pop
mov
xchg
aad
out
aaa
test
or
lret
xor
xchg
insb
xchg
dec
shr
sbb
inc
lods
leave
mov
sahf
mov
and
cmp
daa
std
mov
daa
sbb
sbbl
lods
sbbb
inc
jge
xchg
loope
data16
push
lcall
xchg
icebp
push
mov
push
cs
jecxz
dec
sahf
mov
adc
gs
movl
shrb
lds
ret
inc
lret
cmp
scas
inc
xor
push
stos
addr16
add
jno
sub
mov
ss
lods
jmp
mov
insb
out
adc
xchg
aad
fbstp
and
push
jo
clc
mov
or
test
repnz
fbld
or
or
mov
mov
mov
in
cmp
lcall
sti
out
into
jge
jg,pt
scas
xchg
lods
call
scas
rolb
movsl
repnz
mov
jle
mov
dec
sbb
or
leave
scas
iret
push
movsl
pushf
fsubs
daa
mov
sbb
inc
cmpsl
scas
inc
inc
pop
dec
je
add
sub
jle
jmp
dec
gs
outsl
xor
roll
fwait
mov
jnp
add
cld
insb
push
stos
cmc
pop
pop
rorb
pusha
sti
mov
orb
mov
cld
shld
or
cmpsl
fidivs
adc
jnp
cld
mov
fsub
add
stc
aam
inc
cmp
or
bound
add
mov
push
push
aad
fdivrl
cmpsl
iret
xchg
or
adc
sbb
xor
leave
mov
std
cltd
pop
cmp
imul
mov
jae
call
pop
cltd
jo
pop
push
dec
jns
mov
and
cs
ss
pop
dec
push
pop
in
imul
add
xchg
jle
mov
sub
push
cs
aaa
sub
push
int3
push
stos
mov
jmp
sub
jle
mov
push
rclb
xor
cmp
push
je
fildll
cmp
mov
xor
mov
mov
data16
cmpsb
jbe
daa
lcall
lret
test
and
lods
test
mov
pop
add
rclb
out
cmp
push
fbld
hlt
lret
lahf
loop
ljmp
adc
cld
cs
bound
lea
fstps
and
mov
rclb
jne
pop
jae
popf
jge
movsb
es
ror
jge
fistpl
outsb
popa
sub
or
cmp
jne
sub
push
imul
and
ljmp
cmp
xorb
in
xor
pop
mov
fmul
adc
mov
sarl
nop
mov
mov
pop
add
cmpsb
xor
in
mov
adc
xchg
cmp
jp
push
jge
clc
test
bound
icebp
mov
adc
movsl
xor
movsl
imul
xchg
cmpb
addl
outsb
push
jl
pop
adc
pusha
xor
cmp
xchg
lret
jecxz
aad
sub
std
stos
shrb
cmp
sahf
sbbl
inc
pop
mov
adc
mov
cmp
pop
movsb
xor
fsub
insl
mov
fdiv
sub
pop
xor
push
lret
orb
mov
les
insb
push
xor
jns
shl
cmp
fsubrp
pop
mov
or
les
sub
dec
add
adc
scas
enter
in
insw
mov
into
sub
scas
and
fisubrs
lock
cmp
stos
leave
stos
and
jge
jne
rclb
xor
test
in
push
sbbb
cld
xor
arpl
fsubl
cwtl
mov
rcll
push
pop
int3
adc
divl
mov
push
or
out
int
ja
repnz
pop
adc
jno
xlat
xchg
xor
movb
outsl
std
outsl
test
jb
and
out
add
icebp
jne
cli
rol
in
pusha
fmull
adc
shr
cmp
repnz
iret
cmc
mov
or
out
pusha
iret
cmp
sub
ljmp
mov
or
fisttpl
jp
jecxz
call
sbb
pop
sub
sbb
cmp
push
sbbl
arpl
ljmp
cmp
jnp
dec
bound
or
cmp
fstpl
inc
ret
cmp
dec
pop
dec
lea
pop
insl
mov
push
sub
or
pop
pusha
mov
je
test
aas
jnp
sarb
sbb
enter
aas
pop
arpl
jg
cmp
dec
arpl
call
mov
decb
out
sub
mov
add
pop
or
mov
xchg
cmp
test
dec
sub
mov
jmp
bound
mov
lcall
xchg
pop
loop
jg
cs
jb
out
add
xchg
mov
mov
pop
mov
adc
xor
adc
fstpl
sub
sti
aam
scas
cli
mov
push
stos
int
shlb
mov
jge
cli
mov
xor
movsl
in
outsl
fcmovnb
pop
mov
xchg
clc
dec
push
sub
pop
std
xor
xor
cld
push
mov
arpl
mov
gs
inc
push
mov
inc
test
js
mov
pop
aas
sub
je
cmovnp
xchg
push
cmp
inc
sbb
dec
push
or
jnp
xor
loopne
jecxz
xchg
cmp
mov
push
mov
mov
xor
repz
movaps
popa
mov
sub
stc
pop
inc
xor
scas
cmc
xchg
cmp
aam
push
loop
out
jp
push
cli
pop
and
push
cmp
adc
xchg
or
sbb
sbb
sub
aam
adc
insb
xchg
dec
shlb
adc
fisttps
ret
outsl
sub
sbbl
mov
in
mov
je
sbb
cmp
mov
test
or
xor
mov
test
dec
xor
push
jp
cmp
xchg
lret
orl
out
inc
pop
mov
pop
cmp
jle
push
popa
pop
das
and
inc
jmp
lds
pop
pop
sbb
sbb
mov
xchg
jbe
insb
cli
loopne
cmc
cmpsb
faddl
dec
stos
mov
jmp
jle
int3
push
aad
imul
das
jle
add
or
inc
pop
fs
sbb
lea
loop
sub
pushf
lods
or
mov
pop
inc
push
push
or
aaa
lahf
shlb
pop
mov
xchg
lahf
push
xchg
push
loop
push
inc
js
jl
mov
in
mov
jg
mov
fildll
dec
sahf
test
outsl
adc
xacquire
jno
pusha
scas
jl
xchg
jmp
xchg
mov
sbb
adc
dec
lods
adc
sbb
loope
pop
jnp
test
or
cmpsb
aaa
push
rcr
fcomps
mov
cld
rcll
fs
int
dec
xchg
ja
xchg
clc
dec
add
dec
cmpsb
shlb
ja
jl
bound
pop
dec
mov
push
loopnew
xchg
add
jmp
pop
shl
inc
xchg
mov
mov
cli
test
mov
repz
cli
sub
xor
mov
mov
dec
cmp
pop
jl
or
test
call
add
aas
or
inc
push
stc
data16
ja
sub
fidivs
and
adc
addr16
sbb
clc
rcr
cmp
pop
scas
mov
rep
in
test
or
dec
jp
ret
and
push
rcll
ret
sbb
jl
imul
ret
or
or
pop
and
xchg
xor
cli
int
mov
test
int3
shlb
adc
or
outsl
incl
bound
push
aaa
insl
xchg
movups
jae
xchg
shr
sbb
push
or
in
insl
in
leave
dec
jecxz
xor
push
xchg
out
push
out
jle
repz
mov
xlat
push
repz
or
sub
fisubrs
push
xor
in
icebp
insl
mov
sbb
pop
inc
scas
pop
shl
insb
push
cmpb
enter
add
imul
inc
jp
cmp
mov
rorl
cmp
push
pop
sahf
shll
jle
arpl
inc
je
pop
shl
fists
mov
inc
andb
dec
stos
sbb
ja
outsb
cmp
gs
mov
cmc
cmp
into
ret
sti
scas
pop
ret
and
std
push
sbb
std
js
pop
out
add
in
test
push
inc
les
mov
mov
add
cmp
xchg
xor
ss
xor
fwait
lock
mov
out
lret
arpl
pop
sbb
pushf
std
dec
xchg
arpl
push
jecxz
or
push
mov
xchg
dec
int
loope
ret
and
scas
mov
sbb
sub
fists
jne
or
out
mov
inc
and
fisubl
aas
dec
lds
popf
arpl
scas
push
jge
or
adc
cmp
es
std
lcall
subl
aaa
xchg
xchg
nop
aad
adc
sbb
mov
dec
pushf
insl
int3
sbb
jnp
mov
or
aaa
in
jecxz
rcrb
js
lcall
daa
ss
fisttpll
sahf
or
xlat
cmp
inc
clc
ret
push
xchg
test
ss
xchg
xchg
outsb
fs
push
hlt
clc
aaa
mov
subps
dec
arpl
ret
jae
cltd
and
imul
add
dec
fwait
cmp
loop
sub
cs
outsl
in
mov
stos
roll
es
jo
lret
dec
and
ret
add
adc
push
sub
mov
or
lods
sbb
cli
sarl
mov
jne
pop
daa
imul
inc
and
cmp
jnp
jmp
ret
pop
incl
or
cmp
add
mov
sahf
pop
jbe
add
push
cwtl
lcall
in
jns
xchg
lcall
enter
js
mov
pop
inc
in
cmc
push
push
inc
lds
nop
dec
jmp
add
call
and
dec
cwtl
faddp
or
rclb
sbbb
pop
ljmp
movsl
sub
xchg
jge
adc
or
xchg
dec
or
lret
aaa
fimull
mov
pop
faddl
mov
addr16
mov
push
ds
mov
mov
fwait
inc
xchg
cmpsb
sub
xorl
cmp
push
sub
movsb
jo
push
inc
popa
jae
cmpsb
scas
push
out
sub
mov
gs
pop
cmpsl
or
and
xchg
sbb
in
jp
ss
pusha
jbe
or
cs
cmpsl
sub
jecxz
movsb
jge
cmp
mov
pop
sub
xor
cmp
mov
mov
gs
lahf
pop
ret
fldl
or
pusha
inc
add
repz
xlat
xchg
sbb
icebp
pop
cwtl
xchg
mov
xchg
xlat
shrb
lods
orl
or
sbb
xorb
lea
push
mov
ja
loope
sar
repz
cmp
and
sub
adc
subb
mov
pop
inc
cltd
mov
inc
loopne
xor
mov
jns
dec
sub
add
jo
ret
test
ret
leave
push
and
cmp
je
pop
popf
jbe
sub
mov
xchg
add
xchg
and
xorb
xchg
inc
inc
pop
fnstcw
out
mov
movsl
xchg
jecxz
andb
pop
aam
xor
insl
addr16
sbb
repnz
mov
or
test
pop
in
int
insb
pop
ret
pop
mov
lcall
lret
cmp
push
rcl
andl
aaa
xchg
push
push
gs
lret
mov
nop
outsl
xchg
mov
test
ss
inc
jb
nop
mov
rorb
daa
movsl
mov
jns
mov
dec
cli
mov
jmp
push
fidivrl
sub
cmpsl
imul
mov
jnp
or
fsubrs
and
xor
shl
or
xchg
pop
fiadds
sbb
mov
lea
pop
add
pop
fists
adc
fwait
inc
enter
fs
in
xor
jb
pusha
xchg
mov
ss
add
cli
or
ret
jns
pop
stos
jae
in
iret
sbb
nop
push
out
cwtl
mov
pop
test
cltd
mov
divb
movsb
movsl
inc
xchg
ret
or
test
mov
pop
jo
mov
sbb
pop
pop
faddl
jl
sbbb
outsb
loope
sub
pop
fsubrl
jno
cmpsl
adc
jbe
sarb
cltd
shll
xlat
flds
stos
xorl
scas
xchg
test
or
sti
push
std
cmp
stc
mov
xchg
out
pop
cmp
sub
out
and
out
mov
sub
mov
les
pop
cli
xor
cmc
scas
pop
ja
loopne
rcrl
push
gs
and
jmp
adc
mov
or
add
lea
clc
fcmove
das
add
std
xchg
and
add
mov
fwait
and
out
rorb
ficompl
test
mov
inc
insl
mov
jno
ljmp
scas
pushf
movsl
mov
push
jecxz
fwait
out
mov
jle
lret
sub
sub
and
xchg
stos
xlat
mov
icebp
ret
sbbb
mov
mov
fidivl
dec
and
fisttps
nop
repz
aad
lds
push
jnp
pop
bound
test
adcb
fcomps
sbb
cmp
fwait
push
in
sub
or
push
xchg
ja
lahf
insl
idivb
dec
adc
out
push
push
add
call
dec
sarl
add
fmuls
pop
xlat
std
cmp
pop
or
push
inc
js
adc
scas
or
mov
adcb
imul
bound
fld
mov
lahf
jne
adc
and
data16
cmpb
fidivrs
into
stos
and
cmp
or
popf
arpl
js
mov
cwtl
call
stos
inc
outsl
dec
add
aad
dec
jmp
push
sbb
inc
cmp
sbb
cwtl
imul
test
inc
xchg
jg
sub
push
sbb
adc
out
popa
inc
and
sbb
sbb
and
in
es
pop
pop
jns
mov
sub
pop
xchg
pop
mov
test
incl
or
out
movlps
shlb
xor
pushf
test
in
ret
sbb
imul
js
cmp
ret
stos
jne
push
ror
lods
adc
mov
cwtl
mov
mov
int3
test
adc
xchg
lods
dec
call
add
sahf
es
inc
jbe
sbb
push
loop
dec
dec
or
xor
push
lea
xor
adc
mov
mov
cmpl
and
es
pop
cmp
aas
sub
es
push
repz
sbb
xor
data16
iret
add
and
out
es
out
stc
mov
cmp
lret
out
pop
or
jp
daa
mov
xor
fidivs
popa
insl
xchg
lods
or
dec
in
gs
push
in
jl
outsl
push
ds
scas
jno
jne
cld
fcmovbe
cmp
jae
lds
xchg
sbb
sub
das
cltd
cmp
jmp
int
mov
loop
lods
cmc
rorl
jp
cmp
pop
into
fnsave
gs
stos
lea
jl
jbe
mov
js
add
sahf
aam
cmc
sbb
dec
pop
arpl
xchg
mov
jo
icebp
rol
lret
and
xchg
or
jne
push
sbb
mov
xchg
inc
xor
xorb
icebp
ret
pop
mov
inc
mov
push
jl
inc
mov
mov
cmp
jle
mov
inc
inc
push
adc
push
shr
mov
push
mov
nop
fildll
and
cmp
fs
divl
adc
pop
push
stos
fildl
test
mov
add
or
jp
sbb
repz
xor
cs
sub
jl
push
gs
pusha
adcl
pushf
cwtl
xchg
push
xor
cltd
repz
xchg
out
jno
mov
insl
mov
push
adc
into
mov
fimull
fldt
out
gs
dec
mov
fiadds
cs
jns
sub
cmpsb
icebp
or
call
cmp
arpl
mov
cmc
jp
stc
movsb
lret
arpl
pop
leave
movsb
movd
in
daa
sbb
shr
and
push
mov
call
and
mov
push
xor
adc
aad
fwait
addb
xor
addr16
mov
or
icebp
mov
test
out
test
dec
xchg
mov
fstl
adc
leavew
nop
inc
loopne
shlb
cld
mov
insb
inc
repz
cli
push
jo
in
in
inc
lds
mov
cld
mov
out
dec
mov
les
mov
mov
mov
add
negl
popf
sub
add
rclb
pmulhw
outsl
cmp
jae
dec
jae
out
push
mov
repz
shlw
pop
testb
out
cmpl
outsb
rcrl
les
popf
cltd
in
mov
push
xor
push
sbb
push
mov
sub
push
push
and
rcrl
hlt
sbb
popf
push
je
jne
sbb
lock
jl
fbstp
xchg
ds
outsb
pop
ds
mul
int3
fsub
ret
jecxz
push
lcall
mov
sbb
push
stc
push
shll
mov
insl
ficompl
hlt
pop
sub
popa
xor
inc
addr16
imul
push
in
and
lahf
out
loop
and
mov
imul
loopne
inc
mov
shlb
in
xchg
int3
arpl
shll
push
cmp
pusha
cmp
ja
movsb
fdivp
cmpsl
aaa
jnp
push
lods
stos
mov
sahf
lret
cli
int3
mov
pop
subb
int3
mov
popf
fisubrl
sub
rcll
push
popa
xchg
cmp
add
nop
push
and
mov
pop
call
out
bound
int
mov
gs
jns
pushf
rolb
dec
insb
test
jmp
mov
add
mov
hlt
leave
cmp
in
in
pop
roll
push
cld
in
out
leave
popa
mov
in
add
inc
xchg
lds
mov
push
scas
cmc
push
out
cld
mov
inc
add
push
sub
inc
xchg
lret
arpl
sub
and
out
mov
dec
and
or
mov
push
sbb
xor
fs
and
cmp
or
sbb
xor
push
push
cmc
push
or
insl
cli
divb
xor
shrl
push
xor
sub
xlat
sbb
dec
gs
push
add
pushf
jns
xchg
les
in
sub
rep
sub
or
sub
push
push
out
sbb
push
lcall
jp
dec
mov
dec
mov
lahf
in
inc
out
sarl
dec
jp
ret
les
cld
dec
inc
stc
stos
and
out
xor
clc
testl
sub
jne,pt
push
insl
sbb
adc
push
pop
inc
push
std
loop
mov
xchg
imul
mov
jb
sbb
lds
cmpsl
jne
dec
mov
dec
sbb
add
push
sub
sbb
mov
push
sub
sub
mov
add
mov
cmp
dec
shll
mov
or
push
push
adc
mulb
and
into
pop
sub
test
test
loopne
cmp
mov
inc
movsl
nop
jge
sbb
stos
xchg
cmpsl
daa
dec
inc
dec
pusha
cmp
repz
jnp
lods
call
jecxz
cmp
mov
addb
cmp
inc
imul
jbe
and
stos
nop
mov
mov
dec
mov
mov
cmp
sbb
imul
push
movb
sub
loope
xchg
inc
cmp
out
add
lods
dec
dec
sbb
xor
mov
pop
imul
adc
dec
js
sbb
mov
rol
mov
push
mov
pop
mov
enter
ret
pop
nop
insb
sbb
sub
stc
cmp
cmp
cmp
push
aad
jmp
push
fcomip
lret
jnp
call
xchg
jno
shll
sbb
popf
sub
andl
xor
xor
fcoms
sbbb
jge
or
mov
push
bswap
aas
test
ja
lock
fsubrs
mov
pop
sub
das
xor
and
cltd
mov
mov
dec
xor
cmp
mov
lcall
adc
loop
stc
cmc
jmp
ja
xchg
cmp
jae
mov
jecxz
dec
jmp
addr16
xchg
adc
cli
mov
mov
push
stc
fdivp
jne
pop
decl
jno
sub
cmpb
cli
int
imul
add
dec
stos
rcr
sub
mov
push
xor
add
pop
ja
rcrl
out
inc
sbb
pop
loope
dec
mov
sbbl
and
sub
shl
sbb
jae
ret
push
sahf
mov
out
adc
add
jns
nop
ror
and
sahf
mov
testb
cmp
pop
push
pop
cwtl
fidivs
ret
mov
mov
inc
stos
scas
dec
scas
xchg
imul
sub
mov
movsl
cmp
mov
and
shlb
xor
lods
and
ljmp
scas
aad
lret
push
and
and
jb
and
out
lahf
in
rol
pop
xchg
cmpsl
loope
addb
fbld
mov
pop
loop
stos
movsl
or
aaa
jo
push
xor
out
ljmp
or
outsb
or
sub
stc
inc
lock
mov
fisttpll
mov
dec
add
ja
movsb
add
sarl
lods
negw
aaa
jmp
dec
aam
mov
push
xor
scas
data16
mov
ljmp
in
es
and
jae
or
out
xchg
adc
inc
jp
rcr
popa
inc
mov
stos
pushf
add
imul
push
cmp
fbld
shrb
dec
mov
movsb
inc
fnstenv
daa
fldcw
xor
ret
fldt
repnz
xchg
loop
stc
out
test
jge
sub
dec
ret
xor
mov
ret
stos
push
xchg
mov
mov
or
and
push
repz
es
jne
lods
lahf
insb
dec
std
push
mov
dec
jne
mov
and
cli
jg
xor
mov
mov
cmc
fmuls
ss
enter
adc
mov
pop
test
push
sahf
mov
push
push
xchg
mov
out
ljmp
sbb
mov
push
sbb
cmp
ds
dec
pop
sbb
mov
lahf
inc
add
cmpsb
mov
push
mov
adc
mov
sub
in
cmc
mov
imul
mov
pusha
fstl
xor
jg
add
pop
cltd
dec
cwtl
dec
push
push
test
insb
test
jns
shl
adc
lods
cmp
daa
xchg
enter
int
call
mov
xor
push
lahf
out
adc
lea
push
lret
pop
lods
out
push
addr16
ficoms
push
pop
inc
out
insb
repz
inc
imul
or
adc
dec
cli
cmp
inc
sti
cmp
leave
frstor
push
add
add
fimull
jge
pop
mov
push
jns
xchg
cld
in
loopne
adc
inc
aaa
mov
aam
push
repz
lds
psrlw
mov
or
and
popf
fldenv
xchg
cmp
icebp
mov
lret
mov
ret
loopne
mov
ret
jae
mov
sbb
add
sub
pop
out
push
cltd
aam
mov
xchg
jmp
clc
push
sub
enter
ds
add
dec
pop
mov
lcall
cwtl
test
push
inc
bound
jmp
pop
mov
adc
cmc
int3
leave
mov
and
pop
sbb
into
sub
in
jle
pop
aas
add
int3
lods
inc
dec
xchg
cmp
enter
imul
fimull
sub
inc
addr16
sbb
xor
stc
iret
jne
es
movl
dec
jno
movsl
data16
and
push
jns
stos
adc
aam
fdivs
pop
dec
outsb
ja
mov
xor
fcoml
cmp
test
jb
xor
mov
into
mov
jns
call
arpl
xchg
int
and
sti
jle
std
gs
xchg
add
mov
aam
xor
test
lods
mov
mov
fmuls
es
jl
insl
and
repz
hlt
aaa
decb
xlat
lahf
add
mov
or
or
mov
sbb
sub
sahf
cs
daa
clc
test
adc
int3
pop
in
ss
sub
sub
xchg
cmp
cs
cmpsl
and
add
xchg
add
dec
xchg
and
out
dec
dec
ret
mov
call
and
mov
rcl
cs
paddsw
in
cmc
popf
adc
aam
or
xor
gs
adc
data16
xlat
js
in
movsb
rolb
shr
stos
xor
mov
push
loop
int3
push
les
or
dec
jbe
pop
test
push
sahf
adc
imul
or
jmp
or
stc
push
leave
inc
jge
fucomi
cwtl
aam
mov
scas
pop
inc
mov
mov
cmp
mov
cld
inc
dec
loopne
pcmpgtd
mov
xchg
andb
subb
push
xor
mov
pushf
aam
dec
mov
es
push
add
aaa
pop
imul
lods
dec
fsubrs
xchg
mov
jbe
mov
cmp
or
mov
jb
int
andl
push
loope
scas
int
mov
jle
jbe
pop
push
xchg
cld
xchg
mov
adc
mov
dec
pop
and
jbe
sbb
pop
test
inc
pop
inc
push
dec
lods
pop
and
or
les
push
loope
and
add
sub
cld
sub
out
push
sbb
sub
hlt
and
test
add
push
cmpsl
or
call
jbe
pop
add
push
inc
or
std
lods
ja
lea
xchg
sbb
nop
repnz
xlat
push
mov
das
ret
mov
shrl
imul
pop
mov
and
stos
inc
push
mov
mov
xor
mov
fdivl
jp
xor
hlt
mov
fadd
arpl
jb
add
or
and
pop
repz
adc
inc
pop
dec
sub
pop
inc
dec
or
je
push
mov
cmpsl
js
data16
fisttps
ret
pop
push
xor
test
mov
dec
test
daa
xchg
cltd
mov
pop
and
lcall
jge
cmp
out
mov
clc
sub
add
push
pop
cmp
in
in
nop
mov
lret
outsb
ret
mov
cmp
gs
sub
sub
adc
cmp
movhps
pop
gs
dec
adc
or
and
dec
adcl
sbb
or
std
ret
aad
aad
pop
leave
add
pop
and
fsubs
or
xlat
xchg
cltd
add
rolb
movb
sub
outsl
xlat
mov
aad
add
sarl
ljmp
and
popf
loopne
into
pop
pop
mov
jge
insl
sub
lea
pop
cld
push
xchg
test
pop
jg
and
and
mov
inc
out
mov
mov
shrb
int
shlb
sbb
or
stc
in
nop
mov
dec
int3
ds
xchg
mov
mov
mov
add
mov
cs
testl
adc
push
shrb
test
jmp
scas
neg
sub
jae
cmp
mov
push
fwait
jne
test
shlb
push
aas
sub
mov
inc
ss
stos
je
push
popcnt
lret
jge
les
mov
lahf
fwait
enter
xlat
lahf
adc
xchg
dec
push
push
and
sahf
mov
lret
jbe
inc
mov
sahf
negb
cld
jnp
add
in
in
imul
ljmp
adc
clc
sbb
stos
ret
jnp
mov
jge
inc
xchg
das
out
pop
sbb
pop
loopne
sub
lods
pop
mov
sub
mov
pop
sbb
ror
imul
hlt
in
xchg
in
inc
and
mov
mov
cmp
sbb
movsb
movsl
jae
stos
fcoml
xor
push
in
int
adc
add
dec
adc
rcl
je
pushf
incl
in
push
xchg
popf
push
adc
push
hlt
pop
shr
ljmp
add
icebp
pop
push
lock
xlat
test
xchg
int3
dec
sbbb
stos
mov
int3
sub
fcompl
inc
adc
rorl
jns
stos
sbb
mov
fisttps
fisubl
xchg
jo
push
xchg
popf
push
mov
mov
push
adc
xor
lods
pusha
out
adc
jle
pop
in
jle
cmp
sub
and
add
adc
lds
test
push
sub
cmp
outsb
push
test
add
jbe
sbb
sbb
mov
fs
int3
pushw
out
jmp
fstpl
movsb
ret
pop
pop
pop
daa
iret
pop
mov
xchg
pushf
rcll
dec
mov
stos
lcall
pop
xor
xor
push
mov
dec
xor
or
jp
cmp
leave
and
imul
into
push
fcomp
jle
mov
cmp
cmp
pusha
mov
sub
js
std
xchg
cmpsb
icebp
sbb
data16
add
lods
jecxz
mov
fisttps
in
daa
sub
lret
mov
rolb
inc
sub
aas
scas
test
shrb
and
dec
push
fdiv
xchg
mov
test
das
jmp
sbb
lret
cmp
test
pop
or
add
cvtpi2ps
mov
and
shr
ljmp
push
push
xchg
pop
jle
mov
repz
mov
push
cmp
xchg
cmp
add
and
cwtl
lcall
and
pop
sarb
jb
scas
stos
pop
jno
idivb
jp
mov
pop
shlb
jbe
inc
test
mov
push
jae
dec
push
inc
or
mov
loop
std
push
hlt
and
mov
xchg
xchg
jns
in
div
xlat
iret
ret
push
into
push
aas
popa
xchg
aad
push
inc
sbb
adc
jmp
push
cmpsb
cmpsl
and
push
popf
shl
mov
and
negl
iret
lcall
jecxz
lret
sub
mov
mov
xchg
lahf
in
jae
test
dec
sarb
js
and
jge
or
pop
jp
fildll
sti
ss
aad
xor
xchg
and
pop
and
imul
xor
sbb
dec
xor
je
sbb
push
sub
lahf
jae
mov
lret
ljmp
scas
insl
pop
mov
mov
dec
cli
xchg
dec
pusha
mov
outsb
movsl
sub
pop
sub
add
push
sbb
inc
lahf
cli
das
test
test
out
popa
jae
xor
pusha
push
cmpb
in
out
shll
sbb
aam
mov
jnp
pusha
pop
popf
js
dec
nop
jmp
jp
inc
mov
aas
ret
fcmove
and
lret
rep
out
ja
push
cmc
or
xchg
xchg
ljmp
mov
push
cmp
jo
adc
inc
push
ret
gs
push
mov
gs
jmp
mov
mov
addl
mov
sahf
push
adc
invd
or
in
mov
mov
xchg
in
inc
addr16
cld
test
inc
addr16
icebp
and
test
xor
push
sti
dec
mov
pop
dec
cs
dec
sub
lods
cmp
jmp
or
push
adc
jns
push
repnz
lods
inc
xchg
mov
push
sti
imul
popf
loope
aaa
dec
pusha
and
cs
mov
push
push
dec
add
inc
call
subb
jo
mov
jo
shll
mov
cmp
lds
clc
in
inc
pop
add
out
jg
dec
jo
pop
push
je
mov
jmp
cltd
mov
test
nop
and
jb
inc
dec
inc
mov
jo
mov
sbb
mov
fmull
cmp
out
push
test
fisttpll
ret
xchg
mov
pop
xlat
sub
push
adc
mov
mov
xchg
shrb
imul
mov
sub
or
inc
sbb
add
mov
jae
add
test
mov
inc
out
stos
adc
subb
fisubrs
sbb
sub
mov
cltd
adc
mov
pop
call
mov
add
add
pop
or
stc
add
mov
outsl
xor
sti
xor
shlb
pusha
es
push
test
adc
sbb
rcrl
mov
xchg
ljmp
iret
in
out
or
jle
mov
cli
xor
xchg
sbb
lret
xchg
fnsave
dec
aad
dec
jp
bnd
in
and
std
add
pop
xchg
mov
cmp
cmc
mov
loope
inc
sbb
push
rcl
mov
and
inc
cmp
push
jb
loop
pop
stos
movl
mov
loop
jno
push
les
dec
hlt
cli
mov
imul
mov
and
mov
push
mov
popa
test
into
jmp
ja
fisttpl
mov
mov
gs
xchg
lock
adc
ljmp
jbe
xchg
adc
mov
adc
imul
imul
cltd
cmpsl
mov
out
mov
popa
test
fnstsw
mov
jl
adc
jb
imul
cld
je
gs
cli
and
xchg
scas
pop
movsl
scas
sub
cwtl
mov
pop
repnz
daa
sbb
sahf
sti
lods
je
popa
subl
or
mov
mov
push
bound
mov
add
xor
push
mov
clc
mov
push
or
sbb
loopne
addb
pop
lar
xchg
sub
dec
or
jle
adc
inc
add
sub
jbe
inc
add
jne
test
mov
fbld
stos
data16
add
popf
repz
aad
inc
mov
cwtl
pop
mov
fsubl
pop
or
push
or
add
adc
adc
pop
loop
jns
or
mov
inc
lcall
pushf
pop
or
into
mov
fsubl
lcall
dec
shl
pop
mov
jl
rclb
cld
sti
cs
subl
pop
mov
and
jnp
inc
rcll
cmp
rclb
jp
fwait
and
aas
aaa
jnp
adc
mov
fildll
repz
and
dec
adc
xchg
cwtl
cld
or
add
mov
and
fistl
lahf
cli
add
loope
ljmp
jo
and
call
data16
push
cld
mov
cmp
mov
adc
jnp
adcb
xchg
sar
fdivrs
xchg
pop
lret
pop
add
fdivp
lods
iret
loopne
loopne
lods
mov
aaa
lret
loopne
inc
popw
inc
fnstcw
mov
push
popa
call
add
push
test
imul
add
push
xor
fsubrs
in
pusha
jp
add
std
sti
mov
inc
scas
or
and
sub
rcrl
xchg
call
push
xor
jecxz
sti
and
cmc
test
adc
xchg
mov
addr16
or
stos
out
in
jl
cli
out
es
out
loopne
movl
bnd
call
mov
push
push
lret
jge
mov
xchg
fcmovbe
inc
xor
lahf
cmp
ficoms
mov
incl
mov
adc
mov
add
mov
jno
cmp
jno
mov
loope
pop
lret
push
mov
pop
movsl
jnp
fildl
mov
imull
or
fcmovb
dec
add
jb
adc
add
inc
aam
lods
pop
push
insl
shll
movsb
mov
xor
insl
stc
nop
in
inc
call
sti
stos
enter
add
mov
std
pop
xlat
cmpb
fnstcw
xchg
mov
or
cmp
adc
mov
popf
xchg
lret
cwtl
lcall
jecxz
int3
cmp
movsl
xchg
into
push
outsl
in
stos
mov
sub
xchg
out
pop
flds
pop
sbb
xor
jecxz
or
stos
mov
ljmp
outsb
or
pop
sub
sbb
mov
inc
pop
mov
cmp
pop
xchg
jnp
es
mov
add
pusha
out
xchg
mov
fidivrs
je
jmp
xor
mov
pop
mov
andl
cmp
fsubs
popa
rorl
jo
sbb
mov
nop
mov
daa
mov
jg
or
dec
imul
push
push
lods
iret
sub
shlb
sub
xor
mov
leave
xor
inc
fwait
mov
call
pop
cmp
mov
arpl
mov
dec
or
adc
inc
pop
mov
cmpsl
outsl
add
add
pop
jae
arpl
cmp
outsb
adc
dec
xchg
jl
sahf
inc
mov
mov
xchg
aas
cmpl
cmpl
aaa
push
jno
orl
xor
insl
mov
jecxz
pop
jecxz
popf
ja
lods
mov
jmp
adc
push
jle
or
cld
push
lea
loope
dec
ss
inc
incb
dec
jo
mov
imul
je
ret
push
stc
jb
outsb
push
add
push
sub
lahf
sbbl
ror
cmpsl
jnp
xchg
popf
das
aad
push
push
sub
push
or
pop
ret
stc
and
test
mov
push
ret
nop
pushf
sarl
ret
ds
push
push
jo
imul
cmp
loopne
jecxz
cmpsl
cmp
imul
enter
fninit
out
fs
lea
ret
ja
les
lds
jecxz
data16
mov
ds
cwtl
and
lcall
sbb
leave
push
dec
clc
fnsave
rcr
lret
xchg
aas
jns
aas
aam
es
test
xchg
add
fs
and
xchg
subb
cmp
mov
mov
daa
lock
lret
inc
push
test
std
mov
xchg
inc
add
pop
or
adc
push
scas
imul
call
xchg
or
inc
in
sbb
adc
cmp
push
insb
or
outsb
and
cmp
movsb
scas
aam
push
js
test
cmpsb
sbb
stc
jge
dec
outsb
pusha
push
sbb
adc
dec
bswap
mov
xor
mov
or
movsl
sbb
outsl
out
ret
fnstcw
dec
cltd
arpl
int3
push
cmp
mov
sub
lret
pop
shrl
out
mov
mov
ds
enter
loopne
adc
sahf
outsb
loope
xchg
xchg
mov
cli
movsb
rcrb
xor
enter
inc
fldenv
xchg
pop
or
cmp
xchg
sbbb
cmp
inc
mov
in
jg
push
das
pop
test
inc
mov
or
fwait
repnz
das
outsl
stc
xor
or
jo
dec
pop
es
lret
bound
xchg
mov
loope
cmpl
push
push
jns
jns
mov
jo
nop
imul
clc
or
xor
cmp
stc
add
add
pop
loop
push
dec
ja
repz
fs
xchg
cld
addl
cld
sbb
jecxz
xlat
pushf
aam
add
xchg
pop
mov
out
mov
jl
add
mov
cwtl
stc
data16
sbb
shrb
leave
jbe
pop
mov
lret
xchg
lahf
hlt
sbb
cwtl
xor
add
xor
shlb
or
push
js
mov
popa
gs
jle
das
loope
and
mov
jno
int
sbb
pusha
sub
dec
jle
jnp
fsubr
scas
adc
hlt
ret
inc
and
mov
add
cmp
in
xor
mov
cmp
sti
loop
mov
lods
adc
sub
push
cmp
or
push
or
sarl
jae
sub
sub
mov
test
loopne
cwtl
sub
cmp
enter
inc
scas
mov
adc
mov
scas
mov
cmp
mov
sarl
pop
lods
inc
imul
or
adc
adc
mov
dec
out
daa
mov
mov
subb
mov
cli
mov
cmpsb
sbb
orl
and
dec
ds
inc
shrl
mov
adc
les
aad
insb
lds
mov
xor
inc
xchg
scas
sub
dec
adc
out
out
stos
xchg
nop
sbb
push
mov
cli
test
lock
jns
push
dec
imull
xor
insb
mov
mov
outsl
mov
cs
sti
imul
test
ljmp
cli
std
pop
std
jb
loop
mov
mov
sub
lea
mov
testb
cmp
and
subb
inc
dec
fwait
lea
jbe
lods
pop
aad
fwait
jmp
or
push
sub
repz
aaa
pop
arpl
or
ret
dec
jne
stos
rcr
xor
inc
mov
mov
dec
mov
iret
and
jb
mov
ljmp
lods
daa
dec
imul
mov
out
xchg
dec
pop
icebp
jne
mov
dec
jl
aaa
cltd
cmc
out
sahf
in
pop
jecxz
and
rolb
cmp
add
into
sbb
dec
clc
cmp
cs
dec
pop
rorl
mov
dec
stos
dec
jo
mov
fildll
ss
sbb
or
rcr
cmpsb
mov
lret
xchg
inc
jg
mov
lcall
leave
dec
push
repz
cmp
cltd
out
mov
out
xor
dec
insl
orb
pop
xlat
inc
lods
jge
sbb
cmp
sub
sti
pop
jae
sbb
fptan
cmp
add
jae
jne
shlb
mov
inc
int
call
insb
loope
jnp
add
inc
sub
rcrb
pop
mov
adc
cmp
mov
xchg
xchg
push
push
test
add
pop
popa
and
je
dec
lods
repnz
jge
sbb
lea
andl
or
mov
out
adc
ljmp
arpl
fs
fcompl
inc
dec
int3
stos
inc
out
stos
sub
out
loopne
testl
repnz
fidivrs
rcrl
in
cmp
inc
subb
inc
scas
jg
fiadds
push
sub
in
rorl
out
mov
nop
jne
mov
or
idiv
xchg
pop
inc
popl
jno
inc
xchg
cltd
xor
leave
xchg
xchg
xchg
scas
stc
dec
pop
cmc
hlt
xor
mov
push
sti
cmp
push
int
loop
movsl
test
icebp
cwtl
aad
dec
or
cs
bound
in
adc
sub
jge
sbb
mov
add
rcrb
sahf
fcomip
bound
fisubl
lea
inc
rcl
sub
into
ds
push
mov
nop
cmp
xchg
jns
mov
or
xchg
arpl
movsl
sub
or
push
in
jae
flds
movsb
pop
xchg
loop
dec
xchg
jle
cmpb
mov
jae
xchg
mov
out
es
xchg
sti
aaa
mov
pop
in
add
dec
push
fistl
std
add
jo
xor
insb
push
out
xor
sub
out
xor
cmp
bound
sub
dec
mov
int
pop
sub
jle
sarl
sbb
outsb
bound
push
adc
push
clc
push
int3
adc
clc
fisubs
and
push
jecxz
mov
cmpsl
scas
cmp
jecxz
mov
sbbb
xchg
push
xorb
jne
adc
aam
adc
inc
jbe
std
xor
mov
fucompp
push
sbb
cmp
sbb
inc
pop
pop
ljmp
je
add
jl
lcall
movsb
ss
test
or
or
dec
test
iret
mov
sub
inc
fisubl
lds
push
gs
call
lret
fidivs
rcl
inc
push
mulb
pop
xor
mov
movsb
mov
mov
aam
and
sub
shlb
out
out
push
mov
sbb
or
subl
gs
pop
aam
or
pop
lds
add
out
inc
fcomps
bound
das
out
pusha
iret
and
dec
ret
mov
loopne
aam
lcall
xchg
insl
push
cld
jne
jle
pop
loop
jmp
push
jnp
faddl
in
fistpl
testb
pop
cmp
adcl
cmp
lret
cmpsb
push
in
sbb
loope
mov
jecxz
inc
testb
fstl
out
test
push
and
push
adc
jno
gs
or
loopne
iret
dec
jp
dec
xor
in
insl
inc
xchg
mov
fnstcw
cmp
xor
movsb
push
pop
mov
lea
cmp
iret
inc
xchg
mov
ja
in
lret
push
mov
imul
mov
and
xchg
aam
lods
ret
shl
idiv
cmp
xchg
add
xchg
push
sub
mov
iret
adc
rorl
mov
push
mov
ss
clc
push
sub
add
and
adc
addr16
pop
inc
add
ret
xchg
fwait
inc
sub
xchg
inc
jle
sbb
xchg
and
jge
pop
mov
pop
dec
cli
mov
js
xor
sub
xor
insl
movl
sti
pop
pushf
mov
pop
cmpsl
ficoml
rcll
popf
adcl
adc
jl
mov
ret
out
xchg
clc
int
outsb
int
out
mov
inc
out
popa
push
and
aas
adc
movsb
flds
jae
outsb
in
in
xor
cmpsl
mov
inc
cmp
bound
je
fcmovnb
mov
mov
mov
test
dec
sub
loope
mov
push
xor
sub
adcb
mov
mov
data16
push
xchg
mov
xor
inc
test
inc
adc
insl
arpl
gs
inc
xor
inc
xchg
mov
out
ret
sbb
cmp
cmp
mov
pinsrw
movups
movsl
cmp
sbb
or
mov
lahf
mov
clc
in
sbb
cmpl
sbb
mov
shl
sbb
sub
mov
movsb
imul
sub
mov
mov
jecxz
mov
push
mov
push
xor
jmp
cmpsb
jo
add
movsb
jge
add
sti
mov
cmpsl
mov
movsl
daa
push
cs
mov
mov
popa
out
add
pop
xchg
movsb
stc
pop
add
inc
aaa
jo
xor
pop
or
mov
and
push
xchg
add
nop
out
mov
add
aad
ds
daa
jecxz
add
xchg
loope
inc
mov
jp
imul
pop
fisttpll
sub
andb
cld
add
inc
sbb
int3
and
lds
insb
lods
cmp
sbb
cmp
add
pop
faddl
xor
ret
add
ret
cwtl
std
jne
jae
in
clc
lock
mov
cmp
adc
outsb
push
dec
jg
outsb
jo
pop
and
xlat
movsl
popa
jmp
xor
je
pop
lea
pop
push
mov
xchg
in
dec
js
lds
xor
shlb
mov
sub
xor
rclb
idivl
das
popa
pop
cmc
mov
movsl
fldt
test
fisttps
jno
mov
inc
jg
lret
aad
jge
pop
add
fsin
and
mov
pop
sub
sbb
repnz
mov
bswap
xchg
stos
xorl
rorb
pop
aad
sub
mov
add
nop
outsl
sub
mov
xor
movsl
and
mov
les
ret
push
cs
test
imul
sbb
leave
dec
in
pop
shrb
jle
xchg
xchg
lods
add
cmc
xor
test
jg
lds
ret
and
clc
dec
dec
sbb
pushf
subl
push
icebp
add
xlat
sbb
cmc
add
jb
negb
lret
lea
push
scas
dec
outsb
hlt
mov
sbb
cmpsl
cmc
add
jbe
xchg
xor
jae
xchg
xor
popf
lds
sbb
in
xlat
mov
adc
xchg
inc
and
mov
push
xor
fs
int
gs
push
or
pop
xchg
idivl
jecxz
es
sarl
push
adc
movb
stc
cmc
mov
and
pop
xchg
inc
enter
pop
xchg
jecxz
notl
or
push
add
lret
loopne
add
add
mov
push
jnp
int3
adc
mov
fwait
mov
dec
mov
push
std
fldcw
mov
ss
cli
jno
rorl
fists
loopne
ss
pop
cltd
cmp
and
hlt
jmp
lds
push
in
aam
mov
outsb
push
movsl
shll
test
add
jmp
xchg
rcrb
ret
pop
rclb
ja
aad
fstpt
jge
cltd
data16
fs
dec
lock
xchg
jae
sub
xchg
sahf
clc
fsubrs
pop
xchg
cmp
loop
das
fdivl
jl
pop
popf
fstps
inc
jns
lods
cmpsl
inc
mov
es
mov
or
push
inc
cmp
mov
push
mov
cmp
adc
repnz
in
xchg
mov
pop
xchg
pushf
mov
inc
out
shll
les
cmc
sub
or
sbb
repz
add
push
ja
in
cmpsb
scas
add
popa
push
fimull
hlt
xorl
lds
arpl
add
stos
into
cmc
pop
lds
and
adc
andb
nop
adc
stc
in
or
sub
imul
dec
sbb
movsb
iret
int
push
mov
out
jecxz
iret
jo
std
out
lret
sub
inc
mov
mov
fldt
adc
mov
ret
xorb
and
mov
cmpsb
xor
dec
adc
or
popf
xchg
xchg
add
dec
push
and
cwtl
loop
fadds
insl
xchg
rcrl
pop
ss
outsb
fists
inc
xchg
mov
outsb
lods
ret
sti
push
inc
flds
cwtl
in
nop
jmp
jo
rorl
add
push
faddl
jnp
int
xor
iret
dec
mov
jg
sbb
sub
jbe
sbb
xchg
push
je
push
imul
xchg
scas
shll
sbb
in
dec
mov
mov
ror
and
mov
or
xchg
vpandn
inc
sbb
movsb
lock
pop
aaa
outsb
cmp
int3
aas
fisubl
out
into
adc
jmp
lods
mov
sub
and
mov
sti
or
stc
movsb
call
and
jge
rolb
data16
cli
bnd
xor
ret
shlb
dec
adc
ret
fstpl
mov
xchg
pop
neg
dec
sub
push
incb
inc
cli
mov
lds
push
fdivp
cmp
xchg
outsl
cmp
and
addr16
scas
imul
jge
rclb
imul
cmp
xor
mov
pushf
lcall
inc
popf
pop
pop
mov
cmp
push
or
outsl
sahf
aaa
adc
xorl
into
inc
ds
clc
fwait
jmp
les
pop
xchg
jb
inc
push
clc
fstps
aad
add
cmpsb
inc
insb
in
iret
pop
stos
pop
movsl
stos
subb
push
loopne
out
adcb
mov
in
push
leave
lret
dec
mov
cmp
outsb
outsb
iret
jae
inc
adc
sub
or
popf
mov
test
mov
mov
dec
mov
add
cli
fstpt
mov
rclb
cs
les
mov
adc
lds
cmp
sub
dec
push
mov
and
and
add
push
adc
push
testl
jp
cmp
out
mov
xor
push
out
push
inc
pop
mov
clc
push
cmp
jnp
mov
aaa
pop
call
fsubs
fcomi
sbb
mov
jmp
jo
jb
pop
xchg
pop
push
imul
add
lods
push
xor
inc
call
pop
sbb
fldl
mov
mov
inc
push
xchg
add
idivl
adc
fs
or
aad
or
or
jl
jbe
dec
movsb
sar
loopne
inc
fstps
ja
pop
xchg
dec
mov
scas
sbb
lds
cmc
and
xchg
jmp
icebp
dec
shll
pop
inc
sbb
fwait
adc
int3
mov
inc
bound
test
aam
rcl
xor
and
or
mov
cld
das
lret
iret
jl
dec
xchg
cmp
fstps
scas
dec
sub
fdivl
in
loope
mov
xor
pop
out
nop
mov
icebp
xchg
pop
sub
xorl
les
sub
dec
aam
aad
dec
push
cmp
ss
jbe
inc
and
mov
call
jae
loopne
mov
in
stc
div
fdivrl
lahf
lahf
sub
pop
test
push
bound
xchg
rol
in
mov
add
or
mov
push
repz
jns
mov
jnp
and
out
in
push
xor
ret
mov
daa
add
or
and
loopne
movsb
mov
cmpsl
and
jge
push
in
inc
pusha
cmp
shlb
test
xchg
xor
pop
sub
mov
in
adc
imul
insb
mov
inc
ljmp
nop
xor
sub
shrl
cmpsl
into
sbb
jp
rolb
xor
aas
xor
mov
shll
test
shll
test
push
in
jmp
pusha
pop
or
cmp
aas
popa
dec
insl
cs
mov
add
push
subb
repnz
jmp
add
lahf
sbb
mov
adc
stos
jmp
pusha
movsl
mov
and
push
inc
dec
sahf
xor
inc
inc
jmp
lret
inc
adc
int3
add
pop
mov
dec
fimuls
jae
or
rol
sbb
and
inc
add
icebp
xchg
insl
negl
pop
push
cli
adcl
in
adc
jo
fucomi
push
adc
aam
add
jb
dec
in
aas
fwait
test
and
jl
gs
pop
and
ljmp
das
and
pop
jmp
push
jp
or
push
mov
lcall
fldl
test
sbb
push
aas
sub
mov
aad
les
cmp
pop
mov
mov
jg
inc
jno
mov
addr16
daa
test
mov
sub
es
ret
loopne
daa
dec
rcll
jae
inc
icebp
jle
or
cld
xchg
mov
adc
cmp
sub
iret
dec
jnp
fmul
mov
repz
repz
decb
out
jp
mov
adc
ret
pop
call
mov
jns
adc
stos
mov
push
out
js
bound
test
sub
or
scas
inc
mov
fldenv
hlt
nop
pop
jne
mov
sbb
mov
lock
test
mov
arpl
enter
cli
inc
pop
mov
js
ficomps
and
adc
icebp
stc
rcl
movsb
insb
out
fldt
ss
lret
fmull
xchg
iret
out
push
enter
sbb
fidivrl
test
int3
mov
pop
icebp
ret
sar
sbb
aas
pop
mov
add
dec
mov
adc
push
pop
push
sbb
cmc
lods
dec
lret
push
xlat
push
and
in
add
lret
mov
cmp
cwtl
jmp
jmp
inc
lods
cmp
xchg
push
out
mov
add
pop
jo
push
dec
pusha
pop
xorl
pop
bound
call
xchg
cmpsb
mov
push
and
inc
mov
inc
dec
pop
and
jns
or
in
daa
or
pop
cmc
sub
inc
int
rcll
fistl
les
lcall
push
lods
fst
jo
push
jge
and
aas
pop
adc
jp
add
shl
adc
fisubrs
enter
push
rcrl
ret
fldcw
dec
dec
inc
outsb
popa
pusha
pop
adc
sti
cmp
std
enter
aaa
adc
push
pop
rep
sub
cmpsl
pop
mov
mov
gs
and
cwtl
pop
pop
dec
sbb
dec
in
jmp
adc
pop
pop
mov
std
ret
ljmp
cmp
mov
dec
call
sti
test
jg
shrb
out
and
pusha
xlat
xor
jo
sbb
roll
into
shrb
stos
mov
iret
aas
mov
mov
jmp
cmpsb
popf
xlat
arpl
inc
xchg
mov
fisubs
pop
mov
mov
loope
dec
push
repz
std
stos
test
lea
popf
repnz
add
lods
cltd
push
iret
dec
aas
mull
cmpsl
and
mov
mov
jno
add
sbb
push
jg
mov
repz
adc
and
pop
leave
mov
push
adcl
insb
xchg
mov
movsb
and
sbb
dec
femms
cmpsl
outsb
imul
scas
mov
xchg
xorb
push
test
cmp
imul
sub
lods
jmp
std
or
fildll
inc
xchg
hlt
mov
lret
or
filds
xor
lret
lret
stc
pop
inc
mov
cmpsb
push
adc
leave
pop
in
add
insb
fnstenv
cmp
sub
pop
lock
sbb
pop
shll
mov
or
push
leave
pop
mov
sbbl
cmpsb
movsl
popf
test
mov
in
or
inc
out
js
push
popa
sbb
mov
xor
cs
stos
lcall
xchg
pusha
fs
scas
cwtl
addr16
xchg
pop
fdiv
and
mov
dec
fdivrl
cmp
xchg
ret
xchg
add
mov
stos
es
mov
nop
mov
dec
add
clc
ror
sub
insl
mov
lds
pop
fcomps
jg
jp
sahf
push
sahf
aaa
fnstcw
loope
push
mov
daa
faddp
out
mov
or
push
lods
adc
jnp
dec
push
scas
jnp
adc
dec
xchg
cmp
sub
jmp
dec
stc
sbb
cmp
pusha
or
push
xor
fsubrs
add
movsl
or
mov
jge
in
mov
arpl
rorl
cs
and
push
push
repnz
dec
outsl
inc
sbb
leave
xor
cmp
mov
loop
or
cmpsl
jecxz
mov
jo
sbb
lcall
shlb
add
nop
jecxz
rclb
jle
push
mov
sub
adc
xchg
int3
mov
je
sbb
xor
push
lcall
lea
loope
adc
mov
loope
out
sbb
das
js
or
xchg
aad
cld
dec
jg
arpl
push
xor
xchg
inc
jmp
cmp
sbb
sbb
sub
jo
ret
outsl
es
ret
fdivp
mov
xchg
out
stc
xchg
pop
push
cli
push
pop
out
lahf
shlw
dec
pop
stos
mov
lcall
data16
fildl
xchg
mov
push
fsqrt
into
and
inc
xchg
xchg
xchg
add
cs
mov
test
ret
cwtl
mov
into
loope
aad
adc
inc
inc
mov
nop
sub
mov
adcb
cwtl
xchg
mov
aam
stc
aad
es
cmp
fisubrs
fcom
push
mov
js
mov
push
jno
mov
xchg
xor
adc
inc
xlat
cltd
mov
add
or
ss
in
inc
mov
jg
ja
push
push
xchg
adc
call
sub
into
and
mov
mov
and
cmpsl
jo
xchg
sub
sub
fisubrl
xor
and
push
mov
sub
jl
mov
ret
popf
lea
leave
xor
mov
shlb
push
or
sbb
and
sub
jge
daa
shrb
sti
push
mov
push
cmpsb
mov
cli
dec
lock
mov
fistpll
push
push
shrl
nop
fildl
call
pop
mov
repnz
push
push
push
mov
add
mov
pushf
push
aad
repz
leave
mov
js
in
insl
push
mov
xchg
and
or
js
outsb
loope
insb
mov
divl
test
xchg
js
jmp
jb
je
mov
fsubrs
lahf
xchg
add
adc
vmwrite
scas
test
cmp
in
in
imul
cltd
jle
inc
stos
mov
mov
pop
or
add
imul
popf
pop
shll
push
imul
arpl
and
and
insl
jbe
push
popf
movsl
in
popa
hlt
shrl
test
lock
mov
sbb
aad
out
mov
jecxz
ja
push
loope
repz
inc
nopl
sub
add
adc
mov
dec
pop
mov
sub
stos
clc
mov
sbb
ljmp
rorl
ljmp
inc
fst
inc
cmc
cwtl
fmull
pop
jmp
pusha
adc
inc
jmp
sbb
outsb
pop
sub
xchg
js
push
scas
cld
push
or
loope
scas
mov
pop
stos
lcall
or
mov
mov
pop
rclb
and
ljmp
int
cwtl
mov
lea
inc
mov
mov
cmpsl
ja
lds
cmp
pop
pop
inc
cld
aam
repz
mov
mov
imul
xchg
cmp
iret
adc
jp
pop
mov
adc
fidivrl
mov
dec
cli
mov
cmp
push
mov
sub
shrb
mov
out
pop
leave
movsb
test
mov
push
sub
sbb
lret
fwait
aaa
jle
mov
mov
mov
pusha
jecxz
cmp
inc
dec
inc
xchg
cmp
fistps
push
stos
add
aaa
sbb
push
inc
aad
push
sbb
nop
call
push
xorb
shll
xchg
std
aaa
rorb
adcb
xor
imul
mov
inc
nop
mov
jg
mov
jg
pop
out
outsb
xchg
fsubs
mov
push
push
shlb
cmpsb
dec
or
xchg
orl
mov
mov
push
pop
repz
out
fnstenv
inc
adc
imul
jo
cmp
sbb
and
in
addr16
push
jns
sub
dec
sub
out
std
xchg
outsl
dec
mov
jle
lods
jp
repz
cmpsb
out
out
sbb
call
inc
movsb
pop
xor
jle
shlb
popf
scas
orl
sarl
jo
dec
adc
std
push
fwait
sahf
inc
pusha
xchg
insb
andl
out
pop
mov
xor
scas
lcall
cmp
icebp
sbb
mov
mov
imul
xor
stc
andl
pop
lods
mov
sbb
and
mov
xor
fsubrs
add
pusha
fidivl
sub
in
mov
sub
or
cmpsb
dec
lods
sub
mov
add
pusha
pop
jne
mov
iret
test
sarl
cmpsb
lods
cmp
nop
add
iret
fwait
loop
fnstcw
or
shll
icebp
test
mov
enter
dec
mov
xchg
fs
mov
outsb
push
leave
enter
sub
adc
fsubrs
inc
aas
ljmp
and
shll
lahf
and
xchg
aad
dec
bound
inc
enter
andb
inc
sbb
fadds
push
or
xchg
cmpsb
sbbb
lahf
inc
fdivs
es
subb
div
out
stos
bound
dec
jb
iret
je
push
jns
xchg
pop
pop
ds
and
mov
sarb
aam
dec
adc
pop
popaw
adc
fld
xchg
jge
mov
stos
add
orl
sahf
push
jge
subb
ja
jle
sub
test
pop
out
shll
xor
xchg
adc
push
xchg
cli
inc
insb
dec
mov
mov
mov
xor
add
or
test
inc
or
into
push
daa
xchg
cwtl
cld
mov
sbb
add
push
xchg
sbb
adc
xor
xor
jecxz
dec
sbbb
std
out
inc
fstl
daa
loop
jno
stos
scas
sub
jnp
scas
xchg
adc
xchg
add
daa
adc
not
popa
rclb
dec
lods
test
xor
mov
mov
nop
lods
dec
pop
subb
inc
rorl
xchg
xchg
test
mov
push
es
cmpsb
and
cmp
outsb
sub
mov
lcall
rorb
mov
sbbb
push
jmp
outsl
xchg
xchg
lea
or
jae
dec
stos
sub
movb
mov
mov
arpl
data16
cmp
loope
adcb
and
test
pop
dec
dec
pop
fstps
out
ljmp
mov
lret
in
mov
mov
inc
xchg
cmp
shrb
sbb
xchg
xchg
cmp
add
out
push
add
insb
js
stos
xor
enter
mov
inc
pop
pusha
test
mov
inc
movsl
push
add
imul
jge
xor
dec
int
repz
psrld
ljmp
test
fwait
and
ja
jno
fwait
push
dec
fmull
add
bound
scas
xor
lods
stos
pushf
sub
jae
pop
test
mov
iret
out
adc
jb
xor
nop
push
addl
imul
add
adc
sub
dec
jae
nopl
cmp
cmp
sbbl
adc
imul
push
xchg
adc
scas
push
insl
sahf
jae
push
dec
pop
sbb
dec
cltd
pop
pop
pop
out
js
mov
test
lahf
push
cmp
subl
sub
xorl
shrl
xor
jmp
lahf
mov
lods
push
movsl
mov
xchg
cmp
pushf
xchg
cwtl
pop
sbb
sbbb
hlt
add
dec
cmc
adc
adc
cld
sti
push
push
push
lds
lahf
call
stc
cs
push
inc
pop
inc
ss
push
jns
add
mov
adc
out
cmpsb
pushf
push
dec
jne
cmp
jl
mov
sbb
imul
xor
imul
adc
mov
int3
pop
js
and
scas
lcall
or
push
push
loop
xchg
sbb
ret
loope
xor
sub
mov
mov
xchg
in
xchg
push
xchg
outsl
pop
sar
cmp
sahf
push
cli
sahf
gs
je
pop
fcomip
or
fidivrl
xlat
or
dec
xchg
scas
ja
cld
out
mov
test
cmp
pop
inc
lods
loopne
dec
cmc
sbb
cs
adc
lea
outsl
pop
insb
cltd
rorl
sbb
add
ljmp
mov
cmp
mov
adc
mov
inc
cmpsl
dec
repz
sti
imul
mov
fadds
cmp
or
ud0
shrb
lret
inc
dec
or
push
out
nop
daa
xlat
lds
cmpsb
xchg
mov
lds
stos
clc
mov
adc
repz
adc
pop
xchg
jg
ftst
cmp
mov
out
outsb
mov
out
mov
mov
cmp
inc
pop
adc
push
mov
in
jp
out
psubusw
xor
or
std
scas
xchg
push
shrb
in
mov
aam
test
fsubr
jle
jecxz
insl
stos
fldl
rcl
jns
aas
negl
mov
shl
lcall
mov
imul
mov
inc
les
mov
push
cltd
add
jns
adc
ljmp
addb
cs
mov
pop
sti
xchg
mov
sahf
xchg
out
mov
pushf
and
lret
outsl
loop
jle
outsl
daa
adc
jo
aam
popf
pusha
loop
sub
stos
inc
cmp
xor
pop
testl
push
push
fildl
test
aam
lret
andl
into
scas
cmc
xchg
jl
jns
ss
repz
mov
and
push
xchg
push
and
out
sub
lea
inc
in
push
sub
mov
ss
adc
cmp
xchg
add
loope
test
jp
inc
loop
mov
int
cmp
mov
inc
ret
movl
lret
sbb
call
xchg
ds
push
out
ret
xor
jbe
and
sahf
push
out
arpl
ror
pushf
jae
fsubr
movsl
adc
push
jnp
lods
dec
inc
addr16
or
jnp
jle
rorb
aam
pop
jnp
aaa
ss
lock
jns
or
cld
cmp
push
inc
xchg
int
popa
addr16
rorb
aad
call
sub
dec
nop
bound
pop
mov
jbe
stos
sbb
mov
shl
sbb
les
xor
jp
rcr
sti
jno
mov
test
jbe
push
fwait
dec
ss
adc
dec
xchg
test
mov
imul
xchg
movsl
sub
add
iret
pop
push
xchg
sbb
dec
add
adc
push
shlb
cli
inc
jp
push
sar
roll
movsl
popa
fmuls
xor
jl
icebp
mov
sub
enter
dec
sbb
inc
clc
inc
icebp
stc
pop
jge
repz
inc
mov
jnp
pop
test
mov
push
jge
jb
cli
iret
push
push
pop
xor
cli
xor
hlt
cmc
cli
outsb
inc
scas
outsl
cmp
sti
ds
push
in
sub
sti
mov
jge
fs
push
pop
insb
cmpsl
push
mov
mov
stc
in
pop
cmp
mov
sub
insl
cwtl
mov
xor
shl
aad
jmp
mov
inc
std
pop
xchg
ficoms
push
add
insb
data16
pop
lods
lea
inc
push
aad
cmp
push
mov
jno
mov
popa
push
add
and
adc
lret
jae
and
cmpsl
pop
and
pusha
ja
pop
repnz
xor
jbe
fdiv
push
test
sub
adc
and
mov
sti
ljmp
aaa
hlt
pop
ret
test
les
enter
fidivl
loop
xchg
sub
aam
add
cmc
mov
loop
ja
insb
or
and
les
enter
sub
out
inc
test
sub
in
and
jbe
bound
mov
fsubp
rcll
add
sahf
aam
insl
bound
les
inc
mov
mov
ss
push
push
mov
mov
je
jmp
cmp
hlt
adc
nop
pushf
mov
sti
xchg
mov
add
push
imul
sub
mov
push
fwait
arpl
aaa
pop
mov
xchg
enter
ss
push
pop
and
std
add
mov
les
hlt
mov
add
mov
mov
mov
test
imul
dec
or
or
sarb
jge
mov
adc
out
push
icebp
inc
ret
cmp
xlat
jp
fsubrs
nop
and
shl
sub
ret
outsl
dec
pushf
pop
fldt
das
movsb
shlb
adc
adc
or
testl
in
repz
fcoms
mov
js
xor
icebp
jne
jle
bound
push
aad
push
push
xor
or
scas
aad
into
mov
std
test
adc
call
push
or
mov
shrb
and
cmp
enter
mov
ficoms
outsl
aad
filds
sub
and
jl
out
inc
xchg
jnp
sbb
es
rcrb
std
clc
inc
loopne
frstor
adc
jmp
test
ret
leave
rcrb
cmp
and
xor
inc
inc
pop
popf
sub
pop
frstor
icebp
inc
dec
imul
cmp
inc
stos
cmp
lcall
jp
cmpsb
add
imul
roll
jecxz
aam
dec
or
ficompl
and
pop
jo
push
adc
decl
cmc
scas
or
jo
jecxz
mov
lahf
mov
lret
jae
mov
std
sub
movb
sbb
aaa
adc
fsubrs
dec
insl
sbb
stos
decl
enter
icebp
ljmp
fs
push
pop
in
sbb
cltd
cld
rcr
sub
scas
test
sti
pop
xlat
jmp
cmpsl
sub
mov
fidivs
sahf
xchg
or
xchg
stc
dec
scas
cltd
sbb
push
sti
roll
movsb
mov
push
je
bound
dec
sub
lahf
xchg
negb
call
jg,pt
sbb
push
jg
sub
aas
add
mov
scas
popf
addr16
pop
sbb
shrl
jmp
xchg
sbb
push
mov
dec
orb
ja
ss
les
cwtl
out
pop
in
dec
cld
mov
js
es
cmp
fistl
mov
jne
sbb
unpckhps
jge
xchg
insl
mov
movsb
mov
cmc
fldenv
je
repnz
mov
fdivr
sbb
inc
stc
mov
push
mov
ret
addl
pop
mov
rclb
rorl
inc
pop
sbb
enter
push
jle
mov
jmp
stos
mov
add
adc
inc
bound
add
loope
or
dec
loope
jle
add
roll
sbb
adc
adc
cs
js
xor
leave
xchg
mov
dec
cmp
lcall
and
sub
outsl
sub
pop
mov
sbb
adc
dec
cmp
push
adc
and
shrl
repnz
cmpsl
adc
or
sbb
add
xchg
ret
test
das
xchg
mov
xchg
inc
and
adc
out
or
jbe
addr16
jp
in
jnp
push
enter
sub
gs
push
cmp
stos
data16
cmp
or
jo
out
mov
sub
adc
popa
je
mov
fsubr
movsb
sahf
lcall
insb
add
inc
je
pop
pusha
push
cld
sbb
mov
mov
mulb
push
push
movsl
mov
fistpll
movl
int
cmc
stc
mov
sub
call
arpl
shrl
pushf
popa
pop
loopne
leave
adc
jecxz
enter
fistpl
repnz
data16
cmp
push
sub
add
cmc
jecxz
pop
aad
leave
adc
frstor
or
jmp
jo
mov
jb
jo
or
test
ljmp
sbb
mov
sbb
fistpl
inc
mov
xor
mov
jg
imul
rol
pop
shrb
lods
inc
mov
inc
loop
inc
insb
xor
pop
lcall
push
jecxz
pop
loope
pop
dec
push
ljmp
int3
scas
push
jae
roll
hlt
mov
rolb
and
js
jmp
pop
or
sub
aad
mov
xchg
movb
xorb
xchg
jns
xlat
sarb
shrb
and
adc
and
cs
push
jne
loopne
std
bound
ret
sarb
orl
xor
add
out
div
hlt
adc
and
adc
add
lret
pop
in
repnz
fmuls
rcll
pop
sub
dec
scas
dec
sbb
jae
mov
outsl
aad
sbbl
pop
cmp
aas
cmp
sub
inc
xchg
mov
and
adc
sub
int3
xchg
imul
lret
lods
lret
inc
jp
inc
sbb
out
clc
cs
pop
roll
dec
ljmp
mov
jmp
movsb
rcll
repz
in
mov
push
sahf
push
mov
fdivs
subl
cs
push
push
mov
outsl
iret
adc
fwait
lcall
cmpsl
test
xor
jp
imul
push
movb
into
fistpll
repz
dec
pushf
aas
std
dec
outsb
aam
mov
cmpsl
or
sub
leave
mov
jmp
inc
cwtl
inc
insl
jecxz
jmp
lcall
sub
testl
shrl
cmp
sub
ja
outsl
icebp
popa
das
add
mov
jmp
les
add
push
adc
nop
jbe
adc
xor
dec
and
sbb
mov
divb
jb
arpl
sub
bound
xor
and
adcb
bnd
push
mov
icebp
outsl
pop
sub
mov
mov
dec
xor
rcrl
shrl
nop
jno
jmp
mov
sbb
test
mov
out
mov
adc
cmp
out
pop
test
cs
mov
out
ss
sub
xchg
lock
jecxz
int3
loop
cwtl
rcll
jmp
push
leave
into
arpl
cli
mov
and
clc
xchg
testl
cltd
jns
pop
sbb
pusha
fstpt
push
jmp
xchg
cmp
lock
mov
cmpsl
popf
out
loop
cld
pop
int
out
pop
add
or
mov
pop
xor
mov
or
lods
jg
mov
mov
jp
stos
sub
rcr
mov
lods
jp
popf
sub
pop
sub
mov
scas
xor
adc
fisttpll
test
mov
inc
push
sub
add
sub
cmp
push
iret
xchg
sbb
inc
sbb
ja
fwait
movsl
ret
inc
jle
in
cmp
cmp
fistpl
iret
push
jge
jecxz
cmp
jno
mov
push
addl
test
loope
inc
movsl
jnp
neg
mov
call
dec
ds
push
jl
add
mov
aad
or
xchg
xchg
lret
es
push
mov
sub
mov
or
push
sbb
aam
inc
dec
mov
mov
sbb
movb
stos
jecxz
and
mov
gs
mul
mov
mov
mov
subl
iret
inc
es
and
dec
jle
inc
mov
inc
xor
insb
mov
mov
pop
movntq
push
jb
frstor
dec
mov
nop
sbb
getsec
loope
xchg
ds
adc
push
push
xchg
insl
or
mov
mov
push
bound
adc
push
movsl
shlb
dec
adc
mov
push
push
sbb
and
mov
add
pop
jns
data16
xchg
jbe
adc
pop
repnz
mov
mov
shlb
inc
stos
int
lods
mov
int
sahf
je
add
jo
sub
mov
icebp
or
xor
sbbl
mov
rcll
pop
mov
jb
mov
sbb
notb
sbb
or
or
push
push
push
aaa
pop
cs
sarl
fstpl
jmp
cmc
push
imul
jae
pop
push
ret
repz
das
ja
popl
pusha
into
push
test
fidivs
xchg
adc
push
dec
push
stos
fcompl
lds
xchg
mov
in
add
jge
mov
call
repz
pop
arpl
or
ljmp
rcr
mov
add
xor
mov
xchg
adcl
fsubrl
mov
push
jne
cmp
push
int3
stos
lcall
lcall
dec
and
dec
and
mov
or
jbe
lret
push
cltd
imul
jecxz
jl
sbb
mov
pop
adc
and
dec
mov
mov
aad
dec
xlat
pop
testb
lds
cmpsb
xchg
lret
fs
xor
dec
jmp
pop
add
pop
idivl
jmp
cmp
mov
adc
cmp
or
fadds
add
jge
push
and
inc
lods
fisttpll
loope
aaa
cmp
cmp
hlt
addl
sbb
and
pop
pushf
into
inc
movsl
daa
sbbb
mov
fisubrl
inc
or
inc
or
mov
mov
jg
leave
mov
and
ja
push
lcall
outsb
dec
cli
sbb
jmp
inc
cmc
mov
stos
insl
frstor
pusha
test
inc
cmc
jmp
mov
jl
mov
sbbb
push
push
cli
sbb
xor
and
push
call
mull
filds
sub
adc
xchg
xor
and
data16
scas
in
adc
in
pop
bound
pop
out
dec
push
fs
out
mov
clc
ret
push
jl
xchg
loopne
ret
mov
xor
add
es
add
or
movl
xchg
xchg
mov
or
and
add
insl
xlat
adc
rcr
bound
xchg
mov
and
pusha
mov
data16
mov
out
dec
lea
out
sbb
daa
mov
mov
sub
sbbl
pop
pop
cld
pop
add
je
int
jnp
push
mov
stos
mov
inc
sbb
imull
xchg
popa
rorb
pop
gs
xor
push
jae
mov
div
std
rorl
push
add
test
lahf
testl
xchg
push
mov
cmp
roll
adc
in
imul
push
sti
xorb
push
mov
scas
negb
sub
test
xor
es
iret
jno
repz
adc
fistps
adc
jle
xlat
jle
xchg
sub
loop
pop
add
sbb
leave
pop
sbb
xchg
ret
cmp
mov
push
sbb
lahf
imul
shlb
sub
test
mov
sub
movsl
sbb
add
pop
xchg
push
inc
fscale
cs
inc
jo
inc
cmp
ljmp
call
mov
loopne
inc
iret
sbb
out
jo
fstpl
jae
xlat
jge
mov
adc
jns
push
iret
xchg
shr
sbb
lds
pop
test
scas
lea
mov
stos
popa
imul
jecxz
aam
fld1
mulb
sub
push
dec
aam
inc
in
ds
rol
iret
movsl
xchg
gs
sub
cmp
enter
arpl
inc
adc
mov
loope
out
pop
mov
repnz
inc
data16
adc
out
jecxz
and
jp
xor
out
into
iret
jg
add
mov
pop
rcrl
sbb
lahf
sub
xchg
ss
outsl
push
lahf
inc
leave
pop
hlt
xor
and
add
aad
cmp
cmp
sbb
std
mov
dec
in
ret
mov
insl
stc
push
mov
sub
sti
into
loop
sarl
ss
sub
std
call
cmp
mov
pusha
cmpsb
jmp
sbb
scas
push
mov
add
mov
cmp
loopne
arpl
lret
out
cmp
mov
bound
or
adc
or
push
pop
insl
nop
lret
fisubrl
mov
adc
and
les
cs
cmp
outsb
xchg
fmuls
push
sub
rorb
pop
sbb
push
popf
and
loop
mov
sub
push
sbb
pop
xchg
lods
rorb
fldl
sub
inc
out
add
test
sub
push
popa
xlat
add
add
xchg
mov
dec
add
cmpsb
and
les
mov
mov
pop
xchg
sub
insb
cmpsl
jmp
xor
popa
mov
arpl
or
or
inc
cmc
outsl
mov
push
int3
mov
sub
adc
insb
pop
bound
shlb
inc
mov
jno
jmp
fistl
out
mov
pop
jl
and
xchg
test
pop
mov
add
xor
loopne
out
jecxz
test
cmp
ficompl
std
mov
mov
cs
xchg
loopne
jnp
aam
push
add
inc
sahf
gs
int
pop
in
jne
sub
outsb
aas
jg
jne
mov
dec
call
sub
jno
xchg
xor
sbb
mov
fwait
xchg
out
pushf
shll
iret
push
out
sbb
xchg
mov
jl
push
xchg
jns
sahf
lcall
cld
lods
sbb
int
add
mov
fs
pop
jge
sub
dec
leave
and
dec
xlat
mov
sbb
add
cltd
rorl
adc
sahf
hlt
cli
xchg
xchg
popa
call
out
test
or
sbb
pop
es
hlt
cmp
cmp
scas
dec
fsubr
inc
sbb
jnp
dec
ss
leave
lahf
inc
dec
hlt
inc
jae
push
sub
addb
cmpsb
pop
addr16
pushf
hlt
gs
cmpsb
scas
les
mov
fistpll
mov
push
or
mov
sbb
dec
daa
imul
mov
push
sub
sbb
cmc
inc
mov
add
mov
orl
inc
inc
pushf
jge
add
jb
adc
ret
sbb
test
rclb
imul
orb
ret
lret
lock
mov
aaa
mov
out
in
fiadds
sarb
xor
xchg
leave
push
push
pusha
bound
int
mov
loope
fldcw
in
push
fsincos
cwtl
mov
mov
push
jne
push
mov
sbb
mov
push
sub
repz
mov
xchg
mov
adc
jmp
ss
mov
flds
lods
lcall
sub
test
xchg
cmc
jb
or
lret
je
push
dec
add
mov
push
fsubrp
gs
jg
or
icebp
and
clc
leave
xchg
jp
out
cmp
mov
shlb
fnop
int3
decb
mov
xor
lock
mov
jne
inc
mov
xchg
ret
xor
mov
cmp
insb
cmp
mov
cli
ret
mov
cmpsl
dec
rorl
xor
push
fisubl
stc
cmc
mov
shr
mov
mov
fsubrl
enter
fisttps
jae
cmpsl
mov
cli
inc
sti
loopne
sub
inc
jle
jl
push
jae
xlat
lahf
push
fildl
lret
mov
cmp
xor
add
int
dec
scas
movd
sbb
mov
adc
out
movsb
rcll
das
bound
mov
and
jge
insl
add
adc
mov
bound
fidivrs
fwait
mov
cli
imul
sahf
jp
mov
push
dec
enter
jge
stc
stc
mov
into
bound
mov
jp
push
repnz
cmp
test
sbb
sbb
inc
dec
mov
ror
mov
jne
outsl
gs
test
mov
sti
ljmp
mov
call
lret
out
mov
pop
inc
repz
jne
pop
fisubs
decb
out
cs
cmp
pop
popa
repz
movsb
push
aaa
and
leave
push
add
xchg
and
idivl
lods
mov
push
or
je
and
out
shl
inc
lcall
rolb
sahf
jge
rolb
sbb
adc
int3
lcall
mov
cwtl
adc
xlat
test
stc
inc
add
hlt
dec
cwtl
push
mov
pop
sub
call
outsl
push
fxam
add
mov
popf
movsb
jmp
ds
inc
aam
jne
dec
jno
mov
pushf
lods
addb
xchg
in
call
std
inc
push
test
stc
dec
cmp
add
imul
cmpl
int3
sahf
cli
xor
cs
adc
push
xlat
xchg
mov
in
or
fwait
mov
cmpsl
sbb
push
test
xor
mov
push
push
in
das
iret
ret
mov
jnp
loop
cmp
jno
outsl
movsb
cltd
fs
pop
or
cmpsb
cmpb
cmp
pusha
lret
arpl
dec
fs
or
or
jmp
jb
dec
or
add
jl
mov
out
mov
cs
mov
sahf
mov
in
cmpsl
xorb
popa
out
jae
movsl
adc
and
mov
xor
dec
cld
cmc
or
loopne
test
mov
pop
pusha
xchg
mov
int3
jecxz
mov
cmp
stos
test
adc
in
pop
int3
loope
loop
push
pop
shlb
int
sbb
test
testl
sbb
xchg
sbb
sub
jno
and
xor
mov
jno
sbb
cmp
pop
adc
xchg
pusha
std
adc
cmpb
or
and
out
or
mov
in
aas
pop
cmp
fsubr
dec
outsb
inc
xchg
mov
sub
pop
imul
mov
xchg
and
cmp
or
std
cmp
cmp
pop
addr16
push
inc
negl
xchg
and
ds
mov
fsubrl
xchg
pop
dec
inc
pop
stos
push
out
cmp
or
ficoms
dec
pop
popf
popf
push
jnp
pusha
daa
test
xor
add
leave
jl
inc
jb
xor
mov
cwtl
adc
enter
jp
push
pop
and
mov
push
das
lods
int
pusha
mov
addr16
sbb
cmp
hlt
mov
repz
or
or
jno
iret
sub
push
rolb
pop
lea
pop
adc
dec
cmp
aas
xchg
pusha
fcmovnbe
dec
sar
inc
push
stos
dec
or
sub
xchg
into
mov
fdivrl
or
cmp
sarb
and
hlt
rcr
push
or
aaa
std
push
push
aad
or
jnp
add
daa
fxch
jecxz
lods
cmpsl
mov
sti
cwtl
mov
call
sbb
add
shlb
mov
lcall
jbe
aam
dec
mov
rcrl
dec
mov
adc
lret
ret
je
lods
mov
mov
xor
adc
mov
mov
xchg
enter
mov
sub
push
jns
fisubrl
cmp
jns
inc
call
xlat
lods
add
gs
adc
aam
sti
inc
xor
push
ret
popa
push
fisubrl
pushf
push
mov
std
out
sbb
push
js
inc
cwtl
shll
pusha
lret
push
jg
sbb
rclb
das
jns
push
scas
mov
jae
das
cmc
jp
rorl
iret
into
insb
xor
pop
mov
out
outsl
mov
data16
insb
sbb
scas
add
dec
pop
xor
push
dec
push
loopne
mov
sarl
stos
lahf
pop
cli
gs
popa
add
mov
lods
cmp
pop
cmp
adc
iret
jns
sub
js
pushf
jge
out
mov
add
sub
and
sti
push
in
or
dec
nop
jnp
add
push
in
inc
xchg
cmc
negb
xorb
sbb
daa
cmpsl
fs
pusha
insb
cmp
imul
pop
je
or
add
xorl
aaa
rolb
xorb
into
in
mov
pop
dec
std
dec
scas
inc
mov
mov
xchg
out
inc
jl
xchg
gs
inc
imul
jmp
es
xchg
int3
stos
xor
mov
nop
mov
dec
ja,pn
ret
out
ror
and
in
mulb
lock
add
mov
das
inc
xchg
xchg
sub
adc
loope
lods
in
and
data16
sub
push
int
jo
dec
inc
mov
imul
lahf
dec
cwtl
frstor
and
stc
ja
call
mov
mov
aam
or
xchg
imul
movq
pop
or
in
mov
daa
mov
in
lahf
fsubl
fisubrs
xchg
jnp
scas
push
adc
outsb
out
mov
je
add
outsl
xchg
adcb
inc
xchg
dec
sbb
dec
sbb
cmpsb
adc
bound
sbb
shrb
movsl
and
mov
into
dec
div
inc
jo
imul
mov
cwtl
pusha
popf
and
cld
sbb
mov
fidivl
sub
cli
lahf
scas
jnp
rcrl
add
mov
xchg
jge
andl
test
push
stos
lret
pop
mov
sbb
cmp
fistps
es
bound
fsts
shll
es
xchg
in
dec
adc
push
stos
dec
or
jo
adc
lahf
mov
cmp
repz
cmpsl
lret
and
mov
sub
shr
mov
fnstsw
in
ja
pop
push
out
ret
or
iret
mov
xchg
and
mov
and
mov
xchg
push
aaa
loopne
js
and
notl
mov
add
mov
icebp
clc
pop
pop
scas
movl
fimull
and
mov
sbb
mov
movsl
jbe
test
adc
push
std
or
xor
push
inc
roll
scas
lcall
adc
jecxz
xchg
idivl
leave
loope
rcr
icebp
push
cmpsl
repz
cltd
pop
loopne
xor
push
push
popf
fwait
jmp
cmp
hlt
imul
xor
inc
sub
mov
jg
out
pop
ficompl
sub
insb
push
sub
jno
testl
jmp
test
dec
dec
push
scas
xor
adc
push
out
bswap
mov
or
addr16
out
push
loopne
pop
jb
and
sbb
push
mov
mov
in
roll
mov
data16
jbe
sbb
lock
push
dec
pop
adcl
movsb
mov
mov
inc
dec
mov
ss
dec
jne
icebp
int3
mov
xor
cli
or
push
ljmp
dec
dec
lret
je
mov
inc
dec
push
and
mov
aad
aad
jge
stos
mov
push
arpl
ss
or
jl
sbb
jne
xor
lahf
mov
movsb
dec
iret
insb
inc
int3
xchg
aaa
sbb
jmp
xor
mov
hlt
test
or
je
mov
imul
stc
sbb
pop
testl
xchg
xchg
push
mov
fistps
pop
pop
cmpsb
lret
shll
sub
shrb
push
lcall
out
shll
xchg
popa
stos
mov
sub
xor
lods
push
fcoms
sti
insl
decb
fidivs
das
scas
inc
cs
scas
adc
cmpsl
fwait
mov
jl
or
stos
sbb
mov
fimull
jp
xor
in
cs
lea
insl
mov
cli
fs
xchg
xchg
mov
pop
xchg
jl
mov
pop
sub
mov
in
cld
jae
dec
mov
jle
popa
daa
adc
jl
cmpl
add
xor
mov
pop
sbb
sub
push
mov
jge
inc
into
dec
sarl
mov
sub
push
cmp
sub
movl
cld
push
or
je
mov
cmp
cmpsb
ljmp
xor
sub
jns
xchg
pusha
push
in
ljmp
mov
stc
loopne
cmp
mov
sub
xchg
sub
int
sbb
aam
or
and
in
cmp
xor
inc
sbb
cld
dec
xor
dec
pop
or
ss
divb
sub
into
push
insl
pop
movl
adc
int
imul
push
cs
icebp
jbe
cmp
xchg
jg
push
jns
fdivr
xchg
push
hlt
xchg
jecxz
pcmpeqw
push
adc
in
xchg
js
dec
int
in
push
push
test
test
sbb
fwait
aam
imul
jle
lcall
sub
jbe
in
fwait
sub
clc
dec
ret
pop
ljmp
cwtl
push
and
cmpsb
jmp
stc
into
pop
fwait
xchg
jne
lods
jecxz
lahf
in
fadd
test
int
add
loopne
sbbl
xlat
dec
adc
and
jnp
aas
jmp
fwait
inc
int3
sub
xchg
je
aaa
sub
push
inc
inc
lock
add
sbb
pop
lahf
mov
adc
sahf
mov
jb
sub
lea
test
outsl
sub
enter
or
out
xchg
into
cmc
xor
inc
xchg
cmc
inc
pop
fstpt
cmp
sub
mov
or
je
and
adc
cmp
cmp
lret
mov
add
scas
int3
dec
hlt
xchg
sarl
or
pop
stos
cmp
or
prefetcht0
lods
das
or
dec
cli
mov
addr16
lahf
lret
adc
xchg
in
mov
ret
or
arpl
inc
or
lcall
movsl
js
push
adc
add
push
mov
insb
jmp
shrl
sbbl
ficompl
inc
xor
mov
mov
adc
mov
icebp
cmp
and
push
ret
jle
inc
push
pop
or
sub
adc
es
cmp
cltd
and
popf
inc
insl
lar
ja
bound
lods
sarb
or
test
adc
pop
out
in
in
xor
and
mov
push
sub
filds
mov
dec
lea
andl
hlt
leave
push
jae
push
idivl
ljmp
xchg
and
into
out
fidivrl
add
xorb
sahf
stos
fs
stos
jo
cmp
ds
sbb
loopne
push
ds
lods
les
push
sbb
adcl
add
sub
lock
sarl
pop
mov
adc
loop
jb
mov
and
inc
sbb
pop
jnp
mov
jl
leave
sub
ja
add
inc
aad
jmp
cltd
repnz
mov
xchg
fs
mov
mul
xchg
das
scas
mov
adc
stos
push
and
aaa
cmp
push
mov
inc
insb
dec
je
mov
andl
int3
pop
sbb
xor
adc
repz
cwtl
push
repz
sub
mov
sub
pand
clc
or
imul
leave
inc
jno
fdivrs
mov
jno
xchg
cmpsb
mov
pop
repz
ja
adc
add
test
pop
inc
mov
call
loop
mov
xorb
xlat
aaa
inc
xor
xchg
pushf
scas
fs
dec
iret
insb
cmc
outsl
dec
mov
call
mov
pop
xchg
dec
add
inc
iret
dec
sbb
add
std
sub
lret
pushw
aas
sbb
fistl
cmpl
mov
adc
int
pop
ret
adc
pop
movsb
mov
mov
push
insb
inc
lret
push
insl
mov
pop
sub
rcl
lea
out
fnstenv
or
dec
das
cmp
roll
adc
ror
nop
bound
pop
mov
ficoms
loop
ret
shl
loopne
or
shll
dec
orb
ja
xchg
add
and
cli
stos
xchg
xchg
jns
jne
mov
mov
test
xchg
pop
sbb
flds
dec
fisttps
jbe
inc
add
in
popf
bound
add
outsb
stc
push
lods
xchg
addb
push
xor
mov
inc
mov
or
and
mov
imul
pop
lods
add
daa
sub
movsb
dec
cwtl
enter
add
xlat
cmp
ja
lret
pop
push
ret
dec
loop
sub
mov
je
dec
adc
xor
dec
sbb
adc
cld
ret
xchg
bound
xor
lds
mov
mov
add
sub
mov
dec
ljmp
je
adc
aas
cmc
sub
and
mov
cmp
mov
mov
ficompl
mov
stc
dec
pop
jmp
mov
pop
pushf
aas
bound
mov
andl
and
xchg
add
aam
xchg
lds
xchg
repz
push
cltd
push
mov
mov
movsb
push
jmp
mov
int
add
in
mov
in
movsb
dec
insl
stc
jg
cmp
test
sub
outsl
adc
outsl
cmp
ds
ljmp
icebp
test
sub
jb
ss
dec
test
fidivs
push
mov
push
inc
outsb
add
push
daa
jle
mov
push
cmp
mov
rcl
mov
inc
imul
clc
and
adc
loop
lret
xchg
inc
gs
push
push
mov
cwtl
repz
pop
xchg
movsl
test
in
call
pop
jnp
jbe
xchg
sub
out
sbb
jp
int
mov
int3
lods
add
push
aas
jp
lods
jno
pop
push
rcrl
push
cmp
inc
std
or
lods
or
cmpb
or
test
popa
xchg
scas
inc
outsl
fwait
gs
sbb
and
and
bound
in
adc
nop
gs
js
adc
push
fwait
jns
cmpsb
iret
sbb
mov
mov
mov
fsts
dec
or
jb
push
daa
mov
cmp
pop
pop
popf
mov
mov
xchg
cltd
push
cmp
outsl
into
sbb
xchg
out
add
and
rorb
add
dec
xchg
sub
mov
mov
push
pop
push
xchg
test
pop
xor
or
push
adc
cs
ja
lods
out
lahf
mov
and
shrb
or
sti
or
mov
push
ds
fnstcw
mov
mov
xchg
dec
cmp
fsubl
mov
inc
cmpl
or
xchg
cs
cwtl
cmpsl
test
push
test
rorb
outsb
fnsave
mov
or
push
inc
cmp
ja
mov
mov
push
and
push
dec
cmpsl
push
ret
test
or
mov
push
sbb
ret
push
or
cmc
and
add
inc
movsb
and
or
subb
les
push
push
cmp
jae
mov
arpl
in
sti
leave
mov
cmc
jno
arpl
mov
xchg
pushf
sbb
mov
or
pop
and
cs
movsb
bound
std
jns
inc
xchg
dec
mov
lock
js
mov
inc
fiaddl
notb
cli
pop
inc
or
js
or
mov
iret
inc
cltd
aad
sti
xor
scas
add
ljmp
bound
cmc
repnz
call
inc
repz
movsb
jecxz
mov
dec
fsubrs
inc
dec
testl
mov
jb
xchg
push
repnz
jl
loope
cwtl
popf
out
enter
and
in
sub
pop
pop
xor
sub
imul
and
ja
call
es
sahf
push
movsl
leave
pop
popa
push
and
sbb
shlb
mov
jne
mov
cmp
cli
xchg
cmp
xor
outsb
jnp
push
loope
imul
stos
sub
pop
xor
push
int
inc
insb
sbb
fneni(8087
sub
stc
in
dec
cmp
sub
sbb
jl
xchg
in
fwait
fwait
leave
lea
push
sub
cmp
mov
and
push
mull
stc
js
mov
push
mov
pop
mov
mov
pop
jbe
sub
mov
jge
add
scas
fstpl
lea
xchg
xlat
or
xor
and
stc
fstps
pusha
add
int
aas
shrl
xorb
enter
ljmp
mov
add
fsub
aas
and
nop
cmc
or
jl
lcall
fisttpl
cmpsb
sub
inc
cmp
push
add
fdivs
rdtsc
jge
pop
push
and
lock
push
fcoml
repz
inc
dec
and
mov
lahf
inc
in
cmc
sub
push
roll
lret
push
jb
push
filds
shlb
cmp
stos
fwait
aam
mov
in
pop
xchg
addl
lea
pop
xor
in
cmc
and
adc
ja
jae
in
adc
dec
aad
andb
imulb
mov
divl
adc
imul
std
inc
out
xor
xchg
lds
cmpsl
cmp
daa
adc
js,pn
out
mov
or
inc
lcall
popa
repz
mov
lds
jge
push
xor
out
push
lea
xor
inc
pop
push
call
inc
or
scas
out
and
xchg
imul
pop
pop
xor
mov
stos
inc
push
pop
lret
add
inc
sarb
inc
cmp
lahf
outsb
shrl
mov
jns
cwtl
pop
cmp
and
rol
out
in
test
jmp
loopne
xchg
pop
test
xor
lods
cmp
xchg
push
pop
leave
cmp
cld
push
gs
xlat
pop
jnp
enter
movsb
and
in
mov
int3
daa
fldenv
and
jno
xchg
das
mov
cs
dec
stos
pop
sub
adc
outsl
inc
dec
out
lret
rcr
test
call
dec
iret
scas
ds
xchg
mov
jmp
pop
test
ljmp
jo
test
mov
xchg
pop
movsb
fnstcw
or
int3
xchg
mov
movsl
jnp
int3
leave
inc
mov
pop
fs
push
cmp
insb
jg
clc
jmp
out
ret
and
sbb
movsb
jno
mov
cmp
cs
loopne
sub
mov
or
js
into
mov
xchg
mov
dec
xchg
fildll
push
push
lods
in
mov
fists
and
ffreep
pop
imul
arpl
add
mov
sbbl
add
fsubrs
mov
push
and
dec
xchg
orb
shll
sbb
xchg
adc
rclb
sub
fwait
add
es
dec
pop
cmpsl
push
stc
inc
or
xchg
hlt
cmp
cmp
ja
int
push
mov
lcall
fistl
mov
sub
aad
cmp
sbb
mov
imul
or
jmp
sbb
dec
push
mov
les
mov
addr16
in
mov
ljmp
popa
mov
in
filds
daa
scas
mov
outsb
pop
pushf
clc
ret
mov
loopne
mov
xchg
lods
pop
subl
lahf
push
popa
cli
cmp
inc
mov
pop
dec
bnd
leave
push
xor
gs
dec
fucom
mov
in
aaa
pusha
loopne
stos
jmp
cmp
inc
subb
loopne
inc
test
or
jno
movsl
std
mov
pop
imul
rorb
jecxz
fistps
cmp
jmp
notb
jb
mov
cmpsb
insb
pop
movsb
jae
cld
aas
pushf
sbb
fcmovnu
jle
jle
enter
push
push
mov
and
imul
adc
xchg
clc
xchg
sarb
push
mov
lods
rcr
or
mov
jge
xchg
enter
and
adc
xor
mov
cmp
push
mov
into
or
daa
add
sbb
sbb
adc
out
jnp
fmul
pmulhw
cmp
mov
adc
popf
push
cmp
inc
mov
push
xchg
xchg
ja
adc
imul
sub
fucomip
in
xchg
inc
and
cmpl
jb
push
das
dec
fstps
nop
icebp
ljmp
adc
cmpsl
aas
push
jb
xor
aam
popa
mov
das
insb
or
pop
ja
xor
jge
sbbb
addb
lahf
in
call
pop
adc
xchg
iret
jns
cld
add
lahf
aaa
mov
icebp
mov
fwait
adc
aam
pop
cld
jae
enter
cpuid
xchg
push
test
push
icebp
jmp
mov
scas
jle
test
or
pop
jle
pop
pop
xchg
lea
xchg
xchg
and
aad
xchg
fdivrl
lea
xlat
or
sbb
leave
xchg
and
movsb
ds
pop
lods
mov
imul
mov
mov
test
sub
mov
jge
movsl
hlt
jo
divb
rcll
dec
imul
cmpsl
scas
add
inc
ss
sbb
mov
sahf
push
mov
sub
push
jle
loop
shl
jle
xor
cld
popl
jge
push
test
xor
sbb
les
js
enter
inc
cmp
stc
inc
push
call
and
add
sub
xor
in
mov
aam
lods
repz
mov
push
xor
mov
inc
iret
movsl
mov
xchg
int
xchg
mov
loop
and
xor
dec
inc
fiadds
stos
hlt
jge
mov
nop
push
jle
rolb
inc
jb
pop
dec
pop
mov
pop
int
xchg
jb
shlb
int3
outsb
movsb
jp
insb
or
pushl
filds
sbb
dec
push
dec
movsb
aas
push
fldcw
cmp
rcrl
and
iret
scas
shl
jae
or
fisubrl
notl
pop
sahf
mov
pop
mov
adc
popf
jmp
out
insl
pop
push
sbb
xor
mov
sub
fiadds
inc
fcomi
sub
dec
dec
lock
iret
outsb
dec
jmp
dec
mov
ret
sar
lods
xor
pop
orb
xor
pop
sarb
in
loope
mov
and
adc
test
inc
mov
lods
dec
loopne
mov
jmp
add
in
idiv
xchg
cmpsl
fistpl
adc
jns
jg
js,pn
adcb
jno
jb
shrb
lahf
aas
daa
insb
inc
mov
inc
outsb
out
inc
imull
movb
lcall
outsl
push
jge
cmp
jnp
sub
fsubrs
scas
push
in
or
or
mov
xlat
cmp
int3
and
imull
or
test
in
mov
addr16
mov
fs
cwtl
inc
cmp
xor
cmp
push
aad
outsb
jae
cmovp
stos
sub
dec
jns
push
pop
insl
jb
in
xor
cmp
fistps
mov
movsb
adc
jns
mov
icebp
mov
test
dec
xchg
push
int
inc
adc
adc
aam
mov
fs
dec
push
in
fbstp
sbb
push
cmc
dec
pop
or
lret
mov
js
add
shrl
sbb
les
arpl
mov
fbld
and
xor
iret
pop
call
shr
in
xor
push
lret
das
push
rcll
cmp
and
in
and
in
push
jnp
les
imul
pop
cwtl
mov
mov
xor
push
mov
cmp
xor
pop
mov
push
mov
mov
inc
mov
sub
frstor
adc
cltd
test
sbb
cmp
jl
mov
cmp
sub
or
je
push
out
sbbl
addr16
aam
mov
push
test
cmp
pushf
lds
add
int3
mov
pop
popf
lods
push
jecxz
mov
push
add
flds
aas
or
les
mov
add
xchg
dec
mov
and
mov
mov
xor
lret
mov
dec
std
push
shll
popa
loopne
fs
mov
mov
jno
cli
test
xlat
pop
and
cmp
adc
jg
mov
and
mov
inc
mov
jne
sub
inc
xchg
outsb
loop
stc
mov
mov
add
je
fdivr
es
push
loope
inc
cltd
xchg
aad
into
das
movsb
jbe
leave
mov
xlat
mull
es
gs
cmp
iret
loope
stos
add
filds
sbb
sbb
pop
adc
and
inc
mov
test
cmpsb
imul
enter
xchg
fdiv
cs
mov
or
dec
jmp
inc
or
call
cli
lahf
jbe
adc
and
jle
sbb
sub
inc
popf
jle
fucomi
shr
imul
inc
sub
mov
sub
enter
ret
rorb
lahf
xor
mov
jbe
sbb
cmp
or
adc
jmp
mov
icebp
mov
jne
fdivrl
pop
mov
mov
ss
xor
xor
xchg
lret
push
dec
cmc
ret
aaa
cmp
xor
xor
pushf
mov
push
mov
xlat
and
cltd
mov
insl
lret
xchg
or
sub
js
int
push
push
sbb
or
sbb
adc
cmp
mov
push
fiadds
dec
in
subl
push
decl
push
sbb
movsl
es
xor
rorb
dec
pop
sub
mov
js
xchg
cwtl
adcb
loope
stc
imul
push
negl
push
movsb
and
dec
xchg
stos
xchg
mov
leave
sbb
add
inc
das
xchg
mov
mov
cmp
or
pusha
rcrl
fimull
mov
scas
push
outsb
cmp
lcall
push
push
sahf
pusha
jmp
cmp
stos
sbb
cmp
outsb
inc
daa
fisttps
out
xchg
inc
mov
pop
inc
jecxz
xchg
dec
mov
stos
insb
inc
std
mov
adc
mov
mov
adc
mov
lock
push
aas
dec
sbb
inc
add
notb
push
or
mov
mov
pop
mov
fcoms
cmpsb
adc
pop
rcrl
adc
sti
push
adc
adcb
mov
hlt
inc
push
enter
adcb
icebp
in
dec
or
lock
lods
popa
aam
rol
sub
fwait
push
je
pop
test
jle
adc
dec
mov
mov
dec
mov
jl
mov
mov
pusha
jle
push
sub
aam
xor
sub
dec
mov
rcrb
push
sbb
adc
mov
pop
dec
fs
jo
sub
negl
mov
push
loopne
pop
sbb
xchg
cwtl
mov
jo,pn
cltd
repz
aaa
int
cmpsb
dec
js
aad
leave
int3
pop
adc
test
mov
outsb
cmp
inc
int
jns
sti
ret
jp
incl
push
dec
mov
sbb
mov
rcrb
xchg
test
loopne
repz
sub
sub
int
jnp
cwtl
es
fdivrs
sbb
aaa
add
push
cltd
in
jbe
jns
and
repz
rcl
ja
fwait
addr16
xor
jl
pop
sbb
ds
mov
and
pop
mov
scas
xchg
fstps
pop
sbb
incb
add
shrb
cmp
loop
fdiv
idivl
ljmp
push
add
mov
rcl
push
fwait
push
mov
cmpsl
jnp
lcall
pop
mov
sub
dec
mov
stos
or
inc
xchg
cmp
mov
adc
and
xchg
jmp
loop
test
outsl
mov
ret
pusha
addr16
sbb
adc
mov
pop
xor
pop
push
mov
push
in
int
aad
gs
add
orl
inc
sbbb
sbb
adc
in
rcll
flds
subl
jno
rclb
mov
mov
movsb
out
add
pop
sub
xor
sub
call
cmpsl
shlb
sbb
das
lahf
das
scas
and
jg
lock
fwait
mov
rcl
repnz
push
jb
lahf
adcb
notl
jge
sarl
add
add
repz
test
aad
pop
or
out
push
ljmp
jae
ret
adc
xor
ss
jae
add
fwait
inc
fiadds
popa
lods
jne
arpl
lret
jae
xor
jg
fidivrs
rclb
pop
mov
xor
pop
push
test
jne
js
fbstp
lcall
andl
leave
dec
outsl
jns
sub
mov
push
jg
rol
push
add
movsb
lahf
add
es
data16
popa
andb
or
or
xchg
pop
inc
sbb
push
pop
add
pop
sbb
fidivrl
imul
scas
inc
inc
add
cli
insl
adc
addr16
mov
ret
sbb
hlt
mov
mov
push
subl
and
cmp
xchg
mov
dec
fs
scas
out
scas
subl
push
add
and
xchg
pop
aam
dec
xor
xchg
push
xchg
int
pusha
xchg
jae
out
fdivrl
adc
not
xor
or
cmp
xor
in
and
mov
and
jno
pop
sarb
repnz
ljmp
les
enter
sub
jbe
fldenv
mov
pop
sbb
cli
data16
scas
add
das
pop
repnz
out
xchg
inc
lahf
lret
popa
loopne
xchg
insl
cmc
rcrl
leave
repz
loop
in
sub
cs
nop
jle
sub
or
push
pop
adc
xchg
pop
jecxz
gs
cmp
insb
cmp
leave
nop
mov
adc
push
or
add
push
jne
jle
cmpsl
jl
test
mov
fbstp
sub
je
xor
movsb
lcall
ret
jl
xchg
pop
jmp
icebp
cld
mov
or
jg
pusha
out
cs
cltd
mov
pop
movsl
popa
mov
enterw
shr
sarb
in
and
push
bound
add
add
test
rcr
gs
scas
stos
mov
inc
xchg
xchg
mov
in
les
add
and
clc
hlt
inc
adc
sub
mov
push
stc
dec
or
stos
shlb
iret
imul
jmp
adc
pusha
mov
or
cld
add
pop
ret
lcall
push
out
xchg
push
cwtl
push
or
test
mov
aam
sbb
ja
xchg
or
mov
mov
or
mov
mov
dec
call
mull
jmp
push
ljmp
cwtl
clc
outsl
stc
shl
adc
xor
aad
and
ss
cmpsl
push
push
sub
into
mov
mov
pusha
adc
pop
mov
ror
push
pop
push
jae
pop
sbb
inc
hlt
repnz
fs
data16
xchg
cltd
clc
test
lods
jl
lea
push
fsub
pop
mov
imul
mov
ss
mov
cmpsb
and
cmpsb
cmc
jb
imul
mov
int
popa
dec
movsb
sub
mov
jge
xchg
inc
sar
fucomp
xchg
in
sub
dec
mov
sub
dec
jl
push
movsl
fistpl
inc
pop
fistps
popf
pop
rcrb
les
cmpsb
cmpsb
mov
dec
ljmp
movsb
gs
call
clc
xchg
jg,pt
inc
xor
mov
push
and
jo
les
test
jmp
sub
sbb
jo
mov
jbe
loopne
cmp
pop
sar
sub
es
xchg
stos
and
mov
push
nop
das
hlt
mov
rcr
sbb
test
or
mov
and
cmp
mov
shr
and
loope
mov
sbb
shlb
or
add
call
mov
inc
push
dec
dec
add
mov
mov
jl
and
xor
or
and
dec
insl
jmp
fwait
adc
or
andl
push
xor
cmp
and
jg
cmp
data16
add
jb
push
bound
push
pushf
fnstcw
out
negb
popf
testb
in
lods
mov
push
loop
push
repnz
cmp
sub
inc
shll
loope
pop
ljmp
bnd
int
das
mov
subl
xor
cs
cmp
dec
or
mov
fld
nop
aam
int3
fnstsw
mov
sbb
jbe
mov
repz
dec
mov
testl
xor
shrl
dec
repnz
fs
cwtl
or
mov
fcompl
push
inc
test
testb
and
test
xchg
in
scas
push
mov
outsl
mov
je
jg
shl
mov
push
mov
pushf
sub
cmovae
pop
jl
xchg
decl
mov
sub
faddl
jnp
add
sub
sbb
push
mov
out
fwait
pop
ss
mov
mov
cmp
int
or
push
sbb
push
fdivs
pop
add
shll
daa
mov
mov
clc
mov
or
cmp
insb
xchg
repz
clc
outsb
adc
dec
add
sti
imul
push
mov
rcll
je
cmp
pop
fnsave
mov
stos
pop
add
in
cmp
mov
dec
jno
xor
mov
ds
mov
adc
xlat
mov
push
jno
sbb
dec
and
mov
cld
subl
and
jge
das
xchg
ja
orb
push
std
cli
scas
pusha
xor
shl
sti
push
xor
shlb
in
jbe
adc
push
popa
mov
mov
inc
and
pop
cltd
rclb
cwtl
dec
sbb
int3
fistpll
xor
mull
mov
lock
lret
stos
sbb
shrb
add
hlt
fsubrl
jp
incl
stos
in
lods
mov
pop
sbb
xchg
dec
idivl
ljmp
int
cmp
push
stc
inc
ljmp
mov
adc
push
lahf
mov
fsub
sub
dec
push
mov
jge
stos
mov
fnstsw
and
push
xor
ljmp
mov
outsb
movsl
push
dec
jl
test
xor
sbb
data16
mov
or
lods
js
mov
jnp
clc
je
test
mov
jl
push
js
jnp
mov
fwait
add
jns
dec
lcall
aad
fisubl
repz
cmp
inc
call
lahf
sbb
lds
pushl
mov
add
xchg
ja
push
cmp
gs
mov
std
xor
scas
sti
sbb
xchg
push
cmove
sahf
lahf
mov
icebp
xchg
mov
push
xchg
imul
or
icebp
fistpll
push
adc
scas
xchg
fnsave
ss
mov
sarl
and
jnp
lcall
cmpsl
lret
push
in
pop
mov
int3
sbb
add
and
fbld
push
jnp
sub
xor
or
push
fwait
xchg
inc
mov
aaa
jle
lret
test
pusha
cwtl
je
push
pop
xchg
pop
inc
test
leave
cmpsl
stos
mov
cmpsb
cmp
jno
pop
data16
mov
mov
sub
mov
mov
stos
jno
and
movsb
and
arpl
andl
mov
jo
scas
fcmovbe
jno
xor
mov
fcomps
mov
pop
xor
jg
scas
shlb
fdivl
sahf
sub
xchg
pop
inc
test
dec
xchg
jb
jp
xchg
add
mov
outsb
xor
fwait
in
adc
jle
push
out
add
in
leave
jae
and
addr16
or
stc
xor
mov
sahf
test
pop
inc
mov
inc
movsb
jne
jns
xor
jno
xor
mov
dec
mov
push
aas
and
pop
add
repnz
xchg
testb
cmp
pop
mov
lcall
sub
xor
fs
mov
outsl
clc
aam
nop
push
push
cmpsl
push
cmp
lods
test
mov
add
lock
enter
test
or
pop
in
mov
mov
cmp
das
pop
out
adc
nop
jg
lret
subb
mov
das
jle
xlat
cwtl
inc
rorb
or
mov
mov
nop
adc
inc
insb
mov
xchg
fstpl
repz
pushf
fcompl
jb
loope
mov
inc
cmp
jbe
loopne
sbb
cmp
mov
pop
jl
add
adc
or
mov
xor
pop
and
cmpsl
add
int3
pop
push
jl
and
loopne
mov
movsl
popa
cmpsl
test
subb
xor
aas
loope
jns
mov
arpl
fisttpl
xchg
lock
jb
dec
mov
inc
xchg
mov
xchg
call
movsl
pop
imul
je
popf
lods
shlb
mov
in
xchg
dec
jnp
aaa
test
xor
dec
jo
out
fwait
movzwl
call
outsb
pop
or
xchg
popf
xchg
nop
into
test
lds
adc
out
pop
shlb
adc
movsl
popa
ljmp
lea
sub
add
jl
stos
sbb
jge
xchg
push
or
sbb
dec
pusha
sub
xchg
mov
xor
or
neg
push
mov
jl
push
sub
fldenv
cltd
mov
loope
mov
pop
repz
iret
cmp
rclb
pop
mov
shrb
rorl
test
rol
push
int3
sbbl
pop
adc
cmp
mov
xchg
loope
insb
out
loopne
add
xor
mov
adc
pop
mov
jge
pop
shrl
push
frstor
cmp
sub
fdivs
outsb
cmc
out
lahf
gs
sub
pop
punpcklbw
add
push
std
shrl
das
std
rcr
pop
xor
lret
je
stos
imul
xchg
add
aaa
fnsave
cmp
aam
roll
push
jl
lea
insb
pop
pop
xchg
cwtl
cmpsl
mov
sbbb
xchg
aaa
int3
xchg
or
cmp
or
cmp
xor
mov
mov
xchg
cmp
jp
lods
add
add
xor
scas
mov
mov
notb
outsl
dec
dec
sub
push
int3
rorl
adc
add
loop
pop
jb
xlat
pop
push
imul
push
mov
lahf
xchg
and
push
loopne
push
mov
fldcw
mov
dec
ds
div
dec
mov
push
scas
test
fdiv
addl
jno
aam
xor
rclb
je
jmp
dec
jg
sbb
push
mov
pushf
lret
mov
adc
xor
fdivl
cmp
lcall
sub
push
xchg
inc
sar
dec
aas
rcl
mov
pop
lret
xchg
sbb
adc
xlat
cli
pop
add
outsl
cmp
mov
xor
lds
sub
popa
sub
fdivrl
jp
aaa
ljmp
loop
mov
aad
mov
xchg
jecxz
in
pushf
stc
xor
mov
xchg
inc
mov
and
std
clc
mov
sub
arpl
pop
test
xchg
andl
insb
sbb
decl
mov
repnz
mov
repz
xorl
out
popf
mov
js
cmpsb
icebp
hlt
and
hlt
push
cli
mov
lcall
and
lcall
repnz
js
mov
mov
mov
xchg
subb
idiv
pop
inc
das
jne
inc
scas
push
out
xor
arpl
xchg
test
repz
fmull
and
xchg
std
cmp
add
in
clc
push
mov
pop
inc
push
repz
mov
test
jb
cmp
stos
or
pop
inc
adc
mov
cli
daa
mov
shlb
adc
push
adc
out
add
jle
int3
leave
mov
xor
rorl
mov
std
mov
sub
int
aad
and
fdivrs
push
cltd
movsb
loope
sarl
shrb
xchg
jp
add
mov
pop
mov
test
shlb
cmp
in
dec
stos
push
lds
dec
jnp
into
mov
fbld
repz
push
jmp
mov
xchg
jns
cwtl
mov
jbe
dec
mov
mov
mov
add
outsb
mov
fnstenv
adc
pop
cs
cmp
mov
outsb
pop
mov
loopne
popf
adc
jmp
push
cld
inc
xor
inc
mov
dec
sbb
push
arpl
add
xchg
aaa
int
ds
stos
jnp
push
add
cmp
mov
or
mov
fisttps
xor
push
in
adcb
pusha
ret
sbb
out
xchg
imul
xchg
ds
fucomip
push
repnz
cmpsl
rorb
test
mov
cmp
sub
je
sbb
jecxz
jp
jle
stos
mov
sbb
add
jo
pop
sbb
stos
lods
movsb
adc
jmp
sub
je
cmp
jle
mov
fs
mov
sub
mov
add
in
lahf
shrl
sbb
jae
mov
pusha
and
jg
inc
xchg
ss
mov
and
outsb
inc
test
lahf
out
adcb
cmp
jle
pusha
adc
lock
xor
and
jmp
cmpsl
aaa
jmp
sub
insb
adc
xchg
mov
cmp
mov
jnp
rorl
adc
into
xchg
cmp
pop
mov
mov
sbb
xchg
add
mov
jne
pop
sub
push
std
sbb
movsb
sub
xchg
pop
jo
notl
mov
adc
or
ja
xor
mov
mov
cli
mov
daa
mov
mov
inc
or
jno
jns
push
cmp
jae
mov
mov
mov
push
testb
outsb
rcrl
dec
mov
pop
mov
dec
inc
testb
inc
dec
inc
lds
cmp
test
daa
or
mov
xor
sti
test
addb
ficoml
add
aad
cltd
test
jmp
xor
jl
adc
js
mov
ret
xchg
inc
scas
xlat
and
es
stos
inc
and
ret
xor
cwtl
jecxz
push
add
stos
pop
dec
sbb
push
les
add
sti
in
xchg
inc
lea
cwtl
sbb
mov
outsb
outsl
inc
enter
movsl
scas
adc
call
ss
mov
sbb
sbb
push
xchg
sbb
dec
push
les
or
pop
and
pusha
mov
mov
int
dec
subb
sub
call
jne
or
adc
nop
scas
xchg
in
stc
xchg
or
or
xchg
das
popa
stos
movsb
lret
es
mov
repnz
insl
inc
rorl
in
xor
or
or
push
adc
cmc
push
fistps
fimull
lsl
into
rorl
add
pushf
cs
ss
add
mov
insb
push
fsubl
adc
and
mov
pop
std
mov
imul
mov
or
mov
mov
fwait
dec
imul
shl
sub
jnp
sbb
movl
hlt
add
pop
test
jmp
pop
arpl
jmp
mov
adc
lods
lea
vmread
sub
jmp
loope
or
test
aas
mov
lock
push
xchg
push
push
add
jp
das
push
mov
sub
addr16
mov
aam
adc
mov
push
mov
mov
repnz
mov
fdivs
pushf
incl
movsb
inc
and
pop
pop
add
leave
push
js
gs
pop
lods
cmp
stc
gs
mov
stc
cld
clc
lcall
pop
test
int
sbb
fwait
sahf
orl
data16
xchg
pop
pop
adc
loop
jecxz
inc
clc
jl
cmp
outsl
insb
sub
mov
rcrb
mov
lahf
nop
and
in
cmp
sub
mov
xchg
insb
movsl
jge
or
pop
rorl
cmpsb
mov
xchg
lcall
stc
pushf
dec
cmp
andl
sub
xchg
loope
daa
sti
nop
jns
add
leave
adc
cmp
mov
xchg
std
push
jl
mov
lods
pop
scas
add
mov
sub
ds
cmp
fwait
sti
sar
sbb
adc
roll
scas
adc
mov
xlat
mov
rcrb
adc
mov
sti
xor
or
mov
dec
icebp
mov
or
and
roll
mov
aad
orl
fldl
jne
cs
in
les
fmul
fidivrs
icebp
scas
loope
xchg
mov
and
outsl
ljmp
inc
push
add
mov
pushf
loop
cmp
xor
mov
je
pop
enter
fdiv
fbld
push
jle
adc
inc
bound
push
add
mov
sub
data16
shlb
insb
rolb
jns
add
in
mov
dec
ja
sub
mov
out
loopne
out
mov
xor
ret
notb
fsubl
sti
mov
jae
or
add
sbb
fidivl
cli
jnp
int3
inc
std
inc
sub
adcb
cmc
jo
popf
das
sbb
and
jns
dec
jns
popa
bound
repz
loope
or
xor
push
pop
lock
rcrl
jmp
mov
xor
loop
push
sahf
mov
jnp
sbb
movsb
sub
aam
sbb
icebp
addl
add
notl
mov
sahf
cmp
jmp
ja
jmp
add
push
cld
dec
add
out
mov
inc
push
pop
lods
push
rorb
sub
ficompl
int
aaa
outsb
cmp
pop
popa
jo
mov
call
adcl
push
clc
pop
lahf
sti
outsb
test
loopne
inc
jmp
jl
inc
cs
adc
xor
push
push
push
jmp
pushf
add
or
lret
adc
mov
cld
fwait
daa
mov
and
mov
mov
js
negb
ljmp
lcall
ljmp
mov
mov
xchg
mov
jg
fisttps
sbbb
pop
cltd
inc
xchg
out
pop
movsl
movsb
pop
push
frstor
stc
jmp
fnstsw
lock
adc
push
test
lock
mov
mov
mov
pop
jbe
loope
out
hlt
mov
adc
out
jbe
bound
cmpsl
pop
xor
pop
mov
and
add
adc
adc
scas
mov
test
xchg
stc
scas
inc
stos
sub
shr
add
dec
jbe
call
jbe
daa
pop
inc
call
mov
mov
mov
in
xor
inc
push
out
mov
xchg
sub
jne
test
pop
out
push
mov
mov
push
rcl
jno
lahf
xchg
lock
adc
inc
jno
push
sub
xchg
int3
and
jp
push
cltd
dec
add
xchg
push
xchg
xor
dec
int
loop
pop
stc
mov
ds
lea
mov
scas
das
adc
adc
iret
pop
pop
dec
sub
xchg
mov
scas
lahf
jge
es
sbb
add
xlat
pop
pushl
inc
scas
sub
f2xm1
lret
push
adc
xorb
outsb
pushf
movsb
dec
adc
fcompl
cmpsb
mov
movsb
int3
xor
cmp
or
clc
scas
mov
in
mov
cs
cld
mov
adc
imul
xor
xchg
orb
xchg
fidivs
std
xor
cltd
push
mov
pop
push
lock
xor
xlat
mov
leave
inc
pop
xchg
clc
pushf
mov
sbb
mov
xchg
push
push
xor
ljmp
mov
std
pop
popa
inc
add
sub
mov
or
sti
xor
pop
in
xorl
push
or
andb
add
sbb
lea
iret
mov
test
insb
jb
in
mov
daa
pop
je
les
cs
aaa
jmp
cwtl
idivl
mov
jl
pusha
xchg
jmp
enter
outsb
fs
mov
fs
cltd
mov
xchg
enter
push
and
sub
sbb
mov
adc
shr
out
xor
movsl
xor
out
jmp
cmp
add
cmpb
cmpsb
dec
mov
push
inc
lods
push
fst
jo
jmp
cmp
adc
data16
jb
push
notl
in
and
sti
mov
cmp
and
int
std
dec
adc
mov
xchg
dec
jb
cwtl
xorb
push
stos
mov
movsb
pushf
flds
cmpsb
adc
and
and
outsb
jge
cli
and
xor
xor
jae
xor
cwtl
repz
mov
xlat
sub
sbb
inc
outsb
xchg
jle
or
fldt
jns
xchg
pop
xor
xor
xor
ss
cltd
inc
mov
sub
xor
cmc
or
jle
add
adc
jno,pn
jp
dec
js
dec
cmp
cmpsl
imul
push
push
adcb
leave
add
sahf
mov
jo
cmp
aad
inc
into
ret
adc
lds
or
or
or
mov
shll
add
mov
mov
sarl
xchg
les
cld
lods
jnp
pop
jmp
pop
push
mov
aas
cmpsl
shlb
movl
push
add
out
les
int
fcompl
clc
call
repz
notl
and
outsl
push
sbb
xchg
das
jo
fldt
xchg
sub
shlb
sti
insb
lods
mov
lods
cmpsb
mov
std
mov
cmc
daa
repz
popf
xchg
add
cli
xor
cwtl
cmp
dec
mov
insb
sbb
in
fdivs
inc
daa
ljmp
cmp
mov
out
lds
insl
bound
inc
mov
xchg
imul
lods
and
das
xchg
inc
fimuls
orb
insl
push
ja
ja
lret
sub
mov
and
repnz
loope
popf
sbb
scas
mov
pop
xchg
push
sbb
dec
pushf
test
adc
sahf
or
and
mov
test
dec
in
pushf
xor
pop
pop
ljmp
jo
movsl
shll
stos
incb
int3
ret
mov
adc
inc
mov
arpl
inc
es
sbb
fs
push
jecxz,pn
or
popf
hlt
arpl
insl
inc
mov
push
mov
jno
lock
cmc
dec
cmpsb
popf
add
scas
imul
xor
shl
rcl
push
pop
ljmp
fbld
in
addr16
ret
cmp
cwtl
dec
mov
xor
pop
scas
cmp
cwtl
xor
fcomps
and
xchg
push
rdtsc
mov
dec
and
fldenv
adc
inc
sbb
push
add
sub
js
icebp
pop
mov
mov
dec
pop
inc
ja
mov
sti
fldcw
int
pushf
addb
and
push
sbb
repnz
pop
sbb
add
cs
mov
fsubrs
pop
lcall
jno
mov
xchg
test
adc
leave
and
cmp
add
adc
jno
cmpsb
mov
test
mov
or
xlat
fs
cmp
sbbl
loopne
mov
and
nopl
into
xlat
inc
and
aad
xlat
nop
mov
add
out
aad
idiv
push
xchg
stc
add
or
jo
arpl
sbb
iret
pop
ja
movsl
rorb
sbb
dec
into
mov
xchg
pop
inc
ljmp
inc
mov
jbe
shrl
jns
cmp
aas
push
xchg
std
sbb
out
hlt
xlat
sahf
fsts
or
push
inc
push
pop
aas
jle
xor
movsl
inc
jle
clc
es
shrl
cmp
mov
sbbl
mov
inc
inc
lock
pop
xor
xor
pop
mov
mov
stc
mov
imul
sahf
xor
cmpsb
pop
lock
imul
scas
fmul
into
dec
stos
shlb
xor
into
inc
aad
outsb
faddl
mov
aas
or
cmp
push
stc
popa
ret
sub
sub
fs
xchg
cmp
xlat
add
xchg
adc
mov
mov
fnstsw
pop
fs
pusha
loope
cmp
add
and
mulb
cmpsl
cltd
and
mov
mov
push
nop
in
in
adc
dec
inc
fwait
push
pop
imul
push
rcrb
and
inc
mov
imul
test
mov
adc
cwtl
dec
push
fs
es
testb
mov
xchg
mov
inc
test
dec
cmp
push
jo
xlat
ljmp
sti
leave
cltd
in
sub
inc
repnz
sti
push
xor
mov
lret
xchg
popa
test
cld
push
daa
mulb
jp
add
out
cmc
fwait
divb
std
syscall
xchg
pop
lret
repnz
xchg
or
and
fiaddl
outsl
mov
pop
lret
and
cmp
inc
mov
inc
iret
push
inc
dec
mov
mov
add
or
mov
ja
push
and
jecxz
stc
aam
add
pop
fdivrl
xchg
adc
and
test
ja
xchg
jle
arpl
jl
xor
jnp
pop
jne
xor
insl
scas
fisttps
or
pusha
negl
aaa
scas
inc
push
lds
jmp
sarl
std
or
fistl
mov
mov
jl
ja
jl
lret
pop
les
pop
jb
js
movsl
cwtl
mov
cmp
mov
shlb
mov
test
add
add
xchg
cld
ret
dec
mov
je
mov
fsubrp
roll
mov
sbb
call
add
and
mov
jnp
xor
or
jns
jmp
fidivrl
outsb
inc
test
jecxz
dec
push
mov
out
pop
cltd
cs
lods
jo
jne
cmpb
clc
das
fsubr
push
ds
call
jecxz
nop
jge
or
int
mov
stc
adc
mov
cs
xchg
push
sbb
dec
mov
sti
push
cmpsb
nop
ret
pop
cmpsb
lret
imul
xor
cmpsl
jb
jb
hlt
inc
xchg
pop
testb
iret
cli
jmp
jp
mov
pop
jmp
xchg
dec
es
aaa
sub
lea
fimuls
scas
push
inc
jp
jge
cmpsb
cli
and
inc
inc
pop
pop
sub
jne
pop
add
lret
popa
ds
push
daa
add
jbe
pop
mov
xor
dec
sbb
test
push
scas
add
fidivl
nop
xchg
pop
or
testb
jno
fucom
or
inc
lcall
gs
lea
iret
lcall
mov
inc
xchg
outsl
sub
push
lds
push
push
pusha
push
push
stos
sbb
pop
imul
sub
fs
decb
std
push
sbbb
rcr
xor
fstpl
xor
mov
add
pop
test
lea
daa
and
mov
lea
or
mov
lret
add
addb
in
bound
push
movsl
aam
push
xor
ss
fsubrl
in
and
scas
outsb
cli
xchg
adc
out
fdivrs
cmpb
push
inc
daa
jnp
adc
jge
movsb
adc
xchg
xor
out
aad
push
in
cmc
pop
pop
mov
out
rcll
cli
arpl
test
out
adc
sbb
cwtl
ljmpw
mov
pushf
sub
dec
cmp
rclb
xor
jne
jecxz
cmpsl
mov
sub
sbb
in
dec
ficompl
in
mov
mov
lea
aam
jecxz
lea
dec
xchg
and
addr16
xchg
mov
mov
movb
xchg
ja
pop
cltd
xor
loopne
stc
xchg
jns
xor
jl
repnz
dec
loope
add
lods
jb
dec
push
test
mov
fcmovnbe
add
jae
mov
push
or
mov
test
jmp
mov
lret
push
push
or
pop
cwtl
lcall
in
jne
shrd
sub
shrl
fdivrs
dec
sub
arpl
cmp
lods
adc
jns
xor
inc
mov
data16
mov
les
stos
sub
adc
movsb
push
xchg
sub
mov
ds
enter
and
insb
pusha
call
jmp
or
jns
cltd
inc
aas
jmp
pop
push
cs
int
dec
outsb
sub
std
or
in
xchg
and
adc
repz
mov
add
xchg
or
xchg
push
subl
sbb
cmp
lods
outsl
push
sub
enter
jbe
ja
dec
or
push
cmp
ja
jg
mov
sub
cltd
aaa
loopne
sub
adc
aaa
sti
mov
stos
pop
mov
popf
inc
pop
inc
or
nop
stc
cmp
mov
xor
add
sbb
mov
aam
cltd
pop
dec
push
ja
movsl
cmp
dec
mov
ret
adc
jb
fsts
imul
jns
dec
in
sbb
pop
pop
ret
mov
lock
xor
addr16
fs
sub
nop
lret
adc
ljmp
xchg
and
je
out
cmpsl
jo
cmp
sub
xchg
inc
or
inc
xchg
add
clc
jecxz
dec
inc
aam
fstpt
xchg
push
in
cmp
lahf
push
lock
ret
std
pop
fsubl
xorb
fldenv
add
fstpt
js
push
cmp
push
lret
inc
aam
inc
cltd
scas
jp
jl
mov
rcrb
mov
out
js
fcoml
mov
inc
js
ss
loope
dec
dec
xchg
mov
and
add
orb
push
mov
add
jnp
enter
and
push
lock
cwtl
lods
cmp
popf
sub
pop
in
cmp
dec
fcomi
iret
in
or
xchg
and
lock
scas
repnz
sbb
imul
loope
inc
mov
repz
iret
dec
push
pop
adc
push
push
lahf
imul
add
rcrl
xchg
sbb
jnp
daa
push
in
mov
dec
testb
inc
scas
test
rclb
inc
in
or
outsb
stc
call
nop
sbb
lds
jmp
sahf
cmc
test
xchg
dec
mov
pop
sbb
das
dec
jae
dec
fbld
pushl
mov
mov
cmpsl
xor
stos
test
repnz
addr16
fisubrs
pop
xor
icebp
jnp
ss
test
ficoms
imul
scas
test
hlt
xchg
nop
das
fwait
xor
mov
lods
mov
dec
or
cld
das
mov
push
pop
out
lock
in
aam
jb
ljmp
mov
es
scas
sub
insl
sbb
xchg
sbb
imul
push
mov
mov
mov
lea
push
jo
push
ja
pop
fstpt
and
scas
loope
lods
je
mov
hlt
into
pushf
mov
pop
pop
ja
out
cltd
inc
out
jns
es
mov
sub
cmp
lods
inc
xchg
lahf
dec
shr
hlt
lds
xlat
adc
mov
mov
scas
and
out
xchg
pop
inc
sbb
shrl
mov
ja
or
int
addl
ljmp
andb
in
ficoms
repz
mov
fldt
xchg
stc
pusha
mov
out
xor
push
cmc
orb
dec
scas
ret
dec
or
idivl
mov
inc
aad
lods
push
xor
fcomps
push
jl
stc
jbe
dec
hlt
fdivl
insl
movsb
ret
das
shr
jns
dec
push
mov
in
stc
xor
adcb
jmp
inc
cmp
xchg
add
les
enter
cmp
jg
ret
lahf
lret
push
and
and
rcrl
dec
popf
sahf
xchg
jbe
data16
adc
mov
push
std
idiv
cmpb
mov
xor
fnstenv
push
roll
clc
cmp
in
or
iret
sti
ja
push
sub
inc
mov
push
dec
and
idivb
cli
dec
mov
ja
rcll
flds
in
or
mov
mov
mov
fistpll
lcall
mov
test
movsb
cld
in
inc
pop
pusha
insb
gs
xchg
movsl
sahf
lods
sub
cmp
xchg
test
sti
mov
inc
push
mov
or
push
mov
cmpb
add
sbb
or
paddd
push
pop
jns
sti
jae
int3
mov
loopne
hlt
leave
dec
mov
je
fsubrs
mov
cmp
xor
xor
rcrl
mov
lcall
pop
fstp
sbb
dec
ret
cmp
mov
cmp
and
cmp
dec
jne
mov
ja
xchg
in
dec
cmp
arpl
dec
dec
pop
inc
fsubl
xor
jp
pop
in
les
in
sbb
arpl
aas
xlat
pop
pop
lds
insb
cmp
lods
cmp
sti
jmp
mov
popf
push
xor
std
ja
mov
addr16
xchg
or
xchg
das
lds
stos
jns
mov
les
dec
fdivs
jne
inc
push
jb
mov
jnp
inc
popf
and
rcrb
jbe
movsl
ds
sarb
pop
add
scas
es
jae
mov
popa
fldl
les
mov
pusha
add
mov
pop
or
sub
adc
lahf
mov
fwait
push
arpl
add
mov
ret
mov
pop
xchg
adc
xchg
and
dec
inc
mov
fwait
movsb
jle
leave
loopne
mov
rcll
aam
mov
and
pop
es
repz
out
adc
leave
shll
mov
sahf
rolb
mov
pop
cmpb
scas
sti
jns
jb
pop
shr
push
add
movsb
out
sbb
push
dec
in
dec
mov
jl
push
cld
adc
push
jecxz
test
lock
and
sbb
pop
sub
mov
mov
mov
pop
lds
fistpll
fidivrs
bound
sbb
je
mov
mov
pop
jb
sti
out
pop
push
lret
icebp
sub
arpl
mov
dec
lock
mov
mov
jp
jmp
xchg
inc
cli
data16
sub
sub
push
xchg
adc
add
pop
dec
repz
add
and
incb
inc
aad
mov
iret
add
pop
mov
lahf
mov
push
mov
pop
fwait
pop
push
aas
imul
sub
insl
mov
xchg
xchg
fstpt
fsubrl
gs
repz
ret
les
jo
idivb
mov
insb
test
lds
push
stos
push
in
push
xchg
adc
cmp
loope
pusha
dec
rcrl
stc
sbbl
adc
shrl
xchg
outsl
aad
and
test
sbbl
push
jp,pn
mov
lds
and
nop
sti
addr16
dec
std
sbbl
arpl
loop
sbb
dec
push
movsb
sti
adc
pop
rolb
outsl
dec
ja
dec
mov
rcrb
mov
xchg
cmp
addr16
call
pop
cmp
aad
in
jge
xor
dec
test
push
add
mov
push
mov
add
cmp
mov
push
xchg
lcall
adc
out
jmp
ds
lods
mov
and
stc
fld1
inc
loope
mov
ficomps
aam
cmp
inc
xor
mov
aas
mov
push
jl
mov
mov
xchg
dec
in
pop
and
sub
mov
mov
js
cmp
inc
movsl
push
iret
lret
pop
jle
sbb
jmp
mov
mov
and
sub
xlat
pop
xor
mov
lods
call
out
cmc
pop
dec
dec
test
dec
iret
scas
fwait
das
outsl
lds
insw
int
mov
fmulp
mov
leave
cli
push
push
adc
pop
dec
jbe
repnz
icebp
rolb
sbb
test
mov
pop
loop
testb
add
fsubrs
adc
xor
dec
or
aam
jecxz
mov
xlat
inc
jnp
mov
je
xchg
mov
pop
dec
inc
dec
sub
mov
lock
jns
jae
adc
mov
stos
fimuls
add
adc
sub
shll
mov
loope
popf
mov
rclb
jnp
cs
loopne
cli
jg
call
mov
xor
xor
xor
mov
sub
pop
pop
xchg
and
push
xchg
in
jnp
in
and
popa
outsb
into
call
xor
dec
cmp
add
mov
push
push
insl
push
and
sub
and
idivb
and
or
and
cmp
xchg
es
cmp
movl
jbe
xchg
xor
mov
mov
xor
xchg
packuswb
jecxz
mov
jp
dec
hlt
movsb
push
adc
push
push
dec
in
pop
dec
lds
scas
in
imul
movsb
sub
lds
jnp
fs
cmp
dec
arpl
dec
add
rcr
or
cmp
lahf
cmp
pop
ret
pop
dec
xor
xor
adc
cs
aad
and
das
je
outsb
mov
pop
pop
xchg
sbb
mov
ss
adc
mov
mov
fnstcw
push
imul
pop
les
push
push
xor
pop
and
rorb
add
dec
imul
dec
push
pcmpgtw
inc
in
pushl
mov
sbb
mov
out
in
flds
fidivrl
popf
aad
and
jb
bndstx
loop
mov
negb
push
scas
xchg
cmpsl
pop
cmp
negb
push
sub
or
out
mov
sbb
cwtl
xor
cmp
adc
adc
clc
jle
jno
pop
adc
cmp
movsb
pop
cmp
scas
repnz
and
subl
cmp
loopne
mov
shlb
lcall
test
push
sbb
cmp
stos
sbb
adc
add
jns,pn
sub
jl
dec
mov
xor
xlat
cmp
adc
cld
in
mov
popl
mov
pop
and
ret
iret
push
jp
inc
stos
gs
jns
fildl
push
fldl2e
jmp
jge
ret
arpl
popf
add
push
mov
jmp
push
fsin
es
lret
and
movsl
gs
cmp
sub
call
cld
push
sarb
nop
jnp
jle
sbb
jp
xchg
push
pop
les
xchg
sub
add
je
mov
mov
xlat
stc
pop
repz
inc
pop
das
cwtl
push
push
xor
int
xlat
imul
fst
push
xor
adc
jl
divb
aaa
sub
push
add
xor
bound
mov
sbb
dec
sti
in
bnd
imul
adc
out
jb
xor
test
cmp
sbb
mov
jae
or
mov
je
pop
icebp
jnp
and
sub
fs
sub
inc
add
imul
inc
outsl
cmp
dec
pop
stos
fsubrs
push
out
mov
loop
xchg
xlat
shlb
stc
movsl
mov
sbb
mov
jge
inc
push
xor
jo
pusha
cli
add
jmp
adc
hlt
shlb
lret
pop
or
sets
xor
lahf
lods
push
ds
inc
mov
jne
pop
testl
dec
mov
push
iret
pop
push
movsb
pop
mov
loop
pusha
jge
add
mov
mov
dec
into
xor
push
sar
cmp
lds
rorl
mov
xor
and
test
ss
dec
adc
imul
adc
jo
out
xor
xor
dec
jae
pop
pusha
cmp
cmp
imul
adc
jge
mov
clc
push
jl
xchg
xchg
mov
dec
movsb
lock
lods
or
cwtl
xchg
push
adc
jge
lcall
iret
mov
rcrb
push
pop
aam
sahf
outsb
or
pushf
push
mov
test
mov
cmp
cmp
inc
cmp
in
in
mov
loopne
xchg
mov
fstl
sbb
outsl
data16
insl
imul
jbe,pn
jecxz
out
lcall
addr16
sbb
push
xor
andl
pop
arpl
mov
jecxz
push
pop
push
in
sub
dec
inc
xchg
xchg
cmpsb
sub
cli
insb
hlt
adc
stc
mov
and
test
add
sub
and
xor
dec
add
mov
and
jle
jp
test
mov
dec
lahf
add
push
xor
cmp
rcll
pop
or
out
divb
adc
in
test
mov
adc
stos
jp
jmp
into
icebp
push
jbe
loope
test
pusha
xchg
stos
imul
loopne
mov
and
mov
add
movsb
enter
out
add
pop
imul
in
mov
cmp
sbbl
xchg
pop
roll
pop
test
sub
mov
cmpsl
lahf
pop
int3
mov
adc
push
rolb
cmp
in
sub
adc
test
push
or
cmpsl
aad
test
mov
pop
mov
insb
xor
xchg
pop
idiv
dec
mov
mov
cmc
test
repnz
fildll
jg
outsb
mov
scas
jle
je
push
scas
sub
in
in
fsub
add
pop
into
lods
fiadds
mov
push
xlat
daa
mov
negl
inc
xchg
cmp
dec
mov
cs
and
fstpl
mov
cld
jae
mov
pop
cmp
add
rcrb
push
rolb
jae
insl
scas
xchg
dec
sbb
sub
repz
push
test
xor
das
cs
xor
scas
or
push
xor
inc
jle
and
cmpsl
or
push
xchg
xor
fbld
ljmp
add
mov
pop
testb
ffreep
es
mov
pop
ret
mov
inc
and
xor
adc
pop
mov
cmpb
xchg
pusha
jecxz
push
xor
jl
and
fnstenv
or
mov
add
xchg
subl
jno
sarb
adc
mov
test
xor
inc
sub
push
and
pop
fstps
or
lds
xor
test
and
andl
sub
inc
pop
sub
mov
arpl
scas
jmp
faddp
add
pop
cmp
or
fs
shlb
fs
imull
mulb
push
add
or
dec
jnp
ds
mov
or
jae
adc
sub
loop
sbbb
lds
add
mov
sbb
loope
add
and
incl
sbb
popf
imul
aad
mov
stos
negl
xchg
popf
jg
mov
lea
mov
outsb
imul
nop
je
adc
icebp
test
shlb
jg
leave
es
mov
xor
jbe
outsb
imul
mov
jp
or
xor
movzwl
repnz
cmpsb
mov
or
cmp
pop
push
aaa
sub
rclb
push
mov
sub
icebp
push
jmp
outsl
nop
in
sub
adc
popl
mov
icebp
mov
xor
imul
hlt
jl
addb
sbb
adcb
in
jae
or
xchg
shlb
cmp
lret
push
jae
ret
arpl
leave
sub
mov
fucom
mov
test
cltd
or
addr16
ja
clc
jmp
loopne
mov
sarb
sbb
mov
pop
out
into
adc
dec
fmuls
jmp
add
xchg
mov
or
loope
ficompl
xor
dec
fsubrs
sub
stos
mov
push
push
jl
adc
ret
push
or
or
data16
cmp
mov
das
cmpsl
pop
xlat
push
mov
clc
or
jnp
inc
outsl
loop
fimull
fsubrl
lods
adc
adc
stos
sahf
or
cmp
lods
sbb
fcomps
lods
in
xlat
mov
movsl
fildl
das
rclb
sahf
inc
jne
into
btr
mov
mov
loopne
jmp
cmpb
stos
out
dec
sbb
enter
sub
adc
call
cmpsb
movsl
push
pop
cmpsl
rcl
in
push
aad
sub
mov
pop
inc
test
test
outsb
in
push
mov
or
pop
mov
mov
mov
out
xchg
and
js
push
popa
mov
xor
lahf
fcmovnbe
inc
les
jp
cmp
xchg
jecxz
outsb
test
adc
in
dec
repnz
mov
mov
int3
js
out
into
pop
je
shlb
sbb
cwtl
cli
daa
sbb
lret
adc
loope
add
jg
push
fbstp
fwait
push
in
lahf
cmpsb
cmc
xor
jns
subb
mov
mov
mov
xchg
sbb
xor
xor
jecxz
lock
add
jg
stos
mov
popl
pop
jae
lret
das
fcoms
cmc
das
ror
or
ss
adc
jl
scas
imul
scas
xlat
xlat
pop
push
xor
out
shll
mov
jle
or
int
into
shl
icebp
jl
aad
enter
inc
push
scas
mov
push
pusha
pop
inc
or
out
jmp
push
mov
xor
jmp
xor
jne
or
and
jnp
push
adc
lods
dec
mov
test
jnp
and
mov
jl
mov
bound
pop
mov
stos
int
stos
or
jl
shlb
outsl
or
and
clc
xchg
leave
cld
pop
add
lcall
pop
inc
jmp
mov
shlb
outsb
jns
mov
pop
xor
jns
add
cmp
mov
loopne
sbb
dec
sahf
ficoms
jge
jecxz
mov
cwtl
mov
mov
push
test
rol
imul
dec
sub
push
dec
sbb
cltd
jnp
mov
in
lret
inc
sarb
data16
mov
lret
lods
ret
mov
dec
xchg
lods
test
xchg
aaa
sub
jge
or
jnp
add
daa
popf
lock
cmp
add
xor
pop
dec
and
stc
shrl
insb
xchg
cmpsb
pop
in
stos
shlb
leave
in
fs
insl
clc
sbb
pop
and
push
xlat
shr
ficoml
sbb
pop
jp
fadds
imul
int3
lahf
test
hlt
mov
mov
xor
add
imul
addb
insb
adc
mov
ficomps
sti
inc
adc
mov
xchg
sbb
mov
fistl
loopne
into
mov
sbb
sbb
cli
adc
ficomps
jge
xchg
adc
into
inc
dec
loop
push
sub
lret
test
loop
sti
or
rcrl
cld
inc
lds
test
mov
xlat
and
push
scas
loopne
je
inc
pop
stos
jnp
lds
mov
xchg
mov
push
or
cmp
rcrl
insl
xchg
xchg
out
mov
pop
jmp
cmp
sub
jb
sti
mov
jns
add
or
mov
add
mov
mov
jae
addb
shrl
pop
inc
push
scas
inc
cli
ror
or
pop
mov
cmp
add
mov
push
aaa
into
push
mov
cmp
jo
pushf
mov
or
repnz
xchg
push
xchg
push
jecxz
fcomip
mul
xchg
loope
cmpsb
in
hlt
cmp
aaa
aas
xor
ret
pop
fs
or
bound
test
push
dec
push
mov
fsubl
loope
lock
pusha
mov
push
or
rclb
fnstcw
fs
or
mov
xor
sub
inc
and
sbb
cmp
je
addr16
pop
mov
es
into
ds
mov
xorb
bound
ljmp
xchg
ds
test
into
cmp
enter
mov
sub
mov
in
xchg
seta
cltd
jge
or
and
jns
cmp
or
xor
outsl
test
mov
and
push
pop
inc
sub
sti
inc
dec
in
loopne
decb
cmpsl
mov
sbb
jmp
cs
je
mov
inc
inc
add
pop
fadd
ds
inc
xor
fnstcw
and
or
xlat
mov
shlb
js
shrd
movl
aaa
sub
pop
sbb
mov
jae
pop
xchg
clc
push
mov
ja
mov
mov
stc
push
mov
arpl
imul
mov
hlt
fisubs
sub
push
mov
jae
or
xchg
mov
adc
and
add
jg
add
xchg
inc
mov
and
pop
and
jbe
les
in
in
sahf
ja
icebp
stos
or
xchg
sbb
scas
cmpsb
fsubrs
push
mov
push
xor
fdivr
cli
xchg
shrl
mov
jne
arpl
movsl
push
mov
movsl
sub
and
outsl
adc
mov
xor
das
cmp
inc
mov
fwait
adc
aad
roll
dec
leave
dec
repnz
cwtl
dec
scas
cmc
dec
add
pop
jp
addr16
or
dec
mov
into
aaa
pop
sarb
push
mov
aam
and
push
negb
imul
push
dec
int
inc
sub
loope
lahf
popf
ja
fstpt
icebp
loope
or
cmc
repnz
sti
rcl
mov
mov
push
mov
lock
fs
stc
sub
test
push
inc
lods
mov
pop
pusha
popf
and
add
lods
cld
dec
mov
enter
ja
lds
test
and
jae
adc
sbb
fisubs
sub
lcall
ljmp
pop
jmp
cwtl
imul
leave
jne
cld
fwait
add
pop
jno
leave
adc
sbb
jmp
dec
aas
push
mov
aas
sarl
jns
pop
or
jne
enter
mov
cmp
ljmp
test
mov
into
jmp
insl
mov
jb
cld
subb
test
and
dec
mov
insl
cmp
xchg
mov
pop
je
xor
movsl
jl
fisubrl
sub
pop
mov
inc
in
in
adc
cli
mov
push
cmp
xor
aam
inc
test
addr16
shrl
and
icebp
jle
dec
sbb
adc
pop
dec
mov
test
addr16
ja
cli
fiaddl
xchg
repnz
mov
lods
sub
lds
xor
hlt
or
mov
or
test
mov
sbb
inc
or
dec
jmp
add
lea
xchg
out
aad
sub
test
mov
cld
dec
outsl
inc
repz
add
cli
dec
mov
jb
jmp
jl
dec
jae
push
scas
add
test
mov
add
add
mov
aam
icebp
push
or
mov
pop
or
pop
adc
insl
outsl
adc
mov
xchg
out
test
or
shlb
fildl
insb
pop
loopne
out
adc
arpl
jae
bound
cltd
sarb
xchg
xor
insl
mov
call
outsl
mov
daa
lock
cltd
mov
and
xchg
add
call
adc
fsts
lea
adc
popf
pop
add
in
mov
and
jp
shll
or
cmp
ja
cwtl
mov
jae
repnz
cmp
fs
add
sbb
or
pop
loop
ret
mov
pusha
add
xchg
insl
das
push
jmp
mov
out
jmp
sti
add
cmp
dec
xor
add
popa
ja
fwait
mov
cltd
xor
fs
push
int
pop
sti
jae
dec
in
mov
push
mov
or
inc
out
add
jp
lea
shlb
ffree
adc
mov
mov
ja
and
ja
jp
sbb
adc
mov
andl
pop
push
lcall
adcb
jae
push
sbb
adc
pop
scas
jno
test
test
loop
rcrb
jmp
mov
push
notb
fildl
test
pop
stc
loopnew
push
in
shrl
mov
popa
arpl
mov
jmp
xor
sti
test
ret
mov
jnp
or
sub
fnsave
das
movb
enter
push
gs
test
arpl
sbb
push
pop
sbb
js
mov
inc
mov
cltd
add
mov
std
sub
movsb
cwtl
nop
stos
adc
or
jle
mov
push
cmp
lret
rcrb
sahf
dec
jnp
pop
mov
sub
inc
xlat
or
jnp
inc
mov
movsb
aam
inc
mov
insl
dec
or
sub
insl
out
into
enter
dec
push
in
sbb
pop
int
les
test
and
mov
and
pop
adc
push
xor
sti
in
adc
push
clc
clc
icebp
jg
add
adc
and
cwtl
xchg
dec
inc
sub
adc
mov
mov
in
jecxz
pop
out
pop
shlb
out
mov
stos
cmp
adc
xor
push
incb
adc
popa
jne
mov
or
mov
xchg
cmpsb
jecxz
push
and
mov
mov
jmp
fists
leave
loopne
in
add
fmull
int
out
pop
fstps
sti
cmp
mov
or
bound
aad
out
push
pop
adc
popa
pop
or
xchg
sub
pop
ljmp
jbe
lea
jbe
xor
jne
and
jle
mov
mov
daa
jge
cmp
je
xor
in
push
repnz
sbb
shlb
in
jge
add
in
loop
pop
popa
cmpsl
int
pusha
mov
jno
jbe
fmuls
pop
shr
stc
xor
out
aaa
leave
xchg
popa
cli
cs
bnd
test
pusha
cmpsb
sub
or
leave
jno
fdivl
mov
pop
sbb
and
pop
in
xchg
lret
pop
sarb
push
lea
fldt
adc
test
jecxz
lock
aam
les
icebp
push
and
push
int3
dec
add
pop
pop
jecxz
idiv
add
inc
stos
mov
fwait
or
xor
into
int3
xor
adc
mov
add
mov
pop
out
leave
sub
mov
sub
sub
mov
lahf
ficomps
popa
mov
mov
mov
sarl
out
fildll
mov
or
mov
in
xchg
data16
jbe
fwait
adc
push
push
jecxz
lahf
cmpl
test
mov
ljmp
mov
je
xchg
cmpsb
pop
mov
imul
loope
xchg
sub
out
fisubl
test
gs
enter
les
jmp
mov
jbe
jae
mov
cmp
mov
scas
aam
fbld
sub
rclb
mov
repnz
and
jge
cmp
lock
in
inc
xchg
dec
xor
mov
sub
xor
inc
xchg
sub
test
cmp
das
inc
in
mov
fidivs
out
out
icebp
sub
push
test
xor
outsl
cmpsb
dec
rolb
iret
and
add
jns
cld
mov
inc
mov
adc
xchg
inc
sbb
push
jp
and
xchg
pusha
push
xor
jae
sub
xchg
mov
xchg
dec
daa
inc
lcall
xor
in
ret
test
xor
pop
push
and
cmpsl
jnp
js
ss
push
sub
mov
cmpsl
pop
test
fnsave
lret
fisttpl
jl
mov
pop
sbb
sbb
dec
in
mov
cmpsb
adc
sub
pusha
repnz
pop
jecxz
mov
inc
xchg
inc
cmc
inc
bound
mov
pop
dec
mov
hlt
cwtl
testb
xor
rcr
repz
inc
or
add
or
push
sbb
and
lock
fldcw
xorl
movsl
je
lods
aaa
fsubrs
sub
mov
loop
hlt
xchg
mov
fiaddl
data16
loop
mov
pop
dec
cmp
cmp
inc
mov
insl
push
fldenv
ret
dec
cmp
jle
fsubr
adc
push
es
mov
sbb
clc
je,pt
sub
cmp
fsubl
mov
in
cmp
mov
cwtl
inc
shll
mov
dec
fsubrs
push
push
cmc
push
mov
mov
frstor
cmp
mov
and
adc
xorb
mov
sbb
mov
xlat
push
mov
shl
xchg
sub
xor
std
pushf
shl
xor
jl
test
xchg
mov
je
aam
and
jo
or
in
add
fnstenv
imulb
xlat
lahf
aam
fidivs
js
lret
sbb
mov
xor
xor
iret
mov
iret
cmp
or
xchg
fldt
test
jecxz
cld
xor
inc
jle
stos
inc
loope
mov
jne
mov
fwait
mov
mov
xor
sbb
xchg
mov
mov
push
lods
shll
andl
dec
test
lret
lods
fisttps
or
scas
gs
data16
fistps
das
ljmp
mov
stos
cs
test
inc
mov
xchg
sti
xchg
fs
push
shlb
je
push
fidivrl
movsb
adc
sub
inc
push
mov
dec
addb
test
jns
jo
imul
filds
mov
and
stos
leave
fdiv
out
es
push
xlat
add
and
sub
test
cmp
add
addr16
mov
iret
movl
xchg
jns
mov
mov
divl
inc
out
stos
jle
sub
push
mov
cmpsb
sub
and
out
jbe
ss
push
lret
stos
mov
xor
and
clc
sub
mov
mov
fmul
stos
xor
in
jl
les
movlps
xor
arpl
jno
adc
cli
dec
popf
ret
mov
or
iret
add
test
std
int3
sbb
jl
dec
jae
decl
mov
stc
stos
pminsw
outsb
call
xchg
cmp
push
push
jecxz
lods
adc
cmp
movsb
movsl
adc
lret
stc
mov
pop
xchg
call
out
stos
lods
pop
inc
cltd
dec
cmp
cmp
es
imul
and
pop
movsl
testl
xlat
dec
pop
pop
xchg
and
out
pushf
jbe
jae
sub
decb
mov
repnz
enter
out
mov
inc
popf
lea
imul
inc
ja
xor
dec
push
daa
cmpl
xchg
std
sbb
fsubs
mov
mov
mov
add
xor
cs
inc
out
cli
psrlw
test
mov
movsl
and
lock
push
pop
sti
ficoml
pop
sti
push
test
inc
imul
push
pushf
or
rolb
mulb
cmp
in
xchg
dec
mov
adc
in
jns
pop
push
jmp
or
test
jecxz
popa
jge
cmp
jne
push
icebp
idivl
push
adc
ja
pushf
pop
xchg
cmpsb
mov
inc
iret
and
xchg
xchg
or
mov
xchg
outsb
mov
sarb
push
push
push
xor
cmc
fidivs
xchg
jle
push
out
mov
fidivrs
out
insb
shll
xor
mov
mov
cmp
push
imul
and
movsb
sub
fbld
ret
and
out
mov
scas
inc
cs
or
ss
out
cli
sbb
push
ja
inc
xchg
nop
nop
incb
inc
adc
and
jb
mov
xchg
shlb
jecxz
scas
cmpsb
ficoml
inc
jl
mov
sbb
dec
insl
cmp
popfw
mov
or
popf
jne
lret
bound
push
sub
cmp
and
jb
jne
outsl
rcll
inc
dec
adcb
aaa
cmc
mov
add
push
popf
mov
imul
loop
jmp
cwtl
and
lcall
sub
ds
mov
inc
ror
dec
mov
sub
xor
sar
stc
mov
popa
aaa
jo
loopne
mov
test
repnz
xchg
sub
and
push
push
jnp
cmp
pop
sbb
pop
mov
cmp
imul
idiv
sub
jl
inc
dec
cwtl
adc
in
out
loopne
jmp
fcompl
jbe
xchg
call
dec
adc
ret
mov
rol
sahf
fsubrl
mov
out
sub
inc
pop
cltd
cmp
dec
push
push
add
roll
push
call
pop
sub
ja
je
fiadds
daa
nop
das
cwtl
sarl
je
fs
mov
mov
in
pop
xor
xor
cmpsl
inc
addr16
sub
push
fildl
cmp
mov
sub
ds
push
out
loope
mov
adc
sub
cltd
call
ret
mov
mov
jecxz
gs
add
xchg
push
mov
cmpsb
fwait
xor
or
imul
mov
xor
push
lock
xchg
subb
in
jmp
or
cltd
xchg
add
loopne
sub
xor
fsubs
cmp
push
push
add
scas
sub
mov
jecxz
xchg
movsb
aad
repnz
dec
jo
mov
fmuls
sbb
cwtl
notb
inc
out
dec
es
adc
xor
add
pop
cltd
or
push
cli
lret
inc
sub
jg
js
push
aad
arpl
aas
pop
xorb
jl
push
bound
enter
ret
int
mov
sbb
xchg
adc
mov
das
push
aaa
mov
xor
imul
xchg
bound
icebp
lods
lds
jle
insl
movsl
dec
mov
out
push
jmp
dec
scas
pop
rorb
dec
sbb
dec
mov
or
inc
fmuls
mov
jle
add
test
mov
xchg
xchg
jmp
fldenv
aaa
pushf
and
xchg
pop
cld
rclb
lods
repz
cmc
lret
mov
cld
dec
jmp
push
rorb
les
mov
ret
test
out
fcmovne
sub
cmp
xor
movsl
sub
test
int
pusha
in
pop
outsl
xor
xchg
stc
mov
jne
xchg
test
inc
clc
inc
sti
jb
push
je
or
xlat
push
les
push
mov
into
jle
repnz
gs
inc
fstpl
ficomps
mov
xor
out
xor
loopne
xor
cmp
pop
xchg
stc
push
add
or
pop
inc
sub
in
ror
out
cwtl
test
mov
outsb
sbb
jne
sarl
inc
out
inc
cmp
pushl
roll
nop
push
clc
dec
push
sub
in
inc
add
test
and
mov
loopne
inc
and
push
aam
mov
mov
lea
and
push
jb
cmc
mov
push
push
andb
lock
jp
mov
lods
mov
subl
in
call
xchg
lret
lret
mov
in
imulb
sbb
aam
out
sbb
mov
cltd
xlat
sub
fsubrl
scas
sbb
pop
adc
sbb
sbb
or
cld
inc
pop
dec
scas
cltd
outsl
sahf
ljmp
jp
sti
mov
mov
inc
adc
mov
push
xor
sti
xlat
adc
filds
ja
lods
dec
fmull
push
jle
lret
inc
jge
dec
xchg
fptan
sahf
mov
int3
sar
inc
mov
test
js
push
sub
ds
adc
das
xor
push
fwait
imul
cs
mov
ret
add
in
mov
nop
sarb
or
push
int3
sahf
sub
sub
repnz
jb
xor
push
mov
pop
cmc
sbb
inc
adc
inc
jno
sub
pushf
pop
cmc
cmp
mov
pop
inc
adc
pushf
mov
sahf
movsl
xchg
dec
xor
das
dec
sti
xor
cli
mov
inc
pop
or
pop
cmp
aad
outsl
ss
adc
loopne
pushf
adc
js
and
inc
mov
jo
popf
push
mov
imul
cld
mov
push
in
inc
or
jns
lock
hlt
dec
pop
xchg
pop
in
jo
in
ror
mov
or
inc
cmpsl
je
or
adcl
adcl
stc
aam
movsb
cmp
cmp
ljmp
sarl
ror
into
ljmp
dec
rep
pop
test
inc
jge
ror
dec
pop
and
xor
jl
dec
xor
movsl
jb
cmpsl
cs
and
sbb
mov
mov
mov
ja
out
aaa
cld
adc
fsubs
in
inc
mov
call
push
mov
push
jae
xchg
and
xchg
cmp
jno
xchg
aaa
xchg
lods
cmp
fnsave
jbe
xchg
data16
pushl
jmp
adc
mov
inc
add
jbe
repz
or
adc
mov
mov
outsl
mov
scas
push
pushf
xchg
inc
ret
movsb
add
xor
call
mov
fdivl
mov
imul
ds
sbb
xlat
jge
lahf
push
mov
pushf
mov
push
lret
or
mov
out
xor
fs
sti
hlt
cld
stos
add
in
loopne
or
adc
cmp
aam
dec
adc
pusha
add
aam
sub
mov
stos
inc
cvtdq2ps
dec
mov
jmp
outsl
cwtl
out
sbb
pop
ds
add
xchg
pop
sub
dec
popa
loop
cmp
and
pop
mov
dec
pusha
movsb
mov
fsubrs
push
lcall
imul
cld
xchg
dec
insb
xchg
sbb
int3
pop
jle
pop
xchg
bound
lret
adc
pop
bound
xchg
enter
xchg
mov
shll
push
rorb
std
andl
and
sti
aad
jmp
xor
mov
movsb
loopne
gs
stc
or
pop
cwtl
xor
test
pushf
xor
or
mov
popf
adc
adc
nop
push
mov
sbb
data16
xor
xor
push
lods
outsl
into
push
popa
xchg
xlat
push
scas
adc
fimuls
arpl
mov
xchg
mov
jnp
xchg
mov
cmp
testl
out
xor
mov
adc
mov
dec
mov
inc
mov
es
ds
add
int
xor
js
out
inc
inc
xchg
cwtl
daa
fcomps
add
inc
adc
out
sbb
popa
clc
shlb
cmpsb
xor
mov
cmp
enter
xchg
ret
mov
dec
decl
insb
gs
aad
cmpsb
and
and
repz
data16
jp
int3
aaa
inc
push
or
sar
es
movntq
out
push
pop
push
and
push
aam
notb
movsb
aas
push
les
jnp
out
out
and
scas
test
clc
pop
sarl
insl
movsb
mov
popf
dec
cltd
js
sub
in
lcall
inc
aaa
and
out
add
sub
cmpsb
loop
aaa
add
jecxz
test
out
pop
pop
bnd
mov
nop
inc
packsswb
icebp
pop
sub
fimull
enter
push
les
mov
iret
xchg
adc
sbb
mov
popf
push
adc
loope
mov
loop
mov
and
dec
repnz
inc
jnp
xor
shrb
out
shrl
adc
xchg
iret
inc
adc
push
movb
cltd
or
xchg
push
dec
adc
sbb
mov
sbb
repnz
jl
add
or
mov
inc
sbb
lahf
mov
or
add
dec
mov
mov
insl
sub
pop
orb
dec
jmp
lds
lods
mov
jecxz
xor
outsb
lret
push
push
je
cmp
or
or
inc
mov
stos
jnp
push
out
cmp
lea
cli
mov
loop
cltd
adc
aaa
stos
mov
xchg
clc
into
pop
loop
push
mov
fidivrl
jbe
shl
jnp
adc
jns
lea
outsb
std
leave
icebp
aam
sbb
fisubs
pop
push
add
fwait
xorb
ret
ret
divl
push
mov
mov
popa
ret
and
dec
pop
clc
loopne
stos
xchg
movsl
xor
push
xor
or
test
fnsave
mov
pusha
sub
jns
in
fists
sbb
pop
imull
xchg
popf
mov
leave
lret
or
adc
mov
fstpl
mov
cld
push
xor
xor
jl
mov
mov
cmpsb
xor
orb
inc
push
xor
pop
gs
mov
js
stos
add
movsb
outsl
rcll
sbb
data16
fistpll
jae
pop
mov
dec
sbb
imul
repz
push
aam
mov
lahf
sbb
jl
jbe
stos
jno
adc
out
addb
xor
xlat
in
out
loope
mov
fidivrs
cmp
data16
mov
push
jae
imul
and
cmpsb
iret
and
push
cmp
cli
mov
outsl
outsl
arpl
jnp
hlt
or
xor
rcll
inc
dec
sbb
push
push
gs
mov
xchg
ficomps
mov
cmp
aad
push
adc
cwtl
inc
mov
cs
fildl
pop
adcl
or
lock
shll
and
shll
rcr
sbb
mov
and
cmpl
xchg
setle
xchg
imul
sub
mov
sub
andb
out
cmc
dec
stos
push
xchg
cmpsl
fdivl
adc
mov
pop
dec
fsubs
adc
loop
pop
pop
sbb
adc
ja
mov
sarl
push
ja
mov
les
loope
pop
adc
and
loopne
jno
fcmovnu
imulb
sub
sbb
out
adc
loop
bound
in
and
jbe
xchg
out
mov
adc
push
ja
and
repz
cmp
fcmovnu
xor
les
sub
sbb
xor
xchg
sbb
push
movsl
repnz
jp
adc
lcall
outsl
pop
mov
cli
mov
es
push
in
xchg
pop
ffree
and
std
repnz
mov
push
test
mov
cld
jecxz
pop
and
out
adc
adc
cmpsl
outsl
push
int
arpl
sbb
clc
fisubl
jl
loope
lahf
cltd
mov
adc
lret
or
mov
pop
xchg
push
jb
dec
jno
ss
out
das
popf
cmpsb
fbld
shll
lea
rcrl
and
repz
xchg
cmpl
jne
lcall
mov
pop
inc
jns
sahf
push
mov
or
xchg
lret
notb
imul
inc
push
aas
or
pop
pause
push
fmuls
repnz
mov
xchg
jg
sub
outsl
fsubs
testl
jp
pusha
or
xchg
dec
icebp
jno
ret
jecxz
fstps
mov
adc
or
out
into
xchg
or
jbe
mov
mov
pop
in
dec
cvttps2pi
loope
imul
or
ja
xchg
push
lcall
in
jg
mov
std
sahf
ljmp
push
rolb
outsl
leave
movsb
jnp
ljmp
gs
xchg
add
inc
xchg
push
sub
mov
fwait
mov
cmp
hlt
xchg
jnp
stos
xor
and
xor
dec
push
cwtl
adc
mov
and
je
into
test
cmpsl
sarl
repz
incl
fldenv
lods
sub
pop
pop
scas
scas
pop
mov
out
mov
push
xabort
gs
mov
sbbb
dec
sub
adc
movsl
push
aam
sbb
push
inc
push
or
lahf
mov
or
add
jb
pop
mov
push
sbb
xor
mov
or
lods
mov
xor
push
push
adc
and
test
loope
clc
pop
lret
cltd
lods
bound
clc
scas
mov
sub
push
ret
mov
outsl
ja
jmp
and
jl
ret
sarb
xor
pop
push
dec
scas
lock
dec
rolb
cmpb
jecxz
push
sahf
push
mov
pop
sub
scas
test
pop
fcompl
sbb
inc
push
or
andl
sbbb
js
fdivr
stos
push
xlat
into
movsb
push
movsb
loopne
add
cltd
and
jl
mov
dec
je
xchg
push
adc
mov
mov
shlb
mov
out
and
movb
aam
fsubrl
mov
push
and
daa
xor
jne
xor
je
jnp
pop
rorb
sbb
mov
sub
and
adc
outsb
stc
cmp
xor
dec
pop
sub
daa
xor
lods
in
cmp
ja
pop
inc
sub
lock
jl
add
daa
imul
je
fwait
es
shrl
xor
jae
xchg
loop
mov
pushw
push
push
loop
dec
les
pop
dec
mov
jge
insb
test
sub
add
not
cmpsl
pop
push
sub
sub
sub
xor
inc
lods
dec
sbb
pop
inc
lcall
add
bound
addr16
sbb
movsl
xchg
leave
sti
inc
decw
enter
test
xchg
fmull
repz
stos
lret
sarb
xor
mov
mov
mov
jno
xor
mov
jo
xchg
and
xchg
lods
rcll
out
movsb
pop
mov
pop
mov
dec
sbb
dec
mov
dec
xlat
aad
or
aam
or
lds
mov
xor
inc
outsb
mov
fsubl
les
add
ds
add
out
clc
inc
ds
push
mull
and
faddl
stos
xchg
lcall
jl
sub
mov
push
out
push
cld
xlat
mov
add
mov
mov
push
dec
mov
frstpm(287
icebp
stos
add
inc
fyl2xp1
jge
notl
arpl
sub
enter
push
pop
or
xchg
xchg
jl
cmp
mov
mov
les
lret
popa
sub
dec
cmpl
lods
mov
jmp
add
or
insl
js
aam
adc
in
push
icebp
js
idivb
sbb
add
scas
mov
popf
sub
add
ss
cmp
addr16
lock
out
dec
add
sti
imul
push
jo
or
cmpsl
lea
data16
sbb
fcoml
inc
out
imul
xor
testb
scas
enter
sbb
jbe
stos
mov
test
mov
add
fcomp
mov
clc
jp
adc
addl
add
test
repnz
test
jle
and
and
inc
cmpb
ljmp
int3
inc
insl
xchg
sub
mov
dec
loope
dec
loop
inc
xor
shrb
push
std
loope
fsubl
cli
sarl
ret
into
push
cmp
jp
push
xchg
sti
icebp
ret
add
dec
mov
sub
cmc
mov
outsl
or
shlb
sbb
and
push
sbb
push
movsl
int
push
push
js
pop
and
into
fs
xchg
ret
adc
cmpsl
push
notb
js
mov
ret
push
jns
add
aad
imul
jle
repnz
or
test
imul
dec
xor
mov
and
xchg
std
mov
lret
loop
stc
mov
jbe
jns
test
ret
clc
test
test
into
aas
mov
xchg
cmc
jecxz
xchg
xor
call
sar
repnz
and
bswap
aaa
or
cmp
test
das
and
aaa
dec
cmpsb
and
xchg
sahf
add
inc
sub
and
mov
mov
out
ret
es
add
or
hlt
cmpsb
ljmp
mov
sahf
cli
int3
pop
iret
lds
jg
xor
cmp
mov
cmp
scas
stos
sub
div
jle
xor
filds
and
cmpsb
xchg
push
jo
sub
fisubrs
nop
iret
aaa
push
fldcw
xor
ljmp
inc
fldl
in
mov
sub
mov
enter
jbe
orb
imul
sbb
jl
lea
stc
jb
push
repz
pop
mov
sbb
push
fwait
dec
inc
cmp
movsl
sbb
dec
xor
cmp
in
lret
rcrb
fldcw
bound
daa
rorl
cmp
iret
int
pushf
les
xor
cmc
sub
pushf
leave
shll
cmpsl
cmp
jno
ret
pop
inc
pop
mov
rorb
addb
je
push
sbb
shrb
in
add
gs
cmp
movsl
or
adc
dec
pushf
push
leave
mov
sub
mov
lods
arpl
jecxz
arpl
mov
out
lcall
aad
push
scas
dec
in
mov
inc
je
jnp
jle
mov
js
jecxz
dec
mov
sbb
in
or
sbb
test
inc
pop
cwtl
or
mov
push
stos
push
inc
jecxz
das
lds
aad
loopne
xchg
inc
dec
cld
push
lcall
fidivs
aaa
aam
push
jbe
out
fsubl
add
mov
movsl
inc
inc
cmp
add
ljmp
packuswb
inc
ret
leave
adc
stos
outsl
in
imul
adc
in
mov
rcrb
or
mov
lock
cld
std
cmpl
imul
pop
inc
enter
leave
popa
mov
mov
stos
lea
popf
sbb
lar
adc
addb
add
lods
pop
enter
sbb
sbb
sbb
in
ret
aam
add
and
test
push
push
or
shll
jns
std
jp
and
mov
shlb
das
add
lods
add
fadds
mov
adc
mov
sbb
shll
sbb
lea
iret
ds
xchg
fisubl
adc
sbbl
int
pop
jl
cmpsl
lods
sbb
xchg
sub
cwtl
fwait
aas
int
orb
repnz
cmpsb
mov
jge
mov
mov
lods
lds
mov
push
inc
out
adc
movhps
outsl
cmp
mov
in
outsl
push
xchg
dec
out
into
add
daa
cld
xchg
xchg
mov
rcr
xchg
cmovs
add
pop
movsl
or
push
dec
pop
push
cmp
sub
outsb
gs
pop
jmp
sub
mov
into
mov
mov
dec
xor
xor
or
dec
inc
jmp
lods
sub
stos
xor
dec
pop
push
aas
out
mov
outsb
push
iret
cmp
nop
repnz
in
fucomip
mov
data16
sub
or
mov
or
xor
lea
test
aam
lahf
arpl
add
stc
jp
pop
mov
and
ficompl
ret
adc
ljmp
xor
int
pop
mov
pop
add
jnp
popa
xor
lds
xchg
les
pop
iret
cli
call
outsb
repz
shrb
push
and
xchg
xor
or
clc
inc
push
dec
adc
jb
jnp
mov
mov
xor
fisubrl
xchg
mov
mov
xchg
stos
mov
nop
lods
push
gs
dec
out
and
sub
out
aaa
xor
test
add
inc
dec
lock
push
outsl
mov
xor
out
push
jbe
jb
insb
xor
lret
shll
fcompl
lret
in
xor
std
push
mov
adc
insl
popf
mov
sub
out
jecxz
bound
decb
aas
or
fisubl
inc
into
mov
fstp
rorb
xchg
cltd
sub
fs
push
mov
mov
adc
cmpsl
aam
and
mov
scas
pop
push
in
mov
mov
frstor
jae
lahf
pop
dec
fnstsw
lods
pushf
faddp
xchg
sub
jns
sahf
mov
div
adc
inc
add
in
fiadds
xor
lcall
mov
mov
jmp
pushf
inc
mulb
xchg
pop
pop
lods
pop
pop
mov
in
push
mov
pop
push
hlt
push
mov
jbe
jle
sub
sub
sbb
and
cmpsb
cmp
or
and
mov
jg
mov
and
dec
je
enter
mov
ljmp
sub
mov
fistps
and
mov
xchg
dec
daa
or
jnp
add
call
and
xchg
out
stc
into
mov
inc
loope
xor
inc
pop
xchg
cmp
dec
jo
faddl
daa
shrb
sti
push
and
in
add
pushl
xor
fistl
inc
push
cmpsb
mov
pop
fnstcw
mov
xchg
int
jbe
insl
aam
xchg
mov
adc
add
pop
pop
adc
insl
dec
xor
xchg
aam
jl
in
add
and
fmull
test
stos
outsl
lahf
testb
loop
and
stos
pop
fnstsw
adc
sti
int3
int
movsb
pushf
dec
clc
stc
sub
es
inc
outsb
shrl
scas
daa
mov
mov
ds
push
enter
push
jno
sub
iret
movsl
adc
repz
jns
addb
gs
lret
add
lods
aam
iret
mov
shll
sub
int3
jae
xchg
add
test
add
sbb
push
repnz
xor
lret
out
pop
jp
sbb
add
and
push
scas
or
add
xchg
daa
cmp
xchg
inc
xchg
lret
and
scas
loop
mov
and
pop
int3
out
pop
pop
insl
loopne
cmp
inc
xchg
pop
jl
repz
ljmp
lds
push
sbb
xchg
or
lcall
dec
std
add
jmp
mov
lret
adc
addb
mov
fs
xchg
and
outsb
cmp
dec
and
outsl
leave
inc
mov
imul
xorb
mov
push
add
mov
add
aad
xchg
mov
shlb
sub
or
xchg
add
test
nop
cld
int3
lret
scas
stos
or
js
in
in
pop
cs
faddl
sbb
aam
jp
test
and
shl
lahf
arpl
test
mov
pop
inc
out
test
outsl
xchg
mov
xor
and
or
cmpsl
xor
out
orl
inc
loopne
sbb
or
aam
lods
call
sbb
int3
add
inc
push
divb
movsl
push
in
sbb
pusha
popa
jno
ds
inc
mov
sti
adc
aad
push
sub
sub
movsb
add
repz
shrl
xor
mov
loopne
mov
xchg
addr16
daa
sti
or
cwtl
pusha
cmp
sbb
lock
cmp
mov
fldt
aaa
pop
cmp
inc
adc
push
ja
or
cs
inc
aaa
dec
movsl
sub
push
loop
cmp
aaa
pandn
pop
sti
fcmove
jne
repnz
push
push
popa
xor
jecxz
pushf
xchg
sub
adc
push
fstl
mov
mov
in
dec
add
sub
call
nop
fdivrs
pop
ds
or
lret
push
pop
add
and
data16
imul
xchg
pop
dec
iret
sbb
popl
loope
je
rcr
jnp
cmp
sbb
dec
dec
loope
out
and
mov
lods
sub
iret
sbb
mov
fcomps
jb
mov
fisttps
aam
xor
incb
push
ljmp
std
mov
rcrl
lahf
insl
cmp
inc
push
cwtl
xorb
lds
jnp
xchg
adc
jl
sti
jmp
push
mov
mov
jecxz
push
repnz
pop
lcall
cmc
cmp
int
mov
jecxz
xchg
cwtl
insl
dec
lcall
into
add
inc
fildl
pop
loop
and
ljmp
or
jp
fimuls
and
dec
inc
fmull
popa
mov
mov
insb
data16
mov
outsl
sbb
cmp
test
ret
xor
and
adc
xchg
fdiv
adc
pop
in
stc
pop
negb
lret
divl
sbb
ret
mov
sahf
mov
imul
test
out
push
adc
inc
sbbb
push
test
rcrb
sub
ljmp
jnp
cmpb
leave
movsb
push
pop
pop
rolb
inc
xor
icebp
push
iret
cld
sbb
push
jmp
cmc
fdivs
fnsave
orl
push
xor
or
fistps
xchg
dec
js
push
pop
push
and
dec
push
mov
cmp
dec
fdiv
stos
repnz
daa
dec
adc
or
jl
mov
popf
out
sub
mov
jle
xor
mov
lods
mov
scas
mov
ja
cwtl
jecxz
js
add
insb
insb
into
enter
hlt
f2xm1
jbe
jno
incl
pop
ljmp
rcll
add
ret
fadds
pop
std
ja
lret
loope
in
test
subps
jo
sti
bound
pop
add
mov
mov
mov
shrl
test
mov
push
jmpw
jge
mov
dec
jp
andps
inc
lds
bound
ja
movsb
fsubrl
imul
lock
mov
jle
rorl
inc
es
sbb
stos
xor
divps
mov
orl
dec
lret
cli
imul
push
xchg
sbb
mov
xchg
jb
ret
repnz
inc
into
out
fldenv
inc
xor
in
pop
dec
aas
sub
mov
je
lods
mulb
outsl
rcrl
wrmsr
dec
arpl
addr16
push
pop
mov
add
xor
inc
mov
add
mov
int
xor
movsb
das
fs
cltd
mov
push
bswap
pop
loopne
out
inc
dec
outsl
cs
leave
xchg
mov
loopne
rolb
mov
les
mov
xchg
inc
test
out
inc
sub
outsb
adc
sti
int3
in
test
repz
lea
mov
test
mov
sbb
lods
mov
jbe
mov
sti
pushf
out
nop
cwtl
lods
shll
xchg
mov
lret
test
dec
cmp
movb
dec
and
inc
pop
and
pop
les
clc
lcall
outsb
jno
mov
jnp
lahf
addb
int
and
xlat
mov
fisubl
js
mov
lods
cltd
mov
daa
pop
mov
pushf
rol
pop
pop
or
imul
mov
in
cli
mov
inc
std
iret
mov
cmp
lcall
sub
cmp
mov
in
pusha
ja
sahf
adc
or
lret
or
push
aad
and
scas
pop
ret
fsubrp
cmpsl
psubusb
fisubl
lock
icebp
xchg
sarb
mov
movsl
fistpl
mov
and
je
push
pusha
lcall
and
mov
pusha
cwtl
mov
push
and
das
pushf
jbe
mov
aam
xchg
jmp
xchg
adc
mov
rcr
sbb
fdivrl
sarl
jge
sbb
bnd
out
adc
xorl
add
testl
mov
cmpsl
jle
scas
pusha
pop
roll
mov
mov
lahf
inc
addr16
clc
mov
in
xlat
fs
mov
mov
in
add
inc
enter
repnz
je
or
lahf
test
adc
sub
jl
aam
dec
push
ret
sti
mov
insb
or
in
add
and
lock
std
jp
cmp
pop
xlat
mov
push
test
mov
lcall
dec
pop
test
mov
shll
sub
jbe
jns
stos
xchg
sub
popf
sub
mov
jae
dec
test
imul
outsl
xchg
jns
dec
adc
fldenv
push
stos
mov
push
testl
mov
aas
sub
and
jo
rcr
scas
xor
repnz
and
in
popf
xchg
xchg
mov
dec
mov
inc
or
addr16
push
bound
xchg
sti
mov
and
addb
push
pop
jmp
jecxz
inc
fidivs
call
repnz
or
xor
pop
push
cmp
pusha
scas
shrb
test
inc
adc
and
xor
sub
insb
pushf
test
outsb
and
loopne
xchg
mov
popa
aaa
imul
or
cmp
inc
xchg
test
fldt
add
outsl
fstps
push
repz
push
movsl
mov
jnp
jp
pop
pop
int3
push
outsl
in
mov
out
ja
mov
dec
adc
xchg
lret
cmp
call
mov
xor
or
mov
cltd
scas
aam
xor
imul
gs
cld
and
jb
lock
andb
sub
cmp
sub
pop
xchg
mov
cmp
pop
into
lods
adcl
sub
add
aam
push
mov
popf
andl
sbb
jle
pop
stc
sbb
cmp
adc
inc
jne
stos
mov
xchg
aad
dec
pop
adc
adc
dec
int3
daa
je
aam
mov
lcall
xor
add
test
pop
push
pop
scas
xlat
call
inc
push
jns
sub
push
ja
or
inc
mov
push
jnp
stc
sub
jge
mov
sub
pop
sbb
ja
and
dec
mov
js
mov
push
sub
notl
popa
push
xor
sub
jecxz
cwtl
mov
adc
in
stc
mov
sti
jne
pop
mov
jbe
scas
rorb
sub
les
push
add
dec
mov
jl
aas
mov
xchg
mov
cs
mov
repz
add
xchg
cmpsb
sbb
aad
xchg
dec
xchg
jp
xchg
or
pop
popf
lds
ja
cwtl
cmpsb
orb
push
fnstsw
and
or
push
shll
imul
mov
dec
lods
push
lods
pop
or
xor
icebp
cmp
leave
sub
cltd
arpl
add
jbe
push
dec
mov
lods
xor
pop
lock
fistpll
bound
xchg
cmp
loope
pop
xchg
dec
loop
jecxz
cwtl
cmp
fs
mov
inc
test
push
push
sub
adc
inc
or
cmp
mov
js
scas
mov
pusha
adc
jle
xlat
mov
int
je
push
jns
iret
pop
bound
por
adc
shl
ss
cmp
test
push
sbb
je
jo
sub
int3
loop
je
scas
push
sub
inc
js
push
loope
sub
std
subb
lock
jmp
or
mov
les
adc
scas
fstpt
dec
adc
loopne
test
pop
fwait
in
mov
shll
out
lret
popa
sbb
mov
imul
scas
mov
dec
dec
nop
lock
daa
jl
fisubl
sub
mov
mov
mov
cltd
xchg
aas
dec
mov
mov
mov
cli
jp
dec
pop
mov
stos
mov
rcll
pop
call
pop
test
aam
pop
pop
adc
cmp
out
stos
in
dec
aaa
inc
ja
int
cmc
in
and
aam
xchg
inc
cmpsb
dec
incl
xchg
dec
mov
cmp
cmpsl
nop
mov
or
xchg
add
test
bound
inc
pushf
dec
push
xchg
in
push
cli
dec
rcll
mov
mov
sbb
test
pop
jg
jle
jecxz
imul
jle
mov
pop
addr16
lds
scas
and
fdivl
xor
es
rcll
jbe
inc
out
nop
in
jecxz
push
aaa
inc
test
and
inc
cmp
mov
xchg
jle
xadd
cmpsl
fstps
addr16
mov
outsl
test
ds
bound
sbb
sbb
inc
fwait
inc
xchg
push
push
fsubrs
fadds
int
cmp
sarl
pop
adc
or
inc
fwait
inc
hlt
cmp
insl
and
mov
pop
jle
dec
mov
xor
popa
gs
dec
or
pop
aaa
jno
push
incb
sbb
inc
fs
cs
mov
jg
fnstenv
outsb
jmp
arpl
push
cmpsl
lds
push
mov
daa
xchg
cmp
testb
test
lahf
testl
mov
ds
push
mov
jbe
push
mov
pop
pusha
pop
in
repz
or
cmpsl
arpl
insl
mov
pushf
movsb
enter
push
dec
adc
cmpsl
dec
pop
add
xchg
mov
das
dec
popa
mov
cld
push
lods
pop
add
add
mov
jne
sbb
dec
icebp
bound
xchg
mov
mov
in
or
xchg
push
cmpsl
nop
mov
scas
adc
bound
imul
sbb
and
inc
dec
jns
cli
ss
outsb
xor
fcmove
dec
push
sbb
test
inc
jbe
test
pop
pop
ds
ds
popf
jb
inc
fwait
mov
jnp
sbb
cmp
int
aad
mov
mov
sub
mov
nop
clc
sub
pop
stc
int
sub
mov
sub
adc
cmpl
popa
jbe
aaa
inc
pop
inc
xchg
cmp
inc
dec
mov
cmp
jl
rclb
imul
cli
push
dec
mov
in
inc
fs
mov
and
and
jl
mov
xchg
xchg
inc
in
test
lahf
sub
cmp
jmp
or
push
lods
cltd
lods
sahf
das
mov
adc
and
mov
adc
int3
cmp
xchg
inc
cmc
xchg
mov
cmpsl
push
lds
push
jecxz
nop
push
outsb
push
inc
int3
scas
xchg
aas
adc
mov
lret
orl
test
lret
push
shll
jnp
xchg
dec
push
rep
mov
push
cli
or
dec
push
jecxz
js
add
inc
push
pop
mov
jmp
sti
cmpsl
outsl
sbb
jl
sbb
mov
icebp
test
or
dec
xchg
scas
dec
test
enter
aam
mov
mov
sub
jmp
les
popf
mov
add
xchg
xchg
cltd
dec
mov
pop
push
fsts
dec
mov
dec
movsl
and
or
lret
jae
xchg
pop
in
aaa
and
fwait
loopne
pop
xorb
mov
xchg
lcall
out
aam
jb
and
inc
and
lahf
cs
sti
xchg
in
fildll
aas
loope
dec
or
outsb
lret
pop
pop
rcl
repnz
inc
cmp
in
pop
fwait
push
aas
xor
cmpsb
leave
ja
rclb
in
lods
dec
dec
pop
cmc
pop
pushf
pop
test
test
xor
push
mov
jns
xchg
pop
clc
pop
xor
sarl
rorb
pop
repz
mov
popf
push
pop
jle
or
and
inc
xchg
mov
xor
pop
imul
xor
fsubrs
test
mov
lods
push
pop
testl
jecxz
mov
push
fs
mov
add
leave
mov
xor
in
sub
pop
sti
arpl
into
sarb
mov
inc
mov
mov
fisubl
cmp
or
dec
push
loopne
mov
jns
mov
xlat
pop
sbb
jg
mov
out
cmp
sub
xchg
aam
add
push
sbb
mov
lods
es
pop
or
les
xor
in
inc
push
in
dec
pop
repnz
cmc
mov
arpl
jno
fstpl
mov
aas
icebp
add
adc
mov
mov
lahf
outsl
out
xor
addl
add
cltd
and
jns
push
cmc
rcrl
ljmp
inc
cli
jp
push
loopne
outsl
mov
lods
in
int3
mov
sub
mov
cvtpi2ps
std
dec
adc
test
jge
into
sahf
jg
jp
mov
xor
out
aaa
int
dec
and
or
out
jp
inc
xchg
jne
daa
mov
sub
fldt
add
stos
mov
fdivl
inc
push
mov
iret
cmp
xchg
nop
mov
sbb
push
or
mov
aas
std
not
mov
push
lret
lret
sub
mov
frstor
pop
adc
rorb
hlt
stos
mov
aam
adc
rolb
aad
pop
popa
rorb
push
push
push
and
dec
add
sbb
push
out
jae
clc
fisubl
rcr
aas
test
bound
xchg
push
movb
pop
mov
mov
movsb
into
bound
leave
pop
inc
stc
imul
xchg
sub
push
or
rolb
popa
inc
dec
jge
daa
xchg
inc
jge
rcrb
test
adc
sub
mov
test
imul
dec
xchg
aas
popf
dec
inc
xchg
adc
dec
cli
mov
mov
xor
test
xlat
dec
repz
dec
daa
dec
cmpsl
roll
push
jge
repnz
inc
sbb
or
add
movsl
sbb
loope
ds
dec
cmp
lcall
xchg
xchg
loop
ret
cmc
leave
push
lret
and
stos
nop
sub
and
and
daa
dec
stc
leave
cmp
pop
testl
hlt
jns
mov
push
add
push
adcl
ljmp
divl
sarb
jl
jnp
mov
xchg
daa
cld
sbb
ds
dec
mov
pop
jp
xchg
and
push
xor
fsubrp
lea
jne
push
dec
leave
fstl
inc
clc
insl
lret
cltd
push
daa
aad
xor
aad
mov
sbb
out
out
dec
sbb
inc
out
ljmp
or
jge
ds
inc
xchg
sbb
lret
pop
xchg
call
out
mov
and
std
mov
xchg
testl
sub
inc
xor
pop
cmp
std
andl
cmp
popf
fnsave
out
inc
jae
xchg
adcl
jbe
pop
sub
call
enter
in
into
jecxz
push
mov
adc
cwtl
xchg
cmpl
inc
and
push
loopne
xlat
fdivrs
push
movsb
and
fistpll
push
out
dec
push
xchg
push
iret
movsb
daa
inc
cli
xor
pop
sub
test
sbb
adc
adc
cmpsl
nop
jmp
inc
jmp
and
push
faddl
lds
jecxz
loop
jp
insl
es
fucomi
dec
sub
inc
jnp
mov
iret
stos
in
dec
mov
adc
pop
cli
out
cwtl
dec
jne
ss
push
data16
push
in
call
stos
imul
sub
jmp
add
cmp
int
movsb
mov
shll
roll
and
xchg
outsl
outsb
pusha
int
sbb
lods
fbstp
pop
clc
fcomip
hlt
push
cmpsl
fcmovne
sub
dec
stc
push
loopne
repz
test
xor
enter
mov
rorl
pop
bound
inc
das
adc
jmp
lods
inc
inc
jge
push
jmp
push
mov
fimuls
adc
clc
cs
aaa
mov
inc
push
ror
icebp
not
std
leave
push
xor
mul
fadds
jg
enter
int
loopne
test
mov
mov
daa
ret
fdivrs
daa
sub
mov
xlat
fimuls
jno
jecxz
pop
jns
xchg
sti
jbe
jno
inc
cmpsl
jae
stos
mov
jnp
inc
push
jae
repz
ret
sbb
sub
or
mov
cmpb
dec
outsb
cmp
mov
insb
insl
pop
xchg
and
sub
inc
mov
xchg
pop
cmp
sbb
jge
jnp
in
or
jp
pop
push
cmp
sti
repz
movsl
mov
xchg
mov
and
mov
jbe
popa
add
inc
mov
out
push
movsl
pop
enter
mov
xchg
mov
sbb
mov
loop
sbb
xor
mov
aam
pusha
inc
lahf
or
jge
xchg
push
sahf
pop
mulb
shll
push
popa
xchg
or
fwait
pop
xor
jbe
enter
add
mov
or
clc
hlt
in
jecxz
xchg
pop
mov
mov
inc
xchg
jl
push
cld
ljmp
or
push
cmp
fcmove
ja
adc
stos
decb
inc
ret
inc
out
xor
xor
xchg
inc
and
xor
jmp
or
call
in
sbb
pop
loope
clc
outsb
add
xlat
aam
adc
imul
push
push
shrl
icebp
sbb
outsb
in
das
mov
ret
mov
cmpsb
adc
cmp
aad
inc
clc
fnstcw
cmp
or
xchg
cmp
mov
mov
sbb
and
cmpsl
xchg
jmp
js
icebp
bound
jmp
mov
adc
outsl
rclb
out
jbe
data16
mov
pop
dec
sub
cmp
imull
lcall
scas
fcomp
lods
insl
mov
popa
fwait
adc
or
dec
lcall
dec
ret
jbe
es
imul
data16
xor
push
pushf
out
enter
xchg
mov
sbb
es
pop
dec
lds
popa
push
aas
stc
and
test
sub
shrl
clc
jle
mov
mov
dec
loop
jle
lahf
shlb
push
dec
jp
cli
sbb
ret
lahf
and
add
mov
lret
sahf
cmp
add
je
mov
sbb
add
cmp
mull
mov
cmp
lock
xlat
push
mov
or
aas
sub
fdiv
repnz
push
cmp
cwtl
fldz
sub
jns
std
fisttpl
mov
push
lock
add
test
in
stc
scas
sbb
or
sub
push
lods
or
insl
dec
and
jb
movsl
inc
int3
cltd
mov
push
and
sahf
cmp
mov
cmpsl
shrl
cld
lret
or
jmp
outsb
sub
test
out
inc
outsl
iret
ret
cmp
shr
mov
faddl
std
inc
out
bswap
sbb
retw
test
mov
push
or
or
lock
dec
push
push
cmp
pop
or
inc
jnp
pop
cmpsb
mov
lahf
jae
ret
les
in
xor
loope
xchg
imul
fbld
int
dec
jmp
dec
ror
jmp
les
das
aad
aaa
pop
jle
pop
xchg
inc
nop
cwtl
jmp
mov
mov
aad
popf
std
or
pop
lods
iret
aas
inc
xor
xchg
sub
ficompl
ds
jle
test
dec
or
inc
xchg
jmp
mov
in
shlb
bound
xchg
sub
push
mov
sub
mov
popf
lods
stos
inc
sbb
mov
xchg
pusha
das
cmp
lods
pop
lods
fldenv
fisubs
sti
test
imul
out
jg
sbb
adc
lcall
test
xor
mov
mov
test
test
lahf
mov
aam
xor
test
scas
and
ljmp
mov
jb
inc
prefetcht1
pop
fs
rep
mov
pop
sub
push
dec
shr
pusha
dec
mov
jns
ficoml
cmp
mov
sbb
imul
and
mov
js
sti
sub
data16
cwtl
jp
jbe
add
pop
jp
stos
add
dec
ret
sbb
mov
divl
clc
daa
in
sbb
jbe
xor
cmp
add
jp
xchg
pop
push
mov
and
inc
lods
test
xlat
shr
xchg
jmp
and
lods
fadd
je
add
xlat
imulb
add
cmp
adc
enter
add
dec
and
arpl
popf
ret
push
jmp
pop
push
or
fwait
mov
pusha
enter
enter
add
cmpsb
jle
jbe
dec
adc
cmp
movsb
add
sbb
adc
mov
or
jns
shrl
cmp
inc
cmpsl
mov
daa
xchg
pop
xor
and
mov
xchg
ret
rorb
mov
js
mov
add
jge
and
pop
xchg
pop
dec
aad
fs
aam
ljmp
shrb
jo
enter
jne
xchg
mov
cmpsb
mov
imul
gs
fcoml
test
add
mov
aaa
cltd
adc
pop
cmc
push
mov
je
xor
shrl
mov
and
rolb
popa
jno
sub
pop
add
jo
xchg
ficoml
push
pop
dec
and
add
test
jb
mov
loope
adc
fildll
std
lret
int
pusha
dec
push
pop
add
stc
cli
out
adc
fcomi
and
mov
push
mov
inc
cmp
and
out
dec
mov
shll
addr16
out
repz
lods
mov
adcb
mov
xchg
ret
push
add
ret
xchg
pushf
scas
cmp
xor
fmull
mov
cmpsb
repnz
mov
sbb
outsb
cmpb
nop
repnz
pop
ljmp
jmp
call
iret
lds
inc
mov
std
push
dec
stos
lds
jbe
outsl
mov
pop
xchg
push
in
jns
fildl
adc
cmpb
cmpsl
daa
dec
adc
cltd
sahf
jnp
fdivp
push
fistl
inc
adc
sahf
xor
loop
mov
inc
jle
xchg
jp
xor
push
repz
jmp
pop
and
mov
fmull
addr16
mov
or
dec
jg
cld
and
xor
out
or
and
iret
out
sub
lods
mov
jl
sbb
cmp
jmp
fisubs
sbb
cmp
add
mov
popf
loope
adc
mov
ret
mov
jo
pop
mov
add
jo
in
xchg
and
jecxz
cmp
push
scas
push
movb
dec
mov
mov
fiaddl
fimuls
xlat
mov
and
shrl
jb
repz
subl
inc
and
cltd
int3
insb
aad
add
test
nop
inc
xor
in
es
subb
imul
inc
in
clc
out
int3
inc
adcb
jne
movsl
les
imul
fs
mov
push
and
mov
sbb
gs
add
shlb
mov
sub
inc
rcl
mov
test
sub
pop
hlt
pop
pop
imul
mov
mov
cmp
xor
add
inc
fstpl
js
xchg
sbb
or
inc
push
call
insl
test
sbb
xchg
fcomps
jo
loope
xor
xchg
sub
push
mov
outsb
inc
test
xchg
out
sub
dec
sbbl
add
jae
lods
or
pop
movsb
pop
js
mov
mov
lret
repnz
out
in
orb
xchg
mov
and
mov
adc
xor
push
es
out
movl
nop
arpl
mov
scas
xchg
mov
dec
sub
mov
push
movsl
lea
fsubs
push
pop
push
add
or
sbbl
dec
outsl
scas
xchg
cmp
or
fmul
jns
xchg
and
sbbl
fs
push
push
test
rcrl
or
cmp
pusha
adc
shlb
sub
adc
sub
push
or
rolb
dec
dec
xchg
mov
mov
push
mov
xchg
push
gs
fcoms
icebp
sarl
lock
xlat
push
in
ror
jecxz
fst
sub
movsl
leave
test
or
mov
push
dec
addr16
daa
jbe
mov
dec
xchg
add
sub
dec
mov
arpl
or
xchg
pop
mov
rorl
xchg
lcall
mov
cld
ret
lds
mov
arpl
cld
les
mov
cmp
stc
scas
sub
aad
loop
fs
stos
daa
repnz
mov
jl
add
gs
jmp
repnz
out
xchg
sub
pop
clc
or
frstor
hlt
in
mov
push
lea
mov
fs
cmp
adc
inc
lods
sbb
rcll
shll
pop
pop
test
sbb
mov
mov
push
cmp
jmp
sbb
imul
or
xchg
stc
int3
dec
out
jnp
inc
fs
cmp
inc
xor
popf
xor
daa
pop
loopne
and
push
cli
in
movsl
mov
xor
mov
cmp
pop
xchg
aas
mov
add
in
movsb
adc
lods
xor
insl
out
roll
dec
ds
push
and
xlat
add
or
mov
bound
cmpsl
dec
cwtl
mov
sub
shr
and
cli
stc
loopne
adc
movsl
in
mov
jecxz
mov
xor
xchg
mov
mov
mov
fisttpl
cs
or
out
cmp
or
mull
bnd
adc
lcall
addr16
dec
pop
xor
cmp
xchg
sub
xchg
stc
cmpsl
arpl
jno
iret
imul
xlat
sbb
sbb
enter
xchg
xorb
data16
xchg
push
cli
lahf
sbb
in
add
scas
xor
cmc
dec
in
jp
icebp
lods
stos
repnz
imul
pop
jo
ficoml
scas
lea
xlat
xor
jecxz
mov
and
mov
andl
adc
lcall
movsb
jbe
nop
xchg
push
or
pop
fucomp
xor
int
insb
test
pop
andb
loope
or
outsl
in
jge
inc
testb
and
lret
push
pop
mov
aas
sbb
insl
cmp
lcall
cmp
ret
ds
or
jbe
cmpsb
push
mov
imul
inc
mov
daa
pop
fsts
ror
rcll
mov
push
mov
jo
hlt
push
xchg
xchg
mov
mov
cmp
daa
pop
ds
jp
push
mov
sbb
and
adc
pop
push
pop
insb
xchg
sarb
xor
pushf
jmp
push
mov
xchg
in
fs
xchg
adc
pop
xor
xor
xchg
or
inc
out
mov
push
pushf
cmp
xchg
push
into
jno
mov
push
movsb
mov
push
int
cmpsl
pop
mov
jl
adc
sbb
fs
rorl
cmpsb
push
mov
lret
les
push
xchg
push
xchg
aad
in
daa
xchg
inc
mov
or
push
push
cwtl
icebp
idivl
iret
repz
into
mov
xor
inc
or
stos
inc
sub
in
mov
cmpl
cmpsb
je
push
nop
dec
pop
sub
push
imul
in
jbe
mov
les
mov
or
mov
fistpl
sbb
js
inc
fisubl
mov
add
and
movsb
mov
xor
and
loop
stos
xchg
xlat
mov
fcmovnbe
lods
icebp
cmp
aaa
adc
sti
into
lret
je
movsl
out
jg
lcall
push
xorb
and
aad
aad
testw
cmp
push
push
sub
mov
jns
iret
rcr
pop
test
push
push
cmp
rcrb
mov
sub
or
cmc
mov
or
imul
in
jg
cli
ljmp
loop
push
add
or
decb
test
sbb
add
sub
xchg
inc
cmp
sub
scas
fdiv
sahf
xchg
add
or
mull
xor
jb
push
ret
ficoms
das
xchg
pop
push
data16
and
inc
call
frstor
and
test
shlb
stos
pop
dec
xchg
lods
sub
scas
add
push
xchg
sub
mov
mov
mov
mov
fs
xlat
push
pop
cmp
push
cli
in
xchg
dec
sahf
sahf
fwait
sub
jno
pop
xchg
enter
xor
mov
pop
add
xor
lret
out
ljmp
test
pusha
sahf
cmp
mov
or
ss
bound
fs
dec
sub
daa
int3
fmuls
mov
cmp
test
data16
lods
cmp
add
popa
sahf
enter
ret
test
xchg
in
inc
push
in
addr16
push
repz
adc
pop
iret
dec
imul
jge
adc
out
cmp
mov
leave
inc
or
clc
fidivrl
cwtl
in
or
add
lods
xor
int3
add
outsl
out
sub
in
mov
sahf
add
sbb
and
outsl
sub
mov
lods
dec
in
sub
cwtl
xchg
sub
mov
lea
js
mov
sub
mov
daa
xor
stos
andb
mov
sub
pushf
lods
push
aas
outsl
push
push
mov
fs
call
outsb
ret
jle
xor
xchg
jo
lds
push
push
shlb
outsl
or
add
push
pop
int3
js
sbb
push
and
add
or
dec
negl
and
jg
or
xor
mov
jl
clc
cs
sbb
rcl
and
xchg
rcll
push
shl
pop
imul
les
dec
sub
cmpsb
push
dec
mov
pushf
push
hlt
lcall
add
or
pop
adc
dec
in
xchg
xchg
mov
mov
cmp
cmpsb
dec
test
loop
lret
fdivrs
insb
int
pop
dec
sbb
mov
mov
inc
call
pop
jmp
repnz
lret
add
jmp
push
xchg
sti
inc
sub
cmp
jno
dec
gs
cld
popa
sbb
jp
push
call
test
addr16
fwait
lahf
and
or
or
sub
leave
out
sbbl
icebp
mov
test
push
mov
jb
adc
outsl
cmp
and
aas
mov
jp
jno
cmpsl
pushf
xor
mov
daa
push
enter
ljmp
mov
insl
movsl
shrb
nop
adc
add
test
xchg
dec
mov
stos
mov
pop
adc
sub
subb
lock
xchg
cmp
push
push
push
cmp
mov
or
and
push
cmp
xchg
adc
xchg
and
adc
dec
mov
add
cmp
mov
fildll
dec
mov
fwait
lret
mov
repnz
inc
lock
arpl
loope
outsb
pop
insb
lods
outsl
and
outsl
mov
xchg
inc
inc
inc
sub
adcl
pushf
leave
pusha
jns
sbb
clc
fnstsw
mov
addb
jo
dec
xor
cmpsb
dec
and
loopne
pop
fistl
jne
scas
adc
incb
mov
pop
in
ja
jmp
xor
mov
sub
imul
xchg
pop
mov
mov
cmp
test
lods
and
fwait
mov
mov
sbb
ljmp
pop
mov
mov
push
mov
push
inc
aaa
addr16
pop
outsb
jmp
addb
or
xlat
jge
mov
jp
aam
movsb
adc
pop
xor
push
push
adc
ja
add
fcoml
mov
pop
push
mov
xor
sahf
jle
mov
adc
or
pop
mov
sub
aas
and
jle
shlb
mov
inc
sahf
push
cs
stos
mov
fcompl
xchg
mov
bound
lock
cmpsb
jae
push
mov
lret
cli
pushf
test
movsl
xchg
outsl
jne
xor
add
das
sub
cmp
stc
dec
int
xchg
mov
fsubs
outsb
jne
xchg
in
pop
inc
xor
rcrb
mov
mov
or
sub
jnp
out
loopne
mov
mov
into
adc
popf
cld
xchg
fisttpll
mov
fs
push
pop
mov
xor
mov
jmp
pop
mov
mov
or
fsubrl
pop
jge
data16
jg
rorb
mov
sub
and
cli
dec
cs
push
clc
pop
test
aaa
fldcw
rcrl
mov
add
aad
icebp
rorb
jl
ljmp
int3
jnp
ret
mov
fnsetpm(287
testl
mov
imul
dec
frstor
jns
cmpb
mov
and
hlt
pop
fisubs
xchg
inc
sbb
icebp
dec
das
or
jno
or
cmp
sub
sbbl
rcll
loop
xlat
leave
pop
ja
inc
sti
sahf
mov
mov
xor
fdivrl
data16
test
sti
cmp
xchg
xchg
daa
ror
outsb
out
xchg
imul
in
pusha
je
daa
fwait
and
out
mov
jle
cwtl
push
adc
sbb
push
aad
lds
or
jae
mov
test
sub
or
leave
insb
out
movb
mov
push
repnz
jmp
xor
mov
dec
pop
xlat
movsb
jg
dec
je
adc
addl
dec
jo
xor
rcl
xor
outsl
dec
pusha
in
out
fnstenv
sbb
mov
fimull
add
jbe
sub
pop
insl
adc
xchg
lds
or
fdivl
aam
pop
add
insb
fidivrs
xchg
mov
mov
push
insl
add
bound
push
mov
pushf
fstpt
or
sbb
std
inc
mov
sbb
mov
mov
adc
iret
push
das
je
sahf
push
mov
jns
jmp
adc
or
or
sbb
xor
xchg
mov
inc
mov
std
pop
lods
shrl
xor
test
lods
pop
mov
pop
cmp
push
andl
inc
ret
mov
lds
outsb
mov
xchg
in
jg
ljmp
jno
jbe
sbb
sbb
stos
mov
dec
call
xchg
xchg
sbb
faddl
outsb
imul
cmp
lahf
jnp
push
pop
sarl
addb
call
les
js
fldl
inc
xchg
loop
mov
fidivrl
dec
cs
mov
add
in
out
std
mov
pop
int
cmpsb
adc
imul
fildl
jp
insl
mov
push
js
popa
orb
mov
sbb
pop
enter
hlt
ret
sub
fdivrs
mov
and
loope
out
jmp
mov
mov
cltd
data16
or
filds
loopne
imul
dec
cmc
inc
mov
stos
mov
std
jns
jnp
cmp
add
cltd
sbb
push
or
ficoms
add
call
sbb
pop
sbb
dec
pop
imul
mov
lahf
ficoml
jne
mov
or
xchg
shrl
add
leave
push
imul
test
push
xor
ljmp
rorb
and
inc
dec
jge
push
and
std
or
jne
adc
inc
mov
mov
inc
jno
jnp
push
push
fldcw
push
mov
outsb
push
loope
add
repz
aam
fwait
jne
xor
push
dec
jl
xlat
mov
aas
jmp
loopne
cltd
pop
sti
pop
jb
cli
push
and
sub
cmpsb
je
aaa
andl
mov
test
test
bound
mov
movl
testb
int3
inc
fnstsw
xor
fidivs
sti
fwait
outsb
push
mov
mov
adc
pushf
and
add
into
ja
lahf
test
and
sub
sbb
sbb
jle
jae
dec
adc
pop
aaa
in
pop
popf
mov
lods
pop
popf
fldt
xchg
jbe
jns
mov
cmp
xlat
pop
push
inc
push
dec
int
movsl
push
in
mov
setp
inc
jg
xchg
lret
mov
mov
pusha
or
lcall
xor
and
mov
jge
iret
adc
lahf
lret
outsb
inc
sahf
inc
outsb
sarl
xchg
mov
repz
sub
sub
mov
cs
sbb
es
int
or
jp
xchg
fdivrl
scas
mov
jl
push
sub
cmp
sbb
push
push
movsl
pop
mov
popl
arpl
xor
mov
fists
stos
loopne
sub
in
mov
inc
jns
addr16
call
pop
xchg
and
stos
mov
iret
sbb
cmpsb
lods
pop
mov
rcl
loope
mov
andl
adc
shlb
dec
dec
sti
int
std
test
out
outsb
testl
dec
push
dec
sbb
push
cmp
jmp
cmp
addr16
mov
lea
jl
sub
cli
gs
jge
mov
pop
pop
sbb
aam
inc
lds
add
imul
outsb
add
movsl
xchg
aam
cmc
loope
insb
rorl
shrl
rcrl
fs
xor
and
sub
or
push
or
in
push
pop
xor
aad
fbld
addl
xor
subl
lock
ds
sbbb
lcall
sub
lds
jge
push
pusha
and
aam
mov
fldcw
stos
mov
sub
sar
pushf
cwtl
in
scas
frstor
ds
or
jmp
mov
pusha
fistpl
ret
cld
gs
jno
dec
pop
xchg
cmp
xor
push
lret
call
cmp
ret
dec
les
inc
aaa
push
xlat
mov
mov
jmp
fdivrp
mov
pop
sbb
data16
sbb
sarb
in
in
leave
mov
loopne
adc
push
push
repz
pop
xlat
sti
push
or
push
jmp
sbb
leave
add
pop
js
push
addr16
adc
mov
dec
or
popl
adc
cmp
or
push
adc
sbb
sub
cld
xchg
nop
mov
fbstp
rcll
shrb
sub
jge
jb
sti
cmp
in
add
pop
daa
fwait
mov
adc
test
pusha
adc
fdivrs
dec
dec
cmp
mov
arpl
mov
dec
xor
sub
sub
xor
ss
shrl
inc
or
mov
les
sti
lock
test
int
mull
jl
lods
into
add
mov
notl
inc
mov
in
ss
cmc
out
imul
pop
sbb
shrl
mov
pusha
fsubrs
rolb
xchg
enter
stc
sbbb
dec
insb
enter
sub
out
mov
xchg
and
cmp
sub
loop
sub
mov
adc
test
xchg
mov
subl
shll
sub
shlb
fidivs
push
sbb
cmp
nop
stc
xlat
in
sbb
roll
stos
adc
clc
mov
push
rcrl
into
or
cli
sbb
mov
xchg
in
movsl
stc
mov
stos
mov
xor
inc
cmp
pop
not
push
shl
xor
inc
push
seta
outsl
in
mov
les
mov
sub
add
or
pop
in
dec
rcrl
lahf
add
push
xor
leave
push
fisttpll
push
shl
rcrb
cs
push
dec
push
mov
imull
inc
adc
and
mov
xchg
stc
inc
outsb
inc
push
int3
push
sub
lods
xchg
sub
jbe
mov
pop
push
cmc
mov
fwait
and
rclb
sbb
sub
dec
addr16
inc
cli
insl
dec
mov
cld
pop
cmpsb
adc
or
mov
std
enter
test
jno,pn
mov
xor
adc
lock
add
lcall
jle
adc
nop
jbe
pop
push
enter
mov
imul
dec
je
iret
mov
into
jb
cmp
mov
lods
or
sub
adc
stos
mov
push
ss
or
fidivs
push
xor
mov
mov
in
and
outsl
xor
insl
mov
dec
jmp
pop
push
dec
test
lds
cmpsb
mov
mov
hlt
in
inc
lea
enter
ljmp
mov
test
sub
push
cmp
fdivrs
leave
add
cmp
mov
xchg
push
test
insl
ljmp
repnz
lahf
ljmp
