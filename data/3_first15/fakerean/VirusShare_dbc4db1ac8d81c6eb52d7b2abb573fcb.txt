sbb
add
mov
pushf
mov
add
sbb
xchg
and
dec
mov
stos
xchg
in
shl
leave
cmpsb
lds
into
or
or
add
mov
fidivs
cmp
shll
fimuls
andl
int
pop
sbb
movsl
dec
mov
lret
call
fstpl
adc
movl
xor
loope
sbb
adc
outsb
fcom
lods
mov
rorl
pop
push
popf
push
lock
jle
add
pop
pop
pop
out
add
lock
das
fdiv
and
push
mov
push
mov
stc
stos
jnp
push
imul
sarl
cmc
pop
inc
jae
movl
cs
pop
mov
add
out
mov
stc
nop
ret
stos
xchg
sub
xchg
rcrl
push
cmp
cltd
xchg
or
push
xor
jne
aam
mov
repz
nop
dec
jno
xchg
pop
push
lcall
sub
mov
daa
inc
lahf
lock
ds
pushf
popa
fisttpl
cmp
adc
pop
or
jecxz,pn
xchg
inc
ljmp
jnp
repnz
aaa
ret
int3
mov
fnsave
enter
ljmp
scas
xchg
cmp
xchg
cli
jle
clc
fstps
mov
test
add
fs
push
loopne
ss
inc
xchg
repz
loopne
mov
ret
ss
lahf
xchg
sbb
or
mov
ret
gs
push
pop
cli
out
cmp
and
inc
dec
mov
sub
pusha
scas
push
mov
adc
pop
les
jg
test
add
jns
inc
iret
push
ja
fdivrs
or
add
cmp
ss
jp
xchg
out
insb
mov
sub
mov
mov
cli
test
xor
mov
mov
test
popa
out
xchg
mov
negl
jle
dec
cmpsb
mov
pop
pop
mov
ret
xchg
dec
xor
xor
inc
ss
loope
out
cmc
pop
nop
aaa
add
xor
nop
lock
jg
inc
push
shlb
stos
movsl
shl
mov
popf
jnp
hlt
xchg
push
fcoms
dec
out
or
mov
pop
bound
or
and
jmp
inc
xchg
jge
rcrb
add
je
mov
or
add
les
addr16
sub
stc
lock
mov
pushf
outsb
xchg
pop
dec
lret
and
lods
dec
scas
mov
add
sahf
inc
or
mov
xlat
push
sahf
inc
movsb
lret
xchg
jo
mov
cmp
mov
dec
repnz
mov
push
inc
into
xchg
int
mov
inc
push
mov
call
jmp
inc
xchg
sbb
popa
icebp
mov
sbb
pusha
ret
movsl
dec
xchg
push
xor
cwtl
rclb
ja
clc
mov
shll
outsb
mov
dec
mov
inc
clc
cwtl
out
je
mov
and
es
out
mov
cmp
add
add
lret
and
xor
push
rcrb
sbb
idivb
and
je
stos
xor
or
push
scas
dec
pop
and
mov
cmp
push
ret
aad
call
add
mov
das
cmp
xor
adc
sbb
and
cmp
addr16
into
jbe
jo
movsb
mov
jb
jmp
dec
xchg
add
jae
shlb
mov
pop
or
aas
lods
or
jge
out
mov
cltd
shlb
icebp
daa
lret
jne
fisttps
stos
mov
in
pushf
in
int3
sahf
test
addr16
scas
lods
xchg
sub
mov
sub
test
mov
shll
pop
das
cs
aad
dec
sbb
cmpsb
inc
movsb
add
jg
jl
and
loop
add
sub
sbb
mov
mov
outsl
clc
sub
inc
sahf
lahf
dec
or
mov
push
jnp
in
repnz
and
hlt
int3
repz
add
mov
aaa
repnz
jo
aaa
iret
sub
mov
cmpb
stos
or
testb
xchg
mov
push
pushf
movsb
inc
neg
cmpsb
dec
push
sub
push
data16
mov
dec
shr
sub
mov
inc
xchg
jge
dec
aam
pushf
dec
stos
xchg
lods
mov
es
pop
jno
xchg
xor
shrl
cmp
adc
jle
in
insl
jns
not
loope
pop
pop
cmp
test
xchg
xchg
add
sub
idivb
dec
adc
sub
xor
stos
add
shrb
aam
and
cmp
lods
xor
pop
fwait
cld
inc
and
mov
xchg
sbb
xchg
fimuls
cmp
ret
cmc
dec
dec
jno
fnstcw
fdivrl
mov
mov
loopne
lcall
mov
xchg
in
cmp
aas
icebp
adc
cmp
sub
js
aad
out
xchg
fcomp
popf
sbb
cmp
fwait
inc
and
out
stos
push
xor
dec
idivl
xchg
mov
and
in
jmp
sar
insl
dec
push
rcrb
stos
pop
pop
icebp
gs
dec
inc
jg,pt
ja
sub
cmp
in
sbb
mov
mov
jb
std
mov
mov
sbb
add
nop
lahf
flds
out
lcall
stc
sbb
repnz
push
dec
jne
pop
mov
sbb
sub
int
sub
imul
adc
fadds
pushf
xlat
bound
decb
xor
cmpsl
ret
pushf
add
call
icebp
pop
out
push
inc
jno
and
rcll
xor
mov
add
shrl
mov
or
scas
mov
hlt
sbb
mov
sbb
push
stos
pop
mov
ret
insl
insb
mov
movsl
loop
dec
and
inc
aad
jle
adc
push
shrl
lret
or
iret
push
xor
repz
sbb
push
push
cs
sub
add
test
outsb
xor
lahf
sarl
xchg
mov
inc
xchg
clc
aas
imul
xchg
push
in
xchg
js
cmp
jl
movsl
mov
push
in
mov
or
and
pop
pop
sub
clc
jno
and
popa
lea
imul
or
pop
sbb
sub
ljmp
jle
enter
ficomps
jge
push
arpl
mov
test
mov
outsl
xor
xchg
jb
inc
cmp
sub
pop
sub
inc
aad
lret
cmp
fiaddl
pop
jl
and
cmp
sahf
push
je
jl
fisubrl
or
mov
fistpll
roll
sbb
ret
fadds
push
pushf
push
dec
xchg
xor
ret
enter
fmuls
adcl
int
mov
adc
cmp
es
sub
ds
or
fiadds
xchg
incb
std
pop
pop
das
mov
rorb
xchg
leave
cs
adc
jg
gs
iret
adc
or
leave
sti
fsub
and
imul
sbb
lds
loopne
ret
mov
stc
mov
sub
add
cli
loop
mov
ljmp
ljmp
popa
sbbl
gs
xor
jg
pusha
cmp
cmp
sub
int
jns
lcall
test
dec
push
rcl
fs
mov
out
push
lcall
mov
and
sti
mov
mov
test
pop
xlat
and
cmp
push
xchg
cmp
xor
pop
mov
sub
jp
iret
movsl
dec
xchg
das
cmp
ret
push
fldcw
je
mov
or
sahf
mov
or
loopne
xchg
cmp
mov
sub
xchg
mov
repz
ret
iret
pop
cmp
enter
fidivrs
notb
cmp
jmp
adcb
push
popa
jge
loope
sbb
call
cld
mov
sub
lds
les
js
and
stos
sti
jns
dec
add
andb
xchg
roll
mov
cltd
mov
iret
push
push
ret
test
inc
jmp
pop
cmc
lcall
imull
fisubrl
test
mov
pushf
push
jae
cld
adc
inc
adc
jno
add
imul
xor
movsw
lock
mov
leave
jnp
shl
mov
fistps
lea
int3
or
mov
test
rolb
flds
enter
sahf
dec
mov
lock
ret
pop
jecxz
mov
gs
mov
jbe
ret
rep
add
mov
jae
sbb
lods
dec
das
mov
push
test
sbb
sub
or
subl
cld
stos
insl
setbe
sbb
mov
fbld
incl
and
xor
sub
xchg
inc
icebp
push
insl
dec
pop
sbb
xlat
int
imul
mov
and
popa
adc
clc
jmp
jns
jg
mov
mov
add
fstpl
inc
or
cld
fsubrl
pop
out
sbb
xchg
push
outsb
ljmp
jmp
scas
testl
cmp
xor
mov
addr16
add
inc
ja
je
inc
inc
sbb
xorb
sub
int
adc
jl
xlat
mov
int
xor
cld
aam
lcall
fimuls
js
jbe
pop
fcomps
rclb
popa
xchg
xor
std
out
push
shl
mov
cld
leave
or
or
pop
fadd
xchg
hlt
push
popf
lds
scas
pop
les
xor
rol
inc
mov
jp
testl
xchg
ljmp
shl
dec
cmp
pushf
mov
cmp
dec
test
int3
inc
insl
pop
outsb
mov
mov
push
out
dec
jle
inc
sub
xor
push
outsl
push
int
lea
adc
clc
loope
jmp
hlt
iret
fdivrs
push
addl
jno
add
xchg
add
iret
aas
ret
add
dec
out
jo
ret
cwtl
dec
xor
inc
dec
les
fdivrl
sbb
pop
or
cmpsb
out
aad
lods
inc
dec
jle
cli
in
loope
daa
jne
fists
sbb
xchg
cmpsb
xor
mov
adc
test
adc
sbb
pop
test
aas
sbb
dec
sbb
ja
add
jmp
sarb
and
pop
adc
sub
xlat
popf
fdivrs
popf
mov
nop
pop
add
or
push
cld
mov
pop
aaa
mov
cmpsl
aad
das
xchg
movsl
cli
pop
ret
ret
and
lds
inc
jns
mov
sub
shlb
sbb
xor
push
fmulp
stos
inc
repz
arpl
movsw
xchg
addr16
cli
mov
fwait
rcrb
mov
inc
mov
cmp
jg
sub
fcompl
cmp
push
xor
mov
inc
xchg
mov
shlb
fldt
mov
test
adc
jp
lret
mov
cmp
pop
sub
mov
insb
and
xorl
nop
mov
adc
mov
mov
xor
mov
xorb
movsb
sbb
mov
and
fistpl
ficoms
jns
out
repnz
sub
jge
cvtpi2ps
stos
aas
mov
cld
in
push
fldenv
cmp
sti
xchg
xchg
ja
out
or
or
xor
add
sahf
testl
pop
lods
and
loope
cmp
sarl
mov
les
cmp
pop
int
sub
icebp
jge
xchg
mov
xor
xchg
sbb
insl
in
movsl
or
in
sahf
leave
xchg
cmp
ss
orb
inc
test
cltd
push
stos
ret
jae
sub
push
xchg
out
mov
jp
aas
repz
or
sbb
dec
data16
pushf
lea
xor
mov
mov
repnz
cmp
jg
push
iret
fstl
jecxz
das
inc
mov
out
jb
inc
push
adc
inc
sahf
adc
scas
lods
mov
pop
mov
sub
inc
bound
in
push
lock
es
mov
test
pop
test
ja
mov
cld
imul
in
vpsubusw
rcrb
sub
stos
cmp
mov
addr16
fildll
test
testb
sbbb
jns
ljmp
mov
movsb
mov
mov
adc
repnz
test
lock
mov
testb
cld
sub
stos
cli
mov
ss
in
jbe
es
mov
mov
cmp
mov
ret
jo
bndldx
push
cmp
mov
jg
jle
mov
jnp
dec
sub
insl
xchg
out
push
mov
adc
mov
jl
les
xchg
and
ja
scas
pushf
mov
mov
pop
inc
add
mov
call
wbinvd
xlat
movsl
daa
cmc
jmp
lcall
mov
inc
scas
cmp
or
lea
xor
xchg
and
out
pop
jg
shlb
xchg
pop
hlt
test
mov
in
jbe
cmp
xor
icebp
into
cmp
stos
pop
sti
pop
sub
fs
or
dec
add
xchg
sahf
mov
cld
push
mov
out
add
mov
sbb
mov
loop
sub
mov
pop
fisubrl
add
cltd
push
sub
jmp
dec
movsb
pop
notl
lods
mov
pop
mov
mov
js
sub
sti
imul
ljmp
daa
dec
icebp
pop
dec
adc
lcall
xchg
mov
ja
cmp
push
scas
or
mov
stos
jne
les
xchg
and
add
ret
pop
pop
call
add
sbb
push
adc
mov
mov
mov
call
mov
jo
fldl
movb
xchg
push
sbb
stos
mov
std
cmp
xor
add
jne
pop
in
lods
daa
jp
push
pushl
test
xor
fwait
jns
add
lret
je
sti
ljmp
dec
mov
aad
pop
add
hlt
inc
inc
loop
pop
ja
test
dec
push
lods
inc
push
or
sub
call
dec
and
mov
and
addr16
test
sti
mov
or
mov
jp
hlt
pop
loop
sbb
jmp
in
outsl
btcl
jns
or
mov
repz
inc
push
ret
movsb
sti
cmp
sub
out
ljmp
inc
add
xchg
daa
jb
loope
lcall
rorl
fcompl
arpl
or
test
sub
mov
les
js
daa
mov
std
push
sahf
jle
push
adc
shll
adc
inc
sub
repz
cmp
sbb
dec
divl
dec
xor
ljmp
in
inc
iret
lock
lea
sbb
rorl
repnz
mov
icebp
in
cltd
lahf
pop
mov
cmpsl
jnp
xchg
sub
xchg
cmc
mov
dec
insl
or
xor
icebp
or
lcall
mov
push
xor
jo
dec
icebp
ljmp
jmp
outsb
inc
dec
stos
jl
jge
mov
dec
in
mov
xchg
je
dec
xchg
add
inc
mov
into
int3
fwait
sbb
es
push
jnp
dec
mov
in
xor
sbbl
pop
jo
mov
push
push
das
ret
out
ja
push
jo
out
mov
push
in
push
cs
xchg
insl
int
lods
jae
dec
out
jne
mov
cwtl
inc
and
mov
andb
enter
out
pop
pop
xchg
push
popf
adc
jns
ss
dec
jmp
and
xchg
mov
lea
ljmp
mov
adc
mov
pop
shll
iret
hlt
cltd
jne
mov
inc
xor
add
test
jnp
pop
addl
adc
jb
cmp
aas
mov
xor
data16
push
push
dec
xchg
mov
ja
fistl
mov
xlat
loop
xchg
stos
mov
jnp
cwtl
lret
in
mov
fidivs
adc
call
lock
xor
and
push
clc
popf
jbe
cmp
inc
xor
mov
mov
mov
mov
xchg
sbb
jne
pop
arpl
push
addb
and
pop
loop
and
aas
nop
push
fistpll
jle
leave
loopne
or
xchg
test
and
out
mov
out
mov
xor
mov
adc
imul
fldt
jmp
inc
mov
test
mov
mov
lret
scas
add
sub
cmp
stc
mov
sbb
mov
enter
and
out
ret
popa
lods
clc
sub
mov
push
and
es
mov
mov
popa
lods
aad
icebp
fistpll
inc
mov
sub
sbb
or
stc
movb
mov
and
xor
in
jmp
mov
test
out
inc
push
rol
rclb
pop
aas
lret
add
mov
cmc
outsb
and
inc
xchg
jecxz
stc
jp
cmpsb
pop
cld
negb
jne
xorl
ror
cmp
scas
fstp
jg
mov
xchg
xchg
pop
jg
inc
xchg
xchg
push
lahf
or
jb
pushf
mov
mov
popf
test
ret
jle,pn
cltd
cmpsb
cmp
arpl
aaa
shr
ja
imul
test
testb
cli
rclb
adc
pop
and
jp
in
loop
cmp
ud0
ss
dec
mov
dec
outsl
cmpsl
xchg
cld
shrl
push
jl
aaa
outsb
add
out
mov
roll
jae
nop
add
enter
lret
in
adc
cmpsb
jb
mov
mov
mov
or
ret
xor
jmp
adc
jno
cs
aaa
push
adc
fwait
sub
sbb
or
aaa
jae
push
push
popf
and
rorl
xchg
add
or
inc
inc
xor
sbb
or
inc
lahf
lret
test
loope
mov
or
lods
mov
xlat
mov
mov
pop
test
mov
jg
jne
or
push
cmp
xor
fisubs
test
clc
fwait
and
fwait
rcrb
cs
scas
into
out
jno
xor
push
iret
mov
jge
sbb
jl
add
fstl
in
mov
mov
mov
outsb
mov
aaa
jmp
jp
cmp
sub
mov
fs
arpl
or
addr16
daa
or
adc
inc
pushf
cmp
arpl
xlat
shlb
mov
pop
pop
sti
lret
push
inc
hlt
push
movsb
imul
ficoms
pop
cld
out
sbb
loopne
data16
ljmp
mov
push
negb
push
bound
sbb
insl
jae
mov
pop
jnp
and
or
cli
sbb
test
fiaddl
ficompl
daa
jp
jb
aad
pop
shrb
cld
into
icebp
scas
sub
pop
jae
in
xchg
lret
mov
sbb
and
xchg
mov
nop
out
loope
fstl
or
je
push
push
mov
cmp
mov
cmp
loop
mov
dec
adc
mov
xchg
sbb
and
xor
pop
call
scas
pop
lea
xor
jecxz
repz
and
inc
addb
popf
mov
dec
mov
mov
mov
ss
fwait
daa
xor
scas
sub
test
jp
cli
lcall
inc
dec
cmpsl
lret
loop
jle
into
push
fstpl
dec
mov
scas
fs
sti
sub
int3
push
or
imul
mov
jne
in
mov
dec
data16
jmp
dec
cmc
roll
jns
lahf
ret
push
cmp
mov
fadds
push
push
pop
mov
enter
stos
lret
addr16
imul
inc
out
push
js
inc
ret
xlat
lea
add
popf
jns
inc
jecxz
pop
orb
cmp
jg
push
mov
mov
jns
and
inc
jmp
subl
dec
cmp
shrb
add
pop
push
mov
xor
xor
sub
stc
mov
lcall
sub
or
xchg
push
mov
insl
aam
arpl
aas
sub
sbb
mov
mov
iret
out
movsl
inc
push
sbb
cltd
mov
pop
jno
sub
hlt
pop
xor
add
sub
lcall
lods
test
aaa
jmp
das
push
add
pop
jp
push
mov
mov
popf
xor
add
in
push
sbb
jno
adc
xor
ret
movsb
pop
idivl
sub
aas
iret
push
pop
ds
lcall
xor
ss
adc
xchg
xchg
and
out
jne
cmp
cld
mov
xlat
mov
or
xor
sub
adc
mov
add
outsb
cmpsl
lock
or
push
xchg
cmp
popl
popf
es
pop
lret
inc
lret
shld
xor
cmp
aad
outsb
pop
sub
lods
mov
outsb
mov
xchg
repnz
mov
xor
sbb
shl
mov
pop
rorb
or
bound
mov
dec
aad
cwtl
adc
in
inc
mov
or
dec
push
cmpb
sbb
dec
or
mov
fwait
mov
std
outsb
fcmovnbe
dec
xor
enter
movsb
add
cmpsb
ret
rcl
sub
stc
popf
push
inc
mov
fcompl
aad
and
add
inc
xor
loop
jno
sub
adc
add
inc
out
ret
cld
shll
inc
fisttps
push
sbb
mov
xchg
scas
or
sub
dec
out
insl
mov
sahf
or
inc
xchg
sub
jmp
call
subb
loope
scas
and
testb
xchg
dec
sbbl
movups
lcall
xchg
sub
mov
hlt
imul
and
cwtl
mov
gs
pop
adc
xchg
fisubs
xchg
stos
repnz
cmp
or
nop
sti
fcmovb
imul
and
movsl
adc
ret
pop
scas
outsb
clc
mov
mov
je
pop
mov
leave
or
sub
and
clc
dec
mov
cwtl
jnp
xlat
inc
push
bound
orl
shr
inc
cmc
jae
cmp
xchg
xchg
sub
lock
inc
and
dec
pop
add
aaa
push
out
movsl
pop
or
sub
rcrl
inc
pop
mov
es
cs
mov
cwtl
sbb
std
mov
pusha
mov
xchg
insl
arpl
jp
mov
pop
and
or
xchg
adc
mov
xchg
jae
pop
jno
es
mov
test
xchg
mov
loopne
mov
jbe
jae
pop
into
xchg
and
ljmp
inc
adcl
add
sbb
fdivl
out
daa
push
popa
xchg
pop
mov
repnz
sbbb
push
out
push
dec
fwait
test
jg
inc
aad
adc
cltd
dec
into
hlt
sub
mov
mov
mov
in
mov
cmp
cmpsl
shrl
in
jle
pop
sbb
pop
addl
mov
or
pop
xchg
pop
inc
div
movb
inc
push
out
sub
sub
jge
inc
shlb
mov
cmpsl
cmp
ss
add
pusha
fwait
push
test
jno
es
mov
stc
sbb
inc
dec
fisubrs
xchg
das
jecxz
mov
dec
aaa
fsubs
sbb
aam
jns
cmp
and
aas
lcall
mov
js
or
push
and
arpl
rorl
dec
inc
mov
rcrl
mov
push
lahf
pop
adc
andl
pop
outsl
stc
das
sbb
stos
push
fimull
jo
xor
jge
adc
loop
test
lods
imul
jo
mov
jnp
add
cmp
adc
fistpll
push
adc
dec
and
sub
cmp
hlt
shlb
aaa
ljmp
mov
outsl
adc
inc
or
shll
push
jb
fsubl
mov
lods
js
mov
dec
ds
jnp
lret
add
xchg
insl
sbb
fld
mov
jo
mov
les
loop
mov
pop
roll
pop
mov
insb
cmp
ss
xchg
repnz
lret
mov
push
sub
cmp
push
stos
ljmp
arpl
leave
jo
xchg
xlat
shrl
dec
pop
lea
push
and
add
lcall
fcmovu
and
pop
stc
and
add
in
pop
pop
xor
imul
rorl
jle
adc
mov
je
jnp
push
lea
insl
scas
lret
ds
jo
lcall
or
sbb
stc
imul
mov
add
test
jbe
arpl
cmp
insb
adc
inc
les
mov
jo
fldenv
loopne
xlat
and
mov
cmp
enter
adc
rcll
or
mov
inc
and
das
dec
das
jl
push
sub
shlb
aad
cmp
pop
fs
aas
jno
in
and
jno
in
enter
in
cmpsl
scas
add
repz
cmc
gs
rcl
or
inc
ret
les
pop
das
lods
xlat
aad
subb
xlat
jae
arpl
mov
pusha
stos
inc
pop
jb
subl
inc
xchg
lock
xor
lea
ds
in
xchg
insl
lods
rcr
dec
mov
or
sarb
mov
aas
mov
repz
sub
sub
imul
mov
lods
push
sbb
mov
and
scas
or
lahf
xor
mov
inc
loop
mov
or
push
sahf
loop
push
dec
sub
jecxz
mov
imul
add
sbb
cltd
iret
mov
inc
dec
fiaddl
xor
lret
lret
push
adc
sub
push
and
outsb
fisttps
xchg
orb
cwtl
cmp
addl
sub
loopne
and
pop
in
call
sub
and
aaa
shll
testb
inc
js
jecxz
sbb
addl
insl
push
or
mov
dec
aad
stos
mov
iret
cmpsb
arpl
loop
mov
not
xor
frstor
sti
in
push
lods
lret
fwait
fwait
rclb
mov
xchg
aaa
into
aam
icebp
mov
clc
add
jo
daa
pop
push
sub
mov
cltd
shl
sahf
les
lret
xor
cwtl
lods
notb
hlt
popf
xor
roll
sbb
addr16
insl
xchg
and
mov
imul
shl
andb
or
daa
xchg
dec
jnp
repz
push
push
inc
cmp
dec
movsl
jb
add
ret
fisttpll
mov
sbb
gs
in
outsl
int3
into
mov
add
sbb
and
fdivs
or
ror
ficoml
sbb
push
mov
mov
stos
outsl
test
jnp
and
repz
mov
inc
aas
dec
xchg
je
pop
mov
sbb
mov
dec
addl
mov
inc
lods
stc
mov
mov
sbb
and
jecxz
jmp
pop
xchg
mov
pop
repz
jl
popa
mov
lods
ret
push
adc
add
sub
into
sbb
shrb
mov
incl
adc
and
pop
add
push
push
add
lods
popl
out
loopne
out
and
dec
iret
pushf
pop
mov
iret
in
loop
xchg
cmp
std
popf
cmp
or
xchg
hlt
repnz
dec
iret
hlt
mov
stc
test
mov
cmp
pop
cmpsb
notb
scas
add
stos
test
arpl
mov
sbb
adc
mov
lds
lods
jno
mov
cmc
cmp
pop
out
dec
fs
in
lahf
push
mov
mov
mov
outsb
cltd
orl
add
fildll
fsub
enter
cmp
pop
xor
icebp
in
cmp
ja
imul
lea
push
fildl
iret
aas
pop
shll
hlt
mov
push
cmpsb
jle
pop
out
add
test
imul
je
sbb
gs
xor
and
sub
stc
in
push
mov
adcl
push
adc
sar
dec
and
arpl
mov
jp
xbegin
push
inc
pop
insl
mov
xchg
pop
cld
gs
test
push
xchg
mov
xor
jo
pusha
adc
data16
aas
jnp
jae
xchg
jl
arpl
popf
mov
vmwrite
scas
mov
inc
inc
inc
jmp
or
imul
push
hlt
mov
dec
xor
push
mov
mov
or
cltd
jbe
lds
scas
outsl
push
pop
pop
dec
repz
lds
jns
and
dec
add
mov
cmp
mov
rorl
cli
insb
outsb
in
and
lock
or
icebp
jns
repnz
js
lds
jecxz
movsl
push
outsb
and
xor
mov
inc
or
dec
adc
inc
jae
testb
jnp
mov
xchg
add
add
loopne
fdivl
test
pop
rcrl
ret
cmp
shl
push
dec
and
fs
xor
mull
out
jne
push
fmuls
jno
cmpsb
lret
in
xor
mov
out
push
xor
loopne
test
adc
mov
jle
std
and
and
je
fnstsw
roll
lods
mov
pop
nop
insl
mov
or
call
cltd
jae
in
xchg
push
push
jne
xor
scas
and
outsb
aas
lahf
push
mov
ss
fldenv
mov
adc
out
popf
xor
imul
out
lods
repnz
ja
xor
sub
dec
lcall
pop
hlt
adc
hlt
imull
clc
add
push
mov
adc
mov
int3
cmp
shlb
dec
pop
pop
lcall
add
fwait
push
sub
lock
stos
cmp
imul
jbe
dec
sbb
pop
cmp
sbb
aaa
icebp
and
push
pop
jge
mov
stc
sahf
ss
adc
lock
insb
shrb
push
ret
cmpsb
adc
dec
jle
test
jnp
das
icebp
shll
jge
int
mov
cmpsb
mov
lcall
jle
lea
add
lahf
aaa
icebp
xlat
mov
adc
int
test
jo,pt
leave
js
js
movsb
fs
jnp
pop
sti
pop
inc
mov
aam
pop
out
mov
pop
mov
stc
ret
icebp
or
add
pop
cmp
sti
int3
dec
xchg
scas
rolb
push
push
mov
int3
sub
loop
sub
sub
sub
mov
call
xchg
or
popf
mov
fmull
dec
lods
testl
data16
add
mov
shlb
mov
std
pop
cmp
inc
test
fiadds
mov
lea
pop
clc
sbb
fwait
mov
leave
sbb
xor
pop
lret
sub
sti
out
push
cmpl
das
xor
aad
sub
or
push
loopne
test
xchg
xchg
xchg
sbb
lcall
push
add
xchg
xor
decb
and
mov
ljmp
xor
sbbb
or
rolb
test
aaa
lahf
xor
jne
push
addb
dec
push
or
jle
jg
jp
jo
repnz
push
or
pop
xor
lret
mov
xlat
rolb
in
add
cmp
dec
fs
andb
movsl
jle
or
and
sbb
xor
cs
insl
stos
scas
leave
arpl
ljmp
adc
sub
scas
loopne
ja
lods
inc
imul
mov
out
push
sbb
data16
mov
jns
clc
cmp
pop
sub
push
lods
jns
jb
mov
cmp
cmp
cltd
sub
xchg
mov
lahf
pop
cmp
pop
jp
or
loope
arpl
or
mov
lcall
adc
mov
jb
hlt
push
cmc
pop
xor
mov
call
mov
daa
in
shrl
inc
dec
dec
sbb
out
sub
js
pop
dec
add
mov
shlb
pop
cltd
mov
add
jge
pop
lods
pop
mov
shrb
mov
imulb
fucomip
push
xor
mov
jp
rcr
mov
mov
scas
into
sub
mov
push
mov
arpl
cwtl
inc
cmp
jle
jge
adc
aaa
push
iret
push
push
lods
push
out
leave
push
mov
adc
push
sarb
push
pusha
sub
js
xor
jno
pusha
lcall
mov
inc
dec
loopne
mov
push
andb
insb
jg
lret
push
dec
sahf
cs
xor
xor
es
pop
and
stos
dec
and
inc
fcoml
mov
inc
add
scas
cld
sbb
rcll
data16
add
cmp
dec
scas
lods
mov
mov
out
outsl
clc
outsb
addr16
in
push
jno
es
xchg
fwait
sub
or
mov
pop
dec
add
dec
addr16
rclb
cli
aad
sbb
sub
test
and
inc
cmpsl
sbb
sbb
bound
adc
js
movsl
stos
popf
lock
jge
cmp
testb
vphadduwq
movsb
test
mov
in
jns
out
push
jmp
inc
rclb
push
xor
lret
lcall
js
xchg
mov
adc
out
sbb
dec
pop
mov
inc
jp
inc
movsl
aad
lds
int
shrl
inc
jmp
xchg
adc
in
nop
stc
aas
mov
push
ret
lods
adc
sar
and
mov
loope
or
xor
jns
cli
in
push
jecxz
movsb
cmpsl
loop
cmp
insl
mov
inc
push
cs
subl
cli
mov
inc
adc
imul
inc
addb
sub
pushf
or
dec
lcall
xchg
push
add
adc
inc
jb
shlb
jge
fisubrl
push
cwtl
mov
dec
adc
jno
jle
jge
xchg
cmp
push
and
jne
pushf
inc
subl
mov
push
add
cmp
fbld
loopne
push
adc
data16
push
xchg
fcoms
fld
lods
adc
call
pushf
add
outsb
test
xacquire
add
mov
fadds
movsb
loop
mov
xchg
inc
push
sub
rcr
mov
xor
fisttpl
int3
sar
sbb
sbb
popf
fisubrl
arpl
test
or
pop
icebp
cmpsl
xor
sbb
pop
and
fs
outsb
sbbb
or
push
xchg
scas
stc
arpl
push
add
hlt
arpl
mov
cld
lret
xchg
inc
mov
sti
mov
cmc
pop
pop
out
lock
inc
xor
fidivs
jno
mov
lods
pop
testb
fs
mov
shll
push
sbb
xorb
loopne
adc
or
mov
add
mov
pushf
adc
or
jge
xor
jae
push
test
fnstcw
sub
xchg
sti
cs
push
loope
pop
decb
fsts
and
push
arpl
xlat
push
xor
inc
fwait
push
movsb
pop
mov
add
mov
sub
mov
add
aas
dec
push
popa
xor
inc
or
adc
sub
sub
jle
test
sub
repnz
cmp
ljmp
ret
mov
sbb
mov
adc
mov
fs
push
jne
iret
mov
decl
je
loopne
loopne
lods
hlt
cld
inc
stc
ja
jecxz
inc
iret
aam
inc
dec
jp
stos
xchg
xorb
sbb
addr16
add
sti
and
mov
mov
testl
cltd
jge
rcrb
jbe
movsl
js
addl
sbb
cmpsl
iret
lods
sbb
add
lret
sbbb
mov
mov
ret
adc
jbe
inc
xorl
outsb
ljmp
jne
fisttpll
xor
std
or
jg
in
inc
xor
in
test
in
int
imul
dec
fists
out
jb
in
mov
dec
push
adc
push
xchg
cs
aam
sub
mov
jnp
shlb
dec
test
mov
orb
sbb
push
add
test
pop
add
push
xchg
out
lods
sub
cmpsb
addr16
loope
lahf
dec
add
pop
inc
pop
mov
ds
lock
push
mov
mov
mov
stos
mov
fs
call
ss
xorl
xchg
mov
sub
push
lcall
push
mov
insb
xchg
and
int3
fs
pop
push
mov
push
mov
cmp
ljmp
add
dec
xchg
loop
push
adc
pop
cmp
cld
stc
or
adc
outsl
push
test
fsubs
shl
loope
mov
dec
shlb
cmp
shlb
xchg
cmpb
mulb
add
pop
dec
xor
push
and
lea
adc
adc
pop
mov
insb
fucomip
push
pop
dec
addb
ds
ja
or
sbb
jbe
jmp
mov
inc
mov
mov
xlat
cmc
dec
repnz
mov
cmp
cmp
fcmovu
jecxz
aas
jns
push
pop
add
dec
mov
in
jmp
sbb
aad
adc
cltd
inc
idivb
xor
jno
add
add
fcompl
stos
and
mov
shl
scas
fwait
push
xor
mov
and
pop
fsub
xchg
push
ret
mov
mov
and
cmp
lds
repnz
mov
mov
lret
test
jbe
test
sbb
mov
jbe
or
mov
pop
mov
mov
sub
mov
push
scas
out
inc
out
dec
sbb
jo
shlb
mov
mov
popa
bound
sahf
mov
scas
mov
inc
and
xchg
inc
add
cmp
imul
jno
push
xor
lcall
push
mov
clc
and
fmul
mov
sub
pop
jg
xchg
xorb
outsl
or
int3
nop
out
in
jae
enter
inc
in
std
dec
in
leave
adcb
jl
xor
dec
xor
xor
fwait
jecxz,pt
sbb
pop
push
add
mov
nop
mov
adcb
inc
fnstenv
jno
test
bnd
add
sub
shll
and
sub
stos
xchg
outsb
lret
jle
xor
repnz
xchg
leave
pop
and
or
shlb
pop
add
scas
sub
adcl
data16
into
sub
push
lret
shl
dec
lock
decb
adcb
out
xchg
je
shl
mov
sub
imul
jle
hlt
mov
jmp
hlt
enter
jg
das
das
pop
mov
jge
xchg
mov
or
outsb
insl
in
cmc
sbb
add
pop
xchg
or
xchg
testb
dec
aam
incl
cltd
and
enter
pop
cld
cli
popa
pop
stc
adc
dec
cwtl
out
imul
in
xlat
xchg
jp
mov
cmp
add
or
rcrb
aaa
push
cmpsl
jmp
mov
aad
sbb
iret
lret
cmc
jbe
aaa
sbb
xlat
add
sahf
sbb
enter
adcl
std
add
jmp
cmp
mov
test
xchg
pop
test
sbb
addr16
movl
jp
jbe
and
mov
test
push
xor
xchg
hlt
jmp
popf
test
inc
dec
push
or
fstps
inc
sbb
int3
scas
xor
inc
test
xor
sarb
push
shrb
and
pop
dec
inc
pop
add
in
lahf
gs
and
cmc
cmpsl
sbb
ds
in
popf
lcall
movsl
sub
jnp
mov
push
adc
inc
sub
int
negl
adc
iret
scas
dec
cmp
stc
in
test
and
jle
add
xor
cmp
inc
mov
cmpsl
adc
jg
inc
aad
out
fsubrl
and
call
sbb
sti
std
dec
and
push
fcoml
aas
mov
dec
popa
fwait
ret
outsl
shrb
lahf
test
sub
pop
and
cmp
fs
das
sbb
jae
arpl
into
leave
popa
rcrb
or
dec
jns
into
jnp
jb
push
mov
daa
and
jo
push
or
jg
test
xor
addl
sub
inc
dec
sbb
js
and
cmp
mov
or
arpl
xlat
pop
adc
int
adc
sub
push
xchg
dec
cltd
into
insb
subl
xor
xchg
mov
stos
ja
dec
add
sub
aam
push
push
inc
push
pop
mov
outsb
in
mov
andl
inc
xchg
inc
lret
les
rol
jno
lret
jno
jno
xchg
in
inc
mov
test
mov
mov
orl
stos
call
lret
ljmp
xchg
or
imul
sbb
or
lcall
mov
and
out
mov
push
out
and
idivl
les
push
xor
insl
clc
sub
sarl
adc
pop
lcall
mov
sub
popf
mov
leave
gs
xchg
push
test
adc
lahf
popf
and
jne
adc
push
test
sbb
cmp
stos
adc
mov
es
jnp
mov
pop
call
mov
sub
cmpsl
add
fidivl
insl
push
test
pop
inc
xor
addb
push
lods
mov
mov
mov
sub
les
loopne
dec
cmpsb
ret
lcall
jl
cld
daa
frstor
mov
js
pop
push
mov
or
sahf
xchg
sbb
std
outsl
add
pusha
dec
inc
push
jg
push
mov
xchg
adcl
and
int
loope
in
dec
test
mov
adc
mov
push
ljmpw
push
fsub
data16
push
je
xor
pusha
outsl
popf
iret
aaa
in
add
adcl
or
lea
and
test
decl
pextrw
insl
push
push
fidivs
sti
test
mov
cli
dec
imul
adc
adc
jmp
inc
add
je
pop
push
movb
pusha
out
cli
jle
xor
ja
inc
sbb
xor
imul
je
or
daa
rorb
sub
or
je
cs
push
pop
das
sub
inc
inc
push
loopne
mov
in
or
ja
cli
xor
rorb
mov
or
popa
xor
imulb
push
dec
js
out
cmp
imul
inc
movsb
mov
addl
inc
mov
xchg
jecxz
sub
fldl
inc
xor
dec
jmp
sub
jns
sbb
adc
xchg
fisttps
pop
push
gs
out
aas
push
in
dec
nop
rcll
daa
jl
or
push
mov
pop
add
pop
jg
xchg
mov
mov
xor
or
loope
xchg
inc
mov
jnp
loop
push
xchg
cmp
stos
lods
xchg
push
daa
in
repnz
mov
pop
sub
cwtl
fstl
cs
ja
jo
push
shrb
fldt
aam
out
stos
insl
mov
pop
and
push
aam
enter
stos
mov
xchg
push
or
cli
mov
addl
hlt
mov
adc
in
mov
jle
mov
or
scas
addr16
sbb
and
push
push
xor
xchg
data16
push
stos
add
stos
and
movsb
lret
pop
fildll
mov
rorl
or
movsl
dec
jo
pushf
push
scas
int3
aam
pop
cmpsl
lods
cmc
mov
lret
icebp
test
ds
sub
mov
jb
cmpsl
xchg
mov
repz
cs
cwtl
xchg
movsb
mov
push
aas
mov
cmp
cwtl
das
mov
push
or
cmp
xchg
adc
movsb
leave
incl
and
outsb
pop
xor
xchg
adc
mov
pop
cmp
cmp
mov
cld
lea
popf
clc
jl
push
mov
add
mov
xchg
fwait
sarl
and
and
stos
push
mul
ret
mov
sub
repz
jnp
and
cld
out
mov
fstpl
adc
mov
sub
adc
add
gs
adc
pop
inc
dec
adc
movsl
enter
dec
jl
mov
jno
rclb
push
hlt
fistpl
xor
daa
movsl
jge
mov
jbe
inc
sub
push
test
repnz
dec
fildll
and
daa
insl
ficoml
inc
mov
add
add
loop
pop
mov
jecxz
scas
in
subl
cs
lods
outsl
adc
or
dec
test
or
and
pop
stos
call
push
mov
inc
xor
cltd
add
dec
movsb
int
cmp
push
decb
sub
fmul
mov
pop
ret
fisttpll
mov
pusha
mov
fs
sbb
rclb
outsl
push
mov
jle
push
loopne
xchg
cli
insb
pop
and
xchg
lock
xchg
sub
lods
mov
insb
mov
fdivrl
mov
lods
dec
shlb
sti
ds
loope
jbe
cmp
cmp
and
and
adc
lcall
das
stos
cltd
jecxz
into
test
jae
imull
movsb
js
xchg
or
pop
dec
add
cmp
ss
loope
inc
lods
mov
jp
push
mov
les
sarb
push
mov
xor
sbb
jno
rcrl
fwait
push
fdiv
rorb
mov
test
cs
loopne
je
idivb
push
gs
rclb
xchg
cmp
lret
sbb
jl
jge
stos
lock
xor
mov
iret
inc
xchg
xor
out
xchg
push
jp
aam
jge
sahf
add
add
sbb
repz
popf
mov
xor
aas
add
arpl
sarl
adc
or
lods
cmp
xchg
push
incl
push
dec
int3
mov
shr
incb
rcrb
movsl
push
iret
mov
xchg
xor
lcall
sbb
addr16
lods
mov
lock
mov
sbb
or
sub
cmp
jecxz
icebp
xchg
push
pop
imul
jns,pn
dec
in
xor
or
xor
wbinvd
je
pop
jnp
iret
mov
rorl
leave
sbb
outsb
jnp
mov
aad
pop
or
push
mov
add
cmp
lods
mov
dec
mov
out
push
clc
imul
add
rcll
outsl
sub
inc
shlb
cmp
insl
pushf
sbb
ja
lahf
cmp
cmp
pop
sbb
lret
adc
dec
mov
stc
xor
ljmp
inc
pop
or
jo
out
dec
loop
push
push
pop
pop
pop
insl
popf
sbb
or
cmp
jnp
int
dec
test
mov
fwait
or
shrb
rclb
sub
loopne
or
inc
adc
add
imul
mov
mov
scas
insl
call
rcr
test
ret
dec
lods
or
fs
cs
mov
pop
jne
loop
pop
jae
cltd
adc
push
xor
ret
sar
dec
xchg
scas
sbb
or
fidivrs
mov
filds
adc
addr16
ja
dec
fwait
or
test
mov
xchg
outsb
int
cli
inc
lret
adc
inc
decb
ss
test
inc
sti
pop
stos
adcl
incb
mov
and
and
test
scas
iret
inc
fwait
bound
mov
mov
mov
std
pop
push
dec
repnz
mov
and
fisubrs
xor
cwtl
stos
mov
xlat
and
in
push
in
cwtl
cmp
mov
mov
dec
fidivrl
push
test
mov
cs
test
pop
mov
jns
cltd
or
jbe
mov
xchg
lret
sub
je
xor
sbb
je
stos
ds
jmp
xlat
xor
mov
inc
xchg
dec
sub
ret
inc
mov
mov
test
push
es
ret
test
lcall
mov
push
shrl
mov
cmp
pop
sub
cld
fidivrs
lock
stos
push
inc
call
cmp
test
popf
push
dec
loop
loope
adc
pop
dec
mov
jecxz
pop
jge
xor
loop
dec
lds
sti
push
cmpsb
shl
inc
push
pop
sbb
int
sub
sub
icebp
enter
test
mov
xorb
sub
jl
rcrl
sbb
xchg
into
xchg
in
sub
jnp
xchg
push
cmp
pop
shlb
jo
mov
push
sahf
mov
mov
pop
sub
ret
aad
rcrl
dec
push
and
loopne
push
cmp
jo
or
jo
sahf
dec
lahf
push
out
and
mov
shlb
repz
mov
into
sbb
jle
cmp
repz
mov
cltd
mov
dec
jae
push
call
lea
pop
iret
inc
cwtl
and
insb
or
daa
cltd
not
sarl
dec
add
gs
icebp
jae
add
insb
gs
data16
pop
pusha
sub
jae
std
ljmp
fstl
and
dec
mov
or
add
outsb
sub
xchg
and
jae
insb
mov
ja
movsb
jmp
das
and
shr
cwtl
mov
andl
fdivrs
and
rorl
jp
dec
leave
imul
popa
test
test
pusha
ljmp
mov
push
into
mov
push
aas
aad
jmp
cmp
fadds
cltd
stos
aaa
js
mov
sub
scas
xchg
mov
shrl
push
popa
pop
pop
std
shll
repz
cmp
aad
in
jl
test
xor
mov
sub
pop
xchg
fs
jl
and
es
sahf
scas
sbb
sub
das
mov
imul
mov
cmp
test
mov
out
cwtl
jno
movsb
and
jl
pop
dec
aad
mov
adc
xchg
test
push
js
nop
push
sbb
cmp
inc
jl
aad
mov
imul
or
js
scas
int3
gs
or
xor
jmp
push
adc
mov
inc
in
int
lds
and
mov
cwtl
mov
mov
mov
mov
xchg
add
sti
dec
pop
pushf
pushf
addb
xor
sub
cld
out
fdivrs
lret
add
push
pop
nop
invd
outsl
fbstp
cmp
push
inc
xor
sarl
lea
ficoml
loopne
addr16
cli
les
nop
pop
insb
rclb
or
fs
arpl
fyl2xp1
mov
pop
or
repz
sub
mov
sbb
sbb
or
dec
pop
pop
mov
lds
or
aas
mov
bound
sbb
inc
fwait
imul
inc
jno
ficompl
enter
dec
xlat
leave
lret
jecxz
and
in
xor
mov
jns
in
push
sub
sahf
mov
push
repz
loop
push
aaa
xchg
ja
das
gs
pushf
mov
aas
in
and
das
movb
mov
or
cmpb
mov
and
pop
dec
dec
sbb
fdivrs
dec
mov
je
popa
ljmp
xchg
pop
mov
rcr
hlt
test
xchg
push
and
inc
andl
push
inc
andb
sub
and
inc
or
js
insb
mov
jne
fadds
xchg
out
aam
xor
dec
mov
xchg
out
sbb
sarl
jb
cli
lahf
adc
jmp
out
or
mov
push
push
xchg
xor
inc
repnz
or
jecxz
sub
mov
repz
lret
fldenv
gs
pop
xor
sbb
insl
adc
cmp
lods
out
cltd
out
lret
faddp
clc
and
pop
movsl
sbb
jge
leave
popa
mov
pushf
subb
and
jmp
fstpl
out
mov
sbb
ss
movsb
sti
imul
mov
fwait
mov
imul
xchg
sar
mov
mov
mov
fs
outsb
insb
xlat
jo
pop
sub
inc
add
rcrl
jle
into
xchg
cltd
lods
cmp
out
pushf
lret
aas
and
mov
xor
xchg
into
mov
iret
shl
sbb
mov
out
jmp
dec
push
cmp
stos
fisubrs
mov
pop
cwtl
push
xor
push
rclb
cmp
cli
jl
lret
lods
sbb
fidivrl
fwait
ret
pop
rcll
cmp
outsb
push
push
mov
xchg
fisubl
mov
rolb
fidivs
test
cs
ljmp
mov
sub
scas
stos
cmc
mov
aad
cmp
mov
mov
aas
loopne
cmp
jb
mov
push
push
mov
iret
fnstsw
lret
jl
jo
or
insl
or
jg
mov
les
lods
and
lret
int
bnd
push
push
sub
add
push
fldenv
inc
ret
xchg
gs
int3
iret
sbb
lret
les
jle
js
sbb
js
aaa
sbb
push
mov
sub
sbb
das
into
push
aam
xchg
jae
mov
jns
adc
scas
jae
xchg
lahf
jmp
fcmove
jmp
js
or
xor
or
pop
scas
es
ficoml
lret
jnp
mov
jb
add
ds
push
dec
cli
ljmp
repnz
std
ljmp
call
dec
pushf
int
sbb
ds
pushf
mov
mov
fdivrp
aas
jmp
pop
push
jl
idivb
adc
lock
jmp
or
fyl2x
adc
push
pop
aas
xchg
mov
xor
jl
add
cmpsb
pop
in
bound
loop
scas
in
pop
cmp
iret
mov
shlb
loopne
mov
jnp
pop
cld
xor
sub
enter
xchg
sub
jp
mov
pop
dec
sub
aas
mov
jl
inc
jno
and
jno
sti
pop
std
aas
jecxz
in
rcrb
jns
jge
int
mov
ds
in
mov
jmp
scas
test
jg
daa
je
mov
sbbl
loopne
add
mov
push
push
ror
pop
jne
xor
test
xor
es
lds
ret
mov
rcrb
cmp
into
scas
jl
jb
imul
stos
add
mov
sub
push
jo
or
jecxz
or
test
jmp
jle
stos
daa
jbe
stos
add
addl
add
sbb
cmpsl
mov
or
lods
add
mov
out
push
dec
jecxz
mov
xor
fidivrl
xor
push
sbb
xor
push
lahf
lods
aad
mov
cmp
pop
movsb
enter
inc
ds
add
mov
cmpsl
sub
mov
arpl
aam
jne,pt
inc
inc
pop
cmpsb
dec
xor
xor
fisubl
inc
mov
outsl
push
push
loopne
adc
lret
insb
loopne
jmp
sbb
dec
shll
pop
es
dec
jecxz
xchg
push
xor
add
daa
or
sbbl
fistl
out
call
in
stos
std
adc
lock
cmpsl
inc
or
test
lcall
fistpll
dec
movsl
in
out
sub
mov
xor
in
cwtl
in
das
out
bound
repnz
fwait
mov
or
cmp
push
mov
nop
outsb
into
xchg
ffree
sbb
push
push
je
mov
dec
movsl
rcrb
mov
aas
pop
mov
add
mov
jmp
jbe
mov
dec
and
xor
fwait
dec
dec
movsb
push
mov
rep
icebp
popa
out
movsb
xor
push
cmp
push
mov
xchg
adc
loopne
aam
pop
sbb
test
dec
sahf
popf
push
mov
out
mov
pushf
jbe
add
mov
and
cmp
xchg
and
mov
and
int
jnp
cmpsl
es
pop
dec
mov
pushf
or
cmp
lret
sbbb
push
in
jbe
mov
xor
adc
out
lods
xor
mov
shl
fnstsw
or
lods
push
ficomps
cld
sbb
mov
dec
mov
jl
ljmp
mov
mov
mov
shll
pop
xor
pop
or
nop
jecxz
shll
mov
mov
mov
cwtl
aaa
stos
add
push
sub
and
lods
mov
aam
popa
pop
mov
xor
iret
cltd
out
jb
pop
add
cmp
in
idivb
pop
into
add
xchg
ret
cltd
and
jno
cmc
push
aam
call
and
or
or
aam
popl
xchg
add
mov
dec
xorl
jle
mov
jo
push
hlt
jg
cs
xlat
mov
push
ficomps
or
and
loop
fisubs
mov
push
andl
stc
jle
gs
ret
mov
std
sbb
es
cmp
jle
insl
push
lret
xor
xlat
dec
and
sub
inc
add
fcoml
mov
jmp
inc
roll
fwait
and
adc
xor
shlb
iret
xchg
sbb
lods
xor
or
dec
into
fadds
xor
mov
enter
cltd
iret
push
addl
cmpsb
mov
js
std
js
pop
lock
ds
push
push
rorb
out
push
pop
push
cmp
xchg
push
push
xchg
andl
or
jge
andb
or
insb
arpl
cwtl
enter
cmp
insl
mov
das
jo
nop
and
and
jmp
cli
xor
cmp
cmp
es
or
lods
inc
inc
xor
fstpl
mov
add
sub
fdivrl
daa
mov
frstor
ret
push
mov
push
in
das
addr16
cmp
js
fwait
ds
push
and
mov
dec
ljmp
push
inc
into
and
les
jmp
mov
mov
mov
push
cli
call
das
cmc
rcl
jmp
mov
fdivrs
imull
pop
clc
jbe
or
lods
adc
data16
sarb
adc
push
addr16
xchg
clc
sub
pop
dec
pop
mov
inc
loope
lds
ret
push
inc
mov
dec
inc
add
fsubr
jae,pn
inc
mov
movb
cmp
sub
jns
push
jnp
adc
and
sahf
lahf
movsb
test
fs
sub
inc
push
xchg
sbb
addl
into
jge
cmpsl
xor
cmp
sahf
and
pop
ja
pushl
int
mov
pop
popa
fimuls
ud0
push
and
or
aam
idivb
push
das
lcall
jae
inc
and
push
and
outsb
imul
dec
mov
fsubs
out
ret
push
loopne
loope
es
xchg
movsb
and
pop
out
dec
dec
loopw
mov
pushf
ret
out
sub
dec
imull
aad
je
rcrl
xchg
pop
insl
sbb
cmp
sub
pop
inc
enter
push
ds
aaa
pop
test
cmp
out
iret
ret
mov
shrl
push
shll
movl
psubsb
out
jmp
scas
push
ror
insb
ss
cmp
dec
outsb
icebp
inc
dec
jle
dec
adc
lcall
xlat
inc
pop
clc
mov
les
pop
jnp
fcomi
imul
and
dec
lods
popf
imul
shll
sbb
lock
add
dec
jl
mov
negl
icebp
jns
sub
rcr
mov
repz
aad
push
data16
cltd
or
inc
dec
shll
mov
pop
xorl
or
sbb
xor
daa
mov
test
je
adc
add
int3
imul
mov
and
cli
shl
inc
jo
push
mov
xchg
jecxz
adc
data16
push
out
cld
bound
aaa
pop
push
movsl
popf
hlt
jae
xor
pop
pop
popa
mov
pop
xor
or
lods
mov
jecxz
cmp
outsl
and
fstpl
jmp
mov
loop
in
sbb
adc
mov
cld
cld
movsl
leave
jmp
fwait
pop
lods
orl
addr16
sub
daa
inc
cmp
lods
lock
lods
inc
push
aas
stos
aad
pop
mov
adc
jo
iret
dec
mov
aaa
lea
mov
push
xchg
mov
loop
mov
clc
jbe
adc
in
mov
movsb
rcrb
mov
iret
loop
add
lods
add
rol
mov
and
mov
enter
inc
jb
rep
scas
push
movsl
sbb
xchg
cs
mov
dec
push
cmp
das
comiss
push
stos
push
sub
mov
lds
mov
ret
mov
faddl
iret
xchg
xchg
leave
jno
jle
lods
test
outsl
mov
movsl
inc
scas
sub
hlt
jne,pt
or
pop
cmp
dec
aam
adc
out
lret
negb
xor
mov
jb
mov
mov
ret
cmpsl
jp
fistpll
jb
out
dec
and
push
cld
lods
mov
add
and
sbb
int
jg
jle
aam
outsl
jne
push
and
repz
cmp
shlb
rcl
mov
int3
rcr
sub
jecxz
mov
idivl
jnp
outsb
mov
inc
fdivs
in
mov
mov
jge
jge
scas
in
repz
xchg
cmpsb
dec
mov
xor
lcall
cmpsb
leave
and
inc
sbb
adc
dec
jg
sbb
scas
aas
mov
test
rcl
xchg
mov
rcll
sti
push
mov
mov
pop
cwtl
sub
orb
cmpsb
pop
lds
mov
mov
clc
inc
dec
pop
movntq
out
ret
xor
mov
pop
and
push
mov
xchg
hlt
sub
sbb
or
sub
mov
mov
sub
iret
cld
push
ss
das
or
stos
pusha
mov
mov
bound
loop
jb
cmp
jl
dec
test
mov
mov
cmc
adc
push
sub
jecxz
into
in
sub
mov
inc
push
sbb
sub
ss
aam
pushf
fwait
push
movsl
jl
sahf
aaa
dec
enter
xchg
ret
mov
repz
pop
sub
fs
inc
add
popa
push
fcomi
mov
inc
cltd
leave
jb
cmp
xchg
mov
mov
ret
notl
ror
popf
adc
or
push
push
aaa
sub
xchg
cwtl
mov
xlat
xchg
iret
frstor
sub
jnp
mov
leave
mov
out
mul
rclb
xor
sti
push
lcall
andb
insl
sub
xchg
cld
lahf
rcll
push
shrl
or
ret
dec
or
cmpl
out
sbb
sub
das
pop
flds
push
in
jp
cmp
pop
cmp
ljmp
xlat
movlps
test
test
sub
jae
rcrl
out
add
mov
jne
out
jne
mov
or
mov
sub
mov
mov
pop
pusha
in
mov
cs
dec
mov
fildll
mov
aaa
push
cmp
push
mov
xor
xchg
cmp
jg
jmp
fdivs
out
out
popa
scas
push
fnstenv
lret
pop
lea
fwait
ds
dec
jle
sbb
mov
dec
xor
sbb
jmp
mov
and
inc
ja
jbe
shrb
cmp
repz
insl
sub
xchg
xor
sub
pop
movsl
mov
push
mov
mov
ja
insl
sub
cmpsl
xchg
push
shlb
mov
add
fs
arpl
aaa
outsl
ret
jbe
xchg
int
scas
xor
and
or
test
push
pop
lahf
sbb
imul
pop
xchg
insl
mov
sbb
xor
aam
push
neg
mov
or
lret
fwait
jb
add
jbe
arpl
ljmp
insl
in
pop
mov
in
dec
push
xchg
rcrb
xchg
shr
test
rcrl
adc
dec
ds
jp
xchg
pop
jecxz
std
inc
or
inc
mov
jnp
xchg
into
sub
push
xchg
or
xchg
dec
dec
fsubrs
rclb
mov
fcoms
hlt
fwait
repz
iret
out
fimull
sub
sub
sub
fistl
mov
inc
mov
add
cwtl
cmpsb
stc
cmp
lahf
xchg
cmp
addl
enter
mov
or
loope
mov
in
das
sbbb
scas
std
mov
mov
cmp
push
pushf
mov
adc
mov
psubusw
dec
pop
or
add
push
cmpsl
es
and
mov
mov
sbb
lret
mov
sub
stos
jge
imul
add
sub
mov
jo
push
mov
jbe
mov
xchg
xchg
push
cmp
jae
jmp
push
and
fs
in
imul
jge
repnz
push
mov
inc
pop
cmp
sbb
sbb
int
dec
icebp
mov
mov
or
loope
cmpsl
xlat
aas
fwait
clc
fstps
fs
ret
sbb
mov
repz
jbe
dec
xchg
fsubl
dec
cmp
inc
dec
outsb
scas
mov
pop
jmp
aaa
mov
or
mov
push
shll
push
or
lret
popf
or
fs
and
push
popf
inc
addl
sub
hlt
cmpl
mov
cmc
test
fwait
xor
movsl
icebp
push
cmc
inc
pop
pop
mov
ret
jns
xlat
mov
fcos
add
call
pop
daa
inc
push
notl
xlat
or
mov
imul
ret
das
lds
cltd
and
fwait
jae
mov
andb
add
rclb
icebp
test
add
int
in
ljmp
lods
jp
jp
les
lock
dec
xor
lock
and
mov
add
in
cltd
call
or
jbe
aam
into
or
lahf
cmp
xor
fwait
jmp
ror
xchg
push
lahf
and
sub
mov
fldl
bnd
int
jns
push
mov
ss
mov
fists
in
push
dec
outsl
insl
mov
icebp
cltd
xchg
adc
sub
jns
dec
in
jmp
mov
xchg
les
fs
rolb
mov
push
sarl
and
jg
fistpll
push
stc
add
adc
adc
add
int3
pop
adc
mov
adc
xchg
xchg
mov
push
subl
jns
mov
aas
cmc
cmp
inc
push
cmp
adc
inc
cmc
pop
add
mov
filds
sbbl
xor
aas
mov
pop
std
insb
cmpl
vmovntps
push
jp
daa
pop
sbb
add
ret
or
inc
and
sub
pushf
xchg
inc
pop
out
nop
enter
setb
test
adc
enter
pop
sub
push
aam
inc
sahf
push
jp
test
or
cld
mov
mov
shrb
dec
xor
cwtl
aas
lds
ds
push
cld
iret
push
outsb
xor
ret
outsb
out
loope
sti
mov
fnstsw
xlat
cmp
jg
push
pop
mov
push
xlat
mov
xor
test
fsubrl
cmpsb
lret
ss
sbb
or
mov
sub
push
add
xchg
xchg
cmp
daa
out
push
imul
sarb
movhps
into
es
hlt
das
adc
and
mov
outsl
data16
mov
push
sub
aas
jge
cmp
stos
or
cmp
adc
stos
popa
stos
push
sub
int3
repnz
mov
pop
rol
fstl
gs
ret
lahf
add
sbb
sti
into
es
hlt
push
addr16
cmp
mov
cld
or
addr16
ret
jno
jge
js
and
jno
sub
lock
in
xchg
addr16
adc
into
mov
jnp
in
scas
add
adc
mov
cmc
pop
add
inc
add
pop
imul
and
jo
or
lods
shrl
mov
cmpsl
in
test
sub
scas
xchg
test
xchg
or
ret
pushf
pop
aad
lods
loope
test
test
mov
push
out
data16
lahf
lea
rcl
fwait
aas
cltd
in
mov
push
mov
imul
stc
jns
jae
push
pop
push
in
scas
adc
or
mulb
inc
bswap
dec
call
xorb
mov
addr16
insb
sbb
mov
mov
dec
mov
sahf
movsl
xchg
fs
adc
mov
cmp
cmp
sahf
pop
xchg
jp
out
pusha
sar
sub
test
mov
movsb
add
adc
in
sub
fwait
xor
add
pop
rorl
movsb
popw
inc
fildl
mov
lea
aaa
mov
dec
pop
xor
sub
in
cmpsb
dec
in
jo
adc
xchg
mov
insb
push
out
jae
jle
mov
divl
mov
pop
xor
cmpl
clc
roll
fists
xlat
push
and
cmc
dec
imul
push
js
add
and
stos
push
jl
shl
sbb
cwtl
dec
push
or
ja
push
jge
xchg
bound
mov
jecxz
lods
add
xlat
sbbb
mov
fsubr
cmc
stos
ss
lock
ss
add
and
add
movsl
mov
sbb
add
sub
or
adcl
and
mov
out
aam
negl
sahf
jp
aaa
mov
icebp
push
pop
jno
sbb
cmp
cs
and
jecxz
popa
jno
shll
cmpsl
cmpsl
sub
mov
jbe
cli
lock
dec
cltd
in
mov
sbb
ficoml
sub
test
and
dec
lret
lcall
stc
aas
push
fwait
cs
dec
or
aaa
mov
dec
jns
outsb
inc
popf
sar
add
dec
jnp
mov
je
je
sub
xchg
mov
mov
xor
cmc
pop
and
lock
lret
cltd
repnz
rdpmc
cltd
loop
push
dec
mov
mov
cmpl
sub
pop
jle
je
and
mov
sbb
mov
sub
loopne
jl
xchg
rcrb
or
fisubs
ss
sub
inc
and
sbb
mov
sbb
out
and
leave
add
loope
push
xchg
xchg
push
cmp
std
sbb
sbb
dec
xchg
adc
xchg
adc
inc
mov
out
mov
ret
push
or
in
lcall
lods
jmp
loope
inc
scas
xor
xor
rcrl
repnz
jae
lods
shr
fistpll
jnp
cmp
hlt
stos
push
add
fwait
arpl
fidivrl
popl
lock
in
lea
lea
sbb
aam
fmul
das
leave
sub
js
fcoms
pop
xchg
or
test
loope
imulb
mov
scas
mov
lret
mov
lods
jo
les
mov
push
mov
mov
repz
or
ss
mov
popf
inc
xor
xlat
sti
cld
cmp
cs
inc
mov
pop
mov
or
sub
aad
or
lea
add
jecxz
or
xchg
in
mov
loopne
jle
bswap
aas
insb
jnp
dec
or
adc
int
sbb
mov
out
ret
jo
mov
insb
movsl
mov
mov
dec
push
jno
xchg
cmc
test
or
and
inc
shl
jl
xor
mov
mov
fsubs
pop
mov
push
mov
jp
push
push
mov
call
repz
fs
xchg
jp
in
jge
xchg
add
cmp
ret
xor
cmp
movsl
imul
dec
xchg
nop
cmp
frstor
bound
fxch
fdivs
mov
pop
xchg
retw
xchg
clc
ud2
mov
push
cmpsl
lods
push
or
fcmovnu
pop
cmp
andb
cmp
push
xchg
mov
andb
les
scas
xchg
push
icebp
push
fyl2xp1
es
insl
xchg
xor
sub
es
shr
mov
into
add
dec
push
ds
jge
aam
mov
loop
mov
aaa
xchg
insb
nop
jmp
push
hlt
cli
cli
mov
xor
lret
neg
lds
cmpsb
xchg
mov
lods
or
loop
les
dec
stos
sub
ret
cmpsb
xchg
mov
insl
mov
jo
sbb
scas
push
ds
mov
sub
push
movsl
scas
lahf
fsub
stos
lods
pop
inc
in
mov
cld
xor
andb
std
cmp
test
jp
mov
jmp
pushw
mov
cld
cltd
addr16
sub
xorl
dec
insl
repnz
fwait
jp
pop
cmp
int
xchg
lods
fdivp
cwtl
fmul
jae
addr16
ss
shlb
push
mov
xchg
sub
lods
and
inc
sbb
addr16
sar
cwtl
jp
jae
jno
mov
sub
into
cmp
inc
sbb
test
shlb
loopew
mov
xlat
dec
jmp
cmc
add
notb
cmp
clc
add
cmp
ret
mov
and
mov
fwait
lods
lret
sbb
push
mov
cmp
divb
lea
out
sbb
imul
push
and
push
leave
pop
xchg
sub
dec
push
fsubp
pushf
mov
mov
mov
inc
sbb
cmp
sbb
mov
cmp
push
cmp
cld
lods
xchg
or
inc
push
cwtl
ret
xor
or
or
mov
int3
push
les
pop
mov
push
fnstenv
loope
aaa
ficomps
add
adc
inc
xor
ja
jl
sub
leave
sbb
add
loope
jb
dec
sbb
sbb
sub
popf
xor
and
cli
loope
cli
pop
fs
call
adc
ja
pop
add
addb
test
iret
jmp
data16
ja
and
mov
mov
gs
repz
lds
jnp
mov
pop
out
outsl
sbb
add
adc
test
mov
fidivrs
jb
fdivl
sub
jmp
subl
push
add
es
loop
add
imul
stos
mov
push
out
push
xchg
ja
jbe
pop
insb
or
jp
hlt
dec
sbb
inc
shl
sbb
aam
fstpt
mov
ja
adc
mov
xchg
movsl
xor
sbb
push
jle
jne
sti
inc
movsb
scas
cmp
arpl
push
add
cmpsb
insl
xor
hlt
jbe
mov
pop
movsl
push
cmpsl
divl
sub
push
popf
ljmp
cli
or
jecxz
loopne
jg
lcall
sti
sub
sbb
ret
inc
fisttpll
mov
popa
push
test
fsubrl
enter
xchg
cmc
cmpsb
aad
mov
out
ret
into
adc
out
adc
xchg
mov
pushaw
rcll
call
pop
jnp
jmp
ficoms
push
enter
cwtl
xchg
idivb
mov
scas
insl
xor
data16
test
jns
aam
cli
xor
mov
mov
jbe
mov
jmp
sahf
ss
cld
adc
pop
dec
push
movsb
mov
pusha
stos
inc
cmpsl
cmp
outsb
mov
add
les
inc
ret
jle
sbb
dec
lods
inc
test
pushf
mov
xchg
or
xor
jmp
mov
jmp
and
hlt
mov
cmpsb
sar
pop
pop
in
adc
cmc
xchg
es
ljmp
sahf
push
imul
jmp
adc
add
dec
xchg
ja
push
and
jo
pop
xor
xor
adc
shrl
arpl
clc
or
les
in
dec
and
pop
and
scas
xor
orb
mov
inc
add
mov
mov
movsl
push
call
xchg
loop
push
stos
cwtl
sbb
push
push
inc
xchg
addb
push
test
leave
data16
ret
push
ss
push
adc
or
sub
test
fdivl
add
xchg
aaa
sarb
mov
jne
test
popf
sub
in
das
add
mov
lcall
adc
shrl
mov
fsubrl
adc
add
push
scas
ret
or
jae
mov
ret
pop
stos
mov
test
icebp
sbbl
adc
mov
adc
sbb
out
test
lcall
mov
add
cmp
sbb
mov
jecxz
lret
sbb
xor
xlat
out
xor
insl
cmp
into
sbb
mov
ja
aas
sar
add
pop
testl
sub
pusha
rcrl
sub
das
and
test
push
push
xchg
dec
cmc
pop
fmull
stos
enter
adc
pop
pop
mov
xchg
cmc
xlat
stc
jno
jo
gs
pusha
rol
stc
sub
mov
lods
or
sti
pmaxsw
lods
mov
hlt
cld
jbe
testb
push
cmp
jnp
pop
inc
jecxz
mov
clc
hlt
or
fistps
jo
push
sub
push
les
insl
jle
cwtl
or
push
fmuls
mov
test
jmp
xchg
dec
test
mov
push
xchg
push
xorl
push
mov
insb
adc
xor
xchg
xchg
xchg
jp
adc
inc
dec
test
xchg
lds
or
lock
and
negb
mov
mov
sbb
jnp
std
pushf
xor
in
push
xor
and
jg
sbb
popf
pop
pop
loope
sub
pusha
pushf
and
sub
rolb
or
xchg
lock
call
loop
dec
and
fldl
inc
pop
or
mov
jle
popf
add
mov
xchg
sub
inc
loop
xchg
lds
pop
fisubs
stc
mov
jo
in
dec
cltd
sub
cmp
mov
mov
aaa
push
dec
out
or
jb
inc
sahf
dec
fistpl
dec
arpl
inc
xchg
dec
inc
inc
dec
in
xchg
leave
leave
jl
cld
enter
sub
inc
sti
notb
pop
int3
push
call
fiaddl
or
inc
nop
push
push
rcrb
add
cmp
into
or
jne
push
js
push
xor
enter
jo
idivb
cmp
mov
cmp
push
sub
in
test
lcall
jmp
cmp
adc
test
nop
shll
xor
stos
add
pop
mov
in
sub
test
or
fwait
test
out
lods
add
cmp
push
out
nop
mov
jmp
or
fs
jbe
inc
lahf
scas
or
sbb
cmp
push
jg
aaa
insl
xchg
push
and
push
loop
mov
push
into
loop
or
aas
jl
jp
loop
pop
cs
sbb
pop
rolb
sub
mov
push
mov
pop
pop
sub
add
scas
inc
popa
pop
xchg
loop
lahf
xor
fwait
stc
faddl
mov
cmp
jae
into
dec
inc
jle
and
xor
int3
push
mov
sti
imul
push
test
sub
mov
xor
out
pop
test
mov
mov
cltd
dec
add
push
repnz
outsb
inc
xchg
xor
jo
pushf
iret
jns
jge
movsb
ljmp
jno
mov
xchg
imul
outsb
mov
je
cld
andl
mov
test
add
loope
adc
imul
pop
mov
aam
pop
leave
jno
xchg
int3
jge
jae
pop
cli
pop
jbe,pt
pop
cmp
insl
inc
xor
pusha
pop
inc
push
push
fildll
pop
jbe
pusha
or
rcl
mov
outsl
jne
adc
adc
dec
stc
insl
inc
lds
call
mov
aam
add
jl
cmp
dec
pop
das
push
push
gs
push
pop
imul
sti
dec
or
lods
push
clc
jbe
daa
xchg
aaa
pop
fwait
dec
ret
cli
inc
dec
add
mov
xor
mov
outsb
fldenv
adc
adc
outsb
jo
mov
test
mov
fnstsw
sub
dec
cmpsb
rorl
lods
lret
push
or
dec
push
in
loope
pop
cmp
je
aaa
jb
leave
stos
xchg
and
insl
hlt
dec
dec
push
int3
fcoml
pop
imull
out
or
fiaddl
or
cmovg
sbb
push
jl
dec
sbb
pusha
negb
sub
cmp
in
add
xchg
es
mov
in
sbb
sub
xor
dec
lret
pop
dec
inc
push
jmp
mov
adc
pop
addl
cmp
sub
shrl
cmc
cmp
fiadds
pop
lret
std
imul
sbb
push
jbe
fwait
sbb
xor
sbb
cmp
incl
pop
inc
imul
jg
popf
push
sbb
sahf
xor
push
fmul
mov
es
sub
movsl
mov
jo
fiadds
out
mov
outsb
and
mov
xchg
fidivl
mov
mov
fwait
popa
std
adc
testl
jmp
ret
mov
in
adc
pop
lret
sub
dec
dec
mov
lods
push
stc
or
pop
lods
cmp
pop
xchg
out
sbb
scas
je
dec
stos
orb
and
pop
jne
ficoml
inc
in
test
push
xchg
sbb
sbb
cmpsb
xlat
mov
out
inc
imul
add
jge
and
loop
mov
dec
fstpt
aaa
add
scas
pushl
mov
adc
int
cli
lcall
nopl
adc
sbb
fbld
iret
adc
inc
pop
pop
xlat
mov
mov
dec
mov
adc
in
insl
jge
or
aaa
stos
outsl
enter
dec
aas
cmp
stos
or
mov
imul
pop
stc
dec
pushf
cltd
mov
out
fadd
mov
cwtl
gs
icebp
push
jns
aad
xor
imul
rorl
div
mov
cmp
pop
add
sub
sbb
ror
int
or
mov
sti
or
pop
imul
xor
cmp
adc
sbb
aad
aaa
leave
inc
loop
hlt
sbb
int3
jp
ret
xchg
cs
sahf
outsb
adc
ficomps
ret
push
ds
jp
inc
cmp
loop
mov
mov
xor
stos
cmp
push
and
and
negl
popa
jns
addl
out
rcll
pop
popa
das
and
faddp
jae
jg
inc
adc
in
incb
pusha
push
inc
insl
lods
call
jo
jge
loop
sub
inc
dec
test
xchg
mov
in
popa
scas
in
scas
mov
add
and
dec
lods
fsubrl
cmp
lea
xlat
enter
ret
out
jnp
cli
push
arpl
xor
scas
popa
xor
fidivl
dec
mov
xor
pop
lret
add
lds
lcall
cli
aaa
inc
inc
cmp
lret
push
cwtl
or
int3
adc
ds
jbe
sub
ljmp
mov
jle
push
roll
cmpsb
xchg
aam
jo
xor
js
test
sbb
sub
js
mov
push
sbb
xchg
imul
sub
mov
dec
in
xorl
clc
cmc
lea
icebp
and
gs
aas
inc
cli
xorl
adc
cmp
cmpsb
fnstenv
and
push
xchg
sub
hlt
lret
push
adc
jae
int
inc
ret
mov
push
imul
and
mov
sbb
out
repnz
push
mov
push
pushf
inc
stc
adc
repz
mov
lods
insb
arpl
ja
mov
and
inc
pop
je
sub
div
movsl
loop
jg
test
clc
sti
mov
add
movsb
rol
and
sub
push
adc
dec
icebp
mov
jg
sbb
mov
clc
loop
ret
add
add
rol
mov
repnz
cmc
push
cmpsl
popf
sub
lock
and
push
repnz
ss
stc
rclb
mov
jnp
daa
pushf
ss
subl
test
loope
inc
test
negb
fistpll
sahf
shr
sub
addr16
das
xchg
adc
adcb
adc
xor
in
xor
cs
jnp
leave
inc
add
adc
stc
mov
mov
push
js
xchg
pop
adc
adc
cmpl
shlb
clc
jl
pop
xchg
add
enter
in
or
add
and
movsl
inc
lahf
in
shl
lret
negl
call
test
fisubrs
pusha
dec
add
gs
aas
test
inc
lahf
ds
clc
ret
pop
jne
jne
mov
lcall
jecxz
mov
int3
adc
popa
mov
lds
fldcw
xchg
iret
out
mov
mov
xchg
test
decb
int3
push
cmp
xchg
loopne
xchg
mov
dec
dec
cltd
lahf
enter
scas
je
das
push
mov
inc
cs
xlat
add
mov
cld
cmp
jb
aas
mov
fs
adc
and
popa
pop
das
test
push
cmp
xor
and
xor
addr16
test
jnp
loop
rcrl
movsl
xor
mov
push
nop
shll
cli
in
pop
aaa
imul
sbbb
adc
icebp
cwtl
mov
jns
inc
ds
lret
movsl
cmp
loopne
sbb
roll
mov
pop
push
jae
pop
or
lods
mov
sbb
fsubrs
adc
xchg
lahf
or
dec
or
aad
out
je
aam
popa
push
fcoms
add
ret
pop
out
mov
adc
hlt
adc
scas
repz
sbb
mov
mov
decb
inc
jnp
push
inc
lods
pop
adc
jecxz
inc
pop
js
sbb
fwait
push
inc
push
pop
xchg
xchg
sahf
pop
ffree
add
dec
pop
dec
popa
popf
in
sbb
mov
dec
inc
roll
adc
mov
jne
shr
daa
mov
icebp
add
sub
pop
adc
repz
push
iret
xchg
sbb
pand
test
mov
fdivr
loop,pn
sub
cmp
jnp
push
imul
loopne
mov
dec
xlat
div
cltd
jge
cmp
testb
inc
call
mov
ret
push
xor
xor
mov
out
shlb
mov
dec
mov
roll
cwtl
mov
push
push
cltd
loop
call
push
cmpsl
jnp
lds
inc
cli
xor
dec
sub
add
xor
cmpsl
mov
xchg
inc
js
outsl
mov
and
and
loopne
or
jecxz
lcall
ja
hlt
movsl
adc
incb
adc
scas
dec
jmp
mov
inc
push
add
mov
shrb
dec
push
inc
pop
pop
aaa
fidivrl
call
cmp
mov
mov
fmuls
cmovb
lret
mov
mov
loopne
jae
inc
sbb
hlt
or
lds
and
pop
push
mov
pop
repz
addr16
insl
es
jecxz
adc
es
jns
xchg
add
daa
stos
push
push
lea
out
or
in
push
jae
dec
xor
jnp
add
das
lret
adc
std
xchg
decb
cmpsl
mov
inc
cmp
lret
xchg
or
icebp
out
subb
xor
in
jo
pop
add
or
cmp
hlt
lds
clc
inc
or
imul
mov
add
jle
das
lock
pusha
rclb
call
aaa
sub
mov
clc
mov
add
cmp
pop
mov
std
mov
test
fstp
int3
dec
pop
loopne
lock
fcoml
sbb
jl
sbb
and
and
pop
fcoml
in
xchg
adc
inc
mov
lret
test
xchg
in
lahf
or
daa
popf
cwtl
loopne
dec
sbb
xor
push
inc
cs
push
adc
mov
fdivs
scas
jmp
inc
xchg
push
lcall
shll
inc
pop
ss
xchg
es
xacquire
pop
repz
jae
mov
cmp
arpl
pop
ds
hlt
adc
hlt
popa
insl
pop
lcall
mov
ja
shlb
mov
xlat
fidivrs
ret
sbb
push
imul
or
xchg
mov
push
mov
jb,pt
or
adc
icebp
mov
xchg
stc
xor
mov
jle
out
in
sub
adc
xchg
push
test
push
and
stos
pop
mov
push
in
cmpsl
dec
daa
push
jbe
test
stos
cmp
jg
clc
pop
cmp
jb
and
pop
imul
sti
ja
daa
int
shlb
test
adc
movsl
repz
fisttps
sub
push
movsl
test
insl
out
inc
ds
ljmp
pop
jge
jp
adc
and
jae
sbb
add
or
in
lret
lods
push
mov
push
imul
jns
pop
sub
lret
jbe
mov
out
mull
fdivs
pop
std
arpl
push
cmovno
cltd
cmp
ss
mov
pop
add
jne
push
jno
xchg
pop
leave
out
cli
xor
mov
or
ds
pop
stc
xor
sub
dec
pop
push
mov
mov
mov
in
xchg
lret
es
mov
add
push
mov
sbb
cmp
fisttpll
jmp
pop
push
clc
cmc
mov
hlt
daa
daa
pop
inc
xor
cmpsl
sub
imul
std
mov
rolb
sub
cs
mov
jb
cmp
test
cmp
jp
fucom
mov
ja
sbb
dec
and
cs
rcrb
in
iret
scas
mov
jo
icebp
shrl
sbb
push
lea
cld
add
cld
sub
jg
xor
insb
leave
out
sbb
out
lcall
cli
and
mov
dec
out
mov
sub
loope
xchg
out
cmp
int3
test
xchg
sub
icebp
lret
mov
sub
jb
mov
movsl
ja
sbb
adc
or
stc
sbb
jb
add
mov
xor
clc
push
in
cmp
cmovo
inc
mov
xlat
icebp
or
rcr
subl
fwait
lods
scas
lahf
or
clc
in
test
mov
cmp
adc
sahf
sub
mov
and
outsb
lods
inc
std
insb
cmp
xchg
cli
xor
xor
loop
mov
jns
xchg
sti
jecxz
addl
pop
push
jg
jge
out
pop
jge
in
xchg
xchg
ret
jge
jo
pop
lods
sahf
mov
or
sub
fstl
mov
jo
es
loopne
xor
mov
xchg
cltd
sub
orl
xchg
loopne
loope
push
rcr
mov
mov
jno
push
dec
rolb
sbb
sub
xor
repz
js
push
pushf
je
xor
push
push
jge
les
jmp
stos
mov
imul
xor
mov
sbb
icebp
add
cmp
sbb
mov
fdivs
imul
fs
add
mov
push
mov
sbb
in
sbb
push
lea
and
push
idivl
outsb
inc
je
pusha
dec
scas
pop
popl
adc
mov
stc
das
push
xchg
or
or
mov
jbe
push
stc
outsb
dec
mov
rcrb
loopne
jp
test
cs
loope
popf
rclb
add
in
sub
mov
test
sub
or
push
arpl
fsts
das
cltd
mov
cwtl
dec
xchg
mov
adc
insb
pop
in
push
add
fdivrs
and
lahf
faddl
xchg
mov
xor
mov
ror
push
xlat
out
fsubrl
dec
cmp
ficoms
adc
pmullw
neg
sahf
sbb
jp
stos
sub
imul
xchg
mov
push
xchg
fbld
jo
daa
push
ds
inc
and
and
lods
xor
jg
sub
jg
in
mov
pushf
ficoms
sbbb
js
jp
lahf
out
mov
out
loop
repnz
add
dec
arpl
je
lock
add
aad
dec
xor
pushf
pop
mov
fwait
sbb
pop
enter
add
mov
stc
mov
lret
iret
mov
push
pop
fcmove
mov
int
dec
xchg
int3
imul
in
aad
out
ret
addr16
test
movsb
dec
ljmp
xchg
or
out
je
xor
out
cmp
aaa
pop
inc
dec
xchg
mov
jno
fidivl
mov
mov
push
roll
mov
xlat
add
or
dec
addb
adc
pop
sbb
fdivr
xchg
cmp
and
pushf
pop
add
mov
jge
lea
shl
sub
pop
iret
mov
xchg
imul
lods
in
sti
iret
xchg
mov
fcomps
fldenv
or
imul
or
incb
add
xor
addr16
mov
xchg
pop
xor
incl
imul
push
adc
fisubl
cld
les
out
mov
push
sbb
loope
lahf
pusha
push
add
sbb
cmp
dec
push
std
xor
lret
cmp
inc
int3
adc
inc
sarl
dec
pushf
call
insl
mov
dec
scas
imul
or
adc
jp
push
int
enter
xchg
idiv
xchg
stos
fnsave
xlat
cwtl
xor
jae
arpl
and
push
cmp
push
mov
adc
adc
jo
push
andl
shlb
push
nop
test
andb
in
adc
lahf
out
sub
divl
mov
in
push
subl
ficoms
or
pushf
movswl
ja
aam
aas
cmp
hlt
sbb
jp
add
cltd
aam
int3
addr16
add
loop
xchg
jae
xchg
cli
insl
lcall
fimull
sbb
cli
fisttps
dec
mov
jno
jnp
in
aaa
popf
adc
ror
ret
sbb
xchg
in
leave
insb
adc
adc
mov
lock
xchg
mov
jnp
xchg
adc
out
xor
repz
stc
mov
dec
lret
mov
or
cmp
sub
data16
pusha
sub
and
sub
lock
es
mov
jo
add
enter
stos
xor
jnp
mov
pop
inc
pusha
push
xchg
test
sub
ljmp
sub
or
ljmp
movsb
adc
jne
sub
sbb
cli
jne
adc
mov
sbb
pop
scas
flds
loop
movsl
scas
inc
pop
sarb
mov
ret
xchg
jmp
dec
push
out
insl
jl
sbb
push
mov
mov
dec
jo
cli
inc
push
and
cmc
sbb
loope
ficomps
es
loop
push
dec
and
pop
xchg
std
ret
sbb
jmp
ljmp
dec
dec
or
cmpsl
adc
test
mov
in
int
movsb
adc
test
inc
inc
shl
jg
adc
xor
repnz
pop
shl
dec
push
jns
pusha
push
and
jae
mov
push
mov
jmp
repz
not
and
sub
jns
popa
ret
dec
les
pop
fisttps
jb
cmp
scas
pop
add
scas
cmp
cmpb
jns
lret
mov
push
ljmp
mov
ret
jg
insl
daa
sbb
dec
imul
xor
mov
add
xchg
xor
cld
adc
scas
subb
xchg
fmul
insb
mov
adc
in
mull
out
mov
mov
add
pop
loopne
mov
push
enter
jle
cmp
stc
push
loopne
in
in
inc
add
jmp
mov
jo
mov
fsubl
jno
movsb
sub
data16
iret
fdivl
mov
enter
inc
xchg
cmp
test
push
cmc
cli
and
push
mov
ds
inc
and
hlt
xchg
stos
jecxz
imul
pop
test
add
jmp
mov
stc
add
addr16
dec
dec
mov
push
or
insl
push
cwtl
and
test
push
stos
repnz
dec
sbb
mov
cs
pop
sub
add
cmpb
mov
arpl
jae
bound
push
inc
out
aad
jl
imul
pop
shrl
aad
mov
roll
sbbb
int3
jmp
arpl
pop
in
aam
adc
lahf
fcmovb
addr16
mov
fsubrp
aaa
ficompl
push
add
gs
shll
cmp
cmpb
cld
jno
pop
js
xchg
popf
dec
mov
fsubrs
rclb
mov
xchg
lahf
std
jbe
or
inc
out
jecxz
jo
scas
xor
push
out
xchg
cmp
int
out
cmpsl
dec
mov
or
xchg
data16
fsubl
iret
call
cmc
add
mov
dec
shlb
pop
stos
jnp
loope
pop
ror
in
cmc
dec
int
add
test
mov
imul
mov
add
outsl
mov
sub
fcmovnbe
sahf
xor
xor
mov
jo
mov
jae
dec
pop
loopne
cld
pop
pusha
pusha
push
gs
mov
popa
aam
xor
clc
sub
mov
fisubrl
cmp
ror
ja
cmc
aas
xchg
push
sub
xchg
pop
js
dec
lods
xor
cmp
cs
mov
inc
jnp
cmp
push
test
push
movl
out
out
out
cwtl
mov
jle
test
scas
and
mov
fs
push
js
and
dec
jb
jns
inc
outsl
icebp
or
xchg
sub
es
in
mov
mov
pop
pop
int3
arpl
stos
inc
push
jle
add
mov
and
leave
fistpll
pop
pusha
cmpsl
dec
scas
inc
push
inc
je
adc
push
cmp
sub
fldcw
popa
sahf
mov
cli
adc
insb
xchg
negl
lock
pop
add
int3
cmp
push
pop
sbb
add
and
xor
fistl
mov
mov
sbb
xor
sbb
out
pop
adc
repnz
xor
adc
xor
cmpsb
pop
shrb
mov
cltd
sbb
add
cmp
push
and
lret
push
dec
test
jge
jbe
insb
roll
insb
stos
push
dec
dec
xor
lahf
adc
mov
mov
adc
rcrl
fstpt
sbbl
daa
xchg
inc
stc
ds
shll
inc
and
xchg
in
movsb
sbb
int
or
add
jb
xchg
sbb
fisubl
imul
loop
cmp
scas
mov
sbb
push
gs
add
sub
out
repz
ret
notl
lret
xchg
inc
repnz
iret
movsb
jp
pop
arpl
in
mov
fdivrl
mov
xor
mov
mov
inc
in
ljmp
jg
shl
sarb
adc
mov
xor
aaa
and
hlt
adc
sub
inc
pop
mov
mov
popa
mov
pop
das
xchg
dec
addr16
cmp
cmp
loope
push
mov
aas
and
addb
pop
in
cltd
popf
pop
jb
mov
jl
xor
sub
cmpsl
je
sbb
sub
adc
push
insl
inc
hlt
sbb
ljmp
jo
xor
pusha
aad
subl
bound
shlb
aas
jle
lret
mov
mov
push
rolb
ss
adc
cmp
or
push
mov
sbb
scas
stc
mov
daa
or
dec
test
adc
rol
dec
insb
xlat
inc
cli
sub
push
test
push
xor
fadds
jp
dec
addb
xchg
cmp
test
cmpsb
inc
adc
jns
push
and
mov
xchg
xor
xchg
cmp
jmp
sub
loop
leave
pop
lcall
jno
aam
or
jecxz
cmp
inc
or
sub
add
lret
xor
sahf
loope
sbb
or
aad
std
inc
rcll
mov
push
arpl
es
fdivrl
repz
arpl
pop
mov
pop
dec
data16
jle
mov
daa
test
jl
and
or
fldl2e
fimuls
push
ds
xor
cmp
or
inc
sub
imul
and
jmp
je
mov
pop
es
xchg
mov
jnp
sbb
jge
cmp
and
stos
add
add
je
pop
rep
mov
lods
daa
pop
loopne
pop
in
sbb
jnp
jl
fsts
out
fadds
or
popa
mov
notl
fsubrl
sbb
pop
lret
int3
out
and
test
sub
xchg
test
out
pop
jge
fistpll
pop
test
mov
xchg
ficompl
iret
rorl
adcl
pop
fs
adc
jge
repz
outsb
icebp
out
sub
and
jl
xchg
sarl
mov
cs
add
pop
or
insl
pop
mov
push
pop
mov
into
lods
test
in
outsb
dec
adc
test
xchg
jb
mov
and
loop
mov
fiadds
scas
pusha
push
adc
pop
je
scas
scas
cmp
mov
adc
aaa
pop
and
rorb
je
mov
xor
adc
and
shlb
leave
lcall
lcall
ds
imul
fists
fwait
iret
inc
push
pop
xchg
movsb
mov
cwtl
enter
fbld
fidivrl
loopne
fnstcw
popf
cmp
cmp
push
cli
jb
es
arpl
mov
or
sbb
outsl
rcll
lea
push
add
cmp
andl
pop
mov
leave
adc
aad
icebp
dec
fwait
sahf
xchg
inc
dec
mov
in
add
in
sub
sbb
push
or
mov
xchg
sbb
jno
stos
jae
push
push
mov
inc
mov
adc
mov
mov
pop
xor
sbb
and
out
xor
jg
mov
or
fists
push
add
or
add
ds
dec
loope
icebp
repz
cmp
lret
inc
divb
jnp
jg
mov
lods
sbb
xorl
sbb
mov
inc
jb
mov
adc
pop
repnz
lcall
les
iret
arpl
lret
push
leave
cmp
xchg
inc
jns
cmp
outsl
xor
popa
data16
clc
loop
jns
aas
sbbb
xchg
js
loop
negl
inc
ffreep
adc
dec
les
js
shl
xor
cmpb
icebp
aam
mov
dec
movsl
adc
sub
dec
dec
daa
and
and
mov
pop
xor
imul
push
loop
pushf
push
mov
mov
lock
xchg
mov
pusha
out
xchg
mov
insl
jge
jp
rol
pop
out
rcr
jne
mov
xor
xorl
mov
lock
and
dec
inc
jp
mov
lock
aaa
mov
loope
inc
and
sbb
or
jb
lds
jl
sub
ja
pop
repnz
jae
popa
repz
sarl
adc
addr16
shr
adc
inc
das
sar
clc
inc
fidivrs
and
sub
cmp
cmpsb
dec
push
test
sahf
add
enter
and
out
dec
fsubr
xchg
mov
sub
mov
cwtl
and
dec
mov
fmul
lret
pop
clc
and
push
mov
fisttps
cmp
dec
pop
mov
push
xor
pop
in
sbb
scas
push
loopne
inc
mov
add
mov
into
aas
add
pop
leave
or
mov
xlat
loop
push
or
out
movsb
das
nop
lret
test
jl
shlb
cmpb
incb
jno
push
push
xor
ss
mov
mov
movsb
pop
mov
pushl
mov
dec
and
mov
adc
push
movsl
xorl
xchg
or
cmp
dec
call
jne
int3
in
add
addr16
adc
imul
jns
out
ja
bound
sub
dec
sbb
out
cmp
scas
add
ss
add
lahf
mov
mov
or
nop
cmc
data16
test
sub
add
mov
mov
push
imulb
jl
mov
movsl
xchg
dec
and
push
fildl
insb
fildl
pop
or
mov
xchg
cmp
add
sbb
fimull
mov
loope
xchg
jbe
xor
rorb
jbe
xchg
cmp
jno
inc
push
aas
push
lock
stos
push
imul
ljmp
push
inc
lahf
subl
adc
cmp
daa
gs
jb
jo
xchg
sub
or
sti
clc
fidivrl
daa
ffree
shrl
pop
mov
fwait
popa
cwtl
xor
adc
cmp
push
mov
call
xchg
in
cwtl
sbb
adc
sub
lods
fsubr
lock
dec
adc
inc
jae
jne
dec
xchg
xor
mov
or
push
aaa
cmp
loop
cmp
cmc
dec
test
fs
push
xor
aad
pop
push
mov
sti
int3
outsl
xor
adc
xor
in
std
xchg
cmp
push
bound
push
xchg
leave
push
lods
jno
fimuls
cld
mov
loop
aas
mov
test
jecxz
pop
lahf
arpl
mov
or
xchg
sti
pop
call
xor
push
les
push
xor
push
fistl
movsl
lea
mov
sbb
lods
sbb
clc
repz
inc
mov
xor
mov
imul
and
mov
std
iret
es
cmp
pop
or
shrb
dec
sbb
xor
mov
int
cmpb
mov
add
cmp
in
insb
sti
loop
fldcw
mov
jg
xor
and
jbe
push
cmp
rcr
xor
les
outsb
mov
push
inc
dec
sub
int3
mov
dec
dec
fists
aam
xchg
jo
mov
xchg
pop
mov
aad
and
fstl
mov
aaa
sbb
std
mov
mov
sar
xchg
rclb
div
pushf
ja
cmpsl
mov
dec
shl
inc
int3
xor
adc
xchg
lods
add
mull
mov
cli
xor
xchg
mov
fstl
lds
cmpsl
iret
or
push
roll
rorl
dec
inc
or
bound
outsb
add
pop
es
pop
or
and
pop
jp
bound
xor
and
cmovne
pop
push
push
in
scas
adc
addr16
and
cmp
adc
sub
std
lods
js
pop
lock
mov
loop
pop
cmp
mov
and
dec
movsl
test
adc
dec
mov
add
test
sub
subb
cmp
aad
stos
mov
push
adc
jnp
pop
outsl
inc
jp
out
sbb
out
mov
push
add
add
out
pop
bound
xchg
stos
mov
out
cmp
pop
es
ret
and
mov
leave
push
push
mov
popf
push
mov
or
mov
mov
or
inc
and
lret
push
dec
inc
jo
insb
mov
jge
inc
mov
stc
sub
pop
loop
std
push
subb
xor
or
pop
ret
xorl
loop
pcmpeqb
lret
lret
repnz
dec
mov
and
mov
fstps
sbb
test
outsb
sbb
sbb
aaa
lods
push
push
clc
aas
dec
outsb
mov
das
cmpsb
jno
lds
fidivrs
jp
popf
and
mov
out
loope,pt
sbb
cltd
lret
cmpsb
rcl
mov
ljmp
stos
and
fildll
add
icebp
popf
dec
repnz
adc
jae
add
stc
sub
clc
fimuls
push
adc
mov
cmp
bound
push
xor
push
shrl
outsb
xor
inc
ret
and
sub
mov
or
aas
mov
pop
insb
cmpsb
aas
push
in
js
pop
ret
sub
xchg
mov
pop
inc
xchg
pop
sarb
cli
repz
ret
lds
iret
add
sarb
or
pop
fisubrl
sbb
inc
lock
stos
fsubs
test
adcl
repz
cmp
dec
or
xchg
jae
lret
in
inc
cmc
movsl
pop
in
and
inc
enter
lret
popa
xchg
stc
out
mov
and
cmp
and
fcmovu
inc
xchg
mov
dec
test
aas
add
test
xchg
mov
push
js
xor
push
dec
adc
mov
dec
jae
out
or
dec
xchg
sahf
sub
mov
sub
and
and
inc
in
inc
sti
add
insb
mov
adc
sbb
call
movsb
in
and
pushf
loop
insb
dec
push
or
mov
stos
scas
cld
sbb
pop
std
xor
fstps
mov
jecxz
cmc
and
stos
fildll
and
or
jbe
mov
hlt
filds
outsb
popa
sub
sbb
mov
sub
adc
sub
mov
jge
stos
test
popf
cwtl
push
jmp
lods
shlb
ss
cmpsb
int3
or
std
int3
adc
mov
shll
rol
sbb
mov
jns
ret
adc
in
fwait
mov
js
and
push
int3
xor
in
jecxz
mov
aaa
pop
mov
fiaddl
lcall
sbb
icebp
je
arpl
dec
pop
jle
push
add
jmp
xlat
adc
xor
js
adc
push
addb
xchg
add
sbb
lahf
fbld
test
cltd
lods
andl
mov
mov
dec
pushf
shll
sbb
pop
movsl
xor
or
or
sub
sbbb
xor
scas
lods
lock
out
add
cmc
ds
pop
iret
xlat
cmpsl
lahf
icebp
daa
lret
sbb
inc
mov
pop
or
fistpl
in
jno
iret
lods
mov
cli
sti
push
cld
ror
je
lock
repz
xor
out
mov
in
test
xchg
jb
and
cld
dec
dec
mov
fsubr
add
movsl
mov
incb
dec
inc
lock
lcall
jno
fidivs
outsl
call
ljmp
xchg
push
ret
xor
pop
orl
sub
mov
je,pn
test
and
cmp
mov
push
fildll
add
cltd
in
movsb
pop
insb
inc
and
jl
cmpsl
ja
repnz
pop
mov
fsubp
push
cmp
cmp
ret
xchg
ror
addb
add
dec
dec
or
out
pop
bound
mov
dec
bound
out
jecxz
inc
into
mov
jo
add
and
scas
pop
mov
iret
sub
loope
movl
and
sarl
sub
lcall
cli
inc
call
pop
rolb
mov
shlb
xlat
jb
testl
adc
mov
aad
cmp
loopne
orl
adc
or
pop
mov
adc
repz
scas
dec
adc
sarb
dec
adc
dec
lret
pop
enter
lock
ret
dec
mov
mov
leave
pop
fcmovnbe
inc
jae
imul
sti
xchg
in
pushf
pop
std
int3
ljmp
cli
enter
push
jge
insb
and
push
jg
in
bound
ds
mov
das
adc
test
aaa
orb
insb
mov
mov
out
or
fistps
out
or
xchg
push
jno
loope
test
movsb
or
out
jns
shl
xchg
or
xor
push
es
daa
mov
scas
out
adc
mov
xor
mull
add
dec
outsl
jbe
scas
std
fdivs
loop
sbb
dec
lcall
fmul
and
stc
dec
outsl
fldenv
fstps
mov
imul
cwtl
lea
lret
gs
ret
out
loop
pop
dec
jae
dec
ficoms
or
loope
add
inc
in
lods
repnz
pop
cmp
inc
xchg
and
imul
loop
xchg
outsl
incl
add
sub
sbb
aad
jg
clc
test
mov
aaa
outsl
add
cs
aaa
push
push
icebp
mov
pusha
xchg
push
aam
or
aas
jl
scas
mov
sarl
cmpsl
dec
push
mov
jne
or
scas
and
push
int3
jp
sti
mov
inc
dec
data16
imul
pop
xchg
sub
jle
adcl
xlat
lret
inc
clc
push
fisttpl
cmc
xor
pop
insl
sbb
push
enter
adc
push
sbb
cmp
jo
cmp
sbb
lcall
andb
cs
lcall
mov
cmp
mov
popa
fcompl
jbe
movsb
adc
cmp
dec
arpl
xchg
inc
subl
pusha
jmp
shlb
mov
dec
cld
cs
adc
mov
dec
mov
pusha
mov
lcall
js
std
mov
lret
outsl
es
insb
sbb
or
sahf
jae
fdivr
push
dec
mov
and
add
lock
sub
lods
shr
loop
xchg
in
push
insb
sub
jmp
push
jp
icebp
fcoml
xchg
imul
test
sbb
pop
in
jmp
jmp
jl
jmp
fsubs
adc
pop
negb
sub
mov
jo
stc
mov
push
lcall
jne
adc
jns
int
ret
jle
leave
inc
mov
mov
lds
ljmp
jecxz
sbbl
fs
sub
mov
push
or
add
shlb
outsb
jnp
out
roll
push
pop
xor
or
sbb
jbe
mov
xchg
push
call
sbb
aas
sahf
pop
addr16
js
test
jae
and
sub
int
dec
sub
inc
pop
shl
mov
mov
push
addr16
arpl
mov
fstpt
leave
push
je
mov
fstl
push
dec
lock
fcmovnb
jmp
inc
ds
test
movsl
ljmp
lds
sbb
sub
movzwl
mov
fs
cmpsl
add
call
shl
fnsave
mov
inc
stos
insb
or
mov
xchg
pop
out
xchg
mov
add
mov
cmpsb
mov
jg
push
rcll
add
jb
ds
pop
sbb
or
and
push
jae
xor
test
inc
jbe
cli
lds
int3
xchg
jne
push
sub
cs
jl
ljmp
pop
and
std
outsb
js
adc
jno
sub
xlat
pop
mov
cmpsl
ud0
pop
mov
stos
sbb
xchg
adc
mov
mov
in
xor
pop
shlb
add
out
push
jp
xor
xchg
cmp
xchg
pop
or
add
sbb
into
insb
out
insb
bound
add
loope
jle,pt
hlt
jnp
enter
ds
faddl
pushl
aad
insl
inc
xchg
je
stc
ret
push
iret
push
out
xlat
mov
mov
lret
test
mov
movsl
pop
or
push
rorb
push
push
pusha
push
mov
sub
es
sub
popl
movsl
mov
push
cmpsl
jne
in
mov
push
pusha
xor
mov
scas
cs
lds
or
ds
cli
shlb
pusha
pop
sub
rcr
stos
xchg
pop
jbe
lret
adc
mov
js
sbb
nop
in
mov
mov
mov
inc
cld
mov
fidivs
cmpl
ljmp
lods
hlt
mov
xor
lods
mov
aam
lret
xor
adc
cmpsl
stos
xchg
hlt
add
pushl
push
jmp
cmpsb
cmp
lcall
and
fisttps
or
ds
cmp
test
nop
and
pop
pop
lea
cltd
mov
mov
loope
fstpt
int3
sub
jp
movsb
sub
mov
pop
ja
nop
jae
ret
pop
cmp
fists
mov
sub
enter
xchg
in
cli
cmp
lods
ljmp
aam
in
inc
and
mov
sbb
jb
into
adc
and
cmp
daa
rolb
std
repz
fmuls
fldenv
fidivs
cwtl
mov
not
pop
sub
ret
aaa
sbb
inc
call
aad
xchg
pusha
and
and
push
arpl
lret
divl
xor
sub
sub
out
sbb
fildl
inc
sbb
add
es
sbb
cmp
aaa
cmp
pop
out
int3
mov
mov
add
fsub
jno
dec
add
inc
or
popf
push
xchg
push
pop
out
adc
and
sub
lds
mull
fcoms
enter
mov
movsl
push
pop
inc
icebp
add
push
xchg
xor
mov
out
and
jp
sbb
lods
mov
inc
cmp
push
push
stos
inc
pop
fwait
hlt
test
das
pop
in
aam
pop
inc
mov
daa
xor
dec
mov
pop
and
insl
push
sbb
xor
and
push
pop
xchg
lcall
fadd
mov
loopne
cmp
push
les
cmp
xor
rol
imul
xlat
inc
in
cmpsl
xlat
sub
movsb
or
mov
fwait
pop
push
iret
push
das
cmpsl
and
xchg
mov
aaa
in
in
sub
add
cwtl
push
js
divl
bound
aas
ret
push
or
cli
lret
ret
adc
enter
xlat
xchg
jne
jbe
push
out
jae
out
add
jns
iret
imul
f2xm1
mov
arpl
in
and
lea
mov
mov
lods
test
jo
push
mov
or
xchg
js
subb
jg
test
in
adc
pop
out
fistpl
or
rorb
cmp
or
mov
inc
pushf
fs
sbb
xor
fnstsw
hlt
inc
popf
cwtl
mov
mov
rolb
pop
movsl
sbb
cmp
in
jg
xor
sub
xchg
cmc
jp
cmp
lcall
or
insl
cmpsl
icebp
test
pop
dec
jge
and
mov
and
movd
test
sub
jl
outsb
or
inc
adc
out
je
push
xor
sbb
push
adc
frstor
pop
sbb
cmp
fsubrl
jo
dec
fsub
xchg
mov
out
sbb
pop
jbe
and
sub
mov
mov
sub
mov
xchg
add
lods
jno
cmpsl
push
and
popa
insb
cs
in
fisubrs
pusha
int
test
cmp
cmpsl
cli
mov
push
pop
in
cld
sbb
pop
jmp
mov
jmp
sarb
mov
in
movsb
pop
fs
ret
inc
mov
xchg
adc
xor
lcall
cmpsl
sbb
inc
pop
jne
inc
lods
xchg
push
ret
out
xchg
jle
dec
in
pop
pop
xchg
jo
mull
aas
mov
push
int
aas
leave
xchg
inc
ljmp
mov
add
and
add
pop
adc
int3
ror
push
xor
lahf
sub
pop
xchg
and
pop
lahf
fcmovne
mov
xor
aad
sbbb
jo
or
cmpsb
movsb
dec
xchg
and
sbbb
mov
mov
lret
inc
dec
dec
data16
mov
jo
out
jmp
mov
fists
jns
fnsave
and
adcl
aas
or
adcl
cmc
or
and
sub
mov
mov
inc
jmp
fbstp
je
push
test
aad
lds
cmp
sub
stc
xchg
xor
push
pop
shr
arpl
shll
pop
or
mov
int3
push
shrl
test
sbb
call
call
push
imul
movsb
inc
test
jae
orb
fldl
mov
aam
xchg
add
rorl
outsb
daa
and
adc
and
mov
loopne
sub
in
jg
xor
ljmp
cmpsb
inc
xchg
ret
mov
daa
cmpsb
mov
xor
xchg
push
sbb
xchg
popf
lcall
lods
fistpl
push
mov
pop
fists
pop
stos
mov
xchg
xlat
cmpsb
sbb
sahf
repz
cmp
mov
xor
jbe
xchg
in
inc
add
fisttpll
adc
fidivrl
repz
cmpsb
daa
mov
lea
mov
sarb
xchg
mov
lcall
push
xlat
mov
inc
sub
adc
std
add
or
fs
aam
movsl
pusha
es
push
cmp
mov
sub
fdivs
roll
add
or
mov
fcmovnu
aad
std
insl
push
jle
push
sbb
stos
xchg
mov
stos
ljmp
es
scas
xchg
sub
jg
mov
push
push
mov
pop
mov
lock
jae
popa
pop
push
or
mov
pop
push
inc
cmp
jmp
jge
movsb
mov
mov
outsb
lret
loopne
movsl
lock
nop
enter
popa
fcoms
cmp
sub
and
mov
inc
sub
mov
sar
inc
jne
cmpsl
cltd
sarl
cld
adc
or
push
inc
ljmp
inc
les
xchg
push
adc
cmp
aas
inc
add
nop
outsl
dec
mov
xor
stos
cmp
sub
dec
lock
dec
jne
sbbl
mov
push
pop
mov
cli
push
test
enter
enter
test
xor
scas
cmp
pop
cltd
pop
xor
cwtl
cmpsl
and
mov
jmp
lea
mov
push
sti
in
add
or
adc
leave
in
pusha
cwtl
cmp
adc
pop
mov
xlat
idivl
xor
out
ret
adc
mov
cmp
add
push
push
sbb
js
inc
lret
aad
or
push
fisubs
pop
xor
dec
cmpsl
cmp
fldl
mov
inc
int3
push
cmp
xchg
cwtl
mov
push
fisubrs
xchg
fisttpll
fbstp
filds
jnp
stos
movsb
jb
aas
fimuls
rolb
es
cmpsl
int3
xchg
push
dec
fstl
xchg
push
hlt
mov
xor
hlt
push
out
xchg
je
mov
pop
pop
movsb
insb
pop
mov
or
mov
lods
cld
pop
cmp
xchg
sti
add
add
idiv
mov
jno
lods
adc
inc
cmpsb
mov
jg
enter
into
sbb
clc
rcl
jmp
pop
and
ss
ljmp
sub
mov
jmp
inc
cli
inc
mov
out
ss
mov
fwait
outsl
cmpb
push
pusha
fdivrp
daa
negl
dec
jno
adc
incl
pop
ds
js
in
dec
loop
pop
loope
out
sbb
leave
sbb
pop
push
cmp
std
cmp
dec
test
add
push
push
mov
mov
movsb
push
jnp
leave
pop
in
pshufw
or
xchg
xchg
add
popa
data16
sub
popf
mov
stos
loopne
xor
inc
shrb
xor
sarb
sub
add
add
das
sub
nop
dec
cmp
shlb
test
lea
jp
sbb
test
popa
mov
cmpsl
fincstp
lds
push
add
pop
and
sub
sbbb
sahf
in
iret
lds
pop
call
outsb
mov
sub
adc
inc
jns
push
xor
jbe
lcall
inc
mov
mov
int
jmp
sbb
dec
aas
and
imul
fucomip
cmp
lock
in
bnd
inc
out
mov
inc
or
pop
lds
scas
mov
or
aam
jns
or
stc
clc
das
adc
add
dec
inc
mov
and
mov
inc
inc
cmp
in
adcl
or
mov
loop
adc
std
push
push
pop
imul
repz
imul
mov
fldl
or
ret
mov
insl
or
xorb
jb
aaa
mov
mov
dec
sbb
arpl
movsb
lods
hlt
xchg
adc
mov
cli
inc
push
and
repnz
rolb
dec
cmpsb
in
mov
mov
hlt
add
subl
imul
call
test
jnp
sub
jnp
jo
or
mov
dec
and
dec
fisubl
inc
out
ficoml
mov
xchg
std
test
call
lret
inc
push
cmp
ds
pop
cmp
lods
test
jge
push
aad
dec
sar
popa
fstpl
jbe
sahf
stc
cmp
cmp
popa
in
loop
jmp
and
mov
and
rclb
sub
test
inc
pop
mov
jl
movsb
stos
test
mov
sahf
jge
loope
stos
adc
das
mov
mov
daa
and
dec
cmpsb
push
jb
jg
std
test
rcl
aas
lret
fwait
xor
into
sahf
cwtl
fmuls
push
xchg
mov
mov
outsb
push
aad
jns
push
adc
cs
hlt
stos
hlt
aas
cmp
stos
cld
cmp
mov
mov
idivl
push
jns
mov
mov
xchg
lods
sub
imul
shrb
xor
addr16
clc
jmp
aam
cmp
js
aaa
jp
mov
pop
std
add
into
loop
xchg
shrl
movsl
dec
push
or
roll
loop
pop
dec
mov
mov
in
ja
pushf
mov
lea
mov
pop
roll
sti
mov
mov
cs
add
push
std
cmp
inc
mov
jns
movsb
sub
dec
adcb
dec
movsl
rorb
add
ss
push
insb
lret
scas
xchg
movsb
or
xchg
pop
push
mov
mov
push
mov
xor
popl
push
bnd
pop
test
sub
cltd
ret
xchg
mov
lret
lret
lea
lods
cmpsl
repnz
scas
out
dec
mov
cmp
movsl
xlat
outsl
fmull
cwtl
add
mov
insl
in
cmp
and
and
shl
lea
push
push
push
jmp
in
adcl
adc
std
xor
loope
shr
mov
push
ljmp
jp
sti
vcomiss
inc
pusha
lods
loopne
cmpsl
add
test
das
test
mov
in
cmp
push
mov
aas
mov
or
aas
mov
and
popa
add
loop
mov
lret
imul
cmp
stos
lcall
adc
nop
dec
add
and
daa
jno
sub
dec
imul
and
aas
jb
mov
pop
outsb
subb
inc
jne
jle
data16
and
inc
bound
sub
rclb
dec
inc
xchg
lcall
fidivs
sbb
add
dec
pop
mov
ljmp
add
push
in
cli
and
add
ja
loop
cli
pop
cmp
dec
sbb
and
xchg
jno
shlb
cld
inc
ljmp
lcall
test
int
ret
push
adc
outsb
mov
pop
insl
test
fwait
sti
fistpl
shll
adc
dec
jg
hlt
frstor
pop
jl
mov
mov
popa
sbb
jp
mov
shrl
popa
insb
pop
ret
inc
pop
lahf
fildl
mov
imul
ficoml
add
out
test
inc
sub
mov
or
add
les
pop
push
sarl
jecxz
arpl
dec
mov
cmpsb
mov
cmp
inc
mov
out
dec
mov
pop
sbb
push
stc
lock
test
in
jbe
xchg
mov
loope
jbe
mov
inc
mov
push
sbb
adc
add
mov
cmp
mov
sti
mov
sbb
lea
into
int
inc
leave
dec
sbbb
enter
push
loope
nop
and
rcll
inc
cmp
jg
push
cmp
jl
cld
xchg
bound
xchg
sbb
imul
pop
and
bound
fdivl
sbb
pop
xor
xor
call
add
mov
lds
lds
rorl
mov
push
fs
and
inc
cmp
inc
mov
mov
cmp
mov
dec
addr16
fistpll
lods
daa
pop
mov
inc
mov
call
test
xchg
push
dec
stos
test
fdivrp
test
cs
jne
cmp
xor
lods
ja
push
sbb
push
pop
lahf
push
cmp
jae
nop
mov
mov
mov
imull
or
pop
shlb
push
xchg
cld
inc
xor
sub
push
pop
pushf
daa
and
or
rclb
jmp
fs
popa
repnz
xchg
xor
sub
pop
in
pop
std
fcompl
lret
cwtl
js
lret
clc
test
xlat
sub
sub
out
lret
repz
pusha
mov
mov
cli
jmp
jge
movsl
inc
push
mov
in
pop
rcll
cld
fadds
jmp
and
fdivrl
xor
out
fistpl
adcl
jae
mov
hlt
push
push
int
jae
or
adc
xor
cmc
mov
xchg
pop
xor
imull
cmpsl
out
cmp
pushf
addl
sbb
inc
xchg
pop
lret
lret
gs
insb
jne
or
in
lods
mov
push
test
sbb
xor
adc
cmp
cmpsb
xlat
sub
xchg
scas
or
inc
jl
test
out
mov
rcll
out
out
pop
cmp
in
fisttpll
xchg
dec
xchg
cmc
cmp
cmc
sbb
or
adc
ljmp
adc
adc
jnp
insb
into
jg
shll
mov
pop
popf
pop
jne
jo
movntq
out
or
scas
mov
push
mov
cmpsl
pop
xchg
jle
sbb
lcall
in
out
rcrb
inc
xor
out
mov
and
dec
es
xchg
pop
jg
push
xor
push
dec
jb
enter
popa
cmp
shrb
fildll
push
mov
fiaddl
test
cmc
mov
xor
js
mov
push
mov
scas
mov
mov
pop
sub
jp
adc
addr16
and
inc
xor
aaa
mov
aad
das
jno
insl
fnstenv
and
adc
lods
cmc
jp
jmp
xchg
and
sub
loop
repnz
lret
xor
cltd
inc
sub
fincstp
xor
sbb
iret
push
repz
mov
push
xor
jecxz
lock
cmp
sbb
hlt
in
data16
push
out
xlat
xor
jecxz
mov
xchg
fxch
inc
addr16
int
ret
lods
xor
jmp
aas
mov
call
pop
rorb
aas
sub
and
sub
push
inc
outsl
iret
in
data16
scas
jo
sahf
gs
mov
jo
stc
pop
xor
jge
lods
fimuls
subl
ja
repnz
test
mov
movsl
push
out
pop
or
insb
mov
cmp
pusha
test
sti
push
scas
fstps
cs
add
je
push
js
xor
mov
sub
fstp
xor
dec
in
fwait
sti
aaa
xchg
ss
add
cs
aad
dec
cmp
cmpsl
cmp
push
shrl
add
pop
lret
fbstp
jecxz
ja
push
popf
aad
pop
divl
mov
loope
sbb
lock
dec
movsl
rorb
std
dec
mov
sub
lds
xor
gs
xor
push
push
cmc
mov
cltd
mov
lds
jle
out
push
hlt
mov
and
or
push
lret
insb
mov
mov
test
ret
lods
add
sub
test
sti
xchg
xchg
or
pop
enter
pop
add
sahf
inc
popf
jnp
aas
xchg
or
scas
jns
js
dec
imul
ja
out
repz
repnz
mov
xor
rcrb
pop
xor
bound
test
fidivl
test
mov
add
imul
mov
inc
movsl
mov
cld
xor
stos
stc
fbld
xor
lret
fldenv
pusha
aad
or
lcall
inc
cmp
jg
cwtl
pop
sub
xor
sbb
adc
xchg
mov
cmpsl
aad
dec
mov
sub
sarb
enter
pop
xor
mov
ljmp
test
lock
cmp
mov
sub
xchg
addr16
pop
sarb
lar
sbb
add
iret
into
dec
jno
mov
repnz
dec
sti
and
mov
sub
data16
adc
sub
jmp
mov
enter
popa
insl
int3
popa
imull
popa
rol
sbb
dec
loope
mov
in
adc
xor
ja
and
or
jno
cld
mov
hlt
jnp
add
mov
lcall
mov
decl
mov
cmc
fsubrs
ret
mov
xchg
cmp
add
xor
repnz
sarl
dec
sbb
leave
scas
hlt
push
inc
or
out
cs
add
subl
add
imull
push
push
adc
sub
mov
xchg
cmp
loop
push
inc
lea
outsl
push
ret
xchg
je
xor
movl
add
fiaddl
xchg
sahf
mov
add
jno
dec
nop
pop
adc
int3
daa
xchg
arpl
mov
faddl
imul
aas
adc
call
fwait
sahf
push
fidivs
nop
imul
movb
mov
push
mov
aaa
ud2
jge
das
movsl
int3
std
lods
sub
xchg
xchg
jbe
loopne
add
and
lea
in
xchg
adc
or
push
sbb
push
lea
aas
lret
sub
lods
test
divb
stc
and
ljmp
cs
sub
fistps
stos
icebp
pushf
pop
gs
xchg
es
sti
loopne
mov
out
imul
and
or
push
sub
repz
bound
sahf
ja
in
mov
jns
shlb
cwtl
outsl
add
in
dec
icebp
lahf
jl
faddl
jo
dec
mulb
mov
or
pop
repnz
add
scas
push
jns
stos
mov
outsl
dec
int3
jmp
xchg
aaa
hlt
sbb
dec
fbld
push
mov
into
pop
push
pop
xchg
stos
lock
jns
mov
ret
or
aad
sub
nopl
test
jns
les
popa
sub
push
fildl
mov
push
dec
sub
xor
mov
pop
dec
gs
xor
or
mov
jb
gs
dec
cmpsb
mov
or
enter
dec
push
xchg
fstpl
imul
xchg
ficompl
cmp
bound
and
sub
mov
push
xchg
cli
lods
mov
jno
push
icebp
int3
mov
bound
adc
leave
es
dec
push
testb
add
add
adc
lret
adc
rcrb
jnp
outsb
xchg
subb
adc
sub
fmul
fcmovnb
adc
out
stos
xlat
lret
adc
imul
fwait
xchg
stos
pop
cmp
jmp
stos
out
ljmp
push
pop
xchg
punpckhdq
dec
cld
mov
or
push
test
mulb
xchg
std
imul
dec
loope
xor
aam
fcmovbe
imul
sbb
mov
mov
mov
and
pcmpeqd
mov
and
clc
or
cmc
inc
sub
imul
mov
inc
aas
aam
push
mov
outsb
sahf
dec
xchg
mov
ret
test
sub
jmp
stc
add
pusha
pop
js
loope
push
fcoms
dec
push
mov
cs
add
roll
loope
jle
les
aam
pusha
add
or
jb
add
add
jge
lret
fiaddl
test
ffreep
and
clc
push
lea
dec
std
mov
jg
daa
jns
mov
ret
das
iret
mov
gs
in
add
scas
cli
pushl
pop
mov
aam
and
int3
mov
outsb
stc
and
adc
jns
pop
incb
ja
imul
dec
mov
pop
rcll
scas
adc
pop
fnstsw
ret
inc
jbe
mov
push
push
imul
das
sbb
ficompl
or
mov
sub
aam
lods
pop
adc
sahf
push
xchg
insb
cmc
insl
xchg
push
xchg
mov
loope
xor
adc
sub
mul
dec
mov
jne
xchg
xchg
das
pop
mov
push
in
movsl
pop
sub
enter
mov
dec
gs
shr
add
negb
adc
inc
stc
fidivrs
nop
mov
push
imul
iret
stc
mov
inc
movsl
fucomip
insb
xor
cmp
xchg
add
stos
fcomp
sub
test
in
mov
mov
adc
xchg
mov
mov
or
push
aaa
orb
aam
cmc
push
cmp
jle
les
add
nop
ret
sbb
outsb
in
stc
rolb
lods
inc
sub
mov
out
xchg
or
movq
rcrl
jne
iret
adc
ljmp
mov
in
ficomps
imul
mov
dec
and
lret
sub
mov
rol
mov
xor
sbb
cvtdq2ps
and
mov
push
push
pop
jb
ret
xor
and
lcall
arpl
jle
popf
ljmp
sub
in
jae
cmp
addr16
jle
daa
dec
aas
mov
xor
lcall
push
mov
xchg
js
in
inc
std
and
pop
cmp
cmp
test
cmc
mov
xchg
loope
test
inc
or
fdecstp
inc
in
sub
dec
xor
shl
loopne
out
js
mov
mov
leave
insl
jnp
jns
cli
jo
pushl
sahf
arpl
movsb
sahf
lods
pop
or
and
gs
mov
sub
inc
xchg
leave
mov
repz
pslld
aad
jnp
xchg
cmp
pop
lret
sub
mov
inc
aad
fcompl
mov
jae
fidivrl
and
out
int3
rorb
mov
scas
push
ljmp
call
mov
cmpsb
stc
sub
mov
mov
enter
movsb
cmp
jle
rcrl
loop
roll
fmul
jle
or
mov
pop
cmp
jecxz
pop
stos
in
jb
add
clc
dec
repnz
xor
fsubrs
imul
sbb
popf
xor
sub
and
jno
and
mov
aas
adc
mov
and
mov
pop
out
lahf
int
aam
push
pop
adc
cmp
mov
insb
mov
adc
sbb
push
imul
arpl
enter
cmpsb
sub
xchg
jno
push
mov
ret
pop
fcoms
insb
and
adc
mov
mov
mov
push
out
cmp
mov
xor
dec
or
mov
aam
out
pop
xor
and
enter
add
or
jb
xor
ficompl
dec
add
fmuls
add
push
dec
push
fsub
mov
ljmp
push
jg
sbb
mov
aam
adc
xor
adc
push
les
inc
je
pop
lret
repnz
dec
dec
jns
xchg
pop
sbb
lock
dec
fstps
xor
lods
notl
pop
ret
jne
cmp
daa
filds
mov
adc
mov
xchg
sbb
xchg
icebp
shll
fcoms
push
dec
sti
jl
inc
insb
cmp
pop
andb
sub
sbb
lret
xor
jl
out
fldl
pop
push
xchg
xor
xchg
jb
pop
je
jecxz
push
sub
cmp
sub
inc
or
mov
dec
dec
fstpt
push
mov
push
inc
faddl
loop
sarl
repnz
ja
fidivrl
into
mov
push
pop
inc
aam
repnz
sbb
xchg
sub
ror
loopne
adc
adc
and
push
test
sbb
lret
pop
cmc
dec
or
mov
sub
stos
dec
cmp
sub
jl
push
test
inc
std
icebp
ljmp
dec
lret
sub
bound
or
cwtl
mov
lahf
mov
movsb
mov
sub
xchg
in
or
fcmovb
negl
mov
pop
lcall
arpl
and
das
int3
and
lret
daa
rcll
push
adc
popa
out
add
mov
mov
xchg
scas
into
testl
or
out
mov
cmp
lods
mov
rolb
movsb
mov
das
addl
stos
mov
and
jl
cmp
sbb
or
dec
sub
xchg
fnstenv
jnp
mov
cli
out
rorb
rolb
sbb
popf
mov
gs
sbb
xor
jo
cmpsl
mov
outsl
mov
jl
pop
sub
jae
add
outsl
jns
arpl
sub
mov
rcl
xchg
mov
cwtl
outsl
ss
and
in
push
adc
lea
and
cmpsb
dec
pop
mov
add
cld
add
add
sub
push
std
jge
cld
jno
stos
fnstsw
and
js
shl
shl
pop
pop
mov
repz
add
mov
push
je
pop
inc
inc
mulb
jbe
fnsave
inc
scas
arpl
pop
pushf
jno
sti
fwait
addr16
pop
xor
inc
xor
xchg
cmc
rcrl
cmp
inc
ja
inc
fldt
icebp
dec
xchg
aaa
addr16
inc
and
inc
lea
xchg
mov
xchg
mov
movsb
mov
les
pusha
xor
dec
push
mov
icebp
stos
lret
pop
sbb
orb
jne
sbb
lock
xchg
jns,pt
repz
fbstp
insb
mov
pop
jg
nop
loop
push
xlat
mov
push
mov
dec
aas
in
dec
clc
dec
xchg
sub
adc
out
push
xor
fwait
inc
pop
mov
adc
lea
mov
or
push
cmpsb
cmp
insl
rcrb
nop
or
shrl
das
lds
xchg
pop
mov
dec
leave
and
inc
scas
jnp
add
out
pop
inc
mov
je
jle
iret
repz
fbld
inc
jns
fldl
repz
enter
dec
ljmp
inc
in
aam
inc
loopne
scas
jmp
sbb
int
lods
mov
clc
repnz
lods
push
je
jg
inc
test
popa
pusha
mov
or
push
in
gs
adc
ljmp
mov
fisttpl
xchg
xchg
movsb
mov
movsb
jne
push
pop
jecxz
cli
mov
in
cld
ja
inc
mov
shrb
push
aad
mov
inc
pop
push
adc
add
xor
xor
xor
addr16
popf
adc
icebp
jmp
out
mov
push
test
pop
out
or
and
and
jne
sub
pop
pop
lea
dec
xchg
cltd
cli
push
jbe
or
sahf
lahf
rorb
jecxz
lds
popa
add
mov
adc
sub
or
xor
xor
cmp
dec
and
fisubrl
push
cmp
mov
out
cli
neg
aam
imul
and
xchg
cwtl
sbb
push
std
add
mov
nop
shrb
pop
jne
enter
mov
jb
cmpsl
push
lea
xchg
fstps
add
jo
add
lds
call
add
aas
or
into
xchg
xchg
outsl
sub
daa
in
and
das
sub
mov
rolb
sahf
mov
mov
movsl
push
xor
xchg
cmp
mov
int
xchg
stc
arpl
adc
xor
cmpsb
jp
cld
shlb
add
rorl
push
ret
add
out
inc
lds
sti
sahf
mov
addb
fisttps
clc
mov
call
nop
inc
push
aas
pop
dec
fstpt
fsubrs
std
roll
shr
mov
jne
inc
pop
lock
mov
mov
icebp
shr
xchg
frstor
iret
xor
cwtl
repnz
je
lcall
or
jg
lcall
std
not
and
cmpsl
pop
add
mov
add
in
les
cmp
rol
mov
adc
pop
add
or
mov
xor
outsb
push
push
push
mov
in
mov
test
lcall
adc
rcrl
shlb
out
dec
pusha
and
stos
xor
andl
lcall
and
xchg
xlat
loop
mov
pop
ds
xor
mov
aad
pop
leave
stc
insb
dec
xchg
or
fsubrl
ljmp
mov
fdivp
lea
dec
mov
repnz
sbb
xchg
or
js
mov
lods
pop
mov
dec
orl
std
push
mov
mov
outsl
lret
add
subb
je
xchg
insb
sti
pop
pop
setns
dec
clc
push
pop
mov
lock
mov
xchg
dec
push
js
sub
cmpsl
or
xchg
jge
mov
sbb
inc
sbb
dec
mov
fldl
lods
dec
lock
mov
movsb
inc
fdivrs
jae
pushf
out
add
lcall
popa
or
lea
fcomps
mov
fiadds
cld
aas
bound
mov
push
aam
lcall
mov
xchg
push
cmpsb
push
jp
sbb
pop
ret
nop
out
repz
or
pop
and
push
or
scas
xchg
mov
negb
jecxz
or
jno
enter
pop
in
sbb
mov
or
stc
push
ljmp
jno
fcomps
lods
icebp
inc
adc
cld
cwtl
cs
jle
xor
jno
pop
pushf
lods
imul
and
out
jnp
or
mov
mov
xor
jle
in
jle
mov
arpl
jbe
adc
loope
inc
cmp
mov
sbb
jge
mov
sbb
fidivrs
aas
mov
arpl
fbld
cmp
adc
xchg
mov
pop
xchg
imul
mov
pop
xchg
out
stos
mov
pushl
push
bound
jae
inc
pusha
inc
jl
es
ret
mov
inc
jle
fistpll
pop
adcl
push
outsb
jb
les
push
test
sbb
cmp
pusha
sbb
xchg
repz
dec
rep
fucomi
lahf
dec
pop
dec
mov
mov
psubsb
cmpl
pop
cld
add
sarl
cmp
mov
jle
testb
fistl
movsl
jno
push
push
das
jns
pusha
lock
jmp
cld
jg
push
insl
pop
test
insw
jo
addr16
psllw
push
rclb
ror
addr16
mov
es
cmp
pop
mov
outsl
cmpsl
jle
cmpl
mov
shl
fwait
mov
fwait
jmp
mov
in
mov
mov
jl
outsl
sbb
negb
shl
pop
jns
sahf
arpl
roll
into
es
push
xchg
dec
pusha
cmpl
shrb
cwtl
sub
into
mov
xor
out
xchg
xchg
pop
or
sub
mov
dec
push
ficomps
bound
pop
mov
jo
fcmove
mov
mov
adc
mov
mov
js
arpl
cli
dec
sbb
inc
mov
sbb
xor
pop
jmp
enter
adc
xchg
mov
mov
ljmp
xchg
adc
insb
cmpsl
dec
push
insl
mov
xchg
or
push
dec
or
and
inc
sbb
sti
push
loopne
jnp
sbb
push
cs
or
push
mov
or
mov
cmp
test
mov
mov
pop
sahf
sbb
rorb
mov
jo
arpl
and
and
pop
lret
or
test
cmp
pop
xor
xorl
daa
pop
and
sub
clc
in
inc
dec
lock
in
mov
pop
lcall
fdivrl
or
jge
shll
adc
xchg
xchg
jb
movsb
mov
negl
ret
dec
pop
inc
jae
push
mov
lds
push
movsb
fstps
mov
and
pop
add
add
insl
lret
call
and
in
aam
xchg
out
pop
lcall
into
into
add
bound
icebp
sbb
enter
pop
imul
and
je
arpl
pop
scas
enter
cmpsb
js
and
xor
ret
push
in
add
dec
push
shr
pop
jmp
pop
divl
mov
xchg
xlat
jp
mov
scas
xor
sbb
cltd
pop
scas
add
out
rol
fistl
dec
sbb
xchg
sahf
mov
mov
jle
cmpsw
xchg
add
fwait
sbb
lret
pop
add
and
fldenv
in
out
bound
pop
and
jmp
jb
dec
xchg
xor
clc
xchg
in
and
ret
sbb
inc
sbbb
fisubrs
sahf
roll
dec
pop
rcrl
inc
jmp
orl
dec
sub
jbe
jae
loop
rorb
cmp
popa
fsubs
and
or
push
fstps
jne
cli
add
adc
sub
sbb
mov
jo
jp
aad
and
jecxz
xchg
pop
push
lahf
data16
sbb
adc
in
test
insb
inc
andl
fimull
add
xchg
mov
daa
or
pop
lcall
data16
xor
mov
mov
ret
sub
sub
adc
xlat
sub
imul
mov
sbbb
jb
jnp
xor
aaa
adc
in
or
or
add
jb
roll
loope
notb
cld
cmp
je
andb
iret
mov
mov
cmp
push
sub
jo
outsl
rorb
inc
dec
fmull
dec
adc
adc
dec
imul
loop
lahf
mov
mov
insb
pop
les
jmp
push
rolb
inc
sarb
dec
jg
test
push
popf
clc
inc
popa
fisttpl
loope
jmp
sbb
mov
mov
sub
repz
cwtl
aaa
sbb
cmpl
jne
push
fs
icebp
addr16
popf
inc
mov
mov
pop
mov
or
inc
nop
add
sbb
lds
adc
or
push
mov
and
push
or
push
les
lock
out
inc
loopne
mov
call
sahf
add
push
xchg
inc
and
sbb
inc
xor
in
push
imul
icebp
test
mov
mov
push
in
sbb
mov
aad
push
cld
out
loope
mov
insb
setne
imul
mov
aad
push
xchg
pop
cmp
or
jae
popf
and
inc
or
mov
mov
sahf
in
fidivrs
sbb
enter
mov
sets
ds
sbb
mul
mov
xchg
daa
cmp
cmp
mov
lcall
ret
cmc
lret
dec
repnz
lock
dec
fwait
sub
dec
cltd
enter
out
rclb
mov
push
mov
sbb
cli
leave
or
sti
jo
pop
mov
adc
pop
mov
xor
mulb
adc
cmp
imul
adc
push
jp
enter
inc
or
aad
xor
xlat
mov
inc
cmc
jb
xor
test
jl
mov
bound
cltd
out
jmp
add
jg
mov
je
dec
movl
imul
mov
pushf
jns
xchg
xor
inc
test
sbb
jl
jne
mov
repz
inc
sub
cmp
inc
fisubl
push
and
xor
jb
iret
rclb
mov
pop
pop
sbb
pusha
out
in
in
mov
push
les
inc
decl
inc
addl
leave
push
and
ficoms
sub
push
jns
inc
faddp
mov
sbb
inc
mov
adc
mov
or
insl
mov
sub
pop
inc
and
or
dec
arpl
aaa
into
mov
out
cld
or
push
out
add
mov
xchg
nop
pop
pusha
push
enter
or
dec
mov
pop
pop
pop
sahf
std
shld
cwtl
fdivl
sti
aas
outsb
jmp
test
loop
xlat
cmp
adc
jnp
mov
xor
xlat
adc
push
mov
or
sbb
sbb
sbb
cmp
loopne
add
jae
lret
add
mov
lcall
jg
jecxz
push
sbb
popa
xorb
decl
mov
dec
push
aas
shl
lock
sub
shr
mov
test
cli
mov
jg
mov
lods
adc
adc
mov
push
pop
popf
pop
shlb
dec
arpl
pushf
scas
jae
mov
jnp
iret
in
les
mov
cmp
cmc
jp
mov
xlat
xchg
mov
or
sbb
xchg
pop
mov
daa
mov
mov
lahf
xor
inc
in
call
ss
in
in
mov
push
mov
dec
insb
inc
xlat
sbb
ds
mov
fcmovnu
outsb
test
js
repnz
pop
sub
and
pop
mov
or
mov
xor
jge
xchg
mov
inc
lea
xchg
sahf
sub
les
dec
inc
push
add
mov
pop
mov
ljmp
sub
push
call
push
clc
andb
stos
adc
out
jne
les
repz
mov
jnp
repnz
subb
xchg
mov
sub
xor
xlat
fistps
pop
testl
add
pop
xor
lea
xchg
insl
dec
test
sbb
push
jmp
lahf
cmp
std
inc
push
push
jbe
sub
mov
lock
jnp
out
sti
sbb
insb
sub
into
andb
popf
fcoms
sahf
cmp
xor
cli
cmp
and
mov
mov
pop
xor
xor
xchg
sub
lcall
pop
xchg
popf
js,pn
imul
push
push
pop
mov
xchg
mov
mov
xor
dec
pop
outsl
imul
xchg
addr16
jmp
pop
fldcw
jp
xor
jle
in
inc
in
shrb
dec
ret
cs
xchg
xor
inc
push
call
adc
hlt
scas
mov
adc
cmpl
add
pusha
mov
pop
popf
adc
jg
push
dec
call
and
psubq
fldln2
mov
sti
add
or
leave
out
jge
jg
dec
xorl
jno
les
aas
xor
imul
sub
sbb
ja
testb
negl
or
bound
in
outsb
sbb
add
je
or
cmp
mov
xchg
xchg
outsb
push
enter
fildll
add
add
cmc
push
nop
xchg
imul
pop
mov
push
xchg
and
cmpsl
sub
and
test
and
or
clc
mov
pop
dec
or
es
sbb
repz
pop
sbb
popa
movsl
in
arpl
mov
sbb
out
insl
xchg
jle
iret
in
push
fsubrl
inc
gs
faddp
icebp
mov
xchg
lods
outsb
inc
fnstenv
testb
iret
cmp
sbb
sbb
adc
or
ret
mov
out
or
pop
cmp
js
push
xchg
loope
dec
and
lret
iret
lock
shr
pop
mull
test
sub
mov
data16
insl
inc
pop
sbb
test
rcll
in
jo
push
xor
adc
stos
push
jmp
std
mov
loop
pop
into
adc
test
dec
fdivr
inc
shl
cmp
icebp
mov
movsb
aam
scas
xchg
pop
lret
stos
mov
push
and
add
lds
pushf
mov
mov
add
repnz
inc
mov
push
pop
loopne
cmp
jp
insl
cltd
xchg
pusha
push
mov
xor
out
jp
aas
es
cmpsl
stc
pushf
cmpsb
clc
push
cmp
arpl
out
das
push
scas
inc
mov
sub
pop
dec
stos
pop
movsb
daa
jnp
ds
sbb
push
add
sbb
imul
xlat
sub
mov
mov
enter
adc
mov
mov
lock
pop
cs
jp
jnp
sahf
cli
fcomi
imul
sub
cmpb
and
push
out
mov
push
fiaddl
aaa
scas
adc
xchg
in
into
ret
rep
push
andb
repnz
and
lods
lret
jo
push
sub
enter
and
sbb
cmp
mov
push
in
int
sbbl
orl
mov
pop
dec
rorl
sahf
testl
pop
dec
xchg
mov
daa
jge
cltd
rclb
int3
and
mov
gs
push
imul
mov
mov
dec
neg
xorl
mov
pusha
jo
xchg
adc
fnstenv
mov
mov
into
add
lock
mov
pop
cmp
icebp
jnp
xor
in
jnp
sub
inc
jecxz
lods
or
mov
pop
push
push
negl
mov
pop
lods
cs
cmp
sub
inc
sti
push
pop
cmp
sbb
fs
lahf
jns
mov
ret
test
pop
iret
rcrb
subb
repnz
inc
shl
ljmp
mov
push
iret
ljmp
fdivp
loop
sub
cltd
sub
xor
inc
outsl
pop
pop
inc
xchg
mov
xchg
cmpb
repnz
call
hlt
in
cmp
mov
fldt
xor
repnz
pop
cmpsl
xchg
jne
bound
mov
sbb
adc
jmp
outsl
or
dec
in
xchg
adc
lcall
push
jecxz
lahf
dec
test
cwtl
push
lods
dec
inc
mov
andl
sbb
xorb
stos
ja
inc
pushf
addb
mov
testl
loop
push
loope
rorb
xor
jnp
dec
adc
cmp
stc
inc
xor
ret
int3
pushf
mov
cmpsb
or
sub
insb
push
repnz
lcall
mov
mov
and
mov
sub
dec
daa
cmpsb
adc
push
cmp
imul
mov
xchg
xor
add
cld
into
or
adc
dec
and
icebp
mov
pop
out
xor
negl
aas
mov
loopne
pop
leave
mov
rcr
imul
xchg
shll
arpl
lcall
aad
fcoml
push
adcb
scas
adc
repz
push
loop
in
sbb
cmp
pop
mov
mov
adc
push
mov
lock
leave
xchg
test
cmp
shr
mov
rol
mov
adc
movb
jge
dec
insb
add
out
jo
pushw
xchg
push
sub
test
push
cli
xor
popf
pop
adc
xchg
insl
sti
xlat
sbb
cli
das
fldt
std
xchg
jge
arpl
andb
xor
adc
inc
insb
cmpsb
add
mov
xor
mov
ficoms
in
inc
cmp
push
xchg
adc
or
shr
pop
popa
fsubs
xor
cwtl
leave
cmp
push
xor
mov
in
mov
loop
aas
sub
xor
or
loope
fwait
add
mov
mov
pop
insl
dec
imul
sbbl
movsl
fldl
xor
loop
roll
test
and
hlt
mov
sub
fildll
pop
pop
bound
pop
test
xchg
mov
loopne
jecxz
xchg
enter
or
push
imul
mov
je
or
scas
or
xor
aam
xlat
insb
cmp
jl
fstp
jecxz
mov
dec
and
pop
mov
mov
les
and
lret
enter
lahf
in
fs
jns
and
insl
add
push
inc
stos
sbbl
lahf
ss
sarl
dec
inc
mov
clc
dec
pop
call
xchg
shrb
out
stos
movsb
xchg
adc
push
mov
jge
jmp
xor
xlat
pusha
sti
sub
icebp
mov
out
sub
adc
out
xchg
shll
int
pop
aaa
pop
es
arpl
push
out
or
mov
gs
ret
dec
sbb
sbb
adc
cmp
sti
adc
in
pop
test
or
mov
aas
das
ja
pop
inc
imul
les
dec
inc
mov
mov
and
pop
or
call
sub
loopne
lret
ret
lods
iret
pusha
adc
mov
jo
addr16
fnstcw
shll
in
cmp
test
pop
push
in
push
insl
loope
scas
dec
lret
pop
or
jb
lcall
xchg
stc
loope
adc
imul
pop
out
mov
outsl
mov
pop
jp
push
add
in
pop
pop
out
pop
mov
in
stc
sbb
inc
xchg
xchg
xor
adc
add
xchg
adcl
insb
xchg
mov
inc
mov
adc
xchg
iret
idivb
jnp
add
int3
mov
repz
inc
mov
inc
popf
mov
inc
es
add
sbb
shrl
inc
push
jae
add
pop
in
insb
sbb
jmp
data16
ja
pop
pusha
scas
add
arpl
sbb
push
sub
in
std
mulb
mov
mov
in
mov
mov
ret
sbb
mov
adc
popa
nop
jnp
loope
cmpsb
sbb
add
fxtract
iret
sub
pop
outsl
push
pop
std
ret
mov
enter
sub
cmp
xlat
sbb
dec
jmp
add
jns
inc
xor
fidivrs
mov
dec
and
daa
hlt
addb
mov
jno
std
xchg
inc
adc
addl
sub
xor
sarl
adc
ret
stc
mov
mov
gs
pop
popf
adc
jnp
fwait
and
int
dec
pop
pop
or
xchg
fsubr
push
addr16
enter
push
jl
mull
inc
pushf
mov
lods
sbb
sub
mov
xchg
and
ss
addr16
aam
lahf
mov
leave
test
dec
stos
int
leave
enter
adc
scas
push
mov
sub
mov
mov
push
xor
inc
cltd
in
data16
sets
cltd
mov
add
lods
aas
fucomip
aaa
mov
data16
gs
or
ret
test
data16
pop
cli
test
pop
jb
iret
and
mov
or
and
mov
hlt
imul
fisttpl
mov
xchg
dec
mov
pop
popf
or
xor
mov
mov
inc
cld
test
data16
int3
lock
gs
jmp
pop
push
xchg
inc
mov
shrl
lahf
push
mov
xor
add
push
mov
mov
dec
inc
and
test
or
dec
push
in
inc
aas
fs
add
divb
xchg
ljmp
leave
scas
lcall
in
fisttpll
cltd
jmp
negb
int
inc
popl
flds
jl
mov
imul
mov
out
xchg
sub
test
aaa
in
sub
sbb
adc
cmc
push
add
movsl
mov
jg
aaa
sub
adc
sub
sbb
inc
pop
cmpsb
pushf
cmpsl
xchg
stos
add
push
jge
jb
je
add
jnp
adc
out
mov
push
push
daa
mov
jmp
call
out
mov
fisttpll
and
rorb
push
iret
ss
ljmp
mov
pop
mov
jns
sti
cmpsl
icebp
mov
push
sbb
mov
mov
jno
fists
out
dec
cmp
cmp
mov
fistps
lock
call
xor
dec
clc
or
and
jecxz
and
data16
pop
shlb
mov
or
arpl
jg
dec
pop
push
xor
bound
insb
push
pop
aaa
out
aad
lret
lahf
adc
stc
in
and
aas
jp
imul
push
jae
and
scas
imull
out
pop
cmpsl
rolb
dec
mov
adc
dec
shl
out
int3
out
mov
push
imul
pop
lret
cltd
imul
in
movl
repnz
mov
fwait
mov
cmpsb
xchg
insl
ss
stc
add
xchg
scas
jo
push
jg
mov
ficomps
aaa
ret
dec
inc
lds
in
pop
ret
shlb
sub
dec
sbb
push
jp
push
popf
cmp
sar
push
test
fs
or
add
lret
pop
push
mov
cwtl
mov
sub
mov
loop
sbb
popa
sahf
arpl
push
fwait
jb
xor
inc
mov
pop
mov
hlt
mov
subl
aam
mov
push
lods
aad
pop
sti
gs
ror
repz
mov
dec
in
mov
cmpsb
inc
pop
lret
mov
cmp
out
outsb
lods
scas
in
adc
push
cmpl
or
adc
lock
test
push
arpl
lds
jmp
xorl
sbb
push
pop
push
std
inc
out
out
test
jg
xchg
xchg
mov
dec
sti
mov
xchg
dec
shl
push
stc
pop
push
xor
out
hlt
shrb
jle
inc
or
or
adc
and
jge
jg
add
ja
mov
outsb
addl
push
mov
jp
cmpsb
out
cltd
js
push
add
mov
lods
icebp
shll
fs
out
cld
jl
sub
mov
xor
insl
jg
inc
pushf
out
mov
jb
inc
cli
in
cli
scas
in
push
lock
test
adc
jbe
add
xor
arpl
jg
inc
das
hlt
xor
lods
mov
pop
push
int3
add
sahf
popf
cli
pop
add
in
popa
push
inc
sub
iret
inc
adc
test
into
inc
sub
sbb
ljmp
push
jmp
and
sbb
mov
sub
divl
lea
stos
lock
sbb
pop
data16
inc
cmp
lcall
insb
inc
ss
into
or
pop
icebp
push
mov
sbb
push
test
add
fdivrl
push
repnz
outsl
imull
adc
hlt
fisubs
add
mov
xchg
pop
out
pop
adc
ficompl
xor
push
adc
mov
out
out
lcall
xor
inc
push
je
sbb
push
mov
imul
push
and
or
inc
dec
pop
lods
push
xchg
popl
pop
sbb
es
and
inc
push
and
xlat
insl
movsb
aas
in
add
jns
out
lcall
cmc
js
mov
mov
add
cmp
test
xchg
adc
push
pop
jge
in
jno
mov
loope
in
adc
fcmovnb
or
pop
popl
out
mov
imul
inc
popa
cmp
jbe
pop
test
push
mov
and
mov
cld
cwtl
add
adc
rol
cltd
mov
sub
mov
lahf
mov
xchg
jmp
cmpsl
lea
jmp
push
das
pusha
icebp
push
out
mov
add
inc
adc
cmp
push
cmp
ret
out
jmp
daa
jae
shrl
cltd
push
sub
push
add
lahf
pop
gs
jmp
and
fcompl
nop
lock
xor
jmp
sbb
xlat
repnz
leave
std
xchg
mov
mov
adc
jb
cmpsb
loope
xor
data16
mov
jecxz
andb
lds
mov
push
add
sub
push
into
inc
out
mov
adc
ret
mov
idivb
int3
jle
mov
cmp
pop
mov
rcl
lret
or
pop
add
dec
aaa
je
aam
inc
in
sbb
and
jmp
jg
dec
jecxz
outsl
mov
adc
jno
movsb
dec
cmpsl
ds
mov
lds
sbb
scas
mov
dec
cs
push
and
jg
inc
loope
bound
out
lds
fwait
jmp
and
mov
ficoms
xor
or
mov
push
aas
int
push
popf
or
adc
inc
xchg
sbb
jae
push
sub
test
add
xor
stos
mov
ret
rcrl
and
aaa
imul
pop
inc
cmpsb
mov
pop
out
xchg
ss
ja
inc
pop
ja
inc
fidivs
add
push
imul
cltd
jns
test
test
cmp
dec
pop
cmpsl
mov
sbb
inc
jp
add
mov
pop
push
inc
fs
or
aas
aaa
aam
xor
jb
int
mov
stc
inc
fists
pop
adcl
xor
push
fmuls
test
or
imul
cmp
dec
out
jo
sbb
push
push
cwtl
out
sti
cli
inc
or
ja
loop
jno
sbb
loop
add
test
pop
daa
fmull
divb
in
call
subl
rcrl
jle
fnsave
arpl
lods
enter
push
mov
mulb
lock
sbb
in
xor
nop
push
das
fcmovne
popf
mov
leave
das
add
test
rcll
cmp
cmp
jmp
sub
push
mov
int3
iret
fadds
mov
xchg
pusha
mov
xchg
sub
hlt
adc
mov
pop
push
mov
push
ret
lds
or
push
aaa
ret
lahf
int
lds
sbb
pop
or
scas
loope
pop
push
pop
xor
hlt
test
fcmovb
jmp
stc
mov
out
dec
add
ljmp
xchg
pop
popa
cs
pop
xchg
and
in
iret
and
xor
lock
mov
rorl
cmp
les
push
test
fwait
icebp
cwtl
repnz
xor
adc
shll
mov
cwtl
ljmp
jle
fisttps
mov
out
scas
lahf
push
les
in
cmp
in
pop
sub
push
dec
movsb
mov
jne
jo
lods
xchg
addl
push
sbb
mov
xchg
adc
ds
sbb
adc
mov
sbb
cmp
pop
cwtl
test
outsb
adc
adc
push
inc
sbb
mov
add
fs
movsb
gs
cs
or
xor
shlb
repnz
push
mov
mov
mov
cmp
mov
xlat
push
push
ret
imul
arpl
leave
hlt
test
js
sbb
push
xlat
out
pop
loope
arpl
inc
scas
int
ror
lea
mov
xlat
xchg
or
jge
shl
dec
mov
push
mov
sar
cmc
xlat
aam
cmpsl
mov
cld
mov
into
push
add
stos
arpl
jns
dec
xchg
jmp
dec
dec
loop
inc
sbb
push
stos
enter
clc
pusha
loope
mov
pop
mov
jl
imul
loopne
dec
push
jnp
jp
xchg
cmp
lret
push
rol
lea
std
fildl
loope
int3
inc
sub
pop
pop
ret
movsb
outsb
sub
jmp
ljmp
dec
dec
inc
dec
ffreep
mov
test
dec
or
je
arpl
inc
mov
xchg
mov
out
xchg
cmp
inc
movsb
stos
les
push
jp
add
and
dec
and
je
std
dec
cmc
stc
bound
pop
xchg
ljmp
sbb
sbb
dec
push
pop
mov
enter
enter
cmp
cwtl
out
popf
ja
xchg
push
imul
sub
push
loope
push
sub
iret
or
outsl
mov
adc
and
mov
xchg
dec
stos
jmp
pusha
xchg
or
mov
add
or
dec
push
pop
sbb
or
inc
nop
cmc
add
js
or
pop
and
xor
ljmp
and
sub
lods
lahf
inc
imul
jne
and
sahf
clc
dec
daa
js
cmp
ljmp
sbb
mov
xor
lret
mov
cmc
xor
pop
mov
mov
push
mov
aam
and
ss
gs
sbbl
imul
lods
leave
sub
jo
pop
xchg
xchg
fistpll
clc
ret
out
repnz
cwtl
mov
loope
insb
imul
fcoms
outsb
jl
cmpsb
mov
push
jge
cli
push
sti
mov
pop
jg
loope
dec
push
pop
sub
jo
es
andb
test
mov
imul
cmp
and
fcompl
scas
pusha
push
dec
xor
in
xchg
lods
cli
push
loope
cmp
jno
fs
lock
inc
push
add
cmc
int3
xchg
cmp
cmpsl
data16
stos
fsubl
cmp
pop
dec
movsb
xor
xchg
hlt
push
pop
mov
les
loope
insb
int
mov
push
inc
fadds
daa
test
xor
test
jle
sbb
and
cmpsb
or
push
test
jl
mov
ljmp
xor
adc
scas
cmp
les
jno
xchg
dec
ja
cmp
fmull
enter
sub
mov
adc
lcall
xchg
frstor
iret
dec
add
push
jns
pop
les
ds
xchg
xor
jp
lods
bound
aad
push
loop
xchg
xchg
jecxz
mov
xor
in
aam
mov
sub
mov
dec
sarl
jo
enter
mov
mov
push
sbb
mov
mov
push
pop
ret
mov
je
pop
push
xchg
cwtl
xchg
jo
pop
xchg
popa
lret
call
stc
jns
push
sbb
adc
cmp
inc
jmp
ret
outsl
pop
xchg
xchg
hlt
pop
addr16
adc
shll
push
push
xchg
std
jp
fwait
xchg
mov
xchg
imulb
mov
mov
into
cmp
inc
daa
xchg
cmp
mov
mov
arpl
fwait
pop
add
pop
test
jae
gs
push
pop
push
jecxz
sub
rcrb
cld
or
scas
daa
ror
movsb
ffree
xchg
fcomip
mov
ljmp
ftst
div
sbb
call
mov
fs
aad
push
cli
outsb
cmp
insb
jecxz
cmp
jp
pushl
mov
mov
cld
stos
addr16
mov
repz
sahf
out
aam
stos
mov
imul
cli
jb
int
test
mov
in
push
in
xor
and
call
inc
adc
ja
cmp
repz
cmpsl
push
sub
push
in
mov
repz
pop
lods
fisttpll
jecxz
pop
out
push
sub
cltd
xchg
xor
jae
inc
lods
cmc
das
mov
push
jo
incb
test
xor
lret
or
lcallw
jp
xchg
sahf
sahf
dec
xchg
pushf
pushf
jg
scas
dec
inc
and
mov
arpl
movsb
sarl
lods
jno
decb
ja
adc
inc
inc
in
in
inc
or
mov
pop
inc
push
in
sub
pop
std
xor
adc
pop
mov
roll
data16
hlt
imul
jecxz
dec
dec
arpl
repz
out
dec
dec
mov
pushf
je
sub
cmp
dec
push
int
ja
cwtl
aam
cmp
fsub
xadd
adc
sbb
sub
lods
shlb
and
and
cmp
ss
cli
movsl
xorb
or
into
jne
inc
imul
add
mov
bound
lods
fwait
mov
cmp
fiadds
ret
or
push
lods
ljmp
and
ss
ljmp
loop
sarb
add
adc
nop
xor
decl
setno
xor
lret
sbb
pop
enter
dec
add
add
push
rol
push
test
in
fisubs
xor
cs
rcrb
mov
mov
lret
stos
fst
cmp
add
xchg
xor
and
arpl
les
fidivs
icebp
sbb
int
and
test
mov
call
lods
mov
lods
push
xor
mov
aam
lock
ret
inc
dec
xor
mov
jecxz
xchg
shrl
stos
fistl
out
pusha
ss
lds
push
movsl
xchg
ror
ficomps
arpl
imul
out
mov
sub
jns
sti
mov
mov
and
leave
negl
imul
cmp
test
cmpb
adc
test
xchg
lods
xchg
mov
shll
fwait
dec
mov
fistps
inc
hlt
jae
or
push
mov
enter
mov
dec
adc
sbb
pop
insl
ret
mov
lahf
push
ds
lods
bound
add
insl
xor
mov
mov
addb
inc
fisttps
sub
repz
lret
bound
mov
mov
dec
pop
sbb
jge
test
loop
and
fsub
inc
scas
mov
cltd
lret
mov
pushf
iret
cmp
ljmp
fdivrl
stc
daa
mov
into
push
les
fmuls
sbb
outsl
enter
cwtl
scas
cmc
xchg
lods
dec
test
cmpl
in
cmp
popa
dec
and
pop
xchg
loop
or
mov
pop
shl
push
or
pop
arpl
dec
clc
rolb
jno
inc
mov
mov
mov
inc
mov
lcall
imul
mov
in
hlt
add
jg
test
pop
jp
and
dec
loop
sbb
outsb
cmp
out
int3
inc
std
cmp
or
imul
or
xchg
int
das
fdivrl
inc
sbbb
cmp
int3
stc
loope
adc
xchg
repnz
dec
fucomi
xor
mov
scas
inc
call
jle
pop
iret
pop
sub
jb
and
stos
push
jp
aam
das
mov
aam
pop
enter
mov
and
inc
lea
sbb
data16
cmp
push
cmp
inc
jl
jbe
gs
rclb
mov
fdivs
mull
addb
rcrl
popa
mov
cld
mov
sar
push
inc
pop
jb
push
fisttpll
cmp
mov
pop
adc
xchg
addr16
cld
mov
jl
xchg
jbe
setb
or
inc
push
fmull
pop
lret
aaa
xchg
fnstsw
cld
mov
loop
mov
call
and
add
mov
and
and
and
fdivrs
xchg
out
dec
adc
shr
sahf
add
movsb
cs
inc
mov
jbe
rol
lret
mov
adc
sub
lods
pop
lahf
popa
inc
lahf
xchg
pusha
imul
xchg
in
adc
add
int3
pop
cmp
mov
ds
mov
out
adc
popf
aam
hlt
inc
pop
and
movsl
loopne
cmp
adc
mov
dec
dec
inc
push
int
addr16
mov
push
pop
sub
pop
popf
jbe
jbe
cmc
pop
mov
pop
xchg
enter
in
mov
insl
loopne
dec
inc
aas
push
mov
adc
jo
mov
testb
cmp
add
mov
jecxz
xorl
lds
adc
add
cmp
scas
pop
and
jmp
test
and
jge
add
in
push
rcrb
enterw
push
push
pusha
mov
test
mov
cmp
lcall
arpl
jae
sub
dec
add
lods
or
scas
decl
imul
jns
xchg
lret
adc
and
push
or
inc
jb
jecxz
std
jl
xor
lcall
int
cmpl
js
xchg
imul
and
imul
push
xchg
dec
cmpb
aaa
ja
mov
mov
and
jecxz
pushw
in
cmp
xor
mov
mov
in
inc
push
out
mov
cld
shrd
imul
or
loopne
sub
aad
or
mov
add
pop
and
pop
das
dec
xor
movsl
repnz
cmp
lcall
xor
lcall
insb
aas
mov
sbb
add
rorb
sub
or
xor
xor
roll
ja
adc
in
mov
mov
push
daa
lods
adc
lods
or
xchg
in
or
mov
pop
test
mov
and
insl
and
cmp
fsubr
pop
mov
popf
push
pop
mov
xchg
push
pop
xor
repnz
cld
scas
sbb
xchg
xor
xorb
adc
or
fldl
fnsave
daa
into
sub
loopne
sahf
sarl
adc
loope
mov
or
cmp
mov
lret
mov
mov
popl
fs
mov
mov
es
sbb
mov
ficompl
xchg
cmp
inc
mov
cmp
aas
xchg
mov
cltd
andl
adcb
push
push
jle
aad
mov
aas
fildll
out
pop
push
insl
sbb
repnz
xor
and
mov
loop
bts
flds
push
loopne
and
daa
sub
cmp
in
idivb
xchg
cwtl
or
or
subl
int3
sub
lods
mov
adc
lret
dec
push
leave
cld
jo
sub
mov
jecxz
std
gs
sbb
mov
sbb
popa
xlat
push
mov
sbb
dec
daa
sub
bound
rorl
fcoms
mov
fst
fistps
dec
cli
cmp
popf
jne
add
lahf
or
jnp
adc
insl
sbb
mov
insb
mov
inc
xchg
xchg
lcall
inc
sti
roll
int
lret
fidivrs
jecxz
cmp
xchg
out
pop
into
mov
lret
adc
movsb
and
xlat
arpl
cwtl
fnstsw
jle
inc
dec
mov
ds
cmc
sub
xchg
movsl
adc
cmp
test
push
popf
xchg
pop
sbb
push
inc
cmp
iret
sub
mov
je
aaa
pop
and
js
inc
fs
setb
shlb
lods
lcall
fimull
out
push
ja
sti
imul
push
pop
aaa
nop
bound
mov
mov
fistpll
pop
into
mov
cmp
in
pop
fsts
ret
inc
ficoml
popa
inc
stos
lret
popf
mov
call
clc
stos
int
lods
popf
inc
jne
dec
jge
shlb
add
adc
lahf
add
mov
and
dec
jecxz
push
pushf
sti
mov
gs
mov
cmpsl
lock
in
mov
sub
in
pushf
mov
ljmp
push
mov
push
pop
pop
cmc
iret
mov
dec
sub
sub
cld
lock
xchg
in
inc
lret
sarb
mov
xchg
adc
xor
push
mov
cwtl
insl
mov
add
scas
sbb
push
cwtl
jge
mov
pop
add
insb
mov
or
mov
xchg
push
int
cmp
sarb
sbb
mov
mov
loope
mov
add
ja
or
stc
stos
cmp
dec
add
in
add
cmpsb
dec
and
dec
sub
jne
stos
roll
push
ficompl
jp
ret
loopne
xchg
stos
xorb
cmpb
into
js
popf
movsl
aaa
out
ror
mov
cli
popa
jmp
mov
jg
fcoml
sub
cmp
inc
scas
pop
ror
adc
cs
ss
ds
test
jb
in
in
cmc
pushf
rcll
xor
xor
sarb
inc
jmp
leave
sbb
test
lret
test
sbb
cmp
std
gs
jb
mov
and
mov
mov
xlat
mov
dec
fdivrs
test
sarb
mov
daa
cbtw
stos
and
pop
fwait
loope
imulb
dec
popa
lret
mov
jne
and
adc
das
mov
adc
stc
bound
push
jns
mov
stos
in
mov
push
iret
aad
sahf
mov
jae
jge
lods
or
mov
pushf
lcall
sbb
sbbb
popf
add
push
adc
or
in
mov
movsb
sbb
call
invd
xchg
std
dec
mov
dec
cmpl
fstpl
fdivrs
dec
or
jp
adc
call
pop
sbbl
xchg
cmpsb
push
pop
xor
lahf
int3
ss
cmp
jo
mov
sbb
std
movsl
icebp
fwait
lods
lret
xchg
dec
pop
das
mov
negb
pusha
add
jo
call
sub
jnp
cli
jl
inc
pop
ret
mov
sbb
imul
outsl
xchg
xchg
imul
sbb
loope
mov
fsubp
add
mov
mov
push
mov
push
jg
sahf
mov
dec
push
push
push
mov
daa
cmc
mov
loop
and
fwait
mov
ja
and
mov
adc
les
inc
aaa
fwait
sub
dec
xchg
mov
jne
dec
push
stos
int
pop
scas
or
inc
aas
sbb
sub
inc
insl
loop
mov
xor
sub
push
aad
push
fwait
sub
aad
sub
xor
ljmp
dec
pop
scas
xor
mov
mov
and
dec
movsl
mov
vpunpckhbw
rorb
rcrb
sar
dec
and
aas
je
sbb
adc
lea
dec
je
call
shlb
mov
jns
cmp
mov
outsl
xchg
rcr
ss
push
add
clc
dec
xchg
rclb
mov
sbb
and
sbb
mov
iret
push
sahf
fcomp
jo
sub
addr16
xlat
cmp
push
mov
cli
icebp
movsb
sub
jp
jae
ljmp
jmp
clc
lods
repz
mov
shr
mov
pop
mov
inc
pushf
mov
aas
push
xor
or
sahf
xchg
fs
inc
inc
arpl
inc
js
roll
fsub
inc
dec
cld
test
push
fs
movsl
test
movsb
xor
pop
pop
push
fs
mov
cli
cwtl
push
adc
mov
inc
cltd
dec
mov
mov
jno,pn
jnp
stos
add
dec
dec
push
stos
repnz
push
sbb
or
sbb
push
aam
pop
jne
cli
add
lea
xor
enter
mov
stc
xlat
or
xor
sbb
jbe
jp
into
lods
ljmp
xchg
fidivl
sub
ja
movsl
dec
hlt
movsb
icebp
xchg
pop
int
lods
inc
lahf
inc
adcb
sbb
mov
cmpsb
jg
int3
add
fidivrl
outsl
fidivl
and
mov
push
inc
pop
mov
mov
cmp
adc
sub
adcl
cmpsl
loop
push
jge
clc
pop
push
mov
cmp
inc
push
mov
loopne
push
push
insb
lea
rorb
and
cmp
div
xor
je
xchg
rorb
jo
jecxz
int3
loop
subl
aad
popf
aad
mov
mov
test
sbb
xlat
not
lret
mov
adc
movsl
dec
nop
enter
test
mov
pop
cmpsl
outsl
rcrl
in
jne
mov
movsl
push
sub
cli
sbbb
mov
fwait
mov
cwtl
push
and
nop
inc
out
pop
mov
jle
xchg
jp
rolb
inc
add
mov
mov
hlt
jne
inc
add
mov
and
and
stos
sti
jg
mov
or
mov
bound
cli
inc
in
adc
xchg
push
loope
xor
les
lcall
lret
mov
xchg
mov
imul
mov
popa
addr16
push
cmp
pop
iret
xchg
push
mov
mov
jnp
mov
repz
insb
imul
out
jns
stc
int3
dec
sbb
pop
scas
adc
cmp
adc
inc
std
daa
xor
lods
jle
pop
data16
add
daa
inc
loope
push
add
cmp
mov
imul
sahf
dec
movsl
add
leave
jmp
or
ffree
or
cmc
popl
ljmp
mov
lret
in
and
adc
mov
xor
bswap
push
sub
cmp
cmp
pop
cltd
repnz
jbe
dec
and
push
pop
scas
jae
test
loop
mov
fcom
fdivl
test
cltd
and
dec
jne
sub
call
fisubrl
sub
cs
ss
mov
adc
sub
pop
inc
xorb
sbb
ja
push
cs
push
fidivs
or
sbb
mov
fisubl
inc
sti
jmp
add
scas
push
jb
test
lds
cmc
xchg
imul
sbb
sbb
sub
fsubs
call
lret
mov
xchg
imul
clc
cmp
add
pushaw
ljmp
mov
mov
mov
orb
mov
stc
insl
jle
xchg
push
repz
dec
mov
cmp
jp
stos
xlat
pop
das
es
roll
lds
test
push
sub
pusha
or
in
out
fs
subb
mov
push
pop
mov
sar
adc
lret
loop
ds
xlat
xchg
test
or
mov
add
lret
inc
xor
pusha
std
xchg
lret
int
xchg
inc
in
enter
shrb
mov
lcall
insb
cmc
cmp
inc
popf
sbb
pop
mov
mov
insb
xor
cmp
cs
int
sbb
pop
je
jnp
js
fdivr
cmc
imul
xor
mov
lods
shrl
shll
sahf
push
stos
xorl
xor
mov
inc
lret
xor
add
insl
pop
xor
add
jmp
xor
jae
stos
cs
fists
ret
or
rcl
inc
imul
daa
xchg
ja
dec
stos
pushl
dec
xorb
jo
scas
aaa
dec
icebp
out
lcall
cwtl
popa
push
jmp
loop
ja
and
xor
int
jno
mov
add
push
mov
dec
in
sbb
stos
dec
add
fwait
inc
int3
adc
lea
and
mov
mov
jg
inc
fbstp
imul
sub
push
pop
push
sbb
sbb
out
xor
and
in
aas
push
jnp
aad
or
jbe
lds
mov
cwtl
pop
adc
enter
mov
andl
jl
cmc
adc
jmp
scas
sti
push
pop
or
test
jg
loop
xorb
insb
jnp
push
push
sbb
pop
dec
cs
nop
js
sub
inc
test
gs
lds
adcl
aad
fwait
in
jecxz
lods
in
mov
adc
xor
add
andl
inc
outsb
sahf
cmpb
adc
fcmovnbe
jb
sti
orb
popf
ficoms
push
jb
inc
insl
inc
cmpsl
stos
arpl
push
push
fsubl
adc
popa
pop
psllw
dec
and
push
outsl
mov
ret
cmp
popf
dec
dec
cmpl
adc
mov
mov
xorb
rcrb
fstl
dec
pop
je
out
sar
jns
adc
es
and
pop
xor
fwait
jmp
lcall
fiadds
pop
or
mov
gs
xchg
fldl
int3
loope
mull
mov
test
jns
jecxz
loop
lea
xchg
adc
mov
jbe
mov
pop
frstor
add
imul
movsb
jmp
nop
inc
pop
fst
push
adc
adc
bnd
ficomps
xchg
cmp
testb
cmp
faddp
dec
lods
dec
mov
mov
std
neg
xchg
fidivs
inc
loop
xorl
out
xor
ret
and
dec
and
xor
push
movl
jg
adc
adc
inc
dec
mov
mov
lods
aaa
shrb
adc
push
or
cmp
lret
int3
push
push
inc
std
dec
mov
xor
sti
stos
xchg
add
ret
mov
lahf
lahf
aad
out
dec
sbb
mov
lock
mov
das
add
xchg
mov
mov
sub
rolb
inc
fisttpl
sub
mov
jns
mov
pusha
test
inc
scas
xchg
addb
out
sub
xchg
push
movsb
xor
cmpl
insb
cld
pushf
arpl
mov
adc
xor
leave
inc
fstpt
scas
pop
insb
stos
and
popa
shrb
scas
clc
and
adc
loop
rcr
adc
nop
pop
and
lcall
orb
push
push
pop
dec
sbb
dec
sub
shl
and
dec
xor
vshufps
sbb
scas
cmp
inc
in
ss
dec
adc
cmpl
mov
adc
jno
imul
sub
lock
xchg
or
pop
mov
adc
inc
imul
mov
orl
jno
push
inc
pushf
stos
inc
lret
sarl
push
mov
dec
stc
pop
movl
sbb
bound
dec
test
std
jl
sahf
mov
xchg
pop
jge
outsl
jo
dec
jae
fcoml
movsl
push
or
push
les
loopne
mov
adc
sbb
sub
dec
and
out
mov
and
das
je
loop
jae
or
jge
xor
mov
xor
dec
jo
inc
mov
insl
andps
es
xor
daa
sbb
or
inc
xor
mov
bnd
push
es
pop
xor
lods
push
sub
mov
pop
test
cmp
jmp
jmp
int
aas
and
stos
loope
jmp
dec
or
icebp
and
insl
scas
mul
mov
addb
pop
add
lods
xor
aad
daa
fcmove
jle
jecxz
push
sub
and
adc
in
adc
rorb
add
stos
insl
arpl
aas
popa
inc
pushl
xchg
aaa
jecxz
cmc
jp
cld
out
pushf
sbb
aam
inc
jle
adc
jne
lea
pop
inc
loope
add
pop
jecxz
sar
cmp
jmp
into
stc
sub
mov
loopne
mov
aad
xchg
jae
cmp
pop
inc
fs
inc
aad
stos
inc
xor
ljmp
xchg
ret
scas
insb
jp
sub
cmp
leave
cmp
dec
call
in
fstpt
cmpsl
popf
out
or
cmc
dec
das
add
scas
pusha
scas
xchg
lahf
push
xor
gs
sbb
lea
inc
pop
aas
pop
sbb
mov
loop
scas
pushf
leave
data16
hlt
xor
jecxz,pt
outsl
sub
sub
je
xchg
vcvttps2dq
jg
mov
push
test
jns
data16
sub
test
pop
bswap
out
ficomps
dec
xchg
xchg
mov
push
fstl
sarl
repz
inc
cmp
cmp
add
aad
in
repz
insb
mov
dec
and
sub
add
push
pop
daa
or
sub
mov
je
mov
mov
add
push
ror
call
xchg
mulps
addr16
xchg
xchg
add
lods
arpl
adc
sti
jo
push
je
mov
mov
xchg
in
mov
testl
loop
popf
orl
sti
addr16
fwait
aam
aad
idivl
in
out
xor
imul
data16
push
pop
or
pop
inc
pop
xchg
stos
sti
lds
pop
jno
mov
dec
jecxz
out
xchg
xchg
dec
rcrb
mov
leave
lods
mov
push
movsb
fists
pop
sbb
je
pop
mov
repnz
out
frstor
mov
das
fs
xchg
jp
das
jo
int3
and
mov
imull
pop
rcrb
push
xor
addl
cmpsl
stos
add
mov
mov
mov
mov
icebp
mov
movsb
es
xchg
cltd
push
dec
or
pushf
and
rclb
dec
inc
lahf
in
inc
pop
shrl
insb
push
pop
push
scas
test
add
daa
popa
add
frstor
loope
mov
pop
xchg
addr16
push
into
icebp
inc
push
xchg
pop
fs
cmp
and
imul
stc
mov
nop
jmp
sub
dec
add
mov
sar
out
test
mov
mov
lods
aas
jne
jmp
cmpb
lret
jo
gs
inc
daa
adc
adc
pop
sub
outsl
mov
jne
fimull
lds
in
mov
repz
stc
xchg
xchg
aad
shrl
out
enter
stos
pop
pop
icebp
outsl
or
push
push
imul
or
cmp
xchg
leave
dec
xchg
mov
pop
fsub
sub
mov
sub
leave
in
dec
scas
ret
in
nop
jb
lcall
push
cmp
or
cmpsb
adc
ljmp
movsb
lahf
and
push
shlb
or
shl
cmp
adc
xor
lea
fbstp
and
sub
and
fdivr
cs
mov
mov
popf
dec
mov
pop
xchg
stos
push
xchg
lock
sarl
fwait
push
adc
adc
leave
xor
mov
or
mov
test
js
xchg
nop
or
scas
aad
leave
movsl
xor
int
loopne
shlb
sub
divl
ds
test
jb
sub
jae
popa
sbb
cli
outsl
xchg
mov
pushfw
jg
or
rorb
rorb
leave
mov
test
loopne
mov
test
push
lock
jae
rol
test
push
lds
adcb
and
jo
dec
in
shrb
lcall
fs
sti
sub
sub
cli
bound
and
xchg
or
fsts
jnp
push
icebp
inc
aam
out
mov
mov
push
lahf
pop
loopne
fldcw
stos
ljmp
ss
aam
cltd
dec
lret
in
lods
add
mov
ds
cmp
mov
jg
out
jmp
sti
loop
cmpl
ret
lret
mov
insb
xor
in
std
es
cmp
bound
xchg
sbb
fcomps
ljmp
and
repnz
call
movsl
sub
push
sbb
sbbl
jecxz
xor
enter
and
or
sub
hlt
inc
add
les
mov
shl
incb
cmp
rcll
movsb
jmp
je
sti
mov
xor
push
ja
and
aad
mov
mov
ja
mov
loop
xchg
das
mov
mov
cmpsl
fisubrs
int3
lock
xchg
xchg
popa
leave
sti
inc
insl
inc
popf
cli
scas
xor
sub
pop
hlt
mov
dec
mov
push
push
push
cmp
xchg
jns
cld
js
test
push
and
xor
push
aad
push
sub
lds
mov
adc
and
mov
push
in
sbb
ja
adc
mov
aaa
cld
add
cmp
rcl
mov
out
stos
cld
ret
push
xchg
add
inc
push
mov
insl
mov
inc
inc
lcall
ficoms
sahf
cld
fmuls
or
xor
mov
mov
in
data16
ffree
mov
mov
cltd
out
push
je
call
pusha
leave
pop
pop
push
int3
nop
jge
mov
and
mov
adc
bnd
ljmp
push
and
imul
mov
add
fs
cmp
andb
pop
adc
pop
add
inc
fmull
mov
ret
mov
pop
and
pop
aam
push
push
adc
addl
daa
or
xlat
fnsave
stos
imul
fildll
js
or
xor
add
pop
sub
pop
jb
rcll
aas
add
push
or
push
sti
cwtl
mov
jp
ffreep
inc
push
shll
or
out
add
push
mulb
test
add
out
mov
repz
sti
cmp
mov
push
pushf
mov
ret
mov
mov
xchg
mov
jne
rclb
mov
or
iret
mov
adc
movsb
cli
pop
cli
bound
enter
sbb
arpl
mov
mov
dec
enter
xor
les
cmp
inc
xor
cmp
js
fcmovnb
lods
dec
xor
stos
fadd
xor
jmp
icebp
sub
iret
jne
push
xor
scas
inc
lcall
sub
addl
mov
cmp
xchg
xchg
jge
mov
stos
insl
fmul
dec
cli
subl
test
xchg
push
mov
hlt
push
test
dec
shl
in
dec
pop
scas
test
pop
mov
int
inc
cmp
imul
fsts
popa
in
add
hlt
xchg
fst
pop
popf
stc
in
sub
sarb
mov
add
jo
out
mov
jle
lea
out
sbb
mov
jge
xchg
outsb
and
adc
push
cmp
leave
mov
hlt
lock
mov
mov
adc
cmp
cmp
inc
mov
cmp
mov
push
addr16
or
lcall
ds
xorb
mov
mov
pusha
dec
add
pop
out
mov
mov
arpl
or
lcall
push
test
inc
mov
fstl
dec
adc
xor
add
add
test
push
xchg
sub
mov
mov
jae
jle
adc
idivl
fsubl
sbb
or
scas
ss
inc
movl
jmp
jg
sbb
popf
add
push
jae
fisttpll
test
cmp
sti
or
inc
testl
mov
in
jo
cmpsb
mov
dec
fstl
sbb
mov
shll
nop
lahf
sbb
mov
ds
xor
sub
mov
mov
mov
mov
stc
filds
addb
inc
or
xchg
cli
roll
xchg
cmp
orb
aaa
test
dec
cmpsb
xor
mov
arpl
lret
mov
adc
push
dec
pop
push
lret
add
push
inc
das
mov
nop
xchg
lahf
push
cld
int3
test
xchg
mov
and
xchg
mov
push
pop
movsl
test
rorb
dec
pop
or
push
out
pop
and
stc
pushf
jo
mov
enter
ss
push
mov
push
sub
repnz
mov
xchg
into
add
out
lods
lea
ret
mov
ljmp
cmp
adc
enter
jnp,pn
leave
fwait
mov
or
lods
or
fcomps
jns
and
int
in
icebp
hlt
cmp
arpl
jbe
cs
mov
dec
cmp
int3
mov
pop
pusha
je
cmp
rolb
insl
fbstp
out
jns
xor
cs
in
push
pop
lret
popa
add
inc
clc
cs
dec
push
mov
dec
test
bound
nop
std
add
xchg
test
xor
std
mov
test
outsl
lret
mov
in
hlt
fidivrs
mov
xchg
xor
xchg
jno
in
test
sub
push
mov
pushf
das
xchg
push
inc
xchg
pop
int3
cld
cmc
cli
xor
sbb
xor
aaa
jge
in
push
stos
mov
jmp
and
inc
push
andb
cli
je
ds
imul
out
adc
aas
xchg
push
and
rcll
sub
shlb
and
test
cmc
adc
mov
mov
fdivs
out
dec
fildll
addb
rcr
sub
mov
cmp
jl
push
xor
popa
arpl
add
xchg
dec
add
dec
ret
jl
or
pop
mov
in
out
or
addr16
jne
mov
jns
jbe
mov
popa
and
roll
mov
add
mov
sbb
add
ss
fstl
inc
cmp
jge
les
lahf
cmc
scas
add
mov
decl
daa
add
push
imul
dec
inc
decb
mov
iret
push
aam
jp
cmp
add
cmp
adc
lcall
aas
jge
xchg
adc
push
pusha
mov
mov
ds
test
lret
cli
sbb
shrl
xchg
das
daa
inc
rolb
shrl
xor
sub
in
aad
push
lods
fscale
popa
daa
mov
scas
shrb
sub
push
or
jp
popl
and
cli
pop
jp
sbb
mov
xor
iret
jmp
mov
les
ret
push
push
dec
mov
movsl
xor
cld
cmpsb
jp
mov
fcmovbe
push
xor
fisttps
or
iret
cld
rcl
sbb
rolb
adc
push
and
dec
shlb
push
aam
sbb
push
push
sbb
sub
sub
mov
outsl
aas
rcrl
je
gs
jcxz
sti
adc
ljmp
pop
daa
pop
xchg
add
or
in
xor
arpl
mov
inc
mov
dec
xchg
and
sti
fldenv
shrb
cld
adcb
inc
stos
lahf
pop
pop
cli
test
ds
das
inc
filds
jmp
shll
sarb
jmp
int
sub
nop
andb
mov
xor
loop
inc
and
xor
pop
inc
lock
insl
movsl
outsb
push
mov
sbb
mov
mov
call
xchg
dec
xor
adc
jge
inc
mov
aam
xchg
inc
in
idiv
xchg
ficoml
rcr
pop
imul
les
loop
ret
ja
mov
cs
jo
daa
cmp
iret
repnz
inc
lahf
scas
mov
sub
jge
punpcklwd
ds
add
movsl
or
mov
xchg
int
mov
mov
sti
add
movsl
idivb
push
push
leave
jecxz
dec
popa
call
jg
aad
out
push
mov
lahf
sub
sbb
fsub
mov
sahf
in
lahf
add
lahf
roll
in
fistpll
loope
movnti
cli
sbb
in
cli
jb
addb
pop
outsb
outsb
cmp
mov
mov
lock
insb
aad
pop
inc
data16
in
enter
jnp
nop
cli
arpl
neg
shrl
add
in
std
test
sbbb
mov
je
push
push
shrl
mov
mov
dec
fwait
test
fs
mov
xor
repnz
jp
sbbb
stc
mov
push
and
jl
add
xchg
inc
and
mov
paddw
dec
pop
clc
outsl
cld
daa
mov
mov
sub
jmp
add
jle
mov
cwtl
pushf
inc
leave
adc
mov
enter
out
in
sub
xchg
aad
cmp
or
mov
jp
mov
mov
adc
jl
push
ret
pop
dec
xchg
mov
test
inc
mov
adc
cwtl
lea
push
lcall
add
leave
in
sbbb
add
cmp
sbb
mov
xchg
testb
fistl
rolb
xor
and
add
cmpsl
cmp
lds
bound
mov
shr
inc
xchg
xchg
or
dec
les
fs
add
notl
cltd
xor
and
cmpsb
cwtl
jae
fsts
outsb
repz
mov
jo
repnz
mov
in
movsb
ror
into
jmp
cmp
jns
in
pop
loop
arpl
sub
fildl
sbb
jle
push
into
pop
jne
push
aaa
cmpsb
push
aas
mov
rcr
cmc
ret
xor
hlt
push
xchg
imul
std
mov
outsl
jecxz
scas
enter
xor
sub
ss
jle
and
fmuls
ja
adc
cmp
imul
dec
divl
xor
arpl
sbb
jae
mov
movsb
push
iret
in
lods
and
into
repnz
clc
int
imul
jo
adcb
lock
pop
inc
mov
push
das
pminub
pop
sbb
enter
lahf
cmpsb
mov
aas
and
push
inc
pop
mov
and
movsb
mov
shrb
pop
push
scas
outsl
dec
push
inc
popf
add
pop
xchg
outsb
outsb
pop
mov
addr16
test
fisttpl
nop
xchg
xchg
push
mov
clc
andl
dec
hlt
fsubrs
fdivl
scas
call
and
rcll
fdiv
mov
cmp
pop
outsl
movl
xor
aaa
imulb
mov
or
sub
and
out
scas
add
out
xchg
daa
mov
test
mov
shrl
and
scas
pusha
inc
and
add
in
pop
or
mov
mov
and
jle
mov
sub
mov
sub
pop
aad
push
cmp
mov
pop
adc
lcall
sub
movsl
sti
mov
sub
mov
push
in
dec
and
jb
lcall
int3
xor
mov
mov
insl
iret
add
jae
cmp
out
aaa
push
dec
push
leave
lods
and
pop
addb
inc
loope
loope
popa
cli
jb
mov
push
mov
nop
lea
je
test
sub
repz
inc
loopne
pop
rolb
and
add
push
pop
pop
jne
lahf
fnsave
xchg
pusha
subb
mov
lcall
inc
scas
dec
jne
sub
arpl
xor
jge
pop
push
rcrb
popa
out
daa
gs
push
fistpl
ljmp
push
iret
or
test
ja
outsb
mov
add
cwtl
cli
dec
pushf
dec
scas
popl
jle
js
ret
xchg
and
es
sub
outsl
mov
nop
pop
mov
sti
roll
sub
sub
enter
xchg
frstor
cmp
adc
shlb
xor
andl
idivb
jp
sahf
sub
pusha
pushf
add
in
shlb
mov
dec
xor
dec
cmpsl
jmp
push
data16
mov
pushf
push
cmpsl
nop
fstl
mov
negb
in
nop
sub
scas
inc
nop
testb
ffree
testb
jb
adc
out
ret
xchg
adc
xchg
ja
xlat
popf
adc
pop
out
xchg
adc
or
adc
xor
das
sub
push
xchg
sbb
add
push
out
xor
scas
mov
test
daa
aaa
aam
pop
pop
bound
nop
fadd
scas
in
cs
icebp
pop
fs
shlb
ds
xchg
cmp
scas
int3
test
adc
scas
fs
push
aad
mov
xor
cs
pop
rcll
jns
xor
xor
pop
cmp
mov
xor
lock
add
push
in
pop
outsb
fmull
rolb
mov
movsl
subps
sbb
and
cmpsb
int3
in
mov
adc
jle
lock
xor
or
push
adc
aam
jle
mov
push
gs
jo
adc
mov
int3
sub
out
jnp
test
jp
sbb
sbb
das
xchg
popf
mov
popf
sbb
add
add
ja
clc
add
dec
les
inc
push
lret
jg
jl
jne
jle
outsb
outsl
ljmp
loope
push
jo
stc
fwait
divb
jno
sub
dec
aad
xor
outsl
jno
push
xchg
test
hlt
cmc
js
sub
xchg
divl
lea
mov
nop
imul
xchg
sbb
xchg
aad
push
mov
rol
dec
push
push
or
daa
testl
divb
xor
std
push
ret
fdivs
and
pop
sub
or
mov
scas
ljmp
movsl
jl
or
pop
clc
div
pop
ljmp
sets
rorb
xchg
ja
sbb
jg
mov
sbb
test
test
cld
dec
pop
mov
es
pusha
out
sub
xor
dec
xchg
bound
jne
popa
dec
pop
int3
ja
inc
ja
lret
jno
adc
dec
jns
fmull
mov
test
movaps
sbbl
ja
lea
loopne
mov
pop
dec
or
jno
popa
sub
add
and
pop
nop
ret
fldl2e
mov
mov
inc
ljmp
adc
lret
push
push
lret
lods
or
lret
xchg
sti
arpl
lock
jae
cmp
and
aad
in
mov
mov
mov
mov
adc
mov
pusha
rclb
sbb
test
adc
sbb
push
repnz
sub
popf
sub
add
inc
outsb
cmc
cmp
inc
cld
inc
out
int3
sub
push
lcall
pop
out
xchg
push
adc
jo
and
lret
mov
or
fdivs
pop
in
cltd
xlat
mov
in
dec
repnz
jo
ret
pop
and
jnp
push
dec
loopne
pop
fbld
adc
jns
mov
roll
add
outsl
push
and
jecxz
dec
pop
inc
inc
nop
leave
aad
and
andb
dec
lcall
fcmovbe
aas
xrelease
imul
daa
mov
jb
mov
neg
cmp
je
jp
jecxz
loop
adcb
mov
mov
out
dec
pop
mov
insl
sahf
mov
inc
push
mov
movsb
mov
lods
popf
ds
xor
sbb
fisttps
inc
call
mov
imul
sub
arpl
mov
pusha
pop
orl
xor
hlt
icebp
loop
inc
mov
push
mov
mov
add
loopne
cmp
rcll
sbb
outsl
in
push
cmp
mov
mov
or
mov
movsl
jbe
cmp
sub
add
and
xchg
les
push
ror
cltd
pop
mov
scas
xor
lods
aaa
xchg
xchg
inc
inc
adc
loopne
rorl
movb
xor
outsl
out
out
dec
push
xchg
and
pop
sbb
pushf
enter
cwtl
sub
mov
jb
push
jle
jmp
lods
stos
pop
stc
js
icebp
adc
daa
outsl
ja
decl
mov
roll
cli
popf
insl
xor
add
inc
add
push
mov
push
inc
sahf
pop
push
shlb
mov
sbb
jmp
sbbl
pop
fsubs
shrl
scas
mov
repz
pop
sub
xchg
in
ds
ret
stos
cmp
mov
add
lock
rorl
xchg
mov
and
xor
movsb
subb
roll
je
fsts
shrb
lret
mov
jnp
jge
ret
mov
xor
arpl
xchg
pushf
push
cmp
stos
mov
mov
inc
adc
stos
mov
pop
pop
gs
push
or
adc
jnp
cmpsb
sub
add
inc
push
pusha
mov
and
popa
aam
fstpt
cs
push
insl
inc
sbb
adc
inc
sub
cmp
mov
xchg
push
sub
jae
dec
jecxz
daa
imul
leave
inc
out
mov
push
cmp
loopne
iret
cmpsb
adc
inc
xchg
sub
insb
insl
movsl
adc
arpl
mov
and
or
cmp
sub
enter
jle
xor
add
push
dec
cmp
push
jg
dec
push
lahf
sbb
and
lds
stc
jnp
pusha
mov
pop
xchg
stos
cmpsl
dec
popf
mov
xchg
mov
test
sub
adc
cvtdq2ps
sbb
dec
sub
jl
xor
mov
and
rcrb
mov
add
ljmp
dec
fs
push
or
xchg
and
xor
cmp
mov
adc
es
lahf
scas
sbb
inc
add
dec
adc
sub
push
and
es
gs
fcomps
push
daa
sbb
loop
xor
xor
ret
int3
sub
fwait
add
stos
pop
int3
shrb
mov
mov
insl
ss
pusha
inc
js
repz
fisubs
jecxz
adc
aam
movsb
pop
movsl
inc
cs
in
lcall
dec
xor
adc
jle
into
add
sub
mov
xchg
out
or
pop
cmc
cmp
fsub
jp
fcomps
fistpl
xchg
pushf
in
je
shlb
mov
or
in
dec
roll
dec
jle
sub
pop
jno
mov
lock
jb
push
sub
push
rclb
and
out
or
ret
jno
out
imull
xor
push
push
xchg
jge
popa
push
mov
mov
mov
xor
mov
cmp
lret
aam
out
sub
bound
or
jmp
mov
addps
mov
cmp
add
insl
inc
shrb
fst
mov
icebp
pop
in
or
pop
cmpsl
mov
test
or
sub
ljmp
inc
imul
negl
cmp
imul
mov
shlb
xchg
aas
mov
ret
dec
mov
pop
inc
mov
dec
leave
mov
pop
fadd
push
inc
lahf
mov
mov
sub
mov
pop
pop
adc
adc
pop
sti
cld
idivl
mov
lcall
into
jle
out
inc
push
dec
mov
ret
scas
jo
xor
sbb
lods
movsb
pop
mov
jb
cs
cmp
int
mov
cmp
test
fmul
ficoms
inc
mov
fs
jb
subb
fcoml
push
push
fisttps
sub
sbb
les
dec
xlat
ds
push
bound
push
adc
adc
pop
sahf
inc
sub
or
dec
outsl
rolb
push
xor
enter
xchg
pop
in
xlat
in
cmp
mov
xor
xchg
in
cmp
push
mov
stos
jg
imul
in
mov
adc
mov
repz
jecxz
cmp
call
pop
mov
test
mov
push
jno
out
fiadds
test
stos
stc
js
insb
or
fs
pop
push
xchg
lods
xor
scas
scas
jge
mov
lods
out
mov
fs
sbb
push
stc
outsl
scas
ds
loopne
aaa
pop
stc
cmc
and
lea
scas
add
imul
lret
lret
cmpsb
out
adc
add
fstpt
ja
fs
out
jl
fisubl
pop
and
cmc
inc
in
cmp
fldenv
subl
std
in
jbe
repz
das
and
push
pop
push
cld
sub
or
idivl
nop
stc
xchg
pop
push
sbb
jl
imul
mov
mov
dec
dec
sbb
js
jge
cltd
mov
dec
add
push
jecxz
sub
dec
loopne
pop
lea
sub
inc
jne
std
mov
daa
jbe
testb
jecxz
mov
int3
pop
lea
jmp
mov
and
and
ja
test
hlt
mull
and
lret
es
stos
and
sbb
mov
or
data16
das
aad
jp
ds
fs
cmp
pop
xchg
mov
int
cmpl
mov
ss
loopne
fwait
jbe
jmp
daa
adc
push
aaa
push
sbb
in
outsl
add
pusha
or
in
int3
push
jnp
fistpll
jbe
sub
add
dec
mov
orb
cld
aaa
js
jle
add
out
jmp
lret
and
adcl
out
cmpl
ret
movhps
inc
mov
add
fdivl
xor
rclb
dec
movsl
inc
inc
mov
push
popa
in
mov
lret
inc
testb
out
outsl
int3
pop
notb
push
lret
frstor
jae
ficoms
cwtl
push
fiadds
adc
push
lds
mov
gs
jne
and
push
or
xchg
pusha
sbb
stos
scas
clc
and
fdivs
adc
jb
jecxz
mov
cmp
gs
sbb
mov
or
stc
cmc
or
aam
inc
lods
aam
push
popa
cwtl
cmp
imul
lret
sub
sub
adc
or
sbb
cmp
cmc
adc
inc
cmp
pop
out
jp
pop
lahf
aam
popa
call
jne
xlat
push
icebp
fldcw
aas
sub
cmp
mov
scas
or
sarl
mov
sub
scas
sbb
sub
pop
ftst
jp
mov
mov
fucom
add
daa
pop
test
xor
or
mov
bound
and
adc
aaa
ficoml
pop
out
mov
sub
daa
sti
loopne
xor
mov
sbbb
in
jns
outsb
aas
lods
xchg
dec
imul
mov
adcb
in
enter
loope
jno
into
mov
fcoml
or
cmp
jl
mov
lcall
inc
jle
outsb
mov
add
shlb
js
inc
cmpsl
out
inc
outsl
push
mov
imul
stos
fs
pop
adc
rcrb
push
mov
xor
or
imul
mov
sub
cmpsb
push
fstp
shlb
call
mov
xchg
ss
mov
cmp
mov
mov
push
lods
lock
out
mov
outsl
jl
divl
jbe
dec
divb
and
xchg
or
enter
andl
push
cmpsl
test
add
test
sti
add
aas
adc
aas
adc
mov
xchg
jbe
inc
sbb
dec
mov
jb
test
inc
and
xchg
popa
xchg
xor
gs
fwait
xlat
test
cmp
mov
and
push
mov
fsubrs
inc
insl
inc
enter
adc
ds
into
inc
jns
icebp
fldenv
test
mov
or
jmp
cmp
into
jg
push
loop
cmp
mov
push
stos
fadd
je
adc
mov
into
xor
mov
push
ljmp
ja
aad
cmp
cmc
or
outsl
lock
sub
clc
jae
cmp
push
cli
xchg
mov
call
jecxz
imul
and
push
mov
and
jle
mov
int
movsl
pop
int
push
cmpsb
in
xor
jne
popa
mov
lds
mov
mov
out
push
cmpsb
xchg
xchg
xor
jle
or
shl
push
shlb
adc
in
xchg
and
lcall
insl
imul
or
or
test
ds
inc
push
mov
jbe
add
cmp
or
push
lds
cmp
out
xchg
push
jbe
cmp
neg
test
in
push
mov
mov
xor
mov
dec
adc
push
shll
dec
vpavgb
mov
shll
inc
cmp
pop
aam
in
jo
xchg
pop
cwtl
lods
cmp
inc
call
ljmp
popf
mov
jae,pt
jno
push
pop
adc
jp
and
scas
test
loop
scas
cs
adc
bound
and
jl
cmp
out
std
stc
push
jge
out
jmp
sbb
dec
xchg
mov
mov
shlb
jno
cmp
fiaddl
push
andl
loopne
cmp
jecxz
hlt
aad
mov
in
arpl
push
lods
lds
mov
int
adc
sbb
mov
popa
sbb
out
fidivl
test
outsl
inc
or
mov
push
mov
cld
sbb
cltd
push
stc
push
pushf
ds
fs
ret
cwtl
push
pop
in
ljmp
jno
cld
es
in
dec
jl
sub
sbb
jnp
movsb
or
lds
adc
mov
add
sub
pusha
lret
push
clc
pop
push
jle
les
insb
cmpsb
mulb
outsl
sahf
push
lods
pop
test
dec
mov
or
mov
outsl
movb
rol
sbb
jg
sub
mov
dec
cli
lock
mov
outsb
lahf
in
add
mov
push
mov
mov
xchg
mov
cli
dec
hlt
mov
mov
adc
das
xlat
mov
push
sub
mov
int
sahf
and
mov
pop
jge
ja
subl
pop
mov
pop
lret
xor
dec
popf
call
pushf
das
or
inc
stc
dec
lea
andb
mov
out
mov
mov
push
mov
shlb
rclb
fs
lods
andb
aad
fbld
cli
arpl
jo
mov
frstor
fisubrs
aam
icebp
mov
xlat
add
mov
sti
mov
inc
dec
mov
sti
mov
jno
push
outsb
or
mov
mov
bound
test
jns
es
enter
push
in
out
xchg
mov
jg
icebp
decl
in
adc
scas
inc
pop
add
loop
pop
jns
pop
les
es
lret
movlps
std
loop
stos
mov
outsb
mov
in
cmp
sbb
adc
fstpl
fs
sbb
stos
cmp
and
jns
pop
out
incl
sbbl
adc
ljmp
mov
mov
pushf
cs
mov
sub
out
inc
out
out
lfs
fidivrl
xlat
repnz
jne
mov
xor
and
mov
daa
or
stos
test
cmp
loope
push
push
in
shrl
or
jg
xchg
insb
test
fsts
lock
inc
ja
pop
pop
repnz
shrl
and
repz
into
add
out
mov
mov
shl
dec
in
push
push
inc
scas
push
jae
hlt
mov
jne
inc
xchg
mov
mov
xor
hlt
int
xchg
push
push
pop
jg
adc
mov
mov
adc
push
sub
shll
cmpsl
fnsave
in
icebp
adc
xchg
jle
das
adc
cli
xchg
sbb
dec
aad
xor
scas
push
stos
adc
movsb
iret
sbb
mov
in
sarb
hlt
lods
adc
mov
dec
dec
cmp
popa
stos
icebp
shrb
popa
add
xchg
ss
ret
pop
shrl
pop
dec
inc
cmpsl
mov
pop
jle
dec
push
inc
sub
pop
outsl
sub
pop
sbb
mov
jg
das
and
dec
fdivs
sub
fwait
icebp
mov
fnstcw
addr16
cmpsb
pop
adc
cmp
sbb
mov
inc
js
nop
push
fcompl
ds
xchg
pop
and
iret
add
cmp
pushl
xor
cs
dec
rcrb
cmpsb
movsl
lret
out
loopne
lcall
add
movsl
sbb
adc
cltd
gs
pop
push
dec
and
stos
loope
xor
sti
dec
adc
fcompp
ja
cmpb
stos
aas
lret
cmp
popf
cmp
in
shl
fiadds
lret
add
addr16
jae
pop
data16
add
jno
aas
dec
push
cs
add
lods
sbb
idivb
cwtl
mov
faddl
and
mov
movsl
or
add
bound
cwtl
or
pop
sbb
lds
setne
xor
mov
leave
jecxz
or
repz
out
pop
dec
mov
inc
sbbb
dec
cmp
js
xchg
jb
or
repz
xchg
sub
ljmp
xlat
call
push
mov
xor
add
xlat
fidivs
push
pop
fsubs
jp
sbb
out
sarl
push
test
xchg
add
or
cmp
sbb
jge
in
xor
sub
cli
jmp
xchg
enter
mov
sbb
pop
adc
adc
xchg
push
push
xchg
push
cmp
stc
and
mov
dec
insl
pop
inc
stos
data16
add
cmp
out
pop
mov
cmp
jne
arpl
cmpsb
call
fistps
mov
xchg
sti
mov
and
sub
je
push
push
dec
jno
sub
pop
mov
xor
and
lds
jge
insb
xor
in
movsb
inc
cmc
xlat
lock
inc
outsl
loopne
xchg
adc
pop
xor
sub
xsha256
cmpsb
xchg
jne
das
adc
fucom
fwait
leave
xchg
test
mov
inc
cld
pop
fdivs
jg
mov
mov
out
in
hlt
mov
or
rcrl
ret
xlat
and
and
push
scas
cmc
stc
stos
mov
pop
insb
and
mov
cmp
clc
fiaddl
cwtl
mov
mov
fdivrs
cmc
dec
jno
iret
dec
inc
stos
in
out
push
xchg
mov
xchg
cmp
dec
rclb
jp
arpl
push
inc
inc
out
cwtl
ss
cltd
scas
shlb
pushl
xor
mov
xchg
push
daa
inc
and
movsb
loop
mov
subb
jmp
fldl
iret
imul
dec
sub
sub
icebp
out
cmp
subb
roll
push
aad
hlt
mov
xor
jb
jmp
pop
dec
pop
aaa
and
sub
or
inc
jo
mov
shrb
fbstp
dec
pop
test
push
cs
mov
scas
in
nop
jo
cmpb
jo
dec
push
ss
lods
icebp
or
cmp
jmp
aad
sahf
mov
nop
test
jns
or
mov
xor
lret
stos
scas
sbb
xchg
add
inc
push
insl
pop
sar
cmpsb
into
dec
insl
int3
xlat
push
add
es
nop
int3
jns
pop
ret
loope
cmp
push
push
xor
mov
arpl
and
repnz
pop
clc
push
test
push
mov
jge
sbb
stos
lret
and
pop
lret
imul
mov
lea
xchg
fcmovnb
outsb
mov
mov
call
push
dec
jmp
xlat
das
imul
lcall
xchg
push
mov
in
mov
adc
in
cmp
cmp
lds
rorl
cwtl
das
in
in
push
or
stos
mov
ss
insb
ficompl
adcl
mov
pop
hlt
scas
xchg
inc
insl
stos
mov
push
ret
cld
pop
loop
out
xor
push
pusha
movsb
icebp
mov
cltd
add
xor
mov
lock
out
jecxz
test
gs
dec
in
lock
inc
cmp
dec
jno
std
movsl
adc
push
pop
sbb
aaa
call
je
dec
sbb
ret
sbb
inc
jl
dec
mov
lahf
jp
stc
loopne
out
aam
lods
add
xor
cs
ret
mov
cmp
cmp
test
sbb
in
into
cmp
mov
mov
repz
mov
dec
and
in
test
pop
into
inc
and
dec
adc
xchg
cwtl
add
int3
sub
xor
testb
aas
ss
lods
xlat
inc
fmuls
pop
xchg
sbb
mov
pop
inc
daa
inc
xchg
push
insb
or
and
adc
aam
xchg
test
xor
jbe
int3
aaa
call
cmpsb
and
pop
xlat
lret
cmp
push
hlt
fwait
xchg
dec
dec
rol
rcrb
mov
xorl
jg
sbb
fs
nop
push
jns
std
mov
cmpb
cmp
push
pop
pop
xchg
mov
aad
in
sti
sbb
push
mov
lret
shl
lock
xor
and
fidivl
push
cmpsl
mov
cltd
loopne
and
sub
lcall
jle
imul
in
pusha
ficoml
mov
mov
leave
xchg
rcr
es
and
rcll
mov
mov
bnd
pop
push
call
insb
iret
fsubrl
inc
mov
adc
mov
into
fsubs
push
addr16
dec
mov
push
xor
nop
fldcw
xor
jecxz
je
frstor
or
sub
xchg
aas
xchg
xchg
scas
cltd
mov
repz
dec
dec
loope
xchg
or
in
in
dec
call
or
stos
pop
mov
bound
aas
pushf
inc
push
inc
fbld
and
fiaddl
lret
out
in
test
mulb
push
in
cld
mov
in
idivb
adc
inc
sub
mov
andl
dec
pusha
rorb
and
pop
mov
cmp
icebp
in
and
push
dec
mov
pop
pop
sar
dec
cmpsl
add
test
pop
mov
out
ds
xor
xlat
mov
xchg
inc
dec
jecxz
stos
fdiv
repz
xchg
repnz
fisubrl
dec
push
xchg
dec
xor
dec
das
add
pop
sti
add
and
sub
cmp
mov
xchg
push
fildll
jns
adc
mov
pop
ret
int3
or
inc
jl
adc
cmp
nop
and
and
adc
aad
cmp
ja
push
xchg
int3
aad
fcoms
mov
and
jno
inc
mov
ja
es
sub
dec
and
rclb
addl
sub
sbb
repz
sahf
dec
out
scas
fldt
ret
xor
and
cmp
in
sub
sbb
aam
dec
lcall
fcomip
inc
or
f2xm1
and
push
sub
cs
jp
fdivl
xchg
cmp
addl
mov
sub
jg
cld
inc
out
xor
push
mov
pop
pop
sub
sahf
jmp
inc
push
pop
add
scas
mov
and
rol
adc
imul
xchg
or
arpl
rol
scas
mov
iret
xor
pop
jae
pop
pushf
cmp
push
sbb
jp
sub
xchg
inc
fisubs
imul
fstpt
push
insb
icebp
adc
pusha
inc
push
push
add
mov
cli
push
mov
fcomp
sub
ret
pop
inc
add
fldt
add
stos
xchg
xchg
adc
lret
out
pop
adc
cmpsb
aaa
dec
adc
sbb
sub
arpl
cltd
and
mov
lds
cmc
in
mov
inc
xlat
sbbl
jno
jb
in
pop
mov
test
int3
jae
je
ljmp
in
xlat
in
adc
push
call
add
mov
xor
imul
addl
bound
fmuls
xor
push
pushl
xchg
cmpl
cmp
shlb
mov
cmc
out
bound
lret
mov
pop
push
dec
or
cwtl
bnd
cmpsb
push
jp
adc
and
pushf
or
push
lret
loope
cltd
mov
add
lods
and
adc
inc
inc
push
or
stos
movsl
movsl
enter
and
insl
notb
insl
outsb
sbbl
lock
jb
call
inc
mov
stos
pop
inc
mov
fsubrs
dec
pop
lret
scas
loop
aam
shlb
sbbb
and
int
aas
jge
mov
enter
dec
xor
jle
mov
and
add
ds
rclb
adcb
and
mov
jns
add
push
jnp
lea
pop
jns
jle
into
cmp
xor
inc
daa
fldt
andb
aam
sbb
je
rclb
mov
add
mov
cli
not
inc
mov
cmpsb
add
push
test
sti
pop
jecxz
sbb
cmp
out
mov
ljmp
dec
aas
lahf
sahf
xor
lods
inc
adc
adc
int
pusha
fistpl
int3
or
pop
xchg
sub
xor
rcrb
jl
mov
xchg
pop
das
sbb
movsb
jbe
andb
or
adc
and
jmp
outsb
push
sbbl
call
inc
mov
inc
sub
mov
and
adc
sahf
push
stos
xor
jmp
mov
aas
ffree
int3
stc
push
rcr
sbbl
jmp
std
mov
lds
mov
xchg
icebp
data16
in
int
pop
mov
pop
stos
pop
xchg
popf
dec
adc
ss
cmp
dec
cmpsb
mov
pusha
or
and
cmp
dec
add
mov
mov
jnp
out
add
or
repz
out
fwait
lret
das
mov
mov
mov
subl
pop
jo
dec
pop
daa
data16
adc
outsb
mov
out
movsb
push
mov
stc
es
insl
nop
inc
xchg
mov
jnp
lods
or
mov
dec
add
pop
in
adc
xor
and
pop
call
jmp
fcompl
cmp
push
dec
repz
sti
setp
dec
adc
ret
cmp
test
add
xor
inc
jecxz
cmc
fnstsw
jbe
mov
sahf
jae
mov
dec
mov
lods
pop
pop
mov
outsl
ret
repz
dec
sub
movb
and
pop
pop
pop
in
insb
cmpb
xchg
dec
cmp
inc
data16
in
jbe
mov
std
xchg
lret
loop
xor
mov
pop
stos
cltd
dec
stc
cli
jmp
pop
push
add
and
mul
pop
add
cwtl
imul
pop
ds
cmc
lcall
test
or
push
shrl
clc
hlt
mov
pop
rorl
pop
fists
xchg
sub
inc
pop
mov
inc
xor
inc
or
in
ret
jle
push
xor
aaa
push
test
sub
std
lods
scas
jo
xchg
xchg
jbe
jg
fists
mov
mov
dec
pop
or
mov
arpl
adc
mov
xor
lcall
jno
mov
fwait
cli
inc
popa
lcall
icebp
mov
sahf
daa
wrmsr
je
fisubrs
xor
roll
insl
cld
mov
cmp
jp
push
sub
js
mov
aaa
sub
mov
orl
sub
xor
stos
sub
inc
push
rcl
jge
in
jo
insb
loope
mov
jne
and
adc
lods
push
int3
or
xchg
int
in
jle
xor
cmp
xor
lahf
push
mov
loop
fcoml
inc
mov
clc
out
and
pop
vpsubusb
inc
push
out
jp
in
imul
xor
shl
dec
jg
dec
xor
mov
mulb
add
jno
xchg
jge
shrl
mov
loop
xchg
in
adc
mov
dec
adc
jp
fisubrl
xchg
loopne
into
ds
jne
movsb
push
mov
pop
lods
shlb
enter
push
xor
mov
sub
lods
mov
fistpll
and
test
push
or
mov
or
enter
pop
add
pop
jp
pop
push
jg
sub
lods
gs
or
enter
mov
xor
ficoms
sbb
jne
aas
arpl
test
xchg
mov
bound
xchg
mov
rcll
push
dec
int3
icebp
nop
sub
sahf
dec
inc
in
jle
out
xor
fsubl
data16
scas
sbb
mov
sbb
in
cli
push
jmp
stos
movsb
jp
pop
pop
out
dec
out
fnstenv
shlb
cmp
add
inc
js
into
fidivl
sbb
loop
adc
jmp
sub
adcl
or
inc
mov
daa
ret
and
push
sbb
or
inc
jle
inc
add
repnz
push
inc
or
xchg
dec
xchg
fmul
adc
push
pop
push
icebp
or
push
add
or
stos
jne
push
imul
push
xor
lea
aad
push
mov
shrb
sub
aaa
inc
dec
in
pop
lea
mov
inc
call
xor
jl
and
add
lods
push
test
icebp
jle
mov
lock
cld
loopne
push
stos
arpl
cmp
xchg
in
cwtl
pop
rcr
sbb
inc
and
cld
xchg
adc
jbe
sub
stos
call
cmp
imul
movsb
mov
rorl
xor
and
sbb
aam
push
add
cmpsl
mov
hlt
clc
inc
mov
xor
fistl
clc
adc
jbe
mov
jo
shrl
cld
loope
cli
cmp
sbb
lcall
out
sbb
clc
mov
cmp
ret
and
mov
and
fs
cmp
iret
gs
mov
orl
xor
jne
jle
xchg
push
add
fsubrs
repnz
movsb
xchg
cmp
mov
ljmp
cmp
mov
insb
jg
enter
cmc
mov
sbb
fdivrs
pop
adc
pusha
insl
and
add
pusha
push
xchg
mov
out
lcall
push
loopne
dec
leave
repz
xor
pop
div
push
mov
ljmp
insb
adc
xlat
mov
bound
inc
mov
cld
or
es
bound
jg
adc
js
xor
orb
pushf
cmp
add
sbb
insb
dec
and
or
out
dec
cmp
jge
lods
aam
movsb
or
xlat
loope
pop
fidivrs
in
fdivs
and
inc
ja
call
adc
pop
pop
or
inc
iret
mov
clc
dec
icebp
ret
mov
aaa
mov
inc
pop
dec
pusha
pop
mov
movntq
out
jmp
mov
dec
pop
pop
or
cmc
mov
shll
loopne
rcll
jae
jg
sbb
add
mov
adc
dec
xchg
xor
cs
arpl
stos
gs
fcompl
mov
mov
icebp
sbb
mov
push
sub
shlb
popf
mov
jbe
push
icebp
lahf
xchg
dec
cltd
cmp
mov
adc
outsb
jns
or
arpl
inc
into
inc
fs
adc
loop
shlb
sub
ja
adc
pushf
mov
mov
fpatan
ret
ljmp
inc
inc
bound
cld
push
in
inc
adc
xchg
mov
lods
enter
insl
pop
pop
scas
js
jmp
sub
pop
cmp
into
scas
orb
rorb
and
lret
jns
add
jp
or
pop
nop
arpl
out
lods
add
leave
add
adc
cmp
cwtl
jl
ja
xchg
les
dec
dec
jg
aad
or
imul
sbb
movsb
incl
or
std
cltd
insl
or
mov
xor
aam
stos
inc
nop
insb
data16
or
loopne
adc
or
push
fisubrl
xchg
cmp
xor
orb
loop
imul
lret
std
in
sahf
stc
pop
sub
xor
xchg
jmp
out
ret
notl
es
je
int3
jl
push
lea
and
call
cmp
fwait
xlat
pop
fldt
xorl
stc
repz
jle
cmp
mov
cmpsb
ljmp
lea
sub
pop
pop
jl
inc
push
add
rol
into
popa
leave
icebp
cmp
jnp
lret
mov
cwtl
xor
mov
sub
outsb
cmp
mov
into
jnp
fisubl
xchg
jl
sub
cmpb
pop
outsb
fidivrl
aad
hlt
pop
jg
xor
fsubr
mov
pop
aam
xor
ja
and
jb
jmp
insb
enter
adc
xor
push
ja
insl
cmp
nop
arpl
inc
js
loope
jo
sub
or
flds
aad
mov
jmp
sbb
lods
xchg
mov
imul
xorl
push
or
insb
xor
rorb
loope
cmp
fnstcw
das
mov
cmpsb
and
xchg
dec
inc
dec
movsb
roll
lock
cmp
in
xchg
cli
int
cli
or
cwtl
sub
or
ss
dec
pop
rcrb
xor
xchg
cs
ret
mov
xor
gs
push
scas
fildl
into
je
cmc
push
lret
imul
mov
jge
ret
mov
mov
xor
sahf
pop
es
sub
fcmovbe
ret
pop
pusha
dec
stos
mov
sbb
aas
xchg
or
xchg
mov
cs
je
mov
cmp
mov
mov
out
mov
and
mov
inc
das
js
sbb
and
push
lods
mov
inc
dec
stc
push
adcl
mov
sbb
mov
adc
push
xor
lods
outsl
aam
pop
xchg
jecxz
sahf
xor
test
sub
xor
jbe
fcoms
inc
aaa
testl
mov
jl
flds
inc
test
cli
cmc
add
aaa
sub
adc
jne
and
cmpsb
stc
xchg
outsb
loopne
xchg
loopne
fldl
inc
sub
pop
lock
ret
jle
jmp
faddl
mov
lahf
jl
in
push
pop
lds
pusha
mov
add
aad
xchg
jmp
add
repz
insl
dec
jbe
loope
cmpsl
ljmp
inc
aad
sbb
daa
ja
push
mov
jb
or
push
sub
loop
mov
and
jmp
push
mov
fsubrs
mov
jmp
sbb
xor
pop
out
sub
jge
shlb
inc
iret
pop
push
loop
inc
es
add
lea
inc
xchg
mov
add
neg
mov
lret
inc
test
add
or
jmp
push
dec
adc
mov
or
mov
push
je
add
add
adc
cmp
int3
xchg
or
add
sbb
aas
adc
dec
jmp
pop
jb
jnp
bound
mov
pusha
sbb
int
mov
loopne
jne
add
push
jecxz
aad
stc
cmpsb
das
xor
call
cs
fst
loope
cmp
loope
movsl
push
jbe
enter
mov
aad
movsl
cmpsl
stos
mov
insb
pop
and
arpl
jmp
pop
and
es
out
lds
shlb
fldcw
pop
lret
jp
sub
lret
lods
xchg
aad
loope
mov
iret
dec
rep
imul
nop
mov
cld
or
mov
xchg
xor
shll
inc
rcll
xchg
mov
xchg
test
mov
pop
std
xchg
icebp
enter
inc
jg
xor
sub
sub
out
cmp
pand
and
cmp
popa
out
and
ljmp
dec
pusha
add
loop
pop
xchg
dec
pop
jmp
or
in
fwait
mov
jmp
pop
sbb
cmp
inc
push
es
mov
xor
cld
pop
pop
xor
sub
jae
or
aad
mov
dec
les
xorl
lods
lds
movb
jg
jns
xor
pop
repnz
jb
adc
aas
fwait
aaa
lds
stc
inc
jnp
jnp
xchg
add
cmp
js
sub
cmc
cmp
jb
test
jbe
jmp
arpl
sti
adc
imul
and
mov
mov
test
jne
stos
int3
push
sbbl
xchg
xchg
push
aad
dec
or
push
scas
not
pop
hlt
push
xchg
pop
or
sbb
adcl
sub
dec
push
shrl
jb
jbe
pop
lock
xchg
sbb
lods
out
mov
sub
mov
out
mov
xor
push
or
mov
sub
pop
sub
in
test
lods
stos
inc
inc
and
shll
cli
push
pop
cmpsb
into
push
sub
ret
cmc
andl
mov
aaa
lea
sbb
mov
test
fldl
fdivl
scas
ja
mov
jmp
popa
xchg
fwait
int
or
xchg
cmp
fiadds
loop
mov
mov
test
int
and
dec
in
and
add
out
das
sbb
stos
pop
nop
sub
test
push
sub
xchg
mov
out
mov
jne
loopne
jecxz
shll
hlt
xor
and
mov
pop
pop
cs
xchg
sysenter
in
adc
lock
pop
pushl
rcrl
push
push
or
jle
jo
inc
pushf
insl
xor
mov
ss
mov
xorb
mov
arpl
xor
xlat
dec
sub
jbe
lods
int3
test
movsl
mov
gs
mov
stos
pop
in
in
das
xchg
insl
clc
rclb
clc
dec
push
in
ficoml
andl
jne
or
out
imul
pop
lock
cmc
push
pop
in
imul
adc
mov
mov
jnp
and
enter
sub
gs
sub
aad
ret
scas
daa
pushf
or
loopne
add
cld
mov
clc
sbb
outsb
mull
push
cltd
mov
jmp
mov
iret
mov
inc
mov
shl
mov
mov
int
mov
lret
outsb
mov
sbb
iret
push
and
movsb
inc
cltd
fisubrl
xor
push
and
jg
lahf
ljmp
enter
pusha
scas
faddp
push
out
push
in
cld
and
jp
das
adc
pop
sub
mov
std
lcall
mov
xchg
sbb
or
aaa
ljmp
jecxz
mov
idivb
xor
xchg
sub
jl
out
sbb
and
cmp
shlb
js
jp
data16
adc
data16
sbb
addr16
loop
mov
mov
arpl
insb
gs
fxch
sub
jbe
dec
jne
out
fcmovne
nop
test
or
stos
xchg
mov
add
lods
xor
aaa
stos
in
add
sbb
xlat
out
push
cmp
inc
mov
xchg
in
mov
ja
dec
mov
outsb
adc
int3
fcmovnb
jno
cld
push
repnz
out
ficompl
cmp
mov
ss
out
int
mov
xor
dec
push
or
pop
jns
cmp
pop
sbb
jp
pop
cli
test
mov
dec
push
dec
daa
sti
cli
xchg
out
fisubs
pop
lods
pop
pop
popf
cmp
stos
stos
int
dec
gs
mov
xchg
pop
test
add
lods
pop
jg
imul
sti
in
sahf
xchg
movsb
sub
adc
xor
arpl
inc
les
orl
mov
jl
xorl
rol
pop
xchg
popf
test
imul
daa
in
mov
std
xchg
loope
clc
cld
inc
shlb
inc
and
mov
sti
mov
lret
in
and
imul
jp
xor
or
pop
and
gs
imul
lahf
pop
pop
mov
add
sti
push
nop
cmpsb
dec
push
xchg
idiv
subb
fcompl
sub
call
hlt
pop
out
jg
mov
pop
pop
shrb
ret
inc
mov
push
int3
loop
jne
outsb
incb
xor
cmpsl
sub
mov
mov
add
rol
mov
sbb
in
ds
insb
sub
jecxz
and
in
mov
in
jp
mov
pop
aad
hlt
dec
xchg
xchg
ja
jbe
push
mov
sub
push
iret
sub
xor
ret
mov
xchg
lret
mov
pop
cs
cmp
out
pop
mov
xchg
sub
or
sub
scas
fscale
xor
ret
in
and
sbb
inc
adc
idiv
in
push
mov
inc
push
gs
pop
cltd
mov
daa
in
sbb
repz
mov
popf
or
mov
cmp
int
jns
shrl
push
inc
testb
mov
add
ja
xchg
cmp
jnp
xchg
in
aaa
in
inc
fcomi
xor
xor
jbe
xor
mov
dec
insl
inc
in
shrb
and
adc
scas
mov
push
and
jbe
mov
dec
mov
imulb
and
mov
sahf
es
or
or
dec
call
stos
int3
rolb
mov
mov
cmc
push
and
mov
dec
jecxz
lds
xor
adc
adcb
add
or
out
inc
in
adc
sbb
int3
push
in
leave
sbb
out
xchg
sub
mov
cmp
es
push
jae
pop
mov
mov
lea
stos
sbb
jo
lret
test
pop
pop
mov
fnsave
test
sbb
loope
mov
jno
movsb
fisubl
lods
jmp
jl
popf
sbb
enter
out
bound
aam
or
push
addr16
mov
fcmovnb
or
add
cmp
or
enter
fsubp
mov
stos
decl
mov
scas
es
sub
fbstp
jbe
lcall
pusha
push
add
repnz
xchg
test
xor
sub
cli
and
int
dec
les
xchg
lahf
orb
push
daa
int
xor
in
movsl
out
leave
xor
pop
or
or
sub
pop
in
or
xor
cmp
xor
mov
cmp
xor
inc
dec
lret
add
test
imul
adc
seta
xchg
stc
pop
icebp
mov
or
mov
jge
xor
add
loope
lret
stos
and
or
mov
outsb
xor
imul
inc
inc
imul
aas
enter
hlt
inc
dec
push
add
stos
andl
movsl
ds
pop
pop
add
or
inc
and
xchg
push
sbb
dec
mov
pop
loope
push
filds
xchg
cmp
adc
dec
mov
push
cmp
mull
mov
lea
push
lods
push
dec
iret
outsb
idivl
mov
pop
push
mull
xor
push
xlat
adc
push
pop
andl
sub
cli
push
out
inc
mov
xchg
pop
xor
sub
jb
mov
lret
cmp
mov
cmp
mov
icebp
repnz
add
in
mov
inc
or
xchg
mov
adc
fsubl
xor
test
sbb
xchg
lret
mov
into
pop
stos
pop
mov
push
push
aas
lock
sub
call
sub
loopne
sbb
xor
cmp
iret
gs
xchg
movsb
sub
scas
arpl
push
or
push
aam
cld
jnp
imul
mov
xor
jae
cmp
int3
xchg
jmp
mov
in
rclb
pop
pop
push
jo
ds
lahf
dec
xchg
shlb
pusha
mov
sahf
imul
aaa
cmp
adc
mov
sarb
sub
loope
sbb
adc
jle
rolb
test
sub
shlb
push
mov
sub
int3
inc
jmp
cltd
sbb
pop
sbb
push
lcall
pop
mov
inc
mov
or
mov
cmp
pop
fsubrs
das
cli
popf
inc
cmc
pop
lds
add
loope
push
push
std
jp
outsl
adcb
push
push
xor
inc
sub
or
mov
mov
xor
lahf
lret
and
repnz
lret
adc
js
imul
fcoms
inc
int3
xor
popa
mov
out
push
cmp
jne
mov
ss
mov
loopne
inc
jae
sbb
adc
jmp
xchg
xchg
cmp
dec
mov
in
mov
jo
clc
cmpsl
fstp
push
mov
inc
pop
mov
outsb
xchg
fwait
sub
sarl
cmc
imul
pop
mov
jp
mov
imul
inc
jmp
mov
cmp
orb
xor
xchg
ds
sti
pop
xor
lods
mov
fcompl
push
mov
mov
xor
and
dec
dec
sti
mov
pop
jo
cli
cmovl
inc
adc
fwait
daa
icebp
repnz
cld
stc
pop
mov
dec
pop
xchg
cmpsb
test
mov
out
jl
imul
dec
fists
xor
jecxz
movsb
les
adc
fwait
in
cmp
dec
cwtl
insl
adc
jle
adc
popa
adc
fs
mulb
cmp
loope
push
jbe
lcall
cmpsb
lahf
mov
push
sbb
leave
add
dec
mov
outsl
es
mov
into
aam
jbe
xchg
cmp
dec
pop
cmp
popf
xor
nop
ds
ret
cmp
dec
aad
call
imul
inc
xchg
data16
lds
adc
aam
or
or
add
lret
or
dec
push
std
jl
xchg
adc
and
sub
inc
out
jne
and
mov
lds
jno
jecxz
pop
add
or
sbb
jb
lods
sti
enter
pop
cmp
fwait
in
sbb
cmpsb
out
and
or
loopne
es
dec
lods
push
xor
nop
dec
lock
arpl
movsb
sti
stos
out
xorl
dec
pop
ljmp
aaa
sub
fs
dec
rcrw
jne
jp
shlb
pop
rclb
jge
xor
ja
ljmp
xchg
rolb
sub
xchg
cmp
dec
adc
mov
push
xchg
aas
jmp
or
add
rorl
dec
cmc
imul
mov
adc
dec
andl
xor
cmpsl
lea
iret
mov
or
gs
fisttps
push
mov
ss
gs
ror
pop
mov
xor
insb
mov
data16
repz
iret
xchg
std
mov
mov
stos
pushf
push
imul
outsb
pop
leave
adc
test
das
dec
pop
and
insb
imul
jmp
mov
lods
push
mov
dec
enter
inc
pop
cli
test
repz
js
into
pop
dec
movsl
adc
add
add
lcall
stos
orb
test
mov
popa
xor
out
xchg
addr16
rdmsr
jb
ret
cmp
push
adc
xchg
and
adc
push
cs
push
pop
push
push
andb
je
add
into
inc
jo
cltd
loope
adc
or
sbb
int3
std
add
pop
add
shll
lret
add
sub
mov
stos
inc
adc
loope
cmp
dec
clc
push
and
xor
mov
and
push
push
stos
lods
cmp
fdivrl
xchg
mov
push
psrlw
or
lahf
cmp
repz
jmp
cli
cmp
test
adc
leave
xchg
loope
shl
xor
imull
mov
stc
fsubrs
inc
mov
mov
loopne
arpl
jnp
inc
push
insb
and
add
xchg
inc
pop
jns
loop
shll
cmp
sbb
fildl
lcall
je
mov
xchg
and
subb
mov
and
jmp
push
or
add
repz
inc
xchg
cli
ljmp
xlat
push
or
cmp
std
hlt
sbb
push
stos
pushl
in
mov
test
rcrl
cmp
adc
cmp
fsubrs
add
pop
or
xor
addl
fcoml
xlat
push
in
fcmovne
loopne
or
jle
int3
arpl
jae
jge
sti
test
adc
cmp
sub
dec
adcl
jle
jp
add
mov
mov
add
push
imul
xchg
fwait
xchg
loop
ja
xchg
mov
cld
jne
dec
fmuls
into
outsb
lret
test
loopne
lods
add
hlt
add
mov
xchg
fbld
stos
js
mov
dec
cmp
sbb
rorb
or
lret
insb
mov
cmp
adc
or
shll
aad
enter
fisubrs
dec
add
and
add
and
int
scas
fwait
xchg
add
xor
jnp
stos
es
pop
add
xchg
add
out
mov
loop
loop
cmp
jns
je
xchg
sysret
aaa
lahf
push
sub
leave
pop
cmp
jne
xchg
mov
test
inc
dec
stc
xor
mov
aas
adc
es
lea
inc
sbb
mov
repnz
je
fsubr
insl
adc
fstps
adc
hlt
int3
pop
shrl
or
mov
pop
cmc
add
mov
cmp
mov
inc
imul
pop
pushf
mov
int
jg
mov
or
addr16
enter
fsubp
mov
dec
and
fwait
lret
xchg
mov
push
mov
fmull
cs
mov
jb
xchg
and
add
sbb
pop
add
out
pushf
mov
jbe
push
int3
in
jno
jge
in
ja
mov
in
pop
mov
sub
mov
gs
ja,pn
addl
xchg
lods
cmp
int
cltd
jne
lods
pop
mov
inc
inc
and
and
nop
mov
mov
sub
int
and
ret
jle
sbb
cmpl
or
push
mov
xor
jg
out
or
dec
ja
xchg
sahf
mov
enter
gs
test
jl
in
and
subb
jge
jno
sbb
jno
push
nop
mov
cmp
xor
mull
sbb
es
sub
shl
imull
dec
jl
iret
in
mov
mov
or
rcrb
cwtd
mov
scas
imul
lds
divl
mov
ss
aad
xlat
dec
dec
aad
or
jge
inc
mov
dec
mov
or
add
pushf
xchg
notl
outsb
mov
movsl
lods
mov
cmp
sti
mov
adc
inc
inc
inc
loop
dec
push
jl
scas
xlat
repz
iret
sub
popf
test
push
sbb
jge
outsb
sbb
mov
icebp
mov
loope
mov
inc
xchg
out
sarb
mov
add
mov
adc
sub
fstl
mov
je
sbb
cmp
pushf
push
movsl
pop
cld
mov
mov
jmp
dec
inc
xchg
daa
loopne
cld
fstp
add
xor
fisttpl
orb
hlt
cmp
stos
lock
xchg
cltd
jge
lds
popf
cmpb
xorb
rclb
mov
sub
add
sub
adc
std
dec
xchg
sbbl
fisubl
call
leave
sbb
adc
sub
insl
subb
push
mov
mov
lods
jge
mov
and
dec
mov
in
push
scas
push
xchg
mov
popa
fidivrs
cmp
sbb
les
pop
sub
lcall
xchg
pop
mov
and
inc
mov
jns
inc
pop
addr16
xchg
xchg
mov
lcall
adcb
add
add
mov
fnstenv
sti
scas
daa
mov
mov
mov
es
sarl
movsb
iret
mul
adc
dec
push
adc
or
notb
enter
sti
lock
jmp
add
xchg
jecxz
aas
mov
xlat
lock
sub
dec
mov
and
mov
mov
lea
lahf
es
jae
addr16
imul
xchg
test
ljmp
xor
in
jne
insb
sub
dec
xorl
cmp
jl
inc
orb
cmp
lods
cmp
pusha
lods
sahf
or
out
pop
mov
mov
jg
mov
add
cmp
adc
cmpsl
or
push
mov
inc
lods
rorl
mov
pusha
stos
dec
jo
pop
push
es
cmp
push
ja
push
jne
inc
or
and
jns
pop
adcb
mov
pop
imul
push
les
push
and
dec
lret
jne
leave
cmovne
bound
popl
xor
repz
push
pop
negl
aam
and
aam
push
xchg
aas
out
dec
cltd
repnz
xor
js
out
and
stc
aam
push
repnz
pop
mov
mov
or
mov
jne
out
add
leave
movsb
xchg
mov
cmp
xor
or
ja
sti
cmc
xchg
pusha
je
xor
fidivrs
sub
push
stos
pop
stc
int
loope
mov
dec
mov
lcall
stos
inc
mov
cwtl
flds
pop
subb
xchg
test
rorb
jle
outsl
sti
clc
lcall
add
jecxz
je
xor
sub
push
jbe
xor
in
enter
inc
jnp
adc
rol
sahf
loopne
data16
cli
xor
pop
out
rcl
sahf
sahf
push
pop
imul
add
add
ret
jmp
xchg
movsb
fnstcw
xor
or
mov
cmp
push
adc
jecxz
mov
lret
aam
ficoms
mov
in
xor
fnstenv
fcomps
inc
pop
ljmp
pushf
jne
test
dec
mov
and
xchg
loop
inc
jp
jns
mov
out
lods
fsubrl
pop
pop
js
fadd
cmc
test
pop
xchg
je
xor
xor
cmpsb
pusha
mov
add
pop
scas
lds
jbe
out
mov
shrl
cmc
cmp
mov
pop
or
push
test
mov
out
push
jle
aaa
fistpll
arpl
pop
mov
mov
pop
sbb
add
and
sub
xchg
mov
into
mov
jnp
jbe
popf
push
clc
cmpsl
mov
xor
test
cmpsb
aam
imul
jecxz
inc
pop
divl
lods
es
push
xor
dec
push
cli
xor
cmpsl
pushf
jl
xor
lods
cmpl
push
aad
lds
jmp
mov
shrl
dec
arpl
scas
aas
push
xor
bound
pop
cs
mov
sbb
and
orl
jne
jge
or
pop
push
popa
int3
push
lcall
mov
jge
lret
jnp
xchg
mov
rclb
iret
add
shl
lds
xor
sbb
es
dec
cltd
jmp
ret
mov
jb
inc
repnz
pop
mov
out
dec
lock
jmp
test
push
add
push
fwait
jne
dec
rorb
and
pop
jp
mov
out
lock
mov
sarl
out
clc
addr16
insb
sbb
popf
sub
and
lods
aad
call
xchg
lret
xor
aad
das
dec
cwtl
adc
mov
mov
cmp
cltd
mov
jle
adc
je
add
insb
push
arpl
push
gs
aad
adc
ret
js
divb
adc
mov
mov
adc
out
cltd
fsubrs
xchg
pop
mov
dec
xor
scas
adc
or
sbbb
inc
mov
xor
mov
jp
imul
sub
nop
inc
mov
cmp
dec
dec
mov
cmp
jle
fcmovbe
mov
gs
push
push
jnp
adc
xchg
adc
and
repnz
push
out
out
pop
add
cmp
cmp
xorl
jo
cwtl
jo
repz
pusha
jb
out
cwtl
testl
xchg
stos
xchg
addr16
hlt
fdivrl
sbb
mov
jmp
and
dec
aam
int
xor
sub
or
xor
or
push
pop
sbb
mov
jne
mov
sbb
jle
dec
pop
push
das
inc
or
sub
rep
mov
loop
shll
out
cmp
lea
cmpsl
rolb
cmp
xchg
cli
fs
mov
adc
out
jmp
ror
cld
aad
cmp
mov
or
dec
lock
fisttpl
pop
out
pop
xchg
scas
je
shrl
push
popf
iret
sbb
xchg
xchg
xchg
jno
push
pusha
fcomi
xchg
or
sub
ja
lcall
push
xor
cmpsb
or
dec
sti
fiadds
mov
add
shr
lret
pop
fistl
ret
insl
sub
xchg
push
sbb
loop
dec
jne
sbb
movups
movsl
pop
mov
pop
popa
mov
or
mov
sbb
push
adcl
cltd
nop
xorb
enter
out
jle
imul
scas
aaa
sbb
mov
jl
out
sbb
push
mov
add
scas
sub
xor
adc
popa
sbb
out
add
mov
pop
sti
insb
insb
sbb
enter
xchg
push
inc
outsb
xor
mov
or
cltd
stos
movsb
fidivs
push
jmp
mov
adc
daa
sub
imul
test
or
jp
pop
arpl
push
sub
pusha
dec
cs
xor
push
cmp
cmp
movsb
cmp
dec
adc
movsb
ljmp
mov
xchg
cmp
cmpsb
imul
push
xor
test
jl
test
pop
inc
mov
add
das
adc
sub
sbb
push
fstpt
sub
inc
xor
adc
mov
jmp
les
arpl
and
out
jmp
testl
pop
jbe
xchg
rcr
xor
pop
xor
outsl
xor
mov
push
sarb
jmp
mov
mov
xchg
lds
inc
pop
out
and
fs
sbb
out
sub
mov
notb
sarl
jb
mov
cli
mov
add
imul
leave
adc
ret
mov
sti
and
lcall
lods
loope
mov
cld
fnstcw
stc
inc
test
xchg
std
mov
cltd
jle
lcall
ss
ret
jp
fsts
push
xor
repnz
adc
sbb
cld
cmc
ret
out
mov
xchg
fisttpl
mov
dec
inc
decb
xchg
adc
cmp
daa
pop
cltd
dec
jge
cmp
push
mov
jle
adc
sbb
mov
ret
pop
aas
cmp
xor
add
xchg
push
pop
in
xor
jg
and
and
sahf
jbe
inc
stc
out
pop
popf
mov
icebp
lods
fcomps
xchg
push
fdiv
mov
jp
call
xchg
cmc
xor
push
push
dec
mov
pop
jo
mov
std
adcb
pop
gs
data16
push
cli
jl
fwait
inc
jge
xor
add
jmp
cmp
dec
push
xlat
push
jae
jle
insl
sbb
jp
mov
adc
imulb
sub
mov
lret
mov
mov
jae
lods
pop
data16
stos
pop
divl
pop
xor
cmp
nop
cmp
dec
mov
es
divl
sbb
mov
loop
adc
push
sti
push
js
rcr
scas
and
pop
aaa
jne
dec
pop
repnz
inc
push
testb
mov
push
mov
dec
das
popl
dec
out
sarb
scas
push
lret
pop
push
sbb
addr16
dec
js
xchg
jbe
sbb
xchg
out
jae
jae
xchg
mov
gs
xchg
dec
or
jp
scas
inc
lods
adc
pop
xor
pop
rcrl
xchg
and
sbb
outsb
jge
fucomi
mov
mov
ror
shrb
push
jle
sbb
mov
push
ret
out
cmp
out
dec
pop
test
repnz
jl
xchg
dec
mov
lods
test
mov
xorb
int3
cs
or
frstor
arpl
push
xor
xchg
and
int3
outsb
xchg
stos
add
fs
push
mov
and
outsl
sub
mov
flds
add
mov
ficomps
xor
jo
fisttps
pop
outsl
insl
xchg
sub
pop
js
mov
shll
push
jns
inc
les
pop
xor
mov
xchg
popw
mov
cmp
cmove
and
je
subb
dec
sahf
leave
in
xchg
pop
jae
xchg
lods
push
inc
sarl
mov
js
adc
repz
repz
divl
hlt
popf
inc
inc
jne
pushf
jge
cli
mov
in
int3
imul
xor
inc
push
cli
les
pushf
jge
jl
loopne
jns
ret
imul
testl
and
cld
das
sub
aad
sti
sahf
movl
incl
sub
inc
jae
sbb
mov
mov
adc
lahf
into
das
sbb
lock
call
aam
loop
pop
fucom
gs
xorb
mov
popf
xlat
ret
jb
clc
mov
sbb
in
jg
xchg
addl
mov
repz
in
xorb
inc
aas
sti
dec
movsl
sahf
aaa
enter
jmp
shlb
rorl
sbb
add
and
xor
jbe
fdivrs
push
push
xchg
jb
pop
jp
lea
cmp
jg
or
test
addb
pop
lods
test
adc
shlb
mov
fs
fwait
icebp
dec
push
pop
mov
dec
idiv
lret
add
xor
fisubl
push
jg
leave
les
ret
rcll
mov
xchg
pop
sarb
aaa
jg
adc
xchg
int
push
jp
cwtl
xor
and
xor
fidivrl
dec
popa
bound
loopne
clc
in
mov
add
les
cmp
inc
cmc
sbbl
cmp
bound
ficompl
aaa
cmpsb
jle
lock
fwait
inc
loopne
aas
jecxz
and
into
inc
jbe
ljmp
inc
xor
nop
sbb
xchg
pop
sahf
pushf
loopne
mov
out
mov
xor
jbe
inc
pop
insl
add
jns
add
xchg
push
mov
lods
out
cmpsl
and
sbb
sub
lret
decb
pop
hlt
out
out
xchg
imul
cwtl
xchg
push
sti
notb
dec
cmpsl
xlat
xchg
mov
dec
fldt
mov
mov
arpl
jl
mov
mov
orb
ret
jecxz
cmc
or
dec
inc
cmp
dec
mov
add
mov
xor
jbe
push
lock
and
push
sbb
adc
dec
icebp
pop
xchg
mov
call
pop
push
jg
ret
mov
mov
lods
xor
push
into
mov
mov
lods
mov
add
mov
cmpsb
or
mov
movsl
mov
lret
or
mov
enter
lret
test
inc
add
pop
and
mov
daa
jae
loope
mov
inc
lds
stos
loop
cmpsb
pop
data16
sbb
sub
test
cmpb
and
sbb
adc
stc
sahf
cmc
push
leave
jge
and
mov
dec
sub
pushf
test
mov
shll
cwtl
outsl
mov
inc
add
mov
shlb
bt
jno
pop
push
jl
mov
add
scas
add
mov
push
sbb
lods
adc
xor
imul
cli
xor
jno
add
pushf
add
cmp
loop
sub
out
ret
mov
jp
mov
sbb
sub
jae
repnz
sub
mov
insl
inc
cli
or
jmp
cmp
enter
in
loop
xor
dec
dec
fdivrs
pop
lods
out
dec
out
or
mov
subl
repz
mov
lods
jbe
pop
xchg
jge
mov
fnstsw
xor
pop
sub
adc
xor
sbb
sub
out
hlt
lret
and
inc
fbld
push
rclb
or
fstpl
out
fldpi
fcomps
call
cld
push
mov
mov
into
add
xlat
fldl
fwait
dec
jmp
mov
jae
rcll
aaa
mov
js
icebp
xchg
cmpsl
xchg
rorl
insl
in
mov
cmp
int3
push
nop
mov
rorb
jle
dec
aad
xchg
sub
lods
orl
lods
jmp
ret
inc
insl
xor
mov
hlt
enter
daa
ret
rcll
dec
cmp
push
cmp
ret
notl
fsub
call
push
ja
mov
cmpsl
das
pop
cmp
imull
leave
mov
ljmp
mov
aas
loop
fs
inc
aaa
out
jmp
cmp
xlat
call
or
iret
inc
xlat
pop
mov
mov
aas
xor
pusha
push
std
fcomps
movsl
ficoml
stc
inc
fisubrl
cmp
mov
jl
mov
inc
rorl
dec
and
or
add
add
dec
out
cli
mov
addr16
mov
jg
and
enter
cmp
mov
mov
mull
rcll
fisttpll
xor
pop
leave
push
mov
adc
mov
and
in
push
xlat
mov
mov
and
cmp
mul
jne
xor
sbb
xor
cmp
jmp
aam
scas
mov
jne
lcall
and
fdivrl
sub
add
mov
pop
jno
shrb
mov
inc
cmp
mov
and
jmp
out
out
sahf
fsubrl
outsl
mov
or
cmc
test
sti
sub
sarb
in
pop
sbb
jmp
out
push
or
or
fisttpll
out
jl
sbb
and
mov
cld
out
loop
jmp
cmpsl
ss
sbb
mov
adc
mov
es
xchg
xor
shrl
ret
std
jecxz
dec
inc
lret
xlat
xchg
adc
push
sarb
or
push
push
dec
cltd
les
inc
xor
mov
insl
push
dec
lcall
adc
ret
mov
movsl
push
push
fistps
add
pop
mov
imul
pop
or
pop
mov
dec
test
pop
int3
or
fidivl
cmp
cmc
pop
mov
lods
sahf
cld
jb
js
cmp
jns
cmp
push
mov
in
cwtl
push
lods
jmp
out
cmp
jmp
pop
inc
scas
jo
mov
xchg
aad
sbb
rolb
addb
adc
adc
fisubs
out
push
jae
push
push
sbb
cmpsl
call
sarb
es
pop
aad
sub
sbb
out
sbb
outsb
dec
mov
cld
cmc
pushf
fbld
mov
insl
sbb
fxch
mov
data16
adc
pop
jge
mov
cmp
dec
inc
lock
pop
fisubrl
call
data16
cli
mov
leave
fs
adc
daa
inc
cmc
scas
sub
push
je
stos
test
je
jg
in
addr16
cmp
add
popa
add
pop
mov
pop
rcr
adc
cmc
hlt
sahf
sahf
or
leave
jmp
push
jno
out
xchg
push
ret
push
jl
gs
fs
pop
iret
sub
fidivrs
enter
cmpsl
rorl
mov
movsl
mov
and
adc
push
mov
pop
pop
ficompl
push
ja
inc
pop
xor
ljmp
dec
sub
test
inc
add
or
test
jg
std
or
insb
bound
mov
stc
mov
jnp
push
scas
sbb
in
flds
mov
scas
cmp
cmp
and
fs
jo
dec
pop
inc
insl
fmulp
xor
sub
inc
adc
insb
addr16
rorb
sbb
outsb
inc
push
push
lds
outsl
mov
imul
push
cmpsl
xchg
inc
orb
pop
jmp
fiaddl
mov
sbb
cltd
push
ljmp
lahf
leave
lods
ljmp
mov
adc
inc
lahf
xchg
into
and
cmpb
movsb
lods
or
out
fs
sub
sbb
jnp
xor
dec
xor
test
in
cmp
mov
stos
push
push
scas
int
roll
cmc
addr16
mov
dec
pop
mov
ljmp
imul
fistl
mov
jbe
sbb
popf
xchg
cwtl
sarb
pop
ss
jbe
pop
imul
fstpt
lret
or
test
and
sti
repz
mov
xchg
cmp
icebp
or
push
test
call
clc
jne
out
cmpsb
pushf
lock
bound
arpl
push
push
push
sub
daa
mov
mov
push
and
sbb
push
hlt
pushf
test
enter
jne
xchg
dec
or
pop
or
inc
ss
pop
fxch
sbb
pusha
jbe
popf
push
test
fcomi
sub
cmp
es
xchg
adcl
push
fsubrl
mov
mov
xlat
xchg
arpl
out
mov
cmp
jmp
mov
enter
int
push
mov
aaa
negb
xor
pop
jo
cmpsb
pusha
add
adc
pusha
push
cmpsl
cmp
jl
dec
sbb
lcall
inc
repnz
outsl
jno
cmp
jo
gs
adc
jnp
inc
add
push
and
jb,pt
out
cli
or
adc
cld
stc
cwtl
add
mov
jge
in
cmc
fdiv
pcmpgtd
cli
shlb
cli
mov
inc
stc
mov
sub
sub
or
out
and
mov
fdivs
lods
in
adc
mov
add
pop
inc
pop
mov
popf
push
into
xor
call
mov
add
xor
jnp
xor
pop
mov
lret
out
or
push
pop
add
inc
jecxz
jle
in
stos
cltd
xor
out
xchg
in
or
fldenv
imul
xchg
test
dec
scas
jmp
orb
jge
sbbl
pop
mov
daa
and
movsb
imul
inc
inc
in
fistpll
lret
clc
sti
popf
sahf
inc
and
mov
aaa
fistpl
inc
adc
add
movsb
mov
lret
out
loope
inc
cmp
fwait
xor
cmp
or
out
sbb
dec
mov
mov
cwtl
cs
test
mov
stos
fimuls
inc
jne
push
jecxz
push
ss
cli
mov
fwait
pop
lret
mov
ja
test
add
inc
pop
xchg
pop
inc
int
sbb
add
xorb
push
cs
inc
out
int
in
xlat
adcl
push
cmpsl
daa
jmp
ficoms
popf
pop
aam
mov
xor
and
fistl
mov
pop
jge
mov
aam
icebp
dec
test
sub
cwtl
pop
pop
int3
js
ret
out
pop
sbb
sbb
xchg
pop
in
add
loope
adc
dec
push
xlat
cmc
lock
jno
fisubs
mov
jns
ds
fists
andb
in
mov
jge
push
cli
mov
dec
test
popl
dec
inc
add
in
andb
xchg
std
test
dec
out
addr16
xchg
jno
shll
ja
push
out
clc
fsts
hlt
jbe
data16
repnz
xor
push
pop
outsl
push
cmp
xor
loop
jg
insb
add
fbstp
xor
int3
aas
and
fnstcw
fcomip
adc
mov
lock
loope
or
aaa
pusha
andb
mov
mov
push
lret
shlb
hlt
lcall
xor
popa
mov
int3
adc
pop
push
das
cld
mov
push
sub
pop
shlb
sub
rorb
int
lds
adc
and
fwait
mov
lret
or
pop
shlb
xchg
loope
mov
inc
cmp
adc
push
and
insl
mov
jb
cld
int
std
or
ss
add
js
xor
cmp
mov
sub
push
jnp
je
imul
add
and
aam
das
push
jge
cmp
mov
xchg
or
jp
ss
repnz
in
jmp
or
inc
je
mov
xor
sbb
push
cltd
and
jge
cmp
jge
push
dec
aas
mov
ja
int3
sub
fsubp
pop
call
sbb
rolb
stc
aam
xor
xchg
fisubs
cmovl
jns
ljmp
pop
add
push
ja
stos
lods
pop
cmpsb
loopne
mov
out
jne
push
push
imul
xor
repz
xor
mov
iret
mov
pop
sbb
in
mov
sti
gs
roll
aas
mov
dec
idiv
enter
mov
mov
je
daa
mov
lret
mov
sbb
std
sbb
push
xlat
adc
jmp
pop
fiaddl
add
mov
pusha
push
jl
sub
xchg
push
xorb
push
pop
fimuls
test
cmp
rol
je
or
mov
stos
fistpll
mov
or
outsb
push
sarl
lcall
dec
insl
jb
mov
jecxz
xorl
lods
xchg
jmp
inc
movsb
jle
scas
out
lret
and
sbb
inc
out
inc
loop
mov
jb
rcll
and
mov
popa
or
out
sti
xor
inc
leave
xor
cs
out
jge
stos
lahf
test
out
cmpsl
fsubrs
xchg
fs
fbstp
pop
jb
pop
xor
and
daa
and
mov
ret
jae
cmpl
es
pop
cld
js
jl
adc
mov
mov
dec
mov
fimuls
jmp
movsl
and
ss
mov
push
or
sub
push
mov
out
js
adc
xchg
adc
push
push
enter
dec
and
pop
push
xchg
aaa
out
ja
orl
pop
subb
stos
mov
or
imul
int
imul
push
jecxz
push
add
jle
mov
mov
es
dec
repz
mov
ud0
lea
fs
sbb
imul
pushf
dec
movsl
jge
sbb
lcall
pop
inc
outsl
and
mov
stc
sub
xor
cltd
sub
xor
mov
jnp
adc
aam
das
xor
jmp
add
rclb
dec
in
outsl
cmc
pop
xlat
addr16
stos
mov
jne
pop
mov
and
loop
fisttpl
cli
mov
or
and
cmpsl
xchg
jp
call
aaa
xor
rcll
loopne
repnz
dec
fists
push
xor
dec
ficoms
mov
jnp
lods
xor
inc
imul
jbe
repz
push
lods
and
pop
icebp
inc
cmpsb
fldenv
dec
sbb
mov
jns
xor
add
dec
mov
lcall
pusha
mov
lea
pop
test
mulb
sub
hlt
pop
aad
and
and
push
jae
insl
movnti
cltd
lret
mov
lods
popf
rcll
cmpl
daa
sbb
mov
fmulp
mov
out
popf
sahf
inc
pop
je
add
jb
mov
sbb
adc
out
xor
sti
cmc
inc
pushf
cwtl
orl
out
and
popa
je
sbb
mov
arpl
mov
push
push
cmc
adc
lea
ja
mov
shrl
or
push
dec
xor
cmp
loope
stos
dec
dec
icebp
mov
stc
and
bswap
pop
xchg
subb
adc
jecxz
pop
mov
cmp
push
mov
out
dec
sbb
or
fsubr
std
std
pop
loopne
and
mov
inc
xor
rorl
xlat
mov
adc
pushl
mov
mov
nop
mov
mov
sbb
dec
sti
push
pushf
mov
mov
adc
fwait
mov
push
adc
xchg
mov
adc
out
and
sub
out
inc
sbb
pop
sbb
cld
or
addb
movl
gs
add
inc
out
mov
fwait
cld
push
jmp
adc
int
cli
arpl
lcall
pop
imul
or
out
in
inc
cld
icebp
es
mov
lret
jb
frndint
imul
and
jae
test
lret
das
aas
sbb
aam
in
mov
pop
popf
jg
and
jnp
sbb
cmpsl
lret
jg
inc
jp
jbe
mov
adc
ja
lea
ljmp
sub
or
js
push
dec
jbe
jb
xchg
push
sbbb
test
adc
and
push
mov
stos
cmp
sbb
enter
ja
jecxz
sbb
adc
out
cs
adc
jne
cmpsb
mov
int3
cmp
mov
loopne
push
pop
add
lods
mov
aad
sbbb
cmc
out
xlat
add
dec
nop
out
ja
mov
cmp
pusha
mov
dec
jmp
pop
addr16
iret
mov
xchg
stc
test
and
cs
xchg
lods
jg
xor
pop
add
lods
mov
js
cmpsl
clc
subb
push
div
cmpsb
mov
pop
dec
mov
fiadds
adc
ret
cmp
and
pop
fistpll
lods
fcomps
cmpsl
jno
mov
leave
cmp
bound
pop
dec
cmova
mov
loopne
pop
cld
les
popf
dec
mov
and
pushf
sbb
cmp
push
pop
rorl
lds
dec
cli
and
lret
cmc
cld
mov
jne
xchg
and
lea
adc
xor
and
mov
lret
in
test
data16
mov
pop
add
inc
pop
into
push
xchg
jle
mov
pop
dec
and
imul
loop
mov
jl
push
push
rcrl
mov
jecxz
add
mov
inc
ljmp
lcall
sbb
push
jae
cmp
add
outsb
pop
mov
mov
pop
mov
outsb
jp
dec
cmp
fstl
lret
mov
jae
movsl
sahf
sub
pop
dec
jb
aad
stc
lods
in
lahf
mov
popf
test
cmpsb
sub
xchg
mov
addr16
mov
pop
das
lret
lcall
pop
imul
add
adc
add
fdivs
and
adc
setge
repz
sbb
jle
mov
or
add
mov
sbb
mov
adc
test
push
loope
inc
int3
jne
lcall
sub
cmc
sub
ret
loope
ljmp
sbb
gs
cmp
xlat
or
and
aad
mov
test
rclb
inc
rorb
ljmp
sbb
mov
jl
jne
xor
adc
out
sub
aaa
inc
xchg
push
inc
addr16
dec
push
pushf
cmp
addr16
push
adc
daa
push
pop
mov
sbb
pusha
inc
sub
jb
pop
lahf
fmul
dec
xchg
in
push
ret
mov
gs
fsub
lds
data16
or
sbb
lret
push
lea
movsl
nop
push
bound
xlat
dec
push
hlt
mov
sbb
shlb
insb
in
jp
xchg
aad
push
arpl
je
push
scas
cmp
push
data16
in
mov
and
mov
lods
inc
mov
loopne
popa
mov
in
xor
mov
pop
inc
mov
stc
enter
js
jb
inc
out
push
movsl
fsubp
rol
or
push
subl
lds
lods
mov
jp
fsts
enter
test
fdivrs
cs
xchg
add
dec
xchg
pop
push
inc
jle
scas
cltd
jge
mov
jmp
pop
jnp
xchg
je
xchg
xor
bound
imul
pop
push
mov
dec
xor
adc
dec
div
mov
push
ret
nop
xchg
jp
xchg
mov
mov
es
sbb
sub
mov
out
cmp
test
jmp
inc
outsl
andb
cltd
mov
int
stos
pop
mov
push
pop
push
inc
or
or
lods
or
fcomps
jnp
mov
lods
mov
test
in
daa
mov
movsl
sbb
jo
xchg
mov
xor
jl
int
cmc
push
ds
adc
jge
xchg
push
or
daa
jmp
push
ja
add
repz
mov
test
jbe
loope
addr16
dec
add
js
jecxz
pop
push
daa
je
test
add
jg
add
mov
xor
shll
pop
jl
mov
jae
dec
out
jns
loopne
push
shll
fcomip
repz
loop
fstps
mov
cmp
push
je
or
insl
movsl
xchg
mov
test
mov
dec
mov
add
dec
xor
mov
mov
mov
fidivs
push
ss
inc
aam
sbb
jno
ror
lret
sahf
add
mov
lahf
in
fnstcw
push
loop
into
out
xchg
call
sbb
push
sub
xchg
sub
in
out
adc
test
lods
cwtl
jbe
jp
xor
test
andb
negl
mov
cmp
lret
push
or
inc
scas
mov
enter
mov
fcoml
shlb
mov
aad
pop
push
cmp
mov
jb
mov
mov
dec
and
test
hlt
cltd
jno
lds
push
xor
adc
mov
je
add
in
add
jmp
in
cmpsl
mov
pop
sbb
shl
addr16
inc
int3
mov
dec
cwtd
rcr
in
lds
adc
pop
xchg
or
cmp
out
lods
sbb
mov
rcll
jns
sbb
mov
pop
imul
iret
in
popa
mov
inc
add
pushf
int3
add
mov
aad
gs
push
repz
mov
push
popf
mov
mov
rcll
aaa
add
push
mov
out
or
push
push
xor
sbb
cmp
mov
sbb
sbb
xor
mov
mov
dec
sbb
pop
imul
loopne
sub
pop
mov
aaa
imul
mov
or
fmul
or
test
jecxz
in
add
jg
add
cmc
ret
outsb
xchg
movsb
lret
xor
and
xchg
in
xor
mov
xchg
xorl
cmp
fildll
stos
test
mov
xchg
in
xchg
mov
or
mov
add
imul
jmp
or
movsb
fwait
dec
je
pop
fdivr
or
pop
sub
sub
insl
mov
add
cltd
cmp
push
lock
sahf
outsl
cmp
into
mov
clc
adc
test
add
sti
insl
jge
jg
lock
movsl
cmp
out
cmp
inc
mov
push
jg
popf
pop
fbstp
jno
mov
xchg
fnstsw
jmp
imul
shlb
adc
sub
push
hlt
adc
icebp
inc
and
addl
and
call
mov
cmp
scas
mov
xor
and
inc
mov
out
dec
inc
sub
pop
fsubrl
adc
mov
pop
mov
mov
jp
mov
push
sbb
lret
mov
or
cmpl
jmp
xor
stos
pop
fdivrl
jne
fisubs
fisttps
mov
repz
inc
inc
test
icebp
lds
daa
clc
jl
jne
dec
movsl
ljmp
jg
rcl
xchg
add
aaa
mov
aas
aad
cwtl
js
mov
xchg
rcrl
das
popa
adc
pop
mov
push
ljmp
shlb
xor
test
xchg
sub
pop
mov
fcomps
jg
movsl
outsl
cli
jne
popa
lcall
pop
adc
xchg
lods
xor
sbb
fbld
imulb
xor
mov
andb
cwtl
mov
es
pop
xabort
mov
sub
call
mov
cmp
mov
inc
inc
xchg
mov
cmpsb
les
sahf
pusha
jecxz
ss
into
loop
cli
ror
push
aaa
clc
outsl
mov
sbb
insb
stc
js
adc
mov
imulb
ss
cmc
cs
add
in
pop
clc
roll
or
and
sub
sbb
sbb
sub
sahf
xor
andb
in
mov
sub
bnd
inc
or
adc
adc
ljmp
in
cs
mov
sbb
mov
sti
jg
mov
adc
ror
or
pop
cmc
xor
and
mov
insl
aam
jg
inc
sbb
popf
jecxz
push
mov
or
push
fldl
out
mov
sbb
cltd
addr16
sub
dec
xor
stos
cli
inc
xchg
adc
in
xchg
dec
ljmp
sub
rcll
rclb
pop
lcall
jmp
and
rorl
push
out
cmp
in
into
adc
imul
push
jp
rclb
sub
aas
sbb
fsqrt
lahf
shll
test
or
arpl
negb
sbb
mov
in
scas
xor
jecxz
jmp
ja
dec
je
dec
jge
enter
push
leave
verr
insl
hlt
mov
lea
enter
imul
je
xchg
mov
out
and
inc
cmp
add
fiadds
out
pop
mov
dec
nop
mov
lret
sub
mov
or
fwait
xor
mov
mov
sub
cltd
or
xchg
or
dec
in
notl
scas
jnp
pop
push
sub
xor
add
xor
es
pop
xor
aas
ret
push
push
mov
daa
das
push
mov
into
mov
mov
cwtl
fisttps
or
mov
ds
xchg
sbb
icebp
ja
or
mov
jnp
xchg
jo
xor
and
jle
mov
adc
test
adc
xchg
cwtl
dec
mov
fs
addr16
hlt
scas
pusha
scas
testb
nop
pop
sub
or
jno
and
iret
inc
imul
fidivl
in
das
and
aam
adc
pop
mov
push
mov
in
jg
inc
cs
adc
adc
inc
movsb
lock
push
cmp
jnp
cmp
push
inc
insl
jecxz
arpl
arpl
ss
xor
jae
sti
lock
dec
outsb
jo
fldt
push
xor
clc
insb
lea
sbb
mov
xor
and
push
rolb
loope
mov
jnp
inc
outsl
inc
mov
inc
xor
aam
stos
push
add
jnp
push
fucomi
dec
jne
jp
rorl
pop
sahf
scas
std
fsubr
jg
push
xchg
push
dec
push
sbb
dec
push
aam
dec
cltd
jmp
sti
iret
cmpsl
je
sbbb
popa
xchg
dec
movsb
fucomp
adc
sub
jb
out
or
push
out
out
addr16
xchg
data16
mov
in
pushf
mov
insb
andl
mov
sub
mov
scas
fidivrl
xchg
into
dec
xor
or
sub
pop
mov
ds
outsl
sti
loopne
insb
leave
jmp
fisubrl
sbb
scas
adc
movsb
jge
xor
sub
int
icebp
mov
mov
dec
decl
arpl
xchg
mov
dec
xchg
mov
cmp
in
leave
dec
and
inc
add
xor
ja
or
adc
xor
test
mov
inc
leave
adc
test
mov
xlat
out
or
mov
lret
add
test
ss
jne
add
popa
and
data16
rcrb
out
cli
sub
in
dec
push
dec
cmp
enter
in
mov
push
xchg
jne
inc
add
leave
testl
pop
cmp
adc
cltd
xchg
mov
adc
mov
and
mov
push
inc
imul
and
sub
adc
mov
lea
arpl
cs
and
ds
test
jmp
test
out
xor
lea
jge
cmp
add
not
fcoml
orb
xor
out
and
popf
fisttps
lods
mov
cmp
cli
in
pop
in
mov
imul
enter
sub
pop
jmp
push
add
mov
xchg
rorb
adc
pushl
aaa
cmp
notb
fidivs
enter
neg
jge
sbb
ljmp
cltd
lret
in
sub
pop
leave
sbb
mov
jno
xchg
push
or
fwait
jbe
in
dec
xchg
icebp
insl
negl
loop
cld
inc
xor
out
mov
xchg
pop
adc
xchg
jecxz,pn
sub
or
inc
subb
popa
dec
mov
or
sahf
inc
pop
or
mov
iret
sub
adc
cmp
mov
pop
jl
and
and
repnz
ljmp
mov
jge
and
mov
cmp
inc
xor
dec
lcall
sbb
ljmp
mov
inc
clc
jne
and
pushf
dec
mov
xor
ljmp
mov
out
adc
jecxz
ja
xchg
in
add
cmpsl
outsl
rorl
lods
lock
rcll
xchg
xchg
enter
mov
fsubrl
ficoml
fs
mov
dec
sbb
push
push
jmp
rcrl
xchg
enter
xor
enter
leave
hlt
mov
das
or
add
jns
aam
xchg
pop
pop
outsb
mulb
in
jp
movsl
test
push
insl
out
jbe
push
scas
add
mov
roll
jbe
push
ror
aam
int
dec
sbb
cmpsb
insl
outsl
cmc
jns
les
inc
outsb
mov
mov
jmp
leave
sti
jle
out
jg
dec
push
mov
dec
xchg
nop
les
mov
into
adc
out
pop
inc
jb
pop
pop
imulb
clc
sbb
push
xor
js
jnp
fs
faddl
jno
loopne
nop
push
pop
cmpsb
and
mov
sbb
inc
mov
mov
fwait
xor
and
int3
jp
mov
jge
lret
and
dec
cmp
inc
incb
cmc
jmp
jbe
addr16
mov
sahf
leave
movl
loope
jno
lret
fadds
popa
adc
mov
push
jmp
movsl
into
jmp
pusha
js
xchg
outsb
imul
xchg
mov
cwtl
leave
pop
pop
adc
icebp
lret
sbb
call
lea
insb
push
adc
adc
and
fwait
dec
jle
into
mov
imul
jle
enter
orl
cs
inc
aaa
in
or
jmp
adc
adc
or
sub
inc
xchg
mov
mov
in
jne
jbe
mov
in
or
int
dec
and
push
cmp
cmc
into
sahf
add
repz
sbb
pop
nop
pop
imulb
mov
pop
sahf
mov
jmp
xchg
lds
fdivp
arpl
and
mov
lds
movsb
mov
movsl
dec
filds
out
scas
das
add
sbb
leave
test
iret
test
push
jl
incb
shll
insl
jp
cmp
adc
addr16
ret
fnsave
jo
push
xchg
add
insl
and
mov
or
dec
jl
aas
in
adc
movsb
dec
and
rdtsc
mov
sub
cli
fs
and
ja
jnp
out
inc
sbb
cmp
push
ja
sbb
mov
mov
sub
and
mov
je
fidivrs
and
clc
dec
add
mov
imul
sarl
call
stos
sub
xor
sub
lds
or
sbb
inc
mov
jmp
loopne
mov
movsb
jo
loopne
jl
test
jbe
aas
test
mov
sub
clc
insl
enter
lret
jmp
idiv
inc
cld
push
repnz
arpl
sbb
mov
inc
sub
sarb
pop
fisubs
xchg
fisubs
pop
xchg
cmp
jnp
or
xchg
subb
data16
stos
insl
cpuid
xor
pop
clc
loop
ficompl
inc
lret
jl
jns
andl
sbb
dec
mov
xchg
out
sbb
xchg
add
test
mov
ret
ror
and
mov
cmp
out
jns
mov
cmp
xchg
cmpsb
daa
mov
cmpsl
aad
and
sbb
or
data16
cmpb
mov
or
sub
lret
push
arpl
sahf
outsl
outsb
xor
xor
mov
sbb
cmpsb
and
adc
aam
xchg
mov
rol
loopne
pop
jmp
cld
test
push
cmp
push
jg
lcall
mov
mov
lods
dec
jns
sub
xchg
rcrb
hlt
loop
mov
dec
xchg
adc
pusha
pop
cmp
icebp
mov
and
out
sti
pop
adc
jg
imull
and
das
mov
jne
aam
es
lcall
xchg
jae
xor
jbe
inc
mov
inc
sbb
and
sub
ret
js
fdivrl
sub
data16
iret
push
les
sub
add
cmc
das
es
icebp
adc
or
test
popf
pusha
and
xchg
push
pop
gs
mov
dec
xor
pop
sbb
and
mov
xchg
push
jecxz
mov
jp
lds
repz
lock
cld
sbb
fsub
cmp
adc
imulb
mov
test
ret
jo
xchg
xor
xchg
xchg
pop
pop
pop
push
repz
sub
and
mov
pop
jnp
ficoml
push
add
or
and
mov
cli
xchg
stos
lea
in
inc
jl
clc
cmp
popl
add
bound
xchg
or
int
fiaddl
sub
rolb
gs
ljmp
cli
es
lds
mov
adc
sbb
cmpsb
sti
or
mov
jl
aas
cmpb
out
mov
nop
pop
mov
shll
xchg
loop
movswl
ljmp
and
aam
test
and
mov
mov
test
ljmp
sbb
in
mov
add
sbb
lock
int3
mov
jp
adc
mov
push
into
fcomps
sub
das
lret
inc
out
mov
lea
xor
clc
mov
push
xchg
xchg
aad
sub
xor
int3
aas
ret
je
mov
push
sahf
inc
dec
xchg
inc
cmpsb
lret
adc
call
pop
mov
repz
adc
dec
test
and
cmp
adc
push
mov
jnp
test
add
pop
sub
filds
and
xchg
mov
pop
jno
jge
push
sbb
pop
push
leave
repnz
mov
int
cmp
add
push
aad
mov
lock
jle
sub
test
xor
mov
jno
cmp
xchg
xlat
dec
out
push
icebp
mov
pusha
jle
add
minps
mov
pop
int3
cmpsb
test
fucomip
inc
cmp
insb
xlat
sub
add
pop
and
les
or
rcrb
flds
out
jle
nop
call
push
out
mov
mov
cmp
jle
cltd
fstl
popw
inc
mov
sti
insl
aad
jno
lcall
push
sar
mov
popa
and
cwtl
xor
ljmp
push
fdivs
push
dec
repnz
add
add
ret
lret
jbe
jle
adc
jb
add
loope
aas
fucomp
iret
and
or
sub
cltd
outsb
and
pop
cmp
inc
cs
sbb
pop
jg
pusha
sub
push
inc
mov
in
xchg
mov
clc
sar
jae
push
jmp
add
push
xor
movsb
push
and
movsb
adc
mov
ffree
adc
icebp
xor
pushf
dec
inc
jno
cmpl
pop
outsl
pusha
enter
flds
shlb
mov
inc
xor
xor
fldenv
cltd
fucomi
add
cmpsl
pushl
sahf
jl
mov
stos
add
lods
adc
sbb
push
dec
stc
jmp
mov
mov
and
lds
ja
fists
outsb
mov
shrl
mov
inc
outsw
sub
cmp
int3
sbb
pop
add
fucompp
imul
bound
pop
pushf
add
sbbb
jnp
or
test
mov
jne
or
aam
popa
ret
bound
adc
adc
dec
or
test
hlt
or
mov
int3
mov
push
mov
stos
mov
lods
aam
dec
int3
sub
stos
mov
data16
test
pop
rcl
bound
push
sub
pop
lock
int3
pop
pop
popf
cmp
repnz
add
push
sbb
mov
into
inc
xlat
jae
ret
iret
rolb
sbb
lahf
dec
sbb
or
xor
fadds
fcompl
leave
scas
scas
rcl
jno
into
xorb
sbb
out
xchg
push
jecxz
int
add
adc
adc
dec
int3
test
cmp
sub
pop
ss
xor
fstps
js
aas
jp
xchg
cld
jle
or
iret
popf
xchg
pop
cmp
inc
orb
cltd
outsl
inc
inc
pusha
mov
in
aad
out
mov
and
movsb
jecxz
dec
dec
push
dec
dec
xorb
gs
pop
or
cmpl
cmp
xchg
mov
xchg
int
sub
jg
push
sub
mov
or
cli
aaa
orb
fwait
push
push
sar
popf
fs
lock
sbb
rorl
mov
std
sbb
popf
dec
jmp
push
dec
push
push
mov
jl
mov
clc
push
dec
je
bound
inc
ret
flds
loope
xlat
mov
dec
ja
or
imul
cmpsl
push
cmp
outsb
dec
mov
in
or
push
push
sbb
mov
fs
pop
fmull
insb
sbbb
stos
bound
divb
aaa
dec
test
iret
jmp
inc
xor
pusha
test
sti
out
xor
mov
outsb
lea
or
cs
jo
push
mov
mov
adc
xor
lock
cmp
jbe
pop
push
inc
jle
xchg
and
sub
pop
arpl
inc
pop
stc
and
out
push
xor
fdiv
mov
idivl
fimull
push
cmc
cmc
push
inc
cs
cmp
jge,pt
bnd
adc
xor
jmp
les
and
mov
shll
cmpsl
fdivrl
dec
mov
dec
jle
icebp
jbe
pusha
add
gs
rclb
and
lods
fcoml
or
lret
lret
dec
xchg
stc
pop
std
pop
testb
or
pop
cwtl
mov
inc
and
add
xor
cmp
push
cmp
add
int3
outsb
adc
out
lods
jl
addr16
push
ljmp
outsb
pusha
lock
mov
andb
pop
shll
mov
sub
cld
cmp
and
cmp
fmull
fs
cmp
fnsave
push
aas
adc
arpl
ret
add
push
and
inc
scas
jo
pushl
call
inc
jecxz
push
fs
mov
pushf
add
push
lods
mov
sub
jns
test
enter
xor
dec
xchg
imul
jb
rolb
mov
mov
fiaddl
push
nop
add
ds
push
lods
test
fnstenv
add
rcll
push
sub
insb
add
jp
pop
cwtl
pop
jge
mov
pop
pop
mov
ret
mov
jb
fistpll
movsl
cli
push
mov
adc
add
fnstsw
adc
iret
cmp
jns
mov
jno
popa
inc
imul
sbb
sbbb
mov
jb
cli
into
idivl
xor
mov
call
jmp
shll
dec
push
pop
hlt
test
mov
aas
pop
jno
scas
adc
jo
add
scas
xor
loop
loope
movsl
sub
mov
jp
lds
cmc
inc
imul
mov
mov
stos
ljmp
dec
test
sbb
pop
push
pop
and
cld
lret
xchg
es
add
clc
sub
hlt
push
cld
mov
outsl
lds
jne
mov
push
test
pop
dec
cs
xchg
mov
shrb
lret
mov
sbb
jp
mov
jae
mov
aas
out
sub
adc
fs
jae
xor
or
dec
cmpsl
fbld
ds
jg
ficompl
or
in
pop
push
jb
stos
sbb
adcb
mov
jp
into
push
adc
pop
pop
imul
cmc
add
mov
fisttps
into
adc
mov
add
ss
add
into
pop
cmp
pop
popf
jne
stos
addr16
push
pushl
andb
add
test
xchg
push
nop
xchg
pop
jne
cmp
dec
jo
aad
jmp
dec
out
pop
or
sub
addr16
rcl
retw
inc
dec
and
ds
pop
push
mov
add
mov
bound
adc
call
ljmp
dec
cmc
jl
out
jp
mov
int
push
pop
xchg
testl
int3
pop
adc
inc
inc
jge
add
mov
outsb
dec
adc
add
ficoml
lods
pop
pop
cmpsb
in
jecxz
arpl
testb
popf
cmp
shlb
push
add
mov
bound
pop
xchg
ss
pop
fstpl
push
test
cwtl
add
out
xchg
sbb
fisubrl
lret
loop
test
andw
btrl
mov
mov
movsb
push
jp
std
mov
cltd
cmp
mov
pop
jne
es
and
cmp
mov
xor
pop
pop
mov
movsb
cmc
jmp
pop
leave
jbe
rcrl
inc
adc
stc
jg
rorl
gs
sti
shrl
dec
fwait
xor
push
scas
in
xchg
pop
inc
ficomps
lods
and
jns
lret
in
sahf
andb
pusha
or
mov
ret
xchg
int3
or
in
jbe
call
les
jno
and
xchg
nop
xchg
cmpsb
cmp
push
inc
cmc
das
inc
jno
sbb
test
xchg
test
insb
sbb
das
movb
mov
jecxz
test
cmpps
jmp
sbb
push
lret
out
add
pushf
loopne
lcall
shlb
cmp
fistpll
decw
adc
lds
testl
mov
dec
ds
hlt
xor
enter
mov
ret
xor
inc
sbb
sti
xor
cwtl
mov
leave
mov
leave
cmp
testl
inc
mov
xor
inc
inc
das
mov
push
push
fisubs
dec
clc
and
or
pop
xchg
sti
jp
popa
dec
xchg
xchg
xor
pop
icebp
jecxz
lcall
add
imul
xchg
lcall
xor
cli
js
fnstcw
mov
cmp
cmp
dec
jno
aad
cmp
lcall
push
test
mov
xchg
sub
inc
ss
movb
xchg
addr16
pop
insl
movsb
fsub
cmp
pop
sub
lods
sub
movsb
fcoml
fcomps
xor
mov
fs
jmp
mov
mov
js
aam
fwait
das
data16
mov
ds
pop
repnz
mov
inc
popa
xlat
test
in
leave
into
xchg
nop
adc
fisttpl
xor
xchg
sti
push
adc
pop
xor
insb
dec
fcomip
and
sbb
loopne
mov
out
testl
cs
sub
gs
fbstp
pusha
sbb
pushf
in
fmull
inc
or
sub
push
jg
push
xchg
dec
xchg
ret
mov
jb
std
lock
cwtl
push
jp
cmc
inc
test
shlb
shrb
aas
icebp
xor
in
cmp
pop
ss
cmp
xor
test
imul
xchg
push
pop
shll
daa
lret
ja
test
lock
pop
or
mov
jp
negl
inc
std
adc
or
gs
jmp
jle
dec
lds
inc
jbe
mov
loopne
popa
xor
mov
scas
mov
push
out
lods
push
and
mov
cmc
movsb
inc
dec
hlt
jo
lds
cmc
ret
popf
lds
iret
mov
repz
mov
addl
bound
test
fmuls
lahf
cmp
les
scas
jo
je
mov
or
pop
ret
mov
movsl
and
emms
push
mov
cmp
movsb
scas
mov
push
jp
leave
pop
push
lret
jmp
dec
xchg
jmp
dec
pop
dec
clc
gs
ljmp
aaa
mov
or
push
lods
sbb
retw
xchg
nop
subb
add
pop
shrl
and
dec
pop
shrl
cmp
cmp
push
pop
out
mov
lret
sbb
popf
shlb
push
push
ljmp
ljmp
out
jl
movsl
add
lods
inc
dec
popa
inc
lcall
das
push
loop
push
iret
lahf
or
sbbb
mov
lods
lcall
push
rol
faddp
test
pop
enter
jle
stos
xor
mov
mov
mov
hlt
cmc
lret
mov
xor
push
stc
scas
sbb
je
cmp
xchg
iret
or
aad
dec
ror
xchg
xor
icebp
push
or
xor
jle
in
frstor
es
pop
mov
push
rolb
fmulp
and
jecxz
push
lahf
add
xlat
imul
and
mov
xorb
ljmp
scas
xchg
fcomp
inc
mov
fiadds
adc
or
out
mov
ss
fisubrs
cmp
fwait
sbb
icebp
mov
push
in
cmpsb
je
nop
movsb
mov
and
xor
fsts
scas
aam
fimull
inc
mov
lcall
idivb
sbb
mov
mov
pop
push
pop
dec
pushl
les
mov
lods
sti
cmp
pop
cli
sahf
jbe
cmp
inc
xchg
in
ficoms
jp
xchg
insl
mov
cmpsb
mov
sbb
sbb
outsb
pop
mov
arpl
movb
or
jns
nop
int
daa
xchg
jbe
in
scas
mov
jl
scas
push
dec
jbe
scas
dec
fcmovnu
push
loopne
mov
mov
jl
rclb
xchg
pminsw
and
rcr
or
inc
insl
push
sbb
pop
fisttpl
cmp
in
cmp
and
pop
and
sub
fwait
ja
mov
sti
lods
fnstenv
cmpsl
imulb
mov
ret
sbb
aam
dec
dec
fucomi
mov
ds
in
mov
push
mov
xchg
xlat
xor
mov
jne
imul
fsubl
out
sbb
mov
sub
shrb
or
cmp
scas
cmp
push
sub
loop
inc
cmpb
jp
ret
xchg
out
imulb
setae
notl
inc
daa
shlb
mov
push
ss
mov
mov
lock
and
test
ljmp
fs
mov
mov
cmp
mov
and
cmp
out
aam
hlt
xor
inc
dec
add
and
sbb
mov
add
and
and
lea
faddl
arpl
sub
insl
jg
sbbl
jns
hlt
dec
and
aas
push
andb
and
inc
jns
outsb
sub
adc
ret
dec
addr16
int3
loopne
pop
adc
mov
in
jp
fists
inc
push
mov
stos
aaa
jp
add
mov
inc
add
popf
lret
or
lret
mov
test
stos
mov
test
jecxz
fs
pop
mov
sub
jno
sbb
add
and
daa
inc
pop
xchg
fisubs
and
pushf
popl
cli
xor
sub
sub
js
xchg
dec
sahf
jbe
or
cmp
pushf
rcl
dec
shr
enter
sbb
push
dec
int3
dec
cmp
das
push
xor
leave
inc
dec
cld
aaa
xchg
xor
es
shlb
fiadds
jnp
mov
pop
mov
sbb
out
outsl
rcrl
enter
ret
push
or
lcall
repz
xor
dec
test
mov
ret
xchg
lock
sahf
or
repnz
leave
mov
mov
int3
adc
sbb
jae
add
push
mov
cld
mov
xchg
add
les
fnstcw
fbstp
pop
outsl
jnp
mov
push
pop
arpl
mov
repz
xchg
add
push
and
cmp
cmpsl
jp
inc
or
andl
ret
dec
pop
sub
dec
inc
xlat
repz
lret
cmp
mov
lock
xor
cltd
jl
cmp
and
fdivp
ss
dec
push
bound
pop
dec
data16
mov
dec
sub
insb
pop
popa
jae
std
jle
cmp
imul
adc
mov
es
popf
decl
lea
pop
jmp
dec
jl
pop
adc
lods
jb
mov
arpl
push
cmp
hlt
xchg
pop
fdivrl
rolb
addr16
aaa
loop
jb
xchg
movsl
xor
adc
ret
test
cmp
pop
imul
lods
out
aam
add
lcall
pop
out
pop
ds
out
xor
imulb
mov
lcall
adc
sti
jne
sahf
and
inc
stc
lock
mov
xchg
lods
jns
push
inc
pusha
aas
test
mov
and
sub
sbb
mov
lods
xor
mov
dec
jmp
scas
imul
inc
js
add
mov
out
dec
es
add
pop
jbe
sub
lock
and
fisubs
js
jl
dec
and
xchg
push
pop
push
dec
enter
mov
cld
xchg
dec
or
adc
imul
adc
mov
loope
sbb
sub
xor
js
pop
cmp
cmpl
cltd
xor
xor
inc
ds
adc
daa
xor
repz
test
pop
mov
mov
cmp
or
lahf
daa
xchg
sub
mov
pop
int
outsb
xor
lahf
fidivrs
pop
mov
cltd
push
out
mov
int
or
ljmp
mov
or
aad
popa
push
cmp
mov
aas
nop
mov
jb
repz
scas
adc
pop
and
add
or
pop
ss
add
jb
and
popf
ljmp
test
pushw
push
xor
shr
jbe
mov
or
sub
lret
bound
pop
dec
xchg
sti
icebp
add
xchg
dec
dec
loopne
xor
pop
scas
cld
loop
dec
xchg
jno
lahf
mov
insl
inc
fimuls
sbb
xor
std
jle
hlt
std
leave
push
sbb
adc
outsb
dec
cltd
xchg
in
icebp
xchg
sbbl
add
pop
xchg
jae
enter
mov
pop
movsl
sbb
sub
mov
ss
or
jbe
mov
cmpl
cmc
cmpsb
cmp
dec
sbb
add
aad
push
ret
lcall
sbb
mov
pop
adc
add
sub
outsb
adc
repz
das
fisubs
cltd
out
dec
xchg
or
xorb
mov
loop
push
mov
dec
jmp
out
fmul
mov
pop
sbb
push
test
jle
adc
enter
cli
inc
pop
icebp
ret
pop
cs
jbe
jecxz
adc
jns
sarb
movsl
mov
stc
sbb
outsb
jmp
or
pop
test
out
loope
div
daa
pop
fstps
fsubl
daa
mov
push
add
popl
ljmp
in
push
mov
das
add
movsb
xorb
scas
fwait
ljmp
cmc
jbe
ds
js
in
ret
jbe
mov
dec
aas
popf
test
push
xchg
and
scas
xchg
and
sbb
or
gs
lea
pop
inc
out
fadd
repz
divl
push
call
or
or
xchg
push
push
cmp
fdivrs
xlat
jecxz
adc
sub
aaa
xor
les
or
lret
mov
ss
fs
decl
ja
add
mov
mov
mov
lcall
inc
aas
xor
mov
outsl
mov
int3
adc
test
lea
xchg
in
subb
aaa
mov
jmp
cmp
nop
pop
lret
sub
pop
mov
lahf
xor
flds
and
pop
sbb
sbb
mov
jp
cmp
lds
fs
cmpsb
xchg
jno
sbb
loope
scas
cmp
aam
add
stos
out
push
outsl
fsubrl
pop
test
sub
divb
mov
and
adc
sbb
dec
mov
sbb
fs
or
add
mov
xchg
sahf
sbb
sub
xchg
xchg
lahf
mov
adc
sbb
punpcklbw
xchg
push
jae
or
mov
mov
andl
fcmovnu
in
imul
stos
stc
cmp
push
es
xchg
or
xchg
popf
lcall
mov
xchg
dec
lock
lret
xor
enter
sub
push
jmp
and
frstor
xchg
mov
subb
jns
mov
sub
jae
stc
xor
shll
pop
push
repnz
cmpsl
mov
out
push
lahf
pop
fscale
rcrl
ss
mov
inc
shl
ss
or
pop
jno
pop
and
aad
adc
dec
cwtl
scas
inc
xchg
sbb
push
test
mov
fmul
cmpsb
lret
sub
adc
in
mov
xchg
outsb
sbb
dec
xchg
pop
inc
shr
mov
push
jl
subl
pop
outsb
pop
aas
mov
lahf
cld
cmp
pop
and
sbb
jmp
int3
inc
push
je
imul
loope
sbbb
es
repnz
wrmsr
pop
lods
movsl
sbb
jb
arpl
inc
inc
dec
add
xor
add
js
dec
dec
adc
fsts
lods
xor
stos
add
pop
test
fildll
xchg
jp
jge
push
xchg
mov
hlt
lock
ss
insl
push
mov
adc
and
repz
sbb
and
cmpsl
push
mov
adc
jecxz
pop
xor
fsubs
inc
and
jo
popf
push
fucomip
ljmp
scas
mov
adc
icebp
iret
sbb
sub
jle
jl
insb
out
int3
das
mov
jo
inc
xchg
sbb
add
adc
ss
mov
adc
sub
insb
fldenv
xlat
nop
cmpsl
dec
fs
out
sbb
loopne
lods
push
lods
loope
fldt
call
loop
sahf
rclb
aas
push
sbb
gs
push
sub
or
mov
push
icebp
out
sbb
aad
mov
mov
xchg
mov
xchg
jmp
ja
je
sti
inc
fcmovnbe
add
mov
repz
add
or
mov
xchg
rclb
cltd
daa
jg
imul
divl
jg
pop
jl
jmp
cli
inc
xlat
mov
std
xor
push
jb
aas
popa
add
dec
fnstsw
add
fisubl
clc
aaa
pop
jecxz
inc
xor
cmp
mov
movsl
push
and
jnp
js
lock
sub
mov
dec
shrb
mov
pop
hlt
xor
xchg
cwtl
xlat
xor
mov
pop
mov
in
push
aas
jecxz
push
cmp
jmp
test
pop
sbb
pushf
sbb
mov
rcrb
imul
rcll
insb
mov
dec
and
incl
in
fwait
and
push
or
fsubrl
adc
jmp
pop
inc
test
addr16
sbb
sub
mov
or
dec
out
pop
lock
or
and
jo
adc
shll
push
jb
addr16
xchg
dec
push
movsb
dec
or
loope
or
sti
jg
sub
jmp
add
xchg
arpl
shlb
inc
incb
mov
lret
cmp
jbe
push
arpl
sbb
cwtl
faddl
sub
test
push
inc
add
fwait
clc
push
lds
add
mov
scas
int3
mov
cmp
and
or
mov
jae
mov
cmp
imul
pop
sub
sub
in
lods
cmp
push
mov
inc
mov
sub
mov
dec
and
sub
mov
jecxz
adc
fldenv
shl
mov
add
pop
roll
push
shlb
pop
sbb
in
leave
xor
add
hlt
xor
cmpsl
mov
je
sbb
jbe
or
push
arpl
dec
test
cli
popa
dec
sub
jl
xchg
pushf
icebp
and
jo
aaa
loop
and
ss
mov
inc
movsb
lds
int3
cmp
xchg
dec
inc
mov
mov
cmp
or
test
icebp
mov
inc
and
into
pop
jno
and
out
add
dec
xchg
hlt
adc
fists
pop
loop
mov
gs
into
or
in
pop
inc
fcomi
adcl
test
pushf
shl
jp
add
clc
scas
movsl
out
setge
mov
inc
addb
stc
insb
fsubrl
and
std
icebp
jbe
jg
inc
jp
or
ds
jl
shll
and
mov
add
popa
ds
popa
fs
cmp
pop
imul
mov
jmp
sub
movsl
cmp
inc
mov
outsw
add
mov
mov
sbb
clc
lret
push
mov
sub
jl
rorl
add
bound
scas
jg
adc
xor
fcoms
mov
dec
mov
dec
test
shlb
rol
cmp
lret
bnd
scas
jecxz
in
push
or
icebp
jnp
or
leave
mov
inc
xor
mov
mov
stc
add
fbstp
and
sbb
ljmp
clc
out
sub
idivb
jnp
dec
test
test
cmpsb
nop
pushf
addb
sarb
mov
and
xor
in
inc
jg
sub
popf
test
pop
push
pop
popf
xor
sbb
jnp
paddsb
dec
xlat
pusha
test
cs
pop
pop
push
into
cmpsb
mov
call
sub
and
mov
fnstcw
xchg
and
cmpsl
jmp
adc
inc
enter
cwtl
mov
add
dec
push
mov
lds
jl
inc
or
mov
adc
mov
push
cmp
stos
push
es
or
mov
or
jae
sub
aaa
cmc
repnz
out
pop
cwtl
insl
jae
adc
out
enter
sbb
filds
pop
sub
stc
inc
xlat
loopne
fildl
xchg
lcall
mov
sub
and
aas
addl
arpl
dec
xchg
pop
xchg
arpl
iret
sub
mov
ficomps
add
fwait
clc
or
xchg
andb
mov
je
push
fstpl
pop
and
adc
sbb
pop
jnp
test
imulb
aad
in
inc
xor
push
int
jae
inc
cmp
data16
mov
lahf
sbb
mov
lods
rcrb
xchg
sub
mov
andl
dec
jnp
or
jb
loope
imul
out
ss
jns
jg
clc
mov
jno
aaa
push
ja
mov
es
es
fidivs
pop
lret
mov
lds
mov
rcrl
mov
dec
test
outsl
or
xchg
xchg
xor
addb
fisubrs
lea
xor
movsl
pop
stc
cmp
out
sub
stos
mov
scas
add
out
adc
pop
and
jbe
pop
adc
cmpsl
mov
lahf
pop
mov
out
mov
jmpw
jmp
std
mov
xchg
daa
xlat
lods
mov
mov
jge
aad
lds
sti
adc
xchg
cmpsl
aad
push
and
ja
mov
jb
jns
cmp
jmp
jmp
push
lock
inc
cld
sub
sbb
and
shlb
jne
aas
jno
or
scas
lret
mov
in
mov
and
outsb
aas
enter
adc
out
push
xor
outsl
div
mov
das
xchg
push
mov
xchg
xlat
int
push
leave
das
notl
jg
iret
outsl
test
je
aas
pop
mov
jno
and
push
xor
out
jle
out
and
mov
lret
ficompl
jno
dec
mov
or
adc
enter
pop
in
and
test
lods
ljmp
fs
std
or
cltd
leave
inc
cmc
adc
pop
jnp
out
mov
jno
jae
jno
test
adc
mov
and
sbb
mov
sbb
add
mov
ja
in
jo
lret
mov
addl
bound
cmpsb
mov
add
cmpsb
in
cmpsl
sbb
pop
sbb
lds
fstpl
fcomps
ja
sub
inc
out
sbb
jmp
xor
lea
fmuls
inc
jbe
data16
adc
mov
sbb
lods
outsb
cld
js
jb
jns
sbb
in
push
pop
pop
dec
loopne
ret
push
push
out
mov
adc
imul
in
sbbl
push
stc
xor
push
cld
dec
popf
push
sub
mov
adc
cli
pop
pop
jne
xor
fsubs
mov
lcall
shlb
lods
sub
xchg
outsl
aaa
outsb
aaa
adc
dec
in
jle
or
lahf
mov
mov
in
mov
dec
and
adc
sub
imul
mov
pop
stc
xor
dec
es
imul
ret
cli
imul
stc
mov
movsb
or
cs
push
outsb
mov
dec
adc
out
pushf
aaa
fwait
paddsb
outsl
fistl
push
push
jbe
and
push
xchg
add
inc
daa
int3
mov
cmp
shlb
adc
dec
mov
iret
test
jle
add
dec
test
fcompl
ret
lods
xchg
pop
pop
loope
push
fadd
pusha
in
shll
jae
ja
out
pusha
lds
outsl
cmpsl
ficoml
pop
aas
jbe
stc
cmp
enter
or
loope
fidivrl
xchg
cmpsl
outsl
sub
xchg
mov
cmp
bound
xor
je
and
daa
mov
ja
push
xor
xorl
cmp
shlb
orps
and
sub
mov
sbb
dec
jl
shl
ljmp
inc
sub
and
jo
scas
cmp
push
pushf
daa
inc
loopne
insb
jl
adc
stos
int3
addr16
cmpsb
out
enter
add
nop
xlat
or
and
adc
push
pusha
inc
inc
and
les
push
out
dec
aad
jns
mov
fwait
push
mov
call
in
jmp
cmp
es
stc
sub
cltd
sub
lods
pop
push
push
and
inc
push
pop
gs
jmp
arpl
aam
in
and
mov
fisttpll
inc
cmc
outsl
repz
repz
aaa
push
pop
fiadds
shrb
stc
mov
and
dec
push
mov
xor
iret
je,pn
sub
xor
xchg
lock
int3
xor
pop
scas
lock
add
inc
popf
dec
mov
cltd
fldl
mov
ss
jns
mov
fistl
adc
pop
dec
push
lds
jg
les
movsb
lretw
fsubrs
pop
mov
mov
popf
add
in
mov
addl
xorb
add
sbb
fsubl
sbb
lods
sbb
push
mov
int3
jle
dec
pop
cli
and
jbe
pop
loop
add
xrelease
cmp
aam
push
aam
jae
inc
shlb
mov
scas
lods
stos
pop
mov
cld
mov
or
imul
hlt
ret
in
mov
xchg
sti
into
sbb
out
and
movb
fdivrs
repz
nop
mov
mov
and
lcall
jns
xor
fists
pop
dec
stc
sbb
outsl
pop
jmp
movsbl
jb
pop
sub
jl
pop
pop
movsl
cmpsb
nop
out
cmc
shlb
cmpsl
xor
int
cltd
xrelease
mov
cli
sub
adc
popf
ret
rcrl
addr16
and
daa
add
xor
dec
adc
arpl
jbe
sbb
aaa
aad
adc
hlt
loopne
inc
data16
pop
add
pop
lds
mov
aad
pop
rclb
mov
xchg
jecxz
and
pop
fcmovu
inc
xchg
enter
lock
xor
jo
stc
push
bnd
xor
jl
repz
sub
or
mov
dec
push
adc
cs
std
mov
adc
loopne
dec
jmp
call
ja
jo
adc
jle
and
adc
dec
mov
adc
push
xor
push
js
arpl
push
shrl
out
imul
cmp
sbb
in
push
mov
sub
out
cs
jecxz
mov
dec
fwait
dec
hlt
fldpi
xor
push
jmp
and
lods
lods
je
rcll
adc
pop
iret
and
sbb
cmp
loope
pop
fcmovbe
out
jbe
mov
sub
addb
add
jbe
jne
push
rorb
scas
adc
insb
ja
mov
cmp
inc
xchg
jecxz
cltd
not
add
push
jle
fisubs
jns
mov
cmp
sti
dec
mov
dec
sub
loop
add
dec
mov
and
push
sti
sbb
outsl
rol
xchg
push
repz
lret
outsl
xor
pop
cwtl
scas
lret
popf
in
aas
mov
lahf
fmuls
mov
faddl
shlb
pop
loope
jnp
or
mov
ret
pop
or
add
jae
jg
cmp
fisubrl
xchg
pop
shll
xor
mov
push
sub
cmp
stos
aad
sbb
in
int3
pop
rclb
test
lock
push
adc
sarb
cmc
sbb
lcall
sub
out
ret
mov
pop
or
rcrb
inc
test
or
inc
repnz
xor
adc
pop
inc
jnp
pop
xchg
push
cmp
sub
aas
in
jbe
and
popa
icebp
ja
xchg
popf
inc
inc
pushf
xor
xor
sub
jp
adc
rcrl
mov
xor
int3
sbb
sbb
or
cmpsb
adc
cmp
ss
xchg
sub
pop
sbb
cmp
mov
ja
mov
jne
push
test
ret
enter
addr16
xor
dec
lds
jnp
adc
pop
pop
xchg
pop
add
push
dec
push
flds
jecxz
push
push
dec
lcall
addr16
or
mov
add
push
xchg
cmp
jg
cs
xchg
inc
push
jno
or
mov
mov
fisubrl
flds
sti
pushf
cmpsl
inc
lcall
jno
test
mov
inc
test
bound
push
xchg
xor
inc
jne
sub
es
cld
ror
inc
cli
pop
mov
xor
imull
mov
cmpsb
leave
push
fldt
jp
fisubs
rclb
jl
jno
stos
jns
dec
xchg
loop
sub
mov
mov
push
cmc
pop
xchg
push
fxch
lea
add
rcl
lret
fcoml
sbb
daa
cmp
repz
sub
and
mov
aad
pop
add
dec
xchg
mov
iret
mov
insl
outsl
mov
and
stos
jecxz
mov
jbe
outsl
mov
inc
push
filds
fwait
push
cltd
mov
mov
sub
dec
outsl
clc
sub
mov
mov
or
movsl
sub
xor
aas
call
les
aad
mov
scas
xchg
mov
jnp
ret
bound
or
add
and
loopne
xchg
insl
push
inc
mov
sub
mov
xor
lea
ret
pop
and
aas
jbe
pushf
cmp
in
fdivrs
mov
push
adc
outsb
cmp
lahf
mov
pop
fs
popf
push
fstpl
mov
aas
jns
addl
insb
out
outsl
jo
or
out
shlb
inc
pop
jge
jb
cltd
push
push
pop
lods
inc
sbbl
pop
loopne
pop
xchg
and
lds
lods
bound
mov
popf
popa
fists
incb
mov
and
pushf
push
mov
int
mov
aad
push
enter
repz
lock
lahf
scas
rcrl
js
icebp
mov
mov
sar
ljmp
sub
fistps
jb
xchg
xchg
or
or
arpl
clc
lods
pop
adc
scas
jle
nop
jp
mov
movsb
add
push
loope
test
dec
jge
mov
repz
es
adc
cmp
cld
sub
mov
fisttps
cmpsl
xor
fldt
cld
push
rorl
sub
add
stos
mov
push
xor
mov
arpl
arpl
pop
mov
dec
test
dec
bound
mov
shrl
stc
mov
cmpsb
sbb
mov
out
incl
inc
push
cmpl
sbb
mov
sbb
push
cmp
mov
ror
and
and
cmp
andl
or
push
push
push
stos
enter
xchg
pop
fmuls
jl
adc
push
mov
inc
xor
gs
push
xor
ret
push
add
add
pop
je
sbb
mov
fildl
pushf
mov
stc
fwait
mov
lahf
mov
fsubs
pop
mov
icebp
jp
ret
cmp
sbb
enter
cmp
push
pop
std
mov
add
repnz
mov
mov
push
es
sbb
sbb
cmp
cld
lahf
cltd
inc
jbe
lahf
dec
stos
pop
and
mov
jge
mov
push
test
cltd
pop
cmp
mov
mov
std
xlat
movsb
xchg
or
gs
xchg
adc
sbb
cmp
push
xor
loopne
rorb
sbb
push
xor
imulb
cwtl
add
mov
mov
fwait
jb
cld
leave
add
cmp
jbe
pop
sub
dec
inc
testb
mov
ficompl
xchg
push
mov
in
jne
sub
loope
cmp
xchg
popf
je
ret
sub
cmp
mov
insb
into
lahf
pop
fs
lock
pop
mov
test
push
sub
inc
push
popf
jge
mov
pop
or
cmp
inc
test
ror
mov
mov
mov
jecxz
sub
sbb
cmp
out
or
push
xchg
xor
cmp
sbb
pop
stos
dec
out
pop
mov
cli
and
push
cmp
lods
pop
loopne
aam
push
imul
pop
sbb
das
cmp
add
test
stos
dec
push
and
lds
inc
xchg
aaa
mov
shr
push
xchg
rcll
nop
mov
inc
add
sbb
mov
out
lock
xorl
test
cmp
subb
and
mov
mov
call
repz
mov
shrb
int3
bound
and
xchg
shlb
xchg
lods
out
es
shr
aam
call
mov
mov
inc
test
xchg
xchg
cmp
adcb
rol
jo
ud1
xor
ds
popf
repz
loopne
push
mov
push
cmc
es
imul
mov
and
mov
orb
dec
sub
faddl
loope
and
sub
int
or
in
mov
test
mov
stos
dec
scas
mov
xchg
add
shl
lahf
maxps
addr16
or
popf
adc
mov
adc
xlat
inc
movsl
sbb
scas
adc
repz
lds
sub
lods
mov
mov
push
movsl
pop
cld
test
or
push
mov
lods
add
push
mov
repnz
jle
cli
mov
push
xchg
movsl
or
sub
cltd
fimull
mov
testl
fs
dec
data16
aaa
xor
lret
icebp
or
push
and
sarb
aad
test
pop
in
dec
shrl
fldl
imul
or
sbb
loope
andl
jmp
ljmp
movsb
not
push
mov
mov
sbb
add
xchg
mov
bound
mov
call
clc
cmp
leave
sarl
stos
jns
stos
dec
movsb
and
cmc
mov
fiaddl
orb
cwtl
push
mov
fcompl
mov
pop
ss
inc
repnz
add
pop
lret
in
aaa
test
je
js
ret
fnstenv
mov
jp
movsl
push
add
or
push
mov
adc
and
add
popf
test
sbb
stos
push
pop
aam
xchg
mov
jbe
or
mov
cmp
xchg
adcl
pop
outsl
mov
hlt
fs
mov
fsubl
xor
xchg
cmp
pop
out
ret
addl
sbb
jbe
loop
push
and
pop
andb
cli
adc
add
mov
outsb
or
aam
xor
cmp
stos
ljmp
mov
xchg
fwait
push
stos
sub
fsubr
sbb
test
mov
adc
xor
jns
gs
divl
jns
sub
inc
mov
adc
addr16
inc
int
pop
das
jg
into
adcb
add
push
lock
outsb
addr16
add
pop
inc
clc
jl
mov
sub
adc
sub
lahf
lret
mov
aas
push
mov
xchg
sub
add
fs
out
xchg
jg
dec
dec
mov
fidivrs
push
movsb
call
mov
in
mov
sbb
mov
pop
out
mov
pop
add
mov
xchg
add
pop
mov
mov
leave
outsl
sti
lcall
ret
stos
arpl
shl
negb
dec
push
or
fisttpll
sub
dec
mov
add
adc
sub
mov
jp
mov
je
and
xchg
mov
icebp
jns
lock
xchg
insl
test
push
sbb
repnz
movsl
dec
jmp
popa
add
adc
sbb
call
mov
adc
call
lods
rolb
les
daa
rclb
xor
push
mov
and
dec
and
mov
decl
rorl
jmp
jbe
adc
xor
out
dec
xchg
or
inc
or
inc
repnz
ret
test
jne
lock
mov
inc
and
sti
lcall
jge
in
call
fnsave
out
arpl
xchg
push
mov
pop
cmpsb
test
pusha
inc
add
ret
push
jno
or
xchg
lret
add
fs
dec
push
fistps
cld
movsl
addr16
scas
adc
mov
xor
hlt
add
adc
les
mov
inc
fidivl
in
jp
adc
arpl
and
pop
and
into
stos
aaa
lock
inc
and
rorb
xor
cmp
dec
inc
loopne
jmp
mov
outsl
cmp
xor
pop
leave
loope
addl
enter
je
push
push
stos
test
xor
rcll
fucomip
mov
mov
mov
dec
out
es
outsb
push
xchg
add
cltd
sbb
cmp
fcmove
push
out
sbbb
xchg
mov
push
pusha
dec
ja
or
mov
dec
cmpsb
repz
sub
dec
mov
push
inc
call
dec
loope
fldl
jnp
xorps
sbb
aad
popf
jne
xor
pop
cld
test
loop
push
jmp
gs
cmp
clc
ja
lret
jl
mov
xor
cwtl
pusha
cmp
outsb
xchg
pop
sarb
cmp
lds
test
push
xor
xchg
jg
fiadds
mov
xchg
clc
clc
lds
das
repz
enter
adc
sub
mov
adc
enter
jno
pop
stc
jmp
dec
mov
cmc
enter
je
std
out
mov
lret
mov
cmp
aas
ret
lds
sbb
push
push
add
mov
lods
mulb
cli
jmp
dec
test
in
inc
sti
cmp
pop
daa
lcall
cmc
push
stos
movsl
pop
das
mov
scas
fdivs
nop
xchg
in
out
dec
sbb
add
pop
fisttps
jle
push
jmp
imul
jl
shlb
sbb
arpl
ja
push
arpl
lds
xchg
insl
mull
cwtl
ficomps
or
nop
lods
int
aaa
xlat
inc
fimuls
fcomp
and
mov
aaa
and
xchg
sbb
bound
mov
lods
xchg
cmp
dec
or
cmp
je
push
or
cld
and
enter
push
fiadds
lahf
mov
test
jbe
decl
xor
add
jae
add
inc
sub
sub
stos
pop
mov
lods
sub
int3
es
test
sbb
adc
xchg
negb
je
jb
jl
pop
insb
xor
movsl
fsub
add
addr16
loopne
mov
mov
pop
push
sbb
pop
test
xlat
add
fidivs
orl
xchg
sub
shrl
cmp
stos
add
and
push
mov
xor
test
sub
nop
bound
pop
test
int
js
jo
mov
andl
push
std
imul
mov
mov
jo
mov
roll
mov
push
push
lcall
jns,pn
push
hlt
add
mov
add
cmp
cmp
and
je
jae
cltd
adc
mov
mov
loope
push
pop
inc
leave
mov
jge
sbb
cmc
mov
cwtl
mov
test
out
je
popa
lahf
mov
shl
fdivl
dec
cmpsb
lahf
and
and
pop
test
or
dec
xchg
xchg
jg
shll
in
push
imul
inc
mov
mov
jo
jp
mov
inc
stc
in
cmp
aam
xor
lcall
xchg
enter
fbld
test
insb
push
mov
jmp
mov
cmp
mov
adc
xor
dec
pop
cwtl
adc
aaa
dec
inc
orb
lcall
lods
call
icebp
cld
scas
decl
repz
orb
fdivr
push
rcl
shrb
and
aad
push
mov
adc
test
ljmp
cmc
sti
imul
test
int3
and
cmp
mov
lds
in
imul
pop
ja
sub
repnz
xchg
outsl
mov
js
rcl
inc
pop
xor
pusha
call
xchg
jo
data16
pop
ljmp
arpl
hlt
gs
stos
jns
lock
clc
lret
pop
stos
gs
gs
mov
cmc
int3
mov
ja
jmp
xorl
pop
jmp
ret
and
or
mov
mov
or
popa
lea
mov
movsb
push
fists
mov
icebp
push
sub
pop
pop
in
jbe
jns
jae
lret
imul
sti
jb
push
std
mov
pop
adc
mov
filds
loopne
roll
or
mov
outsl
insl
pop
in
outsb
mov
ror
lock
or
aad
sahf
rorb
lods
lds
cwtl
flds
push
dec
xchg
pop
xchg
cs
push
pop
and
cmp
xchg
inc
sarl
cmp
lcall
lds
loope
or
xchg
mov
out
inc
clc
jg
or
lcall
test
mov
push
dec
jmp
enter
cld
ret
xchg
cwtl
xchg
es
pop
add
mov
outsl
cltd
inc
jns
xchg
shl
out
sbb
ja
leave
mov
xchg
inc
or
aaa
fildll
xchg
mov
push
jp
cmpsb
sub
lock
cmp
jns
adc
xor
pop
mov
xchg
addr16
mov
xchg
ret
loope
repz
scas
dec
ror
incl
sbb
pusha
fld
cwtl
dec
jnp
push
sub
inc
pusha
les
lods
jno
les
lret
pop
push
adc
adc
xor
xchg
mov
mov
sbb
call
cs
dec
lods
nop
mov
repz
imul
outsl
fcomp
xchg
cmpsb
sub
mov
rcrl
jp
mov
jne
jno
fwait
mov
repz
pcmpeqd
rorw
outsl
aaa
fadd
xlat
lods
ljmp
dec
xlat
mov
scas
pusha
mov
sub
mov
sub
jae
xor
loop
fadds
pushf
add
scas
push
or
les
insl
loope
pop
int
xchg
sub
fimull
adc
add
dec
lea
daa
std
imul
scas
popf
pop
cltd
nop
adc
andl
pop
jg
jae
mov
sahf
push
iret
jge
jecxz
mov
andl
call
pop
out
movsb
mov
mov
mov
xchg
xchg
je
sbb
push
mul
jg
jp
ret
inc
mov
aad
dec
mov
or
mov
sub
out
ja
jg
fisubl
cmpsl
in
stos
aaa
mov
or
lret
cmp
test
pop
pop
movsl
xor
out
xor
sahf
loop
lahf
ucomiss
xlat
xchg
ja
inc
repz
cwtl
aad
cmpsl
xor
jle
cmc
outsl
aas
mov
dec
cmp
cwtl
icebp
push
cs
adc
test
daa
imul
push
lds
mov
push
es
sbb
jmp
dec
sub
add
scas
cmp
jae
adc
push
movsl
pop
repnz
dec
sbb
mov
dec
in
xchg
jno
subl
sub
xchg
jmp
mov
fisubl
adc
jne
outsl
mov
jle
mov
movsb
imul
sub
jecxz
and
xor
and
stc
xlat
fldcw
jg
test
ret
mov
mov
iret
je
push
mov
inc
idivb
dec
data16
xor
imull
clc
insl
out
cmp
sub
jns
fcoms
testb
pop
mov
mov
mov
cmp
lock
sub
pop
sub
jae
ds
push
sbb
dec
in
xor
dec
mov
fbld
or
mov
dec
daa
mov
cltd
sub
repnz
stc
testb
std
or
lcall
and
in
mov
clc
ret
loopne
push
adc
mov
movl
cli
inc
sub
cmpsl
push
inc
jle
sbb
movsl
testl
lret
and
lcall
icebp
loopne
inc
push
inc
push
pushf
add
mov
or
or
jge
cmpl
cmpsb
xchg
jmp
bnd
xchg
test
jecxz
das
hlt
xor
testb
sub
cmp
dec
hlt
je
push
adc
ret
cmpsl
lods
jno
xor
mov
pop
outsl
push
dec
icebp
mov
xor
test
lret
and
mov
int
mov
mov
dec
xor
rorl
fchs
xlat
pop
add
xchg
outsl
xchg
mov
xor
out
sub
mov
test
xchg
popf
push
hlt
out
pop
lock
ss
jmp
mov
insb
daa
jmp
jp
cltd
jecxz
lret
mov
daa
mov
adc
gs
daa
push
fadd
push
ret
adc
flds
ficompl
out
inc
xor
iret
adc
pushf
mov
sbb
lock
push
lahf
nop
add
pop
fldl
and
jp
mov
insb
fidivrs
xor
sbb
subl
outsb
add
lahf
dec
lock
int3
movsl
mov
sub
in
jns
sub
je
and
lret
push
push
push
mov
add
das
cmp
sti
lret
dec
mov
stos
xor
clc
cli
aas
stc
dec
scas
loope
dec
out
roll
xlat
cltd
andl
adc
mov
sub
xor
icebp
clc
dec
popa
sarl
in
rorb
insl
adc
adc
xchg
push
jb
push
ja
jle
mov
and
and
in
arpl
lret
popf
ret
cmp
xor
test
dec
test
popf
jge
imul
cld
popf
cmc
add
add
aas
in
jmp
sti
cwtl
mov
push
loop
or
or
pop
sub
xor
repnz
sbb
sbb
ficoml
jle
jb
xchg
mov
stos
inc
cld
fdivrl
push
aad
loop
in
lahf
xor
cmpsl
dec
push
sahf
inc
pop
scas
xor
or
xor
sbb
jae
test
adc
cmp
into
xchg
and
mov
negb
xchg
add
loopne
pop
sbb
insl
inc
mov
adc
push
fnsave
into
jecxz
mov
movsl
jbe
push
leave
lret
jbe
mov
arpl
mov
scas
mov
sub
stos
inc
mov
nop
sbb
sub
lret
outsb
or
cwtl
test
ljmp
add
or
bound
insb
aam
cmpsl
sub
loop
cmp
jnp
enter
ret
mov
in
int3
aas
sbb
out
inc
popa
mov
inc
jecxz
mov
mov
stos
iret
cltd
cmp
sbb
pop
inc
dec
iret
dec
dec
push
push
jge
aam
int
lock
jb
push
sahf
inc
es
test
mov
insl
sahf
out
cltd
ficoml
mov
loopne
call
or
sbb
jmp
bound
popf
sbb
rcr
push
pop
fsubr
lret
jmp
cs
cmp
aam
test
cli
js
cmpsb
test
cltd
shll
pop
lods
rcl
cld
mov
insl
ret
fs
cltd
mov
xor
jno
dec
cmp
mov
fisttpl
push
xchg
add
xchg
imul
repnz
xchg
loop
and
cli
lock
mov
aaa
stos
and
inc
inc
insb
sub
fwait
xchg
loopne
cmp
mov
and
fimull
jp
fneni(8087
in
jg
cmp
ja
in
or
imul
xchg
arpl
hlt
ss
push
outsl
imul
out
adc
lret
pop
push
lock
stc
mov
inc
jle
fcoms
out
pop
ret
sub
dec
shll
cmpsl
push
into
shlb
mov
decb
clc
dec
jnp
fcoms
adc
mov
dec
test
aad
adc
xchg
mov
pop
mov
mov
incb
loop
pop
cmpsb
iret
push
sub
rcrl
insl
mov
jb
lahf
dec
das
dec
inc
ficompl
lock
sahf
lock
add
fdivs
sbb
test
test
xor
in
inc
pop
iret
xchg
scas
in
mov
or
xor
fldt
and
jp
jns
sub
gs
js
jmp
icebp
pop
lret
mov
inc
pop
fxch
cmp
cmp
xchg
and
je
loope
jecxz
data16
push
fisubl
mov
in
dec
add
sub
and
or
imul
cmpsl
adc
inc
lock
xchg
pop
int3
out
adc
and
jnp
dec
hlt
int3
pop
test
xchg
lock
insb
add
cld
jnp
inc
orb
loop
dec
jp
das
pop
aaa
fs
faddl
push
jnp
cmp
sub
sbb
clc
aam
fs
mov
mov
fwait
in
xchg
mov
subb
jo
xor
fdivrs
push
dec
test
pop
out
mov
sti
and
mov
jbe
roll
imulb
add
adc
dec
cmc
cltd
in
sbb
cmpsl
imul
cmc
inc
popf
insb
repnz
test
nop
dec
dec
dec
xchg
imul
mov
fadd
add
nop
bound
mov
enter
jbe
mov
int3
shr
cwtl
test
inc
clc
inc
test
jns
ss
int
dec
pop
mov
iret
bound
push
lret
test
dec
fsts
movsb
inc
sbb
mov
jge
xchg
rcrb
mov
xchg
test
bound
jns
jnp
push
in
addb
push
mov
cmp
jge
sbb
daa
or
push
ljmp
daa
jg
mov
jl
lds
int3
and
insb
in
push
dec
mov
adc
in
sarl
insb
shrl
pop
out
cs
adc
pushf
lods
inc
xor
stc
push
lret
push
adc
imul
mov
xor
leave
xor
push
imul
lods
rcrb
outsb
push
pop
ja
mov
jbe
jbe
shrb
ret
mov
xchg
in
ss
inc
shr
or
pop
add
gs
aam
jle
xchg
repz
fsubl
or
jnp
add
cmc
cmp
les
inc
popa
pop
push
and
jmp
mov
mov
outsl
cmpsb
push
xchg
out
dec
mov
shl
orb
jle
and
icebp
js
add
in
adc
xchg
xchg
cli
dec
test
sti
mov
jecxz
sub
inc
scas
mov
pop
sbb
and
sbb
push
mov
dec
rorb
xlat
xlat
stc
and
ljmp
icebp
dec
mov
or
cmp
jle
adcl
jae
das
cmpsb
es
int3
jmp
and
sub
add
stc
clc
loop
mov
xchg
add
adc
dec
mov
test
fbld
pop
test
push
aas
dec
bound
out
sub
sbb
test
lock
fiaddl
cmpb
xchg
ja
repz
lret
aaa
pop
adc
add
fbstp
test
add
out
cwtl
sub
lahf
adc
adc
mov
fucomi
rcr
inc
ljmp
insl
jb
xor
test
add
insb
jo
mov
ja
jl
ds
sub
jecxz
ljmp
in
push
push
call
dec
fnstsw
out
stc
aas
cld
dec
out
adc
sbb
sub
jl
cmp
jns
aad
mov
mov
mov
fcomps
sbb
pop
sub
daa
fists
or
pop
cmp
out
loope
roll
je
imul
shrb
mov
mov
movsbl
stos
or
sbb
xchg
out
xor
fcoml
and
push
lea
stc
mov
nop
mov
cmp
mov
jmp
adc
jo
and
sarl
adc
shl
sbb
or
addl
inc
push
push
leave
xchg
dec
out
dec
xchg
mov
faddp
pop
insl
call
cmp
lock
in
inc
and
out
scas
ljmp
cmc
push
add
add
imul
sbb
add
in
xchg
lahf
push
add
jb
sbb
daa
pop
jge
insl
sub
pop
hlt
pop
mov
xor
mov
in
jp,pt
push
add
fs
add
adc
aad
clc
lock
outsl
aad
sub
adc
mov
cmc
cld
es
push
push
mov
inc
repz
test
push
pop
adc
ja
add
dec
mov
leave
jecxz
mov
jns
push
add
jnp
pop
pop
and
dec
push
push
push
arpl
pop
and
sbb
repz
dec
jg
sub
cmpsl
scas
imul
in
andb
cmp
dec
push
add
mov
pusha
pop
xchg
test
cmp
out
pop
jb
lea
sub
test
addb
xchg
mov
fcmovu
fldl2t
stos
dec
lea
loop
movsb
arpl
and
cmp
movsb
inc
faddp
jp
jmp
aad
mov
mov
rcl
pusha
mov
bound
ljmp
cmp
out
mov
daa
lret
xchg
inc
call
sbb
jl
pop
outsb
add
mov
push
jle
mov
int
je
sbb
ja
xchg
sub
stos
stos
jecxz
leave
sbb
adc
sbb
adc
jmp
pop
xor
lea
pop
test
jmp
cmp
mov
ljmp
dec
sbb
pop
mov
sub
shll
jnp
js
test
jno
pop
mov
loop
movsl
loopne
dec
jecxz
sahf
mov
mov
inc
xchg
pop
cmpsl
ficompl
cmc
das
orl
adcb
ret
scas
shr
rcrl
aas
shlb
jo
sbb
sub
decl
test
aam
adc
rolb
inc
sub
test
xchg
roll
cld
dec
cld
dec
inc
jp
lds
add
lahf
or
ss
jle
jnp
cmp
ficoml
stos
aaa
pop
out
arpl
pushf
addr16
mov
pusha
sub
lds
mov
push
notl
je
sbb
fwait
ret
rcll
sbb
ficompl
cmpsl
lock
cld
out
and
cmp
pop
into
andb
rcll
pop
add
push
jg
mov
mov
push
sbb
add
in
push
mov
cmc
dec
mov
jno
dec
cmp
sub
movsl
loop
mov
add
xor
xchg
shrb
daa
rclb
xchg
xor
mov
cwtl
push
xor
fistl
fwait
mov
jb
loope
xor
push
pop
push
jb
cmpsl
sbb
jbe
sbb
out
xchg
adc
ljmp
out
pop
pop
mov
das
xchg
sbb
mov
inc
pop
dec
push
lods
push
fs
inc
fnstsw
popf
outsb
sti
lahf
sahf
in
jecxz
jecxz
sbb
pop
call
pop
dec
frstor
adc
pop
xor
out
int
loope
sbb
fdivp
mul
xor
jns
mov
push
push
hlt
mov
push
adc
push
cmp
leave
dec
lahf
pop
add
es
pop
jl
dec
adc
enter
scas
xlat
inc
lretw
jg
add
movsl
outsl
into
push
mov
lret
nop
jne
mov
sbb
enter
pop
add
add
aaa
imul
aas
adc
scas
pop
adc
pop
adc
jecxz
xchg
mov
fsts
leave
adc
add
insb
lods
push
pop
in
ds
in
shlb
sbb
ljmp
inc
mov
test
in
mov
fs
arpl
xor
and
and
into
movsl
and
jnp
mov
lods
int
inc
add
js
outsl
pop
add
sbbb
fistpll
pop
push
dec
cltd
xchg
cmpsl
and
insl
sti
mov
mov
cmp
data16
add
cmp
dec
das
arpl
jg
mov
adc
stos
es
je
fcmovnu
mov
cld
inc
je
pop
xor
out
jecxz
mov
cmp
inc
add
jg
pop
out
or
xor
push
out
or
nop
cmc
mov
sbb
inc
sbb
fdivr
mov
leave
cmpsb
sti
inc
movsl
shll
imul
sub
add
mov
jecxz
xor
sub
addr16
cwtl
push
scas
fcmovnb
xor
pushaw
cmp
imul
xchg
add
pop
jbe
aas
and
push
addr16
test
mov
xchg
cmp
shll
push
dec
mov
mov
inc
mov
jns
cmp
stos
mov
cmp
dec
jns
mov
insb
and
dec
mov
or
pop
fldl2t
cmp
mov
dec
add
push
xor
rol
ret
mov
xchg
outsl
mov
pop
add
inc
push
xchg
push
sbb
sahf
stos
hlt
cmc
and
jle
add
cmpsb
dec
nop
add
adc
hlt
inc
xor
xchg
dec
and
pop
fs
pop
pop
mov
dec
adc
fadds
adc
xor
pusha
push
pop
fistpll
mov
and
xchg
push
scas
mov
cmpsb
loop
cltd
arpl
call
mov
movsb
daa
add
lods
add
or
jg
ja
mov
inc
xchg
cwtl
movsb
xor
sub
daa
dec
cltd
jnp
mov
scas
jnp
xchg
inc
aas
or
iret
pop
nop
cmp
or
jne
sbb
loope
sub
sarb
jne
ss
mov
movsl
sub
jns
mov
adc
cmc
dec
mov
xor
sbb
mov
sub
cmp
in
sbb
xor
clc
adc
inc
lods
loopne
cltd
inc
jmp
mov
dec
push
sbb
mov
int3
and
inc
lcall
data16
aas
pop
ljmp
mov
fldl
jmp
jo
xchg
mov
jno
xchg
xchg
ss
push
fiaddl
push
dec
aam
subb
movsl
call
repz
pop
in
les
mov
cmp
leave
add
popa
add
lret
dec
xchg
cmpsb
adc
and
ss
add
mov
and
sub
insb
cmp
xchg
outsb
in
movsl
rcll
in
adc
push
and
cmp
inc
fisubrs
mov
mov
pop
lea
inc
or
cmc
fimull
movl
xchg
aas
xchg
pop
mov
dec
int3
or
adc
adc
stos
ja
sbb
notl
sbb
xchg
mov
dec
inc
loop
out
shll
push
ss
jge
add
jmp
mov
mov
dec
mov
mov
mov
pop
push
pushf
inc
aas
and
call
pushf
daa
push
adc
icebp
test
movsb
mov
imul
rorb
inc
sub
dec
mov
inc
dec
sub
push
xchg
sbb
pop
or
mov
jl
aad
not
cmpsb
loopne
das
out
lea
push
int3
pop
fstps
das
or
daa
inc
fwait
dec
shl
arpl
sub
leave
cwtl
test
cmp
stos
inc
cwtl
and
loope
jne
add
mov
adc
mov
les
out
and
dec
or
fiaddl
inc
inc
jo
or
cltd
movsb
fsubrl
dec
nop
icebp
or
add
mov
movsb
out
adc
leave
dec
mov
pop
push
lods
mov
orl
cli
dec
sub
cmc
push
adc
je
outsl
jne
and
push
xor
loope
loope
mov
mov
or
imul
ds
orb
mov
sub
mov
ret
add
faddl
cld
cmpsl
ja
xchg
ljmp
and
test
rcrl
push
mov
mov
ret
push
cmp
jl
pop
aas
adc
ss
or
and
setne
xlat
sub
and
clc
mov
lret
clc
loopne
lods
mov
lds
and
push
mov
xchg
fadd
sub
xor
popf
inc
xchg
sub
test
sbb
xchg
cli
iret
repz
les
inc
add
mov
push
insl
cld
mov
lret
test
out
lcall
andb
addr16
mov
adcl
xchg
pop
mov
xchg
pop
rol
imul
xchg
xor
inc
and
xchg
jl
xchg
dec
adc
mov
mov
mov
mov
inc
adcb
pop
hlt
stos
data16
mov
or
mov
mov
jae
inc
leave
lds
xor
mov
jecxz
outsl
cmc
cli
xchg
loop
cmp
mov
push
icebp
dec
cld
cwtd
mov
inc
sti
mov
push
add
leave
push
push
inc
sub
and
push
ret
cmc
xor
in
and
gs
mov
cwtl
xchg
ret
mov
in
jmp
shrb
push
sar
and
pusha
pusha
icebp
or
imul
xchg
int3
sbbl
fs
push
mov
test
xor
jg
addl
pop
fcoms
cmp
lods
arpl
out
lahf
pusha
leave
jnp
xor
scas
mov
mov
mov
aas
pop
or
fldcw
inc
dec
mov
adc
lahf
test
leave
arpl
xchg
movsb
inc
nop
arpl
jge
dec
pop
mov
mov
hlt
int3
dec
scas
pop
xchg
test
sub
adc
imull
cltd
mov
xor
inc
pusha
inc
stos
and
adc
push
inc
test
cmpsl
call
xchg
sub
test
xchg
pop
sar
pop
pop
pop
ja
jns
mov
xor
fldt
adc
inc
idivb
imul
mov
out
das
xchg
push
outsl
mov
push
fdivl
push
cmpsl
sbb
xorl
mov
pop
jb
pop
and
out
xor
cmp
add
push
les
jae
xchg
and
jns
and
cmp
cmpb
sub
mov
out
pop
ja
jbe
cmpsb
cmpb
mov
pusha
in
divl
adc
sbb
sbb
imul
jb
in
call
mov
xchg
divb
mov
add
mov
lods
cltd
or
jg
dec
cmp
mov
xchg
imul
jg
add
clc
pop
add
pusha
push
mov
call
ret
addps
mov
addr16
and
inc
mov
popa
lea
dec
not
mov
fists
pop
cmpsb
dec
dec
push
imul
dec
loopne
iretw
dec
jbe
mov
loopne
fsubrs
xchg
mov
sbb
ljmp
mov
xchg
ror
movsl
ret
mov
pop
and
lea
lea
jb
inc
scas
dec
in
ret
neg
add
inc
test
mov
jecxz
xor
adc
push
movsb
mov
cmpsb
or
jo
lret
rorl
popf
inc
adc
int
fbstp
xor
add
push
add
jnp
adc
push
push
fists
std
adc
fidivs
lods
test
mov
xchg
repz
mov
test
ds
mov
xchg
mov
in
inc
jecxz
xor
mov
xor
mov
adc
xchg
mov
xchg
pop
dec
cmpb
popf
push
pop
cmpsb
pop
xchg
push
dec
lods
mov
mov
inc
aad
jo
mov
std
bound
push
imul
mov
sbb
prefetchwt1
sub
xchg
jmp
or
les
ss
fwait
inc
cli
addr16
push
outsl
loopne
pop
movb
repz
pop
sbb
je
loope
xor
aam
push
cmp
lock
clc
add
inc
stc
dec
cmp
stc
adc
outsb
sub
jmp
cmpsl
sbb
cltd
fadds
nop
pop
rorl
inc
lahf
fidivrl
push
push
mov
xor
pop
and
push
lcall
arpl
mov
std
sbb
inc
dec
inc
inc
dec
outsb
mov
call
dec
enter
xchg
ljmp
jae
xlat
and
scas
dec
mov
or
mov
pop
or
out
ret
mov
push
mov
fstpt
imul
dec
ret
pop
or
sub
into
push
adc
repnz
mov
jb
jne
add
test
insl
pop
das
mov
xchg
popa
xchg
out
or
pop
mov
movsl
pop
les
cmp
mov
jecxz
fsubl
out
jbe
dec
in
addr16
ljmp
adc
or
into
mov
loop
dec
ja
mov
xchg
aad
jbe
xor
roll
imul
loop
and
jmp
outsl
cmp
add
mov
leave
push
push
adc
push
lds
call
pop
repnz
sub
aas
pop
cmp
repnz
aaa
das
add
or
add
mov
stos
iret
jle
pop
or
mov
lret
iret
stos
arpl
dec
cmp
mov
loope
xlat
icebp
push
ss
mov
sbb
xchg
shrl
cli
fimuls
negb
mov
push
test
fistl
cli
daa
or
jp
es
invlpg
push
mov
call
jnp
cmp
movsl
js
lret
fnstenv
and
pop
inc
int3
sub
fcmovbe
enter
iret
sti
js
jecxz
shrl
mov
cmc
ret
mov
mov
xchg
push
out
aad
push
lcall
push
push
ljmp
aaa
adc
gs
pop
mov
inc
and
gs
pop
or
sbb
pusha
push
sub
adc
mov
adc
insb
dec
xchg
loope
loopne
cmpsl
adc
jo
push
andl
arpl
test
xor
inc
mov
push
stc
mov
ja
and
lock
roll
mov
push
inc
in
outsb
outsl
jl
mov
dec
mov
jo
ror
enter
sub
mov
cltd
mov
pushf
loope
cwtl
add
cs
push
out
outsl
or
xchg
add
nop
orb
sub
popl
fcom
jns
movsl
jmp
ds
push
mov
test
repz
mov
jg
xchg
jmp
fdiv
add
out
adc
mov
adc
movsb
ud1
ja
add
and
ret
or
pop
inc
xchg
aaa
fstpt
cmpsl
in
into
imul
es
jae
xchg
dec
in
mov
sbb
in
fbstp
das
in
movsb
sub
stc
scas
dec
das
mov
or
xchg
cmp
imul
mov
stc
adc
cli
mov
insl
fnstsw
push
xchg
push
icebp
dec
filds
notl
test
xchg
loopne
xor
mov
cltd
mov
daa
out
xchg
cmc
cmp
int
aad
repnz
pop
pop
mov
roll
push
push
jae
xchg
mov
imul
or
test
out
es
and
jmp
fs
mov
in
sub
out
ss
cmpsl
inc
cmp
dec
cmp
pop
outsb
sbb
push
arpl
dec
dec
sub
popf
clc
mov
mov
cmp
ljmp
fsubr
icebp
jp
or
lret
dec
adc
cwtl
pop
stos
addl
sub
pop
cli
add
sbbb
sahf
xor
rcl
mov
and
inc
cmp
ret
pop
mov
xor
inc
cmpsl
stos
push
fcomip
les
fstpt
lock
imul
push
pop
sub
cmc
push
xor
mov
push
sbb
rorb
outsl
sahf
or
xor
stos
fisttps
cmp
stos
ror
imul
leave
movsb
add
inc
push
push
xchg
inc
xor
and
cmp
jnp
lea
insl
daa
and
mov
jae
push
into
lock
aas
add
in
es
rcrb
mov
fistpll
xchg
out
das
pop
xchg
popf
inc
dec
cmc
jecxz
mov
out
adc
jmp
and
adcb
mov
lds
or
sbb
inc
adc
rclb
or
lret
stos
add
mov
leave
sub
cltd
cmp
in
push
mov
mov
cld
sbb
jmp
movsl
cmovne
pop
leave
fisubs
out
in
cmp
inc
bound
rcl
shlb
mov
sti
enter
and
addl
test
xor
xor
lods
test
aam
mov
xchg
push
arpl
fstp
stc
repnz
call
insb
inc
and
mull
pusha
inc
dec
mov
adc
mov
rol
push
daa
mov
push
inc
adc
shll
jno
sbb
cmp
jns
mov
adc
ret
in
push
push
loope
stos
add
cltd
out
dec
dec
in
inc
ss
add
jb
push
popf
inc
xchg
cmp
sbb
jp
and
xor
xchg
mov
lods
cmc
push
js
jl
mov
mov
bound
pop
and
loope
lds
mov
cmp
add
add
sub
mov
mov
je
mov
inc
scas
decb
outsl
mov
xor
cmp
push
adc
inc
sub
and
mov
stos
xor
add
jns
fdivrl
or
imul
in
dec
xchg
and
imul
nop
adc
arpl
pop
cmp
lret
pop
aaa
or
pop
fidivs
pop
fwait
daa
clc
add
pop
or
pop
lods
stc
xlat
sub
and
mov
jle
add
cmp
sbb
js
mov
pop
icebp
pushf
ds
aaa
inc
sbb
dec
jnp
test
mov
xchg
mov
daa
push
sti
fs
dec
sahf
jle
adcl
mov
jbe
adc
fistl
mov
mov
int
cmp
xchg
push
lcall
push
movsl
cld
pop
adc
pushf
cld
pop
or
mov
add
leave
sbb
or
jge
movsb
jnp
inc
dec
icebp
imul
movsb
inc
jnp
fdivs
or
mov
dec
pushw
inc
sbb
sti
push
pop
pop
stos
or
fnstcw
cltd
and
xchg
outsl
xor
mov
mov
rorb
rorb
shll
xor
pop
push
xchg
in
std
cltd
enter
jo
fldt
ljmp
out
pop
sbb
add
ss
js
hlt
out
iret
sbb
jp
mov
cmp
mov
jne
call
data16
cmpsl
mov
mul
int
inc
pop
sub
aam
fldt
mov
mov
outsl
sbb
test
les
je
lret
mov
pop
int
rcrl
sahf
sbb
and
cmp
cmpsb
out
shl
inc
push
test
push
push
xchg
mov
mov
out
ret
not
in
sub
dec
jmp
cmp
lock
repz
adc
pushf
jae
fcomps
inc
stc
inc
les
scas
cmp
sub
adc
in
cmp
pusha
mov
dec
cmp
jb
fisttps
pop
jns
sub
mov
loopne
bound
mov
cld
call
dec
aaa
add
cmp
jge
push
rclb
pop
stos
shrb
bound
das
mov
mov
jno
les
inc
aad
push
pushf
adc
lea
pusha
call
testl
movsl
sub
cmp
je
scas
call
lock
loopne
imull
lret
pop
mov
imul
std
call
aam
repz
add
call
ds
cmp
mov
adcl
fs
jmp
add
out
xor
out
in
icebp
cmp
mov
orl
jecxz
and
mov
inc
cwtl
stc
push
lds
lea
imul
cmp
xor
xor
cld
mov
adc
shl
dec
inc
mull
cs
pop
scas
mov
dec
test
inc
cmp
mov
gs
and
gs
pop
cs
add
lret
int
lea
cmpsb
lock
push
inc
jb
xchg
testl
enter
cmp
fstpt
cmp
xor
mov
add
mov
insl
sbb
shrl
bound
dec
xchg
adc
ret
pushf
pop
into
popf
mov
lods
cwtl
aas
add
fs
and
mov
pop
xchg
mov
xor
aaa
pmulhw
popa
sbb
xor
sub
push
jge
inc
icebp
xor
nop
fcmovbe
dec
push
jno
jl
xor
sbb
out
shlb
mov
outsb
push
mov
push
sbb
push
sub
out
dec
fs
xor
sub
test
aas
dec
pop
ror
and
sbb
cmp
mov
stos
jmp
std
js
ja
jne
pop
arpl
mov
std
lret
in
and
dec
mov
test
icebp
dec
stos
pop
ret
aam
pop
add
cmp
dec
fiaddl
imul
scas
push
dec
lods
fucomp
outsb
outsl
xchg
sbb
dec
les
pop
fisttpll
hlt
push
subb
cmpb
cmpsl
pop
rorl
test
dec
movsb
testl
jge
into
cltd
movsl
cmp
loopne
jae
fwait
outsb
or
fidivl
adc
fucom
adc
dec
jbe
dec
xchg
inc
test
or
lea
cmp
mov
shrl
test
out
pop
vmwrite
sub
xor
lret
outsb
inc
sub
xchg
inc
mov
cmpsl
pop
sbb
lret
pop
adc
pop
cltd
call
pop
inc
mov
movb
or
cmp
adc
lods
popf
inc
push
or
cmp
fsubrs
sub
ret
and
pusha
push
dec
mov
sbb
push
jne
cmp
mov
push
pop
mov
mov
inc
cmp
add
mov
or
sar
push
jns
dec
addr16
and
sbb
in
add
add
pop
les
loopne
addr16
push
jg
mov
fcompl
adc
jb
dec
fiaddl
neg
inc
call
stos
aam
imul
fcomi
and
idivl
std
out
jns
pop
call
jle
repz
push
icebp
out
cmpsb
mov
mov
add
test
cmp
dec
cmp
test
aas
mov
fcom
lcall
aad
lds
adc
adc
cld
xor
jp
flds
hlt
mov
push
ret
loop
push
pop
adc
sbb
js
dec
out
dec
loope
fisttps
jns
and
push
cli
scas
insb
loopne
stos
cwtl
into
jmp
xchg
lgs
ret
cli
aam
and
int3
aam
add
das
insb
mov
xor
dec
stc
lds
testb
pop
lods
ret
and
aaa
add
add
inc
dec
adc
adc
pop
arpl
cmp
inc
repz
daa
cmp
sub
sbb
stos
add
fimull
jo
sub
pop
loopne
sbb
nop
push
fisubs
mov
adc
or
push
mov
cltd
shr
mov
out
jae
in
and
repz
repz
dec
sub
or
and
fs
movhps
fiaddl
inc
rcrb
sbb
or
adc
xchg
xor
shll
mov
cmp
adc
fisubrs
ja
cmp
sub
mov
arpl
shll
mov
loop
push
cmc
inc
out
adc
movsb
mov
pop
scas
in
arpl
push
or
es
loope
popf
std
imul
pop
cltd
pushf
add
repz
ds
sub
push
subb
xchg
movb
xchg
mov
inc
hlt
popf
and
pop
sub
aam
cmp
pop
mov
clc
ja
push
pop
sbb
stc
ret
and
xor
mov
out
cmc
or
and
xor
jns
xor
rolb
mov
pop
sahf
lcall
out
pop
xchg
or
jg
hlt
ficomps
loopne
add
std
mov
stos
adc
clc
sub
loop
cmp
mov
loope
jmp
sub
mov
inc
push
push
or
paddd
or
or
adc
jle
push
or
pusha
mov
in
gs
push
fcmovbe
movsl
sti
fadds
jbe
or
je
adc
inc
shrl
xadd
das
cmpsl
movsb
int3
sar
xchg
insb
cmp
mov
test
fbld
shrb
sub
aam
xor
shr
test
mov
arpl
adc
das
cwtl
mov
sarl
push
hlt
outsl
ja
aaa
fstpl
aad
jb
ljmp
and
pop
pop
fldt
push
jge
inc
test
scas
fdivs
add
adc
test
xchg
pop
ret
aam
insb
sarl
pushf
ljmp
or
and
sub
push
xchg
push
push
push
test
sbb
sysenter
pop
outsb
mov
js
stos
and
clc
stos
push
inc
xor
mov
popa
je
andb
iret
mov
push
push
in
sbb
pusha
stos
lret
jo
sub
andl
int
mov
pop
scas
clc
mov
push
les
pop
mov
push
imul
xor
pop
test
adc
xchg
add
pop
ds
cmp
incl
push
inc
lock
out
out
inc
insb
mov
sbb
mov
mov
xchg
add
adc
xchg
repz
sbb
out
dec
push
cld
mov
jo
imul
and
push
cmp
icebp
aas
xchg
ficoml
test
popa
sahf
cmp
push
xor
mov
sti
stos
aad
xchg
mov
in
inc
push
lock
xchg
adc
loopne
mov
in
ret
push
addr16
xchg
arpl
mov
jbe
or
adc
test
mov
fldt
and
out
pop
add
sbb
cld
loop
jns
or
jg
mov
sbb
insb
cmp
call
jl
lret
dec
inc
scas
out
sub
sub
xchg
fwait
ja
mov
fisttpll
nop
xchg
gs
xor
mov
jo
jle
pushf
int3
pop
or
xchg
loope
mov
mov
cmpsl
outsl
add
add
test
lds
lds
outsl
push
imul
and
faddl
pushf
loop
lret
pop
and
cmp
xor
lret
mov
imul
lret
xchg
cmpsl
fcmovne
icebp
jno
fcomps
in
adc
insb
add
call
mov
cmp
add
xor
mov
add
lds
rcr
mov
sub
lret
data16
and
sahf
out
add
enter
add
mov
sub
adc
cli
imul
xchg
cmp
push
jp
and
push
shrb
call
addr16
jae
cwtl
fimull
test
xchg
jbe
jg
jne
stc
insb
lock
cltd
cld
iret
mov
pushf
cmp
push
xor
roll
pop
mov
les
in
in
mov
mov
jp
aaa
mov
cmp
lods
dec
test
sahf
lea
lea
es
mov
roll
lods
adc
mov
mov
push
xor
dec
adc
adc
shrl
mov
jno
sti
mov
mov
loop
mov
out
fnstenv
jo
js
mov
add
pop
mov
dec
scas
or
dec
cmpb
scas
daa
pop
or
sub
xchg
push
sbb
push
fistpl
cmp
xchg
pop
jmp
repz
pop
mov
mov
xchg
cli
test
lahf
mov
std
lret
xchg
dec
imull
cltd
mov
lcall
pop
hlt
inc
nopl
call
cs
jp
cmp
sub
sbb
scas
inc
outsl
fidivrs
mov
pop
imull
lods
ljmp
scas
mov
cmp
push
push
sub
cs
sub
mov
mov
call
xor
dec
lock
rep
push
add
jge
cmpb
enter
popa
add
stos
out
and
adc
aaa
decl
testb
pop
xchg
push
test
xor
cmp
sbb
add
out
cmpsl
hlt
inc
sbb
hlt
dec
cmp
xor
jp
enter
sbb
push
imul
cmp
adc
aad
stos
adc
and
scas
loopne
repnz
aam
out
dec
adc
sbb
mov
dec
jge
data16
mov
cmp
xor
mov
mov
test
int
addr16
mov
sub
or
xchg
int
icebp
inc
ds
scas
dec
bound
cmp
std
fimull
pop
sub
sti
nop
mov
sbbl
test
jns
mov
mov
inc
mov
mov
aas
adc
jo
loopne
ffree
and
pushf
add
add
dec
aas
jne
test
mov
pusha
push
adc
adc
xor
in
mull
mov
or
add
fadds
lret
lret
pop
movsl
mov
pop
cmp
out
sub
xchg
jle
xchg
pop
popf
rcrb
dec
and
jp
cli
xorb
dec
cmp
pop
mov
or
sbb
jns
imul
popl
push
pop
mov
sbb
mov
and
pop
hlt
pop
push
call
in
sub
sbb
push
pop
mov
xor
add
test
loopne
nop
jne
add
test
enter
xchg
repnz
adc
dec
dec
cmp
mov
sub
fs
out
xor
mov
sbb
movsb
cli
rolb
sbb
sbb
pop
add
mov
jnp
jne
int3
dec
dec
mov
jb
add
cmpsl
mov
divb
in
push
dec
push
pop
jmp
cltd
sbb
ror
sbb
pop
cmpsl
fs
cmpsb
mov
jge
jbe
or
idiv
xor
xchg
inc
cmp
adc
sbb
jo
hlt
push
mov
mov
sub
push
aaa
sbb
movsl
and
adc
mov
xor
mov
push
add
pop
push
add
pop
repnz
sbb
cmp
jae
fisttpll
jo
es
cwtl
pop
jge
addb
cmpsl
in
mov
mov
jnp
push
sbb
and
pop
repnz
mov
jno
jg
push
or
leave
cltd
push
addb
icebp
push
pop
int
cmp
popa
mov
notb
icebp
gs
adc
out
adc
test
pop
loopne
mov
lock
inc
ret
mov
and
fmuls
sti
mov
sbb
test
movsb
jne
xchg
fldl
scas
xor
xor
bound
push
shrl
in
add
xchg
xchg
iret
gs
into
and
leave
add
push
dec
cmp
cmp
add
cmpxchg
jmp
cmp
push
cmpsb
ds
cmp
xor
repnz
mov
push
xchg
pop
xor
das
mov
add
pop
ja
stc
pop
ret
stc
cmp
or
xchg
or
cmpsl
mov
ficoms
mov
gs
aaa
sbb
ret
cs
cmpsl
xor
imull
movsb
sbb
mov
mov
jge
xchg
inc
addl
mov
ss
into
lods
xor
psubw
mov
out
xchg
dec
sub
pop
push
sub
mov
lret
roll
xchg
cmpsb
pop
cmpsb
jns
cmp
dec
int3
inc
test
dec
stos
push
gs
dec
out
xchg
mov
gs
cmp
and
or
or
jb
aas
cmp
mov
stc
js
pop
xchg
or
mov
fbstp
pop
xor
cs
out
cmp
cmp
int3
push
mov
cmc
arpl
cmc
scas
or
cld
inc
fists
mov
sub
dec
outsb
pusha
scas
imul
pop
mov
xor
insb
ss
xchg
and
mov
sbb
add
test
imul
std
jne
insb
push
sub
push
cwtl
or
mov
push
mov
push
lds
mov
popf
cmpsl
adc
pop
lahf
aas
adc
insl
faddl
cmp
cmp
ret
out
push
cltd
xchg
or
sbb
stc
mov
cs
mov
sahf
js
jg
jnp
and
shll
lock
and
cmpsb
addr16
inc
mov
jns
cmp
sbb
xchg
dec
xor
fstpl
outsb
xchg
bsr
dec
and
inc
loope
sbb
adc
out
cmp
stos
lods
and
cmc
movsl
pop
inc
shrb
inc
lret
mov
lds
jns
cmpsl
or
inc
repz
aad
mov
mov
and
sti
mov
test
mov
mov
cld
fistpl
pushl
nop
mov
sahf
mov
popa
mov
inc
mov
cmpsl
fldl2t
sbb
mov
fadd
push
pushf
std
sub
loope
jne
push
mov
hlt
imul
frstor
pop
aam
scas
in
xor
cmp
addb
cmp
inc
add
mov
in
xor
pop
stc
jecxz
out
imul
and
out
mov
data16
cld
add
repnz
push
jmp
addr16
push
cmp
je
push
cltd
mov
dec
mov
je
push
cmp
fwait
cwtl
jecxz
adcl
cs
daa
insb
call
dec
pop
int3
enter
mov
or
pop
push
rclb
jno
lea
movsb
sbb
sub
sbb
pop
int
xor
sti
gs
fwait
mov
push
dec
add
inc
js
add
std
xchg
test
mov
das
lahf
mov
jno
sub
push
outsl
repnz
orb
cmc
hlt
shll
add
pop
adc
jb
or
push
repz
pusha
int3
cmc
adc
imul
jnp
out
mov
icebp
mov
in
int
cmp
sbb
xchg
ret
fs
mov
dec
mov
pop
pop
push
and
inc
push
cmpb
stos
mov
lret
pop
imul
mov
mov
jg
adc
scas
jnp
adc
cmp
cli
and
cmc
dec
inc
mov
sti
ds
mov
divb
push
pop
mov
out
pop
cld
hlt
or
repz
fmull
mov
sub
push
fbld
sbb
aam
pop
sti
or
ja
dec
mov
repz
test
jl
cld
jge
push
jp
mov
and
jp
and
jbe
in
mov
and
pop
repz
add
cmp
mov
shll
loopne
mov
pop
insl
negb
jmp
xor
sub
xchg
push
pusha
pop
adc
daa
lods
sbb
cmp
dec
and
pop
sub
lods
daa
jns
sub
testl
movsb
nop
mov
cmpsb
imul
ds
jp
mov
xor
jecxz
mov
lods
insb
cltd
aam
mov
clc
repz
test
push
xchg
push
pop
inc
cmp
dec
in
xlat
xchg
cli
imul
pushf
jbe
mov
mov
leave
hlt
mov
int3
repnz
stos
jge
mov
fsubp
cmp
sahf
fwait
mov
cmp
push
out
mov
jmp
inc
push
push
in
pop
cs
and
jnp
in
enter
ja
inc
sub
inc
dec
mov
addb
lds
sub
mov
scas
mov
mov
test
ror
add
add
in
movsb
jmp
stos
xchg
cmpsl
ret
pop
adc
jl
xlat
divb
push
sub
ret
pop
aad
xor
or
inc
lds
mov
orl
jle
out
ss
push
mov
lret
arpl
insb
or
test
out
dec
aaa
push
ret
sarl
jbe
sbb
adc
mov
icebp
les
pop
popf
jg
push
rol
daa
add
add
orl
mov
dec
leave
rcll
popa
jecxz
pop
cmc
cmp
aaa
enter
cwtl
fidivrs
mov
sti
pop
jo
fwait
push
imul
out
test
mov
mov
sub
xor
inc
cmpsl
cmp
push
jmp
ljmp
or
fsubr
daa
data16
aam
adc
push
pop
mov
xorl
scas
jl
pop
mov
cmp
xor
loopne
in
cmp
mov
mov
loopne
pushl
push
xchg
sub
push
pop
ljmp
popf
loop
add
imul
sub
outsl
iret
out
in
mov
lods
flds
jp
xor
jg
cmp
addr16
sub
sahf
push
les
cli
mov
cmp
sbb
int3
push
push
popf
clc
jae
ss
xchg
in
pop
sarl
loop
subb
xor
int
daa
icebp
int
cs
sub
jns
arpl
xor
scas
push
xor
add
icebp
in
repz
xchg
fs
sub
scas
imul
sahf
ljmp
int
push
cmp
cmp
ret
or
xlat
adc
jnp
dec
mov
inc
xchg
loope
mov
faddp
ds
xor
call
popa
lret
mov
vunpcklpd
xchg
and
xor
sbb
lds
mov
xor
jmp
out
arpl
sar
fsubl
mov
and
mov
iret
push
jbe
add
and
xacquire
mov
and
out
mov
mov
mov
shll
lock
idivl
sbb
fistpll
xchg
ret
mov
orl
mov
and
movsb
adc
in
cmp
outsb
sub
ficoml
andl
mov
imul
add
out
enter
push
cmp
mov
pop
test
jo
gs
daa
xchg
out
sbbb
sahf
xchg
sahf
xor
lds
jl
data16
jnp
or
cmp
mov
pop
jl
int
xchg
daa
lret
in
jno
inc
mov
orb
cmp
push
inc
daa
xlat
dec
scas
clc
in
cmp
test
movsl
push
cmpb
int
nop
orb
jb
dec
test
packsswb
pop
sub
inc
sub
fs
fcomps
dec
inc
mov
rcrl
pop
sub
add
inc
faddl
xor
stos
int
push
fdivrs
pop
push
lock
xchg
flds
dec
lea
sbb
mov
dec
jns
out
paddb
pop
mov
fisttps
test
into
shrl
repz
ret
mov
outsb
roll
rclb
nop
jae
pusha
inc
xchg
ficompl
lcall
pop
sbb
in
movsb
mov
dec
mov
inc
pop
jp
or
scas
fs
scas
mov
jae
clc
jecxz
push
cwtl
call
orl
sub
sub
lcall
sub
push
add
mov
dec
fcmovnb
add
bound
lahf
movsl
adc
jno
mov
cmp
jb
outsl
jbe
lret
and
insl
roll
aaa
ja
mov
or
cmp
pushf
dec
adc
xchg
imul
jl
jmp
xor
inc
cmpsb
xlat
jns
repz
xchg
jae
loope
mov
addr16
dec
test
pop
cwtl
std
inc
mov
in
sti
andb
subb
mov
jp
adc
sbb
mov
cmp
sti
mov
sub
mov
popl
icebp
inc
xchg
inc
and
rcr
xchg
lahf
mov
popa
aam
add
fdivs
sbb
movsl
movsb
pusha
ds
xor
sbb
xchg
fs
mov
mov
or
iret
push
xchg
pop
mov
std
ficompl
repz
subl
mov
mov
inc
call
test
dec
pushf
push
sbb
mov
clc
imul
cmp
js
jne
mov
cwtl
add
es
mov
inc
mov
fsubrs
xlat
iret
ja
xchg
jae
cs
lcall
xchg
movsl
and
pusha
ss
ljmp
rcll
int
sub
lcall
int
cltd
pop
cli
mov
sbb
cmp
push
pop
mov
pop
push
scas
outsb
sbb
subl
adc
pop
ret
dec
clc
icebp
pop
add
push
popa
out
cmp
add
xchg
lcall
lahf
mov
fwait
push
in
dec
push
mov
jo
mov
loope
cmp
or
scas
sbb
lcall
nop
pop
push
data16
inc
xor
adc
pop
ficoml
cs
add
cld
mov
icebp
jp
cwtl
cmp
enter
lret
jecxz
insb
xorb
push
sub
sbb
popa
repz
fnstsw
inc
insl
inc
inc
cmc
push
add
outsl
and
inc
dec
mov
dec
inc
adc
sbb
cmp
sbb
jp
xor
les
into
xchg
add
mov
loopne
out
test
xchg
ret
scas
clc
and
imul
pop
add
mov
push
xchg
jmp
popa
rcll
add
jecxz
add
sbb
adc
xorb
sub
and
adc
stos
call
adc
jbe
jb
into
out
popf
push
pop
cmp
adc
fidivl
test
mov
xchg
movsl
bound
subb
sbb
sti
testl
nop
dec
jmp
imull
xor
clc
stos
repz
pop
mov
sub
dec
xor
lret
sarb
xor
ret
inc
pop
leave
xor
xchg
mov
pushf
outsl
jno
add
insb
dec
cmp
sbb
and
adc
push
mulps
scas
aas
jl
mov
gs
pop
mov
mov
or
test
xchg
les
jmp
cli
lods
push
xchg
imul
mov
pop
mov
outsl
xchg
xor
dec
sub
add
sarl
mov
stos
inc
adc
and
pop
mov
rcll
mov
popf
aas
add
loopne
or
or
xor
jle
repnz
cld
ret
sahf
imul
dec
push
and
xor
imul
sub
add
jmp
fnstenv
xchg
dec
stos
lds
mov
and
jnp
inc
pop
cmpsl
sbb
int
mov
cmc
lahf
mov
and
cmp
clc
sub
push
fadd
mov
push
sbb
sbb
mov
out
inc
push
call
cmp
adcl
lock
push
fcoms
cmp
pop
xorl
fs
lret
les
sbb
aam
xchg
xchg
jbe
adc
lcall
push
aas
cmp
test
out
inc
repz
pop
add
lahf
cmp
cld
and
push
adc
dec
orb
jne
movsb
pushf
loop
inc
dec
mov
cmp
sub
push
dec
mov
out
sub
dec
in
xor
nop
xchg
lods
dec
cmp
jle
sub
and
dec
repnz
push
pushf
pop
lret
mov
push
pop
and
nop
movups
push
xchg
sahf
mov
cmc
fdivrl
push
xchg
loopne
inc
imull
pushf
orl
sub
dec
jno
fbld
push
jno
in
cmp
inc
push
lea
popf
adc
aaa
fimuls
xor
cmp
xchg
mov
dec
fwait
enter
or
mov
incb
out
es
xchg
sub
pop
call
inc
xchg
cmpsb
jmp
push
mov
in
sbb
xchg
inc
insl
push
int
shrl
fsub
mov
push
add
fs
dec
or
hlt
stos
or
or
ret
sti
inc
mov
cmpsb
and
or
sub
push
xchg
dec
aaa
sbb
cmp
pop
iret
aaa
rolb
orl
or
out
push
xor
aas
or
dec
rcrl
and
cmp
or
xchg
mov
xlat
jl
cld
lahf
mulb
int3
cmpsl
das
lret
fidivrs
jne
mov
aad
pop
xor
lcall
inc
cltd
mov
mov
cmp
dec
xchg
xor
pop
jmp
xchg
mov
pop
push
mov
mov
jg
inc
sbb
outsb
xorb
mov
not
fsts
cmp
cmp
cmp
bnd
stc
popf
in
aad
dec
jb
inc
cmp
aad
out
cwtl
aam
aaa
fsubp
mov
inc
imul
movsb
mov
in
fldl
push
shlb
jo
mov
lods
sbb
bound
sub
push
test
and
out
inc
mov
das
xor
cmp
pop
mov
jno
add
repz
mov
mov
dec
mov
cmp
pusha
jle
inc
push
xor
or
js
call
mov
movsl
xchg
add
mov
daa
sbbl
scas
outsl
xor
pop
enter
adcb
mov
fdivl
or
xor
xchg
lds
jge
jne
test
lcall
shll
sarb
sbb
aad
imul
shl
fadd
adc
es
out
out
dec
jge
xchg
pop
xchg
jmp
loop
jb
jo
shll
xchg
mov
and
xchg
test
pop
jbe
ss
xchg
add
cltd
mov
test
lods
or
pop
sbb
aaa
xchg
push
add
xchg
xor
adc
test
loop
insb
cmp
stos
ljmp
xor
pushf
jno
jns
out
frstor
mov
shll
dec
cld
jmp
testl
imull
cmp
stc
clc
lds
adc
jmp
mov
lcall
shlb
xchg
mov
rcrb
icebp
push
out
repnz
cli
push
test
outsb
andl
fbld
loop
pop
mov
push
es
lods
add
sbb
mov
pop
inc
cld
ja
mov
loopne
jns
aas
cmp
and
xor
out
inc
in
pop
shl
cmp
stc
cmp
pop
adc
mov
pop
cwtl
mov
mov
mov
in
jecxz
bound
fdivrs
mov
repnz
inc
lock
dec
test
outsb
mov
insb
xchg
ljmp
add
loop
push
dec
nop
mov
mov
mov
sub
lcall
jns
cmpb
jmp
push
add
lret
stos
lret
cmp
fdivl
lret
add
inc
cs
data16
sub
sbb
push
lock
gs
fldl
mov
mov
movsl
pop
xchg
jne
mov
push
test
jb
and
dec
xor
pop
out
push
mov
stos
push
sub
add
cmc
or
xchg
outsl
and
gs
mov
popa
push
sbb
testb
push
sub
pusha
add
pop
xlat
push
jbe
jl
xor
inc
cmp
ja
pop
fstps
ret
movsb
pop
pop
stos
cmp
scas
popf
add
push
aam
sub
pop
mov
rcrl
pop
lahf
and
sbb
inc
nop
call
insb
sub
daa
cli
xchg
test
add
push
adc
divl
push
dec
mov
mov
mov
jmp
and
cli
stos
out
xor
fcomip
xchg
out
sub
mov
aad
leave
lods
pop
lcall
pop
notb
jge
xchg
les
lods
adc
outsb
xlat
aam
mov
popl
sbb
mov
fisttpll
push
xchg
mov
push
xchg
bound
test
xor
xchg
jne
ret
push
cmc
sbb
pop
dec
icebp
dec
outsb
popa
aaa
jg
out
cmc
sbb
je
aas
and
loope
jae
push
hlt
mov
cmp
insb
addr16
in
lahf
add
bound
stos
mov
loope
push
pop
shlb
jl
add
leave
lods
subb
test
sub
mov
rcl
adc
pop
cld
stos
sub
inc
aaa
bound
out
cltd
or
ds
fbld
dec
rol
inc
mulb
insl
in
sub
and
imul
xchg
pop
fisttpl
btc
inc
xchg
jae
emms
je
mov
aas
xchg
shr
imul
xchg
scas
loop
mov
ret
loopne
das
jp
xchg
aaa
je
adc
daa
das
jbe
mov
adc
mov
clc
dec
sbb
insb
mov
cmp
push
xchg
rorb
mov
lods
mov
sti
pushf
and
sbb
sub
lret
sahf
jmp
xchg
xor
iret
push
xchg
enter
jecxz
push
ds
sub
sbb
dec
cltd
cmp
xor
fwait
repnz
lods
mov
or
jo
stc
or
lods
sbbb
add
shl
xchg
mov
xchg
jo
jecxz
inc
popa
idivb
jle
adc
cltd
jne
cwtl
aam
pop
jecxz
jg
mov
jl
cmpsb
mov
fsubl
pusha
inc
imul
mov
add
insb
dec
and
addr16
shrb
ret
mov
mov
jno
fsub
ss
dec
fstp
xchg
sbb
mov
xchg
icebp
cld
lret
xchg
test
cmp
in
test
outsb
mov
jno
enter
cmp
xor
imul
mov
and
mov
pop
xor
mov
out
cmp
dec
cld
cmpsl
popf
sub
es
jne
sub
mov
hlt
adc
add
in
mov
enter
push
jp
or
jecxz
mov
rorl
cmp
leave
adc
add
les
cs
neg
or
les
stos
shll
pusha
nop
popa
mov
loope
pop
inc
push
in
movsb
mov
mov
pop
cmc
inc
xor
push
das
mov
rclb
xchg
mov
popa
cmp
fs
xchg
dec
call
and
in
cltd
fidivrs
mov
jb
lret
dec
call
dec
adc
adcl
cld
sbb
je
pushl
jl
repnz
ja
inc
or
push
or
or
sub
mov
lds
jg
outsl
aam
jp
dec
stos
je
jbe
mov
shll
xor
push
arpl
xchg
fwait
stos
xchg
adc
outsb
leave
adc
mov
jg
sbb
dec
xor
push
jns
pusha
jb
jno
lahf
leave
daa
pmulhuw
sbb
jg
in
adc
dec
adc
mov
pop
xor
cli
cmpsb
hlt
mov
gs
or
nop
push
ss
inc
pop
lock
adc
mov
mov
out
mov
and
pop
pop
mov
stc
xor
dec
push
xor
mov
cld
xchg
test
jae
pop
and
shlb
loope
fdivs
cwtl
add
je
pop
jbe
ret
out
mov
insl
mov
jecxz
cld
mov
xchg
enter
sub
sbb
inc
sbb
add
or
test
inc
pop
push
cmp
mov
mov
xor
mov
dec
stos
cmpsb
pop
lods
mov
pop
popf
or
fistpll
jae
mov
icebp
loopne
or
stos
and
push
and
sub
clc
aas
xor
cmpsb
cli
aas
shr
mov
pop
in
test
mov
jo
test
dec
cmc
and
jmp
push
pop
into
sbb
es
dec
out
mov
lret
mov
lods
lds
mov
loop
jo
addl
int3
or
jmp
xchg
jae
or
cmpsl
inc
sbb
out
test
sub
ja
sti
push
xchg
xchg
pop
xchg
push
pop
ds
sbb
xor
insb
and
hlt
pop
cmpsl
fnstenv
push
fldcw
inc
movsl
dec
outsl
pop
insl
loope
xchg
jl
loope
fstpl
lahf
cld
dec
jbe
cmp
jb
pop
daa
add
and
out
repnz
xor
jns
and
divb
pop
xchg
movsb
mov
xchg
mov
fwait
cmp
cmpsl
mov
fstps
xchg
xchg
aad
ret
aaa
insl
inc
pop
shrl
adc
inc
popf
popf
fucom
mov
outsb
pop
dec
mov
pop
or
jo
lcall
xor
or
mov
cmp
nop
stos
adc
testb
fs
mov
shrb
mov
xchg
add
int3
icebp
pop
std
xchg
mov
fidivrs
push
testl
lds
mov
loop
cmp
lds
rcrb
loop
mov
sub
inc
add
pop
inc
sbb
or
repnz
dec
mov
loope
movsl
push
mov
pop
aas
dec
xchg
call
mov
jmp
cmc
int
adc
push
dec
pop
pop
sub
mov
push
lret
es
xor
fstp
sbb
or
pop
inc
filds
pop
mov
cwtl
frstor
mov
rcl
lds
out
mov
pushf
mov
jl
fadds
scas
mov
and
push
sbb
mov
movsl
jge
inc
and
cmp
adc
cmpsb
std
dec
orl
lahf
lret
xor
mov
adc
pop
sub
adc
fdivr
add
pop
ds
mov
sbb
xchg
int
mov
lock
mov
call
xchg
fcompl
pop
push
cmp
sub
nop
lds
and
ffree
outsb
push
ret
scas
ljmp
lret
cmp
cmp
faddl
std
adc
out
sbb
xor
cmp
arpl
loope
push
cmc
ret
fimull
hlt
divl
fimuls
cwtl
dec
movsb
pop
xchg
subb
icebp
pop
lret
and
or
fists
lret
push
jb
xlat
fnstenv
add
mov
xchg
fmul
repnz
inc
push
jecxz
sti
cmpsl
add
jno
rorl
mov
xor
jg
push
sub
int
jle
imul
sub
popf
scas
mov
xchg
push
inc
push
sub
jbe
out
xchg
mov
jns
xor
and
lock
dec
aad
mov
aaa
mov
std
cs
sbb
bnd
and
add
pop
pop
outsl
rcll
shl
fimuls
into
gs
pop
mov
fisubs
inc
adc
add
and
ljmp
jle
movsl
call
jb
movsb
mov
adc
inc
fmuls
adc
mov
int
cmp
or
mov
or
ss
sub
xchg
push
mov
push
sub
cmp
into
xor
cmpsb
cmp
in
aam
sub
ret
rclb
mov
and
mov
icebp
add
cmp
enter
push
out
imul
xchg
addr16
fildl
dec
rclb
pushf
dec
ss
push
call
mov
ret
mov
loope
ss
or
arpl
jns
ja
adc
fwait
lcall
xchg
cmpsb
cld
stos
clc
insb
ds
js
out
lock
rorl
icebp
sub
adc
inc
loop
je
jns
xor
dec
cmp
inc
movsb
out
nop
lods
mov
mov
add
push
mov
mov
shl
cmpl
daa
sbb
mov
adc
cmp
pusha
xor
in
mov
lods
pusha
aad
or
mov
xchg
xor
clc
and
sbb
xchg
sub
lret
scas
mov
stos
sub
jnp
and
data16
das
mov
push
mov
mov
ljmp
push
pop
leave
movsb
aas
jne
out
pop
and
imul
test
dec
sub
push
sub
out
ds
or
in
outsb
cmp
sbb
mov
mov
jo
jmp
sbb
jbe
cmp
inc
dec
mov
mov
stc
rclb
adc
lahf
pop
rolb
ds
aad
and
in
out
mov
pop
mov
imul
jecxz
dec
jnp
sti
dec
mov
and
in
into
mov
add
fstl
adc
dec
imul
lret
push
movsb
addr16
push
fstpt
xchg
cmp
sub
jo
arpl
cmpsb
pop
stc
ret
xchg
jns
test
jg
clc
mov
pop
mov
aam
mov
mov
sahf
cwtl
cmp
pop
add
lret
xor
sub
mov
fidivs
inc
in
sarl
inc
ficoms
adc
xchg
inc
push
pop
xchg
ljmp
adc
pop
sbb
push
flds
ja
add
out
or
das
mov
imul
shl
out
jl
leave
and
mov
jmp
out
cld
test
adc
ja
cmp
mov
mov
ljmp
mov
sub
sub
ret
je
fbstp
add
sub
cmpl
js
cltd
cvtps2pi
inc
aas
or
jne
imul
movsl
das
in
sbb
rorb
dec
pop
mov
bound
xchg
arpl
bound
aad
nop
mov
fldl
lods
leave
mov
lret
shll
daa
in
jnp
fsubl
cmpsb
xor
rorb
das
out
lret
dec
push
push
and
cmp
push
sub
or
clc
fs
lahf
push
das
popf
push
and
mov
pop
adc
test
push
fcmovb
call
nop
jb
repz
int
xchg
stc
aaa
aaa
es
rorb
jns
and
push
scas
fs
sarb
mov
loope
xlat
cmp
cs
jl
cmp
ret
xchg
outsb
scas
cmpsb
imul
std
lcall
ret
push
inc
sbb
xchg
xor
mov
xor
mov
adc
je
jmp
add
es
push
rorl
xor
inc
adc
inc
loop
cmpsb
inc
and
mov
sbb
orb
pop
mov
mov
out
xor
push
mov
sbb
jnp
movsl
cld
fs
fs
mov
ss
jge
clc
mov
pushf
adc
jle
adc
xlat
imul
testb
aaa
movups
pop
lea
add
inc
movsb
movsl
add
xchg
cmp
adc
test
mov
icebp
push
cltd
hlt
mov
ss
loop
outsb
data16
decb
std
cmc
ds
mov
mov
stos
andb
or
add
dec
das
cmpsb
fdivl
xchg
push
or
jge
dec
add
xor
and
in
ja
movsb
pop
push
subb
movsb
mov
ficomps
cmp
inc
cmpsb
nop/reserved
popa
dec
dec
stc
jno
xchg
ljmp
inc
inc
pop
adc
repz
sub
mov
sbb
test
or
dec
and
cmpsl
xchg
xor
push
pushf
rcll
sub
dec
mov
jge
xchg
jle
push
mov
pop
dec
push
add
and
cmp
jae
imul
mov
orb
push
decl
insb
cmpsb
mov
arpl
arpl
into
cmp
mov
test
cmpsl
jl
push
or
push
sbb
cli
in
je
mov
sarl
subl
mov
pop
jno
add
movsl
insl
mov
and
cmp
jns
insl
mov
outsb
imul
push
pop
xchg
and
push
pop
mull
pop
bound
leave
sbb
aas
lods
add
pop
out
mov
adc
loopne
xchg
mov
mov
push
jnp
sbb
jg
mov
fs
shr
and
movsb
adc
daa
addr16
sbb
rorb
inc
xchg
mov
jno
test
ja
mov
call
sub
xorb
xor
jae
xlat
mov
mov
test
inc
or
push
push
xor
subb
push
mov
xchg
int
push
stos
sbb
mov
jecxz
adc
or
push
xchg
scas
mov
jmp
je
xchg
or
mov
mov
idivb
jnp
ljmp
lods
outsb
or
cmp
dec
les
xor
fcoml
push
iret
inc
mov
pop
add
in
iret
arpl
sub
dec
fdivl
sub
cmp
sub
or
and
xor
filds
rolb
dec
adc
pop
test
stos
movsb
push
xor
pushw
fildl
cmp
or
popf
test
in
jp
jmp
insb
lcall
pusha
and
int3
loop
ds
jns
mov
dec
fnstsw
subl
pushf
dec
inc
icebp
jle
into
mov
fwait
or
movsl
jo
push
mov
pusha
dec
inc
sub
fucom
bound
scas
or
xchg
cwtl
push
jmp
and
leave
xor
xor
add
lea
arpl
jecxz
movsb
movsb
and
pop
out
xchg
mov
push
fisubrl
cli
testb
mov
push
cmp
mov
data16
xchg
pusha
std
or
mov
bound
scas
jge
daa
outsl
jl
xor
inc
sbb
loopne
test
int3
xchg
or
mov
jb
mov
mov
nop
xor
push
sub
fldcw
fisttpll
repz
bound
cmp
test
stc
or
daa
orl
or
data16
xchg
iret
imul
sti
xor
push
adc
push
xor
or
cmp
dec
test
fwait
fwait
jne
or
js
pop
jo
adc
sahf
cs
in
test
cmpsb
add
sub
dec
repnz
arpl
je
mov
shl
push
adc
pusha
inc
cmpsl
repz
and
lret
in
leave
sub
adc
sub
sbb
stos
leave
mov
lcall
jp
icebp
cmpsl
sbb
mov
cmp
mov
xchg
in
cli
loopne
mov
dec
adc
jle
movsl
adc
and
push
or
push
cs
les
ret
adc
jle
dec
pop
in
xchg
sbb
aam
xlat
xchg
lock
mov
fisttps
test
negl
mov
jp
pop
fisttpll
add
cld
call
add
lock
mov
adc
leave
xlat
aas
cmp
jae
jnp
adc
fistps
sub
addr16
dec
js
div
mov
outsl
shlb
mov
into
xchg
jge
daa
xchg
or
test
mov
pushf
scas
jne
int3
in
xchg
fs
or
in
jb
daa
pop
xchg
cmpsb
inc
adc
and
in
pop
jge
lret
mov
jg
cmp
in
mov
dec
clc
ret
cwtl
cmp
or
pop
ret
ficomps
xor
call
lock
inc
sub
pushf
mov
sub
lcall
xlat
int
imul
loope
jge
not
fstps
in
hlt
cmpl
sbb
cs
pop
stc
movsb
loop
jae
cmp
mov
popa
sub
jns
arpl
mov
xor
push
mov
ds
mov
enter
shlb
lods
gs
das
mov
dec
xor
cwtl
neg
mov
cwtl
outsl
test
xchg
cmp
push
gs
scas
xchg
addr16
or
push
jg
jl
daa
int
inc
pop
hlt
mov
jo
cltd
mov
inc
cs
mov
lcall
push
mov
imull
pop
add
jno
adc
jecxz
cmp
and
mov
xchg
mov
jb
push
inc
mov
mov
cmp
lea
push
les
mov
clc
adcb
data16
jbe
mov
cmp
bswap
xchg
dec
or
inc
xor
inc
ljmp
popl
or
push
jnp
sub
hlt
dec
loop
jo
add
xor
mov
xchg
rcl
ds
mov
data16
push
inc
jle
inc
push
mov
insb
data16
pop
pusha
add
fnsave
dec
sbb
inc
out
jmp
mov
or
sbb
jae
in
pop
imul
pop
in
push
add
jne
mov
fcoml
pop
jns
shrl
icebp
or
lret
mov
xchg
jmp
ljmp
xor
loopne
adc
lret
mov
or
rcrl
xchg
and
cmp
dec
fsubs
jmp
mov
jge
push
jmp
out
aad
jp
lret
aam
jae
lock
aas
mov
jle
into
cmp
fsubrl
cmp
cmpsb
aad
popf
and
xorl
outsb
pop
fimuls
scas
pushf
into
mov
and
rcrl
bound
outsb
push
xchg
mov
mov
adc
dec
pop
div
or
testb
dec
in
pop
mov
xor
movsl
cs
mov
mov
lahf
cld
cld
sub
sub
push
scas
or
stos
mov
in
dec
cmp
mov
in
mov
pop
xor
push
mov
xchg
movsl
mov
aad
dec
lock
daa
mov
lcall
fidivs
adc
popa
cmp
in
test
adc
jl
or
xchg
add
dec
nop
rorb
mov
xor
push
mov
push
jnp
sub
testb
pop
pusha
iret
sbb
fstpl
xor
sbb
xlat
fisttps
pop
xchg
fs
jmp
mov
jne
xor
or
fsub
adc
sbb
mov
or
gs
xor
sbb
add
and
jno
cmp
enter
das
lods
dec
adc
pop
mov
xor
mov
sbbl
mov
inc
inc
outsl
test
push
mov
pop
cmp
adc
inc
stc
cmp
xor
aaa
mov
mov
cmp
mov
jecxz
inc
lods
or
dec
push
xchg
sub
repnz
daa
and
mov
insl
decb
aas
xchg
sub
scas
xor
loopne
cmp
test
xor
xor
xchg
xlat
xor
sbb
mov
lods
lret
mov
cmp
jmp
adc
fwait
sub
and
mov
dec
shr
fisttpll
add
aad
test
das
push
test
jmp
testb
dec
test
ret
dec
aas
pop
cld
hlt
sbb
inc
enter
adc
inc
dec
aaa
jge
fistl
aad
scas
nop
lods
fnstsw
aad
jl
jecxz
fstpt
pop
scas
jmp
movsl
das
jge
out
mov
bswap
dec
popf
mov
add
xor
lock
testb
jae
push
xor
negl
dec
pop
push
sbb
mov
pusha
cmpb
pop
push
into
nop
push
pop
lret
ss
test
cmpsb
enter
mov
sbb
dec
stos
scas
jno
or
mov
xor
jmp
bound
xor
xchg
jp
push
clc
cmpsl
lea
xor
ret
movsl
sahf
loope
xchg
sbb
sbb
jp
movb
cmc
add
ljmp
lods
xchg
sub
xchg
test
pop
ret
mov
or
enter
sub
jg
sti
shrb
out
mov
adc
mov
subl
pop
push
negl
sub
cmovl
sub
xlat
cmpsl
push
pop
dec
insb
cmpsb
out
int3
push
mov
js
sbbb
pop
sub
rolb
or
cmp
dec
inc
ret
dec
dec
add
mov
popa
fdivp
mov
hlt
stos
sub
negl
movsl
fidivrl
loope
mov
xchg
scas
mov
and
cmp
pop
mov
xchg
adc
es
iret
mov
leave
daa
jmp
iret
inc
arpl
pop
adc
inc
mov
pop
xchg
popa
jg
xchg
inc
sbb
sahf
das
xchg
cmp
imul
sub
lret
imulb
aaa
out
cmp
jecxz
shlb
xchg
push
inc
sahf
ror
pop
movb
pushf
cmp
and
pushf
stos
cmpsl
dec
sti
out
cmp
in
push
sub
pop
cmpsl
in
cmp
decb
adc
add
mov
xchg
dec
icebp
pop
dec
mov
ret
das
push
mov
int
pop
push
mov
mov
pop
mov
in
pop
pop
scas
push
pop
sub
sbb
repz
stos
adc
lahf
dec
push
arpl
fbstp
xor
rcrl
repz
mov
xor
outsb
sub
push
data16
es
mov
mov
pop
push
mov
cld
popa
aam
mov
mov
test
and
xor
lods
xchg
scas
aas
mov
xlat
repz
xor
das
fsin
jmp
mulb
shl
xor
stos
mov
xor
outsl
aad
pushw
fisttpl
aam
dec
sub
sub
popf
push
pop
imul
in
adc
mov
push
out
lahf
bound
movsb
xor
pop
shl
dec
dec
and
xlat
imul
sbb
popl
lret
out
pop
iret
fisubrl
shlb
cmp
test
dec
sub
roll
jb
pop
cmp
jnp
or
xorb
scas
add
jge
pop
filds
mov
int3
xor
or
xor
sbb
push
test
adc
cmp
icebp
scas
scas
inc
hlt
xchg
pop
dec
xchg
or
sub
dec
mov
fdivl
adc
call
jbe
or
jnp
pop
cld
sub
gs
adc
add
aam
roll
fstp
sub
loopne
sub
sahf
adc
mov
cmp
addl
cmp
outsb
mov
jbe
and
sub
mov
cmp
lcall
pop
push
pop
inc
jne
mov
lods
or
jl
in
adcb
adc
jae
xchg
xor
subl
mov
dec
lret
pop
subb
pop
fdivl
push
popf
fiadds
jbe
add
and
inc
jbe
pop
mov
shlb
adc
dec
pop
add
popa
in
mov
cmp
xchg
pop
mov
ljmp
shrl
xchg
and
inc
outsl
pop
fs
pop
and
mov
pop
xchg
test
cwtl
mov
sbb
icebp
pop
cmc
add
inc
jge
aaa
add
pop
inc
hlt
or
loopne
rolb
loope
pop
rcr
into
cld
insb
ja,pn
mov
ficompl
xor
push
das
inc
mov
scas
push
imul
jnp
incb
pop
lret
bound
mov
pop
in
or
xbegin
int3
inc
outsb
push
adc
mov
push
fwait
push
mov
and
movsb
mov
xchg
push
out
out
lods
test
out
and
pop
mov
nop
mov
adc
xor
mov
pop
push
adc
lret
rcr
xchg
push
inc
dec
dec
popa
pusha
inc
into
mov
adc
cmp
jnp
shrl
sbb
adc
push
ja
mov
mov
or
in
fildll
jp
addl
jp
push
lret
inc
jecxz
repz
xchg
xor
cmp
xchg
ret
lret
in
clc
lahf
gs
sti
sub
outsl
ljmp
mov
call
adcb
sbb
sar
inc
adc
call
fisubrl
bound
xor
lods
cmp
xlat
mov
or
inc
push
imul
jbe
enter
dec
repz
mov
mov
into
adc
push
ret
push
mov
push
insl
xorb
inc
jecxz
cli
xchg
adc
imul
mov
sbb
andb
or
je
leave
pop
adc
and
push
pop
icebp
adc
pop
xchg
jg
addl
inc
cltd
xchg
add
sub
or
dec
enter
and
repz
stos
js
mov
pop
ret
ficomps
cmp
jb
lret
cwtl
xor
dec
in
test
mov
fsub
lods
cmp
ds
repnz
ds
mov
ffreep
dec
cld
and
fdivs
add
dec
daa
adc
jne
fldt
dec
mov
fcmovb
or
mov
ret
testb
jae
mov
imul
or
pop
push
lret
mov
xor
lret
cmpsb
jp
test
push
inc
cmp
mov
movl
xchg
scas
cmc
or
pop
loop
sbb
je
test
xorb
adc
fwait
mov
cwtl
cmp
rcr
iret
enter
jnp
jo
or
cmc
aaa
xlat
aas
dec
ss
cmp
sub
push
and
fcoms
cmp
cmp
pusha
stos
lods
bound
and
inc
jne
xchg
mov
mov
icebp
test
sub
pop
push
insb
push
jmp
lret
scas
popa
cmpsl
adc
lock
outsb
adc
inc
mov
in
popf
dec
insl
daa
pop
arpl
iret
aam
pop
shlb
xor
ljmp
pop
push
jo
ss
ret
jge
insl
in
aad
popf
xor
xor
enter
addl
aam
push
mov
adc
aad
xchg
inc
mov
mov
mov
xchg
or
cmc
int
test
add
fs
loopne
dec
sub
test
int3
mov
aad
ja
jo
and
push
xor
bnd
aas
je
rcr
ds
test
mov
xor
gs
nop
jnp
cli
push
pop
test
fsin
je
shr
lods
push
test
jecxz
jge
into
lea
fdivrs
xchg
dec
aad
mov
xchg
mov
lock
jns
push
push
cmp
push
add
inc
out
push
jae
pushf
outsl
aaa
pop
int3
lods
adc
mov
sbb
pop
in
or
fwait
xchg
icebp
mov
mov
pop
movsl
aad
ljmp
imul
and
sub
mov
mov
das
dec
xchg
adc
nop
jecxz
xor
adc
mov
add
out
test
and
insb
lea
mov
lds
testb
ja,pn
out
adc
xchg
mov
bound
cmpsl
inc
xchg
push
std
cmp
pop
xlat
pop
ljmp
sarl
xchg
iret
add
lea
inc
jnp
movsl
xchg
cld
mov
adc
imul
cmpsl
mov
sti
cmp
cwtl
jecxz
xor
and
iret
lret
aaa
xchg
mov
cli
js
push
jg
movsb
scas
or
jns
lea
jle
test
dec
sbb
adc
pusha
movsl
and
sbb
rolb
xor
mov
inc
rcrb
loopne
cwtl
mov
shll
fiaddl
imull
push
popf
andb
clc
push
xchg
jns
stos
cltd
loopne
and
add
pusha
ljmp
or
adc
jae
mov
jmp
lcall
mov
mov
mov
add
scas
pop
xor
inc
sbb
xor
js
inc
sahf
add
fnstenv
in
pop
push
nopl
cld
in
movsb
mov
hlt
xchg
jne
mov
ret
mov
into
out
or
scas
cmpsl
das
sub
mov
add
xchg
dec
mov
loope
fisttpl
push
stos
in
push
push
test
sub
enter
and
lods
dec
xchg
pop
and
test
outsb
xor
cmpsb
mov
outsb
jmp
pop
stos
jno
and
addr16
xchg
sub
mov
mov
push
sbb
faddl
or
cli
mov
cwtl
repz
mov
pop
mov
xchg
into
pop
mov
mov
pop
daa
aaa
add
push
and
pop
repnz
ror
xor
add
repz
in
mov
pop
sahf
std
arpl
loope
mov
mov
cmp
cs
mov
add
rcrl
mov
int3
jo
lock
mov
jge
cmp
les
xchg
mov
jg
mov
jae
inc
xchg
xchg
pushf
dec
jnp
lret
cmp
sbbl
dec
out
pop
add
push
dec
adc
or
dec
movsb
dec
scas
push
icebp
fistpll
imul
push
sbb
cmpsb
mov
fldenv
push
xlat
xchg
fdivl
cmc
cmpl
sbb
sbb
push
mov
push
ljmp
into
dec
sub
push
jns
int
in
xchg
inc
sub
fs
jb
fmull
mov
jp
in
sub
in
pop
mov
sbb
out
pop
inc
xlat
jmp
pop
and
adcb
adc
lds
sti
mov
das
pop
push
adc
fnstenv
pop
mov
mov
xchg
mov
imul
xor
stc
hlt
fwait
movsl
pop
cli
pop
and
mov
push
push
mov
dec
and
push
sub
jge
insb
inc
ljmp
push
mov
test
scas
jno
fwait
ret
sub
pop
mov
xchg
pushf
in
push
push
pop
mov
lcall
or
mov
int
sbb
sarl
sbb
das
adc
xor
xor
add
inc
js
cmpsb
subb
add
out
inc
loopne
leave
mov
rcl
mov
out
sub
andl
scas
repnz
mov
push
dec
pop
jno
jg
push
popl
mov
jmp
mov
adc
popf
ds
sbb
xchg
rclb
xchg
xor
leave
cmpsb
pop
ret
cmpsb
xchg
dec
dec
mov
ficoml
cmpsl
add
push
pusha
mov
ljmp
fadd
leave
loope
in
pop
fucomi
insl
rorl
enter
jmp
pushf
insb
jge
push
jb
loope
popa
cmc
xlat
sbb
cmc
xchg
sahf
lods
cmp
pop
imul
and
adc
hlt
or
imul
mov
mov
repz
pop
and
ja
inc
or
jle
std
ret
add
dec
mov
fs
js
mov
xchg
push
mov
aas
xlat
cmc
xchg
leave
bound
out
push
mov
sub
in
shrb
jae
call
sub
jecxz
pop
sub
xor
xlat
jl
pop
lea
add
fisubs
imull
pop
xor
jl
cltd
cmpsb
mov
add
mov
call
std
hlt
roll
iret
jmp
pop
mov
ljmp
ds
adc
xchg
in
cld
push
leave
cmc
xchg
cmc
leave
dec
push
push
lds
stos
add
and
push
cmpl
push
mov
rol
jno
push
aas
ror
and
push
xlat
push
ret
cmp
scas
cld
loopne
cmc
fisubrl
xchg
in
setl
out
jno
imul
push
ja
push
jb
xchg
dec
sub
cmp
cmp
dec
xchg
mov
popf
cs
outsl
push
pop
call
pop
sbb
push
testl
loopne
vsqrtps
dec
cwtl
push
sub
jae
fsubp
or
push
and
imul
in
inc
push
aaa
test
jne
ljmp
cltd
mov
jmp
gs
xchg
inc
pushf
pop
jge
lcall
test
cmp
adc
dec
dec
dec
inc
les
pop
fs
xchg
xlat
mov
xchg
out
add
inc
dec
idivl
dec
out
nop
push
cmc
mov
es
stos
popa
cmp
insl
mov
mov
push
xor
pop
cli
cmp
inc
outsl
xchg
mov
or
or
pusha
in
notb
lea
fdivrs
movsb
std
sbb
imul
adc
mov
fistps
sub
push
push
push
adc
add
dec
jg
mov
mov
int3
test
adc
or
jbe
pop
out
addr16
cld
add
push
or
cli
aam
adc
dec
clc
mov
arpl
sti
repnz
mov
fs
inc
inc
orb
cmpl
leave
xlat
test
test
mov
aam
cli
cld
rcrb
xor
orl
push
addr16
add
sbb
jae
mov
push
es
neg
sbb
pop
outsl
dec
add
into
cmpsb
test
or
mov
cmp
push
arpl
jge
cmp
imul
in
pop
inc
out
xor
dec
nop
outsl
mov
sub
dec
inc
hlt
call
dec
mov
shll
dec
iret
loope
mov
adc
imul
mov
loopne
inc
dec
inc
scas
loope
jp
loopne
dec
and
pop
cmp
testb
gs
ss
pop
jb
scas
fxch
js
stc
fiadds
lcall
hlt
fldt
rcrb
arpl
outsb
aam
cltd
adc
jmp
pop
xchg
mov
pop
popf
add
xor
lret
pop
loop
cmp
insl
aaa
cli
push
stos
pop
outsl
lret
fidivl
push
loop
jnp
out
cs
outsb
jae
and
jae
xchg
shl
mov
xchg
add
dec
adc
inc
adc
cmp
push
pop
pop
inc
sbb
or
fldl
xchg
cmp
cs
aad
int
cmp
cltd
xor
cmp
mov
xchg
push
lods
xor
jmp
les
mov
je
adc
cs
in
bswap
shl
xchg
int3
cltd
ret
cwtl
adcb
dec
pop
push
das
inc
in
test
leave
pop
sbb
pop
insb
pop
loopne
adc
outsl
xlat
fadds
push
pop
aas
xor
mov
cltd
mov
cmp
lret
jb
pop
dec
and
ret
and
subl
mov
dec
jo
mov
pop
sbb
fstl
xor
xor
xchg
sbb
and
repnz
loop
pop
loop
int3
mov
mov
ret
push
sub
movl
mov
movsb
notb
mov
lods
out
sbb
adc
xchg
out
pop
in
jnp
adc
pop
arpl
lea
fdivrl
mov
in
stos
sub
adc
movsb
arpl
pop
cld
push
push
push
sub
mov
in
fildl
fidivrl
aad
cli
lds
outsb
inc
nop
push
mov
and
adcl
add
stos
push
fmuls
roll
mov
mov
mov
je
stc
mov
jecxz
adc
mov
in
lods
sbb
in
stos
fisubrl
cmc
jl
aas
adc
loope
fld
loopne
je
inc
inc
mov
scas
add
xchg
push
inc
adc
push
outsl
push
ss
mov
pop
jnp
pop
aaa
xchg
dec
popa
or
xor
mov
mov
int
mov
push
xchg
inc
mov
lret
cmp
rcll
dec
insl
bound
test
arpl
int
scas
xchg
sub
add
mov
xchg
cwtl
and
ret
stos
xor
adc
pop
inc
dec
in
pop
int3
imul
shll
or
push
adc
daa
sbb
iret
adc
out
pop
cmp
test
mov
mov
pop
rolb
outsl
pop
fcomip
cmp
sbb
adc
mov
mov
mov
gs
int3
inc
push
sbb
pop
out
and
addb
push
push
andb
lock
lret
mov
stc
cmp
inc
mov
xchg
sub
pop
jnp
das
and
loopne
in
dec
mov
jo
pushf
lods
lea
pop
xor
xchg
mov
imul
iret
scas
inc
dec
push
addr16
rorb
scas
in
jecxz
add
cmp
mov
js
lds
mov
inc
mov
js
jns
lock
and
push
sbbb
outsb
out
adc
aas
sahf
jecxz
das
fadds
jmp
mov
xor
pushf
out
cmp
stos
xchg
jns
jg
in
ds
scas
cmpl
cmp
xor
jnp
add
push
scas
stc
cmp
sub
testb
xchg
xlat
stc
movsl
adc
dec
push
lcall
mov
cmpsb
ffreep
pop
in
cmp
xor
pop
add
lahf
es
lock
sub
je
mov
movsl
xor
scas
mov
lods
mov
in
stos
pushf
jg
dec
dec
fucomip
jnp
pop
or
popa
xchg
sub
pop
xchg
sbb
lret
cmp
push
loope
bnd
es
sbb
adc
lds
or
push
mov
or
adc
inc
jno
mov
xor
sbb
adc
movsb
movsb
jo
in
xchg
rcll
cmpb
testl
ds
cmp
push
and
cld
or
push
xchg
xchg
addr16
jnp
test
jg
mov
sbb
aad
iret
sbb
xchg
and
adc
outsl
in
push
pop
xchg
mov
jmp
test
or
hlt
leave
xor
int3
jp
mov
aam
adc
test
loopne
addb
adc
out
aaa
and
add
mov
adc
mov
and
call
sbb
ljmp
scas
xlat
mulb
daa
rcl
call
inc
daa
mov
mov
pop
push
pop
push
xchg
xor
cmc
pushl
jns
jg
mov
mov
out
mov
mov
orl
dec
and
xchg
xlat
dec
push
pop
and
andl
movsb
test
cwtl
ljmp
stc
jno
shlb
pop
add
adcb
dec
inc
iret
movl
and
outsl
mov
lcall
inc
ja
fmuls
jno
cmpsl
imul
mov
lret
aaa
in
fbld
cld
leave
sbb
and
inc
sarl
sbb
cmp
icebp
out
cmc
js
js
inc
cmp
dec
cs
or
ja
test
lahf
inc
add
cld
sbb
pop
and
aam
dec
mov
das
popf
loope
inc
and
xchg
cmpsl
add
or
mov
adc
dec
inc
jbe
shl
or
divl
loop
sti
mov
imul
dec
sub
mov
pop
xor
sub
in
pusha
adc
popf
fdivr
data16
sti
lea
rdtsc
and
out
lds
mov
fwait
push
mov
or
pop
mov
shrl
pushf
insb
add
lods
movsl
cmp
xchg
rclb
or
fwait
shlb
nop
stos
xchg
sti
aam
mov
cmpsl
icebp
sbb
xor
cld
fildl
out
lret
jge
pop
cmp
jle
call
xorl
shrb
cmp
dec
test
int3
inc
jns
rclb
lcall
inc
inc
push
fs
push
inc
out
jecxz
adc
or
lret
inc
pop
pop
xor
mov
inc
push
std
movsl
ljmp
inc
sbb
frstor
into
out
fimuls
pop
pop
cwtl
negb
xor
xor
ret
mov
or
cwtl
mov
movsw
cwtl
inc
repz
loopne
mov
cmc
pop
lret
or
pmaxub
scas
lahf
fimuls
cwtl
mov
sub
cld
aam
in
pushf
test
adc
jge
dec
adc
rol
lea
rolb
dec
arpl
or
inc
xchg
jno
movsl
shrb
sti
and
inc
dec
jnp
sbb
cs
mov
mov
arpl
jl
sbbb
roll
test
dec
pushf
push
mov
or
mov
out
cmp
cwtl
adc
sub
sub
popa
rcrl
sub
add
xchg
add
dec
lea
dec
mov
in
and
bound
adc
pop
xchg
mov
stos
ja
mov
add
pop
or
jnp
pop
dec
xchg
xchg
jle
outsl
ljmp
lcall
lahf
rclb
mov
and
xor
rorb
adc
in
mov
in
xor
scas
dec
popf
rcr
popa
pop
xor
test
push
push
aam
shl
fidivrl
sbb
inc
fcomp
into
aam
sahf
and
gs
int
mov
mov
or
dec
and
pop
cwtd
sbb
adc
out
nop
cmp
ds
xchg
cmc
and
gs
mov
xor
andb
mov
fnstenv
lahf
add
cltd
jbe,pn
aas
js
xchg
mov
jl
mov
in
pop
outsb
scas
cmp
jle
dec
pop
add
jmp
icebp
andb
xor
in
cmc
cwtl
js
and
into
xor
sub
jp
movsl
xor
fstpl
inc
jnp
add
ret
cmp
lcall
pop
cli
push
or
fistl
aam
loope
jne
arpl
fstps
push
mov
jae
scas
sbb
mov
lock
add
push
pop
rcl
repz
scas
xchg
inc
call
pop
dec
mov
ret
adc
or
adc
ret
inc
inc
lcall
mov
sub
or
lods
push
lret
imul
sub
mov
or
and
and
add
nop
adc
and
xor
fs
pusha
mov
push
mov
ret
or
hlt
mov
repz
add
sbb
add
push
int
xchg
pop
sbb
nop
push
inc
imul
out
outsl
rclb
popa
outsl
adc
cmp
jmp
je
adc
test
cmp
and
add
or
sbb
imul
ret
sbb
mov
pop
enter
leave
orb
insb
xor
sub
cld
cmp
inc
push
fs
xchg
leave
cwtl
insl
fs
add
lcall
fildll
es
inc
sarb
push
mov
imul
mov
dec
add
sub
and
or
loop
in
ljmp
and
movsb
push
shll
out
and
nop
sub
into
push
loope
stos
add
cmp
cltd
sub
fistl
and
cmpsl
loopne
xor
enter
repz
sbb
push
xchg
imulb
std
inc
fimuls
jns
je
sbb
push
fbstp
ret
into
push
pop
cmc
test
loopne
inc
mov
mov
icebp
push
mov
in
sahf
mov
std
lea
jo
jecxz
adc
sahf
and
xchg
jle
test
std
int
hlt
sub
lahf
push
jl
testl
subb
push
outsb
and
fsub
mov
and
je
xorl
into
mov
arpl
test
push
pop
xchg
mov
mov
ljmp
popa
rcll
jnp
int3
iret
adc
push
fscale
jne
sub
adc
movsb
outsb
data16
push
pop
sbb
xchg
cmp
mov
aas
rcrl
or
mov
pop
rcr
pop
idivl
add
out
sbb
cltd
je
out
cmp
ljmp
push
popf
ds
ret
dec
imul
inc
push
sub
ljmp
or
adc
punpckldq
fisttps
sbb
imul
mov
out
or
cmp
jp
dec
sub
adc
xchg
movsb
popf
popa
push
inc
out
xchg
mov
inc
inc
stos
inc
shll
ds
jno
rcl
and
incl
mov
cld
push
sbb
sub
add
pop
mov
or
cmovb
cld
push
jmp
or
inc
repz
push
in
movsl
add
call
aaa
loopne
shlb
add
int3
push
out
dec
ret
jle
and
adc
loopne
jb
mov
fbld
or
sbb
rolb
pop
jmp
int3
scas
add
mov
scas
fdivrl
cmp
inc
fimuls
enter
sbb
mov
fwait
pusha
pop
mov
out
stos
xor
jge
mov
inc
pop
inc
inc
dec
in
sub
jno
cmp
pop
jne
bnd
push
push
aam
push
xlat
mov
rorb
mov
repz
mov
jmp
repz
js
jae
stos
pusha
xchg
add
jecxz
xchg
fsubs
jge
out
xor
pushf
push
insb
inc
shrb
aas
lods
cmpsl
arpl
sbb
notb
insb
setbe
xchg
das
mov
lret
aaa
repz
shl
repz
push
and
ret
jmp
adc
aaa
xchg
outsb
notb
add
lcall
xchg
sti
xchg
jl
mov
add
fwait
mov
stos
mov
adc
inc
add
leave
mov
js
cmp
test
mov
jo
pop
sti
nop
je
mov
xor
stos
popf
inc
mov
popa
lcall
xor
nop
insl
in
clc
push
cmp
mov
stos
dec
xchg
push
push
and
xchg
leave
dec
rolb
or
pop
mov
loop
lret
or
push
sub
test
pop
test
aaa
mov
jno
mov
iret
sbb
xor
mov
inc
inc
incb
repnz
mov
fucom
xchg
push
jle
mov
ja
xor
insl
cld
inc
aas
mov
ja
insl
sbb
in
inc
jns
outsl
pop
stc
sbb
xchg
cmp
leave
xor
fbld
mov
cmpsl
psrld
stc
arpl
sub
stos
push
popa
scas
push
xchg
sahf
or
cmpsb
jp
mov
jmp
xor
xchg
inc
das
jns
int
push
sub
addl
lods
push
adcl
data16
arpl
ja
lock
sahf
pushf
addb
jnp
inc
or
add
lods
jle
imul
pop
mov
int3
sub
push
xchg
cmp
sub
icebp
sahf
xchg
add
and
dec
push
ljmp
mov
sub
je
mov
pop
pop
gs
mov
es
out
pop
add
sbb
or
negl
xchg
in
flds
mov
test
mov
lods
mov
icebp
sbb
scas
mov
pusha
and
rclb
sbb
xchg
inc
imul
ljmp
jge
xor
lret
andl
fcmovnb
or
int
rcrl
cwtl
test
sbb
out
sar
jmp
xchg
push
cmp
rclb
mov
dec
jne
call
leave
adc
jbe
push
xorl
jecxz
scas
mov
orl
mov
push
push
mov
out
push
ret
xchg
inc
ja
add
push
jl
scas
fidivs
jl
dec
xchg
in
cwtl
inc
enter
mov
xchg
and
or
jne
into
fsubl
cld
cmp
arpl
mov
mov
out
test
aad
pop
sub
push
dec
mov
xor
mov
fsts
loopne
xor
subl
sbb
loopne
xchg
mov
shrb
ficompl
fldenv
xlat
mov
out
mov
cli
xchg
xor
xor
rcrb
lea
iret
in
leave
and
bound
sbb
cmp
mov
pop
push
mov
push
inc
aaa
adc
add
pop
fs
jbe
test
push
aam
push
inc
out
push
mov
lret
loop
das
sbb
lds
mov
inc
adc
sarb
xor
testl
ret
xchg
aad
sbb
push
cmc
movsb
jmp
adc
jecxz
shrb
push
cmp
out
mov
sbb
dec
rorl
or
inc
add
lods
outsb
aaa
fistpll
shll
jne
insl
into
sbb
outsb
mov
inc
cmp
jp
arpl
mov
ret
inc
iret
out
push
adc
cltd
shll
imull
pop
inc
xchg
lods
test
rcr
divb
dec
mov
data16
decb
mov
test
add
movsb
aad
xchg
add
add
cmp
add
test
pop
arpl
decb
jecxz
mov
cmp
inc
mov
mov
inc
cld
push
arpl
dec
scas
scas
sbb
out
mov
push
xchg
out
cltd
outsl
cmp
jge
dec
cmp
sbb
mov
insl
repnz
lret
aas
in
sub
jmp
inc
xchg
cli
pop
gs
xor
nop
jb
repz
out
outsb
dec
xchg
hlt
orl
or
pop
sub
jg
xchg
out
out
imul
out
out
imul
sub
sub
adc
lahf
vmread
fsubs
nop
sub
lret
push
es
push
cltd
outsb
mov
fnstenv
loopne
mov
or
dec
test
mov
ffreep
leave
push
adc
mov
jg
mov
adc
adc
adc
sub
pop
dec
xchg
sbb
shll
mov
and
xchg
xchg
mov
push
xchg
mov
test
cmp
mov
out
cmpl
add
add
es
fdivl
mov
lods
std
movsl
sub
loop
shll
imul
mov
pop
add
nop
mov
jae
sbb
lret
cmp
je
or
repz
mov
je
jbe
es
movsl
jg
mov
push
and
out
arpl
cmp
addr16
sar
cmp
xchg
subb
in
int3
das
inc
rol
jae
lods
push
sarl
mov
sti
test
xchg
jl
insb
scas
std
add
pop
sub
sar
add
seto
pop
pushf
sub
popa
mov
jp
jge
aas
mov
pop
fimull
ljmp
add
das
jnp
push
fwait
aam
test
es
cmc
jge
mov
dec
jmp
fiadds
inc
out
push
shrb
in
push
notl
dec
mov
sub
mov
add
clc
call
mov
adc
fsubl
lock
xlat
push
into
pop
xchg
mov
cwtl
sbb
push
jl
in
push
push
or
mov
xor
sbb
clc
sub
pop
dec
xchg
sub
add
dec
mov
std
xchg
jge
data16
lret
mov
int
hlt
mov
xorb
cld
loop
repnz
adc
imul
mov
sahf
jmp
roll
aaa
xchg
dec
cmp
sbb
mov
sub
loopne
xor
test
push
add
call
adc
imul
cld
scas
xchg
jmp
fwait
es
aaa
imul
scas
sub
xlat
mov
xchg
and
mov
and
out
imulb
clc
mov
jno
imul
lret
sub
adc
add
aas
dec
leave
sbb
xchg
adc
leave
cmp
mov
out
sbb
gs
cmp
ljmp
in
or
xlat
data16
popa
xor
dec
pop
and
jp
fimuls
loop
data16
fmul
xor
xor
call
jb
push
jae
clc
ret
inc
mov
fimuls
xchg
sbb
xor
scas
in
sbb
lods
lods
sahf
sub
xchg
adc
icebp
xchg
xor
lret
addb
fstpt
mov
dec
xor
bound
sbb
xor
nop
xor
xor
pop
xchg
in
stos
xor
or
insl
lods
or
sahf
stos
clc
shrl
les
xchg
loop
cmp
mov
mov
push
push
pop
addr16
outsb
in
lret
adc
cs
pop
mov
and
loopne
shlb
pusha
test
shll
inc
xchg
loope
shlb
fcoms
loopne
aaa
mov
mov
loope
imul
xchg
push
cld
stc
pop
pushw
inc
push
sbb
pushf
inc
cmpsb
ja,pt
jno
xor
adc
nop
sarb
dec
hlt
movb
push
mov
aam
data16
or
aam
aas
shr
sbb
cmp
xchg
or
loop
test
fs
jecxz
xlat
outsb
push
in
xchg
nop
jle
fwait
add
or
cltd
push
out
cmp
dec
cmp
adcl
stos
mov
dec
jne
imul
mov
insb
cld
into
ret
nop
insb
cmp
or
jl
pop
inc
in
in
inc
popf
cmp
cmpsb
jl
ss
mov
push
dec
stos
clc
int3
mov
arpl
repnz
out
data16
jp
pushf
outsl
enter
jo
loopne
movsb
mov
iret
pop
and
and
lea
and
mov
xor
or
jb
inc
push
sbb
jno
push
push
mov
mov
adc
mov
or
dec
or
add
cltd
lret
mov
fisubrl
sub
push
repz
call
jge
cmp
dec
push
aas
arpl
lods
push
insb
xor
cmp
cmp
ss
push
ss
fldcw
sarl
pop
sbb
push
imul
cmpsb
cmc
lods
sub
sbb
lret
mov
insl
pop
insb
xor
mov
mov
insb
js
imul
dec
or
iret
cmp
xchg
or
sub
and
lea
xchg
dec
sub
inc
sbb
test
jns
fsubp
push
shl
or
add
xchg
mov
daa
stos
dec
mov
xor
dec
cld
in
dec
mov
fldl
out
repz
js
sub
test
js
xchg
inc
sbb
add
mov
repz
loopne
mov
jb
pop
cmc
lret
into
jno
or
imul
or
mov
pushf
pop
pop
popf
test
andb
mov
daa
or
pushf
pop
repnz
mov
shlb
stos
sbb
loopne
jl
xlat
dec
sub
mov
movhlps
pop
sar
or
jno
ss
mov
loop
lahf
into
leave
lret
mov
mov
mov
mov
and
je
arpl
shll
adc
mov
inc
mov
shrl
fdivr
psubq
lock
rcl
adc
movsb
push
inc
adc
pop
jo
and
aaa
movsl
out
or
pop
push
or
into
ret
mov
fisubs
jno
xor
dec
dec
xchg
xchg
shl
jg
pusha
mov
out
jmp
xchg
mov
sbb
and
adc
sarb
sub
out
or
add
pop
in
xor
adc
jmp
loope
mov
or
jl
mov
lret
push
movsl
xchg
pop
mov
cli
mov
stos
xor
add
es
mov
test
int
xchg
mov
mov
das
add
subl
bound
and
xchg
cmpsl
aaa
arpl
push
or
jp
dec
mov
cltd
adc
shr
jl
jno
popf
adc
push
mov
imul
rcrb
and
lcall
popf
lock
cmpxchg
pop
and
arpl
mov
dec
insb
pop
adc
pop
xchg
loop
pop
cmpsb
andb
sbb
hlt
pop
loopne
and
mov
push
mov
cwtl
mov
and
push
out
sub
sub
pop
lahf
adc
fcompl
xchg
outsb
pop
cwtl
enter
loop
clc
cs
sbb
jae
in
pop
mov
sbb
mov
cld
fisttpll
pop
aad
pop
repz
lock
push
out
push
pop
dec
jg
and
add
push
les
or
pushf
pop
out
jb
jb
loop
popf
es
and
inc
je
push
dec
mov
loop
mov
stos
das
lret
ljmp
or
or
and
sbb
ja
xlat
or
pop
notl
mov
xor
mov
ret
jo
push
mov
mov
sbb
jg
andl
inc
mov
jns
in
mov
dec
add
ror
lds
adc
jp
insl
ds
rcrl
xchg
and
add
xor
mov
sub
out
push
hlt
stc
aaa
sbb
scas
in
inc
jb
push
mov
dec
roll
lds
iret
inc
mov
lock
into
andb
and
hlt
fcoms
or
jno
cwtl
mov
aam
fistpll
ret
sbb
or
xchg
lea
lock
mov
stos
sbb
xchg
popa
cltd
shrl
inc
shrb
push
fldlg2
add
mov
je
add
icebp
xor
cmp
je,pt
ret
popf
inc
and
sub
add
fdivl
ds
xchg
or
bound
pop
mov
les
sub
inc
inc
pop
sbb
movsb
mov
ret
xor
mov
sbb
out
int
sub
add
in
mov
sbb
lods
mov
xchg
aaa
popa
loopne
jp
cmpsb
cwtl
or
push
ja
xor
mov
xchg
jecxz
data16
adc
daa
or
outsl
cltd
in
fisubs
popa
repnz
adc
fstps
dec
mov
clc
inc
out
xor
cs
imul
addr16
aad
data16
jg
popf
pop
mov
jae
mov
fnstcw
pop
cmp
push
jo
jmp
push
pop
mov
ss
add
lock
and
cmp
sbb
add
pop
outsl
or
adc
push
inc
pop
stc
pop
cmp
push
or
jae
push
fbstp
sub
lret
outsb
push
mov
sbb
data16
dec
and
or
sub
mov
push
scas
stos
or
cmp
dec
aad
arpl
stos
lock
jne
sahf
ss
mov
mov
fisttpll
data16
ret
mov
out
lds
mov
or
iret
jno
and
rclb
pop
dec
xlat
mov
xchg
stos
xor
popa
loope
dec
cmp
xor
cmpsl
bound
mov
daa
lods
sbb
rcll
pop
loopne
in
jecxz
cmc
push
hlt
xor
int
ret
out
sub
out
out
mov
inc
sbb
jo
jl
xor
cmp
pop
fdivl
in
xchg
outsb
fldcw
sahf
mov
xlat
dec
xchg
sbb
inc
shlb
dec
rcrb
and
pusha
cmp
mov
xchg
ljmp
ja
push
add
bound
inc
push
test
jmp
push
or
sub
in
clc
sti
mov
mov
rol
sub
pop
pop
mov
mov
gs
cs
fistpl
cmpsb
xchg
rcrl
lret
lahf
or
jmp
repz
jmp
pop
stos
decb
mov
lret
pop
or
ds
sbb
stos
mov
and
and
push
ja
cmp
lahf
icebp
add
loopne
xchg
sub
stos
jae
lahf
jg
test
and
xor
dec
adc
jb
xor
leave
rol
icebp
in
inc
mov
in
pop
stos
xchg
and
imul
xor
movsl
arpl
into
mov
push
cmp
adc
loope
sub
out
jbe
xchg
shrb
lret
daa
mov
mov
ss
add
add
dec
sub
test
rolb
rorl
movsb
add
push
add
mov
xchg
loop
cmpsl
popa
cmpsb
fbld
dec
inc
fisttps
mov
mov
outsl
mov
les
xchg
add
jp
pushl
pop
xchg
adc
mov
and
sub
shr
fcmovnu
or
jnp
fwait
divl
inc
mov
push
bound
sahf
add
ljmp
jle
cltd
dec
pop
je
icebp
rorl
sti
pushf
xor
fisttpl
jmp
add
dec
ds
xor
jo
xor
cmp
sbb
sub
inc
mov
cli
and
movsb
sub
xchg
mov
xchg
push
sub
cmp
or
or
mov
mov
jecxz
stos
sbb
stos
xor
push
adc
leave
pop
adc
outsl
cs
push
jl
xor
pusha
mov
or
cwtl
ja
fdivrs
sub
outsb
dec
hlt
es
imulb
adc
push
push
mov
add
fstpt
sbb
adc
jmp
cmp
repz
jne
pop
jnp
push
outsl
test
adc
dec
cltd
cltd
jecxz
cld
pusha
hlt
jbe
xchg
aad
inc
ficoml
arpl
pop
popf
xchg
call
inc
stos
dec
ss
mov
arpl
pushf
jl
xchg
dec
xor
scas
ljmp
in
dec
xor
push
fs
or
mov
or
fsubs
sbb
or
xchg
sbb
xor
movsb
xlat
andl
in
inc
push
and
leave
lahf
ja
sbb
lock
mov
add
adc
lods
js
in
fldl
dec
nop
loope
xor
stos
jle
pop
jno
rcl
sahf
dec
jg
pop
jl
repz
notl
mov
xor
in
dec
ret
les
ffreep
aad
into
inc
mov
fwait
testb
or
nop
ja
and
dec
pop
lret
inc
icebp
shlb
stos
jle
ret
xchg
sub
and
adc
sti
addl
jp
and
test
das
dec
and
mov
in
sub
xchg
adc
adc
movl
clc
repz
xchg
faddl
xor
cmc
push
lcall
jmp
cli
rcll
sub
push
lret
mov
mov
pop
shrl
mov
loope
call
in
icebp
xchg
push
inc
cltd
outsb
mov
mov
fmull
insl
bound
xor
clc
addl
into
inc
sub
inc
sub
cmp
cs
jg
lods
shll
inc
loop
add
scas
or
jno
fdivrl
pop
mov
stos
push
fisttpll
les
popa
fcoms
rcrb
lea
stc
in
addr16
cmp
sarb
xor
and
inc
jno
sub
push
aaa
lcall
fstl
ja
jmp
stos
int3
pop
adc
pop
leave
xlat
rcrl
pop
mov
adc
in
mov
cmp
sbb
aas
flds
mov
out
popa
cmp
pop
or
push
xchg
ljmp
or
lcall
std
add
int3
or
enter
test
aad
scas
add
imul
jne
jne
push
lcall
sahf
push
sahf
cltd
ret
dec
pusha
call
insb
push
call
out
dec
clc
movsl
arpl
xor
mov
mov
les
daa
je
sub
and
imul
sbb
movsl
push
repnz
cwtl
xlat
mov
adc
push
addr16
pop
or
sub
dec
das
dec
popa
out
pop
stos
mov
push
fldcw
mov
add
in
ljmp
out
push
leave
stos
mov
insl
xor
add
cmpsb
out
xchg
cmp
dec
out
and
cltd
ljmp
mov
rcrb
adc
jp
cltd
out
jp
xor
mov
and
vpcmpeqb
es
xlat
push
mov
jno
imul
mov
dec
lret
adc
loopne
cmpsl
jbe
stos
dec
mov
mov
and
mov
adc
push
or
scas
adc
lods
pop
cmp
or
std
shrb
loopne
lret
dec
mull
sub
push
icebp
cli
push
push
cmp
in
dec
and
and
out
mov
lret
xchg
xor
gs
sbb
test
xlat
jno
into
imul
std
stc
daa
cmp
mov
pop
jne
jmp
call
xor
add
mov
pop
in
mov
mov
clc
sub
sub
and
add
xchg
popf
hlt
lcall
mov
aad
movsb
mov
dec
dec
shll
lods
shr
jae
xchg
adc
cmp
out
pop
fs
inc
int
daa
fbstp
and
sarl
rolb
stos
in
outsl
and
adc
pop
test
jbe
call
push
int
pusha
int
aas
push
sti
sub
xor
bound
or
hlt
sbb
jl,pn
jg
cltd
aas
jge
mov
pop
or
and
dec
xlat
pop
fcmovu
and
or
orb
lock
fidivs
inc
in
xchg
jge
das
jbe
jb
jg
mov
adc
dec
flds
inc
jno
test
in
cmc
imul
pop
cmp
xchg
notl
xorb
add
stos
leave
inc
int
ret
insl
inc
sbb
inc
push
push
fwait
mov
out
adc
imul
add
cmp
fnstenv
negb
ss
outsl
aad
xor
popf
sub
pop
pushf
into
inc
daa
inc
ret
icebp
push
lea
stc
push
sbb
and
daa
loope
in
adc
or
push
add
testb
cmp
addl
cmp
movsl
fst
mov
mov
sti
daa
loope
xor
aaa
nop
add
ljmp
add
mov
cltd
fdivrs
sub
mov
cmc
ss
inc
jnp
jl
mov
add
stos
pushf
rcrl
lods
add
and
xchg
jle
adc
push
cltd
loopne
fidivrs
push
lret
dec
dec
mov
xchg
pop
fildll
adc
leave
xchg
xchg
ljmp
shll
hlt
movsb
lock
lock
sub
inc
and
mov
add
fdivl
inc
jge
rol
cmpsb
jle
addl
xchg
ret
mov
in
loop
andb
push
pop
mov
movsl
pop
mov
call
daa
je
test
out
leave
dec
and
mov
mov
adc
xchg
jmp
jo
jae
jge
popa
jne
sbb
mov
scas
cmc
lret
fxam
jnp
xor
out
jne
inc
ja
mov
lahf
sbb
push
and
mov
pop
scas
pop
ret
xchg
xchg
xchg
sub
clc
pop
loopne
lds
sub
sbb
pop
in
push
cmpsl
cmpsl
mov
sbb
in
push
ret
push
jge
lds
mov
ss
and
cli
cli
cmp
jecxz
push
pop
pop
scas
cmp
mov
and
dec
and
add
mov
inc
cmp
flds
lds
cli
stc
mov
in
dec
xchg
jbe
pop
outsb
imul
rcrb
mov
and
cmpsl
mov
jp
daa
and
aad
pop
insl
mov
push
jno
out
mov
dec
xor
gs
jno
inc
mov
out
mov
add
imul
or
adc
push
jp
jle
repnz
loope
sahf
add
and
iret
and
inc
int
lods
pop
inc
add
loope
in
inc
cmpsl
arpl
push
push
test
pop
mov
xchg
sahf
lds
test
push
clc
jecxz
mov
sub
ret
outsb
sub
xchg
dec
mov
dec
movsb
mov
inc
add
mov
popf
test
cs
insb
inc
nop
out
ret
mov
retw
imul
jno
fists
cmp
leave
gs
test
jmp
mov
mov
cmpsb
pop
pop
pop
xor
cmpsb
rorb
mov
es
sbb
popl
add
wrmsr
mov
xor
mov
xlat
dec
movb
pop
dec
and
jmp
cltd
ja
xor
add
dec
test
mov
mov
push
fsts
roll
vmaxpd
add
mov
add
push
mov
and
add
pop
es
jb
shrl
push
push
pushf
sahf
lahf
aaa
sub
mov
fmuls
adc
divl
fucomp
fcmovne
mov
xor
sub
out
cli
adc
jo
pop
out
push
loop
add
dec
dec
mov
inc
jb
jno
add
faddl
sbb
ret
push
and
dec
jecxz
ds
adc
daa
inc
test
repz
lret
pop
shrb
mov
movsl
je
mov
inc
loopne
in
cld
jo
ljmp
cmp
jnp
dec
popa
mov
push
int
fimull
jmp
pop
stc
or
in
sbb
repnz
or
mov
jle
sub
cmpb
adc
leave
cli
loope
sbb
fs
cmp
mov
xor
pop
pop
nop
addr16
jo
fnstenv
dec
lds
push
mov
pop
pushf
lds
mov
in
xchg
xchg
mov
dec
insb
dec
test
xchg
es
xchg
js
pop
fistps
lock
inc
push
outsl
pop
cli
or
add
jl
inc
cli
cmp
stc
decb
jecxz
jno
dec
cmp
mov
es
icebp
ss
dec
inc
pushf
addb
and
sbb
xor
daa
imul
mov
stos
sbb
loope
sbb
push
pop
test
inc
xor
fmul
stos
jne
jb
xchg
fdivrl
pop
mov
sti
outsb
and
inc
mov
mov
pop
sub
jl
in
gs
test
testb
test
jp
inc
or
push
inc
stos
pushf
cmp
das
outsl
jns
push
push
or
jne
movb
movsb
pop
mov
ja
dec
dec
push
cmp
cli
shrl
inc
jae
ficompl
jg
mov
fs
daa
cli
inc
movsb
adc
and
pop
mov
in
sbb
mov
sub
ss
sti
jle
adc
sub
fs
fnstsw
das
out
iret
pop
adc
ja
movsl
or
cmp
daa
mov
sbb
in
imul
xchg
add
sbb
and
jo
cli
and
sarb
stc
pop
adc
jns
lea
jge
or
pop
lds
call
fs
scas
push
std
cld
lea
aam
pop
jg
mov
aam
dec
pop
jne
fists
aaa
outsb
pop
mov
lret
jecxz
fistl
cmpsl
fisubs
in
adc
and
dec
push
pushf
xchg
mov
in
scas
cltd
xor
clc
outsl
mov
imul
jg
stos
sbb
fidivrl
adc
sub
push
hlt
stos
xor
xchg
stc
push
outsl
jnp
and
jnp
loope
ja
test
dec
pop
test
sub
ds
iret
call
lret
add
enter
ja
cmp
xchg
mov
pop
lret
or
in
push
iret
cltd
in
or
das
imul
std
mov
push
insl
pop
mov
dec
pop
lds
cmp
mov
aas
shl
jbe
xchg
popf
jmp
dec
sub
and
mov
add
jge
cmp
mov
jmp
rorb
test
cmc
xor
push
clc
push
js
cmpsb
loope
imul
cmp
or
xchg
mov
pusha
jmp
lahf
addr16
je
push
lret
fs
ljmp
leave
sub
dec
cmp
arpl
push
leave
pop
scas
js
jmp
or
ja
sub
inc
fdivr
insl
push
ja
mov
stc
das
fadds
xchg
adc
jne
and
rcl
cmp
aad
sbb
int3
in
xor
pop
addb
dec
jle
jg
pcmpeqd
push
add
inc
fdivrs
jnp
inc
cltd
incb
jle
jmp
scas
sar
cmp
out
fsubrl
xchg
cli
popf
adc
push
insl
inc
test
imul
add
jg
aam
add
loopne
or
push
xchg
pop
and
mov
rclb
lock
js
addr16
lods
outsb
mov
fst
sarb
dec
xor
inc
xor
push
cmpl
enter
pop
cmpsl
sub
mov
flds
enter
repz
sub
jp
mov
addr16
push
movsb
shlb
les
dec
sbb
push
out
cwtl
jle
push
pop
jno
lret
std
scas
jl
xor
sub
sub
ret
and
cli
and
push
pop
mov
and
test
call
lea
nop
ss
outsl
add
mov
inc
inc
pop
inc
adc
repnz
xchg
lods
cwtl
aas
popl
mov
jb,pn
sub
cli
pop
xchg
ret
and
dec
es
fists
sahf
sbb
push
cs
adc
mov
mov
mov
mov
cltd
leave
aas
dec
cwtl
sbb
mov
mov
test
mov
arpl
inc
adc
inc
push
cmpsb
and
and
jecxz
jo
push
mov
sti
adc
add
xor
mov
xor
aam
dec
or
jp
cmp
les
lea
or
loopne
xchg
cmp
inc
cmp
test
js
movsl
out
pop
xchg
add
push
rolb
push
pop
cmpsb
out
pop
mov
jle
fnstenv
push
leave
rcrl
push
dec
aas
addr16
btc
call
ret
decb
sbb
fsubp
lcall
repz
mov
in
into
and
jo
shrw
jae
cmpsl
add
inc
mov
cwtl
in
jno
cmp
mov
lea
pop
and
cmp
sti
jmp
mov
jl
jle
xor
mov
sbb
sbb
out
pop
sub
push
xor
push
test
pusha
lock
push
dec
jne
pushf
cmp
add
push
imul
lret
iret
sub
fidivrs
add
add
pop
mov
cmp
mov
rcr
mov
xlat
out
mov
xor
push
cmc
int3
cmp
je
inc
gs
aas
push
add
subb
test
mov
cmp
push
test
push
repnz
test
lds
js
inc
sbb
xor
lret
add
lea
cltd
sub
mov
xchg
fisubrs
dec
jo
lcall
addr16
pop
pop
stos
cld
loopne
fstpt
icebp
stos
out
or
inc
xor
lds
sub
inc
insb
cmp
rcrb
cmp
fcmovbe
or
imul
jbe
dec
xor
cmp
test
mov
sbb
pusha
ds
pop
mov
hlt
and
enter
push
aad
adc
xchg
sbb
jmp
sub
aad
dec
pop
test
push
iret
test
dec
dec
adc
and
push
in
bound
and
iret
jmp
mov
xchg
jge
iret
scas
push
inc
cmpsl
jg
repz
pop
mov
jae
pop
loop
mov
pop
push
mov
scas
and
jnp
mov
sarl
rcll
repz
push
inc
lock
cwtl
cmp
xchg
pop
ficoms
aas
push
sub
lcall
or
data16
pop
pop
xor
bound
mov
lret
es
push
lock
out
movsl
sbb
scas
mov
sbb
jae
push
or
call
adc
sbb
jp
sti
pop
adc
ret
mov
sub
mov
mov
push
push
push
xchg
push
lock
aas
pop
sbb
daa
mov
and
pop
shrb
sbb
xor
push
loope
lcall
mov
xor
push
dec
xchg
pop
fsubrs
mov
incl
mov
repz
push
inc
cwtl
adc
pushf
pop
aam
mov
jae
mov
aas
lcall
mov
clc
inc
sub
jecxz
jno
sbbl
fsubs
or
pusha
aas
lret
or
ret
int
aas
sbb
fwait
and
jns
scas
or
lods
push
push
pop
sub
mov
lcall
pusha
add
shld
in
mov
fsubl
icebp
ja
add
mov
push
addr16
or
popf
aam
pop
ds
insb
xor
xchg
xchg
out
mov
jnp
push
cpuid
ja
jae
dec
or
adcl
nop
push
test
mov
jbe
jbe
and
add
sub
mov
push
dec
std
add
in
mov
dec
inc
jnp
push
jae
pop
in
dec
loope
cltd
and
jg
sub
rolb
lahf
repz
inc
fnstcw
leave
jnp
jge
mov
xlat
sub
rolb
aad
mov
fs
pop
aam
sub
mov
mov
scas
push
cmp
jae
nop
iret
fdivr
loop
mov
in
repnz
jno
pop
xchg
insl
lock
mov
arpl
daa
sbb
test
ljmp
jns
cs
jns
inc
call
loop
push
lods
mov
lods
std
xor
aas
ficoml
push
ja
inc
shll
adc
repz
mov
sar
lcall
sbb
jo
push
adc
pop
cmp
cltd
iret
dec
sbb
daa
mov
test
push
push
leave
sahf
orb
mov
stos
into
shlb
in
xchg
negl
or
or
loop
xor
mov
cli
mov
dec
sarb
mov
mov
inc
jno
js
jns
xchg
cld
data16
shrb
fldenv
push
mov
or
inc
rorb
js
je
not
mov
cwtl
xchg
enter
and
icebp
pop
movsb
jns
pop
sbb
jne
and
fsubs
lretw
mov
jecxz
pop
mov
xchg
fcompl
and
mov
leave
fcmovnbe
outsl
fistpll
insl
clc
dec
aad
lcall
add
pop
mov
dec
clc
call
aam
lret
pusha
bound
rcll
mov
insl
push
cmp
add
test
popf
data16
inc
and
push
cmpb
or
sti
push
lahf
popf
jp
jle
mov
dec
push
push
pop
insl
jl
movsl
movsl
mov
loop
inc
fscale
add
cmpsl
push
xchg
call
and
addw
push
mov
mov
jno,pn
rol
std
xchg
clc
mov
sar
push
jno
sbb
sub
xchg
cld
mov
rolb
adc
cmpsb
repnz
les
or
mov
pop
aas
outsl
lods
cwtl
bound
into
pusha
lret
push
cmpsl
mov
sahf
ss
mov
or
pop
mov
cld
push
icebp
mov
jecxz
or
cmc
cmpl
scas
dec
inc
in
mov
arpl
xchg
xchg
mov
cltd
sbb
lock
mov
aas
sahf
out
dec
jmp
shll
cwtl
mov
xchg
movsb
popf
jl
inc
mov
sarb
cmp
adcl
jbe
divl
sbb
rcr
xor
mov
incl
pop
mov
jp
mov
pop
jbe
rclb
test
adc
cmp
mov
shlb
int
enter
push
fisubl
and
sub
xchg
stos
sbb
push
sahf
icebp
cmp
add
push
lret
idivl
or
lock
sub
pop
movsl
fimull
or
lods
fadd
cmp
jno
fwait
inc
mov
cmp
xor
push
mov
pop
andl
sti
adc
mov
lock
cmpsl
or
xor
mov
dec
das
and
mov
stc
lahf
adc
cmp
rcrb
scas
loope
gs
data16
add
in
push
andb
aaa
mov
jne
mov
xor
std
xchg
dec
scas
pop
and
lea
mov
pop
repz
out
lea
add
cmpsl
inc
lds
sbb
sub
in
fldt
repnz
bound
movl
mov
pop
icebp
sbb
mov
sbb
insb
in
in
sbb
fdiv
mov
sbb
dec
pushf
test
movsb
push
out
jmp
cmp
sti
daa
pop
add
jae
fiadds
sbb
es
iret
pop
cmp
push
and
or
xlat
xchg
jns
mov
call
mulb
cs
xchg
mov
inc
push
jae
fisttpl
and
in
in
repz
push
and
shll
mov
loop
jnp
loope
and
in
xchg
in
lahf
and
leave
ljmp
mov
pusha
xor
push
mov
shll
jb
sbb
imul
roll
add
cmp
clc
mov
sub
jg
xorl
xchg
fwait
mov
int
dec
pop
jae
sub
dec
test
xor
xor
mov
sbb
movsl
fdivl
sub
fdiv
xor
mov
out
sahf
ds
or
mov
fwait
jg
negl
jp
nop
mov
push
in
ljmp
dec
mov
sub
inc
dec
arpl
hlt
popf
dec
test
jo
push
adc
sahf
lret
jp
loopne
mov
int3
rcr
sub
lock
mov
decl
mov
fldenv
sub
jp
mov
int
jg
jo
push
or
xor
push
mov
inc
pusha
or
daa
aad
js
pop
pop
push
addr16
push
sbb
mov
mov
xchg
stos
or
ljmp
ficomps
xchg
mov
and
xlat
pop
shrb
enter
jae
jmp
es
mov
popf
jl
mov
jns
dec
jne
mov
pop
scas
xchg
jle
je
mov
jecxz
pmaxsw
jno
mov
mov
push
repz
dec
jge
das
fiaddl
push
pop
push
cmp
aad
mov
daa
add
testl
pop
stos
popa
mov
push
xchg
pop
or
mov
mov
push
scas
les
inc
incb
aad
inc
cmp
cli
sub
das
add
loopne
cmpsl
and
lret
nop
push
push
xchg
leave
xor
pop
sub
daa
sub
lret
lods
and
and
sbb
mov
add
in
push
ret
lret
adc
push
movsl
fwait
add
dec
lods
daa
and
xchg
fcomip
clc
stc
jb
scas
dec
mov
sub
mov
jae
cli
loop
or
mov
mov
push
mov
sub
xor
rcll
loopne
mov
ss
mov
adc
cmp
fistpll
mov
fnstenv
call
jg,pt
jnp
adc
loopne
pop
jbe
xor
cmp
data16
ja
pop
pop
std
adc
aam
cmpsb
popa
lock
xchg
jle
hlt
xchg
nop
push
adc
shlb
iret
test
cmp
jp
xor
jecxz
sub
inc
push
xor
inc
and
arpl
notl
sub
mov
push
repnz
call
daa
repnz
dec
xor
jno
mov
sets
fadd
andb
mov
adc
jne
popa
xchg
inc
and
mov
sub
scas
push
testl
in
mov
adc
xchg
pop
jae
sarb
lock
jne
cld
mov
pop
add
hlt
cli
in
lret
or
and
test
andl
loop
mov
jp
mov
shll
dec
cmpsl
xchg
fisubl
fisubl
es
arpl
cmpsb
cltd
enter
hlt
sbb
inc
cld
or
les
sub
movsb
mov
xchg
mov
push
popa
fdivs
jns
lea
mov
pop
mov
cmp
mov
or
dec
cmp
and
xchg
lods
push
mov
mov
fsubrl
or
inc
mov
inc
xor
mov
pop
je
or
in
dec
pop
jp
stos
add
or
lret
or
add
cmp
out
jb
push
arpl
adc
dec
stos
mov
arpl
faddl
insl
pop
add
mov
dec
in
aam
insb
imul
test
jp
imul
loope
out
lods
push
addb
movsl
repnz
lcall
sub
int
push
xchg
cli
xchg
cmp
sbb
nop
push
jmp
lock
inc
and
sbb
adc
and
loopne
daa
in
pop
aas
sub
cli
call
xchg
pop
fsubl
mov
sti
sbb
xor
ret
movsl
jns
ss
insb
jmp
or
movsb
lcall
mov
jp
adc
lahf
daa
cli
jno
jp
roll
mov
fidivrs
fnstcw
mov
movsl
cli
push
mov
inc
jnp
mov
into
insl
mov
sar
push
mov
inc
mov
lds
pop
mov
enter
sbb
jg
xor
lods
cmp
xchg
pusha
dec
or
xor
mov
ljmp
aad
ret
mov
add
mov
fcoms
or
insb
adc
cmpsl
test
subl
push
pop
mov
pushf
mov
xchg
mov
insl
ja
in
bound
fistpll
lcall
jns
xchg
cmp
mov
mov
sub
enter
and
scas
mov
push
xor
test
xor
mov
lds
pop
inc
inc
pop
jge
mov
daa
mov
mov
and
clc
hlt
hlt
mov
pop
xor
insb
xor
adc
fcompl
loope
sbb
mov
fpatan
push
ljmp
xchg
sti
push
out
movsl
xor
sbb
pop
fisubrl
sbb
push
das
dec
out
add
xor
sbb
sbb
xor
out
jb
mov
in
mul
lret
sarb
repz
jecxz
pushf
loop
add
fsubl
mov
dec
xchg
lods
pop
insb
sub
fcoml
aaa
inc
push
rcr
pop
push
jnp
jne
mov
xor
pop
xor
add
cmpsb
sbb
insl
xor
push
outsl
int3
enter
xchg
in
mov
xor
pop
cwtl
mov
sbb
mov
inc
pop
sub
addb
call
jge
addr16
xchg
push
mov
xor
stc
sub
jno
paddw
dec
test
sbb
cltd
push
in
loopne
sub
test
aad
sti
adc
push
and
jns
notb
add
inc
add
mov
int
adc
sarb
xchg
shll
nop
or
lahf
mov
cmc
ja,pt
mov
cmpb
inc
add
mov
or
arpl
test
jbe
inc
sub
sbb
lea
lahf
fidivs
pushf
mov
cmp
lds
xchg
cmp
dec
cmpsl
out
out
lock
test
mov
mov
jbe
sub
fistl
pop
es
jp
dec
xchg
scas
lret
movsl
jb
mov
mov
imul
or
cmp
daa
sub
jle
sub
outsb
into
mov
rorl
mov
fmul
shll
and
fadd
xor
sub
lock
push
jmp
adc
sbb
ret
lods
lods
jns
out
xchg
jge
scas
fsubs
dec
jmp
fcmovne
popf
in
pusha
addr16
cmpsl
lret
out
sub
xor
fcmovnb
popa
jnp
out
push
mov
pop
xchg
and
neg
pop
movsb
push
push
test
ficoms
jge
push
js
xor
stc
dec
loope
outsb
push
adc
and
dec
adc
inc
sbb
loop
clc
mov
stc
cmp
int3
ud1
mov
jmp
out
mov
sahf
mov
push
sbb
and
mov
mov
lret
hlt
sti
sbb
dec
sbbb
in
lock
test
xchg
sbb
jbe
je
and
in
popf
in
in
add
xor
inc
inc
adc
jl
fistpll
sbb
adc
lret
ficomps
push
cmp
and
repz
pop
imul
js
scas
lds
cmpb
pop
pop
mov
and
test
ljmp
inc
pop
leave
mov
dec
es
fidivrl
call
int
inc
int3
je
and
push
mov
pop
jbe
sbb
add
mov
arpl
mov
popa
imul
ds
icebp
mov
pop
push
shl
push
lcall
mov
ret
lods
ljmp
ss
mov
ret
sbb
shl
push
xchg
pop
inc
pop
leave
shl
add
aad
andb
cmp
dec
mov
jns
inc
or
mov
cwtl
sbb
pop
or
xchg
jg
sub
testb
dec
mov
in
int
cmp
pop
aaa
jl
into
inc
push
push
jmp
mov
mull
arpl
fsubl
movsl
adc
lcall
mov
cmp
or
sbb
fiaddl
cmpsl
ret
insb
movl
leave
mov
dec
pop
lock
arpl
mov
out
inc
mov
mov
ret
push
cmc
xor
subb
xchg
nop
scas
sbb
in
xor
push
xchg
out
addr16
xchg
dec
and
shl
or
cmc
mov
les
jecxz
cld
add
clc
outsl
jge
and
add
mov
mov
loope
cmp
js
jnp
inc
push
dec
lock
inc
cmp
addb
dec
stos
xor
fs
inc
cs
mov
push
and
repnz
adc
cmp
jno
ret
mov
mov
sub
es
aaa
adc
cmc
add
fwait
popf
pop
dec
sbb
mov
aad
or
cltd
mov
xlat
push
and
and
and
jp
addr16
rclb
mov
adc
xchg
mov
push
in
xor
in
enter
mov
and
cmpsl
and
pop
popl
fucomp
push
pop
das
mov
popa
and
pop
lret
stos
jmp
jnp
mov
push
inc
fsubrl
jp
mov
push
jecxz
pop
push
mov
fisubrs
mov
mov
pop
pop
and
xor
mov
push
jbe
sbb
das
pop
repnz
sbb
aaa
pusha
cmp
pop
inc
mov
cmp
seto
sarb
mov
lahf
adc
lahf
xchg
fsubs
mov
and
enter
outsl
xor
mov
mov
or
jno
call
test
fstl
ficoml
insb
and
mov
xchg
mov
aad
popf
incb
ret
lret
clc
subl
out
sub
pusha
cmp
xchg
fs
and
ja
jae
cmp
inc
sahf
jg
out
lret
mov
inc
jb
xchg
mov
sub
int
ljmp
inc
lahf
jg
push
fwait
fs
mov
push
mov
hlt
int3
test
sub
jg
cmp
stc
mov
addr16
call
adc
xor
mov
out
sub
mov
sbb
or
out
loop
shrl
inc
je
and
in
test
lds
ljmp
test
mov
into
mov
mov
mov
push
mov
xchg
push
xchg
out
adc
dec
outsl
lock
xor
popa
ds
in
roll
and
fstps
pop
inc
xchg
xor
inc
or
jo
rcl
and
andl
movb
rorl
jecxz
lea
js
mov
cmp
cmp
add
jmp
test
push
mov
pop
out
and
sub
icebp
or
scas
mov
fisttps
iret
pop
mov
mov
sahf
ret
je
aad
push
xchg
out
or
and
push
dec
mov
ror
shll
mov
push
and
push
jns
faddp
xor
scas
pop
stos
mov
and
xchg
inc
lods
out
xor
adc
stc
adc
pop
repnz
shlb
push
mov
in
mov
adc
ljmp
xor
push
add
shll
leave
cmpsl
lret
xor
out
pop
jmp
inc
mov
shlb
jns
lock
and
pop
mov
inc
cmp
jmp
xor
js
mov
sahf
and
xchg
jo
jle
or
stc
sti
out
leave
arpl
movsb
pop
in
aad
push
sub
pop
xchg
mov
es
pop
mov
test
stc
fdivrs
std
jno
mov
pop
ror
imul
lods
sahf
cli
aas
popf
or
xchg
sahf
xchg
sar
or
lods
adcb
pop
in
inc
add
xor
lods
movsl
dec
andl
mov
inc
xchg
imul
out
or
sbb
adc
adc
xchg
jg
mov
xchg
rcrl
insl
stos
inc
ds
iret
aaa
loopne
sahf
push
outsb
and
sbbl
xor
cmp
popf
shr
xchg
cmpsb
adc
pop
push
cmp
and
xchg
or
jmp
mov
movsl
ret
pop
hlt
jb
and
cmc
mov
arpl
je
mov
add
mov
leave
sbb
jo
jle
fstps
in
jp
daa
and
mov
shr
sarl
scas
mov
xlat
dec
ret
sbb
ja
jno
xor
xchg
ficoms
push
sti
cli
xor
test
or
cmp
push
jbe
cmp
dec
lods
fadd
push
inc
or
and
ficompl
mov
inc
add
jle
push
jecxz
push
nop
insl
push
and
cmp
adc
or
mov
sub
mov
adc
jl
add
push
clc
push
jmp
sub
insl
dec
popf
and
int
pop
cmp
pop
loopne
xchg
inc
movl
xorb
cs
push
inc
mov
insb
movsb
out
pop
mov
shll
xor
mov
mov
popf
enter
inc
loopne
and
nop
and
mov
adc
fisubl
stos
stos
test
lahf
or
jno
loop
movsl
xor
imul
sub
push
ja
in
mov
mov
or
adc
popf
inc
fisubrl
mov
cmp
rorb
inc
mov
cmpsl
cmpsl
lods
test
xchg
enter
jmp
cmpsl
cld
pop
add
stc
xchg
fdiv
xor
loopne
mov
out
gs
and
orb
xor
gs
sub
jmp
push
xor
testl
mov
sbb
cmpl
cltd
pop
jno
and
inc
fs
inc
inc
insb
xor
mov
data16
sbb
sub
mov
jno
push
popf
xchg
lret
out
movl
jne
mov
test
fistpll
addr16
add
sub
stos
lods
sbbb
inc
ljmp
pushf
ficompl
mov
add
add
jmp
add
lock
or
fs
outsl
popf
jno
fimuls
rorl
pop
mov
insl
lahf
loopne
mov
test
repnz
dec
lods
pop
scas
or
adc
jge
lea
das
xor
push
sbb
cmovp
mov
shrl
lds
mov
insl
sub
xor
mov
jmp
mov
addr16
mov
mov
fimuls
gs
fcomip
push
inc
arpl
test
cmc
std
fcmovnb
and
dec
test
dec
or
push
dec
sti
test
mov
testb
hlt
arpl
and
push
inc
cmc
xor
xor
mov
push
adc
pop
dec
aaa
rorb
in
in
leave
mov
ss
ds
push
jecxz
xor
aas
mov
xchg
add
outsl
ficoms
push
es
and
daa
or
sub
ret
push
dec
pop
pop
xchg
adc
push
mov
int3
popf
pop
loope
dec
sub
sbbb
inc
sub
pop
push
rclb
movsl
dec
add
cwtl
fisttpl
repz
push
xchg
test
sarb
inc
faddl
jmp
inc
out
mov
push
adc
mov
in
mov
loop
push
jp
jae
fidivrl
sub
testl
pop
hlt
in
outsb
jnp
les
cltd
cli
add
xor
popa
daa
testb
dec
or
mov
bound
pop
jle
cltd
adc
mov
aaa
int3
cmp
pop
inc
xorl
sub
fimull
and
dec
xor
rcrb
out
mov
sti
test
repnz
cmpsl
sbb
lcall
out
jo
jo
fcom
pop
call
insb
adc
push
adc
push
rorl
push
adc
or
iret
push
outsb
adc
dec
or
sub
lods
jg
stos
mov
push
pusha
push
jno
dec
sbb
test
popa
inc
add
or
jg
inc
fxch
ljmp
insl
ret
out
mov
pop
aad
sti
icebp
insl
cmp
and
jge
cmp
mov
dec
fs
mov
iret
mov
addl
lea
mov
adc
sub
loope
out
in
icebp
inc
iret
add
roll
dec
push
xchg
divl
pop
call
mov
jnp
pusha
or
leave
xor
add
movsb
mov
sbb
lret
enter
lods
mov
push
inc
inc
enter
mov
xor
xchg
call
out
outsl
je
pop
lods
adc
push
push
jge
int
arpl
jnp
adc
inc
int
mov
and
les
jg
push
mov
loop
and
imul
mulb
out
sbb
and
lcall
fstp
ret
loope
call
scas
add
aaa
xchg
bound
aam
xchg
stos
ret
test
in
pop
pop
dec
dec
imul
push
inc
fstpt
ficomps
test
pop
sbbb
jge
jmp
dec
xchg
adc
notb
rcrb
jmp
cmp
cmp
mov
rcrb
inc
dec
cltd
cmp
imul
sbb
xchg
aaa
call
ljmp
data16
xchg
cld
dec
rorl
loop
lods
mov
dec
xor
inc
add
mov
adc
data16
outsb
xchg
int3
iret
call
dec
push
fsubs
in
jl
dec
adcb
push
sbb
jle
mov
shlb
or
popf
enter
popa
mov
test
inc
lea
dec
push
inc
fidivl
xlat
push
and
mov
sub
fsubl
jle
lahf
sub
in
lods
movsl
outsl
out
mov
mov
out
cmpsb
mov
pop
xor
inc
int3
shll
test
les
out
andl
add
jmp
or
mov
outsl
mov
mov
repnz
cwtl
push
imulb
ds
cltd
cwtl
pop
lret
cmp
dec
test
push
jnp
dec
or
fs
sub
pop
rorl
lods
aam
mov
fisubl
fsubrs
int3
dec
mov
iret
ja
inc
or
and
stos
testb
aam
nop
ficoms
xor
call
pusha
xchg
out
xchg
sbb
imul
pop
mov
cld
enter
mov
decb
sbb
dec
sbb
push
leave
shrb
dec
ljmp
data16
add
das
pusha
cmc
mov
adc
mov
insl
xor
adc
jge
cs
iret
lret
sahf
clc
ljmp
jae
xchg
mov
mov
cmp
mov
cmp
xor
lods
andnps
insl
jb
mov
movsl
xor
cltd
adc
lret
mov
in
int
mov
fwait
or
sub
pop
xor
inc
xchg
mov
insl
push
pop
jbe
mov
push
and
inc
mov
jns
enter
adc
test
cmp
cmp
jge
cltd
or
sahf
push
jno
in
xchg
jae
in
add
add
cmc
jle
in
mov
cmp
add
fsubs
scas
adcl
mov
adcb
dec
fmull
repnz
cmpsl
jne
cmp
jae
lahf
negl
mov
fnstenv
rorb
or
jecxz
pop
xchg
test
dec
adc
outsb
imul
or
daa
movsb
cmc
or
mov
cmp
enter
push
outsb
fcomp
stos
mov
ret
loope
pop
decl
add
push
sub
clc
lods
pop
es
mov
push
aad
aaa
xchg
xchg
jbe
push
fimuls
fimull
out
mov
mov
repnz
fwait
pop
mov
mov
stc
jns
lods
sti
dec
xchg
add
xchg
bound
data16
xchg
arpl
test
les
lret
nop
divb
imul
adc
or
mov
je
int
not
dec
cmovb
loop
and
pop
push
jae
pop
stos
push
fistpll
fidivrs
xchg
es
out
dec
insl
arpl
xchg
mov
and
pop
add
dec
xor
mov
mov
push
sarb
imul
sub
xor
movsb
mov
inc
int
fcmovnbe
addr16
je
or
scas
or
xchg
mov
push
mov
std
cs
push
or
pop
push
adc
or
das
cltd
test
test
int3
mov
out
loop
mov
movsb
ret
or
xor
or
pop
xor
and
nop
push
push
mov
pop
sub
pushl
daa
rcrb
jnp
mov
pop
cmp
repz
xor
push
sbb
loope
push
dec
es
int
sti
mov
stos
mov
mov
movl
cmp
int3
insb
mov
in
push
lds
pushf
enter
sub
mov
xchg
xchg
icebp
insb
mov
out
in
push
adc
pop
in
push
mov
or
stos
jne
fsubrp
loop
inc
outsb
orl
loop
inc
xchg
sub
push
cli
mov
aaa
mov
adc
fcoms
xchg
ss
mov
leave
jecxz
pop
pop
divb
add
mov
mov
sub
fistl
fnstsw
push
mov
jmp
ret
push
arpl
mov
cld
outsb
jecxz
jne
jns
fcoms
outsl
sti
jne
jmp
push
xchg
cmc
imul
or
icebp
test
cs
fs
loop
nop
push
pavgb
bound
jb
shrb
jbe
call
outsl
sbb
inc
cmp
or
jo
jmp
pop
lods
mov
pop
pop
dec
fldlg2
sbb
ret
mov
push
sub
loopne
adc
insb
dec
insb
sub
xor
cltd
adc
addr16
lcall
pop
lea
or
fcoms
ss
sub
cmpsb
jg
cmpsb
aad
ja
mov
push
daa
mov
and
in
jp
mov
icebp
aad
mov
shl
out
adc
sbb
sbb
movsl
mov
fldl2e
popa
pop
shll
dec
fs
jo
lahf
fsubrp
jno
rol
push
sub
outsl
int3
mov
pop
cmc
movsl
jg
xchg
cmp
adc
dec
shll
pop
sub
push
out
mov
add
movsb
mov
outsl
jle
xor
sub
sbb
mov
inc
sub
pop
ficompl
push
push
sarb
push
divl
test
jg
jg
sub
dec
loope
pop
dec
sub
push
adc
pmullw
mov
xor
sbb
pop
inc
adc
dec
push
cltd
inc
mov
shll
mov
mov
enter
ja
jb
fbld
dec
sbb
mov
adc
cmpsl
xchg
pop
push
jecxz
adc
iret
rcrb
subb
sti
jp
jl
sub
jns
outsl
test
fstps
xor
or
es
jl
test
add
int
push
cli
jo
addb
cmp
inc
mov
test
and
dec
loope
ret
cwtl
pop
push
into
aas
xchg
mov
mov
xlat
add
pop
mov
jae
cmp
clc
insb
or
jne
inc
jp
and
test
push
jnp
inc
or
xchg
iret
mov
data16
sub
fistl
and
push
dec
cmp
scas
mull
sbb
in
in
sub
mov
loopne
xchg
shrl
orb
push
sbb
cmpl
ret
mov
out
rcll
lods
lcall
add
sub
adc
inc
pop
inc
pause
push
add
into
lahf
orb
fidivl
imul
push
xchg
cmp
mov
jecxz
sbb
mov
insl
sbb
cld
inc
mov
sbb
dec
leave
fs
inc
jge
push
sbb
inc
xorl
shrl
pusha
sbb
in
push
cs
lods
rorb
mov
mov
mov
clc
sub
cmc
roll
movsb
mov
add
popf
movsl
jne
sub
or
pop
pop
or
into
stc
sarl
shlb
loopne
pop
xor
jmp
add
cli
loop
nop
ret
les
mov
stc
lea
cmc
test
mov
ja
jns
inc
add
and
jg
sbb
in
shl
ret
mov
dec
jle
or
dec
lahf
inc
cmc
ljmp
outsl
cltd
mov
sbb
lods
jecxz
repnz
push
roll
xchg
out
ljmp
hlt
adc
fcomip
mov
jae
lea
mov
xchg
pop
mov
push
or
xorl
dec
dec
mov
imul
and
or
xor
fiadds
popf
sarb
cmc
mov
iret
or
pop
sbb
ss
xor
sbb
mov
sub
xor
out
lea
stos
imul
mov
ds
xor
hlt
inc
je
cld
mov
addr16
mov
mov
inc
movsb
xchg
dec
mov
cmpsb
shl
int
shl
xor
pop
xchg
cld
fwait
cmp
dec
cmp
filds
cmp
cld
cmp
mov
repz
pop
cmp
cwtl
movsl
dec
pop
sub
mov
sbb
bound
jp
ljmp
mov
adc
dec
jo
pop
movsl
enter
xchg
fimuls
dec
hlt
inc
in
in
cltd
dec
fs
loopne
mov
insl
shl
jo
jnp
pushl
dec
jl
out
jns
jo
out
dec
and
cwtl
in
sahf
pop
popa
test
rcrl
addr16
mov
je
lahf
mov
cmc
sbb
outsl
movsl
inc
adc
std
stc
imul
aaa
or
cmpsb
sbb
js
or
dec
and
jmp
int3
int3
pusha
mov
push
inc
pop
out
and
pop
js
fs
dec
cmc
mov
push
std
xorl
lahf
cmp
lret
cld
jns
jno
lret
and
hlt
neg
or
loop
sbb
fstpl
mov
jno
aas
sbb
inc
insl
ljmp
daa
cld
xchg
iret
and
xor
lea
in
adc
lea
pop
lds
std
xlat
push
test
lods
xor
push
imul
cld
movsl
mov
das
dec
push
mov
aas
stos
pop
imul
mov
mov
out
adc
mov
push
loopne
enter
xchg
out
cmp
mov
in
pusha
es
loop
xchg
mov
cmc
lret
xchg
int
incl
dec
in
hlt
repz
push
dec
xchg
push
sbbb
adc
cmp
add
and
mov
mov
cwtl
dec
adc
cmp
pop
into
lock
ret
push
cmp
inc
add
jg
jae
inc
test
test
mov
adc
je
xchg
insb
jcxz
push
xor
lcall
jne
inc
inc
pop
and
movsb
pop
fadds
inc
das
std
setnp
hlt
lcall
lret
in
lret
mov
js
hlt
inc
clc
sub
cmp
clc
dec
dec
outsl
mov
test
mov
in
xorb
mov
dec
jns
jo
mov
fimull
add
add
rolb
int
cwtl
xchg
test
xchg
lret
mov
or
sub
cmpsl
and
sub
ss
lea
popa
sbb
out
push
insl
loop
aad
adc
dec
adc
add
jns
jo
and
inc
mulb
in
add
cwtl
cli
in
xchg
sbb
jge
bound
aad
es
inc
out
shll
outsl
iret
lret
test
adc
dec
roll
xchg
xlat
mov
sbb
mov
aad
cli
xlat
shll
sbb
fildl
jle
scas
and
jl
jp
add
mov
aaa
das
jb
pusha
imul
pop
xchg
repz
cmp
xchg
andb
mov
xchg
push
xor
adc
push
mov
es
jl
inc
pop
dec
mov
pop
fiaddl
bound
fimull
and
in
push
adc
xchg
xchg
aam
js
pop
shlb
add
mov
fcmovbe
add
xchg
shrl
popf
lret
fdivs
out
int
xchg
mov
mov
ret
add
lret
out
mov
and
fldl
popf
mov
pop
dec
fcmovnbe
imul
dec
cld
jo
jnp
push
xor
stos
xchg
jbe
pop
add
fxtract
sbb
int
out
jnp
dec
push
mov
mov
sbb
push
sub
inc
sub
cwtl
jo
jae
mov
mov
adc
sbb
add
inc
push
cmpsl
mov
pop
stc
into
mov
dec
sub
or
std
movsl
jbe
inc
adc
jb
cmp
insb
stos
fimull
lcall
aam
jle
or
in
inc
xor
jg
lahf
add
sub
adc
cmp
mov
scas
shl
adc
and
mov
iret
mov
pop
in
dec
dec
enter
pop
mov
xor
sarb
fiaddl
ret
mov
rcll
int3
arpl
xor
cmp
adc
fiadds
enter
pop
gs
frstor
cmpsl
sbb
cmp
lea
ljmp
adc
pop
iret
mov
fiadds
jae
mov
out
pop
loop
outsb
mov
and
ret
adc
and
adc
movaps
aad
mov
dec
lahf
les
pop
sub
fnstcw
pop
insb
xchg
jmp
sbb
jecxz
call
mov
icebp
insl
dec
fsubl
cmpsl
push
aas
sbb
shl
repz
jecxz
repnz
jle
mov
jg
jge
ret
and
lds
ret
cs
fsub
test
pop
outsl
leave
imul
mull
inc
das
sbb
test
dec
sbb
xor
icebp
in
inc
clc
jmp
imul
jbe
dec
mov
pop
jnp
sarb
and
loopne
popa
or
push
xchg
sbb
sub
jne
push
cmc
sbb
sbbl
mov
arpl
mov
ss
cmc
test
ss
cltd
adcb
push
push
and
cltd
mov
in
hlt
mov
pop
jnp
mov
jl
sti
cmp
xor
lea
mov
xchg
aad
insl
jmp
dec
lea
and
loop
mov
dec
mov
and
sti
fs
cmp
xor
mov
push
test
pop
mov
imul
scas
test
sti
jno
movsl
inc
pop
and
jbe
mov
push
lcall
cmp
cmp
xor
push
test
push
jp
dec
mov
sbb
push
test
cmc
arpl
int3
out
in
and
mov
loope
push
cmc
push
test
mov
mov
cmp
outsl
or
and
dec
sub
xchg
inc
in
push
into
adc
adc
add
or
ret
pop
or
xor
cmp
jno
scas
les
imul
rcrl
cmp
ret
out
aam
lods
aam
addl
cmc
add
cmpsl
jo
mov
push
push
push
inc
jae
mov
mov
movsl
fsts
mov
mov
iret
lods
pop
stos
dec
call
mov
jno
fists
xor
or
cld
insb
xor
pushf
repnz
fistps
jb
mov
push
mov
scas
lahf
cmc
or
cmp
mov
into
pop
sti
mov
iret
pop
and
into
and
jnp
pusha
mov
jge
xchg
and
icebp
pushl
cmp
push
clc
ret
mov
stos
mov
and
adc
and
pop
adc
lea
push
adc
cmp
cld
xchg
setae
mov
add
js
decl
hlt
jb
lock
lea
dec
test
jecxz
add
push
pop
fcmovnbe
scas
xchg
pop
xchg
shl
aam
mov
leave
mulb
and
lods
jecxz
cmpsl
cs
mov
movsb
test
cs
scas
dec
xchg
frstor
insl
test
movl
add
sti
jbe
push
dec
xor
push
xchg
popf
dec
push
icebp
mov
jne
cwtl
call
test
mov
outsb
or
mov
pop
pusha
pop
xor
pinsrw
mov
out
dec
xor
push
scas
cld
outsl
mov
mov
cmp
cli
xor
insb
ds
push
dec
repnz
pop
jo
sub
pop
sbb
nop
push
jp
mov
fs
mov
dec
data16
jmp
fstpl
loopne
imulb
sti
fisubl
add
mov
xchg
sti
icebp
xor
xchg
inc
cmc
xor
mov
dec
xor
inc
jns
ljmp
icebp
out
add
add
sub
mov
ja
aam
aad
xchg
mov
stc
jae
fsubrs
and
sbb
mov
das
mov
cmp
loopne
sahf
call
push
push
es
inc
xlat
cmpsb
jnp
stos
cmp
gs
inc
mov
push
fidivl
cmp
pop
in
js
push
ret
sub
add
mov
inc
lods
dec
popa
and
imul
adc
shll
push
pusha
jb
add
dec
xor
push
dec
push
ljmp
pushf
mov
movsb
xchg
push
or
push
lea
test
sub
jae
add
ljmp
xchg
movsl
or
pop
int
sbb
xor
cmpsl
roll
aaa
mov
mov
dec
int
bound
jl
adc
push
dec
insl
and
adc
loopne
sub
mov
dec
into
mov
push
in
dec
jae
js
jae
push
and
mov
bound
jb
and
pushf
adcl
push
dec
jbe
pop
mov
fdivrl
xchg
pop
sti
ret
cli
jmp
jae
js
in
lret
push
pop
ret
lret
cmp
repz
cmp
mov
test
leave
add
push
push
roll
out
or
ss
and
aas
jne
mov
pop
scas
push
sub
adc
xchg
add
sbb
sub
call
loop
mov
sub
and
daa
ret
jne
inc
jecxz
push
not
test
add
sub
pop
divb
pop
aad
mov
sti
add
je
or
sub
in
sub
decl
adc
dec
mov
dec
mov
xor
xor
loopne
bound
lods
jns
idivb
ficoml
mov
jmp
sub
and
shlb
fbld
dec
or
adc
fldt
ljmp
fists
jno
fnstsw
dec
cmc
and
fstpl
call
out
adc
cmpsl
hlt
icebp
pop
addr16
int3
cmc
popf
sbb
ljmp
push
sub
push
jnp
pushf
and
sub
push
div
lcall
jnp
fstpt
popf
outsb
and
lds
stos
shrl
push
fsubrl
push
cmp
sub
lret
jecxz
jmp
and
or
xor
push
scas
inc
mov
pop
adc
dec
cwtl
fidivs
mov
push
jb
push
std
push
sbb
and
mov
es
lds
out
inc
mov
scas
push
sahf
sub
push
repz
xor
test
test
add
das
and
xchg
jo
loopne
imul
sbb
nop
and
sbb
stc
push
or
les
ret
sahf
sub
cmp
je
push
lcall
inc
push
jae
mov
scas
shlb
cs
xchg
nop
dec
scas
jno
dec
mov
fldt
or
xchg
sbb
xlat
push
shll
xor
loop
int
dec
subb
xchg
js
xlat
xor
push
pusha
cmp
dec
sbb
int3
rcll
lods
jge
fwait
dec
or
sbb
mov
addb
lcall
push
in
out
sbb
pop
icebp
jnp
dec
cmpsb
ljmp
rcrb
cmp
dec
sub
scas
ret
inc
sti
or
xchg
imul
adc
jmp
subb
outsl
lock
mov
add
out
js
lret
fisubrl
les
push
lret
stc
mov
mov
mov
add
scas
rol
rol
cmp
sarl
mov
loope
adc
test
add
les
pop
test
mov
xor
add
mov
sbb
pop
scas
mov
or
stos
push
jl
clc
or
and
pusha
mov
jg
icebp
dec
enter
std
push
movsb
dec
lcall
xchg
je
insb
jp
xchg
pop
imul
fstl
dec
pop
scas
fwait
arpl
out
jb
movsl
subb
push
inc
adc
bound
push
inc
sub
jne
and
push
cmp
jg
cmp
dec
sbbb
jle
fistps
sarl
mov
jmp
push
mov
adc
add
jne
and
and
pop
js
and
dec
ds
out
adc
push
jecxz
std
push
into
loop
loopne
xchg
mov
jo
dec
cmp
cmp
gs
test
test
jb
sti
das
sti
or
xchg
pop
ret
fwait
out
xor
xor
hlt
mov
gs
and
dec
mov
cmpsb
lds
mov
cmp
out
mov
dec
imul
and
push
pop
dec
add
push
adc
punpckhdq
jmp
jne
jl
fcoml
push
sub
sub
ds
xlat
pop
movsl
fwait
lret
mov
repnz
inc
jge
loopne
dec
sbb
rorl
sub
adc
mov
in
add
cltd
movsb
or
mov
and
lahf
or
mov
xlat
out
shlb
xor
imul
mov
nop
shll
pusha
ja
add
push
xlat
mov
lods
sbb
xchg
test
mov
push
pop
jbe
addr16
je
or
and
sub
mov
inc
mov
xor
fstpt
mov
xchg
ljmp
gs
add
loopne
ljmp
sbb
push
xchg
add
mov
imul
out
xor
dec
je
push
dec
fsubl
mov
pop
add
xchg
sahf
xchg
das
push
or
lcall
xor
movsl
fidivrs
lods
pop
jge
and
repz
sbb
and
xor
xchg
lds
mov
addb
dec
xchg
sahf
mov
and
out
jno
xor
xchg
mov
iret
push
xor
cld
outsl
dec
loop
ret
fnstcw
lahf
cmp
rcrb
pop
mov
lock
pop
xor
mov
popf
cmp
mov
sbb
stos
jge
std
cld
sar
and
jbe
cmp
test
mov
shr
inc
cmp
je
lds
cmpsl
jno
mov
mov
adc
ds
scas
pusha
mov
mov
push
repnz
inc
sar
in
out
or
aam
mov
adc
sub
and
cmp
divb
or
inc
pop
adc
lock
jl
pop
push
xor
fiaddl
sbb
push
ss
hlt
jecxz
dec
scas
pop
xor
cmc
mov
adc
enter
jp
jne
push
ret
jbe
lahf
mov
xchg
inc
cmc
cli
push
lahf
scas
inc
enter
dec
adc
cmpsb
hlt
xchg
xchg
xchg
mov
jmp
xchg
mov
push
stos
cld
icebp
pop
pop
cmp
mov
ret
sub
pop
inc
sbb
arpl
loop
mov
adc
lret
jno
sub
dec
or
and
push
cmpsb
sbb
and
adcl
add
sbb
push
jle
sbbb
call
push
push
push
in
repz
scas
jns
cmc
dec
std
lret
test
jge
in
clc
les
add
sbb
xor
bound
loop
pushf
jecxz
or
mov
adcl
loope
out
fsubs
xchg
popf
mov
jnp
test
mov
pop
push
pop
or
enter
lahf
pop
dec
or
fwait
inc
in
clc
data16
jge
push
ss
pop
pop
fwait
cmpsl
fistpll
dec
sub
add
mov
jne
xchg
sbb
xlat
push
es
pop
push
ss
pop
or
cmp
xchg
outsb
add
bound
jle
stos
and
fwait
shrl
lods
push
mov
setle
roll
xchg
sub
outsb
js
scas
popf
aad
dec
xchg
mov
and
lds
push
xor
into
jae
jecxz
scas
sahf
out
in
stos
or
jle
sub
call
push
dec
lds
sbb
les
cwtl
popf
dec
cmp
scas
add
cmpsb
and
stos
dec
movsl
shrl
sarb
ret
mov
cmpb
xchg
sti
dec
push
mov
adc
push
push
jge
test
mov
dec
lock
and
js
inc
les
scas
icebp
adc
adc
jecxz
dec
mov
repz
lahf
sbb
cmc
push
cltd
sub
mov
pusha
or
pop
inc
or
jo
or
xor
mov
cmp
jnp
inc
loopne
jg
aam
sub
inc
bound
in
xchg
js
push
daa
push
loop
in
rol
filds
add
lret
push
pop
ja
decl
mov
out
adc
mov
xchg
mov
mov
emms
sbb
xchg
inc
outsl
in
outsb
jb
dec
leave
cmp
out
mov
psubsw
rclb
xchg
or
ss
jae
das
mov
rep
jne
movsb
add
sub
ljmp
sub
out
jo
jbe
fwait
pop
mov
cld
push
mov
insb
add
pop
mov
out
into
jno
xchg
leave
aas
clts
lods
movsl
cmp
inc
out
cmpsl
push
scas
rclb
ficoml
push
or
aas
add
rclb
add
fs
mov
adc
dec
adc
mov
cmp
xchg
scas
xchg
rorb
inc
dec
movsb
aad
cmp
xor
mov
fnstcw
inc
scas
and
mov
rcr
rorb
ljmp
das
data16
fprem
nop
xchg
in
loope
jecxz
dec
je
mov
cmpsb
pop
jae
sub
xor
rcll
into
lret
popa
movsb
sbb
mov
movsb
push
mulps
and
mov
inc
shrl
std
iret
xchg
inc
push
fdivl
inc
adc
pop
inc
pusha
mov
lahf
add
push
mov
inc
pop
fistps
stc
jns
inc
movsl
lock
xchg
fcos
sbb
mov
add
jae
mov
movl
scas
out
dec
out
idivl
les
out
imul
inc
xchg
das
mov
xor
pop
jle
sub
push
aam
adc
push
cmc
cwtl
sbb
dec
fmul
repnz
or
sarb
outsl
inc
js
aad
push
inc
adc
mov
xor
inc
out
stc
add
bound
mov
fildl
push
mov
dec
ja
cmp
lea
ss
sbb
pop
pusha
leave
js
mov
and
je
sahf
cmp
adc
nop
or
cmp
fnstenv
mov
or
lods
loopne
mov
push
xchg
fs
add
imul
push
imul
loopne
jb
and
xor
data16
sbb
nop
add
sub
aas
andl
popa
adc
scas
cmp
addr16
insb
mov
int
leave
jge
xchg
les
push
jb
ret
mov
insb
fldenv
scas
cmpb
sti
xchg
neg
jle
mov
test
scas
pop
notb
sub
subb
loop
mov
mov
mov
pop
ss
sti
bound
push
int3
push
dec
pusha
xor
and
inc
or
jle
push
mov
mov
xor
int3
ret
lods
cmp
dec
in
inc
dec
repz
dec
xchg
sbb
sub
ds
mov
jg
xor
mov
jb
cmpsl
xchg
mov
je
cmpsb
jg
sbb
mov
fcompl
and
sub
loopne
cltd
xor
xchg
jecxz,pn
gs
adc
cmc
cmp
xchg
clc
push
push
adc
add
push
out
add
add
popf
ret
lret
stc
jnp
mov
adc
pop
stos
popa
fs
and
gs
mov
in
call
push
in
jl
iret
pop
add
xor
lret
and
cli
and
push
xor
pop
pop
rorb
inc
fmull
cmp
gs
and
dec
test
fsubrp
rolb
ds
mov
iret
cmp
mov
add
pop
mov
jo
int3
fistpll
push
xchg
outsb
push
sbbl
cmp
shrl
adc
nop
imul
mov
jl
jo
or
movsl
popl
push
lods
pop
xchg
out
sub
cmp
jl
pop
cwtl
push
test
scas
xchg
sbb
outsl
adc
shrl
sbb
lds
jae
add
adc
ljmp
mov
test
test
dec
xorb
adc
mov
mov
insl
xor
clc
or
outsb
test
stos
push
pusha
nop
sub
mov
pop
inc
out
imul
jo
or
lcall
adc
dec
test
mov
je
add
jg
pop
push
popa
xor
out
inc
jb
jnp
push
iret
push
pop
cs
jnp
add
pop
pop
jbe
push
adcb
mov
xor
fdivl
mov
cltd
hlt
sbb
and
addl
ja
mov
cli
pop
fistl
mov
andb
xor
sbb
int
pusha
das
xlat
xchg
jmp
mov
sub
sbb
jae
fdivs
fdivr
mov
lds
sbb
clc
jnp
test
repz
imul
mov
mov
push
das
in
add
lcall
jne
jecxz
sub
cmp
cltd
outsb
scas
test
and
dec
cli
xchg
test
mov
push
lret
out
ja
rcrb
scas
loop
inc
xchg
movsl
mov
lahf
add
or
add
movsb
add
dec
jae
in
cmp
mov
imul
dec
or
mov
and
mov
insl
in
insb
push
cmpsb
xor
stos
rclb
xchg
pop
ret
add
lahf
sbb
jmp
jb
fisubl
inc
push
adc
fbstp
sbb
push
lds
cmpsb
mov
clc
repz
sti
mov
and
push
jge
hlt
add
aam
xlat
mov
lcall
cmc
jecxz
loopne
add
outsl
dec
mov
or
bound
xor
aam
push
ljmp
push
gs
fldenv
push
cli
and
add
xor
cmpsb
out
aas
mov
hlt
pop
add
aam
pop
ret
pop
mov
out
or
mov
ret
or
lret
mov
lods
mov
add
or
cmpsb
js
jb
push
mov
push
or
cmpsb
lds
xchg
mov
cltd
in
fstpt
lds
dec
mov
fiadds
gs
mov
xchg
fs
in
jnp
inc
adc
and
cmc
pop
movsl
sbb
pop
arpl
jns
pop
xchg
aam
push
sbb
negl
xchg
push
pop
pop
inc
in
xor
sbb
ljmp
mov
add
jecxz
out
adc
loope
out
push
jno
cmc
rolb
mov
xchg
arpl
das
pop
push
dec
xchg
imul
add
js
pusha
inc
mov
mov
shrl
mov
dec
jg
repnz
lods
loope
push
add
mov
cli
dec
xrelease
into
pop
xor
cli
ja
icebp
adc
jns
cmp
xchg
and
mov
dec
ds
pop
imul
int3
rorl
push
push
or
cli
addr16
fcompl
cs
or
les
or
dec
cmp
lret
popa
inc
adc
adc
adc
bound
cwtl
fidivrl
push
jb
in
adc
push
add
push
fadds
rorl
cmpsb
addr16
push
cmp
gs
add
push
xchg
and
loopne
xchg
scas
sub
xchg
ja
pop
inc
mov
push
arpl
inc
nop
mov
sub
ss
mov
insb
mov
adc
pop
add
fdiv
rclb
lods
sbb
cmp
mov
sbb
sahf
add
inc
mov
mov
inc
shll
std
ror
jne
pop
mov
test
ljmp
mov
inc
mov
sub
mov
adc
rcrb
inc
fistpl
data16
push
xchg
in
jns
outsb
filds
pop
mov
lahf
ficoms
inc
mov
fadd
rcll
cmp
insb
push
jge
es
in
sarl
adc
add
xor
sub
icebp
dec
and
imul
test
fwait
pop
mov
push
iret
cmp
pop
xchg
repz
lahf
pop
les
xor
pop
xor
xchg
movsb
ja
adc
dec
pop
in
jne
add
clc
test
jb
aas
in
iret
sub
inc
lahf
rcll
out
mov
sarl
jnp
lods
mov
mov
inc
mov
je
push
into
ss
aad
mov
mov
dec
mov
std
lds
jb
pop
cmp
cmpl
lods
aaa
ljmp
lock
jo
cmp
int
gs
fdivrs
ss
inc
test
cs
outsb
pop
dec
sub
push
pop
sub
jmp
out
push
cmpsb
cmc
ja
xchg
call
jae
or
aad
js
add
addr16
adc
fimuls
adc
pop
stos
add
xchg
jmp
sbb
adc
or
mov
daa
sarl
aam
ret
pushf
aaa
jge
and
in
test
sub
dec
cmp
sbb
adc
jmp
insb
outsb
adc
rolb
movsb
shl
mov
rol
push
fmuls
sub
dec
xorb
sbb
inc
dec
cmpsb
rolb
mov
jne,pn
push
dec
jmp
jp
dec
push
sarl
imul
pop
jmp
jb
jp
hlt
sub
pop
cld
insb
push
and
data16
adc
lret
xchg
sub
cmc
ret
and
push
fldcw
mov
test
cmp
repz
xchg
jle
sti
clc
jb
adc
xchg
cmp
test
cmpsl
xchg
gs
cmc
push
imul
jg
mov
subb
or
sbb
clc
cmp
jle
mov
dec
nop
adc
push
ficomps
test
clc
xchg
xor
pop
js
dec
cwtl
push
jmp
sub
ljmp
xchg
sub
out
mov
shrl
stos
sahf
nop
cmp
mov
aas
clc
cmp
and
out
pushf
push
jl
aad
out
sub
inc
lods
inc
push
es
mov
es
inc
or
lcall
inc
rcll
inc
paddd
cmp
imul
ret
xchg
sub
fdivp
bound
mov
mov
hlt
sub
inc
lcall
loope
cmc
or
in
sti
adc
adc
mov
pop
daa
cmp
aaa
imul
loop
mov
scas
dec
mov
out
mov
cmpsb
scas
adc
loop
sub
pop
ret
cs
pusha
cmp
pop
and
inc
push
add
sbb
inc
into
mov
adc
add
sbb
mulb
cmpsl
fidivrs
mov
daa
test
aas
mov
test
ss
adc
xchg
add
jbe
push
or
jb
jbe
std
mov
ja
fs
ljmp
notb
aam
loope
cli
cmp
mov
sub
cmpsb
mov
pop
les
stos
data16
xor
mov
mov
lret
or
jo
lcall
sti
xchg
int3
imul
sbb
call
pusha
data16
push
sub
mov
sub
fs
jge
fwait
or
push
fimuls
lret
bound
insb
out
add
int3
mov
outsb
push
push
xor
jecxz
daa
push
adc
push
pop
dec
sbb
ret
shlb
mov
push
sub
insb
mov
jge
cmp
cmp
pop
pop
push
aas
leave
mov
sub
pop
repnz
mov
pop
mov
fadd
loop
xchg
push
dec
out
adc
shrb
das
aas
aam
or
dec
dec
outsb
mov
out
imul
inc
nop
aam
push
mul
inc
cmp
jb
outsb
fsubrp
mov
xchg
mov
sbb
aam
repz
push
sub
popf
out
icebp
nop
stos
push
fstpl
cs
mov
adc
xchg
pop
sub
add
les
insb
sub
sbb
jnp
sub
jle
sub
sub
stc
jbe
dec
mov
out
lods
mov
rorb
xchg
xchg
out
mov
jp
add
cli
xor
out
xchg
shll
decl
push
inc
push
pop
mov
sub
inc
testl
and
push
mov
movsl
ja
stos
popf
rcr
sti
jecxz
in
out
inc
xchg
adc
in
scas
push
pop
popa
fcoml
movsl
gs
add
data16
xor
inc
fdivrl
adc
fwait
inc
add
or
add
jg
cmp
sbb
pop
dec
xchg
cmp
enter
fmuls
mov
push
mov
add
mov
lock
xchg
mov
push
jae
cmpl
loop
xchg
fs
push
int
enter
adc
add
in
adcb
test
shll
rcrb
xor
cmpsb
mov
lea
jb
xchg
jecxz
pop
fwait
nop
jg
xchg
jbe
adc
out
fistpl
pusha
xchg
mov
in
push
cwtl
inc
xlat
js
outsb
movsb
xchg
stos
icebp
mov
mov
add
cli
movsl
mov
push
xor
mov
push
insl
pop
mov
rcr
push
push
push
xor
sahf
mov
nop
dec
jle
popf
and
mov
or
dec
nop
std
outsb
shrd
pushf
mov
jnp
fcoms
insb
cltd
cmpsl
xchg
lret
repz
stos
push
or
lret
cmp
loope
jp
call
in
shrb
test
dec
dec
mov
mov
adc
rcl
mov
jp
notl
stos
mov
xchg
in
mov
sbbb
sbb
iret
fsts
aaa
scas
pop
lock
icebp
xor
out
jno
pusha
movsl
leave
dec
pop
mov
add
jg
inc
pushl
insb
stc
ffreep
clc
xchg
mov
sbb
sub
loopne
xlat
adc
ja
mov
jae
or
and
sahf
mov
movsl
push
and
jge
and
int
xorb
and
js
pop
insl
stos
add
enter
mov
jnp
jl
and
cmc
lret
mov
pop
aas
mov
mov
mov
frstor
inc
shll
push
inc
mov
jmp
jge
aam
scas
cmp
mov
mov
sub
xchg
push
dec
ja
xor
inc
mov
gs
xchg
fxch
fiaddl
inc
shlb
and
mov
pop
addr16
lock
mov
adc
ja
dec
rorl
movsb
xchg
sbb
jae
mov
and
and
aas
dec
sbb
test
sbb
gs
div
sbb
push
push
lret
add
ficoml
arpl
aas
jns
mov
jnp
add
pushf
push
sub
jbe
sub
xchg
outsb
into
cmp
xor
and
rcrb
outsb
xchg
aas
mov
cmp
in
push
inc
psubq
mov
mov
mov
pushf
mov
sahf
lods
dec
xchg
xor
cmp
pop
mov
fistpll
shll
fiaddl
nop
pusha
sub
and
adc
push
xorl
rcl
adc
std
adc
push
fidivrs
xchg
into
jo
jae
rorb
andl
int
push
rcrl
ja
js
push
fmuls
mov
push
addr16
ljmp
loopne
inc
sbb
jl
dec
mov
loop
scas
dec
int3
rcrb
incb
pop
adc
cmp
cmp
mov
ds
mov
bound
mov
data16
mov
loop
dec
fldcw
dec
xchg
sub
fmull
shl
nop
dec
leave
pop
cmp
and
ja
add
or
stos
sub
cld
shrb
or
neg
fisttpl
cmpl
lahf
mov
jbe
mov
in
xlat
popl
faddl
xchg
sarl
stos
jno
mov
bnd
out
js
call
adc
mov
inc
mov
ljmp
sti
or
enter
fidivs
fsubr
cmpl
inc
add
and
cmpsb
imul
inc
fdivr
in
and
jge
pop
test
xor
sub
xchg
xchg
testb
xlat
adc
mov
fmulp
jecxz
test
std
pop
push
xchg
jb
lahf
lret
jb
xchg
jl
jp
aas
nop
repnz
or
scas
inc
mov
pusha
or
mov
jmp
dec
lea
popa
dec
lahf
cmpsb
pusha
mov
cmpsb
call
xor
pop
cmp
pop
cld
mov
je
sahf
les
jle
fnstcw
cmp
ja
fsts
jge
push
pusha
xchg
in
xchg
mov
push
pop
sub
repz
movsl
fwait
enter
push
push
mov
push
cmp
pop
push
add
and
xchg
and
aam
sbb
add
shrb
fists
mov
mov
adc
or
xor
mov
xchg
dec
mov
dec
fmuls
and
clc
ds
out
push
xrelease
sbb
lcall
cli
cmp
adc
jmp
and
pop
imul
nop
aas
cmp
pop
mov
adc
mov
addr16
xor
pop
mov
daa
push
addr16
outsb
fildl
mov
arpl
pop
lods
cmp
divb
push
add
xchg
rorb
jno
cmp
das
movsl
aas
mov
fdivrp
imul
or
aad
neg
fstps
ja
lea
cmp
js
ficomps
pop
lods
test
arpl
pusha
arpl
cwtl
xor
and
ret
mov
xor
dec
pop
ljmp
jbe
adc
jmp
rcr
sbb
push
ror
std
cmp
bnd
jge
pop
in
sbb
lds
inc
dec
imul
pop
jg
test
dec
or
adc
push
je
jg
mov
inc
mov
jo
lcall
push
shlb
and
ljmp
jg
jge
aad
mov
add
pop
test
je
xor
out
enter
imul
aaa
push
xchg
sbb
mov
fwait
mov
jne
sbb
stc
or
ret
xchg
mov
dec
clc
fnstcw
xor
cmpl
and
xor
cli
mov
mov
fucomp
fnstsw
xchg
es
cs
mov
mov
shr
lahf
pop
push
sub
mov
fcmovbe
aam
mov
sub
cmc
les
or
xchg
data16
dec
sbb
ds
jbe
pop
push
add
adc
repnz
ds
sub
sub
outsb
bound
sarb
add
mov
fistl
bound
xchg
pop
add
jb
andb
and
fldcw
push
mov
sbb
dec
cmp
xor
shlb
test
je
rolb
sub
mov
cmpsl
or
mov
jbe
iret
mov
ffreep
xor
cmp
xorb
xor
mov
dec
sbb
pushf
scas
testb
push
jne
ds
rcl
xchg
testl
inc
and
jbe
push
mov
jne
jne
imulb
mov
cmp
xlat
cmp
cmp
adc
dec
jae
mov
cmpsb
fstl
inc
lea
outsb
mov
adc
push
sbb
mov
movsl
jl
rorb
loopne
daa
jnp
repnz
inc
psrad
adc
ss
cmp
arpl
inc
cli
pop
test
add
jmp
push
lret
enter
out
mov
jp
mov
xchg
dec
xor
lahf
add
xchg
int3
cmp
and
movsb
insb
cs
mov
xchg
das
call
aad
out
shlb
lcall
lea
cwtl
test
popf
inc
roll
xorl
iret
pushf
cmc
inc
xlat
fidivs
fwait
mov
xchg
and
jp
ljmp
lret
xchg
loope
mov
or
daa
ret
je
or
les
rorl
jno
sub
jp
jns
xchg
int
dec
not
mov
pop
pop
jo
sub
mov
cmp
or
movsb
bound
push
cld
outsb
inc
xchg
bound
xchg
sbb
imul
subb
paddusw
scas
sub
dec
stos
lds
in
lahf
or
sahf
mov
xchg
jo
xchg
or
loope
stos
gs
mov
cmpsb
mov
icebp
adc
lcall
push
mov
push
mov
xchg
sub
sbb
iret
push
das
mov
sarl
stos
mov
push
fisubs
xchg
mov
orl
mov
mov
xorl
fsubs
movsb
int3
je
int3
fistps
loopne
in
dec
push
xor
pop
and
shrb
adc
pop
cmp
arpl
hlt
int
jle
repnz
or
dec
sub
and
xchg
vshufps
xchg
filds
loopne
push
mov
dec
cmp
es
stos
lods
add
movsb
iret
fstpt
stos
into
stc
mov
rol
ljmp
js
movsl
pop
push
pop
cmpsb
jno
sbb
sti
adc
xchg
pop
inc
insb
lcall
popf
mov
xor
cmp
jle
fcomi
outsb
push
movsl
mov
fcompl
addr16
frstor
daa
dec
jge
lods
pop
add
and
mov
jb
xor
pop
cwtl
in
adc
mov
add
mov
sbb
jne
mov
xor
lods
fs
cmp
lret
ljmp
mov
jo
jge
cmp
ret
insb
fnstenv
xchg
daa
pop
fdivrs
mov
sbb
bound
std
pop
adc
test
popf
mov
sbb
adc
mov
mov
fiaddl
or
lea
or
mov
cmp
lods
mov
sbb
lcall
arpl
adc
pop
mov
out
jnp
mov
lea
jno
test
sbb
xchg
mov
jp
shlb
jmp
bound
insb
push
dec
dec
sub
cmp
insb
sbb
sub
add
cld
adc
push
sbb
pop
jne
push
inc
movsb
or
cmp
and
sub
bound
rclb
dec
dec
jae
cmp
lret
jge
xor
cmp
mov
dec
jnp
cli
push
std
ja
jb
mov
aam
mov
arpl
cwtl
mov
lahf
xor
sub
pop
and
stos
push
add
push
lods
sbb
leave
outsb
jl
xchg
adc
sbb
xchg
inc
and
and
add
and
push
sub
fimull
movsl
out
lret
insb
xchg
add
inc
sbb
lock
inc
pop
dec
sti
mov
dec
cmpsb
out
je
std
imul
loope
cli
ja
or
or
outsl
lds
mov
cmp
int3
outsl
xor
pop
inc
rolb
sbb
xlat
sub
fldt
sahf
es
push
je
adc
pop
fldt
mov
mov
jb
lahf
cwtl
nop
leave
and
inc
inc
aas
mov
in
mov
fs
repnz
outsb
lret
leave
and
lahf
cmpsb
shrb
xchg
xor
pop
arpl
jmp
xor
lret
and
push
mov
xor
sti
fdivrs
scas
pop
in
sub
add
lcall
inc
pop
inc
fiaddl
xor
push
gs
mov
sub
scas
fnstcw
pop
push
outsl
xchg
and
sbb
mov
jnp
jecxz
dec
or
jp
imul
sarl
sub
lods
inc
leave
stc
push
jge
fldenv
adc
jmp
sub
cmp
inc
int
push
inc
inc
decb
mov
inc
mov
mov
icebp
es
add
cmp
stos
adc
xchg
inc
jmp
cmp
in
js
mov
push
dec
sub
outsb
movsb
ret
loope
cltd
lods
js
xchg
aad
mov
int
stos
push
dec
or
mov
mov
mov
and
subb
mov
enter
lea
inc
or
pop
scas
xchg
pop
add
loope
cltd
or
and
adcb
lea
dec
pop
pop
pop
enter
xchg
mov
push
fsubr
sub
cmp
aad
jecxz
mov
insb
cmp
sub
sbb
in
leave
nop
je
js
pop
mov
dec
mov
jno
insb
or
xlat
xor
cmp
out
scas
pop
test
inc
stos
loope
adc
lret
mov
mov
add
adc
cmp
xor
cmpb
loopne
fucom
scas
std
inc
dec
bound
add
call
and
in
adc
fcompl
mov
add
xchg
fistl
push
clc
push
in
imul
imul
jmp
lds
sarl
jmp
fdivrs
pop
mov
enter
repnz
jmp
test
es
push
pusha
cld
or
and
mov
pop
ja
pop
cmp
negl
cmp
lret
imul
add
int3
push
cwtl
in
push
ud0
inc
stc
mov
adc
xchg
sbb
pop
fstps
icebp
jae
test
fwait
adc
pop
imul
xor
inc
push
int3
addb
pop
test
icebp
dec
xchg
stos
add
pop
cltd
xchg
stc
pop
mov
or
pop
cs
fs
int
inc
jo
push
rcrb
dec
mov
arpl
movsb
adc
neg
sbb
sub
gs
fnsave
mov
jnp
jl
sub
out
fiaddl
or
jb
mov
lcall
mov
outsb
lret
cltd
divl
adc
or
xchg
cmp
sbb
sub
xchg
push
movsb
mov
cld
xlat
jge
xchg
outsb
mov
or
or
mov
dec
dec
daa
xor
sti
xchg
mov
dec
pop
jne
shll
repz
xchg
icebp
cltd
cmp
adc
loope
cmpsl
sub
rorl
test
aam
mov
xchg
xabort
lods
stc
pop
cmpsl
inc
and
xlat
jns
push
mov
fstl
ret
adc
divb
leave
fbld
pop
xchg
dec
and
adc
dec
inc
data16
dec
lret
les
test
nop
pop
pop
fisubs
ret
daa
stos
orl
jl
scas
test
mov
icebp
out
inc
and
sub
icebp
and
cmpb
mov
jnp
cmp
cltd
jecxz
jg
mov
shll
into
pmulhw
mov
xor
cwtl
lcall
in
sti
stos
xor
dec
in
xchg
bound
or
mov
dec
imul
push
pop
es
int
clc
mov
xor
fucomp
aaa
or
sbb
cltd
jl
adc
lds
aas
cli
gs
push
mov
xchg
pop
and
mov
outsl
das
cli
mov
or
mov
adc
pop
inc
aam
dec
pop
rcl
shll
les
mov
jmp
pop
xchg
mov
and
sahf
and
mov
stc
pushf
or
je
hlt
mov
stos
xor
mov
mov
addb
push
int3
int3
xchg
cld
fidivrs
xchg
adc
mov
ficomps
and
ja
jo
addl
out
pop
add
movsl
orb
adc
pop
in
xchg
out
ds
out
cld
sub
daa
xor
jbe
lahf
jmp
arpl
dec
mov
repz
push
xor
mov
jecxz
push
xchg
adc
xlat
negb
dec
xor
ja
orl
incl
dec
inc
notb
dec
mov
push
fisubrs
inc
dec
add
mov
fistpl
fadd
jg
fdivr
push
mov
in
inc
xchg
sahf
mov
mov
add
in
cld
xor
rcrb
dec
mov
insl
cmp
push
sub
add
cmp
movsb
mov
loope
push
mov
push
inc
add
or
rcrl
test
dec
movsb
add
daa
sarb
or
sbb
jbe
fsts
xor
add
scas
mov
pusha
js
addr16
sbb
js
loope
mov
and
lahf
ss
lcall
mov
daa
movsb
and
and
std
pusha
ret
sbb
sub
ret
js
icebp
jmp
xchg
ja
mov
out
mov
cmp
mov
sub
mov
sar
mov
ret
lcall
mov
arpl
or
inc
cmp
sub
lret
fbstp
adc
and
jg
subl
ret
ljmp
bound
jne
pop
push
jno
rorl
icebp
sub
movsl
into
mov
cs
rcrl
dec
mov
or
inc
in
mov
dec
mov
push
stc
xor
inc
inc
xchg
sti
jb
in
mov
movsl
int
add
shll
or
xor
sbbl
inc
sub
push
jbe,pt
xchg
xchg
mov
xchg
test
jo
test
mov
xchg
jecxz
clc
ret
cmp
mov
mov
int
mov
jo
rorl
scas
cli
cld
mov
or
jl
cmp
bound
insl
das
and
out
out
scas
inc
aad
push
das
shlb
push
jns
sahf
add
mov
pushf
je
lret
cmp
popf
repz
mov
pushl
mov
in
lds
call
jns
jnp
loope
repz
cmc
sbb
or
lret
mov
and
imul
stc
icebp
enter
pusha
gs
test
xor
pop
xchg
pop
jae
add
cmp
imul
mov
sti
add
and
test
jne
sbb
pop
ds
enter
or
mov
jnp
sub
xchg
add
xor
adc
dec
add
mov
xchg
daa
in
pop
test
and
cltd
je
mov
xchg
xchg
mov
cld
or
outsl
cmpsb
test
paddsb
cmp
imul
pop
sbb
subl
js
ljmp
aam
dec
jl
mov
sahf
jb
enter
adcb
push
fisubrs
je
int3
das
jo
je
or
in
fistps
xlat
mov
dec
jecxz
in
nop
jno
data16
mov
dec
cmp
mov
fisttps
decb
aam
leave
pushf
in
stc
xchg
loopne
pop
inc
pop
or
ljmp
fs
nop
and
sbb
gs
dec
popf
pop
and
scas
leave
data16
shlb
pop
push
pop
jg
lock
jge
and
orb
pushf
orb
cmpsl
lds
sarb
sti
imul
and
mov
fisubrs
iret
and
dec
push
test
mov
into
xchg
fsubs
repnz
movsb
adcb
jmp
cld
and
or
aad
xor
pusha
cmp
pop
lret
inc
push
sub
push
xor
bound
movsb
xchg
sbb
mov
mov
das
pushf
fisubs
add
clc
arpl
cmp
push
rorl
into
mov
arpl
or
scas
mov
cmp
test
out
lret
lret
sub
pop
add
xchg
fmuls
mov
iret
test
inc
jo
std
mov
hlt
sbb
fnstenv
xor
push
int
movsb
xchg
shlb
pop
cmc
jecxz
enter
sub
adc
mov
rcr
sahf
lds
pop
pop
rorb
mov
cmp
test
testb
sbb
mov
mov
negb
mov
repnz
mov
ret
std
xor
pushf
xchg
or
lea
xchg
xchg
lods
call
sbb
xchg
xchg
idiv
fcoml
push
rolb
mov
fsubp
ljmp
es
xor
into
mull
in
or
lahf
out
jne
sbb
cmpsl
fldenv
jns
dec
fsubp
mov
push
xor
adc
ja
mov
adc
sbb
stc
js
pop
mov
pop
mov
push
push
out
ljmp
and
and
in
ja
repnz
pop
and
lahf
pushf
sub
cmp
jg
icebp
lds
mov
jae
mov
cmc
scas
jb
jo
mov
int
sar
pop
adc
out
mov
or
stc
gs
pop
fucomi
dec
add
cmp
jbe
mov
jns
int3
ror
and
pop
jbe
mov
jno
fwait
push
xchg
and
and
les
pop
xchg
es
mov
pop
jmp
mulb
xchg
movsl
mov
leave
xchg
ficoms
pusha
pop
je
xor
cmp
fadds
out
sbb
test
or
jbe
mov
mov
xor
ret
jno
sub
push
sti
pop
lret
and
jl
aas
nop
sti
mov
out
in
pop
fildll
xchg
daa
es
insl
or
sbb
pop
inc
push
lods
mov
sahf
out
push
sub
in
in
dec
repnz
scas
or
and
stos
lcall
lock
xchg
mov
push
addl
pop
sub
fisttpll
cmp
xchg
fnsave
xchg
sbb
das
dec
scas
cmp
das
test
mov
mov
sti
xchg
mov
jecxz
adc
jp
push
es
mov
and
aas
enter
cmpsb
dec
dec
cmp
fistl
imul
movsb
pop
push
sub
adc
sbb
pusha
sub
mov
lahf
test
adc
lret
data16
into
jmp
push
inc
xor
cli
push
dec
rclb
inc
add
add
jp
icebp
fstpt
mov
mov
fidivrl
dec
mov
sbb
ljmp
mov
push
sbb
test
cwtl
mov
insb
movl
cmpsb
jo
push
in
ss
push
cs
dec
jns
jns
hlt
push
and
rolb
push
repz
addb
enter
mov
and
pusha
imul
inc
xlat
shll
mov
dec
shrl
sbb
dec
push
stos
shl
xchg
out
lods
pop
adcl
mov
daa
fildll
shl
sbb
out
stos
mov
sub
iret
mov
insl
mov
inc
mov
andb
fildll
scas
sti
pop
aas
xor
mov
add
and
xor
pop
dec
sbb
mov
or
lds
loope
mov
stos
popa
cmpsb
mov
adc
mov
xchg
push
je
test
shrb
pop
lret
adc
xchg
aad
mov
out
mov
lret
sarl
inc
scas
mov
mul
neg
jge
sub
fsubrl
in
xchg
jns
sahf
scas
and
mov
inc
lret
ja
shll
xor
and
repz
inc
int3
sahf
mov
cltd
sub
push
xor
pop
or
popa
andb
lret
mov
xchg
fnstsw
mov
pop
movsl
jb
hlt
add
jno
outsb
shl
pop
fs
push
out
fdivl
or
lock
lock
fistl
push
add
es
call
and
xlat
adc
jns
ret
test
push
repz
push
dec
lcall
push
xchg
das
xlat
add
dec
jl
out
sub
xchg
insl
push
jge
adc
xchg
popa
iret
scas
inc
jecxz
fsubs
push
out
push
lock
sub
ficoml
je
mov
sbb
andl
mov
dec
mov
push
sbb
loope
push
jnp
mov
cltd
jl
pop
nop
test
out
outsl
popa
jb
cmpsl
mov
sub
pop
inc
popa
loopne
add
xor
adc
dec
loope
lcall
stos
cs
xchg
dec
jnp
inc
pop
cmp
lcall
loopne
outsl
jg
add
xchg
mov
jb
cs
pop
push
lods
mov
fiadds
and
dec
inc
call
je
jecxz
sbb
pop
xor
jp
inc
mov
fwait
adc
fs
aad
xchg
add
repnz
xchg
adc
sbb
inc
cmp
in
mov
inc
aam
pop
xchg
sub
cs
cmp
in
mov
inc
loop
pop
stos
jo
xchg
in
mov
push
jno
je
inc
aaa
out
mov
mov
in
imul
icebp
mov
fcompl
icebp
fs
daa
cli
jo
adc
jp
xchg
cmp
cmpsb
out
mov
vpsrlq
in
push
fbld
insb
sub
cmp
lods
ret
cmp
shlb
ds
sub
orl
fwait
lds
dec
cmp
inc
clc
sbb
mov
mov
or
inc
xchg
jmp
or
mov
rol
aam
cmpsl
clc
rolb
lods
and
push
jo
addr16
test
scas
jp
cmp
mov
sub
popa
lods
aad
cs
jmp
push
shrb
lock
enter
pop
xlat
mov
or
pusha
pop
dec
imul
sub
xor
mov
sbb
icebp
fisubrs
sbb
sub
mov
push
dec
shrl
mov
das
mov
xchg
sbbl
mov
lods
repnz
dec
jle
mov
sbb
mov
enter
mov
dec
xchg
adc
jb
das
lock
xor
fidivs
adc
cmp
mov
add
bnd
in
pop
push
mov
hlt
sbb
pop
out
jnp
mov
and
daa
xor
into
js
es
adc
xchg
mov
jnp
dec
xlat
jno
adc
inc
arpl
mov
insl
dec
jno
push
call
scas
movsl
jecxz
mov
lahf
xchg
bnd
xor
sub
push
imul
lea
or
mov
pop
xor
pop
dec
in
mov
ja
mov
popf
les
bound
push
sub
push
mov
inc
pop
or
sbb
ds
es
dec
fldt
add
out
xor
leave
andb
adc
mov
ss
shll
popf
jge
test
jl
insl
shrl
push
ss
and
jo
and
adc
ljmp
enter
add
fucomi
pop
pop
push
mov
sbb
jne
pop
fs
jb
aam
and
xchg
call
and
movsl
ficomps
ss
in
inc
fwait
sbb
fwait
dec
lds
jg
inc
inc
sbb
jmp
add
inc
sbb
shl
sbb
aaa
inc
dec
add
mov
das
int
xchg
inc
and
cmp
jmp
mov
sub
pop
mov
loop
push
mov
mov
jnp
popa
dec
fdivl
jecxz
movl
inc
or
stc
fnstsw
push
mov
cmp
lret
adc
stc
push
pop
popf
or
dec
inc
es
mov
push
dec
xor
hlt
mov
mov
clc
lds
mov
addr16
xchg
fldcw
shll
adc
std
test
dec
je
and
leave
in
insl
jbe
sahf
into
shl
jae
scas
adc
ja
mov
out
leave
mov
cmp
js
cmp
sub
xadd
push
lods
mov
cmp
dec
xchg
movsl
xor
mov
lds
lret
pop
sbb
imul
mov
dec
test
jb
xor
imul
mov
stos
loop
xchg
jecxz
imul
adc
xchg
jnp
adc
jb
jbe
sbb
or
jns
icebp
rcll
pop
aaa
mov
test
lds
and
cs
push
pop
cmpl
sbb
xor
fisubrl
test
jb
scas
mov
loope
sub
dec
aam
or
lcall
mov
fdivr
and
inc
mov
mov
mov
xchg
dec
push
sahf
lds
jnp
faddl
divl
add
testl
jp
xor
xor
mov
test
sbbb
sahf
in
outsl
add
sub
adc
test
cmp
jb
push
push
and
xor
push
aaa
mov
mov
loop
push
aas
iret
cmp
mov
pop
mov
and
mov
ljmp
arpl
enter
icebp
pop
loopne
clc
cltd
cli
insb
add
push
cwtl
mov
addb
or
out
repnz
mov
adc
cmpsb
int3
lahf
pop
jle
jle
mov
mov
sbbl
flds
cmpsb
int
repz
in
into
push
and
pushf
mov
addb
es
frstor
daa
xchg
ret
xor
pop
cmc
aad
cld
sub
mov
push
and
mov
cmc
out
pop
xchg
mov
or
shufps
xchg
inc
pop
mov
adc
lods
jl
push
push
pusha
shl
adc
arpl
cmpsl
repz
or
in
add
inc
jmp
pop
lock
bound
sbb
popa
cli
inc
jo
add
aaa
aas
dec
xor
xchg
mov
fs
test
lcall
ljmp
test
stos
out
xchg
pop
cmp
mov
ds
sbb
xor
lods
loop
int3
rcll
lods
xlat
adc
jae
pop
fldenv
jns
jl
sub
arpl
cmp
lods
imul
cmp
or
or
std
inc
inc
sbb
inc
pop
ja
repz
or
hlt
cmpsl
mov
dec
xor
arpl
aaa
mov
lods
inc
add
adc
iret
lods
subb
dec
aam
fisubs
lret
mov
dec
lea
sub
mov
inc
pushw
daa
sti
outsb
outsl
cmp
roll
shll
in
and
mov
mov
or
inc
stos
xor
mov
xor
push
xchg
mov
xorl
leave
mov
shlb
ficompl
jne
jl
and
test
mov
test
jb
int3
cmpsl
fimuls
out
cmp
fdivrs
scas
and
fwait
jecxz
in
stos
stc
pop
xchg
xor
pop
pop
iret
mov
loop
das
push
addb
adc
sbb
or
data16
insl
inc
enter
push
mov
jle
pop
add
mov
fldcw
repz
loope
outsb
jle
sub
and
mov
push
mov
repz
inc
mov
pop
mov
inc
test
icebp
sub
or
ja
push
xchg
movsl
and
lea
imul
cmp
outsl
mov
es
test
cli
add
sub
sar
or
fs
lahf
ljmp
xchg
cmpb
out
inc
rolb
adc
and
pusha
aas
ret
in
push
stc
into
mov
jns
jg
mov
cmpsl
ljmp
ds
aad
out
mov
test
inc
inc
fs
xchg
lret
jge
mov
clc
les
pop
sub
cs
jo
or
mov
sahf
push
outsl
cli
xchg
pop
repnz
out
lcall
aas
add
jl
lret
orl
or
dec
pop
pop
add
cmp
nop
lods
mov
inc
divl
loop,pt
sub
aam
sti
mov
or
pop
mov
mov
push
jmp
or
aaa
or
pop
sbb
rcrl
jl
inc
out
lret
lret
or
fldpi
pop
pop
fistl
fidivs
mov
ss
andb
aaa
jg
je
cli
nop
fstl
subl
pop
mov
ljmp
ja
mov
add
xor
jbe
push
comiss
imulb
push
pushl
adc
xchg
push
cwtl
adc
mov
add
icebp
cmp
adc
fnstsw
lods
push
and
sub
punpckhbw
and
or
push
xchg
push
shlb
loope
xor
push
das
test
sbb
loopne
add
loopne
or
push
addr16
cld
mov
cmp
and
adc
out
push
or
data16
mov
jecxz
jo
or
sbb
es
lret
mov
ja
mov
outsb
cli
add
lret
sarb
insl
pop
push
add
lods
cmp
hlt
cmp
inc
repz
mov
popf
js
cmp
arpl
enter
dec
movb
jb
test
cmp
enter
pop
lods
outsb
lds
mov
xchg
cmpsl
das
mov
add
loop
cltd
gs
cmpsl
test
sub
movsl
into
out
mov
mov
stos
in
inc
outsl
cmp
dec
int3
fisubs
leave
test
clc
lret
adc
pop
icebp
mov
mov
fistps
sbb
or
pop
mov
lods
xchg
and
aad
ret
push
pop
xchg
data16
xchg
sub
and
jecxz
mov
gs
xor
push
imul
cmp
jbe
popa
sub
fldl
jbe
cmp
cmp
push
notl
mov
fstl
push
mov
aam
xor
xchg
inc
std
into
push
test
jb
in
inc
idiv
imul
loopne
sbb
scas
dec
and
inc
push
xor
ja
mov
fs
jp
and
popa
imul
jmp
mov
addr16
iret
hlt
pop
add
rep
fisttpl
mov
fnstcw
adc
cmc
cmpsl
mov
dec
inc
push
leave
xchg
mov
adc
ret
outsl
adcb
nop
shlb
push
mov
int
push
lea
cmpsb
fsub
pop
cs
rcrb
inc
outsb
xor
stos
sbb
push
or
push
jbe
test
push
push
sahf
stos
inc
iret
and
adcl
mov
push
sbb
adc
jno
scas
lret
pop
les
sub
jmp
jno
mov
adc
jne
add
mov
and
mov
mov
stc
dec
imul
adc
sub
popl
dec
in
mov
inc
es
loop
imul
jl
std
out
ja
xchg
jbe
iret
ss
aad
cmp
ret
xor
into
aaa
int3
mov
or
aad
mov
inc
ficomps
loopne
sti
or
push
mov
shlb
fcomps
int3
setb
shll
xchg
mov
mov
stos
sbb
xor
add
cmp
cmp
add
dec
test
sub
lret
lahf
cmp
sbb
sub
test
test
rorb
or
lock
ss
fbld
outsb
ljmp
pusha
pop
dec
icebp
push
xor
loop
xchg
and
rclb
hlt
dec
pop
mov
add
scas
xchg
jmp
in
jmp
cmp
aad
push
xchg
pushf
or
loope
fldl
pop
inc
inc
fidivrs
push
xchg
sbbl
push
aad
movsb
ret
cwtl
mov
aad
aaa
push
int
addr16
adc
int3
insl
and
pusha
cmpsl
mov
sub
inc
or
jmp
add
cmp
inc
and
fucomp
lcall
mov
out
movsl
mov
dec
test
popf
scas
popa
jns
test
pop
ror
pop
insl
pop
adc
mov
js
jnp
lahf
into
in
repz
std
aas
lea
and
loope
fcoml
xor
aad
sbb
dec
je
and
xor
aas
jno
push
or
xlat
mov
push
popa
jns
stc
xor
xor
pop
sub
ja
iret
test
addl
push
lea
aaa
testb
adc
jp
jecxz
sbb
inc
xlat
out
popa
push
pop
xor
ss
cmpsl
mov
adc
data16
movsb
or
mov
xor
push
mov
out
ljmp
jecxz
lods
negl
xor
and
pop
push
mov
imul
dec
xchg
mov
movsl
outsb
jae
adc
jo
call
and
ds
pop
xchg
stc
mov
cmp
lret
mov
cmp
repnz
fstl
out
gs
jl
test
jo
mov
sbb
imul
sbb
dec
aaa
add
mov
fs
pop
aaa
enter
dec
mov
jne
add
xchg
jb
mov
cltd
jb
add
add
add
loop
in
pusha
sbb
xchg
js
notb
xor
mov
in
and
movsl
cmp
mov
and
outsl
mov
pop
daa
test
adc
mov
pop
dec
std
sub
cmp
scas
mov
push
aas
pushf
testb
dec
adc
addr16
rclb
rol
pop
adc
fs
and
or
lahf
rsqrtps
jae
add
inc
cmpsl
xor
test
sub
pop
out
cld
mov
pop
push
dec
popa
scas
jne
and
adc
dec
icebp
test
pushf
cmpsl
inc
test
xchg
xchg
dec
test
in
mov
stc
cwtl
mov
test
sti
jg
jnp
fstpl
sub
dec
sbb
das
in
xchg
xchg
mov
pop
xor
xor
sub
pusha
pop
jge
lcall
mov
dec
in
xor
or
sbb
add
fcmovne
mov
and
das
ja
mov
lods
js
jns
ret
adc
push
sbb
mov
or
push
inc
fisttpll
xchg
mov
jl
es
dec
adc
mov
mov
mulb
lock
lods
push
mov
fisttpl
cmp
jnp
lods
inc
cmp
add
xor
push
repz
repnz
push
mov
and
scas
movsl
push
lods
fucomp
adc
xor
pop
and
mov
lods
movsl
jo
add
inc
int3
pushf
sbb
das
pop
addb
lahf
lret
mov
lock
push
popf
xlat
pop
adc
fisubl
shlb
push
test
cwtl
dec
lahf
cwtl
jg
fsubrl
jae
popf
inc
jo
jl
and
mov
sub
ds
lret
addb
rcr
pushf
pop
xchg
inc
out
xchg
cltd
mov
xor
xchg
push
insl
cmp
test
push
xor
adc
aaa
jae
or
mov
or
adc
push
hlt
fsubr
subl
stc
inc
push
sbb
pop
cmpsl
jns
and
pop
add
xchg
arpl
mov
outsl
and
insl
and
and
or
ja
push
cmp
outsl
jno
xlat
inc
and
notb
cmp
sbb
repnz
pusha
pop
xor
and
xchg
push
ret
cltd
int3
dec
mov
daa
idiv
pop
pop
pop
loopne
jns
sub
dec
in
fsubrp
jne
cmp
mov
inc
sti
mov
daa
test
and
js
xchg
jne
sbb
ret
pop
inc
addr16
pop
mov
test
stos
sar
adc
sub
enter
adc
add
imul
jg
stos
add
imulb
pop
clc
sub
lahf
outsb
aaa
cli
push
test
push
sub
mov
lods
or
mov
jnp
mov
scas
testl
mov
xor
or
bound
inc
out
add
xor
imul
push
cmp
adc
scas
pop
xor
push
jns
or
loopne
cmp
sub
cltd
cli
stc
daa
jmp
repz
aaa
pop
mov
cmp
repnz
bound
jecxz
mov
rcrl
pop
or
pop
cmp
xchg
ds
test
bound
ret
mov
add
jne
or
mov
xchg
sbb
stos
test
sbb
jle
jle
mov
iret
sub
jb
in
mov
sahf
mov
clc
xor
mov
and
inc
roll
mov
popl
push
enter
lcall
pop
out
clc
pop
pop
or
xchg
pop
fimull
pusha
adc
subl
add
xchg
data16
cs
insl
das
xchg
outsb
adc
lcall
cmc
mov
xchg
pusha
jmp
pushf
test
sbb
mov
jecxz
xchg
fs
push
aas
in
daa
inc
push
leave
push
mov
in
adc
inc
outsb
xor
ljmp
out
loope
pop
insb
jle
jb
sub
cmpsl
ret
or
and
mov
sbbl
adc
adc
fdivl
push
test
mov
in
sti
mov
imul
inc
test
xchg
lea
pusha
imul
cltd
test
xchg
cli
xchg
sub
scas
inc
adc
pusha
mov
imul
iret
mov
std
inc
pop
cmp
int3
push
movsl
jnp
xchg
inc
jp
and
popf
xor
push
enter
push
pop
mov
test
pop
mov
fimull
in
dec
int
fstpt
arpl
and
dec
pop
xlat
ret
jmp
jo
xchg
cmp
test
push
xor
or
xor
ds
std
pop
bound
rcl
mov
or
mov
es
cmp
sbb
jnp
cmp
cmc
adcl
sbb
xchg
faddp
adc
pop
loop
sub
popf
mov
cltd
jge
jno
inc
xchg
or
xchg
in
or
mov
add
js
scas
outsb
push
and
movsl
loop
add
or
push
inc
ret
jo
in
cmpsb
ljmp
cmp
in
into
mov
or
dec
loope
out
add
cwtl
testl
cli
sbb
xorl
and
loopne
add
mull
repz
or
sub
mov
push
nop
clc
sbb
imul
rcrb
adcb
sub
cmpb
jge
add
loop
inc
hlt
shrl
insl
shrl
fimull
and
aam
sub
cmpsl
mov
fnsave
lds
push
movsb
adc
inc
or
fistps
and
xor
cld
push
cmp
xor
mov
scas
sbb
movsb
sub
sub
inc
and
xor
shll
les
nop
lcall
int
lods
into
jo
jg
xchg
dec
fildll
jg
pop
dec
mov
push
pop
lahf
cmp
shll
pop
mov
js
or
mov
mov
mov
inc
out
out
xorl
gs
fidivl
daa
mov
ljmp
jp
mov
out
out
aad
pusha
ds
imul
mov
adc
jnp
mov
pop
stc
pop
xchg
loop
hlt
adc
xchg
sub
jo
sbb
inc
or
mov
mov
and
cmc
push
dec
mov
cli
popf
fildll
orb
cmpb
adc
rcl
mov
cmpsl
pop
addr16
cmp
jmp
jno
dec
dec
dec
rclb
push
shlb
adc
cmpsb
push
or
idivb
icebp
jae
sbb
je
or
iret
movl
fabs
and
loop
cmp
jmp
pop
arpl
clc
pop
mov
jle
pop
cmpsb
mov
stc
fsubs
mov
jge
scas
adcb
aad
or
push
jb
add
dec
into
and
repnz
push
je
out
cmp
sbb
cmpsl
xchg
ret
movsl
les
mov
ja
mov
out
lss
cli
lock
loope
stos
call
int
dec
jns
loope
jge
call
movl
ljmp
and
jo
subb
es
shlb
inc
test
lret
scas
cwtl
push
sbb
xchg
xor
jp
jae
insl
mov
dec
push
cmp
mov
arpl
push
lods
stos
add
sub
dec
sti
and
jno
ja
jge
fldl
jl
arpl
clc
adc
push
insl
cltd
loopne
into
ret
adc
inc
sub
lret
test
mov
jl
and
add
fmull
xchg
mov
mov
and
movsb
mov
in
or
movhps
jnp
outsb
repnz
jo
pushf
push
test
pop
leave
lahf
push
add
xor
pushf
sbb
and
cwtl
in
orl
or
mov
sbb
je
cmc
lock
daa
inc
leave
pop
sub
sbb
inc
add
enter
adc
rorl
add
fsubrl
ds
adc
cltd
jl
lret
pop
push
dec
lret
out
enter
lods
lods
ljmp
lret
pop
push
hlt
dec
mov
sbb
shr
dec
jnp
ja
mov
inc
gs
push
out
cmp
push
adc
xchg
cmp
std
dec
push
jbe
or
jns
rorl
and
push
mov
add
dec
lea
aas
loop
xor
and
ret
dec
mov
pop
cli
xchg
jle
mov
jmp
into
insb
xchg
xor
xchg
sarb
jnp
xchg
jb
imul
rolb
test
xor
sbbl
xor
or
adc
adcl
pop
mul
les
rclb
xor
imul
iret
xchg
sub
test
rclb
cwtl
cltd
xchg
ret
aaa
add
ror
les
dec
aad
dec
fcom
inc
fiadds
xchg
out
daa
mov
outsl
push
bound
cltd
addr16
ss
int
xor
test
mov
popa
imul
or
rorb
ficoml
iret
stos
out
ficomps
hlt
stos
pop
arpl
and
lock
jl
jl
push
mov
pop
aad
leave
mov
js
divl
enter
jge
add
cwtl
xlat
inc
fnsave
daa
shlb
ja
scas
add
mov
and
popf
test
pop
imul
movsl
jl
fwait
inc
out
jns
jno
ds
mov
in
jns
outsl
cld
rclb
call
fistps
or
sbb
mov
insb
aas
xchg
dec
mov
pop
orl
xchg
in
sbb
sub
xor
bound
ret
cmp
pop
lods
das
pusha
push
pop
mov
sbb
or
inc
das
mov
push
xor
dec
inc
jb
add
fsubrl
fistl
pop
xchg
add
ja
cmp
jnp
pushf
push
int3
je
daa
ja
mov
loopne
fwait
lods
and
and
outsb
or
push
addr16
stos
fstps
xchg
stos
push
jb
add
imul
inc
movsb
and
ss
sti
lret
das
mov
movsl
fnstsw
and
mov
mov
lds
cs
enter
stc
lods
push
pop
adc
mov
push
adc
push
pop
aad
mov
xlat
push
xorb
aam
outsb
es
xor
dec
movsl
mov
int3
sbb
nop
outsb
add
int3
fcmovbe
mov
sub
adc
and
fdivrs
scas
push
pop
cmp
pop
inc
out
jmp
or
arpl
movsb
das
std
daa
jmp
and
mull
icebp
icebp
cmp
sti
and
js
xchg
sbb
inc
sub
in
xchg
lahf
lock
push
sub
xlat
push
adc
jecxz
xchg
flds
fidivrs
addr16
push
lahf
push
das
or
js
inc
adcb
inc
xor
clc
adc
jg
scas
in
inc
jge
icebp
lods
dec
mov
bsr
mov
decb
incl
and
adc
dec
std
cmpsb
fldcw
xchg
mov
jmp
aas
jo
pop
hlt
loop
jo
insb
inc
xchg
clc
sub
test
push
mov
lcall
mov
iret
pop
adc
out
sbb
bound
gs
mov
mov
and
test
scas
lock
xchg
aam
insb
pop
push
insl
or
mov
aaa
sub
outsb
in
lret
addr16
mov
mov
dec
ds
cmp
fistl
mov
popa
sub
subb
pop
adc
inc
je
popf
stos
clc
xor
xorl
mov
inc
jg
sub
cmp
jecxz
xlat
jnp
mov
mov
mov
cmp
subl
jmp
in
pop
mov
std
sub
test
movsl
jecxz
aaa
hlt
dec
xor
in
sub
fs
ja
scas
cmpsl
jg
inc
loope
and
aam
movsb
or
push
les
pushf
fildl
ret
sub
test
test
mov
push
add
or
fisubs
push
repz
jg
jp
or
push
mov
xchg
push
les
aas
icebp
mov
das
rcrb
add
imul
sahf
rorb
loope
ss
bound
adc
xchg
add
mov
inc
mov
inc
lods
mov
mov
dec
push
pop
push
flds
popa
ja
es
aaa
sbbl
aad
or
stos
mov
mov
and
out
dec
ret
push
push
in
xchg
repnz
push
out
mov
pop
push
stos
mov
cmpsl
cmp
in
insl
cmpsl
out
jns
rcrl
jg
loop
test
cmp
je
mov
xchg
sarl
jg
cmp
fstl
dec
push
xor
aas
das
mov
pop
pop
and
cmp
cli
dec
and
cld
mov
dec
xor
add
add
push
sub
xor
add
dec
pop
outsb
ds
lods
das
jb
mov
js
jae
xchg
pop
pusha
mov
lea
sbb
jmp
fucom
cmc
lea
lods
jg
gs
aam
pop
pusha
xchg
mov
scas
and
pushf
les
cli
aam
push
and
push
adc
dec
xchg
jg
adc
iret
jo
mov
xor
pop
xor
and
ds
inc
testl
lds
jmp
iret
shlb
mov
mov
dec
mov
sarb
insl
xchg
mov
dec
mov
movsb
lahf
insb
jl
and
shrb
add
jg
inc
jo
sahf
lret
push
orb
mov
sbb
test
mov
fwait
xor
sbb
and
lea
flds
test
mov
jns
xor
cmp
or
fadds
popa
sub
xor
outsl
cmp
pop
and
fstpl
into
dec
insl
imul
stos
and
xlat
movsl
icebp
and
xchg
fildl
ret
adc
pop
mov
adc
lods
dec
or
dec
cmpsb
loopne
add
pop
sti
push
pop
mov
xor
rcrl
and
push
fwait
addr16
lds
sub
test
sub
mov
inc
sub
gs
addl
je
fidivl
cli
dec
mov
pushf
repz
icebp
xorl
sub
popa
mov
or
stos
or
push
ja
lahf
aaa
xor
in
mov
xchg
adc
fdivr
mov
dec
sub
data16
fcoml
adc
in
adc
stc
test
test
mov
jge
xchg
xor
adc
hlt
lods
xor
sbb
shl
jle
or
in
sbb
push
push
add
mov
out
ja
hlt
ja
jl
jmp
cmpsb
ror
add
jns
xor
popf
and
sbb
mov
jne
jge
outsl
sbb
stos
push
adc
mov
dec
clc
push
les
mov
cmp
mov
xchg
mov
and
mov
adc
imul
pop
inc
fidivrl
adc
mov
lods
fdivr
inc
xor
arpl
fildl
ffree
arpl
mov
jns
sbb
insb
popf
fadds
inc
mov
mov
mov
mov
pop
inc
movsl
into
inc
cmc
and
push
xlat
inc
shr
scas
int
loope
push
jmp
call
inc
dec
gs
pusha
sbb
rorl
mov
pop
mov
sbb
cmp
mov
lods
xchg
mov
xchg
cmpsl
lahf
loop
not
out
out
xor
rcll
lock
fstpt
lea
jno
inc
jmp
cli
xor
inc
mov
fistl
popf
sbb
jl
push
push
mov
add
pop
int
mov
jmp
ljmp
and
sbb
xor
lods
out
sub
xor
dec
cmp
fistpl
xchg
push
rol
repnz
dec
cmp
inc
ss
xor
push
fstpt
xchg
bnd
ss
fldt
jle
cmpsl
push
mov
into
je
cmpsl
aad
add
sub
push
jnp
mov
xor
test
or
and
addr16
add
stc
push
test
cwtl
fidivs
popa
mov
fsubrl
aas
xchg
push
adcl
les
pop
pop
mov
adcb
xchg
dec
hlt
loopne
cmp
cwtl
outsl
and
pop
in
stos
lods
pop
call
add
and
cmpsl
leave
add
dec
cmp
fnsave
fwait
inc
jnp
popa
icebp
hlt
push
xchg
mulb
jle
and
cmpsb
in
repz
mov
mov
pop
cmp
cli
push
mov
icebp
pop
dec
rcrl
xor
inc
cld
fmul
or
jl
sub
pusha
lea
xchg
in
aaa
adc
lret
jnp
and
or
scas
add
or
into
fldcw
cli
sub
leave
sbb
pop
jg
test
xlat
sub
mov
stc
fdivl
push
mov
loop
sub
fidivs
pusha
imull
jge
mov
sbb
or
sbbl
test
insl
jbe
mov
imul
repnz
jmp
sub
sbb
cmp
lret
or
cmp
out
or
lods
inc
adc
lret
insl
insb
hlt
and
mov
mov
or
scas
xor
es
pop
or
push
jns
inc
sbb
sub
inc
adc
ret
inc
inc
inc
cltd
in
call
mov
addr16
loopne
fs
outsb
mov
adc
pop
mov
and
dec
mov
scas
or
mov
das
dec
add
cmp
add
cmpl
ret
sub
inc
or
cmpsb
movsb
mov
stos
fldt
bound
mov
push
ret
jp
xchg
and
sahf
loop
filds
xor
cmp
ret
jae
repz
movsl
xor
lahf
inc
imull
adc
sub
dec
mov
insb
push
sarb
mov
inc
jo
les
inc
or
jne
je
int3
inc
aaa
xchg
or
push
pop
push
ss
push
rcl
bound
or
or
imul
jae
mov
aad
lods
cmp
sub
cld
dec
or
or
nop
ret
jmp
js
loop
jnp
call
pop
inc
push
cmp
sbb
loope
rol
iret
hlt
add
pushf
scas
jno
mov
aam
push
jle
adc
mov
fstl
pushf
mov
pushf
out
xchg
lret
imul
out
std
bound
out
insl
jns
xchg
add
aaa
clc
inc
cmp
or
push
cld
and
out
mov
jmp
fadd
test
movsl
fs
jnp
push
pop
mov
popa
insb
mov
popf
push
pop
or
dec
and
push
fsts
xchg
test
lods
mov
es
pop
popf
fadds
pop
add
rcrb
icebp
xchg
loopne
fs
dec
or
or
jmp
push
or
les
aas
dec
daa
xor
xor
clc
cmpsl
or
cwtl
jmp
mov
in
sub
mov
and
adc
jne
sub
imul
in
adc
push
mov
dec
sub
mov
xchg
stos
in
arpl
int3
or
addr16
ret
mov
or
fwait
insb
arpl
inc
lret
mov
mov
test
repz
inc
cmp
stc
adc
push
mov
fildll
iret
cli
cmp
add
movsl
mov
lods
cs
add
or
imul
sbb
scas
mov
lea
je
dec
and
jno
adc
mov
stos
jno
push
rclb
jg
out
sub
clc
xlat
loop
imul
pushf
fadds
cwtl
stc
dec
jo
test
inc
out
cmove
int3
jbe
dec
loope
inc
pop
lds
pushf
pop
fucomip
repz
out
mov
sub
pop
out
pushl
dec
call
test
push
mov
ret
mov
das
jno
push
sahf
xor
push
aaa
sbb
out
mov
mov
jmp
loop
sbb
lret
pop
dec
mov
aam
mov
push
push
pop
push
push
repz
mov
mov
push
fucomi
fwait
xchg
cwtl
cltd
iret
dec
jbe
int3
imul
add
inc
cmp
in
mov
cmpsb
movsl
jle
pop
fdivrl
jmp
imul
das
xor
xchg
cmp
test
fcoms
clc
jmp
inc
inc
push
or
sub
cmp
aaa
data16
push
rolb
test
outsb
sub
sti
push
pop
inc
lret
xor
testb
xchg
repz
es
sub
mov
dec
pop
rcrb
xor
inc
test
popa
jno
dec
in
jp
mov
mov
dec
rcll
jmp
dec
incl
imul
inc
cmp
mov
mov
jne
adc
nop
push
mov
jecxz
in
pop
mov
les
jge
scas
subb
sbb
sti
je
out
mov
xrelease
in
and
mov
sbb
mov
cmpsb
out
sub
push
dec
test
sub
scas
in
mov
out
stos
jp
inc
lods
test
add
roll
outsl
jb
cmp
aad
jno
mov
sbb
out
mov
or
sub
mov
bound
xlat
jg
and
jnp
mov
daa
dec
andl
leave
loopne
mov
mov
hlt
and
inc
pop
xchg
popa
xchg
stc
jg
repz
jle
sahf
adc
push
imul
adc
xor
into
andl
dec
sarl
mov
and
pop
mov
sbbb
ret
sub
xor
and
xchg
enter
jg
movsl
cmp
sub
call
dec
mov
fcmovnbe
test
mov
jge
pop
mov
in
pop
mov
push
je
sti
sub
mov
inc
aad
inc
int3
mov
and
push
arpl
cld
dec
bound
xor
sub
dec
ljmp
mov
mov
cmp
cmp
jge
and
inc
mov
push
or
in
insl
dec
loopne
xchg
iret
not
sub
lahf
loope
movsl
push
and
out
lds
xchg
or
inc
pop
mov
mov
loop
add
data16
sarb
adc
lahf
shl
lret
mov
jecxz
ror
inc
or
or
pop
sti
jg
cltd
xchg
divl
dec
cli
iret
sbbl
aaa
push
sub
hlt
ljmp
pusha
or
in
push
mov
or
jno
stos
mov
lret
aam
rorb
das
roll
pop
das
pushf
dec
mov
jp
mov
sub
xchg
adc
js
mov
mov
or
leave
lcall
fs
or
inc
ficoms
pop
pop
lods
test
in
add
inc
pop
push
cmp
imul
fistpl
out
sub
dec
xchg
pop
lock
je
mov
xchg
xor
cs
xchg
sub
inc
mov
lock
xchg
dec
add
pushf
jg
cmp
fs
aas
out
negb
fldl
call
scas
leave
ficompl
jne
out
jecxz
xor
stos
add
mov
mov
xor
rorl
sbb
gs
xchg
enter
loope
add
incl
in
shrb
sbb
push
dec
sub
jmp
stc
fists
inc
sarb
ret
loope
mov
aam
repz
xor
stos
add
push
push
int
das
cs
jo
inc
inc
sar
icebp
mov
inc
mov
mov
in
iret
adc
fnstenv
int
fidivl
sub
inc
jle
jo
cld
sub
add
cmp
mov
dec
adc
sub
add
imul
pop
addr16
fisttpl
xor
test
push
xor
popa
shlb
icebp
cwtl
movsb
mov
cmp
test
mov
out
push
psllw
push
movsl
lods
popf
sbb
cmc
mov
mov
hlt
pop
imul
jecxz
mov
insb
jl
jle
scas
inc
stos
jmp
call
loope
mov
pop
push
pop
cs
in
sbb
dec
int
les
jb
lds
xor
inc
cltd
in
push
jg
dec
jmp
inc
test
test
repnz
in
fisttps
jae
loop
sub
repnz
jecxz
inc
scas
data16
ret
pop
inc
inc
jo
int3
pop
hlt
adc
lret
orb
rorl
cmc
gs
and
push
rcrl
add
xor
push
xor
mov
pop
push
inc
sbb
sub
cli
mov
pop
gs
int3
call
test
test
sbb
cs
push
and
mov
bound
and
cmp
mov
xor
xlat
sbbb
stos
sbb
lret
movb
add
lahf
test
cmp
aaa
mov
ja
jae
pop
fmull
push
nop
jo
outsb
arpl
sbb
scas
pop
ds
js
pushf
mov
dec
pop
jmp
sbb
ret
inc
rcl
inc
pushf
ficomps
imul
pop
sbb
mov
out
mov
and
mov
lods
push
lds
or
nop
jp
imul
mov
and
push
ljmp
mov
or
xor
mov
xor
add
mov
sub
je
pop
xchg
adc
je
fmuls
movl
hlt
mov
insb
rorb
dec
sub
push
repz
loope
cmp
imul
gs
rcrl
push
clc
add
sub
jp
mov
ds
fcompl
dec
sub
cltd
adc
daa
lret
xchg
push
push
es
aas
mov
add
adc
aad
movsb
mov
mov
jae
xor
jnp
gs
icebp
xor
jecxz
dec
xor
add
lret
adc
jo
jae
idiv
push
fdivrl
jmp
or
mov
sub
add
xlat
shl
fnsave
lcall
mov
add
jl
loopne
imul
xchg
add
mov
lahf
imul
shl
cwtl
dec
into
iret
xchg
sbb
mov
sbb
mov
jne
mov
pop
push
and
movsb
sbb
test
daa
mov
fsubrl
stc
sahf
dec
bound
or
push
xchg
imul
dec
scas
add
loope
and
mov
daa
xchg
or
pushf
test
daa
fld
jp
cmpb
jp
aad
push
iret
clc
push
daa
sub
leave
cmp
je
cld
pusha
jge
lock
loope
cld
frstpm(287
ret
cmp
mov
adc
jl
dec
and
std
sbb
rcrl
inc
add
cmc
add
mov
and
mov
and
in
scas
das
clc
jecxz
sahf
or
jl
sbb
add
xor
sub
mov
femms
mov
sbb
ret
xchg
loope
or
xchg
test
shll
daa
pop
cld
outsl
push
add
adc
movsl
cli
adc
add
push
adc
inc
fcmove
enter
mull
shl
dec
push
dec
inc
and
mov
pop
xchg
or
lcall
dec
mov
pop
negl
sub
pop
pop
mov
sub
in
sbb
xchg
mov
push
rolb
pop
add
dec
pop
push
jns
lret
and
xor
scas
mov
lea
pop
inc
shrl
mov
fsubrp
lahf
mov
mov
sbb
test
nop
imul
idiv
dec
jno
inc
mov
push
outsb
push
jb
std
add
outsl
shll
inc
cmp
in
jmp
push
push
loope
sbbb
lds
sbb
rcrl
enter
mov
popa
or
xchg
pusha
xlat
lock
jo
pop
mov
xor
mov
cld
push
lret
lea
inc
mov
sbb
or
fistps
pop
pop
dec
les
adc
xor
mov
int
int3
loope
inc
pop
test
out
adc
or
stos
mov
pop
xor
sub
and
dec
add
adc
sbb
outsl
cmp
notl
push
cmovns
jo
popa
in
jl
jae
sbb
sahf
and
out
xchg
jns
imul
ss
mov
cs
xlat
and
rorb
cmpsb
mov
divb
cmp
pop
mov
dec
lea
out
push
ja
jbe
adc
mov
sbb
sbb
fisubs
cwtl
test
push
or
dec
mov
pop
and
push
rolb
arpl
add
mov
scas
leave
aas
add
int
stos
popf
sub
xchg
jmp
mov
sub
or
sub
aad
das
int
or
push
jg
stos
mov
shll
hlt
ja
test
xchg
sarb
testl
mov
loope
pop
mov
cli
adc
or
push
mov
stc
add
push
adc
test
dec
xor
xor
inc
mov
inc
pop
mov
xchg
out
sbb
insb
mov
ficomps
jmp
movsb
push
aad
pop
mov
add
mov
and
jecxz
rcll
pusha
cmc
nop
or
in
fistl
pop
insl
ret
xchg
pusha
pushf
inc
iret
or
push
fldl
lahf
mov
aaa
dec
std
xor
movsb
pop
cmp
xor
out
add
loope
lahf
mov
sti
pusha
cmp
pop
jns
imul
jl
aad
js
xchg
sub
call
inc
inc
insb
int
sbb
lcall
jb
ja
stos
cmp
push
xchg
lock
mov
fwait
cmp
push
push
fmull
add
in
pusha
mov
add
ljmp
pop
xor
std
lds
mov
pop
mov
xchg
mov
inc
inc
mov
mov
inc
sahf
mov
xor
mov
jno
lods
mov
loopne
es
in
mov
jbe
jo
loop
mov
clc
fnstsw
movsl
movb
sub
xchg
test
pop
lea
sub
ss
add
mov
or
icebp
add
mov
adc
push
mov
pop
xchg
sub
pop
in
les
cmc
mov
andl
hlt
push
inc
cmp
mov
in
dec
rcrl
mov
cmpsl
inc
dec
push
cmp
call
mov
and
inc
sub
mov
mov
inc
adc
inc
push
xchg
aad
loope
loop
mov
push
aam
sbb
xchg
xorb
lea
ss
hlt
mov
dec
push
popf
pushf
pop
pop
sub
je
aaa
jmp
or
xchg
fpatan
cmpsb
inc
out
cmc
dec
arpl
leave
sahf
cli
orl
ficomps
shr
inc
rolb
mov
rcl
and
inc
jne
jns
dec
and
xchg
push
arpl
cmc
xor
and
aas
sbb
dec
fs
mov
les
jo
cli
push
jle
repz
push
sub
xchg
xor
mov
dec
inc
hlt
orl
pop
ja
test
add
dec
mov
sahf
ljmp
mov
test
in
push
rcr
fcmovnu
push
arpl
jecxz
fisubrl
lahf
rolb
fisubrs
sub
xchg
add
xchg
popf
sbb
sbbl
push
scas
xor
stc
adc
mov
fdiv
call
jecxz
pushf
int3
push
cmpsl
test
xchg
sbb
sbb
dec
pop
mov
movsl
adc
inc
adc
lcall
fistl
sub
ret
std
adc
roll
push
xor
iret
adc
cmp
mov
xlat
out
aam
ss
sbb
jne
dec
xchg
xor
popf
push
xchg
cmp
mov
in
inc
mov
xchg
xchg
add
xchg
mov
xlat
jle
or
test
in
insl
cmp
xchg
xor
mov
test
jo
xor
jbe
jle
sub
add
push
inc
mov
out
push
clc
cs
lcall
mov
daa
shlb
test
repz
mov
lcall
inc
fcoms
adc
pop
ret
sub
fistpll
push
popf
dec
jno
orw
xchg
jns
or
sub
adc
or
scas
bound
push
xchg
xlat
push
dec
out
dec
ret
out
sbb
mov
loope
mov
lea
cmp
mov
hlt
xchg
inc
xor
mov
aaa
push
lock
clc
in
mov
mov
cmp
and
push
push
hlt
cmp
fisubl
adc
shll
mov
xor
out
jne
jbe
test
adc
in
fs
sbb
imul
jne
push
jp
inc
pop
fwait
or
add
out
xchg
in
fldlg2
push
add
out
je
cmp
xchg
and
cmp
outsl
out
andb
jle
xor
popf
mov
mov
push
mov
sbb
orb
and
imul
icebp
jge
mov
sbb
cltd
push
pusha
icebp
mov
or
cmp
mov
sub
push
movsb
add
inc
or
scas
mov
idivl
sbb
aad
call
lods
ficomps
sbb
mov
dec
dec
std
dec
mov
mov
cld
loopne
xchg
gs
xchg
repnz
push
jp
mov
dec
mov
out
call
test
mov
ljmp
mov
fcom
push
pop
mov
jecxz
shl
cmc
lods
movsl
jo
stc
pop
sub
xchg
add
push
adcl
test
enter
pop
pop
inc
adc
mov
into
inc
inc
ret
dec
call
scas
jp
psraw
repz
sub
repnz
lahf
into
rcrb
sub
andb
arpl
ss
std
xchg
mov
repz
mov
out
jp
lret
or
cmpsb
popa
sub
stc
es
xor
inc
cmp
cmp
pop
aad
pusha
and
jle
and
sbb
sbb
mov
enter
jmp
add
add
int
lahf
pop
inc
enter
rclb
jg
movsl
pop
mov
inc
or
cmpb
push
push
adc
loopne
out
push
adc
es
test
stos
fldt
xchg
leave
loopne
jb
shr
mov
roll
push
das
stos
push
or
cmc
mov
sar
jbe
das
add
enter
jecxz
imul
mov
sbb
test
jge
inc
imul
imul
xchg
out
and
add
aas
ret
push
jo
imul
icebp
data16
fistps
call
and
imul
insb
ret
test
or
jmp
xchg
push
popf
jmp
cmp
dec
inc
lahf
int
mov
inc
mov
sbb
shlb
cltd
mov
pop
cmc
mov
adc
xchg
outsl
test
mov
ljmp
mov
rcrb
or
or
loopne
xchg
mov
sarb
add
mov
sbb
sub
ja
ljmp
dec
and
dec
loope
jecxz
push
inc
add
push
adc
mov
mov
push
loope
insl
jb
xor
or
test
adc
rorb
or
mov
fs
jnp
jo
and
xorl
add
data16
jbe
dec
es
shlb
mov
rcrb
jae
jns
rcrl
bound
jmp
and
add
sub
push
rorb
rolb
in
mov
repnz
cmpb
xor
lcall
mov
movsb
or
pop
push
xchg
cmpsb
mov
and
cmpsl
push
mov
jge
sbb
aad
jl
jle
xor
mov
clc
dec
cmp
push
adc
out
pop
xor
ret
push
inc
jno
or
scas
insl
push
pop
push
mov
loope
iret
repnz
out
lods
lret
loop
xchg
cs
jb
jns
add
aad
mov
sub
xor
push
out
inc
fmull
cmpsb
imul
jae
pushf
es
hlt
ret
inc
aad
in
dec
jecxz
mov
push
test
xchg
dec
int3
fwait
push
pop
int
rclb
mov
fs
or
push
push
movsl
popa
fidivrs
loope
lods
in
xor
xchg
dec
or
ret
nop
pop
pop
into
sbb
mov
add
mulps
hlt
xor
mov
lea
arpl
dec
pop
loopne
out
repz
dec
mov
jmp
gs
ljmp
push
inc
xchg
jl
outsb
inc
mov
loop
pop
in
jp
and
movsb
test
push
ret
push
sub
inc
pop
gs
dec
cwtl
xorb
stc
jmp
fdivr
inc
icebp
jecxz
jae
mov
cmc
je
call
aas
cmp
xchg
incl
data16
or
fisubs
cmp
push
cwtl
or
pop
pushf
dec
jle
daa
xor
sar
add
sbb
add
pop
mov
sbb
adc
inc
jno
insl
hlt
mov
sbb
pusha
pop
sub
cli
sahf
mov
scas
les
add
push
inc
pop
mov
add
repz
mov
stos
add
pop
aad
mov
jle
dec
push
shlb
lahf
mov
jl
mov
or
xchg
int
sbb
int
mov
mov
or
sbb
cwtl
andb
mov
push
rcl
inc
mov
mov
testb
in
sub
mov
push
jg
and
outsb
int3
inc
hlt
add
lret
leave
adc
fcoml
push
sub
in
sbbl
dec
mov
sbb
ss
andb
sub
lahf
hlt
vpandn
lods
dec
cmp
repnz
cmp
repz
fistpll
adc
int
imul
push
adc
and
pop
and
push
inc
in
outsl
addr16
in
shr
ds
mov
mov
push
push
repnz
out
les
inc
fdivs
fwait
gs
or
xor
fcoms
mov
xchg
sbb
lcall
movl
jns
repz
imulb
cmpsb
dec
dec
out
fisubrl
cmp
cmpsl
lods
aaa
xorl
push
push
scas
cmp
in
jno
fdivl
push
push
adc
jle
and
shll
dec
mov
pusha
cmc
inc
cmp
jge
nop
push
ja
xchg
shl
repz
xlat
out
mov
xchg
mov
push
mov
and
lods
push
inc
mov
out
addr16
into
or
jp
dec
inc
cmp
icebp
adc
adc
mov
adc
mov
sbb
aad
xchg
adc
and
mov
rcrb
imul
int3
pop
pop
or
and
cmp
sarb
xchg
sbb
das
data16
mov
xchg
popa
in
mov
push
pushf
std
and
shll
aad
cmc
mov
fistps
lcall
ret
imul
pop
jmp
bound
mov
jle
pop
add
in
mov
lock
or
xchg
xchg
add
sbb
add
cmpsb
pop
sub
out
movsb
repz
mov
add
pop
xchg
dec
jecxz
ret
jecxz
sbbl
ja
loop
cld
fnstsw
add
dec
test
push
sub
aaa
xor
dec
cmpsl
ss
test
jno
ror
jp
pop
jns
sbb
ret
jl
in
adc
icebp
rcll
lods
movsb
je
jbe
mov
iret
shrb
rcr
sub
lret
addb
cs
sti
mov
xchg
pop
outsl
sarl
cmp
popa
popf
outsb
das
es
rclb
repnz
xor
add
fimull
imul
cmp
push
popa
insl
insb
dec
mov
pushl
pop
stos
push
shl
push
sbb
rolb
dec
xor
mov
mov
lret
add
dec
mov
cmp
int
mov
jge
jns
xchg
aad
mov
xchg
or
add
leave
xchg
xchg
xor
add
jp
adc
test
jecxz
mov
or
mov
adc
dec
inc
repz
imul
stos
movsl
rorl
push
mov
lods
stos
mov
inc
or
inc
jg
and
and
sub
xchg
sub
mov
cltd
mov
sub
push
adc
xor
fstl
cmpl
loopne,pt
shrl
adc
push
mov
mov
push
xor
repnz
xchg
xor
fs
xor
inc
shlb
pop
leave
add
cmc
jl
adc
les
bound
mov
mov
es
dec
jecxz
test
xchg
ljmp
xor
xchg
sahf
nop
test
jo
cmp
or
outsb
cmp
dec
int
jne
nop
jle
dec
or
dec
out
mov
mov
push
pusha
aad
gs
mov
mov
cltd
dec
push
stc
inc
xchg
inc
in
ret
jo
gs
push
and
jle
shll
dec
xor
inc
pop
test
movsb
cli
mov
lret
fsubl
push
xchg
add
cwtl
dec
sub
fiaddl
mov
cwtl
call
or
mov
mov
in
shlb
dec
inc
lcall
and
lahf
lret
imul
lods
mov
jge
mov
pop
sti
and
pop
dec
out
mov
mov
xlat
loopne
sti
sbb
fbstp
adc
jecxz
adc
xchg
mov
pop
mov
stos
inc
cmp
ja
jmp
lret
pop
rcr
ret
fcmovu
xchg
ljmp
sub
sbb
sahf
xchg
dec
mov
fs
push
push
int3
push
scas
jne
lret
add
lods
mov
int
xchg
xor
insb
aas
mov
cmc
stc
and
mov
push
sti
cli
int3
jno
jne
fisubs
icebp
or
pop
scas
mov
cmp
orl
out
rcll
sub
cmc
pop
xchg
mov
lea
pop
sub
call
jae
mov
into
scas
pusha
lds
cmp
shll
adc
shrb
repz
je
xchg
lcall
pushf
test
int3
mov
dec
push
dec
pop
lods
filds
and
dec
cmp
mov
sub
xchg
inc
add
andl
mov
aaa
jb
sbb
pop
jo
sbb
aas
adc
scas
and
inc
pop
inc
pop
xchg
gs
scas
xchg
push
enter
sub
jno
and
mov
out
ror
add
or
dec
loop
ljmp
mov
push
jg
nop
sbb
cmp
std
ret
in
push
jae
testb
mov
test
dec
fcomps
aad
loopne
inc
in
subb
icebp
icebp
push
pop
or
sbb
and
in
inc
jne
in
lea
xor
lret
es
xchg
imul
xchg
push
pushf
fmull
lahf
in
popa
push
push
dec
mov
xchg
stos
sub
ljmp
iret
in
and
in
frstor
pop
ret
and
xchg
mov
cmpsb
mov
pop
ret
inc
fwait
mov
pop
and
inc
loopne
sub
cmpsl
aad
inc
cmp
movsl
mov
mov
sahf
rcrb
sbb
aad
popf
pop
xor
fwait
xchg
popf
mov
into
vmovd
add
int
ja
arpl
xor
sub
adc
push
jbe
jmp
adc
pop
fisubs
mov
arpl
push
popa
call
inc
enter
jecxz
pop
xchg
dec
rcrb
cmp
or
adcl
repz
imul
or
aas
stos
int3
mov
pop
clc
add
and
sub
mov
pop
int3
fndisi(8087
fdivrl
mov
mov
push
shll
aam
sbb
sbb
jmp
out
and
ja
int
and
ljmp
subl
mov
cmp
or
cli
fcmove
shr
jo
ja
fwait
dec
test
mov
jmp
cmp
lods
xor
and
cwtl
js
or
sbb
add
push
add
add
or
and
and
fsubrs
pop
stos
jne
ds
data16
mov
push
fimuls
add
icebp
inc
add
sub
mov
scas
inc
cmp
pop
pop
xor
and
mov
fcomp
push
dec
sub
faddl
loop
and
sahf
cli
sbb
push
testb
ret
int
sarb
fisubrl
cmpsl
jae
iret
dec
dec
push
fdivrs
cmc
xchg
cmp
adc
inc
divb
dec
mov
cmp
or
std
sub
or
insl
pop
add
dec
xor
dec
in
add
push
gs
adc
jb
mov
shll
xchg
adc
movb
in
notb
outsb
es
mov
mov
adc
pop
orl
imul
dec
xor
test
add
fdivrs
inc
push
inc
jecxz
sub
rcl
mov
cwtl
ret
nop
sub
jecxz
push
outsl
mov
mov
inc
fcmovnbe
mov
sbb
int
ja
loopne
nop
aaa
sbb
fidivl
mov
pushfw
int3
lahf
mov
or
mov
push
add
fimull
pop
cmpb
cmp
gs
push
xor
iret
dec
loopne
mov
xchg
adc
mov
scas
test
mov
or
loop
rorb
and
dec
out
adc
xor
mov
sbb
dec
or
cmc
inc
imul
mov
and
mov
std
pop
test
cs
cmp
cwtl
adc
and
adc
xorb
andl
sub
mov
pop
and
stc
aaa
xchg
xor
and
lods
in
jl
mov
jnp
mov
dec
adc
and
mov
mov
enter
mov
ss
fistpll
sti
or
xor
out
mov
push
fwait
retw
icebp
xor
orl
pushf
pop
inc
sub
mov
rcr
outsb
add
inc
sarb
je
add
adc
scas
mov
inc
pop
test
sti
adc
xor
loopne
das
fstpt
mov
mov
fsubrl
pop
push
les
call
sub
loope
jb
and
icebp
mov
cmp
loop
mov
je
pop
mov
lods
pusha
fxch
adc
aam
out
pusha
insb
fistpll
addb
gs
push
inc
pop
push
lods
xchg
call
fisttps
je
push
xchg
test
xor
test
ds
add
arpl
in
fwait
je
imul
repnz
mov
fs
repz
sti
in
ja
cmpb
cmp
dec
popa
inc
inc
scas
icebp
xor
xchg
ss
jb
int3
aad
out
mov
mov
mov
sbb
inc
sbb
aas
sbb
loop
dec
js
sbb
push
add
jg
test
or
imul
insb
pop
jae
jp
push
mov
mov
fwait
outsb
and
cmp
int
push
pop
xor
mov
mov
push
fildl
xchg
and
add
in
in
push
jne
fcmovnbe
push
stc
mov
mov
cmp
insb
das
mov
popf
inc
inc
fdivr
xchg
pushf
add
in
adc
data16
repnz
out
mov
call
cwtl
dec
xor
std
inc
imul
lret
enter
std
ds
jecxz
bound
mov
xchg
sub
add
inc
je
xchg
stos
lods
das
mov
and
cli
jge
jne
dec
out
or
sahf
subb
subb
lock
and
cmpb
es
push
lret
pusha
add
dec
push
push
cltd
es
mov
dec
icebp
xchg
mov
push
std
xchg
lret
pop
hlt
prefetchw
cwtl
sub
or
call
cmpsb
and
loop
mov
sub
adc
ffree
jno
xchg
fcomps
aas
int3
inc
pop
xchg
adc
js
inc
ds
mov
sub
inc
subb
dec
pop
imul
xchg
xchg
stos
jmp
inc
mov
leave
push
aam
pop
scas
pusha
and
mov
scas
sub
pop
add
loope
pop
mov
xor
es
fsubl
pop
jge
xor
jge
jp
push
fwait
into
adc
push
sub
lea
and
sbb
adc
pop
call
sbb
mov
in
push
mov
and
sub
test
mov
ret
and
cltd
sahf
or
push
out
and
leave
inc
mov
cli
and
int
xor
movsl
fidivrs
jp
andl
push
inc
adcl
xchg
and
jp
jge
lods
movsb
ss
loopne
mov
test
dec
sub
scas
sbb
mov
test
jo
pop
pop
fs
xor
push
in
ret
mov
stos
into
mov
push
fsubs
mov
mov
xor
shlb
fiadds
adc
sub
fucom
aas
mov
les
arpl
mov
sarl
test
or
orl
popa
cmp
xchg
dec
inc
cmpsb
push
jg
and
dec
adc
jecxz
cmp
in
xor
jnp
or
iret
mov
out
leave
or
dec
fmul
jmp
pop
stc
insb
jle
icebp
loope
scas
stc
dec
addr16
in
out
xchg
jg
in
pusha
mov
pop
in
xor
test
mov
jecxz
clc
pop
dec
test
push
test
lods
fs
push
sub
cmp
adc
mov
cmp
xchg
cmc
lds
rolb
adc
push
jbe
push
and
cltd
fists
push
jmp
mov
imul
sbbb
enter
es
aad
xor
lret
jge
movsb
cmp
fs
jns
push
popa
pop
lcall
subb
lret
imul
pop
mov
cwtl
sbb
cmpl
and
jp
int3
in
repnz
mov
inc
loop
mov
pop
add
jg
lea
pop
pusha
icebp
add
and
test
sbb
fwait
ret
jnp
cmp
push
jnp
xchg
mov
iret
shll
xchg
jae
les
mov
mov
cmp
out
scas
nop
cmc
cld
js
mulb
in
int
into
scas
movsb
enter
mov
and
lcall
bound
fsubr
out
or
std
addr16
push
sbb
scas
rclb
icebp
sti
adc
loope
cmp
mov
mov
out
push
mov
push
push
sahf
adc
or
bound
ljmp
add
aas
mov
jl
cmc
fidivrs
stos
jbe
or
call
pop
mov
mov
xchg
push
mov
mov
jmp
cmp
xor
add
xchg
shr
jge
xor
push
mov
and
jle
nop
and
iret
and
out
repnz
adc
inc
sbb
mov
test
ljmp
and
pop
lcall
cmp
mov
leave
push
in
pop
stc
pop
cmp
jae
bound
and
das
out
sub
lds
mov
mov
fsubs
mov
inc
insl
lods
and
inc
mov
or
mov
and
ret
push
sub
cld
in
les
xchg
jp
clc
data16
ljmp
stos
std
fwait
in
aam
mov
rorb
ljmp
xlat
mov
in
inc
ret
xchg
test
mov
mov
mov
mov
std
lret
test
stos
jp
and
jne
testb
ja
scas
dec
loop
inc
add
adc
mov
stos
mov
mov
lret
cmp
sub
test
xchg
loope
dec
insb
sti
mov
inc
jmp
dec
mov
jmp
ret
cltd
pop
mov
repz
sub
push
jae
mov
outsl
out
fbstp
pop
ret
sbb
popf
pop
mov
ja
mov
out
fistpl
ret
mov
lret
adc
es
mov
or
add
lock
xor
pop
mov
jge
addb
adc
scas
dec
dec
xor
and
cmp
add
fisttpll
filds
mov
push
lds
jb
sbb
test
lods
or
lahf
fdivs
ret
mov
aas
fs
clc
fnstsw
test
outsl
scas
lret
ret
mov
jb
push
or
mov
lea
lods
lahf
sbb
arpl
shll
and
xchg
iret
or
cwtl
mov
stos
xchg
sbb
mov
dec
fld
sarb
loop
cmp
jb
push
adc
mov
mov
pop
jp
rorl
add
and
cmp
add
mulb
rclb
sbb
push
loop
dec
or
pushf
and
sbb
cmp
mov
shrl
jp
mov
xchg
xor
cld
inc
test
pop
fdivp
push
xchg
xchg
or
cmp
adc
jl
cltd
mov
adc
sub
mov
push
dec
pop
test
mov
or
mov
std
icebp
in
xlat
mov
subb
and
jns
enter
sbb
cmpsl
sahf
in
sarb
imul
test
push
popf
lds
sbb
sbb
lcall
and
mov
leave
pop
ljmp
popf
outsb
jge
pop
insb
pop
rorl
repz
cmpsl
rcll
je
mov
icebp
je
iret
jno
ds
shrb
xchg
or
loop
xor
cs
out
inc
clc
in
mov
outsb
stc
mull
shrb
push
and
rol
daa
xor
mov
pop
test
aas
push
repz
rolb
ja
mov
push
or
lods
negb
sbb
cmp
mov
test
add
xchg
scas
mov
and
mov
adc
adc
mov
push
mov
and
cld
lahf
repnz
ja
pop
or
sbb
in
mov
mov
fsubs
jp
xor
in
lahf
ds
mov
mov
lret
xlat
xor
scas
mov
insb
test
xor
adc
xor
and
add
sub
sub
movsb
xchg
sub
aam
xchg
test
lods
mov
fisubrs
mov
je
cmp
or
mov
xor
sbb
and
inc
jns
sti
cmp
decb
xchg
imul
cld
js
dec
dec
out
pop
jne
pop
sub
mov
ret
add
or
mov
push
sbbl
mov
jmp
lcall
jg
scas
cld
std
or
mov
adc
push
shr
pop
add
jb
mov
xchg
sub
call
sbb
and
inc
sbb
sldt
lcall
or
lods
sbb
clc
add
insl
xor
aam
mov
clc
mov
add
aam
dec
cmp
fstpl
pop
loope
push
fs
mov
nop
cmp
add
mov
mov
or
rcrl
sub
add
sbb
sub
push
push
cmp
imulb
cmp
or
xchg
xchg
ror
push
cld
push
mov
cltd
xchg
popf
popf
test
fcomps
aaa
sti
ljmp
test
push
dec
rol
js
hlt
das
pop
dec
sti
int3
pop
addr16
mov
xlat
push
sbbb
loopne
stc
pop
pop
adc
push
sbb
xor
pop
out
test
push
sbb
loopne
or
push
cltd
inc
in
insb
add
fwait
lods
jmp
insl
xchg
mov
mov
cltd
cmp
cmp
mov
lret
notl
mov
aaa
filds
loopne
and
jo
xchg
mov
mov
insb
imul
pop
in
test
mov
pop
imul
adc
loop
clc
sub
pop
je
mov
or
mov
add
clc
sub
dec
ret
mov
ljmp
mov
mov
xor
add
cmp
cmp
dec
lcall
and
divb
cmp
test
mov
pop
push
cmc
stos
insb
add
repz
in
addr16
loope
pusha
rorl
loopne
mov
jecxz
mov
or
and
lahf
sbb
and
js
cmp
test
push
xchg
jo
clc
pop
sarl
std
andl
adc
lock
mov
shlb
cwtl
lea
das
jecxz
inc
es
xchg
or
lock
test
cmpsl
mov
sub
lods
fs
or
and
gs
vmovd
push
outsl
sbb
out
das
add
stc
sub
jns
out
mov
cmp
xchg
aad
add
dec
rol
enter
jb
cmp
cli
rclb
ret
add
mov
iret
pop
add
dec
jp
add
push
ret
xchg
xchg
pop
nop
adc
iret
pop
mov
aad
fistpl
int
test
cmp
push
jle
lret
xor
out
test
out
stos
loop
outsb
jo
push
test
inc
inc
xchg
insb
fcoml
mov
pop
lea
xor
xchg
jbe
idivl
pushf
out
sbb
sbb
sbb
lds
dec
adc
scas
notb
jb
mov
jp
inc
adc
rdpmc
dec
adc
cltd
pop
adc
pop
jmp
xor
and
repz
push
pop
adc
xor
adc
cmpsl
mov
xchg
jge
pop
in
sub
lret
mov
mov
xchg
shlb
ja
fstpl
and
pop
jecxz
add
add
jbe
jge
movsb
fs
xor
sub
jmp
adc
dec
and
out
out
rcrl
aas
icebp
lock
or
adc
ficomps
pop
jbe
in
adcb
ds
lret
or
lcall
mov
sub
data16
das
sbb
lret
fcompp
adc
mov
mov
ret
cli
repz
adc
mov
sbb
ljmp
and
and
inc
mov
sub
cmpsb
push
xor
mov
push
xchg
or
mov
jb
jmp
or
mov
or
push
sub
sub
mov
push
inc
or
ret
mov
cs
pop
mov
mov
outsb
adc
push
lods
pop
xlat
mov
es
jge
icebp
mov
sub
ret
mov
mov
dec
sub
inc
cwtl
sub
orl
and
pop
push
clc
dec
test
cmp
and
dec
mov
mov
aad
ljmp
subl
in
sub
pop
sbb
iret
or
mov
mov
pop
popa
adc
enter
cmpsb
adc
cmp
jnp
mov
adc
stc
orb
mov
call
out
out
lock
adc
out
sbb
in
ds
lods
pop
les
int3
inc
mov
int3
and
inc
sub
cltd
int
jae
out
mov
out
test
or
or
cmp
andl
ja
mov
push
mov
jne
inc
pop
in
or
mov
in
adc
pop
xchg
inc
add
inc
shufps
fisubrs
or
cltd
xchg
dec
pushf
leave
add
aam
inc
xchg
sbb
cmp
jp
sbb
stc
ficomps
inc
push
jmp
outsb
sbb
pop
pop
lds
fadd
incb
call
sbb
cltd
jge
idivl
out
mov
scas
sahf
cmp
imul
loop
inc
adc
jg
or
push
movsb
inc
sub
cmpsl
xchg
fsubp
mov
dec
mov
push
arpl
sbb
mov
enter
movsb
sbb
xorb
jns
or
sbb
mov
inc
sbb
push
jg
mov
ljmp
xchg
test
enter
xchg
das
jnp
pop
imul
fwait
jbe
stos
aad
out
and
jp
loop
inc
jle
push
test
cmpsl
lahf
stos
sbb
pop
mov
sub
daa
lock
mov
sub
sub
bound
stc
clc
xchg
ljmp
mov
cwtl
xchg
insb
jbe
loopne
mov
mov
into
fwait
push
aam
pop
pop
sbb
mov
mov
jb
add
sbb
mov
daa
mov
sbb
pop
mov
pop
or
test
xlat
jb
fwait
push
call
mov
or
mov
or
loopne
stc
mov
inc
test
push
mov
xor
sub
xchg
xor
ret
loopne
out
and
rcrl
jge
push
inc
das
outsl
ret
jno
in
outsb
pop
out
pop
addr16
aaa
jge
mov
push
push
xor
lea
mov
push
mov
mov
jl
fistpl
ja
rcrb
dec
mov
movsb
sti
mov
push
test
push
hlt
jb
out
xor
dec
out
push
out
ljmp
push
and
orl
pop
loopne
pop
stos
dec
push
mov
ret
pop
mov
bound
out
mov
test
jae,pn
sub
sub
fdivrs
mov
pop
xchg
dec
mov
icebp
test
pop
maskmovq
idivl
mov
mov
dec
imul
or
xlat
adc
aaa
mov
push
xchg
xor
xchg
test
loop
sub
inc
in
out
xlat
and
fs
jne
pushf
mov
cmp
xor
ja
mov
xor
pop
or
je
xchg
call
aas
and
aaa
xchg
add
loope
lods
lock
xor
fstpt
aaa
mov
rcl
pop
cmp
mov
add
xchg
movzbl
jmp
stos
push
cmpsl
lea
dec
xor
xor
ret
loope
data16
rcl
cwtl
xchg
pop
bound
push
ss
mov
inc
push
out
xchg
dec
stos
gs
xchg
xchg
or
in
lahf
rclb
ror
jbe
adc
pop
sbb
out
push
or
icebp
push
aas
mov
add
sub
into
sti
mov
mov
adc
insl
rcrb
divb
and
leave
insl
mov
xchg
jo
mov
or
js
mov
add
lock
cmp
mov
out
mov
mov
aaa
xchg
out
inc
dec
mov
dec
mov
sbbb
test
cmpl
div
cmpb
cs
in
mov
sub
test
stos
mov
sbb
out
sub
inc
or
stos
cmp
ss
jmp
std
push
cmp
mov
popf
inc
and
movsl
and
push
in
or
nop
sub
js
cmp
negl
adc
or
lock
stc
dec
inc
addr16
into
sub
notl
mov
jmp
adc
sbb
jmp
in
stc
sub
cli
iret
sub
adc
sbb
adc
cli
or
mov
mov
jl
paddw
xor
das
mov
and
xor
inc
jmp
mov
xchg
in
cmp
arpl
clc
sahf
sbb
les
jecxz
push
inc
insb
movsl
fwait
adc
es
insl
mov
pusha
and
lahf
add
out
iret
push
lods
sahf
lret
outsb
loopne,pt
push
and
ficomps
xchg
inc
jmp
cmp
xor
sahf
add
jb
xor
push
loope
cmp
mov
dec
push
mov
fs
nop
cld
xchg
daa
jnp
cmpsb
insl
mov
ret
mov
mov
loope
es
call
out
push
and
pop
loope
aaa
add
ss
or
fdivr
fdivr
insl
xor
mov
push
imul
dec
mov
cs
dec
ret
inc
ficompl
jo
cmc
dec
mov
jne
popa
or
push
nop
ja
loopne
aas
add
mov
add
sbb
lret
and
cmc
es
push
jno
outsb
cmc
xor
popa
cmpsl
xor
jge
je
loope
ror
lods
lret
dec
cmp
call
add
outsb
dec
shlb
dec
movsl
cmp
adc
cmp
lret
lock
fldl
push
stos
test
and
btr
cmp
sbb
mov
adc
divb
jle
jle
test
scas
outsl
fwait
aaa
aam
cmpsl
inc
mov
int
mov
frstor
fisubl
push
cmp
leave
push
nop
adc
mov
ffree
mov
out
out
scas
inc
cwtl
outsb
bound
out
fsubrp
jne
adc
flds
xchg
movsb
jg
jo
pop
fimull
fwait
mov
aad
insb
dec
push
dec
cmp
mov
sahf
mov
xor
sub
jecxz
sub
pushf
adc
in
aaa
xchg
cmpsb
push
xlat
adc
je
fists
out
sbb
mov
cmp
and
inc
inc
mov
sub
rcrl
mov
mov
xchg
mov
xchg
jne
andl
push
add
repnz
aam
and
dec
shlb
sub
mov
pusha
stos
pop
sbb
les
push
jbe
xor
mov
pop
insl
mov
mov
jecxz
xor
adc
iret
pop
cmp
jp
xchg
out
xchg
mov
mov
imull
loopne
cmp
movsl
pop
sbb
mov
jle
xchg
push
ja
dec
jo
fildll
hlt
cli
push
push
andb
call
imul
mov
xlat
add
shll
mov
push
pop
andl
inc
inc
mov
loope
jl
and
icebp
in
pop
dec
loop
cld
cmp
jmp
mov
cmp
inc
cmp
xchg
xchg
mov
jmp
jbe
mov
jl
shlb
pop
rcrl
add
ficomps
jle
adc
cltd
or
sub
mov
pusha
fstl
stos
orb
fcmovb
popa
out
cs
inc
test
cmp
mov
sub
aad
sbb
mov
mov
shrl
popf
xchg
pop
or
xchg
leavew
add
push
inc
push
pop
popa
cli
ss
jg
add
mov
subb
jge
lods
or
ss
fidivl
fs
les
mov
mov
in
and
pop
sahf
in
inc
and
jne
jl
lods
pop
enter
ret
imul
sub
ret
dec
repz
sarl
mov
mov
jnp
jns
push
loope
pop
xor
popa
mov
jecxz
adc
in
dec
sub
jl
sub
lods
loope
mov
outsl
mov
xor
xor
mov
mov
push
repz
xchg
xchg
inc
xchg
and
pop
loope
adc
dec
jl
fildll
por
sbb
loope
aaa
dec
int3
or
pop
bound
fcoml
xchg
dec
xchg
sahf
jmp
std
sub
fisttpl
add
call
push
dec
lods
mov
dec
jl
mov
sub
arpl
mov
jbe
cld
mov
lods
lcall
xor
fstl
or
jo
sub
cmpsl
inc
ds
lods
xor
stos
xchg
mov
mov
lock
pop
xchg
add
nop
divl
stos
xchg
jb
xchg
lds
fwait
mov
mov
fdiv
cwtl
cmc
or
loopne
jae
ret
test
pop
ds
push
inc
das
bound
ret
xor
mov
out
jp
std
test
sub
add
adc
stc
les
and
adc
and
ret
rolb
add
and
push
aad
andl
jle
inc
scas
shlb
popf
fldl
push
outsl
jmp
cmpsw
hlt
mov
jns
mov
mov
pop
clc
sub
xchg
lahf
enter
addr16
or
jmp
push
scas
lcall
mulb
mov
lea
lods
int3
and
mov
pushf
imul
xchg
sub
gs
test
cmp
mov
stc
test
and
adc
fdivl
xchg
and
das
sbb
ljmp
xor
pop
mov
lock
mov
ret
testb
dec
repnz
jne
test
std
jmp
lods
int
xchg
daa
push
sub
jne
out
nop
xor
test
cs
adc
popa
ds
fidivrl
sbb
test
or
lock
dec
mov
call
insb
xlat
adc
pop
inc
xor
push
jae
popf
lret
jmp
mov
pop
sub
jg
xchg
mov
adc
push
sti
fwait
popf
clc
mov
jns
std
aam
jle
nop
aad
les
inc
les
add
mov
cld
cmp
mov
test
sbb
add
inc
lea
mov
or
sbb
in
pop
push
sbb
bound
pop
jbe
cmpsl
sub
lea
xchg
mov
orb
in
and
es
enter
movsl
or
dec
popa
adc
repz
fcomps
lcall
imul
into
mov
add
mov
mov
pop
shll
ret
sub
test
cmpsl
cli
xor
ror
add
dec
or
and
ja
repz
ret
ljmp
xlat
sub
cmpsb
pusha
cmpsb
in
call
xor
cmc
or
outsb
inc
out
rcl
mov
inc
in
xorb
mov
or
out
frstor
push
xor
inc
lcall
mov
push
movsb
insb
mov
dec
bnd
insb
bound
daa
adc
lcall
test
ror
icebp
fmuls
adc
jle
cmpsb
lahf
roll
outsb
mov
loopne
xchg
add
leave
mov
adc
mov
stc
push
stos
and
scas
call
push
enter
add
or
dec
shlb
mov
mov
test
push
pushf
sub
adc
and
stc
into
fidivs
fistl
es
repz
mov
pop
adc
mov
mov
mov
mov
inc
sbb
stc
movsb
sbb
lea
inc
xlat
addr16
into
fwait
test
adc
cltd
mov
sbb
jp
mov
sub
xchg
test
jbe
xchg
cwtl
insl
xchg
bound
ss
xchg
test
sub
xchg
icebp
xchg
adc
jmp
movsl
xchg
xor
push
addr16
dec
sahf
xor
sahf
mov
fsubrs
and
adc
xchg
adc
adc
sub
roll
xor
xchg
ficoml
xor
stc
add
jne
stos
mov
call
or
dec
sarl
or
dec
sub
mov
outsl
cmpsl
jo
add
repnz
pop
or
sbb
pop
inc
jb
dec
scas
xchg
add
test
sbb
aad
xchg
idiv
stc
fadd
divl
cmc
lret
or
mov
js
adc
inc
dec
mov
lcall
dec
cmp
dec
aam
fstpt
icebp
adc
rcrl
jae
outsl
shll
lea
push
loop
pop
jp
lret
mov
jl
xchg
pop
and
cld
add
lods
loopne
test
sbb
sub
jne
pop
sbb
scas
dec
jecxz
arpl
dec
lret
mov
sub
mov
call
adc
sbb
xlat
lea
imulb
pop
lret
jp
xchg
aam
or
sbb
pop
xor
pinsrw
sbb
sti
jb
mov
fisubl
fidivl
cmp
mov
lcall
sarl
sti
pop
jl
fldcw
shl
add
mov
fwait
sbb
mov
in
test
insb
nop
and
push
aad
imul
loopne
addr16
dec
mov
add
mov
and
insb
out
fnstenv
cli
mov
xor
sub
sarb
add
je
mov
add
pusha
inc
adc
xchg
pop
in
pop
icebp
pop
xchg
jns
cmp
push
xchg
pop
cmpsl
mov
ljmp
sub
mov
adc
test
sub
dec
std
jg
xchg
mov
xor
popa
arpl
mov
push
in
xchg
or
sub
out
jo
jno
movsl
andl
jb
or
mov
lods
addr16
movsb
insl
pushf
shl
mov
sub
mov
fstl
lods
das
mov
xchg
sub
fwait
adc
aaa
mov
xchg
dec
and
mov
xor
inc
jbe
pop
sub
mov
in
mov
jmp
pop
and
cmp
jge
add
push
or
xor
fnstenv
dec
mov
outsb
loopne
push
subl
jg
push
decb
aad
icebp
mov
pusha
add
call
imul
les
cmp
adc
int
fisttpll
lock
and
jae
mov
and
mov
mov
adc
push
fisttpll
jmp
das
adc
addl
int
sahf
mov
popa
outsb
out
xor
dec
dec
mov
aas
jg
inc
mov
dec
scas
push
imulb
sahf
fisttpll
out
push
lds
adc
cltd
push
hlt
dec
mov
xor
sti
in
rolb
pop
push
xchg
jmp
repnz
push
jmp
xchg
cmpsl
and
es
loop
cmp
mov
testb
cmp
push
shrl
xchg
insb
loopne
aam
repnz
jle
pop
inc
shl
mov
push
and
ss
push
xor
push
and
in
dec
jno
dec
push
scas
jg
lea
dec
adc
repnz
mov
or
repz
xchg
jno
and
and
js
orps
push
fistpl
push
inc
lret
sub
push
push
jno
pop
inc
cmp
mov
das
scas
inc
add
popf
in
dec
or
jne
out
jae
cs
out
inc
pop
roll
popf
iret
scas
inc
or
dec
dec
insb
jbe
or
outsl
loopne
popa
ret
fs
inc
add
cmp
xorl
lahf
mov
xchg
dec
and
dec
inc
jb
cmpsb
test
scas
aas
mov
test
push
gs
stc
dec
push
mov
ret
shrb
cltd
lods
inc
sbb
aad
mov
in
icebp
movb
cli
cmp
push
push
cmp
mov
xor
adc
int3
and
mov
mov
out
hlt
nop
pop
sbb
daa
pop
pop
cmp
adc
sbb
inc
add
ljmp
mov
iret
add
mov
stc
mov
xor
dec
sub
mov
sub
outsl
inc
cmp
and
xor
xor
xchg
jge
andl
push
adc
mov
mov
insl
cmp
adc
out
adc
inc
outsl
inc
filds
std
xor
jmp
movsl
or
test
add
xor
popf
mov
mov
lods
jno
jp
and
push
inc
lret
sub
popa
addl
pop
mov
pop
xchg
cmc
and
in
insb
add
mov
push
push
adc
xchg
lods
xor
jmp
xor
aam
sbb
rclb
and
js
mov
loop
movsl
cmc
sbb
aas
in
call
ret
xchg
mov
xchg
mov
dec
dec
cmc
dec
xor
xchg
jg
xor
mul
mov
es
in
xchg
mov
mul
mull
fucomip
jno
sbbl
lock
xchg
sub
inc
adc
jno
pop
cld
jno
add
ret
cwtl
mov
jne
mov
insb
out
xchg
mov
scas
ds
out
popa
sbb
hlt
mov
push
xor
jae
lret
jae
dec
adc
sbb
rorl
int3
add
es
sub
sub
and
dec
fsts
pop
cmpsb
sahf
jg
daa
ret
testl
addr16
xor
ljmp
ljmp
loopne
push
mov
addr16
in
sarl
and
jae
adc
scas
shll
mov
and
cmp
xchg
mov
dec
data16
rorl
sbb
stc
mov
sub
pop
xchg
xlat
mov
ret
mov
dec
movsl
lret
aad
movsb
mov
or
mov
pushf
inc
cmp
jl
scas
dec
lret
xchg
gs
insl
loop
stos
shll
xor
pop
or
and
fisttps
dec
add
mov
mov
jg
mov
cld
cmp
aam
adc
cs
cmp
in
das
push
jbe
and
dec
cli
pop
std
int
stos
fidivrs
xchg
push
outsb
imul
jbe
mov
dec
sub
enter
mov
xor
jecxz
cwtl
or
outsl
or
xor
and
xor
xchg
or
adc
andb
mov
dec
outsl
xchg
mov
iret
shrb
data16
mov
in
mov
lcall
add
xchg
xor
out
imul
pop
cmpsl
std
mov
sbb
fsubrs
adcl
cs
out
inc
jo
int
jne
cld
lock
lret
dec
arpl
or
shl
jb
mov
das
test
mov
xchg
dec
dec
lahf
fs
sahf
lods
dec
add
jb
mov
sbb
jp
fwait
lret
xor
mov
lods
xchg
xor
fsub
aaa
add
and
lea
stc
jne
sbb
pop
test
mov
mov
mov
xchg
shr
ret
mov
dec
aad
fldenv
or
ss
sub
int
push
xchg
pop
in
sub
jmp
mov
pop
push
or
out
dec
std
shl
xchg
add
and
sbb
nop
xlat
mov
clc
cmpsb
divb
mov
pop
divl
lods
sbb
fsub
cld
insl
push
popf
pop
jg
jbe
pop
adc
test
mov
mov
out
pop
je
push
into
and
lahf
test
jbe
cmp
aad
mov
cmp
cli
jae
into
imul
rolb
sbb
xchg
daa
mov
add
mov
mov
jns
out
mov
xchg
jmp
adc
cmpsl
jmp
out
sub
es
lods
mov
aad
fisubrs
rcl
in
lea
adc
lods
ds
in
out
or
jecxz
subl
and
js
js
dec
in
mov
data16
inc
imul
shrb
dec
jbe
cmpsb
aad
cmp
nop
and
dec
stc
cmp
pop
in
push
test
sub
dec
lret
idiv
mov
push
add
xor
mov
add
jne
add
dec
subb
gs
mov
int3
aas
sti
fs
mov
mov
rcrl
jbe
cmp
in
xor
cmp
in
lahf
cmp
mov
jecxz
in
cwtl
jg
or
mov
in
or
sahf
adc
fidivrs
dec
das
cmp
mov
out
xchg
in
pop
or
iret
jge
jno
test
popa
cmp
and
adc
fimuls
cltd
aam
stos
sbb
mov
outsl
ss
bnd
lods
sub
jno
adc
mov
pop
pop
movsl
fwait
jp
mov
test
lret
mov
jns
mov
sbb
mov
adc
mov
adc
xor
pushf
cmp
jns
fildll
jb
insl
lods
mov
shrl
jbe
in
subl
iret
mov
lods
imul
mov
mov
pop
and
jns
dec
cli
dec
xorl
dec
loopne
xor
fimuls
jmp
dec
bound
clc
stc
dec
pop
adc
pop
int
jmp
decb
outsl
aad
iret
dec
cmp
test
or
mov
inc
sub
int
inc
and
dec
xlat
mov
jb
jmp
xor
aas
dec
rol
mov
sub
cli
js
int3
adc
popa
jmp
in
je
out
idivb
fucom
outsb
mov
push
pop
dec
popa
incb
popa
outsb
pop
mov
scas
cltd
shlb
sbb
cs
xchg
aad
lret
push
jbe
dec
adc
dec
jg
sbb
out
orl
dec
and
int
mov
dec
push
sarl
inc
sbb
js
outsb
flds
adc
xchg
jns
inc
movl
jns
xchg
pushf
int
push
cmp
in
mov
jmp
ss
add
xchg
shrb
test
mov
lea
bound
orl
loopne
mov
les
inc
push
jle
fneni(8087
in
popa
pop
mov
dec
jnp
mov
scas
movsb
loop
or
lds
cmpsb
aam
and
lret
mov
sub
pop
sub
frstor
xchg
mov
loope
lods
mov
sti
jge
ljmp
mov
outsl
inc
mov
inc
shrl
stc
sahf
cmp
test
xor
lahf
leave
lret
or
xchg
pop
add
fwait
lcall
adc
lods
popa
cld
fucomip
cmp
adc
test
jmp
scas
mov
add
jnp
inc
in
aad
inc
pop
inc
or
loope
jmp
jne
mov
sub
int3
mov
mov
mov
mov
js
jecxz
xchg
insl
push
das
pop
fistpll
inc
xorl
idiv
ja
scas
add
fwait
lea
and
fmull
out
sbb
cmp
imull
inc
cmp
mov
xor
iret
cmpsl
shrb
das
adc
int
jp
or
mov
cmc
or
rcll
in
cmp
je
mov
sub
dec
pop
pop
push
mov
popa
imul
lcall
clc
mov
int
insl
sbb
add
outsl
xchg
enter
push
xorl
jp
iret
inc
xchg
inc
sub
mov
mov
jbe
fstl
imul
subl
outsb
fmuls
dec
push
xchg
inc
movsb
gs
cmp
push
stc
mov
movsl
pop
pop
icebp
test
into
jns
mov
lret
out
cld
dec
jbe
aad
xorb
sub
add
repz
adc
dec
sbb
cmpb
xor
fstl
push
jge
mov
inc
xchg
aam
int
iret
jp
jns
add
xchg
push
and
sub
shl
mov
cltd
jae
adc
jl
xchg
insl
daa
daa
adc
xchg
mov
mov
das
fisubs
xchg
or
inc
outsb
sub
cwtl
inc
repz
sub
jmp
xchg
pop
pop
xor
sub
push
out
ja
inc
and
jne
ljmp
es
fsubrs
je
pop
ljmp
jno
in
sub
push
es
movsb
jns
sbb
fnstsw
mov
pop
push
icebp
incl
loopne
mov
cs
jl
sbb
push
mov
or
lcall
mov
cmpl
int
in
jl
insl
fwait
in
mov
scas
push
hlt
jecxz
pop
lods
fildl
in
enter
or
je
out
repnz
scas
sar
test
hlt
mov
xor
jns
dec
fld
insb
repz
iret
lods
xchg
xchg
pop
enter
dec
repnz
sub
add
cs
lea
pop
pop
push
or
xor
scas
or
sub
repnz
mov
cmp
mov
mov
rcrl
adc
sti
sbbb
jns
fidivl
cmp
adc
cmpsl
mov
sub
icebp
aam
rcrb
inc
mov
xor
push
mov
movsl
xchg
and
jnp
in
aas
pushf
mov
sub
dec
xchg
add
test
js
call
ljmp
sub
in
sub
push
mov
push
pushf
rcl
mov
and
jecxz
inc
lret
lds
xor
xorl
xchg
fdivs
loop
das
or
int3
int
jecxz
dec
xchg
repz
xchg
fldcw
xchg
ret
lods
pop
mov
push
cmp
iret
aaa
call
xor
mov
sub
xorb
mov
shlb
shll
sti
xor
sarl
mov
loopne
shlb
sub
idiv
repz
jl
insb
xor
xchg
cmp
xchg
loope
add
in
xor
loop
push
xchg
in
js
roll
push
out
lret
pop
xchg
movsb
insb
test
mov
push
xchg
mov
nop
test
push
add
mov
mov
popf
adc
loope
pop
negl
psubd
jge
dec
xor
pop
movsb
mov
mov
dec
aas
aas
lcall
mov
dec
int
bound
xor
ljmp
loop
jb
cltd
jbe
dec
dec
mov
sub
or
jmp
push
loope
fnstcw
fldenv
cmp
mov
cmp
addr16
push
mov
mov
cmpsl
rcrl
fadds
in
add
inc
inc
xchg
jbe
or
sbb
mov
loopne
aad
adc
xor
add
outsb
in
nop
mov
fistpl
mov
mov
mov
push
and
pop
cmpb
imulb
jge
je
div
inc
lcall
roll
jno
or
mov
pop
xchg
inc
pop
adc
sbb
mov
in
adc
pop
mov
sbb
cs
pop
push
gs
or
mov
mov
pop
int
into
mov
orb
pop
xchg
adc
das
xor
inc
shll
dec
xor
and
les
les
in
inc
mov
or
dec
jle
outsl
or
or
mov
pop
dec
ljmp
das
xchg
sbb
jge
dec
jno
cs
inc
mov
jne
push
cmp
jle
dec
ret
movsl
xor
adc
hlt
push
scas
add
int3
bound
mov
in
imul
sub
xchg
nop
push
sti
pop
lock
add
popf
push
pop
out
add
lods
pusha
rorl
cld
pop
call
mov
call
aas
jo
mov
sbb
pop
dec
aaa
in
sti
dec
pop
add
inc
sub
push
cmp
ja
xchg
jge
or
insb
stc
jb
xor
cltd
into
lods
int
jge
xor
dec
xor
xor
or
jae
int
cltd
mov
pop
aas
daa
subb
mov
pop
push
pop
scas
stos
inc
adc
clc
shrl
dec
xor
sbb
test
in
jo
inc
hlt
push
dec
adc
mov
cmpsl
rorl
dec
sub
mov
mov
sbb
dec
adc
sbb
cwtl
pop
stos
push
sbb
xor
mov
lret
push
dec
inc
mov
cwtl
mov
and
mov
jne
orb
test
xor
adc
in
push
cltd
call
inc
popf
or
sub
ljmp
jno
outsb
clc
inc
mov
aaa
cmp
mov
cmp
int3
push
test
inc
add
sub
loopne
imul
add
lret
call
scas
ds
test
cwtl
fnstenv
jle
xor
scas
lods
mov
mov
call
mov
inc
cmp
out
xchg
cmp
outsl
push
xlat
inc
mov
je
es
inc
jne
clc
add
fldt
jnp
add
fidivs
inc
test
mov
sahf
or
int
insb
outsb
in
xor
add
dec
jg
jmp
mov
scas
add
mov
loopne
dec
pop
shlb
adc
mov
nop
divb
lods
aad
out
mov
xor
mov
sti
fsubs
lcall
inc
sub
loopne
mov
push
xor
adc
push
sbb
pop
inc
popa
loopne
pop
push
push
xor
xorb
xchg
dec
cmc
dec
bound
lea
jne
xchg
cmpsb
rcll
pop
push
mov
jbe
cld
or
ret
clc
dec
lret
inc
or
xchg
xchg
dec
dec
jns
popf
mov
adc
sub
sbb
mov
mov
loope
fdiv
repz
cli
test
mov
call
cmp
test
inc
fnstcw
in
xor
mov
jle
stc
push
pop
inc
jno
enter
xor
pop
addl
in
das
push
push
test
mov
mov
inc
nop
enter
add
sub
sti
cmp
jecxz
stos
pusha
fnsave
repz
movsl
add
inc
xor
cmp
mov
lods
mov
mov
insl
ret
mov
fcompl
or
sub
pop
sub
sbb
hlt
insb
pop
ret
stc
inc
cld
mov
cmp
or
loopne
or
jnp
mov
xor
add
jne
subl
lret
mov
out
push
aam
mov
jecxz
inc
inc
daa
mov
pop
outsb
or
shlb
out
das
adc
test
lret
inc
jmp
sarl
insl
jg
pop
gs
fimuls
cmp
pop
lret
in
out
stos
lret
cmc
jp
push
enter
add
jl
lods
jae
inc
xchg
cmp
mov
ds
jbe
fwait
mov
into
push
xor
and
insb
jne
rorb
icebp
jnp
jne,pt
rcrb
rorl
stc
insl
in
mov
cltd
xor
adc
pop
arpl
jg
fwait
les
cmp
pusha
mov
decb
xor
pop
gs
rep
cmpsb
cwtl
pop
inc
push
mov
mov
mov
mov
mov
push
arpl
sub
adc
imul
mov
sub
or
enter
rol
mov
notb
stos
or
mov
mov
dec
cmp
or
shll
bound
xor
pop
icebp
fnstenv
pop
insl
stc
dec
add
stos
test
cmpb
xor
jno
rclb
stos
push
pop
push
scas
cld
xchg
fimuls
movsb
repz
mov
push
fsubrp
sub
jecxz
add
sub
rclb
mov
test
and
lret
subl
mov
bound
fidivl
sbb
lds
cmp
rolb
movsb
mov
and
ds
testb
test
ljmp
xor
test
mov
or
imul
stos
mov
pop
pushf
inc
jmp
in
pushf
les
cltd
shr
das
xchg
loope
jge
ret
leave
dec
imull
dec
adc
fsubrl
add
push
add
fsubrs
mov
insb
fstpl
xchg
cwtl
push
je
mov
js
mov
mov
sbbb
and
js
or
cmp
popf
in
fldt
sbb
js
subl
xchg
pop
jae
jo
insl
dec
cmp
out
test
les
cltd
mov
pop
jbe
aas
xchg
sti
jg
xorb
sbb
mov
pop
and
imul
sarb
mov
mov
lret
xchg
push
xchg
jne
add
mov
mov
sbb
cmpsl
pop
mov
int
pop
sub
jne
xor
aaa
mov
dec
mov
sub
push
jmp
mov
in
and
inc
stos
jl
mov
inc
sbbl
mov
dec
ljmp
sbb
xchg
sarb
aad
outsb
xor
ljmp
andb
mov
inc
xor
lods
mov
nop
dec
test
push
fstps
test
jb
lcall
ret
xor
sub
pop
inc
scas
cmpsl
cwtl
adc
xchg
subb
push
mov
dec
clc
jl
xchg
ljmp
or
stos
xor
outsl
and
adc
mov
cs
fisttps
ret
sbb
sub
mov
outsb
jb
in
cmp
lock
jecxz
fcomps
addr16
int
mov
xchg
nop
out
push
xchg
setp
loopne
in
add
pop
lock
repnz
jne
mov
push
lcall
rol
push
fwait
cmp
push
je
xlat
or
shll
sarl
dec
cmpsl
lret
cwtl
jmp
dec
lds
push
hlt
insl
push
fidivl
rcr
dec
sti
rcr
mov
mov
js
leave
mov
adc
cmp
dec
pop
jle
movsl
mov
fstl
popa
clc
fidivs
mov
mov
jle
fnstsw
idivb
loope
xor
aam
push
jns
and
repnz
xchg
and
mov
dec
cmp
push
jb
xchg
mov
jecxz
ja
popf
dec
cmp
stos
cltd
loop
mov
rcll
iret
xchg
mov
push
xor
das
jl
sub
cmpsl
mov
addl
nop
je
sbbb
fsub
addl
add
xchg
push
bnd
cmp
add
pop
test
movsb
sub
sub
bound
loopne
shlb
add
inc
mov
push
je
pusha
push
and
fbld
inc
cmpsl
mov
rolb
sub
scas
imul
ret
pop
ds
out
aas
or
ljmp
test
xlat
out
xchg
ret
scas
mov
mov
test
lret
add
and
pop
adc
fcoms
lcall
jb
lods
cli
pusha
xorl
aaa
jp
popf
ja
cmp
mov
xor
scas
sarb
lods
jnp
arpl
xor
adc
cwtl
out
addr16
jl
icebp
loopne,pn
lahf
push
adc
mulb
dec
push
int
push
xchg
pop
les
mov
mov
push
rclb
and
cmc
adc
add
mov
rolb
push
movsl
repnz
cli
lock
dec
mov
dec
popa
push
mov
fidivrl
cli
and
sbb
inc
daa
sbb
rcl
add
movsl
mov
mov
mov
in
iret
addb
fsts
fucomp
pop
inc
fildll
dec
pop
push
push
js
mov
mov
adc
mov
mov
mov
insl
mov
cmp
xchg
xchg
subb
iret
shll
lock
or
idiv
xchg
xchg
jle
add
push
gs
icebp
js
push
push
inc
sub
and
cmpsb
sar
mov
fidivrl
js
xor
mov
push
pushf
xchg
gs
xchg
push
gs
je
jg
movsb
adc
hlt
jae
jno
sub
dec
and
adc
sub
add
mov
sub
pop
jbe
inc
jl
sub
xchg
sub
cmpsl
sbb
popa
add
and
in
mov
nop
negl
leave
inc
jecxz
notl
sbb
fistl
scas
sti
jg
lods
shrb
icebp
daa
inc
gs
movsl
jmp
xchg
jle
std
mov
jg
stos
inc
jp,pn
int3
repz
rorb
cmpl
insb
rep
jg
dec
cmpl
ja
mov
ss
call
add
push
cmp
xchg
gs
popf
push
in
hlt
in
out
push
jecxz
ret
iret
sub
movsb
cltd
test
mov
mov
iret
hlt
mov
stos
sbb
loopne
sbb
mov
inc
popl
dec
sbb
std
ret
rclb
add
lods
imul
xchg
stos
adcb
push
pop
cld
add
vpsubd
fisubrl
test
ret
in
rcrb
cmp
cmpsb
into
or
lods
in
sub
repnz
pop
jns
arpl
xlat
or
cmp
cmpsb
pop
fstl
inc
sbb
jb
pop
cvtps2pd
push
or
push
or
test
gs
aas
xor
fmul
inc
leave
jnp
leave
xor
xchg
adc
ss
xchg
out
pusha
popa
mov
or
mov
inc
popa
lahf
icebp
xor
arpl
push
scas
pop
inc
inc
inc
xchg
sub
rcrl
mov
xchg
shrl
adc
scas
jmp
jmp
push
xor
jae
std
adc
jno
cmpl
stos
cltd
add
ds
insl
mov
sbb
sub
jnp
out
stos
in
dec
jne
sub
sbb
popa
push
sub
jmp
mov
inc
jb
stos
pop
xchg
ret
in
gs
fadd
test
xchg
repz
cwtl
jno
int3
fsub
mov
mov
lcall
cmpsl
cs
xchg
xchg
push
lods
xchg
mov
jg
or
inc
and
sub
loop
movsl
mov
or
int3
xor
add
test
lret
ficomps
sbb
out
outsl
mov
and
std
jno
cmc
sbb
push
xchg
or
ss
push
cmc
cmp
sti
sbb
or
outsl
push
xchg
pop
arpl
dec
stos
into
ds
inc
pushf
xor
add
xchg
out
xchg
test
pop
jg
add
cmpsl
lcall
subl
lds
push
xchg
in
fnstsw
cwtl
das
jb
clc
mov
xchg
aad
fsubr
cmp
fsubs
in
enter
pop
dec
sahf
or
and
insl
popl
aad
sub
dec
or
xchg
mov
mov
adc
xorb
push
jnp
mov
arpl
leave
adc
cmp
cli
sahf
jns
pop
cmpb
repnz
dec
cmpsb
mov
insb
fidivrl
xor
xor
and
outsb
es
addr16
adc
imulb
adcb
clc
aam
aaa
jae
mov
jle
iret
and
add
fidivrl
das
sbbl
data16
fisttpl
fwait
cmp
mov
mov
fiaddl
int
lret
mov
ja
dec
adc
aam
lods
icebp
mov
inc
mov
insb
aad
xchg
mov
sbbb
add
dec
cli
pushf
dec
cmpsl
and
and
adc
pushf
mov
adc
dec
jecxz
mov
add
sub
push
xchg
fdivp
xor
mov
jmp
dec
adc
scas
push
xchg
insb
push
ja
ss
outsl
in
gs
lret
sbb
xor
insb
out
adc
jb
adc
cs
cld
adc
mov
mov
adc
dec
sbb
dec
insb
jp
stos
aad
adc
popa
xchg
stos
roll
enter
fcomps
dec
push
mov
inc
mov
or
nop
test
rcrb
xchg
fistpl
xor
or
cld
es
xor
hlt
xlat
icebp
add
sahf
inc
add
lock
and
pusha
repnz
mov
std
loope
int3
adc
cmpsl
dec
mov
xor
stos
xchg
cs
push
sete
data16
xor
ss
sub
pop
scas
lods
ja
mull
cld
test
testb
push
fprem
fcmovne
jne
cmpsl
fstpt
cmp
imul
sbb
xchg
or
mov
jne
cmp
in
pop
or
pusha
sbb
in
cmp
push
decl
mov
lcall
cld
xchg
add
mov
ret
push
mov
addb
add
mov
leave
outsb
mov
inc
sbb
and
out
movsb
jl
shr
jle
stos
outsb
movsl
shr
hlt
adc
inc
adc
dec
test
xchg
popf
adc
pop
add
sbb
mov
mov
inc
dec
pop
xchg
sbbb
pop
adc
int
xor
jl
sub
jbe
pop
push
pop
cmp
rorl
dec
outsb
inc
xchg
dec
ret
xchg
nop
imul
jg
and
adc
in
sub
jmp
sub
adc
sti
mov
xor
xchg
and
int
arpl
subl
cmpsb
sub
iret
push
jns
push
pushf
pop
addb
push
movsl
orb
pop
xor
or
inc
xlat
js
sbb
in
mov
ja
movsb
icebp
mov
lea
mov
lret
mulb
lcall
fsubrs
shlb
pop
and
fwait
lret
in
cmpsb
jns
sbb
in
in
pop
out
mov
lods
sub
dec
cs
in
leave
xor
in
loopne
pushl
sub
shlb
jno
push
and
add
leave
ja
sub
stos
xor
int3
push
inc
insb
mov
jo
ds
sbb
rcll
jle
mov
push
into
dec
lods
and
push
xor
mov
es
mov
inc
pusha
lods
mov
js
push
filds
xchg
lea
sti
push
dec
or
outsb
pop
leave
add
push
imul
mov
xor
jno
pop
js
adc
pop
adc
push
sub
xchg
xchg
dec
pusha
lret
xchg
sahf
lock
inc
fadd
rcrl
pop
mov
cmp
les
cs
movsl
xchg
rolb
xchg
fdiv
nop
dec
cmpsl
addb
xchg
mov
mov
lock
adc
idivb
test
lods
xchg
popl
lods
movsl
mov
aas
jno
xchg
xchg
cmp
mov
fnstsw
or
loopne
jnp
ljmp
xor
enter
icebp
das
popa
gs
movsl
sub
pop
data16
shll
jecxz
ret
adc
out
cld
std
and
adc
mov
adc
xlat
fmull
xchg
xor
in
sahf
stc
imull
cmp
sbb
xlat
mov
lahf
popa
pop
xchg
outsl
pop
insb
sbb
xor
es
sub
push
jno
sub
add
arpl
dec
inc
in
cmp
lea
repz
pop
push
add
pop
xchg
sub
sbb
rcr
push
inc
fdivrp
xor
cmc
xor
adc
and
movsb
lods
dec
dec
jmp
mov
cwtl
in
clc
xchg
test
fbstp
mov
xchg
out
pop
sub
mov
jno
mov
aad
mov
push
jle
sub
inc
lock
adc
mov
movsl
and
or
xor
out
stc
roll
ljmp
lcall
push
and
aaa
lock
lea
cmp
cmpsl
inc
sbb
fsubl
push
mov
loopne
adc
mov
dec
imul
xlat
inc
pop
loope
incb
fwait
mov
ret
test
xchg
cmp
push
dec
mov
mov
add
pop
pop
push
dec
add
add
popa
cli
int3
enter
sub
sub
mov
repz
sahf
addb
or
cmc
jne
popa
ss
jle
mov
subl
fdivl
ret
pop
mov
fcompl
mov
mov
test
mov
mov
insl
pusha
adc
lahf
jnp
cli
imull
inc
mov
add
enter
xchg
into
cmc
push
inc
inc
ja
mov
std
aam
lods
gs
insb
stos
add
arpl
xlat
stc
out
cmpsl
jno
jp
push
icebp
mov
xor
sbb
rcr
fmul
aam
mov
cmp
fwait
movsb
sub
pushf
movl
int3
sbb
jg
clc
dec
mov
es
stos
dec
mov
cmp
dec
jecxz
jg
sti
test
cld
cmpl
aad
jnp
scas
aad
lock
out
pop
cmp
sbb
inc
pop
inc
fs
xchg
jle
xorb
loope
fistl
stos
ja
jae
aam
stc
sbb
sub
aas
js
ret
or
fists
cli
xor
cmpsb
mov
xchg
pop
int3
ss
jge
test
jmp
enter
gs
cmp
shll
mov
nop
jno
mov
inc
or
inc
jl
mov
dec
dec
or
cmp
push
xchg
mov
in
cmp
in
rcl
xchg
adcl
iret
aam
fldt
push
xor
dec
icebp
data16
rolb
hlt
sub
rolb
pop
imul
pushf
cmp
xor
mov
cli
jge
xchg
lock
sbb
lods
inc
test
lret
leave
xchg
arpl
mov
sub
add
les
xor
jae
popf
adc
push
cmpl
xchg
push
jecxz
adc
push
xchg
clc
jl
jmp
push
adc
push
sahf
xchg
push
or
shrb
in
sbb
pop
dec
mov
dec
push
push
mov
icebp
or
mov
push
inc
iret
fcos
rcll
mov
add
cwtl
bound
fwait
jb
sub
mov
into
mov
shll
pop
cmp
mov
xchg
jo
mov
mov
dec
dec
in
jg
cmpsb
ljmp
test
sub
mov
add
xor
sub
fs
mov
sub
fisttps
mov
pop
ret
add
daa
xchg
or
ja
les
aam
sub
addl
mov
outsb
cmp
neg
mov
loop
cltd
adc
sub
jg
adc
andb
mov
jg
out
jne
out
call
add
enter
sarb
lret
notl
mov
adc
cmp
inc
push
jns
pop
dec
sub
testb
mov
cmc
aam
xor
dec
and
and
test
ret
cmp
mov
shlb
mov
ret
cld
mov
mov
test
or
loopne
push
repnz
jnp
sbb
mov
adc
sbb
mov
jge
jns
xchg
test
mov
sub
es
pushf
jecxz
je
lods
sbb
add
xchg
mov
pushf
sbb
jg
sub
fistl
repnz
jnp
pop
add
sbb
jmp
mov
pop
subb
hlt
sbb
in
cmovp
mov
ret
cltd
or
fdivrp
mov
cmc
jo
add
clc
push
nop
xlat
hlt
scas
pop
lods
outsl
sub
rorl
aad
cwtl
pop
mov
inc
jl
cmp
int
or
xchg
gs
xchg
bound
clc
xor
fbld
dec
dec
fbstp
xchg
xchg
shll
inc
popf
aas
inc
jmp
xchg
mov
inc
sbb
gs
push
and
xchg
push
push
push
or
sub
imul
int3
jge
aam
sti
add
add
test
pop
jp
or
xchg
cmp
popf
out
cwtl
cmp
add
data16
xor
scas
jo
mov
daa
xor
enter
insl
cmpsb
jmp
inc
pop
mov
call
xlat
fisubl
mov
mov
mov
xchg
nop
shr
cmp
out
sub
or
push
and
cmp
jmp
jle
cltd
cmp
xchg
pop
pop
cli
dec
and
xor
cmp
jbe
mov
movsb
int3
jbe
ret
cmp
and
ja
jns
out
int
jno
mov
pop
push
movsl
stc
bound
jecxz
push
and
ds
lahf
in
push
adc
dec
xchg
dec
test
mov
ficompl
cmp
aaa
clc
and
push
mov
loopne
add
ficomps
push
gs
pop
mov
mov
dec
mov
push
mov
and
sbb
mov
adc
mov
xor
mov
inc
add
imul
mov
jns
xor
xchg
cli
rcll
lcall
cmp
jb
call
addb
sub
mov
adc
mov
pop
xchg
xchg
in
sub
add
test
es
ljmp
xchg
push
pop
push
aas
lahf
mov
and
inc
dec
mull
cmp
adc
dec
scas
cmp
arpl
clc
push
out
push
sub
mov
sub
sbb
mov
inc
pop
xchg
lds
std
xor
cmp
cmc
sub
cli
adc
das
jmp
cmp
ret
push
ret
add
cld
stc
add
repz
in
stos
mov
xchg
jne
xchg
andb
cmpsb
std
or
sbb
xor
je
adc
popf
xchg
in
outsb
push
or
mov
mulb
mov
dec
test
popf
push
into
push
or
add
inc
xor
mov
push
es
mov
mov
mov
out
in
xchg
jmp
fstpt
cmpb
push
cmpsb
pop
idiv
mov
ss
mov
dec
mov
sbb
pop
mov
loope
out
popa
jg
xor
mov
gs
or
dec
fists
inc
jne
movsl
inc
and
dec
stos
xor
in
push
data16
sbbl
lock
sub
cmpsb
xor
push
int3
rolb
jecxz
pop
out
pusha
mov
push
arpl
cmpsl
lea
addr16
push
filds
mov
scas
pop
pusha
inc
cmpb
lods
push
xor
hlt
sarl
or
sub
mov
je
dec
push
add
inc
lea
imul
jno
fidivl
ret
repnz
xchg
lds
iret
mov
adc
mov
xchg
in
lcall
in
jae
in
cmp
cld
sub
pop
inc
fimuls
int3
mov
arpl
lahf
enter
xchg
repz
data16
push
imul
jl
xchg
dec
loop
jns
push
in
push
xchg
mov
cwtl
sub
mov
cmp
call
cmp
dec
pop
pop
in
rcrb
iret
pushf
fistl
imul
into
repnz
rcll
cmpsb
cmp
mov
inc
adc
cwtl
push
aad
sbb
les
pop
jmp
add
imul
and
jecxz
rcrb
mov
mov
dec
add
das
mov
das
leave
iret
xchg
pop
pop
popa
mov
xchg
xchg
push
out
lds
xor
inc
rcrb
mov
scas
adc
test
mov
jbe
rorl
aas
xchg
icebp
arpl
adc
movq
movb
ljmp
aas
neg
in
dec
xor
pop
xor
sub
dec
push
or
sbb
sbb
fisttps
pop
mov
mov
mov
push
fs
inc
je
sbb
mov
mov
int
jge
cmp
ljmp
test
out
push
in
stos
dec
push
adc
inc
cmp
bound
sub
mov
mov
inc
pop
mov
pop
sub
dec
jp
sti
sbb
inc
enter
pop
dec
pop
ja
daa
pushf
loope
adc
or
in
xchg
cld
arpl
shll
push
xchg
mov
aaa
adc
loope
insl
lcall
lds
adc
les
inc
sbb
in
mov
scas
add
int
sub
movsb
in
or
pop
cmp
xchg
bound
xchg
jle
pusha
cltd
sub
push
push
cmp
test
mov
xlat
repnz
mov
aas
pushf
popa
xchg
js
loopne
rorl
sbb
adc
and
cmpsb
lahf
sub
jmp
sub
js
leave
sub
aaa
jbe
insl
aam
cmc
in
or
mov
repnz
xchg
test
gs
fistpll
sbb
fwait
hlt
std
cmpsb
add
jno
xchg
adc
adc
add
les
xor
pop
dec
pop
mov
cwtl
or
mov
dec
lock
jo
xor
adc
gs
and
add
pushf
cmpsl
ljmp
inc
nop
stc
cmp
mov
sysenter
clc
inc
sub
in
movb
dec
push
mov
lahf
aam
lods
hlt
adc
mov
xlat
xor
daa
das
insl
add
into
test
test
shl
cltd
adc
xchg
jae
add
sbb
inc
ds
cmc
cmp
jg
fildll
jnp
push
test
rol
andl
pop
insb
xchg
push
inc
jmp
add
pop
inc
cmp
outsb
popa
test
call
pop
stc
mov
xchg
xchg
cmp
out
mov
lahf
adc
mov
or
js
fidivrl
pop
or
test
pusha
in
sbb
xor
lret
xor
xor
outsl
test
xchg
shrb
sbb
test
ret
int3
pop
pop
and
imul
mov
nop
icebp
lods
xchg
mov
jno
or
mov
orb
jecxz
mov
nop
adc
icebp
call
sub
sub
jle
fidivrs
scas
mov
mov
out
fdivrs
cmpsl
xchg
mov
inc
enter
ljmp
sti
rolb
adc
outsb
inc
popf
in
push
shlb
mov
in
inc
es
repz
jl
mov
mov
test
fucomp
add
cmpl
mov
dec
test
inc
pop
xor
dec
arpl
mov
in
test
add
sti
and
out
loopne
inc
lahf
enter
movsb
fistpl
xchg
pop
pop
add
cmc
incl
or
iret
scas
mov
fs
mov
sbb
das
push
mov
mov
out
test
dec
or
xor
xor
aad
aam
pop
sub
inc
pop
dec
sub
out
pop
push
push
aam
and
aaa
fnstcw
sbb
pop
sbb
in
sbb
ffreep
mov
inc
imul
pop
mov
mov
mov
mov
lret
cld
xchg
lds
adc
pop
mov
and
sbb
int
dec
lahf
mov
add
pushf
call
sti
adc
orb
jb
outsl
cltd
pop
loope
mov
scas
sbb
divl
out
jns
adc
xchg
out
pop
ret
push
push
dec
test
ljmp
fwait
ss
cmp
push
sub
sub
in
out
loopne
je
adc
inc
mov
xor
ds
add
test
mov
das
pop
aad
movsl
jecxz
pop
mov
loop
lret
movsl
ljmp
mov
mov
sbb
testl
dec
push
add
aam
adc
mov
loopne
aam
and
jge
mov
out
jb
pop
cli
xchg
sbb
insl
xor
iret
std
clc
add
outsl
sti
insb
fimull
xchg
mov
push
outsb
stos
cmp
jg
cwtl
pushf
push
add
pop
or
jns
adc
pop
movsb
cmp
dec
add
fsub
sbb
mov
mov
and
jg
pop
adc
push
lock
xor
pop
sub
divb
mov
and
dec
push
ss
lcall
cld
add
adc
outsl
mov
lods
jp
cmpsl
fldt
mov
sub
pop
xor
sbb
fldt
adc
mov
jo
jg
dec
mov
inc
out
sbb
test
jb
jg
push
xorl
shll
and
loopne
repnz
push
mov
and
pop
add
adc
cmpsl
inc
es
mov
mov
loope
mov
pop
shr
inc
insl
out
jl
ja
dec
xchg
or
mov
pop
movsb
shll
adc
stc
xor
mov
fyl2x
lock
mov
aad
or
out
or
mov
jecxz
or
adc
push
je
arpl
jecxz
repnz
add
xlat
sub
pop
push
cmpsl
mov
out
lods
clc
sub
pop
dec
cld
lock
xchg
add
xor
test
adc
mov
adc
dec
popf
sbb
into
push
pop
leave
aam
repz
xchg
je
imul
push
ljmp
xchg
shr
movsb
xor
xor
pop
mov
add
add
inc
notl
lods
scas
inc
push
or
gs
aam
jae
adc
jl
sbb
xor
cld
aad
sub
push
add
xlat
aad
mov
sub
xchg
pop
pop
sub
ljmp
sub
aas
js
xorl
das
call
and
ja
or
mov
jl
nop
stc
dec
inc
mov
inc
cmp
lcall
popl
xchg
orb
repz
xor
mov
ds
adc
cmp
ljmp
push
jb
push
and
or
leave
outsl
push
mov
cltd
int
movb
mov
lahf
dec
xchg
inc
mov
and
pusha
or
cltd
pop
jbe,pt
fwait
fs
imul
inc
xor
sub
cltd
or
data16
and
test
adc
inc
lahf
mov
dec
jl
pop
fs
pop
mov
pushf
pop
ljmp
pop
xchg
into
mov
outsb
jb
stc
cmp
cmp
jns
pop
pop
adc
daa
stos
sbb
lahf
sub
les
jle
movsl
pop
cltd
jns
xor
adc
leave
push
and
ficoml
mov
loop
cmpsb
push
pop
cmp
dec
jmp
loope
and
cli
pop
pop
pop
jg
pop
sbb
jg
dec
arpl
lcall
out
int3
sbb
xor
mov
pop
pop
imul
mov
cld
jg
cmp
pop
arpl
cli
push
add
push
and
mov
xchg
pop
dec
adc
mov
cmp
adc
daa
mov
int
stc
xchg
mov
stos
inc
adc
adc
inc
js
sbb
cmpsl
ljmp
ficoml
outsb
fisubrs
bound
jle
or
dec
notl
inc
add
aad
mov
dec
push
pushf
arpl
pop
sub
jl
fadd
popf
mov
push
pop
mov
jae
add
adc
jl
sbb
pop
mov
jne
les
rcrl
xchg
or
stos
cli
pop
cmp
or
jg
jg
rcrb
aas
cmp
test
popf
sbb
dec
adc
insl
mov
mov
stc
mov
push
scas
inc
xchg
or
mov
bound
push
and
lahf
inc
mov
pop
or
test
and
push
fisubs
sbb
outsl
mov
sbb
mov
sub
out
or
gs
mov
fwait
mov
sub
inc
lret
lds
shrb
xor
dec
mov
popf
cli
cmc
adc
fnstenv
lret
mov
mov
push
pushf
add
insb
pushf
notb
and
mov
clc
dec
xor
std
ja
jg
xchg
inc
mov
sub
sbb
sub
pop
dec
add
xor
in
dec
bound
sbb
mov
lret
addr16
fld
pop
and
cmp
insb
orl
call
rorl
fstps
sahf
iret
cmp
push
test
adc
inc
sub
pop
inc
aam
inc
mov
pop
sbb
push
add
aaa
adc
xor
jne
iret
cmp
movsb
pusha
jo
xchg
rorb
enter
inc
xor
bound
lea
rcr
or
aam
mov
adcl
sbb
stc
pop
in
fcoms
loop
sbb
sarb
es
and
and
jecxz
aaa
mov
fadd
int
sub
fidivrl
movsl
dec
shlb
int
adc
fwait
or
or
in
xor
loop
inc
mov
ss
filds
daa
clc
insl
lret
js
iret
cmp
out
adc
lods
loopne
push
push
int3
insb
pushf
into
icebp
stos
jne
fadd
mov
pop
dec
arpl
mov
fnstcw
cmpb
jle
out
ja
lea
mov
mov
jnp
push
pop
lcall
add
lcall
and
call
dec
aad
pop
mov
arpl
push
inc
insb
add
cld
inc
mov
ja
leave
lds
data16
xor
xchg
movsb
andl
mov
mov
popa
cmp
shlb
cmpsl
outsl
jns
push
aam
xor
mov
adc
xor
adc
jnp
lods
fnstsw
sbb
cltd
jnp
pop
or
dec
jge
mov
mov
cmp
mov
loope
pop
sub
das
hlt
push
es
dec
dec
iret
jnp
mov
dec
cmp
push
pop
jl
mov
push
mov
retw
mov
add
les
fsubp
in
insb
sub
jns
test
mov
rcll
and
cmp
push
fimuls
aam
pop
or
push
push
aad
push
inc
mov
or
pop
ret
cmp
iret
inc
cmpsb
iret
cmc
std
cmc
sbb
and
imul
jns
inc
scas
nop
mov
fwait
xchg
outsb
cmp
cs
fisubrl
dec
iret
inc
ficomps
cld
pop
fs
pop
enter
rolb
adc
test
mov
cmp
mov
fsubs
sub
and
cmp
cmpsb
call
int3
mov
sub
inc
push
lods
insb
mov
ret
fmuls
dec
xor
divb
lods
loope
nop
mov
sub
bound
push
insb
add
shlb
inc
add
fildll
adc
aaa
push
or
or
cli
imul
outsl
call
or
loop
push
gs
xlat
incb
jl
lock
sbbl
add
jecxz
push
pop
stos
les
mov
mov
outsl
xor
nop
cltd
fldenv
add
negl
add
cmpsb
xor
movsb
adc
lods
dec
inc
cmpb
mov
lcall
push
test
push
pop
xor
inc
clc
cmpsb
loopne
push
inc
int3
daa
pop
jo
or
sahf
lret
mov
mov
mov
inc
cwtl
xchg
pop
sbb
mov
std
test
cmc
lods
scas
rorb
push
or
mov
mov
cmp
jg
scas
test
in
xchg
sub
or
dec
cmp
xchg
jns
add
mov
mov
inc
mov
gs
fwait
roll
jae
mov
jne
in
loop
adc
inc
mov
ficoml
imul
cmpsb
lods
lret
imul
adc
cltd
add
cld
test
cmp
into
scas
lcall
inc
lock
lahf
insl
cmp
pop
xor
dec
test
push
je
test
dec
sti
dec
in
mov
add
sti
jno
dec
daa
call
test
sub
dec
adc
out
cmp
es
imul
lods
stos
xor
cmpsl
mov
mov
adc
dec
scas
inc
sub
mov
out
cmp
pop
insb
sti
xor
dec
jg
shl
and
clc
xchg
out
hlt
mov
lret
cmp
pop
mov
xchg
inc
das
ja
dec
sub
add
in
or
add
cmc
leave
subl
fwait
mov
mov
dec
or
and
inc
cwtl
mov
mov
xor
inc
adc
rcrb
sbb
out
pop
stos
xor
les
js
pop
outsl
lods
mov
inc
fsubrl
daa
sti
insb
sti
in
in
add
mov
testb
mov
xor
es
std
mov
inc
dec
mov
fcoml
out
mov
jl
jl
fstpl
jns
pop
mov
es
leave
jno
movsl
adc
xchg
sub
jb
jmp
and
cmpsl
loop
mov
cmovnp
and
mov
das
push
loopne,pn
mov
orb
ds
cmp
dec
jnp
in
cmc
sti
cmp
stos
xchg
cld
aaa
in
daa
add
daa
outsb
xor
leave
add
aad
sar
jns
dec
cmp
pop
test
js
fdivrl
test
mov
popa
movsl
addl
sub
lahf
icebp
inc
xchg
jle
pop
cmp
inc
xor
xchg
mov
mov
pop
jns
or
mov
sub
xor
and
fsubrl
arpl
outsl
in
inc
xchg
inc
xchg
jecxz
push
repnz
loopne
push
or
push
jo
add
push
scas
test
jmp
lret
mov
icebp
mov
pop
sbb
sub
aaa
sub
ret
pop
je
sbb
xchg
mov
ret
push
stos
jg
testb
fisttps
sbb
jbe
ja
mov
fwait
mov
inc
ljmp
rcll
push
push
jl
cmpsb
mov
jge
imul
dec
nop
bnd
pop
popf
dec
dec
mov
or
sbb
aad
inc
pusha
xchg
jl
movsl
fwait
xlat
fcoml
out
test
rorb
dec
dec
es
ds
xchg
call
loop
movsl
js
out
push
scas
sti
mov
jae
mov
ss
push
iret
stc
aaa
loope
mov
divps
aad
sub
mov
xchg
ja
mov
sbb
pop
push
add
frstor
ret
dec
iret
and
pop
xchg
nop
cmpl
mov
jge
or
jge
xor
stc
mov
out
in
sub
push
mov
mov
cmp
stc
les
int3
mov
sbb
adc
ret
push
ret
ret
bound
mov
cmpsl
mov
jecxz
lahf
dec
sbb
nop
push
pop
sarl
mov
jge
sub
cmp
rorl
lret
push
scas
mov
xchg
ja
sbb
fwait
call
inc
mov
in
out
dec
mov
cld
sbb
xchg
dec
and
dec
sbb
cmp
jge
xor
mov
daa
and
mov
out
mul
cli
rclb
popa
popf
push
aas
mov
xchg
pop
pop
sbb
xlat
pop
sbb
mov
pop
es
adc
mov
shlb
sub
mov
mov
out
mov
cmpb
leave
mov
sub
aam
push
add
cmp
scas
pop
fwait
mov
inc
sub
dec
out
mov
jno
mov
push
insb
mov
xchg
cmp
lcall
mov
inc
popf
rcr
push
les
xchg
push
dec
fsts
and
mov
pop
mov
inc
xor
add
mov
loope
push
and
jbe
sbb
sbb
sbbb
pop
push
or
fwait
inc
sbb
ss
ret
add
adc
add
repnz
pushf
xchg
inc
cmp
sbb
mov
inc
lahf
pop
dec
pop
rclb
hlt
loope
push
jecxz
push
addl
iret
pop
xchg
jb
jo
or
inc
mov
dec
int
push
adc
push
mov
sbb
daa
mov
shl
and
nop
push
sbb
xor
ljmp
mov
jb
test
dec
out
push
call
fadd
mov
lods
sub
mov
rorl
decl
shl
add
pop
cs
and
cmpsl
pop
ds
push
leave
setp
out
repnz
daa
mov
cld
ljmp
cmpsb
into
mov
das
loopne
stc
enter
pop
lahf
repz
les
xor
std
and
int
arpl
or
lret
pop
mov
push
push
jp
iret
inc
sub
add
mov
fistpll
cmpsl
lods
add
or
inc
subl
lldt
jecxz
xchg
push
bound
inc
adc
pop
bound
imul
nop
fsubl
xchg
sub
int3
mov
push
mov
push
data16
mov
xchg
mov
dec
xor
jle
sbb
lcall
pop
sbb
fisubrs
cwtl
test
aaa
jo
push
rclb
loope
mov
icebp
scas
cwtl
mov
aas
aam
loope
repz
adc
sub
mov
data16
cmpsb
xor
adc
xchg
add
cmp
inc
mov
mov
cltd
in
and
out
mov
iret
pushf
ljmp
cmp
shr
push
mov
and
cltd
dec
push
das
test
push
fiadds
xor
xor
inc
arpl
scas
push
loopne
scas
cld
inc
sub
push
push
jb
popa
out
loopne
xlat
pop
pushf
imul
push
inc
xchg
xchg
pop
lods
xchg
jns
cli
leave
popf
sbb
repnz
jns
fs
xor
dec
xchg
add
add
fistpll
xor
jno
aaa
imul
add
inc
in
jmp
loope
dec
hlt
sbb
daa
cld
sti
and
cltd
aas
inc
movsl
add
out
mov
pop
xchg
cmp
xchg
aas
nop
insb
sbb
pushf
sub
cs
mov
dec
pop
adc
movaps
ficomps
out
cwtl
inc
out
or
cmpsb
jae
pop
icebp
test
icebp
sahf
hlt
sbb
pand
and
pop
fmuls
push
push
mov
test
iret
loope
xchg
roll
ret
or
pop
mov
lahf
out
cmp
ss
cltd
pop
cmp
push
lahf
add
mov
mov
push
mov
xor
hlt
insb
xor
mov
subl
pop
or
movsb
lods
add
addr16
push
arpl
pop
add
mov
inc
scas
pop
sbb
notb
inc
imul
mov
push
inc
icebp
frstor
ss
cmpsb
ret
cmpsb
jne
jo
aad
clc
inc
inc
push
cmp
or
xchg
fistpl
outsb
pop
mov
xchg
adc
outsb
cltd
adc
loope
jecxz
jo
sub
std
sub
inc
xchg
push
push
mov
mov
aaa
push
adc
push
push
lcall
and
lret
das
inc
push
jne
mov
test
xlat
fcmovu
mov
inc
gs
pop
loop
fiadds
cmp
scas
mov
test
add
push
fists
add
inc
bound
arpl
xor
or
jne
add
insl
xchg
dec
enter
movsb
movsb
mov
scas
xor
loope
xchg
aaa
loop
js
inc
and
in
pop
iret
mov
xchg
jbe
or
mov
sub
or
dec
iret
out
stc
cmp
or
add
add
and
sub
sbbl
out
nop
pop
xchg
scas
into
and
testl
stc
pop
sub
fldcw
imul
mov
and
cmpsl
xor
aad
fs
xor
js
push
aaa
adc
inc
push
daa
sbb
lds
mov
cmpsb
gs
xor
lret
ss
aad
maskmovq
testl
push
movl
or
sti
aad
out
in
clc
jl
xor
popf
push
lret
lock
sahf
mov
ds
xor
out
dec
cmp
pop
xor
jb
cmpsb
mov
xchg
lret
aad
aad
lahf
cmp
adc
jo
aaa
mov
cmpsb
cltd
repz
mov
shr
bound
pop
lds
adcl
inc
aas
insb
push
jnp
enter
mov
pop
and
mov
stos
inc
cwtl
in
int3
popa
hlt
cwtl
insl
cmpsl
or
into
and
xchg
inc
pop
dec
sub
jge
xchg
aaa
dec
jnp
loope
fmulp
insl
adc
push
pop
js
mov
mov
dec
sbb
dec
jg
iret
cmpsb
sub
in
mov
lret
sahf
inc
add
lods
in
leave
test
mov
enter
jo
xchg
popf
pop
in
adc
stc
aam
fcmovnb
sub
loop
sbb
cmp
loope
pop
out
loope
push
aaa
mov
aaa
dec
ficoml
jmp
jge
cld
imul
dec
jg
cli
mov
mov
inc
or
inc
stc
and
xlat
xchg
das
xchg
sub
xor
test
imul
les
ret
jecxz
xchg
mov
mov
loope
adc
pop
push
imul
stos
in
and
lds
in
lds
mov
push
subl
push
std
add
fidivs
push
rcrb
call
les
std
dec
lods
ds
push
test
push
push
or
cli
imul
les
xor
inc
addb
cli
mov
es
adc
mul
icebp
addr16
jbe
xchg
mov
mov
inc
xorl
sbb
xchg
jne
enter
out
mov
push
jp
imull
std
stc
inc
mov
push
outsb
int
sbb
push
testb
cmpsl
add
dec
das
dec
leave
aam
pusha
xchg
or
xor
jp
adc
push
mov
pop
cmp
cmpsb
adcl
int3
jg
les
es
repz
sub
lods
or
mov
sarb
dec
out
sub
in
insl
mov
dec
inc
pop
hlt
int
pop
movsl
fcomip
or
inc
pop
and
ret
pop
pop
cmp
mov
xchg
and
jecxz
cmp
mov
push
sbb
pusha
cmp
mov
xor
cwtl
add
push
push
xor
ss
xchg
sbb
jnp
sub
add
and
addr16
and
sbbl
jno
xlat
jae,pn
mov
xor
inc
mov
test
and
inc
cli
ss
sbb
hlt
xchg
imul
testl
add
and
push
inc
mov
jmp
lret
jg
fs
rcl
cmp
dec
cmp
mov
push
cmp
out
es
jne
movsl
das
cmp
mov
je
into
and
dec
mov
aam
outsl
sbb
movsb
fsubs
mov
sbb
push
adc
dec
adc
inc
pop
ds
inc
or
adc
adc
xchg
push
fs
push
flds
mov
mov
mov
mov
fwait
add
shll
imul
or
jle
push
popf
sub
mov
pop
adcb
shrl
ds
in
fcomp
es
rclb
arpl
sbb
shrl
das
movsb
popa
push
xor
push
shrb
push
mov
testb
add
lea
fisubs
add
xchg
in
fnstenv
adc
xor
or
popf
subl
xor
inc
sti
or
mov
jecxz
stc
mov
es
fsubr
mov
movsl
push
iret
stos
mov
jmp
or
push
mov
je
inc
push
mov
inc
push
mov
fcomi
data16
clc
loop
dec
outsb
or
pop
ficoml
mov
xchg
jle
jecxz
in
repz
sub
or
xchg
and
xchg
cltd
pop
dec
in
sbb
xchg
fwait
in
scas
aas
mov
and
test
dec
mov
mull
pop
push
test
outsl
cli
out
inc
sub
sarb
sbb
jg
aas
orw
jp
scas
add
pushf
popf
mov
in
push
inc
xchg
add
aad
cmpsb
and
jmp
dec
lret
xchg
stos
add
cmp
aad
stc
sahf
xchg
mov
xchg
gs
bound
adc
push
pushf
lret
std
adc
sbb
mov
dec
mov
sbb
addr16
xchg
inc
mov
icebp
fmull
dec
add
rcl
pop
stc
cs
js
cmp
jmp
dec
adc
mov
in
dec
cmp
pop
dec
push
jo
jmp
fdivrl
mov
movsl
jp
add
dec
out
rcrb
xor
mov
adc
pop
inc
mov
mov
lods
and
aad
lcall
or
mov
mov
mov
inc
pusha
dec
dec
aaa
push
sbb
mov
sbb
andl
loope
cld
sub
jbe
mov
outsl
lds
mov
fwait
lods
cmp
fcmovnbe
movsb
pusha
lods
xchg
sub
test
icebp
lcall
clc
cli
shl
mov
dec
push
sub
push
mov
cmp
mov
jbe
mov
adc
js
outsb
inc
sbb
lcall
sbb
xchg
dec
fistl
pop
cmc
lcall
in
mov
xchg
lds
arpl
mov
xchg
push
ss
insb
pop
mov
mov
scas
cli
pop
xor
out
movsb
stc
popa
inc
cmpsb
pop
pusha
out
lahf
subl
out
fistps
movsl
icebp
fnsave
jecxz
in
mov
mov
jp
es
das
rolb
in
outsl
sub
lret
out
repz
inc
rcll
sub
push
ficompl
dec
aas
sub
ja
into
fistpl
and
pop
dec
inc
test
stos
lea
inc
lea
leave
sbb
je
mov
scas
movsb
mov
sahf
inc
jmp
nop
cli
rcl
jne
push
jg
sbb
lock
fidivs
gs
push
dec
sbb
xchg
insl
pushf
or
das
lahf
iret
push
xchg
jmp
pop
cmpsl
adc
xorb
mov
mov
fdivrl
popf
push
dec
sbb
or
sti
and
popf
sarl
and
mov
outsl
arpl
idivb
mov
and
push
lds
loop
add
notb
int
lahf
add
jae
mov
clc
fadds
fadds
push
and
cmp
leave
aam
mov
dec
mov
or
sub
int
and
in
sti
jmp
push
rclb
fbstp
mov
loope
push
and
or
push
stc
faddl
pusha
adc
mull
jp
sub
xchg
fdivs
and
mov
fisttps
sbb
sub
xor
aas
sub
cld
or
inc
dec
sbb
pop
and
mov
and
xor
pushf
cld
ljmp
fcomi
add
repnz
orb
lret
jecxz
xchg
sbb
push
dec
add
jmp
cs
mov
jae
push
xor
outsl
push
mov
fisttpll
pop
xchg
js
iret
enter
and
scas
mov
or
popa
adc
mov
lock
mov
sbb
mov
add
iret
lods
inc
nop
hlt
aam
push
mov
mov
in
mov
pushf
push
mov
and
jo
push
and
hlt
mov
jo
inc
add
fisttpl
xor
push
or
cmp
sbb
sbb
out
or
ss
mov
push
push
cmp
stos
ret
jg
jmp
jge
dec
and
filds
dec
sbb
xchg
add
in
or
cmp
or
sbb
mov
aad
test
cs
fs
loopne
popa
inc
xchg
arpl
xor
scas
xchg
xlat
jmp
jns
js
jp
mov
imul
in
dec
out
mov
xor
imul
in
movsb
inc
push
xchg
jp
in
leave
in
out
or
insb
sub
test
mov
xchg
cmp
mov
sarb
lret
xor
sbbb
cmpsl
cltd
push
sub
push
jge
shr
xor
insl
subb
loop
cmpsl
imul
leave
push
pop
fwait
sarl
js
or
sbb
sbb
movsb
dec
dec
xorl
adc
fisubrs
sub
jne
cmp
mov
mov
mov
stos
in
std
add
mov
orl
xlat
inc
lock
sub
jle
xchg
ss
and
out
cmp
xor
pop
jmp
sarl
jae
push
fs
fwait
mov
dec
adc
test
adc
addl
mov
mov
rorl
push
pop
cmp
int
icebp
adc
cli
inc
lcall
adc
stos
mov
inc
scas
insb
cmp
push
out
mov
xchg
stos
pop
call
nop
add
test
or
mov
fisubl
arpl
int3
sbb
mov
inc
fcmovb
loope
dec
fiadds
cmp
pop
xchg
mov
clc
adc
lcall
js
repnz
inc
sub
fs
dec
dec
jb
mov
lret
inc
xlat
fs
dec
dec
pop
jmp
push
lcall
adc
xchg
rcl
cltd
leave
gs
and
push
loope
xchg
fnstcw
cmp
cli
sahf
addl
cmp
pop
daa
rcll
dec
jmp
push
dec
dec
push
frstor
loop
mov
push
pop
shll
sbb
clc
mov
jl
rorl
inc
mov
pushf
bound
call
inc
movsb
adc
lret
mov
movsl
xor
ret
adc
sub
jl
add
sub
popf
adc
mov
xchg
cmp
scas
or
mov
add
xlat
cmp
in
ljmp
int
xor
in
js
das
in
int
fisubs
stos
into
fbstp
lods
in
add
fwait
lods
in
fisubl
push
dec
xchg
mov
mov
mov
das
cmpsl
xor
popf
in
bound
lcall
adc
mov
ret
nop
xchg
ret
adc
sub
jo
int
test
push
daa
lcall
arpl
repz
cld
lods
or
mov
push
pop
pop
sub
mov
lret
fsubr
push
popa
add
imul
sbb
adc
fbstp
dec
stos
cmpsb
and
ficomps
repnz
iret
aas
pushf
mov
sbb
cmp
packsswb
mov
xchg
test
shll
popa
jecxz
or
mov
lock
push
dec
mov
jne
mov
insb
adc
push
mov
inc
cmc
cmp
rorl
mov
xchg
pop
aam
adc
push
add
and
movsl
add
nop
jp
xchg
jl
leave
xorl
repz
imul
adc
xor
push
repz
jb
sub
fdivs
iret
push
dec
sub
pusha
stc
cli
stos
pop
bound
pop
mov
imull
enter
cmp
js
mov
ljmp
sahf
ss
cmp
inc
pop
scas
or
dec
cli
xchg
pop
pushf
xchg
xchg
loope
movsl
lods
jecxz
testl
repnz
pop
aaa
sbb
dec
pextrw
pop
fldl
pop
cmp
test
xor
adc
adc
rcr
push
xlat
js
mov
inc
mov
int3
xchg
lcall
rolb
inc
aad
ret
aas
sbb
aam
bound
aam
mull
add
stos
mov
rolb
xchg
pop
icebp
daa
loopne
pop
inc
xrelease
jmp
cmp
adc
mov
stos
stc
push
jmp
iret
stos
push
in
inc
test
and
push
add
cmc
sahf
insb
pop
addb
movsl
les
cmp
loope
test
inc
imul
add
jmp
das
or
movsb
nop
and
loopne
jle
imul
mov
mov
cmp
aaa
popa
xlat
and
push
std
in
mov
hlt
bound
mov
mov
popa
rolb
jge
inc
imul
mov
imul
mov
ljmp
popf
push
xchg
mov
clc
stos
add
jle
push
andl
pop
inc
push
mov
enter
stc
fimull
adc
push
imul
jecxz
adc
push
push
stos
jo
adc
xchg
mov
jno
mov
or
ja
inc
call
lds
xlat
push
push
stc
ficomps
test
lods
dec
xlat
imul
mov
mov
sahf
rcr
dec
lahf
ret
jl
push
adc
mov
or
mov
pop
pushf
dec
dec
data16
jno
out
mov
and
mov
repz
dec
aas
fnstcw
cmp
cmp
fstpt
and
lahf
jo
fstpl
jp
std
fcomp
or
jp
mull
push
jmp
dec
dec
push
sbbl
xchg
stc
aaa
mov
idiv
push
shrb
adc
cs
cmpb
int
outsl
mov
jmp
pusha
mov
in
call
idivl
andl
cli
add
outsb
fbld
in
xchg
mov
lods
cltd
scas
into
add
adc
inc
and
repnz
ret
jl
adc
mov
dec
enter
sub
xchg
mov
inc
inc
and
adc
xor
das
jo
and
mov
test
ret
lods
mov
enter
mov
jl
xor
jle
setne
adc
cs
mov
sbb
jne
fnstsw
fcom
fwait
enter
and
sbb
sti
cs
cmc
pop
jl
xchg
lods
into
outsb
inc
pop
popa
adc
repnz
pop
add
jg
adc
adc
enter
test
aam
mov
mov
xchg
mov
fsub
movntq
out
mov
xchg
xor
arpl
outsl
and
push
and
std
and
in
push
out
mov
sub
or
outsb
pop
test
pop
pop
adc
sbb
rolb
enter
add
sub
out
repz
mov
scas
mov
dec
insb
mov
aam
push
ja
shl
mov
mov
mov
mov
leave
pop
insl
mov
ja
sbb
mov
add
add
into
xchg
dec
repz
cmpsb
and
test
add
fdivr
mov
pop
dec
out
push
cmp
and
fcmovnb
xor
movsb
sbbb
es
adc
lock
rolb
lods
aad
adc
les
add
dec
xor
adc
pop
push
outsl
push
sarb
fdivrl
aam
lea
and
fnsave
jnp
adc
cmp
inc
and
rorb
pop
pop
loop
lea
jns
adc
add
inc
pushf
enter
in
iret
out
aaa
mov
jecxz
pop
fwait
inc
aas
push
mov
cmc
mov
out
sbb
cli
lods
push
xchg
push
dec
add
push
sbb
daa
or
lods
pop
xor
pop
stc
out
call
jbe
add
shlb
loope
fidivrs
leave
mov
jp
ror
fisttpl
add
lods
jecxz
dec
test
icebp
pop
adc
lods
push
lahf
fisubrs
fimull
pop
jg
enter
mov
cmc
inc
lea
ljmp
mov
xchg
les
js
cmpsl
out
mov
jle
cmc
mov
and
xor
and
or
mov
imul
enter
or
cmp
push
xor
cmp
jb
xchg
and
lea
xchg
cmpsl
add
sbb
loopne
fidivrl
in
mov
mov
jg
and
aas
movl
scas
outsl
xchg
inc
xor
cmpsl
aam
hlt
repz
push
stc
jp
sti
mov
mov
sti
mov
ljmp
or
cmpsl
mov
rcll
jg
icebp
push
dec
pushf
inc
xchg
mov
add
sub
out
popa
mov
outsl
adc
sub
push
mov
shll
je
xor
add
jnp
add
or
clc
jae
popa
popa
mov
mov
ret
sti
adc
int
sub
je
inc
push
inc
cmp
jo
ret
xor
aas
lds
xchg
ds
lods
add
ds
fldcw
mov
mov
adc
insb
add
aas
and
test
int
and
dec
les
fldenv
imul
mov
dec
jg
mov
pop
jecxz
leave
inc
lds
ss
out
into
jnp
rcr
pop
inc
adc
mov
sbb
jle
clc
push
sbb
xchg
fcmovu
mov
andb
data16
push
push
stc
mov
mov
cmpsb
add
test
fs
and
sub
rcrl
or
and
incl
or
out
mov
xor
sahf
xchg
in
lahf
cltd
dec
xor
ljmp
movsb
je
lret
jns
add
jo
fisubs
mov
imul
add
inc
insl
popl
pop
adc
add
inc
mov
jmp
and
jno
xchg
mov
push
lahf
jg
into
and
stos
adc
mov
mov
push
mov
pop
into
in
mov
fcoms
mov
inc
push
data16
or
sub
data16
daa
mov
loope
xchg
jg
mov
addr16
jmp
fnstenv
mov
jbe
inc
in
push
lcall
xlat
es
icebp
rcrl
fidivl
sbb
push
sbb
adc
aam
std
loop
ret
ret
jl
adc
adc
test
mov
push
stos
push
js
ret
je
push
sbb
addr16
pop
jg
pop
aam
dec
in
and
adc
in
outsl
xor
and
cmp
movsb
sahf
pop
and
pop
pop
dec
or
loope
aaa
xor
cmc
data16
push
inc
dec
imul
jl
out
inc
aas
shl
pop
cmp
push
into
aaa
fucomip
fimull
add
mov
cmp
push
jb
xor
sbb
pop
jecxz
add
imul
enter
scas
push
or
xchg
inc
pop
adc
in
xor
push
or
jns
xchg
cmp
mov
addb
dec
rorl
lods
ja
mov
pusha
cmp
pushf
cld
add
sub
nop
cmpsl
push
pop
or
xor
inc
inc
adc
add
pop
cld
fimuls
loop
jnp
xor
jne
xor
in
ljmp
cld
push
out
pop
in
xor
xor
rorb
into
insl
fstpl
dec
mov
sbb
dec
xchg
push
lock
or
pop
dec
xor
adc
jae
sub
imul
iret
xchg
jb
lea
gs
push
mov
fldt
lods
mov
pushf
jmp
dec
call
push
test
mov
pop
ds
call
xchg
cmp
ds
jb
cmpsl
xor
lods
add
fmuls
repz
adc
fs
lcall
cmpsl
pop
add
ds
out
das
js
mov
test
divl
inc
stos
jmp
or
test
fs
dec
out
sti
jno
inc
popa
inc
ljmp
lods
outsb
jg
push
sbb
sbb
push
aad
or
push
mov
dec
scas
jl
data16
aas
inc
mov
mov
sub
mov
insb
mov
adc
scas
and
fsubr
lahf
cs
add
push
and
fwait
pop
cmpsl
and
ds
arpl
xlat
ss
roll
mov
jae
dec
xchg
cmp
mov
insb
shrl
lods
cmc
pop
popf
adc
and
mov
sbb
or
std
jnp
lea
imul
lahf
fsts
je
mov
sbb
shrl
push
movsb
nopl
in
cmp
adc
or
dec
sub
jg
sub
xchg
sub
sbb
in
cmp
sub
mov
pop
loop
gs
int3
inc
and
dec
in
pop
ret
jns
push
in
scas
add
adc
scas
push
into
std
pusha
pop
xchg
fcoms
imul
xchg
iret
jae
je
pop
mov
fdivs
rcll
lahf
mov
movsl
fsubrs
sub
cmp
jmp
jnp
xor
cmpsl
sbb
push
popa
push
add
sub
icebp
addr16
dec
popf
addl
mov
push
xchg
mov
test
test
inc
xlat
xchg
or
push
in
inc
cltd
lahf
xchg
call
fldcw
out
ds
push
sub
pop
cmc
mov
pop
xchg
daa
mov
ret
sbb
mov
je
or
mov
and
nop
inc
filds
inc
and
or
xchg
xor
testb
out
arpl
sub
rorb
fcoms
stos
dec
mov
sub
in
fwait
jge
test
arpl
jge
xchg
ret
mov
loope
fdivr
push
es
repnz
scas
mov
int3
xor
and
stos
popa
jp
mov
es
sub
aad
jg
hlt
add
push
addr16
mov
sbb
sbb
xchg
sub
aaa
sub
aas
mov
nop
in
cs
cmp
cmpsl
fiadds
out
subb
faddl
push
pop
rclb
dec
mov
and
sbb
pop
cmp
jg
aad
cld
je
fwait
adc
jg
pusha
fisttps
addl
loopne
imul
xor
in
mov
ret
cld
dec
jp
out
fistps
loope
jbe
mov
sarb
in
inc
es
mov
je
mov
rcrb
mov
and
inc
js
mov
adc
push
int3
cld
xor
es
js
cmp
mov
imul
dec
test
jmp
ljmp
mov
dec
or
adc
stos
leave
dec
cmc
push
push
sub
mov
jecxz
mov
sbb
pop
inc
repz
stos
dec
cmp
or
fdivp
or
rcl
mov
ljmp
pushl
sbb
cmc
pop
lock
push
pop
sub
sbb
scas
shl
cmp
xchg
xchg
dec
push
int
inc
cs
add
test
or
test
lods
mov
inc
mov
je
dec
inc
dec
sub
or
xrelease
rolb
push
mov
inc
jne
cmpsl
xor
inc
imul
and
sbb
scas
jge
loop
aas
xor
add
dec
pusha
cmp
jg
and
loope
imul
jl
add
xlat
std
lds
push
mov
pushf
or
dec
into
pop
inc
imul
ret
inc
and
dec
inc
and
imul
jge
xor
jge
enter
and
popa
cmp
xor
mov
rorb
cmp
jecxz
xor
hlt
imul
or
out
xchg
ret
sbbl
enter
ja
xor
cwtl
pop
ficoml
inc
popf
add
mov
enter
iret
cmpsb
xor
negl
out
xor
push
fldt
mov
jb
or
mov
cmp
sbb
repnz
mov
sbb
mov
fldcw
les
cmc
lock
or
bound
cmpsl
mov
cli
incl
pop
pop
inc
pop
or
push
pop
jo
sbb
sbb
push
loop
pop
cmp
popf
xchg
ret
push
dec
loopne
mov
out
cmpsb
hlt
xor
shr
sbb
add
sbb
inc
sbb
mov
lods
jle
mov
loope
popa
cwtl
stc
dec
and
cmp
add
fadd
js
xor
xor
mov
pop
jne
out
xchg
xor
and
imul
mov
es
mov
int3
cli
sbb
loop
sub
lods
inc
fisttpll
rclb
push
mov
adc
and
push
inc
loopne
out
insl
mov
scas
cmp
les
repz
cmpsb
xchg
outsb
xchg
mov
cld
imul
int3
orl
push
and
adc
icebp
inc
xrelease
mov
xchg
inc
and
mov
icebp
push
scas
dec
adc
scas
loop
mov
lods
or
adc
adc
jp
ljmp
push
or
mov
mov
add
ljmp
shll
xchg
xor
js
dec
popa
mov
pop
nop
jnp
dec
mov
insb
sbb
in
inc
xlat
cltd
imul
mov
jb
inc
and
mov
and
mov
and
sbb
or
mov
cmpsb
les
or
jae
test
pop
and
cmp
ss
imul
xchg
bound
adc
fdivrs
jb
test
es
jnp
adc
push
push
test
adc
jne
cmp
cmpsb
ljmp
pop
hlt
adc
adc
push
aas
sahf
sbb
lock
mov
dec
loope
iret
xchg
and
inc
add
mov
repnz
mov
sub
inc
and
pop
xchg
jecxz
nop
xchg
call
sbb
pop
movsb
push
outsb
arpl
add
aam
jecxz
mov
mov
or
pusha
or
out
out
mov
int
popa
mov
lods
idivl
mov
pop
les
nop
pop
mov
aas
xchg
stos
jecxz
dec
aad
xor
sub
pop
imul
xchg
bound
jp
inc
das
movb
jno
dec
lcall
cld
lods
sub
icebp
xchg
xchg
pop
repz
popf
cmp
imul
lret
sahf
cmpsb
xor
inc
and
scas
add
inc
and
icebp
xlat
jnp
scas
stos
mov
pop
inc
and
pop
inc
in
dec
and
pop
imul
inc
mov
divb
idivb
sub
ret
and
js
mov
lret
sub
cmp
fidivrs
pop
xor
sbb
je
jbe
lret
xlat
or
push
hlt
mov
dec
ds
int3
dec
popa
cli
inc
mov
orb
test
sub
test
fbstp
ret
leave
in
mov
lret
dec
xor
xchg
push
pop
jge
arpl
cltd
xor
ret
push
mov
pop
mov
jbe
les
out
cmp
pop
pop
cltd
push
out
mov
push
test
sbb
pop
fcmovne
dec
mov
mov
sbb
shll
mov
aas
lods
jge
cmc
addr16
shlb
mov
pop
rcrl
sub
sub
push
aam
test
inc
sub
dec
rol
cmp
and
rcrl
push
repz
sbb
les
xor
mov
test
lcall
ja
dec
adc
js
cmp
sbb
rorb
gs
xchg
out
push
mov
dec
mov
mov
rolb
jmp
add
loopne
lds
dec
dec
lock
lcall
sti
jecxz
push
jmp
pop
lahf
jno
out
test
hlt
adc
and
mov
out
popf
add
jge
movsl
push
fistps
jne
sbb
es
pop
or
insb
and
mov
push
xchg
inc
cmc
stc
mov
or
cmpsb
nop
orl
insl
or
cltd
xchg
es
cltd
loope
and
std
or
jb,pt
pop
push
aad
inc
stos
add
dec
out
clc
aad
imul
xchg
fmuls
int
shlb
js
sub
jp
fisubl
and
mov
mov
adcb
push
movsl
pop
sbb
dec
js
sbb
jb
sbb
orl
outsb
ss
push
insl
pop
mov
test
cmp
dec
lods
movsb
pop
and
push
das
das
cmp
jl
adc
xor
inc
xlat
mov
mov
sbb
jmp
sub
imul
or
mov
mov
adc
mov
mov
into
adc
cs
jns
es
std
sbb
xchg
mov
popa
mov
es
xor
bound
mov
scas
and
in
test
popa
push
or
sahf
movsb
repnz
mov
lahf
fmulp
or
xor
ss
sub
ljmp
xor
mov
frstor
cmp
mov
addr16
sub
arpl
loop
cmp
cmp
pop
pop
icebp
dec
in
xor
mov
adc
lds
arpl
and
sbb
cmc
fs
jae
and
pop
mov
push
jp
lea
stos
push
xlat
in
test
iret
dec
sbb
lea
mov
xchg
popf
mov
pop
xchg
insl
and
or
jge
outsl
cld
out
jecxz
mov
ljmp
push
mov
in
lock
mov
aaa
loope
pusha
dec
cltd
cmc
idiv
sbb
sbb
mov
mov
mov
jne
out
or
jmp
cmp
int3
fildll
jle
cwtl
mov
dec
aad
ss
stos
jnp
js
iret
fistl
sub
xor
lret
fwait
gs
cmpsl
mov
xchg
in
dec
out
cmc
outsl
fdivs
inc
mov
pop
outsb
inc
pushl
add
pop
gs
call
sub
push
push
out
inc
push
mov
in
pop
push
or
frstor
push
test
dec
mov
xchg
jp
fnstsw
jo
repz
inc
jns
or
stos
pop
rcr
adc
jg
xor
cltd
jo
ss
les
test
out
pop
mov
xorb
xchg
jmp
sbb
int3
pop
andl
loopne
test
xchg
stc
enter
sub
jbe
xchg
lret
xorb
into
sbb
das
fistpl
sub
aas
adc
repz
pushf
sub
call
jbe
idiv
lahf
or
dec
mov
mov
jbe
outsb
pop
ficoml
stos
lcall
imul
inc
mov
xor
dec
xchg
fistpll
mov
addb
popa
outsb
lret
push
xor
sahf
insb
dec
aam
rorb
lret
mov
fwait
xchg
mov
jbe
das
push
xor
pushf
adcl
mov
dec
inc
push
push
cmp
ljmp
ret
leave
jae
jbe
cmp
xor
jae
sti
lret
xchg
pop
sti
adc
mulb
scas
xchg
mov
mov
fwait
jg
arpl
push
or
mov
test
jg
sbb
sub
inc
pop
push
mov
or
scas
mov
dec
mov
inc
mulb
in
mov
mov
pushf
std
sbb
add
inc
imul
jl
dec
sbb
into
in
jae
mulb
scas
push
dec
aam
fucomp
subl
mov
sbb
xor
in
int
test
bound
add
aas
fs
pop
test
fcoml
shll
sub
movsb
aas
mov
xor
popa
inc
lret
add
aas
loopne
push
andb
adc
and
add
orb
sub
add
lret
push
shll
rcrb
push
or
jl
hlt
imulb
mov
out
sarb
or
lock
ds
in
cmp
imul
xor
mov
xor
clc
rcrl
sub
orb
imul
adc
fsubl
sahf
jno
mov
mov
test
push
ja
dec
sub
imul
lret
mov
fisubs
stc
test
mov
adc
push
adc
popa
pop
out
sub
imul
xchg
pop
mov
push
jmp
mov
fistl
mov
dec
into
or
pop
pop
stc
and
push
push
loopne
fadds
xchg
ja
push
aad
add
mov
rcr
add
mov
xor
add
in
ja
imul
xchg
cmpsl
xchg
movsb
ss
fbstp
sbb
je
pop
xor
std
in
cltd
jnp
sbb
jmp
rcl
inc
push
out
daa
test
and
mov
addr16
sbb
mov
cmp
lock
mov
and
fwait
sbb
push
out
jp
lock
fsub
enter
jmp
ds
test
jnp
add
jmp
mov
jae
jno
lods
push
and
mov
push
sbb
loope
popa
aaa
popf
add
lock
shl
xor
test
scas
lret
insl
add
jns
jg
cld
outsb
dec
aaa
iret
lea
sbb
push
mov
dec
shrb
pop
ljmp
in
rcrb
dec
clc
pop
mov
mov
mov
or
in
mov
fistps
mov
adc
xlat
push
dec
test
lret
pusha
popa
mov
jns
fstps
jbe
inc
daa
ret
psrld
rcl
imul
insb
cmc
ret
pop
mov
mov
push
call
je
xchg
les
loop
or
push
push
test
mov
jg
cmpl
push
cs
xchg
pop
fistpll
ror
mov
xor
cmp
sbb
dec
sub
loope
cmp
mov
mov
shll
mov
andb
ss
xor
mov
int3
jl
bswap
fs
mov
jp
stc
xchg
sbb
es
outsl
adc
dec
loopne
repnz
stc
xchg
mov
inc
xor
out
fidivrs
mov
jge
and
jle
dec
shlb
popf
pop
sub
rcr
jmp
cli
lret
js
insl
aaa
jno
test
fs
clc
test
push
or
inc
mov
xor
scas
mov
repz
sbb
ljmp
or
adc
sub
gs
or
sbbl
cmp
hlt
aas
idiv
into
call
int3
int3
std
leave
aaa
cwtl
jmp
sbb
push
xchg
mov
fstps
adc
insl
dec
mov
xchg
jae
push
inc
mov
icebp
cwtl
pusha
enter
jnp
scas
inc
inc
inc
pop
push
pop
stos
ljmp
or
movsb
sub
fldt
mov
pusha
repz
fisubs
les
add
popf
nop
push
mov
aaa
inc
aad
dec
jg
or
in
ja
push
xchg
testb
mov
cwtl
stc
lods
nop
ss
test
and
scas
das
hlt
xorb
stos
mov
push
loopne
mov
sti
mov
popf
cmp
sub
stc
fildll
loop
loope,pn
mov
xchg
add
std
test
mov
bound
mov
jp
inc
rorb
lods
pop
add
xor
xchg
ret
mov
cltd
je
dec
test
pop
and
insb
or
movsl
cli
into
bound
sbb
mov
xchg
popa
enter
mov
xchg
scas
or
xor
loop
aas
cld
jae
iret
xchg
insl
add
fwait
push
scas
adc
sub
call
xchg
or
cmpl
mov
data16
std
mov
dec
int
pop
lds
call
or
data16
push
xchg
fisttpll
mov
add
add
lcall
xchg
imull
sbb
xor
in
movsb
fbstp
popf
sub
dec
lods
stos
stos
xor
pop
push
mov
dec
ss
pop
mov
xor
xchg
pop
dec
sub
ds
into
cmp
lea
jno
subb
mov
in
imul
int
out
sti
cmp
sti
popa
inc
fs
les
ljmp
pop
rorb
inc
andb
out
mov
lods
push
adc
xchg
sbb
jmp
cmp
fidivrl
cmp
into
sbb
sbb
push
sbb
jne
mov
jecxz
pop
mov
pop
fiadds
jbe
cmpl
call
sub
es
rcll
cmpsb
mov
test
mov
sub
push
movl
add
xchg
push
and
xor
push
test
add
cmpb
mov
fimull
stos
mov
movsb
sbb
mov
ds
xor
ret
jge
push
jnp
mov
sbbb
out
arpl
jl
mov
out
pop
adc
or
cmc
mov
repz
and
add
or
sbbl
mov
movsb
aam
insl
mov
adc
test
push
stos
lds
dec
push
or
sbb
aad
rorl
aad
xchg
mov
mov
out
pusha
and
push
cmc
sbb
push
cwtl
pop
repnz
mov
sbb
imul
fmull
pop
mov
imul
int3
mov
fs
orl
add
mov
mov
mov
ret
std
dec
imul
dec
jg
pop
xor
sbb
imul
or
repnz
frstor
aaa
call
jnp
lods
adcb
out
out
int3
ss
mov
pop
jno
xlat
punpcklbw
pushf
xlat
lret
lock
jl
jl
imul
mov
pushf
not
div
pop
in
cmp
insl
pop
mov
or
jmp
add
mov
cld
sub
popf
and
sahf
inc
dec
cmp
adc
jnp
pop
mov
push
lods
ret
lret
imul
repnz
popf
rcrl
mov
pushf
xchg
clc
add
xchg
mov
je
mov
insb
out
and
enter
mov
or
push
mov
dec
loope
cwtl
addr16
arpl
and
filds
daa
mov
dec
or
in
int3
data16
int
out
push
cltd
cmp
cmp
cmp
movsb
mov
push
ds
roll
scas
jb
mov
std
or
ljmp
in
xchg
mov
inc
mov
lret
push
repnz
jl
add
mulb
ret
jg
pop
ss
cmpsl
popa
ss
mov
aam
faddl
mov
nop
inc
test
adc
mov
dec
push
dec
ss
loop
aaa
dec
or
fmull
stos
mov
fstps
lock
test
imul
inc
ret
jo
inc
add
jg
fwait
pop
cmpl
push
in
dec
stos
js
in
jbe
or
stos
jle
sarl
jle
movsl
dec
loop
mov
add
dec
inc
push
out
rcr
mov
inc
and
push
nop
push
cmpsl
push
xchg
movsl
dec
test
mov
inc
je,pt
cmp
inc
js
rorl
sub
jmp
dec
popa
mov
insl
mov
push
adc
mov
mov
push
sub
sub
int3
adc
pop
jae
ffreep
mov
leave
loop
fucomp
sbb
int3
sub
stos
jno
pop
push
mov
cmp
test
es
dec
sbb
es
and
lods
lea
jae
fwait
div
ja
sub
mov
pop
sahf
xchg
lahf
movb
lcall
jmp
xchg
out
jp
mov
mov
bound
shlb
dec
mov
add
push
jge
aad
or
xchg
hlt
push
in
arpl
cmc
pop
test
mov
mov
add
mov
and
sbb
or
cmpsb
aam
je
jmp
cmpsl
cmp
std
mov
fsubrp
cwtl
fs
mov
aam
stos
shr
push
pop
sti
lret
notb
out
jle
add
jne
jecxz
movsl
jle
pop
jae
sbb
sbb
push
pop
push
dec
mov
insl
xchg
ficomps
or
ret
dec
jmp
inc
rorl
and
jo
cmp
xchg
int3
sub
rorb
xchg
sub
in
xchg
jmp
mov
mov
dec
push
mov
cmpsb
xchg
negl
fs
push
sub
push
mov
fadd
xlat
cmp
out
imul
dec
mov
add
insl
fsts
jecxz
pop
stos
int
pop
push
dec
sub
lret
out
dec
cmc
lret
and
stos
ss
iret
xor
mov
lods
jge
out
xchg
outsl
cmp
lea
jmp
sarl
loop
pop
fbstp
mov
sub
es
imul
in
dec
sub
add
loopne
push
roll
inc
jp
fwait
lret
ja
lods
sti
mov
ss
and
add
sub
push
sub
ds
fdiv
jg
sub
mov
add
imul
mov
mov
in
in
jne
jbe
or
mov
movsb
cmp
sub
stc
call
mov
mulb
adcb
cmp
sub
rcrb
xchg
lcall
xor
mov
adc
jmp
clc
sbb
aas
adc
outsl
in
imul
movsl
outsb
push
jno
jnp
stc
push
mov
aad
hlt
subl
jns
sti
dec
dec
sahf
inc
jne
mov
or
movl
jno
sub
inc
push
adc
cmp
sti
lret
push
inc
cmp
mov
push
mov
stc
xor
lcall
imul
jno
mov
icebp
and
fdivrl
push
orb
roll
pop
sub
test
sarl
and
popa
mov
or
xchg
xchg
mov
mull
in
out
mov
lock
test
sbb
or
cli
jp
into
ds
loop
add
jmp
sbb
or
xchg
popa
sbb
push
push
mov
shrl
cli
push
sub
and
data16
movsb
mov
pop
idivb
testl
nop
lods
mov
aaa
lock
sarl
push
ffree
stc
xor
leave
dec
out
shlb
add
mov
mov
loopne
pop
mov
sub
or
inc
orl
add
or
xor
sarb
call
pop
xor
lcall
scas
push
mov
imull
es
or
sub
and
out
loop
loop
mov
and
dec
cmp
ds
dec
mov
shlb
jns
sahf
and
cmpl
lret
lret
sub
test
das
push
shll
dec
pop
mov
shrb
or
mov
or
outsb
adc
ja
mov
or
mov
imul
sub
jg
push
xor
shlb
sub
mov
out
sti
gs
in
mov
divb
push
rep
call
and
mov
gs
inc
shrb
repz
or
dec
outsb
fucomp
das
mov
jns
adc
push
cltd
jbe
pop
mov
jb
mov
scas
nop
mov
fsubs
scas
sub
movsb
sub
icebp
fs
fldenv
dec
hlt
daa
sbb
cltd
add
in
lret
inc
inc
cmp
inc
lahf
xchg
or
jp
push
iret
xchg
dec
arpl
nop
pop
enter
loop
into
jo
cmp
cmp
push
loop
popa
xlat
movsb
mov
adc
mov
pop
mov
dec
in
sahf
jl
ret
mov
cmp
stc
inc
cmpsb
or
and
pushf
sbb
repz
pop
sub
pop
pop
je
xor
clc
andl
xor
pusha
aaa
mov
sarb
iret
out
xor
or
push
test
test
imul
dec
leave
push
mov
jge
add
and
repz
mov
mov
aam
inc
sub
loopne
stos
sbb
aaa
mov
clc
roll
add
jg
sub
inc
dec
xchg
xchg
mov
xchg
pop
pop
mov
stos
adc
int
int3
shl
mov
stc
xchg
dec
jl
les
fsubl
out
dec
in
enter
les
lock
inc
sbb
sub
mov
jmp
fisubs
add
push
out
mov
out
enter
fcmovb
adc
repnz
lods
ret
out
xor
shrb
and
jbe
mov
dec
les
mov
jl
aaa
roll
and
or
jp
test
mov
mov
rcrl
jp
dec
loope
lds
fnstsw
movsl
push
stc
imul
iret
movl
mov
hlt
inc
pop
ret
sub
mov
pop
or
add
test
out
jnp
inc
lods
movsb
pop
sbb
inc
sbb
outsb
mov
add
cltd
sbb
in
pop
inc
dec
outsb
and
cltd
mov
call
ds
mov
and
loopne
sub
mov
pop
mov
arpl
pushf
jns
mov
sub
xlat
pop
mov
int
jmp
daa
out
arpl
mov
cmp
mov
dec
out
push
test
lahf
jo
out
dec
fstp
aad
test
push
mov
dec
aad
lods
sbb
icebp
mov
test
jo
aaa
shl
pop
and
icebp
cld
sub
sar
xor
out
jg
xlat
shll
xchg
ja
sub
aas
push
mov
notb
pop
add
mov
mov
dec
pop
outsb
test
sub
ds
and
xor
arpl
inc
jb
aad
popf
orb
cmp
xor
and
sbb
int3
add
cli
xchg
sbb
pop
sti
dec
xor
popa
xor
mov
shld
out
divl
pop
mull
ljmp
mov
mov
dec
mov
mov
out
xchg
and
mov
fldt
and
insl
xchg
xchg
imul
mov
cmp
lahf
add
dec
cmpb
sbb
push
loopne
icebp
pop
sub
cltd
dec
pusha
mov
pop
cmpsl
test
mov
mov
test
fisubl
ffreep
dec
ljmp
mov
inc
mov
movsb
leave
mov
ds
mov
addr16
inc
jg
mov
push
or
cs
adc
ljmp
xor
push
cmc
inc
mov
mov
pusha
jbe
jg
out
sub
mov
xor
pop
outsl
shr
mov
mov
or
dec
into
push
fptan
rcrl
mov
dec
pop
cmp
pop
and
xor
ret
mulb
push
cwtl
xor
pushf
sbb
mov
mov
test
clc
xchg
xchg
icebp
mov
movl
cmp
and
subl
pop
mov
mov
xchg
popa
repz
rorb
mov
cmp
cmp
cld
mov
cmpsb
dec
cmp
and
jno
jecxz
xchg
pushf
sti
jmp
test
fwait
rcrl
fs
cmpl
mov
pop
add
xor
jp
aam
mov
lret
inc
push
xor
jl
loope
insl
sbb
daa
pop
movlps
pushf
inc
stos
push
lock
sub
ss
jno
scas
aam
inc
push
arpl
cmp
subl
inc
repz
aaa
int
cmpb
dec
adc
mov
mov
jmp
xchg
push
jecxz
jl
or
enter
xor
adc
add
jp
call
and
icebp
xchg
ja
inc
adc
pop
dec
cmc
out
jae
pushf
into
iret
cmp
xchg
mov
orps
insl
sub
xor
dec
dec
add
cmp
and
jmp
test
fwait
inc
sub
shlb
mov
cmpb
dec
mov
push
inc
in
sahf
outsl
pop
push
adc
outsb
cs
jp
inc
cli
cmp
test
push
mov
leave
pop
lret
inc
push
pop
sahf
mov
and
xlat
std
push
scas
sub
mov
dec
or
add
lahf
mov
sub
shrb
out
and
ljmp
repnz
push
adc
lret
xchg
push
jge
mov
ljmp
sub
fnstcw
or
icebp
or
xor
and
xchg
nop
jecxz
fidivl
loop
mov
test
cmpsl
jo
out
dec
enter
pop
sbbb
ds
loope
icebp
jno
xor
rcrl
mov
jno
lds
mov
mov
mov
mov
gs
push
push
push
inc
lret
ret
outsl
xor
dec
subl
xchg
icebp
lods
push
mov
xchg
mov
mov
jns
clc
and
imul
cmp
fdiv
ja
xchg
std
data16
inc
mov
scas
sub
iret
add
js
mov
out
mov
mov
mov
pop
ret
ret
cmp
mov
mov
test
jl
lahf
dec
push
pop
pop
cmp
inc
dec
loopne
loop
mov
iret
out
cmp
dec
mov
mov
inc
test
ret
into
insl
mov
nop
loope
sbb
dec
int3
jo
dec
adc
adc
lock
pop
inc
outsl
jl
pop
jne
mov
jb
nop
sbb
adc
push
jo
jl
cli
mov
jae
call
inc
push
test
in
movsb
sub
ret
sahf
fsub
ljmp
daa
xchg
fldenv
adc
loopne
movsb
push
mov
mov
loopne
in
aas
dec
adc
rcrl
fs
test
movsl
pusha
outsl
sub
sbb
and
cld
cmp
gs
int3
ljmp
mov
push
incl
andnps
pop
push
scas
fldl
lcall
shrb
aaa
enter
fisubl
xor
sbb
add
mov
jge
mov
jg
mov
out
sub
mov
sahf
cmp
mov
adc
pop
ss
es
rolb
dec
mov
adc
mov
fisubrl
sub
daa
fadds
cmpsb
sub
jp
fdivr
cmp
push
fnstsw
std
and
or
jl
sbb
jne
mov
push
inc
add
jecxz
mov
and
addb
ret
enter
outsb
into
jne
lock
xorl
and
sahf
lods
icebp
sub
repnz
mov
sbb
test
mov
rcr
push
lret
jno
fnstcw
ds
ret
dec
push
cmpsb
cmp
push
pop
jecxz
mov
dec
mov
out
outsb
sub
jns
dec
push
repnz
adc
inc
push
dec
adc
fimull
cmp
ds
bound
and
dec
adc
push
mov
cld
inc
mov
pop
addr16
sti
xor
add
shlb
das
lods
add
es
sub
stos
cmp
outsb
movsl
lods
add
stos
ud2
push
xor
not
sti
dec
mov
pop
jl
fcom
push
push
mov
fimull
pop
cmpsl
or
and
out
lods
mov
mov
cmpl
add
incb
nop
mov
ds
pusha
test
stc
std
and
jmp
push
popa
or
incl
sub
rcr
out
mov
dec
repnz
jae
mov
sarb
mov
test
fsts
add
daa
js
mov
mov
ret
ja
scas
xor
mov
dec
roll
lcall
std
xchg
dec
or
mov
and
xchg
andb
adc
imul
mov
fidivrl
mov
jnp
pop
gs
jnp
pop
add
mov
mov
into
jno
sahf
arpl
rcl
inc
sbb
je
insb
mov
nopl
add
test
icebp
add
rcrb
sub
jl
and
cmp
das
jmp
push
fwait
in
arpl
and
xor
cld
fdivl
xchg
les
push
xchg
out
testb
cwtl
enter
outsl
stos
push
sarl
stos
sbb
dec
dec
sbb
inc
mov
inc
andb
and
scas
pop
inc
mov
lock
xor
sti
bnd
repnz
xchg
cld
lea
lahf
push
jge
add
sbb
icebp
push
xor
jbe
xchg
mov
dec
push
movsl
into
mov
mov
add
mov
pop
cmp
pusha
pushf
into
pushf
sbb
lods
pop
push
or
and
test
jno
movsl
inc
or
ljmp
lock
cmp
jl
out
add
lret
outsb
aas
xchg
sub
popf
mov
dec
adc
add
jg
jne
es
mov
pop
adc
stc
or
or
int3
icebp
pop
lods
xchg
sbb
jns
aaa
xchg
popf
popa
lods
aas
outsb
push
jmp
dec
cs
or
pop
mov
loopne
jns
xchg
sub
jp
leave
xchg
fdivs
out
cld
call
scas
scas
pushf
aam
shrl
mov
jmp
fisttps
aaa
std
fisubrl
scas
and
jp
dec
mov
scas
lds
jo
mov
imulb
shll
insb
std
popa
in
inc
fsts
xchg
mov
inc
or
mov
gs
mov
jge
jecxz
fidivl
xchg
in
cmp
cmc
mov
enter
icebp
cmp
inc
mov
test
les
pop
inc
mov
jb
cli
push
repz
xor
lds
jne
out
aam
cmc
push
sbb
stos
push
mov
ds
xchg
add
mov
dec
push
mov
add
or
xor
mov
aas
in
xor
clc
xlat
mov
and
cmp
pusha
out
cltd
jecxz
adc
xor
inc
lret
mov
fbld
inc
sbb
xor
mov
cmc
push
mov
inc
orl
sbb
mov
xchg
xchg
test
cmp
test
push
mov
inc
loopne
cmp
andb
push
sub
into
inc
cli
xlat
jbe
idiv
sbb
mov
push
dec
pop
dec
std
inc
xor
push
inc
or
sub
adc
pop
pop
inc
repnz
cmp
sbb
out
sbb
lea
sub
jb
insl
in
test
addb
imul
out
mov
pop
dec
or
sahf
js
shr
out
fsubr
adc
cmc
sub
jno
mov
add
fcmovnb
or
sbb
xchg
push
push
lea
bound
sub
and
loopne
cmp
jp
mov
push
jne
fbld
call
js
push
jbe
stos
rcll
inc
cmp
jmp
aaa
out
stos
dec
pop
sarb
and
or
xchg
cmp
insb
imul
cs
andl
sbb
pop
or
fsub
lcall
ja
mov
negb
jo
lahf
leave
bound
inc
call
lahf
pop
and
and
adc
fidivs
pop
push
xor
jmp
nopl
mov
lcall
shlb
mov
ljmp
add
inc
and
fcmovnb
mov
dec
mov
mov
push
add
jnp
cmp
ljmp
adc
jp
push
lds
popf
lret
push
and
in
jnp
pusha
adc
scas
cltd
mov
push
shrb
and
sbb
cmpsl
xor
pop
add
call
mov
jmp
das
pop
sub
clc
sbb
cltd
sub
adc
clc
xchg
add
sub
and
sub
test
popf
pop
push
mov
loop
dec
ret
cmpsb
sbb
stc
sub
call
popf
and
out
clc
add
fcmovbe
mov
push
sub
or
dec
rep
mov
mov
lret
pop
jp
xor
push
test
push
rclb
rolb
and
cwtl
shll
inc
lock
ja
inc
jae
xor
inc
mull
jmp
rcll
ljmp
sbb
adc
jl
fdivrl
mov
push
dec
pushl
sbb
cmc
pop
imul
jmp
mov
add
cmc
repz
inc
out
mov
mov
xchg
adc
jle
sbb
dec
inc
or
add
jno
xlat
lods
cmp
cs
test
repnz
pop
lea
dec
std
pop
pop
pusha
jmp
fcoml
mov
mov
fiaddl
fidivl
sub
or
testl
cwtl
lods
pop
xor
lods
inc
push
and
popa
sarl
dec
or
insb
add
ljmp
cmpsl
mov
lods
shll
pop
push
bound
clc
or
mov
adc
sbb
sub
call
or
stos
sub
xor
pop
xor
inc
in
pop
imull
and
push
dec
mov
mov
jne
pop
fwait
subb
adc
inc
adcl
jecxz
cltd
xor
mov
lds
inc
and
cld
les
or
sub
push
sub
aaa
in
mov
jbe
into
lods
lods
lcall
int
inc
dec
mov
mov
aas
xor
adc
lods
ds
add
mov
scas
cli
adc
jns
pop
xor
jae
pop
adc
push
inc
cwtl
xchg
or
push
push
roll
sbbb
test
push
out
mov
and
or
mov
mov
imul
rcrl
nop
push
sbb
inc
cmp
and
hlt
mov
rorl
xor
and
idivb
xlat
hlt
mov
lret
lea
cltd
ret
call
call
popf
mov
xor
fnsetpm(287
push
popa
jae
dec
test
push
xlat
in
pop
addl
incb
inc
pop
aad
test
mov
mov
ret
mov
xlat
sub
lahf
xchg
fisubrl
fcmovne
scas
jnp
in
jnp
or
cmp
push
frstor
fidivl
cmp
xchg
inc
dec
jmp
xchg
xor
scas
fldl
xchg
mov
xchg
fsubl
fcmove
cld
mov
lcall
or
inc
pop
cmp
in
ds
jle
push
sub
xchg
cmp
push
out
xchg
sbb
aaa
pop
aas
insl
insl
or
xchg
xor
inc
pop
xor
lods
les
test
lret
repz
xchg
out
pop
xor
addr16
push
sti
test
fadds
ljmp
outsb
js
or
and
sbb
or
push
mov
movsl
movsb
xchg
add
dec
lret
dec
inc
test
sbb
arpl
mov
mov
sahf
dec
pop
inc
mov
cmp
xchg
mov
adc
mov
pushf
mov
xchg
sub
pop
mov
test
sub
loope
or
dec
into
sahf
mov
movsl
xor
test
shr
jo
ds
in
pop
adcb
push
rolb
inc
pop
inc
push
mov
cmp
sbb
mov
stc
stc
mov
adc
sbb
call
adc
aad
dec
inc
xchg
jb
imull
cli
js
aas
mov
in
sub
dec
cs
mov
jl
mov
push
movsl
shl
test
ret
sub
outsb
int
push
imul
or
std
mov
ss
mov
xchg
ret
or
fimull
and
and
jecxz
adc
js
xor
pusha
sti
push
jne
cmpsb
mov
jnp
adc
pop
or
push
sbb
in
pop
mov
daa
or
inc
mov
sti
mov
xchg
fdivr
pop
dec
jb
inc
iret
jae
jne
rorl
and
jle
and
xor
loop
add
pop
add
sbb
push
das
mov
mov
inc
mov
stc
imul
stos
xchg
cmp
jl
sub
or
xchg
movsl
les
and
ror
aam
or
cmc
shrb
mov
mov
cltd
and
adc
inc
push
int3
dec
mov
or
or
sbb
out
imul
push
out
test
fisttps
adc
test
repnz
dec
cmp
dec
shl
dec
imul
sub
jb
xlat
dec
jecxz
sbb
adcb
add
inc
pop
scas
pop
sub
push
and
in
imulb
stc
or
sbb
test
and
fidivrl
and
jbe
daa
clc
jecxz
sub
and
xor
fists
and
or
rcl
push
jle
es
arpl
movb
mov
sbb
das
leave
xchg
sub
mov
in
aas
dec
and
enter
xchg
cmp
iret
dec
pop
lods
out
xor
or
push
scas
sahf
jmp
push
mov
xorb
xorb
ja
fdivrs
sub
lea
add
dec
clc
inc
or
mov
das
mov
cmp
rorb
aam
mov
in
mov
inc
or
aam
or
sahf
test
push
pop
jp
lds
jo
sub
in
mov
in
and
inc
or
lock
and
cmp
jne
test
sarb
mov
hlt
jle
dec
jle
cmpsl
push
xor
sub
add
iret
shll
lods
sub
repz
out
cmp
jle
dec
xlat
xchg
cmp
in
icebp
and
insb
sbb
mov
xchg
dec
mov
loop
les
js
popf
sub
mov
sub
js
or
cs
imul
stos
pop
ret
outsl
add
push
das
daa
outsl
popa
das
and
loop
add
adc
pop
leave
les
add
test
fstpl
add
pop
push
ret
mov
test
sub
test
dec
inc
or
test
ja
je
mov
pop
pop
icebp
mov
cmp
mov
xlat
popa
sti
or
and
cli
repz
roll
cmp
mov
pop
dec
push
pop
daa
fstps
pop
popa
dec
or
mov
xor
mov
mov
daa
out
jle
push
loopne
pop
mov
push
movsl
xor
add
mov
jo
imul
nop
fstpl
imul
jp
xor
lock
fs
in
outsl
mov
add
xor
pop
lahf
add
push
ljmp
sub
xchg
scas
xchg
ja
out
ja
pusha
xchg
xchg
faddl
add
rcrl
outsb
sbb
arpl
sbb
mov
test
or
data16
sbb
xchg
jle
cmp
int3
int
push
stos
inc
dec
std
cmc
mov
sub
dec
fmull
sbb
jno
aaa
loope
push
aam
pop
push
je
inc
push
scas
inc
inc
icebp
int
test
inc
ljmp
gs
inc
notl
popa
lods
inc
xchg
daa
push
or
mov
in
inc
cwtl
ficompl
sbb
pop
cmp
inc
in
mov
sub
dec
add
stos
jnp
xchg
subl
cmp
ss
std
cmp
inc
cwtl
fistl
and
aad
sahf
dec
aam
sub
mov
movsl
push
scas
dec
lds
iret
xchg
mov
cmc
mov
jl
push
outsb
js
pop
or
popa
int
mov
ss
and
scas
out
mov
sbb
inc
lds
andb
mov
xor
jmp
xor
ds
int3
andl
dec
mov
xor
push
adc
repnz
jmp
jns
shrb
pop
pop
orb
push
sbb
fidivl
inc
in
mov
sub
jle
insl
jg
nop
iret
xlat
sbb
movsb
stc
jno
ss
inc
push
mov
jmp
jle
pop
push
fists
nop
and
mov
test
jge
add
cwtl
outsb
into
outsl
enter
rcll
cwtl
ret
add
pop
and
pop
add
int
mov
and
dec
test
cmpl
jo
aad
push
mov
jecxz
mov
outsl
mov
lret
mov
outsb
es
std
sub
cmp
js
pop
cmpsl
pop
mov
lods
ret
fs
aas
xchg
lds
test
hlt
enter
test
xchg
aaa
or
bound
arpl
movsl
mov
cmp
mov
pop
inc
data16
movsl
mov
pop
scas
pop
xchg
outsl
and
push
scas
sbb
ret
and
aad
popf
mov
lds
loop
mov
jnp
cltd
jecxz
fnstsw
pop
xchg
cli
push
out
pop
fcomi
and
jno
and
cmpsl
shr
andb
les
lcall
adc
loopne
or
fwait
jns
and
nop
aam
push
cmp
hlt
call
xchg
xchg
mov
imul
fcomps
mov
sets
inc
rcll
cmp
push
inc
jp
sahf
cld
inc
and
sbb
mov
sbb
test
push
adc
sub
mov
sbb
pop
fiadds
or
cmp
adcl
mov
stc
push
mov
xchg
sarb
push
mov
sub
or
mov
mov
inc
add
aam
notb
int
loopne
dec
pop
xor
movsb
adc
push
adc
and
stos
dec
jno
iret
ds
adc
fnstcw
ss
xchg
pop
adc
imul
xchg
test
and
imul
mov
pop
rorb
and
mov
and
sub
pop
stos
push
repnz
daa
add
imul
and
mov
pop
pushl
add
mov
in
xbegin
pusha
jne
and
outsb
mov
adc
jmp
int
xor
lret
xchg
xchg
mov
cwtl
sbb
leave
lods
pop
jp
in
and
loopne
mov
dec
jo
mov
mov
jno
jle
push
setns
adc
cmpsb
outsb
icebp
out
xchg
push
jmp
jns
push
movsb
call
jae
sub
adcb
xor
inc
iret
lods
mov
ret
xor
test
xchg
push
xor
mov
inc
call
xchg
fnstsw
pop
cmp
adc
xlat
jbe
popa
ljmp
jb
popf
icebp
jge
aam
pop
enter
popa
fstps
jno
ffree
jbe
push
je
adc
iret
cwtl
push
jno
push
imul
mov
je
shlb
aam
hlt
xchg
mov
fs
cmpsb
leave
repnz
shl
je
mov
add
dec
arpl
push
xor
mov
shrl
fmulp
insb
int
jo
jle
or
sbb
push
push
mov
dec
fildl
pusha
xchg
aad
push
inc
mov
test
pop
loope
adc
ret
int3
movsb
push
cs
lods
sbb
lret
inc
cltd
mov
dec
mov
sbb
ja
aaa
aaa
hlt
pushf
add
shll
pop
cmp
and
cli
dec
xchg
mov
jns
sbb
mov
mov
pop
aas
mov
iret
out
mov
or
mov
sahf
inc
cwtl
jge
out
sub
pop
pop
cmc
rcr
repz
xchg
or
adc
stc
sub
and
les
inc
stc
loopne
in
into
daa
adc
or
xlat
or
or
addr16
cmp
sti
loopne
rol
mov
bound
push
push
cwtl
fsubl
mov
mov
stos
mov
xchg
icebp
roll
pushf
or
sub
xchg
lds
sub
sarl
insb
shrb
mov
addr16
sar
or
xchg
jbe
jl
ret
test
xlat
push
dec
aad
or
loope
shrl
mov
cmp
push
adc
insb
xor
or
sbb
mov
push
bound
leave
cltd
adc
inc
cmp
repz
out
mov
shrb
in
pop
xor
sarb
sbbl
and
rcrl
mov
jae
mov
leave
fistpl
icebp
pop
inc
mov
xchg
std
out
fsubs
jbe
push
cltd
nop
jne
leave
push
jecxz
pop
shll
push
insl
push
sbb
in
aam
je
mov
je
or
push
xor
or
push
jmp
cmp
pop
xor
sahf
fisubl
ljmp
lock
jecxz
xchg
aad
sbb
mov
ds
outsb
mov
cs
pop
incb
sti
dec
mov
add
addr16
add
pushf
xchg
mov
push
xor
xchg
js
inc
mov
sub
call
pop
je
jp
and
outsb
movsb
sub
jmp
cltd
and
cmc
jg
sub
dec
push
stc
nop
xlat
push
sub
imull
pop
jno
xchg
mov
int3
std
mov
and
rorl
mov
sbb
fnsave
ds
jecxz
fildll
pop
imul
js
mov
in
rclb
xchg
ljmp
and
mov
mov
stc
sahf
jo
cmpsl
jg
lds
add
push
dec
loop
pop
and
add
out
dec
mov
jns
lock
dec
pop
aad
add
and
fsubs
aam
ret
sub
or
jecxz
stos
int3
xor
sbb
mov
lret
xlat
test
inc
dec
inc
pop
jecxz
mov
push
popf
dec
mov
or
jecxz
js
fwait
fwait
jnp
mov
xchg
add
dec
idivl
mov
fisttps
dec
pusha
mov
icebp
addr16
cli
jbe
cmp
add
push
mov
and
cmp
jp
sarb
xor
lret
cld
adc
out
shll
popf
push
mov
adc
pop
mov
ds
mov
pop
aaa
dec
sahf
push
sarl
mov
das
add
and
pop
popa
out
pushf
inc
ret
popa
enter
aam
std
or
ss
js
jle
add
in
cltd
cli
cld
in
add
ja
leave
stos
mov
test
adc
sbb
cwtl
leave
popf
push
cmpl
pusha
aas
imul
xlat
data16
pop
lcall
negl
xchg
mov
pop
jbe
loopne
int3
cmp
lods
mov
inc
cmp
dec
sub
dec
in
popf
push
popa
mov
andl
jmp
push
data16
xchg
pushf
mov
push
stos
fdiv
pop
outsl
adc
daa
ret
sub
test
and
movl
jle
test
xchg
mov
sbb
mov
mov
sti
push
add
pushf
xchg
pop
movsb
and
enter
sub
test
pop
scas
stc
mov
push
push
or
mov
out
pop
out
ljmp
fdiv
cmpxchg8b
adc
addr16
imul
mov
jno
add
xor
shr
addr16
fwait
sahf
push
jmp
ja
daa
or
pop
aaa
sub
mov
clc
repnz
inc
les
popa
cltd
and
enter
sbb
push
mov
lret
adc
sti
mov
arpl
pop
push
outsb
xor
std
add
bound
fiaddl
inc
push
je
or
xchg
mov
dec
mov
pop
icebp
mov
dec
iret
pop
add
addb
sub
and
pushf
lret
or
test
lods
ret
dec
and
xor
and
pop
cmp
push
pop
or
leave
push
shll
notl
pop
cmpsl
dec
and
rorl
clc
stos
loop
mov
xor
and
cmpsb
add
xchg
repz
mov
push
fisttpl
push
xor
scas
cmp
test
fs
in
sahf
pop
fcmove
push
dec
out
jle
xchg
push
ffree
jne
adc
mov
ss
aam
inc
mov
out
push
ret
pop
cmp
or
sbb
dec
sub
add
pop
push
mov
insb
mov
fwait
xchg
test
jp
mov
xchg
cmp
inc
cltd
jb
or
lcall
jg
scas
add
movsl
xorb
and
dec
adc
inc
jl
test
jmp
add
mov
xor
or
outsl
fxtract
lds
push
dec
jp
aad
fwait
dec
leave
inc
push
test
flds
or
xchg
scas
push
dec
iret
in
movb
jo
cwtl
push
jae
mov
mov
jmp
cmp
or
mov
cmp
rorb
je
sbb
call
enter
setle
add
or
dec
jp
mov
mov
pop
lds
dec
sbb
lcall
leave
andl
pop
sub
in
xchg
and
rcl
mov
fisubrl
or
pop
pop
pop
gs
dec
add
xor
fisttpl
mov
outsl
push
shrl
xchg
shr
push
cmp
imul
aas
lds
adc
sub
mov
je
cwtl
lcall
mov
ss
rolb
mov
xchg
push
lcall
scas
shl
pop
jmp
xor
push
push
movsl
mov
arpl
and
push
pop
pop
xchg
dec
inc
inc
and
stos
push
jns,pt
jae
sahf
aas
push
jg
or
mov
lock
adc
mov
mov
daa
pop
popl
dec
sbb
xchg
dec
test
ret
js
repz
call
jecxz
sub
cmp
scas
push
add
cltd
fs
inc
fs
pop
adc
loop
cs
testl
fldenv
iret
outsb
inc
ss
int3
popf
and
xlat
sub
adc
ret
addr16
jecxz
xchg
mov
leave
cwtl
mov
in
adc
call
mov
stos
sub
xor
ljmp
mov
scas
jnp
jns
xchg
fcmovb
hlt
iret
leave
popa
andl
ss
push
or
ret
imul
jmp
movsl
xchg
lahf
mov
and
xchg
fldt
add
jno
shll
loope
insl
popf
lret
dec
incb
sbb
stos
inc
nop
mov
repz
mov
or
xchg
rolb
gs
jae
xchg
dec
int
ds
push
loop
pushl
push
lcall
mov
jae
cmpsl
notb
add
mov
loop
scas
xchg
repz
mov
les
jne
loop
mov
rclb
push
push
jno
sbb
push
push
aam
add
in
gs
scas
adc
push
cmp
lea
and
mov
sub
xchg
add
lahf
shrl
aaa
lahf
sti
push
mov
jae,pn
mov
rcr
or
loopne
scas
sub
loop
ljmp
xor
icebp
mov
int
ret
or
ja
and
fadds
call
cs
pop
sarl
mov
js
jle
cmp
out
call
jg
or
mov
mov
inc
inc
jecxz
xchg
jg
loopne
jbe
stc
inc
cmp
stos
das
jb
inc
cwtl
out
or
imul
loopne
mov
outsb
stos
popa
iret
fcmovb
sub
jg
dec
sbb
inc
shl
dec
stc
pushf
fsubrs
push
push
orb
add
mov
rolb
cmp
insl
add
mov
push
push
dec
sub
pop
mov
sti
lock
mov
cmp
mov
sub
flds
add
jb
mov
sub
fdiv
sarl
std
dec
rolb
fistpl
pop
push
popa
mov
push
leave
inc
adc
cli
lea
loop
and
add
fcomp
or
outsb
xchg
fstl
lret
adc
or
adc
pop
inc
mov
cld
or
or
pop
xchg
pop
popa
mov
push
fbld
int
or
cwtl
xlat
ss
pop
lahf
ja
incb
dec
jge
push
push
outsb
in
cwtl
mov
xchg
pop
pop
push
in
fmulp
mov
bound
rol
jbe
push
add
repnz
inc
scas
sbb
fcoms
push
xchg
sbb
push
jle
mov
mov
mov
repnz
gs
mov
out
test
mov
xor
dec
mov
add
addb
loope
pop
sbb
pop
cmp
sarb
xlat
repnz
mull
cmp
pop
jnp
fcoms
popf
inc
fidivrl
pop
mov
adc
xchg
scas
cmp
jno
mov
lods
aaa
push
mov
cmpsb
mov
mov
sub
xlat
stc
je
scas
loopne
inc
neg
cltd
push
adc
outsb
stos
xor
fcmovnbe
stos
mov
andb
jp
mov
hlt
xor
sarl
cmp
fists
call
enter
mov
push
ja
shll
mov
ljmp
mov
dec
inc
sbb
inc
xor
leave
pop
notl
outsl
ficomps
inc
ret
fdiv
inc
jge
faddp
in
jecxz
xchg
add
or
mov
mov
je
cmp
cli
dec
icebp
or
mov
mov
pusha
and
pop
lea
rcrb
xor
sbb
leave
sahf
inc
insl
add
clc
or
mov
xchg
jecxz
mov
outsb
push
fwait
cli
fsubrs
subb
mov
adc
incl
daa
loop
enter
stos
mov
dec
xchg
loope
mov
das
shrb
mov
mov
bnd
ss
cli
dec
shr
in
adc
pop
or
sbb
mov
bnd
push
and
iret
pop
stc
and
sbb
cmp
int
inc
mov
clc
stos
cmp
dec
and
andl
xor
cld
mov
ret
mov
and
lock
cmp
jne
in
jne
adc
jnp
ja
inc
mov
and
inc
jecxz
sbb
pop
xchg
mov
push
aaa
jnp
sahf
nop
out
xchg
pop
repz
cli
fildl
test
sub
shrb
sub
insb
push
pop
inc
jecxz
push
push
loop
push
xchg
scas
adc
mov
loop
jmp
mov
mov
jnp
loopne
in
xor
daa
add
out
loop
icebp
dec
decb
aam
andl
push
dec
enter
dec
push
pushf
and
ror
cmp
push
jbe
sarb
ret
mov
les
add
adc
xchg
lahf
and
inc
jae
push
ret
jnp
fdivs
cmp
negl
adc
sbb
jo
lods
push
or
fisttpll
fists
sbb
push
lock
gs
cmp
dec
fdivl
iret
jbe
lcall
cwtl
add
jno
testb
xchg
xchg
mov
adc
inc
data16
pop
pop
jb
rcrb
cmpsb
lock
xchg
shl
mov
pop
lods
lret
adc
mov
cmc
faddp
imul
add
out
jmp
fs
cli
sub
rorb
sub
dec
rol
pushf
addr16
xor
into
inc
ja
mov
push
mov
js
testb
ror
add
adc
cs
jo
adc
xchg
leave
push
scas
hlt
sbb
pop
dec
sbb
sub
outsl
enter
mov
enter
sbb
dec
loop
inc
cmp
lcall
mov
movsl
add
xor
cltd
dec
addr16
xorb
fisubs
data16
ret
mov
inc
fwait
jno
push
ret
push
lea
into
imul
push
cmp
mov
fstps
jl
test
dec
stc
or
dec
idivl
ret
aam
adc
jbe
adc
cs
cwtl
shlb
or
out
jmp
inc
cmpsl
pop
add
divl
stc
sbb
cmp
cmpsb
xchg
push
fildl
aam
ja
cmpsl
pushl
js
mov
mov
bound
or
xor
lds
sbb
push
mov
jg
int
push
aam
dec
mov
leave
jbe
out
jbe
adc
sbb
hlt
adc
loop
addr16
mov
fimull
inc
inc
jnp
mov
sbb
in
std
inc
loope
je,pn
imul
pop
cmp
inc
pop
inc
sub
mov
das
in
fdiv
inc
pop
pop
fimuls
ja
jne
lcall
cmpsl
mov
push
sub
sub
popa
insb
es
loope
rcrb
repz
jno
xchg
fcmovne
lahf
mov
lock
push
dec
jl
mov
sahf
jb
pop
leave
loopne
jo
push
mov
into
dec
xchg
imul
fdivr
mov
mov
add
daa
push
jb
testl
add
shlb
insl
sbb
sbbb
mov
jns
xchg
add
dec
jns
xchg
push
xchg
aam
dec
rclb
dec
and
add
mov
data16
mov
cmp
dec
je
or
mov
iret
pusha
jae
add
aas
imul
lcall
jmp
outsl
push
or
or
mov
mov
adc
rcrl
sbb
nop
sub
shrb
dec
pop
jmp
adc
cmp
adc
or
pop
xor
cwtl
leave
mov
xor
lahf
jae
push
mov
push
or
add
push
mov
shrl
out
scas
xchg
ds
popf
sub
or
pop
xor
lock
out
nop
mov
cmp
leave
mov
in
or
dec
adc
ret
ds
cmc
mov
sub
dec
out
inc
lds
js
and
fdivs
ja
lret
pop
push
sti
in
add
mul
aad
or
cmp
sbb
out
sub
shrl
xchg
jl
leave
push
inc
jne
dec
jmp
pop
mov
xor
or
cmpsl
pop
dec
xlat
shl
std
pusha
fcomps
in
dec
cmp
inc
xor
mov
out
cs
outsl
outsl
sub
test
sbb
xchg
shll
sarl
and
enter
lret
les
sbb
iret
sub
out
jle
adc
and
fsubr
add
xchg
lods
pop
cmp
lods
iret
push
call
scas
pusha
or
cmpsb
cmp
lock
fbld
mov
ja
or
sti
sbb
mov
lods
shrl
stos
pushf
push
loope
pop
in
cltd
call
ret
sub
aam
neg
inc
je
sti
push
adc
adc
jmp
imull
jecxz
cmp
fbld
jecxz
popf
xor
jmp
mov
frstor
lret
mov
lds
mov
movl
rorb
stos
insb
xor
pop
push
cli
or
xor
ja
daa
xchg
test
out
icebp
mov
shrb
cmp
fwait
mov
stc
outsl
adc
push
cmc
jge
jle
out
orb
scas
jge
push
mov
lcall
loopne
enter
bound
mov
pop
mov
mov
icebp
dec
aas
stos
sbb
arpl
shlb
leave
stos
pop
ret
and
mov
imul
jae
jge
cmp
rcll
sarl
add
das
adc
adc
std
xor
push
lret
inc
jb
sbb
insl
mov
lds
xchg
pop
and
jne
hlt
or
into
repz
imul
adcb
adc
fstpl
ret
xlat
push
insb
shlb
cmp
out
loopne
jno
or
push
fnsave
push
fcmovnu
sbb
pop
scas
ljmp
add
or
adc
iret
dec
mov
push
push
shll
dec
or
dec
dec
jo
stos
pop
xchg
jbe
or
mov
cmp
cmp
cwtl
push
adc
cmpsb
nop
iret
xor
loop
movhps
xor
mov
push
mov
adc
aad
xor
jge
dec
sub
mov
mov
and
or
sbb
sbb
ja
pop
mov
mov
or
jg
lcall
mov
mov
cmc
outsb
dec
cmp
movsl
xor
jne
out
lock
cmp
rclb
ljmp
inc
inc
jp
test
cld
mov
idiv
xchg
push
or
ss
ss
sbb
cmp
cmpsb
shrl
cmp
xchg
fists
mov
std
gs
or
inc
add
ljmp
add
mov
jns
mov
xchg
xchg
dec
jl
adcl
adc
xchg
flds
sti
push
mov
sahf
aam
outsl
dec
mov
lcall
ja
or
cmp
das
bound
test
mov
pop
push
pop
and
cld
fsub
add
mov
in
mov
fs
add
outsl
xor
filds
in
xchg
repz
shrb
and
and
inc
jnp
mov
sti
insl
stc
imul
dec
mov
or
mov
int
scas
mov
jecxz
and
inc
mov
pushf
loope
mov
mov
xchg
test
test
mov
rol
iret
sahf
push
filds
xchg
xorl
fs
pop
sarl
bound
js
mov
push
inc
fstl
dec
int3
jno
ret
dec
jmp
dec
into
insb
aaa
add
es
xorl
mov
repnz
dec
cmp
scas
push
mov
shll
in
cmp
sub
not
add
pop
movsb
dec
es
jbe
rorb
insl
or
fdivrs
dec
dec
or
movsl
shrl
shll
cmc
pause
inc
clc
stc
pushf
andl
outsl
or
mov
mov
mov
mov
xor
xor
xchg
addl
into
es
cmp
pusha
jg
sub
xor
inc
push
popf
outsb
sahf
lock
int3
dec
lds
imul
fwait
scas
fldenv
movsl
jmp
mov
adc
lret
ficompl
xchg
push
or
scas
nop
pusha
pop
movsb
mov
cwtl
fldl
outsb
cmpsb
popf
pop
movsb
cmp
roll
fildl
int3
pop
push
enter
bound
sarl
sarl
mov
je
jo
int3
mov
inc
rclb
enter
notl
dec
jbe
loope
insl
xchg
inc
test
sahf
cmp
mov
add
inc
das
outsl
imul
mov
das
adc
jmp
push
pop
std
in
cmpsl
adc
add
lahf
sarb
sar
jge
loop
loop
fs
xchg
push
daa
lcall
push
call
or
data16
nop
stos
stos
pusha
lods
ljmp
jae
cmp
mov
cli
imul
add
call
push
cmp
repz
leave
stc
out
outsl
add
lret
js
or
jne
imul
mov
test
fcompl
xor
dec
mov
into
cltd
sub
and
scas
fisubrs
mov
mov
mov
imul
cmpl
and
xchg
test
outsl
fimull
cmp
nop
push
sub
jns
test
inc
adc
fmul
fisttpll
loopne
inc
out
hlt
pop
jle
and
std
and
cs
xchg
stos
mov
fsubrs
pop
cs
mov
lds
add
mov
stc
xor
push
lea
cltd
and
gs
and
imul
xchg
sbb
push
shl
nop
test
daa
mov
jl
std
mov
sub
enter
fstpt
inc
cmp
inc
das
jmp
and
shl
fstps
lds
sub
pop
stos
stc
xchg
cltd
mov
pusha
jecxz
add
popl
cmpsb
mov
es
add
add
in
lods
adc
add
or
js
xor
push
adc
mov
cs
mov
and
test
add
imul
nop
push
sub
scas
in
xchg
or
push
cli
add
jbe
mov
mov
rorb
mov
xchg
push
movsl
push
jp
mul
int
pop
gs
sbb
xchg
bnd
std
ds
jmp
jg
mov
lods
dec
je
mov
xchg
sub
ret
outsl
out
xor
testl
popa
adc
leave
shl
pop
adcb
mov
cmp
out
push
mov
dec
xor
pushf
test
out
pusha
push
addr16
mov
sbb
lret
jecxz
lock
stc
add
stc
jle
sti
or
push
ds
inc
dec
push
sbb
xchg
dec
adc
xchg
pop
inc
dec
mov
push
sbb
in
mov
push
mov
in
out
ljmp
mov
pop
clc
or
mov
cmp
ljmp
fildll
not
lahf
mov
push
int3
push
adc
movsl
and
lods
loop
leave
sbb
pop
filds
movsb
out
push
inc
imul
jle
mov
sti
xor
mov
ja
mov
scas
je
jae
repz
icebp
lcall
movsl
leave
popa
pop
pop
push
jae
or
sbb
loopne
xor
push
inc
lret
inc
mov
pop
mov
xchg
inc
data16
xor
push
aas
sub
xor
dec
shll
repz
fsubl
mov
lahf
push
out
sub
pushf
inc
sub
rclb
test
mov
into
hlt
mov
mov
ds
dec
subl
cmp
xchg
inc
push
mov
cmp
icebp
les
addl
cmp
rolb
ds
outsl
pop
test
xchg
orl
scas
and
sahf
xchg
xchg
std
or
lock
mov
inc
push
add
or
notb
mov
ds
mov
dec
in
push
popa
mov
fildl
arpl
adc
cmpsb
and
push
xchg
jl
cmpsl
mov
adc
gs
stos
inc
in
cmpsb
pushf
jns
cmc
in
xor
mov
sahf
inc
mov
pop
or
lds
sbb
cwtl
push
fwait
or
testb
mov
adc
inc
ret
mov
adc
jno
in
repz
int3
outsl
daa
int
dec
lahf
fistl
jl
inc
stos
cmp
nop
into
leave
mov
xchg
or
xchg
lock
test
inc
sbb
rorl
es
xor
xchg
inc
mov
call
dec
std
pop
mov
repnz
mov
mov
inc
inc
int3
sbb
jp
mov
jle
iret
sub
xchg
lahf
aam
int3
lds
add
xchg
sahf
movsl
xchg
enter
test
jp
xor
ds
rcr
mov
pop
xlat
push
cltd
bswap
mov
or
jecxz
adc
icebp
lock
push
dec
and
xor
ds
in
sbb
clc
in
daa
mov
movsl
dec
mov
dec
enter
sbbb
mov
fidivl
arpl
mov
sub
sbb
ret
sbb
lcall
lcall
cmc
or
pop
push
inc
xchg
inc
sub
adc
mov
gs
add
cwtl
jmp
stc
and
aaa
fsubl
pop
leave
ret
bound
cmpb
adc
mov
cld
cs
and
rcrl
ljmp
fbld
cmp
jecxz
sbb
lahf
sti
into
dec
jmp
adc
xchg
xchg
jl
xchg
sbb
lret
test
js
in
mov
out
lea
add
mov
clc
je
imul
sar
cmp
repnz
imul
push
and
dec
add
iret
xchg
xor
insl
cwtl
rorb
ss
out
fwait
loop
jp
jl
scas
icebp
add
pop
jne
daa
mov
mull
arpl
leave
push
and
cmpl
scas
sbb
data16
and
and
out
jl
test
loop
loopne
mov
test
add
mov
imul
out
push
sti
test
xor
outsl
daa
mov
dec
inc
pop
mov
inc
sub
ret
push
inc
or
sbb
dec
int3
mov
inc
movsb
aas
push
mov
clc
outsb
push
push
xor
fs
movsl
insb
sub
jle
faddl
hlt
jl
test
cld
mov
dec
push
sti
push
cmp
jle
push
and
xor
rclb
imul
jmp
leave
and
pusha
mov
pushf
imulb
mov
cwtl
movsl
pop
es
jns
adc
js
pop
mov
scas
movsl
add
xor
repnz
jmp
mov
mov
movsb
xor
ljmp
hlt
add
pavgw
xchg
sbb
pop
mov
pop
in
lcall
hlt
int3
shrb
mov
int
sti
daa
lret
push
dec
leave
scas
and
loop
xor
or
mov
mov
mov
xor
adc
jae
flds
fwait
mov
inc
aad
dec
dec
je
fisubs
jnp
pushf
adc
movsl
ja
cmp
push
push
mov
xchg
cmpsb
inc
push
pop
lods
stos
out
lahf
je
cmp
and
and
out
jmp
movsb
incl
adc
jle
lods
push
ret
out
sub
xchg
cmp
out
mov
fstpt
xchg
inc
push
mov
and
xor
sbb
xchg
mov
push
pop
icebp
addl
movsl
scas
cmp
add
fildl
jbe
lahf
and
fiaddl
rcll
dec
inc
fldl
in
xor
stos
shlb
add
int3
fnsave
out
inc
js
jle
mov
rorb
add
mov
push
add
mov
push
into
xchg
xlat
dec
pop
adc
add
push
sbb
mov
ss
jno
cmp
inc
sbb
or
jbe
push
push
mov
test
in
inc
add
cs
sbb
mov
or
in
push
fadds
orb
add
sub
sbb
jnp
add
mov
inc
repz
leave
psrad
xchg
cli
cmpsl
orl
push
mov
adcb
mov
popf
and
neg
sbb
fsubrp
std
push
std
push
scas
imul
pop
sub
stos
push
push
push
jmp
cmp
xchg
fmull
je
cltd
into
xor
loopne
add
das
fistpl
mov
test
test
xchg
stc
in
xchg
out
imul
loop
xor
pop
popa
in
dec
jbe
xor
in
dec
enter
flds
inc
nop
push
jmp
popf
fstps
fldenv
sarl
xor
cmpsb
or
stos
xchg
inc
jne
pop
adc
out
adc
sub
gs
stc
cmpsl
scas
into
out
adc
push
fiadds
sub
into
fwait
xor
inc
mov
sub
in
es
clc
add
xchg
lret
pop
and
add
aam
and
movsb
mov
int
push
xor
movsb
mov
fs
mov
enter
adc
jbe
lods
jb
jg
jb
int3
adcl
lahf
xor
xchg
cmp
jno
pop
data16
mov
jae
push
add
add
and
fbstp
push
pop
insb
in
push
dec
xorl
arpl
into
xor
inc
mov
pop
sarb
fmull
incb
or
pop
cmpsl
mulb
addb
lds
mov
push
insb
lret
inc
mov
xlat
xor
and
inc
mov
push
fstps
imul
cmpsb
jne
add
cmpsl
jne
mov
push
add
hlt
lds
fdivrl
pop
cmpsb
or
push
xor
repz
aas
jno
jl
popf
sbb
pop
and
sahf
repz
sub
inc
inc
fmul
imul
in
std
mov
fcmovu
dec
cmp
sbb
les
lds
jecxz
ret
cmp
test
inc
icebp
or
mov
jge
enter
aad
js
sbb
in
adc
mov
jp
aad
mov
dec
stc
adc
fcompl
fisubrs
add
jne
pop
jmp
push
xchg
cmc
movsl
mov
sub
mov
mov
add
dec
sbb
or
insl
dec
cli
mov
push
cmpsl
les
cmp
push
jp
outsb
jno
stos
xor
testl
mov
aam
mov
sbb
mov
enter
or
dec
dec
mov
out
adc
sub
dec
mov
dec
in
or
subl
rcl
hlt
movsl
dec
sarl
in
outsl
ja
adc
push
xchg
jbe
je
mov
jg
xor
rcll
mov
andb
jmp
scas
pop
ret
jo
je
jnp
js
nop
sbb
dec
rorb
xor
rep
inc
sbb
sti
inc
pop
jl
push
and
inc
push
add
stc
out
std
jbe
aam
xrelease
inc
xor
push
add
cmp
leave
jnp
xlat
test
aas
push
lds
mov
mov
into
iret
js
popa
mov
and
out
mov
push
xor
popf
daa
mov
or
lods
pop
repnz
pop
loop
scas
xchg
sbbb
out
pusha
clc
in
mov
and
sub
xor
mov
cmc
push
push
add
cmp
pop
mov
lahf
inc
insb
cmp
jmp
in
stos
shlb
mov
out
fisubrl
sub
sti
sub
test
sub
out
and
pop
add
mov
fstps
jo
andb
sub
loop
push
fs
movsb
hlt
adc
dec
int
outsb
sti
nop
cmp
movsl
cwtl
nop
or
cli
fcomi
mov
pop
xorb
das
cmpsb
inc
inc
fwait
ret
insl
jmp
lcall
jne
xor
pushf
pop
iret
jg
ljmp
ja
enter
dec
push
orl
xor
pop
sbb
jmp
shlb
out
mov
jno
mov
stc
stos
hlt
je
int
fiaddl
mov
adc
xchg
xchg
jge
or
or
push
adc
mov
dec
sub
mov
push
scas
in
sub
adc
add
dec
call
ljmp
inc
mov
jge
pop
sbb
pop
sbb
insl
in
jle
addb
adc
ret
cmp
lods
cmpsb
pop
stos
mov
mov
cmpsl
sahf
mov
andb
mov
addr16
in
andb
adcl
dec
mov
jmp
sbb
mov
lods
lea
icebp
or
cmp
cmp
int3
fs
out
push
addr16
and
outsl
orb
jo
js
ja
js
rorl
push
pop
cmpsb
xchg
dec
add
test
pmaxub
loope
xor
aam
cmpsb
jge
and
aad
cld
repnz
sub
sbb
pop
rolb
sbb
lea
xchg
mov
cmc
dec
sahf
inc
sbb
lahf
pop
and
loop
mov
cmc
push
dec
out
pop
jl
xchg
or
jge
dec
mov
lods
pushl
mov
jae
int3
out
js
pop
jne
xor
and
lahf
jae
pop
das
add
sbb
sbb
scas
jb
into
xor
lcall
mov
or
lret
out
sbb
gs
fcoml
adc
jecxz
push
push
mov
in
mov
jnp
into
xchg
fldcw
fcoms
xchg
cli
mov
inc
lea
push
enter
cmp
in
add
inc
mov
sahf
jg
mov
lret
xchg
xor
imul
ret
push
add
and
add
adc
insl
nop
xchg
sbb
cmp
lea
push
test
jecxz
jne
aad
mov
movl
adc
dec
lret
dec
cmp
add
mov
lock
lods
cmpsb
xorl
stc
outsl
ss
pop
jge
ljmp
jp
dec
fucomi
mov
push
fs
mov
outsl
rcrl
stos
out
subb
scas
push
mov
aaa
adc
dec
add
fucomip
xchg
outsb
sbb
or
xchg
push
aad
inc
and
mov
or
push
push
ss
mov
sbb
mov
inc
inc
leave
and
nop
test
fsubrl
ret
sbb
mov
sarb
xor
mov
std
and
leave
adc
jne
shlb
movl
dec
mov
pop
nop
xchg
call
xor
dec
inc
cmpsb
movsb
notl
pop
jmp
stos
and
and
cmp
lret
push
test
lods
mov
adc
cmp
or
mov
test
or
dec
pop
lds
fdivs
dec
dec
sbb
ljmp
inc
mov
sbb
mov
dec
xor
xchg
xchg
mov
mov
xchg
cmp
xor
movl
cltd
sub
xor
mov
fisubrl
push
ds
ja
loope
add
pop
pop
cmpsb
mov
sub
mov
mov
cli
push
sub
shll
call
push
or
sarl
pop
mov
xor
fyl2xp1
int3
ficomps
insl
mov
pushl
jne
and
xchg
outsb
xlat
adc
xlat
or
xorl
sub
test
stos
movsb
mov
mov
fdivs
lret
xchg
or
dec
sti
pushf
fistl
add
out
ja
dec
cmpsb
push
icebp
cmpsl
and
out
in
fs
mov
daa
cmp
lods
cmp
xchg
mov
cmp
or
and
lods
mov
lcall
push
pushf
fwait
and
xchg
jmp
mov
data16
push
adc
jg
xchg
out
outsb
inc
cmp
lret
add
jne
push
cmp
or
push
movsl
inc
jp
cmpsb
and
xchg
test
rcpps
cwtl
insl
fdivl
push
dec
push
dec
push
mov
push
fbstp
sub
roll
mov
or
inc
xor
jl
pop
aas
pop
jecxz
mov
xor
lds
sahf
jo
cmp
push
pop
gs
cld
mov
lahf
jecxz
xchg
and
xor
add
and
mov
insb
cmc
cmp
out
adc
loopne
jbe
mov
lock
or
jae
adc
adc
push
jno
push
push
in
push
xchg
stos
xchg
enter
sub
inc
jl
ret
dec
xor
xor
xchg
xchg
fnstsw
lret
push
and
mov
rol
xchg
dec
jno
mov
jns
test
enter
cmp
jb
adc
adc
jno
jecxz
sbb
jo
jg
dec
push
cmp
lret
dec
clc
inc
stos
lcall
nop
xor
sbb
popa
xchg
sub
in
sbb
in
xor
in
in
jg
ja
shlb
cmc
mov
arpl
pop
cmp
bound
fisubrs
mov
ret
push
insl
adcl
arpl
mov
xchg
cmp
mov
mov
mov
dec
add
ja
outsl
push
and
mov
xor
mov
js
or
mov
mov
mov
dec
mov
imul
xchg
adc
fs
mov
cmp
mov
dec
mov
adc
pcmpgtd
mov
inc
jae
mov
pusha
push
sahf
lods
cmpsb
dec
cmp
cs
xor
cli
int3
test
shl
cmpsb
ja
inc
orl
pop
and
add
cli
ds
sub
jp
ds
sbb
fs
iret
jle
push
call
mov
xor
add
popa
outsl
xor
shr
pop
mov
repnz
loopne
lcall
adc
mov
jge
dec
cmp
stos
jo
xor
iret
call
sbbb
insl
ds
icebp
pop
push
mov
outsb
gs
in
lahf
cpuid
scas
mov
adc
push
stc
mov
iret
mov
jp
sub
push
xor
xchg
fldenv
jne
int3
jg
addr16
ljmp
jp
pushf
cmpsl
shrl
sbb
shlb
jle
add
pop
add
out
shrl
rcl
je
out
cmp
mov
xchg
sbb
dec
jge
or
sub
mov
in
xor
mov
jg
test
out
push
aaa
decb
ret
pop
jmp
mov
enter
dec
call
mov
or
sub
xchg
lahf
jecxz
add
ljmp
out
pop
adc
lss
or
lahf
bound
shll
adc
leave
enter
stos
jle
dec
push
outsb
aad
repnz
inc
test
and
fs
aam
roll
lods
mov
mov
std
cltd
push
pop
cmpsb
jge
out
loop
mov
in
xchg
fisubrs
fisubs
fldenv
add
mov
sarl
addr16
dec
leave
fidivrl
or
lcall
imul
sub
xchg
xchg
iret
pop
mov
push
mov
sub
xlat
loopw
sbb
bnd
xchg
fnsetpm(287
shll
mov
cmp
ds
push
aad
jecxz
imul
shrl
pushf
and
xchg
jns
push
dec
data16
lods
pop
xchg
cmc
xchg
mov
dec
mov
mov
arpl
inc
pusha
add
mov
out
cwtl
xor
sti
push
icebp
dec
or
fimull
int
add
dec
imul
jecxz
imul
pop
mov
mov
sub
push
push
jp
call
lahf
cmpsb
inc
ret
jb
dec
pushf
lret
pop
mov
lret
frstor
dec
mov
scas
pusha
iret
push
sarb
add
xor
xchg
dec
test
mov
rolb
lods
push
mov
dec
dec
xchg
cmpsl
fstl
and
aad
inc
iret
push
pop
outsl
shrb
scas
inc
lock
fcoml
les
div
sbb
sbb
ds
ds
jmp
xchg
fmull
sbb
stos
sub
add
pusha
sub
fmull
imul
movsl
lret
mov
cmc
in
in
xor
rcrl
xchg
cmc
lock
fsts
xor
nop
push
push
fcomi
cmp
lods
insb
loopne
mov
jnp
insb
add
jecxz
cmp
pop
fdivrl
sbb
ret
sti
adc
sarl
jecxz
lea
insb
push
xorl
cmp
fsts
scas
in
pop
sbb
adc
mov
rcll
adc
adc
dec
test
mov
fmul
lret
push
sub
mov
jp
mov
add
fldt
inc
cmp
dec
frstor
les
outsb
or
ret
out
orb
lret
shrl
mov
xlat
inc
ret
jl
pop
stc
aas
mov
enter
ja
jmp
repz
les
icebp
pop
mov
lcall
stos
jmp
push
dec
pop
push
js
js
dec
or
and
scas
into
sub
pop
mov
out
xlat
incl
add
test
mov
jno
data16
dec
cmpsb
lret
cmp
jae
sbb
out
inc
xchg
test
stc
mov
xchg
out
mov
imul
scas
rorb
cmp
dec
fdivp
and
cmp
xchg
mov
adc
ja
mov
in
jmp
push
jp
pop
mov
push
arpl
dec
iret
shlb
fdivrp
add
add
mov
xchg
je
pop
sub
dec
ss
addl
add
mov
jge
xor
aaa
pop
push
stos
jns
pop
inc
imul
and
inc
dec
pushf
mov
repnz
push
sbb
fnstenv
test
fmul
push
cmp
add
jbe
in
mov
cs
jmp
inc
adc
lods
daa
cmpsl
mov
iret
es
rorl
mov
cwtl
nop
shrl
pop
popf
pop
rcll
sti
cmp
inc
jmp
es
pop
mov
bound
push
outsl
es
xor
or
pop
mov
stos
xchg
or
sbb
mov
push
or
inc
dec
ss
pop
cmp
pushf
adc
int
cmp
and
push
repnz
sbbb
and
push
rorl
jb
orl
xor
out
pop
mov
lcall
ret
call
push
aam
data16
out
mull
insl
jge
mov
jo
add
cltd
mov
inc
sub
mov
xchg
or
je
dec
mov
dec
mov
pmulhw
popf
ljmp
sbbb
xlat
and
xchg
jecxz
loop
cmc
push
divl
aas
push
fildl
fmull
mulb
not
fstpt
xor
stos
cmp
adc
xchg
aas
push
mov
push
out
es
sub
testb
sub
xlat
xchg
scas
mov
push
mov
cmpsl
push
sub
inc
xor
or
sub
inc
mov
adc
aas
xchg
cs
xorb
jo
fldt
lahf
mov
std
jns
or
mov
dec
mov
sub
les
jmp
popa
xchg
jle
jno
sbbb
imul
fucom
mov
adc
pop
push
fisubl
std
orl
mov
push
and
test
fisttps
inc
ret
xchg
mov
sbb
movl
add
xchg
jae
mov
sarl
sarl
sbb
lret
sti
pop
outsl
sub
std
inc
dec
and
repz
sti
ja
mov
in
push
cmp
mov
mov
or
cmpsb
into
and
dec
mov
jae
cwtl
dec
cmpb
out
push
movsb
std
xchg
in
mov
sbb
push
pop
call
fsincos
pop
jp
or
frstor
fdivs
xlat
adc
sti
movsl
pop
add
dec
aam
test
or
lods
fsubr
jecxz
and
std
push
adc
adc
js
xor
sub
push
aam
push
ror
sahf
fldcw
aas
cmc
mov
sub
clc
xchg
cmp
stc
test
pop
clc
fists
inc
xchg
sti
cmp
and
mov
mov
add
outsb
xor
out
negb
push
push
push
mov
fsub
cmpsl
inc
leave
stos
or
add
mov
ror
scas
mov
xlat
aam
sbb
xor
mov
xchg
push
inc
jle
frstor
sub
ffree
mul
or
xchg
je
mov
inc
or
js
mov
ret
rcrb
das
cmc
xchg
or
out
or
pop
arpl
lret
sub
iret
cwtl
ret
imul
sysret
jbe
fs
in
or
push
sub
add
gs
mov
pop
mov
cli
lods
inc
roll
lret
imul
out
movsl
cmpsl
es
inc
ljmp
mov
mov
out
jne
sbb
cmp
gs
mov
out
icebp
in
ljmp
add
push
sahf
mov
arpl
ss
cwtl
sahf
add
ficompl
in
xor
push
cs
cmp
xchg
cli
pop
mov
adcb
or
mov
inc
jno
stos
lahf
dec
xchg
jb
jb
cmpb
aad
outsl
xor
js
push
andb
add
out
repnz
cs
jl
sub
dec
mov
sbb
sti
fwait
into
sub
jae
dec
test
rcrl
enter
inc
jne
sar
jle
add
sub
cmpsl
movsl
shrb
leave
or
pop
mov
push
in
push
scas
mov
popa
cmpl
push
imul
xor
sbb
jg
cld
mov
push
jo
fisubl
mov
ss
adc
and
inc
mov
gs
pushf
pop
push
out
into
inc
mov
mov
push
fildl
pushf
xor
add
xchg
mov
push
xchg
stc
xor
mov
mov
sbb
stos
clc
xchg
mov
test
jg
push
negb
in
add
das
repnz
scas
jbe
add
lds
rcr
inc
cmp
dec
sti
add
out
pusha
jl
pop
pop
popa
inc
movsl
cmp
in
jg
adc
imul
lcall
cmp
adc
inc
int3
mov
ja
jno
sub
sbb
and
test
add
mov
cwtl
and
popf
scas
lret
int3
lock
es
inc
xchg
mov
in
mov
sti
or
pop
push
lock
push
scas
mov
sub
mov
fstpl
sbb
mov
adc
fdivp
leave
push
clc
jmp
pushf
sbb
sbb
dec
or
xchg
lds
inc
xlat
sbb
insb
adc
inc
in
movsb
lods
pop
inc
mov
pop
aam
add
stos
xchg
jecxz
int3
je
addr16
loopne
xlat
lods
mov
jmp
jl
add
inc
lahf
adc
jge
pop
push
sahf
pop
mov
sub
sbb
addr16
bound
or
cmpsl
mov
inc
push
mov
iret
jmp
pop
inc
stos
js
in
push
mov
dec
xlat
and
push
jb
pop
lcall
lahf
int
shll
and
testb
or
and
ljmp
pop
fs
lret
pop
xchg
push
fnstsw
bound
sbb
add
pop
or
jecxz
adc
or
dec
inc
xchg
xchg
js
pop
add
aaa
sbb
hlt
adcl
aaa
repz
cmpsl
jle
sbb
push
inc
bound
jle
lods
mov
pop
cmp
das
das
outsl
pop
test
push
addr16
loopne
in
xor
push
push
jae
mov
mov
sub
mov
mov
sbb
jg
divps
jae
enter
or
cmp
mov
cmp
mov
jmp
sub
push
fstps
into
or
leave
pusha
outsb
aaa
sbb
out
sti
or
into
pushf
dec
nop
into
mov
sub
pop
adc
test
cmp
push
into
xor
lods
cld
loop
jnp
dec
mov
and
push
adc
inc
jmp
push
in
jge
push
fimuls
mov
sub
xchg
pop
test
mov
sub
mov
inc
mov
mov
frstor
imul
and
stos
xor
mov
fwait
pop
adc
and
sub
dec
repz
lods
sub
popf
aam
mov
or
jl
test
xchg
aaa
les
cld
sbb
xchg
cmp
pop
fs
pop
jl
fists
jb
cmp
test
lods
in
mov
loop
jae
loop
mov
lcall
inc
push
pop
pop
mov
pushf
sbb
cmp
out
es
xor
or
sbb
mov
sarb
jmp
aam
xor
push
sahf
scas
xor
jl
nop
inc
shlb
std
and
sbb
test
iret
jne
adc
xchg
adc
outsl
scas
xor
jecxz
jno
movsb
sub
xchg
ljmp
jns
lds
pop
stc
jo
lret
mov
insl
or
stos
push
mov
icebp
lods
repnz
sarb
loope
push
lds
pusha
xor
xchg
sbbl
shlb
mov
psllq
lock
cmp
pushf
xor
jne
out
sbb
ss
jg
inc
cmp
and
jae
adc
std
out
jns
cmp
jo
inc
cwtl
cmp
and
mov
cmpsl
test
xor
mov
in
push
sub
testb
imul
int3
imul
hlt
push
cld
cltd
mov
xchg
or
sub
imul
js
jne
inc
lea
aad
outsl
jnp
mov
mov
or
mov
jl
jbe
pop
daa
pusha
xor
add
push
sti
adc
adc
mov
insl
test
lahf
sbb
out
cs
mov
cmp
jae
push
movsb
dec
mov
sbb
pop
cmc
cmp
lods
inc
adc
cmp
cwtl
es
in
stos
inc
pusha
negb
dec
push
fcomps
popa
sub
fistps
inc
mov
jle
jl
mov
jns
sub
sbb
jle
gs
out
icebp
sub
mov
sbb
scas
test
jno
das
cmc
push
js
mov
adc
pop
add
pusha
pop
jmp
in
sub
in
iret
movsl
mov
add
fwait
xor
test
pop
cmp
push
icebp
dec
add
out
test
shlb
cld
ss
in
pushf
sbb
pop
addr16
inc
mov
leave
dec
adc
mov
es
dec
daa
adc
js
repnz
and
jo
test
inc
daa
cli
inc
movsb
inc
loope,pn
mov
mov
cld
js
sarb
sbb
fstpt
stc
push
bound
jge
xchg
stos
mov
sub
mov
dec
push
lret
add
sarl
add
inc
pop
pop
cwtl
cmpsl
lds
inc
aad
inc
xor
sub
mov
push
ret
cmp
add
addr16
sbb
test
xor
sub
cmp
push
mov
aas
lock
push
pop
ror
icebp
cltd
bound
stos
cmpsl
dec
aaa
cmpb
mov
movsl
outsb
pop
les
push
popf
stos
adc
ret
inc
xor
arpl
repz
fidivrs
adc
push
inc
fwait
sub
arpl
cmp
mov
push
mulb
jl
imul
ret
jp
jnp
aam
loope
mov
out
xchg
pop
sub
jne
xchg
mov
scas
push
loopne
jp
scas
xchg
mov
repnz
sub
mov
pop
and
test
pop
jmp
ss
add
repz
pop
adc
push
jae
in
xlat
jne
cmp
push
mul
sbb
and
ficoms
mov
cmp
arpl
add
bound
xchg
aam
xor
adc
sbb
sahf
pop
mulb
push
aam
lcall
jns
jp
jp
lea
adc
cmpl
shrl
es
stc
shll
inc
adc
cmc
loopne
cs
inc
into
fsubr
andb
xchg
fldl
mov
cwtl
popa
dec
popf
loop
cld
add
insb
push
icebp
gs
xchg
mov
push
in
movsb
lret
and
hlt
mov
or
orb
push
cmpsb
sub
std
pop
mov
std
stos
dec
or
push
scas
nop
inc
lock
mov
movsb
pushf
jnp
xor
mov
mov
jbe
enter
std
movsb
outsl
iret
jo
and
out
ss
shll
mov
fistpll
mov
cmp
push
pop
test
adc
pushf
shr
inc
xor
pop
stc
fcomp
inc
ds
fcoms
mov
jb
popf
fwait
sahf
inc
dec
cli
shr
xor
pop
jle
push
fisttpll
imul
shr
or
shr
sub
sub
out
cmp
adc
jns
loopne
out
dec
andb
imul
jae
adc
rcll
push
add
pop
test
ja
jbe
add
mov
sbb
xchg
frstor
mov
rorb
pop
push
into
popa
mov
les
mov
adc
sbb
and
in
mov
mov
adc
std
jmp
and
stc
mov
pop
xchg
movsb
cmpsl
imulb
jmp
movsb
stos
adc
add
sub
jge
repnz
out
pop
outsl
movd
arpl
mov
movsb
jle
cwtl
add
and
aam
and
ret
mov
lea
mov
mov
and
mov
call
jbe
xchg
fnstenv
add
cltd
mov
cld
mov
das
inc
or
test
push
fcoms
cmp
out
aas
pop
push
ret
fldt
xchg
and
notb
cli
sbbb
xor
leave
leave
in
adc
inc
ret
jmp
outsl
rclb
inc
and
js
mov
jb
inc
mov
and
stc
out
xor
push
or
andl
fs
jmp
push
lcall
sbb
sbb
cmp
jmp
dec
push
mov
stos
test
mov
adc
or
rol
push
cmp
lahf
icebp
or
pop
cmpsl
adc
repz
cmp
sbb
mov
out
cmc
popf
stc
jnp
mov
lcall
movsl
mov
inc
jl
sbb
push
fldenv
fisubrl
lds
es
inc
mov
sarl
cmp
addr16
add
mov
adc
pop
push
decb
adcl
push
push
divb
pop
loop
mov
loop
adc
push
or
imul
cmp
loopne
sub
mov
inc
sti
sar
dec
aas
cmp
or
xor
cltd
push
je
stc
jl
shlb
jecxz
and
aas
xchg
addb
add
loopne
mov
rcl
pop
cmp
jp
or
arpl
pop
addr16
andl
lock
andb
mov
lods
lds
sub
dec
mov
adc
or
pop
adc
shll
mov
notl
lcall
hlt
test
dec
movntps
cmpsb
lock
bound
js
push
pusha
lret
int3
or
test
loope
sbb
lret
and
stc
jl
cmp
adc
out
loop
call
subl
in
xchg
dec
mov
mov
xchg
sub
aad
mov
mov
xchg
cmc
das
push
les
dec
pop
mov
add
jne
pushf
pop
mov
sarl
mov
movsb
or
test
icebp
lods
jb
mov
test
xor
xor
shll
mov
fadds
cmp
mov
push
and
push
add
dec
adc
xchg
xchg
push
mov
mov
inc
jae
insl
mov
fbstp
stc
mov
sbb
mov
daa
ret
jae
icebp
inc
call
xor
xor
rorb
movsl
push
clc
mov
xlat
xchg
mov
push
shrl
dec
andl
jo
fimuls
pop
sbb
add
sbb
xchg
or
repz
adc
test
out
pop
mov
pop
clc
repnz
popa
mov
popf
cmp
xchg
jp
sub
xor
sub
cmp
ret
iret
inc
cmp
dec
clc
xor
fstpt
incb
mov
rorb
xchg
lods
cmpb
es
inc
mov
cltd
inc
xchg
lcall
mulb
push
daa
lds
cld
rep
ss
flds
and
mov
idivb
aam
in
cltd
movsb
lcall
sub
es
leave
cmpsb
add
mov
mov
push
test
adc
out
daa
dec
cwtl
int3
mov
sub
add
call
xor
leave
pop
and
aas
push
xchg
lahf
je
mov
rcll
addr16
test
faddl
in
les
xchg
mov
pushf
sbb
cmp
jmp
gs
in
mov
mov
cmp
add
mov
lods
mov
pop
mov
dec
gs
pop
mov
jge
ljmp
or
lret
insb
jbe
loop
push
add
xor
in
aas
fildll
iret
addr16
lahf
mov
cmp
enter
or
out
outsb
push
jo
push
popf
stc
mov
imul
insb
xchg
add
push
lods
push
nop
pop
test
adc
scas
or
icebp
xor
sbb
dec
sti
cmp
clc
mov
in
pop
stos
or
int3
in
push
xchg
pop
outsb
sub
mul
or
inc
jne
call
imul
neg
dec
or
rorl
jp
or
sub
adc
or
jmp
pop
cmp
scas
xchg
sub
add
faddl
jne
push
int
repz
xor
inc
scas
pop
mov
fs
movsb
cmp
pop
inc
xchg
adc
popa
dec
ss
cmp
ret
out
xchg
push
in
mov
add
mov
jae
negl
xchg
nop
jns
call
mov
pop
push
daa
sub
mov
shll
push
insl
and
push
sbb
lret
or
push
or
adc
xor
xchg
loopne
or
insb
repnz
dec
inc
aam
inc
ret
add
daa
bound
push
je
sub
fsubrl
inc
into
lock
xlat
dec
cmp
test
ret
mov
xchg
les
ja
cs
fxch
cmpsl
es
insb
ret
xchg
push
inc
inc
or
sbb
rolb
xchg
sub
jae
scas
negb
inc
fs
std
push
inc
out
mov
push
rcrl
jae
xlat
ljmp
mov
fisubs
push
negl
mov
xchg
adc
dec
mov
les
fdivl
in
ds
insl
push
push
xor
and
popf
xor
loope
stc
test
stos
fistpll
xor
les
jmp
push
lret
loopne
rcl
adc
mov
shrb
out
fisubs
mov
mov
std
and
jo
loop
mov
imul
std
xchg
push
data16
popa
jmp
stc
aaa
js
stos
mov
cmc
cmp
dec
rcrb
inc
sbb
xor
jge
xchg
out
adc
cmp
ja
xchg
stos
icebp
mov
int3
push
add
mov
iret
hlt
pop
jge
or
sbb
jbe
shll
in
addr16
adc
shlb
xor
and
faddp
jo
sub
fcoms
xor
rolb
mov
sbb
ss
pusha
adc
fldt
cld
movsb
dec
aad
pop
mov
mov
and
push
orl
jge
and
lahf
push
inc
push
jle
mov
push
leave
mov
sub
sub
adc
adc
add
lods
sbb
mov
fsubl
xorl
test
push
mov
ret
sbb
out
sub
push
shlb
pop
mov
or
dec
subl
mov
inc
cmp
sbb
mov
jo
cmpsl
pusha
daa
adc
mov
pop
sbb
repz
push
pop
sub
decl
fcompl
jb
push
lcall
cmp
dec
jo
push
movsb
lret
sbb
push
push
out
jmpw
loop
stos
mov
mov
push
mov
push
mov
xchg
mov
sub
movsb
mov
repnz
in
je
xor
mov
mov
or
lcall
push
js
xor
outsl
bound
rcr
ja
or
mov
jmp
pop
and
testb
sbb
sti
addr16
fdivrs
jo
mov
es
sti
pushf
jns
into
loopne
hlt
call
inc
int3
push
add
sti
adc
mov
push
mov
mov
stos
cld
mov
sarl
pop
sti
fmull
shr
mov
das
dec
lcall
push
cmp
repz
imulb
test
jmp
push
xor
bound
insl
icebp
xor
jnp
rclb
fidivs
push
jne
sub
xchg
ret
fidivrs
out
dec
mov
scas
pop
movsb
push
and
pop
sub
out
mov
divb
bound
fs
mov
sbb
pop
sub
pop
jno
aas
adc
jmp
push
xchg
test
stos
push
pop
mov
add
fnsave
ljmp
dec
mov
in
cmp
adc
and
lcall
lock
cld
shrl
sub
fistps
es
jnp
cli
sbb
adc
movsb
xor
sarl
lahf
and
push
lret
in
arpl
cmp
push
repz
inc
xor
lret
xor
xchg
test
cmp
or
pop
out
or
popf
idivl
xlat
ret
test
mov
mov
fwait
mov
adc
notl
push
sub
sub
sub
inc
pop
mov
cmpsl
mov
pusha
in
or
xchg
xchg
aam
iret
repnz
gs
call
lret
jne
pop
cmp
sbb
xchg
adc
mov
aas
lods
pop
out
dec
cs
repnz
lcall
insl
hlt
aaa
jmp
inc
loop
add
dec
sbb
int3
lds
xor
jmp
sub
xchg
in
fnstenv
jbe
pusha
and
das
lret
xor
dec
xor
pop
call
sub
inc
mov
das
dec
ret
inc
add
ret
lret
add
jg
ljmp
mov
mov
cli
mov
mov
addl
inc
xor
jae
aaa
and
mov
push
neg
bound
jno
jae
sub
insl
mov
lret
push
pop
xor
and
jo
sbb
lret
jge
lds
fsubrl
into
xor
mov
popf
neg
int3
mov
pop
dec
hlt
leave
nop
pop
stos
jge
mov
loop
in
fcoml
insl
xor
mov
jnp
inc
mov
push
icebp
shrl
cmp
lock
les
jb
adc
adc
add
add
arpl
mov
cwtl
pop
movsb
mov
addr16
mov
sub
pusha
test
sub
xchg
jmp
lods
ret
out
movsb
mov
and
push
pop
cmp
jp
dec
mov
notb
xor
test
pushf
jmp
cmp
adc
or
xchg
shlb
mov
lock
sbb
pop
fbld
dec
or
in
shl
imul
call
jp
mov
mov
in
negl
call
or
lret
cmc
sbbb
add
aas
lret
cmpsb
and
das
out
clc
popf
inc
lods
cli
loopne
mov
or
pop
mov
sti
loope
sti
add
jne
imul
push
loopnew
mov
sbb
pop
jp
dec
mov
lea
lods
jb
cli
out
push
xor
mov
xor
adc
movsl
pop
movb
jns
out
push
flds
dec
mov
adc
stos
aas
xchg
js
push
mov
jmp
pusha
or
pop
hlt
hlt
push
shlb
push
into
jae
hlt
dec
gs
jno
repnz
ja
jnp
into
or
pop
lcall
pop
call
or
jl
jns
lds
movl
prefetcht2
in
mov
xchg
movsb
jge
xor
mov
pop
mov
out
add
mov
mov
pop
xor
lds
in
inc
cmp
pop
insb
ljmp
in
repnz
rcll
enter
xchg
jae
adc
mov
pop
lahf
and
inc
fcmovnu
inc
stos
inc
lcall
xor
loop
clc
pop
mov
dec
mov
ds
cmp
mov
dec
mov
push
mov
shll
dec
push
push
sahf
push
jle
adc
lahf
sub
dec
cmp
pop
das
imul
adc
xchg
adc
sti
imul
in
mov
xor
or
dec
les
jl
sub
and
int
lods
ljmp
add
push
jbe
in
or
xlat
movl
or
adcb
jbe
add
movsb
fwait
daa
xor
lret
addr16
aas
enter
jg
mov
and
in
imull
sub
mov
shrb
adc
add
call
mov
cmp
rdmsr
outsb
hlt
mov
ret
stos
jns
cmp
scas
icebp
js
dec
or
dec
cltd
sarl
pusha
test
lret
imul
out
sub
mov
int3
hlt
dec
enter
shrb
lcall
mov
jnp
out
ds
sbb
mov
call
popa
cmp
jle
pop
xor
arpl
cmp
mov
pop
fwait
cmp
sub
fwait
mov
int3
xor
pop
aam
movsb
lds
subb
mov
es
ljmp
xchg
fstl
scas
jl
or
fbstp
add
rclb
icebp
test
cld
xchg
cld
and
push
pop
cmp
dec
in
jae
add
bound
mov
adc
xchg
ret
mov
or
jle
push
jo
add
mov
fidivl
xor
outsl
push
mov
outsb
cld
cmp
adc
or
xlat
subb
sub
data16
ja
dec
sbb
int3
and
rclb
jge
fisubrs
dec
cmc
pop
mov
xchg
mov
outsb
adc
in
xor
jp
fwait
rcl
lret
outsl
push
loopne
mov
cmp
data16
mov
ljmp
cmp
jbe
roll
addr16
xor
cmp
inc
inc
fadds
nop
ret
js
xchg
xor
aad
out
mov
insb
cmp
jne
mov
mov
rcrb
andb
lock
sbb
out
xchg
test
out
lock
jae
idivl
push
iret
mov
movsb
out
outsl
fnsave
scas
in
mov
and
xor
loop
pop
add
loop
mov
dec
pop
inc
and
fisubrl
rorl
shrl
cmp
sub
test
push
cmp
sub
xchg
sub
pushf
bound
aad
repnz
and
cmp
loope
ja
cwtl
mov
jl
sub
test
xor
lock
fiaddl
out
in
add
and
test
xchg
out
mov
pop
popf
lods
aas
add
xchg
push
dec
adc
stos
fwait
mov
sbb
sub
xor
push
xor
jp
enter
push
mov
or
or
cs
insl
add
mov
fists
push
fsubs
or
xor
lret
outsl
cmp
dec
fadds
jle
rcr
fwait
insl
pop
jge
imul
jecxz
insl
out
rcll
push
push
push
inc
ret
ja
fdiv
fnsave
push
scas
lahf
lahf
icebp
test
xor
lea
jnp
js
mov
jp
loop
mov
repnz
popa
mov
sti
mov
or
std
enter
std
popa
test
aam
mov
sbb
enter
push
push
arpl
lahf
sub
pop
mov
jae
mov
jecxz
mov
dec
scas
dec
scas
lods
or
aaa
and
fstpt
mov
jae
and
mov
sbb
into
jle
push
cmc
out
push
jle
mov
push
hlt
jo
jle
sub
add
rclb
mov
xchg
test
cmp
cmp
sub
hlt
xchg
int3
into
xor
int
bound
insl
pop
repnz
dec
imul
cld
roll
push
xchg
mov
mov
nop
sahf
sub
cwtl
pushf
cmc
scas
hlt
mov
xchg
addr16
xor
pushl
jecxz
sbb
shr
xor
add
leave
jg
xor
add
repnz
lret
inc
mov
mov
movl
adc
scas
movsb
jmp
cmp
lahf
subw
loopne
jecxz
or
mov
js
add
cmp
sub
lahf
cs
insb
out
mov
jae
jg
xchg
mov
or
xchg
stc
lods
sbb
mov
mov
xchg
inc
dec
les
shrb
pop
stos
pop
cmp
add
push
adc
add
ds
push
pushf
xchg
and
xorl
cwtl
daa
sub
adc
nop
in
repnz
cmc
and
jmp
es
iret
mov
bound
cmp
or
push
in
pop
or
nop
cmpb
jns
xor
pop
loopne
out
push
push
push
or
pop
daa
inc
mov
dec
clc
hlt
idiv
mov
push
jmp
pop
movsl
inc
int3
stc
cmp
jge
cld
mov
stos
dec
or
repz
js
mull
ds
push
inc
mov
mov
jnp
jbe,pn
pop
arpl
lea
shll
mov
loop
les
sub
push
inc
sub
clc
aas
mov
out
cli
movsl
add
jnp
mov
cmp
int3
adc
ja
mov
test
mov
bound
xor
push
push
sti
inc
gs
jecxz
rolb
js
cltd
add
and
sub
fsubs
pop
pop
sub
test
shrb
hlt
add
cmp
push
dec
sub
popa
xorl
jo
xchg
fs
test
das
adc
arpl
jbe
adc
xor
and
aam
stos
xor
pop
std
and
add
mov
jge
leave
lahf
mov
fcoms
mov
fsts
aad
test
cmpl
cmp
enter
stos
push
jb
clc
mov
std
shr
cmp
cmp
insl
mov
pop
dec
cmp
mov
push
jmp
push
push
in
in
or
xor
xchg
push
scas
test
and
and
popf
pusha
call
lds
mov
sarb
mov
lahf
jno
jmp
dec
in
clc
jmp
movsb
clc
xor
imul
fst
adc
push
aam
add
loop
push
lcall
ret
mov
or
aam
daa
jns
dec
into
mov
fimuls
mov
push
sbb
jmp
cmp
fsubs
loope
fs
xchg
repnz
cmp
pop
fbstp
shlb
inc
mov
pop
jb
or
sbb
dec
arpl
sbbb
test
or
xor
cmp
mov
adc
xor
add
mov
bound
test
adc
pop
lret
sub
std
testb
xchg
in
pop
mov
in
imulb
mov
push
insb
cmpsb
cmp
cmp
xchg
or
nop
cmpb
pop
data16
test
push
mov
mov
add
data16
adc
outsb
ret
imul
ret
out
es
cmpsl
xchg
sbb
add
xchg
cmp
gs
in
rorb
mov
inc
mov
sbbl
xchg
mov
std
sub
imul
imul
shll
mov
dec
adc
add
aam
pop
xchg
jle
daa
inc
mov
jne
in
insb
mov
push
out
cld
jbe
std
inc
inc
lcall
and
stc
dec
repz
ja
jge
and
mov
pop
out
stos
sub
imul
leave
in
je
and
cmp
and
mov
sub
sub
cld
xchg
jge
test
adc
pop
add
das
dec
fisttpl
out
inc
data16
pop
ret
clc
in
xor
push
lock
push
pop
sbb
xchg
aaa
pop
xchg
xchg
lds
and
lcall
pop
add
aaa
mov
jg
out
adc
hlt
lahf
popa
aas
xchg
pop
adcl
push
fbld
mov
loope
mov
pushf
xchg
fbld
int
and
push
push
mov
lods
jg
push
shlb
mov
jl
dec
and
ljmp
push
fs
push
lds
ffree
pop
cmp
lods
scas
out
and
imul
add
mov
push
push
pop
mov
testb
and
add
cmp
dec
lret
adc
movsb
loop
rclb
jae
mov
dec
rorb
pop
jb
cltd
xchg
shll
mov
mov
lret
dec
mov
cwtl
mov
lods
fiaddl
adc
jbe
sub
daa
inc
push
sbbb
shlb
sub
lds
and
es
cmpsl
psubw
popf
cltd
add
lahf
add
cmp
flds
push
lock
xchg
out
iret
orb
xchg
cs
roll
or
mov
in
add
mov
mov
inc
cld
dec
daa
out
xor
pop
inc
daa
rcrb
in
jae,pt
fcmovne
leave
cmp
ficomps
mov
rcrb
shll
jl
mov
sub
inc
and
lods
mov
jp
and
push
or
sub
cmpsl
add
cld
push
je
popf
aas
and
mov
in
pop
aaa
dec
and
sbb
or
rorl
mov
out
aad
fldt
mov
clc
repnz
dec
mov
dec
jp
dec
leave
push
fs
ret
insb
sub
ret
xchg
sub
cmp
dec
mov
pusha
enter
cmp
pop
add
loop
mov
fstps
ds
xchg
pop
std
clc
into
mov
outsl
mov
or
fisttpl
or
add
adcb
pop
lds
jp
popa
jbe
imul
and
shll
xchg
flds
sub
lods
and
pop
andb
arpl
mov
aad
fdivrl
je
jmp
fsubrs
imul
subb
mov
aaa
out
insb
divl
ret
imull
push
jb
xchg
jecxz
ret
sub
xchg
push
outsl
add
xchg
push
enter
adc
mov
outsb
insb
test
repnz
pop
das
add
imul
fisubl
or
push
out
push
mov
outsb
xor
mov
orl
mov
inc
repnz
dec
js
xlat
push
cli
jl
popa
inc
les
and
jg
cmp
mov
in
fnsave
ficoms
or
ret
inc
cwtl
repz
push
push
xor
mov
inc
add
mov
and
sbb
fisubs
mov
clc
lcall
push
lods
sbb
ret
lods
jl
adc
or
add
mov
ds
mov
loope
repnz
popf
mov
pop
push
jne
and
cmp
jae
loope
add
divl
es
sub
jae
negb
and
adc
rorb
ret
stc
stc
dec
js
and
push
cmc
mov
dec
sbb
repnz
stos
dec
jge
in
cmp
jle
fisttps
mov
aad
xchg
pop
ror
push
inc
dec
lods
test
pop
mov
add
jno
push
movsb
xor
fs
xchg
dec
jecxz
and
in
int3
addl
mov
call
dec
sahf
cmp
mov
ret
sbb
cmc
inc
iret
xchg
xchg
enter
xchg
push
push
add
stos
out
mov
xchg
icebp
xlat
cwtl
ret
lea
push
add
dec
lret
jne
div
or
sahf
and
and
pusha
xchg
adc
jae
xor
xchg
sbb
xchg
int
adc
jb
push
out
cmpsb
and
outsl
cld
mov
or
pop
outsb
gs
lds
scas
in
loop
lret
pop
loop
cld
jle
imul
aaa
call
add
dec
movsl
cmpsl
pop
lcall
push
add
inc
repnz
xchg
jge
mov
jecxz
sub
xor
fists
sbbl
sbb
nop
add
dec
lea
push
push
cli
fmulp
int
push
testb
into
fldenv
or
jle
sub
sarb
push
call
mov
push
adc
je
jbe
js
xchg
cld
pusha
bnd
inc
lret
jae
xchg
push
cs
sub
xor
test
mov
stos
cmc
je
insb
jns
test
in
test
dec
xor
in
mov
loop
inc
es
inc
mov
sbb
imul
pop
cmpsb
or
push
add
mov
rolb
lret
mov
mov
and
jp
test
call
jo
das
rcll
jp
icebp
popa
enter
test
add
mov
in
outsl
leave
adc
int3
and
rcll
das
or
mov
fildll
inc
cld
pop
jb
add
jecxz
rorl
mov
int
cmp
scas
push
lock
cmpsl
push
inc
dec
fmull
test
jle
out
jecxz
das
movsb
andb
pop
loopne
fcom
outsl
ret
jl
inc
loope
xlat
mov
pusha
mov
popl
arpl
push
dec
aad
jge
and
outsb
mov
dec
aad
dec
or
jl
push
mov
mov
xchg
lock
pop
pop
jae
fisubrs
and
fistps
lret
jg
or
xchg
xor
xor
inc
pop
xchg
nop
cmp
xor
lcall
ljmp
mov
jno
adcl
ja
cmp
stos
mov
popf
or
insl
ja
cmpsb
jb
stc
iret
inc
lods
shlb
mov
mov
sbb
pusha
xchg
xor
push
adc
hlt
cmp
rorb
ret
mov
cmc
mov
adc
or
ds
push
dec
or
clc
xlat
sub
pop
insb
std
dec
mov
call
cmp
pop
ds
ret
inc
cmp
rcrl
and
inc
jp
pop
sub
jmp
mov
movb
or
arpl
fwait
cmc
lods
xor
xlat
jg
mov
pop
push
adc
xchg
lods
enter
inc
mov
mov
mov
pop
das
or
in
mov
inc
scas
or
pop
inc
out
scas
pushf
cmpsb
adc
rcrl
xor
sub
fcomi
adc
in
sub
les
inc
and
imul
lret
cmp
lock
xchg
inc
add
adc
out
loop
push
icebp
ret
repz
ret
adcl
pop
sbb
popf
aam
test
sbb
rolb
ja
add
hlt
icebp
dec
in
mov
mov
lods
lds
subb
imulb
pop
pushf
aad
and
xor
mov
rcr
jae
cmpsb
cli
jae
rcrl
js
sub
sbb
push
mov
mov
pop
scas
sbb
push
stos
out
add
imul
add
cmp
mov
lods
mov
adc
or
jne
dec
test
mov
fidivrs
cmp
xchg
and
pop
add
and
out
stos
loope
je
in
fistl
adc
push
pop
cs
mov
or
adc
fld
mov
xchg
sbb
in
mov
adc
mov
nop
popf
mov
pusha
push
add
xchg
aaa
mov
mov
or
fs
movsb
test
clc
mov
shll
cmp
jmp
inc
jg
adc
and
add
push
enter
dec
xor
dec
mov
out
fcom
lods
inc
sbb
jae
test
mov
out
fadds
cltd
mov
out
and
std
jnp
fdiv
out
jnp
and
mov
fadds
sub
dec
out
or
adc
pop
jnp
addl
or
or
mov
jae
orl
adc
mov
out
cmp
jns
jl
mov
lock
int
push
shll
ror
cmp
push
adc
stos
push
int3
xor
push
iret
outsb
ljmp
lods
in
sbb
pop
es
inc
lcall
stos
xchg
mov
out
push
pop
mov
mov
xchg
negl
addr16
lods
and
loopne
fidivs
loop
nop
imul
push
into
jns
lret
cld
dec
pop
bound
rcrb
dec
scas
dec
test
or
mov
sbb
das
pop
adc
pop
inc
adc
sub
int
lods
add
lcall
arpl
pushf
jbe
and
in
pop
ds
mov
popf
mov
push
iret
sub
sbb
insb
in
mov
imul
cltd
cmpsl
mov
fs
repnz
jae
jle
js
fsts
jo
mov
pop
add
push
or
outsl
and
add
aam
shrl
cmp
rcl
ja
cmp
pop
sti
sub
sbb
jb
testl
push
xchg
dec
or
mov
sub
dec
shll
rclb
lock
adc
inc
mov
dec
es
jo
into
cmp
inc
add
pop
out
mov
cmp
lods
out
push
xchg
lds
mov
stos
es
jmp
add
in
std
aaa
mov
fadds
dec
in
xchg
mov
pop
pop
adc
pushf
in
fnstsw
sbb
xbegin
nop
outsb
rep
sub
sub
xchg
inc
mov
les
mov
int3
inc
xchg
and
lcall
loopne
push
pop
fldcw
xchg
xlat
xchg
pop
push
dec
pop
jle
outsb
lret
negb
pop
leave
xchg
sbb
inc
or
sub
mov
fnstcw
ljmp
cld
addr16
dec
bound
shll
sbb
shr
or
adc
add
not
dec
push
add
inc
add
out
shl
rorb
test
push
dec
inc
in
push
mov
outsl
push
fs
cmc
imull
daa
sub
movsb
jle
mov
push
lds
dec
movsb
mov
adc
xchg
jnp
cmp
xor
je
adc
or
sti
je
push
hlt
es
movsb
test
repz
aaa
fcmovnb
sub
aad
mov
sub
sbb
ljmp
lret
fisubrs
int3
jbe
mov
es
xor
push
pop
mov
adc
pop
je
mov
mov
ds
jmp
gs
pop
cli
int3
mov
cmpb
xchg
cmp
or
repnz
ds
inc
rolb
jae
xchg
jmp
fidivs
cltd
ret
out
and
roll
pop
je
and
or
in
repz
pop
and
inc
bound
jmp
enter
pop
dec
cwtl
sub
je
dec
sti
adc
into
je
pop
and
inc
and
rcr
outsl
push
cmpsb
sub
aad
dec
xor
enter
repnz
mov
arpl
mov
insb
imul
fs
shrb
mov
imul
inc
arpl
out
xchg
outsl
xchg
sub
push
jne
test
icebp
cltd
cmp
xlat
dec
mov
sbb
pushl
outsl
mov
popf
popf
inc
cld
leave
dec
jp
fs
pop
movsb
mov
imul
cmp
fsubl
testl
cmp
int3
fcomip
xchg
sbb
adc
add
pop
mov
shl
add
addr16
lods
in
ss
push
mov
mov
ja
mov
xchg
packssdw
mov
sub
inc
push
popf
test
mov
out
movsl
pop
out
push
pop
and
push
sbb
fsubl
movsb
xlat
sti
mov
je
les
mov
fiaddl
xchg
push
int
xor
jle
cmp
sbb
rcl
loope,pn
sub
cli
dec
inc
sti
pop
push
xor
mov
push
add
daa
lock
jno
add
sahf
lret
stc
ds
scas
and
inc
rclb
or
js
popa
push
jns
hlt
jbe
push
gs
jno,pn
cltd
xchg
or
mov
movsl
in
in
scas
std
xchg
adc
movsl
aad
jecxz
ret
dec
mov
int
adc
jle
xor
cli
shlb
sahf
out
cmp
scas
dec
fisubl
sti
push
fiadds
fwait
call
inc
push
fs
pop
clc
ljmp
clc
dec
int3
dec
aaa
repz
cmpsl
mov
dec
xchg
cltd
addr16
mov
jno
movsl
insl
ret
shrb
dec
lcall
and
cltd
mov
shlb
mov
lcall
pop
lcall
filds
popf
push
dec
xor
nop
push
je
shlb
ror
fiaddl
mov
aaa
push
lods
and
cmp
and
mov
xchg
cmp
fstpt
add
testl
push
icebp
inc
pop
dec
test
push
mov
daa
cmp
pushw
and
mov
push
aas
negb
push
pushf
add
push
icebp
mov
in
std
cltd
aad
mov
dec
xchg
cmp
sbb
sbb
nop
roll
inc
data16
mov
sub
adc
fsubrl
dec
mov
out
mov
filds
std
outsl
mov
cltd
pop
jnp
and
jnp
mov
cmpsb
test
jl
sub
cmp
loope
xor
add
lahf
sbb
pop
mov
call
jecxz
fs
gs
dec
fs
in
inc
movsb
lock
add
xlat
mov
lods
cmpl
adc
icebp
mulb
add
mov
xor
div
sbb
jmp
jnp
add
or
mov
loop
pop
call
xor
cltd
icebp
sub
frstors
or
out
push
pop
dec
js
cli
or
movsb
mov
adc
xor
cltd
loopne
jmp
push
xchg
dec
stc
xor
inc
ja
in
lret
add
push
pop
mov
pop
pop
xor
sub
sub
cmp
xorl
cmp
push
push
insl
cmpl
xchg
repnz
fwait
pop
cld
mov
push
sahf
mov
xor
xchg
jno
lret
jp
push
mov
push
sbb
cmp
popa
fimuls
lds
xor
icebp
add
sub
jmp
mov
and
mov
and
ljmp
adc
adc
mov
cltd
sub
mov
sar
cli
or
inc
out
sbb
mov
lret
cmp
mov
ljmp
add
stc
mov
lock
fs
jns
cltd
loop
push
add
xchg
call
lahf
gs
pop
mov
add
fmull
and
or
cwtl
frstor
pusha
or
xor
mov
movsb
cld
mov
push
pop
lahf
fisttps
ret
out
aaa
aam
cmp
jp
mov
pop
es
xchg
push
jae
push
imul
lods
jne
dec
out
sub
add
lcall
scas
push
mov
fwait
call
cmp
pop
adc
pusha
sbb
pop
and
or
es
push
push
xchg
push
cli
les
jno
dec
mov
in
lcall
lods
orl
adc
pop
inc
leave
sti
popa
adcl
fistps
mov
lcall
movsb
cmpsl
fisttpl
lds
int3
sub
add
loopne
dec
xchg
insl
je
mov
pop
icebp
push
lea
repnz
rcl
pop
cmc
nop
int
call
and
xchg
cmp
int
adc
stc
ss
cmpsb
or
leave
push
and
jp
insb
or
dec
subl
lds
popf
cmp
mov
enter
mov
movsl
cmc
popa
dec
inc
xchg
jb
stos
shr
adc
jo
ds
ja
lods
clc
clc
jecxz
xchg
mov
icebp
int
xor
ret
jb
cwtl
shlb
add
stc
repnz
dec
inc
sbb
add
outsb
fisttpll
fists
xor
stos
shl
out
xor
or
dec
adc
and
out
inc
js
xchg
sbb
add
enter
lcall
xchg
xchg
shrb
and
lret
sarb
lcall
pop
and
in
imul
fstpl
jle
push
pop
arpl
pop
adc
loop
lods
cmp
test
adc
ret
pop
icebp
and
adc
cmpsb
and
xchg
and
iret
outsl
jb
mov
jnp
out
das
or
sbb
lods
test
and
jne
mov
pop
std
push
loope
mov
add
or
in
mov
and
sbb
dec
lods
or
mov
fwait
cmp
mov
push
mov
bound
lcall
in
addr16
notl
xor
rorl
or
andl
mov
jecxz
stos
pop
ficomps
cli
mov
sarl
popf
dec
mov
add
iret
mov
mov
add
loope
add
lock
and
and
dec
mov
cmp
outsl
push
pop
xchg
add
jne
fstpl
sbb
jnp
sbb
dec
mov
imull
insl
or
das
mov
lock
mov
mov
inc
aas
in
adc
add
movsb
adc
cmpl
daa
ljmp
cmpsb
aas
dec
xor
jl
lods
dec
daa
sbb
cmp
daa
push
test
loop
jo
or
adc
pop
jmp
sbb
push
aaa
mov
mov
add
pop
daa
addr16
mov
mov
das
inc
insl
xor
cmp
xchg
into
mov
or
and
out
popa
mov
mov
test
rolb
sub
push
push
cs
push
clc
xchg
sub
or
clc
xor
inc
cmpsl
int3
iret
mov
inc
jmp
stos
xor
push
sub
jbe
cmp
cmp
dec
cmpb
sub
sarb
ret
ja
ja
mov
sti
lret
cs
gs
push
xchg
test
push
stc
mov
daa
xchg
xchg
sbb
out
and
idiv
prefetch
or
gs
lret
sahf
sbb
push
adc
cmpsb
loopne
imul
pop
sbb
and
cmpsb
clc
add
fldcw
aaa
and
jecxz
dec
jnp
popa
add
cmp
sbb
stc
cli
stos
cmp
xor
sbb
aam
dec
dec
xchg
insb
and
add
xor
fnstcw
push
sub
ret
push
pop
cmp
lods
cwtl
push
jns
fwait
dec
push
inc
lea
nop
bound
js
jno
scas
ret
and
cwtl
pop
pop
and
cmpsl
ret
xor
pop
mov
cwtl
push
mov
inc
aaa
lods
mov
adc
dec
mov
xchg
out
adc
or
sbb
addr16
sub
pop
xchg
pop
pushl
mov
repnz
dec
push
rcrb
lds
pop
aas
cmp
xchg
scas
fs
jmp
push
cs
push
mov
mov
mov
mov
addr16
cli
sub
pop
jmp
movsb
cmovs
cmc
dec
imul
pop
xchg
cmovnp
pop
push
jo
enter
stc
out
sbb
rcr
lods
mov
ret
push
call
enter
add
stc
jo
aaa
pusha
mov
and
fmuls
inc
xchg
mov
test
popa
mov
aam
bound
fwait
cmpsl
stos
mov
imul
xor
scas
lods
push
xchg
inc
lcall
cmp
ja
clc
jle
daa
pop
lds
repz
cmp
ja
xlat
dec
sbb
xchg
pop
or
das
pop
je
test
sar
leave
push
push
movsb
pop
inc
inc
daa
loope
ret
push
pop
sti
vpshab
setns
xor
mov
sub
gs
mov
push
or
in
jge
orl
ds
mov
pop
lods
imul
gs
test
mov
pop
xor
xor
or
outsb
add
jo
add
fstl
mov
lret
cmpsl
aaa
cld
pop
int3
or
mov
xor
ljmp
out
jl
test
unpckhps
js
mov
mov
icebp
and
inc
icebp
and
fdivrl
gs
enter
pop
cmp
pop
jmp
dec
les
bound
xorb
jb
dec
xchg
subl
sbb
adc
imul
rcrb
adc
mov
test
stc
mov
cmc
mov
cmpsb
repz
fdivl
outsl
scas
add
and
jb
divl
add
push
sub
rcrb
jl
sub
cmp
shll
lea
push
mov
leave
xchg
sti
test
add
ss
sbbb
fwait
inc
xchg
sbb
inc
add
add
or
ret
cld
mov
aaa
iret
mov
arpl
ja
xor
mov
dec
fisubs
arpl
and
sbb
or
sahf
push
mov
test
stc
popf
jne
out
mov
les
into
sub
add
xor
adc
mov
mov
push
cld
dec
lock
lcall
stos
cmpsl
jmp
lods
mov
jl
add
push
cwtl
sub
mov
cs
sbb
ficomps
adc
cwtl
adc
push
mov
ja
icebp
cld
push
subb
xor
icebp
xchg
push
inc
add
sti
inc
mov
and
nop
or
das
jle
push
lods
add
stc
daa
mov
lret
mov
jge
mov
push
jb
xor
lock
shl
stc
and
xor
outsl
adc
addr16
ss
push
lds
jge
xchg
fwait
dec
cmp
das
xlat
cmpb
cld
fdivrs
cmp
mov
addr16
scas
or
jge
or
jecxz
mull
call
pop
xchg
xchg
or
stc
test
hlt
push
iret
mov
pop
add
mov
mov
or
mov
adc
mov
jnp
fldcw
cwtl
into
pop
dec
fisubrl
cmpsb
or
and
clc
aas
and
iret
mov
lret
test
push
pop
repz
cmpsl
in
pop
pushf
pop
push
jno
mov
mov
movsb
push
lea
inc
cmp
orl
sti
lock
pop
or
mov
aad
roll
push
shlb
inc
daa
sarb
sarl
jmp
insb
sub
sbb
lahf
sti
mov
into
ja
mov
sub
aam
xchg
push
cs
push
adc
lods
sahf
cltd
repz
pop
sbb
add
inc
shl
push
push
nop
sahf
adc
pop
jno
fwait
xor
in
pop
lods
rcr
jg
shlb
fdivs
fimull
jg
insb
fwait
insb
mov
aaa
and
push
mov
int
inc
sub
sub
in
es
mov
js
lret
sbb
or
sub
add
or
or
stc
and
push
sub
mov
subl
pop
ds
mov
dec
cltd
pop
mov
inc
push
icebp
or
outsl
shl
and
sub
popf
mov
adc
out
lcall
ret
cmp
mov
jg
bound
push
jo
loopne
imul
cmp
xchg
leave
push
or
inc
es
xchg
pop
cs
testb
data16
sub
and
scas
add
inc
mov
insb
hlt
add
ss
cvttps2pi
int
aad
repz
add
pop
push
lcall
out
xchg
icebp
pop
and
test
test
xor
mov
scas
idivb
sbb
lea
test
idivl
imul
adc
or
std
mov
mov
cmc
xor
jecxz
mov
ret
jo
sbb
into
dec
xor
jb
pop
pop
sbb
imul
inc
add
and
push
testl
dec
aad
push
arpl
sub
jle
dec
xor
punpcklbw
mov
test
mov
mov
inc
push
stc
mov
aaa
lret
dec
lock
jns
pop
push
push
repnz
std
mov
nopl
scas
in
call
mov
fld
je
xor
add
sub
shrb
adc
mov
cmp
les
xchg
scas
in
cmc
xor
cltd
rorb
push
mov
dec
sub
fbld
mov
pop
or
mov
cmp
daa
jo
push
sub
xchg
lock
call
lods
jb
jp
jg
addr16
add
fnstcw
adc
pop
push
andl
mov
fdivrl
popf
mov
inc
out
mov
daa
hlt
ljmp
dec
in
fimuls
xchg
push
jge
adc
add
test
stos
push
cmpsb
jl
mov
int3
sbb
jle
sbb
cmp
push
daa
stos
rclb
fwait
mov
loopne
std
adc
mov
mov
pushf
lods
popf
scas
int3
mov
lods
xor
xchg
jmp
push
aaa
xor
push
mov
sbb
and
jp
js
fwait
stc
loope
mov
ret
push
fistpll
seta
jae
fidivl
dec
fisttps
adc
sbb
push
ds
mov
data16
inc
dec
cli
hlt
call
loop
adc
sub
shlb
and
stc
xchg
push
icebp
outsb
push
lea
jl
xor
xor
xchg
dec
push
dec
sbb
aas
cmp
idivb
mov
repz
mov
call
enter
sbb
lea
aam
push
push
bound
ds
sbb
pmaxsw
stos
testl
jb
popf
rorb
ret
xorl
fimull
xor
push
stc
xor
ds
xor
shll
in
ja
stos
mov
adc
inc
mov
mov
cwtl
adc
in
cltd
mov
mov
and
lods
lea
jmp
ficompl
loopne
mov
je
movsl
push
add
adc
negl
mov
out
cmp
dec
popa
cmp
je
pop
movsb
sub
int3
mov
add
pop
push
jge
cmp
fcmovbe
mov
or
add
pushf
jmp
push
cmpsb
adc
xchg
divl
cltd
mov
arpl
cmp
ss
pop
mov
adc
inc
in
push
mov
pop
adc
cmp
dec
fwait
pop
fxch
push
push
lea
xor
jne
jg
fxch
pop
or
push
test
andb
sbb
jns
lds
cmc
icebp
test
pop
outsl
lret
sar
addr16
repnz
xchg
or
push
cmp
mov
jl
and
arpl
rolb
push
nop
es
and
aam
jmp
ret
push
add
movsl
jge
xchg
into
scas
in
xchg
in
lods
fadd
in
pop
dec
add
cmp
mov
mov
lock
aas
repnz
sub
pushw
fidivl
push
negb
stos
outsb
in
adc
mull
pop
fists
jne
jl
ljmp
push
adc
mov
mov
pusha
mov
or
je
push
mov
add
push
xchg
mov
xchg
or
add
scas
into
lods
jbe
inc
and
push
aaa
jl
sub
aaa
inc
pop
xor
adc
cmp
jae
mov
into
jmp
ret
fisubrs
lret
mov
push
mov
pop
bnd
jge
dec
ret
or
add
stos
xor
push
fiadds
sub
icebp
mov
je
jae
into
mov
cmp
jp
sbb
les
fwait
jmp
repz
call
jl
mov
mov
mov
leave
aas
adc
pop
dec
xor
xor
je
and
push
jp
mov
leave
lods
and
mov
test
fs
orl
leave
aas
daa
lds
jge
mov
xchg
xchg
add
cmp
or
dec
mov
xlat
aam
movsl
push
mov
lods
js
addl
enter
and
and
push
std
add
into
sahf
lret
stos
clc
scas
gs
xor
lahf
mov
mov
xchg
ja
out
dec
push
xor
mov
data16
lea
or
cmp
fimull
mov
stc
lods
mov
out
sub
insl
fidivl
les
mov
xchg
stos
sub
sbb
shrl
xor
loope
cmpl
repnz
or
js
pop
and
inc
fst
mov
in
sahf
push
sbb
and
pusha
lock
pop
mov
fisubs
jnp
jmp
push
sarl
xchg
int3
shrl
mov
xor
pusha
mov
xchg
or
call
cmp
pop
stc
dec
lahf
add
add
call
inc
add
add
xlat
fsubp
dec
cmp
or
imull
in
pop
cld
cmc
push
dec
aaa
pop
pop
mov
stos
xchg
and
push
rolb
mov
out
mov
jp
test
push
cmpsl
loopne
mov
pop
psrlw
adc
push
xchg
les
adc
lret
adc
insb
sarl
pop
fnstcw
stos
iret
lds
nop
subl
push
gs
push
xor
iret
xor
inc
fmuls
inc
jno
pop
mov
repnz
adc
adc
hlt
int3
sub
cmp
scas
loope
test
out
fcmovne
out
mov
stos
out
inc
cmp
ja
fs
mov
cltd
es
mov
inc
sbb
bswap
xor
sbb
sbb
inc
dec
std
xchg
xchg
xor
and
push
dec
or
sub
cltd
xor
out
mov
dec
xchg
pop
lods
xchg
mov
lock
sub
test
stos
fsts
adc
in
ds
movsb
js
inc
sub
shll
pop
xchg
pop
shr
test
xor
xor
push
dec
push
fisubl
jbe
and
sub
fwait
lods
fstl
xchg
rcrl
push
push
cmpsl
push
push
pop
std
adc
jl
pushf
inc
add
out
mov
mov
push
dec
in
mov
lods
jo
aaa
ja
jle
adc
sbb
pop
lret
xchg
aas
and
and
mov
xor
outsb
aam
leave
das
das
push
movsb
add
xor
popw
cmp
sub
dec
adc
addr16
cwtl
adc
dec
je
adc
push
out
in
push
mov
xchg
outsl
bts
dec
stos
xchg
mov
pop
ret
shrb
lret
cmpsl
loopne
lea
mov
hlt
jo
push
shr
dec
icebp
jle
pop
sbb
pushf
inc
mov
test
and
jnp
cmpsb
lret
xlat
fists
push
es
xlat
dec
mov
cmp
imul
sub
in
repz
jnp
pop
enter
flds
rcl
or
insl
push
mov
mov
mov
push
xchg
out
lock
aas
mov
fstl
add
outsb
mov
or
data16
insb
int
inc
stos
fsubr
test
dec
outsl
in
and
outsl
jbe
mov
sbb
mov
hlt
aaa
lods
andl
test
and
fistpl
adc
xchg
cmp
lock
pop
repnz
rolb
mov
sbb
mov
into
add
or
loop
cmp
push
cltd
xor
inc
scas
lret
fists
xchg
lds
ret
xchg
jnp
out
mov
enter
insl
jno
or
mov
outsb
out
pop
adc
mov
ljmp
or
es
jecxz
sub
insl
int
in
iret
mov
adc
mov
push
or
movsb
sbb
xlat
cli
sub
stos
add
pop
pop
stc
and
mov
dec
sbb
je
sub
test
lods
dec
add
clc
and
mov
lock
lods
mov
mov
xchg
mov
mov
mov
add
sbb
cmp
stos
mov
lahf
fldl
and
loopne
push
outsl
inc
push
mov
scas
add
das
std
jmp
fcoml
sbb
and
mov
call
mov
inc
test
or
jbe
adc
cmp
je
inc
mov
outsl
daa
fiaddl
andl
ficoml
mov
insl
lcall
bnd
cs
xchg
fisttpll
lods
push
les
sub
cld
outsb
jg
test
pop
subl
icebp
cwtl
movsl
arpl
fisttps
popa
fs
fwait
nop
movb
jb
repnz
out
addl
cli
sub
inc
ja
icebp
aas
mov
aaa
mov
out
xchg
movsb
push
repz
out
in
cmp
into
mov
stos
movsl
pop
stos
imul
mov
shll
rorl
dec
inc
jl
add
pop
inc
pop
mov
outsb
sub
cwtl
dec
into
xchg
push
xchg
push
inc
loope
pop
cmp
ljmp
pop
daa
call
pop
mov
sub
mov
jp
cltd
jl
cs
sti
sub
mov
fildll
loop
sbb
ret
pop
mov
mov
repz
loop
push
out
mov
sbb
jmp
std
and
mov
add
ror
pop
mov
push
add
push
notb
adc
inc
addr16
jns
rolb
ret
ss
mov
jno
pop
mov
fsubrs
shrl
push
adc
inc
outsb
rorb
movsl
daa
cmc
jg
lahf
lds
pushf
mov
fld1
xorl
mov
xchg
xchg
enter
popf
js
lcall
movsl
adc
clc
sub
mov
sbb
cmpsl
test
call
adc
fisttpl
adc
sub
lods
cmp
push
sti
xchg
out
ret
xchg
rorb
and
mov
dec
ja
in
jno
nop
push
push
nop
lock
icebp
out
jl
fidivrl
push
pop
ljmp
adc
xchg
mov
xlat
fmull
and
pusha
mov
adc
stos
inc
int3
sahf
and
pushf
xchg
shl
ljmp
push
xor
mov
xor
daa
ss
jne
fstps
loopne
andl
insl
xchg
test
in
mov
xlat
pop
jp
repz
test
xchg
sub
jb
jmp
or
shll
jne
pop
mov
xor
mov
dec
div
mov
jns
inc
sub
mov
cmpsl
jae
push
dec
sub
jle
cli
daa
xchg
orl
or
addr16
xchg
sbb
jge
and
sub
cli
pop
push
lcall
lods
sub
cwtl
xor
mov
mov
movsl
mov
and
stos
scas
xchg
enter
fldl
lods
repz
lock
push
xchg
xchg
jo
dec
pop
mov
sti
pop
mov
je
lods
addr16
inc
into
inc
insl
jbe
dec
test
push
and
cmc
sti
dec
xor
movsl
fisubrs
dec
cmp
scas
shl
cmc
pop
fyl2xp1
mov
add
mov
enter
sbb
inc
pushf
mov
inc
ret
xchg
sar
inc
in
sbb
sbb
mov
hlt
dec
aad
fstl
sbb
in
cwtl
inc
imul
rol
or
jecxz
jmp
loope
mov
push
fmuls
sbb
imul
adc
fnstcw
xchg
sub
scas
push
adc
lcall
and
mov
data16
jg
int
fcmovu
mov
stos
or
mov
cmp
stos
loop
xchg
dec
or
dec
popf
adc
xlat
loopne
xor
or
mov
in
fimull
and
shrl
sbbl
aas
popf
push
mov
or
jp
fs
or
fidivrs
push
mov
cmpsl
stos
add
push
dec
shll
ljmp
in
fcompl
jl
lock
es
popa
pop
fldenv
adcb
lds
mov
les
dec
lret
xchg
inc
xchg
out
pop
lock
or
pop
mov
out
xchg
movsb
shl
fs
jg
ljmp
adc
pop
enter
fcomip
and
sub
mov
lahf
xchg
fldenv
hlt
xor
jno
outsb
sub
cmp
cmc
pop
movsl
hlt
sub
sbb
scas
je
paddsb
hlt
fists
dec
stc
cmp
xchg
and
shlb
jbe
and
aaa
xchg
sbb
and
pop
ret
aam
sbb
cli
lret
jnp
ss
sbb
xor
and
mov
mov
and
and
cmp
jb
xchg
jp
inc
std
lcall
stc
or
pop
lods
inc
mov
pushf
lret
lret
fidivrl
add
cs
das
mov
insl
adc
repz
scas
pop
xchg
mov
pop
fisubrs
jge
mov
out
jne
and
stos
mov
in
push
imul
xchg
sub
push
xor
push
and
adc
pop
mov
jo
jne
mov
les
mov
je
jmp
outsb
iret
pop
sbb
push
and
dec
and
aad
pop
pop
out
cli
int3
push
into
mov
mov
push
ljmp
bound
dec
sub
mov
mov
pop
jg
and
dec
sbbl
inc
mov
cmp
sbb
mov
hlt
fcoml
push
sbb
rorl
mov
fs
adc
ret
hlt
popf
jmp
out
xchg
jl
test
loope
jp
aas
int3
fnsave
cmp
gs
mov
jbe
and
dec
lds
pop
rclb
gs
xchg
ja
in
jbe
and
jno
xchg
xor
aas
movsl
les
mov
pop
xchg
jg
shrl
loop
popf
in
stc
or
int
or
or
pop
lods
or
mov
repnz
in
pop
cmpsl
and
cmp
or
xor
adc
sub
jl
xlat
adc
pop
push
add
mov
push
cwtl
adc
aaa
add
shll
push
and
in
xchg
pop
mov
loop
xchg
jbe
push
mov
dec
jo
sbb
pop
pushf
lds
or
test
pop
mov
bound
mov
jge
adcl
test
mov
aas
xlat
fisubs
jg
dec
mov
add
scas
sbb
out
int3
xorb
shll
or
cli
movsb
pop
sbb
jmp
xchg
or
mov
cmp
add
inc
push
sub
mov
sbb
scas
xor
pop
add
stos
cmp
pop
dec
cld
adc
int3
add
fcomps
jb
movsb
ret
jg
lea
sti
xor
aas
inc
hlt
imul
mov
insl
mov
or
push
xlat
pop
js
or
leave
lret
test
call
sbb
pop
shlb
loop
lret
shll
jge
aaa
mov
out
xor
and
fs
stos
inc
pop
mov
mov
mov
and
add
and
xor
test
mov
or
outsl
add
aaa
into
sub
and
cmpsl
push
lahf
mov
mov
inc
mov
xor
or
jmp
rcl
mov
and
mov
frstor
ret
jae
cmc
mov
test
jp
rolb
pop
pop
lret
cmp
test
das
push
xor
movb
and
clc
sbb
ss
out
repz
aas
movsl
or
push
mov
clc
mov
scas
repz
ja
and
mov
popf
push
flds
or
cmp
test
cld
mov
mov
xor
ss
stc
sahf
adc
testl
inc
jne
stc
out
inc
in
into
mov
cmp
ficoms
rclb
xchg
ret
and
in
mov
fmull
adc
bound
push
call
xorl
test
cwtl
je
movsb
in
add
push
frstor
mov
fcmovne
ss
push
mov
xchg
add
or
cwtl
das
insb
cmp
es
dec
jns
pop
adcl
in
addl
mov
hlt
sbb
xlat
repnz
andb
mov
mov
ss
push
cmp
push
mov
cs
jecxz
insb
insb
push
jne
cmpsl
inc
sub
push
and
out
sub
xchg
pop
xchg
imulb
mov
enter
dec
jb
mov
in
xor
mov
push
mov
mov
xchg
push
pusha
xchg
sub
std
aaa
aam
lret
jns
imul
push
xchg
inc
outsl
inc
or
mov
clc
xchg
pop
dec
or
dec
inc
jmp
popa
mov
les
jno
mov
jnp
mov
shl
push
clc
inc
pushf
gs
push
stos
jmp
cmp
xchg
scas
xchg
call
lods
xor
repz
mov
sub
lahf
cmpb
xor
pop
mov
push
mov
enter
sub
scas
jl
cli
inc
inc
cmp
sub
add
adc
jns
outsl
jno
lret
sub
inc
and
mov
push
and
mov
hlt
dec
lret
mov
push
jge
cmp
mov
mov
mov
pop
in
jle
js
data16
cmpsb
dec
mov
xchg
mov
inc
aam
sbb
out
xchg
or
adc
add
ds
add
lock
sbb
mov
les
inc
push
xor
dec
cs
imul
dec
call
xchg
pop
je,pn
jb
sub
or
int
je
aaa
push
adc
jnp
and
sahf
adc
adc
into
jbe
ret
add
lods
or
lahf
mov
shrl
loop
hlt
aas
mov
cld
repnz
xchg
outsl
sti
mov
lret
in
out
jbe
mov
mov
xor
sbbl
dec
jle
adc
std
pop
in
add
fcoml
je
lods
cli
xbegin
fsubl
xor
inc
inc
cli
mov
jp
push
pop
movsb
sub
imul
jmp
cld
inc
jno
dec
fcoml
mov
cld
enter
sbb
dec
popa
mov
loop
sbb
aaa
hlt
addr16
movsl
sbb
mov
jge
dec
or
movsl
mov
orb
add
fldt
inc
hlt
movsb
not
cli
xchg
or
cmp
and
xchg
scas
xchg
cmpsl
push
push
mov
add
jecxz
icebp
ja
fmull
push
cld
inc
sub
cmp
inc
inc
sub
fiaddl
sbb
loop
aas
outsb
aas
mov
push
mov
xor
test
pop
aas
dec
call
jl
push
imul
pusha
scas
jne
in
div
std
cmp
es
mov
ljmp
push
jae
jnp
cmpsl
addr16
stos
aad
adc
xor
jne
or
repnz
sarl
stos
out
imul
and
push
jge
sub
mov
ret
pop
les
in
dec
mov
jge
pusha
in
movsl
hlt
test
sub
sub
popf
and
rolb
into
aad
outsb
sub
inc
mov
mov
adc
out
stos
mov
sbb
pop
and
jg
lds
sub
lret
pop
enter
das
repnz
jmp
call
mov
scas
movsl
pop
add
fstpt
in
jnp
dec
jmp
adc
push
shll
lahf
loop
mov
lds
fbstp
adcb
cltd
es
cltd
cld
push
xor
mov
lea
fs
pushf
or
add
daa
pop
pop
mov
imul
xchg
pop
mov
xchg
cld
sub
mov
es
push
cmpsb
cltd
push
popa
jecxz
jo
xchg
jne
stc
pop
adc
rclb
push
andb
stos
or
xchg
rep
loope
in
mov
dec
mov
add
cld
fnsave
dec
test
scas
sbb
stos
imul
dec
mov
and
rcl
or
fmul
fisubs
shlb
das
fiadds
fdivrs
push
sub
outsb
xchg
push
mov
scas
xchg
roll
fisubrs
cld
ror
fadd
add
ss
xchg
jge
sub
and
mov
testl
push
sub
push
mov
push
mov
clc
lods
adc
pop
es
adc
enter
call
aam
sub
data16
pop
adc
pop
cltd
daa
sub
repz
loopne
push
xor
fcmovu
xchg
loop
cmpsb
aaa
pop
mov
mov
mov
fcmovnb
mov
pop
cltd
xchg
lcall
jae
test
stc
int
lahf
push
pop
int3
or
cmp
pop
and
pop
in
mov
aaa
loope
out
cmp
arpl
test
in
insl
mov
es
je
shll
or
jge
mov
rolb
cs
mov
insb
repnz
mov
jno
loope
push
in
cmp
dec
and
add
fstp
mov
inc
sbb
ss
aam
test
cmp
sbb
xor
inc
adc
jg
cmc
rcrl
xorb
hlt
cmc
jge
mov
pusha
mov
inc
add
add
mov
orl
aas
mov
mov
sub
enter
or
test
pushf
insb
daa
sub
inc
nop
insb
cmp
int
fadd
les
cmovs
addr16
cmc
stc
stos
sbb
js
cmp
adc
daa
sbb
outsl
inc
in
jmp
data16
out
lea
outsl
mov
int
out
mov
scas
pop
mov
pop
in
clc
add
or
mov
testb
lods
xchg
arpl
test
out
arpl
imul
insl
in
sub
dec
jnp
mov
pop
mov
fimuls
jnp
movsb
ljmp
shll
xor
and
dec
frstor
inc
shrl
xor
jbe
mov
outsb
addb
xor
stc
jl
sbb
adc
jo
stos
mov
or
jnp
jno
nop
les
repz
neg
xchg
ret
mov
ret
mov
jecxz
jge
xor
lret
mov
scas
jne
sub
xchg
fst
cs
mov
inc
cs
mov
xor
test
inc
dec
jge
dec
insb
xor
ss
pop
push
or
mov
jge
iret
fstps
jno
sbb
add
aaa
fs
or
out
in
movsb
push
push
jmp
fldenv
pop
cmp
xchg
cmpsb
and
jnp
mov
pop
push
or
mov
imul
mov
jecxz
aaa
rcrl
gs
mov
lock
push
mov
into
and
inc
lock
cmpsl
out
in
dec
lea
inc
add
cmp
jl
push
cld
rorb
int
into
dec
xchg
sahf
out
ficomps
les
mov
or
adc
dec
mov
rol
shrb
pop
mov
jno
mov
xlat
mov
jnp
cmpsb
dec
stc
roll
aaa
jns
call
pop
das
pushf
mov
in
sub
jnp
xlat
mov
leave
xchg
shll
cmpsb
lcall
or
repz
sub
shll
jge
loop
and
sarl
xor
movb
push
xor
jge
rclb
adc
shrl
xchg
mov
idivb
cwtl
popf
lret
mov
test
sahf
add
adc
and
and
int
out
mov
pop
ret
shlb
or
fnstsw
xchg
imul
xchg
pop
das
or
add
or
push
push
mov
inc
test
negb
mov
loop
test
add
sbb
adcb
pop
sub
pop
inc
jae
js
mov
pop
xchg
lock
xchg
loope
or
andb
ds
sbb
hlt
js
mov
ljmp
xor
dec
ja
jp
jae
mov
lret
ja
insl
das
xchg
icebp
insb
out
arpl
add
pop
ljmp
pop
mov
sbb
mov
pop
sti
cld
pop
subl
or
and
or
sbb
call
sbbl
push
les
cmpl
out
test
add
lods
popa
fadd
mov
push
das
test
mov
in
sbb
in
mov
push
xchg
stos
mov
mov
lock
in
push
mov
and
fstl
stc
cmp
jg
xor
lcall
das
pop
negb
mov
mov
dec
or
pop
int
or
fcmovbe
testl
inc
jns
sarl
cld
cmp
mov
ss
adc
je
gs
xchg
add
inc
loopne
lret
fidivrl
push
push
shl
push
cld
mov
loopne
adc
adc
push
or
faddl
fs
mov
push
jne
and
jns
cmpsl
add
mov
mov
jno
inc
push
add
mov
or
lret
push
outsb
or
iret
xchg
ds
div
xchg
imul
xchg
sub
ficomps
xchg
loop
or
sbb
popa
xorb
dec
push
sbb
cld
inc
mov
fs
sub
mov
outsl
pop
in
cmpsb
outsl
push
fmuls
mov
sub
aas
mov
cld
pop
jne
push
nop
imul
data16
aaa
daa
out
in
sbb
lahf
xchg
lods
ret
test
dec
clc
xor
data16
inc
aaa
sbb
and
cmp
or
dec
inc
arpl
cmp
dec
jecxz
or
cltd
es
sub
decl
ljmp
mov
mov
xchg
rcll
cmp
imul
test
jno
ret
ss
sti
je
stos
fucomip
arpl
push
push
fildl
bound
inc
hlt
sbb
lahf
into
push
push
pop
push
jmp
test
gs
add
lret
push
adc
pop
fwait
mov
fsubr
std
mov
outsl
fldenv
add
mov
ror
xor
adc
push
icebp
push
cmpsl
rorl
in
lods
fisttps
repz
enter
jge
xchg
dec
gs
push
ss
loop
inc
rcrb
pop
addl
jnp
fdivrs
push
inc
cld
sbbb
or
mov
jb
rcll
pushf
xor
jnp
dec
and
inc
subl
fists
jmp
xchg
mov
xchg
inc
xchg
ljmp
fidivl
push
pop
adc
jl
xchg
outsb
mov
ljmp
sbb
sbb
cmp
imul
xchg
sub
dec
gs
sti
push
addr16
xor
jp
mov
xchg
movsb
or
mov
mov
enter
or
jne
jne
push
xlat
sub
aam
sub
push
jb
imul
clc
lods
clc
xchg
stos
mov
leave
or
xor
cmpsb
fnstcw
xchg
push
jne
outsb
xor
inc
lea
fwait
xchg
cmp
mov
pop
orl
ljmp
mov
mov
loop
test
out
and
leave
dec
xchg
lcallw
mov
xor
repz
jno
cmpsb
push
cmpb
shrl
mov
push
mov
ret
sbb
loop
outsb
jo
inc
lea
fldenv
mov
sub
inc
ss
stc
imul
adc
jp
ficoml
bound
sbb
dec
push
pop
cmp
mov
sbb
pop
add
xor
and
push
jl
mov
arpl
pushf
push
daa
xchg
mov
mov
fbld
push
and
mov
mov
inc
sahf
pop
fwait
rcrl
test
jle
jle
dec
outsl
sub
out
jge
testb
sbb
mov
xor
push
ja
inc
jle
dec
mov
inc
inc
leave
repnz
mov
mov
mov
lret
shrb
jmp
sbb
xchg
and
adc
rcr
mov
mov
stos
mov
mov
mov
sti
xor
mov
cmpsb
arpl
ret
push
bnd
ss
mov
cld
in
orb
mov
lret
test
rcll
imul
int
pop
rorl
rclb
adc
je
fwait
xor
sub
enter
adc
imul
rcrl
and
jo
in
cld
bound
mov
insl
dec
xor
loopne
pop
js
sbbl
addl
fdivr
push
lods
das
add
addb
xchg
fcmovu
add
nop
mov
or
push
push
dec
in
in
fcmovu
sbb
pop
call
xchg
stos
cmp
rcl
dec
mov
mov
or
imul
sbb
mov
test
insl
add
push
xor
int
pop
imul
pop
or
stos
sub
ja
outsb
or
lcall
iret
dec
adc
push
adc
sbb
sub
push
lds
imul
pop
or
pusha
les
std
leave
add
clc
nop
fdiv
lds
push
test
sahf
movsl
sbb
push
jns
sbb
or
dec
into
xor
pop
jecxz
inc
jns
in
dec
ljmp
push
inc
adc
cmpl
orl
es
movsl
dec
test
or
gs
out
out
repz
scas
notl
cmp
cmp
gs
dec
xor
adc
inc
or
sahf
mov
mov
fs
sbb
cmp
lahf
adc
sarb
add
dec
adc
and
ret
in
int3
mov
popf
out
push
mov
add
imul
sub
jns
outsb
push
cmp
mov
lods
lret
dec
shll
pop
adc
push
jbe
stos
out
in
cwtl
jns
lcall
mov
test
enter
das
mov
mov
inc
cmp
pop
pop
cld
rdtsc
xlat
loopne
and
nop
jmp
repnz
mov
les
loopne
je
pop
mov
xchg
sub
mov
cltd
fdiv
enter
sahf
lcall
adc
test
mov
mov
dec
mov
sbb
lods
mov
xor
aaa
in
in
cli
js
in
mov
push
cmpsb
mov
int
jo
into
lret
arpl
dec
aad
jo
fsubr
in
test
add
inc
fsub
and
pop
pop
mov
xor
mov
std
xchg
jnp
mov
enter
loopne
lods
fdivrl
repnz
stos
cmp
cwtl
pushf
mov
cmp
and
pop
jmp
mov
mov
clc
lcall
jno
out
lea
out
popf
dec
mov
sub
adc
stc
pop
cmc
pop
sbb
call
pop
jnp
adc
roll
push
xchg
daa
cli
and
test
aam
jmp
ss
push
roll
icebp
xchg
push
jmp
sub
in
cli
push
dec
mov
mov
pop
xchg
sbb
sub
into
and
out
ja
sarb
mov
in
scas
add
pop
jno
in
ret
stos
sbb
dec
aad
xchg
sub
or
pop
and
stc
fwait
xor
push
and
pop
sbb
sbb
sbb
inc
enter
pop
and
das
cmpsl
scas
jg
sbb
and
iret
ljmp
dec
push
xor
sub
mov
fisubs
xlat
add
jbe
xor
jno
ds
jns
xchg
lds
sbb
stc
inc
ret
outsl
mov
icebp
pop
and
rolb
inc
pop
loope
inc
ljmp
fmull
xor
mov
jns
arpl
jp
adc
jo
ds
in
cltd
cli
jbe
rcr
notl
lea
and
aad
sbb
push
cwtl
test
lret
and
adc
push
cmp
addl
bound
pop
jecxz
aad
mov
outsl
xor
lahf
add
lods
sub
sbb
int
loope
push
cmp
aaa
aaa
inc
das
imul
lds
inc
dec
pop
ret
cmp
mov
loop
dec
in
cmpsb
sbb
mov
cmp
ret
xor
jge
and
aas
or
in
mov
sbb
pop
or
fcomp
sbb
inc
or
and
fs
inc
insb
call
ret
dec
out
or
mov
call
inc
xchg
dec
dec
mov
outsl
shrl
inc
repz
xchg
lret
sbb
inc
negl
lds
and
inc
xchg
pop
shr
lahf
sbbl
repz
gs
mov
xchg
mov
aas
mov
ret
xor
pop
push
lock
add
pop
add
cmc
ljmp
lahf
cmp
int
push
sbb
rclb
mov
push
or
cwtl
xor
push
jae
xchg
lahf
les
addr16
and
mov
cs
test
loop
stc
push
sarb
push
loop
fnstcw
les
cli
insl
call
fdivrs
inc
test
and
and
orl
scas
xchg
adc
stos
or
sbb
push
pop
adc
fidivl
xor
cmp
mov
xchg
test
cmc
icebp
repz
add
ds
aad
fildl
stos
mov
cmp
mov
push
and
cld
icebp
stos
jl
jle
cmc
xchg
jo
sub
jo,pn
jae
int3
imul
std
adcl
mov
test
testb
or
push
and
lahf
addl
test
in
sbb
pop
popf
cmpsb
or
cwtl
fisubs
xor
outsb
pop
pop
mov
adc
mov
ja
imul
or
pushf
mov
and
lret
pop
jno
push
loopne
push
lock
xor
or
lret
cmp
sub
addl
mov
lods
clc
mov
pop
sbb
dec
lods
popf
xor
sub
dec
and
ret
pop
cwtl
and
fcoms
std
mov
jo
outsl
cltd
mov
ljmp
inc
pop
xor
ret
mov
jle
lods
hlt
xchg
das
lock
fs
clc
lahf
jne
repnz
cmc
lods
adc
lahf
push
sbb
xor
pop
cld
xchg
pop
movb
sbb
or
inc
js
cmp
fs
add
repz
sbb
pop
popa
mov
mov
cmpsb
mov
insb
pushf
xor
mov
popl
jnp
jns
ds
xchg
inc
std
jno
in
lock
pop
rorl
aas
sub
jl
nop
jp
pop
in
adc
scas
sub
js
popa
into
cli
gs
cmp
call
adc
cld
lock
push
ret
outsb
insl
or
fmul
jecxz
xchg
stos
stos
data16
jle
or
icebp
sub
jecxz
aas
mov
in
movsb
mov
or
dec
leave
sub
sbb
imul
adc
movsl
outsb
add
ret
cmp
dec
test
in
jp
js
bound
repnz
xchg
mov
xor
test
xorb
push
mov
pop
aam
xor
loope
cmpsl
pusha
mov
xchg
xchg
xchg
push
out
xor
dec
xor
idivl
jnp
mov
mov
jb
in
gs
jmp
cmp
fidivrl
mov
iret
stos
ret
inc
cmp
clc
dec
dec
pop
xor
rcrl
out
outsl
dec
icebp
mov
sbb
jl
xor
or
ret
fdivrs
lods
loop
jnp
shl
and
sub
fyl2xp1
outsb
loope
xor
js
stos
push
or
dec
stos
sub
movsb
in
mov
fisubrs
ljmp
and
aaa
ljmp
stc
repnz
pop
adc
out
movsl
mov
mov
mov
adc
fnstsw
adc
movsl
div
arpl
mov
subl
dec
mov
scas
imul
push
inc
popa
jmp
sub
adc
fimull
into
xor
dec
pop
cmp
pop
xor
xchg
push
push
insl
mov
and
fs
pop
add
mov
test
pop
out
pop
or
aaa
pushf
pop
xchg
xor
mov
or
add
sbb
dec
xchg
cwtl
add
inc
fs
bound
sar
cmpsb
aas
or
ds
jl
scas
sahf
ret
push
mov
adc
clc
jmp
rorl
pop
adc
in
pop
sbb
shll
adc
lea
std
ja
mov
outsb
adc
ret
insl
sbb
xchg
sbb
fmull
jno
xlat
pop
outsb
pop
sti
mov
xor
and
and
std
mov
shrb
sub
ret
daa
addr16
push
pop
dec
mov
pop
mov
inc
push
jo
pop
sub
lea
cmp
gs
sbb
das
cmpsl
test
xlat
inc
repnz
aas
inc
cld
jge
std
rcr
inc
call
and
push
in
rcrb
hlt
jl
mov
and
loop
es
ficoms
mov
clc
sti
mov
mov
in
and
dec
mov
lret
xor
sti
add
xchg
sarl
jnp
jecxz
cli
mov
sbb
push
add
mov
inc
mov
das
jl
inc
shl
cmp
push
dec
cmp
cmp
cmp
push
cmp
mov
or
push
inc
push
mov
lds
inc
push
leave
je
in
adc
addl
push
fldt
call
cmpsl
jg
mov
jb
adc
xchg
aad
xlat
jmp
es
jbe
mov
repz
mov
mov
xlat
inc
jbe
int
repz
insl
int3
imul
dec
lea
mov
xchg
rclb
cmp
call
add
insb
in
pop
sarl
jbe
movsb
cmp
cmp
add
mov
popf
test
popa
pop
dec
cwtl
leave
jecxz
jecxz
or
je
inc
js
sbb
jmp
jo
test
jge
fnstenv
jge
pop
loope
mov
pop
addr16
dec
js
xor
inc
js
xchg
mov
xchg
sarb
out
cli
add
jae
inc
push
inc
lock
frstor
mov
jno
jne
scas
fcom
imul
pushf
fsubs
cs
cmp
add
add
sbb
cmp
add
repz
es
push
cmc
adc
xchg
dec
imul
mov
icebp
jbe
fs
sbb
mov
pop
ror
mov
stc
push
test
or
sbb
subl
fsubrl
aas
loop
stos
or
xchg
enter
push
adc
inc
mov
in
in
mov
xchg
stc
cmpsb
add
and
jns
mov
pop
out
push
mov
xchg
cld
into
pop
mov
jo
out
push
fucomp
or
sti
clc
adc
jnp
cltd
shrl
add
cmove
dec
pop
sub
lods
and
icebp
sub
push
dec
dec
add
fstl
sti
add
sbb
mov
pop
xor
lods
rorl
jno
push
in
ljmp
in
adc
add
mov
hlt
xor
push
pushf
hlt
mov
pop
stos
out
daa
je
call
push
out
ret
mov
adc
lret
lcall
cmp
out
ret
push
not
dec
pusha
cmp
push
sbb
and
popa
sbb
test
leave
pop
xchg
sbb
mov
mov
xor
add
leave
dec
mov
test
xor
sbb
add
mov
sbb
dec
fadd
mov
mov
and
adc
clc
or
and
pushf
or
xchg
jle
lret
mov
lock
insl
jecxz
js
insl
cmpsl
adc
test
cmp
inc
dec
sbb
shrb
fisubs
jle
orl
cmp
pop
pop
adc
pop
movsl
lahf
gs
push
rolb
loope
fwait
arpl
xor
xor
xor
push
cmp
movsb
xchg
lds
sub
push
lahf
dec
insl
or
adc
pop
fsts
in
push
leavew
cwtl
rcl
fwait
xchg
pop
adc
hlt
out
jp
scas
into
push
jnp
mov
xchg
xchg
ljmp
jl
fdivr
xor
fcomps
scas
jmp
jg
cmc
fldl
lock
nop
sbb
jo
out
mov
inc
xchg
mov
fnstsw
xlat
inc
popf
data16
adcl
or
into
dec
fwait
or
xchg
xor
push
std
mov
cmpl
mov
sahf
dec
in
pop
sub
fsubp
insl
mov
xchg
bound
push
or
cmp
sbb
mov
stos
jnp
mov
sarl
js
cwtl
inc
pop
mov
and
test
ret
or
in
jbe
push
xor
lock
inc
xchg
fists
loope
or
inc
jns
pop
out
inc
jns
pop
enter
xor
into
sub
ss
out
inc
xchg
das
adc
cmp
aam
cwtl
outsb
lods
nop
enter
lahf
int
or
dec
loopne
pusha
popa
clc
cmp
dec
fwait
pop
jp
inc
mov
cmp
pop
jge
push
pop
inc
inc
or
fistl
push
or
popf
xchg
sbb
loopne
in
cmpsb
cmc
lret
xchg
mov
sbb
faddl
adcb
fmulp
mov
jo
int
jmp
fldcw
xlat
push
jl
adc
call
stc
dec
in
invd
outsb
sub
lods
insl
icebp
scas
out
popa
addr16
pusha
fldenv
xrelease
dec
add
nop
adc
dec
stc
cmc
cmp
loopne
call
cltd
lret
pop
dec
std
jge
push
sub
inc
mov
rclb
xchg
jnp
flds
mov
jmp
rclb
in
jmp
andl
mov
lods
mov
inc
movsb
xchg
jl
in
out
repnz
push
push
jecxz
inc
jmp
int3
or
xor
dec
in
outsl
rolb
daa
cmp
in
xor
jo
cwtl
push
push
cmp
push
push
dec
xor
add
mov
sbb
xor
adc
iret
jae
mov
nop
sbbb
dec
loope
cltd
andb
jge
lret
jno
mov
stos
data16
shll
iret
mov
xlat
lods
push
cmc
mov
imul
lret
cmpsl
push
mov
xchg
or
fildl
imul
lret
ljmp
shrb
xchg
out
cwtl
fistps
dec
cs
stos
mov
jg
test
in
ja
arpl
adc
movsl
adc
orl
int3
sti
push
pushf
push
add
cmpsl
adc
fadd
mov
lret
lods
mov
jle
pop
push
mov
not
idivl
aad
push
sbb
jo
aaa
data16
popf
filds
clc
iret
call
out
call
outsb
leave
arpl
add
pusha
sub
out
jmp
sarb
xor
jbe
fcom
inc
push
and
shll
jno
cmp
outsb
push
jnp
jo
dec
loop
inc
xor
push
cmpsl
cmpsb
ss
add
mov
xor
ss
ljmp
sahf
mov
adc
push
xchg
jae
push
add
sbb
or
test
inc
mulb
pop
or
mov
fsubr
mov
clc
dec
andb
cltd
and
je
loop
inc
out
dec
xor
lcall
pusha
ds
movsb
jne
out
je
jae
adc
shll
int3
sbb
jns
cmp
idiv
inc
push
stc
clc
jne
push
in
sbb
mov
lock
pop
lods
jl
push
inc
dec
sahf
rcrl
cmp
out
out
rcll
fcmovbe
jno
in
lock
xchg
mov
inc
subb
pop
incb
dec
test
fdivrs
mov
mov
mov
mov
addr16
pop
fs
xchg
inc
sbbb
fsubrs
dec
xchg
mov
popa
into
jl
ja
sub
rcrb
enter
repz
xchg
dec
and
push
stos
inc
shrl
aad
andps
xchg
aaa
dec
orl
das
aaa
inc
add
shlb
xor
mov
shll
iret
iret
sbbl
std
xchg
fiaddl
xorl
mov
pop
aam
mov
les
cmp
mov
push
and
push
leave
cmpsl
cmp
push
mov
sarl
mov
cwtl
mov
jmp
loopne
cmp
pop
or
push
in
mov
push
xchg
lcall
icebp
mov
mov
mov
cmpsb
jne
mov
in
ja
jo
pop
cmpsb
mov
iret
and
add
xor
aas
dec
or
xor
jb
pop
xchg
scas
pop
inc
adc
dec
inc
or
push
xchg
xchg
ja
mov
push
xor
and
lcall
inc
cmp
inc
sub
pop
push
in
insl
cmpsb
jnp
rol
xorl
mov
xchg
dec
les
dec
cs
out
sbb
xor
lds
cmp
sub
xchg
out
jle
int3
stos
rorb
test
outsb
pop
pop
sbb
dec
loopne
bound
lahf
push
sbb
lock
call
pop
mov
mov
mov
fdivrl
ret
mov
push
mov
cwtl
jp
daa
mov
sub
pop
loop
mov
sbb
or
sahf
jno
test
add
das
dec
mov
cli
pop
dec
push
cli
adc
out
shr
push
fisubrs
cmpb
fldenv
push
push
jge
lods
mov
mov
push
and
mov
jle
repz
aaa
in
outsb
cmpsl
push
mov
mov
sbb
cmpsb
lcall
lret
pusha
ds
and
sti
mov
inc
int3
ds
push
in
add
dec
add
ss
jbe
fsubp
outsb
fsub
lret
xor
js
ss
scas
dec
mov
rcll
stc
mov
mov
mov
add
adc
or
cwtl
mov
cli
adc
scas
cmpsb
mov
xor
notb
mov
pusha
addl
pop
mov
jae
mov
pop
pop
mov
and
mov
repnz
out
xor
ret
cmp
and
shlb
xor
cli
test
push
ret
pop
insl
jnp
out
lret
dec
test
in
lahf
jp
and
stos
aam
pop
push
pushf
cmp
movzbl
sub
add
sahf
sbb
xor
repnz
repz
iret
inc
sub
dec
xor
jne
sub
mov
test
jg
mov
dec
leave
mov
jecxz
push
out
leave
fs
addr16
xlat
mov
aad
sbb
loopne
cmp
mov
sbb
pop
inc
push
imul
pop
outsl
mov
add
dec
pusha
sub
xchg
adc
sub
dec
cmc
loope
shll
es
jg
fldl
shlb
mov
outsb
xorb
out
inc
mov
addr16
xchg
sbb
mov
cmc
add
pop
repnz
adc
adc
dec
sbb
push
fbld
dec
add
sarl
inc
loop
outsl
scas
mov
int
pop
pop
out
push
fmuls
mov
sarb
int3
fdivrl
xor
add
mov
xor
lock
std
imul
dec
sbb
dec
in
inc
sahf
cmpsb
cmp
cmp
mov
cs
pusha
into
adc
repz
addl
cmp
jecxz
enter
int3
pop
dec
insl
imull
insb
addl
dec
or
or
mov
das
inc
aam
std
or
jns
push
shll
int3
add
xchg
jmp
mov
sti
mov
ljmp
inc
dec
iret
test
or
shll
rorb
mov
xor
xchg
fildl
inc
clc
rcll
mov
in
mov
bnd
push
cltd
xchg
adc
mov
add
shlb
sarb
mov
lret
mov
dec
sbb
dec
movsb
mov
lea
inc
pop
ja
push
fsubl
jmp
push
cli
jl
add
or
add
in
test
push
in
rorl
push
mov
xchg
push
in
inc
xor
pop
sahf
pop
and
imul
jae
mov
arpl
in
aaa
mov
cld
lea
mov
int3
enter
pop
inc
lods
fidivs
cmp
pushf
test
add
mov
into
repnz
mov
mov
push
and
jg
enter
cmp
cwtl
sub
or
and
cltd
pop
jecxz
daa
pop
sub
hlt
inc
sbb
mov
and
jecxz
xor
add
and
push
das
xlat
pop
lods
movsb
mov
jnp
pop
aas
out
aas
lods
add
add
sub
jg,pn
gs
jnp
insl
insb
into
inc
mov
sti
mov
mov
into
cltd
aaa
push
in
sbb
jbe
push
les
les
sti
xor
mov
inc
cmovno
cmp
rolb
and
pop
mul
in
sub
cmp
insl
push
cmp
test
jmp
jno
dec
leave
es
nop
adc
and
pop
push
jp
push
repnz
subb
mov
jnp
int3
jbe
jo
cmp
into
add
lock
scas
pop
pop
jge
pop
int
adc
sbb
mov
and
xlat
cmp
movsl
iret
pop
mov
pop
xchg
lea
mov
mov
pop
in
dec
outsl
inc
std
loope
ds
xchg
mov
dec
cld
cmp
or
scas
or
ficoml
jbe
out
mov
test
in
inc
enter
insb
cmp
jp
jns
inc
fistl
pop
js
sub
out
cmc
in
call
inc
std
xlat
inc
mov
pop
xchg
shll
xchg
es
test
xor
mov
rcl
faddl
sub
and
ja
cmpsl
js
xchg
jno
mov
repnz
movsl
push
pop
mov
mov
lock
mov
cmp
arpl
mov
or
sub
cmp
cmp
imul
sbb
cs
push
add
sbb
jge
pop
loopne
sbb
int3
jb
xchg
faddl
push
into
inc
nop
ret
mov
fildl
mov
nop
cmpsl
fwait
cli
mov
das
mov
dec
outsl
rorl
mov
jl
mov
or
jmp
lret
cmp
ljmp
lods
inc
push
js
test
popf
pop
fistpll
fwait
inc
add
fidivrl
xchg
adcb
cwtl
lea
movsb
mov
test
cmp
and
cmpsb
dec
sub
lea
scas
inc
test
leave
sbb
mov
scas
test
xchg
nop
sub
pop
pusha
mov
sahf
cmpsl
jo
xchg
sbb
or
pop
dec
out
iret
and
ljmp
add
and
dec
or
mov
enter
or
roll
cmp
stos
cmp
sbbb
xchg
movsb
jmp
ds
sbb
jb
xor
and
sub
mov
mov
in
mov
or
push
jmp
dec
push
pop
pop
lods
lret
mov
fucomp
clc
dec
fbstp
jns
dec
inc
sbb
dec
adc
and
stc
ljmp
cltd
es
sub
cmp
and
sbb
pop
sbb
daa
mov
leave
std
mov
dec
push
lods
cmp
push
lock
mov
popf
in
or
out
inc
arpl
mov
jmp
cmp
int3
or
push
pop
push
jno
js
cmc
adc
pushf
cmp
nop
cld
mov
hlt
daa
inc
and
pop
test
js
mov
dec
lock
lods
sub
xchg
lods
shll
push
lock
and
push
adc
mov
lock
pop
movsl
adc
and
outsl
fcomp
mov
sub
push
loop
icebp
ljmp
and
daa
adc
xlat
sbb
aam
icebp
jae
jns
ret
lcall
inc
dec
inc
and
cmpsl
rorl
shrb
movsb
mov
cmc
mov
scas
mov
adc
xchg
add
mov
inc
adc
mov
and
into
inc
xchg
out
mov
mov
xchg
scas
or
nop
lods
sti
cmp
jnp
lock
jb
mov
enter
mov
repz
dec
fcomps
aad
xchg
xchg
aad
jnp
popf
lcall
les
ret
movsb
sbb
mov
sarl
dec
addb
inc
dec
ret
xlat
mov
dec
mov
jl
inc
or
ja
in
icebp
push
daa
pop
sbb
aaa
pop
aaa
mov
faddl
test
mov
fdivr
push
pop
jge,pt
js
or
das
push
in
cld
push
push
mov
xchg
call
in
add
leave
insb
fcmovb
inc
mov
cmc
stc
scas
aas
jg
gs
neg
add
aad
cmp
sbb
pop
pop
test
jne
int
call
add
jo
fwait
popf
daa
rclb
xchg
jmp
or
stc
add
out
iret
test
cmp
xlat
xor
dec
mov
out
jmp
in
pop
rorl
xchg
jnp
lods
fldt
lods
mov
mov
inc
mov
inc
movntps
jecxz
rolb
push
shl
fnsave
es
mov
stos
adc
pop
mov
xor
pop
sti
gs
mov
mov
imul
dec
and
lods
outsl
cmp
mov
test
adc
mov
int
scas
and
notb
in
sub
ret
add
jb
pop
mov
xchg
mov
loop
mov
or
mov
jecxz
aas
lods
cmp
addr16
mov
test
stos
pop
pminub
inc
dec
adc
rolb
ret
sub
in
nop
mov
ficoml
movsb
sub
ds
cli
ret
and
cmpsl
pop
sub
cltd
adc
je
sub
mov
lods
push
push
pop
bound
adc
mov
sbb
nop
jecxz
test
std
stc
aam
xrelease
and
push
dec
inc
jnp
mov
aad
rorb
mov
dec
sbb
inc
sbb
sub
hlt
sarb
js
and
xor
icebp
adc
movsb
or
dec
nop
cmp
fildll
or
inc
jle
bound
aad
xchg
ds
dec
pop
xor
ja
sbb
sti
or
mov
adc
mov
in
fisttpll
rcrl
or
pop
sbb
xlat
sub
sub
dec
sbb
cmp
pop
xchg
sbb
add
loope
mov
lret
aas
adc
pusha
lret
mov
shlb
and
in
mov
cwtl
xchg
inc
lock
mov
shll
ja
mov
inc
dec
inc
mov
mov
add
mov
add
push
data16
xor
popa
mov
iret
jl
mov
pop
imul
decl
mov
cmc
aaa
add
mov
push
arpl
add
jnp
push
jbe
movsb
shll
mov
repnz
rcr
mov
hlt
loope
add
inc
pop
mov
insl
pop
lock
shlb
jge
xchg
fwait
sbbl
xchg
mov
and
sti
rolb
aas
dec
and
dec
mov
movsl
cmp
mov
jns
mov
xchg
jae
mov
xchg
dec
cmpsb
inc
std
or
fwait
inc
movsb
and
mov
cmc
cmpsl
arpl
aam
loope
fwait
jmp
out
jno
sbb
mov
xchg
jmp
adc
out
xor
push
mov
ljmp
dec
pop
ljmp
movsb
mov
scas
ds
mov
jmp
lods
ret
into
jge
jp
mov
mov
cmp
aas
mov
mov
test
fcompl
enter
pop
shll
or
les
cmc
push
cmc
push
adc
cmp
pushw
push
push
in
es
out
inc
mov
mov
mov
pusha
or
test
push
pop
pop
fsubrp
addr16
icebp
jne
iret
lcall
subb
leave
lcall
cmp
add
or
out
aaa
aaa
sub
leave
mov
dec
sar
mov
mov
test
push
ret
inc
push
pop
cmc
dec
loop
and
mov
dec
outsl
dec
je
push
ret
mov
mov
or
xchg
cs
bnd
scas
cmp
enter
in
cmp
mov
pusha
mov
xchg
jbe
mov
cmc
mov
dec
mov
pop
mov
in
inc
outsl
sub
outsl
fwait
or
add
jne
push
fsub
les
lret
xchg
push
aaa
enter
movsb
pop
dec
inc
cmp
or
out
dec
cltd
das
scas
or
int3
mov
psrld
test
aas
scas
jnp
lret
sbb
shrb
fsubl
and
std
das
mov
adc
add
mov
adc
mov
inc
aas
in
in
leave
jo
jno
push
push
mov
hlt
repz
mov
dec
daa
dec
mov
lret
inc
fnclex
push
pop
sti
ljmp
push
rcll
push
pop
mov
subb
loope
xor
cmc
imul
dec
lods
shl
insb
divl
sbb
inc
fmuls
data16
cmpps
inc
sbb
out
adc
push
sbbl
cmp
pop
cmp
jl
lods
imul
mov
cmp
add
loopne
xor
jns
lcall
popf
popf
pop
mov
in
outsb
add
or
lods
pop
jge
call
push
mov
fldt
fs
fistpl
or
mov
repz
push
dec
push
dec
add
add
mov
sbb
mov
sbb
arpl
cmp
jns
jp
fdivs
daa
fsub
jae
inc
dec
mov
int3
in
test
mov
fstp
outsl
sub
sbb
nop
xchg
push
adcl
clc
cltd
ds
jns
scas
test
pop
ffree
dec
inc
fidivrl
push
ret
xor
dec
test
hlt
cltd
cmpsl
xor
push
outsb
in
lods
mov
sbb
cmp
sarl
das
push
out
dec
or
mov
mov
ret
outsl
xchg
imul
cli
sbb
loope
insb
sbb
cltd
int3
in
cmp
mov
push
jmp
inc
inc
add
dec
mov
mov
icebp
dec
or
jmp
xor
and
aam
sub
lea
pop
pop
sub
and
dec
fmul
cltd
movsb
push
mov
fcompl
add
jge
cmp
dec
das
dec
xor
sbb
imull
je
xlat
in
push
xchg
fninit
mov
jo
pop
jge
pusha
icebp
xor
or
mov
pop
out
jmp
lods
push
xor
dec
ds
push
push
icebp
insl
hlt
xchg
add
cmc
andb
sbbb
mov
dec
xor
mov
or
cmp
out
jg
xchg
movsb
sbb
addr16
pop
test
inc
scas
popf
ret
mov
fmuls
int3
shll
xchg
pop
jb
adc
sahf
inc
cmpsl
orl
or
pop
jb
cmp
aam
mov
mov
push
ljmp
sub
aas
dec
cltd
mov
jns
pop
sub
loopne
cwtl
notb
jbe
and
dec
cld
sarl
repnz
lret
add
push
or
mov
mov
jp
cltd
pop
mov
jge
aad
loop
daa
ret
ds
repz
mov
mov
adc
clc
dec
cmp
push
negb
push
xor
test
xlat
sub
xor
jno
int3
cwtl
mov
movsl
popf
jns
in
inc
xor
stos
bound
les
inc
out
pop
fildll
jbe
mov
addr16
pop
sbb
cmpsl
inc
repnz
jo
bound
leave
xor
flds
dec
ja
sub
xor
aaa
push
sub
push
rorl
adc
cli
sahf
pusha
push
jbe
rolb
mov
sbb
cmp
out
pop
mov
insl
test
inc
loope
jno,pt
push
into
adc
fwait
inc
dec
hlt
cmpl
sarb
jo
pop
sub
daa
int3
xchg
push
mov
lds
loop
mov
or
lret
insb
scas
lret
sbb
cmpsb
outsb
inc
hlt
mov
dec
je
mov
cli
xor
hlt
xchg
sub
popa
gs
pop
push
aad
popa
shlb
inc
aaa
push
jbe
dec
inc
addr16
int
jns
jle
icebp
aad
out
cmpsl
aam
cmp
icebp
sbb
lcall
sbb
scas
xchg
xor
xor
xor
mov
out
mov
cltd
lea
add
mov
lcall
push
shll
lock
pushf
pop
dec
mov
xchg
sarb
lahf
pop
mov
push
aam
jge
in
repz
cld
xor
ja
into
das
or
mov
das
in
and
mov
mov
lea
jns
dec
pop
fs
pop
mov
and
mov
jnp
mov
fcompl
mov
dec
push
jl
cmp
repz
in
lcall
push
jno
and
gs
cmpsl
movsl
enter
or
push
clc
movsb
pusha
call
shll
mov
shll
hlt
loope
sub
das
xchg
jmp
in
rcl
adc
imul
inc
ljmp
ss
mov
gs
add
mov
push
out
jg
mov
cmpsb
ds
test
lods
popa
fstpt
stos
mov
mov
mov
insl
repz
mov
mov
test
outsl
mov
jbe
push
into
push
ss
fisttpll
mov
dec
jl
mov
test
xchg
adcb
test
pop
inc
mov
or
test
cwtl
aaa
sub
arpl
adc
lods
xchg
sti
lcall
test
mov
pusha
dec
cmp
mov
pushf
cltd
inc
cld
push
popl
push
and
and
lret
dec
pop
pop
je
xchg
pop
and
imul
mov
icebp
jg
cs
push
iret
fisubl
mov
add
mov
popf
mov
stc
ljmp
arpl
sub
dec
push
adc
sub
add
sub
sub
in
cmpsl
ret
das
push
mov
add
addb
ljmp
aaa
lret
cmpl
mov
mov
inc
leave
xchg
mov
dec
out
lahf
pop
jb
push
mov
sbb
jg
xchg
pop
jle
jp
xchg
cmp
hlt
mov
lcall
jp
pop
mov
adc
jmp
aad
lock
inc
jge
xchg
dec
in
imul
andl
ficompl
in
outsb
xor
ftst
xchg
or
lahf
sbb
iret
and
pop
jp
dec
repnz
inc
add
inc
pop
xchg
fildl
mov
pop
iret
xor
cmpb
jbe
mov
out
add
inc
jo
in
and
fwait
mov
pop
xlat
in
pop
xchg
cltd
pop
xchg
rcr
adc
popf
jmpw
test
cwtl
mov
lret
fsubrl
jg
adc
pop
aas
call
mov
roll
rcrb
or
jp
iret
push
pop
js
pushf
mov
pop
pushl
clc
xor
adc
and
jns
cmp
loop
cld
mov
movsl
mov
add
xor
shl
mov
call
pop
pop
aas
mov
pop
fs
mov
push
daa
mov
fsts
jne
push
and
cmp
push
in
lcall
mov
cltd
cs
enter
add
scas
add
sarb
inc
mov
inc
jns
ljmp
lods
shrb
xchg
movsb
or
mov
out
jns
and
aas
in
les
les
pop
and
movsl
pop
xlat
xor
mov
sbbb
or
stc
aaa
sbb
call
mov
inc
cmp
cmp
cmp
dec
test
gs
jb
mov
mov
test
mov
cmp
xlat
mulb
mov
rcl
xchg
lods
pop
or
add
mov
pop
xor
sub
push
ljmp
aas
or
ljmp
add
es
cli
std
movsb
leave
shll
lfs
xchg
cltd
sub
jb
lfs
mov
movsl
sub
stos
push
sti
movb
xor
je
xor
jl,pt
test
cmp
scas
lcall
adc
sbb
inc
pusha
and
push
or
pop
pop
dec
subl
pop
fisubrs
xor
fsubrs
sub
jmp
and
cmp
and
lods
and
mov
and
insl
fprem
in
or
ss
push
adc
into
pop
mov
jne
sub
aaa
popf
pushf
int3
add
in
xchg
scas
scas
mov
push
jbe
xchg
pop
xor
popf
push
in
in
mov
cmp
test
inc
and
mov
fiadds
leave
std
lock
imul
adc
sub
xor
in
lret
gs
dec
add
out
add
fsubrs
xor
and
inc
loop
imul
das
or
lods
shll
test
bnd
push
test
push
jno
pop
push
adc
repnz
cmc
fcompl
mov
or
mov
mov
fucomp
aaa
xchg
xchg
test
test
fmuls
nop
mov
mov
fdivrs
iret
mov
jae
lcall
pop
insl
or
mov
test
pop
or
push
push
lods
sub
dec
jge
jno
test
mov
int3
scas
insl
imul
push
adc
loope
mul
cwtl
dec
rolb
xchg
js
mov
hlt
sahf
push
lret
jg
mov
jno
push
mov
in
out
pop
jp
add
push
sar
cld
push
sarb
adc
loop
std
dec
shrl
jmp
push
mov
sbb
push
lret
mul
sahf
sahf
lods
aas
test
sub
xor
lret
lds
xchg
movsl
sbb
sub
pushf
sti
push
sbb
adc
sub
mov
sbb
mov
add
sub
or
repnz
cmpsl
clc
cmp
aas
add
adc
aad
stos
test
sahf
dec
pop
cmpsl
insl
addr16
xor
sub
xor
lods
repnz
mov
lds
jbe
xchg
imul
push
js
push
or
inc
stos
and
pop
mov
sub
pushf
and
fisubrs
push
cmpsb
cmovge
sbb
dec
jo
sbb
call
sarl
imul
ret
add
testb
test
inc
les
int
aas
adc
xor
jmp
jbe
push
in
aas
dec
cmovg
test
mov
inc
push
rcrb
dec
and
int
je
mov
ljmp
dec
and
mov
pop
stos
loopne
push
inc
cmp
ret
and
sub
bound
sahf
inc
sub
loopne
inc
sbb
addr16
push
lahf
pop
add
popa
sub
or
in
inc
mov
lds
hlt
lock
rolb
pop
push
sub
push
add
inc
in
push
push
stos
xchg
mov
je
aas
lods
fnstenv
sarb
cmp
adcb
rclb
icebp
cld
lods
dec
mov
adc
mov
cmp
stos
int
addl
or
and
jmp
mov
cmp
dec
mov
dec
mov
sub
test
daa
ljmp
out
jo
and
push
jne
lods
adc
clc
lret
std
push
insl
and
or
outsl
mov
iret
pop
pop
std
and
inc
xor
adc
xchg
inc
testb
lahf
arpl
xlat
dec
fnstenv
push
outsb
in
xlat
leave
test
push
fdivrl
loope
mov
dec
push
rcrb
mov
std
sub
ja
jae
add
lds
push
fistps
xor
sbbl
push
imul
push
jle,pt
push
mov
mov
add
xchg
je
cmp
outsl
xor
jmp
iret
adc
ss
dec
mov
or
adc
dec
inc
xchg
push
mov
add
stos
sti
adc
sbb
dec
jge
jle
pop
inc
mov
pop
mov
loopne
popa
mov
je
arpl
or
add
push
xchg
mov
xchg
cltd
mov
leave
lret
jle
sub
rolb
sbbb
add
mov
ds
cmp
fdivl
adc
push
lret
mov
push
aam
pop
mov
daa
imul
or
gs
popf
cmp
or
cld
mov
clc
sbb
cmp
fists
pop
repnz
inc
pop
dec
xor
mov
pop
pop
jo
pop
adc
inc
cmp
xor
jnp
inc
sti
mov
cwtl
mov
push
outsb
xor
cmpsl
mov
lods
ss
test
push
and
and
push
sahf
js
in
in
jl
cmpsb
xor
stos
dec
xchg
jo
movl
and
aam
gs
and
xor
andl
daa
add
sub
jge
mov
mov
adc
mov
mov
test
mov
dec
sbb
outsb
cmp
lods
int3
pop
das
add
or
inc
push
fistpll
pop
sub
push
pop
and
gs
rclb
cmc
jno
lahf
call
out
dec
and
test
and
mov
push
push
cmp
pop
cld
pop
push
dec
jbe
and
iret
std
add
inc
jb
rolb
adc
pxor
inc
out
mov
cli
xor
cmpl
lcall
mov
xor
and
push
mov
mov
xor
xchg
lea
ds
or
dec
cmp
imul
aaa
sarl
insl
pop
push
mov
divb
xchg
sbb
jb
cmc
jecxz
mov
mov
dec
movsl
cmp
mov
push
fstpt
sub
scas
mov
jo
ret
lcall
test
popa
pop
lret
and
das
jp
lods
add
sbbl
orl
pop
and
scas
dec
dec
add
sar
and
jne
sbb
ja
sub
xor
cld
inc
add
cwtl
mov
inc
in
gs
int3
pcmpgtw
cld
dec
mov
dec
push
jae
in
xchg
sub
in
add
dec
push
xorb
mov
mov
lea
stos
ss
mov
adc
sub
stc
or
xor
rorb
mov
addr16
rorl
cld
push
xor
sub
hlt
in
fs
shll
lcall
imul
push
dec
adc
jno
mov
jecxz
xor
mov
sbb
std
pop
pusha
scas
shrl
loopne
ret
std
sbb
xorl
aaa
jo
mov
sub
mov
mov
and
jno,pt
mov
and
mov
xor
inc
lret
ret
loopne
push
jmp
lock
add
mov
lea
popa
and
les
int
lods
lcall
out
lea
mov
mov
xor
push
or
rcrb
inc
int
jb
mov
call
mov
lahf
sbb
arpl
sbb
xchg
xor
add
andl
adc
xchg
cltd
test
das
mov
dec
ret
mov
xchg
or
pop
sub
xchg
or
or
cmp
jle
xchg
outsb
and
push
push
jae
test
xchg
in
push
cmp
pop
outsb
call
fstpt
add
sub
sbb
jo
js
xor
sti
add
cli
test
jle
mov
lret
inc
and
sbb
call
loopne
mov
lea
rcl
or
test
mov
test
ret
xor
xchg
lods
je
pusha
add
add
loope
mov
pop
aas
push
call
mov
stos
push
popa
daa
stos
ja
scas
sub
mov
push
push
jl
std
std
pop
movups
sub
xor
sti
and
cs
xchg
or
jne
insb
fldcw
popf
or
or
or
sti
cmp
repnz
stc
jbe
cs
xlat
aas
mov
mov
in
cwtl
or
cld
outsb
add
dec
test
xlat
mov
fcomi
or
push
dec
cmp
jno
xchg
jnp
out
xchg
mov
lods
inc
in
fcmovnb
cs
xorb
movsb
jne
stc
push
es
push
hlt
popa
fnsave
incl
movsl
xor
ss
std
xor
notb
test
std
push
out
or
pop
addb
scas
icebp
imul
cs
or
pop
adc
out
xchg
add
mov
cmc
push
mov
movsl
into
jl
adc
jbe
lods
sbb
test
movsb
cltd
sub
sub
add
xor
sub
adc
inc
subb
leave
xor
sub
out
mov
cmpsb
xor
std
jns
cmp
xchg
cmpsl
aad
push
les
xor
dec
out
sbb
idivl
fisubrs
add
pop
xchg
dec
icebp
inc
int
push
shrb
in
sub
sbb
call
jnp
pop
lods
mov
lahf
mov
pop
push
in
xor
mul
add
rolb
fidivrl
dec
cmp
mov
call
mov
xor
popf
or
adc
outsb
xlat
ja
sub
test
insb
sahf
aaa
sub
scas
stos
das
aas
sub
mov
xchg
test
popa
cmp
insb
filds
dec
fbld
cli
sbb
test
out
jnp
lahf
stos
mov
mov
pop
or
rcrb
xlat
mov
clc
int3
mov
pop
es
add
pop
in
es
jmp
cmp
cmp
xchg
xor
ret
xchg
and
inc
popf
aad
adc
mov
xchg
adc
inc
add
sbb
fsubs
stc
jge
inc
mov
shrl
jl
movsb
cmpsb
mov
pop
out
sahf
cmp
psubq
out
mov
adc
dec
xor
je
jb
push
or
fldl
lahf
jle
mov
fmul
xor
pop
xor
sub
adc
adc
dec
or
mov
jg
or
xchg
int
cltd
jae
insb
cld
in
ljmp
and
mov
cli
sbb
repz
add
insl
addr16
mov
mov
rolb
sbb
jo
fwait
inc
cs
jmp
and
jle
fcompl
in
pop
lahf
push
xor
jl
and
aas
xchg
or
xchg
ret
sbb
sub
mov
rcll
sarb
sti
pop
arpl
inc
pop
scas
xchg
loop
gs
icebp
push
jmp
je
sub
jno
stc
sub
add
jno
ds
cmc
push
cmp
out
or
mov
movsl
mov
sbb
aas
fdivs
jg
pop
mov
mov
addr16
fldl
adc
xor
movsb
push
lret
pop
mulb
fwait
mov
inc
pop
adc
push
pop
gs
pushf
iret
and
add
outsb
push
cmpsl
jl
jle
push
dec
adc
js
loope
dec
in
or
jne
aad
mov
stos
dec
mov
jmp
repnz
inc
jno
cwtl
sub
mov
out
gs
inc
xor
insl
jbe
pop
dec
lahf
or
push
aam
add
jns
jbe
jne
fsubrp
push
enter
aaa
and
cs
mov
add
push
mov
mov
mov
mov
dec
push
pushf
mov
mov
sahf
xchg
cmp
movsl
sbb
stos
movsl
add
inc
mov
sub
adc
sbb
mov
pop
inc
xor
lds
cwtl
movsb
xchg
sub
jecxz
xchg
out
inc
js
pop
adc
mov
pusha
jg
xchg
cmp
jno
aaa
or
sub
pushf
push
hlt
xchg
scas
sub
pop
imul
pop
into
mov
adcb
xor
loope
pop
or
leave
add
jnp
xchg
jecxz
ror
out
test
mov
cmp
pusha
insl
dec
repz
addr16
call
pop
scas
xor
mov
pop
jae
pusha
adc
into
fwait
or
setle
push
cs
addl
fldt
ja
test
adc
xchg
sbb
fsts
test
stos
js
xchg
mov
inc
or
xlat
lahf
cwtl
jle
aad
call
sbb
mov
lods
gs
daa
fnsave
push
pop
push
dec
pushf
inc
out
hlt
rcll
in
ss
inc
xchg
bound
mov
pop
jb
bound
jne
cli
setae
gs
imul
sarb
sbb
and
mov
cld
xorb
mov
pushf
pop
add
ret
sub
xchg
and
icebp
enter
or
sub
out
pop
ds
push
push
sub
leave
enter
loopne
lods
xchg
jnp
aaa
mov
sub
push
jno
mov
inc
and
adc
lods
adc
fidivrs
push
and
sub
push
fildll
std
sti
subb
call
shlb
scas
jle
dec
mov
or
test
and
into
xchg
loop
mov
dec
std
int
repnz
loope
aam
pop
inc
aas
cmpsl
dec
and
cmp
lock
daa
stos
in
push
xor
xchg
fiaddl
mov
sub
fstps
cmp
adc
sub
adc
lods
clc
mov
pop
jno
sub
pop
in
js
and
mov
rcrl
pushf
or
loope
cmp
cmp
pop
in
js
xchg
pushf
ss
aam
push
jno
cltd
push
jg
mull
mov
mov
sub
nop
lods
mov
call
sbb
push
mov
popa
cmp
es
inc
sbb
xchg
cmp
test
add
push
inc
sub
pop
cli
rclb
xor
fs
push
out
cmp
out
mov
add
call
addl
cmp
jae
daa
add
incl
xchg
in
fisttpll
jecxz
mov
jae
lahf
jl
mov
or
shlb
or
mov
icebp
push
xchg
lahf
inc
sahf
xchg
shl
in
push
je
sbb
sbb
jae
int3
addr16
mov
lea
adc
jl
inc
out
push
push
mov
jg
sub
xchg
mov
xchg
nopl
jae,pt
push
inc
pop
cmpsl
xor
adc
test
je
out
xchg
and
xor
fs
pusha
mov
or
adc
dec
rorl
jg
aam
xor
stc
cmp
jmp
nop
imul
mov
adc
cltd
rcll
mov
mull
mov
pop
sbb
mov
insl
inc
sub
cmp
push
out
fldt
ss
push
push
test
mov
popa
adc
jge
test
pusha
iret
xor
xchg
xchg
adc
idivb
jo
xchg
inc
push
pop
test
sub
xor
scas
sbb
jnp
imul
dec
push
in
pop
mov
dec
sbb
fldenv
ja
es
out
pop
pop
mov
jecxz
mov
adc
shrl
xchg
cmp
push
pop
mov
sar
cmpl
fcmovnbe
xchg
scas
fwait
cmc
xlat
inc
and
jmp
push
xchg
or
lret
rolb
jecxz
out
or
jbe
inc
ss
add
fimuls
cmp
insb
pop
adcb
testb
mov
xchg
fdivl
cmp
shrl
xor
mov
push
roll
cmp
faddl
push
popa
or
gs
or
cmp
jecxz
aam
inc
repnz
arpl
sub
lret
roll
lods
cld
pop
pop
adc
xchg
mov
xchg
sbb
cltd
pop
jp
add
inc
popf
mov
mov
mov
insl
inc
inc
and
mov
lahf
mov
push
lcall
cmpl
addr16
or
movlps
inc
mov
stc
cmpsb
or
adc
js
mov
dec
mov
out
or
fisttpll
xlat
mov
xchg
cltd
out
shll
lahf
mov
fwait
out
push
into
movsl
pop
and
push
and
jecxz
pop
shr
popf
cmp
out
pop
and
mov
cs
gs
push
es
push
inc
div
push
ds
dec
pop
popa
lret
mov
xlat
fs
movsl
out
mov
adc
pop
sub
shrb
inc
stos
adc
aad
and
movsb
hlt
lea
ret
push
sub
cmpsl
cmp
push
dec
push
push
outsl
lahf
xorl
daa
xchg
roll
inc
jge
mov
sbb
lods
les
inc
mov
pop
cli
push
mov
addr16
lahf
xchg
and
inc
fcompl
mov
fsubrp
cli
gs
in
dec
adc
xor
sbb
lret
dec
or
pop
or
imul
mov
push
ljmp
and
adc
in
pop
out
scas
add
int3
mov
push
mov
pop
or
push
fdivl
or
pop
pusha
add
nop
fdivrs
cmp
mov
loopne
imul
jmp
ficoms
shlb
adc
dec
mov
xlat
lods
js
fs
loop
lds
pop
sub
cmpsb
sahf
int3
stc
dec
sub
and
lock
dec
bound
fsubl
inc
fbld
movsb
mov
lahf
dec
and
mov
push
and
push
mov
sti
out
pop
or
push
add
sub
cmp
xchg
xor
fwait
add
jno
outsb
ret
adc
push
cwtl
jl
pop
push
ss
fistl
adc
push
mov
mov
jl
jne
mov
push
pop
dec
mov
dec
mov
adc
or
fwait
push
scas
xor
sar
add
push
lcall
and
out
div
inc
icebp
insb
push
pop
sbb
test
inc
lock
mov
pushf
jg
lret
mov
jne
iret
xor
add
aam
dec
iret
push
push
daa
mov
pop
aaa
jbe
adc
and
pop
pop
mov
rorl
inc
sarl
cwtl
and
pop
lret
outsl
mov
xor
sbb
das
add
fucomip
arpl
dec
and
pop
cmpsl
scas
aam
or
iret
cmp
lret
in
push
sub
frstor
stc
pushl
pop
aas
xchg
repz
pusha
or
sbb
aam
fwait
jne
push
push
pop
js
jns
enter
dec
xchg
inc
mov
mov
mov
mov
lret
lea
ss
mov
adc
fcoms
xor
ret
inc
inc
add
push
jl
fbstp
sbb
gs
adc
pop
xchg
lods
insl
in
testb
pop
jae
lret
pop
jbe
xchg
div
cmpl
test
mov
icebp
xorl
add
or
lods
sbb
mov
mov
dec
int3
movsl
hlt
arpl
push
or
dec
pop
sbb
leave
add
mov
pushf
nop
and
dec
enter
sbb
mov
push
inc
clc
or
out
jo
pop
movsb
lcall
cli
in
imul
fdivrl
xchg
scas
mov
xchg
insl
stc
ret
rcll
leave
pop
into
lods
push
call
movsb
popf
and
rcll
mov
decl
gs
jl
test
out
xchg
je
or
stos
lods
nop
sub
cltd
xlat
mov
ret
cltd
fwait
mov
scas
add
daa
jne
jo
jnp
mov
mov
dec
push
leave
xor
cmpsb
int3
and
inc
lcall
cmc
jno
imul
dec
lods
stc
std
push
mov
or
data16
rcll
push
and
dec
cmp
pop
int
orl
scas
nop
xchg
xchg
mov
frstor
xchg
sub
or
push
movsb
fiadds
add
adc
pop
addr16
jne
cmp
jo
and
jl
push
cmpsb
insb
adc
push
fwait
jae
push
mov
out
enter
repnz
cmp
mov
dec
add
es
add
xchg
call
dec
add
mov
dec
lds
push
ss
movsb
mov
cmp
repz
out
jmp
push
faddl
inc
jp
int
std
sysret
or
mov
aad
mov
pushl
inc
jmp
test
movsl
scas
loop
mov
or
cs
dec
testb
shrl
insl
cmp
xchg
mov
dec
mov
sti
rol
cmc
std
or
nop
cmpb
test
sub
push
or
cmc
mov
pop
xorb
iret
pusha
xor
aas
stc
jp
push
test
or
int3
dec
out
scas
outsb
fildll
pop
push
inc
shll
or
pop
clc
jb
xchg
inc
out
scas
lods
push
fidivs
mov
adc
stos
xlat
inc
leave
pop
lds
testb
push
ss
mov
mov
cmp
imul
ror
jp
sub
lret
shlb
les
jmp
int3
imul
jl
gs
cmpsb
subb
lcall
push
gs
inc
shlb
inc
fisttps
sub
jmp
ljmp
mov
lods
xchg
xor
push
cs
add
lahf
icebp
ds
imul
pop
jge
inc
jo
cmp
movsl
inc
shrb
fsubl
push
js
dec
aaa
mov
popa
cmpsl
mov
jmp
jle
sbb
mov
ja
xor
clc
loop
and
xchg
mov
mov
sub
xchg
mov
mov
xor
ljmp
aaa
lahf
push
adc
push
cwtl
mov
mov
xchg
push
loop
add
cmp
and
loop
scas
scas
call
jmp
rcrb
movsb
or
daa
ss
jae
sub
daa
push
pop
sahf
test
insl
bound
pusha
jp
and
stos
ds
jo
arpl
insl
aad
cs
dec
mov
cmpsb
scas
das
push
or
cmp
inc
imul
cmp
mov
into
mov
imul
stos
hlt
sbb
pusha
dec
dec
lcall
mov
mov
push
mov
andl
jne
pop
test
xor
lods
sbb
dec
stc
xor
xor
mov
aas
push
dec
mov
jnp
in
adc
xchg
test
mov
fcoms
add
imul
daa
or
mov
test
pop
push
xchg
icebp
outsl
aam
dec
lret
aad
push
syscall
fs
test
out
pop
xor
rcrl
sbb
daa
inc
jo
stos
gs
push
out
popf
push
jno
pushf
ds
lret
xor
fcmovnbe
fstl
call
jns
stc
lds
jns
cmp
dec
pop
jb
call
arpl
xchg
stc
mov
jecxz
ja
lea
dec
pop
loop
pop
sub
hlt
push
and
shll
sub
mov
inc
or
icebp
int
out
xchg
or
mov
sbb
loopne
into
lds
in
sub
push
push
insl
xor
push
mov
pop
push
test
mov
push
roll
scas
jnp
cmpsb
rcrb
cmpsl
lods
jns
adc
dec
stos
sub
jge
bound
cmp
or
sti
movsb
pushl
jae
clc
push
imul
sub
inc
aas
mov
bound
clc
imul
fcmovu
pop
cmp
cmp
lcall
xor
mov
xor
js
loop
xor
mov
ret
ja
icebp
icebp
imul
into
pop
rcll
or
fidivs
jno
jno
mov
and
jbe
push
nopl
incl
adc
ljmp
imul
cwtl
or
mov
push
test
les
repnz
jecxz
add
shlb
fsubrl
scas
jl
out
loopne
nop
rorl
clc
push
movsb
test
add
test
mov
inc
jae
and
mov
stos
mov
fimuls
sbb
sub
shll
pop
hlt
dec
or
xchg
pop
adc
add
xor
test
shr
mov
je
aam
sbb
inc
addw
ret
jge
pop
mov
jge
pop
xchg
jge
cwtl
lret
cwtl
out
cmp
sbb
sub
testb
out
inc
addl
sti
push
mov
xor
mov
pop
cmp
imul
jno,pn
inc
fiaddl
aaa
xchg
lret
mov
jmp
icebp
xorb
sahf
dec
mov
pop
jno
aaa
sub
repnz
or
inc
iret
popf
push
xor
jne
iret
fbstp
mov
adc
cmp
negb
mov
xor
scas
pusha
fsubr
daa
push
faddl
mov
bswap
adc
push
mov
jne
cld
repz
cmp
inc
out
mov
add
iret
sub
jnp
xchg
shlb
push
push
pop
add
push
data16
mov
imul
pusha
lds
mov
jnp
dec
cmp
add
lea
sti
ds
pop
dec
lods
push
sbb
ret
adc
xchg
stos
inc
movsl
pop
jg
stos
xchg
sbb
rcll
es
ror
pop
fstp
pop
and
test
clc
cmp
add
leave
inc
xchg
fldl2e
ss
sahf
shl
mov
push
xchg
jns
ljmp
imul
enter
call
jbe
orb
lock
data16
jo
dec
mov
push
out
cmp
cld
cvtps2pi
xchg
dec
aas
pushf
int3
dec
imul
movsb
sub
rcrb
xor
or
movsl
fs
push
mov
loopne
xchg
and
ds
aad
repnz
sbb
lret
xlat
clc
add
andl
icebp
dec
fistps
mov
repz
push
clc
das
cli
mov
outsb
popl
call
mov
push
sub
sbb
lret
push
insl
clc
xor
push
mov
xchg
or
or
lock
xchg
cwtl
and
adc
sahf
mov
xor
dec
js
xchg
pop
cli
ret
jg
xor
adc
imul
lahf
cmp
enter
pusha
xor
cwtl
mov
pop
mov
inc
cmp
dec
mov
sarl
pop
fdivl
addl
dec
pop
mov
ds
dec
adc
lret
daa
sbb
mov
adc
dec
pushf
lock
cs
cmp
add
ljmp
or
cmp
xor
adc
shrl
das
and
out
sub
ds
lds
lret
cmp
aad
inc
lea
cmp
lret
xor
pop
sbb
repz
mov
sarb
scas
adc
dec
push
mov
or
imul
stos
adc
jb
adc
lret
mov
inc
in
sub
mov
mov
sbb
inc
hlt
movsl
sbb
sub
mov
es
int
stos
inc
mov
pushf
mov
xchg
jmp
hlt
inc
stos
or
in
pushf
push
cld
cli
inc
pop
fadds
mov
stc
dec
mov
mov
pop
or
arpl
xor
pop
ds
rol
xor
popa
scas
dec
cmp
mov
push
in
testl
mov
xchg
in
xchg
leave
mov
aaa
and
insl
fidivrl
cld
xor
sbb
aaa
lds
mov
sbb
imul
pop
mov
lds
js
mov
pop
and
testb
loop
and
pop
adc
jb
jbe
dec
nop
push
mov
jo
sarl
or
xchg
adc
test
in
inc
jns
pushf
lcall
sub
push
popl
push
dec
orl
test
scas
fstl
pusha
clc
inc
pop
mov
cmpsb
xor
fcoml
fisubrs
lds
or
jge
mov
dec
fisttpll
xorb
jae
and
pop
adc
mov
nop
jno
mov
xchg
lds
lret
jge
das
xchg
xchg
aaa
data16
lret
shr
add
iret
popa
lahf
je
and
lret
lret
push
mov
mov
lods
xchg
adc
pushl
push
push
push
imul
or
inc
jl
xlat
push
out
xor
add
outsl
aas
lret
mov
test
das
shll
stos
scas
sahf
cmc
and
fsubs
lods
and
rclb
push
testb
int
fcmovbe
add
or
push
mov
inc
fsts
in
fdivs
mov
pop
stos
jo
inc
adc
jno
mov
insl
mov
adc
addr16
adc
stos
add
arpl
mov
aad
push
fisubl
mov
leave
fdivl
stc
fcmovnbe
push
in
stos
test
xchg
inc
jp
cs
adc
dec
and
aad
insl
inc
xor
fisttpll
in
sbbl
xor
insb
adc
xchg
pop
lcall
sbb
mov
orl
loop
icebp
sbb
mov
lret
inc
push
sub
popa
shl
push
or
out
jl
mov
adcl
faddp
add
outsb
push
jne
insl
dec
or
xchg
dec
out
pop
pop
and
lcall
inc
lds
mov
fbld
jb
mov
stos
cwtl
dec
pushf
arpl
and
iret
jg
arpl
out
dec
inc
jbe
mov
dec
in
nopw
or
ret
iret
loopne
xchg
repz
mull
jno
dec
xchg
push
sub
xchg
ss
sahf
or
insb
scas
mov
sti
stos
cmpsl
test
je
iret
push
pop
fwait
js
pop
test
mov
sbb
loopne
jbe
xchg
or
inc
inc
nop
sahf
pop
mov
andb
test
outsl
mov
mov
clc
std
iret
sbb
inc
dec
out
lock
pop
xchg
fisubl
sub
pop
inc
mov
jmp
inc
ds
out
push
rcl
inc
outsb
sbb
sub
mov
fdivr
add
fcoml
pop
leave
mov
and
sbb
and
fsubs
push
stos
push
pop
adc
push
and
leave
push
push
and
out
imulb
add
xor
jb
leave
add
pusha
testb
testb
inc
dec
mov
lods
dec
gs
push
or
xchg
adc
jg
lea
cltd
out
pop
jp
mov
adc
jne
jb
push
add
aad
in
sarl
jecxz
pop
int3
in
dec
aas
pop
adc
jmp
rol
xchg
sahf
adc
aaa
repz
xor
add
and
test
sub
cmpsb
inc
repz
sarl
call
sbb
stos
xor
xchg
ja
pop
mov
cmp
cld
scas
cwtl
mov
add
test
mov
shll
das
xor
orb
xchg
xchg
pop
into
je
mov
lcall
jbe
lret
clc
movsb
xor
mov
jbe
add
mov
dec
and
jmp
lret
rcll
out
jp
push
lods
iret
fldenv
xchg
icebp
sti
mov
test
out
pop
in
stos
in
ds
sbbl
scas
push
cld
gs
aad
rorb
pop
nop
test
jecxz
out
in
jnp
mov
loope
outsb
lods
mov
add
adc
cmp
in
test
ret
test
xchg
stc
sbb
xchg
jp
stos
add
lea
jp
push
push
pop
inc
adc
lods
notl
sub
and
stc
sbb
lahf
lock
sub
cmpsb
mov
int
add
adc
xchg
jb
fistl
push
mov
dec
ljmp
mulps
nop
lret
das
xor
sub
xchg
mov
sbb
xlat
fs
loop
jnp
ss
adc
ljmp
mov
add
into
cmc
sub
les
out
cmp
mov
leave
cltd
nop
dec
outsb
add
push
mov
jae
test
sbb
cmp
push
sar
and
ror
aaa
in
jnp
loop
add
fadds
mov
nop
cs
lret
cmp
pushf
mov
outsb
popf
out
movsb
ds
pusha
hlt
pop
sbb
call
jl
bound
outsb
lcall
mov
in
push
mov
cmp
int3
sbb
inc
mov
das
push
insb
ss
push
inc
stos
pop
and
cmovnp
mov
lret
pop
pop
mov
pop
lds
adc
push
ljmp
cmp
pusha
xchg
adc
jecxz
fldl
enter
divl
xor
pushf
popa
orl
cmp
jno
sub
inc
movsl
lds
mov
or
sarb
mov
cmp
push
cmp
les
outsb
lods
jmp
sbb
add
ss
mov
repnz
mov
mov
mov
int3
lret
jle
hlt
test
enter
xor
cmc
leave
lea
stos
aam
sub
gs
daa
std
dec
push
insb
dec
push
add
pop
aad
cmp
mov
movsb
adc
loopne
hlt
push
xor
sub
cmp
jne
dec
shl
inc
push
sbb
dec
aas
jb
cmp
xchg
mov
outsl
mov
or
mov
add
dec
call
jnp
and
pop
push
or
jp
add
cwtl
dec
xorb
arpl
pop
inc
add
nop
fcoml
and
or
jecxz
leave
jno
stos
out
in
cli
jo
lahf
push
mov
mov
mov
pusha
sub
cli
scas
sub
sbb
dec
mov
jb
je
inc
cmp
xor
fldenv
iret
or
dec
mov
add
cwtl
adc
xchg
pop
cmpsl
cmp
roll
push
hlt
add
test
jnp
pusha
js
jmp
lahf
inc
jns
in
test
imul
test
xchg
les
and
lds
in
ds
push
xchg
xchg
stc
ret
and
adc
out
push
test
mov
lret
xor
pop
xchg
andnps
std
mov
addr16
mov
push
and
jge
sbb
adc
jno
jl
mov
jb
sbb
sub
cmc
pop
sbb
and
dec
and
repnz
sub
fisttps
sbb
icebp
popa
mov
stos
cltd
das
mov
in
jp
movsb
inc
xor
jle
loope
xchg
sub
fsubs
pop
pop
lret
xor
aam
jns
adc
dec
cmpsb
or
stc
sbbl
or
dec
sahf
dec
cltd
fcmovne
lea
into
cmp
xchg
cmp
mov
inc
cli
imul
shrb
and
fmull
fnstcw
pusha
addl
cmp
inc
sbb
xchg
rorl
and
shll
in
cmpl
mov
fisubl
imul
enter
xchg
push
dec
in
push
inc
outsl
dec
xchg
in
test
xor
addr16
lock
aas
sbb
lods
mov
or
mov
pop
jnp
sub
cmp
push
lods
mov
mov
mov
sbb
mov
stos
pop
shll
lods
shll
lock
mov
and
lret
mov
cltd
idiv
cltd
sbb
nop
sbb
sbb
pop
or
jbe
mov
lahf
mov
dec
xchg
and
jne
mov
and
xchg
jp
sti
mov
push
push
test
sbb
mov
jmp
gs
jno
push
mov
je
pop
addr16
sub
fisttpll
mov
mov
fimuls
mov
std
cmp
jne
int3
sbb
xchg
cs
push
fiadds
add
cmpb
adc
inc
xor
gs
jmp
dec
sub
jle
jg
or
aaa
cltd
in
dec
jge
gs
jp
out
cltd
xchg
push
add
or
imul
dec
dec
ja
and
mov
aas
pop
test
dec
fisttpll
or
and
pop
sbb
sbb
test
cmpsl
popf
mov
lea
cltd
mov
push
jle
mov
cltd
add
cmp
mov
xor
aad
dec
aad
inc
mov
les
mov
lock
jl
mov
std
in
xchg
dec
out
mov
mov
sbb
xchg
add
lcall
or
mov
jmp
lcall
into
repz
push
insb
pop
jle
fdivrs
addr16
ljmp
cmc
andb
and
fisubrl
test
jnp
jp
mov
enter
test
pop
or
or
ss
push
inc
mov
loop
push
and
push
bound
shll
mov
pop
arpl
mov
push
adc
shlb
mov
pop
adc
lods
fcomps
insb
inc
nop
or
loopne
and
aas
dec
imul
dec
xchg
adc
add
aas
xor
jbe
lock
lahf
mov
dec
fstps
jge
cmp
xlat
dec
lea
test
popf
inc
out
push
ret
stos
or
aaa
lock
add
cltd
jne
icebp
sbb
jbe
mov
fwait
jg,pt
fs
test
inc
out
mov
mov
push
mov
push
mov
jb
xor
or
fisubrl
test
cld
sar
repnz
outsb
push
sbb
aam
jecxz
add
sbb
cwtl
xchg
les
repz
mov
cmp
push
out
out
stos
lcall
nop
lahf
mov
cld
inc
xchg
pop
jmp
mov
or
push
jo
inc
cmp
jno
xchg
pushf
scas
inc
sbb
fucomi
inc
arpl
jg
call
xchg
mov
mov
aad
add
into
sbb
push
mov
imul
or
sub
add
adc
or
ret
jbe
in
pop
les
mov
add
in
cmp
xchg
add
xchg
mov
sbb
mov
jmp
cmc
shl
jecxz
mov
jle
stos
inc
xor
ds
mov
xor
or
fimuls
cmp
fwait
movsb
shlb
mov
addr16
stos
stos
adc
push
push
gs
pop
aas
aam
lcall
into
out
mov
stos
push
mov
mov
mov
adc
je
loope
dec
fimull
cmp
fwait
sbb
fcmovbe
hlt
fwait
sub
add
mov
push
adc
pushf
shlb
jae
in
cmpsl
paddq
das
inc
cs
and
inc
mov
lods
pop
jo
jle
and
sbb
rorb
dec
paddusw
lret
jnp
mov
js
test
scas
jmp
aaa
jle
jle
lods
adc
outsl
inc
aad
sub
aad
jle
mov
jge
loop
xor
cmovl
or
or
dec
repz
pop
pop
psrlw
mov
and
test
gs
xor
xor
into
fnstcw
das
and
jns
sbb
cwtl
or
es
inc
inc
loope
mov
or
mov
jg
movsb
jae
xor
cld
lea
mov
and
add
mov
lret
or
imul
orl
inc
setne
cmp
popf
add
test
rcrl
pushl
popf
xlat
mov
or
sbb
ljmp
daa
rcrl
push
xchg
pop
mov
jno
dec
rcrb
mov
aaa
mov
int3
rorb
push
or
cmp
jb
addr16
in
sbb
test
mov
dec
jbe
xchg
fsubl
cmp
in
mov
fnstcw
in
xorl
lock
push
ds
lcall
loopne
mov
mov
cltd
addr16
inc
ficoms
repz
jp
into
jns
std
mov
mov
cli
or
sub
fxch
mov
data16
test
push
in
pusha
pop
cwtd
pop
mov
mov
pop
js
and
dec
push
mov
cmp
sahf
lea
mov
dec
fldenv
inc
push
sbb
shl
cmc
leave
jae
repz
add
pushf
mov
lahf
adc
clc
xchg
dec
imull
inc
push
push
pusha
pusha
gs
add
push
push
insb
daa
dec
cli
jp,pn
dec
dec
daa
and
or
clc
iret
push
lret
ljmp
add
data16
std
pop
fwait
es
xchg
add
sbb
adc
mov
adcl
mov
lods
mov
cmc
loop
rclb
and
sub
scas
sbb
pop
mov
xor
jbe
dec
push
pop
loop
idivb
mov
adc
xlat
mov
in
jmp
outsb
cli
pop
mov
add
stos
les
or
mov
or
mov
sbb
mov
loop
or
arpl
xchg
cmpb
cmp
mov
lcall
pop
int
dec
dec
adc
xor
jecxz
out
mov
mov
pusha
movsl
add
pop
or
jmp
das
cmc
cltd
enter
xchg
sub
mov
pop
fiadds
into
aaa
jl
shrb
cmp
push
sbb
dec
jae
mov
lcall
pop
inc
scas
inc
or
mov
sarl
or
push
jo
cs
imul
dec
sbb
jns
add
in
out
jne
scas
iret
scas
aam
int3
pop
fisubl
call
or
mov
inc
pushf
js
out
div
push
jl
push
dec
fisubs
adc
jmp
mov
jae
jg,pn
test
aas
test
insb
flds
mov
enter
xchg
aaa
pop
add
xor
stc
cli
cltd
es
cs
push
rclb
and
inc
and
xor
push
xor
add
dec
sbb
fmul
mov
jecxz
pop
jg
icebp
pop
fsts
cmp
decl
pop
xchg
mov
mov
out
cmpsb
push
iret
sub
cs
xorl
fsubrs
jae
mov
iret
xchg
xchg
sarl
ds
loope
inc
int3
xchg
stos
jnp
inc
int3
out
lcall
adc
mov
ja
loop
jg
js
aaa
dec
sbb
jmp
xchg
aas
cld
add
clc
push
stos
cmp
push
xchg
outsb
fldt
imul
cmp
cli
pop
mov
test
in
imul
aaa
jp
hlt
sbb
xchg
cld
cmpsl
testb
adc
test
adc
outsl
stc
push
cmpb
or
divl
jp
lods
out
xchg
fisttpll
in
pop
pop
nop
or
push
dec
std
ja
es
div
dec
jecxz
jno
ljmp
dec
sbb
xchg
or
les
test
inc
movsb
lods
jb
mov
jl
and
imul
push
js
int3
gs
cmp
and
dec
repz
mov
adc
dec
add
ss
xor
in
sub
adc
jmp
cmp
cmovle
ljmp
push
lods
addb
cltd
aad
in
xlat
movsb
fists
xchg
stos
jle
and
ret
test
inc
xor
mov
outsb
in
out
nop
cld
or
jl
cmp
dec
cmc
cli
sbbl
pop
add
xlat
add
in
divl
mov
addr16
mov
popf
xchg
cwtl
stos
aam
fstpl
pop
fcmovne
out
cmp
mov
cmp
cmpl
xchg
mov
daa
je
cmp
pop
jae
pop
push
xor
xchg
addr16
inc
mov
cmp
jl
mov
lahf
loope
int3
jecxz
jmp
dec
adc
xor
clc
mov
mov
xchg
cmpsl
mov
lahf
mov
push
mov
push
inc
cmpsl
jl
loop
stc
xchg
call
es
rcrl
sbb
mov
mov
div
addr16
clc
imul
arpl
lods
jecxz
leave
mov
aas
les
mov
cmp
dec
arpl
mov
in
enter
push
stc
iret
stos
je
xchg
stos
lock
adc
xchg
jle
and
xor
jno
mov
call
pop
aas
arpl
rcrb
or
mov
icebp
into
add
pop
fwait
xor
add
sarb
mov
xor
sub
sub
mov
or
gs
push
xor
adc
and
stos
aaa
loopne
rclb
pop
mov
scas
cmp
xchg
jo
in
jns
dec
loope
scas
push
inc
jg
cs
fcompl
mov
adc
push
pop
push
aas
mov
and
mov
or
or
and
or
mov
ret
outsb
sbb
addl
adc
xlat
dec
stc
push
das
int
sbb
lods
add
mov
or
sub
lods
enter
sub
fcmovne
cmp
test
lret
and
mov
sub
sti
pushf
cmp
add
xor
inc
xchg
or
inc
pop
std
fwait
leave
imul
cmp
sbb
inc
jne
stc
test
add
mov
test
frstor
push
cmp
mov
jl
pop
pop
fistps
repnz
mov
inc
add
lret
outsb
lds
jecxz
jne
out
and
xor
xorl
sub
rclb
xor
sbb
push
out
or
pop
arpl
jle
dec
dec
xchg
inc
movsl
out
mov
imul
test
mov
mov
push
and
xor
mov
loope
inc
or
inc
pcmpeqd
pusha
dec
pusha
pop
sub
xor
jne
pop
mov
adc
push
insb
sti
scas
sbb
scas
xor
mov
sub
leave
inc
xchg
out
scas
lods
dec
sub
scas
adc
xchg
ja
sub
and
mov
lcall
pop
ja
mov
aad
mov
add
das
mov
sbb
addr16
adc
fiadds
lods
push
sub
mov
mov
add
movsl
lods
cmp
and
jb
aaa
test
or
stos
push
or
out
mov
jno
lahf
mov
mov
das
xor
xor
enter
cmpsl
imul
sub
xorb
ficompl
fnstsw
cmp
pop
jecxz
stos
loopne
jo
mov
cli
in
pop
inc
xor
dec
aad
and
loop
mov
or
xor
add
xchg
xor
aam
sub
push
dec
int3
cld
outsb
push
je
pop
mov
out
sbb
leave
cmc
inc
push
iret
sarb
cli
xor
leave
lahf
sbb
mov
pop
jae
mov
xor
hlt
cld
outsl
adc
fsubrs
add
inc
ret
scas
dec
out
je
orb
divl
and
lds
in
fcmovne
cmp
iret
arpl
mov
fmul
repnz
mov
mov
xor
push
lret
mov
imul
dec
dec
pop
ss
mov
sub
or
out
xchg
dec
add
pusha
lcall
mov
mov
dec
mov
mov
sbb
test
cmpsl
sbbl
sarl
ret
xchg
mov
mov
clc
das
movsb
pop
test
jbe
push
xchg
incl
mov
dec
push
pop
into
adc
pop
push
fdiv
ret
shlb
mov
loopne
xchg
xlat
mov
mov
and
pop
ss
test
cmp
xchg
in
pop
aam
pop
jo
lret
loop
fucomi
push
lock
inc
mov
sub
enter
mov
mov
push
xor
shl
cs
push
jmp
xchg
xor
pop
mov
and
mov
lcall
inc
lods
loopne
ret
cmpsb
dec
sbb
pop
out
or
repz
pusha
mov
jle
ljmp
iret
mov
jbe
push
mov
mov
jo
call
pop
sub
and
jb
lcall
xchg
lds
jne
and
xlat
das
mov
stc
dec
adc
cmp
mov
cmp
adc
push
hlt
and
gs
repz
xchg
clc
push
pop
mov
movsl
inc
pop
icebp
call
stos
adc
scas
sbb
mov
push
pop
pop
mov
xchg
push
mov
inc
aaa
xor
in
mov
or
inc
sti
jnp
dec
shrb
mov
inc
push
pop
out
sahf
or
das
icebp
xor
cli
sub
xor
stc
push
jbe
xchg
fs
ljmp
mov
pop
lret
and
sti
add
sti
cmp
sahf
lret
std
sbb
jp
pop
jne
mov
rorl
add
test
repz
dec
mov
rcrl
or
je
inc
cmp
ds
popf
insb
int3
pop
test
notl
popa
push
jmp
in
scas
pusha
popf
lds
cmp
test
jo
or
add
repnz
loope
and
mov
iret
xor
ret
jo
into
pop
jnp
clc
lahf
and
sub
dec
jno
mov
and
or
mov
mov
popa
adc
jecxz
out
cmp
rorl
arpl
popl
xor
adc
test
js
outsb
loop
mov
outsb
lds
push
loopne
or
jbe
rcrl
fwait
or
fwait
enter
pop
xchg
scas
testl
or
dec
lods
dec
out
mov
ret
cmc
outsl
aas
leave
subb
cmc
sbb
loopne
push
repnz
sbb
pop
sbb
mov
jg
insb
xchg
push
adc
call
lods
and
mov
xchg
lcall
inc
and
cmpsb
cmp
adc
sub
mov
leave
iret
adc
fwait
inc
lods
add
jge
aad
xor
jae
je
push
xlat
shlb
cmpxchg
mov
jo
jbe
xor
push
cwtl
and
lahf
cltd
sarl
rcr
out
mov
pusha
xchg
fwait
or
mov
and
es
jo
fstpt
mov
lahf
mov
in
iret
dec
incl
stos
leave
fimuls
mov
ret
pop
and
or
test
mov
movsl
and
in
icebp
mov
cmp
jecxz
repz
out
mov
add
rorb
mov
pop
pusha
push
push
xchg
lds
in
std
mov
mov
adc
sub
adc
test
repz
mov
jbe
or
xor
push
dec
rcl
sub
xor
movsb
lret
in
mov
lock
add
loop
jp
jp
movsl
or
jle
inc
repz
sub
inc
sub
add
cmp
mov
fdivrs
jg
pop
mov
mov
dec
sub
pop
push
fcmovnb
jnp
inc
ret
notl
xor
rcll
xlat
push
or
cwtl
enter
sub
and
sub
xchg
scas
add
je
xchg
les
cmp
bound
cmpsl
daa
repnz
test
daa
add
pusha
push
dec
ds
mov
bound
xchg
mov
decb
add
dec
dec
mov
or
arpl
add
jp
dec
out
jae
outsl
mov
mov
fildl
in
sub
stos
xchg
sub
mov
test
lahf
test
dec
mov
xchg
nop
fdivrp
jg
aas
icebp
insb
jo
into
add
adc
dec
test
push
notl
mov
subl
push
lcall
mov
std
push
rep
insb
cmp
and
aas
enter
in
daa
cmp
jle
push
mov
and
cmp
jecxz
pop
jno
mov
push
bound
pop
aaa
fdivl
pop
pop
cmpsl
pop
mov
or
mov
ror
jle
add
or
mov
enter
or
and
dec
inc
xor
into
sbb
leave
and
call
daa
shll
cmp
int
inc
adc
adc
rorl
sbb
sti
pop
enter
cwtl
shll
icebp
dec
repz
insb
and
pop
int3
inc
adcb
add
sarb
flds
pop
add
rolb
mov
lock
lea
repnz
inc
jmp
inc
pop
sbb
xchg
das
mov
sub
sbb
rcrb
out
std
mov
sub
or
jmp
cs
dec
test
test
mov
and
add
mov
or
xor
jnp
loopw
xchg
rolb
mov
cmp
and
and
ret
movl
or
push
add
sti
roll
testb
mov
xor
scas
dec
insb
lock
cmp
jno
test
pop
loop
mov
dec
mov
pusha
add
lret
mov
inc
pop
stos
jge
dec
push
imul
dec
mov
ja
test
das
iret
iret
xchg
mov
cli
jmp
cmp
push
rcrl
pop
inc
dec
daa
pop
lahf
insl
int3
outsl
inc
enter
fwait
or
push
mov
pop
push
sub
adc
gs
mov
cmpsb
mov
sbb
cmp
xchg
lds
mov
in
outsb
mov
or
jmp
loopne
sub
out
sbb
mov
addr16
sar
jmp
push
scas
insb
dec
pop
xchg
xchg
jno
mov
push
movsb
out
cmpb
inc
arpl
out
sbb
fs
mov
mov
stos
icebp
shrb
sbb
add
sbb
int3
sub
adc
fucom
adc
pushl
cmp
and
mov
mov
divb
push
vmovntps
clc
imul
pause
and
mov
outsl
lea
cmpsl
iret
cwtl
in
imul
cli
and
scas
faddp
leave
shll
imul
dec
in
or
into
mov
mov
mov
ret
es
test
mov
dec
mov
mov
pop
sar
scas
dec
scas
add
test
sub
add
mov
mov
dec
shlb
fwait
add
jl
call
push
fisttpl
test
fnstenv
enter
repz
incl
pop
cmp
and
sbb
push
lock
pop
push
dec
lahf
xchg
and
ds
xchg
ljmp
lret
xorb
adc
leave
nop
xchg
mov
int3
in
ss
fcomip
mov
jp
pushw
clc
adc
enter
mov
cmp
cmpsb
arpl
cmp
add
jno
les
jo
out
fisttpll
adcb
cwtl
cwtl
fdivr
pop
xchg
hlt
add
mov
movsl
repnz
orl
sub
les
inc
lods
rcr
fsubrs
sbb
mov
leave
jecxz
sbb
fwait
sahf
cmpsl
mov
xor
mov
dec
xor
fwait
shrb
daa
stos
iret
sub
lods
sbb
fcomps
mov
fwait
loop
inc
movsb
in
xor
push
fdivrs
adc
pop
aad
mov
je
lock
mov
enter
fldenv
punpckhbw
mov
xchg
bound
lahf
outsb
out
in
repz
aad
mov
xchg
add
je
jle
or
xchg
cmp
push
daa
shlb
and
inc
ljmp
or
xchg
mov
aad
arpl
rorl
shl
popf
imul
lea
cwtl
inc
xchg
loope
push
or
jle
dec
rolb
shr
addb
stc
sub
inc
test
mov
int
stc
cwtl
fadd
sbb
sub
lret
in
lock
and
or
xchg
mov
mov
test
lahf
xchg
outsb
loopne
sub
xchg
and
mov
or
cli
repnz
jecxz
ret
or
push
fcoms
stc
inc
aam
add
push
aas
lret
cli
cmc
inc
pop
imul
cltd
push
adc
jbe
xchg
mov
lods
pop
das
jae
std
mov
and
repz
lahf
or
inc
xchg
pushf
fdivl
add
mov
orb
inc
mov
xor
ret
pushf
add
inc
add
fs
jecxz
mov
sbb
adc
add
mov
push
and
gs
cld
insl
jmp
rorb
adc
cmp
inc
mov
jnp
repz
dec
push
iret
aas
leave
stc
orl
fwait
insb
loopne
push
cmp
adc
mov
in
adc
stos
xchg
adc
cmp
inc
lret
adc
lcall
xchg
push
adc
pop
push
icebp
mov
inc
cltd
ss
lret
aas
sbb
xchg
imul
ficompl
loopne
cmp
ja
cltd
adc
jne
jecxz
jge
xchg
xchg
or
push
add
push
or
sahf
ret
movsb
or
ss
jmp
xchg
hlt
lahf
dec
lods
mov
shlb
mov
in
fs
hlt
nop
add
xlat
bound
mov
loope
fmull
ds
xchg
inc
jp
xlat
push
pop
into
jecxz
shlb
lret
fstpl
and
aas
aad
or
aad
mov
inc
dec
test
repnz
add
cmc
mov
fidivrs
das
inc
push
sub
and
lods
leave
fsubrs
xchg
and
shl
pusha
pop
mov
jae
xchg
pop
popa
fldenv
jae
jg
lret
lret
xchg
fnsave
test
sub
das
xor
lods
icebp
addr16
int
push
pop
mov
mov
dec
push
fwait
jbe
sahf
jae
fmull
push
xchg
div
insl
push
push
sub
adc
pop
mov
lcall
xchg
xchg
sbb
pop
lcall
shlb
cwtl
or
jl
sub
into
inc
stos
sbb
adc
mov
or
jle,pt
faddl
js
dec
addl
icebp
mov
lock
inc
pop
or
sub
test
push
fcomi
mov
mov
incl
sahf
je
mov
sbb
call
inc
in
mov
pop
jnp
popf
pop
xchg
jle
xchg
pop
ljmp
arpl
push
push
xchg
pop
dec
mov
mov
jo
pop
sub
xchg
sti
pop
dec
stos
das
pop
pushf
push
push
das
clc
add
mov
scas
sub
add
int
mov
jl
add
sub
sub
jmp
jmp
xchg
stc
add
cmp
or
xchg
sbb
lea
sti
icebp
lahf
out
xchg
cmp
leave
jo
test
cmp
add
inc
ficomps
jae
in
sarb
mov
and
dec
push
ja
loop
iret
in
les
cmp
pop
movsb
daa
inc
lcall
xor
push
cmc
jbe
pop
dec
adc
ficompl
jg
push
xchg
jne
enter
pop
push
je
push
adc
sbb
jecxz
mov
mov
push
or
jmp
mov
in
mov
ret
push
pusha
dec
and
enter
jbe
xchg
add
test
mov
orl
into
jbe
or
sbb
or
mov
sarl
jno
std
sub
mov
mov
xor
cmp
cli
cmpb
mov
sahf
inc
cmp
cmpsl
sub
aas
cmp
adc
adc
movsl
jl
mov
sub
inc
xchg
inc
push
push
and
pop
aas
repz
push
gs
int
mov
lods
and
aaa
mov
leave
adc
std
jmp
dec
xor
outsb
adc
jg
int
mov
nop
inc
lahf
call
or
mov
outsb
mulb
jp
arpl
mov
add
pop
mov
xchg
flds
sbb
xchg
push
mov
mov
cltd
sub
cwtl
xchg
cs
in
lds
cli
adc
jnp
adc
mov
xchg
push
sub
pop
adcl
dec
push
fisubrl
stos
call
mov
cmp
jo
ja
sub
icebp
fwait
stos
lock
into
jns
add
cld
imul
imul
cld
insl
xchg
xchg
dec
dec
stos
movb
jno
dec
add
adc
ret
jecxz
inc
sti
sbb
lods
adc
data16
dec
sub
jecxz
decb
std
mov
dec
cmp
or
enter
xor
subb
inc
and
sti
inc
ljmp
cs
lods
mov
sbb
pop
sahf
aas
dec
cmp
or
out
xor
test
cli
mov
sub
fwait
jg
aad
inc
add
test
and
and
mov
imul
mov
pop
lahf
dec
mov
add
or
rcll
int3
pop
cmp
inc
fs
daa
loop
xchg
fiaddl
and
out
enter
negl
nop
mov
es
sub
adc
jae
daa
aam
xor
mov
int3
test
lret
insl
pushf
insb
and
notb
mov
mov
outsl
ror
cmpsb
push
cltd
cmp
jmp
xchg
iret
inc
pushf
in
dec
sbb
addr16
aad
loop
adc
push
iret
shl
cmp
or
dec
jae
sub
ret
movsl
test
jge
fdivl
sar
jg
pop
cmp
mov
mov
dec
jmp
push
nop
cmpb
sub
adc
aam
pop
jg
cld
sbb
dec
ljmp
xor
rcl
bound
dec
in
loope
cli
jnp
setbe
test
sub
cwtl
add
push
repz
mov
mov
adc
cmc
mul
mov
push
repz
add
inc
push
mov
cmp
std
in
dec
cmp
fwait
mov
and
add
pop
addl
adc
jl
mov
shrl
out
cld
xchg
jmp
and
testb
add
xchg
pusha
call
mov
pop
push
or
mov
clc
xor
ds
ss
scas
pop
or
mov
push
es
adc
cmp
dec
movsl
rcll
jmp
cmp
mov
push
xchg
hlt
fs
dec
xorl
cmp
add
test
out
js
daa
mov
imul
mov
scas
nop
sahf
outsb
cmpsb
lret
mov
mov
incl
std
loopne
std
ja
jo
and
sub
push
pop
dec
cmpsl
jbe
dec
cli
out
andl
add
insl
push
in
ret
cltd
dec
dec
jge
mov
in
mov
mul
imull
sbb
lock
fwait
call
sub
clc
jle
fsubl
add
pop
mov
cmp
out
enter
test
push
sbb
xchg
icebp
xor
cmpsl
or
or
mov
push
pop
cltd
mov
lds
out
fcomps
mov
sbbb
outsb
stos
shrb
mov
xor
push
add
fdivrl
ret
loop
add
insb
fwait
pop
sub
fidivl
out
je
aam
push
sbb
fsubs
fsubp
es
ret
cmp
push
sbb
das
iret
repnz
sbb
mov
aas
inc
pushf
dec
test
ret
in
fdivrs
lret
jmp
xchg
pop
sbb
add
scas
test
xchg
jnp
lods
pop
jecxz
xor
cmp
or
and
pop
sbb
mov
adc
sbb
aam
jbe
add
pop
jno
jle
dec
and
cmp
mov
lods
push
lahf
jno
mov
jp
mov
ljmp
mov
and
cmp
adc
pop
push
mov
cltd
imul
into
xor
push
or
cmpsl
in
fsubs
imul
lret
in
aaa
call
push
inc
xchg
nop
inc
or
shrb
push
out
incb
push
jg
cmp
movq
jecxz
lods
lcall
in
jnp
in
and
push
scas
sti
add
push
sub
scas
stos
repz
lods
bound
xchg
adc
idiv
aas
mov
xchg
mov
int
xchg
sbb
add
lret
inc
fidivs
loop
xlat
xchg
xlat
icebp
mov
xchg
aas
add
cli
cmp
stc
or
popf
movsl
jl
jne
jne
into
or
bound
jbe
sbb
not
negl
jo
fldl2t
ss
push
sahf
and
mov
add
pop
rclb
icebp
or
test
loop
adc
xchg
test
push
sbb
aam
push
adc
cmc
push
filds
inc
jns
mov
aaa
je
fcoms
fnstcw
xor
push
stos
pop
sub
adc
pop
imul
or
stos
in
cltd
mov
xor
mov
rcrb
shr
adc
inc
xor
cmp
dec
xor
or
ljmp
inc
add
repnz
jb
test
or
ss
fwait
mov
loope
xor
cmp
push
xlat
pop
cld
pop
lods
dec
shr
dec
hlt
repz
icebp
push
adcl
insl
adc
push
out
jo
setns
sti
lcall
ficoms
sbb
adc
xchg
out
lea
sbb
aaa
loopne
pop
test
xor
add
xor
ss
sub
cli
or
jg
ss
sub
xchg
push
loop
jl
scas
pushf
stc
cmpsl
dec
jo
clc
daa
dec
adc
mov
push
addb
fldt
lock
outsl
cmp
shll
std
sub
addr16
test
mov
repz
lds
addb
add
fmull
cmp
xlat
cmp
adc
dec
push
pop
out
ds
gs
stc
mov
or
pop
xchg
xor
ficoms
mov
mull
jbe
loope
cmc
enter
adcb
jmp
enter
ljmp
inc
push
add
cmp
pushf
jge
jecxz
xor
shll
das
mov
pop
xchg
xchg
jge
daa
daa
cmp
cmp
adc
iret
shlb
push
test
loopne
jp
pop
jp
pop
mov
test
pop
mov
push
pop
adc
inc
and
push
out
mov
mov
out
sbb
scas
nop
fsubrl
xor
test
daa
nop
xlat
xlat
sub
in
rcll
int
roll
xchg
and
xor
add
push
insb
cwtl
out
cmp
stos
inc
xor
rclb
fistpll
sbb
xchg
int3
nop
es
dec
or
adc
xlat
lock
ja
jns
mov
mov
jp
shll
jg
xchg
or
aam
das
aad
and
push
dec
nop
mov
and
cli
stos
sti
dec
add
xorb
test
jmp
push
xorb
fwait
mov
mov
imul
pop
cmp
call
jge
or
xlat
fcmovbe
sbb
fdivs
data16
push
or
aaa
adc
pusha
dec
dec
pop
jl
sub
mov
mov
lods
pop
adc
inc
cmc
jge
and
mov
sub
js
popf
bound
ja
mov
inc
push
pusha
jbe
mov
adcb
jmp
sbb
cld
cmp
and
lods
adc
mov
jb
cld
mov
mov
lret
repz
stos
jmp
pop
xchg
test
or
mov
icebp
enter
cltd
fdivrp
push
mov
mov
sbb
inc
xchg
loop
pop
add
cltd
imul
cmp
or
mov
dec
insb
ret
jns
adc
xchg
insb
or
xor
out
inc
inc
jmp
icebp
cmpb
dec
popa
xchg
into
lods
pop
adc
adc
xchg
das
pop
pop
lahf
int3
pop
adc
das
je
sahf
in
or
movsl
mov
mov
add
mov
in
pusha
or
scas
mov
mov
add
xor
and
sbb
and
lret
and
push
jge
pop
xor
insl
ret
cmp
imul
inc
mov
mov
jmp
les
mov
pusha
js
nop
or
push
and
inc
shrb
xor
ss
xchg
leave
out
push
les
sub
inc
daa
das
dec
mov
adc
pop
call
ficompl
or
out
adc
icebp
fistl
lahf
dec
out
jecxz
and
sub
pop
mov
sahf
arpl
cwtl
scas
cltd
add
in
pop
out
pop
add
insb
push
jecxz
hlt
popa
xor
inc
lea
and
iret
mov
dec
mov
nop
ret
mov
mov
sbb
les
outsb
adcb
and
sbb
ds
xchg
push
mov
jbe
cmp
mov
mov
cmp
mov
cmp
rcll
xor
and
mov
mov
mov
push
sbb
ljmp
mov
lret
and
jecxz
fs
mov
stos
sarb
pop
pop
add
ret
pop
js
add
cs
mov
push
ljmp
lea
xorb
mov
inc
mov
pop
xchg
ret
dec
cltd
test
test
fisttps
jb
fcomp
inc
daa
xor
lods
mov
inc
daa
mov
xor
jbe
xchg
cmp
enter
cltd
pop
jl
stos
push
xor
pop
roll
pop
mov
loope
dec
imul
or
add
jl
enter
stc
das
xchg
pop
js
and
mov
iret
mov
hlt
in
jae
cmp
jmp
or
scas
int
mov
jmp
mov
sbb
ds
jb
cli
fsubp
aad
pop
cmpsb
test
aam
sbb
pop
ljmp
add
loope
and
icebp
inc
xor
xchg
adc
or
jg
lret
xchg
xchg
sti
ja
ljmp
push
or
cs
iret
mov
add
jnp
pop
sbb
cld
or
fidivrl
cmp
fbstp
xlat
test
adc
cmp
pop
push
loope
or
iret
push
outsl
ljmp
incb
cwtl
das
sbb
mov
imul
leave
sti
into
cmp
xor
lahf
stc
das
stc
outsl
mov
pop
lock
lret
push
test
or
ljmp
in
xchg
xor
iret
shlb
mov
test
ficoms
fisubrl
repz
test
loope
or
and
inc
ficoml
fnstsw
xor
out
lock
inc
js
inc
pop
xchg
or
inc
or
pop
jecxz
idivl
and
jmp
enter
test
popf
cld
pop
xchg
mov
stos
lahf
or
fnsave
adc
cli
cld
or
stos
jnp
out
ds
repnz
or
icebp
insl
lods
xor
mov
adc
push
push
inc
or
cmp
push
xchg
and
and
pop
call
sbb
aad
jl
mov
xchg
or
lret
push
jge
popa
jb
cmp
std
cmp
mov
dec
mov
xchg
sub
xor
pop
pop
cmpsl
pop
mov
js
mulb
dec
cld
mov
rorl
add
lods
or
cli
inc
aad
ficomps
je
jae
push
jmp
or
push
stc
jge
jno
lock
lea
or
xchg
popa
push
push
jge
aaa
jo
stos
faddl
js
mov
mov
inc
ret
out
test
adcl
xlat
pop
pop
ljmp
mov
out
data16
mov
jecxz
mov
push
cmp
jp
sub
sbbl
sti
into
sub
jge
popa
sub
mov
stc
mov
test
out
lods
add
lds
pop
test
out
in
daa
je
das
sti
int
jbe
rcrb
jne
jle
ds
js
adc
mov
bound
jmp
jg
ljmp
mov
xor
es
jp
xor
inc
ficoml
xchg
pop
lret
test
inc
or
scas
sub
push
icebp
scas
push
repnz
jp
adc
fldl2t
mov
loop
mov
imul
mov
lock
ret
adc
inc
adc
mov
loop
pop
sub
mov
mov
mov
pop
inc
jae
push
push
rclb
dec
adc
xor
into
and
push
pusha
icebp
cmp
push
sub
xchg
pop
ret
movsb
and
gs
sbb
and
inc
fmull
fcmovne
outsb
inc
cmc
int
jmp
call
mov
push
imul
and
push
mov
and
cs
push
mov
sub
jno
adc
mov
mov
sti
gs
or
adc
add
hlt
jge
inc
cs
mov
loop
add
addr16
shrb
loopne
aas
mov
cli
idivb
jbe
adc
nop
xchg
and
rorl
xor
mov
das
sub
cmpsl
sub
scas
mov
sub
push
in
ljmp
sbb
pop
rcrl
jnp
add
jnp
xor
sbb
sahf
jp
lea
sbb
inc
add
repnz
cmp
fidivrl
sbb
xchg
jo,pn
clc
shlb
aad
or
fstpt
lods
daa
clc
pusha
or
push
out
lret
push
daa
clc
in
sub
or
popa
not
xor
cwtl
adc
sub
fists
mov
pop
leave
sahf
das
lods
jae
mov
sbb
xor
daa
repz
jle
jl
cmp
jmp
jl
loop
inc
clc
and
sbb
inc
lea
xchg
dec
mov
in
nop
enter
sti
cs
in
mov
lock
rorb
dec
pop
pop
clc
fisttpl
sub
mov
mov
addr16
xchg
dec
test
add
jns
dec
jmp
int3
jp
pop
mov
cmp
lahf
hlt
xor
loope
fstpt
push
insl
push
xchg
xor
and
jae
jge
cmp
test
mov
das
out
add
shlb
sub
inc
inc
cmpsb
dec
test
sbb
mov
shrb
packssdw
xor
xlat
mov
pop
sarl
mov
fcoml
fwait
outsl
faddl
pop
mov
adc
cmp
pop
adc
mov
jne
mov
mov
filds
adc
jbe
daa
adc
dec
or
pop
test
cmpb
in
cs
movsl
sub
jg
scas
movsl
push
sti
lret
jp
cmp
sub
cmpsl
mov
add
adc
dec
sub
popl
addl
mov
xorb
movsl
xor
xchg
push
jb
cwtl
adc
stos
mov
outsl
dec
aas
aad
xlat
or
fsubrs
out
jle
jl
or
addr16
mov
test
inc
and
cmpsb
sbb
test
ltr
inc
testb
and
inc
and
push
scas
push
add
movsb
pop
movl
pop
mov
bound
sub
loope
sar
push
lods
sub
push
pop
adc
cld
in
int3
sbb
add
insb
outsb
add
mov
sub
bound
push
repnz
fistps
arpl
push
lea
or
pop
insl
stos
dec
test
out
pop
xor
jo
outsl
lods
and
lahf
lea
push
mov
fstp
imull
test
scas
test
js
sbb
cmp
xor
loopne
inc
push
int
xchg
notrack
dec
xor
bound
or
stos
push
jbe
and
mov
push
jg
mov
std
pop
dec
mov
mov
mov
daa
sub
pop
xor
fsubrs
adc
xor
in
add
lea
mov
push
push
sub
jle
out
in
cs
sarb
jp
testb
fcomp
out
pop
repz
lret
test
es
in
lahf
pop
cmpsb
push
xchg
fwait
sarb
fs
inc
sub
inc
jbe
and
mov
xor
mov
or
fisttpll
notb
mov
inc
shll
ja
inc
iret
push
aas
lret
mov
je
fwait
mov
and
xchg
pop
popf
test
mov
iret
cmp
jge
pop
pop
lods
push
es
hlt
cld
jb
inc
test
pop
in
mov
pop
and
clc
mov
out
inc
push
mov
ret
out
movsl
pop
and
leave
movsl
fsubrs
enter
jmp
cli
push
mov
in
aas
sbb
aam
dec
push
rol
iret
jp
jb
imul
popa
push
fldl
sub
inc
jl
inc
lea
jbe
add
sbb
push
ljmp
out
cwtl
push
xchg
outsl
nop
adc
xor
jmp
rcrb
mov
pop
fstps
and
adc
mov
int3
out
js
push
jne
notl
xchg
mov
xchg
push
push
push
push
arpl
mov
ja
cli
pusha
es
pop
les
jne
int
mov
mov
add
mov
hlt
jo
movb
sbb
aas
popa
mov
scas
push
mov
add
push
adc
add
or
push
xchg
add
jno
xchg
adc
xor
and
mov
add
jb
jmp
movsl
cmpsl
mov
mov
cs
jbe
loope
cmp
or
jae
aad
imul
mov
and
pusha
sti
jb
dec
mov
lahf
mov
scas
out
mov
cs
shl
jo
ljmp
in
insl
or
sbb
call
mov
outsb
push
fcmovu
fnstenv
jne
inc
cmp
sarl
dec
inc
scas
in
or
sub
insl
mov
add
int
sbb
sub
lret
add
xchg
sbb
mov
jnp
mov
sub
jmp
sarb
imul
ret
pop
add
mov
lds
cmpsl
inc
mov
mov
jl
shl
sbb
lcall
addb
es
icebp
jecxz
lods
mov
xchg
and
push
jle
dec
lods
pop
aaa
sub
out
pop
punpcklbw
adc
aam
mov
pusha
fistl
out
fsubl
mov
add
adc
lahf
sub
les
add
loope
mulb
insb
mov
popa
out
cmc
and
mov
stos
mov
aam
sub
jne
in
jl
out
push
rorl
jae
fldenv
xchg
inc
pop
divl
pop
std
mov
arpl
jnp
das
or
leave
lods
and
ret
and
pushf
test
test
fwait
sub
add
xor
add
bound
add
pop
repnz
push
and
cmp
inc
push
inc
mov
mov
lds
cmp
jbe
xor
push
cld
loope
bound
stc
mov
mov
or
test
out
push
mov
pop
nop
pop
out
sbb
int3
xor
mov
outsl
jg
and
mov
jle
jp
aad
fs
jg
mov
cmpl
jb
loopne
lods
dec
and
out
movsb
mov
xchg
test
xor
test
mov
pop
pop
fsubrs
add
fmull
jbe
cmpsl
jo
push
sbb
lds
fisubl
movsb
adc
mov
inc
mov
clc
aam
imul
repz
loop
mov
sbbl
mov
jge
mov
movsb
in
sub
stos
push
jb
daa
icebp
xor
scas
dec
and
sbb
push
pop
mov
jne
jnp
cmp
push
cmpsl
mov
fldt
aaa
jnp
lods
add
xlat
push
or
jecxz
mov
jle
sbb
xchg
mov
cmp
or
out
mov
aad
jp
add
lods
sbb
pop
cmp
inc
fwait
xor
jecxz
pusha
dec
sub
mov
lahf
mov
fisttpl
stc
pop
sbb
adc
pop
jl
pop
je
jnp
idivb
push
lds
repz
orb
rcl
sti
sti
push
sub
or
int
leave
pop
mov
inc
mov
mov
jnp
inc
adc
jns
pushf
cwtl
stc
cmpsb
bnd
in
lds
pop
sbb
push
sahf
xlat
and
push
out
pop
ffree
push
and
mov
repnz
push
ret
sub
lock
mov
and
mov
sbb
lods
cli
fadd
into
cwtl
jns
imul
pop
ljmp
pop
mov
call
loopne
inc
repz
in
fwait
pop
pushf
pushaw
inc
test
cli
fnstenv
cli
and
imul
push
sarl
mov
out
push
lea
mov
sbb
es
pop
sub
and
mov
xchg
cwtl
inc
fimull
out
call
push
iretw
cld
cld
lds
jb
pop
loop
leave
pop
mov
fcoml
mov
fisubrs
call
jne
pushf
dec
sub
std
dec
cli
std
mov
out
sbbb
loopne
cmpsb
js
scas
cmp
dec
mov
pop
lods
and
pop
push
add
mov
scas
enter
sti
lret
or
lods
mov
sbb
mov
sbb
mov
cmpsl
xchg
xor
mov
cmp
adc
push
jnp
adc
cmp
dec
push
inc
test
add
add
jns
mov
addb
aad
stos
outsb
lea
outsl
inc
dec
pop
arpl
in
sahf
les
mov
movsl
push
xchg
mov
sub
cmp
jno
mov
jnp
adc
lods
or
add
adc
leavew
aaa
dec
popa
sub
lock
stos
lock
cmp
sub
das
subb
outsb
popa
fsub
inc
stos
and
jecxz
scas
cmp
out
jbe
and
enter
adc
jb
fadd
lods
jge
lea
dec
jnp
dec
insb
push
ret
aad
inc
pop
movl
mov
add
jne
or
pusha
js
mov
enter
cmp
rclb
xchg
in
mov
add
dec
inc
push
sub
jnp
loope
adcl
shll
mov
adc
and
pop
int
cmp
test
and
out
add
rcrb
bnd
arpl
and
rcrb
cmp
jbe
lods
out
insl
ds
mov
cwtl
jge
in
bound
pushf
mov
mulb
stc
repz
loope
jo
jecxz
mov
cld
inc
lods
push
in
adc
jp
es
push
sub
jne
mov
in
and
xchg
adc
push
sbb
inc
clc
mov
inc
sbb
ljmp
cmp
enter
sub
test
pop
mov
push
loopne
negl
aas
clc
dec
arpl
js
dec
add
int3
mov
jmp
movsl
cs
je
dec
popf
jmp
cmc
lcall
decl
inc
and
dec
cld
jb
mov
sub
ret
mov
inc
mov
jmp
test
mov
jl
or
mov
mov
int
inc
push
shlb
mov
lock
test
xchg
pop
inc
test
jnp
inc
stc
dec
cs
mov
call
fwait
fscale
jl
insl
dec
jmp
mov
push
xor
test
out
clc
xor
cmp
dec
mov
std
addb
mov
fnsave
inc
lock
fcom
enter
xor
push
lds
pop
stos
or
cmp
das
dec
mov
insl
mov
mulb
int
in
fistpll
std
in
lret
les
je
sahf
insb
mov
pop
sbb
sub
jnp
add
orl
mov
push
out
sbb
loopne
in
xchg
sbb
or
mov
jae
mov
lcall
xchg
mov
sub
jmp
jmp
cli
mov
sub
js
fstps
in
jmp
fldt
push
mov
jge
btr
out
das
cmpsl
inc
pop
sbb
push
in
or
xchg
sub
fists
mov
sbb
push
sahf
dec
sbb
jnp
pop
test
iret
sbb
inc
popf
jnp
dec
jg
jge
push
lds
shl
mov
sti
adc
push
push
je
data16
cmp
lahf
dec
roll
lea
inc
lds
sti
sub
mov
jno
int3
xchg
lock
sub
mov
jns
jg
sbb
cmp
or
adc
lods
lmsw
int
fwait
cltd
in
jmp
xchg
ret
imul
xor
mov
jno
imul
jecxz
fmull
mov
hlt
push
xor
test
xor
pop
jecxz
mov
cmp
cs
mov
jns
jne
dec
rorl
sbb
das
rcrl
dec
mov
mov
das
sti
and
aas
push
push
in
nop
and
ds
xor
stos
lods
scas
lret
js
inc
cmp
push
add
cmp
shlb
ds
mov
push
pop
push
out
pushf
mov
cmpsl
fdivl
mov
scas
cld
out
pushf
fldcw
jge
mov
hlt
pop
and
xchg
std
leave
mov
sbb
sbb
ficomps
adc
pop
add
inc
cmpsl
in
jge
mov
addr16
xor
rcr
decl
and
jno
pop
and
inc
mov
lds
pop
adc
in
sub
negb
shrb
push
mov
shll
cmp
mov
xchg
dec
and
sub
out
les
pusha
or
out
and
or
cmp
jae
stos
ja
cmc
push
leave
ljmp
lock
mov
xor
sub
mov
mov
shll
mov
and
jae
outsl
mov
fisttps
xor
test
stos
ljmp
inc
mov
xor
xchg
mov
fcoms
xchg
aas
mov
lds
movsb
cli
mov
cmpsb
icebp
add
icebp
push
fdivs
mov
fs
popf
lods
call
xor
sbb
add
rorl
pop
and
in
test
gs
push
data16
push
inc
call
cmpsb
and
sar
fmull
sahf
arpl
sbb
sub
test
fstps
test
adc
cmp
imull
xchg
in
push
lea
mov
fcmovbe
mov
jo
out
int
dec
jl
imul
jnp
xchg
roll
pop
jae
shlb
mov
ljmp
imul
mov
cmp
sbb
out
outsb
mov
rcr
fildl
fidivs
scas
test
xchg
iret
ret
imul
aas
mov
fsubrs
mov
jg
shl
pop
mov
fdivl
movsb
aas
adc
pop
push
pop
pushf
fwait
jp
mov
mov
lods
jp
cs
push
enter
aam
arpl
aas
outsl
push
enter
std
lock
stos
xor
ret
pop
inc
mov
fs
xchg
mov
stc
es
mov
pop
xchg
cmp
rolb
in
insl
and
out
mov
mov
das
mov
fists
insl
popa
push
jae
dec
leave
push
adcl
ds
sahf
mov
in
sub
gs
and
push
in
mov
test
mov
aad
ret
adc
int3
sbb
cmpb
and
pop
xchg
pushf
iret
insl
xor
in
cmp
das
sub
imulb
ficoms
dec
sub
push
out
dec
mov
inc
ja
je
jge
xchg
or
aaa
mov
dec
rcl
cmp
cmc
out
xor
pop
mov
sub
mov
xchg
pop
cmp
loope
sbb
in
adc
idivb
dec
call
or
pop
adc
mov
lock
inc
sub
dec
repz
fstpl
jle
add
test
enter
in
fisttpll
inc
rcl
mov
in
negl
adc
xor
das
fnsave
das
xor
je
mov
imul
adc
mov
push
dec
inc
sub
mov
sbb
sbb
fldenv
push
jg
loop
rcrl
mov
sar
jne
out
pop
sarl
ja
mulb
push
imul
push
into
idivb
outsb
jb
sahf
fdivrl
mov
decl
scas
and
push
sub
les
mov
ret
stos
or
cs
jnp
add
mov
and
sbb
nop
lds
repz
in
mov
aam
in
or
std
inc
fs
out
scas
out
mov
rorb
clc
dec
movsl
mov
into
out
cmp
lock
xor
lret
enter
ljmp
xlat
dec
lahf
loopne
repnz
fisttps
mov
lret
lds
mov
xor
push
rolb
adc
andb
call
mov
into
in
jno
mov
in
pop
push
mov
add
popa
jp
mov
xor
xor
cmp
cmp
andb
xchg
adc
jmp
pop
xchg
insl
mov
cmpsl
pop
cs
mov
test
xor
es
ja
mulb
sbb
enter
pop
scas
mov
xor
call
repnz
fdivr
cmc
add
mov
sbb
lds
and
cli
or
sub
adc
ret
push
sahf
and
lret
ss
adc
dec
cwtl
fldenv
ljmp
in
add
mov
inc
adcb
hlt
ja
jmp
sub
push
add
jb
adc
mull
cmpsb
iret
inc
xor
fisubl
push
mov
ljmp
inc
adc
add
xchg
imul
rcrb
fwait
pop
sbb
fcmovu
jnp
sbb
and
lock
or
push
mov
cwtl
scas
stc
popf
dec
stc
xchg
in
jl
xor
dec
fsubr
rorl
out
jb
mov
pop
inc
es
adc
jae
data16
sbb
sbb
pop
mov
inc
xchg
popa
addr16
sbb
lock
out
mov
in
mov
sbb
jge
mov
notl
fisubrl
stc
mov
jle
sub
imul
or
adc
sahf
jbe
cwtl
mov
jae
mov
testb
adc
inc
fs
call
ret
bound
add
push
push
and
sub
sub
clc
jno
add
mov
les
jecxz
repz
pop
pop
inc
inc
lahf
sbb
jnp
in
pop
add
ss
imul
insb
xchg
sbb
ret
dec
test
dec
push
mov
jp
ja
add
imul
jle
repnz
mov
jns
fisubs
inc
vpavgw
mov
insb
lahf
stos
outsl
fistps
sub
cld
jns
or
jns
dec
dec
arpl
hlt
cld
shl
jns
stos
inc
idiv
jg
inc
xor
out
pop
je
popf
movsb
adc
jge
es
sbb
jns
scas
pop
or
mov
xchg
pop
jae
jecxz
sub
push
cmp
mov
adc
addb
je
cmp
shll
sub
stc
fldenv
and
leave
repnz
cmp
and
mov
jbe
mov
push
in
and
inc
iret
mov
imulb
fdivl
push
xchg
test
pop
fmuls
dec
mov
sti
cmc
jmp
mov
pop
xchg
test
and
into
inc
push
scas
xchg
mov
aaa
lahf
fwait
ja
enter
popf
xchg
cmpsl
xor
jb
leave
add
repz
std
test
inc
mov
lds
add
or
lods
mov
popf
mov
insl
movsb
loopne
mov
push
jmp
or
mov
xor
and
xor
ret
push
mov
adc
lcall
mov
push
xor
inc
or
in
aaa
jbe
sub
nop
push
and
ss
pop
inc
sbb
adc
fsubr
mov
dec
cmc
mov
inc
sbb
test
inc
push
mov
push
mov
lahf
mov
jmp
jp
movb
inc
jbe
mov
inc
and
jb
jae
pop
mov
cmc
cmp
insl
scas
mov
jne
mov
or
loop
addr16
rcrl
mov
sarb
xlat
dec
jb
popa
rorb
dec
das
cmpsb
push
jmp
mov
jnp
pop
xor
add
add
pop
imul
xchg
inc
out
nop
jo
pop
xchg
and
shlb
nop
or
out
adc
pop
cltd
adc
add
gs
sbb
ja
repnz
mov
shl
gs
out
aad
pusha
lcall
fidivl
push
cmpsl
call
cmpsb
insl
xor
push
lret
and
push
fbld
xor
push
repnz
sti
xor
in
mov
vpunpcklbw
push
je
mov
testb
add
jle
leave
inc
add
das
shlb
inc
mov
cmpsl
push
js
mov
lock
sbb
daa
in
popa
cmp
ja
cmp
cmp
add
adc
add
inc
sub
in
repnz
fcmovne
pop
fisttpl
daa
adc
sub
out
lods
adc
in
enter
inc
sbb
in
subb
pop
inc
adc
lcall
sbb
mov
and
inc
sti
pop
shll
repnz
movsl
scas
jg
popl
clc
les
mov
cmp
rolb
jb
leave
shlb
jne
gs
jg
pushf
add
push
dec
je
xchg
mov
clc
and
mov
nop
rep
sahf
and
outsb
mov
add
mov
fimull
or
cltd
stos
loope
clc
loope
dec
adc
and
sbb
and
xchg
stos
xor
dec
cmp
push
mov
ffree
stos
sbb
aaa
jle
neg
testl
dec
cli
jo
and
mov
fildl
and
cmpsl
mov
jbe
test
add
cmpsl
adcl
in
fcom
lahf
xchg
lea
push
icebp
mov
ss
push
pushf
pop
jmp
aas
xchg
xchg
cmp
sbb
fs
mov
in
addr16
pop
pop
cmp
dec
cmp
outsb
ret
add
sub
shrb
shrl
cmpsb
mov
rcr
iret
ljmp
xchg
mov
jns
xchg
xchg
xchg
fwait
jecxz
mov
fcomps
push
or
test
pusha
cmp
jno
addl
push
adc
les
rcrl
dec
add
and
arpl
sub
mov
out
dec
fcoml
sbb
or
loopne
out
and
mov
adc
jne
add
jmp
push
bound
xchg
and
and
pop
cmc
xchg
fxch
ja
mov
dec
cmpsb
idivb
scas
leave
icebp
ljmp
pop
ss
push
push
cmpsb
repz
add
lods
mov
cmpsb
cmp
mov
jle
aaa
ret
push
mov
inc
iret
fcomps
dec
inc
dec
push
or
xchg
sbb
hlt
repz
sub
inc
enter
daa
jge
or
aad
shll
fs
push
imul
lods
dec
xchg
inc
fmul
das
jecxz
mov
iret
pop
stos
daa
fcmovu
pushf
mov
in
adc
js
or
jmp
inc
sbb
movsb
push
ret
inc
inc
ret
aaa
push
add
lret
dec
sbb
cs
mov
xlat
cmp
xchg
aam
loopne
into
xchg
mov
shlb
jmp
or
mov
sbbb
xor
push
sub
loopne
or
enter
mov
push
jnp
lahf
mov
std
pop
cmpb
lea
sub
sub
scas
jnp
test
iret
fcmove
inc
pop
pop
xchg
mov
call
scas
cmp
or
std
lods
push
addb
dec
pop
mov
push
xchg
mov
adc
jnp
pop
cmp
jns
sub
push
xchg
ret
loop
aaa
cmpsb
lea
push
das
clc
and
jbe
push
nop
fmuls
sub
push
ss
daa
je
icebp
fcompl
leave
xor
push
sub
push
dec
lock
add
inc
cli
xor
popa
aad
movsb
xchg
and
scas
sbb
or
jp
xchg
inc
shrb
cmp
mov
fwait
or
ret
mov
clc
xor
aad
sbb
sbb
shrb
aaa
shrl
rcr
or
fdivr
xor
xchg
mov
int3
stos
add
inc
inc
lods
pop
adc
mov
sub
add
jno
mov
popf
enter
lock
cmp
mov
cmp
ret
aaa
and
in
jl
mov
rorb
xchg
mov
lret
icebp
mov
test
in
mov
xor
fistl
xor
add
ret
xchg
in
sti
dec
dec
mov
mov
repnz
jno
push
mov
lock
mov
sbb
push
mov
out
cmp
int3
out
aaa
incb
push
mov
mov
xchg
fs
das
push
push
dec
sub
cmp
lock
arpl
outsl
test
adc
fdivrl
cmp
or
scas
stos
ja
pop
ret
adc
pop
movsb
sbb
push
ffree
out
call
or
adcl
xor
lods
xor
hlt
loop
and
pop
in
call
hlt
cmc
xlat
sahf
jmp
push
jns
cltd
es
dec
mov
shll
mov
push
repz
clc
test
faddp
ss
jmp
lcall
fldcw
add
test
pop
push
xchg
jl
adc
mov
std
repnz
rcl
nop
in
clc
call
pop
pop
hlt
hlt
add
std
xchg
sbb
sub
ljmp
fcomp
test
dec
inc
cmp
aad
push
aad
out
das
inc
mov
jns
daa
mov
push
push
dec
jle
rorl
and
cmpsb
dec
cmpb
test
fldl
or
adc
jp
ljmp
fdivs
pushf
lret
xchg
mov
mov
dec
fisttps
jbe
inc
jb
cmpxchg8b
js
popaw
popa
jbe
mov
lock
xor
push
test
jnp
in
cwtl
or
dec
and
push
jg
rcrl
in
xchg
lea
test
lret
pop
add
cmp
rorb
adc
int3
sub
xchg
jbe
stos
movd
and
pop
shll
cmp
pusha
lcall
add
cs
dec
scas
scas
mov
jecxz
repnz
sub
loopne
or
test
pop
test
cwtl
std
stos
sbb
or
push
pop
ja
cmovnp
lods
sub
sbb
sbb
outsl
repz
dec
mov
out
xor
push
sbb
loope
mov
ds
push
mov
cmpsb
hlt
xchg
repnz
sbb
sbb
inc
inc
movsb
sub
adc
lahf
adcb
jg
cmp
jno
cmp
test
jge
pop
movsl
test
dec
jge
push
dec
les
outsl
jmp
mov
add
call
fidivs
lret
mov
pop
ret
xchg
test
adc
pusha
mov
inc
cmc
pop
data16
push
popf
dec
jle
popf
mov
fimull
iret
push
add
mov
idivb
pop
or
xchg
mov
xchg
xchg
loope
fs
xor
push
cmp
sbb
shll
notl
mov
inc
mov
popf
mov
or
ja
ret
xor
sub
call
sub
dec
stos
inc
mov
and
lahf
jnp
ret
lock
pop
jecxz
not
xchg
pusha
jno
xchg
jp
adc
cmp
inc
push
in
push
rcrl
mov
jg
sub
sbb
push
and
icebp
inc
shrb
jno
xor
push
add
jbe
leave
lea
pop
mov
pop
xchg
or
shrb
jbe
aas
repz
mov
xchg
mov
jg
bound
xlat
jecxz
mov
test
dec
pop
scas
pop
push
test
in
mov
imul
or
or
int3
aas
js
push
mov
out
push
push
stc
cmp
hlt
popf
out
out
stc
andb
inc
fistpl
lret
xor
pop
mov
dec
inc
pop
mov
repz
js
addl
rorb
rclb
rcll
loope
fisttpll
mov
aad
cs
add
mov
cmc
jge
lcall
js
cmp
nop
inc
xchg
xor
xchg
in
rcrl
mov
adc
je
jmp
imul
mov
mov
cmp
jge
mov
gs
lods
pop
std
push
push
or
fistpl
jge
mov
pop
cmp
fisubs
sbb
mov
xchg
fistps
xor
sbbl
inc
or
xchg
jb
push
dec
xchg
cmpsl
mov
sbb
loop
call
sub
sbb
cli
int
mov
cmpsb
cmp
ficoms
dec
mov
es
and
jle
pop
cmp
test
test
cs
and
xor
mov
mov
mov
jge
iret
icebp
pop
jne
xor
or
cld
lock
mov
mov
add
out
out
pop
iret
add
out
push
stos
and
xor
inc
ja
inc
push
mov
jle
test
and
cs
xchg
inc
sbb
cmp
push
and
mov
insb
cld
ja
mov
lods
sar
jno
dec
or
setg
inc
loop
pop
fisubrl
xorl
inc
jmp
cwtl
cmc
ret
sbb
int3
sbb
sahf
jp
pop
cwtl
pushf
push
in
popa
addr16
cmp
jno
fidivrl
xchg
scas
popf
adcl
inc
shlb
in
pop
mull
gs
in
sbb
iret
jbe
repnz
jb
insb
jmp
popf
and
cli
xorb
imul
jnp
jae
das
dec
mov
aam
sub
setbe
dec
daa
adc
fcompl
testl
pop
jnp
add
bnd
mov
mov
inc
andl
ss
sbb
mov
fldcw
push
sbb
iret
imul
pusha
push
mov
xor
lret
pop
pop
push
or
in
in
in
repnz
sbb
lods
insl
into
mov
adc
ss
leave
pop
push
mov
xchg
cmp
jns
out
jb
cmp
clc
inc
call
cmp
push
in
cli
shll
addr16
cld
cmpsb
test
push
push
mov
outsb
mov
add
xchg
arpl
inc
jg
aam
adc
in
sarb
stos
mov
and
ficomps
xchg
adc
xchg
mov
fucomi
jae
mov
insl
fldenv
cmpb
pop
lods
or
adc
movsl
lahf
fnstenv
lret
sub
pop
and
mov
sbb
cmpsb
xchg
scas
cli
or
jg
add
into
mov
dec
jmp
stos
lock
adc
xchg
or
mov
jmp
iret
nop
movsb
mov
aam
js
inc
dec
mov
or
dec
aaa
add
adc
push
lds
pop
jp
sbb
jnp
aad
inc
outsb
sub
xlat
push
je
nop
fwait
mov
gs
repz
mov
dec
hlt
fs
jmp
lret
mov
add
xchg
push
rcrl
rcrl
ss
arpl
xor
pop
xchg
lret
add
and
mov
inc
mov
cmp
inc
in
sarb
repnz
popa
dec
pop
pop
stc
jmp
test
lret
or
daa
out
sub
jo
or
add
xchg
xchg
sub
jmp
xor
jbe
dec
outsl
cli
in
gs
push
adc
and
and
es
add
daa
mov
aam
sbb
xchg
add
xchg
fwait
pushf
cmc
xor
loope
pop
sbb
mov
shlb
adc
outsb
mov
xchg
lret
cmp
rclb
xchg
mov
imulb
sub
jne
xor
ds
loop
dec
fildll
ret
push
rorb
mull
or
lods
out
rclb
xor
jns
xchg
std
cmpsl
cmp
mov
sub
pop
ds
xor
push
loop
mov
xor
bound
xlat
mov
pop
mov
out
aas
xchg
xor
push
cltd
into
xchg
push
pop
inc
cltd
outsb
gs
cmp
mov
es
inc
sub
repnz
in
in
mov
push
adc
mov
ffree
push
das
mov
insb
aam
push
cmp
add
mov
js
cmpsb
fistpll
jmp
subl
mov
popa
jns
and
ret
js
in
jnp
inc
jae
sbb
dec
pop
pop
fiadds
ss
push
arpl
jnp
mov
inc
aas
xchg
mov
mov
mov
push
imul
enter
inc
push
and
outsb
xchg
test
lods
jg
sbb
mov
push
or
xchg
pop
ret
jecxz
sbb
pop
ret
out
push
pop
lret
ficomps
mov
lcall
sbb
mov
cmp
xor
sub
mov
clc
icebp
jnp
xor
inc
push
in
inc
pop
push
jle
cmp
dec
std
mov
lods
cld
mov
jbe
outsb
or
cmpb
int
xor
mov
jns
outsb
cmp
add
sbb
rcr
je
arpl
nop
or
aaa
stc
pop
lahf
sub
add
sahf
mov
repnz
fldenv
sahf
and
pop
mov
dec
sbb
pop
subl
push
arpl
xor
inc
mov
std
dec
inc
bound
cld
push
push
cmpsb
imul
movsb
jecxz
dec
cltd
sbb
xchg
xchg
out
bound
loop
arpl
sbb
fwait
mov
pop
pop
xchg
test
sti
sub
fstps
imul
sub
inc
mov
pop
and
mov
in
dec
sar
dec
jns
mov
out
faddl
jae
arpl
pop
cli
push
pop
push
mov
cmp
ja
ljmp
outsl
enter
rcr
ja
inc
in
xchg
push
adc
cmp
xchg
jl
mul
test
push
pop
cmp
out
fcmovb
sub
push
add
pop
int
ljmp
mov
shl
ja
aam
mov
sbb
popa
shlb
fstps
test
or
add
mov
lods
pop
loop
xlat
scas
movsb
pop
jmp
mov
mov
cmp
mov
adc
push
push
adc
sub
in
sub
lock
add
mov
fistpl
les
aas
inc
mov
rclb
and
fwait
aam
lds
push
push
jo
push
sysexit
fidivs
lret
daa
push
jmp
dec
mov
sub
in
fst
mov
mov
push
mov
mov
ja
test
std
cltd
popa
sub
mov
lods
ret
mov
push
mov
mov
and
mov
jl
fnclex
data16
add
sbb
hlt
jae
stos
sub
aad
cs
mov
push
int3
fldt
es
cmp
lock
xchg
pop
out
xor
xor
psrlq
dec
test
jne
xlat
and
mov
xchg
ds
mov
shlb
jbe
mov
pop
add
popf
xor
daa
sub
pop
nop
scas
fcmovne
imul
adc
jne
push
in
pop
das
jl
sub
loope
lods
or
cmp
jecxz
cli
dec
mov
mov
inc
aam
xchg
mov
insb
mov
cmp
pop
mov
or
inc
pushf
pusha
outsb
mov
cli
jbe
mov
out
pop
lods
mov
aas
ret
addr16
xchg
shrl
inc
jl
aas
roll
sbbl
fisttpl
dec
pop
jbe
int3
sbb
daa
push
out
loopne
add
es
int3
adc
cmp
popa
mov
mov
movsb
enter
popf
lods
cli
mov
mov
leave
scas
xor
and
je
adc
sbb
cmp
ror
sub
add
jmp
cmp
push
push
lds
adc
notb
jle
pop
push
out
pop
cli
sub
insl
xchg
sub
pop
aad
shlb
dec
cmp
adc
cmpsl
test
pop
xchg
stc
add
div
pop
scas
mov
fcoms
xchg
push
idivb
roll
mov
leave
pop
push
push
enter
jnp
mov
std
jae
nop
cmc
jl
ds
pop
int3
xchg
or
mov
push
dec
fs
push
xchg
adc
cmp
daa
jbe
imul
lcall
add
mov
push
int3
fprem
frstor
mov
test
xchg
cmp
xchg
push
pop
dec
cli
add
cli
lret
imul
jl
mov
cmp
out
test
jns
les
or
pop
push
faddl
xor
or
fwait
pop
cmp
xchg
sbb
inc
xchg
push
dec
adc
sahf
ds
subl
inc
loop
shl
dec
aaa
into
jle
add
popa
pop
adc
xor
xchg
mov
mov
gs
jge
out
dec
or
pop
mov
jp
xchg
aaa
shrb
lods
sbb
pop
mov
sahf
mov
in
inc
dec
jno
popf
adc
jle
inc
push
jne
mov
out
out
les
aad
cmp
test
or
pop
test
in
insb
push
shll
inc
sbb
aas
leave
push
sub
in
mov
inc
sbb
out
arpl
inc
xchg
inc
xor
mov
cltd
repnz
pop
into
add
mov
or
dec
and
mov
add
adc
mov
cs
lret
pop
out
lahf
or
sar
pop
and
inc
les
cld
xchg
fsubs
lea
jb
test
sbb
add
or
fdivrl
xor
jecxz
and
scas
or
out
lds
iret
cmpsb
fs
or
fbld
add
ja
sbb
pop
inc
test
mov
ds
test
xchg
and
lcall
sub
xor
shll
mov
shll
or
xchg
push
setnp
into
fsubrs
dec
pop
jnp
in
adc
popf
pop
mov
arpl
mov
idivb
stos
dec
push
or
ds
push
cmp
mov
nop
adcb
dec
mov
loop
lods
jb
dec
mov
mov
or
insl
mov
pushf
pop
insl
adc
loop
xor
loop
repz
mov
lock
push
add
dec
jo
mov
and
rorb
subb
out
stc
fmull
movsb
mov
pop
xchg
xchg
dec
or
hlt
cli
mov
cmp
and
inc
out
in
push
fdivs
jb
cld
pusha
loopne
mov
inc
in
ss
addl
or
ljmp
mov
inc
pop
in
push
std
imul
arpl
es
fcmove
mov
psubsw
mov
add
add
or
out
push
xchg
inc
dec
push
adc
push
adc
call
dec
call
scas
arpl
cmc
and
call
jge
dec
and
add
jno
js
mov
sahf
pop
push
mov
movsl
lds
add
lahf
jb
cmp
out
pop
add
int3
dec
add
pop
cmpb
leave
sbb
or
nop
xorl
sbb
inc
push
ja
push
sbb
jb
ja
cmp
int3
stos
xchg
fldcw
xor
cmc
test
pop
int3
xabort
ja
div
jno
test
outsl
xchg
in
shlb
aas
aad
lcall
add
cmpsl
jle
jno
enter
movsl
dec
or
push
imul
fimuls
xchg
shl
xchg
stos
lods
xor
and
es
lcall
je
addb
adc
push
add
sub
mov
add
mov
mov
cmc
push
mov
aaa
or
clc
les
fisubrs
mov
pop
mov
mov
rcrb
mov
pushf
jo
imul
pushf
mov
adc
push
orb
xchg
loopne
pop
add
xchg
rol
cltd
add
lcall
dec
std
cwtl
add
xchg
rcr
dec
pop
hlt
or
scas
call
push
repz
loope
cmp
mov
xchg
mul
cmc
lret
jle
adc
ficoms
dec
inc
add
negb
lea
fwait
inc
xchg
jp
sub
mov
out
pop
xor
pop
xchg
and
addb
xchg
push
sub
xor
lret
push
imul
push
fwait
icebp
push
xor
dec
inc
or
pop
sbb
dec
mov
test
mov
test
mov
fidivrl
jns
sbb
mov
push
sub
jns
xchg
inc
popa
push
mov
popa
hlt
cltd
hlt
mov
icebp
ja
inc
and
jecxz
enter
xor
test
inc
fisttpll
push
pop
outsl
inc
inc
out
lret
pop
adc
subl
stc
mov
cmp
or
or
in
add
sbb
pop
rclb
mov
mov
push
push
sub
mov
add
dec
mov
mov
arpl
aaa
sub
xor
xchg
rcll
aaa
dec
sarb
sti
cs
les
push
dec
mov
lret
adc
lret
xor
mov
pop
into
xchg
ds
or
ret
hlt
fwait
sub
xor
sbb
or
sahf
push
mov
cmp
pop
mov
imul
aaa
leave
xchg
jmp
test
and
loopne
iret
mov
repnz
mov
xchg
and
cwtl
outsb
aam
in
fs
insl
test
mov
xchg
inc
std
pushf
test
mov
stos
mov
dec
xchg
lods
call
pop
xchg
push
inc
push
sbb
cmpb
jp
inc
movsb
adc
outsl
pop
pusha
mov
in
icebp
aaa
cmc
sti
jecxz
jnp
daa
push
gs
sarb
pop
mov
je
aaa
cli
cmp
mov
adcb
and
std
stos
rcrb
insl
frndint
mov
ret
jl
jo
adc
or
int3
push
push
inc
mov
out
push
push
jne
outsb
adc
push
out
sbb
ss
mov
addr16
into
lods
push
test
jno
adc
pop
push
mov
nop
repnz
in
push
or
call
add
orl
loope
cmpsb
lock
in
add
scas
add
push
mov
xchg
jmp
and
fwait
sbb
inc
cli
popa
test
mov
outsl
gs
lcall
iret
add
xor
mov
sbb
push
or
pop
ret
xchg
inc
pop
sbbl
nop
push
pop
rolb
add
jo
push
sti
int
lret
sub
nop
jae
sahf
outsl
loope
repnz
mov
test
xchg
pop
sbb
lcall
repz
imul
xchg
and
aam
or
ds
cmc
dec
add
xlat
jo
std
add
loopne
test
jecxz
cwtl
loopne
fdivl
mov
mov
push
push
dec
cmp
pop
inc
or
adc
xchg
push
lds
jae
fs
xlat
jo
xchg
and
sti
addr16
xchg
dec
jl
dec
nop
cld
ss
adc
call
scas
inc
mov
pop
test
mov
popa
mov
movsb
fs
in
jmp
scas
aas
call
inc
pop
test
or
imul
jns
icebp
out
pop
xor
mov
imul
gs
inc
mov
ja
or
ss
inc
pop
or
sbb
outsl
inc
adc
push
adc
push
push
into
xlat
dec
in
outsl
and
mov
sub
mov
push
cmp
fmuls
iret
xor
inc
dec
sbb
dec
movsl
jo
sub
filds
dec
pcmpeqd
sub
cmp
sbb
jno
xor
cld
xchg
clc
adc
popa
cmp
fwait
cmpsl
dec
jnp
aam
ss
or
lea
in
mov
jmp
int3
xchg
in
mov
mov
ror
inc
ret
xchg
push
adc
pop
add
popf
test
je
push
rcrb
jmp
adc
and
jmp
popa
push
mov
enter
add
xor
sbb
and
scas
inc
cltd
fwait
outsl
ret
gs
cmp
xlat
std
push
stc
inc
jle
dec
in
adc
notl
imul
hlt
push
into
sar
in
sbb
xchg
imul
sub
push
sbb
push
mov
cs
dec
push
mov
in
test
mov
daa
loopne
loopne
and
addr16
sbb
loopne
pop
push
mov
fstps
jecxz
pop
xchg
fnclex
in
xchg
fcom
dec
into
or
inc
inc
pop
loop
push
imul
call
rcrb
mov
sbb
out
in
push
stos
xchg
push
inc
pop
leave
cmpsb
mov
cmpsl
lret
dec
mov
mov
mov
cmp
daa
xchg
jbe
cs
adc
mov
mov
lea
enter
sub
mov
fstpt
movups
shrb
inc
jnp
pop
push
std
sbb
add
push
jle
aas
push
mov
xor
out
mov
outsl
imul
mov
sub
sbb
arpl
dec
xchg
dec
cmp
or
cmpsb
xchg
or
nop
leave
test
add
inc
sub
std
and
mov
push
add
sbb
jo
test
sti
in
jno
fiadds
add
mov
mov
mov
add
es
xor
aam
mov
push
scas
pop
xchg
inc
loope
lock
pop
filds
popa
clc
mov
sbb
jne
dec
ds
and
xor
xchg
push
stos
out
pop
clc
dec
mov
or
xchg
into
inc
insl
adc
dec
mov
jecxz
cmpsb
movsb
mov
adc
push
cs
repnz
fmull
shlb
jbe
inc
mov
shlb
xor
sub
mov
adc
cmp
push
out
jmp
pop
and
in
test
pop
or
stos
xchg
mov
pop
add
fdivs
stc
stos
mov
lock
loop
inc
add
fdivr
jg
cmp
mov
shr
sbb
mov
cmp
or
pusha
or
ret
jle
cmp
lods
test
add
sbb
sub
mov
lahf
fwait
sub
shll
loope
lods
sbb
mov
xchg
jb
xchg
lods
push
cmc
jmp
clc
std
inc
push
inc
xor
cmpsl
idivl
adc
mov
pop
ja
lea
sbb
push
shll
inc
sbb
xor
push
jne
divb
movsl
pop
daa
mov
dec
xor
imul
pop
mov
flds
out
int
imul
jbe
mov
mov
fnstsw
stos
enter
xchg
fs
xchg
lcall
add
jge
push
adc
xor
pop
out
pop
sbb
xor
dec
int3
clc
sbb
xchg
movsl
cmc
shl
cmpsb
in
fisttpll
mov
jbe
imul
fwait
addr16
fcomp
push
and
push
lret
adc
int
dec
shrl
mov
fucomi
les
dec
stos
ret
loopne
arpl
popa
add
wrmsr
pop
repnz
push
iret
sub
test
xchg
cld
cltd
iret
ret
pusha
inc
pop
das
imul
out
and
daa
cmp
xchg
insb
insl
ss
pop
xchg
jp
adc
push
mov
das
cli
push
add
lea
push
fldln2
inc
adc
add
sbb
mov
pop
stc
loop
push
sbb
aad
jp
data16
sub
jb
mov
aaa
in
mov
dec
shrb
sub
mov
adcb
or
and
je
ja
movl
mov
jge
iret
das
shlb
lret
dec
mov
ret
ret
movsb
add
mov
lods
enter
scas
add
mov
cmp
xor
mov
in
sub
notb
iret
push
xor
orb
push
or
push
sahf
subb
repnz
sub
sub
adc
es
cmp
and
lds
aad
inc
xchg
push
mov
movsl
xchg
movsb
out
mulb
mov
fmull
dec
dec
aaa
xchg
jecxz
in
xlat
mov
lret
lret
pop
inc
roll
iret
or
or
or
inc
and
in
xor
push
mov
or
cld
mov
imul
popa
mov
dec
inc
fucomp
aam
or
fwait
jl
or
mov
jmp
push
push
cmpsl
jno
inc
fucomip
and
in
ds
dec
xchg
dec
mov
addb
cltd
ficomps
aas
jl
add
xor
lahf
cmp
mov
rol
xadd
sets
jae
xor
lods
jle
ds
pushf
push
mov
xchg
lea
cmc
cmpsb
sub
shl
es
ja
pop
shlb
test
cltd
test
mov
jge
loop
push
mov
test
or
rorb
lret
fistpl
outsl
dec
pushf
push
xchg
inc
mov
insl
xor
add
filds
jmp
aam
mov
push
pop
shl
xchg
testb
xor
cld
jae
out
in
mov
pusha
fstp
xchg
inc
insl
pop
mov
mov
ror
cwtl
popa
xchg
add
sub
jle
dec
rcrl
push
jge
cmpsl
xor
std
sub
lds
xor
jo
fisttpll
popf
daa
cwtl
ret
dec
jnp
or
insl
ds
ss
xchg
sbb
inc
jge
and
inc
dec
jp
in
adc
sarb
jae
enter
jae
adc
sbb
xchg
lret
or
loop
scas
lods
mov
push
sti
aam
mov
sahf
lds
orb
sub
jg
mov
mov
pushf
ds
rcll
or
mov
and
xchg
mov
adc
popa
mov
fs
call
adc
mov
stos
arpl
jp
jp
lcall
pop
lea
sar
aaa
insb
or
pop
mov
inc
adc
repz
push
icebp
fs
popf
or
lods
pop
add
push
out
jae
clc
inc
pop
stos
dec
jnp
cmc
jmp
sbb
add
mov
into
sub
sahf
mov
xchg
pop
lock
int
clc
sub
jns
std
gs
prefetch
or
xchg
test
rcll
std
repz
xor
push
pop
lahf
xchg
jle
pop
xor
cwtl
outsl
popf
jns
insl
and
jns
add
ljmp
in
into
push
dec
cmpb
rcrl
adc
mov
mov
xor
rolb
mov
cmpsb
pop
subl
mov
sub
xchg
pop
add
mov
adc
shlb
js
in
push
cld
aaa
mov
mov
aad
pop
or
data16
inc
adc
jp
jno
add
scas
jl
jb
out
scas
push
jp
pop
orb
mov
test
jb
xor
ficompl
pushf
cmc
pusha
jnp
sbb
aad
adc
mov
incb
push
int
pusha
divl
loope
jle
push
cmp
push
stos
xchg
xor
inc
inc
fwait
xchg
outsl
and
mov
dec
push
cmp
imul
pop
mov
mov
lea
aad
cmpsl
lahf
repnz
inc
fidivs
jge
push
ja
inc
int3
lret
andl
repnz
xor
roll
push
mov
adc
mov
jo
and
adc
fadd
sbb
pop
bound
inc
lods
xor
mov
dec
int
das
xchg
je
or
mov
push
sub
jmp
leave
jne
lahf
cs
dec
aas
cmp
inc
push
scas
out
hlt
jno
sti
decb
mov
sahf
inc
rcrb
add
sbb
sarl
int3
jne
sub
outsl
adc
popf
inc
push
outsb
lcall
stc
cmc
fs
dec
adc
nop
ss
lahf
push
xchg
std
cld
in
inc
movsl
scas
jno
xor
and
fisubrl
xor
push
inc
push
mov
mov
xchg
pop
xchg
sbb
lret
push
mov
sub
or
loop
incb
loope
shr
lods
cmpsb
pop
movsl
cli
insb
add
jmp
jnp
or
hlt
mov
rcr
je
bound
test
notb
ds
out
sub
lea
inc
addr16
push
mov
int
pop
int
mov
xchg
xchg
sbb
xlat
ret
cltd
lds
repnz
adc
je
pop
xor
xchg
es
mov
fs
fwait
mov
push
add
and
repz
mov
adc
mov
dec
pop
mov
or
fidivs
sub
iret
popl
mov
es
cmp
inc
xchg
movsb
insb
std
testl
and
lds
cwtl
std
inc
jle
insl
xor
adc
popf
dec
mov
add
data16
sbb
js
js
and
sahf
jae
sub
mov
lcall
or
pop
les
inc
adc
clc
inc
shlb
xchg
out
ret
jp
lret
or
das
jbe
lods
xchg
sarb
and
mov
pop
mov
mov
inc
pcmpgtw
add
dec
insb
call
dec
inc
xchg
mov
int
mov
addr16
dec
mov
cmpsl
lret
movsb
mov
nop
xor
sub
pop
sahf
loope
out
pop
mov
jno
sbb
pop
aam
adc
fistps
cmpsl
movsb
in
fdivrp
leave
stos
out
inc
jno
negb
lods
insb
sti
mov
mov
fsubrs
mov
nop
fistps
mov
jg
push
in
clc
loope
jmp
and
sahf
mov
push
xor
xchg
mov
lods
dec
jmp
sub
cli
add
or
xor
popa
ljmp
jmp
mov
mov
lods
sub
mov
sahf
fnsave
rcr
inc
inc
push
rcrl
mov
jecxz
outsb
xchg
popf
mov
and
pmaxub
mov
mov
in
dec
pop
ja
inc
in
aad
pop
inc
sbb
cmp
imull
xor
mov
xchg
sbbb
xchg
lret
xor
in
or
mov
aaa
sbb
lret
jne
enter
push
lcall
inc
ret
push
jbe
shl
rcrl
or
ljmp
jl
xorl
sbb
cmp
test
adc
mov
pop
jno
fdivrl
ret
js
mov
scas
pop
xchg
fxch
sub
stos
ret
mov
add
call
icebp
xchg
divl
insl
adc
pusha
add
test
mov
push
in
mov
mov
cmp
jecxz
rorb
sbb
ret
test
dec
push
daa
and
or
ficomps
dec
mov
sbb
jg
gs
lock
stos
push
mov
jle
rclb
jecxz
lods
mov
in
adc
cmp
xchg
test
dec
fiaddl
sub
imul
fisubl
and
js
mov
jo
mov
pop
scas
push
loop
jns
loope
jecxz
fbstp
dec
xchg
mov
jecxz
jb
imul
fs
cmp
mov
gs
pop
in
inc
push
dec
xor
cmp
sub
jge
pop
je
sub
repz
leave
jge
into
sbb
xchg
adc
cwtl
lock
jmp
sub
std
outsb
pop
mov
cmpl
in
std
andb
out
mov
rolb
inc
mov
aas
pop
xor
pushf
sbb
loopne
into
mov
xchg
add
inc
stos
test
andl
adc
push
aad
imul
or
pop
inc
jno
out
dec
adc
jnp
mov
xor
inc
ljmp
jmp
rep
ljmp
int3
repnz
outsl
xchg
movl
out
mov
mov
sub
or
pop
or
pop
je
cwtl
outsb
push
popf
cmp
loope
mov
ja
pushf
cmp
clc
lods
gs
mov
push
adc
jne
jmp
add
xor
push
les
rcrl
dec
cmp
jo
xor
jno
dec
movsl
jns
sub
shll
jle
push
pop
add
mov
out
jns
bound
cmpl
mov
stc
and
cmp
clc
xchg
adc
shrb
sub
sub
pop
dec
xchg
sarb
inc
lret
xchg
jo
sub
cltd
jmp
in
sbb
and
mov
cmp
fwait
stos
or
std
fmul
sbb
fdivl
sub
popa
scas
pmullw
cmpsl
jnp
and
daa
lret
push
cmc
mov
lahf
jae
pop
in
add
push
cli
mov
fcoms
pop
cmp
addr16
test
movsl
pop
xchg
sub
je
in
pop
xchg
scas
data16
xlat
popa
fcomps
nop
cmp
pop
dec
push
add
xchg
inc
fs
enter
adcl
inc
dec
outsb
and
call
mov
push
pop
jae
fwait
testb
mov
sub
loop
in
xlat
test
das
mov
pop
mov
call
stos
rcll
lock
push
adc
ficompl
cmp
adc
sbb
or
into
pop
mov
aad
jnp
pop
lds
sbb
mov
xchg
into
or
adc
sbbl
mov
xchg
and
fldl
outsl
and
leave
bnd
in
mov
jg
xchg
mov
cmpsl
lds
mov
inc
je
or
push
shl
adc
push
xchg
in
orb
cmp
adc
fs
jg
push
add
imul
cwtl
dec
jecxz
adc
xchg
lock
and
mov
ret
out
shrb
xor
out
inc
push
les
jmp
mov
test
pop
fwait
out
lock
stc
mov
stos
xor
cwtl
shr
jp
dec
inc
xchg
mov
shl
icebp
xchg
mov
idivb
mov
rol
lods
sti
adc
ljmp
jbe
push
std
dec
inc
push
sbb
das
pop
and
add
xor
dec
mov
mov
outsl
pop
lret
aam
lahf
jge
outsb
fmul
flds
and
mov
out
js
cs
mov
push
sbb
add
sub
cmp
dec
lods
pop
pop
add
dec
rcrb
add
push
dec
xor
inc
push
push
std
lock
out
loop
cmpb
in
sbb
rorb
and
movsl
mov
jb
push
inc
and
jle
imul
mov
sti
xlat
xchg
lahf
les
ret
pop
cmp
lea
jg
cs
sub
xchg
pushf
or
adc
pop
and
xchg
push
into
adc
jne
adc
dec
test
adc
mov
jle
insl
int
std
sub
loop
push
add
inc
add
mov
lcall
testl
ret
aad
xchg
gs
pushf
pop
nop
popa
cmp
cmp
xor
push
pop
dec
rorl
insl
add
jl
loope
xchg
pop
cwtl
sbb
fadds
sahf
pop
lret
lahf
sbb
aam
incl
jbe
pop
std
sub
addr16
lods
outsb
arpl
rorb
addl
lock
movsl
adc
sub
push
fmuls
popf
add
cmpl
icebp
insl
xor
out
lods
or
call
lock
or
mov
xchg
cmpsl
ror
jecxz
mov
sub
enter
sahf
push
add
jl
xor
dec
repz
jae
int
mov
jl
movsb
cld
mov
icebp
shrb
xor
mov
adc
call
leave
jb
mov
movsb
lcall
inc
dec
adc
push
fidivs
or
repnz
mull
dec
fwait
into
inc
push
cmpsb
mov
pop
lods
pop
movsl
and
int
out
jge
xchg
es
xor
cs
pop
dec
lret
icebp
roll
sbb
pop
movsb
iret
mov
mov
sub
pop
std
jmp
aas
aam
out
cmpsl
and
fsubp
mov
mov
mov
outsb
mov
sbb
es
lret
and
inc
push
in
xchg
ja
inc
loop
push
addl
and
dec
sbb
fwait
dec
jo
ret
jae
aad
dec
and
cmp
out
in
cmpsb
fs
mov
ret
pop
sub
add
add
push
mov
lret
adc
lds
negl
mov
xor
aaa
xchg
mov
imull
xchg
gs
iret
loopne
cmp
push
cmp
das
pop
fucomi
lahf
mov
jmp
or
enter
mov
popa
sub
mov
xchg
popa
in
loop
xchg
pop
sub
mov
xor
test
flds
mov
mov
cld
bound
imul
mov
mul
into
xchg
sub
fs
push
sub
ja
and
icebp
adc
lods
mov
loope
test
js
imul
divl
pop
mov
push
sbb
xor
inc
xchg
es
cmp
cmpsb
shr
push
into
int
jmp
or
or
faddl
lcall
xchg
xchg
mov
xor
pop
and
push
shrl
mov
pop
xor
xor
daa
dec
addr16
add
std
out
push
rcl
dec
push
dec
push
test
pop
iret
fisubl
dec
out
xor
loopne
sbb
sub
mov
rcrl
mov
cmp
test
fldcw
mov
mov
in
jno
pop
fidivl
outsl
pop
aaa
lret
cmp
loop
in
pop
fidivl
popf
push
fdiv
mov
sub
jge
mov
mov
mov
cmpsl
mov
pop
or
lods
popf
mov
push
or
cmpsl
adc
wbinvd
int3
pop
sahf
daa
shrl
cmp
adc
sahf
out
dec
or
lock
addr16
mov
loopne
lock
dec
adc
pop
in
imul
sbb
mov
fisttps
xchg
loope
pop
mov
into
jle
mov
and
lock
loop
lds
mov
dec
pop
cmp
and
mov
lcall
pusha
xor
ss
dec
dec
mov
jecxz
pop
xchg
repnz
pop
push
insl
lret
push
jmp
lahf
pop
cmpsl
mov
and
push
cmpsb
js
stc
pop
inc
lods
mov
cwtl
data16
dec
add
loopne
xchg
dec
xor
sbb
sbb
mov
cwtl
call
xor
sbb
fscale
clc
inc
or
dec
ret
in
adc
sub
fs
jle
xchg
in
jns
and
and
jns
mov
xchg
mov
sub
lret
mov
das
roll
rcrl
xor
popf
ret
outsb
js
sub
and
mov
and
pcmpeqb
sub
pushf
aaa
or
inc
pop
push
mov
push
ja
xor
shrl
ss
mov
lcall
jb
hlt
cmp
test
je
dec
stos
sub
test
in
arpl
push
dec
jmp
test
jne
fcomp
mov
add
fisubl
fstpt
repnz
mov
movsl
xchg
push
xchg
pop
jle
cmp
iret
sub
movsl
dec
cmc
xchg
and
cmp
ficomps
sbb
inc
push
mov
mov
cmpsl
loopne
aas
into
pop
pop
xchg
fcmovne
mov
cwtl
imulb
test
addb
inc
fs
outsb
inc
mov
push
jne
push
movsl
shlb
sbb
out
or
lock
popf
fwait
sbb
cwtl
int3
subl
mov
outsb
sub
lods
lcall
lret
lret
pop
cmp
int3
sub
cmp
out
cltd
out
mov
push
or
arpl
call
les
ljmp
inc
gs
and
insl
add
dec
fstps
adc
cltd
mov
fiadds
or
adc
jne
cmp
lahf
mov
sbb
cmpsb
call
fsubrp
mov
imul
adc
or
dec
jae
fstl
and
jmp
jb
lock
xchg
shrl
pop
cwtl
add
sub
mov
xor
cmp
sbbl
out
and
std
push
xlat
push
arpl
insb
xor
cmp
ret
mov
outsb
fmuls
or
cwtl
xchg
mov
mov
repnz
lret
sahf
mov
jp
js
fs
xchg
sahf
fbstp
mov
fbstp
sti
pop
xorb
and
push
mov
movsb
cmpsl
xor
xor
in
pop
jnp
and
pop
push
clc
sti
dec
repz
loopne
jmp
clc
or
leave
mov
pop
sbb
or
test
dec
test
cmp
push
xor
in
test
dec
xchg
cli
mov
sbb
add
push
test
pushl
dec
push
outsl
out
push
adc
pop
mov
mov
pushf
adc
push
xlat
sbb
xlat
rorl
sbb
imul
sub
sbb
push
in
sahf
push
mov
push
or
stos
shll
into
rcrl
stc
jecxz
sti
movsl
pop
ret
mov
jbe
test
outsb
or
rcr
add
into
or
mov
rclb
gs
sti
aas
cltd
icebp
xor
push
add
sub
aad
cmpsb
pop
pop
fldl2t
aam
mov
jecxz
in
mov
adc
imul
idivb
dec
sub
je
mov
push
jnp
mov
ja
mov
rorb
and
cmpb
pop
lahf
mov
xor
and
jmp
andb
roll
aad
and
cmpsl
xor
outsl
rolb
iret
xchg
mov
loop
cmpsl
xor
cmp
clc
jl
lcall
fsubrs
push
je
pop
fcmovnbe
xor
sub
lea
xchg
sub
mov
push
mov
sbbb
pop
sbb
add
jne
lret
scas
mov
in
dec
pop
cmc
clc
outsb
pushf
rcr
pushf
push
repz
sbb
outsl
cmc
mov
movsb
out
add
fisttps
dec
mov
jl
xchg
add
mov
int
xchg
cli
and
ret
out
jno
divb
dec
push
dec
inc
sub
rcl
negb
int3
out
clc
xor
in
bound
repnz
jbe
sbb
push
cltd
stos
push
std
cwtl
inc
or
test
xchg
adc
jbe
sti
into
fs
sahf
mov
pop
xchg
dec
cmp
inc
pop
mov
std
in
lea
jl
mov
or
lcall
mov
sub
add
mov
ljmp
into
mov
jmp
push
mov
rorl
pop
jo
iret
push
cltd
push
and
jl
loop
push
dec
sbb
cld
repz
icebp
xlat
arpl
scas
movsb
adc
es
out
imul
lods
prefetchwt1
into
stc
sti
shl
loope
idivl
pop
bound
iret
mov
movl
test
jb
cmp
mov
jle
push
ja
sbb
fucomp
repz
xchg
xor
clc
pop
dec
mov
xchg
push
in
pop
dec
add
cmp
or
pop
push
push
cmp
xchg
leave
icebp
adc
test
sahf
xchg
icebp
add
outsb
xor
loopne
ret
in
in
xchg
sbb
xchg
movsb
xor
scas
mov
fiaddl
mov
jbe
and
jo
push
mov
xchg
outsb
loope
shlb
ds
mov
mov
les
mov
cwtl
pop
or
push
pop
mov
scas
int
add
loopne
lret
and
test
ds
mov
in
jl
out
or
fistps
pop
cmp
mov
aam
add
sbb
push
push
xchg
fdivl
adc
and
xor
mov
out
data16
testb
cmp
sahf
and
rorl
mov
mov
dec
shlb
xorl
out
adc
inc
push
mov
pop
in
adc
mov
clc
insb
pusha
lock
jle
sub
adc
sbb
xor
nop
push
bound
sbbb
mov
add
xor
loop
sub
cmp
pop
push
cmp
pushf
mov
mov
xor
sub
jo
test
bound
inc
int3
imul
icebp
in
mov
jl
dec
subl
inc
fbld
aad
inc
sub
xchg
aaa
cmp
imul
pop
fldt
lea
movsl
sahf
mov
imul
cmp
inc
aad
mov
or
or
and
fbstp
sub
in
inc
jl
outsb
xchg
xor
mov
pop
ret
inc
cmp
sbbl
stc
push
jb
or
or
rcrb
stos
jae
lcall
fsqrt
call
decl
mov
xchg
mov
add
mov
int3
jle
sub
inc
sub
inc
jne
and
jg
aaa
sbb
xchg
jno
xor
sub
and
mov
stos
or
jns
adc
outsb
ljmp
adc
incb
inc
imul
xchg
hlt
xorl
lods
daa
xchg
jmp
jmp
aas
pop
xchg
lcall
xchg
add
sbb
aam
sbb
aad
sbb
add
aas
cmp
add
ss
push
sar
and
mov
push
or
xor
iret
clc
xor
inc
lock
push
xor
nop
add
or
and
xchg
mov
pushf
loope
test
cltd
pmulhuw
notl
sub
mov
loopne
shr
inc
test
cli
cwtl
dec
pop
mov
in
leave
mov
xchg
fsubs
add
adc
or
cmp
or
movsb
mov
imul
aam
out
sub
stos
ret
adc
cmpb
dec
inc
adc
add
leave
mov
roll
mov
fwait
add
cwtl
mov
pop
int3
pushf
mov
mov
out
mov
ljmp
cli
pop
xlat
fstl
fwait
popf
jge
push
mov
xorb
cmp
fstps
and
jns
insl
fcoms
pop
mov
negb
adc
movsl
xchg
test
xchg
dec
inc
into
sbb
dec
repnz
and
adc
ja
aas
ljmp
data16
inc
ljmp
sub
clc
ficoml
insb
xchg
in
push
pop
adc
imul
and
das
cli
imul
jbe
mov
jns
jg
jle
inc
xchg
push
je
pop
pop
mov
xor
mov
dec
dec
jb
pop
mov
lds
test
cmp
in
or
testl
es
mov
out
adc
fsubp
and
sbb
hlt
out
and
sbbl
int
inc
cld
xlat
lret
xchg
cmp
push
int
bound
jae
imul
pop
mov
add
popl
cs
push
subl
inc
icebp
scas
mov
daa
jg
pusha
xchg
sbbl
mov
push
push
pop
lock
popf
or
mov
sub
cmpsb
scas
mov
rcll
and
inc
jg
xchg
test
add
lret
sti
test
jnp
jne
inc
jbe
out
or
cs
nop
arpl
out
add
cmp
out
mov
mov
mov
mov
mov
and
jge
lods
sub
or
enter
xchg
negb
push
int
xor
mov
adc
jp
add
cmpsb
scas
dec
leave
fldenv
sbb
cmpsb
adc
pop
adc
cmp
dec
add
lret
lea
pop
xchg
lahf
repz
adc
into
fwait
pop
add
push
aad
jne
cs
and
push
jmp
in
sbb
push
jb
sub
leave
pop
sbbb
cmp
jecxz
xor
dec
test
mov
jecxz
jno
or
inc
pop
fwait
mov
push
xchg
andnps
adc
inc
pusha
cli
mov
std
jg
xchg
es
scas
inc
jl
add
mov
or
inc
dec
cmp
cmp
movl
test
xchg
mov
int3
cmp
inc
ds
jg
mov
rcl
jmp
dec
jge
inc
push
cld
push
push
les
xchg
aas
push
aad
xchg
mov
push
jl
mov
add
ljmp
les
insb
dec
push
jge
enter
outsl
sbb
dec
sub
leave
pop
call
inc
lret
jne,pn
xchg
pop
push
popa
sbb
ljmp
xchg
pop
pop
gs
lcall
jne
inc
or
mov
xchg
xor
xchg
adc
jp
mov
pushf
dec
add
aad
mov
les
lcall
addr16
pushf
sub
xchg
jle
or
mov
hlt
fsub
xor
jne
out
push
movsl
adc
xchg
dec
rcll
mov
mov
dec
andb
pop
pop
push
inc
outsl
je
jge
insl
fimuls
adc
push
jb
fdivl
xlat
mov
sbb
mov
jl
in
shlb
inc
movsb
inc
xchg
ss
das
adc
lahf
outsb
xchg
pop
fwait
xorl
push
inc
lock
and
shll
hlt
or
pop
mov
rcll
fwait
cmp
add
hlt
or
dec
lcall
mov
xchg
test
sub
stos
pop
divb
pop
dec
adc
daa
push
xchg
mov
cmpsb
inc
push
aaa
test
and
bound
mov
mov
in
push
mov
mov
push
mov
fwait
xchg
insl
mov
sahf
cli
aaa
mov
icebp
aas
jecxz
fiaddl
stc
push
lret
out
in
popf
and
fwait
sbb
out
jl
pop
inc
push
jo
enter
pop
fst
mov
imul
xor
cwtl
mov
gs
mov
pushf
lds
movl
xchg
loope
push
pop
jge
xchg
outsl
sub
ficompl
xorl
adc
shlb
add
lcall
in
push
daa
sbb
imul
mov
push
xor
insl
loope
or
mov
inc
mov
cmova
mov
insb
xor
cmp
xor
shrl
pop
test
dec
sub
fstpt
fs
mov
orb
imul
mov
sahf
pmuludq
and
lea
clc
movsb
adc
cmp
jbe
mov
andl
adc
fidivl
dec
xchg
sub
cli
mov
call
repz
fmuls
frndint
lcall
fld
je
idivb
cld
mov
test
or
pop
repnz
cmp
push
sub
das
inc
cmp
nop
addb
cmpsl
ret
sbb
dec
push
inc
sbb
ret
int3
xor
pop
movsl
stc
gs
lret
mov
fs
pop
cmpsb
jecxz
xor
int3
mov
cld
shl
pop
xchg
push
push
cmpsb
jb
adcl
cmc
test
sbbb
fildll
mov
les
add
std
mov
addr16
daa
lahf
xor
leave
ljmp
mov
adc
add
movsl
fmuls
cmpsl
ss
lret
pop
pop
mov
repz
cmp
push
sbb
ret
cltd
sti
pop
in
push
xor
pop
js
aas
stos
cmp
mov
and
test
cmp
xchg
fidivrs
jo
adc
lcall
pusha
cmc
push
rolb
fdivrs
jle
inc
pop
adc
fisubrs
sub
lcall
bound
xor
cmp
jnp
out
inc
lcall
in
mov
jge
and
mov
ret
mov
lret
dec
pop
jmp
imul
scas
dec
dec
push
xchg
xchg
push
arpl
enter
jl
popa
int
daa
add
mov
andb
jne
mov
pushf
hlt
clc
mov
mov
sub
insb
push
jl
jecxz
add
push
jno
fistpl
sbb
or
push
leave
ss
pop
push
pop
sub
cs
pop
push
aam
sub
int3
adc
std
jge
rcll
inc
mov
mov
cmp
sub
ja
std
push
cmpsb
and
fsubrs
xorl
pop
lret
push
dec
jmp
ret
mov
jbe
mov
rcll
lea
mov
out
cmpsb
in
inc
ja
mov
shll
clc
push
or
ja
stos
xor
aas
dec
fdivl
push
mov
nop
sub
and
std
movsb
cli
jb
pop
imul
push
cmp
sub
and
jb
daa
inc
testb
pop
mov
add
push
add
adc
cwtl
sbb
pop
mov
loop
add
jmp
mov
dec
daa
test
add
push
adc
andb
frstor
pusha
aam
les
xor
outsl
lock
push
cmc
sub
push
lds
and
gs
call
cmp
pop
lcall
das
jge
add
insb
xor
add
push
mov
mulb
xchg
sbb
sbb
int
arpl
jnp
fsub
pop
or
fidivs
mov
mov
mov
adc
repz
mov
stos
outsb
cmpsl
pop
ljmp
cld
fcoml
mov
loope
std
xchg
das
ss
xor
fcomps
ret
mov
fwait
push
imulb
xor
sub
sub
mov
xchg
xor
xchg
fwait
cmpsl
add
mov
aad
pushf
faddl
jbe
xlat
xor
adc
pushf
add
loop
les
xlat
pop
and
xchg
mov
mov
push
movsl
fs
lret
add
xor
mov
lret
push
xor
pop
push
xlat
loope
cmp
push
in
dec
push
fstl
or
imul
loop
push
mov
and
jmp
test
push
in
jns
lods
lods
sbb
cmp
testl
jecxz
addr16
fwait
xor
fists
movb
pop
mov
div
push
adc
imul
cmp
stc
add
insb
sahf
mov
mov
clc
sub
jbe
inc
sub
sarb
cmpsb
xchg
xchg
xchg
outsb
jl
jo
ds
mov
sbb
sub
adc
mov
jp
in
add
xchg
dec
xor
mov
ret
inc
cwtl
mov
mull
jmp
lret
shrb
cmpsb
and
data16
mov
stos
push
jecxz
imul
or
lret
stos
adc
in
repnz
ds
dec
clc
dec
inc
insl
dec
es
rorb
inc
dec
outsb
xor
mov
test
add
arpl
cmp
mov
les
sbb
call
jecxz
fisubs
pusha
mov
dec
xor
mov
mov
inc
jmp
int3
movsb
int
xchg
cmp
or
jne
iret
inc
xor
negl
ss
inc
add
and
sub
adc
dec
enter
sbb
fistpl
mov
stos
test
pop
pop
aad
pop
test
sti
jo
push
cmp
sbb
shlb
mov
push
cmpsl
sub
dec
loope
mov
ja
lahf
test
pop
cmp
fstpl
sbb
outsl
push
cmovno
sub
cmpsb
out
dec
dec
mov
icebp
inc
sarl
dec
mov
arpl
adc
inc
lahf
idivl
mov
shlb
out
and
mov
ds
sub
test
mov
push
mov
dec
cmp
cs
or
mov
repnz
pop
push
lods
lret
fsts
mov
dec
pop
pop
lahf
cli
and
dec
cmp
lods
subb
xor
push
add
bound
jge
dec
rcr
sti
cmp
jns
mov
shrd
xor
add
mov
nop
into
mov
sbb
jnp
mov
cmc
pop
fistpll
nop
scas
out
repnz
roll
sbb
or
sub
sbb
jl
xchg
in
leave
sarb
sub
mov
or
popf
or
xchg
inc
cmp
mov
push
cmp
jbe
loopne
jmp
push
out
pushl
rolb
adc
fstps
out
push
push
sub
int3
fdivr
adc
addr16
mov
repnz
pusha
repz
cld
movsl
sub
mov
stos
pop
imul
push
icebp
xor
insl
mov
jne
mov
repnz
xor
sbb
gs
dec
push
xchg
out
sbb
dec
out
test
stos
adc
fst
and
adc
cmc
mov
fcompl
enter
cmp
pop
add
xor
mov
dec
adc
mov
pop
call
inc
sub
shlb
push
in
movsl
dec
mov
lods
addl
xlat
add
fsubs
add
fwait
cli
pop
jp
jne
stos
xchg
push
in
mov
lods
jne
and
mov
iret
inc
jmp
bound
sbb
fmul
add
xchg
mov
push
movsb
fisubrl
add
and
into
loope
cmp
stos
dec
loope
ljmp
fcomps
insb
aaa
inc
cmp
or
xchg
or
add
jnp
imulb
aad
add
xchg
out
fs
cli
nop
mov
and
dec
je
mov
mov
jle
out
and
pushf
outsl
aam
adc
adc
dec
dec
xchg
pop
movsl
int3
pop
movsb
fstl
call
cmc
sub
imul
sub
movl
push
add
cwtl
in
fxch
sub
stos
shrl
xchg
mov
adc
pop
aaa
push
pop
jl
xor
inc
xor
pop
bound
xorb
xor
lock
lods
adc
lds
fcoms
pushf
por
imul
cld
adc
out
imul
test
or
out
push
and
aas
addr16
push
push
xor
inc
sub
mov
xchg
addr16
setl
add
fisubl
xchg
mov
rolb
add
sub
mov
and
lret
arpl
shrl
mov
icebp
pusha
mov
stc
jae
inc
daa
out
pushfw
lods
and
enter
inc
hlt
into
std
out
pop
lcall
aas
or
cmc
clc
mov
movsl
jmp
je
mov
jns
ja
in
in
xchg
les
ss
das
jne
dec
inc
out
setae
loopne
xchg
jg
icebp
ja
push
loopne
addb
jle
daa
push
mov
notl
jae
cmp
icebp
sub
imul
xor
push
insl
insb
stc
add
inc
adc
pusha
lahf
test
and
aad
mov
push
and
mov
data16
ss
stos
push
es
and
or
das
or
bound
sub
inc
aad
dec
mov
mov
mov
mov
clc
pusha
out
mov
and
popa
scas
xor
arpl
push
addr16
xor
outsb
xchg
lret
push
cmpsb
or
cmp
rolb
imul
test
push
lret
daa
cmpsb
xchg
xchg
test
cmp
cmp
sbb
divl
pusha
aam
rclb
push
cwtl
xor
or
stos
xchg
jle
es
in
and
imull
jbe
dec
add
pushf
cmpsb
addr16
mov
in
xchg
jg
ja
jle
mov
aam
push
pop
mov
add
cmpsl
jp
fldl
fsubs
leave
sbb
xor
jae
icebp
test
inc
les
mov
inc
adc
fwait
adc
jp
or
icebp
rcll
push
arpl
and
lea
mov
popa
and
cld
pop
fcmovu
clc
into
push
pop
xorl
inc
aad
inc
test
mov
out
jne
aaa
push
cs
test
push
lret
negb
arpl
add
decb
fs
clc
mov
lcall
push
jns
xchg
shll
mov
loop
sub
jae
adc
lea
cmpsb
iret
int3
xchg
leave
scas
inc
sar
mov
mov
cmp
adc
fwait
shl
pop
inc
and
lods
mov
xor
dec
stos
sub
orb
mov
movsb
out
pushl
jae,pt
arpl
insb
fbstp
addr16
mov
mov
pop
jg
add
jne
add
out
in
pop
xchg
lret
xchg
iret
aaa
push
jb
add
insb
dec
leave
jge
jae
dec
jne
repnz
sub
or
pop
subl
je
xchg
sti
jg
mov
jge
mov
inc
push
pop
push
lea
xchg
enter
and
pop
push
jle
enter
arpl
mov
mov
int3
xchg
sti
xchg
jne
adc
loopne
cli
jecxz
aad
cmp
icebp
rclb
hlt
and
fiadds
cld
mov
lds
fisubl
xchg
and
pop
pusha
icebp
setne
xorb
push
outsb
ja
imul
sub
insl
lahf
inc
outsb
dec
adc
jmp
std
mov
sub
bound
add
mov
jmp
ret
inc
or
xchg
sar
add
iret
inc
sbb
fucomip
xchg
dec
stc
int
icebp
leave
negl
mov
sbb
adc
sub
stc
dec
adc
ret
adc
fmul
dec
popl
repz
mov
mull
pop
inc
sbb
pop
cmpsl
fsubp
stos
cmp
mov
sub
inc
xor
inc
inc
jp
sub
nop
sub
push
mov
shlb
out
xor
lret
inc
push
icebp
stos
insl
pop
sub
repz
stc
ss
or
jecxz
dec
cmc
mov
add
inc
ret
inc
jo
repnz
es
stos
ret
lcall
scas
mov
cld
jp
jge
mov
cmp
scas
scas
inc
insl
xor
pop
push
mov
ss
sub
inc
sbb
push
push
mov
jb
mov
test
pop
in
fstpl
xor
sub
push
inc
mov
or
outsl
xlat
stos
cmpsb
sub
sti
sub
arpl
jno
aam
inc
insb
and
mov
subb
mov
jb
inc
dec
imul
popf
xlat
and
mov
and
jecxz
cmp
xchg
xor
fstpl
pushf
loope
cmp
xchg
or
xchg
lods
test
and
shll
push
mov
xchg
imul
test
add
rcrb
loope
aas
andl
fisubrs
lcall
adc
aam
push
leave
sub
push
push
ss
pushf
pop
and
cli
call
imul
xchg
int3
std
ret
push
jb
mov
in
sarl
sbb
mov
mov
sub
push
leave
out
dec
fisubs
add
push
jo
js
push
jp
mov
jne
movsb
inc
and
test
mov
repnz
mulb
movsl
cmp
test
sbb
cli
out
test
jp
push
inc
push
sub
ss
add
adc
inc
push
lret
mov
fwait
ret
ja
jecxz
mov
pop
push
xchg
lret
lds
mov
popa
pop
out
mov
jecxz
test
cltd
pop
xor
inc
inc
push
fidivrl
shrl
sti
lahf
loop
leave
mov
ja
mov
out
xchg
fsubs
inc
shlb
int3
je
aam
inc
sub
aas
adc
cmc
pop
sub
jecxz
rcll
leave
and
jecxz
les
movsl
lock
pop
and
scas
sbb
arpl
mov
add
mov
lret
fcompl
dec
add
inc
mov
clc
out
push
lds
data16
ret
xchg
fimuls
inc
test
sbbb
ret
outsb
adc
loopne
jl
and
ret
imul
sub
cwtl
xchg
cmp
inc
inc
cmc
or
push
push
je
mov
mov
and
dec
rorl
lea
imul
cmp
xlat
or
sbb
mov
mov
add
adc
and
outsb
push
push
mov
orb
cmpsl
faddl
push
imull
test
aad
repnz
add
lods
adc
mov
add
lret
jns
enter
lcall
and
aaa
das
mov
fwait
icebp
lds
adc
fs
xor
push
pusha
and
mov
adc
rcl
add
adc
sbb
inc
mov
push
dec
jg
ds
cmp
mov
mov
in
mov
shrl
adc
clc
ror
cld
mov
or
push
stos
or
scas
cwtl
add
mov
push
in
xor
pop
mov
mov
sbb
loopne
aaa
push
mov
push
insb
mov
stos
mov
mov
test
movsl
mov
pop
add
cld
jne
and
js
jge
mov
ljmp
xchg
xchg
repnz
mov
scas
loopne
inc
fistpl
push
xlat
cwtl
cmp
aad
insb
daa
ret
and
push
testl
jns
jae
adc
xor
js
push
testb
cmp
xchg
mov
test
and
into
push
mov
push
dec
imul
faddp
dec
mov
sub
in
sahf
mov
jo
push
mov
inc
mov
aaa
jnp
jg
sub
pop
cmpsl
out
aad
movl
fistpl
pop
hlt
push
lock
int
sarb
adc
push
push
xor
push
jo
jecxz
das
ss
mov
iret
gs
int3
ja
loop
add
ja
fwait
cmp
mov
dec
dec
call
call
and
pop
fstpt
xor
adc
sbb
movsb
in
push
pop
mov
mov
jo
sti
ret
aad
cmp
dec
sbb
stos
or
icebp
test
jne
fcomp
mov
fistps
mov
inc
push
push
xor
cld
add
bnd
std
mov
ret
ja
enter
fisubrl
jne
pop
mov
jp
movsb
sub
sub
sub
xchg
inc
push
addr16
iret
mov
lahf
cmp
shrb
arpl
jae
bound
sahf
lahf
out
cmc
sbb
xlat
jl
cmp
lret
or
int
bound
mov
out
dec
call
rcrb
js
cld
xchg
pop
sbb
ret
sub
popa
push
push
cld
lods
fdivs
inc
sub
rcr
mov
mov
stc
sahf
jmp
or
pop
incb
lret
out
and
gs
popa
test
daa
mov
inc
dec
aaa
lret
ficompl
lock
or
mov
shll
icebp
mov
bound
mov
lea
adc
sarb
lea
adc
cmp
cmp
fwait
inc
mov
movsl
and
xchg
in
cmpsl
or
cltd
lods
lods
imul
aas
sub
push
jne
inc
jge
adc
push
adc
fsubrs
adcl
and
out
xor
mov
dec
xchg
loopne
test
sahf
xor
das
ja
jo
dec
pop
sub
add
push
test
lock
jne
repnz
out
cmpsb
popf
out
popf
cli
inc
adc
xor
jae
jg
aaa
jmp
psrad
stos
or
cmpsb
xor
test
mov
movsl
or
inc
negb
insb
cmp
movsb
arpl
push
cwtl
xor
jne
inc
jo
ja
loop
imul
fiaddl
adc
push
mov
stos
mov
psrld
push
das
add
lea
inc
xlat
cmp
in
sbb
arpl
inc
mov
cld
pop
dec
adc
inc
mov
push
pop
ss
cmp
iret
lcall
jb
pop
out
sbbl
or
ror
in
cwtl
lret
adc
das
sbb
dec
add
jae
mov
add
inc
jae
out
mov
cmpsl
imul
roll
data16
int
xchg
or
sub
add
iret
cmpsl
and
fsubrs
outsl
add
pop
inc
jno
mov
leave
inc
push
adc
sbb
pop
dec
enter
sbb
push
or
or
xchg
jecxz
mov
xlat
sub
out
fimuls
cld
lock
test
jne
int3
es
bound
pop
outsl
lock
fstl
cmc
incb
pop
mov
push
leave
imul
sbb
mov
xor
pop
cmp
hlt
test
push
std
mov
aaa
lahf
vshufps
mov
push
stos
xchg
pop
outsl
mov
mov
mov
xchg
cmc
push
outsb
daa
add
sub
rorb
insb
jl
in
scas
out
aad
pop
mov
outsb
mov
in
push
push
jmp
dec
pop
fwait
mov
xchg
xchg
ds
rorl
pop
cmp
std
or
outsl
mov
cmp
in
mov
movsl
mov
addr16
js
cld
hlt
sti
fnstcw
cmc
insl
push
jp
xor
mov
out
mov
pop
pop
aad
pop
dec
hlt
addr16
pop
push
enter
push
add
fs
mov
xor
jmp
adc
or
jo,pt
ds
mov
lret
pusha
xor
mov
std
scas
jmp
lods
xor
es
ret
xchg
dec
mov
pop
in
jl
add
and
pop
adc
cmpsb
out
add
and
adc
out
cld
loopne
push
rcr
push
cwtl
jp
rclb
jno
and
push
mov
mov
jg
adc
inc
push
test
pop
scas
les
cmpsl
mov
int
lret
das
pop
ljmp
inc
rcrl
icebp
pusha
jmp
push
ljmp
sub
mov
add
jnp
loope
cld
insl
xchg
dec
ror
es
stos
cld
je
sub
js
sahf
cmovge
jne
lret
push
mov
inc
xchg
cwtl
and
push
adc
mov
rcll
pop
aam
lock
ljmp
addr16
pop
jo
mov
clc
sahf
mov
les
mov
ficoms
das
lcall
pop
aas
aam
inc
inc
adc
mov
sbb
call
popf
ret
ror
xchg
mov
pop
cmpsl
ficoml
pop
and
jl
insb
das
fs
fisttpl
ret
push
shrb
adc
sub
adc
and
pop
jo
je
cmp
xor
push
nop
scas
popa
xor
das
adc
xor
das
loope
je
inc
adcl
in
add
mov
pop
aad
sbb
push
sub
dec
jl
test
push
aad
or
out
push
jo
jmp
mov
jg
lds
dec
push
jle
cmpsl
les
push
dec
mov
pushf
push
mov
popa
stos
insb
pop
int3
enter
mov
ret
jae
cmpsb
popf
lods
jmp
cmp
push
repnz
ds
dec
cmp
leave
fmuls
xor
insb
dec
xchg
push
xor
jns
inc
sub
mov
and
adc
mov
in
pushf
jae
int3
hlt
mov
xor
add
adc
lds
sub
inc
outsl
mov
jp
mov
negl
jns
scas
cld
add
loope
insl
inc
jns
mov
repnz
scas
cwtl
adc
add
and
lods
mov
ds
pop
arpl
cmc
jle
add
push
xchg
jnp
add
mov
push
mov
loopne
xchg
push
test
je
xchg
shrl
mul
xchg
movb
inc
mov
add
adc
mov
ret
out
mov
ds
ja
push
mov
shr
sub
nop
jae
maskmovq
notl
inc
das
xlat
sahf
inc
jne
xchg
adc
cmp
inc
sbb
call
adc
or
int3
cmp
sbb
push
fs
popf
imul
mov
cmc
cmpsl
lods
or
sbb
and
add
and
lahf
push
sub
mov
xor
sbb
jg
stos
imul
ja
andb
fsubrp
es
imul
inc
dec
rolb
xchg
jl
jecxz
and
out
test
jno
test
rorl
adc
rcrb
out
jbe
mov
cmp
cli
lret
scas
inc
enter
inc
les
fsubrs
movsb
mov
fwait
adc
pop
push
pop
ljmp
fsubrs
sub
push
imul
ss
and
mov
adc
mov
sub
and
movsb
test
sub
addr16
sbb
cmpsl
push
aad
mov
or
out
bnd
cwtl
pop
mov
popl
pop
test
ss
pop
sbb
test
enter
pop
push
xchg
inc
cmpsl
mov
push
imul
or
in
cli
in
sub
and
out
jmp
push
pop
add
xor
out
mov
add
jae
push
scas
jl
xchg
fdivs
cltd
clc
or
sbb
aam
mov
loop
jns
int
xchg
jp
push
jo
dec
mov
sahf
insb
add
and
mov
xorl
scas
jo
pop
ds
clc
repz
ja
inc
dec
lret
in
push
jne
mov
inc
pop
push
adc
dec
sub
mov
popf
push
loope
adc
push
ficoml
test
xchg
sub
or
icebp
sbb
mov
andl
jbe
test
fwait
aam
cmp
mov
bound
inc
and
and
jmp
mov
mov
jae
les
inc
inc
sbb
fsubp
xchg
sti
je
and
mov
mov
je
adc
enter
inc
pop
stos
sub
mov
and
lods
shlb
movsl
add
stc
jae
jns
insl
xchg
and
push
stos
push
movsl
out
mov
dec
mov
xor
insb
es
xor
in
mov
push
adc
push
pop
gs
and
sbb
js
mov
push
inc
push
lret
imul
je
inc
jns
mov
pop
lock
pop
pop
adc
in
stos
inc
push
addr16
out
negl
sub
add
jne
into
shll
push
out
clc
sub
sbb
push
inc
imul
mov
mov
movsl
push
repz
cwtl
xchg
jno
sbb
inc
popf
hlt
or
cs
mov
sbb
push
lea
mov
sub
add
cmp
fdivl
lea
mov
int
or
push
test
insb
jb
pop
inc
out
fildll
adc
outsl
jmp
shrl
sarb
xor
jecxz
inc
sar
cli
shll
sub
mov
dec
pusha
push
xchg
inc
push
faddp
in
cs
inc
adc
int3
dec
fs
mov
cmpsb
add
enter
hlt
xor
addr16
lahf
leave
jecxz
dec
pop
movsb
popa
push
jo
jo
stc
cmp
add
pop
adc
cwtl
or
push
dec
pop
cmp
mov
push
push
icebp
push
add
pushf
fcomp
jno
cltd
jo
push
shll
aad
add
lret
jno
push
pop
xor
stos
out
mov
stos
sti
call
not
and
fisttpl
add
mov
sub
mov
mov
and
jp
xor
lods
or
fs
push
shl
and
or
in
imul
jbe
in
mov
sbb
mov
into
scas
in
loopne
ds
or
out
or
inc
jae
sub
outsl
aaa
or
mov
int3
push
lds
fdivrl
mov
test
popl
mov
mov
nop
scas
cs
mov
cmp
clc
jns
int3
mov
and
outsl
push
mov
dec
lret
push
fwait
rcl
fisttps
mov
fisttpl
es
clc
stos
jae
sbb
movsl
sub
jl
jns
arpl
xchg
std
mov
push
dec
iret
pusha
push
push
cli
bswap
shrb
lret
mov
lock
insl
jp
in
lds
negl
push
add
nop
insb
dec
sarl
pushf
fcmovu
add
xchg
sarl
incl
dec
adc
pop
jmp
rolb
cwtl
aas
jg
jg
inc
cmp
ret
in
pop
jns
daa
nop
jnp,pn
mov
cltd
addb
cmp
rorb
test
je
xchg
leave
inc
enter
jp
push
imul
push
movsl
push
add
leave
fwait
xchg
adc
test
je
xchg
and
js
adc
cltd
js
cmpsb
fsubs
sub
sub
sub
sbb
stos
fisubrs
mov
mov
cmp
fistl
std
mov
sbb
sub
scas
mov
inc
cwtl
aam
cmp
loopne
ljmp
dec
iret
xor
ja
add
pop
push
mov
add
lock
adc
fsub
mov
mov
inc
dec
mov
mov
inc
jns
dec
popa
in
mov
repnz
push
nop
mov
ljmp
insb
int3
push
xchg
leave
fildl
loopne
cmc
out
add
aas
add
or
into
pop
jge
lcall
push
sti
inc
pushf
into
ficoml
fsubs
mov
sub
fsubrp
scas
push
xchg
rorl
jae
xor
insl
mov
sbb
cmpsl
fcmovu
sbb
or
sub
ljmp
roll
fcom
int3
sbb
cs
mov
xchg
int3
out
cmp
sub
test
outsl
jo
mov
or
loope
pop
gs
les
cltd
cmp
push
insl
fwait
test
adc
inc
xor
outsb
mov
rorb
subl
sbb
rol
sub
mov
aas
pop
mov
jns
fdivl
pushf
out
jne
pusha
mov
add
lods
or
adc
xor
rcrl
repz
push
dec
sub
mov
sbb
loopne
nop
add
les
mov
cmc
push
loope
mov
movsl
mov
mov
jle
dec
push
cmp
push
outsl
or
sbb
es
xor
lds
push
mov
jle
xchg
mov
cmc
incl
mov
int3
xchg
jg
cmp
push
out
xchg
xor
lcall
sub
fsubr
call
nop
aam
mov
adc
jns
sbb
sbbb
jne
loope
or
mov
dec
mov
cmc
shll
fcmovu
inc
pop
dec
cmp
test
xchg
cmp
dec
or
inc
jns
lcall
int3
pavgb
cmpsl
out
pop
cmp
jge
stos
enter
jo
mov
sub
lods
fbld
cmpsl
hlt
fisubl
sub
mov
insl
out
pushf
mov
mov
cli
aad
xchg
mov
mov
pop
sub
cld
mov
mov
insl
xchg
int
cmc
pop
mov
xchg
stc
aam
xlat
pop
mov
mov
das
lret
dec
push
push
xor
inc
push
fdiv
ds
and
lahf
lods
dec
inc
pop
and
ret
sbb
aaa
mov
xor
add
xor
xor
jbe
ljmp
scas
and
jl
fnsave
cmp
bound
movsl
adc
xchg
push
pop
std
lods
hlt
jecxz
enter
mov
inc
jnp
int
sub
mov
dec
push
neg
icebp
xlat
pushf
mov
or
fisttpl
addr16
call
cmp
int
xor
lods
daa
scas
out
dec
push
inc
ja
cmpsb
ror
adc
xchg
ja
aam
aas
nop
mov
clc
mov
sub
lret
xchg
xor
or
and
jmp
int3
icebp
cmp
push
in
cmp
push
mov
fsts
adc
scas
or
pop
je
add
push
in
dec
xorl
enter
dec
mov
iret
mov
adc
rcl
mov
adc
jl
mov
adc
sbb
pusha
pop
cmpsl
mov
out
xchg
daa
pop
mov
pop
test
bound
ljmp
outsl
push
sbb
dec
popf
ds
in
dec
mov
stc
mov
jbe
clc
dec
push
imul
or
loop
sub
pop
out
jne
mov
rcrl
cmp
stos
mov
mov
adc
iret
inc
test
fs
xchg
iret
and
mov
fcos
push
add
fcomp
int3
sub
sbb
rorl
ret
jno
jnp
insl
test
aad
push
jmp
loope
pop
inc
and
sahf
xor
xchg
in
mov
cmp
lret
xor
bound
xchg
or
mov
xchg
mov
cld
cmp
in
lret
jb
mov
js
push
enter
cmp
loopne
push
mov
out
lret
lahf
frstor
push
mov
data16
sub
dec
xor
cld
out
or
bound
and
pop
sub
cmpsl
loope
mov
pusha
enter
iret
add
xchg
icebp
dec
or
xchg
pusha
mov
mov
dec
inc
cmp
mov
and
out
stos
scas
xchg
sub
lret
ds
into
pop
jbe
adc
mov
loopne
pop
add
add
std
pop
jo
mov
push
aas
or
es
ret
arpl
repz
mov
dec
movsb
jo
cmp
gs
test
pop
push
and
pop
xchg
sbb
iret
ja
imul
dec
fstl
test
mov
dec
cld
push
iret
addb
cs
or
inc
ret
add
mov
inc
pop
aad
mov
test
pushf
xcrypt-ofb
cmpsl
test
sbb
imul
not
xor
push
fildll
das
mov
cltd
and
xor
push
xchg
cmp
push
dec
adc
int
or
aad
inc
insl
push
addr16
enter
es
add
imul
out
icebp
test
dec
cmp
into
pop
dec
pop
cmpsl
mov
aad
and
popa
xchg
inc
in
stc
gs
mov
pop
cmpsl
inc
inc
xchg
add
std
test
sbb
and
das
dec
pop
sub
mov
into
sbb
jle
icebp
jg
xor
sub
int3
sahf
clc
insb
lret
das
mov
push
or
fwait
sub
jecxz
call
in
sub
repz
cwtl
add
jae
aad
push
jmp
outsb
popf
adc
pop
fidivs
out
adcb
xchg
leave
mov
mov
test
sti
jbe
adc
pop
cld
jnp
xor
pop
pop
sahf
notb
push
in
test
arpl
fwait
inc
pop
rorl
xchg
add
mov
push
repz
imul
pop
mov
dec
in
test
jecxz
sti
add
adc
icebp
mov
in
filds
arpl
jl
imul
pop
icebp
sub
lods
jbe
fildl
pushf
in
repnz
add
push
insb
push
scas
mov
jo
xchg
shl
out
inc
push
jge
cmp
jge
xlat
nop
mov
and
rcr
push
in
cmpsl
insb
cmp
in
jo
ja
push
pop
stos
fisubrl
outsl
lock
decl
cmp
jne
je
clc
iret
das
rol
popa
rclb
scas
or
jge
cltd
push
cmpb
mov
lret
pop
lods
mov
xor
scas
pop
cmp
cli
jae
cmc
xor
fcmovb
insl
lahf
notb
arpl
leave
inc
jl
cmc
jbe
repnz
pop
js
pop
or
xor
or
dec
loopne
test
cltd
shll
dec
nop
data16
mov
rcrb
or
aam
stos
mov
push
jb
cli
adc
xchg
add
fists
sub
or
add
and
inc
in
and
sub
dec
loopne
pop
xchg
nop
and
sub
inc
aad
popa
mov
sbb
and
sbb
xchg
sahf
adc
lldt
or
daa
push
negl
jl
mov
mov
scas
fsubrl
repz
movsl
fists
xchg
scas
sti
mov
icebp
sbb
xchg
cmp
enter
into
sbb
dec
test
pop
lock
mov
sbb
lret
shrb
pop
mov
push
pushl
or
pop
cmp
out
aad
add
stc
das
pop
fwait
adc
jge
xchg
sub
cmp
pushf
movsb
loop
hlt
faddl
jecxz
gs
fsubs
xchg
adcl
jns
and
mov
sub
jle
ds
out
ds
fbstp
adc
dec
pop
or
mov
rorl
loop
data16
or
mov
xlat
shll
enter
fisttpll
cmpsl
aad
mov
mov
sub
sub
cld
xor
xlat
jle
jecxz
xor
adc
pop
scas
notl
bnd
jl
jmp
inc
xchg
and
xchg
fwait
lret
leave
pop
or
out
loop
push
inc
dec
lods
or
es
rolb
movsb
or
sub
sbb
movsb
xchg
sbb
add
push
pop
movsw
mov
push
add
mov
es
movsl
stc
mov
mov
mov
cwtl
js
cmpsl
mov
enter
inc
scas
mov
repnz
outsl
pop
xor
cltd
arpl
int
pop
cmp
xchg
std
mov
sbb
mov
sub
jne
xchg
pop
pusha
mov
pop
xchg
inc
adc
and
inc
mov
imul
in
xchg
outsb
jmp
addr16
sub
inc
or
test
mov
mov
jbe
daa
outsl
movsb
mov
lcall
icebp
iret
outsl
cmp
fwait
inc
dec
jmp
scas
or
orb
cmp
mov
mov
pop
cmp
sbb
push
cmc
xchg
xchg
int
xchg
das
lcall
sbb
out
mov
mov
scas
sbb
ljmp
jnp
pop
xlat
sub
cwtl
fstpt
inc
push
daa
sbb
xchg
iret
add
push
mov
pushf
cmp
retw
jecxz
loopne
push
rorb
mov
mov
movsl
fadds
cmc
nop
mov
lea
mov
xchg
jne
push
popa
pusha
in
inc
ds
xor
jl
xchg
jo
mov
cmpsb
pop
popa
cmpsl
movsl
mov
cmp
in
call
mov
xchg
stos
mov
rclb
inc
movsl
inc
xor
fcompl
cmc
lock
push
xor
lock
mov
icebp
push
int3
jns
push
loop
inc
mov
cwtl
mov
pop
fs
mov
stos
mov
aad
xor
movl
ret
insl
adc
fsubl
cld
shl
push
xchg
aaa
nop
cmp
mov
movsl
lds
or
push
sbb
out
into
fisubs
pop
xchg
mov
arpl
repz
lahf
inc
sub
cwtl
or
xor
fxch
mov
mov
xchg
pop
das
push
push
gs
jg
jge
ja
sub
mov
aas
add
into
cmp
test
imul
push
outsl
xchg
and
mov
es
out
inc
jnp
leave
imul
shll
out
cs
sbb
bound
xchg
movsl
mov
lods
pop
lret
aaa
data16
sub
xchg
pop
in
push
adc
xor
mov
sahf
ljmp
sub
mov
and
stos
es
push
dec
jns
dec
test
in
insl
push
pop
movsl
int3
mov
mov
pop
in
push
nopl
ds
mov
push
and
or
int
jo
hlt
lock
sub
xor
jg
clc
scas
orl
mov
cltd
pop
pop
scas
add
adc
lods
imul
jge
inc
cmp
mov
push
jo
adc
ss
in
ret
mov
mov
lret
pop
cmpsb
or
test
jns
ds
push
fdivs
pop
mov
out
decl
pop
pop
bound
mov
ds
mov
xor
jne
mov
icebp
in
rcrb
inc
testl
out
jmp
clc
repnz
jecxz
insl
cmc
cs
das
inc
jg
pusha
dec
out
or
mov
adc
sub
adc
push
xor
flds
andb
ss
repnz
sbb
addr16
fldcw
aad
test
mov
in
scas
rcr
sti
mov
mov
mov
call
insb
dec
or
cmc
leave
and
das
out
mov
pop
cmc
int
and
hlt
jle
pop
stos
aam
xor
mov
ret
aaa
cmc
push
lds
mov
js
and
mov
pop
jmp
xor
andb
jns
stc
xor
pop
jge
pop
or
lahf
pop
lret
scas
mov
lret
xor
xchg
sub
sahf
dec
jl
std
inc
fwait
lea
mov
jle
ret
test
push
sub
cmp
mov
jns
adc
pop
loopne
sub
xor
outsl
inc
xchg
call
add
cmp
test
ret
fsubp
and
arpl
cli
push
gs
ja
in
mov
mov
adc
dec
mov
jnp
or
or
out
and
test
inc
inc
stc
jo
addr16
sti
jle
loope
lea
cld
pop
and
mov
add
adc
ljmp
flds
mov
int
inc
incl
movsl
cmp
pop
cmpsb
arpl
jecxz
dec
cmc
cmp
bound
repz
fs
add
sbb
push
es
sti
int
stc
sbb
sti
sbb
and
push
mov
mov
xor
inc
pusha
gs
sbb
mov
dec
mov
fsubrl
mov
mov
lock
lock
in
out
lea
fmul
imulb
cmp
in
jae
iret
inc
cwtl
jno
mov
dec
int
pop
sub
sbb
std
xchg
inc
les
lea
dec
xor
push
es
clc
mov
fldl
jmp
rorb
enter
cmpl
scas
es
mov
int3
sub
ja
and
int
pop
sub
into
sti
adcb
cmp
aad
pop
jae
or
add
xchg
sti
insb
std
pop
add
loop
and
xchg
lcall
mov
push
jg
mov
dec
xor
mov
lods
insl
in
jle
and
mov
xchg
cmpsb
adc
xchg
mov
aas
insl
popf
pop
out
inc
sbb
lahf
fs
adc
std
adc
push
daa
xchg
or
mov
and
inc
inc
lahf
ss
mov
mov
push
lods
mov
out
push
jae
pop
mov
lds
lcall
sub
jp
jmp
add
push
xor
pop
push
sub
pop
jne
aas
in
sub
add
mov
es
rol
xor
and
sarb
imul
call
pop
cs
cltd
xchg
hlt
jnp
jne
lock
gs
mov
mul
push
jne
push
gs
loope
jae
loopne
rcr
mov
add
mov
and
and
xchg
int3
mov
ljmp
add
or
rol
popa
add
xor
repnz
mov
jp
pop
ret
jp
repnz
add
dec
jmp
data16
cmc
push
xchg
ret
add
push
mov
les
xchg
lret
fwait
and
ffreep
push
or
fbstp
jo
cltd
mul
nop
dec
dec
call
gs
jg
dec
fisttpl
sub
stos
jl
js
sub
sub
jns
insb
or
add
arpl
fsubl
repz
pop
in
inc
or
add
adc
enter
fwait
sbb
adc
xor
sub
lret
sbb
in
call
push
or
cltd
adc
icebp
pop
or
aad
push
sahf
inc
jo
repz
mov
mov
outsb
or
push
and
pop
fnstenv
fnstsw
lock
cmpl
jmp
add
aaa
cwtl
call
dec
cs
push
fsub
jge
fiadds
out
push
adc
lcall
aaa
xor
leave
into
jp
push
mov
add
xchg
in
jg
xchg
mov
jmp
push
jmp
xor
dec
outsl
inc
mov
pusha
jns
push
push
mov
imull
out
mov
mov
cmp
push
comiss
jnp
bound
idiv
dec
inc
adc
sarb
fcmovne
iret
xor
or
cmpsl
or
out
pop
je
lcall
mov
je
or
push
or
xchg
cmp
or
popa
lea
cmp
add
sbb
inc
subb
stos
mov
loop
sbb
or
cmp
pop
in
lea
lret
mov
sbb
mov
repnz
cld
test
mov
mov
fsubp
pop
gs
arpl
mov
test
cli
adc
inc
mov
rclb
andl
mov
or
ret
jnp
jg
mov
jp
pop
lods
mov
mov
data16
rcll
mov
xlat
dec
cmpsl
xlat
xchg
movsb
std
xchg
xchg
addr16
jmp
mov
push
hlt
ljmp
mov
add
adc
mov
negb
or
ljmp
shl
aam
adc
in
lcall
xlat
push
insb
jb
in
int
sti
movl
push
in
outsl
lock
lret
cmp
test
add
jb
mov
jle
stc
aam
sub
cs
fsubrl
inc
push
insl
into
in
pop
push
andb
mov
fadds
cmp
movsb
lea
jl
dec
adc
xchg
ss
cmpsb
lret
mov
ljmp
jbe
insb
sahf
inc
ss
test
int
push
xchg
sbb
call
out
je
add
icebp
test
xchg
sbb
popa
push
pop
clc
pushf
xlat
or
cmp
ficomps
aaa
mov
xchg
sub
cmpsb
push
sub
shll
and
jnp
out
ret
xor
sub
push
cmp
pop
sarl
fsub
insb
enter
sub
xor
repnz
rcl
add
in
jle
and
out
lret
hlt
and
xlat
push
lds
outsb
in
sbb
mov
cld
or
jmp
xor
mov
int3
popf
orb
imul
mov
push
dec
add
test
or
inc
xchg
mov
jge
pop
dec
lds
loop
xchg
lret
lret
mov
popf
mov
ret
or
fnstcw
test
clc
inc
lcall
dec
inc
cld
sbb
mov
jle
jmp
inc
xor
mov
jl
popa
loop
test
cmpsl
and
jae
mov
dec
stos
movsl
ficoml
ret
xchg
pop
inc
leave
dec
ljmp
jns
xchg
leave
push
dec
jne
dec
pushl
mov
sub
outsl
cmpsb
leave
sbb
js
insb
and
push
push
mov
mov
fsubl
sub
push
cltd
or
xor
or
mov
mov
push
jb
push
pusha
mov
imul
rcll
enter
int
mov
pop
sbbb
cwtl
enter
pop
int
std
vaddpd
xor
mov
jb
loope
xchg
imul
mov
int
repz
add
xchg
adc
add
js
lea
mov
icebp
mov
ljmp
cmp
ljmp
popa
pop
sub
and
scas
mov
and
cmpsl
test
mov
and
shr
pop
popf
popa
lods
rorb
xor
pop
dec
stc
sub
jle
jo
or
addl
mov
ret
fstl
mov
pusha
popa
sbb
sub
sub
mov
sub
sub
or
cmp
jecxz
fwait
mov
test
popf
daa
cmp
or
pusha
mov
pop
mov
and
mov
lds
xchg
jno
pusha
cli
mov
loope
mov
rorl
push
cmp
mov
mov
clc
cmp
sub
push
xchg
xchg
push
lret
mov
gs
rolb
lret
push
std
adc
add
in
mov
pop
enter
cmpsl
gs
cmp
shlb
adc
in
sub
cmp
pusha
sub
gs
in
cmp
inc
cmpsl
das
or
xchg
repz
popa
int3
sub
out
in
lret
jle
aas
mov
mov
or
repz
cmp
out
clc
mov
dec
pop
jmp
and
or
stos
inc
imul
mulb
pop
cmp
xchg
lcall
test
stos
std
ret
dec
clc
test
int
mov
cmc
adc
in
outsl
xor
movsl
push
cmpsl
fwait
mov
decb
add
add
cld
push
xchg
je
sbb
push
or
mov
movsb
out
xor
jge
push
cwtl
sub
leave
outsl
and
cltd
cmc
dec
loope
stos
scas
hlt
inc
push
ljmp
pop
ret
loop
test
fidivrs
xchg
test
adc
pop
insl
ds
dec
rol
inc
out
clc
fimuls
xchg
les
int3
xlat
fdivrs
out
mov
pop
fmuls
sub
or
gs
cs
sub
cmpl
cli
dec
enter
sti
jno
in
test
mov
mov
inc
stc
adc
int3
jmp
mov
dec
lods
shlb
xorl
sub
cmp
or
outsl
sahf
adc
xchg
or
xlat
or
push
flds
cmpsb
cmp
pop
mov
and
jp
jae
jnp
iret
cld
cmp
loope
aad
and
add
leave
mov
mov
xor
inc
push
faddl
test
jl,pt
add
xlat
adcl
inc
push
add
clc
cmp
loopne
aas
mov
mov
xor
in
jne
pop
sahf
sub
pop
xor
mov
pop
movb
jo
cmp
xor
js
cmc
adc
rorb
rolb
adc
jge
cmp
test
jg
push
adc
sub
out
mov
fistps
or
ljmp
cwtl
iret
aaa
scas
sbbb
fs
sbb
int
xorb
mov
and
xor
pop
mov
push
jecxz
dec
sahf
cmp
shlb
punpcklbw
mov
iret
push
negl
aad
std
in
sbb
lock
jl
clc
cmp
xor
pop
mov
xor
push
cli
push
and
push
negb
push
lds
mov
mov
mov
jo
and
in
adc
pop
mov
mov
jl
out
xchg
int3
imul
jb
std
mov
outsl
inc
jne
mov
dec
stos
mov
in
or
movsb
and
push
lds
fdivr
imul
jno
jmp
sub
repz
ret
cltd
pop
andl
sbb
dec
pop
into
adc
imul
stos
inc
push
mov
mov
mov
test
sub
cmp
mov
lret
xchg
nop
push
es
mov
push
pop
mov
mov
cli
mov
orl
lret
in
outsl
dec
daa
loop
xor
in
aam
push
cltd
popf
push
clc
xchg
das
push
push
jp
mov
xor
push
call
mov
imul
mov
aaa
mov
stc
mov
sbb
shr
test
inc
cmp
lods
leave
fidivrl
push
cmp
fsub
movb
aad
add
push
cmc
mov
outsl
jbe
test
sbb
mov
push
test
iret
mov
orb
push
dec
pop
orl
mov
ljmp
jb
and
test
push
pushf
call
fimull
or
mov
mov
mov
jmp
jp
or
jae
mov
dec
test
popf
xor
jle
lods
mov
int
mov
xchg
and
mov
cmpsl
jb
lock
pusha
aas
inc
cmp
sbbl
out
cmp
cmp
sub
jle
jno
mov
xchg
js
inc
lock
sarb
mov
fsts
jnp
xchg
leave
xor
pop
popa
loopne
jecxz
xlat
ja
in
cmp
xor
ret
ss
xor
inc
dec
mov
fmull
jl
rolb
push
inc
jne
int
orl
jnp
dec
outsl
jge
lods
inc
inc
push
insb
jne
repz
dec
push
pop
push
mov
aad
imul
add
push
mov
ret
mov
fidivrl
jg
xor
pop
jp
xchg
push
or
mov
or
and
aaa
mov
mov
aam
scas
push
lcall
dec
and
lret
setno
aas
repz
in
sbb
enter
divl
je
mov
pop
arpl
sahf
mov
mov
inc
stos
adc
aaa
xor
xchg
ja
bound
mov
inc
add
xchg
cmp
fisubl
mov
je
aaa
insb
pusha
lahf
push
add
and
sub
mov
movsb
rcr
jmp
out
ret
xchg
imul
cmp
bound
inc
xchg
add
repnz
icebp
lret
call
push
xor
popa
into
cmp
icebp
fnsave
mov
mov
loop
or
cld
scas
sub
mov
mov
pop
mov
daa
imul
in
pushf
mov
cli
jae
jnp
push
in
sti
sahf
cmc
je
xor
in
xchg
cmp
dec
inc
add
lock
stos
jg
cld
dec
out
and
cli
fcmovnbe
jmp
sub
inc
cmpb
inc
push
idiv
pusha
data16
adc
sti
mov
ret
cmpsb
pushf
push
cltd
test
iret
mov
and
scas
and
loope
shlb
mov
ja
cli
or
pop
ljmp
pop
sub
mov
fbstp
cmp
sub
pop
xchg
mov
lods
sub
rcrb
loop
dec
into
out
lcall
cmp
mov
cli
loope
sbb
fisubrs
out
sarl
mov
popa
pop
add
add
inc
mov
insl
jmp
pop
dec
or
inc
jb
and
sti
repnz
cmp
movsl
cmp
push
dec
cmp
or
fmull
loop
fdivrs
fisttps
pop
inc
sbb
fistps
fistl
out
inc
dec
daa
xor
or
xor
and
sbb
cmp
in
out
dec
jnp
jl
addr16
push
mov
rcll
loope
inc
scas
sbb
xchg
mov
push
dec
xor
adc
mov
jne
faddl
leave
mov
cli
and
hlt
out
fildll
nop
inc
jnp
dec
imul
xor
push
or
mov
ljmp
mov
add
mov
push
pop
xor
mov
sub
dec
aam
push
or
push
mov
mov
and
add
negb
cld
test
sub
cld
push
scas
push
insb
push
jne
fiadds
push
jp
mov
movsb
ret
add
repnz
jmp
jo
aad
xchg
mov
popa
jae
and
sti
mov
stos
jmp
rolb
inc
jbe
mov
mov
pop
and
inc
push
mov
outsb
dec
jne
test
out
call
and
loopne
cmp
mov
loopne
mov
and
jmp
pusha
nop
je
into
stos
push
out
int3
cmpsb
cmp
les
cld
push
test
int3
int
pop
rcll
pop
pushf
je
pop
add
mov
ror
push
sbb
fldenv
push
dec
push
test
jg
iret
adc
in
bound
pop
xchg
mov
call
js
pop
rcrb
dec
push
pop
sbb
addr16
or
mov
stos
sbb
lret
sub
lret
inc
adc
je
adc
lds
jo
cmpsb
icebp
dec
imul
dec
fldl
dec
int3
mov
dec
jmp
dec
scas
push
xchg
jbe
aam
dec
adc
xorl
orb
iret
mov
mov
or
fnsave
stos
scas
rclb
xor
xchg
stos
sbb
inc
mov
sbb
inc
xor
or
adc
sub
sub
mov
repz
outsl
movsl
inc
aam
mov
jmp
push
sub
sbb
ret
stos
repz
adc
inc
fcoml
iret
mov
xor
and
pushf
movsb
push
inc
addr16
mov
mov
xchg
pop
test
sbb
es
inc
testb
icebp
cmp
push
ja
nopl
dec
jecxz
sarl
mov
fwait
into
push
pushf
jecxz
neg
mov
mov
mov
mov
je
mov
xor
push
cmp
into
fs
stos
cld
dec
sarl
movsb
and
out
in
push
mov
push
push
push
popf
int3
cmc
push
lret
popf
push
dec
mov
xchg
inc
loopne,pt
ljmp
xchg
loope
cmc
jl
out
mov
push
inc
pop
or
shrb
add
dec
pop
push
sub
hlt
jae
inc
xor
push
mov
int
mov
nop
adc
xor
mov
or
fstl
mov
jge
pop
xor
rcrb
stc
adc
sub
jl
sarb
nop
test
mov
pop
imul
in
add
ret
sub
lods
push
insb
mov
fwait
aas
and
out
cs
xchg
jp
repnz
xor
cmp
movsl
cmp
adc
out
xor
mov
addb
mov
fsubp
adc
test
cmp
cmp
test
scas
sub
and
or
roll
outsb
test
cmp
pushf
sbb
jmp
repnz
and
sti
jbe
test
inc
xchg
sbb
fwait
cmp
dec
cmc
push
subl
sbb
pop
or
jge
add
pop
fmulp
cmpsb
sbb
enter
dec
jg
movsl
cwtl
jle
sub
mov
jmp
lahf
addr16
mov
in
pop
sbb
push
cmp
or
sub
cli
pop
arpl
repnz
mov
push
dec
mov
or
orb
mov
outsl
mov
pop
mov
call
rcr
cmp
dec
in
repz
xor
inc
xchg
mov
jge
mov
push
xor
or
inc
mov
mov
jnp
add
cli
cmpsb
mov
push
mov
push
scas
daa
xchg
mov
fisubrl
sbb
mov
jne
frstor
ja
and
jl
push
push
cmp
daa
pop
repz
daa
lahf
adc
xlat
cmp
hlt
mov
or
mov
xchg
fbld
pop
movsl
into
push
jns
jno
ss
sarb
pop
out
jno
das
inc
cld
popa
mov
aas
cmp
pop
in
pop
daa
xchg
rcll
xchg
sbb
mov
or
mov
loopne
inc
loopne
lods
imul
xchg
xchg
nop
inc
mov
mov
mov
pop
cmp
and
sub
repnz
andb
dec
jb
push
sbb
mov
notl
mov
stos
xor
mov
xchg
pop
aad
lds
repnz
dec
or
ret
xlat
test
lcall
loop
icebp
push
add
jmp
jb
int3
inc
addr16
lret
pop
xor
mulb
and
inc
iret
adc
mov
inc
push
out
push
fadd
cmpsb
adc
mov
mov
push
and
mov
out
stos
in
movsl
cmp
inc
xchg
mov
cmp
inc
push
mov
sub
dec
and
shll
sahf
cld
mov
pusha
mov
inc
sbb
sbb
pop
jge
daa
cmp
sbb
lods
jns
fldenv
mov
scas
mov
aas
scas
jp
mov
and
arpl
js
dec
arpl
int
sub
dec
adc
imul
repnz
sub
or
ja
ss
scas
mov
arpl
dec
lods
in
add
sbb
dec
icebp
add
mov
push
dec
cs
mov
mov
push
push
sahf
cmp
mov
add
popf
sbb
mov
mov
popf
jno
sub
xlat
jo
cmpsb
cs
loope
mov
mov
int
call
imul
je
test
mov
insb
ret
and
jle
mov
insb
dec
js
rcr
jbe
pop
leave
stos
xchg
lcall
push
cwtl
pop
cwtl
adcl
in
mov
imul
cmp
lret
sub
std
sub
cld
sbb
pusha
mov
loop
add
push
dec
inc
mov
addr16
push
adc
sub
xor
arpl
push
sbb
push
adc
inc
arpl
aad
mov
and
or
or
in
mov
sub
lret
enter
cltd
pop
push
push
dec
pop
inc
pop
jecxz
add
int
mov
loopne
push
adc
xor
lods
in
in
nop
jge
pushf
or
mov
pop
shll
sbb
out
pop
popa
cmc
sub
ja
daa
sbb
add
pop
idivb
jo
jecxz
sbb
pop
fmuls
adc
mov
das
jle
sub
xchg
call
lret
orb
mov
sub
adc
push
xlat
jb
xor
cli
daa
fcmovnu
stos
or
icebp
cs
scas
push
ljmp
lret
test
dec
mov
imul
inc
mov
out
inc
xlat
push
movsl
mov
jp
fstpl
pop
out
hlt
push
idiv
sub
jmp
xchg
pushl
std
pop
mov
fidivs
lds
adc
jno
outsl
lahf
cmc
xchg
pop
mov
fisttps
scas
push
int3
sbb
ja
jo
mov
pop
push
rclb
jmp
cwtl
dec
sti
xchg
xor
insb
sub
inc
pop
push
push
mov
push
popf
test
push
out
std
insl
andb
shll
jns
std
les
xchg
aam
mov
clc
outsb
insb
pop
sarl
inc
test
fbld
ret
jb
xchg
sbb
xchg
inc
sub
sbb
test
push
push
lcall
lret
arpl
addr16
xchg
and
mov
lock
sbb
sub
pushf
cmp
add
inc
inc
inc
mov
scas
xchg
mov
test
in
outsb
stos
loope
mov
mov
nop
repz
jl
and
cmp
jp
cwtl
mov
fmuls
add
xor
or
out
jno
cmovns
push
add
sbb
fwait
jo
or
hlt
faddl
push
lods
push
cwtl
mov
mov
lea
icebp
and
pusha
aam
xchg
jns
data16
jne
jnp
cmp
ljmp
sbb
inc
cmpw
mov
cmp
shrd
fisubl
sub
inc
mov
out
scas
ret
rcll
or
popa
push
pop
enter
xlat
aad
ljmp
jmp
popf
mov
out
std
rcll
dec
or
pop
mov
inc
mov
pop
pop
nop
jl
popf
inc
shl
push
or
dec
insl
sti
xor
mov
lret
call
pop
jns
mov
push
fcoms
pop
mov
test
movsl
test
and
xor
xchg
add
pop
ret
inc
stos
cmpsb
stos
adc
inc
cmp
leave
outsl
out
lret
rcrb
jnp
sahf
pop
push
add
cmp
addb
stos
ljmp
int3
mov
and
push
loope
sbb
cltd
inc
jbe
dec
xor
and
push
mov
jge
push
xchg
fisubrs
stos
inc
add
insl
cmp
and
addb
adc
mov
or
lods
insb
repz
xchg
cs
je
int
adc
or
jl
loopne
dec
popf
cmpsb
mov
test
inc
adc
mov
xchg
push
std
cmp
std
insl
mov
xchg
xor
subl
lock
sbb
rolb
or
mov
int
sub
ret
ja
push
mov
das
bound
mov
inc
inc
repnz
lea
icebp
or
or
fmul
cmp
mov
push
aad
xchg
inc
fadd
clc
push
in
scas
adc
lods
int
mov
cmp
xchg
push
les
inc
lret
adc
push
ljmp
xchg
mov
ret
add
cmpsl
or
fidivl
jnp
into
dec
pop
mov
fsubrl
mov
cwtl
mov
cmp
es
push
hlt
repnz
out
leave
lea
repz
push
xchg
jge
mov
iret
sahf
add
pop
and
dec
push
ljmp
push
rolb
in
cmp
lods
gs
ss
push
pusha
jae
and
popf
rorl
movsl
add
ret
stos
leave
inc
les
shlb
mov
pop
test
push
cltd
sahf
jb
loope
sub
int
and
lss
mov
sbb
ret
jb
push
lret
lret
rorl
shr
mov
push
mov
dec
faddl
mov
pop
stos
lahf
sub
sub
xchg
push
arpl
sti
outsb
inc
jno
shrl
dec
fsubrs
pop
nop
sub
xor
mov
dec
jo
push
movsl
mov
sbb
dec
add
imul
shrl
addr16
mov
cli
mov
js
loopne
push
mov
in
cmp
mov
repz
and
dec
sbb
loopne
push
loope
or
and
fdivrp
xlat
sbb
push
sahf
add
std
rcrl
mov
mov
loop
repz
push
fcoms
in
fldcw
push
jle
jecxz
sbb
aam
in
xchg
xor
enter
fadds
mov
fadds
subb
pop
aas
repnz
jecxz
subl
mov
and
push
lea
movsl
inc
add
push
jb
jns
mov
jmp
sbb
popa
mov
test
xchg
enter
pusha
mov
xor
pop
jnp
adcl
scas
xor
lahf
push
xor
data16
push
ror
imul
add
adc
ret
mov
sub
mov
ret
adc
pop
ljmp
push
mov
add
mov
pop
add
inc
jno
mov
push
test
sbb
pushf
in
lcall
js
nop
insb
lret
test
lods
pop
push
out
mov
dec
adc
and
inc
or
jno
fists
cmp
loopne
or
and
jge
and
mov
pop
call
mov
es
xchg
iret
pop
pop
push
sbb
xchg
daa
jge
rorb
fisttpl
pinsrw
inc
and
aam
xor
pop
ret
mov
cld
outsl
cmpsl
sub
and
aam
cld
ss
mov
fsubp
adc
ljmp
testb
pop
adc
aam
push
sbb
mov
sub
lock
add
push
jge
xchg
iret
xor
mov
aam
cmpsb
jne
mov
mov
test
out
dec
mov
xchg
rcr
jbe
fildll
sti
inc
enter
push
enter
push
fdivrl
pop
mov
or
add
mov
aas
xchg
mov
movsl
inc
pop
cmp
jne
scas
aaa
push
dec
mov
outsl
sbb
adc
jo
pop
sbb
in
sbb
adc
xor
cmp
ljmp
test
shr
cs
xchg
or
inc
xlat
sahf
add
std
cmp
mov
hlt
insl
out
push
mov
ja
xchg
stos
cmp
adc
mov
stos
cmp
jle
ds
mov
mov
bound
mov
mov
in
mov
dec
fwait
outsl
jecxz
outsl
shll
lds
iret
rorb
and
leave
mov
stos
ret
xor
inc
cmp
adc
push
pop
inc
cmpsl
fmull
push
jecxz
adc
das
push
dec
dec
mov
outsl
lds
xlat
pop
movsl
add
mov
test
jecxz
insb
push
mov
mov
pop
sub
mov
inc
and
out
fprem1
sub
insb
and
inc
icebp
inc
js
es
push
fimull
das
xchg
mov
cli
mov
fldcw
jmp
mov
add
xchg
stos
neg
adcl
xchg
adc
push
pop
push
pop
cwtl
daa
and
movsb
mov
inc
inc
xor
sbb
cmp
insl
and
pop
fscale
pop
mull
xlat
mov
push
test
popf
sub
sub
mov
lret
mov
pushf
outsb
lea
daa
mov
mov
cmpsb
lcall
sti
sbb
lock
jbe
stc
int3
jecxz
sahf
mov
sbbl
jp
dec
jecxz
mov
sahf
cld
cmc
dec
int
or
mov
dec
imul
pusha
in
xchg
jl
mov
cmp
inc
lods
jecxz
or
scas
mov
rcrb
cmpsl
push
dec
and
imul
inc
dec
add
out
or
cli
popa
shlb
loopne
jp
mov
out
int
enter
mov
xlat
cmp
add
sub
cmp
adc
lods
in
or
inc
out
xchg
xchg
dec
into
cmpsl
xlat
jp
mov
push
or
js
cmp
mov
xchg
inc
adc
jne
scas
jl
mov
dec
in
pop
aas
movsb
inc
push
or
mov
cs
imul
mov
sti
loope
inc
xchg
scas
shl
outsb
sub
push
lahf
cmpsl
cli
mov
adc
notl
and
adc
jbe
mov
shlb
pop
std
mov
mov
push
push
adc
popf
jno
mov
dec
in
icebp
faddl
loopne
or
sub
clc
out
bound
jnp
bound
negb
call
fnsave
cmc
call
dec
inc
cmpsl
sbb
lcall
rolb
fiaddl
jecxz
sub
lea
mov
dec
rcll
jne
fistpll
insl
mov
je
cmpsl
loop
add
inc
mov
cmp
stc
mov
nop
insb
jmp
das
jg
adc
mov
inc
insl
and
inc
sbb
loopne
rcrl
lahf
gs
setg
outsl
dec
pop
inc
pop
push
cwtl
call
adc
sar
push
adc
lods
jb
call
mov
mov
push
cld
stos
scas
nop
mov
mov
cli
pop
mov
or
daa
cmp
jno
pop
mov
mov
sub
pop
idivl
mov
inc
push
push
mov
or
sbb
adc
xor
push
ljmp
jl
in
dec
mov
pop
and
sub
mov
lods
mov
cmp
dec
das
xchg
fcomps
js
add
lcall
movsl
cmp
in
je
dec
test
jp
pop
sbb
or
fs
out
fisttps
jb
push
mov
imul
fcmovnu
andl
mov
aam
gs
xchg
adc
ljmp
xor
add
sub
push
mov
push
pop
mov
scas
push
sub
test
fadd
dec
adc
pop
fiadds
adc
pop
jnp
nop
adcl
dec
data16
mov
mov
fsubl
jl
test
mov
fsubl
stc
imul
int3
xchg
jns
nop
jo
mov
leave
ret
mov
insb
xchg
xchg
mov
add
stos
cmpsl
cmp
aad
cmp
adc
test
xor
cld
jne
loope
je
push
je
jb
test
outsb
lahf
inc
aam
or
xchg
lea
shrb
push
les
jmp
or
and
lock
shl
jb
arpl
xor
or
sub
insl
mov
outsl
outsl
mov
cwtl
pop
pop
jmp
mov
push
adc
jmp
push
mov
push
inc
inc
imul
ds
sbb
or
and
mov
add
adc
and
repz
or
out
test
mov
push
dec
cmpsb
mov
sub
dec
fdivrs
jp
and
out
adc
data16
test
mov
adc
push
das
popa
pusha
push
jb
xchg
fnstenv
std
push
jae
cmc
loopne
adc
cmpsl
mov
subb
xchg
xchg
pop
jmp
addr16
lods
loope
or
push
sbb
enter
or
pop
pop
idiv
aas
add
sub
xchg
xor
mov
out
scas
xlat
xchg
ds
loopne
cs
cmpsb
mov
mov
add
das
push
mov
insl
test
mov
pop
nop
mov
mov
push
out
inc
cmpsb
or
push
fidivs
push
or
fisttpl
cld
pushl
mov
ret
or
fmuls
js
hlt
daa
and
adc
fldt
imul
dec
iret
mov
setne
div
xchg
jg
dec
sahf
sub
or
movsl
int
shlb
xchg
pop
push
xchg
mov
hlt
adcb
mov
lahf
mov
sub
iret
sbbb
jae
and
and
add
das
iret
ljmp
mov
or
mov
add
sub
sub
pop
xor
and
push
ja
adcl
jl
mov
lahf
pusha
xchg
test
addr16
pop
pop
fwait
sbb
jbe
push
andb
movsl
fdivl
sub
lcall
or
add
xchg
pop
ljmp
cmp
jge
adcb
and
fwait
and
mov
pop
pop
pop
movsl
or
inc
bsf
daa
pop
xorb
xorb
add
test
insb
mov
fbstp
cmp
mov
add
push
aam
cltd
xchg
popf
test
ret
xchg
inc
mov
jge
cwtl
sbb
dec
adc
lret
stc
outsb
mov
adc
popf
mov
jg
imul
addr16
mov
dec
jb
pop
mov
pushf
andb
mov
mov
adc
mov
cmp
push
dec
jb
and
jecxz
nop
dec
out
popf
test
ss
bound
push
rep
adc
sbb
notb
lret
cs
cwtl
enter
and
in
outsb
adc
das
negb
or
fimuls
inc
add
data16
mov
lcall
arpl
mov
cwtl
push
out
mov
dec
movsl
fptan
stos
loope
fdivp
cmp
std
jno
adc
fs
mov
imul
push
and
inc
pop
pushf
add
sub
sbb
sub
lret
dec
jge
in
in
jne
inc
mov
mov
sbb
orl
push
xchg
and
ljmp
or
xorl
adc
loop
aad
cmp
pop
push
or
inc
mov
or
pop
sti
into
shlb
mov
sbb
mov
mov
adc
mov
mov
mov
imul
jnp
xchg
jns
fstl
xchg
ds
clc
or
ret
pop
mov
cmpsb
test
and
nop
imul
xor
lcall
test
iret
sub
aaa
cmpsb
xchg
push
insb
js
mov
adc
mov
rcll
and
repz
int
mov
repnz
sub
adc
je
pop
mov
mov
xlat
push
and
pop
fldenv
inc
xchg
pusha
adc
add
cltd
fcoms
call
push
mov
je
push
or
mov
mov
lods
jo
xor
aas
cmpl
inc
ret
mov
popa
mov
mov
loop
lret
mov
push
sbb
rcl
mov
insl
xor
sahf
movsb
or
sub
punpckhdq
and
call
cli
cmp
in
fsubl
mov
test
sbb
add
adc
lea
jo
int
sti
cmc
mov
aad
stos
inc
or
scas
loope
mov
xchg
pushf
push
mov
jne
jp
inc
sub
pusha
enter
or
addb
addb
cli
or
add
jbe
std
aas
xor
pop
lcall
enter
lea
stos
adc
popa
popa
dec
fisttpll
cmp
push
sub
jne
xorb
ljmp
xchg
jmp
dec
push
xor
fisubrs
sub
adc
adc
aaa
jae
xchg
or
adc
out
aam
es
inc
cltd
jbe
push
and
movl
adc
mov
js
enter
lods
xor
xor
sahf
js
stc
or
movsb
pop
rol
mov
cmp
xor
mov
or
pop
adc
stos
lock
movsb
pusha
jmp
out
and
dec
push
dec
inc
cmp
sbb
jb
repz
jp
push
decb
mov
or
push
cltd
push
push
add
dec
pushl
sub
cmp
sub
xor
mov
jmp
push
popa
rcll
leave
cld
cmp
jae
adc
cli
mov
dec
and
jmp
pop
mov
and
or
lret
stos
loopne
dec
stos
cmc
xchg
pusha
loope
insb
fwait
add
clc
testb
xchg
flds
or
adc
inc
nop
loop
jb
sbbl
jns
lds
adc
pushf
stos
mov
dec
cwtl
push
mov
lahf
cmp
ss
cmpsl
or
xchg
mov
inc
rorb
leave
jae
mov
xchg
adc
inc
dec
rcrb
push
inc
in
adc
xchg
push
mov
enter
and
or
sbbb
push
pop
pusha
adc
inc
xchg
and
push
imul
add
out
pop
shr
dec
test
mov
popf
and
lcall
sbb
popl
mov
jecxz
sbb
add
cltd
jmp
inc
rcl
pop
push
cmp
mov
sbbb
or
outsb
repz
xor
mov
jbe
jae
mov
pop
scas
mov
push
cvtps2pi
push
xor
fldenv
std
adc
notb
mov
and
fcom
sbb
jbe
push
mov
jl
movsb
fcoms
mov
pop
ljmp
shr
test
std
lcall
popa
pushf
fs
xchg
lret
stos
in
mov
mov
inc
cmpl
inc
add
rorb
cmc
nop
icebp
mov
icebp
mov
mov
xchg
sub
loopne
xchg
insl
sub
rcr
fstl
enter
dec
sarb
push
sti
mov
imul
lret
or
pusha
or
and
mov
xor
mov
cmp
push
loope
cmp
pop
xchg
test
scas
xor
test
fdivrl
fstpl
add
loopne
or
pop
repz
mov
xchg
outsb
imul
cld
sbb
push
sahf
cltd
xlat
dec
pushf
pop
pop
aad
push
ret
push
pop
aam
pop
in
or
lods
fld
dec
xchg
and
mov
inc
daa
jmp
ret
imul
aaa
repnz
or
inc
nop
outsb
repz
mov
xchg
mov
xchg
pop
xor
or
fists
or
xor
mov
or
int
dec
mov
out
xchg
jl
pusha
je
cmpsb
cmpsl
prefetchwt1
or
fsts
shlb
xor
rorb
and
fcoms
push
sbbb
dec
imul
mov
sahf
insl
jg
scas
adc
mov
jo,pn
inc
or
repz
mov
test
outsl
fs
pop
out
mov
adc
movsb
or
and
sbb
xor
fidivrs
pushf
mov
loope
loop
mov
mov
or
jbe
in
rcr
daa
jb
jae
je
mov
inc
mov
clc
ljmp
mov
mov
jmp
mov
jp
test
xchg
push
test
test
push
xor
mov
push
fmuls
adc
ret
mov
mov
dec
fsubs
cli
out
cli
in
scas
enter
rcrb
and
jbe
fstpt
xchg
adcl
mov
lret
repz
out
jg
jb
dec
mov
inc
xor
mov
pop
add
daa
cmp
scas
test
repz
push
in
out
inc
repz
insb
add
iret
pop
enter
or
adc
fnstsw
or
js
mov
filds
rcrb
ljmp
inc
xor
inc
push
ret
jne
jge
xor
dec
gs
arpl
jecxz
test
fdiv
imul
xchg
sti
sub
aaa
std
mov
mov
cmp
test
divl
pop
push
jno
ljmp
clc
test
movsb
rep
mov
inc
fsubrl
pop
adc
loopne
or
and
sub
or
pushf
pop
push
pop
and
xor
jns
out
jle
mov
nop
mov
ret
pop
sub
ljmp
jns
push
push
lds
xchg
jp
jmp
cmp
mov
lcall
lds
mov
jo
adc
xchg
cwtl
icebp
aas
icebp
cmc
xor
dec
xor
sbb
xor
std
sbb
into
aam
inc
aaa
sub
lods
dec
lret
fwait
sbb
in
mov
cli
mov
sub
mov
push
or
clc
ret
cs
fsubl
je
fbld
notl
mov
push
test
inc
popa
sub
cmpsb
hlt
mov
aam
test
fidivrs
mov
or
gs
jl
mov
jnp
cmp
push
and
ret
mov
sub
cmpsb
add
mov
dec
cmp
and
push
sub
pusha
int3
push
jne
imul
scas
jae
gs
or
adc
sti
push
mov
gs
xchg
or
insl
jge
push
daa
dec
int
roll
mov
rorl
jnp
in
rcrb
or
popa
mov
mov
xchg
aas
xlat
push
loope
mov
jnp
lahf
mov
push
jb
les
packuswb
ljmp
std
sbb
enter
clc
xcrypt-cbc
cmpsl
push
aam
pop
cmp
out
rorl
lret
je
dec
xor
sbb
repz
scas
jb
rolb
push
in
push
or
mov
shlb
inc
mov
mov
lcall
pop
jecxz
inc
xor
test
fcoml
xchg
in
mov
lds
dec
jmp
test
or
lret
insb
insl
test
xchg
fimuls
mov
popa
roll
lcall
decl
ret
xorb
test
lcall
test
negl
jb
jno
mov
mov
mov
sbb
outsl
mov
nop
and
xchg
adc
pop
call
and
pop
xor
lock
pop
addr16
and
gs
push
fdivrl
jnp
andb
incl
sub
enter
fnstcw
incl
les
dec
rcrl
mov
jb
shrb
fnstsw
adc
pop
pop
xlat
pop
cmp
cmp
pop
bound
bound
cmp
xor
dec
jne
je
or
rcrb
enter
mov
inc
jle
insb
aam
xchg
sbb
sub
std
out
inc
hlt
pushf
inc
jecxz
icebp
lods
jp
mov
sbb
xchg
fldenv
cmpsb
mov
cmc
jmp
and
jle
adc
negb
lods
add
mov
gs
addr16
mov
cmp
cltd
add
iret
xchg
and
outsl
cmp
pop
clc
stos
cmp
movsb
sbb
jmp
xchg
and
popf
mov
scas
cmovnp
or
hlt
lds
stos
out
test
jle
xchg
popa
pop
jb
pop
cmpsl
ret
push
sub
adc
push
fnsave
pop
cmc
xchg
mov
dec
imul
xchg
pop
pop
and
stc
and
and
jne
mov
and
jg
pop
lret
push
into
hlt
ljmp
sbb
bound
xor
pop
mov
gs
jmp
jmp
mov
or
jl
xor
mulb
push
xor
sbb
ret
ret
fnstsw
mov
repz
scas
mov
cmp
cmp
add
push
jle
dec
mov
jmp
adc
cmp
test
dec
test
repnz
dec
jo
jb
jnp
mov
insl
bound
cmp
std
jg
je
popa
flds
mov
add
addr16
arpl
cli
sahf
roll
push
fisubl
stc
aaa
xchg
jo
aas
inc
shl
add
movsl
push
sbb
sub
pushf
test
xchg
inc
mov
sarl
out
sbb
lret
dec
imull
lret
mov
das
aaa
sub
ficoms
pop
bound
and
pop
cld
push
mov
xor
sbb
je
movsl
mov
data16
fadd
dec
and
inc
call
lret
mov
in
add
and
int
out
sbb
sti
jecxz
pop
push
jmp
clc
and
insl
and
cltd
clc
cwtl
jns
insb
sub
add
hlt
jns
fisubrl
test
in
sub
scas
gs
cld
aam
cmp
mov
arpl
sub
or
or
in
insb
sbb
data16
fstpl
mov
mov
and
aaa
lcall
bound
xchg
and
shlb
and
push
imulb
aad
fcmovne
sbb
cmpsl
dec
scas
jge
sti
aaa
subb
stos
fisubrs
xchg
xchg
cltd
jb
xchg
in
out
add
mov
inc
cwtl
pop
loopne
or
add
lds
mov
pop
imul
xchg
adc
sbb
cmp
arpl
xchg
mov
sub
push
pop
adc
movsb
and
inc
stos
outsl
out
cmp
pop
jb
lods
es
fldt
ds
and
mov
push
lret
jg
ljmp
shrl
test
jmp
in
mov
iret
sub
fsubp
cmpb
repnz
dec
and
and
aaa
lcall
jne
enter
mov
sbb
loopne
jne
mov
int
mov
jae
mov
xlat
scas
data16
movsl
repz
pop
sbb
lds
hlt
fstpt
push
leave
in
xchg
pop
ret
mov
add
js
out
adc
xchg
add
pop
ja
add
notl
js
test
jp
mov
xchg
outsl
shrl
fs
push
sahf
cli
mov
aad
push
sbb
int3
cmpsb
sti
sbb
sub
inc
daa
fisubrl
mov
fwait
sbb
xchg
cmc
jge
xchg
push
jge
lds
lret
xchg
xchg
loop
sti
cmpsb
pop
movsl
or
mov
ss
mov
lcall
je
jl
push
xchg
cltd
pop
mov
inc
jbe
sub
mov
jecxz
cmp
cwtl
mov
aad
push
icebp
adc
cmp
in
sbb
stos
mov
inc
ljmp
xchg
popa
stc
mov
icebp
roll
xchg
sbb
fisubl
adc
call
or
mov
stc
shr
sbb
jo
js
lret
int3
or
es
pushf
int
pop
mov
iret
xchg
xchg
pop
mov
insb
out
pop
pusha
dec
xchg
jl
dec
sbb
roll
je
xlat
fdivrs
and
pop
mov
fwait
jge
dec
add
cwtl
cwtl
sti
dec
int3
cli
add
clc
cmc
add
cs
inc
push
inc
adc
cmpsb
fcomp
jo
pop
inc
mov
lds
repz
in
sti
icebp
adc
push
sbb
jp
sbb
cmp
mov
repnz
sbb
cmovbe
fnstcw
mov
aas
mov
pop
push
jb
leave
clc
mov
mov
leave
pushf
adc
scas
gs
xchg
pushf
push
mov
dec
push
sub
shrl
push
nop
jg
xchg
sbbl
fadd
inc
test
data16
sti
xor
xor
sarl
cld
mov
pop
imul
mov
add
mov
mov
mov
cmp
sti
cmp
js
rcrb
test
int
xchg
in
rcrb
and
pop
cmp
jmp
xor
ja
push
test
and
push
xor
shll
fiaddl
xor
mov
inc
xorb
out
xor
jp
ret
push
dec
sbb
cltd
sti
in
adcl
sahf
insb
mov
lcall
stc
gs
rolb
push
sbb
mov
adc
inc
mov
ret
dec
inc
push
fwait
lods
lret
mov
gs
jge
sbb
mov
push
jecxz
std
shrl
sbb
and
mov
mov
test
enter
jecxz
inc
insb
jno
loopne
mov
adc
movsb
push
test
sti
not
jecxz
and
rcl
push
cmp
daa
xlat
inc
xchg
mov
loopne
fimuls
test
pusha
ret
fwait
xlat
xchg
and
sbb
pop
pop
repnz
nop
mov
fcmove
pop
add
cwtl
pop
inc
out
imull
lods
les
and
cmp
lahf
inc
inc
sub
fadd
out
lds
fisttpll
dec
pop
mov
ds
sub
add
rclb
sbb
and
ja
cs
add
adc
xor
call
call
dec
sub
int3
stos
or
mov
pop
fistpll
imul
dec
cs
lcall
cmovle
inc
pop
fldcw
push
push
jo
rcrl
cmp
loope
orl
jns
mov
mov
je
cmpsl
inc
mov
xchg
sbb
xchg
stos
sub
push
loopne
mov
sub
ja
and
jne
aad
int
xor
fcompl
loope
fidivs
movsl
push
adc
pop
andb
cltd
lret
sbb
push
rclb
aaa
inc
ret
sbb
pop
pop
lods
loop
mov
xor
lret
ss
shr
xchg
xchg
xchg
sub
lcall
das
lock
push
rcr
xchg
fisubl
cmpsb
rcrb
out
push
cmp
stos
sbb
int3
and
out
push
jle
mov
pusha
cld
aad
popa
loopne
sbb
jp
mov
push
xor
shll
mov
sub
fcompl
push
dec
iret
push
rol
bound
add
fstl
out
das
push
xor
pop
and
and
jne
popf
loop
out
jns
xchg
iret
testl
xor
orb
ret
scas
sub
mov
mov
negb
cmp
lds
mov
ss
test
sti
sub
or
push
ret
mov
rolb
xchg
adc
mov
mov
popf
or
mov
test
repnz
scas
adc
adc
outsb
mov
inc
add
xchg
pop
jno
push
int3
mov
aam
push
sahf
dec
jae
shlb
jmp
insl
loopne
ds
xchg
push
loop
cltd
loope
cmp
aam
cs
rcrl
xchg
inc
jnp
xor
es
je
daa
ret
xchg
sbb
lock
sti
and
push
in
mov
adc
sub
mov
loopne
out
gs
lea
lret
dec
mov
inc
xor
cmc
and
ss
jmp
stc
outsl
sarb
int
addb
adc
ret
idiv
insb
jl
imulb
xchg
inc
adc
in
int3
jno
sbb
imul
pop
mov
sub
roll
inc
sbb
push
inc
imul
dec
sbb
fisubrl
dec
lods
mov
mov
arpl
add
out
inc
int
dec
push
jne
data16
and
adcl
mov
jns
ss
push
int3
mov
xlat
int
mov
ljmp
pop
lock
movsb
inc
movl
mov
or
inc
mov
mull
mov
and
mov
add
or
je
pusha
mov
push
shlb
cli
loope
lret
sbb
sbb
mov
push
fistpl
cmp
bound
into
js
mov
jmp
jbe
mov
js
inc
adc
mov
push
test
sub
push
das
inc
mov
mov
dec
or
int3
test
lcall
pop
mov
in
xchg
ss
call
inc
dec
bound
pop
jnp
xchg
pop
lahf
testb
outsb
or
stc
add
movsl
mov
mov
js
outsb
inc
cmp
in
push
xchg
loope
xor
lret
out
out
ret
dec
aam
lods
xor
das
jecxz
ljmp
mov
test
mov
and
ljmp
add
mov
adc
mov
ffreep
cmp
inc
es
push
add
fsubl
andl
dec
xchg
imul
sti
ret
mov
sbb
and
shll
rorl
mov
popf
mov
xchg
pusha
xchg
aam
jnp
data16
jno
out
push
int
adc
into
add
test
clc
and
data16
or
mov
dec
jg
data16
lea
adc
test
dec
iret
pop
or
xchg
sub
pop
dec
add
pop
stos
fdivr
adc
xor
iret
mov
and
inc
movsb
imul
add
mov
in
stos
stos
js
loop
fcoml
inc
into
jno
and
addr16
ret
fdivr
ljmp
jecxz
push
lods
int
ret
cwtl
cmpsl
and
mov
out
daa
add
rcrl
fbld
hlt
nop
nop
pop
pop
adc
inc
xchg
not
into
sub
xor
inc
inc
notl
fbstp
lret
jae
inc
cmp
lret
call
insl
pop
stos
clc
mov
adc
sbb
inc
and
xchg
test
das
fstps
push
xor
lods
loop
push
leave
jne
lods
adc
lock
out
mov
mov
in
fisubs
aad
fnsave
stos
test
bound
push
aam
ljmp
orl
push
xchg
fs
ljmp
fstps
shrb
enter
inc
aas
push
mov
mov
ret
pop
inc
cmpsb
fwait
out
add
rorb
in
mov
cmp
inc
and
in
pop
and
fcompl
xchg
dec
ja
loopne
and
mov
addb
push
jnp
cmp
xchg
dec
mov
pop
fildl
cltd
sbb
and
std
or
jae
cmp
imul
jae
push
mov
xchg
or
jbe
adc
and
cwtl
mov
push
xchg
xchg
lds
mov
ret
outsl
stc
push
dec
fs
lds
sub
lock
movsb
cmp
or
cmp
xchg
xchg
mov
ljmp
nop
add
and
js
outsb
mov
inc
push
or
xor
or
mov
aaa
movsb
cmpsb
mov
mov
cmp
xor
jno
adc
ja
scas
cmp
icebp
fistps
cld
mov
mov
bound
mov
fwait
xchg
mull
dec
push
and
inc
xor
sub
xlat
pop
pop
cmp
mov
mov
cmp
outsb
or
sti
mov
xchg
push
add
jmp
fs
and
test
fbld
xchg
inc
and
mov
adc
ds
aam
loope
rcrl
out
fdivrp
std
adc
sub
rcl
and
dec
scas
decb
push
inc
lahf
lock
jnp
faddp
mov
lret
rclb
out
pop
pop
dec
push
addr16
mov
jnp
xchg
aam
int3
dec
mov
outsl
repnz
xor
scas
arpl
xchg
dec
movsl
push
push
xlat
or
sub
repz
jnp
pop
aas
mov
jge
pop
pop
xor
mov
inc
outsb
cmp
sub
shr
aas
arpl
incb
push
cltd
cs
mov
jnp
in
sbb
mov
mov
jp
push
or
xchg
std
loop
cmc
cmp
cmp
inc
popa
cmpsl
lret
pop
shrb
shl
xchg
mov
xorl
inc
mov
int
pop
mov
or
and
sbb
insb
insl
insl
shl
xchg
dec
aas
movsb
add
jne
inc
cmp
pop
mov
dec
lock
roll
sub
insb
nop
push
or
into
loopne
stc
insb
outsb
test
fmuls
cli
jne
loopne
xchg
xor
in
gs
mov
dec
rcl
xchg
mov
inc
mov
xchg
sbb
push
sub
pop
arpl
mov
test
arpl
mov
jge
sbb
rorb
jo
outsb
xor
mov
or
in
add
jg
incb
test
in
aas
or
int
jbe
mov
fwait
mov
add
js
xchg
insl
or
pop
dec
sub
adc
push
lods
pop
cld
xor
aas
mov
dec
xor
in
push
cltd
test
or
mov
or
sub
mov
fsubl
sbb
cwtl
sub
mov
idiv
rclb
adc
push
cmpsb
dec
and
mov
xchg
sbbb
mov
mov
fsubrs
cmp
enter
jnp
jne
mov
sub
jle
or
icebp
enter
aam
push
call
push
imul
fwait
add
bts
movsl
or
inc
add
jnp
jge
add
sbb
test
lea
or
loop
adc
jae
add
push
scas
out
mov
pop
adc
dec
add
xchg
iret
xor
imulb
mov
cld
push
das
mov
sub
lock
pop
insl
cmpsb
or
xchg
jns
mov
push
jge
jo
nop
jp
pop
cmp
cmp
sahf
fisubl
cmp
cmc
xchg
sub
mov
mov
fisubs
xlat
pusha
ljmp
mov
adc
sub
dec
add
jnp
fcoml
mov
notl
dec
pusha
in
jmp
scas
cwtl
xor
xchg
mov
fnstcw
jge
or
sub
xchg
lcall
int3
mov
or
inc
jbe
sarb
lcall
std
clc
pop
xlat
data16
jo
add
cli
push
out
fcomi
xchg
mov
sbb
mov
cmpsl
push
mov
popf
rol
pushf
hlt
push
shrd
inc
mov
stos
popf
push
fistpl
push
xchg
ja
mov
xlat
aas
subl
mov
mov
nop
stos
xchg
sahf
test
jne
pushf
clc
push
sbb
cmp
jmp
rclb
jecxz
fildl
dec
enter
or
add
or
arpl
ret
fcoml
fcmovne
sub
cs
mov
adc
paddq
mov
out
and
scas
out
add
xchg
push
sbb
mov
fisubrs
mov
lock
out
lret
pop
imul
fistpl
jb
sub
pop
lahf
push
xor
mov
xchg
xchg
sbb
sti
stos
sub
rol
pop
mov
pop
outsb
fdivl
loopne
xchg
jo
inc
ja
mulb
pop
xlat
out
xorb
pop
js
ljmp
sbb
or
xor
jecxz
xchg
and
rorl
xchg
push
mov
inc
pop
pop
scas
pop
xchg
aam
outsb
ret
cmp
pop
or
or
out
lock
add
mov
add
cmp
adc
pushf
jb
xor
add
xchg
add
push
add
shlb
jp
ficompl
repz
sub
aaa
in
xor
inc
mov
mov
mov
loop
mov
inc
xor
mov
fcomps
loopne
test
mov
sub
pop
inc
sbb
mull
test
js
sahf
jne
cmp
loopne
data16
push
jecxz
sub
cwtl
data16
inc
and
ds
loop
jmp
mov
or
outsb
rclb
mov
and
sub
adcb
imul
inc
dec
repnz
daa
mov
inc
jmp
jne,pn
notb
push
mov
mov
xchg
push
mov
popa
lea
add
dec
cmpsl
inc
and
cmc
cmp
aam
xchg
xchg
lahf
ret
mov
mov
xor
mov
roll
push
loopne
dec
mov
lea
ret
std
pop
inc
movsl
sti
ljmp
cs
int3
test
daa
sbb
jno
cmc
ret
shr
adc
jbe
iret
adc
arpl
add
lahf
or
xor
xchg
imul
pop
and
adc
shl
or
push
add
mull
mov
out
inc
sub
jns,pt
or
mov
pop
xchg
test
cli
mov
xor
mov
call
jle
jle
outsl
jo
xlat
cli
or
inc
push
add
int
iret
xor
add
fiaddl
test
xor
fcoml
imul
dec
inc
mov
decb
xor
push
mov
push
jbe
stos
clc
or
mov
cwtl
push
fdivs
adc
in
cld
inc
or
repnz
mov
lods
cmp
xor
jecxz
mov
jnp
int
cwtl
xor
mov
rclb
inc
pushw
xor
or
xor
movl
fisubrl
jge
nop
mov
cli
sbb
mov
je
call
mov
in
lret
mov
sub
mov
fldenv
jo
jb
rcll
add
sbb
sbb
add
jb
jns
test
movsb
loope
lahf
jb
pop
add
mov
stc
adc
sti
divb
jg
negl
mov
paddb
insl
jnp
xlat
pop
leave
dec
cmp
aaa
in
mov
pop
dec
and
subl
enter
adc
orl
pop
daa
scas
jns
sub
mov
push
pop
les
xchg
daa
adc
push
push
repz
sahf
push
xor
je
addr16
mov
out
test
mov
adc
inc
inc
hlt
push
jo
dec
into
jp
cwtl
aaa
cmpsb
mov
aaa
je
mov
push
lcall
and
sub
jge
leave
sub
mov
inc
testb
data16
out
push
xchg
adc
push
inc
loop
pop
mov
sarb
int
or
mov
mov
inc
sbb
test
cmp
sub
fsubrp
push
insl
int
xchg
push
cmovg
cmpsl
jns
add
cmc
cmp
sar
xchg
adc
icebp
or
xchg
stc
clc
lret
aaa
stc
xchg
lods
aas
mov
popa
addr16
pushf
mov
sub
sub
mov
bnd
nop
loop
xlat
dec
popa
aad
shl
fsubrs
adc
jle
movsl
shrl
loop
pop
bound
ficoml
cmc
inc
lods
inc
mov
push
outsl
lock
loope
es
jle
inc
push
lock
and
mov
rorl
sbb
loop
repnz
pop
cli
aaa
dec
adc
jl
cwtl
je
subl
push
out
mov
cmp
sahf
int3
or
add
clc
gs
test
les
xor
out
jns
into
pop
xor
test
cld
outsl
callw
insl
filds
and
movsb
adc
and
or
inc
imul
stos
cmc
arpl
notl
es
stos
das
or
data16
adc
dec
addl
fldcw
cmpsb
pop
jno
mov
cld
xchg
jnp
xor
stc
xchg
rcrb
shlb
cmp
and
mov
mov
cmpsl
popa
roll
mov
flds
jle
lret
ljmp
mov
mov
inc
shl
loopne
or
push
fwait
or
lods
mov
cltd
mov
lds
adc
stc
jns,pn
adc
imul
roll
shrl
mov
xchg
aam
hlt
xchg
mov
test
in
bound
adc
xchg
add
iret
inc
or
or
push
xchg
mov
aam
xchg
mov
pop
loope
fisubs
push
addl
cmp
jecxz
ja
jns
scas
popa
inc
shr
cs
inc
int
and
jl
add
fsubr
mov
sti
cmp
int
mov
inc
lds
ret
jle
insb
pop
mov
mov
out
js
insl
pop
mov
icebp
pop
hlt
imul
mov
pop
imul
repnz
jle
in
and
jl
or
ret
mov
jle
mov
inc
in
int3
and
sbb
sbb
addr16
test
flds
and
pop
inc
js
gs
jbe
dec
dec
ljmp
jle
jb
and
test
xchg
loope
sbb
mulb
or
inc
cwtl
mov
dec
add
sbb
dec
aam
jbe
adcl
ficoml
cmpsb
xor
addb
xchg
pop
pop
insb
inc
shll
mov
outsl
hlt
divb
in
xchg
and
notb
or
ljmp
and
lcall
test
jbe
sbb
jns
test
nop
rorb
cmp
add
adc
aaa
outsb
jae
sbbl
adc
jnp
cmp
sub
adc
dec
push
enter
push
lahf
jb
mov
loopne
dec
adc
jo
repnz
add
mov
xor
and
rcrb
sti
aam
test
ljmp
push
ret
in
test
mov
push
add
out
movsb
mov
jns
cmpsb
ljmp
bound
mov
addr16
cltd
cmp
pop
add
lret
icebp
addr16
stos
imul
aam
push
mov
mov
addr16
cmc
repnz
inc
cltd
fsubrs
enter
add
cmp
xor
loop
stos
inc
mov
xchg
lock
mov
sti
mov
add
adc
pusha
xor
push
mov
sbb
dec
out
fdivrl
cmp
push
out
pusha
mov
and
push
insb
adc
loope
in
pusha
jno
adc
dec
mov
and
mov
scas
push
mov
popf
mov
adc
popa
fldl
movsl
pop
icebp
jl
pop
ss
popa
mov
jl
mov
xchg
xchg
nop
clc
sbb
in
mov
add
xchg
ret
mov
jg
inc
sbb
fstl
repnz
xchg
push
incb
jno
add
ficoml
mov
rorl
sub
add
mov
mov
sbb
add
cmpsl
out
bound
pop
shl
shlb
pop
popa
lods
lahf
push
into
xchg
js
and
pop
and
xor
stos
das
fdivrp
inc
shrl
cld
dec
pop
inc
and
sub
jl
pop
test
cwtl
xlat
iret
popf
es
dec
pusha
adc
ret
dec
and
jp
add
jl
add
subps
xchg
sbb
pushf
adc
loopne
rcll
mov
fcomps
mov
stc
out
sub
mov
push
test
xlat
xor
pop
mov
enter
lcall
repz
int
gs
jnp
out
cs
in
cld
lret
mov
daa
pop
mov
adc
lods
jns
sub
jmp
jecxz
hlt
sub
bound
pop
xor
loope
add
arpl
xchg
stos
shrl
test
sub
xchg
xor
sahf
mov
mov
lret
rolb
sarl
fcomp
inc
mov
push
test
xor
fwait
mov
xor
inc
cmpsb
mov
lock
pusha
and
cmp
add
call
and
outsb
scas
adc
pop
int
push
jmp
rcr
pushf
and
push
gs
xor
movsl
or
stos
in
sbb
lret
xor
divl
or
cwtl
pop
js
dec
inc
dec
loop
cmovns
push
dec
shlb
test
aas
mov
fdivl
fbld
and
mov
cld
xor
mov
mov
jmp
pop
add
sarl
push
jle
into
push
add
xchg
sahf
sub
loope
ds
out
push
lds
insl
jb
jno
cmpsb
pop
insb
jecxz
mov
out
sti
ret
push
mov
popa
ljmp
sbb
push
pop
inc
pop
repz
adc
xchg
mov
into
push
inc
arpl
pop
jl
es
inc
mov
push
cmp
mov
ds
jp
push
aas
lods
shr
cmpsl
mov
xchg
push
push
insl
xor
into
xchg
addr16
pop
nop
xchg
aad
mov
sub
lods
cmpsl
aas
or
repz
xchg
aas
in
in
imul
inc
nop
or
fwait
lar
dec
add
mov
out
jno
insb
lcall
into
out
cmp
sub
add
mov
jmp
push
xor
hlt
add
out
iret
push
aad
mov
mov
lock
mov
sbb
dec
adc
div
jecxz
incb
xor
jb
mov
or
dec
repz
add
pop
dec
add
rol
dec
stos
dec
xor
and
cmp
fsubl
lods
popa
dec
xchg
sub
fidivl
cs
fsubl
jne
and
addr16
aam
add
inc
mov
jmp
shll
nop
in
xchg
cmp
ss
push
movsl
fstpl
in
push
xchg
aaa
cld
aad
mov
adc
movsl
enter
push
scas
outsb
jo
call
mov
cmpsb
and
jle
out
in
add
xlat
and
lret
xchg
add
out
mov
jl
scas
push
or
dec
inc
cli
mov
xor
flds
jno
popl
repnz
gs
fwait
sub
dec
dec
pushf
dec
inc
repnz
sbb
ficomps
or
imul
push
jne
xor
fisttpll
stos
pop
loope
sub
das
xchg
dec
pop
lods
ss
mov
pop
or
or
dec
sub
cli
jmp
mov
dec
xchg
lahf
gs
or
lahf
or
pop
outsl
push
and
mov
test
push
mov
dec
gs
mov
scas
jb
movsb
out
insb
add
in
sbb
dec
push
int
xchg
dec
fistpl
sbb
imul
xchg
add
js
fcompl
cmp
aas
fisttps
sub
add
es
enter
sbb
and
mov
and
sbb
add
push
cmp
sub
xchg
insb
icebp
push
inc
cmpsb
icebp
mov
pop
mov
jno
fs
cs
jmp
pop
lret
jno
imul
sbb
push
inc
sbb
xor
adc
pop
dec
fisttpll
fdiv
jbe
test
jae
das
mov
ljmp
movsl
jae
mov
out
lods
jmp
adc
inc
add
addb
dec
cld
jle
sahf
movsl
or
add
adc
cmp
and
add
test
inc
clc
mov
push
mov
mov
sarl
orb
cmc
int
mov
mov
out
push
adc
pusha
ss
xchg
or
or
sbb
sbb
mov
pop
push
cwtl
sub
pop
lahf
mov
fistps
xor
bound
add
lahf
icebp
out
inc
cmp
movsb
adc
mov
or
adc
sub
dec
or
test
fwait
adc
sbb
adc
cmpsl
fstpl
repnz
push
sbb
pusha
out
cltd
ljmp
emms
add
adc
out
xchg
arpl
mov
je
out
or
test
jne
outsl
pushf
loopne
dec
movsb
jb
or
xchg
jecxz
xor
js
imul
sub
push
test
cmp
or
mov
cmp
xor
add
lods
sub
xchg
mov
jl
push
fs
push
push
mov
sbb
stc
int3
push
decl
jg
add
movsl
cmp
sbb
mov
decl
loopne
push
xchg
push
and
mov
xchg
dec
jl
pop
xchg
inc
repnz
add
add
gs
dec
sbb
sub
ja
or
push
dec
add
dec
iret
mov
jmp
lcall
cmpsb
mov
in
leave
outsb
cmp
pop
inc
and
out
or
inc
push
pop
mov
rorl
jns
popa
or
jl
xchg
lcall
ret
xchg
jecxz
sub
fs
dec
ds
sbb
ljmp
hlt
push
jg
dec
fimuls
cmpsl
in
cmp
fs
nop
dec
mov
jp
jl
int
cmpsb
in
fidivs
fdivrl
enter
mov
aam
xchg
inc
or
repnz
loopne
jbe
stc
aam
shll
mov
mov
fmul
mov
sub
out
cmpsb
xorl
out
push
popa
stos
popa
dec
js
scas
cmp
mov
inc
mov
js
lret
in
dec
les
daa
pop
cli
jmp
jp
cmovnp
cmp
sahf
mov
sti
push
jp
insl
jbe
imul
pop
mov
sub
insl
popa
insl
movsl
dec
sbb
lret
add
mov
rol
jp
imul
adc
iret
pushf
pushf
sbb
scas
mov
mov
aaa
dec
mov
dec
mov
or
lods
lcall
push
arpl
icebp
push
mov
jbe
jp
ss
xchg
jg
sbb
imul
sub
mov
fsubrl
jno
push
and
pop
inc
pop
adc
cmc
repz
repz
and
rcrb
lret
cmp
sbb
iret
xchg
mov
mov
popa
pop
xchg
and
cs
ret
xor
adc
push
std
or
dec
push
jns
bound
test
scas
fdivs
xchg
dec
mov
int
shlb
pop
lar
mov
add
and
std
cmc
cmp
push
sbb
dec
imul
xor
sbb
test
dec
aaa
inc
fs
adc
mov
mov
fildl
pop
std
dec
and
push
hlt
cwtl
or
mov
push
inc
cmp
repnz
imul
xor
fbstp
xchg
dec
aas
push
xchg
test
adc
add
dec
shr
daa
push
dec
jns
jb
lock
xchg
mov
loope
insb
incl
push
mov
negb
add
inc
pop
pop
lock
add
sbb
lret
dec
leave
mov
lds
push
stc
mov
lcall
or
dec
mov
inc
xor
xchg
pop
push
shrb
dec
cltd
mov
or
loope
mov
pop
xchg
bound
sbb
pop
lock
or
xor
and
in
adc
ret
sub
push
fs
cmp
pop
lret
push
ljmp
mov
cmpsb
and
arpl
outsl
mov
sub
adc
mov
pop
mov
stos
add
je
clc
fwait
jmp
notl
aas
cmp
data16
in
push
loop
xadd
jge
adc
fs
lahf
mov
push
sbb
jno
repz
aas
in
dec
ja
inc
push
xor
imul
out
sub
cmp
imul
add
xchg
stos
dec
sbb
inc
xchg
and
add
lret
and
cmpsb
rcrl
mov
and
je
mov
inc
cmpsl
sbb
adc
das
dec
pop
mov
decb
and
push
addr16
jb
in
jp
orb
dec
dec
dec
popa
in
movsl
ret
mov
aaa
mov
sbb
add
adc
in
orb
jmp
add
fs
icebp
sti
fsubrs
adc
mov
ja
xchg
add
lock
push
ja
outsb
in
sti
mov
jb
ljmp
nop
xchg
scas
push
add
mov
movb
repnz
mov
sub
adc
push
cmp
xchg
mov
dec
int3
cpuid
add
fsubp
sbb
lahf
out
mov
mov
sbb
pop
pop
push
xchg
dec
and
dec
aaa
push
xor
shlb
adc
dec
and
or
jmp
pushf
lret
popa
pop
xchg
sbb
inc
imul
adc
insb
mov
mov
pop
xchg
fisubs
loopne
push
mov
mov
pop
dec
out
adc
mov
lods
push
icebp
pop
andb
aad
jno
sub
or
aas
test
xchg
pushf
add
sbb
dec
pop
sbb
pop
in
push
mov
mov
movsl
in
fdivp
dec
mov
loopne
sub
sarb
ss
cltd
sbb
insb
add
cltd
push
fdivp
jb
mov
push
xor
dec
fs
pushf
fidivs
mov
nop
aam
mov
adc
xor
sbb
adc
xchg
jno
xor
sub
mov
xlat
cmp
mov
leave
or
or
inc
jecxz
mov
pop
icebp
or
sub
jb
fists
das
aaa
xor
jp
pop
inc
loope
xor
cs
mov
sub
dec
into
ret
and
dec
out
and
dec
ss
mov
data16
jmp
jno
xchg
xchg
cli
sbb
stos
std
loop
add
inc
sub
mov
scas
push
push
push
out
cld
push
pop
mov
mov
jo
into
add
adc
cmc
xchg
lret
and
je
cmpsl
leave
mov
sbb
mov
mov
mov
sahf
inc
inc
movsb
ret
jb
jmp
test
cs
fldcw
dec
movsb
shll
fwait
dec
add
push
pop
jl
ret
cmp
int3
and
push
dec
sar
mov
into
roll
loope
pop
sub
outsb
popf
fsub
into
dec
pop
aad
fnsave
cli
dec
cli
xorb
pop
shrb
cwtl
push
mov
cwtl
filds
sub
lea
leave
jge
lods
pop
in
mov
dec
xchg
imul
mov
in
mov
push
mov
mov
scas
adc
add
in
mov
mov
sarb
stos
popa
xchg
ss
jnp
lods
fidivrs
and
lahf
sub
dec
ss
mov
decl
jno
cmp
orb
add
mov
in
in
cmpsb
push
mov
jno
aas
add
shl
add
xchg
ja
arpl
rolb
mov
in
ret
pop
or
cmp
cmpl
add
sbb
jo
popf
add
aam
mov
or
out
dec
lldt
negb
inc
nop
push
dec
fidivrl
sbb
pop
sbb
pop
int3
insb
daa
int3
js
movsb
mov
lahf
rolb
or
mov
xchg
ret
sti
mov
sub
int
dec
jb
push
inc
shl
clc
mov
jne
mov
pop
dec
and
sbb
cltd
test
je
nop
andl
in
ds
js
push
dec
lahf
jp
clc
pop
pop
fbstp
pop
inc
add
sub
inc
lahf
loope
dec
adc
pop
clc
dec
ss
cmc
push
add
push
in
xor
lock
pop
sbb
xlat
inc
or
jbe
jbe
sub
nop
outsl
in
jmp
subl
pop
ds
cmp
xor
filds
test
scas
mov
scas
aas
or
sbb
sbb
in
mov
inc
mov
into
jbe
jge
lcall
dec
xchg
addr16
testl
lea
fiadds
in
ret
mulb
inc
sub
or
sbb
pop
cmpsb
xor
mov
mov
mov
dec
imul
push
pushf
xor
in
mov
xchg
adc
add
sahf
add
add
adc
fbld
jne
jo
sbb
fisttpll
add
divl
lcall
sbb
pop
cltd
sub
mov
pop
mov
out
pop
in
dec
adc
mov
or
pop
je
xchg
jmp
inc
jp
xchg
pop
test
mov
movsb
popa
xor
repz
roll
mull
add
adc
lds
add
insb
iret
lods
mov
dec
cmp
in
int3
ljmp
sahf
cmp
add
repz
or
rolb
cmp
daa
cmc
test
adcb
adc
insl
add
mov
or
fwait
xchg
mov
dec
repnz
cmp
lahf
cwtl
dec
dec
test
clc
or
sbb
xor
inc
adc
jo
xchg
sub
out
mov
aad
push
dec
in
clc
jg
repnz
jne
nop
sti
int
push
out
or
frstor
add
inc
mov
mov
cs
sub
jbe
ret
cmovae
lock
fidivl
inc
das
mov
test
mov
mov
sub
push
and
xchg
push
out
jbe
test
push
das
js
outsb
cmp
dec
pusha
mov
fldenv
push
or
divl
add
xlat
sub
lods
mov
mov
movsb
scas
jmp
into
pushf
repnz
test
xor
popa
mov
enter
insl
aas
xchg
movzwl
jge
iret
mov
cltd
bound
addr16
fdivs
mov
sti
inc
inc
pop
ret
fldt
scas
jl
icebp
mov
mov
fs
adc
jge
fbld
sub
dec
call
les
scas
mov
add
add
sub
sbb
push
aad
jns
xor
negb
sahf
push
inc
loope
cwtl
and
mov
test
xor
xor
call
ds
lods
insb
shlb
and
mov
cmc
cld
sahf
sbb
xchg
pop
sbb
dec
or
das
sub
cmp
cli
adc
sbb
rorb
jo
push
out
pop
cmpsl
mov
xchg
mov
mov
mov
rcl
jecxz
sub
fsubrs
stos
push
sti
test
mov
stos
xchg
shrl
cmp
adc
std
hlt
lret
cld
inc
push
sbb
shl
out
dec
ret
in
fisubrl
bound
add
lahf
push
sub
faddl
cmp
nop
inc
pop
push
xor
rcr
adc
mov
in
rcr
push
int
inc
aaa
dec
cmp
mov
addr16
into
adc
shll
mov
mov
shlb
out
hlt
adc
movsb
test
or
mov
icebp
sbb
imul
and
xchg
rcrb
mov
int
fstpt
pop
sbb
or
aas
aad
ret
dec
fdivl
push
add
push
out
jp
adc
push
mov
jmp
pop
push
push
rclb
push
outsb
pushf
dec
sub
jo
or
in
pop
fcoms
push
sbb
lock
pop
cmpsl
testb
xor
outsb
dec
shr
xor
push
mov
nop
ret
sahf
xor
mov
cmpsl
insl
subl
pop
mov
bound
jecxz,pt
pop
fstpt
loopne
xor
jecxz
xchg
arpl
fwait
cmp
mov
push
xor
fistps
sub
sbb
js
mov
dec
imul
xchg
es
push
sub
fwait
shl
js
lock
xchg
add
gs
lds
inc
stos
push
mov
cmp
inc
imul
mov
in
in
inc
fldt
sub
pusha
xor
insl
in
mov
pop
hlt
dec
mov
jo
mov
dec
test
sbb
xor
test
repnz
xchg
popf
into
ja
cmp
or
lods
ljmp
jo
inc
mov
lcall
xlat
scas
mov
mov
cmp
mov
ss
fnstenv
jg
or
insl
pop
sbb
stos
loope
add
lret
jno
sbb
lds
fwait
out
jmp
add
mov
or
jecxz
data16
mov
push
xchg
adc
pushf
adc
mov
xchg
jmp
mov
das
popf
jns
fcomp
pop
rcrb
xchg
shll
xor
push
sbb
dec
sahf
fistpl
and
sub
lea
das
pop
cs
jmp
mov
cmpsb
and
xor
xchg
xor
mov
lret
cmc
lods
mov
push
fdivs
mov
and
pop
enter
icebp
lods
add
mov
pop
aas
aaa
outsb
popf
in
out
inc
mov
test
pop
push
cmpsb
dec
pop
test
mov
and
inc
or
or
pop
push
out
lret
data16
test
push
pushf
push
cmc
mov
imul
iret
sbb
out
jnp
fwait
fcoms
inc
jo
fst
jno
stos
and
inc
leave
sub
f2xm1
pushf
jl
sub
fdivs
iret
mov
mov
adc
add
add
fildll
into
adc
pop
mov
in
lret
sbb
popf
mov
push
out
lahf
fists
cltd
daa
jle
int3
loopne
or
lcall
push
shll
mov
pop
jnp
imul
add
insb
fcmovnbe
sbb
in
push
imul
lcall
adc
ds
ljmp
push
mov
in
aam
inc
mov
imul
ds
mov
stos
add
pop
roll
shr
mov
outsl
shrb
js
pop
xor
xchg
and
inc
pop
xchg
scas
ja
push
mov
mov
into
pop
push
daa
sbb
movsb
jg
fcoml
prefetch
or
shll
and
dec
fsubp
lock
xchg
xlat
pop
sbb
aaa
sub
mov
gs
dec
aam
pop
mov
rcll
push
je
cltd
pop
fwait
daa
addr16
push
insb
mov
out
xchg
fstpl
pop
push
pop
stos
mov
lahf
pop
fbstp
stos
mov
dec
adc
repnz
adc
add
mov
and
adc
insb
inc
push
xor
xlat
adc
push
test
add
cwtl
arpl
jnp
cmp
sbb
push
pop
cld
xor
pop
and
in
add
mov
int3
mov
adc
lahf
ret
call
mov
xor
push
scas
xor
mov
mov
cs
pop
pop
lods
insl
mov
jp
dec
mov
mov
or
xor
std
iret
cmc
push
jo
aas
add
movsl
inc
neg
mov
in
cmp
aaa
hlt
dec
ss
cmp
data16
loop
push
mov
push
push
cmp
add
andl
jne
add
mov
fidivrl
push
mov
pushf
add
push
bound
pop
leave
dec
out
mov
sahf
notl
push
sbb
xchg
loop
xchg
xchg
sub
and
pop
loopne
daa
sub
mov
repz
mov
int
push
mov
imul
and
rcrl
jmp
adc
stos
add
pop
adc
sbb
dec
xor
sbb
mov
jbe
and
orb
or
ret
enter
int
add
fisttps
and
fisubs
push
mov
bound
xchg
repnz
in
cmpsb
stos
sbb
sbb
repnz
adcb
jmp
ja
inc
mov
xchg
sub
inc
xor
cli
jno
inc
jecxz
and
not
and
lret
pop
mov
in
sbb
and
stos
mov
xchg
jnp
dec
daa
nop
mov
sub
and
cmpsl
stc
fcomi
jo
dec
js
xor
or
loope
imull
xchg
adc
je
inc
mull
mov
pop
jecxz
sbb
pop
lret
iret
gs
xor
mov
mov
xor
fsubl
data16
in
outsb
movsb
pop
sub
pop
imul
int
outsl
in
sub
jmp
add
xchg
sti
divw
jae
cmpsb
nop
call
ret
fnstcw
and
dec
out
repnz
lods
addr16
in
imul
jle
xchg
cli
in
push
push
mov
jp
in
xchg
sub
movsl
jno
sbb
movsl
xchg
aad
mov
jmp
into
jnp
mov
add
jmp
push
add
adc
push
std
gs
dec
lret
cmp
fbld
icebp
test
jle
push
mov
mov
test
daa
daa
outsb
shr
jg
dec
mov
fwait
push
fldt
addr16
jno
lods
enter
mov
stos
sub
imul
les
sbb
sbb
push
jmp
and
ljmp
mov
ret
pushf
add
int
iret
mov
iret
in
adc
or
jne
jno
lods
jne
mov
jg
inc
pop
jp
pop
jo
out
sbb
gs
cmp
add
sarb
cli
add
xchg
xchg
sub
push
rcr
test
icebp
testb
scas
pop
mov
dec
jnp
fcomp
mov
lds
pop
mov
add
loop
fildl
enter
insb
dec
pop
cmpsb
cltd
shlb
fcomi
inc
inc
inc
push
aam
xchg
cld
add
ja
push
mov
test
or
cmpsb
sbb
lret
movsb
loop
cmc
xor
push
sbb
sbb
add
jl
jns
aaa
sub
push
dec
adc
xlat
adc
push
ret
and
xor
and
adc
outsl
sbb
call
ds
sti
inc
je
dec
popf
cmp
fs
xchg
data16
xlat
push
clc
push
add
push
xor
in
cld
mov
popf
cmp
xlat
lret
sti
jb
stos
push
xchg
mov
das
dec
std
mov
lock
sbb
stc
pop
leave
xchg
jbe
int3
sbb
push
cmp
int3
fs
test
push
mov
or
dec
adc
jns
xchg
leave
mov
push
push
or
push
es
stos
out
enter
data16
int3
stos
and
xor
pushf
pop
stc
xor
ret
xor
insb
cs
lea
and
xchg
cmpb
ret
int3
dec
or
jbe
cltd
les
cltd
gs
xor
lret
push
repnz
mov
inc
push
dec
fisttpl
bound
jge
sbb
iret
fnsave
mov
dec
or
stos
cltd
mov
or
fnstcw
adc
das
pusha
int
jl
imul
repnz
mov
mov
adc
push
mov
adc
hlt
out
repnz
loope
jmp
cli
sub
adc
cmc
sub
xor
dec
lret
mov
into
subb
shlb
xorb
lret
jne
mov
inc
test
ja
ss
add
ds
imul
jge
inc
adc
pop
sarb
out
xchg
mov
aad
and
fldt
cmp
cmp
mov
clc
in
movsb
loop
insl
jg
jbe
jge
push
mov
dec
sahf
mov
mov
lcall
or
gs
push
fs
sub
test
decl
and
sbb
jle
mov
pop
stos
dec
or
fistpl
adc
inc
mov
stc
cmp
orl
add
out
inc
mov
pavgw
sbb
dec
inc
stos
adc
dec
sbb
std
xchg
mov
xor
into
je
into
mov
and
adc
das
test
out
add
je
mov
aaa
mov
and
popa
mov
push
push
adc
repnz
call
jg
nop
adc
out
cmp
cltd
nop
push
and
xchg
mov
aas
lret
jo
mov
dec
jae
xchg
aam
dec
push
fsts
inc
sbb
loopne
repz
sbb
push
inc
popa
loopne
pop
fmul
lock
aad
sub
push
pop
pop
lret
pop
dec
adc
sub
bound
insb
mov
or
lods
std
mov
xor
fisttps
lea
or
aas
cmc
inc
arpl
insl
jmp
jp
loop
enter
pop
cli
in
loopne
push
jl
xchg
adc
aas
stc
in
stc
sbb
cld
rcll
aad
outsb
jl
in
loop
shlb
cmpsb
pop
xchg
mov
or
add
fists
popa
cs
clc
push
xchg
push
xor
lods
add
dec
mov
mov
into
pop
adc
test
push
sti
enter
das
sbb
or
iret
mov
dec
or
data16
popa
or
pushl
jo
inc
dec
xor
xlat
imul
mov
sbb
mov
adc
std
pop
loopne
adc
cmpsb
hlt
incb
add
out
pop
jnp
push
adc
push
and
dec
stos
adc
pop
in
pop
adc
sbbl
sbb
mov
movsb
es
or
dec
push
out
test
jecxz
pop
dec
bound
jg
mov
add
mov
mov
jnp
adcl
shll
addr16
shl
xor
push
and
sbb
push
daa
lods
fsubp
jno
lahf
jmp
icebp
cmp
xorl
ds
inc
insl
adcl
addr16
lds
mov
and
pop
mov
movsb
cli
jbe
mov
push
imul
dec
adc
lret
fs
pop
push
xorb
xchg
xchg
aas
outsb
and
cmp
cmp
xchg
orl
aaa
test
jmp
lret
sbb
pop
test
lods
bound
mov
pop
in
sti
xchg
in
aad
loope
sub
add
movsl
test
fucomp
push
imul
xorb
nop
jmp
aas
dec
and
push
aaa
xor
mov
cmpsb
lret
xor
repz
add
xor
iret
stos
inc
cwtl
testb
stc
sbb
out
or
bound
in
mov
sub
sbb
xor
xchg
dec
imul
ljmp
es
fbstp
sbb
lahf
sbb
imull
and
sub
std
pop
mov
sub
xchg
fmulp
loope
mov
leave
push
outsb
adc
loopne
sti
rcrb
cs
mov
add
mov
in
cld
dec
mov
rcr
jle
popa
jb
cmpb
shlb
sbb
jae
int3
cwtl
notb
movsl
jl
rorb
mov
mov
jl
dec
mov
sub
lods
mov
inc
push
fmull
sbb
les
mov
mov
aam
xchg
mov
call
sar
aam
and
add
sbb
dec
and
xor
test
adc
cmp
mov
push
outsl
jle
rorl
fwait
rcrb
je
hlt
std
mov
fistpll
das
je
ss
dec
popf
jbe
mov
test
aaa
lret
stos
outsl
test
and
cmp
out
xor
or
mov
pop
addr16
push
stc
xlat
xchg
and
xlat
lods
stos
mov
inc
push
cld
xchg
xchg
shll
mov
iret
lret
test
mov
xchg
fsts
hlt
pop
push
cs
out
scas
lods
js
in
dec
pop
pusha
dec
xchg
pop
push
xchg
dec
test
orb
cmp
cmpsb
xchg
test
mov
add
mov
test
popa
in
lcall
shlb
mov
rorl
or
stos
je
push
dec
leave
pop
add
and
jbe
lcall
std
dec
cmp
pop
xchg
mov
pop
cmpsl
or
sub
cmp
in
pusha
pop
loop
insb
xor
test
adc
data16
std
incb
adc
push
mov
or
mov
insl
daa
xchg
lods
js
sub
rorb
mov
pop
stc
inc
push
push
rcrb
cld
sub
ja
int
popl
jmp
loope
test
jns
sbbb
lds
inc
pop
das
pop
iret
cmove
push
or
call
outsl
sets
outsl
bound
jge
into
fildll
out
push
loopne
aad
outsl
or
mov
xchg
orb
mov
xchg
sbb
and
sarl
and
inc
sub
scas
ret
add
movsl
cmpsl
cmp
xchg
test
pusha
pop
rol
mov
enter
roll
in
jns
orl
test
push
popfw
mov
mov
xchg
insl
sbb
int
rol
mov
inc
fcmovnbe
add
and
xlat
jle
movsl
cmp
inc
jmp
cmp
cmp
es
cmp
hlt
jo
push
inc
sub
lret
out
sbb
adc
dec
xchg
out
inc
jmp
ficoml
xchg
inc
dec
insb
addr16
clc
mov
ds
roll
sbb
int
in
mov
pop
sqrtps
ds
adc
insb
mov
fidivrl
dec
sub
dec
xor
lds
inc
repz
aas
cltd
mov
les
jecxz
fldenv
mov
pop
sbb
add
adc
pop
jnp
jle
leave
dec
pop
ss
push
cltd
in
sub
mov
shr
xor
jle
cld
xchg
cmp
cmp
in
stc
sbbl
aad
fmull
shrl
cld
sbb
or
sbb
add
add
data16
mov
and
or
push
mov
divl
inc
and
xchg
xor
rol
std
mov
add
push
insl
push
add
xor
inc
xor
inc
jno
and
jnp
cs
mov
mov
pusha
call
imul
pop
fs
ss
push
pusha
mov
pusha
dec
mov
fldcw
cmp
add
mov
sub
lgs
xchg
clc
aam
js
test
mov
jbe
mov
pusha
jae
jbe
rcrb
leave
stos
mov
pop
imul
sbb
jne
test
dec
add
mov
iret
mov
xchg
jge
xor
mov
mov
gs
pop
push
push
xlat
or
pushf
mov
pop
inc
cld
fsubrl
jae
mov
add
ljmp
add
enter
lret
xor
fwait
call
mov
out
inc
testl
stos
push
sahf
pusha
enter
sub
fcmovb
cmp
gs
mov
dec
sbb
xchg
fs
dec
lret
cli
loop
test
and
in
mov
jg
inc
xchg
insl
pusha
mov
daa
push
stos
sahf
mov
cmp
jle
mov
xchg
and
jno
loop
push
stos
adc
cmpsl
pop
insl
scas
and
inc
incb
rclb
inc
cmp
int
inc
push
xor
sub
test
pop
into
push
jno
in
inc
mov
shl
sahf
in
add
adc
in
adc
lret
lret
or
test
pop
fs
mov
roll
lret
add
int
inc
ljmp
mov
inc
mov
pop
add
incb
mov
movsb
or
mov
fs
lret
add
movsb
aas
add
sbb
in
outsb
test
lcall
scas
pop
rorb
and
cwtl
out
dec
repnz
stc
out
xorl
pop
pop
lods
ja
pop
adc
pop
lret
or
xchg
cmpsb
fisubrs
shll
or
sbb
mov
add
stos
cmp
cs
xor
xor
stos
sti
push
fnstcw
push
mov
mov
shl
in
mov
jno
mov
jno
adc
xchg
lret
stos
in
xor
lahf
daa
cmc
mov
icebp
hlt
push
ljmp
scas
in
pcmpeqd
imul
in
dec
push
jbe
ror
jno
cmp
mov
push
subb
dec
push
jbe,pt
add
inc
nop
jb
xchg
xchg
sub
cmc
xor
test
mov
fists
mov
std
call
shl
inc
jg
and
loop
out
fldl
mov
stos
lea
and
movsl
imul
adc
sub
cmp
or
mov
mov
add
mov
popa
add
sbb
jmp
ja
addr16
sub
jl
ds
push
in
imul
xor
mov
add
aas
sub
dec
icebp
sbb
jns
ljmp
ficompl
cmpsb
out
jg
mov
add
lret
jmp
test
inc
mov
scas
dec
or
xchg
outsb
inc
pop
loop
ret
jecxz
gs
cli
dec
or
add
das
in
loope
mov
xor
push
push
lret
inc
dec
mov
out
push
je
dec
mov
das
arpl
mov
roll
mov
jae
popf
stos
popf
push
or
sub
push
loope
add
dec
push
cmp
fcmovbe
ret
cmp
mov
out
cmp
pop
mov
jo
shrb
or
pop
sbb
pop
xor
stos
aaa
cli
std
stos
jmp
fsubl
sub
push
jp
xchg
add
cmc
mov
fldenv
or
push
iret
cmpsb
xor
mov
je
sub
mov
lcall
jbe
rcll
pop
data16
and
in
mov
cmp
aas
xor
aas
cli
ds
mov
rol
mov
ja
in
data16
mov
mov
pop
ds
mov
adc
leave
xchg
dec
testb
inc
xchg
loop
add
cltd
and
push
xchg
xor
movsb
mov
ljmp
adc
or
jo
xchg
sbb
push
sbb
mov
pop
sti
cmp
dec
insl
cmp
lahf
int3
sbb
mov
sbb
mov
ja
out
inc
stos
pop
icebp
pop
sahf
jne
cmp
setl
cmpsb
adc
mov
mov
adc
leave
pop
aam
fimuls
dec
jo
xchg
test
sahf
sbb
sti
aam
mov
ljmp
cltd
andl
xchg
sahf
stos
and
inc
xchg
iret
mov
inc
data16
push
sub
out
push
pop
clc
jnp
pop
das
ret
dec
mov
cld
stos
std
xlat
lods
sbb
xchg
inc
pusha
sti
clc
leave
or
mov
in
in
or
cmp
stc
push
xchg
lcall
lds
in
dec
js
and
dec
xor
fisubl
cmc
imul
mov
lods
jno
lock
cltd
ljmp
pop
mov
xchg
dec
lods
shll
pop
mov
stos
sbb
cmc
sbb
sub
sbb
push
iret
and
sbb
pop
insl
pushf
xor
sar
out
cld
sub
add
imul
jns
push
fisubl
rcrb
and
mov
jl
cmp
sbb
and
pushf
jae
popa
cs
fucom
cld
data16
jns
pop
adc
shrl
xor
sub
dec
outsl
popf
push
mov
xor
fstps
dec
add
jo
or
adc
stos
and
shlb
jo
and
bound
sahf
data16
cmp
ret
push
lea
xor
cmp
jne
js
rol
out
in
xor
int
add
out
push
scas
jno
iret
add
mov
sbb
lcall
mov
push
xor
mov
jae
xchg
subl
aam
adc
roll
and
ret
sbb
std
mov
or
loop
ret
xor
push
dec
fildl
in
repnz
add
insb
idivl
jp
sahf
je
rcrl
js
inc
in
stos
out
and
sahf
jle
mov
rcll
aaa
add
jmp
mov
sahf
scas
and
dec
mov
subb
xchg
cmp
and
mov
test
xchg
push
xchg
pop
pop
loop
lret
mov
je
mov
sub
popf
ds
mov
and
movsb
stos
or
push
fists
test
ret
movsl
cmp
cmpl
sub
pop
ljmp
fldcw
and
out
mov
push
dec
insb
inc
and
lret
lahf
pushf
inc
add
pop
ret
dec
pop
jg
gs
sti
aam
outsb
push
or
xchg
mov
stos
xchg
ficomps
lods
or
andl
or
mov
stc
and
jp
jae
icebp
inc
pop
sbb
or
push
jp
outsl
dec
or
sub
jge
sbb
enter
sarb
fs
jl
sbb
cmpsb
sbb
push
lahf
push
nop
xor
or
and
lods
mov
dec
push
aas
push
mov
mov
imul
arpl
inc
mov
into
push
jmp
xchg
push
stos
repnz
imul
push
imul
pop
adc
inc
xchg
jbe
push
lret
inc
sbb
out
mov
stc
addl
pop
xchg
inc
scas
pop
xor
push
xchg
insb
andl
fstl
ret
loope
lods
fnstsw
mov
mov
push
pop
ret
or
xor
or
xor
cwtd
adc
leave
cwtl
sbb
out
add
jo
cwtl
movsb
push
sahf
pop
fdivrs
or
push
xor
sub
dec
ljmp
cli
hlt
test
faddl
inc
inc
pop
movsl
xchg
jle
dec
cwtl
popa
insb
lcall
fs
fisubrl
inc
iret
add
dec
repz
lods
ljmp
sbb
dec
in
aas
and
push
outsb
adc
mov
pop
mov
gs
dec
flds
imul
stc
loop
mov
add
jo
push
mov
ja
enter
inc
adc
hlt
mov
fmuls
jbe
push
daa
push
aad
and
sahf
mov
popf
sbb
pop
adc
stos
adc
sbb
xchg
subb
adc
test
repz
sbb
cmp
out
inc
jne
mov
mov
fistps
mov
mov
pop
mov
hlt
push
aam
movsb
fsincos
push
jl
fistpll
insl
stos
faddp
std
dec
in
sbb
outsb
mov
cli
inc
jnp
sub
xchg
add
xchg
insl
ja
fists
add
scas
mov
cmp
mov
cmp
fmuls
push
lcall
jno
fimuls
mov
push
es
mov
inc
in
repz
addl
cmpsb
sbb
jmp
std
mov
stos
and
insb
and
lcall
in
scas
popl
mov
jnp
jg
mov
fistpl
daa
sub
call
jno
add
push
fsub
mov
js
lods
ja
pop
insb
push
imul
fistps
in
lock
aad
mov
add
push
fwait
test
mov
lahf
fwait
into
push
cmpsb
aaa
addr16
pop
frstor
rclb
mov
ja
fwait
out
jmp
fs
sub
aad
into
push
lea
je
dec
add
loopne
sub
lret
negb
lcall
cwtl
adc
out
push
xchg
xor
dec
test
lret
mov
out
xlat
adc
push
push
adc
fiadds
cmp
xchg
mov
mov
xor
inc
cmp
outsl
ja
bound
adc
mov
sub
push
jno
pop
mov
sbbl
pop
push
adc
lods
and
mov
divl
mov
jo
xchg
adc
mov
roll
or
jae
lret
dec
inc
or
aas
push
lret
dec
ret
cmp
dec
adc
cmpl
xor
lea
adc
sarb
hlt
repnz
pop
cmp
mov
imul
sub
outsb
mov
ljmp
stos
dec
or
dec
test
or
push
sub
mov
cmp
xor
test
popf
adc
mov
bound
sub
push
ds
pop
mov
sub
adc
out
rorl
stos
inc
repz
jmp
push
mov
xor
cmpsl
and
add
orb
mov
xchg
and
jne
aad
test
jbe
and
out
and
jge
cwtl
mov
insl
jge
out
mov
sub
fld
adc
iret
and
je
loopne
pop
mov
inc
js
sbb
insb
cmc
mov
outsl
cmpb
and
ds
std
add
jbe
negb
and
mov
dec
mov
popa
lahf
cmp
add
xchg
aaa
jl
fdivl
add
sbb
imul
sti
arpl
sbb
and
cld
repnz
je
ret
push
push
xchg
cwtl
xlat
push
mov
sar
aad
mov
ficomps
enter
out
hlt
dec
jl
xchg
xchg
call
jno
jo
sbb
loope
pop
cld
out
mov
fcmovu
in
mov
dec
xor
sub
add
lea
push
inc
mov
sub
fxch
mov
repz
fs
arpl
push
adc
imull
ljmp
adc
ljmp
sbb
ret
scas
test
movsb
or
lcall
jae
je
pop
or
jbe
and
ljmp
movsl
outsb
and
roll
clc
cwtl
aad
adc
nop
dec
sti
xchg
out
add
incl
pop
push
ret
xchg
shr
pop
pop
xor
les
pop
mov
std
clc
dec
xor
adc
sbb
icebp
push
push
or
fadds
mov
jmp
push
scas
mov
cwtl
xor
mov
enter
fsubrs
and
stc
loopne
gs
mov
ret
add
shlb
pusha
push
pop
push
fucom
insl
es
call
jnp
mov
fadds
lods
xor
loopne
push
jmp
sti
add
jmp
imul
dec
xchg
fisubs
dec
cmpsl
pop
addl
cmp
lods
pop
addb
leave
jno
sbb
mov
cmp
jne
js
push
pop
aam
mov
pop
rcrl
lds
dec
mov
push
fcmovu
xchg
es
push
jmp
call
imul
push
xchg
mov
cmp
mov
test
ret
fstps
xor
arpl
stc
mov
mov
cmp
cli
fsubrs
mov
mov
inc
lea
fs
lcall
or
push
xchg
xor
sbb
cmp
movsl
mov
jmp
jmp
int3
cmpsl
in
or
mov
ljmp
es
popa
jbe
cmpsb
out
movsl
mov
push
jg
lods
mov
cmpsb
mov
mov
pop
mov
jno
insl
jmp
and
ret
mull
xor
pop
lds
aas
lock
xchg
pusha
popa
dec
and
mov
pop
jne
jae
pop
mov
jbe
xchg
fistpl
ret
push
inc
inc
sub
loopne
arpl
push
in
jmp
lret
loopne
xchg
jle
add
dec
push
push
xchg
pop
inc
and
xchg
shl
aam
lcall
jb
xchg
scas
sahf
mov
subl
fldenv
mov
cmp
pop
enter
xchg
sbb
les
es
pop
xchg
in
jmp
test
push
and
adc
inc
jecxz
mov
shl
stos
push
add
or
aad
or
bound
push
call
or
push
mov
decl
decl
push
mov
in
fnsave
add
mov
or
jecxz
int3
pop
hlt
push
push
pop
mov
mov
mov
add
xchg
cmp
jne
pushf
xchg
mov
sbb
mov
inc
pop
fidivs
cwtl
mov
inc
movsl
xor
mov
pop
imul
hlt
or
sbb
cmp
lret
dec
movsl
dec
sahf
popf
movsb
cmp
fdivl
stos
push
mov
lret
pushf
mov
sahf
pusha
mov
gs
dec
gs
or
dec
mov
xchg
mov
fistpll
or
mov
mull
divb
mov
push
out
adc
in
mov
rclb
or
sub
push
inc
xor
inc
xor
sub
lods
cmp
hlt
jo
lret
leave
push
int3
mov
xchg
push
fxtract
out
add
push
mov
sti
xchg
addr16
cmpsb
push
outsb
inc
add
jle
lock
addr16
sub
jecxz
clc
lahf
add
push
rol
fidivrs
fbstp
aaa
into
xchg
push
andl
ror
fnstcw
cmp
ficomps
jbe
int3
push
out
cmp
add
adc
cwtl
cmp
sub
pop
mov
inc
jmp
in
test
mov
cmp
int3
pusha
sub
inc
negl
jmp
int3
mov
cmp
pop
lods
xchg
cmpsl
outsb
sahf
pop
mov
jnp
mov
call
jl
ret
cmp
cmp
ret
outsb
pop
pop
scas
ja
out
imul
jns
test
push
lock
cld
push
pusha
ret
push
clc
mov
test
mov
xor
xor
out
xor
pop
fistpll
icebp
cmp
cmpsb
mov
jp
add
filds
and
jne
fs
add
mov
jp
out
daa
fcomps
push
jbe
call
into
mov
and
cmp
and
and
add
shlb
aad
sbb
hlt
jnp
push
cmp
sub
dec
sbb
add
clc
xlat
daa
jg
ret
stos
outsb
sub
test
ja
sbb
inc
pop
or
testl
stc
movsl
movsb
ljmp
in
insl
xchg
jl
out
xor
cmp
mov
mov
test
imul
jmp
adcb
test
in
pop
inc
cmp
and
xor
scas
cmpsb
lods
aaa
cmp
fcmovb
xor
mov
jno
xchg
mov
lock
mov
cmc
adc
ret
out
mov
pop
or
loop
mov
mov
sub
push
sbb
cltd
xchg
jne
cmp
test
fiaddl
ljmp
and
xor
jbe
lcall
sti
push
out
dec
jp
mov
addb
not
cmp
mov
outsb
ljmp
add
add
int
lret
jno
icebp
add
xchg
je
insb
sbb
xchg
and
cmpsl
lock
in
jp
add
lds
nop
mov
jb
sub
cli
int3
cmpsl
aas
mov
add
fldenv
xchg
sub
lds
inc
xchg
or
aad
xor
int
push
xchg
inc
xor
push
add
dec
cmp
aad
lea
or
pop
orb
ficoml
jecxz
fistl
xchg
dec
jmp
sti
and
mov
in
jne
gs
cmp
leave
mov
jbe
ljmp
push
sbbb
jae
xchg
or
pop
mov
mov
arpl
jbe
pushfw
xor
xor
push
subb
rep
pop
dec
scas
pop
fwait
mov
jnp
rorl
push
jb
insl
mov
cwtl
push
stos
xlat
sahf
ret
jns
in
pusha
add
or
div
shl
shlb
cli
adc
mov
lods
adc
inc
lods
push
mov
enter
xchg
adc
mov
jb
lods
stos
repnz
push
push
sbb
call
shll
jne
imul
sti
add
xlat
lret
in
adc
xchg
add
ret
subb
jns
jno
out
sbb
repnz
adc
pusha
jo
xorb
popl
jne
mov
lret
mov
dec
cmp
popf
add
mov
clc
sub
test
icebp
or
pop
imul
loop
cmp
mov
dec
or
stc
es
pop
in
cld
cli
fnstenv
jo
mov
fdiv
test
mov
loop
mov
aaa
mov
loope
repnz
lahf
sub
add
cmpsb
lret
loope
lods
sahf
adc
mov
pop
jne
adc
mov
loopne,pt
ja
popl
mov
xchg
add
or
rcr
ja
inc
bound
data16
js
cmc
pop
pop
dec
popf
cmp
daa
int3
cltd
loop
hlt
cmp
sub
cmpsl
inc
add
dec
sbbb
scas
mov
scas
mov
outsb
cltd
dec
loope
sbb
and
movsb
xor
jmp
enter
fisttpll
cltd
sub
outsl
popf
cmpsl
fstps
sbb
ret
ret
popa
cmp
pop
sbb
push
pop
lcall
ret
xor
rcl
bnd
cmc
jle
pop
jne
scas
fadds
sti
daa
je
lds
imull
or
lds
sbb
jbe
subb
sub
outsl
pop
cltd
pop
pop
cmp
mov
sbb
test
mov
rcrl
les
std
loope
xor
aas
push
arpl
loope
jnp
cmpsl
fs
lods
notl
dec
pop
das
out
mov
xchg
pop
sbb
fwait
inc
or
push
push
xor
popa
inc
sbb
pop
in
outsl
dec
and
divl
in
mov
sub
sbb
movsb
jo
xor
pop
fadd
dec
in
xchg
into
jge
add
jns
stos
sub
adc
ret
movsl
dec
add
outsb
sub
jecxz
cmp
popa
into
jae
pop
imul
sub
ljmp
mov
sbb
jnp
lea
dec
cltd
cli
es
sbbl
frstor
xlat
dec
lock
xor
and
jnp
dec
movups
dec
out
pop
dec
jg
clc
call
aam
and
testl
push
mov
jb
mov
fisubl
push
pop
sbb
push
cmp
enter
out
faddl
or
fnsave
mov
xorb
test
arpl
lea
pop
test
ljmp
inc
cmpsl
mov
je
push
cmp
lret
or
scas
push
xor
and
sbb
sbb
in
and
pusha
cmp
fldl
sub
push
cli
jae
jg
dec
and
cmp
mov
xchg
nop
movsb
sbb
mov
mov
jne
and
push
fs
lahf
add
cmp
sub
mov
or
aas
xchg
inc
call
push
mov
rorb
mov
insb
sbb
rorb
cmp
int3
add
scas
mov
push
aam
inc
dec
mov
stc
mov
iret
outsb
inc
and
fidivs
leave
sub
call
scas
mov
mov
mov
sbb
imul
mov
lahf
popa
loopne
and
mov
push
sbb
hlt
lret
sub
add
cmp
sbb
pop
test
jno
lds
fwait
fs
pop
test
adc
cmp
cld
xorl
cmp
idivb
ret
out
jns
iret
sub
out
jg
cs
mov
in
mov
push
mov
jo
js
cmp
lods
mov
and
lods
loop
and
fdivrl
jae
xor
mov
int3
mov
aam
mov
push
int3
xchg
cmp
aad
ficoms
imul
push
jge
pop
xchg
fwait
push
xchg
adc
leave
jl
sub
xchg
pop
sbb
xchg
cld
shr
push
cmpsb
add
cli
das
outsb
cld
cmp
loopne
jmp
jnp
outsb
pushf
loope
xor
dec
xchg
xor
mov
dec
into
aad
xchg
jl
insb
into
inc
mov
lret
mov
push
cltd
push
pop
mov
jg
mov
pop
out
xor
xor
sbb
in
out
cli
jb
mov
fcom
jae
stos
push
pop
xchg
adc
scas
xchg
mov
popf
xorl
jecxz
push
int
enter
les
push
test
aam
cs
iret
ficoms
pusha
ljmp
add
bound
ss
pop
adc
testl
mov
dec
ret
pop
jg
rorb
xor
cmp
icebp
push
adc
pop
push
cmc
rcrl
jmp
add
jmp
out
mov
je
pop
mov
sub
adc
dec
mov
jnp
jbe
jnp
fs
sbbl
cmp
stc
fmull
xchg
mov
push
rolb
xor
sbb
xor
dec
adc
sahf
add
lds
in
cmp
aas
dec
lods
mov
xchg
mov
inc
xchg
sub
dec
jmp
cwtl
subb
cs
outsb
les
push
pop
jle
iret
clc
int3
cwtl
call
sbbb
push
sbb
push
scas
cltd
or
icebp
lcall
adc
fstps
jmp
adc
lcall
cmp
stos
idiv
in
mov
or
les
fistpll
push
pop
pop
out
adc
test
jge
mov
imul
sbb
cmp
rorb
das
int
aad
stc
pop
mov
fmuls
aaa
xlat
test
adc
push
fdivp
movsl
scas
push
adc
mov
and
mov
xor
movsb
insb
or
jbe
enter
shr
and
bound
push
cmpsl
push
mov
icebp
jp
or
mov
rcrl
das
test
icebp
mov
xchg
push
jp
es
adc
jnp
les
and
dec
jecxz
dec
icebp
or
push
xlat
sub
push
rolb
hlt
xorb
mov
shl
mov
mov
jmp
sbb
fwait
mov
dec
aaa
shll
push
ja
cmp
bound
adc
fsubrs
nop
outsl
jb
out
ret
nop
mov
push
xor
cld
adc
push
stc
stos
iret
inc
lock
xor
xchg
repnz
jne
sub
addl
aas
adc
out
inc
pop
jmp
adc
out
pop
push
popa
push
sub
mov
adc
inc
in
ljmp
sub
ret
or
stc
push
loopne
or
xor
xchg
xchg
jp
fcompl
mov
mov
or
iret
mov
test
vpand
out
mov
jae
lahf
in
push
imul
jae
push
pop
ss
ljmp
dec
add
xchg
mov
jle
aam
in
mov
cmpsb
cmp
filds
xchg
lea
mov
dec
ret
es
mov
cli
pusha
sbb
lret
mov
leave
sub
pop
outsb
adc
adcl
add
icebp
insb
jecxz
mov
in
pusha
outsb
jl
inc
pushf
test
cmp
stos
pop
test
sub
xorl
cld
push
cltd
div
pop
dec
xchg
outsl
jg
mov
insb
adc
adc
and
push
gs
pop
push
pop
imul
push
in
cs
jae
adc
push
lret
pop
cs
in
xor
xchg
shlb
cltd
mov
sbb
push
je
inc
in
xchg
jge
int3
push
stos
and
or
testl
movsb
dec
cmp
mov
cmp
daa
das
sub
push
cmp
aaa
adc
cmpsb
mov
in
dec
xlat
cmp
sbb
sub
inc
pop
mov
fwait
push
pop
and
cli
xchg
xor
pop
loope
fistps
movsb
lods
dec
push
dec
test
cmp
fcompp
in
xor
std
scas
lods
call
mov
or
test
or
lret
push
cmp
ret
push
icebp
lea
icebp
mov
test
dec
push
inc
outsl
xorl
imul
fwait
std
dec
adc
cs
lea
xchg
lret
xchg
push
mov
call
jle
sub
ljmp
dec
out
xor
fnstcw
push
adc
mov
ss
shll
cld
pop
push
jo
jns
in
in
lock
mov
icebp
cmp
cmp
mov
scas
lods
out
movsl
aaa
push
adc
push
jmp
dec
aaa
push
dec
das
fstpl
out
or
out
fidivrl
mov
inc
jb
andl
fdivl
xchg
js
push
xchg
mov
fbstp
hlt
jg
pop
mov
or
push
mov
xchg
xchg
and
push
ds
shll
lcall
stos
mov
pop
xchg
push
sub
xchg
xchg
push
movsb
lahf
sbb
and
mov
cli
rolb
jmp
sbb
push
loope
andb
js
inc
das
jmp
ljmp
cmp
pusha
fs
fdivrp
fmul
cmpl
rcll
fst
and
mov
cwtl
sahf
pop
mov
repz
mov
pusha
push
sub
mov
jne
movsl
rcrb
cmp
scas
jnp
mov
push
out
inc
sbb
in
sub
test
icebp
jp
rep
andb
mov
in
lock
adc
adc
cmp
jle
pusha
xchg
lods
enter
jno
xchg
mov
out
movsl
outsb
add
jnp
inc
mov
cld
lret
mov
jno
aad
in
insl
xchg
mov
lcall
lahf
sti
jmp
movsb
push
cmpsb
cld
sbb
mov
test
sub
push
rol
cmpsb
stos
pop
gs
inc
xchg
std
pop
in
jae
mov
insb
mov
fimull
push
adc
icebp
out
mov
lock
aad
hlt
loope
imul
jno
sbb
pop
lds
adc
mov
push
inc
outsl
sbb
mov
clc
iret
mov
popl
xchg
mov
es
inc
aaa
cmp
es
jge
adc
test
pop
jnp
adc
rclb
stos
and
fbld
jecxz
mov
sub
pop
shll
lods
push
xor
push
inc
pushf
aas
insb
mov
aam
pop
rcll
pusha
jge
pop
mov
lahf
into
int3
adcl
fstps
or
sub
xchg
mov
sbb
dec
or
mov
mov
pop
xor
rcll
mul
add
cli
jmp
mov
jge
dec
jge
mov
xchg
int
and
rolb
fisttpl
fiaddl
jae
sbb
sub
inc
push
loopne
leave
mov
and
add
push
jg
orb
cmc
jle
sub
or
mov
push
shrl
inc
adc
mov
nop
imul
and
xchg
test
andl
aaa
inc
ja
in
sahf
jne
dec
or
cmpsl
xchg
cmpsl
add
scas
js
mov
ljmp
fmul
repz
stos
mov
push
sub
aad
insl
or
je
jmp
lock
mov
sub
packuswb
xor
add
aaa
into
xchg
je
jecxz
popl
inc
push
inc
cmpsb
adc
and
inc
shrb
xchg
je
mov
mov
or
and
fstpt
push
mov
into
hlt
in
mov
lods
mov
fadd
dec
xorl
xchg
cmp
ret
push
lods
aaa
or
fld
aam
mov
leave
arpl
adc
andl
and
xchg
shl
stos
fisttpl
mov
jl
mov
xchg
mov
std
adcb
popl
filds
in
jo
dec
adc
mov
mov
xchg
fs
add
mov
mov
cltd
cs
sub
cmp
adc
sub
push
cwtl
scas
sbbb
inc
out
xchg
mov
imul
jnp
pop
movsb
movsb
jge
mov
pop
xchg
ret
lods
jecxz
mov
cmpsl
add
sbb
aad
push
inc
test
mov
adc
xchg
sbb
mov
mov
mov
push
pop
loop
cmp
inc
sub
adc
or
mov
push
lock
jmp
dec
mov
sahf
pop
push
push
ret
pop
imul
push
pop
testl
dec
mov
or
sub
mov
mov
stos
xchg
clc
pop
test
sti
or
cmpsl
sub
mov
push
mov
adc
mov
lods
sbb
aad
repz
out
push
and
dec
push
ret
in
mov
icebp
sbb
cmp
pop
dec
xor
rcrl
icebp
loop
xor
lds
pop
outsb
mov
sbb
or
mov
xchg
xor
xor
test
sub
insb
mov
cmc
testb
stc
aaa
lods
xchg
ljmp
mov
xlat
xlat
out
jle
push
negb
jecxz
stos
test
cmp
pop
mov
push
insl
mov
repnz
lret
cmc
add
mov
dec
mov
jo
cwtl
inc
scas
inc
or
lret
data16
jecxz
lods
fdivl
les
ret
loope
dec
push
call
pop
dec
call
add
repnz
pop
popf
test
mov
push
leave
mov
aad
push
pop
fisubl
push
iret
adc
subl
sub
negl
bound
into
push
add
ffree
mov
shl
pop
inc
pop
int
inc
fmull
jb
popf
daa
add
mov
in
add
xchg
lods
call
scas
jge
pop
mov
adc
iret
sub
push
and
adc
out
mov
and
xchg
jmp
cmp
filds
or
fucomi
inc
out
ffreep
lock
scas
mov
and
out
jbe
jge
push
test
movsb
sbb
mov
xchg
jnp
mov
jb
inc
orb
mov
les
jl
xor
pop
dec
test
mov
movsb
push
fwait
stos
outsb
dec
mov
cmp
xchg
enter
lret
xchg
or
iret
je
int
loop
fldcw
pop
sub
cltd
aas
leave
ret
sarl
mov
bound
dec
pop
into
pop
adc
mov
ja
push
mov
pop
mov
push
lret
out
mov
std
xchg
pop
adc
in
xchg
push
jp
adc
lahf
rcrb
popf
push
dec
xchg
cmc
cwtl
sahf
cmpsb
lds
sub
mov
or
xchg
jmp
pop
mov
push
aaa
aad
mov
lret
jecxz
or
aad
sbb
cld
mov
add
repnz
bnd
jmp
or
arpl
leave
pop
popf
sti
aad
out
cwtl
mov
clc
mov
sub
or
mov
loopne
arpl
inc
outsl
mov
in
xchg
xchg
fs
stos
leave
incl
out
repnz
out
sbb
mov
sti
sub
imulb
jae
loopne
aad
popa
xor
push
and
shrb
mov
mov
cmc
shll
imul
inc
xchg
xor
clc
inc
icebp
pop
insb
ret
push
pop
shl
aaa
ljmp
frstor
lea
adc
popa
fcompl
out
js
dec
sbb
call
xchg
mov
or
and
or
in
and
and
mov
adc
cmc
sbbb
rcrb
sub
jnp
xchg
cmpb
into
xchg
mov
pop
ret
out
pop
fadds
or
and
das
into
jno
xlat
jp
xchg
adc
jp
test
and
push
cmp
sub
pop
adc
daa
mov
lock
dec
ret
xchg
sbb
call
lret
xchg
or
xorb
lods
nop
ret
cmc
gs
imul
mov
fwait
incb
ret
pop
xchg
dec
in
sub
push
mov
push
aas
nop
adc
pop
scas
or
and
lret
sbb
ljmp
sub
xchg
or
inc
je
stos
push
daa
andl
loope
xchg
cld
cmp
scas
fwait
mov
sub
loope
scas
xchg
les
push
sahf
repz
mov
push
and
into
cmpsb
into
dec
sbb
shrb
jae
stos
push
inc
test
scas
xchg
testb
cmc
xor
out
lret
mov
out
xor
xchg
loop
and
xchg
enter
les
scas
pop
cmp
jns
je
repnz
sbb
rcrb
lods
sbb
sbb
das
xchg
pop
or
mov
pop
lods
movsb
fdiv
into
fldt
mov
fwait
lock
mov
pop
xchg
push
pusha
ja
jecxz
ret
push
push
fisttpll
add
xchg
fwait
xchg
hlt
loope
fmulp
lds
mov
pop
or
nop
xor
fldt
jmp
ds
cmp
sub
jg
add
ljmp
xor
xchg
jge
loopne
cwtl
cwtl
sti
dec
mov
pop
xchg
fwait
test
stc
pop
mov
leave
popf
cwtl
sbb
aas
xorl
ret
xor
xor
movl
xchg
xlat
mov
cmp
inc
jb
nop
mov
mov
stos
push
pop
mov
dec
add
mov
mov
aam
push
js
xchg
mov
adc
insb
dec
sbb
loope
pop
xchg
in
fisubl
test
insl
adc
in
nop
orb
xchg
xchg
jle
xor
fdiv
loope
outsl
mov
int
divl
adc
inc
jns
sub
ja
push
push
cmp
xchg
lret
jne
aam
pop
stos
mov
fbstp
ds
pop
es
push
mov
call
outsb
lock
cmc
fstps
fistpll
push
push
test
xorb
cmpb
scas
popf
cmc
xchg
loop
pop
testb
dec
inc
pop
mov
cwtl
cmpl
push
xchg
addr16
stc
cmp
push
fsubp
cmp
jle
push
sbb
and
or
xchg
mov
jecxz
js
movsb
cli
mov
mov
inc
pop
add
aas
inc
pop
push
mov
lock
dec
pop
hlt
jmp
scas
xchg
mov
test
jg
hlt
add
je
sbbl
or
inc
scas
loop
pop
or
pop
fcmovbe
shlb
pushf
adc
adc
mov
subb
outsb
sub
mov
jl
gs
mov
pop
dec
cmc
aam
xor
rolb
leave
cwtl
in
ja
xchg
addr16
or
dec
push
and
jl
fldl
mov
and
int
loop
mov
jno
fimull
fsub
and
addr16
pushl
fs
rcrl
imul
test
adc
test
cs
fisttpll
cmp
lock
adc
dec
mov
clc
mov
leave
sbbb
ret
inc
xchg
mov
jbe
out
pushf
enter
shrl
imul
and
inc
iret
add
mov
fdivs
xchg
or
mov
add
cs
cmpxchg
pop
sbb
pop
nop
aad
rorl
fs
lahf
xlat
or
fstps
ja
in
mov
and
scas
add
aam
jecxz
xor
into
pop
into
pop
or
cmc
ss
xor
dec
adc
in
push
popa
mov
xor
lea
ret
lcall
scas
mov
iret
inc
adc
aaa
inc
or
jecxz
dec
in
lods
adc
jo
scas
into
mov
jns
add
cmpsb
jp
mov
xlat
cmp
addr16
dec
jmp
add
lods
inc
jl
push
inc
xlat
add
mov
fldl
push
pop
movsl
shll
xchg
mov
pop
movsl
jnp
add
shlb
outsl
and
xchg
aaa
filds
movsl
addr16
lahf
cwtl
outsl
xor
adcb
push
fimuls
jecxz
mov
adc
xchg
push
ficomps
lcall
jmp
ja
cs
mov
and
mov
xchg
loopne
std
or
hlt
hlt
mov
fsts
push
outsb
jmp
test
adc
inc
push
pop
fwait
imul
dec
scas
inc
mov
notl
cld
hlt
add
and
fwait
aaa
jmp
addr16
jbe
mov
ja
xchg
sub
xlat
stos
adc
and
into
shlb
cmp
push
fucomi
pop
pushf
inc
into
andl
push
ss
pop
lock
fistpl
div
xor
xor
test
xor
popa
shr
in
mov
scas
dec
rorl
add
adc
js
xor
rclb
and
stc
popf
std
xor
jp,pt
sbbb
gs
div
movsb
lcall
add
ret
and
inc
inc
in
adc
scas
cwtl
mov
pop
das
xor
xor
outsb
push
fiaddl
mov
je
ja
cmp
dec
sub
cmc
mov
xchg
jno
mov
in
addr16
sbb
addr16
mov
push
insb
sbb
hlt
add
hlt
pop
or
insb
stos
cmp
push
xchg
pop
sbb
daa
sbb
sbb
das
push
pop
scas
lods
jae
pop
or
andl
xchg
cmp
sub
and
hlt
sbb
mov
pop
fsub
inc
dec
pop
add
call
jnp
push
ficoml
jae
dec
test
cld
jg
xor
dec
pop
ja
pop
mov
push
dec
lret
inc
pop
test
pop
mov
test
imul
adc
cmpsl
adc
imul
inc
cmp
pusha
fdiv
mov
mov
fs
mov
mov
ja
push
movsl
mov
clc
stc
sbb
xor
in
stos
cmpl
sub
mov
dec
stc
das
lcall
lds
add
test
int3
aad
push
daa
xor
cmpsl
or
scas
daa
mov
dec
inc
inc
dec
jmp
and
leave
pop
mov
lret
mov
outsl
pop
dec
jl
icebp
das
xchg
insb
dec
rorb
sbbb
fisttpll
pop
xor
cld
shlb
sbb
push
cli
out
mov
mov
jg
xchg
xchg
in
mov
sbb
loopne
mov
rcll
sar
push
ret
inc
or
mov
fsubs
pop
shl
mov
das
loop
cmp
add
dec
imul
mov
scas
xchg
dec
decl
sbb
cmp
mov
jae
sbb
push
inc
out
sbb
pop
cmp
mov
or
sbb
out
out
jae
xchg
dec
xor
sbb
xchg
xor
mov
mov
mov
mov
mov
fs
lds
sahf
jg
inc
je
setno
mov
sub
cltd
jle
or
lods
iret
inc
dec
ret
mov
sar
add
sahf
insl
fidivrl
bound
and
in
xorl
sahf
insl
rclb
call
push
int3
mov
lret
es
es
movsl
movsl
cmp
out
insl
out
xchg
mov
cmp
cltd
and
movsb
jne
xor
test
xor
ljmp
ret
sti
mov
popa
push
xchg
into
xor
add
jge
add
xchg
stos
inc
sbb
filds
orl
lock
push
rcrb
push
or
scas
popa
adc
xchg
stos
push
in
fwait
pop
mov
dec
and
pop
stc
add
jg
fnstcw
mov
fldcw
adcb
fs
or
mov
aas
add
sub
mov
stos
rclb
ja
mov
jno
and
xor
cltd
mov
add
sub
mov
dec
fbstp
pushf
push
pop
adc
cmp
in
je
xchg
pop
cmp
sbb
ret
inc
inc
mov
std
cmp
insb
jae
push
mov
cmc
xor
std
jne
adc
notb
pop
fistpl
movsb
into
sbb
ffreep
roll
xchg
scas
stos
fsub
daa
bswap
fstl
adc
pop
push
pop
cs
mov
pop
inc
push
sti
push
mov
fdiv
cmp
jno,pn
stos
adc
xor
das
aas
push
lods
rcll
fucomp
pusha
cmpsl
test
pop
push
and
push
in
test
cmp
rdpmc
lods
mov
out
inc
cmpsl
xchg
inc
add
fxch
pop
bswap
shlb
sbbb
insl
inc
sub
lods
movsl
dec
sbb
icebp
cmp
mov
pushf
mov
dec
pop
fisttpl
sti
or
shll
ljmp
adc
movsb
fwait
pop
pusha
push
out
mov
insb
sbb
pushf
rorb
lidtl
scas
mov
rorl
bound
inc
mov
out
cmp
pop
inc
fistpl
fildl
ret
je
dec
rcrb
dec
test
cmc
popa
push
lahf
xchg
jb
in
mov
shll
arpl
add
arpl
enter
addb
insl
dec
mov
sub
ss
orl
leave
xor
in
xor
repnz
lahf
mov
jl
jb
jae
xchg
inc
mov
in
lds
out
jnp
aam
mov
mov
pop
and
pusha
fwait
sbb
push
mov
pop
ja
repz
mov
sbb
push
lods
fisubl
or
mov
or
sub
xchg
dec
les
fidivrl
mov
pop
inc
cmpsb
movsb
and
sbb
jne
add
ret
leave
les
aas
cwtl
mov
ret
in
icebp
sub
mov
insb
and
lret
xor
ss
cmp
push
mov
mov
std
dec
clc
jbe
lahf
int3
lods
sbb
shrb
cmp
and
pop
xchg
push
push
hlt
rorb
pop
jnp
ljmp
sub
add
add
xlat
push
andl
loope
xchg
adc
add
lds
and
sbb
insl
js
pushf
in
out
xor
xchg
mulb
inc
adc
fwait
lret
add
xchg
adc
mov
enter
in
mov
push
or
lds
call
mov
adc
fldcw
outsl
sub
xor
adcb
dec
lods
cmp
push
enter
dec
pusha
jle
push
shll
lcall
imul
insb
fldt
xchg
testl
lock
inc
insb
dec
loop
and
inc
out
jg
in
ror
push
lcall
sub
pop
into
inc
xchg
popf
push
xor
push
mov
inc
scas
dec
out
and
xor
mov
lret
fadds
in
add
leavew
out
lds
out
mov
or
or
movsl
jge
rorl
ds
jmp
jp
lret
int3
sub
push
adcb
inc
cmp
in
test
adc
ljmp
mov
jl
imul
popa
cs
std
jns
aaa
popa
cli
xchg
mov
bound
lahf
lcall
stos
mov
or
int
dec
sub
push
xor
fists
fcmovnu
pop
push
cmp
cs
pop
mov
mov
stos
into
gs
sahf
inc
dec
out
lcall
pop
out
jbe
rorb
int3
ja
mov
lock
jecxz
stos
in
and
jecxz
pusha
fs
mov
movsl
push
lcall
mov
jns
push
lcall
mov
pop
push
fmull
leave
mov
enter
jbe
push
mov
sub
or
xor
fbld
cmpsl
dec
scas
lcall
cmp
and
imul
and
push
or
das
arpl
test
xor
mov
pop
add
cmp
lock
mov
data16
enter
les
pop
ficompl
out
out
sti
lret
pusha
lods
cmp
pop
xchg
testl
cli
xlat
std
mov
sbb
cmp
mov
push
test
arpl
push
and
mov
mov
inc
loopne
add
xchg
int
sbb
inc
sarl
lcall
mov
jl
add
movsb
cltd
mov
inc
sub
and
jle
lods
sub
into
aaa
imul
cwtl
add
xchg
shr
cmpsb
in
xchg
jmp
iret
mov
sahf
add
sti
cmp
fistps
xchg
mov
dec
sbb
and
ss
xor
xchg
pop
inc
pop
daa
mov
repz
mov
stos
addb
loopne
cmp
jge
in
test
movsb
fisubl
out
adc
jecxz
add
gs
ret
xchg
fisubs
je
sti
lret
enter
rclb
fcmovb
not
mov
insb
std
and
xor
fwait
js
nop
cmp
xchg
jl
or
and
lock
lret
add
or
aam
leave
loope
cmp
add
fstl
loopne
insl
push
push
in
ret
mov
push
addr16
or
lret
cs
jnp
frstor
jl
in
mov
dec
xchg
movsb
xchg
ret
add
std
inc
push
ss
or
pop
jne
adc
insl
std
inc
imul
or
adc
fisubrs
js
mov
dec
cmp
pop
repz
popf
jnp
add
cmc
cmp
add
lret
cmc
lods
jp
jecxz
ljmp
xchg
add
adc
push
add
outsl
jns
andl
and
divb
adcl
lods
jecxz
jo
rorb
jge
mov
jb
or
shll
outsl
popa
and
push
std
inc
xlat
jbe
mov
xchg
out
out
cmc
jmp
jl
adc
dec
pop
dec
addr16
je
sub
lods
xchg
ret
mov
je
fidivs
or
sub
sbb
inc
mov
iret
addr16
notl
cmp
imul
mov
repz
stos
inc
adc
fimuls
mov
test
add
sbb
lods
aas
inc
or
insl
cmpsb
xchg
jno
ret
inc
xchg
mov
cmp
pop
sub
pmuludq
js
adc
jg
loopne
mov
mov
xor
mov
test
sti
mov
sub
inc
cmp
or
loopne
add
dec
add
sbb
mov
pop
mov
add
jno
cmc
jmp
dec
out
rcrb
xchg
jae
mov
inc
mov
add
sarl
pop
and
push
ja
hlt
dec
adc
cwtl
xchg
cmp
push
mov
and
pop
xchg
mov
jne
loopne
cwtl
adc
popa
mov
push
sub
mov
shll
out
dec
dec
cli
imul
pop
lds
dec
cmc
dec
mov
std
bound
stos
mov
xchg
insb
test
bound
push
push
mov
movswl
mov
jae
cmpsl
aaa
lret
pop
pop
rcr
fisttpll
lahf
ds
jnp
jb
jmp
andb
unpckhps
add
inc
pop
mov
xchg
faddl
dec
repz
loopne
xchg
cltd
mov
xchg
cli
cmp
pop
mov
stc
out
jne
divb
jo
lods
sub
jl
add
cmp
push
roll
or
adc
dec
imul
loop
and
sub
mov
call
popf
nop
jmp
mov
mov
adc
jae
repnz
sbb
adc
dec
jp
mov
or
lret
sub
divb
pop
lea
das
sub
mov
inc
xor
mov
or
test
xchg
popf
roll
jl
mov
sub
pop
outsl
inc
aam
sub
add
push
and
and
dec
mov
scas
sbb
fwait
jmp
push
inc
dec
sub
cld
jecxz
jno
sub
es
neg
mov
add
push
ror
pusha
or
jo
xchg
and
cs
dec
int3
insb
js
ljmp
cmp
mov
dec
in
fiadds
call
sub
rcrb
pushf
dec
adc
push
dec
outsb
mov
rorb
aaa
mov
cmp
cmp
out
jnp
mov
add
adc
stos
mov
pop
push
inc
mov
inc
fidivs
xor
stc
jbe
icebp
jae
jg
mov
pop
jb
inc
iret
push
add
pop
mov
or
call
mov
jne
pop
push
out
cmpsb
rol
mov
jl
pop
fiaddl
sbb
push
outsb
adc
out
stos
ljmp
mov
movsl
ja
fcompl
and
daa
jl
cmp
adc
sub
lret
cltd
out
shlb
mov
mov
mov
aam
xchg
repnz
or
mov
stos
inc
jno
pop
add
mov
add
mov
jns
jae
jmp
sub
int3
dec
imul
cmpsl
mov
xor
sub
inc
testb
cmpl
and
sar
pop
aas
ja
nop
rcr
sbb
pop
repnz
mov
xchg
push
call
rorl
push
jle
cmp
adc
scas
mov
push
adc
mov
cmpsl
cmp
mov
mov
jnp
movsl
cmc
aaa
popf
mov
test
ss
jb
add
xchg
inc
int3
jle
xorb
jns
dec
ret
sti
in
mov
dec
imul
dec
mov
xor
in
xchg
addr16
xor
vmovdqa
sub
xchg
ja
fnsave
mov
int
dec
cli
cmp
dec
pop
add
ret
repz
adcb
outsb
dec
in
pop
cwtl
arpl
jno
inc
push
stc
mov
dec
popa
rcll
cmpsl
iret
les
mov
popa
rcll
dec
sub
add
fsubrl
ss
add
cmc
fdivrs
nop
sbb
fcompl
jp
sar
imul
pop
ret
adc
mov
push
xor
xor
shlb
das
jo
popa
xchg
cmp
sbb
std
pop
sbb
shr
cmc
dec
jg
popf
fwait
scas
xchg
sub
sbb
jg
out
mov
rcr
lcall
clc
pop
cs
mov
or
mov
lods
cmpb
sbb
outsl
sti
repz
mov
push
cmp
mov
pop
cwtl
pop
dec
insb
inc
lods
dec
or
push
sbbb
repnz
jmp
sub
and
faddl
cmp
cli
xor
push
pop
stos
pop
adcb
sub
mov
mov
add
lret
inc
add
dec
fdiv
dec
pop
mov
xlat
dec
les
inc
sbb
xchg
xchg
repz
mov
mov
xchg
sub
aas
mov
push
push
ja
cs
or
pop
mov
cmc
arpl
sarl
jne
sbb
cmc
rclb
ret
popa
loop
addb
cld
aam
push
mov
loopne
mov
mov
push
stos
aas
or
pop
inc
xchg
stc
jb
cmp
mov
mov
mov
rcrb
xchg
push
add
sub
sbb
sbb
dec
cmp
mov
scas
pop
or
in
es
sub
mov
or
jae
movsl
lods
sbb
andb
ret
sahf
mov
in
cmc
mov
jno,pt
insl
in
sub
test
mov
sti
ljmp
loope
cmp
dec
cli
aas
lret
xchg
mov
xchg
out
test
fadd
jmp
in
idivb
sbb
sti
mov
add
sbb
push
call
dec
xor
out
inc
mov
dec
xor
lret
mov
xor
je
mov
scas
xchg
mov
out
sub
xchg
aad
xor
enter
xchg
jbe
in
cwtl
jns
mov
packssdw
sub
xor
push
mov
cld
inc
inc
jg
inc
or
sahf
jl
fstpl
sbb
or
inc
mov
mov
pop
push
movntq
fnstsw
lock
mov
pop
lock
in
mov
mov
lret
mov
mov
arpl
xchg
out
pcmpeqb
adc
into
cmpsl
testl
aad
push
bound
sbb
shl
adcl
int
xor
test
push
rcrl
mov
cmp
jbe
push
insb
dec
in
dec
dec
stos
adc
std
add
inc
pop
and
and
mov
mov
jmp
ret
stos
cmp
movsl
mov
shll
push
in
mov
das
add
sahf
testb
xor
sub
sub
scas
imul
xchg
lea
pop
jle
dec
and
test
test
fstpl
std
and
mov
mov
adc
push
adc
jns
pop
xor
scas
mov
xchg
adc
movsb
mov
fadd
js
push
or
adc
daa
fs
incl
test
rorl
or
jno
mov
clc
mov
je
sti
and
inc
dec
lret
jge
dec
icebp
mov
popa
push
mov
xchg
cmp
cmp
adc
add
cmpb
and
test
pop
testl
out
das
xchg
int
xlat
sbb
adc
mov
dec
lahf
into
jae
repz
pop
enter
jae
out
xchg
lock
fistps
sahf
xor
iret
mov
push
das
cmpsl
enter
imul
repnz
mov
lods
xor
sbb
cmpsb
adc
mov
push
lods
and
jo
rcrl
push
add
sbb
inc
es
sub
and
pushl
andb
shll
aaa
test
shll
out
dec
cmpxchg8b
sahf
lahf
fwait
sbb
mov
ja
repnz
push
clc
je
adc
xor
scas
mov
mov
out
cmp
clc
in
ret
adc
clc
and
out
stc
or
push
addb
cmp
xor
jb
or
mov
in
sub
jp
push
lods
xchg
add
or
push
xor
dec
aam
in
xchg
jg
push
or
jecxz
push
stos
inc
jnp
cmp
stos
fstpt
imul
fldcw
lds
fdivrs
stos
sbb
adcb
mov
sub
js
inc
mov
add
sbbl
lcall
dec
sbb
js
jnp
xlat
mov
int
inc
aaa
mov
int
push
inc
sahf
push
in
sub
jp
jnp
dec
jae
mov
in
cmpl
push
inc
cltd
add
xchg
dec
aaa
stos
stos
js
movsl
inc
sbb
fstpl
sbb
pop
shr
add
mov
out
cmp
sub
or
in
mov
into
in
mov
call
inc
push
push
fs
cmpsl
dec
pop
jp
sar
mov
pusha
les
std
jne
insb
scas
push
lods
insb
adc
cvttps2pi
scas
cmc
sub
pop
mov
popf
adc
fs
sbb
iret
shl
out
popa
dec
push
movl
mov
jns
or
jb
mov
scas
shl
inc
fwait
popa
mull
shrb
ljmp
add
je
sarl
repnz
pop
dec
and
xchg
or
push
sbb
stos
scas
mov
sbb
jns
cmpsb
cmp
in
sbb
icebp
pop
repz
adc
mov
adc
sbb
aad
into
sbb
or
cs
cmc
ljmp
sbb
sbb
and
mov
dec
pop
sti
in
jb
fdivrs
sbb
inc
jns
cs
add
xor
imul
aam
notb
data16
sub
fs
ret
test
fstpl
and
cmp
stc
push
and
pop
pop
ret
xchg
inc
mov
mov
cmpsb
pusha
pop
sar
inc
out
mov
icebp
ja
pop
outsb
popf
add
mov
ret
pop
cltd
lahf
inc
dec
pop
cmpsl
xchg
xchg
cmpsb
fs
subl
addr16
jbe
cs
ljmp
pusha
repnz
or
inc
js
and
sbb
push
int
mov
push
lods
cli
push
push
nop
in
je
out
jp
jg
sub
sti
sar
mov
cmpsb
pop
daa
test
xchg
jns
faddp
xchg
mov
push
into
cmp
lret
cs
lret
lds
push
cmpsb
mov
imul
xor
cli
jl
test
dec
add
mov
inc
cmpsb
mov
leave
pop
outsl
dec
data16
and
jp
loop
jle
in
jp
das
imul
inc
pop
cmp
inc
arpl
jecxz
in
shll
push
jnp
jns
out
mov
xor
outsb
aam
stos
sti
jae
aam
push
std
int
bound
sub
pop
adc
add
out
insb
cmp
ds
subb
xchg
mov
aad
int3
or
rcrl
xor
cmpsl
rorb
push
mov
sub
lret
jno
sub
jno
xchg
aam
loop
add
sub
addr16
xchg
add
add
lret
xlat
xor
adc
aam
test
push
fstpl
mov
and
push
iret
pop
mov
pop
insl
les
jle
outsb
xchg
lods
push
imul
aam
push
scas
mov
fwait
insl
add
sarb
pop
jb
xor
divb
inc
or
push
xorl
rclb
adc
add
jo
mov
and
stos
mov
hlt
fstp
xchg
shll
and
pop
mov
xchg
fidivrs
pop
aaa
mov
push
inc
jge
pusha
inc
inc
je
cmpb
sbb
add
mov
xor
xor
add
mov
push
xchg
cltd
popa
icebp
insl
or
fwait
aaa
add
mov
jle
add
pop
inc
lcall
icebp
lods
popa
jmp
push
mov
daa
call
adcl
std
mov
sub
dec
xor
popa
lods
push
xchg
pop
inc
sbb
enter
mov
rorl
out
xchg
xor
clc
xchg
adc
sbb
jmp
sub
jbe
rcrb
add
mov
mov
mov
sub
ja
dec
and
or
insl
enter
test
mov
aad
ret
test
adc
cld
jno
xor
shrl
jmp
je
and
sarl
and
mov
inc
mov
movl
ret
mov
mov
js
push
lea
mov
insb
or
adc
inc
out
sbb
mov
dec
adc
test
loope
stos
sub
push
jbe
mov
mov
mov
cmp
sub
pop
scas
mov
out
cmpl
jp
jle
shr
sarb
mov
fisubrl
rolb
adc
outsl
and
in
jne
and
dec
pop
add
push
push
push
sbb
bound
mov
mov
inc
mov
pop
fmul
fwait
push
loop
dec
xchg
dec
inc
outsb
jns
add
outsb
fs
div
mov
int
cmp
dec
in
cltd
cmpsb
lea
and
mov
outsb
out
and
and
je
jle
push
mov
icebp
dec
cmp
jns
mov
pop
mov
mov
imul
pop
int
clc
mov
jmp
mov
repz
inc
lea
sbb
mov
lret
mov
pop
mov
xor
daa
cld
das
and
mov
ja
jecxz
sub
rorb
daa
xor
jge
jl
mov
std
sub
lret
mov
cld
addr16
pop
ret
in
cmp
jb
lret
push
jg
scas
mov
scas
rorl
hlt
insb
xor
negl
mov
jp
daa
fdivs
mov
sub
inc
xor
mov
das
sbb
stos
test
adc
out
xchg
xor
dec
test
and
bound
test
imul
dec
mov
rcll
lods
lods
fimuls
dec
imul
nop
ret
xchg
lea
cmp
test
stc
arpl
xchg
and
and
and
cs
bound
push
sub
or
cli
sti
popa
add
inc
popf
and
jge
xor
outsb
adc
das
xchg
les
or
mov
jbe
add
dec
lcall
fsts
jp
ret
adc
out
adc
pop
jb
mov
fsts
enter
bound
shrb
dec
inc
stos
vpslld
insl
insl
push
std
aam
xorb
add
aas
or
inc
adc
out
xlat
sti
shrb
outsb
mov
mov
stos
inc
aam
aam
or
nop
sti
addr16
outsl
cmc
cmpsb
ret
mov
cmp
je
scas
push
dec
clc
dec
jns
int
test
and
push
fcmovb
xchg
cmc
fucomi
out
and
outsl
push
in
dec
inc
dec
jb
push
jle
xchg
jl
or
stos
hlt
or
idivl
pop
jnp
fs
add
xchg
mov
stc
mov
mov
inc
repnz
cmc
adc
mov
sub
js
daa
cmp
loop
jg
adc
out
mov
shr
jecxz
adc
cmp
mov
das
xchg
sbb
fisubrs
or
add
movsb
push
add
jl
mov
lds
xor
adc
mov
stos
inc
dec
adcl
out
pop
adc
aam
in
lea
pop
sbb
stos
ret
jb
cmpsl
add
lds
icebp
loope
repnz
xorl
mov
xchg
adcb
xor
ret
iret
pop
rcrl
ja
pop
fdivr
ja
imul
out
pop
jae
xchg
pop
push
mov
scas
push
mov
mov
fstpt
test
xor
push
sub
jge
mov
inc
dec
xlat
xor
mov
sbb
fiadds
jb
jg
mov
imul
nop
fsubrs
out
mov
sbbl
push
or
jae
inc
or
repnz
pop
out
and
pop
incb
mov
xor
mov
std
js
push
sbbl
imulb
or
mov
popf
addb
jmp
mov
mov
or
xor
sbb
and
sub
fs
sub
jmp
or
mov
pop
fs
or
clc
shlb
jb
out
loopne
inc
ret
push
push
std
cmp
jbe
fldenv
sahf
repnz
adc
dec
xchg
adc
pop
push
popa
inc
rcl
adc
xor
or
cmp
add
shr
xor
stc
mov
or
pop
insl
jns,pt
cli
fwait
test
sbb
jp
lret
add
sbb
adc
orl
xchg
adcb
aad
mov
dec
loopne
fbld
push
xchg
cld
sub
mov
mov
jae
into
dec
in
aas
inc
pop
outsl
add
into
sbb
xchg
dec
js
inc
add
adc
inc
shlb
xor
mov
or
ficompl
sbb
inc
jmp
xchg
popf
adc
fst
test
mov
xchg
lods
scas
xor
cltd
leave
or
shrl
dec
pop
xchg
pop
repnz
pop
jnp
dec
mov
push
mov
cmp
push
and
sarl
and
adc
dec
gs
push
mov
adc
cwtl
mov
into
lds
dec
lods
adc
cmc
xorb
cmp
ljmp
push
outsb
fsubrs
mov
fidivrl
mov
jle
push
cld
ret
or
insb
dec
test
mov
and
mov
insb
pop
leave
lret
cwtl
outsl
inc
inc
push
dec
leave
es
sbb
jl
push
fs
mov
push
cwtl
inc
ja
sub
mov
mov
out
mov
mov
jg
mov
pop
xchg
and
movsl
inc
xor
aam
mov
repz
or
ss
and
sbb
sti
icebp
xchg
ss
pop
call
cmpsl
call
fadd
mov
jbe
int3
dec
mov
sub
clc
push
mov
fldt
jne
cli
push
pushf
inc
dec
mov
and
ror
aam
sbbb
push
inc
pop
and
outsb
leave
mov
or
fwait
sbb
subl
xchg
jnp
jle
mov
repnz
cltd
addr16
aas
sub
jmp
sub
or
stos
int
cmpsb
in
xor
outsb
and
loop
mov
andnps
mov
pusha
cmpsl
jns
or
cmp
incl
fs
cwtl
jo
jbe
pop
jg
dec
mov
popa
lea
xchg
adc
xchg
push
mov
sbb
scas
call
das
pushf
xor
jbe
popf
cmp
sbb
jg
sub
dec
jmp
jo
insb
fs
outsl
sbb
cmp
and
mov
sub
sbb
fdivr
adc
das
outsl
fcoms
cld
xor
push
ffree
add
test
adc
dec
leave
mov
xchg
rolb
arpl
mov
xchg
dec
je
xchg
cmc
xlat
inc
and
dec
or
mov
xor
sahf
jge
dec
jb
push
imul
das
sbb
cmpl
fdivrs
mov
outsb
dec
aad
xlat
sbb
adc
outsl
pop
fcompl
push
xor
ret
mov
push
xor
adc
sbb
loop
cli
jno
ret
popf
les
add
inc
mov
or
pop
xchg
xchg
test
or
scas
lea
in
push
cmp
lea
arpl
cmp
jno
mov
stc
sbb
jle
inc
aas
add
push
cwtl
sub
cwtl
mov
stos
in
jno
out
xor
mov
ret
cmp
pop
push
xchg
sbb
loop
ret
loope
push
mov
sti
insb
and
pop
push
dec
mov
scas
and
loop
cmp
out
or
push
mov
adcl
add
lods
jp
xchg
dec
or
clc
ret
lcall
push
push
mov
xor
sbb
push
imul
xchg
sbb
lds
ja
dec
insb
pop
mov
leave
cmpsb
lahf
mov
ret
cmp
data16
mov
mov
push
add
ret
sti
push
or
ret
and
mul
mov
ds
push
ds
pop
repz
ret
lahf
fldenv
test
scas
adc
pop
xchg
push
and
out
mov
inc
subb
adcl
jne
je
cmp
sub
rcl
mov
xor
cmp
add
mov
into
scas
mov
clc
add
dec
sbb
xor
repz
xchg
shll
in
push
push
cltd
pushf
fdivl
std
xor
loop
sub
loopne
sbbb
adc
out
xor
sub
nop
xchg
mov
cmp
orb
stos
mov
mov
daa
js
sbb
cmp
mov
inc
push
into
ficoml
jns
into
fwait
pop
jb
push
bound
adcl
and
push
lea
xor
pop
pop
add
fistpl
inc
pop
and
stos
repz
cld
push
ss
lods
outsl
fisubrs
lret
mov
sbbl
adc
add
loop
lods
dec
rolb
and
int3
rorb
pop
jg
sub
sub
inc
push
cmp
pusha
inc
adc
call
dec
cmp
cmp
loope
add
imul
test
pop
sub
test
sahf
or
add
out
mov
jg
rorl
dec
xor
xor
xchg
clc
out
fldl
jb
jmp
push
call
stc
add
sbb
push
fidivrl
out
xchg
jge
icebp
cmpsb
flds
jbe
mov
mov
rolb
mov
nop
jp
add
cmp
xor
jne
cmp
fs
cmp
dec
das
jns
sub
adc
xchg
sar
hlt
jno
cmp
pop
inc
mov
mov
xlat
lods
fdivrl
sbb
lea
dec
sub
and
inc
fstpl
leave
mov
xchg
mov
cmc
inc
and
rcr
xchg
dec
rolb
fisubrl
in
rcr
frstor
mov
sahf
shlb
push
xchg
push
lods
mov
sbb
sub
and
pop
xchg
mov
loopne
lret
mov
sbb
hlt
sub
cmpl
pop
pop
and
jmp
cwtl
insb
mov
jne
sub
test
and
aad
lahf
sbb
xor
and
lock
sub
push
aas
pop
sbb
inc
mov
xor
clc
ret
imull
ljmp
scas
addr16
loope
stc
pop
mov
mov
repnz
push
cmp
out
xchg
iret
mov
dec
sbb
ret
rcrl
psllw
aaa
ds
add
je
fucomp
inc
and
adc
js
adc
incl
jp
mov
dec
or
xor
xchg
jns
sbb
fmulp
cmp
xor
cmp
ss
cmp
inc
sbb
out
add
jg
mov
mov
and
cmp
or
xchg
sub
jl
mov
fsubp
stc
loope
sub
push
sub
or
ss
push
mov
pop
call
cltd
inc
lret
or
cmc
rorb
jg
push
sbb
aaa
ds
out
cld
pop
sub
xor
jg
push
dec
inc
mov
mov
pop
xchg
pop
mov
mov
rorl
pop
pop
sti
mov
in
subb
dec
out
mov
dec
pop
jno
dec
imul
inc
mov
popf
jle
daa
cltd
mov
cmp
xchg
enter
jge
insb
mov
inc
js
jp
vmwrite
ss
push
mov
mov
dec
test
add
push
xchg
pushf
and
mov
int
test
clc
and
mov
in
aaa
jns
pop
sub
mov
and
aam
fsubrs
jge
and
jno
pusha
jge
xor
push
mov
mov
xor
cmpsl
xchg
out
jge
cmp
test
push
inc
sbb
ret
sti
mov
adc
jno
aam
sarb
jns
lea
lahf
and
lods
mov
lahf
lahf
sub
cmp
jle
xchg
cmp
push
iret
mov
test
out
pop
sar
xchg
lods
cmpsb
sbb
jo
js
sbb
stos
iret
out
mov
sahf
mov
fstps
enter
insl
xor
fcmovnu
push
jmp
push
cwtl
xlat
loope
xchg
ss
push
xchg
outsb
sbb
push
popa
pushfw
xchg
cmp
sub
or
sbb
mov
fs
icebp
rolb
or
push
pop
mov
xlat
xchg
mov
loope
pop
sti
mov
fildll
xchg
pop
dec
out
mov
and
ss
nop
mov
mov
xchg
out
lahf
shll
jp
inc
sub
jne
mov
filds
loop
mov
sub
mov
shlb
loop
popl
popa
imul
lods
cmp
ret
faddl
push
in
loope
cmp
mov
xchg
push
test
popa
mov
mov
xor
mov
movsl
dec
es
or
fldenv
inc
pop
dec
cld
sti
adc
divl
pushl
lock
aas
ret
jecxz
std
mov
ja
cmc
gs
mov
push
sbb
fst
call
jns
xchg
ret
arpl
mov
inc
adc
jo
sarl
frstors
test
mov
xor
pop
arpl
push
dec
je
mov
mov
xchg
inc
xchg
add
add
mov
insb
jo
addr16
fs
ljmp
xchg
clc
xorl
out
js
scas
lds
dec
jge
add
xchg
sbb
in
fistpl
lcall
push
in
mov
sub
cmp
pop
lods
or
in
out
mov
fdiv
or
callw
ss
cwtl
inc
sarl
sbb
scas
mov
lock
enter
out
pop
fcomi
mov
or
je
jle
dec
or
add
into
aaa
scas
and
pop
sub
rclb
and
mov
jae
adcl
add
fnstsw
int
sbb
aaa
rcrb
fsubr
lds
iret
push
stos
stos
jmp
clc
test
cmp
or
jle
decb
data16
rclb
shr
jmp
hlt
mov
cmp
ljmp
fistps
jae
cmp
and
call
or
cmc
rcrb
test
mov
out
xor
add
pop
fsubrl
dec
hlt
out
addl
ljmp
pop
out
or
xchg
pop
or
repnz
out
mov
adc
pop
xor
mov
in
xchg
aam
scas
add
sub
test
fnstcw
fsubr
sub
testb
xor
push
lock
lea
and
insl
cmpsb
call
adcl
daa
sbb
jno
iret
mov
mov
xchg
adc
sbb
movsb
scas
push
fdivs
push
stc
sbb
mov
ja
ja
sbb
mov
cltd
je
nop
xchg
and
sub
scas
icebp
jns
fisubrl
incl
dec
jno
loop
xor
dec
sahf
adc
and
out
bound
js
mov
pop
push
and
popa
inc
push
xor
stc
or
sbb
sbb
cltd
mov
decl
push
push
mov
mov
mov
push
lcall
mov
scas
cmp
pop
inc
dec
adc
enter
inc
addl
negl
mov
les
inc
xchg
pop
les
cs
loope
push
pop
xlat
xor
mov
out
jge
adc
jg
lret
pop
inc
pop
int3
push
outsl
xchg
out
jno
rorl
or
adc
cmp
clc
mov
jl
stos
cmp
aam
push
pusha
push
out
aad
push
or
fs
stc
mov
sbb
push
jecxz
out
dec
rcr
dec
inc
mov
fsubp
jb
nop
ret
stc
mov
ret
sbb
adc
jg
lret
lahf
cmp
dec
jb
sbb
push
inc
fadd
push
popf
aad
data16
pop
adc
pop
repnz
push
adc
sar
xchg
fstpl
add
stc
push
jnp
orl
pop
es
cwtl
loop
inc
pop
loope
sbbb
pop
in
jl
xor
out
add
scas
mov
call
xchg
repz
nop
fidivl
cld
push
lret
mov
jecxz
inc
push
xchg
fbstp
xchg
hlt
nop
mov
cmc
sub
push
cmc
dec
in
cmp
jae
mov
mov
out
add
les
mov
xchg
nop
push
jns
adc
add
inc
ret
adc
ror
jmp
call
and
jo
mov
or
std
add
adc
xor
sti
stc
ljmp
xor
rcl
mov
lahf
add
and
jge
call
inc
out
es
push
or
add
fnstcw
rcr
pop
xor
insl
lret
push
sbb
pop
or
mov
fidivs
into
sti
clc
pop
sub
cld
pusha
or
cmp
fadd
mov
mov
ret
pop
fcomps
out
out
push
cmp
pop
cld
shl
pop
cwtl
and
sub
mov
inc
insb
pop
outsl
mov
xor
inc
and
sbb
inc
notb
xor
test
lods
inc
or
jge
mov
jecxz
xor
xor
adc
mov
divl
out
sbb
nop
xchg
fs
pusha
cmp
adc
xchg
scas
das
adc
lahf
or
inc
fwait
insb
movsl
xchg
enter
outsl
mov
dec
xlat
xchg
push
xlat
aad
mov
jmp
sbb
pop
sahf
les
leave
sub
test
xor
xchg
mov
mov
out
pop
fwait
cld
push
pop
ja
push
mov
mov
loop
gs
nop
xchg
add
bound
outsl
sub
mull
or
xchg
jbe
and
stc
mov
lcall
mov
cmp
lret
mov
outsb
sahf
xchg
adc
enter
xorb
out
xor
rorb
psubsw
mov
pusha
sahf
mov
inc
mov
int
iret
shr
mov
jmp
lea
xor
push
xor
xor
adc
xchg
lret
aam
jge
les
dec
lock
add
xor
cmp
popa
in
dec
inc
int3
adc
cs
or
std
cld
xor
or
jle
cmp
or
sbb
sub
or
sbb
mov
jmp
push
movsl
cmp
mov
cli
mov
mov
movsb
pop
sub
add
ljmp
xor
sub
xchg
pop
pop
jmp
hlt
sahf
mov
stos
mov
insl
mov
aam
gs
rcll
mov
aad
xor
into
mov
pop
xor
in
xchg
jnp
add
push
push
fnsave
fwait
pop
fdivl
push
jo
push
dec
mov
pop
outsl
mov
mov
out
sub
enter
jecxz
cmp
mov
dec
mov
xor
out
mov
divb
ficomps
insl
mov
xchg
in
nop
out
cmc
leave
cmp
pop
add
clc
in
sti
xchg
adc
imul
sbb
xchg
inc
cld
xor
negl
pop
test
stc
push
lret
and
imul
sar
jmp
into
pop
rcll
pop
mov
xorb
xor
dec
popf
xor
ljmp
ja
mov
xchg
or
test
in
pop
pop
inc
push
test
inc
nop
lock
xor
xchg
incb
and
mov
dec
lret
inc
test
xchg
pop
jne
dec
xor
out
sbbl
xchg
jb
sbb
mov
jge
str
inc
fwait
mov
cmp
mov
roll
mov
add
jnp
lock
aam
or
cmp
push
ret
mov
fs
mov
repz
add
fsubrp
inc
mov
pop
pushf
xor
mov
dec
and
jo
adc
cmc
jecxz
enter
jge
xor
in
hlt
mov
xchg
jns,pn
dec
mov
outsl
movsb
xchg
enter
sub
cwtl
pop
jne
movsb
lods
cs
fsubrs
std
in
push
jnp
mov
mov
sbb
xor
nop
testb
sar
inc
rcrl
mov
sbbb
ret
push
ds
and
decb
sbb
xor
inc
out
jbe
insl
mov
mov
pop
int3
in
add
ja
adcl
push
or
adc
lds
icebp
mov
icebp
fmuls
insl
pop
cmpsb
cmc
mov
into
lock
outsb
jnp
rcl
sub
outsb
adc
rcrl
xchg
mov
sarb
pop
imul
dec
ds
sbb
cmp
xchg
or
add
out
test
gs
mov
adc
jns
sbb
in
pop
fldl
ret
cmpsb
mov
jecxz
sbb
test
push
xchg
dec
or
add
dec
sub
ja
pop
stc
lret
jmp
sti
imul
xor
pusha
arpl
or
pop
pusha
jge
mov
fistpl
scas
and
dec
daa
and
test
fwait
repnz
fsts
ret
nop
leave
xor
adcb
xchg
test
in
test
xor
sbb
ljmp
cs
lret
fnstcw
xchg
xchg
pop
jmp
xchg
lods
sbb
gs
xchg
xchg
xchg
dec
hlt
fmull
fisubrl
mov
and
cmp
sub
sub
xchg
push
sbb
cmp
roll
fldcw
cli
sbb
mov
adc
fstpt
jo
popf
jmp
test
inc
cmpsl
das
aad
leave
cmp
std
or
data16
lret
test
sar
hlt
pop
inc
mov
jae
test
shrb
frstor
xchg
cli
shrl
lds
jo
test
pop
aas
add
lods
mov
sbb
popf
int
xchg
xchg
es
out
movsb
inc
cltd
mov
lea
insb
dec
lock
pop
testb
popa
jp
dec
int3
inc
test
shrl
bnd
ds
inc
add
fsubrl
inc
cmp
jp
jb
out
iret
jecxz
sub
aaa
push
adc
aaa
inc
sub
imul
mov
inc
iret
aad
mov
pop
sarl
cmp
cwtl
clc
mov
fisubrl
xchg
cmp
mov
repz
bound
das
in
inc
imul
add
push
xor
xchg
mov
stc
sub
mov
pop
mov
ds
and
lcall
repnz
push
ja
fimuls
sub
push
pop
sbb
mov
mov
in
xchg
mov
dec
fidivrs
jb
mov
jmp
xchg
fadds
xor
scas
test
out
and
sti
or
gs
dec
mov
xor
mov
in
pop
inc
dec
lods
jne
mov
or
daa
imul
xchg
popl
mov
cmp
xchg
std
stos
add
rcll
in
ja
in
jg
push
mov
lods
stc
push
push
insl
loop
lods
lcall
mov
in
sbb
ds
mov
dec
xchg
dec
jg
add
subl
sbb
xchg
jg
mov
or
dec
pop
mov
pop
rcl
nop
push
mov
cmp
mov
cmp
in
fildl
andb
adc
or
movsb
add
dec
xchg
mov
in
fcmovnb
inc
jbe
scas
enter
inc
aas
orl
in
or
lods
hlt
and
xor
mov
shlb
ljmp
std
lahf
jle
test
pand
xchg
aas
loopnew
and
cmpsl
cltd
jbe
int3
sahf
push
xor
dec
das
add
xlat
and
mov
adc
lret
jnp
sbb
sub
icebp
pop
push
ss
xchg
ds
insb
dec
insl
push
add
ja
inc
and
jecxz
lock
mov
push
shll
lock
and
iret
push
out
addr16
shrb
cwtl
cmp
push
adc
xlat
jmp
and
ret
add
ds
push
mov
imul
adc
je
lods
add
xchg
xlat
mov
movsb
mov
push
sub
push
fildl
xor
movsl
inc
lds
popw
inc
mov
mov
add
bound
roll
int3
addl
sub
aam
jecxz
cli
orl
adc
push
sahf
stc
sbb
adc
mov
ret
ds
inc
mov
nopl
mov
xchg
sbb
adc
add
sbb
push
adc
jg
mov
pop
scas
mov
mov
jb
rolb
adc
dec
repnz
or
ja
fcoml
cmp
stos
pop
clc
iret
sbb
push
add
stc
fisubrs
in
pop
sbb
mov
pop
aam
xchg
push
cmpsl
stos
push
test
inc
cmpsb
stc
push
lods
popf
jns
inc
jnp
push
xchg
or
dec
mov
dec
xchg
push
xor
cmpsl
sub
dec
add
aaa
mov
jo
pop
push
loopne
andl
pop
add
mov
out
pop
mov
icebp
dec
xor
leave
sbb
dec
fcomip
inc
fwait
repnz
es
xchg
add
add
jmp
cmpsl
scas
mov
rorb
into
ss
addr16
push
mov
xlat
jb,pt
add
decl
in
and
fldl
popf
push
jbe
insl
loop
jp
xorb
mov
dec
in
lahf
xor
icebp
stos
cmp
dec
int3
push
fsub
or
fstpl
rcll
test
mov
pop
xchg
aaa
imul
and
push
mov
mov
dec
call
or
pusha
mov
scas
jg
adc
or
or
clc
stc
mov
add
scas
jp
dec
push
icebp
xor
jl
movsl
xor
jle
fidivs
push
call
out
inc
lock
notl
xor
inc
int
in
mov
shl
leave
mov
pop
fstpt
cmp
ds
std
adcl
ds
cmp
pop
add
sub
arpl
mov
rolb
adc
jns
or
and
push
orb
lahf
daa
imull
jmp
dec
leave
mov
imul
or
cmp
mov
and
lods
xchg
addr16
cwtl
push
mov
cltd
repnz
scas
cltd
add
data16
lods
xchg
xor
sbb
pushf
and
pop
imul
push
pusha
arpl
stos
out
sahf
stos
jg
sub
jle
sbb
int3
data16
fisttps
and
inc
sub
add
inc
jge
adc
cmp
mov
dec
lcall
aam
or
push
das
test
bound
jl
add
int3
repz
inc
fistpl
jmp
iret
dec
xchg
mov
jp
aaa
fbstp
out
shl
add
loopne
fwait
repnz
and
pop
xor
sub
adc
inc
cmpb
mov
add
daa
pop
nop
bound
mov
rolb
push
outsb
jne
dec
ret
add
or
cmp
int3
lret
mov
aam
pop
and
or
jb
inc
push
pop
out
jmp
add
stos
lods
js
xor
inc
mov
out
push
push
dec
ljmp
mov
sbb
sbb
xchg
movsb
inc
adc
aad
idivb
cmp
jmp
inc
in
push
insl
or
das
aad
xchg
test
or
dec
mov
dec
int3
fcoms
cmp
push
cmpsl
insb
lock
sar
ret
cltd
test
push
bound
xchg
jns
pop
cli
sbb
and
ja
adc
aas
cwtl
push
shlb
jne
mull
and
xchg
aaa
fwait
mov
cmp
xor
clc
or
fisttps
loop
and
mov
xor
cs
ss
andb
jp
jge
inc
inc
xor
mov
cwtl
pop
sub
cmp
sti
jmp
scas
icebp
sub
aaa
dec
cli
arpl
mov
inc
imul
dec
push
leave
inc
pop
jg
push
pop
jnp
pop
xchg
push
ret
ret
pop
hlt
push
mov
and
push
sub
cs
xchg
bound
dec
fdivrp
add
repz
aas
jno
add
xchg
fcoms
dec
xlat
mov
xor
jns
ret
xor
or
repnz
stos
mov
pushf
enter
enter
lahf
push
out
stc
dec
leave
push
push
pusha
aad
lods
xor
sarl
add
jae
xchg
mov
jle
pop
mov
or
add
and
mov
add
dec
dec
xchg
and
jnp
inc
scas
add
sbb
in
addl
mov
shrl
fwait
jmp
test
mov
nop
inc
sub
adc
iret
mov
or
fisttps
jle
xor
insl
aaa
sbb
mov
pop
fimull
ja
xor
clc
mov
push
cmpsb
outsl
cmc
dec
mov
mov
inc
scas
scas
aas
xor
sbb
aam
xchg
cmp
pop
mov
push
inc
xor
cmp
and
add
loop
and
pop
mov
in
les
mov
lods
mov
add
out
stc
lods
mov
mov
ss
dec
mov
jge
mov
jns
test
lds
mov
cmp
xchg
inc
addr16
pop
pop
mov
pop
clc
mov
ds
lcall
or
inc
mov
aaa
into
pop
sub
pop
sbb
dec
sub
out
dec
popa
lods
test
les
add
mov
out
popf
aad
inc
cmp
rclb
adc
and
imul
push
push
add
pushf
mov
inc
inc
bound
xlat
call
add
and
hlt
js
ret
mov
push
cmp
cmc
dec
cltd
jle
mov
push
inc
mov
fstp
popf
je
imul
shrl
dec
lea
out
cltd
xchg
icebp
aas
ret
xchg
cmp
popf
aas
loopne
stos
leave
inc
jmp
leave
push
sbbl
cmp
nop
cmpl
mov
or
push
jnp
sbb
das
cmp
or
sbb
jbe
lahf
gs
ss
cmp
push
fdivp
xor
pop
outsl
cmp
jne
fistpll
fnstcw
roll
std
or
cmp
jno
stc
mov
sub
jo
jle
mov
cltd
movsb
pop
inc
fmul
and
lret
or
andb
sbb
insl
inc
outsb
mov
pushf
insl
xor
push
and
dec
jmp
sti
xor
mov
jg
lahf
js
cmc
int3
dec
sbb
shll
ret
aas
clc
add
gs
lret
jle
pop
push
shll
dec
out
xchg
pop
pop
das
push
addr16
add
arpl
loope
sub
nop
int3
xchg
insb
xor
shr
inc
adc
pop
lds
mov
xlat
fs
lcall
mov
dec
lods
xor
loopne
cwtl
sbb
cmp
mov
push
xor
and
xor
push
mov
addl
xchg
sub
scas
or
sahf
jo
scas
push
sbb
dec
xor
imul
sahf
outsb
mov
into
inc
sub
cmp
xchg
jmp
callw
sbb
sub
jg
and
add
or
fnstsw
pusha
push
add
add
popf
and
imul
mov
pop
out
lock
dec
mov
jnp
out
and
mov
andl
daa
jge
rcrb
add
cmp
cli
cmc
adc
out
ret
cld
aam
das
pop
dec
cmpsb
sub
pop
pusha
sbb
inc
cs
xchg
les
inc
insl
fs
adc
inc
mov
ss
mov
mov
das
dec
das
ja
inc
cmpsb
out
fs
sti
subb
shrl
cwtl
das
mov
add
pop
outsl
cmp
in
dec
mov
push
jb
cli
cltd
mov
xchg
cmp
push
push
pusha
cmc
lock
pop
dec
enter
ficompl
push
lcall
push
dec
mov
testl
imul
jnp
or
outsb
add
xchg
xor
leave
mov
mov
movb
pop
pop
cmc
xchg
sbb
pop
stc
mov
adcb
pop
rorb
xlat
inc
adc
inc
xchg
shrb
mov
lock
sbb
lret
mov
repnz
ljmp
mov
pop
outsl
mov
fdivrl
or
outsb
stc
jne
call
ret
or
xor
dec
fldenv
inc
popf
mov
call
movsl
inc
push
push
xor
xchg
xchg
inc
and
add
xchg
jle
cli
loop
cmp
mov
xor
inc
push
or
cmp
and
fildl
xlat
push
mov
fwait
popf
mov
sarb
fcmovbe
jp
mov
aas
cmp
loope
cmpsl
xor
jno
adc
out
lods
insl
loop
cmp
imul
push
dec
popa
or
insl
data16
or
jg
mov
cld
pop
mov
mov
xchg
sub
add
lcall
iret
xchg
testb
mov
test
movsl
pop
mov
div
test
push
and
xor
in
xor
pop
call
nop
mov
lret
adc
inc
pop
loope
loop
loop
inc
push
sub
stos
mov
imul
add
stos
stc
xor
push
push
das
push
sbb
adc
jns
js
and
jae
icebp
out
sub
nop
xor
cmp
outsl
inc
loop
mov
jle
pushl
sub
push
add
hlt
les
repz
xchg
lock
mov
sbb
dec
mov
outsl
xchg
les
shrl
shrb
cs
popf
inc
ret
rorb
mov
jg
in
push
fs
lcall
mov
inc
mov
pop
sub
lcall
aad
pop
lods
incb
lret
call
jns
icebp
jmp
mov
cld
cmovno
sbb
lret
out
loop
lock
dec
sbb
dec
stos
adc
xor
cld
or
inc
jae
and
stos
iretw
repnz
cld
cmp
out
movsl
fisttpl
mov
push
fwait
sahf
mov
cmp
mov
popa
je
or
pop
les
push
out
push
inc
mov
sbbb
fbstp
mov
jb
loope
adc
lock
sahf
lea
int3
test
mov
repnz
shrw
pop
push
flds
call
or
iret
xor
mov
jmp
mov
inc
jge
mov
nop
xchg
dec
lods
add
jmp
in
fisubrs
jle
mov
je
mov
cwtl
adc
push
pop
in
test
test
negb
dec
mov
sbb
fdivl
inc
int
sub
and
jg
movsb
lcall
out
test
ret
cmc
mov
aas
mov
add
xchg
inc
jbe
inc
leave
sub
jns
in
sbb
dec
push
inc
cmpsl
push
repz
cmpsb
lods
pushw
into
fldenv
push
int
pusha
pop
dec
adc
into
inc
pusha
mov
jl
sarb
and
int
int3
sub
int3
jne
fwait
movsb
and
insl
dec
lock
mov
jns
pop
jle
xorl
jmp
aam
loop
daa
aam
or
sbb
js
xor
lahf
sbb
mov
scas
in
cmp
mov
mov
sub
xchg
insb
or
mov
mov
mov
out
inc
push
pop
mov
jp
lret
mov
cwtl
scas
daa
jge
xor
aam
lods
jo
andb
cmp
out
push
pop
push
mov
loope
hlt
cmc
loope
lcall
push
add
jmp
or
enter
jae
xchg
fstpl
loop
nop
jmp
sub
dec
jge
daa
sbb
adcl
inc
fnstcw
lods
je
jb
and
sbb
mov
sub
cmp
jle
outsl
leave
sbbb
fadds
mov
test
bound
insl
fidivs
mov
out
inc
imul
jg
int3
shl
loopne
pop
or
or
stos
lahf
cmc
mov
mov
jns
pop
sbb
pop
jo
jo
icebp
cld
sarb
push
mov
jne
add
add
sub
mov
jns
icebp
push
dec
push
adc
ljmp
aaa
lds
je
sbb
jl
in
adc
jae
rclb
stc
in
int
movsl
xchg
cmc
jge
mov
insb
xchg
pop
das
adc
mov
xor
stc
fstpl
daa
into
pushf
rcll
addr16
xchg
xchg
mov
xchg
mov
popf
in
or
rorb
ljmp
xchg
sahf
mov
aas
push
jecxz
mov
push
cmp
xchg
inc
stos
push
ret
aas
mov
in
pop
push
sbb
enter
stos
push
push
mov
push
adc
and
in
lcall
lcall
dec
pop
mov
mov
rcll
mov
sbb
jbe
in
xchg
mov
cmpl
push
arpl
sub
sub
xchg
mov
mov
cmp
xorb
cs
add
loope
mov
inc
adc
dec
or
pop
dec
lods
push
adc
pusha
aad
test
mov
mov
push
sarb
in
dec
sub
push
ret
mov
pop
outsb
cmp
cmp
icebp
lds
fsubs
fstpl
pop
and
dec
jns
push
mov
sub
mov
push
popa
dec
mov
jle
in
mov
xor
outsl
loopne
adc
sub
incb
stc
cmpsl
sbb
mov
adc
mov
insb
dec
pop
mov
psllq
mov
aas
sub
out
divb
dec
inc
test
pop
pop
or
xchg
cmc
xor
push
je
xchg
pushf
repz
push
stc
cmc
fidivrs
rcr
hlt
push
inc
mov
dec
filds
mov
in
testl
jae
insb
add
aad
imul
int
mov
mov
mov
std
mov
jno
in
pusha
fmull
inc
inc
xor
nop
cmc
xchg
lahf
add
nop
mov
adc
sti
sbb
jl
aam
lcall
aam
popf
imul
add
icebp
das
cltd
pusha
add
jo
add
lea
jge
movsl
shl
std
stc
flds
cmpsl
jb
sbb
sbb
xchg
xchg
stc
mov
xor
stc
jb
shll
fcoms
mov
adc
push
or
jns
iret
dec
lahf
les
xor
ss
aad
addb
dec
jbe
or
call
mov
fsubs
add
cwtl
xor
stc
fmuls
sbb
out
out
in
push
popf
js
or
ja
dec
outsl
test
sub
sti
mov
testl
fisubrs
into
pusha
or
dec
stos
fnsave
test
adcb
cmp
mov
outsl
into
insb
xchg
mov
adc
mov
gs
test
jb
fwait
jecxz
and
inc
scas
out
lods
jae
fcmovu
sbb
sbb
lods
popf
jnp
pop
add
sbb
push
clc
test
lods
cmpsl
stc
es
jg
std
push
inc
add
jne
pop
mov
inc
dec
sbb
test
testl
inc
add
push
ret
es
mov
cmp
jge
mov
or
movl
into
lea
push
push
jge
adc
in
popa
mov
push
push
jmp
testl
and
je
rclb
loope
lock
lcall
and
repnz
jnp
sbb
js
sahf
xchg
arpl
cwtl
mov
andb
sub
inc
mov
pop
xchg
pop
jb
call
cld
sub
push
fwait
mov
imul
pop
loop
pop
mov
fcomp
jnp
jns
pop
dec
fstps
inc
sub
loop
clc
cmp
jg
and
inc
dec
in
jo
mov
xchg
and
mov
xorb
xor
and
lods
subps
add
mov
roll
popa
mov
lahf
pop
adc
mov
nop
pop
and
jp
test
mov
cmp
jae
xor
or
movsb
test
insl
outsl
into
pop
sub
fimuls
mov
subl
push
pop
adc
jge
mov
cmp
mov
notl
jle
outsb
adc
push
xchg
dec
jecxz
inc
les
popf
add
bound
inc
xchg
sub
out
push
stos
jle
es
std
mov
cmpsb
negb
rorl
test
fisubl
add
jo
clc
inc
inc
cwtl
das
ret
scas
loope
cld
ret
hlt
pushf
adc
or
mov
push
or
jns
jbe
insl
cmpsl
push
out
es
test
mov
std
xchg
sub
js
aaa
jg
adc
fsub
or
pusha
push
cld
sub
inc
push
sub
mov
add
pop
dec
movsb
gs
pushf
mov
inc
ss
cwtl
mov
xchg
je
imul
clc
cmpsb
xchg
push
jg
aaa
xchg
push
mov
loopne
xchg
sbb
mov
jecxz
inc
adc
inc
add
pop
pop
jns
adc
adc
cmpsl
mov
inc
cs
xchg
insl
aas
add
pop
inc
sbb
jecxz
sbb
in
in
cli
xlat
sub
pop
aas
outsl
push
mov
mov
dec
cmc
inc
bound
shrb
aad
sbb
xchg
mov
out
adc
pop
test
lods
sbb
out
mov
cmpsl
shrl
jnp
cwtl
shrb
std
es
punpckldq
pop
or
push
dec
scas
js
push
movsl
cmp
scas
adc
push
stos
ret
lods
xchg
lcall
fst
jl
in
popf
movsb
pop
lds
mov
in
sub
jno
ljmp
lods
je
cltd
les
sbb
hlt
sub
adcb
addb
pusha
jns
pop
cmpsl
std
pop
xchg
dec
ds
std
jmp
ret
ljmp
xor
insl
mov
mov
bound
inc
in
and
or
lcall
mov
xor
out
test
cmp
cmp
jmp
dec
or
or
test
jo
pop
inc
fistl
imul
ret
cmpsl
jp
test
lcall
or
ficompl
nop
out
mov
push
lcall
jl
out
call
jno
les
insb
mov
cmp
fistpl
ret
xchg
mov
push
push
popa
jp
stos
std
lods
rorb
inc
add
dec
or
inc
insb
mov
fs
jbe
or
jmp
dec
dec
int3
jbe
mov
fldenv
pop
mov
add
lea
stos
ljmp
addr16
xchg
mov
rcrb
jns
mov
fldl
sub
stc
jp
imulb
shl
adc
jae
jg
cmpsl
in
add
pop
cmpsb
mov
lods
test
bound
mov
pusha
cmp
repz
nop
mov
push
popf
insb
pop
aas
and
jge
testb
xor
pop
mov
or
sti
pop
insb
push
xor
dec
push
push
add
mov
dec
and
ljmp
hlt
xor
lock
lea
addl
or
hlt
sbb
mov
sub
mov
sub
or
and
pusha
mov
mov
adc
in
aad
mov
cmp
jo
jecxz
mov
sbb
fadds
and
imul
jno
push
lock
adc
mov
inc
imul
incb
repnz
cmpsl
xchg
fisubl
into
sbb
jl
mov
loopne
sub
or
mov
divb
mov
addr16
xorl
outsl
int3
adc
arpl
push
mov
sarb
addl
pop
mov
es
outsl
dec
leave
es
lea
jge
push
aam
fdivrp
into
aaa
mov
or
js
sti
sbb
data16
xlat
inc
pop
mov
mov
pusha
sbb
cli
pusha
dec
sub
popf
mov
mov
call
cld
out
push
sub
cld
in
je
das
mov
mov
xchg
rep
data16
jne
fisubs
push
int
push
leave
sub
add
mov
pop
insl
aaa
jnp
out
and
mov
lcall
add
cmp
xchg
xchg
lds
add
jecxz
cmp
aad
inc
adc
mov
push
lcall
es
dec
mov
repnz
dec
cmp
idiv
fdivl
inc
pop
lar
mov
jmp
mov
clc
mov
mov
jmp
xor
scas
pop
fcmovu
outsl
es
je
call
lods
inc
fisttps
test
cmc
xchg
in
loope
loopne
and
add
filds
cli
mov
call
jnp
aam
call
js
mov
xchg
xchg
out
pop
cmp
or
jo
push
fiaddl
popf
xchg
rorl
loope
lods
repnz
movsb
xor
mov
pop
or
dec
add
into
outsl
inc
sahf
int
adc
icebp
push
les
cmp
xchg
in
ljmp
sbb
lahf
and
loope
lahf
fwait
jnp
and
add
pop
imull
mov
lods
mov
out
negb
cli
je
nop
fcmovnb
add
jbe
and
mov
mov
adc
jno
popf
fnstcw
loopne
out
xor
out
add
mov
sbbb
push
loopne
sbbl
insl
mov
inc
filds
js
outsb
sub
rolb
cmpxchg
sub
push
popa
xchg
mov
js
clc
repz
setno
mov
popa
lds
mov
jp
jge
aas
mov
js
sbb
test
add
mov
mov
or
mov
pop
push
pop
xorb
int3
sub
and
data16
pusha
and
pop
xchg
or
lcall
rcll
sbb
std
xchg
cs
out
lods
bound
pushf
daa
mov
stc
fisttpl
enter
lds
stc
sbb
mov
sbb
test
cmp
or
pop
mov
xchg
lret
sub
sti
sub
mov
mov
mov
push
scas
fdivr
cld
jno
mov
sahf
cmc
repnz
push
loopne
outsl
pop
pop
das
push
nop
adc
push
push
mov
orb
pusha
out
add
jo
mov
lret
addr16
push
push
sbb
add
xchg
add
dec
dec
mov
fsts
mov
ja
xchg
cmp
or
adc
sarb
add
push
jbe
arpl
and
pop
jb
dec
enter
setg
mov
and
insl
fwait
arpl
xor
jmp
inc
jae
adc
mull
dec
rorb
rcl
lea
int3
dec
aaa
sbb
lret
cwtl
outsb
das
pop
mov
lahf
mov
inc
inc
sbb
addr16
and
rcll
aad
jne
and
in
aaa
dec
sbb
cmpsl
arpl
mov
jno
jg
shll
dec
fimull
or
mov
testl
adc
insb
outsb
ds
std
gs
loope
imul
add
lods
pop
cmpsl
test
xchg
aad
out
std
dec
push
ret
pop
aas
pop
jno
sbb
cli
popa
mov
sub
push
cmpsl
fldt
push
ds
daa
adc
xorb
cwtl
mov
js
test
mov
push
jmp
add
mov
inc
adc
sbb
cmpsb
push
sbb
mov
sbb
sub
repnz
loopne
lcall
adc
jle
push
lock
sbb
push
cmp
inc
inc
rol
mov
es
and
add
mov
pop
pushf
jbe
push
fcmovnu
shll
or
xchg
mov
mov
and
pushw
mov
pop
ds
popa
mov
loop
jmp
cmpsl
cmp
cltd
sub
pop
push
fstpt
mov
pop
add
enter
mov
xor
mov
test
mov
incb
sbb
xchg
sub
mov
sbb
add
pop
jmp
les
xchg
and
stc
or
fildll
sbb
or
and
arpl
out
mov
jnp
movsb
lods
movsl
sbb
jmp
pop
adc
test
pop
cli
xchg
pop
push
jle
aaa
sbb
add
xchg
sbb
push
add
cmp
cmpsb
aas
aaa
xor
aad
fwait
das
sub
pop
fsub
inc
data16
movsb
sub
test
fildll
in
leave
lods
push
sbb
xor
orps
lock
push
icebp
jb
loopne
arpl
cli
and
popf
inc
stc
jmp
pop
fsubr
popl
fsubs
xchg
adcb
shll
or
add
xor
push
arpl
fcmovne
pop
fs
pushl
mov
jg
inc
mov
jge
push
inc
mov
arpl
jle
push
lcall
jns
adc
xchg
testb
and
mov
mov
xchg
inc
decl
jl
das
shlb
lods
xchg
stos
lret
fsubl
or
or
daa
sbb
sub
mov
adc
jmp
je
push
mov
add
pop
cli
jb
mov
daa
in
mov
xor
in
pop
adcb
inc
fldl2e
loopne
mov
push
cmp
sbb
fisubl
adc
cld
out
sahf
or
out
push
push
sti
xchg
sub
ljmp
outsb
cmp
and
lods
jmp
jae
sar
or
cli
pushf
divb
push
mov
sbbb
jb
leave
mov
add
sub
jo
sti
sub
adc
or
adc
stos
stos
pop
cmpsb
mov
sub
adc
cmp
jl
enter
dec
repz
stc
xor
xor
shl
fs
mov
push
adc
dec
inc
cld
pop
and
xchg
dec
xchg
lds
fcmovbe
xor
add
filds
sti
sub
cmp
fmull
sbb
xor
nop
les
push
bound
push
aaa
mov
add
jge
in
cmp
dec
idivb
jno
rorl
repnz
pusha
cmpsb
cwtl
int
fisttpll
xchg
sbb
hlt
sbb
mov
lahf
sti
cmpsl
aam
jnp
add
outsb
mov
mov
call
dec
lcall
pop
lods
xchg
sti
test
add
sbb
call
pop
out
adc
arpl
mov
out
fisubrl
fsub
out
mov
rorl
sub
lods
mov
jge
pop
or
push
push
xorl
jle
add
or
test
out
pop
xchg
jno
jg
dec
dec
das
lret
addl
mov
jns
inc
mov
mov
das
into
cmp
inc
cmp
and
addl
stos
ja
pop
mov
mov
sub
dec
cmp
shr
in
fs
int3
stos
sub
shll
sarb
clc
pushl
nop
in
push
out
mov
xchg
jnp
inc
loopne
push
leave
cwtl
jle
daa
fnop
repnz
insb
push
test
js
aam
sub
mov
mov
dec
ret
pop
jo
mov
in
fsub
pop
pop
mov
imul
cld
andb
jae
lcall
fiaddl
xlat
jmp
fcompl
push
or
xchg
les
and
push
fdivr
xchg
lcall
push
xor
add
aam
xor
push
cltd
sarl
or
ror
out
fnstenv
mov
mov
mov
inc
ret
call
sbb
xor
xor
xchg
ret
mov
test
sub
aas
jg
cld
lret
std
sub
inc
das
sbb
mov
mov
movsl
pop
stos
cmp
popa
sbb
fcomps
cld
aas
mov
or
cwtl
jge
flds
icebp
xor
fwait
movsb
aaa
lahf
clc
xor
in
xor
cltd
adc
in
out
sbbb
adc
and
outsb
sarb
aam
out
std
jbe
jle
inc
out
inc
xor
daa
pop
push
cmp
add
adc
call
in
ret
out
cmp
sub
pop
les
inc
fdivs
xlat
shll
leave
stos
popf
push
add
mov
jle
movsb
push
lods
pop
in
ss
pop
sub
xor
push
sub
xor
inc
inc
or
xchg
mov
test
pop
inc
rcll
jl
lea
sub
das
jbe
inc
xor
xchg
shll
loope
mov
inc
mov
jmp
je
outsb
xchg
test
xchg
mov
test
push
cwtl
cmp
pop
inc
lods
ret
fsubrl
insb
jne
fnclex
in
push
mov
push
mov
jl
mov
stos
add
xlat
std
mov
or
test
or
sub
pop
jns
imul
fcmovne
pop
jb
mov
dec
iret
fimull
cmp
or
leave
add
mov
push
in
pop
xchg
jae
fcmovnu
xchg
in
bound
sarb
imulb
mov
push
aaa
stos
sub
adc
insl
jp
xorb
pop
int
cwtl
icebp
fs
sbb
divb
lcall
pop
push
hlt
fs
push
out
inc
sbb
pop
shl
xlat
xor
incb
popf
out
les
push
mov
and
popf
stos
cmpsl
in
popa
sbb
jp
xchg
aas
jns
enter
out
out
fisubl
lds
sub
faddp
inc
mov
pop
sub
jg
out
out
adc
rcrb
sub
mov
fwait
or
ret
stos
stos
push
aad
scas
pushf
in
lea
movsb
or
pop
ret
fidivl
pusha
push
push
fldenv
inc
push
mov
jns
mov
cmp
adc
or
mov
cmp
push
adc
xor
xchg
jnp
xchg
jle
lea
int3
xor
rorb
dec
ret
and
xchg
mov
ljmp
in
mov
lahf
cld
idivb
loope
push
mov
sahf
adc
or
in
es
data16
in
sti
sbb
pop
gs
add
jmp
or
cmp
stc
xchg
outsb
dec
fwait
adc
data16
cwtl
pop
jae
jecxz
pop
inc
adc
enter
fcomps
inc
push
sbb
gs
sar
adc
int3
mov
dec
lret
stos
jmp
mov
cmp
aaa
lock
out
xchg
or
xlat
pop
pop
enter
jmp
jp
je
push
dec
push
cmpl
arpl
pop
and
pop
call
and
push
or
jmp
push
inc
pop
mov
inc
mov
scas
xchg
or
mov
mov
add
xor
mov
dec
xor
adc
dec
test
add
ror
pushf
dec
jnp
scas
test
fisubrl
mov
in
xor
sbb
or
or
add
pop
aas
xor
add
aad
dec
cmc
pop
and
lret
mov
outsl
int3
fsubrp
pop
je
scas
lret
ret
pushf
int
jae
outsl
add
rorl
mov
mov
scas
xchg
mov
push
jp
rolb
pop
adc
fprem1
cmp
add
test
outsb
lret
pop
pop
xchg
pop
fnsave
mov
ds
push
sbb
incl
lcall
or
mov
jl
push
fisubl
mov
into
mov
sbb
out
sarl
mov
xchg
lret
push
sub
insl
stos
popl
xchg
xchg
cwtl
and
sub
mov
rorl
mov
fidivl
xor
shlb
adc
cmp
mov
popa
mov
pop
and
pop
jecxz
push
cwtl
hlt
cmp
push
mov
or
jae
pop
adc
xchg
sbbb
and
push
out
push
sahf
cwtl
mov
push
mov
addl
stos
cltd
fcoml
mull
push
popa
xchg
push
arpl
daa
aad
fcompl
mov
call
dec
mov
or
fmuls
out
addr16
jae
iret
addr16
add
pop
adc
xchg
aas
xor
jae
push
test
and
rcl
frstor
aas
jo
pop
loopne
dec
xor
jecxz
stc
inc
mov
cmp
or
jb
cmpsl
jmp
xor
xchg
or
scas
jae
push
mov
add
push
add
or
cmpsl
and
and
sbb
fnsave
cmp
push
mov
fwait
mov
icebp
inc
dec
scas
fidivl
test
gs
adc
ffree
jo
mov
fmuls
stc
xchg
push
xor
mov
fisubl
push
push
inc
ds
xchg
data16
stos
sbbb
incl
mov
jecxz
cmp
pop
testl
inc
add
testl
jmp
mov
andb
sets
pop
roll
mov
mov
xchg
test
xchg
inc
mov
stc
hlt
stos
cld
movsl
out
mov
in
or
jl
mov
xchg
ret
popf
jg
jecxz
jge
mov
out
mov
pop
or
pop
stc
test
imulb
jb
lcall
adc
pop
es
inc
sarb
lds
les
rorb
cli
data16
ljmp
in
pop
or
mov
mov
inc
xchg
inc
jns
data16
repnz
jg
or
into
fstpt
imul
lock
test
ja
cmpb
rorb
addr16
sbb
test
in
push
lods
bound
pop
mov
loopne
cmp
sub
jmp
and
or
fbld
push
mov
pop
loope
jne
and
cmp
inc
adc
xor
dec
push
or
in
and
arpl
xor
sahf
jns
pop
and
loope
lret
mov
decb
pop
rorb
push
xchg
jnp
push
jb
fs
cmp
xlat
xor
sti
inc
dec
fmuls
push
cmp
xor
das
xor
cmp
scas
inc
jg
sti
jmp
mov
mov
adc
jb
jbe
fwait
lcall
mov
jo
adc
enter
xchg
mov
inc
pusha
adcb
mov
and
cmpb
out
call
xchg
xor
test
stos
ja
insb
lret
addr16
sbb
imul
subl
cmp
adc
xor
jl
jle
faddl
mov
and
add
mov
fbld
sbb
jb
outsl
dec
cld
shll
test
add
shll
aaa
xchg
scas
cmp
icebp
out
add
mov
repz
xchg
popf
mov
adc
iret
fistpll
daa
mov
leave
es
or
sub
jne
fstpt
sbb
loope,pt
adc
mov
inc
jo
inc
mov
in
mov
je
stos
xchg
out
cmpsl
jge
test
pop
imul
sub
dec
cmpb
fwait
sbbb
rorl
dec
xor
test
adc
jno
lods
sbb
inc
mov
sahf
hlt
sub
push
adc
ret
jmp
dec
inc
push
jno
ds
les
jo
cld
loope
pop
jo
mov
lahf
jl
sbb
stos
sbb
jmp
sbb
nop
mov
add
and
pop
fbstp
adc
lods
mov
mov
rolb
mov
pusha
mov
xchg
out
inc
les
mov
pop
mov
aam
dec
push
pop
movsl
and
jge
or
bound
jg
sti
adc
rcll
xor
sbb
stc
cmp
addr16
inc
add
xor
push
je
and
lret
pop
xor
in
inc
pop
cmp
dec
sbb
xlat
lahf
pop
andl
insb
cmp
pushf
popl
nop
xor
sbb
ja
out
std
ds
xor
xlat
lcall
pop
sbb
aas
dec
adc
hlt
js
je
je
jp
pusha
icebp
xlat
lcall
and
and
jecxz
mov
loopne
into
paddb
ja
ret
cmp
mov
fisubrl
ret
stos
and
roll
arpl
cmp
inc
jmp
rorb
cmp
sub
repz
ljmp
and
or
pop
cmp
sbb
mov
lcall
mov
dec
aas
sti
fsubl
mov
sbb
mov
xchg
sub
push
arpl
daa
dec
and
in
aam
push
inc
add
out
push
mov
rcrb
push
add
into
mov
lock
or
sbb
dec
push
mov
lahf
lock
xchg
dec
into
ljmp
fsts
orb
sbbb
outsb
sbb
sbb
pop
cltd
pop
shll
xor
inc
sbb
xchg
push
sub
aaa
mov
lcall
inc
lahf
adc
mov
lret
dec
mov
pop
ret
pop
dec
jbe
adc
lds
sahf
xchg
in
sub
cli
lds
sbb
aaa
cltd
in
add
imul
push
cs
addr16
in
jo
mov
les
push
ret
dec
jne
stos
mov
xor
aas
mov
fwait
cli
std
cmp
test
push
xchg
daa
bound
inc
pop
pop
aas
cmp
stc
jo
mov
cmc
mov
mov
inc
cmpsb
iret
inc
mov
sahf
sbbl
mov
jne
push
shrb
adc
flds
in
mov
dec
mov
andl
push
xor
xchg
sahf
sti
xchg
and
flds
int
push
lods
stc
sub
addb
popf
mov
mov
in
imul
popf
lcallw
stc
pop
sahf
cmpsb
pop
sub
jbe
mov
imul
dec
or
leave
sub
aas
xor
lock
push
mov
lret
xchg
mov
sahf
addl
test
gs
and
rcll
std
dec
and
mov
and
push
fiadds
xor
ljmp
mov
int
xor
xchg
int
movsl
mov
mull
add
ss
fbld
aaa
outsb
testl
push
movsb
dec
pop
pop
mov
dec
lods
jo
dec
icebp
push
movl
cltd
std
in
sbb
xchg
and
cmp
cltd
mov
cmpsb
sub
cld
or
adc
inc
fnstenv
pop
inc
mov
sbb
addl
cmp
or
jle
arpl
sarb
and
ds
push
cmpsb
lods
and
in
dec
out
stc
aad
mov
jnp
mov
fmull
mov
push
lret
pop
dec
or
iret
js
push
fildll
mov
mov
add
in
fstpl
out
dec
out
push
adc
shlb
cmc
push
and
sbb
sbb
movsl
jno
out
roll
push
xor
out
shrl
out
cwtl
jecxz
add
and
aad
adc
xor
jecxz
jne
and
cmp
ja
xlat
lods
mov
push
sub
decb
jne
mov
sub
adc
jbe
jnp
mov
push
dec
xor
adc
insb
lahf
cmp
ret
std
xorl
add
push
push
fcmovne
xchg
cmp
nop
or
push
bound
mov
push
fnstsw
nop
das
xchg
xchg
fwait
add
mov
xor
add
adc
mov
repz
jl
pop
std
mov
negb
lds
movsl
clc
lret
fstpt
ret
imul
cmpl
xor
inc
icebp
mov
fcomps
and
dec
xchg
mov
lret
mov
pop
jno
xorl
mov
fstps
out
cmc
cmp
mov
lock
lret
subl
lret
orl
test
mov
push
or
lods
mov
dec
in
js
mov
xchg
push
adc
xor
jecxz
dec
std
or
add
shll
or
scas
mov
add
or
xchg
test
scas
push
fstps
in
shr
icebp
out
mov
insb
insb
jae
xchg
inc
lret
add
mov
sub
xchg
stc
das
xor
cmp
lea
in
daa
test
cmp
mov
adc
je
sub
out
dec
loope
aam
or
mov
cmp
scas
and
daa
test
pop
lods
sbb
shlb
mov
lret
inc
adc
adc
mov
mov
xchg
xorl
sbb
mov
dec
syscall
sbb
pop
xchg
pop
pop
pop
xor
xor
inc
sahf
xor
jecxz
das
cmp
xchg
xchg
sbb
sti
xor
xchg
in
cwtl
jbe
data16
push
xchg
loope
fstpt
ret
xor
mov
xchg
sbb
stos
push
aaa
and
subl
xor
inc
outsl
push
test
xchg
xchg
sbb
xorb
inc
cmp
dec
add
les
ret
dec
movsb
inc
mov
movsb
hlt
out
ret
xorl
in
aad
pop
pop
ds
test
aam
js
cmp
sbb
fdivl
pop
dec
aad
out
adc
sahf
pop
out
and
movsl
fiaddl
iret
jle
xlat
movsb
pop
mov
fwait
push
fs
mov
in
mov
adc
cmc
bound
arpl
es
pop
mov
add
into
in
cmp
pushf
push
adc
mov
shl
push
or
mov
inc
pop
or
popf
xorb
clc
filds
adc
or
outsl
repnz
dec
jmp
inc
sub
out
imul
jns
pop
pop
and
aam
mov
mov
push
push
imul
mov
scas
lods
xor
pop
les
dec
popa
mov
sub
test
sub
pop
in
cli
fs
iret
adc
xlat
add
add
test
outsb
out
mov
repnz
or
pop
push
movl
lcall
mov
mov
add
outsl
insb
out
mov
repz
sbb
pop
mov
mov
xchg
ljmp
in
shll
rcl
push
jg
pop
mov
cli
adc
mov
pop
cmc
shrb
js
xorl
das
pop
addr16
dec
xchg
and
xlat
daa
dec
lods
push
fdivl
call
pop
test
mov
xchg
in
les
pusha
fcmove
push
xchg
lds
pop
jle
push
mov
outsl
test
and
xchg
cmpsl
insl
adc
icebp
je
mov
dec
or
or
int3
mov
movsb
out
enter
pop
mov
jg
push
push
dec
inc
add
lahf
icebp
cmp
outsb
jmp
negl
mov
out
cmp
in
out
xchg
mov
lods
ljmp
and
push
or
or
loopne
add
pop
sbb
mov
jo
add
jo
push
xor
negb
sub
clc
das
das
inc
repnz
loopne
and
push
jle
test
int3
xor
pusha
pop
inc
pop
xchg
dec
mov
cmpsl
int3
popf
loopne
cli
xlat
add
call
imul
rorl
jns
das
loop
xchg
mov
test
push
xchg
xchg
xchg
pushf
repz
cmpsb
sti
inc
adc
or
ljmp
push
loop
sub
inc
fs
jl
push
loop
sbb
movsl
rcl
movsl
xor
out
rcrl
xor
push
pop
mov
stos
subl
push
jo
jg
fbld
pop
subl
bnd
movsl
add
aaa
out
loop
or
js
or
mov
test
cltd
shlb
test
xor
ret
lret
clc
jne
push
mov
leave
in
adc
sub
cmp
dec
mov
lret
shlb
ret
jne
xor
jnp
test
sub
lahf
pop
or
std
sbb
adc
int3
mov
push
popa
xchg
fwait
or
mov
push
mov
lea
dec
data16
mov
sbb
cmp
das
dec
xorl
sub
aam
ret
popf
mov
loope
movsl
std
and
inc
cmc
cs
daa
and
adc
cli
ljmp
jecxz
icebp
dec
test
xor
in
in
dec
mov
cli
xor
xor
int3
mov
sbb
fldl
movsb
fstpt
or
sub
push
lcall
popa
rol
or
mov
sar
sub
orb
stos
jg
and
iret
and
aam
dec
or
xchg
cmp
jmp
push
sbb
int3
fsubrl
adc
pop
ds
lret
mov
push
pop
mov
jbe
sbb
adc
outsb
cld
fs
std
dec
jbe
cmp
mov
out
or
fcmove
lds
push
fs
jge
push
pop
popf
outsl
ret
mov
setb
xchg
adc
fsubrl
cmp
or
mov
fwait
dec
faddl
add
sbb
orl
lea
add
jle
test
adc
aad
dec
xchg
out
sub
lock
loop
add
cltd
xlat
fs
dec
jnp
push
sub
into
push
mov
adc
pop
inc
clc
enter
lret
sbb
nop
dec
mov
ds
out
mov
jne
outsl
jg
lds
xchg
mov
popa
scas
in
xchg
pop
mov
out
dec
pop
std
xlat
ss
lahf
insl
mov
adc
mov
push
js
inc
mov
rcrl
adc
movsb
daa
arpl
jle
xlat
inc
jg
add
xchg
xchg
aaa
movsb
mov
sub
push
shll
dec
jae
jbe
xor
pop
pusha
sub
fadd
test
mov
jmp
les
and
or
pop
sbb
test
mov
mov
cmc
sti
daa
push
push
xchg
test
pop
dec
pop
imul
call
jns
sub
mov
push
push
je
pop
test
or
rcl
push
loopne
js
xchg
insb
pop
cltd
cmpsl
repz
fwait
cltd
shll
xor
cs
fs
jae
push
add
jbe
std
ret
sub
lods
bnd
stc
int
xchg
fisttpll
push
jle
push
icebp
mov
filds
fwait
bound
sub
jle
hlt
repnz
mov
cmp
dec
loope
stc
adc
cmp
dec
test
pop
sarl
das
dec
iret
popf
jnp
add
fistl
out
and
lds
sub
dec
mov
daa
pop
daa
cmpsl
arpl
loopne
mov
cmc
outsl
fcomp
lds
adc
mov
mov
or
cmc
into
sbb
out
push
loopne
mov
mov
outsb
outsl
mov
xor
rorl
movsb
add
xor
pop
popa
jecxz
mov
jl
int
jnp
pop
push
int
or
push
and
cmpsb
arpl
mov
idivb
cmp
xchg
gs
adc
pop
popa
into
js
xchg
mov
shl
popa
andb
jle
jbe
mov
sub
adc
in
sbb
cmp
sarl
mov
in
cmp
add
xor
adc
mov
clc
pop
outsb
sub
jecxz
push
movsl
mov
ss
imul
insb
and
enter
push
int
js
dec
loopne
leave
push
jecxz
cld
arpl
test
or
pop
dec
jns
daa
orl
rorb
sub
and
pop
lret
pop
push
scas
push
fsubl
fstl
dec
and
inc
cmc
ret
out
pop
mov
push
sub
sub
daa
sub
mov
xchg
cmpsb
into
aad
pop
jne
sub
or
movsl
fisubs
mov
cmp
les
sub
iret
push
cs
adc
adc
and
dec
sbb
mov
xor
sub
adc
sbb
inc
je
pop
sub
jecxz
dec
aam
pop
fisubrs
ret
mov
jno
in
dec
and
cltd
leave
pop
or
shll
in
xchg
add
clc
push
imul
dec
push
jmp
dec
or
pop
dec
sbb
iret
iret
jle
push
insl
icebp
sub
mov
jle
jb
and
mov
rcrl
mov
imul
push
insl
mov
cmpsl
loopne
lea
push
lea
filds
lea
outsl
xchg
imul
inc
adc
jg
jge
pop
scas
popa
or
sub
inc
mov
dec
dec
and
xchg
icebp
xchg
popa
jp
xor
fildl
inc
imul
mov
out
sub
enter
mov
icebp
adc
mov
push
adc
push
jae
cmp
cmpsl
pop
lcall
pop
in
test
repz
add
inc
xchg
push
jbe
pop
lret
push
mov
addr16
jne
loopne
sub
and
mov
push
cmp
enter
sbbl
loop
int
es
cmp
or
cltd
lods
fnstenv
jg
data16
ljmp
dec
pop
xchg
dec
sbb
jl
icebp
daa
lods
pop
test
int
filds
cmpsl
nop
out
inc
lret
divb
mov
repz
mov
addr16
dec
andl
pop
test
arpl
jae
adc
add
cmp
mov
dec
sub
cmp
sub
mov
mov
lea
dec
fucom
movups
and
cmp
jle
cltd
loope
lds
push
pusha
mov
pushf
mov
xchg
mov
into
xchg
sbb
or
cwtl
xor
jae
xlat
stc
in
orl
sbb
or
jae
shl
sub
test
dec
cld
cmp
ljmp
je
mov
pop
faddl
xchg
push
fisubl
aad
jmp
sbb
xor
dec
addr16
dec
xlat
inc
inc
icebp
mov
test
popa
push
leave
shl
scas
imull
movswl
mov
lcall
pop
mov
ja
inc
mov
and
ds
push
lods
and
adc
push
inc
mov
popl
xor
inc
jb
dec
adc
cld
mov
dec
inc
loopne
pusha
ljmp
adc
lods
mov
dec
adc
das
mov
stos
cmp
dec
add
sahf
mov
cmp
sub
lret
sti
faddl
mov
push
rcrl
push
jo
jmp
bound
lret
popa
mov
into
fsubs
and
je
mov
dec
popa
popf
ss
sub
adcl
iret
call
sarl
adc
enter
pop
jns
loopne
sub
sahf
jg
inc
outsb
dec
add
dec
stos
sbb
sbb
popf
jo
std
fistpl
ss
and
sub
mov
xor
jo
bound
jl
outsl
or
orb
xor
sbbl
das
xor
xchg
test
sub
dec
cmpsb
hlt
pop
in
sbb
inc
xchg
int
xchg
mov
jl
mov
ljmp
xchg
les
sub
outsb
xor
in
int3
lret
dec
xchg
add
movsb
fdivrl
testb
fimull
jmp
aad
inc
and
dec
cmp
js
cmpb
out
push
inc
pop
out
stc
inc
arpl
mov
sub
insl
xor
int3
adc
add
mov
dec
jne
ret
mov
push
cld
sub
push
orb
push
into
inc
cltd
push
js
sarl
pop
cmpb
push
mov
dec
sbb
loop
adc
push
adc
movl
stos
cmp
ljmp
pop
mov
jns
aas
adc
cmpsb
pop
aaa
das
test
and
scas
fildll
pop
or
or
mov
sbb
mov
inc
sub
cmp
push
repnz
test
negb
xor
jb
or
cmp
push
cmp
pop
mov
popf
jno
add
jecxz
scas
notl
and
mov
aaa
pusha
mov
aam
in
fstps
xchg
test
lret
inc
fxch
mov
bound
scas
add
fmul
mov
rorb
fst
push
lods
fs
mov
dec
sub
mov
pusha
cmp
mov
stc
filds
dec
mov
adc
les
inc
out
pop
sbb
adc
dec
jecxz
mov
pop
adc
mov
add
dec
rorl
insl
push
inc
jb
stos
inc
adc
adc
add
adc
or
adc
test
stos
xchg
js
mov
sahf
je
pop
push
cltd
push
dec
ret
mov
arpl
sub
testl
sbbb
push
dec
jge
hlt
cltd
mov
in
jno
in
test
out
ret
jb
cmp
push
das
cmp
or
shll
lret
or
inc
inc
mov
sbb
push
stos
pusha
lock
vmread
xor
add
test
mov
sbb
jnp
mov
out
xor
cli
mov
xor
popa
mov
divb
stos
sub
rolb
imul
mov
jo
add
push
fmull
lods
addr16
dec
mov
mov
out
nop
movsb
jb
dec
add
es
lret
adc
lret
sub
xchg
nop
cmc
iret
jnp
push
outsb
and
adc
mov
xor
xchg
sbb
icebp
gs
mov
shll
mul
dec
xchg
inc
aad
cmp
pop
mov
fcomi
shll
lret
inc
xor
add
mov
cli
jp
subps
fs
dec
adc
call
sub
xchg
lret
jo
xchg
andb
mov
xchg
jns
sbb
add
inc
dec
test
leave
add
inc
mov
loop
lahf
xor
leave
ljmp
fsubs
js
sarb
add
dec
cld
jmp
cmc
ljmp
mov
bnd
jns
pop
out
cmc
push
mov
mov
ds
repz
jge
pop
add
sbb
push
lods
lret
ret
fldl
enter
mov
dec
test
sub
andb
fisubrl
add
jbe
test
movsb
mov
sbb
sub
call
sbb
inc
and
and
rcrl
lret
inc
loope
jmp
add
loop
roll
nop
ss
cmp
or
test
jb
imul
loopne
push
lret
mov
jge
add
out
imul
loopne
scas
icebp
dec
sbbb
add
andl
cmp
jecxz
cmp
or
mov
imul
ror
pop
adc
lds
lahf
movsb
popf
out
sbb
dec
push
int3
xor
pop
lods
inc
sbb
loop
in
cmp
out
mov
leave
scas
sub
mov
fldt
add
jnp
dec
inc
stc
jne
imul
loopne
adc
loop
roll
sbb
adcl
fcmovb
mov
scas
sti
repnz
cmp
fdivrl
cwtl
std
subb
test
dec
inc
xchg
gs
pop
lds
adc
add
mov
lock
icebp
mov
sub
push
mov
rorl
aad
popa
push
pop
bswap
mov
mov
loop
jl
popf
sub
mov
add
xlat
jno
pop
fs
rolb
fimuls
movzwl
add
test
jo
das
repz
outsl
mov
mov
pop
xor
test
lock
enter
jb
jns
subb
fcoms
aad
sbb
mov
pop
fchs
mov
xchg
out
lahf
aam
jno
jns
pushf
popa
stos
push
dec
out
das
sti
mov
xorl
repz
fldenv
and
xchg
loopne
outsb
and
adc
mov
and
mov
sub
ds
lods
rcrb
outsl
je
and
xchg
push
xor
jno
aad
pop
adc
lea
dec
aaa
jns
in
fnsave
pop
insl
jnp
stc
lods
stc
mov
lret
xchg
pushf
iret
scas
repnz
inc
and
mov
dec
fs
jecxz
inc
outsb
mov
das
inc
aaa
add
dec
insb
sub
cmp
hlt
adc
das
and
pop
or
in
popf
pop
xchg
xor
adc
lret
sbb
push
mov
sbb
inc
or
lcall
lock
scas
dec
mov
aaa
sub
jg
dec
cmp
out
adc
cmp
inc
xchg
outsl
popa
mov
sub
sub
adc
xlat
and
cmpsb
out
pop
cld
hlt
test
push
xor
loopne
incb
mov
mov
push
adc
mov
pop
inc
sub
nop
add
ret
fwait
mov
adc
push
jbe
add
aas
pop
pop
out
dec
mov
cmp
jmp
adc
dec
pop
xor
mull
dec
sti
pop
mov
add
push
rclb
dec
mov
movsl
enter
adc
cwtl
imul
adc
jnp
cmpsl
mov
das
loope
shlb
movsl
push
sub
mov
or
jmp
jno
mov
fdivrl
cmp
sub
shr
call
fwait
out
sbb
push
jp,pt
ja
fadds
inc
ja
repz
leave
push
xchg
cli
cmp
push
jmp
jp
push
mov
push
mov
xlat
inc
or
jns
into
lds
sahf
ret
test
push
popf
sbb
ss
xchg
rol
inc
mov
sub
and
inc
cmp
jp
dec
or
mov
stos
inc
jae
jb
jecxz
movsb
dec
mov
into
mov
rorl
lcall
mov
lcall
jmp
xor
fisttpl
jg
dec
push
or
pusha
push
setnp
pop
dec
push
and
xchg
fisttpll
dec
es
dec
outsb
mov
outsl
sub
insl
stc
and
or
jecxz
rcrl
cmpsb
ret
dec
hlt
cmp
pusha
mov
lds
xor
jo
add
inc
push
test
jns
mov
ret
popf
lock
and
mov
nop
push
mov
rcrl
ss
mov
fidivrs
loopne
push
lods
mov
into
mov
mov
div
jb
stos
xorb
fnstenv
pop
xor
rclb
fimull
sahf
in
fildl
sub
jge
xorb
in
cmc
mov
imul
push
ret
xor
jns
pop
xlat
cmp
repz
shll
fsubs
testl
loop
push
mov
add
mov
jae
les
adc
add
stos
cltd
fimull
mov
out
js
out
jbe
bt
push
pop
icebp
stos
repnz
dec
adc
or
int
adc
or
sbb
leave
add
cld
outsb
ret
loopne
mov
cmp
dec
dec
div
insl
xchg
inc
cltd
mov
rcrl
lret
and
add
cld
cmp
dec
sti
push
subb
pop
out
xor
ret
cmp
dec
push
mov
jo
add
mov
out
jmp
mov
lods
and
dec
xchg
insl
add
enter
ja
jp
jge
stos
in
pop
stos
inc
rorl
jbe
mov
loop
mov
add
or
pop
adc
add
aaa
jmp
sub
cmpsl
push
mov
cmp
mov
ret
fmul
mov
aaa
cli
sub
outsb
pop
shl
in
pop
push
jnp
lahf
pop
stc
xchg
andl
loope
test
clc
jge
mov
scas
add
stos
cmp
mov
mov
push
mov
cltd
xchg
cmp
mov
and
mov
hlt
data16
in
sub
js
jns
dec
shlb
das
addr16
xchg
cmp
xor
incl
mov
das
js
shrl
mov
pushf
sub
jo
push
outsb
sbb
ficoms
xlat
lret
push
xor
xor
fcoms
jecxz
pop
fstl
push
loop
inc
inc
push
and
icebp
outsl
push
mov
mov
xor
mov
sub
xorb
sbb
or
and
push
rorl
jno
cs
jno
cmpsb
mov
dec
pusha
fs
dec
add
sub
adc
mov
call
xchg
shrl
test
fdivrs
cmp
dec
jne
rolb
mov
jns
in
push
mov
movsb
pusha
iret
je
xchg
scas
push
inc
fwait
mov
fsubl
mov
jbe
push
rorb
xchg
xlat
jbe
pop
rorb
or
adc
add
jp
mov
jecxz
xlat
scas
or
movsl
jmp
mov
xlat
cwtl
cmpsb
out
mov
mov
nop
sub
inc
roll
pop
outsb
and
fst
outsb
pop
or
dec
adc
cmpxchg
push
sbb
test
push
roll
test
push
jne
enter
add
lds
mov
pop
inc
sub
jmp
mov
mov
test
test
push
xor
xchg
adc
aam
lods
push
push
or
aad
out
dec
sbb
xor
and
dec
inc
hlt
aad
mov
pop
and
push
ret
adc
fiadds
test
clc
push
adc
orb
adc
jb
jno
add
popf
dec
lds
lret
lahf
or
mov
push
fisttpl
inc
cmc
inc
mov
aam
jg
xchg
clc
pop
sbb
out
insl
pop
push
fistps
fnsave
sbb
mov
dec
or
es
subl
dec
es
mov
pop
jns
push
nop
and
jo
out
lods
popl
test
jnp
imul
and
and
je
in
sbbb
xor
pop
xor
in
pop
js
mov
and
andl
test
outsb
sub
adc
push
xor
jle
and
xchg
or
push
pusha
shlb
jnp
lds
addr16
push
jns
cmp
pop
dec
or
mov
xchg
cmpsb
sbb
sbb
adc
test
in
xchg
sahf
push
mov
add
and
das
push
mov
in
fbstp
hlt
mov
and
adc
and
mov
mov
iret
cmp
test
jno
lds
cmp
mov
or
fcoms
or
jp
movsb
and
cli
loope
pusha
addb
std
test
and
push
std
jns
cmp
cmp
pop
in
pop
cltd
inc
lea
xor
dec
mov
sub
test
xchg
fnstsw
gs
cmc
pop
mov
ficoms
js
and
fisubrl
negb
sahf
hlt
lods
fisubl
mov
dec
mov
mov
enter
mov
xorb
ja
scas
or
sbb
mov
fistl
add
ret
addr16
out
or
stc
clc
sbb
pop
cmp
sbbl
jmp
lret
dec
in
aad
in
inc
imul
fldt
mov
lods
loopne
mov
imul
add
add
xchg
dec
jl
inc
cmp
add
and
in
in
loope
cmp
stos
jo
xor
in
mov
or
out
fmull
scas
mov
sub
mov
data16
ds
dec
in
adc
std
test
add
mov
cmp
jl
leave
hlt
insb
es
sub
in
mov
pop
or
fwait
dec
jge
jb
xchg
cmp
mov
stc
jns
cmp
cs
jne
cmp
imul
pop
xchg
add
sarl
xchg
lods
dec
in
movsb
leave
stos
pop
mov
dec
insb
and
mov
into
aas
icebp
cltd
dec
cmp
xsaves
fnsave
adc
sub
jno
dec
fisttpll
sbb
sbb
imul
movsb
mov
jl
sbb
adc
or
movswl
mov
sub
pusha
jecxz
int3
rcll
mov
ljmp
mov
movsl
adc
enter
jecxz
and
data16
jp
cltd
cmp
ficoml
mov
ret
adcl
push
dec
lods
fdivrp
rcl
and
mov
out
scas
push
xchg
xor
and
push
jno
into
push
jo
lock
xchg
mov
push
xchg
dec
shlb
movsb
sub
outsl
cli
enter
sahf
rolb
jl
lods
mov
icebp
mull
ds
cmp
ret
inc
mov
lods
cs
in
es
pop
into
jl
mov
sub
lock
add
enter
jmp
clc
sub
idiv
fdivrs
les
insb
sti
mov
mov
push
mov
mov
test
adc
sub
outsl
mov
jmp
dec
push
inc
sub
inc
cmp
test
lods
iret
enter
outsb
ds
push
dec
repnz
lcall
mov
aaa
ss
cmp
cmc
xor
push
jb
mov
out
aam
mov
jb
iret
int
xor
icebp
scas
xchg
xchg
adc
jecxz
jnp
jmp
sbb
mov
sahf
inc
push
fdiv
js
or
insl
cmp
stos
fs
in
xor
sti
loope
cmp
call
cld
add
jnp
mov
jo
xchg
icebp
inc
mov
dec
sub
in
push
mov
hlt
or
lock
sub
sarb
mov
out
ja
imul
imul
jle
add
jb
mov
cmp
mov
xor
gs
xchg
pop
sarb
loope
inc
xor
fdivrl
fists
stc
mov
mov
scas
cmp
xchg
push
sbbl
xor
dec
inc
mov
stos
xor
xor
dec
inc
ficoms
dec
dec
add
mov
jl
stc
mov
jle
pop
shrl
and
addb
mov
jle
mov
iret
push
xchg
or
scas
ljmp
daa
in
xor
sti
outsb
addr16
cli
out
dec
xor
outsl
jne
mov
ds
lods
or
cmpsb
add
das
loopne
inc
in
xor
or
pop
sarb
testb
mov
das
dec
jmp
inc
mov
pop
bound
inc
stos
out
push
ss
pop
cmp
enter
mov
and
testb
shrl
dec
idivl
pop
cmpsb
xor
lcall
cmp
js
pop
mov
mov
sub
sub
and
roll
mov
aad
cmp
jmp
inc
pop
ret
scas
faddl
es
push
inc
lods
outsb
sub
mov
out
ret
cmp
xlat
subb
xor
incl
xchg
call
cmp
incl
inc
add
pop
fstp
mov
mov
loope
nop
dec
ror
sub
lahf
jb
pop
dec
or
sbb
in
adc
mov
movb
fsubr
cmp
fwait
cmp
adc
in
test
loop
iret
xorl
dec
nop
pop
mov
dec
out
js
or
call
mov
add
in
cmp
and
out
push
cld
mov
loopne
lods
add
push
int3
dec
addr16
push
jns
sub
and
push
imul
ja
inc
inc
fmull
and
jle
test
bndstx
adc
int3
lock
lods
pop
cs
push
data16
test
insb
mov
shrl
dec
cmp
mov
leave
ss
insl
dec
mov
pop
loopne
or
nop
in
ds
lea
push
add
pop
outsb
and
xchg
push
push
les
mov
xacquire
cmp
mov
nop
dec
stos
lcall
inc
mov
dec
cmpsb
adc
mov
dec
orl
add
or
daa
mov
jmp
data16
cmpsl
and
aad
stos
aaa
push
xorb
or
loop
sbb
jno
mov
loop
push
in
jne
hlt
sub
cmc
sbb
adc
mov
xchg
movsb
lea
icebp
mov
repnz
or
jecxz
or
ds
fdivrs
fs
lea
adc
jae
xchg
packuswb
xor
mov
push
mov
xchg
jb
add
inc
add
iret
add
add
or
jae
sub
out
sbb
push
pop
mov
mov
mov
adc
cltd
aam
in
loop
out
imul
imul
data16
stc
pop
outsb
pop
dec
mov
cwtl
inc
dec
fidivrl
xchg
sbb
cmc
pop
mov
mov
in
fisubrs
loope
fs
add
mov
insb
add
mov
icebp
outsl
xchg
es
lods
jne
jae
lret
jbe
push
pusha
add
hlt
and
in
fwait
jp
mov
out
fmul
jb
hlt
lcall
push
popf
and
jnp
hlt
inc
fadds
cmc
jg
ljmp
stos
xchg
mov
or
arpl
xchg
push
sahf
jo
mov
inc
and
insb
or
lcall
divb
inc
les
adc
push
inc
adc
pop
or
mov
dec
js
pop
xchg
mov
add
cmpsl
mov
sub
adc
mov
out
jb
push
mov
in
push
enter
sub
cmp
add
xchg
imul
push
mov
insb
and
mov
int3
adc
ja
jb
jle
mov
or
dec
pop
jae
aam
sub
mov
inc
repz
and
jbe
add
xlat
add
xor
nop
and
mov
lds
shlb
push
mov
test
lds
je
push
addr16
popa
jecxz
sahf
popf
mov
and
and
push
dec
mov
or
xchg
push
mov
js
out
push
test
ss
ficompl
push
lods
scas
mov
call
shrl
cmp
lcall
pop
mov
cmp
shr
hlt
call
push
xor
inc
dec
shll
aaa
sub
sub
xchg
add
xor
pop
xor
repz
xchg
iret
pop
mov
int3
adc
jmp
ljmp
popf
jo
loop
adc
mov
aaa
nop
jne
out
mov
mov
movsb
jnp
rolb
out
popf
test
fadds
adc
movsl
mov
fwait
xor
ficoml
imul
sahf
inc
sub
js
cmp
out
pushf
sbb
icebp
in
loop
leave
cmp
push
sub
ljmp
imul
fwait
shrb
cmp
inc
hlt
std
mov
fimuls
clc
mov
cmpsl
test
sbb
insb
jns
test
cmpsl
push
daa
jmp
hlt
ret
in
inc
cmc
push
leave
fisubrl
pop
adc
ljmp
and
in
xlat
clc
adc
loopne
mov
movsl
fst
adc
idiv
pop
push
repnz
out
jecxz
loop
pop
sub
add
or
dec
std
sbb
jle
adc
dec
rcrb
cwtl
inc
and
int
enter
jns
and
sti
xchg
xchg
cmpsb
sub
int
sbb
or
icebp
jle
cld
mov
mov
stos
push
popf
xchg
xchg
clc
lret
fucom
das
mov
movsb
mov
adc
jecxz
mov
sbb
in
ret
xchg
adc
inc
push
cmp
lock
sbb
push
std
push
mov
push
mov
test
xor
leave
xchg
sub
jae
jo
cmp
push
push
dec
jecxz
jmp
pusha
mov
mov
inc
fiaddl
je
addl
movsl
push
ficomps
int3
idivb
add
outsl
push
insl
fidivrs
mov
insb
adcb
lock
mov
dec
rcr
movsb
outsl
or
jecxz
aad
stos
or
sbb
fcomi
mov
std
jge
test
jbe
fwait
outsl
insb
subl
scas
ret
into
push
test
bound
pop
pop
dec
mov
xchg
jns
outsl
add
cmp
dec
gs
xor
lods
dec
out
sbb
mov
icebp
adc
mov
adc
inc
fnstcw
sbb
subb
cld
push
xchg
pop
je
sub
aaa
add
inc
xchg
mov
jnp
lret
js
je
adc
mov
pop
add
insl
inc
pop
ja
mov
jecxz
jns
lret
dec
sarb
or
push
and
mov
loope
xchg
lcall
hlt
imul
mov
jmp
clc
sbb
jo
rolb
xchg
mov
mov
dec
aaa
push
cltd
lock
ret
mov
stc
xchg
cs
dec
mov
lock
es
cmpb
cs
arpl
pop
and
cmp
push
mov
pop
xor
aad
aad
mov
outsb
mov
sbb
insl
insb
ja
add
mov
mov
mov
push
testb
rclb
cmp
or
hlt
pop
divb
dec
xchg
insl
es
mov
shl
pushf
ret
xor
sbb
jmp
xchg
out
icebp
and
rorb
push
pop
xchg
pop
nop
sahf
jp
xlat
push
dec
cltd
dec
push
pop
insl
ret
mov
daa
es
pop
rcrl
sahf
je
push
mov
fdivr
pop
dec
push
push
add
sti
test
dec
or
shll
adc
xor
jge
in
js
mov
and
fidivrs
mov
mov
repz
and
mov
fwait
and
imul
sub
pusha
ss
roll
lahf
jb
fs
pop
bound
add
mov
xchg
inc
ret
in
inc
popa
mov
xlat
add
out
inc
jne
jae
xchg
xchg
cmpl
mov
pop
fldenv
xchg
xchg
jno
inc
pop
pop
inc
sub
mov
shll
sub
pushf
in
mov
fmuls
xor
xchg
ds
ljmp
arpl
jne
push
push
ss
inc
cmp
stos
pop
leave
cld
idivl
inc
dec
stos
xchg
data16
fldl
ljmp
shll
mov
push
or
xchg
xor
jge
data16
pop
xchg
repz
xchg
push
bound
cmp
aaa
sub
lcall
ficoml
aad
jmp
aas
test
rolb
lahf
jb
push
mov
and
jl
push
out
loop
aas
popf
adcl
mov
rcll
pop
test
fisubrl
sti
ret
addr16
mov
les
jp
pop
sub
push
stos
loopne
push
mov
rep
addl
and
subl
fwait
outsl
mov
mov
sub
dec
push
or
sbb
aaa
jmp
ficomps
or
pop
jb
add
ret
out
shrb
mov
repz
jne
push
mov
mov
repz
mov
jp
dec
mov
jl
repz
fcompl
add
mov
std
mov
jne
push
scas
mov
lea
fiaddl
leave
xchg
rcl
out
add
call
test
pushl
pusha
fbld
imul
add
clc
test
xor
rcr
lds
out
pop
mov
inc
mov
andl
std
xor
clc
and
dec
fwait
sbb
btsl
jae
movsl
dec
subw
gs
in
jle
and
mov
sub
cltd
ss
mov
fwait
sub
mov
pushf
mov
adc
dec
sub
jp
loopne
popa
cltd
xchg
fldenv
and
and
je
shrb
or
hlt
stos
sbb
out
fsubp
in
and
jle
lret
sub
xor
push
shlb
xchg
je
mov
xchg
xchg
pop
cmp
jl
push
call
scas
das
repnz
insl
into
dec
pop
fldcw
rcll
sub
cli
mov
test
lahf
mov
xor
cmp
push
out
test
std
jle
lods
push
mov
xor
inc
ror
jne
xor
imul
in
in
testb
leave
stc
out
sub
jns
loope
add
dec
pop
mov
int3
mov
push
mov
in
push
pusha
lret
adc
xor
pop
xlat
rcr
jns
sub
ret
push
test
jl
adc
xor
les
sbb
dec
or
stc
test
neg
loopne
pop
mov
sub
dec
sahf
cmp
xchg
add
push
stos
mov
jbe
dec
clc
cmp
in
in
and
mov
mov
lahf
scas
pop
and
add
mov
inc
adc
mulb
adc
push
inc
or
jae
adc
loop
js
mov
lcall
mov
call
xor
mov
int
fnsave
js
pop
mov
loop
das
push
mov
cmp
mov
inc
loope
or
sarb
push
mull
cld
cmp
mov
jecxz
je
aam
aad
lods
imul
sub
xor
inc
movsb
sbb
outsl
hlt
lods
dec
aaa
jo
sbb
lahf
xor
adc
dec
xor
notb
xchg
xchg
xchg
scas
xor
shll
adc
inc
hlt
adc
sbb
out
loopne
push
aam
stos
pop
cmp
jp
jo
inc
lcall
sub
xchg
mov
adc
or
mov
and
push
push
sbb
fwait
mov
mov
inc
iret
lods
jl
sbb
mov
mov
icebp
ljmp
mov
push
loop
pop
and
loopne
jne
mov
xor
aas
xlat
jecxz
fnsave
scas
xor
sbb
jle
incl
fidivrl
cmp
mov
test
test
lods
adc
js
shrb
fbld
inc
inc
jbe
pushf
and
sub
adc
cld
pop
jle
daa
jae
das
popf
jl
test
pop
loope
cmp
push
sbb
insb
call
cwtl
lods
pop
add
fildll
les
fnsave
in
jg
cmp
cmp
and
and
lahf
cld
mov
mov
push
sub
cmp
int3
fucomi
jg
into
inc
add
cmp
lods
jae
cltd
sahf
xlat
test
inc
push
push
dec
cli
jns
adcl
jge
mov
mov
jl
fstpl
add
pop
xchg
decb
scas
mov
addr16
sub
and
out
iret
ss
cli
in
mov
pop
loopne
lcall
das
je
ss
mov
test
pop
outsl
add
outsl
lods
shll
and
dec
out
aad
lahf
mov
push
cltd
fwait
sub
hlt
notl
mov
jnp
loope
inc
mov
popa
imul
test
mov
stc
pop
repz
dec
push
pop
xor
insb
popl
cmpl
insl
stc
sbb
xchg
cs
mov
shlb
mov
lock
idiv
repnz
mov
clc
mov
mov
xchg
ficoms
movsb
cmp
popf
pusha
js
rcl
mov
push
sub
add
into
pop
aam
aad
add
or
or
mov
js
in
sbb
rcrb
xchg
cmp
mov
loope
outsl
icebp
mov
add
mov
sahf
xchg
in
dec
mov
jge
mov
scas
cmp
inc
arpl
out
sub
movsb
sub
in
scas
call
mov
fisttpll
out
icebp
cmpsl
scas
xchg
ss
rorb
xor
dec
push
div
iret
js
pop
mov
movsb
mov
sub
xor
jmp
sbb
mov
dec
je
pop
inc
mov
jb
lahf
cwtl
clc
or
or
or
js
cld
incb
mov
mov
jl
cmpsb
in
ja
es
les
sbb
xchg
addb
gs
test
pushf
scas
mov
add
xchg
lret
xchg
pop
mov
cwtl
and
xchg
outsb
hlt
sbb
int
jno
lret
pushf
xchg
jge
sbbb
imul
mov
mov
jecxz
sub
or
jno
lods
adc
xlat
stc
test
shl
enter
out
dec
mov
jns
inc
outsl
dec
popf
jae
and
stc
sub
dec
cmpsb
bound
call
inc
ret
or
test
rorb
and
xor
jbe
call
int3
shl
out
jg
into
cmp
cmp
xchg
cmp
js
inc
test
call
lcall
mov
sub
negb
jle
cli
or
jp
xor
repnz
sbb
push
test
aad
scas
sbb
sbb
scas
jge
mov
popa
lds
adc
popf
mov
pusha
pop
call
cwtl
xchg
aaa
pusha
xor
es
ret
scas
mov
xchg
xor
clc
nop
inc
inc
lods
dec
test
add
dec
or
enter
pop
cmp
pop
mov
rcr
cwtl
push
cmp
pop
jg
pop
call
jo
jns
cmp
xchg
pop
mov
mov
xor
movsb
pop
adc
pusha
or
sar
push
pop
loopne
pop
bound
fisttpll
sub
pop
lods
mov
pushf
inc
dec
ss
cmc
mov
lahf
add
fs
sub
ds
sbb
cmp
inc
adc
cmp
dec
lahf
mov
cmpsl
scas
bound
pusha
in
xchg
xor
mov
fbld
and
cwtl
jle
cmpb
mov
loopne,pt
andb
test
and
test
xor
cltd
xchg
sbb
mov
push
shl
popa
data16
inc
add
push
push
push
jge
lret
adc
cmp
out
int3
repnz
inc
lds
mov
or
mov
pushf
cltd
ljmp
fstpl
stos
ljmp
or
pop
cmp
ds
test
repz
stos
jp
cmp
rorl
pop
daa
daa
xchg
mov
dec
sahf
or
pop
add
insl
stos
fdivl
mov
jl
loop
xchg
mov
loopne
mov
loopne
cmc
mov
push
lar
inc
mov
mov
xchg
inc
jg
sbb
xchg
jge
test
repnz
add
sti
outsl
mov
or
lea
xchg
fs
xor
cmp
cmpsb
setle
ficoml
in
jno
jo
popf
lret
fs
cmpsb
xchg
xchg
mov
cmp
insl
push
ja
cli
inc
jae
sub
insl
aas
mov
xor
inc
or
pop
js
cmpsl
sbb
sbb
pop
push
push
dec
lock
addb
jbe
addr16
jp
mov
add
add
call
test
pop
pop
das
clc
cmp
stc
ljmp
rolb
shrb
xor
je
jbe
or
lods
pop
xor
add
imul
dec
arpl
push
in
insb
insl
aad
or
movsb
push
lcall
fbld
faddl
push
aas
std
mov
mov
icebp
sub
aad
pop
dec
inc
cli
bound
sub
xor
movsb
xchg
jg
push
sub
xchg
or
scas
leave
inc
lock
es
cmp
out
xchg
jbe
dec
das
fs
push
nop
stos
xor
add
ficomps
mov
dec
hlt
mov
andl
out
daa
nop
push
jb
and
jae
or
std
stc
ret
mov
pushw
push
mov
cld
and
push
inc
inc
xor
cmp
jecxz
jl
push
arpl
movsb
jl
mov
pop
sbb
mov
sub
dec
inc
push
inc
push
inc
icebp
dec
in
xchg
sub
xchg
shl
or
addl
sub
push
mov
fwait
add
stos
and
mov
cmp
pop
inc
pop
and
adc
lcall
push
and
add
adc
loopne
sub
dec
inc
pop
jae
cmpsl
add
jl
out
sbb
dec
ljmp
int3
in
dec
push
jno
pop
ss
pop
movsl
nop
icebp
jmp
cmp
adc
inc
xchg
aam
mov
or
push
pop
pop
push
or
cmpsl
adc
jp
insl
dec
jecxz
out
daa
mov
inc
jle
jae
inc
out
xchg
rorb
arpl
movsl
cmp
jl
out
out
inc
dec
and
jae
pushf
mov
addr16
testl
jbe
clc
xchg
mov
cld
sub
stc
ljmp
jle
pusha
in
sbb
sbb
in
inc
jge
cwtl
cmpsl
pop
repz
and
and
sbb
or
and
mov
fld1
out
pusha
adc
ss
hlt
scas
in
sbb
je
mov
addl
rclb
dec
imul
pop
test
in
out
pop
ja
cmc
mov
dec
or
xor
outsl
ror
fsubrl
and
bound
in
xor
push
arpl
fcompl
xrelease
scas
movsl
cmpl
es
xlat
scas
jae
cltd
fldenv
test
pop
lea
xor
fsubl
and
mov
bound
idiv
add
or
pop
add
stos
jmp
dec
in
pop
add
je
cltd
dec
push
sub
jo
pop
sbb
loope
push
mov
cld
lods
in
cld
call
pop
inc
call
popf
imul
xchg
fstl
mov
and
fld
sbb
and
shlb
ss
mov
js
or
inc
imul
adc
xchg
test
fsubrs
stc
mov
pop
in
inc
stos
jae
lods
loop
or
scas
mov
jl
xor
cmpsl
out
and
dec
ja
jb
dec
cmp
and
outsb
or
sbb
pop
cmp
in
or
sahf
mov
cmp
leave
mov
sti
lds
sub
ljmp
adc
cli
push
in
sbbb
aaa
cltd
into
cmp
stos
jno
and
xchg
inc
dec
sub
and
adc
insw
dec
hlt
vorps
or
push
popa
or
or
xchg
test
jg
ja
jmp
rcrl
and
cmp
lock
adc
jb
repz
or
jecxz
sbb
jno
mov
push
ljmp
add
int3
out
and
lcall
idivb
adc
bound
xchg
adc
sub
cli
mov
and
or
xchg
ss
sbb
dec
mov
addr16
sub
mov
pop
lock
ja
push
mov
lcall
pop
jge
les
mov
add
loopne
inc
xor
push
aaa
pop
lcall
imul
adc
push
fidivrl
mov
dec
push
jns
aas
xor
mov
add
pop
shrb
sbb
in
inc
inc
insl
clc
inc
jo
push
dec
into
xchg
mov
hlt
stc
adc
sub
or
lock
sti
dec
xor
fdivl
sti
mov
push
pop
mov
scas
pop
mov
pop
sub
cmp
jge
stos
jns
xchg
pop
es
loopne
lret
lahf
mov
int3
imul
lahf
pop
jo
adc
jmp
pop
ljmp
scas
xchg
mov
pushf
push
cli
jo
shrl
ret
fcomp
inc
pushf
ss
push
pop
pop
lods
cmp
jl
sbb
dec
lret
in
sub
pop
fwait
lock
jg
jle
rol
rclb
ret
pop
dec
ret
fs
sub
fcoml
and
cmpsl
mov
pop
lods
lock
cli
push
pop
inc
es
dec
push
or
xor
mov
dec
movsb
inc
pusha
xor
lock
gs
push
add
test
out
stos
pop
jo
data16
push
cltd
mov
gs
fadd
mov
mov
mov
lock
cmpb
ret
jne
jecxz
rorl
sbb
push
inc
iret
cmpsl
shll
aas
rolw
pop
sbb
inc
cld
push
jo
scas
cmp
jne
fndisi(8087
aad
inc
int3
xchg
notb
std
fdivrl
sub
nop
adc
orl
shrb
scas
outsl
push
sub
push
aas
pop
iret
xchg
out
out
arpl
inc
mov
push
jge
negb
cld
iret
aas
cmc
pop
xchg
ds
fdivrl
pop
js
jmp
cli
fdiv
push
out
add
push
inc
stos
mov
cld
push
add
insb
in
inc
ja
push
jecxz
xchg
dec
es
je
fsubrs
jle
sti
xchg
inc
rcl
movsl
outsb
nop
adc
fst
mov
jmp
sahf
test
xor
add
pop
ljmp
pop
cmp
push
lea
outsl
incb
stos
pop
mov
cmpsb
mov
divl
cmp
fstl
lcall
pusha
sbb
push
inc
push
lock
jo
cli
push
jg
out
es
aaa
inc
mov
imul
jno
in
fidivrs
inc
add
sub
xchg
add
pop
js
mov
fcoml
fdivp
mov
sbb
push
pushf
loop
xor
and
adc
movsl
jg
insb
lods
stc
inc
and
pop
adc
ljmp
push
pop
pop
gs
push
je
xchg
sbb
jmp
roll
shrb
and
dec
pop
jae
pop
lahf
orb
xor
inc
cwtl
jne
es
xor
mov
rcll
in
mov
pop
addr16
std
inc
cmp
sbb
jae
orb
push
mov
dec
bound
cmp
or
stos
xchg
dec
add
mov
jb
push
push
mov
mov
xchg
repnz
jge
movsb
pop
arpl
cltd
mov
sub
scas
rorb
sti
push
loope
mov
loope
mov
enter
sbb
or
add
bound
scas
dec
outsl
lahf
xor
xor
popa
rcll
xor
mov
inc
xchg
movsl
in
out
jg
je
jle
sub
jb
sahf
cli
mov
popf
jle
pop
mov
xor
ret
scas
jp
fimull
cmc
mov
test
mov
loop
dec
frstor
inc
fstpl
and
pusha
andb
mov
push
sub
enter
nop
repz
shlb
loope
stos
adc
inc
dec
in
pop
andl
jne
loop
in
xlat
pop
push
cmp
and
aad
ss
inc
mov
or
mov
mov
push
dec
loopw
orb
push
add
out
shlb
mov
sbb
lret
ds
fs
sub
xor
mov
push
loop
test
fcoml
push
jne
cmp
lcall
pop
mov
sti
mov
and
mov
xor
es
cld
xor
lret
dec
lock
push
pop
mov
call
lods
inc
bound
in
or
xor
cmpsl
in
mov
std
xor
push
test
stc
lods
mov
pop
adc
aam
and
js
es
roll
mov
jp
nop
insl
push
loope
fsubrl
or
add
adc
out
outsl
ja
cmp
arpl
pop
mov
and
test
push
add
inc
jmp
inc
test
add
movsb
or
mov
aaa
sub
add
push
jmp
out
or
shrl
imul
and
movsb
rclb
sub
iret
lods
arpl
hlt
pushf
xchg
mov
mov
pop
inc
mov
mov
xor
jp
jo
inc
push
or
mov
dec
mov
and
xchg
rorb
push
outsb
repnz
inc
roll
inc
add
icebp
jp
int3
psrlw
fldt
fnstsw
sbb
cmp
mov
mov
push
and
add
out
dec
negl
pop
sarb
inc
jb
push
pop
loope
cmp
aas
fisubrl
xor
and
inc
data16
test
dec
mov
mov
mov
out
jbe
mov
sbb
dec
stos
lret
fstps
enter
lcall
and
mov
scas
or
ja
xchg
testl
add
subb
aas
mov
xchg
jle
sub
cmp
push
loop
in
pop
es
cs
pop
jno
add
pop
xchg
push
ficoms
adc
pop
push
cmp
mulb
dec
xchg
jb
test
cmpsb
and
call
lahf
fisttpl
and
pop
dec
bound
shll
test
sbb
sub
jg
iret
xor
sbb
outsb
aaa
lods
es
lahf
adc
subl
mov
push
cmp
lods
sarb
ss
fmuls
cmp
test
les
sub
cmp
xchg
and
fiaddl
add
pop
cmp
mov
mov
xor
cmp
push
out
pop
mov
lods
je
daa
repz
pop
orl
xchg
mov
add
cmp
mov
cmpsl
stos
dec
xor
mov
maxps
clc
lahf
pop
xor
push
mov
aaa
mov
push
inc
xlat
mov
xor
fcmovnu
scas
add
push
push
sbb
dec
outsl
aas
mov
pop
in
mov
cld
jecxz
adc
xchg
cmp
enter
out
cltd
sub
sbb
xchg
cli
sub
out
sbb
pop
push
pop
xor
jne
mov
and
sbb
xchg
xchg
lahf
and
pop
add
cld
or
xor
daa
mov
mov
dec
pop
jnp
int3
mov
xor
sub
fwait
lds
test
mov
cmpsb
test
adc
mov
jge
mov
ret
xor
std
je
xor
mov
pop
lods
and
xlat
mov
push
add
iret
into
out
and
iret
sahf
icebp
mov
mov
mov
sarb
shll
ret
add
ljmp
bound
dec
outsl
inc
adc
mov
enter
lret
add
jno
cmp
clc
enter
and
ret
cmc
push
mov
iret
xorb
out
xor
cmp
stos
or
dec
adc
push
mov
add
xchg
lds
or
sbb
or
push
aaa
lods
dec
cmp
mov
sub
sbb
frstor
and
pop
mov
int3
sub
adc
sub
pusha
adc
lds
adc
cltd
pop
cmp
addr16
imul
pop
fwait
mov
push
mov
add
push
sub
inc
pop
cmpsl
mov
into
push
push
jnp
xchg
dec
lret
hlt
pop
andb
inc
push
out
dec
cmp
sbb
pop
fstl
stos
jge
sahf
lock
aam
push
andb
fsubr
xor
xchg
test
push
push
pushf
jnp
movsl
dec
test
das
cmp
dec
jne
mov
shlb
fs
aad
mov
dec
sub
cmp
sub
loopne,pt
push
arpl
clc
push
out
lret
js
fdivrs
cmp
cld
inc
add
cmc
fistl
loopne
and
repnz
or
pop
hlt
jg
xor
outsl
sbb
rol
jb
xchg
out
mov
cmp
push
jle
adc
push
stc
iret
jno
and
mov
test
mov
mov
ss
dec
stos
es
add
sub
bound
repnz
jge
jg
xor
xor
int3
in
jbe
out
mov
aam
leave
out
flds
movsl
pop
gs
pop
jecxz
movsl
cltd
sbb
jg
cltd
sub
jb
mov
ds
iret
xchg
add
repz
lods
fs
mov
out
lret
mov
or
push
pop
xchg
sbb
cmp
fildl
mov
or
cmp
or
iret
and
xor
stc
in
xor
andl
cmp
jae
xchg
xchg
movsl
loope
push
mov
sbb
mov
sahf
jl
cmp
int
cmpsl
out
mov
jmp
leave
adc
sbbb
push
jmp
movsl
xchg
in
call
ret
xchg
jne
nop
js
jle
dec
int3
mov
adc
sub
fcmovbe
cmpl
pop
xor
mov
mul
gs
test
mov
icebp
kmovw
and
add
data16
inc
pop
stmxcsr
dec
add
loopne
cld
inc
lds
repnz
test
push
dec
fxtract
and
sbb
adc
sti
mov
push
cld
jmp
xchg
xchg
or
inc
push
mov
cmp
cli
cmp
in
inc
ret
xlat
outsb
mov
js
sbb
adc
insb
sbb
inc
lods
shl
pop
jbe
sbb
fstpl
jl
mov
mov
cmp
mov
das
xor
sbb
in
mov
lcall
sub
jns
imul
cli
std
mov
rclb
les
push
ss
add
imul
insl
cmp
lahf
and
jbe
jle
cli
xor
xor
cmp
testl
rcrl
or
push
jae
cmovbe
call
loope
xorb
bound
and
aam
loope
and
fiaddl
dec
mov
mov
sub
cmp
scas
fcmove
mov
cltd
add
sub
outsl
xchg
movsl
mov
ljmp
jge
loop
sti
mov
je
loopne
or
daa
stos
lahf
addl
imul
and
rorb
or
jp
ljmp
mov
jb
adc
fldcw
divb
in
and
outsl
movsl
cmp
pop
cmpsl
jg
lret
test
cmp
cmpsl
repz
stos
xor
xchg
call
push
ss
mov
pusha
dec
scas
dec
outsl
adc
ret
repz
das
sbb
lar
push
sbb
xor
cwtl
stos
pushf
imul
mov
push
daa
ds
shll
ss
inc
les
shrl
push
sbb
es
xchg
mov
inc
mov
pop
popa
xor
ret
dec
stc
daa
rcrb
mov
or
push
add
jg
mov
xor
shl
stc
cwtl
sbb
cld
mov
mov
iret
leave
adc
test
les
loopne
and
mov
fwait
mov
adc
mov
push
fsubl
enter
ret
and
cmp
lods
aam
push
pop
incl
fisttpll
cmp
mov
in
inc
iret
mov
into
push
or
leave
in
pop
mov
mov
cmp
movsl
ja
mov
cmp
lods
imulb
push
shr
push
adc
pushw
xlat
shl
jno
jnp
push
aad
ss
pop
enter
push
lds
mov
xchg
ljmp
add
mov
aam
fldcw
popa
or
push
cltd
xor
movsl
cs
fstpt
mov
adc
cmp
mov
jmp
xchg
movsl
ja
movsl
das
stos
add
loopw
jl
xor
adc
sub
jo
adc
fs
out
inc
test
xor
ss
inc
cmp
adcl
sub
cwtl
ds
lcall
xchg
rcll
sub
cmpsb
mov
adc
sbb
sbb
and
std
lret
push
addr16
mov
mov
lcall
sub
pop
sub
mov
cmovns
mov
repz
std
arpl
js
push
add
push
xchg
sub
mov
enter
pop
push
mov
pop
testb
jl
js
pop
mov
jle
cwtl
lcall
scas
mov
mov
jl
cltd
aaa
mov
jecxz
int
inc
jmp
jle
push
cmp
xchg
lret
dec
cmpsl
jecxz
popf
jl
dec
inc
push
out
push
addl
mov
cld
mov
push
iret
mov
ja
mov
cmpsl
mov
dec
cmp
cmp
fistpl
int3
adc
sahf
push
mov
in
jbe
push
mulb
dec
mov
sbb
jb
punpcklbw
lret
insl
stc
mov
dec
movsb
inc
push
nop
out
xorb
aam
xchg
shll
sahf
xor
mov
or
push
fsubs
ret
cmp
sbb
jmp
jno
je
jbe
adc
fildll
push
dec
data16
inc
pop
xchg
rorb
stos
stos
dec
stos
and
ja
leave
dec
shlb
adc
js
xor
mov
mov
ja
push
jno
xor
xchg
jg
pop
mov
mov
or
adc
mov
push
add
pop
xchg
add
dec
fwait
mov
loop
imul
cltd
lret
rorb
in
xchg
out
testb
ret
sbb
xlat
call
inc
jne
repnz
sbb
inc
mov
inc
pop
mov
mov
leave
daa
mov
add
mov
test
shll
imul
loope
imul
es
jl
or
dec
lock
out
rcrl
mov
jmp
dec
jmp
push
sub
cli
ljmp
shl
cs
xor
lret
cmc
inc
arpl
ja,pt
mov
sbb
push
push
stc
stc
inc
popl
and
repz
xchg
jl
pop
push
cmpsb
test
sub
sub
mov
cltd
cmp
add
mov
sbb
aas
jne
lea
adc
jbe
cmp
cmpsb
add
jg
xor
aaa
mov
inc
lret
pusha
xchg
ficompl
lcall
cwtl
fs
imul
adc
ror
imul
ja
dec
mov
inc
fidivrl
inc
jb
in
xchg
jp
xchg
adc
jbe
xchg
lods
push
pop
pop
inc
pop
movsb
jb
std
mov
repz
fcoml
mov
jge
js
js
jmp
mov
jb
xchg
scas
push
pop
stc
mov
arpl
mov
xlat
lret
imul
and
int
aad
test
jl
and
adc
jl
dec
jg
xor
mov
lods
test
jp
jmp
push
fwait
mov
push
jns
fldl
pop
rcll
pop
in
addr16
sbb
xchg
popa
push
dec
sahf
ret
out
stc
xor
sub
pop
mov
call
pop
cs
fcmovne
xchg
movb
rol
or
adc
mov
imul
gs
push
add
sub
imul
pop
enter
fsubr
inc
jl
cwtl
dec
mov
gs
adc
jbe
hlt
in
xchg
mov
jle
ja
aad
and
enter
inc
cli
xchg
jl
mov
fld
inc
fcoml
or
cmp
dec
jbe
lods
inc
cmp
cmp
movsb
mov
cli
mov
lret
xchg
jnp
adc
and
dec
out
or
addr16
out
das
xor
xchg
xchg
daa
sarl
fisubrl
fstpl
add
mov
pop
xchg
xchg
lods
pop
jno
cmpb
vmovdqu
dec
xor
mov
xchg
xchg
and
les
sbb
jmp
xorb
add
jecxz
gs
in
push
fstl
out
imul
decl
push
cmpsb
out
xlat
pop
sub
shlb
mov
cmp
sbb
cli
ljmp
clc
cli
mov
rcrb
and
in
shl
inc
fisttps
jno
dec
mov
mov
sbb
jnp
loop
inc
jge
out
fmull
jg
fidivrs
lock
les
push
sbb
movntq
out
stos
or
pusha
and
hlt
add
push
push
inc
into
in
jecxz
decl
dec
imul
test
ret
push
mov
repz
aas
lds
das
sti
divb
imul
jmp
mov
test
arpl
mov
ret
mov
stos
or
or
lret
sub
pop
ds
cs
rolb
in
cwtl
out
or
dec
rcr
mov
push
inc
push
test
lea
adc
push
cmp
jl
jns
std
mov
xor
push
sub
dec
cmpl
addr16
and
pushf
adc
arpl
mov
pop
pop
fiaddl
pop
cmp
movsb
call
xor
sbb
add
xchg
jno
and
and
mov
lods
jno
mov
add
sar
rorl
lcall
mov
xchg
sbb
add
nop
ds
jbe
iret
shl
decl
dec
mov
cmpsb
movsb
shlb
xor
inc
das
stc
dec
cmp
loopne
mov
mov
fisubl
xchg
inc
out
lds
mov
xchg
sbb
push
fwait
mov
inc
rorb
xchg
test
xor
clc
leave
lods
rorb
mov
daa
repz
push
inc
mov
leave
or
dec
lock
out
cmc
cli
sbb
mov
dec
xchg
or
and
ds
sbb
cld
mov
stc
xchg
add
adc
mov
nop
push
mov
iret
lods
sbb
or
les
iret
aam
icebp
inc
enter
push
mov
and
xchg
xchg
hlt
pop
jp
bnd
dec
test
fidivs
sbbb
cld
cmpsb
ja
fimuls
repz
adc
mov
rorl
cwtl
imul
or
aaa
je
lock
lds
push
push
push
mov
aam
sub
movsl
das
ret
js
imul
hlt
jecxz
jp
mov
add
dec
mov
xor
fwait
add
xchg
movsb
cpuid
stc
mov
xsha256
push
push
mov
sbb
cmp
push
fldenv
jl
add
mov
pop
inc
loop
cmp
xor
mov
mov
lds
movsl
inc
adc
lds
cwtl
cltd
out
sbb
addr16
testb
mov
push
push
lock
cmpsl
test
in
out
lods
pushf
out
push
arpl
mov
jb
pop
loope
stc
dec
xor
daa
add
inc
push
in
push
xchg
call
mov
les
imul
xchg
cltd
in
outsb
mov
inc
mov
mov
mov
xchg
jle
xchg
cmp
mov
mov
xchg
jp
dec
dec
rolb
ljmp
xor
mov
into
shlb
cmp
jge
mov
and
popa
shr
test
dec
inc
push
cmp
sbb
lahf
cltd
or
mov
push
jecxz
jg
and
in
stos
jg
int3
adc
inc
ficompl
and
jl
jbe
mov
mov
push
jmp
adc
dec
cmp
pop
jnp
pop
xchg
or
adc
inc
mov
mov
decl
jmp
xor
mov
jne
jbe
es
jbe
jmp
pop
dec
int3
mov
popf
xchg
sub
mov
leave
icebp
test
push
aas
aad
mov
es
and
lahf
push
icebp
xchg
cmc
jle
or
sub
sarb
xor
sbb
pop
sar
mov
out
dec
cwtl
jne,pn
mov
push
xor
inc
sbb
scas
jnp
mov
fbstp
int3
pop
jmp
loopne
add
cmp
dec
lret
insw
mov
mov
lret
dec
sbb
out
mov
push
test
add
dec
pop
mov
movsl
jl
and
movb
rorb
or
cmpsl
mov
mov
rolb
xor
rcll
rclb
cmc
incb
pusha
xor
and
arpl
or
pop
pop
and
push
push
xchg
stos
imul
cmc
es
pop
fidivs
lcall
mov
mov
addl
xchg
rorl
pop
inc
fcom
push
in
adc
into
jle
rolb
push
mov
fldl
mov
orb
arpl
je
push
ljmp
jo
jle
add
xor
mov
stos
mov
je
lcall
gs
shll
sub
cmp
in
jmp
push
inc
dec
iret
pushf
or
sahf
in
lret
cmpsb
fs
sub
xor
test
cmpsl
out
pop
add
scas
pop
in
and
clc
mov
xchg
sub
pushf
aas
xchg
xor
lahf
insl
nop
mov
mov
cli
dec
sbb
call
dec
push
vsubpd
fwait
lea
xor
xchg
xchg
negl
pop
cmc
and
and
fcoms
xor
push
movswl
ficomps
xchg
roll
dec
or
iret
ss
lock
es
popf
adc
aas
mov
sbb
adc
fisubs
rorb
hlt
aas
jo
add
rorl
xor
xchg
in
adc
rclb
inc
ljmp
mov
imul
jo
in
push
push
and
adc
adc
jnp
dec
fidivrs
stos
mov
jo
jns
enter
mov
fs
dec
push
cmp
mov
mov
sbb
out
test
jb
mov
xor
ficompl
aad
test
mov
mov
push
xor
test
push
mov
fisttps
js
push
nop
fldt
cli
mov
sbb
arpl
mov
out
pop
pushf
es
xchg
popf
fisttpll
cmc
and
repz
or
out
sub
pop
dec
xchg
mov
fucomip
nop
dec
add
jmp
jmp
fldt
sbbl
fmuls
xchg
rorb
repnz
jmp
lret
stos
xchg
inc
jb
add
test
xor
fcoml
inc
mov
sahf
in
orb
enter
out
jp
stos
imul
daa
mov
lods
inc
xor
inc
test
dec
cmp
out
stc
lods
inc
sub
pop
in
mov
mov
add
and
jp
ja
or
cmpsl
or
cmp
nop
xchg
adc
bswap
sahf
dec
mov
dec
mov
lods
dec
lods
sub
push
push
cld
pop
lods
add
or
adc
adc
arpl
dec
inc
out
ret
jno
incb
sub
inc
sbb
push
sti
addr16
mov
jo
in
xchg
fdiv
ret
movsl
mov
mov
dec
addb
ja
xchg
inc
pop
cli
jecxz
scas
mov
outsl
imul
dec
cmpl
in
jmp
or
dec
lods
xor
out
cmp
sarb
or
out
cwtl
jns
lret
insb
xchg
push
je
inc
ljmp
ret
mov
mov
imul
scas
add
dec
insl
add
ss
bound
idivl
cwtl
or
pop
sbb
sub
pop
mov
sbb
in
aaa
push
sbb
pop
xor
jns
shrb
jmp
sub
push
sub
cmp
push
outsb
shrl
loope
popa
pop
repz
in
pop
retw
pusha
mov
jnp
in
iret
and
push
fnstcw
mov
dec
sbb
data16
test
and
fsubrp
int3
or
cmp
or
xchg
ja
lds
and
pop
inc
mov
add
popa
push
push
and
aas
push
add
imul
rcl
jp
push
push
jle
mov
shl
mov
jg
push
dec
jns
xchg
arpl
xorl
imul
int
jb
push
lret
out
push
cmpsl
stos
jne
jg
jb
into
js
in
int
aaa
scas
mov
repz
mov
mov
pusha
xchg
mov
ds
pop
rolb
mov
rcl
movsl
add
inc
dec
lods
pop
mov
mov
add
in
sti
aam
inc
cmp
das
inc
xor
push
dec
mov
aas
outsl
pop
in
sbb
jne
mov
stos
repnz
jl
jbe
and
repz
sbbl
test
sub
sbb
add
cwtl
pusha
imul
pusha
minps
leave
inc
pop
jg
pop
inc
inc
cmp
sub
scas
pushf
sarb
add
or
call
pop
scas
add
aad
rcll
and
data16
aad
xchg
nop
shrd
addl
sbb
std
mov
dec
xchg
shll
adc
and
xor
adc
es
test
mov
sbb
inc
inc
shrl
mov
pusha
je
movsl
push
addb
lds
shlb
insl
mov
iret
pushf
pop
or
push
push
and
cwtl
or
sub
out
push
movsb
std
pop
lock
fwait
add
in
jge
scas
pop
cltd
cld
mov
adc
mov
imul
jb
adc
adc
or
popa
and
sbb
aaa
aad
arpl
hlt
popw
lods
pop
gs
sbb
xlat
or
fldcw
mov
xor
jg
sbbb
push
ds
stc
loope
filds
repnz
jl
adcl
xchg
scas
lret
scas
cmpsl
fdiv
jp
push
popf
adc
in
in
fsubs
mov
lods
stos
es
mov
mov
je
push
mov
andb
push
es
mov
leave
or
fld1
xchg
inc
push
and
jmp
stc
iret
nop
fldenv
lock
pop
inc
mov
enter
and
mov
lock
cltd
int3
pop
sub
imul
xor
push
inc
stos
lea
or
imul
cld
inc
fstpl
jo
cmp
cltd
mov
xorb
xor
pop
cs
adc
andb
cmpsl
jbe
into
cmp
push
orl
fsts
adc
mov
inc
jl
add
std
or
test
push
jae
jbe
jo
jne
xchg
push
mov
jle
sarl
clc
adc
faddp
dec
in
sub
mov
adc
aam
into
lds
imul
mov
pop
xchg
pop
aad
ud0
jp
push
xchg
jecxz
sub
dec
and
dec
shl
rcrb
cli
dec
cmp
and
mov
std
inc
out
jo
xor
popf
out
inc
popa
mulps
out
lods
inc
mov
lods
push
ljmp
mov
mov
lret
out
pushf
filds
pop
frstor
loop
fstpt
clc
cwtl
or
add
mov
dec
je
fwait
xor
mov
bound
sub
aad
dec
mov
lods
clc
rcrl
add
mov
pop
sub
push
mov
jbe
sbb
push
cwtl
jle
cmpsb
jmp
fisubs
mov
ljmp
or
lea
lods
pop
jbe
mov
gs
jecxz
mull
mov
loop
sub
xchg
imul
push
add
icebp
popf
pop
cs
pushf
jle
je
adc
push
notb
dec
outsl
testb
xor
mov
out
rorb
xchg
test
pop
aad
mov
jl
or
adc
fwait
xchg
pop
inc
mov
inc
add
sub
shr
gs
pop
mov
bound
cli
or
xchg
pop
lret
push
dec
mov
outsl
loop
push
push
mov
mov
js
inc
xor
mov
sarb
data16
xchg
jge
push
sub
lahf
and
fisttpl
test
cmp
in
mov
sahf
out
pop
sbb
out
cli
pand
out
fwait
pop
cwtl
mov
dec
or
push
int
movsl
arpl
fstpt
lods
mov
mov
imul
sbb
cmp
mov
sbb
in
add
call
cmc
pop
pop
jo
jecxz
or
js
loopne
lcall
repz
push
lods
movsb
int3
loop
in
mov
fstl
add
insb
enter
adc
in
xchg
xchg
pop
pop
mov
and
cli
and
loop
enter
icebp
push
ret
test
lahf
and
add
or
fdivrl
and
jno
rcr
stos
daa
fildll
push
pop
das
pop
adc
sub
mov
dec
cwtl
jno
sbb
cmp
lret
lahf
andb
hlt
xchg
movsl
das
dec
repz
pusha
stos
leave
mov
push
aas
ret
ret
repnz
dec
ficoml
push
jns
cmp
pusha
jge
push
add
jmp
sub
mov
frstor
mov
dec
xchg
cmp
sub
push
test
adc
adc
shrb
push
aam
in
push
imul
mov
mov
aam
adc
jnp
jno,pn
adc
xchg
push
push
cmp
mov
pop
mov
cmpsl
inc
sbb
inc
sub
out
pop
mov
mov
dec
cmp
inc
inc
dec
scas
sti
jecxz
repnz
jns
add
or
mov
scas
push
sub
leave
fnstsw
rclb
mov
sub
out
outsb
lret
and
cmp
lret
sub
into
or
mov
sbb
cmp
push
jno
out
jo
leave
push
imul
push
pop
aad
insb
std
aam
pop
ljmp
inc
jne
mov
negl
xchg
cmp
xor
clc
sub
push
inc
adc
andl
adc
dec
jne
ljmp
push
inc
call
mov
mov
adc
mov
sbb
rorl
call
outsb
xor
arpl
fildl
and
mov
jns
sbb
lds
mov
or
cli
sbb
fsqrt
ror
dec
mov
mov
jmp
ljmp
jae
mov
outsl
xchg
insl
insl
mov
add
adc
jne
pop
inc
mov
jmp
jne
and
or
clc
add
jb
pop
jne
cmpsl
adc
adc
inc
sub
fdivs
aas
xor
jbe
push
jg
mov
pop
dec
cmp
xchg
mov
push
mov
adc
mov
and
aas
xchg
stos
out
mov
sbb
adc
fs
cwtl
sbb
dec
adc
cli
cld
mov
push
jmp
mov
jbe
mov
sub
std
aaa
and
icebp
push
sbb
and
xor
add
cld
rcrl
call
pop
in
scas
mov
mov
sub
add
push
xchg
sub
cmp
dec
push
xchg
cld
sbb
jle
cmc
scas
xchg
addb
sub
cwtl
lahf
sahf
push
std
mov
insb
xor
mov
xchg
or
push
xchg
fsub
cmp
mov
sbb
cs
xchg
push
pushf
xchg
repnz
test
scas
add
push
mov
mov
push
push
test
xchg
mul
and
cmp
movsb
xorl
xchg
jle
jge
imul
xor
popf
imul
cmp
test
into
push
jl
dec
or
xchg
dec
dec
bound
xor
test
adc
aam
jecxz
imul
or
or
mov
sub
push
push
jo
daa
les
je
xor
and
iret
and
sub
jae
add
pop
pop
jbe
and
out
cmp
lcall
or
out
cmp
sbb
stos
lret
mov
jns
jbe
xor
aas
sub
xchg
ja
std
pop
arpl
push
add
pop
mov
sahf
fcoml
pop
fcos
cltd
iret
mov
add
out
mov
mov
jo
incb
push
pop
test
lret
dec
lcall
mov
stos
fwait
rolb
inc
enter
movsb
lret
scas
lret
movsb
into
mov
sahf
add
xlat
fnstcw
pop
xchg
mov
sub
push
push
sub
hlt
fs
mov
add
jl
push
int
cld
pop
xchg
sbb
cli
cmp
fcompl
sbb
add
shlb
cmp
loopne
out
push
xchg
shlb
cmpsl
loop
xchg
sub
push
fucomi
aad
mov
mov
pop
add
fcoml
pop
data16
mov
mov
xchg
sbbb
jne
adc
xor
jge
mov
cmpsb
push
push
xor
push
inc
cwtl
pushf
stos
aad
punpcklbw
mov
cmpsb
loope
rorb
adc
sar
dec
jne
xchg
loope
loope
movsb
rclb
sbb
addl
sub
stc
mov
orb
pop
cld
xchg
mov
std
pop
aas
cmpl
maskmovq
push
push
sub
enter
inc
mov
mov
and
cli
stc
and
pop
mov
icebp
push
mov
test
ljmp
sarl
int3
adc
jmp
xchg
sub
insl
jnp
fwait
cwtl
inc
gs
icebp
lock
mov
pop
mov
dec
loop
inc
cmp
sahf
add
rcrl
insl
dec
jp
add
popa
sub
xchg
pusha
inc
mov
lods
aad
fistl
fdivrl
pushf
inc
in
jle
sbb
outsb
lret
aaa
jmp
out
xor
loopne
inc
xchg
pop
es
cmp
pop
push
shl
cmpb
rcr
std
call
push
and
imul
cltd
in
cmovl
lret
sbb
rorb
push
cld
dec
add
sbb
out
lea
push
mov
in
stos
adc
nop
add
stos
push
loopne
mov
jle
adcb
fstp
adc
and
movsl
stos
ljmp
out
jmp
push
orb
mov
mov
mov
sbb
xchg
mov
test
movsb
jb
sbb
mov
add
adc
outsb
push
imul
clc
jb
mov
fmull
in
sbb
jle
andb
fwait
dec
xchg
imul
rcrb
jl
loopne
outsl
nop
xor
push
xchg
js
lock
fs
jmp
cmc
test
mov
mov
pop
mov
ret
hlt
ds
xor
cmp
mov
jae
ja
stc
push
inc
mov
mov
sub
aas
or
shr
cld
test
cld
call
xor
adc
ret
mov
nop
mov
les
xorl
mov
jbe
ficomps
scas
repnz
add
loopne
xchg
pop
lcall
lds
jns,pt
and
jnp
roll
in
dec
lahf
xor
sub
lahf
das
pop
cld
int
in
push
jg
bound
enter
insb
rorl
xchg
mov
cmp
fbld
shll
mov
lods
add
enter
lret
cwtl
sbb
insb
cmpsb
insl
adc
jmp
sub
test
cmc
sbb
js
sub
mov
lods
mov
mov
fcoml
pushf
leave
fwait
mov
jl
aam
cmpsl
inc
sarb
arpl
mov
mov
xor
movsl
shrb
aas
mov
push
inc
pop
sbb
mov
cmpsb
sub
popa
push
gs
xchg
incb
cmpsl
sbb
cli
mov
sbb
inc
fcomps
cmpsb
sub
and
push
mov
data16
sbb
adc
xchg
push
loope
adc
and
mov
or
cmp
inc
push
enter
enter
enter
xacquire
mov
dec
mov
and
mov
inc
in
cmp
lock
xchg
sub
push
rclb
lahf
dec
mov
xchg
es
and
xlat
mov
mov
and
cli
push
pop
cs
stos
cmpsl
lret
adc
jbe
mov
or
mov
js
adc
push
sbb
cmp
rcl
pop
into
mov
or
jo
xor
add
pop
aas
cmp
das
jl
pop
out
cmp
inc
out
push
cmp
bound
into
xor
aad
dec
aaa
jae
cmp
mov
adc
push
shrb
pop
mov
stos
fcmovbe
cli
add
mov
jne
repz
jns
mov
dec
cmp
insl
or
imul
fsub
call
sbb
adc
mov
jecxz
pop
pop
or
sub
cmp
fidivrl
dec
or
inc
xchg
mov
ja
sbbb
es
imul
sub
test
cwtl
cmp
andl
cmp
aaa
mov
inc
adc
jmp
shr
mov
mov
xchg
push
sbb
dec
sub
inc
das
nop
lahf
inc
mov
cmp
ljmp
or
sbb
jnp
dec
push
rolb
cltd
out
aas
and
in
jbe
andl
pop
mov
inc
nop
add
loop
cmc
mov
fidivs
xlat
cld
out
cli
adc
popa
dec
enter
popa
sbb
lahf
add
adc
icebp
inc
cld
mov
pop
testl
push
ja
ss
shl
sub
je
pop
adc
jb
dec
or
mov
sbb
aas
mov
jl
inc
lock
stc
or
fsubl
push
sbb
mov
inc
adc
cmp
mov
xor
test
cmp
das
in
xchg
adc
outsl
outsb
call
sbbl
cmp
xchg
mov
add
lcall
lock
pop
in
inc
imul
cmpsl
cld
inc
lret
fsts
and
cmp
rep
iret
in
cltd
jle
cwtl
dec
jmp
lea
pushf
int
imul
sbb
pop
sub
iret
sahf
fucomip
mov
jb
xchg
adc
adc
jge
jb
lods
pop
and
rcrb
fs
dec
adc
ret
popf
pop
pushf
xchg
cltd
xchg
or
fs
je
aas
addr16
lahf
mov
pop
xchg
call
sub
pop
popf
out
fmull
jge
outsb
and
repz
mov
jb
loopne
imul
test
ds
data16
push
lretw
sarl
mov
sub
lahf
dec
es
pushf
jg
stos
scas
lods
mov
mov
mov
push
push
outsb
aaa
sbb
repz
cmc
or
add
loopne
jmp
mov
xor
sbb
repnz
pop
dec
fsubrs
mov
cmp
push
lret
loop
add
roll
sbb
mov
jmp
or
cmp
or
repz
jno
xchg
outsb
xlat
cwtl
cli
and
mov
or
pop
in
dec
dec
lods
adc
negl
jno
push
inc
sbb
inc
nop
std
cmp
xor
sbb
fmuls
sahf
pop
cmc
fwait
stc
lret
test
xchg
inc
xor
push
cmp
stos
add
jnp
adc
ljmp
scas
dec
ss
mov
das
enter
negb
les
sub
shlb
loop
div
pop
jae
cmpl
test
mov
stos
ret
stos
aad
insl
testl
lods
call
cmpb
add
lock
lock
jp
mov
mov
outsl
ja
js
lods
iret
mulb
push
sub
pushf
testl
arpl
inc
mov
jecxz
hlt
jg
popf
ficoml
andb
repnz
cmc
movsb
pusha
push
shll
les
pop
mov
xor
jb
add
mov
mov
xor
xchg
hlt
and
shlb
pop
mov
sub
pop
dec
or
mov
rclb
pop
ljmp
mov
pop
push
and
xchg
popa
xchg
mov
sbbl
ja
test
shlb
es
jb
repz
popa
lret
aaa
xchg
hlt
movsl
hlt
jge
fucomi
icebp
adc
rol
fcomps
test
inc
lods
adc
jbe
xchg
int
aam
jmp
cmp
inc
push
aas
cmp
sub
jmp
cltd
sti
lods
push
inc
sarb
add
por
leave
aaa
clc
mov
mov
mov
inc
lock
mov
xchg
and
mov
pop
pop
sbb
mov
dec
jnp
xor
fucomp
adc
mov
lds
sti
pop
push
js
mov
fstps
negl
rclb
ss
ror
mov
xchg
daa
fdivrl
cld
cwtl
cwtl
xchg
mov
in
mov
fcmovnu
adc
data16
rcll
ljmp
out
and
mov
mov
clc
add
in
mov
mov
ljmp
aam
outsl
jle
ficoms
enter
rolb
cmc
add
push
loop
in
sbb
aaa
out
popf
cmp
frstor
outsb
sbb
repnz
xchg
gs
mov
add
ljmp
test
lret
das
or
mov
fstpl
push
les
js
cmp
mov
pop
insb
jmp
sub
int
mov
mov
mov
pop
ret
cmp
mov
dec
adc
jecxz
and
or
das
fmul
in
ss
jb
xchg
cmp
enter
inc
inc
dec
fisubl
push
adc
je
or
dec
test
mov
sbb
mov
inc
std
jns
push
jg
and
ficompl
adc
pop
in
dec
add
or
outsl
cmpsl
cmp
enter
pop
cmp
and
inc
push
xlat
test
dec
sarb
jecxz
adc
sbb
push
mov
cmpb
in
ljmp
cmp
mov
cld
fmul
and
shll
xlat
in
negb
mov
mov
mov
test
xlat
pop
jecxz
or
or
mov
outsl
faddp
cmp
cmpsl
adc
rcll
jg
push
jl
loopne
and
ret
jne
mov
cmc
idiv
push
inc
lret
inc
jmp
mov
xchg
mov
inc
lret
add
mov
push
mov
and
dec
jae
das
sbb
rclb
arpl
sbb
mov
mov
sahf
fwait
push
mov
mov
mov
mov
dec
inc
int
mov
xchg
xchg
or
andb
sbb
aaa
lds
mov
dec
arpl
sbb
xor
arpl
jge
pop
cld
mov
dec
xor
clc
push
mov
jbe
mov
xor
mov
pop
adc
xchg
inc
aad
scas
dec
push
mov
mov
aam
inc
dec
out
and
addl
in
les
in
mov
jl
push
jmp
mov
mov
push
insb
add
sub
lcall
jbe
lea
sub
sub
std
fsubs
inc
jb
or
add
jecxz
dec
push
mov
notl
shll
jp
xchg
inc
sbb
fnsave
dec
lds
ljmp
loope
outsb
dec
fwait
in
mov
mov
leave
push
clc
in
cmp
dec
mov
int
push
stc
adc
pop
scas
sub
and
and
jmp
xor
dec
push
ljmp
adc
mov
dec
ficompl
scas
dec
add
mov
out
dec
xchg
call
xchg
mov
lcall
pop
pop
jle
jge
iret
push
xchg
add
xor
imul
adc
ljmp
jecxz
out
cmp
scas
cmp
xchg
pop
out
cs
clc
xchg
insb
xor
and
mov
sti
cmp
jne
inc
in
jae
adc
push
jno
mov
aas
and
and
cmpsl
mov
mov
push
sub
pop
sbb
add
in
ret
outsb
or
push
cmp
or
fnsave
int3
hlt
sbb
fwait
test
mov
mov
fsubrl
decl
test
mov
lods
leave
pop
mov
add
nop
add
jno
ret
ret
and
mov
call
cmp
pop
push
in
xor
push
fs
dec
adc
lock
or
jle
or
inc
dec
push
or
sbbb
das
mov
and
dec
add
sarl
xor
dec
test
or
inc
mov
xor
loope
sbb
imul
mov
test
ret
sub
inc
lock
lret
push
std
jo
push
xchg
mov
mov
test
ljmp
jno
icebp
pop
orl
or
movsl
or
aaa
out
cs
stos
and
jle
out
in
ljmp
sub
sbb
cmp
pop
ret
xchg
mov
test
enter
lea
insb
dec
or
aaa
inc
ja
mov
pop
and
push
xchg
lahf
fildl
sarb
lret
fs
dec
fsubrs
pop
cmp
pop
dec
mov
jl
cwtl
inc
adc
popa
cmp
lahf
jg
adc
and
jo
and
outsb
filds
sbb
gs
test
cld
xchg
push
mov
in
dec
popf
pop
pushf
and
ljmp
jg
movb
push
call
jbe
xchg
lods
xchg
roll
mov
popl
dec
dec
pop
ss
bound
mov
mov
lcall
xchg
cmpsb
in
add
fsubrs
mov
repnz
push
add
movsb
mov
inc
and
pusha
arpl
and
inc
xchg
stos
push
enter
loop
fsts
and
dec
dec
xchg
aad
mov
xchg
out
sub
divl
or
inc
imul
mov
xlat
ds
bound
and
adc
stos
ss
mov
fcmovb
clc
movsb
cld
nop
jnp
insb
xchg
ret
testb
clc
dec
push
add
ljmp
pusha
push
pop
mov
jecxz
stc
shll
nop
mov
mov
xor
or
addr16
fs
mov
in
push
pop
adc
xchg
pop
mov
adc
sbb
mov
test
dec
loop
das
je
imul
loope
rcll
aaa
inc
pop
fwait
inc
cltd
sub
aad
lock
push
inc
inc
cmpsl
pop
inc
out
cmp
mov
mov
adc
aad
jns
adc
add
jecxz
int
xchg
and
xchg
and
icebp
cmp
repnz
mov
popf
ljmp
xlat
enter
dec
cs
sub
cmpsl
xchg
or
sub
jbe
stos
rolb
sbb
loopne
stos
mov
or
jmp
btc
sbb
pop
shrl
fwait
jecxz
repz
mov
in
lcall
xor
addb
adc
cwtl
xlat
push
add
jae
add
cs
push
aaa
or
dec
xchg
sub
es
inc
fstpl
repnz
mov
mov
imul
push
and
jp
jl
icebp
mov
sub
gs
mov
sbb
data16
out
ffreep
call
cltd
test
enter
adc
lea
mov
sti
test
sub
cli
mov
pop
and
cmpsb
roll
hlt
xchg
repz
pop
sbb
mov
loop
test
out
sbb
fmull
aas
inc
ljmp
lret
dec
push
das
enter
sub
cwtl
push
sahf
mov
std
mov
add
std
or
cmp
xchg
mov
push
fisubl
imul
jmp
insb
lcall
lods
sub
lock
inc
xchg
jb
shll
cmp
fcomps
test
mov
loop
in
pop
inc
mov
dec
sub
mov
int
out
push
sub
cmp
adc
adc
dec
jae
iret
sbb
jns
pushl
arpl
icebp
sub
xchg
ficoml
loop
dec
pop
jns
xor
enter
mov
in
dec
lret
lock
xchg
pop
cld
pop
in
lret
stc
outsl
add
negl
push
sbb
roll
loope
mov
pop
push
repnz
into
or
test
fisubrl
cmc
inc
jbe
out
icebp
xchg
int3
jl
negl
dec
inc
cmp
push
push
mov
test
adc
xor
nop
push
mov
dec
out
stc
cmp
push
mov
push
push
les
mov
std
xlat
jecxz
inc
lcall
repz
and
pop
xor
add
mov
mov
adc
mov
jle
ljmp
enter
out
roll
inc
adc
xor
cmpsb
ja
push
adc
pop
xor
lret
lsl
movsb
mov
ljmp
inc
sbb
fs
push
scas
loope
pop
outsl
nop
mov
call
imul
add
sub
loopne
xchg
inc
cs
mov
push
add
cmp
xor
push
pop
xor
mov
lds
mov
mov
nop
jg
mov
jne
sub
sti
dec
xor
adcl
pop
lcall
or
in
push
push
arpl
pop
mov
sub
mov
xor
call
fcmovne
xor
loop
movsl
mov
xor
and
lret
test
ficoms
lea
pop
cltd
lods
add
jno
dec
mov
sbbb
cmp
fstpt
push
jge
in
cmpsb
popa
adc
jecxz
mov
rcll
push
pop
xchg
pop
jle
mov
loopne
mov
and
in
aaa
ljmp
rorb
adc
daa
je
das
jle
xor
popl
cmp
and
cmpsl
scas
push
cmp
jl
div
dec
xchg
mov
cmp
sub
add
sbb
loop
insb
insb
mov
inc
mov
xor
sub
lods
out
xor
cmp
icebp
fdivrp
adc
testb
mov
dec
sbb
or
imul
cmpsl
dec
sbb
pop
ret
sbb
adcb
cld
fwait
lods
mov
sbb
into
in
mov
adc
int
adc
fldl
out
cmpsb
or
cmpsb
push
inc
popa
repz
scas
test
ret
or
or
addr16
push
push
push
add
push
sbb
lock
in
pop
dec
mov
sbb
notb
adc
sub
mov
cmp
dec
sti
iret
or
mov
cmpsl
pop
push
mov
fnsave
pop
inc
mov
les
sub
fstpl
int3
mov
lret
push
xor
push
add
jns
icebp
adc
and
cmp
sub
es
cltd
or
xchg
aas
loop
fwait
aaa
insb
sub
clc
loope
and
shll
stc
or
push
or
push
shlb
in
stc
lods
scas
mov
lds
in
setp
sub
push
and
divb
add
xchg
cwtl
pop
mov
scas
icebp
cmp
int3
sub
ret
out
jmp
pop
mov
daa
call
push
sbb
repz
lods
or
dec
mov
loop
mov
mov
in
and
clc
mov
aad
stos
cwtl
jno
inc
lea
add
das
outsb
es
lods
fidivrs
lods
push
clc
jne
pop
mov
mov
pusha
adc
jbe
pop
int3
mov
mov
or
cs
hlt
adcl
mov
subl
fs
or
in
sbb
loop
cmp
cwtl
mov
cmpsb
mov
xor
mov
push
pop
cmp
mul
xor
jmp
add
gs
mov
scas
sbb
or
test
adc
add
jl
nop
adc
xchg
sbb
fstl
nop
cld
push
mov
pop
cli
cld
out
xchg
ret
push
lods
pop
mov
dec
xor
push
pop
pusha
sub
cmp
mov
xor
pushf
inc
pop
pop
push
dec
push
push
push
pusha
fwait
out
jo
ret
inc
jmp
mov
call
sbb
mov
cmpsl
out
mov
fstpl
orb
push
pop
cmp
jb
or
rclb
stos
xorb
xchg
insb
cmp
push
push
add
inc
addr16
or
addr16
shl
lcall
or
mov
in
bound
leave
stos
aad
jl
jne
push
out
daa
es
call
jnp
ljmp
ds
popa
negl
in
jno
js
lret
xor
lock
jecxz
outsb
mov
xor
je
mov
mov
addr16
hlt
hlt
push
pop
xchg
shrl
inc
fnstenv
push
addr16
pop
xchg
jnp
mov
popf
pop
push
enter
in
push
fxch
sub
jae
adc
push
mov
out
dec
sub
inc
xchg
rorb
sub
shlb
sarl
dec
aad
jnp
inc
pop
push
insb
in
iret
mov
adc
pop
cs
and
mov
ja
adc
jns
sbbb
lret
mov
out
in
and
popf
add
xchg
push
sbb
imul
cmc
inc
fnstsw
outsb
or
test
mov
pusha
leave
mov
xchg
lahf
xchg
and
lods
dec
xchg
loop
std
mov
into
mov
push
xchg
shl
fbstp
popf
adc
iret
out
jnp
xor
nop
sub
adc
adc
sub
mov
xchg
shll
std
fisubl
inc
push
sub
cwtl
mov
pop
fsubrl
cmpsl
pop
out
push
les
stc
and
add
xchg
das
sbb
sub
cli
aad
lcall
jnp
mov
cmp
sub
icebp
jmp
bound
lock
or
stos
and
in
add
pop
sub
bound
adc
cwtl
dec
dec
lret
call
mov
aas
adc
pop
xchg
mov
insl
dec
icebp
leave
push
hlt
in
cmp
dec
cmp
jmp
mov
mov
dec
or
or
addr16
fnstsw
xor
in
or
sbb
aas
push
mov
xor
movsb
movsl
lods
sbbl
ds
popf
cltd
lret
pop
or
sub
movsb
mov
and
daa
ja
je
cmp
test
insl
dec
fistpl
loopne
mov
sbb
aaa
jecxz
dec
das
lcall
jge
sub
stos
push
xchg
cld
ret
mov
xchg
dec
cmp
mov
dec
mov
push
sub
mov
mov
push
outsb
dec
ljmp
pop
sub
scas
imul
js
dec
popa
push
jge
push
imul
mov
aas
shlb
imul
adc
pop
fisubl
jp
mov
cs
mov
inc
mov
cltd
jge
aas
and
in
jp
int3
insl
fisubs
lcall
mov
outsl
scas
adc
dec
add
xor
ret
sub
movsl
pushf
inc
jmp
ficompl
lahf
js
jge
jp
pop
or
pop
jmp
es
or
imul
fsts
ja
sti
je
and
and
fs
mov
jge
fimull
test
ljmp
pushf
jns
cmp
sti
push
mov
call
sbb
xchg
inc
out
iret
loope
cmp
push
pop
dec
pop
cli
daa
push
xchg
adc
cltd
mov
lret
cli
and
ss
aas
push
cs
lock
jno
pop
subb
jmp
jge
mov
fsubl
subl
jge
lds
xlat
bound
popa
mov
test
inc
or
pop
sub
xchg
xorl
aaa
push
sar
mov
dec
inc
lea
test
mov
xor
test
rcrl
rorb
shll
cmp
adc
or
mov
xchg
sub
pop
add
sbb
jle
add
pshufw
scas
out
or
and
inc
jb
mov
push
jne
orb
addr16
aam
cmpsl
lahf
popa
cs
pop
add
in
pop
repnz
xchg
xchg
jne
test
out
adc
test
int
push
sbb
jg
ror
enter
cmp
test
aad
push
mov
es
out
les
sbb
pop
cli
mov
pop
push
cli
cs
adc
pop
cli
ja
lds
out
out
add
fistl
les
out
pop
add
cmc
cmp
out
pushf
push
pop
dec
add
xor
int3
test
xlat
push
or
xor
or
loop
shlb
mov
aas
pop
les
aad
mov
mov
fstps
jg
push
add
adc
pop
test
aas
mov
cmp
or
stos
stos
mov
std
shll
dec
mov
push
shrl
in
popa
pcmpgtd
movsb
push
pop
cmp
lods
adc
test
loope
sbb
push
mov
stc
jbe
adc
xor
mov
dec
pop
cmp
arpl
inc
pop
test
add
inc
mov
or
rolb
lock
pop
cmp
mov
js
or
and
sub
movsl
stos
je
fstps
cmpsb
dec
push
fiaddl
sub
push
sbb
pop
and
dec
mov
int
xchg
aas
pusha
inc
pop
popa
push
jmp
lock
test
dec
mov
xor
fnsave
cmpsb
and
xor
dec
scas
dec
or
xor
inc
and
pop
sub
jns
sbb
mov
adcb
jne
test
daa
test
cmp
lods
loope
cmc
inc
fimuls
out
mov
fidivrl
pusha
jns
adc
iret
enterw
add
or
adc
jae
and
ds
icebp
arpl
sbb
xchg
mov
fs
mov
fsubr
in
inc
dec
push
xor
data16
cmp
les
lods
mov
mov
scas
daa
cmp
pop
fwait
ret
insl
jecxz
test
pop
mov
sar
xchg
pop
repz
xor
jne
and
out
add
and
data16
jecxz
inc
or
lahf
sahf
pop
in
inc
or
loope
es
sub
int3
sarb
mov
mov
sbb
mov
rcll
inc
inc
mov
stos
dec
out
aaa
cltd
cmpl
fdivrl
das
cs
dec
ret
sbb
mov
inc
adc
outsl
imul
jae
and
mov
dec
fistpll
mov
xchg
enter
inc
pop
mov
idivl
jne
call
inc
jp
pop
into
xor
stc
mov
dec
adc
pop
arpl
movsl
inc
ljmp
ret
cli
mov
gs
xchg
push
aam
andb
and
rclb
shll
shlb
inc
pop
fbld
movsl
popa
xchg
xchg
cmp
cmpsb
pop
xlat
pop
sbb
sbb
cmpsl
bound
xchg
lahf
rorb
inc
ljmp
mov
mov
mov
mov
in
inc
jbe
in
dec
call
insl
cmp
lock
dec
mov
xchg
xchg
loopne
das
daa
fdivl
adc
sahf
mov
fcompl
jno
dec
fcomi
gs
pop
mov
push
lock
pop
lret
loop
jno
fcomps
inc
inc
inc
mov
and
fcompl
xchg
aas
mov
push
and
ja
xchg
and
dec
in
andl
shll
sbb
mov
xchg
outsl
xchg
lods
dec
not
out
jb
jo
dec
push
mov
jae
sbb
adc
dec
mov
icebp
pop
or
mov
loop
fdivrs
mov
clc
dec
adcb
cld
push
xor
mov
testb
js
shrl
out
jo
sub
cmp
sahf
pop
cs
stos
js
mov
pop
dec
cmc
lds
scas
ret
xchg
push
shl
sub
jno
test
xor
roll
jns
sub
push
mov
jecxz
lds
test
adc
xchg
int3
bts
xor
or
mov
cmp
bound
push
loop
in
mov
push
sbb
push
pop
mov
and
test
xchg
ja
and
lods
pop
mov
mov
inc
rorl
stos
pop
add
sub
jns
fcmovb
fisubs
mov
jge
movsb
pushf
mov
out
pushf
jmp
aaa
in
call
pop
pushf
pop
mov
xor
push
shll
rol
leave
jg
sar
mov
sub
fmuls
adc
fidivrs
xlat
or
xor
idiv
nop
dec
adc
xchg
mov
xchg
and
and
dec
and
xchg
and
sub
out
add
lods
adc
mov
in
dec
mov
pop
adc
les
fs
jno
movsl
xchg
lcall
push
pop
inc
push
insl
fisubs
out
scas
pop
sbb
outsb
shlb
fldenv
xor
rol
mov
movsb
cmp
bound
js
xchg
loop
cmpsl
push
mov
push
ret
adc
adc
push
push
and
arpl
ficoml
mov
xchg
push
inc
cmp
shl
repz
jg
stos
sbb
jne
xor
fs
jno
scas
bound
bound
push
push
sbb
nop
ljmp
pushf
xor
jge
popa
aaa
mov
inc
rcrb
adc
test
mov
movl
aad
xchg
cvtpi2ps
cmpsb
cmpsl
repnz
fcomps
mov
jle
rclb
push
ja
insl
shlb
loop
jp
pop
ret
jmp
jg
jnp
and
fs
andl
adc
test
ret
je
and
ret
jle
scas
cmpsl
pop
adc
dec
iret
pusha
add
test
dec
out
and
adc
sbb
stos
pop
mov
mov
mov
push
movsl
cli
fdivp
mov
loop
sarb
push
sti
fxch
out
lcall
xchg
test
sub
mov
sbb
out
push
xchg
int
int3
incb
imul
data16
in
ret
arpl
mov
cmp
nop
mov
test
or
inc
xor
out
xchg
test
pop
ss
ja
fildl
adc
add
fistl
fs
sti
insb
jecxz
ficoml
shll
pop
mov
mov
shrb
je
mov
xor
int
pop
fs
xor
sbb
es
push
push
inc
fs
scas
das
cld
xchg
daa
lds
xchg
aaa
sahf
jl
ret
jo
push
or
cmc
push
imul
shl
idivl
loop
sti
add
jg
xor
out
mov
outsl
outsb
cwtl
sub
stos
jle
insb
or
fs
pop
push
out
test
in
popa
ljmp
out
mov
xchg
addr16
push
mov
mov
test
clc
mov
mov
pop
jle
sub
push
lods
frstor
ljmp
das
enter
shr
xchg
mov
hlt
lods
add
jmp
cmp
xchg
aaa
out
mov
rep
mov
jl
jb
mov
push
or
sbb
xchg
loope
cmpsb
iret
test
lret
push
push
stc
mov
pop
pushf
icebp
jne
out
push
icebp
push
inc
dec
xchg
add
ret
aas
push
add
fs
mov
add
sbb
call
loope
adc
outsb
dec
rcll
loope
jns
insb
cmpsb
mov
dec
mov
dec
push
ljmp
mov
fs
cwtl
xchg
jno
jnp
jae
xor
outsb
xor
inc
decl
mov
das
test
and
lcall
in
dec
jnp
cltd
jns
xchg
adc
push
scas
test
fiadds
scas
mov
nop
jno
inc
mov
in
mov
movsb
jo
adc
js
sbb
aam
add
int3
jbe
outsl
pushf
inc
xchg
adc
insl
adc
mov
mov
jno
fimuls
mull
out
ss
mov
std
lea
xchg
loopne
shll
inc
inc
xchg
jle
dec
movsb
dec
pushf
popf
sub
hlt
or
xchg
jecxz
in
push
pop
push
sbb
pushf
mov
arpl
pop
leave
add
adc
dec
mov
cmp
push
push
andl
scas
mov
das
push
mov
sub
inc
test
jmp
negb
mov
jbe
stos
in
rclb
mov
pop
cld
pop
xor
std
sbb
je
div
lods
and
add
inc
jno
rcl
inc
mov
mov
movsb
adc
insw
test
mov
int3
xchg
sbb
iret
fisttps
stos
dec
ja
and
sub
pushf
mov
or
fistl
push
loopne
xchg
popa
bound
xlat
mov
nop
adc
flds
push
lret
or
and
xorl
cmpsb
stc
cwtl
loopne
push
cmp
or
dec
sbb
daa
int
hlt
es
fwait
mov
repz
jo
inc
test
cli
out
in
movsb
adc
xor
arpl
sub
hlt
xchg
mov
test
out
or
loopne
sbb
stos
adc
fidivl
cs
adc
push
lea
jmp
popa
loopne
in
xchg
push
ret
and
lret
sub
inc
nop
jg
test
dec
out
adc
iret
arpl
mov
rolb
std
mov
shl
add
fdivs
divb
test
adc
xchg
ss
and
mov
test
push
jae
pop
dec
pop
xlat
fadds
out
maxps
arpl
xchg
movsl
mov
jecxz
out
mov
dec
call
add
sbb
sahf
pushf
xor
push
mov
notl
or
mov
cmc
sbbb
sbb
test
inc
andl
dec
std
xor
mov
lds
mov
pop
push
movsb
sbb
xor
inc
and
rorb
or
dec
fsubrs
and
neg
lods
test
clc
mov
arpl
insb
ss
push
addr16
imul
movsl
cmp
imul
repnz
in
out
dec
xor
outsb
cmp
lcall
cmpsb
ljmp
mov
aas
loope
lods
mov
ja
mov
add
aas
and
add
inc
push
push
inc
dec
js
push
jmp
add
mov
mov
fldenv
xchg
or
test
pop
mov
inc
and
popf
sbb
movsb
pop
outsl
push
sub
rcrl
sbb
inc
movsl
adc
lret
cmpsl
mov
loopne
pop
sub
xor
push
lock
xchg
fucomi
jge
adc
shll
push
and
and
loopne
std
cltd
cmpsb
pop
push
movsl
sbb
loopne
mov
mov
mov
push
pusha
scas
sbb
test
scas
push
xorb
mov
cltd
popf
out
mov
pusha
push
xchg
xchg
movsl
mov
pop
or
int3
jl
push
out
and
clc
test
lods
popf
xor
aad
sbb
mov
imul
xchg
mov
hlt
cmp
inc
dec
les
xor
js
cmp
ds
mov
xchg
loopne
mov
outsb
inc
out
mov
xchg
add
mov
xor
ja
pop
test
aas
mov
push
jg
bound
push
jmp
test
lods
std
push
mov
inc
xchg
popf
sbb
or
or
mov
push
lods
les
xlat
mov
pop
loopne
push
dec
mov
or
imul
in
sbb
xchg
jnp
mov
inc
daa
out
pop
mov
scas
or
mov
in
jbe
pop
dec
and
mov
cli
mov
cmp
sti
jecxz
sub
aam
mov
stos
cwtl
addl
sbb
cmp
mov
mov
adc
ret
jecxz
rcrl
stc
fistpl
aaa
xchg
inc
das
and
iret
int3
mov
mov
stos
mov
shll
lahf
xor
push
dec
loop
in
fdivrs
sbb
mov
aam
cld
fcmovbe
ret
scas
dec
dec
sbb
cs
sbb
pop
xchg
cmp
aam
mov
mov
ljmp
cwtl
mov
jmp
push
dec
mov
cmp
and
dec
outsb
or
outsb
movsl
rolb
push
cs
xchg
push
test
aas
lea
dec
in
pmaxub
in
movsb
inc
scas
sub
mov
ss
stos
test
daa
repz
inc
mov
in
leave
jne
ja
das
push
repnz
mov
ljmp
loope
rorl
icebp
call
setp
arpl
mov
cmp
pop
test
sar
out
pop
outsb
xchg
loop
loope
sub
lds
test
int
int
add
daa
insl
roll
enter
testl
imul
in
push
es
inc
cmp
in
adcl
dec
mov
pop
mov
adc
mov
mov
xor
jmp
int3
test
fnstcw
movsl
movsb
stc
imul
cmp
add
adc
mov
ja
invd
cmc
daa
add
add
pop
mov
iret
pop
out
test
je
stos
cmp
sbb
pop
xor
ret
mov
xchg
mov
xchg
jmp
shrb
je
ja
les
jmp
mov
divb
fwait
gs
aaa
mov
cld
cmc
xor
pop
outsl
repz
scas
fbld
shl
pushf
jge
push
xor
bswap
loopne
inc
imul
and
in
icebp
cmpsb
sbb
add
pop
sbb
xor
pop
push
loop
xor
ds
loopne
aas
adc
push
cmp
cmp
add
adc
inc
sbb
xchg
sbb
test
sub
shll
cmp
dec
and
adc
mov
loope
pop
mov
dec
xchg
cmp
repz
pop
pop
movsl
sbb
pop
loop
dec
pop
ds
enter
adc
idivb
enter
sbb
or
sbb
movsl
sbb
les
int
jbe
push
pop
repz
mov
sbb
pop
push
sbb
and
mov
cmp
out
mov
push
pop
sub
xchg
xor
pop
sub
jge
or
or
push
mov
xchg
pop
xchg
sub
rcl
sub
inc
add
sbb
inc
daa
arpl
ds
into
jnp
or
mov
xchg
cmpsb
push
das
addr16
stos
mov
test
out
jae
incb
aaa
lcall
xchg
push
outsl
cld
xor
lcall
mov
mov
loope
xchg
and
addl
out
mov
push
dec
aam
daa
loope
push
test
mov
mov
mov
pop
push
movsb
clc
xor
jae
loop
push
ret
out
pop
cs
filds
imul
push
sub
mov
test
neg
rolb
xor
cmp
mov
push
je
dec
fwait
sub
outsl
adc
xchg
mov
cmp
loopne
dec
ja
sbb
clc
jge
push
clc
mov
mov
mov
jo
mov
pop
push
movsl
adc
test
mov
cld
jae
jl
test
test
xchg
inc
cmp
fildll
and
out
test
into
xchg
nop
lods
push
jl
jmp
mov
call
leave
sti
stc
add
fdivrs
fists
js
jns
js
scas
mov
bound
xor
adc
cmp
std
push
arpl
mov
xlat
xchg
fcompl
mov
cwtl
pushf
comiss
dec
shll
sbb
sti
decl
test
cmpsl
data16
add
jmp
pop
js
je
cli
int3
sarb
scas
mov
and
push
leave
insb
scas
icebp
inc
scas
jg
or
jmp
or
push
data16
fisttpl
adc
mov
seto
jecxz
pop
add
repz
jbe
incl
ret
mov
iret
adc
mov
dec
pop
rolb
imul
loope
test
in
inc
cmp
and
imul
pop
rep
sahf
sub
cmp
xlat
add
mov
pop
xchg
xor
mov
outsb
xchg
je
insl
clc
xlat
pop
mov
repnz
or
dec
mov
shrl
lock
les
add
jle
packuswb
sbb
jae
loopne
arpl
cli
jp
jbe
mov
jne
adc
push
test
out
fwait
das
sti
cmpsl
sub
out
ror
outsb
orl
outsl
cmc
mov
ljmp
add
and
inc
cli
fcom
jmp
dec
adc
mov
sub
imul
mov
movb
cmpl
outsb
fwait
aas
mov
dec
into
ja
adc
fstps
jecxz
addr16
and
sbb
lods
mov
jbe
leave
mov
inc
or
bound
nop
and
ret
xchg
adc
ret
mov
xchg
mov
andb
subb
xchg
ret
mov
sar
movsb
imul
mov
or
stos
mov
mov
mov
mov
adc
jecxz
ret
dec
loop
out
fistpl
mov
mov
sub
dec
mov
dec
and
lock
mov
mov
ss
pop
add
adc
dec
xor
xor
fcompl
push
cltd
scas
test
ds
push
cmpsl
mov
fsts
in
ret
xchg
add
loop
add
test
out
push
inc
sub
mov
pop
inc
adc
out
leave
dec
mov
ret
movsb
loope
jp
add
rcrb
test
sub
jmp
cmp
int
lcall
push
cmovne
ds
dec
sbb
fsts
mov
cmp
or
dec
fldl
push
fcoml
push
mov
js
fildl
stos
cld
or
jbe
jp
cmp
aad
xchg
cmp
ret
xor
sbb
test
dec
pop
push
in
insb
int3
out
hlt
clc
jge
iret
call
jmp
xchg
push
push
fcompl
jb
xchg
jle
jp
xchg
xchg
ljmp
movsb
lock
daa
call
or
sub
out
inc
in
scas
psubsb
fldcw
sbb
and
adc
mov
lds
aas
sbb
pop
movsl
pop
addr16
cmp
sbb
xor
jns
xor
push
dec
mov
addr16
push
nop
jle
jns
pusha
in
and
into
jns
ret
mov
and
and
push
adc
movsl
mov
outsl
mov
and
clc
push
sub
cltd
addl
fmull
or
xchg
or
pop
popa
ds
xchg
push
sub
out
dec
jle
adc
mov
insl
flds
push
push
and
cmpsl
loope
sub
daa
xlat
cltd
add
cs
push
roll
sbb
push
orb
adc
fisubs
dec
or
daa
cmp
sbb
mov
sti
mov
ljmp
mov
out
lea
insb
jecxz
xchg
daa
ret
scas
lock
jnp
mov
mov
loop
imul
sahf
cmovl
mov
shll
dec
jb,pn
push
xchg
int
int
repnz
pop
fyl2x
push
fs
mov
cltd
jne
xchg
stos
repnz
dec
adc
out
jbe
xlat
pop
mov
push
xor
cmp
xor
mov
mov
sbb
cmp
stos
pop
push
leave
jnp
or
aas
gs
push
adc
add
mov
dec
and
push
pop
fwait
cmpsb
imul
fldt
cs
fists
inc
xchg
mov
js
shl
mov
cmpb
test
std
es
inc
or
jnp
jecxz
dec
cmp
stc
sub
sbb
xor
fnstenv
es
movsb
adc
bound
and
and
call
inc
idivb
rorl
push
outsl
lret
call
xchg
mov
adc
sbb
xor
cmp
movsl
rclb
mov
neg
sbb
movb
notl
test
dec
cmp
fwait
iret
jne
cmc
dec
enter
xchg
out
xchg
pusha
xchg
js
gs
dec
push
out
jae
jg
add
cltd
cmp
sahf
clc
addr16
fwait
ss
imul
mov
inc
or
scas
test
xchg
mov
test
inc
and
lock
hlt
and
push
arpl
cmp
mov
xchg
cmp
lret
or
call
cmp
cmpsb
repnz
push
mov
pop
fs
adc
nop
dec
mov
mov
inc
mov
mov
fistl
mov
adc
filds
daa
fwait
adc
push
cli
xchg
xchg
sbbl
lock
and
cwtl
adc
les
adc
enter
outsb
idivl
push
jb
or
adc
hlt
orl
orb
stc
push
mov
jae
mov
stc
mov
rcrl
fdivs
mov
adc
add
push
mov
mov
dec
cmp
xor
popa
movsb
xchg
std
pop
xorb
lods
jae
nop
sub
sti
push
sbb
xor
push
jb
push
lret
xchg
inc
sbb
mov
inc
loop
ret
scas
loope
mov
arpl
mov
out
lds
int
pushf
out
fwait
xor
stc
arpl
dec
inc
cmp
push
lret
fsts
lock
cmp
push
dec
mov
mov
jmp
call
jecxz
cmp
adc
das
push
add
push
push
push
or
inc
adcb
popa
mov
push
ds
and
lret
add
lock
loop
push
roll
push
lods
push
jle
jp
add
mov
cld
jp
xlat
rclb
inc
fcmovnbe
mov
popf
mov
rolb
push
dec
cmp
mov
das
sar
fnstenv
pop
push
xchg
dec
cmp
push
lret
add
inc
fisttpll
inc
xchg
adc
dec
xchg
xchg
sahf
in
popf
cmc
icebp
shll
imul
dec
push
mov
jbe
leavew
adc
pusha
nop
shl
mov
addl
arpl
daa
or
pop
repnz
pop
dec
pop
sbb
cmp
test
and
mov
lods
sbbl
loop
jb
cmp
add
mov
std
or
ss
cld
dec
in
subl
insb
or
adc
dec
sub
pop
inc
xlat
pop
fs
fidivs
ds
jle
pop
test
adc
ds
cmpsb
repz
enter
insb
inc
pushf
stos
cltd
mov
enter
lods
mov
mov
sbb
iret
mov
in
rcrb
mov
in
test
xchg
dec
nop
mov
test
shlb
sbb
sbb
jne
xchg
jecxz
dec
and
add
andb
mov
mov
movd
in
mov
mov
xor
jmp
std
dec
xor
push
cmp
push
sarl
fildll
ja
daa
fisttpll
cmp
mov
popf
jae
mov
rcr
mov
sub
mov
cli
xchg
js
mov
mov
cmp
add
mov
adc
lcall
sub
xchg
leave
mov
mov
pop
cmpb
dec
or
xor
lds
int
inc
adc
jmp
aaa
scas
data16
leave
lahf
out
add
mov
push
int3
sub
xlat
sahf
stos
sbb
xorl
cltd
leave
bound
xorl
mov
mov
jo
lea
inc
popf
popa
aaa
cmp
pushf
jge
or
add
cs
xorl
scas
push
mov
subl
imul
fsubl
daa
loopnew
int
jnp
dec
xchg
std
insl
add
mov
mov
sbb
rorb
repnz
xor
mov
add
pop
stos
xor
movsl
outsl
ret
mov
xor
mov
mov
xchg
lea
in
jmp
push
or
adc
cltd
repz
fwait
sub
std
setp
xor
jo
inc
das
pushw
xchg
xor
lods
xchg
push
xor
jge
inc
cmpsl
and
sub
inc
js
or
insb
inc
shr
ret
mov
aam
pusha
arpl
add
pop
adc
mov
inc
cmc
fldenv
aas
xchg
push
pop
sub
fs
or
icebp
aas
mov
mov
in
shll
rorb
xchg
imul
out
and
adc
daa
push
gs
and
jle
notl
fstl
dec
sbb
mov
add
cmpsl
push
adc
pop
adc
push
andl
push
xor
dec
mov
cmp
pop
lret
pusha
inc
cltd
in
cli
pop
pop
fsubs
jo
push
push
scas
repz
inc
pop
push
rclb
push
rcrl
adc
jno
or
xchg
pop
pop
inc
sbb
adc
arpl
mov
adc
mov
sub
dec
cmc
mov
daa
adc
fnstenv
popf
mov
notb
lret
pushf
cwtl
ret
test
movsl
xchg
in
inc
jb
cmp
inc
or
and
fcmovu
mov
cmp
iret
cmp
cwtl
adc
mov
fisubs
inc
cmp
mov
aas
push
and
push
dec
inc
pop
loopne
repnz
test
add
lcall
adc
pushl
mov
mov
rcrb
sub
sbb
rcll
and
cli
sbb
xor
add
push
orl
aam
sbb
adc
lahf
jg
cli
pop
fwait
pop
xorb
insl
outsl
xchg
jno
jne
cmp
sbb
cmp
cltd
jbe
aam
lret
cmpsb
out
stc
jle
pop
outsb
rclb
test
push
inc
daa
lea
movsl
test
fistps
movsb
shrb
cmp
mov
sbb
or
imul
adcb
les
xor
cmp
ja
inc
mov
pop
mov
and
jns
add
push
out
cs
les
dec
cli
pop
fwait
out
fs
push
repz
push
iret
in
push
mov
lods
inc
jge
dec
xchg
mov
fnsave
mov
xor
popf
jno
shl
sub
adc
hlt
popa
in
xor
adc
jbe
addr16
cmpsl
xchg
in
scas
dec
xchg
sbb
mov
sahf
fildll
cli
jmp
xchg
cmp
push
testb
jle
inc
xor
shll
sub
repnz
std
push
xchg
stc
sub
fwait
jg
pop
pop
xor
icebp
cmp
push
push
in
jb
mov
sarl
mov
int3
xchg
xlat
mov
mov
int3
sub
adc
jecxz
adcb
fbstp
cmc
in
jle
fisttps
cmp
shll
roll
mov
mov
cmp
fbstp
test
pop
sahf
in
jl
fiadds
out
pop
stos
loope
xchg
mov
das
lahf
mov
scas
mov
mov
inc
movsl
fbstp
mov
jbe
cli
or
fmull
mov
xor
pop
lcall
es
mov
mov
lea
push
imul
and
sahf
jg
std
stc
mov
jae
addr16
cmp
divl
adc
cmc
jg
jb
and
jle
xor
adc
cmpsl
aad
xchg
in
or
adc
pop
lret
sbb
xlat
int
cmp
cmp
mov
orl
push
push
es
ret
mov
cmp
lret
in
xor
jne
out
sarb
sbbl
jbe
inc
repnz
movsl
dec
cmovno
mov
xorb
pop
mov
xchg
xor
dec
jle
jle
inc
movsl
pop
sahf
or
ljmp
push
or
push
dec
xlat
or
fs
or
xor
mov
jb
fldenv
push
inc
xor
dec
push
mov
mov
cld
xchg
or
push
mov
rcll
xchg
lret
outsl
sbbl
xchg
jp
xor
xor
xchg
cmp
subb
lahf
loop
cmp
or
sub
sub
inc
mov
adc
cmp
xor
cmpsl
add
xor
xchg
mov
pop
sarb
jp
lahf
mov
cmp
fst
xchg
and
xor
sub
clc
into
in
sarl
movsl
mov
xor
cld
fstps
xchg
cli
cmp
xlat
cmp
push
loopne
imul
fistps
je
int3
adc
sub
insl
out
add
dec
jge
and
dec
iret
adc
cs
mov
lock
fdivl
cli
in
adcb
test
and
pop
mov
jmp
push
vmread
mov
mov
push
add
xor
scas
xchg
popa
mov
inc
cmpsl
sbb
push
cmp
mov
cld
mov
xchg
add
out
and
stc
ficomps
dec
sbb
xlat
adc
mov
dec
mov
mov
adc
js
push
cmpsb
jae
mov
lods
and
jmp
dec
aas
imul
icebp
xchg
jo
pop
pop
notb
pop
mov
and
xor
out
cmp
jnp
cmpsl
mov
pop
repnz
add
or
ficoms
ror
adc
les
sub
sub
aam
mov
loop
jo
push
daa
cmpsl
popf
inc
out
fnstenv
loopne
aas
in
movntq
rclb
fisubs
push
insl
loope
mov
std
jg
aas
out
sti
push
sub
pop
push
sbb
roll
data16
cmp
scas
rorb
stc
std
call
mov
fdivrl
subb
mov
je
aas
jo
mov
or
out
sbb
or
xchg
arpl
mov
and
xchg
jg
daa
mov
xor
jle
jo
loop
adc
test
mov
nop
dec
mov
sbb
es
and
imul
and
fcomi
ret
hlt
loop
test
sub
pushf
movsl
jmp
xchg
pop
rorl
cmp
jecxz
xchg
out
sub
das
sbb
loop
out
inc
sub
mov
mov
mov
lods
and
insb
test
aam
xor
adc
testl
lds
jbe
jmp
jae
mov
daa
xchg
jnp
subl
push
and
jge
cwtl
and
cmp
pop
cmp
js
inc
out
repnz
mov
and
test
dec
mov
xchg
jmp
inc
mov
std
mov
movsb
imul
test
fstpl
push
xchg
mov
jbe
outsl
pop
pushl
cmp
pop
test
xor
mov
fbld
mov
inc
fwait
lret
cmpsl
jb
xlat
aaa
mov
test
je
stos
add
aad
aaa
dec
xor
lret
lds
stos
imul
in
stc
push
cmp
inc
stos
mov
insl
mov
scas
dec
aam
xchg
jnp
pushf
inc
xor
xchg
or
test
cmp
dec
outsl
sub
lds
test
jg
mov
xchg
ljmp
ja
out
enter
loope
and
or
mov
mov
repnz
push
mov
insl
std
add
dec
pop
push
jno
mov
mov
push
dec
aas
push
cmp
outsb
fwait
aaa
das
int
in
ds
inc
sub
dec
insl
inc
ja
lret
sbb
sbb
cmp
sub
adc
sti
outsb
enter
cmp
out
jmp
mov
leave
adc
pop
bound
jp
leave
inc
dec
in
mov
dec
add
push
addl
jge
cwtl
mov
push
scas
inc
scas
mov
mov
sbb
loop
into
or
push
popf
out
pushf
adc
push
mov
arpl
or
rcr
iret
xchg
jg
sub
mull
aas
cwtl
mov
or
outsb
lds
std
js
fdivr
gs
cmp
push
jecxz
jnp
std
lods
and
adc
and
mov
xor
and
sub
adc
rclb
push
pop
mov
out
test
lods
add
mov
mov
adc
mov
push
cmp
jl
popf
dec
daa
sub
sti
mov
inc
jnp
mov
clc
add
popf
test
icebp
cmp
scas
in
mov
push
cmp
lea
jg
movsb
or
sbb
popa
adc
jb
lds
xor
popf
adc
push
or
popa
push
lds
inc
std
ds
in
mov
loop
js
add
imul
xchg
mov
aas
cmpsl
icebp
jb
lods
lcall
aas
dec
jge
jl
mov
dec
enter
and
pop
mov
test
neg
in
into
or
sbb
scas
stos
ror
pusha
pop
test
xchg
lcall
adc
mov
popa
xchg
stos
push
pop
sbb
pop
loope
sbb
aaa
int3
lds
stc
xchg
test
sbb
movsl
aam
xchg
fstpt
inc
push
int
out
lds
sbb
jns
jb
dec
cmp
jle,pn
adc
adcl
pop
xor
dec
dec
mov
les
mov
jg
adc
push
push
pop
int3
jmp
dec
jp
xlat
push
cmpsl
dec
cmp
pop
add
iret
sti
lds
push
dec
stc
icebp
cmpsl
fisttpll
aad
std
icebp
jle
adc
cmpsb
lds
push
repnz
pop
test
adc
nop
test
scas
jb
adc
fldl
popf
pop
mov
mov
add
add
loopne
jae
ret
jbe
daa
ret
sub
sbb
xlat
and
sbb
fs
bound
pop
add
push
cmp
xchg
dec
dec
clc
pop
cmp
test
popa
inc
rolb
inc
lods
lods
cltd
push
stos
jns
adc
imul
je
mov
into
int
cs
cs
inc
mov
sbb
mov
push
popf
xor
lahf
into
pop
pusha
sub
lcall
and
xorl
push
add
cmpsb
sahf
jnp
mov
sbb
out
ja
negl
dec
aas
int
push
insl
dec
test
sub
stos
int
jae
adc
pusha
outsl
sub
or
ret
cmp
inc
std
and
dec
outsb
jecxz
fwait
sarb
aaa
dec
les
or
cmc
pop
shlb
mov
inc
shll
inc
arpl
fbld
jmp
and
xchg
lock
pop
inc
and
and
add
push
sub
jo
add
jb
mov
add
and
mov
inc
in
push
movsb
sbb
popa
es
or
push
or
ss
test
xor
mov
cwtl
nop
ljmp
stos
push
or
mov
outsl
and
xchg
decb
clc
sar
lds
nop
pushf
rclb
and
imul
mov
aad
mov
xchg
call
adc
lahf
mov
mov
repnz
sbb
add
inc
cltd
ret
stos
andl
or
sbb
or
xor
mov
mov
mov
data16
mov
movsb
mov
lahf
jno
out
repnz
test
mov
jg
xchg
add
jecxz
insl
or
fsubrl
pop
stos
and
lods
inc
add
dec
cmp
mov
mov
leave
push
fadds
inc
sub
push
call
daa
das
or
jo
cmp
mov
das
loop
int3
xor
mov
testb
adc
sbb
rol
xchg
fwait
in
pop
js
arpl
pop
rol
xchg
test
sbb
cli
add
loopne
mov
adcl
dec
rcrl
sbb
xor
push
pop
dec
das
ja
push
outsl
cmp
lret
push
cs
cmpsb
pop
arpl
push
push
test
imull
mov
bound
sbb
outsl
sub
sbb
incb
push
loop
lock
pusha
pop
jge
call
loope
inc
push
dec
aad
ret
cmpsl
clc
setno
push
jg
filds
mov
in
sub
push
fisubrl
inc
jb
xchg
pop
loope
cmpsl
pop
loope
pop
mov
xor
inc
push
pop
sub
sahf
fcoms
or
mov
inc
pop
je
push
lods
es
and
testb
xor
add
jecxz
push
mov
pop
jge
xlat
aas
cli
in
movsb
mov
clc
int
xchg
or
push
mov
pop
pop
xor
push
or
pushf
sbb
cmp
movsb
insl
loop
or
lea
daa
mov
lock
std
sbb
mov
clc
add
adc
push
cmp
inc
xlat
xlat
or
and
xor
lret
and
push
ret
imul
cmp
push
mov
xorl
mov
outsl
fwait
or
loop
inc
cmpsb
out
in
inc
xchg
mov
cwtl
shlb
mov
cwtl
ucomiss
sub
mov
outsb
jg
outsb
sub
push
add
sub
sbb
insl
mov
leave
cmp
stc
xor
ljmp
outsb
js
in
jae
sbb
daa
call
std
inc
outsl
jns
jmp
test
push
imul
call
dec
mov
out
cltd
mov
jmp
scas
inc
aas
push
lahf
jnp
into
lds
mov
xor
inc
xor
or
pop
mov
sub
pop
push
and
xchg
mov
xor
adc
inc
test
mov
add
lahf
aaa
pop
cmp
push
lret
ret
and
fwait
cmpsb
aam
adc
js
adc
push
add
addr16
les
xchg
addr16
jae
sub
popa
or
dec
cmp
sbb
cmpsb
lock
mov
and
pop
cmp
imul
es
cmp
sbb
push
aam
jno
mov
rorl
aam
daa
test
stc
cmp
into
js
pop
into
xchg
mov
movl
sbb
jae
jnp
xchg
xchg
movsl
mov
ss
or
mov
xor
fadds
repz
or
clc
sahf
xchg
imul
mov
sub
js
addr16
fcoms
stos
pop
stc
nop
loope
add
sub
inc
pop
scas
add
inc
jmp
subl
inc
mov
aaa
idivl
or
pop
jns
inc
daa
and
les
pop
sarb
mov
mov
inc
mov
mov
popa
dec
xchg
je
pop
push
dec
jmp
ds
shrl
pop
test
out
outsb
fimull
fdivrl
popf
addr16
enter
sbb
jo
xchg
adc
adc
adc
data16
scas
jbe
or
xchg
push
inc
inc
cmp
in
and
test
js
lcall
push
inc
cmpsl
xor
movsl
xchg
inc
cmp
dec
rcrl
mov
adc
mov
movsb
lds
push
inc
lock
pop
and
mov
sbb
insb
mov
imul
and
loope
pop
js
and
xor
xchg
lods
pop
ds
mulb
aam
sub
and
mov
jge
inc
push
js
cltd
jae
mov
fwait
shlb
and
stc
popa
or
sub
pusha
or
test
aam
ljmp
stc
imul
push
inc
out
sub
xchg
jecxz
xor
cmpsb
into
and
pop
xor
lret
cmp
push
hlt
inc
mov
addr16
orl
andb
mov
adc
adc
xchg
cmp
div
sub
mov
jbe
mov
imul
in
imulb
sbb
clc
enter
add
loop
int3
inc
jne
push
test
and
shr
cs
push
sti
xchg
addb
dec
incb
push
mov
mov
in
push
jmp
bound
ret
cmp
sub
into
cmp
cmp
mov
mov
aaa
scas
mov
leave
repnz
sbb
inc
test
test
mov
jo
and
dec
je
cmc
into
or
jge
or
mov
insl
xor
in
inc
inc
out
inc
fidivs
outsb
push
pop
fsubs
sbb
jmp
rep
jno
cwtl
ret
xchg
hlt
cld
das
int
adc
xchg
dec
cmp
cmp
xlat
cmpsb
int3
int
ret
xor
adc
jae
fistps
mul
jle
out
mov
lods
pop
xlat
lret
sbbb
mov
pop
aam
xor
mov
decl
rcll
idiv
adc
pusha
movsb
mulb
add
push
jae
andb
pop
sub
xor
sbbb
mov
rolb
shlb
loop
jb
jp
popf
cmp
inc
pop
dec
sbb
cli
cmp
test
xor
les
in
jno
add
mov
xor
push
sub
mov
push
push
cmc
mov
jmp
fstpt
sbb
and
cs
scas
stc
loop
mov
icebp
sub
in
pop
or
xor
inc
mov
test
pop
fsubl
and
inc
inc
push
in
adcb
or
addr16
stos
xchg
adc
movb
xchg
adcl
ja
xchg
mov
or
pop
jmp
pop
push
mov
adc
xor
mov
pushf
inc
cmpsl
cmpsb
xchg
xchg
xchg
dec
imul
int3
sbb
test
insl
fidivs
dec
fsubrp
mov
xchg
pop
xchg
sub
repz
sbb
jae
inc
mov
add
adc
fistpll
ss
pusha
or
sahf
or
cmp
xchg
mov
imul
lds
mov
test
dec
cmp
add
fnstcw
push
mov
roll
pop
sub
or
mov
xchg
js
inc
sub
mov
push
lcall
lahf
xchg
mov
sbb
mov
xchg
insl
mov
add
pminub
add
sbb
enter
xchg
dec
dec
mov
mov
nop
in
dec
ja
ficoml
mov
mov
xchg
sbb
inc
mov
std
cli
add
mov
inc
fdivs
mov
cmc
add
loop
call
dec
dec
mov
add
mov
pop
hlt
jecxz
push
pop
pop
aad
or
pop
bound
push
fnstcw
cli
pop
and
loopne
mov
es
jbe
push
loope
sbb
dec
fildll
stos
daa
pop
add
or
push
sbb
xor
adcl
xchg
sbb
rolb
add
jne
mov
lock
or
test
pop
mov
xchg
fists
pop
fs
pop
in
mov
xchg
imul
dec
aas
in
cmpsl
fisubrl
daa
shrl
dec
fistpl
push
fmul
jnp
pop
int
push
repnz
pushf
inc
dec
pop
sbb
push
test
out
das
fs
mov
or
shlb
inc
jbe
rorb
sarl
negb
mov
cmovnp
pop
test
push
popa
xchg
inc
movsb
dec
in
mov
xchg
push
mov
sub
or
ljmp
fs
push
outsl
push
dec
mov
xor
jo
les
lods
sti
fistps
pop
gs
clc
call
dec
add
not
cwtl
mov
clc
xchg
stos
pop
push
push
dec
insb
ret
xchg
fs
cmp
fistps
in
sub
push
ret
lcall
xorl
add
dec
add
movl
mov
push
mov
test
push
mov
cmp
test
adcl
fisubl
stos
mov
ror
add
push
mov
dec
ds
out
and
mov
xchg
add
sub
xlat
push
jg
int3
mov
stos
lock
loopne
pusha
int
or
jg
push
leave
pop
sti
and
mov
outsb
mov
xchg
mov
mov
pop
add
fs
sbb
sub
insb
mov
insb
jns
mov
cld
jmp
xchg
pop
jbe
jb
outsl
mov
and
in
leave
or
push
test
dec
or
inc
adcb
cmp
push
jle
lret
lret
push
inc
jge
cmc
adc
mov
jmp
lds
inc
cmp
or
sahf
jp
xor
push
xchg
cld
pop
pop
add
dec
mov
rcrl
repz
mov
cltd
xchg
and
fisubl
inc
mov
xor
sbb
out
inc
and
xor
dec
out
loope
pop
rorb
xchg
push
test
sahf
sub
popf
sbb
or
lret
rclb
inc
in
jge,pt
and
out
pop
cmp
add
xchg
mov
mov
inc
mov
ret
add
out
mov
xchg
mov
inc
sub
fld1
mov
movsb
outsl
mov
or
adc
and
xor
lea
xor
xchg
lea
jle
mov
insl
push
lret
mov
scas
xor
loope
pop
jbe
inc
jnp
cmpsb
data16
sub
ss
mov
jmp
lods
loopne
push
mov
nop
mov
push
mov
bound
repnz
aad
shll
xor
int3
push
dec
xor
dec
and
xchg
mov
xchg
and
mov
mov
insl
xlat
cli
outsl
and
arpl
cwtl
xor
xchg
in
lret
mov
rolb
sub
sbb
push
xor
fsubs
mov
jae
aaa
push
loopne
fdivrl
popf
xor
out
jae
xorl
pop
test
rcll
push
movsb
imulb
bound
mov
mov
sbb
sub
testl
std
dec
mov
and
or
lret
aad
rorb
lahf
fisttpl
pop
pop
clc
adc
hlt
scas
leave
sbb
jl
ret
popf
js
or
mov
dec
mov
inc
push
add
scas
out
pop
test
pop
xchg
lods
lock
dec
sbb
imul
paddusw
inc
test
icebp
dec
mov
lret
mov
jg
lahf
jge
dec
icebp
ret
mov
gs
push
and
movsb
pop
adc
fwait
inc
rcrl
mov
pusha
cld
xchg
out
xor
push
outsl
scas
mov
int3
cmpb
lds
movsl
sub
into
pop
cmp
adc
jb
aad
cmpb
shll
xor
jne
push
add
shrl
insb
mov
adc
lret
rcrb
hlt
call
cmpsl
dec
mov
xlat
mov
add
imul
data16
stc
cli
xlat
xchg
lds
pop
mov
adc
cmpsb
shrl
sub
sbb
pop
rcrl
cld
sbb
mov
lods
call
mov
mov
clc
call
testb
cs
les
sbb
mov
gs
pop
icebp
mov
push
pop
es
dec
sub
cld
daa
xor
mov
mov
dec
cmpsl
or
and
mov
test
inc
test
enter
subl
cltd
cmp
ret
xchg
icebp
xchg
or
outsb
ss
je
or
cld
inc
insb
ret
xor
sahf
clc
push
lret
sub
jmp
les
addb
cmpsb
cmpsl
mov
std
rorb
fsubs
lret
add
push
push
lock
lret
jg
push
into
push
popf
xchg
mov
loope
or
dec
push
dec
sub
fs
lods
dec
adc
pop
dec
pushf
aam
xchg
mov
fs
push
xchg
cmp
insb
cmp
insb
xchg
mov
xor
mov
cs
adc
es
adc
gs
sub
clc
pop
ficoml
std
jbe
mov
enter
jbe
lcall
subb
xchg
pop
mov
call
xor
ret
xorl
or
loop
and
jge
inc
push
mov
pop
mov
pop
rcll
movsb
mov
cmc
lds
cld
mov
in
inc
push
and
push
sbbl
in
dec
mov
aad
sbb
addr16
dec
outsb
adc
addr16
lea
pop
roll
fisttpl
addr16
test
arpl
mov
popf
and
xbegin
sub
and
dec
or
fmul
jle
mov
lret
pop
addr16
jno
pop
es
cltd
xchg
dec
and
adc
xchg
ja
adc
or
ret
mov
inc
xor
les
xchg
xor
xlat
sub
bound
cs
call
out
and
adc
loop
dec
movsb
je
ss
popf
mov
xor
adc
orb
sbb
lds
push
mov
adc
stos
pop
xchg
and
cld
aad
pop
fs
jg
pop
push
loope
sahf
loop
cmp
in
mov
dec
call
ljmp
push
sarl
ljmp
repz
cli
push
lret
mov
pop
je
sbb
data16
hlt
shrl
rcr
pop
pushf
pop
in
push
sbb
cmp
fldt
cltd
mov
das
aas
movsb
mov
mov
js
pop
jnp
and
adc
retw
jnp
out
nop
add
push
fsubrl
adc
test
ret
mov
pop
mov
cmpsb
movsl
adc
mov
sti
js
mov
lods
fnstsw
ds
or
push
or
sub
adc
aad
mov
jo
pushf
daa
lock
fwait
inc
pop
mov
sti
cmpsl
sti
aas
scas
shl
push
add
test
sbb
and
dec
insl
movsl
push
pusha
cmp
arpl
arpl
jl
mov
xchg
dec
repz
sbb
adc
jg
jo
inc
xchg
into
mov
dec
pop
pop
mov
adc
call
cmp
pop
into
lahf
pop
leave
rcl
rclb
xlat
dec
dec
int
pop
lods
lahf
adc
lahf
orb
mov
xchg
lock
add
inc
pop
xor
push
pop
fistps
jmp
imul
and
sahf
mov
das
shl
xchg
sti
push
and
cs
inc
shl
adc
negl
mov
xlat
sub
cli
adc
hlt
je
movntps
jge
outsb
mov
sbb
or
push
stos
push
es
or
cwtl
dec
xchg
stos
or
pushf
inc
jo
leave
add
xor
jg
mov
mov
xor
insb
push
popl
adc
mov
shrb
pusha
sbb
pop
adc
cs
jbe
loopne
mov
cld
push
outsb
out
push
test
mov
mov
stos
sbbl
jnp
mov
jp
fsubrp
shr
mov
stos
push
push
mov
andb
test
inc
or
jle
out
loopew
cmp
mov
imul
pop
and
push
stc
mov
clc
jmp
xor
lds
mov
mov
daa
pop
enter
stos
adc
sahf
mov
sbb
stos
xchg
int
add
xor
cmc
mov
jo
xlat
scas
xchg
mov
or
testl
sarb
sbb
clc
push
mov
or
out
mov
iret
mov
xchg
mov
mov
lret
mov
adc
pop
pop
gs
dec
test
ja
aaa
pop
movsb
add
movsb
mov
pop
inc
dec
fcomp
add
push
addr16
ret
cmp
shl
xor
jnp
jg
adc
or
out
mov
xorb
out
cmp
scas
int
in
mov
int
cmp
lcall
test
dec
dec
adc
loope
sbb
xor
shrl
adc
sub
mov
xchg
js
add
add
jecxz
in
mov
jo
loop
flds
das
xor
mov
and
andb
test
pop
in
dec
mov
or
cmpsb
test
jno
in
popa
dec
out
shrl
cmpsl
out
cld
mov
int
xchg
xor
lcall
xor
lds
cwtl
decb
outsb
jne
clc
mov
sar
shrb
mov
fstp
mov
xor
dec
push
imul
xchg
es
mov
in
arpl
or
and
push
add
clc
push
sbb
pop
negb
push
arpl
mov
jae
adc
pushf
sbb
jae
scas
add
mov
and
xor
xor
or
test
daa
cmp
fcmovb
inc
data16
adc
test
xor
out
and
daa
les
in
daa
mov
jmp
xchg
add
daa
lods
loopne
xchg
pop
add
insb
je
and
icebp
pop
in
nop
out
cmpsl
adc
push
and
jae
cltd
cmc
add
jnp
jb
cld
cmp
lock
js
or
inc
ljmp
mov
mov
daa
mov
sbb
push
cmp
inc
mov
jg
aas
fidivl
in
test
addb
xchg
fs
sub
je
mov
rep
mov
jo
xchg
aaa
in
inc
or
mov
inc
mov
bts
call
jnp
ret
inc
xchg
and
or
mov
xchg
ljmp
lahf
add
ja
ret
mov
push
rcrb
test
ds
iret
or
inc
inc
pop
jae
sub
dec
fildl
aad
les
mov
orb
loope
inc
mov
or
and
aam
lds
dec
lock
out
mov
sbb
nop
dec
repz
sbb
pop
cmp
mov
mov
fiadds
or
inc
push
lock
pop
sbbb
lds
push
stos
xchg
mov
adc
xchg
jae
enter
hlt
hlt
lea
lods
loopne
into
ffreep
push
jmp
xor
fcmovbe
xor
adc
xor
mov
lods
fs
cmp
xor
stos
push
sub
push
inc
movsl
lret
mov
je
jbe
das
mov
iret
dec
push
xchg
and
xchg
inc
push
push
add
sahf
mov
shr
push
xchg
push
or
lock
movsl
mov
push
insb
nopl
lods
or
xchg
inc
mov
lea
in
cmp
mov
mov
sub
push
imul
push
mov
aaa
out
iret
dec
enter
andb
movsb
movsl
push
fdivrp
mov
insb
inc
dec
mov
or
xor
enter
movsl
cmpsl
mov
mov
jns
shrb
jmp
js,pt
pop
push
mov
xchg
call
ljmp
insb
pop
add
popf
jl
or
leave
psubusw
mov
and
jno
add
ret
es
and
jmp
mov
push
mov
or
mov
negl
rorl
out
push
adc
sub
jbe
push
jp
jb
ficompl
nop
loop
pop
daa
ret
mov
cmpsb
outsl
ljmp
out
or
add
inc
dec
xlat
test
lock
pop
ljmp
insl
push
xchg
les
sub
shll
mov
adc
fsts
pop
int
lea
fdivrp
sbb
cmpsb
mov
test
in
xchg
out
sbb
cwtl
push
mov
enter
pop
negl
lahf
repnz
pop
pcmpeqb
push
or
jle
push
imul
rcr
cs
add
fwait
xor
cmpsb
ret
jl
out
sbb
or
aad
lock
jp
insl
add
push
int3
mov
int
test
sub
xchg
icebp
sbb
rcrb
rcrb
xor
sbb
subl
outsb
stos
adc
test
pop
sbb
hlt
sbbb
lods
shrl
lods
js
mov
mov
int3
mov
dec
popa
je
adcl
sub
cld
push
stos
pop
pop
sbb
nop
fdivrs
dec
xor
stos
out
fldcw
push
pop
lods
cmp
std
adc
pushf
or
sub
mov
mov
loope
test
loopne
scas
loopne
insb
xchg
cmovns
imul
fwait
adc
dec
dec
mov
rorl
pop
fabs
lret
arpl
cs
sbb
jecxz
xor
movsl
sbb
cmp
fs
repz
and
cs
out
and
pop
andb
and
or
adc
or
cmp
int3
aas
pushf
sbb
mov
or
rcr
adc
les
out
xor
fmuls
test
ss
mov
jmp
lret
mov
pop
inc
pop
out
aaa
jle
ljmp
std
jae
mov
xor
dec
gs
lods
inc
sarl
mov
inc
push
addl
cwtl
rolb
pop
lea
pop
cmp
pop
icebp
and
or
clc
stos
or
test
loop
out
sti
out
ret
cs
dec
xchg
test
xchg
or
dec
xor
sbb
dec
aaa
loop
xor
add
ljmp
jnp
push
adc
iret
insb
fs
cwtl
lahf
jbe
xor
pop
ja
mov
pop
addr16
sub
xor
loopne
sbb
lcall
pop
lods
mov
daa
pusha
jle
dec
loope
icebp
loopne
std
mov
imul
pop
push
mov
outsl
sub
sahf
cmp
fisubs
adc
daa
fwait
cmp
lret
call
jecxz
push
lahf
mov
add
out
mov
mov
mov
pop
fsub
push
shll
jmp
scas
jg
mov
mov
push
scas
or
push
scas
rorb
rorl
sbbb
mov
rolb
in
imul
cwtl
adc
mov
or
pop
xchg
pop
in
jge
push
fcmovnb
scas
push
mov
and
mov
leave
repz
stos
dec
cmp
movsb
xlat
mov
inc
sbb
sub
dec
ds
jmp
int3
in
mov
insb
cmp
cmc
mov
fstpl
xchg
sti
scas
inc
sbb
insl
and
test
pop
pop
push
test
pop
daa
in
fadd
mov
mov
and
arpl
sub
sahf
movsb
pop
test
repz
pop
fs
pop
and
andl
xorb
push
iret
ret
mov
lods
mov
cmp
xchg
insl
jp
xor
and
dec
enter
sbb
call
jecxz
cld
fistpl
pop
push
gs
pop
in
adc
inc
xlat
pop
jae
push
push
stc
cmpsb
pop
mov
icebp
nop
push
jae
mov
add
or
pop
and
inc
in
add
jno
sbb
in
scas
mov
hlt
fisttpll
cmp
mov
sti
mov
xor
mov
subb
dec
mov
inc
loop
xor
nop
jno
cmp
bound
aam
pop
pop
or
adc
adc
cmp
adc
ss
mov
pop
cmpsl
pop
xor
adc
and
dec
xchg
cmc
adc
es
adc
fcoms
jbe
dec
test
jp
cmp
pop
sub
decb
pop
and
pop
dec
pop
fistps
jno
xchg
mov
pop
add
stos
dec
sub
jl
dec
or
js
fwait
movsl
sub
dec
imul
das
pushf
pushf
add
mov
adc
enter
call
pushl
cmp
jp
pushf
pop
ret
pop
push
je
jle
fcoms
mov
sub
mov
lods
fimull
fs
push
stos
in
imul
or
cmp
xor
nop
js
rol
ret
in
xchg
pop
cli
inc
jns
add
hlt
xchg
addr16
sbb
int
popa
jno
data16
mov
cmpsb
bound
pop
push
jmp
clc
adc
in
mov
lds
shrl
test
cmp
ret
cmp
sbb
add
in
test
xchg
mov
or
mov
icebp
pop
xchg
test
dec
outsl
addb
cmp
inc
dec
stos
clc
out
pop
dec
nop
jae
jmp
cld
push
adc
mov
inc
push
jl
lds
pop
loop
in
push
dec
and
jne
sbb
lods
add
fbld
sub
xchg
mov
push
lahf
add
test
scas
cmpsl
jns
les
stos
test
out
iret
mov
xor
jle
aas
jo
in
inc
mov
adc
sub
gs
mov
leave
gs
pop
cmpsl
add
or
dec
xchg
adc
inc
in
or
dec
movsl
xchg
and
pop
xor
and
int3
dec
fstpl
ja
cmp
push
and
dec
add
and
mov
in
pop
cmc
pop
push
hlt
imul
jnp
pushf
mov
xlat
pop
loope
lret
les
push
outsl
les
stos
cmp
push
pushf
lods
ret
sub
mov
pop
dec
and
fiadds
popf
sub
stc
jno
andb
daa
sbbl
xor
test
data16
cmp
loopne
add
cltd
lds
mov
fsubrs
push
mov
popa
inc
jmp
pop
shrl
xor
adc
mov
ret
ficomps
lea
xor
sub
ljmp
sub
adc
out
push
lods
pop
jno
sub
pop
aaa
repz
test
and
mull
mov
or
sbb
sti
jae
arpl
or
aam
sub
mov
shr
fsubs
loope
xchg
repz
cltd
xchg
pushf
int3
pop
out
std
cmc
jmp
and
lea
imul
cmpsl
movsl
jo
inc
sbb
leave
pop
inc
ss
enter
icebp
ds
test
mov
and
or
dec
mov
mov
push
adc
sub
mov
arpl
push
imul
lahf
mov
mov
rcll
daa
jp
inc
insl
push
jns
dec
push
and
fstpt
addb
ret
out
daa
xchg
inc
icebp
fisubl
mov
leave
pop
push
push
sbb
push
subb
sbb
loopne
fildl
cmp
out
sbb
in
popa
sub
loopne
lods
mov
mov
subb
xor
cmp
dec
and
push
call
das
sub
movsl
push
jnp
jb
pop
out
push
inc
ljmp
cmpsb
in
jno
icebp
nop
mov
jb
dec
outsb
add
fsubr
lea
inc
popf
loop
push
loope
sbb
jo
pop
popf
ds
outsl
adc
push
das
jo
lcall
lods
adc
or
mov
movsb
push
popf
fstps
inc
addr16
call
negl
lds
loop
aas
mov
pop
add
cmp
aam
push
adc
inc
mov
icebp
shlb
subb
adc
cld
rcll
arpl
cmp
ljmp
push
bound
nop
xchg
jle
pushf
fdivp
out
add
data16
aaa
enter
xor
add
sub
loop
out
mov
fisubl
mov
push
push
and
in
in
ds
in
mov
pushf
lea
lds
out
outsb
bswap
jp
hlt
inc
jo
pop
in
aaa
or
cltd
mov
sub
insb
shl
lcall
hlt
pop
rcl
cli
cmp
sbb
mov
add
cwtl
cmp
sub
xor
scas
lods
mov
fidivrl
iret
fbstp
pop
cmp
imul
or
aaa
pop
inc
jecxz
pop
aas
popf
aad
xchg
es
add
pop
mov
pop
imul
pop
jle
jno
mov
aas
push
dec
inc
dec
jecxz
jns
in
fsubrl
in
fdivr
xchg
mov
out
adc
push
mov
inc
push
cld
mov
les
shlb
aad
jmp
sbb
shl
shlb
lret
push
pop
loope
xchg
jge
dec
imul
mov
insb
sbb
nop
mov
div
movsb
mov
fcompl
xlat
mov
pop
outsl
pop
cmpsb
pushf
ret
mov
fiadds
lret
cmp
bswap
lea
ljmp
push
icebp
jmp
cli
mov
cmp
adcb
xor
addr16
push
fwait
jnp
test
out
mov
xor
sub
lcall
bound
int3
inc
lret
mov
and
mov
je
dec
in
rcrb
dec
es
pop
sbb
adc
adcb
xor
adc
out
into
push
xchg
ljmp
and
insl
mov
es
filds
ficoms
mov
sbb
mov
out
push
mov
add
pop
in
mov
sahf
hlt
aam
sbb
xlat
ss
in
pop
aam
outsl
xchg
sbb
sub
pop
xor
call
pop
mov
xchg
add
push
mov
addr16
add
mov
xor
outsl
fildll
or
xchg
mov
stos
mov
inc
pop
cld
loope
clc
or
lret
cmp
and
mov
xor
xchg
or
mov
lcall
dec
in
cmp
in
xchg
cs
adc
mov
out
push
data16
out
pop
and
xor
arpl
fldt
jp
sahf
mov
xor
mov
ljmp
push
lea
jp
add
mov
xor
lcall
push
sub
xchg
mov
jns
xor
int3
jo
push
roll
pop
icebp
sub
cltd
hlt
inc
mov
push
fs
xchg
fsubrp
jmp
lods
lds
and
sub
out
inc
cltd
xor
gs
mov
pop
adc
std
imul
sub
pushf
icebp
adc
cmp
outsb
cmc
mov
addr16
add
xor
mov
fwait
pop
and
pop
pop
cltd
jb
push
ss
mov
cmp
nop
pop
ficompl
pop
mov
xor
test
hlt
decl
xchg
or
adc
mov
in
mov
cmp
jo
lods
jne
je
and
sahf
xor
jb
mov
jp
loopne
rorl
mulb
rcrb
dec
int3
roll
mov
in
lahf
mov
xchg
pop
addl
xchg
test
add
std
cld
pop
cld
jecxz
add
out
sub
sub
inc
cmpsl
mov
cmp
sbb
push
jno
icebp
push
cmp
pop
dec
gs
mov
pusha
js
arpl
call
aad
lcall
add
int3
mov
add
lret
mov
fcmovbe
lret
ss
push
sub
sbb
cwtl
fsubrl
negb
push
pushf
div
cmc
adc
jg
enter
icebp
xor
mov
adc
filds
add
decl
and
stos
mov
push
lds
aad
fs
xchg
mov
xchg
fucomp
inc
lcall
pushf
dec
arpl
out
inc
or
int3
mov
in
and
imul
scas
cmp
cmp
testl
arpl
cmpl
jae
pop
add
rcrl
dec
popa
std
cmp
aaa
jl
mov
ret
push
pop
rorb
adc
stos
lock
btr
push
iret
sub
jb
lret
mov
cmp
es
adc
frstor
and
ret
add
out
jmp
lahf
inc
mov
ss
sub
ss
fmulp
aas
flds
sub
pop
push
dec
lcall
loop
mov
add
or
in
shrl
xchg
leave
pop
add
dec
ret
mov
jge
notb
lcall
cmpsl
dec
lret
add
lret
or
cmovs
sbb
mov
jmp
bound
popa
push
sbb
in
iret
sbb
out
or
fisubrs
inc
sub
add
stc
or
mov
dec
lods
push
mov
mov
push
xchg
addr16
leave
sub
push
cmc
mov
pop
push
cmp
orb
jge
out
aas
jge
adc
pushf
pop
pop
pop
das
outsl
sub
scas
or
inc
push
push
dec
inc
imul
mov
xorl
negb
aam
test
mov
jne
sub
leave
xlat
mov
jg
pop
out
xlat
orl
icebp
popf
std
cld
shl
lret
xchg
and
pop
leave
sub
xor
insl
movsb
mov
adc
insl
out
hlt
divps
and
add
add
cs
mov
mov
aad
bound
repnz
aad
lret
jp
repnz
inc
fdivrs
fdiv
mov
into
adc
cmp
cmpsl
mov
push
icebp
test
mov
cmpsl
jbe
sub
push
push
int
xchg
inc
hlt
popf
push
add
cmpsl
pop
push
mov
lret
lahf
jae
outsb
cltd
fcomp
add
stos
outsl
adc
pop
je
adc
shlb
int3
fnstsw
mov
test
sub
inc
or
ljmp
lahf
xor
xchg
push
pop
dec
add
jno
mov
inc
or
jno
js
jge
popa
fbld
and
add
sub
sub
push
or
pushl
test
sub
xchg
inc
add
loop
fsubrl
add
cmp
roll
mov
addl
je
xchg
int
outsl
mov
mov
jne
dec
pop
cmp
imul
pop
xchg
push
pop
in
xor
jle
fcoms
sahf
fwait
push
xlat
inc
mov
push
int3
les
mov
inc
mov
aas
jo
icebp
push
jmp
sbb
push
xchg
mov
dec
inc
div
enter
mov
xchg
add
push
cmp
jb
daa
xor
or
insb
jns
fistl
cmp
adc
cmp
inc
and
into
cmp
jne
add
adc
dec
or
data16
movsl
cmp
in
xor
cwtl
mov
add
movsl
mov
push
scas
in
mov
mov
sets
fs
mov
hlt
xor
stos
test
mov
lds
or
fwait
jg
push
jne
push
lods
push
aas
xchg
icebp
lds
sub
pop
cmp
sbbb
das
xor
mov
lcall
push
mov
push
pop
popa
loope
xchg
pushl
ret
pop
push
adc
sub
test
mov
or
enter
xor
std
imul
inc
sub
cmp
test
aad
dec
stc
push
jae
mov
sub
fs
repnz
cmp
inc
mov
dec
jg
shll
sub
leave
sub
mov
inc
cmp
pop
mov
mov
xor
sbb
jb
cmp
aaa
add
out
out
pusha
call
push
jl
ljmp
mov
popf
mov
pushf
xchg
mul
mov
pop
std
orb
js
push
cwtl
inc
daa
sbb
shll
pop
lcall
mov
adc
leave
repz
je
push
jno
addr16
xor
fs
pop
cmp
stos
pop
add
add
mov
mov
les
mov
mov
push
pop
data16
and
divb
xor
xor
lods
and
out
mov
leave
jl
jp
jo
pop
sub
xchg
scas
mov
xchg
push
cmp
frstor
add
lock
adc
movsl
mov
jns
sti
mov
xor
lret
iret
mov
mov
arpl
mov
mov
insl
repnz
mov
add
sbb
in
lods
ljmp
inc
cmc
jb
add
ljmp
dec
add
repnz
es
rorl
leave
cmp
jle
pop
ja
lahf
lds
pop
mov
cmpsl
push
and
and
sahf
and
pusha
jno
mov
push
outsb
hlt
aad
repnz
xchg
out
or
jle
pop
mov
int3
scas
aaa
mov
adc
add
sub
mov
fistpll
or
nop
sbb
mov
mov
push
call
ret
int
cmpsb
mov
mov
mov
hlt
icebp
enter
inc
inc
scas
rcr
aas
mov
out
push
shlb
pushl
sbb
mov
stc
xchg
sbb
xor
xchg
xor
push
shlb
sahf
into
mov
dec
mov
cmp
gs
addr16
mov
ss
inc
cmpsb
pusha
cmpsb
cmc
sub
and
pop
jmp
mov
adc
mov
and
dec
push
gs
xchg
xorb
push
sbb
mov
push
or
andb
inc
and
into
lahf
inc
push
jo
push
fcmovnb
mov
mov
sbb
dec
fsubrs
jge
lods
sub
outsb
lcall
pop
mov
xchg
xchg
mov
sub
or
loopne
addb
mulb
xor
mov
sbb
push
das
add
mov
js
mov
cli
imul
xchg
jecxz
scas
in
adc
cmp
lsl
jne
adc
std
pusha
out
push
pop
cmc
sti
pop
repz
bound
pop
lahf
insl
mov
dec
push
mov
jl
adc
jb
jnp
cmp
js
cmpsl
outsb
in
mov
pop
cmp
pop
les
aad
sub
pop
cmp
inc
xor
jb
xchg
jno
xor
inc
mov
push
adcl
leave
addr16
cmpsl
js
xchg
inc
pusha
nop
testl
mov
repz
movsl
or
fs
inc
sub
fsubl
jno
pop
test
cmpsl
xchg
pop
cmp
add
scas
scas
push
orb
sbb
stc
rcrb
lcall
mov
pop
sahf
jge
xor
mov
mov
jne
js
out
lahf
testb
add
ja
paddd
or
sti
shrb
into
sbb
push
insl
add
lock
cli
mov
mov
aam
test
xlat
push
fwait
lret
jge
dec
add
push
xchg
adc
dec
or
ss
aas
push
cmpb
xor
bound
xchg
scas
pop
push
or
int
hlt
jmp
sub
jecxz
fiaddl
stos
and
mov
mov
xchg
ret
lret
mov
jl
call
add
cmpsb
xorl
test
enter
cmp
pop
mov
sub
cwtl
mov
mov
dec
sahf
fst
or
lds
jg
fists
mov
into
jecxz
call
mov
adc
or
dec
inc
fnstcw
movsl
cmpsl
push
pop
mov
int
push
mov
sahf
hlt
inc
inc
lods
mov
es
mov
cltd
and
call
lret
daa
dec
jmp
fisubrl
pop
or
mov
jmp
xor
pusha
outsl
mov
mov
test
mov
mov
cmp
sub
push
stos
add
shlb
sub
push
pop
icebp
icebp
shll
jns
push
cld
sbb
pop
popf
imul
and
fldenv
out
inc
sbb
or
mov
xchg
xchg
fs
negl
je
mov
shlb
mov
data16
fcompl
faddl
divl
sub
adc
shrb
in
loope
lock
or
and
jo
scas
test
push
int3
mov
push
add
shlb
gs
sub
xor
pop
cmp
xchg
divb
aam
hlt
das
outsl
pop
call
cmc
mov
cmp
push
hlt
std
fsubs
mov
xor
lret
lods
inc
xor
pop
stos
or
and
push
in
setb
add
cld
mov
inc
dec
insb
ret
dec
loopne
in
fs
fiaddl
lods
aad
add
cmpsb
and
lahf
mov
push
push
fistps
jnp
xchg
inc
test
test
adc
jge
out
and
nop
sbb
rcll
and
jecxz
int3
cmp
sub
frstor
sbb
loopne
cmc
mov
dec
add
iret
cmp
xchg
out
lret
mov
stc
int
jne
sahf
inc
pushl
aad
or
push
push
mov
xchg
inc
xchg
xor
push
push
jl
inc
sub
dec
repz
jl
js
xchg
scas
and
dec
jne
daa
inc
sub
fnstcw
scas
fcoml
loope
cmpsl
xchg
mov
mov
xchg
aad
test
sbb
fistps
push
loope
mov
inc
test
jno
pop
sub
cmp
xor
icebp
pop
mov
sub
mov
sti
sbb
scas
push
bound
sub
cmp
or
mov
int3
lahf
scas
rcll
imul
xlat
inc
hlt
lcall
aam
mov
pop
xor
mov
sub
and
adc
popf
cld
lea
or
fmuls
push
je
sub
xor
cwtl
pop
cld
pop
fwait
or
fdivs
mov
sub
pop
mov
fbld
aam
and
sub
lock
aas
shl
stos
fmuls
sub
jmp
jge
cmp
insb
aad
jnp,pt
push
mov
jmp
xchg
push
aad
adc
xchg
movl
xor
add
dec
mov
sub
data16
mov
xchg
aad
ret
adc
aad
or
jne
jne
adc
cmovge
scas
mov
sub
mov
mov
loop
dec
mov
cmovge
xchg
and
dec
mul
sbb
sti
loopne
or
xchg
rolb
mov
mov
mov
nop
rcrb
or
cmp
loopne
std
xor
or
pop
pop
ss
xchg
add
push
pushf
mov
xchg
mov
scas
xor
mov
int
out
and
aam
or
mov
inc
mov
jno
and
mov
sbb
push
mov
fwait
lret
in
jb
pop
mov
lds
gs
leave
mov
xorl
jns
clc
sahf
loop
ret
cmp
popa
adc
frstor
inc
mov
add
inc
ja
scas
sar
aaa
adc
jl
insl
jmp
add
sbb
sbb
rolb
jbe
or
dec
cs
mov
push
aaa
jne
cmc
inc
aam
bound
flds
imul
jnp
mull
fistpl
mov
mov
xchg
lds
addb
shlb
jne
inc
jmp
sub
mov
das
shlb
mov
add
add
xchg
loop
dec
subl
mov
mov
cmp
pop
xchg
nop
shrl
adc
cwtl
pop
mov
add
daa
shrl
rcrl
imul
xor
rcr
mov
mov
mov
adc
adcl
stc
pop
rorl
test
sub
pop
push
lock
mov
inc
out
insl
test
repnz
pop
cmc
addr16
mov
xchg
or
fdivrl
xor
subl
out
and
and
fimull
push
mov
adc
imul
incl
bound
leave
and
mov
jae
lea
push
adc
fidivrl
jl
out
dec
mov
notb
lret
lret
inc
decb
push
push
jae
popf
repz
xor
gs
or
ds
inc
addl
mov
or
fbstp
shl
xchg
in
xor
or
and
es
mov
push
insl
xchg
inc
lret
cmp
add
arpl
xchg
xchg
fsub
ret
fwait
insl
das
mov
mov
mov
push
add
pop
xchg
addb
xor
bound
sbb
jne
mov
xor
pop
inc
or
in
insb
mov
ja
lods
or
xchg
and
xor
xor
adc
dec
pop
adc
ja
scas
add
xchg
fmuls
cs
out
mov
mov
arpl
test
stos
popf
xchg
arpl
ds
mov
and
push
add
sub
rorl
add
idivl
mov
inc
inc
inc
iret
pop
or
popa
mov
cwtl
push
lea
xor
mov
push
rcrb
adcl
jg
jle
shlb
int3
imul
outsb
cmpsl
mov
jecxz
std
filds
out
jg
daa
ljmp
xchg
inc
mov
pushl
push
jno
popf
mov
jne
pop
xchg
sbb
mov
jb
sbb
xchg
imul
lods
ja
add
pop
sti
or
add
mov
daa
sub
push
xchg
or
js
test
imul
xor
jae
mov
rorb
arpl
dec
iret
pop
or
sub
pop
pushf
mov
call
faddl
xor
xchg
mov
add
cld
enter
ja
jo
mov
mov
mov
push
pusha
xchg
enter
cmp
test
adc
push
adc
stc
jno
cmpsb
in
repz
xchg
negb
ljmp
jmpw
clc
js
mov
sbb
fiaddl
dec
adc
out
rcrl
mov
cmp
sbb
shr
pop
scas
xlat
push
xor
adc
stc
ret
mov
jne
lods
inc
adc
hlt
push
push
xlat
insl
mov
sbb
addl
aad
aad
jmp
mov
sub
sbb
push
mov
loope
pop
repnz
frstor
jl
cld
jge
mov
jae
dec
icebp
loop
xor
mov
clc
or
lret
push
movsl
sahf
xor
push
repnz
nop
cs
pop
popf
push
pop
and
in
push
ret
sahf
mov
jge
push
cmp
lock
xchg
mov
sbb
lds
and
cli
lods
in
jbe
push
cmp
xbegin
jp
mov
js
mov
jge
pop
sub
xchg
fstl
daa
xor
int3
shrl
inc
add
ds
mov
iret
push
push
lods
shrl
pop
inc
outsb
ret
fldt
or
jne
mov
push
fdivrl
movsl
jbe
xor
aad
jmp
idivb
mov
mov
xchg
mov
jb
je
popl
cwtl
dec
ret
mov
dec
lea
dec
in
or
xchg
push
popa
stos
bnd
pop
push
sbb
pusha
cmp
cmc
cmpsb
add
popa
push
or
dec
es
push
scas
inc
xchg
imull
jne
mov
inc
lret
push
sbb
add
adc
sti
jno
mov
mov
jnp
lahf
pop
inc
ret
xor
mov
mov
out
or
es
test
or
icebp
insl
inc
xchg
dec
shlb
cmpsb
out
xor
pop
pop
pusha
lret
fdivrl
scas
clc
daa
cmc
movsb
dec
movsl
test
loopne
aas
mov
sbb
xor
test
xor
mov
jmp
loope
int3
sbb
dec
pop
sbb
or
out
int
jmp
hlt
fistpl
hlt
mov
pop
ficoms
push
sahf
popa
rcr
lret
fwait
cmpsl
jno
xor
jb
xlat
inc
stc
scas
jle
sbb
mov
mov
out
test
xor
sub
inc
mov
fildll
out
push
imul
scas
lock
sbb
jmp
sbb
dec
pop
stos
testb
test
pop
add
fmuls
push
jae
in
nop
rcrb
cmp
repnz
mov
test
movsl
push
or
icebp
orl
push
lcall
lcall
loope
ja
es
fs
cmpsb
jecxz
test
mov
jb
mov
inc
or
sub
sub
ljmp
xor
pop
call
sbb
syscall
inc
mov
push
js
in
dec
addr16
mov
or
jecxz
cli
mov
xchg
pusha
lcall
cmp
push
fistpll
mov
out
lock
iret
jbe
cmp
and
push
mov
jne
cmc
jg
icebp
sbb
jge
push
dec
adc
inc
in
stc
repnz
push
sbb
adc
mov
sahf
dec
sub
or
xor
ret
lds
sahf
sub
sbb
xlat
cltd
scas
js
sub
add
pop
inc
mov
in
into
sbb
xor
addb
jmp
xchg
push
xchg
lret
mov
in
or
lret
out
mov
aaa
inc
popf
xor
jne
jmp
mov
and
or
push
out
adc
lods
in
test
xchg
out
clc
fisubl
rdpmc
pop
or
cmpsb
mov
ss
dec
sbb
out
mov
pop
cmp
inc
and
enter
outsb
xchg
pop
sub
fisttpl
dec
inc
int
pop
jmp
sbb
xor
shl
jns
test
cs
std
int
push
mov
adc
sub
mov
dec
push
aas
or
mov
pop
dec
addb
and
outsb
pusha
test
xchg
or
or
cltd
arpl
pop
push
out
dec
mov
push
cwtl
loopne
xchg
mov
sbb
jle
jmp
rcr
orl
jo
test
add
xor
or
les
mov
or
test
cmp
insl
xchg
outsl
repnz
je
pop
inc
imulb
enter
sbb
or
outsl
ds
add
mov
loop
pop
arpl
lret
ss
cmp
lds
dec
imul
scas
mov
lods
cmp
lods
jno
ss
push
mov
lahf
or
outsb
push
pop
mov
jecxz
sub
rcrl
push
mov
addr16
or
incl
xchg
xor
fidivrs
stc
mov
ds
popf
adc
xchg
cmpsb
push
lahf
and
fdivs
xchg
or
in
dec
popf
pop
mov
jns
xor
sub
inc
jbe
add
sub
xlat
dec
imul
cltd
aas
orb
hlt
insb
jecxz
into
dec
lret
dec
mov
pop
jno
xchg
jmp
mov
pop
aas
or
movsb
scas
mov
mov
jle
xchg
daa
sbb
pusha
les
adc
fsubrp
mov
test
jl
fsubrl
mov
mov
js
lret
aas
adc
out
push
sub
lahf
ds
dec
out
fldcw
stos
sub
clc
aam
pop
xchg
aas
test
mov
jmp
out
jl
xchg
mov
scas
rclb
dec
cmpsl
push
in
in
jae
fs
hlt
aaa
adc
xor
ds
jge
jae
jmp
cmp
lcall
sub
dec
inc
imul
ficoms
sub
xor
cmpsl
daa
popl
popa
jbe
pop
gs
sbb
std
flds
mov
xchg
push
jle
fwait
push
add
stos
andl
inc
jl
dec
leave
popf
fstpl
lcall
out
jecxz
test
sub
and
fldenv
jmp
stos
pushl
fprem1
mov
ret
adcl
out
adc
pushf
outsb
gs
jae
bound
inc
scas
call
push
mov
push
inc
inc
sbb
pop
dec
pop
jae
sub
rcrb
mov
bound
push
sti
adcb
push
repnz
mov
adc
leave
sub
inc
pop
mov
push
push
clc
and
mov
scas
enter
jno
mov
lcall
fstl
mov
clc
cwtl
cmpb
popa
jp
nop
pop
rclb
arpl
lea
cwtl
push
adc
mov
nop
add
xlat
dec
mov
and
xor
outsl
fisubs
frstor
pop
mov
dec
pop
sbb
mov
xorl
sub
scas
lds
jle
mov
dec
das
sbb
add
test
sarb
lods
stos
xchg
and
lcallw
ja
jae
out
pop
jbe
call
data16
adc
sahf
xchg
push
dec
jp
pusha
pop
sbb
lods
mov
lahf
arpl
inc
jnp
test
sarl
sub
mov
clc
pusha
and
cwtl
xchg
xchg
mov
jne
in
push
mov
adc
inc
cmp
mov
cli
sahf
mov
cmp
mov
jge
pop
dec
lods
push
insb
add
add
fstps
jle
sbb
scas
sbbl
stos
fists
xchg
jg
sub
mov
and
cmpsl
dec
imul
ret
add
inc
aas
sti
jge
pop
mov
mov
ljmp
rorl
mov
add
insb
mov
jg
adc
mov
lock
negl
dec
std
mov
inc
inc
jmp
dec
inc
mov
ss
movsb
daa
ja
loopne
mov
or
iret
cmpsb
or
iret
adc
inc
sbb
into
xor
aas
push
jno
call
int3
roll
fcomps
cmp
repnz
out
outsb
mov
fsubrl
imul
hlt
int
dec
push
movsl
lods
mov
cmpsl
and
repnz
mov
sub
iret
push
lahf
lock
cld
les
mov
jge
sbb
sub
shlb
pop
loope
fwait
rcrl
les
xorl
mov
jmp
mov
push
rorb
jl
dec
and
subb
stc
int3
movl
rol
xchg
mov
sub
sub
ja
xchg
pop
lahf
inc
pop
lods
and
dec
xlat
pop
fsubrs
lret
call
ljmp
ljmp
sahf
bound
fimull
movsl
xor
add
pushf
jbe
nop
jg
nop
pop
dec
xchg
cld
inc
pop
roll
movsl
addb
pop
arpl
or
aaa
cs
stos
faddp
cld
cmc
js
movsl
insb
mov
cmp
insl
mov
shl
cmp
sub
sahf
fcoms
lock
scas
sarb
test
sbb
lea
jp
inc
sub
jge
aaa
mov
adc
xor
dec
mov
andb
arpl
push
outsl
xor
cmp
fwait
mov
mov
and
cmc
mov
shlb
dec
mov
call
mov
adc
andl
fs
add
push
and
fnstcw
jnp
mov
lds
add
ror
adc
inc
cmp
nop
push
jp
jg
and
daa
popl
mov
les
dec
out
add
and
in
add
or
fnsave
dec
test
insb
fidivrs
aas
xchg
pop
cmpsb
scas
jmp
loop
shrl
xor
enter
sahf
sbb
inc
sub
mov
std
rcll
add
add
mov
lds
inc
cmpb
test
inc
dec
sbb
scas
shrl
lock
mov
mov
bnd
pop
inc
rorb
cmp
sbb
movsl
ja
push
jae
and
fldt
lock
insb
mov
dec
mov
stos
int
dec
dec
cltd
or
pop
jmp
mov
div
sti
xlat
or
mov
fbld
int
ss
xchg
jbe
aaa
jecxz
dec
dec
mov
inc
jno
arpl
jmp
pop
or
mov
cmp
xchg
stc
push
adc
leave
cltd
adc
cld
sbbb
das
cmp
or
pop
out
repnz
dec
or
sub
outsb
ja
int
pop
ffree
insb
dec
data16
mov
jp
das
out
sbb
iret
add
cs
adc
dec
clc
fnstsw
inc
mov
inc
lcall
fistps
mov
cmp
mov
jns
stos
adc
pop
ret
out
jmp
cmp
hlt
jg
jbe
mov
cli
arpl
pop
cmc
mov
pop
aas
inc
cld
xchg
push
sbb
frstpm(287
mov
int3
hlt
adc
loop
add
repz
pop
jmp
adc
popf
pop
loope
fidivl
stos
cltd
sbb
mov
dec
cmp
aad
mov
fisttpl
mov
aaa
mov
mov
out
out
add
rorb
ret
mov
in
cmp
fnstcw
lret
enter
sub
push
mov
dec
dec
cwtl
lret
out
mov
aam
jne
jns
xchg
idivl
subb
ret
test
shll
and
dec
ret
lods
aam
ficoms
xlat
lret
icebp
push
add
push
fwait
push
mov
mov
cmpb
and
adc
jo
mull
pop
sahf
adc
scas
arpl
shll
sbb
adc
fisubl
xchg
loope
or
mov
aad
test
jl
jns
dec
pop
jg
adc
out
out
xchg
dec
mov
xchg
inc
mov
xchg
int3
in
mov
adc
int
xchg
pop
mov
ljmp
rsqrtps
dec
xlat
pusha
aaa
loope
ret
mov
push
sahf
and
sarb
mull
push
push
daa
sbb
mov
xor
cmpsl
popa
and
mov
test
and
mov
hlt
push
sub
cmp
xchg
jecxz
add
sub
mov
jl
sub
test
mov
sub
push
jno
xchg
or
ret
scas
insb
loopne
jmp
pop
mov
loopne
inc
cmp
fsin
pop
mov
and
pop
out
loope
push
stc
inc
imul
xchg
nop
fbstp
and
add
inc
pop
add
out
bound
inc
jnp
repnz
idivb
mov
and
popl
or
and
lahf
xor
lret
ss
gs
sub
jg
leave
jp
pop
into
scas
dec
mov
xor
daa
or
orb
jns
into
movzbl
sub
imul
xchg
cld
gs
mov
icebp
xchg
mov
sbb
mov
nop
xchg
popa
fiaddl
push
add
mov
inc
cmp
aas
repnz
cmp
jns
mov
pop
sub
mov
shrl
inc
adc
pushf
fisttps
and
mov
and
mov
popl
clc
sahf
leave
jmp
pop
inc
rolb
jae
sub
cld
imull
sarb
js
cmp
ret
mov
repnz
into
sub
in
mov
or
cltd
push
sbb
cs
enter
jl
dec
insb
mov
fstps
pop
xchg
xchg
push
mov
loope
xchg
int3
jge
dec
and
sti
popf
bound
fistpll
lcall
enter
mov
sbb
add
mov
jmp
pop
inc
mov
mov
ds
xchg
cmp
sub
jmp
int3
sbb
fs
pop
test
lret
xchg
and
mov
jns
dec
frstor
mov
fisttpl
ja
and
xchg
mov
dec
jmp
add
cltd
repz
mov
add
dec
rol
and
sar
sub
cld
test
jne
test
dec
or
mov
repnz
sub
add
js
imul
cld
cmp
aad
push
out
movsl
inc
jp
shrb
sbb
sbb
ljmp
dec
add
or
stos
pop
outsl
pop
push
je
pusha
jecxz
jae
lock
fcmovu
data16
lock
stos
sub
xor
popf
std
fstp
ljmp
xchg
and
nop
movsl
stos
pop
pop
pusha
mov
xor
sarl
xor
mov
xor
test
cld
add
mov
jns
stc
out
or
xor
pop
es
sarb
cld
rorb
and
fcmovnb
jmp
fsubl
cmp
mov
pop
scas
fidivrs
and
and
pusha
or
or
push
mov
add
insl
pop
xor
sbb
mov
fisubs
mov
xchg
inc
cmp
icebp
pusha
sbb
mov
xor
push
lock
movsl
or
jno
xor
inc
cmp
mov
out
in
fprem
stos
pop
mov
out
xor
cmp
fistl
xor
inc
bound
subl
icebp
ret
or
in
mov
ret
mov
sarb
fs
mov
mov
mov
fwait
push
push
jbe
lret
movsb
inc
stc
mov
stc
imul
imul
aas
jbe
sub
jns
js
mov
ljmp
insb
das
aas
or
mov
andl
stos
out
pop
xchg
push
pop
adc
mov
pop
xchg
icebp
sub
mov
jl
dec
dec
mov
mov
push
xlat
adcl
js
std
adc
pop
add
pushf
xor
xorb
in
aaa
rcll
test
out
mov
push
add
sub
rcll
inc
ss
jp
popa
cmp
fs
popa
call
inc
and
sbb
aad
push
mov
clc
jno
cmp
dec
adc
dec
testl
push
push
pop
stc
dec
lods
jb
or
testb
jae
sbbl
dec
push
xor
xchg
loope
jo
out
xchg
mov
fdivrs
mov
sub
rcll
pop
iret
mov
nop
push
sbb
mov
mov
out
or
mov
cmp
sbb
out
xchg
ret
push
jns
dec
jbe
adc
std
pop
sbb
rcr
push
jbe
sbb
lea
mov
test
xchg
fcoml
fists
outsl
sub
push
inc
idiv
insb
int3
dec
loope
mov
std
jmp
mov
outsl
mov
lods
jle
ja
movsb
jb
je
daa
out
and
pop
jl
jg
push
cmpsl
imul
aam
xchg
insb
in
mov
jno
or
xchg
int3
and
pop
repnz
test
sbb
faddl
iret
cmp
mov
or
cmp
add
xchg
inc
shlb
add
xor
stos
mov
repz
cli
lds
cmpsb
dec
loopne
cli
jecxz
mov
jo
movsb
sub
add
sub
cmp
mov
popa
sub
outsl
mov
out
jnp
push
jae
sbb
test
scas
lock
push
inc
scas
jge
movsb
ret
cli
ja
xchg
sub
pop
adc
cmp
sbb
xor
lcall
ds
adc
js
push
lcall
adc
mov
insl
lret
mov
or
sbb
mov
fimuls
test
insb
fldenv
jno
jo
pop
jg
call
scas
andl
add
data16
push
popa
xlat
xor
add
test
push
fidivrl
or
cmc
jb
fcompl
lods
mov
in
jmp
and
sbb
mov
mov
or
ljmp
pop
mov
pop
jno
ret
mov
iret
lds
aas
adc
popf
in
xchg
shrl
stos
mov
mov
loopne
or
cld
mov
push
fistps
sub
xchg
das
cmp
test
pop
data16
fisttpl
dec
sub
push
and
pop
pop
jl
cs
fdivr
or
xlat
pop
sti
int3
and
jno
test
testb
ja
shl
lods
sahf
mov
shll
bnd
push
outsb
sub
xor
mov
mov
adc
push
iret
push
jecxz
movsl
leave
lods
jmp
mov
outsl
mov
out
ljmp
pop
inc
cmp
jno
and
sub
sti
stos
shrl
push
stc
jae
sub
push
push
xchg
dec
cs
inc
shrb
mov
pop
sahf
and
sbb
out
stc
cmp
jecxz
aaa
lock
das
xor
dec
and
int3
and
test
fucomip
fcoml
inc
lret
jo
in
xchg
inc
mov
sbb
or
pop
outsb
jo
hlt
cmp
repz
push
aam
mov
inc
and
inc
dec
jecxz
mov
push
bound
mov
inc
mov
and
call
xor
sub
int
js
or
push
xchg
stc
sahf
out
clc
sub
ss
ds
ja
aad
mov
repz
sahf
jg
jne
mov
mov
or
dec
iret
xlat
inc
pop
or
hlt
xor
push
xchg
dec
adc
pusha
pushf
out
in
ret
je
lea
pop
sti
out
jmp
sbb
out
and
neg
lock
fsubrs
mov
xchg
js
popf
jns
and
inc
xor
mov
xorl
dec
int
add
das
lcallw
ljmp
pop
out
add
jne
mov
les
or
xor
int
push
je
mov
es
dec
movsb
pushf
or
cltd
xchg
xchg
popf
bound
pop
mov
adc
das
das
stc
inc
call
lcall
sbb
pop
dec
pop
stc
xchg
xor
push
fcompl
outsl
fwait
sbb
cs
mov
xchg
dec
popf
jmp
jl
or
push
push
rclb
insl
mov
jle
cmp
sub
pusha
xchg
sbb
inc
push
mov
xchg
jne
inc
mov
jbe
jmp
jo
fcmovb
rcll
jae
icebp
mov
xchg
mov
dec
dec
dec
adcl
push
scas
adc
pop
fwait
cltd
popa
add
nop
sarl
add
iret
lds
ljmp
push
push
inc
xchg
scas
mov
xchg
rclb
scas
and
testb
cmp
mov
xchg
mov
scas
xchg
sub
xor
cmpb
or
pushf
mov
sub
cmpb
jmp
mov
cmc
ds
fiadds
cld
call
xchg
ljmp
ja
pop
mov
dec
and
out
ss
push
ret
push
xor
fcomip
lret
das
lods
fistpll
xor
adc
sub
xlat
cltd
and
leave
dec
sbb
xchg
stc
sti
movsl
cmp
mov
jbe
dec
and
xor
loopne
out
cmp
pusha
push
test
arpl
lcall
inc
clc
insl
call
das
daa
fmuls
pop
xchg
mov
sub
inc
leave
shlb
shrb
sub
dec
into
les
pop
dec
mov
or
mov
mov
sub
mov
add
sbb
outsl
out
lds
fwait
loope
ficoml
and
imul
repnz
dec
xchg
sub
jp
mov
pusha
cs
cmp
or
outsl
cmpsb
mov
sar
test
mov
inc
or
mov
leave
mov
lods
mov
shll
cmpsl
jnp
jae
inc
inc
movsb
mov
fwait
incl
push
imul
dec
cld
ret
push
jp
mov
pop
xchg
cli
roll
cmp
inc
and
mov
mov
jg
jo,pt
clc
jmp
mov
das
adc
dec
cltd
mov
mov
out
xchg
iret
shl
gs
dec
mov
rcr
loope
cmpsb
mov
fcoms
scas
imul
shr
repz
ficoml
cltd
xor
xor
sbb
je
outsl
inc
out
sbb
cwtl
cmp
fucom
push
fidivrl
outsl
fidivrl
jb
les
adc
inc
scas
aad
repnz
push
push
addl
or
xchg
mov
fidivs
test
lret
sbb
sti
addr16
adc
repnz
sarl
loopne
insb
push
jg
mov
aad
lock
dec
cmpsb
jbe
or
xchg
inc
nop
and
pop
xchg
int3
cmp
jge
dec
add
fwait
test
lahf
mov
add
notl
imul
and
sar
xchg
mov
fistps
subb
jge
ret
jge
cmc
fdivrs
fsubl
inc
paddusb
imul
lds
xchg
or
fcmovnb
adc
dec
pop
xchg
out
lds
cs
push
mov
jne
inc
mov
mov
inc
pusha
and
mov
dec
mov
and
push
ss
aad
adc
lods
loopne
mov
fcmovbe
hlt
or
sbb
sbb
push
mov
xor
jns
mov
addr16
mov
mov
jb
hlt
and
lea
aas
adc
and
lods
inc
fs
mov
or
es
sub
sbb
stos
inc
inc
int
stc
xchg
pop
xor
les
sub
cli
and
fxch
movsb
fbld
lods
movl
jne
mov
hlt
xchg
loop
test
clc
mov
adc
out
mov
pop
leave
jns
loopne
pop
insb
test
mov
lret
lea
lods
mov
adc
pop
je
cltd
and
imul
xchg
add
sub
jno
pusha
add
aad
inc
mov
jmp
xchg
fsub
lods
push
int3
shll
nop
cmp
icebp
lock
dec
sbb
pusha
daa
enter
insb
hlt
adc
out
xchg
loop
enter
loopne
mov
push
daa
hlt
loopne
filds
push
fs
pop
pusha
jne
push
mov
call
sar
push
ret
cli
add
std
mov
xchg
add
jbe
mov
int
push
cmpsl
mov
xchg
cs
push
into
jae
adc
sti
sbb
add
in
lock
mov
out
lds
int3
xlat
push
lahf
nop
cwtl
xchg
push
jno
sahf
sbb
shrb
fdivs
daa
jns
sbb
cmc
xchg
mov
cmp
loopne
leave
sti
fdivs
xor
outsb
inc
pop
or
mov
push
ud1
or
fcoml
dec
shll
mov
out
ljmp
inc
xor
push
pop
outsb
adc
push
or
insl
xchg
arpl
in
imul
push
push
mov
ds
cmp
mov
cmp
fst
fstl
add
jle
cmp
add
imul
push
shr
sub
mul
jle
push
loop
push
std
add
leave
shr
inc
sbb
cmp
inc
lock
fdivrl
sbb
leave
push
in
mov
pop
mov
shlb
out
loope
jg
cmp
orl
dec
fcomps
push
cmc
push
shlb
movsb
rclb
stos
jge
ret
popf
add
cmpsb
push
sahf
xor
out
sbb
pushf
pop
pop
xchg
xchg
test
jmp
movsb
xor
mov
pop
adc
dec
addr16
test
adc
jo
shl
pop
add
pop
mov
aas
int3
add
cmpsb
negl
mov
out
arpl
subl
push
out
xchg
push
add
and
mov
and
mov
lret
sti
sub
add
sarb
xor
lret
movsl
roll
arpl
cmpb
ja
cmpsb
dec
popl
and
arpl
or
xchg
adc
and
cmc
sbb
loopne
fs
add
clc
dec
xchg
xchg
sub
lods
mull
adc
daa
inc
jmp
stos
mov
and
or
in
xchg
dec
jae
cmp
mov
lahf
push
and
nop
xchg
mov
and
lods
mov
and
fwait
mov
adc
sub
shlb
xor
int3
insl
bound
cmpsl
fsts
dec
call
inc
sbb
inc
shl
mov
add
xor
cmp
mov
xchg
loop
mov
in
out
xchg
xchg
lcall
mov
ret
imul
xchg
mov
ficoms
ss
js
push
ss
sub
popa
mov
ret
mov
sbb
xor
cld
fnstsw
push
hlt
xchg
inc
and
mov
iret
sub
adc
daa
lods
imul
jl
xchg
imul
pop
stos
add
fucomip
inc
push
jmp
lods
cmpsl
test
sub
lcall
in
stos
out
lock
jge
push
mov
add
gs
es
aad
push
in
adc
sub
inc
sbb
xlat
sti
jae
sbb
lcall
adc
insb
imul
stos
fidivrl
jbe
scas
lds
push
jae,pn
ja
cmp
adc
filds
add
fists
dec
test
dec
push
inc
loope
pop
add
inc
push
lret
mov
jmp
std
inc
sub
iret
rorl
loop
or
insl
cmp
je
sub
and
xor
insb
mov
jb
sub
in
add
icebp
daa
enter
lods
test
ret
sbb
inc
stc
xor
fldenv
jmp
stc
push
int3
addr16
add
iret
fiaddl
cmp
add
ja
or
stos
push
ljmp
ljmp
lcall
jne
ss
cld
bound
insb
jae
pop
jo
fimuls
fildll
mov
popa
xchg
jmp
mov
push
pop
repnz
lahf
cwtl
add
xchg
xlat
adcl
ret
es
shrl
outsb
mov
loop
mov
or
lcall
mov
jecxz
pop
jecxz
out
and
aas
inc
jnp
loopne
popf
xor
addl
getsec
push
pop
in
shl
sub
sub
daa
test
pusha
aaa
pcmpgtb
jmp
fisttps
popf
cs
lret
sbb
fstp
addb
add
xchg
cwtl
sbb
sub
sub
push
push
dec
ret
sbb
jo
inc
and
dec
inc
dec
fistl
lock
lods
inc
out
rcl
and
adc
dec
xor
jne
mov
dec
inc
push
in
and
adc
cmp
push
sahf
int
pop
mov
cs
popa
jl
mov
mov
xlat
cmpsl
mov
fs
inc
cmpb
jno
mov
pop
clc
loope
mov
jle
repz
test
adc
or
ret
call
push
movsb
je
adc
and
or
ss
jmp
cmp
xchg
cwtl
cmp
inc
ljmp
xlat
fs
or
cmpsl
ss
sbb
int3
and
xor
pop
mov
in
out
sub
pop
mov
xchg
cmp
lea
addr16
xor
mov
inc
pop
aas
imull
or
sbb
cmpsb
or
testl
dec
in
push
mov
or
mov
push
push
ja
cwtl
fnstenv
dec
push
fisubrl
ljmp
push
out
test
xchg
xchg
inc
test
xchg
mov
or
and
aas
xchg
sbb
out
jno
cltd
push
xlat
mov
popf
cmp
aad
jecxz
lea
int3
inc
cmp
push
das
icebp
data16
cli
cmp
inc
ffree
jl
scas
add
jmp
lds
sbb
sbb
jne
adc
jne
cmp
mov
cmp
sti
push
mov
jmp
adcb
sub
sub
jl
cmp
and
xchg
cli
sub
pop
loopne
pavgw
daa
popf
ja
lock
leave
add
lock
dec
cmc
inc
fisubl
paddusw
int
fs
push
xor
scas
inc
into
mov
pop
mov
nop
pop
pop
xchg
mov
je
inc
jge
popa
mov
jb
jb
cmp
or
das
mov
mov
sarb
pop
cmp
or
cs
iret
mov
push
ss
adc
daa
je
stos
inc
out
fmuls
push
or
and
mov
iret
andl
adc
add
mov
fnstsw
out
push
outsb
cmp
inc
insl
xor
rcrb
mov
roll
xor
mov
jne
sub
xor
cmp
imul
push
lret
sub
les
movsb
rcrb
loopne
loope
ja
mov
cld
les
dec
sbb
dec
aaa
stos
xchg
pop
adc
loop
sub
adc
sub
rol
mov
push
outsb
and
or
mov
mov
pop
mov
add
dec
divb
push
xchg
and
xor
cmpsl
cwtl
mov
cmc
mov
push
mov
rcll
add
jp
sbb
xor
enter
push
sub
add
and
xor
dec
sub
sbb
xor
sub
out
addl
lea
scas
push
inc
and
mov
mov
lret
cmp
out
repz
jo
ljmp
mov
fucom
mov
int
xor
push
xor
and
xor
lahf
mov
mov
adc
movsb
ja
iret
adc
out
int
sub
push
xchg
xchg
cmp
or
pushf
and
adc
movsw
pop
leave
adc
mov
mov
adc
sub
pushf
cmpb
cli
ja
pop
xchg
pop
out
ret
push
imul
or
push
dec
stos
push
or
test
jnp
enter
push
push
lock
shl
lahf
iret
jo
cs
aas
notl
out
or
sbb
jge
mov
cli
add
fiadds
or
leave
jmp
cmpsl
push
sbb
adc
mov
mov
test
aaa
int
push
jge
cmc
shrl
pushf
mov
enter
and
or
insb
push
leave
sub
xchg
push
jl
sahf
das
pusha
adcb
loopne
xor
jae
sbb
fs
icebp
popl
lahf
mov
pop
cmp
jb
vpaddw
and
lret
jbe
out
mov
in
sbb
idivl
insb
mov
fmulp
jp
dec
je
sti
cmp
xor
iret
push
sub
and
andl
movsb
ficoml
mov
movb
pusha
jg
aad
jg
jo
icebp
xchg
ret
push
mov
xchg
xchg
in
inc
sub
jae
dec
jg
adc
push
xor
pop
test
mov
mov
jl
inc
xor
into
loop
inc
aad
ljmp
data16
enter
mov
and
mov
lea
xchg
xchg
adc
pop
aas
sub
inc
lock
jb
pusha
xor
leave
shll
icebp
cmpsb
stos
mov
repnz
loop
das
pop
test
aad
sbbb
or
mov
jae
sbb
faddp
mov
sahf
fildl
insl
push
fdiv
pop
pop
mov
xchg
mov
pop
rol
cltd
jnp
ret
pop
push
jne
sarl
scas
adc
sbb
cltd
out
pusha
aaa
in
push
mov
iret
mov
repnz
dec
ss
mov
or
fisubl
mov
dec
mov
ja
lcall
cmpsl
imul
mov
mov
mov
xchg
loopne
or
popa
xor
fs
rolb
mov
insl
pop
jp
xor
mov
ljmp
cmc
pushf
xchg
jne
repz
and
sbb
aaa
les
cwtl
mov
rcl
clc
jb
ljmp
adc
push
or
lods
pop
cmp
mov
pop
dec
mov
mov
repz
mov
and
adc
inc
add
inc
xor
in
rolb
xor
addb
and
insb
ja
std
pop
data16
aad
and
into
mov
fisubs
push
imul
aad
filds
lcall
cs
xor
push
adc
out
xchg
std
push
xchg
dec
inc
and
dec
mov
add
cld
aad
insl
add
pop
push
mov
pop
jb
sub
push
enter
mov
push
test
jmp
mov
lcall
inc
repz
in
or
pop
test
imul
xchg
repnz
pop
add
daa
cmpsl
nop
cmp
sub
push
loope
mov
scas
xor
pop
pop
or
add
in
stos
sbb
mov
sar
xchg
add
test
loop
ret
testb
aam
sub
push
add
dec
in
jle
repz
icebp
mov
leave
pop
and
jo
enter
xchg
xor
adc
cmc
and
lcall
sarb
aas
cltd
mov
xchg
out
hlt
xor
sbb
shl
cltd
je
sub
mov
push
popa
in
pop
and
and
add
xchg
mov
mov
inc
adc
sbb
add
ret
shrb
fsts
xchg
lea
mov
jb
insl
fildl
xchg
in
sub
cmp
dec
rolb
or
js
test
nop
dec
inc
jae
not
inc
loope
in
inc
mov
mov
adc
cmp
xor
negl
dec
xor
cmpl
jnp
stos
cmpsb
icebp
xchg
enter
iret
pop
test
mov
popf
ss
mov
sub
ror
loope
sub
sbb
imul
cmp
xchg
lock
hlt
stc
test
xor
mov
pop
icebp
cmpsb
push
cmp
rol
or
fistpl
cmp
push
icebp
fcompl
mov
mov
call
and
dec
pop
out
movsl
outsl
dec
lds
push
cmpsl
ret
xchg
into
push
xchg
mov
jae
out
ds
jmp
pushf
aad
rcr
out
mov
cmpl
les
ja
fnstsw
dec
clc
jecxz
and
pop
push
sub
xchg
loope
mov
pop
mov
xlat
lret
mov
fists
jecxz
mov
fistps
xchg
jbe
daa
shlb
or
dec
add
cs
das
sub
into
dec
jge
fadds
mov
pusha
and
popa
lret
or
std
push
outsl
jle
popf
push
add
pop
or
xorb
pushf
gs
mov
gs
cld
jecxz
or
fnstcw
loope
and
ljmp
mov
nop
xchg
lea
popa
and
jmp
push
pop
lods
fbld
scas
fstps
cmp
push
inc
cmp
xor
popa
jne
mov
jg
cmp
pop
or
add
outsb
mov
lahf
orl
mov
push
cmp
cmpsl
movsl
dec
dec
xchg
sub
ret
add
cs
inc
sahf
push
jb
hlt
out
cmp
dec
loopne
add
xlat
add
rclb
rcll
std
add
aas
inc
and
jbe
and
sbb
pop
mov
leave
cs
inc
repz
pop
inc
lcall
movsl
fimuls
xlat
testl
inc
dec
dec
shl
ljmp
mov
fildll
jmp
or
jle
rorb
imul
mov
adc
jbe
mulb
ljmp
fs
mov
mov
adc
sub
sbb
xchg
mov
xchg
mov
jg
lods
push
cmpsl
insb
mov
iret
mov
push
push
mov
xchg
xchg
popf
pop
and
jle
rorl
orl
jl
adc
repnz
sbb
and
fs
arpl
rcrl
movsb
add
pop
gs
xor
jnp
push
push
cmp
in
mov
sti
ficoml
inc
outsb
mov
jg
out
mov
aas
push
inc
int
jge
mov
jmp
push
adc
mov
xlat
and
test
loope
sbb
inc
jnp
mov
stc
scas
gs
mov
fsubl
xorl
mov
dec
out
ret
cmpsb
ljmp
and
stos
xchg
cwtl
adc
in
push
out
pop
add
mov
or
dec
sbb
mov
sti
leave
sbb
pop
add
add
sarl
loope
in
in
mov
xchg
push
icebp
shrb
insl
js
xlat
push
imul
mov
jge
decl
mov
test
inc
pop
imul
fprem1
jmp
jnp
fwait
mov
xor
xor
xor
fisttps
enter
push
subl
mov
ljmp
bound
jmp
xchg
add
mov
adc
dec
gs
cmpsb
adcb
or
clc
es
xor
les
mov
dec
aaa
jmp
xchg
push
arpl
dec
fcoml
ss
jb
push
movsb
out
das
cmp
add
mov
shl
in
lcall
pop
loop
addb
mov
subl
pop
sub
or
sub
xchg
movsb
mov
xchg
lcall
repz
fs
div
and
shlb
cmpsb
mov
xor
stc
lea
das
dec
mov
mov
jnp
xchg
xchg
fiaddl
out
pop
in
rcl
push
xchg
cmp
data16
xor
sbb
gs
hlt
mov
sbb
mov
ja
ljmp
fs
inc
ret
dec
push
dec
loope
outsl
inc
loop
movsl
xorb
and
mov
in
icebp
jle
mov
inc
test
aaa
shrl
cmp
jge
sbb
sbb
xchg
and
inc
out
out
ret
enter
fisubrs
and
pushl
movsl
stos
stos
xor
adc
repz
fnsave
push
and
loopne
scas
sahf
mov
shl
fldl
stos
out
jo
push
dec
shll
mov
sbb
lcall
and
add
movzwl
mov
jnp
daa
stos
repz
sbb
xchg
nop
inc
in
ljmp
or
sub
fwait
ret
js
test
dec
sarb
add
ds
dec
in
ret
push
rcrb
enter
insb
insb
inc
les
std
scas
test
mov
jne
xor
sub
sub
aad
adc
out
in
xchg
pop
cmp
jge
lahf
push
daa
pop
mov
lret
cmpsl
cmp
ja
add
shrl
jae
mov
push
neg
out
and
icebp
pop
sbb
sub
pusha
js
inc
inc
add
call
mov
inc
aas
test
jbe
cs
and
adc
test
mov
fisttpll
mov
popf
push
sar
lahf
cli
xchg
or
inc
pop
orl
sub
or
mov
add
or
mov
ljmp
insb
xchg
mov
jg
xor
shl
add
nop
daa
scas
dec
add
push
jbe
pop
dec
out
mov
mov
mov
cmpb
cld
lods
roll
loopnew
jle
pop
fildll
inc
sbb
mov
xchg
scas
jle
jo
lcall
arpl
sbb
jae
rcll
gs
sar
andl
xchg
fiadds
ret
jns
out
inc
int
icebp
fldpi
inc
lock
xchg
rorb
je
and
pop
add
arpl
xchg
in
aam
jbe
push
jo
into
shlb
loopne
clc
js
adc
arpl
or
lret
dec
pop
xchg
xchg
test
mov
addb
xor
fisttpll
repz
das
cwtl
push
in
insb
sub
xorl
xchg
pop
jb
mov
notl
jl
ficompl
lsl
shll
add
repnz
loopne
addr16
pusha
into
jle
pusha
adc
or
idivl
cmp
mov
out
dec
lret
ss
outsl
mov
fnstenv
popa
jns
imul
insl
addr16
mov
das
subb
ja
in
dec
pop
sbb
pop
push
cmpl
pop
add
mov
push
and
pushf
jecxz
outsl
push
jno
xchg
cmpb
mov
ss
outsl
push
int3
pushf
xor
inc
fdivr
jbe
adc
mov
mov
cmc
adcl
sbbb
cld
and
dec
test
insb
adc
adc
idiv
aaa
or
xchg
jnp
cmp
lods
ljmp
cld
shrb
rcr
orl
and
mov
loopne
and
sub
loopne
xor
push
or
cmp
cltd
add
mov
mov
add
insb
inc
fdivr
pop
in
testb
out
int
addr16
jg
popf
stos
jne
push
xor
mov
mov
push
sub
hlt
or
or
push
cmovp
mov
dec
loopne
push
in
arpl
orb
and
xlat
sub
fs
mov
popa
or
in
je
push
sub
aam
or
cmp
sub
outsl
xchg
lock
fs
iret
push
xchg
push
cmp
push
pop
gs
and
cmp
and
int
mov
es
call
lcall
aam
movsl
xor
push
inc
jnp
sbb
mov
xor
dec
iret
cmp
imul
or
lcall
ret
pop
les
dec
rclw
pop
cmp
cwtl
cwtl
cmp
pop
inc
adc
xor
jae
add
mov
repz
int
inc
or
xor
dec
xchg
icebp
mov
cld
cmp
lods
je
cmp
lret
cmc
cmpsb
add
pop
jmp
mov
push
inc
sbb
xor
adc
out
add
std
or
adc
or
xor
mov
jl
int3
loop
and
add
jns
mov
push
mov
cmp
pop
mov
add
mov
sti
shll
into
pop
scas
shll
icebp
jl
pop
lcall
sbb
push
je
xor
jp
mov
out
mov
loopne
adc
dec
fidivrs
es
shlb
adc
in
sub
mov
rol
xchg
jge
push
mov
cwtl
enter
pop
mov
and
add
mov
cmp
or
mov
loope
lret
div
pop
popf
cld
mov
adc
stc
lcall
sti
cmp
push
fcmovnu
lds
cmp
mov
rdmsr
ret
filds
pop
insl
dec
jg
or
and
mov
pop
sbbl
aam
mov
lahf
cld
in
aam
divl
push
xchg
xchg
xchg
inc
mov
xor
sbb
ss
cli
mov
inc
mov
mov
sbb
cmp
push
jle
add
add
testb
shll
xchg
subl
scas
aaa
lcall
hlt
push
je
cli
sbb
or
shlb
divl
inc
pop
sbb
xorb
jns
inc
sahf
jecxz
inc
add
inc
push
insl
jae
pop
cmpsl
pop
pop
mov
push
dec
sub
pop
mov
jno
adc
push
jnp
xchg
push
add
pop
int3
sbbb
jnp
mov
test
fnstsw
repz
push
or
outsb
mov
push
adc
cmp
adcb
ss
into
push
in
popf
je
pop
jnp
lea
out
push
mov
leave
xchg
cli
mov
or
sub
sub
rcrb
roll
and
arpl
adc
into
out
popa
xchg
dec
xor
inc
movsl
sbb
mov
clc
or
fistl
cmp
loope
cmpl
and
sbb
subl
sahf
jecxz
sub
daa
jge
inc
cmp
sub
ljmp
lret
stos
mov
push
pop
addb
iret
repnz
call
je
add
jb
aad
scas
mov
out
jb
or
sub
mov
push
mov
or
sub
leave
dec
js
lret
dec
dec
mov
push
fs
xor
iret
popf
imul
push
stos
ret
xor
lock
call
cmpb
mov
pop
insl
lock
ljmp
push
xor
pop
fnstcw
mov
or
push
scas
jle
repnz
testl
inc
lods
insl
xchg
mov
adc
das
daa
inc
xor
mov
rcr
pop
testl
jp
cmp
xlat
sub
sbb
shl
mov
cld
ret
in
push
addb
imul
leave
pop
outsb
fsubl
repz
in
sbb
jo
inc
fwait
loop
popa
xor
lret
rol
inc
outsb
jae
clc
hlt
xlat
pop
sub
stos
int
les
mov
add
pop
pop
sbb
cltd
addr16
shll
sbb
iret
inc
adc
or
push
lock
scas
mov
daa
movsl
push
out
ljmp
push
dec
rcrb
push
and
dec
xor
loopne
pop
cmc
lods
in
orl
stos
test
sbb
in
mov
sub
testl
js
add
xlat
scas
loop
push
mov
call
ds
sahf
inc
in
sbb
sub
loopne
push
adc
mov
sbb
sub
js,pt
add
pop
inc
xchg
dec
mov
scas
xchg
jno
daa
adc
and
pop
and
add
call
mov
sbb
jp
jns
mov
xchg
dec
jae
mov
andl
or
sbb
sub
push
mov
lock
or
ficoml
mov
mov
push
popf
jge
jns
xchg
cmc
aas
inc
pushf
pop
popa
add
fildll
xchg
addr16
push
ljmp
rcr
mov
inc
out
int3
mov
inc
inc
outsl
jo
adc
add
mov
mov
and
aas
cmp
xchg
sbb
insl
push
dec
lods
push
jbe
mov
or
mov
clc
ja
movsb
xor
jbe
ja
sbb
mov
jl
inc
in
fwait
inc
xor
adc
jge
mov
adc
inc
sub
jmp
sub
jne
movsb
xlat
adc
scas
in
pop
cmp
xor
test
lock
sarl
push
and
mov
js
sahf
sysenter
add
mov
fldcw
sub
scas
dec
cmp
or
jp
and
imul
jns
shlb
or
pop
jb
popf
inc
adc
xchg
pop
mov
cmpsl
inc
jb
test
loope
rorl
js
inc
or
pop
sub
dec
int3
xchg
dec
cmp
stos
mov
xchg
bound
test
int
jno
lods
aam
dec
ret
movsl
push
xchg
daa
insb
rorb
fisttpl
jle
in
scas
mov
adc
ljmp
fcmove
or
jmp
mov
sahf
xlat
push
icebp
lret
lret
or
sbb
sub
insl
adc
adc
out
inc
or
jmp
in
les
addr16
cmpsl
sub
xchg
lea
test
cwtl
pop
lods
aad
popa
pusha
mov
mov
scas
pop
fwait
inc
fadd
shll
out
arpl
aas
int3
sbb
mov
test
fwait
jne
int3
adc
and
xchg
xchg
adc
je
lods
inc
inc
call
fwait
roll
mov
jbe
dec
pop
cmpsb
shlb
inc
add
sbbb
xchg
pop
sub
sbb
into
xchg
repnz
sar
xchg
idivb
pop
pop
test
leave
xchg
lds
pop
push
call
ds
loope
pusha
test
pop
out
fistpll
std
int3
sub
fdivs
in
mov
in
jge
cmpl
daa
pop
cmpsb
add
imul
inc
dec
and
cmpsb
out
sub
push
dec
das
mov
lret
and
inc
add
and
mov
pop
jmp
adc
outsl
das
test
dec
incl
je
cwtl
decb
jns
jmp
mov
data16
outsl
mov
mov
inc
dec
mov
push
aad
push
pop
sbb
push
push
sub
adc
cwtl
mov
ret
imul
xor
push
cwtl
lret
popa
dec
fidivrs
lret
insl
jns
test
test
push
repz
scas
into
xchg
push
dec
pop
hlt
push
stos
out
fnsave
push
into
imul
adc
fs
mov
enter
js
sbb
mov
ja
cmpsb
lods
jae
xor
or
ds
bound
roll
fstpt
loop
out
lds
sub
xlat
inc
rcrl
pop
xchg
and
lock
pop
jo
mov
fcmovne
pop
jne
mov
add
dec
add
loopne
clc
bound
or
inc
pop
push
mov
imul
mov
sub
dec
or
pusha
xor
adc
movsl
push
mov
lds
bound
ret
inc
mov
test
adc
test
mov
pop
pop
pop
sub
stos
lods
in
pop
sahf
lds
mov
outsb
dec
sbb
sbb
jmp
cmp
cltd
mov
mov
push
xchg
dec
ds
or
fcmovb
enter
dec
daa
cmp
sti
sbb
jl
push
notb
cmp
adc
inc
mov
push
sti
mov
imul
push
fadds
fnstcw
cmp
dec
cmpsb
cltd
loopne
mov
fldt
rcll
or
mov
in
dec
inc
dec
adc
adc
lret
cmpsl
daa
lods
outsb
cmpsl
xchg
jno
push
sbbb
outsl
pop
dec
outsl
xchg
inc
into
stos
pop
cmp
jns
sub
and
sbb
out
insl
mov
pop
mov
std
inc
inc
repnz
int3
sahf
pop
sahf
loope
pop
bound
jl
mov
rcr
in
test
dec
nop
jb
or
int
sbb
cmpsl
cmp
sub
and
fistl
cmp
push
cmp
add
addr16
cwtl
pop
cmp
scas
test
cltd
pop
jne
sti
aaa
or
mov
lcall
push
and
gs
mov
into
cmpsl
cmp
and
test
popa
xchg
mov
push
sub
dec
add
mov
or
sub
adc
test
and
scas
push
xor
xor
xchg
xor
sahf
cmp
in
push
mov
push
adc
cmpsl
cmpsb
ret
pop
lds
xchg
xchg
mov
dec
sti
fcomps
lcall
add
pushf
cmpl
add
mov
inc
mov
push
in
iret
into
out
mov
pop
rorl
inc
daa
rorl
inc
sub
repnz
mov
aas
dec
iret
mov
in
dec
adc
xlat
xor
xorb
push
sarl
aaa
adc
sti
in
stos
push
ljmp
andb
mov
jns
lea
cmp
xchg
repz
mov
mull
insb
rcl
aam
or
push
loop
test
xchg
leave
loope
jo
call
repz
mov
mov
xchg
xabort
cmp
or
subl
cli
addr16
movsl
divl
adc
pop
dec
out
jnp
jo
add
pop
jns
jl
or
and
mov
jp
out
mov
xor
adc
sub
enter
fprem1
mov
sub
xlat
push
outsb
xchg
push
jb
pop
xor
insl
adc
pop
inc
ret
adc
cmpsb
or
fidivs
sbb
mull
rcrb
add
jmp
mov
test
sti
testl
fistps
jg
xchg
cmc
mov
in
add
push
jo
push
adc
jl
dec
ret
cli
or
xor
mov
add
shlb
data16
dec
iret
clc
lret
add
xor
pusha
pushf
sub
sahf
mov
pop
movsl
mov
lret
xor
leave
stc
sub
mov
xchg
dec
es
mov
popa
jle
cld
les
mov
bound
insl
pop
das
sbb
test
add
adc
mov
mov
scas
cmpsb
in
add
das
sbb
push
add
sbb
mov
xor
and
popa
ljmp
mov
jns
add
data16
jae
lea
into
push
stc
ss
xchg
or
xor
mov
sbb
mov
xor
int
push
jae
js
int3
dec
imul
push
push
mov
dec
sub
lea
inc
int3
stos
gs
loope
insb
and
test
notb
and
sub
sbb
xor
xchg
adcb
aad
test
in
inc
sahf
sub
dec
mov
adc
ret
push
or
jge
pop
pmullw
mov
sahf
ja
sbb
xchg
push
cmp
push
inc
xor
rcrb
frstpm(287
pop
insl
mov
dec
cmp
sbb
rcrb
lds
jno
into
jne
out
int3
stos
ja
fwait
mov
xchg
ficoms
stos
popf
aad
pop
dec
xchg
lods
sbb
xor
outsb
dec
add
cmc
lcall
lea
testl
xchg
inc
pop
mov
xor
iret
fstl
xor
shrl
jge
pop
inc
mov
xor
fs
and
pop
ja
jg
dec
movsb
rcll
push
mov
cmp
jno
setb
sbb
js
dec
gs
outsb
adc
push
and
inc
mov
adc
leave
mov
mov
hlt
jge
dec
cld
or
adc
mov
pop
imul
lahf
or
cmp
fcmovne
jmp
js
pop
ja
gs
in
jne
repz
out
cmp
loope
sbb
lea
into
or
lret
data16
pop
xchg
xchg
mov
sub
aam
sbb
jno
mov
sub
and
loop
mov
xor
mov
or
add
popf
mov
fwait
rcl
cli
sub
lds
cld
xchg
roll
fs
jg
mov
jmp
mov
fmull
xchg
movsb
sbb
lret
gs
lret
ja
pusha
mov
std
pop
dec
pop
mov
imul
mov
mov
jmp
popf
ret
xchg
mov
mov
mov
mov
mov
pushf
sub
mov
or
xor
imul
aad
test
int3
data16
xchg
xchg
scas
lret
add
and
in
loope
push
and
jne
js
scas
testb
mov
xchg
jge
cmp
jbe
mov
outsl
scas
or
cmp
adc
xorl
sub
xchg
sbb
and
imul
in
sub
movsl
sub
lods
stc
jp
or
sub
jns
mov
lahf
movswl
loopne
pop
les
leave
dec
adc
pop
and
ret
rcrb
pop
ret
xlat
inc
repnz
in
pop
insl
mov
bound
jg
xchg
mov
std
mov
xchg
add
fmull
repz
xor
hlt
lods
int3
rcl
xchg
repz
and
mov
dec
cmpsl
leave
sub
jecxz
imul
in
jecxz
mov
ja
inc
je
negl
insb
xlat
or
adc
pop
fwait
cmpsl
add
push
xor
push
xor
cmpsb
push
mov
push
icebp
icebp
sub
or
jb
mov
lock
xor
pusha
aad
xor
sbb
aam
std
subb
outsb
pop
pop
cwtl
cmp
cmp
mov
pop
outsb
adc
iret
call
mov
insb
cmp
mov
sbb
push
dec
fwait
xor
js
adc
outsl
mov
mov
sarb
andb
data16
mov
pop
pusha
xchg
in
aad
jl
fidivrl
jmp
insb
jb
lahf
pop
lret
inc
mov
push
fildll
add
xchg
cld
shll
rolb
push
loop
ret
sub
xor
sbb
or
or
pop
pop
jno
jno
icebp
add
add
cwtl
mov
push
xchg
dec
dec
testl
xchg
sbb
out
popf
and
mov
iret
loop
mov
in
mov
addr16
sbb
emms
scas
clc
pop
stos
out
faddp
adc
mov
hlt
rcrl
jp
lea
fs
daa
jae
es
cli
adc
push
adc
jno
lds
cmp
mov
mov
mov
lock
jge
pusha
inc
into
test
insl
inc
jnp
push
push
cmp
pop
adc
test
js
cmp
cmp
jg
js
in
lods
dec
xor
out
lea
cs
mov
push
ret
mov
or
fidivs
and
push
sahf
add
out
popf
shll
xlat
lods
xchg
pushl
ret
idivl
rorl
inc
fidivl
cmp
add
lds
roll
cmc
fs
mov
mov
jb
call
and
hlt
leave
ds
mov
negb
or
mov
lret
cwtl
repz
movsl
test
adc
push
inc
bound
fidivrl
push
adc
jae
cmp
test
iret
sub
or
lret
mov
push
insb
jno
mov
mov
clc
rolb
std
popa
mov
mov
push
jp
lods
shll
std
push
jae
or
adc
mov
push
sbb
add
mov
repnz
out
dec
dec
loop
inc
mov
dec
mov
shrl
loopne
insb
sub
pop
imul
idivb
mov
cli
lahf
xchg
xlat
es
lcall
decl
popl
faddp
int3
out
addl
xchg
cmp
xor
xor
mov
cli
les
stc
or
js
mov
int3
cmp
aam
jl
hlt
mov
insb
dec
push
jg
inc
sbb
sub
pop
imulb
push
push
pop
fildl
push
jecxz
divl
into
pop
and
repz
pushf
sub
popf
jnp
pop
pop
sbb
push
adc
push
adc
and
movl
mov
jecxz
leave
adc
push
push
ja
fnsave
fsubs
test
iret
push
push
or
push
inc
stc
xchg
cmp
das
insl
shlb
xor
adc
pop
xchg
dec
mov
icebp
jnp
mov
inc
push
dec
in
in
sub
xor
mov
movsl
adc
scas
cmp
mov
mov
adc
je
sarb
add
hlt
inc
and
cli
xchg
xor
in
inc
lods
shl
pop
lahf
jnp
or
push
jecxz
iret
pop
cld
xchg
xchg
movsb
pop
inc
dec
adc
jp
pop
mov
push
cmp
jae
jnp
xor
sti
loopne
nop
mov
jne
xchg
mov
cmp
sbb
repnz
or
stos
mov
sbb
cmpsb
xchg
iret
sahf
mov
ljmp
adc
mov
outsl
mov
mov
cmpb
jae
jae
insl
pop
aam
xchg
ret
daa
lahf
in
sahf
cmp
dec
mov
pop
shll
aam
or
mov
cs
stos
test
jl
adc
lea
xor
shlb
dec
jecxz
pop
aad
out
in
pushf
and
inc
movsl
mov
std
mov
sub
ljmp
push
pop
adc
xchg
rorb
or
mov
jae
mov
cwtl
mov
in
enter
mov
int
dec
add
popf
in
hlt
jmp
dec
es
inc
stos
push
jns
cmp
or
into
lret
imul
ljmp
or
fbld
sub
push
sub
lds
mov
and
jl
add
xchg
icebp
test
shlb
out
daa
cmp
ficompl
pop
dec
push
mov
jns
pushl
shll
ret
daa
stc
jo
pop
push
shll
mov
fwait
lods
aas
das
int
les
pusha
std
dec
testl
sub
enter
mov
mov
sbb
adc
leave
pop
mov
cltd
xor
pop
dec
aas
idivb
or
aam
insb
inc
inc
pop
xchg
addr16
cltd
push
mov
leave
jmp
jle
sbbb
gs
lds
mov
add
or
out
jp
jae
loope
mov
dec
jb
sub
rclb
mov
sarb
arpl
loopne
testb
fcmovnu
nop
scas
add
cwtl
js
rcll
les
iret
insb
sub
call
or
mov
mov
pop
test
jno
adc
pop
mov
pop
xlat
push
push
add
xchg
fisubrs
pushl
outsb
mov
sbb
repz
sub
mov
daa
jge
jg
jno
lds
pop
addr16
lods
adc
jbe
ljmp
pop
jge
dec
mov
fiadds
subb
es
sbb
fmul
scas
and
add
fadd
pop
test
jle
scas
push
in
cmc
inc
cmp
or
cld
or
or
loope
pop
test
xlat
sub
and
dec
out
data16
scas
jmp
in
sub
insb
dec
shrl
push
std
das
mov
stos
mov
add
into
xchg
push
movsl
mov
jp
push
add
inc
mov
push
repz
or
pop
xchg
jbe
xlat
and
push
push
or
insl
stos
xlat
enter
test
mov
pop
andl
rcll
push
inc
xor
mov
sbbl
cltd
orl
leave
push
mov
mov
mov
aad
sub
int3
adc
ja
inc
in
mov
loopne
mov
loop
inc
pop
mov
jle
nop
xor
inc
cltd
into
lret
xlat
shlb
jl
cmp
fimuls
fnstenv
daa
ficoml
lcall
fs
dec
sub
ljmp
out
mov
data16
xor
fcmovnb
decb
lds
es
aaa
mov
jg
loopne
stos
cmp
ss
aaa
enter
pushl
mov
sbb
divl
fbstp
fnstsw
jmp
testl
sbb
xor
outsl
jo
subb
pop
mov
mov
je
add
cli
cmp
xchg
jnp
sub
sub
mov
xchg
inc
adc
pop
adc
sbb
dec
mov
rcrl
popf
sub
rclb
in
cli
neg
sbb
int3
enter
jbe
jmp
das
std
clc
shl
sbb
shl
jnp
out
loop
dec
aaa
pop
add
arpl
sti
push
loopne
in
pop
dec
xor
mov
adc
xchg
lea
sub
rorl
ret
mov
add
jle
in
cmp
mov
sub
or
mov
cmc
jl
jo
jl
fidivrl
iret
fnstenv
mov
shll
scas
imul
ret
imul
push
mov
cmc
push
lret
insl
shlb
mov
sahf
vcvtpd2dqy
pop
pop
sub
je
in
mov
sbb
pop
sarb
arpl
nop
sbb
clc
jecxz
mov
inc
cmc
aaa
pushf
dec
or
xor
fidivs
insb
xchg
out
aam
fisttps
jo
mov
lahf
in
push
dec
xchg
sbbl
ljmp
mov
pop
aaa
pop
or
dec
lock
mov
mov
adc
testb
dec
lods
repz
xchg
or
pop
out
cmp
sbb
adcb
xchg
cltd
cmc
cwtl
xchg
shrl
push
mov
xchg
lahf
mov
repz
mov
jl
and
stc
cmpsb
and
mov
hlt
movsb
push
test
pop
xchg
cmpsl
loop
xchg
adc
mov
cmp
iret
leave
adc
add
test
pop
test
mov
inc
push
push
inc
stos
sbb
loopne
pop
test
les
mov
mov
mov
je
ss
stos
pusha
push
sbb
scas
jl
cld
hlt
ror
mov
and
data16
jge
ret
dec
ret
mov
xor
sbbl
dec
adc
out
push
mov
jmp
mov
fmull
hlt
out
sbb
xor
push
pushf
push
lret
arpl
loopne
shll
nop
sbb
add
or
push
push
fisttpl
lea
out
cmpsb
pop
mulb
push
adc
sbb
and
mov
imul
or
jecxz
dec
call
cmp
sarb
xchg
shlb
sub
mov
mov
jle
fcomps
scas
mov
lods
lods
repnz
jmp
jbe
je
inc
pop
addr16
filds
lds
or
test
popf
ljmp
cmp
dec
cmp
mov
add
push
leave
inc
xchg
clc
xor
or
push
mov
idiv
ret
or
cmp
lret
jge
and
fcmovu
in
addr16
and
adc
or
jecxz
les
ficomps
jbe
push
mov
xchg
pop
dec
mov
mov
inc
pop
cli
add
lds
test
cltd
aas
sbb
adc
mov
sahf
pushl
and
notl
sub
aam
pop
sbb
iret
fistpl
cmp
movsl
test
inc
cmp
insb
xor
scas
jge
push
jl
leave
jg
scas
ficompl
inc
add
add
aas
jg
pop
cmc
psubb
rcll
fistpll
test
xor
push
lcall
inc
mov
ljmp
jns
jb
popf
dec
lcall
stos
jge
lock
inc
inc
fisttpll
aad
pop
bnd
les
lods
mov
or
xchg
testb
test
pop
jp
int3
in
inc
and
inc
mov
fstpt
mov
pop
cltd
enter
test
dec
jo
jnp
iret
je
fidivrl
add
fucomi
ss
dec
dec
rcrb
std
adc
cltd
inc
arpl
pop
dec
xchg
mov
xor
icebp
fdivrp
call
pop
test
stos
gs
div
dec
stos
cmp
cmpsl
jns
js
icebp
mov
rcrl
cltd
ret
or
lahf
mov
mov
imul
cmc
push
pmulhw
sbb
stc
cmp
fs
sbb
pop
push
scas
repz
rol
loope
mov
push
cld
movl
mov
pop
cwtl
and
inc
jmp
addr16
cmpsl
sbbl
mov
pop
rorb
idiv
push
je
aaa
push
sbb
push
xchg
sbb
out
fiadds
jo
sbb
movswl
nop
cmpsb
dec
add
and
xor
sbb
shl
call
add
xchg
in
or
fisubs
add
mov
daa
and
push
push
mov
push
out
lcall
mov
movsb
ss
sbb
repnz
sbb
jmp
cmp
dec
add
and
lret
pushf
mov
inc
test
jge
dec
mov
mov
sar
xchg
jmp
out
out
mov
jp
call
push
jp
xor
lret
xor
or
and
repnz
jl
int
dec
jns
fs
sub
out
add
cmp
into
adc
loopne
int3
jae
lds
jp
jecxz
inc
aas
mov
popa
leave
stos
scas
pusha
push
adc
adc
outsl
test
hlt
xor
sub
jnp
je
sbbb
mov
pop
push
sbb
and
xchg
fwait
mov
mov
rclb
fnstsw
lds
inc
in
jle
test
mov
inc
cmp
outsl
jne
cmp
aam
call
inc
jae
adc
inc
dec
mov
out
in
iret
sub
xor
inc
pop
mov
subb
push
jo
and
int3
cltd
aad
cmc
mov
iret
addr16
ja
dec
fs
or
dec
mov
pushf
fisubl
mov
cmp
fiadds
cmp
call
jb
xchg
dec
stos
jo
lcall
or
ficompl
pop
fldcw
nop
cmp
arpl
mov
fsubrl
mov
icebp
imul
cmc
mov
ljmp
subb
jbe
cli
lods
mov
dec
into
add
adc
lret
insb
jae
in
add
popa
inc
andb
out
mov
or
cmp
cmp
jnp
in
adc
pop
mov
sub
mov
call
ds
int
sahf
cmc
push
int
jmp
aad
adc
pop
add
pop
mov
cli
mov
pushf
or
fstpl
mov
out
push
and
fs
cld
imul
fxtract
fldenv
rorl
js
sarb
inc
mov
fiaddl
pushf
adc
ret
rorl
add
pop
pop
sahf
dec
in
push
jge
and
imul
sub
pop
mov
add
lcall
fisubrs
dec
aad
xor
repnz
dec
cmpsl
inc
sahf
sub
les
xchg
mov
aas
addl
lds
jmp
mov
jne
jo
bnd
daa
jl
mov
icebp
cmp
push
and
repz
jo
jns
nop
popf
or
adc
xchg
xlat
into
std
adc
in
mov
push
loope
out
sbb
ret
mov
rcrl
mov
sbb
shlb
fidivs
mov
popf
notl
jg
leave
pop
jne
stc
pop
inc
sub
xor
add
push
movsl
loopne
jno
pop
sub
repz
and
jecxz
xchg
xchg
fsub
rcr
neg
mov
movsl
xor
push
fildll
xchg
ficoms
mov
pop
scas
in
inc
movsb
sahf
fwait
push
jle
outsb
and
lret
pop
cli
ficoms
popf
mov
in
sbb
sub
clc
xor
inc
inc
or
lahf
add
add
push
or
sbb
jae
lcall
mov
lea
cwtl
in
sbb
fs
push
std
jge
repz
fwait
inc
jnp
ret
imul
sbb
add
or
dec
or
dec
inc
pop
hlt
sbb
mov
xchg
mov
int3
cmp
ret
adc
ret
flds
push
leave
out
push
fs
mov
mov
cmp
jno
xchg
xlat
mov
ss
mov
outsb
mov
and
les
lods
jbe
xlat
xor
scas
xor
ficoml
daa
mov
fildll
inc
es
int3
cmp
or
or
mov
imul
adc
inc
popa
pop
inc
sarb
cmp
fstpt
push
inc
pop
mov
mov
jb
out
pop
jl
mov
jp
sbb
pop
outsb
and
mov
pop
fsts
sbb
lret
adc
dec
nop
sbb
jle
add
outsl
mov
aam
std
call
and
jmp
outsb
lods
es
shrl
ss
aam
jmp
inc
pusha
ljmp
lret
mov
in
jg
mov
mov
push
dec
lcall
shll
sahf
in
js
mov
push
push
add
or
gs
loopne
js
xor
mov
push
push
mov
addr16
dec
xor
out
enter
jmp
pop
test
push
or
test
nop
inc
lahf
sbb
arpl
mov
or
outsb
pop
adc
in
or
bound
and
adc
inc
insb
mov
cmpsb
and
cmp
xchg
movb
out
or
aam
cli
push
mov
mov
inc
xchg
add
sbb
add
jmp
lods
adc
dec
cwtl
mov
inc
inc
test
js
or
and
cmc
adc
add
icebp
dec
and
dec
sub
jmp
inc
mov
cmpl
xor
jg
add
gs
fdivl
jp
mov
xor
sbb
push
cmp
iret
xchg
pop
les
outsb
adc
outsb
or
cwtl
rcr
stos
inc
sub
into
dec
jmp
push
inc
dec
ss
fstpl
adc
push
and
pop
repnz
outsl
sbb
jns
outsl
mov
icebp
int
cmp
jae
add
xchg
imul
dec
mov
in
aaa
out
cwtl
jno
lock
sahf
and
dec
or
and
insl
push
dec
inc
add
mov
lods
push
jno
loop
lss
cmp
cld
sub
cltd
jbe
bound
adc
mov
xor
or
scas
and
dec
inc
push
add
mov
mov
mov
enter
dec
dec
pop
loopne
adc
sub
jecxz
sub
movsl
cmp
out
ljmp
mov
or
xchg
nop
mov
test
and
daa
fs
les
and
add
int3
or
push
in
inc
adc
or
shll
and
mov
xchg
inc
and
mov
inc
test
iret
lock
pop
stos
aas
jmp
mov
and
loope
push
dec
shlb
cltd
cmp
lahf
mov
sbb
adc
push
pop
cli
je
or
inc
scas
cmp
push
sbb
dec
rclb
jnp
mov
dec
jo
icebp
pop
lock
jae
sti
out
and
lods
fsubrs
add
gs
fxch
bound
test
dec
sbb
mov
xor
jmp
insb
cli
add
int3
pusha
push
add
push
cmp
jbe
and
xchg
sbb
jns
dec
mov
mov
mov
xor
jecxz
call
cltd
push
and
mov
or
popf
repnz
and
dec
or
xchg
sub
notb
mov
clc
jne
int3
and
jno
lea
sub
fisubrs
rcll
pop
xchg
push
dec
hlt
sub
in
push
cmc
or
cli
sub
sub
xor
sar
xchg
push
mov
imul
js
push
cmp
test
jecxz
pop
pop
ss
jno
xor
pop
sub
lds
pop
in
cli
jg
stc
cmp
and
dec
sbb
mov
scas
test
add
cmp
sub
gs
inc
adc
fs
lcall
ss
aas
push
fcomps
cmp
out
lahf
mov
fadds
and
xchg
push
testb
mov
mov
jmp
fnstenv
adc
ss
add
mov
fidivrs
push
cmc
xor
out
push
sub
xchg
loop
or
into
icebp
iret
movsl
and
jo
test
lds
add
inc
xor
jg
push
fstps
mov
xchg
and
repz
shll
test
fbld
loopne
mov
mov
mov
popf
inc
add
lock
dec
pop
ret
pop
rcl
mov
test
das
inc
cs
cmp
sbb
rcrl
jmp
in
in
xchg
aaa
std
xchg
outsb
inc
add
adc
rcrl
mov
insl
cmp
fistpll
sub
xlat
jae
loopne
mov
pop
pushf
mov
aas
repz
push
dec
sub
out
adc
rcr
cmp
xchg
pop
out
jb
xchg
shl
add
out
mov
sbb
sahf
test
jmp
or
out
movsl
test
pop
xabort
mov
and
or
adc
jge
xor
lods
mov
xchg
das
mov
add
aad
xor
push
dec
aad
pop
dec
jo
ja
mov
or
cmp
mov
loope
or
repz
xor
into
sub
test
inc
ljmp
sar
clc
xchg
iret
negl
in
sbb
lea
mov
fnstsw
outsl
push
shr
rorb
mov
std
xchg
jmp
stos
sbb
pop
inc
fcompl
ret
mov
push
pop
jle
add
xchg
ficoms
push
jge
sbb
repnz
or
jbe
scas
pusha
mov
sbb
out
jg
add
xchg
xchg
jne
push
arpl
call
xor
aas
push
fcomp
mov
lds
mov
addr16
cwtl
jge
loopne
cmp
pop
testl
insb
jb
lcall
cli
and
xorl
sbb
ret
pop
ja
sub
mov
mov
out
inc
enter
jne
mov
outsl
inc
into
pop
mov
mov
mov
andl
repnz
dec
cmp
rcrb
sahf
popa
mov
mov
mov
subl
push
and
mov
cwtl
push
or
cwtl
add
pop
mov
frstor
loop
adc
jns
popa
subl
xor
inc
push
jb
pop
sbb
inc
popa
iret
mov
push
add
mov
ds
into
add
sub
add
js
outsb
inc
fisubrl
sti
or
push
stos
mov
sub
ret
insb
cmp
lock
xchg
pop
and
ffree
pop
in
dec
out
dec
rcrl
sub
pop
mov
mov
add
push
das
sbb
in
fisttpl
rcrb
imul
jge
cltd
sbb
xchg
cmc
addb
mov
push
jae
daa
mov
cmpsb
pop
sub
idivl
mov
jno
and
lret
push
pop
pop
mov
push
lods
sbb
mov
xchg
mov
aas
mov
popa
pop
rorb
cmp
cmp
test
xor
imul
push
mov
sbb
adcl
xchg
leave
xor
outsb
out
inc
xchg
inc
popl
lahf
mov
mov
aas
lods
test
mov
mov
xchg
andl
xchg
cltd
cmp
repz
sbbb
decb
and
jbe
jge
es
jp
shrl
inc
loopne
int3
ljmp
mov
push
jge
inc
or
repz
adc
test
cmc
sar
movsl
xchg
jae
add
leave
stos
mov
xchg
mov
and
stc
sbb
int
testb
pop
pop
jl
xorl
xlat
jae
cwtl
and
mov
stc
mov
xor
lret
sbb
insl
icebp
mov
inc
sbb
insl
pop
sbb
jecxz
dec
mov
fdivrs
std
cmp
lds
loop
jno
xor
pop
inc
pop
adc
call
ljmp
stc
addl
es
adc
or
mov
in
das
mov
aad
adc
adcl
ret
icebp
addr16
cmp
dec
mov
ds
mov
adc
mov
or
cs
or
pop
and
push
xor
mov
and
jb
int
adc
mov
loopne
das
push
sub
mov
mov
or
pop
mov
xchg
xchg
pop
cmp
mov
adc
pop
pop
sub
and
sbb
lcall
dec
adc
adc
mov
xchg
ficoml
loopne
fstpt
repnz
andb
ficompl
addr16
js
jge
cmpsl
mov
pop
iret
mov
and
dec
ds
xchg
or
fstpt
out
test
sbb
pushf
push
std
dec
jne
and
mov
iret
xor
fwait
push
mov
add
pop
adcb
jmp
negl
call
mov
in
test
inc
mov
pop
push
mov
inc
sub
push
shl
repnz
cli
cwtl
inc
mov
and
mov
mov
push
lods
out
jmp
lds
push
and
lods
push
xchg
inc
mov
jns
or
repz
insb
sbb
arpl
mov
shlb
ret
imul
fsubs
das
in
loopne
loopne
inc
into
xchg
dec
or
sub
xor
adc
mov
int3
scas
bound
pop
loop
fmuls
sbb
push
inc
lea
pop
push
push
imul
xchg
lss
jecxz
mov
pop
pop
les
pop
mov
hlt
dec
dec
popf
cmpsl
into
int
xlat
icebp
dec
ja
add
es
mov
push
lods
cmp
dec
les
notl
jmp
jcxz
sbb
jle
imul
jle
lods
jmp
jbe
mov
xor
lods
push
dec
xlat
cmp
ja
xlat
ljmp
jle
xchg
fwait
mov
stc
pushl
xor
jle
mov
sbb
or
or
cli
out
mov
lea
sub
push
mov
jbe
mov
les
out
mov
hlt
hlt
cmpsb
xchg
jbe
inc
in
sbb
pop
sbb
pop
add
out
fidivrl
dec
jb
cmp
sub
call
mov
frstor
andl
push
pop
jecxz
inc
enterw
sub
ret
or
aaa
pop
in
out
jge
sub
mov
xchg
inc
jbe
mov
aas
test
inc
iret
dec
filds
fldln2
jno
addr16
jg
cmp
addr16
jne
push
adc
call
icebp
cmpsb
lock
jo
mov
xor
pop
jne
sub
test
subb
sub
aaa
in
xchg
xor
in
and
mov
cltd
push
pop
adc
inc
pop
push
or
push
in
imul
insl
dec
shll
mov
mov
addr16
jbe
mov
cmp
push
mov
clc
adc
xchg
mov
lods
mov
jp
or
cs
movsl
pop
lahf
scas
sahf
mov
fdivrl
cmc
pop
mov
lods
mov
es
inc
call
test
push
cld
imul
mov
pop
test
xlat
out
inc
sbb
lret
in
int
into
mov
mov
push
mov
loope
je
movsb
xchg
out
xchg
push
outsb
sti
or
arpl
pop
push
push
push
mov
rcrb
and
xchg
push
jns
pusha
fcmovnu
mov
pusha
inc
mov
inc
loope
cmp
ss
cmp
lret
mov
inc
bound
pop
sub
or
mov
push
aam
jle
je
pop
or
xchg
inc
movsl
jns
fisubrs
cli
jmp
loop
test
sti
mulb
mov
jle
sbb
xor
pop
and
mov
in
fstpl
out
ret
mov
pusha
dec
adc
xchg
fimuls
mov
push
and
mov
popa
out
jl
pop
mov
imul
sbb
push
push
inc
and
mov
dec
dec
or
in
in
in
cli
imul
mov
out
jl
cwtl
movsl
inc
nop
aam
sarl
xchg
adc
outsb
pop
sub
scas
and
mov
xor
sub
jge
pop
out
mov
lods
mov
cmp
scas
inc
push
xor
mov
test
insb
sbb
sbb
or
bound
mov
std
add
push
testb
xchg
push
push
pushf
jl
cmpsb
inc
push
clc
or
jo
fldt
adcl
pop
cmp
xchg
inc
rorb
adc
outsl
lea
ja
cmc
xlat
pushf
jb
push
and
les
cmp
dec
and
jbe
ja
sub
push
pop
xchg
shll
adc
mov
mov
or
outsl
or
repnz
xchg
adc
jnp
ja
xor
cmp
xorl
xchg
pop
sbb
dec
ljmp
mov
pop
in
js
shlb
jp
imul
scas
iret
lret
add
lret
pop
add
or
fisubs
xchg
into
daa
or
mov
push
jb,pt
cwtl
adc
mov
push
mov
mov
cmp
insl
push
insb
pushw
cmp
pop
in
das
adc
movsl
aad
xor
push
mov
in
into
or
pop
nop
ja
pop
jae
push
adc
sub
or
lods
shlb
inc
cli
sysenter
fdiv
xor
scas
add
or
fcoml
or
push
and
mov
push
jmp
cmp
jae
insb
lcall
adc
xor
aaa
orl
nop
mov
add
jmp
dec
pop
sbb
adc
rolb
jge
mov
test
sti
pop
mov
dec
loopne
push
mov
out
arpl
mov
jg
rol
fcmovnb
push
xchg
add
js
lock
sar
decb
mov
test
sti
mov
sub
cli
jns
icebp
xchg
lods
cmp
or
cmp
fimull
cmp
lods
sti
clc
sbb
inc
pop
mov
add
imul
jp
pop
push
lds
loope
fwait
mov
pop
fs
test
cmpsl
pop
fdivr
mov
mov
pop
mov
out
sti
and
in
add
xchg
ja
pop
jno
mov
das
push
cmp
mov
iret
cmpsl
mov
sub
fidivs
lahf
imul
mov
mov
das
sbb
ds
xlat
add
stc
adc
and
mov
adc
and
sahf
aaa
ljmp
inc
push
mov
mov
cs
adc
push
setp
mov
cmp
les
xchg
inc
testb
out
mov
inc
jbe
mov
popw
mov
cmc
dec
popa
loope
push
pop
cmp
mov
shl
mov
enter
nop
dec
es
pop
dec
imul
xor
mov
divb
sti
leave
test
mov
mov
sub
mov
test
xchg
fwait
xor
cmp
popa
popf
dec
xchg
mov
push
cld
mov
xchg
lret
lods
imul
arpl
or
inc
push
push
sar
addl
add
dec
aas
lock
xchg
test
sbb
jge
out
xor
xorl
add
es
jmp
loop
pusha
lahf
gs
subb
cmc
mov
fwait
xorb
push
popf
ljmp
sbb
fisubs
pop
lea
test
jo
ja
cmp
inc
lods
stos
sahf
data16
out
pop
xchg
pop
cli
pop
jl
jne
jnp
or
mov
xor
dec
sbb
add
test
loope
mov
mov
push
fs
nop
push
inc
mov
xchg
std
mov
fstpl
jno
push
dec
add
cli
inc
push
sub
sbb
stos
ja
dec
pop
lods
jge
mov
movsb
ljmp
and
es
int
add
xor
faddl
push
out
shlb
mov
inc
sub
lods
xchg
jno
jns
pop
cmc
xchg
pop
dec
push
insb
lret
cmpsl
mov
adc
or
mov
scas
test
mov
mov
fbstp
aaa
scas
xor
pushf
inc
sti
mov
popf
mov
dec
xchg
xchg
xchg
ds
mov
repz
cmpsb
or
mov
int3
mov
adc
insl
aas
dec
push
jns
pop
dec
mov
push
sbb
pop
mov
jno
scas
sar
daa
lods
sbb
inc
jnp
repnz
adc
dec
stos
jo
sub
sbb
int
outsb
mov
pop
fmul
sahf
imul
xor
jg
mov
mov
xchg
arpl
out
cs
out
fs
mov
push
or
js
stos
dec
inc
xor
out
shr
jecxz
push
fcmovnbe
dec
xor
sti
add
jp
test
stos
aad
stos
inc
adc
sbb
popa
orb
fdivs
adc
xor
mov
lods
sub
sub
jecxz
arpl
out
stc
fucomp
push
nop
les
in
cmp
xorb
and
xor
pop
out
shl
mov
lret
test
adc
add
lods
sub
stos
stc
fistps
ljmp
ret
cli
loopne
push
sbb
xor
dec
jmp
rcll
mov
fwait
push
xchg
xor
sbbb
sbb
fdivrs
jb
cmpsb
pusha
rolb
js
fdivrl
int
jae
xchg
ljmp
dec
aad
sub
push
test
xor
inc
xorb
xor
push
mov
dec
pop
in
push
mov
sbb
mov
xchg
inc
push
mov
pusha
fst
in
in
out
add
cmp
imul
ja
cmp
fdivs
nop
and
pop
mov
jg
sub
xchg
mov
xlat
sbb
icebp
sbb
dec
push
xchg
add
mov
movups
or
std
out
outsl
popw
push
pusha
pop
xlat
cmp
and
mov
push
sarl
xlat
aas
pop
sti
adc
xchg
cld
adc
cltd
mov
xchg
imul
fdivl
sub
dec
mov
jb
ja
scas
lcall
shrl
jp
dec
test
fbld
mov
inc
mov
in
push
cmc
aas
test
xchg
dec
jo
mov
setp
xor
shrd
inc
scas
mov
sbb
pop
add
loope
sbb
xchg
mov
mov
mov
push
xor
fwait
cmp
xlat
jne
pop
popa
adc
sub
sub
jns
fwait
inc
out
test
fs
push
cmpsb
sbb
out
stos
mov
push
cli
clc
push
xchg
rorl
sub
gs
inc
push
mov
out
es
loopne
jmp
imul
pop
repnz
mov
adc
push
leave
sub
imul
push
pop
lds
sar
div
adc
sarl
movsb
daa
mov
mov
ja
into
pop
push
lcall
pop
sub
sub
jp
xchg
and
jo
test
hlt
psubsw
rcrl
jle
popa
adcb
sub
jl
inc
jle
out
mov
xor
mov
mov
cmpb
clc
dec
sub
and
test
es
inc
cmp
ja
repz
stos
cmpl
xchg
push
enter
mov
add
mov
adc
test
inc
add
or
mov
add
inc
es
shlb
scas
xor
sti
dec
push
inc
mov
mov
mov
cmpxchg
or
in
cwtl
sub
sbb
xchg
cmp
adc
fldt
push
sub
cmpsb
jp
fcomp
cwtl
jmp
stos
push
in
pusha
dec
jmp
mov
or
or
das
cmpsb
icebp
jnp
dec
cmp
pop
enter
jnp
pop
loopne
xchg
sahf
xlat
or
sbb
xchg
push
mov
jp
and
adc
xlat
inc
insb
out
daa
pop
inc
sub
stos
and
lahf
fcom
shr
sbb
mov
call
pop
dec
outsl
xor
mov
pop
outsl
dec
mov
scas
jno
ss
sub
mov
std
mov
in
out
sub
in
adc
push
mov
cmpsb
iret
pop
stos
mov
push
sub
xchg
or
pop
dec
aaa
push
out
mov
inc
xlat
movsl
mov
icebp
mov
dec
xchg
jle
jns
fs
sub
mov
out
bound
pushf
xchg
mov
push
dec
sbb
mov
jmp
movsl
loopne
addb
lock
cltd
adc
lods
or
outsb
mov
xchg
xchg
fists
xor
ret
fwait
inc
je
jp
and
flds
cmc
rcll
adcl
aam
xchg
inc
cli
leave
int
adc
repz
js
xchg
shl
jecxz
enter
in
int3
adc
in
push
movsb
lock
fnstcw
jecxz
fcoms
mov
dec
pop
and
es
cmp
adc
add
in
into
adc
cmp
mov
imul
adc
pop
lods
pop
and
pusha
mov
cmpsb
xchg
jae
clc
jae
jecxz
rcrl
in
movl
mov
lock
xlat
les
mov
jge
orl
jg
add
mov
inc
add
push
test
xchg
push
push
mov
divps
pop
push
lods
xor
dec
inc
scas
lods
xchg
adc
repz
xor
aas
xor
ds
test
enter
ja
pop
and
mov
push
mov
xor
pop
mov
sub
out
shll
leave
fcomps
fwait
in
push
add
out
jno
test
xchg
lret
shlb
out
mov
das
mov
cs
lret
inc
mov
push
clc
cmp
push
mov
push
inc
push
jo
push
lret
mov
inc
xchg
std
sbb
mov
add
mov
test
jae
testb
in
in
loopne
xor
lods
rclb
cmp
sbb
testb
xchg
in
ficomps
pop
cmp
inc
pop
dec
pop
out
subl
fists
daa
fsubrs
das
and
out
adc
mov
shr
adc
std
int
push
aaa
pop
jne
lods
stos
pop
nop
ja
push
out
imul
jp
jl
cmp
pop
in
iret
stc
mov
sbb
icebp
rcll
cmpb
jl
inc
mov
add
pop
cli
into
push
jbe
dec
mov
fadds
js
imul
aam
lret
lcall
mov
sbb
popa
inc
or
xchg
inc
popl
scas
mov
xchg
sbb
aas
or
mov
or
push
mov
add
test
aad
repnz
je
sbb
or
insl
scas
test
adcl
stc
xchg
imul
jp
scas
andl
sbb
adc
xchg
sbb
pop
in
sub
push
pop
fadd
testl
repnz
stc
sti
clc
xchg
loopne
negb
lret
mov
adcl
aam
dec
call
es
in
mov
faddl
inc
mov
popf
jae
or
xchg
push
and
aam
add
divb
dec
pop
insb
pop
lds
clc
in
mov
sub
dec
and
dec
call
jno
stc
sbb
shr
inc
ret
in
cmpsl
xor
fcomps
popf
test
outsl
mov
add
push
or
loop
adc
cld
sbb
add
imul
out
js
imul
jne
aaa
icebp
lcall
inc
bound
cmp
aad
cli
fisubrs
dec
push
iret
je
in
xchg
sub
cmp
ljmp
push
mov
or
ret
test
fs
push
dec
adc
lods
mov
enter
outsl
push
mov
sbb
ds
jns
cmp
fisubl
xor
adc
ret
push
pop
xchg
cmc
or
xchg
pop
popa
add
xchg
or
roll
pop
cmp
into
shl
lods
cmpl
std
cli
fs
pop
test
bound
mov
lret
ret
sbb
clc
mov
dec
push
cld
leave
test
movsl
push
out
push
adc
add
add
add
sarb
mov
cmpps
mov
adc
or
mov
js
dec
mov
sub
lock
and
out
xchg
test
insb
pop
out
out
mov
ss
cmp
sbb
xor
push
xchg
mov
xrelease
xchg
outsl
loope
enter
push
jle
inc
or
out
incb
leave
inc
fwait
into
notb
dec
mov
popa
jae
in
sti
or
iret
and
stos
sub
addl
into
jae
testb
mov
in
or
mov
xor
insl
mov
mov
mov
push
aaa
cltd
or
fldenv
or
popf
addb
and
rcr
mov
dec
adc
mov
and
xor
rolb
dec
sbbb
cmp
sub
push
dec
je
hlt
js
pop
es
aaa
rorl
jecxz
mov
pusha
push
sahf
mov
insb
pop
or
pop
enter
cmp
fdivrs
ror
xor
fcmovnu
dec
sbb
movb
cs
ja
int3
add
outsb
jge
lret
mov
shll
push
int
mov
mov
jbe
xor
mov
gs
lret
daa
dec
jne
push
xlat
fisttpll
test
cmp
movl
dec
negb
push
loop
mov
cmc
das
dec
pop
mov
adc
mov
scas
fmuls
jmp
push
mov
ds
repnz
xchg
cmp
mov
and
shlb
leave
lds
mov
sub
scas
mov
jo
cmpb
in
lahf
jne
insl
jne
mov
lods
mov
das
int
xor
js
test
or
fidivs
pop
push
xor
imul
adc
aad
aad
jecxz
sbb
mov
cmpl
aas
cwtl
arpl
mov
sub
enter
lret
int3
inc
push
xchg
cwtl
lods
mov
pop
mov
sub
movsb
jg
lahf
scas
sub
nop
push
out
xchg
adc
jae
mov
or
cmp
rorb
and
jne
sub
mov
and
add
ret
lods
cmp
call
int3
sbb
sahf
mov
lods
lcall
lea
arpl
hlt
rclb
dec
inc
cmp
jnp
lods
imul
outsb
fwait
test
popa
or
mov
pop
clc
cwtl
push
dec
cmp
mov
mov
sti
icebp
sbbl
lods
xchg
aad
mov
jp
mov
insb
sbb
or
pop
lcall
daa
std
std
adc
insb
dec
call
mov
mov
and
mov
xchg
clc
xor
outsl
in
fists
mov
jl
sub
movsb
gs
jmp
sbb
xor
mov
adc
pop
push
mov
aas
ja
pop
inc
mov
lds
add
dec
in
cwtl
mov
repnz
cmc
sbb
push
adc
pop
out
inc
add
leave
fdivrl
cmp
adc
jge
adc
mov
ljmp
xchg
daa
pop
pop
iret
push
inc
mov
out
xor
xchg
xchg
movsb
sbb
cli
mov
lret
adc
repz
rcrl
push
lds
xor
jmp
call
shlb
loope
sbb
push
pop
imul
inc
clc
jp
pop
add
and
mov
movsl
insl
call
lret
push
mov
leave
mov
push
aaa
jno
push
add
pop
sahf
xchg
cmp
hlt
dec
insb
or
push
push
js
adc
push
lods
testb
mov
pusha
add
incl
pop
push
mov
mov
sub
xlat
sub
pop
push
dec
cli
mov
ja
mov
xchg
aaa
sbb
gs
pop
dec
loope
xchg
inc
call
ss
dec
lahf
xchg
or
aaa
and
dec
dec
add
outsb
repz
test
pushf
cmp
xor
mov
ja
pop
adc
aam
jp
das
jmp
sub
lahf
sbb
push
cld
sbb
cmp
jmp
fildll
xor
ror
jmp
repnz
lock
jb
lret
int3
imul
jecxz
jp
add
test
lea
sub
bound
inc
out
in
add
stc
stos
lds
inc
repz
push
insb
sub
mov
pop
stos
call
iret
push
push
or
add
hlt
fsubrs
enter
ds
imul
test
ss
into
jge
inc
cli
pop
repnz
fcmove
xor
lea
jecxz
in
in
scas
mov
cwtl
sarl
stc
or
add
mov
mov
addl
test
je
movsb
jbe
call
adc
ret
pop
dec
xchg
shl
mov
xlat
dec
or
in
rorb
paddb
push
aam
mov
lahf
imul
je
imul
pop
sub
mov
sbb
std
adc
sub
int
loop
pushf
sbb
xor
xchg
and
mov
lea
sub
out
scas
lods
faddl
and
dec
xchg
es
sub
movsb
iret
mov
mov
mov
std
cltd
mov
cmp
inc
orb
lea
inc
int3
in
and
out
sub
dec
mov
sbb
mov
dec
inc
in
xor
xor
jmp
je
adc
mov
scas
ficoml
jno
shlb
xchg
push
cli
push
push
add
cltd
pop
push
xchg
ficoms
and
mov
bound
push
shl
and
sbb
adc
bound
push
decb
xchg
out
test
in
mov
mov
mov
add
cmpsl
or
mov
iret
mov
mov
int3
adc
adc
push
xchg
mov
das
inc
push
stos
jg
sub
stos
adc
out
sub
insb
jbe
psrldq
and
cmpsl
das
mov
sub
dec
sbb
jo
push
insb
adc
cmpsb
out
and
fstpt
add
push
aas
rclb
xchg
push
xchg
mov
pop
mov
push
subl
push
push
enter
push
aaa
sub
cmp
iret
xchg
xchg
xchg
pop
push
dec
std
outsl
lahf
adc
dec
mov
sub
xchg
jg
xlat
cmp
outsb
jb
xor
or
subb
pop
arpl
imul
and
nop
stos
out
pop
fnstsw
xor
nop
fmul
jae
dec
fnstcw
pop
push
addb
mov
inc
fmul
pop
adc
inc
out
mov
mov
push
sarb
ds
xor
mov
add
es
les
xchg
xor
mov
jmp
daa
jno
sub
sbbl
ds
int3
fiaddl
fcmovbe
sub
loop
or
push
int3
cltd
popf
bound
mov
jp
mov
int
xchg
jns
negl
in
mov
lods
dec
repz
test
sub
aam
dec
inc
push
into
into
nop
or
xchg
icebp
les
imul
and
int3
jle
xchg
pop
imul
fstps
aam
in
sbb
fs
inc
cmp
xchg
frstor
mov
daa
insb
and
adc
mov
inc
mov
mov
xchg
imulb
rorl
imul
popf
loopne
daa
mov
leave
push
cmpsb
inc
hlt
cli
cmp
xor
sbb
sahf
lods
lahf
pop
mov
je
out
imul
add
es
aaa
fstl
enter
cmpb
lods
adc
cmp
insb
and
and
push
push
adc
xor
out
cld
pop
sahf
test
pop
sbb
call
lds
das
jnp
mov
test
insl
dec
aam
loop
inc
xor
addr16
xchg
cmc
out
jecxz
dec
ficompl
lret
loopne
les
loop
push
les
mov
push
jo
sub
repnz
mov
add
andb
and
ficoms
cmc
aam
out
das
in
add
iret
aaa
aaa
xor
xor
stc
mov
outsb
pushf
xchg
xchg
jge
data16
xchg
sbb
mov
loop
fdivrl
test
xchg
sub
dec
in
dec
jecxz
cmp
fstps
repz
mov
sbb
jmp
fdivl
dec
pushf
mov
movsl
pmullw
dec
insl
cmc
add
mov
popf
out
mov
jl
dec
dec
mov
shlb
pop
insb
call
xchg
or
lock
adc
sbb
mov
out
pop
shlb
fildl
not
add
pop
std
pusha
sbb
fistl
push
jg
mov
fsub
jmp
dec
add
mov
call
mov
jl
rorl
leave
pop
lcall
jnp
cmpsl
jp
pushf
xor
fidivrs
das
mov
fwait
cmp
pop
mov
sub
fcomip
add
jae
inc
out
mov
fs
sbb
loopne
xor
mov
fmull
in
clc
xor
enter
cwtl
xchg
pop
mov
inc
ss
jmp
jecxz
mov
push
scas
add
cmpl
repz
push
mov
inc
dec
fs
push
stos
adc
clc
int
mov
jne
aam
push
jb
pop
nop
sub
cltd
adc
stos
add
push
fstl
mov
loopne
push
sti
add
sbb
js
xor
pushf
jne
out
movsb
push
cmp
mov
fucomip
mov
ljmp
cmp
mov
adc
shlb
fdivp
mov
cmpsl
lods
and
aad
xor
aad
mov
jae
pop
xchg
add
shlb
aaa
les
jg
mov
das
inc
imul
test
ds
push
push
loop
data16
add
outsl
fdivl
inc
mov
jg
test
daa
mov
cld
negl
xchg
ror
dec
cmpsb
pop
in
or
mov
aad
movsl
xchg
dec
lret
insb
push
xor
iret
and
mov
shlb
pop
inc
shll
std
pushf
cmp
sub
jmp
dec
popf
jne
adc
sti
fwait
adc
lret
sbb
clc
pop
out
out
mul
jl
sbb
sub
xchg
js
inc
data16
mov
jl
fcmovne
cmp
insl
testb
gs
rcl
pop
out
mov
dec
dec
dec
or
call
dec
pop
dec
scas
sahf
push
push
sub
repz
imul
nop
aaa
xor
push
mov
xor
out
out
jne
mov
cmp
xchg
fabs
notl
call
test
icebp
add
rol
loop
push
xchg
xchg
sub
add
push
stc
dec
push
es
call
jo
xchg
shrl
adc
icebp
cmp
jnp
punpcklbw
fcompl
mov
cmp
arpl
or
fisubrl
out
sbb
mov
cld
jbe
bound
sbb
inc
push
adc
adc
pop
inc
xchg
and
xor
push
stc
in
pop
int
mov
mov
add
pushf
dec
sahf
jo
inc
add
adc
es
lret
push
es
cmp
and
push
aam
arpl
popa
sbb
xor
xchg
mov
mov
dec
lds
push
cmc
add
adc
lock
xor
push
adc
ds
add
dec
fstps
add
sub
imul
lods
or
adcb
push
inc
rorl
icebp
cmp
and
jbe
cmp
movsb
mov
loope
jns
sbb
sbb
mov
push
mov
fdivr
cmc
insl
jecxz
fucom
pop
push
movsl
std
or
sbb
sbb
imul
jbe
xchg
cltd
inc
subl
call
sahf
ret
lahf
push
scas
bnd
inc
popf
add
push
push
mov
inc
sbb
aaa
mov
or
test
mov
je
stc
mov
and
out
sub
lods
xchg
sub
adcl
psllq
inc
aas
and
jge
xchg
xor
sarl
into
outsb
adc
bound
pop
mov
add
jns
ds
pop
mov
mov
or
xchg
xorl
sub
fmul
ss
mov
adc
int3
daa
xlat
inc
pushf
cmp
jns
dec
pushf
loop
xor
insb
inc
jb
testb
sub
jl
pop
add
adc
mulb
add
and
clc
mov
xor
cmp
shll
xor
and
pop
add
jns
daa
cld
push
push
pop
push
movsl
lods
mov
inc
pop
pop
add
jge
lock
inc
push
cmpl
dec
scas
sbb
sub
adc
add
push
xchg
sub
orb
daa
pop
xchg
sarl
popa
push
push
fwait
mov
adc
cwtl
pop
cmp
out
lret
and
sub
mov
sti
ja
sbb
mov
mov
int
inc
mov
and
and
cmp
fstpl
ss
cltd
pop
loopne
out
jl
sbb
mov
inc
in
jbe
inc
lods
jp
je
and
ret
cmpsb
arpl
add
xlat
mov
int3
data16
roll
test
adc
jecxz
and
xorw
pop
cli
rol
rcrl
or
push
mov
lods
inc
sbbl
pop
loop
lods
cmp
sarl
int
ret
xchg
mov
push
sub
fwait
les
enter
mov
sub
scas
nop
rorl
mov
repz
ret
mov
dec
cmpsb
loopne
pop
pop
sbb
out
inc
mov
push
jg
dec
std
es
mov
test
fwait
jne
stos
jae
sub
imul
outsb
push
lret
mov
fsub
mov
jno
out
mov
js
repz
push
and
loope
pushf
push
lret
xchg
icebp
jnp
add
in
nop
jg
clc
addl
cltd
leave
in
outsb
aad
test
insb
std
cmpsb
test
js
add
sub
mov
sbb
psubusb
pusha
push
insb
mov
push
dec
sahf
shll
xchg
pop
cmp
or
lods
in
orl
packssdw
icebp
sub
je
inc
scas
jmp
pop
aad
subb
sbb
jo
in
int
mov
call
xor
repnz
cmp
push
std
ret
mov
fcomp
aam
shl
sub
aas
call
sub
mov
xchg
inc
lcall
out
cmp
xor
add
cs
leave
call
mov
fwait
adcb
pop
test
adc
ja
jo
lcall
iret
in
out
jg
dec
movsb
into
addr16
add
sub
addr16
lds
add
xchg
jg
in
int
jecxz
jge
lldt
mov
test
sbb
js
aad
fld
das
mov
jb
shlb
lahf
sub
int3
scas
dec
ret
and
iret
adc
mov
ret
ret
xchg
bound
inc
inc
dec
jmp
jmp
dec
shll
stos
inc
bound
jns
sahf
aas
popa
jecxz
iret
xchg
inc
sbb
mov
outsl
arpl
jle
std
mov
shlb
inc
mov
dec
lods
popf
mov
xchg
gs
mov
mov
fmuls
fdivr
mov
lods
inc
pop
lds
pop
jne
jecxz
and
jns
mov
sbb
cmp
rolb
lret
xchg
adc
and
xor
scas
cmp
dec
xchg
mov
fs
int3
mov
inc
push
movsb
test
test
cltd
adc
cmp
call
rolb
push
add
int3
mov
xchg
mov
insb
pop
pop
loope
inc
fwait
mov
dec
repz
repz
pop
mov
cwtl
xchg
sbb
pop
mov
sbb
cs
or
lods
cltd
shl
rorb
nop
stos
fnsave
lahf
add
arpl
xor
hlt
sbb
fadd
filds
cs
add
mov
imul
xor
mov
mov
in
and
or
push
cmpsl
jl
mov
pop
aaa
sbb
cmp
gs
add
add
sbb
push
cmp
dec
inc
inc
xchg
sbb
daa
mov
mov
lea
xchg
adc
cltd
mov
pop
mov
aad
lret
sub
test
cmpb
movhps
xchg
sub
jl
mov
xor
mov
test
cltd
mov
mov
jne
stos
addr16
lods
jnp
xor
or
shrl
incb
ljmp
cltd
ret
loopne
addr16
push
dec
mov
std
pop
mov
es
in
push
add
xor
pop
mov
std
test
outsb
cmp
push
xor
in
lods
lods
imul
or
sub
jnp
cmp
sbb
fadds
xchg
cmp
mov
arpl
or
or
sub
cwtl
mov
xchg
data16
aas
mov
loopne
jne
arpl
sbb
das
mov
in
sub
cmp
loopne
and
sub
adc
push
es
or
test
aam
sbb
jecxz
fsubrs
in
lea
out
or
sub
dec
cld
ret
fdivrl
incl
mov
ret
mov
pop
cs
xor
scas
orl
inc
cmp
sarl
cmc
loopne
inc
xor
inc
gs
fcomi
iret
xchg
stos
push
ja
shll
sahf
sahf
pop
rorl
in
popa
fistl
jl
mov
pushf
nop
aaa
in
negl
dec
sahf
mov
mov
sub
cmp
flds
and
jge
adc
pop
sbb
pushf
mov
addr16
push
imul
addl
mov
mov
xchg
mov
leave
xor
adc
addb
fwait
out
aad
negl
scas
js
movsb
rcll
repnz
cmp
cmp
ljmp
iret
insl
jne
xor
mov
sub
cmp
adc
shr
adc
enter
stos
sbb
call
lea
ret
sub
cmp
ret
dec
jnp
and
xchg
das
adcb
andb
jmp
mov
lret
cli
sbb
cmp
mov
mov
cmpsb
xchg
mov
dec
sbb
shrl
call
outsl
mov
leave
jge
or
inc
cmpsb
cmp
mov
lock
push
in
adc
inc
les
inc
sahf
dec
daa
xor
sti
pop
in
push
mov
sbb
cmp
loopne
int
adc
inc
cs
in
aam
jnp
int3
sub
cmp
cmpsb
dec
fidivl
sbb
jmp
in
mov
bound
out
fwait
fs
mov
jecxz
xor
daa
stos
xor
cmpsb
and
cmp
dec
lcall
push
sbb
in
leave
mov
xchg
arpl
shrw
negb
jmp
insb
aas
and
adc
outsl
aas
aad
xchg
out
add
inc
sbb
imul
mov
bsf
rclb
pop
and
aas
mov
mov
cwtl
fwait
sti
jmp
inc
adc
jp
push
fiaddl
sub
hlt
mov
push
rcll
in
mov
xor
leave
xchg
xchg
movsb
jle
mov
lret
pop
push
mov
xchg
jl
and
cli
lret
xchg
mov
sub
roll
repz
and
pushf
test
ja
add
jb
nop
adc
pop
cmp
mov
sub
sbb
pop
pop
fildl
dec
or
jbe
cltd
pop
cwtl
test
pop
sub
stos
arpl
sub
inc
dec
loopne
push
jno
mov
add
aad
pop
cli
addr16
push
fwait
repnz
mov
and
mov
dec
in
push
pushw
push
inc
jo
mov
jmp
je
std
iret
push
imul
mov
sub
inc
sbb
pop
decb
jb
xor
cli
push
jg
adc
loope
adcb
loope
sahf
mov
cmp
imul
adcl
outsb
sub
push
xor
gs
pop
jg
loope
leave
mov
cmp
fsubl
in
scas
pop
in
push
push
add
and
cmp
insl
jg
sti
int
icebp
sub
sub
push
pop
xor
and
push
or
pusha
out
inc
lret
pushf
xor
out
loop
dec
mov
repnz
dec
jb
inc
scas
ds
cld
adc
lahf
dec
push
or
pop
cld
add
rolb
push
push
cwtl
pop
inc
in
stc
ja
lock
lods
outsl
fldl
or
jnp
shlb
shlb
pop
jno
add
jo
ljmp
in
jae
push
hlt
mov
adc
and
je
push
mov
push
sub
fiaddl
xchg
aam
cmc
inc
mov
fistps
xchg
push
sbb
loopne
in
roll
xlat
adc
lods
mov
test
jae
jb
sub
push
sbb
pusha
shll
sbb
sub
adcb
sub
mov
bound
das
pop
mov
pop
xor
hlt
xor
dec
add
dec
fsubs
mull
test
shrl
inc
push
mov
push
outsl
jmp
pushf
xchg
je
dec
inc
jbe
xor
shrl
in
sbb
rorl
rclb
jbe
push
push
ljmp
outsl
or
mov
popf
add
addb
push
les
adc
dec
data16
inc
xchg
test
popf
das
imul
sbb
ret
jb
or
inc
dec
cmp
mov
mov
xor
sbb
orl
in
mov
pop
cmc
xor
mov
test
popf
hlt
into
pop
sahf
lds
roll
shrb
sbbl
dec
dec
cmovae
popf
in
out
cmc
push
push
es
push
mov
fidivs
mov
lcall
push
jne
clc
sbb
je
jae
adc
sub
out
stos
in
out
inc
sub
mov
cli
xor
lea
and
out
cli
jns
lret
xchg
push
lock
inc
sbb
sbb
sub
mov
daa
mov
rcrb
clc
inc
loop
movsb
loopne
mov
dec
xor
icebp
fimull
aam
push
je
pop
int3
lret
fwait
lock
out
adc
sbb
out
dec
stos
out
test
mov
mov
inc
insl
xor
cmp
push
xchg
rcrb
fcmovu
push
sbb
movsl
je
jmp
stc
scas
or
fwait
leave
jns
imul
ja
sub
movsb
xchg
jmp
out
jp
xchg
jbe
insl
sahf
dec
movsb
stos
fisubrs
mov
out
dec
int
add
insl
mov
stc
push
mov
xchg
cli
sahf
inc
mov
mov
sbb
popf
jne
pop
push
mov
and
and
cwtl
aas
aaa
pop
lcall
das
xor
mov
nop
fs
mov
shl
fidivl
xor
ds
das
stos
in
aad
sbb
outsb
xchg
pop
fisubl
mov
ficomps
rcll
adc
cmp
xchg
mov
inc
test
add
push
mov
adc
cmpsb
pop
insl
jp,pt
shlb
daa
or
cmp
jno
jno
xchg
icebp
and
aaa
std
fmulp
cmp
les
mov
sbb
loop
mov
adcb
cmp
cmp
jp
pop
sahf
cmpsl
lret
pop
xor
cmpl
movsl
lahf
jle
push
loopne
sbb
out
fldenv
fistpl
sub
mov
mov
sti
push
icebp
lret
mov
pop
mov
hlt
mov
lods
testb
xor
in
roll
out
bound
mov
cmpsb
and
and
mov
lcall
icebp
xor
movsl
jle
adc
mov
mov
pop
push
cmpl
cld
fs
jb
nop
sub
pop
push
dec
std
jbe
pop
inc
add
mov
rcl
js
shll
icebp
xchg
cmp
add
dec
das
movhps
cmpsl
push
rorl
jno
mov
lods
rcll
outsl
jg
sti
fstpl
mov
xor
mov
out
jb
lcall
lock
int
cmpsb
ljmp
mov
inc
mov
pop
aas
in
daa
movsb
enter
rorb
cmc
xor
outsl
std
xchg
pop
xor
fistpll
cmovs
std
in
insl
add
pop
adc
push
mov
or
sub
out
data16
xlat
lea
repnz
mov
inc
fldt
pop
into
mov
lock
repz
push
add
adc
shll
daa
cmpl
cmpsl
xchg
adc
mov
nop
or
push
mov
sub
add
std
xlat
pop
sub
mov
cmp
and
add
in
dec
repz
sahf
adc
mov
mov
sbb
mov
push
pop
pop
pop
lods
or
mov
add
sbb
dec
sbb
lods
je
jo
cltd
jae
dec
out
jae
mov
loope
push
daa
pop
pop
sbb
in
aaa
pushf
cwtl
nop
es
inc
jp
adc
or
add
pusha
mov
xchg
lcall
or
adc
mov
lcall
test
fstl
lcall
push
mov
or
jecxz
sbbb
lds
jle
mov
popa
add
aam
push
rolb
repnz
pop
jg
sahf
mov
jle
add
sub
xorb
push
pop
dec
imul
lds
mov
push
mov
mov
dec
add
notl
xchg
mov
mov
push
push
subl
cmpsb
and
jae
dec
test
inc
je
jno
lods
xor
xchg
adc
xchg
icebp
add
decl
xchg
sbb
test
leave
js
outsb
pop
mov
push
cmpsb
xchg
push
and
sub
cmp
inc
jle
mov
xor
adc
cmp
sbb
mov
mov
add
nop
lds
mov
add
push
jecxz
pop
mov
fwait
loope
shlb
pusha
into
xor
ret
add
ljmp
sub
test
pop
pusha
and
lods
clc
mov
mov
pop
mov
insl
fldt
mov
xor
push
call
movsl
in
bound
push
adc
cmp
jb
int3
repz
outsb
fsubrs
out
and
leave
bnd
push
jo
jp
xchg
xor
and
repnz
mov
and
jecxz
hlt
out
pop
jns
imulb
mov
inc
ret
xchg
jmp
mov
leave
std
xlat
fs
cmp
out
mov
jle
adc
fcos
addr16
sar
pop
mov
repz
and
jo
lret
xor
mov
mov
lods
mov
mov
adc
imul
adc
ds
loopne
inc
and
testl
dec
lret
enter
mov
dec
rol
movsb
ficomps
ljmp
notl
data16
inc
cs
or
xchg
xor
icebp
es
dec
dec
pop
insb
cli
cmc
or
aad
adc
xchg
push
sub
imul
pop
xchg
jle
aam
subb
jbe
popa
adc
mov
mov
sbb
cmp
inc
sbb
icebp
rorl
push
mov
lret
inc
and
ss
cli
mov
les
loopne
rclb
lods
xorb
mov
push
jge
mov
mov
gs
sub
push
jp
je
jnp
jge
and
pop
inc
sarl
loop
sbb
and
jg
and
push
int
fwait
xchg
pop
popa
or
fcoml
arpl
or
adc
mov
pusha
daa
inc
pshufw
repz
les
fwait
adc
leave
push
shrl
jmp
pop
nop
mov
and
test
cld
dec
pop
push
lods
cltd
ss
aam
enter
rcrl
jno
jnp
xlat
pop
mov
jge
and
ret
test
push
ror
push
cmpsl
fidivl
mov
loope
pop
stc
xchg
and
and
adc
loopne
into
out
jns
cmpsl
jae
jne
out
cltd
out
xor
call
and
cld
mov
inc
adc
cmp
out
cmp
ljmp
xchg
xor
cmc
cmpl
fists
stos
or
xchg
test
out
sbb
and
and
adc
xchg
call
dec
push
jl
mov
cltd
push
test
das
ficomps
jp
jbe
lock
jae
pop
daa
or
dec
or
hlt
pop
adc
scas
lahf
popf
sub
jb
loop
jecxz
jle
scas
mov
push
mov
icebp
inc
rcrb
in
xchg
std
xor
addb
inc
pop
push
cld
ret
rcl
or
out
or
push
shrl
es
ljmp
insb
mov
adc
jl
mov
adc
jg
hlt
dec
mov
sub
xchg
in
aam
pop
lods
mov
xor
xor
cld
std
mov
out
adc
iret
jnp
mov
push
stc
xor
xchg
pop
aad
fs
pop
ret
sti
lock
mov
and
mov
mov
inc
inc
clc
lds
stos
popf
out
sbb
cmp
jns
sbb
fsubl
and
repnz
mov
fnstenv
mov
int3
xor
rclb
jnp
cmp
mov
xor
and
fprem
jp
lea
jne
jecxz
cltd
inc
mov
sbb
dec
push
inc
push
pop
stos
mov
mov
data16
dec
orb
test
test
es
or
xchg
ret
sbb
push
movsb
sub
int3
mov
mov
insb
pop
cli
sbb
pop
test
std
cmp
xchg
sbb
cld
fsub
pop
push
fsubrl
push
fbstp
xchg
mov
xor
pop
bound
sbb
sbb
and
sub
add
inc
push
rolb
aaa
push
pop
cli
and
iret
mov
mov
dec
hlt
aam
lods
jecxz
iret
adcb
mov
movsl
mov
jecxz
call
inc
push
cmp
add
mov
mov
pop
jmp
sbb
sub
test
inc
sub
jns
stos
out
out
loop
popf
incb
in
lcall
arpl
loope
int3
xorb
arpl
leave
andps
ret
mov
pop
add
cmp
jp
dec
jnp
loope
mov
inc
lea
jne
adc
pop
push
adc
iret
push
cmp
xor
xor
lods
test
xchg
hlt
adc
in
pop
cmp
pop
fcmovb
enter
dec
mov
insb
xchg
loop
in
lret
nop
inc
insl
fcmovnbe
xchg
outsb
push
xchg
jge
inc
lcall
pop
push
lret
aam
call
sti
inc
pop
sbb
jo
addr16
and
out
inc
mov
sub
test
std
test
nop
test
enter
mov
xchg
jp
out
adc
sbb
stc
mov
xor
mov
pop
fstpt
cltd
jb
call
xchg
stos
mov
xor
dec
xchg
dec
mov
aaa
add
mov
sahf
int
lret
loope
and
into
and
mov
pop
aad
push
push
mov
jge
or
add
fucomi
push
sahf
ret
jecxz
xor
push
insl
aad
and
push
lahf
in
leave
xor
fcmove
mov
adc
outsl
aad
mov
mov
sbb
push
int
enter
ret
push
fs
sub
movsl
pushf
push
sub
outsb
mov
das
dec
hlt
push
ljmp
jae
mov
xchg
inc
in
daa
out
xor
xor
ds
sub
pop
rcll
shlb
adc
dec
scas
lds
cwtl
xchg
push
push
imul
xor
cmp
dec
jb
mov
dec
mov
int3
xor
and
dec
xchg
testl
mov
mov
and
mov
sbb
je
dec
in
into
mov
ljmp
stos
cmp
mov
dec
cli
lcall
outsl
push
fcmove
mov
gs
mov
sbbl
ret
xchg
jbe
stc
in
ja
hlt
pop
mov
adc
fwait
leave
mov
clc
sarb
cmpl
add
outsl
push
aam
addb
xlat
rol
test
or
sbb
jbe
cs
jle
jp
mov
js
push
dec
mov
sahf
push
sbb
inc
xchg
push
pop
sbb
push
mov
jmp
add
adc
lret
cmp
ja
mov
int
sarl
clc
mov
leave
sti
lods
sar
rorl
stos
mov
je
in
lcall
shl
call
fs
cmp
push
adc
and
adc
pop
cmp
add
enter
data16
insl
pop
push
inc
sbb
ljmp
xchg
mov
inc
adc
xchg
jecxz
out
dec
mov
pop
aad
add
insl
fdivl
or
mov
and
jecxz
adc
cmc
inc
or
xchg
dec
mov
mov
das
je
jmp
cmp
int
ret
imul
fsubrl
adc
push
and
stos
jecxz
xor
paddusb
push
xor
cmp
dec
inc
or
mov
mov
inc
pop
sbb
jne
loop
jg
jb
imul
add
sbb
inc
xor
inc
push
nop
lods
mov
repz
je
xor
push
in
sbb
xchg
adc
mov
jmp
adc
dec
jecxz
jbe
inc
cltd
in
addr16
xchg
fadds
ficomps
lock
in
sbb
sti
es
das
xlat
pop
mov
imul
ja
pop
popa
pop
jle
pop
add
or
in
lcall
aad
out
and
out
dec
inc
mov
out
xchg
aaa
jmp
fs
jbe
stc
mov
cmpsb
movsb
xor
or
xchg
in
adc
mov
xchg
ja
lahf
cwtl
inc
inc
dec
xchg
or
mov
cmpsb
roll
into
rcrb
test
and
shl
shlb
aam
cmc
xor
fcoms
icebp
inc
xchg
insb
push
addr16
sti
stos
lock
jg
or
out
movsb
xor
inc
adc
xchg
mov
mov
scas
xor
mov
dec
jnp
adc
adc
outsb
pop
dec
je
pusha
adc
inc
push
push
test
sahf
inc
in
push
loop
int3
jl
or
cli
jno
pop
adc
push
cmp
inc
mov
adc
popa
sbbb
inc
mov
sub
pop
adc
mov
or
xchg
fs
add
addr16
idivb
or
or
add
pop
inc
mov
leave
adc
jl
in
push
fisubl
xchg
cmpl
add
movsb
cmpsl
or
cmpsb
data16
out
cmp
shrl
mov
gs
push
loopne
cmp
dec
jecxz
pushf
ljmp
add
cmp
popf
outsl
sbb
lds
fdiv
dec
pop
mov
loope
cwtl
inc
insb
call
inc
lret
sbb
push
inc
jg
sbb
inc
clc
jl
mov
jae
dec
and
cmp
ss
int3
arpl
push
divl
lock
push
sbb
int3
inc
repnz
out
lret
xor
sbb
insb
dec
xchg
pop
popa
sbb
mov
xchg
jb
inc
jmp
std
mov
ljmp
xchg
cmpsb
gs
outsb
push
ljmp
jge
addl
jno
sub
fstpl
pop
and
nop
pop
popa
push
mov
adc
mov
dec
lret
mov
repz
push
out
mov
lahf
insl
test
and
cmpsb
aam
or
out
push
fldt
jae
in
cld
inc
repz
dec
add
jno
sbb
mov
dec
outsb
dec
xchg
in
mov
inc
xor
mov
jmp
mov
sub
hlt
pop
mov
cmp
add
mov
out
out
pop
mov
cli
sarb
sub
lock
sahf
push
out
push
inc
in
imul
sahf
sub
mov
and
xor
imul
lahf
sbb
fucomip
out
insb
xchg
das
fiaddl
and
jne
rcll
pop
add
testl
mov
mov
jl
xor
fsubrs
xchg
outsb
jecxz
xchg
push
jmp
push
mov
xchg
data16
jb
loope
adc
popf
add
push
cli
out
mov
movsl
pop
rcl
call
dec
sti
dec
sub
cs
push
inc
adc
es
gs
insb
cmp
in
out
popf
push
testb
and
hlt
or
mov
xor
push
xchg
icebp
repnz
pop
mov
sbb
popf
clc
or
pop
hlt
fists
pop
mov
cmp
pushf
cmp
popa
dec
imul
lea
add
sti
loope
xchg
cli
in
adc
and
inc
pop
sub
ret
scas
inc
jl
pop
mov
push
lcall
insl
iret
call
adc
repz
cltd
push
push
xor
sub
inc
in
mov
insl
leave
jge
or
add
xor
aad
lods
mov
cmp
out
loope
push
xorb
movsl
das
adc
pop
out
das
or
sbb
das
mov
add
xchg
inc
rolb
mov
mov
les
sbb
shr
outsl
pop
cmp
xchg
sub
sub
movsb
jle
ljmp
add
cld
cmpsl
push
inc
test
lea
std
mov
cmpsb
jle
add
lret
xor
dec
add
sbb
dec
repz
cs
fchs
arpl
aas
and
mov
pushf
inc
inc
add
ss
jmp
mov
aam
lock
and
sub
dec
xchg
mov
mov
subb
movsl
mov
stos
push
data16
les
enter
dec
stos
imul
loope
xchg
inc
jne
mov
xchg
dec
jmp
or
mov
movsl
dec
pop
fnstsw
and
lcall
cmp
adc
mov
out
and
pop
or
stos
cs
sbb
imulb
xchg
stos
dec
xchg
scas
das
xchg
dec
pop
test
sbb
fisubrl
dec
mov
jnp
or
repz
fimuls
or
inc
mov
ds
xchg
sarb
xor
push
and
pop
inc
sbbl
test
xor
and
sub
mov
add
mov
scas
and
mov
fisttpl
aad
jo
xchg
std
out
dec
les
lahf
in
cli
add
iret
adc
xor
jnp
fnsave
sbb
dec
stos
xor
pop
fisubrs
lods
dec
cmp
sahf
xchg
cwtl
add
sbb
mov
fsubrp
jne
loope
xor
cmpsb
into
arpl
pop
xchg
ret
push
jecxz
jne
fcmovu
jmp
aas
rcrl
sbb
in
push
fists
and
jnp
in
pop
mov
imul
pop
jnp
xor
add
xor
lcall
lcall
pop
idivb
xor
les
pop
movsl
insb
mov
mov
and
or
cmp
je
mov
outsl
imul
pop
testl
push
add
fnsave
xchg
sbb
add
xor
add
dec
xor
clc
dec
shl
ss
cmpl
lret
add
icebp
adc
mov
daa
adc
xchg
pusha
mulb
lock
and
in
fildl
push
nop
or
cmpsl
scas
shll
inc
sub
mov
add
xlat
stc
sti
jae
pushf
inc
mov
test
in
loop
sbb
aaa
adc
or
or
sub
add
jns
mov
addr16
push
cwtl
xor
or
jbe
addb
jge
arpl
bswap
xor
daa
orl
jo
pop
sbb
sbb
jb
jge
xchg
pop
mov
push
leave
or
inc
xlat
inc
pusha
push
mov
dec
data16
inc
call
mov
dec
pop
add
shll
pushf
shl
lods
stc
jecxz
jle,pn
sub
pop
push
cld
jp
enter
ljmp
sti
dec
das
mov
sub
jns
lea
jb
xor
js
add
test
lret
mov
adc
arpl
xor
push
imul
stc
mov
rolb
mov
xor
stos
inc
popa
xchg
outsl
dec
pop
je
jae
adc
out
pop
enter
shrb
fisubrs
sar
mov
test
fs
or
leave
aaa
cmpsl
and
loopne
cmp
outsl
and
insb
popf
jge
fnsave
sbbl
xchg
sarb
std
pop
into
sbb
xor
jg
add
sub
insl
test
ret
pushf
insb
repz
pop
mov
insb
inc
push
mov
daa
aaa
cmp
xchg
lods
mov
sar
pop
push
dec
subb
iret
inc
icebp
mov
flds
adc
xor
popa
jno
mov
mov
movsb
push
int
mov
mov
mov
outsb
push
mov
filds
and
cmp
push
cmp
pop
dec
xor
std
jbe
cmp
je
cwtl
adc
xor
cmpsl
fisubrs
add
mov
push
cmc
sub
pop
push
test
mov
xchg
add
and
cs
gs
dec
and
add
cmpsl
sub
sub
nop
jb
repnz
inc
sub
pop
cmp
add
in
shrb
jb
rcrl
fists
jge
call
and
mov
adc
movsl
pop
mov
lock
inc
add
mov
scas
xorl
inc
in
inc
mov
adc
ja
pushf
dec
jp
fdivs
push
xchg
xchg
lods
rorl
out
cmpsl
dec
cli
ret
movsl
dec
mov
pop
or
mov
fbstp
add
mov
xchg
lret
or
cld
dec
dec
dec
clc
movsl
pop
mov
cmp
cld
xchg
mov
out
jmp
ja
push
js
pop
clc
pop
jecxz
outsl
lds
imul
adc
pop
andb
fucomip
push
jg
loopne
jl
or
mov
divl
loope
fwait
pop
jb
pop
cmp
adc
sahf
and
loopne
and
test
or
sbbb
lahf
inc
ret
xor
test
lahf
cmc
cli
test
outsb
lret
push
push
mov
add
stos
ljmp
mov
out
repz
add
push
sbb
out
subb
inc
xchg
andl
test
aaa
push
dec
gs
or
jne
stos
shrb
mov
fwait
cmpsl
mov
xor
sbb
repnz
sbb
mov
sbb
lds
push
aad
or
fmuls
mov
stos
jne
mov
clc
cltd
xor
mov
iret
jne
ljmp
mov
pop
aas
sub
jp
and
push
push
stc
mov
aas
out
or
inc
and
das
and
jmp
cmc
mov
push
cmp
jb
imul
jle
loopne
sbb
xchg
sbb
xchg
pop
lret
rclb
in
dec
fdivrs
cmp
cmp
mov
cmc
je
push
shrl
mov
xchg
xchg
xor
cmpsl
push
push
rcrb
mov
inc
xor
jnp
das
fsts
cld
insb
data16
repnz
es
fiadds
loopne
rolb
jmp
test
mov
mov
xchg
cwtl
sahf
int3
test
out
or
ds
inc
push
mov
lcall
jl
xor
imul
mov
and
jge
mov
sbb
sub
ficoml
pop
les
mov
add
in
dec
ljmp
in
daa
mov
imul
mov
push
xlat
push
je
pushf
clc
add
out
rorl
inc
adc
pushf
sub
test
adc
icebp
lods
loopne
pop
push
leave
mov
les
iret
cmp
jnp
scas
add
into
adc
mov
imul
not
addr16
pop
mov
mov
inc
push
clc
cmp
add
outsl
or
in
testb
aaa
iret
or
mov
jae
jnp
out
sub
roll
and
adc
jle
mov
mov
adc
adc
jo
fcomps
loopne
mov
adcb
jp
jb
scas
pop
push
adc
into
mov
std
inc
cwtl
rorl
insb
jae
push
pop
outsl
lea
in
xchg
lret
je
jle
loop
ja
test
dec
jmp
ljmp
ds
inc
or
xchg
lahf
push
fnsave
mov
sbb
iret
cmpsl
mov
test
inc
mov
xor
or
jbe
ret
ret
adc
les
xchg
mov
rdpmc
dec
sub
xlat
sti
sbb
inc
mov
jo
test
jl
clc
enter
ljmp
mov
in
popf
dec
push
cmpsl
xchg
mov
shlb
or
inc
in
mov
add
in
jne
icebp
sub
jns
xor
push
pop
mov
ljmp
icebp
mov
mov
dec
decb
minps
pop
cwtl
std
jbe
mov
std
outsl
sar
or
gs
or
dec
jge
mov
dec
sbb
inc
xchg
dec
je
cwtl
scas
jnp
add
je
xchg
jb
pushf
pop
movsl
lock
dec
push
sub
xchg
rcr
adcb
lea
push
cmpsl
xchg
dec
sub
inc
sbb
or
test
int
pushf
pop
cmc
jl
xorl
pop
subl
push
adc
mov
insl
adcb
leave
push
call
jo
xor
mov
mov
cld
mov
int
and
into
dec
out
ret
xchg
sub
aam
cmpsl
cltd
push
out
rclb
sub
xchg
xchg
icebp
push
fidivs
xchg
xor
pop
shll
mov
cmp
jp
push
test
hlt
orl
scas
lahf
mov
fs
mov
out
or
fnstenv
cmp
test
fidivrl
adc
loopne
je
out
dec
out
push
pop
fisubrs
repnz
lahf
cwtl
rcrb
aad
fistpl
jnp
aas
or
add
testb
xor
sub
es
ror
mov
leave
xor
lea
adcb
push
pop
clc
push
lods
or
push
xchg
hlt
out
pop
popf
sti
mov
rcrb
jle
loopne
sahf
jae
frstor
ljmp
test
push
lret
lahf
or
sub
fcompl
or
aaa
jecxz
out
or
sti
fwait
pop
cmpsl
inc
mov
add
daa
push
mov
lret
xlat
adc
sub
aam
ret
mov
jg
jmp
add
cmpsl
lret
adc
sub
maxps
jns
incl
xlat
sub
cmp
lahf
mov
lret
xor
rolb
and
and
add
sub
push
dec
ret
xor
xchg
pop
ret
push
mov
xor
sbb
sub
mov
push
andb
adcb
mov
mov
ja
inc
icebp
or
jg
fwait
ret
adc
test
push
hlt
pop
aam
leave
adc
cmpb
nop
in
into
dec
inc
mov
outsb
imul
aaa
push
and
repz
pop
imul
sti
stos
sbb
fiaddl
or
int
inc
lods
push
ds
aaa
mov
xchg
cld
lret
iret
push
les
inc
les
sbb
xchg
je
cmc
mov
or
mov
inc
bound
stos
out
es
mov
inc
or
and
sbb
cltd
loope
sub
mov
fcoms
mov
nop
xor
gs
jg
dec
jmp
push
into
lods
out
pop
mov
lret
inc
aas
dec
inc
or
push
lods
cmp
cmp
xchg
or
lock
pop
lods
inc
push
jo
dec
addr16
push
cmp
add
sbb
lahf
data16
imul
push
sbb
add
lea
stos
xor
add
ss
inc
popa
test
xlat
mov
sbb
adc
bound
jae
call
jnp
aad
aas
neg
add
jle
mov
into
stos
inc
push
jbe
arpl
dec
jb
sbb
sbb
add
xor
push
in
test
push
pop
pusha
lods
cwtl
or
loopne
movsl
dec
out
inc
push
jg
xor
leave
add
xor
fcomi
mov
add
shl
mov
sub
ss
jae
lea
cmpsl
or
add
sub
fcmovbe
shrb
lcall
mov
ret
sar
mov
mov
shl
out
jae
cmp
mov
neg
shr
repz
sahf
nop
cmc
fistpll
push
in
or
daa
inc
push
jge
adc
loop
dec
cld
and
mov
pop
shlb
and
push
test
in
pop
das
aam
xchg
add
and
mov
sbb
adc
repnz
xorl
daa
test
cmc
xor
dec
mov
xor
and
add
cs
stc
sub
ret
pop
jae
stos
jno
xchg
aam
sub
popf
or
cmp
add
roll
pop
fs
pop
xchg
push
xor
insl
mov
outsl
and
test
or
pop
aas
ds
fwait
jp
sub
jnp
fsubl
popf
mov
push
cmp
cli
sbb
add
jcxz
mov
xchg
mov
mov
mov
frstor
clc
out
test
js
and
push
inc
xchg
test
loope
push
and
js
jp
cmpl
pop
out
lods
cltd
arpl
into
mov
add
jne
clc
lds
push
sbb
adc
push
es
mov
pop
xchg
inc
shrb
xor
cmp
paddsw
outsb
sub
pop
sbb
nop
adc
xchg
sub
inc
cmpsl
mov
push
jo
adc
push
loope
fisubrs
pop
clc
sub
es
sbb
xor
in
xor
aas
pop
adc
jmp
jle
loope
cmp
data16
cmp
imul
add
int
pop
js
fimull
or
data16
mov
cmp
xchg
sub
ret
bound
scas
int
jne
xchg
mov
xor
mov
jmp
into
jmp
jnp
leave
mov
aam
imul
dec
add
cli
jae
addr16
xorb
and
mov
sarl
cmp
data16
lea
rclb
jmp
adc
adc
jle
add
fiadds
fidivrl
test
sahf
daa
test
imul
call
sbb
mov
and
xchg
fcom
sub
movsb
rcrl
fmul
addl
jecxz
inc
jmp
hlt
pusha
adc
inc
ss
xchg
jle
mov
and
icebp
pop
scas
test
mov
cwtl
adc
dec
fiadds
cmp
jmp
adc
dec
sbb
aaa
cmp
xchg
sbb
add
cltd
or
test
js
call
jno
add
test
cmp
loop
jmp
jp
mov
les
shr
sub
add
sbbb
js
xorl
aas
inc
das
mov
sbb
adc
mov
adc
xchg
mov
or
cmp
xor
hlt
mov
push
push
and
mov
aas
shll
mov
scas
sbb
pop
pop
pop
push
or
lods
sahf
and
dec
sub
das
adc
add
cwtl
pop
mov
cs
icebp
or
out
or
dec
aas
cmp
or
test
lods
jecxz
lret
aaa
out
mov
adc
cli
jl
sbb
xor
dec
or
mov
in
scas
or
and
dec
aaa
push
in
mov
add
add
push
inc
push
dec
and
lret
les
mov
addr16
es
push
mov
jae
insb
pop
fs
loopw
push
mov
enter
popa
out
pop
add
or
pop
dec
inc
dec
scas
lcall
or
sahf
test
fidivrl
mov
push
push
add
sub
roll
test
xchg
jecxz
add
jne
mov
xor
dec
push
push
mov
cmp
mov
ss
divl
cmp
lea
pop
push
inc
or
inc
sbb
js
or
push
rcl
ss
push
cmp
mov
cli
inc
popa
imul
dec
jp
xchg
bound
lret
sub
ror
pop
lock
xor
pop
outsl
loop
ds
and
add
scas
mov
mov
push
in
dec
lock
jno
shll
stos
loope
stos
mov
lret
das
fwait
and
fidivl
pushl
arpl
mov
push
jle
int
scas
into
pop
sub
in
fcmovbe
ja
stos
mov
fisttpll
test
inc
loop
call
lods
mov
push
imul
fildll
xchg
mov
loop
mov
pop
lret
push
pop
out
andl
int3
push
icebp
xchg
adc
dec
cmpsl
push
push
xchg
popf
popa
cmp
inc
push
mov
push
jae
shlb
or
repz
push
mov
pop
cmp
mov
cltd
stos
sti
add
push
jg
and
icebp
pop
xchg
inc
pop
ss
inc
cmp
cmp
mov
pop
cmpsb
adc
lret
fldenv
das
mov
sahf
sbbl
lret
popf
cmp
addb
sbb
mov
daa
out
jbe
push
add
shll
popa
rcrl
mov
aam
stos
fisttps
fwait
cmp
ficoms
movsb
clc
ret
scas
xchg
cmp
cmp
nop
enter
push
push
shlb
dec
aad
jp
mov
pop
dec
pavgw
xor
jmp
push
lock
and
mov
sub
xchg
add
fadd
in
rorb
push
mov
xchg
outsb
push
dec
ffree
data16
xor
xor
push
inc
cli
or
xchg
icebp
scas
pop
push
cmp
sub
push
shll
inc
movsb
xor
and
flds
adc
add
mov
test
mov
cmp
es
add
mov
aaa
je
pop
push
inc
pop
repz
push
orb
adc
roll
push
mov
push
mov
mov
std
out
push
pop
cmpsl
add
jne
push
imul
jl
xchg
jne
insl
adc
cmc
push
cmp
add
es
xor
aam
bound
data16
cwtl
loopne
inc
push
xor
loop
nop
push
cmpsl
aam
std
and
lahf
sbb
ss
mov
push
sbb
sub
xor
in
adc
mov
add
mov
pop
mov
int3
cmp
scas
sbbl
mov
bound
stos
fstps
push
dec
dec
out
arpl
push
sarb
cli
jecxz
xchg
pop
or
jns
adc
dec
iret
inc
cmpsb
push
adc
pushf
sub
stos
dec
orl
mov
dec
push
xchg
jnp
push
push
shl
jmp
push
fldcw
xchg
bnd
aaa
xchg
dec
and
loopne
xchg
ret
mov
xlat
mov
gs
frstor
pop
or
fincstp
stos
cs
xor
xchg
dec
pop
jno
mov
movsb
push
xor
mov
movsb
xor
outsb
mov
inc
pop
les
fldt
arpl
out
xchg
ds
subb
mov
das
orb
in
lods
jns
cmp
imul
fadd
push
and
shr
and
loop
cmp
add
push
pop
jb
dec
fs
dec
jle
ret
dec
add
test
int
stos
and
mov
pop
pop
push
xchg
jmp
mov
xchg
sub
dec
and
or
jae
xchg
or
or
sbb
push
js
in
push
stos
jle
push
jp
pop
es
leave
xchg
mov
out
adc
pop
add
scas
pop
lds
mov
pop
or
push
and
mov
out
jo
inc
test
fsubrl
cmp
in
lahf
sub
dec
or
and
in
test
mov
inc
test
jbe
jp
fnstcw
cwtl
mov
dec
out
pop
daa
repz
clc
sub
add
lret
leave
xor
cmpsb
leave
mov
iret
cmc
adc
pop
in
sbb
xor
xor
shl
pushf
lds
pop
fmuls
iret
or
cmp
adc
ret
sbb
out
xchg
mov
rcll
xchg
cmp
outsl
mov
cs
push
dec
jge
pushf
dec
stc
jle
lea
mov
lcall
test
jmp
sub
sub
push
cmp
cmc
mov
and
or
imulb
or
or
rcl
sti
jbe
cmp
pop
scas
cld
mov
mov
outsb
ja
push
fistps
aas
int3
mov
rcrl
pop
cmp
imul
test
es
loope
insl
xor
jae
mov
lret
jl
mov
hlt
stos
push
mov
xor
mov
int
push
incl
lcall
dec
fildll
xor
mov
xlat
add
int
dec
add
pushf
mov
sar
out
enter
mov
popf
pop
bound
call
jbe
or
mov
rorb
pop
lods
test
or
push
je
push
pop
test
ret
jle
cmpsl
cli
sub
sub
cmp
jne
dec
sub
test
cmp
or
cld
add
xchg
rclb
stc
and
xor
xchg
or
xorb
adc
sub
loopne
and
push
fistl
mov
xlat
jnp
test
xor
gs
inc
pusha
xor
in
test
aam
test
dec
repnz
cmp
or
add
je
inc
pop
pop
pop
sub
je
xor
mov
cmpsb
dec
sbbl
lret
insl
dec
or
pop
sbb
adc
scas
mov
in
mov
arpl
lock
pop
stc
sbb
or
stos
adc
mov
xchg
inc
bnd
or
mov
loop
sbb
push
insb
sahf
pop
fmull
push
pop
hlt
in
sbbl
cs
sti
cmpsl
dec
iret
jp
pushf
jne
leave
and
outsb
jg
push
daa
dec
lea
xchg
xchg
sub
ljmp
loopne
cli
jno
fidivl
into
ds
addr16
movsl
in
mov
ret
adc
and
push
push
scas
mov
lcall
in
lret
pop
push
test
xlat
xor
or
or
fisttpl
leave
fwait
stos
xchg
fincstp
dec
test
cli
insl
popa
cmc
daa
xchg
mov
repz
jno
jge
pop
jl
dec
adc
inc
sbb
sbb
fists
and
xor
test
push
mov
push
or
push
sahf
roll
pop
mov
lret
and
mov
dec
leave
jp
add
js
cmp
enter
mov
aas
fwait
popa
dec
js
inc
adc
std
sbb
movsb
mov
dec
xor
mov
add
lock
aam
inc
mov
dec
push
movsl
jo
test
ljmp
mov
sbbl
das
or
ja
pop
adcb
bound
sub
outsl
repz
dec
ret
dec
gs
rolb
leave
outsb
pushf
pop
lea
dec
adc
pop
xchg
and
xlat
dec
std
shrl
or
cmp
xor
into
sbb
outsl
scas
stos
mov
pusha
test
out
out
xchg
cwtl
push
imul
jp
pop
rep
sbb
rol
rcl
mov
xchg
mov
cmp
cmp
add
mov
subb
dec
xchg
push
movsl
inc
stos
inc
test
out
and
mov
rcll
mov
andl
int
fiaddl
sbb
jae
loope
sub
stos
fstpl
cmpb
cwtl
subb
or
and
and
mov
test
popw
dec
daa
and
aas
xor
or
rorb
shl
lcall
jae
cmp
xchg
push
fsubrl
ficoml
add
mov
fildl
cmc
into
adc
ret
in
sbbb
xor
gs
inc
xor
push
aad
adc
movsl
ret
xchg
loope
push
mov
xor
addl
das
pop
inc
sub
enter
adc
clc
test
dec
pop
xlat
adc
mov
insb
rcrl
or
jecxz
jnp
nop
cmp
adcb
push
mov
xor
mov
dec
adc
cld
cmp
leave
fnstsw
out
push
inc
enter
lcall
imul
ret
add
add
and
push
sbb
jp
test
cmpsl
shlb
fldcw
test
xor
jns
lret
push
push
adc
imul
pop
mov
pop
loopne
cmp
negl
xor
pop
pop
pop
pusha
adc
jae
mov
sub
push
jecxz
mov
inc
test
mov
cwtl
cmp
mov
push
fsubl
jo
repz
pop
cmp
sti
shlb
push
mov
movsb
pop
mov
dec
cltd
mov
cmp
sbbb
pusha
ss
shrb
decb
cmp
in
sub
mov
popa
mov
mov
fsubrl
mov
std
int
or
or
sub
jnp
inc
loope
or
mov
mov
push
push
pop
xor
cld
adcl
scas
sub
cmpsb
movsl
sbb
inc
daa
mov
sub
and
push
adc
daa
push
es
sarb
xor
jle
xchg
add
lock
and
test
and
les
cmpsb
movsb
fwait
xor
adc
in
pop
or
add
aaa
gs
cltd
push
dec
out
and
imul
repz
ljmp
ja
pop
sahf
dec
sub
jnp
and
mov
pusha
sbb
xchg
popf
push
sub
mov
notl
rcrb
inc
mov
lahf
push
jnp
inc
mov
add
mov
inc
lods
or
and
popf
rolb
testb
roll
out
into
daa
xchg
sub
shll
jl
dec
push
test
out
push
movsb
jg
lcall
adc
out
jo
cmp
cmp
imul
or
sahf
loope
lret
mov
jo
pop
pop
inc
enter
or
adc
inc
enter
or
adc
push
push
add
dec
sbb
lock
mov
and
enter
and
mov
dec
push
xchg
fadd
or
cmp
adc
or
jp,pt
pop
je
gs
outsb
or
jecxz
in
xchg
inc
leave
adc
outsb
pop
sub
jne
jp
cmp
or
jo
cmp
push
cs
insb
cmp
int3
cmpb
jns
adc
dec
es
sbb
shrb
mov
call
or
inc
fcmovbe
outsb
mov
outsl
cmp
and
sbb
sahf
lret
pop
sub
hlt
rcll
mov
outsb
push
jb
add
daa
push
mov
out
orb
daa
jg
js
xor
push
and
lcall
inc
pop
aaa
dec
mov
daa
test
icebp
xorb
in
jmp
sahf
push
push
adc
iret
sub
addr16
mov
lret
mov
mov
outsb
movsl
lock
adc
jno
adcb
cmp
sub
mov
pop
insl
sub
pop
and
repnz
in
arpl
jl
xor
inc
outsb
mov
movb
sbb
lahf
jge
xor
and
rclb
adc
push
xor
ds
outsb
movl
insl
int3
jecxz
cmpsb
dec
jmp
clc
decb
sbb
frstor
rolb
mov
int3
push
cwtl
icebp
fucom
push
in
lock
fsubp
leave
push
or
loopne
mov
jo
pop
arpl
mov
xor
sub
jle
cld
sub
aad
xchg
cmp
jnp
hlt
insb
mov
sbb
addr16
call
push
out
popf
dec
loop
sbb
sub
sti
imul
adc
data16
lret
push
lret
sbb
dec
ss
sbb
adc
pop
mov
dec
cmp
pop
jge
push
fwait
mov
cmp
out
aaa
dec
test
jge
push
cmpsb
into
cmpsl
inc
mov
add
test
sub
xchg
mov
inc
and
push
pop
jmp
scas
mov
in
pop
jo
cmp
addb
fld
mov
hlt
nop
mov
cmc
xchg
je
inc
push
into
addr16
push
mov
inc
push
jle
out
ljmp
leave
neg
out
xor
lahf
mov
xchg
fwait
jbe
imulb
xchg
pop
inc
sahf
push
daa
dec
les
add
cmpsl
add
sti
sub
lret
popf
pop
add
inc
or
xor
shlb
mov
jge
mov
xorb
loop
xchg
loop
cwtl
or
xchg
popf
jmp
add
mov
and
jmp
xchg
call
and
out
push
cmp
call
scas
cld
mov
testb
rcrb
xor
cmp
sub
sarb
or
pusha
sub
ss
adc
pop
mov
sbb
std
in
cli
jl
xor
push
mov
lods
push
stos
mov
xchg
push
jo
stos
mov
dec
inc
jo
imul
gs
jnp
cmp
cmp
push
scas
into
dec
int3
add
out
in
adc
sub
jmp
fsubr
std
or
outsb
jne
fstps
scas
push
add
sbb
out
mov
adc
out
loopne
stos
mov
xchg
push
xor
cmp
and
test
movsl
in
mov
push
jne
dec
or
dec
es
or
xchg
fistpll
insb
inc
out
idivb
xchg
ror
inc
xchg
xchg
pop
cs
aam
mov
mov
popf
pusha
pop
or
push
mov
add
cli
outsb
pop
adc
aaa
push
in
jge
push
leave
in
shll
sbb
pop
and
aaa
imul
add
roll
xchg
xchg
pop
jo
push
int3
or
mov
mov
sub
fsubs
mov
outsb
roll
stc
rorb
int
clc
dec
push
bound
shl
jg
sub
dec
js
or
or
or
shrb
sbb
cmc
mov
test
psubb
jb
pop
aam
mov
cs
and
pop
outsl
dec
fildl
sbb
and
jp
dec
dec
std
test
movl
cwtl
hlt
gs
test
lret
mov
mov
loope
xchg
xchg
mov
aaa
and
xchg
inc
mov
pushf
jnp
icebp
xchg
push
mov
insb
jp
or
out
fstpl
clc
loopne
or
cli
sahf
je
xchg
jle
cltd
rclb
faddl
cmovno
and
mov
cmp
jp
adc
out
das
pop
mov
jp
sarl
jmp
fidivrs
js
int
dec
cltd
dec
jle
push
mov
frstor
xchg
daa
outsl
stos
add
add
aam
xchg
out
inc
mov
movsb
repnz
cmpsb
es
adc
or
in
sarl
sub
clc
sub
or
ds
int3
popf
pop
ja
mov
pop
push
xor
pop
lcall
out
and
or
or
sbb
xor
sbb
in
and
test
mov
js
pop
loope
push
ss
cmpsb
js
sarb
dec
sbb
mov
add
icebp
push
add
scas
mov
std
cmp
scas
xor
add
cli
popf
movsl
arpl
and
inc
nop
stos
scas
insl
push
sbb
dec
lcall
fwait
gs
jno
in
shrl
loope
mov
mov
psubsw
and
ljmp
das
jbe
stos
arpl
adc
stos
data16
adc
ljmp
arpl
ljmp
call
mov
jecxz
mov
sub
xor
sub
sbb
inc
jbe
adc
cmpsb
jne
inc
cmpsb
mov
pop
xchg
lcall
mov
xchg
je
movsb
lret
movsl
imul
mov
or
mov
jo
lods
cmp
hlt
xchg
enter
cmp
push
stos
leave
push
or
loope
inc
lcall
sahf
in
jns
xchg
mov
jmp
cli
xchg
adc
insl
iret
inc
subb
xor
sub
xor
xchg
push
xor
sub
inc
sahf
dec
add
dec
icebp
adcb
push
xchg
js
sub
mov
insb
sbb
cs
punpckldq
mov
cli
pop
push
mov
stos
sub
push
lret
rcll
fdivl
fxch
das
mov
xchg
aam
mov
pop
pop
dec
adc
insl
mov
xchg
sbb
inc
jle
lock
mov
mov
shr
cmpsb
cltd
sub
psubsw
in
sahf
sbb
mov
sub
dec
jg
mov
aad
inc
stc
add
or
hlt
mov
into
jmp
mov
lock
inc
xor
pop
xor
pop
shrl
mov
popa
imul
xor
xchg
mov
xchg
out
loope
jns
mov
jl
pop
shlb
ret
sbb
xor
mov
xchg
cmp
or
jp
xchg
fxam
xchg
sbb
mov
jno
daa
xchg
sbb
or
fwait
jge
mov
adc
or
or
mov
cmp
shl
and
mov
int3
pop
or
cmc
test
cmp
fldcw
cmp
dec
sub
jne
addr16
sbb
add
cmp
addr16
arpl
cmpb
out
mov
sub
cli
add
mov
and
xchg
mov
push
outsb
popf
lret
push
or
xor
out
pop
and
xchg
inc
sub
mov
adc
dec
sbb
sub
mov
mov
push
test
lock
or
stc
xchg
adc
decl
mov
inc
lcall
out
into
pop
jo
out
xchg
daa
sub
or
ficompl
jl
hlt
or
mov
inc
xor
mov
dec
ss
repz
xchg
sub
shl
clc
xor
xchg
mov
cmp
pop
repz
cmpsb
xchg
imul
outsl
jae
adc
mov
test
cmp
xor
dec
cmovle
xorl
aam
test
arpl
inc
scas
lahf
mov
and
push
rcrl
sub
and
pop
cmp
sub
pop
inc
pop
sahf
int3
jb
and
xor
adc
jo
cwtl
push
cmpsl
test
mov
xor
push
mov
lds
sub
mov
add
sub
xor
dec
addr16
inc
mov
sti
push
das
sahf
inc
mov
dec
mov
jge
pop
jge
xchg
lahf
jge
fidivrs
xlat
and
jmp
mov
roll
lcall
adc
xchg
dec
jo
fnstenv
jp
movb
sub
movsl
xor
mov
mov
mov
push
dec
sbb
and
inc
mov
movsb
mov
xor
sahf
insl
pop
pusha
imull
repz
sbb
xlat
repz
pop
insb
dec
jne
lds
xorl
insl
ficompl
mov
mov
fcomps
mov
cmpb
adcb
lret
and
enter
xchg
adc
out
mov
gs
out
jp
jl
xchg
mov
into
jnp
and
iret
shll
xchg
xchg
jg
dec
repnz
inc
aas
jecxz
pop
sub
dec
sahf
mov
mov
js
fldl2e
mov
jno
mov
dec
or
dec
mov
jl
imul
orb
in
push
sbb
cld
call
fildl
jae
mov
pop
ljmp
sahf
xchg
jl
xor
jb
xor
xor
jb
and
jecxz
les
popf
push
add
ds
pop
iret
sbb
lods
mov
andb
or
adc
push
rcrb
mov
arpl
mov
xchg
dec
mov
xchg
cmp
mov
pop
adc
dec
jle
add
or
ret
jle
adc
call
lahf
or
pop
sub
outsl
push
adc
imul
leave
repnz
scas
inc
mov
mov
adc
pop
in
mov
adc
mov
popf
xchg
xchg
inc
mov
xchg
clc
scas
cmp
leave
mov
cld
adc
jp
mov
and
or
mov
adc
es
lds
mov
popf
pop
push
rcll
inc
xchg
in
mov
filds
enter
dec
ljmp
push
cld
mov
push
push
addr16
mov
test
mov
cs
jp
gs
mov
std
ret
mov
int
push
xor
xchg
pop
xchg
pusha
out
mov
cltd
fs
mov
loope
popf
or
jmp
and
sub
xchg
pushf
xchg
pop
fld
sti
inc
psubd
mov
sub
adc
xor
inc
icebp
jnp
mov
inc
jno
add
out
jmp
push
sub
xchg
push
aas
push
mov
ljmp
lcall
incl
mov
mov
or
sbb
jnp
loop
cld
push
sti
aas
xchg
js
jae
cmp
iret
pushl
mov
pop
leave
sahf
aam
cwtl
ss
or
outsb
lret
or
sub
lret
mov
data16
clc
movl
pop
push
jnp
jg
arpl
pop
pop
mov
cmp
mov
mov
push
inc
xchg
gs
push
sbb
lods
sahf
dec
cmp
bound
enter
sahf
cmc
data16
rorl
pop
aaa
push
jg
into
cli
into
push
sbb
cld
mov
cmpsb
mov
lret
push
pop
cmp
inc
xchg
push
xchg
mov
sbb
fadds
loope
jae
push
xchg
pushf
sbb
subb
fadds
sbb
lds
add
adc
ja
jns
push
sub
add
pop
test
subb
push
mov
and
ret
test
xchg
lahf
adc
aad
loop
rclb
mov
ja
mov
orl
xor
jl
xor
xlat
int
stos
jns
insb
outsb
pop
outsb
or
cmc
jnp
xchg
push
pslld
push
fwait
movsb
shrb
punpckhwd
andb
sbb
hlt
pop
jne
leave
lcall
out
popf
add
cltd
lcall
bound
andb
and
inc
add
jl
mov
push
cli
clc
mov
stos
daa
inc
xor
jae
sub
scas
popa
inc
sbb
sub
jp
dec
mov
add
xor
push
inc
inc
cmp
dec
lret
rcll
roll
cld
lods
xor
inc
loopne
enter
push
je
inc
dec
outsl
lock
xchg
push
test
mov
out
iret
dec
sbb
out
and
aad
int3
popf
pusha
jecxz
shrl
aad
push
sub
sbb
aas
mov
ret
ret
and
ss
add
sub
jae
aad
cwtl
hlt
sbb
call
cmp
shl
in
or
push
rorl
popf
dec
xor
in
aas
jo
dec
rcrb
cmp
lods
sub
sbb
out
xor
or
dec
push
xchg
inc
adc
cmc
push
xor
mov
daa
add
cmpsb
fsubl
adc
lea
push
les
inc
lcall
xchg
and
das
std
cmp
add
movsb
mov
lcall
push
push
test
xchg
push
push
mov
xchg
and
jae
icebp
data16
add
stc
nop
push
rcrl
mov
cmovge
mov
cld
out
or
jg
mov
jbe
jp
addl
mov
fstl
jno
lds
add
rorb
dec
add
in
push
mov
scas
repnz
insl
sbb
dec
add
pusha
cmpsb
out
ret
add
or
lahf
in
faddl
lcall
sbb
sbb
insl
roll
push
sub
add
das
mov
push
inc
outsb
inc
fidivs
fcmovbe
and
pop
sub
and
fxch
rcrb
enter
ffree
ret
adc
sbb
and
mov
insl
mov
xchg
sbb
std
ret
and
add
push
cmp
mov
push
and
xor
sub
out
xchg
add
je
inc
lret
out
mov
jnp
or
or
push
shrb
mov
jo
mov
in
clc
and
xlat
and
mov
push
imul
push
cli
add
je
add
push
pusha
adc
cmp
push
addr16
push
das
cltd
ljmp
adc
jb
insb
inc
out
negl
or
arpl
add
mov
dec
repnz
and
xchg
in
outsb
lcall
sahf
ss
sahf
lods
fistps
mov
fisubl
add
cmp
xchg
mov
or
sti
rclb
dec
fcmovnbe
test
push
js
or
mov
in
pop
xchg
ja
std
sbb
scas
ss
pop
sbb
mov
sub
fcomip
xchg
and
sbb
jbe
hlt
dec
out
outsl
movsl
pop
cmp
cmpl
dec
push
cmp
add
jne
push
push
add
lcall
add
cld
mov
mov
mov
int3
pop
inc
or
fisubs
aas
sbb
xor
mov
js
dec
mov
mov
add
negl
in
lret
xchg
mov
push
pop
mov
addl
hlt
xchg
cwtl
xor
xchg
cmp
add
cmp
mov
out
push
add
in
pop
test
fadds
shll
sub
xor
add
jecxz
or
imul
orl
sub
inc
inc
fidivl
bound
lret
xor
imulb
lahf
outsb
lea
xchg
test
ljmp
leave
cmp
sub
adc
add
stos
out
lods
jae
and
ja
mov
push
stc
pop
sbb
fildll
push
xor
in
and
cmp
xchg
mov
sub
inc
or
mov
cmpsl
pop
insb
pop
dec
fiadds
stos
pop
aaa
xor
ja
sub
push
adc
test
es
jecxz
push
jmp
jecxz
out
mov
jo
xor
testl
ss
es
pop
ja
push
add
jmp
mov
les
cmc
sub
dec
or
or
sbb
gs
sub
out
imulb
dec
ja
xchg
cli
pop
inc
stos
insl
scas
sti
mov
imul
stos
movsl
sbb
ret
sub
pop
out
popl
insl
or
outsl
lods
bound
adc
lods
pop
add
mov
or
daa
sub
mov
stc
xchg
insl
les
mov
pop
sbb
jne
fstpt
push
mov
jns
adc
cmp
and
mov
pop
aam
add
jb
add
jbe
cwtl
pop
sti
outsb
sub
aaa
cmp
ret
rcr
ss
pop
dec
in
inc
lcall
rep
cltd
dec
hlt
lock
sub
sti
cwtl
clc
push
in
in
add
jb
rcrl
bound
mov
and
xchg
jge
iret
cli
cmp
gs
jns
mov
mov
clc
mov
adc
jnp
jne
out
rolb
in
push
or
popa
mov
inc
pop
mov
rcrl
jae
mov
xchg
jae
or
jae
inc
pop
cmp
imul
mov
lretw
xchg
cmc
nop
rclb
rclb
jg
xor
daa
inc
xor
jns
lcall
lret
icebp
jg
mov
adc
cld
daa
lock
inc
inc
cwtl
lods
orl
push
loopne
mov
std
xor
loopne
sub
inc
cltd
loope
jae
pop
lds
pop
jb
faddp
pushf
mov
lods
and
sub
repz
jo
test
popa
lock
insl
jbe
popa
xchg
xchg
repz
dec
jno
mov
xor
push
sbb
jecxz
idivb
lea
int3
arpl
inc
inc
mov
in
dec
je
sub
test
xorl
adc
xor
add
sub
jne
push
cli
in
jp
cmpsl
and
imulb
js
test
pop
add
out
fdivs
ss
cmp
outsl
xor
repnz
enter
mov
pop
pop
shll
sub
sbb
jl
cmp
fadd
jp
imul
clc
add
inc
sub
jmp
pop
or
adc
or
jle
mov
cld
lcall
and
mov
loopne
push
push
or
outsb
push
sbb
jg
loop
aaa
mov
or
and
jge
xor
mov
xchg
enter
scas
aaa
dec
pop
adc
pop
sti
lock
addr16
ja
sub
xor
push
int
fdivrs
fbstp
fmuls
aaa
inc
mov
lods
hlt
jl
mov
out
mov
mov
repz
out
pushf
cmp
out
sbb
fwait
push
mov
cmp
adc
stc
test
mov
xlat
jge
xchg
enter
enter
mov
jp
push
lcall
pop
aaa
xor
ss
shrl
loope
sbb
andb
test
loope
cld
xor
cmpsl
int
cld
xchg
inc
xchg
and
pop
cmpsb
jecxz
dec
mov
in
sub
sbb
pop
test
fwait
jecxz
test
xchg
pop
aad
repnz
sbb
dec
adc
movsb
xchg
jg
popf
je
add
dec
lock
xor
jge
scas
mov
push
pop
adc
clc
dec
dec
mov
aas
mov
or
sbbb
pop
or
das
fnstsw
test
push
ficompl
push
ficomps
cmpsb
insl
jg
xchg
jae
js
lret
pop
ss
daa
mov
or
bound
lret
cmpsb
ss
leave
sbb
rorb
mov
lock
out
push
mov
or
lret
jno
cmpsb
fiaddl
sub
push
das
inc
pop
sub
push
mov
xchg
int3
or
or
xor
js
xchg
rolb
mov
jge
jle
push
cmpsb
mov
loop
push
pushf
arpl
sbb
leave
or
je
push
ja
pop
ja
mov
adcb
pop
xchg
or
cmp
cmp
subl
rorl
shrl
aam
add
shrl
jp
xchg
cmp
dec
mov
js
cmp
into
popf
lods
mov
je
arpl
gs
icebp
flds
sub
ss
and
mov
ja
int
arpl
pop
jecxz
mov
scas
in
xor
xchg
fwait
jg
fnstcw
mov
sub
aaa
cs
sbb
loop
std
dec
push
xor
adc
or
lahf
xor
loop
sub
or
adc
pop
lahf
dec
adc
mov
movsb
pop
mov
fisttpll
cmp
sub
inc
mov
push
les
iret
xchg
pop
pop
sub
scas
cmp
and
stos
jbe
in
add
mov
mov
insb
fnstsw
xor
jle
loopne
adc
jge
pop
ljmp
pop
test
push
sub
xchg
cwtl
jge
mov
lock
jge
jl
stos
mov
mov
sbb
lea
int3
jle
pop
add
sbb
in
enter
mov
adc
sti
adc
cmpb
sbb
xchg
popf
repz
xchg
sbb
pop
mov
sbb
cmpsl
sbb
xchg
aad
int
mov
int3
test
pop
pop
clc
sbb
sub
mov
push
push
jmp
outsb
jp
adc
out
or
movsb
andl
ficompl
sbb
push
inc
in
ret
nop
push
pop
xor
or
push
or
and
test
insl
sbb
cmpsb
jb
popf
sub
pop
popf
xchg
imul
imul
ja
adc
insb
pushf
scas
in
outsl
movsb
cmpsb
ss
pop
adc
lret
mov
dec
sbb
xchg
jmp
ficompl
adc
and
aas
or
int
mov
pusha
mov
mov
cmp
cs
push
movsb
popf
jmp
test
scas
stos
enter
int
int3
pushf
pop
je
jp
jl
scas
shlb
scas
inc
xchg
sahf
pop
mov
into
push
outsb
push
les
rorb
fstps
scas
mov
sbb
lods
in
rcrl
not
lods
shlb
mov
repnz
sti
mov
fiadds
jecxz
ret
inc
or
ds
and
mov
mov
adc
xor
inc
jne
mov
cld
push
mov
shlb
pop
lods
inc
aaa
pop
pop
cli
lret
rorb
jnp
push
mov
daa
pop
scas
mov
jecxz
mov
lret
dec
mov
inc
add
nop
out
mov
sub
sti
test
cs
negl
gs
mov
or
js
pop
addr16
sbb
xor
mov
cwtl
outsl
adc
aaa
test
and
dec
push
mov
sbb
inc
pop
mov
jbe
es
jp
outsl
jo
in
out
push
dec
frstor
std
push
jno
call
xor
add
into
adc
inc
push
sub
popf
or
pop
jecxz
pushl
or
sbbb
mov
jbe
jmp
test
into
xchg
daa
ss
pop
push
sbb
xor
adc
and
aam
inc
fadd
mov
ret
iret
out
iret
add
into
lret
outsb
addr16
nop
push
lea
inc
hlt
insb
cmp
jg
subl
aas
popf
add
xchg
stc
mov
das
cmp
mov
sub
adc
adc
push
in
sbb
fistps
jb
push
out
xchg
aas
or
into
and
aad
xchg
pushf
movsl
push
in
inc
pop
push
aas
scas
adc
stos
imul
js
movsb
popf
call
int
fcomp
ja
adc
pop
data16
ret
addl
xchg
ds
shrl
shll
iret
adc
aad
out
adc
imul
hlt
cmpsl
leave
sub
mov
jmp
stos
jge
or
jg
pusha
aad
outsb
dec
sahf
into
xor
stos
inc
js
lret
mov
xor
jbe
sbb
xchg
dec
cmp
mov
xchg
mov
adc
adc
sub
xchg
ret
dec
es
mov
inc
adc
loopne
pop
mov
mov
push
add
cmp
jb,pt
mov
sbb
xchg
sarb
call
pop
int3
dec
in
xlat
insl
lcall
call
inc
xor
inc
arpl
lea
test
inc
jmp
cmpsb
mov
lods
inc
inc
dec
rcr
daa
push
add
or
mov
lcall
xor
add
jno
hlt
pop
es
mov
or
xor
adc
sbb
stos
adc
jb
pop
xchg
push
dec
cmp
and
out
lods
cmp
mov
shr
lret
pop
neg
insl
adc
xchg
push
pusha
push
out
pop
sbb
push
push
push
stc
mov
mov
dec
and
push
pop
adc
mov
mov
lods
leave
xor
xor
es
adc
and
das
xor
mov
cs
pop
ja
loop
fisttps
push
jle
push
stos
jnp
add
jns
pop
fsubrs
sbb
outsl
cmp
inc
pop
mov
sub
out
pusha
mov
pop
dec
push
lret
aam
ret
jmp
xor
andl
lahf
les
ss
in
push
lcall
xlat
push
dec
test
or
outsb
xlat
scas
pusha
xchg
sbb
inc
jmp
pop
cwtl
jmp
cs
lret
push
xchg
mov
subb
das
dec
xor
inc
dec
mov
add
les
scas
fcmovu
xchg
pop
shll
sarl
lds
js
fadd
fbld
movsb
jmp
mov
pop
mov
mov
sti
sub
cwtl
push
sub
lods
jecxz
sbb
inc
outsb
aam
xor
ljmp
sbb
inc
sahf
xchg
dec
or
and
adc
inc
aaa
scas
mov
daa
push
lds
fcomps
fldcw
mov
add
mov
aas
or
mov
cwtl
xor
jle
push
or
add
pop
mov
out
mov
je
add
or
pop
ret
push
pushf
fldenv
mov
mov
in
dec
xor
rorb
mov
les
pop
sub
test
mov
mov
rolb
xchg
addr16
fsubrl
iret
sahf
arpl
and
gs
xor
mov
mov
inc
test
mov
push
push
in
mov
stos
dec
in
inc
push
cmpsb
xor
adc
leave
cmp
push
adc
cltd
jl
in
push
mov
and
pop
sbb
movsl
lret
lret
cmpsl
inc
xchg
jb
fcoml
jmp
jb,pt
orl
das
mov
jmp
out
testl
push
cltd
iret
nop
jmp
mov
cmp
test
push
mov
jnp
stos
les
enter
push
or
push
mov
and
test
push
inc
mov
ss
subb
or
and
dec
addr16
scas
aad
adc
dec
adc
jns
lahf
out
popa
movsl
shlb
aaa
and
fists
jg
push
les
hlt
adc
mov
jge
mov
jp
jecxz
adc
dec
xlat
mov
jbe
mov
xchg
repz
push
loop
sub
mov
xlat
pop
imul
ljmp
repz
insl
xchg
xchg
lahf
mov
das
test
adc
rorl
scas
in
outsb
sub
int3
aaa
test
sbb
outsl
std
enter
add
push
les
xor
fs
int3
sub
jns
jge
push
inc
mov
aam
test
lea
sbb
jb
inc
jmp
jg
xchg
cld
xchg
rcll
push
rcll
rolb
rorl
popf
and
imul
fisubrl
add
cmpsb
sub
fists
test
jae
sbb
pop
jg
loop
pop
mov
push
jo
lret
in
ja
pusha
add
cmp
aas
dec
iret
jl
movsl
inc
or
into
xchg
mov
xor
movb
mov
and
jl
fiadds
cmc
sti
stos
inc
mov
das
les
mov
jae
xor
pop
dec
jmp
insl
jecxz
rorb
rclb
mov
lret
int
and
and
outsl
hlt
out
clc
mov
or
sbb
insl
movb
aas
push
fsubs
pop
movsl
sub
or
pop
mov
lahf
cmpsl
adc
mov
aas
pop
jle
sahf
in
data16
or
xchg
sahf
cmc
dec
or
mov
iret
mov
aas
ljmp
leave
mov
pslld
imul
cmpsb
xchg
push
outsl
addl
mov
rolb
mov
fimuls
and
insb
mov
push
shlb
xchg
and
test
in
jl
cmpsb
out
ja
adc
scas
outsl
adc
orl
pop
jne
sbb
scas
scas
in
andl
sbb
mov
addr16
adc
ja
xchg
mov
dec
cmp
pushf
test
adc
add
std
mov
fmuls
or
jo
xchg
rep
adcl
mov
sub
clc
lods
push
test
sahf
sbbl
pmuludq
jmp
ja
cltd
fwait
sarb
scas
inc
stos
cmpsb
mov
or
sbb
adc
and
icebp
adc
das
pop
rcrl
ja
movl
dec
out
insl
lea
and
jecxz
or
and
notl
mov
popf
sub
push
dec
cmpsl
mov
ret
ret
lret
cmp
pop
xor
xor
popf
popa
out
and
mov
iret
das
sub
mov
cli
pop
fildl
fs
or
fistpll
flds
xchg
add
int
sub
sbb
sub
mov
xor
mov
minps
int3
in
sbb
push
lea
add
jo
sub
push
loop
xchg
mov
mov
inc
mov
cmp
in
xorl
mov
repz
mov
xlat
popf
jo
mov
das
pop
in
aad
add
in
fldt
cli
xchg
jns
js
sub
mov
xor
sub
sar
push
dec
sahf
aam
shlb
stc
in
pop
xorl
ljmp
das
cld
pop
test
add
xchg
ds
push
mov
int3
sbb
loop
pushf
sbb
fwait
scas
xchg
data16
outsl
adc
cmpsb
xchg
xchg
loop
test
and
lods
js
loop
sub
lds
push
adc
fwait
addb
mov
sub
out
inc
divl
fldt
inc
jge
lods
sbb
pusha
sub
data16
and
pop
outsb
sbb
fidivrs
daa
jl
add
scas
push
sbb
jns
inc
or
and
adc
jo
adc
ss
adc
jnp
mov
addl
or
fcmove
lret
shl
int
jg
sti
mov
pop
mov
and
pop
out
shl
jnp
jb
sub
ja
in
testl
mov
movsb
push
jle
add
fistpl
into
push
leave
lret
sbb
mov
int3
ret
cmp
outsb
sub
nop
mov
fs
mov
fists
push
mov
xor
xchg
add
dec
pop
lahf
in
sub
adc
lahf
dec
sti
inc
shrb
mov
cmp
cmpsl
sbb
sub
fst
stos
sub
rorb
aad
mov
sub
adc
or
sbb
popf
dec
aad
and
mov
sbb
sbb
and
adc
aam
fsubrs
icebp
and
pop
dec
pop
outsb
inc
sahf
cmpb
movsl
test
mov
push
xor
popa
loopne
jmp
sub
pushf
pop
nop
lret
add
mov
adcl
mov
add
push
xor
mov
adc
enter
pusha
addr16
add
jae
xor
movsb
and
cli
push
inc
dec
mov
sbb
outsl
das
and
loope
push
lock
les
popa
pushf
xor
mov
jno
xchg
pop
sub
lahf
pusha
test
pop
repz
call
icebp
sub
sbb
call
mov
leave
sbb
ret
out
push
pop
call
or
insb
xchg
push
push
push
jg
movsb
dec
ret
cmp
xchg
sbb
sub
pop
dec
or
movd
xchg
sub
mov
iret
aad
test
aaa
fsubp
fidivrs
jne
hlt
stos
fists
jo
lods
test
mov
aam
fistpll
and
stc
jp,pt
xor
mov
push
fucomip
orl
icebp
sub
leave
fs
push
in
mov
sbb
and
aad
mov
divl
bound
outsb
pop
ds
js
loop
ret
sub
sub
sub
lods
pop
or
ret
stos
push
hlt
push
rcl
dec
data16
cmp
scas
or
js
push
cs
addr16
ss
dec
mov
pop
cmc
scas
cmpsl
xchg
fsubr
cli
jns
and
push
out
sarl
gs
jae
out
mov
xchg
jle
mov
adc
xlat
lds
push
xor
addr16
ljmp
mulb
mov
fcoml
mov
cld
sbb
shlb
push
add
lock
mov
lds
stc
sti
or
jb
aad
imul
cmp
popaw
jg
pop
subb
pop
test
sbb
mov
add
jne,pt
push
inc
psubusb
push
jl
lret
outsb
in
mov
mov
jle
jp
stc
pop
rolb
in
gs
repnz
xor
dec
test
and
out
dec
jae
jne
leave
and
pop
hlt
xchg
mov
fwait
cmpb
popa
shrl
xchg
bound
inc
inc
bound
orb
out
or
cmp
dec
fs
in
imul
addb
dec
ret
out
pop
mov
cmc
push
mov
in
data16
push
mov
stc
or
jl
pop
pop
sbb
fcompl
sbb
cmpsl
ss
mov
dec
mov
ja
and
push
mov
out
cmp
jbe
fwait
adc
sub
or
fadd
and
adc
movsb
rol
out
jmp
lods
jmp
xorl
dec
mov
jmp
mulb
call
mov
cmp
cltd
mov
in
hlt
mov
hlt
xchg
mov
add
fmulp
inc
dec
inc
or
mov
lcall
imul
mov
xor
jo
xchg
fwait
call
pop
dec
fstpt
mov
push
cwtl
lcall
pop
xor
xor
cmp
mov
test
imul
mov
dec
mull
sbb
push
nop
sub
and
cmp
sub
mov
adc
mov
pop
sub
rol
xchg
out
nopl
mov
xchg
aam
mov
xchg
inc
stos
popf
sahf
jns
mov
dec
or
outsl
pop
fs
mov
add
jb
inc
xor
gs
mov
xchg
pop
sub
leave
cwtl
push
je
pushf
adc
int
cltd
in
ja
push
add
and
loope
enter
cmpb
inc
mov
mov
fistpll
in
sbb
cmp
test
dec
sbb
cli
add
adc
push
aad
aad
or
inc
sti
mov
dec
dec
mov
or
push
add
outsb
ret
mov
push
xor
out
and
inc
pop
pop
jo
xchg
out
sub
scas
js
sbb
loope
stc
jl
push
jne
cmp
fstps
xlat
jnp
add
sbb
and
and
rorl
jnp
lahf
sub
stos
cmc
and
aas
lock
es
jbe
das
mov
mov
int
imul
mov
sbb
add
sbb
dec
adc
pusha
dec
mul
shll
dec
sub
int3
add
xor
inc
inc
test
pop
imul
lds
cwtl
and
dec
or
pop
cmpsl
cmp
mov
jp
jg
push
sbb
out
call
or
aad
push
ljmp
push
icebp
popf
mov
push
addr16
jle
xor
lcall
push
adc
cmp
mov
cs
push
push
mov
data16
mov
es
mov
xor
imul
sti
les
xlat
or
hlt
and
and
add
lods
add
push
dec
and
rcrl
adc
es
leave
cmp
jmp
push
js
loop
sarb
test
rcl
sub
dec
test
loop
sbb
clc
add
jo
xor
arpl
fstp
in
sar
outsb
aas
and
repnz
adc
adc
mov
add
jno
jmp
test
repnz
jp
shll
out
add
pop
mov
or
repz
scas
mov
outsb
in
lret
test
insb
xchg
fisttpl
add
and
dec
aad
repz
clc
das
in
jnp
adc
mov
fdivrp
xlat
or
or
cmp
test
mov
iret
and
add
dec
dec
in
lret
or
adc
mov
and
cli
adc
and
je
or
lods
hlt
cmp
sub
sub
push
pop
xchg
xor
negl
test
and
lcall
dec
dec
lods
aad
ret
mov
and
jbe
cld
mov
jp
andl
vandpd
mov
les
movhlps
gs
insl
push
jae
mov
shlb
cmpsb
out
jge
fs
pop
push
outsb
jge,pn
push
and
pushf
dec
shlb
xchg
mov
in
pop
dec
mov
sub
stc
and
lahf
jg
inc
enter
dec
dec
neg
insb
sub
sub
xorl
xchg
data16
clc
cmp
mov
jns
mov
mov
mov
lods
loop
dec
jnp
mov
jno
cmc
bound
jae
mov
dec
imul
xlat
mov
sbb
jle
inc
push
int3
shl
sub
add
arpl
mov
mov
push
adc
shll
add
xchg
inc
mov
movsb
mov
movl
mov
dec
xchg
push
lods
mov
outsl
out
and
sbb
or
sbb
int3
mov
and
pop
add
loopne
cmp
inc
sub
fs
xor
mov
movsb
mul
inc
sbb
push
push
add
std
jmp
cmp
in
dec
imul
xlat
retw
and
lods
stos
loopne
fdivs
push
lahf
push
pop
push
daa
mov
sub
lock
cmc
addl
mov
jmp
mov
mov
jp
js
pop
push
lea
xchg
test
add
loope
loop
mov
push
pop
push
leave
arpl
stos
mov
test
jle
jb
ret
and
mov
imul
xchg
sbb
sbb
sar
bound
inc
cli
in
sbb
sub
jb
xchg
xchg
push
xchg
adc
and
out
shrl
aaa
mov
xchg
cmpsb
les
loopne
xchg
test
xor
shrb
inc
fyl2x
stos
lock
popa
and
cmp
adc
dec
cmpsl
mov
jmp
and
xor
mov
cmp
push
or
jmp
mov
and
ret
cwtl
lods
fdivl
jb
dec
jb
or
fisttpl
cmpsl
mov
adc
ja
mov
pop
shl
je
sbb
ljmp
mov
fnsave
bound
mov
daa
inc
orb
rcrb
enter
xchg
aam
jge
lds
xchg
add
mov
mov
addr16
sbb
stc
addr16
jns
push
test
fcmovu
mov
push
lret
mov
lahf
mov
into
cmpl
jbe
pushl
ffree
outsl
test
nop
je
cmpsb
pop
xchg
xchg
fnstcw
test
jno
in
or
xor
fwait
addb
movsb
arpl
out
popl
add
add
inc
jmp
sub
dec
adc
aam
test
push
in
xchg
mov
aam
dec
gs
and
add
sub
mov
mov
sbbb
js
dec
adc
xchg
mov
dec
inc
aam
stc
outsl
dec
add
ds
and
fisttps
fcmovnu
xchg
insb
sub
idiv
or
repnz
les
pop
xor
aas
xor
jb
in
xchg
inc
aam
sub
add
lea
mov
inc
test
dec
and
lea
jne
inc
in
jge
stos
or
pop
push
and
test
adc
xlat
ss
rcl
or
dec
aam
stos
adc
lret
in
adc
fildll
sbb
imul
cmp
loopne
jo
lret
cld
adc
test
cmp
push
flds
outsl
adc
cltd
in
adc
sbb
mov
sti
ss
pop
rclb
fbld
push
push
lret
out
add
jecxz
lret
icebp
jns
insl
out
aaa
lahf
adc
fsubr
mov
add
jp
data16
stc
popa
loope
es
sub
int
jmp
xchg
dec
mov
pop
dec
cmp
sub
mov
xchg
je
mov
jo
pop
es
add
dec
dec
pusha
fdivl
and
mov
lret
or
into
xlat
and
and
mov
stc
xlat
xchg
push
jnp
gs
pop
inc
mov
xchg
jae
ret
inc
dec
fmuls
push
jge
push
jnp
mov
lock
js
shll
push
stos
loop
lcall
jmp
mov
cwtl
test
pop
cltd
dec
shll
jp
push
cmp
dec
rorb
mov
call
pop
out
xlat
and
pop
mov
adc
add
sahf
icebp
int
sub
inc
pop
pop
daa
mov
fs
popa
pusha
push
adc
sbb
jae
jecxz
popf
std
gs
mov
mov
jne
movsl
and
mov
push
sub
mov
mov
clc
in
fdivs
xchg
aas
mov
xlat
jp
inc
aas
mov
add
jae
cmpsl
sbb
jno
imull
fucom
popf
adc
mov
lods
mov
push
add
pop
stc
sub
ret
rcrl
mov
daa
inc
aad
sarl
pop
mov
arpl
or
push
cmc
fildll
xchg
mov
mov
ds
or
cltd
jge
ljmp
add
loope
add
mov
and
jl
lds
add
pop
jb
int
cwtl
lahf
shrb
mov
aas
cmpsl
lea
jge
inc
in
mov
pop
in
or
cli
in
lods
push
shlb
jp
jb
mov
incb
mov
sub
pushf
je
xor
sub
xor
add
adc
mov
push
pop
movsb
mov
push
pop
cmpsl
and
dec
push
mov
xor
inc
mov
xor
pop
pop
pcmpgtd
leave
mov
aam
pop
popa
orb
pushf
jmp
cmp
imul
xor
in
jmpw
xor
roll
adcl
xchg
jnp
lret
in
jmp
xchg
push
xor
les
xchg
in
in
lods
fisubrs
lods
mov
data16
leave
xchg
mov
in
testb
clc
mov
lock
dec
bound
jl
sar
dec
and
aam
je
add
fs
mov
jle
mov
lods
mov
test
sbb
stos
ja
arpl
xchg
and
les
mov
inc
loop
add
mov
dec
xchg
mov
dec
mov
jl
arpl
lods
mov
sbb
movsl
sbb
out
jb
pop
in
popl
mov
shlb
sub
or
push
ss
cmp
inc
sarl
add
les
shlb
test
out
sbb
daa
out
fadds
rorl
inc
pop
pushf
jl
in
add
sti
fidivs
cwtl
sub
and
adc
test
sub
cld
or
lods
cli
push
sbb
pop
aaa
loop
shlb
insl
jge
pushf
ljmp
lds
lcall
or
shlb
add
outsb
push
scas
add
pop
bound
popf
imulb
ss
data16
sub
jns
dec
stc
mov
and
hlt
fiadds
or
adc
dec
mov
mov
jmp
stc
or
cmpsb
dec
sbb
sbb
mov
sbb
jecxz
aad
and
orb
outsb
in
cwtl
push
dec
out
insb
inc
jne
call
add
pop
xchg
int3
outsl
cmp
out
push
cli
mov
data16
jecxz
push
aad
xchg
int3
cmc
and
adc
jae
or
fisubrl
ljmp
icebp
insl
in
adc
divl
mulb
xchg
sbb
xor
xchg
dec
mov
xchg
lret
andb
fnsave
pop
addr16
dec
cmp
mov
xor
jbe
cmp
jg
pop
rorb
xchg
sbb
nop
sbb
subl
jmp
loope
pop
adc
jns
mov
out
mov
lds
adc
das
sub
sti
aaa
and
test
sarb
and
mov
add
std
or
cmp
bound
ja
pusha
dec
mov
and
add
mov
pop
cmp
fwait
popf
call
jae
xchg
out
jl
stc
inc
or
packssdw
lret
mov
push
mov
sub
clc
xor
pop
mov
push
cmp
enter
and
jnp
jp
push
push
stos
enter
rclb
int3
pop
and
enter
lods
push
push
jl
push
jmp
push
arpl
fmuls
into
notl
jns
decb
ja
adc
xor
ljmp
xchg
pop
push
loop
subb
adc
ss
push
test
dec
mov
jge
add
pop
jmp
mov
int3
es
cld
push
push
mov
ficomps
scas
pusha
xor
xor
pushf
xchg
icebp
sahf
movsl
push
mov
pop
and
loope
or
movsb
and
sbb
push
or
lods
pusha
mov
lods
out
xchg
lock
dec
scas
stos
pop
xorl
sti
pop
psubd
sbb
pusha
es
adc
loopne
pop
out
pop
out
rol
push
jnp
outsl
mov
andb
cmc
sbb
arpl
push
cmp
xchg
fisubl
sbb
cmp
gs
into
lret
jle
mov
adc
inc
sbb
jae
ss
xor
pusha
cli
mov
inc
fildl
test
push
lcall
pop
sbb
jge
stos
cli
mov
imul
imul
push
fwait
cmp
mov
or
pop
pop
mov
mov
and
cltd
fwait
sub
cmp
movsb
shrl
insl
mov
mov
sbb
add
pop
push
hlt
push
sub
aam
hlt
or
xor
cltd
jecxz
and
lcall
aas
mov
mov
stos
inc
jg
rolb
aaa
cmc
lods
test
in
into
popf
cmpb
jne
xor
jge
mov
adc
pop
in
insl
xchg
les
pushf
jbe
mov
sbb
pop
sub
xchg
sti
aas
mov
or
bound
sbb
in
test
inc
or
imul
dec
xchg
or
stos
sub
into
and
sub
or
sub
adc
add
and
mov
push
mov
adcl
aaa
enter
adc
jmp
aam
mov
pop
arpl
xchg
shr
idivb
shrb
daa
test
adc
shll
inc
or
dec
sarb
jno
cmpl
fcmove
sub
xchg
gs
hlt
fistpll
aam
jo
dec
dec
add
lcall
ret
jbe
cmp
add
bound
sub
sub
pop
xchg
inc
in
mov
ljmp
inc
push
into
sarb
sub
repz
fcomps
adc
push
dec
cmp
lcall
push
call
push
lret
cld
pop
test
xchg
or
dec
mov
and
cwtl
mov
cmc
call
icebp
sbb
jbe
inc
sub
bound
inc
adc
into
mov
popa
popf
mov
cltd
jno
pop
mov
push
sub
mov
sbb
in
and
cmp
ss
and
inc
imul
dec
adc
in
popw
push
adc
add
scas
int3
dec
jae
mov
dec
test
push
movsb
lahf
dec
pop
imul
push
jae
lret
sbb
add
fwait
xchg
xor
jle
sub
add
and
bound
repz
insb
int
lcall
jmp
push
ds
add
jmp
jp
cmp
dec
fildll
js
sub
fists
icebp
dec
pop
mov
adc
pushf
jecxz
fnsave
bound
popa
adc
dec
push
loop
les
dec
stos
test
sahf
jne
xchg
pop
pop
mov
iret
pop
bswap
out
hlt
dec
pop
movb
jg
sti
in
popa
call
lret
cmp
ds
fcmovnbe
cmp
pop
mov
sub
add
cmp
pop
xlat
add
mov
inc
mov
mov
cmp
arpl
sub
push
into
xor
push
cld
xchg
lock
dec
push
mov
rorl
dec
inc
fnstenv
push
pop
enter
mov
pop
sub
sbb
push
or
jbe
or
imul
shrl
push
and
adc
xor
sub
out
subb
in
clc
jle
pop
daa
sti
cld
outsb
js
adc
pop
xor
fildll
mov
lret
dec
pushf
jp
lods
fstpt
pop
lods
out
xchg
jmp
adc
inc
adc
add
or
or
idivl
pop
icebp
inc
sti
xchg
fbld
sub
xlat
mov
pop
test
jbe
mov
push
mov
cmp
test
neg
repz
imul
mov
popa
loop
cld
mov
std
loopne
sbb
mov
push
lcall
nop
lahf
into
test
or
and
adc
push
int
xchg
in
cmp
cli
adc
sbb
dec
push
add
rcr
mov
movsl
mov
aad
cmp
ss
les
cmp
lcall
mov
push
and
pop
test
jo
icebp
cmp
sbb
add
out
test
ret
scas
sub
xchg
int3
outsl
pop
mov
dec
jns
jno
dec
cmp
xor
dec
mov
cld
lret
dec
inc
sub
xchg
insl
into
mov
pusha
push
push
lock
inc
lods
lea
mov
int3
testb
shl
icebp
dec
lahf
or
mul
repz
adc
pop
cltd
iret
push
cmpb
dec
in
push
or
inc
xchg
in
xorl
push
ffree
dec
data16
inc
negb
dec
jmp
cmpsl
push
pushf
cwtl
out
mov
adc
loope
xchg
pop
sbb
cld
push
cmp
adc
and
add
pop
push
inc
mov
psubusb
push
enter
stos
xchg
fsts
push
mov
jmp
xchg
push
stos
std
repz
fbld
popa
jge
add
sub
outsl
push
pop
add
lods
lea
fimull
inc
or
imul
loopne
xchg
jecxz
mov
push
popf
jge
scas
or
std
sbb
mov
stc
or
cwtl
xchg
cmp
and
outsb
mov
lahf
push
hlt
pop
add
movsb
aaa
mov
subl
das
icebp
jo
dec
les
and
jae
inc
cwtl
ret
dec
pusha
jg
test
ffreep
mov
mov
push
addb
or
cli
fsubrs
push
sub
bound
add
dec
sbb
push
sbb
shlb
or
or
or
and
pop
rorb
push
mov
jg
jmp
or
je
lock
les
jns
and
test
stc
mov
jp
sahf
call
out
xchg
lahf
and
sub
add
dec
dec
and
xor
lock
mov
cmp
xchg
mov
push
push
and
cld
clc
stos
cmp
push
jns
enter
and
mov
add
xor
sti
lds
and
pop
aam
lds
clc
lcall
jp
arpl
arpl
push
xchg
out
std
mov
je
pop
xlat
sbb
add
addr16
fadd
pushf
fimull
adc
mov
or
mov
dec
fldt
xchg
fwait
fs
cmp
mov
insl
fsubrl
xchg
add
and
sbb
push
xchg
xchg
bound
scas
dec
ja
pusha
jns
bnd
sub
and
mov
dec
test
ret
loope
mov
in
push
fsubp
and
in
mov
pcmpgtb
add
shr
push
xchg
sub
ret
popa
pop
add
xchg
in
xor
xor
xor
add
imul
xchg
or
xchg
add
popf
or
xchg
push
mov
xchg
jne
or
lcall
stos
push
rcrb
addr16
test
loope
push
mov
rolb
lds
stos
cmpsl
sbb
mov
jp
sbb
or
lahf
ror
iret
xchg
xor
addr16
jle
daa
xchg
add
and
dec
xor
mov
subb
sbb
daa
leave
lahf
pxor
xor
subb
ret
lcall
and
cmc
jno
pop
out
int3
das
cli
hlt
jns
sbb
push
cmp
pop
adc
mov
push
aad
cmc
hlt
rcll
imul
movsl
fimull
dec
bound
test
nop
lock
mov
mov
cmp
cld
and
pop
jns
rcr
jecxz
aas
repz
ja
insl
and
add
lds
xor
push
js
test
gs
dec
sub
fs
inc
popa
popf
dec
cmpsl
xlat
mov
hlt
fldl
es
mov
lret
jp
add
mov
mov
add
lahf
roll
out
dec
jbe
subb
js
push
and
movsl
mov
mov
or
adc
insb
in
cs
sub
rep
inc
enter
test
repz
repnz
jmp
xchg
outsb
inc
lret
out
mov
push
fsub
imul
dec
mov
int3
call
sub
or
pop
sub
pop
xchg
jp
xchg
push
jg
in
dec
aas
xlat
xor
mov
xor
sub
ds
jge
xchg
push
gs
pop
imul
inc
das
roll
lds
shr
sbb
sbb
or
cmp
sti
shrb
sub
jmp
lock
aas
sub
divb
jo
jmp
lods
push
in
sub
mov
add
mov
cmp
jecxz
lods
data16
mov
mov
orl
add
call
ljmp
push
mov
imul
mov
insb
popa
int3
in
pop
adc
jmp
std
pop
mov
pop
xor
sub
xor
call
pop
cld
inc
insl
in
cmp
fildl
mov
fidivrl
rorb
rorb
cmp
jp
in
xchg
push
loopne
gs
cmp
xor
dec
aam
je
leave
pusha
cmp
push
lods
loopne
in
xchg
sub
imul
jnp
clc
jp
sar
sub
sbb
and
or
xchg
clc
aad
loope
lock
dec
cltd
xor
and
jns
shr
lods
outsl
add
mov
push
pop
xor
stos
cmp
out
pop
ja
sub
inc
cmp
ret
jmp
in
sbb
xor
pop
hlt
fbstp
jo
mov
addl
jne
xor
aas
inc
out
add
sbb
bound
fcompl
inc
fstp
loopne
in
rorl
pop
pushf
mov
test
jp
fisttps
or
lods
add
adc
jb
movsb
mov
sub
push
sub
iret
xor
mov
mov
mov
fsubrp
popf
fistps
and
sbb
adc
xorl
cmp
xorl
out
push
mov
data16
loope
fisttps
dec
dec
xchg
xor
xlat
ret
and
sub
xor
adc
inc
mov
stos
lods
ret
sub
mov
or
jmp
lcall
lods
adc
pop
add
push
xor
mov
clc
lea
mov
or
jp
movsb
movsb
sbb
dec
mov
dec
stos
aam
pop
lahf
mov
ret
lcall
data16
xor
add
loope
sub
or
mov
dec
insb
cmc
in
dec
push
sbb
cmc
xchg
in
jge
repnz
rol
xchg
xchg
call
sbb
imul
xchg
jle
int
or
lods
push
mov
imul
jns
cltd
dec
pop
xchg
cmp
loop
gs
mov
pop
lahf
imul
add
and
ds
loope
loope
punpckhdq
push
cmp
jecxz
jae
xchg
mov
test
dec
stos
or
mov
push
pusha
mov
test
xchg
std
cmp
iret
iret
add
popl
cmc
mov
lods
nop
cmp
pop
sbb
cwtl
pop
and
mov
dec
adc
addb
adcl
hlt
in
xor
pop
pop
pop
add
test
cmp
dec
mov
dec
xchg
jg
repnz
mov
mov
setnp
mov
sub
inc
pop
mov
inc
mov
pop
mov
cmpsl
stc
mov
add
rorl
cmpsl
mov
cmp
dec
test
into
test
addr16
xchg
mov
dec
or
notl
mov
aas
and
js
push
mov
mov
jl
xchg
dec
subl
mov
in
ret
clc
fcomps
out
std
xor
repnz
cmp
jno
in
dec
push
and
dec
out
and
clc
and
dec
xchg
xor
shlb
insl
sbb
jl
ret
sbb
cmp
cli
stos
imul
dec
jo
jle
pop
mov
jp
push
mov
ss
push
stos
dec
mov
push
out
in
iret
dec
fimuls
sti
sub
push
aas
aas
cmpsl
mov
add
fidivrs
outsl
mov
sub
xor
sbb
jns
add
push
or
add
addl
pushf
jnp
or
mov
mov
mov
or
adc
mov
sbb
push
or
adc
xor
and
add
add
cli
cmp
popf
jbe
inc
jns
add
push
xchg
mov
sub
stc
and
jmp
shl
leave
lcall
add
xchg
pop
jecxz
icebp
sub
data16
sub
xorb
xchg
pushf
adc
mov
shrb
push
xor
sbb
lods
out
das
xchg
adc
mov
nop
std
dec
daa
incl
lods
sbb
adc
dec
mov
adcb
in
xchg
dec
xchg
ja
jmp
xor
and
ret
aam
das
xor
orb
lahf
and
int3
js
insb
icebp
mov
ss
sbb
mov
cmp
mov
aam
sub
mov
and
pop
add
fwait
addr16
xor
cltd
test
and
pop
mov
out
pushf
out
popf
ja
jecxz
insb
jp
push
test
lahf
fucomp
push
pop
sub
ss
mov
addr16
insb
cmp
mov
cli
mov
pop
xor
test
imul
test
inc
mov
jecxz
sbb
pop
lret
fisubs
add
xor
int
or
mov
mov
mov
and
cmc
sbb
mov
mov
add
jmp
or
push
je
mov
cli
adc
xor
ret
idiv
jmp
ss
pusha
imul
loop
sbb
addr16
in
sti
sarb
xor
js
dec
aad
daa
jne
daa
pop
and
ds
out
dec
sub
pop
or
pusha
adc
insl
in
xchg
cmp
js
dec
enter
inc
push
fmuls
repnz
push
or
into
negl
mov
in
nop
push
mov
cmpsw
ss
jb
and
fcmovu
sahf
add
jns
mov
cmc
jl
pop
add
lock
jae
push
mov
hlt
cmpsb
xchg
xchg
jno
push
testb
pop
fcmovnbe
lds
sbb
push
xchg
lret
lods
cmpsb
cwtl
jbe
sub
in
loop
push
ds
fists
push
rcll
adc
mov
sbb
mov
les
dec
es
mov
mov
cli
sbb
mov
jge
mov
sub
jo
loopne
aam
sub
mov
lcall
jmp
out
call
adc
sti
push
adc
pop
cmc
push
cs
cmp
and
jnp
je
dec
xor
add
mov
pop
ljmp
jo
mov
jns
xchg
cmp
scas
int
lods
loop
sbb
fildl
xlat
xchg
dec
push
jbe
and
sahf
lock
divl
mov
dec
popa
sahf
push
jo,pn
movsb
adc
cltd
cmp
jae
cld
push
imul
and
push
or
std
movsl
hlt
mov
test
pop
sbb
int
dec
stos
pop
and
xor
fdivl
add
lods
add
push
pop
and
pop
ljmp
jecxz
mov
mov
jp
fiadds
ljmp
lahf
mov
xchg
jg
std
inc
mov
jae
jnp
inc
stos
scas
mov
mov
sub
or
call
mov
mov
inc
repz
cmp
inc
in
mov
sub
fwait
outsb
faddl
ljmp
jp
fadds
nop
jg
xor
sbb
mov
mov
or
fcoml
mov
push
in
adc
xor
pop
add
sub
and
push
cmp
xor
inc
cmc
jae
ja
dec
cmp
into
orl
lds
xchg
dec
add
jae
rclb
pop
sub
and
push
add
clc
inc
fadds
dec
dec
xchg
mov
push
jne
push
into
and
bound
das
jb
test
callw
and
movsl
pop
jae
out
jge
or
sub
add
test
or
cmp
sub
test
sahf
les
arpl
xor
inc
lcall
movsl
sbb
jmp
adc
inc
dec
push
mov
pusha
push
into
pop
mov
mov
mov
out
pushl
pop
jl
pop
pop
rcl
mov
stos
pop
cmp
pushf
fcompl
lret
sbb
stos
cmp
icebp
add
sbb
push
push
xchg
jg
xor
mov
int3
sub
jg
ret
xchg
shl
sti
in
mov
or
jecxz
mov
stos
add
std
jp
aam
inc
sbb
xchg
mov
mov
inc
lcall
sahf
cmp
sbbl
pop
fsubs
out
test
mov
and
hlt
mov
push
adc
inc
incb
mov
clc
adc
push
jle
cmpl
add
out
add
cli
out
jnp
ret
popa
jmp
fstps
jmp
mov
dec
add
enter
mov
or
rcrl
adc
dec
movsb
test
lods
jae
inc
insl
adc
leave
mov
stos
cmc
rcrb
xor
ret
lock
mov
dec
pop
jmp
outsb
outsl
cwtl
test
mov
pop
das
popa
xor
subb
adc
int
out
nop
popf
fwait
iret
or
sbb
sbb
lea
mov
mov
pop
ret
dec
dec
lret
das
in
arpl
stos
sub
sti
push
dec
fnstcw
xlat
call
adc
int3
cmpsl
cmc
test
inc
loop
das
stc
xchg
shll
dec
or
jl
rcll
testb
std
jo
aam
dec
mov
cwtl
out
divb
xor
in
mov
push
adc
jg
jnp
push
int
mov
inc
dec
cmpb
lret
xchg
lods
rcrl
pop
stos
jge
and
sub
call
cmp
and
sbb
call
cltd
jne
popw
ss
jne
add
or
aam
pusha
xor
jecxz
pop
insl
fdivrl
popa
jo
arpl
cmp
orb
int
lret
imul
jl
aam
nop
mov
mov
jo
hlt
ds
mov
nop
xchg
fidivrs
pop
pop
mov
inc
sub
and
seta
idiv
add
inc
addr16
shrl
adc
jmp
aaa
std
push
dec
sub
test
xor
or
sub
jp
insb
xor
addr16
out
xchg
aad
dec
add
pusha
int
push
fwait
lock
ja
xchg
cs
sbb
xchg
xorb
push
add
pop
addr16
popa
xchg
int3
mov
outsl
or
bnd
or
mov
adc
lods
inc
xchg
out
adc
mov
in
or
and
in
into
mov
popf
xchg
insl
xchg
vminss
mov
pop
mov
out
sub
jo
pop
iret
dec
inc
cltd
mov
xchg
mov
fs
adc
shrl
push
jecxz
call
aaa
mov
scas
sbb
test
insb
jnp
out
mov
dec
cmp
pop
negl
std
push
xor
add
cli
jmp
push
test
mov
sub
scas
test
jecxz
das
popa
push
ret
std
xchg
es
mov
inc
sbb
xor
ret
hlt
fistps
mov
mov
adc
rol
cmp
xor
call
mov
mov
dec
movsl
ret
sbb
mov
adc
lods
fstl
and
dec
cmp
loopne
mov
dec
pop
out
test
fimull
add
inc
stos
addl
push
int3
mov
or
lcall
ret
adc
loope
mov
popf
xchg
jno
xor
popw
imulb
jp
inc
cmp
cli
hlt
lods
cmpsb
loope
push
xchg
ffreep
push
push
fidivrl
jb
jecxz
ret
sub
arpl
ss
lcall
and
dec
popa
fsubrl
ss
in
xorb
test
es
dec
outsb
add
movsb
pop
loope
aaa
pusha
ljmp
or
in
and
fcom
test
jecxz
push
dec
int
adc
in
imul
notl
pop
mov
negb
ds
cld
cmp
rcl
or
pop
sub
jnp
add
jge
sub
sarb
sbb
pusha
xchg
jg
jg
sbb
and
repnz
fwait
insb
jne
dec
pop
sahf
mov
jne
adc
lods
repz
xlat
inc
jl
cmp
out
dec
and
jns
negb
jmp
jle
jl
pop
cmp
cmp
ret
sub
push
xchg
cmp
pop
sub
xchg
and
call
ss
scas
jno
insl
cmpl
lds
pop
data16
sahf
dec
xchg
xchg
dec
dec
popf
xchg
ficoms
pop
pop
jae
cmpsb
add
leave
pop
call
xchg
sti
and
cmp
shrb
lods
lret
out
cli
inc
les
adc
clc
cmp
dec
stos
inc
xor
outsb
fisubrs
sub
or
cli
insb
test
jne
cmpsl
xchg
out
sbb
dec
push
rorb
inc
cmpsl
mov
push
sbb
push
lcall
das
pop
je
xor
xor
mov
cmpsl
imul
xchg
loopne
fwait
pop
fidivrl
jmp
adc
jae
stos
andl
mov
dec
mov
sub
cmp
mov
dec
negb
xchg
cmpsb
dec
mov
or
cmpl
mov
mov
jb
xchg
jo
repz
inc
in
ds
cwtl
in
and
and
addr16
mov
pop
loop
adc
sbb
daa
mov
mov
jmp
add
lods
jnp
mov
jl
mov
clc
or
pop
lahf
sbbb
aam
pop
stos
ds
add
or
mov
cmp
xchg
xor
inc
xor
push
lcall
imul
or
xor
or
lds
pop
mov
insb
cld
or
jne
dec
imul
enter
jecxz
call
inc
stos
and
ss
add
ret
test
sub
imul
xchg
mov
repz
pop
mov
or
xor
pop
arpl
out
xor
mov
bound
xor
adc
pop
sub
leave
push
jge
lock
cmp
aaa
jge
jb
adc
fistpll
loop
jg
ret
or
cmpsl
sbb
jno
inc
jle
lret
cmp
lret
xchg
bound
div
adc
xor
mov
gs
scas
xor
mov
outsl
cmp
fldcw
add
mov
cmpsl
xor
cmp
outsb
jecxz
test
push
aaa
sti
push
decl
adc
jbe
int3
mov
or
sub
mov
pop
add
daa
rorb
faddp
fistps
call
or
jae
ljmp
stos
imul
pop
dec
movsl
repnz
cmp
add
mov
out
andl
or
sub
scas
pop
fdivs
movsb
dec
mov
and
push
push
or
subl
add
out
xor
andl
xchg
sub
jnp
sbb
mov
pop
movsb
push
addr16
pop
in
adc
xchg
push
and
push
cmp
int
cmp
cmc
int
jnp
scas
loopne
and
pushf
rol
insb
arpl
popf
add
stc
xor
enter
inc
std
lret
in
add
pop
push
jecxz
clc
enter
inc
mov
mov
outsb
fmull
and
inc
aam
mov
jne
or
adc
rorl
mov
push
or
jmp
cli
ljmp
push
jo
add
inc
aaa
xchg
sti
cmpsb
xchg
sbb
pushl
loope
mov
add
xor
add
mov
dec
cmp
out
sub
cmp
xor
push
loop
pop
stos
stos
loop
imul
lret
jmp
sahf
jb
add
jp
inc
sahf
jo
or
cmpsl
je
push
stos
and
xor
imul
mov
xchg
cmp
stos
dec
stos
dec
ss
nop
inc
popf
lock
cmc
js
das
outsb
stc
pop
pop
cmp
ja
sub
xor
mov
out
pusha
jbe
cmpsl
out
insb
sbb
enter
dec
jnp
sbb
inc
mov
jo
jb
sti
push
sarl
cs
fistpl
xor
cwtl
sbb
dec
shl
mov
mull
lock
out
jg
jle
test
xchg
scas
call
aas
insl
mov
push
imul
fwait
push
xchg
dec
fxch
enter
jo
sti
dec
xchg
lahf
cmc
and
nop
hlt
jns
in
xchg
cli
enter
or
fld
stos
stos
sub
sub
mov
mov
jae
das
mov
or
push
dec
jmp
mov
xor
nop
idivl
xchg
jns
jne
sub
test
insb
loop
lcall
imul
dec
ljmp
push
test
mov
loope
add
popf
das
push
arpl
pop
addr16
jbe
fisttpl
lods
xor
scas
sbb
adc
fcmovnbe
in
mov
out
sub
fisttps
inc
xchg
add
test
jno
xor
ja
inc
mov
bnd
repz
push
lcall
insl
cli
js
ss
mov
negb
pushf
jnp
or
sbb
stos
stos
push
mov
cwtl
add
jle
test
sbb
int
dec
aam
xchg
rolb
push
test
add
stos
pop
daa
js
mov
pop
cmp
cwtl
jmp
sbb
lock
sub
sub
push
lret
ja
shll
cwtl
xchg
cmp
and
add
sub
xor
inc
in
das
lcall
add
xchg
inc
xchg
lcall
xorb
inc
adc
pop
fdiv
sbb
inc
inc
pop
jge
mov
scas
addl
mov
sbb
push
xchg
lds
jns
in
imul
push
mov
cmp
add
es
push
test
aaa
nop
mov
js
dec
and
lods
cwtl
dec
dec
xchg
sahf
dec
das
sub
jnp
jge
mov
push
aam
jmp
cld
int3
inc
sarl
mov
les
jle
mov
sbb
push
out
sub
or
mov
insl
sub
and
pop
push
push
inc
repz
pop
rcl
push
scas
sub
outsl
in
jbe
in
pop
cmp
inc
in
fsub
and
adc
ret
dec
sahf
sub
mov
aad
jmp
pop
xor
js
sbb
inc
push
xor
dec
shr
sti
jge
inc
test
sbb
jp
popf
ret
xor
pop
stos
lret
push
cwtl
mov
add
cmp
stos
jge
pop
jo
jge
test
sbb
sub
inc
and
push
and
into
fldl
inc
mov
or
adc
stos
add
imul
xor
fistl
js
push
xchg
xchg
stos
divb
cmp
fistl
and
scas
push
xor
add
fwait
mov
adc
shlb
cmp
nop
pop
aad
mov
pop
test
dec
xor
inc
incl
dec
cmpsl
mov
ret
sbb
mov
fiadds
cmp
fldl
mov
adc
icebp
pop
cmp
ret
dec
outsl
pop
push
dec
cwtl
packssdw
add
out
inc
cmp
pop
lret
cltd
add
inc
xor
push
popf
xor
test
fisubrs
rolb
sub
adc
push
push
fs
dec
mov
pop
andnps
int3
push
xchg
pop
push
jecxz
jg
push
stc
insb
icebp
ret
pop
test
je
ljmp
mov
pop
and
cmp
push
xchg
inc
xchg
sti
xchg
jmp
push
filds
sbb
daa
cmc
mov
insl
es
mov
loop
ljmp
push
rcll
cli
sub
nop
mov
and
push
xchg
or
pusha
repz
dec
mov
xlat
shlb
shl
cmp
lods
or
jb
sub
inc
and
xor
push
addb
inc
imul
sbb
mov
sbb
jns
mov
stos
mov
clc
adcl
lods
dec
js
add
pop
mov
jge
sahf
xchg
or
or
xor
insb
inc
mov
pusha
mov
adc
lret
nop
dec
test
div
cltd
dec
push
jecxz
mov
sbb
push
xor
fstl
movsl
fstps
loopne
dec
adcb
sub
add
cmp
xchg
int3
push
fstl
repnz
sbb
out
jns
xchg
sub
cmpl
jl
xchg
stos
enter
cmp
cmpsb
add
add
and
add
pop
nop
mov
xor
pop
cmpsl
mov
dec
fdivr
sbbl
notb
mov
mov
xchg
mov
insb
mov
xchg
xchg
decl
pop
xchg
sahf
loopne
fisttps
push
scas
pop
dec
push
divb
xchg
and
fld
push
push
mov
mov
adc
jmp
push
arpl
mov
xchg
aam
inc
ljmp
imul
int3
mov
sbb
inc
mov
mov
mov
punpckhdq
pop
loop
insb
aam
nop
or
cmp
dec
jno
addr16
mov
in
pop
mov
testb
rcrl
cwtl
and
sub
call
movsb
bound
ror
loop
or
rol
inc
pop
adc
jecxz
pop
xorb
andb
arpl
jle
stc
mov
lahf
or
loop
les
loope
push
fs
mov
clc
and
dec
inc
add
repnz
test
cltd
dec
pop
cmp
repnz
push
sub
lret
mov
loop
xchg
jne
bound
lret
push
ja
jno
popf
mov
pushf
pop
mov
and
mull
in
div
scas
mov
sub
outsl
mull
adc
push
repz
ja
int
pusha
aaa
pusha
dec
adc
cwtl
push
fdivrs
xor
xchg
mov
pop
icebp
inc
mov
cltd
daa
testb
jg
push
mov
or
cmp
movl
dec
jp
adc
fidivl
adc
add
in
add
shrl
sbb
cmp
mov
ret
push
xchg
mov
movsl
popa
ret
ror
push
inc
fsubrl
jo
insl
mov
lret
pop
stos
sub
inc
daa
and
cmp
aam
adc
sahf
test
jo
dec
pop
ljmp
mov
dec
sahf
push
adc
xlat
rclb
mov
outsl
insb
sub
jae
fidivs
mov
pop
out
xor
out
fstl
jmp
xchg
leave
sahf
add
clc
jb
daa
mov
movsb
and
loope
popa
loope
or
pop
pop
pop
stos
notl
xchg
dec
cmp
dec
add
and
fs
adc
dec
cli
movsb
jb
pop
jo
sbb
iret
js
jo
setne
lret
pop
ret
popa
adc
ficoml
add
xor
sbb
out
fcoms
or
mov
or
pop
sub
sbb
push
jp
in
cld
mov
lcall
fucomp
push
add
mov
mov
pop
aas
in
das
imul
jecxz
test
loope
xor
cltd
adc
lods
adc
iret
shll
clc
mov
in
lcall
stos
mov
xchg
inc
pop
mov
push
pushf
sbb
lods
cmc
aas
pop
fsubs
mov
mov
add
mov
or
add
scas
cltd
adc
add
jo
xor
mov
ss
test
insl
and
out
push
int3
stc
pop
sub
and
loop
dec
fimuls
xchg
adc
cld
in
ficompl
push
adc
hlt
cmp
adc
add
jbe
lret
cmp
mov
mov
pop
loop
mov
insl
data16
stos
cmp
adc
mov
imul
and
xorl
push
dec
arpl
pop
ja
adc
jbe
dec
popa
add
xchg
xor
enter
imul
mov
aas
aam
test
stos
cmp
jl
iret
inc
jg
jl
jcxz
clc
push
cltd
call
jae
cltd
loop
xchg
push
aaa
gs
cmp
pusha
push
jge
dec
sarl
lcall
xor
mov
xor
pop
xchg
call
notl
jae
push
mov
push
push
mov
loopne
xchg
pop
ret
nop
in
repnz
aas
test
movsl
jl
pop
cltd
mov
adcl
popf
cmpl
fisubs
cmpsb
jbe
jmp
push
imul
std
pusha
mov
sbbb
lock
or
enter
xor
jns
adc
in
jmp
xorb
dec
sub
cmpl
add
bound
test
mov
sub
lcall
mov
insl
ds
insb
jnp
sbb
mov
in
or
cmp
rolb
out
xlat
pop
jbe
or
and
jecxz
and
adc
sbb
nop
sahf
ljmp
xor
mov
inc
push
les
push
lret
and
outsb
fs
loopne
aas
or
adc
or
sub
outsb
lods
movsb
lahf
inc
stc
dec
or
loopne
shl
and
adc
cltd
clc
pop
imul
or
loope
dec
outsb
cltd
clc
jg
pop
mov
std
test
add
loop
jmp
mov
mov
std
aas
jecxz
and
insb
outsb
pop
sub
jb
inc
fimuls
inc
push
push
inc
mov
jno
cwtl
or
sub
dec
dec
outsb
sbb
pop
jle
xchg
jae,pt
addr16
and
shll
aaa
xlat
sti
fdivl
ja
add
inc
nop
fcomip
lods
xor
add
cmovge
cmp
sbb
inc
mov
mov
sahf
lods
sbb
jbe
pop
loopne
sahf
mov
movsb
fstl
dec
jb
clc
cli
mov
ds
xchg
xchg
adc
jl
cwtl
cwtl
xor
out
adc
push
adc
pop
inc
adc
lock
xchg
mov
pushf
xchg
test
mov
mov
cmpsb
push
ficomps
sbb
stos
lret
or
pop
mov
xchg
and
jge
or
shlb
jge
jge
inc
push
clc
jb
mov
popa
rclb
push
xor
xor
jae
cs
mov
pop
jnp
mov
or
int3
mov
insl
ss
pop
ret
stos
or
outsb
es
xchg
mov
xchg
lcall
cmp
movsb
fcoms
jg
mov
cmp
push
out
int
mov
mov
jne
push
xlat
mov
and
inc
out
stos
out
test
int
and
cwtl
outsb
ret
loope
jge
bound
outsl
xchg
cmp
loope
push
fistpll
cmpsb
inc
stos
jle
mov
icebp
lds
scas
dec
lret
cmp
lock
aad
push
test
aas
sti
mov
jns
xor
sub
mov
xchg
jbe
out
and
std
in
addl
push
sbb
repz
mov
xchg
mov
mov
push
pop
cltd
addr16
xor
and
dec
fldenv
inc
sbb
push
popa
or
dec
and
xlat
lea
inc
popf
mov
sarl
or
pop
insb
repnz
fcmovnbe
insl
sub
jl
insl
outsl
sub
pop
dec
lret
arpl
lock
cld
sub
hlt
test
fbstp
and
rcll
sti
add
dec
bound
lret
rolb
pop
xchg
xor
in
in
mov
out
lods
or
mov
xchg
xchg
sahf
cmc
mov
rcrb
testl
xor
inc
cmp
int3
imul
repnz
pop
mov
mov
les
lods
scas
test
jno
scas
cmc
adc
ret
pop
pop
pop
push
dec
pop
adc
cmp
stc
adc
popf
andl
pop
imul
or
jne
addr16
pushf
icebp
cmp
fsubl
and
movsl
add
jae
or
out
pop
aaa
cwtl
mov
inc
xchg
loop
cmpsl
shr
jb
outsb
jle
test
mov
dec
push
iret
xchg
jne
iret
cmc
ss
stc
mull
and
push
bound
push
test
sbb
cmp
pop
aam
and
mov
in
xchg
pop
jge
xchg
and
add
push
mov
arpl
lahf
in
out
push
sbb
mov
jmp
and
decb
pop
sti
test
sarb
adc
imul
push
xor
sbb
xor
mov
sbb
adc
push
inc
adc
xchg
cmp
mov
lahf
add
les
ret
lods
jmp
inc
inc
cmp
sahf
mov
mov
mov
enter
mov
xor
dec
fmuls
jnp
mov
pushf
test
test
dec
cmp
push
stos
aaa
dec
sub
xchg
loop
popf
inc
and
imul
jnp
jl
outsb
lds
or
add
in
sbb
push
push
cmp
int3
or
fdivrl
sub
decb
push
push
push
ljmp
pop
insl
mov
jecxz
add
push
push
sbb
mov
add
movsl
les
jle
mov
scas
das
jmp
insl
subl
mov
cli
jge
inc
mov
shll
std
or
mov
and
repnz
shll
and
dec
imull
lahf
pop
sbb
pushf
stos
out
or
test
aam
or
dec
ds
mov
push
pusha
idivb
mov
and
pop
fsubl
push
sub
in
mov
dec
or
shrl
movsb
in
std
xor
andb
cmp
or
subb
dec
jecxz
lds
jb
mov
mov
sbb
add
push
lock
repz
xor
ficompl
fcompl
in
dec
xor
subl
lods
divl
add
push
mov
xchg
insb
mov
stos
mov
push
pop
inc
mov
inc
mov
loopne
mov
in
icebp
into
adc
dec
push
sbb
pop
sub
mov
sub
xchg
sub
or
mov
ret
cli
lahf
push
ja
cmp
insb
cmc
mov
call
andb
jmp
pop
lods
int3
mov
stos
cmp
dec
jmp
sbb
add
rolb
pusha
inc
je
addr16
cmp
sbb
mov
arpl
mov
cli
mov
leave
pop
mov
lock
add
out
sub
int3
dec
inc
xchg
std
loopne
test
rcrb
sbb
sub
fcomp
inc
fdivl
hlt
add
mov
rorl
dec
ret
sbb
push
push
out
aam
inc
in
dec
cltd
jl
mov
mov
mov
fidivs
ret
add
pop
push
fdivrs
xchg
and
pusha
aam
dec
scas
jbe
mov
clc
cld
mov
inc
dec
push
mov
cmp
test
jge
cmp
dec
pop
filds
insb
xor
into
insb
testb
dec
xor
out
cmp
jnp
dec
mov
leave
mov
add
push
push
fstps
pusha
lds
dec
sbb
pop
mov
xchg
clc
lahf
mov
pop
cmp
or
cmp
adc
sub
fildll
mov
dec
or
push
lret
popf
cmp
rolb
sub
in
inc
es
repnz
nop
and
pop
adc
pop
jnp
jo
jae
pop
nop
arpl
mov
and
push
inc
jl
scas
dec
push
outsb
iret
fsubrp
push
xor
jo
jp
loopne
cltd
jmp
test
aas
das
cli
sahf
jl
dec
outsl
test
lock
mov
pop
loopne
sbb
test
mov
loop
cwtl
daa
push
test
mull
push
int
cmp
mov
clc
sbb
ja
movsb
shll
test
pop
jb
mov
dec
and
dec
push
outsl
xor
sahf
pop
xchg
xchg
mov
js
hlt
sbb
mov
fisubrs
test
add
test
adc
gs
push
std
lods
jo
shrl
mov
sub
dec
cmpsb
cmpsl
aaa
mov
hlt
jnp
mov
pop
inc
or
jmp
xchg
xchg
iret
mov
test
pusha
ja
ljmp
or
jb
mov
dec
or
mov
or
push
stos
xor
xchg
mov
cli
xlat
inc
jns
icebp
rcll
pop
ss
pop
sub
inc
cmpsl
xrelease
cmpsl
sbb
dec
call
out
in
gs
int
les
clc
ljmp
sub
pop
jns
shrb
lcall
jbe
cltd
and
adcl
dec
outsb
cwtl
mov
push
xchg
shlb
fucomp
lods
aas
ss
cs
mov
jb
ljmp
fidivrs
iret
jae
sub
xchg
mov
adc
adcb
repnz
push
fs
in
adc
pop
test
push
push
popa
sbb
add
push
push
mov
testl
ja
dec
stos
sbb
pop
push
inc
sahf
push
inc
insb
fwait
mov
pop
xchg
ret
and
mov
out
sub
aam
dec
push
into
into
pop
out
cmp
stos
inc
push
cmp
xorl
cltd
lret
jmp
in
call
pusha
sti
mov
mov
adc
inc
mov
in
mov
test
sub
lock
cmp
xchg
adc
and
sbb
ljmp
es
sbb
adc
xor
xchg
xchg
or
shrl
push
jg
pop
push
aam
or
xchg
mov
into
int
arpl
ja
ror
aaa
call
fwait
insl
dec
pop
jmp
loop
mov
xor
mov
out
clc
mov
or
push
loop
adc
add
sbb
inc
xchg
push
xchg
je
outsb
sbb
xchg
jb
leave
cld
pop
xorb
hlt
movsl
js
lret
dec
jne
pop
pop
in
inc
sub
imul
daa
pop
cwtl
lret
lds
pusha
push
lods
mov
imul
imul
ss
adc
xchg
push
iret
rcrl
jp
insl
mov
xor
int
outsb
movsb
sbb
call
bound
cmc
loop
out
cmp
add
fisubl
sbb
mov
mov
gs
push
xor
jmp
jbe
mov
mov
lock
dec
outsb
jg
push
xchg
mov
mov
mov
in
or
xor
jae
scas
pop
xchg
jnp
addr16
gs
popa
mov
xchg
jmp
or
xchg
jne
cld
fisttpl
ss
dec
mov
push
std
lock
pop
xchg
or
cmp
int3
mov
mov
movsl
jg
aam
xchg
adc
jp
cli
pushf
mov
xlat
fsubrp
aaa
pop
out
fsubl
dec
pop
faddp
xor
jae
push
jg
mov
lcall
or
mov
repz
fmull
inc
pop
les
inc
in
lods
icebp
xchg
mov
push
fucomi
xchg
xchg
andb
push
pop
jp
cmpsb
shr
neg
in
sbb
inc
add
fisttpll
dec
mov
adc
jns
mov
jmp
pusha
mov
lcall
jge
xchg
and
mov
sbb
mov
sarl
push
add
popa
lret
call
xchg
popa
adc
sbb
jo
in
ds
mov
lret
cmp
enter
lret
scas
out
in
or
aaa
movl
hlt
cmp
adc
out
jl
dec
stc
imul
xor
stos
bound
mov
or
push
out
mov
in
fwait
mov
stos
hlt
out
jbe
enter
arpl
mov
out
cmpsl
jg
xor
in
mov
ret
mov
imul
jl
rolb
inc
push
rolb
mov
repz
jp
ds
insl
gs
and
shrb
xchg
push
hlt
jo
cmp
add
out
jo
xchg
add
cmp
mov
mov
pop
push
ret
mov
jmp
aad
mov
cmpsb
xchg
fbstp
cmp
enter
push
insl
lcall
push
pusha
add
call
scas
mov
inc
xor
xlat
xchg
ss
push
push
fld1
mov
ret
arpl
adc
sbb
mov
push
pop
stos
aas
sub
pop
jecxz
insl
sub
push
jne
stos
adcb
popf
ja
aas
cmp
enter
add
push
add
xchg
roll
mov
mov
sahf
push
js
ja
aam
sub
in
fistl
jl
stc
pop
mov
inc
into
pop
and
pop
sbb
fisubrl
sbb
sahf
fcoms
xchg
test
dec
mov
cmp
std
lock
cwtl
out
imul
pop
lahf
mov
fcmovbe
inc
add
test
pop
movsl
push
adc
les
cmp
add
xor
aam
mov
scas
inc
xchg
xchg
sbb
sarb
mov
sub
add
cmp
push
add
dec
shlb
jmp
movsb
pop
pop
and
scas
jbe
dec
mov
mov
push
popa
adc
jge
or
xor
mov
test
jmp
pop
js
out
sbb
pop
cld
loop
cmp
stos
lret
fisubrs
jp
dec
je
lods
jnp
mov
or
bound
lcall
aaa
xor
ret
xor
in
sub
jno
add
test
sbb
mov
sub
push
loopne
jmp
stc
rcl
aas
into
int
or
stos
fwait
stos
ljmp
daa
ljmp
dec
fmull
out
inc
fdivrl
movsb
andl
outsb
push
sbb
push
movsl
inc
mov
dec
call
imul
lock
fistl
xchg
cmp
imul
pop
rcrb
mov
ret
stc
sub
testb
dec
jae
mov
pop
mov
add
sbbb
ss
mov
jo
mov
inc
xor
ds
jnp
call
jge
sub
pop
mov
xchg
xchg
mov
push
rolb
lds
rcrl
cld
and
inc
pop
jno
stos
data16
xor
js
mov
imul
rorl
jmp
ror
ret
aad
cmp
push
mov
mov
pop
test
or
nop
and
xchg
test
jbe
dec
add
andb
rclb
outsl
lds
adc
sbb
mov
mov
out
cmpl
push
or
push
fidivl
call
out
rcl
ja
jl
inc
fcom
inc
shlb
xlat
fucomip
out
add
inc
clc
cli
inc
rcll
dec
pusha
mov
pop
xchg
jl
xchg
xor
dec
clc
ret
dec
ss
out
xor
gs
jmp
push
jae
imull
sahf
movsb
cli
push
lea
int
jns
jecxz
rcrb
mov
push
mov
mov
aad
je
inc
out
lds
and
out
push
fstps
pop
jne
imul
or
dec
adc
mov
sbb
mov
xor
inc
stos
mov
lds
lds
out
mov
ret
inc
xchg
addr16
out
pop
fnsave
aam
sarb
aas
imul
daa
mov
push
mov
mov
fcomip
lods
stc
jl
into
xchg
dec
cmp
or
je
sbb
movsb
sarl
mov
or
xchg
or
sahf
imul
int3
jg
dec
decb
cmp
mov
sub
jno
ljmp
cwtl
aam
ret
pop
inc
xchg
or
pop
xchg
adc
rcrb
std
add
mov
stos
xor
dec
lahf
push
popf
pushf
adc
ret
mov
in
mov
into
or
cmc
mov
daa
xor
adc
xchg
or
stos
cmp
jnp
mov
and
movsb
inc
aas
andb
jmp
repz
sub
imul
jae
fiadds
inc
jne
sbb
sahf
xlat
mov
loop
imul
xchg
roll
movb
pop
cmp
test
sub
test
fs
sub
sub
das
adcl
pop
inc
jbe
fst
in
movsb
lods
daa
mov
mov
fdivr
mov
cmp
fisttpl
addr16
out
push
mov
in
call
js
add
jg
mov
ss
add
dec
dec
add
pushf
inc
mov
arpl
gs
push
enter
xor
clc
arpl
xchg
aad
mov
call
idivl
sub
ds
and
jns
cli
dec
jle
mov
mov
xchg
sbb
xchg
repnz
xchg
jb
mov
fdivr
and
hlt
add
jg
je
pop
out
push
or
or
popa
sub
add
pop
xor
in
je
sbbb
mov
cmp
and
cmp
loope
jl
dec
shlb
cmpsb
les
inc
or
cmp
mov
mov
fs
mov
arpl
stos
out
nop
lds
clc
xchg
rcrl
lods
imul
xchg
fstl
test
push
jns
idivl
fldcw
in
inc
aaa
push
pop
imul
cwtl
xchg
add
inc
fcmovu
loopne
cld
hlt
fisubrl
orb
cltd
inc
popa
jbe
push
jno
scas
sub
and
xchg
loopne
movsl
sub
sub
add
mov
xchg
push
unpckhps
mov
movsb
pop
decb
aaa
aam
or
mov
cmp
int
jne
xchg
hlt
push
push
mov
inc
sbb
int
cmc
rorl
push
inc
movsl
adc
pop
lds
fwait
iret
cltd
daa
xchg
ja
ret
mov
aad
adc
stc
add
sub
stc
ret
loop
adcl
testl
mov
mov
sbb
repz
into
rorb
xlat
jo
leave
pop
push
jns,pn
pop
sbbb
shrb
mov
mov
cltd
fs
fucomp
jno
ficomps
mov
add
pop
pop
cwtl
inc
xor
shrb
sbb
add
stc
lcall
jp
inc
jb
xchg
pop
out
fldenv
movsb
inc
or
adc
sub
pop
aam
cmp
pop
ret
push
push
push
mov
js
dec
scas
in
fstl
and
out
push
lods
pusha
push
push
mov
lret
in
mov
jmp
lock
cmc
push
repnz
cld
and
xor
xchg
pop
fsub
fstps
scas
call
mov
inc
test
pop
xchg
into
repz
dec
cmpb
es
roll
jle
cs
hlt
outsb
xor
add
aaa
movsl
cmpsl
add
bnd
leave
shll
test
cmp
testb
mov
and
dec
jbe
testb
bound
arpl
popf
fwait
shll
lods
mov
pop
xchg
xchg
outsl
fidivrs
xchg
mov
fst
nop
cltd
enter
mov
pop
call
push
shrb
mov
xchg
dec
ljmp
jno
jne
test
sti
js
loopne
scas
rcr
out
stos
in
sub
stos
push
pop
mov
add
out
scas
repz
and
cwtl
ja
and
rorb
mov
and
fidivrs
pusha
push
mov
dec
mov
mov
outsl
mov
jecxz
xchg
push
xlat
sti
lret
sub
fcoml
lcall
pop
mov
xchg
mov
out
ret
in
xchg
sub
movsl
rcrb
mov
xchg
sbb
dec
jbe
stc
xchg
js
dec
fdivrl
inc
xchg
jb
out
lock
ss
cwtl
xor
daa
cmp
dec
pop
fnstenv
sbb
lods
jl
fwait
mov
push
add
sbb
dec
dec
or
enter
add
in
fbld
fldt
imul
iret
int3
pop
pop
leave
mov
xor
xchg
stos
xchg
lds
fcomi
mov
mov
mov
push
in
addr16
push
jle
scas
ficompl
xlat
in
in
jne
xlat
lcall
lret
mov
ret
push
mov
aam
cmc
out
cmp
cmp
jae
push
out
stc
repz
or
fsts
jmp
pop
scas
pop
pop
jge
lea
cmpsl
sbb
jne
fsubrs
mov
and
scas
movsb
add
lcall
movsb
jmp
or
popf
mov
mov
cmp
push
and
and
adc
inc
xchg
ret
mov
mov
mov
mov
jmp
adcl
xchg
sti
loopne
and
cmp
cwtl
int
jl
xor
fnstsw
ror
dec
inc
addr16
arpl
movsb
pop
fnsave
xchg
data16
js
std
sub
sahf
push
jbe
mov
insb
imul
leave
shl
adc
ret
lods
das
sub
mov
mov
pop
pop
in
insb
scas
add
xor
fs
lods
fnstenv
mov
jecxz
dec
addr16
sbb
add
aam
rorl
cld
les
rorl
and
cmpsb
imulb
jecxz
pop
jnp
mov
nop
enter
xchg
in
mov
adc
psubd
jge
cmp
out
mov
and
stos
hlt
pop
fwait
adcl
mov
lock
gs
cwtl
sbb
inc
sbb
or
sbb
mov
pop
xchg
pop
rol
pushf
ljmp
sbb
fs
mov
xchg
ljmp
rcr
dec
test
lcall
mov
jg
jae
mov
fs
mov
aaa
sbb
push
roll
outsb
mov
mov
lds
push
cmpsl
mov
cmpl
outsl
pop
mov
jo
aaa
inc
cwtl
jl
cmp
mov
xor
or
sbb
mov
mov
jecxz
jb
jle
push
push
push
cmpsl
adc
loop
mov
icebp
jmp
sub
mov
push
shll
out
gs
sbb
aad
ja
mov
mov
xchg
out
jecxz
out
cmp
jge
sti
movsl
mov
enter
cltd
mov
test
fisttpl
popf
jo
rclb
mov
dec
sahf
lcall
xor
addr16
lods
push
cmc
cmp
lds
pop
pop
mov
cld
cltd
out
mov
mov
pop
cmpsl
mov
fs
stos
outsb
daa
and
or
fdivrs
sbb
pop
pop
mov
cmp
xchg
ljmp
mov
je
and
ljmp
ja
outsb
cs
jb
mov
out
cltd
sti
in
inc
cmpw
enter
lret
movsb
or
push
popa
lret
lods
and
mov
arpl
xor
in
ds
outsb
dec
add
je
mov
enter
adc
jb
shrl
call
mov
bound
addr16
pop
hlt
shlb
inc
ljmp
lods
mov
add
mov
mov
mov
sub
dec
movsl
jp
mov
int
repz
popf
add
movsb
push
sbb
in
inc
push
pushf
mov
xchg
jo
sbb
cmp
pop
cmp
es
lret
add
daa
jno
xchg
pop
mov
dec
jbe
idivb
jne
je
push
jae
insl
dec
push
mov
into
aaa
and
sbb
in
adc
repnz
sub
jmp
cmp
sahf
adc
rcl
enter
aas
xlat
and
mov
xor
dec
pop
inc
mov
mov
adc
adc
in
or
call
jge
rclb
inc
xchg
arpl
xor
mov
jge
les
les
jecxz
lret
popf
jo
fisttps
pop
adc
testl
cmp
aaa
stos
sbbb
es
pop
inc
jae
xor
mov
test
or
mov
xorl
scas
aaa
je
subl
mov
call
fadd
add
sub
cmc
jmp
test
pop
dec
bound
pop
rcr
mov
and
outsb
sub
rcrb
scas
inc
stc
sub
sub
mov
cmc
addl
add
mov
pop
rol
pop
push
adcl
das
sub
mov
pop
repz
pop
pop
pop
mov
xchg
mov
test
jg
nop
test
inc
mov
dec
les
or
andl
cli
or
aad
cmp
jo
orb
ret
inc
jg
stos
xor
adc
orb
mov
xchg
into
out
jge
jbe
adcb
inc
cltd
jne
pop
dec
pop
fisubl
movsb
xor
int3
inc
xor
fistps
mov
aad
pop
scas
inc
lcall
lret
push
cmp
inc
push
or
int3
mov
mov
fcmovnbe
dec
or
mov
push
inc
push
push
movsl
push
addr16
fwait
test
dec
pop
pop
add
ljmp
inc
lods
cmp
mov
andb
push
cvtpi2ps
mov
ds
mov
mov
stos
lcall
mov
pop
in
hlt
insb
xlat
inc
shl
scas
ja
std
mov
sbb
xor
iret
add
cmp
pushw
xorl
addb
aas
insl
test
sbb
clc
mov
stos
pop
in
imull
addr16
flds
and
js
mov
dec
mov
jb
dec
sub
mov
in
jae
push
push
pop
adc
pop
loope
cmp
add
jae
orl
lods
dec
jno
sbb
inc
test
push
mov
pop
mov
ja
inc
jl
pop
jg
jb
mov
daa
sbb
testl
fldl
arpl
shrl
or
sbb
mov
xchg
leave
adc
xchg
pop
inc
add
test
xor
scas
shll
cmpl
jp
xor
pop
adc
cmp
push
out
shll
clc
dec
push
ss
inc
ficompl
cmc
push
popf
das
adc
rorb
icebp
dec
imull
std
shlb
in
inc
and
xchg
bound
or
or
mov
aad
fimuls
push
xchg
lret
push
outsb
iret
ret
cmp
lea
mov
cwtl
lcall
lret
lcall
jns
inc
stos
call
add
insb
or
nop
dec
pop
or
fscale
pop
enter
mov
pushf
sbb
push
lds
je
dec
xchg
adc
push
push
push
xor
shlb
fs
cmpsl
aas
cmp
push
loop
popa
dec
inc
xchg
and
sbb
in
xor
mov
shll
sub
das
inc
xchg
pop
rcrl
sbb
xchg
movsl
and
stos
ss
out
xorb
push
sarl
subl
mov
enter
shlb
mov
pop
inc
fstp
push
imul
aaa
call
in
mov
mov
sub
cmp
in
mov
cmp
cltd
push
mov
mov
fdivrs
mov
dec
idiv
xor
pushf
adc
mov
out
adc
add
adc
hlt
out
es
ja
mov
jns
push
sub
push
lds
iret
aam
fildll
mov
in
fs
and
bound
fwait
lahf
add
push
sub
jg
sub
push
mov
cmp
negb
lods
add
inc
cld
sub
sub
sbb
add
dec
dec
adc
xor
cwtl
lret
call
pusha
faddl
xchg
pop
shll
jns
xor
mov
out
aas
push
js,pn
gs
movzbl
mov
xor
jmp
dec
sub
mov
pop
dec
mov
and
cmp
hlt
es
subl
decb
clc
mov
mov
jg
mov
popa
aam
lock
packsswb
push
mov
in
stos
int3
push
lahf
mov
cltd
addr16
lcall
adc
inc
imul
cmpsl
and
mov
mov
push
aaa
xchg
aaa
sbb
ss
mov
adc
fwait
lds
inc
adc
fimuls
lret
cmpsb
cmc
mov
stc
insl
mov
pop
loop
and
dec
fistpll
add
fwait
imul
inc
movsb
xchg
mov
pushf
mov
cld
iret
jo
jbe
cld
sbb
fs
dec
rcrb
cli
sub
shll
xor
into
nop
adc
es
jns
ret
pop
mov
inc
adc
mov
test
das
es
pushf
loope
loopne
imul
mov
xor
xchg
bound
jno
sub
ret
fdivrs
inc
inc
and
and
mov
xlat
fsts
pop
dec
dec
arpl
sbb
rorb
mov
out
cmp
or
xor
or
movsl
add
pop
test
mov
push
mov
and
dec
out
add
xor
push
and
mulb
xor
lcall
inc
xor
sub
ljmp
cmp
dec
inc
jae
push
leave
pushf
hlt
movsl
shr
sub
push
in
xor
addb
mov
add
and
jg
nop
jae
push
pop
in
outsl
cwtl
jno
xor
outsb
and
sub
jb
ret
outsl
icebp
testl
aam
dec
enter
jbe
sub
xchg
jae
sub
cmp
cmpsl
push
add
outsb
imul
ffree
jle
scas
xchg
and
movsl
pushf
xchg
es
xchg
lcall
pop
push
jl
bnd
pop
in
jb
hlt
inc
clc
mov
sarb
sbb
out
jecxz
hlt
insl
cmp
jae
mov
mov
add
frstor
cmp
xchg
aas
inc
das
xchg
stos
std
push
cmp
xor
sti
or
cltd
rolb
xchg
out
cwtl
mov
xor
cmpsl
or
lds
xchg
in
out
ror
clc
in
adc
arpl
mov
pop
and
push
lea
aam
adc
xorl
jb
shr
inc
test
xchg
pop
fnclex
add
mov
outsb
inc
push
decb
jae
sub
pop
imul
sti
out
pushf
push
dec
sub
jge
add
sub
or
js
cmp
dec
pop
cltd
pop
std
in
push
fs
mov
retw
push
aaa
pop
pop
sahf
ljmp
xchg
xchg
cld
mov
push
mov
filds
pop
push
imul
outsl
xchg
push
mov
sbb
pushf
fnsave
and
mov
mov
test
scas
mov
add
jmp
push
imull
dec
dec
pop
push
pusha
xlat
and
push
jmp
jle
outsl
roll
stos
or
jle
movsb
pop
add
cmp
out
push
dec
lcall
lock
add
dec
xchg
roll
jge
into
mov
das
xor
flds
mov
lret
outsb
fcomp
cwtl
cld
cmp
sub
rorl
mov
inc
out
sbb
xchg
and
mov
ljmp
inc
sub
sub
int
outsl
sbb
add
lods
dec
mov
lea
lret
out
adc
loopne
or
test
and
imul
dec
scas
mov
data16
jb
loop
cwtl
push
mov
mov
pop
push
int
and
arpl
push
roll
popf
adc
jg
xor
js
cwtl
add
loope
xchg
xchg
sbb
insb
xchg
push
add
and
ja
fsubs
fadd
add
cli
into
jno
clc
jmp
push
stos
into
cwtl
fdivs
push
jg
ret
push
into
add
pop
lds
jmp
sahf
nop
clc
cltd
sub
imul
les
pop
pop
repz
xchg
jbe
test
pop
sbb
movsl
gs
sbb
outsb
stos
sub
xor
les
aam
sub
cmp
push
xchg
cmp
fs
sbb
xchg
mov
xchg
pushf
jmp
inc
sarl
sub
inc
xchg
mov
cld
jmp
adc
add
sbb
push
push
sbb
das
xchg
out
and
cmpl
push
pop
xor
sbb
sbb
dec
push
pop
insl
ret
les
scas
cmpsb
jns
mov
cmp
xchg
nop
addb
stc
mov
adc
pop
mov
ljmp
addr16
push
cli
xchg
xchg
xor
push
and
sbb
inc
jns
xchg
cmp
pop
and
jle
mov
popf
stos
add
out
add
jne
push
mov
mov
ss
sar
mov
sub
mov
lret
lock
push
cmc
add
sbb
shlb
fcmovnu
das
jo
dec
ret
dec
and
mov
dec
into
mov
and
lods
push
or
mov
xchg
aam
cld
xchg
popf
xchg
pushl
lret
push
xchg
enter
movsl
ds
dec
mov
jno
cli
xor
outsb
mov
xchg
sti
mov
stos
dec
xchg
add
jle
jno
push
jnp
add
stos
add
ret
or
xchg
dec
hlt
add
lcall
xor
mov
add
negb
add
mov
inc
sub
dec
mov
test
sahf
xchg
out
imul
test
movsl
pop
mov
flds
mov
movsl
outsl
call
fcmovu
imul
sub
xchg
iret
es
ss
mov
ret
add
push
sbb
out
inc
jb
pop
sub
inc
out
clc
addr16
mov
clc
pop
and
cmp
sbb
add
cmpsl
icebp
test
popa
cwtl
sub
push
aam
out
in
test
pop
push
push
pop
jo
push
pop
out
xor
dec
mov
lret
mov
cwtl
leave
or
pop
jno
cmc
mov
enter
xlat
popf
push
xchg
dec
js
ret
jae
pop
loope
divb
add
bndldx
inc
or
rcll
outsl
mov
xchg
ja
into
aas
les
aaa
mov
xchg
mov
mov
push
adc
sbb
loop
stos
adcl
fildll
in
pop
iret
and
test
call
aaa
mov
inc
sbb
or
dec
adc
pop
mov
mov
icebp
mov
adc
xor
arpl
rcr
jmp
fs
repnz
fs
les
pushf
pop
ljmp
jo
jg
xor
mov
sbb
sub
punpcklwd
mov
sahf
insb
loope
mov
mov
in
stos
test
ret
jg
orb
pop
out
push
ja
xchg
rcrb
dec
push
sub
lcall
cmpsb
lods
scas
or
mov
les
fiaddl
mov
and
jb
pop
je
ja
orb
rcr
mov
das
mov
mov
and
mov
repz
dec
jmp
out
scas
dec
mov
mov
scas
and
lods
dec
dec
sub
jb
dec
push
xor
dec
popa
pop
jo
xor
dec
nop
je
inc
jmp
pop
push
mov
add
dec
fcmovne
jne
ljmp
popf
mov
aad
aaa
in
push
cs
or
cs
or
mov
test
and
mov
decb
mov
push
cmp
or
mov
cmp
cwtl
lods
fildll
aas
sub
out
fwait
dec
pop
ja
aad
enter
sub
mov
mov
imul
subl
xorb
aad
outsb
jmp
add
mov
out
divb
xchg
xchg
lods
int3
test
push
stos
or
jo
clc
popl
lea
mov
mov
sbb
aad
popa
popa
push
lods
jmp
and
inc
test
adc
xlat
adcl
or
cmp
je
lret
repz
iret
cli
sub
push
mov
or
push
sbb
ja
repz
xchg
mov
cltd
lcall
les
sub
sbb
mov
push
xchg
fwait
adc
out
test
sbb
adc
mov
icebp
lock
bound
scas
cli
pusha
cmp
mulb
push
push
inc
or
mov
je
pop
popa
imul
icebp
rclb
mov
cmpsb
dec
push
mov
jmp
and
and
leave
adc
push
cmp
xchg
scas
movsl
dec
popa
cmp
mov
cmp
jb
cmpsb
leave
pusha
les
cld
dec
out
and
fbld
sub
imul
adc
and
scas
jo
mov
xchg
sbb
jnp
xchg
sub
shrb
in
xchg
or
pop
lds
ja
fstpt
in
jecxz
bnd
sbb
jae
cwtl
fstpl
jmp
hlt
mov
sub
cld
fiaddl
punpcklwd
fstpt
sub
popa
stos
pop
loopne
fs
stos
es
mov
cmp
lcall
pushf
cmp
xor
mov
cmpsl
loopne
iret
popf
pop
sub
repz
push
test
and
mov
daa
or
mov
in
pop
cmc
rcl
lea
mov
repz
or
out
mov
pop
pop
xchg
fnstenv
sti
sbb
xor
or
jbe
push
and
mov
fmul
in
dec
arpl
and
fmuls
scas
push
pop
push
shl
cmp
movsl
cmp
push
push
push
call
pushf
repnz
fnstsw
or
xchg
leave
inc
stos
aaa
dec
push
clc
cmp
jb
loop
sub
pop
and
add
jne
int3
lea
cwtl
xchg
flds
pop
add
mov
add
into
mov
push
and
call
es
in
mov
gs
push
xchg
into
movsb
pop
xor
sti
xlat
das
dec
pop
repz
add
xchg
fwait
jmp
jecxz
stc
mov
mov
mov
mov
sbb
xorb
jle
sub
nop
and
mov
cld
pop
scas
sub
das
aad
pop
lds
inc
pop
jb
xor
lahf
add
mov
sti
lods
xor
pop
pop
loope
std
cmp
out
cs
scas
and
int3
test
insl
mov
xor
repnz
xor
in
aam
aad
inc
sbb
enter
pop
aad
push
pop
xchg
insb
fidivrl
pop
and
negl
popl
xlat
sub
and
mov
out
stos
push
sbb
into
ja
popa
lock
stos
jns
mov
mov
xchg
into
push
insl
push
jmp
ljmp
pop
xor
dec
shrl
or
popa
push
mov
fiaddl
jmp
out
idivl
jmp
out
int
movsl
hlt
xlat
lret
cld
cmpsl
pop
arpl
inc
bound
iret
push
add
imul
mov
popa
push
inc
jo
jne
dec
pop
addr16
sarl
inc
adc
aaa
mov
lock
jnp
incb
sti
mov
mov
lods
xor
push
into
popf
jp
ret
in
push
mov
addr16
daa
movsb
in
cbtw
and
imul
push
fmul
mov
repnz
or
xor
jge
mov
lret
lods
push
pop
push
loopne
dec
dec
notl
adc
mov
idivl
cmp
out
xchg
add
shr
push
add
add
xlat
int3
xorl
lods
lock
dec
es
roll
add
lret
aam
cmp
cmc
cmp
inc
loopne
out
fidivrl
pminub
shrl
ret
shlb
test
fisttps
aad
mov
mov
mov
out
inc
arpl
ret
push
inc
dec
sar
jae
outsl
push
or
or
aas
ror
bound
push
test
outsb
inc
fwait
push
inc
out
insl
add
loope
dec
int
push
inc
into
push
and
sbb
pop
sub
sbb
mov
xchg
fstpl
pop
inc
pop
jnp
lods
mov
and
mov
push
cwtl
inc
or
les
scas
sub
sub
and
mov
movsl
loope
stos
jl
cmp
stos
jne
mov
stos
pusha
es
xchg
cmp
adcb
pushf
or
xor
mov
call
push
adc
inc
loope
insb
add
pop
jp
lret
mov
sbb
xchg
sub
leave
jmp
das
lods
loope
adc
pushf
bound
adc
int
and
xchg
jae
inc
pop
lds
daa
je
cli
clc
je
add
and
xor
push
push
add
xlat
and
outsl
cmpsb
or
nop
addr16
sbb
jb
mov
add
jbe
push
xchg
mov
incb
inc
mov
push
insl
cmpsl
dec
or
cwtl
inc
sbb
pushf
call
jb
aaa
repz
lock
sub
dec
dec
sub
dec
mov
mov
stos
pop
sub
jecxz
mov
mov
xor
add
add
ja
sbb
call
push
adc
push
outsl
dec
push
mov
daa
or
push
mov
mov
out
in
pop
mov
f2xm1
mov
inc
jo
sub
into
mov
sbb
cli
scas
inc
dec
sub
mov
insl
and
ljmp
ss
sbb
int
outsb
sbb
shll
mov
ja
cmp
fistpll
popf
xchg
xor
ja
sub
pop
mov
into
clc
imul
icebp
push
pop
popa
or
mov
jmp
cmc
and
test
inc
xchg
mov
ds
mov
cwtl
repnz
les
aam
int
cmpsb
hlt
enter
inc
or
outsl
mov
mov
jno
lahf
or
pop
adc
lret
sub
sbb
mov
insl
mov
jnp
xchg
or
mov
ljmp
sub
frstor
ss
imul
insb
enter
push
pop
mov
mov
cli
xor
ret
xor
mov
out
movsb
out
idiv
cwtl
inc
sub
push
nop
cmp
into
jne
addr16
out
xor
inc
roll
mov
cmp
lret
adc
pop
lods
dec
mov
insb
dec
test
jns
sbb
xchg
mov
cmp
daa
xchg
scas
push
ja
in
xlat
jmp
xchg
imul
imul
sbb
push
repnz
movsl
add
das
mov
lock
pop
ret
xorl
push
jnp
cltd
sbb
lds
ds
jmp
fs
aaa
ficoms
shl
mov
dec
mov
push
sbb
add
insb
push
mov
xor
dec
add
mov
xor
int3
js
std
cli
enter
xor
jge
xchg
adc
pop
cltd
loop
jb
sbb
and
or
push
rcl
add
sbb
outsb
stos
aaa
xlat
mov
dec
add
pop
xchg
xchg
ret
add
xor
arpl
aas
xchg
ds
xor
jae
pop
jle
lahf
in
jne
mov
hlt
xchg
pushf
addb
ret
push
inc
rcrb
push
leave
mov
repz
mov
inc
neg
shl
inc
pusha
outsb
out
fs
popa
lods
sbb
pop
fcomps
dec
push
push
retw
mov
mov
pop
mov
mov
mov
cmpsb
and
pop
sub
sbb
fwait
adc
lds
cmp
cld
mov
sysenter
imul
or
sbb
xchg
sub
cwtl
xchg
ret
inc
adc
add
stos
bound
or
loop
out
out
pop
lcall
and
je
cmp
cmp
insl
cmpsb
iret
enter
lea
roll
aad
dec
jg
xchg
push
jmp
fsubrl
push
js
test
pop
xchg
inc
dec
dec
adc
sbb
int
aaa
jl,pt
or
bound
jg
sub
adc
mov
call
push
inc
lret
mov
pop
jbe
enter
fstps
aaa
ss
and
rcrb
sub
jg
mov
inc
jp
roll
insb
fildl
push
rcll
dec
adc
jno
data16
inc
inc
sbb
out
sub
test
jno
inc
pop
mov
pop
adc
xchg
pusha
sbb
popf
xchg
gs
push
xchg
add
mov
jecxz
mov
cmp
sub
adc
adc
sub
divb
stos
in
jb
adc
xor
test
push
dec
rcl
mov
mov
orl
out
fsts
cmp
icebp
jbe
mov
mov
mov
fisubs
xor
sbbb
sbb
pop
dec
test
out
jno
dec
mov
ficoml
stc
cmpsb
cwtl
fimuls
dec
addr16
jne
lea
xlat
in
jecxz
add
xor
and
push
jo
fadd
or
or
mov
cmpsl
imul
es
rcl
add
xacquire
or
xchg
push
or
xchg
fidivrs
popl
roll
flds
mov
xor
xorl
cmp
jnp
int
cmp
mov
xor
or
xchg
push
push
rcr
mov
inc
stos
mov
mov
mov
xchg
jle
mov
out
fimull
insb
push
and
outsb
add
push
mov
mov
fmull
test
sub
imul
fidivrs
push
test
cmp
mov
xchg
in
mov
test
movsl
ljmp
std
jmp
addb
js
loope
and
mov
ljmp
lods
icebp
mov
sbbb
ja
outsb
test
xor
outsb
vcvtsi2sd
nop
out
add
adc
lds
sbb
aas
mov
cvtdq2ps
xchg
mov
add
sub
fldcw
mov
mov
shl
mov
dec
mov
test
pop
call
push
push
xor
jbe
mulb
adc
sub
push
fs
bound
lods
cmp
enter
jecxz
imul
xchg
inc
adc
and
jp
lret
shl
imul
xchg
dec
mov
mov
or
int3
inc
aaa
aaa
lea
pushf
sub
xor
inc
dec
jmp
xchg
cmp
mov
sbb
movsl
imul
call
nop
ret
dec
add
scas
lret
mov
jb
out
pop
stos
push
and
dec
out
inc
mov
adc
mov
aad
xchg
inc
test
nop
and
push
xor
push
inc
std
adc
es
daa
das
adc
xchg
push
lret
inc
scas
test
sub
jl
notb
xorb
ret
cmp
mov
aas
mov
aad
leave
in
lds
inc
sub
insb
xor
or
sbb
xchg
dec
xchg
mov
out
xor
push
int3
lcall
sbb
xchg
iret
daa
pop
add
inc
mov
dec
pop
cld
arpl
mov
roll
lcall
je
xchg
xchg
iret
int3
outsb
jb
sbb
cwtl
inc
movsl
rcrb
js
push
pop
sbb
xchg
int3
icebp
movsl
mov
and
repz
jmp
in
adc
in
xchg
repnz
and
mov
pushf
stos
dec
aad
mov
gs
cmpsl
movsb
daa
xor
mov
adc
xchg
xchg
pop
insl
sub
sub
fidivs
sub
mov
nop
fadd
jae
xchg
imul
negb
out
sahf
jge
push
stc
pushf
das
int
je
aam
pop
xchg
xchg
pusha
dec
das
push
nop
adc
mov
fisttpl
frstor
addl
sbb
push
xor
je
lods
loop
xchg
fldenv
xchg
fnstenv
sbb
pushf
cs
cli
out
mov
shlb
mov
divb
in
out
xchg
jp
test
mov
sbb
fidivrs
mov
mov
add
movsl
nop
push
loop
leave
ds
jecxz
ljmp
push
movl
rcr
fldl2t
mull
daa
xor
daa
aaa
dec
sarl
cmpsb
xchg
jno
push
pushf
mov
mov
stc
cmc
test
add
sbb
notb
xchg
dec
mov
js
ret
insl
xor
jg
dec
jl
mov
fldenv
jo
aam
fcompl
mov
dec
leave
insb
movsl
mov
stos
dec
adcb
test
fsts
addr16
dec
ss
mov
cmpsb
xor
and
or
or
mov
sahf
cmp
andb
mov
mov
or
lahf
pushf
mov
inc
mov
jbe
aad
in
movsl
movsl
clc
mov
dec
mov
adc
adc
pop
add
unpckhps
cmp
jmp
imul
add
or
je,pn
insb
mov
dec
sahf
sub
rcl
aam
jp
sbb
stos
aam
shr
cmp
or
rcrb
and
lds
mov
into
leave
es
aad
daa
stc
scas
adc
popf
mov
loop
neg
pusha
pop
push
push
lds
sub
xlat
xchg
mov
addr16
fbstp
push
inc
xor
cltd
pop
stos
cmc
dec
test
and
ret
cmc
faddp
aad
incb
jo
add
and
jg
pop
push
lods
lods
sub
and
stos
inc
or
mov
sbb
outsb
nop
xlat
push
and
sub
popa
out
or
jo
jge
cmp
jp
jg
fdivrl
mov
push
pop
into
aas
mov
mov
dec
arpl
rcrl
jae
sub
lds
ret
mov
shrb
or
mov
mov
push
in
test
pop
sbb
mov
mov
dec
movsb
lret
pop
cmp
xor
test
push
pop
test
push
sbb
fcompl
movsb
outsb
xlat
mov
dec
inc
xchg
xor
push
xlat
pop
fisubrs
jae
jne
fs
pop
lahf
out
adc
jge
aaa
add
sub
sbb
jo
xor
and
je
bound
mov
insl
jp
rorl
xchg
sbb
pop
sub
pop
inc
lock
addr16
popa
leave
scas
imul
lcall
mov
repnz
inc
fisubrs
push
clc
mov
loope
mov
aam
dec
iret
mov
adc
dec
dec
pop
sahf
addr16
inc
incb
push
mov
pusha
dec
jb
mov
pop
mov
fs
das
dec
and
pop
and
xchg
popf
xchg
mov
daa
out
jae
fstpl
push
mov
mov
sbb
mov
sbb
xchg
pop
add
stos
push
cltd
out
mov
sarb
inc
add
cs
inc
adc
fdivl
sub
out
mov
or
insl
sub
out
sti
es
jg
scas
adc
mov
pop
dec
popa
push
inc
fsubs
add
jb
pop
inc
clc
adc
std
in
pop
sub
popa
pusha
rol
jb
loope
out
rcrb
fwait
adc
xchg
fisttps
xchg
inc
fildll
cmpsl
inc
push
cmp
inc
fmul
dec
mov
mov
scas
cmp
mov
hlt
pop
or
inc
push
inc
adc
jge
lahf
out
popa
xor
in
xchg
mov
sbb
push
push
rorl
mov
dec
mull
out
dec
push
push
xor
divb
xor
fldcw
sbb
jmp
aam
adc
scas
mov
imul
fcoms
rorb
sbb
repnz
pop
push
rorb
cltd
pop
and
sub
fs
scas
cmpb
je
adc
jecxz
ja
sbb
repz
mov
mov
and
jb
imul
inc
addr16
mov
sbb
jecxz
shlb
in
icebp
in
xchg
pop
and
pop
sahf
pop
cmp
jle
and
mov
add
sub
add
jge
notb
int
xchg
jb
or
mov
jae
mov
add
neg
std
fcoms
sbb
hlt
sbbb
orl
sbb
xchg
add
pop
insl
xor
loopne
pop
inc
scas
sub
aaa
inc
push
push
ret
cwtl
jb
fwait
idiv
pop
out
loope
add
cmpb
mov
scas
lock
sbb
push
popf
jbe
cmp
pushf
push
cmp
pop
sahf
ds
mov
xor
xchg
into
mov
ss
push
pop
insl
adc
add
fimuls
mov
mov
sbb
pop
out
leave
mov
mov
mov
fbstp
icebp
sub
adc
jmp
dec
mov
mov
in
movsb
insl
pop
pushf
inc
scas
stos
imul
inc
addl
out
sbb
and
push
push
pop
rcll
leave
and
sub
insb
scas
scas
ja
adc
clc
or
jbe
adc
popa
negl
leave
dec
jecxz
pop
sub
out
mov
xchg
lock
mov
fildll
mov
mov
mov
es
imul
popa
data16
std
loop
xorl
or
out
sub
outsl
shrl
or
cmp
fs
push
pushw
es
mov
mov
inc
pop
sahf
sbb
cld
mov
aaa
rorl
jno
dec
xor
int
or
stc
imul
jge
sub
cs
in
fists
xchg
orl
sahf
test
and
imul
jp
jns
dec
mov
jg
and
mov
out
or
pop
inc
mov
int3
mov
pop
adc
jecxz
xlat
mov
inc
adc
dec
ret
outsb
xchg
lahf
xor
test
divl
adc
hlt
incl
in
rclb
push
adc
mov
scas
mov
add
adc
lds
test
inc
and
jae
jmp
loopne
loope
test
fcmovnb
rcll
in
cs
mov
push
data16
inc
clc
out
add
enter
push
mov
add
ds
xchg
rorb
out
xchg
sub
je
push
leave
dec
jnp
call
int3
subl
mov
and
test
lock
xchg
jbe
sub
pop
fildl
sub
adc
stos
fisubrs
pop
xor
js
pop
sarb
pop
jo
loop
xlat
push
inc
and
lock
in
mov
lock
mov
ficompl
inc
ds
inc
cmp
test
subl
jle
sbb
in
pop
inc
into
inc
pop
lret
out
push
xlat
mov
xchg
daa
xchg
idivl
rcrl
xor
pushf
dec
icebp
mov
cmpsl
or
mov
mov
in
jno
stc
jb
mov
rcr
lods
jae
into
fwait
mov
mov
lock
and
sbb
push
fdivs
xchg
pop
cmp
fstpl
testl
les
int3
jno
cli
out
int3
xlat
rclb
into
inc
aas
stos
movsb
add
jnp
pusha
jbe
and
add
das
insb
mov
call
aaa
mov
cmp
insb
in
lahf
mov
repz
sub
push
aaa
xchg
insl
in
mov
outsb
int3
inc
stos
mov
mov
and
inc
jno
cmpb
dec
sbb
icebp
mov
xchg
ja
mov
push
xor
ret
cmp
or
sbb
push
mov
cmp
and
jle
leave
mov
sub
mov
cmp
fs
fiaddl
mov
jbe
pop
cmp
fdivrp
sub
fsubrl
shlb
fwait
sub
xor
ja
jle
xor
popa
inc
icebp
jns
orb
shlb
rcrb
inc
lods
mov
adc
clc
jp
jl
repz
add
push
shr
ss
mov
lret
push
jmp
test
fsubrs
mov
leave
cmpsl
out
repz
or
pop
mov
adc
xor
shll
sar
loopne
loopne
lods
shlb
push
jbe
loop
dec
and
inc
fisttps
or
sub
lods
mov
call
pop
add
sub
test
add
movsb
test
cmpsl
add
adc
cmovnp
stc
cmc
and
pop
loope
or
scas
cmp
lahf
inc
in
lret
icebp
xor
rol
shl
pop
sahf
scas
div
jno
cmp
pop
xchg
sub
ss
inc
jmp
inc
les
dec
inc
int3
adc
xchg
sub
repz
jo
dec
sub
pushf
xabort
jg
mov
jcxz
push
pop
hlt
pop
sbb
sti
xchg
inc
mov
cmp
mov
sbb
ja
iret
out
add
jg
sub
pop
cmpsl
test
inc
or
test
iret
pop
jb
jg
clc
call
xor
out
das
xlat
andb
mov
sub
pushf
cli
mov
ret
test
lahf
or
cmp
xor
fnstenv
or
ds
mov
data16
pop
popf
inc
in
in
sbb
or
pop
inc
cs
jmp
rep
xor
out
lea
pop
rolb
xor
fdivl
test
sbb
int3
pop
aas
fsubs
push
lods
push
rorb
cmp
sbb
pusha
pop
xchg
nop
mov
sub
jmp
inc
mov
ss
addb
daa
lods
popf
ljmp
mov
mov
outsl
movsb
sbb
add
add
or
movsl
jl
lds
in
mov
and
sti
es
lea
out
outsb
in
divb
xor
cmp
in
xlat
test
xor
xlat
push
xchg
aad
xor
cld
getsec
ret
shrb
rcrb
in
cmp
dec
popa
mov
push
test
or
ficomps
cmp
add
xor
cmpsb
ficomps
xor
sahf
das
push
cmp
mov
aam
cmp
mov
shll
adc
xchg
and
add
imul
jecxz
ja
dec
into
subl
fldl
pop
decb
aam
mov
sbb
sbb
mov
loope
push
xchg
in
mov
mov
pop
push
and
mov
inc
cld
push
outsl
sbb
mov
es
int3
mov
adc
arpl
repnz
enter
fnstenv
scas
add
and
inc
int
push
adc
ja
adc
pusha
sbb
push
das
and
cmp
cli
adc
pop
insb
push
xor
mov
int3
mov
jno
pop
aas
xchg
push
add
stos
nop
loop
pop
insb
mov
dec
xor
cltd
adc
addr16
push
push
rolb
mov
lret
inc
lock
sub
sbb
sbb
mov
add
inc
aad
fimull
adc
je
sbbl
movsb
mov
cs
fisttpll
jne
rcrb
xor
orl
jg
dec
inc
mov
insb
aad
lea
pop
mov
sahf
rorl
pop
mov
jp
mov
xor
iret
mov
fs
pop
add
xchg
out
mov
push
js
xchg
imul
lret
xchg
mov
int
mov
sahf
scas
ret
dec
bound
js
add
popa
imul
mov
or
les
repz
int3
out
repnz
icebp
xchg
jecxz
int3
aad
mov
or
std
clc
adc
addr16
test
lahf
cmpl
sahf
lahf
and
sub
adc
xlat
popa
out
outsl
dec
sub
dec
lock
cwtl
iret
ret
cmp
and
or
neg
jp
or
out
hlt
paddq
mov
cmp
fld
lock
out
fdivl
js
add
mov
rorl
cmpsb
cmp
shl
aas
int3
lea
adc
jae
loope
stc
inc
mov
cmp
addr16
inc
or
cs
sbb
jbe
mov
insl
adc
mov
jns
ret
jle
imul
add
xor
xor
popf
ds
fisubl
lea
in
mov
pushf
fwait
pop
out
ret
jb
adc
mov
inc
faddl
pusha
dec
aam
out
das
mov
xor
testb
lret
out
push
lock
mov
ss
mov
xor
add
and
jp
cmc
push
push
jns
and
cli
insl
dec
xchg
pop
and
pushf
or
mov
fwait
inc
ret
xor
subb
sub
cmpsb
xchg
lods
and
xchg
enter
loop
or
push
in
mov
ss
xlat
fnstenv
cmpsl
jbe
lods
xor
fadd
popf
mov
xchg
sub
and
loop
aaa
lcall
cs
sti
aas
jp
andl
out
dec
dec
orb
stos
test
add
xchg
pusha
lret
jp
imul
fcmovb
lret
out
mov
mov
jp
into
and
mov
push
jno
mov
pop
imul
popf
lea
hlt
sbb
stos
xchg
fisttps
and
aaa
into
jge
in
mov
out
adc
rol
sub
cmp
mov
pop
sbb
sub
xor
js
xor
lcall
test
lret
sahf
blcs
mov
xchg
pop
mov
lret
movsl
fildl
mov
sbb
xor
rcl
and
pop
sbb
xchg
xchg
shl
add
push
rcll
sahf
rol
push
cld
xorl
test
xor
test
or
jbe
add
fwait
iret
fsubl
push
bound
test
sub
mov
lods
rcr
mov
daa
into
loope
mov
jo
and
mov
push
sub
cli
mov
cmp
mov
aas
outsl
sti
cmp
call
outsl
pop
lcall
bound
pop
push
in
mov
mov
loope
jp
enter
cmp
dec
dec
outsb
mov
imul
negb
xchg
out
jecxz
ja
mov
data16
nop
jo
mov
data16
out
je
out
sbb
xor
icebp
testl
push
mov
cmp
inc
ja
sbb
inc
sub
push
stos
xchg
and
outsb
int3
movsb
adc
fwait
daa
je
add
cmp
pop
ja
negl
in
or
insl
test
xchg
mov
arpl
repnz
mov
mov
jbe
sub
std
jnp
in
cwtl
jmp
aas
idiv
adcb
das
push
and
sub
xlat
or
xor
fisttpl
test
popf
jo
addr16
sub
int3
and
mov
lret
inc
add
jbe
outsl
lret
mov
andl
mov
xchg
xchg
xchg
pusha
jmp
sti
mov
enter
mov
jae
inc
lods
xchg
or
or
pop
add
lret
pop
dec
int3
cmpsl
mov
xorl
sub
addl
jne
imul
pop
inc
mov
pop
mov
xchg
mov
mov
pop
jge
js
std
jb
cmp
push
jl
mov
pop
cmp
in
aas
sub
push
pop
sub
sti
shrl
idivl
fwait
sub
push
in
push
cmp
fstl
fdivrs
std
jp
iret
fidivs
cmp
inc
xor
imul
aam
adc
lds
push
std
xor
mov
push
sub
and
rcrb
arpl
adc
dec
lds
jnp
lahf
lcall
mov
mov
sbb
pop
and
push
jmp
xor
je
or
out
fldt
push
xchg
std
and
mov
cmp
int
pop
mov
xchg
popa
dec
mov
popf
stc
cmp
jbe
icebp
cmpb
pop
cmp
mov
add
lock
divb
je
push
movsl
fldenv
sbb
aam
cmp
aam
lods
pop
cltd
cmp
xlat
mov
pop
adc
stc
clc
pop
lcall
mov
rolb
or
xchg
femms
pop
add
or
iret
or
arpl
sarl
imul
cmp
stc
xchg
inc
xchg
jne
add
cmp
js
hlt
mov
data16
mov
adc
dec
leave
push
mov
add
scas
aad
rclb
push
sbb
xchg
jle
dec
xchg
xor
rol
lret
cmp
movsl
push
in
addl
xchg
xor
jge
mov
popf
icebp
push
scas
vandps
xchg
imul
inc
mov
mov
scas
adc
imulb
and
cmpsl
push
mov
push
ds
test
decl
push
movsb
jmp
or
orl
xor
mov
cltd
scas
sbb
mov
dec
add
icebp
jnp
popa
test
adc
xchg
cmc
mov
push
sub
mov
xor
div
repz
and
dec
fnstcw
aaa
jge
inc
and
outsb
sbb
loopne
lods
inc
test
aad
js
nop
inc
or
aas
jno
xchg
xchg
lods
ds
fsts
divb
xchg
popa
rorl
push
inc
stc
or
inc
jg
cmpsl
sbb
xchg
xor
in
sub
or
xor
fcompp
inc
nop
in
cmc
sbb
xchg
cmovnp
insb
jg
lods
cmp
das
aam
xor
add
popa
xorl
iret
pushf
push
add
push
cli
and
sub
ljmp
inc
push
popf
push
mulb
jmp
push
jno
nop
clc
mov
call
push
stos
fsubp
or
pop
jb
fsts
mov
lods
sbb
test
mov
or
xor
nop
cmc
push
jne
push
xor
push
fwait
leave
dec
testb
mov
es
int
sbb
fisttpll
aaa
es
mov
mov
lea
cmp
movsl
adc
jae
and
mov
xor
cld
mov
adc
js
imul
xchg
les
loopne
cwtl
sub
out
push
pop
sbb
mulb
cmp
inc
mov
add
lcall
iret
pushf
and
push
aam
xor
lahf
clc
les
add
fstps
rcrb
repnz
pop
sbbl
fidivl
add
lods
push
rcll
mov
cmp
sbb
stc
scas
fmull
sbb
sub
and
sub
rolb
mov
sub
or
or
dec
jmp
add
sbb
mov
sbb
push
mov
mov
imul
hlt
lock
aaa
adc
mov
pushf
loop
push
aaa
mov
mov
xchg
mov
in
adc
mov
dec
imul
xor
nop
sub
xchg
add
jl
lcall
cltd
jle
or
mov
cwtl
sti
lret
adc
mov
sti
mov
cmp
sbb
and
popf
andb
add
jnp
jmp
ja
xchg
mov
sub
scas
test
inc
and
scas
out
sbb
mov
mov
mov
fimull
clc
pop
sbb
jl
scas
pushf
inc
pop
xchg
adc
bound
clc
inc
hlt
adc
jge
into
inc
out
fildll
jge
jecxz
push
insl
cmovbe
shl
imul
sub
stc
inc
adc
sbb
dec
into
pop
pop
push
cmc
scas
push
cmp
adc
out
and
xchg
mov
es
dec
popa
xchg
jecxz
inc
push
jle
sub
mov
lahf
or
xor
sbb
pop
divl
jp
aaa
add
jle
mov
cmpsb
ret
pop
testb
dec
fisubrl
outsb
fsubrs
mov
ds
je
or
or
test
fbld
cmp
mov
push
xchg
cmp
aaa
add
popa
add
lret
jo
sbb
sbb
and
loope
inc
enter
push
mov
sub
les
lds
adc
fs
or
clc
fidivrs
mov
imul
xchg
mov
es
and
out
jle
roll
stc
mov
pushf
cmp
mov
xor
xadd
or
or
cli
pop
je
out
pushf
cmp
iret
mov
std
aas
or
leave
jg
sbb
xchg
sub
lcall
and
mov
inc
push
notl
lcall
pop
adc
xchg
mov
mov
mov
adc
adc
shrl
imul
adc
mov
sbb
dec
imul
mov
in
ds
in
std
aad
insl
sbbl
in
pop
imull
in
and
movsl
stc
loopne
lret
out
sbb
outsl
pop
xor
shll
orl
into
sti
xchg
fcoml
push
in
or
ja
test
pop
push
mov
fnstenv
fimull
lock
push
int3
push
sbb
xchg
inc
int3
push
add
in
xor
push
mov
insb
arpl
ret
pop
sub
outsb
hlt
sub
adc
pusha
adc
sar
lods
sti
fs
dec
pop
addr16
fwait
and
xlat
fimull
in
dec
loopne
add
clc
test
shll
or
mov
es
mov
push
pop
aad
xchg
arpl
in
jge
mov
mov
cmpsl
mov
stos
or
xchg
push
push
insl
mov
movsl
pop
test
and
movsb
inc
mov
adc
jne
idivl
sub
sub
mov
xor
jmp
lds
sub
rcrl
lea
dec
outsl
mov
test
sub
cmpsb
cld
and
lret
cmc
fidivs
cmp
xor
push
push
iret
cli
and
push
jo
stos
fsubrl
or
add
mov
ds
adc
mov
dec
mov
roll
or
stc
aas
out
inc
popa
push
adc
stos
bound
enter
addl
dec
js
push
inc
mov
pop
int
cmpsl
jle
arpl
insl
push
push
sbb
ss
pop
fistpll
jl
push
push
addr16
outsb
aaa
sbb
insb
mov
mov
dec
fstl
int3
dec
loopne
sarl
pop
mov
movsl
stos
out
jmp
xchg
test
mov
jno
adc
fsubl
cmp
xor
imul
sbb
sub
test
pop
or
adc
mov
js
je
pop
or
frstor
test
scas
incl
int3
movsl
mov
mov
xor
insl
fnstsw
stc
xchg
js
cmp
or
inc
mov
mov
mov
cmp
daa
dec
fmulp
bound
jne
xchg
inc
push
stc
dec
push
shll
cmc
lea
movsb
mov
insl
fistl
shll
rcr
inc
lods
scas
jle
bound
mov
lock
mov
fwait
enter
pop
dec
mov
aaa
test
gs
rcrb
cs
stos
hlt
push
xor
loope
in
add
inc
push
lret
jne
into
jne
xchg
lods
xchg
out
cmc
dec
outsb
mov
push
nop
mull
outsb
lock
lods
in
inc
push
cmp
pop
rcl
jl
ret
sbb
fcompl
xor
xor
in
rcr
shll
stc
dec
dec
pop
sbb
mov
mov
je
inc
aaa
mov
mov
push
cltd
into
inc
inc
movsb
adc
mov
stos
outsl
mov
in
dec
enter
lahf
lds
jne
ja
pop
mov
enter
stc
push
xchg
outsb
scas
push
outsb
and
popf
adcl
mov
mov
xor
adc
andl
xor
out
hlt
lcall
jno
leave
lods
xor
mov
push
sbb
cltd
or
stos
cmp
xchg
mov
sahf
leave
xorl
cmp
xor
sub
xor
and
cli
divb
nop
mov
push
jae
mov
mov
cmp
jbe
and
cltd
gs
les
jecxz
imul
push
mov
std
xor
inc
ljmp
add
sbb
clc
mov
enter
repz
in
dec
or
ds
inc
cmp
pop
loope
jl
cltd
mov
dec
cmpl
aaa
aad
push
enter
cli
pop
daa
clc
mov
push
lahf
fistps
lods
cmp
adc
push
inc
mov
mov
mov
push
call
sub
dec
je
pop
xchg
push
lods
mov
jle
jb
xchg
ret
scas
filds
jnp
stc
daa
int
xor
xorl
push
ljmp
pop
roll
in
hlt
je
and
sub
std
add
std
lea
pop
loop
dec
lods
aam
out
mov
fdivs
int
cmp
or
icebp
insl
test
xlat
in
inc
xchg
cwtl
test
push
ss
xchg
ficompl
adc
xor
decl
mov
and
or
rorl
inc
mov
pop
mov
pushf
inc
ret
mov
dec
push
xlat
jmp
jp
xchg
ret
inc
loop
mov
mov
lds
in
jne
test
out
enter
jb
adcl
fwait
icebp
push
xchg
mov
push
mov
fwait
pop
popa
mov
test
outsl
adc
imul
dec
mulb
lea
pop
mov
sahf
movsb
cltd
fidivrl
lods
jae
adc
inc
mov
fcomp
xchg
jno
test
call
aas
sbb
popw
adc
movsb
loopne
stos
orb
movsl
filds
call
pusha
les
jns
cli
and
jg
push
mov
adc
cmp
mov
data16
insb
popf
test
ficomps
ret
shl
or
mov
mov
imul
sub
jne
cmp
xchg
sti
or
std
push
outsb
decb
mov
mov
mov
add
pushf
ljmp
adc
xchg
sub
test
nop
push
mov
lea
lret
lock
cmp
or
pop
or
push
cmp
xchg
std
adc
divb
mov
inc
inc
mov
dec
mov
inc
xchg
outsb
fidivrl
inc
pushf
xor
add
adcb
outsb
add
adc
loop
inc
lahf
adc
shlb
mov
xchg
fisubrl
faddl
lcall
sub
fsqrt
sub
scas
into
sbb
in
sbb
push
in
std
jmp
cltd
cmp
aad
sub
in
sbb
ljmp
xchg
scas
adc
pop
push
mov
es
shr
xor
xchg
icebp
testb
jecxz
pushf
mov
mov
xchg
sub
mov
clc
das
xor
out
sub
add
adc
stos
fnsave
sahf
push
jnp
jae
dec
hlt
push
push
repz
dec
add
pop
fiadds
dec
loop
cmp
dec
dec
or
push
push
sub
arpl
fwait
aam
clc
in
ja
mov
xlat
mov
insl
push
lods
add
out
xor
loope
mov
out
sbb
cmpsb
or
sbb
in
pop
jno
add
movaps
imul
fsubrp
push
daa
push
into
mov
cmpsb
inc
xchg
jmp
dec
lahf
and
mov
repnz
fldt
pop
into
dec
add
test
mov
bound
adc
mov
push
pop
add
adc
stos
xchg
in
jns
data16
lods
fadd
int
movsl
xor
dec
outsb
mov
aad
mov
dec
out
mov
xchg
es
mov
mov
xor
enter
lcall
push
mov
enter
jmp
mov
push
add
dec
into
inc
in
jle
jne
leave
pushf
movsb
push
inc
push
mov
push
repnz
jb
ja
push
dec
mov
and
pop
imul
imul
cmp
sti
sbb
dec
and
dec
mov
loopne
mov
ror
sar
lcall
pop
std
scas
xchg
pop
mov
dec
aad
imul
in
jmp
inc
shlb
roll
or
or
jns
fcoms
pop
sbbb
pop
lods
cmp
sub
mov
dec
js
mov
nop
or
cltd
dec
inc
pop
scas
sub
and
cmp
andb
test
push
daa
dec
add
popa
adc
mov
pop
addr16
dec
and
inc
adc
fisubrs
imul
into
cmp
jnp
cmp
push
jmp
inc
iret
xor
xchg
mov
or
pop
lcall
sbb
std
add
negl
ja
xchg
xchg
pushf
xchg
bnd
add
dec
cmpsl
mov
or
hlt
cmp
and
popa
inc
dec
add
data16
mov
loop
xor
int3
rcll
fdivl
daa
push
rorl
sbb
inc
mov
add
lahf
std
sarl
mov
adc
and
out
mov
mov
fisubl
fbld
cmp
paddusb
out
aas
lods
pop
jle
data16
cmp
and
out
adc
and
insl
adc
jg
loop
pop
popa
dec
mov
popf
push
push
xchg
adc
dec
mov
xchg
dec
pushf
xchg
scas
push
adc
cmpsb
aas
or
stc
dec
fldenv
adc
dec
call
pop
mov
mov
cs
cmp
sbb
daa
pop
push
add
fld
jp
mov
ret
push
ret
mov
lds
xor
nop
sbb
pop
pop
insl
mov
pop
add
mov
xor
lcall
imul
mov
sbb
and
testl
lea
test
push
or
mov
push
adc
aas
cmp
mov
jns
pop
loope
std
aam
nop
scas
cmp
mov
mov
jp
mov
rorl
in
xor
das
sub
mov
mov
mov
push
loopne
test
arpl
into
dec
sub
pop
ljmp
js
add
gs
xlat
xchg
icebp
gs
std
xchg
dec
jp
shrl
mov
es
adc
cmp
adc
push
movsl
in
in
imul
pop
xchg
cmp
stos
xor
mov
imul
stc
repz
mov
fidivs
js
pop
xchg
or
mov
pop
call
js
or
mov
fucom
jne
or
mov
adc
mov
xor
add
into
add
inc
frstor
mov
inc
pop
addr16
pushf
add
xchg
pop
jge
aad
loopne
imul
aas
cmp
cmpsl
jne
rcll
fsubr
sahf
xor
xchg
test
lds
shrl
sub
jno
pop
or
mov
fwait
mov
fadd
loope
imulb
outsl
call
nop
push
add
add
sbb
sbb
xor
cmp
int
pop
and
push
mov
sub
sub
mov
int
jae
fnstsw
shlb
and
stos
pop
xor
pop
aaa
orb
rcr
xor
or
rcll
xchg
mov
jp
xor
in
mov
out
in
sub
jecxz
js
test
mov
sahf
iret
inc
sub
je
cwtl
inc
fimuls
jge
std
in
fbstp
mov
cwtl
add
xchg
ficomps
loope
cwtl
pop
mov
cmp
aam
out
sub
sbb
mov
stc
cmp
enter
mov
mov
inc
adc
xor
cs
mov
aas
nop
push
insb
sahf
negl
sub
adc
aam
xchg
push
jno
rclb
xchg
into
inc
divb
lahf
mov
mov
lods
or
cmp
xchg
add
adc
adc
jae
pop
xor
dec
mov
int
ljmp
ds
and
xchg
jne
mov
bound
mov
mov
lcall
ret
sbb
aaa
sub
bound
jbe
lds
xchg
inc
mov
sub
sbb
push
pop
cwtl
jle
mov
gs
mull
nop
popa
jb
out
push
dec
add
jb
decb
cli
sub
mov
jmp
jmp
lods
mov
push
jae
add
mov
mov
jge
popa
pop
pop
data16
sbb
adc
loope
xor
aaa
xchg
cli
rcrb
xadd
mov
test
dec
xor
mov
cmp
mov
stos
dec
sti
fistps
and
cs
jle
pop
pusha
insb
inc
dec
stc
pop
in
adc
push
out
popf
out
mov
inc
stc
repnz
sarl
push
dec
out
pop
fcomps
test
lock
movsl
iret
in
adc
ds
loopne
push
aaa
outsl
jg
fdivrl
pop
jb
push
jno
push
in
cmp
out
arpl
mov
fs
outsb
daa
and
push
sahf
stos
repz
mov
ss
cmp
add
enter
ficoml
rorl
xor
bnd
aas
sbb
sbb
pop
ljmp
mov
bound
shlb
xchg
pop
out
pop
xchg
dec
cmp
mov
test
mov
cvtpi2ps
xor
jae
mov
iret
xor
and
and
dec
or
sbb
dec
inc
or
pushf
jle
pop
xchg
in
inc
pop
or
fs
test
fmulp
jl
fdivrl
std
xchg
in
inc
mov
rcll
cmpsb
fists
bound
enter
inc
jmp
mov
popf
stc
std
xchg
inc
out
loop
loopne
push
push
sbb
gs
xor
imul
scas
in
popa
dec
ret
mov
addl
jp
aad
lea
jbe
sti
enter
sbb
or
bound
unpckhps
mov
lcall
adc
mov
pop
sub
pop
add
jmp
cmp
stos
xchg
mov
mov
pop
adc
out
push
aas
je
orl
in
sti
push
test
in
lret
xor
inc
int
inc
pusha
mov
xchg
mov
mov
loope
mov
xor
lods
jg
and
push
ret
sbbl
mov
shlb
and
xchg
cmp
dec
add
pop
adc
lods
push
sahf
scas
xchg
ljmp
aaa
jmp
fisubrl
push
ja
pop
mov
inc
rolb
enter
inc
mov
xor
ss
adc
push
out
mov
cs
movsl
or
dec
notl
xor
or
pushf
jno
lret
and
mov
inc
test
and
fmull
bound
adc
and
xchg
test
es
cmpsl
sub
dec
daa
add
jmp
jmp
leave
cmp
fidivrl
repnz
xchg
xchg
fisttpl
incb
mov
push
cmpsl
sbb
push
imul
mov
loopne
daa
xchg
push
daa
bound
inc
outsb
mov
stos
mov
out
aas
push
inc
mov
inc
ds
add
daa
push
adc
into
sbb
inc
outsl
and
sbb
cld
sbb
xchg
push
xchg
imul
push
push
mov
aad
scas
aas
out
rclb
icebp
shl
call
mov
arpl
rcr
das
stos
lahf
inc
sti
adc
mov
daa
cmp
mov
push
leave
sub
pushf
add
fld
jmp
jne
push
in
and
mov
pop
xlat
xor
jnp
push
jmp
add
sbb
push
mov
dec
es
aad
aad
and
ds
movsl
lock
mov
xor
iret
mov
nop
out
mov
inc
imul
in
pop
mov
xor
mov
xor
sti
fldenv
add
mov
repnz
inc
add
add
fwait
fwait
sub
outsb
cs
pop
ja
mov
mov
setnp
pop
push
subl
das
popa
xchg
xchg
xchg
push
adc
leave
data16
jecxz
add
mov
les
dec
addl
notb
push
insl
xchg
sub
es
in
sarb
mov
and
and
xor
jno
sbb
std
in
lods
test
stos
lret
pop
lahf
arpl
mov
or
cmp
stos
ret
repz
add
cld
cmpsb
into
jns
jp
enter
mov
fnstenv
xor
jns
jg,pt
pop
push
cmc
inc
aad
cmp
lea
pop
jl
std
mov
inc
rcr
aam
mov
inc
push
aaa
js
sub
repnz
ds
mov
xchg
int3
xor
js
adc
adc
jns
push
dec
push
dec
call
insb
inc
ffree
push
cli
test
repnz
clc
out
lds
push
jb
adc
jbe
neg
test
pop
and
movsl
ret
insb
adc
scas
inc
xchg
stos
dec
add
mov
jnp
punpckhwd
ds
out
mov
jo
jp
mov
out
int3
aas
out
mov
icebp
jae
fists
test
mov
jnp
hlt
loope
jecxz
out
sbb
jmp
sbb
shlb
outsl
pop
pusha
xchg
mov
xchg
je
mov
xor
leave
fs
test
mov
push
sub
mov
pop
lods
sbb
mov
sarl
imul
mov
popl
setae
lahf
pop
cld
mov
lea
popa
xchg
popa
clc
xor
fnstcw
mov
jl
add
jno
xchg
cmp
fstl
pmaxsw
or
xchg
adc
mov
cltd
sbb
andl
jne
xor
into
adcb
jl
xchg
cmovns
imul
ror
into
stos
cld
lcall
pop
mov
mov
outsl
pushl
les
pop
sahf
fildl
push
mov
and
shlb
aaa
jno
loope
jp
out
repz
out
and
test
sub
and
aas
iret
imul
or
mov
pop
add
out
hlt
fs
inc
pusha
inc
lret
cmp
jne
sbb
sub
jl
cmp
and
mov
daa
dec
fistpll
addl
loopne
pop
sbb
mov
jmp
lahf
mov
int3
addr16
stc
jbe
adc
mov
mov
ret
jne
orl
fs
scas
jns
push
push
movsl
mov
push
pmuludq
inc
dec
mov
cmp
mov
stos
aad
and
fldl
sub
add
or
cltd
or
xchg
sub
pop
cltd
incb
out
sub
jecxz
lahf
sbb
adc
data16
or
ds
out
jge
popf
popa
push
imul
push
dec
push
sahf
cmpsl
loope
sbb
popf
stos
icebp
les
and
imul
jo
lock
push
negl
mov
cmp
enter
icebp
pop
mov
gs
scas
dec
pushf
mov
pop
mov
hlt
mov
dec
dec
sub
jl
mov
notl
imul
pop
cmp
xchg
xchg
loope
xchg
fwait
mov
je
xchg
jno
sahf
jae
cli
outsl
ja
xor
add
xor
dec
xchg
cmc
aam
push
adc
pop
add
or
sbb
les
mov
cltd
stos
fdivs
shrb
push
addr16
lret
in
dec
dec
mov
pop
js
in
pop
clc
or
xchg
sbb
push
pop
in
push
jmp
outsl
sub
pop
and
in
xlat
lret
mov
cli
xor
pop
sbb
pop
les
fidivl
insl
test
mov
pop
xchg
or
pop
adc
lret
out
sbb
mov
xchg
insb
cmpb
sbbl
dec
and
or
pop
inc
xchg
shlb
inc
fmuls
aaa
sub
pop
shrl
mov
test
scas
into
cmp
sbb
inc
pop
dec
lret
xchg
pop
pop
insl
fdivrl
lods
mov
ret
mov
insl
and
fidivrl
mov
movsl
in
mov
xchg
decb
ljmp
scas
fwait
icebp
jmp
push
mov
xor
fldcw
fcoml
stos
nop
into
inc
sbb
out
xchg
fldenv
divl
push
sub
or
aas
sub
fwait
xchg
xchg
dec
dec
rolb
xchg
int
stos
movsl
pop
sub
jle
adc
shll
mov
cmp
xlat
pop
and
popf
ret
xor
movsb
lea
sub
enter
dec
lea
ljmp
and
std
and
in
arpl
pushf
out
adc
ja
enter
mov
bound
pop
lahf
aam
imul
inc
xchg
jmp
in
sub
into
xchg
fstl
dec
fs
or
mov
ret
nop
movsl
jg
fidivl
xor
jl
cltd
cmp
lods
ljmp
mov
fistpl
aaa
pushl
divl
add
ds
push
jp
or
sar
push
repnz
push
push
xor
push
jecxz
fistps
jb
in
imul
rolb
popa
xor
scas
gs
add
shrl
and
sbb
movsl
dec
pop
mov
cwtl
ret
js
ret
imul
out
lahf
lea
and
inc
popf
test
aas
fiaddl
gs
icebp
mov
and
pop
or
je
js
lahf
cltd
xchg
dec
inc
or
gs
daa
xchg
movsl
aam
push
pop
int
add
dec
fs
adc
call
pop
std
xchg
cmp
std
pop
sbb
push
jns
sub
mov
mov
dec
xchg
pop
rclb
je
jle
xchg
ja
inc
in
ja
add
cld
mov
pop
adc
sbb
pop
pusha
or
fsubrs
ss
sub
inc
jo
aad
mov
jne
and
add
in
pusha
jnp
cmpl
xor
add
dec
fadd
inc
cs
pop
sub
insb
popa
push
mov
mov
pop
lcall
lods
loop
aad
mulb
movsl
pop
les
fbstp
insl
cmpsl
cmp
xchg
sub
testb
loop
mov
push
incb
ds
sub
mov
out
jmp
sub
outsl
pop
fistpll
jmp
out
insl
jae
cld
add
imul
aad
xchg
nop
xlat
test
mov
lea
icebp
pop
sahf
inc
cmc
cmp
sub
jno
out
js
loopne
std
icebp
fldcw
lds
int
mov
int
or
test
mov
jl
inc
insb
push
das
xlat
and
or
mov
xchg
jnp
cmp
mov
ret
aad
push
sbb
stos
adc
cmp
adc
or
xor
rol
dec
pop
sub
sbb
inc
mov
or
inc
das
clc
pop
dec
mov
inc
outsb
mov
mov
mov
inc
xor
adc
and
in
aad
push
rolb
jbe
or
sub
out
imul
xor
dec
pop
fidivl
cltd
add
addr16
add
and
sub
pminub
imul
pushf
inc
xchg
stos
std
cmp
sbbl
outsb
ds
adc
mov
hlt
jmp
xchg
inc
adc
mov
mov
sub
int
pop
cmp
mov
dec
sahf
sub
inc
xchg
loop
adc
sub
jae
loope
out
mov
cwtl
xchg
pop
cld
fwait
mov
mov
push
movd
gs
lock
les
ja
gs
hlt
test
push
shl
fildl
and
sub
scas
ret
fadds
mov
fwait
sub
scas
scas
rorl
popa
xchg
cmp
and
mov
pop
lea
dec
icebp
sub
sti
add
int3
or
loop
lock
fldcw
rcl
incl
addr16
fcomi
jnp
adc
xor
mov
xor
dec
jno
loop
movsl
lods
sahf
mov
das
push
inc
xchg
jbe
cltd
arpl
mov
ljmp
mov
jl
sahf
addr16
gs
es
sub
push
cld
ljmp
sahf
mov
mov
xchg
add
jg
inc
loop
outsb
insb
mov
mov
shll
and
mov
xchg
adc
mov
scas
test
sub
lds
loopne
stc
in
negb
or
and
sub
xor
sbb
lret
jns
jmp
inc
sbb
rclb
xchg
add
mov
cs
push
rorl
pop
imul
sbb
adc
jmp
jo
pushf
neg
ss
pop
xchg
mov
xchg
xchg
pop
pop
adc
push
outsl
add
jo
test
repnz
gs
dec
ss
clc
dec
cmpsb
dec
jo
test
lock
iret
pop
pushf
dec
out
add
rcll
add
xchg
hlt
andb
roll
push
add
and
int3
cmp
add
mov
mov
pop
sbb
xor
outsb
jbe
icebp
jmp
pushf
or
cmp
push
xor
add
mov
sub
mov
les
xchg
movsb
mov
fisubrs
sahf
mov
mov
sub
jg
sbb
xchg
pop
and
lods
int
jecxz
loop
enter
hlt
sbb
mov
ficoml
fmulp
stos
mov
ss
and
mov
mov
add
xchg
loopne
inc
into
inc
iret
or
sub
sub
add
jb
imulb
dec
cmp
je
pavgb
push
xor
or
pushw
cmp
cmc
sub
mov
xchg
add
icebp
in
cmp
inc
mov
pop
mov
sarb
ret
xchg
pop
dec
xor
bound
mov
retw
leave
mov
imul
sbb
cmpsl
xor
push
add
outsb
lea
ret
xchg
ss
jmp
test
insl
or
xchg
ret
mov
mov
cmpsl
inc
sub
leave
dec
outsl
pop
shll
subl
jl
pop
inc
xor
test
cmc
and
dec
aam
cmp
cmpsb
mov
cmp
mov
mov
push
incl
inc
jae
jno
or
aad
jne
scas
adc
and
mov
pop
cmp
inc
pop
push
jp
mov
jmp
xor
and
xor
sbb
cwtl
dec
int3
mov
push
in
sahf
mov
add
addr16
sbb
cmp
dec
sub
xadd
xchg
ret
xchg
movsl
jo
jb
pusha
mov
xor
xlat
in
xor
call
mov
js
adc
test
sub
cmc
jge
cmpsb
push
fdivs
movsb
pushf
jmp
mov
icebp
lods
ret
lods
xchg
sbb
fldl
insl
lock
out
or
jg
leave
push
mov
gs
xor
sbb
xor
mov
ds
pop
lret
add
pop
pop
pop
push
push
inc
inc
sub
loopne
sti
add
mov
in
xchg
stos
mov
into
lods
mov
insl
loopne
in
pop
loopne
mov
dec
stc
jmp
dec
test
loope
in
xchg
in
mov
cmp
and
mov
jecxz
lock
mov
jl
addr16
repz
aas
jne
mov
cltd
scas
cmp
inc
dec
fsubr
pop
mov
pop
adc
loopne
popa
push
cmp
sbb
dec
push
mov
jno
xchg
js
scas
loope
insb
lahf
or
dec
jae
sbb
dec
fistl
and
cld
int
cmc
push
mov
sbb
lcall
lcall
add
jb
mov
ret
or
jmp
add
mov
addr16
sti
mov
add
jns
jne
and
sub
add
jl
aaa
jp
inc
cmp
adc
sbb
ficoml
pop
insb
mov
iret
dec
int
loopne
mov
jae
lret
dec
jne
xchg
mov
lock
xchg
out
jno
push
mov
jno
mov
inc
adc
clc
int3
movsb
std
inc
ret
mov
aaa
jbe
inc
fwait
lahf
mov
rorl
add
repz
xor
and
xchg
cmp
or
js
inc
inc
rol
paddsw
jecxz
inc
and
lds
int3
or
mov
data16
cmp
sub
mov
test
outsl
mov
lret
jo
and
mov
in
mov
fucomi
mov
leave
gs
xchg
fistpl
out
into
mov
mov
leave
shlb
movsl
mov
std
dec
sbb
lcall
push
mov
jbe
cmp
data16
ret
les
sub
or
cmpsb
insl
dec
pop
mov
mov
mov
or
mov
cli
fwait
clc
cmpsb
in
loopw
mov
leave
mov
out
sbb
call
add
push
test
fstps
in
dec
lret
inc
cli
rcll
fnsave
cmp
daa
push
mov
and
pop
sub
loope
xchg
out
mov
inc
mov
xchg
shlb
jbe
nop
outsl
push
enter
xor
dec
popa
or
sbbb
test
sbb
xchg
mov
adc
jp
shrl
inc
pop
inc
jo
cmc
xchg
pop
jnp
jmp
lock
xlat
and
mov
sbb
add
inc
push
mov
xor
adc
stos
imul
int
mov
push
movsb
aam
les
ret
sahf
movl
push
cmpsl
clc
inc
and
lds
mov
call
add
stc
jge
or
or
adcb
or
adc
frstor
jo
mov
xor
addr16
inc
mov
sbb
lods
and
in
inc
jl
push
mov
jb
cmp
andl
cltd
mov
mov
jno
rol
sub
fdivp
jb
das
push
movsb
push
das
lods
sub
and
fsubs
push
mov
mov
mov
xchg
lods
mov
inc
repnz
inc
push
pop
push
xchg
sub
sub
sub
mov
mov
inc
lret
mov
inc
daa
sub
pop
or
decb
fcoml
and
leave
push
mov
fwait
adc
jp
mov
push
cltd
mov
mov
fstps
dec
out
ljmp
rorl
jp
fbstp
scas
test
cld
mov
mov
sbb
call
int3
xchg
fcmove
int
cmpsb
cs
test
arpl
pop
negb
cmpsb
int
es
stos
repnz
loopne
out
inc
push
cmp
lret
or
cmpsb
xchg
rolb
xor
leave
inc
pop
jno
das
outsl
add
and
add
cmp
test
add
cmpsb
sbb
hlt
cmp
shlb
lods
sti
aam
mov
roll
push
scas
es
pop
bound
scas
nop
clc
jno
mov
mov
pop
jb
shr
fisubs
mov
push
dec
push
repnz
mov
pop
shrb
xchg
dec
mov
outsb
mov
icebp
repnz
mov
xchg
xor
sbb
inc
mov
imul
shll
jne
in
pop
and
js
pop
mov
or
iret
jmp
sub
fs
shll
pop
xor
roll
mov
fdivl
insl
xor
pop
adc
lods
sub
mov
adc
sub
shl
aas
scas
daa
add
push
pop
mov
mov
test
mov
ss
mov
mov
mov
std
xchg
daa
jp
gs
cmp
mov
std
das
mov
sbb
ljmp
jnp
ror
out
rol
mov
cmp
adc
pop
popf
adc
jbe
mov
adcb
push
lock
addr16
scas
mov
aaa
outsb
cmovg
inc
or
imul
pop
les
lcall
in
push
das
jmp
stc
sub
repz
into
inc
xchg
jmp
in
push
mov
mov
sub
push
xchg
push
lods
addl
push
cwtl
test
cltd
js
ds
jae,pt
sahf
mov
daa
dec
lods
dec
imul
icebp
sbb
mov
mov
shlb
rcll
popa
stos
js
sahf
ds
nop
clc
je
push
jb
mov
pop
sub
pop
mov
out
xor
add
lods
cmp
and
mov
bound
in
shlb
pushf
in
sub
mov
pusha
push
aas
push
test
mov
pop
fcomps
push
shll
xor
dec
out
add
scas
out
or
xchg
sub
repz
mov
int3
cltd
or
inc
sub
xchg
xchg
and
mov
inc
stos
jb
mov
add
ds
jl
je
test
mov
lods
hlt
shll
shrl
push
mov
jmp
pop
int
cmp
pusha
xor
inc
icebp
xor
stos
arpl
push
cmp
mov
cwtl
pop
inc
pop
push
add
inc
sarl
jbe
testb
push
rolb
gs
xchg
and
mov
push
lds
leave
sub
or
mov
push
or
shrb
xor
enter
sub
mov
mov
mov
sbb
and
fistpll
adc
pop
es
adc
pop
xchg
pop
mov
out
test
push
xchg
push
adcl
lock
add
addr16
adc
fnstsw
rclb
mov
sbb
fsub
int3
mov
fcom
push
jae
or
push
es
and
out
adc
rorl
je
cmc
pusha
int
xor
add
in
jae
into
hlt
adc
out
xchg
and
inc
adc
xchg
dec
xor
mov
fistl
mov
pop
add
ljmp
gs
push
or
mov
xchg
fbld
pop
jne
stc
dec
add
xchg
push
jl
dec
shlb
lcall
mov
and
and
rcll
sub
inc
add
out
xchg
fbld
xor
arpl
cmpsl
inc
jo
imul
push
roll
fisubs
rclb
push
xchg
std
icebp
popa
out
jge
pushf
dec
outsl
mov
pop
pop
lods
call
outsl
rorl
das
insb
arpl
fidivrs
pop
faddl
add
xlat
cmp
pop
push
fnstcw
lods
push
divl
in
sbb
stos
mov
mov
lret
mov
push
call
mov
rorb
xchg
je
lock
js
aas
int
push
xor
cmp
jg
xchg
clc
inc
mov
pop
rclb
rorb
adc
cli
or
lods
pop
xorl
fwait
loope
mov
es
out
in
pop
dec
sbb
cmpsb
scas
push
jnp
dec
incl
xor
push
insl
ja
dec
mov
sahf
mov
push
scas
js
or
xchg
push
pop
sbb
jle
pushf
push
sar
or
cmp
nop
push
and
fdivs
fdiv
test
mov
scas
pushf
outsb
lock
fs
scas
adc
pop
add
and
jo
adc
xlat
xchg
jae
xor
and
jb
sbb
pop
mov
pop
shlb
ds
or
xor
into
shrl
sbb
adc
sahf
and
xor
mov
lret
fcmovnu
mov
cmp
add
mov
neg
mov
dec
cmp
out
mov
jl
out
stos
mov
aam
sarl
xor
lahf
les
enter
inc
mov
int
push
outsl
rolb
lds
mov
push
mov
and
lods
imul
shrl
getsec
add
loopne
dec
and
inc
mov
mov
jmp
mov
push
sahf
shrb
pop
stos
shrl
mov
cmp
imul
aaa
mov
pop
dec
imul
xor
sbb
out
pop
cmpsl
mov
aas
xchg
sub
test
xchg
aad
pop
shl
and
lahf
test
sub
js
xchg
adc
frstor
arpl
and
aaa
cmp
pop
aas
loope
movsb
mov
mov
inc
sti
mov
ss
ret
cmpsb
hlt
idivl
pushf
popa
push
jge
mov
lcall
xor
inc
jge
lea
sbb
aam
sbb
fstl
in
lods
jae
insb
out
mov
lods
nop
mov
push
inc
mov
dec
aam
lds
lret
jmp
scas
push
mov
pop
das
lds
xor
hlt
stos
cmpsb
aaa
insb
ss
inc
outsl
clc
sub
shrb
inc
std
call
or
das
pusha
jns
or
fcoml
nop
or
push
and
mov
sub
or
out
xchg
ret
adc
fimuls
daa
push
test
clc
xor
scas
pop
iret
push
jle
or
add
xchg
movsl
and
mov
jno
shl
add
jne
xchg
adc
enter
std
sbb
jns
pushf
fcomps
jmp
xchg
iret
rolb
inc
aam
push
cmp
data16
mov
pop
xchg
mov
loop
mov
inc
sarb
inc
pushf
pop
stc
decb
clc
cli
daa
cmpb
bound
mov
fisubl
jg
mov
mov
out
mov
dec
repz
lret
mov
jae
dec
daa
jbe
adc
pusha
sub
lcall
pop
call
pop
pushf
add
nop
test
scas
or
in
add
addr16
xchg
or
xchg
xor
inc
daa
test
push
sub
sar
popf
sub
xchg
xchg
out
adc
sbb
dec
sub
jg
mov
sarl
das
daa
hlt
and
divl
cmc
mov
add
inc
sub
testb
mov
jbe
push
pop
jl
fldcw
xor
or
test
aas
xchg
mov
push
add
popa
loop
pop
pop
fisubrs
ljmp
jp
pusha
lods
mov
push
jmp
lock
adc
lcall
dec
cmp
imul
daa
mov
setp
push
ret
fists
outsl
out
cmp
mov
mov
mov
repz
dec
movsb
pop
push
out
xorl
test
add
ret
pop
push
sidtl
stos
dec
push
popf
rorl
arpl
add
ret
popf
clc
cmp
arpl
insl
inc
ds
push
sbb
mov
movsl
mov
test
andb
jb
and
rcpps
mov
jp
adc
out
push
stos
insb
add
pop
rcrb
add
push
in
lds
sti
hlt
and
xchg
xor
das
ret
adc
xlat
lods
jg
add
pop
xchg
in
pop
adc
das
cmp
das
mov
jbe
jmp
jne
cmp
or
xor
mov
lods
xchg
aam
push
xor
push
mov
mov
ret
sub
in
icebp
cltd
pop
xchg
out
xor
inc
pop
dec
cmp
sbb
jae
roll
dec
sbb
sbb
pop
or
mov
cmc
dec
xor
in
add
cmp
out
xchg
cli
test
sub
fadds
add
outsb
sub
sbb
mov
pop
jo
pop
xor
lahf
shl
bound
or
testb
xchg
jno
push
cmp
add
push
imul
mov
in
pop
nop
and
jne
addr16
lods
inc
fstl
popa
push
mov
mov
sub
push
cmp
jecxz
lods
and
inc
xorw
adc
dec
add
hlt
stos
addl
ljmp
mov
dec
sahf
imul
mov
inc
in
fnstcw
mov
insb
das
and
xchg
mov
xor
push
sbb
test
loop
jl
cmpsl
cmpsb
xor
jecxz
int3
jge
inc
ret
cmpb
insb
shrb
jp
jl
hlt
push
mov
and
arpl
dec
jo
cmp
pusha
pop
ljmp
aas
addr16
lods
xlat
dec
sub
jnp
jne
lock
ljmp
int3
push
or
insb
je
or
rolb
stos
sub
in
test
jno
push
xor
mov
xchg
or
jne
inc
filds
sbb
test
inc
nop
mov
out
or
sub
repnz
xchg
and
lret
add
pop
pop
ds
dec
lcall
inc
mov
mov
dec
pop
cwtl
mov
adc
insb
filds
and
mov
imul
sbb
mov
jae
rcrb
pop
out
cmc
outsb
adc
popa
dec
imul
pop
jmp
dec
bnd
int3
dec
jns
nop
xor
lods
cmpsb
dec
lods
or
or
dec
leave
cmp
adc
xchg
xchg
adc
jae
mov
cmc
cli
int3
rcr
daa
les
add
push
scas
mov
add
loopne
fsubs
push
lret
sarl
pop
orl
lock
call
outsb
test
in
push
mov
repnz
addr16
and
jo
shl
add
push
cmp
test
lretw
test
mov
insl
ret
gs
dec
xor
mov
push
iret
test
sub
outsl
das
push
and
data16
sub
dec
xchg
stc
add
lea
scas
sub
dec
enter
clc
scas
jp
pop
leave
test
icebp
inc
dec
in
xor
add
push
inc
mov
shlb
cmpsl
push
ret
mov
push
push
movsl
pop
jo
mov
popl
adc
out
inc
cmp
ja
inc
fsin
int3
sbb
in
xchg
in
push
and
shlb
mov
mov
ja
pop
dec
les
fucom
adc
aad
nop
pusha
xchg
aad
xor
xchg
pop
shll
cltd
sub
cltd
jo
mov
lret
mov
xor
outsb
pop
jns
pop
push
xlat
test
cli
ljmp
inc
add
imul
cli
loope
jo
daa
es
cli
lds
pop
cs
mov
pop
int
lods
mov
rorb
pop
setp
ret
jo
push
fisubrs
faddp
inc
daa
mov
xchg
std
icebp
imul
jo
jl
in
cltd
ss
ja
int
add
flds
pushf
mov
cld
push
ret
jo
lahf
hlt
cs
popf
mov
push
push
aaa
test
leave
pop
xchg
adc
scas
fmul
das
mov
in
data16
in
xor
xchg
divb
sub
pop
adc
xor
add
sub
inc
mov
ja
loop
dec
xchg
lods
or
gs
cmp
or
mov
sti
or
sarl
scas
fnstcw
call
cmp
mov
xor
sbb
sub
jmp
or
ror
adc
add
jmp
jl
data16
rcrb
jle
push
xchg
ja
dec
pop
push
int
outsl
sbb
sub
cmc
movsb
pop
xor
out
pop
pop
outsb
inc
xor
movsl
xor
fisttps
xlat
addr16
stos
in
adc
and
icebp
addr16
cmp
pop
mov
mov
and
inc
jp
pop
jo
or
orl
loopne
repz
aas
inc
loope
fwait
notb
pop
lret
inc
fs
xor
faddl
inc
pop
fidivrs
sahf
jge
fsubrl
aaa
ficoml
pop
push
lahf
sub
xor
add
pusha
pop
sub
cmp
xor
cmp
mov
push
movsb
out
inc
xor
pusha
push
pushf
pop
les
pushf
frstor
pop
mov
les
out
out
into
push
jae
inc
iret
je
dec
loop
dec
push
or
push
fucom
push
insl
xchg
out
inc
in
pop
imul
or
push
push
scas
sub
dec
sahf
insl
and
ljmp
and
add
fdivrl
test
mov
pop
mov
mov
stos
fstl
mov
js
aam
jae
fidivl
jecxz
jo
mov
xor
mov
test
and
stos
repz
inc
jl
push
mov
xor
xor
or
jecxz
xchg
das
jae
insl
imul
movl
push
dec
or
ds
loope
aad
push
lods
out
call
dec
push
and
push
mov
test
push
in
das
adc
dec
jle
xchg
and
xor
mov
or
dec
lds
test
aaa
clc
pusha
and
pop
dec
cmp
sbbl
or
insl
loopne
loopne
mov
sub
shll
jno
in
insl
cmpsb
dec
add
roll
les
pop
mov
popa
push
push
enter
enter
mov
adc
imull
cmpsb
dec
mov
fwait
scas
inc
jo
pop
push
dec
out
mov
sub
mov
movsl
xchg
cltd
out
xchg
sbb
das
xchg
ret
push
mov
cmc
es
and
repz
adc
xchg
cmp
nop
mov
cmc
aaa
mov
mov
out
das
leave
dec
jo
mov
int
mov
movsb
push
inc
cmp
mov
pop
add
dec
test
xchg
or
xorb
cld
cmpsb
sub
mov
loop
and
iret
xchg
lret
xlat
cli
sub
or
jae
mov
scas
nop
mov
jae
inc
pushf
jecxz
adc
sbb
jns
xchg
dec
clc
int
bound
jne
movsb
imul
repz
rorl
popa
cmp
xchg
popf
xor
mov
sbb
daa
test
lods
sub
xchg
insl
sbb
or
xor
xchg
fucom
aaa
xchg
icebp
in
mov
push
add
mov
mov
push
inc
adc
scas
in
aad
data16
mov
call
xor
sbb
jecxz
movsl
inc
push
mov
inc
sarl
aaa
jb
xchg
enter
dec
repz
sub
test
cmp
add
mov
mov
jmp
sub
dec
cwtl
icebp
adc
adc
out
out
dec
xor
test
xor
repz
mov
out
loopne
dec
shlb
std
pop
xor
xlat
cmp
addb
mov
ret
outsb
fs
dec
daa
xlat
mov
xchg
adc
repnz
mov
mov
or
clc
out
stos
or
fcoml
push
mov
test
dec
xor
push
sub
lods
mov
scas
bound
stc
frstor
mov
scas
sub
mov
sbb
fnsave
dec
cmpsb
jl
xlat
pusha
stc
daa
adc
dec
cs
pop
adc
jmp
enter
ss
xchg
xchg
mov
je
les
test
cmpsb
cmp
adcb
or
inc
adc
push
mov
aam
data16
inc
dec
insl
dec
out
cmp
cmp
jmp
inc
fwait
rorb
xchg
and
call
jnp
stos
pushf
into
out
repnz
push
inc
ret
loope
insb
adc
mov
inc
and
je
je
pop
mov
jb
rcr
cmpsl
push
ljmp
cmp
cmp
push
les
or
xor
aam
les
stc
das
and
fisttpl
je
xchg
ljmp
dec
xchg
pop
mov
movsb
test
or
xchg
adc
fisubs
mov
cmp
inc
push
js
xchg
or
scas
inc
ficomps
fs
mov
mov
sbbl
lds
inc
cli
cmp
shl
into
ja
fiaddl
lret
xchg
test
push
arpl
iret
lock
jecxz
leave
cwtl
pop
ret
repnz
stos
xor
pop
xchg
pop
push
out
mov
jge
mov
jmp
cmpsl
jnp
inc
loopne
and
dec
in
scas
jo
stos
leave
cmp
sbb
xorb
insl
aaa
mov
pop
sti
mov
lods
add
fcompl
insl
call
jl
ds
push
aas
push
push
push
shrb
lods
or
fs
stos
les
stos
pop
add
jnp
cs
dec
cmp
and
xchg
push
lea
nop
sbb
lods
and
cmp
add
std
and
add
outsb
je
or
fs
iret
mov
mov
les
stos
push
and
dec
dec
jb
jmp
sub
inc
pop
sub
jg
sbb
push
push
mov
adc
fsubrs
rcrl
add
imul
jno
sbb
or
pop
clc
mov
imul
jo
test
cmp
insl
inc
push
adc
out
mov
test
xor
out
jle
jl
pusha
adcl
push
cmp
mov
test
aam
loopne
loop
loop
mull
imulb
loope
pop
mov
push
pop
test
popf
adc
shrb
rolb
in
push
orl
jmp
and
pop
jae
sbb
push
cmp
add
iret
incl
out
dec
scas
insb
lret
xor
push
das
mov
lahf
shlb
testl
mov
iret
xchg
sbb
mov
sbb
cwtl
les
dec
mov
or
rcr
pop
add
aaa
xchg
xchg
jne
call
adcb
scas
or
arpl
dec
cmp
jmp
mov
dec
mov
dec
or
push
dec
cli
push
push
mov
test
adc
pop
icebp
outsl
scas
loope
test
and
cwtl
lods
and
add
lret
inc
movsl
pop
sahf
or
nop
test
sbb
in
sub
pop
pop
push
es
dec
xor
mov
mov
dec
sbb
dec
jb
add
sub
inc
fcomi
push
xchg
xchg
fcmovbe
fsubrs
and
xor
ficoml
jns
xor
cs
loopne
stos
adc
outsl
sub
cmp
mov
imul
mov
dec
lahf
in
jb
cwtl
cmp
in
les
push
lahf
sbb
nop
daa
mov
dec
cmpsb
stos
adc
pop
push
mov
pop
cmp
fadds
subps
cmp
dec
and
pop
dec
hlt
rorb
mov
push
stos
sbb
mov
incl
loopne
or
or
add
fstp
sahf
sub
mov
push
call
jns
dec
xchg
andb
dec
fldt
mov
mov
jle
pop
inc
inc
ret
ret
cmp
sub
pusha
or
popa
dec
cmp
scas
cmpsb
mov
xor
mov
add
fnsave
fwait
lds
jl
mov
sbb
fmulp
fistl
mov
std
jae
sbb
je
inc
or
mov
shl
fsubrs
das
cmp
fisubs
insl
cltd
fnstcw
ret
mov
testl
out
xchg
in
int3
shrl
fisttpll
ret
push
sarl
stos
xor
and
fsubr
pop
and
push
fnstcw
xchg
dec
mov
imul
aas
push
enter
mov
iret
mov
andb
pop
pop
push
leave
pop
jecxz
jle
xchg
fstps
std
push
fxch
stos
push
ljmp
loop
xchg
frstor
fisubrl
rcll
andl
in
fdivs
aad
ret
adc
add
cmp
mov
pop
shll
aam
mov
xor
sub
adc
push
repnz
push
sbb
sub
in
sbb
xor
les
test
cs
subb
fwait
xchg
imul
stc
fstl
rcll
je
dec
and
pop
lret
sub
out
int3
mov
sbb
cmpsl
data16
mov
push
sarl
cmp
mov
xchg
les
mov
adc
jg
mov
andl
sbb
daa
mov
mov
xlat
inc
lret
lds
mov
push
fwait
jns
mov
addb
movsb
aam
xchg
adc
out
stos
mov
icebp
pop
scas
cmc
cmp
and
and
clc
data16
cmp
pop
add
movsl
sbb
jp
lock
cmc
test
fcomi
pop
popa
and
add
loopne
into
addr16
xchg
loopne
add
sub
sti
xchg
adc
test
std
pusha
imul
fs
mov
stos
mov
sub
rcll
f2xm1
fdivrl
fchs
xor
insl
mov
sub
sbb
jg
loopne
das
rol
sub
push
arpl
jp
test
jne
xor
jns
sbb
pop
lds
clc
lret
jno
dec
mov
les
rol
sbb
mov
cmp
inc
adc
notl
or
mov
xchg
jo
mov
inc
inc
jp
sbbl
je
subb
mulb
cmc
push
fildl
push
pop
mov
in
fisttps
xchg
jge
mov
push
or
outsb
jae
fwait
mov
jmp
inc
mov
or
ret
add
lea
xchg
cmpsb
dec
jae
pop
fsubs
fucomip
mov
xchg
xor
sbb
lods
add
aad
popf
adc
mov
ja
jnp
xor
sbb
das
cmp
push
mov
mov
fcompl
dec
push
xorb
push
repnz
sub
sbb
stos
or
call
or
ds
inc
jp
jae
mov
mov
inc
leave
xchg
or
and
inc
push
adc
sar
push
inc
insb
fistpll
dec
add
repz
add
xor
push
and
pop
adc
lret
dec
dec
dec
bound
cmp
scas
frstor
lds
dec
dec
adc
add
in
and
push
sbb
push
xor
lea
mov
cs
xchg
out
sbb
and
js
in
cli
adc
lock
pop
inc
dec
xor
cmp
mov
cmc
push
fadd
push
push
push
mov
cltd
fidivrl
mov
xor
jle
scas
in
cmp
ljmp
mov
cwtl
dec
fisubl
dec
in
daa
outsb
push
lret
lock
adc
roll
add
sub
fs
scas
loope
outsl
mov
bound
mov
and
lea
movsb
ljmp
sub
stos
inc
shlb
in
pop
imul
mov
cmc
xor
outsb
out
les
jge
sahf
rol
loop
push
fcmovnb
int
mov
mov
out
pop
mov
lahf
fiadds
lahf
out
rcrb
iret
divl
push
sub
mov
dec
mov
mov
dec
xchg
outsb
ss
out
pop
or
jbe
cli
aas
call
dec
fidivrl
sbb
arpl
cmovo
ret
enter
xchg
cmp
in
mov
jno
jne
add
add
adc
mov
ret
or
or
cmp
sub
xchg
movsb
clc
jl
icebp
inc
lahf
mov
pop
jg
sub
fistl
xchg
adc
xor
or
cmp
mov
fxch
push
xchg
sbb
mov
mov
jl
or
scas
add
cwtd
cmp
inc
jg
call
repz
jle
cs
sahf
scas
iret
rclb
jae
fistps
shl
dec
sti
jbe
test
mov
lock
push
cwtl
jns
ret
das
cmp
cli
lcall
sti
jbe
pop
lods
lods
mov
cli
mov
aaa
call
popl
je
and
mov
jecxz
or
cwtl
sti
int
and
sub
or
out
fdivs
lcall
stos
push
push
push
adc
loopne
mov
out
iret
jno
inc
mov
push
xor
repz
lds
out
xor
std
es
or
mov
push
call
push
fstl
pop
push
lcall
leave
mov
xor
les
fmull
dec
repnz
sahf
leave
int3
aad
xchg
mov
mov
mov
loop
bound
xor
ror
flds
and
ljmp
sub
gs
cmpsl
stos
jo
js,pn
cmpb
push
cmp
pop
int
cmp
out
adc
sbbb
outsl
mov
pop
leave
das
and
push
add
imul
ss
ret
push
clc
xchg
gs
mov
aas
adcl
daa
inc
push
imull
les
add
adc
xor
mov
xor
or
jle
outsl
sub
sbb
sarl
outsb
inc
cmc
xor
xchg
insb
sub
xchg
sub
push
mov
cmpsl
xor
mov
cmp
rclb
mov
lret
push
ja
inc
sti
shrl
pop
inc
mov
in
push
stos
popf
int
mov
mov
bnd
punpckhdq
push
fnstsw
xchg
imul
add
xchg
inc
adc
test
std
jmp
incb
repz
xchg
jg
xchg
movsl
aas
lret
pop
fdivp
cmpsb
insb
or
sub
bound
lods
into
jno
pop
iret
pop
clc
push
fistpll
scas
leave
xor
pop
xlat
adc
adc
sub
mov
cwtl
jbe
pop
mov
dec
pop
mov
shrl
mov
push
push
pop
je
jne
stos
dec
cmp
xchg
xor
mov
dec
lds
repnz
iret
xor
push
ficompl
daa
xchg
push
stos
fstpl
jmp
je
int
sbb
sbb
ret
add
push
dec
xchg
pop
jno
mov
push
jno
mov
mov
in
mov
sub
addr16
lret
xor
scas
scas
outsb
mov
xchg
movsl
sbb
mov
mov
push
cmpsl
cmpsl
ljmp
lock
xor
mov
out
dec
cmp
sub
jae
sub
ljmp
test
mov
nop
and
loop
add
lret
add
stc
lret
cmp
shlb
xchg
enter
push
sub
dec
sbb
mov
imul
jb
jne
sub
int3
xchg
arpl
aas
stos
test
dec
out
add
mov
dec
les
push
imul
mov
mov
pop
adc
ror
lahf
cltd
je
in
jg
sub
out
mov
test
shll
pop
test
push
enter
and
scas
aad
enter
inc
mov
es
ficoml
pop
ja
das
xchg
push
popa
xorb
dec
das
cs
adc
and
adc
mov
lods
sub
mov
repz
cmp
dec
pop
jg
fst
fdivrp
push
es
dec
or
shlb
mov
xchg
mov
add
test
daa
idivb
iret
adc
xchg
or
std
repz
pop
and
mov
pop
fsts
stos
fisubs
adc
push
fcmovnbe
sbb
xor
arpl
fdivrp
mov
mov
loopne
mov
dec
mov
mov
push
lods
mov
sbb
jl
bound
insb
mov
in
jo
cmp
adc
push
dec
xchg
jnp
push
push
xchg
les
xchg
or
adc
int
inc
pop
jg
sbb
stos
pop
and
decb
lods
leave
xor
jecxz
and
push
outsl
popf
jns
push
sbb
test
push
pop
in
movsb
push
push
or
ret
mov
lcall
sbb
mov
ljmp
popf
mov
fildll
pop
sbb
mov
bnd
adc
mov
cmp
in
nop
and
add
sub
orl
jmp
ret
arpl
xchg
mov
lods
push
movsb
testb
dec
xchg
es
pushf
jl
lds
out
daa
jl
int3
fadd
into
jge
lods
enter
or
nopl
test
fbld
addr16
arpl
fsubs
inc
xlat
cmp
push
xchg
ret
lcall
xor
add
pcmpgtw
mov
mov
shl
cmp
mov
movsb
mov
or
jbe
inc
cmpb
sub
xor
insl
or
mov
jbe
mov
push
fld
mov
adc
fistpll
mov
push
xor
out
jb
xchg
lods
push
iret
and
sub
out
orb
aaa
or
inc
lods
stos
inc
lea
dec
rorl
popf
int
jnp
dec
or
daa
pop
andl
stos
and
xchg
sbb
pop
nop
ljmp
or
sbb
lcall
push
in
cmpsl
outsl
std
push
or
mov
sahf
in
lret
add
mov
pop
test
sbb
insb
fdivs
lret
push
sahf
xchg
inc
mov
hlt
mov
mov
sub
in
sbb
stc
add
repz
adc
lods
dec
repz
aas
insb
pop
sub
data16
aas
sbb
icebp
sbb
xchg
in
insb
ja
rcrl
test
rcll
dec
rorb
loope
aam
sub
push
mov
inc
inc
push
rorl
jecxz
pop
ss
add
mov
push
movb
add
outsb
out
mov
dec
mov
dec
icebp
and
sbb
dec
push
xor
push
outsl
dec
cs
pop
enter
fcomps
lret
adc
stos
mov
clc
test
pop
sub
jnp
push
test
add
ret
mov
lret
xchg
cmpsb
divl
and
mov
arpl
int3
loop
stos
pop
sti
call
int3
jnp
pop
xchg
or
mov
jmp
sub
cmp
movsb
pop
das
out
jne
loop
mov
mov
mov
scas
sahf
inc
dec
test
push
xor
cmpsb
test
push
xlat
cmp
push
rolb
sub
or
push
inc
orb
add
mov
ja
jnp
lret
mov
roll
inc
ret
cwtl
pop
or
and
mov
xchg
jae
or
jge
adc
movsl
testl
lahf
daa
adc
inc
fwait
stc
adc
stos
push
push
arpl
stc
ljmp
loopne
ja
mov
jnp
jp
mov
jb
pop
cltd
lahf
imul
pop
ret
lcall
jnp
sub
push
pop
rcr
or
ljmp
mov
push
inc
xor
ds
sub
jg
mov
and
cmp
shll
dec
adc
xor
imull
jo
aad
sub
jo
fbld
mov
lock
aam
je
mov
aaa
pusha
sbb
nop
mov
cmp
sub
mov
mov
out
mov
sub
je
jbe
ret
fnstsw
enter
sarl
lock
inc
xchg
adc
ss
call
inc
bound
pop
ljmp
popa
jle
and
push
jb
orb
push
or
daa
scas
inc
dec
ror
mov
cmp
xor
pop
lret
mov
adc
or
imull
add
xchg
sahf
adc
stos
sbb
bound
in
pop
pop
scas
push
adc
push
inc
bound
lods
mov
cmp
xor
mov
mov
test
movsl
xchg
outsl
mov
cmpsl
aad
push
adc
mov
jb
or
lock
xchg
aam
mov
es
xchg
sub
fnstenv
dec
cmpsl
roll
and
sti
je
sub
aam
jl
xor
pop
rol
xchg
fwait
add
mov
loopne
imul
test
andb
cwtl
dec
pop
or
pushf
push
adc
rcrb
cmp
xor
fs
push
jg
xor
jno
pushf
xchg
sarb
jno
inc
scas
cmpsb
xchg
shrl
mov
add
sbb
mov
in
dec
daa
sbb
add
sbb
aad
bound
pop
test
rcr
js
shll
inc
push
ret
test
in
pop
fcmovbe
mov
dec
rclb
std
sub
dec
fldl
sbb
dec
rcrb
sarl
popf
imul
xchg
ret
cmp
push
lods
adc
daa
mov
mov
add
fcmovb
stos
imul
dec
xlat
adc
sahf
ss
inc
aas
xchg
sub
cmp
push
aam
xchg
mov
cs
lret
in
das
scas
and
cs
jg
jmp
sbb
lea
jae
cltd
cwtl
mov
loopne
sahf
mov
or
popf
enter
and
out
pop
mov
jae
sbb
lods
cmp
cltd
das
es
imul
bound
cs
push
push
push
cmp
push
fstl
test
je
push
rolb
lds
cmp
lds
clc
mov
mov
scas
pop
jae
jecxz
out
movsb
loop
inc
mov
out
jne
mov
scas
hlt
pop
add
fldcw
cmp
pop
mov
repz
imull
add
loopne
pop
mov
fstpt
dec
les
gs
inc
lock
cmp
enter
out
adc
aad
or
mov
adc
push
xor
pop
jnp
lret
inc
mov
arpl
jno
and
xor
aas
xlat
shlb
mov
push
and
or
sbb
sbb
popf
cltd
or
imul
jb
lea
stc
stc
sub
xchg
jge
lds
rclb
push
xor
mov
push
insl
es
sbb
push
mov
mov
shlb
stc
pop
jo
add
into
mov
xchg
jecxz
movsb
lea
loop
jp
mov
out
pop
sub
mov
mov
add
add
std
inc
in
lcall
subb
jge
jge
ffree
icebp
inc
push
ja
add
fldpi
cmp
gs
in
add
mov
fst
mov
xchg
cmp
mov
push
mov
cmp
out
repz
sub
fwait
mov
sti
cmp
mov
cli
fcmovnu
push
mov
jne
mov
push
cltd
fdivrl
xor
nop
testl
or
cmp
add
in
icebp
adc
pushf
ret
cwtl
cmp
mov
jns
adc
pop
mov
dec
pop
xor
rol
xor
ljmp
stc
fxch
leave
xor
xor
sub
pop
sahf
push
xchg
mov
outsb
and
or
mov
cmp
jbe
push
inc
das
lods
add
push
aaa
cld
lock
cs
push
in
fwait
mov
fwait
pusha
jo
jp
icebp
incl
xlat
cld
pop
insb
cmp
xlat
rorb
xchg
stos
pop
mov
and
pop
ja
pop
ljmp
mov
gs
sti
aaa
test
popa
pop
cmp
jmp
frstor
pop
xor
popf
hlt
xor
aad
enter
pcmpeqd
adc
pop
push
add
sub
rorb
lds
scas
dec
daa
add
push
mov
cli
arpl
xor
or
xchg
xchg
pushf
aam
lods
movsl
in
fcomi
fstpt
xor
mov
jo
scas
cmc
fidivrl
or
adc
out
arpl
out
ljmp
mov
or
jno
les
mov
imul
sub
jg
push
mov
lods
mov
ljmp
add
shlb
call
ljmp
fsubs
inc
shr
mov
std
xchg
mov
mov
fiadds
fcmovnb
in
outsb
add
pop
popa
add
cld
ret
sti
imul
xchg
mov
jne
stos
mov
xor
jb
xchg
pop
dec
mov
and
xchg
cmp
or
pop
fcompl
mov
push
scas
rcl
mov
outsb
mov
iret
lcall
into
pop
out
adc
mov
and
lds
and
sub
fldcw
hlt
mov
call
loop
inc
out
inc
popa
dec
and
outsb
mov
add
arpl
xor
dec
mov
add
xlat
rclb
xchg
inc
push
xchg
xchg
fwait
push
rcl
pushfw
mov
cli
clc
icebp
jnp
xchg
aam
mov
test
jo
mov
jl
jnp
es
pop
shll
dec
mov
mov
fwait
outsb
cmpsl
xchg
fisttps
in
clc
sbb
lock
ja
clc
arpl
dec
mov
jae
xchg
arpl
xor
test
jae
movsl
xchg
xchg
xor
pushf
rclb
and
mov
or
in
mov
pop
sub
mov
xchg
aas
iret
adc
or
fisttpl
and
cwtl
mov
iret
loop
mov
pop
or
fidivs
inc
adc
add
or
mov
cmp
xchg
inc
adc
push
xchg
xchg
outsb
jl
sahf
in
int
sbb
js
roll
out
or
mov
mov
aaa
and
push
sbb
lock
or
jle
mov
leave
shll
or
aas
repz
xor
jo
push
mov
fsincos
and
push
ret
mov
popa
mov
mov
repnz
inc
jl
sub
jbe
sub
add
in
and
pop
mov
or
mov
les
incl
sar
scas
and
icebp
leave
imulb
jp
or
cmpsl
ds
out
movsl
cmpsb
add
divb
jo
xor
lds
leave
push
in
dec
fwait
adc
aad
sbb
xor
insl
shrb
and
icebp
mov
add
mov
outsb
rcrl
push
dec
in
out
arpl
in
imulb
rcrb
insl
cmp
add
loope
cmpsl
rorb
loope
out
test
testb
movsb
or
cmp
fildll
scas
mov
sub
orl
fdivrs
push
addr16
les
jno
fs
inc
push
pop
or
pop
cmp
add
int
pop
int
jecxz
stos
cltd
xor
dec
sbb
shll
daa
inc
sbb
test
sti
int3
jne
mov
mov
movsl
cmp
fs
in
insb
lcall
out
sub
insl
stos
in
mov
cs
imul
icebp
cmp
repnz
xchg
fwait
insb
out
lret
inc
in
jae
out
xor
mov
pushf
stc
jp
hlt
sub
adc
inc
sub
mov
and
imul
pop
mov
xor
pusha
sbb
ret
mov
mov
or
insl
mov
adc
hlt
mov
fwait
pop
lcall
and
push
rcll
jae
orl
imul
loop
adc
cmp
cwtl
sub
mov
inc
fnstsw
lock
and
lret
jecxz
test
hlt
dec
pop
cmp
and
cmp
pop
mov
jmp
add
xchg
hlt
loopne
cmc
pushf
push
lock
out
and
mov
push
fiadds
mov
jle
push
sbb
lret
sbb
aad
pop
cmpsl
cmp
adc
bound
and
xor
out
pop
repz
push
sbb
add
adc
cwtl
pop
outsl
lahf
cmp
out
dec
fimuls
lcall
mov
mov
adc
pop
lds
sbb
mov
aas
mov
sbb
fisttps
shlb
jae
push
push
jno
or
cmp
aaa
icebp
seto
loopne
aad
ret
rcll
fidivrs
out
jne
loopne
mov
push
scas
in
mov
test
in
and
frstor
fmuls
pop
push
shrb
int3
pop
repz
push
push
cs
or
mov
es
mov
leave
dec
cmc
push
push
popa
cmc
outsb
shll
ret
push
mov
cmp
mov
out
push
pop
cwtl
sti
daa
inc
push
fsts
push
and
lods
shrl
aaa
das
es
nop
cmpsb
mov
popa
mov
fsub
or
sbb
dec
pop
mov
inc
shll
in
popa
sub
adc
push
mov
jne
shlb
cld
imull
push
rolb
xor
xlat
ja
pop
fsts
imul
fsubl
xchg
sar
out
mov
push
test
xlat
inc
add
out
push
mov
ret
aad
dec
test
loop
sbb
pop
daa
or
es
xchg
or
xchg
jno
lds
mov
push
push
or
xchg
stc
sbb
mov
aad
mov
xchg
stos
sahf
adc
fucom
jmpw
movsb
fisttpl
loop
mov
pop
xor
bound
incl
les
pusha
jge
cmp
imul
fdivrl
cmp
push
addl
test
outsl
daa
es
cmc
mov
lock
sbb
sbb
inc
cwtl
and
repz
mov
lods
mov
xchg
or
mov
orb
sub
aad
xchg
xor
shrb
movsl
cmpl
cmp
orb
sbb
dec
sub
xor
cmp
cmp
popa
cld
adc
push
and
jo
jl
adcl
xorl
xchg
outsb
jb
jecxz
and
fcompp
scas
adc
decb
cmp
adc
mov
sub
movsl
add
or
imul
loopne
jmp
cli
mov
xor
xor
cld
xor
mov
pop
fsub
dec
std
push
add
xchg
andb
mov
lahf
xor
je
xor
or
xchg
daa
nop/reserved
mov
aas
mov
mov
mov
sub
xorb
pusha
js
stos
je
dec
mov
add
cmpsl
xchg
or
movsb
repnz
popa
dec
cmpsb
xor
enter
fisubl
pop
pop
xchg
subl
icebp
lds
lods
and
push
pop
pop
jmp
push
test
leave
sbb
pop
adc
stc
cmp
cli
imul
sahf
arpl
jle
adc
aam
add
and
pop
aaa
inc
jecxz
and
sbb
repz
subb
inc
shlb
dec
add
add
and
pop
inc
aaa
jne
xchg
rcrb
mov
inc
inc
jnp
loopne
popa
inc
jo
cli
pusha
add
insb
movsb
sub
mov
aad
mov
out
mov
pusha
push
scas
xor
negl
xchg
jae
icebp
out
jmp
add
addr16
loope
sbb
xlat
mov
mov
xchg
mov
mov
shl
sub
divl
pop
mov
or
dec
inc
cmp
cmp
mov
xchg
pop
cwtl
sarb
xchg
pop
shlb
inc
xchg
mov
jnp
mov
mov
xchg
repz
mov
fwait
lcall
pop
mov
jb
jecxz
add
sub
roll
mov
jle
repnz
cmc
dec
adc
push
stos
lock
and
sub
jbe
or
js
in
pop
scas
and
leave
xorb
test
les
fs
incl
pop
insb
fldenv
inc
cmp
pop
jae
out
sbb
stos
jae
loop
sub
arpl
sub
mov
lahf
out
inc
mov
sub
mov
and
and
inc
jbe
mov
dec
mov
pop
rorl
mov
jmp
jg
xchg
push
insb
push
sti
ret
push
push
sbb
in
repnz
into
push
sarb
dec
aam
sub
test
add
shll
add
add
adc
jnp
cmpsb
push
or
lret
push
stos
lea
jp
mov
xor
and
xchg
daa
into
sbb
dec
icebp
and
fldenv
add
fwait
adcl
pop
mov
frstor
add
outsl
shlb
rcl
mov
gs
adc
stos
jmp
push
pop
leave
mov
add
frndint
sub
clc
adc
push
and
mov
scas
and
jecxz
ljmp
push
push
test
xlat
hlt
rolb
pusha
push
sahf
sbb
leave
sbb
loope
in
or
arpl
cmpsb
xlat
cmpsb
xchg
jg
or
and
pop
pop
notb
mov
jl
xor
dec
cmp
scas
mov
pop
roll
mull
dec
mov
sub
push
add
inc
popf
jnp
mov
inc
pop
mov
and
in
hlt
xchg
outsl
hlt
mov
fmul
or
push
pop
lcall
adc
sub
out
mov
lds
or
jl
xchg
mov
lahf
pop
jl
shlb
fdivrp
cltd
arpl
pop
scas
cmp
sub
fs
add
jmp
sbb
dec
hlt
jp
scas
bound
push
inc
mov
in
andb
push
xlat
shrb
xor
adc
cmp
bound
dec
xor
push
in
not
mov
mov
push
xor
jg
dec
mov
adc
std
inc
add
xchg
orb
jg
sub
addr16
jg
cs
cmp
mov
out
push
and
pop
out
adcl
xchg
cwtl
shl
fstpl
dec
out
fwait
stos
fwait
mov
sbb
xor
inc
andb
mov
xchg
jno
je
cmp
sub
pop
clc
faddp
pop
in
jae
jmp
lahf
and
push
cmp
xchg
sub
jl
mov
add
mov
mov
fldt
les
mov
adc
js
cmp
pop
pop
shlb
mov
mov
or
lret
sbb
add
idivb
hlt
add
repnz
xlat
pop
xor
inc
xchg
jp
xor
push
and
inc
pop
sbb
mov
ja
insb
in
enter
sbb
flds
test
rcr
shrl
dec
lock
cltd
xchg
imul
dec
stc
sub
sub
mov
loop
imul
fcmovu
lods
and
xchg
cmp
sub
loop
xlat
add
cmp
mov
push
daa
je
lds
movsb
xor
mov
and
aad
add
cmp
push
and
test
mov
sbb
test
pushf
rcll
shl
fnstcw
pop
cmp
jns
pop
out
fistpl
mov
jne
dec
push
inc
adc
ds
fildll
jmp
je
ljmp
adc
cld
dec
push
xchg
adc
arpl
test
jg
lcall
cld
inc
cmp
mov
sbb
clc
or
mov
inc
sub
stos
pop
rcrl
fs
insl
lods
insl
push
mov
or
ret
inc
sbb
cmpl
mov
dec
mov
add
int3
nop
frstor
push
jecxz
push
lcall
inc
mov
cmp
int3
jmp
pop
adcl
sub
mov
mov
iret
stos
mov
nop
push
mov
int3
cmp
into
subb
lea
push
iret
loop
lret
xchg
or
out
jo
addr16
jo
fs
mov
dec
sbb
lcall
popf
sub
xchg
pusha
cli
inc
js
sti
test
cmc
adc
inc
shrb
mov
test
lods
icebp
xor
mov
cmpl
std
cwtl
enter
adc
sahf
rorb
in
repz
xor
push
fldcw
movsl
hlt
mov
fisubrl
divb
fcomi
fimuls
inc
ret
hlt
cmp
mov
mov
cmpsl
scas
mov
stos
cmpl
push
rorb
pop
cs
rcrb
and
rcll
ss
int3
arpl
mov
sbb
ss
aam
pop
adc
and
jnp
or
test
fpatan
mov
jbe
mov
call
addl
push
not
dec
mov
fnstsw
cmp
gs
pop
dec
inc
push
jo
or
sti
add
push
arpl
sub
push
bound
dec
out
es
loopne
jecxz
in
or
stos
es
mov
pop
xchg
add
stos
inc
xchg
jecxz
mov
mov
inc
mov
frstor
aas
jl
jns
jo
insb
mov
xchg
pop
sbb
push
mov
in
sub
movsl
mov
pop
inc
test
lret
push
scas
add
test
adc
mov
inc
test
mov
pop
sbb
into
sarl
fidivrs
xchg
sub
pop
lds
fcoml
fldcw
test
cld
fisubrl
inc
push
mov
jno
push
dec
fwait
add
stos
cmp
xchg
sbb
and
int3
icebp
out
jecxz
mov
fcmovnbe
outsb
jbe
inc
shll
sbb
or
add
lds
dec
out
out
or
cwtl
and
mov
add
adc
push
arpl
inc
xchg
pop
lock
xor
roll
xorl
lcall
xchg
inc
jb
rcrl
jle
fdivr
daa
enter
xchg
jno
add
fists
or
fs
ret
add
rorl
adc
repnz
sub
gs
jl
lock
sub
insl
cmp
jmp
or
push
popf
or
lds
sub
fbstp
loopne
rol
and
test
cmp
data16
pop
lret
aad
push
movsl
push
push
fs
nop
fstpl
jo
sbb
aaa
inc
or
loope
pop
mov
orb
mov
and
fisubrl
lea
mov
les
push
mov
inc
pop
mov
cmp
inc
pop
push
dec
popf
mov
jg
mov
inc
mov
jae
xchg
sub
fmul
pop
out
push
dec
or
mov
jbe
jmp
testb
xor
mov
inc
iret
loop
enter
cmpsl
dec
loope
pop
sub
fildll
stos
adc
imul
add
dec
pop
out
icebp
mov
movsb
adc
icebp
repz
mov
jp
mov
mov
pop
lret
cli
push
jecxz
mov
enter
adc
jns
in
mov
popf
test
lcall
fcmovne
lods
je
or
cmp
insb
les
xor
adc
add
inc
dec
inc
cmp
lock
xchg
stc
insb
data16
mov
int3
insl
shlb
mov
mov
ss
pusha
aam
mov
inc
les
mov
das
dec
ret
iret
and
mov
jae
loopne
sbb
push
imul
jno
jge
xor
push
cld
and
pop
mov
jbe
adc
pusha
adc
lods
repz
and
inc
cmp
addr16
jbe
std
jmp
movsl
int3
jge
mov
and
xchg
jae
xor
popa
ja
cmpsb
int3
loope
sub
ficomps
int
add
loope
adc
aaa
frstor
orl
adc
mov
or
jg
xor
sbb
test
repz
idivl
aam
lea
aas
or
push
xchg
push
push
outsl
cmp
nop
mov
daa
aad
add
xor
shlb
mov
daa
xor
bound
es
in
mov
jecxz
out
clc
push
dec
in
mov
ljmp
add
lock
in
or
mov
cmp
add
jne
push
jb
cmp
inc
push
shll
gs
gs
lcall
out
out
outsb
test
lcall
popa
outsl
ljmp
js
push
js
cmp
cmp
xor
jne
in
test
push
fdiv
pushf
outsb
loop
cmp
insb
pop
in
push
sbb
adc
test
shr
data16
cld
das
jnp
enter
jle
pop
add
xor
push
push
cmpsl
or
cmp
pop
in
xlat
add
mov
xor
addl
jb
inc
mov
insb
push
inc
sub
mov
dec
loopne
xchg
rcr
in
or
sub
fs
dec
cli
xor
test
xor
xchg
mov
and
jecxz
ja
mov
test
dec
mov
enter
out
ss
adc
gs
add
or
mov
rcll
fs
popf
data16
sub
sbb
iret
fimuls
call
push
into
scas
xor
sub
cwtl
or
cmp
mov
cs
sar
insl
in
iret
jg
movsb
repz
xor
or
lock
rcr
repnz
and
sub
outsb
aas
in
sbb
andl
adc
cmp
cmp
sbb
je
inc
pop
and
mov
icebp
insl
int3
adc
sub
sub
inc
xchg
stos
repz
xchg
jae
cmp
mov
mov
es
roll
adc
sbb
pop
daa
mulb
sub
addr16
arpl
pop
fwait
pop
jnp
mov
in
mov
fistpl
push
cmp
test
hlt
das
test
lds
sbb
daa
mov
mov
pop
mov
rclb
inc
mov
or
cmp
mov
insl
mov
pop
icebp
repnz
hlt
adc
outsb
push
cmc
or
jg
sbb
enter
mov
mov
cmpb
movsb
hlt
jbe
rcll
in
data16
in
mov
ret
lods
fsubl
or
sbb
cmc
add
pusha
mov
ficompl
or
jecxz
sbb
ss
bt
push
lcall
dec
dec
fcomps
aad
pop
jae
pusha
or
loopne
cs
insb
cmc
jne
pop
out
pop
nop
hlt
out
repnz
sub
mov
test
js
pop
cmp
inc
ja
mov
cs
mov
sbb
mov
pop
shr
and
xchg
sub
mov
movb
or
sahf
popa
push
ftst
or
adc
stos
fsubl
jle
jns
add
sub
and
fcmovbe
aam
sub
push
adc
add
cmpsl
xchg
imul
clc
ss
sub
mov
inc
pushf
cmpsb
adc
jle
outsb
icebp
out
dec
xchg
insb
stos
insl
adc
mov
pop
stos
jo
lods
es
push
xor
and
xchg
and
jmp
sahf
cmp
icebp
stos
pop
or
orb
cmpl
inc
hlt
cld
fldl
xchg
aaa
cmpsb
in
sbb
hlt
jne
fadd
mov
mov
push
xchg
jp
jle
pop
jns
mov
adc
cltd
xchg
jecxz
sbb
das
and
lea
negb
xchg
dec
std
bound
imul
xor
xor
mov
test
lds
jb
add
lods
jmp
mov
ljmp
sub
inc
in
jb
int3
pop
rorl
lea
es
lahf
std
sbb
mov
cld
inc
sub
pushf
fs
or
test
fcompl
out
add
sub
imul
cmp
sbb
dec
cwtl
jl
out
cmc
add
test
mov
subl
mov
lcall
dec
mov
je
or
xchg
stos
lret
out
sbb
sbb
or
sbb
enter
cmp
xchg
or
add
mov
jne
repnz
mov
or
mov
scas
and
push
cmp
aam
das
rcr
xor
sahf
mov
dec
insb
jno
inc
push
shl
icebp
shll
mov
notl
and
lods
cmp
arpl
jb
mov
push
les
sub
jae
iret
jecxz
mov
out
sub
repnz
repz
cli
mov
adc
mov
in
sub
lret
into
adc
inc
mov
iret
js
lret
mov
mov
out
mov
push
lcall
sbb
repnz
test
cmpsl
sbb
lahf
push
dec
push
inc
jmp
imul
es
add
cwtl
xor
inc
cmp
cwtl
mov
xchg
bound
sbb
mov
hlt
mov
xchg
mov
lahf
and
mov
outsb
jno
cmp
jecxz
popf
xchg
fs
cli
cmp
outsb
cmpb
mov
dec
out
mov
cmpsb
gs
loope
arpl
sub
adc
lcall
mov
negl
sub
push
scas
sti
lret
js
pop
or
lahf
aad
push
rolb
pusha
cmp
jecxz
mov
sbb
loopne
jnp
mov
pushf
cmc
stos
sti
cmp
push
cwtl
mov
mov
dec
ret
sti
mov
mov
push
pop
enter
dec
into
inc
mov
pop
loop
and
jp
jne
mov
rcr
dec
mov
pop
aaa
cmp
aad
fwait
gs
mov
xor
mov
dec
xchg
dec
imul
add
stc
imul
fs
or
fs
inc
ja
adc
aad
shlb
maskmovq
notl
push
dec
js
es
push
sbb
imul
clc
inc
mov
mov
mov
and
fildll
pushf
xchg
test
inc
sub
mov
push
and
sbb
xchg
ljmp
or
jmp
cmp
jbe
int
push
mov
adc
insb
cltd
xchg
jle
ss
enter
in
dec
ds
nop
inc
aad
outsb
jmp
call
dec
push
xchg
fistpll
lock
xor
fucomp
mov
insb
xor
mov
mov
push
enter
bound
lret
ja
sti
cmpb
fs
dec
push
adc
jbe
repnz
imul
std
sbb
jae
test
xor
cld
mov
dec
cli
mov
bound
sbb
jb
xor
dec
lea
mov
arpl
loop
xchg
out
dec
fisubs
pop
push
inc
xchg
mov
outsb
mov
adc
sbb
mov
adc
mov
fidivl
stos
lahf
cs
sahf
mov
inc
mov
leave
icebp
out
jae
fs
dec
push
popa
fldl2t
fcomps
cmp
or
mov
fcoml
push
jb
jns
loopne
xor
add
cmp
jge
out
and
push
arpl
inc
jle
and
cld
es
test
leave
enter
das
jnp
das
inc
xchg
cmp
faddl
outsl
imul
mov
lret
sub
sahf
daa
cwtl
insb
ret
jnp
jbe
ficompl
add
sahf
dec
add
cmp
pop
jbe
movsb
movsb
adc
jg
out
xlat
fwait
mov
and
inc
xchg
mov
cwtl
pusha
popf
cmovns
mov
lahf
mov
inc
outsl
cmp
hlt
xchg
outsl
mov
rcrb
sti
mulb
fdivr
add
test
js
and
pusha
push
mov
inc
dec
mov
cmc
loope
data16
adc
repz
fiadds
mov
js
stos
sbb
cmp
sbb
dec
aaa
andb
fldcw
add
test
mov
cmp
movsl
jp
push
mov
fimuls
sar
ja
mov
adc
sti
jl
sbb
loop
mov
lahf
repz
addr16
es
adcb
fiaddl
xor
cmp
ja
lds
pop
or
mov
mov
xchg
inc
pop
rclb
push
add
ja
test
dec
loop
mov
mov
stc
add
loop
xlat
pop
pushf
cmp
mulb
out
jp
xor
push
iret
das
jmp
and
pop
pusha
jp
out
ljmp
fisubs
xor
call
negl
enter
sub
jmp
int3
xchg
clc
ret
popf
mov
subb
scas
xchg
xor
mov
xlat
push
or
mov
lds
and
test
xor
and
sub
popf
cmp
test
arpl
ljmp
push
add
into
push
xchg
andb
mov
jo
mov
test
fistpll
inc
ss
dec
mov
dec
les
lret
jno
jp
sub
enter
adc
repnz
aam
or
ds
iret
cmp
cmc
iret
jp
xchg
hlt
inc
inc
sbb
mov
sahf
push
pushl
repnz
jns
cmp
arpl
mov
test
pop
orl
cs
adc
jnp
arpl
addw
insb
mov
or
xchg
xor
mov
rorb
and
adc
mov
stos
xchg
insl
mov
addb
push
mov
imul
outsb
mov
out
xchg
shlb
add
xchg
adc
fcoml
push
push
movsl
jge
pop
or
mov
mov
insl
out
aaa
xor
mov
xor
or
jmp
mov
rcr
dec
fwait
fwait
inc
xchg
outsb
mov
test
cli
and
inc
rcl
fsubrl
jl
xor
repnz
cmp
mov
rcll
push
divb
sbb
cmp
xor
sbb
aas
ss
into
scas
xchg
lods
xlat
daa
outsl
subb
outsl
icebp
ret
pop
dec
ficompl
sub
dec
es
imul
leave
popf
jg
jle
fidivs
push
mov
aaa
shrl
cmp
cmp
fs
and
sbb
mov
inc
mov
loop
mov
out
xchg
sub
test
out
adc
adc
sub
xchg
ds
jne
ja
sbb
mov
fs
out
test
inc
clc
dec
pusha
sub
sahf
sarl
in
cld
xchg
jp
pop
or
out
pop
rorl
cmp
mov
xorb
iret
jecxz
mov
jmp
jecxz
inc
ja
mov
mov
loopne
je
mov
and
icebp
push
pushf
imul
aad
inc
mov
mov
push
dec
enter
or
sbb
jb
jmp
jg
and
insl
add
divb
lods
jno
cmp
ret
cmp
pop
mov
xor
add
cmp
clc
or
mov
ret
pop
loope
sbb
fwait
test
cs
mov
insl
jmp
mov
sar
xor
mov
jg
fcoml
call
imul
and
mov
push
mov
enter
sti
or
leave
stc
pop
and
mov
mov
cmc
scas
int
pop
xor
cmp
or
test
dec
push
push
test
popf
adc
insl
xor
jnp
sbb
xor
or
aaa
pop
push
jmp
inc
in
xchg
jns
pop
aam
xacquire
sub
xchg
mov
sub
push
inc
orb
pushf
jns
test
lret
mov
and
testl
push
pop
sti
sub
into
jbe
scas
ja
xorl
stos
pop
sub
test
inc
sub
cmp
mov
jne
jb
jmp
push
xchg
xor
sbb
popa
xor
fimull
loope
cmp
dec
push
sub
jmp
xlat
imul
dec
or
or
pop
adc
cmc
ret
movb
out
or
frstor
sbb
icebp
test
loop
fidivrs
xchg
inc
adc
pop
sbbb
scas
aas
cmp
xor
push
iret
lds
xor
dec
and
push
push
and
mov
lock
cmp
lock
mov
jg
pushf
and
arpl
mov
js
push
cmc
jge
nop
std
iret
cmp
movsl
and
imul
push
adcb
sub
stc
sub
movsb
pop
faddl
pop
std
repz
sbb
mov
rep
scas
divb
fwait
ss
or
bound
stos
and
inc
lcall
inc
add
je
cmp
lcall
push
jae
lret
or
pop
jge
fsubr
fcoms
mov
push
xchg
ret
gs
lea
mov
std
cmp
sub
add
test
loop
push
or
jno
sub
cmpsb
fnstcw
jnp
mov
sub
fsubr
ljmp
arpl
ljmp
imul
inc
incb
addl
add
cmpl
push
pop
inc
push
adc
leave
cli
jbe
jno
push
aas
xchg
sbb
mov
pop
rorl
scas
xor
lret
adc
cltd
insl
cmpsl
pop
pop
mov
sbb
movsl
or
arpl
dec
xor
pop
cmp
aas
sbb
jbe
xor
cmp
xchg
cld
pushf
or
popl
lret
mov
cmp
jmp
fistps
mov
sbb
int
sub
adc
mov
stos
sub
das
shrl
xchg
hlt
mov
std
mov
pusha
mov
into
popf
insb
mov
adc
or
inc
adc
xor
lods
mov
mov
rol
or
fldl
mov
and
dec
loope
outsb
cmp
push
dec
jno
inc
enter
pop
shrb
ficoml
cmp
cltd
cmp
inc
outsb
xchg
pusha
mov
fs
inc
xor
pop
mov
scas
movsb
or
inc
or
push
adc
dec
push
das
jmp
imul
test
xchg
push
dec
nop
in
sub
js
test
jnp
ret
pop
xchg
fiaddl
xor
jb
lret
das
push
add
mov
insb
xchg
repz
sub
in
loope
mov
or
sbb
push
dec
in
jae
pop
jne
dec
cmpsb
push
lahf
mov
or
daa
mul
cmp
pop
push
jg
and
enter
fisubs
dec
test
les
cmp
arpl
or
lods
sbb
lock
das
jg
mov
mov
mov
lods
cmp
sub
test
mov
test
jnp
js
xor
xchg
mov
rclb
jg
arpl
ds
pop
loop
ficoms
dec
rcll
push
sub
push
xor
pop
popf
imul
push
push
push
adcl
into
pop
jbe
push
jecxz
add
mov
sarb
rcrb
xchg
fimuls
xchg
or
dec
loope
leave
subb
cmp
or
jge
les
bound
repz
pop
fdivl
mov
push
aaa
xchg
jb
mov
xor
jbe
repnz
sbb
lods
cmp
sbb
sub
iret
hlt
clc
xchg
add
cmpsb
shlb
jmp
mov
imul
mov
push
adc
push
out
push
jnp
jae
pop
add
inc
jmp
shll
adc
inc
in
and
jp
lods
fwait
test
subps
mov
sub
out
sub
or
and
arpl
dec
enter
mov
xchg
cmp
movsb
xchg
and
sub
int3
insl
jne
push
mov
or
pop
ds
mov
mov
jnp
fld
repz
mov
cwtl
mov
push
and
sub
sub
mov
adc
mov
in
push
mov
sti
in
pop
push
faddl
icebp
jmp
aas
movsw
cmp
sbb
pop
and
jno
xchg
out
icebp
cmp
xor
ficoms
and
inc
mov
aas
xor
jg
mov
outsl
cmp
mov
in
xchg
packssdw
int3
inc
xor
jo
xor
pop
enter
add
cld
hlt
cmp
arpl
or
enter
cmp
adc
movsb
or
lods
std
or
or
pop
sub
mov
xchg
outsb
fwait
cmp
sbbb
xor
cmp
lea
lcall
xchg
adc
cmc
sbb
xchg
dec
sbb
xchg
pushl
jbe
int
daa
aas
into
adc
hlt
mov
add
test
pop
ljmp
mov
sbb
clc
inc
jno
mov
es
setle
shlb
jns
inc
stos
ljmp
or
test
sub
xchg
out
xor
pusha
es
frstor
jno
dec
fstl
mov
lods
repz
cmpsb
cli
scas
dec
inc
lock
xchg
stos
aam
mov
mov
das
mov
int3
das
cmp
pop
inc
add
fcomps
stc
xor
incl
jmp
lret
fdivrp
dec
jbe
dec
sub
push
xchg
mov
mov
orb
scas
dec
mov
pop
enter
inc
mov
sbb
outsl
out
jo
orb
les
jb
mov
mov
sti
or
bound
dec
cli
sti
and
jle
inc
insl
adc
cmp
in
push
pop
popa
cmc
arpl
test
dec
push
adc
cld
cmp
stos
inc
lods
out
fadds
aad
dec
dec
dec
adc
pop
sub
fstp
xor
mov
out
pusha
int
sahf
push
dec
aad
cmpsb
xchg
lods
xor
dec
aad
mov
lea
shrb
aas
loop
negl
stos
xchg
push
lret
pop
inc
gs
jmp
pop
dec
in
pushf
std
in
mov
cmpsb
enter
and
push
das
cwtl
es
cld
pop
sbb
enter
mov
pop
insl
in
insl
fisubs
dec
push
repz
mov
adc
daa
call
pop
sti
aas
xchg
mov
xor
inc
inc
adc
jle
bound
or
and
dec
enter
push
mov
dec
or
movsb
stc
imul
dec
inc
outsb
repnz
or
std
sbb
cmp
shll
jae
push
in
cli
jne
sbb
into
inc
gs
aas
push
push
movb
jnp
adc
pop
sbb
bound
adc
sarb
jg
adc
sbb
repz
insb
and
das
push
je
sub
and
in
mov
leave
lods
add
sub
dec
rcr
inc
xchg
mov
xchg
rcll
cs
ficomps
push
lea
jne
hlt
mov
xchg
imul
mov
cld
cli
or
adc
jp
cmp
push
mov
sub
iret
xchg
xor
js
push
or
pop
test
js
aad
sub
or
cli
popa
call
sub
jno
icebp
jge
push
in
sub
xchg
mov
adc
sbb
stos
pop
inc
cmpsb
fwait
sbb
mov
hlt
mov
stos
fsubrs
outsb
push
xchg
repz
std
xchg
stos
push
rcrb
jo
aad
pop
out
xchg
or
jno
mov
movsb
push
jg
sub
sbb
or
pop
das
cli
cs
xchg
mov
xchg
add
stos
int
pop
pop
mov
popa
cmp
subb
mov
popf
xchg
cmpsl
sub
ss
push
xchg
add
mov
test
icebp
xorl
aaa
jno
and
stc
arpl
jge
and
jne
call
ds
sahf
dec
or
stos
jno,pn
push
lahf
and
and
and
xchg
les
psllq
pop
addr16
push
ja
test
lods
mov
add
jne
xor
mov
out
push
popf
sbb
pop
add
sbb
push
or
sarl
cmp
xchg
mov
aaa
pushf
pop
or
test
mov
rcl
mov
mov
lcall
or
repz
mov
xor
test
mov
add
pop
in
sbb
sbb
push
rcll
into
cmp
jl
xor
lcall
loop
outsb
push
shlb
jp
out
dec
daa
push
test
mov
adc
lds
lock
in
repz
dec
leave
mov
cmpl
mov
fidivs
pop
pop
divl
addr16
cli
sbb
adc
mov
jns
test
rcl
add
cmpl
movsb
out
mov
mov
xor
mov
mov
jns
fdivrl
jle
sub
adc
fsub
out
lret
or
push
mov
mov
adc
or
leave
xor
leave
mov
mulb
repnz
sub
push
mov
dec
or
xor
sub
pop
pop
loop
std
mov
fmul
mov
mov
push
sbb
jbe
mov
outsl
cld
in
sub
lods
push
xor
sti
xor
pop
jle
mov
fists
scas
cmp
sbb
dec
rclb
mov
sub
out
int
and
push
or
adc
dec
out
movsl
iret
jno
ja
or
or
test
lds
mov
pushf
arpl
mov
mov
movsl
mov
scas
xor
in
lds
inc
aam
dec
inc
sahf
and
xlat
subb
pushf
mov
jmp
mov
push
adc
mov
int
out
rcl
jmp
scas
inc
cwtl
ret
fidivrs
aaa
push
lahf
pop
jae
jmp
rorb
outsb
mov
or
leave
roll
mov
adc
pop
pop
aad
stos
mov
sub
dec
xor
je
les
fistps
mov
push
daa
push
jmp
cmp
mov
inc
daa
mov
xor
repnz
add
shll
sbb
iret
or
pop
ljmp
jg
insl
add
add
push
xchg
ja
das
inc
outsl
stc
xor
fisttpll
dec
cmp
ret
jmp
divb
test
inc
push
scas
cli
loopne
push
jmp
inc
lahf
icebp
sarb
push
inc
mov
push
imul
cli
push
leave
outsl
inc
inc
and
sbb
sbb
mov
and
cmp
repz
xchg
outsl
in
rcll
sti
ja
clc
in
sub
pop
stos
mov
lods
repz
and
out
adc
cmpsb
sub
mov
mov
sahf
leave
xor
inc
aas
jb
lret
adcb
pop
jbe
jb
and
in
xchg
cmp
sub
out
imul
mov
subl
test
mov
or
push
cmpsl
test
xor
popf
bnd
arpl
cmpsb
lahf
push
insb
and
push
dec
andb
and
lret
mov
fwait
imul
bound
mov
sbb
scas
sub
and
mov
jp
fld
inc
pop
add
loopne
xor
fldl
repnz
ficompl
rcl
or
adc
add
lds
lods
sbbl
xchg
and
and
into
mov
cmp
dec
std
dec
sbbb
jecxz
test
sub
imul
icebp
stos
mov
pop
cs
push
mov
mov
test
test
pushf
fdivrp
in
add
stos
or
cmpsl
mov
pop
sub
mov
jb
xor
lahf
pusha
movsb
hlt
pop
add
jl
stc
or
pop
lret
cmp
fisttpll
lods
jge
jmp
pushf
test
leave
pop
lock
mov
iret
pop
in
push
sub
sbb
fs
iret
sahf
out
cmpsb
adc
fincstp
addr16
enterw
test
ja
js
test
lea
ja
and
sti
lock
sahf
mov
movsl
push
loopne
pop
std
dec
push
repz
rcrb
cld
sti
cmpsb
movsl
jmp
mov
mov
out
cmp
call
lret
inc
pop
or
xchg
pop
dec
add
adc
ds
xchg
sbb
mov
mov
xchg
sahf
or
lds
xor
mov
int3
sbb
fisttpll
dec
push
mov
movsb
daa
rcll
xchg
add
lds
loop
dec
rcrl
lcall
push
out
mov
inc
lahf
mov
adc
stos
pop
or
clc
pop
ret
adc
std
and
xchg
fstpt
inc
test
adc
inc
nop
sbb
and
fstl
jecxz
lods
shrl
out
cwtl
mov
jbe
popa
push
cmp
mov
jbe
sti
mov
adc
lods
mov
pusha
enter
fbstp
push
mulb
adc
insb
es
repnz
mov
ljmp
mov
jne
das
movq
pop
sbb
jb
sar
push
ljmp
push
in
sub
jmp
ret
dec
and
pop
orb
xor
fidivs
icebp
push
xor
or
lea
jge
fistl
ds
outsb
mov
rcr
addr16
mov
in
test
and
jmp
push
or
xchg
stc
cmp
mov
and
dec
in
cli
and
outsl
dec
leave
cmpsl
aaa
xor
mov
cld
adc
xchg
mov
xor
fimuls
stc
aas
cld
loop
mov
stc
add
and
pop
std
inc
jge
sbb
sbb
or
int3
inc
es
incb
lcall
or
push
xchg
or
int3
outsb
xchg
mov
enter
mov
cld
pop
xchg
jge
sub
jo
popa
adc
xchg
mov
jo
cs
and
test
xor
jecxz
cld
enter
add
pop
les
dec
jae
jge
mov
cmc
push
dec
addr16
jns
mov
std
test
enter
dec
out
mov
xlat
jnp
mov
in
pop
es
mov
xchg
mov
inc
cmpsl
loop
fcompl
aad
rcl
in
xchg
jo
xchg
xchg
adc
pop
leave
mov
add
cs
jg
xchg
out
stos
jno
jno
mov
push
fwait
lods
or
hlt
cmp
cmp
mov
and
je
repnz
es
xchg
jecxz
cwtl
jmp
add
dec
ror
popf
rorb
pop
sub
pop
mull
lret
test
push
adc
daa
xor
std
out
sti
fstpt
in
scas
stos
xchg
xlat
scas
sbb
sbb
xchg
push
xchg
jns
pop
push
cmpsb
mov
hlt
adc
loopne
push
fxch
lret
enter
mov
dec
dec
cltd
xor
dec
sti
sti
jnp
test
sub
aad
lock
ss
lret
cmc
decb
mov
arpl
push
mov
outsb
push
cmp
mov
dec
mov
sbb
mov
ud1
dec
cmp
add
push
or
clc
lahf
mov
inc
dec
add
scas
dec
test
dec
sub
push
into
push
adc
bound
mov
stc
push
out
das
add
mov
fisubl
inc
adc
fwait
add
mov
sub
int
xor
xor
sub
or
pop
insb
loope
jno,pn
insb
mov
xchg
loop
or
jns
pop
cld
sbb
les
jne
xchg
mov
push
mov
jo
imul
dec
adc
xchg
mov
mov
xor
adc
cmp
loope
fldenv
pop
stos
cltd
pop
sub
in
adc
xchg
repnz
sbb
testl
sbb
inc
push
cmp
lods
cmp
pop
mov
fildll
mov
fldenv
adc
mov
or
pushf
sbb
push
xrelease
fsubrl
push
popa
dec
cld
cmp
or
add
jecxz
push
add
jmp
test
andb
sbb
mov
addr16
test
adc
cmp
inc
cmc
out
in
pushf
test
inc
insl
cmp
dec
test
adc
pop
je
jmp
mov
fisttps
leave
jo
mov
pop
xchg
jne
mov
push
roll
sub
inc
add
mov
repnz
test
ljmp
push
xchg
lahf
cmp
cmp
sbb
mov
out
mov
mov
pop
adc
pusha
or
ja
sbb
jle
scas
add
adc
inc
lods
cli
cs
stos
dec
jb
push
jge
in
xor
scas
ja
fisubrl
mov
xchg
add
mov
pop
pushf
push
lods
rolb
sub
push
pop
fnsave
sbb
test
je
mov
cld
and
dec
xchg
sub
test
lods
adc
mov
shlb
mov
shll
loop
mov
jns
mov
inc
jno
xchg
push
adcl
popa
lea
add
xchg
or
mov
bound
inc
cmc
repz
mov
aas
jmp
xchg
popa
mov
push
jnp
js
cmp
pop
fists
repnz
xchg
std
and
pop
out
xchg
xor
shll
das
mov
cld
outsl
sbb
add
mov
xor
into
jge
sbb
int3
pop
pop
mov
xor
and
dec
sbb
jno
pop
mov
sbb
ret
lahf
xchg
or
mov
fmuls
imul
stos
xchg
pop
cld
aaa
or
mov
sahf
jnp
aaa
ja
xor
xor
outsl
adc
stos
nop
cmc
xor
or
les
aad
pop
ja
mov
lret
sti
mov
pushf
std
lret
lret
ljmp
or
mov
outsb
push
xor
and
sbb
jnp
lcall
and
pop
sbb
pop
cmp
pop
loope
test
jmp
mov
pushf
outsl
in
and
rorl
andb
adc
mov
daa
jne
jmp
xchg
and
push
cld
mov
stc
pop
clc
push
sbb
sbb
add
adc
stos
rolb
adcb
jnp
sub
mov
sti
es
popa
mov
aas
xchg
dec
iret
vpmadcsswd
push
andl
cmpsb
mov
lds
sbb
pop
out
mov
add
data16
xchg
xor
outsl
mov
mov
rclb
pusha
bound
lret
mov
jo
mov
mov
or
cmpsl
dec
lods
or
adc
jb
stc
cs
pop
mov
mov
mov
stos
dec
jmp
xor
add
leave
dec
icebp
outsl
sti
sub
cld
rcr
addl
xchg
lds
jae
ficoml
fwait
push
fst
out
adc
push
jmp
cmpsl
shlb
test
mov
mov
into
jge
mov
test
xchg
into
loopne
clc
imul
sarl
mov
dec
add
sahf
mov
lcall
xchg
mov
sbb
pop
movsb
std
lock
stos
add
out
adc
cs
scas
stos
cwtl
out
rcrb
leave
data16
add
popa
in
mov
push
gs
aam
lock
in
push
std
xor
hlt
inc
mov
push
or
xor
dec
ret
adc
out
dec
xchg
or
or
mov
push
push
jmp
frstor
or
cmpsl
mov
lods
mov
mov
data16
bnd
xchg
mov
mov
mov
jmp
jbe
lret
add
lods
movl
inc
fs
movsl
sti
cmpsb
movsl
popa
cwtl
insl
out
shr
push
movsb
inc
lahf
mov
push
push
ret
jbe
filds
sub
sbb
out
or
in
jno
testl
shl
jge
or
mov
jl
clc
andb
add
mov
sub
andl
dec
popf
pop
cli
cmp
pop
xchg
rcrb
lahf
std
sahf
inc
outsl
jo
das
rolb
test
fsubr
adc
sti
stc
outsl
xchg
hlt
sub
xor
inc
cli
fstps
lcall
cld
inc
popf
imul
je
mov
rcrb
and
stos
dec
adc
mov
daa
leave
fidivl
mov
popa
add
std
add
mov
and
or
mov
sahf
and
enter
gs
xchg
jb
insb
push
orb
cmp
pusha
adc
or
scas
sub
fisubs
and
test
sti
pop
pop
fs
adc
sbb
pop
jne
ljmp
sbb
mov
gs
popl
insb
cwtl
and
test
andl
loope,pt
shrb
push
iret
inc
sbb
inc
pop
jp
int3
aad
in
fsubl
in
push
dec
inc
inc
dec
mov
dec
lret
xor
ret
dec
mov
adc
loop
xchg
imul
lea
shrb
lock
fstpl
test
mov
cld
mov
je
mov
jge
push
std
into
andl
push
xchg
shll
into
xor
cmpsl
fdivrs
pop
ficoms
cmp
out
jne
cmc
cmc
push
pusha
xor
xchg
mov
in
cs
aaa
inc
fcom
xor
shlb
scas
xlat
sti
or
sub
insb
jge
jae
lods
inc
lret
pop
ja
mov
add
xor
imul
jl
mov
cmp
pop
sbb
popa
mov
cmp
pop
xlat
dec
jg
clc
fwait
bound
mov
xor
fimull
outsb
pop
fsubrs
ss
pop
gs
je
push
pop
inc
xor
stos
scas
pushf
push
in
int
mov
mov
aas
inc
les
jbe
or
dec
lret
fsubp
jge
cltd
mov
ja
pop
mov
xor
dec
mov
sbb
imul
push
and
jno
lds
loop
xor
lahf
test
pop
xor
clc
sbb
scas
sub
sub
push
test
outsb
inc
negl
dec
sbb
cmpsl
mov
dec
int
pop
test
push
dec
cmp
aas
mov
imul
cld
mul
sub
and
mov
test
mov
fnsave
xchg
mov
repz
cld
inc
lods
das
or
data16
sub
cld
or
cmpsb
data16
xor
fadd
dec
mov
add
into
fldenv
and
add
sub
nop
push
lret
and
scas
cmp
das
mov
lcall
call
or
das
mov
cmp
pop
stos
fwait
outsl
pop
add
sub
xchg
mov
mov
pop
dec
imul
ljmp
fs
jmp
sti
dec
sub
push
rclb
push
out
aam
push
sbb
or
fwait
jecxz
cmpsl
push
test
pusha
sahf
cmp
xor
mov
cmp
inc
cmp
and
sub
clc
jae
cs
das
inc
jge
sub
adc
xor
hlt
and
xor
lret
mov
cmpsb
mov
or
xchg
inc
push
cmp
cwtl
in
sbb
lds
push
xchg
fadd
cwtl
popf
mov
movsb
ss
pop
fidivl
mov
pop
scas
xchg
cmp
dec
lcall
mov
subl
or
fnstenv
sub
fs
enter
push
adc
call
cmc
stos
bound
sbb
test
cwtl
push
push
sub
gs
clc
cli
mov
inc
pop
shl
lret
rcrl
ret
sub
ret
cli
inc
cmp
inc
or
mov
add
dec
inc
lret
sbb
lret
test
sub
inc
sbb
stos
inc
xchg
in
xor
push
stc
repz
jb
jl
sub
sbb
faddl
jo
dec
push
dec
and
jmp
loope
or
cmp
cmp
xchg
iret
negl
es
roll
ret
jno
lods
orb
cmp
data16
xor
push
mov
dec
jmp
mov
mov
push
inc
dec
dec
pop
popf
repnz
pop
sbb
stc
fsubrs
xor
jp
sbb
movsb
pusha
pop
mov
xchg
repnz
orb
push
shlb
arpl
jb
add
mov
stos
stos
mov
sahf
xor
movsl
adc
push
and
jo
inc
xchg
fsubrl
enter
test
dec
fisttpl
push
xchg
repnz
push
out
jne
sarb
lahf
repz
dec
dec
or
mov
std
xchg
xchg
call
mov
imul
addr16
sbb
push
mov
loop
in
jp
sub
inc
ficompl
bound
mov
push
scas
shlb
pop
and
mov
jns
adc
ja
testl
and
loopne
dec
sbb
add
pop
ret
jnp
push
or
in
mov
lahf
mov
cmp
pop
jns
xor
test
and
lods
adc
mov
shll
mov
jmp
or
pop
ds
bound
sub
add
pop
jp
dec
jecxz
cmp
ds
jno
jns
imulb
mov
loopne
test
imul
xor
dec
mov
push
loopne
lea
dec
arpl
dec
pop
mov
scas
ds
adc
les
rcrb
xor
shll
push
outsl
pop
fs
sti
jge
add
fisubrl
mov
ja
xchg
icebp
xchg
sub
ror
ja
xchg
call
cmove
pop
pop
push
pop
or
int
inc
and
enter
cmp
fiaddl
add
xor
jle
cmp
out
and
or
pmaxub
mov
mov
aas
lods
iret
push
pop
popa
and
sub
sbb
and
inc
mov
sbbl
nop
pop
mov
mov
rolb
clc
int3
sub
imul
pop
sbb
push
enter
sbb
add
scas
sbbl
push
int3
inc
cltd
enter
aas
bound
mov
add
mov
ds
xchg
aam
cmp
loopne
repnz
out
out
dec
mov
addb
xchg
sahf
dec
andb
sub
mov
add
leave
daa
jle
cmp
sbb
pusha
jo
jno
dec
out
das
and
int3
lds
mov
inc
std
pop
nop
inc
inc
clc
in
mov
mov
xchg
mov
in
lods
test
mov
adc
sbb
pop
xor
dec
cmp
test
push
mov
and
mov
cltd
mov
xorb
sub
and
cmp
call
xchg
ja
fadds
or
mov
inc
loop
pop
push
fidivrs
sub
iret
cli
and
jmp
pop
bnd
dec
dec
sbb
xchg
pusha
sbb
sub
or
pushw
and
dec
cmp
pop
in
adc
out
mov
xor
sbb
xor
push
adc
popf
jg
pop
fdivrl
lock
dec
scas
add
xchg
gs
ss
jne
lods
scas
lea
sub
push
call
shr
test
les
inc
std
out
fs
add
insl
add
popa
mov
inc
fwait
dec
loop
addr16
cmpsb
dec
addr16
pop
lahf
fsubs
mov
rclb
push
scas
jae
dec
sti
sahf
out
mov
mov
inc
decb
out
daa
out
xchg
or
dec
dec
pop
dec
fldt
pop
in
xchg
in
test
add
mov
out
dec
xor
fbld
sub
aaa
jle
sub
cmp
pusha
pop
std
or
cmp
xor
and
mov
test
leave
xorl
mov
loope
push
out
cmp
jmp
xchg
mov
or
outsb
mov
cmpsl
stc
je
aam
cmp
push
jl
or
popf
les
repnz
test
addr16
jmp
fsubp
xchg
xor
pop
xor
xchg
outsl
mov
sub
stc
mov
lds
xor
imul
test
in
mov
fisttpll
addr16
xor
ret
and
maskmovq
notl
mov
vunpckhpd
test
mov
push
fmull
fninit
pop
gs
pop
test
xor
push
mov
pusha
cmp
bound
je
jl
add
mov
leave
rorb
loope
outsb
xchg
pop
dec
jmp
mov
cmpsb
js
testb
lods
adc
ret
push
cmp
jne
mov
repnz
sbb
mov
jno
jp
adcb
jb
sbb
inc
and
out
lods
and
push
nop
and
dec
outsl
test
push
jnp
pop
adc
out
jnp
test
lahf
jge
sub
sub
clc
imul
icebp
ss
cmp
lret
push
lahf
push
daa
cltd
popf
in
ja
push
jne
cld
mov
movsb
mov
xchg
fucomip
mov
stos
cmp
sbb
pusha
in
pop
mov
das
mov
movsl
fnsave
insl
repnz
cmpsb
jge
jle
pop
add
int
lret
mov
mov
adc
or
cmp
mov
sub
ljmp
push
ss
xor
mov
mov
sti
xor
or
data16
cmp
dec
repnz
sbb
jg
in
sbb
loop
int
loope
inc
int3
mov
or
xchg
or
push
pop
and
scas
imul
dec
mov
in
lcall
or
push
imul
cmp
xchg
sbb
xchg
jmp
fmul
mov
inc
ret
fdivs
ja
mov
cmp
roll
adc
xor
mov
sub
dec
and
clc
push
cltd
ret
push
in
stc
mov
cld
repnz
sub
aas
cmp
hlt
popf
aaa
push
lret
add
or
xchg
ret
lds
cmp
insl
jbe
and
cli
xor
sbb
cmpsl
loop
std
xor
push
call
mov
push
inc
cmp
bound
insb
rclb
nop
sub
cmp
or
mov
dec
xchg
jo
dec
mov
out
mov
andb
addb
mov
sbb
cmp
dec
pop
loop
negb
add
add
xor
stos
out
xor
cmp
push
cli
xchg
inc
fadd
sbb
push
cmp
cwtl
js
sbb
popa
popf
mov
imul
mov
test
jg
sbb
add
out
aaa
or
mov
fistps
psadbw
mov
push
jle
dec
stc
dec
aas
mov
insl
aaa
sub
cld
add
aad
ficoms
xlat
push
cmp
push
lods
pop
sub
inc
cld
mov
cmp
push
stos
mov
inc
cwtl
lret
dec
ljmp
mov
mov
mov
dec
adc
fsubrs
popa
int
sbb
or
jb
scas
fcompl
pop
push
sbb
icebp
mov
pop
sbb
mov
arpl
in
cmp
dec
pop
scas
insb
inc
mov
jno
pusha
cs
dec
cmp
out
pop
jge
push
jle
and
pushf
pop
pop
jmp
sub
mov
scas
loopne
lret
cmp
pushf
mov
arpl
icebp
movsb
dec
or
je
sub
sub
std
cmp
xchg
mov
sub
dec
lock
push
mov
sub
in
in
fnstenv
mov
out
int3
adc
sub
imul
jo
mov
xor
mov
addl
dec
inc
mov
in
insb
xor
orl
adc
lods
mov
add
mov
or
dec
sub
ret
jg
sbb
lcall
cmp
jae
adc
adc
dec
dec
int3
pushf
jmp
mov
repz
sbb
mov
nop
cmc
and
mov
jne
jecxz
lret
xchg
hlt
in
dec
pop
test
mov
inc
mov
ljmp
push
aad
push
mov
fs
xorl
orb
add
push
jae
mov
mov
pop
adc
mov
inc
loope
sbb
pusha
and
nop
fldl
mov
popf
jne
repz
lock
fcmovnbe
icebp
mov
test
ret
outsb
call
shr
xchg
jbe
lcall
fdiv
add
ja
xlat
jle
adc
repz
sbb
sub
andl
andb
outsl
inc
movsb
cld
daa
jnp
nop
rol
adcl
inc
pop
ljmp
or
sti
lcall
std
rcrl
iret
mov
into
lock
mov
aas
ss
aas
out
add
lods
sub
pop
sub
cmpsl
cmpsl
mov
stc
mov
cwtl
mov
test
and
pop
cmpsl
lods
fistpl
inc
flds
dec
inc
shr
push
pushf
hlt
movsl
mov
and
pop
imul
repnz
xor
addr16
adc
adc
add
icebp
and
arpl
or
pop
or
or
mov
mov
jge
insb
sub
push
sbb
and
pop
push
std
ret
and
push
sub
fnsave
mov
xchg
add
jne
and
adc
dec
mov
nop
rdmsr
nop
sbb
jae
mov
mov
cmp
outsl
xchg
test
lahf
cld
out
pop
in
into
stos
ja
lods
mov
and
pop
fiaddl
xor
arpl
cmpsb
lret
negl
iret
test
mov
pop
loopne
push
or
lret
scas
call
nop
imulb
mov
repnz
mov
pusha
and
xchg
jle
push
andb
jbe
sahf
mov
movsb
inc
sub
pop
sbb
xor
insb
or
jl
cmp
insb
out
inc
cmp
clc
stc
and
popl
mov
sbb
mov
sbb
shll
mov
enter
mov
loop
cli
dec
popa
fiaddl
cmp
and
mov
gs
push
mov
dec
mov
loopne
mov
aad
mov
into
jmp
dec
in
cmc
mov
xor
jno
test
or
jo
inc
mov
rorb
sub
sbb
aam
pop
or
mov
push
sub
sub
dec
jne
es
xchg
push
daa
jns
jno
inc
mov
xchg
les
ja
jp
aas
xchg
popa
call
inc
insl
movsb
outsl
xchg
inc
adc
sbb
push
jecxz
daa
into
lret
rol
insl
xchg
cmp
xor
imul
rcrl
mov
addr16
jae
lds
int
cli
jbe
dec
mov
pop
mov
inc
push
cltd
pop
mov
out
shll
out
test
push
orl
sbb
jne
jb
loope
mov
pop
lahf
mov
ret
mov
mov
cltd
ret
and
mov
dec
mov
fdivs
xchg
mov
icebp
inc
xor
lahf
jae
popf
movsl
pop
adc
je
sbb
cmp
loope
movsl
mov
sub
cld
push
lea
mov
mov
cmp
les
push
cltd
fildl
fwait
cmp
sti
adc
adc
fisubrl
add
jle
and
sbb
cli
arpl
mov
insb
lods
mov
hlt
popf
bound
xchg
adc
jbe
push
scas
pushf
mov
aad
mov
fsubs
mull
inc
lods
loopne
aad
sub
jle
dec
add
addl
les
loop
clc
addr16
jg
addl
fst
fcmovnb
cmp
mov
dec
xchg
scas
lahf
outsb
sub
jecxz
mov
jp
call
addr16
mov
hlt
outsb
or
push
repnz
or
jg
je
cmp
test
je
push
or
and
dec
or
icebp
insl
push
imul
inc
outsl
ret
nop
mov
jno
in
test
cmpsb
shrl
xchg
lret
push
xchg
loop
mov
in
jb
jge
xor
enter
xlat
idivl
push
clc
das
push
sti
pop
divl
or
in
xor
rolb
leave
fwait
stos
int
and
cmp
fwait
cmpsl
and
cmp
dec
xsaveopt
mov
rorb
adc
mov
aas
inc
mov
or
fsubr
lret
pushf
jp
jb
out
test
cld
je
or
push
into
in
stos
sbb
mov
shr
mov
into
inc
in
lods
div
mov
inc
dec
out
insl
xor
mov
pop
stos
push
pop
cltd
sub
or
test
out
leave
ljmp
cmc
sub
dec
and
inc
fisttps
repz
imul
mov
and
xchg
test
inc
dec
sbb
inc
es
push
idivl
push
mov
cmp
pop
inc
test
sbb
mov
mov
mov
lock
inc
iret
push
xchg
push
insb
xor
mov
dec
dec
ret
sbb
mov
aas
dec
add
imul
aas
dec
mov
push
hlt
push
sub
or
lcall
int
mov
or
scas
cmp
mov
insl
and
inc
aaa
push
or
repz
xchg
stc
xchg
aaa
int3
push
lods
jo
mov
mov
and
pusha
mov
sbb
fldenv
cli
mov
or
cmpsb
push
das
cwtl
popf
sbb
lcall
xchg
xor
fwait
test
lods
pushf
xchg
add
mov
loopne
fisubs
sbb
xorb
insb
test
lods
cmp
mov
lds
icebp
ja
xchg
fdivs
and
insb
push
inc
dec
or
push
fsub
cmp
cmpsb
aad
fsubl
lock
mov
inc
fcmovb
adc
mov
iret
cmp
sub
pop
je
sbb
push
notl
rcrl
or
dec
cmpsb
dec
sub
ret
leave
cmp
and
rcll
inc
jl
pop
in
loope
inc
or
sbb
fs
push
mov
lds
fxch
jbe
mov
in
xor
rcrb
cmp
fwait
int
push
pushf
lods
cwtl
pop
add
mov
and
or
push
dec
or
fwait
addl
cmp
inc
push
mov
sub
leave
cmp
dec
dec
jbe
subl
jmp
in
cmp
jae
pop
test
xor
imul
in
fisubl
scas
jo
mov
int3
hlt
imul
sbb
aam
dec
stos
imul
mov
mov
adc
mov
js
je
xor
cmc
xor
push
mov
mov
cmp
push
pop
orl
rcrb
push
fwait
nop
mov
mov
mov
jne
and
pop
mov
cmpb
repnz
cmpb
sbb
lret
inc
push
or
idivb
fists
les
xor
arpl
xor
dec
out
sbb
dec
push
adc
clc
scas
xor
jecxz
insl
or
mov
jbe
sub
dec
pop
jns
or
gs
jb
sbb
mov
ss
xchg
es
test
pop
stos
insb
js
int3
push
mov
stc
int
mov
fstpt
mov
cmp
push
mov
xor
outsb
and
jne
sub
cmc
into
sti
test
movsb
arpl
xchg
add
and
fisubrl
adc
ret
shll
mov
dec
pop
sub
stc
mov
mov
push
stc
lret
sbb
data16
sbb
out
xchg
repz
popa
imul
dec
fdivr
pushf
push
mov
daa
push
push
sbb
addr16
popf
test
add
sub
ret
shlb
arpl
scas
inc
int
ljmp
or
arpl
xor
pop
jle
cltd
mov
add
fbld
mov
mov
add
mov
pop
dec
or
xchg
push
sahf
sbb
pop
daa
ja
pop
rolb
imul
mov
rol
inc
mov
push
ljmp
mov
mov
ja
inc
loopne
jns
mov
push
dec
jp
xchg
cmp
leave
call
fcompl
jne
mov
mov
lret
mov
xorb
mulb
lahf
mov
stc
popl
lock
dec
mov
dec
scas
add
testb
mov
in
divl
pushf
mov
mov
in
mov
jo
in
push
dec
fiaddl
pop
adc
mov
pushf
or
lds
or
stos
mov
fisubs
pop
std
cmp
dec
and
jno
jmp
lds
aaa
jbe
mov
and
xchg
pop
fists
lea
cmp
out
cmpsl
imul
jbe
pop
loopne
out
cmp
adc
hlt
leave
jge
scas
sbb
repz
add
or
fs
shll
in
fmuls
sub
dec
adcb
push
cmp
loopne
or
sbb
jecxz
add
sub
inc
mov
lcall
int
jno
inc
aas
xlat
mov
iret
std
popa
inc
inc
ljmp
popa
inc
loopne
or
push
mov
decl
popf
mov
cld
and
stc
clc
rolb
mov
pop
sub
jg
addb
and
stos
sbb
sarb
outsb
pusha
dec
mov
in
lods
lds
ret
mov
push
addl
push
jmp
push
std
sub
ja,pn
mov
dec
pop
dec
dec
and
mov
adc
ljmp
push
or
xor
lea
out
enter
cmp
and
into
lahf
jno
ss
inc
push
dec
jns
mov
std
pop
aad
fs
test
xor
inc
nop
jb
mov
inc
sbb
stos
dec
xchg
add
or
push
jnp
mov
cltd
lea
add
outsb
scas
daa
fdivs
xor
lcall
in
lret
mov
jp
int3
sub
popa
cmp
pop
inc
sub
jp
jecxz
or
push
cmc
jns
les
add
pop
mov
shl
divb
pop
dec
and
lock
push
or
or
and
add
jo
add
insl
push
cmpsl
and
pop
ficomps
and
jp
popf
adc
push
mov
lods
adcl
fwait
enter
jns
in
sub
es
jae
xchg
repz
in
mov
or
sbb
mov
dec
lret
xor
in
pushf
mov
cmp
add
jnp
dec
cmp
xor
push
adc
jge
inc
cmp
addl
rclb
pop
xor
fisubs
mov
dec
mov
andl
imul
sbbb
sbb
jns
enter
cltd
in
popf
sub
xor
arpl
dec
ror
scas
mov
lea
div
jle
jb
or
inc
xchg
rolb
inc
sub
dec
push
add
inc
or
aaa
fs
cmp
fucomi
or
cwtl
pop
std
mov
mov
mov
mov
pop
stos
push
cmp
mov
add
and
cmc
jnp
shll
pop
aam
outsl
pop
push
sbb
inc
pop
mov
dec
pop
jbe
mov
fisttpl
enter
and
or
mov
mov
inc
adc
cmp
add
pop
sub
push
sbb
cltd
loop
pop
popa
nop
pop
mov
mov
pop
arpl
inc
icebp
sub
jecxz
movsl
loope
pop
cli
aas
mov
dec
xchg
push
and
into
inc
dec
rcrl
mov
mov
neg
loope
or
lea
andb
push
mov
lea
shll
adc
fstpl
inc
mov
pop
push
arpl
das
dec
cmp
sub
pusha
sahf
pusha
pop
pop
dec
pop
test
fwait
push
rcll
push
lret
inc
push
adc
sub
fldenv
hlt
es
ret
cld
cmp
fsubs
mov
adc
lret
jp
roll
ret
pushf
sbb
ljmp
dec
adc
and
xchg
in
cmpsl
and
pop
mov
pusha
jns
repnz
add
adc
push
mov
loop
push
dec
idivb
and
lret
stc
jae
lds
xchg
xor
lds
cmp
push
mov
xchg
ds
sbb
daa
lret
lcall
fidivrl
fbld
bound
add
pop
add
ret
scas
stos
incl
add
lea
mov
mov
cwtl
mov
mov
pushf
sub
in
xchg
sbb
aam
xor
push
shrl
enter
sub
mov
mov
rorl
dec
push
add
inc
xor
mov
xchg
cmp
adc
inc
jmp
xchg
out
movl
sti
mov
nop
pushf
mov
sbb
fxch
sti
mov
fwait
je
shrb
rclb
push
push
or
iret
shll
lods
dec
div
scas
test
or
sarl
shll
push
jnp
je
outsl
out
int3
adc
loopw
scas
out
add
xchg
dec
lea
pop
mov
adcl
jno
outsb
push
xor
gs
mov
dec
nop
mov
imul
fs
jp
mov
fwait
jbe
mov
out
mov
shrl
loopne
rorb
push
pop
int3
popf
cmp
leave
das
cvtpi2ps
test
lds
add
push
aad
es
xor
loope
mov
dec
test
sub
mov
inc
out
push
int3
adc
ret
mov
mov
mov
or
mov
or
fcomps
hlt
jmp
jno
lahf
mov
pop
or
fistps
xchg
and
add
lret
jo
dec
adc
xchg
sbb
lahf
pop
mov
push
mov
and
adc
pop
and
xchg
xor
push
popf
push
in
lcall
aaa
sti
pop
adc
xchg
sbb
pop
gs
out
clc
test
xor
pop
lods
mov
aam
sahf
icebp
cmp
cli
imul
dec
push
in
xchg
jae
xchg
pop
mov
orb
lret
mov
cwtl
fiadds
mov
push
or
dec
inc
and
lock
lea
or
repz
repnz
cwtl
leave
mov
jae
jg
xchg
push
in
mov
inc
and
xchg
stos
jae
cmpsl
pusha
call
leave
mov
loope
mov
xor
pop
in
sub
bound
aam
cli
add
inc
outsb
adc
mov
repz
icebp
in
icebp
rcrb
push
pop
sti
jbe
jb
pop
mov
imul
das
push
shll
lret
aad
mov
xlat
xchg
jp
sarb
jns
sbb
movsl
xchg
xchg
dec
jl
or
outsb
addr16
inc
sbb
scas
popa
in
notb
mov
fisubl
int
out
or
jo
imull
jae
mov
push
xchg
bound
orl
cmp
inc
xchg
mov
mov
jle
cmp
xor
les
sbb
pandn
aam
and
add
bound
fdivl
aas
test
xchg
js
and
cmc
and
jle
mov
cmp
lods
outsb
and
xor
xor
loopne
cmc
stc
ljmp
out
adc
daa
ss
mov
mov
lods
inc
das
mov
jbe,pt
and
cmc
cmp
dec
into
movsb
mov
sahf
xchg
add
pop
popa
mov
sti
pop
pop
or
js
cs
mov
mov
jb
sti
fsubrl
push
bound
dec
dec
or
mov
cmp
sbb
mov
or
addr16
mov
pushf
scas
or
sub
or
cmp
mov
lret
into
cld
fdivp
pop
and
movsb
and
cld
xor
pop
add
repz
sbb
jl
jp
jnp
xchg
jb
mov
jb
xchg
xor
insb
int
nop
mov
imul
rorb
push
pop
insl
movsl
insb
leave
std
pop
sbb
in
adc
rcr
cli
cli
out
cmpsl
mov
jmp
sub
xchg
mov
mov
roll
pushf
cmp
or
sub
mov
repnz
dec
push
xchg
pop
add
push
stos
jmp
or
loopne
js
sbb
loope
scas
das
lcall
in
push
andl
adc
sub
adc
xchg
xchg
or
fmul
stos
jecxz
xor
xor
jle
lods
testb
scas
shlb
cmp
stos
mov
insl
ds
mov
mov
inc
mov
and
lods
push
test
repz
jbe
xor
rcll
stc
add
pop
scas
xchg
jge
divb
sbb
out
data16
outsl
xorl
ret
and
imul
lcall
inc
loopne
repz
out
ljmp
cmpsl
mov
setnp
adc
add
and
jb
jmp
inc
loop
mov
aad
roll
enter
pop
test
xor
add
fnstenv
jl
je
ds
outsl
aaa
jg
movsb
gs
inc
adc
mov
stc
sbb
iret
adc
xorb
cld
ret
ss
or
jl
bswap
xor
pop
lret
sahf
inc
aad
imul
in
jecxz
mov
pop
inc
mov
ds
pusha
sti
jle
xor
ficoms
fnstsw
insl
arpl
or
stos
mov
sub
mov
mov
adc
pushf
push
aad
js
push
out
loop
jl
cld
or
dec
sbb
mov
xchg
pop
and
xchg
out
inc
aam
xchg
rcrl
data16
addr16
mov
xor
imul
mov
rcrl
xor
jbe
loope
sarb
push
mov
test
jl
rolb
inc
dec
push
test
or
aam
insb
and
das
dec
repnz
fwait
pop
std
push
and
in
sbb
mov
mov
js
adc
mov
jno
sbb
push
movsb
jmp
jbe
jns
int
cltd
jl
and
push
mov
ss
test
dec
cltd
rcrb
adc
jecxz
dec
mov
jp
jmp
leave
in
mov
pop
xor
dec
mov
popw
pop
jne
lret
dec
movsl
ds
cmc
push
mov
divl
or
jne
jmp
xchg
pop
jb
dec
imul
mov
and
xor
cmp
mov
stos
lret
ds
ret
mov
aas
nop
pop
xlat
fwait
mov
mov
mov
push
lret
inc
leave
fbld
jecxz
pop
jl
xor
bound
mov
ficomps
pop
add
mov
repz
xlat
sbb
imul
add
pop
fistl
mov
lret
sub
sahf
addr16
mov
orb
jb
lds
lret
inc
pop
push
pushl
inc
js
add
rcrb
mov
jmp
sub
ss
inc
out
aad
pop
inc
sbb
imul
rcrb
xchg
cmpb
or
xor
or
jo
inc
xchg
sahf
jmp
movsb
je
pop
arpl
stos
fwait
aaa
iret
callw
lods
test
sbb
or
sbb
add
adc
setb
jns
fsubr
inc
fsubp
xchg
and
cltd
enter
test
xor
xor
dec
pop
dec
jo
xchg
movsl
mov
sbb
in
pop
jae
hlt
cmp
cltd
loopne
jb
dec
sub
jge
jmp
icebp
add
frstor
jg
je
test
dec
loop
cmp
cmp
push
pop
gs
mov
rorb
roll
and
or
or
push
xor
pop
rcr
dec
xchg
mov
pop
rcrb
lds
jmp
and
or
pop
outsl
xchg
add
pop
js
mov
int
out
sbb
mov
jns
or
mov
clc
in
push
loope
sub
mov
pop
fimuls
cld
enter
mov
mov
pop
dec
fbld
mov
stos
xchg
daa
xor
in
cmp
jmp
cwtl
mov
xchg
mov
adc
push
daa
sub
ret
mov
fst
mov
insb
or
fistpl
push
shlb
fwait
mov
inc
scas
push
nop
cli
sbb
add
jmp
mov
int3
lods
icebp
mov
mov
or
mov
adc
xchg
push
sub
push
fidivrs
xlat
jbe
push
push
loopne
les
mov
adc
hlt
push
push
int
push
jg
mov
data16
inc
test
cmp
dec
loope
packuswb
inc
in
mov
repnz
cmpsb
outsl
or
jp
out
loopne
push
repz
test
adc
loopne
aam
add
je
in
dec
sbb
and
gs
push
sbb
mov
inc
mov
sarb
test
imul
adc
xchg
xlat
add
test
adc
mov
outsb
xchg
cs
out
inc
les
daa
testl
movsl
sbb
sbb
leave
mov
fstpt
ud2
or
in
jns
adc
push
cmpsl
mov
xchg
add
popa
cmp
mov
add
lret
mov
out
out
jg
pop
cli
cmpsl
xchg
mov
push
jp
pop
xchg
or
jl
aas
cs
xchg
mov
inc
ds
and
imul
popa
fcoms
mov
dec
cwtl
sub
sub
dec
xor
mov
pusha
int
into
int3
addr16
add
std
inc
fstp
push
and
jns
adc
jecxz
nopl
mov
iret
orl
jne
ja
mov
out
loopne
dec
cmc
ds
mov
push
out
push
pop
fidivs
cld
sti
inc
mov
sbb
push
cmp
jl
out
flds
fwait
mov
adc
pop
mov
test
cld
lods
aad
and
adc
pop
push
fisubrs
iret
inc
into
cs
sbb
int3
mov
or
mov
fstps
xchg
and
repz
movsl
test
pop
sbb
aad
jno
shlb
sahf
push
jnp
out
in
cltd
jg
test
idivl
dec
out
fldl
js
mov
cmp
xchg
lds
jne
add
adcb
lea
leave
ja
cmp
and
mov
sub
jle
push
aaa
pop
xchg
adc
or
or
aad
sub
adc
sbb
xchg
jbe
cwtl
dec
push
les
cmp
lods
iret
fisubs
fimull
pop
cmp
inc
xor
mov
cli
jmp
push
push
repnz
mov
mov
mov
dec
sub
dec
std
inc
call
fldenv
in
xor
es
pop
leave
inc
sbb
int3
popa
in
out
movsl
sbb
je
jge
or
sbb
lds
shrl
xor
cmpsl
dec
jg
hlt
lahf
icebp
call
in
mov
mov
or
push
scas
xchg
outsb
das
jae
xlat
subl
xchg
adc
dec
dec
mov
add
sahf
shl
mov
or
dec
or
inc
and
out
and
and
ljmp
sub
aas
out
call
mov
xchg
insl
cmp
push
pop
divl
aad
clc
jmp
loope
xor
adc
dec
cmp
and
xor
scas
insl
cltd
or
sub
testl
movsl
ficoml
sbb
and
or
lea
jle
jl
enter
aad
cmp
mov
dec
je
mov
adc
loopne
and
or
mov
push
cmpsb
loop
stos
xchg
lret
pop
pop
cmp
inc
pop
leave
lea
adc
jmp
push
idivl
mov
mov
mov
inc
cmp
and
imul
stc
jle
rorb
xchg
mov
mov
adc
mov
or
mov
es
scas
and
lods
rcrb
aam
shl
in
int3
or
mov
xchg
insl
mov
sbb
cmovnp
out
out
lcall
imull
mov
or
mov
imul
js
movsl
pop
fcmovnbe
dec
rclb
lock
cli
sbbl
es
addl
enter
mov
xorb
fcomps
jge
xchg
stc
mov
loop
sub
mov
mov
ret
jnp
addr16
dec
mov
dec
push
imul
sub
dec
inc
repnz
fsts
push
mov
pop
push
inc
dec
pop
cmp
imul
mov
jbe
jge
daa
rcr
test
xchg
bound
out
pop
shlb
loop
cmpsb
adc
sbb
insb
jle
pushf
in
ljmp
fsubrs
sbb
sahf
and
mov
xacquire
lea
xor
dec
imul
sub
rorl
das
pop
vpshaq
cli
mov
jecxz
xor
push
inc
fnstcw
add
push
xchg
adc
adcl
loop
enter
sti
mov
inc
add
and
int
in
loop
push
pop
jae
cmp
ljmp
add
adc
lea
sbb
xchg
xchg
xchg
jmp
jl
aaa
pop
insb
aam
xor
dec
int3
mov
xchg
ret
jb
dec
cmp
aas
and
and
cmpsb
sub
sub
loope
mov
jg
push
sbbl
jae
lods
test
and
dec
push
mov
insb
push
pop
les
inc
and
ss
mov
push
scas
and
in
push
movsl
sub
data16
movsb
push
sub
pop
ja
dec
inc
lds
popa
and
test
lcall
jbe
add
cld
stos
lret
icebp
sbb
and
pop
test
sub
or
stos
movsl
les
fnstsw
pushf
sub
in
outsb
mov
fimull
xchg
push
cmp
sub
cmp
ret
pushf
les
stos
fcoml
xor
mov
pop
lahf
add
in
orl
cmp
hlt
inc
sbb
pushf
xchg
and
je
or
andb
sbbb
add
or
jmp
clc
mov
repnz
std
ss
pop
sahf
add
adc
ret
pop
pop
adcb
movsl
mov
or
mov
dec
cli
fsubrs
loop
gs
cld
xchg
mov
mov
movsl
sub
xor
clc
lret
pusha
mov
mov
imul
daa
inc
je
sbbb
jns
int
ret
sbb
xchg
rclb
adc
nop
stc
or
jne
inc
ds
fwait
or
ror
and
pop
addb
int
and
and
dec
lea
pop
xchg
pop
stc
pop
lcall
jl
cmp
jns
test
loop
movsl
add
cmpsl
or
dec
fucom
fidivrs
int
fwait
inc
jno
and
or
ret
sbb
or
dec
negb
cmpsl
pop
pop
mov
cmp
xchg
mov
add
adc
push
cld
mov
sub
enter
shl
mov
in
testl
aam
mov
repz
mov
dec
and
dec
adc
xchg
sub
std
fistpl
and
push
ja
fmul
rolb
testl
popf
push
push
xchg
daa
adcb
fistl
movsl
inc
xor
insb
in
jnp
arpl
mov
in
outsb
mov
xchg
pop
andb
dec
push
shl
jne
or
add
mulb
xchg
cli
iret
rcrl
cs
push
cld
jne
insb
mov
jae
int3
movsl
inc
lods
xor
or
int
stos
hlt
inc
cmp
jle
xor
arpl
mov
cmpsb
faddl
jb
sbb
or
mov
adc
xlat
sub
add
xchg
out
jne
pop
adc
test
sub
mov
dec
and
rorl
negl
add
cmpb
std
or
loop
mov
lea
lret
mov
or
xor
movsl
out
aaa
mov
ja
scas
imul
xlat
xchg
inc
push
shlb
or
popf
push
and
xchg
and
xorl
sbb
xchg
pop
mov
into
aaa
jno
dec
stos
popa
xchg
ljmp
add
jge
mov
lods
push
mov
mov
jl
and
and
out
sub
jns
dec
add
mov
scas
or
jae
test
es
ljmp
mov
stos
sahf
xchg
aaa
pop
shll
lret
mov
inc
clc
imul
sbb
clc
fstpt
ljmp
sub
adc
outsl
fnsetpm(287
push
fnstenv
int
out
aad
mov
js
repz
push
dec
das
adc
fsts
rol
pop
mov
sahf
push
inc
mov
cmpb
rolb
and
mov
test
fnstsw
cmc
and
inc
adc
ljmp
rolb
ja
jg
add
mov
mov
xor
adc
or
lret
push
sub
and
add
hlt
call
jo
fstp
push
jnp
mov
xchg
scas
mov
data16
or
jl
or
aaa
testb
aam
jmp
rolb
pop
inc
lcall
xchg
pusha
xchg
pop
pop
xchg
mov
sbb
insb
or
push
imul
mov
aam
jno
jp
adc
cmp
in
cmpsl
idiv
jl
imul
in
shl
lods
loopne
loopne
iret
dec
dec
push
popa
daa
mov
adc
mov
scas
push
lret
lret
sub
out
sub
fildl
inc
sarb
je
jp
cmp
fcmovnb
sub
shrl
mov
mov
push
adc
mov
sub
sbb
repnz
mov
inc
jecxz
mov
sub
mov
adc
pop
sahf
movsl
xchg
dec
sub
sub
loope
mov
scas
and
xor
fsubs
test
mov
push
mov
mov
inc
mov
shl
repnz
xchg
std
das
adc
shll
cmp
fnsave
sbb
inc
xchg
stos
jo
fadds
cmc
jbe
and
pop
push
dec
adc
mov
sbb
mov
and
inc
xor
mov
add
mov
adc
cmp
mov
shl
push
cmpsl
adc
insl
bound
pop
movsl
sub
cmp
es
negb
movsb
inc
out
imul
xchg
hlt
imul
movsb
jae
dec
or
int
xor
pop
inc
mov
lret
xor
push
loopne
cmc
fs
imul
fnstcw
iret
cmpsb
into
sbb
ljmp
dec
stos
mov
lods
sub
fstpl
inc
loope
dec
cmp
sbb
push
les
mov
mov
mov
js
push
clc
xor
jmp
jnp
sub
or
dec
jns
lods
dec
js
mov
pop
xor
das
jge
negl
push
pop
pop
sahf
add
cmp
data16
jle
or
sub
addl
test
mov
loope
lcall
dec
in
call
rolb
lock
fnstcw
push
in
mov
or
push
ja
andl
lea
mov
lock
lea
aas
mov
les
ficompl
fldcw
jnp
lea
test
lahf
jbe
or
or
stos
push
outsl
inc
push
loope
ficoml
sbb
mov
int3
movsb
js
sub
shlb
fimuls
lock
ja
pop
sar
insl
andb
mov
sbb
xchg
jae
mov
pop
xchg
pop
icebp
insb
test
rclb
test
jbe
loop
jmp
jnp
in
jne
mov
mov
inc
xchg
cli
jbe
fcoml
sbb
out
aad
es
out
jno
cwtl
push
adc
sub
sbb
cmpsb
sbb
mov
sahf
and
cmp
popa
inc
leave
sbb
enter
loope
mov
stc
test
ja
into
cmp
mov
divb
mov
iret
aam
stos
out
mov
mov
mov
and
lods
fucomp
push
cmpsl
lret
lret
test
or
sbb
push
loopne
enter
lret
movsw
cmp
sub
xchg
xor
cmp
out
lds
inc
cmp
stc
loop
pop
jae
mov
loope
mov
aas
arpl
adc
fidivrl
mov
mov
dec
adc
xor
pop
adc
lock
pop
sbb
out
aad
mov
mov
xor
sbbl
xor
mov
add
xor
jns
sub
scas
pop
pop
add
mov
mov
popa
add
xchg
fimuls
push
mov
and
rorl
daa
in
loopne
dec
mov
enter
dec
adc
mov
lahf
xor
jnp
cmp
xor
inc
mov
loope
dec
mov
and
mov
push
fcoml
mov
mov
inc
mov
xor
mov
insl
inc
pop
invd
fstps
imul
xchg
xor
jae
pop
pusha
xor
leave
push
mov
inc
and
add
arpl
and
bound
xchg
fnstsw
xchg
sub
jae
dec
inc
cltd
cwtl
negb
push
inc
or
addr16
jmp
lahf
popa
xchg
cmp
xchg
sbb
out
push
sbb
js
int
movaps
test
xor
sbb
das
adc
repnz
je
and
arpl
xchg
aaa
inc
int
js
mov
out
jbe
cmp
jl
dec
sarb
inc
outsl
mov
arpl
mov
ljmp
ret
inc
int
mov
out
sbb
push
pushf
cltd
je
out
jp
cmpw
mov
es
mov
movsl
mov
hlt
mov
mov
xor
or
jecxz
inc
fsubrs
xor
jno
ror
pop
push
mov
dec
das
mov
fwait
push
shll
dec
das
mov
xor
cmp
repz
or
into
cmpl
sub
test
and
cmp
xor
repz
in
shr
fisttps
jmp
push
hlt
data16
cmc
add
jl
out
jl
loop
lahf
pop
mov
pop
das
mov
sbb
mov
aas
mov
roll
xchg
sbb
pusha
dec
jge
loop
sbb
cmp
mov
adc
lods
das
aam
ds
ljmp
test
mov
pop
xchg
push
xchg
sbb
or
xchg
dec
ret
and
into
bnd
fldenv
inc
mov
mov
pop
jne
mov
push
mov
push
xor
negb
stos
xlat
popa
lahf
mov
inc
xchg
or
lret
data16
stos
lock
push
gs
repz
stos
mov
lret
clc
dec
jmp
mov
mov
mov
sbb
mov
mov
ret
fwait
repnz
push
cmc
clc
movsl
lds
lock
mov
fcoml
adc
sbb
lds
pop
gs
pusha
mov
popf
push
mov
xor
adc
imul
out
jbe
mov
enter
lcall
nop
adc
pushf
jnp
inc
iret
xchg
pusha
sbb
adcl
jmp
jno
cmc
cmpsl
jno
cmc
lock
mov
sbb
push
mov
cmp
sbb
daa
and
iret
sbbl
sar
movb
repz
mov
mov
sti
cmc
mov
xchg
mov
mov
cwtl
ds
pop
je
in
decb
iret
call
ljmp
mov
ficomps
add
imul
sbbb
jae
add
fs
push
xorl
shrb
pop
call
in
icebp
shl
and
cli
dec
or
out
or
xchg
std
adc
cmp
or
lcall
lret
cltd
dec
add
mov
mov
xor
sti
cs
pop
aad
xor
mov
lahf
imul
fisubs
adc
daa
idivb
mov
sbb
jae
loop
sbb
add
or
cwtl
push
into
jo
cli
cmova
xchg
psubq
clc
xlat
mov
xor
or
icebp
lret
pop
fnstenv
mov
pushf
sub
sbb
cmpsl
push
sarb
mov
cwtl
adc
mov
aad
jbe
ja
das
leave
rorl
out
loop
xor
iret
push
adc
add
mov
mov
jnp
push
xor
mov
push
aad
add
aam
dec
popf
lds
push
ret
fistpl
in
movsl
pop
sbb
cmp
push
cmpsb
out
aas
mov
call
cmp
mov
mov
test
pop
lods
les
int
shll
loope
or
ror
mov
out
js
xor
jg
mov
stos
in
dec
pop
xchg
mov
inc
inc
shlb
push
inc
push
lock
mov
lods
mov
cmpsb
repnz
fld
add
pop
bound
mov
mov
xchg
cmp
jle
mov
clc
inc
dec
cltd
jb
lea
xchg
out
out
clc
cmpsb
into
leave
or
or
repnz
clc
iret
mov
pop
lcall
jp
cli
iret
pop
lret
adc
jbe
ds
addl
mov
dec
scas
add
sub
mov
inc
xchg
xchg
xrelease
mov
lods
inc
sar
push
xchg
dec
or
push
test
stos
fldl
sub
test
scas
test
ljmp
mov
xor
fmuls
int3
fwait
dec
push
push
cmp
sarb
pop
jae
xchg
out
out
leave
sbb
testb
and
jne
call
sahf
sbb
inc
or
mov
xchg
cmc
sub
clc
out
mov
jmp
and
fcoms
jae
jp
jle
pusha
mov
and
xchg
mov
ret
mov
outsb
pusha
sarl
pop
sbb
lahf
cmp
inc
inc
stos
cmp
jno
xor
or
js
adc
cmp
dec
or
daa
lcall
sbb
ds
sbb
and
mov
add
adc
cmpsl
dec
sub
xor
and
ret
jns
xchg
cmc
popa
not
mov
shl
scas
add
sub
fwait
xchg
cmpsl
mov
shrb
lods
in
lock
arpl
jl
adc
jns
mov
and
or
push
cmpb
mov
sbb
cwtl
lret
jmp
add
xor
movsl
loop
sbb
adc
push
xchg
sub
inc
inc
lahf
mov
rcrl
mov
stos
mov
mov
xlat
sar
cmpsl
xchg
pop
jbe
pop
inc
xor
adc
sbb
leave
mov
leave
sbb
sub
idivb
iret
inc
jo
xchg
push
jae
call
or
scas
mov
je
pushf
ret
jmp
testl
xchg
fstpl
mov
mov
popf
addr16
inc
inc
or
inc
or
ret
scas
dec
inc
sub
mov
loope
test
cltd
sub
out
lds
out
in
pushf
sarb
out
jno
in
jb
mov
test
pop
sti
xor
sbb
loopne
sub
js
jl
test
mov
cmpsl
mov
jb
in
cmpsb
cmp
cmp
or
xor
push
mov
cvtps2pi
adcb
jnp
adc
push
stc
pop
jle
xchg
push
loope
adc
mov
pop
xor
test
add
pop
jecxz
mov
cwtl
jecxz
repz
cwtl
ficomps
movsl
out
mov
xchg
dec
jb
xor
fstpt
movsb
push
add
fistl
int
or
arpl
mov
add
dec
arpl
jb
push
xchg
xchg
adc
mov
sti
pushf
lods
push
mov
cmp
mov
arpl
and
jo
stc
adc
mov
jle
mov
int
adc
je
push
ret
out
pop
popf
outsl
push
xor
out
xor
dec
cmpsb
cli
iret
add
push
inc
inc
inc
lahf
pop
daa
xchg
pop
jo
push
xor
mov
test
jecxz
rcrb
cmpsw
test
adc
or
stc
inc
arpl
mov
lahf
pop
outsb
arpl
pushf
mov
es
fidivrs
mov
std
add
dec
sti
dec
push
sbb
aas
xor
sahf
jle
sbb
mov
imul
imul
or
mov
and
aas
sbb
sub
into
aam
add
cwtl
inc
cmpsb
mov
mov
shrl
movsl
mov
dec
mov
fs
cli
add
lahf
and
int
jo
repz
fsubrl
shll
ja
add
out
sbb
stc
inc
movsb
adc
or
inc
aas
adc
push
pop
mov
std
pop
mov
out
mov
das
sbb
pop
jl
push
cmp
in
cmp
in
xchg
or
xchg
cmp
es
xchg
cmp
push
imul
outsb
adc
sub
loopne
push
jle
jl
lds
mov
push
xchg
sub
icebp
popf
stos
and
jg
orl
pop
les
stos
pop
sbb
xchg
push
mov
test
popa
xchg
mov
fstpl
enter
rcl
testl
fmul
movsb
fwait
jge
push
sub
xchg
mov
pop
pop
adc
adc
movsl
or
int
stc
push
adc
imul
inc
mov
imul
in
icebp
mov
push
ret
cltd
mov
test
push
inc
cmp
lret
and
loope
ljmp
daa
pop
jg
stc
mov
pop
mov
sub
cli
jb
mov
sarl
lods
imul
popa
scas
xor
pop
push
and
mov
imul
ficoml
negl
xor
in
outsb
out
and
mov
add
sub
dec
and
insl
enter
jp
arpl
rolb
je
inc
in
frstpm(287
cmp
dec
pop
cwtl
or
out
loope
xchg
cs
push
fnstsw
inc
jmp
jmp
sbb
jmp
dec
cmp
das
push
add
push
jae
divl
mov
ret
ljmp
or
push
pop
push
dec
xchg
lcall
imul
xchg
inc
jp
lret
push
mov
fnsave
loop
or
pop
fsub
ds
xor
stos
mov
sub
call
push
in
lock
cmp
push
mov
sub
lds
jae
pop
ficoml
sub
jle
in
xchg
movsl
jecxz
div
sub
sarb
push
xchg
out
fistpl
and
icebp
xchg
movsl
fisttps
imul
pusha
bound
cmpsl
jo
sub
decb
jecxz
lods
add
pop
mov
data16
sbb
fst
pop
jg
push
mov
inc
pop
cmp
in
jle
mov
outsb
pop
ds
xor
cmp
lahf
xorb
xchg
mov
xchg
shll
push
rorl
or
mov
mov
push
and
xchg
jno
fadds
pop
cltd
int
cmpsb
push
push
add
in
rolb
xchg
mov
filds
es
test
das
daa
repz
cli
daa
sub
jle
test
cmp
xor
mov
fiaddl
inc
movsb
jo
mov
mov
push
jg
push
sub
mov
cmp
shr
pop
push
dec
lcall
pop
xor
xchg
shll
sbb
push
sbb
push
mov
shrb
pushf
dec
lcall
mov
outsl
arpl
xor
pop
pushf
out
jns
pop
jecxz
shll
or
dec
sbb
test
xchg
mov
mov
mov
dec
jb
std
clc
sbb
inc
inc
sub
lods
push
rdmsr
insl
add
adc
jb
cmp
jb
jns
stos
call
push
adc
pop
xor
iret
sub
mov
xor
lods
mov
sbb
fsubl
xor
jl
inc
and
sub
adc
repnz
stos
jo
in
ds
or
mov
testb
sarl
daa
pop
das
fcmovu
and
rcr
pusha
mov
outsb
sbb
xchg
inc
nop
dec
jg
fcompl
dec
gs
inc
or
pop
push
xor
push
aas
movsl
pop
fwait
cwtl
xorb
mov
aad
jle
sub
sub
dec
cli
mov
push
adc
and
cld
inc
test
add
out
scas
sti
xor
sbb
jns
dec
inc
jae
add
xor
movsl
mov
xor
dec
pop
mov
xlat
movsl
repz
mull
push
sarb
daa
pop
lahf
sub
sub
jo
je
negw
and
testl
push
sbb
adc
xor
cmc
ret
jno
fldcw
loopne
scas
outsb
pop
add
scas
lods
add
mov
sub
adc
pop
inc
jge
daa
xor
or
cmp
inc
cld
jno
pop
pop
fisttps
lret
or
sub
lds
jns
jg
dec
mov
cmp
and
bswap
fadds
aaa
mov
or
outsw
jecxz
rcl
daa
dec
cwtl
cmp
push
xor
dec
cmc
inc
inc
mov
idivb
dec
xorl
stos
pop
jp
sbb
cmc
call
add
mov
or
cmpsb
les
or
xchg
fnsave
or
das
cmp
push
pop
ret
dec
js
jo
mov
or
inc
and
inc
inc
add
xor
or
ret
xchg
icebp
xchg
xchg
xor
sbb
nop
dec
movsb
test
cltd
stos
bound
lds
stos
adcl
out
xchg
inc
rcr
sti
fwait
or
pop
jbe
repz
mov
adcb
push
add
jl
in
fsubrl
stc
lcall
jge
in
vpmadcswd
add
xchg
fwait
dec
jbe
add
out
clc
orl
aas
test
testb
clc
or
push
adc
push
mov
sahf
jp
fcoms
pusha
adc
and
jecxz
jb
sarb
out
cmp
into
in
int
jno
sbb
xor
cmpsb
je
add
cmpsl
insl
leave
leave
push
loope
cmpsb
je
lea
jb
mov
pop
xchg
mov
in
dec
les
sbb
inc
dec
cmpl
ds
pop
dec
loopne
je
insb
mov
xchg
jle
inc
mov
push
push
sub
in
jecxz
mov
cmp
test
or
mov
adc
idivb
popf
mov
out
jg
scas
adc
mov
mov
xor
mov
cld
mov
stos
mov
inc
sbb
neg
lds
mov
mov
adc
pop
inc
addb
and
jb
lcall
fdivrs
inc
or
mov
insb
divl
lds
push
cmp
inc
clc
scas
inc
enter
test
or
imul
push
out
cmpsb
adc
inc
ljmp
lds
mov
or
inc
mov
mov
jmp
cmp
dec
repnz
xor
mov
adc
ret
aad
mov
cmp
adc
dec
movl
je
cmc
xor
jno
push
js
push
dec
outsb
daa
cmp
testl
jmp
call
adc
and
jmp
mov
call
popf
sub
push
xor
cmp
mov
test
aaa
add
iret
sahf
dec
xor
les
dec
mov
add
or
sbb
ret
ret
mov
sahf
popa
int3
pop
mov
and
adc
in
in
inc
pushf
sbb
es
ds
lcall
jbe
mov
push
inc
out
imull
sbb
and
out
loopne
lret
and
adc
mov
mov
dec
jb
push
add
cmp
jl
xor
sahf
xor
clc
jae
fdivl
and
jns
lcall
push
sahf
out
ljmp
and
dec
xor
shl
and
into
mov
out
sub
inc
jbe
inc
aad
mov
push
adcl
ljmp
jg
inc
pop
xor
js
bound
pusha
rol
xor
jle
out
mov
arpl
adc
adc
cmp
orb
faddl
adc
pand
test
jne
gs
faddl
shlb
jne
dec
mov
xchg
call
mov
push
arpl
mov
fisubl
xchg
xchg
jo
cld
scas
repnz
sbb
addr16
inc
rcr
shll
pop
xchg
setle
mov
inc
divl
enter
sahf
add
dec
or
cmp
and
sub
cmp
xchg
out
or
cld
sub
push
xchg
xchg
ret
fldl
int3
popa
inc
add
roll
xchg
pushf
mov
xchg
ret
inc
shl
adc
cld
fisubl
fs
cmp
inc
movsb
sti
je
inc
fcoml
adc
addb
and
jne
rcr
lcall
icebp
or
and
stc
push
das
pop
and
pushf
cmp
notl
push
repz
mov
add
or
dec
cmp
mov
fdivrl
pop
scas
daa
and
sti
pop
loop
popl
mov
data16
push
je
xor
fcoml
pusha
cmp
and
hlt
jle
jecxz
movsb
movsb
shlb
cmp
out
in
xor
sub
jmp
aaa
movsl
leave
das
test
hlt
lret
add
pusha
push
lcall
xor
in
pop
push
shll
jecxz
fiaddl
sub
fsubrl
jle
xchg
inc
roll
testl
dec
in
insb
test
and
pop
cmp
push
xor
push
jnp
pop
es
cld
rcl
mov
jno
jecxz
cltd
addr16
sbb
cmp
ror
mov
in
daa
cmpsl
and
inc
lret
cli
or
sbb
inc
mov
or
popa
xor
or
xchg
loopne
fistpll
dec
sahf
addr16
jne
inc
fstpt
aas
lahf
sarb
movsl
mov
movd
fcompl
xor
xor
pop
pusha
dec
add
jne
outsb
pop
xchg
lcall
pop
jg
and
pop
sub
adc
out
sub
dec
mov
or
jbe
fcoml
arpl
add
inc
pop
xorl
xor
jnp
std
insl
mov
lcall
mov
popa
sbb
pop
out
imul
cmp
pushf
xor
push
mov
test
push
jb
jbe
xchg
or
and
mov
outsl
stos
cmc
inc
movsl
imul
add
stos
pop
scas
add
cli
jecxz
sbb
mov
xchg
or
scas
sbb
or
push
or
fwait
jg
clc
or
jg
sub
jbe
lods
lahf
shll
aam
pop
adc
push
divb
dec
idivb
sbb
and
popl
out
stos
data16
xchg
or
neg
or
inc
testb
adc
jmp
scas
fwait
cmpsl
xchg
nop
sbb
sub
inc
data16
or
xchg
xor
xor
adc
std
pushf
pop
mov
test
scas
test
scas
fmul
push
jg
push
ficoml
data16
xor
dec
adc
jle
aas
adc
and
jo
sub
push
pushl
rorb
out
push
sbbb
dec
jg
pop
insb
outsl
inc
ret
pop
pop
imul
xchg
adc
and
xor
iret
imul
sbb
mov
cmp
lret
andb
pop
inc
ret
jb
mov
lret
mov
inc
pusha
dec
in
pop
ret
push
shr
out
xchg
test
test
insb
jno
ss
pop
add
outsb
sbbl
xchg
lods
gs
decl
pop
mov
fcoml
shr
cmp
scas
fildl
decl
mov
jns
sub
ret
mov
xorw
adc
pop
test
lods
loope
cmp
pop
jnp
cmp
xor
jns
pop
in
push
mov
scas
pop
fnsave
iret
dec
push
jo
jle
adc
into
jl
loope
lret
dec
fucomi
call
and
inc
jmp
cmp
inc
dec
xorl
lods
nop
pop
sub
in
sbb
sbb
cs
aas
jge
pop
and
lods
adc
fistpl
push
mov
xchg
cmp
inc
and
out
imul
mov
out
das
push
push
xor
pop
push
adc
popf
xor
add
and
xor
jmp
or
roll
jge
loop
dec
hlt
dec
mov
scas
pop
dec
pushf
dec
pop
fwait
mov
insb
in
ret
sbb
sbb
jno
outsl
in
in
jno
int
rcrb
xchg
adc
dec
jbe
dec
mov
popf
adc
mov
xor
inc
stos
jae
add
pop
shrl
mov
mov
dec
imul
in
inc
cmpb
dec
jno
stc
push
mov
mov
pop
pop
push
loop
mov
notl
lret
cmp
add
or
test
jmp
mov
xor
push
es
pop
xchg
dec
xchg
xchg
lock
adc
inc
dec
in
idivl
dec
fcomp
dec
popf
push
mov
jge
icebp
inc
std
and
call
xchg
mov
mov
fidivrl
fistl
xchg
movsl
sbb
int3
cmp
lret
enter
push
les
insl
mov
inc
ss
int
xchg
ljmp
push
leave
dec
cltd
push
or
nop
loope
push
adc
in
sahf
push
add
add
popf
mov
inc
mov
adc
and
adc
aas
xchg
sbb
fadd
arpl
inc
arpl
mov
mov
sti
dec
cmp
sbb
outsb
xor
test
mov
in
xchg
loop
out
and
int
call
std
aaa
pop
out
popf
jecxz
cld
mov
sbb
insb
dec
pop
rcll
xor
iret
sub
cmpsl
pusha
shlb
adc
xor
stc
jns
cmpsb
pop
mov
sub
dec
outsl
pop
jno
sbb
and
mov
shl
iret
push
inc
stc
xchg
jbe
je
push
jnp
pop
mov
pop
fwait
xchg
sti
insb
or
xlat
or
xchg
fstpl
dec
dec
pop
jnp
in
fidivrs
mov
dec
mov
addr16
add
loop
mov
push
mov
add
pop
scas
or
and
fidivrl
loop
xchg
cmpsb
imul
bound
cld
cli
fcomps
test
dec
faddp
shr
addr16
cli
mov
ss
xor
insb
inc
ja
lret
out
std
cmc
int3
ret
xor
push
inc
mov
popa
jno
xor
xchg
xchg
repnz
jl
fucomp
leave
pop
xor
out
fdivp
repz
mov
sbb
lock
movsb
xor
xchg
and
push
adc
vmwrite
mov
iret
in
add
aaa
cmp
pop
mov
ret
adc
shrb
sbb
fsts
jnp
fwait
shlb
dec
adc
sbb
push
sbb
sub
insb
add
into
push
stos
mov
and
inc
ret
adc
jge
cmpsl
push
dec
sbb
mov
jo
movsl
sbb
clc
aam
push
aad
add
aaa
arpl
mov
mov
sbb
xchg
mov
mov
cs
aas
inc
sub
push
xor
iret
jns
fadd
and
push
jmp
andl
iret
mov
add
int3
or
cmp
ret
ja
mov
mov
sti
inc
sbb
adc
popf
loop
add
dec
or
xchg
push
sub
xchg
cld
jl
sbb
jle
jne
pop
cld
mov
mov
add
stos
mov
popf
scas
in
sub
push
mov
dec
mov
sbb
mov
xlat
mov
mov
sbb
lcall
xor
jo
dec
hlt
les
test
adc
sub
lods
out
jbe
pop
test
repz
mov
mov
dec
adc
aaa
push
addl
xchg
jecxz
pop
xchg
jl
cmpsl
addb
fisubl
aad
aas
pop
sahf
test
fwait
cmpsl
rcrl
fldl
je
adc
xor
imul
cmp
dec
aad
push
in
and
push
xor
jle,pn
test
fidivrl
ja
sub
int3
adc
stos
orb
cmp
inc
jbe
sub
enter
mov
imul
loope
and
mov
pop
ljmp
pusha
mov
enter
jbe
shlb
xchg
mov
jnp
add
ja
addb
jno
hlt
pop
insl
mov
sub
pop
iret
push
sub
xchg
push
mov
xchg
jno
into
out
adc
xchg
daa
mov
xor
test
adc
xor
aas
adc
adc
sub
push
cmp
or
imul
sarb
cmp
push
bnd
pop
daa
andl
bound
cmp
lock
push
je
sbb
pop
jb
cli
sub
pop
sub
or
mov
inc
xor
rorl
icebp
mov
test
mov
lods
inc
fs
sub
loope
push
sbb
mov
ljmp
cs
jmp
imul
subl
xor
cltd
outsl
arpl
push
jle
dec
and
cwtl
mov
pop
sbb
fdivrs
xchg
dec
jb
dec
fdivr
pop
sub
cmp
das
push
sub
aam
xchg
push
shl
outsl
insl
ljmp
mov
pushf
jnp
jle
pusha
js
or
and
and
inc
stos
and
mov
clc
ljmp
inc
xor
mov
mov
xor
jl
push
testl
fsubrs
sarb
iret
push
popf
lods
xchg
in
lock
sbb
in
pop
mov
push
scas
pop
movsl
push
xor
sbb
cmpl
repnz
outsb
sbb
sar
sbb
aaa
xor
lret
ja
pop
ret
xor
jo
xchg
pop
test
addr16
lods
mov
jg
dec
push
aad
pop
fimull
mov
sbb
pop
fidivl
pop
outsb
adc
sbb
icebp
sub
mov
push
loopne
adc
mov
add
lods
dec
inc
test
lcall
xchg
int
jb
cmp
mov
stos
imul
mov
repz
cmp
xchg
lods
ja
movsb
fwait
mov
dec
mov
lods
repnz
inc
push
shlb
aaa
push
scas
push
ja
sbb
sub
mov
mov
dec
test
push
jp
in
push
add
mov
std
mov
shl
push
sub
xor
jae
int3
aad
bound
test
jbe
push
or
cs
ret
jae
sarb
cmpsb
and
mov
push
sbb
ror
fst
pop
mov
mov
mov
imul
fsubrl
aad
fnsave
pushf
push
push
ljmp
fwait
fs
push
jl
mov
cmc
test
inc
imul
fidivl
cmp
add
mov
iret
jb
cmp
xchg
push
jnp
bound
mov
lret
adc
shll
inc
rcrl
fwait
cmp
addr16
into
ret
mov
lods
xchg
fdivrs
movsb
xchg
mov
fmull
jnp
outsb
xchg
pop
or
stc
sbb
mov
mov
push
mov
mov
es
pushf
repz
pop
mov
jmp
pop
out
push
mov
sbb
push
scas
add
ret
lret
pop
xchg
fwait
mov
lea
pop
pop
xor
and
cmp
in
xlat
sahf
cmp
or
lcall
sar
xchg
rolb
jecxz
test
and
sbb
sbb
cmp
iret
cmp
mov
push
mov
test
inc
gs
sub
push
adcl
div
xor
jle
mov
fcompl
dec
inc
lret
add
mov
mov
cmp
xchg
cmc
outsl
cmp
in
inc
push
push
mov
xor
mov
cld
or
cmpsl
popf
inc
add
jp
leave
push
dec
mov
jl
jno
lret
mov
mov
fwait
mov
mov
jbe
rcrb
jp
lds
push
cmp
or
cmpsl
dec
adc
test
insl
sti
xlat
mov
js
fisubl
sbb
lahf
mov
sbbb
sub
pop
ljmp
loopne
adc
fidivrs
sti
xchg
mov
in
mov
popf
pop
cmpsb
dec
lret
cmp
push
mov
insb
std
jle
add
mov
lahf
addl
xchg
xchg
cwtl
stos
mov
je
sub
aaa
mov
notb
adc
xor
push
jnp
icebp
pop
call
aad
jbe
subb
mov
push
or
mov
fimull
sarb
add
pop
fdivs
daa
inc
arpl
stos
icebp
sub
mov
mov
and
push
xchg
ljmp
jg
lods
ja
rcrl
mov
in
lret
movsb
sub
lods
lahf
and
cltd
pop
lock
or
mov
cltd
out
pop
inc
or
call
out
aaa
jbe
decb
std
add
loope
or
rcr
xchg
sub
ds
add
test
loop
dec
mov
js
testl
jg
fstpl
mov
jo
in
daa
repz
insb
fs
popf
ret
insb
pop
test
push
ja
ror
push
scas
inc
popa
sub
cmp
pop
mov
sbb
cld
scas
pop
mov
mov
mov
outsl
mov
inc
add
aad
add
lret
out
inc
jnp
dec
stos
xchg
mov
int3
in
push
enter
mov
negb
adc
jg
jge
pushl
loop
out
jnp
loop
out
push
daa
decl
pmaddwd
sbb
inc
jbe
and
push
lahf
inc
dec
jge
push
or
in
mov
insb
filds
enter
mov
or
je
sbb
adc
rolb
mov
push
fucomip
aas
sahf
push
pusha
mov
out
or
fsubs
iret
lret
test
inc
jecxz
add
fwait
es
add
cmp
fwait
enter
jnp
sbb
xchg
popf
cmp
mov
mov
dec
and
xchg
sub
push
lret
mov
out
xchg
sub
lea
inc
popa
jl
sbb
out
inc
inc
cmp
cmc
mov
adc
je
inc
jns
arpl
adc
rol
rorb
xor
mov
pop
push
stos
mov
add
lahf
mov
ss
test
nop
xchg
dec
in
mov
ljmp
mov
jno
jb
movsb
mov
out
pop
mov
mov
push
clc
leave
xchg
dec
dec
xor
mov
push
push
mov
cmc
dec
xchg
push
hlt
insl
adc
mov
pop
stos
pop
lea
xchg
cmp
dec
mov
out
inc
cli
mov
jae
xor
iret
insl
mov
sub
jp
pushf
shlb
inc
sbb
aas
mov
out
mov
or
mov
test
fsubs
push
sbb
fiadds
icebp
lea
or
inc
fscale
fistl
roll
jl
inc
push
cmp
lds
xchg
rcrb
icebp
and
ja
rorb
and
imul
add
bound
pop
sbb
mov
imul
push
fldt
mov
mov
cmp
sbb
xchg
rcll
jecxz
int3
out
mov
xchg
stos
jp
or
ja
rclb
push
ficoml
test
jmp
cmpsb
mov
push
xchg
or
adc
and
sbb
lock
mov
mov
pop
repz
and
and
push
push
dec
mov
xorl
and
lods
mov
dec
les
in
add
push
mov
negl
leave
cltd
jecxz
mov
push
in
push
dec
xor
dec
add
add
ret
sahf
int
push
filds
out
fidivrl
ficoml
out
or
sbb
insb
mov
hlt
push
lods
and
pop
lods
ss
inc
xor
mov
pushf
icebp
in
push
ja
dec
out
push
cmp
and
fst
mov
and
push
pop
in
and
cwtl
xor
xor
icebp
mov
push
adc
int3
out
push
inc
cld
jno
in
and
jo
dec
or
fsts
jno
sbb
scas
inc
push
jnp
mov
xor
insl
shrb
mov
cmc
dec
aam
sub
in
push
pop
in
daa
sbbl
push
xchg
aaa
popf
push
mov
jecxz
ja
mov
inc
daa
aas
test
jae
jle
jne
add
push
shl
mov
xor
push
xchg
es
mov
mov
bound
scas
adc
xchg
ret
xor
xchg
mov
sbb
int3
aad
inc
push
cs
pop
ljmp
lea
sbbl
popa
pop
adc
test
mov
sub
popf
dec
test
mov
mov
gs
lahf
roll
out
rorb
shll
jp
outsb
or
popf
je
enter
cmpl
test
dec
test
fsts
rclb
lcall
testb
and
cmpb
sbb
pop
cli
push
ficomps
popa
jle
and
in
es
jae
fidivl
into
xchg
push
iret
arpl
pop
scas
in
xchg
mov
fwait
xchg
jecxz
rolb
out
scas
test
int
and
out
pop
inc
and
nop
cli
loopne
shr
xor
sub
lcall
adc
mov
mov
stc
inc
sbb
xchg
pop
pop
cmc
sbb
jp
sti
test
xchg
inc
popa
mov
imul
sub
jle
push
fimull
xchg
mov
fs
in
out
shll
lds
dec
pop
fnstcw
push
lock
xchg
pop
lret
or
pop
adc
or
inc
cld
mov
xor
ficompl
mov
mov
jae
arpl
clc
cmp
push
pop
int
push
mov
mov
cs
das
jg
push
insl
cli
mov
pop
repz
cmp
xchg
jmp
insb
jbe
cmpl
int
fidivrl
icebp
xchg
addr16
adc
and
and
sbb
push
jne
mov
push
mov
jle
dec
dec
pop
and
mov
lret
sbb
jbe
xor
dec
data16
aam
fwait
cli
into
sbb
xchg
int3
mov
or
psrld
jb
or
ret
xor
pushf
add
jp
outsb
push
mov
ret
fiaddl
lods
rorl
movsl
xchg
xchg
leave
jns
bound
jp
push
enter
inc
enter
pop
mov
subl
xchg
jle
sbb
sub
jb
pop
mov
gs
mov
adc
aad
lds
mov
xor
jmp
sbb
hlt
push
sti
push
iret
cmp
pop
or
stos
adc
pushf
mov
push
lods
mov
dec
pop
mov
or
pop
and
add
and
cmp
fdivrl
cld
lcall
mov
sub
xchg
mov
jae
fcomi
mov
shll
in
mov
sub
es
loop
addr16
sbb
mov
jge
fcmovb
cld
int
das
clc
insb
pop
cmp
or
jecxz
fnstcw
or
and
pop
gs
jbe
fimuls
aas
sbb
sub
adc
or
fs
mov
rclb
lret
pop
mov
dec
add
dec
stos
jp
shlb
mov
xlat
push
scas
or
mov
xchg
cmc
jmp
lcall
jg
mov
push
in
dec
je
in
stos
push
mov
pop
stos
gs
dec
std
xor
bound
jnp
ret
lahf
test
jp
lahf
push
mov
xchg
ret
push
es
pop
int3
xor
jne
mov
std
je
stos
outsb
les
es
sahf
xchg
mov
xor
out
add
stc
fdivrs
sahf
and
inc
mov
stos
cltd
out
push
ret
outsl
outsb
roll
into
rcr
stos
shl
mov
aas
fs
pop
scas
sbb
movsb
out
leave
fisubs
mov
mov
sub
jge
push
loopne
or
cmp
in
cmp
and
jg
dec
or
mov
mov
pop
and
push
arpl
mov
lret
push
cmp
pop
dec
jne
je
or
or
ror
mov
daa
sbb
pop
loopne
ljmp
bound
jecxz
aam
cwtl
fwait
shlb
adc
xorl
push
mov
icebp
push
sub
dec
pop
int3
jp
ljmp
pop
cli
mov
fldt
aas
sbb
xchg
sub
mov
mov
inc
lock
mov
sbb
cmpb
push
outsb
cmpsb
mov
inc
sahf
sbb
inc
call
fisubrl
das
mov
js
xchg
fnstsw
gs
movsl
negb
push
popf
rcrb
or
and
push
jns
add
mov
inc
add
adc
or
rol
clc
gs
push
and
or
mov
mov
dec
mov
lods
adcl
lock
movsl
aam
push
cmpl
test
repnz
rorb
test
sbb
mov
icebp
mov
dec
jl
xchg
or
cli
scas
fcompl
daa
js
inc
imul
out
mov
pop
aad
mov
dec
addl
or
inc
xchg
in
jns,pn
xchg
pop
mov
cmp
es
sbb
xchg
xchg
pushf
mov
pop
roll
ljmp
in
jge
mov
xchg
pop
cmpsb
fistl
hlt
and
xchg
lret
divl
push
imull
adc
mov
push
cmc
ficompl
mov
je
out
into
sbb
inc
push
xor
clc
jle
push
clc
push
pop
loopne
xor
lods
add
pop
pop
sub
lea
mov
adc
mov
stos
xchg
inc
inc
fildl
or
aad
add
movsl
adc
fldcw
scas
sbb
iret
pop
xor
imul
adc
mov
dec
ds
inc
cmp
not
xor
push
test
fsubrl
mov
orl
aas
and
rcr
xchg
and
mov
lods
les
mov
mov
xor
push
dec
push
movsb
pop
inc
mov
cmp
les
or
mov
mov
add
sbb
xchg
mov
scas
or
fwait
cld
adc
jb
andl
add
push
xor
and
xor
jg
scas
in
jnp
test
and
or
test
mov
dec
iret
mov
out
and
outsl
xor
push
jae
or
int3
das
push
dec
dec
fistpl
arpl
sbbl
stos
test
or
xorl
xor
in
inc
hlt
cmpb
mov
inc
mov
mov
test
rdseed
jecxz
out
sbb
push
mov
test
sbb
sub
push
lods
repnz
cs
jmp
xchg
rcrb
sbb
movsl
mov
test
adc
mov
sahf
xor
lods
shrb
out
sbb
test
push
mov
orl
cmpl
cmp
mov
cmpsl
aas
sub
inc
inc
mov
les
test
cmp
jp
mov
mov
movl
test
call
fucomip
lods
sbb
insl
notb
stos
jmp
mov
xchg
fst
and
aad
adcl
cmp
push
movlhps
push
mov
xor
les
sub
push
ds
sbb
sbb
rorl
scas
scas
test
imul
test
jg
sbb
das
pop
jmp
test
push
clc
mov
jl
ret
das
imul
sbb
mov
adc
flds
add
lods
cmpsb
and
add
dec
dec
and
aam
pop
jmp
adc
inc
xchg
lea
sub
cmp
cltd
outsl
ljmp
jmp
stc
rcll
hlt
jbe
kmovw
bound
xchg
xchg
and
loope
push
loopne
scas
leave
push
add
ret
pushf
jno
outsb
jns
pop
adc
xchg
inc
jbe
scas
bound
pusha
rcll
mov
out
jbe
lock
mov
sbb
or
fdivs
lret
and
shr
test
lret
outsb
ds
lcall
jb
cmp
je
adc
dec
fwait
stc
fcmove
sub
jbe
or
fistps
or
addl
repz
in
fcoml
and
jnp
fs
fcomps
add
mov
jno
lret
notl
push
std
pop
cmp
pop
pmovmskb
hlt
lcall
pop
out
add
cmpsb
and
aas
fcompl
sub
mov
dec
shld
jo
icebp
xchg
rorb
pushf
shll
fldt
cmpsl
inc
mov
ja
das
fsubs
jmp
xchg
fwait
jne
mov
push
ficomps
test
pusha
and
js
mov
arpl
stos
add
sahf
jb
jp
pop
aad
and
out
fnstsw
loope
in
add
test
push
shll
jae
in
popa
test
sub
dec
pop
jecxz
jg
aas
xor
pop
daa
adc
loop
rcrb
lcall
fnstsw
mov
adc
xchg
scas
xor
ljmp
icebp
inc
push
rol
push
je
xlat
clc
test
sbb
xor
adc
jae
add
fs
mov
out
rolb
push
repz
mov
mov
call
mov
imul
popa
xor
enter
fnsave
dec
cmp
orb
roll
mov
repnz
jnp
dec
jge
stos
sbb
sahf
sbb
fisttps
adc
sbb
mov
cmp
loopne
dec
repz
jle
jbe
out
in
out
push
lahf
sbb
xchg
aam
fdivrl
cmp
shl
jge
jbe
mov
adc
add
movsb
cmp
jg
adc
xchg
xor
mov
ja
mov
sub
xchg
add
cmp
cld
cltd
xchg
push
push
or
test
nop
mov
mov
xchg
imul
mov
inc
loope
mov
xlat
stos
cltd
addb
sbb
cmp
test
xor
mov
movsl
mov
mov
cmp
jge
or
scas
je
and
lret
sub
fs
icebp
and
cmp
cmp
dec
ror
mov
cmp
sub
aas
add
out
fisttpll
and
scas
stos
movsb
add
push
add
sbb
push
jle
nop
xor
aas
stos
dec
js
js,pn
push
stc
xchg
call
xchg
cmp
sahf
popa
xchg
add
add
cli
xchg
ret
cmp
mov
fcoml
js
imul
and
loopne
out
bound
ror
insb
pop
adc
sti
pop
icebp
xor
mov
aad
daa
push
xchg
jne
jmp
in
icebp
mov
or
test
add
imul
inc
fimull
jge
ret
xor
ss
shrl
add
jp
daa
lock
in
xor
das
xchg
outsl
fmull
sarl
inc
xlat
mov
out
je
jmp
movsb
lret
cmp
pop
adc
sbb
mov
sub
mov
dec
adc
adc
int3
das
ficomps
in
pop
out
push
jne
popa
pushf
push
divps
jp
pop
xchg
and
mov
mov
sarl
xchg
xchg
xor
jne
add
xor
es
cli
adc
imul
mov
shlb
sbb
lret
mov
lret
addl
mov
lahf
ds
pop
mov
js
andb
push
int
dec
aam
into
in
lret
inc
lock
icebp
popf
or
pop
fbstp
xchg
or
push
pop
fwait
cld
rolb
imul
bswap
add
push
iret
jo
std
dec
push
fistpl
orb
sbbl
bound
jo
mov
cmp
cmpsl
fs
insl
nop
in
cmp
icebp
lea
mov
xchg
outsl
loope
push
scas
jp
pop
cmpsl
fmull
scas
pop
mov
lods
pop
aas
addr16
mov
sub
xor
lods
not
sbbl
data16
cmp
popa
pop
pop
sbbl
imul
outsb
sarb
pop
add
lret
push
xchg
adc
sub
inc
pop
sbb
pop
nop
aad
repz
and
mov
mov
mov
bnd
in
jae
and
fsub
aad
mov
pop
data16
sbb
jp
shl
pop
lods
mov
test
popa
lods
adc
stos
add
push
rcr
outsl
fimull
mov
lcall
adc
sub
jmp
push
adc
fcmovnbe
fs
mulb
push
sub
push
jnp
or
inc
in
lds
mov
jge
xor
or
inc
movsb
mov
cmc
scas
test
mov
lds
adc
push
push
push
test
and
stos
lret
pop
cld
xchg
mov
pop
adc
mov
rcrl
out
leave
lahf
outsb
xchg
jl
jb
je
push
scas
add
daa
cs
pop
sarl
mov
xchg
sarb
nop
aas
mov
loope
mov
pusha
stc
sbbb
and
xchg
cmp
fdivrs
or
sub
int
in
movsl
xchg
mov
lret
mov
mov
sbbb
ffree
lock
or
dec
lcall
insb
stos
push
sbb
adc
mov
sbb
xlat
ret
icebp
sub
test
jae
dec
mov
lret
or
adc
outsb
pusha
adc
lcall
mov
les
mov
dec
add
and
add
leave
xorb
mov
mov
and
mov
and
pusha
in
int3
test
pushf
es
rolb
mov
iret
lahf
jb
enter
data16
fadds
sub
inc
xor
mov
jmp
fistps
ret
cld
cmp
leave
sarl
daa
dec
mov
cltd
pop
mov
xor
test
inc
stc
scas
js
jle
jo
or
xchg
mov
xchg
mov
jge
mov
test
mov
mov
mov
iret
mov
das
and
in
pop
enter
pop
nop
enter
lods
mov
jmp
fldenv
dec
adc
pushl
mov
sbb
lcall
cwtl
or
fcompl
loop
std
test
and
sbb
mov
fnstsw
cmpl
fcompl
popl
inc
xchg
jbe
or
pop
fdivp
insl
xor
pop
in
adc
mov
mov
lcall
sub
ror
scas
test
inc
insl
ds
out
lock
shl
popf
loope
loop
mov
ret
mov
notb
loop
inc
pop
fisttpl
sbb
push
into
pop
xor
int
mov
fdivr
sbb
cmpsl
sbb
mov
lret
test
adc
xrelease
mov
pop
in
and
mov
sub
lahf
and
in
inc
loope
xchg
jecxz
xor
push
xchg
repz
adcb
lods
sub
inc
imul
inc
arpl
cltd
fdivrl
inc
mov
js
insb
sbb
xor
add
out
xchg
fdiv
push
cmp
lcall
movsb
shlb
and
push
jge
icebp
lock
repnz
or
test
jecxz
jae
pop
rcll
repnz
incb
dec
xchg
inc
push
inc
dec
lods
loopne
jbe
xchg
push
and
push
push
loope
fimull
js
je
lea
filds
push
lret
jnp
xor
lahf
rclb
jo
mov
push
xchg
inc
jmp
decl
jmp
sub
xchg
outsb
imul
adc
push
lret
cmp
push
sub
rcrl
popf
xorl
loop
into
pop
or
sub
sub
and
sub
and
out
jg
mov
imul
xchg
out
out
fidivrl
xchg
outsl
add
test
inc
in
or
xchg
lock
fcmovb
cmpb
sbb
xchg
adc
xorl
dec
adc
clc
stc
or
aad
ficoml
bound
ficoml
nop
mov
mov
xlat
and
jmp
test
stos
mov
rcrl
inc
pop
or
stc
leave
dec
shll
addl
mov
mov
loopne
or
stc
je
loope
mov
mov
loopne
adc
sub
add
inc
push
xor
inc
jl
sub
jecxz
cs
or
add
loope
jne
mov
imul
xor
lods
nop
jge
mov
in
insb
lds
sub
push
cmc
mov
jne
push
jge
xchg
aam
pop
popf
out
mov
lcall
or
lods
negb
dec
inc
repnz
sbb
insl
jmp
push
inc
xchg
dec
cwtl
into
sub
add
imul
in
call
leave
pop
sbb
in
jb
bnd
add
mov
mov
mov
and
divl
pop
mov
out
test
lahf
scas
ljmp
out
cmp
lret
stos
scas
sub
outsb
mov
jb
insl
out
out
push
push
jb
in
les
ds
out
cwtl
mov
pop
mov
push
sarl
in
jns
aas
fdivl
popf
mov
or
rcr
iret
mov
push
jb
in
add
mov
xlat
sbb
imul
xchg
stos
jno
shlb
pop
fisttpll
or
getsec
adc
aaa
movsb
adc
cmp
pop
les
jge
sbb
sub
dec
ds
push
cmpsb
out
mov
push
sub
adcb
xor
loopne
adc
xchg
xlat
test
adc
scas
dec
cmp
xchg
mov
aaa
in
cmp
mov
dec
lahf
shll
adc
lret
in
pop
int3
out
lcall
imull
pop
mov
icebp
dec
xor
inc
leave
inc
outsb
jl
jae
rclb
pop
aaa
mov
adc
subl
je
repnz
insb
repz
bound
insl
xchg
jae
dec
cwtl
cmp
mov
sub
addb
mov
or
movsl
jae
aas
add
and
jl
hlt
stc
imul
inc
out
cwtl
ds
stos
xchg
jb
xchg
mov
lret
push
jbe
adc
jecxz
fwait
adc
mov
lahf
test
jg
cmp
adc
lock
jp
sbb
jbe
jno
scas
jne
in
add
adc
and
fsubs
int3
arpl
sbb
xorb
iret
or
flds
adc
jo
fstl
cmp
es
mov
sbb
bound
mov
sbb
sti
sbb
push
adc
jecxz
and
push
xchg
cmp
imul
push
sub
inc
jle
cmpsl
shll
mov
cmp
pop
xor
repz
dec
cmp
xchg
aaa
dec
push
dec
mov
setbe
es
jnp
repnz
sbb
dec
jecxz
aam
into
xchg
jmp
movsl
int3
cmp
test
shr
inc
jae
add
sub
jle
mov
lods
fnstsw
outsb
jge
push
add
lcall
subl
sti
iret
and
mov
ret
outsl
xchg
mov
imul
testb
testl
mov
es
fsts
stos
rcr
push
xchg
into
pusha
data16
cli
icebp
mov
stos
cmc
bound
inc
inc
and
and
fldt
mov
adc
or
test
mov
pop
inc
add
jecxz
loopne
push
inc
sbb
cmp
or
cli
push
xchg
add
xchg
inc
jae
pop
xor
xor
into
sbb
aas
test
call
ds
ds
mov
out
push
mov
xchg
test
popa
pop
or
jne
sti
popf
adc
inc
je
out
js
jecxz
sub
or
add
call
push
out
and
fisttps
nop
aaa
incb
mov
fcomps
mov
jns
lods
dec
scas
out
mov
leave
xor
mov
loopne
adc
fwait
arpl
jmp
or
push
dec
pop
mov
leave
or
or
mov
and
push
cmp
pushf
inc
clc
clc
orl
sbb
xor
jns
and
add
mov
inc
daa
into
ds
cmp
mov
and
xor
sbb
inc
xor
loope
adc
mov
push
cmp
aas
insl
xchg
negl
pop
les
cmp
test
pop
mov
push
int
das
mov
scas
pop
xor
adc
dec
jmp
dec
subb
icebp
dec
insl
subb
adc
jle
and
icebp
sbb
pushf
adc
icebp
lcall
ret
addl
xor
shll
cmp
add
movsl
xchg
daa
push
xor
cmpsb
sbb
ljmp
lret
sub
cmp
or
add
add
ljmp
cmpsb
jns
push
pusha
shl
filds
pop
mov
mov
push
pop
insl
push
pop
nop
mov
test
icebp
push
and
and
lds
push
mov
popf
and
cmp
frstor
das
cld
test
ja
mov
jno
adc
sbbb
movsl
lods
mov
in
xor
sub
imul
push
insb
push
imul
push
sbb
jmp
loopne
dec
stos
insl
hlt
arpl
inc
test
adc
dec
sahf
pop
sub
adc
pop
shr
sub
jae
shlb
pusha
mov
jecxz
popa
call
int
popa
push
pushf
xor
pushf
lahf
jbe
adc
pop
cmp
add
daa
movsb
test
sub
sbb
fisubl
and
and
popf
and
mov
clc
adc
and
xchg
ficoml
jle
mov
lcall
test
idiv
adc
int
xchg
cltd
dec
stos
xchg
sarl
jle
in
mov
std
push
movsl
inc
lea
pop
in
dec
jo
inc
not
outsl
sbb
movsl
call
adc
mov
leave
mov
inc
lods
inc
adc
stc
xchg
mov
jno
xchg
fwait
jecxz
sbb
jl
jae
sub
pusha
mov
sbb
ficoms
sub
jne
testl
outsb
test
mul
adc
ret
out
jnp
call
and
mov
cmp
pop
xchg
push
lret
scas
add
add
mov
dec
dec
adc
pop
lods
jns
andl
orl
out
inc
add
test
jnp
test
mov
stos
mov
shlb
daa
mov
xchg
ss
push
imul
and
stc
lahf
pop
in
inc
mov
aam
aad
inc
pop
pop
int3
sbb
outsl
or
iret
lea
xor
pop
movsb
std
repnz
jmp
jno
rolb
rcrl
out
and
cmpb
push
jmp
cmc
xor
leave
ljmpw
popf
mov
dec
loopne
inc
lret
ja
scas
push
stos
mov
in
jl
xchg
sub
lea
int3
xor
je
bound
or
ficoml
pop
adc
mov
and
mov
ljmp
ffree
pop
push
fstl
out
dec
gs
in
cmpsb
or
inc
xor
popf
scas
lret
pop
pop
sbb
addl
fstl
and
inc
movl
or
pop
or
sbb
fs
sub
stos
sbb
movsb
lods
mov
fs
sub
pop
push
dec
cmp
lock
dec
ret
pop
inc
xor
fcoml
xchg
cld
pop
ss
stc
xor
xchg
xor
mov
push
jle
fisttpll
jbe
in
xor
test
aad
pop
pop
out
xchg
cmpsl
cmpsb
adc
hlt
loope
inc
fmuls
mov
mov
mov
mov
push
cs
sub
and
les
loope
add
pop
cmp
sub
cmp
daa
pop
les
jmp
insl
xchg
mov
pop
mov
and
ds
bound
movsl
std
out
pop
int
dec
adc
pop
cmpsl
rclb
lea
cmpsb
rcll
mov
sub
jae
test
and
sub
xchg
arpl
pop
cld
and
movsl
push
add
cmp
setg
adc
push
sub
cmp
xchg
outsb
push
jecxz
jae
sbb
cmp
pop
out
inc
xchg
sahf
push
into
mov
in
fldt
push
and
xchg
lret
sti
jns
sarb
orl
sbb
sub
and
xor
je
das
adc
outsl
xchg
ds
scas
xchg
lods
popa
jne
add
cmp
test
xor
std
inc
jle
jp
xchg
mov
cli
movl
xor
es
pop
das
lods
cmp
inc
cld
inc
push
repz
pop
int
rclb
ja
insb
cmp
jns
imul
inc
in
call
out
lahf
pop
xor
push
dec
lock
and
bound
sarb
xor
cmp
pop
xchg
mov
orl
out
in
push
repnz
cmp
cwtl
pop
popa
push
movsl
or
xchg
pop
jecxz
jl
xchg
xor
out
dec
push
adc
xchg
fstps
push
xor
test
mov
pusha
out
das
push
mov
pop
lds
mov
les
ret
cli
cs
stos
outsb
mov
sbb
jmp
lock
jecxz
xor
jecxz
sub
sbb
in
out
clts
ret
mov
or
inc
sub
cmp
sbb
int
xor
mov
out
je
xchg
roll
mov
ret
testb
inc
lahf
sbb
dec
fcomp
mov
mov
lea
sbbl
call
loope
jb
sbb
cli
int3
sahf
sti
push
mov
jae
xchg
arpl
das
jge
mov
out
cmp
hlt
ds
ds
inc
add
cmpsl
popf
cmp
sbb
sarb
ret
and
mov
dec
cmp
mov
jb
dec
gs
jge
dec
pop
notl
dec
cltd
mov
xchg
jmp
aam
arpl
inc
sub
jno
sbb
or
cmp
scas
pop
leave
xchg
lds
adc
arpl
test
sbb
adc
dec
and
movsb
hlt
dec
call
cli
mov
inc
shrb
ljmp
ljmp
jl
movsb
insb
cmc
inc
pop
out
pusha
xchg
xchg
inc
dec
insl
je
xchg
dec
inc
xchg
xchg
outsl
jae
add
jge
mov
stc
jne
mov
fs
adcb
insb
mov
pop
and
movsl
adc
push
aam
adc
idivb
outsl
ret
stc
repz
cmp
insl
add
mov
pop
add
mov
xor
insl
jb
jmp
adc
jne
bnd
push
jp
sub
add
sub
lahf
xor
fistpll
sbb
cwtl
cs
adc
out
jbe
cwtl
fwait
sub
rorb
dec
xchg
insb
dec
push
mov
stos
fwait
cmpsl
sub
scas
and
in
jp
jno
add
push
push
lods
test
lret
ja
jp
scas
in
aas
sbb
mov
cmp
in
mov
test
fstpl
lret
in
jmp
dec
xchg
rcrb
out
jbe
sbb
xor
mov
daa
mov
mov
das
jno
inc
pushf
rorl
lea
or
jge
pop
and
into
mov
jmp
data16
push
xchg
lods
sub
add
lods
scas
mov
dec
repz
outsl
insb
xor
pop
cmp
push
add
scas
jo
jp
ss
or
pop
pop
sub
inc
fildl
repnz
pop
insb
outsb
jle
mov
push
movntq
movsl
inc
cmp
inc
daa
sahf
aam
inc
lea
int3
imull
mov
inc
loop
dec
dec
ret
in
mov
stc
push
jge
pop
je
xchg
popa
les
mov
dec
mov
jge
adc
pop
sbb
aas
xor
sbb
test
xchg
fsubr
mov
testb
sbb
lahf
scas
dec
aaa
and
or
into
xor
jo
xorl
std
call
sub
add
out
adc
addr16
sbb
aam
jmp
push
aas
push
or
mov
scas
or
sub
enter
test
pushf
add
inc
sub
ss
jmp
mov
scas
pop
push
cs
cmp
mov
rcrl
push
add
lahf
dec
cmp
add
xlat
add
mov
sbb
lds
mov
mov
sub
call
cmp
mov
jl
outsb
jnp
mov
lahf
or
aad
call
jecxz
adc
dec
jle
lea
mov
in
and
pop
lods
shll
ret
inc
js
int3
push
pop
add
in
es
shl
stc
js
aaa
adc
fdivl
xchg
fidivrs
mov
cwtl
fsts
test
dec
or
push
pop
dec
cltd
push
lahf
lea
shr
stc
flds
mov
sbb
mov
cld
pop
out
rcll
popa
or
sysret
stc
iret
lcall
xchg
jecxz
inc
xor
cmp
ret
ja
pushl
adc
sub
cmp
or
shlb
push
cmp
pop
xchg
mulb
mov
int3
xchg
mov
repnz
ret
xchg
dec
cltd
add
sub
push
mov
jae
jle
das
fwait
sbb
aad
cltd
lods
pop
push
in
mov
mov
roll
pushf
push
sub
mov
mov
or
sub
xchg
pop
addr16
shl
push
cmpl
sahf
jg
add
push
mov
xchg
popl
jecxz
cmp
iret
stos
xchg
roll
iret
jnp
inc
inc
xor
lret
ret
scas
bound
jmp
mov
shll
das
nop
sbb
cmp
sbb
js
insb
lods
push
cli
mov
cmp
xchg
xchg
ja
dec
adc
lods
jo
push
fistpl
adc
jne
and
pop
jg
jo
xor
imul
shll
mov
dec
cmp
and
or
xchg
xchg
or
fcoml
dec
cmp
out
jmp
pop
mov
jecxz
sbb
loope
lods
aas
cs
jnp
sub
addr16
jle,pn
mov
xchg
xchg
lcall
push
mov
mov
pop
pop
inc
nop
sbb
imul
jae
lods
push
xchg
inc
or
mov
jge
jne
inc
ss
xlat
jmp
cmp
fstl
sub
sbb
and
addl
and
cltd
movsl
fisubrl
mov
test
push
sub
int3
incl
push
mov
mov
fadds
sti
ror
cltd
test
inc
aam
xchg
ljmp
push
imul
repnz
inc
xor
jbe
inc
pop
jmp
xchg
icebp
mov
movsl
dec
mov
iret
insl
jb
pushf
jl
push
shrb
nop
push
jns
pop
dec
faddl
cmpsb
vphadduwq
loope
sbb
push
adcl
push
and
mov
pop
jle
dec
mov
movsb
loope
cli
sbb
repz
push
hlt
sub
xchg
adc
push
leave
hlt
mov
addr16
jae
mov
and
loop
mov
or
fisubs
jg
mov
aas
mov
scas
or
lret
movsl
pushf
sub
hlt
and
adc
cmp
inc
mov
cltd
cmp
ret
sahf
aam
jno
push
aas
push
out
mov
pop
movsl
inc
xchg
test
xchg
fs
loop
ret
shr
shlb
hlt
ljmp
or
jb
xchg
or
mov
mov
and
scas
push
mov
xchg
sub
mov
sti
xor
lret
add
daa
mov
fmuls
pop
xchg
fwait
xchg
jae
sahf
dec
mov
add
pop
or
push
push
mov
xor
sub
int3
sub
data16
xchg
fdivrs
sbb
xlat
ret
mov
divl
leave
jne
pop
addr16
cmpsl
and
in
push
inc
jl
pop
movsb
xchg
fildll
jns
ffreep
test
fnsave
aaa
xlat
fmul
pop
popa
sbb
sub
out
std
push
jl
outsb
jne
cmp
movsb
test
sbb
pop
jmp
sbbl
jge
push
ds
rcll
adc
fildll
test
shlb
inc
jp
push
test
daa
push
data16
adc
push
outsb
sub
pop
inc
push
add
xchg
and
mov
ret
rorb
add
mov
popa
push
push
cmp
sbb
cmc
lret
sub
rclb
xchg
inc
cs
mov
and
push
dec
add
xor
xor
xor
fidivrs
out
out
xchg
push
add
cmp
rolb
inc
outsl
mov
sbb
mov
ss
jnp
shll
add
je
cmp
inc
or
loop
jge
and
and
adc
pop
ljmp
out
inc
inc
pop
mov
ret
jmp
sbb
dec
and
lock
rolb
xchg
aad
pop
sbbb
mov
dec
jge
push
fdivrs
adc
adc
scas
shr
clc
lea
and
addr16
or
movsb
mov
jle
lea
or
cmpsl
iret
leave
mov
mov
mov
push
inc
inc
sarb
in
xchg
addl
mov
clc
add
mov
pusha
arpl
bnd
aad
repnz
push
es
mov
pop
lret
loop
mov
xlat
push
rcrl
adc
add
test
aam
leave
notb
ljmp
mov
jo
push
mov
mov
sbb
mov
push
or
lea
lret
in
or
inc
ret
jge
lcall
addr16
mov
and
cmp
dec
out
lahf
dec
loop
enter
jo
cmp
int3
xchg
call
subl
inc
xchg
icebp
fdivp
xor
mov
int3
fimull
test
sub
and
sarl
cmp
xchg
pop
pop
rcr
add
cli
jmp
nop
jae
mov
fdivrl
call
mov
pop
dec
xchg
add
xlat
push
cmp
adc
sbb
cmovs
ljmp
sbbl
dec
inc
nop
xchg
pop
push
scas
test
inc
movsl
cmc
lea
test
adc
sti
negb
fcompl
or
push
xlat
rcl
push
daa
sub
cmp
ret
dec
dec
addr16
stos
idivl
out
and
cwtl
adcl
idivl
xchg
jne
cltd
loop
movsb
in
sub
in
and
and
mov
loop
je
rclb
repnz
sub
nop
adcb
and
xorb
loopne
mov
scas
notl
jl
leave
cmp
adc
ud0
cmpsb
cltd
push
cmp
dec
cmp
push
xchg
mov
andb
sti
add
test
cmp
add
or
xchg
pop
gs
and
fildl
cwtl
mov
popa
mov
fbld
mov
mov
xchg
mov
cmp
ret
pop
mov
rcrl
xorl
lds
xchg
jecxz
mov
mov
add
lea
arpl
das
imul
inc
dec
dec
int3
divl
xchg
test
js
push
dec
sbb
leave
rolb
inc
pop
jb
into
push
mov
jno
popa
jmp
loopne
xor
pop
and
inc
add
or
loop
popf
mov
jne
mov
dec
xor
and
or
and
mov
scas
int
cmp
jl
imul
sbb
sbb
dec
fxch
push
push
push
pop
test
ds
cmp
jnp
xlat
sbb
hlt
loopne
push
xchg
add
ss
sub
jae
pop
sbb
test
in
icebp
cld
addl
mov
jmp
cwtl
or
stc
jg
jns
movsb
and
sub
push
inc
push
cmp
inc
xchg
out
out
inc
push
sub
daa
out
push
sbb
es
push
adc
add
scas
shl
test
inc
pop
push
xor
adcb
hlt
test
pop
mov
dec
test
sarb
cli
cmp
push
and
dec
push
aas
punpcklbw
jo
js
pusha
add
pop
sbb
movsb
aaa
pusha
sbb
lods
add
test
popf
sub
pop
push
xor
mov
and
ficompl
adc
xchg
jae
mov
js
cmpsb
push
adc
push
jmp
mov
scas
sbb
or
lahf
adc
mov
mov
and
xor
int
ret
jg
sub
mov
mov
cmc
addr16
gs
pusha
push
sub
fsubrl
stos
lods
js
xor
sbb
push
lods
rcll
xchg
pop
and
add
mov
dec
pop
lds
out
xchg
ret
std
int
je
into
xchg
sbb
push
sub
sbb
ds
jg
fdivrl
cmp
cmpsl
mov
jno
cmp
xchg
adc
or
pop
inc
ja
inc
xchg
pushf
bnd
xchg
sub
xchg
imul
repz
ret
add
mov
adc
inc
xor
xchg
negb
add
jl
and
int
mov
jbe
inc
dec
insl
dec
sbb
sub
mov
dec
test
pop
movsb
adc
in
and
xchg
xchg
xlat
dec
dec
mov
jnp
or
push
in
sbb
icebp
push
mov
jo
and
sbb
mov
xor
mov
lret
add
sub
jp
out
and
dec
mov
outsb
jp
sub
inc
shr
push
dec
jb
push
add
cmp
mov
sbb
lea
inc
cmpsb
repz
xor
or
jae
or
push
push
pop
bound
out
cmp
inc
mov
leave
xor
nop
pusha
ret
test
shl
jecxz
insl
adc
sbb
lret
xchg
lret
push
lods
xor
pop
int3
ret
addr16
int3
fsts
mov
add
out
dec
aaa
xchg
decl
jmp
mov
push
test
loope
pop
xchg
jns
inc
mov
adc
inc
leave
inc
sahf
pop
mov
sub
ja
mov
sbb
push
inc
rcll
push
in
push
add
mov
jmp
jg
adc
inc
inc
adcl
cmovb
sahf
xor
or
fidivl
pop
sub
jle
lods
adc
or
mov
pushf
xor
imul
or
mov
lcall
push
mov
xlat
fsubs
sub
mov
popf
jne
addb
loop
insl
push
sti
sbbb
mov
cmp
xchg
or
cwtl
or
or
cmp
push
rcll
sub
into
jmp
mov
jecxz
dec
fldcw
test
push
add
mov
ficoml
fsts
imul
mov
and
xor
cmp
in
and
jbe
cmp
cmpsl
ret
repnz
outsl
jo
dec
mov
push
pop
imul
jmp
jns
sub
jmp
ss
mov
mov
cli
imul
inc
adc
push
and
pusha
add
in
sub
and
adc
aas
js
imull
cmp
ds
xchg
cwtl
popa
arpl
mov
jl
mov
lret
scas
add
or
and
xchg
jo
fdivrs
imul
test
stos
cmp
adc
sbb
inc
insb
cmp
mov
mov
test
inc
fdivl
outsb
add
sti
jbe
repnz
fcoml
rcr
push
rcr
popa
fs
mov
sbb
out
add
sti
add
roll
pushf
dec
imul
pop
push
jl
dec
jge
mov
or
mov
or
popf
push
cmpsb
fstl
fisttpl
mov
cmp
push
mov
negl
mov
popa
and
mov
fbld
das
popf
mov
push
loopne
ljmp
jno
push
inc
jp
mulb
mov
and
pop
jg
mov
cmp
popf
mov
cmpsl
int3
and
rcrb
cmp
jl
ss
push
or
inc
repnz
iret
les
cmp
icebp
sub
imul
aaa
jmp
xchg
mov
pop
popf
push
adc
popf
cld
lods
movsb
and
hlt
adc
xchg
lock
shrl
adc
dec
xchg
mov
nop
in
dec
jmp
imul
arpl
fdivrp
pop
pop
mov
mov
psrld
pop
leave
inc
outsb
xor
es
push
nop
dec
lods
aad
mov
pop
cwtl
pop
mov
lret
sbb
pop
mov
cmp
seto
cld
ficompl
add
adc
test
std
aaa
xor
xlat
adc
out
add
inc
in
cmp
xor
jo
jb
or
mov
jb
xchg
mov
aad
mov
dec
jge
ret
pushf
mov
clc
outsl
lret
or
imul
jmp
testl
xchg
sbb
int3
ret
dec
out
dec
out
push
mov
mov
push
bound
adc
jne
cmp
sub
movsl
sub
lahf
pop
adc
int
mov
adc
dec
adc
xlat
fsub
pop
mov
push
xchg
es
jae
popa
sub
xchg
cmp
push
mov
imul
scas
stos
fbstp
dec
lds
push
mov
and
xchg
jbe
ret
xchg
idiv
cwtl
pop
fnstsw
jb
cmp
int3
mov
jns
or
rcrb
test
loope
pushf
mov
sub
jbe
dec
test
loop
sbb
repz
or
cmpsl
out
aaa
es
js
je
std
cltd
mov
adc
xchg
das
jne
imul
pushl
sub
fildll
pop
xor
addr16
dec
test
repz
daa
jg,pt
dec
out
xor
inc
pop
insl
sub
adc
je
outsb
and
xchg
jmp
xlat
or
imulb
shll
rcrl
inc
jle
sbb
inc
lds
jp
outsb
stos
mov
movsl
out
ss
or
in
sbb
jae
sbb
xchg
int3
mov
push
adc
mov
repnz
cmc
sub
add
mov
or
push
pop
cmc
jle
cmp
cmpsl
sarl
iret
rorb
popf
das
repz
dec
cwtl
movsl
test
adcl
push
daa
fstps
and
shll
arpl
mov
pop
es
fldcw
testb
movsb
cmp
xchg
or
mov
decl
popa
lods
push
jmp
sbb
pushf
sub
add
iret
rorb
sub
scas
fmuls
lahf
loopne
jns
or
enter
pop
add
xlat
cltd
xchg
ror
or
test
jmp
rcrl
fucomi
xlat
sub
sbb
es
push
add
cli
pop
popf
outsl
xor
jmp
pusha
divb
shr
or
repnz
ds
mov
popa
and
lret
inc
xor
adc
fsubs
dec
lock
das
pop
or
cwtl
js
jle
mov
aaa
cmp
in
xor
dec
ja
cmp
xchg
repnz
inc
jae
or
enter
insb
adc
xchg
test
pop
call
movsl
inc
mov
in
stc
push
xlat
and
leave
push
gs
std
add
xlat
lods
adc
mov
mov
cmp
scas
rorb
push
jns
iret
mov
and
sbb
push
ds
stos
dec
movsb
mov
std
jge
pop
cmpsb
pop
add
pop
mov
scas
hlt
mov
xor
mov
jnp
dec
jae
push
cmp
pop
mov
out
arpl
nop
shll
mov
sarl
scas
inc
and
inc
inc
ja
push
dec
fists
mov
push
sbb
pop
outsb
popf
mov
and
inc
cmpsb
movsb
mov
and
or
add
sub
xor
movsl
lret
cltd
test
orb
stc
dec
lock
sbb
or
lock
outsb
pop
inc
int
scas
daa
imul
dec
repnz
js
jl
fists
jo
mov
dec
cpuid
dec
or
and
lods
xor
lcall
out
sub
or
jnp
dec
or
dec
dec
insb
pop
lret
int3
ss
lret
dec
fisttpll
pushf
pusha
cmp
ret
popf
pop
mov
mul
mov
cmp
jo
sub
scas
adc
xor
stos
nop
or
inc
sbb
or
lret
mov
jne
ret
sbb
out
or
pop
idivl
dec
aaa
outsl
xor
push
pop
sub
jp
lret
stc
sub
cs
sti
push
push
dec
mov
and
cs
xor
cmc
mov
sbb
call
sub
aad
movsl
mov
dec
sub
lea
or
inc
imul
fbld
or
or
and
mov
mov
repz
pushf
jmp
aad
mov
jg
mov
sbb
dec
jle,pn
xlat
mov
filds
mov
pop
in
icebp
push
addl
scas
add
inc
sbb
push
xor
dec
pop
addr16
cli
push
icebp
push
cltd
mov
xor
pop
cltd
je
icebp
jnp
sti
adc
pop
push
and
pushl
cmp
sub
pop
jb
test
aas
roll
negl
testb
cmp
data16
and
lock
scas
cmp
rorb
jb
into
outsl
xchg
add
pop
adc
fs
out
push
xorb
jg
push
dec
push
push
push
mov
js
loopne
imul
mov
mov
or
bound
jb
add
mov
clc
cli
fisttpl
mov
imul
das
jns
insl
pushf
addr16
pop
fidivl
mov
daa
mov
movsb
pop
cmp
xor
test
mov
in
jge
leave
xchg
xor
cli
inc
inc
mov
jns
inc
adc
clc
stos
adc
push
sbb
jo
adc
mov
lds
push
push
push
ds
xor
jge
dec
ss
jmp
fildl
and
cld
mov
xchg
push
out
lods
nop
dec
pop
xchg
outsb
mov
add
or
adc
call
dec
or
int
jmp
and
sub
mov
push
xchg
fldenv
cmpsl
sub
daa
push
bound
push
mov
mov
jg
test
fisubrs
or
ficoms
add
xor
mov
nop
aam
repnz
push
popa
fcompl
push
ret
inc
xchg
das
out
inc
xchg
push
stc
lock
divl
dec
sbb
mov
bound
or
cltd
ss
or
addr16
mov
ja
sbb
sub
notb
aad
stos
jbe
push
jmp
and
dec
std
jbe
push
insb
xchg
fisttpl
ja
pop
das
mov
fwait
inc
pop
ds
push
lds
outsb
subl
sti
repz
int
loope
leave
inc
push
or
inc
sbb
std
push
mov
mov
cmp
inc
dec
cmpsb
loop
mov
xor
xchg
sbb
xor
mov
popf
shll
sbb
aas
test
push
repz
test
inc
pop
cmp
and
rol
int
inc
out
xchg
mov
or
mov
push
loope
jecxz
pop
xchg
xor
dec
out
push
jmp
adc
jg
outsb
pushf
ljmp
jge
andb
xchg
rol
movsb
fisubl
jb
pop
cmpsb
test
lret
repz
sub
sbb
xor
cli
pop
lret
loope
imul
push
pushf
jb
cmc
jmp
jl
sbb
dec
ret
add
xor
jg
fists
cmc
js
mov
and
fdivs
jo
packuswb
mov
mov
cmp
test
jle
js
je
sbb
push
mov
je
rclb
sub
shlb
xor
stc
cmpsl
aad
cs
pop
fisttps
mov
mov
mov
pop
xchg
pop
mov
out
imulb
in
push
jnp
xchg
adcb
push
movsb
inc
int3
loop
push
mov
sahf
addr16
push
or
loope
pop
outsl
add
in
or
daa
mov
adc
aaa
shll
mov
sbb
cmp
clc
cvtdq2ps
dec
lea
mov
addr16
cmpsl
sarb
arpl
or
fisubrs
xchg
dec
shl
sub
push
cld
inc
repnz
or
adc
mov
lock
out
cmp
cltd
shrl
imul
mov
outsb
push
sar
outsl
stos
sbb
mov
add
xchg
mov
fdivrs
jb
jno
fs
subl
repz
rolb
enter
cld
mov
dec
push
sub
push
es
repnz
jnp
daa
out
cmp
popf
sub
and
and
outsl
xor
push
mov
jp
xlat
push
pop
mov
mov
fildl
adcl
mov
push
pop
ficoml
or
mov
cs
cmc
mov
popf
cli
push
cmp
loopne
sub
cmpsl
stos
mov
jo
dec
push
out
mov
dec
shll
or
xchg
jecxz
js
dec
cmp
mov
js
mov
jg
inc
sub
out
mov
mov
imull
xchg
fwait
sarl
lret
fnstcw
xchg
in
add
jle
pop
push
arpl
lds
jno
shrw
daa
adc
enter
mov
adc
inc
sarl
bound
cmpsl
add
popa
xchg
cmp
push
dec
sub
dec
daa
fwait
dec
and
and
mov
and
mov
add
jl
incl
sti
ja
rorl
ror
xchg
test
fisubrs
popa
sbb
repnz
jnp
imul
lcall
sbb
push
jns
sarl
dec
rcll
add
mov
mov
fwait
lcall
mov
add
leave
loope
jno
dec
mov
xchg
xchg
or
sbbl
push
enter
cmp
loopne
and
test
outsl
ret
jg
adc
mov
sub
test
nop
inc
cmpsb
es
int3
scas
push
pop
adc
mov
dec
loope
push
imulb
adc
bound
push
lret
mov
cmp
mov
call
jnp
imul
cmpsl
pusha
cwtl
or
outsl
jp
imul
loopne
inc
push
es
mov
iret
pop
jae
out
push
divl
leave
into
or
in
push
insl
mov
xchg
lock
rorb
adc
aas
sub
add
sub
mov
mov
push
xchg
nop
ja
sbb
dec
mov
rcll
fisubl
repnz
xlat
cmp
mov
sbb
pop
scas
fsubr
fidivrl
inc
mov
out
loopne
sub
shlb
xor
lock
shll
cmpsb
daa
bound
mov
sub
sub
ror
sti
mov
fnstsw
jo
cmp
cli
mov
bnd
adc
mov
dec
pop
loopne
sbbl
sbb
iret
gs
pop
cmp
jae
not
cmp
repz
mov
lds
out
aas
push
test
push
lock
ficomps
inc
adc
out
negb
inc
inc
popa
jb
int3
xchg
pop
push
int3
dec
jns
xor
insb
adc
pop
dec
shrl
and
push
mov
pop
das
orl
cwtl
mov
dec
stos
xchg
in
xchg
jb
ss
fistps
mov
or
lods
xchg
mov
scas
pop
push
mov
in
aad
outsl
loopne
cmc
js
rclb
les
cmp
ficompl
add
inc
adc
jmp
mov
out
in
outsl
mov
or
jae
mov
dec
mov
dec
inc
adc
rcr
and
lret
pushf
sbb
shlb
lret
fsubrs
loop
cmp
mov
sbb
push
mov
add
jnp
jecxz
mov
xchg
cltd
scas
add
sbb
sbb
push
mov
mov
add
stos
ficoml
push
pop
adc
ficoml
es
jge
adc
xorb
sub
mov
icebp
shl
and
cltd
push
mov
dec
jp
roll
mov
into
cli
dec
aas
adc
and
cmp
sub
adc
sbb
inc
shll
inc
mov
dec
in
aad
sbb
mov
sti
mov
sub
lcall
lods
and
dec
outsb
je
dec
repnz
push
sbb
cmp
sbb
jo
iret
or
filds
aas
and
adc
inc
push
out
mov
das
cmp
jae
bound
mov
xchg
fldl
pop
pop
lret
adc
test
xchg
mov
in
mov
pop
sub
add
inc
movsl
sahf
scas
cli
cmp
xchg
mov
notb
jp
in
sbbl
movsb
sahf
or
dec
xor
and
clc
leave
jo
mov
mov
mov
jnp
aam
insl
sbb
stos
dec
sub
movsb
mov
imul
and
sti
out
jg
inc
xchg
ss
out
rcrl
push
cltd
decb
mov
insb
pop
ds
xor
xchg
xchg
stc
mov
cmp
shrl
sbb
add
jbe
pop
push
adc
xchg
pop
push
fsub
stos
arpl
cltd
fdivs
xor
rclb
call
add
rclb
in
push
push
push
loope
jb
sub
or
repz
fimull
int
push
clc
fst
pop
xor
or
ss
ja
mov
xchg
jae
push
push
std
mov
ljmp
pop
or
and
out
lock
jp
mov
cs
pop
testl
test
xlat
inc
jp
xor
sub
xorb
jno
lret
lahf
mov
xchg
xor
enter
xchg
sti
push
ljmp
inc
inc
cmc
push
xchg
inc
xor
cli
xchg
add
andb
inc
or
mov
out
sub
mov
hlt
into
aam
xchg
lock
js
dec
adc
pop
or
pop
mov
push
outsb
fisttpl
sbb
xor
aam
inc
hlt
mov
dec
mov
mov
mov
sub
outsb
xlat
or
add
sub
aaa
add
inc
mov
iret
insl
mov
movsl
cmp
lahf
js
pusha
inc
jno
sahf
push
cmp
mov
jbe
mov
push
das
dec
jb
inc
aam
int
inc
push
xor
xor
les
icebp
mov
mov
js
sbb
icebp
dec
mov
dec
and
shrl
mov
ds
cmpsb
cmp
jmp
xor
aam
frstor
pushf
in
mulb
inc
xchg
jp
xchg
jg
in
adc
lret
loopne
inc
sbb
inc
pop
arpl
cs
pushf
push
or
repnz
mov
and
ds
push
push
xchg
outsb
popa
lret
es
push
popf
test
orl
jge
lahf
popa
int
mov
les
mov
mov
out
dec
mov
lods
sub
addr16
std
lahf
cmpb
shrl
sub
pop
adc
les
push
das
push
fwait
ret
stos
sbb
ljmp
cltd
les
imul
stos
leave
xchg
xchg
mov
fdivp
or
sub
jmp
xchg
xlat
dec
mov
xor
and
or
push
mov
outsb
and
or
push
std
in
je
xor
sti
ljmp
pusha
movsl
rorb
sarl
addr16
cmp
mov
pop
sahf
ret
xchg
dec
out
enter
lods
pop
inc
fcomps
ss
and
pop
pop
fs
fistpl
ja
pop
fistps
mov
add
mov
mov
dec
outsb
pusha
loope
mov
xchg
or
int3
xchg
cltd
ret
lea
rcrb
and
add
dec
jge
and
inc
mov
fnstcw
jbe
cwtl
idivl
xor
xor
fildll
sahf
jg
lock
leave
pop
aaa
add
xchg
imul
addr16
xchg
lret
jecxz
mov
daa
imul
sbbb
stos
xor
or
xor
adc
cmp
lds
or
dec
js
dec
mov
fsub
test
movsb
add
adc
mov
lock
out
adc
mov
cmp
jb
sti
push
les
inc
fildll
jmp
pop
add
inc
adcl
sahf
sub
jb
push
clc
pushf
mov
clc
mov
int
mov
sbb
test
lods
fdiv
push
jmp
data16
data16
push
ss
and
fldcw
mov
pop
jo
addr16
mov
lcall
out
dec
test
rclb
call
jno
repz
adc
pop
push
pushl
cmp
add
xorl
mov
addr16
insl
mov
fsts
in
in
cmp
cmc
sub
into
and
ljmp
popa
fimull
cmp
enter
adc
clc
dec
mov
lods
pop
fs
pop
out
movsl
iret
fistpll
xchg
inc
sbb
pop
ret
das
pop
xor
push
xchg
mov
leave
call
xor
ss
sub
faddp
test
cmp
mov
sub
shrl
pop
sti
adc
loopne
mov
pop
xchg
xchg
adcl
xor
xchg
pop
mov
aaa
gs
sub
movsb
lret
stos
cli
push
lcall
outsb
xchg
lds
mov
cmp
imul
rcrb
subb
cltd
jge
out
pop
idivl
shlb
arpl
incb
add
push
or
notl
mov
or
test
jnp
bound
mov
add
or
adc
popa
push
cmpsl
cli
mov
pop
mov
aas
test
cmp
push
push
push
icebp
fisubs
mov
jecxz
test
dec
hlt
fdivrp
je
jge
ret
push
mov
stos
fsubs
mov
and
in
mov
sbb
roll
mov
jl
adc
pop
int
lods
adc
mov
sbb
ljmp
cmc
inc
cmp
pushf
lock
push
pop
sub
ljmp
inc
dec
pop
cltd
test
inc
mov
inc
or
or
xor
sbb
stos
cmp
daa
dec
jl
push
sti
mov
pop
lret
lods
subl
sub
insl
lcall
mov
imul
and
cmpl
or
fists
lds
xor
jecxz
sarb
push
jnp
jb
movlps
ss
outsl
xchg
mov
std
mov
sarl
es
hlt
sub
pop
mov
pop
xor
and
xchg
test
ret
outsb
cld
adc
rcrb
inc
cmc
daa
loope
jb
mov
push
fmulp
shl
mov
xchg
xchg
cmp
cmp
lods
pop
push
xchg
xor
dec
sbb
and
push
xchg
push
add
stos
inc
nop
gs
lods
scas
mov
std
std
inc
fdivs
out
push
movsl
mov
jp
mov
adc
ljmp
sbbb
pusha
inc
jbe
fistl
loope
xchg
pop
fisttpl
jno
mov
dec
push
pusha
sub
int3
sarb
add
test
das
xchg
inc
jmp
jl
shl
in
pushf
cltd
mov
nop
insb
mov
inc
mov
fsubrp
jmp
sbb
and
adc
and
adc
mov
mov
push
push
add
cld
outsl
mov
frstor
dec
data16
or
sub
pop
adc
push
sub
xchg
popa
xlat
xor
adc
in
movsb
jns
sub
inc
in
xlat
dec
and
xchg
push
arpl
and
or
das
or
cmp
aad
dec
cmp
gs
adc
sarb
adc
pop
lcall
mov
cmp
and
pop
jl
jl
jae
pop
mov
adc
sub
sub
int
es
ss
xchg
mov
jle
test
fldl
jns
and
icebp
subb
loopne
or
ret
mov
fsubrp
lods
mov
or
pop
add
fisubrl
xchg
stc
ret
icebp
mov
xlat
and
add
xor
pop
pop
lcall
xchg
push
push
fwait
int
mov
xorl
fistl
mov
add
idivb
sbb
mov
sahf
sub
mov
pop
js
decb
shll
pushf
dec
std
rcrb
in
mov
sub
subl
fsts
xor
or
mov
push
jae
inc
jmp
xchg
pop
jle
fdivp
mov
push
data16
ror
push
sub
rol
adc
dec
hlt
ss
outsl
mov
adc
stc
sub
xchg
xchg
sbb
mov
pop
cmp
test
cmp
pop
mov
rorl
iret
jae
push
cmp
fldt
pop
shrl
imulb
and
jecxz
pusha
inc
mov
jl
je
addb
repz
mov
jmp
adc
cmpsb
cwtl
xor
mov
fidivrl
ret
mov
imul
lea
rcl
dec
jecxz
pop
cltd
pop
jo
cmp
jg
pop
jl
lds
push
dec
iret
bnd
pop
inc
cmp
jnp
pop
sub
dec
out
popf
push
fdivrl
mov
call
or
stos
dec
or
jno
ret
hlt
in
rcrl
ficompl
mov
lea
cwtl
stos
xchg
bound
jle
ss
lock
cmpsl
sub
leave
jecxz
jp
push
out
mov
push
es
lds
xchg
cmp
xlat
push
insl
iret
or
push
std
push
mov
nop
xor
fs
dec
lods
mov
lods
lods
gs
mov
lret
data16
dec
pop
xchg
cmp
adc
jp
pusha
aaa
cltd
test
inc
xor
and
push
sti
add
fs
jmp
aam
jb
dec
inc
inc
inc
loope
mov
repz
mul
out
jg
movsl
xlat
shrl
les
and
sahf
mov
add
or
and
stc
leave
mov
decb
fnstenv
push
jl
lea
sub
push
adc
test
lock
xchg
xor
stos
adc
add
sahf
xor
push
movsb
nop
jnp
push
pop
fbld
clc
fcoms
mov
dec
mov
sarb
jnp
js
test
std
enter
mov
and
cli
stos
lea
xor
add
gs
and
daa
jb
inc
sbb
inc
sbb
jb
sbb
pop
andl
in
sbb
out
push
loopne
sbbb
ret
or
testb
insl
std
inc
mov
xchg
xchg
jge
lahf
mov
mov
or
adc
pushf
fsub
loop
js
hlt
fs
mov
push
sti
movsb
push
inc
cmc
cmp
xchg
sbb
dec
dec
test
mov
or
sub
mov
mov
cmpsw
stos
clc
icebp
xchg
clc
push
fidivrl
jl,pt
fstpl
orl
nop
mov
test
mov
mov
add
ljmp
ret
pop
out
rcrl
cmp
pop
jne
jmp
std
or
inc
sub
loope
xchg
loop
add
push
mov
pop
sub
and
mov
push
inc
das
dec
and
repz
dec
mov
pop
fsubl
mov
and
sub
adc
loope
push
mov
and
lahf
xor
test
mov
push
outsl
pushf
dec
push
cmp
add
jg
jnp
push
int3
shlb
aad
stos
pushl
insb
notl
dec
mov
push
xor
mov
imul
roll
jecxz
add
stos
mov
xchg
inc
cmpb
mov
insb
and
lret
push
sarl
mov
or
orb
mov
loopne
sbb
xchg
fs
mov
int3
pop
in
xchg
mov
test
cwtl
fsts
imul
addr16
xchg
cmp
aam
pop
sbb
add
insl
mov
outsb
mov
mov
mov
mov
add
mov
dec
push
xlat
lock
adc
fs
ret
inc
and
incb
xchg
add
cmp
xchg
outsb
int3
jp
pop
stc
sarb
push
mov
out
adc
lods
roll
push
mov
imul
push
xchg
iret
insb
or
inc
push
pop
mov
and
adcb
jge
in
xor
rolb
xor
lret
add
in
pop
mov
outsl
inc
xor
repnz
mov
ds
adc
xor
lret
adcb
sbb
daa
fsts
mov
xchg
add
sub
adc
roll
mov
aaa
hlt
lea
jo
mov
xor
xorb
push
dec
xchg
pop
pop
pop
sub
imul
js
test
sub
ret
mov
push
jecxz
loopne
sarb
jg
mov
insl
into
lock
test
jae
ds
cmp
mov
mov
insl
adc
mov
sub
sub
jle
aad
fmuls
xor
xchg
xchg
bound
out
mov
cmc
adc
push
mov
lsl
scas
cmc
xor
je
jae
jmp
jno
push
test
sbb
into
inc
mov
mov
sub
xchg
or
int3
jno
mov
inc
xlat
scas
lret
jl
test
adc
pop
push
mov
mov
int
stos
inc
loop
adc
jo
das
sub
push
pop
shll
pop
xchg
sbb
dec
mov
std
dec
addr16
jne
test
lea
pop
pop
hlt
nop
aaa
and
inc
sub
shufps
addl
imul
mov
jne
xchg
out
mov
or
jno
sbb
lret
orb
cltd
inc
cmp
ret
mov
add
movsl
mov
aas
push
adc
push
ret
insb
jae
mov
out
cmp
or
in
jo
out
cmp
sub
cmp
int
inc
mov
adc
mov
sub
and
rorl
dec
ds
xor
adc
push
lret
nop
cmpsl
rclb
pop
fcomp
sbb
sbb
dec
test
jp
fnstcw
xor
jle
push
fsincos
mov
das
xchg
scas
push
push
dec
inc
sbb
jge
cmp
jg
adc
dec
add
jbe
test
xchg
out
icebp
inc
data16
lahf
shll
push
mov
mov
sahf
ror
mov
mov
es
fisttpll
jl
mov
ret
pop
xchg
push
shll
mov
push
xchg
mov
insb
add
push
cmp
xor
int3
ret
push
scas
inc
popf
mov
jmp
insl
pop
sub
xorl
mov
into
inc
dec
push
jl
shlb
enter
push
ret
jge
out
cltd
xchg
sub
adc
push
clc
xchg
mov
or
mov
cmp
sub
sbb
stc
mov
xchg
push
pop
mov
rorl
in
jp
jl
adc
pop
lahf
lods
ljmp
sub
ljmp
jecxz
inc
push
sbb
jge
cld
mov
push
jecxz
lahf
and
mov
out
jns
loopne
push
lds
repz
popf
pop
hlt
dec
sub
xchg
jne
mov
add
in
pop
gs
pushf
cmp
inc
dec
adc
xor
mov
xchg
push
xchg
sub
pshufw
adc
sub
pop
les
pop
test
or
sub
or
add
insl
aam
xor
dec
scas
inc
mov
dec
decl
mov
sbbb
add
shl
xchg
scas
fwait
sub
sbb
pushf
mov
xor
cmp
call
mov
movsl
xchg
xchg
xchg
adc
xlat
outsl
cmp
mov
mov
or
jge
jno
cli
out
lret
push
push
ret
popa
add
dec
push
repnz
adc
xchg
aam
sbb
xchg
push
jle
and
sub
ret
fwait
shll
cmpsb
inc
adcb
jne
cwtl
and
cmp
ljmp
scas
push
xor
push
jne
dec
in
data16
pmaxub
mov
orl
sub
ret
jp
dec
popa
outsl
mov
lea
imul
sub
xor
mov
dec
adc
cmp
popa
adc
jo
in
push
fwait
add
es
add
pusha
sahf
imul
push
dec
inc
rorb
add
daa
jb
and
shrl
lret
push
cs
push
pop
jecxz
mov
idivb
out
pop
mov
push
xor
stc
test
mov
dec
inc
test
mov
pop
jg,pt
cmp
aaa
pop
movsb
enter
les
scas
or
adc
sub
sub
jle
scas
cli
lods
sbb
push
mov
sbb
jo
cmpsl
stos
jp
jo
xor
xchg
ss
and
sbb
leave
in
xchg
loop
mov
inc
aas
cli
mov
aad
sbb
inc
fldenvs
pop
add
push
insl
shrb
mov
sub
repz
imul
fldt
sub
sub
aas
fstpt
pop
loopne
mov
sbb
ret
mov
or
pop
xchg
popa
add
hlt
movsl
repnz
xor
inc
sbb
jbe
xor
inc
xor
imul
cmp
lods
arpl
test
push
cld
cli
push
enter
ret
jae
cmpsb
pop
out
mov
imul
pop
sti
rcrl
ret
rolb
nop
mov
addb
xor
icebp
xchg
xor
add
shll
popf
js
arpl
test
fwait
mov
outsb
fwait
xor
adcb
and
adc
or
cli
dec
mov
fstps
stos
jbe
inc
lea
fwait
mov
shlb
outsb
cmpsb
cmpsl
mov
popf
inc
stc
nop
inc
sub
push
dec
aam
gs
fiadds
test
and
sbb
ret
test
ds
enter
leave
das
das
push
scas
jne
dec
or
je
push
in
and
arpl
std
jmp
int
mov
pop
xchg
push
jb
icebp
insb
scas
cmp
mov
ljmp
push
mov
mov
mov
ret
rcrl
cmpsl
xchg
cs
test
sti
sbb
popa
or
decl
mov
add
sahf
cmp
add
jns
jns
sti
push
mov
inc
out
jl
mov
pop
sahf
cwtl
cltd
lret
pushf
add
xlat
sub
cwtl
and
testb
lods
outsl
push
lcall
fisubrs
fldt
cltd
pop
in
mov
mov
lcall
adc
jne
xchg
repz
or
inc
push
sti
mov
mov
push
cld
mov
jnp
inc
lods
xchg
insb
pop
hlt
jp
or
mov
xor
add
cmp
icebp
or
adc
xlat
jl
out
test
mov
sbb
xchg
inc
xchg
arpl
pop
xchg
scas
test
adc
xchg
jae
mov
and
sub
mov
pop
stos
push
scas
jmp
dec
add
add
inc
imull
fsubrl
jle
push
cmp
ret
xchg
lret
loope
inc
sbb
jecxz
loope
or
mov
add
sub
insl
and
add
lods
stc
cltd
sub
mov
je
fmuls
aaa
scas
dec
pop
jmp
loopne
mov
lret
adc
jl
xor
push
or
cmc
cmpb
je
push
rcrl
lods
icebp
pusha
mov
dec
push
out
xchg
repz
andb
outsb
cmp
inc
pop
repnz
pushf
xchg
adc
dec
addr16
mov
lcall
test
cmp
stc
in
mulb
add
mov
adc
mov
inc
mov
imul
mov
mov
es
mov
test
sub
fscale
cmp
bound
into
jb
inc
ss
mov
push
dec
sub
cmp
loopne
int3
xor
das
and
jne
mov
adc
push
and
neg
rorl
or
push
clc
sbb
sbb
addr16
jbe
out
mov
cmc
mov
add
jp
xchg
fidivs
loop
sub
sub
dec
xor
sub
fcomip
fstpt
cmp
xor
loope
xlat
fimuls
sbb
aad
push
xchg
repz
fs
jle
mov
jg
cmpsb
ds
into
adc
pop
out
xor
jmp
mov
daa
pop
fadd
test
and
icebp
sbb
lods
sbb
and
enter
into
inc
int3
mov
ja
lahf
into
push
dec
mov
or
push
mov
loop
xchg
jmp
loop
in
xlat
rcrb
movsb
out
push
lret
test
mov
sub
push
jb
inc
or
adc
dec
and
sbb
push
js
mov
adc
pop
aad
push
jecxz
insl
add
jns
pop
sub
sbb
xor
xchg
xchg
push
xor
jge
repnz
lods
mov
std
cmc
xor
addl
mov
fs
push
or
int3
or
test
dec
mov
outsl
test
insl
lahf
leave
daa
iret
pop
icebp
js
jle
mov
fimull
xchg
cmp
bound
shrb
jmp
inc
xchg
ja
xorl
fs
jne
push
fildl
inc
gs
push
pop
add
xchg
sub
lret
xchg
aas
mov
jle
xor
enter
shll
fwait
pusha
lds
push
xor
push
jo
lcall
mov
cmp
loop
fnsave
add
fisttpll
or
cmpsb
and
dec
xor
push
mov
mov
jp
je
dec
dec
pop
pop
out
add
call
inc
push
sub
xchg
xchg
sbb
dec
data16
ret
cltd
lods
rorl
xor
repnz
out
cmc
sbb
xchg
fldenv
mov
sub
lcall
lods
into
mov
icebp
jns
aas
es
jne
add
insl
add
mov
dec
mov
lods
dec
cmp
lods
xchg
push
pop
into
inc
aaa
addl
cwtl
clc
push
inc
test
cltd
arpl
mov
jmp
and
push
fisttpll
xchg
in
sbb
cli
or
ds
add
xchg
add
sub
xor
out
mov
ja
aam
loope
sahf
pcmpgtb
repnz
jge
jnp,pn
mov
push
adc
je
push
test
aas
push
add
ljmp
icebp
mov
ds
push
aas
data16
xor
lret
sub
call
fstp
mov
jbe
scas
pop
in
leave
and
repnz
mov
xchg
and
lock
lods
in
test
or
test
loop
jp
repnz
stc
mov
test
mov
incb
cltd
mov
dec
jbe
jmp
sbbl
je
repz
push
xor
je
jmp
xchg
xor
add
addr16
cwtl
cmpb
mov
cs
mov
dec
sbb
xchg
or
jbe
inc
adc
rorl
mov
sub
fsts
cmp
fstl
fildl
add
and
sub
das
xchg
lods
test
xchg
iret
mov
ljmp
cwtl
sti
icebp
push
and
lret
pop
aaa
or
leave
pop
lcall
and
or
pop
inc
xor
cmpsb
das
sti
cmpb
xor
gs
push
daa
mov
cmpsb
sub
push
and
mov
imul
rcll
dec
sbb
in
orl
adc
sbb
or
xchg
inc
dec
divl
out
mov
jge
sub
cwtl
inc
inc
or
dec
mov
lret
push
pop
adcb
push
xchg
decl
sub
jmp
mov
imulb
movzbl
mov
xchg
mov
xchg
not
sub
xlat
test
jmp
mov
pop
pop
sub
outsl
fwait
push
inc
cli
lret
dec
sub
mov
int3
leave
push
adc
xchg
push
test
or
hlt
sub
loopne
imul
inc
sub
mov
pusha
jno
sbb
in
sbb
repnz
ss
mov
push
mov
push
jl
int3
push
push
out
pusha
jnp
out
lods
sbb
mov
jmp
shll
sub
ret
es
test
and
pusha
mov
lds
push
test
fstl
dec
test
dec
xchg
es
fidivl
mov
cld
jp
inc
rcr
adc
mov
fs
lods
mov
and
je
fistpl
in
mov
out
mov
jge
cmpb
adc
add
sbb
dec
xchg
cmovae
fs
test
lods
cli
arpl
sbb
fmuls
scas
xor
faddl
cmp
push
xor
ficoms
ret
add
insl
fnstcw
add
inc
mov
stos
xor
outsl
scas
inc
lods
fsubp
dec
rcll
add
mov
pop
push
orl
fsubl
jecxz
or
xlat
mov
sub
in
sbb
rclb
adc
push
lret
movsl
dec
xchg
aas
ret
mov
adc
in
les
ret
and
cmp
movsl
loope
and
inc
dec
out
adc
xchg
and
fnstcw
cmpl
pushw
ror
sti
outsb
lock
lret
or
mul
popf
push
mov
cmp
test
push
push
push
xchg
insl
push
lcall
add
mov
inc
cmp
xchg
cmp
aaa
xchg
ret
lock
addb
sub
xor
dec
mov
ret
adc
jl
pop
inc
loop
js
loope
mov
fsubs
insb
or
or
and
cli
jo
ja
adc
sysenter
sub
data16
sbb
jmp
in
idivl
or
js
mov
sti
mov
inc
xor
imul
push
faddl
jo
in
add
mov
sub
dec
adc
ja
push
mov
pop
xor
push
jmp
jno
dec
jb
jge
imulb
xchg
popa
fidivrs
push
xchg
ret
sbb
push
js
outsb
xor
jl
sbb
jmp
add
clc
fwait
das
int
stos
inc
loope
jge
and
cmc
mov
xor
stc
pop
insb
push
mov
jae
lret
imul
fistpl
push
jecxz
ds
xor
xor
inc
mov
rolb
flds
imul
add
inc
cwtl
cmp
xor
mov
sbb
xchg
mov
pop
inc
xor
out
lds
stc
ss
mov
gs
inc
scas
fisttpl
mov
icebp
push
push
mov
daa
pop
and
add
shlb
cmp
fmull
xor
in
rorb
insl
jb
fdivrs
adcb
jp
out
and
out
xchg
sarl
rcl
idivb
roll
insl
gs
and
adc
insl
ja
push
dec
repnz
data16
test
ret
lods
fnstcw
adc
lcall
pop
lahf
or
push
mov
out
cmpsb
scas
add
out
dec
xchg
xchg
lds
sub
ret
dec
xor
stc
xchg
test
repnz
push
fsubrl
adc
aad
cmp
test
and
iret
arpl
jmp
jb
cmc
dec
or
mov
popf
pop
outsl
xchg
aas
cmp
xor
iret
jl
lods
add
xor
int3
jecxz
aad
jns
push
pop
sahf
sub
dec
mov
xchg
jl
or
and
inc
ljmp
lcall
int
loop
pop
fsub
in
add
add
jecxz
cmp
adc
pop
jmp
adc
jo
sub
or
mov
cs
jle
pop
dec
xor
cmp
pusha
or
jle
pop
sub
mov
xchg
fiadds
lret
test
das
jp
push
negb
xorl
jb
push
or
push
ds
or
dec
in
push
fstpl
ljmpw
lret
sub
loopne
out
dec
xor
add
mov
shll
xchg
dec
repnz
fldt
dec
inc
movl
xorb
or
maxps
push
pop
ljmp
dec
pop
data16
fmuls
inc
jo
popa
test
xor
lods
in
xor
ss
insb
testb
jb
in
cld
xchg
cmp
pop
mov
lods
add
mov
dec
scas
or
mov
aam
data16
xor
cmp
mov
inc
xchg
movsl
cmp
je
push
jg
sub
and
mov
mov
pop
mov
push
cmp
fwait
adc
mov
and
ret
xor
push
push
jp
push
sub
inc
je
cmc
dec
fcmovnb
das
sbb
mov
addl
mov
push
enter
ljmp
sbb
aaa
add
incb
lret
push
mov
mov
or
mov
out
addr16
cmp
out
lret
movsl
dec
movsl
sub
xchg
popf
and
mov
stos
xchg
cs
addb
scas
test
bound
dec
inc
mov
fnstsw
out
xor
ja
sub
sbb
mov
mov
adc
emms
out
mov
lods
inc
mov
rcrb
insb
fists
push
int3
sbb
and
jl
into
pusha
adc
pop
add
sbb
dec
jle
and
lods
insl
test
mov
mov
add
inc
xor
push
imul
aaa
arpl
aaa
fmuls
add
scas
mov
test
jecxz
fisubrl
call
insl
in
adc
mov
sub
or
in
cmp
icebp
lret
sbb
mov
lret
ljmp
repz
lock
pop
adc
enter
in
cmp
push
xchg
ljmp
outsb
cmp
inc
or
jb
shl
push
scas
mov
out
jne
inc
cmp
lret
xchg
fwait
addr16
adc
sarl
inc
or
sub
fscale
cmpsb
mov
lret
mov
mov
or
sub
and
or
and
dec
leave
rcrl
lock
fmul
loope
jg
cmpsl
arpl
push
mov
pop
es
popa
jle
mov
int
add
xlat
fwait
cmpsb
aam
xchg
lret
jnp
sbb
dec
pop
dec
jecxz
shll
or
xor
movsl
mov
pop
in
jmp
rcll
sub
stos
pop
and
mov
in
jne
add
or
sahf
or
xchg
mov
jl
sub
sti
xchg
into
adc
icebp
add
mov
pusha
repnz
fldenv
cmp
bound
xor
xor
cwtl
xor
movsl
fidivrs
setns
je
jns
or
cmp
dec
cmpsl
jno
aam
push
out
leave
push
inc
test
mov
jb
mov
js
sub
pop
jb
xor
and
or
jge
notb
lea
add
or
addl
mov
ljmp
stc
pop
sub
dec
xchg
pop
and
repz
add
xchg
jecxz
jno
adc
arpl
adc
les
inc
mov
in
mov
lret
add
add
jnp
outsl
dec
xor
or
cmpsb
cmpsl
lcall
cmpsb
out
data16
outsb
mov
js
sbb
and
xchg
add
imul
add
cs
orl
aas
cmp
xor
testb
imul
arpl
mov
adc
push
mov
or
dec
mov
push
clc
lcall
cltd
ljmp
fistl
out
leave
mov
pop
pop
popf
loop
movsl
imul
fcom
mov
in
or
aas
add
xchg
in
fstpl
or
push
mov
mov
jge
mov
xchg
shlb
into
pop
fisttpll
into
dec
dec
popf
inc
inc
and
cmpl
mov
xchg
stos
repnz
imul
mov
lret
cmpsb
jae,pt
rcr
stos
cmpb
mov
test
adc
mov
cmp
dec
cmp
repnz
jae
repz
dec
mov
sahf
sub
jno
test
fld1
inc
mov
push
pop
lret
add
js
mov
xor
mov
and
mov
jbe
jbe
mov
loope
jp
or
sub
xchg
push
pop
mov
je
imul
mov
pop
jl
jmp
jg
add
lea
out
lods
jl
xorl
xor
or
lock
mov
xor
ljmp
and
nop
repnz
cwtl
testb
fbstp
mov
adc
sbb
jecxz
imul
aas
bound
loopne
jmp
sub
sub
xor
mov
jle
leave
pop
inc
scas
mov
pop
imul
mov
sahf
sbb
mov
jg
imul
lahf
pop
xchg
addr16
fmull
mov
xchg
hlt
mov
mov
sub
xor
into
jbe
cmpsl
test
clc
xor
cmp
mov
scas
ds
in
jnp
push
decb
rclb
push
jle
jno
jae
sub
cmp
xor
xchg
imul
mov
clc
push
fildl
xchg
fldenv
cwtl
pop
lds
outsl
out
in
mov
inc
pop
add
mov
aad
inc
ret
out
pop
mov
and
ja
pop
ret
adc
add
dec
dec
jle
xchg
repz
sbb
in
subl
in
cmp
mov
push
popl
or
sub
insb
and
insb
xchg
dec
iret
sbb
mov
xchg
push
dec
add
push
out
sub
jbe
stc
inc
xchg
adcl
jns
pushf
test
shl
fidivrl
sbb
and
push
stc
aas
mov
dec
add
mov
ja
call
xor
and
icebp
xlat
cmp
sub
mov
jge
xlat
xchg
out
imul
xchg
inc
fisttpl
push
lahf
dec
mov
lock
insb
divb
adc
pusha
insl
jmp
push
and
dec
add
mov
stos
sub
adc
xlat
js
sub
das
jb
jge
push
xchg
xor
pop
sti
inc
sub
push
mov
xor
inc
xchg
test
stos
outsl
sub
xchg
xchg
or
mov
push
or
int3
pop
and
push
xchg
push
xchg
std
jns
and
jo
lods
shl
aad
jg
rolb
sbb
rcll
repnz
xchg
es
gs
rclb
repnz
xchg
sub
out
mov
mov
jecxz
iret
mov
jnp
mov
xor
lods
lret
or
fcompl
jg
lcall
mov
or
xor
roll
ljmp
jl
loope
das
test
leave
jo
add
sar
pop
icebp
or
cltd
mov
rcr
fildll
addl
pushf
cltd
sub
lods
xor
mov
in
daa
jns
mov
or
or
jmp
cmc
in
out
jge
std
xchg
xchg
or
xlat
das
or
push
fistps
scas
adc
mov
push
popf
ds
push
lahf
loopnew
test
dec
jle
fucomip
mov
cli
lds
and
lret
jnp
push
push
fwait
xchg
lret
in
mov
push
sbb
add
ss
add
loope
in
sahf
rorl
xor
or
sbb
jo
mov
int3
jae
cmp
leave
xchg
movsl
loope
fildl
rcrl
xor
push
push
stos
rorb
push
pop
inc
ffreep
stos
dec
in
and
xor
add
sti
int3
shrl
cwtl
inc
outsb
dec
mov
mov
or
mov
inc
mov
jnp
and
or
inc
jp
fimull
sub
mov
lret
push
shrb
lret
mov
lods
push
lahf
adc
mov
rep
jbe
lahf
sub
in
or
sbb
icebp
sub
stos
pop
mov
pop
jmp
sub
adc
jecxz
lret
insb
call
jmp
pop
jecxz
sahf
fildll
mov
xchg
jne
mov
arpl
out
divl
lods
or
or
push
and
push
push
xor
ret
sub
fistpll
cmp
pop
lret
or
test
stos
mov
mov
xchg
cmp
aas
arpl
sub
jne
sbb
icebp
ror
jg
jb
shll
adc
iret
icebp
mov
inc
and
lods
pop
rorb
push
mov
aam
cld
test
pop
mov
movsl
int3
pop
negb
push
inc
ds
pop
lret
mov
in
adc
loop
pop
cmp
jmp
sub
test
pop
outsl
push
inc
sbb
or
imul
test
jae
sub
pop
inc
dec
sub
pop
sub
pop
pop
rol
in
mov
adc
shl
adc
and
inc
nopl
cld
jg
jl
mov
mov
fistpll
leave
adc
data16
insl
dec
and
push
pop
in
clc
and
jbe
push
popa
fstps
add
ret
add
in
xor
pop
bswap
pop
cmpl
sbb
in
push
iret
lods
fs
cmc
mov
xchg
pop
enter
aam
sub
xchg
push
ds
daa
ffree
pop
outsb
cmp
and
jb
cwtl
loopne
jbe
xor
xorl
pushf
jecxz
enter
loopne
ss
sbb
jmp
outsl
sbbb
inc
popf
stc
jae
shrb
lds
sbb
scas
adc
push
lock
in
or
adc
sbb
sbb
pop
bound
shr
out
fs
fstps
hlt
or
dec
jne
insl
push
mov
ret
cmp
xchg
xchg
xlat
ud1
mov
cmp
xor
add
mov
lods
xor
bound
or
shrb
pop
mov
mov
xchg
push
inc
pusha
jnp
loopne
ret
scas
pusha
scas
rclb
xchg
sub
popf
es
cmp
jl
mov
mov
rcr
xchg
lea
pop
lahf
mov
cmc
pop
mov
push
xchg
fwait
gs
daa
mov
aad
in
pop
and
inc
mov
out
push
xchg
int3
lock
dec
lcall
add
jb
popf
dec
lcall
mov
cmpsb
cltd
or
and
add
sbb
dec
lcall
aad
push
in
mov
jl
mov
loopne
ja
leave
push
lahf
push
cli
and
sbbb
rclb
cmpsl
dec
rclb
gs
xchg
xlat
adc
fmul
push
adc
add
scas
das
and
mov
stos
inc
sbb
and
mov
pop
xchg
push
lods
loopne
icebp
subl
sbb
and
dec
outsl
xchg
arpl
cmp
inc
imul
and
fistl
out
push
test
push
jg
fildll
push
push
push
fidivrl
js
add
dec
mov
pop
fisttpl
int
push
negb
arpl
mov
in
mov
fsubrl
inc
push
jmp
sub
add
mov
dec
mov
idivb
jp
fildll
cld
sbb
xchg
cld
aaa
out
loop
xchg
mov
rcr
cmc
fmull
shlb
or
je
xchg
cmp
sub
push
nop
mov
fsub
mov
mov
adc
lods
cmp
addb
cmp
aaa
sti
fwait
sbb
or
cli
popa
push
pop
mov
mov
mov
inc
pop
and
loope
cld
mov
ss
dec
loope
cmp
inc
jmp
repnz
negl
jp
stos
out
mov
add
mov
jno
sbb
sub
jecxz
xchg
imulb
dec
sbb
xlat
and
test
cli
adc
repnz
popa
aaa
jg
mov
cwtl
icebp
cmpsb
icebp
in
dec
in
push
mov
cmp
out
jbe
mov
lea
out
sub
test
mov
loopne
sbb
add
xchg
push
pop
mov
sbb
aad
into
lock
mov
pop
leave
lock
lcall
test
movsl
lds
pop
push
arpl
jmp
lock
push
sarb
jl
out
cmp
or
fidivs
mov
fldenv
and
insl
jmp
je
xchg
ja
xchg
or
nop
scas
and
bound
and
jns
sub
movsl
cli
hlt
mov
roll
inc
popf
ficompl
lret
insl
cmp
push
pop
and
dec
dec
pusha
cmp
stos
and
xor
and
mov
mov
xorl
mov
xor
pop
jo
clc
sub
cmp
rcl
dec
and
ficompl
lods
xchg
arpl
push
aam
xchg
jnp
int3
jne
mov
xchg
jmp
cltd
xchg
xor
xchg
and
andb
mov
std
mov
inc
jecxz
mov
mov
imul
ret
shlb
mov
ja
in
sarl
xor
add
push
in
sbb
jo
call
xchg
or
rcrb
hlt
stc
cli
ss
xor
les
push
fmuls
bnd
xchg
lea
pop
dec
sbb
push
loop
roll
sub
cmp
scas
sbb
and
inc
mov
xchg
jecxz
pop
imul
jae
in
xchg
adcb
loopne
jle
in
int3
jae
cmp
dec
pop
jg
or
sub
mov
mov
jno
dec
jmp
fiaddl
or
add
scas
and
cld
xor
in
jbe
inc
and
outsb
out
repnz
test
insl
push
push
cld
mov
jp
jle
lret
mov
cmp
mov
pop
rcr
ret
das
test
and
push
js
leave
fcoml
ds
sub
test
fdivr
xlat
xchg
fsts
gs
mov
mov
mov
jnp
sub
pusha
fdivrl
jae
out
loopne
clc
mov
js
xchg
mov
test
out
add
jne
pusha
mov
ds
cmp
jb
add
inc
cwtl
cmp
xchg
inc
nop
in
mov
lahf
and
aas
adc
stos
xor
dec
aaa
lcall
mov
sti
and
lock
cmp
push
ljmp
cmc
xchg
jnp
sahf
sub
loopne
subb
subb
je
sbb
add
subb
popf
mov
in
dec
movsb
rorl
lods
fxam
mov
mulb
je
cld
sub
in
adc
cmp
fwait
inc
push
aad
sub
pop
dec
movsl
jne
stos
sbb
and
inc
nop
aas
js
out
sbb
lret
lods
outsl
add
push
scas
dec
in
sub
js
adc
jns
ja
decb
dec
dec
test
subb
jle
aam
cmc
inc
mov
shll
sarb
dec
and
roll
pop
mov
push
movl
scas
fiadds
push
test
pop
leave
cwtl
mov
add
or
push
scas
lds
cmp
rcr
push
jge
pop
jno
mov
mov
fwait
lcall
or
sbbb
or
sbb
nop
mov
dec
xchg
add
push
xor
pop
sub
inc
addr16
loopne
mov
sub
pop
pop
mov
mov
mov
fisubl
cmpsl
mov
stos
pop
sti
xlat
jb
std
sbb
push
push
scas
je
push
cvtdq2ps
cmp
push
pop
fwait
pop
lock
mov
cltd
adc
mov
add
das
push
add
loopne
les
and
fnstsw
mov
dec
testl
cmp
mov
push
pop
or
cmpsb
jnp
jl
xor
aam
mov
lret
call
mov
dec
mov
dec
paddq
fnsave
cmp
fnsave
jb
xor
xchg
inc
push
dec
outsb
insl
hlt
sbb
dec
out
cmp
nop
cmp
aas
sahf
mov
fnstsw
aam
aas
sbb
mov
sub
push
lock
and
cmp
xor
out
fstps
push
fcomip
adc
xchg
frstor
cmpsb
loopne
fcmove
and
sub
xor
add
xchg
fisubs
lods
filds
jbe
jb
fsub
push
sub
leave
add
xchg
and
int
outsl
jae
cltd
aad
stc
fisubl
cltd
mov
and
in
ret
lahf
dec
decb
outsl
jae
push
sub
dec
sahf
mov
dec
sahf
jns
iret
les
xchg
int3
lock
gs
clc
xchg
pop
jecxz
mov
pop
add
lahf
sub
mov
xchg
ret
imul
cvtps2pi
in
aam
jno
rorb
adc
hlt
jg
or
gs
lret
sub
cld
cmpsl
arpl
ja
and
pop
lods
add
xchg
xchg
mov
out
psubq
js
cmpsb
repz
mov
sub
icebp
stc
aas
addr16
cld
outsl
mov
lock
lret
test
out
out
lcall
mov
lret
sub
repnz
xchg
and
xor
fistl
jmp
cli
mov
arpl
das
jge
mov
movsl
inc
fwait
inc
aaa
shl
stc
add
add
test
lods
stc
mov
subl
sbbb
fwait
jno
inc
sahf
neg
jae
mov
sbb
shrl
mov
cli
ret
sub
ret
sbb
lods
fld
enter
jg
imul
imul
in
mov
inc
and
mov
sub
xor
lahf
bound
imul
dec
xor
cmp
ficompl
mov
ds
loop
push
ret
or
or
cmp
cmc
jecxz
and
sub
cmc
adc
jle
xor
adc
mov
cmp
cs
out
push
ret
push
xchg
cmp
mov
call
loop,pn
and
push
loopne
push
mov
pop
push
sbb
pop
insl
pop
cmpsl
or
jecxz
mov
fadds
sbb
mov
in
inc
jmp
lea
int3
pop
and
xor
pop
pop
cmc
mov
in
stos
pushf
xor
sub
jnp
arpl
fsubl
mov
mov
pop
rclb
rolb
fistps
dec
adc
stos
vphaddbq
outsl
push
testb
in
frndint
jmp
fdivrp
add
sti
je
xchg
jbe
dec
das
bound
je
sub
push
sub
hlt
jmp
lret
hlt
js
mov
cmp
mov
push
push
mov
std
jle
and
inc
loop
pop
cli
rcrl
sub
lret
jnp
dec
pop
and
ret
cmp
mov
push
add
or
test
test
sbb
in
ret
aad
pop
adc
clc
push
into
mov
pop
lret
rorl
xor
and
fcmove
or
sub
lds
aam
shll
bnd
mov
mov
jnp
jne
mov
mov
scas
bound
inc
mov
adc
sbbb
das
inc
mov
lea
cld
ss
dec
push
hlt
pop
sbb
dec
adc
das
mov
pop
out
daa
cmp
ss
leave
cmp
jg
or
mov
insl
rorl
mov
shlb
sub
and
dec
sbb
cs
sub
cmp
add
cmp
dec
inc
sub
mov
lret
repnz
xor
fcoms
adc
out
mov
data16
xor
jo
pop
mov
test
sub
repnz
jge
fistps
shl
push
ja
inc
aaa
je
add
jo
lock
cltd
icebp
or
shrb
push
ja
add
jne
sub
xchg
xor
jle
leave
sub
outsb
popa
push
xchg
test
cwtl
in
fisttps
arpl
subb
outsl
lret
nop
rcll
arpl
push
fdivrs
and
cmp
or
dec
push
cld
add
cmp
jp
rolb
xchg
scas
or
lret
and
pop
xchg
jle
pop
jmp
inc
cmp
dec
into
stos
lods
sub
int
pop
adc
std
lcall
mov
or
aad
cmp
push
or
cmc
rcll
icebp
jnp
or
clc
lock
xor
out
cmp
arpl
jge
dec
jl
inc
lret
je
aas
daa
fidivs
lock
cs
mov
jl
pop
push
xchg
pop
lret
pop
push
dec
sub
movsb
or
arpl
movsb
int3
xor
ret
or
jg
and
jmp
nop
repnz
fistpll
rcrl
rol
fmulp
fdivrp
and
add
ficompl
mov
xor
enter
es
ficoml
adc
cmpsl
xchg
fsubs
xchg
shlb
mov
push
testb
mov
xor
or
rolb
mov
xchg
xchg
jno
orl
mov
sti
mov
sti
fimull
mov
loop
mov
shll
lock
stc
out
sub
mov
int
dec
sahf
std
cmp
ds
jle
fimull
mov
xchg
mov
lret
mov
add
cmpl
imul
sub
or
scas
gs
lahf
inc
mov
ficompl
lret
sub
out
loope
sub
scas
cltd
ja
nop
iret
ficomps
mov
xchg
jno
pop
xchg
paddsw
dec
jb
mov
in
nop
movhps
fdivrp
std
cmp
push
lds
fyl2xp1
in
in
pop
or
pop
hlt
pushf
dec
add
pushf
mov
stc
or
fidivrl
aas
imul
movsb
fstp
adc
or
jns
pop
out
ret
xor
push
or
xchg
xor
cmc
push
insl
ja
mov
ret
movsb
loope
lods
jns
xor
shrl
popf
push
enter
pop
jo
fadds
xchg
rcll
call
or
ret
cmp
inc
adcl
inc
cmpsb
or
or
xchg
data16
mov
ja
and
es
sti
enter
nop
rolb
adc
and
aad
pop
repnz
push
cmpsl
pop
js
rcrl
insb
lea
jle
pop
xor
nop
sub
scas
test
and
jo
insl
fimull
loopne
push
cmp
movsl
cli
addb
sbb
adc
cmp
dec
mov
add
jnp
pushl
sub
cmpsb
test
mov
lcall
sbb
lods
ds
xorl
inc
stos
pushf
adc
inc
push
popa
leave
pop
push
scas
dec
fldenv
jmp
xor
jb
add
dec
cs
mov
pop
sbbb
lcall
mov
cwtl
test
nop
push
jg
pop
test
imul
xor
jecxz
lea
xchg
movsb
adc
cmp
pop
adc
push
push
jbe
in
out
fcomps
nop
js
je
in
jle
pop
aaa
adc
add
imul
and
iret
pop
xchg
adc
insl
js
stos
pop
xchg
js
loope
xchg
sbb
pop
push
mov
ret
sub
aas
ret
lcall
mov
je
mov
mov
add
and
mov
icebp
sti
data16
add
loope
pop
jne
ljmp
push
sub
push
negb
mov
sbb
xor
push
fwait
push
das
mov
inc
mov
cmp
jg
enter
lret
mov
out
aam
idivl
sub
jae
push
pop
dec
or
mov
inc
sti
cli
cmc
mov
push
inc
icebp
or
sub
fbld
sbb
das
fnstenv
sub
lret
es
test
inc
sub
pop
pop
clc
in
jno
data16
pop
xor
aas
inc
and
pop
mov
push
or
pop
xchg
sbb
pop
pop
test
mov
das
mov
push
gs
sub
movsl
cmp
adc
je
ds
jecxz
mov
jp
adcb
mov
cmp
movsb
push
mov
aam
cmp
in
mov
cmp
adc
fadds
pop
std
push
pop
imul
jns
cs
jecxz
inc
add
cmpsb
in
popa
sub
inc
pop
test
es
outsl
imul
lock
pop
pop
cmc
or
mov
ss
xchg
in
or
mov
cmc
xchg
ljmp
jo
cmpsb
es
mov
xchg
dec
sbb
xor
and
adc
sti
xchg
push
into
pushf
test
xor
repnz
push
lods
comiss
loop
sub
pushf
jne
inc
into
sub
addr16
or
js
mov
mov
xor
cmp
lock
cld
shrb
lret
cmp
xchg
sarb
lds
sti
and
inc
insb
jae
jmp
push
or
bnd
in
sub
mov
fimuls
cmovb
clc
lea
push
adc
imul
and
gs
ljmp
jmp
addr16
movsb
cmp
push
pop
das
and
xchg
pop
loop
scas
jmp
xchg
not
adc
mov
mov
imul
or
push
iret
and
jl
or
xchg
cmpsl
mov
xor
iret
jns
push
jno
cmp
in
pop
jb
xchg
ljmp
cmp
inc
adc
sbbb
mov
sar
adc
ds
lahf
das
jb
fwait
outsl
fsubl
xorb
add
divl
cmp
jno
dec
fwait
lcall
lcall
sbb
inc
arpl
and
loope
into
mov
pop
or
cmp
jne
push
push
dec
ret
mov
push
push
pop
add
xchg
xchg
xorw
pop
mov
insl
push
shrl
sbbb
cmp
int
test
and
addb
xor
and
inc
jmp
sarl
add
dec
les
push
ds
incb
psllw
gs
mov
out
scas
leave
addr16
add
sub
jnp
add
cmp
push
and
pop
les
xchg
add
fwait
sub
es
mov
int
scas
push
inc
mov
adc
ret
lcall
pop
rcrb
pand
mov
test
mov
jbe
xchg
jnp
jbe
inc
stos
dec
sahf
jnp
or
mov
cmc
test
add
xor
lock
pop
call
outsb
lahf
shlb
das
mov
test
popf
cmp
pop
pop
add
adc
mov
mov
cmp
sti
jg
mov
xchg
xor
jl
push
orl
dec
loope
mov
push
jecxz
cmp
jl
into
adc
out
dec
loop
pushf
sub
gs
fdivs
cltd
mov
leave
out
dec
mov
xor
xchg
sub
je
imul
mov
aad
cmp
add
movsl
pop
cmpl
fcoms
mov
mov
scas
mov
mov
icebp
add
jbe
and
scas
jae
sub
fistl
lret
loopne
dec
lods
jbe
stos
shl
pop
outsb
mov
jae
out
jl
mov
push
sub
push
and
jno
sbb
inc
fisttpl
sbb
ss
stc
jp
enter
mov
cmp
cmp
mov
pop
int
xchg
popf
repnz
jae
mov
pop
outsl
leave
testl
jge
push
andl
in
adc
jo
shlb
cmp
imul
jge
mov
jns
push
in
and
and
push
sbb
rcll
lret
int3
incb
mov
ret
dec
repnz
es
pop
add
sub
sbb
pop
pop
dec
push
ret
subb
rorl
xor
jo
decl
jb
cmp
ficoms
and
lods
inc
pop
dec
push
xchg
inc
cmp
push
jb
jg
mov
jge
inc
sti
inc
and
icebp
mov
cmp
je
sub
pop
lcall
loope
mov
data16
fistpl
outsl
cltd
or
mov
ljmp
pop
pop
cmc
sbb
into
xor
lds
fwait
adc
adcl
sbb
mov
bnd
ljmp
dec
hlt
fnstcw
pop
es
std
xrelease
mov
dec
inc
xchg
loop
adc
into
xor
cmp
add
push
jnp
add
in
enter
scas
xchg
movsb
test
mov
jecxz
xor
cli
lret
mov
sarl
mov
mulb
jne
inc
arpl
int
push
iret
std
jg
aad
sbb
cmp
repz
and
repnz
or
mov
mov
mov
cmp
cmp
sarb
in
sub
fwait
rorl
inc
sub
shlb
sti
push
mov
out
js
idivl
pusha
cmp
push
push
xchg
cmpsl
jne
xchg
aaa
ds
dec
sbb
int
push
push
pop
sahf
aad
pop
out
ss
jmp
inc
jbe
pop
push
xlat
mov
push
push
or
shlb
mov
mov
lea
mov
das
mov
jns
xor
daa
push
test
inc
ret
cmp
push
leave
mov
xchg
mov
inc
mov
cmc
lds
ss
mov
xor
fistl
mov
push
nop
or
or
lret
jge
add
mov
leave
insb
xchg
mov
or
repnz
and
aam
pop
pop
out
nop
stos
clc
popf
repnz
cmc
cmovns
andb
lret
dec
outsl
pop
cltd
sbb
std
mov
jge
imul
xor
mov
mov
dec
jno
call
cmp
xchg
push
and
add
movsl
int
add
outsl
cwtl
test
rcrb
pop
lock
jg
fwait
adc
xor
dec
jmp
fdivrs
pop
enter
mov
pop
xchg
lret
in
es
xchg
fdivrl
stos
add
sub
cwtl
push
xchg
push
movsb
mov
lret
and
push
hlt
mov
xchg
xchg
insl
adc
or
gs
lcall
jl
aas
scas
cmp
mov
inc
xchg
cs
xor
in
add
ds
xor
dec
and
dec
loop
push
cld
popa
or
or
loope
push
or
xchg
jmp
rcrl
push
mov
mov
addl
loopne
cmpsl
xchg
js
call
jge
shll
inc
push
xchg
mov
pcmpeqb
xchg
add
fidivrs
or
add
add
les
dec
mov
ljmp
jp
cld
xlat
fimull
push
dec
les
and
inc
faddl
in
movl
lcall
in
std
out
js
jl
mov
enter
push
imul
mov
mov
stc
cs
add
lahf
cmp
imul
nop
mov
mov
and
aam
add
cltd
mov
xor
movsl
pop
aad
mov
pushl
dec
jo
cmpsb
xchg
jl
xor
mov
loope
repnz
lret
repz
pcmpeqb
sub
ficoml
mov
je
aas
push
fstps
test
mov
pop
inc
jp
cmp
jge
clc
or
xor
xchg
loopne
and
fiadds
cltd
cmpsb
and
movsl
push
int3
out
lret
push
xor
cmp
sub
cmc
push
lds
shlb
in
fadds
cli
xlat
arpl
out
das
inc
sub
jnp
xor
pop
push
sbb
push
shrb
add
lea
sub
cmp
ljmp
movsb
xor
cmc
mov
ds
push
pop
loope
mov
outsb
aaa
dec
dec
jbe
add
lahf
mov
sub
mov
mov
jno,pt
ja
fwait
das
cli
rcrb
pop
stc
sub
ficomps
push
inc
xchg
rcrb
aas
push
mov
mov
addr16
mov
in
cmp
xchg
pop
fstpl
push
mov
jns
jg
rorb
loope
mov
mov
mov
scas
mov
loop
loop
js
xchg
pop
shlb
hlt
movsb
mov
sbb
mov
dec
addr16
sbb
push
mov
dec
bound
pop
adc
fildl
or
pop
cwtl
ss
aam
fstp
add
xor
out
inc
fwait
mov
or
nop
adc
push
das
addr16
bound
lcall
jnp
scas
js
addr16
out
pusha
pop
incb
dec
ljmp
mov
stos
jbe
aaa
ret
stos
loope
outsl
xchg
xorb
stos
mov
bound
ja
stos
mov
pop
pop
or
inc
cli
das
xor
les
adc
cmpsl
daa
fcomp
adc
movsb
cltd
xchg
cmp
pusha
lahf
push
daa
arpl
add
push
mov
cld
rcrl
pushf
or
mov
lock
mov
cmp
lea
cs
js
mov
push
push
or
or
sbb
shlb
mov
dec
fdivr
sub
cs
rcll
inc
xchg
push
mov
cmp
push
test
test
fs
cmpsl
inc
pop
sbb
ljmp
push
sbb
lret
sub
loop
or
in
push
or
inc
pop
or
add
pushf
jle
mov
pop
in
xchg
lods
js
in
mov
and
or
inc
dec
cmp
mov
adc
pop
ret
mov
push
and
movsb
sbb
jecxz
xchg
les
fldt
popf
daa
pop
cwtl
daa
push
and
push
jb
pop
add
pop
dec
shlb
roll
jns
call
dec
push
jb
jne
fisubl
inc
jbe
js
mov
jge
rcll
imul
sbb
lret
cmpsl
mov
jne
rcl
xchg
adc
or
imul
mov
imull
or
test
cld
addr16
jo
mov
jns
pop
insl
mov
sub
pop
fimuls
xchg
out
sahf
jae
aaa
or
jg
push
adc
loope
pop
bound
data16
and
sbb
int
data16
dec
lock
sub
xor
cmp
add
and
adc
or
xchg
shll
movsl
bound
jno
jmp
pop
xchg
pop
cmp
add
lcall
ss
dec
mov
mov
gs
sbb
sub
cmp
xchg
imul
sbb
mov
sahf
jns
adc
dec
into
mov
adc
nop
cli
imul
aaa
mov
push
testb
mov
aaa
jg
push
inc
pop
mov
cli
hlt
and
test
imul
mov
movsb
pop
lods
aas
aas
dec
std
lcall
push
cli
or
xchg
cmp
pushl
adc
xchg
push
arpl
add
aas
jo
jnp
cld
add
mov
cmp
pop
adc
push
pop
out
mov
pop
cmpsb
ret
and
mov
jecxz
jl
adcl
je
pop
testb
inc
test
and
sahf
sahf
cmpsl
mov
enter
xor
addr16
stos
adc
jae
and
pushf
dec
ss
sub
pop
adc
int3
push
push
sub
nop
outsb
pop
xchg
push
cmpsl
add
mov
or
mov
sub
inc
cmp
cmc
inc
add
loop
hlt
jnp
pop
mov
std
fildl
hlt
test
push
xor
add
stc
clc
sbb
subb
pop
mov
and
fbld
jmp
test
daa
insb
test
add
push
adc
ret
dec
popa
fs
scas
sbb
inc
adc
cld
std
mov
push
mov
pop
pop
fsubl
or
push
rcrl
xor
flds
outsb
or
push
xchg
lea
adc
adcb
mov
lods
lahf
xchg
lods
test
jnp
adc
pusha
cld
mov
ficomps
inc
jne
jo
jne
jmp
scas
cmpsb
hlt
mov
mov
adc
push
nop
lret
or
pop
ljmp
xchg
xchg
data16
jae
xchg
sbb
mov
mov
shlb
andl
decl
and
cmc
das
cmp
ds
push
arpl
xchg
outsb
ret
xchg
push
jne
shrb
add
movsl
out
pop
jns
scas
mov
imul
pop
inc
aas
sahf
or
sub
filds
mov
jo
mov
scas
push
test
add
cmp
cmp
xchg
sbb
push
rolb
popa
cmpsb
mov
out
sub
inc
int
lcall
sbb
inc
mov
dec
push
jo
pop
and
test
pop
js
loop
pop
mov
loopne
adc
lods
jl
cli
pusha
arpl
lds
insb
out
cs
fcoms
cmc
push
push
mov
jns
add
or
xor
push
add
lock
inc
mov
fs
mov
outsb
xchg
sub
mov
cmpsl
mov
bnd
xchg
sbb
cmpsb
std
cld
mov
adc
in
iret
dec
mov
bound
sub
push
jle
in
jp
lret
inc
push
cli
xor
add
in
loop
ja
lds
test
add
cld
adc
out
jo
ja
cli
ret
push
pop
add
pop
ret
sbb
xchg
add
out
mov
cwtl
adc
push
scas
xchg
sbb
xchg
arpl
mov
faddl
inc
nop
or
mov
cmp
adc
ljmp
jg
ret
aaa
mov
pop
add
fnstsw
mov
adc
je
in
mov
in
lahf
dec
mov
nop
xchg
and
cli
fwait
and
mov
add
andl
mov
mov
mov
jge
loope
jo
and
xchg
test
mov
sub
mov
faddl
rolb
add
adc
imul
out
lock
push
pop
xor
movsb
insb
xor
add
mov
push
cmp
stos
adc
jne
pop
push
and
aaa
jno
outsl
loope
jg
pop
shll
lds
push
push
dec
aad
daa
loopne
stos
cmc
sbb
dec
icebp
push
pop
inc
sub
or
cli
mov
lahf
fdiv
sbb
mov
mov
dec
je
xchg
fnstsw
push
mov
in
fsubs
cltd
pusha
std
pop
push
ror
or
mov
leave
imul
mov
lcall
aam
in
loope
iret
ret
inc
sub
mov
sbb
dec
jle
mov
pop
aad
inc
imul
mov
inc
mov
outsb
mov
in
pop
and
xor
inc
push
xchg
sbb
mov
repz
push
push
fsubr
or
push
jle
iret
test
shlb
push
repz
cs
xorb
in
adc
xchg
sbb
cmp
shr
adc
fdivrs
mov
pusha
fidivrs
in
movsl
inc
mov
dec
mov
jge
sbb
pop
in
sub
cmpsb
pusha
mov
sbb
daa
mov
cmp
mov
or
lcall
sub
mov
sub
jne
pop
mov
lods
roll
mov
add
and
punpcklbw
sbb
and
movsb
mov
mov
fadd
fildll
hlt
or
sub
or
sbb
mov
adc
mov
sbb
xor
push
mov
cmp
ret
dec
mov
push
mov
adc
sub
mov
mov
sub
add
jmp
cli
outsb
jmp
dec
aad
mov
mov
and
stc
rep
loop
push
pop
pop
icebp
dec
mov
inc
cli
test
dec
ret
cld
repnz
xor
mov
imul
adc
and
and
outsl
push
jecxz
cmpsb
jp
inc
test
cmc
xor
or
test
lds
cmpsl
xchg
leave
orl
faddl
in
arpl
rdmsr
push
mov
sub
inc
add
test
jne
insl
movsb
loope
int
mov
aad
je
outsl
pusha
popa
mov
xchg
sbb
or
adc
fs
jns
lea
hlt
sub
dec
sub
push
addr16
fimuls
out
jno
loopne
pop
dec
scas
sbb
iret
cld
lcall
xorl
xor
mov
mov
es
dec
fisttpl
push
pop
xchg
leave
in
jae
pop
daa
pop
in
fwait
xor
dec
pop
hlt
fsubs
inc
pop
sahf
xchg
and
and
push
jo,pt
shrl
sbb
adc
jb
fwait
mov
std
or
lea
pop
mov
loopne
lret
or
out
stos
mov
and
adc
sub
dec
leave
test
movb
xchg
adc
jne
sub
repz
pop
adc
mov
out
pushf
arpl
xor
jnp
mov
xchg
push
pushf
lret
push
outsl
movsb
mov
sbb
jne
daa
push
mov
test
orl
xchg
cmpsl
cmc
push
and
test
popf
mov
add
xor
lods
mov
jg
insl
ret
mov
add
mov
sub
adc
pop
pusha
mov
jne
mov
mov
jmp
adc
jge
sub
sbb
or
and
cmp
xor
mov
sub
inc
lods
fwait
push
cwtl
lret
mov
lock
push
dec
cltd
and
push
mov
pusha
or
push
stos
push
bound
mov
inc
in
hlt
in
std
loopne
inc
jns
fs
mov
mov
mov
test
mov
popa
xor
stos
clc
xchg
add
mov
jecxz
and
andb
mul
insl
insb
mov
mov
cwtl
flds
jno
lahf
sub
sarl
shrl
int
xor
sbb
lods
test
sub
push
adc
in
xchg
mov
cmp
add
jmp
xor
aas
testb
xor
adc
lea
mul
push
mov
xor
leave
and
ljmp
inc
outsl
jl
xchg
in
aas
mov
mov
mov
mov
fs
andb
or
push
test
loope
jae
das
rorl
dec
pop
dec
int3
in
int3
jae
mov
cs
sub
leave
push
jp
sub
test
add
push
pop
or
filds
fists
push
stc
mov
fcomip
hlt
shl
cwtl
inc
xor
dec
mov
mov
aas
cwtl
pop
inc
sbbb
js
pop
fnstenv
push
sbb
or
mov
xchg
pushf
sub
dec
cmc
icebp
mov
popf
loop
mov
addr16
cmp
sbb
das
imul
jbe
cmp
cld
out
out
cwtl
jle
xor
gs
andl
sbb
add
jmp
int
cmpsl
or
or
push
xor
sbb
xchg
jge
mov
push
add
adc
ret
sbb
adc
loopne
bt
addb
inc
or
seta
cmp
inc
outsb
sub
cli
xor
je
test
xorl
inc
sub
xorl
sbb
or
aas
pushf
pusha
cmpsb
stos
xchg
jo
jg
filds
pop
ret
xchg
test
andb
mov
pushf
jmp
fwait
push
sub
inc
arpl
mov
push
pop
add
shrl
das
cmc
dec
pop
aaa
stos
mov
test
push
pop
mov
inc
xor
xchg
mov
aad
and
sbb
std
scas
add
les
aad
jle
rolb
xorb
ss
adc
xchg
sbb
add
add
int3
sub
mov
in
or
xchg
push
fistpl
mov
aam
test
adc
add
icebp
inc
aas
repz
cld
gs
dec
mov
pop
jno
mov
into
sub
lock
fldt
js
jnp
fisubl
xchg
test
call
les
mov
inc
mov
sub
jns
sti
add
fidivl
das
dec
pop
inc
lcall
mov
arpl
sub
inc
leave
xor
adc
fcomps
push
test
cmpsb
das
push
stc
fldenv
jae
imul
mov
xor
mov
in
dec
lahf
lret
pop
pop
in
rcll
xchg
jo
sbb
cmp
and
xchg
ret
stos
inc
dec
in
cmp
aaa
jp
cmpsl
push
dec
mov
fldenv
xor
nop
out
sub
dec
push
mov
or
and
lea
xchg
mov
popa
adc
mov
test
gs
stos
and
pop
addr16
out
push
lods
cmp
pop
xchg
cli
mov
xchg
pop
pop
push
pop
push
imul
cmp
cmpsb
pop
add
sbb
adc
fdivl
int3
in
push
mov
out
call
dec
xchg
adc
adc
mov
xorl
cld
sbb
arpl
jl
fisttpll
cld
aad
cs
xchg
aas
leave
jno
or
loopne
xchg
push
mov
loope
and
sub
mov
mov
mov
cmp
out
jne
mov
cmp
loopne
xor
inc
inc
out
adc
mov
push
pop
cmpsb
js
shll
stc
xchg
rorl
cmpsb
sbb
das
mov
push
pushf
pop
popf
or
pusha
pop
out
cld
lods
into
jle
jmpw
jmp
hlt
jae
pop
das
aam
movsl
loop
xchg
aad
daa
mov
dec
sbb
inc
ljmp
popf
fcomi
sub
cmc
sub
xchg
or
mov
stos
jmp
fmul
jne
sarl
mov
arpl
loop
sbb
sub
or
loop
push
outsl
arpl
fcomp
arpl
inc
lret
inc
mov
outsl
jae
jb
push
int
lahf
jbe
push
mov
xchg
fcompl
das
and
cmp
and
jne
lea
mov
jl
pop
addr16
xor
inc
scas
aam
sub
iret
leave
in
push
jo
aad
pop
mull
aad
sahf
std
inc
gs
add
mov
enter
push
movsb
shl
fwait
pop
cltd
fcoms
dec
dec
fsubp
push
sbb
push
xlat
mov
sbb
add
aas
inc
insl
sub
mov
sti
adc
lock
ljmp
inc
mov
mov
xor
cmpsl
scas
dec
xchg
std
pop
decb
adc
test
js
and
sub
or
js
popf
clc
hlt
xor
lret
add
call
inc
xchg
inc
gs
shrl
popf
or
push
xor
dec
jo
ss
or
pusha
jmp
add
and
jge
fildl
pop
ss
rcrb
aad
rcl
test
clc
shl
rolb
mov
pop
fimull
movsb
push
mov
fistpll
lods
sbb
out
aas
lods
add
inc
aad
fcomp
xchg
mov
loop
notl
bound
xlat
pop
jbe
pop
cld
xchg
and
test
test
cs
push
jae
push
scas
inc
and
lcall
xchg
cld
lcall
jns
pop
cs
sbb
mov
pop
add
dec
jae
ljmp
mov
pop
cmpsb
repnz
or
push
mov
add
sub
sub
pop
fnstenv
mov
pop
xchg
jb
mov
mov
dec
and
sub
dec
das
mull
loop
popa
cmpsb
mov
adc
push
jecxz
fcoms
sub
xor
testl
mov
xchg
mov
hlt
sbb
loope
iret
mov
pusha
ficomps
sub
cmpsb
adc
or
std
je
int3
mov
xchg
cwtl
mov
aam
repz
arpl
jae
mov
and
call
sbb
xchg
mov
sbb
sub
mov
repz
stc
nop
jle
push
sbb
fucomp
mov
push
xchg
jae
mov
scas
imull
fadds
lcall
xorl
inc
repnz
jl
mov
push
xor
mov
sub
sub
stos
aam
xchg
js
inc
add
test
dec
aas
test
cmpl
mov
sub
mov
jl
jl
int3
aam
and
shlb
arpl
cmp
cwtl
loop
pop
ja
mov
cld
in
sub
mov
mov
jle
popl
mov
fsub
int
stc
cld
enter
cli
insl
iret
incb
adc
jbe
sarl
add
popf
and
mov
or
test
push
jmp
mov
flds
in
push
pop
jp
jbe
ljmp
cs
outsl
je
sarb
pop
xor
inc
mov
ds
xchg
xchg
pop
insl
mov
movsl
add
pop
cmp
or
xor
inc
push
xchg
pop
dec
inc
xor
cmpsl
and
push
jg
dec
push
cs
pop
push
loop
das
fnsave
arpl
lcall
dec
popf
out
adc
roll
mov
cmpsw
inc
mov
idivl
shlw
dec
jo
jg
enter
adc
mov
lret
incb
or
ret
sbb
repz
sub
cs
dec
xchg
inc
sti
shr
mov
cmpb
push
jae
repnz
mov
stc
mov
jno
repz
sbb
clc
cltd
test
cmc
xor
fwait
pop
ljmp
inc
inc
out
fisubl
mov
aad
add
aam
scas
mov
pushf
mov
lret
or
outsb
adc
scas
mov
dec
inc
clc
fistl
mov
into
mov
insl
in
movsb
divb
pop
enter
loope
mov
inc
inc
jbe
xor
inc
clc
inc
and
mull
and
adc
mov
loop
cwtl
es
push
inc
cmp
add
arpl
sbb
int3
lods
inc
ja
add
cs
dec
test
rcrb
shlb
or
clc
cmp
adc
inc
xchg
aad
out
mov
nop
and
and
add
pop
jmp
and
adc
mov
mov
dec
sub
das
mov
out
sub
cld
dec
xchg
mov
ljmp
jno
rcll
lods
mov
xor
dec
loopne
sahf
dec
or
inc
lock
sub
cmp
xchg
in
shlb
adc
scas
push
push
and
mov
loopne
arpl
inc
scas
inc
jne
push
mov
pop
arpl
imul
mov
pop
scas
or
and
icebp
inc
in
movsl
push
xor
scas
out
test
push
sub
jb
add
jbe
pop
mov
aaa
and
xchg
sbbb
stos
aaa
cli
cltd
add
adc
sti
insl
gs
xor
jle
xchg
bound
and
pop
jb
sbb
leave
xlat
cwtl
and
jge
sbb
adc
sbb
mov
mov
ja
and
loopne
lods
mov
lock
mov
cmpb
ficomps
mov
jnp
sub
addr16
inc
dec
pop
and
in
divb
dec
scas
sbb
cmp
es
outsb
jp
dec
mov
rorl
jb
inc
pop
mov
fistps
adc
or
and
aaa
cs
cmc
outsl
pop
pop
mov
scas
clc
or
pop
jne
xchg
test
std
pop
bound
adc
rolb
sub
jmp
call
sub
or
lret
roll
mov
inc
scas
je
cmp
xor
mov
xchg
xor
decl
xor
notl
xor
adc
daa
mov
dec
jecxz
hlt
adc
xor
in
push
mov
jnp
push
clc
out
push
es
cmp
inc
push
js
stc
and
mov
or
sub
popf
in
jp
xor
or
xchg
xor
jle
mov
xchg
pop
xor
cwtl
mov
popa
mov
and
cmp
push
andl
add
push
jecxz
outsb
jle
mov
ds
dec
mov
cmp
and
movsb
adcl
mov
imul
in
cmp
nop
data16
sbb
imulb
pop
testl
cmp
int
push
popa
push
or
sti
adc
aaa
insl
jb
add
and
out
xor
or
in
stc
jp
dec
mov
mov
mov
or
jecxz
adc
cmp
lea
rcll
movb
jns
popa
lcall
pop
adc
pop
imul
into
add
js
test
xorl
std
jle
and
popa
push
repnz
cmpsl
dec
cmpb
mov
icebp
and
aam
test
insb
imul
sbb
cmp
dec
cld
test
popl
out
and
mov
xchg
pushf
pop
mov
clc
scas
sub
adc
adc
cmp
or
cmp
pop
inc
or
call
lcall
out
mov
or
sbbl
adc
cmpsb
loop
int3
mov
sbbl
adc
int
cmpsb
sub
out
int3
data16
dec
sub
adc
add
mov
mov
pop
nop
sub
dec
outsl
mov
push
jns
pop
xor
dec
dec
pushf
adc
in
insl
stc
pop
pop
divb
pop
leave
push
test
xchg
insb
mov
test
lds
or
andb
sub
push
dec
test
loope
bound
pop
mov
xor
xor
push
pop
lods
jp
hlt
leave
or
out
pushf
mov
icebp
inc
xchg
cmp
or
nop
in
and
aad
into
mov
popa
inc
sarl
sub
push
fimuls
inc
test
fxch
mov
stc
add
test
out
jo
inc
and
adc
mov
inc
ret
jmp
cmp
test
adc
sbb
sbb
fistl
push
jb
scas
xchg
int
jle
in
stos
inc
cmpsb
in
xchg
push
xor
lahf
xor
loopne
pop
xor
dec
outsb
and
push
inc
and
popf
add
mov
mov
push
lret
cs
dec
xchg
xchg
loope
mov
jo
loope
push
xor
sbb
jnp
jecxz
loop
jl
sbb
sub
in
mov
test
mov
sub
adc
pop
insb
push
addr16
mov
mov
cli
fstl
inc
insb
lock
test
insb
mov
jg
les
gs
mov
insb
dec
mov
lahf
jmp
mov
or
dec
or
loopne
into
mov
dec
cvtdq2ps
inc
fbstp
sbb
pop
rorb
mov
push
fisubrl
shr
inc
shlb
dec
mov
dec
cmpl
mov
leave
pop
les
jno
imul
movsb
inc
push
cmp
popa
mov
xor
mov
pop
dec
add
pop
inc
push
mov
jp,pn
add
scas
cmp
jnp
testl
fdivrl
inc
imul
xchg
and
gs
mov
jbe
jbe
push
xchg
adcb
sub
in
and
es
jno
out
testb
cmp
rol
pop
shlb
fistpll
xor
push
adc
lds
mov
insl
adc
jb
mov
stos
in
push
cltd
loop
fs
inc
cmpb
xchg
ret
push
xchg
sbb
mov
and
repnz
movsl
xchg
jb
xor
mov
pop
pop
rclb
inc
xchg
inc
scas
repz
testb
fcoms
add
fimuls
jns
xchg
cmc
push
sub
xor
push
or
adc
and
xchg
and
adc
aad
fstps
inc
loope
xor
mov
addr16
mov
loope
leave
ret
dec
push
xlat
lods
dec
xchg
sub
mov
imul
add
add
xchg
jb
sub
lock
test
inc
pop
xor
ret
push
mov
je
cmp
cmpsb
jg
lret
mov
lret
push
sti
das
lds
xchg
xchg
cli
int
or
push
push
scas
jmp
mov
outsb
adc
int
sub
ret
adc
mov
cmpb
dec
jp
dec
and
mov
sbb
adc
adc
and
fisubrl
cs
fstl
loop
mov
jp
jne
icebp
mov
mov
push
in
or
jecxz
dec
mov
int3
pop
mov
adc
xlat
ret
fsubrs
mov
cmpsb
mov
and
mov
dec
and
jle
mov
push
pop
fcoml
loope
jecxz
divl
fstps
xor
xchg
repnz
add
loop
jmp
mov
enter
popf
or
xchg
cmc
xchg
pop
shll
pop
cwtl
fcmovnbe
and
jb
mov
push
mov
inc
in
inc
stc
jne
fdivrl
jp
mov
test
xlat
nop
mov
sbb
incb
jmp
xorb
sbb
cmp
pop
pop
outsl
dec
imul
imul
rorl
outsb
push
out
gs
aas
pop
insb
repnz
adc
lock
movsl
push
aaa
idiv
loope
pop
aad
mov
rcl
sbb
mov
hlt
repz
popf
jnp
xlat
jbe
enter
xor
imul
jbe
jg
fnstsw
sbb
leave
je
repnz
push
push
loop
lahf
outsb
ljmp
mulb
adc
adc
mov
fnsave
sub
push
gs
adc
mov
cmpsb
scas
fbstp
push
adc
and
test
js
sarb
rcrl
inc
test
std
loopne
mov
inc
cmp
inc
xor
sbb
pop
bound
adc
shlb
mov
pusha
sub
imul
xor
cmp
inc
mov
ss
out
out
popa
dec
jo
push
inc
jns
stos
sub
sbb
adc
je
aaa
inc
repnz
sub
push
lret
shrb
scas
add
pusha
ljmp
imul
pushl
lds
xchg
mov
mov
inc
loope
lods
sbb
and
push
mov
or
add
sbb
jge
dec
test
xor
or
cld
inc
xchg
imulb
jl
jmp
mov
pop
push
xchg
popa
test
out
stc
mov
aad
in
dec
loop
insl
pop
mov
outsl
xchg
and
push
aaa
sbb
adc
dec
mov
or
out
in
sub
data16
lret
in
into
fs
mov
out
sub
enter
nop
out
and
mov
insb
jge
sub
jl
and
insb
dec
sti
jmp
xchg
mov
push
repz
fwait
or
mov
xchg
loope
sub
mov
or
dec
bound
mov
sub
inc
cmp
movsb
iret
jecxz
mov
in
das
int3
and
mov
lret
push
add
ds
or
popf
mov
jp
movsb
xor
push
add
jb
insb
fs
int
push
negl
js
popf
mov
cmc
cmp
lods
xor
mov
mov
movsb
jb
fcmovnbe
movsl
jg
dec
int3
jl
mov
lock
xor
std
sub
pop
jno
test
inc
es
stos
push
jno
add
mov
insb
insl
fprem
xchg
xchg
and
into
sti
movsb
add
clc
mov
daa
push
jnp
inc
push
in
les
inc
pop
pop
lods
sub
jbe
loopne
scas
in
clc
in
add
push
enter
pop
sahf
clc
sbb
sub
mov
push
and
push
addb
enter
inc
cmp
push
mov
gs
out
es
jne
or
add
mov
xor
into
push
test
loope
std
fnsave
jmp
lock
add
insl
fsubs
adc
testl
and
cmpsl
dec
and
pop
jo
pop
cmp
jl
xlat
in
leave
insl
leave
aad
xor
data16
js
orl
fistl
icebp
jae
sub
xchg
mov
xchg
cmpsl
out
dec
fistpl
xchg
or
xchg
int
push
adc
push
add
mov
xor
push
daa
aam
pop
inc
mov
push
popa
mov
rolb
mov
out
dec
mov
in
mov
repnz
cli
lods
outsb
xor
cmc
and
mov
int
loope
push
xor
inc
loopne
inc
divl
jae
pop
push
add
lret
xchg
mull
and
mov
dec
inc
es
sub
inc
cmp
test
jp
push
pop
imul
sbb
lods
mov
or
fcomps
cmp
ds
dec
jl
dec
jge
add
movsb
mov
lret
push
and
and
mov
cmpsl
sbb
loope
xor
dec
sbb
in
cmc
lds
outsl
les
mov
out
imulb
adc
mov
scas
fisubs
mov
cmp
outsl
push
cli
pop
and
lahf
inc
hlt
or
sti
xor
sbb
outsl
stos
shl
cwtl
out
xor
mov
jmp
fsubp
mov
lret
pop
fstpl
adc
hlt
dec
imul
sarl
enter
insb
out
dec
dec
std
add
out
mov
inc
mov
fisttps
jns
insl
out
imul
sub
adc
sbb
cld
popa
ljmp
inc
test
add
xchg
jg
sub
in
orl
add
mov
outsb
mov
scas
jg
adc
test
push
outsb
sbb
rcll
dec
sbb
mov
out
arpl
pop
dec
cmp
xchg
cld
fwait
sub
aad
js
cmp
sbb
xchg
movsl
icebp
outsb
push
subl
outsb
sbb
rep
sbb
testb
ds
add
ss
dec
mov
shlb
adc
or
in
adc
pusha
pop
insl
jae
jmp
push
test
rcrl
out
xor
lds
inc
test
xor
sub
push
das
mov
jmp
out
adc
daa
jp
cs
pop
or
push
mov
ret
pop
int3
shlb
into
and
cmp
jecxz
out
fidivl
lock
popf
mov
div
les
jae
imul
adc
int3
add
idivl
sbbb
pop
inc
mov
or
arpl
into
sub
jnp
dec
mov
pop
out
cwtl
jne
test
dec
pop
or
jmp
movsb
mov
gs
popf
push
scas
sub
xlat
les
xlat
fnsave
lea
pop
and
dec
push
jge
add
xchg
cmpsl
mov
push
and
cwtl
movsl
je
jl
mov
jae
ret
fsubs
mov
add
andb
es
jns
adc
ret
fldcw
or
das
stc
mov
lods
aaa
rol
fmull
add
out
in
xor
lea
subl
push
loopne
cmpsb
sbb
aad
sarl
movsl
lret
addr16
sbb
cmp
orl
jns
mov
in
fdiv
gs
sbb
cmpsl
and
inc
movsl
outsb
push
jmp
mov
jecxz
cli
push
adc
mulb
pop
mov
xchg
inc
adc
xor
inc
ds
jge
cmp
adc
cmc
shrl
rcl
outsl
das
cmp
int
js
leave
or
pop
insl
fisubl
adc
push
fisubrl
sub
xchg
xor
mov
mov
sbb
je
ror
xchg
mov
push
rorb
xor
sbb
es
push
mov
roll
inc
inc
inc
int
mov
jnp
push
push
insb
sub
jne
fs
and
adc
call
xor
mov
inc
xor
loope
fistpll
pop
inc
push
sbb
je
mov
and
gs
xchg
mov
sub
jno
add
incb
out
std
or
cmp
sub
xchg
shr
mov
fwait
jmp
adc
pusha
jb
add
shl
jge
mov
mov
xor
add
pop
inc
inc
cmp
xlat
cmp
in
ret
mov
addl
jge
paddusb
xchg
mov
or
popl
and
imul
jle
orb
rorl
int3
jae
push
or
mov
jo
mov
and
cmp
imull
cmp
sub
cmp
movsb
std
inc
rolb
sbb
mov
push
xchg
dec
add
mov
sahf
or
les
pop
fistl
add
stc
or
loop
mov
jle,pn
test
mov
fstpt
and
cmp
mov
dec
adc
push
dec
dec
cltd
or
jb
iret
repnz
pop
inc
subb
test
int3
mov
mov
cmp
imul
inc
loop
sub
test
out
cli
jno
pop
in
repnz
jl
cmpsl
mov
jle
push
repnz
mov
enter
push
sub
ja
icebp
dec
imul
cmc
push
jecxz
data16
arpl
inc
xor
sbb
xchg
mov
out
fnsave
lds
adc
mov
pop
mov
fs
mov
insl
xor
sti
cmp
jg
outsb
mov
in
jns
adc
mov
jo
into
out
out
scas
inc
ljmp
jo
test
xor
iret
xchg
in
sub
mov
inc
out
and
jns
cmp
jle
fwait
jne
add
dec
push
xchg
add
cmp
inc
es
sub
and
mov
insb
fld
sbb
mov
imul
jmp
pop
pop
mov
xor
mov
mov
cmp
cld
scas
jne
jg
jecxz
fs
or
cmp
aas
mov
loope
or
xchg
sbb
sbb
mov
xor
imul
or
popa
pop
test
pop
mov
sub
pushf
and
out
jmp
movsl
cld
xchg
xchg
test
repnz
push
push
cmp
nop
loopne
pop
test
cmp
aad
dec
xor
nop
add
pop
cmp
shlb
sbb
xor
push
jb
xchg
or
add
jp
pop
pop
out
dec
neg
xor
dec
adcb
cmc
and
loop
subb
rclb
loopne
push
arpl
movsl
jns
inc
xchg
push
ljmp
mov
xor
fmuls
mov
lcall
push
sbb
jae
movsl
xor
adc
in
xchg
lret
mov
cld
sbb
aaa
mov
or
addr16
movsl
push
mov
mov
mov
jbe
push
mov
scas
mov
cmp
fldenv
pop
imul
sbb
ret
or
mov
faddl
sub
pushf
sbb
inc
xor
pop
xchg
shrb
sub
cltd
push
dec
enter
adc
dec
add
frstor
shlb
add
xchg
cmp
sub
in
cmp
push
dec
mov
push
fsubrp
pop
aas
add
inc
fisttpll
cmp
sub
je
mov
test
add
mov
into
fisttpl
xchg
shrb
inc
fisubrl
test
lahf
mov
int3
gs
mov
imul
pop
push
mov
ret
aam
imul
les
add
pop
ficomps
xchg
push
xor
adc
jae
rcrl
nop
push
mov
inc
mov
sub
xor
jnp
and
pop
nop
jb
test
cmp
push
insb
jne
out
dec
scas
xor
jne
daa
push
pop
test
sbb
and
xor
cmc
shr
pop
cmc
push
pop
sub
or
mov
push
jp
fadds
xor
mov
gs
or
mov
bound
icebp
shlb
or
or
insl
inc
iret
push
enter
xor
xor
mov
flds
imul
mov
jle
inc
xchg
xchg
ret
push
jp
sub
into
lret
sbb
pop
jo
jl
dec
jns
mov
ja
fcoms
sub
or
fidivrs
shrl
xor
fnsave
push
scas
movsl
jge
jne
jnp
mov
pusha
dec
pop
xchg
dec
mov
mov
mov
sbb
jnp
add
dec
js
sub
push
pop
pusha
aad
and
pusha
xchg
movsl
dec
js
fmull
movsl
pop
insl
call
sub
inc
add
cmp
or
and
dec
or
aad
imul
repz
push
jp
mov
dec
addr16
mov
imul
push
jne
mov
pop
std
ret
dec
mov
sahf
xor
or
test
lret
sbb
push
lea
xchg
jb
int3
roll
call
mov
jg
popa
mov
loop
and
fdivs
das
test
stos
push
push
scas
test
inc
mull
xchg
jbe
pop
bound
pop
xor
ds
push
test
pop
and
cli
xchg
fnstcw
ljmp
mov
add
ss
std
fisttpl
mov
dec
jge
loop
loop
sahf
dec
push
dec
cmp
xor
pop
or
pop
pop
mov
jmp
or
clc
cwtl
pop
jecxz
test
cmp
mov
adc
mov
les
add
fiadds
mov
pop
cmp
outsl
out
shll
shl
mov
lock
pop
stos
fistpl
popf
or
add
das
sbb
sti
pop
inc
insb
sub
ja
mov
inc
into
xchg
cmpsl
inc
adc
mov
jns
cld
and
loop
fdivr
in
mov
sbb
lahf
and
push
xchg
popf
pusha
xchg
cmp
ss
cmp
in
dec
mov
ret
cmpb
mov
stc
gs
aam
jp
pusha
add
sub
or
test
sub
lret
cli
lcall
fcompl
xchg
in
mov
or
out
jae
fs
into
sub
cld
jo
es
fwait
movsl
out
imul
out
pop
enter
adc
xchg
repz
cld
lret
sahf
and
lret
push
imul
and
into
add
test
jbe
ffree
imul
pusha
pop
mov
dec
mov
mov
pushf
clc
pop
arpl
lret
es
loope
push
lret
cmp
mov
idivl
ss
imul
sbb
stc
pusha
pusha
xchg
push
inc
ret
cli
add
cmc
lods
stos
in
push
mov
in
movsl
rolb
aas
scas
push
icebp
test
enter
nop
sub
das
sbb
scas
pop
jno
stos
sbb
jge
pop
bound
fsincos
xor
je
scas
test
repnz
xchg
mov
adc
xor
decl
repz
scas
cmp
popf
inc
dec
push
lcall
or
stc
add
cmp
out
mov
test
cmp
test
out
in
lea
hlt
adc
movsl
clc
jae
xor
jbe
fcmovu
inc
or
add
or
iret
sub
push
mov
insb
mov
dec
push
jecxz
pusha
xor
push
cmp
cmp
and
mov
mov
push
addr16
mov
add
sub
test
or
imul
mov
pop
dec
adc
arpl
pop
les
ret
xchg
sub
fldl
jge
or
int
pop
aam
aas
in
pop
sub
adc
mov
inc
or
popf
mov
push
in
lods
xchg
inc
jl
test
xor
jle
xchg
divb
pop
rolb
xor
clc
push
shl
sub
loop
cmp
mov
pop
pop
hlt
dec
mov
sbb
jbe
lods
xchg
xor
enter
mov
jnp
pop
pusha
leave
pushl
stos
loopne
sbb
sbb
test
mov
mov
xchg
jl
sbb
fcmovu
cltd
pop
jo
xor
jg
es
shlb
adc
enter
inc
hlt
mov
adc
pop
cmp
inc
stos
pop
cmp
mov
mov
les
int
pusha
pop
leave
push
cmp
addl
xor
sub
outsb
cmp
mov
fcoms
rcl
fwait
dec
mov
stc
rcrb
inc
mov
jle
jae
leave
push
or
add
mov
sub
mov
or
add
pop
xchg
aaa
adc
int3
cmp
add
mov
push
ficompl
mov
adc
data16
out
test
rcrb
lods
pop
mov
cmp
and
ds
adc
fsubrs
loope
sahf
dec
mov
jne
orb
push
pop
xor
imul
insl
inc
jg
clc
lods
call
jle
xlat
sub
mov
sub
cmp
fs
pop
push
pop
jecxz
inc
sbb
mov
cmc
mov
dec
add
inc
repz
lahf
test
bound
adc
or
cmpsl
divb
and
pop
xor
dec
mov
mov
mov
je
mov
jae
adc
lock
test
repz
into
dec
push
sub
pop
cli
mov
xchg
or
push
ret
inc
stos
push
cmpsb
hlt
or
cmp
mov
mov
mov
sbb
jmp
pusha
push
out
cld
test
add
call
sbb
mov
or
test
test
out
inc
sub
or
imulb
negl
sbb
mov
lret
adc
pop
data16
mov
push
cmp
xor
ss
sub
orb
popf
mov
or
icebp
jns
or
in
pshufw
add
test
push
cltd
push
in
pop
or
sbb
into
adc
pop
das
out
cmp
ds
iret
push
push
push
add
and
hlt
mov
sbb
sub
addb
into
daa
xor
iret
xchg
jo
sub
imul
arpl
fwait
mov
sarl
lds
xor
js
jnp
stos
aam
push
or
mov
es
sub
xchg
cmc
sbb
lods
dec
sub
and
pushw
dec
in
pop
fwait
jno
call
mov
mov
jb
adc
mov
rclb
jo
sbb
pop
mov
imul
push
lahf
dec
test
mov
lea
mov
inc
jmp
add
jge
pop
test
loope
je
xchg
pop
stos
inc
adc
popa
adc
and
cli
dec
jo
inc
sbb
xor
or
bound
xchg
movsb
dec
std
out
shl
pushf
in
daa
or
or
jns
xor
hlt
mov
sar
mov
cmp
mov
mov
sbb
push
enter
jnp
or
lock
icebp
mov
insl
gs
out
mov
xchg
arpl
mov
cli
rcll
jecxz
xchg
push
les
mov
mov
dec
jl
arpl
sbb
push
out
ret
decl
loop
xchg
adc
xor
push
mov
xchg
cmp
mov
jo
hlt
dec
lret
jbe
mov
test
and
sarl
cmp
sbb
mov
orps
out
subb
test
add
enter
and
and
mov
sahf
add
mov
lea
cmpsl
xchg
jnp
ror
xor
ss
cmp
cmpsb
pushf
mov
shrb
stos
out
xchg
and
cltd
mull
popa
mov
movsl
xchg
out
add
ficoml
and
ficompl
xchg
int3
aad
aam
jo
sbb
imul
mov
pusha
mov
jne
aam
mov
addr16
or
movsl
jo
mov
lock
cmp
inc
jp
fdivl
icebp
fisubl
shr
sbb
mov
ret
cwtl
xchg
mov
imul
int
fcmovu
mov
mov
inc
lcall
jo
sbb
fs
les
jne
adc
mov
dec
ret
jbe
je
or
dec
test
shlb
icebp
fcomp
jns
in
cmpsb
mov
insb
pop
xchg
xlat
aad
and
inc
clc
xrelease
cmovge
pop
fs
fstl
jl
ja
out
mov
jbe
scas
sub
cmp
enter
mov
xchg
xchg
add
push
repnz
mov
scas
sbb
sub
pop
dec
cmpsb
or
jl
iret
lahf
pop
push
pop
push
and
sbb
std
sahf
inc
fcoms
xchg
and
cmpsb
push
daa
leave
scas
or
mov
shrb
faddp
and
movsb
adc
and
inc
inc
pop
jns
fwait
in
mov
add
or
sbb
clc
in
movsb
and
pop
push
out
sbb
jecxz
and
cmp
xchg
or
push
mov
repnz
jge
lahf
sarl
lock
cli
sbb
mov
cmc
and
mov
add
mov
jae
daa
add
jp
sub
ds
cmp
pop
cmp
inc
adc
dec
je
aas
es
push
sbb
inc
dec
push
ja
lds
or
mov
and
sub
je
ud2
xchg
loop,pn
cmp
ret
pusha
jge
inc
sbb
loope
fstpt
sbb
divl
dec
movsl
pop
pop
push
outsb
adc
inc
push
or
inc
or
pop
adc
data16
and
jle
enter
aad
mov
fildll
les
call
mov
jbe
push
jo
cmc
jb
jp
cli
add
daa
cmp
shrb
adc
xchg
cmp
inc
dec
ss
stc
add
pop
sbb
jo
inc
outsb
mov
jbe
shrl
sub
inc
push
jo
je
outsl
or
out
fstpl
cli
and
mov
lock
out
fdivr
push
push
sub
jge
clc
lock
test
movsl
jnp
pop
insb
out
leave
lock
and
pushf
fisttpll
ljmp
ror
test
sbb
mov
ss
hlt
xchg
movsl
clc
xor
pusha
fwait
push
andl
cltd
dec
add
cltd
cltd
dec
fcompl
test
ficoml
push
xor
stos
adc
cs
or
push
lds
repz
or
jge
jbe
loopne
jge
mov
sahf
mov
push
sub
loopne
push
jns
add
lea
sbb
pop
dec
mov
gs
adc
jne
inc
dec
fildl
jns
inc
test
pop
mov
cmp
aaa
xor
insl
cld
idivl
push
adc
jae
loop
cmp
addr16
cli
scas
pop
mov
mov
mov
jnp
jp
out
inc
mov
icebp
sbb
push
dec
hlt
jle
inc
mov
mov
ror
imul
lods
fnstsw
add
mov
xchg
mov
push
roll
movsl
mov
fwait
mov
ret
mov
jae
push
iret
cmp
pop
scas
mov
or
rorl
lret
xchg
aam
into
push
dec
mov
fs
pusha
cmp
xchg
stos
push
js
push
jmp
daa
movsb
popa
lahf
dec
insb
add
and
in
jl
aas
jb
ss
cmp
and
xlat
mov
inc
jo
xor
loop
mov
sbb
or
mov
mov
scas
loop
dec
push
lods
mov
inc
rclb
add
pop
cmp
mov
push
push
cmpb
imul
arpl
sub
xchg
movsb
mov
mov
push
fstl
subl
ret
sub
adc
sub
dec
test
mov
mov
fwait
jno
push
inc
mov
sbb
out
out
adc
jo
nop
push
popf
push
mov
sub
mov
pop
popl
jmp
sub
and
cmp
mov
cmp
mov
aam
cwtl
pushf
dec
test
out
push
mov
mov
clc
add
ror
and
push
nop
popa
ret
dec
and
sub
mov
dec
pop
push
jmp
jnp
in
call
stc
jns
jecxz
jmp
cld
xchg
das
iret
mov
aas
arpl
into
jecxz
fwait
sbb
ss
jns
shrb
push
jne
mov
aas
outsl
adc
mov
mov
and
jnp
shll
js
aam
adc
loope
push
hlt
add
std
aam
or
xchg
leave
jle
ret
aad
lret
cmpsl
int
lret
or
mov
pop
jns
push
fwait
movsb
sbbb
imul
negb
mov
orb
in
out
mov
push
or
sub
and
add
mov
xchg
add
sbbl
sbb
divl
push
int
xchg
adc
pop
repnz
outsl
pop
decl
lea
sub
cli
inc
test
outsb
xchg
pop
dec
mov
sbb
push
lret
sbb
movsb
pop
fidivrl
xor
add
pop
push
lcall
and
rcrb
jne
jno
mov
xlat
dec
lcall
mov
cli
inc
pop
dec
scas
int
jmp
push
cmc
mov
add
add
or
sbb
push
adc
xchg
cmp
cmpsb
popa
xchg
xchg
adc
pop
jmp
xchg
push
cltd
jae
add
jmp
mov
mov
push
imul
andl
fimull
stc
out
fs
stos
add
clc
in
aaa
mov
lods
out
fimull
and
xchg
dec
loop
pop
jmp
daa
mov
data16
clc
fdivrl
mov
mov
and
loop
cmpsl
mov
push
into
movsl
mov
and
mov
loop
dec
stos
data16
andl
movsl
adc
cltd
pop
sub
xchg
aaa
add
mov
js
lods
rcrb
lods
sub
push
inc
push
push
lock
cmp
lahf
and
incb
or
js
xor
out
and
jo
mov
shlb
and
sub
pushf
inc
xchg
movsl
pop
inc
shlb
call
xor
lret
out
outsb
mov
lods
add
popf
test
push
stos
das
xchg
int3
pop
mov
dec
mov
ljmp
movsl
jp
mov
outsb
cmp
outsb
sti
jecxz
and
jmp
flds
jbe
scas
shl
pop
xchg
call
int3
xchg
popa
sub
or
stc
mov
and
cs
mov
movsb
pmulhw
leave
push
xchg
inc
das
inc
pop
jg
xchg
adc
stos
adc
call
hlt
cmp
stos
dec
pop
mov
lcall
xlat
dec
ss
cmpsl
test
idiv
cmp
lret
adc
mov
cmp
ja
push
xor
inc
inc
cli
leave
xchg
xor
test
fs
push
sbb
jmp
stos
int
inc
lock
adc
xchg
push
dec
fwait
jg
xor
leave
xor
insl
adc
sub
inc
push
rcr
mov
fucomip
add
adc
js
dec
xor
sbb
cmp
or
inc
jmp
rcrb
mov
jnp
xchg
shl
inc
mov
pop
icebp
dec
inc
sbb
mov
add
cmc
jb
mov
dec
gs
sbb
insb
bound
mov
jns
stos
pop
cmpsb
xchg
mov
leave
outsb
inc
jge
sub
pop
jl
cmp
adc
push
or
push
xchg
movsl
in
and
arpl
or
dec
aam
and
mov
mov
imul
sbb
dec
pop
add
outsb
loope
call
pusha
movsb
jecxz
das
fsubrs
mov
sbb
popa
cmpsb
test
mov
xchg
frstor
pop
call
jl
push
jecxz
sub
push
xor
lret
dec
jmp
orb
imul
shlb
mov
pop
pop
cmp
sti
and
or
enter
fistpl
mov
cmc
popa
stc
pop
add
negl
test
mov
ja
dec
xor
repnz
inc
mov
mov
pop
adc
js
outsl
ret
rcll
outsb
shll
sti
fneni(8087
in
aad
icebp
push
mov
repz
mov
or
or
cmpsl
std
cmp
sbb
test
jae
call
push
lds
adc
std
mov
push
nop
mov
dec
cmc
inc
outsb
jg
mov
add
mul
jmp
xchg
adc
out
xchg
inc
push
push
pop
jmp
cmc
jge
lods
add
fmulp
mov
sub
ljmp
push
std
inc
mov
mov
dec
faddl
mov
cmpsb
and
add
add
mov
in
xor
adc
jno
and
jno
xor
aad
inc
mov
dec
or
cmp
fdivrp
aas
call
sarl
lds
and
mov
push
mov
ja
lea
aam
push
dec
call
push
daa
sub
leave
iret
je
jnp
add
dec
xchg
out
dec
inc
dec
lret
cmp
mov
insb
push
xchg
mov
xchg
setno
dec
bound
xchg
sub
ja
out
pop
rclb
and
or
jle
cltd
xchg
sub
arpl
jmp
loopne
mov
push
aam
movsb
test
mov
pop
aaa
cli
inc
cmp
cld
mov
mov
push
lods
and
fstl
lcall
es
push
les
in
pushf
insb
and
ja
pop
out
enter
or
sub
insb
addr16
xor
pop
xor
and
inc
cwtl
pop
movsl
js
jp
cli
shl
and
xor
mov
outsl
xchg
adc
in
inc
mov
fwait
xchg
hlt
loopne
adc
or
cmovne
data16
mov
push
ljmp
adc
dec
xor
mov
jbe
outsl
repnz
xor
xor
je
mov
mov
fnsave
inc
mov
mov
cs
call
push
std
test
insl
adc
adc
cmp
stos
jp
lcall
mov
xor
xchg
into
addb
enter
clc
data16
mov
movsl
mov
fs
fdivl
enter
rcrl
lret
ljmp
les
push
dec
mov
push
mov
shll
shrl
shll
cmc
cmp
rclb
mov
sub
rcrl
sbb
pushf
xchg
inc
jbe
shll
in
les
add
outsl
add
mov
frstor
dec
pop
lret
push
mov
imul
and
cli
fwait
xor
pop
xor
adc
mov
loopne
jg
pop
nop
cmp
mov
cmp
mov
xchg
into
jns
fldl
pop
out
xor
cmp
mov
add
push
xor
sub
push
push
mov
int3
out
adc
sub
out
lods
mov
mov
movsb
inc
pushf
mov
xor
cmc
pop
dec
xor
pop
cltd
cltd
stos
push
inc
nop
inc
std
mov
lahf
mov
mov
lods
push
pop
popa
cmp
or
xor
and
icebp
outsl
xlat
dec
add
addb
inc
mov
fnsave
out
roll
montmul
cmpsb
in
inc
mov
in
pushf
mov
repz
pusha
mov
adc
dec
js
aaa
jbe
pusha
push
inc
ret
mov
out
daa
jge
mov
pop
cmp
inc
inc
fimuls
cwtl
mov
pop
cli
mov
adc
repnz
ret
xor
repz
xchg
sbb
popf
addr16
fisttpll
les
icebp
mov
xchg
cmp
ret
sub
loopne
test
out
xchg
dec
sbb
jno
jge
mov
fdivrs
pop
std
or
mov
xchg
lret
push
and
jno
clc
push
add
shrb
sbb
push
daa
stos
push
add
addr16
int
scas
add
mov
sti
dec
push
xchg
test
mov
int
mov
cmpsb
or
mov
insl
das
mov
scas
sahf
and
mov
sahf
in
ljmp
xchg
or
or
pop
inc
push
xchg
pushf
imul
jle
fiadds
sub
mov
aas
clc
addr16
insb
icebp
dec
xor
dec
repz
xor
loopne
test
movsl
and
cmp
mov
fmull
jg
scas
push
iret
mov
into
sbb
or
rcrb
insb
out
push
mov
rol
movsl
jg
mov
add
push
cmp
lods
addl
jge
ret
hlt
mov
pusha
dec
or
popa
mov
fcompl
lock
lahf
sub
cli
cld
icebp
jbe
scas
mov
lea
decl
dec
dec
fldcw
jmp
ror
cwtl
push
sar
jecxz
ret
mov
and
pusha
das
cmp
cmp
ljmp
or
negl
dec
jb
sub
inc
pop
mov
push
out
mov
fs
xchg
push
jo
in
cmp
or
mov
lcall
mov
frstor
pop
addr16
xorl
ret
shlb
les
push
adc
adc
loopne
pop
inc
or
jle
cmp
dec
push
cmp
push
fdivrl
fwait
xor
push
cmp
dec
into
mov
sbb
adc
inc
inc
mov
add
jbe
cltd
xchg
gs
cmp
lea
popa
subps
cmp
int
push
stos
sub
lcall
sub
sub
loope
leave
aad
icebp
inc
add
les
sub
and
mov
lds
adc
push
sbb
mov
sbb
cmpsb
mov
cmp
push
xchg
adc
icebp
popl
xor
arpl
mov
xchg
mov
movl
add
stc
add
shlb
fwait
stos
dec
jne
adc
lea
cmp
mov
das
sbb
mov
cld
mov
push
gs
js
lods
jo
push
cmp
push
clc
mov
mov
adc
cmp
push
lcall
jge
rorl
xor
stc
pop
lds
sbb
inc
addr16
dec
sub
sub
sub
jb
xor
add
sbb
ficompl
ficompl
xlat
jmp
add
or
aam
jno
mov
dec
fwait
stc
cmp
pop
cmova
cmp
or
popa
std
jno
xchg
mov
adc
in
in
mov
fbld
in
cltd
cli
call
pop
jnp
test
jae
cmp
sub
out
push
fstl
sub
pushf
pushf
in
adc
cs
xor
cltd
bnd
jnp
in
jmp
div
sbbb
pop
push
addr16
or
popf
cld
xor
sti
dec
ret
mov
mov
int
sbb
jne
adc
pop
rolb
dec
popa
insb
call
enter
inc
ja
clc
add
mov
rorl
adc
cltd
mov
xor
xchg
mov
je
and
aam
daa
ret
popa
dec
cmp
pop
in
dec
pop
arpl
sbb
and
pop
adc
sbb
xlat
jle
mov
and
jns
adc
in
je
out
ss
fwait
lock
push
xchg
mov
cmpsb
and
adc
fcmovnu
icebp
mov
repz
loope
sti
dec
sti
adc
add
mov
add
mov
aam
adc
push
popf
sarb
repnz
and
adc
insl
or
inc
stos
cmc
je
rclb
stos
rclb
push
push
xor
mulb
mov
inc
out
pop
cmpsl
sub
loope
mov
mov
inc
andb
mov
in
mov
iret
add
dec
outsb
mov
dec
mov
sbb
or
sub
xchg
imul
mov
dec
mov
cmpsl
push
bound
aam
and
and
rol
sbb
xchg
mov
mov
cwtl
aas
sarl
bnd
mov
imulb
sbb
pop
push
and
push
push
pop
jae
xchg
mov
dec
mov
add
jno
cmpsl
loopne
popa
test
pop
lods
enter
out
jb
jo
mov
cmp
out
pushf
arpl
mov
enter
jle
ljmp
adcb
movsb
jmp
ret
xor
xchg
addr16
sub
mov
cmp
xor
mov
hlt
ss
idivl
testb
shll
das
cwtl
cmp
inc
jmp
jno
xor
sqrtps
pop
inc
sbb
xchg
add
fwait
sbb
sub
jo
in
fwait
fs
and
and
in
sbbb
or
xchg
shlb
sub
push
mov
movsb
scas
mov
in
les
dec
imul
adc
or
mov
dec
out
enter
fisttps
sub
jl
pop
push
bound
jne
xchg
lods
cmp
bswap
stos
ret
insb
mov
repnz
mov
sub
push
xchg
out
aas
icebp
jnp
xchg
jl
out
or
push
cld
arpl
mov
testl
lcall
in
mov
lds
enter
fucomi
push
mov
lret
sub
jge
push
push
test
cmpsb
cltd
pop
ss
shrl
insl
notl
sub
sub
mov
xchg
or
xchg
jmp
in
test
mov
jle
sub
testl
xchg
inc
dec
sbb
dec
mov
mov
das
je
aaa
lret
jns
pusha
mov
jmp
mov
clc
push
mov
mov
sbb
sar
or
mov
aaa
pushf
bound
or
ret
repz
ja
mov
stos
sar
rcl
cs
inc
ds
adc
insb
xchg
addr16
dec
popf
push
pop
lret
fwait
das
test
ds
insb
in
adc
push
push
mov
push
dec
adc
push
and
push
push
cwtl
sbb
mov
cmp
dec
mov
mov
mov
inc
sarl
pushf
or
sbb
adc
cs
neg
mov
mov
aas
xacquire
pop
mov
dec
add
push
adc
aam
scas
ss
lret
mov
or
adc
sbb
mov
les
cmp
rorb
xor
loopne,pn
dec
cmc
mov
in
sbb
or
and
or
cli
in
xor
rol
sbb
stos
das
mov
or
push
mov
sub
sbb
mov
mov
iret
dec
cmp
addl
cmp
fistpl
inc
add
pop
lret
mov
dec
mull
subl
xor
repnz
xor
daa
and
rcl
push
xchg
fisttps
mov
push
movsl
mov
subb
aas
cmp
cmpsb
fsubs
imul
xchg
rolb
into
xor
push
in
mov
push
in
pop
das
mov
sub
xlat
sub
jg
in
scas
jns
push
faddl
or
dec
pop
inc
add
xchg
or
add
jmp
aad
nop
fcoms
pop
int
dec
pop
jle
popf
xor
es
xchg
xor
push
sub
in
clc
popf
test
arpl
sbb
add
insb
daa
xchg
es
test
cmp
jne,pt
ror
iret
xor
mov
xor
pushl
fdivr
outsl
imul
jl
fsubr
mov
ss
cmp
sahf
and
xchg
mov
cltd
xchg
int
fwait
jg
sub
or
or
lods
out
lock
ja
jno
lock
lods
dec
add
fcompl
sub
andb
mov
lahf
inc
or
sti
scas
jecxz
sub
jmp
js
pop
scas
inc
sub
mov
leave
bound
sub
enter
jo
jne
mov
sub
sub
aas
adcb
je
in
enter
mov
loopne
push
or
sbb
dec
out
outsb
sub
lahf
xor
fistpll
iret
es
jnp
sub
mov
insl
sbb
mov
push
dec
jbe
inc
pop
loopne
jnp
mov
push
ja
nop
out
pop
mov
jecxz
test
dec
mov
cmp
mov
push
in
int3
into
test
xchg
scas
pop
aad
enter
das
mov
cltd
xor
fimull
jmp
cmp
dec
push
hlt
jecxz,pn
push
cmc
or
stos
xchg
xor
jl
cmp
lock
movsb
jp
xor
pusha
in
loopnew
jno
ret
sti
mov
and
dec
sub
mov
sub
leave
int
fwait
arpl
lds
mov
jo
push
cwtl
sub
inc
cwtl
mov
mov
int
push
cwtl
jo
dec
ret
mov
add
in
cmp
add
fiaddl
cwtl
jmp
jecxz
nop
jp
lcall
mov
leave
scas
in
inc
inc
out
sub
test
js
add
xchg
mov
dec
insb
shlb
inc
sbb
inc
cmp
lret
pop
dec
popf
lret
mov
push
in
in
fstl
mov
sti
add
or
or
test
sub
mov
cmpsb
int3
jnp
sub
enter
jmp
jp
xchg
popa
push
and
push
lahf
and
push
inc
outsb
cmp
fnstsw
xor
cltd
xor
orb
mov
ss
mov
mov
cmp
xor
mov
in
out
push
nop
stos
arpl
mov
push
xor
mov
loope
sti
sbb
test
loopne
js
ljmp
adc
cmp
mov
sub
adc
sub
mov
jb
fldcw
frstor
cvttps2pi
and
mov
mov
sbb
mov
mov
sahf
cli
pop
push
sbb
shrl
pop
cmp
in
cmp
jecxz
cmc
jno
aas
lods
stc
inc
mov
int3
sbbl
pop
push
outsl
fstpl
inc
dec
nop
mov
mov
lret
test
aam
adc
add
dec
or
jle
and
out
and
js
int3
jle
sar
out
aam
dec
inc
push
or
and
sub
testl
fnsave
xlat
out
aad
decl
leave
aaa
lods
fldenv
into
xor
leave
in
add
pop
fcmovb
pop
mov
mov
arpl
cmc
cwtl
fisttps
jge
lods
lcall
or
mov
xchg
insb
push
movsl
cmp
xor
dec
imul
mov
or
fdivs
rorl
xchg
ror
push
mov
in
pop
cwtl
nop
scas
adc
cmc
jle
ljmp
test
aam
sarl
sarb
mov
xchg
push
mov
outsb
mov
mov
leave
cmc
gs
ficoml
xchg
jbe
out
pusha
fcompl
adc
jmp
pop
jge
or
cld
push
jg
inc
fists
inc
cmpl
xchg
xchg
sub
xchg
scas
push
push
ss
jns
std
jb
dec
std
lods
int3
or
sub
shl
cmc
cmp
push
in
dec
pop
ds
mov
in
jno
loope
lods
pusha
in
inc
xchg
fists
pusha
addl
push
cli
sbb
pop
andl
xchg
icebp
xor
ror
jge
jg
push
sub
aas
sbb
mov
jno
inc
jl
dec
mov
cmp
repnz
mov
jns
adc
push
das
iret
and
dec
sub
out
jae
addb
inc
cwtl
mov
xchg
enter
test
daa
scas
mov
test
xchg
and
lahf
int3
pop
cmpsb
popf
xor
ret
mov
out
mov
xorps
icebp
mov
out
aas
inc
or
jnp
enter
lods
js
mov
sub
insb
adc
out
in
sbb
gs
dec
mov
push
dec
sbb
cli
sbb
ss
cmp
lods
lods
xchg
fisttpll
adc
rol
lahf
rcll
mov
das
inc
dec
xlat
xor
jl
dec
cld
inc
ss
mov
or
subb
xor
and
aad
subl
in
call
inc
jp
mov
cmp
rcrl
gs
pop
ljmp
mov
push
icebp
push
leave
mov
and
les
mov
sub
insb
repnz
dec
adc
outsl
pushf
ret
sub
in
sub
jecxz
insl
push
imul
cwtl
push
shrb
pop
cmp
cmp
or
mov
and
sbb
push
push
es
xchg
mov
and
cmpsb
test
and
fdivl
sbb
cmp
or
add
iret
sub
jbe
jbe
push
jp
lea
or
sbb
mov
or
hlt
mov
jns
scas
ret
mov
cltd
mull
gs
enter
cmpsl
test
fucomi
movl
insb
ja
cmc
lret
pusha
scas
and
push
dec
or
inc
mov
pop
adc
sbb
addr16
sub
xchg
cltd
inc
out
add
pop
push
into
pop
loopne
or
xor
sub
lret
adc
jmp
xor
pop
movd
hlt
shlb
push
xor
add
mov
jg
lahf
fldcw
mov
jge
sub
in
push
mov
js
push
jbe
sarb
divb
loopne
mov
lds
sub
and
and
jb
push
xchg
xchg
sahf
jp
enter
mov
insl
repnz
sbb
lahf
mov
xor
test
jl
mov
test
xchg
cmpsb
mov
inc
jp
leave
push
out
fbld
inc
ljmp
lods
aas
xchg
es
dec
loopne
or
ljmp
ja
rcrb
clc
test
lds
loopne
jl
xchg
and
jmp
dec
pop
clc
lods
sbb
xchg
shll
jae
jbe
imul
dec
lock
lock
xchg
add
pop
sahf
std
xchg
ss
add
sub
jbe
jle
aas
or
aas
adc
sub
pop
or
mov
fwait
js
ret
rcrb
call
pop
lret
mov
in
mov
cmpsb
push
leave
lods
aad
xchg
and
dec
js
and
insb
popf
xchg
push
test
adcl
dec
inc
pop
pop
pop
leave
stos
fimull
movsl
dec
mov
pop
mov
movsb
call
and
mov
repnz
clc
or
dec
and
lds
rorb
bound
stc
leave
notb
mov
push
xor
test
lods
xor
xlat
push
pusha
inc
sbb
aas
ret
push
xchg
and
adcb
jbe
or
dec
int
mov
mul
mov
shlb
into
fs
inc
push
sti
mov
mov
mov
and
sub
mov
hlt
stc
push
and
dec
cmp
push
xor
mov
fiaddl
cli
test
pop
pop
dec
and
mov
cmp
lret
sub
pop
aaa
xchg
nop
ret
mov
add
sbb
rcrl
roll
arpl
out
sbb
mov
into
add
sbb
and
xchg
in
mov
mov
clc
addl
push
imul
add
dec
and
insb
xlat
mov
jl
mov
inc
sti
inc
sbb
push
pop
mov
lret
xchg
and
or
fs
mov
inc
pop
out
mov
ret
mov
jo
add
sub
mov
lock
inc
cmp
mov
xchg
cmpb
nop
xchg
inc
lea
leave
mov
push
push
pop
arpl
div
xchg
pop
es
pop
or
xor
sub
jb
xor
inc
inc
stos
test
mov
mov
notl
push
adc
ret
lea
movsb
std
xlat
jnp,pn
in
sub
loope
xor
dec
inc
sti
mov
ljmp
xor
adc
fnstenv
xchg
add
dec
imul
movsl
testl
bound
jns
outsb
and
push
aad
jp
sbb
mov
bound
or
xor
mov
imul
fisubl
lcall
popf
mov
dec
pop
lods
sub
xchg
mov
or
das
dec
xchg
mov
mov
or
out
mov
inc
push
dec
scas
dec
int
andl
divb
jo
test
add
or
out
test
mov
aam
inc
outsl
or
aam
jbe
jmp
lahf
nop
in
mov
xchg
adc
sbb
and
shll
jb
push
xchg
rcll
out
and
fisttpl
loop
ficoms
cld
leave
jecxz
jmp
xchg
inc
push
cwtl
mov
lcall
fadds
cmp
rorb
jmp
sbbb
sub
mov
jnp
and
mov
lcall
imul
mov
or
jae
rclb
jmp
arpl
jl
or
mov
gs
jmp
and
lods
lcall
and
xchg
fistl
adc
jo
ret
inc
mov
jecxz
dec
cs
sbb
add
std
into
fildl
inc
gs
ret
int3
fsts
push
aaa
outsl
shrl
add
pop
popa
push
dec
lcall
ds
rcrl
add
ljmp
mov
in
mov
dec
add
add
outsl
in
mov
packsswb
js
mov
popl
mov
mov
clc
push
and
mov
ss
add
in
mov
jp
adc
repnz
push
inc
aas
or
push
jmp
cmp
out
xchg
repnz
in
imul
dec
cmp
jp
movsl
ficoms
mov
adc
cmp
mov
punpckhwd
inc
xchg
fdivrs
and
lea
rorl
and
inc
lods
call
xchg
dec
fadds
in
add
arpl
jbe
mul
mov
pusha
leave
fisubs
fcomps
aas
in
test
sub
stos
pop
pop
out
adc
mov
lock
mov
scas
xchg
and
mov
add
dec
fidivrl
scas
aaa
mov
pop
fcom
dec
cmp
fidivs
xchg
cmpsl
test
and
addr16
repnz
rcll
cmc
das
cmp
push
mov
xor
sbb
pusha
int
mov
mov
cmp
iret
jb
jle
add
inc
mov
xchg
and
ret
std
loop
lock
int
mov
push
getsec
call
mov
aas
sbb
xchg
mov
xor
push
hlt
loop
push
or
out
inc
into
enter
mov
lds
mov
in
nop
add
mov
xor
dec
jbe
movsl
xor
xor
or
sbb
lahf
cmp
andps
dec
test
jg
adc
jp
push
lods
sbb
insb
cmp
jb
lea
pop
movsl
pusha
push
out
sub
nop
clc
and
adcb
test
loop
mov
jnp
repz
push
xchg
lock
in
push
mov
sbb
mov
inc
ljmp
jmp
inc
fstl
aad
mov
repnz
repnz
push
lret
add
xchg
mov
cmc
mov
es
add
mov
push
jp
in
scas
mov
mov
pop
inc
shl
inc
out
repnz
out
push
or
ja
int3
mov
dec
mov
dec
pop
lcall
test
fistpll
and
out
cmp
adc
out
sti
fs
ds
xchg
arpl
aad
mov
add
adc
in
scas
orb
dec
xchg
jle
mov
jns
mov
in
popf
inc
cltd
cmp
mov
xchg
jg
imul
sub
cwtl
mov
lock
pop
shrb
or
and
loopne
push
iret
dec
repz
jb
dec
call
inc
inc
sub
adc
out
cwtl
add
fldl
mov
jg
and
sbb
jae
fisttpll
sub
inc
inc
cmpsb
daa
gs
insb
loop
pop
or
insb
rol
lds
push
nop
iret
or
pop
aaa
rcll
loopne
daa
xor
push
aad
shlb
std
or
into
xlat
and
adc
movsb
xor
popf
adc
orb
inc
cs
mov
clc
fnstsw
cmpsl
shll
into
dec
or
hlt
push
dec
mov
scas
adc
mov
call
or
pop
mov
add
fistps
pop
pop
scas
dec
in
sbb
loope
pop
push
push
ficomps
les
stos
mov
jl
dec
movsl
or
mov
mov
add
int3
adc
adc
push
divl
push
push
xchg
cmp
inc
movsb
xchg
cmp
sbb
push
bound
xchg
inc
push
test
shl
mov
add
imul
jp
jle
dec
jbe
fisubrl
adcb
iret
rcrb
mov
out
mov
or
dec
sub
sub
lret
out
and
and
int3
xor
push
in
add
std
das
pop
shll
push
add
lods
inc
jne
sub
mov
loope
data16
adc
daa
shl
mov
loope
or
mov
jle
add
jl
fldcw
cmpsl
dec
ja
test
stos
add
inc
mov
sub
arpl
nop
bound
lds
jo
xor
jg
stos
call
or
aam
lret
jl
push
or
sub
mov
lods
push
mov
push
popf
test
pushf
stc
xchg
sbb
test
xor
jns
in
lcall
lock
xor
dec
repz
out
pop
mov
adc
inc
sbb
out
subb
ja
ret
sub
mov
push
dec
mov
loopne
mov
pop
inc
inc
fimull
decb
mov
lea
mov
push
push
scas
jg
mov
loopne
mov
insl
mov
imul
aad
rcrl
xchg
adc
mov
in
lods
fwait
clc
sbb
aas
cmp
or
adc
inc
fnstsw
xor
int
mov
pop
adc
outsb
push
sub
into
popf
mov
inc
sbb
push
gs
data16
mov
mov
dec
icebp
insl
movsl
mov
pop
ret
adcl
pop
jge
push
psubb
push
jnp
loopne
cmp
dec
pop
sub
mov
dec
mov
mov
fsts
xchg
fldpi
aad
jo
add
std
ret
push
shll
jmp
icebp
push
daa
test
lea
cmp
or
lcall
xchg
jecxz
pop
nop
imul
push
in
and
fidivrl
iret
cltd
pop
mov
out
repz
lcall
rclb
mov
mov
shll
inc
xchg
pop
pop
cli
icebp
xchg
lods
sbb
sub
push
add
aad
push
jbe
jbe
inc
cmc
adc
xor
lds
dec
adc
aam
and
inc
push
inc
les
push
xchg
inc
movsl
inc
sarl
inc
test
push
sbb
jb
dec
jle
and
lods
pop
add
dec
mov
test
cld
filds
dec
sbb
inc
inc
pop
mov
mov
stc
pop
pusha
js
movsb
repnz
add
pop
mov
jmp
adc
cwtl
mov
cwtl
xor
push
sub
mov
dec
inc
pusha
into
pop
lock
inc
mov
cmp
into
mov
push
and
or
sub
fnstenv
movsl
push
mov
sbb
jns
jnp
cmpl
lods
mov
add
jg
rolb
adc
lcall
or
out
xor
mov
in
std
leave
mov
aaa
push
loopne
add
icebp
sub
das
push
aas
out
dec
fdivr
mov
sub
pop
inc
stc
mov
repnz
add
adc
mov
mov
sub
mov
or
clc
xor
sbbb
pop
xchg
sub
pusha
jge
test
outsl
stc
fwait
in
shlb
lds
std
adc
adc
dec
adc
bound
shufps
pop
xor
push
mov
mov
aad
ret
cs
cmpsl
clc
xor
imul
mov
cmc
cwtl
add
adc
shll
stos
shrl
jbe
clc
fdivrs
or
pop
xchg
rorl
dec
sub
mov
shll
insl
and
mov
ret
cmpsb
xor
xor
push
sub
push
mov
ret
jbe
outsl
fs
mov
pop
xchg
pop
jg
or
pop
jne
xor
sbb
aam
repnz
daa
es
addr16
dec
clc
cmpsb
imul
mov
xchg
pop
push
cmpl
clc
cmp
mov
repnz
jmp
xor
lea
add
fwait
and
int3
dec
arpl
adc
andb
fs
aad
lock
call
leave
mov
dec
mov
pop
and
mov
dec
pop
icebp
jge
jg
mov
lea
or
jae
or
cmp
out
adc
mov
cwtl
daa
xchg
inc
outsl
loop
pop
pop
mov
mov
xor
push
mov
jp
in
sub
adc
aam
pop
iret
push
xor
data16
mov
or
pop
cmp
mov
and
jmp
cs
push
jle
cltd
mov
fcomps
pop
outsl
sahf
popa
mov
push
insl
add
decb
jecxz
out
xor
push
pop
push
and
jmp
ss
jns
pop
pop
outsb
xchg
popa
jnp
daa
push
pop
aad
xchg
jno
adcb
pop
std
out
orl
xor
jge
or
cmpsl
lcall
loop
or
movsl
mov
ds
in
push
or
insb
fs
ss
mov
adc
mov
test
adc
or
adc
add
fdiv
std
push
stos
repz
jmp
push
jp
cmp
out
xchg
mov
popf
xor
rolb
adc
and
movsb
jae
int
sub
insl
add
cmp
cmp
mov
xchg
popa
in
lock
fiadds
gs
mov
pop
popf
adc
jnp
pop
adc
cmp
test
xor
icebp
je
cmp
mov
xchg
sub
mov
sub
movq
sahf
popa
pop
xchg
out
sub
mov
lea
pop
jno
push
les
popf
mov
leave
test
adc
fldt
lahf
sbb
dec
mov
xchg
cmc
icebp
or
mov
int3
dec
mov
add
in
in
cmp
mov
popa
stc
cltd
pop
lods
cmp
das
jg
aad
sbb
mov
add
sbb
popa
js
pusha
cmpsl
xor
cmp
dec
out
and
jno
lods
repnz
test
inc
mov
cmp
mov
jns
orl
outsb
jl
adc
push
in
sbb
out
or
out
dec
test
in
push
pop
inc
xchg
xchg
xor
fdivr
aad
and
ret
cltd
aad
sub
lds
and
or
and
in
scas
cmp
or
xchg
jge
sar
xchg
jge
dec
ljmp
mov
aad
and
push
mov
lahf
add
bound
dec
in
shr
mov
inc
pushf
cltd
xlat
insb
mov
pop
sbb
fabs
and
sub
mov
adc
cltd
vzeroall
jl
sti
mov
movsl
out
pop
cmp
mov
enter
sub
out
jle
stos
xchg
adc
or
push
sbb
mov
test
lock
in
bound
popa
bound
lea
mov
add
loopne
inc
in
mov
repnz
fisttpl
repnz
fs
xchg
jecxz
mov
mov
aad
mov
jmp
mov
dec
cmp
leave
or
cmpsl
pop
cli
fs
mov
in
cwtl
or
stos
push
dec
or
sti
mov
sub
dec
ljmp
fiadds
rol
popa
ljmp
cmpsb
cmp
jecxz
out
sub
or
shlb
sub
mov
mov
inc
push
lea
mov
dec
shll
cmp
int3
movsl
stc
icebp
pop
adc
cmp
and
inc
in
insl
mov
aaa
cmpsl
movsb
xor
mov
sub
addr16
cld
mov
out
or
or
push
jp
dec
inc
dec
and
and
sub
ljmp
test
pop
sbb
cmp
cwtl
sbb
mov
jmp
sarb
stos
insb
daa
mov
addl
sub
ja
ret
orl
xor
movsl
insl
aas
push
jno
mov
js
negl
xchg
add
test
mov
bound
dec
sti
fsubrl
jp
pop
jle
adcl
ret
mov
inc
sub
iret
lods
scas
push
stos
xchg
insl
repz
mov
stos
andb
pop
sub
lret
push
js
xchg
dec
dec
mov
shlb
jb
xorb
fs
fcmovu
pop
push
dec
xchg
xchg
mov
rorb
es
pop
dec
sbb
mov
dec
mov
out
push
pop
cltd
adc
lods
adc
fnstenv
inc
fbstp
push
jno
xor
in
add
adc
sbb
imul
pop
test
lods
inc
sti
stc
lcall
int
ja
int3
mov
leave
bound
idivl
or
fbstp
in
nop
inc
mov
pop
and
stos
sub
ds
xchg
lods
sub
mov
sbb
repz
push
fstpl
ljmp
mov
mov
mov
mov
sbb
test
push
das
mov
jne
dec
into
xchg
and
pop
rclb
sbb
jp
or
les
je
cli
adc
push
jmp
call
and
rcrl
pop
mov
xchg
xchg
test
cmp
push
rorb
cmc
jle
std
mov
mov
jl
das
scas
andl
push
jo
pop
adc
and
cs
addl
and
push
pusha
adc
fcompl
jb
fwait
outsb
mov
repnz
es
addr16
pop
rol
pop
clc
ss
and
mov
ss
clc
iret
vrsqrtps
repz
mov
outsl
push
fldenv
jae
hlt
lahf
popa
xor
mov
outsl
imul
addr16
popf
dec
jecxz
int
xor
mov
das
cld
xor
js
stos
mov
push
push
pop
testb
or
aaa
int3
or
subb
mov
jecxz
xchg
dec
pop
cmp
fisubl
xchg
cmp
fadds
ja
test
mov
xor
pop
xlat
mov
xchg
divb
dec
push
jge
sahf
fmul
mov
mov
push
lods
adc
cmp
sub
inc
inc
ss
add
fs
push
or
dec
rcll
clc
in
mov
jnp
cmp
int
sub
shll
push
loop
pusha
mov
sbb
out
cmp
out
push
xor
xchg
std
cmp
push
jae
mov
xlat
inc
mov
les
out
cltd
aas
or
jge
xchg
adc
sub
je
ret
insl
mov
sub
popa
lea
fwait
or
add
scas
jp
push
and
fidivs
push
pop
jne
inc
lods
pop
mov
push
inc
test
icebp
gs
fldenv
push
mov
mov
push
movsl
or
cmc
push
fcoml
ljmp
lret
push
enter
sbb
and
inc
cmpsl
std
xor
push
pop
push
mov
adc
out
lret
jo
addl
loopne
jb
ret
sub
dec
pop
mov
fwait
enter
adc
inc
shl
int3
jecxz
mov
push
roll
imul
jg
popf
movsl
loopne
sub
addl
lret
and
dec
mov
inc
mov
sbb
cmp
dec
xchg
pop
mov
repz
xchg
fnstcw
in
pop
test
dec
ja
add
mov
xchg
pop
outsl
adc
rcll
or
adc
pop
jae
xchg
aas
pop
ret
bound
out
inc
adc
pop
dec
push
pop
mov
mov
inc
mov
leave
xor
pop
pop
mov
cli
test
mov
js
pop
push
jmp
ret
xor
inc
fdivs
fmull
es
enter
test
pop
and
mov
mov
and
popf
sub
test
fiadds
jge
mov
xor
xchg
push
fwait
adc
sbb
dec
ss
mov
das
daa
fisubl
aad
data16
jg
inc
or
loopne
test
push
loope
cmp
pusha
scas
mov
pushf
stos
cmp
aaa
jae
cltd
add
xor
cmc
cmpsb
repz
pushf
fs
or
jl
or
icebp
push
ret
rorb
adc
out
leave
jne
pop
lcall
fwait
sub
dec
cmp
mov
mov
fstp
xchg
adc
mov
repnz
add
xchg
adc
jo
dec
fbstp
push
xor
xor
out
xorl
fisubrs
scas
lret
cmpb
mov
dec
mov
inc
divb
mov
cmp
push
test
mov
or
pop
icebp
or
add
dec
push
outsl
nop
xchg
repnz
outsl
lahf
popa
out
int
scas
dec
loope
aad
loopne
mov
adc
in
popf
mov
xchg
fmull
nop
mov
aas
jb
dec
jp
test
fs
add
push
pop
shr
rcl
cmp
jno
jecxz
pop
mov
lock
out
fs
xor
xor
dec
sbb
bound
pop
in
lds
cmp
xor
sahf
or
sub
lahf
mov
mov
mov
js
adc
and
lods
dec
inc
mov
rcrl
das
scas
sub
xchg
jl
bound
js
add
sub
std
ja
and
out
pop
inc
add
inc
mov
pop
push
in
xor
lea
xchg
mov
mov
pushf
scas
mov
pop
int3
loopne
mov
and
imul
cmpsb
and
and
cmc
xor
jno
shrb
popf
cwtl
shl
dec
stos
xchg
cs
out
jp
je
pusha
mov
push
js
ret
enter
adc
mov
sbb
ror
xchg
cmp
jno
shrl
mov
jmp
cld
stos
xor
jno
xchg
cmpsb
or
jl
or
or
add
adc
jle
sbb
dec
push
mov
xlat
xchg
repz
push
mulb
clc
xchg
mov
push
out
sub
mov
lret
add
dec
je
ljmp
or
jne
dec
dec
mov
sarb
rol
mov
pop
addr16
jecxz
loop
stos
hlt
jo
shrb
add
adc
push
pushf
nopl
mov
and
cmp
adc
inc
dec
imul
movsb
insb
sbb
in
xor
jmp
mov
pusha
dec
pop
inc
cmp
mov
rcll
ficoms
mov
popf
mov
test
rcrl
aam
lret
cmp
adc
out
stos
movsw
dec
fcmovu
outsl
push
fidivrl
cltd
cmp
pop
lods
into
mov
jle
xor
dec
mov
jae
xchg
in
in
adc
sub
sbb
in
jae
mov
cmpsl
push
xchg
mov
mov
xchg
xor
inc
xchg
push
sbb
inc
pushf
sbb
test
xor
dec
jp
das
loopne
jmp
bound
xchg
mov
jne
sti
mov
sub
icebp
xchg
jno
add
cmp
lea
test
pop
push
into
xchg
repnz
xchg
lahf
scas
pusha
jmp
jne
lea
fnstcw
ss
enter
call
insb
cld
add
jg
or
fstpt
jno
sbb
mov
int
dec
movsb
adcb
repz
stc
fmuls
dec
or
fsubrs
push
inc
sub
lock
cmc
mov
cmp
shl
sahf
jmp
popf
add
mov
icebp
jo
shrb
mov
xchg
inc
or
test
in
xchg
rcrw
ljmp
add
xchg
daa
ja
idivb
adc
out
jb
cwtl
add
in
sbb
es
movsb
jb
fstpt
add
fwait
mov
xor
imul
jbe
mov
imul
mov
ljmp
dec
lret
xchg
cmp
cmp
or
push
mov
imul
nop
ss
push
cmc
filds
rolb
mull
decl
leave
xchg
sbb
repz
mov
shll
mov
mov
iret
lret
scas
cs
mov
cltd
es
adc
xor
and
xor
mov
jmp
mov
push
add
in
mov
int
scas
mov
cltd
xor
push
andl
loopne
stc
adc
xchg
add
aaa
jae
cmp
xchg
mov
push
cmp
xchg
mov
or
imul
out
jecxz
sub
insl
adcl
xor
cwtl
jp
cmpsb
insb
jb
dec
stc
xor
push
rcll
cmp
ret
xchg
aaa
jge
mov
push
rcll
mov
mov
mov
xchg
fldl
ja
mov
ja
adc
push
jo
mov
mov
jg
inc
sbb
aaa
mov
xchg
mov
int
add
cmpsb
inc
mov
aad
cmpsl
icebp
ret
dec
test
movsl
jb
push
icebp
jno
cmp
out
adc
jle
pop
and
scas
sarl
mov
sti
cwtl
xchg
das
ret
lea
out
pop
inc
jo
push
movsl
daa
stos
ss
jbe
cmpsb
int3
loopne
out
push
pop
xorl
jne
mov
push
adc
add
sub
std
jle
push
mov
pop
cmp
cmc
jg
mov
mov
stc
fcomi
push
lea
push
jno
push
cmc
cmpsb
mov
mov
xchg
inc
test
push
lock
adc
mov
push
push
jmp
test
orl
rorl
add
cmpb
cmc
ss
dec
xor
mov
and
xchg
inc
sub
test
dec
test
sub
jecxz
push
cld
notb
ficomps
sub
mov
into
test
pop
fwait
sbb
cwtl
cwtl
imul
fwait
orl
in
cmp
xlat
and
out
and
jae
rorl
push
sub
add
std
mov
arpl
add
mov
lock
rclb
xchg
pop
adc
push
mov
and
pusha
sub
push
mov
stc
jmp
mov
std
bound
enter
sbb
lea
mov
xchg
rcr
inc
xor
ljmp
xor
inc
test
iret
inc
sub
cs
subb
or
xor
dec
ror
and
sub
cwtl
incl
out
and
int3
push
popl
shrb
les
xchg
jp
jo
or
fcmovnb
pop
cmp
xchg
cmp
clc
frstor
adc
inc
clc
add
lret
pop
push
sti
enter
jo
and
cli
lds
push
xchg
sahf
pop
xchg
dec
das
andb
aas
lea
in
jns
lcall
mov
sub
pop
push
into
es
dec
mov
dec
fistps
mov
xor
or
mov
push
or
lcall
pop
notl
and
jle
mov
arpl
cmp
inc
popa
mov
sbb
mov
stc
or
adc
es
jno
out
repz
or
xor
xchg
dec
lret
decb
pop
xchg
lods
int
mov
jl
das
ss
out
hlt
mov
lods
add
enter
mov
lret
pop
cmpsl
repnz
xor
scas
cmp
scas
mov
push
mov
add
ficompl
xchg
subl
cmpl
xchg
push
xchg
in
outsl
inc
stos
enter
jp
popf
leave
jmp
xchg
aam
jbe,pt
sbb
inc
addr16
in
cmp
mov
icebp
fdivrs
and
mov
fstl
push
loop
and
cmp
xchg
mov
inc
es
shll
rol
inc
loopne,pn
mov
and
movsb
into
stc
rorl
inc
test
shl
mov
add
mov
sub
popf
and
hlt
leave
mov
repz
stc
jl
into
cmp
inc
adc
xor
das
jo
adc
test
test
aam
jmp
loope
jo
and
or
pop
sub
mov
dec
jge
or
pop
int
aas
lds
mov
push
addr16
fcmovu
lods
dec
shlb
out
out
test
fdivs
sbb
mov
pop
mov
jno
or
pusha
jecxz
jge
pop
loope
or
adc
sub
into
js
pop
scas
and
adc
loopne
and
add
jns
in
or
lods
ficompl
decb
es
decb
sbb
inc
and
pop
negb
mov
pop
out
mov
in
in
arpl
sbb
cltd
cmc
and
popf
push
scas
out
xor
sbb
dec
dec
mov
sbb
dec
jp
dec
out
sahf
iret
and
js
test
and
push
mov
and
push
in
sbb
and
iret
or
lock
jg
push
rcrb
sub
push
fbstp
cmpsb
sbb
mov
aam
out
mov
lahf
xchg
xchg
jl
and
lds
dec
dec
sub
testb
stos
fs
test
fwait
cmpsb
inc
in
push
bound
out
xchg
pop
dec
fsubrs
stos
in
sbb
popf
dec
ret
out
pop
fmuls
sub
jge
ret
out
or
jl
mov
mov
stos
and
mov
in
add
adc
push
add
bound
addb
jecxz
ficomps
into
jo
shll
xlat
ret
mov
jg
push
jle
fidivrl
inc
scas
push
in
cmp
int3
and
cwtl
test
insb
stc
fst
mov
sbb
in
arpl
data16
sub
inc
call
xchg
cmp
ja
jg
scas
cmp
xor
sti
notb
cmpsb
push
mov
jb
and
jl
xchg
sbb
test
xor
stos
dec
mov
pop
pop
sbb
mov
das
orl
repnz
mov
jnp
test
lcall
sub
mov
add
and
sahf
push
arpl
daa
out
out
xor
std
lcall
add
aad
add
cmp
jne
das
mov
add
cld
cmp
xchg
sti
test
mov
sub
push
jo
xchg
movsb
cmpsb
call
jg
js
loope
or
mov
push
fnstsw
ret
push
fwait
lea
sub
adc
ficoml
mov
fsubr
mov
xor
adc
andl
bound
cmp
jle
xchg
aam
mov
popf
mov
fistps
rclb
mov
adc
orl
xchg
sub
lcall
push
sbb
test
js
or
pop
idivl
jno
mov
or
sub
mov
add
jle
adc
and
leave
test
cmp
stos
and
clc
icebp
and
dec
mov
mov
sub
adc
hlt
pop
int
pushf
std
cmp
sbb
push
pushl
int
jge
dec
daa
aam
add
aas
es
fcomip
xchg
int3
stos
fmul
mov
aam
mov
fists
rolb
pop
pushf
cmp
sti
test
movsb
mov
not
adc
stos
push
dec
push
mov
or
movsl
das
cs
cmp
mov
lods
test
mov
adcb
bound
push
pop
dec
inc
or
push
sti
mov
orb
lea
fistl
cmpsl
add
mov
inc
movsb
dec
sti
leave
xchg
mov
mov
cmc
dec
or
rorb
outsl
in
push
int
or
push
sbb
lret
cmc
xor
pop
jne
add
imul
mov
xchg
mov
fs
pop
call
sub
fcompl
out
pop
fcomip
sahf
out
aam
fcoml
fcmovnu
scas
push
mov
cmp
icebp
push
dec
arpl
jb
dec
daa
xor
cmp
push
sahf
mov
inc
les
clc
jle
push
movsl
add
and
mov
arpl
sbb
adc
add
push
iret
fucomip
xor
or
pop
int
in
iret
jns
push
sub
or
jg
pop
test
jl
fsub
pop
arpl
test
int3
int
dec
scas
xchg
int
popa
cltd
sbb
adc
mov
xchg
jecxz
stc
inc
add
add
lret
rcll
mov
sbb
inc
jecxz
sub
or
shl
cwtl
cs
push
cmpsb
in
cmp
adc
push
push
adc
dec
jge
enter
aaa
daa
lea
add
jecxz
bound
xor
insl
add
xor
and
push
mov
out
cmp
adc
xchg
jg
gs
sarl
pushf
xchg
pop
push
dec
mov
stos
add
or
cmp
jb
rorl
sbb
push
push
cmp
mov
jb
jne
add
dec
push
or
insl
mov
popa
adc
xchg
stc
bound
shl
mov
pop
pushf
loop
shrb
loop
jecxz
cs
or
pop
lds
mov
daa
loope
xchg
xchg
jl
mov
mov
xchg
xchg
xor
push
test
adc
loope
pop
xor
bound
mov
push
repz
repnz
test
arpl
lcall
mov
stos
sbb
cld
data16
jae
push
rcrb
push
or
incl
aas
sbb
es
adc
ds
sbb
cmp
pop
xchg
sub
and
sub
iret
pop
pop
stos
add
inc
ss
ss
mov
cld
jno
and
lcall
fstpl
fisubrl
iret
mov
dec
xchg
addl
sub
dec
dec
and
sbb
xchg
insl
xchg
xchg
mov
lods
aad
mov
getsec
pop
and
sub
js
jb
rclb
data16
int
out
inc
dec
mov
sbb
mov
or
fnsave
lret
add
and
and
in
fs
daa
adcb
xchg
mov
aam
and
cmp
xor
xchg
subl
push
sbb
inc
and
repz
dec
das
stc
or
xchg
rorb
lods
sbb
mov
push
int3
jo
mulb
cs
xchg
rolb
call
inc
jb
lret
or
test
imul
sbb
xlat
cld
in
cmp
sbb
bound
add
and
or
hlt
add
push
imul
xchg
xlat
jmp
clc
scas
sbb
pop
xor
out
repnz
xor
aam
xor
mov
adc
fwait
push
jae
mov
xchg
jmp
pop
loope
xchg
sahf
stos
call
hlt
adc
sub
fisttps
push
test
adc
adc
adc
loopne
pop
scas
jne
push
test
repz
and
js
sub
pop
xchg
out
incl
test
fstps
pusha
mov
xor
icebp
sub
scas
and
test
lods
popf
sahf
pop
mov
xchg
sti
sub
cli
hlt
popa
cli
sub
push
mov
lahf
rorb
xchg
ds
add
loopne
loop
cltd
adc
cwtl
cmovp
insl
pop
test
inc
xorl
shll
out
jp
nop
pop
adc
xor
sub
daa
mov
mov
pop
call
mov
dec
jb
inc
add
mov
xorl
adc
cmp
add
adc
das
sbb
add
icebp
mov
mov
sahf
out
sbb
fcompl
or
and
sbb
ljmp
cmp
arpl
mov
xlat
inc
rorb
push
mov
lods
inc
aaa
push
les
shll
pushf
mov
mov
push
ret
cmpsl
pop
outsb
loopne
dec
pop
bound
lahf
push
outsl
cmp
repz
scas
dec
pop
mov
popa
je
rorl
scas
outsb
sbb
cmc
sub
cwtl
out
push
out
push
lret
fwait
movb
arpl
jbe
imul
cltd
jle
dec
sahf
adc
cs
adc
push
mov
shr
mov
popa
push
sub
ljmp
mov
cmp
xor
enter
jl
or
and
inc
dec
sarl
add
outsb
xor
sub
ret
dec
or
dec
push
jg
jb
cmp
neg
repnz
bound
dec
or
jno
stc
rcrl
or
push
pop
shll
xchg
or
and
stc
cmp
cmc
insl
add
mov
stc
lcall
pop
push
imulb
es
stc
mov
int3
mov
ljmp
mov
mov
jg
dec
sub
and
sbb
or
cmpsl
push
mov
sbb
push
add
cld
icebp
sub
sbb
fstps
shr
mov
out
adc
rorl
shll
pop
imul
scas
xor
hlt
fs
scas
dec
btr
in
xchg
pop
mov
jae
cmp
mov
les
dec
sub
mov
fdivr
adc
xchg
shrb
xor
mov
sbb
dec
inc
fstpt
mov
jno
ljmp
fnsave
dec
or
inc
fwait
das
ljmp
notb
sub
xchg
inc
sub
inc
aad
jg
cmp
or
ret
cmp
sub
jnp
mov
and
sub
cmp
mov
inc
loope
loope
call
xchg
pop
xchg
jl
dec
pop
in
pop
ja
sbb
xor
pop
fdivrs
arpl
lock
add
xchg
mov
fwait
or
js
mov
inc
jb
into
xlat
call
popa
js
repz
push
mov
add
mov
pop
enter
pop
neg
outsl
fimull
inc
cs
jne
xchg
repnz
movntps
lods
jno
or
out
lods
ds
jb,pn
cmc
xchg
sbb
jno
in
adc
mov
sahf
and
movsl
test
mov
sbb
movswl
push
imul
add
xchg
cmp
or
lahf
pusha
xchg
cmp
sbb
stc
sub
cmc
mov
xor
ficoml
in
dec
cmp
inc
push
stos
xchg
addr16
inc
xchg
mov
adc
std
mov
sub
movb
aaa
mov
in
rcll
jl
out
cwtl
pusha
scas
int3
xor
sub
sub
movsb
inc
pop
mov
shlb
pop
mov
pop
jae
ss
push
push
sti
push
dec
out
jae
f2xm1
lret
mov
jb
insl
jp
sub
and
cmp
js
sbb
sahf
add
jae
adc
xchg
jb
enter
outsl
stos
mov
sti
dec
adcl
sahf
out
xor
inc
and
lcall
dec
into
xor
mov
loopne
rolb
outsb
mov
push
and
and
xor
dec
pop
or
fsubrl
aas
pop
lret
push
test
push
ss
sbb
inc
jmp
mov
cmpsb
inc
xor
push
add
inc
imul
xlat
mov
sbb
leave
aas
shufps
pop
add
mov
pop
jg
orl
jb
cs
dec
dec
inc
cmc
adcb
push
jle
adc
jae
fldl
enter
mov
cmp
pop
mov
mov
pusha
xor
test
lock
mov
cs
mov
out
push
or
in
xchg
cwtl
lods
int3
pop
jbe
shlb
sbb
xor
ret
mov
jb
mov
enter
sub
mov
scas
mov
cmp
fsubrp
out
aas
jne
out
mov
mov
lcall
je
sub
xsaveopt
inc
xchg
je
or
into
nop
or
cmpl
rcr
sahf
loopne
mov
or
dec
test
cmp
popf
xchg
sbb
js
and
pop
mov
xchg
sub
dec
mov
arpl
or
pop
sbb
rol
ret
or
dec
imul
xor
push
aaa
fstp
loop
scas
xchg
cli
xor
sub
cwtl
hlt
cmp
lods
jg
add
adc
jae
pop
pop
sbb
insb
mov
repz
push
out
dec
out
pop
and
std
inc
or
pop
push
cmp
jp
cli
loop
jl
js
cli
mov
push
cld
cmpb
pop
and
insl
scas
scas
scas
insl
fiaddl
popf
lahf
mov
and
clc
pusha
push
push
in
xchg
jp
data16
cmovo
enter
mov
sub
and
sub
test
fisubs
das
je
scas
jmp
push
outsl
xchg
xchg
orb
stos
test
push
cmpsb
xchg
aam
push
mov
push
or
jge
imul
mov
test
aad
loopne
jl
mov
icebp
jecxz
jb
hlt
push
pop
roll
ja
xor
adc
jnp
and
shll
mov
inc
add
adc
arpl
jp
mov
mov
icebp
lods
xchg
lret
inc
lds
dec
cmc
and
cwtl
cmpl
mov
dec
frstor
mov
sahf
lock
or
loop
xor
mov
fnstsw
mov
push
mov
jmp
jmp
dec
sub
pop
sbb
jmp
mov
push
mov
lcall
stc
xor
and
mov
in
push
cwtl
jne
aad
xchg
call
pop
les
mov
mov
loope
push
pop
cld
push
xor
adc
hlt
imul
dec
xor
insl
ss
mov
test
jg
xor
in
ret
cmc
notl
xchg
shll
add
outsl
rorl
call
inc
addr16
arpl
jecxz
pop
aad
jne
dec
mov
and
decb
cltd
xchg
lock
sub
xor
gs
fldt
or
sub
push
and
lret
dec
cmpsb
ds
mov
fs
sbb
lock
stc
dec
pusha
push
idiv
out
mov
or
aaa
fisttpll
popa
dec
mov
xchg
movb
scas
je
lret
jmp
lahf
lock
repz
add
dec
negl
nop
roll
dec
inc
in
in
lret
jb
int
push
test
mov
sahf
mov
daa
fwait
xchg
and
add
aam
imul
mov
pusha
lcall
test
push
cmp
rclb
sbb
aam
mov
sbb
push
mov
decb
mov
push
jp
lcall
mov
pop
sub
dec
inc
clc
cli
mov
insl
adc
imul
lret
pop
inc
out
cli
into
or
out
loope
aam
ds
std
or
cs
dec
repnz
dec
inc
call
mov
push
mov
adc
inc
mov
repz
out
lods
arpl
pop
testb
mov
inc
out
ret
test
inc
dec
mov
icebp
xchg
jl
aaa
jne
inc
mov
ss
push
sub
mov
imul
mov
adc
mov
sbb
dec
mov
fs
sub
dec
dec
dec
mov
daa
mov
push
mov
rorb
pop
mov
jl
mov
push
jnp
pop
sti
pop
arpl
orb
rorb
pop
pop
sbb
arpl
or
bound
mov
iret
cmp
mov
mov
out
mov
jl
iret
inc
addr16
sbb
mov
add
xchg
adc
ret
inc
ret
int3
movsl
and
jnp
push
sti
out
gs
pop
jo
stc
je
pop
ds
sbb
movsb
adc
lock
jecxz
fistpl
aad
inc
jmp
add
bound
jb
or
mov
add
ret
jl
int
out
push
aad
mov
inc
sub
aaa
sbb
imul
shrl
repz
ds
mov
add
fsubs
sahf
and
in
or
loopne
xor
adc
cltd
pop
cltd
inc
outsb
pop
add
cs
dec
adc
call
rep
push
test
push
fdivrs
sbb
fsts
insb
xlat
add
shll
adc
xchg
aad
mov
fs
data16
rcrb
std
mov
in
adc
mov
stc
mov
cmp
lret
aam
shl
call
jb
orb
aam
xor
inc
pop
pop
iret
fs
cmc
pop
add
cld
loope
mov
orl
mov
pushf
pop
repnz
in
add
aad
dec
cwtl
or
scas
les
sbb
sub
and
push
mov
mov
cltd
int
and
adcl
xor
push
faddl
add
xor
inc
fdivrl
inc
adc
scas
insb
movsl
pop
popf
pop
mov
iret
xchg
jle
iret
lods
lock
pop
dec
lret
sub
mov
rcrl
neg
xchg
cmp
dec
fwait
and
pusha
inc
mov
call
aas
shrb
lods
xchg
mov
dec
lock
into
dec
aaa
movsl
mov
mov
sarb
mov
iret
ds
gs
cmc
gs
fistps
sub
mov
cmc
out
cmc
shlb
es
clc
jg
icebp
or
out
mov
fidivrl
or
pop
stos
mov
out
xor
xchg
adc
lahf
mov
mov
xchg
cmp
mov
pop
mov
dec
das
add
and
or
sarl
hlt
and
add
sbb
leave
pop
out
ljmp
fidivrs
ss
test
pop
add
push
icebp
mov
pop
aas
out
repz
fwait
mov
insb
ljmp
pop
repz
outsb
or
icebp
mov
stos
sbb
shl
popa
mov
cli
add
mov
out
mov
repnz
push
pop
sti
lahf
and
xor
out
inc
jecxz
and
inc
pop
or
mov
into
jmp
imul
aam
pop
mov
dec
mov
les
dec
jge,pn
jno
fmull
or
in
mov
in
orb
aas
pop
fildll
popf
movzbl
push
jae
je
mov
sbb
je
inc
push
sar
addb
je
sbb
mov
stc
rcr
out
mov
add
sbb
imul
insl
mov
lods
sub
addb
in
in
ja
ds
pushf
inc
cmc
inc
cmc
xchg
push
pusha
dec
imul
xor
movsb
imul
pop
jg
scas
dec
xchg
fnstenv
pop
xchg
jno
lods
mov
mov
pushl
jg
ja
cmp
jo
xchg
pop
pop
pop
mov
jp
mov
dec
or
into
cli
sbb
imul
es
push
xchg
int
xor
mov
pop
testl
push
iret
sti
gs
cmpb
mov
jns
add
fstpt
outsl
and
mov
leave
sbb
pop
sahf
and
cmc
lret
push
adc
rolb
sub
sub
fiaddl
daa
adc
lcall
cwtl
mov
inc
cmp
sarl
fcoms
sbb
add
sub
aas
inc
lret
test
jno
and
ljmp
cs
jne
loopne
xchg
mov
add
ss
int
setle
mov
mov
into
pop
lret
jb
pop
jp
insl
sub
adc
cli
pop
dec
cmpsl
jle
sbb
cmpb
in
sub
loope
sub
pop
fists
xchg
popf
add
or
adc
xchg
roll
ss
sbb
adc
add
lahf
mov
iret
je
pushf
addb
mov
and
pop
iret
sub
lods
sub
rol
orb
ds
jae
jb
pop
jns
add
fwait
outsb
or
jbe
stos
push
mov
aam
sub
mov
or
push
mov
inc
nop
mov
dec
dec
cmp
mov
inc
sub
mov
aad
lock
test
aas
cmp
int3
mov
fsubl
cmpsb
mov
push
sub
cmp
rcrl
add
pushf
inc
mov
std
movsl
sbb
or
mov
cs
lods
push
sahf
ja
pop
or
movsb
shl
js
dec
push
push
push
xchg
shll
mov
xorl
jbe
pop
stos
or
xchg
loope
out
daa
jnp
inc
in
les
decl
push
mov
in
lock
arpl
push
data16
mov
mov
lds
sub
mov
movsb
lods
jecxz
cltd
ds
divl
xchg
imul
push
cs
arpl
mov
inc
leave
sub
fdivr
pop
pop
inc
lea
mov
adcb
push
mov
xchg
test
xchg
sub
outsl
aaa
pop
pop
sub
cmp
jne
sub
ret
out
or
cwtl
dec
add
and
dec
cs
jp
enter
and
jl
mul
clc
je
int3
dec
imul
or
lods
and
into
in
mov
xchg
or
mov
fwait
push
pop
les
test
leave
pushf
fsubs
xor
aaa
xchg
jle
scas
or
int3
outsl
mov
or
dec
mov
and
fimull
sub
mov
cmpsb
xchg
sbb
cwtl
shll
movsb
out
jge
add
cmpsl
jne
cltd
jp
imulb
push
loope
pop
out
test
arpl
mov
lds
test
into
or
push
in
lret
xchg
xor
xor
addr16
ja
jp
xor
jp
js
and
mov
out
loope
stc
shll
dec
fiaddl
out
xchg
and
orb
xchg
mov
rorl
insb
fstps
sahf
and
cli
fistl
xor
scas
adc
pop
mov
xchg
clc
pushf
jne
sub
mov
push
push
in
aam
icebp
mov
add
xchg
mov
shl
lret
mov
dec
clc
cmp
popa
loopne
jnp
ja
pop
popa
push
lret
jbe
inc
mov
pop
mov
insb
out
fnstsw
mov
xchg
inc
repnz
xchg
mov
inc
dec
push
sbb
sti
sbb
mov
iret
pushf
loop
pop
push
push
stos
cmp
arpl
cld
jnp
pop
test
mov
fmull
addr16
dec
push
in
sbb
inc
xchg
aaa
and
xor
inc
or
in
clc
data16
idivb
shl
sti
mov
mov
fsubrl
push
shlb
repz
lea
mov
popa
mov
hlt
shrb
adc
fstpl
out
dec
pop
mov
aam
arpl
je
ret
in
sub
mov
mov
scas
jne
hlt
sahf
jl
ja
bound
cltd
push
adc
inc
in
fdivs
nop
pop
and
ficoms
mov
pop
lahf
mov
ljmp
mov
in
jbe
rorl
push
mov
mov
pop
xchg
mov
test
je
ret
cmp
push
cli
xlat
pop
push
aas
jle,pt
shufps
cmp
mov
sub
daa
add
xor
add
fnstcw
lcall
repz
xor
cltd
out
icebp
cmp
sahf
push
jb
aaa
push
sbb
icebp
lahf
insl
aas
xchg
inc
xchg
add
ret
iret
fistps
lret
insb
lods
incb
adc
mov
pop
jge
mov
sub
adc
add
in
inc
and
xchg
fisttpll
pop
into
xor
neg
adc
dec
or
jmp
rorl
setnp
inc
jb
ret
sub
fldcw
out
andl
xor
shlb
and
mov
jo
bound
mov
jmp
jmp
mov
mov
cmc
mov
icebp
frstor
lcall
mov
inc
mov
sahf
dec
ss
lahf
stos
fnstsw
jbe
push
xchg
and
mov
in
sahf
out
pop
jle
repnz
dec
jo
adc
cli
add
loopne
cli
adc
push
cs
aaa
leave
test
ljmp
dec
dec
out
or
int
test
xchg
iret
scas
pop
mov
xlat
leave
mov
or
and
into
sbb
call
scas
cmp
repnz
or
cvtdq2ps
scas
inc
sarb
push
or
dec
mov
loop
fs
xor
mov
add
out
in
popl
cmp
ret
cmp
pop
ja
cmp
mov
lret
or
jl
cmp
jmp
push
or
shr
jge
pop
in
add
jg
lret
aad
cmpsl
loopne
loope
xchg
daa
sbb
and
add
fsts
mov
cmp
sub
aaa
xlat
aad
mov
and
shrl
xchg
mov
cmpsb
fcompp
push
push
sub
cmp
lods
add
ljmp
pop
sub
ss
inc
movsl
pusha
dec
cmpsb
mov
xor
idivb
out
inc
mov
mov
xor
push
mov
push
shl
daa
push
insb
test
cmp
not
mov
sub
cli
push
aaa
iret
xor
leave
repz
inc
leave
jmp
fimuls
or
cmp
rcrb
xchg
mov
movsl
cmpsl
cmp
mov
xchg
xor
aas
test
push
cltd
cmp
aad
add
jb
cld
std
jp
loope
aam
xlat
xchg
and
insl
aad
xchg
cmp
test
leave
aam
or
inc
cld
cmp
lea
int
cmp
lods
xchg
outsl
xchg
and
dec
test
ljmp
adc
lea
push
pop
outsl
iret
inc
jl
cld
cwtl
mov
shlb
pop
pop
sbb
pushf
and
shr
andb
fnstenv
dec
sub
inc
popa
pop
rcrl
sub
push
xchg
out
or
lods
rcrb
xor
jge
popa
pop
push
mov
scas
mov
stos
adc
dec
xor
jge
jae
sbb
loope
shlb
jbe
mov
test
insl
xchg
shrl
movsb
cmp
les
jne
popa
push
iret
fistl
dec
enter
jmp
adc
sti
mov
test
and
cmpsb
imul
into
inc
call
xor
es
xchg
les
loope
loopne
pop
mull
pop
jecxz
pop
inc
aad
and
jno
push
dec
or
lods
call
scas
shlb
aaa
inc
repnz
fdivl
xchg
push
sub
mov
sub
mov
sbb
push
out
xor
lret
lds
sub
test
std
cmp
sub
aad
jmp
addr16
aad
pop
push
xchg
daa
outsb
mov
cs
cli
out
push
lahf
out
stc
mov
jmp
dec
cld
pop
and
ja
push
rorb
sbb
pusha
add
add
pushf
cmp
fs
in
xor
scas
mov
push
and
dec
xchg
pop
mov
sbb
iret
or
adc
cmc
ja
or
mov
mov
fldl
push
pop
jne
inc
loopne
push
ja
ljmp
mov
je
push
add
push
dec
lds
push
cwtl
add
into
out
and
jle
mov
mov
add
aad
insl
or
xor
movsl
repz
dec
in
pop
or
sbb
or
mov
and
fstpt
xchg
outsb
add
outsl
ja
xorb
daa
cmp
fdivrp
popf
and
popl
or
lock
adc
mov
aad
insb
mov
add
inc
push
addr16
mov
lret
sbb
loop
cmpsb
pop
jns
sbb
in
into
iret
sbb
and
mov
fmul
inc
int
xchg
pop
adc
dec
lea
dec
cmp
and
add
cmpsb
mov
lods
scas
mov
push
outsl
mov
xlat
sbb
cmp
mov
cmpsb
in
cmp
mov
decl
sbb
adc
mov
shll
arpl
out
xchg
cs
shll
sub
mov
shlb
andl
sbb
lret
cmp
cmp
mov
pop
jmp
loopne
aas
call
sar
scas
imul
pop
jge
xor
orb
aaa
sbb
sbb
jo
sbb
push
out
xor
fisttps
aam
adc
xchg
rorb
jae
sub
jae
outsb
add
and
push
mov
aad
xchg
add
add
adc
loop
bound
xchg
in
arpl
dec
testl
testl
pop
shll
sbb
fisubl
fnstcw
xor
in
int
sbb
in
push
dec
adc
dec
fcomp
inc
imul
sbbb
jne
jbe
ja
aad
or
sub
bnd
add
push
imul
xchg
ficoml
inc
nop
loopne
ss
fiadds
lods
loope
shl
pop
sar
xor
call
ss
iret
addr16
insb
aas
cwtl
stos
xchg
mov
adc
mov
repnz
sbb
mulb
sub
sti
pop
mov
nop
lods
daa
sub
push
shlb
or
into
into
cs
pop
push
aas
shlb
aad
arpl
push
mov
aam
icebp
add
fsubrp
stos
sbb
lahf
mov
int
enter
pop
cltd
pop
push
outsl
loope
pop
ret
shr
inc
popl
mov
je
mov
dec
mov
aas
call
clc
das
lea
jae
sahf
mov
pop
movsb
pmuludq
xchg
movsb
popf
cmp
pop
mov
jne
cmp
enter
loop
dec
cld
in
dec
dec
xchg
mov
icebp
sub
fpatan
cmp
add
ja
test
inc
wbinvd
jns
in
call
pop
xchg
fs
es
scas
push
mov
cs
pop
xchg
sbb
xor
mov
shlb
sbb
aas
push
lock
leave
dec
xchg
cli
or
ss
jae
pusha
cmp
sbb
ss
mov
orl
ret
ljmp
dec
rorb
push
aam
xchg
inc
dec
mov
adc
ss
mov
cwtl
insb
aam
fucom
jg
pop
push
add
pop
ror
mov
out
and
mov
push
mov
dec
cli
sbb
mov
out
inc
cmc
add
pop
inc
adc
rcrl
push
mov
sub
or
mov
sbb
mov
or
jnp
inc
in
push
and
fisttpll
mov
test
test
clc
mov
mov
mov
in
sbb
xchg
test
xor
subb
aaa
imul
sbb
jbe
mov
sbb
adc
clc
int3
aad
mov
scas
push
sub
insl
dec
mov
fmull
or
mov
xor
out
out
xchg
mov
daa
lds
or
fiadds
jge
xchg
pop
ja
and
in
mov
dec
and
sbb
xchg
jle
cmp
ret
xchg
lds
frstor
movl
rorl
ljmp
fnstenv
inc
mov
sbb
adc
push
out
lahf
pop
mov
insl
xchg
xchg
xor
jge
mov
mov
iret
xchg
mov
xchg
test
pop
dec
and
inc
in
subb
jl
inc
or
push
jne
xlat
leave
xlat
mov
mov
loop
xlat
sar
cmp
popa
mov
or
rcrb
dec
jle
jno
dec
cltd
cmp
mov
mov
movsl
shrb
aad
push
insb
dec
pop
ror
push
jbe
sbb
sbb
pop
xor
pop
add
popa
fwait
cmp
push
aas
out
lahf
imul
pop
mov
sub
adc
xor
dec
adc
sbb
gs
cmp
adc
in
mov
fmull
mov
sti
mov
movsb
sub
mov
push
pop
add
jnp
pop
cmp
xor
les
inc
adc
shl
push
cltd
mov
jo
ret
sti
add
mov
add
test
aam
push
add
rclb
ja
cmc
mov
rcrl
add
sbb
or
mov
lret
add
pop
out
adc
in
icebp
das
addl
ficoms
jp
mov
testb
xor
pop
sub
gs
loope
int
icebp
icebp
in
cmp
xor
jbe
mull
push
fisubs
sub
into
mov
or
fwait
lahf
or
js
sbb
in
popf
and
xchg
ret
push
mov
add
sahf
jmp
xchg
sarl
punpckldq
cmp
dec
cmp
je
jl
cmp
fiaddl
call
aaa
jne
sub
and
sbb
xlat
cmp
popa
scas
inc
push
ja
dec
lods
xchg
outsl
push
sub
jns
fiadds
add
jge
xchg
mov
mov
add
jmp
mov
movsl
adcl
mov
lahf
mov
mov
mull
ss
sbb
sub
gs
outsl
dec
pop
mov
scas
and
cltd
pushf
mov
and
add
lahf
sub
pop
xor
adc
and
or
lods
dec
fsubrl
and
inc
or
leave
jecxz
out
stc
sahf
push
dec
inc
out
push
jnp
and
sbb
cmp
sub
push
inc
ss
and
jne
push
push
xor
cmpsl
stc
fcomps
andb
aam
cmp
pop
pop
or
dec
movsb
dec
scas
sbb
push
adc
lods
mov
std
cmc
pushf
out
test
cmpsl
xor
insb
push
imul
sub
ror
scas
and
test
sti
imul
sub
sbbb
scas
loop
add
adc
dec
sbb
enter
mov
in
dec
sbb
loopne
addr16
sarb
loopne
lret
cwtl
rolb
sub
cmpsl
jo
std
xor
rol
nop
pop
inc
push
xchg
xchg
cmpsb
jge
outsl
mov
aas
lcall
pop
pop
fiadds
xchg
sbb
mov
in
scas
or
mov
fldenv
xchg
fnstenv
mov
aaa
cmp
push
sbb
fiadds
insl
sub
mov
pop
mov
clc
stc
or
add
fwait
mov
jbe
out
pusha
js
add
jnp
sarb
sbb
jne
sub
cltd
sub
jge
mov
cld
out
loope
ret
shlb
mov
adc
xchg
mul
into
in
test
shl
and
imul
pusha
jnp
sub
dec
pusha
inc
xor
popa
sti
adc
push
lods
sub
scas
push
push
andl
in
loopne
neg
nop
mov
jge
sti
mov
lock
lahf
jge
loopne
imul
fs
dec
test
push
repz
mov
stos
fcoms
je
insl
dec
roll
popf
push
jbe
xor
test
lea
ret
xchg
pop
jg
lcall
inc
cs
or
pop
fs
and
mov
mov
loopne
xchg
lret
in
repz
adc
sub
jmp
imul
fwait
inc
popa
push
sbb
pop
mov
lahf
cmpl
and
cwtl
jnp
sbb
mov
and
cltd
pushf
aam
xchg
aaa
and
fldcw
les
adc
pop
lods
jo
add
testl
fildll
pop
nop
pop
cmpsb
leave
iret
sbb
stos
stos
fdivs
mov
adc
leave
ds
mov
int3
jo
xchg
jmp
sahf
or
mov
imul
mov
push
sahf
lcall
pushw
mov
shll
adc
daa
mov
adc
out
pop
scas
mov
bound
fidivl
cmp
jecxz
cmp
std
and
and
adc
xor
sub
call
popa
ljmp
shll
adc
jecxz
repz
in
rclb
xchg
inc
repnz
in
push
imul
xchg
les
cmpsl
cld
scas
lods
fwait
add
jg
hlt
filds
push
mov
sub
xchg
iret
lods
jmp
in
xchg
mov
cmp
mov
inc
sbbl
scas
and
inc
mov
gs
jl
lahf
aaa
aad
mov
loop
xor
nop
lahf
jns
sub
add
inc
xor
push
jns
xor
cld
add
negl
repnz
mov
cli
icebp
dec
jne
lret
xchg
dec
and
popa
push
lods
stos
inc
add
lods
ss
or
cmc
mov
mov
in
adc
test
push
xchg
or
pop
push
loopne
bound
imul
cmp
push
hlt
cs
in
or
push
mov
decl
sarl
aam
pop
push
in
and
xlat
dec
out
push
in
push
pop
test
jne
fs
in
repnz
sub
xor
rcll
dec
fisttpll
mov
sub
popa
adc
loop
int
mov
mov
out
cmc
sar
or
rorl
fidivrl
push
rcll
je
shlb
bound
or
sub
das
lds
dec
dec
jb
sub
gs
mov
fdivs
movsb
xor
pop
jno
add
das
fdiv
imul
push
cmp
mov
ja
aad
jl
or
repnz
ljmp
loopne
fwait
dec
xor
std
pop
mov
ljmp
push
sbb
adc
mov
in
pop
outsb
rolb
dec
in
add
arpl
das
cmp
jmp
cbtw
lods
jne
ja
dec
shrb
xor
ret
sti
dec
mov
adc
inc
bound
pop
jge
xor
adc
mov
inc
xchg
in
out
push
pushf
data16
sub
sub
sbb
loope
inc
cld
push
xor
jbe
dec
jno
sub
jmp
daa
dec
mov
je
push
xor
test
mov
cmp
cmp
sub
and
dec
fstpt
jne
cli
mov
mov
or
lods
mov
fcom
mov
mov
and
jno
stos
sbb
push
sub
lods
cmp
das
adc
inc
push
sub
sbb
add
and
cmp
xor
sbb
jg
lods
cmpsl
adc
jecxz
xchg
pusha
dec
and
and
aas
inc
out
fnstenv
in
dec
mov
xor
jae
add
movsb
repnz
add
pop
pop
jge
cmpsb
xchg
in
imul
insb
jbe
xor
xlat
mov
jmp
mov
imul
xchg
shl
mov
rorb
push
es
in
imul
test
lods
sbb
mov
dec
shl
in
cmpsb
cmc
xchg
inc
pop
inc
rolb
ss
lret
cmp
icebp
pop
mov
adc
sahf
add
mov
outsb
repnz
xchg
mov
push
lret
lret
push
fs
fsubrs
dec
mov
mov
mov
sub
lcall
orb
movsl
mov
loope
cmc
mov
mov
js
insl
mov
mov
hlt
pop
loopne
ja
adc
xor
gs
testl
xor
and
jae
mov
push
mov
bound
add
add
adc
mov
xchg
bound
out
frstor
add
repnz
inc
outsl
push
lcall
or
sub
enter
les
xchg
xor
imul
insl
sub
and
xchg
int3
mov
cmp
out
repz
adc
jno
enter
mov
lret
mov
adc
into
cmp
out
out
aaa
push
in
cmpsl
xlat
cmp
rep
fs
sbbb
cmpsl
inc
dec
xchg
adcl
addr16
movsl
sub
sbb
mov
cld
cltd
aaa
icebp
adc
jae
ljmp
ret
push
adc
xchg
repnz
add
inc
xor
pop
sub
inc
jno
pop
mov
test
sbb
sbb
mov
aam
in
inc
in
pop
stos
pop
mov
jge
pop
inc
out
cmpsb
push
test
push
insb
push
cmpsl
rcrb
mov
add
stos
mov
mov
out
mov
pop
mov
scas
es
sub
sbb
mov
mov
stos
jb
icebp
in
xor
iret
jle
cmp
in
sahf
dec
fwait
cltd
ret
inc
fisubl
adc
rorb
cli
enter
daa
jns
iret
int
test
adc
rcll
or
hlt
popa
mov
insl
add
adc
ficoms
jns
stc
dec
mov
add
sar
jb
adc
mov
sbb
dec
orl
add
in
pop
jne
adc
lds
inc
mov
je
mov
dec
sbb
test
ret
xchg
fidivrl
pop
sahf
mov
sub
into
or
nop
sbb
adc
mov
cmpsl
add
mov
cmovb
mov
mov
cmp
fldl
out
repz
push
jp
and
jae
xor
mov
inc
xchg
repnz
aam
push
rorb
outsb
imulb
nop
sar
loopne
rorb
and
jb
pop
mov
mov
leave
leave
imul
jnp
fistpl
lea
adc
pushf
cmp
xor
mov
sar
outsl
inc
dec
pop
dec
cmp
add
or
rcrl
xchg
test
fcomps
arpl
pop
sbb
jmp
test
imul
cmp
js
mov
jg
cld
stc
jb
data16
add
out
xlat
mov
in
pop
insb
fiaddl
mov
dec
sti
or
inc
scas
sub
mov
inc
push
cltd
test
add
movsl
imul
sub
insb
fldcw
mov
sbb
clc
dec
test
jae
push
aas
popa
push
les
cmpsl
push
mov
in
fldt
jnp
xchg
push
mov
div
xor
lcall
mov
mov
sbb
faddp
test
mov
adc
xchg
call
mov
sbb
sahf
ficompl
jo
pop
bound
mov
not
daa
lock
lea
stos
mov
ss
ljmp
and
loopne
addb
sbb
adc
into
fs
imul
mov
mov
in
scas
mov
and
inc
fs
mull
jge
push
movb
scas
inc
mov
je
nop
cmpl
js
stos
mov
mov
clc
mov
dec
outsl
cwtl
cmc
push
aad
daa
inc
divl
jb
dec
es
ret
cli
xchg
packuswb
fdivrs
pop
dec
leave
mov
movsl
mov
test
cmp
lock
shl
xor
scas
push
orl
pop
sub
cld
fwait
sbb
mov
test
jns
test
adc
pop
pop
xchg
sarb
mov
sbb
xchg
fwait
push
mov
dec
mov
dec
call
bndstx
pop
cmp
xchg
xor
mov
imulb
lds
lahf
lret
mov
roll
add
mov
push
je
int
jne
shl
shlb
inc
ret
aas
stos
jecxz
adcl
outsb
repnz
gs
sub
jnp
xorl
fstl
mov
and
insb
inc
or
dec
jmp
inc
jp
add
mov
pusha
rorl
fimuls
movsb
or
mov
cmp
inc
dec
fsub
hlt
jle
jb
test
inc
mov
adc
stos
jae
orb
inc
jmp
push
shlb
cmc
mov
xchg
pop
sbbb
loopne
int3
inc
or
out
and
arpl
out
or
inc
mov
in
xor
daa
pop
enter
and
loopne
xlat
xchg
add
xchg
jbe
sbb
add
xor
jmp
xchg
mov
mov
jg
faddl
call
pcmpeqb
xchg
mov
les
scas
inc
scas
or
cmp
sbb
cwtl
test
cmp
cmp
test
jns
xchg
push
pop
in
aaa
jmp
movsb
enter
dec
xchg
imul
jge
repz
pop
stos
in
negl
inc
mov
xor
sub
imul
xchg
xor
repnz
mov
adc
mov
or
xor
mov
test
xor
insb
dec
insl
les
popf
in
jns
sub
fldl
push
ret
das
xchg
adc
cmpl
jl
cmp
xor
jge
bound
insb
sti
sub
push
xchg
scas
lock
mov
push
dec
mov
fwait
mov
mov
cli
pop
cmp
sub
repz
imul
cmp
cmpsb
out
fmull
imul
add
movb
test
loope
jge
mov
mov
sbb
test
adc
repnz
sub
sbb
xor
imul
ja
xchg
cmp
call
cwtl
aad
fdivrl
jo
xorl
pop
inc
push
push
inc
imul
mov
ret
mov
popf
push
xor
and
jecxz
fisttpll
std
inc
ret
lcall
mov
ret
xor
in
sbb
clc
andl
aaa
push
cmp
jmp
fsubrl
sarl
mov
mov
dec
lods
fldl
pop
movsl
lar
les
push
cmp
aad
sub
mov
fldcw
sahf
mov
and
rcrl
cmp
lcall
mov
inc
sub
jnp
lock
cli
or
mov
sbb
pop
push
jmp
popf
dec
popf
int3
les
inc
jp
int
sub
or
and
push
dec
cmp
push
push
push
mov
mov
mov
cmp
mov
jo
push
adc
sub
movsl
jecxz
cmpsb
test
cmp
ds
xor
xchg
dec
adc
out
mov
lods
lods
adc
icebp
mov
pop
sahf
scas
add
pusha
pop
and
sbb
shrl
push
push
sub
xchg
mov
mov
sub
adc
mov
mov
mov
mov
andl
push
lcall
scas
sbb
pushf
lea
mov
sbb
stos
test
movsb
push
jp
xor
lock
fstpt
xchg
sub
js
icebp
jmp
sbb
pop
out
mov
xor
cld
adc
int
fisttpll
add
cmp
push
push
xor
lcall
out
and
mov
pop
and
movsl
movsb
clc
lcall
inc
and
cld
iret
enter
push
xlat
insl
out
mov
and
push
pop
lods
cmpsb
loope
sbb
mov
int
outsb
inc
add
inc
jb
cwtl
shrb
cmp
adc
fwait
ror
adc
cwtl
mov
nop
sub
pop
repz
out
ret
jmp
xor
xchg
mov
add
xchg
sub
sbb
lock
pop
sub
pop
jg
lahf
mov
push
or
scas
xor
or
loopne
inc
orb
jmp
xor
dec
dec
mov
andl
test
pop
repz
cmpsl
jge
adc
repz
xchg
scas
jne
iret
mov
push
je
add
popf
cs
push
pop
sub
pop
cmp
jo
aas
jno
or
clc
rcll
pop
lods
in
lret
mov
push
cmc
test
sub
js
out
and
cmc
adc
fisubl
or
or
in
push
xchg
out
mov
fmulp
popf
mulb
add
and
scas
loop
imul
icebp
or
mov
call
and
and
push
ljmp
xor
dec
pop
inc
call
mov
or
fldl
add
lock
add
xor
or
jl
repz
pop
lods
int3
hlt
add
fwait
or
fbld
pop
and
jo
jo
lret
cmpsb
scas
dec
push
jmp
inc
mov
popa
jmp
rcrb
lahf
or
pop
repnz
ret
mov
add
int
into
or
fadd
in
inc
repz
mov
sub
mov
sbb
popa
adc
popa
shlb
pushf
xchg
insb
sub
imul
add
xchg
xchg
mov
adc
outsl
insl
in
inc
push
xor
aad
inc
push
lea
jb
fs
icebp
sbb
pop
xor
movsb
pop
rcr
or
mov
sti
mov
insl
push
lret
pop
call
jl
add
filds
mov
push
imul
inc
test
cmc
and
jmp
les
push
out
rcl
cmp
inc
cmp
cmp
mov
adc
push
pop
rcl
xor
inc
in
incb
jb
pop
jl
or
xchg
and
jno
addr16
cmp
mov
xor
sub
jp
add
mov
out
pop
push
loop
dec
cs
mov
dec
dec
dec
rolb
fs
sbb
ret
imul
bound
in
or
stos
xor
gs
insb
cmpsb
testb
ss
cmp
movsb
mov
lret
sbb
es
adc
fadd
aas
push
in
clc
jb
fs
test
add
add
insl
daa
fs
lods
loopne
stos
outsb
leave
idivb
and
add
cmp
test
mov
arpl
sub
leave
push
daa
or
cmpsl
sub
ds
in
int3
sarb
enter
sub
jge
sub
fmuls
in
into
dec
ret
cltd
push
add
push
adc
push
pop
or
lods
mov
push
icebp
sahf
push
xor
xchg
push
pop
adc
inc
nop
cmp
sti
bnd
add
rcrb
mov
dec
dec
arpl
cltd
pmaxub
xlat
sti
lahf
mov
mov
push
ljmp
lret
test
jno
mov
nop
or
rol
cmp
repnz
imul
or
stc
dec
xchg
cmp
in
and
jno
mov
daa
xorb
test
fcom
mov
lods
push
icebp
push
and
test
or
xchg
sub
dec
and
imul
mov
mov
pop
or
into
flds
lds
lahf
aas
jo
fsubrp
clc
push
gs
mov
aam
shl
jns
aaa
xchg
scas
sub
push
or
cld
and
push
xchg
out
cmpsb
std
xchg
xchg
jmp
ret
test
gs
shlb
int
inc
xor
scas
or
add
sti
cmp
dec
cmp
dec
cmpsb
push
cs
inc
bound
add
sarl
mov
adc
fcomps
jecxz
jl
insl
roll
shlb
inc
ret
mov
clc
dec
repnz
seto
in
adc
xor
nop
adc
fcompl
or
and
lds
imul
popf
mov
bound
mov
jne
in
jmp
push
lret
inc
xor
and
mov
pop
and
push
xchg
mov
dec
cmpsb
clc
imul
movsb
mov
sbb
lods
sbb
jl
add
das
test
pop
cwtl
outsl
movsl
push
xchg
cmc
pusha
jnp
xor
movsl
out
lea
shll
fdivrl
sahf
mov
roll
mov
lret
scas
mov
and
lods
fimull
aam
fistpll
gs
and
inc
xor
push
rclb
popf
cmp
dec
and
mov
add
std
icebp
repnz
xor
das
jg
iret
pop
bound
scas
es
mov
in
fnstsw
cli
jbe
dec
lock
and
add
dec
enter
sbb
rclb
int3
push
or
and
mov
js
adc
dec
jb
cs
fs
sub
mulps
ss
rolb
out
nop
mov
add
cmp
and
xor
or
jae
mov
inc
mov
test
push
pop
addr16
sub
push
add
pop
jno
xchg
mov
testl
int
add
ljmp
sbb
bnd
cmpsl
andl
ljmp
push
mov
stos
xor
aam
fcoml
inc
cmp
xchg
loopne
inc
mov
shl
ret
add
jecxz
dec
std
pop
ret
mov
out
out
pop
insl
jo
xor
push
jmp
movsl
mov
xor
cli
pop
or
fwait
sub
insl
inc
mov
lahf
add
and
push
hlt
mov
inc
jmp
xchg
inc
push
mov
push
mov
xchg
lahf
hlt
loop
loopne
loop
das
lea
rcrb
or
xchg
xchg
daa
push
add
add
fistps
push
popf
das
adcl
jmp
jb
adc
repnz
sbb
or
std
js
sti
in
sti
data16
mov
fld
jae
cmc
adc
mov
ret
jmp
jno
push
in
sub
xorb
add
lret
fisttps
inc
mov
mov
jl
and
and
aas
sbb
nop
fisubs
pop
push
adc
mov
sbb
mov
and
mull
cwtl
sarb
stos
lahf
push
pop
mov
test
insl
mov
std
cmp
outsl
mov
shlb
mov
jae
inc
scas
add
inc
adc
test
adc
add
pusha
mov
mov
mov
jg
sahf
pop
cmp
mov
jae
sbb
cmp
ljmp
cmp
subl
aam
rolb
rcl
jmp
xchg
pushf
mov
fisttps
sahf
int3
mov
out
lock
xchg
cmpsb
mov
push
in
dec
cmp
lds
sub
or
out
add
mov
rclb
ds
das
mov
lcall
pop
jecxz
mov
pop
adc
fcompp
pushf
pop
subl
and
adc
pop
stos
in
idivl
mov
mov
outsb
push
and
dec
or
mov
test
mov
sbb
dec
xor
xchg
out
add
ret
cmp
push
loop
lods
mov
xchg
hlt
lret
push
sbb
lea
stos
movsl
sbb
add
or
mov
mov
xchg
jae
xchg
pop
or
icebp
mov
inc
std
pusha
inc
out
or
or
movsb
sbb
cmp
mov
gs
mov
sbb
pop
cmpsb
adc
mov
jo
fcmove
fldt
jo
xchg
lahf
lahf
leave
andl
cmp
stc
xor
rolb
rolb
cmp
das
iret
fwait
inc
mov
mov
pop
jmp
jp
pop
ret
nop
mov
inc
mov
inc
push
roll
xor
fstl
cmp
adc
and
cmp
dec
aas
and
sub
xchg
test
sbb
enter
jns
sub
inc
out
sti
ror
adc
inc
pop
sbb
jmp
popf
pop
hlt
add
sub
addr16
scas
cs
adc
ljmp
shll
iret
mov
sbb
pop
ficoml
test
lcall
jge
sarb
cli
andl
roll
fcmovne
adc
dec
sbb
mov
xchg
mov
xchg
mov
bound
jge
push
cmp
or
sub
mov
push
repz
addr16
sti
and
cltd
cmpsl
lock
fs
xor
in
nop
and
aam
sub
mov
sub
ljmp
das
lods
mov
adc
dec
push
stos
movsb
mov
dec
push
psubw
rol
mov
popa
sahf
pop
dec
xor
sub
idivl
xchg
ret
jge
loop
inc
jmp
push
lret
cli
aas
frstor
adc
pop
jnp
jecxz
sbb
add
ds
popa
jo
div
pop
mov
ja
cmp
mov
xchg
push
icebp
leave
xor
loopne
pusha
adc
mov
xchg
pushf
loop
push
sbbb
and
fsts
xchg
mov
ja
shl
pop
repz
je
iret
xchg
mov
daa
sbb
sub
add
dec
xchg
scas
insl
rolb
mov
lcall
mov
or
add
outsl
dec
pop
stos
test
leave
movsl
out
mov
cmpl
int
sub
mov
test
popf
ja
shl
jne
cli
das
pop
cs
dec
inc
cld
mov
fwait
xchg
lret
ret
mov
dec
cmp
popa
cmp
idivb
addr16
repnz
mov
test
insl
fists
dec
lods
mov
xorl
cld
leave
call
pop
sub
mov
sub
pop
fcmovnb
ror
jge
icebp
movb
test
dec
js
daa
jns
cmpsb
imul
xchg
and
jns
cld
pushf
push
mov
sub
jecxz
out
out
push
mov
fbld
fs
pop
call
xchg
loop
fisttpll
mov
mov
jle
mov
push
xlat
mov
mov
add
add
stos
fldl
dec
jbe
xchg
jmp
shll
notl
xchg
push
adc
jnp
inc
mov
add
cmc
dec
repz
fstpl
data16
out
and
pop
fnsave
bound
and
or
push
xchg
or
rol
cld
xchg
mov
jl
out
xlat
or
pop
arpl
out
inc
cmp
stc
xor
jbe
push
sub
lret
fnstsw
jo
xchg
mov
xor
inc
cmp
push
scas
dec
ret
mov
xchg
fs
int
mov
xor
fmul
popf
mov
mov
push
int3
cltd
test
test
push
sub
xor
mov
movb
sti
xchg
push
jge
or
push
addb
mov
push
call
arpl
cwtl
sub
push
add
sahf
cmpsb
cmc
dec
inc
push
movsb
adc
mov
push
sbb
repz
cmp
out
fisubl
mov
push
cli
cs
xor
pop
lret
push
inc
xlat
push
int
push
popl
fsubrp
xor
adc
inc
rorl
cmp
aam
roll
call
mov
push
push
dec
loop
ret
mov
shlb
scas
push
jmp
data16
pop
rcll
fucom
push
add
mov
sub
outsb
enter
les
scas
stos
pop
lds
lret
ja
jle
arpl
scas
fstpt
xchg
xor
xchg
pop
es
nop
cmp
xchg
ljmp
das
jo
lods
loopne
dec
imul
imull
out
out
mov
insl
ret
subl
mov
cltd
or
mov
inc
push
sahf
lods
xor
pop
popa
in
decl
sti
insl
adc
daa
push
cmpsb
pop
loopne
jp
and
xchg
push
xor
sub
push
insl
rcll
das
mov
mov
push
fidivrl
sbbl
insl
cmp
loope
rcll
es
lcall
daa
stc
or
ret
inc
adc
xor
mov
xchg
sub
loopne
mov
jge
out
lcall
sbb
xor
mov
pop
insl
mov
fwait
xlat
xor
adc
push
pushl
jnp
dec
gs
bound
xchg
inc
imul
xchg
mov
dec
loop
cmc
mov
repnz
outsb
cmp
xchg
cs
and
imul
mov
in
movsl
sahf
negb
or
mov
in
iret
jae
clc
mov
jae
ret
outsb
sbb
lcall
popf
pop
sub
jns
enter
fiadds
jno
push
push
scas
iret
mov
out
enter
out
ret
and
mov
push
fbld
sub
cltd
inc
pop
mov
jo
das
stos
adc
int
jge
jns
les
lret
mov
les
jle
pop
jnp
adc
push
cmc
test
jp
push
cltd
scas
adcb
jbe
xor
dec
pop
mov
ds
adc
mov
popa
fdivrs
adc
fs
mov
lds
addr16
notl
aad
ljmp
adc
fcmovbe
xor
jge
ja
loope
es
inc
loope
imul
jbe
sti
lods
daa
add
rcrl
or
mov
outsb
fsubr
jb
popa
iret
pop
and
mov
mov
insl
xlat
xchg
test
in
clc
adc
add
aas
gs
pop
in
bound
dec
mov
pop
hlt
scas
lahf
scas
aaa
dec
incb
or
dec
inc
popf
fstpt
enter
out
and
adc
outsl
sub
rorl
push
bound
fs
xchg
test
cld
push
push
adc
fldl
movsb
stc
dec
push
test
idivl
popa
inc
repnz
pop
insl
xchg
int
inc
pop
mov
sub
mov
repnz
lahf
and
mov
repz
push
out
push
fsub
shrl
and
cld
rcl
incl
mov
mov
sub
dec
scas
pop
aad
xchg
jg
dec
sub
mov
mov
mov
cs
movsl
dec
cmc
js
add
and
andl
cmp
xchg
cmc
mov
dec
sub
cli
mov
out
push
inc
push
lcall
test
cmpsb
or
lds
jae
and
sbb
std
ret
cmp
out
mov
xchg
push
jae
or
dec
aaa
mov
les
movzwl
std
ret
arpl
andb
jl
lret
jle
sbb
mov
or
dec
mov
jbe
pop
test
shll
fldenv
mov
xor
lcall
inc
mov
mov
push
and
aaa
cld
rcrb
mov
mov
je
shl
inc
jo
push
jns
pushf
jecxz
cld
jp
inc
lods
sti
dec
adc
xor
scas
inc
sub
jmp
fdiv
loop
pusha
mov
imul
addb
cmp
or
pop
lret
aad
dec
inc
xor
xchg
push
repnz
and
fdivl
sub
test
mov
das
test
mov
lea
xor
aad
mov
ja
loop
mov
xor
ja
fldt
mov
xchg
push
or
xchg
jnp
dec
popf
lock
xor
or
jne
fs
and
ds
xor
arpl
iret
mov
scas
jno
dec
into
arpl
rorb
and
rolb
data16
jae
adc
xor
loopne
ret
cmp
lret
jmp
mov
daa
or
push
pop
loope
pop
mov
loop
pop
leave
xorl
sti
mov
movsl
push
loop
adc
sbb
cmp
ja
xchg
outsl
fnstsw
lret
mov
adc
lds
push
cmpsb
scas
lods
jmp
mov
call
stc
mov
mov
movsl
stos
push
clc
cmp
sarb
add
and
or
adc
mov
adc
jnp
lret
pop
xchg
ja
inc
xor
or
jno
sub
add
push
and
je
adc
push
mov
sub
xchg
jg
cmp
aad
stc
push
cmp
mov
mov
jg
cli
stos
mov
leave
nop
mov
xchg
fistl
in
or
pop
insl
enter
xchg
mov
jmp
inc
push
mov
push
jnp
test
fstl
shl
sbb
or
lods
sub
adc
xlat
xor
pop
mov
xor
adc
xor
incl
orl
fsubrs
sbb
dec
and
testb
adc
call
mov
xchg
jnp
mov
fldenv
xchg
sahf
fbstp
xchg
scas
cltd
push
lods
leave
dec
cmpsb
dec
daa
cmp
push
sub
sti
enter
push
and
inc
in
sbb
shr
shrb
icebp
lods
in
xor
add
mov
xchg
cld
insb
xor
push
jne
jb
mov
fdiv
xchg
jmp
incb
mov
rorb
int
jl
lock
xor
inc
ja
aaa
sub
ljmp
sbb
lods
fistpll
xor
adc
std
test
push
aad
push
inc
xor
mov
lods
lods
push
xchg
out
mov
not
dec
push
cmp
cmpsl
jo
mov
xchg
mov
or
add
sub
fdivr
stos
aas
fidivl
cmc
mov
inc
into
adc
mov
stos
inc
movsl
xor
pusha
cmp
xchg
jae
mov
push
mov
inc
cmp
push
mov
cmp
dec
and
divb
ljmp
stos
jmp
fs
js
scas
repnz
adc
fbstp
out
out
and
js
arpl
mov
push
mov
cmpsl
jmp
ret
push
pop
sub
in
jl
and
dec
insb
add
mov
sbb
add
fidivs
dec
pop
ret
inc
and
orb
rorb
cli
in
xor
adc
rolb
cmpsl
fstps
aas
jecxz
ja
mov
lods
data16
out
test
std
jge
add
push
mov
out
pop
popf
sub
popf
cmp
and
out
sarb
sbb
sub
jmp
mov
sub
test
test
dec
fs
push
arpl
mov
outsl
and
fcoms
ds
cmovg
add
icebp
fwait
inc
in
sub
push
fistps
jg
xchg
imul
addr16
and
test
fstpl
nop
test
cmp
and
adc
stos
sbb
pop
jmp
imul
es
sub
es
test
or
xor
dec
cmp
js
pop
ret
mov
je
shrb
dec
pop
jp
fisttpl
xor
cwtl
inc
and
push
dec
push
je
movsl
and
loop
inc
mov
imul
inc
adc
iret
cmpsl
and
dec
jmp
rcll
pop
mov
mov
sub
jmp
cmp
shll
jmp
jp
or
cmpsl
aad
out
pop
stos
xchg
lea
pusha
adc
pop
adc
or
lods
sub
add
or
es
pop
pop
adc
mov
shlb
in
mov
cli
pop
sbb
mov
sbb
clc
mov
xor
push
adc
cld
scas
mov
jnp
adc
jmp
mov
and
leave
out
into
out
or
jmp
or
mov
inc
sub
xchg
addr16
cmp
mov
gs
adc
rol
pop
jl
fmull
call
movsl
fs
daa
pop
adc
inc
mov
fdivrl
sub
dec
xchg
jp
dec
and
lock
imul
clc
das
or
jno
ljmp
adc
out
aam
inc
xchg
add
adc
imul
sub
loop
lds
jmp
pop
pop
int3
loope
jmp
cmp
and
push
movsb
cwtl
push
inc
hlt
cwtl
inc
shll
out
dec
fwait
add
sub
fcomi
cltd
pop
je
mov
fidivs
mov
decl
cmpsl
jp
sbb
mov
and
pop
mov
xchg
mov
push
pop
mov
push
les
xchg
stos
arpl
lret
cmp
arpl
and
shufps
scas
inc
nop
jle
inc
mov
adc
ljmp
shlb
pop
and
mov
in
dec
add
fwait
cmp
cmpsl
shll
mov
pop
mov
mov
mov
lods
inc
cli
or
sub
inc
cli
xlat
call
jo
pop
rcrb
mov
or
movsl
loop
xor
sub
jnp
mov
pop
test
stc
or
movsl
jge
aad
xor
in
pop
cli
mov
dec
shlb
add
or
cmpsb
sbbb
outsb
addr16
outsb
popa
sub
fnsave
hlt
pop
xchg
sub
mov
sub
xlat
xchg
jne
cmpsb
mov
mov
pop
call
pop
rorl
repnz
das
les
mov
and
pop
or
in
popa
mov
add
pop
sahf
mov
divl
push
jle
stc
inc
in
add
sahf
add
scas
loop
insl
std
fildll
ret
cs
push
loopne
or
sbb
mov
mov
decb
sbb
jecxz
sub
mov
pop
shll
lcall
jecxz
jmp
fildll
cltd
leave
mov
add
bound
and
push
sbb
add
mov
dec
in
mov
add
jg
cli
push
xchg
mov
pop
mov
mov
dec
enter
sbb
in
mov
dec
repnz
sub
in
jae
jae
xlat
xchg
push
insb
push
shl
xchg
fst
xchg
shlb
add
daa
in
jp
dec
dec
outsb
daa
sarl
shl
add
es
jge
xchg
jnp
outsl
fadd
push
testl
jg
dec
adc
test
aam
xchg
test
pop
out
sbb
mov
push
mov
ret
push
faddp
and
xchg
push
adc
mov
adc
sbb
mov
jmp
dec
xor
lds
lods
sub
xor
fst
iret
loopne
add
pop
stc
mov
inc
addl
mov
cld
push
test
mov
inc
mov
mov
rcrb
leave
repnz
cmpsl
int
insl
and
ss
lret
cli
int
scas
rcrb
fcomps
mov
and
bound
adc
arpl
lock
stc
into
mov
filds
ss
mov
jb
aam
add
add
insl
pop
push
inc
aaa
and
or
cmp
lods
les
lods
push
adc
pop
js
cmp
popa
sbb
jge
sbb
pushl
add
push
outsl
ret
mov
cmp
dec
jge
xchg
push
jl
and
clc
fiadds
inc
imul
mov
sahf
sub
imul
adc
stos
je
xchg
das
addr16
lret
jl
les
arpl
xchg
sahf
popl
inc
out
pusha
call
fildl
out
rcrl
cld
dec
xchg
jg
mov
mov
jle
in
ds
fmuls
enter
dec
adc
sahf
js
sub
insl
lahf
mov
inc
in
sbb
ror
clc
out
inc
cmp
pop
cmp
jmp
mov
and
adc
cld
or
fildll
paddw
xchg
sub
cmpsl
and
shll
sub
sub
mov
and
lds
sub
push
cmpl
jne
inc
scas
add
jl
mov
sbb
test
push
mov
jne
jo
and
outsb
ret
mov
jmp
push
add
jmp
rorb
mov
stos
imul
das
sarb
dec
lahf
dec
std
or
rcll
push
cwtl
cmp
pop
sbb
nop
fidivl
jo
cmp
jmp
ds
xor
or
xor
mov
cmp
sbb
lahf
push
mov
or
out
push
fwait
push
or
icebp
cmp
inc
cmp
aad
pop
ret
mov
ljmp
movsl
fldcw
inc
sbb
mov
bound
rorb
cmp
add
mov
mov
and
pusha
xchg
loope
imul
iret
ja
iret
adc
repnz
lcall
stos
cmp
sbb
jl
data16
loope
or
inc
cmp
insl
xor
das
decb
add
jmp
mov
lret
and
mov
loope
xchg
jl
xchg
add
xchg
lahf
loopne
cltd
xchg
adc
out
push
mov
cmpsl
int3
and
xchg
mov
mov
xlat
xorl
xchg
jmp
lds
xchg
jl
xchg
stos
add
xor
xor
out
mov
nop
aaa
xor
xchg
in
mov
clc
jae
adc
add
xor
imul
fcmovnb
sarl
or
ds
aam
jne
fdivrs
mov
les
aaa
sbb
inc
popf
or
mov
mov
sub
andb
fwait
xlat
pop
dec
loopne
adc
out
filds
xchg
mov
hlt
mov
testb
pop
adcb
mov
pop
ret
push
pop
pop
imul
mov
mov
pop
xchg
gs
sbbl
into
jb
xchg
in
mov
xor
lret
mov
sub
jg
pop
std
cmc
jb
jle
inc
dec
leave
fsubr
and
std
ja
stc
fcmovne
loop
pop
mov
loope
rcrb
in
mov
ret
mov
out
enter
mov
test
adc
cmp
jno
dec
mov
lcall
inc
sub
or
out
aam
mov
xor
adc
xor
pmaxub
pushl
subb
popf
push
loopne
inc
xchg
fld
pop
mov
in
inc
lret
movsl
ror
inc
nop
enter
imul
push
fldt
add
sub
ret
sub
das
les
in
xor
enter
div
aad
nop
adc
sub
mov
or
shr
in
lock
mov
rorb
xor
stc
jge
pop
in
lret
xor
xor
dec
pop
push
adc
stos
pop
cmp
in
mov
hlt
xchg
rcll
cltd
enter
mov
dec
lods
sub
jo
sub
std
cmp
pop
je
add
mov
push
bound
leave
imul
xchg
cmpsl
sub
popf
movsb
push
mov
jbe
xor
jecxz
dec
pop
movsb
rolb
ret
popa
jb
stos
lods
fmull
xchg
fdivrl
rorl
sti
inc
mov
out
sbb
cmc
sarl
xchg
shll
xchg
xor
xor
lahf
sarb
pop
rcl
xlat
jae
sar
adc
mov
les
xor
adc
int3
ret
xor
cld
fnstenv
lea
or
push
rclb
push
ret
sti
insb
mov
push
test
cltd
test
test
imul
sbb
rcr
jg
mov
test
xchg
cmp
and
inc
pop
push
add
cmpsb
dec
lods
lcall
jno
dec
and
rcll
cmpsl
mov
push
mov
push
insl
es
pusha
push
pop
jp
repz
cmp
inc
outsl
cwtl
xor
stc
cwtl
push
movsb
push
pop
insb
bound
xlat
data16
jae
xor
xchg
lds
mov
fbstp
cmp
jno
push
or
mov
sbb
mov
xchg
rolb
push
ret
out
mov
int
xchg
xor
aad
mov
hlt
mov
xchg
fmull
sbb
mov
and
xor
cmc
leave
shl
aam
cmp
adc
fcmove
pop
inc
fisubs
popa
xchg
sti
jle
or
les
inc
push
shl
lcall
orb
lret
mov
adc
pop
stos
mov
rol
push
gs
imul
mov
ds
inc
movsb
icebp
lods
int3
in
nop
push
out
out
inc
iret
xchg
pop
cmp
insl
mov
aad
pop
mov
jge
xor
andl
lds
movsl
test
mov
inc
pop
std
aas
or
adc
fcomi
push
aad
sub
inc
lock
cld
and
loope
repz
mov
iret
ds
dec
insl
pop
lcall
subb
mov
dec
pushf
xchg
movsb
adc
bound
adc
repnz
push
test
clc
dec
mov
xor
xchg
pop
shlb
push
arpl
ss
out
sub
add
push
pop
push
and
push
adc
adc
pop
push
push
outsl
mov
sbb
and
test
shrl
sub
jge
push
fcmovne
sbb
cmc
lret
ficompl
push
rcr
insl
jl
sti
pop
push
or
mov
std
and
addr16
xor
repz
mov
dec
leave
clc
loopne
adc
push
cwtl
sti
cmp
mov
icebp
dec
xor
dec
xor
into
cli
cli
push
rcr
dec
add
mov
in
or
sbb
adc
adc
push
movsb
push
cs
jmp
mov
inc
mov
daa
cmp
inc
cmpb
inc
test
bound
xor
div
lods
xchg
mov
ljmp
inc
sub
mov
push
and
pusha
jo
dec
xchg
sub
shll
mov
aas
dec
adc
data16
mov
imul
ss
mov
scas
fildl
loope
icebp
dec
pop
cmp
jne
cmp
mov
fstpt
mov
push
cmpsb
cs
cmc
stos
test
clc
arpl
cs
sbb
insb
sbb
mov
imul
inc
pop
std
push
cmp
push
jo
jb
mov
push
mov
aas
sarb
push
adcl
mov
sub
adcb
mov
mov
mov
cmp
fisttpll
shrb
xor
sub
sti
das
adc
jp
mov
stc
push
enter
and
hlt
cs
insl
pushf
and
roll
das
iret
mov
xchg
mov
jl
in
mov
shrl
arpl
cmp
push
inc
jbe
mov
aas
fmuls
icebp
or
mov
mov
xor
push
in
into
sbb
mov
mov
mov
pop
sbb
addr16
push
subb
sub
pop
mov
adc
pop
add
inc
loopne
sbb
inc
movsb
xlat
push
sbb
adc
test
stc
out
inc
xchg
fs
or
sbb
clc
test
dec
xchg
test
mov
adc
ja
xchg
cmpsl
notb
add
mov
or
or
and
mov
punpckldq
dec
sbb
mov
cs
insb
lret
xchg
adc
addr16
sbb
test
jmp
in
in
jmp
dec
fwait
inc
xlat
xor
pop
xor
cmp
clc
in
sbb
addl
jp
out
icebp
xlat
pop
rcrl
mov
pop
xor
push
push
cld
gs
pushf
mov
test
movsb
ss
cmp
push
or
pusha
pusha
sbb
adc
inc
in
adc
pop
fcomps
in
add
mov
add
push
aas
jns
icebp
jp
iret
into
xchg
or
fldenv
cmp
scas
lods
mov
jnp
mov
repnz
mov
or
mov
fldcw
add
cmpb
pop
movsl
pop
pop
cmp
lahf
int
push
mov
dec
scas
push
fsubs
addr16
sbb
mov
cltd
ss
in
pop
aas
pop
lea
fcoms
mov
jb
pop
outsl
test
int
mov
imul
sub
xlat
xchg
xchg
add
or
push
pusha
daa
pushf
mov
daa
jo
push
movsb
pop
jl
in
mov
xor
push
dec
dec
jp
repz
push
aad
inc
jb
fists
jne
into
repz
lea
and
fmuls
jb
enter
lock
stos
cmc
mov
adc
or
adc
mov
scas
in
fdiv
xor
jge
cmp
inc
pushl
sbb
pop
mov
std
mov
sbb
xchg
push
orl
sub
fistpll
or
iret
mov
sub
js
in
rorb
data16
adc
imul
inc
jmp
imul
pop
ja
mov
fcomi
les
loopne
movsl
test
shlb
ja
test
aaa
pop
outsl
and
mov
and
lds
xor
mov
sarb
ret
shll
mov
pop
mov
push
add
pop
sbb
mov
fstl
cmp
and
jns
dec
cmp
xchg
in
shll
into
testl
mov
cmc
or
lret
rcrl
insl
jg
je
push
jae
sub
adc
ss
cs
sub
lods
xchg
gs
pop
or
arpl
mov
mulps
mov
inc
or
xor
into
repnz
cltd
and
js
ljmp
movsb
and
int3
dec
or
mov
js
xchg
cmp
pop
adc
jg
sbb
adc
dec
aad
mov
mov
sub
jp
and
fimull
jle
push
leave
aas
inc
gs
cmp
or
mov
sbbb
xchg
addr16
rcrb
or
push
dec
lahf
pop
pop
rorb
outsl
in
adc
out
stos
sbb
pop
popf
dec
mov
pop
pop
das
xchg
lret
inc
adc
icebp
dec
lahf
jg
cli
cmp
jge
jne
adc
push
insb
sbb
rorb
imul
pop
pop
inc
imul
and
jmp
out
add
xchg
into
dec
push
mov
cmpsl
and
mov
stc
mov
imul
out
lcall
jns
inc
jmp
imul
xor
popf
ret
ficoms
and
imul
and
mov
mov
into
and
stos
adc
jl
bound
push
aad
test
out
lock
cmp
enter
shl
test
ss
pop
dec
pop
movsb
cmp
cmp
ljmp
jb
xchg
jns
lret
out
mov
clc
inc
stos
es
cmpsb
add
sahf
inc
test
xor
push
pop
ljmp
es
jecxz
ljmp
jo
mov
xchg
dec
push
enter
pop
lahf
adc
jnp
xchg
mov
adc
and
scas
push
pop
mov
mulb
pop
jl
jle
mov
out
scas
movsl
inc
pop
sub
icebp
pop
pusha
add
xchg
xchg
fsubrl
sub
cmp
sti
lock
loop
repnz
hlt
fadds
inc
mov
push
mov
mov
mov
pop
xor
mov
or
push
lret
sbb
mov
test
aam
daa
xor
jmp
out
shrd
inc
inc
pushf
adc
or
xchg
mov
fnstcw
dec
jmp
mov
je
xchg
pop
push
je
fwait
pushf
inc
mov
cmpsb
xor
mov
inc
mulb
cmp
mov
out
xor
or
xchg
jae
lret
mov
lahf
inc
push
push
data16
gs
add
mov
cmpsl
fnstsw
cmp
xchg
sub
mov
adc
mov
jo
aam
mov
mov
mov
push
adc
pop
leave
popf
and
xor
cld
jle
std
cmpsl
mov
dec
ja
std
dec
mov
push
jg
xchg
fcomps
pop
jbe
lretw
cmp
fnstcw
hlt
add
daa
and
movl
mov
aam
push
dec
push
inc
inc
js
pop
addl
mov
pop
inc
int3
jmp
outsb
add
shl
mov
sbb
in
in
xor
inc
push
int
mov
push
mov
sbb
dec
out
outsb
sbb
dec
cli
and
sub
sub
cmp
js
cmp
out
adc
pop
sbb
mov
dec
jnp
insb
aaa
clc
xlat
or
call
mov
dec
sbb
push
jae
outsl
sbb
loope
fsubs
add
insl
cld
int
enter
fdivrs
pop
aam
cmpsb
jbe
mov
aaa
int3
add
pop
and
outsb
leave
dec
js
and
pop
mov
addl
xor
adc
ret
jl
stc
aam
bound
rorb
mov
mov
and
pop
and
push
dec
sub
fisttps
lcall
pop
lods
addr16
sub
test
shlb
cmp
enter
dec
pop
mov
pop
adc
pop
inc
repz
int
mov
lahf
test
lcall
xchg
jae
jb
mov
inc
sti
pop
add
inc
or
sahf
pop
pop
cmpsl
sbb
mov
dec
lret
sub
xchg
iret
push
dec
movsb
inc
push
inc
adc
loopne
rclb
fimull
in
stos
sbb
stos
jnp
gs
mov
push
xchg
mov
stos
add
les
pop
dec
pop
sbb
xor
je
sarb
rol
sbb
ret
sub
in
jp
push
stos
ja
push
orb
inc
dec
xor
data16
lea
jge
loope
or
roll
cmp
lahf
das
mov
lods
inc
out
mov
xor
mov
xchg
stc
xchg
lcall
mov
scas
int
icebp
in
and
addl
movsb
fisubl
pop
mov
outsb
lcall
mov
mov
test
sahf
dec
sbb
enter
stos
outsb
jg
sti
adc
and
sbb
popf
sahf
shl
cwtl
ret
and
aad
add
add
cmpsl
pushf
dec
pop
adc
inc
mov
scas
stos
fwait
adc
jmp
sti
pushl
lcall
pop
inc
jg
mov
push
out
pusha
xchg
jp
pop
sbb
loopne
hlt
and
xlat
loopne
sahf
pop
cli
mov
adc
and
in
jne
inc
jg
pop
or
or
sub
sahf
mov
test
out
js
mov
mov
inc
mov
pop
test
jno
push
pushf
sbb
sahf
jne
hlt
mov
pop
cmc
test
in
fmul
push
lock
xchg
sub
jne
popf
inc
fmuls
xchg
sbb
push
rol
xor
andb
jge
sarb
lcall
jns
mov
pop
insb
push
adc
std
aaa
xchg
lock
mov
inc
std
loope
mov
fsub
in
jp
mov
outsl
add
fistpll
mov
fisttps
jmp
loop
test
das
adc
popfw
and
test
jo
arpl
mov
push
jns
push
xchg
push
mov
ds
jp
icebp
inc
mov
cwtl
ljmp
lret
pop
fidivrs
int3
jl
push
rolb
outsl
mov
sub
add
inc
stos
aaa
in
insb
xchg
add
push
negl
aad
outsl
jecxz
dec
stc
mov
and
insb
rcrl
pop
mov
push
push
mov
jg
add
dec
dec
popf
enter
xor
jge
aas
lahf
or
mov
test
pop
mov
push
dec
sti
pop
jp
or
mov
test
ljmp
adc
das
lock
leave
jae
gs
adc
push
aaa
hlt
fs
int3
fs
push
ja
add
xchg
mov
push
jne
cmp
sbb
std
fnstsw
enter
add
sbb
data16
movsb
lods
shr
stc
push
movsl
imul
mov
and
test
mov
push
adc
sahf
pop
or
push
sub
lret
iret
push
ret
daa
ja
outsl
lahf
xchg
je
sahf
leave
sbb
in
pop
xchg
mov
lret
mov
outsl
in
pop
loop
pop
and
sbb
lret
push
cld
lea
xchg
adc
jge
mov
in
and
cmp
ss
repnz
and
jp
iret
and
mov
fldcw
into
and
loope
adc
idivl
shrb
xchg
jne
sub
loopne
pushw
dec
insl
popf
aad
push
xchg
jge
jmp
xchg
cwtl
or
addl
lcall
or
in
lret
gs
mov
adc
sbb
mov
cmp
inc
test
sub
xor
test
mov
mov
jle
add
fisttps
in
adc
adc
push
jae
mov
add
inc
shll
xchg
dec
or
popa
add
dec
and
mov
xchg
insb
mov
dec
xor
ja
and
and
jbe
incl
sbb
inc
xorb
inc
pop
mov
mov
repz
cmp
push
jae
inc
movsl
fwait
ret
push
adc
sub
mov
clc
jecxz
add
dec
pop
pop
push
or
loop
mov
push
adc
inc
enter
adc
or
add
mov
gs
std
daa
push
and
lods
sub
mov
and
cmpsb
dec
cmc
mov
lds
and
lret
je
adc
mov
pop
lods
pop
inc
inc
jp
dec
test
jl
pusha
or
lahf
mov
into
mov
out
and
lds
jb
sbb
add
pop
push
pop
inc
outsl
scas
xchg
inc
xchg
cmpsl
int
push
test
scas
shlb
jmp
sub
cmp
mov
xor
stc
ret
dec
out
fs
call
fistpll
in
inc
adc
dec
not
inc
pop
das
add
js
hlt
mov
insb
jns
sbb
std
xor
push
scas
inc
inc
pop
das
xor
aam
or
imul
or
push
stc
popf
and
in
mov
in
jge
mov
int
cmp
jne
nop
lds
js
push
in
push
lea
lds
jecxz
add
lds
test
fcmovbe
cmp
adc
cmp
and
adc
jb
fs
mov
cmpsl
mov
and
xlat
repnz
mov
and
pop
sub
cmpb
xchg
cld
addr16
pop
inc
xchg
cmp
and
or
or
inc
pop
ret
inc
sub
jb
sarl
testb
sarl
jmp
insl
jp
adc
mov
mov
in
mov
insl
jae
mov
aad
stos
mov
mov
push
clc
push
mov
iret
xchg
leave
dec
inc
and
mov
or
push
mov
hlt
out
xchg
mov
bound
mov
shll
pop
dec
rcr
sti
dec
xchg
jge
std
insl
scas
movsl
data16
xchg
in
aas
mov
inc
sbb
js
jg
sub
fsubr
adc
inc
xor
gs
in
mov
sbb
sbb
cltd
imul
dec
and
cmp
into
mov
xchg
inc
pop
mov
cmc
in
gs
lods
add
fiadds
sub
pop
imul
and
mov
popa
cld
aaa
lahf
mov
ja
jns
pop
scas
xchg
fadds
push
or
mov
movsb
cmpsb
dec
mov
sbb
out
push
lahf
sbb
mov
mov
aaa
mov
or
ffreep
mov
push
subl
cmp
rorl
cmp
dec
sbb
jg
push
xor
cmc
add
ja
or
inc
lds
mov
movsl
dec
shrl
popf
xor
call
lods
sbbl
lods
push
aam
in
xor
cltd
aas
push
js
hlt
cmp
jbe
orl
sbb
ret
pop
pop
icebp
sahf
pop
inc
xchg
cmc
jnp
xor
insb
mov
xlat
in
sbb
in
mov
sub
inc
popf
outsb
dec
fdivs
das
push
dec
sub
sbb
push
push
inc
scas
pop
dec
das
push
lds
pop
adc
fdivrs
repz
sbb
mov
lea
sub
repnz
jg
dec
lods
adc
and
fsubrs
insb
fs
fdivr
and
fucomp
int
and
lock
xor
mov
mov
pop
dec
xorb
ss
lds
out
sahf
sti
movsb
push
test
imul
xchg
mov
shrb
rdtsc
in
sub
aaa
loope
out
repz
aam
pop
daa
add
push
and
pusha
into
xchg
pop
or
cmpsl
lahf
mov
jl
out
stos
cmp
mov
das
insl
inc
pop
mov
fiaddl
pop
imul
xor
lods
jo
inc
js
sub
testb
push
into
cmp
jb
repz
shl
mov
sar
sub
and
adc
rcrb
or
xor
push
es
xchg
push
in
shrl
ljmp
push
int
mov
inc
lock
ja
shlb
push
fdivs
adc
dec
lahf
pop
and
adc
xchg
lahf
jmp
mov
inc
inc
mov
xor
mov
sbb
jne
push
and
pusha
fadds
mov
mov
enter
fcom
imul
aas
dec
jecxz
mov
fsts
inc
int
lods
jl
js
jnp
lahf
fs
or
icebp
mov
out
mov
sbb
push
and
lods
and
jl
add
std
cwtl
mov
outsb
cli
lcall
lret
xor
jnp
clc
jnp
push
and
bound
push
or
mov
mov
sbb
sub
mov
push
sub
dec
outsb
sub
pop
test
jne
jno
xor
ret
push
push
dec
adc
and
mov
movsl
xchg
xchg
cmpsl
insl
push
xor
lahf
aad
movsb
inc
jne
adc
xchg
mov
insl
roll
pop
jnp
ss
dec
bswap
jae
data16
sub
sub
fwait
scas
jg
rep
enter
lds
mov
inc
ja
push
lret
push
sbb
adc
adc
loope
mov
mov
xchg
js
add
inc
scas
xor
push
movsl
imul
das
cmp
jge
arpl
ret
sbb
inc
pop
jmp
jle
mov
dec
adcl
outsl
and
xchg
fcmovbe
fcoml
push
aam
lahf
cli
andb
mov
pop
dec
fadd
rolb
mov
inc
jp
jno
jecxz
das
dec
lahf
dec
loopne
hlt
inc
cmp
sub
inc
jno
add
sub
add
cmp
xchg
lea
xchg
pushf
jg
xchg
xchg
outsb
sahf
aaa
adc
jmp
cmpsb
scas
xor
fistl
dec
loope
pop
aas
lock
or
mov
inc
das
ss
into
into
xchg
scas
mov
cmp
jle
jbe
sahf
sbbl
jl
push
repnz
int
insl
dec
mov
js
inc
cmp
cmp
adc
xor
mov
in
inc
sti
sar
lahf
rcrl
jns
mov
sbb
pop
stos
fistl
or
and
cli
ds
es
jno
add
icebp
push
int
ss
mov
decb
int
mov
pop
pop
lock
test
sub
add
lods
loope
mov
sub
je
ret
mov
mov
outsb
leave
dec
sub
sahf
jmp
out
fdivr
inc
jmp
mov
adc
mov
xor
pop
rcll
test
icebp
mov
push
insb
inc
lods
jge
rcll
xor
test
jns
adc
iret
and
mov
loopne
test
cmp
fdivrs
mov
xlat
mov
aas
into
icebp
pop
or
pop
add
loop
pop
xchg
push
pop
push
mov
enter
and
out
shlb
loope
addr16
sbb
lcall
sbb
mov
push
jp
ret
filds
sbb
call
outsb
and
rol
shll
mov
lock
insl
imul
inc
loope
sub
mov
mov
and
mov
push
fistl
popf
push
xlat
sbb
cmpb
cwtl
xor
jle
repnz
in
sbb
cmpsb
mov
movsl
scas
adc
mov
adc
mov
lret
pop
lcall
sbb
cmp
cmc
add
xor
fsts
mov
jns
clc
xchg
jb
fistpll
rcrb
cli
mov
cmp
fcoml
push
out
pop
mov
popf
repz
push
loopne
dec
mov
sti
jbe
push
dec
dec
scas
test
push
out
push
dec
cwtl
bound
mov
ret
mov
and
add
aas
xchg
adc
pop
mov
std
jne
sbbb
mov
xor
inc
or
call
es
arpl
test
rol
cmp
pop
lods
push
ds
test
push
jle
jg
sahf
enter
aaa
mov
sbb
imul
test
sbb
and
dec
sahf
push
adc
out
repnz
nop
aaa
pusha
enter
mov
push
xor
adc
inc
cmp
pop
das
and
js
pop
clc
jno
xor
pushf
aam
out
jno
dec
lock
popl
add
push
mov
mov
push
sub
mov
iret
sysenter
xor
cmp
dec
or
sarb
aas
adc
mov
xor
xchg
daa
push
pusha
pop
imul
rcrl
or
and
popf
or
pop
push
mov
mov
fistl
push
mov
jo
xchg
xchg
mov
mov
pusha
aaa
adc
pop
daa
ficoml
dec
int
mov
mov
dec
or
js
pop
inc
aam
inc
mov
mov
cmp
shlb
pop
mov
cli
jns
push
popa
lcall
sbb
inc
ret
outsb
test
xor
jne
cmc
inc
pop
inc
out
das
cmpb
dec
fistpll
ss
in
enter
jle
ss
xor
dec
mov
sbb
inc
push
adc
and
outsl
cwtl
push
pop
adc
pop
and
xor
iret
adc
leave
pop
lds
sub
int3
xor
mov
xchg
cwtl
or
mov
dec
sbb
mov
xor
ljmp
and
cli
jae
pushf
mov
fistps
xor
sbb
or
pop
jne
out
push
xor
sub
or
outsl
lahf
ret
or
repz
add
stos
mov
inc
mov
dec
dec
fisttpll
push
les
movsl
mov
out
cs
insl
leave
leave
jbe
cltd
or
xor
xor
stos
fucomp
lcall
and
jbe
jmp
test
xchg
out
and
or
dec
data16
jmp
in
xor
andb
jg
cmp
cld
inc
push
imul
inc
call
pop
push
jne
or
push
clc
movsb
ret
cmpsl
dec
dec
insb
insl
push
xchg
dec
test
call
mov
mov
xor
xchg
mov
lds
sbb
ljmp
loope
inc
add
pop
pop
inc
in
mov
adc
test
cmp
adc
inc
xchg
push
mov
sti
repz
loop
imul
fidivs
mov
fldpi
enter
dec
fisttpl
inc
jle
jge
in
gs
xor
out
mov
mov
add
mov
inc
inc
push
mov
sbb
ds
lahf
stos
mov
mov
addr16
jle
mov
int
stos
xlat
dec
adc
xchg
sahf
xlat
cmp
adc
std
lahf
pop
aam
mov
sub
int3
jns
or
cmp
mov
inc
xor
imul
dec
movsb
sub
adc
insb
int
jne
pop
adc
popf
jl
or
mov
mov
mov
xchg
and
nop
lods
cmp
xcrypt-ctr
cmpsl
fsts
bound
dec
sub
cmp
or
insb
ljmp
pop
cmp
outsl
repnz
jecxz
and
mov
test
push
pop
das
sbb
fwait
incl
rorl
jbe
fnsave
jmp
subb
cmpb
neg
pop
les
jmp
fs
sub
sbb
and
sahf
adc
push
mov
lock
test
je
cmpsl
cmp
mov
pop
or
cmpsb
mov
inc
add
add
push
adc
in
cmpsl
daa
inc
pusha
les
pop
in
sub
xchg
mov
jne
xor
lahf
jp
sbb
xchg
ss
nop
stos
push
hlt
jle
test
mov
push
push
xor
outsl
je
pop
lret
add
and
leave
gs
xchg
call
sbb
adc
aad
es
or
jmp
push
movsb
push
push
inc
mov
sub
mov
sbb
and
shll
out
ret
sbb
xchg
mov
fs
and
shl
mov
push
and
xchg
inc
loope
and
jnp
push
ss
mov
xor
push
push
pop
rcrl
les
shlb
iret
jae
jb
iret
lock
mov
sbb
or
mov
pop
fbstp
dec
addr16
or
test
mov
fs
test
push
inc
cmp
mov
out
xchg
outsl
jbe
sar
scas
or
dec
leave
shlb
lret
scas
cmp
out
and
cld
out
adc
sub
test
fldt
xchg
aad
lods
dec
mov
xchg
sbb
daa
lcall
dec
cwtl
jmp
rcrb
test
stc
mov
jo
fmulp
pop
lods
stos
sti
push
std
fldlg2
xor
pop
push
daa
adc
inc
mov
xorl
pop
lods
jmp
adc
jp
movsb
cmpsb
sahf
test
shr
adc
mov
imul
icebp
jbe
aaa
jg
push
popa
inc
inc
sarl
sub
enter
inc
fcoml
jg
xchg
jecxz
cmp
lahf
fiadds
fadd
lds
or
mov
cmp
test
add
ljmp
jmp
sti
bswap
sbbl
scas
add
fists
pop
xchg
mov
incb
or
popf
ja
mov
jae
add
rcrb
fldt
mov
popa
loope
push
fsts
mov
into
mov
bound
adc
stc
dec
sti
sbb
cmp
mov
lock
mov
int
push
ja
cmp
popf
sub
push
sub
fwait
jge
sub
mov
xor
sbb
adc
ss
inc
mov
ret
pop
outsb
jns
add
fisubs
xchg
adc
addr16
movsb
lods
out
add
aaa
xor
rcll
dec
and
popf
lahf
insl
mov
mov
mov
push
sub
loopne,pt
cmpsb
fdivrp
test
inc
xor
mov
arpl
cmp
adc
dec
sub
sbb
mov
push
jge
je
fsubrs
push
sarb
mov
sbbl
or
pusha
jo
std
stos
movsb
or
or
mov
add
in
pop
inc
mov
ljmp
mov
loopne
fwait
mov
mov
loop
pushf
adc
lods
ret
ja
xor
mov
jg
xchg
add
jg
pop
push
pop
decl
pop
sbb
leave
arpl
push
fucomip
arpl
xchg
pop
jns
pushf
aas
dec
inc
mov
push
xchg
lret
xchg
inc
fldcw
in
mov
inc
aad
xorb
dec
push
mov
inc
adc
and
sub
fwait
cmp
repnz
test
push
cld
inc
dec
arpl
sbb
les
sub
pop
inc
aad
rclb
cld
pop
sub
pop
adc
ljmp
call
test
adc
out
scas
push
xor
aaa
dec
cmpsb
cwtl
inc
sahf
cmp
ljmp
test
inc
out
shll
pop
mov
lcall
dec
jo
les
movsl
xor
mov
cmp
cld
shlb
push
adc
imul
out
adc
inc
stos
xor
jns
lock
adc
push
cmp
adc
lds
setns
cmp
arpl
arpl
fs
loop
pushf
and
bound
dec
testb
lds
mov
aam
inc
clc
cmc
add
dec
dec
in
pop
mov
push
sub
push
and
inc
add
dec
cltd
fnstenv
jmp
inc
loopne
jo
mov
jle
sub
in
mov
mov
shl
pop
pop
add
ss
stos
jo
push
sbb
pop
xacquire
in
xchg
xor
test
movsb
scas
xchg
adc
inc
jo
sti
or
test
push
enter
btr
xchg
adc
test
cmpsl
es
shll
ret
sar
lea
movsl
inc
jbe
nop
jl
inc
or
jnp
scas
clc
mov
mov
arpl
stc
addr16
call
and
push
push
push
icebp
mov
popf
push
cmp
movsl
and
cmp
push
push
sahf
sti
inc
lret
in
stos
jns
xchg
push
mov
mov
or
jne
shrl
jae
or
pop
les
pop
hlt
das
clc
pushf
xor
cmp
lret
ja
or
aaa
in
popf
xchg
arpl
loope,pn
jae
testl
enter
sahf
sbb
sbb
filds
mov
adc
fstps
das
xor
cld
xchg
pusha
imul
mov
cmpsl
xor
inc
repnz
push
in
jnp
sbb
push
mov
lds
loop
mov
fmuls
sbb
lods
clc
jle
inc
js
jecxz
pop
adc
sarl
fldl
scas
jmp
jle
mov
dec
and
push
mov
jmp
add
and
dec
fbld
pushl
fistps
inc
adc
int
icebp
xchg
fildll
pop
in
xor
cs
rcll
inc
xchg
lcall
cs
adc
xchg
pop
cmp
ret
inc
cmp
addl
pop
fdivrp
outsl
xor
stos
iret
movsl
jecxz
les
or
movsb
mov
xchg
imul
adc
pop
insb
andl
adc
push
in
push
and
sbb
imul
test
icebp
fsubrl
mov
stos
repz
stc
push
sahf
es
cmp
mov
push
js
mov
mov
jb
mov
in
ret
adc
xor
mov
add
ret
sub
xlat
imulb
mov
int3
add
mov
into
ret
adc
dec
mov
sti
cmp
xchg
fstl
mov
xchg
sbb
push
iret
sahf
loope
lahf
lcall
aaa
mov
or
xchg
subl
fdivs
pop
add
sub
incb
cwtl
rolb
fadds
inc
mov
movsb
int
and
stos
stos
mov
push
je
in
rcr
enter
mov
addl
adc
and
cltd
inc
pop
add
je
cmc
mov
das
adcb
negb
daa
fwait
add
mov
xchg
adc
movsb
add
mov
dec
lret
sbb
int
mov
jge
rorl
push
mov
mov
in
xor
rcrl
cmpsl
push
and
xchg
sti
mov
popf
mov
xchg
xor
in
cs
mov
sub
scas
js
jle
sti
or
jae
in
inc
and
pop
stos
stos
xor
ret
rcrb
or
xorl
icebp
pop
nop
and
sub
dec
sub
jns
push
push
cmc
sbb
xor
add
bound
dec
in
jle
jge
sub
jmp
push
cmp
leave
loop
push
xor
es
lret
cmp
lcall
popa
inc
pop
rcr
mov
pusha
daa
lret
xor
cld
lods
aaa
xor
push
inc
mov
jp
test
jb
push
es
cmp
cltd
mov
adc
dec
xchg
ja
imul
cld
mov
popf
jg
adc
mov
and
mov
pop
mov
adc
mov
jne
jne
and
dec
xor
xchg
push
sub
bound
rcll
ds
jg
pop
xchg
cli
sub
js
pop
adcl
or
xchg
scas
mov
inc
sub
aaa
cmp
push
and
or
pushf
or
fsubrs
out
adc
jp
sub
pop
rcrb
push
or
sbb
roll
mov
push
pop
cmp
xchg
inc
mov
adc
mov
mov
inc
xor
aas
pushf
imul
pop
adc
lret
mov
pusha
xor
out
sbb
push
xchg
pop
rcll
in
movsl
movsl
ret
cmp
fisubl
jl
iret
sbb
stc
pop
aas
pop
mov
or
and
mov
push
adcl
loop
test
jae
jle
movl
sub
jp
and
ret
test
cmp
fidivrs
mov
jle
adc
fmuls
xlat
adc
dec
fwait
fs
add
mov
rorl
and
push
jle
in
xor
sub
in
test
adc
push
test
std
stos
lds
jle
or
in
xor
push
add
pusha
pop
lret
stos
or
inc
clc
sub
mov
dec
dec
inc
test
out
mov
add
inc
xchg
out
ret
je
daa
xchg
imul
mov
mov
pop
mov
xor
fistl
lret
fstps
inc
lahf
sbb
dec
dec
fld
or
out
inc
xor
inc
sbb
adc
jno
xchg
jmp
lods
and
repnz
push
cmp
fwait
dec
pop
int
in
pushf
pop
jne
sub
test
test
rorb
cmp
pop
adc
cltd
jecxz
xor
ljmp
lcall
mov
push
outsb
test
sti
mov
les
mov
mov
nop
mov
jl
sub
addl
pop
cmp
push
test
add
mov
imul
push
sbb
push
adcb
mov
cmc
ss
mov
mov
add
jae
fsubl
popf
pop
jecxz
inc
inc
lds
push
push
xor
xchg
out
dec
fadds
fimull
adc
mov
movsb
hlt
icebp
inc
lea
leave
sbb
sti
push
inc
in
or
inc
lods
jmp
rcl
pop
inc
sub
push
push
dec
cmpsl
scas
lods
aas
sbb
add
out
ljmp
sbb
sbb
insb
or
fistpll
in
jno
mov
shlb
push
rcr
movsb
hlt
cmp
cmc
test
ds
int
sub
insl
stos
mov
push
popa
movsl
sbb
or
ret
aaa
mov
movsb
pusha
sbb
and
jecxz
mov
and
sarl
in
loop
or
aas
sbb
test
cwtl
aam
push
sub
inc
inc
sbb
lret
cmp
ret
mov
push
push
sub
out
dec
in
je
lods
or
orl
pop
mov
inc
out
out
fstpt
fists
pop
mov
in
mov
mov
ret
jno
push
and
loopne
fs
repnz
test
pop
cmp
sbb
mov
mov
cld
fs
popf
ja
xchg
pop
mov
lods
ret
daa
jg
dec
stos
fidivl
pop
fs
push
or
lea
fdivl
aam
push
addr16
jle
shrb
pushf
in
and
cltd
aad
adc
pop
and
dec
or
adc
ficoml
jg
testl
dec
daa
lods
jo
adc
sub
jp
or
mov
mov
inc
jns
mov
arpl
dec
lods
icebp
nop
dec
cmc
inc
mov
push
jl
test
pop
mov
loopne
insb
push
les
fcompp
popf
ds
hlt
sar
cmpsl
adc
stc
xorl
sbb
fnstenv
shl
cs
scas
inc
jno
pushf
mov
sti
lock
push
imul
mov
data16
adc
cmpsl
push
pop
cltd
jg
adc
lahf
mov
stos
sbb
pop
jo
inc
xlat
adc
scas
jbe
incl
sbb
daa
pop
xor
dec
mov
sub
pushf
addr16
push
sub
sbb
mov
and
ret
mov
add
data16
mov
xchg
mov
cmc
loopne
in
sti
mov
push
or
xor
adc
push
inc
dec
add
and
inc
dec
xor
or
in
inc
sbb
sti
sbb
ss
mov
repz
orb
sbb
sbb
dec
push
push
pop
cmc
jb
xchg
add
jecxz
mov
imul
xor
sti
gs
lds
scas
loope
inc
push
fbld
push
imul
fucomp
push
cmp
adc
fs
rolb
lock
insb
sahf
jle
lods
push
cmp
insl
call
leave
xor
lock
popa
dec
int
mov
std
imul
add
rcrb
or
and
adcb
cmp
sahf
xchg
movsl
sbb
pop
loop
push
inc
loope
and
out
cmpsl
test
add
lret
or
sti
stc
dec
xchg
in
xor
mov
push
lcall
add
inc
mov
into
dec
fs
rcl
frstor
in
jge
mov
mov
sub
scas
or
je
sbb
adc
into
test
sub
or
dec
out
jno
gs
clc
sbb
in
inc
dec
rcrl
push
lods
sbb
push
xchg
mov
movsbl
jl
out
imul
pusha
stos
add
or
cltd
fidivs
stos
outsl
xchg
popa
cmpsl
imul
dec
mov
popf
fninit
xchg
aam
and
int
shl
lcall
gs
mov
fs
js
iret
xor
repnz
mov
sarb
ds
out
pop
add
adc
outsb
dec
pusha
cmp
jl
pop
stos
pop
push
or
mov
fistl
xchg
add
repz
dec
inc
mov
ljmp
movsl
lahf
sub
scas
jl
ja
mov
loope
inc
or
sbb
aas
movsb
cmc
ret
sub
imul
fadds
jnp
lods
xorb
test
xchg
aam
sarb
inc
adc
fs
movsb
lods
loopne
cld
insb
xor
call
ret
inc
out
add
mov
or
sbb
insb
sub
and
dec
jge
movsl
in
jo
int3
push
out
insl
nop
jecxz
adc
das
pop
lcall
sahf
cmp
xchg
fxch
jp
stos
aad
mov
pop
ljmp
sbb
jno
and
xchg
outsb
mov
push
pop
into
out
pop
pop
cs
arpl
lea
je
jo
rcll
mov
mov
gs
arpl
dec
cltd
ficomps
add
testb
popf
cmp
imul
add
cmp
or
jl
or
inc
shrb
jno
sub
mov
xchg
jno
int3
shlb
fsts
fs
pop
mov
pop
imul
lret
mov
insb
adc
pop
and
movb
popa
mov
dec
sub
ds
mov
dec
out
mov
push
andb
scas
cmpb
out
inc
dec
repz
addr16
clc
subl
cs
pop
cld
add
ss
jne
movsl
divb
popa
mov
mov
mov
rcll
popa
sar
ss
adc
push
sub
fwait
mov
lock
push
sbb
jecxz
mov
cld
jne
or
adc
dec
mov
test
dec
pop
mov
pop
mov
jae
repz
dec
jp
cmp
filds
add
pop
mov
inc
xchg
dec
ficompl
in
movsl
pop
adc
lea
inc
adc
movsb
lea
mov
inc
sbb
pop
cmp
sub
inc
outsl
ret
in
in
fcmovne
lahf
ss
inc
cmp
push
orl
subb
sbb
into
sub
jne,pn
fs
push
subl
mov
and
into
mov
xchg
mov
mov
xor
les
daa
pop
icebp
dec
leave
push
xor
int
or
aaa
repz
xor
cmpsl
das
mov
pop
lret
add
dec
bound
adc
lods
and
xchg
push
ret
sbb
fmuls
ss
jl
inc
inc
or
inc
bound
fnstsw
sbb
push
add
es
ficompl
xor
mov
lret
mov
xor
push
jae
add
test
insb
sbb
jnp
xor
xchg
inc
sbbb
mov
sub
ja
pop
ret
sbb
call
gs
mov
push
into
inc
pop
sub
je
mov
push
out
or
orb
cltd
cmpsb
adc
leave
outsl
test
imul
lea
and
stc
xchg
mov
shrb
subl
call
jl
add
or
pop
loopne
inc
mov
mov
loop
or
lahf
jno
lret
lret
insl
dec
sub
push
mov
dec
aas
std
mov
xchg
inc
test
lods
arpl
push
mov
xchg
aas
sub
xchg
cmp
inc
out
cmp
and
sub
xchg
jg
add
int
lods
int3
iret
lret
test
or
cmp
out
push
jno
rcll
mov
imul
jecxz
or
out
cmp
jbe
lret
or
push
xchg
xlat
push
ds
inc
sbb
jo
pusha
add
in
dec
adc
das
nop
subl
mov
mov
out
lret
pop
cmp
or
cmp
aam
fdivrp
mov
mov
sub
pop
cltd
ljmp
xchg
dec
push
sbb
pusha
test
out
sahf
jo
sbbb
dec
sbb
or
xchg
pop
mov
or
fcompl
jae
push
mov
fcmovbe
xchg
mov
gs
mov
ss
xchg
ja
push
shrl
cmp
lahf
and
xor
shlb
outsb
lods
and
cmpsl
xorb
sub
dec
add
dec
shl
xchg
pop
out
push
repz
jmp
push
sbb
inc
mov
je
or
xlat
inc
fsubs
test
stos
and
mov
mov
xchg
mov
mov
dec
mov
sti
xchg
and
das
ret
adc
dec
movsl
cmp
adc
div
ja
adc
cmp
push
mov
inc
mov
push
aaa
sub
scas
jecxz
push
jg
lea
test
push
rolb
dec
push
outsb
inc
js
in
and
add
adc
das
inc
mov
fwait
mov
adc
jl
rcll
fstp
pop
cmp
ret
push
les
add
add
data16
lea
jl
jmp
popa
dec
loop
add
movsl
inc
push
push
cmpsl
stc
dec
and
sbb
or
and
push
fmuls
cmpsb
nop
movsl
js
push
xchg
add
sub
xchg
cltd
mov
pop
cmpsb
std
lea
xchg
in
push
jg
xor
test
mov
loope
cltd
sub
adc
pushf
push
mov
rcr
mov
sub
add
jbe
outsb
ds
andl
loopne
sti
pop
jne
in
push
push
jle
push
jecxz
xchg
pop
imul
lods
cmp
push
lods
imul
clc
cmpsl
outsb
push
mov
xor
call
cmp
mov
outsb
popf
rcrl
mov
out
xchg
pop
jnp
cmp
jle,pn
js
rorb
xor
push
push
mov
stos
xor
jns
or
mov
sub
lods
jge
adc
inc
dec
les
pop
cmp
bound
and
in
mov
lahf
and
test
pop
out
xor
adc
enter
sbb
xor
pop
scas
push
je
out
pop
mov
xor
or
mov
mov
jns
call
popf
and
and
sbb
testl
and
notb
dec
or
shl
mov
jp
lds
int
cmc
fcompp
adc
add
xorl
mov
clc
fiaddl
cmpsb
mov
and
pop
scas
jle
gs
xor
cmp
fs
inc
and
ret
lods
pop
fidivrs
adc
mov
add
pop
xchg
mov
lcall
cld
popa
inc
cmpsl
adc
inc
xlat
scas
scas
jbe
dec
mov
movsl
mov
xchg
dec
in
xrelease
rclb
shufps
xchg
xchg
jne
je
sbb
lret
xchg
sti
xchg
cmp
in
jb
subl
pop
imul
xor
mov
mov
nop
sub
xor
pop
xchg
bound
ja
jns
test
pushf
sub
lds
hlt
les
cmc
mov
andl
xor
jno
test
movsb
loopne
jle
dec
sbb
xchg
push
xor
mov
arpl
sub
shrl
mov
loop
inc
test
jl
daa
or
cmpsb
push
sbb
cmp
scas
shll
mov
mov
pop
out
cmpsl
and
cmp
or
inc
jnp
pop
adc
cmp
ret
test
jae
aam
mov
ficoml
mov
sbb
outsb
push
mov
fwait
jnp
pop
mov
sub
in
nop
repz
shrl
xchg
arpl
or
mov
and
mov
pop
loope
or
test
gs
sbb
adc
lds
in
fimuls
frstor
mov
fstl
fwait
sub
jp
jae
notb
call
sbbb
dec
lods
mov
aad
imul
xchg
addr16
iret
xchg
xor
negl
sahf
fcmove
jle
pop
cmp
jb
and
pusha
iret
cmc
hlt
jne
cmpsl
stos
inc
in
iret
jmp
jno
sahf
push
sahf
sub
out
cli
repz
andb
adc
out
push
arpl
out
out
and
mov
stos
cwtl
xor
jecxz
sbb
icebp
dec
aas
jge
and
xlat
imul
js
push
data16
lods
mov
mov
pop
xor
adc
dec
call
jb
outsl
je
push
ljmp
add
insb
fs
push
add
lret
test
lfs
xchg
insb
xchg
sub
faddl
add
stos
loope
inc
ljmp
insl
mov
addr16
inc
mov
jbe
pop
std
cmpsl
cmp
cmp
mov
dec
add
in
scas
sbbl
mov
push
shll
cmp
jo
dec
pop
push
roll
sub
rcr
lahf
inc
xchg
push
mov
xchg
xor
ret
rorb
dec
cmp
int
mov
movb
xor
jae
lret
jns
loope
stos
jno
cmp
xchg
jl
testl
pop
and
adc
dec
xor
clc
pop
andl
jns
sahf
in
pop
mov
inc
sarl
cltd
lods
in
jo
or
test
imul
and
cmpsb
rcrl
call
pop
sub
addl
and
sti
or
mov
in
xchg
aam
push
xor
and
dec
dec
inc
mov
aaa
push
and
loope
arpl
cmp
or
frstor
pop
jo
adc
inc
jbe
xor
dec
mov
call
sti
dec
dec
dec
push
dec
pop
mov
and
sub
inc
xchg
xchg
xor
das
jl
inc
loopne
call
std
data16
sar
addr16
pop
ret
jecxz
add
push
xchg
pushf
mov
ljmp
xor
mov
or
xchg
adc
dec
repz
lret
jbe
push
aas
mov
add
je
std
cli
and
lahf
mov
mov
loop
mov
div
repnz
stos
fildll
nop
jle
add
sbb
faddl
pop
leave
mov
iret
mov
divb
jno
insb
repz
jmp
push
movsl
mov
and
xor
sar
aas
dec
popf
repz
std
ret
mov
lods
sub
rcrl
or
jp
jno
je
lret
mov
shll
xchg
adc
push
repnz
js
jns
icebp
out
push
addr16
pusha
aam
leave
xlat
int
xchg
cli
adc
mov
inc
leave
das
adc
push
mov
mov
cmp
loope
sbb
xor
xchg
test
mov
or
fwait
jb
xor
mov
insl
mov
ret
notb
mov
mov
popfw
jg
push
movsb
daa
dec
adc
cmc
aas
and
push
xor
xor
mov
test
lods
lcall
ja
add
je
sarl
popf
out
mov
repz
or
pop
cli
int3
pop
sti
or
mov
mov
and
adc
xchg
jb
stos
aas
iret
inc
add
aas
push
movsl
sub
jmp
xchg
int3
cmp
dec
sub
inc
inc
fsubrs
or
inc
cmpsl
push
and
in
mov
aaa
mov
mov
pop
adc
jl
lcall
adc
adc
ds
aam
in
lcall
fildll
addr16
imul
decb
xor
into
pusha
test
aas
pop
shl
lret
mov
mov
and
movsb
and
push
inc
test
push
testl
cmpsb
aad
add
pop
xor
cwtl
pop
das
dec
sub
mov
xchg
negw
clc
fdivs
dec
jne
push
aad
lcall
mov
jnp
add
inc
mov
out
mov
push
jnp
add
cmc
jmp
mov
push
fisubl
daa
lret
aaa
mov
loopne
out
adc
popf
xchg
sbb
inc
mov
stc
or
inc
mov
push
cmp
cmp
pusha
sbb
xor
repnz
out
rcl
stos
mov
xor
mov
and
or
inc
lods
lea
and
cwtl
pop
stc
xor
mov
jle
inc
ficompl
aaa
push
testl
ret
shl
daa
sti
jno
jae
dec
push
popa
roll
pop
add
mov
xchg
mov
decb
push
movsl
xchg
mov
jmp
mov
stos
xor
ret
sti
les
test
pop
int3
test
dec
mov
pop
xchg
lea
pushf
mov
mov
shll
call
shll
mul
jp
pop
and
stos
sbb
jo
mov
dec
push
jecxz
push
add
dec
test
mov
sub
xor
pop
dec
fiaddl
dec
or
shr
lretw
mov
jns
test
jp
cmp
xchg
pop
mov
and
test
cmp
outsl
orb
stos
popf
stc
shlb
adc
xchg
sarb
lret
xor
test
adc
gs
inc
dec
sahf
push
pop
sbb
push
loope
sar
dec
adc
movsl
les
inc
add
fisubl
add
mov
and
std
sbb
cs
mov
fnstenv
fcmovnb
test
adcb
mov
testb
pop
mov
xchg
int3
insl
xor
mov
mov
outsl
sbb
or
cld
adc
movsb
fmuls
adc
scas
pop
cli
mov
sub
lea
rolb
fbstp
sbb
mov
fdivs
dec
in
addr16
out
cmpsl
sub
es
bound
lcall
mov
xor
int
faddp
or
mov
mov
pushf
inc
inc
adc
dec
mov
mov
pop
mov
xchg
add
mov
fidivrl
jne
sarb
es
pusha
mov
loop
lods
mov
fs
jg
xchg
std
or
dec
rorb
int
inc
dec
shlb
xchg
inc
pop
inc
push
je
daa
inc
mov
das
sbb
push
cmp
in
or
je
push
out
mov
sub
inc
inc
or
sub
mov
jp
outsl
sbb
and
adc
jns
mov
das
cmp
or
in
cmp
aaa
aaa
and
mov
sbb
sbbb
xlat
cmpsb
mov
xor
mov
sub
test
ficoml
push
xchg
pushfw
xor
mov
or
add
rcl
xor
sbb
dec
cli
or
je
repz
stos
fstpl
mov
push
out
cltd
pop
add
xchg
std
pop
adc
pop
push
adc
ret
lahf
cmpsb
sti
push
addl
push
push
add
pop
push
jg
and
nop
sbb
daa
push
fwait
sbb
insb
in
sub
into
mov
push
adc
jmp
xchg
ljmp
icebp
sarb
lret
stc
adc
mov
lahf
rorl
sarb
cmp
dec
and
inc
aaa
and
dec
sub
ds
ljmp
dec
jbe
cmpb
xor
xchg
rclb
rcrb
movsl
call
cld
fcomps
adcl
shll
and
iret
mov
movsl
test
pusha
xlat
imul
fistps
mov
adc
sub
dec
push
pop
pusha
sbb
sub
insl
dec
jnp
movsb
hlt
movsb
lods
sarb
ret
xor
faddl
pop
jo
test
sbb
mov
inc
or
jo
jae
xor
sub
xchg
jns,pt
mov
dec
jnp
leave
cmpsb
push
xchg
push
xor
dec
push
loope
cmc
faddl
test
xchg
rclb
adc
in
mov
bound
or
decb
push
jne
xor
stos
call
mov
in
jle
mov
leave
mov
xor
mov
nop
lods
nop
out
adc
aas
fisubrs
mov
xchg
mov
mov
ficompl
pop
sbb
cld
lock
push
in
xchg
pop
pop
mov
push
cmpsb
mov
add
sbb
dec
push
mov
in
int3
push
scas
movsl
cmp
pop
addr16
gs
jg
add
out
inc
enter
mov
rolb
jl
jne
add
nop
call
pop
xchg
lret
pop
mov
jno
sub
jmp
cmpsb
out
sar
mov
cld
insl
push
pop
js
stos
xchg
into
cld
sub
or
inc
inc
or
sbb
lahf
stos
mov
cmpb
mov
nop
dec
jl
xchg
cmc
and
sti
dec
dec
imul
mov
mov
or
xor
pop
mov
imul
ds
add
fcoml
jno
and
sub
adc
jp
jae
icebp
sbb
lea
push
mov
xchg
adc
dec
adc
cld
xor
sub
insb
arpl
cmp
cmp
mov
xchg
cmp
call
insl
push
in
and
nop
lea
aas
inc
pop
and
pop
jbe
js
aaa
sub
andl
in
sub
add
push
mov
int
mov
jecxz
imul
divl
insb
mov
cltd
lods
rol
pop
clc
xchg
aaa
lds
cld
addr16
jecxz
adc
out
fdiv
aam
push
gs
xchg
xor
mov
xchg
push
mov
stos
and
pushf
adc
jb
inc
lret
cli
lret
push
xor
ret
aad
xor
aam
loope
popa
xor
je
sbb
cmp
out
fstpl
adc
inc
icebp
lret
cli
add
and
div
cmp
xchg
jbe
sbb
xor
mov
cmp
jmp
lods
fldt
or
sbb
inc
mov
pop
fisubrs
mov
dec
xchg
sub
iret
imul
jp
pop
pop
xchg
or
or
cmovnp
imull
jl
insl
gs
sbb
in
addr16
xchg
pop
cmp
push
xchg
int
or
add
lret
mov
pop
dec
mov
sarb
in
es
mov
add
pusha
mov
cld
mov
clc
nop
xchg
cmc
lret
xchg
fldt
jae
aaa
mov
inc
pop
gs
out
cmp
stc
inc
lcall
dec
ja
cld
sbb
cmp
adc
push
std
data16
popf
data16
sbb
hlt
xlat
lret
jp
mov
mov
xchg
repz
fs
mov
shll
pop
mov
cmp
pop
jno
bound
mov
pop
aam
mov
call
imul
adcl
in
fisubs
pop
clc
daa
inc
stos
xchg
push
and
mov
repz
adc
insl
icebp
mov
lods
imul
aas
sarl
add
pushf
xchg
repz
cmp
mov
sbb
out
inc
xchg
inc
jecxz
data16
sar
xchg
scas
test
pop
stc
jmp
std
pop
jl
add
ja
imul
jl
lret
xorb
jbe
movsb
adc
pop
mov
sar
xor
pop
xchg
fnsave
dec
jbe
jbe
mov
stos
orl
fnstsw
stos
dec
and
inc
jecxz
mov
sbb
xor
pushl
out
sbb
jg
ss
mov
pushf
das
cmc
pop
mov
xchg
xor
mov
mov
aad
les
pop
icebp
cmp
js
adc
or
push
push
sub
adc
fldt
pusha
sub
jae
faddl
cltd
popa
push
rcr
mov
inc
popa
or
cmp
pop
mov
sbb
leave
rol
pop
pusha
stos
gs
push
jg
inc
addl
add
xor
ja
mov
cmp
scas
inc
lods
xchg
xor
sar
mov
js
or
sub
push
fidivrs
cmp
pop
aaa
mov
data16
inc
shl
and
std
cmc
pop
jae
inc
movsl
outsb
enter
inc
push
dec
pop
cmp
jo
and
xchg
fwait
pop
dec
lods
cmp
popf
out
lods
pop
mov
cld
pop
xchg
push
pushf
mov
pop
and
mov
test
pop
enter
inc
push
btc
add
sub
push
or
dec
aaa
aas
jle
mov
addr16
or
xor
inc
into
xchg
xor
push
mov
arpl
xor
sub
leave
sub
cmp
shlb
sub
pop
mov
dec
cmp
sbb
and
hlt
lret
xor
pop
mov
fpatan
push
jle
jmp
add
out
add
sahf
push
pop
enter
adc
xor
in
push
mov
cmp
mov
out
mov
aam
std
cld
js
xchg
sub
mov
mov
adcb
adc
into
imul
jge
push
cmp
out
xor
loop
js
xchg
dec
mov
adc
daa
adc
mov
in
in
sub
xchg
dec
int3
enter
mov
push
loop
sti
cmc
and
dec
sub
sti
cli
sub
or
js
push
bound
mov
add
int3
je
and
adc
mov
inc
repz
jmp
addr16
add
test
and
mov
in
mov
aas
xor
shlb
mov
dec
jle
dec
push
loopne
cltd
outsl
xchg
aam
lods
call
bnd
stos
ss
push
jle
pop
rolb
popf
mov
fstl
sbb
mov
and
mov
rcrb
cmp
jl
mov
lret
cmpsb
popf
mov
add
jns
aas
lcall
icebp
dec
fisubrl
popf
jne
sub
fmul
add
push
insl
cmpsb
aad
fnstcw
xchg
inc
std
cmp
pop
sti
mov
mov
push
hlt
push
cmp
loope
vmovups
push
pop
push
and
and
xchg
pop
xor
and
call
sbb
add
push
es
or
add
in
and
mov
mov
ficompl
popa
imul
xchg
jae
pusha
xchg
mov
sub
push
add
or
push
push
sub
push
lret
inc
mov
push
dec
xor
push
shrb
into
inc
bound
sub
sub
repnz
xor
int3
jne
jnp
and
mov
ja
push
pushf
and
pop
pop
gs
aas
nop
push
add
test
xor
imul
movsb
das
jae
mulb
pop
idivb
fadd
mov
into
mov
insb
mov
and
mov
cld
rcll
repnz
jb
ja
and
daa
test
xchg
jge
and
jl
pushf
adc
mov
pushf
out
orb
pop
mov
mov
pusha
std
test
ret
cltd
or
lods
icebp
push
jo,pn
and
lret
mov
aaa
mov
or
dec
aas
pop
mov
cmpb
popf
mov
sub
shrb
adc
lock
repnz
cmp
je
jbe
sbb
xchg
sbb
in
jl
jae
mov
xor
pop
sbb
clc
xor
push
fdivr
jle
inc
jne
pusha
jns
subl
sub
xor
push
scas
lahf
pop
or
dec
jo
xchg
add
and
cmp
sub
loopne
js
push
or
dec
jg
pusha
xchg
cwtl
sbb
xchg
nop
adc
in
mov
mov
push
test
jnp
scas
stos
mov
push
pushf
sbbl
cmp
push
push
imul
pop
nop
xchg
aam
mov
mov
call
inc
fcomp
mov
and
lahf
out
adc
adc
xor
cli
icebp
cmpsl
cltd
cld
icebp
dec
outsl
pop
cmp
aam
mov
jg
mov
sbb
cmp
jge
push
out
aaa
pop
inc
mov
adc
sub
xlat
dec
pop
notb
nop
and
dec
sbb
pop
int3
fwait
in
push
popl
push
xor
mov
or
pusha
xchg
pop
leave
add
inc
sbb
add
rorl
lahf
sbb
pusha
push
in
inc
pop
cmp
jle
mov
in
sbb
sbb
shrl
and
in
sbb
test
std
pop
jns
dec
cmpsb
dec
cmpsb
sbb
pop
cmpsb
stos
aam
iret
dec
test
xor
sti
and
cli
cltd
je
int
jge
out
sub
adcb
pop
in
fsubl
imul
addr16
imul
cmp
and
xor
sub
pop
ficoms
and
test
mov
or
inc
mov
jecxz
xchg
pop
movsl
jl
push
fadd
push
aas
stc
cwtl
aaa
mov
fstps
jno
mov
xchg
cmpb
popf
stos
mov
data16
orb
jb
fwait
mov
pop
ret
and
orl
jg
fcoml
or
jge
sbbl
pushf
sbbl
int3
pop
push
mov
incb
imull
adc
or
xor
aaa
movsb
hlt
dec
aad
cwtl
rcr
lcall
jb
sbb
push
ret
data16
jmp
addl
xchg
xlat
adc
mov
push
jo
mov
add
cmc
jnp
or
scas
jp
sbb
mov
or
das
mov
add
shr
xor
in
push
adc
out
mov
movsl
fcmovb
and
shlb
loope
mov
lcall
popf
pop
dec
mov
rcrb
mov
sbb
call
aad
mov
push
push
add
mov
int3
push
out
scas
cmp
lret
pop
xchg
cwtl
sub
mov
push
mov
das
add
add
mov
pop
stos
fwait
xor
daa
dec
mov
dec
fisttps
in
sub
jmp
inc
es
cmp
aad
jbe
mov
mov
fcomps
out
cmp
les
outsb
fstps
jnp
imul
negb
sahf
mov
pop
cltd
imull
pop
ljmp
jle
or
adc
ds
cmp
mov
sahf
insl
or
rol
sub
dec
inc
loopne
icebp
aam
and
stos
xor
sbb
sar
pop
out
notw
in
add
pop
xor
lahf
dec
pop
les
xor
loopne
jmp
cli
js
hlt
and
mov
stc
jb
pushf
negb
jno
sahf
cmp
in
punpckhbw
lret
lcall
sub
and
outsl
mov
mov
shrl
xchg
push
lcall
testl
repz
lods
test
mov
in
xchg
push
ja
fwait
jg,pn
pushf
stc
nop
xor
orb
notl
push
xor
sahf
mov
shll
lcall
lea
push
loope
and
inc
fs
es
dec
mov
loope
mov
stos
mov
adc
mov
mov
sub
mov
or
dec
mov
shlb
mov
mov
cmp
fs
mov
imul
jle
orl
dec
jo
cmp
adc
xchg
pushf
dec
pusha
call
push
and
adc
test
fdiv
xchg
out
jl
jae
mov
mov
pusha
pop
and
inc
cmp
xor
xor
mov
cmpsl
push
mov
mov
fcoms
aad
aaa
stc
jo
imul
inc
xchg
mov
cmp
movsb
or
call
jno
jne
and
mov
in
mov
and
xchg
cmpl
mov
scas
pop
clc
sub
mov
cli
jae
jmp
subl
shlb
out
jmp
sbb
push
outsl
fldcw
sbb
lcall
pop
mov
clc
push
inc
and
inc
push
xor
iret
int
aam
or
sub
icebp
testl
inc
ret
push
xlat
es
xor
in
ds
stc
xor
iret
lahf
imul
lret
bnd
xor
push
push
inc
adc
loopne
idivb
mov
dec
pop
xchg
cmpb
jo
movsb
pop
mov
xor
test
dec
xor
push
push
call
es
push
movsl
mov
daa
inc
fimuls
ror
cwtl
inc
sub
push
scas
xchg
sub
push
cld
adc
pop
adc
xor
lahf
mov
mov
and
into
addl
sbb
dec
jecxz
fstpl
xor
or
insb
add
addb
clc
in
jne
test
inc
push
addr16
rorl
stos
cmp
cli
imul
pop
sti
adc
aas
xchg
das
inc
loopne
xor
das
xorl
sub
out
and
add
cmp
lcall
jnp
jae
mov
fisubs
ds
pop
xchg
in
lret
dec
push
shlb
or
push
movsl
xchg
loop
iret
jmp
mov
mov
aaa
test
test
mov
pop
sub
pop
aam
and
mov
call
or
pop
sub
repnz
cmp
fistpll
add
incb
loop
loop
cltd
stc
das
mov
test
jge
das
cmp
ljmp
mov
cld
lods
xor
mov
add
mov
loopne
adcl
push
cmp
jmp
jmp
jnp
or
and
mov
dec
lods
push
push
or
mov
cltd
lods
push
pop
xlat
cmp
stc
rcrb
jbe
xchg
xchg
loopne
lock
in
cmp
jmp
mov
xchg
jp
adc
adc
in
dec
stos
mov
das
push
je
lahf
in
push
loop
xor
cmp
lods
lods
lds
mov
aaa
in
cwtl
aad
testl
pop
dec
shll
idivl
xor
adc
in
stos
std
dec
cli
insl
jnp,pn
inc
or
lcall
inc
lcall
data16
out
push
pusha
into
cmpsl
sub
sar
insb
and
aaa
pop
xchg
fcoms
negl
pop
mov
dec
shr
faddp
pop
mov
fsubs
leave
rcrl
pop
cmc
jecxz
adc
mov
and
mov
adc
das
xchg
pop
mov
lods
mov
and
jle
jmp
ret
xor
dec
cmp
xchg
lret
xchg
push
daa
pop
loop
xchg
inc
jle
out
jnp
dec
cmpsb
les
xor
in
sbb
mov
ret
mov
shr
sbbb
popa
mov
mov
rcrl
xchg
popf
or
adc
pushf
inc
push
add
sub
inc
sub
pop
push
cli
out
dec
das
shrb
loop
rcrb
sbb
test
push
jg
adc
in
ret
pop
xchg
pop
clflush
fcmovbe
jle
inc
jno
sbb
arpl
repz
sbb
lret
insb
dec
fists
mov
negb
lcall
mov
jle
leave
or
sbb
cmp
push
push
scas
mov
sbb
mov
jge
xchg
fnstsw
loopne
or
ret
adc
jmp
push
push
mov
inc
scas
mov
jecxz
mov
arpl
xchg
fsubrl
xchg
dec
jns
fisubl
mov
fwait
leave
pop
cmpsl
xchg
rolb
push
sbb
outsb
adc
mov
dec
add
out
jmp
pusha
xchg
add
pop
xor
sarb
out
xor
ds
data16
aas
imul
mov
cltd
cltd
test
mov
or
popf
push
mov
fmull
mov
mov
iret
jne
adc
rol
adc
and
shrl
mov
and
mov
in
out
xor
xchg
add
mov
stc
and
shrb
stc
aaa
xorb
mov
jo
mov
sahf
sti
jmp
idivb
sub
pop
stc
leave
mov
das
xchg
orl
lret
cli
cmpsb
popf
xchg
bound
nop
movsb
sar
ja
sbb
mov
cmc
lock
push
pop
xor
xchg
cld
pop
push
jecxz
mov
or
xchg
push
iret
mov
test
call
fstpt
jns
jbe
mov
std
mov
sti
movsl
mov
xor
js
insl
and
shr
fs
cmp
mov
sub
bound
popf
test
pop
sbb
call
sub
cltd
mov
mov
out
cli
lcall
fildll
fnstcw
xchg
les
push
jbe
cmp
dec
mov
les
enter
jp
leave
sub
bound
push
mov
add
cmpl
xchg
mov
hlt
xchg
jns
add
cmp
popa
ss
adc
std
ret
pushf
cmpsl
mov
sbb
cli
add
test
jno
fnstenv
outsb
repnz
adc
jp
mov
dec
out
test
or
aad
or
mov
jle
fwait
jge
dec
insl
sti
push
sbb
js
cmp
lods
push
push
int
push
test
pop
mov
shlb
pushf
add
sub
cmp
mov
in
cli
and
sti
daa
stos
dec
enter
inc
pop
leave
js
push
pop
fimuls
pop
lds
imull
mov
into
jg
push
cmp
or
clc
js
out
sbb
es
inc
mov
pop
xchg
pop
xchg
dec
sub
fcoms
sbb
cs
mov
jne
jge
cmp
sub
pshufw
call
iret
mov
pop
lret
sahf
xchg
add
sbb
pop
icebp
insl
int
inc
add
test
mov
push
lret
gs
arpl
mov
and
cmp
push
fisttpl
mov
cmp
dec
movsl
cmp
shll
add
test
xor
or
pop
push
xor
lods
inc
jo
stc
inc
lcall
in
out
jecxz
jg
mov
arpl
call
mov
test
mov
xor
fnstcw
mov
adc
and
push
ret
cmp
pop
dec
icebp
lods
das
mov
xor
push
sbb
mov
repnz
movsb
inc
pop
mov
fs
sub
push
mov
sbb
jno
fs
xchg
shll
or
es
adc
or
imul
int
imul
inc
pop
xor
pop
mov
rorb
inc
cmp
inc
push
fsts
push
jb,pt
jne
aad
movl
mov
mov
push
pop
push
out
inc
mov
loop
inc
and
sub
push
ret
pop
fcmovnu
jge
mov
shrl
test
sarl
mov
popf
mov
popf
pop
inc
and
sub
lahf
push
or
in
push
and
and
or
jns
ljmp
js
sbb
push
inc
jne
int
add
xor
subb
jp
mov
mov
pop
xlat
jns
cmc
jb
les
mov
lea
xchg
fisubrs
dec
daa
scas
ret
in
sub
inc
divb
out
xchg
mov
stos
sub
and
cltd
mov
kmovw
lock
sub
sbb
or
xchg
rcrb
push
push
mov
mov
andb
mov
mov
test
shlb
scas
mov
jmp
adc
aam
imul
xchg
jle
cmpsb
push
inc
lds
hlt
mov
sbb
push
jmp
imul
mov
movsb
fisttpll
mov
in
jb
jns
mov
push
xchg
rcr
aaa
ljmp
cmp
jmp
cltd
sub
push
mov
cmp
and
jmp
syscall
jge
inc
call
cmp
arpl
dec
push
popa
mov
push
loope
lret
mov
sub
in
mov
bound
dec
jp
ffreep
outsb
mov
mov
sub
cmp
sbb
jl
mov
jecxz
sti
nop
mov
into
and
cs
lret
xlat
addl
mov
pop
mov
outsb
jnp
or
rol
or
dec
out
cmc
pop
outsl
dec
int3
mov
or
lock
add
mov
aam
xor
pop
or
jb
xor
test
or
pop
mov
pop
pop
rorb
cltd
push
popf
jp
das
loop
ret
push
decb
xchg
jnp
dec
lret
data16
imul
fbstp
inc
xchg
lods
sbb
xor
pop
or
out
call
mov
psubsb
adc
fcmovnu
cmp
jge
pushf
nop
repnz
fcoms
into
pusha
addr16
jae
mov
mov
ss
pop
stc
psubb
jmp
int3
mov
int
cli
icebp
xor
adcl
insl
fisttpll
pop
and
loope
out
sub
jae
xchg
loop
scas
push
inc
cmp
fucomip
subl
leavew
lock
push
push
xor
outsb
push
scas
jle
jl
addr16
aad
mov
pop
dec
pop
insb
js
mov
rol
pop
push
xchg
lock
ljmp
sbb
cmp
fdivl
test
sbbl
aam
jmp
sbb
lods
pop
gs
scas
div
in
repnz
dec
add
or
in
xchg
xchg
enter
adc
call
xorb
push
lcall
imul
add
sub
add
inc
mov
add
arpl
or
mov
jo
jmp
sbb
sub
mov
popa
subl
xor
mov
out
cmc
jecxz
addb
dec
sahf
lds
and
jns
add
movnti
add
xchg
push
xchg
outsl
mov
cld
xor
push
test
test
bound
xor
dec
pop
out
mov
decb
dec
jmp
add
jae
fucom
jo
shr
incl
push
xchg
adc
cmpsl
aas
shll
mov
rorl
xchg
adc
arpl
scas
jl
mov
jb
adcb
cmp
in
std
fbld
cmp
aas
dec
mov
sub
mov
ret
sbb
cmp
pop
mov
jle
int3
xchg
inc
or
add
fwait
push
sbb
pop
cli
cli
shl
xor
mov
fs
mov
xorl
xor
pop
lds
pop
xor
cmp
pop
stos
lret
std
ret
pop
daa
or
adc
bound
aad
sbb
testb
call
outsb
jo
jb
xchg
xorb
ret
test
rcl
jecxz
push
in
rolb
stc
pop
pop
repnz
lret
mov
pop
es
in
pop
xchg
dec
cs
xorb
mov
rolb
cli
sub
push
lods
shl
adc
outsb
or
cs
scas
dec
or
xor
loopne
lcall
fdivs
not
sub
push
std
fwait
jne
adc
shlb
call
adc
lahf
scas
pop
push
mov
xchg
popf
in
xchg
cmovbe
mov
jg
ror
jno
test
xchg
mov
out
stos
mov
js
xor
or
jnp
lret
push
push
mov
mov
in
jp
mov
and
in
mov
daa
add
sti
sbb
pop
pop
inc
jae
popf
pop
or
in
inc
in
scas
xchg
ja
test
sti
shlb
es
mov
xor
mov
mov
dec
dec
repnz
mov
nop
pop
out
cmp
adc
jge
xchg
xchg
into
loop
adc
out
cli
mov
pop
aas
mov
and
fmull
xor
roll
xchg
call
inc
cmpsl
scas
shll
mov
in
loope
xchg
imul
loop
enter
pop
pop
neg
adc
add
cmp
mov
jge
pop
inc
push
mov
sbb
jns
inc
shrl
and
in
inc
cltd
iret
jmp
mov
push
xor
or
repz
pop
push
cmp
shll
pop
gs
sbb
adc
addr16
add
adc
pop
stos
fsubr
dec
mov
push
mov
loop
or
ret
sub
into
test
imul
scas
out
pop
cld
add
xchg
jbe
xlat
in
push
and
jecxz
mov
lods
shlb
loope
out
add
in
and
in
pop
pop
mov
es
cltd
sub
push
fldenv
dec
xchg
inc
xchg
insb
xchg
test
adc
mov
into
push
call
mov
js
inc
pop
outsb
gs
lea
pushf
push
xchg
pop
push
decl
inc
scas
imul
stos
ret
inc
mov
inc
sbb
fisttpll
xchg
leave
mov
push
inc
xor
inc
in
mov
movsb
mov
pusha
jecxz
lcall
stos
pop
push
lcall
xchg
mov
mov
into
fisttpl
ret
shlb
jo
lahf
cwtl
fisttpll
add
not
ds
push
xor
pop
dec
jecxz
movsl
inc
sbb
adc
jl
pop
and
test
in
rcrb
pop
adc
dec
add
js
or
add
fldl
push
jp
les
or
jo
dec
sahf
cmc
aas
jae
sahf
cmp
movsl
les
js
clc
pop
or
xor
sbb
cmp
lods
in
inc
mov
cmpl
jle
in
orb
ret
popa
imul
cwtl
lea
and
out
scas
dec
int
in
movsl
mov
and
imul
dec
prefetch
fisubl
cmp
inc
fs
popa
lock
pusha
out
std
xchg
and
jp
lcall
sbb
cmp
xchg
iret
in
dec
in
fldt
mov
dec
pop
and
sub
lcall
je
mov
adc
dec
jbe
mov
leave
pusha
rcll
dec
or
sbb
movl
jb
lds
jbe
pop
outsb
mov
cmp
inc
inc
pushf
xchg
pop
fistpll
fsubrl
ret
adc
mov
pop
loopne
das
adc
loop
adc
pop
push
rolb
out
add
and
hlt
into
mov
lea
negb
or
out
push
std
movl
ret
add
fnstsw
ja
xchg
aas
les
add
ljmp
dec
das
push
and
sahf
jae
adc
scas
pop
cmp
subb
lcall
fadds
dec
lahf
mov
mov
arpl
pop
mov
lret
daa
loop
jno
or
xlat
lods
pop
and
mov
push
test
stos
adc
or
shrb
pop
minps
ret
or
cli
repnz
jmp
fstpl
cmp
xor
mov
ffreep
cmpsb
push
mov
xchg
jmp
mov
test
jo
xchg
stos
jo
notl
in
notl
mov
stc
rorl
dec
mov
pop
fs
in
mov
cld
incl
enter
or
sub
pop
sub
rcl
mov
cmp
push
push
out
call
mov
and
ret
nop
sbb
sbb
mov
or
shrl
lds
inc
adc
cs
jg
scas
jno
ljmp
mov
ljmp
arpl
push
mull
push
mov
ss
sub
mov
and
hlt
mov
test
ss
mov
ds
insl
daa
mov
adc
sti
mov
mov
mov
jo
mov
pop
xor
jbe
jge
jle
stos
mov
xor
into
sbb
pusha
xchg
repz
push
or
leave
inc
out
xlat
dec
push
shrl
sbb
sub
mov
or
cwtl
in
xor
lahf
sub
fwait
leave
sti
mov
mov
fistps
push
dec
xor
push
gs
or
inc
sti
jecxz
and
dec
push
mov
add
or
mov
or
dec
xchg
push
sbb
into
sbb
std
cmp
cmp
imul
insl
insl
pop
lcall
xchg
and
fs
sbb
mov
jg
test
xchg
mov
fdivrl
insl
sti
test
in
mov
out
dec
mov
lahf
aad
xchg
iret
out
imul
cmpsb
lds
test
inc
sahf
xor
out
sub
aaa
cs
dec
xchg
in
and
sbb
aaa
icebp
pop
xchg
ror
adc
dec
lret
add
dec
sahf
rorl
mov
add
xchg
outsl
sbb
imul
imull
mov
xorb
or
cli
int3
xchg
ret
jge
lock
mov
mov
in
inc
dec
fcmovnu
push
adc
cltd
inc
dec
push
push
cmp
inc
xchg
adc
loop
inc
lods
lahf
popa
fldl
test
shll
push
icebp
mov
rcll
sub
scas
dec
adc
scas
xchg
mov
test
pop
dec
in
add
cmpxchg
incl
lods
mov
fwait
jp
mov
push
sub
movsl
jmp
je
test
pusha
dec
inc
add
push
jmp
ss
mov
les
xchg
mov
leave
mov
movsl
popa
or
or
jl
adc
rcrb
mov
andl
mov
or
xchg
and
fdivr
repnz
push
das
inc
or
ja
push
and
mov
jno
int3
fists
xor
inc
dec
push
dec
stc
cmc
push
aaa
xchg
push
cmp
xchg
lret
ljmp
push
icebp
cmpsb
mov
jne
pop
push
fidivl
jb
test
das
mov
hlt
pop
in
lea
fnsave
push
ret
out
xorl
int
mov
push
mov
lret
adc
outsl
sbb
xor
push
daa
insl
jl
cmpsl
idivl
mov
clc
aam
push
pushf
movsb
movsl
push
cs
loope
and
push
mov
add
mov
cmp
push
jecxz
stos
cmc
fs
rcll
sarl
loope
pop
xchg
loopne
les
movsb
jns
in
xchg
stos
dec
orb
push
sbbb
hlt
jnp
loop
adc
adc
mov
sahf
lock
nop
leave
std
daa
test
iret
mov
mov
dec
fwait
test
lret
call
lcall
and
iret
mov
daa
inc
push
outsl
sub
jne
jmp
insb
jp
outsl
scas
cmpsb
push
cmp
mov
bound
outsl
sbb
jg
stos
sahf
adc
mov
pop
icebp
gs
mov
jecxz
pop
inc
jl
roll
adc
sbb
pop
or
mov
cld
loopne
iret
mov
dec
out
inc
mov
pop
bnd
mov
or
pop
loopne
mov
cmp
mov
xchg
scas
dec
ss
mov
imul
hlt
cmp
std
pop
push
pop
and
mov
dec
pop
ss
repz
jo
jle
or
addb
popa
jne
lea
pop
sub
addr16
inc
push
add
addr16
sbb
or
jmp
inc
push
sub
or
notl
xor
mov
mov
out
not
inc
xor
loop
iret
jmp
out
pop
cmp
cmp
or
cmp
fistl
xor
icebp
jp
das
cmc
sbb
fstpl
xchg
hlt
mov
aaa
bound
lods
pop
cmp
lds
call
hlt
cmp
fstl
stos
push
push
fs
mov
sub
push
xchg
or
cmp
cmpl
or
sahf
adc
mov
std
push
in
inc
into
cli
adc
xchg
xor
fisttpll
lock
dec
sbb
pop
mov
xchg
repnz
lds
aaa
mov
test
jo
pop
adc
push
adc
rolb
cmp
push
out
xchg
out
movsb
add
fs
push
adc
jge
xchg
dec
clc
sub
jp
cwtl
jecxz
loopne
jae
out
add
dec
push
out
iret
sub
arpl
push
adc
stos
shrb
xchg
aaa
fldl
xchg
imul
std
add
mov
or
in
orl
mov
sub
arpl
adc
insb
aas
stc
js
inc
fwait
rclb
rorb
movsb
jmp
mov
xor
and
fiadds
xchg
lcall
dec
enter
popa
or
jo
int
std
sub
outsb
cmp
jb
mov
outsb
stos
inc
jg
add
andb
add
jb,pn
leave
cmp
lret
pop
jg
push
dec
inc
pushf
dec
xchg
and
out
into
push
jl
lods
pop
add
jg
mov
test
dec
sbb
push
mov
scas
das
pop
mov
testl
pusha
add
mov
test
lods
jmp
adc
aad
adc
mov
dec
mov
jnp
pop
cmpsl
call
outsb
ret
mov
sar
xor
xchg
cmp
int
scas
addr16
mov
enter
pop
cmp
push
cli
lods
add
xor
call
or
leave
mov
add
test
xchg
hlt
xchg
in
cmpsb
xchg
pusha
xchg
out
shrb
sti
arpl
push
xor
and
repz
pop
test
jo
popl
into
sbb
pop
xchg
and
sti
mov
ret
lcall
ja
dec
pop
or
shlb
fwait
call
xor
dec
add
sbb
es
sbb
outsb
mov
mov
jge
into
stos
and
psraw
lds
fcmovnb
sbb
ret
mov
std
icebp
sub
or
test
push
sbb
dec
cmp
lds
mov
inc
addb
iret
adc
stc
jge
sarb
iret
lods
mov
leave
jmp
ret
je
ficoms
pop
push
aam
test
outsb
xor
mov
cwtl
lds
arpl
in
cwtl
imul
jg
sub
xchg
inc
push
loop
lret
push
mov
cmp
subl
push
mov
sub
std
mov
xor
sub
scas
icebp
sbb
ret
stos
stos
rep
mov
mov
add
fdivrl
fidivrl
sarb
xchg
add
sub
fsubrs
dec
leave
sar
mov
or
and
xchg
insl
mov
int3
mov
jmp
in
dec
xor
xchg
mov
dec
es
icebp
and
xchg
sub
sub
pusha
inc
inc
insb
insb
pop
daa
sbb
fs
pop
daa
lcall
pop
jns
std
mov
xor
cmp
loope
sbb
xor
xor
xlat
stos
sbbl
in
lods
adc
mov
test
push
insl
scas
push
jne
lcall
mov
adc
lods
pusha
mov
imul
ja
scas
in
ret
or
cli
es
xor
fnstenv
inc
shl
push
xor
xor
jb
lret
add
stc
xchg
cmp
mov
push
lods
lret
scas
imul
in
aad
push
dec
xchg
int
adcl
imul
in
sbb
sbb
inc
fdivrl
add
in
push
inc
xchg
mov
mov
xchg
movsl
inc
call
or
xor
inc
cmp
cmc
mov
push
mov
or
jl
cmp
pop
in
divl
int
cli
cmp
mov
add
xchg
xchg
outsl
sbb
repnz
ja
in
add
nop
dec
loope
inc
xchg
adc
push
rolb
movsb
cmp
mov
lds
adc
fcompl
add
and
pushf
cmc
sub
mov
dec
int3
jge
mov
in
popf
jle
or
lds
stos
pop
mov
std
shrb
push
mov
mov
lret
jne
jmp
xor
pop
outsb
iret
sbb
pop
daa
jne
inc
jl
dec
xchg
cmp
mov
or
hlt
jbe
lods
out
xor
dec
sub
push
pop
dec
cld
movsl
sbb
sbb
outsb
dec
dec
jl
cmp
adc
xor
jge
cmpsb
shl
dec
sub
and
andl
ret
lret
mov
sbb
inc
in
mov
sti
sbb
pop
jne
inc
fst
mov
dec
decb
test
loopne
fs
loop
lret
adc
outsb
bound
xor
ret
aas
mov
test
iret
enter
xorl
mov
cltd
cmc
or
jl
dec
fcmovnb
cmpsb
test
stc
mov
gs
pop
ret
fidivl
push
je
jecxz
mov
sbb
lock
out
mov
and
sub
nop
insl
push
jae
dec
pop
push
nop
cmp
scas
mov
arpl
fildll
xchg
movsl
xchg
hlt
popa
inc
mov
mov
mov
mov
les
call
mov
xchg
pop
stos
add
dec
cli
sbb
test
push
mov
iret
inc
andl
loope
pop
sub
pop
in
in
push
push
repz
stos
fnstsw
shlb
lcall
inc
push
xor
stc
call
xlat
mov
mov
int3
inc
push
in
adcl
sub
push
shlb
out
lret
pop
dec
mov
cmp
add
mov
dec
push
xor
pop
pop
outsb
leave
test
mov
movsb
insb
mov
xchg
data16
loope
pop
fwait
shll
mov
shll
pop
loope
cmpsb
popf
jne
pop
lret
stos
mov
xlat
movsl
pop
pop
das
push
lds
pusha
enter
mov
decb
sub
cmp
or
mov
adc
outsb
enter
cmp
jp
int3
lahf
jge
rcr
mov
mov
mov
int
ja
jmp
mov
cwtl
cmc
nop
out
enter
outsl
inc
push
add
push
sbb
pop
ljmp
dec
fs
iret
nop
sub
add
div
and
out
test
add
sub
sti
mov
dec
data16
jg
adc
xchg
jl
sbb
and
bound
add
data16
and
cltd
test
rolb
jo
test
and
mov
ja
dec
push
and
test
incl
aaa
add
xchg
inc
jle
shrb
inc
mov
jp
ljmp
icebp
fyl2xp1
sbb
sub
cmp
ja
sbb
sbb
lea
dec
dec
loop
popw
bound
into
jle
cmpsl
push
bound
in
mov
gs
push
stos
pop
popa
push
mov
addr16
mov
out
cmp
sub
or
imul
and
out
popf
and
jmp
cs
xchg
loopne
mov
jb
insl
add
adc
scas
popa
cli
pop
mov
loope
pop
lods
xchg
cmpsb
sub
loopne
shlb
and
int3
out
pop
inc
and
cmp
dec
cmp
lods
mov
inc
stc
ss
and
push
xchg
sti
sbb
xchg
ja
adc
fisubl
insb
negb
adc
popa
sub
ljmp
adc
les
mov
sub
add
jo
ds
aaa
loopne
ss
cmpsl
or
ljmp
inc
aas
lahf
into
sub
push
rcr
or
add
xlat
mov
and
pop
mov
and
cmp
push
dec
cmpsl
arpl
push
clc
xor
jl
sbb
add
enter
push
jo
adc
adc
add
mov
sub
xorb
xchg
call
data16
bound
pushf
call
aaa
cmpsl
sarl
or
dec
push
xor
lret
negb
sbbb
scas
or
sub
loop
xchg
inc
adcl
mov
lret
ret
sub
in
mov
outsb
mov
pop
lock
cmp
and
mov
fidivrs
mov
xchg
cmpl
pop
loopne
inc
adc
cltd
ficompl
sub
or
dec
and
orl
mov
jb
and
movsl
repz
in
dec
fwait
pop
dec
adc
dec
and
insb
js
lods
pop
fwait
out
pop
fyl2x
push
icebp
mov
test
imul
sub
in
jnp
pop
add
test
adc
ja
rcrl
dec
mov
lret
and
inc
or
in
push
inc
mov
and
jecxz
jg
jno
mov
add
dec
push
imul
xchg
sub
dec
lods
cmp
mov
mov
pop
jge
adc
mov
js
jne
cmp
jge
mov
push
jns
into
mov
xchg
cmpsl
cmpsb
ds
in
sub
filds
xor
inc
add
int3
iret
inc
mov
lret
sbb
push
jns
call
pop
cmp
dec
nop
imul
push
lret
mov
loope
cmp
sarl
dec
lret
call
sti
mov
int3
js
jne
cs
mov
cmpsl
pop
xchg
pop
je
cmp
decb
sti
popf
cmp
hlt
dec
sbb
insl
jp
sbb
fdivr
sti
sti
lods
mov
fstpt
ret
neg
xlat
mov
pop
pop
inc
in
adc
ss
pusha
pop
sahf
in
push
hlt
lods
ds
movsl
pop
repz
cmp
xor
xor
leave
mov
fcoml
inc
inc
lgs
ffreep
push
or
pushf
push
pop
pop
fbld
inc
inc
mov
lods
imul
pop
pop
mov
xorb
dec
aad
jae
pop
lock
cld
cltd
jle
add
lods
fisubrl
mov
add
pop
inc
aam
dec
daa
mov
repnz
cwtl
lret
sub
push
cmp
test
je
loop
pop
ja
imul
jle
sbb
lret
push
out
mov
sbb
stos
xchg
cmp
fstp
fwait
rclb
out
test
mov
sbb
add
sub
div
loopne
sbb
pop
or
pop
lock
ficomps
pop
popf
push
xchg
cmc
and
jns
sub
push
dec
mov
std
iret
xor
fwait
mov
adc
leave
jnp
rorb
leave
sub
mov
decb
mov
stc
das
jne
cmpsl
div
jg
push
fdivp
fnstsw
or
jae
sti
dec
mov
mov
addr16
imul
lcall
inc
and
out
cmp
repnz
icebp
pop
lods
fidivs
daa
mov
movsl
scas
jb
add
mov
ror
push
inc
pop
cwtl
xlat
decb
js
pop
adc
lcall
pushf
mov
xchg
lods
mov
scas
imul
cmp
xchg
sub
pop
mov
insb
insb
push
scas
lock
out
mov
mov
rcrb
lahf
lret
inc
fcoml
int3
mov
movsl
xor
and
add
xor
xchg
mov
jg
sub
and
xchg
pop
push
add
push
in
es
popf
cmc
loopne
or
fistps
ret
loop
bound
insl
xchg
popa
jmp
xor
sub
loopne
mov
daa
lea
inc
lock
jno
dec
mov
cmp
pop
push
jnp
or
leave
sbbl
outsb
mov
add
rorl
data16
negl
lea
sbb
push
mov
and
js
ljmp
cmp
call
lret
adc
push
pop
mov
adc
xchg
lods
push
imul
addr16
xchg
mov
cmp
repz
movsl
jns
scas
mov
cmp
mov
cld
and
dec
rclb
mov
push
mov
sbb
stc
mov
mov
pop
sbb
xchg
pop
mov
pop
mov
or
out
mov
daa
das
pop
stos
push
mov
sub
sub
inc
cmc
xor
ffreep
leave
cmpsl
jae
orb
fdivp
mov
jbe
es
or
dec
add
adc
adc
dec
push
sti
loope
xor
shll
ja
ss
adc
inc
xor
rcrb
out
mov
push
sub
shll
jle
divl
push
cltd
mov
sbb
mov
pop
lea
daa
rcrb
cmp
jecxz
test
ja
aam
and
js
jle
mov
sub
stos
mov
mov
push
mov
jg
arpl
lods
ret
mov
pop
fs
roll
sarb
cmp
lods
dec
push
andb
jns
hlt
test
xchg
fisubrs
or
or
mov
jmp
cs
cltd
pop
xor
jl
dec
and
push
rcl
rolb
enter
mov
add
adc
das
pop
lock
pop
lahf
mull
arpl
adc
popa
pop
dec
fwait
sub
adc
sahf
pushf
mov
cmp
xor
push
adc
inc
imul
add
sbb
pop
mov
and
xchg
lcall
pusha
daa
lds
repz
imull
cs
adc
sub
mov
lods
in
sahf
mov
popf
pop
sub
lods
inc
dec
rolb
jb,pn
out
pushf
mov
test
mov
dec
fnstsw
push
aas
out
cmpsb
int3
daa
dec
and
jecxz
pop
lret
jg
jae
xor
jb
or
pop
ret
loopne
test
xor
push
fstpt
xor
jbe
and
mov
enter
in
scas
in
mov
mov
repnz
add
xchg
outsb
push
mov
push
aam
dec
mulb
mov
out
xor
adc
insl
sub
inc
sub
jno
int3
inc
ja
xor
shrl
es
imul
icebp
scas
shrb
loope
in
cmp
add
fsubrl
inc
dec
cmp
mov
xchg
or
xchg
dec
jmp
add
lods
fucom
hlt
insb
fsubrs
dec
adc
mov
push
in
std
add
iret
push
mov
into
insb
pop
mov
pop
movsl
int3
movsl
inc
and
enter
movq
ja
xchg
mov
stos
lahf
mov
mov
bound
ret
sti
xor
fidivl
mov
in
loopne
scas
adc
cs
xchg
call
ja
test
push
mov
loopne
jmp
dec
push
inc
leave
xchg
jmp
int
scas
adc
std
scas
in
sbb
push
femms
add
outsl
pop
add
testl
cmp
rcrl
ss
lahf
dec
or
and
lret
cmpsb
insb
lds
ret
lods
test
aas
xchg
mov
xchg
add
insb
jae
out
loopne
leave
rcrb
ffree
mov
popf
jl
je
daa
push
xchg
fsubs
fs
repz
mov
add
pop
pop
add
jmp
pop
loop
scas
adc
pop
je
ret
cwtl
mov
sbb
cs
mov
push
loop
pop
or
ret
imul
in
sub
cli
mov
and
sub
cmp
fdivrs
std
lods
inc
sub
dec
adc
jno
stos
loope
sub
aad
sbb
add
xchg
loope
leave
dec
fnstsw
pop
shrl
cmc
test
data16
mov
mov
mov
in
in
inc
pop
pushf
movsb
scas
fistpl
mov
dec
xor
sub
adc
sbb
or
push
fstpl
lret
sbb
push
push
icebp
lea
push
or
dec
fistl
dec
mov
jns
lods
scas
pop
sub
mov
jg
bound
scas
bound
stos
mov
cmpb
dec
ss
inc
scas
xchg
mov
or
addr16
pop
mov
lret
jge
cmpsb
daa
sub
orl
pop
cmc
pop
dec
js
lock
dec
imull
and
pop
pop
mov
cmp
inc
mov
cli
dec
out
jp
push
pop
dec
jnp
inc
in
iret
and
mov
out
mov
cmp
jecxz
jne
scas
sub
dec
jmp
ds
imul
inc
in
lret
gs
dec
sbb
push
cwtl
mov
jnp
iret
repnz
sub
jmp
pop
push
outsl
cmpsb
outsb
jl
jo
mov
add
pop
ret
pop
test
mov
aas
popa
out
inc
adc
fstps
and
push
jmp
pop
int3
mov
stc
sbb
pop
sub
or
shr
mov
dec
loopne
mov
push
out
dec
dec
or
adc
iret
in
mov
mov
repnz
mov
and
cmpsb
pushf
lods
pusha
and
in
test
sub
push
fcomip
jne
jae
fsub
lahf
mov
jp
sbb
lret
xor
stos
arpl
test
fbld
xchg
rol
xor
hlt
dec
or
std
cwtl
in
fsts
incb
js
jge
enter
test
repz
pop
movsl
jp
sub
test
ja
popf
mov
fisubrl
aam
add
sarb
scas
aaa
test
rcll
sbb
dec
mov
inc
push
iret
mov
pushl
jae
inc
sub
push
in
mov
jnp
and
std
imul
sbb
push
jmp
dec
xor
jbe
lret
dec
pop
xor
mov
repnz
mov
jbe
stos
daa
push
test
xchg
or
push
cmp
and
mov
adc
jp
dec
clc
fiaddl
or
mov
or
jmp
mov
hlt
loopne
mov
xchg
xor
orb
mov
or
pop
in
sahf
add
mov
cli
cmpsl
insl
lock
xor
repnz
jnp
popf
pusha
loope
cmp
fucomi
addr16
int3
dec
stos
sub
clc
mov
aam
int
scas
mov
imul
cmp
cmc
sbb
mov
jecxz
inc
jmp
dec
xchg
dec
jns
test
mov
outsl
cmp
pop
bound
lods
xchg
leave
mov
or
addr16
add
sub
lcall
sub
and
add
jnp
cltd
dec
sub
inc
mov
mov
stos
mov
jle
jne
dec
jns
push
or
xchg
jno
icebp
xorl
adc
jg
push
inc
jle
icebp
hlt
dec
in
stos
std
pop
lcall
mov
lahf
hlt
inc
adc
ss
rcrl
and
dec
fdivrl
xchg
dec
sub
mov
mov
xor
int
scas
xchg
jnp
sub
es
outsb
insb
in
mov
xchg
out
out
hlt
cmpsb
in
jge
movsb
das
or
fmuls
and
sub
push
fcomps
sub
add
daa
sbb
rorl
adc
adc
pop
cli
push
lods
wrmsr
or
testl
mov
and
repz
jae
mov
mov
cld
mov
fdivl
popw
stc
mov
std
mov
test
mov
sbb
mov
pop
scas
rcrb
jo
int
dec
out
or
xor
sub
push
in
xlat
es
insb
aaa
scas
inc
loop
leave
mov
test
push
lods
or
cmp
cmpsb
dec
xor
mov
mov
es
jmp
bound
lods
mov
push
stos
jmp
sub
fdiv
add
push
into
lret
mov
addb
movsl
jle
test
icebp
lret
dec
mov
or
mov
in
mov
and
iret
cmp
enter
insl
add
gs
push
cld
xor
add
in
inc
arpl
fcoml
mov
add
cvtps2pd
in
aaa
hlt
inc
test
dec
es
popf
fcmovb
in
cmpsl
scas
xor
std
xor
loope
adc
xor
lahf
push
shlb
adcb
mov
clc
jg
push
pop
enter
dec
jae
pushf
xchg
or
int
sbb
data16
lea
std
shrl
sbb
xchg
sbb
fistpll
addr16
mov
enter
push
or
xor
mov
aam
in
mov
xchg
lods
xor
ss
push
cmp
pop
fildl
cmp
mov
push
repnz
in
push
push
mov
fstps
sbb
popf
mov
rol
mov
mov
fistl
fistl
pop
jp
shll
aaa
addb
jnp
lcall
sbb
jl
imul
and
adc
xor
sub
sub
inc
mov
lahf
fisttpl
mov
push
aas
push
test
mov
imul
out
pop
imul
push
out
rcl
xor
fmull
mov
cltd
hlt
sbb
xorb
or
jne
sahf
cmpsl
mov
daa
dec
mov
popa
xchg
aas
stos
sbb
inc
push
aam
icebp
out
push
popl
or
aad
inc
mov
int
jl
push
xor
das
mov
arpl
fnstsw
cltd
int
jno
xor
inc
fwait
ret
loopne
jge
mov
fistps
cwtl
outsb
mov
stos
int3
sub
inc
pushl
pop
jae
mov
jns
pop
mov
ret
hlt
and
or
jmp
mov
shlb
ret
movsb
xchg
iret
test
and
lea
jno
mov
mov
enter
xchg
or
dec
mov
inc
mov
aas
shrb
add
cld
xor
cwtl
fmull
fstps
idivl
xchg
in
das
and
push
adc
lcall
mov
ret
add
sub
pushf
inc
iret
adc
insl
push
addr16
jns
add
fnstcw
pop
xchg
pusha
in
pusha
xor
mov
pop
nop
cmp
push
and
test
bound
scas
cmp
insl
ss
add
xor
sahf
pushf
push
pop
or
ficompl
add
xchg
cmp
jecxz
cwtl
push
xorl
sarl
aaa
or
bound
enter
push
cmpsb
out
lods
lret
movsb
scas
cmp
add
sbb
cmp
shlb
add
icebp
mov
xorl
repz
das
mov
push
jle
add
sti
jbe
in
das
dec
jno
cli
push
adc
je
scas
aam
sbb
or
xor
ret
mov
push
push
out
xor
sub
repz
dec
sbb
pushf
push
js
dec
mov
add
fistps
mov
les
and
xor
cmp
sub
and
outsl
inc
jecxz
iret
notl
jns
dec
pop
mov
ja
dec
and
aad
cltd
jne
das
iret
cs
xchg
cmpl
mov
push
imul
outsl
adc
push
push
ror
push
sub
and
ret
sbb
dec
sub
hlt
mov
lret
push
add
mov
add
lods
ja
cmc
int
xor
and
push
enter
test
repnz
js
pop
stos
mov
xor
adc
and
fisttpl
jge
push
call
data16
jmp
xor
cmp
push
icebp
push
shrb
in
xchg
stos
xchg
xor
es
cmp
dec
bnd
outsb
insb
aas
into
push
pushf
cmp
int3
lea
cmc
push
mov
sahf
std
sub
sub
arpl
fistl
sbb
enter
xor
fisubs
push
fwait
jo
cmc
push
mov
int3
pop
imul
push
push
xor
xchg
cmpsb
rcll
push
ficompl
dec
pop
cmp
cli
mov
fsubs
into
lods
sbb
push
add
arpl
sbbl
or
xchg
xor
pop
insb
xorb
orb
jae
push
pop
pop
xor
mov
popf
cli
gs
cld
or
cmp
sbb
add
push
int3
stos
jge
lret
sbb
inc
lds
ss
or
lahf
mov
jb
int3
push
fisubl
ss
pop
xchg
ds
pop
fimuls
aam
test
sbb
cmpsl
and
test
lahf
pusha
push
mov
outsl
adc
cmp
cltd
adc
or
ss
pop
or
lret
inc
jecxz
xchg
stos
sbb
xor
cli
xchg
mov
test
lods
icebp
push
adc
stos
cli
cmp
aad
sub
mov
push
xor
mov
lret
mov
ret
adc
sub
dec
mov
lods
sbb
cli
imul
xor
mov
rcrl
je
in
lea
jmp
shrl
negb
popa
and
jle
sub
xchg
stos
and
pop
inc
adc
jp
js
sbb
int
dec
xchg
sub
xor
add
pop
into
add
ficompl
cmp
fnsave
out
stos
and
fs
pop
mov
out
icebp
stos
xor
pop
outsl
pushf
leave
mov
push
loopne
xchg
dec
mov
lea
shr
jmp
mov
cvtpi2ps
test
shlb
jg
jns
rclb
inc
mov
push
lret
outsb
insl
push
scas
scas
xor
dec
in
mov
test
jb
inc
lahf
mov
or
sbb
and
sub
push
hlt
add
cli
in
inc
fadds
mov
mov
in
cmp
movsb
adc
int3
andb
sub
cmp
cmp
adc
mov
jae
cmp
lds
jl
shlb
xor
pop
xchg
or
pop
xchg
pop
js
lcall
jae
idivb
cld
jle
fwait
add
jno
add
pop
dec
jp
cmpsb
icebp
stos
push
ljmp
jb
cmp
cli
popl
out
mov
dec
out
pop
inc
jg
outsl
xchg
and
mov
aas
shrb
and
int3
shll
xchg
mov
outsl
stos
mov
fsts
mov
push
or
mov
icebp
lods
cmpsb
lock
or
mov
cmpsb
mov
push
dec
lds
mov
nop
jno
xor
add
pop
ja
stc
inc
dec
cmpsb
sbb
dec
jecxz
jae
nop
mov
fimull
add
pop
push
push
rcrb
mov
negb
call
out
adc
out
inc
fisubs
fwait
xchg
iret
mov
shrb
xchg
imul
addr16
adc
gs
popa
jo
pop
xchg
mov
leave
sub
inc
insl
push
add
add
pop
xchg
lahf
icebp
and
dec
les
adc
pop
nop
or
sbb
jnp
push
sbb
test
test
mov
int
jp
inc
dec
test
jbe
push
pop
jmp
xchg
das
xchg
adc
fldenv
adc
je
repnz
test
mov
pop
pop
jp
push
push
add
xlat
movsl
cmp
mov
cmp
je
lcall
scas
and
out
jb
inc
es
jp
dec
movl
mov
daa
ljmp
cmpb
or
sbb
int
mov
cmp
xor
movsb
fstpl
push
leave
fnstsw
sar
loopne
clc
adc
sbb
or
jb
stc
xor
or
push
push
pop
mov
cmpsb
jl
mov
daa
mov
mov
cmp
jg
outsb
fisttpl
sahf
jp
inc
xor
ret
icebp
pop
test
or
fld
out
pusha
jae
inc
sbb
cltd
pop
inc
mov
std
std
pop
aam
loopne
sbb
push
lea
clc
and
std
mov
out
call
inc
jp
xchg
or
xor
sbb
sarb
dec
and
mov
pusha
push
insl
adc
out
jo
jmp
pop
mov
add
push
movb
jns
std
xor
push
hlt
shl
movsb
icebp
stos
andl
mov
xchg
mov
addr16
lret
lret
cmp
addl
and
dec
jno
mov
repnz
mov
leave
iret
data16
fsubr
jb
stos
pop
movsl
in
mov
stos
dec
dec
dec
shll
inc
sub
mov
imul
insb
xor
mov
aad
sub
add
sub
xor
jmp
jo
movsl
in
adc
push
sub
repnz
pop
movsl
int
in
pop
mov
push
push
movsb
ret
fs
movsl
in
movsb
inc
je
xor
pop
test
js
pop
test
mov
xchg
pushf
les
push
in
shrl
fdiv
repnz
stos
aaa
test
call
in
push
inc
ret
jae
ret
arpl
inc
fidivrs
aaa
pop
pop
or
lret
ss
add
sub
mov
arpl
rcrl
dec
cmpsb
les
sarl
repnz
lahf
xor
lock
mov
stos
movsl
push
sbb
and
int3
cmp
imul
mov
out
sub
or
and
outsl
es
sbb
dec
xor
stos
xchg
cmp
xchg
out
loopne
pop
push
iret
leave
lods
leave
cmc
dec
fst
dec
mov
fmulp
rolb
jge
out
cs
inc
data16
jmp
inc
lret
push
aam
pop
fstp
and
out
pusha
pop
das
pop
movsl
imul
or
inc
jl
jg
leave
mov
insl
inc
and
mov
mov
and
inc
sub
cmp
xor
mov
sub
mov
orb
jns
movsl
shrl
out
popf
test
push
fidivs
adcb
movsb
test
outsb
xor
cld
jg
mov
aaa
incl
negb
enter
adc
enter
ret
jo
sbbb
pop
cmp
test
scas
sbb
notl
cmp
inc
aad
xorb
sub
jl
repz
out
jp
push
dec
std
push
outsb
push
js
pushf
xor
jge
jecxz
pop
ja
rcll
pop
adc
jle
repnz
pop
nop
push
mov
jo
dec
mov
mov
fwait
movsb
jmp
mov
sar
shll
add
cltd
shl
add
stc
sahf
cs
fdivrs
mov
mov
sub
xchg
pusha
mov
pop
push
inc
gs
and
sub
ret
cmp
jge
lahf
dec
aaa
shll
rcrl
enter
pusha
cld
hlt
test
dec
mov
cmp
pop
inc
orl
sub
and
outsb
xor
jecxz
add
rcrl
es
pop
adc
cmp
imul
adc
mov
pop
popf
push
adc
and
imul
mov
adc
lods
nop
jg
adc
ljmp
or
jbe
ss
jbe
pop
daa
clc
iret
stos
lods
bound
loopne
sbb
mov
sbb
std
or
dec
cmc
mov
adc
nop
pop
sub
fisubl
mov
movsb
xorl
xor
std
sbb
enter
xchg
sbb
pop
fsts
stc
xorl
pop
jb
push
or
push
jmp
js
je
negl
es
sahf
or
push
add
inc
rcl
fucomip
ds
mov
ds
mov
fstp
pop
pop
subl
adc
popf
fldenv
inc
xor
sub
pop
divb
aas
mov
and
mov
cmpsb
adc
fcoml
les
inc
popf
loopne
mov
xchg
ljmp
cmp
out
and
mov
xchg
stos
cmp
cmp
cwtl
lcall
dec
pop
jb
insb
fnstcw
mov
bound
push
aam
lret
loopne
or
loop
sbb
jae
push
mov
mov
leave
push
loop
cs
fcmovne
dec
dec
cmp
mov
lods
pop
adc
dec
cmp
lods
and
sarl
cli
xor
or
cmp
push
sbb
lret
inc
add
mov
or
pop
cmpl
pop
sbb
mov
and
adc
test
inc
aam
mov
stos
and
or
pop
mov
cld
sub
adc
ffree
mov
push
roll
sbb
in
fimuls
and
and
pop
gs
les
pushf
jp
sarl
lock
push
jnp
mov
add
cmp
push
sahf
sbbl
je
call
insl
xor
jmp
cmp
inc
xlat
adcl
jbe
inc
jmp
add
push
cmp
ss
movsl
jmp
fistl
sbb
aam
test
adc
stos
repnz
call
sbb
sbb
lret
lods
dec
stos
ds
sbb
adc
movsl
mov
xorb
popa
fwait
jbe
inc
js
in
cmp
repnz
lret
pop
movsb
iret
jnp
jnp
add
pusha
arpl
sbb
pop
or
jge
aam
xor
and
jbe
dec
lcall
ret
cld
mov
bound
aas
fadds
and
test
jl
cmp
xor
pop
daa
cmp
pop
jo
push
sub
ljmp
fptan
pop
xchg
inc
sub
cs
loop
xchg
movsl
mov
mov
xchg
xchg
pushf
je
or
test
mov
jl
fidivrl
inc
mov
movsb
cmp
sbb
mov
mov
shrb
jg
hlt
cltd
out
sub
test
rcrl
idivl
repnz
adc
push
das
enter
ret
stc
ds
fldl
test
in
push
rcll
or
sbb
sbb
sbb
mov
cld
cmp
mov
mov
add
xchg
into
mov
fnsave
xor
add
insb
lds
cmp
iretw
mov
mov
leave
maxps
push
or
out
cwtl
xor
sbb
mov
test
xchg
adcb
out
shll
mov
jecxz
pop
cmp
std
xchg
cmc
pop
dec
cmp
cltd
andb
mov
mov
dec
mov
xor
sub
mov
jae
sti
push
inc
push
xor
insl
inc
test
xor
lea
mov
rcll
cli
gs
dec
aas
mov
cld
pop
daa
hlt
jmp
pop
jmp
cmp
push
lock
cmp
insb
test
and
call
dec
repnz
test
fidivl
xchg
push
iret
inc
adc
pop
sbb
sub
jb
pop
mov
cmp
xchg
push
mov
or
mov
jne
cmpsb
int
aas
clc
cmp
lock
cmp
rclb
repnz
mov
jl
es
movsl
pop
fcmovnb
orb
and
mov
int3
fadd
cmc
jecxz
loop
popf
mov
mov
inc
cmp
test
roll
ret
out
and
int
mov
ss
call
and
add
inc
sub
stos
inc
bound
xor
aaa
jle
pop
insl
mov
fwait
jo
mov
dec
xor
fimull
out
ljmp
mov
pop
cmp
xorb
ret
stos
sub
repnz
or
xor
sbb
cs
outsb
or
pop
or
scas
cli
pop
sbb
lods
jbe
iret
xchg
frstpm(287
jo,pt
mov
iret
in
jp
ret
push
leave
movsb
scas
pusha
jecxz
aam
mov
or
gs
lea
aaa
jp
xor
mov
push
mov
test
enter
lahf
mov
mov
dec
enter
xchg
stc
stos
xor
fiaddl
adc
mov
in
pop
pop
aad
call
repnz
dec
mov
fidivrl
mov
leave
push
push
add
add
in
dec
jmp
mov
std
xchg
jle
xlat
enter
jne
and
clc
movsl
mov
data16
jb
stos
cmp
movsl
sbb
scas
add
inc
jnp
nop
mov
inc
int
mov
or
jne
ja
jg
outsl
sarb
imul
imul
sbb
test
das
shl
js
or
mov
pushf
test
add
jo
pop
push
cmp
bound
cmpsl
lods
push
js
fstps
dec
cmp
cs
pop
jecxz
jno
adcb
inc
leave
sbb
insl
push
and
push
mov
sbb
jge
xchg
sub
cmp
xchg
flds
fbstp
cmpsb
ljmp
popf
mov
popf
cmp
iret
arpl
lods
adc
sub
outsb
ss
fnstcw
push
fisttpll
ror
inc
imul
pop
test
loop
lea
or
cmc
push
mov
fisttpl
jge
jg
stc
repz
push
lcall
xor
insl
pop
push
aas
lock
jnp
push
jae
mov
dec
sbb
pop
fimuls
data16
test
daa
mov
sub
stos
stos
sub
jl
jnp
cs
adc
add
mov
and
dec
push
cmp
cli
push
movsl
and
xchg
inc
inc
lock
pop
mov
subb
aad
jmp
sbb
out
int
push
jns
jae
push
into
inc
xchg
or
mov
xor
cwtl
or
repz
mov
or
mov
xor
cmp
rcrb
mov
fdivrs
call
subb
xor
out
add
in
in
rorb
hlt
pop
cmpsl
nop
repnz
push
xlat
int3
fdivl
imul
cmp
loope
xor
fldt
cltd
lods
pop
movsl
mov
dec
test
dec
or
cmp
das
int3
sbb
mov
stc
lahf
xchg
sub
and
sbb
gs
pop
mov
mov
sti
jle
scas
or
and
inc
and
sub
cmpsb
test
xchg
cmp
xor
stos
or
inc
push
js
push
sbb
and
outsb
enter
xlat
je
cli
scas
aaa
movsb
imul
push
movsl
xchg
mov
in
xchg
out
inc
or
shrl
mov
je
out
cwtl
inc
sbb
bound
ret
dec
ss
in
dec
lock
lock
dec
jge
test
dec
xor
mov
sub
test
imul
mov
mov
pop
fs
xchg
js
xor
or
sbb
and
push
and
cmp
mov
xor
ljmp
frstor
fbstp
shlb
jp
loope
mov
xor
fadds
sar
insl
rcll
add
mov
cmp
stos
int
aam
mov
sbb
pop
push
jp
pop
or
scas
dec
xor
dec
iret
enter
rcrb
pop
cwtl
pushl
or
cltd
mov
jmp
xor
fyl2x
clc
stos
xor
add
data16
dec
or
push
ret
popf
addb
pop
xchg
xor
scas
or
mov
stc
mov
pushf
cwtl
jnp
mov
xchg
mov
pop
int3
mov
pop
mov
sarl
out
or
aam
pop
mov
adc
int3
ficoms
lea
cmp
dec
leave
shr
movsl
lock
jle
nop
testl
sub
pop
and
xor
mov
mov
lock
bound
or
inc
cli
mov
mov
mov
pusha
pop
sbb
aad
dec
jle
mov
add
cli
cmp
inc
push
mov
xchg
xor
pop
pop
jp
clc
in
push
cmp
jnp
mov
ss
inc
inc
cmp
or
mov
adc
jbe
out
cld
pop
mov
mov
cltd
xor
push
push
insl
push
mov
mov
or
stc
jecxz
gs
push
lcall
mov
xor
mov
add
int3
es
test
add
pop
lcall
lock
cld
pop
xor
sbb
and
outsb
lock
jns
lds
or
or
imul
inc
test
xor
cmc
aad
cmp
jae
loope
xchg
lock
mov
and
cli
sahf
mov
or
push
insb
das
or
cmpsb
add
jbe
jne
inc
push
idiv
jb
pop
cli
xor
sbb
add
frstor
std
test
insb
mov
js
fbstp
in
or
jne
mov
dec
mov
andl
sbb
aad
mov
push
sbb
inc
sub
push
dec
adc
adc
out
shl
inc
fisttps
mov
sbb
sbb
dec
stos
or
inc
dec
xchg
inc
daa
mov
hlt
sbb
sub
pop
cmp
pop
mov
pop
ds
leave
and
insl
pop
testl
xor
mov
andl
mov
jg
cmpsl
mov
cmp
lea
aam
cli
or
sbb
inc
repz
outsb
fimuls
cmp
insl
sub
lods
add
loop
aad
lret
hlt
pop
xor
ficoml
lret
adcb
mov
mov
or
jbe
aam
arpl
xor
mov
popa
fs
pop
inc
test
lret
pop
nop
lea
insb
pop
and
incb
aaa
mov
test
push
shld
xchg
mov
iret
cld
push
mov
cwtl
and
and
pop
hlt
push
and
out
pop
mov
scas
rcll
mov
nop
lods
mov
or
xor
xor
jnp
push
pop
dec
jo
in
int3
dec
shlb
outsb
movsb
lods
scas
pop
mov
popa
es
pop
xchg
pop
xor
mov
sub
xorl
xchg
push
push
jmp
std
or
jg
mov
data16
sub
mov
pop
popa
xchg
movsl
mov
adc
adc
lcall
dec
dec
popf
aas
push
dec
sub
mov
mov
pop
sub
mov
inc
fistps
push
fwait
out
cmpl
xorb
jnp
shll
sti
scas
inc
lret
pushf
lds
pop
dec
jecxz
rorb
in
movsl
sub
pop
xor
xchg
push
addr16
jmp
movsb
in
xor
inc
mov
sub
subl
fwait
cmp
mov
mov
mov
mov
in
cmp
sub
mov
mov
and
mov
mov
int3
negb
adc
inc
loop
mov
dec
es
clc
sub
pop
cmp
shlb
ret
popa
shrb
les
test
push
jnp
push
adc
fidivl
mov
ror
scas
andb
iret
pusha
sti
jo
dec
scas
jmp
pop
mov
mov
inc
push
xchg
ret
jbe
das
test
sub
push
sub
add
mov
imul
pop
pop
xor
jnp
mov
ret
arpl
fldt
adc
stc
sbb
mov
js
mov
cli
pop
add
mov
sbb
jle
and
xchg
out
icebp
iret
and
icebp
addb
das
clc
or
arpl
sbb
push
test
lret
std
call
ret
xor
xchg
jbe
sub
daa
dec
out
cmpsb
cld
loopne
ss
nop
and
xchg
cwtl
fstpl
addr16
dec
jmp
push
mov
and
loop,pn
xchg
fwait
repnz
sbb
scas
inc
sbb
push
jle
cwtl
mov
xrelease
int
push
push
or
bound
xor
lods
js
pop
mov
mov
out
adc
jecxz
xor
xchg
leave
in
mulb
adc
lea
fnstsw
dec
and
rclb
push
or
adc
lret
xor
sbb
divl
and
movsl
int
sbb
dec
btr
adcb
add
lock
enter
sub
xor
mov
xchg
lret
fcoml
jecxz
test
or
mov
sub
lea
push
xchg
xor
push
daa
sbb
xchg
call
xchg
sub
fcmovnb
pop
mov
mov
mov
inc
inc
push
push
pop
rol
rorl
inc
sarl
xor
cmp
sbb
stc
jbe
mov
out
jmp
loopne
leave
push
ja
lock
es
fnstenv
lgs
pop
mov
and
dec
xchg
pop
shll
stos
ds
xchg
movsb
xchg
or
fs
pop
out
lret
mov
add
sub
aam
jmp
and
enter
test
inc
mov
add
clc
jae
push
pusha
cltd
sub
mov
icebp
out
nop
jge
mov
int3
jg
dec
xchg
in
addb
push
jmp
je
and
mov
push
jp
lea
pop
inc
or
into
sbb
in
insl
pushl
scas
and
mov
out
cpuid
sub
bound
sub
std
xor
mov
sbb
jmp
pop
sar
mov
setg
xor
out
mov
or
mov
jo
loop
cltd
or
sarl
mov
inc
in
jb
jmp
stos
jle
jmp
jge
out
lea
mov
jecxz
adc
pop
push
dec
testb
movsb
xchg
mov
jo
xchg
dec
dec
cmc
rcl
sub
xor
xor
pop
or
ds
add
sub
cltd
sub
mov
fdivs
ja
lods
fld
icebp
aas
rcr
sbb
jb
jecxz
hlt
std
pop
cltd
dec
sarl
mov
pop
std
and
imul
sti
out
out
xor
sub
sti
je
adc
inc
dec
int3
aad
jg
add
jns
and
divb
sub
rcll
ja
insl
jnp
popf
jp
aad
jnp
pop
push
xor
jl
and
std
rorl
out
dec
and
popa
xchg
cmp
mov
sbb
cmp
int
pop
and
inc
out
pop
xchg
push
push
sub
sahf
add
popf
data16
sub
sub
jne
xor
xchg
mov
movsl
sub
inc
std
subl
mov
outsl
fnstcw
jne
or
cmp
inc
dec
popa
sub
jle
cmp
test
xchg
insl
lahf
push
test
dec
jmp
lds
mov
scas
cmp
cmp
insb
aaa
cld
jne
mov
and
cli
sahf
cmp
js
sbb
out
mov
jns
fwait
out
into
push
stos
xor
fstps
test
ja
shrl
xchg
icebp
stos
dec
dec
inc
mov
push
dec
push
adc
and
xchg
cmp
mov
leave
cmp
jo
dec
or
push
pusha
push
in
xor
loopne
daa
das
cmp
mov
xor
shl
out
int
cld
subb
sbb
dec
mov
sbb
cmp
dec
mov
pusha
xlat
jno
jae
mov
and
iret
lock
in
mov
in
lret
pmulhw
outsb
insl
pop
sbb
aad
jecxz
dec
cmp
xorl
adc
into
negb
sbb
pop
lret
nop
jns
ss
cmp
mov
jno
rcrb
aad
pusha
xor
aaa
mov
in
dec
pop
in
cmp
dec
scas
sarb
mov
mov
or
inc
cmp
dec
lahf
mov
and
pop
inc
outsl
ficoml
xor
sbb
pop
xchg
ret
enter
mov
in
mov
int3
mov
jl
ret
mov
ja
outsb
mov
mov
inc
push
xor
jl
shll
into
xchg
mov
jae
or
cs
lret
or
xor
loopne
mov
jg
push
in
lret
in
imul
sub
sahf
out
pop
mov
xchg
cmp
or
test
lea
adc
pop
es
shrb
cmp
pop
cmp
shll
test
xchg
stos
mov
or
lds
add
inc
mov
fcmovnb
xor
fstl
mov
xor
ds
in
lods
push
out
pusha
out
xlat
cld
push
imul
aas
js
adc
rcll
not
and
xchg
mov
fimuls
insl
mov
out
xchg
dec
adc
lret
fucomi
cmpb
popf
sbb
fs
repz
leave
aas
or
inc
push
add
shr
mov
or
jge
js
adc
rclb
inc
cmc
dec
adc
andb
fdivrs
daa
movsb
cmpsb
mov
or
mov
cmp
cltd
xorl
add
pop
addr16
insl
hlt
aas
cs
and
push
mov
fldcw
icebp
aam
pop
pop
aas
push
cmpsl
push
dec
arpl
insl
pop
out
push
mov
and
push
jno
inc
int3
je
shr
jno
dec
mov
add
cmpsl
jae
sub
mov
sub
pop
mov
leave
cld
dec
decb
popa
int3
movsl
pop
fdiv
fmull
push
cwtl
mov
in
sbb
xor
mov
jg
adc
jg
adc
or
dec
pop
test
xlat
mov
movaps
nop
pop
sbb
push
push
dec
nop
inc
lahf
lock
adc
idivb
mov
les
push
cmpsl
scas
into
loopne
popa
inc
ret
and
jae
lods
lock
sbb
scas
jge
xchg
mov
out
iret
shr
fisubrs
sti
negl
enter
jno
xor
mov
xor
and
lock
xchg
pop
data16
incl
add
lret
mov
das
pop
cmp
mov
jb
mov
loope
insl
push
ficoml
cmpsl
xchg
addl
dec
adc
ljmp
push
mov
sub
out
stos
xor
stos
xchg
es
dec
or
fs
lods
inc
or
mov
aam
test
adcb
push
cli
insb
push
das
mov
ret
stos
dec
jne
xchg
pop
and
dec
xchg
cmp
mov
push
outsb
jb
xlat
mov
push
fcomip
in
mov
cmp
ja
jnp
adc
sti
mov
clc
shl
testb
shrl
push
cmp
sbb
xchg
iret
repnz
imul
gs
mov
sub
inc
lcall
fs
fs
inc
inc
xor
cmpl
push
lds
fwait
sub
add
mov
pop
ds
pop
mov
sub
cmp
js
sbb
xchg
ljmp
cld
jno
jmp
xchg
mov
sub
push
nop
notb
roll
lods
cmp
sar
out
mov
test
lcall
pop
into
and
sbb
push
jmp
ja
inc
ficomps
mov
mov
mov
xchg
inc
mov
sbb
lcall
adc
fs
xor
add
cmpsl
std
dec
popf
push
out
fistps
dec
cmp
into
inc
pushfw
popa
and
cltd
cld
sti
imul
push
add
arpl
sub
es
and
in
imull
jns
dec
gs
ret
fistps
scas
adc
inc
jmp
xor
dec
or
loop
or
push
add
in
dec
jg
stos
push
lretw
hlt
cld
inc
test
mov
jmp
sbb
mov
sub
and
xchg
pop
imul
nop
jb
adc
gs
mov
xchg
lcall
je
test
daa
lods
inc
ljmp
cmpsb
mov
xor
jnp
cmp
outsl
lock
cs
jl
outsl
ret
dec
xor
xchg
adc
push
js
xchg
adc
dec
lds
ret
jmp
or
push
or
sahf
inc
cli
mov
movsb
xor
add
mov
test
jb
aaa
dec
filds
add
jecxz
cmp
sbb
int
shl
int3
cld
ljmp
mov
roll
or
fcoml
pop
div
addr16
js
add
or
xchg
sarl
insb
imul
loopne
clc
pop
mov
out
scas
jo
mov
fadds
stos
xchg
and
ljmp
leave
scas
ret
loopne
out
xor
mov
aaa
lds
add
adc
xchg
sbbb
pop
mov
cmp
pusha
in
inc
adc
pop
cwtl
inc
ljmp
adc
add
daa
mov
fcomi
mov
cli
sbb
lcall
test
sti
xor
inc
lea
dec
into
pop
outsb
imul
cs
es
jmp
scas
scas
insl
mov
push
ja
mov
call
sub
lea
mov
cli
test
sti
jp
xchg
fsts
fs
pop
in
or
xchg
or
cmpsl
pop
sub
inc
mov
out
sbb
popa
ret
shlb
scas
cmp
mov
or
xor
inc
enter
jl
sub
pusha
pop
push
test
js
xchg
scas
fbstp
mov
jmp
mov
add
push
ljmp
mov
sbb
mov
popa
loopne
orb
aam
sbb
fdivs
mov
jbe
out
jl
xor
iret
adc
shlb
fsts
vmwrite
lock
inc
sbb
outsb
fisttpll
sub
arpl
mov
test
and
jo
in
das
jge
mov
rcrl
sti
mov
ds
dec
sbb
cmp
push
clc
cmp
lahf
add
xchg
daa
adc
cmpsl
mov
dec
ljmp
pushf
lret
add
lds
sbb
mov
test
roll
call
adc
lret
xchg
push
sub
or
jb
cmpsb
adc
sub
and
mov
push
jo
repz
out
inc
test
inc
jecxz
inc
or
push
cmp
fucomi
enter
test
shll
mov
jmp
jnp
or
jns
arpl
cmpsb
int
shl
dec
test
mov
pop
ficompl
mov
or
and
repz
test
lcall
movsb
inc
nop
mov
push
repnz
add
push
je
lcall
or
dec
cmpsl
or
xchg
xchg
pop
and
add
cmp
jns
je
inc
mov
flds
dec
mov
in
int
mov
lret
sbb
pop
outsb
stos
push
out
adc
gs
aam
mov
call
add
push
aas
push
cmp
inc
std
bnd
mov
add
iret
ret
pop
movsb
xchg
js
cs
lds
or
sbb
pop
mov
sbbl
imulb
outsl
pop
mov
loop
cli
out
shl
sbb
imul
jnp
lds
iret
iret
xchg
addr16
inc
add
cmp
mov
mov
push
mov
mov
cmpsb
fldenv
call
pushf
xchg
roll
js
mov
dec
fldenv
cmp
adc
inc
addr16
loop
push
jne
push
pop
int3
aam
test
clc
outsb
lret
hlt
lahf
icebp
jne
aam
cmc
data16
xor
lea
pop
aas
cmp
xlat
ficoml
xor
lds
out
add
iret
cmp
inc
repnz
cwtl
xchg
adc
or
movsb
in
push
xor
pop
xchg
and
inc
push
adc
mov
inc
cmp
in
mov
adc
push
rcll
sub
stos
mov
shr
addr16
pop
xchg
loopne
lock
fnsave
adc
cs
adcl
mov
adc
push
dec
add
cmpsl
jae
int3
nop
mov
mov
push
sarl
jns
mov
imull
cmp
ficomps
hlt
insb
sbb
cmpsl
leave
and
inc
pop
mov
inc
in
gs
call
gs
jp
movsb
test
test
lahf
andb
xor
movsl
xlat
andb
inc
mov
jbe
test
push
or
push
in
in
lret
pop
pop
dec
sub
mov
mov
add
and
cmp
mov
and
popf
jo
inc
adc
shlb
popa
push
inc
cmp
xor
stos
stc
aas
push
mov
stos
add
hlt
jge
sub
in
adc
add
pop
scas
jmp
jno
jl
mov
push
stc
or
mov
loope
and
push
pop
fisubrs
pop
mov
fcomps
xlat
aas
aaa
push
sbbl
shll
scas
cmp
clc
repnz
push
pop
pop
xor
jecxz
pop
adc
out
cmp
mov
push
nop
sarb
das
arpl
push
in
faddp
lods
jecxz
test
pop
mov
fdivp
les
cwtl
cmp
jle
arpl
dec
jbe
inc
mov
pop
add
ret
fadd
cmpl
jae
xorl
cld
imul
xchg
test
cmp
mov
cmp
movsb
and
sbb
pusha
adc
mov
jecxz
test
mov
mov
xchg
fldt
insl
ret
mov
pop
ss
xor
push
in
inc
fldenv
jno
ljmp
mov
mov
push
bound
dec
xor
leave
test
bound
scas
daa
push
jle
or
and
cwtl
mov
and
inc
inc
add
sub
fadds
pop
jle
add
call
movsb
fcoms
out
jno
cmp
add
xor
xor
jnp
jmp
mov
xchg
jbe
xor
jmp
test
push
adc
xor
inc
ljmp
mov
mov
stc
add
lods
jnp
and
into
mov
imul
std
mov
es
mov
sbb
fs
add
xor
jae
setno
pop
mov
fs
push
sbb
cmovo
xorl
popf
jns
cwtl
pop
or
scas
outsl
dec
imul
add
arpl
in
loopne
dec
iret
jb
add
dec
test
jle
sti
push
push
pushf
in
xor
cmpsl
xchg
and
mov
add
in
ds
repz
push
mov
push
adc
adc
lods
dec
repz
mov
arpl
xor
inc
ret
jg
fisubl
sbb
test
mov
sbb
pop
stc
outsb
imul
sbb
cwtl
and
mov
popf
jb
mov
xor
inc
xlat
mov
scas
repz
jl
mov
cltd
dec
int3
imul
inc
pop
jmp
jge
jge
out
sub
icebp
fucom
sbb
cmp
insl
rcrl
pop
adc
pop
divb
push
dec
std
and
ret
xchg
pop
add
das
out
and
and
lret
push
pop
mov
cwtl
divl
ja
ss
and
jmp
inc
int3
stos
lret
ret
lret
xchg
fwait
ret
test
pop
movl
je
pop
ds
mov
pop
out
lahf
xchg
outsb
fcomi
push
pushf
pop
pop
shlb
dec
push
insl
lahf
rcll
dec
cmpsl
xchg
jge
in
sub
cli
dec
xchg
cmp
aam
jmp
pushf
ret
lods
in
sub
pop
push
push
adcb
shrb
cli
xchg
sarl
mov
loop
pushf
adc
mov
lret
jecxz
aaa
out
in
jle
cli
jae
lret
fcoml
mov
push
ds
push
adc
adc
std
jae
cmp
stos
xchg
sbb
push
sub
sbb
or
jmp
add
sbb
pop
inc
mov
xchg
lret
jae
into
mov
jge
stos
into
jp
push
jecxz
ftst
iret
mov
cli
and
jno
mov
lods
stc
test
les
shll
in
cmp
sbb
jg
inc
inc
inc
out
push
adc
push
xchg
loope
stc
fsubrl
gs
stc
dec
fldcw
mov
pop
cmc
xlat
repnz
push
xlat
jae
mov
jle
ret
sub
mov
sub
into
sub
hlt
pop
scas
icebp
jg
xor
jg
add
jmp
xchg
sub
jmp
pop
xchg
sbb
testl
jp
jecxz
adcl
adc
xchg
fstpl
div
push
push
push
into
inc
out
push
and
shlb
xchg
ja
pop
dec
inc
adc
ret
rorl
sti
cltd
out
inc
stos
push
xchg
iret
mov
dec
cmp
sbb
jp
aam
jno
jp
repnz
jb
mov
into
fisttpll
lock
in
in
pop
lock
sub
inc
cmp
pop
enter
dec
nop
lds
sub
rcl
cmpsb
scas
push
movsl
cltd
adc
cmp
push
sahf
mov
push
mov
test
cmp
mov
in
xor
and
jg
arpl
stos
aas
push
es
imul
adc
push
cmp
imul
add
into
shlb
test
mov
adcb
pop
mov
xchg
lods
inc
inc
xchg
arpl
adc
pushf
mov
jle
mov
in
sahf
out
movsl
aaa
cmp
xchg
add
test
int
cmpsb
mov
int
pop
push
insb
add
dec
mov
je
cmp
mov
roll
pushf
aam
stos
ljmp
sub
jecxz
testb
insl
cmp
and
test
loope
jns
out
mov
fdivr
add
pop
or
mov
out
les
mov
and
repnz
insl
subb
aam
cmp
xchg
cmc
icebp
leave
xor
mov
int3
ficoml
pop
adc
bound
repz
popa
sti
push
jge
scas
sub
stos
mov
inc
fcomp
mov
decb
push
xchg
jmp
fs
scas
mov
mov
test
addl
sub
push
and
pop
loop
into
fwait
sbb
push
sti
inc
push
push
and
aas
pop
and
rorb
jo
sbb
rcrl
jge
adc
loope
add
cld
xchg
outsb
cmp
fwait
pop
mov
je
xor
mov
lahf
into
mov
hlt
hlt
cli
sub
xlat
dec
into
ss
mov
ror
mov
xchg
ffree
add
rorl
lret
popa
push
adc
pop
mov
aaa
clc
mov
jns
xor
xor
mov
mov
sti
add
cmp
lahf
js
xchg
leave
push
push
add
cli
insl
out
outsb
sbb
mov
outsl
add
je
subl
cltd
ficoms
mov
mov
cwtl
jae
andb
cmp
xor
push
hlt
mov
out
std
push
pop
push
mov
dec
out
lret
xchg
aas
inc
mov
pop
pop
xor
int3
and
and
add
vpmacsdd
fildl
dec
inc
jno
sbb
mov
in
aaa
add
dec
data16
and
cmpsl
xor
push
js
sbbb
sbb
cld
cld
gs
ljmp
jno
cmp
inc
fcompl
mov
ljmp
cmp
pop
mov
add
in
lret
cmpxchg
out
mov
lahf
cmp
push
popa
mov
add
arpl
cli
lahf
inc
cmp
pop
mov
jae
dec
add
mov
dec
in
sub
das
pop
sub
mov
cmpsb
fiaddl
ja
mov
mov
mov
cmp
enter
cld
and
sahf
repnz
jae
mov
adc
pop
and
les
pop
adc
xor
dec
cmpsl
aam
fs
out
ret
aas
stc
negl
pop
sbb
loopne
xchg
add
lods
inc
inc
popa
dec
jne
cmp
bound
lcall
mov
in
xor
mov
cli
inc
or
loop
aaa
leave
bound
fwait
add
pop
pushf
ret
subl
push
xchg
call
jae
in
into
test
xor
cmpb
fildll
pmaxub
int3
sbb
out
pushf
outsl
xchg
int3
inc
add
cmp
or
outsb
xchg
ss
ficoml
or
jnp
lcall
clc
inc
dec
cmpsl
add
cmp
ljmp
shrd
push
cmp
nop
mov
iret
arpl
jbe
mov
jp
jle
icebp
or
clc
outsl
addr16
adc
lods
push
mov
mov
add
leave
jle
sbb
xlat
bound
stos
movsb
pop
dec
cmp
fists
mov
sub
jne
sbb
jae
les
push
mov
fidivrs
aam
out
or
jmp
push
adc
inc
mov
cmp
xchg
or
mov
adc
movsb
mov
or
adc
mov
jmp
aaa
lods
ret
fnstcw
stos
arpl
jne
pop
jp
popa
cmp
enter
push
loope
not
pushl
test
xchg
lret
scas
scas
arpl
inc
pop
and
mov
pop
mov
dec
imul
xchg
cs
sahf
mov
loop
outsb
mov
jecxz
xor
bound
fcmovnb
xchg
ljmp
cwtl
xchg
in
add
add
clc
mov
mov
mov
inc
sub
push
in
enter
push
popf
push
push
daa
data16
lea
and
jg
jge
outsl
mov
in
adc
cmp
test
mov
js
fldenv
jb
cmp
mov
or
pop
fsubrs
aam
shr
out
mov
es
push
push
xor
insb
mov
xchg
add
mov
and
ss
lret
inc
dec
sarb
mov
mul
js
out
push
aas
setb
test
cs
lods
dec
xor
xchg
add
loop
lret
pop
cwtl
sbb
mov
scas
sbb
mov
fwait
sub
push
xchg
test
daa
ret
sbb
jge
and
ficompl
mov
jbe
sub
cmpb
fists
mov
hlt
lea
shrb
arpl
push
inc
pop
sbb
jecxz
sti
jno
jle
sbb
std
lods
dec
xchg
inc
cmpsl
fs
jae
movsl
xor
dec
cmc
pusha
lods
aas
fcompl
or
inc
jle
sub
jecxz
mov
jb
lods
jp
aam
sub
fstpt
and
and
xlat
scas
xchg
add
push
lods
adc
inc
leave
clc
sbb
pop
lret
enter
rorb
mov
cmp
loope
xor
imul
std
inc
push
mov
push
mov
sub
cmpsb
call
mov
mov
dec
leave
xchg
jo
lods
mov
loop
lcall
cmpsw
xorb
icebp
rcrb
mov
insl
lret
or
rolb
xchg
cmp
and
jne
lahf
bound
aas
xchg
test
je
test
mov
out
push
xor
and
cltd
and
sub
outsl
jno
mov
and
and
pusha
std
mov
push
test
add
fsts
pushf
pop
push
inc
pop
test
push
test
inc
pop
jp
push
push
cmp
in
fmull
pop
in
shl
mov
xor
adc
mov
cmpsl
shlb
cmp
dec
cmp
cmp
cli
stc
std
cwtl
fsubp
aaa
mov
jle
mov
sbb
fninit
int3
shl
scas
pmulhw
daa
cld
leave
pop
push
inc
outsl
arpl
fiadds
sub
push
into
push
ja
cld
ja
es
fildll
push
std
psubq
or
jp
hlt
rorb
jg
xor
ds
xchg
imul
pop
cmp
sti
ret
shrb
repz
test
out
xchg
mov
shlb
pop
xor
sti
pop
out
ds
mov
nop
jb
je
push
shll
repz
and
nop
cmpsl
pop
out
popf
lahf
mov
push
pop
fiadds
clc
mov
push
cmp
nop
jecxz
out
xor
insl
and
cmp
mov
lcall
mov
pop
pop
sbb
pop
xchg
add
cmp
xor
jno
dec
fwait
je
movsl
fwait
push
and
jp
aaa
adc
fstpt
aad
xchg
pop
fbstp
dec
mov
and
mov
leave
and
jo
inc
pop
imul
shr
fsubrs
inc
pop
mov
mov
dec
sahf
jp
jne
add
mov
xlat
stos
in
scas
dec
test
mov
sub
sbb
lret
dec
imul
gs
in
subb
aad
cmp
in
fdivrs
scas
testb
inc
mov
mov
call
shlb
sbb
mov
imul
fisubrs
inc
adc
or
cld
pusha
fildll
sub
mov
push
xchg
or
int3
in
ds
scas
push
or
jle
pminub
or
sub
sub
sahf
ljmp
movsb
and
out
movsl
pop
nop
adc
lods
std
shlb
dec
inc
push
les
xor
mov
out
pusha
test
xchg
add
sahf
or
sub
jmp
xchg
sbb
cmp
test
imul
mov
xchg
add
ss
or
clc
jg
mov
cld
cmp
addr16
int
jp
aad
js
sbb
and
inc
mov
sub
push
inc
mov
idiv
cmp
pop
aam
jp
push
or
lcall
ljmp
jecxz
jmp
shll
xor
inc
xchg
sbb
mov
mov
mov
jle
mov
mov
add
jmp
fcomps
lock
adc
pop
xchg
lods
shl
xor
mov
sarl
jle
jo
enter
lds
fs
ss
ljmp
out
sub
out
inc
loope
repz
sbb
orl
sarb
push
jae
clc
daa
sbb
aam
jb
dec
repz
cwtl
or
test
cmp
fnsave
fbstp
icebp
add
mov
jle
scas
mov
movsb
rol
pop
sub
jl
fisubs
sbb
sub
add
pop
xor
iret
lcall
push
push
xor
cmp
rolb
mov
das
test
push
scas
call
out
mov
and
mov
fdivr
clc
xor
mov
push
or
lock
push
xlat
rcr
orl
push
push
add
cli
into
lods
aad
xchg
push
dec
xchg
daa
push
js
mov
sahf
add
jno
cmp
lret
aam
cmpsl
or
xor
inc
xor
loope
sbb
mov
sub
icebp
pop
push
cmc
add
cmp
nop
cmp
test
and
cld
mov
leave
add
mov
jg
test
mov
push
iret
push
gs
fcompl
jno
inc
call
inc
inc
out
adcb
pop
add
sbb
push
inc
jno
mov
cmp
push
insb
sbbl
dec
das
iret
ljmp
movzwl
pop
push
add
inc
push
push
push
fdivrl
sarb
pop
aaa
data16
adc
rorl
jns
data16
fnstsw
xor
daa
add
sub
cld
lahf
pusha
xchg
roll
ljmp
sbb
push
dec
jg
push
rorb
add
dec
mov
data16
jnp
fisttps
add
pop
les
notl
adc
pop
rcl
imul
jg
int3
jecxz
popf
cmp
jne
sbb
aaa
shl
inc
call
pop
incb
mov
sti
sbb
pushf
jno
mov
dec
neg
ja
and
push
dec
cmc
xor
enter
adc
loope
fdivs
insb
aas
in
pop
loope
mov
adc
adc
notb
dec
dec
sti
ficoms
js
stc
xchg
imul
das
or
and
push
jp
push
cli
pop
sbb
fidivrl
sti
sti
pop
das
nop
testl
mov
js
jb
fistps
fiadds
push
add
jg
mov
mov
and
popa
mov
ljmp
inc
cs
sbb
dec
add
es
int
xchg
xor
daa
sbb
int
std
inc
movsb
clc
push
add
std
ljmp
mov
adc
add
data16
sbb
stos
mov
cld
mov
dec
mov
xchg
lahf
push
pop
adc
or
or
pop
scas
loope
jo
dec
mov
icebp
mov
stos
or
inc
xchg
iret
into
sub
xchg
mov
xchg
dec
push
adc
rolb
mov
cmpsl
popf
xor
inc
inc
pop
outsl
add
sbb
into
and
lcall
sti
nop
add
and
mov
cmp
xchg
ret
xorb
pusha
in
or
jmp
out
js
xor
jo
xchg
stos
dec
xchg
push
mov
in
fisttpll
push
inc
pop
mov
mov
dec
sbb
inc
jp
cs
pop
xchg
lods
cld
popa
pop
dec
mov
and
dec
pop
js
ret
outsl
lahf
mov
cmp
lret
ret
in
add
dec
add
pop
add
and
cmp
sbbl
gs
add
mov
out
jg
lret
lock
xor
and
ss
loop
sbb
lret
xor
jne
inc
add
add
xchg
in
xchg
mov
int
or
xchg
test
and
andb
stc
mov
cmp
out
mov
cmp
popa
mov
adc
data16
mov
sbbl
pop
dec
into
shlb
pop
fldenv
add
loopne
cmp
xchg
inc
lcall
push
movsl
fdivrs
and
mov
clc
inc
popa
xchg
jmp
jb
sbb
add
loopne
push
cmp
inc
cmpsl
add
push
test
mov
and
popf
inc
outsb
jnp
decb
sub
mov
leave
mov
fildl
push
xor
popf
pop
cmp
pop
jmp
cmp
cmc
bound
add
cltd
xor
inc
inc
jnp
ss
dec
bnd
mov
mov
xchg
nop
insb
push
mov
divl
xchg
outsb
mov
in
cmc
dec
push
pop
sub
dec
pusha
repnz
imul
inc
or
dec
cmp
shlb
lret
mov
outsl
scas
mov
jp
or
hlt
or
mov
lea
xchg
aas
enter
inc
add
sub
dec
loop
cld
push
sub
int
addl
jecxz
loop
out
out
push
addr16
pop
leave
mov
imul
jne
insl
adc
das
add
shll
jle
and
inc
and
push
test
xchg
icebp
jb
jns
xor
cmp
pop
mov
sbb
rcl
adc
push
in
and
iret
pop
rcll
movsl
leave
cmpl
fbld
dec
sub
jge
push
stos
std
test
mull
cmc
ret
gs
push
sub
pop
sub
or
int3
pushl
jbe
dec
loop
sub
inc
add
mov
testb
xchg
aas
roll
lods
lods
jmp
xchg
aam
sbb
int
int3
clc
xlat
add
imul
scas
mov
loope
in
addr16
loopne
xor
add
andl
mov
in
loopne
outsl
adc
ds
mov
inc
push
pop
mov
push
or
popa
outsl
mov
div
subb
mov
cmp
inc
and
push
or
cmp
ljmp
out
lods
or
loopne
jg
and
xchg
cmp
arpl
mov
xchg
dec
xchg
adc
push
jmp
mov
ret
jb
mov
sub
scas
mov
in
aas
popa
popf
test
push
or
out
sub
xchg
movsb
mov
add
mov
mov
pop
add
and
xorb
or
hlt
mov
cmp
popa
dec
xor
mov
aaa
shrl
add
cmp
fisttpll
push
insb
xor
dec
outsb
jo
mov
push
mov
push
mov
xchg
sub
aam
sti
and
insb
or
and
movsl
dec
xor
or
leave
jne
xor
popa
dec
dec
cmp
push
sbb
fldt
or
xchg
rorb
and
mov
add
mov
loop
lret
loope
ret
hlt
bound
pusha
pop
sub
hlt
mov
lea
lret
jbe
sub
or
insb
idivl
jbe
inc
cltd
or
jne
and
cltd
into
sti
mov
xchg
and
out
xchg
xchg
cmp
frstor
and
bound
aam
mov
in
jle
cli
dec
push
jl
pop
je
arpl
pop
cltd
fsubs
push
cmc
dec
xlat
rol
add
mov
test
lret
idivb
data16
push
or
mov
ja
mov
mov
movsb
fnsave
mov
sbb
imul
adc
push
push
mov
push
or
hlt
mov
fdivs
xchg
es
je
cs
bnd
and
test
sub
pop
mov
push
or
sti
mov
cmpsb
push
loop
adc
jmp
shlb
sbb
adc
outsb
mov
cwtl
adc
jnp
adc
insb
lret
xchg
pop
xor
sbbb
sbb
sbb
or
fisubrs
cmpsb
ficompl
call
mov
jmp
cltd
addr16
aas
cmp
cmpsl
imul
shll
scas
test
pop
stc
das
ret
adc
pop
jns
ret
and
or
shl
call
in
pop
xor
movsb
pop
mov
aas
or
push
out
xchg
and
mov
xor
imul
mov
cmp
dec
adc
data16
xlat
and
push
pop
sub
jno
imul
clc
xchg
jnp
data16
jns
mov
xor
fsubr
cmp
inc
or
pop
and
push
jne
in
shlb
in
jg
aaa
push
inc
mov
cmp
or
jbe
int3
add
mov
mov
xor
ja
xchg
and
sbb
xor
filds
movsl
push
sub
fdecstp
jne
out
push
dec
xchg
test
out
mov
nop
adc
pop
iret
pop
or
aam
cmc
xlat
xchg
pop
cmp
loop
and
mov
mov
les
pop
cld
notl
adc
ljmp
scas
cmp
mov
mov
daa
push
dec
gs
push
in
sbb
shl
pop
sbb
enter
inc
push
xchg
mov
mov
aam
insb
jg
inc
dec
nop
pop
lds
dec
sub
addb
sbb
dec
shll
nop
inc
cmpsl
fidivrs
insl
je
cmp
stos
lods
aaa
cmp
or
test
loopne
jbe
lea
mov
xchg
pusha
outsl
gs
aam
andb
jg
insb
cmpsb
testl
mov
pop
jno
xchg
cmpsb
jle
push
daa
add
es
lret
jp
fdivs
jp
aas
push
xchg
loopne
adc
mov
push
ljmp
mov
mov
icebp
scas
sarb
or
xor
dec
and
movb
rclb
mov
repnz
outsb
adc
xchg
xchg
addr16
mov
aaa
sarb
sbb
adc
or
imul
jg
imul
jbe
notl
jno
jle
call
jmp
xchg
lahf
cmp
sbb
xchg
pop
push
loopne
sbb
in
adc
mov
es
mov
inc
mov
int3
adc
bound
pop
movsl
push
dec
or
cmp
cmp
pop
pop
or
jbe
xchg
into
imul
fstpt
das
and
mov
test
adc
shlb
cmpsb
dec
cmp
pop
pop
cmpb
and
test
xchg
pop
mov
pop
or
jecxz
jmp
cmp
push
jle
add
cmpsb
dec
arpl
xchg
lret
xchg
lods
les
mov
mov
inc
jb
jo
adc
loopne
scas
into
mov
mov
xchg
leave
jbe
cmp
xor
push
sub
sar
cmc
push
int
ficompl
cwtl
rcll
repnz
mov
inc
lcall
nop
push
sub
push
push
es
xchg
mov
aad
imul
dec
pop
jge
and
sarl
inc
or
aam
pusha
mov
inc
pusha
dec
adc
shl
xor
mov
jno
out
push
jnp
dec
lret
negb
and
lock
xor
or
movsl
js
mov
scas
data16
xchg
inc
movsl
sub
push
xchg
daa
dec
daa
aaa
or
pusha
jns
int
mov
xchg
into
xor
jecxz
std
and
enter
mov
out
lds
es
adc
scas
add
es
jl
lahf
jl
test
cltd
sub
inc
mov
into
repz
rolb
or
in
sub
add
xor
aas
pop
adc
mov
pop
mov
xchg
adc
cld
push
into
jg
adc
jbe
pop
mov
in
push
adc
cmp
loop
ja
in
movb
sub
mov
ljmp
das
inc
sub
into
stos
shl
test
cli
sbb
jl
xchg
daa
sub
js
in
add
data16
loope
and
inc
push
int
cwtl
pop
andl
inc
lret
nop
aas
mov
loope
sti
pop
push
imul
out
mov
inc
jne
call
push
out
jo
and
popa
pop
dec
js
adc
scas
int3
movsb
scas
and
data16
xor
pusha
sbb
cwtl
pop
in
js
ss
lret
pop
or
daa
shrl
test
pop
call
aad
and
mov
sbb
sbb
cmp
stos
mov
xor
jne
or
and
aaa
and
and
push
into
into
aas
xlat
and
aaa
or
jo
andb
insb
sahf
ret
outsl
sbb
cmp
add
mov
cmp
inc
cs
ds
or
sbb
or
mov
sbb
lea
cmpsl
fcoms
xchg
push
push
insb
cmpb
pop
or
ljmp
test
mov
inc
xor
or
outsb
imulb
push
push
imul
mov
inc
sub
jne
and
int
inc
sbb
out
jae
mov
pop
mov
sbb
call
jae
bound
popa
insb
cld
das
or
jecxz
sti
add
fsubs
in
jl
mov
jle
test
call
push
add
mov
inc
mov
pop
in
out
sub
adc
and
adc
mov
lods
movsb
aad
and
fwait
add
lret
mov
mov
mov
shrl
xchg
mov
lret
je
pop
adc
sub
call
lea
sbb
fldt
ja
mov
sbb
xchg
push
adc
push
popa
push
cmp
pop
and
sbb
and
mov
je
ds
jg
mov
mov
sbb
inc
lcall
jmp
sbb
xor
negl
arpl
xlat
xchg
mov
dec
pop
dec
dec
inc
rol
cmpsb
lock
nop
cmc
and
shrl
xchg
xchg
out
stc
decl
mov
sbb
jg
fwait
nop
sub
xchg
imul
xor
push
mov
ds
sub
imul
loopne
or
and
jp
sbb
mov
xrelease
xor
jmp
in
dec
fstp
out
inc
mov
mov
into
enter
add
and
cmp
leave
adc
fcompl
pop
addr16
jmp
icebp
insl
cs
inc
ret
scas
and
mov
neg
push
pushf
leave
and
mov
inc
pop
mov
in
inc
mov
cmp
jl
cmp
ja
fmull
fisubs
xor
mov
jo
sbb
shl
arpl
cmc
lock
rcrb
out
mov
cmp
xchg
xor
in
and
cmp
xchg
adc
fisubrs
jmp
in
movl
xchg
inc
out
scas
push
mov
rorb
in
sub
ret
pop
mov
clc
add
pop
push
cmp
adc
mov
lret
inc
lcall
fisttpll
sub
mov
sub
or
jge
movsb
xchg
pop
das
inc
cltd
test
mov
sbb
stos
popf
aaa
pop
or
test
push
cltd
dec
incl
jmp
push
sub
or
lds
addl
ss
mov
ret
xchg
and
fisubrs
leave
sbb
push
out
fs
jge
and
xlat
out
enter
xor
scas
sbb
add
pushf
pop
rcrb
outsl
pop
inc
add
or
push
push
cmp
push
outsb
or
mov
or
pop
jb
iret
out
push
dec
sbb
dec
mov
sub
pop
cmp
xor
leave
adc
in
test
fidivrl
adc
in
enter
mov
stos
addb
push
pusha
add
out
and
sub
aad
mov
cmpsb
and
nop
movsb
cmpsl
pop
sbb
add
push
pop
inc
hlt
mov
mov
stc
fldl
fildll
ficompl
cltd
jno
mov
sub
rclb
cmp
jno
cli
leave
and
insl
pop
mov
xor
xor
pop
mov
mov
inc
and
les
inc
adcb
sub
push
cmp
insb
fwait
stos
lcall
mov
cmc
loope
jg
mov
add
sarb
divb
jg
xor
xor
jg
xor
pusha
lret
jmp
adc
inc
test
inc
insb
jo
stos
mov
js
mov
xor
jecxz
sahf
fdivs
fnsave
stos
or
jbe
outsl
jmp
inc
cmp
icebp
pop
sbb
stos
pop
sub
pop
pop
dec
cmp
push
pop
lea
bound
cmp
dec
mov
xor
mov
add
insl
cltd
repz
dec
stc
test
cltd
jns
out
popa
popf
leave
cmp
lret
sub
mov
jne
loopne
xchg
daa
lcall
xor
sbb
daa
lock
iret
insl
cs
int
fisttpl
pop
aam
adc
sub
outsl
or
ljmp
sahf
std
fwait
int
and
push
sti
push
xor
daa
test
jno
jl
lods
pop
jns
std
xor
add
push
flds
aad
xor
mov
pop
xchg
mov
add
push
sahf
pop
int
pop
push
scas
test
adc
loope
in
ss
jo
sub
dec
lods
jb
lcall
mov
jns
add
or
mov
stos
lods
mov
and
add
jmp
jecxz
outsl
in
sub
push
mov
bound
lret
xor
push
sbb
dec
sbb
scas
rolb
xchg
test
mov
rclb
lahf
hlt
mov
fstenv
jecxz
in
in
movsl
loop
and
jns
repnz
fnstcw
lret
lods
and
frstor
movl
not
sbb
push
xchg
dec
and
or
push
ss
aaa
sub
jl
mov
mov
jl
sub
divb
les
aas
push
cmpsl
jmp
mov
inc
adc
jns
ret
mov
nop
push
scas
adcl
mov
cli
add
test
fistpl
cmp
pop
add
sbb
inc
adc
inc
jno
test
in
and
mov
popf
add
rolb
sbb
mov
add
dec
mov
int
sbb
and
andb
loope
loop
jmp
stc
sbb
sbb
inc
lods
mov
xchg
and
insl
andb
mov
stc
rolb
cmp
pop
test
jae
cmc
dec
pop
fcmovnb
nop
dec
repz
mov
rorl
add
cmp
xchg
test
inc
push
mov
ret
cmp
cmpsb
aam
cmp
outsb
ret
jne
test
stos
jns
jo
out
sbb
les
jmp
cltd
xor
ss
rcll
lret
out
push
pop
js
and
ret
lods
popa
sbbb
testl
subb
jg
lea
xor
pop
fstpt
xchg
addb
shlb
inc
fcomps
add
stc
sbb
cli
lcall
push
aas
cmp
push
mov
pusha
and
add
cltd
mov
repz
and
aam
shll
inc
xchg
aaa
lods
pop
test
lock
dec
fs
mov
or
inc
ja
or
std
mov
frstor
js
jno
test
sub
cmp
insb
cltd
jno
push
push
pop
inc
sti
jnp
xchg
jns
pop
out
mov
xor
je
adc
cmp
fidivrl
stc
pop
mov
xor
jle
cmp
cmp
rorl
sarl
cwtl
in
or
jne
mov
xchg
and
jbe,pn
imul
inc
cwtl
xor
lods
aam
aas
xchg
lock
lods
ja
jnp
push
ja
or
inc
xchg
testb
ds
xchg
fdiv
mov
outsl
in
hlt
fwait
cli
roll
ja
scas
stos
cmp
jno
es
push
fwait
insl
push
and
mov
lods
cmp
aas
shrl
push
in
test
mov
cmp
jb
or
add
jb
push
cli
loop
mov
jnp
mov
repnz
stc
pop
popf
and
imul
dec
sbb
test
fistpll
lock
pop
in
lret
out
scas
push
jnp
shlb
mov
mov
mov
test
std
lcall
movsb
ss
dec
addl
push
xchg
mov
jecxz
add
fstps
lcall
fisttpll
or
cmp
pop
ret
sahf
mov
shl
pop
xor
or
addr16
dec
fwait
pop
int3
push
inc
int
adc
loopne
sahf
addr16
ds
lret
call
decb
xor
out
push
dec
mov
ja
mov
mov
cmp
push
cmc
add
mov
jg
mov
sub
and
outsb
cmp
imul
xchg
pop
push
xchg
push
je
mov
xchg
xor
insl
xor
je
xchg
into
ss
jmp
bound
mov
sub
cmp
sbb
stos
fbstp
aam
ljmp
sbb
sbb
aam
lahf
pop
mulb
sub
sub
dec
mov
loop
insl
repz
testl
adc
fwait
dec
arpl
cwtl
in
imul
test
cmp
push
add
add
xlat
ds
add
int3
jbe
and
fiaddl
and
fidivrl
ljmp
push
cld
push
xchg
data16
mov
mov
in
cmp
mov
mul
loop
scas
mov
lret
add
sub
fs
sub
in
jb
loop
je
jno
pusha
ret
and
insl
stc
mov
cmc
or
pusha
adc
lods
jne
sbb
and
dec
push
inc
into
lahf
or
push
in
es
fs
int
dec
or
addl
inc
fildl
cmp
lret
test
data16
push
icebp
adc
mov
fisubrl
mov
add
push
pusha
aam
mov
fsts
and
jb
jecxz
pop
push
adcb
sub
test
cltd
rorl
jno
sub
and
insl
fnstsw
push
mov
out
loope
hlt
sub
mov
cmp
xchg
adc
mov
pop
dec
sbb
dec
mov
push
dec
sti
sub
dec
jl
jecxz
ja
jle
or
ret
jo
inc
or
lea
ret
push
and
adc
aad
rep
ret
jge
push
jns
aam
sbb
xchg
fwait
dec
pop
scas
cmp
repz
into
scas
mov
pushl
out
sbb
shl
data16
lods
adc
call
adc
dec
mov
pop
push
push
rclb
gs
dec
leave
sub
mov
xor
test
mov
sub
xor
cmc
mov
push
in
negb
push
cmpsb
cmc
imul
jl
xor
pop
inc
mov
cwtl
push
or
es
in
cmp
scas
jb
xchg
push
test
inc
out
lcall
sbb
mov
mov
idivl
adc
in
leave
outsl
inc
rorl
xor
fnstsw
cmpl
aas
sbb
stos
loopne
addr16
adc
insb
adc
cmp
stos
rorb
pop
stc
in
push
mov
inc
lock
xor
fldenv
push
mov
cmp
out
out
add
adc
addb
cmp
cmp
mov
bnd
xor
in
mov
aad
push
js
push
shl
popf
push
daa
loopne
xlat
cmc
arpl
push
inc
test
imul
inc
je
inc
out
inc
mov
sbb
push
pop
bound
xchg
mov
push
out
into
ss
leave
xchg
cmpb
daa
jg
fdivrs
xor
sub
je
inc
shlb
mov
mov
ss
xor
mov
xchg
mov
add
mov
push
mov
faddl
mov
subb
test
roll
push
jb
mov
inc
cmp
int3
dec
popf
ffree
mov
jae
xchg
iret
cli
lock
jne
push
push
rclb
fsubs
mov
popa
movsb
xchg
pop
mov
loop
or
or
fcmovnb
add
imul
dec
push
loopne
and
mov
pop
addb
stos
or
in
dec
orb
cltd
test
pop
cmp
sti
inc
fxch
in
add
dec
aad
dec
insl
xor
das
xor
push
sub
xchg
ss
in
push
or
push
lcall
aas
lcall
cmpsb
adc
and
dec
dec
lods
pusha
call
mov
xor
sbb
int
xor
inc
aam
mov
xor
daa
push
shrl
stos
imul
jge
ret
inc
cmpsb
std
cltd
xor
xor
jns
mov
sub
outsl
cmc
aas
push
push
sti
das
mov
imul
leave
cmp
popa
push
movsl
xchg
lods
dec
push
adc
lcall
inc
flds
shll
mov
push
jle
lods
jmp
adc
jbe
daa
sub
or
mov
or
inc
mov
out
daa
sub
fisttpll
rcr
or
popa
sbb
mull
imul
mov
mov
bnd
mov
jp
sahf
push
lahf
sbb
call
rolw
pop
mov
jge
xor
rorb
lret
pop
popf
jae
and
pop
mov
call
mov
sbb
mov
jne
fldl
mov
lret
les
push
loopne
dec
lret
mov
cmp
aad
cmp
cmp
inc
mov
push
mov
push
cld
inc
lcall
ja
js
mov
das
sbb
ret
jecxz
rcl
inc
cltd
or
pop
addb
xchg
icebp
add
mov
shlb
dec
in
mov
sub
mov
into
xor
xchg
xor
push
testl
sbb
mov
xor
adc
in
inc
mov
mov
movsb
hlt
ret
cltd
xor
ret
stos
ret
push
orl
add
fists
push
sub
data16
jno
jmp
mov
lea
jecxz
xor
jne
cmp
cmpsb
lret
sahf
adc
jp
and
jnp
cld
out
sub
jge
and
cltd
mov
in
jp
scas
sarb
fwait
fwait
dec
imul
jmp
xor
cmp
inc
iret
pushf
int3
in
cmp
ljmp
mov
sbb
sub
jae
pop
jp
scas
dec
popa
cmp
xchg
jae
arpl
inc
mov
add
sbb
loope
add
ret
sbb
repz
loop
rcrl
fbld
pop
test
sbb
jnp
xlat
pop
sarl
mov
pop
pop
ficomps
fsubrl
fs
mov
push
shlb
add
test
movsl
stos
outsl
fnsave
push
pop
scas
out
push
shlb
xor
jmp
jge
sbb
adc
mov
out
in
testb
sub
stos
xor
sub
pop
pusha
hlt
nop
pop
sti
lahf
xor
push
fildll
aas
stos
mov
movsb
jns
dec
pop
cmovae
xchg
pop
repz
pop
add
pop
loope
jnp
push
popf
mov
hlt
push
adc
add
jmp
sbb
insl
push
ds
and
and
repz
pop
mov
mov
xchg
xor
xchg
lea
cmp
fcomp
cmp
fidivs
stos
mov
cmp
repz
aam
inc
andl
adcb
jo
jle
fisttpl
add
inc
icebp
out
hlt
cwtl
sub
mov
dec
mov
enter
adc
inc
and
loope
inc
cwtl
movsl
push
rorl
test
and
aam
adc
fcomip
fcoms
rcrl
in
in
jno
scas
or
into
mov
dec
dec
dec
divb
push
imul
dec
xor
jne
out
xchg
test
jnp
clc
mov
mov
or
in
int
pop
sahf
mov
in
daa
ja
insl
and
stos
mov
ret
xchg
pushf
js
iret
jg
xchg
xor
stos
inc
add
cmpl
mov
inc
xchg
xchg
mov
add
lcall
jno
gs
mov
jb
adc
push
dec
mov
and
or
and
xor
sub
mov
je
and
inc
mov
scas
insl
mov
imul
sbb
push
xchg
adc
negl
cmp
cmpsl
fsubs
mov
dec
xor
and
imul
xchg
cs
cmpsl
lods
call
orb
std
mov
aam
bound
mov
rorl
mov
xchg
xchg
mov
mov
push
dec
mov
xlat
lahf
inc
movsb
dec
xor
test
pop
addr16
jbe
les
push
movb
mov
lods
ljmp
push
cltd
or
and
jecxz
pusha
cmp
cmpsl
cmpb
lock
jle
sub
adc
enter
jle
push
in
and
inc
data16
fidivl
push
add
cwtl
scas
fdivs
in
aad
lret
fistps
cs
mov
das
mov
repnz
je
and
xor
aas
popf
scas
lcall
popf
mov
std
xor
stos
cmp
stc
das
mov
inc
repz
sbb
test
xorl
or
mov
setg
sub
dec
sub
push
mov
or
bound
mov
cmp
sub
cmpsb
gs
pop
popa
enter
sar
sbb
scas
out
icebp
shlb
sahf
bound
mov
cld
dec
in
and
sbb
push
lahf
mov
lds
call
dec
lret
outsb
pop
push
lret
adc
inc
jge
scas
xor
sub
cmc
mov
mul
adc
xor
sbb
cmp
outsb
hlt
insl
scas
jl
movsb
xlat
inc
pop
jmp
out
popa
add
les
inc
xchg
or
mov
mov
ds
aas
test
jo
mov
rcrl
xchg
mov
lret
cld
jnp
pop
cmp
pop
xor
or
adc
xor
and
lea
cmc
int
jne
inc
fistpll
clc
or
push
test
mov
pop
mov
sub
fwait
and
roll
roll
jl
xchg
arpl
mov
dec
fsubrl
inc
sbb
test
aam
fidivl
push
push
mov
xchg
fisubrl
and
adc
decl
dec
aam
and
cmp
cmc
xchg
push
cmpb
push
pop
loope
fsub
pop
dec
inc
adc
daa
xchg
push
je
les
outsl
xor
lret
jge
inc
jle
mov
add
fnsave
xor
adc
jmp
inc
pop
ds
ss
shrl
std
dec
xor
add
inc
icebp
sahf
daa
mov
jecxz,pn
adc
and
jbe
jbe
jecxz
aaa
lret
mov
out
imul
push
add
popa
outsl
sub
stc
push
mov
stos
addr16
pop
or
das
jb
lods
cmp
sub
sarb
stc
dec
inc
lret
pop
jle
lret
cmp
lods
mov
dec
or
push
sub
fcoml
xchg
test
int3
jbe
imul
push
in
and
js
bound
loopne
std
cmp
dec
mov
in
mov
xor
test
dec
jp
repz
insl
push
xchg
loopne
in
int3
jmp
testl
push
mov
mov
lret
sub
out
add
ucomiss
fwait
sbb
lea
sub
add
add
sbb
test
mov
mov
dec
nop
pop
dec
sti
push
daa
fisubs
add
int3
pusha
lret
fstps
repz
loop
xchg
inc
movsl
cmc
mov
push
pavgb
inc
repnz
xchg
fst
mov
adc
sub
jl
leave
aas
les
mov
scas
cmp
xchg
aad
dec
sub
sub
sbb
sub
daa
ss
jo
ja
int3
lea
pop
mov
loope
les
sub
add
push
pop
add
inc
aaa
test
add
mov
sub
cltd
adc
lock
popf
xor
xchg
xchg
push
test
mov
es
mov
mov
data16
mull
pusha
test
cmp
je
mov
adc
inc
rclb
push
inc
pop
pshufw
pop
dec
add
or
mov
pushf
and
sahf
ss
movsb
out
mov
dec
mov
inc
pop
adc
out
or
cmc
lret
in
in
std
xchg
int
jnp
aad
mov
mov
xchg
sbb
xor
jg
cmp
xchg
dec
test
fidivs
test
pop
adc
add
xchg
rcrl
add
in
push
add
sub
jbe
xchg
adc
into
out
mov
jl
inc
push
jno
inc
cli
inc
pushf
dec
mov
jbe
jg
in
push
je
xchg
xor
push
push
imul
sbb
add
fucomip
fstl
sti
cmp
cli
sub
and
sbb
inc
pop
jno
cmp
data16
rol
stos
inc
arpl
xor
sti
jns
pushf
inc
mov
jge
xrelease
mov
xchg
repnz
fucom
ljmp
dec
sub
push
call
jb,pt
xchg
add
test
sbb
divl
jecxz
xchg
dec
loop
jno
fcmovnu
gs
add
sub
imul
jmp
in
push
das
fisttpll
cmp
add
add
xchg
cmp
ds
and
cmp
pop
jne
add
outsl
pushf
cld
scas
inc
push
imul
outsl
dec
jp
cli
test
clc
gs
adc
xchg
call
call
pop
fsts
je
int
mov
mov
fs
movsb
nop
cmp
inc
stos
mov
mov
or
pop
lods
jnp
insb
sbb
pop
daa
cmp
xchg
add
jl
in
insb
cmp
sbb
test
cltd
dec
sarb
add
mov
mov
loope
jb
mov
rcll
mov
mov
lahf
jb
sbb
rcrb
or
adc
mov
cs
aad
dec
inc
adcb
push
jno
pop
out
xchg
mov
jecxz
push
push
xchg
and
fstps
cmpsl
pop
out
adc
add
pop
fsubl
fsubrs
adc
ja
add
mov
data16
popf
aaa
sbb
jg
mov
inc
jl
push
daa
insl
mov
incl
jo
and
xchg
leave
mov
leave
shll
mov
jmp
nop
xor
adc
pop
loop
or
mov
clc
dec
insl
ret
inc
xor
hlt
addr16
sbb
out
dec
inc
dec
movsl
dec
mov
mov
mul
jp
nop
sub
jmp
mov
jmp
mov
inc
aaa
test
jbe
fwait
and
cmc
fs
add
imul
stos
add
mov
add
push
ret
mov
jl
andb
sub
xchg
jnp
mov
jns
fimull
in
mov
push
ds
cmp
cmp
hlt
dec
stc
lds
pop
sbb
test
cmp
std
xchg
ret
aaa
xor
add
bound
and
add
sti
pop
push
push
xchg
mov
pop
mov
lds
pop
mov
pop
test
cmp
out
fcmovnbe
das
cmp
mov
lret
hlt
fwait
xor
xor
cmpb
push
iret
mov
jge
xchg
scas
or
jp
ja
aaa
or
scas
xor
pop
push
fwait
cmp
xchg
lods
fwait
mov
popf
cwtl
loopne
lods
sub
pop
mov
and
xchg
icebp
inc
or
xchg
mov
pop
fists
repz
mov
mov
mov
mov
inc
mov
and
inc
xchg
mov
mov
dec
jne
popa
pushf
outsl
cmpl
mulb
dec
imull
and
mov
or
aam
and
push
fmuls
mov
addr16
jbe
jne
adc
ljmp
loope
xchg
xchg
ja
repz
data16
ret
adc
dec
imul
decb
mov
xchg
lahf
fdiv
jecxz
mov
pop
cs
cmp
push
out
jmp
pop
fsubs
in
aam
lock
sub
sub
out
jl
movsb
mov
dec
xchg
shrl
fiaddl
imul
cli
out
push
push
inc
dec
pop
sub
movsl
push
dec
lahf
push
sarb
call
sub
lea
push
sub
lods
xor
xchg
sub
sahf
lahf
test
icebp
xchg
add
test
movsl
adc
test
ja
sbb
add
inc
mov
repnz
inc
cmp
insl
cmp
gs
jae
jae
aaa
loop
and
push
lcall
test
mov
cmp
push
sarl
lret
mov
sub
jbe
pop
pushf
iret
and
dec
mov
xor
test
push
and
jle
mov
int
addr16
loop
inc
test
sbb
jl
dec
inc
inc
js
popa
std
adc
push
pop
xchg
sbb
mov
loop
xchg
mov
mov
out
jno
daa
jo
xchg
jbe
and
lret
mov
dec
xorb
cmp
sbb
iret
sahf
cmp
das
fildl
ss
mov
dec
subl
hlt
dec
leave
xchg
stos
negl
inc
mov
add
or
jmp
sbb
and
iret
ja
es
movb
pop
mov
sbb
hlt
test
je
xor
xor
mov
add
sub
jp
xor
sub
gs
outsb
push
mov
jle
push
out
push
ret
mov
rorl
aam
fiaddl
or
nop
mov
loop
int
sbb
xlat
fdivrl
jp
or
gs
cli
popa
rol
push
add
sub
adc
subb
pop
xor
or
push
bound
sub
js
hlt
jo
mov
dec
jae
pop
mov
out
stc
stc
inc
call
add
rol
jne
dec
movsb
push
lcall
mov
fsubp
inc
inc
fwait
scas
adc
sbb
sbb
xor
test
dec
jle
stos
adc
ret
jbe
inc
out
jb
fimull
mov
mov
add
pop
adc
gs
xorb
stos
or
inc
leave
adc
loopne
insb
inc
rorb
aam
fwait
aas
sbb
and
in
sub
mov
push
daa
std
ja
call
dec
jecxz
cmp
push
dec
fidivrs
sbb
cwtl
xor
fisttpl
data16
push
les
hlt
movsl
out
andl
cmp
mov
mov
push
and
aad
pop
sbb
pusha
loope
fstpt
iret
neg
or
cmp
jle
dec
inc
cmpsl
pop
out
jno
int
test
scas
push
lahf
jg
repz
mov
lahf
and
inc
dec
adc
es
dec
add
add
fcmovnb
push
int3
es
int
sbb
fstpt
mov
mov
movsb
call
pushw
jge
cmp
jno
das
sbb
xor
scas
adc
lds
sbb
sarl
das
js
xchg
imul
pushf
dec
jmp
pop
movsb
pop
cmp
dec
lahf
jnp
sbbb
fcmovnbe
adc
lahf
imul
sbb
jno
mov
add
pop
in
sbb
mov
inc
inc
xchg
pop
pop
jecxz
call
cmp
enter
cmp
xchg
enter
push
lds
setns
ficoml
mov
cmp
or
xor
xor
add
pusha
cmp
jnp
mov
lea
into
mov
in
fstpt
push
call
jg
adc
lret
fisubrl
dec
int3
jno
test
daa
gs
subb
sbb
cmpsl
xlat
adc
or
stc
inc
push
data16
inc
test
inc
test
mov
loope
cmp
in
dec
sbb
jecxz
cwtl
mov
fists
cmp
lds
push
cltd
loopne
and
mov
enter
jb
push
rcrb
jge
das
mov
imul
and
bound
sbb
call
lret
lcall
cmp
mov
jmp
incb
push
push
dec
aad
jle
adc
insl
mov
testl
ss
hlt
lret
ss
shrl
cli
lcall
daa
rcrl
scas
aas
lea
setne
cld
push
fnstsw
inc
scas
int3
sub
ret
or
movsb
pop
jns
push
push
xor
jl
fmulp
jne
cltd
cmp
andb
ret
jns
icebp
or
call
inc
mov
xchg
jne
xchg
dec
mov
xor
dec
or
es
cmpl
and
dec
sbb
mov
mov
ror
pop
jae
xchg
inc
push
loopne
push
in
cmp
pusha
scas
push
adcl
push
popa
cmp
js
sub
push
hlt
rcrb
loopne
cmp
into
test
call
mov
fcmovbe
add
cmc
in
adc
mov
dec
int3
jg
cmp
pop
and
pop
dec
sbb
xlat
push
sahf
inc
mov
add
lret
pop
xchg
cmc
and
push
push
jmp
push
out
addr16
popf
or
nop
xorb
inc
adc
in
out
sbb
push
sbb
xor
xor
daa
sahf
jnp
push
add
mov
xor
cmpsb
cmp
scas
repz
loop
pop
testl
stos
sub
sub
test
cmp
push
ficoms
insb
popf
mov
lret
adc
and
cld
rorb
in
hlt
jecxz
xchg
iret
mov
bnd
or
mov
lods
jmp
dec
cmpsb
cmp
add
mov
aad
push
jecxz
shr
jbe
or
sbb
sub
lret
imul
mov
xlat
xchg
gs
enter
cmp
jp
push
xchg
aaa
xchg
cltd
sub
popa
pop
jg
int3
sub
movsl
in
frstor
test
mov
add
loopne
repz
or
rorl
push
mov
cmp
mov
subb
inc
cwtl
fwait
and
pusha
sarl
jl
pop
loop
xlat
gs
fwait
outsl
outsb
je
push
test
jmp
pop
into
fsubrs
cwtl
push
cmc
icebp
rorl
cwtl
push
js
fs
add
fwait
test
shll
insb
int3
jecxz
cmp
negl
jno
pop
xchg
jge
cli
aas
jno
jae
cmp
sti
cs
jl
pusha
les
mov
dec
mov
dec
xor
dec
lea
adc
xor
imulb
movsl
mov
aaa
mulb
fcmove
lret
xor
mov
es
push
out
cs
inc
fnstenv
push
xchg
adc
and
cli
cwtl
mov
xchg
das
out
pop
nop
cmp
jbe
call
and
sub
stos
loop
xor
jl
test
fcomps
nop
xor
out
mov
pop
mov
pop
adc
jne
pop
out
arpl
popf
mov
jne
mov
insb
sub
jge
scas
mov
inc
adc
mov
cmpsb
int3
out
aam
loope
mov
xchg
cltd
cmp
lahf
jo
fwait
mov
leave
xchg
mov
scas
ret
call
in
ljmp
xchg
adc
mov
nop
fnstenv
ds
ja
in
cmp
dec
movsl
jo
pop
sbb
adc
adc
pop
dec
pop
pop
in
sbb
jno
mov
mov
inc
sbb
sbb
fcoml
mov
lcall
push
inc
xchg
sub
das
jg
jb
andl
push
add
test
lds
test
int
imul
into
or
jnp
lods
or
sbb
inc
int3
sbbb
push
je
loopne
es
cltd
call
push
or
imul
shl
test
xchg
dec
cmp
roll
test
mov
xor
aaa
pop
pop
adc
inc
mov
mov
cmc
inc
hlt
arpl
jle
scas
mov
pop
adc
aas
movsl
cmp
sub
lods
xchg
arpl
mov
mov
out
fsubrl
inc
ret
sub
fstpl
dec
repz
and
xor
repz
adc
jnp
popf
cli
sbbl
sarb
rcl
fists
stos
mov
ss
sbb
fstl
or
and
add
pop
sbb
into
bound
testl
leave
or
add
inc
clc
outsl
shr
gs
pop
in
xchg
pop
jo
stos
sub
call
add
cs
inc
lock
xchg
dec
ja
or
in
lock
inc
or
adc
out
out
jge
and
das
xchg
scas
cmp
and
jge
cmp
cmpsl
in
stos
js
xchg
leave
xchg
xchg
pop
jne
mov
sub
test
pop
sti
dec
leave
xchg
adcl
push
movsb
pop
dec
jecxz
mov
sub
mov
xor
inc
and
xchg
fidivrl
test
sbb
mov
mov
xchg
shrb
mov
add
pop
lds
push
jb
push
xchg
jns
push
mov
lds
jecxz
cmpsl
xlat
push
sbb
jno
xchg
jb
cmp
loope
jge
cs
jle
add
xchg
xor
jp
sub
dec
movsl
push
cmp
pop
push
inc
fimuls
mov
daa
stos
dec
les
inc
scas
add
hlt
fs
mov
in
imul
jo
in
fcoml
jnp
lret
cmc
outsl
jbe
jl
aas
enter
repz
pop
popf
lods
xchg
mov
lret
out
scas
dec
xchg
mov
add
push
jmp
bound
jo
adc
jnp
or
lock
and
mov
mov
fistpll
cmpsb
pop
in
in
aas
adc
ficomps
push
sbb
scas
leave
sub
lds
test
add
xchg
sub
loop
inc
mov
fdivrs
xlat
sbb
out
inc
xor
pop
jl
decb
mov
rcrl
push
xchg
lds
aad
xchg
sbb
inc
sar
je
je
ffree
mov
in
cs
pushf
or
ds
std
mov
pop
lds
inc
dec
out
hlt
lret
adc
xchg
mov
stc
ss
push
cwtl
pusha
dec
pop
jbe
insb
fisubs
dec
mov
cli
inc
and
inc
addl
das
in
jnp
jbe
lret
int
shrl
int3
inc
fldl
dec
jecxz
sub
outsl
loope
aad
mov
xchg
into
xor
mov
ret
mov
push
mov
icebp
dec
inc
rcll
cli
cmp
fwait
lret
pushl
scas
fidivs
stc
or
lods
fs
leave
enter
in
add
les
sub
outsb
les
lods
in
or
sub
dec
push
cmc
mov
rcrl
push
in
add
jg
jecxz
xor
shl
xlat
in
shrb
ss
jnp
lahf
fistps
jb
lods
jb,pt
loopne
dec
sbb
adc
cwtl
ret
mov
leave
mov
push
add
sub
inc
mov
pop
and
push
js
dec
xor
fs
add
ret
jmp
mov
xchg
add
add
inc
mov
xchg
pop
add
repnz
jmp
push
shlb
fists
pop
mov
mov
in
cmc
outsl
jo
mov
mov
xor
das
rcrb
adc
sti
adc
push
or
cmpsb
scas
inc
push
sub
andb
add
pop
repz
outsl
and
ret
dec
pushf
lahf
inc
iret
rorb
pop
cmp
cmp
pop
ds
and
in
rclb
cwtl
ss
cli
add
rcll
or
or
xchg
push
lds
mov
mov
enter
imul
pop
mov
mov
fxch
idivl
imul
jno
pop
adc
xor
pop
push
mov
sahf
lds
mov
inc
and
pop
int3
dec
inc
fldt
or
adc
fadd
std
lods
dec
xchg
stos
push
mov
mov
movsl
fldt
ret
push
jns
cmpsl
jb
movsl
lret
testb
ja
pop
adc
andl
push
daa
push
push
sub
shll
movzwl
inc
in
je
sbb
jo
icebp
and
sbb
mov
and
shll
inc
dec
ror
movsl
and
cmp
push
and
aad
fsub
popf
inc
cmp
add
in
mov
fisttpl
js
pop
cs
mov
push
lret
sahf
adc
mov
mov
das
fisubrs
scas
xchg
mov
push
popl
aad
je
out
pushf
or
mov
or
push
jne
aas
mov
mov
mov
push
lret
leave
push
sub
jmp
sub
push
popf
jnp
or
in
mov
out
rdmsr
ret
mov
fstl
jno
mov
and
push
xchg
xchg
mov
sbb
mov
daa
push
aam
jmp
push
les
lock
sub
xor
scas
pop
aad
push
out
outsb
and
or
icebp
or
mov
mov
jp
ljmp
adc
pop
cmp
je
lods
xchg
xor
or
leave
sub
inc
rol
aas
mov
cmp
out
mov
xchg
cmp
cmpsl
lret
inc
dec
push
sti
mov
jge
xor
sbb
mov
in
ds
je
scas
xchg
xchg
je
scas
lods
dec
fdivrs
les
test
pop
push
loop
les
je
pop
or
sbb
lods
inc
ficoml
xor
lret
mov
mov
test
adc
lret
nop
imulb
cmc
pop
push
jl
add
scas
or
cli
cmp
mov
dec
faddl
xor
fs
scas
jbe
ret
pop
xor
and
mov
mov
jg
xchg
jle
and
lods
pop
cmp
mov
jnp
and
jb
mov
jnp
push
sbb
repz
sarl
sbb
jne
mov
xchg
hlt
xlat
repz
call
or
test
cmp
and
mov
dec
scas
push
or
sbb
add
adc
outsl
or
jns
subb
jae
xchg
mov
adc
or
pop
dec
dec
xchg
call
sbb
cmpsb
ret
adc
push
push
or
les
outsl
mov
mov
xor
dec
movsl
sbb
ss
or
jl
loopne
lods
sbb
xchg
jl
push
mov
rcrl
jne
or
sbb
test
gs
cmp
mov
push
stos
aad
lods
ljmp
dec
aam
xor
ja
popa
xor
or
pop
xchg
fmul
add
xor
jl
ja
cmpl
test
push
les
pushf
pop
mov
mov
lea
cmp
sbb
cmpsb
sub
xor
ja
sub
fs
test
in
idivb
fwait
cmpsl
sti
les
mov
cmp
cmp
testb
in
mov
push
gs
pop
dec
in
push
fmuls
lahf
mov
dec
repnz
js
xchg
movsl
add
aaa
lret
outsl
jle
add
jo
pop
add
pushf
cltd
adc
je
mov
test
inc
sbb
outsb
mov
push
xchg
xor
ss
stc
outsl
sbb
shll
push
in
jb
scas
mov
jne
test
mov
jns
xor
insb
test
xchg
arpl
aaa
ror
mov
bound
es
cbtw
jnp
cmpsb
push
stos
inc
insb
add
and
pop
out
sti
dec
dec
xchg
fiadds
push
repz
loop
mov
sarl
pop
out
repnz
and
xchg
or
adc
cld
test
fdivs
and
mov
loop
cmp
arpl
rcll
or
rolb
loopne
xchg
stos
pop
out
fucom
lods
cmp
mov
lods
add
adcb
repz
enter
mov
push
push
pop
sahf
jne
xchg
in
cmp
cmp
jge
sub
cli
gs
pop
xchg
inc
mov
in
mov
sub
xchg
mov
jae
adc
mov
test
xor
mov
aas
add
mov
mov
xchg
sti
mov
pop
push
mov
popl
cmp
arpl
xchg
push
leave
jg
or
lret
test
out
lret
sbb
lret
in
cmp
jecxz
sub
push
rcrl
pop
stos
sbb
dec
arpl
mov
ret
and
out
or
out
repz
ds
jp
adc
cmp
add
test
mov
xor
fwait
mov
sub
mov
loope
in
sbb
out
sbb
jp
cmp
jnp
sahf
fmuls
add
fists
push
dec
adc
mov
bound
fcoml
xlat
sahf
push
test
mov
mov
sti
and
xchg
pop
push
pop
aaa
cmp
xor
iret
push
inc
mov
ljmp
mov
gs
jns
xchg
push
xor
jecxz
fdivrs
jmp
sbb
adc
lods
mov
or
rorb
out
fs
and
jbe
scas
movsb
dec
or
stc
addr16
inc
ret
and
in
clc
inc
aad
iret
xor
sarb
stos
mov
adc
sub
nop
arpl
rolb
and
xchg
mov
pop
sbbl
xor
std
movsb
lock
scas
add
xchg
sbb
mov
ja
out
repnz
jo
sahf
out
dec
in
add
cltd
call
adc
add
div
mov
rorb
push
std
lods
jge
out
add
dec
shl
mov
loopne,pn
push
fbstp
fisubl
cmp
dec
adc
lret
loopne
addr16
cld
pushf
xor
cs
or
mov
mov
and
dec
push
inc
mov
cmpl
inc
sub
sti
aas
cltd
data16
xor
flds
arpl
sub
lods
scas
insl
test
lahf
fsincos
outsl
mov
ja
sbb
jl
loopne
cmpl
inc
orl
mov
and
and
push
sub
aaa
dec
ret
mov
stos
popa
gs
push
dec
mov
push
push
push
aam
push
dec
xchg
in
mov
jmp
enter
mov
lret
pop
sbb
xor
cs
jle
pop
popa
inc
insb
or
adc
pop
stos
movsb
sarl
or
jne
in
cmp
icebp
lds
and
xor
mov
push
push
lcall
mov
push
inc
pop
scas
pop
scas
xor
inc
aad
pop
addr16
dec
sub
filds
sub
fwait
mov
popf
stos
jle
or
icebp
test
xchg
ja
idiv
stos
int
imul
jb
scas
imul
call
pop
mov
cmp
mov
cmpsl
into
test
jae
or
mov
imul
in
inc
fisubrs
cmp
xor
xchg
mov
mov
das
ljmp
inc
mov
xchg
mov
inc
xchg
ret
push
add
xor
pop
aad
aad
movsl
adc
cmp
mov
add
mov
ja
inc
xor
stos
es
movsb
or
pushf
into
add
adc
testb
or
movsl
mov
add
or
jnp
es
push
xchg
cmp
xor
sub
js
out
iret
mov
in
repnz
arpl
fcompl
and
adc
xor
cmp
and
in
iret
out
adc
scas
dec
push
pop
scas
jp
adc
daa
inc
cmp
mov
push
aaa
insb
inc
jo
cmc
jl
cmp
movsb
xlat
adc
vmwrite
loop
mov
jge
push
lret
cld
sbb
mov
cmp
int3
frstor
pushl
movsb
mov
subl
xor
xorb
out
cltd
jae
sub
setnp
fildl
popa
push
das
jae
jmp
xchg
and
test
cld
lahf
xchg
xchg
and
pusha
inc
add
mov
xlat
xchg
sbbl
jne
shlb
pop
mov
out
xchg
and
cmpsl
mov
das
xchg
pop
mov
jmp
lret
cli
xchg
lcall
gs
inc
xchg
test
leave
xor
xchg
shrb
lahf
cmp
cmp
out
mov
call
cli
push
push
sahf
push
xor
pop
add
pusha
leave
inc
xchg
not
add
add
lods
xchg
outsb
test
mov
leave
mov
mov
sbb
movl
stos
andl
cs
hlt
mov
in
inc
mov
frstor
inc
addr16
or
jecxz,pn
dec
lea
cmp
xchg
orl
pushf
sbb
inc
adc
add
imul
fwait
enter
sub
xchg
jns
adc
or
push
xchg
ljmp
std
sub
mov
inc
and
or
mov
arpl
call
xchg
addr16
loop
inc
loope
sub
sbb
dec
inc
push
sub
in
icebp
mov
ja
or
test
cwtl
and
dec
cltd
enter
pop
add
cld
ds
addr16
popf
jae
data16
clc
popa
dec
push
sbb
or
sub
and
lea
mov
or
jmp
push
mov
fs
scas
ds
mov
daa
xchg
pop
aaa
imul
xor
ja
fs
jb
jns
jno
sbb
jb
lret
mov
cli
notb
rorl
test
rol
scas
je
hlt
jne
rcl
popa
inc
and
cmp
mov
xchg
in
adc
shlb
movq
pop
xlat
push
inc
into
std
fcoms
adc
sub
dec
lahf
cmc
fwait
int
call
dec
adc
shlb
mov
dec
aad
pop
popa
lret
cmp
jae
int3
lret
mov
xor
cltd
sbb
shll
push
popa
imul
inc
pop
rorb
test
js
imul
ds
or
xor
js
out
or
shl
enter
adc
aam
cli
pop
int3
insb
push
movsb
andb
xor
int
or
add
xchg
sti
or
aam
ret
mov
mov
push
jg
lret
pop
imul
mov
inc
aaa
cmpl
in
aam
lcall
sbb
cltd
mov
jmp
jl
push
das
call
push
sbb
mov
sub
add
jne
mov
test
unpckhps
lods
lods
jo
and
imul
push
jl
sub
scas
lahf
mov
and
pop
mov
or
xchg
enter
push
or
xor
stc
sbb
mov
dec
push
jmp
ss
mov
sbb
mov
mov
sub
es
cmp
imul
cmc
rcrl
test
xor
mov
pop
adc
sub
xchg
and
fisubl
movsb
ds
outsb
or
mov
aad
adc
sub
enter
mov
in
aas
mov
pop
aas
sbb
cmpsl
push
add
popf
fcoms
xchg
leave
stos
push
scas
mov
cmp
pop
pop
cltd
mov
aas
das
lods
in
stc
mov
mov
inc
mov
inc
mul
add
adc
inc
filds
or
mov
xchg
aad
add
movsl
out
mov
das
aas
test
in
scas
loop
or
nop
cli
mov
shl
adc
push
push
dec
imul
pop
ret
sbb
fwait
cmp
out
and
cli
push
sbb
jbe
fldcw
mov
int
xchg
mov
ds
rolb
test
fwait
mov
iret
mov
mov
adc
or
in
sahf
mov
js
pop
stos
and
add
aad
stos
cmpb
ret
mov
sub
cmp
je
sahf
out
cmp
test
pop
fwait
jge
jmp
pop
int
or
cld
stos
mov
mov
lret
lahf
sub
xor
add
inc
ret
int
repz
push
lahf
jns
inc
cmc
jle
fbld
sbb
pop
rcll
jne
add
push
in
or
leave
push
cwtl
roll
nop
daa
test
std
xchg
mov
in
add
mov
xor
lods
out
loope
jp
jns
dec
sub
add
or
ret
add
movsb
and
repz
cmp
and
sbb
faddp
stos
aas
add
xor
mov
pusha
push
jecxz
fistl
mov
sbb
leave
cld
cmp
scas
adc
ljmp
mov
je
inc
pop
pop
rcr
iret
movl
inc
inc
movsl
sbb
jae
repz
ret
pushf
sbb
popf
inc
bnd
xchg
and
dec
pop
sbb
mov
mov
pop
jb
cli
iret
ficompl
or
jecxz
into
and
cmp
movl
cmp
inc
xchg
out
pop
cmp
push
pop
testb
fbstp
enter
and
icebp
jns
add
jecxz
push
xchg
sbb
addr16
pop
cld
jg
jnp
adc
into
leave
movsb
or
sbb
mov
in
inc
incl
mov
add
push
pop
fdivrs
rorl
ret
std
into
cmp
fildl
mov
or
pop
popa
aam
out
push
pop
test
out
fwait
movsl
fbstp
jb
mov
rorb
adc
cltd
xchg
mov
jmp
adcb
ja
push
xchg
popa
pop
std
mov
xor
inc
int
push
fistpll
fnstsw
jle
test
dec
adc
aam
mov
or
push
popa
mov
sti
andb
pop
add
xchg
insl
xchg
daa
add
adc
test
mov
pop
xchg
repnz
jne
pop
mov
ret
mov
sub
test
jg
dec
out
add
sbb
imul
flds
pop
daa
sbb
inc
xchg
fs
dec
mov
inc
repz
sub
cmp
lret
nop
clc
mov
sub
out
test
rcr
div
xchg
or
pop
js
push
push
cmp
and
loope
pop
iret
fs
xor
sbb
rcrb
xor
and
bound
push
daa
dec
mov
lock
sbb
push
fwait
pop
mov
lcall
pop
fldt
in
sti
cmpsl
dec
outsb
xor
rorb
mov
mov
pop
int3
insb
subb
insl
mov
aad
roll
inc
test
stc
arpl
addr16
fstpt
mov
ret
popa
lock
repz
dec
and
push
cld
cld
jecxz
mov
dec
lcall
lea
or
and
arpl
mov
frstor
repz
les
xor
loopne
arpl
pop
sbb
fs
scas
jg
adc
lcall
adc
push
fwait
das
dec
jp
or
mov
mov
xchg
dec
je
int3
xor
out
push
mov
or
sub
inc
loopne
xchg
and
fidivs
loopne
sub
fdiv
mov
add
inc
sahf
ss
and
in
sub
pop
mov
int3
repz
mov
mov
mov
push
mov
sub
push
add
cmpl
nop
sbb
sbb
and
bound
out
mov
stos
rcll
adc
test
stos
jmp
fucompp
rcrl
fnsave
daa
mov
mov
sbb
inc
sbb
adc
mov
mov
xchg
dec
adc
mov
mov
inc
mov
sbb
out
imul
fisubrl
jb
loope
cmp
jo
ja
je
mov
jp
fnsave
push
jp
or
insb
jmp
push
jmp
mov
addr16
test
les
and
inc
mov
xchg
xchg
cwtl
in
sub
xor
add
or
or
iret
xchg
pop
xchg
ds
inc
ljmp
rorb
jae
sub
sbb
inc
gs
dec
jge
add
fxch
lret
mov
sub
push
sub
jp
pusha
hlt
xor
loop
sbb
jb
pop
or
arpl
push
cmpsl
mov
push
adc
arpl
outsl
or
or
mov
cwtl
sub
push
ret
les
mov
mov
mov
negb
cld
mov
xor
fisubl
mulb
jmp
out
xchg
decl
dec
pop
dec
daa
fistl
adc
leave
in
inc
mov
pop
cmp
cmp
pop
mov
jnp
movsl
movsb
xchg
push
out
mov
insb
adc
push
mov
xchg
mov
scas
push
addl
xchg
iret
or
or
add
add
aad
pop
xlat
sbb
pop
dec
inc
fsubrl
jmp
pop
xchg
mov
and
mov
sbbb
xchg
rorb
or
xor
aas
inc
and
jae
push
ss
out
jnp
push
dec
and
sub
insl
jmp
pusha
push
pop
loope
icebp
cmp
imul
int3
jne
adc
cld
xor
setge
arpl
in
test
repz
repnz
imul
xlat
pop
sahf
iret
icebp
xchg
dec
jne
ljmp
es
aaa
sub
lea
in
mov
hlt
pop
imul
xchg
mov
sub
xchg
jmp
pop
aad
pop
push
loope
adc
enter
mov
inc
rclb
pop
rol
jecxz
cmpsb
xor
gs
int
pop
std
fistps
sub
mov
dec
and
mov
adc
xchg
sti
shrb
test
call
jle
and
addr16
imul
mov
rcl
in
ret
pop
in
aam
mov
cmp
cmpsb
scas
add
jno
jb
loope
dec
lcall
cmp
lods
inc
dec
sbb
push
xor
popa
lea
mov
ficomps
xchg
fldenv
rcll
sub
dec
scas
xchg
jle
push
outsb
mov
test
mov
imul
hlt
jmp
adc
hlt
push
add
loopne
xchg
or
negl
cmpsl
int
daa
repnz
add
ds
in
enter
negb
or
loop
call
push
out
sti
arpl
pushf
out
or
xchg
emms
shlb
or
flds
movlps
fdivp
jbe
call
cmc
adc
inc
xchg
sub
mov
cmpsb
jecxz
push
xchg
cmp
xchg
aad
mov
jmp
jbe
inc
clc
add
push
pop
in
xor
sbb
cmp
es
fidivrl
lods
pop
sbb
scas
cld
adc
add
or
mov
cmpsl
inc
mov
lret
adc
rolb
and
adc
aaa
add
push
jl
inc
bound
sub
xchg
repnz
ss
test
adc
mov
enter
mov
int
aas
xchg
dec
sub
es
rolb
mov
cs
mov
pop
popf
loope
jns
lds
mov
rclb
ss
adc
dec
add
inc
enter
test
std
pushf
mov
and
sub
pop
imul
cld
and
int3
sub
fistpll
insl
sarb
popa
je
ja
ljmp
push
inc
subl
mov
jmp
jb
add
vcomiss
push
lea
les
jb
and
lods
out
sbb
pop
inc
dec
test
lret
sbb
je
enter
dec
sbb
push
xchg
pop
repnz
test
leave
imul
mov
popf
cmp
iret
or
movsb
mov
jmp
sub
sbb
or
orb
jo
xor
or
jp
out
fcompl
popf
xor
mov
es
das
popa
cmp
and
out
test
gs
mov
lods
popa
in
mov
or
lret
and
adc
mov
mov
arpl
icebp
fwait
gs
adc
fcmovne
mov
jae
mov
jecxz
nop
cmpsb
dec
test
inc
dec
repz
shrl
add
movl
inc
jg
xchg
and
or
out
scas
jae
push
add
mov
pop
mov
stos
jo
mov
loopne
pop
jb
mov
ja
mov
fldz
js
or
imul
popa
ss
mov
pop
inc
pop
adc
pop
jbe
inc
add
cwtl
frstor
mov
out
xchg
xchg
xchg
and
arpl
icebp
clc
adc
mov
pop
or
icebp
out
fincstp
fs
dec
sub
or
mov
push
ror
ss
ds
in
arpl
in
jno
pop
stos
jl
and
inc
cld
fidivrl
and
ds
and
adc
mov
sahf
jae
shlb
lcall
cli
or
imul
xchg
call
pop
add
mov
mov
cmpsb
sub
test
xor
inc
push
xlat
and
das
mov
in
push
mov
pop
or
push
clc
xchg
pop
adc
test
mov
fstpl
mov
testb
sahf
sbbb
fstl
out
mov
inc
xchg
sbb
jo
imul
repz
lods
inc
jne
sub
cltd
addr16
sub
pop
sub
insl
orl
inc
test
adc
test
mulb
insb
jb
push
jnp
js
dec
fidivrs
rcrb
cmpsl
xor
pusha
dec
dec
ja
clc
dec
shll
out
sbb
in
cmp
mov
add
add
lret
xor
fmuls
int
lods
sub
sbb
fisubs
and
or
loope
cmpsb
stos
or
leave
mov
icebp
ja
test
mov
xchg
inc
fnstsw
repz
mov
inc
int3
fcmovb
add
xor
push
pop
stos
loopne
pop
ss
push
push
pop
sbb
cmpsl
outsl
loop
cmp
and
xchg
imul
stos
loopne
stos
and
les
inc
jnp
or
shrl
pop
cmp
in
enter
lret
scas
ret
aam
loop
pop
or
imul
pop
insb
mov
adc
mov
mov
out
adc
test
nop
mov
xor
leave
cld
add
or
lds
push
mov
lods
mov
sbb
fistpl
pop
clc
mov
mov
jl
into
add
xchg
mov
or
xor
mov
or
lods
push
test
lahf
fsubrl
mov
fwait
lcall
lahf
js
hlt
pop
lods
add
mov
loope
sti
mov
js
mov
xchg
ds
les
jb
xchg
outsb
lret
jnp
adc
mov
mov
dec
add
ret
das
shlb
lret
adc
jg
dec
int
imul
jmp
into
push
cmp
imul
pop
xor
cmp
xchg
pusha
sbb
das
inc
out
pop
nop
fimuls
fcomps
out
faddl
std
dec
bnd
cmp
xor
mov
hlt
lea
inc
aam
shll
xchg
add
daa
movsb
jle
pop
mov
fnsave
sbb
outsb
xor
movsb
and
push
mov
pushw
scas
out
adc
fistl
pop
cmpsb
cmc
jae
shl
xchg
push
cmp
cwtl
jae
icebp
rcll
pusha
outsb
stos
lcall
sub
add
gs
sbb
cmc
dec
inc
xor
xor
sub
jae
mov
mov
stos
stos
clc
iret
icebp
mov
cmp
xor
or
fsubrp
dec
jne
int3
mov
cmp
rcrb
sub
mov
jge
insl
hlt
cwtl
lods
test
loope
mov
movntq
rcr
xchg
rcrb
sti
inc
jle
push
pop
push
popa
ficoms
jnp
sbb
jnp,pt
mov
out
dec
icebp
sbb
dec
ss
push
jecxz
jno
adc
lea
sub
xchg
push
xchg
add
outsb
loope
cmp
xchg
inc
shl
sub
rcrl
loop
and
jmp
nop
leave
xor
cmpsl
ds
sub
mov
test
cli
data16
pop
call
cwtl
adc
fwait
repz
jg
out
stos
cmpb
sahf
pop
xor
cmpl
dec
mov
mov
jg
mov
mov
push
sub
push
cmpsb
pop
out
jnp
jne
cltd
in
mov
mov
or
lcall
sub
sub
lcall
sbb
mov
mov
pop
fldcw
mov
mov
sub
movsb
imul
jp
cmp
adc
outsb
stos
repz
loop
mov
imul
or
insl
jmp
sbb
push
in
add
pusha
dec
imull
fidivs
fisttps
pushf
push
lods
inc
xchg
cli
mov
repnz
sbb
out
push
js
shl
jns
pushf
enter
movsl
jbe
or
lea
mov
rorl
add
fistl
clc
push
loop
ror
call
imul
mov
push
push
xchg
push
iret
aam
scas
mov
push
outsl
mov
inc
adc
mov
and
dec
mov
pop
sub
gs
add
cmp
push
mov
dec
sbb
in
jae
je
les
pop
and
stos
jnp
mov
test
xor
mov
ficoml
jg
ret
jp
cmpsl
cmp
sub
sbb
daa
das
jle
sbb
fimuls
xchg
dec
popf
mov
test
mov
data16
pop
mov
fwait
xor
jnp
and
ja
jae
cmpsl
and
popf
movb
pop
ret
xorb
insb
js
movsl
sub
push
adc
mov
or
lcall
aas
sub
pop
bound
bound
outsb
lods
mov
sti
out
stos
mov
mov
sub
or
pop
ss
fiadds
aam
mov
mov
pop
jbe
out
or
dec
mov
aas
lret
dec
push
cmc
cmpb
xchg
adc
push
jo
adc
jge
xchg
sub
js
aad
stc
push
mov
push
sbb
loop
push
fldt
inc
lret
inc
iret
mov
jbe
adc
out
pop
push
adc
aam
arpl
xor
mov
lock
aaa
add
shlb
adc
push
loopne
xchg
mull
stc
add
js
or
jb
shlb
cli
add
pop
sahf
mov
sub
idivb
imul
js
push
fwait
dec
loope
jle
push
pop
call
sbb
shrb
push
jecxz
xor
mul
ret
adc
inc
fisubrl
aas
jp
pop
nop
push
xchg
inc
jmp
push
push
inc
mov
repnz
or
push
movsl
xor
in
cld
int
cmpb
icebp
mov
sub
subb
sub
fildl
pushf
je
enter
dec
testl
test
push
dec
out
inc
out
jb
ss
lds
aas
into
data16
outsl
ret
inc
popf
sbb
xor
in
mov
cmpsl
hlt
dec
hlt
sbb
push
out
xchg
fnstenv
push
fnstsw
xor
push
mov
filds
filds
jnp
mov
jno
jg
xchg
push
fwait
push
cmpsb
lods
cmp
mov
ds
xchg
mov
push
dec
dec
adc
iret
sub
xchg
std
mov
in
test
push
mov
push
xor
fiadds
or
aad
jl
push
ret
dec
push
cmc
mov
cmpsl
jmp
pop
pushf
imul
pop
push
and
sahf
fnstsw
ljmp
fsubp
pop
add
jmp
dec
nop
out
repnz
inc
mov
scas
sub
outsb
lods
sbb
push
xor
jmp
cld
mov
outsb
mov
jo
sbb
lcall
mov
les
rol
mov
jg
dec
leave
bound
mov
adc
add
sti
and
das
shlb
lock
stos
stc
orl
jbe
rcll
insl
mov
fisubs
sub
es
lods
jl
ljmp
mov
push
in
call
loope
lret
mov
sbb
andb
cltd
loop
aam
stos
or
jae
fsub
mov
fldl
and
jecxz
in
stos
mov
fwait
jp
xor
or
xchg
push
push
daa
pop
or
mov
fs
dec
mov
stos
or
ljmp
pop
mov
lea
in
push
outsb
int
inc
aad
sbb
rcr
repz
inc
jp
jmp
inc
mov
fisubrl
mov
leave
je
add
push
test
int3
ja
sub
andb
repz
lea
ret
fwait
jmp
add
enter
cltd
fidivl
jne,pn
xchg
fxtract
dec
push
cs
push
pop
add
ss
hlt
subl
inc
popa
inc
push
bound
mov
mov
pop
sbb
rcrb
dec
inc
call
loop
add
mov
das
mov
imul
lret
inc
repz
xchg
or
push
dec
mov
lea
ds
adc
cmp
hlt
or
arpl
ret
mov
shrb
mov
push
dec
bound
jb
les
mov
sbb
and
cmp
mov
stc
mov
cmpsb
fstl
pop
pop
jno
mov
daa
movsl
or
dec
push
inc
mov
bound
out
mov
push
out
cmpsl
push
or
lds
mov
jbe
bound
inc
mov
cmpsl
out
xchg
mov
xchg
pop
fistps
jl
or
jmp
mov
imul
ret
out
mov
and
mov
push
jns
mulb
sarl
mov
loopne
jge
les
movsl
sbb
out
pusha
mov
xchg
mov
mov
mov
mov
mov
mov
inc
lahf
test
je
rorl
adc
out
lcall
xor
lahf
mov
xorl
iret
mov
in
jne
jb
outsb
aaa
clc
and
imul
bound
arpl
push
and
clc
leave
mov
xchg
dec
and
movsl
cmp
sub
adc
jecxz
ror
lock
inc
test
cmc
bound
mov
imul
mov
jns
testb
loop
sub
js
inc
enter
fmull
js
repz
push
das
lret
and
inc
push
inc
call
inc
push
inc
mov
push
add
mov
push
mov
dec
ljmp
std
dec
dec
jno
sub
sub
sub
adc
movsl
pop
mov
or
adc
sbb
fadd
insl
dec
dec
mov
cmp
frstor
mov
int
fnop
js
adc
and
xchg
mov
imul
scas
popf
movsb
daa
fbstp
add
pusha
daa
adc
dec
cmp
mov
out
mov
stos
mov
lods
mov
xchg
cltd
jae
dec
mov
ficoml
mov
sbb
loope
cltd
jbe
pop
mov
mov
add
out
mov
jge
out
sub
inc
imul
mov
lret
roll
inc
mov
test
push
and
sub
aaa
ss
xchg
mov
sub
mov
js
adc
push
mov
and
jecxz
jp
daa
xchg
popf
les
mov
fsave
push
and
push
mov
cmpsb
je
pop
ljmp
imul
sub
xor
dec
push
xor
add
cmc
or
es
sti
and
pop
pushf
or
xor
cmpsl
fs
jmp
dec
mov
in
pop
pop
jmp
cwtl
lods
loop
insl
and
lret
pop
out
push
mov
pop
iret
pop
fnstenv
dec
xchg
mov
or
outsl
inc
addr16
jl
jmp
sti
mov
stos
stos
pop
mov
push
mov
pop
dec
repnz
repz
sti
and
push
outsb
pusha
ljmp
cmpsb
stc
imul
call
jb
jecxz
or
or
in
cmp
fdivrp
or
shlb
ret
inc
nop
jge
cmp
mov
mov
sub
lret
test
data16
js
push
mov
test
or
in
test
fs
das
lret
aam
and
and
inc
mull
outsl
or
lods
mov
out
sbb
xchg
dec
in
inc
xchg
loope
loope
or
rolb
imul
cmp
push
dec
ret
popf
push
pop
and
paddusb
push
push
ret
nop
and
pop
push
pop
jne
popf
pop
xchg
mov
inc
mov
push
sub
fidivrl
test
pop
in
add
adc
insl
push
outsl
out
adc
pop
cltd
or
mov
mov
jbe
leave
aad
sub
rolb
fs
in
mov
cmc
incb
dec
add
xor
mov
lods
adc
in
xor
jmp
cmpsb
lods
imul
sar
mov
dec
aaa
fwait
scas
xor
mov
mul
mov
jmp
or
rcl
mov
mov
out
jae
jl
cmc
jge
lods
sarb
mov
sbb
xchg
cmp
nop
mov
lret
inc
jo
sub
adc
xor
test
in
cld
sub
dec
inc
pop
jns
in
fnstenv
cmpsb
icebp
xchg
pushf
dec
xchg
in
cwtl
ja
fildl
adc
jecxz
sub
sub
aad
xor
fisttpll
jle
sbb
outsb
push
and
cmpsl
add
jmp
clc
push
pusha
addr16
enter
rcr
fldt
sbb
pusha
xchg
mov
setp
inc
test
ja
popf
scas
inc
xchg
adc
lock
pop
pop
adc
cmc
popa
sub
mov
mov
xchg
mov
andb
fcmovnb
cmpb
cmpsl
add
fwait
xchg
add
pop
jne
mov
stos
lahf
cmc
dec
in
outsl
popa
scas
data16
and
cmp
or
add
mov
clc
mov
xchg
hlt
mov
pop
sbb
shl
mov
in
scas
inc
mov
sbb
imul
mov
mov
push
jecxz
clc
xchg
gs
inc
shl
inc
imul
aaa
fistl
cld
lods
ljmp
mov
inc
inc
inc
pushf
inc
loope
and
mov
mov
repnz
arpl
aam
fs
mov
iret
jge
dec
lods
orb
imul
int
idivb
iret
mov
cld
movsb
add
je
mov
push
cmpsb
mov
in
sbb
push
or
mov
test
int3
sti
jo
push
bound
or
add
mov
mov
jno
jge
subl
jecxz
fcompl
fwait
shll
mov
push
out
adc
xchg
jns
sub
aam
dec
js
jne
adc
enter
adc
add
xor
pusha
jno
stos
jae
aam
add
inc
jae
in
jbe
in
sbb
inc
mov
dec
pop
sub
rol
mov
fldcw
cmp
subl
repnz
es
adc
rol
sub
sub
in
sbb
sbb
xchg
xchg
xchg
jo
jnp
xchg
xorb
push
or
cmpsl
pushl
inc
sub
push
pop
aam
cmp
xor
push
mov
movsb
mov
rolb
push
xchg
loope
stos
pop
push
and
mov
or
inc
jns
repnz
mov
cmp
orb
inc
mov
dec
mov
mov
push
push
test
sbb
push
cli
dec
subb
pop
int
insb
push
sub
fdivrl
push
mov
repz
pop
insl
pop
sub
scas
outsl
xchg
mov
mov
xchg
mov
cmp
movsb
xchg
lock
push
outsl
add
addr16
lea
fsub
cltd
icebp
int3
jl
mov
mov
popf
shlb
mov
int3
bound
das
xchg
cmpsl
sub
xchg
xchg
int
dec
mov
dec
shll
inc
jl
mov
mov
dec
or
imul
ss
outsl
sub
mov
fldl
mov
aad
in
pop
sbb
add
pop
jne
add
gs
fwait
aaa
xorl
or
cmc
lret
stos
gs
dec
push
int3
test
pop
ds
jecxz
out
cwtl
xor
pusha
xorl
out
dec
mov
sti
jne
xchg
imul
adc
mov
aaa
pusha
sub
fs
jge
dec
test
fdivrl
nop
jns
push
fcomp
loop
adc
dec
stc
ja
cs
addr16
int3
jg
xor
push
jle
push
jb
fistpll
jecxz
cmp
inc
movsl
into
sti
mov
jle
mov
aam
int
clc
pusha
mov
movsl
lcall
cs
mov
jne
movsl
push
test
bound
mov
adc
xchg
mov
sub
stos
dec
mov
testb
inc
push
ds
test
push
sbb
push
jb
mov
xor
sub
cmp
add
popa
movsl
pop
adc
inc
adc
outsb
cmpl
push
sub
aam
dec
fildl
int
dec
fstpt
jns
pop
add
aam
in
push
pushf
lret
mov
xor
aam
scas
popf
mov
stc
jnp
nop
and
push
xor
lcall
hlt
iret
dec
adc
pushf
stos
mov
sbb
shlb
jecxz
push
push
aad
inc
xchg
mov
lcall
lahf
inc
fnstenv
insb
jge
in
es
sub
les
decl
push
mov
add
push
pop
pop
pop
xchg
testb
inc
pusha
out
jns
ss
in
push
mov
cs
fcoml
jne
jne
fnstenv
cmp
mov
dec
pop
pusha
cld
or
and
dec
shl
add
push
push
push
cwtl
lcall
mov
daa
xor
add
xchg
lods
sbb
push
or
mov
sub
stc
mov
fistl
xchg
add
int3
daa
mov
nop
imul
test
mov
mov
push
outsb
add
mov
sbb
and
and
cmpsl
pop
pop
mov
lret
sub
sub
xchg
pushf
sbb
xchg
adc
cmp
out
inc
nop
loope
ds
xor
movsl
rclb
mull
ret
dec
or
add
xor
movsb
mov
movsb
repnz
cmp
ret
dec
dec
cmp
in
xor
imul
sbb
and
cmp
stos
mov
add
sahf
outsl
jnp
outsl
out
or
dec
mov
mov
inc
jae
aad
mov
sub
stc
push
lret
movl
inc
imul
gs
inc
dec
or
mov
fucomp
les
push
inc
scas
xchg
inc
aad
lods
adc
sub
xchg
ret
cmp
and
xor
add
pop
inc
aas
push
rcl
mov
icebp
mov
and
enter
pop
insl
pop
xchg
inc
mov
and
out
jmp
repz
push
insb
mov
jp
bound
loope
sub
jl
hlt
jg
pop
arpl
xor
xor
int3
out
push
push
ds
add
stos
xor
into
dec
jp
adc
popf
movsb
dec
mov
int3
inc
mov
imul
and
lods
testl
cmc
out
push
pop
mov
lahf
in
mov
enter
dec
jl
shr
push
jg
cltd
aam
sahf
adc
popa
dec
and
mov
int
outsb
sub
rorl
cmp
push
ja
or
mov
leave
ret
stos
call
aaa
jmp
cmp
das
dec
enter
insl
sub
add
pusha
je
faddl
loop,pn
cwtl
outsl
push
fwait
mov
sahf
cmc
add
fbld
jbe
pop
sub
or
repz
push
lock
add
or
and
sti
pushf
orb
out
test
jl
and
leave
adc
fwait
xchg
pop
lret
mov
mov
mov
sahf
push
mov
out
push
sub
sub
or
pop
mov
leave
popa
hlt
push
push
lahf
popa
push
mov
push
inc
sub
cli
aam
or
xchg
cs
insb
xor
push
ret
adcb
in
mov
pop
jecxz
fisttpll
fists
mov
hlt
out
add
in
xor
repnz
rcll
jae
xchg
ret
daa
push
in
repz
add
sbb
dec
sub
scas
lret
js
cld
iret
xorl
and
lahf
inc
pop
jg
icebp
int
jo
mov
pop
jae
xlat
push
jle
dec
sti
xchg
dec
test
rcrb
push
xchg
jae
dec
hlt
or
stos
fstps
sub
jg
push
adc
dec
lret
out
shll
mov
jnp
js
push
lret
push
cmpsb
mov
cmpsl
xchg
mov
add
pop
incl
cltd
adc
sub
jmp
int
push
cmp
pop
add
ffree
insl
and
fstps
mov
push
cmp
and
int3
aam
inc
cmc
cmp
fs
filds
cmp
int3
enter
push
push
aas
jl
or
into
mov
out
mov
mov
sub
mov
mov
mov
xchg
cmp
push
dec
jge
fwait
mov
pop
lret
sub
mov
mov
or
mov
xchg
movsl
out
fnstsw
imul
cmpsb
out
in
sti
mov
aam
mov
xchg
or
loope
cs
adc
lcall
mov
inc
or
mov
pop
adc
outsl
pop
dec
mov
push
or
pushf
test
push
les
and
mov
dec
push
add
pop
mov
push
xchg
mov
popf
jl
jae
inc
jg
dec
mov
insl
movsb
stos
orb
mov
jg
sbb
hlt
pop
fs
push
and
and
add
sbb
icebp
test
in
lret
cmc
jp
sub
mov
jmp
mov
inc
cmp
loope
fldl
sti
stos
mov
popf
sub
cld
imull
mov
cmp
xor
in
mov
jnp
mov
mov
sub
subb
mov
cs
subb
movsb
jo
sub
push
add
mov
xor
jp
or
lret
inc
pop
cld
dec
cmpb
movsl
inc
daa
arpl
sbb
int3
rcr
jns
sahf
pop
cmpsb
mov
jl
bound
xor
lds
or
divl
into
mov
sbb
xchg
sub
jb
test
jno
jo
cwtl
arpl
aad
xor
addps
pushf
mov
bound
stc
fbld
mov
outsl
add
pop
fdivrs
cmp
fidivs
mov
xor
lods
xlat
sti
jae
or
out
xchg
loope
in
cmpsl
xor
popa
push
dec
into
or
dec
xchg
fdivrs
mov
psadbw
cltd
jbe
or
mov
mov
pop
jp
or
pop
mov
cltd
jecxz
adc
inc
jb
and
in
add
push
stos
sbb
xchg
repz
jg
push
cwtl
fstl
insl
stc
adc
popa
gs
inc
push
pop
pop
xor
ds
cmp
ss
sbb
fbstp
cmp
xorb
loope
sub
cmp
insb
jb
cmc
jmp
pop
cmp
scas
scas
add
sub
and
lret
push
mov
xchg
mov
test
gs
add
aam
push
in
pop
pop
fwait
jle
cmp
fwait
jecxz
jo
ds
xchg
lea
repnz
bound
xor
sarl
imul
jg
arpl
cmp
dec
hlt
mov
push
jne
add
pop
das
test
fldcw
jns
xor
ret
pop
enter
loope
cmpsl
push
nop
inc
push
mov
test
and
push
cli
and
mov
mov
outsl
fincstp
mov
and
or
lret
xor
inc
jae
push
je
xchg
adc
dec
dec
orl
fdivrs
mov
fs
ret
mov
sbb
mov
das
int3
mov
andl
inc
loopne
add
mov
psubq
jnp
lcall
dec
insl
jecxz
sbb
xlat
mov
hlt
cli
test
ret
add
outsb
and
xchg
std
jl
mov
lret
adc
lahf
imul
sahf
mov
mov
cmp
imul
aam
loopne
cmp
dec
add
add
in
push
or
aam
pop
in
out
mov
scas
jecxz
jl
in
loopne
dec
sbb
xor
pop
sahf
push
dec
jae
fwait
inc
jl
mov
stc
filds
leave
inc
hlt
sub
xchg
cmp
ds
fs
xlat
cli
aas
mov
jecxz
es
and
or
lods
cmpl
push
mov
fnstcw
sub
pop
pop
sub
test
mov
cmp
jo
stos
xchg
testl
sub
lret
mov
das
xlat
icebp
add
push
cmpsb
xor
scas
mov
stos
xor
sub
jp
ret
dec
jecxz
ds
je
mov
lods
pop
loope
mov
jl
fists
xchg
mov
mov
push
sahf
icebp
sbb
std
dec
leave
mov
add
lods
pop
inc
popa
push
pop
testl
testb
pop
dec
mov
bound
dec
dec
or
cli
lret
outsl
xor
inc
in
addr16
imul
sub
pop
cmp
lods
add
xchg
movsb
mov
rcrl
mov
sbb
adc
clc
mov
jl
pop
xchg
push
das
add
out
or
shl
or
mov
test
push
mov
xchg
fs
or
int
pushf
neg
jp
pop
or
es
xor
outsl
xor
rorl
out
jge
cmp
popa
and
mov
pop
test
stc
in
dec
xor
and
pop
cld
test
rcrb
aas
mov
dec
pop
das
mov
fstp
and
mov
inc
mov
push
cmp
add
push
mov
rorl
dec
arpl
rol
test
in
subb
mov
sti
imul
mov
mov
test
mov
push
push
out
mov
lods
sbbb
pop
loop
sbb
xor
inc
pop
xor
fidivl
or
xor
fldl
jecxz
stos
jl
scas
bound
hlt
sub
imul
lds
stos
mov
fwait
push
dec
aam
mov
ja
orb
cli
test
stc
mov
dec
inc
sub
and
xor
fdiv
inc
push
hlt
cs
daa
out
lret
push
dec
rol
fnstcw
push
in
out
xchg
mov
lock
mov
pop
popf
scas
lock
sub
inc
cmp
movsl
cmp
jbe
sti
sub
movsl
mov
in
mov
daa
xchg
movsb
jns
sub
jb
ret
imul
pop
pop
add
aaa
xlat
into
pop
and
test
daa
inc
xor
fdivs
aas
dec
sub
jge
mov
subb
cmp
dec
jb
mov
sub
adc
popf
ds
js
cmpb
adc
and
imul
push
loope
jge
or
mov
movsb
out
add
out
dec
jmp
xor
mov
repnz
and
mov
aam
adcl
inc
sub
outsb
aas
into
cmp
enter
lea
addr16
sahf
push
jle
dec
test
mov
xchg
pop
inc
cmp
mull
in
shll
bound
cwtl
pop
data16
aam
xchg
sub
shrb
aad
xchg
cmp
iret
rclb
pop
cmc
push
dec
inc
mov
bound
lahf
test
add
andb
dec
mov
pop
cmpb
jo
fwait
push
jg
popf
mov
or
aaa
out
or
jg
mov
push
push
mull
sbb
daa
push
fldln2
xchg
dec
push
jle
jge
fwait
shlb
sbb
sbb
inc
mov
mov
inc
jp
std
std
xchg
cmp
fmull
or
pop
sahf
sub
scas
cmp
inc
shrb
or
sbb
add
sub
inc
orb
xor
push
outsl
inc
xchg
jmp
insl
stos
inc
sbb
loope
or
inc
cmp
sbbb
mov
xor
pop
jne
xor
iret
pusha
cltd
jbe
fdivs
sub
push
lahf
xlat
adc
aam
inc
and
out
xlat
xor
ljmp
testb
out
sub
mov
test
xor
lea
jns
test
es
jmp
add
movsl
push
enter
push
xchg
inc
rep
add
xchg
add
out
adc
pop
sbb
pmaxub
inc
inc
hlt
adc
dec
cmp
mov
or
in
adc
sbb
and
out
es
mov
data16
dec
das
mov
mov
addl
lret
cld
lock
lea
and
jno
bound
cli
mov
bnd
and
icebp
adc
mov
mov
out
or
sti
jge
sub
add
or
aas
dec
push
in
pop
gs
lret
test
test
push
jp
lahf
sub
inc
sbb
inc
jo
xchg
add
icebp
jg
dec
adc
imul
mov
dec
fimull
cli
sbbl
out
incb
lret
insb
jmp
add
ror
mov
mov
inc
or
loopne
pop
cmp
xchg
shlb
loope
loope
into
push
cmpsb
enter
scas
in
sbb
add
in
and
aam
popf
rorb
dec
cld
ja
cli
mov
dec
arpl
fsubrs
inc
into
sub
jge,pn
call
mov
aaa
hlt
sbb
call
pop
and
xlat
loop
pop
mov
pop
cmp
movsb
inc
jp
test
pop
sub
popf
xchg
xchg
adc
in
push
icebp
and
xor
dec
sub
je
gs
lahf
mov
es
mulb
mov
int
pusha
pop
in
cmp
hlt
xchg
dec
xchg
push
push
adcb
mov
and
push
fmuls
jle
ret
xchg
out
shlb
mov
cmp
or
sahf
fs
mov
ficomps
xchg
mov
pop
cmp
or
xchg
mov
idiv
cmp
dec
imul
cmp
es
js
cmp
stos
rcll
out
inc
cs
stos
xchg
scas
xor
cmc
jbe
push
leave
pusha
or
push
sub
xchg
mov
adc
mov
sbb
cld
mov
js
dec
repz
insb
in
std
iret
xor
dec
js
dec
int
or
cmp
cli
sqrtps
mov
mov
adc
mov
lods
xlat
into
jge
andl
adc
lods
dec
cs
dec
inc
sub
ret
adc
btr
jl
cmp
lahf
jb
movsl
aas
aad
adc
cmp
aaa
push
dec
fldl2t
jno
es
int3
fdivs
adc
aas
imul
cmpl
leave
rorl
aaa
dec
jge
stc
jg
pop
scas
or
ret
mov
jge
iret
sti
mov
jp
inc
xchg
lcall
ret
dec
inc
lods
jecxz
subl
icebp
bound
or
add
or
sbb
sub
sub
outsl
sbb
inc
pop
xchg
mov
or
pop
push
ud2
out
sbb
xchg
adc
subb
xor
fs
dec
xchg
mov
or
jecxz
shr
out
jbe
mov
cmp
cli
int
or
pop
test
xchg
out
subb
fbld
pop
out
push
cmpsl
cs
loop
inc
fsubrl
fs
dec
rorl
aas
push
push
lahf
shl
das
inc
adc
cmp
cltd
cmp
std
add
push
mov
jmp
jnp
lret
xchg
cld
mov
mov
jecxz
sbb
inc
leave
jl
or
idivb
roll
fisubrs
les
jmp
jmp
popf
mov
cld
adc
sqrtps
into
inc
pop
cli
sub
out
push
insl
dec
sahf
cmp
out
jne
hlt
and
push
aam
mov
sahf
xor
mov
xchg
add
mov
add
or
mov
dec
ljmp
sbb
mov
sbb
pop
aam
ret
addb
mov
filds
inc
stc
mov
in
scas
cmc
in
and
push
or
or
mov
xchg
add
push
mov
andl
leave
inc
mov
popa
mov
mov
insl
pop
dec
fwait
rcrl
mov
repnz
mov
mov
out
cmp
xlat
shl
mov
lods
cmp
jmp
fcoml
xor
aad
mov
insl
sub
lcall
cmp
inc
pop
and
loopne
sarl
movsb
testb
sahf
stos
cld
das
movsl
push
and
sahf
pop
jp
fldenv
addr16
fwait
jo
or
dec
daa
xor
sbb
lcall
add
in
ret
lret
stos
mov
add
out
jbe
and
push
icebp
sarb
cmc
inc
and
cmp
pop
dec
movb
inc
pop
inc
add
mov
je
adc
mov
jo
jnp
or
rcrl
jnp
or
push
or
fadd
jge
shlb
or
icebp
dec
add
mov
outsl
push
xchg
iret
sub
sbb
ljmp
aad
jnp
xchg
std
fistpl
mov
add
pushf
dec
cmpsl
aaa
out
mov
and
ret
inc
or
mov
ficoml
adc
xchg
dec
sub
push
enter
ja
mov
xchg
std
ret
mov
fisttps
adc
lcall
jo
loopne
sbb
and
fnsave
or
out
int3
or
mov
push
and
sub
test
fistps
adc
arpl
nop
jl
push
add
adc
jecxz
insb
ret
push
in
call
pop
pop
aaa
or
pop
adc
push
push
push
hlt
loope
or
pop
inc
xchg
adc
data16
or
lock
mov
sahf
popf
imul
cmp
xchg
sub
push
xorb
test
int
cmp
loop
and
andb
add
dec
rcrb
es
adc
adc
je
rolb
out
roll
inc
imul
outsb
cli
jecxz
jo
xor
sbb
cmpsl
xor
stos
xor
push
sbb
push
and
push
jmp
cld
dec
and
subb
jne
mov
sete
inc
xor
shr
scas
imul
stc
lock
hlt
sbb
pop
popf
and
adc
scas
sub
jp
jne
push
sub
sbb
sarb
cmc
nop
push
inc
je
push
or
addr16
mov
jmp
loope
or
jnp
inc
or
add
cltd
or
adc
jge
cli
xchg
shl
push
mov
lock
out
inc
fwait
and
and
pop
push
jle
mov
movsb
daa
sub
or
lret
inc
sub
mov
push
mov
addr16
jno
roll
push
mov
in
bound
mov
jne
xchg
adc
fisubs
adc
xchg
jg
scas
dec
out
xchg
mov
hlt
fwait
sub
mov
fcmove
xchg
sarl
and
aad
lret
out
sub
sub
stos
adcl
cmpsb
repz
mov
int3
jae
xor
xchg
les
pushf
test
mov
and
add
mov
sahf
insl
xchg
xchg
inc
add
xchg
add
rcll
iret
and
sbb
sub
das
add
pop
pop
movsb
xchg
add
movsb
in
test
addl
cmp
arpl
push
jns
fs
aas
pushf
push
dec
adc
mov
pop
add
cli
push
dec
mov
push
inc
jb
xchg
add
dec
or
xchg
daa
imul
mov
divb
stos
mov
or
data16
pusha
adc
popf
loope
loopne
mov
mov
aam
scas
lods
lret
lods
icebp
dec
push
inc
jno
vpshld
mov
xor
loopne
jnp
popa
daa
and
sub
test
inc
adc
mov
pop
inc
aaa
mov
or
dec
mov
xchg
xchg
loope
dec
or
push
ljmp
push
es
iret
scas
mov
insl
cmpsl
test
mov
jg
xchg
adc
inc
out
cltd
mov
cld
push
adc
vcvttps2dq
pushf
inc
inc
push
xchg
push
int3
call
push
mov
in
cli
xchg
jns
or
call
pop
aaa
psraw
loopne
pop
xor
or
rolb
fstps
xor
jns
sti
mov
mov
xchg
jae
mov
push
and
outsl
aad
mov
push
outsl
loopne
jmp
rsm
dec
jo
xchg
jmp
mov
xor
lods
loop
pop
lret
cld
sub
push
add
int3
ljmp
pop
fnstenv
mov
rcl
fcomps
cltd
leave
adc
and
loopne
mov
mov
cs
jno
fisubl
mov
pop
dec
cli
inc
dec
imul
arpl
pop
popf
loopne
aam
jb
int3
jno
lods
dec
ret
mov
int
dec
insb
adc
pop
repnz
outsl
outsl
add
sub
pusha
inc
lcall
idiv
adc
mov
mov
cs
push
add
insb
fistps
dec
arpl
ds
movsb
nop
test
fsubrs
js
ss
pop
jae,pn
fcmovb
and
out
dec
loop
aas
push
test
mov
js
jnp
jg
dec
dec
nop
in
mov
movntq
neg
sarb
stos
mov
sbb
lock
jl
sar
push
vpshlq
xchg
data16
data16
lods
sbbl
adc
arpl
arpl
sbb
jb
aad
inc
inc
sbb
jnp
cmp
popa
mov
fiadds
int
adc
stos
mov
cs
cs
fs
test
test
adc
push
push
cmpsb
popf
ja
data16
les
lcall
add
cltd
dec
sub
out
jo
dec
mov
repz
insl
popa
cmpl
sbb
divl
rorb
mov
jge
aas
ja
jp
mov
mov
test
pop
jle
cli
adc
int
add
mov
and
arpl
jg
cmp
das
rorb
insl
das
adc
nop
fmulp
popa
fucomip
xor
dec
lds
jne
sti
adc
sbb
push
cld
cld
and
insb
mov
mov
sbb
push
lahf
dec
pop
sub
lods
mov
cltd
sub
es
je
or
mov
or
pushf
test
imul
mov
xor
mov
test
cs
mov
xor
cmc
adc
out
adc
mov
lods
in
ret
or
mov
ja
mov
fwait
sti
pop
xor
fs
insl
lret
xor
push
jae
test
leave
das
adc
add
in
pop
push
jle
in
call
mov
pop
pop
or
jns
sub
int
imulb
das
dec
jbe
mov
outsl
inc
fidivs
roll
cwtl
cmp
sub
in
jo
aad
pusha
or
sbb
jg
sub
roll
pop
icebp
in
adc
dec
sub
rcll
mov
out
mov
fnstcw
roll
popa
test
hlt
insb
dec
jge
xorb
cmpb
pushf
lahf
push
lret
jnp
or
dec
addr16
lcall
int
jns
cmp
mov
and
or
shrb
xchg
mov
pusha
fmull
jl
or
rorb
sub
cmpsb
add
jle
pslld
sbb
cmpsb
xor
pop
enter
mov
test
add
jle
cmp
cli
push
push
inc
mov
inc
xor
hlt
pop
cmp
adc
sub
call
ja
jne
add
int
jo
stc
dec
mov
enter
pop
or
dec
adc
das
js
add
mov
push
sarb
gs
mov
jns
lret
xorl
je
ficompl
mov
and
cmp
dec
data16
sbbb
adcb
xchg
into
scas
shrl
cli
xchg
pop
dec
stc
cmp
sbb
dec
xor
sbb
mov
icebp
jb
xchg
cmp
mov
and
call
jl
rcr
test
or
loop
stc
bound
in
push
or
jae
pusha
dec
lods
lods
add
mov
adc
mov
cs
jae
lret
inc
je
mov
inc
mov
test
xor
std
movsl
pop
idivl
fists
adc
inc
iret
xchg
scas
lahf
int3
test
or
shrb
inc
xchg
imul
arpl
mov
or
inc
mov
pusha
push
mov
inc
outsl
sub
je
mov
pop
das
pop
aaa
in
jle
cli
adc
add
bound
bound
gs
push
les
push
jmp
out
push
add
xchg
adc
sbb
js
cmpsl
lret
mov
out
lcall
cmp
pop
mov
divl
subb
xchg
imull
inc
dec
stos
xor
mov
cmc
xchg
sbb
mov
mov
mov
mov
sbb
inc
xchg
or
xchg
mov
sar
cmpsl
int3
inc
adc
out
movsb
and
xchg
fldcw
int
and
sub
mov
adc
mov
sti
inc
in
mov
ljmp
adcl
pop
shll
test
inc
lret
out
xlat
pop
sub
xor
daa
xchg
inc
cwtl
xchg
sub
mov
iret
mov
jg,pn
mov
xorl
addb
pop
mov
das
leave
inc
jge
rcrl
mull
mov
imul
push
mov
mov
cli
mov
int3
loop
dec
lods
or
or
cmp
movsl
fwait
xor
jl
mulb
jmp
mov
outsl
stos
int3
push
addl
jl
and
mov
mov
xchg
inc
ret
xchg
add
inc
add
sub
int
push
inc
ljmp
adc
and
mov
pop
sub
xorl
jmp
sub
push
js
outsl
shlb
inc
enter
fdivl
pop
out
lea
test
dec
jne
pop
mov
xlat
cmp
jo
mov
cmp
cltd
cmp
mov
push
lcall
mov
loope
stos
adc
cmp
adc
in
adc
jne
sbb
sbb
aad
adc
cmpsl
pop
les
inc
test
cli
arpl
or
test
or
xor
js
and
shrl
mov
or
clc
jg
inc
std
fcom
pop
mov
xor
pop
or
xchg
out
mov
in
mov
cltd
lods
addl
mov
negb
jle
jmp
movsb
loop
fisubs
out
jmp
fcompl
jle
call
dec
mov
stos
mov
test
mov
ret
jno
dec
stc
cmp
lods
mov
ret
xor
cs
xchg
cmp
in
incb
out
sbb
lods
aam
outsl
xlat
inc
mov
test
lret
loope
loopne
or
add
repz
push
daa
movsb
divl
push
push
mulb
sahf
cmc
cmp
cmc
and
out
cwtl
bound
or
imulb
roll
cmpsl
jge
imul
cmp
mov
adc
fs
imul
mov
pop
mov
imul
push
rorb
jle
adc
push
pop
cltd
lahf
lahf
pop
adcb
fisttpll
adc
ljmp
sbb
jae
orb
inc
outsl
jo
fwait
rcll
inc
popa
cld
cmp
mov
and
cmp
test
cmp
mov
fdivrs
lret
test
or
mov
fwait
sbb
mov
out
sub
xor
cmc
xor
ret
jmp
aas
add
inc
cmpsl
adc
mov
and
jo
and
in
push
push
jne
xchg
mov
inc
xchg
dec
lret
out
scas
lods
imul
out
cmp
or
mov
inc
enter
xchg
std
dec
and
cmp
pop
movsl
sub
jp
mov
nop
sub
sahf
push
repz
pusha
and
movsl
and
int
rcrb
mov
or
orb
scas
mov
push
and
mov
in
sahf
inc
rcl
inc
mov
push
stc
jnp
add
dec
nop
jb
jae
gs
mov
inc
cmp
mov
dec
sbb
push
jbe
aam
scas
jns
push
mov
sub
xchg
test
gs
mov
jp
adc
aaa
or
xor
adc
and
fstl
adc
fidivrl
dec
test
cltd
addr16
sub
pushaw
xor
pusha
xchg
cmpsl
inc
push
out
cli
ret
lods
and
test
xchg
jns
inc
mov
ds
test
ds
xchg
pop
popa
dec
pop
push
sbb
cwtl
pop
stos
outsl
xor
sbb
sub
jo
ljmp
pop
out
sub
into
jmp
sti
or
dec
out
shrb
and
out
lods
sub
sbb
mov
sbb
or
sbb
mov
outsl
nop
jns
cld
clc
imul
fidivl
out
outsb
in
mov
iret
jp
imul
cwtl
push
push
stos
aad
mov
jno
popa
cmp
in
adc
mov
test
inc
popa
adc
add
int
or
fbld
cmp
test
sub
or
xor
and
cmp
or
insb
mov
dec
stos
cmp
rorl
lcall
aaa
gs
xor
gs
jo
dec
insb
lcall
mov
dec
xchg
test
sub
lcall
aas
sub
jecxz
mov
mov
es
pop
adc
insb
adc
ret
push
lods
mov
pop
movsb
push
fnstcw
xor
pop
sbb
ss
pop
dec
into
pop
mov
sbb
das
xor
push
add
xchg
aas
idivl
push
movsb
push
jmp
outsb
mov
inc
add
mov
xchg
dec
add
sbb
xchg
xchg
stos
xchg
daa
lods
imul
jo
out
adc
sbb
push
hlt
sub
sub
rcrb
inc
sti
xchg
test
push
lods
pop
xchg
sub
lahf
out
inc
xchg
test
and
jmp
or
push
lret
or
cmp
rcrb
mov
mov
xor
or
test
cmp
fwait
fs
test
xor
cmp
push
push
add
dec
out
xchg
xchg
xor
addr16
lea
ret
or
add
add
les
xchg
ficomps
sarb
hlt
int3
add
sahf
jl
push
push
dec
lret
std
jge,pt
imul
test
mov
das
or
sbb
es
adc
jbe
pop
cmpsl
ret
lods
hlt
push
push
adc
nop
fcmovb
jecxz
test
mov
es
aad
jmp
orl
xor
scas
ds
scas
rclb
push
ret
add
icebp
dec
in
or
jno
clc
icebp
cmpsb
push
imul
adc
pop
addr16
jle
cmpsb
jnp
jae
xchg
in
movsl
faddl
ror
lahf
addb
jg
lcall
dec
fistl
cmp
arpl
pop
lea
adc
and
pusha
xchg
bound
mov
mov
xchg
sbb
call
mov
pop
sub
in
push
fdivrs
sti
cmp
sub
jmp
xchg
xor
push
cmp
ret
adc
inc
jecxz
daa
jno
aas
mov
repz
repz
popa
outsl
cmp
ret
pop
add
dec
mov
inc
adc
dec
loop
or
addr16
cmc
loop
pop
cmp
mov
loopne
ja
pop
ss
push
inc
adc
rcrb
ljmp
fs
flds
cmpsb
lea
jno
mov
jg
shlb
xchg
shll
pop
repnz
fsubr
imul
mov
stos
ret
gs
mov
mov
push
push
sub
adc
out
add
out
ljmp
les
push
fistpl
cmp
adc
and
cmpsl
pop
xor
aas
xchg
mov
inc
pop
lea
xchg
bound
mov
movsb
call
xor
jge
sarl
sub
sub
in
xchg
cmp
dec
xor
es
and
add
aas
loop
nop
shlb
xlat
cmc
adc
mov
mov
mov
popf
jg
lret
or
cmp
mov
mov
cwtl
hlt
mov
addb
sbb
fwait
pop
mov
fwait
inc
lods
clc
adcb
out
sahf
enter
add
lea
fs
fidivs
stos
mov
stc
out
jo
jnp
lcall
pop
movsl
pop
lret
incb
std
sbb
bound
cmc
cld
push
sahf
out
inc
ret
jp
aaa
pusha
adcl
inc
fwait
cmc
dec
adc
xor
test
repz
and
rcll
jl
xor
cs
push
aas
int3
shl
daa
xchg
or
repz
xchg
fsubr
mov
insb
adc
push
cli
xchg
or
inc
or
daa
sub
xchg
push
fisttps
out
push
xchg
xor
mov
movsl
sub
jno
mov
xchg
xor
jae
or
das
xor
and
pop
sti
lds
or
je
lcall
pop
inc
out
fwait
xlat
scas
ljmp
push
stos
scas
incb
addr16
xchg
mov
and
inc
push
jle
adc
cltd
ds
mov
xor
in
mov
sbb
sub
sbb
ja
lock
mov
pop
mov
mov
out
push
add
fstpl
cmpsl
addr16
movsl
loope
mov
cltd
dec
cmp
dec
jl
arpl
in
loopne
sub
not
insb
pop
sbb
jecxz
arpl
jno
js
test
popf
call
jle
sbb
mov
std
daa
jae
mull
lock
lods
sbb
or
adc
xor
sbb
andb
jmp
leave
lock
xchg
or
cmc
fistpll
mov
and
mov
jg
mov
fimuls
ss
mov
hlt
lock
sub
test
add
sub
jnp
mov
mov
mov
sub
out
pop
sub
inc
dec
mov
addb
xchg
push
jnp
mov
int
or
pusha
mov
je
mov
push
jge
jns
xchg
mov
adc
inc
xor
rolb
in
sub
popa
add
or
aad
sahf
xor
lret
mov
push
in
xchg
fstps
ss
mov
xor
mov
fildl
aam
fwait
xor
push
nop
fprem
faddl
test
fildll
add
movsb
scas
push
mov
ds
xor
test
push
sbb
mov
test
inc
and
cs
pop
cltd
sarl
lea
in
and
push
cmp
int3
xchg
xchg
sub
shlb
in
mov
les
add
sbb
xlat
push
sub
mov
mul
je
add
mov
mov
ret
mulb
sub
pop
mov
mov
mov
sbb
shl
ljmp
xor
out
dec
and
cltd
out
das
cwtl
pop
aad
xchg
pop
je
xlat
mov
xchg
add
pusha
pop
ljmp
add
jns
ret
shlb
out
gs
xor
mov
cli
aam
test
daa
jns
and
mov
adc
jmp
xchg
add
ss
mov
cmp
add
sub
sbb
lahf
mov
cmc
xchg
stc
rcrb
mov
mov
jno
jns
hlt
jbe
loope
and
xor
add
pop
lret
call
adc
je
and
fdivp
test
ja
fdivrs
test
mov
aam
or
mov
pop
daa
cmp
pop
mov
dec
cmpsl
loope
lret
push
cmp
inc
push
in
and
jo
js
imul
or
mov
and
push
es
dec
push
push
testl
add
xchg
jae
and
idivl
clc
pusha
push
dec
push
inc
push
and
cmp
jns
aaa
or
fnsave
daa
sub
cli
cmpsl
rcll
or
icebp
shlb
xor
adcb
pop
xchg
aam
lock
out
jl
and
xor
adc
mov
dec
in
outsb
dec
nop
or
or
add
sub
jno
push
xor
pop
jnp
adc
movsb
add
add
dec
mov
or
cs
sti
pop
out
push
jle
ja
adc
jbe
inc
xor
jo
xchg
iret
xor
cld
mov
adc
outsb
jno
dec
inc
jmp
out
xchg
cmp
cli
outsl
shl
jb
sub
mov
mov
cmp
dec
outsl
rclb
and
andb
mov
and
lahf
mov
sub
jno
fstp
das
outsl
jne
adc
sbb
in
std
adc
pop
movsl
lock
push
push
loop
mov
outsl
or
mov
lods
popa
mov
inc
pusha
mov
jp
test
push
fwait
push
and
std
mov
mov
enter
push
es
shrl
jl
pop
or
or
out
inc
push
mov
std
movsl
movsl
cmp
cmpsl
jecxz
sub
add
stos
or
dec
and
orb
pop
jp
repz
cmp
and
xchg
and
pop
pop
jg
push
or
xchg
jmp
or
rorb
data16
es
adc
gs
outsl
aam
pop
daa
scas
movl
add
mov
pop
bound
add
aam
loop
lahf
push
imul
mov
sbb
mov
mov
cli
jo
lods
xlat
dec
cmp
xchg
aaa
iret
inc
xor
xor
imul
cmp
inc
xchg
adc
div
enter
mov
mov
or
dec
mov
shlb
xchg
xchg
pop
fwait
pop
xchg
sub
push
not
cmp
gs
int
cmpsl
stos
outsb
in
je
les
jecxz
fcmovb
mov
xchg
mov
inc
xchg
pushf
je
push
mov
adc
mov
stc
imul
pop
adc
scas
inc
or
rorl
cwtl
push
icebp
aam
mov
cltd
push
mov
dec
mov
cmp
popf
adc
sbb
addr16
adc
and
enter
ret
xchg
or
mov
rclb
int
nop
mov
mov
and
pop
xchg
sbb
mov
test
mov
fistps
jp
fcomps
jp
inc
outsl
mov
xor
jno
inc
cmp
push
sahf
es
mov
fisubrl
xor
sbb
lcall
xchg
es
inc
mov
xchg
insl
push
mov
mov
sub
fldcw
push
and
es
nop
pop
mov
arpl
mov
xor
data16
mov
cli
sbb
cli
pop
mov
shll
enter
aas
popl
inc
xor
or
ja
jb
in
pushf
mov
jecxz
push
lret
jbe
aad
insb
adc
jo
adc
scas
xchg
imul
pop
in
xor
mov
jle
std
cmpsb
xor
dec
fucomi
add
cmpsl
rolb
test
call
add
std
adc
sbb
lahf
lods
inc
mov
es
loop
sub
jae
xchg
mov
rcrb
inc
mov
mov
fs
fwait
sbb
enter
cmpsl
mov
mov
aam
mov
js
test
xlat
fdivrl
lds
scas
jl
jmp
in
ja
imul
js
and
scas
adc
push
mov
push
movsb
add
aam
pop
or
and
cmc
push
add
push
dec
add
cmp
nop
cmp
dec
sarb
jb
cld
jp
mov
repnz
sti
push
movsl
jo
xchg
aas
inc
rolb
lds
cmp
and
lea
sub
sbb
push
aaa
mov
mov
hlt
mov
push
add
inc
insb
enter
cmp
jbe
xor
ss
shlb
lcall
mov
or
xor
outsl
or
jbe
scas
lcall
adc
call
or
jb
inc
out
test
pushf
inc
in
enter
cld
jae
outsl
sbb
test
inc
orl
imul
js
push
or
out
insl
test
xor
adc
pop
orl
pop
ja
inc
inc
sbb
ss
jg
in
fisubl
dec
in
mov
sti
jle
popa
data16
mov
mov
cmp
or
dec
xorb
adc
popf
push
push
push
add
lock
filds
stc
sub
ss
xor
inc
add
dec
sbb
stos
pop
in
test
jae,pt
xor
adc
mov
adc
add
rol
aad
fdivs
pop
xchg
push
dec
std
or
fidivrl
leave
xchg
popf
mov
aaa
xor
push
push
mov
or
cwtl
cld
or
mov
jg
jecxz
push
sahf
aam
mov
sbb
mov
loope
xchg
movsb
jbe
aas
hlt
pusha
int
adc
lahf
push
into
sub
sarb
xor
and
in
lret
orb
lea
je
lcall
add
add
and
addb
and
mov
adc
xchg
inc
mov
push
push
lea
add
roll
xor
jl
int3
arpl
stc
rol
scas
outsl
mov
fcmove
mov
pop
adcl
and
jae
mov
jo
stos
lods
push
push
push
lcall
xchg
push
and
mov
in
call
loopne
xchg
pusha
ljmp
pushf
mov
roll
mov
fstl
add
adc
lret
mov
stos
lret
pop
inc
lret
xor
pop
arpl
in
imul
jecxz
icebp
dec
dec
loop
icebp
in
fs
add
cltd
mov
and
jg
add
fldl
mov
movsb
dec
pop
ljmp
or
cmp
aam
rol
push
arpl
fildll
jle
outsb
aas
xlat
enter
insl
xchg
lahf
mov
popa
rcrl
xchg
mov
pop
std
jno
sub
dec
jb
icebp
adc
xchg
stc
addr16
mov
xor
into
mov
pop
outsl
lret
fisttps
lods
aaa
shrl
shl
or
mov
mov
nop
pop
push
dec
and
mov
adc
shr
imul
mov
outsb
shlb
xchg
jnp
cmp
adc
mov
add
jo
mov
cmc
and
aaa
mov
or
iret
fwait
in
xor
xor
lahf
mov
mov
insl
push
mov
mov
mov
pop
cmpsb
dec
pop
mov
movsb
outsb
lcall
out
pop
inc
js
cmp
sub
sub
cmp
dec
or
cmp
cmc
jecxz
mov
lea
mov
push
pop
lea
adc
ss
push
sub
jnp
or
fisubs
add
mov
jg
push
inc
pusha
fs
ret
mov
mov
inc
pop
sbb
js
lods
push
in
pop
mov
jno
mov
pop
stos
cmpsw
cmp
adc
cli
xor
mov
push
data16
movsb
pop
filds
daa
mov
sub
cs
jne
sbb
popf
fnstenv
mov
mov
sub
pop
test
mov
fbstp
sbb
clc
push
add
out
xchg
mov
adc
lret
pop
inc
xchg
push
data16
lret
arpl
rclb
pop
shll
leave
jbe
xor
jae
or
mov
dec
or
lret
les
enter
mov
andl
pop
pop
xor
sbb
aam
pop
out
mov
mov
or
xchg
jecxz
pop
push
scas
imul
mov
int
adc
loope
insl
sahf
test
push
iret
cmp
shll
mov
pop
mov
push
out
jmp
and
loope
sbb
xor
xchg
das
pop
xor
sbb
push
xor
cltd
xchg
insl
fldl
push
jg
out
rolb
or
gs
daa
movsb
xor
int
ja
insl
lea
in
adc
fisttpll
sbb
inc
xchg
xchg
mov
cmp
sub
sbb
push
dec
stc
mov
jecxz
dec
adc
xchg
lahf
jo
adc
js
mov
mov
add
dec
pop
rcrb
stos
adc
aad
je
xchg
sub
sub
hlt
adc
pusha
cmpsb
in
push
ja
das
jno
rolb
shl
scas
jo
sub
cmp
pop
push
jae
cli
sub
arpl
pop
inc
mov
pop
out
push
mov
cmc
scas
xchg
out
jmp
hlt
popf
iret
jno
pop
fmul
add
in
faddl
or
in
mov
scas
fldcw
push
or
push
sahf
in
shrl
decb
or
jo
aas
rcrb
sar
mov
repnz
popf
push
pop
jp
xchg
in
push
loop
hlt
jmp
adc
adc
push
sbb
xor
cmp
add
mov
cs
jecxz
scas
andb
fnstsw
ret
insb
jge
sbb
je
sahf
into
push
mov
ret
push
xchg
and
xchg
lock
pop
cmp
and
mov
int
mov
ja
and
mov
stos
jmp
repz
add
aam
imul
lret
mov
or
or
adc
int
cmp
in
lods
jae
sbb
and
jge
pop
test
push
mov
out
addr16
adc
imul
out
push
mov
dec
mov
fimuls
aad
and
mov
inc
mov
lahf
mov
or
les
sub
fld
add
ret
jns
test
sub
bound
idiv
adc
xorb
cmp
mov
adc
call
adcl
push
xchg
cwtl
addr16
or
int3
aad
dec
fstpl
xchg
imul
inc
rcl
cmpb
jnp
xor
ficompl
cmp
inc
mov
mov
and
orl
es
lods
je
mov
jg
adc
xor
inc
push
fs
std
xchg
or
hlt
sbb
jl
pop
push
or
test
hlt
xor
push
inc
inc
das
in
mov
not
xorl
fs
mov
push
fldcw
pop
divl
lret
scas
aam
dec
cmp
ljmp
add
call
mov
js
jl
repz
fstps
repnz
jp
mov
cltd
aad
lahf
inc
mov
or
cmp
ja
lret
dec
into
rolb
dec
xor
xor
adc
addr16
popf
in
xorl
insl
xor
adc
cwtl
ret
mov
inc
sbb
ljmp
getsec
and
push
cltd
pop
mov
stos
sarb
and
jl
add
mov
sub
cld
sub
fs
jno
pop
and
testb
add
icebp
adc
sub
sbb
pop
push
cmpsb
add
sbb
sbb
xchg
mov
imul
xchg
dec
sub
jo
fs
adc
stc
inc
sbb
cmp
loop
sarl
inc
sbb
cmp
sbb
dec
sbb
out
in
imul
movsb
stc
sbb
push
add
mov
leave
dec
sarl
std
jge
inc
cmpsb
popf
adcb
add
sti
lods
cwtl
mov
mov
sub
jae
js
xlat
and
fsubrl
jno
lods
popf
sub
out
jmp
out
ja
dec
sbb
and
or
push
test
push
bound
idivb
or
test
dec
adc
loope
les
pop
icebp
jmp
pop
rclb
or
push
and
dec
cltd
lret
pop
add
add
xlat
jb
out
pop
lcall
imul
rol
or
lea
cmp
xchg
cld
cmpsb
fisttpl
gs
imul
adc
loopne
inc
lods
or
jmp
and
in
push
mov
fcoml
xchg
mov
xchg
sbb
rclb
cmp
cmp
or
jmp
es
popa
adc
push
adc
mov
mov
xor
mov
sbb
cmp
outsl
mov
dec
out
pop
js
sbb
pop
push
adc
popf
push
lock
fimuls
xchg
aaa
call
dec
sbb
dec
in
jl
mov
adcl
pushf
or
xchg
pop
cli
pop
or
test
xchg
mov
je
mov
out
pop
ret
sub
outsb
arpl
jl
or
and
jno
sti
adc
mov
sub
shl
loope
mov
push
into
imul
ljmp
xor
mov
lock
stos
mov
je
mov
rcr
fisubs
ljmp
shr
jge
mov
nop
add
lcall
xlat
xchg
lahf
stc
shl
or
cmpsb
nop
pop
mov
push
out
imul
iret
or
lock
imul
fs
outsb
fimuls
mov
jns
incb
jno
mov
mov
lea
imul
out
cmp
and
shll
dec
mov
adc
leave
pop
loopne
mov
pop
pop
mov
sbb
adc
int
push
test
mov
mov
addr16
xor
gs
pop
pushl
xchg
sub
add
subb
addr16
push
jle
movsb
sbb
imul
leave
xor
sub
mov
jae
leave
fwait
ja
fisubrl
mov
cld
pop
mov
mov
mov
dec
mov
mov
lret
pusha
rcll
pop
jge
cmp
sub
mov
movsb
cmp
bound
cmp
push
pop
loope
cld
or
lds
inc
pop
lcall
int
daa
jne
hlt
jl
mov
inc
pop
lock
push
pop
mov
add
mov
dec
shrb
cmp
lcall
mov
xor
pop
or
inc
mov
std
les
mov
lock
xor
int3
outsl
lds
aas
movsb
pop
jecxz
adc
push
mov
and
fistpl
sbb
push
lock
or
cmp
push
push
add
test
mov
aas
sbb
ret
jle
in
or
sbb
xchg
sub
pushf
pop
pop
mov
cmpsl
or
cmp
fimuls
xor
cmpsl
insb
enter
cmpsl
bound
jle
jbe
lods
pop
enter
sbb
xchg
pop
and
push
rorl
cwtl
jo
fsubr
adc
add
rcl
jns
or
mov
jns
push
inc
arpl
fidivrs
or
subl
mov
sti
inc
or
dec
pop
mov
xchg
movsl
rcr
iret
enter
fwait
iret
cs
out
ret
arpl
jmp
jle
iret
pop
add
aaa
outsb
in
mov
addr16
inc
pop
les
inc
lods
and
rcrl
xor
jae
les
jbe
bound
inc
das
xor
popa
lds
dec
jge
outsl
cltd
push
outsl
shll
push
sbb
icebp
aad
jp
xorb
jecxz
ja
push
ljmp
clc
or
imul
clc
xchg
adc
fistl
or
inc
dec
pop
rclb
nop
mov
hlt
jmp
cmpsl
add
adc
mov
ficomps
jle
sbb
jne
inc
mov
mov
icebp
cmp
jle
fimull
aad
shrb
and
sub
sub
xchg
jl
cmp
adc
icebp
mov
adc
mov
mov
ja
jecxz
or
xchg
push
push
in
inc
inc
sarb
cmp
cli
dec
and
xlat
adc
loope
or
mov
xorl
ret
int
faddl
in
dec
sbbb
mov
aaa
xchg
pop
sbb
movsl
ret
add
js
xchg
sbb
test
push
scas
sahf
and
xor
jae
out
rcrb
pop
ja
cmp
insl
leave
stos
movsb
push
push
xchg
ljmp
pop
fcoms
addr16
pop
jae
or
cmp
hlt
and
add
mov
xor
cmp
pushf
in
sub
xor
cltd
aam
mov
inc
out
fadds
sbb
test
sbb
dec
push
inc
aaa
xor
sub
mov
call
loopne
xor
mov
cmpsb
cmp
or
mov
pop
push
insb
push
dec
aaa
or
inc
lahf
mov
xchg
pop
and
pop
mov
js
cmc
ds
out
sbb
sahf
or
or
int3
lock
repnz
sub
out
jno
rorb
ret
lods
bound
dec
cmc
xchg
psubb
mov
sahf
adc
nop
std
sub
cmpsl
std
mov
in
hlt
out
mov
stos
push
mov
dec
es
in
mov
ja
rclb
lahf
jo
and
pop
mov
pop
jmp
scas
pop
nop
es
dec
ds
les
inc
test
scas
pop
rorb
pop
mov
add
sub
lods
xchg
cmp
dec
push
sub
lock
dec
jne
mov
ja
xor
mov
xor
lret
xchg
fs
push
adc
sarl
lahf
cmp
in
test
repnz
add
sub
daa
fisubrl
stos
jl
push
and
pop
js
mov
push
mov
ret
scas
gs
push
aam
xchg
insl
push
mov
push
sub
mov
fucom
adc
push
mov
jecxz
fldl
jno
outsb
cmpsl
cwtl
fistpl
mov
jae
jle
pushf
pushf
jg
mov
cwtl
les
out
out
mov
fadd
mov
insb
sbb
jnp
jge
es
rcrl
jno
aas
inc
xchg
cs
jmp
adc
ss
xlat
mov
dec
sub
xor
sahf
call
ret
adc
std
cwtl
lock
je
cwtl
inc
fdivs
xorl
mov
mov
sbb
scas
or
dec
fcomps
movsl
adc
fcoml
inc
insl
das
aaa
add
fiaddl
into
mov
mov
cmpsl
jl
in
loope
push
pop
adc
fdiv
mov
lea
jl
add
sbbl
out
out
push
pop
in
test
jp
mov
pop
bound
xor
push
jmp
lea
addb
fcomip
dec
xor
cs
popf
dec
push
inc
repz
xor
adc
xorl
push
mov
int3
into
xchg
lods
mov
xchg
outsb
jmp
xchg
test
mov
ds
inc
cmpsb
sbb
sub
pop
clc
mov
nop
bound
adc
ret
out
adc
aam
mov
mov
outsb
hlt
movsl
popf
cmp
into
mov
ret
hlt
mov
mov
add
cmp
dec
xor
inc
movsb
mov
push
shlb
or
dec
pop
ljmp
fldt
arpl
mov
mov
adc
xchg
jne
ljmp
adc
push
mov
cmpsb
sbb
jns
or
pop
or
pop
idivl
ss
mov
aad
push
inc
mov
fwait
push
hlt
negb
mov
fs
jge
mov
out
call
lcall
loop
or
into
sbb
test
cli
sti
hlt
add
lock
sarl
dec
mov
iret
inc
adc
pusha
xor
jg
fiaddl
cmp
aaa
pop
lcall
xchg
xchg
int3
sub
test
in
cld
dec
orl
fdivl
push
clc
test
jg
out
inc
lcall
pop
mov
jo
sub
push
cwtl
stos
cmpsl
out
insl
aad
push
jae
jle
insl
dec
sarl
mov
lret
in
icebp
leave
movsl
pop
sbb
jne
outsl
pop
ds
clc
or
jmp
imul
cs
jb
jnp
outsb
out
mov
test
add
xor
xchg
out
ljmp
jo
jno
inc
xchg
and
push
jno
fidivs
add
jnp
cmp
add
fsubp
push
jno
aas
mov
inc
out
add
jns
arpl
lods
push
bound
ds
sahf
ljmp
mov
in
pop
arpl
jb
push
xchg
dec
movsb
iret
into
rorb
shl
cmp
mov
mov
out
xor
lds
aam
pushl
fldenv
mov
push
cmp
jecxz
mov
jmp
js
decl
lcall
out
mov
movswl
popf
xor
pop
adc
out
fists
xchg
cli
inc
cs
add
int
add
aad
popf
sbb
sbbb
in
das
push
stc
inc
mov
clc
lods
fldl
fsubrl
inc
sub
adc
shlb
sub
or
scas
pop
out
outsb
xor
call
test
dec
imul
jl
xor
jmp
pop
sbb
insb
scas
pop
mulb
xchg
fnsave
cwtl
cmpsb
je
daa
sbb
fiadds
fs
cli
jmp
in
fldt
xchg
mov
fsubrl
or
and
push
shl
and
and
xchg
sbb
loope
into
call
jne
loop
xchg
lcall
adcl
pop
xchg
push
pop
jo
loop
out
sbb
test
cld
add
notb
inc
dec
jae
mov
stc
jb
sub
dec
xchg
pop
in
outsl
jp
adc
xchg
push
js
pop
shll
pop
xchg
push
cwtl
sub
sahf
lea
mov
xchg
or
stc
outsl
daa
mov
ror
int3
dec
sub
hlt
inc
adc
fisttpll
or
mov
cs
mov
pop
lret
cmc
mov
pushf
dec
rcll
clc
mov
in
jbe
cmp
or
pop
cmp
lcall
hlt
push
ja
repnz
mov
mov
pop
test
dec
xchg
pop
inc
lret
jecxz
dec
jp
dec
xor
aas
xchg
cltd
lcall
mov
mov
jae
xchg
setle
pmuludq
push
mov
loop
lret
ret
stc
adc
outsb
arpl
shl
sub
jno
andl
mov
mov
scas
lods
mov
mov
jmp
addr16
pop
push
jecxz
cmp
out
sub
fs
add
pop
aas
out
add
xor
mov
in
or
sbb
and
in
adc
jno
add
dec
xor
insb
pop
ljmp
jmp
sahf
icebp
test
mov
nop
idiv
xor
push
push
adcb
out
mov
or
dec
sbb
ds
xchg
pop
imul
xchg
mov
add
mov
lret
or
dec
xor
inc
xchg
sub
inc
cmp
mov
fisttpll
fucom
and
mov
test
pop
jo
rolb
outsb
push
out
sub
fdivs
pop
int
jge
outsl
sbb
sbb
hlt
loopne
push
adc
jns
dec
lds
in
cmpl
mov
pop
xor
push
jne
mov
xchg
aam
push
push
repnz
cld
mov
mov
pop
and
scas
push
pop
ja
iret
push
adc
mov
lds
outsl
xor
xchg
inc
sub
repz
pop
inc
insb
mov
roll
movsb
fiaddl
push
repnz
or
shlb
fisubs
ljmp
xor
sbb
idivb
add
int3
jl
test
clc
pop
aam
mov
mov
pop
mov
lds
push
and
movl
int
jl
les
leave
and
inc
mov
push
dec
push
sbb
pushf
push
push
js
arpl
fcmovnb
push
test
int3
insl
je
jmp
sub
sub
sti
fidivl
mov
xchg
mov
rcrl
ss
pop
mov
orl
cwtl
lret
out
outsl
mov
xor
xchg
adc
cmp
pop
loope
stc
inc
stc
adc
xor
add
test
sub
das
imul
ficoml
jmp
shl
jne
xor
es
aam
dec
rorb
xchg
push
divb
mov
mov
pop
adc
or
cs
adcl
repnz
xchg
fldcw
outsb
jp
popf
jnp
ret
pusha
gs
jbe
add
pop
dec
in
nop
hlt
rorb
sub
mov
in
cmp
movsb
jmp
pop
pop
jg
and
fsts
jge
loop
ror
xchg
jb
inc
popf
push
mov
iret
popf
fbstp
outsl
xor
xchg
arpl
sub
hlt
cwtl
repnz
addr16
inc
shrl
dec
popa
clc
add
fst
xlat
cmp
ss
jp
mov
mov
inc
sbb
daa
adc
sub
es
cmp
ljmp
add
cmpsl
cld
xchg
sbb
outsb
cmpsl
les
mov
fimuls
mov
cmp
sbb
sahf
int3
and
and
sub
push
or
in
pusha
into
jge
cmp
xchg
xchg
cmp
lret
stc
push
adc
lret
dec
pop
cwtl
pop
inc
mov
aad
repnz
lea
jns
mov
xchg
out
pusha
rclb
adc
dec
add
cmpsb
das
call
loop
int3
andl
xchg
mov
xchg
movsl
cmc
loope
stc
inc
mov
and
cmp
cmp
bound
mulb
pop
add
fdivrs
push
imul
xor
xor
inc
sbb
sbb
das
les
lcall
mov
cs
xorl
mov
lcall
daa
xor
divb
sub
or
dec
mov
mov
mov
mov
fmul
addl
fldcw
roll
mov
mov
fdivrs
jle
decl
jnp
inc
mov
outsl
jo
sub
mov
in
mov
lods
sbb
pop
push
cmp
lret
sahf
xchg
jg
mov
push
mov
movhps
das
loop
xchg
or
cmp
into
jnp
lret
rcrb
and
lret
xor
cmp
and
sahf
or
lea
add
push
mov
xchg
lahf
repnz
inc
leave
je
inc
or
cmc
add
inc
pop
pop
outsl
cwtl
in
dec
pop
xchg
dec
push
mov
icebp
pop
cmpsl
mov
gs
clc
jmp
pop
pop
inc
and
popa
loope
jo
pusha
dec
or
xchg
lock
in
sbb
pop
push
pushf
adc
in
adc
mov
xchg
stc
repz
stc
fsubl
flds
mov
lods
pop
push
xchg
cmp
pusha
popa
pushf
fldl
inc
stos
push
cmp
sbbl
xor
xchg
mov
dec
int
ret
enter
cmp
pusha
sarl
cmp
xor
out
sbbb
xlat
jg
shr
fnstenv
popa
mov
lahf
cmp
xchg
xor
shl
dec
test
mov
clc
xchg
addl
xchg
pop
mov
dec
adc
stos
and
lods
adc
sub
imul
ss
aas
sbb
mov
mov
stc
insl
movsl
mov
in
out
mov
addb
push
mov
das
add
and
stos
pop
dec
mov
test
inc
call
test
xchg
enter
xor
push
dec
gs
mov
jns
jge
loop
ficomps
notb
mov
or
sbb
cmp
out
adc
fnstsw
mov
dec
int
aas
out
cmc
stos
push
sahf
insb
mov
push
loope
scas
inc
mov
mov
fisubrl
cmp
repnz
ret
test
sub
mov
fstl
push
pushf
pop
mov
fisttpll
xorl
icebp
ret
sbb
dec
addb
das
mov
mov
js
cmpsl
sub
jg
add
ficomps
push
ds
cmpsb
mov
insl
cmp
mov
jbe
jmp
daa
dec
aaa
or
mov
cli
in
xchg
inc
popf
test
notb
daa
sti
mov
adc
xchg
jae
lods
aaa
iret
sbb
push
mov
hlt
jb
popa
pop
sbb
dec
sbb
je
sti
icebp
pop
and
jg
fildll
inc
mov
ret
sbb
rcrl
loope
xchg
stos
dec
jg
push
add
pushf
imul
rorl
pop
cmpsb
xor
insb
inc
ss
mov
fidivrs
or
jecxz
mov
and
jle
sbb
cwtl
xor
sti
sbb
xchg
aaa
imul
dec
xor
hlt
aaa
faddl
sub
mov
out
cmp
pop
stos
out
mov
out
mov
jae
adc
call
xlat
lea
in
jl
cld
push
aad
mov
mov
mov
data16
pop
daa
sti
dec
adc
push
sbbb
loope
js
rcrb
adc
xor
lcall
scas
jno
xchg
add
pop
xchg
cwtl
cmp
push
int
adc
xor
fnsave
mov
mov
lods
pop
shr
and
insl
jp
inc
xor
lods
mov
arpl
lds
popa
out
pop
or
push
pop
push
sub
test
out
cltd
dec
sbb
mov
or
pop
mov
dec
and
dec
or
cmc
adc
sti
das
subl
addr16
movl
stc
or
dec
data16
mov
xchg
jnp
mov
inc
add
cmpsb
mov
pop
shll
daa
out
scas
nop
aaa
sub
ret
aam
fs
iret
ljmp
push
cmp
xchg
push
test
push
jge
cs
inc
in
xor
aam
mov
shll
repnz
das
dec
adcl
hlt
pop
xchg
les
pop
lcall
sub
inc
jo
pop
cmp
lcall
pop
inc
repnz
mulb
push
in
repz
fwait
data16
inc
jnp
sbb
out
pop
in
out
dec
loop
int3
cmp
xor
mov
test
mov
xchg
xlat
xchg
push
outsb
sbb
xchg
iret
imul
cmp
mov
adc
scas
cmp
dec
jae
xchg
repz
pop
cmp
inc
cmp
inc
cmpsl
aaa
mov
add
jg
in
in
xor
xor
inc
psubw
add
pushf
jge
imulb
aam
aam
aaa
int3
imul
xor
xchg
je
dec
xchg
push
es
push
dec
lods
mov
jb
stc
out
jl
add
call
iret
out
pop
and
inc
push
push
mov
lret
xchg
xor
movsl
fcompl
cmp
movsb
jb
inc
cmp
push
xchg
cmpsl
mov
mov
icebp
insl
xchg
out
fcmovne
or
enter
scas
push
stos
cli
jbe
adc
pop
dec
repz
aas
std
mov
out
mov
call
mov
cmp
imul
or
add
clc
mov
int
fstpt
popf
fimull
movsl
push
scas
mov
in
rcll
dec
xchg
xchg
scas
fists
popf
test
rcll
test
mov
mov
jp
ljmp
and
loopne
sub
pop
jp
xor
mov
cld
nop
test
rcrb
cmp
mov
xor
push
and
mov
xorl
push
aam
jg
sbbb
mov
jl
int3
jl
cs
mov
in
lret
xchg
or
bnd
pusha
daa
lahf
test
add
in
call
pusha
aam
xchg
push
out
inc
dec
icebp
mov
daa
fwait
jno
mov
testb
pop
lods
ret
enter
pop
hlt
xchg
data16
add
xchg
ficomps
mov
popf
movsl
mov
out
ja
inc
jo
push
add
xor
jo
inc
out
imul
xchg
aas
es
push
pop
xor
or
subb
ja
dec
and
xor
je
and
pop
dec
mov
and
daa
fnstsw
adc
hlt
inc
clc
cmp
inc
lcall
cmp
jge
inc
xchg
inc
mov
pop
mov
adc
sbb
fistl
dec
lcall
adc
adc
sti
scas
push
jp
ljmp
dec
iret
fmulp
sub
jne
ret
cmpsl
jg
shl
fcmovne
push
pop
mov
lods
dec
xchg
sbb
in
mov
notb
xchg
xor
inc
sub
pop
dec
add
roll
cs
xor
out
addl
inc
jne
push
mov
insl
pop
sarl
lods
in
push
outsl
add
mov
insb
addb
mov
testl
jp
adc
and
or
sbb
sbb
movsl
test
hlt
pop
mov
xor
cmp
nop
lret
cmp
sbb
push
into
leave
leave
leave
sarl
test
bound
leave
dec
push
mov
lods
ja
and
sub
xor
push
pop
or
orl
ret
sub
jb
cwtl
decb
xor
xchg
cmp
rorb
mull
xchg
hlt
inc
insl
dec
push
popf
sbb
repnz
in
sub
xlat
mov
and
cli
sub
aam
sub
out
dec
xor
ss
hlt
xor
test
inc
mov
and
lods
pop
push
cmpsb
fmuls
out
imull
push
dec
fnsave
fists
sbb
mov
shrd
mov
push
cmp
sbb
xor
xchg
dec
mov
addr16
cld
inc
pop
imul
call
mov
insl
mulb
or
js
pop
out
pop
lret
in
cld
xchg
aaa
pushf
data16
mov
jo
jecxz
lods
loope
sub
lods
out
cmpsb
insb
xchg
mov
and
sbb
shlb
sbb
fsubr
in
mov
pop
mov
test
lods
jbe
push
nop
xchg
inc
test
fstpt
xor
add
paddsb
setae
bound
std
sub
minps
dec
loope
or
mov
enter
es
push
je
loope
lds
dec
inc
int
std
add
pop
pop
je
add
sub
sub
cmc
lods
cs
fsts
xlat
and
ret
pop
sti
andb
outsb
pop
lods
jno
xlat
out
nop
rclb
xchg
mov
pop
jo
jg
bound
loop
fst
sub
fs
cli
cmpsb
sbb
clc
out
jnp
cltd
mov
cs
cwtl
add
mov
jp
adc
jne
dec
jbe
rcrl
dec
mov
mov
lret
in
or
pop
mov
sbb
jne
stos
or
fldenv
in
mov
pop
inc
aad
mov
xchg
stos
sarb
sti
push
out
cwtl
fwait
adc
mov
add
shll
mov
scas
sub
sub
pop
mov
pop
outsl
aad
es
cwtl
mov
cli
mov
rdtsc
xchg
cwtl
imul
inc
or
iret
sbb
sub
rcrb
stos
sub
pop
fcomip
imul
mov
jmp
pushf
lds
outsl
in
mov
jb
ss
jno
sub
in
lahf
lds
add
fisttps
rorl
inc
gs
outsb
call
pop
rcr
jae
push
push
stc
fwait
dec
clc
js
inc
ud1
cmp
cmpsb
mov
mov
inc
dec
inc
outsl
js
cmc
sbb
inc
jb
lods
mov
outsl
sub
mov
inc
imul
icebp
arpl
xchg
mov
cs
das
lods
jo
out
cld
scas
test
jmp
es
mov
add
dec
mov
dec
mov
cmpsb
jle
daa
test
popf
pop
adc
aaa
fistpll
jo
out
imul
adc
pop
push
stc
xchg
pop
ret
clc
loopne
cs
mov
pop
mov
xchg
inc
mov
cmpsl
addr16
pusha
outsl
subl
pop
or
push
dec
sti
pushf
pop
xchg
xchg
mov
mov
leave
cmp
sahf
mov
loopne
lret
cltd
xchg
jp
jb
sub
mov
int3
push
mov
sub
inc
push
lahf
pop
cwtl
mov
lea
bsf
mov
mov
divl
popa
mov
push
push
add
sbb
jns
mov
movsb
pop
outsl
js
mov
pop
popa
lods
cmp
jo
mov
add
ljmp
shlb
fldcw
inc
or
dec
hlt
lea
xor
loope
pop
test
push
mov
ret
imulb
sbb
push
mov
xor
ss
mov
ret
inc
or
inc
fldl
cld
xchg
add
mov
int
jae
jns
inc
add
lds
adc
push
mov
mov
ret
imul
outsb
jmp
inc
xchg
push
sub
fxch
xchg
and
push
arpl
and
in
pop
int3
cmp
inc
add
and
jmp
pop
dec
and
xchg
lock
inc
lods
out
leave
out
adc
mov
rolb
mov
fadds
pushf
mov
mov
or
dec
push
adc
jecxz
fnstcw
mov
and
shl
mov
arpl
or
xor
or
dec
pop
repnz
hlt
iret
sub
cs
aas
xchg
lods
fcomps
in
adc
adc
dec
jno
mov
or
bound
loop
xchg
inc
scas
sbb
shrl
dec
mov
cltd
pushf
sub
xchg
jae
inc
pop
cli
cmp
cmp
lea
orb
insl
push
cs
push
xorb
jbe
push
fs
outsl
mov
jne
fsts
je
adc
je
cmpl
jmp
in
and
lea
js
jo
in
test
aaa
or
cmp
inc
mov
xchg
jnp
xchg
mov
popf
in
dec
pop
fidivrl
repz
jo
mov
out
mov
cmp
dec
outsl
loope
mov
adc
jne
repz
jecxz
pop
cs
shll
xchg
int3
pushf
mov
and
cmp
mov
je
cmp
das
xchg
test
fldl
cld
add
lcall
cmp
jecxz
call
out
pop
mov
arpl
flds
rolb
fcmovnbe
adcl
xchg
add
cmp
daa
or
pop
xchg
jno
lods
into
xchg
mov
shr
mov
push
cmpb
push
inc
into
into
mov
lds
xlat
lcall
aad
xor
push
aas
test
xor
mov
inc
pop
ljmp
dec
popf
lret
pop
cmp
sbb
jp
pop
andb
push
mov
incb
add
push
neg
cmp
repz
mov
leave
inc
fidivrl
rcrb
mov
loope
add
mov
enter
sub
and
cltd
idivb
das
xor
inc
roll
jle
xor
dec
cmp
test
daa
out
cmc
mov
push
jmp
mov
lahf
or
scas
in
mull
lea
imul
lahf
push
test
ds
inc
repnz
lret
mov
bnd
scas
repnz
mov
xlat
pop
cmpsb
lds
stos
rcl
mov
dec
les
shr
cmp
addb
mov
pusha
jmp
aas
mov
lds
lret
sbb
push
adc
xchg
adc
rol
pop
icebp
jmp
les
push
decl
int
mov
pop
movsl
mov
mov
or
es
ljmp
add
andb
add
lret
stos
xchg
jne
jne
nop
jge
jmp
into
shrb
test
add
aad
cltd
cmpl
pop
xor
lds
xchg
cltd
rol
fnstsw
bound
xchg
pop
sub
push
and
shll
sub
inc
jno
push
cwtl
add
pop
icebp
sbb
leave
push
mov
daa
sbb
push
sbb
mov
push
out
fstp
add
stos
fwait
add
stc
out
and
sbb
in
cmp
xchg
pop
push
push
dec
dec
pop
sti
les
lock
push
jmp
push
cmpsb
mov
jno
xor
ret
sbbl
mov
or
sub
out
outsl
mov
insl
jecxz
iret
mov
mov
xchg
xchg
mov
add
inc
cltd
jle
and
cwtl
in
cmp
add
out
lock
push
jae
insb
lret
lret
jb
cmp
stos
mov
mov
loop
push
test
scas
jecxz
test
mov
and
pop
mov
cmp
xchg
aaa
push
clc
push
out
dec
lock
xlat
out
jns
dec
int
cmp
push
mov
ja
mov
sti
dec
jns
call
push
mov
leave
push
int
movsb
and
rcr
dec
pop
cmp
push
jno
pushf
cmpsl
in
cmc
and
ds
loopne
xchg
mov
and
pop
xchg
push
outsb
or
icebp
inc
stc
dec
orb
fcmovnbe
mov
xchg
arpl
sbb
push
jmp
dec
dec
mov
pop
xchg
mov
icebp
sub
mov
out
xor
imul
fsubr
mov
jmp
jmp
int3
sahf
add
sbb
cmp
xor
jecxz
out
inc
mov
dec
jns
jmp
cmp
clc
cmpsl
mov
lods
pop
arpl
fstl
jecxz
cmp
aam
scas
jg
and
adc
lea
int3
ret
mov
out
outsb
rcl
or
loopne
mov
push
pop
push
or
push
dec
jp
adc
mov
xchg
xchg
incl
push
push
pop
mov
pushl
pop
cmc
mov
dec
std
cli
jmp
push
and
mov
mov
and
and
sbb
pop
lahf
gs
jo
sub
aad
mov
mov
pop
leave
xor
cli
pop
nop
dec
push
movsl
aas
lret
in
in
icebp
inc
fs
mov
es
add
data16
and
and
pusha
xchg
icebp
imul
mov
jge
push
fistl
ret
xchg
or
sbb
shll
scas
xor
and
std
push
mov
adc
fs
pop
mov
fcomp
mov
pop
push
sarb
in
cmc
inc
clc
lcall
jo
aas
push
push
cltd
adc
movsl
js
xor
adc
sbbl
jmp
cld
movsl
mov
push
push
nop
sbb
push
iret
adc
cmc
stos
xchg
es
push
xchg
shlb
in
stc
jnp
xor
loope
test
xor
sbbb
mov
inc
and
test
shrl
xchg
out
adc
cmc
aad
aas
lds
dec
pusha
iret
repz
and
int3
mov
inc
pop
pop
rcrb
les
sbb
test
push
pop
addr16
dec
iret
or
pop
xchg
fs
add
sti
call
por
xchg
sbb
mov
stc
out
imul
and
fcmovbe
mov
push
mov
pop
mov
mov
pop
cmpsl
sbb
scas
xchg
ficoml
mov
sar
das
mov
lock
cmpsb
fidivrs
fimuls
incl
push
push
roll
mov
sbb
inc
or
push
push
test
and
popa
je
roll
cmp
mov
shrb
xor
cmp
roll
jecxz
aaa
inc
jo
mov
push
pop
out
cmp
lock
outsb
fisubs
popa
sub
sti
fstps
sub
xchg
enter
lds
lcall
and
aad
xchg
test
dec
lods
decb
add
sbb
dec
int3
or
jae
aad
mov
bswap
add
xor
or
sbb
mov
into
enter
bswap
pop
push
adc
clc
orl
sti
int
pop
movsl
mov
xchg
sbb
lea
shlb
push
add
scas
cmp
cmp
inc
sbb
inc
mov
call
fiadds
adc
sti
push
add
jmp
shll
pop
mov
fwait
fdivl
xchg
loope
pushl
addb
dec
pusha
movsb
add
sti
in
pop
jp
add
xor
cld
mov
popf
lcall
jae
inc
jae
stc
cmp
cli
xlat
sub
mov
and
leave
and
je
ss
lods
cmpsb
add
sub
jecxz
add
mov
push
and
int
lret
in
and
jbe
sub
inc
sahf
dec
out
mov
xor
negl
enter
xchg
gs
aam
sbb
jp
add
sti
cmp
mov
test
fldcw
mov
out
fsubs
rcll
sbb
repnz
jp
and
xor
add
sbb
adc
mov
pop
ss
mov
inc
cmp
inc
enter
out
sbb
inc
mov
fistpll
mov
mov
cld
add
pop
mov
pop
fldenv
addl
adc
lahf
push
inc
and
cmp
xor
fstpt
imul
or
loope
mov
fldt
mov
mov
pop
push
lahf
push
into
dec
daa
in
or
in
inc
mov
loop
int3
push
sarl
lock
shl
in
test
js
add
lods
dec
aad
and
push
sbb
aaa
mov
loopne
mov
sub
add
sub
mov
xchg
test
das
movsl
std
scas
sti
push
jne
in
out
imul
pop
imul
sub
mov
hlt
orl
jg
test
adc
or
fsts
outsb
std
out
pop
cmp
xchg
aaa
or
es
je
jl
aam
add
movsl
cmp
xlat
jge
mov
add
popf
je
out
cwtl
rcr
mov
fidivs
aas
inc
xabort
jns
xor
jae
repnz
dec
jp
iret
movsl
mov
popf
xor
mov
push
push
cwtl
push
ret
out
cmp
adc
pop
fnstsw
subb
out
dec
rcrl
cmp
jo
dec
mov
aaa
dec
or
dec
iret
xchg
lret
mov
loopne
sub
mov
test
mov
insl
movsl
in
or
or
sbb
fwait
lahf
movsl
into
cld
mov
out
inc
jg
xor
jp
and
lods
fcmovnbe
adc
xchg
popa
iret
nop
test
imul
in
ds
pop
xchg
jae
and
stc
xchg
rcrl
cmp
les
mov
inc
mov
adc
insl
mov
dec
sub
stos
shll
dec
sbb
xchg
nop
xor
mov
ss
sahf
jmp
xlat
cmpsl
pop
das
adc
out
jo
leave
pop
add
or
or
lock
in
and
int
mov
popf
aaa
jmp
mov
sbb
es
pop
adc
ret
jns
les
add
jno
das
outsl
mov
fbld
roll
in
xor
fldenv
scas
fcomps
and
pop
push
push
jecxz
add
push
int3
jae
inc
insl
clc
mov
adc
mov
imul
push
cs
jns
mov
negl
push
insb
cmc
out
fiaddl
sbb
arpl
pop
adc
mov
pop
and
xchg
test
fwait
mov
fmull
popf
add
xor
jp
mov
daa
arpl
inc
stos
mov
out
bound
aad
out
dec
cld
dec
mov
mov
ss
repz
dec
pop
dec
out
add
lcall
pop
jge
sahf
movsb
sbb
stc
sub
aas
inc
or
jcxz
and
psubq
call
outsl
fidivl
lea
and
or
pop
and
imul
or
push
adc
xor
or
cwtl
mov
movsb
mov
jle
stos
sbb
and
imul
inc
jg
movsb
sbb
in
xchg
or
mov
cmp
les
loopne
ret
push
fcmovb
xchg
adcb
adc
xorl
cmp
and
push
sbb
scas
repz
jno
mov
or
cwtl
addl
xchg
xchg
sub
add
outsl
jp
les
and
orb
inc
ljmp
push
das
lret
fistpll
dec
cli
loope
outsb
mov
test
xor
test
and
or
cmc
xorl
mov
loope
popa
movl
cmp
xchg
loope
sahf
cmp
push
inc
push
or
jg
in
addl
pop
and
ret
dec
or
out
rorb
sub
mov
fistl
mov
and
fimull
stc
xor
add
aam
cmp
mov
and
into
daa
out
pop
les
mov
arpl
mov
jg
lret
xchg
mov
and
add
pop
ret
sbb
mov
xchg
enter
lahf
test
xchg
push
movsl
cmp
leave
test
mov
mov
clc
add
mov
pop
jge
mov
mov
loop
stc
in
push
mov
ljmp
ret
je
push
repnz
stos
push
shlb
addr16
cmc
push
add
sbb
std
in
cmp
or
add
jge
mov
js
jmp
pop
inc
mov
inc
inc
xchg
rorb
shrl
subl
cmp
sbbl
les
lods
jmp
popa
scas
xchg
stc
arpl
pop
ds
insl
add
or
pop
push
xor
pushf
add
mov
pop
xchg
daa
inc
sbb
push
push
sbb
pop
push
cmpsb
ss
data16
sbb
lods
cmova
jo
push
aaa
mov
dec
repnz
jmp
sbb
fdivrs
lcall
adc
ret
pop
dec
xchg
out
xchg
cmpb
inc
cmc
lahf
cmp
rcll
pop
mov
push
mov
pop
mov
mov
sbb
mov
rcrb
in
push
and
pop
loop
adc
pushf
push
inc
test
mov
xor
sub
bound
push
and
scas
adc
adcb
push
cmp
mov
mov
sahf
add
daa
stos
stos
leave
mov
adc
push
mov
and
xchg
mov
xchg
xor
bound
mov
fsubl
inc
xor
inc
mov
fstl
pop
cmp
jns
repz
push
test
cld
lret
xchg
dec
push
imul
sbb
subb
arpl
movsl
aam
xorl
push
das
xchg
pop
ret
cmp
jmp
test
lock
negb
fldl
xchg
shlb
or
js
jbe
nop
imul
cwtl
xlat
mov
xor
push
push
sahf
andb
push
xchg
loopne
lea
add
fstps
sub
pop
fiaddl
pop
lret
push
pop
push
das
int3
in
orb
test
pop
aas
cld
inc
xor
ror
jne
hlt
cli
test
rcll
lea
push
xlat
xor
nop
insl
xchg
mov
mov
int3
ss
insl
aaa
movl
mov
loop
or
mov
je
push
pop
sbb
xchg
je
aad
aam
mov
xor
in
insl
test
xchg
ds
inc
mov
into
push
clc
and
inc
cmpsl
pop
inc
stc
pop
mov
iret
das
mov
ljmp
dec
aad
pop
outsb
outsl
loopne
mov
ja
sub
jecxz
xor
jne
xchg
or
pop
xchg
sarb
mov
ret
pop
stos
jecxz
imul
imul
xor
mov
cmp
and
jb
jmp
shl
mov
push
dec
loop
xor
mov
iret
cmpsl
aad
mov
inc
in
ss
daa
mov
mov
and
fidivl
or
fstpt
add
call
mov
mov
add
aad
es
jl
lods
adc
iret
test
sub
test
je
mov
sub
iret
add
scas
testl
pop
scas
mov
jmp
inc
mov
cmp
sub
clc
loopne
in
mov
lods
fdivl
mov
adc
sahf
shrb
lahf
xchg
or
mov
repz
dec
js
out
push
fs
ds
mov
ret
inc
jecxz
mov
out
mov
jmp
loopne
popa
adc
cld
mov
imul
pop
or
cld
xchg
dec
ret
jno
xor
cmp
aam
int3
and
stos
sarl
ror
mov
mov
mov
xchg
dec
lods
add
shlb
pop
int3
mov
shlb
rolb
imul
xor
jmp
jp,pt
ja
lahf
popa
sub
push
cmp
mov
shlb
jnp
aaa
inc
xchg
icebp
popa
adc
arpl
xor
add
sbb
push
stos
lock
stos
pop
jae
std
adc
ljmp
and
daa
mov
call
or
lcall
les
outsl
push
pop
sbb
ds
cli
insb
stc
sbb
mov
mov
repnz
notl
push
xorb
inc
dec
clc
add
xchg
xor
mov
mov
rclb
jmp
scas
xor
out
and
lods
jns
lea
fwait
dec
cli
inc
and
inc
imul
test
jl
scas
insl
ret
int
mov
cmp
xchg
sbb
nop
mov
mov
jp
inc
rorl
insb
add
pop
jno
mov
push
xor
movsb
jmp
xchg
mov
sub
jmp
xlat
push
fcmovne
mov
or
add
xchg
shll
pop
insb
out
push
mov
shl
xchg
rcr
jmp
repz
jle
xchg
mov
dec
jg
jno
and
fcmove
dec
push
stos
neg
fwait
mov
add
pop
push
ljmp
sub
loop
aaa
cmpsl
sub
mov
jg
std
popl
jb
pop
hlt
xchg
xor
push
add
sub
sub
sub
push
dec
push
gs
loope
xchg
scas
jp
pop
orb
adc
jne
sahf
fildl
mov
mov
xchg
mov
xor
mov
cwtl
lds
lahf
pop
xor
xor
dec
mov
adc
je
fs
sar
cmp
daa
inc
loopne
in
movsb
dec
or
int
aad
xchg
outsl
fcmovne
sub
and
xchg
xchg
xor
mov
cmp
mov
xchg
mov
gs
mov
inc
lahf
dec
jmp
shl
xor
cli
inc
sub
pop
sbb
dec
add
adc
insl
imul
adc
inc
lds
adc
sub
notl
mov
into
fnsave
fiaddl
aaa
mov
out
cmp
scas
sbb
dec
mov
lock
inc
shrl
sbb
imul
xchg
repz
fucom
lret
jno
test
imul
dec
bound
mov
mov
adc
adc
mov
mov
ficoms
push
ret
fwait
pop
enter
aas
xor
sub
lock
xchg
mov
shll
jae
call
xchg
mov
or
xchg
cmc
popa
push
jle
mov
inc
imul
call
in
inc
loop
outsl
mov
jmp
movsl
and
adc
inc
mov
andl
rep
mov
sub
push
xor
inc
loopne
pop
stos
pop
or
push
fildl
fnstsw
push
mov
jecxz
lock
nop
cmp
sbb
test
xchg
out
jb
jle
ljmp
xor
mov
xchg
std
ds
sbb
mov
add
sti
push
sub
vpsllq
jb
cwtl
cli
repnz
sub
xchg
pop
int3
push
push
mov
push
sbb
adcl
dec
dec
lea
in
mov
mov
inc
mov
call
sub
jo
jl
leave
jns
popf
xorb
rcl
jmp
pop
clc
cwtl
mov
hlt
inc
push
cltd
jmp
xchg
lcall
dec
je
xchg
subb
ja
roll
pusha
sbb
or
in
ljmp
fwait
add
in
pop
je
jb
add
xchg
xchg
pop
xor
test
xor
jns
pop
imul
or
inc
cmp
ret
ret
push
daa
sbb
jl
dec
add
xor
push
mov
loop
cmp
jno
jecxz
pop
jl
addr16
jle
loopne
stos
lret
aad
enter
cmp
scas
mov
fdivl
lds
lods
imulb
jl
lret
ds
test
add
xchg
out
scas
sbb
pop
daa
cli
lahf
scas
xor
mov
mov
mov
sub
rcll
pop
fnsave
imul
jp
inc
sub
lret
into
pop
das
or
rorl
inc
outsl
js
mov
loopne
fucomip
bound
fwait
lds
add
mov
dec
cmp
xor
mov
stos
aam
sbb
cmp
iret
aad
jle
test
sbb
and
popf
mov
hlt
aam
daa
mov
or
or
fwait
cmc
jo
inc
adc
sub
dec
in
cli
inc
cltd
fimull
pop
jo
adc
jns
mov
lods
into
mov
pushf
mov
leave
je
into
add
xchg
loop
jg
xchg
xchg
mov
xchg
shlb
adc
cmp
stos
mov
inc
push
sub
inc
mov
xchg
cmpsb
xchg
insb
inc
or
mov
mov
std
imul
xlat
mov
fnstcw
xchg
mov
mul
and
mov
cs
xchg
cmp
pop
and
adc
and
cmp
mov
out
out
addb
and
xor
and
sbb
testb
fistpl
cmp
iret
push
insl
ss
dec
lret
jge
pusha
in
inc
xor
pop
inc
stos
push
repz
cmp
in
sbb
addl
adc
pop
and
jns
sub
cld
xchg
cmp
xchg
clc
adc
mov
push
movsb
imull
mov
es
pop
fsts
rcll
out
iret
stos
jmp
sub
mov
imul
mov
cmp
cltd
mov
mov
inc
mov
icebp
pop
dec
pusha
mov
push
sbbb
rolb
out
or
add
movb
data16
xor
and
ret
rcrb
xchg
testl
in
pusha
and
and
inc
sub
lret
in
enter
pop
daa
roll
xchg
push
bound
xchg
xor
stos
adc
xor
fwait
add
add
jb
orps
and
cmc
into
ds
adc
or
sub
cli
jbe
sbb
sub
pop
iret
jge
xchg
inc
roll
stos
loopne
cmp
adc
decl
push
cmp
mov
mov
pop
popl
jns
sahf
xchg
jae
mov
insl
ret
xchg
push
jo
test
out
push
cmp
arpl
lahf
scas
jbe
imul
ret
cltd
sbb
rep
loopne
adc
jb
and
adc
sub
aam
incl
xor
xlat
sbb
aas
xchg
ja
mov
lahf
neg
lret
lods
std
sub
lods
xchg
jne
fyl2x
add
in
dec
sbb
insl
adc
stc
ja
xchg
hlt
add
dec
ja
mov
pusha
or
xor
mov
lods
cmpsl
stos
jge
test
pop
push
fs
aam
dec
mov
mov
data16
cmp
mov
jmp
adc
add
inc
mov
xchg
mov
push
orl
add
int3
pop
add
bound
out
inc
pop
jmp
cltd
add
xchg
jl
fcompl
dec
mov
sub
pop
cmp
push
cmp
push
cmp
adcl
mov
lret
mov
loopne
add
inc
fsubrs
shlb
inc
pop
add
stc
mov
sub
mov
movups
dec
mov
add
adc
push
mov
flds
mov
call
mov
cmp
cld
inc
loopne
movsl
pop
cli
or
fs
and
and
psubb
movsb
or
scas
sub
aaa
sbb
cli
subb
rcll
xor
dec
cmc
mov
sahf
movsb
popa
cmp
stc
pushf
push
cli
and
cwtl
push
cmp
fildl
scas
lods
fisttps
or
dec
les
pop
cmp
into
ds
dec
jns
jae
push
in
ss
adc
sbb
mov
popf
and
data16
mov
lret
es
lret
decb
xor
sbb
ficompl
sbb
mov
sbb
cmc
stos
in
or
fs
test
fwait
callw
mov
iret
push
xorl
ds
lcall
mov
sbb
popa
pop
sub
dec
call
movb
jmp
lods
in
test
pop
add
xchg
adc
dec
data16
shl
bound
cwtl
mov
sub
repz
or
sub
mov
adc
dec
push
dec
sets
stc
stos
cmp
jp
inc
repnz
outsl
test
and
testl
xorb
lods
and
pop
sahf
xchg
push
push
dec
das
pop
jno
mov
jp
daa
stos
xor
mov
cmp
xchg
loop,pt
js
outsb
pop
pop
sub
xchg
adc
jmp
in
arpl
js
jo
xchg
loop
jbe
not
iret
and
jnp
lds
imul
jg
cmc
loop
jnp
sbb
adc
push
fcompl
push
mov
jmp
jne,pn
xchg
adc
aam
iret
cmc
fstps
shl
mov
jae
adc
add
cwtl
dec
mov
xchg
lea
scas
mov
int
add
pop
mov
and
imul
mov
xor
enter
aas
fldt
mov
mov
pop
arpl
dec
fucomp
and
das
in
outsl
popa
inc
jns
stos
int
inc
sub
notl
out
out
cmp
lret
xor
es
shlb
mov
lcall
repnz
inc
jp
jno
xchg
add
pop
mov
inc
sbb
adc
jmp
add
mov
or
mov
adc
in
fwait
cmp
mov
dec
cmp
adc
clc
cltd
xchg
and
push
jl
ret
js
jnp
inc
cmp
mov
xchg
mov
add
xchg
inc
sbb
pusha
mov
add
faddl
movsl
test
ret
cmp
out
dec
push
das
aad
lea
mov
xchg
jle
popw
pusha
push
push
repnz
xor
sbb
and
mov
mov
adc
rolb
ss
sub
pop
and
lahf
fidivl
jg
xchg
or
xchg
repz
inc
and
imul
addl
mov
fs
movsb
mov
scas
enter
or
mov
dec
and
fmull
sub
add
dec
fsin
aam
mov
shll
mov
cmp
ljmp
pop
das
sti
mov
fs
fstpl
pushf
pop
jae
mov
or
sarb
fidivs
adc
cmpsl
mov
xchg
imul
inc
adc
outsl
mov
and
mov
imul
out
mov
xlat
rcrl
xor
je
ret
pop
ret
mov
test
cs
xor
push
dec
std
mov
cmpsb
or
fwait
outsb
cmpsb
outsb
cmp
mov
arpl
fisubrs
in
repnz
negb
enter
ficoms
jge
cmp
sti
mov
out
push
adc
inc
mov
or
inc
rorb
mov
mov
stc
xor
rcl
icebp
xor
add
sti
jl
push
shlb
repz
push
push
pop
jae
mov
adcb
inc
sbb
pushf
pop
pusha
mov
arpl
adc
clc
pop
dec
xchg
jle
mov
or
push
pusha
or
cmp
pushl
or
cmp
les
mov
aaa
out
jno
frstor
inc
mov
cmc
fisttps
mov
pop
in
pop
loopne
mov
push
stos
fnstcw
sbbl
xor
es
inc
and
sbb
mov
push
mov
pop
je
adcl
and
xlat
lret
adc
xor
stos
sti
mov
jb
mov
sub
iret
jle
popa
cmp
test
sbb
mov
je
lods
out
jle
cli
and
inc
jo
imul
popa
test
add
iret
ficomps
ja
mov
sub
pop
mov
dec
jbe
adc
mov
outsb
repnz
jmp
lret
adc
aam
push
adcb
popf
out
sbb
sti
es
inc
push
xor
rcr
fwait
test
das
pcmpeqw
test
test
iret
aam
jle
out
shlb
stc
push
mov
pushf
sub
mov
dec
inc
jle
sahf
xor
pushf
jg
cmp
out
stos
jns
daa
xchg
pop
cmp
jbe
xchg
inc
push
jle
jno
cmp
mov
sbb
add
sbb
sub
pop
sbb
inc
test
stos
adc
fisubrl
jns
and
lods
imul
cmp
jbe
jg
stos
cmc
popf
pop
or
inc
lret
inc
dec
dec
hlt
jae
divl
pusha
pop
push
rcll
lcall
repnz
pop
cmpxchg
divb
mov
adc
inc
cs
adc
jnp
dec
and
jne
cltd
push
out
out
sbb
mov
add
mov
jbe
arpl
mov
xlat
mov
jbe
add
xchg
roll
enter
imul
lcall
cmc
cmp
fsincos
adc
sbb
in
xor
test
mov
adc
js
outsb
mov
fcmovnu
push
push
imul
data16
outsb
lret
cmc
jle
outsl
push
popa
pop
fnsave
dec
pop
test
push
js
cld
adc
pop
cmp
cli
sbb
dec
loopne
sti
sub
xlat
fwait
jae
sbb
lods
push
imul
xchg
hlt
sub
adc
or
cmp
push
test
test
cli
dec
aaa
dec
cmp
mov
adc
loop
int
mov
and
push
add
mov
mov
adc
das
jge
pop
sub
pop
adc
xchg
sarl
out
scas
in
xchg
ljmp
sbb
lods
enter
mov
cmpsl
loopne
cmp
jl
repz
push
rcll
pause
sub
sbb
movsl
xchg
pop
jb
mov
je
push
and
bound
cmp
inc
push
jb
xor
inc
shl
jmp
jnp
jo
cwtl
lcall
lods
ss
sahf
lds
push
jo
jg
xchg
daa
sub
lods
faddl
lock
xor
in
jnp
ds
aaa
adc
addr16
test
cmp
out
rolb
sub
sbb
adc
in
lcall
mov
xchg
ret
lods
pop
or
imul
lds
lock
dec
and
sbb
iret
dec
cs
pusha
mov
sarl
insb
dec
test
mov
rolb
ja
gs
js
dec
push
cli
mov
cmc
pop
stos
inc
and
cld
xor
mov
or
xor
test
iret
push
test
cwtl
add
push
xor
hlt
pop
scas
jne
pushf
fbstp
mov
add
xchg
in
mov
test
push
std
push
fs
lea
loopne
mov
jp
inc
sbb
int3
sbb
push
pop
pop
cld
mov
jecxz
lods
dec
pusha
imul
sub
dec
out
pushf
iret
jg
pop
das
inc
cmp
push
into
js
pop
stc
lret
test
out
neg
xlat
int
neg
xorb
xchg
mov
loope
sub
pop
in
imul
xchg
mov
mov
lret
bnd
test
ss
cli
sbb
and
push
js
push
sub
and
aad
comiss
mov
movsl
adc
sub
mov
xchg
mov
sub
andb
mov
xchg
and
stc
push
push
into
repnz
hlt
and
stos
sub
cld
mov
fsubrs
add
sbb
mov
enter
or
scas
lea
sub
xchg
pushf
sub
in
adc
lods
stos
jb
xor
xor
push
js
push
fsubp
inc
popa
xchg
mov
lret
xchg
imul
push
mov
jbe
pop
mov
dec
cltd
cmpsb
sbb
mov
in
mov
cmp
lods
fidivl
xlat
pop
xchg
mov
movsl
mov
mov
adc
pop
fidivrl
aad
idiv
jae
mov
mov
mov
cmp
adc
push
inc
lcall
sub
add
push
repz
xchg
mov
in
inc
int3
out
sbb
xor
lods
sbb
or
xor
mulb
cmpl
and
xor
xchg
pop
in
and
sti
mov
push
ja
lods
imul
jl
and
mov
std
inc
out
xchg
add
sbb
sti
out
cmpsl
adc
popf
leave
outsl
test
loop
stos
insl
popf
cmp
push
pusha
ds
sub
test
mov
punpcklwd
xchg
inc
mov
subl
cmp
rolb
outsl
sahf
je
adc
bound
add
mov
je
lods
mov
shrl
gs
push
and
es
jg
hlt
aad
sbb
daa
sub
shlb
ficoml
mov
mov
les
xor
push
cli
cwtl
mov
sbb
loop
jo
lret
sub
mov
mov
mov
shll
lds
addr16
mov
cmp
and
mov
fisubrs
sub
pop
sub
pop
jmp
inc
inc
xchg
pop
jo
xor
leave
adc
push
movsl
nop
or
lahf
daa
mov
orl
test
push
ror
in
cmpsb
cwtl
mov
cli
out
or
xor
iret
ja
repz
xlat
add
jne
mov
int
inc
out
das
xor
jno
and
lcall
push
push
mov
push
sub
mov
push
mov
std
push
mov
sbb
sub
insl
jl
popa
sahf
cmp
xchg
shrl
mov
dec
mov
movsl
push
test
jmp
or
add
and
add
jmp
add
jae
add
insb
nop
xor
stc
sbb
and
xor
into
rorb
imul
add
test
push
sbb
rol
mov
cmp
xchg
lahf
je
jmp
bound
pushf
dec
mov
inc
dec
das
out
push
ss
or
sarl
gs
ja
xchg
lret
outsb
js
jo
in
mov
je
sbb
inc
cmp
xor
test
repnz
adc
push
and
sub
pop
lods
adc
movsb
mov
or
pop
inc
add
xor
jo
test
sub
and
stos
mov
mov
xor
and
dec
out
arpl
pop
fidivs
or
xchg
nop
xchg
sbb
ret
clc
push
mov
imul
ret
pop
mov
inc
add
in
xchg
aaa
inc
sbb
sarl
inc
data16
push
fldenv
subb
sub
mov
fstps
pop
adc
pushf
and
sub
inc
pop
jmp
push
shlb
leave
cltd
punpckhbw
daa
cli
mov
jno,pt
pop
subl
outsl
divb
dec
ja
loopne
jns
or
xchg
sub
push
incb
dec
bound
pop
outsl
and
xor
jae
in
adc
dec
outsl
addb
inc
nop
out
pop
sbb
inc
dec
mov
jl
bound
xchg
loopne
sub
popa
into
enter
stc
and
inc
jae
lcall
out
orb
xchg
lret
mov
popaw
fisubrs
sbb
cmp
sbb
subb
out
test
fnsave
aad
call
or
cmp
aam
nop
insb
cmp
movsb
pushf
mov
add
pop
pop
jo
jg
xor
xor
push
ret
mov
mov
and
cmp
sbb
xchg
dec
lcall
and
mov
gs
test
imul
or
ffreep
lods
mov
ror
loope
and
push
add
inc
stc
fwait
hlt
pop
fldcw
dec
test
aam
add
adc
and
lods
pop
mov
fst
insb
int3
test
ja
cmpb
mov
aaa
mov
mov
outsb
mov
sub
fsubrl
push
daa
inc
subl
mov
mov
cwtl
loopne
stos
mov
sti
pusha
xchg
jns
sub
jl
fisttpl
inc
nop
xor
push
icebp
lcall
jnp
sahf
mov
lds
cmp
fidivl
jae
push
cltd
fdivr
mov
jne
out
pop
fs
cli
xchg
ret
and
fstps
fwait
out
push
push
sbb
fwait
sub
jns
shll
je
out
mov
and
notb
mov
pop
dec
call
xchg
mov
rclb
iret
cmp
push
stc
adc
rcll
divb
adc
repz
jns
movsb
mov
out
jmp
mov
xchg
fbstp
outsb
jecxz
jle
lods
cmp
repnz
ljmp
and
and
inc
inc
mov
push
pop
aas
adc
iret
sub
pop
out
out
sbb
sub
std
mov
mov
sahf
push
fimuls
or
jb
cmp
faddl
out
pop
push
or
xor
sub
pop
add
pcmpgtw
dec
lock
inc
mov
shl
dec
popf
mov
clc
sbb
leave
adc
cmp
nop
sub
in
sub
aam
inc
ja
test
fwait
or
pop
sbb
lock
add
mov
clc
scas
cmp
aas
dec
dec
mov
int3
clc
mov
and
fbstp
loopne
mov
pop
jge
cltd
adc
add
push
lret
out
add
pop
pop
sub
inc
out
test
xor
loop
add
pop
mov
push
sbb
mov
loopne
inc
mov
orl
clc
pop
je
inc
cltd
pop
push
sahf
dec
hlt
and
mov
inc
cltd
nop
cli
aam
loop
xlat
popf
or
mov
pop
push
call
das
clc
ret
push
mov
cli
inc
mov
aas
sbb
and
sahf
xchg
jne
add
bnd
push
push
fwait
lcall
cs
arpl
push
inc
push
out
dec
pop
and
sbb
mov
iret
mov
sti
stos
push
lds
pop
mov
dec
push
test
insl
cmp
aad
mov
add
adc
subb
cmpsb
dec
jmp
or
sbb
push
pop
movsb
push
fmull
and
iret
push
in
or
push
inc
mov
aad
aas
mov
js
jno
adc
xor
xchg
dec
sti
stos
scas
or
push
jge
fldl
pop
mov
sub
pop
lock
pop
outsl
or
and
pop
int3
pop
cmpsb
test
fnsave
out
rcrl
ficoml
jmp
mov
xchg
and
jl
jge
jp
inc
mov
test
js
inc
scas
or
xchg
jp
stc
jg
scas
xchg
testb
in
xor
test
push
mov
sahf
xchg
cs
cltd
dec
xor
loopnew
lahf
fcoml
dec
out
sbb
or
ja
stos
xchg
test
call
mov
jp
sahf
xorl
mov
pushf
dec
pop
or
imul
in
push
jmp
in
mov
mov
push
insb
jle
jns
or
jmp
and
mov
jae
int3
push
cmpsl
shl
mov
mov
in
ret
mov
ret
mov
sub
fcmovne
in
dec
pop
pushf
mov
xchg
push
mov
sbb
or
roll
orb
mov
jmp
fistps
push
mov
pop
mov
sbb
mov
enter
hlt
pop
gs
in
pop
cmp
or
inc
repnz
inc
cmp
dec
fcmovb
fldenv
imul
inc
jne
xchg
xchg
insl
sub
xchg
jp
push
jl
jbe
dec
in
or
add
add
lret
push
cmp
pop
cmp
sbb
arpl
sbb
and
lock
xor
outsl
test
push
ret
enter
pop
adc
mov
xchg
fsts
cmp
mov
addr16
test
stos
int3
into
testb
sub
mov
pushf
inc
sub
or
inc
out
mov
mov
and
loope
cmpsb
or
or
adc
arpl
call
cmp
push
js
dec
movsb
fwait
add
or
xchg
ja
out
cmp
push
mov
fadd
bound
leave
ret
or
mov
loopne
lahf
push
inc
mov
jecxz
mov
lods
jge
pop
jbe
ret
inc
ja
aam
xor
sar
jbe
push
scas
outsl
mov
pushf
pop
ja
decb
dec
mov
push
add
rcrl
cwtl
sub
sti
pop
adc
out
xor
aad
push
call
xchg
hlt
lea
add
inc
movsb
shl
cmpsb
stos
fs
jnp
ja
cmc
scas
cmp
mov
lock
xchg
lret
mov
ss
fists
mov
int3
sub
call
dec
loope
sar
sub
inc
out
jb
hlt
push
sub
jecxz
mov
dec
imul
aad
cmp
lods
fstpt
add
sarb
stc
cli
jmp
test
xchg
mov
fstps
mov
mov
and
inc
imul
imull
popf
cmp
cmp
outsb
cmp
pusha
mov
add
fstpl
mov
dec
xchg
loopne
cwtl
sbb
push
popa
das
data16
push
sub
mov
lea
fs
es
pop
push
dec
xchg
xchg
cmc
jl
sahf
dec
in
insl
inc
mov
andl
pusha
cmp
out
sbb
xchg
mov
cwtl
lcall
or
inc
push
call
or
and
pop
mov
sub
jne
into
outsb
out
cltd
sbb
loop
popa
sahf
push
push
popa
mov
inc
sbbb
ret
jo
out
orl
hlt
repnz
mov
sbb
clc
inc
pop
mov
das
push
dec
ss
shlb
or
add
lods
test
cwtl
call
lock
xor
out
call
xchg
cltd
insl
movsb
loope
imul
inc
stos
pop
je
pop
add
cwtl
pop
insb
lods
jge
sbb
ror
loopne
xchg
jae
cs
add
push
cmp
sarl
stos
ljmp
adc
jnp
dec
flds
jbe
ss
jmp
fildll
sahf
div
aas
imul
cmp
push
add
pop
lock
mov
add
int3
arpl
or
loopne
xchg
fwait
dec
imul
fstp
mov
fnsave
cwtl
int
out
fstpl
mov
in
insb
sub
orl
add
inc
xchg
inc
pop
inc
inc
sbb
sub
ret
icebp
mov
iret
ret
fdivrs
or
or
xchg
arpl
stc
push
ss
in
mov
xor
push
fsubrs
inc
fdivr
jb
mov
cmp
xchg
iret
frndint
adc
ds
aaa
call
cmpb
add
popf
sub
nop
fwait
or
jbe
jp
xchg
out
gs
test
adc
cmc
imulb
sbb
mov
mov
xchg
inc
mov
sub
jge
or
jb
lret
das
mov
ficoml
sahf
stc
aas
cmp
stos
xor
push
xlat
lret
and
and
xor
pusha
pop
jae
or
test
xor
popa
test
pop
adc
mov
lahf
push
push
push
add
fs
mov
mov
insb
std
mov
dec
add
out
mov
ret
cmpb
sti
adc
ficoms
mov
xor
lods
ds
xchg
negb
sub
jo
mov
mov
fcmovbe
test
mov
cmp
sub
testb
sub
jmp
movsl
push
shrb
imul
jg
rcrb
sub
lds
or
xchg
flds
inc
mov
test
jl
insl
fnsave
jae
cmp
adc
das
popf
push
mov
jle
mov
bound
sbb
mov
and
mov
mov
dec
loopne
aam
sahf
int3
lods
mov
daa
scas
xchg
fcomp
sti
iret
jp
inc
out
and
mov
jo
dec
add
or
sbb
subb
fdivrs
xchg
icebp
in
jle
pop
inc
pop
inc
push
inc
mov
sbb
sub
addr16
lods
pop
fdivr
cmp
mov
pusha
enter
xchg
cwtl
fwait
mov
mov
lahf
push
std
sub
mov
xor
mov
jmp
mov
xor
dec
test
lea
mov
lods
test
xchg
loope
mov
cmpsl
mov
lret
jle
or
dec
ljmp
in
sub
pop
pop
jmp
cmp
push
and
sub
loopne
nop
jge
stos
xchg
cmp
shl
inc
push
ret
or
cmpsb
in
xchg
repz
pop
stos
mov
nop
mov
pushf
pop
cmp
ja
je
mov
clc
jmp
pop
and
test
test
adc
sahf
push
cli
fnsave
fistpl
jbe
add
data16
sub
daa
ja
lahf
ja
xchg
aas
bound
pop
mov
inc
xchg
in
pop
xchg
negb
mov
inc
sti
inc
imul
sub
xor
push
pop
imul
jmp
popf
push
leave
and
sti
or
push
mov
int
mov
dec
xchg
lret
dec
lcall
fbld
mov
push
cmp
addr16
dec
fiaddl
xor
ljmp
and
lcall
out
adc
xchg
imulb
cmc
xor
xor
push
dec
sbb
mov
pop
int
repz
dec
sbb
test
jge
dec
or
lods
pop
or
dec
sbb
out
push
pop
mov
sti
mulb
xchg
popf
call
aas
int
fsts
fidivs
sbb
clc
push
daa
inc
xor
into
pop
push
jb
test
cli
ss
hlt
es
push
mov
jae
loope
jo
imul
inc
xor
adc
lahf
mov
add
lret
dec
xor
lcall
je
loopne
ds
pop
sbbb
xor
jns
add
inc
cmpsb
stc
out
pop
jg
popf
push
mov
mov
or
jl
fstl
popa
mov
mov
cmp
push
adc
lret
jge
mov
jmp
cmp
add
divl
mov
mov
popf
mov
xor
mov
pop
pushl
pop
dec
push
pop
in
mov
sbb
add
in
dec
add
push
pop
fndisi(8087
sbb
push
jle
into
sbb
dec
lcall
enter
cmpsb
xchg
cmp
sbb
jg
cmp
pusha
icebp
test
or
pop
bound
cli
xlat
pop
push
mov
xchg
mov
mov
and
into
push
dec
dec
fists
jbe
dec
aad
cmp
xchg
js
stos
adc
bound
std
repnz
adc
out
and
repnz
jl
xchg
and
add
cli
push
pop
hlt
rorl
jge
push
jecxz
out
sub
jb
int
pop
pop
imull
and
dec
cld
push
pop
popa
push
stos
imul
push
jne
push
and
inc
jno
jb
add
mov
mov
inc
mov
sbb
jno
jnp
pop
push
jae
in
dec
shrb
cmpl
test
leave
decl
arpl
sarl
mov
aam
movsb
popa
lret
divl
outsl
pop
xchg
jo
sbb
jg
das
stos
jbe
rol
je
jne
in
sub
add
out
mov
loopne
mov
mov
addr16
fsubrl
add
movsb
xor
daa
jno
pop
ret
lret
inc
push
inc
out
xchg
push
xor
xor
xor
cmp
mov
mov
sub
dec
stos
pop
fcompl
sub
hlt
lret
imul
ss
data16
mov
ret
jae
nop
pop
movsl
dec
divb
mov
ret
dec
or
and
cltd
addl
sbb
insb
adc
insw
adc
lods
dec
adc
adc
out
pop
sbb
pop
pushf
xchg
adc
test
or
clc
push
pop
jp
or
mov
insb
shll
or
hlt
dec
add
add
mov
xchg
mov
movsb
fcoms
pop
scas
pop
mov
inc
fld
fnsave
test
mov
mov
push
call
inc
and
mov
test
lock
mov
mov
xchg
hlt
add
repnz
notb
sub
cltd
mov
mov
pushl
insl
fstpt
xor
fwait
mov
sti
mov
aas
ljmp
pushf
inc
scas
test
push
stos
mov
add
fsubrl
es
mov
push
xchg
push
mov
test
ret
sbb
fisttps
jae
movsb
jl
or
loopne
cmp
jb
popf
pop
inc
lret
outsl
mov
adc
faddp
js
addr16
xchg
test
cmp
and
ljmp
xchg
pop
rolb
push
es
test
adc
outsl
test
sti
dec
sar
inc
dec
loop
ss
dec
nop
inc
shrl
mov
ds
and
inc
add
aad
xlat
dec
mov
int3
pushf
jecxz
call
ss
jmp
daa
cld
int
stos
fimuls
ret
call
ja
lret
xchg
adc
mov
aaa
xchg
sub
adc
push
xchg
aaa
push
imul
pop
mov
imul
add
xor
das
add
sub
sub
cwtl
or
ljmp
xchg
jae
dec
mov
cmp
in
mov
dec
push
orb
enter
adc
addr16
jne
cmpl
pop
ljmp
int
mov
add
mov
sub
mov
jbe
mov
mov
popa
sbb
mov
gs
ss
cs
adc
push
popf
sub
or
insb
jns
fwait
push
scas
cmp
or
scas
dec
sbb
pop
fnstenv
outsl
nop
mov
or
decl
jl
fcomps
fnstenv
dec
mov
inc
cmp
inc
sub
xlat
mov
and
clc
les
jo
dec
lea
add
push
stc
imul
pop
push
jle
addl
sbb
fistps
adc
sti
add
push
lahf
mov
fcmovnu
and
int3
or
mov
jmp
dec
push
ret
push
pop
shlb
mov
std
pop
daa
js
enter
leave
test
into
jle
sarl
mov
inc
insl
cld
mov
xlat
lret
push
and
add
jmp
into
std
dec
push
mov
pop
dec
ljmp
mov
rcr
cmp
icebp
dec
mov
add
adc
bound
pop
pop
fisubl
clc
adc
jle
pusha
scas
enter
push
lods
mov
pop
fs
nop
xchg
lds
mov
inc
pop
fdivs
dec
fisubrs
dec
dec
pop
rcl
push
add
cmpsl
test
shr
or
jb
mov
xor
mov
inc
cwtl
ljmp
inc
cmp
sbb
shll
idivl
inc
cmp
jne
inc
int
mov
testb
lcall
mov
int3
fimuls
pop
aas
xlat
mov
pusha
cmp
daa
adc
call
jmp
pop
je
cmp
in
xchg
fistpl
je
rcrb
cmp
cmp
xor
jecxz
xchg
mov
dec
add
filds
xor
data16
sub
add
push
dec
push
pop
mov
jmp
add
push
jo
insb
mov
mov
push
idivb
cltd
xchg
and
xchg
fildll
push
loope
mov
ljmp
jp
sbb
sub
outsb
cmpsb
ds
xchg
frstor
iretw
cwtl
xor
pop
xor
lret
int
add
in
cmpsl
clc
roll
or
gs
stc
dec
xchg
mov
test
push
fsubs
jg
push
lock
push
dec
stos
repnz
fimuls
jg
and
ret
mov
lods
mov
pusha
jmp
mov
repz
ret
out
push
aaa
scas
xor
aad
or
shl
and
xchg
lods
loope
push
pop
mov
pop
mov
jb
mov
fcompl
rcll
adc
popf
mov
loope
fs
ficoml
mov
test
rcll
and
ljmp
add
dec
icebp
and
jno
inc
test
push
out
int
dec
inc
mov
hlt
je
push
xlat
shl
fiaddl
xchg
lret
out
mov
out
cmp
int3
rolb
movsb
xchg
nop
and
mov
gs
lods
and
fstps
mov
into
test
jecxz
outsl
or
or
mov
test
nop
sarl
fs
aam
mov
and
leave
daa
and
clc
add
add
mov
gs
and
cs
ss
sbb
repz
hlt
xchg
or
test
nop
pop
mov
movsb
push
call
or
sub
or
jno
aas
in
addr16
xchg
mov
jbe
xchg
bound
cmp
or
ds
leave
pop
push
mull
aad
fistl
lods
sbb
xor
add
xchg
out
sub
and
push
in
push
ret
insb
jb
push
call
add
sbb
jle
ljmp
pop
fcompl
leave
xchg
mov
add
jecxz
mov
es
popf
into
push
cmp
dec
or
stos
mov
jnp
lahf
add
adc
in
mov
fs
ds
mov
fwait
or
popf
cmp
dec
popa
lret
int
xchg
jne
jge
sbb
imul
icebp
and
sub
popf
scas
add
push
shlb
pop
cmpsl
test
xor
repnz
jg
lret
sbb
adc
lock
aad
xor
sbb
addr16
push
push
fsubrp
dec
jne
add
aaa
repnz
mov
lret
xchg
mov
ss
leave
pop
mov
aas
inc
mov
cmpsb
xor
negb
in
pop
adc
push
jle
ja
push
int3
test
sahf
jb
mov
das
dec
testb
shr
aam
inc
loopne
xchg
jl
push
cmp
out
mov
add
std
enter
inc
cltd
cmp
and
insl
mov
cmp
in
sub
mov
movsl
mov
es
daa
mov
lcall
cwtl
aad
dec
pop
fwait
pop
jmp
mov
in
cmp
fwait
mov
rol
pop
cmp
jno
add
jmp
ret
or
mov
rorb
xchg
xchg
ret
repz
repnz
lods
dec
jle
adc
ja
dec
in
mov
shll
or
hlt
lret
adc
dec
pusha
iret
mov
imul
lret
pop
pusha
aam
pop
ret
shlb
jne
sbb
scas
xchg
loopne
jg
in
sbb
ret
mov
mov
mov
jle
adc
pop
adc
mov
and
scas
pop
jno
push
dec
jmp
jb
les
out
add
adcb
cmpsl
cmp
sbb
cmp
inc
pop
add
jle
mov
imul
mov
inc
lret
inc
out
add
add
sbb
adc
fcmovb
sbb
dec
sbb
out
mov
repnz
out
imul
add
jg
add
push
fisttpl
iret
dec
ljmp
xor
mov
and
test
popf
jb
clc
jno
in
subl
dec
loop
mov
xlat
cmp
in
mov
out
pop
push
push
xor
out
ficoml
ret
bound
xor
mov
pop
fldcw
fiadds
sbb
mov
mov
out
inc
std
insb
inc
push
ret
fisttpl
pusha
lods
inc
pop
stos
out
pop
jb
jo
insl
push
mov
call
sahf
jmp
pop
icebp
in
and
adc
jg
sub
jae
sub
sbb
add
push
xor
fldcw
push
adc
and
xchg
fidivl
loope
sbb
test
mov
adc
sub
cli
es
movsl
mov
mulb
stos
lods
cmpsb
cmpb
mov
mov
out
mov
and
lods
rorl
mov
jo
jb
push
add
inc
stos
jno
and
mov
jle
enter
sub
orb
aad
cmpl
push
jmp
shrl
fimull
int
dec
arpl
mov
testl
xchg
mov
leave
jl
mov
push
subb
jg
dec
push
add
fimuls
outsb
movsl
pop
ret
push
call
fmuls
in
orl
jg
cmp
ljmp
and
cmc
mov
xchg
mov
stos
fildl
jb
xchg
lahf
repnz
sub
out
dec
das
loope
push
cwtl
mov
jmp
dec
fstps
popf
xlat
mov
push
ficomps
fistps
pop
sar
cli
lret
div
divl
sub
xchg
pop
insb
add
xorb
clc
mov
cs
scas
cmp
push
cmp
adc
cwtl
fstpl
pop
push
jns
fiadds
push
aam
clc
enter
xor
adc
inc
inc
aas
jle
mov
add
subl
mov
or
fiaddl
aaa
xor
xchg
rorl
mov
insb
mov
int3
jmp
std
loopne
add
jne
filds
ljmp
dec
dec
adc
cmp
push
fstpt
pop
fbstp
dec
insl
scas
add
test
dec
pusha
fisubrs
cmp
pop
cmpsb
xor
xor
sbb
and
lret
outsl
imul
jmp
je
mov
mov
repnz
push
and
push
lods
sbb
jns
test
mov
scas
outsl
sbb
ljmp
mov
push
push
test
or
gs
xor
xor
xor
sbb
mov
add
les
pop
bound
xor
mov
xor
xchg
mov
sbb
pop
cmp
cmp
scas
test
xchg
cmp
ss
push
sub
pop
lret
jl
mov
fimull
shr
sub
cmp
add
xorl
and
inc
mov
push
cmpb
fs
pop
gs
mov
popa
lods
lods
mov
push
and
fbld
cmc
sub
push
jae
add
pop
into
imul
ret
xchg
in
dec
cmc
rcrb
insl
in
jg
clc
out
sub
dec
pop
jecxz
mov
push
cmpsl
push
outsl
aaa
arpl
adc
xor
adc
sbb
jmp
xor
adc
stc
insb
daa
xchg
sub
aad
ss
cltd
cli
mov
cmp
cmpsl
pop
or
dec
outsl
stos
mov
or
or
or
mov
scas
push
mov
cmp
shr
sbb
pop
out
mov
pop
sbb
lret
xlat
je
popf
cmp
dec
adc
pushl
shlb
sbb
dec
stc
xchg
mov
or
sub
repnz
push
lahf
mov
push
jp
mov
and
inc
stos
xchg
fnstenv
adc
ror
mov
lret
das
testl
dec
stc
jge
insb
inc
mov
lods
mov
out
jl
int3
jbe
call
cs
mov
aas
mov
adc
test
inc
mov
shrb
test
sub
mov
sbb
add
push
dec
mov
push
cmp
scas
rcpps
mov
or
xchg
enter
inc
cmp
pop
ficoml
iret
xchg
inc
ds
loopne
pushf
in
popa
push
or
ss
sub
lods
lret
addr16
jp
add
pop
mov
push
daa
jb
dec
loop
xchg
mov
outsb
rcrb
adc
loop
popf
mov
mov
out
rol
clc
mov
dec
pop
mov
divl
jne
jge
je
aam
das
jae
stc
inc
arpl
pusha
bound
mov
jecxz
xchg
xchg
stos
jl
clc
mov
adc
lods
cmpsl
sahf
lahf
aas
es
pop
imul
adc
xor
cmovl
cmp
sub
out
mov
lret
pop
pop
enter
aad
xor
jae
jno
cs
pop
and
in
sarl
add
outsl
mov
push
rcll
xchg
inc
movsl
rorb
jne
mov
mov
xchg
push
sbb
inc
ficoml
sarb
cld
cmpsl
push
rol
xchg
mov
lods
in
inc
cmp
movsb
mov
aas
faddl
in
cmpsb
push
std
jbe
loop
sub
xchg
xor
in
push
movsl
dec
add
adc
lds
cld
addr16
test
out
aam
xlat
sbb
lea
xchg
das
mov
ret
sub
and
aaa
add
sbb
cmpsb
dec
jl
pop
jae
lea
xor
mov
clc
and
mov
sbb
jbe
inc
sahf
push
xchg
loop
mov
cmpsl
push
adc
pop
push
mov
pop
lock
or
adc
inc
out
arpl
clc
push
ljmp
popa
sbb
add
in
mov
push
iret
jmp
lret
scas
stc
mov
movsb
pop
imul
call
ret
clc
in
lcall
ja
out
decl
mov
ret
or
push
mov
movsb
xchg
jno
cmpsb
add
inc
ja
dec
or
out
lcall
mov
jbe
or
push
cli
adc
bound
xchg
es
cli
fsubs
add
and
cs
or
subl
testl
adc
mov
dec
jne
mov
push
inc
pop
lock
add
inc
xor
xor
mov
jnp
sub
mov
cmp
mov
lcall
das
aas
or
movsl
pushf
push
cs
jecxz
jmp
je
mov
mov
fstpt
icebp
sub
mov
sbb
jne
xor
add
cmc
in
adc
std
insl
mov
add
rcr
push
or
xchg
into
cmp
rorb
dec
enter
ss
mov
jg
jbe
gs
nop
pop
enter
mov
or
insb
addr16
xor
jecxz
sub
or
cmp
and
scas
sbb
dec
mov
xchg
mov
sbb
and
add
mov
inc
pushf
loop
pop
outsb
rol
bound
cmp
cmpsb
scas
mov
lds
inc
jg
mov
inc
cmp
dec
cmp
xor
shrl
push
jbe
scas
add
jl
jmp
inc
push
leave
stos
xchg
int3
push
inc
mov
push
into
daa
jl
repz
xor
sbb
daa
cli
fisttps
push
dec
xlat
movsb
or
mov
mov
test
pop
enter
ret
outsl
cmp
jbe
jecxz
icebp
sbb
xor
sarb
fldcw
subb
pusha
ja
push
sbbl
adc
js
inc
push
xchg
add
stos
ror
stos
xchg
test
stos
movsl
and
sub
add
bound
test
je
cld
cmpsb
sub
ja
fistpll
xor
xchg
cmp
loope
cwtl
pusha
sbb
sbb
jno
sub
inc
add
mov
mov
mul
jbe
test
stc
mov
gs
negb
jns
loope
sti
push
adc
pop
test
stc
jecxz
cmpsl
in
mov
cmpsl
into
xchg
sbb
lods
pop
sbb
sarl
stc
hlt
lret
mov
dec
outsl
andps
push
shl
pop
dec
cmc
outsl
mov
stc
sbb
add
mov
movsb
loopne
jg
push
pop
push
xor
pop
inc
fidivrs
xor
xor
push
call
jp
fstps
inc
loopne
inc
sbb
movsl
mov
inc
xlat
xchg
or
inc
mov
xchg
lcall
push
pop
lods
xor
cmp
lret
ljmp
xchg
clc
jbe
out
std
jno
dec
sarb
or
fmuls
idiv
insl
lock
mov
cmp
shlb
jge
out
dec
inc
ret
pop
scas
adc
sti
inc
jmp
sub
adc
and
xorl
movsl
insl
push
or
lea
mov
adc
mov
inc
nop
push
int
fisubl
inc
xor
sub
ja
bound
pop
add
cld
inc
test
mov
mov
or
into
xchg
fldenv
cmpsl
pusha
mov
push
xchg
adc
repnz
decb
mov
pusha
cld
xor
movsb
shrl
shr
addr16
xor
lods
sahf
rcl
dec
fstl
mov
pop
cmp
cmp
xchg
testb
cmp
jg
popf
stc
xchg
sbb
testl
cmc
aad
gs
call
dec
push
or
inc
orb
and
aas
nop
sub
aam
mov
pop
adc
adc
dec
imul
sub
sbb
dec
cltd
push
push
jge
in
lea
mov
fnstenv
xchg
mov
fs
fldl
test
sahf
mov
in
outsb
and
ss
fsubl
lods
push
sub
mov
push
repnz
sahf
xchg
lds
sbb
pop
movsl
and
dec
scas
jl
cmc
add
or
and
push
cmp
mov
adc
daa
or
arpl
pop
push
pop
dec
sbb
ss
jo
mov
dec
lcall
fs
lcall
sbb
outsl
mov
fisttpl
xchg
int
mov
mov
test
xor
cli
add
pusha
inc
adc
mov
inc
out
jno
fst
mov
out
sbb
xor
ds
jae
cwtl
add
cmp
pop
out
mov
imul
fcoml
mulb
repz
outsl
int
xlat
shrl
push
push
insb
xchg
or
inc
outsl
pop
jns
mov
mov
lcall
or
mov
shr
mov
scas
jb
xchg
mov
inc
fdivrl
pop
stos
mov
imul
mov
pop
add
adc
dec
push
push
jge
and
jnp
xor
push
pusha
add
push
popa
stc
inc
dec
stos
fwait
and
arpl
rcrb
mov
das
mov
outsl
lahf
jb
arpl
mov
int
lods
in
push
fnstsw
push
mov
scas
scas
mov
xchg
mov
jne
outsb
mov
mov
xchg
arpl
lock
sbb
daa
cmp
and
ja
insb
xor
scas
inc
xor
and
ljmp
cmp
inc
xchg
jns
mov
mov
mov
push
mov
cmp
push
loopne
das
cmc
adc
fldt
lods
jmp
push
adc
xchg
add
nop
cltd
call
pusha
cmp
sahf
test
jbe
nop
lock
loopne
aas
lock
dec
sbb
or
add
ds
cmpsl
and
xchg
pop
mov
xlat
out
vminps
aam
dec
repnz
adc
and
decl
testl
shl
mov
js
pop
hlt
dec
ss
out
jge
mov
je
pop
sahf
testl
test
mov
and
xor
sbb
repnz
lods
lds
cltd
jle
daa
fs
mov
or
idivl
or
mov
dec
icebp
and
cltd
cmp
outsb
fisubs
adc
cmp
loop
and
jnp
cmc
and
fwait
jns
sbb
int
xor
sbb
dec
gs
out
inc
imull
pop
dec
mov
ja
addb
mov
rcll
mov
adc
fisttps
ret
sub
pop
xorl
not
cmc
stc
jno
adc
int3
pop
add
aam
stos
push
pop
mov
sbb
into
lods
mov
add
jno
xchg
popw
daa
cltd
xor
push
push
aaa
adc
shll
or
sbb
add
dec
lret
cs
popa
je
jg
mov
adc
dec
insb
sub
sahf
dec
jle
push
add
ss
mov
push
repz
push
in
adc
xchg
mov
add
jmp
xor
mov
or
cmpsb
and
outsb
add
pop
pop
push
inc
das
mov
lds
add
fiaddl
adc
push
loope
push
fsubrl
sbb
jo
sub
popf
bound
les
adc
xchg
mov
ja
pop
sub
int3
orb
int
mov
pop
mov
ds
and
aad
xchg
fistps
inc
mov
sarl
shrb
sub
mov
mov
sbb
xor
in
loope
sbb
cld
or
nop
cmpsb
dec
jg
test
out
int3
lret
jecxz
test
add
sahf
cmp
addb
mov
iret
rorb
movsl
clc
stc
in
cmp
sub
sub
inc
mov
fsubr
sub
jbe
ficoml
jbe
pushf
pop
pop
or
pop
fnstsw
jo
notl
in
aaa
jp
mov
ss
lret
xchg
hlt
lods
and
adc
pusha
cmp
xorb
sub
mov
leave
in
xchg
imull
pop
jmp
insl
imul
push
enter
xchg
loopne
inc
pop
push
fnstenv
add
xchg
jo
mov
clc
stos
cmp
sub
ljmp
loopne
push
mov
das
adc
outsw
popf
push
xchg
rorb
popf
pop
sub
lahf
and
sbb
cltd
xor
xor
mov
fstpl
jg
fs
sbb
add
push
mov
addl
daa
or
mov
and
adc
cmp
repnz
lcall
pop
aas
cltd
cltd
ja
cli
gs
jo
movsl
adc
jno
test
ss
popa
sbb
lcall
dec
add
insl
ss
jecxz
xor
push
sbb
pop
jae
add
int3
popf
pop
dec
filds
mov
push
nop
mov
cmpsl
enter
adc
and
add
fidivrs
pop
es
mov
in
and
push
jmp
call
mov
or
inc
sahf
icebp
sub
push
cmp
add
xchg
push
and
outsl
dec
les
mov
mov
rcrb
enter
sub
aad
cmpsl
mov
aam
cli
rcr
jge
jns
aaa
sbbl
or
negb
sub
leave
jae
jno
xchg
bound
jnp
out
lock
mov
int3
xchg
stc
scas
pusha
mov
decl
out
test
fiadds
dec
mov
push
cmp
pusha
adc
add
mov
sbb
xchg
stos
test
cs
xchg
push
lahf
mov
addb
push
lret
jmp
loop
sbb
jno
cmpsl
out
movsb
mov
dec
and
mov
mov
insl
mov
jg
adc
test
push
xchg
ret
inc
lods
mov
mov
or
push
mov
rorl
xor
push
aaa
mov
mov
dec
fs
sub
add
stc
popa
sbb
popa
insl
push
scas
es
js
in
scas
mov
cli
mov
inc
cmp
inc
dec
nop
mov
fldcw
xor
fcomi
popf
jmp
mov
popf
pop
jnp
jns
shlb
shl
stos
xor
jno
pushf
testb
mov
mov
adc
subb
bound
mov
xchg
movsl
dec
add
dec
arpl
testl
pop
sti
dec
push
or
mov
sbb
in
push
xchg
ret
and
cmpsb
inc
or
popf
pushf
pop
packuswb
and
insb
mov
xchg
aam
repz
sub
aaa
cltd
pop
or
jns
sub
dec
leave
out
jle
mov
mov
rcrb
push
add
xchg
test
adc
fcmovb
sub
cmp
xchg
dec
pusha
shlb
mov
scas
and
test
mov
sbb
sub
sbb
lods
cltd
test
sahf
mov
daa
add
add
mov
aad
mov
paddsb
jl
aam
pop
pop
adc
shll
fdivs
add
mov
mov
mov
inc
push
test
jg
jno
pop
add
mov
push
fmul
cmp
fdiv
insl
xor
hlt
lds
dec
inc
stos
dec
inc
xor
push
or
or
adc
xor
test
mov
pop
frstor
in
pop
je
hlt
pop
lods
push
push
out
mov
cmp
or
xor
es
neg
mov
or
xchg
cmp
aas
sub
sub
testl
add
push
jb
pop
xor
sbb
out
xor
push
loopne
add
dec
mov
cltd
stos
mov
pop
icebp
cmp
pop
lods
cs
xchg
lods
mov
gs
stos
push
cltd
cmp
out
das
lahf
int3
lret
daa
dec
mov
int
add
pop
shll
aad
ds
sub
mov
xlat
xchg
xchg
fstps
ja
fisttpll
div
jb
inc
lods
xchg
lahf
xchg
shlb
fstps
mov
jle
add
sub
push
ja
stc
push
aas
sahf
call
jne
or
in
sahf
jle
dec
orb
cld
scas
cmp
xchg
arpl
add
xchg
roll
or
xchg
jmp
sub
push
mul
pusha
dec
push
imul
jmp
es
push
xchg
adc
sub
outsb
call
inc
movsb
adcb
les
xor
inc
push
pop
mov
xchg
lahf
jecxz
out
subw
mov
icebp
in
aas
lret
mov
pop
insb
pop
mov
and
mov
mov
jl
lahf
fsts
leave
mov
rorb
mov
rcll
xor
ud1
pop
jge
push
push
fistpll
pop
aam
movsb
sub
pop
addb
mov
or
aam
jle
inc
shlb
mov
and
mov
adc
push
xchg
push
filds
push
adc
ficoml
inc
adc
push
sahf
data16
push
mov
sbb
fsubrp
pusha
xchg
lock
mov
jge
push
std
in
cld
push
int3
stc
mov
stos
sbb
inc
cmc
cld
dec
cmc
loop
adc
dec
push
sbb
or
cltd
jg
jle
outsl
daa
push
lods
jb
mov
outsb
jbe
pop
sbb
out
mov
xchg
stc
xchg
testb
jno
lea
in
fadds
mov
sbb
sti
in
mov
add
mov
sub
ds
sbb
inc
addr16
stc
cmp
cmpsb
mov
insb
imul
orl
daa
add
rcll
dec
sbb
stos
movsb
add
rcll
jmp
mov
leave
js
mov
cwtl
push
xchg
jnp
jg
push
iret
mov
test
rcll
push
mov
mov
and
mov
jg
inc
adc
hlt
dec
xchg
out
popf
xor
xor
push
xor
pop
cmpsb
sub
cmp
sbb
dec
add
popa
popa
std
loopne
jl
sub
pop
out
stos
cli
push
div
out
sbb
jecxz
bound
ss
das
inc
insl
push
ja
xor
jmp
test
cmp
movb
test
into
ret
cmp
push
lods
mov
xchg
mov
push
lock
xor
inc
pop
pop
fbstp
in
popf
mov
iret
push
mov
jmp
pop
push
out
lods
out
ljmp
cmp
clc
xchg
pushf
leave
lret
sub
xlat
mov
push
sbbb
lahf
jge
cmp
xor
pushf
cmp
and
mov
enter
adcl
sub
aad
dec
outsb
ja
cmpsb
mov
inc
rorb
gs
sub
subl
mov
jp
lds
xchg
sbb
jo
dec
outsb
push
scas
cmp
pop
xor
sbb
mov
inc
mov
aad
xchg
test
test
std
mov
subl
add
pop
sub
inc
add
adc
sub
aam
out
jp
leave
adc
or
jge
jp
jnp
inc
sub
insb
mov
pop
sub
add
cmc
lock
rclb
into
pop
sub
mov
add
test
out
rcr
sahf
sbb
or
sbb
lock
roll
inc
cwtl
xor
jb
popa
mov
je
negl
mov
inc
pop
dec
std
push
mov
aam
or
ljmp
jp
ljmp
pop
inc
jle
stc
sub
or
mov
pop
addb
mov
dec
inc
add
lret
pop
xchg
xlat
pop
jl
movsl
xchg
dec
jns
notb
aas
push
and
or
arpl
push
pop
sarl
inc
or
or
mov
pop
in
xchg
fucomip
sti
pushf
adc
es
xor
je
sbb
ror
scas
mov
cmp
push
movsl
in
mov
ret
shlb
jecxz
lret
inc
pop
int
lea
jo
jb
add
inc
ror
frstor
ffreep
adc
iret
xor
and
jl
mov
clc
mull
xor
cmpsl
rcr
push
in
xchg
inc
andps
xor
aaa
jne
popf
xor
pop
cli
enter
sbbb
dec
mov
sub
jmp
or
xchg
outsl
push
popf
inc
in
push
sarl
movsb
jo
stc
add
push
push
movsl
mov
xchg
xchg
push
scas
fisubrl
cld
and
pop
pop
imul
sbb
inc
adc
pop
inc
lods
test
adc
mov
gs
dec
xchg
stc
outsb
jns
daa
pop
sbb
cmp
mov
shrl
add
mov
enter
sub
scas
and
aad
mov
or
adc
mov
mov
je
mov
cltd
push
mov
add
or
in
movsb
sti
aam
arpl
fisttpl
js
sub
out
sbb
sub
lods
out
ljmp
aad
push
out
dec
icebp
in
xchg
testb
and
pop
movsb
into
xchg
out
shll
in
mov
inc
mov
jno
test
retw
xchg
mov
fldcw
and
mov
cmpsl
dec
enter
add
mov
icebp
xchg
pushf
loopne
cmp
jmp
jecxz
cmp
push
mov
xchg
ret
fcmove
ja
pop
xor
shlb
dec
jae
sbb
imul
sub
add
jbe
or
mov
or
sub
lret
rcll
xor
push
pusha
iret
pusha
pop
mov
cmovle
add
xchg
icebp
clc
ds
xor
sub
hlt
into
das
fisttpll
mov
call
ror
cmpb
push
inc
sub
test
insb
jno
jl
js
aam
stos
repz
inc
mov
movsb
jo
and
ss
jmp
push
sub
ja
cwtl
dec
sub
data16
scas
mov
xchg
dec
adc
xchg
dec
in
movsb
jg
sbb
dec
or
and
xchg
mov
push
inc
pop
stc
test
cmp
cmp
jg
dec
jns
push
das
or
sub
push
jecxz
movb
call
jmp
btc
jg
inc
and
and
nop
fldl2e
mull
dec
add
cltd
xor
add
leave
mov
dec
ds
xor
testl
mov
xchg
mov
cmp
push
out
push
inc
clc
into
cmp
ret
xchg
cmp
mov
cmc
or
cmp
xchg
adc
call
xchg
outsl
xlat
inc
pop
pop
sub
adc
pusha
inc
ds
leave
mov
push
cli
fisubrl
jg
xor
cld
push
xchg
mov
popa
add
push
ds
mov
jmp
int
push
addr16
out
out
pop
sarb
cmp
cmp
xor
xchg
mov
jge
dec
dec
rorl
cmp
call
cltd
sbb
enter
adc
ja
sbb
sti
mov
or
push
jle
outsb
nop
and
not
mov
sub
add
fildll
shrd
xchg
add
imul
adc
adc
lods
inc
or
cltd
pop
mov
sub
jge
in
js
ljmp
sbb
jp
pusha
or
fs
and
mov
sbbb
sub
push
mov
jp
pop
push
push
push
mov
popf
clc
mov
cmp
testl
lret
push
sbb
test
mov
out
jp
inc
push
push
or
xor
sahf
imul
mov
sarl
insb
inc
jmp
and
and
enter
adc
and
jmp
lret
out
movsl
pusha
xor
inc
xchg
shlb
movsb
push
cltd
js
dec
fbld
aam
add
push
add
dec
fisttpl
aaa
mov
lret
or
dec
loope
loope
inc
or
or
xlat
test
add
stos
and
rolb
testb
fisubl
sbb
push
nop
fstps
and
repnz
mov
xor
pop
jp
mov
mov
pop
mov
add
mov
sarl
int
adc
add
jge
mov
and
cwtl
adc
jmp
inc
mov
fcomp
sub
test
adc
cltd
sbb
shrl
dec
stos
xor
lds
dec
dec
add
test
lret
into
lret
lcall
sub
jge
in
shr
pop
dec
pop
add
sti
mull
sbb
xchg
dec
pop
fistl
adc
push
fstpt
sub
ds
sub
stc
data16
enter
jnp
movntq
pusha
insl
mov
pop
adc
xchg
mov
add
lods
jecxz
pop
jns
test
push
lcall
jnp
daa
mov
push
frstor
out
in
xorb
cmp
dec
int
adc
aaa
mov
hlt
arpl
jecxz
dec
js
add
ret
lds
or
cmp
daa
les
jge
fnstsw
mov
out
jmp
cmpsb
mov
and
cmpsb
mov
movsb
mov
push
rolb
and
cmpsb
in
jecxz
jb
fsubr
add
sbb
mov
imul
jne
xchg
andb
pop
mov
adc
sbb
push
jmp
xchg
int
ljmp
ret
cwtl
in
iret
ja
lret
int3
loopne
push
pop
addr16
cmp
mul
shl
pop
xlat
sahf
int3
mov
inc
imul
pop
js
sub
push
shlb
mov
push
dec
push
nop
ljmp
fcoml
push
outsb
and
notl
int
push
std
cmpsl
or
jle
or
insl
push
jo
nop
and
xor
mov
dec
jnp
insl
pop
push
mov
movsb
cmp
js
movb
push
jp
adc
iret
mov
mov
sub
xlat
fs
sbb
sub
iret
gs
lahf
cmp
or
lcall
or
cmp
xchg
sbb
testb
cmp
into
scas
xchg
int
adc
fiaddl
in
in
pushf
dec
push
jle
sbb
test
cs
repz
fdivrs
aas
add
rolb
int3
jl
insb
daa
mov
aam
lds
repnz
pop
fs
imul
mov
std
sbb
lahf
xchg
pop
ficoml
jp
pop
mov
add
sbb
mov
in
push
out
popl
roll
mov
test
jecxz
out
addb
pop
xor
adc
js
mov
or
xchg
mov
arpl
sbb
scas
sarb
sbb
and
dec
push
std
mov
push
mov
stc
aad
mov
imul
xor
mov
aam
outsl
cmc
lods
or
es
push
aaa
mov
fs
lds
xchg
loopne
pushf
daa
xchg
ret
xchg
loope
ja
and
adc
icebp
fldcw
adc
xchg
mov
cs
fimull
iret
jg
xor
and
mov
into
jns
inc
pop
inc
hlt
mov
loopne
ret
sub
sub
addl
sbb
test
push
push
xchg
cmpsl
jns
jnp
ds
mov
jg
outsb
adcb
testl
movsl
mov
adc
add
arpl
test
xchg
or
add
jp
sub
aas
lock
decl
push
inc
sarl
dec
addr16
xchg
cmp
xor
dec
popl
iret
and
pop
fst
ss
insb
pusha
pop
inc
jmp
lods
es
jl
adc
add
mov
push
aaa
aas
divl
rclb
outsb
add
mov
ds
rcl
jecxz
popa
clc
lock
hlt
rdpmc
lods
repnz
lds
mov
mov
push
enter
outsl
add
scas
push
jno
test
adc
or
adc
out
roll
adc
mov
and
cmp
leave
or
ret
sbb
jmp
push
lods
aad
rorl
sub
push
cld
mov
dec
das
push
push
mov
mov
dec
add
pop
adc
das
pop
pop
test
inc
cld
lds
and
in
iret
adc
mov
repz
mov
xor
rcll
fs
push
andl
arpl
jecxz
or
loopne
sahf
call
sarl
test
pop
ficompl
xor
loop
xchg
xchg
outsb
jns
les
ja
jle
das
pusha
sbb
test
rorl
test
stos
stc
push
in
lods
xchg
xchg
pop
loopne
int3
sub
push
arpl
jg
mov
mov
hlt
dec
lea
push
jmp
pop
add
mov
sub
mov
fsubl
sbb
sbb
movsb
jl
cmp
loop
mov
fistpll
js
pop
sbb
aaa
xor
jecxz
addr16
mov
push
pop
dec
fdivp
dec
sahf
pop
sbb
pop
pop
mov
xor
pop
add
xor
mov
loope
out
lret
pop
mov
insb
shr
scas
fcomps
ds
push
adc
les
es
push
lea
add
push
jae
cld
movsl
stc
jbe
in
in
add
push
jp
fadds
mov
add
std
lcall
leave
pop
xor
inc
cmc
add
inc
hlt
mov
xor
lret
sbb
hlt
sub
xchg
stos
cmpsl
arpl
xor
add
jb
push
stc
dec
nop
dec
add
mov
mov
movsb
push
push
lods
pop
add
push
pop
or
cli
jne
push
into
jo
fidivrs
int
js
ret
cmp
or
mov
pop
add
lret
popa
jae
push
fisttps
xor
out
gs
mov
mov
in
jno
sub
sti
icebp
rolb
push
jb
fstps
ret
mov
arpl
inc
xor
xchg
dec
mov
movsl
or
jne
outsl
pop
dec
xor
fs
cmp
sub
mov
hlt
movsl
addb
lret
mov
js
mov
pushf
mov
fiadds
lret
xor
mov
loop
dec
mov
inc
iret
fbstp
adc
clc
enter
shl
sbb
cmpl
or
loop
and
mov
subb
cli
in
mov
scas
sub
test
mov
push
clc
aas
adc
or
adcl
sub
xchg
arpl
arpl
stos
jmp
mov
sub
pop
stc
sahf
lcall
and
push
sub
push
xlat
lret
test
fbstp
adc
enter
add
ss
xor
and
inc
add
aaa
orl
or
movsl
decl
or
aam
fwait
fs
call
sbb
cli
test
outsb
pop
fstpl
add
jle
stc
xorb
push
je
push
movsl
pop
mov
fsubrl
aaa
lods
stc
lret
ljmp
leave
jae
data16
adc
lods
xor
clc
popf
cmp
andl
lret
cs
pop
popa
xchg
mov
sbbl
sub
fsubl
push
pusha
and
iret
ret
iret
push
sbb
ds
fnsave
add
lret
mov
sbb
scas
divb
rcll
or
dec
jle
xchg
in
divl
pushf
outsl
pop
jle
cmpl
add
hlt
lods
stos
push
sbb
xchg
push
aam
adc
adc
pop
xor
adc
enter
jno
nop
xchg
mov
push
in
lock
or
out
ret
push
fmulp
xchg
rorb
xchg
addl
sbb
fs
es
lcall
iret
mov
je
jne
roll
out
adc
rorb
jne
push
test
repnz
or
cmc
addr16
fwait
pop
cmp
push
adc
hlt
and
and
xor
dec
xchg
inc
ss
mov
jns
xor
mov
sbb
ret
cmp
or
or
cmpsl
and
inc
aaa
sub
inc
rorb
scas
sub
aaa
std
out
sahf
push
mov
push
cmp
addr16
xchg
aam
xchg
dec
or
in
inc
mov
push
fistpll
repnz
cltd
cmp
out
inc
push
mov
mov
es
test
icebp
das
jmp
mov
stos
arpl
xor
shll
adc
sbb
movsb
subb
out
pop
les
jno
mov
or
aad
jo
scas
and
jg
mov
loopne
push
rcrl
dec
dec
out
out
lret
push
push
mov
dec
mov
lds
cmp
or
test
cwtl
cwtl
pop
and
jns
jmp
xchg
ljmp
enter
lcall
push
mov
enter
loope
aaa
push
jne
inc
mov
out
push
or
pop
lahf
jle
pushf
ret
arpl
mov
aas
jle
pushf
test
adc
insl
jb
movsl
mov
add
jb
nop
negb
jmp
xor
insl
std
call
add
insl
shlb
jae
sbb
sar
hlt
cld
sarl
out
mov
dec
loop
fldcw
pushf
add
push
repz
int3
shll
stos
jle
xchg
xor
pop
fmull
push
and
movsl
ja
ss
push
mov
jns
adc
xchg
sbb
es
jb
adc
mov
xor
inc
inc
popf
mov
and
sub
push
jns
and
cmpsb
mov
out
sub
rcl
jle
inc
je
sbb
es
imul
mov
push
mov
jno
add
jl
in
sti
mov
int3
pop
or
pop
loope
sahf
jbe
sahf
dec
fldl
adc
clc
add
inc
mov
inc
int3
xor
add
mov
sti
pop
stc
dec
pop
sti
fdivrs
enter
jge,pt
adc
loopne
push
pop
in
stos
gs
fs
jp
les
icebp
inc
sub
or
movsb
cltd
std
in
pop
xor
in
jae
mov
xchg
out
sub
into
xor
inc
fcomps
repz
mov
xor
add
or
xchg
lret
fcoml
enter
subl
inc
add
and
ret
daa
dec
adc
xor
mov
adc
shll
mov
sahf
add
imul
aad
int3
fwait
hlt
addr16
rorb
or
sub
pop
or
pop
das
dec
push
or
jle
adc
pop
das
push
test
std
cltd
sbb
add
cmp
and
inc
aad
jl
push
xor
inc
movsb
jo
jo
inc
and
sbb
cld
mov
push
lea
out
test
lret
mov
inc
test
xacquire
adcl
mov
inc
sti
push
imul
and
rcll
mov
aaa
push
sub
mov
stc
cld
sbb
andb
out
adc
push
jecxz
jge
iret
dec
xchg
cld
xor
xor
xor
or
fucom
ss
ret
dec
cmp
mov
arpl
cmpsl
inc
leave
mov
rorb
gs
lods
repnz
cmp
sub
xchg
jle
push
push
loope
push
nop
xor
sbb
fldl
sbb
je
push
adc
push
aam
add
inc
mov
data16
loopne
push
bound
lret
push
cmp
cmp
in
outsl
sbb
push
stos
mov
push
sbb
test
add
rcr
addr16
arpl
mov
sub
rcrb
fwait
andl
fwait
mov
cmp
mov
inc
mov
pop
mov
imul
adc
add
dec
aam
jl
and
pop
shlb
clc
aaa
jl
and
test
adc
inc
fwait
ret
test
cmpsl
je
mov
in
mov
cmp
subl
notl
and
icebp
insb
sbb
push
nop
in
lahf
mov
jns
pusha
nop
inc
je
gs
cwtl
pusha
inc
bnd
push
aad
out
or
ret
clc
and
mov
clc
jo
inc
and
ds
push
aas
push
mov
dec
mov
inc
aad
outsb
mov
leave
cmp
or
int
xchg
rcll
dec
lods
push
xchg
or
ret
mov
jns
mov
sbb
mov
sahf
pushf
clc
mov
sahf
inc
sbb
mov
repnz
in
add
repz
test
sti
mulb
cmp
cmpl
cmc
ret
lret
int
fsub
add
loopne
out
jp
pop
insl
push
outsb
cltd
and
cmp
xlat
adc
mov
xchg
out
jmp
or
and
testb
fidivs
movups
add
fcompl
stos
pop
jle
das
pusha
add
push
loope
xchg
adcb
data16
fiaddl
sbb
das
jae
shll
mov
std
inc
cmp
cmpsl
aaa
fidivrs
fcoms
movsl
mov
aad
or
out
jl
push
inc
lock
gs
aaa
addr16
mov
or
imul
into
int
bound
adc
push
dec
push
xor
pop
push
mov
xchg
and
push
movsb
jne
push
into
cmp
mov
mov
jecxz
push
sti
push
ljmp
push
mov
cmp
loop
dec
jo
adc
daa
aad
enter
fs
sti
xchg
dec
cmp
mov
push
cs
cvtdq2ps
mov
pop
mov
push
addl
scas
add
scas
push
leave
sub
mov
mov
jno
jne
add
lret
add
call
mov
pop
rcr
cmp
add
lds
lret
fistpl
push
add
xchg
xor
faddl
mov
mov
negl
jecxz
sbb
cmovb
cmp
aam
pop
out
pushf
pop
sub
adcb
xor
jae
add
and
sbb
insb
outsl
adc
mov
mov
cmp
xchg
or
jge
std
ljmp
fcomps
iret
cld
lret
insb
into
cmp
inc
int3
div
insb
rcrl
loopne
xchg
adc
mov
fcoml
ljmp
lcall
or
push
pop
lahf
adc
add
and
mov
call
push
sahf
dec
pop
cwtl
add
je
aad
int3
fmuls
fwait
lods
push
push
xchg
xchg
sub
lea
inc
adc
mov
bound
cmpsb
and
popa
dec
movsb
rorb
dec
imul
jbe
imulb
movsb
cwtl
push
or
push
lock
cld
or
mov
ja
cmp
xchg
inc
jnp
data16
jns
popa
ja
shl
push
dec
jecxz
pop
jns
inc
test
aad
or
inc
lcall
loope
rcrl
xor
inc
in
daa
test
mov
and
testb
xchg
jbe
lcall
push
lcall
push
sti
insb
pop
jmp
aam
ds
movsb
jns
cwtl
hlt
fsubrp
imul
adc
xor
ror
inc
dec
ja
rcll
fisttps
mov
call
xor
bound
rorb
fisubrs
pop
adc
jle
stc
adc
pop
outsb
sub
inc
push
dec
add
xchg
xlat
lcall
xchg
xchg
xchg
lds
mov
test
mov
fsts
fistpll
insb
jns
adcb
jnp
cmc
fdivrs
inc
mov
bound
pop
and
cmp
fs
in
pop
push
fs
repnz
xor
ja
movsb
mov
leave
xchg
or
scas
lret
and
jg
sahf
jae
fistl
and
popa
aaa
test
lock
cs
push
stc
pop
out
dec
int
mull
push
cmp
adc
xor
das
mov
adc
xchg
mov
js
fisubs
call
sub
jecxz
fisttpl
gs
popf
call
data16
adc
adc
xchg
jge
xor
push
bound
mov
or
stos
std
int3
mov
add
jge
cmp
jne
add
lods
dec
mov
fdivs
ds
lods
push
dec
sbb
cwtl
repz
test
xchg
testb
stos
loope
push
jmp
jmp
pushf
out
mov
push
cmp
fcomps
push
lcall
push
cltd
push
adc
xchg
jne
or
cmp
lret
or
xor
sub
mov
inc
lods
cmpsb
sub
pop
fcmovnb
jmp
in
cli
push
jno
loop
push
pop
inc
imul
cltd
push
bound
stos
shlb
sub
ret
lret
push
sub
or
cmp
adc
cld
rcr
xchg
jb
mov
movl
mov
cwtl
jns
fcoml
jbe
cmp
lcall
sbb
lock
je
or
lods
jno
pusha
xchg
rcrl
call
sti
and
cmpsb
push
pop
in
in
js
sub
stos
arpl
stos
dec
cltd
outsb
pushf
sbb
cli
repz
lods
in
lea
push
mov
and
lcall
in
mov
jecxz
add
mov
push
cmpsl
cli
cmpsb
sub
ja
jo
imul
sub
push
mov
movsl
xor
ss
push
xchg
loopne
imul
jbe
popa
pop
or
push
flds
sbb
jg
mov
int
sub
dec
test
mov
fildl
adc
mov
jb
in
and
mov
mov
push
jne
push
and
xor
rorb
or
movsb
pushf
sahf
xchg
data16
je
leave
or
cltd
push
adc
leave
test
pop
xchg
pop
push
testb
adc
lahf
mov
xchg
ljmp
into
sbb
push
sbb
int3
xlat
mov
xor
cmpsb
scas
lret
or
add
jmp
dec
add
mov
out
xor
mov
cltd
inc
pop
arpl
push
lds
mov
mov
popa
jle
sarl
in
sahf
mov
xor
ja
ficomps
lods
mov
pop
dec
pop
aad
pop
inc
call
xchg
inc
fstp
pusha
mov
mov
fwait
sarb
inc
and
dec
jb
xor
mov
imul
cmp
add
sub
rorb
fs
mov
dec
loope
adc
xchg
out
and
lds
je
fistl
sbb
inc
sahf
mov
mov
mov
jg
jge
dec
les
adc
jle
in
ret
and
jl
insl
movsl
mov
cmp
js
sub
sub
shlb
mov
jbe
pop
sbb
xor
daa
icebp
mov
or
into
daa
sbb
out
jmp
xchg
and
mov
fs
ret
ds
outsb
mov
xor
outsl
xlat
leave
stc
shlb
mov
jmp
sti
push
shl
inc
or
repz
add
pushf
test
loope
sub
mov
lea
inc
ljmp
sti
inc
jle
cmpsl
xchg
dec
pop
xor
testb
bound
popa
lcall
jmp
loope
or
jle
cmpsl
pop
mov
sub
out
stos
dec
hlt
mov
sub
push
xor
xchg
je
and
xor
add
jo
push
sbb
mov
cwtl
sub
cmp
mov
add
sub
or
xchg
imul
fmull
mov
or
xchg
xchg
xor
lds
fsubrl
outsb
imul
push
jns
nop
mov
cli
pusha
sub
pusha
in
scas
xlat
decb
repz
xor
icebp
cltd
inc
mov
outsb
mov
or
rclb
adc
inc
mov
fisttps
cmpsb
stc
sub
sbb
pop
testb
lahf
lods
xor
pop
pop
repz
mov
test
mov
test
negb
xchg
and
cmp
and
adc
add
push
xchg
and
pop
pop
jmp
cmp
jbe
imul
sbb
dec
push
out
out
cmp
xlat
pxor
cmpb
pop
push
xchg
lods
stc
ret
push
out
imul
xchg
jle
mov
mov
or
mov
jns
jl
xchg
data16
jp
orl
aam
adc
mov
mov
cmp
ja
mov
mov
xchg
mov
in
lds
fwait
rolb
testb
es
in
mov
fs
cmc
inc
push
dec
fstps
ds
clc
push
dec
enter
inc
dec
mov
xchg
shrb
mov
nop
in
out
push
sbbl
pop
sahf
cmc
adc
rclb
sbb
pop
fmull
jle
aad
or
sbb
sarb
xor
ror
sahf
adc
fmulp
dec
loope
out
scas
pop
stc
lret
push
loopne
test
in
mov
xchg
movsb
rorl
cli
fcmovb
dec
sub
gs
subb
mov
enter
ss
test
push
fldt
cmp
jp
adc
int3
hlt
add
or
sub
xchg
fcomps
or
pop
movsb
imul
xchg
add
push
test
lock
test
jno
dec
or
faddl
xchg
add
arpl
jle
fildl
pop
fmull
pop
pop
inc
mov
stos
push
adc
dec
jo
xchg
or
inc
out
adc
jge
pop
mov
loop
sbb
in
shll
inc
in
pop
pop
in
and
inc
outsb
and
inc
int3
xor
mov
sub
data16
jb
dec
lahf
add
mov
ja
std
push
leave
sbb
fwait
xor
sbb
push
lods
mov
sub
xor
lret
cmp
ss
inc
filds
bound
aam
into
push
dec
mov
imul
enter
jmp
xchg
insb
out
lock
test
scas
push
jne
cmp
or
test
repz
and
aam
cmp
adc
inc
ljmp
ret
sbb
orl
movaps
int
cld
xchg
out
std
pop
mov
mov
add
xchg
insl
pusha
imul
xor
test
out
shll
sahf
or
mov
cmc
and
hlt
rcrb
in
mov
mov
inc
lret
or
insl
mov
add
push
insb
jae
jp
imul
xchg
icebp
loope
push
inc
jno
lret
aad
in
loop
std
in
fwait
stc
mov
leave
cltd
pop
xor
popa
shll
push
xor
jnp
repnz
add
push
in
ss
xchg
mov
in
adcl
pop
shlb
pushf
sbb
ja
fbld
in
dec
cs
push
jb
jnp
loope
insl
xor
ret
lret
int
std
adc
lds
lock
test
xchg
xor
inc
add
loop
mov
jge
mov
jnp
inc
int3
pop
daa
sti
fildl
jmp
xchg
pop
push
push
adc
mov
out
cmovbe
mov
ret
mov
pop
stos
xchg
xchg
pop
inc
lcall
and
jecxz
mov
in
mov
mov
push
lods
add
mov
cld
push
add
sbb
pop
and
inc
mov
addl
or
push
fadds
ds
psadbw
mov
mov
repnz
mov
and
and
lcall
cltd
sub
rclb
lahf
cmp
iret
cltd
mov
mov
push
lcall
das
outsb
push
sub
cmc
out
aad
pop
movsb
lcall
push
or
jne
jp
out
jne
subl
aad
pushf
mov
xlat
inc
cmp
fwait
clc
mov
mov
mov
repnz
hlt
pop
push
js
rolb
sub
sbb
jmp
sub
mov
repnz
add
imul
jae
fadd
inc
xchg
mov
imul
inc
mov
ret
mov
inc
leave
ds
outsb
insl
mov
imul
sbb
and
aam
fiadds
ja
mov
cmp
arpl
insb
rcll
daa
lcall
out
mov
sub
clc
cmp
mov
xor
adcl
mov
xor
fdiv
aam
stc
sbb
mov
inc
or
mov
push
sbb
or
push
mov
push
xor
inc
arpl
lahf
mov
fs
and
mov
adc
jge
test
std
std
bound
jno
xchg
data16
dec
sub
out
adc
lahf
repnz
icebp
icebp
cmp
aaa
cmp
test
adcl
sbb
pop
fldt
icebp
xor
sub
cmp
sub
mov
pop
cwtl
lret
fildll
mov
cwtl
lock
mov
pusha
push
in
stos
cmp
xor
inc
mov
lea
sarb
into
mov
sub
or
sbb
out
adc
rcrb
aas
push
repz
mov
mov
sub
dec
mov
push
ror
push
jo
cwtl
push
hlt
push
or
xor
fwait
push
pop
mov
pop
sbbl
popa
popa
jne
pushf
mov
push
or
inc
jnp
sbb
scas
push
loope
jle
jne
add
loopne
sti
les
and
xor
sbb
daa
add
enter
or
fst
addl
jecxz
flds
inc
push
arpl
pfcmpeq
xchg
outsb
push
int
pushf
repnz
repz
add
movsl
jp
test
xchg
push
sub
cmp
pop
aas
enter
test
push
cmp
es
scas
inc
aaa
filds
insb
jns
fldl
cmp
xor
jae
fstps
cmp
ds
aaa
enter
out
shlb
lods
popa
lcall
es
jns
adc
or
scas
daa
push
movsb
jp
sbb
sbb
lods
mov
mov
pushf
nop
cmp
xchg
push
adc
dec
int
mov
mov
or
out
hlt
inc
loop
mov
mov
mov
xchg
scas
lods
flds
ret
subb
movsb
into
sbb
adcb
hlt
scas
jl
xchg
lea
inc
jo
dec
adcl
jbe
lods
adc
dec
imul
jecxz
cmpb
push
stos
sti
mov
push
and
sub
jecxz
push
mov
jl
push
iret
pop
adc
lret
lea
sub
sahf
fnstcw
adc
lahf
sarb
daa
addr16
and
xor
pop
xchg
lods
cmpsb
in
fcomps
out
xchg
xchg
mov
sbb
sbb
lods
lea
iret
daa
lret
adc
jmp
mov
data16
fsub
ja
stc
lret
and
lret
bound
xchg
test
inc
adc
rcll
pushf
mov
jae
mov
push
pmulhw
mov
out
and
jno
into
mov
imul
lret
in
mov
lcall
push
repz
sbb
push
pop
fdivs
xor
add
mov
push
mov
out
ret
xchg
xchg
adc
daa
or
lcall
fnstenv
lcall
add
cmc
and
adc
or
test
adc
movsb
ret
in
arpl
push
xchg
out
pushw
push
leave
inc
cld
call
sar
sub
mov
pop
loope
ja
dec
pop
push
stos
mov
insl
cmpl
outsb
mov
fsubrs
popf
dec
dec
xor
pop
adc
xchg
jmp
cmp
xchg
hlt
mov
push
es
push
mov
cld
std
popf
inc
divl
mov
jmp
insb
into
dec
mov
lcall
push
push
pusha
gs
adc
pusha
cmc
leave
mov
fisttps
jmp
dec
arpl
adc
jg
add
fdivrl
jne
inc
sbb
dec
pop
mov
or
push
xchg
sbb
fstl
inc
adc
rcrb
xor
shr
and
xchg
cltd
pop
sbb
leave
cmp
in
filds
orb
pop
test
data16
push
inc
jbe
pop
stos
outsl
sbb
xor
xor
cltd
clc
pop
xor
setg
test
mov
cld
and
push
adc
xor
cs
lahf
out
sbb
fldl
call
jl
and
xor
cmpsb
add
sub
or
scas
arpl
in
xchg
js
into
test
fisubrl
cmp
adc
dec
fcoms
sarb
test
pop
cltd
jge
fisttpll
push
and
fidivs
nop
nop
cs
mov
adcl
fisubl
jmp
pop
xor
js
outsl
lea
dec
lret
cmpsl
loop
in
push
sbb
mov
pop
dec
fldt
xor
xchg
cmc
jp
cmpsb
dec
adc
pop
jb
outsb
out
sahf
rdmsr
fwait
mov
cmp
outsb
orb
or
ljmp
pop
xor
in
and
dec
cmpsb
dec
and
push
sahf
fmull
mov
cmp
in
rcl
lahf
dec
pop
dec
aad
inc
add
push
push
sub
sbb
or
mov
in
js
or
imul
pop
mov
jnp
push
push
xchg
pop
adc
mov
mov
clc
mov
and
scas
shr
test
xchg
dec
jp
jne
jle
cmp
cmp
cwtl
fidivrl
pop
cmp
lret
mov
or
inc
add
mov
adc
and
xchg
inc
or
int
sbb
pop
lods
xchg
xor
mov
cmpsl
push
pusha
popf
shl
add
mov
ror
fisttps
sub
fsub
hlt
stos
or
cli
mov
test
loope
mov
xor
pop
out
leave
inc
jp
int3
add
xor
pop
mov
or
shll
mov
cltd
mov
lods
jae
push
push
pop
stc
loop
mov
mov
jecxz
rolb
or
pop
and
fisubrl
adc
add
mov
lahf
jge
cmpsb
mov
inc
push
pop
xor
inc
dec
out
lea
imul
dec
popa
leave
bt
and
xchg
mov
mov
movsl
or
cmp
outsb
pop
and
jmp
insl
je
jae
mov
mov
mull
in
and
pusha
mov
inc
adcb
and
mov
ret
repnz
ss
popa
or
dec
sar
sub
jmp
and
aas
addr16
push
mov
jp
loop
jae
mov
jl
jmp
loopne
scas
and
jbe
lret
and
pusha
cld
rolb
daa
xor
pop
or
ret
mov
sti
insl
aas
dec
int
inc
mov
test
sub
ret
inc
into
out
stos
leave
sub
pop
imul
mov
mov
jnp
lock
xor
scas
and
xchg
cmpsl
ss
outsb
sbb
mov
rcrb
scas
xor
xchg
cmp
jle
mov
pop
xchg
pop
popa
cmpsl
lock
pop
imul
sub
aam
lret
lret
pop
loope
push
inc
jl
enter
ret
popw
pop
mov
jnp
adc
fnstenv
xchg
and
cmc
sub
sub
nop
dec
or
call
mov
push
pop
rcr
dec
pop
cwtl
cltd
stos
push
lahf
or
xchg
pop
iret
push
pusha
and
mov
sbb
xchg
push
cmp
repz
lds
pop
addr16
xor
mov
sti
dec
iret
push
dec
adc
data16
sbb
mov
or
cmpsb
loope
in
pop
xor
push
cmp
outsl
inc
out
fisttps
push
out
adc
rcrl
xor
adc
jmp
jecxz
jns
imul
adc
push
sbb
pop
outsb
scas
cmp
subl
fmull
mov
popa
fistpl
out
int
add
push
inc
fcompl
lcall
nop
mov
stos
add
clc
push
xor
shll
mov
mov
mov
jbe
push
loop
mov
push
lret
das
sub
lds
xor
flds
mov
incb
sub
test
pop
xor
sub
dec
push
pop
inc
pop
push
sub
mov
xor
jle
and
jle
sbb
jle
push
int3
gs
sub
sub
push
cmpl
fidivrl
out
inc
and
lock
loop
arpl
pop
fst
sub
sub
push
inc
ja
in
lds
pop
popf
xchg
xchg
mov
ret
sbb
shlb
xor
cmp
mov
sub
lret
jmp
sahf
or
fstpt
and
and
mov
sub
push
or
outsb
out
in
xchg
mov
das
dec
pushf
push
jnp
and
push
sar
xlat
add
sbb
inc
mov
aad
push
mov
js
cltd
mov
push
popa
xchg
repz
push
sub
add
cmpl
or
mov
fcmovnbe
jne
arpl
repnz
adc
outsb
mov
jno
or
sub
iret
mov
or
lcall
and
rcl
mov
fnstsw
in
call
pop
pusha
ret
sti
mov
ljmp
hlt
imul
ret
lret
mov
das
cli
cld
mov
mov
cmp
sbb
pop
mov
mov
ret
adc
pop
std
outsb
popf
scas
cld
jo
pop
filds
and
aaa
repz
repnz
inc
cld
mov
and
mov
sbb
dec
sti
push
xor
xchg
imul
movsb
lcall
cmp
ret
fidivrs
cmp
pusha
rorl
pop
jl
pop
inc
jp
and
in
out
movsl
sysret
lcall
sahf
mov
cmc
inc
into
cwtl
lds
mov
jp
cltd
idiv
sub
lcall
xchg
pop
xchg
cmp
mov
ret
imul
xchg
sub
dec
repz
and
jmp
sub
sub
ficoms
adc
pop
gs
push
and
shrl
jae
sbb
fcmovb
inc
int
movsb
test
rolb
xchg
push
aad
dec
xchg
pop
sub
pop
test
out
in
push
cli
cs
xchg
mov
or
gs
lods
cmp
repz
adc
sub
pop
clc
iret
mov
int3
and
inc
insl
imul
xchg
out
mov
add
out
xchg
shlb
lods
in
mov
sub
dec
mov
xor
xchg
jl
divb
inc
push
in
mov
lds
add
sub
sbb
sub
add
jo
fmulp
dec
xlat
sbb
mov
jp
adc
adc
sbb
or
push
out
mov
data16
and
shrl
sbbb
pop
andl
adc
lcall
in
imul
mov
push
outsb
enter
jnp
sub
mov
push
add
bnd
mov
xchg
push
ds
push
mov
subb
addr16
mov
es
inc
push
outsl
lret
mov
cli
addl
push
test
ds
shrb
lds
push
and
push
jge
testl
icebp
stos
dec
push
iret
mov
jg
into
sub
push
les
or
jge
xchg
dec
and
mov
xchg
mov
or
lret
idivb
daa
adc
mov
mov
fidivrs
inc
sbb
leave
adc
and
push
sbb
xor
cmp
in
xchg
test
push
push
rolb
les
push
addr16
popf
xchg
mov
iret
dec
push
iret
ds
arpl
ffree
loopne
test
sbb
or
add
jns
popa
adc
test
inc
sbb
cmp
mov
cmc
imul
cmpsl
js
jmp
xor
inc
mov
fldl
lock
push
aas
adc
sub
pop
xor
icebp
dec
xchg
fprem1
pop
cmp
ja
shll
mov
push
jge
or
in
adc
sbb
mov
xchg
dec
ret
pop
arpl
fnstcw
or
rcll
push
inc
pop
ljmp
into
and
test
insl
pushf
cs
lea
in
jne
push
test
adc
outsl
inc
mov
jge
adc
and
dec
pop
sbb
loopne
insl
or
dec
jge
repz
push
pop
or
mov
cwtl
test
outsb
cmpsl
cmpsl
insl
pop
ret
das
shlb
add
imul
sub
push
mov
stos
mov
push
imul
and
jge
shl
adc
jge
xchg
push
aas
arpl
push
int
getsec
jne
mov
jne
jae
cli
xchg
movsl
lock
jae
aaa
jecxz
pop
std
cwtl
out
arpl
dec
lods
sub
jnp
jmp
pop
or
insb
sbb
push
imul
mov
inc
adc
lcall
rcrb
and
push
add
movsb
sbb
add
loope
jge
push
or
in
bound
lea
cwtl
test
mov
push
sub
scas
jecxz
outsb
push
xchg
jle
jae
ljmp
fisttps
inc
push
sbb
cmp
loopne
inc
fldenv
scas
push
test
fimuls
movsb
xchg
xchg
add
mov
mov
mov
jle
fiaddl
push
sti
test
pop
aas
pop
lock
sbb
xor
lcall
popa
mov
jge
int
adc
les
inc
sbb
xor
pop
scas
sbb
push
inc
xor
lock
push
jge
fidivrl
aad
fnsave
xchg
lret
arpl
jp
pop
push
sahf
mov
out
sub
push
pop
push
sar
fwait
mov
jg
sarl
and
cmpsl
call
inc
or
decl
stos
ror
lahf
mov
jns
and
or
add
add
push
pop
jo
popa
push
scas
or
aaa
jb
out
add
cmp
pushf
out
or
sahf
sub
and
enter
sbb
in
xor
sub
push
loope
xor
mov
jbe
push
cmc
mov
ror
mov
sub
pop
sub
movsb
or
dec
xchg
push
loop
adc
pop
xor
jle
cmp
flds
adc
in
test
das
jnp
add
mov
pop
jge
test
jmp
pop
ret
jbe
imul
repz
inc
icebp
popa
jae
subl
mov
xor
dec
xor
mov
insb
push
xlat
in
gs
call
sbb
mov
jmp
pop
inc
xchg
inc
or
push
xor
frstor
bound
mov
mov
fcoml
lods
inc
push
pusha
loope
call
iret
pop
in
nop
into
popl
xor
and
jle
andl
inc
pop
pop
shlb
fidivrl
dec
xchg
lret
loopne
push
inc
and
jns
xchg
fs
sbb
scas
jno
sub
and
xchg
push
stos
insl
xchg
xchg
sub
lods
shl
dec
xchg
jecxz
lea
mov
push
mov
mov
jno
in
push
repz
pop
xor
push
cs
repnz
or
xchg
mov
mov
iret
mov
and
mov
jecxz
rcll
jge
cmp
clc
fsubrs
inc
js
xor
and
outsb
out
insl
lds
addr16
or
push
lret
in
pop
fisubrs
and
into
push
xor
jns
pop
mov
xchg
sbb
cmp
cmp
sub
lea
scas
mov
fisttpl
popf
mov
pop
sub
dec
lods
and
sahf
lret
ss
xchg
lock
andb
adc
enter
sub
test
arpl
loope
test
pop
push
loope
sub
push
jle
out
sub
mov
xor
lret
xor
fdivrs
push
mov
sub
xchg
sbb
fwait
mov
es
or
lea
into
dec
or
add
push
movsb
fldl
add
hlt
xor
cli
insl
testl
cli
leave
lret
and
and
adc
mov
ja
test
pushf
pusha
xlat
adc
jge
jo
push
cld
dec
pop
sbb
mov
pop
or
and
imul
lock
insb
xor
fiaddl
push
ret
adc
inc
jle
pop
mov
testl
push
popa
push
adc
jg
jmp
mov
cmp
and
enter
sbb
jnp,pn
push
sti
lods
pushf
aam
lods
sub
pop
push
shl
bound
scas
cmc
cmp
sbb
stc
mov
sahf
push
iret
cs
nop
cmp
ljmp
add
or
adc
sub
jae
aaa
fsubrs
xchg
push
nop
ljmp
insb
int
loope
rcrb
das
vaddsubps
push
pop
mov
mov
cmc
addr16
jp
jp
cmpb
adc
jbe
pop
bound
sbb
sti
or
pusha
into
jp
dec
repz
dec
rcrb
je
adc
cmp
and
dec
xchg
aam
sarl
pop
into
and
push
in
shl
in
cwtl
inc
xor
in
fsub
sbb
je
popa
sbb
test
hlt
cmp
ret
push
cltd
mov
icebp
xrelease
fsubr
mov
ss
add
test
hlt
shll
mov
cmp
and
add
or
sub
pop
leave
push
xchg
xor
movsl
jp
jbe
imul
xor
jg
iret
lret
mov
pop
jne
xor
loopne
in
repnz
test
sbbb
cmp
int3
sub
sub
mov
sar
cld
pop
icebp
sbb
push
or
pop
dec
push
mov
push
jne
rol
mov
pop
fcmovu
cmp
push
xchg
pushl
lcall
cmp
adc
pop
jae
sbb
mov
ljmp
ljmp
dec
addl
xor
out
mov
xchg
js
test
pop
std
imul
out
inc
jg
sbb
fwait
sub
xchg
clc
sti
jno
lret
cs
sbb
mov
push
push
loopne
insb
fdivl
fs
inc
es
and
mov
insb
inc
inc
data16
sub
cmc
cmp
aad
mov
pop
add
and
push
jnp
sub
js
add
push
mov
pop
dec
jno
mov
call
cltd
ds
jg
pop
sarb
shlb
shll
ja
lds
rcll
out
mov
pop
push
or
ss
mov
jnp
enter
out
jbe
jmp
pop
fstpt
rcl
inc
sbb
xchg
inc
inc
mov
ss
inc
ljmp
pop
out
xchg
test
sbb
push
sti
jne
push
inc
pop
clc
inc
mov
adcl
fcmovne
das
or
cmpsb
pop
stos
mov
adc
out
sbb
dec
sub
sbb
test
mull
shll
lods
push
mov
xchg
cmpsl
dec
mov
push
mov
movsl
stos
stos
bound
scas
sbb
xbegin
bound
xchg
pusha
or
out
push
out
dec
popf
dec
cmp
clc
inc
sub
cmpsb
jae
ljmp
xchg
aad
mov
in
mov
call
test
outsl
mov
lahf
jg
dec
cld
pop
sub
mov
cs
push
insb
arpl
in
lret
cltd
outsl
xor
outsl
loop
in
mov
sub
jle
bound
mov
adc
dec
inc
les
mov
ja
lods
les
mov
imul
test
adc
push
aam
mov
addb
adc
imul
movsl
addr16
sub
arpl
push
outsl
dec
out
or
jno
push
iret
inc
movb
shlb
hlt
pop
arpl
imul
ds
shlb
inc
jecxz
icebp
adc
add
lock
paddd
xor
aaa
push
mov
sub
shl
mov
mov
dec
pop
mov
and
roll
pop
loope
daa
sbb
stc
mov
sub
setns
pop
insb
ljmp
mov
sahf
fildll
fcoms
push
pop
push
mov
je
ret
scas
xchg
jno
orb
xchg
mov
pop
orb
adc
push
ljmp
xchg
out
xchg
mov
and
scas
pop
fimuls
mov
adc
daa
mov
imul
mov
loopne
xor
mov
jl
popf
ljmp
fidivs
add
lret
iret
repnz
cmp
popl
aaa
out
out
inc
testl
xchg
decl
pop
leave
dec
adcb
ds
aas
mov
push
flds
jge
cmpsl
mov
test
jmp
xorl
out
cmp
arpl
es
xchg
dec
push
cmp
cmp
stos
movsl
ljmp
mov
dec
pop
out
adc
xchg
mov
add
xlat
in
adc
sbb
mov
mov
xor
cmc
mov
data16
jg
rol
pushf
add
cmp
out
aas
xchg
loope
jl
movsl
mov
jb
xor
push
repz
fwait
ror
stc
cmp
mov
pusha
out
ljmp
push
imul
pushf
pop
and
dec
pop
push
adc
or
sub
outsl
xchg
push
lea
lods
adc
jecxz
inc
cwtl
sub
addr16
pop
int
jle
subps
cmc
dec
push
scas
cmp
cmp
adc
loope
inc
adcl
data16
sub
call
out
clc
out
clts
insl
movsl
inc
sarl
jle
aas
jg
or
lret
inc
outsl
movsl
call
fsubrs
xchg
push
mov
xlat
mov
lock
adc
fs
sarb
outsl
lretw
lahf
or
add
inc
or
jae
and
rcll
lock
cmpsb
roll
repz
mov
daa
sub
push
aad
jmp
pop
sti
pop
out
js
jmp
js
mov
out
push
scas
jbe
pop
lea
outsb
inc
and
mov
jmp
pop
mov
fldcw
sub
and
mov
sub
loope
orb
dec
push
mov
daa
or
out
sbb
mov
jae
sbb
dec
les
xchg
cmpb
fwait
xor
mul
cmp
jl
mov
aam
and
mov
mov
push
lret
scas
std
push
shr
add
ret
xor
rep
jmp
ljmp
jmp
xchg
jb
mov
insb
cltd
scas
cwtl
or
push
ja
xchg
fdivrl
sbb
arpl
and
pop
hlt
outsl
ljmp
adc
jle
fidivrs
adc
int3
xor
std
inc
dec
pop
push
jp
je
out
xchg
lock
cmp
mov
and
stos
xor
xchg
pop
cmp
notl
mov
ficoml
lcall
xor
push
mov
xor
dec
mov
cmp
jb
sahf
stos
pop
sbb
adc
ficomps
bound
and
and
mov
push
lahf
inc
push
dec
ret
rclb
gs
push
ds
jg
xor
hlt
inc
cmpl
icebp
inc
mov
pop
add
sub
cmpsb
push
xchg
lea
bound
les
std
ljmp
dec
clc
stos
inc
push
icebp
dec
arpl
addr16
jno
rorl
es
outsb
mov
out
adc
mov
jl
or
mov
out
cmp
arpl
push
arpl
inc
mov
shrb
cs
les
xlat
inc
addl
lret
inc
repz
shll
inc
arpl
mov
dec
inc
movsl
addl
xchg
daa
shr
adc
outsl
pop
repnz
sbb
and
es
aas
jo
add
pushf
ficoms
cmpsl
pushl
mov
sub
std
adc
cltd
mov
push
out
dec
pop
shr
pop
stc
arpl
orl
dec
push
leave
inc
push
idivl
les
lods
jl
push
dec
fmul
ja
jo
add
jbe
and
lret
lods
add
push
sub
mov
or
cld
mov
jb
xor
out
jbe
inc
inc
jecxz
cwtl
cmpsb
out
addr16
cwtl
pop
das
pop
jge
outsb
dec
sub
add
call
notb
cli
insl
fmuls
sahf
ja
inc
sti
pushf
outsb
mov
lret
shrl
add
cwtl
and
xlat
sub
pop
out
push
ret
fstps
fcoms
ficoms
loopne
mov
sbb
lea
movsl
mov
test
popf
cld
lods
mov
or
fsubrs
and
fistl
dec
sti
orl
lods
adc
rcrb
test
pop
dec
clc
cmpsb
fwait
inc
and
nop
cld
push
pop
mov
jne
xchg
dec
pop
shrl
pushl
and
xchg
jo
roll
pop
jns
insl
sbb
sbb
dec
jnp
xor
sbb
ret
lcall
sub
and
sbb
adc
pusha
int3
push
mov
leave
std
imul
add
mov
add
push
in
test
or
testb
mov
lret
stos
mov
mov
add
cmp
pop
or
push
inc
out
loop
out
inc
stos
es
roll
jecxz
pusha
in
loop
mov
adc
pop
ja
cmp
lock
xor
xor
inc
push
mov
ficoms
pop
sbb
push
and
xchg
pop
lock
enter
insb
cmp
js
jg
cmp
inc
daa
std
or
adc
and
cli
aas
adc
fildl
daa
inc
pop
cmp
in
pop
test
es
mov
imul
in
xchg
fst
jnp
mov
mov
scas
mov
fisubrl
add
xor
insl
sbbl
loop
cwtl
adc
dec
cmp
outsb
ret
pop
nop
fiadds
xor
add
or
ss
xlat
lods
sti
inc
cmp
push
xchg
jl
clc
test
lcall
xchg
insb
lods
aad
add
fxam
ja
lds
sbb
mov
mov
nop
test
mov
sub
pushf
jbe
lahf
sbb
ja
lahf
pop
es
popf
pop
xor
data16
in
sub
in
ret
lcall
mov
hlt
call
inc
jge
pop
or
decb
lahf
dec
push
ret
mov
sub
arpl
jnp
add
mov
mov
sub
out
mov
xchg
mov
js
dec
pushf
push
cs
mov
mov
cld
rorl
out
mov
dec
jnp
out
pop
or
daa
pop
cmp
in
inc
aad
les
jge
aas
dec
push
xor
ret
mov
push
rclb
pop
push
mov
xchg
scas
mov
inc
push
jo
mov
mov
dec
cmpsb
jmp
add
push
push
jno
or
mov
push
cmpb
mov
sub
sti
add
cmp
lds
sbb
stos
andb
roll
rcrb
dec
rcrb
fcmovu
sbb
leave
lcall
imul
fidivrl
jns
ss
mov
or
test
aas
loopne
or
or
cld
inc
cmp
adc
xchg
cli
sub
icebp
aaa
mov
mull
or
jecxz
add
and
xor
mov
push
or
pop
aam
decl
test
scas
dec
pop
popa
fwait
push
push
inc
fnstenv
into
loop
pop
mov
dec
lods
push
int3
inc
rorb
out
scas
sbb
mov
adc
std
int
orb
jne
jmp
ljmp
hlt
nop
xchg
xchg
lcall
aad
inc
psubw
in
push
aam
cltd
inc
out
cmp
imul
cmp
imul
pop
mov
pop
inc
dec
adc
aas
pushf
sar
mov
sub
or
xchg
shl
hlt
mov
cmc
jb
mov
mov
inc
call
loopne
mov
jmp
cmp
fucomip
hlt
inc
or
mov
outsl
add
xlat
loopne
daa
mov
mov
jne
rolb
aam
fldcw
lods
bound
push
jnp
adc
jecxz
cmpl
lea
xchg
xchg
mov
inc
scas
xchg
mov
or
in
add
fldcw
imul
subb
sahf
lods
int
jle
jne
and
adc
mov
sub
lret
aas
int
scas
mov
mov
mov
pop
xorb
push
or
mov
jo
out
aad
sub
outsl
add
adc
cmpsl
ret
mov
xchg
nop
ret
fisttps
mov
push
cmc
imul
sbb
rol
dec
add
pop
sti
cld
pop
inc
or
repnz
mov
push
dec
das
imul
cmc
adc
mov
lea
mov
jl
or
add
outsb
jns
inc
lret
out
fwait
lret
add
and
dec
jne
pop
hlt
out
stos
push
iret
cmp
hlt
dec
adc
jmp
adc
iret
add
scas
inc
or
mov
sub
lds
sbb
push
mov
jne
std
mov
adc
mov
and
fsubs
sbb
cmp
jb
imul
xchg
adc
jne
and
pop
sbb
scas
loop
jecxz
pusha
sub
je
das
or
or
sub
jnp
gs
push
lret
pop
movsb
cltd
icebp
mov
decb
mov
push
sbb
das
push
movsl
xlat
and
sub
repnz
mov
push
lods
cmpb
loope
xchg
lods
and
out
dec
mov
inc
dec
stos
mov
jb
adc
push
dec
out
cmpsl
mov
mov
icebp
call
xchg
ljmp
sbb
cmpsl
cld
lret
movsl
call
mov
push
push
xor
xchg
jge
adc
call
cmp
mov
inc
add
mov
jp
mov
xchg
cmp
test
mov
cli
inc
mov
mov
adc
pop
inc
adc
ret
orl
das
or
lahf
lcall
das
aad
dec
inc
mov
jmp
mov
mov
pop
push
mov
scas
cmp
cwtl
pop
shll
sarb
cli
mov
adc
mov
and
xor
insl
pushf
ret
xchg
imul
js
cmpb
fnsave
imul
je
inc
mov
pop
push
aaa
repz
je
imul
and
ljmp
push
cmpsl
dec
stos
ss
mov
cmp
cs
out
aaa
dec
cmpsb
mov
cs
xlat
sub
mov
push
fs
pushf
imul
or
sbb
mov
mov
rolb
aas
push
aas
mov
sahf
mov
mov
das
filds
movd
mov
inc
imul
rcrl
and
aad
push
movsb
clc
jge
dec
aad
outsb
test
or
mov
xorl
jmp
outsl
or
insl
subb
xchg
xor
leave
pop
cmpsb
cmp
mov
adc
push
mulb
push
mov
jne
and
sub
jae
pop
or
push
hlt
mov
aad
cmp
mov
mov
xchg
and
push
loope
int
mov
xchg
xor
sub
fisttpl
data16
test
and
sti
dec
sbb
adc
mov
xor
es
int
movsb
xchg
je
sbb
mov
cli
inc
pop
scas
push
out
insb
lcall
lock
out
inc
lea
mov
addb
push
or
inc
or
int
icebp
xor
adc
aam
jns
cs
mov
mov
fisttps
pop
mov
leave
pop
sbb
adc
inc
xor
les
push
pusha
dec
daa
dec
mov
je
xlat
pop
and
shll
into
insl
add
jecxz
cmp
push
mov
jnp
pusha
rcll
in
or
nop
insl
sbb
mov
fwait
cmpsl
jmp
shll
or
jecxz
push
xchg
call
sub
or
adc
cmp
ret
aaa
pop
dec
les
out
pop
lea
clc
jnp
xor
or
push
por
mov
aas
sbb
imul
cli
rcrl
mov
sbb
pop
sarb
stc
mov
inc
jge
jg
mov
into
fistpll
ret
mov
dec
dec
test
lods
sbb
lock
mov
cltd
int3
mov
sbb
int
xor
jo
xor
push
adc
hlt
nop
aad
pop
clc
movsl
lods
or
data16
in
jbe
test
lock
nop
js
inc
xchg
aaa
jb
or
ljmp
xchg
test
mov
outsl
pop
movsb
cld
imul
movsl
insl
icebp
ss
jnp
xlat
fsts
xor
cltd
mov
xchg
or
mov
inc
sub
hlt
xor
imul
sub
sbb
pop
xor
dec
les
out
add
add
sub
xchg
int
jg
push
lahf
loop
xchg
mov
jbe
xor
into
push
mov
cmp
mov
scas
in
dec
inc
imul
ja
xchg
mov
inc
push
xor
ja
cld
mov
sbb
pop
ret
out
push
movsl
xor
xor
mov
sbb
das
int3
inc
bound
pop
and
cmpb
in
xorl
mov
mov
adc
inc
push
cltd
inc
sahf
sbb
pop
andb
mov
test
xchg
cmovp
pop
test
cmp
adc
mov
and
adc
mov
mov
fldenv
daa
or
out
sub
ror
std
lret
fstpl
or
inc
lcall
mov
test
lods
xlat
adc
mov
jne
xchg
add
xor
insl
popa
sub
push
mov
lock
xor
cmp
dec
lods
cmp
divb
jl
into
cmpsb
xor
lock
pop
pop
iret
sahf
xchg
inc
jg
out
ss
je
mov
or
out
dec
dec
ret
imul
mov
ret
pushf
xlat
es
sbb
in
test
bswap
sbb
mov
mov
iret
out
mov
ss
xchg
pushf
sub
loopne
push
inc
jae
aad
movsl
call
int
sar
idivb
lahf
adc
adc
add
and
rcl
and
or
es
xchg
jecxz
sbb
sub
mov
xchg
xor
cmp
push
xor
push
mov
mov
push
inc
insl
cli
loop
dec
cmc
and
ja
mov
stos
sub
sbb
push
pop
outsb
negl
outsb
test
mov
fbstp
mov
out
push
sbb
das
dec
cmp
nop
in
scas
fnstsw
stos
xchg
cmp
bound
push
incb
in
adc
push
test
in
inc
adc
and
mov
das
loope
imul
mov
lret
mov
mov
loope
lret
xchg
sub
sbb
adc
pop
sbbl
adc
mov
xchg
fnstcw
sbbb
inc
inc
mov
cmp
ss
enter
outsb
sbb
js
sub
fs
jb
lods
fucomi
ja
xor
sbb
sub
mov
sbb
push
dec
jbe
mov
lock
imul
cmp
xchg
pop
dec
jp
add
outsb
or
jg
jmp
inc
xchg
xchg
scas
cmp
cmpsl
call
and
mov
popa
pop
imul
xchg
or
and
mov
inc
sbb
cld
dec
fcom
into
mov
fisubl
xchg
pop
mov
rol
in
sbb
jns
jne
out
es
aaa
xchg
mov
cmpsb
scas
xchg
inc
xlat
jl
cmpsb
mov
mov
adc
filds
loopne
std
insl
jge
scas
jbe
lods
rcrl
push
inc
jl
adc
or
mov
or
sbb
je
and
insb
jne
pop
cmp
jne
dec
sub
push
jns
sub
dec
dec
addr16
and
xor
filds
pop
ret
loope
paddusw
loope
or
jp
gs
cmp
test
jo
sub
mov
scas
sub
mov
lahf
xchg
and
pop
decb
push
or
mov
test
out
lcall
outsl
clc
add
dec
cmpsb
cs
push
scas
mov
jge
or
add
imul
xchg
sub
ret
push
and
dec
inc
xor
or
xor
fs
adc
dec
jns
mov
jecxz
add
dec
int
and
push
addr16
inc
cli
je
std
pop
dec
sbb
sbb
push
add
outsb
pop
aad
dec
and
sahf
mov
arpl
push
inc
xor
sbb
out
xor
pop
xlat
fisttps
xor
sbb
inc
stos
icebp
stos
nop
dec
mov
push
fadds
pop
xor
fs
bound
add
iret
mov
lahf
mov
jmp
aam
in
fistpll
mov
inc
inc
je
rol
sub
pop
mov
add
loopne
push
inc
inc
push
scas
xchg
push
aaa
mov
mov
in
ljmp
int
leave
sbb
mov
add
sbb
les
or
hlt
push
sbb
loopne
es
pushf
sub
fists
jge
sar
or
jmp
pop
or
cmp
je
xchg
add
xchg
negl
ss
cmp
clc
ret
mov
add
nop
fbstp
loop
jge
aaa
dec
pop
cmpsb
mov
das
cmpsl
push
negl
sahf
lods
shrl
shll
mov
call
aas
dec
sub
cmp
daa
push
insb
je
mov
insl
xchg
int3
pusha
push
adcl
push
or
out
test
arpl
pop
icebp
push
cmp
jne
repnz
jl
in
scas
sub
pusha
out
push
xor
loop
scas
jp
out
leave
sti
adc
sub
shl
dec
cld
pop
inc
popf
push
mov
ds
add
push
icebp
fildl
xor
mov
inc
enter
fdivp
push
dec
mov
add
cwtl
sbb
jmp
andl
popa
mov
hlt
lods
inc
cmp
pop
cmp
sub
jecxz
imul
pop
stos
mov
mov
and
dec
cs
push
and
sub
xor
adc
out
dec
inc
into
xor
int
js
scas
lret
cld
arpl
decl
repz
push
sbb
pop
aas
cli
add
mov
scas
and
scas
cli
mov
test
sbb
add
sub
pop
je
dec
sub
sbb
adc
divl
dec
int3
cmpsl
ds
inc
mov
cmp
adc
rorb
and
mov
outsl
dec
dec
stos
pop
and
mov
fistl
or
push
fnstenv
loopne
int3
inc
fcomps
mov
andb
fsubr
push
xor
dec
popa
jbe,pt
imul
in
push
and
lcall
mov
cmp
or
sub
mov
dec
loopne
push
mov
shlb
call
jp
push
sahf
add
adc
pop
xchg
fwait
scas
inc
xor
push
fs
vphaddbd
in
sub
adc
or
fidivl
push
pop
xchg
cmp
cwtl
pop
dec
mov
je
popa
jo
call
int3
scas
pop
daa
dec
aaa
bnd
inc
pop
stos
rclb
idivb
xchg
bnd
inc
loope
lcall
cvtps2pi
mov
jo
stos
sub
mov
stos
jne
mov
cmpsb
adc
iret
sub
adc
push
jne
pop
shll
sbb
mov
das
ljmp
push
adc
push
cmp
repnz
xchg
xchg
cmp
sub
adc
dec
lahf
lock
insl
cmp
in
cmp
lahf
xchg
or
sahf
pop
push
sbb
dec
mov
dec
mov
orb
sbb
inc
mov
out
push
inc
lds
jmp
xor
hlt
push
mov
sbb
loop
mov
mov
pop
inc
adc
lods
stc
sub
xchg
or
push
mov
lock
cmp
imul
int3
sub
jne
xchg
and
dec
mov
test
mov
dec
lea
jle
mov
adc
je
pop
sbb
lcall
imul
mov
nop
cmp
jle
sbb
in
ret
mov
lods
ljmp
fbld
in
outsl
fmull
mov
enter
sbb
push
lahf
std
sub
sbbl
mov
fwait
jnp
leave
js
std
or
ljmp
pop
dec
test
xchg
sbb
fimuls
mov
mov
dec
mov
pop
rol
cmpsl
out
push
popf
mov
xor
je
in
repz
push
inc
fwait
jb
rolb
shr
addr16
pop
fmull
pop
jbe
dec
xor
mov
sub
xchg
and
adc
jle
mov
mov
pushf
fldt
scas
inc
pop
ss
mov
mov
mov
lahf
push
cmp
add
mov
add
data16
add
mov
pusha
dec
mov
andl
inc
sbb
jp
jge
bnd
loop
or
icebp
test
fdiv
mov
jb
mov
jae
fwait
dec
push
loopne
jp
lret
movsl
xor
jbe
shr
mov
mov
push
mov
jns
test
lahf
mov
dec
sarl
faddp
pop
pop
push
jle
and
jns
sbb
sbb
xchg
xor
stc
ss
lret
outsl
jo
shrl
jmp
inc
es
mov
sbb
push
or
lahf
arpl
outsl
hlt
ret
inc
mov
sbbb
not
xchg
cmpsb
cmp
movsl
dec
bound
imul
push
jns
jmp
lods
sbb
mov
addr16
insl
out
mov
loope
sub
xchg
ja
movsl
les
jne
ror
xchg
mov
push
es
mov
in
mov
push
rorl
pop
dec
mov
fldt
dec
cmpsl
mov
sbb
jecxz
sub
pop
sahf
push
ss
lret
xchg
mov
mov
stc
jno
cli
div
bound
dec
sbb
cmp
fadd
jae
dec
mov
outsl
lcall
push
jns
repnz
or
push
pop
cld
lods
dec
sbb
ret
dec
cmpsl
popa
das
sbb
into
xchg
rorl
lods
inc
xchg
divl
mov
fimuls
ljmp
sbb
sbb
repnz
stos
das
push
test
test
mov
cmp
fidivrs
adc
cli
adc
cmp
mov
sub
pushf
push
das
in
lods
mov
sub
mov
ljmp
loop
fisttps
enter
sbb
mov
jecxz
adc
rorl
sbb
mov
xchg
push
dec
or
push
jbe
sub
mov
or
addl
dec
adc
add
push
lret
inc
pop
jg
imul
sahf
ret
and
mov
rclb
adc
push
pushf
pusha
xchg
loope
sbb
mov
repz
jbe
xchg
or
push
out
lret
ljmp
add
mov
movsl
push
imul
dec
dec
push
fistl
jg
mov
push
enter
subb
cmp
js
sbb
dec
scas
and
and
cli
sub
repz
mov
mov
in
leave
push
push
mov
jecxz
sub
mov
jp
test
movl
out
mov
inc
mov
sbb
mov
xchg
lods
pop
mov
stc
loopne
jne
pusha
mov
inc
push
daa
inc
inc
stos
cld
sub
mov
adc
pushf
movsb
jge
and
pop
shrl
mov
cmp
mov
std
xchg
pop
sti
lret
push
jl
cmp
gs
fldt
in
push
inc
jbe
popa
addr16
aad
mov
divl
in
adc
in
cmpsl
out
loope
mov
sub
sub
or
add
sub
xor
inc
adc
subb
or
xchg
imul
aad
pop
sub
push
mov
xchg
aas
je
xchg
adc
fsubrs
lods
test
out
mov
inc
dec
mov
and
cmp
int
int3
and
iret
out
dec
push
push
mov
repz
loope
lea
call
call
out
cmc
clc
pop
inc
insl
jns
cmp
fs
inc
cmpsl
push
out
mov
pop
mov
add
xor
loop
xor
pop
shl
pop
ficoms
mov
sub
sti
xchg
adc
mov
sub
insl
fildll
inc
pop
test
jg
movsb
test
loop
mov
fldl
repnz
arpl
pushf
pop
xor
popf
cmp
and
or
call
std
lock
add
pop
jns
rcll
std
xlat
rorl
push
lahf
inc
or
nop
pusha
sbb
enter
insb
mov
push
mov
inc
loope
add
cmpb
sub
xchg
mov
sub
sti
push
inc
jae
cld
int
mov
mov
push
adc
jmp
dec
test
shrl
aam
stos
adc
mov
pop
dec
add
je
cmp
fwait
idivb
or
scas
aad
pop
das
cmp
cmp
push
aaa
lcall
xchg
cmp
je
aad
in
or
hlt
or
jge
push
sbb
hlt
cld
push
js
pop
loop,pt
mov
out
scas
sub
in
cmc
push
aad
xlat
loope
inc
dec
jle
and
insl
push
jle
scas
or
sbb
inc
cmpsl
popf
subb
add
push
lea
pop
insl
adc
pop
xor
sub
mov
test
sub
mov
pop
imul
mov
adc
xor
jecxz
mov
push
jmp
xchg
mov
lock
pop
hlt
xchg
mov
or
dec
xchg
xlat
in
lock
and
and
add
adc
xchg
mov
xchg
je
adc
adc
dec
mov
xor
mov
xchg
push
imul
testl
dec
push
orl
call
daa
imull
and
aad
mov
sub
inc
cmp
mov
aad
dec
xchg
push
xchg
lds
xchg
xchg
test
les
fucomi
push
ficoml
pop
sbb
cmp
jae
clc
in
fnsave
rol
nop
mov
and
cmp
mov
dec
or
cli
lahf
xlat
cmp
fmuls
into
mov
mov
adc
in
shlb
loop
insl
mov
or
push
push
dec
idivl
incl
add
inc
xchg
inc
sbb
fbstp
faddp
add
mov
jge
mov
hlt
fmull
fwait
insl
or
nop
fdivrp
bound
inc
mov
jp
ret
ja
cmpb
les
ret
lcall
daa
jbe
movsb
adc
fcomps
inc
or
addr16
cli
js
pop
sbb
mov
xchg
sbb
mov
pop
xor
add
mov
aas
sahf
add
stos
je
nop
pop
adc
loope
adc
data16
call
cltd
adc
out
and
insl
aas
into
mov
dec
push
idivl
dec
jae
dec
xchg
mov
mov
lods
adc
pop
sbb
or
int
xchg
and
call
adc
inc
in
mov
rclb
les
jne
pop
movsb
and
test
add
inc
into
mov
movsl
test
fnstenv
popa
movsl
arpl
les
jne
jne
je
loop
sbb
cmp
cmpsb
pop
jae
inc
push
add
mov
jecxz
lret
add
jb
lcall
popf
shr
jno
lahf
xorb
dec
ret
sbb
stc
or
push
ja
xor
pop
cmp
cld
std
mov
xor
outsl
mov
lahf
sbbl
pxor
push
or
mov
pop
sub
or
sahf
push
test
inc
das
mov
dec
aaa
movsb
mov
and
cltd
mov
daa
shr
outsl
fstps
push
out
lods
cmpsb
imul
int
dec
sub
loope
cmpsl
lea
pop
sbb
scas
xor
inc
jp
sub
imulb
andb
movsb
leave
jmp
repz
or
test
push
ja
sbb
mov
xchg
ret
inc
cmpsb
inc
lcall
inc
mov
xor
lock
sbb
ss
or
in
xlat
push
mov
mov
mov
popf
lahf
lods
and
pusha
fmuls
dec
cmc
cwtl
mov
pop
xchg
fidivs
lret
lcall
imulb
push
std
imul
pop
rorl
push
mov
xchg
add
lret
adcb
or
mov
mov
sub
pusha
cmp
pop
dec
xchg
xchg
cmp
jbe
nop
jecxz
mov
push
int3
jecxz
in
das
add
pop
or
aam
cmp
test
cmp
inc
test
nop
cmp
std
scas
sub
dec
dec
push
in
in
ljmp
fistl
xlat
shrl
fwait
dec
cmpsb
jnp
loop
loopne
and
shlb
mov
mov
ret
shll
dec
shl
push
push
inc
hlt
lret
loope
aad
jle
inc
aas
cmp
addr16
push
lea
pushf
cmp
leave
mov
add
in
nop
or
push
out
sub
xchg
rol
push
push
jge
or
movsb
fcoml
imul
sbb
mov
loopne
mov
leave
pushf
aad
lahf
adc
leave
mov
pop
sbb
stos
mov
das
lret
sub
push
inc
jbe
testb
pushf
jp
repz
jnp
pop
jmp
test
dec
add
lret
dec
js
les
pusha
mov
or
sbb
pop
es
cli
cmp
pop
stos
xorl
mov
mov
scas
addr16
jecxz
or
ret
adc
pop
aaa
loop
fistpl
cmp
inc
mov
sub
sub
ret
sub
xor
cli
jmp
push
push
shll
sbb
aaa
xor
pop
aam
sbb
push
xchg
dec
jno
xor
mov
out
nop
lcall
or
das
xchg
add
call
leave
adc
stos
mov
ds
icebp
andb
mov
jo
mov
adc
insl
pop
or
scas
xchg
leave
jnp
mov
ret
fnstsw
call
xchg
data16
inc
mov
in
mov
pusha
sbb
jmp
pop
insb
sbb
sbb
scas
data16
push
mov
add
jl
mov
sub
mov
sti
rcl
push
bound
dec
push
aaa
push
inc
cmc
gs
xchg
fildl
dec
out
jmp
sbb
mov
mov
int
push
out
jb
aad
cmp
push
rolb
es
mov
push
pop
push
out
sahf
xlat
icebp
mov
push
jecxz
int3
sti
sub
iret
and
fnstenv
aam
mov
lea
sub
and
orl
notl
add
push
xchg
mov
cmp
lret
in
loope
loop
add
push
jmp
lds
sbbb
mov
xchg
sbb
aad
ret
rclb
cmpsb
icebp
mov
push
in
fadd
mov
xor
jb
cmp
add
std
xor
or
shr
pop
sbb
add
xor
orl
cltd
and
mov
repnz
mov
mov
int3
jp
data16
lods
imul
sub
push
sbb
ljmp
lret
jo
pop
jae
out
call
pusha
mov
js
mov
xchg
pushf
adc
pop
daa
mov
mov
mov
add
out
mov
adc
icebp
push
in
dec
fcmovbe
out
lock
clc
sub
ret
loopne
xchg
xchg
int3
push
cmp
call
arpl
fwait
jmp
dec
add
adc
std
fdivs
out
mov
xchg
jnp
adc
out
xchg
jo
dec
jno
adc
ljmp
jle
push
mull
mov
popa
loopne
test
jns
cmc
cmp
ret
jo
cltd
pop
negl
add
add
lahf
jno
arpl
mov
std
jne
push
into
cmp
dec
dec
es
dec
pop
fistpl
adc
loop
negl
rcl
out
mov
jmp
inc
jns
push
push
pop
ret
add
jnp
add
mov
cmpsb
cmpsb
int3
testl
shrl
decb
mov
inc
outsl
jmp
mov
push
les
insb
shrb
arpl
lcall
clc
ds
mov
jl
stos
imul
stos
in
pop
hlt
sbb
jae
pop
jle
mov
stos
push
fidivrs
mov
sub
inc
in
xor
leave
icebp
mov
lock
sub
xchg
mov
pop
mov
cmpsl
pop
push
in
lods
in
hlt
mov
int
inc
rcll
and
int3
jbe
decb
adc
arpl
pop
adc
fisubrs
test
pop
pop
add
jnp
push
scas
jae
or
xlat
test
rcrl
arpl
mov
push
xchg
pop
jae
int3
mov
scas
cltd
fxtract
pop
inc
mov
mov
sub
cmp
and
sub
out
cmp
add
mov
and
lea
loope
sub
mov
iret
jmp
ror
cmc
jb
dec
sbb
outsb
mov
dec
mov
mov
arpl
pop
adcb
jno
incl
lock
das
divb
dec
jne
sub
pop
icebp
test
push
cmpb
add
shll
pop
ljmp
in
dec
sbb
imulb
mov
shrb
and
sub
mov
cmp
xlat
loop
xor
jecxz
pop
adc
push
pop
sub
outsl
cs
popf
inc
xchg
add
addr16
fsub
cmp
scas
insl
dec
std
into
jb
ljmp
mov
jecxz
jg
adcb
cli
xchg
xor
ret
fst
pushf
sub
jl
loop,pt
mov
jp
inc
scas
adc
jmp
jne
mov
pop
es
push
cmp
lock
or
inc
mov
jl
imulb
leave
loopne
jmp
jo
adc
jl
leave
pop
and
in
stos
pop
sahf
and
mov
pushf
mov
xchg
repnz
pusha
dec
out
push
orl
push
pop
ljmp
pop
lods
cwtl
std
iret
pop
in
xchg
stos
out
sahf
idivl
or
or
push
dec
cmp
add
xor
add
xchg
push
rcrb
jnp
cmp
xchg
cld
or
xor
push
mov
xor
and
push
add
addr16
push
or
push
leave
lock
push
flds
cmp
cli
shrl
mov
mov
pop
mov
sti
lods
dec
or
jbe
jb
xor
sti
push
int3
aaa
fcmovnb
arpl
xor
scas
in
mov
icebp
cwtl
lret
adc
push
lods
fistpll
xchg
sahf
data16
insb
push
arpl
arpl
inc
or
daa
lods
sbb
test
loopne
movsb
hlt
pop
vpsubsb
sahf
inc
sahf
int
push
jp
std
js
pop
bound
pop
mov
jp
and
sbb
das
adc
sbb
xchg
mov
je
shl
dec
ss
push
push
xchg
cmp
cmp
mov
xor
mov
cmpsl
movsl
adc
gs
inc
insl
out
jnp
vhaddps
and
in
xor
add
in
push
sub
pop
pop
int3
mov
insb
mov
jne
push
mov
nop
or
int
xor
push
mov
jae
xor
pop
pushf
xor
inc
fwait
pop
cltd
mov
push
and
test
lds
and
dec
xchg
cmpsl
mov
stos
inc
pushf
aad
sub
inc
in
call
ret
inc
push
pop
rcl
imul
ret
xor
jne
or
jmp
or
cld
jg
popa
call
dec
mov
in
mov
bound
les
div
sub
pop
inc
cltd
jl
cmp
shll
xor
push
je,pn
mov
sbb
movsl
jmp
paddusb
fwait
rorb
rorl
mov
cmp
daa
xor
ds
cmp
mov
out
xor
or
or
in
aaa
xor
cmpsl
xor
std
pop
and
insb
sub
mov
push
nop
sub
mov
adc
sub
inc
iret
repnz
fstl
fisubrl
rol
js
ss
mov
stos
mov
pusha
push
inc
pop
mov
shlb
ret
adc
sbbb
pop
jmp
inc
movsl
fwait
pop
xchg
sub
int
mov
inc
clc
ss
popa
loop
jp
dec
hlt
into
dec
lock
mov
mov
mov
and
mov
popa
shl
or
outsl
jae
cmpsl
jno
data16
pop
cmp
or
push
cld
cmpl
bnd
out
data16
fbstp
lahf
jb
aaa
cmp
sbb
fcoml
aas
mov
fstpl
lock
adc
cmp
mov
cmpb
jge
cmp
push
jg
mov
ljmp
mov
add
imul
sub
shl
mov
xchg
inc
sub
pop
add
stos
adc
leave
lahf
jo
addr16
imul
test
push
mov
mov
pop
adc
mov
push
inc
sbb
mov
aaa
dec
aaa
pop
ret
add
fbld
push
loop
pmaxub
je
jb
cmpsl
dec
push
push
dec
mov
andl
xor
imul
sti
push
in
pop
pop
adc
push
dec
and
mov
cmp
dec
adc
rcl
pop
in
scas
or
jg
sub
insb
insb
push
pushf
xchg
adc
aad
cmp
xchg
orl
mov
push
and
enter
inc
pop
ret
add
or
xchg
jae
mov
xor
and
out
xlat
ret
sti
xor
cli
mov
imul
ret
pop
push
loop
into
dec
movsb
inc
and
or
cwtl
pop
popl
sbb
jle
xchg
jbe
sbb
into
sub
sub
push
jo
and
sub
xor
xor
out
mov
movsb
xchg
xchg
and
mov
sub
popf
jno
jne
shll
jnp
sbb
in
repnz
or
mov
jg
lret
fwait
jmp
inc
jl
jne
aam
inc
sbb
rcrl
jb
push
xor
xchg
enter
cs
fwait
data16
and
mov
jle
aaa
xor
cwtl
imul
xlat
neg
mov
dec
push
and
scas
sbb
mov
xchg
or
jg
mov
addl
push
fstl
mov
adc
or
in
push
js
or
cwtl
imul
pop
daa
cltd
clc
dec
ret
in
push
in
pop
mov
aam
add
pop
mov
mov
push
fbld
jl
add
and
push
sub
sub
aam
dec
or
cmp
push
cmpsb
xor
int
add
push
jg
int3
shll
pop
pop
sbb
in
push
std
mov
mov
dec
mov
popa
dec
aas
push
addr16
xchg
lret
stos
test
in
push
mov
add
pop
test
data16
pop
iret
fadd
leave
xlat
push
or
fcoml
ljmp
xchg
rcrb
test
test
mov
fsubl
pop
sbb
icebp
inc
subb
jno
iret
sbb
sub
aad
mov
ljmp
pop
lods
ret
pushf
mov
mov
repz
adc
es
jae
fdivrs
addr16
xor
ljmp
dec
call
faddl
inc
ret
inc
testb
cmp
fdivl
adc
cmp
neg
test
cltd
pushf
imul
and
aaa
sbb
jp
outsl
push
xor
dec
jmp
add
cmp
bound
jle
dec
push
xor
add
fnstenv
push
xor
andb
enter
dec
insb
cmp
stos
or
adc
jle
add
sub
pushf
test
scas
adc
das
pop
test
je
std
or
jb
scas
add
js
lds
mov
jmp
imul
cmpsl
dec
lcall
and
or
fucomi
adc
ljmp
cmp
cs
and
shrl
incl
out
push
pushf
fsubrs
cwtl
add
sbb
mov
mov
mov
jno
out
inc
or
stos
xor
repz
xchg
testb
cmpsb
imul
xchg
jae
sub
callw
fdivrs
mov
inc
adc
int
cwtl
cmp
adc
lret
dec
test
or
push
mov
lcall
and
outsb
push
jo
sub
lret
cmp
lcall
lods
cmc
sarl
xor
pop
cs
jmp
dec
nop
cmp
ficompl
leave
or
in
mov
testl
push
mov
push
ret
int
jg
mov
ds
ret
in
inc
andb
dec
cmp
push
fdivrs
jmpw
scas
jecxz
dec
rcl
push
fstpt
fs
pop
cmc
sbb
mov
push
push
cld
jb
sbb
mov
and
pop
mov
insb
and
repz
dec
push
adc
inc
loop
adc
push
sar
fninit
clc
shr
ja
test
xchg
jns
shrb
repz
mov
rorb
jns
push
xchg
mov
out
mov
sub
jp
inc
push
add
cmpsl
mov
mov
pop
int3
pop
push
loop
and
or
sti
call
scas
or
inc
dec
out
mov
xchg
mov
inc
jl
clc
lahf
sahf
and
mov
gs
aaa
sub
and
mov
subb
hlt
mov
icebp
inc
lret
cld
inc
mov
sbb
jno
mov
inc
fs
lcall
aad
and
or
xor
scas
mov
jo
mov
gs
pushf
das
out
ficomps
cmp
push
cmp
jp
inc
hlt
push
aam
gs
scas
jmp
leave
lods
cld
jge
insl
mov
mov
push
out
mov
xchg
add
dec
mov
into
mov
fistps
jle
jmp
xor
aas
inc
sahf
pop
sbb
inc
rcr
pusha
in
xchg
xchg
bound
js
or
fsts
xor
fsubs
fadds
ret
or
popf
popa
icebp
fdiv
into
or
ss
sbb
xor
xchg
push
xchg
arpl
sti
pusha
gs
imul
pop
sub
test
push
mov
pop
push
test
jp
mov
or
adcb
movsl
xor
sub
movsl
ja
xchg
mov
js
push
xor
sbb
dec
imul
loop
xor
test
inc
fisttpl
and
and
push
add
xchg
pop
bound
enter
int
icebp
fadds
sarb
push
mov
test
inc
mov
xchg
add
jae
xor
sarl
sti
and
mov
xor
mov
sarl
popf
test
jns
loopne
in
jp
repnz
xchg
dec
jl
insb
push
incb
int3
test
mov
mov
in
shrl
dec
les
pushf
pop
mov
mov
xor
imul
jmp
iret
in
in
pop
es
inc
ds
das
jns
mov
inc
ret
les
inc
jp
pop
mov
mov
test
repz
pop
movsl
repnz
lret
test
jno
leave
cs
hlt
sub
int3
das
mov
or
ljmp
imul
xchg
cmp
push
out
pop
in
and
jnp
mov
adc
and
xor
push
loopne
mov
xor
leave
cmpl
lretw
aaa
jg
push
and
testb
clc
daa
pop
mov
cmp
adc
shl
jge
hlt
xor
dec
mov
fidivrl
frstor
xchg
push
in
adc
jbe
jmp
ret
insl
outsb
shll
bound
cltd
pop
leave
dec
rorb
lret
adc
pop
sbb
pop
stos
repz
jns
add
lods
pop
sub
out
jmp
sub
add
mov
and
dec
push
test
enter
mov
push
insb
aaa
cmp
sbb
stc
repz
dec
dec
ss
cld
sub
inc
fwait
cmp
mov
mov
stc
lods
sbb
imul
xchg
fsts
mov
mov
cmp
inc
iret
adc
jo
mov
and
cmp
scas
jae
push
jp
or
stc
out
loopne
lahf
push
cmpsb
pop
xor
jne
shll
je
lds
mov
and
pop
mov
inc
jecxz
add
jnp
mov
mov
sti
lds
mov
sub
mov
pop
fs
dec
add
cli
mov
push
jg
jecxz
jb
mov
cld
test
xlat
gs
iret
add
fists
stos
arpl
jnp
mov
mov
mov
lret
lea
xor
imul
or
jbe
jp
xchg
lods
sbb
je
xor
jne
cwtl
movsl
jns
popa
dec
xchg
xchg
mov
out
dec
and
push
fwait
imul
push
nop
outsb
in
sbb
mov
into
jmp
sub
xor
or
pop
cld
imul
or
ret
sub
mov
mov
outsl
rorl
mov
add
test
subl
es
aam
inc
mov
mov
xchg
push
mov
lods
fucom
push
push
jne
or
adc
sbbb
movsb
mov
sub
dec
inc
enter
ljmp
rolb
out
mov
enter
jne
mov
sbb
arpl
out
mov
add
xchg
outsl
mov
cmp
outsl
inc
sbb
in
sahf
ds
fucom
add
ljmp
lods
lods
lret
push
inc
cmp
sahf
subl
dec
and
cmpsb
stc
dec
push
jg
dec
ljmp
cwtl
xor
sbb
pop
mov
adc
fdivs
push
mov
pop
fadd
sub
pop
outsb
sbb
pop
fistpl
pop
out
mov
mov
repz
leave
je
dec
aaa
cmpsb
sbb
lea
push
jo
loopne
jecxz
push
mov
sbb
in
fs
sbb
bound
add
push
les
fnstenv
lcall
lods
cmp
popa
mov
push
or
adc
push
mov
push
stos
cwtl
cli
inc
lea
xor
mov
add
jl
xchg
xchg
mov
fsubs
lret
pop
in
out
pop
mov
data16
dec
push
pop
mov
xchg
mov
call
jp
cmpsb
cmovae
idivb
in
shll
nop
aam
and
test
push
das
push
cmp
push
rcll
sub
sub
cmpsb
jno
fucomip
inc
push
sub
mov
push
or
and
sbb
test
mov
pop
adc
imul
pop
push
and
cmp
in
jmp
test
sti
inc
xchg
xchg
push
test
dec
cmp
push
push
iret
inc
sub
pop
dec
pop
pop
xchg
mov
leave
cmpsb
bound
mov
jno
scas
fucom
mov
aas
lret
cmc
or
je
ds
adc
push
negl
rcll
jbe
push
xchg
icebp
mov
jecxz
push
call
and
add
scas
add
pop
andb
and
div
repz
fnstenv
inc
out
aaa
out
mov
out
ljmp
jno
push
insl
sbb
push
sbb
enter
xchg
popf
inc
push
bound
push
xchg
lcall
lds
push
jmp
std
cli
lret
leave
inc
and
in
xor
jge
sbb
roll
out
in
fldenv
jne
push
into
shl
ds
jns
insb
sub
bnd
scas
hlt
ret
and
bsr
mul
in
gs
add
inc
jl
out
aam
fnstsw
adc
popl
dec
mov
mov
mov
jns
jmp
pusha
orb
fcoms
push
int
push
div
pop
mov
mov
lcall
js
pop
pop
shrb
mov
sub
pop
aaa
insl
ja
adc
adc
jmp
js
and
dec
vsubps
lods
out
data16
jp
dec
xor
cmp
shlb
and
lods
jnp
dec
pop
in
fsts
push
test
test
mov
fwait
les
data16
scas
mov
shlb
adc
and
push
xchg
int
fsub
daa
fwait
in
pop
or
fimuls
into
inc
outsb
mov
cmpsb
ret
dec
jb
out
xorl
cmp
cmp
add
add
in
dec
imull
imulb
sub
out
mull
pop
outsb
fmull
lret
push
fmuls
and
divb
adc
iret
mov
mov
nop
icebp
xchg
lret
mov
mov
fldl2e
mov
jge
ret
mov
aam
sbb
aam
sbb
dec
pusha
rcr
inc
ja
cs
adc
push
gs
jne
jmp
jle
jge
push
incb
scas
popf
xchg
add
ljmp
pmulhw
sub
dec
sbb
push
cmpsb
pop
rcrl
xor
inc
sbb
cmp
repz
jno
mov
movsb
and
fcompl
rorb
imul
xor
fucomip
dec
rolb
and
negl
and
cld
outsb
outsl
pop
data16
or
jle
dec
std
fwait
adc
mov
sbb
mov
pusha
int
pop
jg
pop
adc
mov
cmc
adc
xor
cmp
and
mov
aad
lock
xchg
test
inc
cmp
ret
dec
cs
cmp
mov
push
jo
pop
repz
inc
lods
jge
adc
push
lock
pop
jb
movsl
out
int
sub
add
dec
aas
inc
pop
jle
dec
imul
popa
mov
int
insl
imul
ret
dec
xor
stos
xorb
fwait
dec
js
fs
addr16
sub
bound
das
adc
xchg
sbb
xor
pop
mov
mov
icebp
pop
stos
dec
sub
test
jle
and
mov
sub
sub
xchg
mov
inc
and
jo
es
pop
je
lcall
jl
mov
mov
or
decb
or
or
and
test
scas
pop
mov
fcmovne
lret
xor
pop
dec
dec
xor
cmpsl
pop
repnz
add
pop
and
fstps
ror
cmp
push
mov
push
pop
call
dec
stc
pop
daa
lahf
mov
int
sub
mov
or
pop
add
push
add
jne
pop
les
loope
push
and
xchg
ja
mov
lret
out
out
call
loop
fstp
inc
repz
xchg
dec
lahf
xor
es
or
mov
ss
scas
clc
push
cvtdq2ps
sarl
stos
and
inc
data16
fisubs
fwait
test
push
mov
dec
mov
xchg
andb
les
and
sub
fldcw
cmp
repz
mov
and
push
dec
mov
mov
popf
pushl
mov
lahf
mov
inc
sbb
outsb
orb
mov
adc
movsl
pop
xchg
xchg
xchg
inc
xor
xor
pop
mov
push
mov
fcoml
hlt
std
stc
mov
add
insl
mov
outsl
add
push
rolb
ja
mov
inc
movsb
push
fists
pop
inc
mov
sub
shll
shll
adc
xchg
jmp
mov
loope
mov
push
lods
add
add
push
dec
clc
pop
xchg
mov
jnp
imul
add
sbb
dec
shl
cmpsl
jbe
and
xor
pop
push
movsb
inc
outsb
out
cmp
rcrl
xor
adc
andb
jbe
sbb
scas
inc
jne
pcmpgtw
adc
mov
ljmp
mov
dec
inc
cmp
arpl
pop
adcl
ds
in
in
or
xor
fadd
jp
pop
out
dec
or
and
fisttpll
sbb
jbe
mov
or
repz
aam
add
add
xor
loope
loope
cmpsl
jb
mov
pop
adc
clc
aas
mov
movsb
cmp
mov
pop
push
mov
adc
mov
shlb
ret
mov
or
jnp
test
mov
pusha
pop
sbb
xor
pop
adc
push
repz
push
into
shlb
adc
and
decl
popa
pop
mov
fdivrl
push
cltd
pushf
inc
inc
stc
aaa
iret
jno
jl
das
in
push
lahf
ret
add
je
push
sbb
adc
lea
movsb
dec
hlt
imul
pop
loopne
push
mov
lods
and
or
pop
cmp
jno
cmpsl
fldenv
sub
lret
pop
jp
push
mov
enter
icebp
incl
out
add
mov
les
inc
push
shll
adc
sub
dec
xlat
mov
xor
jge
stc
and
data16
jp
xchg
ret
push
and
push
xchg
sub
jbe
loope
aam
repz
mov
cmpsl
dec
aas
imul
in
test
sub
inc
call
dec
and
sbb
popf
inc
mov
inc
cmpsl
test
cmp
ja
stc
roll
stos
clc
mov
sub
enter
ficoml
movsl
or
dec
pop
cmc
aam
call
lret
fwait
jnp
push
or
lret
incl
mov
sti
push
lods
popa
push
sbb
xchg
sub
pop
es
mov
inc
pop
mov
in
test
test
iret
sahf
jno
ss
addb
inc
mov
mov
jns
mov
out
add
lods
sub
or
scas
imul
fwait
mov
pop
xchg
add
add
enter
mov
inc
aas
pop
xchg
push
xchg
pushf
adc
xlat
or
push
outsb
pop
hlt
mov
adc
mov
jp
add
sub
xor
rcl
dec
ret
and
xlat
stos
ss
aad
add
popa
mov
mov
ret
add
std
jae
popa
sub
sub
insl
enter
jge
enter
sahf
stc
rcll
addr16
and
mov
or
in
or
dec
xorl
push
daa
and
jno
add
arpl
mov
pushf
fildl
lds
dec
imul
aad
xlat
xor
xor
mov
into
mov
mov
pop
mov
mov
cltd
jl
addr16
shl
out
shll
sub
lea
add
insl
sahf
sbb
adc
addb
into
inc
pop
sbbl
gs
adc
push
pop
mov
jns
outsb
movsl
pop
cmp
xchg
arpl
adc
int3
push
icebp
mov
lcall
add
subb
cmpsl
or
push
xlat
stos
add
pop
dec
es
clc
rolb
dec
hlt
mov
out
push
xor
jge
mov
mov
not
lods
mov
dec
jmp
push
add
sub
pushf
outsl
or
cwtl
fidivl
test
pop
xbegin
pop
addr16
js
lcall
cltd
push
mov
js
xor
pop
mov
outsb
lcall
popf
movsb
xchg
lahf
sbb
arpl
pop
jae
addb
add
gs
pop
in
xchg
bound
into
xorb
mov
jl
clc
inc
push
in
rcrb
cld
jge
sarb
inc
jno
push
inc
daa
out
mov
test
sub
hlt
insb
cmc
fwait
sub
out
and
jmp
fmull
fwait
stos
movsb
std
ljmp
fcomps
adc
mov
movsb
inc
dec
cli
aam
cmp
ljmp
stos
jae
pop
cli
jae
inc
push
pop
and
jl
fwait
incb
lahf
sbb
mov
mov
les
or
pop
outsl
xor
push
sbb
push
add
mov
add
inc
lret
pop
adc
jbe
fisubrs
lret
inc
sub
mov
outsb
adc
aas
add
xchg
mov
xchg
push
rorl
pop
adcb
aam
sub
jbe
xchg
cmpsb
fbstp
js
pushf
jle
bound
into
cs
aas
stos
dec
aad
popf
arpl
cmp
fsubl
repnz
rcl
pushf
or
cli
mov
sti
test
pop
std
pusha
testl
jl
stos
insl
sub
test
xor
cli
ss
sub
gs
or
loop
leave
lock
lahf
pop
dec
pop
cmc
jecxz
inc
jbe
dec
data16
pushf
adc
mov
jno
fsubrs
out
pop
ret
cmp
jp
sbb
or
daa
test
leave
mov
stos
add
loope
pop
mov
ficomps
cmc
push
or
mov
out
cmp
jo
out
adc
idivl
xchg
lret
adc
inc
push
or
in
or
das
out
sub
rorb
int3
fwait
and
push
call
test
mov
pop
dec
lods
push
fistpll
push
xor
jmp
ja
mov
and
jnp
pop
adc
test
push
in
loope
fdivs
fcmovnbe
mov
push
inc
es
mov
or
xor
jle
jg
push
cmpsb
mov
xchg
cltd
dec
or
fiadds
outsb
sbb
cmp
mov
sub
adc
xor
ljmp
into
sub
add
out
sbbl
outsb
push
pop
mov
jbe
insb
cltd
and
dec
pop
rorl
pushf
sbb
pushf
pop
lea
cmpsb
ja
in
addr16
dec
jns
fcmovnu
loopne
insl
push
outsl
addb
pop
xlat
push
dec
push
mov
loop
cmp
test
add
lcall
jno
je
sbb
es
test
xchg
in
mov
mov
mov
fldt
loope
test
cmp
xchg
mov
push
rolb
xlat
mov
mov
ror
stos
xor
fildll
mov
repnz
rorb
in
sbb
cs
adc
dec
cmpsl
and
mov
dec
enter
in
lock
push
inc
xchg
les
push
xchg
mov
fsubrl
cmp
in
in
arpl
push
pusha
jle
movsl
push
setno
jbe
iret
fstpt
xchg
push
pusha
shl
jp
sbbl
inc
mov
push
push
mov
mov
cmp
dec
in
jbe
sbb
aas
andl
dec
pop
lret
adc
pop
ja
inc
and
lock
and
cwtl
pushf
lods
lods
jl
hlt
xor
adc
sti
movsl
pop
in
test
loopne
scas
xchg
or
popf
pop
sub
cs
sbb
cmpsb
arpl
xchg
cmovnp
fwait
lret
push
push
push
mov
cmp
sbb
jp
cmp
and
addr16
push
dec
cld
cli
jo
fs
bound
mov
inc
mov
insl
jbe
xor
lahf
mov
jae
jae
push
mov
iret
add
je
clc
sbb
imul
cmp
or
loopne
cmpsl
stos
out
cs
mov
xchg
out
neg
sbb
push
stos
inc
mov
fiaddl
mov
aad
cmp
dec
xor
jle
jl
cmpsb
jbe
fiadds
cmp
loopne
insl
mov
jecxz,pn
daa
jmp
cmp
add
leave
jno
xor
sub
push
ret
enter
or
mov
jle
xchg
pop
jb
loope
add
repz
mov
movsb
addr16
into
cmp
cmp
adcb
test
sub
and
cltd
mov
or
pop
test
lea
xlat
xchg
xchg
add
imul
lret
mov
pop
imul
adc
push
lret
icebp
mov
stos
xorl
out
cmp
dec
fwait
mov
fdivrs
dec
or
mov
notl
call
dec
lods
mov
add
mov
or
ret
les
rclb
inc
or
push
insl
inc
frstor
cmp
xor
int3
cmpsl
dec
dec
das
or
push
pushf
in
fucomp
decb
lods
xor
mov
movsl
pop
fwait
mov
mov
and
movsl
sub
cmp
dec
dec
arpl
je
push
hlt
add
fcom
loop
rorb
mov
adc
add
xchg
pop
xchg
inc
push
fisttpll
xchg
das
imul
cmp
jnp
or
stos
and
rorb
cmp
repnz
in
andb
inc
push
jns
dec
dec
test
scas
outsl
repz
sbb
inc
aaa
jl
xchg
mov
inc
in
dec
scas
mov
int3
mov
xchg
push
push
rorl
repnz
out
insb
jnp
mov
pop
cld
jmp
cmp
or
loop
das
or
imul
sbb
neg
sbb
decl
rcr
ss
cli
xor
mov
xchg
in
and
shrl
add
stos
gs
lret
push
dec
lds
aad
call
jecxz
mov
inc
ficoml
jae
scas
sbb
popf
mov
xor
int3
cwtl
fs
fimull
ret
ja
es
insl
js
push
mov
lds
mov
and
icebp
cltd
sti
imul
data16
xchg
aad
add
push
push
jo
scas
xlat
add
insb
inc
insb
mov
lcall
inc
lahf
leave
sub
jp
inc
mov
sbb
fwait
jo
out
outsl
arpl
cmp
das
aaa
mov
adc
cld
cmp
mov
outsl
je
push
sbb
cmp
push
scas
pop
cltd
adc
add
int3
mov
dec
enter
fwait
ret
xchg
fisttpl
jge
xchg
stc
test
pop
aam
aas
mov
fwait
insb
loope,pn
sub
imul
clc
pushf
mov
cld
jo
lret
push
lret
pop
pop
add
rolb
push
push
shlb
adc
push
es
sub
inc
adc
push
pusha
repz
pop
and
or
mov
lea
cmpsl
xor
push
js
push
lds
inc
cmp
xor
pushf
xor
push
insl
stos
sbb
movsl
dec
rolb
in
jle
fstpt
fcmovne
ljmp
rolb
imul
push
jns
adc
outsl
jg
jp
dec
xchg
xorb
lret
insl
mov
push
and
push
roll
inc
call
in
push
xchg
lods
inc
or
sbb
shl
scas
or
testl
and
aad
shrl
std
push
stos
jecxz
xchg
lret
mov
dec
ret
stos
mov
jbe
loop
inc
fcmovnu
add
pop
sbb
sahf
js
cmp
into
push
mov
add
cs
inc
xchg
cmp
dec
and
push
in
movsb
imulb
pop
loop
pop
pop
xchg
push
pop
xor
and
rcll
xor
mov
aam
adc
adc
xchg
push
push
fidivs
cmp
or
push
test
pop
popf
adc
add
cmpsl
push
icebp
outsb
and
mov
mov
in
aaa
dec
jns
cmp
das
adc
mov
lock
aaa
incl
das
jge
cwtl
hlt
mov
mov
lcall
mov
sbb
bound
sbb
push
sbb
jge
movsl
mov
enter
sub
cmc
pop
lahf
sbb
call
out
jbe
scas
add
loope
loopne
sarl
pop
push
pop
or
adc
movl
push
mov
data16
xor
cmc
jne
fs
add
mov
pusha
mov
mov
lret
outsb
out
mov
xchg
or
lds
mov
and
jg
lcall
jo
xor
mov
int3
and
jb
pop
mov
or
cs
sahf
das
or
hlt
sbb
in
data16
popa
incb
cmovno
aad
cmp
int3
adc
imul
push
lods
xchg
pop
mov
xor
push
mov
jnp
pop
cmc
push
cltd
and
mov
dec
mov
mov
xchg
jne
arpl
and
mov
push
mov
xor
int3
movsb
jb
faddl
imull
mov
mov
ljmp
inc
ret
mov
adc
inc
ret
iret
inc
pop
sub
pop
xor
andl
or
mov
loop
movsl
push
jp
es
mov
pop
adc
and
lods
push
mulb
push
mov
add
ja
sbbb
iret
or
outsl
or
cmc
enter
xor
push
arpl
xchg
xchg
dec
fsub
push
scas
daa
push
push
push
pushf
sbb
imul
cltd
sub
and
out
jmp
xchg
sahf
pop
dec
sub
jmp
sbb
jae
aaa
mov
imul
hlt
test
bound
adc
test
sub
std
outsl
negb
xchg
fwait
mov
fwait
add
mov
int
pop
das
mov
fsubrp
sbb
pop
jbe
inc
pusha
pop
mov
popa
lock
and
xor
insl
dec
ret
jae
imul
int3
jle
test
test
outsl
xchg
ficomps
repnz
mov
mov
pop
mov
and
test
or
inc
out
lahf
sub
test
shr
sbb
test
xor
xchg
pop
lock
insl
test
sub
mov
int
data16
jns
push
and
and
xchg
push
imul
fcmovbe
adc
std
adc
faddp
and
adc
sbb
mov
or
loope
or
jecxz
pop
mov
and
push
js
mov
sub
cmpsl
in
aas
subl
pop
je
sub
sti
fstps
out
js
cmc
in
imul
incl
inc
push
cltd
pop
mov
daa
xor
fcom
mov
mov
fisubrs
fistpl
and
sbb
sahf
push
pop
add
je
xor
lret
arpl
andb
adc
and
bswap
cwtl
mull
int
lods
push
arpl
fldt
popl
daa
mov
push
inc
cmpsb
mov
out
outsl
ficoml
iret
or
test
sahf
es
sub
loope
clc
pop
and
fnsave
cmp
jl
repz
xor
test
insb
adc
ret
pop
sarl
lcall
in
adc
cmp
mov
or
jns
fmulp
sbb
jne
xchg
pop
mov
ss
xchg
push
aaa
jle
ljmp
or
mov
ds
jne
popa
dec
lcall
sub
inc
sub
xor
push
cmp
aad
push
jbe
filds
insl
and
mov
jnp
dec
sbb
pop
pop
xchg
sub
sub
xchg
jns
mov
xor
mov
sbb
mov
ja
loop
xor
lea
push
sub
or
sti
xor
cmp
jecxz
stc
pop
int3
and
push
repnz
jo
mov
stos
mov
orb
jl
inc
int
add
sub
sub
ljmp
mov
sub
rcr
and
clc
xor
loope
xchg
leave
dec
loop,pn
mov
loope
out
xor
bound
pop
imulb
dec
lea
out
cwtl
mov
xor
andb
lods
cmp
rcr
push
pop
das
movsl
cwtl
lods
outsl
jge
push
push
push
mov
repnz
push
shr
stos
test
shlb
jge
jb
dec
sub
adcl
ss
lds
and
loopne
inc
lea
inc
inc
mov
test
mov
adc
jl
mov
mov
mov
mov
mov
test
in
data16
or
int3
loopne
pop
dec
ret
xor
jae
jns
inc
sar
inc
cmpsb
test
mov
mov
mov
insb
cmp
and
ja
call
jnp
or
cwtl
ss
clc
pop
cmp
mov
and
ja
shlb
call
push
icebp
es
icebp
into
or
pop
sbb
mov
pop
add
cmpsb
jecxz
jmp
dec
xor
fbstp
cltd
movzbl
dec
pop
xchg
cmpsl
mov
idiv
inc
aam
pushf
push
jecxz
mov
lret
popf
test
cmp
xchg
cmp
inc
push
jmp
rcll
xchg
dec
ret
frstor
inc
pop
xchg
loope
jbe
mov
cld
jnp
lcall
xchg
insb
mov
push
repnz
mov
lret
or
sub
sti
ret
out
loopne
inc
mov
jo
jbe
insb
inc
push
lret
mov
add
dec
std
insb
inc
stos
vsubpd
sbb
mov
shl
lds
xchg
dec
xchg
add
mov
mov
push
in
pop
stc
lds
pop
incl
mov
inc
repnz
nop
pop
inc
mov
mov
popa
and
pop
je
je
movsl
aam
sahf
add
into
push
xlat
inc
xchg
pusha
pop
and
push
std
mov
xchg
test
outsl
cmp
xorb
pop
cltd
dec
push
stc
out
or
cwtl
std
cmpsb
loopne
fdivs
push
mov
cs
je
scas
mov
repnz
mov
rcll
xchg
int3
mov
mov
sbbl
das
or
pop
mov
mov
jge,pt
int
movsb
sub
insb
jge
in
mov
std
push
push
adc
add
lcall
cltd
adc
xlat
cmpsl
xor
dec
mov
sub
mov
cld
lret
mov
xor
test
lret
incb
cmpsl
popa
jne
adc
mov
and
adc
sbb
sub
bound
add
in
imul
cmp
pop
jg
mov
in
cltd
loop
ljmp
jp
jb
mov
into
enter
xchg
and
mov
sbb
out
xor
jp
jl
xchg
mov
mov
mov
xchg
dec
add
sub
pop
jae
arpl
cli
pop
xchg
xchg
pop
and
xchg
xchg
and
sub
ja
es
fstl
mov
bound
pop
mov
shll
mov
add
mov
cmc
dec
in
xor
test
rcl
inc
push
in
push
and
int3
cli
xchg
cli
push
enter
into
shll
push
or
jmp
and
adc
sbb
sbb
push
inc
loopne
ljmp
divl
outsb
sub
inc
fldt
inc
pop
repz
sbb
cmp
jle
push
adcl
daa
ret
push
test
xor
mov
mov
cmp
and
dec
test
mov
pop
inc
lods
xor
and
in
adc
test
xlat
xchg
popa
insb
lods
fimuls
mov
add
mov
stc
pop
cmp
pop
lods
les
mov
dec
sar
jne
stc
inc
push
mov
ss
xchg
fs
adc
lock
jno
stos
lods
nop
mov
xlat
test
clc
pop
jo
imul
mov
xchg
jb
push
ret
mov
push
ret
jge
cmp
or
pop
pmullw
imul
fisubrs
leave
add
in
in
dec
dec
cwtl
mov
jp
inc
sbb
jnp
xor
or
decl
leave
aas
push
lods
add
push
push
ljmp
push
jno
insl
and
pop
and
xchg
dec
loope
xor
nop
sbb
repz
xor
add
push
clc
cmp
pop
inc
sarl
test
lds
lea
dec
imul
mov
aaa
xchg
dec
imul
mov
push
stc
xlat
mov
add
test
inc
or
mov
dec
or
inc
int3
pushf
jg
outsl
leave
sbb
sbb
push
sbb
negl
dec
inc
pop
mov
mov
add
xor
fistl
sbb
mov
cmp
or
jne
jno
lret
pop
enter
push
outsb
cltd
imul
push
jmp
testl
mov
jg
jp
mov
test
sbb
inc
test
pop
aad
push
fstl
iret
lret
mulb
scas
movsl
sub
mov
fstpt
cli
fsubrp
test
add
ja
mov
push
cld
ss
adc
shlb
movsl
aaa
lods
jl
xor
cmp
and
push
lods
addl
jno
xor
leave
scas
out
movsb
in
adc
cltd
dec
mov
sarb
lds
test
loop
js
xlat
insl
jns
shll
pop
inc
mov
mov
js
lea
pop
das
shll
std
iret
cmc
add
enter
xor
out
xor
mov
mov
jb
in
pop
adc
sbb
mov
inc
push
sub
nop
loope
pusha
iret
stos
sub
pop
mov
mov
fimull
in
test
in
or
lods
jle
push
lcall
sub
cmp
inc
mov
sbb
stos
dec
cmp
scas
sarb
push
mov
xor
xlat
rcrl
sbb
daa
les
lret
xchg
mov
sub
cmp
scas
xlat
lock
scas
sub
inc
push
push
and
mov
movsw
ret
insb
cld
nop
lods
js
test
sbb
int
push
popf
pop
cmp
push
jnp
adc
aam
cmp
lods
loope
pop
push
loopne
shll
xor
mov
sbb
aas
jmp
outsl
daa
and
and
sub
and
inc
pusha
pop
dec
movzwl
negl
scas
outsl
int3
mov
cmp
hlt
nop
pusha
es
je
cmp
fwait
pop
fadds
push
in
fldenv
enter
dec
add
lods
xorb
xchg
fs
insb
aad
and
aaa
pop
sub
and
add
sahf
adcb
mov
pop
mov
enter
add
rcrl
adcb
sbb
lock
dec
push
jae
imul
xchg
add
dec
jge
dec
fstps
leave
adc
jmp
addb
loope
push
sub
adc
je
mov
adc
push
sbb
in
roll
fucomp
lcall
push
popf
adc
sub
mov
xchg
xor
jo
in
les
outsl
jae
pop
sbb
mov
xor
pop
adc
pop
fdiv
pop
pop
repz
push
aam
mov
clc
pop
ret
or
ja
dec
add
sbb
adc
out
sahf
adc
pop
or
jg
aad
pushf
pop
sub
mov
adc
pushl
loopne
aaa
jb
mov
movsb
mov
push
ljmp
aam
or
or
clc
fimuls
xchg
in
cmpsl
hlt
sti
test
inc
dec
sub
jbe
imul
divb
push
jb
sub
add
jnp
cmp
data16
adc
push
je
cmpsl
push
mov
push
scas
arpl
test
mov
sbb
pop
or
xor
popf
into
mov
push
or
jecxz
arpl
sub
pop
mov
iret
mov
mov
popf
jecxz
sbb
js
adc
mov
bound
push
push
fldcw
out
dec
mov
sbb
inc
adc
je
leave
push
arpl
push
push
test
jbe
jg
mov
cs
push
mov
and
or
sbb
lcall
push
cmp
push
push
xchg
mov
mov
or
lahf
aaa
insb
jno
push
xchg
sub
stos
fistpll
shll
mov
adc
push
aad
test
int3
sbb
in
inc
cld
in
jo
xor
sbb
push
divb
pop
in
or
in
mov
das
adc
jmp
push
rcll
cmp
mov
fiaddl
test
inc
mov
fdivrs
sbb
nop
outsb
lds
aad
fwait
mov
mov
pop
das
xchg
jmp
xchg
in
jnp
mov
sbb
das
je
and
inc
mov
sub
mov
notl
rcl
xlat
dec
mov
in
in
stc
jmp
stos
stos
fldcw
dec
aaa
scas
imul
pop
out
push
lret
xlat
inc
fisubs
scas
xlat
imul
fbld
jno
in
and
xchg
mov
and
sbb
xor
ficoml
loope
rcrl
das
ds
and
les
cmpsl
xchg
sub
jnp
sbb
xor
or
test
mov
cmpsb
or
push
outsl
nop
in
push
ds
sub
xchg
mov
push
jmp
xchg
cmp
push
mov
inc
jmp
movsb
add
insl
mov
xchg
push
out
mov
lcall
cmc
push
test
negl
push
popf
ss
aas
pushf
adc
dec
pop
ja
dec
mov
jle
sbb
sbb
xor
lret
jge
imul
mov
pop
or
pop
add
mov
xor
mov
repz
pop
lock
inc
jle
popw
inc
shr
sub
push
cmc
push
mov
stos
cmpsl
mov
imul
xor
adc
mov
adc
pop
dec
push
sub
mov
add
cmpsb
pop
push
aad
sar
insb
sbb
mov
pop
mov
adc
mov
jbe
lock
mov
and
in
addl
cmp
sbb
push
mulb
ljmp
jns
and
shll
stc
push
lods
mov
shlb
mov
fcmovnb
push
arpl
outsb
jmp
dec
jp
mov
in
jecxz
dec
add
dec
cmp
cld
mov
cmpsl
cmp
ljmp
fisttps
mov
and
insl
dec
mov
inc
popf
lahf
sbb
push
push
in
out
push
xchg
das
and
mov
and
in
addr16
or
pop
nopl
pop
add
add
sub
insl
jo
cmp
ljmp
pop
sbb
in
push
dec
jno
xchg
nop
test
pop
and
sahf
cmp
jne
mov
xchg
xchg
cmp
add
je
leave
or
int3
cmp
mov
sub
push
negb
lea
sbb
fs
mov
test
out
rorl
fstpt
ja
cmpsb
movsb
pop
push
insb
imul
js
int3
cld
jns
lcall
jge
shrb
cld
inc
lcall
jge
or
test
dec
or
and
das
fwait
mov
stos
aaa
test
cltd
pop
shll
xlat
jle
fadds
stos
add
fwait
pop
in
inc
lcall
iret
cmc
daa
push
or
roll
lcall
jg
add
lods
test
mov
call
mov
sub
mov
aas
shll
aam
push
test
lds
cltd
aas
hlt
call
inc
icebp
dec
xchg
xor
sub
dec
mov
sbb
je
push
pushaw
out
pop
lods
or
jno
stos
xchg
push
push
js
jecxz
push
and
xchg
fistps
int
daa
mov
inc
das
xor
mov
xchg
jbe
and
pop
pop
call
mov
insb
inc
pusha
jbe
xor
hlt
fbstp
pushf
push
mov
daa
adc
adc
adc
stos
sbb
jle
push
test
mov
add
pop
ss
mov
loopne
push
and
push
pop
vfmaddsd
inc
or
fcoml
call
cwtl
push
mov
stos
cmp
stc
lret
dec
xor
test
push
mov
mov
xchg
mov
popf
mov
aas
or
xchg
cld
adc
out
sti
mov
or
into
dec
in
xor
inc
loope
addr16
mov
addr16
mov
mov
mov
push
mov
test
les
movsl
fwait
and
lods
lds
dec
stc
cmpsb
in
rorb
push
mov
fldenv
loop
adc
push
leave
adc
fwait
mov
das
pop
dec
rorb
std
shr
adc
div
or
sub
loope
in
mov
jns
mov
nop
test
loopne
or
xchg
aam
xchg
pop
xor
insb
inc
mov
jb
movsl
lea
sti
in
inc
fildl
in
pusha
add
mov
notl
or
fstpt
test
movsb
loopne
stos
incl
ret
sbbl
xchg
adc
pop
xchg
dec
mov
push
popa
pminsw
andb
xor
insl
movsl
jp
pop
rclb
cld
add
dec
and
add
add
cmpsb
scas
arpl
xlat
fisubl
mov
inc
inc
mov
hlt
into
fwait
inc
or
out
lods
insl
aad
xor
add
out
iret
sarl
pop
popf
out
lcall
xor
jo
dec
outsb
push
cs
adc
mov
test
and
stos
cmp
popf
insb
jbe
pop
je
xchg
mov
icebp
outsl
mov
sbb
aas
dec
sbb
mov
xchg
out
adc
repz
mov
out
xchg
push
cltd
mov
imul
inc
jns
daa
test
pop
popf
std
popa
stos
add
mov
int3
out
xchg
dec
cmp
inc
mov
pop
arpl
sarb
rcr
or
pop
add
adc
outsb
addr16
daa
fs
ja
lods
sbb
xchg
scas
rcrb
xorb
loop
cmp
pop
sub
test
cwtl
cmp
loopne
cmp
test
push
push
das
push
repnz
lods
test
xchg
in
push
int3
mov
sub
add
push
and
shlb
cmpsl
cltd
mov
psllq
cld
rolb
sub
sub
sarl
sti
sbb
push
das
cltd
dec
dec
in
push
fsubs
cmp
push
aad
and
cmp
addr16
or
sub
insl
in
xchg
test
insl
and
add
pop
jecxz
cld
mov
pushf
cmp
roll
add
fnsave
js
std
imul
scas
and
cltd
cld
jno
dec
movsb
cmpsl
mov
sbb
jg
mov
mov
xchg
cmp
mov
and
in
pop
mov
sahf
rolb
mov
in
mov
sbb
jg
arpl
hlt
mov
pop
jne
lret
cmp
adc
loopne
dec
xlat
adc
call
lds
cld
xchg
sub
in
mov
adc
add
mov
jmp
mov
pushf
ret
popa
ret
into
mov
outsb
pop
add
dec
push
adc
and
fwait
inc
mov
jne
or
jle
xchg
mov
lret
mull
and
ret
push
and
inc
cmp
test
mov
loope
dec
push
dec
aaa
pop
jb
jge
movups
cmc
test
gs
js
pop
dec
roll
jle
pop
orl
ret
cmc
lock
jg
shll
adc
shl
sub
mov
push
and
fwait
iret
adc
push
cltd
jns
cmp
adc
mov
xchg
push
and
sbb
shlb
push
cmp
addr16
mov
and
xchg
mov
sbb
sub
insl
cmpsl
inc
cmpsw
cmc
jbe
add
mov
cmpsb
cmp
push
lahf
mov
jge
inc
inc
lock
dec
in
pushf
mov
adcl
aad
pop
xchg
push
adc
cmp
test
dec
cwtl
xor
mov
clc
imul
xor
cmp
pop
dec
add
scas
dec
xchg
jl
and
mov
es
inc
jno
cmpsb
les
mov
test
fmul
xchg
or
dec
jge
int
pop
xchg
outsb
mov
mov
xlat
test
test
dec
cli
pop
dec
in
bound
outsl
mov
sahf
lock
arpl
push
pop
test
insl
and
jmp
int
or
and
xlat
mov
xor
lret
xor
clc
adc
mov
lcall
xchg
aad
push
jb
test
lods
push
call
aas
sbb
xchg
mov
and
jo
lock
pop
adc
ficoml
and
dec
dec
and
rclb
and
ficoml
mov
inc
mov
test
mov
mov
sbb
lds
mov
cmp
mov
lds
inc
insb
sbb
cltd
adc
out
lret
outsb
in
ljmp
stos
pop
dec
iret
fistpll
insl
cmp
sub
shll
jo
inc
rolb
pop
mov
xchg
loopne
dec
adc
pop
out
cltd
popf
push
xchg
xchg
repz
fldt
les
pop
push
jbe
add
out
or
out
fnstenv
dec
adc
mov
call
xchg
pushf
scas
xchg
mov
popf
cmp
lahf
push
fs
mov
lahf
in
dec
mov
lcall
sub
mov
dec
mov
dec
sti
loope
ja
iret
sub
mov
xchg
pop
fwait
es
sbb
and
jno
jge
push
lcall
popa
ret
mov
movsl
outsb
dec
mov
in
sbb
mov
add
sbb
pusha
jecxz
and
xor
pop
inc
seta
sub
jae
xchg
and
xor
push
pop
push
sarl
or
sub
dec
outsl
outsb
jns
stc
jecxz
movsb
mov
icebp
jb
adc
scas
icebp
lods
push
cmp
popf
data16
rorl
push
nop
push
dec
jns
fisubrs
push
dec
test
xor
sub
cmpsb
ss
shlb
sbb
pop
arpl
hlt
push
hlt
frstor
pop
sub
adcl
mov
mov
mov
es
fidivs
adc
rclb
nop
adcl
sub
inc
dec
popf
pop
cmp
das
push
cltd
call
add
inc
gs
popf
pop
test
ljmp
adc
jns
les
push
push
das
jo
or
fiaddl
mov
stos
dec
mov
jecxz
je
popa
insl
mov
addr16
pop
fiadds
cwtl
push
daa
jecxz
sub
sti
mov
jne
shlb
aas
mov
out
mov
push
andb
cwtl
jg
mov
lret
cmp
mov
dec
daa
cltd
test
icebp
push
fnstenvs
xchg
int
fstl
scas
mov
ss
rcl
das
and
adc
xor
cltd
sub
cmc
mov
insl
out
mov
pop
out
adc
into
out
sbb
xchg
mov
jle
or
repnz
jmp
insl
mov
and
imul
pop
movsb
notl
xor
fcomp
lret
into
inc
in
ljmp
js
jecxz
stos
cld
in
xchg
mov
pop
cltd
outsl
push
insl
push
leave
or
pusha
pop
cmp
pop
movsl
mov
jmp
dec
mov
pop
iret
pop
sbb
mov
test
sbb
push
add
imul
bound
mov
mov
fistl
fsubrs
mov
out
icebp
cwtl
shlb
hlt
movsl
jno
dec
fmul
and
push
nop
lret
jecxz
sbb
out
sbb
adc
dec
enter
dec
pushf
pop
out
xchg
stc
mov
inc
jb
mov
arpl
lret
adc
add
inc
fstp
ljmp
mov
xchg
xor
callw
cmp
ret
inc
and
insb
lret
jg
addr16
mov
mov
sbbl
jge
mulb
repnz
adc
stos
dec
jl
dec
shll
sub
xor
ss
or
stc
icebp
insb
inc
jb
insb
bound
xor
ja
ds
aad
or
out
test
movsb
mov
rcrl
gs
aaa
daa
push
incb
cmp
out
sub
shll
mov
mov
fs
inc
clc
aad
fs
movsl
xchg
xchg
mov
inc
into
pop
cmp
movd
push
out
mov
adc
push
mov
mov
xlat
jo
xchg
in
jo
clc
jp
in
mov
insb
imul
xor
jnp
test
jb
sub
test
out
xor
inc
mov
nop
mov
mov
popf
pop
xchg
add
loop
or
mov
jnp
popa
xchg
shll
push
sti
sub
cli
ja
leave
ljmp
andl
adc
push
pop
mov
into
pop
add
cmpsb
addr16
push
mov
nop
or
jmp
adc
push
pop
xor
sub
pop
imul
iret
pop
or
call
push
insb
pop
sub
imul
int3
cmp
ljmp
mov
xor
sbb
push
pop
pusha
shr
fsubr
inc
jbe
jecxz
frstor
xchg
insl
sbb
lret
cmc
or
lods
das
out
push
mov
xchg
dec
leave
in
and
std
or
push
push
or
imul
out
xor
cltd
stos
popf
sbb
mov
xchg
pop
stos
mov
and
jmp
aad
push
and
pop
std
adc
dec
cltd
aam
lret
sbb
js
push
inc
popf
fildl
sahf
mov
lods
or
test
std
add
int
movsb
dec
jle
jmp
frstor
icebp
dec
ss
daa
jbe
ljmp
pop
cmp
xor
mov
mov
sbb
dec
lret
call
fidivrs
cmc
mov
mov
dec
pop
xor
stc
or
cmc
lret
dec
pushf
xchg
mov
inc
cld
adc
or
cmc
ret
insl
sbb
sub
and
cs
xchg
jae
add
xchg
into
pop
jb
negl
sub
repnz
xor
aas
andl
or
mov
xchg
push
jne
cwtl
jg
xchg
movsl
cmpsl
je
setb
cltd
mov
mov
cmp
mov
jbe
lret
les
pop
push
lcall
shl
daa
or
sti
rclb
mov
push
pop
sub
mov
dec
test
fs
sub
mov
push
andl
push
mov
test
or
rcll
mov
mov
divb
bound
notb
push
addr16
jbe
push
in
xchg
cwtl
lods
lods
outsb
ret
cmpsb
cmp
adc
mov
movsb
dec
xor
cmpsl
or
pop
aad
ret
add
and
jmp
jns
outsl
adc
imul
jae
insb
sub
aaa
lods
xchg
mov
cmp
rcrl
lods
mov
enter
push
add
fsubrs
sbb
cs
ja
xchg
cld
ret
mov
add
scas
xor
dec
call
push
cmpsb
or
and
loopne
mov
fcom
mov
xor
das
adc
cmp
mov
jle
inc
add
jge
cli
sbb
pop
je
sub
mov
pop
or
js
repnz
xchg
es
clc
lods
and
cmp
dec
and
mov
loopne
inc
push
lods
xchg
and
pop
sbb
jo
sub
push
inc
imulb
sti
popa
push
or
dec
sbb
push
push
out
sub
arpl
mov
clc
adc
jmp
or
pop
addr16
sbb
jns
push
insl
movsb
aad
loopne
ljmp
inc
pop
iret
mov
xchg
fdivr
ficoml
adc
std
test
loopne
fstl
push
sbb
cmp
andb
int
notb
jo
cmp
ljmpw
push
cmc
jle
enter
mov
add
xor
scas
shll
pop
pop
cmp
pushl
sbb
mov
into
pop
rorb
push
pop
xor
cwtl
hlt
repz
add
cmc
pop
mov
add
xchg
inc
into
mov
xlat
loope
sti
pop
jg
pop
inc
es
mov
cld
stc
pushf
pop
pop
nop
jae
aaa
pop
mov
inc
loopne
subl
sahf
dec
and
adc
lret
ds
jmp
dec
push
movsl
push
and
negl
fs
push
jne
jno
sbb
inc
adc
dec
shlb
fs
int3
xor
push
sbb
sub
jae
pop
je
sti
fmull
xchg
jns
aad
insb
outsb
lock
cmp
push
xor
xchg
push
cmp
int3
cmp
dec
push
and
dec
and
xchg
jnp
jle
xor
dec
push
je
andb
push
adc
sub
mov
mov
call
jle
cmp
aas
sahf
mov
in
sub
xorl
in
push
jnp
mov
mov
pop
bound
enter
push
jp
fidivrl
iret
insl
dec
cmp
pop
cld
sub
and
push
fwait
jecxz
in
ja
jle
ret
xor
loope
dec
jb
loop
jmp
mov
adc
pop
mov
jbe
xlat
sub
les
das
xchg
mov
aas
pop
xor
or
pop
pusha
sub
sar
insb
sub
inc
ss
lcall
jo
push
add
add
cmpsb
inc
push
fwait
mov
into
jnp
repnz
add
into
popf
leave
cmpsb
pop
pop
jecxz
sub
sbb
out
mov
aad
and
lds
jl
dec
cmp
fwait
mov
xchg
popa
mov
push
int3
psubusw
xorb
cmpsb
imul
arpl
repz
jbe
scas
dec
lea
sti
push
test
fwait
cmpl
or
pop
addr16
add
pop
cmp
lcall
outsb
mov
lds
test
or
cmc
lods
iret
dec
clc
add
xchg
adc
push
xor
and
jl
xchg
dec
and
inc
pop
sbb
sub
popf
cmp
xor
lods
notb
dec
stos
out
ret
mov
insl
jle
test
xor
push
clc
push
icebp
dec
xlat
rol
cmp
cli
mov
xor
cmp
mov
stos
leave
repnz
ds
negl
in
andb
aas
aas
xchg
aad
fdivrl
divl
int3
inc
mov
es
jno
data16
repnz
enter
xor
push
and
adc
aad
xor
mov
and
sub
lcall
pop
jnp
xor
inc
jge
shl
mov
mov
mov
insl
les
mov
add
push
add
fndisi(8087
fwait
dec
insl
and
pop
cwtl
in
decb
mov
fwait
xchg
cwtl
adc
xlat
push
xchg
jno
leave
dec
test
xor
xchg
movsb
xor
es
push
into
decl
pop
leave
scas
push
inc
and
xor
fs
clc
js
mov
add
fistps
fstps
push
lret
adc
ljmp
sbb
jne
mov
out
outsl
mov
movsb
add
pop
insb
stos
xchg
nop
xor
sbb
dec
inc
into
cmc
or
call
inc
scas
mov
popf
inc
jmp
dec
mov
xchg
or
out
clc
push
adc
flds
ret
les
inc
cmpsl
xchg
cmp
add
cmp
hlt
xchg
push
xor
shrl
push
mov
ret
lock
jbe
lcall
mov
inc
in
movsl
aas
je
outsb
sbb
xchg
mov
aam
jecxz
and
mov
outsl
std
and
ret
inc
jge
out
mov
push
push
je
push
pop
dec
cmp
repz
loop
lods
mov
inc
out
adc
mov
enter
or
add
push
mov
add
or
stc
lds
int
jg
aad
out
mulb
repnz
sub
in
xchg
in
jge
test
cwtl
arpl
jmp
fists
pop
mov
cmp
int3
or
push
sbb
mov
or
imul
iret
xchg
xchg
push
cmp
mov
sahf
push
cmpl
pop
movsb
movsb
or
adc
and
enter
jae
repnz
aas
out
dec
out
bound
mov
out
pop
mov
aam
mov
inc
inc
roll
or
xor
sub
stos
cmp
mov
or
std
mov
xchg
and
dec
mov
out
sbb
je
jo
stos
mov
and
das
pusha
aas
xor
jbe
pop
dec
int
pushl
stc
rcll
adc
daa
andl
mov
mov
std
mov
repnz
push
fsub
in
mov
mov
outsb
ficoms
sub
fstpl
pop
inc
imul
xchg
out
push
jae
add
iret
in
xchg
or
jne
pop
pop
jl
shrl
jae
data16
pop
popf
aam
push
mov
xchg
test
cli
leave
push
lods
sbb
xor
sbb
out
mov
fadd
mov
fidivrl
and
mov
lahf
lret
sbb
pop
sub
pop
add
mov
aad
and
and
push
xchg
xor
cmp
rcrl
cmp
cmp
cli
gs
sub
xor
xor
rorl
outsl
fcmovne
leave
ja
cltd
mov
mov
sbb
or
add
mov
lea
mov
and
mov
addb
pusha
and
pop
mov
xor
or
mov
in
gs
cmp
and
insb
sub
dec
aad
ja
aas
mov
sbb
jns
ds
cmpsl
sbb
pop
stos
pop
pop
lock
cs
cwtl
push
add
stos
xor
pop
lds
sub
lret
and
mov
mov
lock
cmp
jne
ja
packsswb
push
cs
push
pop
mov
push
fs
mov
or
push
sbb
stc
xchg
pusha
mov
mov
out
lcall
inc
push
fstpt
adc
cmp
gs
insl
and
lret
push
mov
push
mov
ret
nop
cmc
call
mov
mov
and
leave
jb
sub
push
div
das
push
out
icebp
inc
mov
in
test
jnp
les
out
test
ds
jnp
movsl
jmp
jb
js
cmpsb
rorl
pop
adc
lock
mov
jne
leave
out
mov
adc
cmpsl
in
push
jg
mov
jae
insb
cmp
add
cmpsl
leave
push
insl
inc
cmc
jae
repnz
test
add
ds
mov
mov
cmp
ljmp
xor
out
scas
adc
dec
insb
orl
jle
add
outsl
aas
push
gs
pop
ja
call
xchg
xchg
xchg
clc
roll
mov
ljmp
add
in
pop
into
jmp
push
mov
dec
nop
sub
inc
nop
in
push
stc
cmp
lcall
sbb
pop
xor
call
mov
aas
sub
xor
clc
addr16
xor
int
lods
shrl
sbb
insl
add
mov
std
mov
std
or
sub
sub
mov
and
ljmp
cmp
jmp
jb
jnp
push
xchg
mov
push
sbb
jne
xlat
mov
cmp
mov
mov
int3
mov
aaa
test
cmp
dec
sti
rol
jecxz
jmp
movsl
mov
xchg
dec
ljmp
or
jo
push
xchg
pop
adc
pusha
push
imul
imul
mov
and
mov
or
popa
inc
or
inc
or
inc
xor
test
pop
xchg
aaa
and
lret
push
mov
mov
test
mov
sbb
cmp
arpl
imul
xlat
sub
icebp
push
fmul
sti
or
cld
sbb
cli
jns
xlat
or
icebp
loope
stc
cltd
repz
cmpb
lock
push
mov
sbb
mov
cmpb
xor
lds
int
xchg
inc
xchg
in
pop
xchg
xor
mov
sub
scas
mov
addl
sbb
insl
mov
or
mov
les
pop
xor
test
aaa
jp
insb
pop
dec
pushf
mov
dec
pop
call
in
mov
and
scas
inc
sub
dec
loop
lods
imul
dec
ss
loope
or
fs
adc
mov
push
or
mov
std
pushf
add
sub
int
mov
cld
testl
sub
pop
pop
xchg
arpl
and
mov
fstpl
stos
cld
mov
fcoms
mov
call
xor
push
and
jbe
icebp
dec
cmp
xchg
and
sbb
xor
gs
aam
jno
stc
gs
hlt
push
testl
jno
imul
add
fisubrs
jae
nop
sub
dec
out
push
pop
jo
outsl
in
adc
ss
dec
repz
out
fnstcw
or
add
out
push
cmp
cmp
xor
inc
cmpsl
cmc
adc
aad
decl
mov
ret
loopne
pop
in
sub
pop
mov
push
dec
push
aam
fidivrs
xchg
xchg
sub
subb
push
dec
jo
jae
jns
das
or
icebp
loope
mov
fidivrl
clc
test
ret
jbe
push
dec
dec
lods
mov
sbb
mov
mov
out
xchg
fcoms
cmp
cli
add
and
mov
fists
and
clc
pop
lret
pop
cli
jnp
aaa
push
add
sbb
jmp
hlt
or
int3
xchg
cli
jb
mov
jbe
adc
cltd
fs
inc
cmc
lahf
dec
adc
popl
popf
loopne
dec
mov
cmpsb
mov
xchg
cmp
js
cmpsb
sysexit
jns
dec
xlat
gs
js
mov
ds
punpckhdq
subb
sub
pop
push
pop
jmp
push
dec
lahf
pop
fmuls
inc
dec
cmp
fnstcw
pop
sub
imul
das
fwait
pop
inc
orl
in
mov
dec
jle
imul
jbe
mov
jb
mov
mov
aad
daa
xor
mov
pop
pop
pop
cmp
lcall
bound
push
xchg
pop
pop
cmp
cmp
loop
outsb
mov
ds
cs
inc
mov
mov
sahf
jns
dec
jge
mov
push
rcrb
push
push
int3
cmpsb
pop
push
gs
or
sbb
sub
push
push
push
fwait
iret
pop
out
aaa
jbe
push
pop
js
sub
imulb
les
push
or
cld
data16
cmp
jno
enter
stos
out
loopne
push
rcrl
or
rcrb
adcb
mov
fwait
andb
sbbb
pushf
das
mov
jge
dec
mov
idivl
xchg
and
sub
stc
outsb
pop
and
push
jmp
lock
inc
push
and
xchg
scas
inc
ret
cmpb
pop
ja
pop
fisubs
adc
and
orl
in
lea
aas
sbb
mov
dec
orl
mov
mov
jae
and
mov
mov
fucomip
movaps
xchg
mov
push
outsl
call
mov
stc
nop
push
dec
xor
ret
addl
dec
addr16
ret
stc
push
lds
xor
mov
cld
xchg
inc
addr16
rorl
enter
and
test
scas
jmp
push
xor
cmpsb
mov
ror
mov
insb
pop
aaa
insl
cmp
shll
test
ds
or
stc
scas
test
add
sub
mov
lods
pop
scas
stos
test
mov
cmp
arpl
hlt
sbb
lret
lahf
fwait
bound
xor
arpl
shll
jp
movsl
in
sti
push
mov
pop
pop
mul
xchg
addr16
outsl
mov
jns,pt
dec
fwait
xor
ror
mov
cmp
cmp
jns
ffree
xchg
sub
push
adc
or
xor
pop
push
hlt
addr16
test
sub
xor
pop
fwait
cmp
enter
scas
pop
or
add
outsl
es
jbe
cwtl
mov
mov
adc
enter
das
aas
cmp
cmp
out
pop
lret
inc
jae
fimull
xor
ja
sarl
xor
adc
cwtl
mov
mov
push
mov
adc
and
scas
cmp
add
mov
out
jge
push
and
mov
xor
pop
jge
mov
mov
mov
scas
testb
enter
push
arpl
xor
xchg
iret
mov
xchg
xor
stos
mov
adc
aad
xchg
mov
push
cmp
aad
fidivl
cmp
test
aad
adc
dec
cwtl
in
push
in
fnsave
or
orb
xchg
mov
mov
out
dec
out
push
cmpl
lret
cmpsb
pop
lods
mov
sbb
popf
jmp
in
mov
lea
xchg
push
mov
mov
mov
mov
push
notb
mov
aad
pop
jae
decb
cltd
out
call
add
jnp
in
sbb
push
hlt
pop
push
pop
xor
mov
shlb
mov
pop
pop
mov
iret
fidivrs
scas
sbb
andb
clc
shlb
inc
cltd
push
jp
imul
cmp
inc
jl
popa
mov
ja
test
mov
mov
add
sbb
mov
into
dec
addr16
ret
cltd
nop
cli
add
xor
imul
cltd
inc
leave
xor
xchg
add
lock
dec
mov
mov
jge
add
mov
sub
inc
cld
adc
leave
ficomps
insl
cmpsl
cmpsb
sub
add
pop
pop
adc
pop
xchg
fdivrl
inc
sbb
arpl
or
push
push
jmp
inc
sub
arpl
lret
cwtl
fnsave
std
imul
cltd
cmc
xchg
dec
or
push
imul
mov
xchg
xchg
pop
jecxz
decl
int
push
mov
sub
xor
add
fsubl
jmp
add
xor
neg
arpl
lds
mulb
sbb
aas
adc
repz
add
in
jecxz
mov
push
int
xchg
mov
pop
cmp
out
adc
cmp
dec
sbb
mov
mov
xchg
add
loope
or
mov
arpl
xchg
adc
fiaddl
imul
andl
push
and
cmp
jle
mov
mov
cs
loop
pop
popf
dec
xor
js
mov
mov
mov
mov
cld
and
mov
stos
or
lret
push
push
popf
ljmp
arpl
aaa
xlat
and
add
popa
rolb
scas
pop
mov
ds
in
imul
mov
mov
pop
adc
sub
push
test
jno
lcall
sbb
aam
jno
rcll
std
pop
mull
mov
push
mov
lahf
scas
sbb
mov
and
and
add
mov
pop
xor
pop
mov
test
push
jbe
enter
pop
xchg
inc
int3
aad
insl
push
test
rolb
or
inc
aad
xchg
fldcw
adcb
or
rorb
or
cmp
jno
das
mov
cmpb
insl
xor
loop
add
sub
dec
push
add
cmp
ljmp
jle
mov
fninit
js
inc
orl
xlat
mov
cmp
repz
and
sub
fistpl
ds
arpl
lds
cmp
repnz
jnp
inc
push
xchg
fildl
sbb
hlt
rcl
call
inc
xchg
ds
xor
mov
lahf
xchg
mov
mov
xor
cmp
mov
sahf
fstpl
fwait
pop
jnp
jne
sub
jns
js
lret
jne
cmp
jp
xor
fimull
adc
into
outsl
insl
mov
insb
fxch
and
xor
sbb
shrb
jb
mov
adc
cmpsb
mov
cs
push
or
rclb
add
loopne
fldt
xor
adc
cmp
int
and
pop
mov
out
sub
nop
xchg
dec
popa
mov
adc
sub
mov
mov
loop
lds
cli
sub
mov
sbb
lea
sub
dec
and
or
rol
mov
pop
repnz
inc
sbb
cmc
pop
idivl
lods
cmp
fadds
mov
sub
rol
add
and
mov
hlt
outsb
pop
daa
sub
pop
loope
imull
loope
notb
push
push
adc
loope
or
scas
jnp
test
ret
inc
sbb
mov
xchg
sarb
aaa
out
xchg
push
mov
jmp
jp
xor
sub
test
mov
jl
and
pop
mov
add
jl
jl
iret
pop
cmp
push
lods
push
or
xchg
cmp
xchg
sub
dec
xchg
xchg
in
sub
add
ret
fwait
mov
js
mov
fcoml
mov
cmp
mov
jecxz
cmp
shlb
pop
inc
dec
jg
repz
mov
fsubrs
dec
jge
xchg
sub
or
iret
ficoml
push
sahf
push
dec
xchg
pusha
test
sub
cmp
andb
incb
or
out
pop
lea
push
icebp
pop
fwait
pop
add
and
in
inc
push
cmp
push
xor
mov
subb
mov
loope
mov
clc
add
imul
mov
or
xchg
lods
push
es
or
xor
fs
xchg
xor
pop
sub
xchg
pop
push
push
adc
pop
ret
roll
mov
pop
imul
scas
xor
loop
aas
xchg
pop
outsl
mov
pop
fsts
aad
enter
add
pcmpgtd
xor
pop
push
sub
sub
es
sub
js
mov
lcall
repnz
mov
cld
sub
cmpsb
mov
dec
js
popa
jne
jb
xor
shlb
cmp
dec
push
rol
nop
mov
enter
rorb
popa
mov
cmpsl
and
xor
pushf
and
add
aam
inc
lock
mov
sub
pushf
xlat
xlat
ss
cmp
add
add
insb
sub
inc
dec
cmp
aam
shll
dec
aas
adc
enter
or
pop
jecxz
lcall
enter
sbb
dec
adc
mov
adc
stc
mov
cmpl
mov
sbb
fs
nop
sbb
das
lret
shrl
push
jb
xor
jle
out
push
orb
pop
or
js
sahf
cs
fsubl
ds
lahf
out
push
out
add
mov
mov
pop
lods
into
cld
scas
xor
sub
cli
lods
lret
test
outsb
push
jp
pop
outsl
sub
xchg
jg
sub
cmp
imul
imul
in
repnz
das
mov
rcrl
mov
xor
aad
xchg
xchg
jo,pt
notl
sub
in
jmp
dec
negl
mov
mov
pop
cld
xor
push
outsl
add
or
and
push
jge
add
aam
cmp
icebp
xlat
and
sbb
mov
add
fldt
aaa
xchg
mov
imul
jmp
mov
adc
inc
aam
cwtl
mov
mov
add
aas
call
shrb
xchg
jnp
adc
cmp
stc
sub
dec
test
pop
das
test
or
fwait
insl
mov
ja
out
pusha
dec
movsl
sub
sub
gs
gs
neg
hlt
add
aaa
fsubs
mov
sbb
mov
xchg
nop
jecxz
or
repz
lods
pop
jl
sbb
sti
lods
pop
lods
xchg
loopne
into
fs
incl
call
xor
jne
mov
adc
sbb
sbb
cld
fsubl
test
fdivl
mov
ds
or
push
jns
into
sub
movsb
pop
movsl
sbb
add
leave
sbb
xchg
inc
test
mov
mov
stos
js
sub
xchg
aaa
pop
and
idiv
sbb
sub
ja
loop
leave
divb
jne
pop
lods
xor
sbb
xor
sbb
icebp
adc
or
cltd
int
out
push
sub
rclb
hlt
fs
cld
cwtl
xchg
outsb
cmp
add
out
push
xchg
add
push
scas
fsub
jmp
into
xor
lds
es
fistps
lcall
test
pushf
adc
xchg
ret
mov
clc
arpl
test
dec
in
ret
repnz
dec
mov
repnz
sbb
out
into
std
pushf
rcr
sti
or
sub
cmp
outsl
sub
sub
dec
add
cmp
inc
ljmp
push
outsl
insb
xchg
or
dec
xchg
cltd
sahf
mov
cltd
repz
mov
mov
push
repnz
pushl
xor
cmp
cmp
mov
pop
mov
inc
mul
xchg
adc
fidivs
or
add
pop
pop
lds
outsb
out
push
cmc
and
pop
dec
push
data16
xor
es
sub
sub
pop
sub
xchg
xlat
lods
dec
cmpsb
adc
xchg
jecxz
nop
mov
push
shrl
in
inc
mov
loopne
xchg
out
or
ret
inc
stos
mov
xchg
rcrl
pop
inc
icebp
clc
dec
in
sub
jo
add
cmp
pusha
mov
xchg
popa
in
mov
add
leave
loopne
xchg
xchg
popa
xor
dec
xor
ss
popf
xchg
jbe
cmp
loop
xchg
out
or
inc
or
inc
divl
rcrl
inc
pop
insb
and
mov
push
jno
ja
adc
sti
jl
dec
mov
add
adc
jnp
inc
sub
sbb
pop
sbb
push
push
sub
jg
lods
jnp
in
xchg
test
or
pushw
push
dec
ss
xchg
outsb
int
jae
pusha
push
sbb
hlt
into
pop
cli
call
into
mov
xchg
sarl
popf
jae
dec
ds
pop
jno
xchg
fisttpll
cwtl
out
mov
lods
dec
cld
add
adc
mov
leave
pusha
fwait
mov
sub
int
xchg
negl
push
push
ret
xor
aam
push
inc
hlt
aam
vmovsldup
dec
je
jge
ja
push
ja
sbb
cli
push
add
sarl
xlat
push
and
shl
xchg
scas
sub
pushf
mul
sub
dec
gs
stc
into
cli
add
pop
in
inc
xchg
push
add
or
push
push
or
sbb
cmp
adc
sahf
sub
dec
jae
mov
cmp
and
cwtl
jno
add
ja
mov
jecxz
pop
fwait
jge
sub
lea
dec
in
std
shll
xlat
sub
mov
inc
test
cltd
mov
mov
pop
and
rcl
lods
jle
mov
xor
sbb
pop
xchg
sub
mov
rorl
scas
mov
sbb
ljmp
and
cmp
pusha
xchg
cmpsb
xor
mov
scas
mov
ss
lret
adc
or
cs
mov
nop
adc
jge
loope
out
pusha
mov
out
mov
mov
and
mov
sbb
pop
fstl
cltd
lock
jl
mov
push
sbb
and
repz
or
pop
aaa
js
mov
out
lods
or
cmp
ret
movsb
rcrl
xlat
adc
mov
testl
pusha
mov
cmpsb
sub
jo
inc
out
sub
ss
sbb
inc
or
jne
arpl
les
in
or
rcrb
lock
push
movsb
sub
pop
sub
shl
lret
pop
inc
pop
and
enter
insb
inc
jbe
pop
or
loopne
fldl
mov
int3
shr
mov
out
fidivs
pop
sbb
xchg
in
jge
cli
ds
jns
loopne
es
clc
test
adcl
pop
hlt
std
push
fcmovnu
test
jns
and
and
add
decb
sbb
sahf
push
push
adc
in
in
add
stos
pop
mov
cmp
push
rcrb
sub
aas
jge
push
xlat
xchg
xchg
cmpsb
mov
mov
sub
add
pop
pushf
ljmp
sbbb
dec
sbb
jecxz
adc
aam
mov
mov
aam
jbe
movd
repnz
pop
xor
popa
jle
out
pop
nop
jmp
jg
data16
shlb
sarb
add
test
adc
gs
inc
sbb
sub
sub
push
inc
xchg
mov
ret
je
rcr
ret
outsl
cmc
mov
push
mov
enter
and
popa
inc
and
or
dec
mov
pop
xchg
notl
xor
rclb
pop
or
ss
test
stc
ret
lods
mov
and
movsl
mov
in
test
das
mov
lds
mov
pop
in
cmp
or
outsl
dec
mov
out
xor
repz
push
jge
dec
int3
scas
sub
sbb
sub
arpl
insb
pushf
hlt
lcall
aam
xchg
pop
adc
cmp
cmc
nop
jg
mov
mov
xor
jmp
or
jb
sub
pop
rolb
jle
push
pop
cmpsl
add
pop
test
in
test
movb
fimuls
stc
pop
mov
xchg
push
or
dec
imul
mov
fldcw
call
sub
pop
lea
movsl
cld
and
jns
jmp
mov
dec
loopne
jo
lods
mov
xor
rcr
arpl
std
jo
inc
xor
jb
icebp
adc
outsl
sub
mov
into
repnz
or
or
aam
ret
sbb
adc
or
inc
fstps
inc
roll
mov
cmp
cmpsb
ja
lahf
iret
xchg
mov
mov
popf
js
mov
in
cmc
mov
repnz
xor
add
or
movsb
pop
or
xchg
adc
icebp
insb
or
jl
in
pop
outsl
or
repnz
cmp
lock
xchg
mov
jl
push
push
sub
ss
mov
or
jae
test
cmpsl
ljmp
rorb
push
jmp
mov
ss
xlat
rcrb
adc
mov
jo
cmp
fdivrl
and
mov
fsubs
pop
adc
xchg
cmp
mov
or
mov
leave
push
jp
jne
mov
loope
mov
das
hlt
rorb
xor
into
int3
paddusw
adc
jne
inc
fs
inc
mov
stc
pushf
in
daa
pop
lods
and
xchg
mov
insl
arpl
hlt
or
mov
fbstp
stc
mov
jle
mov
sbb
mov
jnp
stc
rcr
bound
jnp
movb
das
inc
lods
bound
cltd
jbe
add
stos
xchg
and
repnz
add
mov
in
in
sub
ja
outsb
sbb
ljmp
sbb
push
in
push
in
inc
sub
sbb
ljmp
mov
adc
xor
pop
xor
orl
mov
xor
fiaddl
in
bound
add
loop
xor
xor
aad
fadds
pop
jae
test
pop
out
mov
push
scas
push
sbb
sti
sahf
cmp
addr16
mov
gs
mov
pushf
inc
cmp
bound
xor
cmp
mov
pop
jb
rcrb
fisubs
inc
imul
xchg
inc
fs
ucomiss
lods
jmp
stos
jle
stos
lea
sahf
jbe
shl
mov
stc
jns
push
push
xor
movsl
in
mov
push
icebp
dec
mov
stc
and
cmp
loop
inc
loopne
cmp
sub
push
and
clc
sub
xchg
cmpsb
icebp
xchg
cmp
test
sahf
pop
stos
fbld
or
clc
hlt
mov
jecxz
mov
push
adc
xor
test
mov
es
js
push
mov
loop
rcl
jg
mov
les
pop
bnd
pop
cmp
sub
mov
mov
push
lahf
ficomps
inc
jmp
lods
inc
jle
adc
adc
in
leave
sbb
lret
or
out
mov
pop
sbb
arpl
fisubs
jp
cld
fcmovne
incb
loope
or
mov
push
testb
cmpsl
stos
sbb
mov
inc
aaa
shrl
ss
je
mov
inc
mov
push
in
lret
push
scas
xchg
mov
imul
and
xchg
jae
mov
jnp
lcall
cmp
aad
mov
in
jnp
mov
std
inc
inc
or
mov
ret
es
mov
cld
cmp
fwait
ja
lahf
aaa
mov
xor
adc
pop
jno
fsubrp
iret
or
sahf
shll
movsl
es
pop
scas
mov
fwait
inc
insb
fs
ds
ret
add
outsb
movsb
push
push
mov
movsl
fs
mov
nop
cmc
jnp
sbb
lods
lahf
shrl
adc
sti
clc
es
jmp
jp
dec
pop
jo
pop
in
jbe
outsb
dec
push
out
stc
mov
ret
mov
sbb
daa
addl
pop
gs
mov
sub
xlat
lock
scas
push
dec
fldl
bndldx
cmp
mov
pop
out
cmp
sahf
add
push
scas
cmp
push
cli
pop
das
shrd
push
test
push
data16
fcomps
and
lret
rcll
test
imul
jb
repnz
push
jg
aad
lea
loopne
cmp
ss
call
or
mull
jmp
in
mov
xchg
outsb
leave
pop
jnp
jmp
sub
adc
fs
xor
movsl
dec
fldenv
rolb
imul
adc
push
adc
pop
jecxz
out
dec
shlb
mov
push
mov
xor
out
hlt
xor
push
add
add
lods
fwait
xchg
pop
in
mov
cmp
push
aas
ficoms
cwtl
cmpb
sti
jbe
or
and
test
jne
dec
or
cmp
arpl
xor
push
push
sbb
into
out
es
mov
out
imul
add
pop
xchg
in
insb
lods
sbb
dec
es
dec
repnz
pop
and
mov
pusha
test
mov
cmp
jb
adc
mov
jl
out
inc
adc
ret
and
enter
repz
push
in
in
inc
je
mov
fcomps
or
cmp
jp
orl
in
add
in
xchg
flds
inc
testl
scas
push
dec
mov
adc
pop
insl
cmp
push
sahf
or
push
test
mov
mov
cmp
and
push
push
test
les
test
cli
mov
cmp
sbb
push
push
fsubrs
cmp
pop
ljmp
xor
out
push
or
push
xor
test
movsb
jb
jne
lea
in
dec
cmp
add
pop
inc
mov
mov
xchg
xchg
adc
mov
inc
inc
loop
daa
cmp
adc
fnstsw
idivl
push
cmp
stos
ja
push
dec
xchg
stos
mov
adc
int3
adc
pop
mov
out
mov
cmp
mov
mov
aas
cmp
clc
jb
xor
xor
bound
pop
add
aaa
jge
sbbl
mov
into
lahf
stos
popa
fstpt
int
fwait
jmp
sbb
fisubrs
fsubrs
or
int
movsb
add
push
mov
shlb
pop
icebp
inc
push
adc
pop
in
outsl
loope
dec
mov
mov
mov
gs
cmp
push
jbe
outsl
fstps
push
decb
test
mov
mov
and
dec
and
daa
aaa
dec
and
aaa
pop
sub
cmpb
out
cmpsl
and
inc
pop
xchg
je
fimuls
adc
dec
ret
sub
dec
sbb
sbb
inc
add
xchg
sub
leave
add
leave
sbb
or
jge
and
push
or
cmpsb
mov
push
inc
jmp
lret
insl
loop
cmp
imul
out
push
ja
jbe
pushf
popf
xchg
push
int3
aam
mov
and
mov
and
inc
adc
xlat
jns
fiadds
movsl
pop
xor
push
jno
pop
lods
in
jl
test
test
or
div
sub
out
fistpll
dec
mov
loopne
lcall
xchg
dec
lahf
xor
pop
xor
push
inc
push
mov
aam
call
sub
xchg
ret
pushf
in
xlat
xor
addr16
cmp
repz
std
ja
test
pop
xchg
out
aam
mov
les
sub
lods
pop
xchg
int3
push
push
ss
pop
aas
and
sub
xchg
or
pop
mov
sahf
frstpm(287
inc
pop
sbb
outsl
rcrb
ror
mov
mov
and
les
mov
cmp
mov
aas
leave
rcll
clc
stc
daa
or
decl
leave
dec
cmc
add
out
pop
adc
loope
mov
or
mov
lret
insl
icebp
imulb
fmull
inc
xor
cs
xchg
lcall
sbb
or
push
inc
add
pop
push
sti
mov
loop
fsubl
shll
sub
xchg
fsubs
test
aaa
int
xor
inc
stos
mov
xchg
mov
cli
sahf
cltd
insb
je
push
xchg
jae
pop
lret
and
stos
jno
push
inc
mov
push
fstpl
jno
xchg
mov
rcr
add
push
xor
or
call
icebp
rolb
pop
or
or
dec
int
mov
push
faddp
and
addr16
mov
pop
gs
mov
add
xlat
and
push
push
lcall
jge
dec
and
icebp
fisttpl
mov
fwait
jne
adc
push
cmpsb
adcb
or
xchg
push
and
jno
imul
out
sbb
jecxz
mov
or
adc
mov
cltd
xchg
and
cwtl
xchg
pop
and
in
in
xlat
std
pop
fdivr
das
ret
sub
or
pop
jecxz
cld
mov
or
rclb
xor
cmc
sbb
and
jnp
fidivrs
aad
int3
inc
xor
xchg
dec
aam
adc
mov
js
xchg
out
pop
dec
dec
aaa
cmp
xor
js
cltd
dec
fwait
test
dec
xchg
mov
imul
rcrl
sub
dec
xor
or
mov
movsb
jmp
push
add
arpl
sahf
ds
ja
lods
in
inc
xor
jo
push
popf
arpl
call
sbbl
loope
push
add
loope
jbe
sbb
lea
mov
jmp
sbb
jnp
cmpsb
inc
add
repnz
aam
bound
inc
sbb
flds
cmp
xlat
icebp
leave
cwtl
mov
jnp
pop
pop
jmp
jns
or
or
in
out
negl
sub
cmpsl
aas
scas
inc
jle
push
cmp
xchg
or
cwtl
insl
jp
nop
push
inc
dec
pop
dec
sahf
pop
rcrl
cmp
push
test
iret
lock
outsb
movsl
dec
inc
xchg
sbb
pop
add
ficomps
cmp
lds
jp
loope
inc
repz
out
fstpt
push
cld
cmp
loopne
test
aad
mov
and
add
arpl
mov
in
out
mov
push
call
jmp
push
push
enter
lahf
mov
popf
popf
out
lret
inc
or
push
jbe
mov
add
sbb
mov
push
cs
scas
je
xchg
sbb
sti
fcoms
scas
lods
inc
xchg
mov
jb
shll
pop
dec
pop
sub
add
or
imul
push
mov
mov
arpl
add
std
daa
and
mov
mov
imul
mov
shlb
ficoms
sarb
int3
imul
sub
jbe
jae
outsl
ljmp
sbb
neg
adc
neg
jns
das
ja
jmp
and
mov
and
sbb
jmp
jns
enter
imul
sub
jl
or
jnp
das
jne
cmp
push
cmp
sub
xor
adc
cmp
test
movsl
scas
ja
mov
xlat
pop
push
loope
lcall
push
xchg
es
jge
cli
push
xchg
or
push
dec
pop
imul
mov
adc
sbb
xlat
push
lods
jp
call
jp
lret
mov
adc
jbe
ljmp
iret
stos
sbb
inc
adc
and
in
out
sub
jno
cmp
adc
jbe
loop
inc
jge
insb
or
pushf
lret
imul
pop
sbb
js
lcall
mov
addr16
mov
andb
jp
add
jae
sub
sub
lods
sti
mov
fwait
ljmp
pop
xlat
dec
call
hlt
adc
adc
scas
mov
push
pop
push
dec
arpl
and
daa
mov
rcll
data16
rorl
lds
dec
mov
dec
outsb
pop
sbb
push
xchg
addl
or
popa
or
sahf
lods
inc
xchg
negb
xchg
clc
test
jp
mov
add
in
stos
icebp
es
fistl
mov
xor
xor
mov
xchg
xor
add
stc
dec
out
sbb
inc
xchg
arpl
loop
ret
imul
xchg
ss
popf
lock
outsl
sahf
dec
mov
jnp
xchg
fidivl
nop
xor
rorl
mov
cmpsb
cli
rolb
rcrb
cs
repnz
sub
push
and
sub
jmp
and
fldcw
add
pop
jb
xlat
mov
mov
cmp
scas
aad
dec
test
sub
out
jg
sbb
jge
xchg
out
mov
sbb
das
mov
cmp
cmp
in
inc
jle
mov
loopne
insb
rolb
pop
fs
jp
gs
rcl
mov
andl
push
stos
xchg
cmp
call
add
loopne
sub
push
xchg
ret
jle
push
cmpl
mov
out
in
add
adc
aam
add
mov
pop
cmc
inc
cld
into
insb
inc
lret
aad
xchg
pusha
mov
jnp
test
out
icebp
pop
jae
push
pop
lcall
pusha
and
arpl
in
mov
test
out
out
jmp
cmp
jge
aam
cmp
cltd
fiaddl
mov
clc
stos
push
pushf
in
loope
dec
mov
mov
xor
aam
or
loopne
pop
jg
lods
movsl
dec
mov
jb
repnz
mov
lods
ds
mov
dec
pop
push
andb
add
dec
sarl
out
adcb
push
lea
test
sub
lret
jle
push
ljmp
lods
imul
hlt
adc
sbb
add
inc
or
and
add
repz
or
push
gs
ret
rolb
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
inc
lret
notl
inc
mov
fimuls
push
inc
push
xchg
xchg
lahf
les
mov
rorl
fnstenv
inc
pop
xchg
jecxz
mov
mov
mov
pop
dec
push
adcb
push
pop
call
bound
push
cs
or
jnp
test
out
test
push
inc
aad
sub
push
rolb
jmp
aad
sbb
outsb
mov
push
or
fidivrl
mov
xchg
cmp
call
mov
pop
stos
imul
out
pop
or
pop
xor
cmc
xchg
xor
sar
adc
movsb
or
in
repz
mov
arpl
pusha
pop
dec
rcll
fildl
mov
ds
out
repnz
fdivrs
push
or
pushf
mov
pop
out
mov
pushf
jp
sub
pop
and
int
mov
ds
test
xchg
push
filds
push
pop
add
sahf
mov
enter
push
test
mov
or
mov
or
inc
and
loop
popf
pop
push
ret
aaa
sbb
sub
fisubrl
xchg
mov
jb
mov
ljmp
aas
cmc
dec
dec
imul
inc
dec
push
push
cmc
push
push
fs
cmpsl
inc
dec
rclb
call
jae
inc
scas
fwait
test
jmp
scas
scas
pop
push
stc
inc
ds
cltd
push
cmc
sub
mov
inc
in
pmulhuw
jne
xor
mov
je
test
add
push
dec
dec
cmp
inc
fwait
xorl
rolb
dec
sbbl
fildll
jae
jp
outsl
sbb
outsb
cmp
movsl
push
pop
push
adc
imul
lods
push
ret
aam
sub
loopne
cwtl
lock
clc
and
jbe
add
stos
sub
ss
fwait
inc
push
neg
arpl
js
ja
pop
lods
mov
popa
or
jns
fwait
jae
loope
dec
xor
jnp
shrl
inc
in
lahf
push
cwtl
jecxz
mov
jle
icebp
sub
orb
jne
movsb
xacquire
and
test
pop
mov
stc
mov
xchg
sub
adc
pop
cltd
sti
in
icebp
mov
movsb
lods
dec
fnstsw
in
sub
out
mov
ds
cmp
test
mov
test
std
ret
cld
jmp
pop
pushf
jo
cmp
add
out
dec
inc
and
std
pop
xchg
stos
into
cltd
mov
add
cli
push
mov
dec
mov
js
lret
push
in
scas
push
mov
add
popf
mov
add
es
push
xchg
sbb
xchg
mov
cmp
push
sub
int
data16
adc
add
movb
lds
fimuls
pop
jmp
dec
mov
cs
push
je
sub
in
and
sub
int3
mov
inc
or
jecxz
jl
ret
popa
nop
cs
int
sub
add
out
push
fists
inc
shll
fisubrs
cmp
pop
push
loop
cwtl
sbb
add
cwtl
xor
lret
es
mov
lcall
sbb
mov
fnsave
ret
es
xchg
sub
and
cmp
xchg
ret
and
fldl
out
cmp
sub
sub
push
divb
hlt
jnp
ret
lret
mov
push
cmp
aad
nop
aas
dec
roll
lds
fbld
ss
push
or
rclb
and
aam
add
pop
push
inc
mov
imul
inc
cmpb
in
jo
int3
xor
jns
fistpll
sbb
dec
rorb
mov
sbb
rcrb
lea
lods
or
cmp
xor
cld
ud2
addr16
ret
sbb
sahf
rcrl
test
ja
scas
in
sbb
in
roll
cmp
mov
loope
dec
outsb
fsts
mov
or
pop
xor
inc
fs
inc
mov
fstl
ss
xor
les
out
ret
enter
pop
push
data16
push
lret
jge
push
popf
xchg
inc
loope
and
int
adc
fsubs
dec
test
ficomps
xchg
in
test
pop
in
in
pop
in
xchg
addr16
jge
loope
jecxz
mov
and
mov
mov
mov
jmp
aam
lldt
or
stc
xorps
cltd
mov
inc
lods
jae
loopne
into
aas
cmpsl
clc
int3
xor
add
add
mov
push
mov
mov
pop
sti
push
jb
dec
mov
lret
std
in
decl
xchg
sub
xlat
inc
and
jbe
and
and
insb
sbb
call
daa
scas
xor
pop
stos
ljmp
jmp
adc
mov
push
sub
repnz
shrb
rdtsc
jnp
test
xlat
gs
repz
in
and
cmp
xchg
orl
cs
daa
sub
ljmp
ja
outsb
mov
add
jl
and
dec
lahf
mov
lret
popf
inc
cmp
mov
ds
mov
and
cmp
int3
daa
add
xchg
insb
fcompl
in
xchg
ret
punpcklwd
outsl
mov
pop
gs
dec
cmpsb
ja
dec
adc
inc
cli
shlb
mov
fmuls
sub
mull
inc
in
rcll
push
xchg
call
mov
mov
fnsave
xchg
lahf
into
mov
div
data16
sub
xor
add
sbb
cmp
int3
cmp
pushl
inc
add
inc
xor
leave
enter
shrb
dec
dec
ret
jbe
xchg
and
xor
cwtl
jns
pop
cmp
shrl
mov
push
sti
scas
or
addb
retw
in
clc
repnz
adc
int
movsb
inc
mov
sub
sahf
lea
repnz
mov
out
ret
outsl
pop
aad
or
mov
fidivrl
out
ja
rcrl
push
push
mov
aad
xchg
js
call
fwait
jno
aam
fildl
js
add
pusha
push
lahf
push
jg
push
mov
cmp
add
lret
pop
inc
dec
mov
xor
and
jno
es
fstpt
icebp
iret
fildl
push
mov
push
push
pop
cmp
mov
push
ss
imul
pop
sub
cmpsb
inc
push
xchg
mov
jl
lds
pop
sar
out
jp
or
jae
ds
or
mov
pop
ljmp
mov
inc
sbb
inc
aam
mov
xorb
repz
sub
cmpsl
aas
add
jo
push
fwait
repz
inc
mov
xor
and
fsubs
inc
jns
je
rcl
movsl
push
outsl
movsb
testl
xor
cli
adc
bound
int
sub
insl
cmp
jl
outsb
push
out
shr
outsl
fimull
dec
popf
cs
lret
loope
aas
or
mov
jb
xor
shll
mov
sub
data16
repnz
fs
aad
adc
mov
sarl
shl
mov
jg
ss
dec
hlt
add
and
test
test
mov
popa
data16
enter
in
loopne
pushf
clc
in
adc
inc
popf
stc
cmp
inc
mov
pop
inc
call
roll
call
gs
cmpsb
mov
lret
add
rolb
in
outsl
adc
lahf
loop
loop
inc
shlb
push
cmp
lret
ss
add
cltd
in
pop
mov
xchg
movsb
lret
and
push
dec
in
inc
and
lds
push
movsb
sub
sbbl
xor
hlt
sahf
lods
sub
xchg
fistps
dec
arpl
push
nop
mov
add
out
lock
test
pop
loop
jg
jecxz
mov
jl
testb
push
push
sbb
cmp
bound
mov
enter
mov
test
sbbl
adc
pop
adc
cld
adc
insb
xchg
push
pop
outsl
xchg
repnz
sub
mov
sbb
mov
ror
out
mov
mov
cmp
clc
sbb
scas
les
jb
fldl
js
push
ror
xchg
dec
mov
cld
nop
push
and
rcll
stos
vmovaps
xor
cmp
fs
gs
adc
lret
out
fistps
inc
push
jne
dec
xor
clc
pop
xor
arpl
mov
cmpsb
push
shlb
nop
cwtl
out
mov
cmp
std
xchg
or
daa
fildl
roll
js
call
mov
sub
lahf
lods
int
mov
mov
lcall
test
dec
stc
call
cmpsl
rolb
or
inc
fcmovu
jnp
push
fsubs
dec
lds
lret
negl
cmp
in
and
jecxz
sbb
push
test
loopne
mov
cli
mov
enter
subb
jl
pop
popa
popa
push
pushf
fisttpl
dec
mov
ja
pop
inc
xchg
xchg
jae
iret
mov
imul
push
nop
sbb
push
dec
ljmp
dec
outsb
mov
xor
xchg
xor
jnp
cmp
xor
and
push
xchg
jb
or
or
inc
xchg
inc
movb
adc
adc
ret
loope
push
mov
jg
aad
nop
jge
push
lcall
into
add
xchg
mov
and
pushf
cmp
lock
ss
fwait
inc
push
inc
adc
sbb
movsb
xor
cs
push
add
bswap
std
cmp
mov
or
andb
dec
sti
sar
jns
gs
jno
je
mov
sub
mov
push
jae
mov
adc
inc
popa
lods
lcall
pop
jb
jg
cs
ljmp
ljmp
int
sbb
out
stos
out
popf
cwtl
cmp
enter
addl
das
outsl
or
push
mov
and
popf
aam
incb
popf
shr
or
repnz
test
dec
pop
nop
dec
and
pop
movsb
push
insb
scas
mov
xor
mov
xchg
insl
popf
xchg
sub
add
cltd
daa
sub
popa
sub
pop
adc
or
scas
lret
scas
dec
pusha
imul
pusha
fdivrl
testl
push
fwait
call
dec
ret
sub
xor
inc
je
sbb
pop
das
push
jle
push
xchg
stc
fs
in
xchg
mov
shrl
test
into
ret
out
sub
out
int
test
fmull
ficoml
xchg
dec
xor
xchg
imul
cmp
loope
mov
ret
mov
fcoms
jmp
pop
jl
mov
mov
in
pop
inc
in
inc
lret
sbb
mov
into
mov
cli
pop
out
push
testl
ret
inc
dec
dec
dec
jle
out
push
call
shlb
jno
xchg
jg
enter
xor
movsb
sub
cmp
les
das
jecxz
cmc
pop
pusha
pop
je
popa
jae
movsl
adc
mov
jp
cmpl
dec
in
vmwrite
pop
andb
adc
push
pop
in
xchg
lock
popf
sbb
fistl
dec
mov
cmpsl
xor
mov
and
outsl
mov
adc
fiaddl
aaa
daa
pop
mov
sub
pop
dec
testl
push
cmc
mov
std
push
and
and
ja
sbb
jle
jns
sub
popf
xor
add
push
cli
mov
add
mov
inc
sub
sahf
jb
ret
pushw
fists
pop
cmp
mov
mov
fs
out
push
pop
shrl
popf
std
out
jge
dec
arpl
inc
cmpsb
jmp
mov
mov
xchg
mov
stos
sbb
jns
arpl
add
add
add
xchg
add
inc
xchg
xchg
push
xor
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
loopne
mov
add
xchg
lahf
