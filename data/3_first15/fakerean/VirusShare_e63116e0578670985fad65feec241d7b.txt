sbb
add
mov
xchg
mov
cld
or
movsl
adc
lahf
decl
and
js
sbb
inc
dec
fildl
lock
clc
or
mov
bound
in
in
test
adc
in
inc
pop
push
xor
enter
mov
mov
or
shll
mov
push
pop
cli
sbb
lock
shlb
pop
and
test
imul
jl
cmc
imul
test
inc
pop
inc
in
dec
mov
push
mov
jge
inc
subl
push
xchg
scas
repz
cmp
mov
xchg
inc
sbb
bound
add
enter
mov
nop
fisttpl
fiadds
dec
push
mov
xlat
or
movsl
in
fsub
popa
stos
or
pop
adc
pop
dec
call
daa
gs
and
lahf
scas
cmp
pop
pop
cmp
pusha
inc
addr16
shlb
dec
mov
xchg
cmp
out
mov
adc
mov
lcall
xchg
dec
mov
mov
mov
clc
ret
mov
fsubrs
xchg
lcall
dec
jecxz
test
mov
imul
mov
mov
scas
push
jge
sbb
mov
xor
jl
fwait
or
jg
ja
jmp
dec
scas
sti
dec
pop
sbb
leave
js
shl
push
loopne
xor
insb
mov
andb
decl
pop
imul
xchg
xchg
adc
add
test
in
mov
mov
ficomps
out
imul
push
push
dec
dec
sub
cld
inc
cwtl
jle
push
push
mov
inc
dec
xchg
adc
pop
mov
adc
aad
xchg
cmp
es
jg
ljmp
cld
cld
mov
jns
push
inc
call
daa
xchg
shl
jge
into
outsb
add
mov
out
cmp
int3
mov
jns
inc
or
mov
push
mov
cli
cmovnp
and
sbb
stos
xor
pop
std
push
cwtl
bound
dec
iret
xor
dec
mov
mov
mov
mov
cmp
in
and
add
cmc
sti
mov
adc
adcb
sub
mov
ja
xorb
sub
hlt
add
rolb
jl
out
and
mov
mov
mov
mov
push
aas
ds
adc
lret
sub
dec
inc
repz
push
mov
iret
pop
in
add
sbb
jne
cwtl
sbb
cmp
jnp
jno
mov
jns
mov
inc
inc
lock
dec
leave
add
jno
into
aaa
cmp
dec
and
or
stos
insb
jg
xor
cmp
push
je
xor
sbb
mov
shlb
cmc
mov
inc
fsubs
add
test
sbb
sti
es
or
and
sbb
mov
xchg
cmp
jns
into
mov
sbb
push
out
call
xor
fbld
loop
adc
stos
imul
pop
repz
scas
jp
mov
jge
shll
std
dec
cmc
and
xchg
aaa
pop
xchg
or
rorb
add
out
mov
mov
leave
shll
hlt
rcl
mov
sub
dec
mov
fiadds
test
push
fwait
pop
cli
pusha
movb
xlat
pop
fdivrl
subb
lcall
test
xchg
xchg
sub
je
pop
orb
in
cltd
sbb
in
lea
cmc
sub
pop
test
pop
dec
mov
jl,pt
pop
pop
push
loopne
sub
xchg
pop
sbb
mov
insl
out
addr16
mov
int3
out
movsl
inc
dec
std
stc
cmc
mulb
ds
iret
mov
dec
pop
popa
adc
jmp
jg
and
pop
cmpsl
adc
jbe
xchg
inc
lret
mov
lods
loopne
aam
es
daa
cwtl
jne
aam
je
into
testl
push
xchg
rol
imul
sbb
ficompl
or
jmp
sbb
jno
repnz
xchg
cmp
cmpb
pop
shll
cmp
dec
jmp
test
jno
jbe
out
or
pop
call
cli
int
adc
arpl
lcall
xlat
inc
adc
ret
sbb
xchg
shrl
adc
or
xchg
movsl
rclb
pop
or
jmp
and
aad
add
mov
dec
fisubrs
xlat
sub
sbb
and
jbe
push
int
pop
jno
mov
outsb
lock
inc
mov
mov
push
ret
scas
fcompl
outsb
mov
stos
mov
bound
sti
and
xchg
loop
adc
cwtl
lea
push
cmp
mov
div
test
idivl
ja
mov
inc
jno
sub
pop
frndint
inc
cltd
and
mov
imul
fwait
dec
xchg
or
pop
inc
sahf
roll
push
shrl
int3
test
gs
jb
sbb
jle
xor
mov
jno
negb
mov
test
movntps
lods
pop
outsl
shrl
add
jno
push
lea
int
pop
repz
jns
rolb
loope
and
fdivrs
int3
cmp
cmp
jne
mov
dec
sbb
or
dec
mov
and
adcl
daa
data16
xor
ds
ficoml
aam
sti
das
loop
mov
notl
fwait
out
xor
es
lock
subl
fcoms
fldcw
aam
sbb
pusha
pop
inc
push
fucom
mov
insb
or
mov
rcrb
add
cmpsb
push
adc
testl
mov
pusha
dec
ret
mov
rolb
push
push
adc
xchg
ds
mov
dec
push
mov
cmp
or
inc
jae
mov
repz
daa
dec
dec
mov
cs
call
add
lret
shll
mov
imul
mov
and
mov
mov
loop
aaa
dec
dec
cmp
iret
pop
mov
popa
push
dec
push
or
dec
in
cmp
fs
xor
lods
xor
cmpsl
in
shrb
cmp
std
shll
int
or
sub
mov
mov
popf
cmp
das
mov
cmpsl
into
or
daa
jb
jp
mov
jns
in
jle
push
xchg
pushf
rcrb
imul
enter
hlt
fimull
xor
pop
outsb
sub
or
mov
jno
lret
clc
add
adcl
movsb
jns
aad
pop
inc
adc
adc
hlt
pop
movsl
or
dec
ret
fs
and
fsts
sub
mov
cmp
jnp
adc
jnp
cwtl
adc
sahf
mov
jle
fmuls
sbb
push
jl
stos
and
and
xor
loop
imul
pusha
and
pop
clc
push
xor
cmp
in
aas
sbb
test
arpl
adc
dec
call
mov
inc
int3
xchg
fsubrs
add
aad
stos
popa
mov
lret
cmp
inc
cmp
mov
pop
dec
cmp
movsl
iret
lea
pop
pop
clc
fimuls
sahf
mov
adc
or
xchg
cltd
mov
push
in
imul
int3
mov
clc
sti
cld
push
sarb
pop
test
icebp
je
sub
fdivrs
je
in
cwtl
mov
or
mov
xchg
andl
rcrb
push
pop
xchg
aam
aas
inc
pop
jnp
inc
clc
pop
inc
subb
cmpb
lcall
dec
lods
ds
sbb
aas
ret
sub
lahf
in
push
enter
jo
pop
cmp
mov
stos
sbb
cs
mov
lods
mov
insl
push
fcompl
dec
cmp
icebp
das
mov
pop
inc
data16
jno
or
jns
cli
sub
and
xor
das
dec
and
mov
jnp
xchg
imull
aam
mov
adc
iret
mov
cmp
add
sbb
ss
jg
pop
insl
and
stc
ficoms
inc
std
dec
push
sub
cld
add
testb
lret
sub
nop
mov
adc
push
enter
cltd
aas
fwait
jno
repnz
jecxz
pushf
daa
aaa
mov
arpl
push
loopne
mov
fimull
shl
cmp
push
jp
and
imulb
mov
in
addr16
and
fucomp
enter
cwtl
popa
or
inc
adc
mov
cmp
lahf
out
sbb
sarb
hlt
mov
pushf
ss
adc
sbb
into
fbstp
bnd
jns
aam
xchg
lcall
mov
xor
xchg
aaa
lret
test
sub
movl
arpl
mov
jmp
sti
add
cmp
mov
shrl
mov
sub
decl
sbb
inc
sbb
hlt
or
pop
aaa
insb
xor
test
xlat
jno
fwait
xchg
push
daa
add
cmp
xor
mov
pop
mov
fisttpll
and
mov
xchg
or
mov
adc
inc
outsb
pusha
mov
dec
les
out
mov
daa
loop
icebp
bound
push
mov
in
cmp
sub
mov
dec
rcrl
push
xchg
pslld
imul
pop
in
xchg
bnd
mov
xchg
push
daa
inc
out
mul
repnz
daa
out
scas
in
in
addr16
push
test
addb
xor
mov
inc
fs
mov
push
orb
xchg
scas
push
fidivl
stos
or
cwtl
loope
mov
mov
pop
hlt
sub
or
test
test
and
ret
and
cli
jg
pushf
call
xchg
push
xor
push
inc
into
movsb
mov
and
test
add
icebp
in
fmull
out
mov
cmpsl
icebp
xchg
lea
sub
mov
push
dec
inc
inc
xchg
push
gs
mov
pop
pop
or
mov
pop
xor
shufps
push
sbb
push
sbb
shlb
xorl
rcrl
cli
popf
pusha
xlat
dec
xor
ss
sbb
and
pop
push
imul
imul
sti
bound
sbb
aad
pop
in
cmp
movsb
fldt
mov
mov
cmpsl
cwtl
or
xor
xchg
lds
pop
push
arpl
pop
nop
mov
sbb
fnstenv
xlat
jge
push
mov
fucomip
ret
xor
les
in
scas
sbbb
pop
int
mov
push
jmp
test
js
jne
addr16
pop
bound
add
clc
xor
gs
outsb
push
sub
int3
mov
inc
cmpsb
inc
adc
push
mov
int
lret
std
mov
dec
aaa
sbb
dec
movsl
sbb
fisttps
adc
add
lahf
inc
fidivrs
or
movsb
or
jne
xor
fs
ret
dec
mov
cmp
imul
push
pop
add
push
hlt
adc
sub
and
mov
mov
clc
add
jae
pop
sub
imul
out
fidivl
lcall
dec
inc
in
mov
jmp
mov
es
outsl
adc
inc
sbb
out
jbe
push
sbb
lret
ret
je
push
popf
mov
xlat
fbld
inc
add
xor
inc
add
sbb
mov
pop
das
cld
jp
cld
mov
push
xchg
popf
clc
je
xor
sahf
mov
mov
pop
or
addl
jbe
cmp
jne
fdivrs
shl
adc
adc
xchg
icebp
repnz
loope
sti
test
jecxz
and
and
jo
in
sub
sbb
out
mov
pop
cmpsb
inc
jg
je
dec
dec
lret
shrb
shl
hlt
ret
sub
xchg
inc
dec
jecxz
xlat
sub
daa
daa
xchg
ret
testb
xchg
cmp
js
and
test
fbld
imul
sub
cwtl
push
mov
sub
sbb
fwait
lods
pop
pop
jbe
mov
sub
jno
stos
imul
pop
mov
ss
imul
xchg
jb
inc
dec
data16
fwait
enter
add
mov
fisttps
add
jecxz
add
mov
xchg
into
imul
pop
mov
cmp
ljmp
mov
shl
ss
insb
mov
mov
and
leave
jb
lret
sub
scas
stos
push
pop
and
neg
add
pop
into
push
push
pop
inc
bnd
movsl
sub
jnp
cmp
xor
inc
cli
adc
jbe
out
mov
aad
sub
cmp
int3
add
iret
or
pushf
add
or
js
inc
xor
inc
movsb
dec
out
out
daa
cli
mov
fcoms
cs
push
adc
call
mov
push
or
sbb
mov
test
add
or
stc
xor
dec
pusha
daa
xchg
adc
mov
fcoml
cmc
iret
into
pop
ds
push
sar
mov
shll
mov
jae
sarb
into
cs
or
jno
inc
sbbl
int3
xchg
xor
out
inc
jns
cmp
ficoml
adc
out
roll
mov
cmp
push
cmp
dec
jp
jmp
stos
icebp
imul
dec
daa
push
cli
xchg
or
sub
bound
movsl
inc
dec
repnz
xor
call
xor
roll
loope
push
cmc
pop
or
or
pmaxub
aaa
shrb
neg
mov
adc
push
rcrl
addr16
inc
jbe
fsubs
call
dec
stc
mov
pop
and
adc
stc
jno
and
inc
mov
sub
mov
mov
pop
lahf
and
popf
jp
sub
mov
jne
mov
and
pop
ja
push
in
stc
scas
xchg
fsubl
mov
cmp
jne
adc
sti
jp
inc
in
cs
ljmp
inc
push
or
and
lcall
sahf
nop
add
decb
jne
dec
je
movsl
outsl
leave
pop
push
mov
test
adc
imul
les
jge
lea
out
push
xor
cld
xchg
push
lcall
and
or
inc
pop
leave
dec
loope
pushf
push
iret
sub
imul
repz
pop
xchg
pusha
pop
popf
mov
and
sub
inc
fsubrs
push
lret
mov
add
fisubrl
or
mov
lahf
push
ficompl
pop
mov
and
aas
dec
cmp
pop
push
inc
test
lods
addl
sbb
inc
mov
cs
push
imul
aam
popf
pop
popf
sbb
shrl
and
pop
mov
xchg
lahf
stc
xor
add
adc
xor
cs
cmp
test
mov
sub
sbbl
sub
dec
jbe
cld
or
stos
sbb
pop
fidivs
sahf
push
add
pop
leave
lret
add
mov
cltd
jl
xchg
out
push
int3
stos
loope
flds
xlat
sub
xchg
sbb
sbb
or
jae
fcomp
cmp
loop
jp
lea
jbe
les
cmp
hlt
imul
inc
jnp
dec
mov
sub
fbld
loope
pop
out
int
pop
pop
dec
in
shlb
cli
dec
xchg
jae
shl
xor
ficoml
les
adc
xor
xchg
cmp
adc
inc
fst
and
mov
cwtl
iret
loopne
sahf
lret
mov
mov
xchg
pop
sub
mov
lcall
cld
lret
ljmp
insl
dec
cmpsb
cmp
les
push
add
add
mov
scas
mov
push
enter
jo
jae
mov
shr
subb
push
push
cmp
shrb
lret
push
jo
lods
push
aas
daa
imul
das
add
and
in
jge
or
rorb
cltd
fmuls
mov
jg
incl
push
dec
mov
inc
xchg
xor
mov
daa
push
sbb
push
add
mov
jo
iret
push
pop
mov
mov
pushf
adc
adc
mov
dec
sahf
and
icebp
jle
xlat
push
imul
jl
mov
lret
aas
and
add
call
jp
mov
js
and
into
adc
loope
test
lea
push
pusha
lret
mov
cmp
shrb
stos
dec
cmp
in
enter
dec
lock
sbb
cmp
mov
and
push
sbb
rep
pushf
adc
dec
lret
pop
push
inc
pop
cwtl
movzwl
xchg
stos
cmovns
scas
cmc
and
xchg
mov
sub
or
mov
dec
add
repz
mov
in
xor
pusha
int3
rorl
xor
jp
mov
mov
xlat
fs
nop
ficoml
lock
mov
imul
mov
repz
push
enter
or
ret
testl
push
xchg
test
out
mov
mov
movzwl
pop
aam
jnp
data16
cmpsl
dec
cli
sbb
icebp
or
or
in
imul
pop
sbb
mov
out
mov
je
cmpsb
jecxz
mov
repnz
mov
xchg
imul
repnz
in
je
repz
jnp
or
insl
xchg
mov
leave
mov
and
dec
jns
fnstsw
and
pop
cli
push
test
jge
sub
jne
aas
mov
das
andb
xchg
push
or
popf
adc
pop
inc
rcrb
mov
je
xchg
mov
sub
push
test
icebp
pop
repz
int
ffreep
test
cmp
out
pop
dec
jno
or
in
mov
push
ror
jno
adc
test
popf
fsubr
fs
mov
jns
xchg
adc
lret
cmp
dec
outsb
or
imul
cmp
sbbl
test
xor
in
pop
sbb
fcmovu
lret
or
sbb
pop
test
add
jns
xor
pop
xchg
cmc
dec
insb
cltd
leave
adc
lret
and
ficoms
movsl
xchg
pop
adc
int
mov
jne
roll
shlb
das
gs
pop
xor
ljmp
sub
dec
dec
push
cmp
rcl
shll
cmovbe
jle
sbb
lock
arpl
sbbl
stos
push
test
mov
fldenv
fs
in
int
lret
mov
les
xchg
scas
pop
je
sub
fdivs
bound
stos
lods
cmc
hlt
sub
fidivs
and
push
or
test
lea
stos
nop
dec
ret
mov
mov
mov
add
test
pop
jae
xchg
enter
ja
cs
push
jp
mov
test
jle
adc
jge
lock
mov
call
push
aaa
sub
sub
das
pop
cs
cmp
xchg
adc
push
jge
icebp
cmp
cmpsl
pop
xlat
dec
fwait
out
add
and
enter
push
or
js
fbstp
xor
cwtl
sahf
imul
fs
push
jbe
or
pop
push
pop
inc
imul
int
gs
mov
pusha
and
xchg
fisttpll
lods
push
cmp
sub
cmp
xchg
and
in
daa
cld
ret
loopne
in
clc
or
push
xchg
movb
lcall
fwait
loope
addr16
ficoms
call
ja
sub
sub
pop
fmull
adc
adc
data16
call
xor
outsl
mov
cmpl
fs
jno
push
roll
movb
test
int
aaa
cmp
cmp
jge
imulb
and
and
aam
outsb
jns
push
stos
dec
or
or
in
mov
orb
add
cmp
adc
in
mov
xor
pop
sub
movsl
and
add
sbb
adc
inc
inc
add
and
in
mov
shll
inc
lcall
pop
xchg
insb
inc
dec
xchg
std
jle
xor
dec
or
and
cli
pop
cmpsl
jne
adc
bound
stos
lahf
rolb
sub
xchg
sbb
sbb
jns
lcall
push
dec
mov
xchg
xor
addr16
cmp
test
lret
pop
jmp
push
jno
and
lock
sub
es
test
lods
jne
pushf
or
in
push
arpl
movl
mov
mov
mov
or
movhps
mov
das
or
push
mov
fiaddl
js
in
inc
cmpsl
xchg
cmp
test
iret
jnp
pop
data16
pop
int
adc
cmpsb
and
xchg
sbb
lret
outsl
ficomps
repz
mov
into
arpl
mov
arpl
cld
push
jg
xor
sti
xchg
mov
loop
lods
mov
cmp
add
inc
push
pop
jmp
clc
incb
push
test
add
jns
pop
repnz
or
cmpsl
outsl
popf
mov
mov
fisttps
push
ja
mov
sti
xor
ret
fcomi
outsb
andl
xor
daa
jae
sbb
mov
jae
insb
cmp
fldenv
xor
cmp
fdivrs
push
icebp
popa
pop
dec
movsl
push
loop
cwtl
sub
add
out
jns
dec
mov
dec
rclb
aaa
pop
dec
sar
push
popf
inc
lods
bound
push
jp
xlat
or
insb
sbb
add
xor
mov
add
mov
int
xor
dec
adc
cmpsl
mov
jl
pop
icebp
test
mov
cld
lods
mov
call
je
leave
and
scas
cmp
gs
in
jns
lret
lret
fwait
les
add
sub
xor
adc
dec
sahf
mov
push
cmpb
sub
inc
pop
pop
fadds
rep
fildl
mov
in
shlb
inc
gs
std
mov
push
push
add
ljmp
lds
adc
in
xchg
pop
imulb
lock
popa
cmpsb
pushf
scas
push
out
jno
xchg
aad
push
jb
add
adc
testl
add
jo
inc
jle
and
mov
popf
push
mov
mov
movsb
or
hlt
mov
xchg
incl
jno
repnz
or
mov
mov
xchg
in
and
insl
jne
shr
mov
adc
in
mov
das
jge
inc
push
xchg
jnp
and
sub
sarl
sbb
push
dec
bound
xorb
fisttpl
in
xchg
mov
movsb
shr
je
dec
int
int3
inc
cmp
rcll
sub
fcoml
mov
jl
out
imul
mov
das
fstp
enter
mov
rep
and
mov
xor
stos
xchg
insb
in
cli
out
and
mov
cmpsb
pop
repnz
xchg
or
in
pop
xchg
add
aas
push
sbb
pop
rcl
cmp
jbe
add
jmp
in
mov
fwait
jp
jb
lret
push
xchg
inc
dec
mov
cmp
inc
ret
push
pop
xlat
mov
mov
pop
mov
pop
sti
repz
sbb
fdivs
mov
movsl
pop
mov
pop
repz
or
mov
int3
data16
clc
xchg
movsl
xchg
sub
je
cltd
mov
inc
push
and
pop
mov
rep
mov
sbb
mov
or
dec
pop
dec
gs
dec
fcoml
pop
add
outsb
loop
cmp
pop
xchg
dec
rcrb
jnp
or
dec
cmpsl
inc
add
mov
inc
fwait
cltd
fsubrs
sbb
lds
cmp
icebp
mov
mov
xchg
mov
dec
fdiv
jbe
pop
mov
je
ss
mov
mov
ja
or
popf
shr
sbb
pop
adcb
mov
mov
xchg
and
scas
cs
imul
xchg
ljmp
jbe
push
fildl
xchg
test
jnp
shll
mov
loope
ffreep
adc
ja
mov
imul
mov
iret
ja
cmpsb
cmp
shr
xchg
pop
push
cmpsl
cmpsl
insb
ljmp
mov
aad
mov
lahf
pop
adc
les
fwait
cs
push
cmp
rcr
cmp
jg
loop
sbb
dec
iret
sub
lret
inc
outsl
and
mov
adc
mov
adc
mov
int3
pop
shl
mov
iret
mov
mov
jge
loopne
sbb
repz
cmp
out
nop
inc
mov
mov
or
fisubs
cmpsl
iret
cmc
cmp
sub
rolb
add
outsb
testb
jnp
fs
lret
jl
sbb
adcl
inc
mov
pop
adc
out
enter
push
enter
dec
lret
xor
cmpsb
xor
and
test
or
lret
push
das
lcallw
mov
cmp
aaa
loope
out
aaa
psubusb
loop
outsb
and
andb
and
jl
mov
or
in
mov
adcl
popa
js
mov
mov
dec
scas
out
sti
push
xchg
mov
add
dec
sub
mov
fstpt
sub
outsl
push
outsl
mov
pop
ret
push
lods
out
lahf
pop
xor
xchg
cmp
sbb
inc
xchg
sub
adc
or
mov
adc
jne
popf
movsl
mov
out
xchg
ljmp
movsl
adc
fildll
xchg
data16
dec
sahf
mov
sub
stc
loope
mov
mov
xchg
nop
and
push
dec
jns
fs
roll
adc
xchg
xor
dec
in
shll
into
jbe
sbb
mov
cmpsb
roll
and
cltd
cmp
cmp
and
or
decb
sbb
fidivrl
xor
loop
pop
cs
fnsave
adc
or
sti
repz
insl
ss
mov
repnz
outsb
divb
fwait
ss
inc
xchg
cmp
jnp
xor
jle
mov
lock
rol
insl
mov
or
insb
dec
sarb
mov
push
adc
jl
jne
clc
fistpl
testb
and
adc
mov
or
lcall
mov
es
cmp
fs
add
enter
aaa
lock
xchg
imul
lods
repnz
and
pop
inc
adc
adc
jmp
rcrl
dec
cmp
cmpsl
adc
rcl
xchg
outsb
fs
cmc
mov
loop
jl
jge
inc
clc
xchg
in
mov
pop
out
arpl
dec
sub
in
out
lret
push
dec
popf
nop
cld
mov
xchg
cmp
jge
jg
mov
fs
sarl
andb
mov
push
dec
sub
shrb
mov
inc
mov
add
inc
lea
adc
mov
sarl
stos
mov
fxtract
je
or
mov
int3
pop
pop
xchg
cmp
xor
fadds
mov
decl
mov
pop
jne
sub
jns
scas
sub
repz
out
outsl
xor
lods
je
push
icebp
jecxz
or
sbb
or
jno
aas
in
and
sbb
loope
testl
cmp
orb
leave
mov
push
in
xlat
in
jns
movsl
push
hlt
adc
lods
xchg
sub
scas
fidivrs
sub
sar
lret
xchg
sub
outsl
or
or
adc
ja
cmpsl
adc
divl
jo
xor
lods
cmp
insb
fists
xchg
jp
test
pop
jg
sbb
jle
pop
push
jne
add
mov
sbb
cmp
or
adc
mov
incb
subb
cmp
and
mov
jge
lret
popa
or
push
push
decb
cld
fs
xor
shl
int
inc
std
or
xchg
insl
outsl
add
shlb
in
jbe
inc
pop
push
cltd
scas
mov
lods
mov
and
movsb
into
xlat
push
std
jecxz
mov
sub
lea
adc
mov
lds
or
imull
pop
lods
pop
test
mov
sbb
adc
cmp
mov
loop
mov
jl
test
cmp
dec
leave
jle
fwait
xchg
push
mov
mov
jnp
pop
cmp
xchg
mov
fwait
addr16
repnz
adc
cmp
int
jae
push
xchg
fstpl
lret
inc
or
xchg
out
push
and
std
sar
mov
fwait
arpl
outsb
mov
int
mov
and
sub
dec
int3
jne
jecxz
fmul
sub
and
mov
dec
je
xor
mov
je
push
adc
int
or
or
aaa
push
nop
ret
sub
es
aad
pop
dec
addr16
jle
divl
test
nop
inc
or
daa
jmp
xor
cmp
xor
clc
ss
movsl
aaa
and
inc
pop
jge
fsubs
test
push
inc
jg
aas
cs
les
add
add
cmpsb
test
iret
sub
sahf
and
lret
fimuls
mov
movsb
and
pop
sahf
lcall
xor
pop
and
cld
xchg
fistpl
fisttpl
pusha
scas
push
adc
jmp
fyl2xp1
mov
es
in
xorl
mov
inc
xor
mov
cmp
sub
lret
in
cli
push
xorb
lahf
xor
jb
push
rclb
xchg
iret
inc
push
icebp
out
repnz
adc
movsb
lea
xchg
out
outsb
push
and
shlb
fmul
aam
xor
in
ret
out
es
mov
mov
add
iret
fldt
enter
lods
and
addr16
dec
add
mov
inc
repnz
add
pop
jmp
jl
jb
mov
xchg
and
push
mov
xchg
insb
mov
ss
xchg
std
arpl
sbb
lret
ret
scas
cmovb
inc
pop
xor
jno
mov
notl
adc
sbb
rcrl
inc
dec
lea
mov
je
push
inc
dec
fldenv
sahf
pusha
cmp
js
and
and
je
inc
pop
jp
mov
jo
testb
and
stos
sti
lcall
adc
adc
call
movsl
dec
sarb
nop
push
clc
sbb
std
mov
test
and
sbb
int
cmp
cmpsl
mov
int3
mov
insl
ljmp
cld
subb
pop
sub
jmp
or
jecxz
insl
jne
hlt
sti
cld
mov
cmp
popf
lahf
es
mov
pusha
enter
inc
pop
aas
cmpsl
jg
pop
xor
stos
mov
pop
and
jecxz
push
scas
mov
call
push
cs
jl
paddd
xor
xor
cmp
adc
push
sti
xchg
gs
inc
je
hlt
gs
mov
mov
xor
stos
test
xor
mov
adc
std
pop
mov
add
xor
lahf
in
inc
lret
or
pop
dec
xchg
scas
imul
push
and
push
mov
or
addl
in
pushf
push
repnz
jb
xor
div
outsb
cltd
xor
subb
repz
mov
sub
push
cli
les
sbb
and
xor
loopne
inc
rol
cs
lret
enter
adc
inc
out
cmp
popf
cmpb
push
inc
pop
sbb
pop
outsb
lea
pop
arpl
mov
dec
lcall
push
out
push
aam
jbe
jbe
jne
out
shrb
mov
ss
xor
stc
mov
pop
push
aam
std
dec
add
stos
imul
mov
jb
stc
xchg
shlb
mov
lret
loop
xchg
add
inc
arpl
or
mov
inc
insb
jnp
mov
cli
jg
add
mov
sub
sbb
add
mov
push
mov
sbb
pop
out
mov
ds
push
pop
mov
pushf
push
inc
mov
cld
dec
dec
adcl
xor
stc
mov
mov
add
loopne
mov
shl
arpl
push
sbb
jl
les
out
mov
mov
jle
dec
mov
andb
push
push
push
mov
pop
jo
lods
and
adc
test
gs
pushf
xchg
cmpsb
add
outsl
mov
inc
sub
jo
xchg
inc
pop
hlt
dec
fldl
inc
roll
lret
je
pop
cmp
or
dec
inc
repnz
jl
mov
movsl
leave
das
jns
or
sbb
daa
ds
mov
dec
sahf
loope
inc
out
xor
xchg
iret
and
add
jns
pop
xlat
push
ret
fstp
js
test
inc
adc
add
sbb
cmp
mov
dec
mov
xchg
jb
popa
fsubrl
xchg
and
mov
and
fists
imul
mov
and
push
inc
jge
cmp
arpl
and
in
xor
std
leave
push
popa
sbb
shlb
mov
int3
and
sbb
mov
cltd
or
out
push
sub
dec
sub
adc
popa
xchg
pusha
and
push
mov
ds
add
jge
lret
pop
mov
sbb
cmc
xchg
sub
cmp
inc
stos
sbb
in
jae
adc
cmp
sub
fiadds
hlt
notl
add
lahf
mov
mov
xchg
and
orl
fcomps
jmp
mov
mov
mov
xor
rcll
test
jns
repnz
outsb
sbb
imul
and
clc
xor
cmp
xchg
push
sub
pop
mov
jg
js
mov
push
insb
cmp
inc
aas
daa
pop
or
scas
iret
cs
mov
sti
jg
or
xchg
cmpsl
xor
adc
ljmp
inc
in
and
insb
gs
out
cltd
inc
repz
fldcw
sbb
or
lods
repnz
andl
sbb
mov
cmc
push
mov
mov
faddl
idivl
sbb
in
push
adc
lea
xchg
lahf
sbb
pop
push
iret
add
int3
clc
and
movsb
lahf
fwait
ja
pop
xchg
cltd
addr16
pushf
and
mov
inc
fnstenv
dec
adc
push
loopne
and
jns
scas
sub
pop
push
push
dec
enter
add
outsl
nop
ja
mov
arpl
mov
mov
mov
mov
dec
out
cmp
gs
leave
lds
cltd
mov
lcall
jmp
push
sti
scas
jp
pop
xchg
xchg
ja
cmp
pop
jmp
cltd
xchg
mov
jo
sbb
jecxz
pop
mov
mov
pop
and
cmp
lret
repz
mov
jge
dec
lret
inc
sub
adc
data16
cmp
insb
push
sub
aas
sbb
leave
das
mov
stos
cmpb
lock
dec
addb
cmp
mov
lods
jle
cmpsl
sub
fs
mov
jno
add
cli
add
movsl
inc
call
xchg
stc
push
icebp
mov
shlb
xor
inc
fsubl
xor
stos
or
pop
ret
es
imul
test
lock
inc
pop
adc
push
pop
and
outsb
push
push
lds
data16
ljmp
push
inc
addr16
and
scas
cmp
mov
icebp
mov
xchg
or
repz
lods
into
movsb
out
sub
mov
dec
in
shll
subl
loope
mov
leave
inc
adc
push
and
loopne
mov
inc
mov
inc
push
imul
and
std
and
xor
inc
ljmp
aam
mov
sbb
test
and
adc
pop
cmp
mov
push
cmc
orps
divl
push
out
push
lods
inc
mov
push
dec
inc
inc
in
je
mov
push
cmp
xchg
or
int3
add
sbb
xlat
jne
dec
push
lods
iret
mov
imul
cwtl
sub
sahf
popf
mov
cwtl
repz
jmp
arpl
pusha
inc
lds
sbb
cli
fadd
ret
fchs
pop
dec
mov
pop
sahf
mov
rol
cmp
mov
or
sbb
addl
pop
and
iret
add
test
stos
inc
sub
sub
into
lcall
pop
adc
fs
cmp
inc
movsl
fwait
out
inc
cmp
jae
pop
xchg
inc
xor
dec
jge
or
cmp
mov
test
fnsave
xor
sub
pop
push
dec
sbb
adcb
sub
sahf
jns
mov
sub
sub
arpl
dec
pop
jbe
lock
out
flds
adc
xlat
pop
sub
adc
loop
hlt
cmc
xor
add
jno
fidivl
sub
xchg
sbb
dec
ja
push
int
testl
fimuls
adc
mov
xlat
test
lahf
insb
push
sbb
idivl
cs
push
movb
cs
or
icebp
mov
dec
fxch
iret
sbb
dec
test
push
mov
es
pop
dec
jle
sbb
xchg
insb
or
adc
xor
sbb
aad
fs
popa
out
pop
adc
push
shrb
int3
mov
and
push
ss
and
mov
sub
cmpsb
cmp
push
pop
hlt
mov
movsl
rorb
pushf
or
mov
into
cmp
mov
dec
jne
shrb
cmp
push
sbb
je
stos
int
jmp
mov
push
xor
lds
push
movsl
mov
lods
sbb
mov
add
cmp
shll
inc
faddp
push
mov
lret
dec
xchg
xchg
mov
daa
imul
lods
pop
sub
mov
mov
movb
mov
xchg
or
lret
jge
mov
xchg
lds
loopne
je
ljmp
gs
mov
sti
inc
aad
dec
add
ljmp
mov
in
push
xchg
sahf
jmp
push
push
xchg
push
loop
adc
adc
nop
pop
lea
fistps
test
lea
stos
xchg
int
jg
shrb
popf
aas
inc
dec
lods
xchg
xlat
cmp
cltd
sbb
pop
aam
mov
jae
dec
mov
daa
insb
cld
inc
test
or
outsb
mov
mov
and
or
sub
xlat
mov
xor
push
mov
dec
adc
popf
movsl
inc
xor
ret
mov
or
les
add
sub
push
movsb
std
add
xchg
shl
ja
dec
aaa
and
add
or
lea
and
sbb
or
cli
pop
loopne
mov
pushf
cmpsb
cmp
ljmp
mov
cltd
push
inc
jp
scas
pusha
or
add
push
xchg
jae
xlat
push
imul
fsts
enter
pushf
sbb
fmulp
imul
in
sub
ret
xchg
and
cli
or
xchg
mov
pop
xor
adc
add
cld
inc
cli
jge
in
sahf
sub
std
into
ljmp
subl
fisttps
jnp
pop
inc
add
cmp
int3
push
pop
cs
arpl
in
std
fsub
ss
push
xor
popa
pop
xor
addl
xor
mov
jo
push
int3
jnp
cld
cmpsb
push
gs
imul
add
icebp
insl
test
and
aas
icebp
xor
mov
loopne
and
aas
mov
aad
dec
pop
add
popf
lods
movsl
loopne
inc
ds
cmc
pop
add
es
out
xchg
addl
ret
idivl
arpl
popf
fcmovu
fwait
adcb
pop
out
xor
lods
outsl
adc
mov
inc
lret
or
pusha
ds
jnp
cltd
xchg
jo
mov
mov
movsl
ret
and
insb
jmp
xchg
bound
xor
mov
jl
mov
sub
loop
mov
testl
int
xchg
cmpsl
mov
mov
movsl
xchg
jnp
mov
loopne
sub
sbb
sbb
in
sub
xchg
push
xor
xor
ja
mov
rcll
rolb
xchg
addr16
sbb
cmpsl
push
sti
pop
xor
scas
test
imul
mov
adc
outsb
repnz
mov
xor
mov
into
aas
lahf
scas
mov
aam
nop
cmc
stos
jae
sbb
inc
into
repz
das
outsb
dec
insl
dec
mov
arpl
cmpsl
xor
dec
lcall
std
xor
pop
imul
xor
insl
je
aas
ja
fwait
or
inc
pop
sti
pusha
pop
arpl
pop
pop
ret
adc
add
cmpsb
fmull
push
mov
test
xchg
out
inc
cld
clc
and
mov
fcmovbe
je
cmp
dec
outsl
adc
ds
sbb
cli
mov
stos
test
or
leave
xor
jns
mov
lahf
sub
fcomps
fbstp
pop
mov
sub
cmp
fisubl
pop
xchg
jnp
push
imul
sti
push
outsl
sub
cmp
out
ret
pop
bnd
mov
mov
test
adc
mov
push
add
pop
clc
ret
pop
push
outsl
fldl
xor
int3
mov
cli
and
or
shl
arpl
mov
mov
xchg
xchg
fwait
sub
out
dec
js
fcompl
jmp
mov
mov
dec
xchg
aaa
pop
fsts
loopne
jo
out
lea
jmp
mov
inc
dec
sbbl
in
int3
jne
pop
stos
mov
scas
daa
je
rolb
xlat
enter
ret
sub
rclb
cs
push
movsl
mov
movsl
test
push
clc
aam
insb
int3
stos
into
js
add
in
nop
or
jns
dec
push
push
dec
mov
and
stos
scas
push
std
ja
dec
mov
xchg
movsb
out
mov
ror
leave
mov
dec
test
jmp
repz
scas
cmp
xor
mov
movsb
js
out
pop
mov
mov
lock
rep
mov
push
and
fstpl
movsb
loopne
dec
and
pushf
wrmsr
mov
dec
pop
scas
adc
fs
daa
inc
mov
imul
mov
dec
inc
cmpb
cmp
ret
cltd
jno
or
mov
icebp
xor
mov
rorl
adc
sbb
daa
inc
insb
jmp
outsb
mov
stc
jge
dec
xchg
sbb
pop
xchg
cltd
xchg
mov
popl
push
pushf
dec
jl
sti
xor
addr16
ss
mov
adc
dec
push
mov
fimull
iret
xor
xor
add
aaa
in
ficoms
push
int
movsb
push
ljmp
or
pop
push
dec
mov
shlb
pop
add
addr16
clc
jo
push
sahf
in
pop
push
ljmp
aaa
cmpsl
mov
test
adc
cmpsl
cmp
lods
jns
icebp
mov
mov
push
xlat
pop
sbb
lds
hlt
frstor
aaa
mov
inc
sbb
dec
pop
or
inc
arpl
bound
or
js
xchg
inc
inc
jmp
or
in
ret
cs
pop
adcl
jns
dec
push
mov
in
fdivr
xor
xchg
insl
push
jl
aas
push
add
lahf
sbb
xchg
push
adc
pop
sbb
add
xor
leave
enter
pop
jl
xor
mov
push
cmpsb
or
and
mov
sbb
sbb
in
pop
add
dec
shrl
dec
jbe
int
mov
inc
jb
loope
mov
daa
xchg
or
roll
inc
pop
mov
xor
xchg
adcl
sbb
or
inc
inc
dec
jmp
popf
jl
andb
ficomps
xor
stos
rcr
mov
mov
fs
popf
cli
das
mov
xchg
stos
push
xor
addl
shlb
shlb
mov
add
dec
xor
adc
push
mov
out
adc
mov
cmpsl
push
lahf
push
fiaddl
xchg
inc
fstpt
loop
add
rorb
repz
pop
mov
test
mov
jle
mov
ds
outsl
cs
jmp
pop
add
push
jmp
or
cld
mov
daa
aad
int
cmpsb
imul
xor
xor
jns
aam
pop
into
inc
arpl
mov
cmpsl
inc
rorl
test
and
int3
dec
rcr
sub
push
inc
mov
mov
enter
pushf
iret
dec
adc
dec
outsb
mov
dec
jo
fsubs
mov
andb
xor
mov
dec
add
test
lret
lret
mov
adc
icebp
mov
cmp
bound
lods
loop
jo
xchg
cmpb
das
hlt
or
lret
push
outsb
aaa
cwtl
insb
cli
jno
fsubl
lret
andl
sti
pop
cmp
xchg
dec
mov
pushf
inc
mov
inc
jae
lods
mov
pop
mov
inc
xchg
aam
dec
iret
sbb
cld
inc
mov
jno
divl
cmp
mov
inc
push
sub
jecxz
aaa
pop
shll
jo
mov
repnz
sbb
stc
cmp
lea
shl
sub
xchg
rorb
xchg
es
les
mov
lock
loope
andl
in
sub
mov
and
mov
popa
dec
out
sub
jle
push
inc
aaa
inc
push
xor
add
lods
sarb
sbb
mov
xchg
je
outsb
shl
xchg
add
mov
je
mov
push
jne
inc
in
addl
mov
mov
lcall
mov
ret
imul
ror
fistl
aam
fucomi
pop
cltd
mov
mov
scas
sbb
pop
rolb
or
cld
mov
sbb
frstor
cmp
daa
std
sti
sbb
stc
pop
sti
mov
bound
les
movsb
push
out
cs
jmp
sti
sub
dec
hlt
cmp
sub
push
push
add
mov
popf
xchg
ljmp
outsl
in
jns
fs
dec
in
mov
xor
clc
rol
iret
bound
mov
stos
sub
xchg
sahf
mov
inc
mov
out
aas
in
xor
push
inc
sbb
jmp
dec
sti
sbb
sti
pop
jo
in
adc
lods
faddl
xor
stc
adc
sti
inc
fwait
outsl
les
insb
pop
pop
cwtl
sbb
clc
jecxz
sub
in
sbb
imul
aaa
outsl
add
test
test
add
and
ret
push
pop
jecxz
jns
stos
inc
rolb
sahf
sub
test
shll
mov
jbe
jb
xchg
iret
adc
mov
insb
mov
scas
cmp
fcmovnbe
adc
lahf
in
test
sahf
mov
cli
inc
rorl
mov
popf
dec
mov
and
lods
out
or
push
notl
inc
fisttpl
jp
sarl
inc
cmpsl
xchg
pop
push
or
ficomps
pop
aaa
cld
mov
mov
xchg
aaa
out
pop
mov
add
pop
test
push
inc
cmp
fstps
sub
ret
xor
mov
int3
cwtl
lods
rol
or
scas
jge
push
out
loop
iret
subl
mov
rcll
arpl
xchg
sub
pop
lahf
push
cltd
inc
or
test
out
leave
pop
xchg
rorl
xchg
sbb
cld
add
fiaddl
or
mov
out
std
jge
in
cld
or
xor
sbb
aam
sbb
outsb
cmpsl
push
cmp
or
lahf
sahf
cmp
adc
lea
add
xchg
mov
roll
jb
fldl
popf
jbe
mov
cmpsb
cmc
fidivs
inc
mov
xor
loop
in
outsb
out
mov
adc
std
xchg
ficoms
lcall
jne
push
push
in
pop
pop
cmpsb
mov
pop
arpl
sti
mov
xor
stos
sti
out
jae
arpl
clc
std
icebp
pop
mov
inc
je
popf
xchg
sub
in
jnp
frstor
jnp
testb
arpl
or
pop
fwait
mov
roll
loopne
adc
in
push
into
popf
fistpll
insb
dec
popa
nop
sub
jne
add
stc
add
or
mov
dec
sub
mov
dec
test
es
mov
cltd
adc
movsb
and
movsb
inc
rclb
mov
jl
cmp
ret
inc
sub
lds
xchg
mov
fistpl
pop
repz
insb
mov
adc
jne
dec
push
and
idivb
into
scas
leave
jb
loop
lret
les
push
xchg
ret
rclb
inc
sti
inc
int
mov
mov
movsl
mov
clc
xchg
fcoml
fdivl
stc
nop
incl
jmp
imul
es
cmpsb
mov
dec
push
jge
mov
or
cltd
aas
fidivs
cs
clc
mov
sahf
xor
mov
int
push
xchg
or
xor
sarb
inc
int
jmp
shlb
test
lret
aaa
jmp
push
cli
adc
jne
fdiv
out
mov
mov
sub
aad
mov
jg
repz
xchg
inc
lcall
adc
lock
push
or
mov
adc
fistps
insl
dec
adcb
sbb
xchg
sbb
cmp
adcb
roll
je
mov
outsb
mov
adc
inc
dec
pop
adc
data16
inc
pusha
sub
adc
add
inc
push
in
mov
push
fidivrl
inc
sub
jbe
or
hlt
jae
popf
adc
sub
cmovbe
lds
jbe
ss
lods
cmp
and
sbb
mov
mov
cltd
into
bound
in
cmp
xor
xchg
xor
fisttpll
sbb
mov
frstor
push
add
add
jle
or
mov
test
pop
hlt
sub
or
and
ret
pop
xchg
popf
push
adc
pop
adc
imul
ds
aam
negb
mov
xor
push
stc
and
mov
dec
lret
mov
std
int
push
dec
ficomps
divl
pop
ret
loop
test
pop
mov
add
mov
call
aam
ss
pop
push
or
es
fsub
scas
stc
cmp
fsub
out
jmp
icebp
outsb
xor
xor
jb
fdivp
test
cmpsl
push
out
stos
inc
push
out
jge
push
repz
xchg
jb
sbb
add
leave
sub
and
popa
arpl
imul
jnp
pushf
xor
sbb
mov
cmp
jnp
pop
mov
pop
jle
xor
or
xchg
adc
mov
jo
sti
add
cmp
lods
add
mov
mov
stos
adc
add
add
cmp
cmpsl
sbb
js
fs
adc
divb
or
xor
or
daa
sbb
dec
scas
iret
ret
mov
push
mov
and
icebp
sbb
scas
lea
xchg
mov
mov
sbb
xchg
in
clc
xchg
fwait
push
xchg
rcrl
add
ja
push
add
push
outsl
xchg
cld
pop
xor
xor
dec
and
mov
fucom
movsb
in
cwtl
enter
addr16
fwait
xor
je
imul
push
mov
in
pop
in
xor
mov
lds
addb
sar
fcom
xor
lahf
das
inc
push
es
mov
stc
mov
cli
adc
aaa
mov
imul
add
adc
out
xor
aaa
adc
fisubrl
loopne
ja
in
or
or
cmp
fcompl
rcll
push
lods
in
push
or
mov
sub
xlat
mov
stos
cmpsb
xor
or
loopne
sti
pop
mov
pusha
ljmp
and
push
addr16
jge
mov
jae
jp
sarl
push
cmc
xor
mov
je
mov
addr16
dec
push
or
shr
and
popa
xor
cmpsb
cmp
xchg
je
dec
mov
pop
incb
rorl
adc
mov
jmp
mov
adc
add
push
cmpsb
outsb
mov
sar
mov
test
mov
mov
push
movups
add
dec
xlat
repz
fdivr
and
cltd
cmp
scas
aas
in
xchg
or
pop
and
int3
or
aad
mov
inc
rclb
pop
movsl
pushf
call
leave
xor
mov
aas
popa
outsb
ds
cmpsl
inc
cwtl
shl
cmp
and
and
mov
inc
repz
test
imull
pop
mov
cmp
rclb
popa
int
movsb
imull
loopne
test
arpl
sahf
mov
mov
jo
jl
and
fsubr
jne
ja
mov
inc
sar
cs
imull
out
mov
insb
sub
push
clc
and
cmp
push
xchg
pop
push
mov
fsts
sbb
test
adc
inc
dec
cmp
jmp
sbb
cmpsb
cmp
xchg
dec
int3
mov
mov
pop
jp
or
pop
or
fiaddl
mov
int3
jo
inc
fcomps
lret
ljmp
xor
jg
arpl
out
cmp
test
gs
jno
jecxz
mov
mov
sub
push
das
inc
rcrl
mov
pop
scas
js
or
ss
pop
addr16
aam
in
dec
popf
jb
sar
imulb
fmull
shlb
lret
fdivp
popf
cwtl
popf
push
mov
jecxz
pop
xchg
lods
or
push
hlt
andl
push
aad
and
cs
jge
sbb
loope
lahf
sahf
xchg
inc
pop
test
xchg
xchg
push
arpl
xor
hlt
cli
rolb
mov
push
dec
push
inc
in
mov
cltd
in
lods
in
sbb
daa
movhps
clc
comiss
rsqrtps
push
int3
push
stos
or
jl
outsb
pop
mov
sub
xchg
mov
sub
jo
loop
lcall
sub
mov
ss
mov
mov
pushf
jo
inc
sarl
and
movsb
iret
mov
call
lret
cmp
cmp
pop
push
sub
mov
push
mov
dec
out
popa
jne
mov
add
fldl
add
pushf
jg
dec
adc
loope
loop
loope
stos
adc
nop
adc
jecxz
push
out
ss
mov
inc
xor
and
rcrb
cs
movsb
cmp
ja
xchg
nopl
push
repz
movsl
cmp
jle
add
jmp
sbb
setnp
aaa
xlat
sub
lds
sub
repnz
divl
sub
lret
pop
mov
push
movsb
in
call
scas
frstor
push
inc
mov
pop
and
cs
mov
les
cmp
loopne
shlb
inc
idivl
outsl
dec
push
jmp
pop
adc
jbe
insb
xchg
pop
ds
mov
in
cmp
in
sti
push
fidivrl
out
xchg
stos
push
jg
inc
pop
cli
and
mov
cmpsb
ljmp
pop
insb
mov
sub
pop
std
mov
inc
stos
fldl
gs
pop
sahf
jp
dec
adc
andl
mov
mov
jbe
int3
mov
dec
adc
outsb
outsl
mov
mov
push
test
pushf
jle
sti
clc
dec
les
dec
pop
lcall
xchg
sbb
push
add
push
sub
mov
cmp
cmpsl
icebp
hlt
xchg
pop
xchg
mov
push
clc
movups
and
ss
mov
mov
mov
pop
lret
addr16
jo
int3
in
dec
dec
cwtl
in
std
out
or
lahf
clc
in
lea
gs
and
icebp
add
pop
scas
inc
jg
shrb
cli
mov
arpl
adc
std
ja
loopne
popa
xor
add
decb
and
mov
jl
pop
js
mov
and
or
dec
xchg
cld
es
loopne
pop
lock
ret
cmpb
add
xchg
jo
inc
cmp
out
xchg
fbld
jecxz
aad
push
mov
xor
test
stos
icebp
mov
adc
lock
imul
xor
pushf
push
test
int
mov
mov
sarb
popf
lods
std
inc
pop
outsl
lcall
mov
shl
js
std
mov
add
or
fs
mov
jmp
jbe
int
push
pop
js
lahf
in
ja
add
pop
div
loopne
inc
fcompl
pop
je
mov
les
add
aas
xchg
out
push
in
shrb
shlb
lock
cwtl
push
xor
cmpsl
cmp
pop
imul
cmp
mov
mov
or
fists
sahf
xor
jb
lret
and
ja
cmp
inc
jmp
pop
les
pop
stos
test
or
imulb
xor
fisttpll
jmp
pop
clc
mov
push
mov
in
sub
sbb
xor
xor
out
jle
jo
mov
jmp
sbb
jne
or
push
jne
or
aas
gs
inc
xor
ret
or
rcll
xor
jl
xchg
mov
xor
cmpsb
jno
and
stos
mov
sbb
add
lods
inc
inc
test
push
nop
fwait
and
test
jmp
aas
jno
adc
test
cmp
adc
push
inc
mov
in
daa
dec
sahf
pop
insb
lods
js
push
sbb
movsb
push
loop
mov
or
stc
pop
adc
xchg
jg
lock
or
hlt
rorb
pop
sbb
sub
cmp
jo
push
lret
inc
das
push
jae
movsl
inc
mov
push
ja
add
add
std
cvtpi2ps
mov
lcall
dec
pop
jge
cmp
jbe
pop
inc
call
in
mov
xchg
jns
cmp
pushf
out
jg
mov
fst
cmp
nop
lds
leave
mov
sbb
lret
xlat
arpl
mov
adc
cld
sbb
outsb
js
dec
jae
dec
inc
cli
arpl
cmp
inc
add
idivl
sbb
out
jl
or
cltd
push
mov
add
and
scas
xlat
cltd
mov
cmp
push
inc
pusha
sub
dec
pop
xchg
out
mov
movsb
daa
mov
jp
adc
xchg
out
mov
jbe
fwait
add
adc
andb
xchg
jo
aam
and
cmp
leave
xchg
xor
insb
push
cmpl
pop
out
xchg
dec
jmp
shlb
mov
outsl
jns
push
jle
add
dec
stc
ret
adc
jmp
push
enter
enter
sbb
pop
repz
jle
icebp
cmp
jno
iret
sub
pop
dec
and
fldcw
pop
adc
rcr
pop
add
add
or
orb
orb
aas
sub
in
mov
test
ds
or
ja
mov
push
add
xor
jnp
mov
xor
and
mov
fmul
ljmp
xchg
out
pushf
mull
mov
sahf
stc
pop
outsl
das
sbb
dec
and
into
cmp
or
pop
xchg
lods
add
inc
mov
scas
sub
mov
jnp
pop
mov
xor
jl
dec
mov
cld
xchg
mov
add
test
pushf
pop
cli
push
notb
es
test
mov
mov
dec
mov
mov
xor
inc
sub
pop
pop
das
mov
decl
mov
mov
jle
add
cmp
pop
lds
push
dec
lea
push
jg
stos
inc
mov
out
scas
cmp
mov
adc
int
jno
repz
dec
mov
dec
test
roll
dec
roll
adc
push
mov
mov
inc
push
rcrl
pop
pop
cwtl
mov
imulb
pop
xchg
mov
sub
insb
mov
std
and
mov
cmc
fwait
jne
push
imulb
sub
xchg
add
insl
movsb
cmp
shll
fs
or
sbb
xor
jb
shlb
mov
push
xor
sbb
inc
jmp
rcr
push
fs
stc
insb
fs
cmpb
ja
push
jae
daa
mov
jmp
clc
daa
mov
nop
cli
lds
hlt
sub
mov
jp
jbe
sub
jecxz
push
mov
mov
inc
out
cltd
outsb
ljmp
dec
push
iret
rcrl
lret
movsb
push
sahf
sub
mov
loopne
cmc
xor
das
cmovg
jnp
cmp
add
stos
dec
mov
movsb
jo
xor
mov
test
decb
je
fwait
out
xor
sub
movzbl
repnz
add
clc
push
ljmp
fdivrl
cmpsl
xor
dec
je
fisttps
das
jne
stos
pop
mov
mov
loop
sbb
jecxz
addr16
and
orl
add
in
push
pop
xor
inc
test
jle
icebp
mov
lret
pop
fstps
cmp
mov
add
mov
mov
les
push
mov
aas
sbb
fsubr
mov
add
mov
xor
or
loop
dec
jnp
xchg
stc
scas
jge
ret
push
out
push
push
push
jb
aad
imulb
adc
shll
cmp
fs
dec
outsl
fsubl
xlat
mov
cmp
popf
js
mov
push
lcall
mov
push
nop
push
stc
dec
nop
adc
jnp
clc
adc
push
sahf
sub
lret
gs
sbb
cmp
ret
mov
add
das
js
subb
mov
cwtl
jl
mov
jne
jae
jno
insb
test
xor
lahf
fdivrl
scas
repz
mov
push
or
dec
test
sub
jnp
iret
sbb
dec
pusha
push
mov
jne
sti
outsb
loope
push
outsl
mov
daa
pop
push
pushf
insb
adc
add
scas
ret
mov
cli
adc
mov
ja
movsb
nop
mov
cmp
imul
mov
jl
add
jb
mov
call
cmp
inc
data16
hlt
add
cli
outsb
stos
jbe
jns
or
lods
movsb
cmp
cmc
stc
jg
pop
fs
rcll
mov
dec
push
cmpsl
imul
xor
ds
fdivrl
or
dec
xlat
or
push
negb
pop
mov
aas
loopne
cs
and
test
jp
jp
inc
inc
inc
sub
lods
pop
lcall
xchg
dec
adc
jmp
xchg
out
cmp
fisttpl
lret
pop
daa
xlat
jne
and
into
rcll
outsb
icebp
or
test
xlat
shrl
pop
dec
nop
pop
gs
gs
pop
rcrb
imul
lods
orl
and
es
dec
cmp
jge
clc
mov
mov
icebp
idiv
cmpsb
inc
stc
repz
mov
ljmp
mov
cs
stos
inc
inc
les
pop
mov
rorl
aas
dec
sub
or
jge
pop
jne
test
mov
in
in
sbb
push
cli
outsb
imul
cmpsb
push
push
pop
push
in
pop
in
cmc
pop
xchg
out
pop
jns
sbb
cs
inc
push
mov
sub
ja
jmp
imul
out
orl
aad
mov
in
ljmp
xchg
mov
xor
adc
push
int
jbe
cld
push
mov
mov
xlat
push
lock
inc
popa
xchg
pushf
jecxz
ret
shl
push
jb
sarl
clc
jmp
out
sbb
aam
fldcw
add
sub
fcmovb
push
sbb
enter
loopne
push
jne
mov
rcll
cld
les
push
inc
push
add
inc
aam
and
xchg
sub
inc
mov
mov
rol
pop
out
and
pushf
cmp
enter
mov
xor
dec
push
mov
sbb
imul
jae
mov
das
pop
adc
add
jnp
ret
loope
rorb
gs
sbb
sub
adc
inc
push
cmp
add
movsb
dec
mov
and
xchg
mov
out
shll
sbb
and
cmc
xchg
xchg
popa
sub
sahf
cs
xchg
in
adc
sub
push
loope
sub
add
popf
sub
sub
dec
jl
outsb
xchg
mov
inc
cmp
jae
jecxz
test
rcrl
cmpsl
push
insl
hlt
into
outsl
lret
out
ret
leave
mov
mov
xchg
cli
add
xchg
clc
lss
adc
and
stos
and
jnp
dec
jne
push
xorl
dec
movsl
icebp
aad
xchg
cmp
pop
ja
cmc
mov
jne
inc
fcmovb
ficompl
in
sarb
cltd
lods
imul
or
pusha
scas
inc
insb
fisubrl
or
and
aad
xchg
iret
inc
jns
rcrb
mov
fmull
xchg
lea
inc
mov
or
and
sbb
std
rorb
pop
lret
repnz
xor
push
gs
shll
sbb
xchg
mov
inc
mov
mov
out
in
or
dec
jecxz
jno
sub
jnp
iret
scas
stos
jl
push
mov
push
cltd
mov
dec
mov
and
and
shr
scas
dec
pop
push
das
or
jg
imul
add
mov
sub
and
mov
dec
sbb
and
loope
adcb
and
imul
out
xor
sbb
cmc
jo
mov
jg
nop
push
orl
mov
mov
insl
je
inc
lods
fs
test
mov
add
inc
mov
ds
dec
jecxz
xor
iret
lock
inc
call
push
inc
loop
pop
cld
jno
ljmp
cs
xor
adc
cmp
shr
inc
xchg
add
int3
mov
or
mov
add
jae
lods
xorl
popf
jmp
sbb
insb
add
jle
push
sub
fdivl
mov
mov
sub
rcll
fistl
scas
push
pushf
out
pminsw
in
dec
ljmp
sahf
int
xor
xchg
repz
out
shr
mov
and
dec
lock
hlt
add
jo
icebp
rclb
fstl
js
xchg
sbb
es
in
jnp
adc
jbe
jns
pop
mov
ja
jb
mov
std
lcall
inc
mov
pop
pushf
cmp
and
arpl
mov
xor
fwait
and
lahf
dec
sub
fwait
or
aad
inc
shrb
emms
call
ja
fcompl
in
mov
fisubrl
sub
lds
cmp
xchg
push
imul
and
int3
sbb
mov
jnp
and
ficoms
std
jmp
test
adc
mov
xchg
out
scas
es
xchg
jmp
dec
jns
mov
sbbb
mov
ljmp
sbb
pop
jbe
push
and
jb
mov
dec
add
jp
sbb
test
out
insl
add
imul
mov
lock
pop
int
mov
clc
andb
sbb
dec
loopne
and
sbb
lcall
imul
cmc
adc
call
cmc
push
add
xor
repz
neg
push
dec
sbb
fnstcw
movsb
mov
lods
hlt
add
gs
add
notb
cmp
lcall
daa
das
adc
ja
ljmp
and
mov
or
icebp
push
dec
xchg
andl
scas
shlb
jnp
pop
outsl
aad
inc
mov
movsb
or
aad
push
sarb
out
into
xor
inc
mov
loopne
add
jbe
pop
adc
add
insb
movb
andb
fwait
push
outsb
out
mov
sbb
sbb
dec
les
inc
mov
sahf
pop
and
insb
fucomip
mov
xor
mull
xchg
xlat
test
outsl
sahf
sbb
or
jecxz
mov
push
mov
mov
dec
enter
xchg
xchg
inc
imul
shrl
daa
dec
gs
push
adc
inc
push
jecxz
movsb
xchg
xor
and
les
sub
pop
hlt
and
jle
and
mov
pop
push
and
sub
in
cmp
jl
scas
mov
iret
shrl
jnp
xlat
xlat
sbbb
shll
or
mov
cmpsl
in
pop
je
ljmp
daa
add
dec
in
rcl
jl
int3
add
mov
lret
out
loope
sub
mov
push
movsl
xor
sbb
lcall
aam
fcomip
cmp
mov
cmp
movsl
jp
dec
xchg
jg
mov
stos
push
loop
inc
push
cmc
sbb
dec
sbb
jmp
or
xor
dec
inc
movsl
es
and
and
sbb
in
jb
addr16
fcmovu
jg
dec
mov
imul
std
inc
aaa
fistps
test
rcrb
adc
scas
add
std
fcomi
xchg
inc
mov
loopne
sub
aaa
jle
and
pusha
xor
and
inc
loop
leave
fcomi
arpl
inc
test
jg
rcrl
andb
jp
add
or
push
lods
sbb
cmp
sub
cmp
dec
cwtl
and
psrlq
add
out
data16
xchg
hlt
mov
push
pop
aaa
hlt
add
xorl
sub
dec
dec
dec
es
xor
sub
daa
cmpsb
mov
xchg
filds
pusha
es
lods
add
dec
loop
add
imul
push
or
mov
pop
adc
pop
mov
call
cwtl
cli
paddsw
rorl
mov
pop
fwait
ss
sbb
movsb
xor
cmpb
push
rclb
push
ljmp
add
add
cli
and
aaa
out
push
push
imul
js
daa
outsl
and
adc
mov
out
fcmovnbe
sbb
pop
pusha
stos
jb,pt
cs
jbe
aam
sbb
lock
shll
daa
and
adc
nop
pop
xchg
test
jae
add
js
mov
xor
pop
jae
stc
pop
pop
mov
mov
xchg
movsl
or
addr16
xchg
pop
shrb
addr16
add
orl
add
add
insl
mov
loop
adc
test
xchg
jl
test
push
fnstcw
in
xchg
mov
sub
pop
mov
lahf
dec
ljmp
and
cmpl
ret
push
mov
inc
and
push
sbbb
mov
sbb
push
mov
mov
inc
inc
bound
aas
lcall
xchg
arpl
push
call
inc
inc
jo
pusha
ds
pop
add
mov
test
mov
pop
xor
pop
jg
sbb
xor
mov
mov
lret
jmp
stos
lahf
mov
xchg
mov
sbb
xor
pop
sbb
push
imul
stc
mov
cmp
inc
mov
adc
insb
push
lret
mov
dec
dec
aaa
lds
in
xchg
sub
mov
push
push
lock
pop
xchg
add
lods
pusha
adc
std
sub
add
es
adc
aad
mov
jns
int3
subb
add
mov
loopne
mov
clc
addb
imul
dec
fcmovbe
lock
aad
push
test
and
out
mov
dec
dec
addr16
pop
aas
cmp
xor
lods
cmp
sbb
add
dec
int
ret
fmull
mov
lret
mov
sbb
lds
jo
fidivl
push
cmpsl
int3
das
aaa
icebp
sbb
pop
inc
test
orb
mov
mov
push
cmp
and
cmpb
sub
sub
leave
xchg
into
push
ret
jge
movsl
ret
in
ja
adc
jge
out
in
pushf
insl
inc
ret
fwait
mov
dec
hlt
lret
fwait
pop
add
jg
fimuls
out
insl
adc
jecxz
mov
js
inc
inc
jmp
cltd
pop
nop
add
pushf
pop
mov
daa
jbe
stc
pop
in
cs
insb
dec
rcll
cli
dec
xchg
and
mov
xor
dec
mov
push
adc
mov
test
lods
out
push
jmp
or
cld
stos
lds
sbb
out
in
fwait
mov
leave
cli
lea
test
push
fldt
and
and
push
inc
jo
adc
enter
cmp
push
mov
xchg
sub
or
mov
mov
pop
loopne
push
mov
inc
mov
shl
push
and
pop
sbb
mov
fdivrp
data16
cmp
dec
rorl
pop
notl
out
jae
push
out
cltd
pop
popf
es
sbb
out
pop
imul
mov
enter
cmp
ja
fildll
lcall
imul
mov
scas
fisubl
push
xchg
adc
cld
stc
pop
sub
or
mov
or
popa
jl
and
add
fdivrp
cli
mov
add
sarl
in
lds
pop
sarl
mov
fldt
adc
mov
xchg
adc
inc
outsw
frstor
inc
add
addr16
sarl
mov
jg
adcb
dec
push
pop
roll
imul
sahf
push
mov
mov
inc
out
jl
pop
sbbb
mov
pop
and
stos
shl
xor
and
out
mov
arpl
sub
loopne
movsl
es
ret
xchg
and
out
jge
es
push
ret
loopne
cmpb
shlb
std
and
jns
test
xorb
test
enter
cltd
inc
nop
mov
push
fs
imull
dec
or
adc
in
lods
lret
test
es
xchg
mov
push
sub
imul
out
adc
mov
icebp
cmp
mov
pop
inc
subb
pop
in
push
xchg
sarl
push
mov
xor
mov
mov
test
jns
mov
scas
mov
sub
push
mov
es
mov
lock
pop
test
inc
mov
adcb
call
nopl
int3
shr
std
cs
addr16
pop
xchg
add
lahf
adc
mov
leave
cld
mov
stos
in
mov
std
mov
xor
lods
mov
in
pushf
in
test
inc
into
xchg
cmp
dec
cli
sub
jb
sub
aam
test
lcall
repz
jns
dec
mov
pop
mov
call
cmpsl
xchg
and
push
or
sbb
lods
adc
imul
pop
stos
xor
call
inc
xor
fs
dec
sahf
dec
xor
repnz
andl
stos
std
jb
mov
xor
jmp
push
adc
lock
stos
nop
sub
sub
repz
mov
popa
cmp
lahf
dec
call
loop
jae
pop
xchg
sub
jle
lods
sbb
mov
cmp
aam
fsubl
jnp
push
inc
cmpb
jae
jl
mov
ds
inc
call
push
ljmp
mov
sbb
jecxz
cli
mov
pop
inc
add
sbb
pop
mov
ljmp
subb
inc
mov
mov
sti
imul
loop
push
push
subb
scas
ret
push
cmc
lds
iret
mov
out
dec
push
cmp
jae
subb
mov
lds
cltd
lahf
je
add
dec
pop
xchg
lods
ret
dec
adc
lret
jp
sbb
dec
xchg
movsb
je
and
cmp
leave
xchg
mov
dec
insl
aaa
loopne
aad
jno
cmc
fdivl
imul
add
fistpll
inc
mov
mov
imul
xchg
jmp
out
xchg
mov
bound
in
xchg
xchg
in
rcr
fucomi
add
leave
ret
jg
mov
push
dec
and
ficoml
leave
and
jo
jl
jp
adc
in
push
and
add
xor
mov
or
leave
xchg
adc
hlt
sti
xchg
mov
out
ret
push
sub
pop
adc
add
clc
mov
push
push
push
mov
lret
inc
pop
and
mov
or
sub
imul
jge
mov
lock
aas
pop
scas
lret
test
cmpsb
mov
pop
int
stos
mov
mov
mov
adc
xor
dec
xor
lds
cmpsl
stc
out
stos
fwait
mov
inc
fwait
out
insl
repnz
inc
lock
aad
mov
int
daa
les
xor
and
imul
sub
xlat
out
test
mov
sub
pop
icebp
adc
int3
je
mov
imul
std
push
ljmp
cli
cs
test
xchg
xchg
in
mov
inc
push
loopne
push
xor
call
call
mov
pop
in
mov
je
test
clc
ljmp
xor
stos
jle
popa
jp
lcall
test
shrl
cmp
dec
aad
scas
sub
mov
test
xlat
lock
sbb
xchg
xchg
sub
test
hlt
lea
int3
cmpsb
push
pusha
and
hlt
mov
pop
inc
ficoml
insl
movsb
xchg
push
mov
and
mov
fwait
leave
loop
shl
js
add
inc
fnstsw
hlt
adc
lock
orl
jg
test
and
ret
popf
or
int3
cltd
je
repz
lea
or
pop
dec
rol
push
out
ds
mov
cltd
push
repnz
in
fsts
fcmovbe
or
cmp
jg
pop
out
inc
mov
push
cmp
mov
into
dec
xchg
pusha
push
add
sbb
arpl
push
xor
pop
lcall
push
aam
outsb
cmpb
cmp
pushl
popf
pushf
andl
movsb
mov
or
in
xchg
jno
in
mov
ret
popf
or
icebp
icebp
push
ficompl
pusha
push
cmp
fistl
push
cmc
stc
rol
jmp
mov
jmp
scas
pop
fs
ja
lcall
jmp
add
shl
dec
inc
xchg
lods
cmp
or
nop
inc
add
pop
roll
xchg
add
cmc
in
inc
pop
jb
ja
jmp
mov
movsl
mov
in
popa
push
jge
jmp
xor
cmp
push
push
or
into
mov
and
sbb
ror
pop
mov
test
jecxz
or
sub
and
sarb
mov
sbb
jnp
xor
cmp
cld
in
lock
xchg
out
sub
jle
ss
mov
loope
dec
or
sub
push
jg
push
mov
pop
xor
scas
repnz
aad
pop
push
sahf
inc
loopne
xchg
mov
jmp
mov
jmp
mov
mov
push
xchg
das
inc
jl
clc
xchg
mov
jge
mov
int
add
cmp
cmp
and
inc
mov
aaa
jo
dec
jg
mov
xor
push
in
cmpsl
inc
mov
xchg
test
sahf
jnp
imul
mov
mov
repz
and
adc
into
pop
mov
repz
or
inc
aaa
call
dec
pop
xor
adc
or
cmp
lods
dec
xor
or
fs
mov
xor
and
pushf
or
lock
je
adc
test
or
push
in
sarb
pop
inc
insb
dec
std
mov
add
insb
fsubrs
ds
pop
cmp
adc
xor
add
xchg
pushl
loop
ljmp
jge
jb
bound
fwait
push
adc
movsl
sahf
adc
std
in
and
pop
std
push
cmp
fstpt
and
lret
inc
mov
mov
pop
adc
mov
ds
sub
mov
push
sbb
mov
jno
mov
fwait
int
dec
cmp
sub
jbe
aaa
xchg
or
pop
pusha
and
mov
bound
rorl
stos
inc
out
dec
sub
adc
std
pop
adc
je
or
mov
cmpsl
repz
outsb
je
add
jge
les
fnstcw
lods
sarl
and
cmp
call
jnp
lret
leave
cmp
mov
jno
nop
cmp
dec
pop
hlt
bnd
out
aaa
adc
add
nop
lret
mov
mov
cld
fs
mov
push
popa
mov
mov
aam
in
aas
ss
jp
push
jle
mov
pop
lahf
push
or
pop
repnz
call
scas
adc
cwtl
cmp
add
push
addr16
cmp
jg
xor
mov
test
and
or
add
jg
loop
pop
fwait
xchg
out
loope
aad
sub
sub
cmp
divl
add
cmp
jae
xchg
and
xor
ljmp
hlt
jbe
movsl
ss
xor
jb
xchg
pop
and
dec
jge
inc
std
test
mov
xacquire
cmp
xor
divb
es
rorb
xor
or
out
sbbl
rorb
jg
jne
sbb
xchg
mov
or
cmp
push
and
lcall
jns
sub
je
ds
dec
xchg
jb
ja
cmp
pop
arpl
clc
mov
add
mov
aaa
jecxz
adc
lcall
mov
rcl
pusha
das
jno
out
jae
std
rorb
aas
dec
bnd
cmp
sbb
loopne
and
fsubrp
mov
xor
rolb
sub
xchg
push
or
iret
push
enter
fwait
cmc
repnz
lahf
icebp
sar
mov
js
aam
push
jae
inc
lods
int
mov
pop
and
sub
inc
pop
add
iret
sub
leave
sbbb
int3
pop
and
std
rclb
fdivrs
outsb
cmp
repz
daa
add
push
pop
rcll
push
jnp
enter
clc
sub
movsl
loop
aam
adcb
sbb
sti
inc
aad
sub
ret
push
rcll
and
rol
push
mov
push
sbb
pusha
or
inc
or
xchg
xchg
sbb
stc
and
dec
add
lods
nop
dec
aaa
shll
ljmp
sub
mov
ret
fs
cmc
jp
into
pop
mov
movsb
push
jl
aaa
int3
jl
mov
pop
xor
or
es
call
aas
iret
js
cmp
push
test
pop
jecxz
in
mov
or
outsb
stc
ffreep
out
mov
orl
adcl
and
add
push
pop
pop
jecxz
repnz
mov
lds
pop
dec
cmpsl
pop
mov
sbb
mov
ljmp
jo
pop
out
jl
or
cmp
mov
lret
lock
fnsave
aad
dec
mov
push
test
inc
inc
ja
mov
jae
das
repnz
and
jmp
test
cld
cmp
es
mov
ficomps
dec
std
cmp
cmpsb
not
sub
pop
sbb
mov
cli
dec
sub
shll
or
mov
sub
adc
in
clc
loop
pop
sbb
aaa
fnstsw
adc
test
stos
fstpt
je
cmp
cmp
fs
mov
subl
pop
movsb
or
push
jne
add
int
test
xor
mov
nop
jns
pop
lds
sub
popa
xchg
test
sbb
sub
mov
xchg
out
dec
push
pop
mov
and
lock
aas
xor
jmp
fwait
adc
mov
pop
test
push
xchg
sub
inc
or
fsub
sub
ret
test
mov
dec
in
jmp
add
xorb
dec
cmc
nopl
xchg
or
stos
fs
push
push
aaa
dec
insb
push
cltd
outsl
dec
enter
mov
mov
stos
das
and
dec
cmp
cmp
dec
ja
jmp
xchg
lods
sarb
jg
in
and
cs
ret
in
stc
dec
inc
inc
lods
and
mul
jmp
jne
jecxz
pop
inc
mov
adc
pusha
adc
mov
andb
xor
div
add
jno
daa
int3
fiadds
scas
sahf
pop
xchg
adc
std
sub
mov
fisubs
mov
cmp
mov
push
rep
push
bound
ss
je
cltd
ret
sbb
popa
add
xor
scas
mov
pop
and
in
aas
inc
pop
jnp
and
xor
leave
cmc
pushf
mov
pop
and
xchg
icebp
xchg
ret
int
mov
sbb
in
iret
stos
or
addr16
fdiv
cmpsl
mov
or
arpl
mov
xor
sbb
leave
pop
mov
xchg
mov
push
dec
adc
dec
sarl
neg
jns
dec
ja
mov
inc
fidivl
fcmovu
lea
mov
leave
dec
test
aas
popf
sbb
repz
push
sub
mov
lcall
adc
or
mulb
lahf
pop
mov
mov
nop
mov
pop
test
cmpsb
add
jecxz
mov
adc
mov
sub
mov
out
into
inc
lcall
outsb
in
lahf
or
cwtl
xchg
lahf
imul
imul
out
jns
jge
xor
out
imul
lock
pop
push
lret
fwait
ret
mov
inc
cltd
aam
mov
pop
pop
and
inc
pusha
cmp
les
pop
mov
mov
and
xchg
cmp
cld
loop
inc
cmp
inc
xchg
fldl
lock
mov
data16
shr
adc
shl
lahf
sub
add
mov
into
enter
jns
lods
pop
mov
sub
xor
xor
mov
dec
jp
cli
stc
adc
cli
add
nop
arpl
repnz
int3
ret
lret
push
outsb
add
insl
jmp
int
mov
ljmp
iret
cmp
xorb
and
adc
mov
xchg
fldcw
jno
xor
sbb
xchg
xchg
repz
sbbl
jno
or
bound
icebp
push
mov
test
mov
test
or
and
test
dec
and
mov
jnp
arpl
mov
cmp
mov
repnz
inc
mov
xchg
fistpl
negl
or
mulb
mov
mov
mov
dec
and
int3
daa
adc
xor
pop
sbb
hlt
xor
cli
adc
mov
addr16
outsl
pop
xchg
add
pcmpgtw
xor
or
fcmovu
cmpsl
pop
jecxz
mov
dec
add
mov
xchg
mov
push
sub
gs
adc
shlb
aam
movsl
or
dec
xchg
out
jbe
rorb
insl
pop
lcall
loope
out
sar
push
jo
in
jl
push
cs
push
push
sarl
lds
scas
sbb
jo
ja
xlat
es
and
addl
ret
jae,pt
inc
xchg
ret
arpl
adc
jmp
pop
push
and
pusha
jge
pop
lahf
adc
js
cmc
push
filds
jns
push
mov
pop
addr16
push
imul
adc
or
push
add
aad
sarl
cmc
add
clc
out
jl
push
fcoml
loopne
dec
fsts
lahf
or
add
loope
in
dec
xchg
cs
pop
call
xor
add
push
pop
lea
jbe
js
loopne
sahf
or
sub
jecxz
ds
and
pop
dec
mov
push
sbb
adc
mov
jno
adc
aad
pop
pop
repnz
push
pop
jge
pop
cmp
gs
xchg
jmp
cli
pop
lcall
jmp
jl
xchg
lret
mov
arpl
xor
add
dec
gs
popa
enter
sbb
jb
gs
cmp
jae
gs
negl
mov
cld
ret
lods
ljmp
jge
lret
dec
scas
add
and
mov
enter
gs
pop
lret
movb
fdivs
cmp
aam
cmp
inc
fmull
jae
mov
xchg
roll
repnz
sti
adc
jns
test
push
dec
xchg
xchg
je
sbb
inc
pushf
dec
add
cmc
movsb
push
mov
outsb
int3
in
push
lods
mov
inc
adc
push
push
xor
test
stos
in
maxps
rcrb
fbstp
pushf
or
in
outsl
cmc
lcall
ljmp
xlat
js
push
xchg
int3
adc
adc
xor
imul
cmp
and
popf
outsb
xor
add
sbb
or
xchg
mov
jmp
outsl
bound
cmp
mov
or
iret
inc
into
testb
lods
cmc
or
int
enter
adc
lret
mov
cmp
cmp
mov
add
fstpl
xchg
add
aam
cmpsl
mov
sub
adc
std
sub
sbb
dec
jle
push
xchg
rclb
sub
sbb
rcrl
dec
fs
cmp
adc
jb
jb
adc
xchg
or
inc
cs
add
mov
clc
mov
xor
dec
push
sbb
repz
push
arpl
inc
ljmp
inc
push
data16
int3
dec
adc
cmp
jae
lea
clc
push
cmc
jp
aam
in
out
adc
dec
das
push
cmp
push
xchg
addb
loope
divl
jns
in
shrl
dec
in
jno
pop
pusha
push
pop
test
mov
jbe
sbb
je
jns
sub
lret
lcall
loop
std
push
cld
sub
mov
inc
and
sbbb
jno
mov
data16
dec
sbb
pusha
sqrtps
add
push
xor
test
mov
cld
rcll
lcall
mov
in
es
add
je
and
enter
pop
notl
insb
insb
push
pop
popa
pop
cwtl
stos
dec
insl
xor
sbb
enter
push
adc
loop
fsubl
insl
ret
sahf
fldenv
rorl
lods
call
mov
jp
insl
je
xor
cmp
pop
mov
imul
pop
popf
xchg
push
leave
push
or
fwait
push
repnz
jmp
aas
popf
mov
rcr
in
sti
pop
dec
cs
mov
dec
xor
mov
and
sub
jae
out
rcl
pop
sbb
sub
fcmovnbe
faddp
in
mov
repz
push
jmp
pop
dec
jl
push
out
outsl
adc
add
push
jp
insl
repnz
imul
jns
cmp
jecxz
or
movsw
test
sub
test
cwtl
sarb
inc
loopne
sbb
push
inc
xor
aam
or
mov
adcb
xor
stos
push
roll
scas
cmp
adc
and
or
mov
arpl
jne
add
lret
loopne
movsl
fs
in
enter
mov
sti
pusha
push
cltd
mov
cld
stc
cli
inc
loope
cmpsb
cmp
pop
dec
push
sbb
mov
test
add
dec
mov
jecxz
push
or
fs
xor
jne
sbbb
sti
cmp
sbb
and
cmp
push
cmpsl
fs
dec
gs
push
ljmp
inc
mov
sub
push
mov
jo
test
ret
inc
mov
cmpsb
aad
jns
xlat
mov
pop
movsl
cmpl
sbb
mov
lahf
hlt
mov
in
adc
insb
dec
push
enter
cmp
push
inc
cltd
push
cwtl
mov
ret
mov
mov
loope
test
cmc
inc
cmpsl
sbb
arpl
mov
pop
jmp
cmp
test
arpl
in
and
ret
xor
subb
or
xor
mov
iret
xor
mov
cmp
bound
mov
xor
leave
rolb
xor
or
dec
push
pop
stos
push
inc
aam
notl
scas
jle
xchg
stos
fs
mov
into
les
addl
ss
and
out
mov
sub
jmp
test
movb
inc
adc
test
or
lcall
mov
xor
bound
lods
jle
outsb
or
xchg
mov
popf
cltd
inc
roll
addr16
ds
test
sbb
fnstsw
addr16
lahf
hlt
push
cltd
jbe
imul
jp
inc
das
fwait
test
popf
loop
aas
push
sahf
out
psubd
fldl
leave
or
cmc
fwait
in
jl
fsubrs
fs
mov
orb
adc
jl
push
lahf
xchg
frstor
mov
and
or
popf
call
imul
lret
jo
pop
adc
subl
int
add
push
pushf
push
mov
push
dec
jb
test
adc
add
cmp
dec
lds
pop
lea
cmp
movsl
mov
sahf
scas
aad
sbb
xchg
mov
xchg
loop
and
test
inc
lea
push
inc
push
sbb
les
mov
xchg
imul
mov
pop
pusha
pop
arpl
fs
pop
cmp
sub
mov
and
dec
add
das
lret
adc
dec
or
testl
cwtl
es
mov
imul
mov
mov
sub
xchg
jmp
inc
cmp
leave
dec
sbb
and
sbb
aas
mov
jnp
sub
lods
subb
lods
in
in
xchg
aad
pop
ja
sub
test
inc
push
mov
dec
cli
scas
cwtl
jns
jb
loope
sti
fiadds
xlat
mov
sbb
cs
rol
rcll
jb
cmpsb
fimuls
iret
sub
fnsave
jge,pn
cmc
popf
adc
bound
fcomps
hlt
fmul
push
pushf
jbe
add
or
add
adc
out
data16
mov
test
pop
ljmp
lahf
push
scas
or
sub
dec
scas
stc
sti
andl
stos
cltd
aad
cmp
popf
testl
cs
scas
inc
cs
pop
lock
lea
add
pop
leave
cmp
or
aam
fisubrs
mov
mov
aaa
sbb
testl
repnz
fcompl
int
xor
jecxz
rorl
hlt
aam
push
jnp
loop
stos
fstpl
inc
loop
adc
in
movsb
rorl
push
add
xchg
rolb
loope
dec
xor
jg
test
mov
mov
stc
lods
mov
cwtl
in
xor
lds
movsb
sbb
xor
sub
and
or
or
sub
cmp
push
jecxz
mov
sbbl
jne
idivb
les
out
adc
mov
dec
ret
mov
jecxz
mov
stos
mov
pop
jnp
loopne
popa
imul
sub
gs
mov
push
push
sarb
ret
mov
mov
adc
add
pop
xchg
into
mov
loope
insl
int
sub
push
scas
or
rcrl
add
pop
call
cmp
push
mov
push
sahf
sbb
jp
inc
je
xchg
sbb
jecxz
rcrl
add
pop
inc
and
movsl
cmp
lret
dec
sahf
divb
sub
push
rorb
dec
shl
pop
jo
lea
repz
xor
xor
je
jl
aas
jns
addb
and
xor
imul
jno
add
paddsw
xor
pop
add
scas
call
push
adc
bound
pop
cmp
ret
pusha
ret
test
into
xchg
add
jecxz
sub
push
fwait
mov
int3
out
fs
mull
imul
add
inc
jne
stos
enter
xchg
enter
fdivrp
jb
xor
out
aam
pop
mov
movsb
pushf
call
in
mov
ret
mov
cli
lds
push
mov
mov
sbb
mov
ds
cwtl
movsl
push
lds
insl
xchg
in
push
and
xchg
xchg
push
fldcw
fstpt
xor
sbb
cmp
aas
inc
jge
test
cmp
push
cmp
popa
rol
sti
fisubrs
addr16
mov
xor
orl
fucomip
cmp
cmp
inc
xchg
jl
xor
in
jae
jl
jg
mov
push
dec
ret
jno
xchg
inc
call
cmpb
aaa
cld
cltd
loope
mov
loope
mov
test
enter
or
mov
push
lcall
sub
pop
fdivp
sub
jge
mov
sbb
mov
sbb
xchg
push
dec
or
dec
and
pop
es
jno
pop
or
xchg
or
xor
ja
enter
loope
sbb
xchg
pop
enter
imul
repnz
rorl
mov
sbb
mov
fwait
and
pop
xchg
cmovl
idivl
mov
sbbl
mov
int
iret
xor
xlat
push
add
outsl
icebp
dec
cmp
jl
mov
scas
mov
cmc
fwait
es
xor
xor
mov
dec
push
addr16
xor
rcll
sub
inc
test
sbb
mov
jmp
inc
lret
sbb
and
mov
hlt
sub
inc
lds
imul
add
jnp
aam
push
out
fbld
mov
out
xchg
rcl
xchg
jg
mov
or
sub
fsubl
imul
out
cwtl
lods
sbb
insl
jne
cwtl
jl
imul
sub
mov
dec
lret
mov
mov
xchg
mov
inc
pusha
popf
loopne
push
mov
xchg
add
nop
xchg
test
push
xchg
lcall
cld
pop
jo
std
push
inc
pusha
jnp
add
ffreep
push
leave
xchg
in
test
scas
imul
clc
insl
je
fwait
std
adc
imul
inc
ss
lods
dec
rclb
inc
arpl
sub
dec
dec
adc
push
inc
xchg
pop
scas
and
and
dec
int
sub
mov
jnp
jmp
or
test
mov
inc
repnz
shll
fldenv
rcll
mov
mov
repnz
pushf
adc
add
hlt
imul
adcl
mov
push
fisttpl
push
repz
inc
mov
addr16
mov
jg
and
fidivl
add
ja
jnp
shll
mov
jge
incl
inc
fnstsw
sbb
and
dec
movsl
dec
cld
out
dec
dec
icebp
stos
and
pop
orl
imul
add
out
cs
stc
dec
jmp
outsl
loope
xchg
push
movsb
mov
sub
call
bound
inc
pop
mov
jb
cltd
leave
in
adc
ljmp
mov
cmpsl
shll
pop
sbb
scas
cmp
add
and
ret
ret
mov
sub
les
dec
push
cmc
cmp
stos
xchg
push
out
fidivrs
xchg
and
outsb
fisubs
jecxz
mov
push
pop
cs
jbe
outsl
lods
mov
push
jg
sbb
add
sbb
scas
jmp
mov
cmp
femms
fdivs
clc
sub
je
cmp
and
pop
lahf
cmp
push
in
xchg
or
repz
adc
pusha
cli
and
sbb
aam
outsl
sbb
jae
jmp
loop
xchg
push
and
jno
aad
sahf
pop
ljmp
mov
mov
out
pop
inc
dec
mov
insb
jne
aas
pop
and
xchg
hlt
xchg
mov
inc
mov
sub
sub
std
rolb
lods
fdivs
call
mov
lds
xchg
in
out
rcl
mov
cmp
nop
out
and
cltd
call
inc
int3
add
ret
cmp
add
xchg
lcall
loope
xchg
jnp
jno
push
dec
add
mov
push
mov
pop
cwtl
mov
aad
lret
sti
inc
aad
xlat
push
out
and
xchg
sar
in
sub
jno
xor
jmp
pop
ret
push
cmp
push
fnstenv
lea
mov
mov
fstpl
das
inc
push
stos
xor
les
clc
inc
jecxz
in
sub
jns
in
lods
lahf
cmpsb
or
xchg
cld
jo
fst
mov
jae
insl
add
iret
mov
and
sbb
mov
xchg
add
inc
sub
xor
in
sti
repnz
inc
dec
in
push
jno
xchg
mov
xor
ljmp
xchg
and
pop
in
out
repz
std
add
mov
out
mov
xchg
fistl
inc
xor
clc
shlb
add
loope
cmp
mov
in
cld
jg
bound
adc
dec
stc
xchg
dec
les
inc
ja
into
mov
inc
loop
mov
test
frstor
divb
add
icebp
push
dec
fcompl
lods
push
test
pop
and
pushf
or
sbb
sbb
ljmp
sub
call
aaa
mov
lret
dec
mov
mov
inc
mov
sub
push
daa
and
xlat
xor
add
int3
cmpsl
sub
pop
push
xchg
out
loop
sbb
push
dec
jl
and
out
hlt
test
push
out
loopne
cmp
push
cmp
movsl
das
inc
and
and
sbb
inc
out
popa
fdivr
inc
shlb
sbb
loopne
sti
jmp
mov
push
shll
inc
les
imul
les
div
imul
sub
xchg
mov
mov
sti
int
dec
out
adc
mov
pusha
stos
mov
mov
xchg
je
es
jns
sahf
lahf
stos
outsl
lcall
push
ljmp
jns
int3
mov
pop
and
mov
and
sub
mov
imul
mov
cmp
rorl
call
xchg
sarb
lret
arpl
fsin
push
fsubrl
jb
aam
movsb
mov
xlat
cmp
ficomps
sbb
xor
cltd
inc
dec
jp
add
fisttpll
imul
push
scas
outsl
notl
mov
popa
dec
pop
mov
outsl
test
lret
adc
jl
imul
lret
rcll
gs
inc
aas
int
in
loop
jns
addb
jne
jge
mov
or
int
test
fnstsw
push
or
inc
fwait
idivl
dec
sbbl
dec
mov
test
popf
mov
or
lahf
loope
aas
js
xchg
xchg
mov
jo
sar
xchg
or
mov
fdivl
xor
mov
dec
sub
lods
subb
pop
mov
mov
cmc
ds
test
sti
fwait
cltd
outsl
mov
fs
pop
jge
notl
and
jo
inc
fdivs
push
pop
pop
add
arpl
cmp
lret
and
sub
testb
fldcw
js
lcall
fwait
scas
sti
mov
and
imull
push
cmp
std
push
fstl
lea
arpl
jb
fsubrl
adc
repnz
push
pop
mull
cli
jl
lods
pop
mov
add
cmpsb
add
sub
jno
cmp
ds
jne
mov
test
mov
xor
aaa
int
mov
call
ds
fldl
loop
dec
call
jnp
shl
xchg
adc
push
inc
jecxz
pop
dec
dec
popf
div
pusha
mov
testl
roll
push
dec
lret
fdivrl
dec
in
arpl
or
push
out
lds
and
fdivs
loop
stos
mov
sub
scas
xchg
nop
mov
subl
mov
iret
in
mov
inc
add
lcall
push
and
mov
pop
sti
add
ss
xadd
xchg
stos
inc
cmp
mov
cmp
stos
cmp
dec
mov
cmp
push
mov
sub
pop
sub
xor
pop
shrl
add
mov
cltd
das
jns
fcomps
jecxz
vucomiss
jmp
mov
mov
mov
adc
xchg
xchg
xchg
inc
adcb
jo
je
push
xlat
sbb
pop
repz
pop
cmp
add
adc
sbb
loop
sbb
cmpsb
loope
adc
dec
pop
stc
mov
mov
pop
lcall
inc
inc
xor
das
in
push
push
jbe
pop
mov
push
sub
sbb
dec
lret
rcl
jmp
incb
and
mov
rcll
aas
and
jae
outsb
push
popa
or
adc
push
sbb
inc
scas
cmp
shll
lods
out
or
in
jle
icebp
cmc
movsl
lods
pusha
pop
enter
repz
mov
sbb
enter
jmp
mov
pop
push
pop
lea
ljmp
push
insb
xchg
pop
ja
adc
shlb
dec
lods
test
pop
nop
add
sbbb
popf
xchg
and
mov
adc
repnz
fwait
insl
lahf
aaa
into
jne
rcrl
mov
xor
les
out
sub
fcompl
mov
in
add
xlat
fidivrs
or
mov
lock
jmp
bound
jae
mov
js
cmp
or
mov
xor
les
leave
jge
clc
mov
push
js
cmpsb
outsb
divl
adcl
xor
insb
movsb
mov
popf
gs
arpl
mov
or
adc
dec
inc
ljmp
les
push
loope
xchg
adc
test
or
xchg
imul
cmp
inc
add
push
fxch
repz
loopne
lea
nop
mov
mov
pop
inc
jns
xor
sbb
stos
adc
inc
outsl
sub
in
jp
fwait
mov
adc
mov
pop
jecxz
pop
cs
jecxz
cltd
and
cmovnp
xor
push
test
addr16
movsb
xor
dec
push
addr16
mov
push
bnd
push
jno
shlb
mov
cmp
dec
into
sub
data16
pop
cmpsl
xchg
mov
push
pop
mov
mov
inc
and
in
cmp
mov
pop
ds
xchg
lds
scas
xchg
mov
aam
scas
pop
je
xchg
fidivrs
mov
mov
fidivl
xlat
lds
dec
add
fisubl
in
int
aaa
xchg
xlat
test
pop
jmp
sub
xorb
sbbb
movsl
bndstx
lcall
add
cld
gs
sub
fcompl
int
popf
xor
cmp
pop
pop
imul
in
bound
xchg
leave
call
cltd
push
mov
push
mov
shlb
xor
add
orb
xchg
pop
jecxz
inc
int
pop
or
ror
mov
cwtl
cltd
add
sub
insl
cltd
push
repz
out
stos
jmp
jns
add
ss
push
icebp
mov
or
xchg
fwait
imul
mov
adc
add
and
mov
fsubrs
int
adc
test
daa
dec
imul
and
icebp
outsl
lcall
ss
loope
xor
clc
mov
notb
js
or
pop
movl
xchg
addb
insl
push
inc
mov
icebp
out
insl
xchg
outsb
dec
mov
leave
lret
cmp
cltd
mov
pushf
bnd
out
pop
pop
adc
mov
or
rorb
dec
ret
shl
lahf
mov
and
loop
in
fnstcw
icebp
adc
fwait
ret
aam
mov
adc
pop
or
xor
mov
add
sub
or
mov
sub
add
out
push
shl
leave
repz
mov
adc
aaa
es
aaa
icebp
pop
mov
push
sub
xor
inc
push
scas
mov
xlat
add
mov
sbb
movl
bound
sub
push
fiaddl
inc
shrl
fcomps
or
xchg
xorb
and
out
fwait
imul
leave
pop
dec
popf
jnp
xchg
add
mov
mov
ficomps
and
sbb
out
lea
cmp
cmp
shr
push
imul
sahf
cmp
add
scas
or
pop
push
outsl
sti
push
pop
loopne
pop
rclb
les
push
divl
push
jl
fsubrp
dec
dec
pop
xor
pop
fcomps
ss
gs
cmp
rcll
rcll
je
inc
xchg
mov
xor
loopne
xchg
xlat
adc
fwait
rcrl
dec
sub
and
ret
sub
inc
xor
mov
adc
fidivl
fadd
insb
jns
je
pop
xlat
sub
add
mov
enter
int
in
push
jmp
popf
xchg
test
sbb
xorl
movsb
dec
cltd
repz
sub
jbe
shll
and
jmp
dec
jae
loopne
push
cmp
push
pop
sbb
pop
xlat
pop
imul
iret
enter
pop
add
xchg
jle
xchg
cmp
movsb
fs
das
stos
inc
push
nop
fstps
xor
lods
jmp
adc
push
adc
mov
xchg
inc
jne
rolb
sub
pop
out
mov
xchg
sti
sub
mov
pop
sbb
aam
mov
dec
push
mov
stos
xchg
pop
loopne
pop
inc
push
andb
pop
leave
or
sbb
popa
push
icebp
add
inc
mov
sti
icebp
push
lock
mov
sahf
mov
jne
aad
add
xchg
jno
out
insl
out
xlat
inc
inc
jo
fwait
in
shll
dec
adc
fisubrs
outsb
rorb
push
pop
dec
test
int3
jmp
out
ljmp
hlt
mov
and
test
mov
sub
mov
into
test
mov
pop
push
jae
jge
jge
xor
xor
and
out
push
inc
sbb
into
in
stos
rol
scas
shr
push
in
repz
loope
mov
mov
push
out
test
jmp
je
das
stos
push
andl
mov
out
cld
mov
inc
test
push
call
data16
sub
leave
idivl
sub
push
pop
adc
cmpsl
lret
aas
inc
dec
icebp
pop
leave
inc
jecxz
dec
push
push
pop
test
jb
mov
pop
mov
jo
push
pop
push
adc
lea
mov
inc
mov
jl
fadds
aaa
pop
push
and
shlb
aad
mov
inc
or
push
xchg
cltd
out
mov
sbb
ret
rorb
adc
cmc
sub
and
cmpb
out
lock
int
xor
mov
pop
push
testb
cmpsb
repz
pop
notb
or
and
or
mov
adc
test
ljmp
rcrl
sub
pusha
call
in
dec
out
cmp
fst
jno
test
inc
shlw
imul
test
inc
cmp
push
shlb
je
sub
cmp
sbb
push
daa
fldcw
jl
pushf
shrb
adc
jl
rolb
push
cmp
mov
fs
xchg
xor
jg
mov
mov
loop
sub
inc
ret
push
leave
pop
loop
pop
sub
mov
call
sti
and
ljmp
scas
repnz
out
sbb
and
add
inc
mov
shlb
les
lret
das
movups
rolb
shr
pop
push
mov
rcrb
int
insl
cmpsb
push
xor
pop
ret
or
bound
lea
rclb
scas
repz
push
insb
movb
cmp
cmp
inc
pop
test
cmp
cmp
sbb
jnp
push
arpl
mov
mov
or
cmpsb
mov
stc
jmp
mov
add
imul
cmp
add
ret
mov
jb
jecxz
fstps
sub
or
loopne
movsl
push
leave
mov
mov
movsl
xlat
pop
pop
mov
fwait
sub
rcll
pusha
pop
cmp
lea
inc
dec
stos
ret
in
push
push
das
push
ljmp
add
fdivp
or
xor
pop
repz
stos
out
push
mov
scas
mov
mov
fidivs
loop
mov
in
jp
loopne
mov
jne
sbb
je
sub
in
push
stc
dec
push
xchg
push
sbbb
imul
popf
movsl
cltd
mov
dec
lcall
das
adcl
mov
lods
cmpsb
pop
pop
jne
inc
mov
nop
pop
inc
pop
pusha
dec
jge
xor
fisttps
mov
outsb
xchg
les
xor
jnp
cld
push
mov
xor
add
jo
clc
cmc
mov
loope
pushf
sbb
inc
mov
aam
lods
mov
and
push
mov
lods
gs
dec
mov
sub
jle
dec
loopne
mov
rol
jecxz
adc
mov
add
movsb
nop
pop
movsl
das
xorb
mov
aam
lcall
fistps
lret
push
jne
sbb
mov
ret
mov
push
push
xchg
and
icebp
push
add
loop
push
mov
add
xor
xlat
sub
subl
inc
into
xorl
outsl
jl
pusha
xchg
out
mov
adc
into
je
cmp
sbbb
imul
dec
ja
mov
clc
xchg
xor
sbb
adc
cmp
pop
adc
or
jb
push
daa
push
xor
mov
xor
cmp
nop
mov
or
fistps
mov
dec
cmp
stos
push
mov
out
imul
test
jae
das
sub
out
enter
mov
jno
aad
cli
sub
push
push
jle
movsb
mov
jae
mov
cs
int
inc
push
xchg
cmp
push
jle
out
daa
lahf
sbb
idiv
out
xchg
mov
push
inc
std
xor
rorl
or
shrb
test
add
mov
loope
iret
add
mov
lret
or
or
outsl
lahf
mov
mov
push
sub
es
repnz
inc
push
or
mov
push
jge
mov
pop
mov
mov
mov
xchg
pop
push
dec
push
xchg
cmp
pop
adc
lret
mov
stos
adcb
mov
xchg
add
pop
jmp
fidivs
mov
jmp
repnz
mov
popf
outsl
fsubrp
jp
add
out
je
popf
sarb
mov
push
or
mov
jnp
adc
ds
shll
inc
jne
ja
sub
sub
sbb
adc
inc
in
pop
lret
ret
movsb
push
sarl
mov
nop
mov
or
inc
andl
lock
lods
or
mov
fsubs
test
push
or
fs
nop
nop
lea
fs
cld
jle
xchg
cmp
pop
cmpsb
lea
loop
pop
insb
xor
outsl
imul
sar
xchg
aas
mov
rorb
into
adc
add
dec
inc
enter
inc
cmp
mov
xor
mov
subb
jle
bound
and
mov
sbb
repnz
add
push
mov
in
sbb
push
or
xchg
cltd
out
loop
mov
or
ret
xchg
push
adc
sub
push
dec
pushl
inc
out
pop
gs
sbb
xor
fcoms
stos
fisubrl
testl
add
repz
add
jnp
test
inc
inc
scas
lea
out
push
push
ds
seta
stc
sbb
insb
outsl
push
xor
enter
mov
leave
lcall
outsl
ss
sti
push
ja
mov
add
mov
push
xchg
into
fidivs
stc
repz
arpl
push
aaa
int
push
or
nop
mov
add
add
or
mov
xor
inc
cmp
cs
jno
pop
fidivrl
daa
mov
xchg
js
push
in
dec
jl
rol
in
lods
dec
add
jmp
push
aad
loopne
adc
inc
inc
in
in
jecxz
sub
pop
sbb
mov
jle
outsb
xchg
xor
mov
sbb
adc
cwtl
or
pop
ror
cli
in
sbb
xchg
out
ss
out
sub
jp
imul
add
cld
mov
inc
out
std
mov
add
mov
fdiv
shll
xchg
rcrb
leave
lcall
mov
out
loop
dec
push
popf
inc
jle
jae
push
fcoml
mov
sub
pop
int
dec
jmp
in
sbb
inc
pop
jmp
inc
mov
ficoms
push
or
inc
cmpb
clc
adc
push
outsl
sahf
outsl
inc
dec
jecxz
xchg
jg
mov
cmp
shll
idivb
push
lods
pop
lcall
mov
mov
fs
and
mov
push
inc
adc
sub
jnp
aaa
cmpsb
fildl
adc
inc
adc
jmp
into
mov
fldt
inc
mov
mov
cmpsl
fmuls
pop
jle
fs
sbb
and
fwait
xor
mov
enter
test
mov
jl
aam
and
in
imul
enterw
into
push
in
out
insb
adc
mov
dec
push
sbbb
nop
jo
sbb
movsl
mov
sbb
push
sub
add
repz
push
jns
mov
xor
push
pop
push
or
push
adc
xchg
jo
mov
fldcw
add
sbb
inc
add
in
push
in
sahf
repnz
iret
fs
lods
mov
xor
mov
add
jno
push
xor
jle
lret
mov
faddl
gs
divb
pop
outsb
stos
pop
lret
jp
test
outsb
cmp
and
les
loopne
push
jmp
repz
nop
ds
js
cmc
ljmp
in
data16
movsb
cli
jne
loopne
nop
pop
mov
xchg
adc
adc
aad
mov
dec
adc
jno
push
fbld
add
aad
pop
cmp
push
inc
jo
aas
mov
icebp
int3
jp
in
fadds
aas
xchg
inc
nop
sahf
mov
int
or
inc
pop
push
shll
xchg
pusha
bsr
addr16
inc
mov
sub
cmp
sub
in
mov
icebp
iret
mov
int
test
inc
cmp
lcall
ljmp
pop
pop
daa
iret
pop
jnp
xchg
cli
call
push
xchg
push
imul
stos
sbb
movsb
repnz
inc
mov
jne
mov
sub
cmpsb
jno
or
arpl
jge
repz
mov
push
add
mov
add
push
mov
jp
mov
inc
inc
andl
icebp
mov
js
inc
cmp
xor
mov
sbb
sub
ret
nop
xchg
in
mov
xchg
outsb
popf
xchg
adc
mov
jle
adc
sub
cmp
cwtl
inc
add
dec
xchg
mov
mov
adc
movsb
fs
dec
xor
and
data16
nop
inc
adc
aam
mov
jle
cwtl
sub
xor
mov
jle
jno
jno
mov
pushf
out
rcrb
adc
push
shl
pop
pop
roll
push
fistps
into
in
xor
dec
push
push
lret
movsl
xor
mov
fbstp
xchg
adc
mov
or
popa
pop
dec
scas
inc
jb
aad
xchg
and
test
push
aad
sub
adc
dec
jbe
push
pop
rolb
dec
mov
inc
cmp
in
adc
lock
bound
insb
inc
mov
xor
fs
dec
push
out
sbb
fwait
data16
stos
jecxz
jg
insl
adc
mov
sbb
push
test
std
jmp
pop
mov
aaa
mov
sbb
repz
or
fstps
pop
push
push
push
push
shlb
add
ljmp
mov
jns
dec
fistps
push
ss
cmp
cmp
aam
mov
lret
fs
stos
mov
arpl
xchg
pop
lret
pushf
adc
lds
push
js
ds
mov
pop
ret
scas
add
jnp
add
sub
dec
mov
in
icebp
sub
lret
push
jge
movsl
jecxz
jg
test
xchg
pop
lods
stc
ljmp
mov
xchg
les
test
mov
dec
iret
mov
ss
and
xor
mov
sbb
fimuls
fcompl
xchg
push
sub
adc
xchg
and
cmp
push
cli
sub
ja
outsb
and
bound
call
les
out
pop
sbbb
ss
lods
sbbb
test
negb
pop
mov
xor
push
cli
les
aas
or
jecxz
xchg
mov
inc
out
sub
and
and
pop
popa
dec
jmp
rcrb
ljmp
xchg
push
jp
rorb
or
stos
push
xor
jb
mov
push
repnz
xor
out
and
sbb
push
inc
ja
cmp
sub
sbb
push
jbe
jae
test
adc
stc
jg
std
jno
dec
pop
insl
pop
sidtl
sbb
jge
les
cmp
xchg
loope
pop
adc
out
js
dec
fisttps
stc
in
leave
pop
adc
and
ret
push
pusha
int3
dec
enter
xchg
in
push
or
sbb
push
pop
jo
jnp
adc
movsl
pop
aad
sub
sahf
es
clc
fwait
sahf
xchg
push
cld
mov
bound
xchg
incl
and
lods
xchg
jp
popa
add
aaa
sbb
shrl
adc
icebp
adc
mov
add
adc
mov
inc
lock
mov
repnz
lock
mov
cs
pop
sarl
loopne
mov
insl
cmp
jp
mov
int3
dec
lret
jne
sub
xchg
mov
pop
test
mov
and
xor
insl
test
mov
pusha
jmp
lea
xor
clc
pop
mov
cli
mov
push
inc
mov
mov
out
pop
push
lds
sbb
icebp
dec
xor
sub
out
lcall
pop
mov
sbb
test
adc
mov
mov
pop
ret
push
test
scas
or
js
pop
push
das
jne
fs
loope
sahf
inc
stc
aad
imul
jle
xor
cs
dec
es
adc
xchg
add
pop
mov
push
sub
pop
cmpsb
pop
aad
ficoml
scas
gs
inc
push
icebp
dec
aad
cltd
add
mov
lods
out
and
jp
in
test
xor
insl
mov
mov
xor
movsl
sti
mov
sbb
or
je
fwait
cmc
xor
jbe
shll
loopnew
inc
pushf
mov
xchg
arpl
sbb
fsubl
xor
or
cmpsl
shlb
repnz
jmp
aas
aad
cmpsb
mov
adc
push
in
mov
addr16
test
lea
dec
jo
arpl
dec
insb
leave
xor
les
lea
mov
inc
rol
xor
ret
pop
rcrl
imull
push
repz
xchg
mov
mov
int3
inc
mov
fisttps
in
das
lock
xor
test
pop
cwtl
insl
movsb
out
mov
adc
jle
jns
mov
mov
ljmp
inc
test
or
mov
shrb
shr
jne
push
jae
inc
gs
es
xchg
lahf
popa
or
imul
lcall
cmpsb
scas
jnp
lds
ja
popa
xchg
sbb
movsl
xchg
loop
das
lret
adc
dec
cmc
jno
movsl
repnz
fists
cwtl
movsl
arpl
and
repz
pop
and
int3
mov
lret
mov
rclb
push
nop
push
jl
lea
push
js
je
jb
adc
sub
out
pop
lea
push
xor
sub
xchg
sar
jmp
mov
mov
loop
cmp
jmp
js
jo
jge
mov
orb
cmp
lods
outsl
lods
pop
xor
fs
xor
sbb
sarb
fwait
xor
out
cmp
mov
inc
xchg
nop
pop
sub
ret
out
mov
mov
dec
ret
cmp
rcrl
cmp
aas
push
mov
mov
cmp
push
dec
rolb
movsl
xchg
mov
mov
test
ja
pop
popa
loope
push
push
dec
cmc
in
cmp
icebp
fwait
je
add
andb
lret
mov
aas
stc
pop
out
data16
add
ror
movb
push
lods
mov
movsb
mov
xchg
outsb
ja
push
fwait
bound
je
dec
sbb
push
fildll
mov
mov
negl
xchg
fsubrl
test
aam
push
jg
add
imulb
add
mov
dec
jl
stos
or
dec
adc
jae
inc
xlat
shl
je
add
iret
lods
sbb
mov
mov
fwait
inc
sbb
iret
jbe
lcall
loopne
movsb
push
pop
or
rcrl
jecxz
xchg
xor
lcall
scas
aas
pop
or
gs
not
dec
mov
cmpsl
or
dec
jge
sub
xchg
sub
loop
mov
ss
ret
inc
xor
stos
dec
xchg
mov
inc
push
icebp
jmp
xor
add
and
jge
mov
gs
pop
xchg
lods
xchg
sbb
mov
mov
sahf
cs
jae
in
nop
fstl
stos
pop
dec
inc
jp
xchg
iret
rcrb
mov
rcrb
pop
push
inc
stos
test
xchg
std
push
pop
xor
ljmp
adc
int
mov
mov
or
or
lret
mov
aaa
ds
pop
in
push
scas
or
adc
sbbb
inc
sub
mov
popf
lock
mov
into
lcall
sbb
or
fs
arpl
nop
xchg
test
xchg
adc
movsl
jne
jno
rcrl
sub
dec
or
jne
mov
out
roll
lds
stos
adc
mov
sub
mov
mov
dec
mov
sub
nop
mov
cltd
xor
sub
jo
pushf
lret
gs
push
xchg
mov
jae
or
sbb
mov
cltd
inc
fdecstp
jecxz
sahf
xor
stc
adc
loop
push
xor
dec
movsl
fnsave
or
sbbl
mov
shlb
out
repnz
hlt
mov
and
push
test
pop
inc
leave
push
cltd
adc
add
cwtl
add
lret
cmpsl
cmp
scas
inc
dec
xor
mov
push
ja
mov
and
jge
mov
add
xor
xchg
sub
cmc
arpl
fnsave
loop
push
mov
ds
sbb
push
push
push
movsl
xchg
movsb
or
xchg
jns
add
call
xor
lods
push
aam
scas
adc
sbb
ror
js
fldt
cmp
in
dec
xlat
inc
jns
and
cmc
fs
inc
mov
fisubrl
pop
in
cmpsl
stos
cmpsb
jnp
movsb
xor
lcall
mov
and
cltd
jnp
stos
adc
dec
cmpsl
jnp
adc
mov
push
jo
jnp
loop
pop
cmp
push
mov
pop
or
inc
es
inc
jnp
or
jne
cli
inc
daa
test
adc
sub
xchg
sub
hlt
outsl
shrb
outsb
out
mov
arpl
popa
push
aaa
jp
pusha
jl
int
and
xchg
aam
fildll
xor
lds
mov
xorl
xchg
stos
mov
mov
test
or
loop
test
dec
dec
incb
inc
cmp
out
xor
xchg
cwtl
pop
cmp
int
fwait
cmp
add
mov
sub
jg
call
std
ret
sbb
jnp
pop
push
mov
dec
daa
mov
stos
mov
xor
stos
subb
dec
mov
leave
add
inc
sbb
test
xlat
dec
in
and
popa
mov
inc
movsb
adcb
cld
iret
push
aad
or
daa
dec
nop
xchg
subl
jb
frstor
sti
sahf
pop
leave
xchg
push
add
sub
xchg
pop
xor
xlat
lret
stos
aam
popa
xor
popa
or
cmpb
test
and
int3
sub
sahf
pop
movsl
pop
clc
test
jge
divb
shr
insb
sbb
insb
sub
and
xchg
sub
add
sahf
push
add
dec
adc
jnp
push
out
mov
push
dec
sbb
inc
push
fbstp
jg
rcl
jae
cmp
pop
pop
xor
adc
xor
cmpsl
mov
mov
out
lcall
popf
xchg
pop
add
dec
jbe
rorl
ljmp
add
jbe
hlt
fdivrs
data16
mov
aam
rcrl
mov
sub
jg
mov
jbe
rcr
insb
test
jmp
xor
mov
sub
dec
add
mov
xchg
aas
push
aas
cmpl
sub
cltd
sub
xchg
sub
pop
ljmp
sbb
stos
jle
jg
gs
gs
cmp
dec
lahf
sub
test
imul
dec
sub
addr16
das
stos
pop
cmp
fisubrl
jae
push
jp
fdivl
mov
mov
mov
into
xor
mov
lcall
nop
into
in
adc
scas
mov
inc
push
fldt
push
iret
xchg
int3
add
sar
push
sub
mov
jb
add
into
sub
pop
mov
pusha
js
movsb
ret
and
mov
ja
bound
into
andl
and
ss
lret
out
sub
jno
adc
daa
test
pushf
dec
cmc
andb
scas
out
add
arpl
loop
rolb
jb
pop
sbb
inc
xor
sbb
pushf
jae
pop
push
bound
pop
xchg
addl
or
popa
push
imul
adc
sub
callw
ss
fs
mov
cmp
pop
int3
cli
or
mov
inc
inc
jmp
jp
daa
mov
inc
cmp
popf
lods
sahf
push
mov
aam
add
mov
or
popa
out
inc
subl
fs
mov
fcomps
jnp
ror
mov
mov
mov
lahf
sbb
in
add
inc
or
into
sub
sbb
mov
aam
sub
add
jo
cmc
inc
push
call
flds
testb
fadd
gs
mov
pop
inc
test
dec
sbb
enter
cmp
dec
mov
mov
pop
jns
movsb
scas
sub
ja
xor
fsubp
inc
cmpsl
adc
or
mov
jae
lahf
fistpll
clc
sub
ja
xchg
mov
jmp
andl
and
xchg
into
ret
cmp
and
mov
cli
scas
loopne
gs
inc
mov
pop
sub
xchg
push
icebp
cli
in
xor
aas
addr16
cmp
jge
and
xlat
dec
sbb
vpmovmskb
mov
mov
push
jp
gs
mov
add
inc
hlt
cmpsb
test
xchg
pop
mov
sarl
test
jb
aas
daa
or
out
fadd
out
inc
out
sub
pop
bnd
cmp
mov
in
mov
fcmovnu
and
cld
pop
mov
das
je
jl
loop
loope
xor
sub
je
cmpsl
dec
hlt
movsl
in
pop
push
lock
and
sbb
js
sub
fdivl
data16
push
call
iret
xor
inc
dec
outsl
xor
xor
or
lock
and
mov
adc
imul
in
and
rolb
mov
stos
test
ds
add
dec
stos
push
lods
dec
out
lret
push
jne
stos
or
insb
aam
pop
aam
mov
inc
jecxz
fs
push
dec
fstl
leave
aam
ds
pop
enter
es
mov
pop
outsl
cmc
mov
pop
xor
leave
les
pop
xchg
popa
cmp
iret
xchg
or
stos
fnstenv
xchg
sbb
sbb
push
and
add
insl
push
lcall
movsb
out
fmull
imul
pop
cmp
add
scas
pop
dec
or
aaa
inc
push
in
mov
sub
jp
and
mov
je
in
jb
dec
sbb
sti
pop
lods
jb
fdivl
movsb
mov
mov
movsb
fcompl
dec
jbe
dec
cmp
fs
cmpsl
loopne
xor
jo
push
je
mov
lods
aaa
sub
xchg
adc
das
test
test
xchg
push
mov
in
push
xchg
out
scas
outsl
decb
pop
dec
lods
fdivr
jne
or
push
push
pop
roll
pop
lret
or
pop
outsb
mov
pusha
jns
xchg
repnz
mov
and
rolb
push
or
cmp
js
aam
movsb
mov
mov
push
or
jmp
out
loopne
mov
add
stc
test
outsb
mov
pop
pop
push
jge
dec
lret
es
lret
cmpl
push
insl
das
add
scas
aam
imul
fstpt
js
push
stos
pop
pushf
into
aas
ret
test
rcr
mov
fsubp
pusha
imul
popf
lods
aad
imul
add
das
orb
pop
loope
push
shlb
mov
push
cmc
outsl
xor
adc
fistl
mov
test
push
and
mov
xor
sarl
push
outsl
outsl
insb
mov
ret
push
push
sub
push
in
inc
stos
pop
dec
lods
inc
inc
mov
shr
inc
fstl
aad
jns
lds
jmp
sahf
stos
mov
inc
and
xor
mov
push
sub
ret
lods
test
inc
test
jmp
fbld
xorb
fldt
fdivr
lock
mov
pop
push
call
sbb
test
mov
jne
dec
dec
jecxz
pop
xor
mov
push
sahf
add
pop
push
xchg
mov
movsb
pushf
out
movsl
pop
mov
insb
sub
mov
pop
aas
adc
mul
jne
lock
das
fstpl
iret
xchg
cmpsl
or
mov
jmp
pop
ret
shl
mov
push
mov
sub
xor
sub
add
xchg
fstpt
mov
push
push
sbb
in
lea
test
or
jecxz
imul
dec
adc
cmpsb
add
out
and
xchg
push
std
aad
cmp
int3
jne
test
daa
das
jo
mov
xor
outsl
dec
jp
rcrb
push
rclb
das
mov
xchg
sbb
mov
dec
and
jnp
rcrb
stc
xchg
nop
ss
and
clc
data16
cmp
fiadds
cmp
out
cmp
mov
push
ret
and
mov
jmp
cli
xchg
into
dec
jecxz
cmc
jbe
movsl
aas
cmpsb
adc
sbb
sahf
xor
out
aaa
outsl
mov
nop
fldt
xor
das
xchg
ljmp
or
pop
testl
push
jne
mov
outsb
or
mov
ss
lods
out
stos
sbb
adc
lret
bswap
jecxz
std
clc
aad
imulb
imul
pushf
andb
xchg
mov
cmp
aas
adcb
sarl
test
push
pop
sub
or
leave
mov
outsb
xor
mov
pop
iret
cmp
mov
mov
lds
cmpb
inc
je
sub
scas
inc
adc
fs
sar
ss
adc
gs
push
dec
jae
fdivr
cwtl
mov
pop
sub
out
jecxz
jo
mov
aad
mov
and
cld
in
fdivrl
nop
insb
and
int3
cmc
xchg
and
push
add
into
or
pop
call
gs
hlt
rcr
cmp
cmp
inc
aad
mov
std
cmp
filds
cs
repz
push
out
lret
cli
inc
rorb
ffreep
dec
test
xor
jbe
je
rorl
lret
xor
pop
adc
clc
jle
mov
mov
lcall
call
nop
call
inc
lcall
push
mov
inc
std
add
xor
fcmove
fnstenv
push
insl
cmpl
in
push
cmp
mov
adc
test
bnd
sub
and
adc
sbbb
data16
xchg
or
fisubrl
cltd
mov
pop
movsb
sub
add
adc
cmp
fs
cmpsl
cmp
nop
sahf
ja
xor
mov
ja
jl
mov
jge
pop
in
sub
int3
imull
movsl
mov
xor
dec
add
xchg
out
fiadds
ret
push
adc
xchg
jge
lock
sbbb
mov
es
pop
lcall
ret
sarb
das
and
mov
jmp
lret
loope
ja
imul
movsl
test
xor
loop
mov
cmpsl
mov
pop
sub
popf
mov
mov
cmpsb
jge
sbb
or
adc
repz
lock
mov
lods
stc
pop
inc
fimuls
aam
pop
cmp
xchg
jl
std
addr16
pop
and
mov
out
dec
loope
sub
jge
hlt
cmp
sbb
imull
push
dec
or
push
or
stc
mov
je
mov
xlat
shll
mov
fimuls
lahf
pop
nop
xchg
xchg
imul
push
call
or
inc
sbb
adc
xchg
inc
nop
fldt
jmp
test
push
mov
add
nop
cmp
push
mov
stos
jns
mov
mov
lret
cmp
push
das
jne
int
xlat
jb
hlt
adc
dec
sub
popa
add
insb
cmp
mov
imul
int3
es
adc
pop
std
xor
xchg
mov
push
scas
popa
mov
cmp
pop
addr16
out
lods
mov
lahf
test
mov
std
xchg
int3
lret
shlb
xor
hlt
pop
out
push
fsubr
xor
lahf
insb
aam
mov
sub
pop
xor
dec
sbb
pop
fwait
fwait
test
and
mov
push
add
jns
xlat
xchg
mov
lcall
mov
mov
shrl
pop
clc
mov
pop
in
cmp
inc
sbb
and
mov
nop
pop
out
pop
not
jmp
loop
or
jb
test
or
adc
stos
js
add
fwait
mov
jb
pop
clc
jecxz
test
test
jns
xchg
stos
push
cmp
jbe
mov
cmpsl
adc
andl
jecxz
sarl
shl
shrb
jle
mov
test
mov
xchg
or
cwtl
cmc
jge
notl
enter
inc
mov
cmp
xchg
mov
adc
andl
je
xchg
aam
fldenv
inc
rclb
dec
into
fdivs
sub
and
xor
jae
jmp
cmp
int3
push
fidivs
pop
inc
ja
es
mov
xchg
mov
popf
sbb
mov
loope
repnz
inc
mov
sbb
repz
cmpsl
mov
cmp
sbb
xchg
inc
scas
outsb
fimuls
inc
mov
sarb
and
mov
repz
sbb
xchg
xor
lea
das
gs
loop
fldl2e
dec
xor
cmp
fidivl
xor
shlb
sbb
mov
inc
ds
jg
in
repz
int
fimuls
jmp
outsb
stc
call
js
adc
int3
push
je
repnz
push
ret
js
pop
dec
lods
cli
inc
scas
dec
add
mulb
pop
sahf
pop
cmpsb
cmpsb
loopne
rorb
sub
xchg
jb
dec
lcall
sahf
cmp
ja
mov
decl
ljmp
dec
jb
xor
jl
negb
sbb
push
fistl
dec
mov
and
and
sarb
mov
movsb
orb
xchg
jge
ds
push
adc
icebp
test
rcl
in
xor
in
test
fs
and
es
ss
test
rcr
sahf
mov
add
jbe
or
je
sbbb
or
cld
pop
add
fstpt
mov
fistps
mov
mov
nop
cmpsl
push
or
inc
sub
jg
mov
cli
lds
stc
pop
mov
xchg
call
sbb
adc
xor
xchg
lock
and
out
add
les
dec
ljmp
mov
ret
mov
test
push
loop
shl
push
in
lods
lea
push
xchg
sub
xchg
and
cli
or
fstpl
jo
repz
dec
pushf
les
in
xor
call
sbb
jb
sbb
sub
mov
mov
imul
or
pushf
xchg
in
jne
stos
cld
sahf
jno
add
push
jne
mov
in
rcrl
jp
cltd
gs
lret
les
hlt
lock
fcomps
leave
sub
cld
in
inc
sub
dec
fisubrs
je
repz
stos
mov
int3
lods
aas
mov
adc
mov
cmpb
ss
sarb
sbb
pop
hlt
mov
pop
push
das
mov
mov
aaa
loopne,pt
sbb
and
das
loop
cmc
adc
sarl
sub
dec
push
adcb
mov
into
mov
mov
cmp
push
push
out
push
scas
xchg
iret
sub
or
sbb
mov
xchg
mov
mov
scas
out
adc
cltd
es
push
jae
xchg
or
jmp
jbe
nop
jbe
inc
xchg
inc
pop
insb
test
ret
fimuls
dec
xchg
hlt
in
stos
push
push
rorb
aaa
popf
mov
das
sub
push
pop
pop
loope
repnz
fs
jl
xor
fdivrs
test
shr
push
add
js
leave
inc
push
cwtl
cwtl
or
sub
sahf
arpl
jg
xor
cmp
sbb
push
cltd
and
stos
in
sub
push
sbb
cmp
and
push
dec
sbb
les
mov
idiv
pop
popf
sti
sub
call
pop
xor
push
xlat
jl
repz
insb
fists
loope
ret
ja
push
scas
sub
mov
pop
imul
leave
or
in
fistpll
inc
lds
mov
fisttpl
inc
push
loopne
rcll
jmp
jp
cmp
dec
xchg
adc
negb
push
xchg
sub
sub
pmulhuw
movsb
pop
pop
xchg
es
rolb
movsl
repz
push
lcall
mov
cmpsb
jno
bnd
mov
mov
dec
mov
mov
out
gs
add
dec
dec
dec
daa
xchg
jne
cmp
mov
or
or
pop
stos
scas
push
imul
mov
sbb
daa
movsl
popf
adc
inc
bound
push
bound
fdivl
fistl
push
outsl
sub
in
ficomps
fmuls
ss
jp
in
test
stos
jge
and
into
cwtl
push
inc
push
ja
outsb
outsb
jl
jg
lods
push
lea
movsl
rcll
jl
xor
in
hlt
pop
inc
cmp
pop
jnp
les
js
movq
aas
pusha
cmpsl
pop
mov
popa
sbb
fs
lret
rcrb
ret
adc
sub
cli
int
xor
adc
test
add
out
enter
mov
xlat
jb
idiv
mov
ffree
push
or
scas
push
and
jno
cmp
xchg
call
xchg
fdivrs
mov
test
out
cwtl
stos
flds
mov
push
xchg
movsl
add
mov
aaa
ret
les
xchg
std
roll
fs
pop
in
jmp
cmp
and
adc
pop
mov
insb
pushf
test
lea
push
dec
sarl
stos
and
js
mov
pop
adc
cmpl
loop
scas
sahf
jmp
jp
inc
cmova
nop
sbb
sub
hlt
arpl
xchg
mov
mov
mov
aas
jbe
mov
mov
out
jmp
xchg
push
bound
lahf
mov
add
mov
xchg
stos
test
xor
jle
repnz
out
lock
mov
je
inc
rcll
dec
and
out
cwtl
mov
sub
aad
je
cmpb
rclb
cmp
push
pop
lods
pop
stos
fwait
xchg
push
push
mov
xor
fisttpl
dec
jb
or
idivl
addr16
das
adc
mov
lea
into
jbe
ds
mov
pushf
or
dec
sub
stc
sti
mov
lcall
jbe
test
jl
ja
outsb
sti
sahf
and
xchg
cmp
add
xor
scas
imull
les
cmpsb
std
fldt
inc
js
jmp
xor
mov
mov
clc
pop
jb
fucomip
test
lahf
push
pop
cmp
sub
pushf
pop
cltd
cmp
push
add
add
les
cmc
and
jecxz
jns
imul
lods
ja
adc
mov
inc
fistpl
bound
xchg
or
imul
dec
push
imull
jecxz
std
fisubs
les
pop
lahf
add
jbe
cmp
sub
sub
pop
push
xor
inc
or
fs
xor
pusha
pop
mulb
add
push
mov
pop
sub
dec
inc
fstpt
inc
insl
inc
jecxz
inc
mov
sbb
and
les
addr16
xlat
or
or
xchg
out
test
push
mov
aaa
push
ljmp
iret
jecxz
sti
fdivrl
ret
daa
push
sub
lea
mov
mov
and
mov
inc
adcl
sub
mov
adc
outsb
shrb
xchg
xchg
mov
insl
push
mov
scas
es
adc
in
repz
jnp,pn
pop
pushf
data16
pusha
jno
pushf
filds
push
scas
lcall
dec
mov
inc
arpl
mov
pop
or
das
lcall
clc
icebp
mov
xlat
or
enter
cwtl
arpl
leave
push
pusha
pop
mov
cmp
mov
stc
jecxz
divb
jecxz
rcrb
pop
sub
sub
subb
outsb
mov
loopne
iret
ds
mov
sub
out
or
insb
sbbb
cmpsl
sub
gs
gs
xchg
mov
xor
sahf
sub
mov
dec
pusha
or
fnstsw
jno
out
add
jne
std
xchg
jno
cld
js
lcall
adc
and
mov
rcr
gs
movsl
out
dec
inc
push
sahf
xchg
mov
scas
ds
cmp
dec
cmpsl
lret
add
sub
lods
pop
imul
aas
pop
stc
fsubrl
sub
scas
cmp
data16
dec
cmpsb
or
jae
mov
dec
xor
inc
imul
and
add
dec
bswap
roll
lcall
in
add
into
lret
popl
sub
fstpt
clc
inc
out
or
shrb
sub
cmp
in
fs
add
sbb
pusha
pop
out
xchg
cmpb
int3
add
and
les
ret
pop
nop
cwtl
xor
pop
test
adc
jg
mov
arpl
pop
push
pop
mov
xor
clc
cmp
shll
dec
dec
loopne
je
jae
sub
adc
xor
jnp
or
inc
pop
int
xor
dec
ja
stos
iret
ljmp
iret
dec
and
pop
aad
pushf
addl
xor
jb
int
mov
sbb
int3
stos
inc
pop
and
iret
inc
lods
nop
mov
mov
loope
jge
rcl
xchg
scas
call
sbb
mov
push
push
outsl
pop
xchg
and
ret
popf
cmp
repnz
push
mov
insb
mov
jl
out
push
adc
mov
jl
cmp
call
adc
fbld
clc
mov
in
jae
inc
sbb
mov
imul
testl
aas
mov
dec
pop
mov
xchg
jmp
lods
mov
lock
mov
inc
lock
mov
dec
jg
add
xor
fidivrs
fisttps
pop
pop
stc
jnp
out
or
scas
lea
popa
into
rcrb
and
mov
mov
cltd
stc
add
js
mov
inc
int
idivl
cmc
imul
fs
push
jmp
dec
mov
inc
xchg
fildll
loope
inc
push
sub
sub
inc
pop
out
comiss
rclb
cli
mov
jne
das
mov
popa
divb
js
pusha
push
or
jecxz
mov
push
lods
mov
xchg
mov
call
in
out
movsl
out
arpl
inc
repz
fdivr
in
mov
and
fdivr
mov
into
pop
sub
or
iret
imul
cmp
or
fisubrl
loopne
jp
imul
or
or
push
sbb
repz
lcall
lret
icebp
cli
arpl
cld
lds
push
cli
add
cwtl
mov
loopne
in
lret
repz
orb
xchg
mov
inc
mov
stc
jbe
cltd
or
mov
lea
scas
cmp
jge
push
loop
arpl
sub
mov
les
inc
sbb
lock
xor
and
or
push
in
pushf
fwait
insl
nop
test
pop
stos
cmp
sbb
cwtl
mov
cltd
outsl
pop
inc
icebp
push
repnz
mov
push
cmpsb
adc
mov
mov
pop
jle
jae
jp
lock
dec
cmp
adcl
cli
mov
pop
sub
or
clc
mov
sbb
repz
pop
aad
popa
pop
fldcw
add
mov
or
cmp
mov
in
hlt
sbb
jg
daa
xor
push
mov
jns
jo
pop
jle
es
cltd
jae
pop
mov
mov
repnz
pop
fwait
adc
and
fcmovbe
xchg
imul
test
sbb
aam
add
mov
mov
ret
inc
ljmp
daa
sahf
rorl
lahf
add
popf
pop
bound
cmp
loopne
lcall
cmp
testl
ljmp
xchg
fnstsw
mov
jnp
mov
mov
cmp
enter
mov
and
xchg
cld
dec
les
inc
dec
mov
xchg
cs
jmp
sbb
pop
les
mov
inc
out
stc
sbb
xchg
dec
mov
xor
sbbb
adc
cmp
pop
or
inc
enter
dec
mov
mov
pop
call
repnz
shrd
jge
repz
test
ss
jmp
mov
pop
mov
scas
std
sbb
repnz
cwtl
and
std
adc
in
test
lea
cli
dec
js
adc
cmp
cmpl
sti
dec
mov
add
xor
lea
adc
jnp
xorb
scas
mov
leave
shrl
es
gs
xor
jmp
jmp
repz
fistpll
sbb
jecxz
cmpsb
mov
xchg
xor
in
pop
cltd
lcall
pop
xchg
mulb
loopne
adc
cmp
stc
scas
std
adc
dec
xchg
loop
in
jle
xchg
mov
movsl
mov
and
fiadds
dec
mul
into
adc
dec
dec
cmp
fs
sbb
in
mov
mov
ja
in
sub
repnz
or
cmp
mov
inc
inc
sub
jns
cmp
or
lcall
mov
ja
ja
cmp
loopne
push
dec
push
andl
cmp
ja
and
incb
mov
fistpl
fstl
frstor
sub
inc
or
mov
ret
xor
shlb
adc
imul
jmp
mov
cmpsb
out
jl
into
lock
jb
sbb
and
or
xchg
mov
addr16
pop
aaa
cmp
aam
cmp
arpl
pop
and
leave
std
int3
mov
sbb
out
or
xchg
mov
cmp
inc
add
daa
call
cli
dec
and
pop
call
in
icebp
loop
mov
jp
loope
cmp
pop
push
xchg
in
push
popa
scas
lea
insb
xchg
insb
push
dec
mov
stos
cltd
cmp
into
dec
add
rol
sbb
inc
movsl
mov
or
cmp
add
xchg
jp
push
cmp
dec
sub
inc
cmp
and
mov
inc
add
add
mov
cmp
rorb
push
jno
neg
dec
in
je
lret
insb
hlt
les
in
addb
inc
mov
ret
sahf
mov
clc
in
cmp
out
pop
mov
push
test
ds
cli
sbb
hlt
ds
scas
jle
sbb
inc
dec
popa
mov
movl
hlt
or
scas
fdivr
ret
or
sbb
jo
xor
shll
add
add
je
test
pop
push
push
jg
mov
stos
cmp
adcl
inc
dec
lahf
lods
xor
cli
lret
cli
aad
sti
lret
add
mov
enter
fwait
sub
inc
dec
cmp
mov
sbbl
lahf
aam
push
imul
les
sbb
orb
push
lahf
sub
dec
std
test
xor
dec
mov
inc
xchg
xchg
mov
pop
test
mov
cmp
pop
mov
dec
ds
sub
lock
stos
mov
pop
xor
dec
sti
sub
loope
push
pop
leave
addr16
lret
gs
sub
mov
int3
fwait
test
in
add
mov
xchg
and
ds
add
xor
sub
push
cmp
xchg
cmp
pushf
jl
fwait
pop
cmp
stc
pop
scas
inc
je
fisttps
mov
pop
arpl
cs
or
insl
rcrl
push
cmp
dec
dec
test
mov
sub
andb
push
and
sub
loope
jp
xlat
sub
push
jg
or
cmp
aam
inc
lret
jne
inc
pop
add
notl
sub
xchg
in
arpl
xchg
dec
test
adc
jb
and
in
jno
cmp
scas
jbe
imul
push
aas
fldcw
data16
loopne
xor
decl
addr16
cmpsb
es
pop
ds
xchg
cmc
mov
sbb
jle
jge
dec
push
and
popa
gs
xlat
mov
sar
adc
mov
mov
notl
sbb
inc
xchg
clc
pop
jbe
loop
mov
xor
iret
mov
dec
sub
aam
std
jecxz
imul
dec
jecxz
adc
adc
mov
lods
mov
fsubr
add
push
sbb
mov
addr16
mov
pop
inc
icebp
in
fidivrl
punpckldq
in
mov
mov
push
stc
cltd
dec
mov
adc
aaa
and
jne
in
neg
pushf
fcoms
jecxz
xchg
pop
mov
push
jo
pop
fdivs
push
scas
xor
jl
fwait
dec
xor
sbb
xchg
pop
popf
dec
outsb
xor
mov
jno
daa
push
pop
in
sub
and
test
aaa
xchg
es
imul
mov
imul
mov
and
jmp
mov
add
or
in
insl
rorl
dec
lds
jle
jp
iret
test
repz
dec
or
pusha
data16
js
popf
imul
push
mov
xor
lds
or
or
arpl
lret
inc
pop
jnp
adc
std
jns
xor
pop
jp
out
mov
imul
shrb
mov
ljmp
cmp
cwtl
or
lods
ffreep
cltd
add
pop
inc
jb
sar
imul
push
xchg
inc
ficompl
add
ficompl
push
add
sub
mov
mulb
popa
iret
js
shll
adc
pop
cwtl
filds
shll
int
inc
mov
or
jae
lods
rcll
test
sbb
imul
sub
or
and
nop
aaa
inc
popa
inc
mov
inc
ret
mov
jns
jle
fwait
or
dec
out
pop
loop
xor
arpl
mov
dec
adc
insl
faddl
xchg
fistl
push
xlat
repz
sbb
ret
ficoms
jl
jmp
jge
cmc
or
je
test
xchg
adc
add
js
movsb
adc
and
les
push
int
in
test
jle
rcrl
or
cld
dec
pop
icebp
add
lods
xchg
pop
insb
push
jno
cli
fnstenv
dec
mov
dec
jb
pop
fwait
cmpsb
aaa
ljmp
imul
cmc
mov
aam
or
scas
test
out
lods
fdiv
xchg
mov
mov
push
sub
cmp
mov
les
mov
cmpsl
cmc
jno
inc
imul
pop
inc
scas
mov
hlt
aas
or
inc
out
jae
jb
xchg
sub
pop
mov
mov
divb
xchg
inc
lret
and
mov
out
push
mov
cmp
xchg
test
scas
or
push
dec
sub
test
and
ret
ds
and
inc
jne
outsl
adc
pop
addr16
add
jns
jmp
and
inc
cs
inc
push
out
mov
push
pop
or
mov
mov
rcll
jl
icebp
xchg
sub
lcall
nop
xchg
insl
hlt
fucomp
inc
xor
data16
xlat
push
ret
adc
add
loop
ffreep
rorl
mov
outsl
out
call
stos
cmp
and
pusha
fcoml
inc
adc
fnstcw
movsb
sub
mov
and
sarl
out
jnp
or
push
cmp
mov
mov
mov
fdivs
in
and
icebp
sbb
aam
dec
outsb
enter
test
fimull
push
push
inc
in
cltd
aad
shl
xor
gs
aad
movsl
pop
mov
or
sub
cmpsb
sti
fwait
jne
fbstp
mov
sub
inc
push
cmp
xbegin
jmp
out
mov
inc
ret
cmpb
inc
mov
sbb
xor
out
or
lock
sbb
mov
lock
mov
dec
fldl
mov
mov
mov
imul
sbb
inc
pop
jbe
mov
pop
sub
fisubs
lret
mov
icebp
fisttpl
in
incl
popa
jge
mov
adc
mov
clc
jmp
movl
cmp
sbb
fwait
push
lcall
clc
das
mov
mov
and
setno
pop
pop
stc
orl
iret
sub
mov
sbb
outsl
ret
jg
ja
push
mov
popa
cmpsb
or
mov
lahf
mov
fdivrs
xor
insl
inc
mov
add
imul
hlt
xchg
test
push
pop
fistl
adc
and
fdivrp
das
fidivs
adcb
mov
xchg
push
ja
mov
xor
and
outsb
stos
rorb
sbb
dec
push
push
cld
or
jbe
test
lds
cwtl
test
cld
daa
popf
adc
int
mov
sbb
pop
xchg
dec
push
mov
sbb
ss
xlat
je
shrl
insb
bound
shrb
sbb
rcl
sarb
mov
sub
sub
jge
mov
mov
rolb
and
stos
adc
mov
fcmovnbe
addr16
push
adc
add
repz
xor
xchg
and
aam
clc
xchg
stos
test
sub
repnz
inc
dec
rorl
push
mov
push
pop
xchg
stos
or
pop
mov
fucomi
pushf
int3
aam
cwtl
cmp
jge
mov
and
repnz
ret
dec
loopne
js
clc
adc
xlat
sti
fisubrl
dec
jp
push
cmp
or
jmp
in
jae
lahf
cmp
jae
add
add
pop
lahf
cltd
cltd
imulb
dec
xor
mov
fs
rol
ret
inc
jae
cmp
addb
test
clc
lods
push
sbbl
mov
js
sbb
cmc
jno
orl
xor
lea
popa
sahf
jns
lods
ficoml
faddp
jle
jl
lods
lret
icebp
lcall
xorl
adc
adc
sahf
loopne
xlat
and
dec
lods
xchg
pop
arpl
movsb
cmpsb
mov
dec
or
iret
mov
jle
or
cmp
xchg
mov
iret
inc
dec
adc
mov
push
iret
divb
mov
test
pop
add
iret
jg
cli
push
xchg
mov
in
test
dec
jl
arpl
fwait
into
inc
movsb
mov
pop
repnz
rcll
ret
mov
mov
mov
push
scas
adc
stc
call
or
stos
stc
int3
movd
aam
xchg
mulb
dec
jle
sub
pop
inc
inc
stc
jno
fucom
mov
mov
mov
clc
out
popf
jae
adc
roll
mov
jl
mov
pop
outsb
jo
cmpsb
mov
jl
push
inc
rep
adc
imul
adc
addl
jg
dec
mov
sbbl
pop
push
adc
enter
or
outsb
cmp
mov
ss
xchg
mov
bsf
js
sub
cmpsl
hlt
jecxz
or
sub
mov
push
lods
jne
mov
js
add
loop
sub
jecxz
jbe
call
and
push
ds
fbld
mov
inc
xchg
jns
loope
add
cmp
inc
pusha
ss
add
stos
cmp
mov
push
in
lcall
sti
repz
mov
cmpsl
adc
xchg
mov
leave
daa
inc
jae
hlt
imul
xor
fiaddl
clc
insb
data16
int3
mov
sub
lahf
mov
xor
mov
rorl
test
in
inc
inc
popa
aas
roll
shrb
test
cmp
inc
pop
xchg
cmp
jle
pop
call
lods
or
cs
mov
lea
lods
jbe
fwait
insl
testl
pusha
lock
imul
in
fcoms
adc
mov
push
fiaddl
push
gs
pushf
test
dec
push
xor
mov
push
lret
dec
js
mov
jno
sub
jle
or
push
adc
xor
add
out
push
push
push
mov
je
inc
xchg
jmp
sarl
pop
jle
and
jb
mov
cs
mov
add
push
add
arpl
into
cmp
jbe
addl
imull
lock
mov
inc
inc
cmp
bound
xchg
jns
lahf
xor
fucom
lock
imul
pop
push
push
or
movsl
inc
add
jae
mov
stos
ljmp
mov
push
ljmp
xor
inc
push
loopne
outsb
mov
pusha
sbb
fdivp
mov
adc
push
lods
cwtl
pop
popa
out
adc
aas
int3
mov
xor
sbb
adc
and
lods
lods
cmp
pop
xor
jne
cmp
es
or
lods
aad
adc
dec
pop
mov
or
xchg
mov
mov
rcr
lods
leave
das
lret
loopne
adc
sub
notb
test
movsb
adc
hlt
pop
aaa
dec
xor
cmp
daa
jb
ret
aas
outsl
add
in
jne
ljmp
nop
or
insb
inc
rolb
shl
jl
jo
aas
xor
icebp
shrl
dec
fwait
roll
add
or
pop
outsb
lock
repnz
pop
pop
or
dec
cmp
fcoml
sbb
and
fcmovb
jl
sbb
fiaddl
lds
lods
xchg
jae
push
cld
push
pop
push
mov
test
and
pusha
bnd
imulb
ss
fstl
xor
inc
xlat
pop
adc
or
pop
pop
mov
xor
sbb
loop
in
lock
mov
in
jns
imul
ja
push
nop
dec
mov
iret
scas
test
pop
les
cli
das
xor
lret
pop
add
es
inc
inc
push
popf
mov
iret
pop
pop
movsb
fadds
imul
repz
daa
test
sub
lcall
es
popa
dec
cmc
add
nop
in
stc
jne
mov
lds
cmc
mov
lods
movsb
or
out
inc
push
out
out
dec
pusha
fildll
mov
adc
les
jno
mov
jnp
adc
xor
adc
ds
jge
xchg
pop
xchg
pop
mov
mov
repnz
rclb
cmp
adc
dec
daa
jmp
insb
notl
mov
cmp
mov
ljmp
mov
aad
mov
jge
daa
jbe
xor
in
test
test
leave
mov
sub
adc
pop
fistpll
jne
xchg
int3
ss
jge
xorl
mov
insb
rep
jecxz
loop
ss
cmp
cli
cmp
jp
scas
in
add
cmp
add
stc
or
or
sbb
std
inc
sbb
pop
push
scas
int
test
pop
cltd
cmpsl
mov
or
and
xchg
repnz
imul
lcall
pop
subl
mov
push
pusha
adc
test
addb
dec
inc
fnstcw
lods
dec
mov
lods
jmp
push
es
jecxz
into
sub
loop
mov
adc
cwtl
mov
jne
shl
sub
rcrl
aas
in
mov
aad
push
push
pop
push
push
mov
sahf
jne
jg
loop
in
inc
jno
xor
aam
xchg
mov
mov
cmpsl
into
fnstcw
fnstenv
fimull
mov
xchg
and
popf
adc
fdivrs
and
stos
das
in
xor
in
adc
and
mov
sti
ljmp
mov
addr16
mov
and
mov
jge
jne
fmuls
cmp
iret
sbb
push
push
jnp
and
add
out
gs
adc
xor
xor
test
mov
pop
mov
and
xchg
pushf
pop
in
adc
and
fs
stos
xchg
mov
out
sbb
cmp
imul
add
lea
cmp
jg
or
int3
sarl
lcall
stos
pusha
inc
inc
xor
sub
sbb
cmc
loope
xor
or
mov
lahf
nop
cltd
push
ss
sub
jo
mov
adc
movsl
sub
cld
mov
push
cmp
jns
outsb
ljmp
cmc
lods
lea
es
dec
mov
out
pop
sub
pop
scas
push
inc
ss
lret
adc
out
mov
or
into
iret
and
mov
dec
adc
jecxz
dec
inc
int3
pusha
jb
ljmp
clc
decl
je
iret
fdiv
test
mov
inc
xor
shlb
cmpsb
pop
mov
push
rdmsr
call
or
sub
test
cmc
fcomps
or
sbb
inc
fisubrs
xchg
ret
or
fucomi
test
inc
sbb
jne
lods
fdivr
lods
xor
fsubr
push
add
insl
lods
scas
pop
sub
pop
inc
mov
loop
xor
xchg
jo
test
add
pop
ljmp
jnp
push
outsl
mov
mov
rcll
das
cmc
or
mov
xor
adc
rcrl
ffreep
das
mov
push
jo
sub
int3
loopne
fstp
test
pushl
pop
pop
push
xor
shrl
cld
mov
push
movsl
xlat
das
add
ret
insb
movb
addr16
in
inc
testl
mov
ret
mov
inc
sbb
inc
jne
rorl
cmp
sbb
ljmp
push
lret
mov
cmp
and
iret
test
adc
mov
mov
int
scas
movsl
daa
pop
in
xchg
cltd
out
dec
fidivrs
push
shll
mov
xor
add
xchg
inc
or
jmp
iret
stos
mov
mov
xchg
pop
sub
xchg
jb
repz
pop
lcall
jbe
lock
daa
sbb
sbb
ficompl
add
xchg
or
jne
imul
inc
add
pop
jns
and
out
int3
aad
jmp
in
bound
xor
mov
push
or
mov
dec
pop
mov
jb
mov
loop
aad
ljmp
out
pop
psraw
in
jp
cmp
jno
lahf
xchg
outsb
movsl
scas
cwtl
in
xor
out
cmp
leave
fwait
push
not
push
ljmp
mov
push
mov
stc
mov
jecxz
inc
sub
dec
insb
mov
and
and
out
cmpsb
or
fstpl
mov
push
sub
bound
addr16
inc
fwait
repnz
adc
pop
aas
cmpsb
sbb
cwtl
nop
clc
cmc
lret
pushf
nop
xchg
xchg
xchg
mov
mov
fisttps
shll
in
loop
mov
or
js
fsts
inc
push
ret
cld
cmp
or
add
ret
inc
cli
mov
outsb
bound
and
in
or
mov
mov
fdivs
out
xchg
sub
push
xchg
mov
mov
mov
divb
in
mov
or
std
cltd
jo
loopne
pop
or
leave
in
mov
cmp
jae
pop
sahf
lods
xor
push
dec
jge
aad
and
xlat
out
movsl
sti
sub
or
enter
xor
loope
push
nop
aad
push
or
xor
aad
xchg
adc
fs
cmp
fmuls
mov
jge
je
sub
pop
adc
in
push
ret
arpl
cltd
pop
dec
mov
es
jp
loope
adc
jae
fwait
jne
out
mov
adc
ffreep
shlb
addl
xor
adc
outsb
rorl
mov
out
lea
out
sti
arpl
enter
in
xchg
pop
lea
push
call
in
push
and
imulb
cmp
cmp
mov
in
dec
movsl
sbb
repnz
int3
aaa
pop
lret
es
inc
push
testb
ret
pusha
mov
fldcw
idiv
add
mov
adc
sbb
jg
and
push
xor
enter
incl
xlat
inc
or
mov
fs
fs
push
call
pushl
ret
dec
jbe
cmp
enter
sbb
es
mov
enter
push
xorb
jge
ss
mov
mov
jecxz
pop
sbb
mov
mov
fistps
pop
into
addr16
movsl
push
and
daa
push
fwait
inc
sbb
test
test
mul
loope
pushf
in
xlat
outsl
or
xchg
push
jns
cmp
clc
pop
jb
pop
aas
xchg
and
ficoml
pop
leave
aaa
leave
cmp
nop
dec
loopne
or
dec
mov
out
mov
sti
pusha
addr16
inc
out
lret
mov
cltd
jnp
jne
mov
mov
out
aad
ret
sub
sti
and
ret
pushl
pushf
jle
loop
xor
push
xchg
scas
xor
in
ret
divps
imul
dec
les
or
cltd
sbbb
xchg
icebp
lods
dec
das
xor
or
dec
jl
push
iret
mov
out
ds
cltd
pop
mov
sub
pop
xchg
add
or
test
cmpsb
in
bound
pop
insb
pop
stc
dec
dec
inc
dec
jg
adc
cltd
pop
mov
dec
adc
lds
in
push
aad
inc
or
test
xor
insl
ret
pop
jp
lret
dec
dec
cli
das
xor
ficomps
jo
cmp
jmp
pop
out
sbb
pop
negb
adcb
sahf
bound
mov
inc
mov
in
mov
notb
call
jl
adc
add
cmp
sbb
aaa
cwtl
ret
cli
gs
xchg
xor
push
outsb
and
add
fsubr
lret
inc
pop
int3
mov
adc
dec
fs
scas
mov
sbb
lahf
adc
xchg
cmp
adc
lcall
inc
jge
lcall
and
orl
je
cli
pop
xor
cmp
cwtl
xor
shl
push
out
addb
aam
push
cmpsl
add
dec
or
sbb
mov
sub
lea
xchg
xchg
lea
lcall
push
aam
movsl
jle
or
hlt
dec
mov
sub
push
jns
test
out
push
ret
mov
notb
push
sub
arpl
test
sbb
push
xor
divl
rcr
clc
and
mov
rorl
jno
rcr
ficompl
or
mov
sub
dec
bound
leave
push
lods
mov
mov
push
push
xchg
sub
mov
xor
out
adc
adcl
mov
or
push
sub
xor
sbb
cmp
pop
adc
les
push
push
fisttpl
adc
jo
subl
aad
dec
adc
jle
jno
enter
ljmp
fcompl
push
out
and
loopne
test
pmaxub
or
push
or
addb
lret
mov
fldt
pop
xor
push
push
mov
push
insb
push
xchg
mov
push
sbb
push
cmp
adc
aad
decb
jae
xor
rcrb
push
adc
lods
stc
pop
jae
xchg
repz
push
nop
push
jl
dec
std
insb
jp
ret
mov
mov
lcall
fwait
test
xor
fsubrl
cmpsb
sub
mov
mov
outsb
fsubrs
jae
cwtl
mul
push
cmc
add
sbb
jne
inc
mov
rcrl
lods
xorl
popf
addr16
testl
xchg
lea
std
pushf
fcomip
push
xchg
mov
add
sub
sar
std
push
sbb
mov
mov
mov
call
into
dec
lahf
jle
sub
test
fwait
push
add
scas
adc
subl
mov
shl
pcmpeqw
push
shl
scas
sub
repnz
fsubrs
xor
sbb
insl
stc
xchg
dec
lea
mov
js
fnsave
leave
mov
les
fwait
adc
adc
fmul
icebp
enter
dec
jno
mov
stos
mov
cmp
pop
and
push
jae
push
adc
mov
pop
sbb
insb
cmpsl
out
xor
stos
filds
test
stos
popf
add
jmp
sub
xor
and
pop
call
xor
inc
adc
sbb
sbb
inc
leave
addr16
jg
and
pop
push
hlt
sbb
xchg
repnz
sub
xor
lahf
xor
mov
out
cmp
popa
jmp
push
or
sbb
repz
inc
and
dec
xor
call
and
mov
pop
sub
cmpsb
sbb
or
rorb
inc
dec
cmp
scas
and
mov
inc
add
push
add
sub
jnp
mov
mov
mov
xchg
push
repnz
pop
sbb
xchg
mov
mov
repz
xchg
push
cltd
inc
lret
push
cli
or
push
orb
lret
sbb
imul
scas
sarb
je
shl
dec
sbb
dec
sti
sub
dec
jno
stos
fwait
sbb
xchg
out
jo
fsts
out
xor
mov
shrl
push
jae
cs
pusha
mov
stos
shl
cmc
cli
lods
decl
test
dec
sbb
cltd
imul
mov
movups
shrb
cmpsb
push
dec
movsl
pop
mov
leave
cmpsb
loopne
mov
in
push
cmp
in
rcrl
loop
mov
dec
lret
jo
imul
nop
pop
cmp
sbb
xor
pop
nop
xchg
dec
fdivrl
lds
jmp
gs
push
pop
stc
mov
jne
cmc
xchg
dec
xchg
jo
add
pop
in
jae
jle
fcoml
push
xchg
sub
jb
les
cmpsb
popa
inc
fnstcw
cltd
dec
aaa
pop
adc
les
popa
roll
dec
clts
test
pop
cmp
and
pusha
xor
scas
cmpsb
and
fistps
js
jbe
insl
inc
xor
pop
stos
xchg
out
in
cmpsb
hlt
and
push
pop
pop
mov
rclb
sub
test
and
add
aaa
inc
aas
lret
loop
rclb
inc
stc
dec
sbb
stc
adc
jnp
call
push
dec
push
mov
or
fs
outsb
and
jp
jne
jne
dec
adcb
and
cwtl
or
mov
lahf
jge
mov
and
add
in
fistpll
mov
out
fnstcw
pop
repz
ljmp
into
ss
icebp
lds
adc
fcomps
jg
dec
pop
xchg
jecxz
in
mov
inc
mov
ljmp
lret
push
dec
jb
popf
gs
cli
inc
mov
add
pop
mov
jns
inc
in
pop
cmp
dec
repnz
shll
js
divl
mov
sarl
mov
stc
push
adc
inc
xor
cmp
cwtl
and
rorb
loopne
push
or
mov
fdivl
xchg
push
pushf
lret
cwtl
push
int3
fs
testl
add
add
mov
pop
imul
aam
out
sbb
out
xchg
orb
or
mov
xlat
inc
jecxz
dec
add
aam
sub
mov
jge
dec
icebp
je
test
out
je
pusha
adc
inc
jno
out
xor
das
popf
push
adc
fs
mov
cmpsb
and
pop
call
vmovhps
push
popa
jno
gs
outsl
cmp
cmp
es
in
lahf
iret
rclb
out
xchg
xor
in
dec
jmp
outsl
fsubr
mov
pop
adc
add
push
stos
mov
imul
repnz
es
cli
push
dec
lahf
clts
push
xchg
pop
setb
pop
int3
out
sbb
insl
mov
test
jg
mov
mov
adc
insl
or
jns
adc
mov
add
xchg
jge
shlb
addl
stc
iret
xchg
mov
inc
sub
ljmp
push
xchg
mov
adc
xor
jg
ror
jnp
sbb
pop
jecxz
int
and
cmp
or
inc
sti
leave
push
inc
or
jbe
cmp
sub
mov
push
jle
es
lahf
pushf
out
adc
mov
sbb
or
sarb
fwait
sub
sbb
mov
mov
loopne
sarb
dec
sbb
add
jge
mov
addb
test
mov
testl
sbb
mov
in
jns
loop
sub
mov
mov
fdiv
test
sbb
mov
mov
jl
push
jo
push
pop
fistpll
xchg
xor
outsl
lcall
ja
scas
shll
sub
cwtl
or
mov
lock
das
pop
lea
movsl
outsl
insb
xor
bound
loop
shll
sbb
ss
scas
movsb
mov
adc
call
and
pusha
add
out
repnz
int3
mov
mov
divl
sub
lds
cmp
shll
lods
in
add
push
mov
xlat
mov
loope
push
mov
repnz
fsubs
or
cmp
out
dec
mov
jbe
addr16
or
cmpsl
lahf
xchg
mov
pop
and
scas
add
xchg
dec
stc
dec
and
adc
movl
lahf
inc
add
and
lret
inc
imul
shrl
pop
scas
les
inc
push
fisubrs
dec
jno
in
inc
jno
repz
mov
cwtl
sub
mov
loopne
pop
xor
mov
sbb
xchg
int3
xor
inc
jge
and
rcll
ja
mov
sbb
push
fucomip
mov
pushf
jl
cmc
std
cmp
adc
xchg
push
mov
out
movsl
sub
stos
cmp
pop
call
sub
xor
notb
cmp
push
fstl
outsb
xchg
cld
push
sbb
jae
sub
push
jecxz
popa
loope
enter
imul
cs
movsb
jnp
dec
hlt
insl
fnop
push
jb
pop
fstps
push
in
mov
imul
cmpsb
sbb
mov
pusha
pusha
cmp
insb
cmp
fdiv
fistps
fcompl
dec
aad
in
addl
out
xchg
dec
in
fnstsw
repnz
out
bound
fwait
xchg
imul
mov
sbb
or
es
xchg
dec
or
xchg
pop
repz
sub
clc
mov
loop
ss
imul
shll
pop
mov
pushf
and
gs
lret
cld
iret
jae
push
dec
lds
sahf
jp
lds
mov
hlt
imul
jmp
fdivrs
sub
sbbl
imul
out
outsb
icebp
mov
ret
lods
ja
es
push
adc
mov
jg
out
push
dec
dec
xor
xchg
aam
inc
jo
cmp
mov
jmp
roll
stc
test
rclb
lods
xor
dec
mov
not
and
mov
or
cmpsb
frstor
mov
mov
xor
xor
scas
mov
or
loopne
pop
or
pusha
lds
push
mov
cld
or
add
out
push
sbbl
cld
pop
js
lods
sub
or
push
mov
mov
addb
andl
lret
xor
jl
jg
orl
inc
test
and
iret
xchg
cmpsl
or
mov
cwtl
shl
and
popf
inc
test
aas
sti
pop
test
pop
insb
jb
mov
jl
lock
inc
in
outsl
cld
int
or
inc
es
cld
pop
in
cld
push
idivl
aad
arpl
pop
or
add
inc
push
shl
add
daa
pxor
dec
push
sbb
cmp
sbb
int
cmp
pop
inc
mov
inc
stc
cmpsl
iret
jmp
cmp
push
movsb
test
test
pop
repz
stos
jnp
outsb
mov
or
lahf
add
shrb
inc
mov
sbb
sbbb
test
dec
fldenv
mov
cmp
test
out
iret
movsl
ficomps
push
inc
xor
cs
pop
stc
sub
mov
test
add
xor
outsl
jns
mov
sahf
mov
xor
adc
xor
adc
hlt
sbb
gs
pop
pop
sbb
inc
cmp
push
out
push
cld
decl
xchg
sbb
movsl
shl
cmpsl
add
cmpsl
adc
cltd
ljmp
out
sahf
cmp
push
fucom
imul
sub
dec
mov
jns
rcll
aad
jnp
imul
in
loop
push
inc
mov
push
dec
subb
pop
ja
gs
adc
andb
ret
xor
pop
mov
mov
clc
pop
cld
dec
xchg
adc
mov
cmpsl
mov
mov
xor
dec
rcll
jbe
icebp
test
lahf
scas
adcb
pop
fcom
cld
pop
or
fisubl
push
leave
mov
and
loop
pop
lcall
sahf
scas
pop
xor
xor
mov
fs
cwtl
xchg
inc
xor
stos
mov
data16
dec
cmovne
mov
out
insb
cs
mov
movsl
push
loope
aad
sbb
stos
lods
or
adc
loopne
and
out
testb
shll
sub
push
and
repnz
adc
sbb
sbb
ljmp
ja
shrl
cmp
push
add
sub
or
aaa
imul
mov
ss
lods
push
ficoml
loope
dec
pop
scas
sbb
addl
xchg
int
jecxz
ss
mov
cmp
xor
shll
mov
pop
sbb
inc
ret
js
bound
aam
shl
fsubrl
cmp
ret
addr16
sbb
scas
mov
jmp
mov
sbb
inc
xchg
mov
ds
ror
cld
and
and
mov
jmp
or
sbb
mov
sub
out
dec
dec
push
dec
mov
rcrl
or
and
lods
out
xchg
mov
ss
roll
mov
loope
insb
in
xchg
fwait
or
sar
mov
stos
cmp
pop
dec
mov
mov
inc
repnz
mov
mov
sub
mov
xlat
fidivs
test
adc
shlb
jnp
leave
stc
mov
loopne
mov
mov
jmp
pop
cmpsl
jg
jno
and
cmp
add
xchg
loopne
dec
mov
shr
xchg
mov
or
loopne
add
clc
add
cs
add
imul
test
cmp
mov
aaa
adc
sub
aaa
xchg
clc
mov
inc
cmp
xchg
inc
push
and
pop
lds
cmc
in
lods
lret
and
adc
sti
dec
jno
dec
xchg
cmp
fisubs
mov
imul
mov
addb
lds
ret
adc
mov
jbe
mov
jmp
fnstenv
imul
push
push
cmp
push
repnz
repz
sub
out
mov
cmpl
add
cmp
loopne
pop
sbb
lcall
pop
cltd
adc
pop
xor
daa
jl
pop
mov
inc
cmp
jae
add
cmp
or
aad
lcall
ret
bound
sbb
shrb
mov
imul
inc
cmp
sbb
mov
cltd
pop
xlat
and
jl
xor
inc
fistl
cs
stc
lds
out
outsl
or
add
pop
cltd
jb
lds
addl
mov
push
dec
pop
add
xorb
inc
xchg
ficoml
rcll
popa
daa
inc
cltd
fbstp
pop
aad
repnz
pop
punpcklbw
adc
in
mov
pop
and
rcl
out
xor
aaa
sbb
push
mov
xlat
lods
cmp
nop
xchg
mov
mov
push
test
pop
jo
pop
jle
mov
sbb
mov
test
add
mov
test
mov
or
imul
add
sbb
jb
cmpsl
xor
mov
lods
cld
sbb
lret
fs
inc
mov
test
je
rol
repnz
dec
push
fmul
xchg
mov
or
add
pop
shlb
push
movq
lods
leave
pop
jo
and
dec
push
out
popa
xor
inc
mov
mov
insl
or
push
adc
mov
subb
mov
js
add
insb
jle
pop
out
push
push
sbb
sub
lret
lea
cwtl
int3
ret
xor
mov
enter
xchg
pop
or
arpl
mov
pop
fidivrl
imul
jns
pushf
fsubrl
ss
pop
sbb
xchg
inc
pop
push
jbe
sbb
loope
ret
gs
or
lret
mov
pop
shr
pop
jmp
xor
imul
dec
xchg
imul
das
scas
and
add
sahf
inc
inc
xchg
loopne
aam
mov
hlt
mov
mov
lret
aad
negb
sub
ja
ss
sub
out
xor
mov
and
inc
inc
pop
pop
xor
sbb
adc
mov
mov
cmp
out
pop
out
outsl
sub
cmpsl
mov
dec
or
inc
push
call
stos
out
in
inc
cmc
cmpsl
loopne
adc
xchg
rcrl
dec
jge
cmp
cmpsb
in
out
push
inc
into
xlat
lods
or
xor
or
mov
push
pop
cmp
lea
in
or
xchg
test
addr16
add
push
inc
js
pop
aaa
popf
pop
xor
adc
loopne
sub
lock
ds
out
insb
pop
xor
push
lock
cmpsb
ret
test
xor
push
xor
ret
mov
ffreep
xchg
sahf
xchg
jge
stc
int3
mov
fbld
add
xchg
clc
xor
inc
sub
std
js
ja
dec
and
call
sbb
mov
mov
push
imul
cmpsl
ja
pop
outsb
sbb
xchg
enter
or
aam
arpl
out
dec
sar
dec
ret
adc
mov
dec
pusha
shlb
push
popa
mov
push
mov
jns
test
push
insb
arpl
adc
push
push
xlat
clc
ja
sbb
mov
int3
cmp
xchg
push
mov
lods
mov
mov
cmp
jle
gs
sub
jnp
push
and
sub
jno
test
xor
aad
mov
pop
sbb
js
out
adc
dec
mov
jecxz
ljmp
inc
int
add
push
or
cwtl
sbb
fmul
push
in
out
push
jmp
push
inc
sarb
sbb
mov
dec
notb
mov
lds
scas
insl
sahf
pop
inc
inc
mov
xchg
test
int3
dec
or
jno
add
cwtl
and
sbb
fmulp
or
repz
pop
in
jmp
stos
lods
push
ljmp
insb
pop
xchg
in
outsl
mov
mov
pop
mov
int
iret
jle
jmp
leave
mov
push
pop
sub
js
pop
mov
dec
fistpl
jg
pop
fdivr
inc
jp
mov
cmpl
into
lahf
add
cmc
add
jge
jmp
je
leave
es
mov
dec
jmp
rorl
icebp
adc
je
pop
sbb
xchg
ds
lds
push
lret
inc
nop
ljmp
jo
fst
push
sub
mov
hlt
mov
cmp
cmc
jae
and
mov
inc
mov
sbb
rolb
or
inc
mulb
jbe
sub
adc
add
dec
cmp
jg
xchg
flds
adc
add
lahf
xor
sbb
pusha
push
mov
movsl
aam
jecxz
push
xchg
cld
lods
xor
hlt
xchg
xor
mov
jp
mov
jmp
stos
and
adc
sbb
dec
fdivs
fwait
test
or
xchg
sub
dec
int3
xchg
push
test
subb
popf
into
cmpsl
sbb
adc
pop
or
je
in
lcall
repnz
sbb
mov
mov
mov
adc
ljmp
mov
cmpsb
rcll
jl
scas
adc
mov
prefetcht1
aaa
popf
hlt
cmpsl
cmp
pop
lcall
lods
mov
xchg
enter
mov
mov
cmp
jge
mov
lea
pop
mov
inc
pop
lock
cmp
add
stc
jle
jmp
fs
mov
fs
push
cmc
xchg
adc
mov
std
jle
and
ds
pop
xor
stc
jno
sub
or
cmpsb
adc
mov
mov
xchg
nop
rep
push
dec
popf
inc
lahf
dec
fnstenv
sub
xor
push
fs
cmp
jge
movsb
pop
xchg
cmp
pop
xchg
mov
push
push
fldcw
mov
andb
ret
lods
movsb
rolb
gs
jg
lods
enter
mov
lods
mov
dec
sarl
cmp
fisubl
add
or
dec
js
fwait
inc
mov
xchg
test
and
loopne
cwtl
dec
sub
fisttps
rcrb
ret
xlat
pop
sbb
data16
lea
pop
orl
lods
scas
out
lds
push
out
cmp
mov
xchg
shll
inc
fbstp
or
dec
testl
mov
dec
xchg
mov
leave
shll
cltd
loopne
loope
in
fstl
scas
sub
mov
dec
cmp
adc
adc
xor
fisubrl
mov
mov
int
xchg
and
addr16
sub
dec
xchg
movsb
movb
leave
ds
pop
xlat
push
fsubrs
ret
ja
xor
iret
shl
add
movsl
or
call
xchg
jno
das
inc
xchg
out
sbb
lea
push
stos
and
sbb
mov
je
sbb
out
cmpsl
jle
das
mov
jle
loope
cmc
mov
jb
adc
bound
dec
in
dec
dec
pop
nop
sbb
cmp
rcr
in
mov
pop
jae
dec
cltd
or
sub
xchg
lds
and
loopne
ja
or
ret
push
xchg
sbb
scas
faddl
jae
call
jne
xor
mov
push
aas
jmp
daa
push
inc
dec
cli
jb
lcall
shlb
and
loopne
jb
jno
fstpl
mov
pop
outsb
leave
aas
stos
pop
aaa
dec
pop
js
mov
ret
xor
adc
xchg
or
orl
enter
les
xchg
sbb
test
mov
dec
mov
mov
and
mov
lcall
pushf
inc
cmp
sbbl
jmp
decb
add
inc
cmp
lahf
lret
and
dec
outsl
xchg
sbbb
ficoml
faddl
repz
or
test
mov
aam
xchg
aas
mov
fstl
sbb
js
ss
pop
dec
cmp
and
pop
cmpsl
sarl
fstl
jo
rclb
gs
lods
dec
cltd
icebp
mov
mov
movsb
push
js
js
dec
out
ror
jno
push
test
ret
imul
sbb
mov
sub
mov
pop
dec
ja
push
loop
mov
inc
xor
ja
rorb
out
sbb
test
in
pop
push
mov
or
mov
mov
mov
sbb
xlat
add
pop
mov
dec
xchg
cmp
push
std
or
scas
lock
pop
pop
int
or
xor
inc
mov
lea
jno
pop
xchg
pop
data16
or
lcall
cld
in
repz
lcall
mov
mov
daa
call
iret
push
and
sti
inc
scas
movsl
jmp
int
pushf
scas
dec
mov
gs
xchg
mov
inc
jmp
push
add
or
or
xchg
push
jge
pop
sub
push
mov
repnz
test
mov
mov
loope
ds
sbb
jno
add
shl
ljmp
jb
rorb
mov
fiadds
add
test
adc
lods
or
ret
imul
sbb
cmp
lcall
stc
mov
mov
pop
aam
adc
add
sub
insb
jg
fs
xchg
testl
lods
adc
mov
or
push
cmp
cmpsb
mov
cmp
cwtl
pop
inc
mov
stc
dec
movsb
sahf
jne
dec
cmpl
mov
mov
in
xor
cmpsb
and
push
shl
int
lods
mov
mov
mov
xor
shrl
data16
push
mov
fldcw
outsl
mov
in
jns
int
mov
cmp
sbb
mov
lea
or
inc
and
jo
lret
sbb
lock
mov
mov
or
les
push
push
jo
gs
cmp
add
ss
jno
sahf
repz
xchg
pushf
and
scas
cmpb
test
push
push
inc
dec
or
xchg
lret
xlat
jb
lods
pusha
jle
test
clc
inc
dec
adc
popa
scas
dec
sahf
leave
lahf
test
sub
push
jp
add
and
pop
iret
sbb
jns
sub
inc
fimull
push
xchg
int
cmp
jbe
or
xchg
fdivl
pop
xchg
push
and
out
out
call
mov
imull
loopne
imul
and
cmp
decl
imul
mov
jo
leave
and
dec
xor
pusha
in
fs
lret
ljmp
inc
or
js
test
xchg
fcompl
out
jl
pop
and
and
imul
fcmovb
xlat
sub
mov
jo
movl
lods
lcall
adc
jbe
test
pop
dec
inc
and
scas
mov
mov
mov
int
mov
imul
add
cmpsl
insl
cmp
lock
inc
test
fadd
push
add
pop
test
dec
inc
insb
addr16
pushf
jo
dec
add
stos
xchg
mov
cmp
adc
js
adc
dec
xchg
mov
jle
pop
aam
es
out
push
pop
cld
mov
mov
jns
aaa
adc
int
sub
sub
sbb
mov
mov
loop
xor
pushf
xor
jp
and
pop
int3
hlt
mov
fsubr
es
mov
jne
loop
ds
dec
jle
xchg
das
mov
sbb
ljmp
cli
lahf
insb
dec
cld
lret
jle
sbb
add
and
cmp
jp
data16
inc
pusha
je
jmp
insl
out
sbb
xor
lods
arpl
loope
mov
or
adc
mov
mov
loop
in
shrl
and
icebp
inc
scas
mov
leave
lret
push
test
lahf
loopne
sbb
mov
mov
sarb
mov
pop
cmpsl
fldl
sub
add
or
inc
xchg
mov
fsubp
push
xor
out
mov
les
push
bnd
adc
pop
inc
mov
cmp
sub
sub
test
outsb
in
jnp
mov
xor
xor
loope
mov
fwait
mov
dec
mov
in
jnp
movsb
sub
data16
test
outsl
stos
stc
pop
pop
push
sub
jle
shrl
les
test
pop
ja
adc
sbb
mov
add
stos
dec
pop
movsb
mov
inc
in
pop
arpl
jo
pop
push
popf
mov
mov
xor
scas
xchg
inc
ret
aad
js
repnz
add
sbb
ja
in
mov
das
sbb
out
dec
xchg
pop
xor
negb
mov
les
cmp
xchg
or
icebp
xchg
icebp
sbb
ljmp
negl
jmp
dec
xor
les
cmp
nop
mov
test
mov
lock
out
mov
mov
rcl
push
addr16
jp
push
std
add
test
inc
into
bound
fwait
and
adc
and
add
outsl
mov
fnstcw
rcrl
out
iret
xchg
dec
adc
adcb
or
xchg
or
es
out
add
xchg
inc
mov
pop
bound
enter
jge
inc
cli
sbb
dec
ret
jp
mov
cmp
hlt
jnp
scas
push
sbb
mov
das
sub
jge
movsb
jmp
push
inc
insl
adc
push
adc
inc
setp
imul
outsl
mov
push
xchg
mov
jecxz
icebp
mov
cmp
sbb
mov
shlb
dec
scas
and
pop
xchg
mov
mov
clc
bound
add
fcmovb
rcl
push
jno
insl
sahf
add
sbb
fcompl
xchg
jne
adc
push
std
jns
scas
shrl
jne
outsb
push
lods
rclb
inc
sbb
loop
test
ljmp
stc
dec
fmull
lea
or
jbe
scas
stos
dec
addb
cmp
daa
mov
jle,pt
sarl
dec
scas
add
jmp
test
dec
repnz
mov
test
or
in
lea
sub
mov
and
js
mov
pop
in
sub
dec
arpl
add
divl
call
mov
sub
pop
inc
mov
sub
cld
pop
adc
outsb
pop
aad
push
scas
jge
loope
mov
mov
cmpsl
fnstenv
push
sbb
testl
mov
mov
cmp
sub
mov
push
hlt
cmp
sbb
push
repnz
or
leave
mov
cmp
dec
adc
pop
cld
dec
inc
or
test
xchg
and
lcall
shll
dec
clc
mov
fldl
bnd
add
push
jg
push
ljmp
pop
mov
aam
jg
jg
mov
push
fdivr
inc
push
and
cmp
std
pushl
or
das
sbb
cli
out
push
nop
mov
pop
call
xchg
out
jbe
scas
mov
rep
add
pop
xor
sub
mov
ffree
loop
dec
push
dec
imull
add
mov
push
inc
dec
shrb
movsb
ds
dec
inc
pop
das
mov
and
gs
movsb
push
sbbb
xor
adcb
fdivr
xchg
aam
adc
xorb
mov
jno
mov
pop
jmp
cmp
lods
mov
orb
sahf
in
std
call
js
stos
mov
aad
in
jmp
movsl
or
addl
and
push
mov
in
sahf
pushf
fst
adcb
sub
xor
pop
enter
xor
or
out
and
and
or
mov
push
mov
in
mov
call
loopne
mov
mov
pop
inc
xchg
jb
fadds
shll
in
fidivrl
test
pop
mov
xor
rclb
ds
pop
hlt
lcall
lods
sbb
repz
inc
sahf
jecxz
in
jle
and
jnp
arpl
mov
push
test
sarl
std
and
mov
punpckhwd
ret
sub
push
mov
rolb
mov
out
les
outsl
jp
sbb
inc
loopne
mov
int3
sbb
divb
add
ds
pop
enter
jb
lea
mov
or
dec
fistpl
or
inc
ja
movsl
shll
mov
push
popa
les
ds
stos
jb
mov
push
ret
lods
adc
into
cmp
aad
or
in
nop
fsubrs
jp
mov
jge
enter
sbb
das
call
mov
stc
sbb
mov
stc
subl
push
inc
xchg
cwtl
bound
xor
or
sbb
out
xchg
inc
inc
cmp
out
push
fildll
push
inc
cmpsl
aad
and
lds
sbb
adc
and
mov
sub
dec
rol
or
call
xlat
fwait
cmp
icebp
fsubs
jno
sbb
call
lea
idivl
popa
movsl
lahf
lds
fnstenv
fimuls
mov
negl
gs
xchg
in
lods
aaa
xchg
stos
dec
adc
cli
or
or
or
out
ret
shll
ficomps
and
xchg
je
push
stos
or
xor
sub
xlat
xchg
cwtl
mov
sahf
aam
pop
xchg
nop
pop
cmc
push
jge
mov
jecxz
xor
mov
jmp
adc
mov
pop
enter
loope
addr16
fists
dec
inc
add
mov
jle
mov
subl
dec
adc
addr16
jge
and
gs
xor
lods
stos
stc
sbb
stos
dec
data16
repnz
lcall
fpatan
push
jns
mov
inc
je
xor
xchg
lods
fcmove
je
lea
cmp
out
clc
pop
mov
xor
adc
xor
or
add
dec
test
pusha
scas
adc
mov
lods
cli
cwtl
push
sbb
mov
xor
cld
inc
stc
ljmp
ret
dec
pushf
addr16
fs
jmp
fbstp
dec
or
xchg
adc
mov
loop
mov
outsb
imul
stos
leave
inc
rcrb
mov
scas
inc
cmp
pop
xlat
mov
aam
push
sub
in
pop
sbb
xchg
cmpsb
nop
jmp
sbb
fwait
cmp
mov
mov
inc
or
jb
daa
and
les
in
in
fdiv
aaa
loope
mov
ret
push
cltd
sbb
pop
sti
out
pop
iret
xor
pop
sbb
jnp
push
test
sbb
or
fstpl
jmp
mov
cli
mov
jg
outsb
pop
popf
in
jo
outsl
outsb
push
out
xchg
pop
and
nopl
push
dec
std
ja
mov
movb
cs
rcll
xchg
inc
adc
outsl
lock
rcll
test
enterw
xor
dec
jecxz
mov
mov
popa
in
fsubrl
xchg
fwait
xchg
int3
loopne
sub
xchg
pop
sub
sbb
mov
and
ds
imul
push
push
xlat
scas
jbe
adc
ficoms
mov
add
sub
mov
js
mov
pop
aaa
enter
scas
in
adc
adc
ljmp
dec
mov
icebp
insl
and
lods
push
rcrb
fwait
data16
jl
in
and
outsb
xor
push
mov
ja
push
gs
adc
les
das
jnp
or
mov
xor
pop
jb
out
mov
mov
out
pop
enter
movsl
lock
pop
in
movsb
addr16
mov
int
repnz
cwtl
sbb
cltd
cmpsb
add
sbbb
and
xor
sbb
adc
movsb
push
dec
mov
lret
add
pop
shl
and
fidivs
dec
cli
xor
movsl
inc
call
push
mov
add
dec
stc
pushf
mov
sub
ret
jns
test
adc
pop
or
jbe
aas
or
insb
mov
lods
icebp
adc
jl
cli
aad
rol
mov
lcall
jle
cli
insb
jae
mov
rcll
sub
jmp
xchg
stos
int3
push
pop
cmp
sbb
cmp
push
aam
sub
aad
cltd
sbb
lock
enter
aad
mov
pop
popa
push
mov
mov
add
add
std
pop
icebp
mov
mov
mov
xor
sbb
loope
insb
loop
scas
shrl
pop
cmp
or
jl
mov
popf
inc
clc
in
adcl
insl
xor
repnz
mov
stos
adc
outsl
es
fwait
mov
inc
xchg
xchg
movsl
adc
sub
nop
jmp
mov
add
sub
or
and
xor
test
jbe
fldln2
jecxz
pop
clc
shlb
ret
mov
mov
jae
sub
pop
adc
push
mov
mov
mov
pop
bound
mov
push
xor
std
in
es
adc
shll
movsl
xchg
mov
outsb
das
and
push
je
popa
add
fistpl
add
inc
clc
in
push
decl
dec
fldt
and
jbe
inc
xor
aam
bound
js
mov
mov
mov
jge
fcomps
cmpl
movsl
sub
mov
pop
add
inc
test
add
jecxz
ret
test
mov
pusha
cmpb
add
mov
addr16
jae
cmc
inc
xorl
test
xlat
sbb
inc
mov
repz
mov
scas
pusha
inc
push
rclb
jb
movsl
jno
aas
sbb
pop
jp
aas
and
in
addr16
or
lret
cmp
inc
add
add
pop
mov
dec
scas
idivl
addb
movsb
jae
xor
adc
fistpl
inc
dec
dec
jg
cltd
rorb
mov
or
mov
aad
stos
jo
mov
pop
movsb
mov
cld
pop
cmp
testb
push
stc
loope
push
ds
fwait
xchg
dec
outsl
push
mov
sub
push
and
cmp
lods
lods
stos
aaa
cwtl
enter
inc
lods
xchg
jne
mov
mov
dec
lock
mov
xchg
lcall
xchg
mov
and
dec
adc
icebp
mov
lds
or
dec
sahf
push
and
sub
pop
sub
mov
adc
cld
stc
rol
pop
imulb
or
xchg
ret
arpl
pop
cmp
adc
pusha
mov
cmp
mov
fs
xchg
jns
std
adc
or
ret
ss
test
mov
mov
cwtl
aas
cmovl
hlt
dec
mov
enter
fwait
cli
popa
mov
fwait
insl
divb
jl
mov
push
mov
stc
sub
into
mov
sub
shl
xchg
rorl
pop
lea
mov
arpl
fistpll
jecxz
jp
pop
imul
mov
sub
stc
lret
imul
popa
xchg
dec
aaa
ss
and
sbb
adc
jle
ret
inc
cmp
out
mov
xchg
ret
fbstp
roll
mov
imul
cld
or
mov
incb
mov
popa
ds
mov
xor
push
inc
ret
hlt
test
out
lcall
fbstp
mov
sub
aad
sub
pop
aad
cmp
mov
jno
jo
int
ret
dec
adc
pop
div
in
int3
nop
das
into
jge
sbb
bound
das
mov
jno,pn
lds
mov
dec
sti
mov
scas
lret
jp
lret
fs
push
add
lods
pop
push
push
push
roll
push
out
sarl
or
and
add
mov
out
mov
int3
outsl
lods
repnz
lods
addr16
xor
cmp
hlt
mov
or
sbb
rol
or
sub
sbb
std
insl
pop
stos
movsl
xor
mov
stc
xlat
std
fdivrs
mov
fsts
test
mov
push
daa
pop
cmpsl
jno
cmp
arpl
mov
xchg
push
fildll
sbb
jbe
in
out
hlt
sbb
mov
and
rcrl
mov
pop
leave
clc
dec
int
jbe
mov
fsubl
pshufw
mov
cmpsl
lock
pop
loope
add
cmp
mov
fsts
jp
mov
xchg
pop
adc
add
sub
fisubl
or
cmpsl
and
pop
inc
or
lret
pop
std
and
lds
jp
int3
jecxz
push
aad
das
jns
lock
pop
and
sub
mov
popa
imul
jmp
or
inc
sbb
test
mov
cltd
shrb
cmc
test
lods
push
jl
fmuls
idiv
jns
mov
bound
lret
leave
outsb
out
popf
loopne
inc
lahf
and
mov
and
pushf
inc
sbb
clc
insl
call
xlat
mov
shlb
cmp
mov
cld
jns
add
push
movsb
repnz
mov
pop
dec
test
out
add
stc
inc
sti
mov
jecxz
xor
inc
inc
das
xchg
sarl
int3
mov
cmp
insb
fimuls
pop
mov
ss
mov
popa
mov
cmp
pop
popa
xchg
repz
jle
jns
adc
repz
inc
push
add
nop
cmp
pop
xor
and
test
push
hlt
mov
inc
rolb
shl
cmpsb
faddl
in
pop
test
sub
ficompl
out
jb
aam
push
pop
jnp
xor
sub
sbb
test
xchg
loopne
pop
in
es
sbb
inc
or
cmp
loope
sub
mov
mov
pop
insl
aam
xor
pop
ds
sub
mov
daa
xchg
jl
mov
fnsave
in
adc
in
jecxz
mov
cld
jnp
int3
cld
fwait
ret
mov
mov
movb
idiv
dec
in
int
mov
lods
mov
clc
push
lcall
jl
out
sub
push
xor
jle
loope
shrb
scas
push
cmp
out
cmp
scas
cltd
push
add
stos
cmp
xchg
jle
cmpsl
adc
loopne
int3
popa
sub
cmp
xchg
sahf
mov
sarl
fdivl
lods
or
andl
lods
and
mov
mov
mov
cmp
xor
cmp
xor
jg
xlat
push
sti
fstps
aad
cmc
movsl
mov
push
mov
xor
jl
aad
add
mov
sub
in
jns
jp
out
xor
xchg
ja
pop
bound
dec
gs
inc
mov
bound
lods
xchg
repnz
or
inc
popa
icebp
ss
jns
mov
rorw
xchg
fs
cltd
add
fbstp
pop
fildll
lods
int
iret
push
xchg
pusha
ds
jl
xchg
adc
dec
repz
xor
sbb
add
out
out
mov
ss
xchg
nop
dec
mov
jge
aam
xor
adc
xor
mov
cmp
mov
mov
push
daa
dec
pop
lods
adc
movsl
lea
jle
lahf
enter
mov
or
pop
cmp
push
push
loopne
mov
ja
mov
push
arpl
loopne
xlat
xchg
or
rorl
test
pop
icebp
push
jmp
xchg
arpl
cmc
pop
in
lea
mov
mov
sarb
xor
adc
lahf
mov
popa
pop
movsl
lods
jnp
cmpb
and
xchg
mov
ss
push
andl
add
popa
ret
pop
ljmp
pop
rcrb
mov
out
test
mov
or
test
jne
lret
outsb
shlb
iret
fwait
ja
lds
dec
pusha
mov
xchg
lock
aad
lock
sar
xlat
add
mov
adc
or
mov
jo
or
sbb
cmp
ret
mov
pop
into
dec
leave
pop
push
pop
shr
dec
ss
and
add
add
mov
dec
test
ret
or
xor
xchg
jle
cmp
push
cld
test
xor
sub
outsl
xor
push
jmp
popf
dec
dec
cmp
xchg
cmp
mov
cmp
inc
sub
mov
inc
repz
scas
jmp
cmp
lcall
ds
outsb
jmp
jns
lahf
scas
testb
and
nop
insl
in
loop
mov
addl
call
fnstcw
or
mov
xor
dec
xchg
in
or
jp
add
testl
and
test
adc
adc
mov
mov
mov
shl
mov
dec
int
xor
add
repz
or
push
fcomps
mov
pop
push
jl
lahf
cli
add
cmc
out
lds
sbb
push
pop
pop
cs
adc
xchg
pop
nop
push
sbb
jg
test
lahf
push
hlt
inc
pop
mov
repnz
sbb
test
aam
arpl
sbb
fsub
leave
sub
popa
cmp
adc
push
call
out
xor
jns
stc
sbb
jno
cmp
idivl
popf
xchg
add
mov
mov
cmp
push
mov
and
out
aaa
insb
in
cld
pop
lret
je
mov
jns
push
inc
add
icebp
fnstenv
inc
ret
shll
insl
add
cmp
adc
les
push
ficoms
jge
shll
das
fsincos
and
sbb
lods
xor
das
inc
rcr
dec
aad
and
aaa
push
popf
rorl
cmp
aad
xor
bound
push
enter
scas
test
je
je
xor
js
or
icebp
xor
in
ret
repz
and
xchg
push
pop
scas
mov
dec
push
dec
jp
cmpsb
mov
pop
pop
std
faddl
jbe
jo
add
call
dec
xchg
cmp
mov
rorl
movsb
inc
cwtl
hlt
popf
or
mov
out
adc
imul
add
lahf
test
pop
imul
aad
mov
sub
adc
push
sub
xchg
lock
dec
mov
inc
jle
lds
das
inc
mov
aad
not
cmp
pop
mov
lcall
orb
clc
aam
movsb
dec
es
cmpsl
mov
loope
xor
xchg
adc
inc
push
lock
jne
mov
jp
mov
jecxz
dec
fdiv
mov
push
scas
ret
rorb
out
cmp
rcrl
jl
jge
adc
pop
xchg
mov
es
push
mov
mov
ror
mov
pop
cmc
jg
xchg
std
outsb
inc
cld
rorl
mov
fwait
push
jbe
dec
cmp
outsl
lcall
adc
dec
and
mov
mov
orb
and
inc
rcrw
arpl
jecxz
mov
cwtl
jb
xor
dec
mov
inc
imul
ja
or
fcos
sbb
lret
lahf
imul
sti
mov
xchg
sahf
lcall
lock
ret
push
sbb
dec
add
pop
and
mov
jbe
fidivrs
inc
fiadds
cmpxchg
outsb
rorb
mov
int
pop
or
test
push
sub
add
shlb
nop
and
cwtl
jge
inc
xor
sub
add
fdivl
lret
mov
outsl
loopne
inc
lret
jle
and
pushf
test
nop
negb
faddl
dec
lret
arpl
push
dec
inc
push
lahf
jae
dec
jmp
loop
sti
sbb
jne
pop
iret
xchg
jbe
mov
xor
cs
rep
add
lods
jge
dec
add
mov
in
ret
or
mov
jne
loope
add
in
xlat
mull
fldcw
scas
repnz
insb
shrl
xchg
bound
inc
push
lret
out
fildll
xchg
outsl
mov
in
pop
sti
push
mov
adc
push
int3
arpl
int3
mov
imul
dec
xchg
inc
call
out
or
repnz
push
cmp
aaa
or
cmpsb
xchg
sbb
mov
cmp
rcl
cmp
xchg
shr
jae
mov
cmp
aas
popf
pop
mov
or
ret
je
xchg
mov
xor
mov
cmp
mov
das
xor
mov
test
xchg
shlb
sub
xor
xchg
movsb
pop
sbb
lods
cmp
mov
outsl
outsl
repz
sahf
ljmp
xorl
xchg
jae
scas
seto
shrl
imul
pop
out
sahf
idivl
daa
mov
mov
jmp
jnp
mov
loop
pop
pop
pop
daa
xchg
mov
cltd
or
gs
scas
jle
icebp
xchg
sub
call
das
imul
push
rcll
push
xchg
test
loope
adc
xor
mov
rcll
cltd
cmp
testl
shr
push
addr16
pop
xor
dec
in
data16
cmc
cmc
test
pop
dec
adc
fmulp
cmpsl
push
iret
xor
shr
adc
lret
lock
pop
inc
arpl
inc
pop
stc
sub
push
cmp
mov
mov
test
mov
ja
mov
add
fcmovnu
mov
jnp
or
iret
inc
cmpsb
sub
jo
das
insl
test
rcrb
inc
push
lea
push
inc
push
in
mov
scas
arpl
xchg
push
popf
push
sbb
cwtl
mov
es
mov
xchg
and
dec
xor
sub
mov
mov
sahf
and
jo
and
inc
lea
dec
pop
jl
jmp
aad
add
imul
call
cwtl
icebp
sub
sub
sahf
stc
mov
in
sub
ds
dec
inc
repz
push
pop
mov
adc
xchg
pop
pop
pusha
std
or
pop
lock
mov
cmp
or
cmpsl
jnp
sbb
cmp
or
and
xor
loopne
cs
adc
sub
mov
mov
sti
mov
cmp
sbb
pusha
js
xchg
lcall
mov
cmp
pop
sub
popf
xlat
loop
pop
js
mov
aam
dec
push
insl
sub
cmp
cmp
fsubl
pop
xchg
jg
cltd
inc
xchg
test
push
fst
ret
push
dec
out
test
mov
sub
outsb
sti
push
or
xlat
and
and
lahf
push
sbb
out
test
pop
push
mov
sub
mov
xchg
cld
mov
push
stos
cs
or
lock
xor
imul
or
adc
push
lret
xor
push
stc
pop
lea
dec
xchg
jge
inc
cmp
push
jno
sbb
cli
sbb
cmp
add
mov
add
cld
adcb
push
push
outsb
or
mov
jge
call
mov
or
or
mov
dec
add
scas
push
fadds
mov
std
lods
inc
mov
icebp
pusha
or
fcomi
or
inc
test
and
or
dec
mov
xchg
shll
add
xchg
mov
add
pop
insl
fisubl
xor
ss
inc
dec
ret
xor
lock
aas
add
push
adc
adc
je
das
sarl
pop
jb
cwtl
cmp
cmpsb
aad
dec
or
ret
push
mov
pop
mov
and
sti
scas
call
fsubl
fdivs
data16
or
arpl
jne
pop
push
cmp
push
xchg
pop
fcompl
sbb
and
and
sahf
pop
xor
push
and
fidivrl
stos
pop
xlat
cmp
adc
cli
out
adc
mov
das
pop
mov
mov
sbb
stos
sub
stc
xchg
xchg
xchg
pop
sub
lods
int3
xor
ds
cmpsb
pop
shl
lea
jo
cltd
in
and
mov
movsl
adc
inc
push
add
jbe
jle
mov
das
out
jecxz
mov
xchg
cmpsl
int
test
ret
and
out
idiv
xor
rclb
jmp
and
xlat
inc
es
jne
cwtl
mov
in
sub
addr16
inc
mov
imulb
dec
dec
xor
xor
repz
and
and
arpl
push
mov
cmova
cmp
fs
or
fidivrs
or
fwait
push
popf
push
jl
pusha
cmp
lock
xor
mov
sti
pop
decb
pop
pop
data16
test
dec
sub
xlat
and
jno
mov
mov
adc
sub
mov
xchg
push
pop
movsl
shl
mov
adc
mov
and
ss
rcll
cmp
xchg
rcll
mov
or
out
cli
or
hlt
adc
in
and
orb
gs
jne
lahf
xor
loopne
pop
int
dec
pop
dec
imul
mov
dec
movl
inc
xor
cltd
aad
mov
mov
repz
mov
dec
aas
cltd
cltd
cltd
adc
and
pop
sahf
xchg
aad
lock
xchg
aas
jmp
imul
sub
iret
xchg
pop
test
nop
popf
je
in
sarl
mov
out
mov
js
sub
xor
mov
fcmovu
sub
bound
xchg
ds
orb
adc
loop
dec
daa
insl
mov
mov
fwait
jnp
lock
xchg
addr16
pop
addr16
out
test
xchg
xchg
rolb
insb
fnstenv
pop
ja
mov
push
pop
in
adc
out
or
and
push
lret
or
push
xchg
ds
rolb
inc
push
cmp
dec
mov
xor
dec
outsl
stos
ss
pop
in
repnz
hlt
jg
repz
inc
cmpsl
xor
push
inc
addb
mov
insl
test
les
in
pusha
push
les
es
cli
adc
cs
jmp
out
xor
push
test
mov
enter
push
add
inc
jno
out
fwait
mov
xchg
ss
arpl
adc
int
mulb
inc
mov
sbb
ret
das
out
or
repnz
fistps
push
enter
mov
nop
mov
aad
pop
xorb
and
mov
add
mov
jne
or
xchg
popa
cld
jb
mov
lcall
stos
add
mov
lcall
mov
cli
pusha
sub
mov
mov
aam
and
push
mov
lods
out
shrb
xchg
inc
sub
test
lret
cltd
outsl
push
setae
mov
mov
fnstsw
jmp
jbe
ds
outsl
lahf
jno
nop
adc
insb
leave
mov
rcrb
inc
jb
in
into
gs
icebp
mov
shr
sti
pop
add
fs
sbb
and
jns
mov
adcb
jge
arpl
mov
mov
jecxz
inc
inc
imul
push
lahf
jle
repz
lock
stos
popa
mov
mov
imul
and
scas
xor
fisubs
pusha
fisubl
fcmovbe
mov
dec
rcll
pop
mov
dec
mov
dec
dec
push
fbld
mov
pop
inc
xor
pop
cmc
pop
mov
pop
addr16
js
scas
sbb
cmpl
cmpsl
pushl
pop
mov
pop
stos
jbe
sbb
lea
arpl
mov
shll
jbe
mov
das
pop
mov
loop
gs
dec
xor
mov
scas
dec
pushf
mov
in
xor
call
mov
or
scas
int3
xor
stos
mov
fs
out
push
push
into
mov
ds
rclb
pop
or
jbe
bound
inc
data16
or
jg
sub
pop
loope
ds
rorb
xor
xchg
fs
insb
fcmovnu
xchg
pop
sub
lea
push
add
ret
push
and
mov
pop
xchg
cmpl
ss
dec
xchg
adc
mov
inc
movsb
loopne
sbb
lods
push
mov
daa
and
mov
pop
cli
pop
xor
jmp
fwait
jmp
mov
lock
test
lods
aad
dec
loope
xor
and
jp
add
push
mov
jmp
aas
mov
and
dec
cmp
xchg
and
jns
lret
push
js
les
cmp
mov
outsb
inc
fistpll
adc
lock
xchg
aad
inc
or
test
fs
ret
lret
push
sbb
mov
dec
and
or
jb
iret
cmpsb
cltd
xorl
sub
cltd
mov
lahf
in
sbb
xchg
sahf
stos
dec
mov
popa
adc
cmpsb
inc
fildl
lret
mov
adc
ror
xor
mov
cmp
sub
push
inc
stos
add
xchg
xchg
mov
in
popa
xchg
fcmovnb
in
xor
not
mov
scas
cltd
xlat
aaa
icebp
mov
sbb
sub
cld
cmpb
shll
bound
jae
ret
subb
addr16
xchg
sbbb
xchg
outsb
mov
mov
stos
or
jg
push
dec
lods
out
int3
repz
xchg
cmp
jae
xchg
mov
out
dec
and
cwtl
imul
push
sbb
fcmovbe
or
xor
les
rcrl
pop
cli
int3
aad
lods
rcll
or
cmp
jo
dec
pop
es
inc
cmpb
mov
xchg
mov
bound
sahf
pusha
std
das
xor
test
or
push
jne
dec
adc
orb
and
jmp
add
mov
jle
sbb
cmpsb
fstl
loopne
ror
ss
mov
jp
cwtl
icebp
std
mov
dec
mov
idivb
jo
pop
cli
pop
ljmp
enter
int
mov
in
mov
dec
movsb
leave
aaa
and
mov
mov
adc
sub
adc
mov
xchg
dec
and
sbb
pop
mov
mov
rcl
cwtl
xor
mov
mov
lock
inc
mov
mov
pop
outsl
jle
mov
or
mov
fsubrs
xor
out
pop
mov
enter
aaa
mov
ljmp
in
mov
aam
cltd
int3
push
and
sbb
xchg
mov
mov
and
inc
outsb
mov
das
leave
sub
jne
and
add
mov
push
sub
psrlq
mov
mov
mov
out
cmp
sub
pop
cmc
insb
push
into
cmp
std
mov
call
mov
pop
imul
ret
jmp
cmpsl
out
movsl
push
je
cmp
cmc
dec
pop
daa
mov
or
xor
sub
scas
inc
pushf
or
fs
icebp
adc
adc
adc
jmp
loope
and
test
out
das
fcomps
dec
fistl
adc
out
jmp
add
outsb
cmp
inc
push
int3
inc
push
stos
pop
cmpb
jle
popa
fmul
xor
jl
sbb
daa
or
lods
jmp
mov
inc
add
ror
adc
add
dec
out
cwtl
mov
mov
adc
xchg
inc
in
push
jle
icebp
dec
into
cmp
or
xchg
cmpsl
xchg
pushf
leave
push
xchg
or
in
pop
int
call
jle
and
xor
dec
xlat
outsb
scas
cmp
mov
adc
push
pop
sub
push
mov
adc
mov
mov
pushf
mov
and
dec
test
xorb
test
and
in
stos
or
xchg
push
cmp
inc
popf
jle
arpl
mov
mov
inc
inc
in
adc
mov
aas
imull
stos
daa
or
roll
push
outsl
lods
lock
jns
out
sti
mov
fucom
adc
jbe
or
jge
mov
cmpsb
sub
add
inc
imul
loopne
cltd
repnz
jge
mov
mov
ljmp
pop
adc
fdivrs
or
in
notb
sti
sub
movsl
push
roll
fstl
cmp
out
mov
shrb
cmc
sarb
loopnew
xor
mov
mov
js
xchg
rcl
or
insb
sub
sub
fstpl
xchg
pop
add
mov
xchg
jg
adcb
mov
xchg
mov
je
int
adc
hlt
pop
mov
push
push
ret
imul
sarl
add
iret
sbb
mov
outsl
sbb
movl
xchg
push
mov
pop
pushf
push
dec
add
jp
js
and
jg
and
loopne
shlb
movsl
or
or
mov
sbb
aaa
pop
dec
fwait
leave
jae
inc
mov
movsb
ret
xchg
xchg
lods
mov
imul
test
sbb
push
int3
ljmp
add
les
lret
out
jns
call
sbb
mov
aad
mov
jl
aas
inc
mov
dec
fsubrp
shlb
xchg
push
and
int3
outsl
pop
jnp
mov
dec
xchg
dec
out
lret
les
sbb
dec
push
fwait
push
cmp
xor
mov
mov
div
xchg
sub
dec
cltd
xchg
sbb
jg
push
lahf
and
int3
es
push
lods
imul
xchg
jmp
filds
das
push
iretw
or
mov
jo
pop
jo
add
mov
or
fnclex
mov
xchg
hlt
in
jbe
into
add
jmp
pop
and
sti
test
cmc
adc
pop
sbb
xor
jb
and
xchg
hlt
xchg
push
loopne
cmc
stos
push
dec
stc
add
mov
sbb
repnz
ds
aaa
ja
mov
add
imul
jge
lahf
cmpsl
adc
mov
roll
mov
loopne
and
sti
enter
popf
pop
shlb
jmp
pop
sbb
in
jecxz
dec
dec
adc
push
int
mov
pop
jbe
cs
testb
sub
add
sub
push
inc
leave
aaa
pop
hlt
mov
ret
cmp
adc
ret
jle
in
push
sbb
ja
xchg
mov
fnstcw
xchg
pop
push
insb
pop
push
sub
int
fidivrl
dec
push
nop
out
push
jle
sbb
mov
hlt
pop
insl
jno
adc
aas
push
mov
mov
inc
pusha
cmp
sub
pop
clc
cltd
sarb
mov
test
pop
jb
add
shrb
lcall
push
pop
pop
loopne
pop
mov
dec
inc
testb
imul
sub
int
xor
paddsw
test
jbe
ja
sbb
ss
cmp
icebp
xor
dec
dec
scas
fnstenv
or
subb
lahf
lock
mov
popa
inc
pusha
test
dec
push
in
cmp
and
jnp
push
ds
sarl
xchg
push
mov
scas
insl
cmc
or
mov
sub
stc
inc
push
xor
adc
push
xor
bound
xchg
rcrl
fcoms
xchg
fdivs
adc
push
aad
or
cmp
jo
jge
mov
jmp
push
xchg
jnp
insl
pop
enter
xor
in
ja
decb
movsl
loop
jp
scas
loope
add
into
push
loopne
sbb
adc
sbb
ljmp
lret
test
push
jae
mov
sti
pop
push
insb
inc
mov
xchg
mov
mov
mov
cmp
jo
test
dec
jl
fisubrl
cmp
push
into
aaa
std
shll
mov
cmpsb
and
data16
sub
es
cs
fwait
inc
bswap
jno
push
lret
movsl
lea
test
fiaddl
mov
xchg
push
scas
adc
mov
enter
xor
in
dec
cs
imul
cmpsl
outsl
lods
sub
push
mov
lret
into
add
mov
sahf
jecxz
fstl
pop
loopne
jae
into
and
in
mov
fwait
outsl
adc
pop
stc
fcoml
fcmovne
lcall
mov
pop
insb
add
inc
repz
or
pushf
lods
jg
jnp
mov
pop
add
adc
leave
inc
pusha
sub
das
int3
xchg
into
adc
mov
cmp
mov
sbb
and
mov
jne
arpl
or
mov
jmp
pop
mov
pop
xchg
pop
inc
gs
or
fisubrl
cmc
in
pop
inc
mov
iret
jp
cmc
cwtl
rcll
and
dec
int3
fmulp
lcall
imul
mov
mov
jecxz
xor
arpl
fsub
jp
sbb
xor
test
data16
adc
xor
pop
leave
add
jl
stos
popf
sarl
sub
sbb
xchg
addr16
dec
mov
cmp
sub
loopne
out
push
daa
jmp
aam
int
inc
push
lcall
push
mov
nop
addr16
loop
rcr
add
pop
cmp
mov
lods
jb
pop
sub
mov
fcomps
leave
xor
aaa
loop
jo
pop
fistps
ret
or
aas
inc
int3
inc
inc
dec
cmp
mov
lret
push
sahf
pop
mov
add
push
call
into
filds
mov
sbb
cmp
add
scas
xor
loop
add
lea
jecxz
sbb
sub
xchg
ss
jo
loop
xchg
pop
outsl
sub
outsb
xor
dec
int
pop
and
jns
in
in
iret
cmpsb
sbb
movsl
inc
inc
add
test
jmp
sbbb
es
jae
scas
aaa
enter
stc
jno
fstpt
xchg
lcall
arpl
sub
pop
push
pushf
addr16
lretw
adc
mov
ds
dec
mov
dec
aas
push
nop
push
imul
ret
push
cmpsb
movsb
xor
mov
outsb
mov
int3
cmovne
cli
cwtl
leave
dec
bound
push
and
dec
mov
sbb
dec
xchg
insl
stos
lahf
sub
xchg
mov
addr16
xor
insb
sbb
mov
xchg
stc
or
fdivl
push
iret
jns
mov
push
sub
sahf
int
imul
imul
sbb
add
xor
jnp
cli
icebp
sbb
and
jae
sub
daa
arpl
leave
out
pushf
mov
and
and
popf
out
pusha
ds
pop
adc
mov
pop
and
call
in
fs
rorb
pop
call
stos
xchg
add
sub
lahf
sbb
inc
in
adc
mov
cmc
rclb
and
adc
cs
sahf
lcall
test
mov
in
jnp
or
sbb
sbb
xor
cwtl
mov
int3
inc
sti
and
mov
mov
pop
cmp
mov
addr16
mov
clc
push
sub
mov
pushf
lahf
mov
les
nop
ss
mov
or
imul
xchg
xchg
mov
pop
add
sbb
sub
mov
xchg
xor
push
cld
aas
test
mov
gs
sub
jae
mov
lds
hlt
aas
and
lret
sub
sbb
xor
inc
inc
xchg
btr
xchg
dec
or
scas
pop
lds
lds
ljmp
push
out
pop
adc
jno
ljmp
ss
sbb
mov
push
je
out
fimuls
jg
or
sub
movsl
fwait
imul
rcrl
sbb
push
lahf
movsb
bound
xchg
fisttpll
lahf
cli
loopne
mov
and
mov
inc
addl
scas
adc
out
dec
decb
mov
das
imul
fxch
sub
push
roll
call
out
mov
xlat
jnp
cld
and
push
movb
push
js
ficompl
dec
push
int3
adc
es
xor
mov
and
inc
add
sti
sbbl
sub
mov
arpl
inc
inc
ret
ret
repz
clc
mov
imul
jg
push
in
and
fldenv
inc
cwtl
fidivrl
cmpl
ffree
or
es
mov
pop
cmpsl
stos
inc
stos
icebp
out
or
mov
std
dec
pop
mov
jmp
cmp
stos
loop
mov
dec
sti
push
jns
cs
pop
scas
lea
or
es
add
imul
loop
mov
mov
dec
mov
lds
xchg
shlb
jge
enter
push
push
jno
out
pop
out
mov
pushf
jge
fistpll
in
ds
cmpsb
cmp
movsb
rclb
pusha
dec
xor
sti
pop
pusha
ss
jns
pandn
gs
dec
divl
mov
test
and
inc
clc
add
dec
mov
add
nopl
std
mov
sahf
call
in
pop
aam
pop
dec
inc
test
cltd
je
pop
lock
sahf
jmp
sub
lret
sbb
cmp
mov
lret
ss
ffree
xor
mov
jge
dec
and
xor
adc
mov
xchg
int3
xchg
fsub
inc
cmpsl
lcall
stc
sbb
inc
xor
int3
test
adc
or
jecxz
ds
pop
sub
clc
xchg
stc
shl
mov
cltd
ret
lods
ljmp
shrb
call
xchg
sti
sbb
jle
sub
cmc
cmpsb
sub
mov
pop
xchg
icebp
addr16
sub
dec
push
mov
dec
pop
mov
mov
mov
fisttpl
scas
xorl
adc
pop
mov
aam
mov
jge
mov
sbb
mov
out
enter
add
jp
xor
rclb
stos
fs
push
les
mov
xchg
mov
dec
js
xchg
push
push
jns
cli
fcmovnu
sti
daa
inc
push
mov
lods
jno
dec
cmp
pop
rorb
lods
xchg
je
cmp
gs
dec
or
ljmp
pop
insb
je
out
ljmp
sub
scas
and
add
ret
data16
ljmp
mov
xchg
neg
and
arpl
xchg
iret
fnstcw
pop
ret
std
in
test
jmp
lret
jmp
int
xchg
or
mov
fsubr
ds
aas
scas
aad
cwtl
js
xor
mov
add
pop
sub
inc
jge
stc
stos
and
xchg
mov
sti
scas
xlat
clc
ljmp
jae
pop
std
push
addr16
movl
aad
ljmp
inc
icebp
ret
fcmovnu
lods
inc
mov
pop
enter
push
dec
jg
insl
call
enter
xor
jl
mov
dec
hlt
stos
push
pushf
outsb
leave
call
popf
es
jno
in
add
pop
aad
and
cmpsb
jg
xchg
jne
ret
int
inc
insl
je
jp
jmp
jmp
sub
imul
stos
xor
std
or
ljmp
dec
hlt
imul
repnz
or
add
xchg
sti
nop
mov
fnstsw
bnd
je
jae
mov
mov
pop
xor
mulb
adc
loope
shl
mov
aaa
inc
or
fdivr
mov
jo
cs
and
pushf
ljmp
sub
iret
push
out
or
jg
dec
sbb
movsl
sub
adc
paddd
and
movsb
push
and
dec
mov
call
add
cli
or
add
lret
xchg
je
mov
and
stos
cmp
add
push
in
testb
rclb
and
cs
jbe
test
adc
jecxz
cmpsb
clc
adc
mov
dec
aaa
mov
mov
pop
outsl
outsl
jecxz
sbb
mov
leave
dec
sti
mov
mov
add
pop
inc
and
and
sahf
cmp
dec
push
dec
test
adc
scas
adc
fisubl
push
ss
mov
lock
xor
ds
cmp
mov
dec
cwtl
cmc
test
aas
aam
cmp
filds
loop
pop
flds
fldt
jl
mov
mov
imul
jnp
leave
dec
cmp
mov
sbb
jg
jae
call
stos
pushf
sub
or
xor
ret
sbb
or
fcompl
sahf
pop
aaa
adc
icebp
add
dec
outsb
xchg
adc
push
pop
push
cmc
es
jmp
push
mov
je
mov
arpl
push
inc
mov
add
mov
mov
shlb
add
xor
dec
sbb
popf
xchg
inc
popa
subb
sub
xlat
dec
or
xor
out
ds
movsb
leave
xchg
cmp
out
inc
insl
lea
sub
xchg
dec
ds
iret
sub
or
sub
adc
push
gs
fcompl
dec
mov
pop
mov
in
mov
pop
push
inc
add
or
stc
inc
imul
dec
es
aad
add
sbb
inc
jbe
jmp
cmc
jae
sub
cltd
jle
in
subb
xchg
mov
sub
shl
adc
or
iret
into
mov
rcl
push
insl
shl
mov
push
pop
loope
mov
xchg
insb
xchg
icebp
test
ret
mov
xor
pushf
mov
mov
mov
mov
mov
arpl
adc
scas
jecxz
sbb
xchg
inc
in
daa
imul
scas
dec
out
lea
push
stos
jmp
ja
cmpsb
jne
jo
pop
xchg
push
add
cmp
dec
ficomps
leave
rolb
push
add
push
fcoml
fiadds
and
dec
sbb
cltd
pop
pop
das
leave
aad
jo
adc
or
or
test
dec
int
xor
loopne
jnp
cmp
movsb
scas
mov
sub
cmp
and
popf
add
out
mov
shlb
push
pusha
mov
xlat
xchg
negb
sub
adc
repnz
pusha
fucomp
push
push
in
aas
xchg
mov
mov
sub
mov
inc
mov
sti
sahf
cmove
dec
mov
push
jmp
cmp
addb
sbb
mov
mov
pop
out
fcomps
add
popf
jne
in
lods
ja
ja
xchg
pop
sti
and
loopne
sbb
dec
stos
ljmpw
sbb
mov
or
add
mov
or
out
lds
adc
and
cmp
mov
jmp
fists
mov
jbe
sub
sbb
std
subl
mov
pop
mov
xor
or
shlb
js
cmp
cmc
fwait
in
fs
xor
mov
inc
cmp
mov
lock
adc
jo
dec
jne
fbstp
sbb
adc
or
insl
sbb
pop
stc
pushf
inc
shll
jae
enter
jmp
xor
inc
inc
xchg
jp
xchg
lock
fisubl
data16
mov
lods
scas
std
sub
stos
mov
mov
cltd
aas
loop
movsb
ds
xchg
ja
imul
rcll
cmp
cli
rep
outsb
stc
xchg
sarb
mov
jno
data16
xchg
aas
sarb
jecxz
push
sub
push
adcb
ds
jo
jae
xor
jno
repnz
outsb
pop
stos
cmc
loope
mov
loopne
fmull
mov
jmp
test
stos
add
mov
xchg
data16
jmp
in
mov
cmp
push
lock
idivb
pop
push
jge
rcl
mov
add
xor
sbb
rcr
out
movsb
leave
inc
add
push
aas
sub
sbb
pop
mov
out
movaps
out
mov
outsb
bound
adc
jae
lock
imul
inc
and
aad
pop
nop
test
scas
das
out
add
pop
mov
add
pusha
leave
outsl
or
push
adc
sar
cmpsb
cmp
pop
enter
std
imul
lods
jg
shrl
push
test
sbb
pop
fstpl
lock
xchg
ja
sbb
aad
loopne
fsubrl
inc
clc
add
cmp
or
mov
fbstp
pop
std
testb
outsb
push
push
mov
shl
add
insl
testl
repz
fldl
push
mov
jmp
pop
jp
mov
inc
sarl
subl
shll
in
repz
fcomps
inc
sbb
xor
lds
pop
mov
imul
xchg
out
lea
ret
jnp
imul
push
and
cmpsb
aas
xor
lock
aaa
xor
xor
mov
mov
in
lcall
push
push
push
sub
dec
add
sub
cmp
negl
jb
jnp
mov
mov
data16
cmpsb
jg
xchg
jns
ficompl
rorl
shl
hlt
ret
push
movsl
push
ficomps
lods
add
pop
enter
loopne
cwtl
sbb
cmp
push
xchg
testb
insl
or
xchg
lcall
mov
je
mov
push
icebp
add
xchg
lahf
xchg
mov
adc
aaa
sub
dec
xchg
dec
rcll
jae
sbb
xchg
mov
mov
cwtl
mov
testl
pop
stos
fimull
imul
lea
mov
pushf
nop
movsb
xor
ret
ret
idivb
add
xor
sub
jns
arpl
call
mov
and
push
pop
dec
mov
xor
dec
jnp
pop
jae
in
push
lahf
fisubrl
cltd
ret
fnstsw
adc
inc
into
or
adc
push
outsl
rorl
ret
and
mov
jecxz
adc
test
in
movsl
pop
movsb
and
adc
add
mov
jmp
fisubrs
pop
popa
imul
xor
pcmpgtw
cmpsb
pop
mov
jl
xchg
pop
mov
mov
data16
jmp
sbb
mov
push
pusha
ds
jl
aad
cmc
pop
repz
mov
mov
je
movsl
lds
shrb
into
cmp
insb
or
jl
mov
out
mov
sti
hlt
jns
mov
dec
sti
inc
mov
mov
sbb
out
cmp
das
lahf
pop
add
xchg
loop
xlat
lea
xor
adc
mov
xor
push
mov
adc
or
inc
push
ret
rclb
fidivrl
xlat
mov
dec
fucomp
rorl
dec
jns
clc
xchg
cmp
sbb
push
in
rcrl
aaa
mov
pop
repz
adc
pop
clc
jg
in
int3
adc
mov
jmp
and
pop
repz
ja
push
push
out
xchg
popf
mov
mov
addb
inc
or
mov
outsl
neg
push
pop
test
xchg
xchg
lds
testl
mov
hlt
add
in
push
pop
scas
xor
xchg
jno
cmpsl
es
leave
mov
cmp
int3
gs
inc
loope
push
stos
cmpsl
jno
test
je
nop
xchg
pusha
mov
in
test
fwait
push
out
cmp
push
stos
dec
pop
lret
adc
pminub
sahf
outsl
scas
addl
add
mov
mov
ret
lahf
add
mov
adc
ljmp
dec
movsl
pop
arpl
sub
in
sub
test
inc
fcmovnbe
lds
gs
mov
mov
sub
xchg
or
fdivrs
popf
sbb
mov
daa
mov
stos
push
pop
test
jecxz
test
mov
cmc
iret
inc
jne
testl
pop
dec
dec
sarl
std
mov
sbb
cld
cli
aad
cmpsl
xchg
xchg
jecxz
shrl
pop
dec
ret
test
test
cs
faddl
adc
andl
loope
dec
pop
mov
add
cmp
or
add
cmp
mov
xor
pop
movsl
push
int
outsl
jg
call
outsl
push
mov
add
mov
or
mov
in
cmp
or
mov
mov
sbb
push
jno
mov
or
jp
test
test
push
lds
mov
push
pushf
push
adc
jnp
add
pop
push
in
pusha
mov
mov
push
loope
int3
add
mov
jp
add
xchg
ljmp
in
inc
xor
test
addr16
lock
xchg
cmp
outsb
cs
pusha
pop
mov
inc
out
mov
lahf
in
push
and
mov
add
cmp
push
xchg
je
inc
fadds
lret
sbb
lahf
out
mov
xchg
movsb
add
push
dec
xchg
dec
mov
fwait
add
movsb
lret
in
sbb
int
pop
jnp
push
adcl
mov
add
dec
loop
xor
pop
lahf
mov
jb
ja
gs
or
push
jae
lock
out
pop
mov
addb
mov
pop
or
sub
clc
rol
add
fsubr
push
mov
je
test
dec
fldt
cmp
push
cmp
pushf
nop
push
push
rolb
ja
cmp
push
jnp
push
imul
jmp
inc
pop
xchg
mov
xadd
inc
xchg
ror
repz
sbb
fisttps
xor
push
lds
ficoms
loopne
ret
mov
fildll
push
scas
lods
xchg
inc
push
out
adc
mov
movsl
jns
mov
idivl
imul
push
setge
in
add
test
xchg
dec
jae
cmpsb
cmp
add
push
sbb
mov
or
add
push
in
lcall
insl
cltd
inc
les
sub
jo
and
scas
insb
mov
shr
or
jnp
ret
xorb
aad
outsb
mulb
out
pop
aam
mov
insl
add
roll
rcrl
sbb
inc
lret
push
shlb
into
clc
xlat
inc
jmp
negb
push
mov
and
jns
mov
roll
outsb
icebp
out
leave
ja
shrb
aad
lahf
or
dec
mov
mov
dec
push
mov
ss
cld
jge
aaa
roll
ds
mov
pop
sahf
mov
stos
mov
mov
bound
xor
adc
lret
adc
mov
add
and
add
xchg
sbb
xor
add
iret
addb
jge
adc
and
negl
fisubrs
add
enter
pushf
xor
mulb
cmp
loope
lds
push
jb
add
add
push
fnstenv
xchg
add
jp
mov
mov
xor
and
addr16
divl
push
hlt
imull
jl
in
dec
cmp
iret
add
cmc
ljmp
pop
add
fmul
mov
add
mov
jl
sbb
push
icebp
xchg
dec
mov
mov
sti
mov
loope
es
dec
pusha
inc
fwait
daa
mov
orb
pop
aas
inc
fistl
scas
sbb
adc
push
mov
and
add
or
ret
lret
pusha
aad
sahf
pop
stc
fisttpll
pushw
sbb
shl
sub
dec
inc
and
push
mov
pop
shll
add
fsubrs
lds
cmpsl
dec
jge
shll
pop
add
sub
xchg
mov
mov
xor
adc
sub
cld
lods
sub
mov
fldcw
repz
mov
jno
fdiv
sti
cmp
cmpsl
inc
push
xlat
fimull
ret
test
jl
cmp
jb
leave
lahf
adc
test
or
jne
das
cwtl
ret
dec
push
aas
pushw
out
mov
pop
ljmp
inc
notb
pop
std
xor
mov
xorl
or
rcrb
call
sbb
sub
cmp
inc
dec
ret
sub
jmp
cmp
cld
pop
xor
aad
xchg
dec
imull
dec
mov
fiaddl
outsb
int
mov
dec
mov
mov
xchg
mov
insl
mov
sub
imul
scas
ret
imul
push
cltd
addr16
insl
rorb
cmpsl
ror
mov
jl
pop
rclb
cmp
cwtl
adc
sbb
push
mov
mov
push
mov
sarl
add
jnp
std
mov
out
test
enter
std
test
push
cmp
sbb
cltd
mov
push
pop
lahf
shlb
pushf
in
pop
sub
add
push
mov
mov
mov
call
andl
insl
popa
dec
ja
pop
push
adc
sahf
repz
lea
dec
in
push
js
push
out
jb
shlb
insb
mov
fsubrs
stc
sbbl
in
adc
pop
lahf
daa
dec
or
push
int3
push
pop
cmp
xchg
cmp
scas
lods
and
push
ljmp
imul
mov
mov
push
push
mov
lods
cmp
pop
inc
mov
push
in
sbb
mov
es
cs
scas
test
xchg
adc
or
mov
push
out
les
and
test
inc
out
in
shrb
shrb
push
jg
insb
sub
int
sbb
rcll
in
lods
pop
fbld
cli
mov
in
popf
mov
out
cmp
cmp
push
dec
arpl
or
push
jmp
sbb
sbb
das
pusha
adc
and
icebp
pop
out
adc
mov
aaa
movsl
mov
cmp
lret
ret
insb
fwait
lea
mov
xchg
in
push
iret
sub
xchg
popa
jb
inc
rcll
enter
inc
in
out
xchg
adc
cmp
mov
dec
and
add
xchg
and
ret
inc
hlt
rcll
xchg
or
mov
iret
ss
rcll
push
mov
and
adc
adc
xchg
and
scas
mov
or
ja
sub
push
jo
pop
or
cmp
pop
xchg
js
cld
addr16
push
xchg
add
stos
xorl
add
ja
icebp
aam
insl
xlat
pop
xor
sub
xor
test
add
dec
lea
test
dec
mov
fildl
inc
sarb
add
mov
xlat
lret
out
out
rolb
mov
lock
inc
cwtl
mov
xchg
loop
inc
xchg
jnp
mov
ljmp
xor
outsb
inc
mov
add
lods
cs
pusha
dec
lods
mov
mov
adc
push
cmp
in
mov
test
cmp
out
mov
aaa
jbe
mov
pop
jbe
pop
jmp
cs
aaa
roll
xchg
xor
cltd
cmc
push
int3
push
push
jo
paddusw
xorl
add
dec
pop
jmp
imul
rcll
xlat
jno
loop
inc
cwtl
inc
inc
inc
sbb
sub
mov
jge
fsubrs
mov
mov
stc
pop
inc
rcr
push
mov
mov
rolb
test
mov
cmp
add
in
shrl
ret
aad
dec
lds
movsl
mov
xor
insl
inc
orl
imul
sarl
int3
or
scas
xor
bound
push
mov
adc
sbb
mov
push
cmpsl
cmc
dec
xor
sti
fmulp
cmpsb
sub
mov
in
insb
or
imul
js
cmpsl
jecxz
cmp
imulb
mov
js
and
dec
mov
mov
shll
jns
pushf
mov
or
fisubrl
inc
orl
mov
dec
add
and
and
icebp
cli
ret
mov
lock
jne
mov
fwait
repz
lret
xchg
push
les
imul
inc
insb
dec
fnstenv
icebp
sub
xchg
mov
and
sbb
jns
imul
hlt
gs
mov
xchg
fists
fstpt
gs
fcmovu
es
sub
shlb
cmp
pop
scas
negl
mov
lcall
xchg
add
fldl
mov
xchg
jmp
lret
xchg
mull
or
mov
xchg
xchg
movsl
xorl
fstps
lret
jnp
sarl
test
add
jno
push
sti
xor
sbb
pop
loop
ja
pop
add
outsb
nop
int
pop
gs
pop
mov
outsb
xchg
mov
mov
sbb
cmp
add
jnp
mov
sbb
or
push
sub
mov
xor
loopne
cld
jle
pop
xor
sub
lea
loopne
in
lods
mov
pop
xor
inc
int3
lret
xor
mov
or
popf
pop
cld
dec
imul
mov
leave
jne
cld
or
xchg
leave
loop
lcall
sub
adc
clc
and
rclb
ret
arpl
insb
mov
popf
xchg
out
aaa
pop
imul
sbb
pop
clc
sar
xlat
inc
jecxz
dec
sahf
orb
repnz
cli
lds
aas
lds
movsb
xor
ror
jbe
pop
add
push
xchg
push
leave
cwtl
mov
scas
inc
ret
in
icebp
fstps
xchg
mov
jp
jns
flds
fdivrl
addr16
lds
pop
sub
int3
xchg
jno
imull
lock
pop
test
add
in
jbe
sub
push
fs
xor
int
mov
arpl
jbe
ljmp
sub
arpl
aam
into
mov
pop
xor
nop
or
jnp
sbb
rolb
sbb
cmp
sub
addr16
jg
adc
dec
paddsw
xchg
or
xchg
xor
aad
xchg
sbb
xchg
push
sub
cld
hlt
push
call
dec
in
dec
sub
inc
adc
inc
or
jb
or
jg
pop
mov
fstl
sub
fs
int
pop
negb
aas
inc
sbbl
sbb
sub
xorb
leave
inc
cmp
push
testl
jno
xchg
stos
or
cmc
out
scas
outsl
pop
dec
mov
int3
cmpsb
aad
scas
xchg
push
dec
sbb
sbb
xchg
mov
int
adc
mov
pop
push
or
ds
daa
das
test
cli
mov
and
inc
sub
out
sub
call
sub
iret
mov
adcl
out
pop
cmpsl
lcall
fnstsw
js
sahf
jbe
pop
or
adc
push
sbb
push
xor
imul
out
jg
clc
add
divl
dec
outsb
push
inc
test
adc
push
push
ret
stc
jle
jmp
mov
add
jbe
lods
mov
push
and
cmpl
jmp
sbb
ja
data16
loope
xorl
shrl
popa
pop
jmp
movsb
adc
or
ror
pop
call
adc
test
hlt
jle
dec
sbb
shrb
insb
int
sbb
jne
pop
not
shll
mov
inc
iret
nop
ljmp
lahf
jg
je
mov
sahf
jmp
add
dec
jl
icebp
or
cld
xor
mov
sub
outsb
mov
clc
mov
xchg
int3
je
sarb
je
xor
mov
push
push
jp
xchg
pop
sahf
rcr
push
mov
mov
fwait
test
pushw
jmp
inc
pop
cld
sahf
jns
fstpt
cmp
sub
leave
test
mov
cmp
aas
add
xchg
inc
daa
loope
or
jns
aad
loop
or
jno
add
mov
mov
loop
les
xor
aaa
bound
cmpsl
in
cmp
test
push
bound
arpl
lcall
lds
push
test
fwait
inc
cld
or
out
mov
pop
xchg
fiadds
pop
sub
das
sub
mov
xchg
push
je
jno
repz
or
fnstenv
xor
add
mov
jne
sub
or
push
mov
int
lahf
pusha
fisttps
call
mov
xchg
fs
push
lock
and
pop
sbb
dec
push
mov
fsubrl
aam
inc
adc
dec
shll
xchg
lea
mov
mov
mov
mov
xchg
shl
movsb
mov
arpl
sub
dec
mov
outsl
mov
add
xor
hlt
push
and
add
push
test
stc
shl
xor
inc
mov
or
cmc
jp
pop
inc
and
aad
xor
sbb
pop
out
into
and
sbb
fwait
jne
lea
in
pop
xchg
pop
mov
out
cltd
fstpt
xor
int3
cld
test
pusha
pop
pop
sbb
cmp
mov
mov
dec
cli
push
ljmp
mov
negb
sbb
adc
sub
sti
push
in
popa
jbe
imul
push
jle
in
cmpsl
xchg
mov
sub
cwtl
sub
jle
pushf
das
je
ss
loope
flds
jmp
mov
mov
leave
loopne
mov
inc
pop
add
addr16
movsl
mov
jl
insl
xor
xchg
icebp
iret
ret
pop
hlt
pop
jne
mov
pop
push
dec
sub
data16
mov
mov
aaa
lret
imul
mov
jle
pop
push
popf
lret
cltd
frstor
mov
test
popf
ret
das
xor
gs
adc
xlat
arpl
aaa
jmp
roll
add
ss
jmp
xorb
sub
jnp
imul
inc
xchg
mov
mov
or
dec
jnp
rcrb
popa
inc
inc
int
jb
sbb
adc
jns
jg
xor
in
int3
in
or
dec
popa
sbb
in
and
jno
popf
dec
jne
stc
mov
mov
mov
fisubl
xlat
mov
repz
mov
jge
sbb
lahf
in
sub
xor
imul
and
sbb
lret
ja
fiaddl
xor
jbe
and
fs
jmp
or
inc
xchg
icebp
jnp
or
les
pop
lods
jbe
hlt
test
enter
sub
clc
lods
adc
pusha
and
pop
inc
sbb
inc
mov
shl
cmp
and
jno
pop
ret
jmp
jae
and
push
xor
loopne
jb
cmp
push
pop
cld
fidivl
negl
pop
cmp
daa
add
gs
cwtl
shlb
and
leave
sub
ret
dec
xor
inc
lcall
jae
mov
out
xor
lds
sub
aad
mov
cmp
xor
dec
or
mov
cmc
out
in
xor
pop
jnp
dec
add
jl
insl
sahf
or
sahf
inc
mov
sbb
jmp
cmp
jne
pusha
mov
pop
push
or
mov
hlt
aad
fsubrs
sti
push
inc
stc
dec
in
dec
pop
sbb
pop
int3
ja
arpl
ljmp
dec
cmp
sahf
mov
pop
cmp
pop
jae
movsl
sbb
inc
push
cld
xchg
in
pop
sbb
cmp
cmp
int3
ja
inc
mov
cld
je
cmpsl
cld
or
push
and
subb
jmp
hlt
repnz
push
sbb
inc
cmp
dec
testb
cmp
or
jmp
mov
shlb
aas
clc
scas
int3
jns
test
push
push
push
inc
xchg
sarb
popa
jge
jns
les
test
mov
test
pop
jne
call
push
xor
imul
pushf
dec
pop
imull
cmpsl
add
mov
in
sbb
repnz
int
testb
mov
out
or
aas
lret
test
sub
div
fcomp
fldenv
popa
stos
stos
cmp
das
pusha
imul
sbb
aam
imul
sbb
insb
mov
jl
push
lret
xchg
setg
mov
ret
inc
fiaddl
lret
mov
loopne
add
xor
ss
pop
and
xchg
jo
movsl
test
cmp
dec
mov
sub
subb
pop
push
sbb
stc
add
scas
pop
jle
cmc
mov
scas
icebp
jae
dec
fnstsw
test
outsl
push
call
lock
mov
or
mulb
popa
mov
adc
jnp
pop
jg
iret
push
dec
xchg
push
xor
xor
fldcw
push
daa
xorb
xlat
push
addr16
xchg
loop
sub
push
jle
arpl
data16
shlb
sbb
add
mov
jmp
mov
dec
aad
clc
add
pop
xchg
jns
or
stc
dec
dec
leave
ret
std
push
outsl
sti
mov
adc
outsb
loope
ss
xor
jecxz
cmp
sar
sub
push
mov
sbb
xchg
cmp
sub
aas
add
sub
testl
sbb
fsub
test
sbb
mov
xchg
mov
jmp
mov
jl
and
inc
repz
clts
sti
dec
loopne
mov
and
adc
sub
pusha
pop
fldenv
jp
popf
cmp
cltd
push
mov
lock
out
push
icebp
cmp
sub
bound
dec
inc
ret
add
cld
dec
push
mov
xor
popa
dec
push
sub
mov
mov
xchg
fistpl
inc
nop
movsl
fidivs
xchg
ljmp
test
pushf
push
or
sarl
lock
fld
and
xchg
sub
push
nop
mov
adc
inc
int3
adc
xor
sub
xchg
push
cmovnp
xchg
pop
js
cmp
fcomps
or
dec
or
ret
imul
in
dec
ret
mov
mov
xor
mov
pop
enter
mov
enter
cmp
mov
in
lret
sti
test
adc
in
clc
ffreep
xor
lcall
repnz
insb
push
lock
repnz
ja
xor
xchg
sarb
hlt
mov
shlb
xor
pusha
cli
call
jne
mov
stos
cmpsb
mov
push
xor
sub
or
repz
cmc
bound
fsts
and
not
push
mov
sub
pop
inc
insl
in
mov
cmp
dec
hlt
outsb
push
nop
mov
mov
xor
push
xlat
add
movsl
outsb
xchg
xlat
rorb
sbb
dec
pop
sbb
jmp
dec
jae
xchg
test
shlb
jg
push
dec
xor
sbb
ds
repz
adc
andb
jmp
push
xchg
mov
out
mov
jecxz
and
add
mov
mov
push
call
sbb
add
outsl
sbb
mov
imul
insl
ret
in
rorb
fcmovnu
push
sub
adc
jge
and
jle
xchg
adc
pop
and
jle
dec
frstor
lea
push
sub
cmc
in
jbe
fisttpl
jno
jl
rclb
push
pop
sub
test
pop
dec
dec
mov
and
imul
pusha
sub
mov
subl
and
rclb
dec
dec
ds
shr
push
mov
push
inc
or
lret
jno
clc
fisubl
scas
sahf
pop
xchg
adc
mov
je
and
incl
dec
mov
sti
cmc
gs
int
lods
sbb
outsb
pop
dec
test
mov
fs
sub
jmp
xchg
adc
adc
aad
xlat
xchg
sub
inc
mov
mov
fildl
subl
clc
popf
cmp
int3
lret
inc
sub
test
es
or
jmp
mov
and
out
sti
sbb
js
pop
mov
xchg
add
push
or
lock
gs
push
pop
movsb
in
shlb
sub
inc
jo
arpl
in
inc
nop
les
push
mov
xor
inc
mov
inc
or
fists
pop
mov
ss
xor
xlat
pop
adc
cmp
bound
cli
adc
cld
test
xor
mov
mov
pushf
pushf
outsl
jge
movsl
mov
xor
das
inc
adc
dec
pop
subb
repnz
js
test
adc
lock
popf
jb
pusha
xor
cmpl
in
lds
insl
jno
xchg
jp
push
repz
push
lret
mov
jno
push
sub
inc
add
popl
sub
xchg
scas
int
and
dec
repz
push
push
das
mov
cmp
mov
inc
movsb
jg
mov
sub
in
in
mov
shl
cli
shrb
bound
in
cmp
cmp
pop
adc
lahf
inc
add
dec
out
sbb
aaa
push
mov
mov
jns
loope
jns
cltd
shl
enter
pop
aaa
mov
aaa
mov
popf
ret
vminsd
pop
or
out
stos
cwtl
pop
or
jl
mov
fnsave
repnz
icebp
rorl
sbbl
mov
push
loop
cli
sub
icebp
push
fnstcw
jne
and
and
hlt
adc
or
fsubl
jnp
ljmp
in
cli
xchg
mov
popf
mov
fistps
lret
out
push
mov
mov
gs
sub
cmp
jecxz
xchg
icebp
rorb
mov
inc
pop
dec
mov
test
sub
mov
loope
or
shll
sbb
xchg
add
mov
lds
pop
and
sar
mov
xlat
push
out
jo
daa
out
icebp
push
xlat
bound
fisubrl
fisttpll
int
xorl
rcr
repnz
ret
imul
lock
cmpsl
aam
bsf
adc
loope
ja
push
es
cltd
popa
xor
pop
cmp
or
lds
jae
cld
dec
xor
popa
inc
inc
jnp
inc
dec
or
mov
mov
shl
fwait
xchg
aad
sub
jne
sub
dec
or
mov
mov
jl
sub
repz
popf
xchg
add
int3
inc
cwtl
ss
adc
aad
adcb
sbb
and
adc
push
or
repnz
inc
sub
addl
scas
jns
mov
xchg
or
xchg
out
jnp
mov
sbb
dec
sbb
sub
adc
fsubrs
nop
xchg
into
hlt
ret
jle
xor
pop
mov
lea
push
jg
add
scas
mov
stos
push
or
lds
repnz
push
lock
adc
adc
pushf
mov
icebp
fildl
popf
mov
xchg
test
shrb
aad
cmp
hlt
jp
repz
addr16
jns
je
jle
stos
int
repnz
or
jge
xchg
cmp
xchg
sub
cmp
loope
popa
add
sbb
and
mov
dec
loop
sbb
pop
sub
out
notb
pushf
push
sti
push
inc
test
in
scas
lods
sbb
jno
dec
outsb
pop
and
jns
sarb
push
mov
incb
cmp
ss
ljmp
data16
scas
jae
sub
sbb
ficompl
cmp
fcoml
cli
test
mov
jne
gs
sbb
mov
lods
mov
xchg
adc
dec
push
push
lods
xchg
push
movsb
and
add
cmpsb
adc
mov
js
iret
enter
mov
jno
into
enter
add
call
add
and
in
lods
orl
sub
push
je
xor
jb
xor
shl
scas
gs
fcompl
shlb
lret
push
xor
int3
cwtl
inc
sbb
movsl
lds
mov
mov
cld
in
fstpt
leave
lods
adc
jecxz
sub
stos
xlat
imul
jecxz
clc
sub
mov
shrb
add
outsb
les
outsl
inc
sub
stc
cmp
cmp
sbb
add
adc
pop
fisubs
mov
mov
push
ret
cmp
repnz
dec
adc
sub
push
or
mov
xchg
js
xchg
sarb
xor
xor
aaa
les
mov
push
xchg
insb
rdtsc
inc
fxch
loop
movb
mov
out
cs
subb
scas
scas
inc
lock
or
loop
cmp
and
inc
xchg
div
jg
sub
push
movsl
movsl
xor
and
fisubrl
xor
popa
cmp
add
scas
test
adcl
mov
in
adc
clc
gs
jl
mov
leave
fisubrs
pop
das
push
aas
cmp
ss
aad
xchg
imul
inc
cli
xlat
cvtpi2ps
xchg
lahf
jp
pop
push
mov
cmp
insb
ja
dec
adc
sbb
sbb
pop
or
scas
imul
inc
xchg
dec
bound
sbb
scas
cli
sbb
xchg
xchg
add
fstps
xlat
fisubs
jl
lock
jmp
rclb
ds
mov
pop
or
pop
cmpsb
sub
out
movsb
sub
jnp
mov
popl
sbb
jb
pop
repz
shll
aad
mov
jbe
mov
mov
imul
sbb
iret
inc
in
mov
ljmp
cmpsb
push
mov
rclb
or
mov
stos
xchg
jmp
cmp
or
pushf
pop
push
push
aad
sbb
aaa
cmp
add
out
inc
inc
cmp
stos
popf
lcall
out
imul
mov
ret
add
xor
pop
scas
jp
mov
test
mov
lds
sbb
rolb
push
or
mov
pop
mov
inc
fadd
mov
inc
jnp
or
and
rcrl
ss
and
lea
xchg
sbb
aas
ljmp
shrb
in
or
repnz
ja
ret
cmp
insl
sub
aad
cmpsb
mov
into
aam
jo,pn
mov
and
int3
sub
fists
and
mov
push
sub
out
push
xchg
dec
enter
cwtl
mov
xor
xchg
jl
xchg
inc
or
add
adc
out
cs
test
sti
jp
leave
enter
es
xor
cmpl
popl
inc
push
ss
arpl
lahf
push
je
stc
stos
dec
dec
xor
jge
mov
lret
push
inc
rcrb
and
jecxz
jl
xchg
push
inc
das
mov
lods
push
call
adc
ss
sbb
lock
inc
pop
aas
xchg
or
je
les
stc
adc
outsb
in
xchg
je
xchg
or
xchg
call
subl
movsl
sub
push
add
cmc
inc
out
pop
call
cltd
push
and
dec
aas
or
dec
test
inc
dec
sarb
mov
popf
fimuls
pushf
cmp
lods
jno
inc
xor
sub
push
adc
lds
iret
daa
sbb
call
stos
inc
push
push
jle
mov
jg
push
scas
les
in
mov
movsb
xlat
sbb
add
jecxz
cmpsb
xor
push
test
into
mov
mulb
lods
mov
jge
mov
or
inc
rcrb
xor
dec
lock
fs
es
pop
dec
add
ss
stc
push
pop
call
enter
scas
cmp
xchg
cli
pop
and
pop
lods
mov
shrb
leave
icebp
mov
push
das
cmp
mov
lock
cvtps2pd
std
pop
dec
fwait
xlat
and
popa
mov
mov
movsb
fcompl
dec
add
cs
dec
leave
movzbl
pop
jb
enter
lods
mov
push
add
sbb
inc
pop
jg
xor
push
push
outsb
pop
or
xlat
add
adc
sub
in
divb
and
jl
int
mov
mov
xor
sbb
and
pop
inc
xchg
dec
pop
mov
addr16
xchg
add
mov
mov
fnstenv
orl
cmp
loop
sbb
imul
cmp
xchg
jbe
shlb
jno
inc
mov
mov
loop
add
mov
mov
sub
inc
stc
mov
and
daa
mov
push
pop
mov
inc
fdiv
xchg
add
inc
scas
fwait
mov
jp
jae
lret
cmp
out
outsl
add
sbb
dec
rclb
and
lods
scas
dec
push
sbb
cmp
xor
push
repnz
rorl
push
std
mov
movl
divl
jb
adc
pop
jge
dec
or
arpl
loope
cmpl
inc
test
out
inc
inc
sbb
dec
fmuls
xchg
fdivrs
sub
fwait
jbe
push
cltd
cmp
pushf
mov
hlt
push
xor
cmpsb
scas
cmpsb
fld
cmp
test
nop
mov
shrb
add
stos
ss
in
or
mov
aas
push
movsb
shll
scas
icebp
sahf
mov
fs
cmp
js
call
and
and
cmp
mov
outsb
std
shll
in
mov
jle
clc
les
adc
push
push
or
inc
mov
fisttpll
xor
bound
adc
into
adc
mov
filds
or
add
fsts
dec
jns
jno
inc
lock
xchg
push
and
add
lods
cmpsb
lahf
idivl
pop
mov
pop
stos
sub
or
aas
rcl
xor
inc
sbb
and
mov
gs
and
push
adc
xchg
adc
and
outsb
repz
lea
pop
xorb
out
scas
push
repnz
pop
jmp
add
cs
movsb
xor
push
shll
aas
and
jge
xchg
mov
jmp
hlt
js
mov
cmpb
sub
lods
inc
inc
add
add
xor
loope
sub
test
inc
aas
stos
daa
cmpl
mov
or
xchg
cltd
arpl
inc
pop
outsb
push
cmp
push
lds
divb
gs
lods
ja
xlat
lcall
xchg
cli
aaa
outsb
dec
in
xchg
dec
mov
cld
mov
outsl
jmp
cmpsl
pop
call
pop
mov
enter
ss
xor
cld
hlt
and
pushf
mov
sbb
jbe
test
int
in
gs
adc
dec
add
sub
sbb
aaa
or
mov
imul
xchg
push
imul
scas
das
out
pop
or
mov
push
jnp
adc
rcrl
xchg
pop
hlt
rorb
ret
push
jne
test
mov
sahf
xlat
cmpsl
add
int3
clc
mov
ja
mov
xor
dec
popf
lods
add
fists
in
dec
jge
sub
sbb
add
lock
lret
jge
sti
sub
mov
out
mov
sub
jg
xchg
test
addr16
ljmp
mov
aaa
aas
sahf
orb
negb
cmp
push
jp
push
add
clc
fcompl
fldl
dec
ss
dec
add
cmpb
inc
cmp
les
inc
mov
inc
fucom
lea
fisttps
movsl
inc
insb
mov
test
push
outsb
ret
jbe
mov
and
dec
rorb
cld
mov
int
out
and
int3
std
sbb
or
rcr
es
mov
sbb
scas
and
push
sub
ret
or
mov
sbb
push
or
inc
push
dec
and
ret
ficoml
or
add
aas
sar
fstpt
xor
dec
jp
mov
add
mov
xchg
aam
push
fdivrp
sub
iret
and
int3
push
movsl
sbb
dec
sahf
adc
cltd
mov
dec
cmpsl
aaa
xchg
cmpsl
jmp
ds
stos
dec
enter
stc
outsb
loop
jnp
dec
cs
sbb
add
movsl
jo
jb
or
lock
dec
inc
or
in
test
ret
inc
outsl
cmp
pop
ret
inc
pop
loope
xchg
out
testl
inc
push
shll
cmp
jle
adc
jno
cmp
inc
daa
fists
cmp
pop
sbb
cmp
mov
shrb
and
cmp
jecxz
add
movsb
jmp
mov
push
and
mov
push
sarb
pop
sbb
lods
sbb
stc
mov
inc
test
mov
imul
loopne
sub
lret
jmp
cmp
mov
mov
inc
and
outsl
xor
outsl
adc
movsl
adcl
xor
nop
popf
xchg
xchg
loope
pop
adc
xchg
mov
cmp
pop
pop
jno
cs
fwait
pop
sti
and
stc
jnp
fcoml
cli
and
mov
jge
adcb
nop
cmp
lods
stos
js
sub
out
pop
es
pusha
cmp
dec
subb
js
cld
or
imul
test
pop
xor
or
popa
dec
dec
xor
push
push
lods
and
mov
jne
xchg
xchg
rol
dec
xchg
jne
mov
daa
ja
mov
fisubrs
ljmp
add
in
mov
dec
call
inc
cld
scas
add
add
mov
lahf
pop
aam
mov
inc
gs
into
das
mov
loopne
cmpl
xchg
add
push
xorl
imul
mov
adc
inc
outsb
pop
jb
sbb
mov
push
into
test
stos
in
fisubrs
out
mov
mov
or
jb
in
rolb
lods
pop
xchg
lahf
dec
sub
rcll
gs
clc
add
ljmp
insb
and
xchg
xchg
cltd
pop
lods
push
cld
inc
icebp
lods
loope
push
mov
or
jns
es
pop
push
ficoms
pop
add
in
outsb
popa
inc
jmp
and
lcallw
inc
push
add
jge
xor
sbb
leave
mov
jnp,pn
je
imulb
test
cmp
loope
cmp
imul
ja
push
adc
dec
out
lods
sub
pop
call
dec
sbb
sub
je
mov
in
jno
mov
push
xchg
add
loop
xchg
and
je
mov
and
add
sub
mov
js
fdivrp
push
test
jbe
ret
dec
xor
enter
inc
ret
sub
jl
jnp
lretw
inc
cmp
fs
pop
inc
jp
mov
xchg
mov
mov
lcall
xchg
into
add
cwtl
iret
inc
enter
nop
clc
add
inc
xor
ja
icebp
insl
or
mov
push
fildl
jg
push
js
pop
imul
ds
jns
sbb
arpl
mov
xlat
nop
mov
mov
inc
daa
sbb
addb
stos
mov
aaa
mov
jl
jnp
jno
jno
lods
lahf
dec
inc
fwait
dec
icebp
sub
jmp
je
out
mov
xlat
push
call
push
pop
xchg
mov
addr16
int3
sub
inc
bound
shlb
idivb
arpl
jns
sbb
xor
cmp
sub
push
push
xor
stos
out
movsb
jnp
cs
cmpb
fistl
or
loopne
in
repz
pushf
cmp
mov
sarb
mov
mov
aad
cmp
lods
mov
ss
push
jns
mov
lea
mov
pushf
sti
jg
pop
popa
pop
and
fs
pop
mulb
aaa
mov
out
fsubs
pop
stos
xchg
jae
ret
sbb
rcrl
sub
jl
mov
rclb
jae
pop
mov
add
cld
xor
in
push
jge
lcall
pop
sahf
filds
dec
xor
jmp
mov
ret
rcrl
add
addl
les
jbe
rcll
mov
call
repz
sbb
xchg
adc
push
out
stos
pushf
add
dec
jmp
cwtl
jge
mov
mov
mov
iret
inc
and
pop
addr16
jge
sub
ds
sbb
lret
loop
and
fwait
push
push
and
mov
xor
pusha
scas
inc
scas
mov
mov
and
push
xor
and
cmpsb
pop
insl
int
mov
test
xor
push
fdiv
mov
mov
dec
xor
icebp
sub
addr16
fcoms
jecxz
mov
mov
mov
dec
pop
call
jp
loope
cbtw
repz
jecxz
sub
out
inc
jge
cmpsb
dec
nop
mov
xor
jns
adc
inc
adc
add
pop
add
fs
and
stc
enter
pusha
mov
or
leave
adc
sub
mov
andl
sub
mov
pop
dec
cmp
aam
in
fs
adc
xchg
adcl
mov
push
jle
fmul
push
repnz
cmp
jg
push
shlb
dec
and
icebp
arpl
push
aam
movsl
push
mov
or
push
pusha
in
dec
call
hlt
rcrb
push
aam
std
loop
aaa
adc
mov
out
cs
movsb
imul
push
add
inc
mov
pop
sbb
nop
mov
lock
and
jg
ja
xor
mov
loope
pop
and
add
dec
push
pop
nop
imul
nop
mov
xchg
xchg
int
outsl
xchg
movsb
fstpl
or
roll
iret
mov
outsl
mov
clc
mov
andl
mov
mov
bound
mov
jle
push
pop
cmp
out
xchg
popa
mov
shlb
and
cmp
pop
repz
ret
xor
sbb
movsb
or
into
mov
lds
fstl
cmc
es
inc
push
aad
imul
dec
or
mov
mov
xchg
or
sub
enter
cmp
lods
cmp
mov
ret
repnz
cld
rcl
daa
insb
fidivs
push
clc
fwait
movsb
out
jno
sub
or
in
push
sbb
testl
popa
xchg
xchg
das
bound
push
repnz
sub
mov
push
push
lock
arpl
hlt
inc
data16
or
lret
push
jb
sub
push
aas
sbb
xor
aad
in
sub
ja
popl
jae
or
sbb
mov
jo
pop
pushf
js
jg
inc
or
dec
cmpsl
and
xor
inc
dec
shll
mov
inc
arpl
sarl
mov
mov
sub
popf
mov
sub
mov
es
fwait
jecxz
mov
std
xor
xchg
push
in
in
xchg
incb
ret
jg
imul
stos
aas
jae
in
inc
dec
push
jbe
xor
mov
ficomps
xchg
cmp
add
push
jecxz
cmp
faddl
inc
inc
hlt
jae
stos
mov
or
rcll
ja
es
cltd
push
das
push
dec
repnz
push
push
push
mov
ljmp
cmp
mov
adc
jmp
inc
mov
mov
insb
subl
repz
sub
imul
ds
or
cmpsb
mov
test
xor
into
mov
jnp
cmpsl
leave
cli
mov
adcb
jge
jg
dec
rclb
call
out
stos
lods
add
xchg
mov
jp
repnz
mov
xor
sub
jnp
inc
cli
lds
mov
mov
sub
test
mov
add
test
xchg
jl
jge
adc
xor
rcr
xchg
das
mov
jl
dec
dec
xchg
sbbb
mov
pop
iret
xor
fisubrl
int
int
mov
out
inc
imul
xchg
inc
inc
cmp
imul
mov
mov
popa
cmc
loopne
mov
xchg
fwait
xor
sbbb
xchg
push
in
add
xchg
mov
xorb
bound
inc
lret
cmp
das
stos
sbb
js
jns
nop
sbb
inc
or
stos
jecxz
sub
inc
inc
movsb
cmp
mov
or
movsb
or
jo
adc
cltd
dec
jle
inc
fldt
fiadds
hlt
jo
fidivrs
jo
cmpsb
push
fwait
mov
insb
adc
or
enter
outsl
stos
or
dec
sbb
inc
das
sbb
mov
sti
push
int3
and
insl
loopne
xchg
xor
mov
mov
call
push
sbb
jmp
push
pushf
sbb
mov
out
jb
test
fsts
or
rcll
cmp
repz
jmp
pop
aam
lods
out
pop
je
je
xchg
adc
mov
out
cltd
push
jnp
frstor
push
or
xchg
popf
stc
scas
adc
std
ds
dec
add
scas
mov
xor
jecxz
ret
pop
and
ret
mov
in
jmp
out
mov
xchg
sub
push
or
add
inc
inc
jbe
lods
sbb
nop
xchg
hlt
mov
push
lea
pop
rcr
repnz
fildl
movsl
push
inc
pop
std
xor
jo
mov
imul
sub
push
imul
aas
gs
mov
and
mov
je
lds
iret
mov
pop
arpl
xorb
pop
ret
das
call
call
jmp
dec
clc
nop
dec
sbb
les
push
outsb
mov
mul
inc
frstor
pusha
fnstcw
cld
insb
xchg
test
arpl
mov
cmp
int3
call
lea
movsb
out
loopne
mov
pop
push
and
shl
ret
daa
mov
rcr
in
nop
mov
push
clc
fimuls
imul
lock
je
and
arpl
pop
loop
dec
sub
mov
push
fistl
xchg
bsf
sbb
mov
lcall
es
imul
ljmp
andl
jnp
repz
ljmp
negb
cs
sbb
mov
and
dec
icebp
test
inc
sbb
outsb
jge
mov
ret
movsl
das
fwait
jae
inc
add
or
xchg
jno
mov
adc
fsubs
jnp
lret
xor
push
inc
xchg
pop
xor
mov
fsts
inc
mov
push
push
pop
mov
into
lds
int3
mov
fnsave
pop
mov
movsb
dec
adc
push
cmp
and
sub
and
push
enter
sbb
popa
and
sbb
in
data16
hlt
lret
sahf
movsb
cmc
jge
xor
jl
push
adc
jnp
dec
dec
push
dec
or
jne
mov
jb
xor
dec
je
jecxz
push
xlat
inc
and
pop
pop
pop
repnz
mov
or
and
addl
inc
outsb
fs
jg
push
jmp
dec
pop
adc
mov
xorb
jle
ds
icebp
outsl
dec
sub
cmp
fldt
jl
push
dec
or
jl
mov
adc
mov
jbe
out
test
jle
jp
jl
add
add
imul
mov
jnp
cmp
pop
popf
repnz
movsb
or
nop
rcrl
std
mov
mov
imul
push
mov
push
jecxz
mov
and
data16
mov
sub
sbbl
push
cmp
push
jns
cltd
or
jp
mov
mov
and
xchg
mov
pop
pop
iret
js
pushl
add
xor
dec
aad
mov
xor
daa
cli
mov
mulb
jp
clc
push
cmp
idiv
xor
in
vunpcklps
jbe
push
out
jno
mov
sbb
jo
cmp
sub
stos
cmp
jns
adc
cli
jbe
imul
rolb
ljmp
ds
or
pop
pop
lret
or
stos
pop
cli
push
ja
imul
rcll
add
bound
dec
push
movsl
sub
enterw
popf
and
xor
inc
mov
cld
inc
pushf
mov
insl
ret
or
dec
out
sub
notl
icebp
xchg
dec
or
in
add
mov
push
lcall
sbb
or
movsb
push
push
pop
pop
sub
test
mov
outsb
push
insb
jecxz
sbb
loopew
out
cld
fbld
adc
sub
notl
pop
add
cmp
sub
fstpl
fsubrs
fdivl
lcall
add
aad
push
or
xlat
adc
pop
cmp
cli
inc
sbb
add
pop
std
cmp
fxtract
arpl
mov
xchg
test
es
jo
mov
popf
int3
add
push
pushl
and
pop
push
jmp
and
mov
fs
adc
cmpsb
popa
loope
jns
xchg
lock
popa
in
xor
ljmp
lods
add
pop
fildl
fiadds
out
push
lods
cmp
xor
xor
xor
sub
dec
and
cmpl
int3
push
icebp
add
push
clc
xor
call
dec
lahf
lods
vcmpsd
scas
xchg
jmp
or
xchg
inc
mov
xorb
icebp
out
shrl
jp
xlat
jb
push
dec
lret
aad
jle
daa
sub
fidivl
subl
fwait
stc
or
pop
jp
shlb
xor
cwtl
fnstsw
jp
push
hlt
jnp
jae
mov
sbb
ss
inc
inc
xchg
mov
fisttpl
sbb
adc
iret
mov
cltd
testl
push
pop
dec
fcoml
mov
mov
jb
mov
mov
jmp
shl
lds
js
cwtl
mov
or
cmp
cmp
in
mov
clc
mov
repnz
and
pushf
or
or
mov
aas
push
add
call
movsb
push
and
inc
pop
push
cld
lods
in
sbb
stc
pop
adc
mov
sub
pop
xchg
push
mov
fiadds
sbb
and
popfw
mov
shr
sbb
cmp
pop
inc
fisttps
cs
and
jmp
cltd
cmp
mov
cmp
adc
add
stos
in
pop
pop
fs
call
aam
leave
in
pop
mov
jno
add
outsl
xlat
movsl
int
fsubrp
jb
je
orl
mov
push
or
mov
cmc
arpl
nop
cmpsb
xor
test
mov
xlat
pop
sbb
mov
sub
fisubrl
sbb
pop
sbb
in
mov
sahf
les
push
cmp
outsl
mov
or
pusha
dec
or
push
mov
je
inc
mov
sarl
cmp
call
or
sub
insb
adc
inc
sub
mov
divb
inc
test
nop
jns
out
push
imul
mov
pop
sbb
sbb
xor
sub
mov
fwait
sub
out
in
push
dec
sbb
sub
insb
mov
fiadds
push
pusha
push
adc
adcb
out
daa
pusha
daa
mov
bound
pop
int3
inc
jnp
mov
adc
sbb
mov
scas
pop
cmp
pop
jo
enter
fmulp
sbb
pop
dec
outsb
outsl
popf
xor
lds
push
stos
add
cli
or
cwtl
repnz
and
jl
sbb
mov
sbb
imul
adc
push
dec
inc
add
stos
into
xchg
jecxz
dec
out
or
jp
test
sahf
loopne
in
test
inc
icebp
imul
call
xchg
and
jg
or
popa
mov
cltd
outsb
rcl
out
cmp
loopne
xchg
lock
int3
and
pop
inc
popf
outsl
test
cltd
mov
xchg
xlat
and
inc
scas
sahf
int3
iret
dec
and
cmp
jae
icebp
in
fs
push
arpl
bound
pop
pop
sub
mov
shlb
and
cmpsb
filds
js
ljmp
out
inc
push
popl
out
inc
addr16
cwtl
fists
cmpsb
and
lcall
adc
stos
xor
test
aas
adc
fxch
call
add
and
add
xchg
xchg
fsubl
or
loop
add
nop
lods
mov
aam
call
rcrb
adc
icebp
loop
scas
into
cmp
bound
into
dec
add
jmp
test
repz
xchg
add
jb
test
mov
lods
fdivr
out
inc
es
call
test
cltd
movsl
cmp
add
sbb
pop
sbb
mov
cmpsl
sbb
push
lds
out
pop
and
sbb
add
xor
out
mov
hlt
into
pop
mov
xor
inc
xchg
shl
addl
push
push
or
sbb
rol
cwtl
aam
out
sbb
sbb
push
mul
sbb
jge
and
out
daa
and
movsl
dec
lcall
push
pop
or
cmp
add
popa
and
mov
int3
xor
outsb
sbb
inc
jecxz,pn
scas
inc
in
or
out
loop
call
ja
lock
jg
insl
ret
int3
repz
movsl
dec
daa
sub
lahf
pop
arpl
mov
rorb
adc
ret
fsubrs
cmc
jb
dec
sub
lea
nop
cmp
xor
push
leave
push
stos
sub
adc
or
cmc
xchg
lret
push
outsl
xor
mov
imul
dec
orl
test
lahf
neg
mov
cld
ds
push
cmpsb
jo
lods
loop
pushf
inc
cmp
data16
sub
sub
dec
mov
mov
lods
orb
pop
mov
icebp
jge
ljmp
ficomps
fbld
lds
pop
push
pusha
add
add
jb
ss
adc
and
adc
add
xchg
subb
shrl
mov
push
adc
in
add
jmp
mov
lds
test
cmp
add
push
adc
mov
mov
ret
mov
dec
fcoml
mov
sbb
jl
pop
or
or
in
xchg
outsb
add
pop
cmp
rcr
mov
out
sbb
in
jns
lds
pcmpeqd
add
test
or
xchg
or
xchg
add
mov
cmp
ss
cmp
int
push
cmpsl
ret
mov
daa
mov
arpl
sbb
outsb
addr16
jb
pop
xor
call
mov
push
xchg
loope
cmp
psubw
mov
add
int3
pop
cmp
xchg
lods
and
pop
stos
adc
ret
ds
addb
mov
ja
test
es
in
in
sti
nop
sbb
call
pop
imul
pop
sub
sbb
lret
dec
push
out
xchg
repz
dec
loopne
or
out
pushf
add
cmp
and
mov
pushl
das
jl
std
and
outsl
mov
xchg
in
xor
imul
fmul
pop
int
push
mov
icebp
dec
mov
ss
stos
pop
adc
vmovddup
sub
sbb
sbb
or
gs
popa
mov
call
sub
neg
push
lds
mov
dec
xchg
dec
andl
xlat
js
cmp
je
js
aam
xor
cmpsb
pop
sbb
in
push
xorl
pusha
push
loop
add
ror
ds
cmp
push
dec
push
bound
dec
cmp
int
test
sub
stos
sbb
add
lock
add
fcmove
sub
cli
adc
test
gs
cmpsl
movsb
imul
lock
add
inc
dec
jae
sub
inc
jmp
pop
test
aas
pop
insl
push
lea
mov
push
cmp
sub
aad
or
mov
xchg
or
sarl
push
shrb
lcall
gs
mov
das
mov
push
pop
fwait
xor
aad
cmp
adcl
test
jmp
push
insb
daa
dec
test
add
mov
mov
mov
dec
clc
mov
imul
mov
fwait
out
mov
jbe
sbb
ja
pop
dec
push
mov
repz
shrb
daa
inc
add
add
hlt
jb
stc
mul
incb
push
cwtl
pushf
xchg
std
ficoms
and
jns
iret
movsl
cmpsb
mov
out
mov
fcmovnbe
or
add
into
bound
jb
mov
cltd
jmp
mov
in
lds
ficoml
scas
push
inc
and
dec
sbb
popf
divl
jbe
xor
gs
outsb
add
inc
inc
leave
mov
popa
dec
test
imul
bound
inc
push
push
jecxz
push
adc
and
add
js
pop
jo
jp
and
fisubl
jmp
mov
xchg
mov
data16
pop
inc
cld
and
call
mov
sub
dec
dec
xor
cmpsb
xor
mov
inc
aad
inc
insb
ds
stos
jns
dec
das
mov
cmp
movsl
aas
mov
push
dec
bound
pop
mov
xchg
pusha
bnd
push
or
cmp
cmc
inc
xor
pop
jbe
test
fimull
xchg
mov
sub
sub
xchg
push
pop
insb
adc
insb
lcall
inc
bound
outsl
cmp
into
shlb
lea
fsts
xor
insl
lret
leave
jecxz
addr16
pop
lret
add
out
dec
rcl
lcall
sub
sbb
xor
push
in
mov
subb
test
or
ret
cmp
cmc
invd
push
sti
in
lret
test
cmpsb
js
nop
dec
imulb
test
mov
push
shll
sbb
lods
dec
ds
addr16
out
lahf
insl
push
scas
sti
incb
ljmp
outsl
fnsave
add
pop
pop
xchg
mov
and
addr16
movsb
nop
jb
cld
inc
and
in
lcall
mov
dec
out
mov
adc
cmpsb
pop
push
leave
test
add
inc
mov
js
fdivrs
or
scas
push
insb
cmc
cmc
sub
sbb
std
adc
xor
dec
fisubrl
or
jo
pop
pop
inc
ret
jne
in
fisttps
mov
pop
cli
mov
enter
lds
add
inc
addl
push
or
cmp
xchg
insb
add
std
xchg
std
sbb
pop
sbb
xor
mov
push
insb
clc
fisubrs
aaa
outsl
mov
in
add
pop
arpl
mov
fwait
dec
cmp
out
xchg
test
add
xorb
push
sbb
popa
push
push
push
add
jb
sub
vpunpcklwd
or
dec
pop
add
je
outsb
imul
pop
aad
outsl
insl
cld
lods
aas
jp
test
jno
lret
daa
lahf
hlt
in
adcb
mov
clc
pop
and
pop
add
iret
movsl
addr16
dec
or
jmp
pusha
test
adc
sub
push
lods
sub
push
ja
jns
aam
lds
test
pushf
fwait
popl
push
push
je
lret
pushf
mov
jge
lcall
xor
loopne
jmp
xchg
adc
and
inc
and
cmc
xchg
scas
jbe
sbb
lret
lahf
outsb
mov
pop
mov
lret
iret
fisubs
mov
mov
sub
lret
xchg
mov
push
add
jae
xchg
jge
loopne
or
add
sbb
push
push
cmp
mov
mov
cmpsl
mov
mov
sub
or
lret
pop
xor
and
cmp
add
push
es
or
xchg
sub
loopne
mov
dec
pop
enter
sbb
lret
hlt
adc
movaps
lds
roll
mov
sub
xchg
sub
enter
std
inc
xchg
stos
cmp
lret
mov
fidivs
scas
fst
mov
mov
clc
pop
call
rolb
cmpsb
shll
mov
or
inc
hlt
outsb
xor
xchg
scas
or
push
jg
push
hlt
out
gs
out
and
push
inc
inc
dec
xchg
cmp
dec
in
loop
mov
ljmp
scas
xchg
add
jns
jmp
push
ret
fwait
out
sub
insb
push
fnsave
cmp
sbb
andb
xlat
pop
xor
and
sarl
lds
sub
shrb
in
mov
pop
and
inc
scas
pop
cmpsb
shrl
sub
push
pop
or
outsb
clc
cmc
lock
jge
cmpsb
lcall
mov
pop
int
leave
cmp
add
inc
sbb
jns
xchg
subb
add
pop
xchg
aaa
cmpsb
cmpl
shll
pusha
in
adc
std
in
dec
mov
or
xchg
jge
fmulp
jns
jp
mov
je
xor
popf
pop
inc
enter
xchg
pop
ret
nop
push
push
pop
mov
fstpt
dec
xchg
adc
arpl
ss
mov
out
jle
in
adc
fcmovb
mov
fldt
adc
or
push
fmull
push
add
fucomip
insl
icebp
mov
rolb
stc
outsb
enter
enter
and
push
int3
push
mov
cmp
push
enter
loopne
jo
lahf
outsl
mov
dec
into
jl
inc
stc
fs
gs
ret
inc
nop
mov
cmpl
or
xchg
mov
sub
adc
adc
and
jg
stos
addl
fnstsw
xchg
mov
xor
pop
pop
in
mov
fnsave
aad
int
insl
and
jecxz
xor
loop
fnsave
stc
ja
addr16
enter
je
jbe
faddl
imul
xor
sbb
push
adc
lods
fs
xchg
jge
movsl
test
bound
sub
loope
cmp
enter
add
testl
xor
aaa
into
test
mov
test
sub
ljmp
xor
cli
jne
loopne
mov
test
push
jecxz
and
es
and
pop
mov
lods
in
mov
movsb
das
jmp
cli
das
je
repnz
leave
mov
decl
and
sti
stos
lods
pushf
mov
xlat
ret
push
fdivl
push
fdivr
rcrb
push
pop
adc
rcl
push
out
rolb
out
cmpsb
fstpt
jne
mov
repz
add
lret
ret
lret
add
les
push
fdivrs
fidivrs
sti
xchg
xchg
adc
test
int3
pop
jge
cmp
add
and
stos
fs
daa
mov
mov
cmp
mov
cwtl
in
push
int3
icebp
jge
jns
or
shl
dec
inc
adc
dec
fdivs
mov
rcll
shl
stc
add
rolb
daa
jo
sahf
xchg
lcall
mov
gs
mov
cwtl
test
fcomps
mull
dec
in
dec
cmp
aad
ds
cwtl
shr
nop
xchg
mov
loop
and
sbb
pop
mov
iret
imul
rclb
adc
jp
std
shrb
jae
mov
dec
call
push
dec
add
or
test
ljmp
fadd
xchg
sub
cmpsl
push
dec
fwait
lods
loope
sbbl
int
test
je
out
adc
fs
mov
fists
push
aas
dec
cmp
stos
loop
mov
xor
frstor
sbb
test
movsl
adc
dec
cmp
outsl
aas
mov
fidivl
jmp
xchg
ret
loope
push
dec
stc
xchg
sbb
push
sub
arpl
xor
adc
push
pop
cmpsl
ret
fwait
stos
mov
dec
not
sbb
xor
sbb
js
dec
mov
pop
fisubrl
dec
dec
lock
xchg
into
mov
xor
jmp
ja
xlat
les
out
loop
in
cmc
fiaddl
fs
aas
std
loope
popa
pusha
xchg
in
int
mov
mov
pop
xchg
addr16
insb
dec
push
adc
ds
push
xchg
popf
mov
and
jb
enter
or
sbb
and
push
cmp
xchg
jne
add
test
add
insl
sub
mov
push
dec
adc
inc
dec
stos
sete
pop
mov
add
aas
mov
cmp
std
vpshufd
push
push
or
fmuls
and
fwait
sbb
pusha
loopne
movsl
mov
das
imul
std
enter
scas
sub
and
or
push
mov
in
je
jmp
xchg
movsl
test
repz
push
and
loope
xlat
push
ret
adc
gs
notb
sbb
mov
loop
imul
cmp
adc
aaa
xchg
ss
or
bound
pop
popa
cmp
mov
jno
pusha
inc
push
cmpl
mov
mov
push
test
test
in
mov
test
shlb
dec
popa
mov
adc
pusha
dec
xchg
mov
push
pop
je
fsubr
adcl
adc
aam
test
ds
imul
inc
pop
jb
rcrl
xchg
out
mov
rcll
fnstcw
loope
psubd
xchg
or
incl
jmp
lahf
cmc
adc
mov
add
push
sti
fisubrl
popf
scas
mov
in
push
jns
cmpsl
jo
and
movsl
std
and
push
mov
repz
mov
add
jmp
mov
ret
mov
ret
sbb
fadds
in
pop
sahf
inc
or
mov
sub
ss
enter
daa
pusha
xchg
jnp
into
sub
lahf
pop
cmp
movsb
nop
in
jle
rcl
js
inc
js
xor
jp
push
mov
cwtl
loopne
je
insl
je,pt
pop
add
cmp
out
cmc
js
insl
ret
shlb
and
xchg
xchg
stos
int
lret
nop
inc
fnstcw
loop
addl
addr16
movsb
add
cmp
lret
shlb
add
hlt
ja
lahf
test
mov
fldenv
mov
sub
movsb
fisubl
fidivrl
xchg
adc
jl
sub
or
adc
or
mov
cmp
int3
mov
repnz
adc
fisubs
cmpsb
mov
pop
jno
cwtl
mov
xchg
cs
in
inc
aad
add
sbb
pop
xor
push
pop
mov
mov
fnstcw
mov
or
sti
loop
pop
imul
jo
loop
mov
inc
or
in
sbb
fidivl
es
jnp
out
daa
mov
xchg
sbb
dec
pop
call
out
repz
or
mov
jg
lahf
dec
push
xchg
cmp
mov
xchg
or
push
cmp
adc
push
mov
out
and
mov
xor
rcl
add
dec
fstpl
push
or
push
mov
jb
xchg
cmp
or
xor
popf
ret
sbb
mov
cmp
push
jmp
or
into
dec
ret
repnz
bound
add
into
dec
lahf
enter
cmp
sub
int
pop
sti
xchg
jnp
dec
mov
or
imul
ror
inc
dec
and
ss
pop
push
mov
dec
cmpsb
fstpt
addr16
push
or
sub
mov
mov
cld
push
dec
xor
movsb
lret
sbb
fcmove
mov
dec
xor
mov
and
addb
fsub
jo
out
aaa
shll
movsl
jne
push
ror
lods
imul
stc
inc
sbb
or
mov
xlat
xor
xlat
xor
mov
mov
ret
pushl
and
iret
lahf
orl
jb
movl
je
aas
add
outsb
dec
adc
aam
xor
xor
add
ds
and
es
mov
mov
push
sti
xor
sbb
out
mov
sbb
sbb
push
sub
jne
xchg
xchg
rcll
mov
int
cwtl
lods
add
enter
sbb
mov
sub
push
mov
sub
jmp
mov
in
call
sti
sub
clc
pop
mov
lcall
pop
mov
inc
dec
cmp
xlat
sbb
inc
lret
test
int3
ret
pop
popf
pop
popf
insb
mov
jae
cli
fisubrs
add
shrb
pop
lahf
iret
or
mov
pusha
mov
test
lret
arpl
xor
dec
in
pop
xor
fs
out
fdivs
repnz
lds
lods
cmp
push
aaa
dec
push
sub
enter
inc
movsb
in
lcall
out
and
xchg
cmp
pop
and
loopne
or
out
add
cmp
or
pop
mov
movsl
arpl
and
and
dec
mov
jmp
mov
les
lods
ds
lods
popf
push
es
sub
loop
jg
mov
clc
mov
lahf
pop
into
ds
mov
jmp
dec
jns
cmp
mov
hlt
dec
xchg
xor
out
pop
icebp
cmp
xchg
call
inc
push
cmp
jg
lret
scas
mov
and
mov
jne
shrl
leave
mull
les
jl
fadds
cld
daa
popl
mov
jo
lret
dec
pop
or
mov
iret
mul
adc
sub
imul
sub
xchg
push
cmp
xchg
cmp
fsts
imull
or
mov
jo
std
out
cmp
inc
mov
adc
inc
mov
or
std
insl
or
dec
ret
jnp
mov
gs
addr16
xchg
arpl
adc
outsb
leave
inc
outsl
popa
add
push
sbb
into
adc
mov
rcrl
aad
outsb
repz
lahf
fwait
mov
cwtl
fisttpl
into
inc
mov
frstor
jns
cmpsb
pop
jmp
stc
repnz
cli
add
ficoms
iret
sub
jp
rorb
scas
mov
sbb
in
mov
out
pop
scas
test
enter
jge
xchg
dec
dec
xchg
or
je
jae
mov
xlat
push
xchg
lret
jg
rcll
insl
rclb
jl
jnp
xchg
ss
les
loopne
outsl
pop
int
movb
mov
xchg
push
xchg
in
push
repnz
or
lock
js
rcrl
stc
jmp
cmp
cmp
inc
and
or
dec
int3
inc
test
cld
in
jno
orb
mov
lret
push
fists
rcll
sbbl
adc
cmc
or
push
push
sar
mov
inc
sbb
inc
repnz
inc
fisttps
and
and
mov
push
mov
xchg
mov
in
cmp
sub
cmp
cld
jno
xor
cltd
imul
xorb
push
loope
lret
aas
mov
insl
inc
adc
out
lods
dec
insl
test
gs
ljmp
sub
iret
test
stos
imul
loope
jle
sti
pop
mov
ret
cmpsb
jb
cmpsb
add
lods
xchg
pop
or
cwtl
lods
jecxz
or
xlat
push
sbb
xchg
stc
cwtl
enter
jb
pop
negb
mov
jno
add
dec
ljmp
mov
fidivrs
jns
sbb
pop
pop
or
scas
notb
sbb
frstor
sbb
cs
sub
pop
or
mull
sti
push
mov
and
inc
jnp
mov
mov
sub
test
xor
sbb
mov
fstps
out
push
lcall
sbb
mov
or
push
out
insb
mov
in
std
sbb
shr
inc
mov
add
test
shlb
into
mov
loopne
ja
call
or
pushf
or
sub
pop
mov
adc
push
jge
dec
inc
fstpl
pop
outsb
jo
mov
out
data16
cmpsb
imul
inc
pop
sti
mov
add
cmp
cmp
jg
fbstp
cmpsl
xor
rcr
cli
mov
xchg
jb
jmp
insl
imul
nop
adc
dec
cwtl
add
dec
xlat
add
and
je
in
mov
xor
pop
jb
xor
inc
mov
and
popf
cmp
pop
lds
pusha
je
jle
outsl
dec
jbe
or
push
sub
cwtl
inc
jno
mov
add
nop
pop
adc
adc
mov
imul
push
es
lret
jo
movsl
mov
dec
or
or
out
loop
and
sti
mov
xchg
push
in
andl
ret
mov
iret
hlt
pop
sbb
sub
dec
lods
jns
fcom
xchg
mov
cmp
mov
mov
jnp
stc
mov
mov
add
xchg
sti
int3
xchg
adc
jecxz
stc
add
outsb
repnz
cltd
sbb
xor
pop
adc
movsl
mov
push
imul
popf
jno
lods
sti
stc
jecxz
cs
and
cwtl
lods
adc
xor
lods
cltd
idivl
loop
fnsave
in
incl
cmp
outsl
mov
leave
loopne
mov
int3
push
xchg
and
mov
lods
movsl
push
add
orl
dec
and
dec
daa
repnz
arpl
jne
mov
jecxz
mov
mov
mov
push
movsl
js
fdivr
mov
out
cli
addr16
jmp
inc
push
rol
mov
imul
xchg
aas
sub
xchg
dec
inc
jnp
lock
xor
loop
dec
dec
rol
sbb
sub
inc
sbb
add
bound
test
cmp
dec
cmp
push
mov
cmc
xor
scas
clc
lcall
xchg
inc
lods
test
fucomi
xchg
cmp
test
adc
sahf
in
xor
sbb
int
xchg
pop
imul
pop
jns
cmp
xor
and
lods
mov
pop
adc
mov
xor
push
mov
xor
xchg
std
test
popf
sub
inc
cmp
outsb
or
popf
in
fldl
or
lods
mov
outsl
lock
inc
insb
mov
mov
sub
je
push
in
scas
dec
cli
xor
xor
roll
pop
rcrb
loopne
mull
fldcw
jp
ret
sub
loop
cwtl
roll
and
out
cwtl
pop
adc
in
and
jno
pop
dec
es
inc
cmpsb
cli
sti
inc
aam
test
push
jne
nop
enter
xlat
in
fstl
add
dec
dec
and
inc
call
jnp
mov
aam
mov
in
mov
int
xchg
jmp
jb
loopne
test
push
imul
popf
xor
inc
mov
ffreep
inc
loope
test
jl
movsl
pop
int
adc
xor
and
sbb
fucomip
adc
loope
mov
mov
add
imul
fwait
jle
rcrl
pop
iret
filds
in
out
std
ljmp
sbb
mov
repnz
in
inc
jmp
xor
pop
jns
mov
dec
jb
add
pop
sub
out
test
xor
loopne
jb
aas
jbe
dec
outsb
push
jmp
push
sub
stos
and
push
fisttpl
pop
mov
jp
ss
jge
mov
iret
xchg
shl
pushf
and
les
dec
sbb
lds
xor
sub
dec
xchg
pop
add
cmp
add
push
xchg
addr16
stos
xrelease
push
ss
outsl
jno
add
pop
xor
cli
sti
int3
xlat
sahf
negl
fwait
push
test
and
movsb
mov
mov
sbb
pop
cmp
pop
mov
icebp
test
fisubs
add
jg
or
movsl
lock
adc
adc
and
mov
and
cmpsb
jp
cmp
or
jb
stos
or
mov
sub
and
xchg
pushf
add
jle
or
inc
xor
push
lret
mov
xchg
mov
and
cld
cmc
xchg
mov
add
pop
sbb
jo
mov
or
inc
cmp
aam
add
jns
lea
fwait
repz
push
adc
adc
jecxz
pop
ljmp
pop
outsl
loop
and
lds
mov
xor
lods
mov
xor
pop
mov
mov
adc
cmp
dec
jl
ja
adc
movsl
cmp
push
ja,pt
sbb
lret
pushl
dec
fmulp
sub
sbb
sub
jns
outsl
xor
mov
jbe
adc
lret
and
hlt
out
sbb
pop
in
xchg
mov
sbb
push
xchg
das
push
inc
testl
fcompl
dec
push
pop
dec
jne
xchg
out
std
imul
test
test
adc
iretw
mov
stos
out
sbb
ret
cmp
fnstsw
inc
pop
rcl
lret
inc
in
faddp
cli
imul
in
push
cmp
loop
js
mov
jl
in
icebp
mov
xchg
loop
ljmp
sar
clc
outsb
pop
addr16
dec
in
mov
pop
add
pop
mov
jae
call
cwtl
ret
sub
leave
lcall
pop
sub
inc
mov
jae
ds
add
movsb
add
jbe
add
cmp
rcrb
test
fcmovnu
aas
aad
push
daa
add
mov
ljmp
mov
add
movsl
pop
add
ja
fwait
in
mov
push
inc
scas
mov
mov
mov
pop
lods
iret
fmuls
xor
mov
mov
test
adc
mov
pop
dec
scas
mov
adcl
hlt
jb
pusha
dec
mov
fs
jno
test
cmpsl
xchg
jnp
adc
sub
ljmp
xor
rcr
fsub
jnp
pusha
addr16
clc
or
mov
loopne
push
stos
push
call
push
mov
bound
xchg
inc
test
nop
arpl
imul
pop
int3
mov
mov
rcl
adc
jecxz
fistpl
pop
cmpsb
xor
enter
xor
xchg
or
int
popf
or
in
ss
jl
mov
push
popf
shll
cmc
in
sahf
pop
pop
and
test
out
cmp
mulb
and
loop
cmp
fildl
sbb
pop
fld
ret
pop
mov
mov
popf
fimuls
repnz
push
ret
and
cld
jmp
adc
jmp
repz
lock
pop
mov
adc
clc
jl
push
sub
jbe
ret
fiaddl
pop
mov
pop
push
sahf
lock
inc
dec
mov
lret
xor
into
aas
fs
sbb
out
inc
sub
fwait
add
lock
pop
xlat
jae
pop
xor
outsb
in
inc
nop
mov
cmpsl
addr16
pop
int
fs
lret
lcall
jl
mov
push
out
outsb
lods
sbb
push
lods
or
pushf
jmp
outsb
ffree
lods
idivl
jne
xchg
int3
mov
std
dec
adc
aaa
mov
inc
int
bound
fnstsw
jne
fiadds
jns
movsl
iret
cmp
cwtl
and
aaa
dec
push
aam
dec
mov
fs
jne
iret
jmp
cmp
in
cmp
pop
and
xlat
jp
cli
inc
jo
in
xchg
mov
sbb
or
aas
cmp
xor
add
in
cmpsb
lods
test
lret
pop
push
inc
icebp
mov
pop
fs
mov
add
or
fs
cltd
dec
mov
cltd
lret
xor
mov
dec
dec
adc
adc
sub
and
andl
lock
pop
sbb
xchg
test
xor
xor
sub
push
inc
push
leave
in
mov
iret
push
loop
dec
sbbb
lahf
sbb
pop
jle
jb
dec
in
cmp
pop
xor
push
adc
xor
and
inc
mov
jle
nop
jge
int3
adc
mov
pop
imul
jmp
mov
movsl
daa
rcrb
mov
mul
movsl
ss
pop
jmp
jne
mov
out
sti
lods
shlb
or
aam
or
cs
mov
ret
xor
adc
inc
mov
mov
adc
fisubrl
jbe
sub
or
sub
dec
cmp
shlb
hlt
mov
mov
call
or
test
or
mov
rorb
hlt
or
pusha
lods
and
rorl
fsubr
hlt
mov
sbb
clc
in
out
add
aaa
dec
dec
ffree
stc
rdtsc
xchg
hlt
or
inc
enter
les
cli
scas
in
hlt
popa
lock
jnp
pop
or
push
test
dec
repnz
imul
outsb
fisubs
jecxz
mov
sbb
mov
testb
outsl
sub
lock
roll
stos
pop
div
and
lods
movsb
xchg
dec
mov
loopne
ljmp
cwtl
aam
mov
xor
lods
ficoml
cmp
push
push
stos
cmp
iret
or
mov
aam
mov
or
aas
fcompl
jmp
les
pop
xor
dec
fs
adc
xor
xor
cli
push
mov
mov
mov
adc
imul
scas
lods
mov
mov
inc
int
add
xchg
subb
push
incl
imul
inc
jp
pushf
mov
push
sahf
pop
push
xorl
fidivl
test
adc
add
lea
imul
lcall
push
pusha
fwait
jle
cmp
jg
or
call
mov
dec
mov
sub
push
shrb
and
in
ret
mov
and
arpl
jne
mov
xor
scas
xor
scas
jne
xchg
xchg
fstpt
dec
mov
inc
jns
sub
cld
mov
push
and
pop
imul
mov
mov
pop
pusha
inc
fnstenv
adc
sub
je
lret
das
or
pusha
mov
scas
lea
sub
rcrb
push
jl
ja
and
dec
sbb
pop
mov
jne
cmp
adc
pop
sub
lock
push
mov
out
dec
jg
lahf
inc
scas
cmp
outsb
loopne
or
mov
cmpsl
push
jmp
mov
shrb
mov
les
xchg
mov
xchg
orl
sub
insl
clc
lods
cmp
xchg
lret
movsl
sarb
mov
and
xor
scas
js
popa
sbb
icebp
jecxz
fistl
xor
inc
or
jmp
xchg
aaa
ss
repz
cmp
jno
ja
xchg
pop
and
mov
sbb
test
push
push
sub
pop
iret
mov
fcomps
je
push
outsb
or
inc
cmc
shr
lods
or
movsl
pop
in
shll
out
and
pop
pop
lds
cmpsb
mov
mov
cwtl
jbe
add
jl
ljmp
out
idivb
ficompl
shrb
out
push
fdivrs
mov
shrb
std
hlt
scas
cmp
jbe
repz
cmp
dec
mov
bound
cmp
mov
stos
popa
ds
xchg
sub
mov
fimull
cli
mov
insb
lds
rol
sub
push
cltd
aaa
xchg
lret
stc
cltd
mov
mov
adc
add
sbb
mov
mov
aas
bound
push
cmp
sub
lods
dec
mov
lds
dec
sarb
inc
push
in
stc
lahf
out
cmc
sti
fisubrl
push
dec
loop
sti
mov
or
loop
cltd
mov
loopne
inc
sbbl
mov
add
ret
jbe
jnp
cltd
adc
movsl
adc
out
pop
popa
dec
mov
fwait
mov
fistpll
cmp
sbb
fsubrs
inc
xor
jne
xchg
fwait
xchg
aam
repz
mov
and
sbb
in
pushf
aam
shll
repz
or
inc
dec
test
leave
push
inc
dec
fstpl
movl
mov
jne
fbld
ret
movsb
call
add
add
sub
and
jg
pop
jb
mov
decb
sbb
sahf
out
lds
sub
inc
lods
rorb
inc
dec
jb
or
loope
sub
addr16
or
ds
icebp
imul
xor
mov
xchg
fs
pop
lcall
xor
mov
addr16
jge
div
movsb
mov
or
sbb
xchg
or
xchg
mov
and
nop
dec
pop
mov
xchg
cmp
jl
pop
imul
inc
mov
push
pop
xchg
xchg
jge
negl
lret
addr16
cmp
push
xor
or
and
mov
cli
adc
fstps
sti
incb
gs
sbb
fadds
sbb
frstor
or
aam
or
and
xchg
test
mov
icebp
and
fsubrl
ss
inc
int3
inc
push
iret
fcomps
and
jae
dec
out
das
or
mov
dec
lcall
rcr
mov
xchg
dec
sbb
ss
jnp
scas
dec
imul
cld
add
sub
or
cs
mov
or
and
xchg
mov
test
push
divl
pop
nop
std
pop
movsl
dec
insl
xsha256
cmpsb
adc
lahf
cli
jl
xchg
dec
test
imul
mov
xchg
sub
fisttps
out
ds
setp
test
add
and
cli
push
xorb
enter
and
push
dec
mov
cmp
mov
add
cli
dec
add
adc
popa
test
ret
stc
and
xor
push
inc
push
push
or
cltd
popf
pop
stos
mov
fidivrl
out
mov
push
lahf
call
rcl
icebp
insl
into
ret
xchg
addr16
cmp
movsb
rcl
testb
sub
jecxz
fdivr
cmp
loop
sahf
loop
cwtl
sub
pushf
mov
xchg
das
nop
cmp
xor
shl
int
and
leave
xor
mov
icebp
push
mov
test
xor
addl
jmp
push
push
sbb
ret
adc
mov
cmpsb
jmp
and
or
add
lods
test
and
aam
mov
dec
movsb
adcb
mov
cmp
punpcklbw
mov
sub
mov
fdivrs
mov
test
push
loopne
mov
es
pop
cmpsb
mov
pop
mov
mov
xchg
xchg
push
mov
fsubr
int3
pop
push
push
xchg
cmp
movsb
outsb
fimull
push
mov
ljmp
or
inc
mov
add
push
push
sahf
sbb
in
inc
adcl
gs
lds
daa
dec
aam
pop
mov
aaa
xor
fs
push
call
xchg
ja
andl
xchg
les
or
xor
loopne
inc
sbb
jno
adc
out
jge
sub
aaa
daa
sub
jnp
lds
movb
fsubrs
mov
xor
push
pushf
sub
cmp
add
lods
sbb
xchg
shr
movsl
jns
movsb
out
pop
xor
aad
jne
xor
mov
cli
shrl
xchg
rorb
adc
dec
mov
xchg
jns
shl
or
stos
mov
iret
scas
mov
stc
into
mov
mov
mov
mov
arpl
pop
out
pop
int
in
mov
sbb
ljmp
shll
mov
mov
and
add
xor
or
push
jl
pop
and
dec
es
adc
add
jg
addl
repz
xor
lea
pop
outsb
or
data16
icebp
in
shlb
in
inc
aad
fwait
aam
scas
mov
loopne
jg
jo
push
test
movsb
in
cli
fidivrl
lret
jg
in
jbe
lahf
fstpl
mov
pop
addr16
push
fdivrs
fildll
or
mov
adcb
jmp
sub
mov
jne,pt
popa
inc
and
jbe
mov
insl
pop
enter
mov
dec
inc
pop
and
inc
mov
mov
or
clc
dec
int3
mov
cmpsl
xor
adc
std
xlat
mov
mov
push
ja
pop
jne
adc
inc
lcall
cmp
xchg
shl
mov
cmp
fidivrs
mov
mov
dec
imul
pop
ret
adc
pushf
fs
nop
lcall
xchg
inc
dec
mov
out
push
dec
stos
and
dec
mov
clc
pop
mov
and
in
stc
mov
mov
push
into
jl
cmc
dec
sbb
and
pushf
js
push
add
push
mov
insl
and
ds
loop
jb
insl
jne
mov
inc
mov
shrl
pop
inc
and
xchg
aam
pop
lods
xor
xchg
sub
push
daa
int3
call
inc
push
ds
cld
andb
or
mov
sbb
ret
leave
into
sbb
frstor
test
pushf
stos
jnp
lret
scas
fdivl
inc
sbb
and
push
add
aad
push
mov
cmp
test
jbe
push
sbb
mov
xlat
stos
mov
loop
cmpb
xor
cmp
pop
je
push
arpl
shrb
pop
jge
or
movsb
mov
hlt
xchg
mov
fisubrs
jle
xchg
rcl
mov
push
dec
fdivrp
cmc
cld
adc
inc
inc
xchg
int3
or
sub
adc
je
cmp
leave
lahf
shrb
dec
pop
test
jg
mov
int
and
lock
sub
mov
and
pop
adc
bound
movl
lods
mov
addb
push
xor
inc
cli
sahf
ds
notl
sar
adc
std
enter
xor
add
sarl
and
dec
dec
pop
mov
xchg
popf
out
mov
insl
pop
lret
cld
arpl
lret
int
fdivrs
push
imul
cmp
mov
adc
bound
pushf
pusha
cs
jl
stos
rcrb
ret
mov
es
xor
and
int3
mov
ret
sti
into
jmp
clc
xor
dec
dec
jb
cwtl
mov
adc
movsb
and
sbb
and
lea
sarb
pop
dec
pusha
gs
sahf
xor
sbb
sbb
dec
xchg
jp
push
ret
cmpsb
pop
iret
out
mov
aaa
xor
out
and
cmp
push
mov
stos
xor
test
fstl
cwtl
and
fcmovnb
loop
arpl
lcall
mov
aas
cmpsl
ljmp
xchg
repnz
pop
and
jbe
f2xm1
push
push
fnstenv
and
out
lds
iret
adc
jg
push
or
mov
popf
xchg
push
pushf
shll
ljmp
dec
fistps
mov
pop
out
ss
fisubs
push
int3
cltd
sub
jecxz
pop
xor
jno
xchg
and
cmp
cmpsb
shrb
cli
adc
adc
lret
adc
inc
mov
insl
dec
mov
iret
out
sub
pop
sub
out
subl
pop
in
or
into
scas
rorl
stos
mov
adc
test
popa
mov
faddl
pushf
aaa
out
jecxz
mov
hlt
xchg
ffreep
addr16
dec
or
or
int
add
popf
pop
mov
lfs
fbld
or
shrb
xlat
pop
and
inc
push
insl
dec
and
jmp
cmp
xor
mov
int
cmp
in
out
mov
in
std
or
fsubrl
popa
or
and
push
sbb
mov
fdivrl
sub
aaa
mov
icebp
call
mov
and
stc
les
adcl
push
push
add
test
cld
lods
repz
mov
loopne
pusha
aad
call
and
jo
mov
xor
or
rcl
lret
cltd
jnp
sbb
and
data16
jle
push
out
push
or
inc
out
das
aam
or
push
and
jle
jae
pop
dec
imul
cmp
pusha
loop
movsb
jno
ljmp
and
and
es
sbb
inc
jo
lret
mov
push
divb
or
out
mov
cmpsl
push
cmp
sub
xor
adc
xor
mov
and
mov
inc
mov
data16
xor
inc
pusha
xor
clc
das
movsb
add
mov
rorb
add
test
nop
mov
and
jle
xchg
insb
test
jecxz
or
push
push
sub
nop
cmp
mov
jl
push
lret
orl
sbb
jle
and
repz
scas
cmc
push
fimuls
pop
pop
lods
sbb
in
inc
mov
lahf
or
not
outsl
dec
inc
clc
xchg
jb
leave
xor
xor
mov
mov
jg
sahf
pusha
lods
frstor
ret
adc
adc
cmpsl
mov
lcall
cmpsb
outsb
jno
xchg
mov
mov
xchg
outsl
xor
pop
ss
insl
in
jge
dec
ficompl
fimull
mov
js
push
outsl
popa
test
lahf
push
test
movsb
test
scas
ljmp
cs
clc
pop
and
test
mov
lret
sub
mov
mov
fwait
cmp
cmp
sbb
cltd
or
pop
arpl
or
ret
outsl
jmp
ss
in
dec
js
pusha
add
sbb
mov
mov
xchg
xchg
sbb
xor
outsl
adc
rcll
movsl
movsl
push
and
and
cltd
jns
adc
aaa
dec
dec
adc
loopne
adc
sti
sarb
mov
jb
lret
dec
popa
mov
push
scas
fs
xorb
cmpb
cltd
jg
or
mov
mov
mov
fwait
aam
jl
mov
andl
pusha
sub
mov
mov
es
and
loop
and
push
add
test
sarl
mov
mov
roll
lea
pop
jle
adc
jp
lea
add
test
jle
cld
scas
sub
mov
leave
sahf
lea
test
repz
jno
lock
mov
mov
pushf
adc
sbb
xor
inc
and
lds
xor
sub
dec
pop
mov
clc
push
push
mov
adc
xor
jb
pop
test
outsl
icebp
and
rcll
lea
cmpsb
xchg
cltd
xchg
lcall
mov
pusha
sub
cmp
mov
xor
out
call
popa
fiaddl
pop
push
movb
sahf
lods
jge
mov
daa
xchg
or
out
negb
xchg
aaa
or
fiaddl
imul
add
mov
fs
test
sbb
mov
mov
xchg
insl
push
jle
js
jg
and
xor
imul
subl
out
fimuls
xorl
das
jns
mov
jg
xor
dec
loope
aad
repnz
pop
dec
cmc
inc
nop
jne
out
aam
dec
mov
pop
mov
sahf
cld
mov
mov
cmp
cs
ljmp
enter
or
mov
flds
inc
dec
mov
dec
cli
mov
add
pop
jns
push
xor
push
fwait
pop
xchg
jo
xlat
fsts
or
mov
jo
mov
popa
call
out
add
icebp
in
push
push
inc
adc
push
push
inc
xchg
loopne
js
cmpsb
out
xchg
dec
inc
push
es
jle
push
dec
aaa
popf
bnd
fdivp
inc
and
jbe
cmc
add
sarb
mov
stos
fnstsw
push
dec
xchg
mov
cmp
mov
or
aam
test
inc
inc
xor
fildl
cmpsb
sub
inc
xor
stos
or
add
mov
icebp
dec
scas
pop
push
jl
pop
mov
mov
inc
bound
xchg
mov
ret
xchg
xchg
mov
fldt
push
ret
int
mov
and
fbstp
or
in
jb
test
nop
adc
icebp
dec
or
lahf
cwtl
and
decl
stos
sar
or
xchg
lods
sub
mov
dec
and
cmp
jnp
sub
scas
loopne
mov
into
fdivrs
stos
mov
shlb
jmp
sub
test
jl
gs
cld
mov
movsb
ljmp
cs
loop
es
and
or
mov
add
pusha
into
insb
xor
dec
xchg
adc
insb
or
ret
xchg
inc
scas
xchg
icebp
add
cmova
add
outsl
jnp
in
push
inc
push
rorl
dec
or
cmp
add
mov
dec
mov
sub
xchg
xchg
mov
ljmp
mov
xorl
mov
movsb
sub
fcmovnb
nop
pop
cmp
icebp
jne
shll
sub
or
mov
fiadds
fdivrs
subl
cmp
inc
repz
jne
mov
sbb
xchg
sbb
push
pop
push
sti
out
dec
mov
sub
ja
mov
leave
xchg
cmp
pop
jge
mov
xchg
mov
xchg
fcompl
mov
sti
jp
pop
jb
dec
mov
negb
fcompl
jge
dec
mov
inc
jno
jg
and
rcll
adc
mov
pop
cmp
mov
js
sub
push
testb
xchg
stc
cmpsb
clc
mov
jmp
fsubrl
add
cmp
pop
movsl
addr16
xchg
adc
pop
push
sub
push
stc
xchg
pop
pop
sar
insl
mov
mov
adc
stos
mov
dec
pop
sub
out
push
pop
les
jle
leave
shrl
xor
pop
mov
adc
cmpsb
xchg
int
sahf
movsb
idivl
pmullw
lea
lret
adc
jbe
mov
sub
sarl
jo
push
mov
sbbl
jne
cs
and
push
push
fstpt
xor
push
sbb
cmpsb
jg
rcrb
nop
aaa
ret
in
shrb
adcl
jmp
in
dec
xlat
pop
mov
clc
scas
push
sar
mov
and
movsl
pop
or
out
adc
sub
repnz
jne
sbb
cmpsl
push
aad
cli
or
pop
pop
leave
fidivs
loope
dec
clc
clc
dec
push
inc
orb
imul
cmp
leave
inc
mov
cmpsl
outsl
cmp
leave
pop
int3
mov
pop
outsb
pop
faddl
aad
mov
or
push
fcmovu
pop
sub
push
inc
test
cmpsl
cmp
sarl
push
sub
iret
stos
dec
mov
in
data16
mov
out
add
into
mov
pop
xchg
adc
mov
sub
mov
rol
adc
call
cmp
and
sub
push
or
dec
fnstsw
jmp
push
stos
mov
shlb
add
lahf
pop
je
int
insl
and
rorb
arpl
mov
mov
xor
mov
mov
sahf
or
ret
stc
pop
mov
ljmp
cmp
sbb
pop
xchg
mov
test
negl
insl
cmpsb
test
inc
loop
sbb
mov
fsubrp
je
inc
dec
std
sbb
sub
pop
add
or
pop
sbb
mov
xor
cmpsb
test
jo
add
out
lds
fs
sbb
sbb
jge
fs
mov
or
daa
fisubl
xor
stc
add
push
popw
cld
sub
gs
fdivrs
stos
add
popa
in
in
movsb
cmp
xlat
cmp
cwtl
fildl
sub
ret
sub
sbb
out
mov
push
movsl
sub
repz
mov
sub
lret
mov
push
arpl
repnz
outsl
add
xchg
out
fbld
pop
adc
addr16
repnz
push
loop
dec
adcl
dec
lods
sysexit
jae
pop
add
mov
lds
or
loopne
insl
test
lock
inc
pusha
pop
dec
sbb
notb
inc
flds
pushf
out
mov
ljmp
add
lret
lahf
inc
leave
ret
pop
pop
mov
imul
pop
bound
repz
inc
xchg
jmp
sub
bound
sub
jle
push
dec
loop
repz
std
and
ljmp
pop
in
cld
adc
sbb
mov
int3
out
loopne
lcall
pop
jmp
mov
sbb
stos
xor
ss
imul
out
pop
sbbl
ja
in
in
les
xchg
loop
insl
mov
lcall
and
mov
mov
jae
rcll
cmpsb
adc
ficomps
jmp
daa
scas
lock
mov
xchg
cmc
out
and
push
sub
seta
icebp
push
test
cmpsb
rep
daa
lds
daa
fidivl
sbb
xor
fstl
mov
push
push
lock
subl
pmaxub
fsub
sbb
aaa
fsub
insl
scas
adc
outsl
dec
dec
xchg
pop
dec
dec
movsb
aad
jns
xor
fstps
das
rcr
push
cmp
inc
call
jge
fidivrl
out
mov
and
mov
push
push
outsb
add
fwait
mov
enter
mov
xor
inc
add
xchg
imul
clc
push
xchg
dec
divl
cmp
loop
jmp
sbb
jg
dec
imul
dec
dec
fwait
jmp
push
in
cltd
mov
push
sbb
mov
inc
push
sbb
lds
xchg
pop
rorl
arpl
pop
cmp
cvtpi2ps
xchg
vsubps
scas
mov
dec
pop
mov
dec
cvtps2pd
push
int
insl
cmpsb
sti
test
xor
dec
pop
std
lcall
cmpsl
and
int3
pop
pusha
dec
lret
mov
pop
mov
push
mov
xor
out
addb
xchg
or
mov
lods
stc
scas
xchg
ljmp
adcb
add
shll
sbb
into
rcr
or
xor
jle
pop
and
mov
add
jg
cmpb
jp
push
lcall
idiv
sub
fst
xchg
scas
cmp
jns
rcl
popf
loope
shrb
fdivs
sbb
mov
pop
jno
dec
xchg
mov
ja
gs
imul
mov
or
imul
clc
and
ds
insl
mov
mov
repz
jge
mov
dec
scas
fistpll
jne
sbb
repnz
into
adc
xchg
dec
mov
xorb
push
loop
repz
cmp
in
and
ret
inc
out
out
ficoms
int
sahf
cmpsb
jp
ja
jl
add
ret
add
js
xchg
push
mov
sti
xchg
or
sbb
adc
sbb
fstpl
cmp
mov
imul
xor
cs
mov
sub
test
xor
add
mov
mov
xchg
lcall
fcomip
inc
clc
jle
cmpsb
repz
jmp
or
dec
ss
les
mov
or
xchg
lcall
jb
adc
aad
in
pop
mov
data16
adc
int
sbb
sbb
lds
les
dec
pop
fisubrs
mov
jmp
or
or
push
subl
iret
int3
fsub
aas
inc
mov
sbbl
adc
xchg
lock
and
cmpsl
pop
xor
test
or
and
fstp
jmp
add
popa
pop
sub
rcr
pop
adc
mov
cwtl
or
fdivl
pop
add
aam
mov
or
pushf
ror
rcl
jle
add
add
push
mov
aaa
sbb
loope
push
inc
push
scas
push
push
loop
in
loopne
jg
mov
lods
in
add
mul
test
inc
aad
cmp
movsb
adcl
sub
daa
mov
pusha
adc
rcrb
dec
sub
pop
jle
mov
mov
fwait
cmpb
inc
cmp
sti
shrb
pavgb
inc
push
and
jns
mov
dec
xor
and
stos
and
mov
adc
out
xchg
jae
cltd
inc
add
dec
es
ljmp
jns
bound
repz
rcrb
add
daa
sbb
xchg
test
test
fmull
jo
mov
xor
inc
notb
clc
push
lret
outsb
enter
cmp
aad
mov
cmp
fistps
pop
fisubl
add
ret
outsb
cltd
out
jbe
out
add
xlat
cld
insb
dec
inc
or
ljmp
out
sbb
lds
insb
aam
rolb
mov
sbb
lods
jne
adc
sub
lock
or
out
int3
inc
mov
aaa
inc
nop
dec
xchg
mov
mov
in
fistl
jo
ret
loop
and
mov
xor
jae
jbe
pusha
pop
pushf
shll
push
outsl
cmp
imulb
adc
jmp
jge
notl
push
mov
mov
cli
daa
aad
cmp
insw
inc
imul
or
int
pop
xor
arpl
pop
aas
popa
imul
aas
pop
arpl
lret
fsubrl
aas
sub
and
lea
pop
mov
inc
cmpb
jb
ret
jecxz
stos
sub
dec
pop
push
xchg
xor
fisubs
push
ret
prefetch
cmp
sbb
mov
mov
int3
andb
mov
movsl
sahf
push
jbe
inc
inc
xor
insl
les
repz
lods
cmc
ss
test
mov
xchg
mov
insb
jge
movsl
mov
xchg
push
adc
push
lods
dec
xlat
imul
aad
mov
in
xchg
aaa
mov
sbb
xor
fcoml
insb
adc
mov
mov
lea
rorl
push
fisttps
jno
test
and
sti
jnp
nop
xlat
in
push
ret
pop
int3
and
loope
loope
mov
jne
and
mov
adc
bound
xchg
sbb
loop
mov
sti
xchg
movsb
cmc
adcl
dec
jle
test
mov
or
inc
notb
repz
adc
fisubrl
cli
or
xchg
xchg
xchg
shlb
mov
sbb
das
mov
movl
jno
xchg
fimuls
in
js
or
in
lods
sarb
arpl
loope
shrl
subb
shll
mov
dec
push
lods
dec
call
push
scas
or
je
pop
push
mov
das
xchg
sub
xor
fcoml
cmp
push
fsubr
hlt
lock
jne
inc
push
nop
cli
push
rcll
sub
outsb
ret
mov
fsubr
push
fstp
cmp
jecxz
decb
daa
pop
mov
push
mov
and
xor
ja
push
mov
cmp
dec
jns
std
or
sub
add
pop
pop
popf
jl
lds
icebp
test
xchg
or
les
push
add
out
mov
pushf
fdivl
lods
cmp
sbb
xchg
test
ds
in
adc
adc
cmp
mov
mov
ds
cmp
sbb
xor
and
push
fiadds
and
adc
scas
mov
shlb
pop
push
insb
lds
dec
leave
mov
xor
push
dec
outsl
lcall
jne
xchg
shll
push
pop
pop
daa
int
pushf
mov
inc
adc
cmpsb
ret
xlat
or
jo
and
xor
in
and
loope
inc
fimuls
jno
stc
movsb
mov
sub
xlat
lret
push
pop
xchg
mov
inc
loopne
jb
fstps
cmp
sub
sbb
push
ja
jge
les
scas
pop
and
adcb
pop
inc
and
leave
stos
fstpl
xor
repnz
jecxz
jl
iret
clc
xchg
mov
mov
mov
adc
int
imul
stos
jne
sbb
pusha
lods
aad
jno
mov
jo
sub
int3
das
mov
mov
jmp
mov
insl
enter
mov
sahf
imul
xor
imul
inc
ss
mov
out
sub
in
sti
xchg
dec
add
pushf
jb
loop
pushl
mov
pop
inc
ficomps
xor
fwait
rcr
xor
ljmp
cmpsl
pop
cld
adc
push
mov
pushf
jmp
or
inc
push
leave
outsl
stc
jmp
aas
shlb
xchg
inc
mov
xor
lock
cmp
or
add
pop
lcall
shr
mov
adc
mov
push
rolb
adc
out
cltd
push
or
inc
pop
mov
cmc
lods
pusha
test
or
leave
sti
lret
mov
nop
fs
dec
mov
pop
sbb
mov
mov
mov
call
addr16
stos
out
pusha
jp
out
movsb
jp
inc
in
aas
clc
adc
cmp
inc
push
lcall
add
jge
ljmp
cmpsl
aad
cmc
inc
jle
jno
fcmovb
sbb
test
adc
jge
mov
mov
or
add
xchg
push
jl
loop
ret
add
or
jecxz
jl
fwait
adcl
sbb
popf
movsb
fs
cmp
das
mov
jb
or
dec
fbld
xchg
out
sbb
daa
fisubs
fdivrs
or
loope
jo
mov
lret
xlat
and
mov
xchg
push
xor
call
mov
gs
fistpll
arpl
and
xor
lock
mov
test
dec
sub
adc
adc
cs
cmp
jmp
fdivrl
cmp
sti
xor
and
xorb
mov
ss
cmp
pop
jge
and
mulb
xor
mov
xor
or
xchg
adc
lea
push
push
and
icebp
xor
decb
outsl
jmp
mov
xor
fsts
or
popa
inc
push
loopne
adc
pop
xchg
xchg
adc
push
inc
dec
xchg
cmpsl
insl
inc
push
cwtl
fwait
shl
stos
es
mov
ds
jmp
sbb
cmc
leave
pop
mov
dec
xor
loop
or
fiadds
lahf
gs
xor
push
sbb
jmp
clc
fidivl
push
adc
and
fwait
sub
sar
sbbl
mulb
loope
mov
mov
arpl
jl
je
das
cli
mov
add
leave
mov
and
loope
test
leave
jne
push
sbb
imul
sbb
andb
add
inc
pop
imul
out
loop
test
ljmp
rep
imul
aaa
ffreep
pop
mov
fisttps
js
insl
and
in
xchg
push
sub
sbb
or
nop
gs
test
movsl
jge
lds
pushf
push
popf
push
sbb
xchg
pop
mov
ficoms
sub
aaa
adc
cmp
loopne
cmc
pop
lret
sub
cmp
xchg
dec
or
jp
cmpb
xchg
pop
bound
test
mov
cmc
pop
mov
jg
adc
jecxz
dec
aam
mov
sti
cwtl
or
dec
arpl
xchg
or
idivl
jp
popl
out
adc
mov
jmp
fldl
sub
bound
or
mov
adc
jecxz
hlt
out
cmp
hlt
ja
stos
mov
scas
mov
pop
cwtl
cld
mov
jno
movsb
arpl
mov
mov
shll
and
xor
xor
push
popa
fistps
lods
lods
dec
lret
pop
stc
out
cmp
sbb
or
ss
xchg
mov
mov
jl
cmp
scas
in
clc
dec
mul
mov
xor
add
add
or
add
pop
inc
add
mov
lods
es
fs
in
pop
in
jge
add
cmp
stos
je
dec
push
jnp
shr
lea
hlt
or
mov
ret
sbb
push
sarl
xchg
std
cmp
popf
pop
push
pop
mov
pop
xchg
imul
jl
loope
test
mov
fnstsw
loopne
xchg
sarl
inc
mov
adc
sub
push
jns
sti
testl
push
mov
js
repz
shrb
or
add
pop
pause
xchg
stc
iret
mov
test
and
xor
movsb
xorl
dec
testl
lock
jb
adc
popa
aaa
pop
andl
mov
jmp
mov
jle
imul
js
pop
out
out
scas
fsubs
dec
pop
mov
adc
dec
loope
xchg
fistpl
mov
sub
adc
mov
ja
xchg
pop
int
pop
lea
xchg
popa
dec
outsb
sahf
imul
sti
mov
xor
push
mov
mov
or
rcll
jae
sub
ss
mov
cmp
and
dec
lods
arpl
push
dec
ljmp
adc
xor
mov
adc
arpl
jae
mov
pop
adc
sbb
hlt
cmpsb
add
gs
std
popf
cmp
xchg
shll
jmp
inc
push
pop
stos
or
std
addb
sti
cmp
mov
pop
test
sbb
shl
xchg
popa
pop
mov
mov
push
in
fsin
inc
cmp
push
push
jg
mov
xchg
out
pop
mov
push
mov
stos
add
mov
xlat
ds
mov
loope
cmp
insl
lret
sbb
shlb
scas
aam
add
call
pop
ljmp
add
adc
add
push
dec
push
aad
sbb
xlat
movsb
loope
lahf
xchg
clc
inc
in
pop
lods
pop
cli
jno
mov
fdiv
and
add
in
xlat
cwtl
xchg
aas
and
pop
pop
push
jg
xor
test
xchg
mov
xchg
pop
inc
cmp
mov
pop
push
push
xchg
and
loope
xor
dec
mov
or
jbe
or
in
iret
stc
and
jnp
shll
lock
imull
lods
dec
subb
dec
mov
xor
fcos
jge
add
adc
xor
sub
dec
adc
mov
adc
aam
inc
or
and
punpckldq
xchg
add
mov
pop
cmp
arpl
push
sub
sbb
cmp
jle
inc
lods
lret
aaa
push
test
jns
imul
lock
push
and
ror
mov
shufps
and
adc
push
ss
lea
ret
sbb
jmp
jl
jmp
addr16
in
out
pop
inc
stc
pop
and
sbb
sbb
fcoms
push
es
push
xor
or
fidivl
pop
inc
ljmp
mov
js
daa
lret
in
jmp
add
xchg
stos
mov
fdivrs
btc
push
sub
inc
leave
sarb
or
mov
mov
out
std
jmp
xchg
mov
sub
jg
in
and
or
mov
divl
iret
pop
daa
js
sarl
imul
orb
pushf
jle
inc
mov
xchg
out
cmpsl
push
test
nop
dec
bound
push
adc
cmpsb
pop
out
mov
leave
dec
nop
int
sahf
out
cmp
cmp
or
xor
and
xchg
ja
sub
aad
hlt
dec
xor
ljmp
jb
test
in
filds
mov
stos
mov
popa
out
or
dec
push
xlat
xor
movsl
push
in
ds
push
cmpsb
std
das
sbb
pop
inc
popf
jmp
push
jbe
mov
jp,pt
jno
or
adc
daa
sbbl
dec
xor
mov
loop
dec
inc
mov
mov
mov
imul
xchg
push
lock
stos
lea
sub
movsb
push
pop
mov
addr16
dec
std
xor
jmp
cltd
xchg
clc
dec
jo
stos
xchg
push
icebp
repz
or
sbb
cltd
divb
mov
adc
out
push
stos
cmp
pop
dec
push
xor
add
push
cli
mov
int
jg
mov
xlat
test
adc
jge
cmp
out
outsl
cmpsb
cmp
dec
roll
cmp
push
add
lcall
aas
invd
repz
cmp
dec
insb
popa
inc
pop
lret
or
pop
imull
adc
sahf
insb
stos
push
cmp
lcall
int3
aas
or
icebp
into
cmp
shlb
rcll
in
sub
jle
adc
js
mov
xor
xor
xchg
xor
das
les
movsb
rolb
shlb
sub
cli
fistpll
ficompl
push
mov
add
sbb
cmpsb
mov
popl
dec
in
mov
movsb
inc
mov
stc
sbb
jge
push
or
and
mov
aaa
pop
cmp
pop
sbb
lret
xlat
bound
ficoms
lea
outsl
test
fwait
mov
jmp
stos
sub
add
push
dec
add
pop
push
xchg
xor
jae
add
arpl
jl
test
mov
sub
aaa
sti
jnp
push
sbb
pushf
mov
sub
push
or
cmc
ljmp
ret
xchg
in
adc
inc
aad
lret
std
pop
push
iret
dec
stos
mov
add
xor
mov
es
add
mov
mov
mov
out
mov
cmp
inc
jecxz
or
adc
shlb
cld
repnz
dec
add
adc
loop
dec
add
hlt
fldcw
sbb
mov
int
pop
movsl
loope
repz
ret
mov
loopne
insl
pop
loopne
xchg
insl
push
pop
std
mov
xchg
fcoml
mov
adc
and
jmp
jae
call
push
dec
push
addb
cmp
div
fucomip
xchg
les
mov
std
or
enter
and
inc
jbe
cmpsl
cmpsb
or
sarl
in
pop
mov
pop
loop
testl
lea
lods
mov
ss
cld
add
bound
cmp
insb
dec
jge
loop
cmp
push
push
cmpsl
pop
jge
rorb
push
cmpsl
pop
stos
xor
lods
push
fdivs
ret
fisubl
xor
roll
or
sub
cwtl
xchg
ljmp
cld
pop
pushf
or
rcll
sbb
mov
jge
or
lods
fstps
pop
loopne
orl
jg
dec
int3
mov
xchg
add
adc
add
jmp
sbb
bound
test
lods
cli
arpl
fisttpll
push
or
mov
nop
rol
sub
notl
je
outsl
add
push
cmp
push
mov
adc
jmp
inc
mov
stos
pop
lds
lods
inc
shlb
mov
xor
lea
test
push
pop
add
not
sub
fimuls
adc
aas
xlat
sti
daa
pop
push
adc
adc
inc
gs
mov
sub
movsl
push
push
into
in
insl
push
loopne
shrl
cmp
icebp
lods
mov
insl
mov
ret
lods
pop
and
ss
xchg
lock
sub
lcall
pop
jmp
mov
sub
pop
sbb
push
adc
outsl
mov
fisttps
in
dec
mov
or
lock
loop
mov
jns
idiv
jg
std
sub
xchg
pushf
add
mov
adc
mov
rorl
push
adc
movsb
push
mov
out
lahf
outsb
inc
dec
test
or
ljmp
jns
imul
pop
hlt
roll
and
das
mov
int
enter
or
inc
out
rolb
dec
push
pshufw
push
std
pop
fdivs
sti
jmp
mov
push
push
push
rcl
lcall
insl
sub
xlat
insb
fstl
lea
jae
mov
pop
or
das
les
push
mov
adc
aad
push
std
xor
scas
subl
push
lahf
loopne
gs
movd
clc
jmp
xchg
movsl
repnz
das
jp
and
int
cltd
xchg
cwtl
stos
stos
loop
int3
repz
mov
and
dec
push
inc
pop
push
jl
insl
imul
and
hlt
jl
daa
imul
add
imul
call
out
add
push
sbb
testb
cmp
xorb
cmp
xor
scas
adc
outsb
pop
jle
mov
ret
div
adc
and
loopne
inc
fisubrl
lods
mov
cmp
dec
dec
push
ja
add
into
je
mov
mov
jno
test
push
call
sbb
xchg
mov
add
ja
dec
loope
cld
or
fwait
out
and
xchg
dec
lahf
pop
inc
mov
push
sub
cmp
jp
mov
mov
cmp
ljmp
or
iret
xor
mov
mov
shl
negb
inc
push
adc
add
xchg
cmp
test
inc
and
jno
shll
faddl
xchg
in
mov
incl
jle
jbe
enter
pushf
fstps
dec
gs
std
pop
cmp
sbb
imul
int
xor
and
insb
icebp
push
pop
ret
sti
or
inc
test
mov
nop
bnd
loopne
pusha
xchg
call
sub
repz
out
loop
xchg
sbb
aaa
mov
bound
adcb
mov
ljmp
xlat
into
aas
int3
dec
dec
daa
mov
cmp
data16
imul
movl
fcmovnbe
cmpsl
inc
pushl
arpl
movlps
adc
xor
jl
in
xchg
dec
xchg
jno
daa
xchg
jecxz
push
push
ret
test
pop
ret
fwait
stos
fidivs
dec
jg
mov
dec
popf
xor
es
movsb
cmc
hlt
icebp
and
pop
fadds
in
imul
std
xchg
leave
rcr
cmovbe
ja
xchg
pop
pop
aad
mov
and
popf
cmp
sub
imul
ja
out
daa
in
fsubl
inc
inc
cmpsb
dec
addr16
int3
ss
xchg
push
jns
inc
lret
insl
xor
dec
push
xor
inc
or
into
inc
inc
pop
dec
aam
cmc
pop
aad
mov
clc
das
fistpl
hlt
xor
fildll
or
mov
push
xor
xchg
sub
bound
inc
je
aaa
bound
xor
idivb
and
aam
out
push
sahf
lods
xor
loop
jae
or
fimuls
mov
mov
xchg
cmp
mov
push
jge,pn
inc
addr16
sub
mov
les
pop
movsl
jns
sahf
sub
jl
mov
cmp
movsb
repnz
scas
cmc
inc
notb
or
mov
test
ss
je
stos
fwait
mov
aas
inc
pushf
jb
jae
sbb
cwtl
aas
inc
lea
push
push
mov
mov
in
inc
mov
jl
aas
adc
addr16
rorl
sbbl
ja
jle
adc
ret
stc
in
add
mov
push
sarb
xchg
dec
and
cmc
xor
nop
pusha
mov
and
aad
pop
sub
enter
sbb
or
mov
jmp
icebp
add
push
xor
jb
pop
repz
and
idivb
fmulp
aaa
xchg
mov
bound
dec
daa
into
aam
jle
sbb
scas
or
push
test
fidivrs
fneni(8087
cs
jecxz
enter
cmp
aas
inc
dec
popf
sbb
les
dec
out
adc
sbb
push
loop
jp
dec
or
lret
sbb
mov
xchg
adc
ret
mov
pop
mov
das
sti
aas
sub
ror
imul
pop
cli
jns
icebp
sub
clc
incl
sub
inc
sbbb
sbb
mov
lcall
add
insl
negl
sbb
rolb
int3
pop
or
xor
fcompl
and
dec
lahf
push
or
mov
mov
add
sbb
lock
jbe
add
in
out
cmp
mov
mov
adc
stos
out
jae
daa
mov
push
lods
gs
jbe
popf
push
mov
ss
push
stc
xor
ljmpw
repz
push
in
inc
mov
cwtl
cld
and
push
stc
out
aad
out
mov
and
test
push
lcall
or
pop
cwtl
fsub
pop
bound
test
mov
sub
insb
pushf
mov
scas
in
adc
push
jecxz
add
jae
pop
xchg
or
cmpl
mov
sub
cwtl
pop
mov
mov
jae
mov
jne
sbb
js
xor
test
int3
mov
fists
icebp
dec
fimull
mov
push
mov
mov
rcrb
xchg
xor
cmp
mov
jnp
scas
mov
in
test
jb
out
ja
stos
sbb
jne
subl
sbbl
aad
sub
out
push
scas
fucomp
cli
jnp
pop
or
push
outsl
pop
add
and
add
or
mov
imul
jb
xchg
fadds
sbbl
push
adc
lea
in
and
gs
mov
pop
adc
sbb
pop
mov
push
ljmp
xchg
and
loopne
loope
sub
dec
leave
sub
mov
fcmovu
xor
push
incb
cld
dec
mov
or
add
fwait
cmpsl
int
xchg
imul
scas
sbbl
fsubrs
push
add
dec
cmp
push
cmp
call
mov
jge
fwait
loope
add
movsb
and
js
gs
inc
fisttpl
int3
xchg
movsb
inc
dec
and
mov
pop
lods
xor
sub
sbb
dec
sahf
fidivrl
std
cmp
push
dec
sti
mov
dec
jnp
adc
das
enter
or
addr16
dec
outsb
sar
xchg
sbb
mov
pop
loop
push
mul
push
and
insl
jne
dec
test
test
enter
pop
fdivp
movsb
xlat
push
pop
mov
adc
lods
int
push
push
adc
and
or
imul
fisttps
jecxz
lods
subl
adc
roll
push
int3
mov
filds
mov
loop
or
or
xlat
shl
lahf
mul
adc
push
jmp
cmp
pop
mov
jne
outsb
mov
outsb
pop
push
push
shlb
les
cmp
int
in
into
dec
xchg
mov
lret
insb
out
out
mov
dec
hlt
xchg
loop
imul
mov
cmp
add
arpl
mulb
add
dec
cmp
loope
loop
rclb
std
outsb
inc
cmp
adc
pop
mov
gs
push
rorl
jno
popf
pusha
pusha
mov
pop
shlb
sub
cli
shll
test
test
jo
sub
xor
adcl
dec
dec
cs
lds
stos
jg
stos
and
les
daa
xchg
cli
sti
aam
mov
lock
inc
enter
xor
shl
mov
or
jg
adc
inc
mov
inc
add
sub
push
lods
iret
popf
mov
ret
jecxz
push
lock
push
and
xor
repnz
out
rolb
push
imul
insb
stc
idivl
popa
add
sub
mov
xchg
mov
addr16
adc
subl
inc
pop
push
mov
cmc
push
add
imul
shrl
mov
inc
fisubrs
icebp
movsb
fcompl
pushf
addr16
popf
adc
aam
fsubrl
addb
jbe
aas
dec
je
push
jne
cmp
sbb
jp
cmp
mov
lds
or
pop
sub
lea
sub
pop
inc
cwtl
lds
imul
lods
xchg
int
test
das
push
addr16
mov
add
mov
aad
xor
mov
mov
mov
popa
rcrl
pusha
xchg
jge
call
push
test
icebp
repnz
ja
mov
mov
xor
imul
stos
fiaddl
mov
stc
xchg
mov
decb
mov
gs
es
jns
push
mov
loopne
jns
ds
rol
xchg
imull
loope
mov
xor
inc
lock
lret
add
pusha
jmp
sbb
mov
testb
test
jno
push
cwtl
gs
les
stos
into
mov
inc
cmp
adc
cmp
sbb
inc
pop
mov
outsb
push
inc
inc
cmpsb
push
addb
add
shlb
adc
dec
mov
ss
fwait
push
adc
in
mov
dec
mov
jg
pop
xlat
mov
fsubs
xchg
mov
dec
lcall
pop
sbb
sbb
out
test
xlat
or
repz
cld
xor
mov
fisttpl
ret
pop
cli
jle
fbld
out
adc
stos
jg
cs
in
push
push
je
std
pop
ret
popa
mov
sbb
lret
hlt
xlat
daa
cmc
adcb
das
movsl
pop
test
inc
leave
push
xor
cwtl
and
inc
xor
mov
jg
mov
push
mov
xor
insl
cmp
sub
sbb
dec
mov
sbb
or
dec
pop
movsb
jb
sbb
pop
pop
xlat
adc
or
push
movsb
int3
js
push
arpl
mov
or
sbb
mov
sub
jne
lods
movl
mov
cmp
sub
mov
gs
adc
mov
mov
sbb
jbe
ficomps
test
xchg
iret
shl
ja
mov
int
sti
push
shl
add
out
loopne
and
repnz
test
dec
dec
gs
mov
jne
and
mov
test
stc
in
mov
fcoms
fsubrl
xchg
scas
shl
insb
ret
pop
adc
xor
sbb
imul
pop
sub
cld
dec
cld
les
idivb
fistpl
pusha
sub
sbb
loop
dec
loopne
neg
mov
cli
insb
iret
dec
mov
sbb
mov
fsub
and
into
lret
add
push
rcl
ss
ds
ja
jl
dec
aad
push
fimull
stos
lcall
sbb
daa
test
pop
or
div
xlat
push
push
mov
sub
jle
push
pop
aam
aam
jp
sbb
adc
adc
jg
dec
and
cmp
pop
ljmp
or
inc
sar
mov
or
jecxz
clc
sbb
push
lahf
inc
imul
fsubrl
pop
outsb
and
in
ja
inc
mov
into
mov
mov
sbb
mull
daa
inc
int
push
js
pop
mov
sahf
mov
pop
repnz
clc
outsb
or
push
in
inc
dec
mov
je
inc
daa
xor
push
std
add
sub
pop
mov
jne
mov
icebp
loope
jo
imul
xchg
rolb
inc
rorl
push
or
pushf
mov
lahf
pop
js
lock
jp
mov
insb
or
cs
rcr
clc
jne
or
and
adc
inc
icebp
mov
insl
loopne
jno
or
pop
mov
xchg
testl
and
add
inc
int3
xchg
test
test
fmul
rolb
pusha
cli
jb
mov
pop
sbb
rcll
aaa
and
fldcw
in
adcl
lret
jae
cwtl
sbb
js
adc
in
clc
push
stos
pop
adc
pushf
sti
aam
push
sub
or
push
pop
xlat
push
xchg
pop
xor
xlat
sbb
sbb
test
popf
scas
pop
and
hlt
arpl
cmp
rclb
xchg
push
mov
aas
xor
js
xchg
lret
mov
xchg
loop
cmpsl
int3
test
pusha
or
cmp
lods
clc
add
mov
pusha
addr16
mov
xor
fldenv
and
imul
sbb
add
loop
shl
pop
rcrl
xchg
shl
dec
adc
movsl
aaa
dec
mov
repz
inc
jae
nop
ret
daa
jge
adc
data16
das
push
movsb
push
jno
inc
cmp
sbb
sti
cli
in
or
sbb
enter
dec
addr16
dec
fst
cmp
nop
outsb
push
xchg
repz
loop
shl
ret
jne
xor
lea
cld
pop
xchg
sub
ffreep
jno
fwait
sub
and
arpl
adc
adc
jbe
sub
loopne
stos
ficoms
mov
popa
xchg
mov
enter
mov
mov
mov
inc
int
jg
fimull
int
clc
popf
call
fsub
or
mov
lahf
push
fistps
mov
enter
xor
loope
out
xchg
push
push
sub
jo
paddb
or
mov
jle
loopne
aas
jno
pop
mov
movl
pop
push
es
xor
sub
popa
dec
sub
enter
iret
add
aad
test
dec
sbb
fs
jb
adc
xchg
lcall
das
nop
mov
mov
xchg
push
aas
add
iret
imul
xor
and
xchg
fwait
push
sub
addr16
jns
sti
xor
jmp
je
sub
push
push
mov
fstps
mov
dec
out
mov
xchg
pop
and
icebp
gs
jecxz
xchg
test
inc
pop
cli
push
or
or
gs
sbb
mov
mov
mov
push
adc
mul
mov
mov
mov
xor
cmp
je
push
rcrb
imul
scas
pop
inc
loope
xor
push
xor
das
imul
hlt
mov
dec
push
xlat
xchg
cmp
sbb
mov
or
push
pusha
pop
rclb
add
rclb
jmp
mov
lock
jmp
into
pusha
inc
mov
fs
mov
scas
push
jmp
movl
sbb
and
push
loop
xchg
inc
mov
andl
pop
push
push
jge
bound
enter
cmp
dec
inc
lea
jns
mov
mov
rcrl
insb
jg
stos
mov
loop
pop
xchg
outsl
push
jo
sahf
mov
xor
lds
mov
aas
and
dec
movl
iret
test
das
pop
lea
xor
pop
fmull
inc
sbbl
aam
pop
mov
mov
jmp
dec
outsb
sub
lahf
adc
test
or
in
movsl
nop
xchg
adc
sub
inc
xlat
pop
int3
add
dec
xor
test
push
push
and
or
int
and
leave
bound
lahf
hlt
in
push
push
jg
mov
xchg
xchg
mov
mov
icebp
sub
cmp
add
icebp
jge
sub
mov
sub
in
pop
sbb
mov
inc
mov
xchg
add
dec
ljmp
fimuls
pop
xchg
push
cmp
mov
cmp
push
out
mov
and
divb
push
mov
mov
jne
mov
sahf
movb
push
roll
xor
ds
scas
push
cmc
ret
sti
inc
daa
movsb
sub
shl
lock
repnz
stos
sahf
movb
and
add
call
out
mov
ljmp
es
pushf
add
and
jmp
jne
pop
xchg
jb
or
xorl
dec
push
sbb
notl
sar
mov
mov
stc
into
rcrb
push
mov
jp
sub
arpl
xchg
jno
in
pop
pop
mov
dec
lds
add
mov
mov
mov
outsl
out
xlat
cli
mov
das
cmp
inc
and
mov
imul
data16
jp
push
jmp
lret
aaa
test
push
mov
rcrb
sbb
sti
add
int
jp
mov
loopne
jbe
or
and
cltd
push
mov
es
pop
cli
lock
out
mov
xchg
sub
in
fisubrl
mov
mov
sub
and
adc
xor
scas
movsl
unpcklps
cmp
fdivr
scas
ja
ds
rcrb
ljmp
push
pop
fdivl
jns
ja
jbe
inc
push
jl
mov
cmpsb
clc
scas
sbb
pop
jle
sbb
jle
sub
adc
sub
lea
js
mov
adc
aad
mov
sub
sub
es
and
mov
xor
mov
cmp
mul
jecxz
add
xlat
push
iret
inc
mov
fs
dec
movsl
ss
rep
push
push
or
leave
mov
sbbb
push
fidivs
aas
add
pop
clc
ss
mov
sarl
xchg
xchg
jmp
pop
ret
sub
mov
jmp
pop
sti
aas
mov
hlt
jle
aas
rolb
dec
sbb
jnp
orl
mov
shll
fwait
arpl
orb
xor
cmp
imull
pop
stos
sti
pop
ds
push
pop
sbb
clc
cmp
pop
add
jo
dec
call
jmp
sub
add
loope
cltd
stos
xchg
mov
lods
push
and
outsl
mov
test
rclb
div
hlt
mov
and
aam
fwait
xor
std
sbb
or
imul
addl
jg
inc
ret
cmpsl
add
data16
mov
rclb
jl
movsb
jns
mov
into
out
lea
or
imul
insb
out
pop
adc
inc
subb
push
lcall
outsl
jne
sbb
mov
scas
mov
xorb
jns
inc
in
xorb
leave
fs
scas
mov
int3
lcall
aas
icebp
add
repz
fadds
movsb
es
in
mull
shl
jp
out
mov
out
xor
mov
sbb
ljmp
mov
add
pop
xor
pop
gs
inc
test
outsb
pop
cmp
call
adc
fstps
add
pop
aam
xor
xlat
decl
mov
jl
int3
sarb
stos
pop
lds
ljmp
mov
inc
inc
mov
pushl
mov
in
pushf
push
pusha
in
mov
pop
pop
inc
cmpsl
inc
inc
in
inc
sti
jmp
js
in
xchg
mov
mov
sbb
outsl
add
sbb
icebp
dec
inc
mov
dec
cmp
test
out
lahf
xchg
bndldx
jae
movsb
ds
xchg
jmp
jne
xor
pop
ror
lret
xlat
mov
out
rcr
in
out
mov
inc
icebp
sbb
subb
popa
add
or
sbb
call
push
out
mov
popl
je
jp
mov
push
dec
pop
divl
fimuls
les
mov
inc
push
ljmp
test
aaa
pop
mov
mov
shl
and
and
xchg
or
jns
push
shlw
iret
cli
and
lock
loopne
mov
aad
gs
js
adc
mov
pop
movsb
cmp
daa
xchg
in
bound
mov
mov
mov
jle,pt
or
push
fcompl
jo
aam
cmp
mov
movsb
popa
push
cmc
or
dec
imul
cwtl
rcr
adc
mov
inc
lret
movsl
add
xor
icebp
cli
outsb
jp
add
jb
arpl
mov
add
int
in
cmpb
or
repz
sbbb
dec
test
es
or
mov
dec
sbb
mov
mov
xchg
rcrl
test
test
cltd
or
mov
lret
ror
sub
lea
xchg
pop
sbb
daa
popa
push
and
or
stos
mov
sbb
or
xor
adcl
push
test
loopne
ja
rclb
adc
das
stc
xchg
cmpsl
push
dec
ds
jo
in
adc
shrb
adc
addr16
push
imul
mov
xor
les
stos
sub
dec
cmp
mov
adc
pop
test
bound
add
xchg
jns
or
mov
les
xor
adc
aas
leave
insb
adc
add
cmp
int3
aas
dec
in
pop
icebp
pop
loope
int
movsl
loop
mov
adc
int
pop
cmp
fwait
xchg
call
out
and
dec
cmp
cmpsl
add
cwtl
out
push
es
cmp
imul
push
cwtl
sub
pop
or
call
cmp
push
fstps
popf
mov
push
in
popl
fwait
inc
pop
xchg
xchg
mov
push
fucom
push
xor
cwtl
jmp
dec
popf
jnp
mov
push
mov
pushf
lcall
jne
dec
popf
jmp
sub
xchg
jnp
jnp
out
adc
mov
and
icebp
stos
pop
ds
pop
or
xchg
cld
lahf
cmp
xor
sbb
jb
mov
fcoml
fiadds
xor
dec
sti
pop
rcl
cmp
sbb
mov
and
or
ret
scas
push
idivb
jo
icebp
add
scas
popf
or
into
jl
and
pop
push
jg
cmpl
jecxz
mov
xor
cltd
dec
and
adc
or
xchg
shrl
mull
roll
enter
je
mov
pop
xor
xor
icebp
out
nop
lahf
jnp
out
mov
and
xorb
pop
sub
or
jg
mov
jl
mul
push
or
js
imul
es
cmp
lods
fisttpl
idivb
mov
jae
mov
push
sbb
push
fcmove
in
fmul
jns
rclb
inc
mov
loop
fs
lahf
sbb
mov
lock
mov
push
sbb
and
xchg
outsl
push
sbb
cmp
mov
shll
inc
xchg
cmp
ja
jns
out
sbb
loop
cmp
mov
cmpl
jg
xchg
in
imul
xchg
adc
fwait
sub
sti
data16
xchg
push
das
leave
xchg
dec
or
cli
movntps
inc
push
xor
push
jmp
cmp
jle
leave
mov
ja
popa
jp
loop
mov
in
cmp
push
or
xor
fidivs
pop
fsubr
sub
aam
push
int3
xor
pop
test
lea
addr16
insl
mov
scas
xchg
popf
pop
and
out
jg
addl
jno
add
add
sub
mov
lret
insb
das
sbbl
lahf
stos
stos
aam
mov
daa
mov
iret
push
stc
push
mov
cli
movsb
or
add
or
push
adc
xor
jae
xchg
out
sbb
orb
insl
leave
rol
dec
enter
xchg
xor
sarb
mov
mov
je
data16
adc
andb
push
jne
pop
dec
dec
stos
jno
cmp
and
nop
pop
add
jb
xchg
pop
lods
mov
shll
jmp
loop
fstl
push
adc
nop
maskmovq
testl
mov
js
in
stos
ss
or
add
push
orl
mov
insl
mov
in
ljmp
fbld
xchg
inc
loop
shlb
lods
sub
notl
int
push
pop
jle
sti
adc
arpl
ja
lock
int
mov
aaa
shll
nop
lock
ret
adc
inc
cmc
ss
dec
cmc
cmp
aam
ds
mov
int
jno
or
pop
sbb
mov
sbb
pop
push
mov
lret
xchg
fisubrl
xorl
fistpll
shrl
lahf
mov
rcl
jne
cld
push
scas
mov
dec
ret
inc
inc
add
leave
pop
sti
out
pop
ljmp
cs
inc
push
clc
or
testb
pop
repz
or
mov
mov
scas
aaa
ds
pusha
sbb
or
rcll
pop
or
sbb
pop
inc
xchg
lcall
jmp
push
xchg
add
sub
and
pop
movsl
imull
mov
xor
je
mov
cmc
aaa
sbb
addr16
dec
lds
push
xchg
test
std
xchg
addl
xchg
mov
xchg
mov
adc
daa
lods
pop
lods
jae
outsb
daa
clc
stos
mov
mov
nop
mov
xchg
mov
sahf
sti
mov
repz
lods
push
das
or
or
mov
inc
cmp
shrb
sbb
jns
mov
xor
xchg
aad
popa
dec
lds
dec
cmc
rcll
adc
bound
cwtl
jle
fmuls
sbb
call
push
inc
inc
fisubrl
fst
stc
xchg
mov
pop
mov
ljmp
pop
in
xchg
adc
popf
jge
stc
add
xchg
xor
pop
lock
xchg
jle
mov
add
push
shl
push
imul
addr16
rolb
outsl
push
mov
cmp
mov
aam
sub
mov
stc
sbb
xchg
xor
lock
cmp
xchg
and
and
dec
push
scas
adc
neg
sbbl
sbb
in
pop
jno
sbb
stos
dec
xor
pop
or
xchg
inc
mov
mov
daa
sarl
subb
lods
mov
jo,pt
inc
fldt
cmc
ljmp
pushf
jp
mov
pop
mov
cltd
out
insb
pushf
cld
xor
push
push
or
mov
sahf
jmp
and
xchg
inc
or
ja
adc
dec
xor
popf
xchg
popf
out
sbb
mov
ret
jecxz
int
inc
cmp
enter
addl
mov
in
aad
push
das
addr16
dec
notl
mov
push
sbb
les
addr16
pop
sti
jl
ljmp
repnz
iret
test
andb
jns
jno
das
mov
ret
add
add
push
es
mov
adc
sbb
pop
lret
cltd
cld
push
lret
cmp
mov
idiv
mov
xor
arpl
mov
and
xchg
rorb
sub
nop
andl
lcall
xchg
sub
into
in
push
pop
test
pop
test
dec
and
push
mov
push
sub
cmc
or
and
test
xor
inc
and
rorb
popf
cmp
das
push
loope
decb
ret
add
insl
or
or
push
enter
pop
xchg
push
rorb
or
pop
jnp
cmp
lahf
ret
dec
jns
pop
sub
stos
mov
into
test
ret
inc
or
xchg
vaddsubpd
cltd
out
mov
insl
test
push
inc
xchg
rcll
cwtl
push
mov
shll
mov
bound
push
mov
jl
sbb
dec
or
adc
movsl
movsb
push
lods
mov
cld
ljmp
scas
jnp
adc
mov
xor
mov
ret
cwtl
add
stos
rclb
jle
shr
push
cld
shl
mov
movsl
and
ss
insb
cmpsb
pop
cwtl
pop
dec
in
push
jmp
push
mov
ss
mov
gs
cmpsl
xor
cld
nop
test
nop
cmp
mov
lds
ja
rol
loop
cld
enter
incl
stos
pop
xchg
inc
lcall
cmp
data16
imul
xchg
loop
mov
lods
ffree
mov
adc
adc
shrb
out
rolb
push
sbb
stos
lret
mov
lock
add
mov
fdivl
stos
lcall
push
div
push
or
subl
mov
inc
mov
sbb
jle
scas
sbb
and
xor
inc
outsb
movsl
mov
inc
testb
pop
mov
push
and
dec
leave
call
in
mov
outsl
stos
jno
je
xchg
cwtl
pop
mov
fistpl
add
cmp
test
lods
jmp
aaa
sbbl
dec
cmp
dec
out
into
test
pushf
rclb
xchg
dec
xor
lds
loop
fistpl
mov
repnz
adc
adc
add
push
and
push
pop
daa
push
push
fbld
test
inc
push
xchg
mov
xchg
xor
and
mov
iret
ljmp
loope
jp
add
into
mov
jo
repz
jne
cwtl
lods
jp
push
sahf
jl
sti
mov
jae
mov
or
add
cmp
xor
call
inc
xchg
ja
icebp
cmp
xchg
and
and
push
push
add
inc
gs
inc
or
jae
jo
add
push
mov
mov
pop
jle
hlt
jno
sahf
movsb
loopne
push
and
lea
xchg
pop
scas
add
jge
push
push
test
mov
in
fisubl
lcallw
dec
fildl
dec
dec
push
and
enter
add
mov
push
add
and
sub
pop
ss
daa
fcomps
jno
and
adc
mov
mov
ret
pop
stos
jl
cmpsl
push
std
pop
in
adc
andb
pop
pop
je
add
inc
cmpsl
add
cmpsb
mov
cmpsw
lret
and
add
xor
pushf
aam
add
mov
or
fists
mov
movsb
dec
add
sbb
movsb
jne
js
shr
xchg
popa
mov
lea
jl
pop
in
sbb
fwait
imul
xchg
dec
cmp
addr16
mov
fldt
cwtl
imul
push
mov
test
scas
jno
outsl
int
ja
mov
ja
sbb
add
mov
mov
iret
mov
inc
cld
loope
sbb
sbbl
loopne
push
sub
loope
push
xor
setns
sbb
jl
ss
loopne
add
xor
clc
fdiv
xor
cmp
adc
push
mov
inc
add
enter
inc
and
aaa
jmp
fldl
xchg
jbe
lock
sbb
stos
ss
or
pop
sub
cld
loop
test
or
gs
lods
sarl
dec
push
cwtl
push
fwait
jo
aam
ds
stos
sti
stos
leave
and
loop
sbb
and
xchg
aaa
push
mov
add
lret
jle
push
cli
push
out
push
and
xchg
cmpsb
add
mov
andb
outsb
inc
cmpsl
iret
lock
mov
cmp
lret
push
xchg
adc
sarl
xchg
rcr
xchg
ror
inc
sahf
js
loop
or
inc
in
dec
mov
mov
rclb
test
aam
out
cmpsb
or
sbb
push
test
js
retw
sub
xor
lock
fisttps
add
out
or
cmp
shl
xor
lret
cmpsb
shl
mov
jecxz
clc
imul
ss
stos
in
sub
fisubl
js
jle
jg
bound
mov
xor
lret
ljmp
sbb
roll
into
cmpsl
int
pop
sub
jo
lds
mov
in
scas
push
ss
push
imul
dec
daa
sub
cld
mov
push
push
call
sub
pop
xor
lret
add
and
sti
pop
stos
test
scas
and
mov
xchg
outsl
aaa
jnp
popf
mov
push
in
stos
stos
xchg
mov
or
sbb
out
and
and
add
push
jecxz
inc
mov
addr16
inc
dec
xchg
mov
jmp
add
iret
in
pushf
jge
mov
sub
or
push
dec
push
shlb
test
push
sbb
ret
outsb
mov
mov
jp
ja
shrl
mov
ds
cmp
cmp
mov
scas
add
pop
jl
dec
loop
lret
mov
jp
sub
push
data16
or
sbb
xorb
push
ds
jl
int3
jbe
xor
jg
sbb
sbb
scas
and
jo
cltd
jb
filds
imul
dec
cmc
xor
scas
dec
repnz
aam
daa
outsb
sbb
sub
mov
sbb
cmp
loope
arpl
pop
loope
sub
add
xor
lea
pop
orb
xlat
out
lret
jle
aad
add
nop
mov
decb
xchg
sahf
mov
stos
add
hlt
adc
outsl
adc
in
orl
ficoms
cmp
push
cmp
sub
dec
inc
jge
inc
nop
dec
push
cwtl
in
jmp
hlt
mov
les
inc
mov
mov
lods
lods
add
add
je
mov
xor
call
aas
out
xor
xchg
inc
addr16
inc
xchg
out
cmc
stos
jne
addr16
shlb
jo
in
jg
add
add
or
nop
dec
mov
mov
loope
push
fs
mov
add
pushf
sbb
jmp
and
rclb
ljmp
push
aam
dec
popf
inc
ljmp
jge
aas
mov
les
adc
xchg
jnp
pop
ret
cmpsb
shll
xlat
and
call
inc
sbb
mov
xchg
mov
cltd
ffreep
aaa
arpl
int
cmpsl
cmp
add
pop
in
adc
push
jb
packssdw
in
cmp
pushf
mov
push
mov
mov
andl
int
add
jle
and
pop
into
inc
jo
inc
lock
jo
pop
jae
test
sub
lea
in
jb
lahf
add
hlt
and
mov
pop
outsl
mov
mov
cltd
inc
mov
push
frstor
jp
sbb
xor
fwait
add
pop
sbb
sub
sti
sbb
inc
lcall
push
adc
xchg
push
imul
imul
ss
into
push
leave
xor
inc
scas
adc
sub
jno
out
jno
nop
adcl
add
add
adc
ret
leave
pop
mov
in
push
inc
sahf
aaa
bound
and
shll
cmp
jge
dec
fstps
cmp
loop
pop
jno
and
out
sub
clc
jmp
lods
push
scas
addb
mov
mov
jbe
cmpsl
dec
stc
fdivrl
lods
fs
sub
pop
inc
xchg
pop
mov
sbb
test
stc
dec
push
inc
stc
mov
js
inc
test
or
or
adc
cld
xor
fwait
int
lock
int3
in
jno
stos
mov
cmp
xchg
stc
xlat
sbb
xchg
jp
aaa
fnstcw
pop
test
in
sbb
ret
and
xchg
nop
add
jmp
scas
loope
pop
out
pop
dec
sbb
pop
pop
fimull
inc
scas
clc
sub
pop
cmp
mov
fnstcw
or
push
test
and
mov
dec
les
pop
cmp
add
ss
jmp
imul
add
mov
movsl
mov
cli
test
aas
mov
cli
mov
fcmovbe
call
add
cmp
shlb
and
pop
cli
fistpll
aad
repz
adc
xchg
sub
lock
aam
cwtl
imul
mov
xchg
test
add
xchg
scas
push
jnp
daa
inc
xchg
pop
aaa
push
push
or
sbb
enter
pop
scas
push
les
in
sbb
ret
mov
test
add
push
push
pop
jae
inc
loopne
mov
scas
add
xlat
negl
ss
inc
out
push
inc
sbb
xor
popf
sub
push
test
fstpt
test
adc
adc
in
imul
out
mov
mov
xchg
imul
jmp
push
popa
jecxz
adc
sarb
mov
inc
insb
data16
lcall
jecxz
stc
loopne
das
sub
dec
imul
repz
jb
sti
mov
in
pop
fldt
jno
and
mov
add
adc
adc
test
cmp
insb
dec
sub
or
lock
inc
pushf
inc
jns
cli
sbbb
iret
push
xor
lods
loopne
sbb
adc
les
daa
into
or
aaa
in
mov
push
sub
fsubrl
iret
cmc
div
movsb
jb
xchg
shll
inc
lahf
push
push
loopne
sbb
test
push
mov
mov
imul
int
inc
dec
push
sub
aas
shl
cmp
jae
jmp
cwtl
mov
pop
xorb
mov
in
mov
mov
clc
pop
je
jle
sub
push
fildll
lods
dec
and
addr16
jno
in
inc
sub
jle
pop
jbe
imul
in
sarb
mov
mov
ljmp
mov
les
mov
mov
mov
setp
push
pop
add
call
mov
push
insl
in
nop
jae
push
xchg
sbb
fmull
cld
dec
lret
add
fsts
inc
lcall
cwtl
pushf
or
cmp
fldt
pop
or
aam
lods
lods
push
movsl
dec
test
jne
jmp
jp
outsl
pop
ds
adc
cmp
mov
cmp
stos
sub
push
inc
inc
mov
adc
sub
in
push
lret
out
pop
pop
sbb
cmp
hlt
cltd
icebp
mov
mov
leave
nop
ror
jl
dec
or
imull
sbb
xchg
scas
in
fildll
sahf
movsl
fnstenv
mov
push
xchg
mov
or
mov
mov
shrl
mov
or
idiv
mov
scas
les
pushf
dec
test
adc
push
cmp
std
or
nop
gs
mov
dec
cltd
scas
notl
icebp
jno
jl
shr
push
lods
push
fwait
jb
scas
cmc
loop
add
in
add
rcrl
lods
mov
cmc
mov
jmp
popa
push
push
jge
add
sub
jecxz
and
push
out
xchg
lds
xchg
xor
lods
clc
es
cmp
stos
sub
in
mov
mov
aaa
gs
adc
popl
test
std
aad
fcoms
and
setp
mov
aas
cmp
push
pushw
hlt
mov
push
xchg
pop
jo
in
pop
or
and
add
pop
aad
adc
adc
ret
rorb
iret
inc
jg
aas
dec
xor
test
int3
ljmp
inc
test
push
xchg
push
cmp
jb
sub
sbb
shll
xor
xchg
mov
inc
and
mov
adc
dec
and
sbb
mov
jnp
push
pushf
jno
jns
lods
add
lret
stos
cmp
mov
addr16
mov
xchg
enter
popf
movsb
ror
adc
mov
adcb
push
nop
data16
xchg
mov
sbb
jle
inc
jmp
inc
and
jg
in
inc
mov
sub
mov
add
shlb
jnp
pusha
pop
or
pop
xor
mov
sub
and
xor
sbb
jns
mov
lea
cs
sbb
stos
mov
shr
adc
mov
pop
fdivp
cld
xchg
rorb
iret
mov
pop
mov
hlt
ret
psrad
out
outsb
mov
push
pop
sbb
or
lods
jno
aam
push
sub
fcompl
rcl
aas
mov
push
jo
out
sub
jo
jg
adc
out
mov
call
stc
sbb
fildll
aaa
pop
push
nop
and
bound
mov
sbb
xor
fcmove
das
fisubrl
int
lods
outsl
pop
out
fistps
adc
or
adc
or
jbe
rolb
push
out
adc
push
cmp
scas
adc
add
xor
lea
add
mov
rcll
cmp
daa
or
dec
js
subb
sub
push
and
sub
scas
leave
cmp
je
add
mov
xchg
mov
int
or
popa
sub
sub
lods
std
aaa
jl
cmpsl
rcl
add
nop
push
imul
jecxz
adc
das
enter
mov
imul
fisttpll
jle
loop
frstor
jae
dec
ret
inc
mov
sbb
or
arpl
popa
mov
adc
or
and
mov
dec
xor
stc
xor
sbb
add
cmp
inc
ja
in
mull
dec
call
testb
xor
pop
pop
into
pusha
fwait
sbb
push
mov
dec
push
ja
shll
cmp
in
sub
mov
mov
mov
mov
rol
push
icebp
mov
cmp
push
push
mov
out
inc
add
sub
sbb
cs
iret
dec
test
fmull
jne
mov
push
or
cmp
int3
pop
sbb
call
xorb
lods
cld
sub
jmp
mov
dec
push
icebp
sahf
inc
je
mov
scas
orl
jg
xchg
xorb
imul
sub
pop
insl
xchg
lcall
test
dec
jbe
sbb
xor
or
push
out
aam
cltd
cmpsl
fs
lock
pop
add
push
ret
adc
mov
jle
push
xchg
mov
jmp
and
fldt
xlat
push
ss
clc
fdivr
jb
lods
dec
sub
jmp
mov
cmpsb
inc
mov
pop
pusha
idivb
in
fwait
jg
sub
aam
lret
ficoml
mov
int
xor
mov
rcrb
sub
mov
insb
in
lods
xchg
loope
dec
dec
fstp
pop
mov
sti
nop
mov
mov
pop
inc
adc
cmp
xor
cmp
adc
into
sbb
xor
jne
or
enter
mov
dec
dec
mov
stos
cmp
push
and
inc
xlat
in
ds
hlt
mov
icebp
sahf
add
pusha
sub
mov
shr
sbb
loope
push
add
subb
sub
sahf
iret
cmp
out
imul
hlt
rclb
cltd
sub
imul
iret
dec
or
loope
popf
iret
add
xchg
lds
insb
push
pop
rcr
mov
movsl
xchg
jg
pop
loopne
ldmxcsr
adc
add
pop
pop
stos
dec
hlt
lret
dec
xchg
add
pop
lods
outsb
lods
jo
aas
outsb
movsb
add
insb
mov
test
pusha
aam
jge
test
jecxz
jns
arpl
ja
xor
sbb
cmc
adc
sarb
lret
xor
mov
ret
mov
mov
fnstcw
or
popf
push
mov
sbb
or
push
iret
das
push
ror
mov
shll
ljmp
jnp
sub
inc
js
mov
xchg
mov
cmc
into
inc
out
outsl
movsb
lret
jp
mov
lock
jnp
out
xchg
test
add
in
pusha
imul
inc
fisttpll
test
aaa
in
inc
mov
les
rorl
ds
jnp
cmp
sub
loopne
sbb
addr16
icebp
aad
shll
scas
fxch
push
and
sarb
fnstcw
insb
aam
ret
sbb
outsb
out
iret
pop
lods
pop
push
sub
jbe
fcomps
cmpsl
stc
mov
adc
add
ja
mov
or
push
pop
xor
push
inc
fcmovne
out
loop
jle
mov
leave
movsl
es
outsb
mov
mov
or
fsts
or
stc
es
adc
inc
arpl
cmp
pop
and
mov
push
popf
addr16
dec
loopne
mov
pop
jo
jecxz
push
push
sarb
xor
daa
rorb
sub
sti
push
mov
scas
repz
pop
adc
jae
cmp
push
int
insb
cmp
outsl
stos
fdivl
imul
int3
popa
cld
orb
xor
fbstp
push
xor
in
ja
pop
pop
mov
rol
fidivl
cli
push
cmpb
pop
lss
mov
sahf
arpl
enter
or
aam
lods
sbb
pop
jl
not
paddb
jge
cmp
iret
push
xor
fisubl
mov
dec
jge
and
jmp
pop
xor
jne
inc
mov
sti
mov
dec
bound
orb
jno
xlat
inc
shll
xchg
inc
mov
outsb
nop
imul
orl
sub
aaa
test
mov
pop
mov
cmp
xchg
push
fwait
sub
test
repnz
lahf
fnstsw
cs
pushf
bound
cmp
pop
call
xchg
repnz
out
xchg
pop
xlat
rcll
mov
icebp
mov
fucom
jecxz
test
mov
push
push
xor
xchg
jge
out
mov
adc
xchg
xchg
in
js
or
inc
hlt
out
xor
push
call
mov
mov
push
add
push
into
mov
shl
test
mov
je
add
sbb
addr16
sbb
or
aam
aad
jno
sub
mov
outsb
push
mov
nop
loope
jne
fmull
push
push
sub
xchg
out
inc
add
stos
and
and
adc
ja
cltd
cmpsl
lock
ljmp
scas
test
addr16
movsb
loope
xchg
lock
dec
bound
xchg
shll
rcll
sub
negb
dec
pop
add
popf
repnz
or
cmpsl
imul
jbe
push
mov
js
lods
mov
xchg
hlt
cwtl
in
mov
popf
fldl2e
dec
add
sarb
push
mov
fmuls
imulb
sub
mov
aad
sbb
in
mov
mov
test
and
ds
add
jge
fnstenv
sub
xor
cmp
in
pop
lcall
je
test
ja
jge
test
xor
pop
pop
jne
jmp
adc
mov
or
pop
jbe
clc
adc
test
jge
xor
pusha
out
mov
out
aad
pushf
cli
cmp
pushf
mov
cwtl
push
add
push
push
iret
sbb
jns
push
mov
out
cmpsl
mov
lahf
iret
inc
inc
and
enter
mov
mov
mov
mov
and
and
lea
outsb
jmp
jg
jno
aaa
stc
fwait
stc
cmpsl
and
adc
rcll
cmp
outsl
into
fsubrl
or
xchg
cmp
shll
mov
xchg
jns
mov
mov
lahf
insb
xchg
add
xor
or
mov
and
inc
int3
and
pop
insb
mov
sbb
xchg
push
sub
ret
mov
inc
pop
inc
sub
pop
sbb
push
sub
pop
xchg
jo
lret
jle
fidivrl
or
mov
mov
jb
mov
imull
jecxz
and
aaa
fcoms
sti
dec
stos
out
sahf
jp
sahf
cs
and
inc
xor
das
dec
xchg
fdiv
insl
in
fs
cmp
mov
ljmp
and
movsw
out
cmpsb
ja
aaa
mov
jb
daa
jge
jae
xchg
xor
dec
popfw
mov
jb
addb
mov
shll
xchg
cmpsb
sub
in
or
faddl
icebp
push
mov
das
les
outsl
cmp
sbb
ljmp
xchg
ja
lea
loopne
push
lcall
sarb
mov
out
ja
mulb
in
xchg
mov
mov
repz
out
push
cmp
lods
and
adc
push
add
sub
or
imul
cmp
xor
dec
sahf
int
ffreep
loopne
mov
mov
cmp
lds
dec
and
incb
mov
mov
xchg
xor
sbb
jo
insb
pop
enter
or
adc
int3
sbb
cmp
iret
icebp
cmpsw
pop
lea
cmp
jmp
xor
adc
adc
out
or
int
dec
fists
push
xchg
cld
loopne
adc
fsubrl
xor
fdivr
data16
dec
mov
gs
sahf
mov
or
imul
and
mov
cmp
ret
adc
mov
push
push
jg
ret
pop
pushf
xor
jg
adc
arpl
es
scas
fstpt
xchg
inc
sbb
ret
push
imul
cmpsl
hlt
rcrl
and
adcb
pop
into
pop
dec
cmp
cwtl
adc
hlt
idivl
int3
dec
imul
scas
dec
addr16
dec
rcll
adc
inc
pop
mov
les
ret
inc
in
dec
pop
das
add
mov
add
loop
mul
sbb
stc
cmpsb
mov
xor
out
les
jle
in
leave
dec
add
gs
jns
orl
inc
call
cmpsb
in
pop
jle
xor
inc
sub
imul
daa
pop
xor
bound
push
mov
daa
jne
fistpl
ret
mov
bound
xchg
pop
push
adc
iret
ficompl
cltd
add
mov
shrl
or
cmpsl
or
adc
ss
insb
cmp
push
push
dec
shrl
js
dec
popf
mov
push
push
jl
jg
lahf
xor
xchg
push
imul
cmpsb
test
pusha
out
dec
pop
lds
in
jle
std
movsl
xchg
xchg
sub
ss
cmp
cwtl
insl
int
mov
sub
subb
dec
out
sti
push
scas
stos
sahf
andl
adc
mov
pusha
xor
jl
aad
popa
pop
in
mov
sbb
pop
test
inc
enter
ffree
pop
imul
mov
out
pop
in
lcall
jp
sub
lock
sub
inc
fisttpl
loop
js
xchg
repz
mov
sub
mov
sub
sbb
pop
sub
xor
imul
and
out
xor
push
sub
sub
or
push
inc
subb
xor
mov
xor
es
out
cli
lcall
aas
dec
sbb
xchg
cmc
cld
xchg
push
test
mov
je
insl
add
dec
xor
push
dec
movsb
inc
add
xchg
add
cmp
les
out
mov
jg
mov
add
pop
add
lods
out
js
out
xchg
movsb
repz
lcall
sbb
test
pop
jle
gs
clc
sub
mov
lahf
loopne
hlt
test
and
out
add
nop
dec
mov
pop
out
xor
adc
mov
push
mov
adc
mov
xchg
mov
push
cmpsb
dec
or
imul
fildl
and
pop
jo
sti
add
faddl
jae
mov
inc
pop
stc
mov
cmp
xchg
ljmp
int
pop
adc
lret
add
adc
in
daa
inc
or
sbb
sub
leave
cltd
pop
mov
cli
xchg
jnp
sbb
jmp
push
stos
cmp
mov
dec
hlt
jmp
stos
mov
or
adc
mov
sub
mov
fdivrs
inc
sarl
jo
icebp
mov
or
dec
out
mov
popa
inc
ret
push
sti
mov
cmp
sub
fdiv
sub
std
cmp
test
add
adc
dec
pop
mov
lods
push
rcrl
pop
jecxz
aam
ficomps
ss
mov
cmpsb
stc
inc
mov
dec
push
stos
sbb
add
aas
inc
es
mov
test
cmpsb
xor
jae
lcall
sub
out
sub
in
cwtl
jae
shlb
fwait
leave
aad
push
jmp
mov
sbb
fwait
sub
scas
xor
int
mov
test
fisttpl
test
mov
stc
dec
sub
aam
sbb
cmp
scas
push
cmc
sbb
or
decl
or
lods
adc
in
mov
push
inc
data16
xor
jne
add
cmp
orl
sar
push
es
mov
xchg
outsb
add
cmp
inc
outsb
cmp
sub
js
mull
pop
or
or
sbb
imul
xchg
dec
add
repz
dec
aad
stos
clc
mov
xchg
lea
add
jmp
std
lcall
ljmp
rcll
pop
in
jle
outsl
les
sbb
jns
inc
pop
ja
lcall
repz
rcr
add
ja
mov
or
addb
mov
sti
insb
push
test
das
je
fldcw
testl
fstpt
mov
les
lret
inc
jo
sub
jbe
mov
sbb
adc
adc
shll
subl
jno
jle
cmp
or
scas
es
dec
dec
cmc
xor
fucomp
dec
cltd
push
cmp
imul
and
aam
cli
cltd
aaa
in
in
adc
jmp
dec
xchg
lods
sub
adc
movl
and
popa
cmp
in
in
scas
inc
cwtl
jbe
or
cmp
add
mov
cmp
adc
adc
jmp
imul
loopne
addr16
xchg
push
mov
cmpl
movb
ret
mov
popa
push
pop
push
or
sub
mov
add
mov
add
and
dec
test
popf
adc
adc
mov
rcrb
cld
lahf
ret
cli
mov
int3
xchg
pop
ds
sub
out
call
sbb
popf
mov
ss
or
jbe
add
and
lds
std
mov
mov
imulb
mov
je
adc
mov
add
cwtl
cmp
xor
lcall
imull
cmp
jns
std
shrl
xchg
orl
jge
mov
dec
out
lds
jo
mov
adc
cmp
call
out
xor
in
cmp
test
mov
dec
push
pop
dec
jo
pop
leave
jge
sbb
sbb
cmp
ret
stos
cmp
pop
outsb
and
sub
jmp
pop
xchg
in
mov
test
xor
sbb
jge
notb
cmc
or
dec
and
xchg
addr16
lahf
iret
dec
js
stos
mov
push
gs
outsl
cmp
push
or
or
sbb
test
push
test
pop
test
xor
add
add
mov
ja
jmp
pushf
sub
inc
or
insl
push
idivl
mov
jnp
dec
jg
adc
stc
adc
xchg
cmp
out
jmp
daa
stos
iret
loope
imul
add
ret
lret
shrl
pop
cltd
daa
shll
call
sub
hlt
pop
cmp
push
xor
sbb
jmp
loopne
les
dec
sbb
xlat
cmc
cmc
jbe
xor
aas
jl
nop
jns
std
arpl
pop
cmp
xor
outsb
das
ret
mov
and
mov
push
iret
insb
jecxz
mov
or
jno
test
jno
mov
loopne
clc
jg
out
in
pop
les
push
sub
xchg
push
xchg
shr
and
mov
pop
sti
scas
pop
xchg
mov
and
hlt
add
pop
cmpsb
pop
push
and
stc
pop
orb
mov
mov
mov
ljmp
out
mov
rclb
jl
jecxz
lahf
inc
fcoml
xor
dec
subb
cs
imul
xor
xchg
int3
and
xor
lcall
fistps
sbb
push
into
push
pop
fildll
int
jle
movl
pop
jo
jae
xchg
js
xlat
dec
aaa
xchg
xor
out
ror
sub
dec
or
pop
cmp
mov
bound
jae
dec
loope
pop
cmp
hlt
dec
ds
shll
mov
cmpsb
xchg
jl
jns
aam
sbb
inc
adc
cltd
cld
pop
in
mov
push
push
fdivr
not
ljmp
sarb
mov
arpl
add
outsl
out
insl
push
int3
cmpsl
movsb
jne,pt
pop
jo
xchg
fildll
jmp
jle
fdivrp
cmp
dec
hlt
shrb
leave
mov
enter
add
int3
mov
jl
mov
dec
div
repnz
xchg
cmp
push
bound
call
enter
into
imul
test
inc
insb
sub
and
pop
inc
push
test
sbb
ret
daa
jmp
or
xchg
shll
scas
fisttps
sar
repz
cmp
mov
jns
sub
loope
pusha
jecxz
outsl
fucomi
mov
or
xor
sti
fucomip
xor
push
lock
push
or
inc
test
int
movsb
sbb
pop
mov
jae
scas
daa
imul
xchg
xchg
dec
pop
add
add
in
xchg
xchg
iret
sbb
xchg
sti
xchg
pop
add
or
fsubl
sub
jnp
shl
pop
inc
xchg
insw
in
test
add
mov
loopne
adc
push
mov
sahf
ds
sub
fcoml
pop
hlt
shlb
cmp
push
xchg
fwait
cmp
pushf
mov
mov
inc
mov
lods
loop
push
out
add
xchg
fildl
nop
mov
js
push
xchg
sbb
aas
sbb
xchg
test
and
mov
dec
and
xlat
cmp
cmp
fidivrl
pusha
ljmp
jae
jae
inc
fsubrl
fwait
test
push
push
pop
or
jecxz
push
add
out
stos
or
add
insl
repnz
pop
out
inc
xchg
jp
mov
jbe
mov
mov
and
jb
lods
repz
fidivrs
dec
pop
out
scas
insl
inc
pop
add
jg
inc
into
xor
setnp
sbb
les
sub
inc
mov
mov
arpl
pop
ja
adc
jnp
xchg
xchg
pushf
clc
and
cli
mov
in
shlb
int3
or
ret
inc
loope
jo
lahf
add
dec
bndldx
ja
fdivs
xchg
ds
aas
push
cmp
mov
dec
in
mov
mov
test
mov
jae
add
cmp
pop
iret
jg
or
xchg
cmpb
adc
lcall
dec
sub
lret
enter
xchg
insb
push
cld
gs
pop
pop
insb
incb
fildll
lods
lcall
pop
in
push
push
and
or
dec
cmp
hlt
in
out
jo
dec
dec
or
xchg
cli
mov
sti
mov
jbe
dec
dec
popa
roll
fsubrs
fsubl
inc
icebp
cmc
bound
lds
adc
cmp
out
mov
mov
aaa
jne
dec
int3
jbe
lods
movsb
push
dec
test
mov
loopne
cmpb
xchg
outsb
clc
push
in
rol
cmp
push
out
pop
jns
and
fildl
jg
jge
mov
fsubrs
dec
adc
adc
lods
mov
sti
lods
stos
pop
popf
ds
or
pop
or
push
add
inc
stc
add
xor
stos
or
lea
repnz
shrl
adc
xchg
mov
mov
push
xlat
lods
gs
iret
in
cltd
in
aas
xor
fwait
mov
dec
into
sub
xchg
iret
nop
add
leave
dec
dec
in
pusha
icebp
jae
dec
out
xor
xorl
sbb
pop
cwtl
mov
cmpsl
sbb
add
jecxz
lret
cmc
dec
cmpl
mov
ss
and
push
fidivrs
pop
mov
das
or
mov
inc
mov
ret
test
mov
cmp
jle
negl
fildll
mov
and
xchg
dec
cltd
sub
cltd
sub
dec
or
hlt
jecxz
mov
push
sub
mov
xchg
repz
gs
mov
leave
test
push
adc
sbb
push
push
mov
test
rorl
mov
sub
dec
fadd
pop
test
clc
scas
dec
callw
dec
repz
mov
jae
pushf
pop
fdivs
and
dec
stos
movsl
mov
cmp
pusha
fsubp
mov
aam
inc
add
mov
mov
outsb
jo
sti
xchg
xchg
add
loop
test
pop
cltd
fdivrl
imul
push
test
ret
and
rolb
and
int3
pusha
test
out
sahf
add
test
mov
ret
jmp
leave
lds
mov
movsl
cmp
mov
jge
out
and
mov
push
dec
bound
cmp
mov
pop
or
mov
repz
push
jo
repnz
std
mov
loopne
inc
pusha
push
xor
cmp
pop
mov
aas
jbe
jp
punpckhdq
add
mov
lock
fdivrl
shlb
add
dec
pop
dec
add
adc
dec
sbb
mov
lods
fimull
repnz
es
or
sub
shlb
test
in
leave
adc
fmuls
aam
xor
sbb
imul
into
test
mov
cmp
test
pop
hlt
lcall
loopne
lds
jle
dec
int
mov
xchg
pop
or
mov
mov
push
mov
xchg
mov
aad
int
mov
jp
imul
lock
movsl
rclb
mov
xlat
cltd
bound
sub
mov
cwtl
mov
mov
mov
ficomps
lds
int
and
jl
les
xchg
dec
nop
mov
outsb
push
jbe
mov
es
add
stos
imul
dec
xchg
mov
sub
sbb
ror
jl
or
mov
lea
push
aaa
lret
add
cmpsl
test
cli
adc
add
call
aam
das
jg
jae
add
lods
inc
dec
lods
fimuls
inc
cs
dec
sbb
int
mov
push
add
mov
imul
gs
mov
jo
daa
addl
adc
add
sbb
inc
sbb
xchg
je
mov
xchg
loopne
shl
jl
mov
ja
es
xchg
out
push
dec
out
inc
insl
fstl
in
sub
sti
jmp
dec
xor
ljmp
and
cmp
pushf
pop
inc
xor
fcoml
xchg
push
js
add
dec
or
inc
and
lret
imul
push
jl
sbb
xor
or
adc
data16
dec
lret
cwtl
xor
cmpsb
adc
je
aad
jo
and
imul
sbb
jno
aad
shll
in
push
inc
hlt
xor
mov
mov
inc
insb
in
mov
les
clc
imul
pop
rorb
insl
pop
mulb
inc
pop
dec
xchg
shl
cld
jo
ljmp
add
out
add
cmp
sub
jmp
outsb
inc
or
loopne
inc
es
ret
push
notl
pushf
ret
mov
mov
pop
mov
cmovno
push
sbb
or
xor
inc
mov
sbb
lods
add
inc
js
dec
daa
xlat
sub
int
xlat
push
insl
in
shll
jl
negl
stc
aaa
xchg
fpatan
add
mov
push
mov
pop
outsl
sbb
fs
les
sbb
out
push
mov
xchg
cmc
push
movsb
pop
popl
sbb
enter
mov
cwtl
mov
lock
outsl
pushf
mov
pop
mov
int
push
ljmp
subl
adc
or
lods
icebp
es
scas
push
pop
pop
sbb
scas
jnp
ja
push
repnz
dec
jbe
inc
fsubrl
mov
mov
js
pop
dec
xor
out
dec
sub
cwtl
adc
dec
popa
sbb
idiv
or
int
push
inc
mov
lods
xchg
sbb
jno
leave
mov
push
adc
lea
xchg
cmp
and
and
iret
fnsave
fmull
popa
or
scas
cwtl
cmp
adc
roll
ret
movsb
cmp
sub
test
add
loopne
jg
mov
or
loope
mov
jp
test
nop
or
fwait
sbb
xchg
addr16
push
test
xlat
outsb
and
fwait
sarl
adc
lahf
jnp
xor
dec
das
push
lea
aaa
scas
mov
mov
enter
std
cmp
lret
fstpl
in
sub
mov
cmpsl
rclb
imul
lahf
dec
sbb
sub
push
or
out
xchg
movsl
cmp
pushl
jp
push
pop
add
mov
dec
test
movsl
fistl
in
mov
rclb
stos
lahf
or
fwait
sub
mov
push
xor
loop
cmpsl
push
pop
jle
je
in
fsubr
movb
test
sbb
mov
and
lds
cltd
sti
outsl
push
mov
cli
clc
loopne
dec
jmp
xor
add
dec
lcall
jl
repz
cmp
loope
xchg
and
xchg
sub
mov
add
adc
xchg
imul
inc
test
dec
stos
dec
pop
call
scas
shll
mov
daa
push
push
inc
jg
sbbl
sub
mov
shll
out
in
xchg
lahf
mov
push
jnp
and
inc
sbb
sbb
iret
lods
ljmp
ja
sbb
jge
and
nop
dec
andl
imul
mov
add
das
lcall
hlt
in
popa
cs
out
pop
inc
cmc
jb
and
das
je
mov
pop
test
scas
adc
push
sbb
cltd
dec
pushf
mov
or
sbb
cli
push
push
jmp
sar
gs
push
insb
xlat
nop
cmp
insl
daa
sub
cmp
sub
je
jns
mov
pop
stos
and
xchg
mov
and
ds
insl
jo
lds
rcll
pusha
inc
loop
mov
jb
cwtl
pop
out
aad
mov
jmp
arpl
in
fidivrl
lcall
movsb
shlb
fnsetpm(287
out
or
scas
orl
ret
pop
loope
out
incl
mov
push
sub
sbb
movsb
dec
insb
bound
cltd
adc
cld
mov
fcmove
cs
je
lea
leave
add
cmp
sti
hlt
mov
notl
in
mov
pop
dec
ss
adc
xchg
push
fbld
mov
xchg
cli
xor
push
shll
and
mov
sti
ja
dec
mov
xchg
cli
cltd
jno
addl
rorl
jno
outsl
pop
int3
pop
aam
jp
aas
lret
ret
js
pushw
xchg
in
lret
imul
sarb
out
xor
rcll
ja
aam
xor
adc
push
pop
sub
lods
adc
fbstp
push
dec
add
sub
dec
xorl
mov
ljmp
inc
cmp
jbe
in
xor
fistps
jle
jge
fisttpl
lods
arpl
addr16
idivl
sbb
mov
xchg
outsb
sbb
rcrl
dec
push
jne
out
mov
adc
push
and
cmp
ficomps
xchg
dec
xchg
pusha
fldcw
scas
mov
mov
fsubrl
aaa
pop
test
lret
pop
sti
push
sub
imul
rcll
push
psllw
mov
sbb
int3
xor
aas
push
mov
out
fdivr
xchg
pop
fisubrl
jbe
jmp
and
imul
sub
jo
mov
lahf
aam
adc
push
shll
js
jle
pop
in
mov
test
fidivrl
into
out
test
cmc
jo
mov
imull
das
jne
out
xchg
fisubs
push
jge
jecxz
xchg
enter
add
divb
dec
in
test
mov
stc
mov
stos
addr16
jecxz
xor
data16
push
jecxz
cmp
pop
ljmp
mov
mov
sub
pop
sub
je
jns
imul
xchg
adc
lahf
pop
adc
cmp
sbbb
xlat
mov
or
dec
jp
int
push
mov
xchg
sbb
dec
add
mov
cmp
mov
cmp
xor
jl
aam
cmp
push
cmp
xchg
scas
lcall
sbbl
mov
ret
jnp
mov
ja
add
pushf
adc
ret
dec
push
arpl
mov
pop
call
ja
jmp
cmp
ljmp
or
and
ljmp
mov
add
sub
ret
incb
bound
push
or
mov
cmp
js
sub
jb
ret
fwait
cmp
fs
mov
cmp
push
aam
lcall
mov
pop
cmpsl
dec
mov
outsl
and
gs
call
mov
ret
imul
add
loopne
out
arpl
cmp
mov
sbb
jns
adc
cmc
or
in
or
xor
push
xchg
movsb
ss
fsubs
mov
xchg
or
pop
insl
rcll
push
mov
push
lock
lods
xchg
roll
cmpsl
movl
leave
push
push
jmp
loopne
in
ja
outsl
cld
mov
or
xchg
push
dec
int3
mov
pop
fwait
push
lea
jae
mov
jbe
jae
push
jns
nop
lret
jno
and
inc
xor
push
add
lcall
xor
cmp
into
test
add
push
push
adc
pop
outsb
jle
mov
xchg
pop
or
cmp
mov
aaa
call
mov
popf
sti
insl
mov
je
add
and
jo
push
jno
jecxz
call
ds
repz
or
movsl
mov
sbb
repz
sbb
mov
mov
cltd
aam
and
xor
cmp
mov
cltd
dec
inc
sub
addb
add
mov
or
insb
ret
in
repnz
add
mov
or
pop
imul
into
jnp
jp
inc
xchg
iret
icebp
addr16
loopne
mov
cmpsb
ljmp
push
jle
xor
cltd
in
pushf
lods
fwait
das
and
aad
push
aam
lds
add
gs
push
lcall
insl
daa
mov
lret
ret
jp
pusha
jo
or
sti
adc
in
or
stc
push
push
pop
pop
pop
imul
es
lahf
mov
les
into
sub
jbe
fisttps
or
pop
dec
aaa
add
mov
repz
loopne
addr16
cmp
push
in
or
push
add
lret
shl
call
arpl
jo
repz
cmpsl
mov
and
push
push
or
mov
stos
sbb
jmp
mov
fwait
into
sub
js
fcompl
testb
push
jmp
xchg
mov
pusha
out
cmpsb
addb
fstpl
in
mov
ss
push
addr16
lods
push
push
mov
fnstenv
jmp
aam
ret
pop
aaa
sbb
xor
cmp
mov
stos
out
pop
add
dec
mov
inc
cmp
mov
pop
pop
pop
pop
out
inc
jns
iret
ds
inc
test
xchg
aaa
push
xor
insb
xchg
popf
mov
xchg
ret
movsb
sub
add
cmp
cwtl
bndldx
pushf
mov
loope
sbb
ret
xchg
or
mov
jne
pop
into
cwtl
lret
pop
push
movsl
mov
sub
and
xchg
mov
xchg
or
in
sbb
leave
lret
shrl
rorl
push
mov
loop
push
stos
xchg
adc
mov
jl
and
testl
out
out
pop
fists
jmp
xchg
adc
add
fwait
leave
outsl
stos
xor
icebp
out
xchg
sbb
lds
or
jle
sub
into
xchg
xchg
push
sub
jmp
sbb
fnstcw
add
push
push
pop
cmpsl
pop
push
iret
imulb
mov
xchg
dec
mov
xchg
js
mov
arpl
sahf
jb
xchg
dec
lds
push
inc
pop
jb
adc
dec
fcomps
dec
mov
in
into
jnp
inc
push
out
inc
and
lock
xchg
mov
jbe
pop
mov
push
pop
pop
sbb
adc
dec
and
dec
ja
xor
jge
xchg
jg
xor
push
aad
cwtl
xlat
ret
rorb
push
in
jnp
in
fwait
subb
and
cmp
andl
jg
orb
inc
arpl
push
mov
dec
add
shl
outsb
jnp
push
and
movsl
pusha
dec
lret
js
dec
mov
dec
xor
or
pop
sub
dec
repnz
dec
mov
cmpl
loop
xchg
es
xor
xor
cmp
jb
in
jns
push
pop
lods
sub
nop
and
lds
and
pop
cmp
dec
push
in
xchg
imul
ret
sbb
inc
add
dec
aas
push
or
not
jns
sbbb
push
mov
inc
int
das
pop
mov
xchg
mov
cmp
dec
cmp
pop
rorl
mov
les
sbb
aaa
iret
adc
imul
or
or
int
sbb
sub
adc
mov
pop
and
or
mov
dec
and
push
and
pusha
lret
pop
jmp
jg
push
add
negl
xor
push
mov
cwtl
push
loopne
push
test
xchg
mov
dec
fsubrl
and
cmpsl
push
in
test
shlb
mov
cmp
add
xchg
and
insb
lods
dec
stos
lret
cmpsl
test
scas
jl
mov
insl
fistpll
pop
mov
ja
sbb
popa
jbe
mov
pop
mov
sbb
pop
std
mov
cwtl
inc
push
out
dec
dec
mov
mov
adc
lret
into
mov
insl
fdivrl
xorl
sub
repz
clc
clc
push
test
rclb
or
rolb
fsubrl
out
ret
ror
insb
sarb
sbb
sbb
push
rol
push
cmc
cmpsb
scas
xchg
pop
andb
test
dec
lods
call
movb
xor
xor
sbb
out
sahf
notb
pusha
imul
ret
jmp
and
add
add
ret
inc
lcall
rcr
adc
jnp
out
insb
aaa
sarl
jmp
inc
sbb
mov
sub
stos
sarb
in
jne
pop
pushf
pop
sbb
mov
fisubs
ja,pn
jns
rorb
aad
pop
adc
adc
xlat
dec
push
mov
mov
jae
sahf
sub
inc
stc
insl
in
pushf
popf
movsb
movl
cli
adc
lret
mov
andl
ljmp
fcomip
out
mov
adc
inc
scas
add
int
xor
mov
lea
pop
fimuls
addr16
out
jmp
dec
xlat
inc
outsl
std
out
jb
std
test
push
or
adc
mov
ret
scas
xchg
outsl
or
rcl
fidivrl
push
mov
sbb
test
icebp
lods
movb
jl
jnp
sub
jne
loope
or
dec
and
mov
add
xchg
dec
mov
jbe
fs
dec
mov
filds
cmpsl
loop
pop
gs
pushf
ja
jo
shrl
cwtl
cs
xor
addb
test
pop
test
jge
xchg
enter
out
xlat
sahf
cli
cmp
fdivp
cltd
add
shl
fiaddl
adc
mov
pop
leave
add
loopne
xor
clc
fcoml
movsl
les
shl
aam
cwtl
shlb
mov
mov
sbb
or
jmp
ds
int
mov
rol
fs
push
push
inc
out
xchg
xchg
push
pop
icebp
les
push
fdivp
or
mov
imulb
mov
or
rcrl
add
ja
adc
cwtl
sbbb
imull
sbb
mov
aaa
movsl
mov
add
int3
push
lods
xor
xor
and
jnp
arpl
xor
std
ret
and
sub
sub
dec
lret
shrb
std
jbe
aam
ret
call
es
cmp
std
xchg
push
jne
lret
lds
sub
ss
lea
imull
fnstcw
sbb
mov
mov
mov
int
test
jo
cmp
mov
or
mov
jg
mov
inc
cmpb
mov
pop
sbb
mov
fstps
in
mov
gs
add
test
cmc
mov
lods
je
mov
imul
fimull
inc
ja
roll
xchg
orl
mov
les
js
orl
mov
xor
dec
sbb
pushf
daa
jnp
mov
mov
aad
dec
daa
hlt
add
adc
xchg
inc
lock
test
fcompl
jo
and
test
rolb
pop
mov
xchg
outsl
ffreep
loope
or
rolb
insb
mov
fwait
cmpsb
negl
pop
shrb
fiaddl
out
cmp
adc
push
inc
mov
jns
mov
fucomp
test
dec
and
movsb
hlt
test
xchg
xchg
push
ljmp
pop
jg
dec
push
add
push
popf
sbb
mov
addr16
xor
mov
pusha
xchg
leave
jecxz
sahf
sbbb
scas
repnz
inc
mov
ja
push
ss
pop
dec
test
icebp
jo
mov
and
push
sysenter
and
pusha
adc
mov
xchg
call
aam
mov
pop
aas
cli
fldcw
test
fsubrp
fldt
adc
adc
adc
inc
jg
inc
insb
hlt
and
les
lea
test
shll
and
cwtl
and
jp
or
dec
xlat
and
test
mov
insl
xor
pop
fdivrp
mov
sub
jno
cld
cwtl
inc
jbe
push
int
nop
push
mov
mov
xchg
sbb
je
lods
addr16
jmp
insl
cld
inc
pop
mov
cli
xchg
inc
rcrb
jl
xor
push
sbb
jns
out
mov
icebp
cltd
sbb
mov
inc
cmp
mov
repz
les
neg
mov
or
outsb
xchg
ret
mov
mov
roll
rcr
pop
int
mov
gs
daa
stc
dec
idiv
aam
rcrl
fdivs
add
scas
call
enter
cmp
lcall
mov
or
xchg
notl
adc
inc
in
movsb
pushf
in
mov
cmpl
mov
sar
push
xor
lods
jns
fcomp
es
test
cwtl
sbb
cmp
sti
adc
pop
mov
push
and
andl
aad
mov
add
jp
ret
lock
mov
sub
int
lret
jp
push
sub
pop
inc
cli
xor
hlt
cmp
loopne
cld
mov
gs
ljmp
push
ret
mov
and
mov
lods
cld
and
ja
and
xchg
jl
or
dec
stos
jnp
and
add
sbb
testl
mov
fidivrl
pop
mov
dec
lahf
ja,pt
fsubs
pop
mov
ret
iret
sbb
shl
pop
sarb
add
cmp
ror
lods
inc
mov
mov
insb
sti
es
insb
jne
cmp
push
lret
xchg
loopne
mov
addr16
cmp
popa
in
imul
test
push
xchg
ljmp
mov
cs
roll
popf
lcall
clc
mov
push
cltd
js
es
ret
jns
dec
testl
fildll
negb
and
add
jg
xor
int
inc
jae
aas
adc
mov
test
movsb
loope
or
repnz
add
cmpsb
stc
or
pop
gs
add
push
in
adc
mov
repz
pop
jae
daa
orl
adc
scas
mul
dec
fld
movsb
addl
and
mov
mov
xor
mov
int3
push
ss
dec
inc
test
xchg
popf
out
add
pop
jbe
xor
mov
cmp
fisubs
shrb
push
lock
sub
and
add
repz
adc
jg
ds
sti
jb
aaa
mov
adc
sub
ret
jbe
scas
dec
es
orl
xchg
mov
cmpsl
flds
pop
push
roll
dec
repz
enter
pop
sub
pop
loopne
pushf
mov
sbb
cmp
dec
out
rolb
xchg
ja
fdivl
loopne
test
shr
das
jl
adc
adcl
inc
mov
push
xor
push
jbe
pop
das
dec
fs
sub
subb
inc
push
cmp
popa
mov
mov
test
ja
jne
in
ljmp
idiv
fdiv
inc
in
shl
push
movsb
adc
push
test
out
mov
push
and
xchg
or
insl
aaa
sub
outsl
inc
test
jecxz
fmull
and
lahf
lds
mov
call
iret
int3
jge
iret
test
pop
filds
push
sbb
jge
pop
xlat
sbb
scas
insb
in
dec
mov
inc
and
out
ss
jae
jge
mov
jl
jo
fwait
jno
in
xor
or
xchg
frndint
sub
lods
xchg
and
jl
popa
hlt
clc
sahf
jbe
repnz
jge
mov
mov
mov
lret
mov
cmp
add
sbb
int
pop
ds
sub
ljmp
inc
je
mov
int3
stos
rorl
mov
mov
sbb
mov
scas
mov
push
rcll
or
mov
jge
or
jno
insb
movsl
movsl
push
movsb
add
inc
or
stos
pop
mov
jnp
bound
push
adc
insb
mov
cltd
adcb
std
xlat
sub
loope
cmovae
sub
or
andb
aaa
mov
push
aas
adc
test
mov
inc
mov
inc
jg
mov
push
sbb
mov
jb
and
aam
lock
aad
stos
loopne
fwait
cmp
dec
loopne
cmp
adc
pop
xchg
in
cld
push
aaa
sbb
or
push
fcoml
dec
int3
ret
mov
outsb
lock
popf
or
cwtl
pop
fsts
leave
jae
xor
jne
push
push
push
cmp
and
sahf
insl
popa
cmp
inc
mov
pushf
adc
aaa
jbe
data16
pusha
call
jecxz
mov
stos
mov
dec
rcrb
ja
outsl
push
cmpsl
daa
and
push
lods
mov
fwait
jo
xor
cs
push
pop
jns
or
out
stc
iret
js
push
or
mov
movsb
subl
fists
sbb
sbb
cld
repz
iret
ds
dec
lods
xchg
js
dec
in
or
xchg
shlb
and
xchg
xchg
rcll
push
sahf
call
pop
add
sub
aas
pop
scas
das
int3
push
jle
mov
fs
xor
sbb
es
sbb
push
test
jae
mov
cmpsl
or
imul
mov
mov
pop
mov
fcoms
fcom
iret
mov
rorl
ficoml
js
test
jl
in
inc
or
mov
dec
sbb
lds
or
xor
and
pop
lods
lcall
out
mov
out
mov
sahf
mov
int3
loop
xchg
cli
or
out
pop
pop
fs
fiadds
shll
mov
fs
pop
fcomps
je
lods
xchg
push
sub
cld
mov
imul
arpl
dec
jge
xchg
cld
adcl
adc
dec
pop
lods
loop
xchg
fs
dec
inc
aaa
mov
dec
or
mov
or
rep
or
xchg
or
loop
or
push
pop
add
ret
cmp
ja
push
lret
cltd
hlt
add
sbb
and
mov
daa
push
mov
and
push
sti
subb
lds
fs
inc
sahf
push
testl
pop
lock
enter
add
lock
mov
addr16
push
in
mov
rorl
mov
sahf
push
sbb
out
loop
push
xchg
push
mov
scas
lds
dec
adc
xchg
loopne
adc
out
cmp
push
repnz
dec
ja
icebp
call
dec
mov
push
movsb
push
repz
test
inc
adcl
jno
daa
das
jmp
orl
imul
add
push
adc
fucomp
pushf
adc
roll
das
jle
fwait
xchg
leave
cld
mov
fdivs
sarb
das
hlt
stc
mov
scas
inc
mov
mov
adc
ja
lock
pop
scas
int3
pop
hlt
arpl
fadds
push
mov
test
xor
push
push
mov
ljmp
in
push
mov
popa
jno
sub
jmp
out
pop
rorb
cmp
decl
xor
push
adc
mov
add
test
push
aas
xor
int
popf
std
mov
mov
sbb
jmp
cmpsl
jnp
jmp
xchg
mov
gs
jg
add
xchg
push
insl
jle
dec
cmp
fdivrl
jns
int
lret
push
dec
cmpsb
xchg
inc
cld
sbb
push
pop
in
ret
cmp
mov
in
push
or
in
xorb
mov
pop
enter
js
insb
inc
sbb
jg
or
sbb
loopne
or
incb
mov
xchg
push
popf
inc
test
pop
inc
push
orl
jl
sbb
adc
pushf
pop
xor
lods
dec
mov
xor
inc
dec
popa
nop
xor
rorl
shrl
out
xorl
inc
xchg
jnp
xchg
lcall
lret
stos
push
enter
cmp
sbb
test
jbe
jnp
repz
mov
inc
mov
in
xchg
out
pop
push
repz
imul
fdivr
lahf
push
sbb
es
xor
aad
jle
incl
sub
mov
out
call
int
cmp
test
loop
pop
jge
mov
cli
and
das
adc
enter
jo
mov
inc
lret
notl
fs
push
pop
inc
ficompl
bound
mov
decb
add
sahf
sbb
jl
dec
sbb
mov
loop
sarb
mov
pop
xchg
jnp
push
push
sbb
cmpsb
xchg
in
ret
jbe
xchg
mov
fwait
cmp
lods
fs
jnp
das
mov
xor
jno
sbb
push
arpl
call
lahf
mov
daa
out
les
rcr
or
sbb
sub
sbb
jecxz
sti
cmp
dec
ds
or
push
jmp
lock
add
cmp
add
pop
loope
dec
add
cli
inc
add
movsl
jmp
clc
movsl
loopne,pn
and
orb
or
daa
test
push
xchg
push
mov
mov
stos
push
fistl
fistps
and
ret
jl
insb
push
mov
out
into
pop
cld
xor
jae
fwait
in
pusha
test
popl
aas
lahf
xor
lea
mov
inc
mov
and
rol
loop
mov
sbb
aam
imul
sahf
mov
mov
nop
aas
shr
add
add
test
adc
push
pop
xrelease
shr
xchg
in
adc
xchg
ret
jge
shrb
lcall
xlat
adc
jmp
sti
add
lods
adc
dec
jg
jl
sbb
insl
adc
scas
into
push
js
xchg
push
xor
push
jnp
jmp
scas
pop
inc
andl
bound
aad
out
leave
mov
arpl
popf
pop
lret
enter
fidivrl
test
movsl
out
mov
pop
outsl
aad
cltd
jo
jmp
mov
stos
mov
jbe
or
in
jmp
test
dec
outsl
or
cwtl
pop
stos
imul
push
pop
sbb
repz
mov
cmpsl
fsubs
pop
pop
pop
inc
adc
jnp
adc
inc
mov
mov
data16
add
jo
data16
push
jmp
jns
sbb
jno
fildll
sbb
shr
aam
pop
shl
shrb
jne
test
mov
dec
push
test
sbb
pop
test
dec
pushf
xor
push
stc
movsb
adc
enter
out
fcmovb
or
in
arpl
js
scas
fldcw
in
fdivs
shll
and
sbb
ds
fwait
and
ss
or
insb
sbb
lcall
mov
xor
push
inc
mov
jle
cmp
rclb
int
and
out
popf
dec
cmp
popa
xchg
jnp
aam
js
sti
dec
jg
lret
mov
mov
push
outsb
shrb
and
pop
test
icebp
adc
inc
jbe
xor
cmpl
sbb
daa
and
adcl
cmp
sbb
imul
in
iret
mov
negb
stc
int3
pop
mov
adcb
sub
cli
sub
out
lods
sub
cmp
es
popf
mov
addr16
mov
cmp
cmp
xchg
add
sub
inc
sbb
fcoml
or
mov
sub
je
add
mov
mov
nop
shrb
push
fidivl
shrb
pop
push
xchg
adc
bound
push
js
or
mov
push
lods
dec
mov
mov
mov
pop
mov
lods
inc
arpl
daa
sub
in
outsb
loope
outsb
icebp
icebp
pop
or
je
loopne
pop
cmc
push
jb
lea
dec
jle
nop
add
adc
fisubs
pop
in
andb
jno
lock
xor
shll
push
lods
xor
in
xor
mov
cmp
lea
xchg
sahf
lret
fdivrs
addl
stos
sbb
popf
pop
ss
ud2
push
rcrl
insl
mov
lahf
cmp
les
xchg
loop
sbb
mov
or
or
pop
mov
addl
fildl
enter
xchg
adc
ret
sub
sub
jae
pop
int3
cltd
inc
testl
adc
fsub
in
xor
fwait
xlat
ficoml
repz
mov
int
roll
and
pop
ret
mov
push
adc
scas
in
xchg
push
cmp
popa
dec
pop
aaa
fisttps
fwait
addr16
shl
adc
rol
xchg
fsubrs
jns
or
cmpsb
pop
push
pushl
imul
fs
test
jecxz
add
fimuls
jmp
popf
sti
and
in
cld
jmp
outsb
adc
sub
sbb
ret
dec
orb
push
pusha
and
les
call
jge
ljmp
shl
inc
adc
lahf
pop
sbb
lret
lcall
push
mov
pop
or
jp
jmp
ljmp
jl
subl
add
jp
in
hlt
mov
pop
xchg
inc
nop
jle
cmp
cmp
inc
iret
xor
or
stos
sbb
shll
and
fdivrl
adc
mov
test
push
idiv
fbstp
lret
outsb
nop
and
shll
fidivs
push
adc
sub
subb
orl
dec
cmp
std
and
mov
cmp
in
call
jbe
sbb
cmp
xlat
sti
scas
mov
adc
fldt
pop
scas
fimuls
pop
add
xchg
enter
js
jns
dec
cmp
mov
cmp
jb
das
mov
cmpsl
push
out
in
mov
loop
mov
jg
fimull
push
jge
ja
sbb
leave
or
movsb
mov
lahf
dec
fmul
adc
xlat
dec
mov
push
jge
inc
enter
or
inc
adc
fnsave
or
or
or
jae
into
sbb
sub
incb
sub
setle
add
pop
stos
js
push
mov
sub
xchg
mov
aaa
xchg
das
repz
add
repz
cmpsl
les
stos
pop
imul
std
mov
sahf
jbe
xchg
ljmp
out
ljmp
push
adc
jne
push
lods
jmp
icebp
nop
sbbl
dec
ljmp
xor
sahf
xor
insl
dec
into
fstpl
out
mov
pop
pop
cmp
dec
adc
pop
imul
inc
xlat
int3
jno
mov
frstor
add
jle
jle
pop
push
insb
jp
aam
pop
adc
std
dec
dec
push
dec
fwait
sbb
mov
clc
jnp
pop
je
faddl
fcomps
sub
jg
lds
push
rol
gs
mov
scas
jge
jns
fadds
cs
jne
jge
adc
inc
gs
inc
inc
ja
mov
dec
pop
xor
pop
ja
mov
sbb
sbb
sbb
sti
nop
scas
sub
cmp
cmp
cmp
and
mov
fwait
cmc
aaa
outsl
pusha
test
ljmp
and
inc
add
aam
imul
or
mov
inc
lods
shrb
int
mov
inc
stc
lock
cmpsb
and
mov
ret
cmp
dec
dec
addl
inc
sbbb
fistps
mov
shrl
shl
pop
sbbl
scas
cld
das
sub
aaa
inc
push
jno
xchg
pusha
or
adc
adc
push
xchg
adc
mov
fldl
xor
xchg
stos
mov
adc
cmp
sub
cli
sbb
cld
push
incb
cwtl
sub
mulb
xor
mov
das
dec
dec
pop
int3
jb
cmpsl
inc
jle
cli
pop
cmpsl
test
jl
in
idivl
call
add
out
repz
insb
mov
cmc
lret
enter
xor
pop
hlt
bound
outsl
or
out
mov
xlat
test
add
lock
mov
xor
pop
xchg
and
jns
jns
lock
gs
sarb
jne
pop
push
mov
cli
orb
nop
push
cwtl
and
push
out
or
jae
cld
sbb
or
jl
into
clc
dec
call
cli
mov
out
sbb
sets
jg
xor
cmp
mov
cmc
leave
cld
inc
pop
sub
out
cmp
push
sbb
outsb
js
dec
shl
lcall
add
fistpll
dec
push
out
add
lret
popf
jg
xchg
addr16
jmp
inc
fs
sub
adcb
add
popa
icebp
sbbl
fsubrl
pushf
lods
out
adc
icebp
inc
jne
mov
add
or
inc
or
mov
mull
das
adc
iret
divb
cmp
mov
mov
lgs
push
outsb
push
jge
mov
xor
test
popf
inc
stc
or
cmpsb
jno
mov
or
test
shlb
xchg
inc
pop
mov
jae
adc
add
fidivs
leave
mov
cmpsl
imul
outsb
iret
leave
cs
int
push
add
lock
icebp
js
hlt
cltd
jmp
adcw
lock
sub
clc
mov
imul
ja
sbb
les
sub
jnp
mov
cmp
rcr
pusha
shrb
inc
or
jge
loope
inc
jecxz
sub
or
out
cmp
mov
pop
mov
repnz
adc
mov
xorl
call
dec
jge
mov
loop
cmp
jns
test
loopne
les
dec
mov
repnz
add
aas
mov
or
add
andb
and
mov
sbb
mov
into
jnp
pop
roll
out
enter
xchg
pusha
mov
sub
cmp
jb
cli
mov
mov
lods
or
test
orl
mov
gs
jp
mov
xorb
das
out
jb
sub
dec
adc
loopne
pop
jecxz
sarb
mov
scas
cmp
lret
adc
into
mov
scas
lcallw
mov
lea
push
push
pop
out
arpl
cld
sub
pop
cmpsl
js
arpl
sub
jp
jmp
sbb
xchg
adcb
and
fisubl
jp
inc
cmp
or
aam
cmp
es
js
adc
xlat
enter
dec
jae
sub
push
jle
inc
out
sarw
scas
nop
or
lcall
arpl
xor
cltd
xor
xchg
jp
in
push
outsl
mov
pushf
insl
movsl
jne
fwait
cmc
jb
ret
sbb
out
xor
mov
pop
mov
hlt
sbb
jns
mov
sarb
jb
cmp
cmpsb
int
or
lds
add
inc
xor
stos
lods
mov
sti
mov
dec
cs
repnz
inc
les
in
cmp
or
jno
inc
dec
or
sbb
cli
pop
cmp
fwait
shrb
push
jl
mov
sub
notl
push
les
add
xchg
js
mov
push
popf
ret
mov
xchg
lahf
fstpl
inc
shrb
cltd
call
mov
pop
lret
test
aas
jp
sub
mov
imul
cmp
cmp
insb
inc
mov
jne
inc
daa
inc
adc
adc
lock
pop
daa
hlt
xchg
cli
mov
jns,pt
xchg
jle
xor
cmp
daa
test
or
lods
cmp
mov
or
dec
paddd
pop
push
faddl
adc
test
jle
fsts
gs
inc
rclb
lret
and
aas
cmp
pop
and
cwtl
lahf
stc
dec
jno
xchg
and
push
out
sbb
js
jne
fmuls
pop
push
imul
push
mov
jle
push
xor
dec
jb
dec
ja
test
and
lcall
cmp
sub
mov
and
mov
push
and
inc
int3
pushf
lods
es
loop
das
bound
sbb
xor
mov
mov
add
lock
or
cmpsb
inc
cmp
stos
dec
jne
add
push
pop
jg
ljmp
sbb
ret
xchg
xor
mov
xchg
push
xchg
xor
push
jno
repnz
xor
add
push
pop
lods
and
in
jecxz
ret
in
jp
subl
mov
inc
hlt
fcmovnbe
push
fcmovb
or
add
dec
push
jmp
cmpsb
or
cmpl
imul
inc
xchg
sbb
add
pop
push
lahf
sub
pushf
int
mov
shlb
sbb
lea
or
scas
mov
and
test
sub
mov
push
aam
divl
add
and
xchg
std
add
sub
pop
cltd
xor
add
adc
ret
xchg
xor
daa
loop
int
sbb
sbb
imul
in
aad
push
adc
hlt
lcall
mov
add
push
dec
mov
fdivrl
push
jbe
jl
jmp
sbb
iret
fwait
xchg
ja
push
jge
mov
mov
cmp
pop
rclb
dec
mov
inc
ds
fcmovnb
test
lcall
in
xor
sub
push
shl
add
dec
add
add
es
out
fildl
imul
addr16
inc
and
jae
mov
subb
fisubrs
xlat
pop
cld
adc
adc
and
outsl
stos
imul
mov
gs
xchg
or
loopne
mov
pop
nop
test
xchg
pop
orl
fstp
lods
xchg
or
cmp
lcall
fisubrl
icebp
push
in
lcall
inc
shl
xchg
push
inc
cmp
js
imul
jl
adc
enter
push
jp
xor
xchg
in
jb
es
jnp
out
pushf
fnstsw
arpl
cmp
cwtl
aad
xchg
xchg
jmp
hlt
insb
inc
pop
mov
cmpb
xchg
test
jle
test
out
cmpsl
jo
ljmp
xchg
jb
push
js
or
pop
leave
jbe
inc
test
dec
push
or
scas
lahf
push
jmp
leave
mov
shlb
pusha
fldl
sbb
in
lahf
shll
ds
test
shl
stos
adc
test
xchg
clc
inc
rcrl
imul
or
mov
jg
mov
sbb
mov
jg
scas
sub
jecxz
ret
jns
mov
xchg
push
andb
pop
adc
push
stc
add
inc
mov
jo,pt
adc
lds
jne
xchg
mov
insb
or
jp
int3
mov
sbb
loopne
jl
inc
or
mov
jecxz
push
mov
add
add
mov
xor
mov
inc
jae
sahf
stos
sbb
fbstp
or
xchg
cmpsl
fsubs
outsb
sub
jl
arpl
jecxz
mov
add
int
cmp
stc
mov
cmp
cmp
jo
xor
mov
ret
mov
into
cwtl
pop
xchg
in
xor
adc
lea
iret
fisubrs
mov
popa
sbb
xchg
mov
fildl
fisubrs
or
repz
shll
es
push
clc
test
sbb
xchg
fisubl
push
jmp
jmp
sub
shl
sar
dec
add
push
push
or
arpl
or
sarb
add
and
rolb
rcrl
mov
xor
pop
loop
ljmp
push
fs
jge
xchg
in
push
bound
out
dec
adc
push
pop
movlhps
jnp
mov
stc
arpl
enter
in
jno
xchg
scas
xchg
push
push
ljmp
cmp
xor
xchg
loop
std
pop
faddl
nop
out
lds
fisttpll
cmp
add
aas
dec
sbb
clc
add
enter
sbb
jg
out
leave
addr16
ficoml
imul
jnp
xorl
pop
insb
xor
add
pop
xchg
push
and
sbbl
lock
popf
test
or
es
divb
ja
xchg
jmp
jl
es
adc
or
rcll
fbstp
notb
fsubs
call
pop
test
inc
sub
aam
adc
addb
aas
mov
repnz
imul
mov
pop
pusha
xchg
sbbl
xchg
inc
push
add
ret
push
add
cli
jne
pop
loope
lret
decl
pop
rcr
mov
jge
dec
pop
sub
rorl
ret
dec
mov
pop
test
es
icebp
pushl
sub
pop
inc
xlat
subl
mov
xor
mov
mov
gs
jne
jle
xorb
jne
das
or
data16
pop
sbb
jne
pop
mov
mov
mov
fcomps
fbstp
jbe
push
pop
pop
mov
in
jbe
sahf
mov
mov
fimuls
push
mov
xchg
popf
adc
mov
popa
inc
aad
or
add
and
nop
xor
mov
inc
lret
inc
into
mov
test
mov
xor
jp
mov
dec
xor
mov
mov
lock
adc
xchg
insl
jecxz
inc
xchg
insb
les
pusha
sti
mov
jmp
mov
pop
sbb
hlt
out
out
pop
inc
pop
lcall
mov
addr16
jb
or
and
or
sub
pop
popa
mov
inc
pop
arpl
jle
addr16
pop
ret
push
cs
mov
pop
jne
and
dec
xor
push
and
mov
jae
pop
mov
add
in
fistl
cmp
jbe
add
shll
cs
lahf
movsb
jbe
mov
mov
mov
mov
aaa
notrack
cmp
ljmp
pop
out
lcall
sbb
nop
dec
fidivl
leave
cld
cmc
xor
adc
cmp
data16
inc
loopne
lock
imul
xor
adc
mov
xchg
outsl
xor
call
pop
push
int3
jnp
stc
push
test
sub
push
add
aas
push
pop
sahf
xor
mov
outsw
fsubrl
loope
mov
xchg
cmc
xchg
add
sub
test
pop
xchg
icebp
sbb
push
pop
aas
xor
push
jne
divl
sbb
sbb
add
xor
lods
pop
push
inc
mov
test
and
sarb
cmp
aad
push
out
and
lock
and
mov
outsb
fisubrs
inc
rorl
and
push
cmp
add
mov
jnp
push
test
and
pop
mov
lret
lcall
ljmp
lea
or
test
fstpl
fsts
mov
lcall
test
sub
add
imul
push
cs
xor
mov
or
lock
jno
mov
orl
push
rol
xchg
imul
je
pop
stc
in
mov
sub
out
sub
cmpsl
fdivrl
xchg
dec
cmc
insl
lcall
mov
ljmp
aad
or
push
push
cltd
stos
int3
jo
in
lds
mov
add
mov
pop
pop
loope
je
sbb
pushf
add
xor
or
jg
int3
les
repnz
xchg
lock
pop
mov
aaa
sub
xor
push
mov
pop
xor
add
mov
stos
jb
push
out
je
and
sbb
sahf
mov
adc
sbb
movsb
jl
sahf
popa
sub
sarb
push
xchg
jle
mov
loopne
sbb
xor
dec
orb
adc
fdivs
call
hlt
push
inc
push
mov
imull
rcrb
jl
sub
push
jae
out
in
roll
or
jmp
mov
icebp
cwtl
mov
cmp
lret
jmp
loope
sub
cltd
xchg
jmp
loopne
and
jnp
ss
dec
xor
sub
iret
movsb
push
les
inc
and
in
xchg
ja
xchg
lea
nop
mov
pop
lahf
sahf
mov
loope
push
cld
negb
jl
cmp
stos
out
ret
cmc
dec
int3
mov
mov
dec
jae
out
pop
push
out
inc
dec
enter
jge
mov
sub
cmc
jmp
jne
sub
push
jg
test
add
pop
and
js
mov
pusha
stos
test
int
inc
pop
jno
popf
jnp
jl
call
fldenv
pop
cmp
or
cmp
pop
call
out
jecxz
movsl
fstps
int3
es
xchg
sbb
lret
pushf
in
push
lods
push
jg
dec
ret
push
dec
sbb
mov
xor
in
push
mov
imul
dec
xor
pop
dec
sarb
jns
stos
faddl
or
cmpxchg
adc
sete
pushl
fidivl
cmp
cmp
jg
ja
aas
dec
icebp
pushw
push
sub
or
xchg
xor
stos
push
xor
orl
cmp
xchg
in
iret
or
and
in
ret
adcl
push
dec
lahf
cwtl
mov
dec
pop
aaa
test
iret
sarb
xchg
cmc
push
inc
pop
pushf
fscale
pop
repz
add
jbe
test
fbld
mov
inc
xor
lock
pop
mov
xchg
push
cmp
dec
adc
push
loop
outsb
add
pushf
mov
inc
jb
sbb
shrb
loop
sarb
pop
in
adc
xor
out
dec
jb
mov
out
lcall
cs
xchg
scas
aaa
sahf
fisttps
jl
mov
sbb
cs
cmp
imul
mov
pop
and
movsb
pop
bnd
push
push
int3
or
adc
repnz
dec
inc
shlb
imul
bound
lcall
mov
xchg
lds
scas
imul
cmp
jmp
sarl
or
adc
jle
cmp
inc
mov
ret
mov
mov
add
ss
das
mov
sbb
add
sbb
mov
dec
icebp
cld
orb
jecxz
sti
fistpl
shrl
pop
sbb
int
pop
or
enter
imul
and
negl
ljmp
pop
dec
ja
and
dec
inc
dec
mov
jge
pusha
bound
and
fldenv
inc
sub
sahf
or
cmpsl
cltd
inc
push
call
jl
mov
mov
or
mov
add
test
push
lods
popf
hlt
enterw
out
push
and
insl
aaa
xlat
lret
cmc
xor
sar
adc
or
in
push
into
call
push
mov
das
and
je
in
out
outsl
dec
push
inc
dec
into
xlat
hlt
ss
mov
cs
enter
cld
ljmp
sub
test
popw
adc
leave
int
cmpsw
dec
pop
cmp
mov
xchg
mov
std
fwait
or
repz
lret
pop
lret
cmp
mov
dec
mov
aaa
mov
jb
xor
adcb
push
test
enterw
push
shrb
mov
mov
push
pop
mov
mov
cmpsb
je
cmc
insl
jecxz
pop
lcall
in
movsl
aam
push
sbb
xor
sar
aas
popa
arpl
popa
lock
ss
das
push
sub
push
addr16
icebp
das
sbb
inc
sbb
fsubrs
cmp
mov
pop
mov
mov
shr
cmp
shlb
loope
jmp
adc
stos
xor
push
out
inc
inc
pop
les
ret
cmc
sub
cmp
xchg
mov
insb
push
xor
int3
loop
xchg
push
adc
sahf
pop
rorl
pop
sub
in
loop
dec
jp
and
xor
and
pop
mov
xor
jnp
scas
arpl
inc
pop
rorl
dec
hlt
sub
jne
ret
nop
and
sbb
push
stos
xlat
imul
fwait
add
ja
add
into
stos
mov
rcrl
cmp
inc
lods
xchg
cmp
sub
cmp
call
jge
lock
xchg
adc
sub
xchg
mov
lcall
stos
cmpsl
aas
shr
test
jecxz
and
sti
add
or
xor
mov
mov
xor
rol
sub
adc
mov
inc
pushl
sbb
scas
sbb
xlat
push
push
push
int
stos
leave
cld
insb
push
xchg
fstl
aad
nop
lcall
xor
or
and
ret
shrl
sub
mov
fsubl
dec
add
fisubl
test
sub
rep
xchg
je
pop
jnp
or
movsl
cmp
jmp
inc
insb
pushw
fwait
cwtl
test
out
dec
scas
movsl
xorl
jae
cmp
movsl
in
sub
lcall
ret
imul
mov
or
push
xchg
sub
jmp
push
mov
idivl
sub
xchg
mov
pop
jo
add
rol
mov
popl
test
sbb
test
fisttpl
add
pop
popa
icebp
add
test
cmpsl
jno
mov
xchg
cmp
repz
adcl
popf
daa
stos
sub
test
pop
mov
and
cmp
push
sub
push
mov
movsl
cmp
out
fwait
dec
and
es
sbb
loope
cmovo
pop
cmp
ss
jb
xchg
pop
inc
lds
loope
lcall
das
pop
pop
idiv
lock
adcb
roll
xlat
bound
and
shr
frstor
xlat
lcall
adc
shll
jp
mov
stc
fdivp
mov
shlb
mov
rol
int
out
cmpl
mov
mov
sbb
cld
ljmp
je
cs
inc
sbb
scas
xor
dec
cmc
inc
inc
mov
cmpsl
std
add
push
insl
mov
cmp
imul
lret
mov
jo
mov
mov
shlb
mov
and
sub
jns
in
cmp
cmp
jae
add
jl
call
mov
pop
dec
jmp
mov
insl
shrl
test
fwait
dec
mov
cwtl
fld
incl
mov
push
push
int3
imul
cs
mov
into
stos
popf
and
out
ds
pusha
lahf
jp
inc
cmp
sub
mov
test
iret
mov
pop
jnp
sub
adc
out
fisttps
xor
jmp
mov
das
rolb
cmpsl
adc
xchg
adcb
and
into
iret
stc
lret
icebp
pop
push
inc
xchg
test
popf
sbb
xor
push
fnstenv
push
in
mov
clc
std
cmp
rclb
es
mov
adc
mov
inc
test
orb
and
mov
cmp
push
test
test
insb
scas
test
repnz
adc
push
aas
adc
push
inc
xor
add
out
out
jno
setg
sbb
lea
stc
les
push
lahf
cmpsb
mov
jns
int
cmpsl
cld
cmpsb
clc
jo
mov
add
and
in
fiadds
mov
stos
outsb
mov
xor
sub
aam
cmp
sub
cmpb
sub
ret
xchg
lock
pushf
mov
and
aam
adc
jmp
and
and
call
mov
add
js
lea
jnp
mov
push
cwtl
repz
loop
dec
add
mov
add
mov
sbb
jmp
sub
sbb
inc
xor
ret
dec
adc
icebp
pop
lods
int
push
xchg
push
push
add
jecxz
and
mov
jecxz
pop
pop
hlt
stos
add
push
hlt
aas
repz
in
into
inc
mov
push
sbb
and
roll
xchg
xchg
xor
mov
sub
scas
xor
push
mov
dec
sbb
int
out
or
sub
out
bound
and
cld
push
les
mov
andl
dec
stos
shll
xor
sarl
imul
sahf
jne
enter
sbb
test
mov
xchg
push
lahf
push
in
les
cmp
movsl
add
cli
xor
add
sbb
in
mov
repnz
push
mov
push
pop
jmp
test
xor
xchg
add
pop
adcl
dec
popl
xchg
xchg
loopne
rolb
pop
out
xor
cmp
dec
iret
ret
sub
adc
aad
cltd
enter
add
and
xor
jmp
pop
push
loopne
sarl
jg
repnz
xchg
push
jl
mov
test
xor
mov
cli
push
add
cltd
mov
cwtl
std
jl
test
dec
insb
adc
mov
push
fwait
or
inc
add
mov
and
mov
mov
bound
std
arpl
sub
es
fdivrs
sbb
jg
dec
sub
jae
leave
test
or
aad
pushl
cmp
inc
test
insl
adc
and
in
hlt
in
pop
pop
mov
sub
add
mov
ja
imul
pop
pop
jo
add
jle
sub
sub
jb
bnd
mov
mov
stos
es
lcall
nop
aaa
aaa
xor
sbb
addr16
aam
and
inc
dec
fildl
call
imul
out
pop
lods
shl
and
ss
mov
mov
jb
or
push
in
aas
and
adc
rol
fidivs
out
fwait
add
popf
add
ljmp
lret
in
out
das
inc
adc
int3
pushf
mov
icebp
add
cmp
jno
insb
addr16
or
inc
xchg
ds
add
les
cltd
addr16
sub
scas
in
pop
outsl
push
arpl
mov
push
in
pop
fnsave
ja
pop
daa
cli
jle
les
jl
inc
out
popf
xchg
outsl
clc
int3
lods
fstpt
in
xor
pop
cs
icebp
clc
inc
or
pop
popa
pop
push
insl
and
ja
xor
jp
mov
aam
push
jecxz
mov
pop
iret
xchg
dec
or
push
rep
loopne
dec
inc
mov
mov
aas
or
loope
sti
push
fsubrl
aad
push
mov
aam
sub
call
je
xchg
pop
lret
hlt
mov
fisubrs
mov
mov
mov
adc
gs
cltd
jge
ret
pop
push
jecxz
mov
ljmp
xchg
xor
mov
loop
and
or
fisubl
sbb
xchg
lea
jl
sub
pop
mov
cs
subb
mov
xchg
xchg
inc
into
fs
repz
push
xor
mov
into
orb
movsb
jl
lret
jae
clc
jge
scas
jnp
push
sub
lods
cmp
mov
inc
fs
xchg
fstps
mov
dec
or
mov
push
les
mov
imul
popa
xchg
shll
imul
inc
sbb
ret
xchg
add
mov
std
and
xor
xchg
sub
pop
xlat
inc
imul
ja
leave
xor
jo
xchg
ja
shll
or
out
inc
or
pop
cmp
or
in
ret
push
inc
mov
stos
jmp
in
or
add
fldenv
add
iret
fstps
pushf
xchg
pushw
mov
or
cmp
jecxz
int
daa
sbb
aaa
out
mov
mov
mov
popl
add
std
adc
cmp
ljmp
sbb
cmp
mov
xchg
test
lods
subl
mov
cwtl
iret
popa
ud0
sbb
xor
cld
push
pop
pop
fwait
pop
iret
popa
daa
pop
cmp
fs
xchg
movsb
mov
daa
leave
sbb
lock
cltd
repz
movsl
dec
movl
in
movsb
or
mov
jmp
mov
stc
and
mov
pop
dec
pop
push
pop
das
and
ret
les
stc
subb
adc
add
sub
xcrypt-cfb
cmpsl
cmpsb
popf
cmp
mov
dec
iret
adc
pop
aam
sahf
pop
int3
scas
xchg
faddl
andl
imul
inc
loop
cmp
sub
fwait
push
icebp
subl
pop
lret
and
dec
xchg
jle
push
popf
and
xor
push
sahf
pop
aaa
add
fcomip
and
shl
mov
or
cltd
movsb
daa
mov
ljmp
sbb
insb
push
bound
and
sbb
pop
aas
inc
mov
stos
aas
mov
pop
pop
xchg
jno
incb
push
sub
pusha
push
dec
mov
mov
push
test
xor
or
dec
push
push
scas
fldcw
mov
and
sub
mov
xor
hlt
cld
cmp
add
rolb
xchg
add
in
dec
lea
enter
jne
leave
into
ss
adc
dec
sbb
sbb
inc
cmpxchg
jp
std
addl
sub
jo
add
pop
mov
je
inc
push
dec
fsubrs
repz
movsl
fmul
pop
or
mov
xor
jecxz
push
sub
pushf
mov
push
push
mov
and
push
push
dec
pop
cwtl
stc
aad
xor
sub
pop
mov
pop
test
scas
add
mov
jge
call
cli
int3
dec
out
arpl
pop
rolb
cmp
pop
cs
dec
sub
loop
stos
inc
test
and
push
js,pn
cmpsl
rorb
js
jbe
in
dec
sbb
idiv
mov
xchg
dec
push
call
pusha
adc
xchg
stc
or
arpl
or
inc
pop
lret
pop
decb
mov
pop
ds
adc
std
xor
and
mov
dec
test
jle
and
inc
cltd
cli
mov
dec
mov
pop
mov
iret
fs
pop
out
mov
scas
lods
push
add
rorl
lret
stos
pop
stos
popa
stos
aaa
sub
pop
xor
loop
aad
imul
push
movhps
sbb
xor
call
test
push
pop
in
out
imull
or
sbb
outsl
neg
inc
out
mov
ficoms
aas
sbb
jl
push
inc
shll
in
ds
cmp
fcomip
imul
daa
jl
lcall
xchg
popa
in
sub
cmp
dec
sub
ja
mov
hlt
jae
and
push
xor
sub
fldenv
cwtl
inc
sahf
jecxz
cmp
or
pop
arpl
jecxz
imul
add
cmp
adc
lcall
cmp
in
cli
sbb
push
test
pop
xor
lcall
mov
sbb
ss
shrl
arpl
out
push
repz
pop
inc
push
enter
lahf
mov
mov
and
cmp
add
jno
cmp
loopne
mov
daa
lock
cmpsl
pop
and
loope
ret
sub
cmp
add
push
lods
sbb
jmp
sub
push
sbb
loope
test
cs
or
addr16
jp
imul
sub
mov
shl
fnstsw
enter
stos
test
stc
cmpsl
into
sahf
aaa
movsl
jne
loopne
loopne
push
movsb
lret
pop
shl
mov
mov
nop
and
and
insl
data16
xor
ja
dec
inc
insb
aaa
sbb
lcallw
lcall
cltd
xchg
pop
or
scas
lahf
cmc
ds
test
xchg
push
cmp
loop
outsl
and
jle
push
jb
loopne
dec
pop
lock
sub
insl
cmp
call
in
loop
pop
inc
sub
xor
test
sbb
mov
pop
fisttpl
xchg
roll
cmp
xchg
mov
jl
jmp
lds
sub
add
xor
sbb
lock
cwtl
pop
inc
xchg
aad
mov
add
sub
lcall
push
repz
jb
aad
pop
add
movsl
xchg
inc
inc
pop
sbb
fldcw
mov
out
hlt
and
rcr
jp
jmp
mov
sbb
std
xchg
ret
shr
mov
imul
xchg
clc
xor
cmp
sub
and
add
pop
jo
mov
or
cmp
fwait
and
mov
fs
mov
mov
jecxz
jnp
lods
addr16
mov
loope
push
dec
sahf
sub
inc
pop
mov
adcb
push
cmc
popa
pop
inc
sbb
and
cli
pop
jno
mov
mov
or
out
push
add
add
addr16
adc
notl
jne
clc
add
xor
pushf
into
push
cld
mov
fmull
pop
mov
sti
call
add
inc
ret
mov
sti
and
outsl
aas
add
add
jp
bnd
lock
sub
sbb
add
clc
push
jae
dec
cmpsb
scas
shl
cmp
call
push
jmp
adc
jmp
lret
xchg
push
push
repz
das
ret
mov
inc
out
imul
loope
xchg
jns
pop
mov
outsb
xor
je
or
and
insb
jno
sarb
lret
pop
in
insb
inc
out
jnp
out
test
jle
adc
push
mov
push
pop
dec
popa
and
xchg
and
test
imul
xor
loope
fwait
test
mov
ret
ret
daa
insb
mov
cmp
test
mov
into
xor
clc
iret
imul
mov
push
xchg
xor
je
mov
push
popa
nop
fdiv
push
jbe
xor
cmpsb
add
push
in
xor
sub
shr
inc
xchg
pop
xor
or
pop
scas
scas
aam
xor
cmpsb
push
cmpsl
aad
dec
out
add
movsb
out
out
push
jo
sbb
and
cmp
xor
sub
aas
pop
and
pop
mov
push
jp
add
sbb
into
testb
fadds
cmp
mov
les
push
inc
mov
daa
lods
ret
insb
push
jg
mov
push
in
enter
stos
sbb
pop
jns
jns
pop
pop
xchg
in
into
adc
shrb
ljmp
xor
stos
add
add
sbb
lahf
xchg
in
popf
test
xchg
sar
jb
imul
xchg
jo
movsb
sbbl
lcall
jae
cmpsl
xor
je
sar
jb
mov
lock
sub
xchg
mov
shll
add
mov
ja
sub
out
in
xchg
xor
mov
dec
mov
mov
sub
and
movsl
aad
shrb
mov
or
rolb
pop
test
movsl
lock
orl
insl
inc
sbbl
jo
push
jg
arpl
stc
shlb
mov
shll
imul
lahf
xchg
mov
call
repz
and
xchg
lret
aas
js
aas
sub
fldl
pop
mov
flds
jno
xlat
popf
call
sub
sbb
rorb
sbb
lods
sub
cmp
and
xchg
xchg
rcll
scas
je
fists
incb
rolb
adc
in
outsb
jmp
jmp
pushf
cmp
mov
add
insl
sbb
arpl
inc
data16
jb
xor
aad
add
dec
inc
notb
jbe
lods
fimuls
gs
iret
stc
dec
fsubl
mov
sub
sub
and
adc
insl
aam
outsl
pushf
push
inc
mov
jl
mov
jo
jb
test
std
mov
or
fnstsw
xchg
shlb
fidivs
mov
mov
pop
stos
xor
and
stc
jmp
rorb
ja
sbb
fidivrs
inc
jns
or
xchg
faddl
rol
mov
jecxz
jg
add
shll
xchg
mov
pop
lea
inc
data16
mov
cwtl
inc
cwtl
push
adcl
jp
bound
pop
bound
sbb
int3
pusha
adc
sahf
mov
pop
push
push
pop
sub
inc
scas
adc
push
mov
jge
ret
jae
dec
cmp
add
cmp
sti
add
nop
or
xchg
les
mov
sbb
add
mov
cmp
data16
in
inc
mov
push
das
movsl
pop
jmp
push
in
sub
cmp
inc
cs
and
movsb
fdivrs
adc
mov
sti
push
push
fbstp
test
jno
sub
inc
push
lock
sahf
mov
fs
jns
movb
mov
iret
icebp
lea
fwait
out
jge
rcrb
fsubs
addb
sbbb
imul
cmp
mov
enter
sub
pop
xchg
adc
mov
cli
scas
adc
in
sbb
lahf
test
mov
push
bound
out
subb
jb
cmp
sbb
fwait
out
lock
fisubl
and
sbb
test
jecxz
sub
rorl
ja
xchg
ficomps
testb
fistpl
filds
lret
pop
ja
pushf
cld
fs
adc
cmp
je
add
jle
fisubrl
xchg
ret
jmp
movntps
scas
dec
adc
jle
imul
sub
jecxz
jnp
sub
cmp
xchg
insl
rorb
lcall
sub
add
insb
out
sub
and
inc
rcll
and
and
scas
jmp
jae
or
sbb
cmp
jle
cmp
mov
mov
lret
popa
out
es
xchg
jnp
jp
lahf
mov
pop
in
adc
mov
inc
and
mov
pushf
call
cmpsl
psubd
jae
into
movsl
mov
outsb
jnp
cmp
mov
pusha
cmp
pop
mov
push
xchg
cmp
pop
scas
cmp
jmp
mov
sub
xchg
test
mov
or
push
xchg
in
ss
mov
sahf
fstl
cmp
in
daa
repnz
sbb
jmp
sbb
aam
les
inc
bound
push
push
fcmovne
les
xchg
int3
int
inc
cmp
scas
jbe
stos
jecxz
cltd
test
lcall
mov
stc
aas
add
cli
insl
mov
or
xchg
lret
cmpb
push
int
in
icebp
movsl
out
dec
fs
bound
dec
inc
mov
test
mov
mov
jmp
xor
dec
mov
stos
pushl
jmp
mov
aad
sti
mov
jecxz
test
sbb
in
and
or
push
and
cld
adc
mov
int3
cld
out
dec
adc
xchg
adc
jne
rorb
pop
dec
mov
sub
or
jl
jo
shlb
cmpsl
jae
int3
pop
jle
jge
ds
aam
dec
dec
jl
pop
cld
cld
stos
lcall
cmp
in
lahf
push
or
cmp
push
or
fcomp
inc
inc
mov
cmp
clc
ja
lea
inc
test
lahf
jns
dec
pop
and
data16
cli
mov
cld
ficoms
jl
add
push
mov
cs
inc
mov
mov
lcall
pop
fistpl
mov
push
adc
les
ds
cmp
xchg
push
or
adc
lock
cmp
data16
mov
mov
dec
mov
inc
sbb
jecxz
xor
cmp
lahf
hlt
jmp
icebp
jle
cmpsl
inc
sbbb
test
mov
xchg
inc
fnstenv
sbb
cmp
insb
icebp
aaa
mov
push
sbb
insb
call
dec
sbb
pop
leave
fldenv
cmpsl
cmp
adc
fdivrp
aad
cmp
ds
xchg
cs
clc
push
insb
adc
dec
lcall
pop
sbbb
push
jne
icebp
test
scas
inc
movsb
push
in
mov
jl
lds
cmp
loope
into
stos
push
and
test
test
dec
jbe
cmpsb
loope
add
imul
pop
sub
pusha
mov
lods
pop
sbb
pop
jne
lods
aaa
pop
mov
icebp
dec
test
cld
jae
ret
add
int3
push
sub
in
jne
clc
lahf
pop
push
cmp
inc
push
sbb
stos
ret
loopew
icebp
aaa
data16
jecxz
popa
mov
jp
adc
fs
sbb
ret
fs
jl
pop
aaa
push
cli
jno
xchg
adc
std
aaa
sub
dec
test
cmpxchg
mov
mov
cmpsl
mov
push
jnp
iret
leave
stc
testb
jb
xlat
push
pop
jbe
push
adc
sub
push
mov
jns
out
cmp
ljmp
jg
lret
lds
adc
mov
fildll
mov
cmp
mov
pop
add
or
add
push
inc
fstpl
mov
orl
fdivrs
test
xor
dec
hlt
bound
jge
aam
mov
cwtl
push
or
mov
cltd
push
jb
fadd
dec
nop
lea
int3
rcll
jg
pop
loop
add
mov
mov
subl
loope
and
xchg
or
xchg
out
mulb
lret
cld
scas
outsb
cltd
jmp
jg
loopne
rorl
mov
add
xchg
mov
arpl
daa
cmc
icebp
enter
aas
sbb
sbb
xor
arpl
dec
hlt
xorb
jno
stc
stc
inc
insl
mov
or
ret
mov
mov
pushf
divl
mov
imul
cmp
aad
movsl
pop
jae
daa
imul
and
movsb
jl
xor
pop
dec
adc
inc
out
jb
outsb
push
push
pop
push
dec
mov
lds
sbb
xchg
test
lret
divb
dec
or
or
dec
fistps
mov
or
into
sbb
inc
push
cmpsl
lods
int3
cmp
jp
mov
movsb
add
mov
xchg
sarb
std
lds
xor
clc
cli
cld
fld
mov
jmp
mov
testl
pop
loop
jp
fnstcw
mov
sbb
and
dec
pop
lea
and
mov
mov
rcll
jb
push
fxch
add
enter
jns
lds
push
scas
pop
xchg
bound
cmp
in
ret
ds
enter
mov
lods
xor
pop
leave
cs
es
idiv
testl
out
add
mov
movl
je
arpl
push
xor
adc
fistpll
xor
ss
shll
push
cwtl
movsl
lret
pop
inc
push
adc
adc
lret
mov
daa
pop
jb
fwait
cwtl
jmp
in
addb
mov
dec
xlat
ja
inc
lret
imul
aaa
xor
xchg
mov
lods
lret
scas
mov
mov
lods
xchg
add
mov
gs
lea
add
das
pop
data16
jo
inc
imul
out
adcl
in
lods
xlat
mov
cmp
mov
xor
cmpsl
int
cs
cmp
popf
sti
loope
sti
add
sti
pop
ja
lods
pop
test
popa
jg
xchg
popa
push
jne
dec
mov
fwait
dec
push
mov
js
inc
and
lods
into
xchg
xchg
sbb
ds
test
add
pop
lock
sub
test
cwtl
pop
inc
cmp
jbe
mov
test
push
test
sub
sbb
add
xchg
pop
sbb
mov
rolb
repz
pusha
adc
or
push
dec
push
shl
cmpl
es
cmc
sbb
jmp
mov
add
adc
rcrl
sbb
hlt
jb
fsubs
cmc
cwtl
pop
mov
jl
lret
jecxz
sti
pop
movsl
mov
lret
bound
popf
cmp
mov
pusha
sbb
ret
inc
popa
std
add
ret
push
cwtl
scas
pushl
cmc
dec
es
push
sbb
out
fistps
leave
imul
aas
xor
mov
out
repnz
arpl
jecxz
testl
jno
das
dec
aas
jmp
mov
and
popa
xchg
mov
and
cmp
add
jae
in
jb
aas
fstps
dec
xor
std
push
xor
test
pop
loopne
or
sarb
imul
xor
mov
in
ret
mov
int
cmp
in
or
xchg
sbb
insb
shlb
popa
push
xchg
pop
push
out
or
addb
lock
pop
inc
adc
clc
outsb
and
enter
in
xor
roll
xlat
xchg
xor
lods
jo
pop
sti
push
insl
sub
jb
mov
lahf
stos
ja
aaa
into
shrb
fstps
mov
pop
lock
jge
mov
scas
sbb
loop
clc
cmp
mov
push
sarb
out
test
xchg
lcall
mov
loop
jmp
inc
lods
mov
push
into
sbb
sub
leave
jmp
push
mov
mov
shll
fdivl
lods
or
out
out
mov
mov
inc
push
pop
and
sub
insl
inc
sbb
pop
mov
test
xor
shlb
daa
cmp
ret
jae
cmp
lahf
cmp
adc
aas
bound
jne
int3
and
pop
cmp
mov
pop
sub
ljmp
ret
leave
call
insb
in
iret
scas
or
mov
dec
inc
cli
pop
push
push
in
add
cmp
push
pusha
pop
inc
sub
in
out
outsb
and
imul
test
cltd
jp
pop
ficoml
lods
das
imul
cs
adc
dec
je
push
loope
dec
lret
push
push
or
ffree
aaa
les
or
fstps
mov
cld
gs
lret
mov
movsb
pop
sbb
js
push
mov
jbe
gs
xor
sbb
adc
shlb
pop
bound
stos
and
rcr
cmp
lds
inc
push
arpl
mov
mov
in
inc
lods
cmc
ret
mov
mov
push
mull
inc
sahf
dec
imul
inc
pusha
call
outsl
jb
out
xorl
fcmovnu
push
je
neg
jne
mov
and
sti
and
lock
push
lahf
outsl
dec
or
lret
cwtl
pushf
and
mov
xor
test
jae
mov
xchg
fwait
xchg
sbbl
sti
out
mov
sti
mov
pop
mov
mov
imul
add
aad
aam
mov
cmpl
ss
frstor
pop
mov
add
xor
cmpsl
dec
out
int
insb
dec
rclb
les
xorb
push
in
inc
lret
jecxz
push
or
pop
test
mov
je
and
xchg
stc
sbb
cwtl
sbb
push
adc
xchg
clc
or
or
cmc
inc
xor
jb
push
or
enter
mov
xor
adc
push
sbb
adc
aaa
unpcklps
dec
mov
ret
test
pop
mov
pop
mov
add
cmp
xor
mov
cmc
movsb
dec
aam
test
sti
mov
lea
nop
push
dec
or
mov
mov
popa
std
js
call
stc
lods
in
push
mov
mov
icebp
das
scas
mov
adc
pop
mov
sub
sub
jne
dec
dec
jge
out
out
mov
jge
mov
mov
dec
out
imul
add
adc
testl
aad
mov
push
ficoms
loope
std
dec
cltd
xadd
stc
mov
pop
and
cmp
adc
xchg
outsl
and
sub
icebp
out
add
pop
nop
inc
rcrl
pop
shr
xchg
inc
sbb
dec
dec
lds
je
arpl
aam
adc
in
shl
lea
ss
out
adc
lcall
xor
sub
dec
push
pop
xor
repnz
mov
and
je
jp
call
xchg
stc
rolb
jae
push
add
mov
movsb
add
xchg
icebp
mov
push
xchg
aad
dec
aaa
cmpsl
cs
jge
in
inc
xlat
je
cmpsb
lret
test
js
and
mov
popa
orb
fdivrl
decl
in
sub
std
add
adc
jae
mov
fidivrl
pop
sub
mov
mov
mov
jo
add
sub
jmp
xchg
or
jno
mov
mov
out
push
inc
out
jne
stos
or
add
or
jl
insl
popf
jo
xchg
xchg
negl
in
push
mov
cmp
push
and
dec
das
pop
pop
jo
mov
dec
mov
mov
cmp
in
mov
jmp
cmp
or
inc
sbbb
cs
in
mov
shlb
leave
pop
dec
nop
lahf
cmpsl
cmp
add
lock
imul
push
xchg
test
sarl
and
fsubrl
mov
movl
ljmp
inc
cltd
int
fidivrs
cmc
clc
adc
pusha
lods
dec
jecxz
orb
inc
xor
enter
scas
xor
inc
and
sti
cmp
push
inc
push
dec
mov
call
pusha
cwtl
xchg
jae
stos
addr16
popf
clc
xorb
mov
and
mov
arpl
popa
insb
or
mov
rorb
sbb
push
xchg
jecxz
fildll
out
jb
jg
pop
mov
ja
jecxz
pop
push
cmp
shl
ret
cmp
jecxz
out
cmp
or
cmp
scas
rol
cmpb
mov
and
pop
into
pop
sub
popa
nop
repnz
les
out
and
pop
adc
cli
cmp
gs
pop
xchg
mov
dec
xor
scas
in
xchg
mov
mov
push
sbb
sete
ror
sbb
mov
mov
leave
loopne
mov
sbb
jnp
data16
jno
xlat
std
dec
sub
pop
adc
inc
xor
int3
mov
jecxz
add
inc
pop
inc
lret
and
adc
sbb
sbb
xchg
hlt
cli
aam
cmp
mov
xor
jmp
cmp
sar
filds
fucomi
loopne
pop
push
mov
add
out
sbb
loop
sbb
lods
push
mov
es
lret
lock
lahf
lcall
imul
enter
push
xor
jb
pop
dec
lds
inc
mov
and
out
into
xor
pop
loope
jmp
adc
in
addr16
xchg
out
or
loopne
ja
daa
push
and
aaa
stos
mov
daa
ret
add
fwait
insl
cli
jbe
cli
mov
adc
lret
and
ret
dec
mov
xchg
out
fisttpl
xchg
pop
xchg
fxch
enter
outsl
cltd
cwtl
jns
aam
push
jp
lahf
addb
and
xor
sbb
dec
add
outsl
test
dec
jl
sub
fildll
mov
push
outsb
cmp
mov
xchg
loope
call
jns
loop
outsl
mov
leave
push
mov
fldl
sub
movsb
imul
xchg
nop
xchg
mov
mov
dec
test
fcmovnu
push
or
xor
ror
xor
cli
push
xor
out
loopne
sub
lcall
test
mov
mov
nop
testb
pop
xchg
repz
call
imul
scas
cli
repz
mov
jmp
or
dec
adcl
mov
gs
mov
ja
pop
shrl
add
iretw
cmc
in
sbb
xor
movsl
dec
lcall
mov
or
imul
xchg
addr16
hlt
sub
loope
lods
insl
xor
movsl
xorb
xchg
pushf
je
xchg
ret
inc
scas
mov
dec
insb
mov
hlt
add
les
and
mov
sbb
loope
push
and
pop
or
mov
jl
dec
in
popf
add
mov
das
orb
movsb
cmp
mov
xchg
das
sbb
adc
fsqrt
lret
or
mov
leave
jg
dec
dec
es
add
movsb
pop
sti
mov
add
aaa
insb
jno
test
add
jb
mov
push
out
daa
xor
scas
dec
dec
lods
outsb
in
testl
push
iret
lfs
and
sbb
xchg
fmul
jg
adc
jo
loopne
mov
das
pop
mov
sub
push
dec
xchg
pushf
sbb
in
xor
mov
inc
test
push
daa
clc
push
push
fcmovu
and
cmp
insl
sbb
adc
pop
mov
jnp
lret
push
or
call
hlt
cmp
fucomi
xlat
sahf
or
and
pop
icebp
pop
jge
repz
loope
push
xchg
dec
cli
enter
adc
push
mov
sub
push
lock
mov
inc
or
mov
mov
nop
and
mov
in
andl
xchg
hlt
test
and
push
pop
cmp
xor
inc
fbld
into
mov
js
fiadds
out
mov
or
in
mov
jno
fwait
push
pop
cmp
scas
cmpl
and
rorl
adc
dec
sub
leave
bound
and
fs
idivb
jne
ja
call
xchg
loopne,pt
rol
in
push
jo
lahf
loop
xor
push
sbb
mov
stc
mov
rcr
gs
cwtl
push
mov
and
ja
push
xchg
cmpsl
or
sbb
and
cld
push
push
cwtl
pusha
pop
adc
push
clc
bound
sarb
fnsave
cwtl
sub
addr16
repnz
ret
int
add
mov
jb
bound
jge
call
fimuls
outsb
ljmp
jmp
pusha
jge
hlt
mov
jne
lods
cmp
sbb
stos
or
sub
and
lods
mov
pop
mov
mov
dec
aaa
fldt
adcb
or
orb
lods
arpl
mov
lods
mov
xchg
ja
push
and
dec
xor
sub
scas
jmp
loop
adc
sub
jo
dec
mov
cmp
imul
push
data16
xchg
xor
sbb
inc
negb
jae
mov
jl
or
js
test
xor
dec
mov
js
inc
xchg
push
cld
xor
or
daa
fcmovne
sbb
cld
push
mov
repnz
test
push
mov
fcomp
or
xchg
dec
ss
sbb
in
repnz
push
cmp
je
cs
mov
fcomps
movhps
sub
add
scas
call
jno
mov
adc
out
cli
mov
pop
sti
sub
pop
inc
cltd
dec
shlb
not
ja
and
fcmovnbe
movsl
rcll
cmpsl
xor
js
pusha
pop
test
mov
jle
pop
into
xor
xor
out
inc
test
in
in
push
stc
and
push
or
in
fucomip
jmp
sub
pop
out
test
xor
out
sub
sahf
test
rol
arpl
push
in
fidivs
rclb
push
cmp
pop
out
sbb
pushl
nop
cmp
inc
xchg
pop
enter
cld
mov
in
inc
xchg
loope
ds
repz
cmp
inc
add
in
cwtl
jns
push
and
sub
or
mov
and
mov
fsubrl
dec
aaa
inc
mov
call
xchg
and
pop
inc
loop
inc
orl
mov
pop
stos
mov
rorb
adc
inc
or
mov
int3
ja
dec
and
loop
inc
into
jp
xchg
aam
adc
rcll
cli
mov
sub
jmp
fstpt
sbb
jl
nop
addr16
pushf
sub
sbb
movsl
fsubr
mov
inc
into
dec
dec
dec
out
push
sbb
mov
stos
lcall
bound
outsb
jns
mov
cmp
xor
andl
sbb
mov
mov
fwait
setno
pop
gs
sbb
fidivl
stos
dec
imul
test
add
xchg
jne
cs
sti
jl
test
fnstcw
push
mov
arpl
cmc
test
sbb
sbb
mov
push
dec
and
inc
fists
test
in
pop
and
int3
outsl
mov
sbb
fldcw
jne
add
jmp
pusha
adc
insl
ret
pusha
xor
add
push
mov
out
sbb
inc
clc
ja
and
mov
out
mov
xchg
push
xchg
mov
lahf
rcrb
sbb
mov
dec
jb
in
ljmp
push
mov
fld1
shl
cmpsb
xchg
or
outsl
enter
outsb
ljmp
push
repnz
mov
cltd
rcr
fcmovnu
xor
jo
mov
jnp,pt
aaa
mov
mov
mov
pusha
insb
jne
mov
shlb
cmpsl
adc
notb
das
lret
mov
and
ror
scas
or
inc
test
repnz
mov
cmp
jp
fsts
lds
sar
xor
mov
xchg
test
inc
mov
mov
bound
std
or
pop
rcrb
stc
xor
icebp
pop
adc
fs
or
bswap
add
cmp
shl
xchg
xor
mov
aas
push
and
sar
dec
mov
outsb
xor
or
xchg
out
cltd
dec
xor
inc
outsl
jge
shll
je
pushl
fadds
scas
movsl
test
push
fiaddl
inc
stos
jp
insb
mov
bound
in
movb
jle
sbb
mov
out
shlb
into
pusha
jmp
sub
das
lret
inc
fwait
call
mov
shl
jp
sub
xor
sbb
or
cmpsl
push
shl
inc
pop
dec
int3
ret
xchg
dec
fucomi
imul
dec
aad
mov
xchg
cli
and
xchg
and
ficoms
mov
xchg
out
dec
mov
mov
sbb
shl
inc
or
loopne
daa
sarb
adc
inc
mov
mov
cvtpi2ps
out
insl
mov
loop
sets
push
pop
mov
xchg
pushf
xchg
fldcw
adc
bsf
pop
test
out
pop
or
out
lcall
ficoms
idivl
loop
fisubl
scas
add
loop
mov
out
jecxz
hlt
popf
shl
jo
cli
pusha
mov
sub
sub
push
xchg
or
add
mov
insb
mov
mov
dec
nop
cmc
shlb
xor
das
push
std
xchg
and
faddl
mov
jp
sub
shlb
outsl
frstor
push
fnstenv
adc
mov
js
pop
insb
and
push
rclb
ret
and
cwtl
fnstenv
sbb
popa
adc
mov
add
out
dec
cmpsl
out
push
sbbl
sub
add
mov
movsl
in
xchg
dec
fwait
lods
jmp
mov
xrelease
push
and
push
jb
movsl
mov
out
sub
jo
xor
cmp
rcr
dec
ficoms
xchg
jle
pop
xchg
jnp
push
mov
or
adc
imul
loop
push
mov
iret
sbb
mov
mov
and
popf
jle
pop
mov
sbb
mov
push
aam
sahf
dec
inc
cmp
cwtl
shrb
sahf
jmp
mov
xor
js
mov
mov
ja
xchg
scas
mov
popa
and
xorl
shll
mov
ret
ljmp
ficompl
inc
imul
incb
insl
mov
aaa
movsb
mov
push
sub
mov
into
scas
or
ja
rolb
pop
cmp
lcall
push
ljmp
outsl
test
pushf
jmp
and
outsl
adc
enter
loopne
pop
pop
push
add
mov
add
fldcw
ljmp
ffree
ja
sbb
cs
push
ja
fwait
dec
push
mov
push
cwtl
mov
inc
nop
and
xor
dec
lret
cmp
sbb
lcall
xchg
push
rorl
loopne
push
xor
cwtl
movsb
cli
push
pop
sbb
sbb
jle
add
rcr
inc
test
adc
sub
inc
cmp
dec
dec
mov
stc
stos
pushf
mov
in
pop
jbe
push
subb
push
mov
and
xchg
xchg
orl
dec
jge
sti
jns
lea
cs
es
lret
jnp
stc
ja
xor
mov
inc
mov
pop
mov
shr
sub
xor
inc
pop
xchg
and
call
inc
andl
push
scas
jmp
enter
js
rcrb
lahf
mov
jp
pop
loop
ljmp
sub
gs
add
push
mov
lahf
sub
inc
push
jecxz
mov
repnz
pushl
jge
in
mov
ljmp
hlt
pop
xchg
sub
mov
leave
xchg
pop
popf
leave
call
movsb
out
loop
mov
jo
jno
dec
xchg
pop
into
aas
mov
pop
imul
sub
lahf
add
jge
cwtl
cli
dec
js
and
daa
mov
pop
or
cli
jle
inc
aas
test
gs
push
call
repnz
insl
call
mov
push
cmp
mov
lahf
je
cmp
mov
pop
mov
mov
add
pop
mov
push
arpl
fildll
rcrl
out
psubq
fidivrs
ret
cmpl
mov
cmp
lea
sub
and
nop
fdivrl
ret
ljmp
call
popa
jg
fcoms
mov
stos
mov
lds
mov
ret
aaa
lcall
and
lods
dec
daa
xchg
mov
cmp
icebp
cmp
lret
jb
or
int
jg
push
adc
sbb
fisttpl
mov
fmul
out
outsb
rol
cwtl
hlt
leave
daa
jae
mulb
movsb
xchg
sub
sahf
idivl
ret
and
lods
add
xlat
out
fs
fidivrl
jge
into
clc
into
andl
divb
lret
inc
int
fdivl
sub
mov
addl
aam
enter
adc
push
add
sub
sbb
arpl
cmc
test
aaa
ret
les
inc
hlt
jns
fisubl
push
popf
sub
mov
in
insb
pushf
cmpl
xchg
xor
das
cmpb
out
push
rclb
xchg
int3
scas
add
int
xchg
dec
aaa
fs
aas
mov
rorb
push
fwait
push
dec
jno
lock
andb
xorb
inc
xor
push
xchg
mov
jns
sahf
jns
out
lods
das
call
adc
out
dec
jbe
mov
out
hlt
es
cld
sub
arpl
ror
lods
inc
pop
xchg
xchg
iret
pop
sub
je
pop
pop
xchg
fnsave
xor
ret
mov
call
stos
cmp
inc
dec
jmp
int3
jg
cmpsb
std
loope
movsb
in
imul
or
inc
inc
add
lcall
test
inc
shlb
mov
xchg
push
sbb
or
cmp
cmp
add
arpl
js
hlt
push
pop
movsb
fcompl
lret
xchg
lods
cli
je
stos
push
sti
out
idivl
sbb
cmpsb
orb
and
jb
mov
loop
mov
addr16
mov
pop
pmaddwd
lea
mov
mov
fsub
fs
fs
adc
scas
sbb
out
test
rclb
loop
jbe
jb
rorl
pop
dec
lret
sarl
fld
stos
jns
into
xlat
xor
imul
xor
out
sub
jl
xor
sub
xor
addr16
xor
pop
xchg
stos
add
mov
cmpsb
insb
jl
imul
and
fstpl
inc
push
lea
es
jne
stos
sbb
mov
or
stc
jnp
roll
and
push
div
or
push
sbb
ret
mov
pop
cmc
stc
sbb
scas
insb
pushf
shlb
push
fidivrl
sub
imul
add
ret
adc
popf
dec
or
and
in
or
mov
ret
fisttpl
add
mov
jnp
ret
xchg
ljmp
cmpb
sti
jo
out
mov
data16
cmp
fsubs
les
mov
add
cmc
xor
mov
jl
pop
mov
mov
cmpsb
gs
mov
shlb
call
leave
clc
out
adc
push
push
cwtl
pop
jp
mov
mov
sahf
int3
push
aas
sbb
add
pop
in
mov
jecxz
mov
add
push
xlat
or
xchg
mov
xchg
lcall
jge
lods
andb
movsb
xor
pop
pop
push
and
jmp
mov
daa
add
xchg
dec
add
mov
rcl
inc
lods
inc
andl
ljmp
pop
ret
les
push
push
push
incb
daa
sub
je
loope
push
sub
pop
jecxz
mov
cld
adc
cmp
xchg
xlat
fs
daa
sbb
dec
push
arpl
xor
out
and
sub
sub
cmp
std
sbb
lret
test
lcall
int3
cmp
divb
sub
inc
outsb
mov
mov
aam
sub
xchg
jb
sar
hlt
mov
mov
mov
call
xor
or
mov
or
clc
je
adc
push
and
and
sti
push
cmp
out
aaa
inc
es
sbb
dec
mov
xor
add
xor
addl
xor
fbstp
nop
icebp
xor
mov
sti
dec
cli
pop
sub
js
lock
bound
mov
xlat
iret
jae
pop
sub
and
mov
jl
jae
add
stos
out
fwait
dec
sub
push
divl
dec
sub
xchg
test
push
stos
jge
cmp
bound
xchg
mov
pop
call
scas
mov
sub
testb
pop
xchg
jmp
sahf
cmpsb
shrl
cmc
cltd
add
jne
push
pop
sbb
push
mov
imulb
leave
adc
push
pop
lret
mov
jns
shll
leave
pop
fdivrs
xor
mov
imull
xor
mov
data16
xor
inc
sbb
mov
sbb
insb
js
xorb
xor
mov
fisttpl
out
int
sbb
cmp
jmp
or
mov
cmp
adc
cwtl
lahf
adc
leave
arpl
and
sub
and
sbb
je
nop
and
cld
push
je
arpl
xchg
pop
psrld
xchg
add
mov
hlt
ret
fwait
mov
out
mov
xor
and
aam
xchg
ret
and
test
mov
daa
fiaddl
or
jae
jno
xchg
pop
orb
loop
sbb
mov
data16
repnz
fidivrs
arpl
ficoml
and
filds
pop
xchg
push
and
sar
std
inc
pop
mov
pop
fiaddl
or
mov
bound
sahf
inc
lcall
cmp
add
stos
cmp
out
pushw
adc
outsb
les
push
xor
push
or
jbe
push
fmuls
jge
ds
and
lret
jmp
sbb
cmpsl
sbbb
mov
push
dec
iret
test
xchg
jno
cwtl
out
rcll
mov
inc
out
fcom
rcl
pop
aaa
faddp
enter
push
mov
icebp
in
les
and
loope
int3
enter
push
shr
mov
mov
dec
shrl
cltd
xchg
xor
sbbb
xchg
xchg
test
imul
loopne
in
mov
sbbb
das
mov
mov
shlb
mov
xchg
out
ljmp
call
mov
pusha
add
scas
pop
mov
les
rorl
roll
lea
push
inc
mov
out
jp
rcl
inc
lods
popf
stc
scas
fidivl
cmc
hlt
pusha
adc
sub
push
push
sub
xor
fidivl
ret
xlat
mov
mov
cli
xor
lret
push
pop
inc
push
outsb
lret
xor
popaw
dec
mov
mov
loope
fistl
sub
mov
xchg
movsb
aad
popf
add
cmp
int
cli
rcrb
push
or
and
repnz
pop
cli
inc
adc
and
mov
leave
or
ja
imul
addl
in
xchg
mov
popa
cmp
dec
out
push
pop
add
cmp
inc
xchg
xchg
jb
and
adc
aas
out
xor
mov
mov
leave
subb
icebp
and
pusha
jp
or
mov
xor
jno
ss
jmp
ret
xor
xchg
xchg
stos
jno
jecxz
push
pop
pop
sti
adc
xchg
call
or
bound
lods
mov
gs
mov
stos
sbb
sub
push
sbb
or
sbb
cld
test
jno
int
cli
movsb
arpl
shrb
mov
push
adc
add
imul
cmp
shll
icebp
scas
lret
sub
int
xor
pop
xor
in
sbb
pop
push
adc
mov
push
cmpsl
aad
cwtl
add
adc
sub
cmp
outsb
jl
mov
outsb
adc
int3
pop
loope
call
popf
cmp
xchg
jb
loop
sub
leave
push
shl
xchg
aaa
std
sbb
aad
pushw
les
mov
sub
pop
notb
jno
loope
adcl
lret
cmp
lds
lcall
push
movsl
popa
mov
loope
lahf
add
std
jecxz
or
fsubrl
cmp
hlt
push
sub
push
dec
or
movsl
stos
incl
mov
push
adc
adc
dec
out
mov
xchg
cmp
xor
ds
xchg
dec
dec
xor
decb
cli
ljmp
popl
jno
push
xchg
mov
cmpsb
ret
cmp
inc
out
pop
dec
fs
mov
clc
xchg
in
mov
loop
mov
mov
push
cmp
push
inc
imul
sbb
add
xor
jae
or
xchg
cmp
in
test
pushf
clc
adc
divb
clc
xchg
sbb
fidivrl
jmp
loop
mov
pop
pop
mov
stos
mov
lds
rep
enter
xor
bound
idivl
pop
lcall
sarl
test
xor
cmp
add
je
je
in
sbb
movsb
pop
insb
mov
jecxz
mov
pusha
movsl
add
dec
ljmp
inc
dec
mov
lcall
repnz
mov
mov
outsl
dec
cmc
iret
fnop
aad
pop
or
mov
int3
fistpl
mov
aam
insb
cmpl
stos
repnz
into
loop
mov
loop
or
mov
aam
cmp
movsl
mov
jns
xlat
dec
cmc
negl
add
notl
call
cmpsb
scas
and
push
sbb
pop
xor
in
add
jno
mov
or
insl
js
loope
cmp
xchg
mov
les
movsb
sar
fpatan
mov
in
cmp
mov
lahf
test
xchg
and
fdivl
jb
xchg
push
jl
mov
outsb
and
das
test
cmp
mov
aaa
push
push
pop
mov
imul
neg
dec
xlat
push
mov
sub
adc
mov
repnz
inc
es
pop
adcl
ret
stos
and
cmc
cltd
out
sub
cmpl
cs
mov
add
pop
inc
and
sahf
lcall
outsb
dec
rcr
mov
dec
ret
movb
xchg
push
pop
jns
mov
xchg
cmpsl
loop
xor
gs
and
sbb
sarl
sub
and
and
ret
dec
lret
adc
sarl
sarb
aas
outsl
add
sub
mov
mov
or
and
pop
icebp
push
iret
jg
insb
movsb
loope
rorl
pop
dec
lret
lods
ss
xchg
mov
imul
mov
neg
movsb
stos
scas
pop
jne
sub
shll
adc
lea
sub
jge
in
dec
xor
lahf
bound
cs
mov
movsb
gs
into
in
jmp
adcl
xchg
sbb
jb
out
pusha
mov
add
bound
imul
bound
jne
push
data16
subl
sbb
call
stos
inc
lock
test
loop
pop
mov
stos
jo
cmpl
mov
shr
inc
aaa
mov
push
stos
jge
outsl
sub
mov
mov
adc
pusha
popf
add
push
mov
mov
outsl
sbb
push
mov
push
push
mov
std
jo
aaa
jle
daa
loopne
push
cmpsl
and
inc
test
adc
lret
je
mov
sub
mov
fisubrs
xchg
xor
push
xlat
adc
bound
add
inc
ret
add
dec
daa
add
insl
inc
movsb
mov
cmp
cltd
rcll
mov
pminub
lret
nop
movsl
xchg
push
sub
xchg
pop
fdivrl
jbe
xchg
pop
and
shlb
adc
js
test
cmp
or
cmp
in
cli
ds
pop
test
add
mov
push
inc
movsb
daa
cmp
add
xor
or
add
lcall
out
or
inc
sub
insb
gs
in
cmp
rorb
inc
jecxz
xor
in
sub
shlb
sbb
mov
imul
icebp
pop
scas
cs
out
fwait
nop
push
daa
sbb
sbb
jb
jg
out
and
pop
repz
movsl
inc
sbb
sub
je
inc
ljmp
ret
push
cwtl
mov
push
ss
sub
or
mov
mov
sub
sahf
cmp
jecxz
jp
enter
push
aas
jns
jo
push
dec
and
test
imul
cmp
test
imull
inc
inc
mov
mov
xchg
inc
mov
movsb
cmpsl
mov
dec
mov
lret
test
push
in
test
add
jp
stos
or
xchg
mov
add
je
mov
adc
out
test
or
jnp
fiadds
mov
test
dec
orl
jg
cmp
in
testl
ds
add
in
pop
cmpsl
rorb
mov
cmpsl
das
add
scas
scas
mov
je
ljmp
das
or
push
aaa
rorb
outsl
pop
jmp
sub
jno
cmp
daa
pop
lods
jl
int
mov
psrlw
es
mov
out
dec
lods
push
xchg
out
pushf
add
imul
inc
add
js
clc
mov
enter
lcall
dec
aaa
mov
push
sbbl
push
mov
arpl
xchg
adc
icebp
dec
mov
jnp
das
leave
repz
mov
sbb
sbb
pop
pop
lds
ja
push
jmp
mov
sbb
cmp
or
cmp
movb
mov
pop
addb
cmp
mov
iret
inc
addb
inc
imul
out
imul
mov
sbb
xchg
test
icebp
mov
mov
cmc
adc
jecxz
cwtd
cmp
or
fdivrs
xor
pop
adc
xchg
xor
sub
mov
cmp
imul
movsl
add
or
inc
insl
stc
mov
inc
popw
andb
or
push
outsb
inc
mov
daa
push
insb
mov
inc
out
dec
cli
sub
and
js
roll
jns
out
inc
ljmp
dec
mov
adc
mov
push
jae
pop
jl
je
fidivrs
loopne
shlb
cmp
sub
and
cmp
testb
gs
push
inc
test
sahf
or
sahf
call
ljmp
cltd
add
sarb
mov
fmuls
out
and
jno
cmp
dec
mov
mov
in
sbb
repnz
jns
sbbb
push
cmp
movsl
dec
lahf
or
inc
jmp
into
flds
pop
loopne
xacquire
clc
push
out
pop
xchg
movsl
xchg
inc
mov
out
jno
pop
pusha
xor
lahf
inc
pop
dec
fwait
and
jo
inc
xchg
or
ret
xchg
push
nop
testb
lods
push
ljmp
dec
out
jl
fildll
das
cwtl
clc
add
cmc
shlb
js
popa
leave
lahf
mov
sti
dec
dec
push
inc
and
push
mov
push
mov
ret
xchg
mov
jns
mov
cmc
adc
fucomi
dec
jl
or
outsl
xchg
push
mov
clc
sbb
pop
rol
scas
add
out
dec
xchg
mov
mov
or
fimuls
lret
push
andl
ret
inc
pop
imul
int
cmp
mov
dec
or
fiaddl
aas
xadd
mov
xchg
jmp
movsb
xchg
jle
mov
out
mov
xchg
aaa
and
mov
dec
ss
leave
xor
popf
xor
dec
rcrb
pop
ja
sbb
fidivl
popf
daa
xorl
push
ret
movsb
xchg
in
sub
mov
sbb
sahf
aad
sbb
mov
inc
filds
pop
sub
cli
mov
subb
stos
adc
jmp
cmp
fsts
data16
adc
xchg
adc
xchg
lea
add
mov
ljmp
mov
xor
daa
stos
data16
xor
xchg
add
jp
lods
mov
loopne
mov
pop
push
cltd
inc
icebp
pop
sbb
insb
sub
out
loop
sti
mov
mov
mov
inc
pushl
sub
fsubr
cmp
xchg
pushw
jnp
sub
xchg
cmpsl
jge
inc
rclb
add
bound
mov
rcrl
lods
and
loop
or
js
addl
or
adc
rcrb
lods
add
sub
dec
popf
sbb
cmpsb
inc
xchg
push
mov
push
pusha
xchg
mov
push
scas
jecxz
test
mov
test
push
push
outsb
xor
insb
or
fistl
jo
pop
clc
cli
xchg
out
fldl
pushf
enter
repnz
movsb
fisubrs
in
jno
test
outsl
xchg
pop
mov
inc
in
sbb
and
movsb
jnp
cmp
and
imul
idivl
fwait
jp
add
movsb
push
jecxz
cmp
pop
mov
push
mov
outsl
lcall
xchg
nop
and
mov
lret
pop
jmp
fwait
nop
shlb
vpaddb
and
push
or
mov
dec
xchg
mov
mov
fwait
push
je
testb
mov
inc
inc
andl
clc
lea
xchg
imul
mov
mov
add
cmp
mov
ret
dec
dec
nop
les
ret
scas
daa
in
mov
call
dec
pop
fldt
in
mov
decb
inc
loope
jne
push
lahf
arpl
dec
mov
add
stos
push
ss
push
jmp
jno
mov
jb
pop
xchg
adc
popa
lret
push
sub
out
sbb
es
push
daa
sub
jbe
clc
mov
push
andl
mov
fbld
and
loope
imul
xor
cmpsl
clc
sbb
fstl
mov
loope
or
popf
es
popa
mov
imul
push
mov
iret
lods
sti
dec
cmp
add
xor
imul
mov
inc
pop
pop
xchg
pop
fwait
ss
xchg
sbb
loop
add
fdivs
pushf
mov
out
loopne
insl
in
jmp
popf
in
pop
and
iret
ja
push
pop
mov
insl
mov
inc
bound
or
dec
cmp
push
sub
dec
shr
outsl
in
lahf
mov
repz
jg
sahf
push
cwtl
rolb
fisubrl
jle
aaa
jmp
mov
add
mov
mov
and
mov
testb
ljmp
fcmovnb
adc
pop
or
dec
inc
fwait
sub
pop
inc
mov
rorl
add
sub
out
mov
dec
jmp
mov
mov
imul
aas
call
lcall
dec
and
and
mov
das
in
pop
sub
outsl
sbb
or
loop
sub
repnz
and
int
mov
sarl
sub
scas
int3
into
mov
xor
pop
ret
loope
mov
dec
pop
inc
outsl
add
fistpll
lret
cmc
sbb
adc
mov
inc
cli
mov
jnp
in
test
or
repz
cmp
push
sbb
sbb
in
and
aam
lcall
into
inc
out
xor
jg
arpl
dec
aad
test
adc
and
xor
sub
lahf
jns
push
inc
xlat
sbb
into
cmp
sahf
jns
mov
aas
lret
jl
or
push
dec
insb
sahf
push
cmp
pop
cs
fwait
add
cmc
and
and
aad
add
xchg
aaa
cmp
dec
jns
mov
cmp
mov
push
cld
mov
nop
pop
loope
js
and
sbb
cmc
loope
push
push
dec
adc
inc
xchg
or
out
out
nop
add
push
ds
cld
lahf
ds
shll
pop
push
adc
sti
push
pusha
dec
pop
and
ljmp
cmc
int3
add
testl
and
mov
fwait
sbb
pop
xor
fisubs
pop
mov
dec
js
faddl
and
sub
psubusb
xchg
xor
or
mov
ficoml
data16
mov
pop
ret
dec
jg
xchg
cld
push
push
push
push
add
mov
into
pop
inc
sbb
pop
lcall
cmpsb
mov
aad
jmp
jo
loope
or
sub
or
inc
mov
mov
jg
fistl
mov
lods
sub
pop
fadds
and
fs
cld
lahf
test
test
push
pop
repz
rclb
jge
dec
fstpl
mov
les
gs
push
and
fildll
dec
mov
mov
sbb
pop
add
sub
and
fs
loopne
shlb
repz
loopne
sbb
aas
stos
int3
xor
call
pop
jnp
rcrb
mov
test
out
pop
bound
loop
dec
pop
push
dec
sub
mov
mov
mov
sbb
dec
stos
rcll
pop
mov
add
mov
xchg
stos
sbb
dec
fmull
xchg
aam
pop
lock
sub
call
mov
lock
push
gs
inc
jmp
dec
push
mov
data16
mov
jle
mov
cmp
jle
std
push
push
push
mov
dec
dec
sbb
or
ret
pop
mov
mov
into
fstps
mov
inc
test
push
mov
out
fisubs
test
and
inc
andb
lcall
lahf
sub
into
loope
inc
or
int
mov
jns
int
inc
ljmp
adc
arpl
cmp
dec
sbbl
sub
pop
mov
push
add
iret
xchg
mov
push
popa
or
cmp
lds
fcmovne
jge
sub
out
or
add
lret
jp
fists
int3
clc
scas
or
arpl
ja
and
lret
push
in
pop
jmp
dec
and
cmpl
dec
pop
xchg
das
lods
inc
stos
pop
xchg
mov
dec
sbb
jecxz
adc
in
mov
scas
jbe
xchg
addr16
aaa
daa
cmpb
leave
lock
into
cwtl
mov
adc
xor
insb
repnz
jb
sub
push
jge
lds
push
mov
ss
lahf
das
cs
push
cmp
repnz
jae
push
cli
mov
mov
mov
sarl
in
lock
mov
inc
inc
je
jbe
sbb
add
ret
in
jle
lret
fsubrl
gs
adc
mov
jmp
mov
push
hlt
pop
enter
movsl
mov
push
xor
inc
bound
or
push
sub
sbb
mov
and
adc
adc
or
loop
test
mov
push
divb
mov
cmpsl
jmp
cwtl
lock
popa
clc
lea
in
sbb
add
xor
sti
int
mov
es
mov
push
xlat
push
sub
cmp
ds
sahf
fs
les
out
jae
sti
dec
ret
sub
xor
push
sub
fadd
sbb
pop
mov
pusha
aas
pop
stc
mov
adc
dec
mov
outsl
mov
ja
mov
stc
loopne
pop
mov
mov
cltd
push
push
dec
sub
sbb
or
pushf
insl
cmpb
fstpt
out
xchg
mov
out
push
call
sbb
xchg
dec
jecxz
jno
lcall
dec
outsb
subl
cmpsb
outsl
mov
lock
subl
xchg
inc
adc
sarl
and
testb
out
sbb
or
test
repz
sub
lods
xlat
push
push
sub
lods
fs
subb
mov
lea
mov
jecxz
test
sbb
mov
enter
sub
pop
stos
inc
and
lock
loope
sub
ret
inc
lods
mov
ljmp
sub
fnstcw
je
or
cmp
mov
movsb
cmpsb
adc
jecxz
mov
or
scas
repnz
jns
jge
cmpsb
push
mov
sbb
or
and
inc
push
xor
push
jp
mov
cmpsl
ret
shll
cmp
dec
inc
xorl
dec
call
xchg
push
dec
and
arpl
and
hlt
sub
inc
xor
sbb
arpl
shll
add
and
les
nop
dec
push
fldl
idiv
lea
sub
hlt
sbb
test
in
out
les
xchg
lret
mov
inc
fs
inc
jl
mov
ss
push
mov
pop
testl
or
xchg
dec
rolb
adc
or
daa
ret
xor
pop
mov
and
jge
fsubl
mov
cmpsl
shrl
arpl
test
sahf
push
repnz
push
int3
dec
faddl
xor
pushf
arpl
nop
dec
mov
test
repz
imul
out
and
push
xchg
jl
cmc
fstps
and
mov
in
push
jle
mov
jge
rolb
mov
or
mov
jo
pop
pushf
movsb
shr
popa
jp
push
in
test
jo
dec
sub
leave
inc
lods
mov
sub
insl
xchg
std
and
popa
rol
mov
xchg
sbb
pop
pop
sbb
cmp
mov
lret
jb
sbb
mov
jecxz
xor
xchg
or
sarl
les
lahf
sahf
sub
push
js
push
sahf
shrb
jle
mov
sub
sarb
decb
inc
fistps
cmp
xchg
ljmp
dec
mov
out
mov
std
loope
repz
cmpsl
or
mov
xchg
stos
imul
mov
leave
cmpsb
add
loopne
mov
pop
bound
dec
jmp
xchg
ljmp
pushf
xchg
shlb
das
and
push
inc
adc
push
pop
repz
lret
daa
gs
mov
adc
sbb
test
stos
push
jp
aad
or
rol
push
push
arpl
jecxz
fsts
sub
shll
mov
cltd
lds
movsl
dec
hlt
ror
in
icebp
mov
push
rcl
mov
adc
mov
dec
jae
jmp
sub
push
into
jns
jnp
pop
sbb
mov
in
call
pop
loopne
neg
icebp
xorb
cmp
jge
mov
cltd
add
data16
cwtl
sbb
je
fisttps
lds
xor
dec
push
xchg
cld
inc
mov
shll
loope
inc
dec
jb
push
sub
pop
mov
int3
cmp
lahf
out
mov
xor
lret
test
mov
das
adc
leave
and
outsl
ret
cltd
cwtl
fmuls
jno
or
and
jns
aaa
add
loop
mov
push
push
repz
dec
dec
sbb
test
icebp
xor
mov
sub
cmc
mov
mov
adc
sub
jge
test
inc
jp
mov
aaa
fistpl
inc
scas
jp
xchg
xchg
out
adc
mov
jmp
stc
lods
pusha
rcl
xchg
mov
dec
outsb
cmp
sub
xor
push
cmpsl
pop
sbb
jmp
mov
sub
fs
std
and
adc
inc
negl
lret
sbb
mov
push
mov
arpl
repz
mov
mov
mov
movsl
cmp
lahf
fsubrl
push
adc
fwait
or
mov
pop
sahf
inc
popa
or
loopne
imul
cmc
xor
add
cmp
adc
mov
or
inc
or
inc
cmpsb
sbb
pop
xchg
out
lcall
or
push
inc
insb
xchg
pushf
jp
and
or
ret
stos
sar
or
cmp
or
ret
mov
popf
les
sbb
sub
rolb
adc
fstpl
mov
push
ret
add
pop
and
addr16
push
leave
push
sub
sub
mov
push
xchg
ljmp
addl
jmp
xchg
mov
fmull
sete
daa
add
push
inc
mov
repz
ret
pop
out
jmp
sub
xchg
pop
pop
cld
and
aaa
mov
push
icebp
stc
sub
jl
sub
shlb
lods
or
ljmp
pop
sbb
mov
xchg
inc
adc
cmp
jecxz
lea
popf
and
mov
cwtl
dec
cmp
mov
fdivr
loop
aad
scas
push
cld
dec
mov
iret
xchg
push
aad
lahf
push
iret
lea
push
push
sbb
jne
test
xchg
sbb
jmp
push
mov
pop
jge
push
dec
es
sahf
and
in
cmpsb
fld1
dec
int
sbb
mov
mov
sbb
mov
std
mov
shrl
fisttps
fcomps
push
ljmp
mov
loope
sub
in
incb
ret
add
popa
push
adc
sbb
xchg
aaa
inc
ja
out
mov
add
xlat
pusha
or
out
mov
gs
xchg
and
cmp
cmp
cmpb
clc
sbb
lock
lea
mov
rcr
sbb
mov
fldcw
stos
aad
jl
or
cmp
out
enter
inc
jno
adc
push
ret
cmpsl
loopne
mov
xchg
out
enter
fbstp
add
mov
leave
cmp
jle
cld
jne
xchg
jae
mov
mov
pushf
js
dec
mov
fnstcw
adc
adc
add
inc
das
imul
or
add
inc
cmp
std
std
movsl
add
xor
inc
movl
ficompl
into
cmp
inc
jecxz
push
push
push
sub
xchg
xchg
mov
lcall
ds
mov
mov
mov
and
jmp
jl
xchg
inc
fsubl
lea
and
cmp
icebp
inc
int
inc
clc
mov
mov
jne
jle
mov
addr16
sub
sbb
push
ds
xchg
jo
cmpsl
jmp
pop
lods
mov
mov
clc
das
mov
cmc
mov
cltd
sbb
xchg
cmp
fsubrl
les
fsubrl
mov
cmc
je
cli
cmp
es
pop
daa
inc
adc
stc
mov
jl
fisttpll
jp
pop
dec
in
add
clc
out
jb
dec
and
std
xor
push
fstpt
mov
arpl
or
sub
mov
inc
inc
outsl
mov
cmp
xorb
xor
pop
lret
rcll
addl
xchg
cmpb
lahf
adc
add
pop
mul
sub
retw
mov
mov
pop
mov
ret
out
pop
insb
push
fsubl
out
sub
mov
inc
xor
call
mov
test
cmp
std
inc
addr16
test
push
xlat
xor
movl
aam
fisubs
xchg
fistpl
xchg
sub
rol
xor
stc
int3
dec
test
outsb
jmp
shrl
inc
sub
fwait
lods
cmpsb
pop
lods
ds
int3
loopne,pn
ror
jecxz
lahf
fiaddl
rcl
loop
and
cmp
es
sbb
xor
xor
js
rcrb
sub
sub
out
repz
int3
popf
cmp
xchg
jge
pop
jg
xor
testb
clc
mov
jmp
pop
aad
inc
gs
pop
jp
cwtl
or
mov
lds
sti
cmpsb
ds
fsincos
enter
xor
and
lret
adc
or
roll
mov
jmp
stos
xor
cmc
fists
push
cmp
in
ret
or
xor
pop
mov
in
cmp
lock
testl
add
pop
fadds
or
push
out
out
cmp
leave
mov
fdivs
mov
lcall
sbb
loopne
dec
pushf
xor
jl
cltd
dec
push
xlat
lcall
imul
and
sahf
fstpl
loope
fidivrs
jle
push
fisttps
fwait
or
mov
fldl
or
mov
cmpb
cmp
fsubl
sub
mov
add
enter
adc
lret
sahf
mov
dec
mov
cmpsb
sbb
push
repz
movsl
push
in
cmp
jns
sti
push
std
mov
nop
inc
cmc
cmp
mov
cmp
addr16
cmp
hlt
adc
inc
aas
hlt
aaa
notb
mov
push
sbb
js
leave
cmp
mov
pop
sbb
lods
mov
dec
mov
movsb
mov
pushf
fistpl
add
mov
or
outsb
negl
or
out
cmp
push
jbe
dec
xor
nop
xor
ss
aas
xor
pop
dec
clc
ret
push
adc
jnp
fsubr
ret
xchg
ja
sub
mov
xor
pop
jmp
out
xor
sub
push
nop
cmp
aad
fcoml
jg
or
mov
push
jb
das
mov
fs
outsb
mov
and
jecxz
xor
mov
repnz
xchg
add
xor
lahf
push
and
fcomps
iret
adc
and
add
mov
mov
dec
inc
in
popf
std
jne
mov
pusha
movsb
pop
push
rorl
xor
aam
and
fnstenv
push
out
xchg
add
mov
insb
jae
scas
ljmp
int3
dec
lret
fidivs
jo
adc
out
sub
sbb
je
mov
out
filds
fimull
lock
add
lcall
sbb
lock
xchg
sub
dec
push
jnp
mov
out
aam
sbb
and
push
test
loopne
nop
outsl
xchg
xlat
ljmp
cmpl
int3
out
mov
sub
push
push
jne
ficompl
fnstsw
inc
imul
cld
rolb
push
inc
mov
or
cmp
adc
bnd
loopne
xchg
leave
xchg
dec
pop
cmp
push
filds
div
cltd
fucomi
in
adc
fimuls
fwait
mov
jge
out
cmp
sub
popa
data16
js
loope
cmp
dec
push
lcall
fisubrs
push
xor
or
push
jne,pt
add
pop
ja
lods
and
jo
and
add
adc
jecxz
pop
fidivrl
loop
push
mov
pop
repz
fs
pop
jp
sub
mov
cmp
and
lea
lahf
jne
test
loopne
inc
or
mov
jg
bound
jbe
jae
and
mov
or
ds
adc
imul
add
mov
and
fstpt
mov
xchg
ret
andb
addr16
das
mov
sub
in
adc
or
aaa
dec
mov
lcall
sahf
pop
lcall
inc
mov
sbb
adc
scas
cmp
test
adc
inc
sub
js
jge
adc
xor
jmp
pop
cli
mov
mov
sub
in
ljmp
jnp
cltd
mov
and
aas
sub
pushf
decb
lock
lods
fwait
sub
out
out
lock
xchg
sub
pop
mov
test
dec
insb
pop
add
add
shll
and
sarb
ret
fisttpll
adc
insb
sub
add
push
jg
lods
xchg
add
inc
sub
pop
mov
push
vshufps
and
dec
dec
das
mov
dec
or
in
fsubl
jb
rol
aad
adc
adc
mov
mov
pop
fwait
inc
and
add
leave
fsts
in
popf
mov
pmaxsw
or
lds
movsl
push
mov
add
loop
cltd
jnp
or
lahf
ret
cmpl
mov
xor
push
xchg
jmp
xchg
xor
jnp
inc
xchg
push
pop
nop
pushf
int3
pop
pushf
shll
dec
xor
stos
dec
mov
pop
pop
push
rorl
mov
jo
add
pop
outsl
outsb
sub
testl
loop
cmp
inc
xchg
stos
dec
xchg
jl
cmp
push
mov
rorl
or
movsb
jnp
dec
mov
push
fidivrs
cmpl
xor
ret
jmp
add
dec
mov
sbb
inc
cmp
adc
ljmp
in
pusha
cmp
sub
push
sti
movsl
aaa
jbe
xchg
inc
fldl
push
mov
and
stos
dec
adc
out
lock
lods
test
pop
stos
mov
mov
lods
jns
mov
sarl
mov
into
sub
call
ja
mov
insl
rolb
sbb
mov
aam
aas
adc
fdivs
dec
dec
inc
pop
sbb
jbe
push
lcall
test
add
dec
inc
adc
dec
data16
mov
xchg
xchg
mov
push
sti
dec
repnz
mov
scas
sbb
push
pop
mov
ja
mov
mov
push
adc
cmp
mov
xor
mov
xor
rcrl
leave
nop
test
mov
push
jp
jge
jb
xor
enter
sbb
add
sub
cld
mov
jnp
sbb
inc
xchg
out
cs
mov
das
xchg
repz
cwtl
addr16
sbb
in
adc
adc
test
rorb
dec
hlt
imul
add
int3
test
fisttps
loopne
and
cltd
pop
dec
xchg
adc
lret
and
mov
mov
fsubp
and
sarb
sbbl
cs
pushf
mov
inc
pop
es
ror
mov
pop
dec
int
insb
push
nop
and
inc
jle
mov
mov
insl
jle
jmp
fcomps
xor
stc
sbb
pop
inc
outsb
cmp
pop
mov
ja
ficoms
test
push
push
lea
dec
outsb
mov
pop
addr16
cld
imul
lahf
cmp
pop
xchg
daa
cli
cmp
cmc
cli
rcll
xchg
rcrb
out
inc
imul
xorb
js
test
cmp
pop
sbbb
xchg
lret
in
cmpb
adcl
jae
mov
out
cmp
ja
les
mov
pop
sub
js
pop
cmpsl
lods
pop
jle
out
adc
push
insb
jbe
mov
inc
inc
sahf
cmc
dec
xchg
jb,pt
ljmp
out
dec
dec
inc
arpl
inc
and
roll
xchg
scas
stc
in
jmp
rol
mov
or
add
sub
xorl
js
pop
cmp
mov
mov
xor
mov
push
hlt
or
xchg
jle
push
cwtl
fisubrs
lret
sbb
lret
dec
mov
aaa
lds
xor
cmpsb
xor
jge
pushf
pop
push
leave
adc
pop
in
insb
push
xor
mov
mov
mov
gs
jp
popf
outsl
mov
sbb
sub
jp
cmpsl
push
loope
cmp
jo
cmp
daa
mov
jae
mov
repnz
insl
xlat
mov
jo
ljmp
mov
pop
mov
ljmp
and
pop
cmp
push
push
pop
adc
inc
jnp
cwtl
in
jbe
int3
adc
mov
push
dec
dec
pop
pop
ljmp
rorb
mov
lds
flds
call
cwtl
je
nop
mov
lcall
movsl
xchg
sub
movl
xorb
aas
jg
inc
mov
jnp
pop
xchg
ss
mov
out
clc
dec
stos
mov
sub
ror
shl
loopne
outsb
daa
adcl
mov
and
cmp
fcoml
push
icebp
mov
je
loopne
xchg
mov
dec
mov
fmull
fildl
sbb
loopne
mov
jge
push
outsl
lock
sahf
dec
cmc
inc
outsb
add
lds
cmp
sub
call
hlt
pop
sahf
daa
jecxz
xor
ja
sbb
dec
test
mov
push
or
dec
fcoml
pop
out
and
sub
xor
stc
cmpsl
dec
addr16
sub
in
and
dec
adc
pop
jns
test
add
test
push
mov
clc
adc
pop
inc
mov
popf
jle
push
jnp
fmull
js
hlt
pop
mov
in
and
sub
les
lret
stos
mov
pop
push
push
mov
pop
jl
jne
loopne
xchg
ljmp
mov
adc
mov
or
testl
dec
dec
jae
mov
pop
stos
lcall
lret
or
out
pop
xor
aaa
mov
pop
cmp
xchg
inc
repz
fcoml
js
cmp
shll
mov
cmp
loope
iret
cli
imul
call
pop
fisubrs
fdivr
and
ds
push
push
sub
inc
mov
ret
loope
ficomps
mov
cmp
imul
int
dec
pop
pop
cmp
fsts
out
dec
jg
ds
xchg
inc
sbb
mov
lret
cmc
mov
hlt
push
xchg
xchg
test
scas
push
inc
inc
dec
cmp
cmc
mov
jecxz
shl
push
testl
jle
push
test
mov
call
xchg
setne
es
leave
fwait
mulb
les
and
cmp
lea
roll
fwait
mov
push
jg
popf
cmp
mov
cmc
ljmp
insl
movsl
arpl
ja
xor
aad
sbb
cmp
aad
ret
xchg
add
dec
jge
imul
adc
jmp
std
sub
xchg
pop
jle
sub
jp
xor
andl
and
enter
add
inc
loope
sbb
mov
mov
mov
mov
cmovp
mov
xor
add
dec
int3
sbb
shrl
fldenv
ljmp
mov
pusha
adc
pop
lret
sbbl
pop
andl
leave
test
ret
fadd
test
mov
leave
out
ret
push
icebp
or
test
cmp
mov
cmpsb
sub
cmp
lods
xchg
ss
cmpsl
or
jbe
add
add
jne
lock
jbe
push
push
or
mov
sbb
loopne
jns
jg
dec
sar
je
aad
mov
push
je
lds
sbb
ljmp
add
sub
dec
sub
mov
jns
dec
xchg
shll
outsl
mov
outsb
icebp
rcll
lods
sub
fbld
iret
and
jl
pushf
pop
outsl
test
mov
pop
loope
insb
cld
push
pop
inc
sub
push
js
iret
fstl
jae
loope
insb
inc
xorb
dec
cli
pop
add
repz
cmpsb
incb
cmp
pushf
mov
pusha
cmp
mov
adc
xor
push
scas
imul
repz
or
les
neg
cmpb
test
xchg
mov
mov
sbb
push
xchg
in
push
loope
push
arpl
test
xchg
jns
scas
mov
out
mul
mov
enter
lods
rolb
pop
iret
test
hlt
jg
mov
mov
xchg
push
clc
xor
jno
push
xor
iret
int
xor
mov
fidivs
outsl
data16
sub
fdivs
out
add
fucomi
sbb
and
loopne
call
cmp
pop
aam
adc
xchg
xchg
repz
jno
ss
movsb
adc
lods
inc
ficomps
and
sub
dec
rclb
pop
lahf
call
pop
mov
mov
cmp
inc
inc
lock
nop
xchg
mov
je
fdivrl
popa
bound
imul
sbb
lds
loopne
stos
cs
dec
xchg
add
or
movsl
stc
aam
mov
loopne
filds
adc
fstps
or
das
in
mov
lds
push
adc
lahf
add
sbb
push
pop
jae
insl
mov
fwait
mov
out
dec
mov
pop
fsts
pop
xchg
je
cmp
fwait
jmp
push
imul
scas
add
std
xor
sbb
rolb
stos
call
subb
scas
sub
and
ret
insb
jns
xchg
ss
add
enter
gs
sbb
movsl
adc
js
jne
mov
mov
cs
cmp
rorb
jo
push
inc
imul
sbb
jmp
or
aas
stos
insl
jno
mov
dec
out
out
sbb
int3
jb
add
fsubs
xchg
int3
dec
leave
ss
mov
jmp
adc
jg
jae
sbb
cld
and
mov
out
jge
call
inc
ds
cld
das
in
push
mov
adc
dec
aam
sbb
mov
shl
rorb
movsl
mov
es
and
sub
push
outsb
pushf
addl
mov
sbb
mov
out
and
sbb
test
lods
jg
adc
call
mov
cld
std
lock
mov
jne,pn
or
xchg
daa
rclb
and
fwait
test
shlb
mov
fdiv
cmp
or
dec
xor
cmpsb
imul
or
dec
daa
push
xor
xchg
cmp
xchg
mov
cmpsb
mov
add
mov
sub
push
shll
fwait
ret
stc
xor
pop
push
mov
shrl
iret
adc
and
xchg
aam
repnz
out
insb
inc
movsl
add
shr
mov
or
push
test
cli
dec
mov
mov
pop
jmp
mov
repz
fs
jo
lret
jbe
sbb
or
lods
jp
jae
cmp
cmpl
lret
mov
mov
cmpsb
mov
pop
leave
jne
loope
mov
adc
and
in
add
decb
sar
lds
rcl
je
jg
inc
aad
mov
insb
jg
loop
add
add
popa
movsl
xchg
mov
sub
xlat
xchg
stos
inc
lret
popf
jp
ret
addr16
xchg
pop
push
dec
ljmp
iret
dec
xchg
jne
sbb
aaa
dec
lahf
fidivl
and
pusha
lret
out
xchg
sbb
sub
insb
xchg
scas
aas
mov
jecxz
xchg
mov
mov
sub
and
jo
and
shrb
xlat
xor
mov
in
pop
daa
xchg
mov
call
xor
pushf
movsb
int3
cmpsb
filds
pop
jbe
pushf
mov
in
xchg
lods
cmp
fisttpll
adcl
cmc
xchg
dec
jns
sub
mov
scas
lods
dec
push
adc
loop
popa
push
and
stos
mov
inc
jno
aas
sahf
push
add
pop
das
jo
push
out
sbbb
or
jl
cmp
enter
jp
test
rcrb
aad
leave
inc
into
inc
repnz
in
mov
movsb
ficompl
fisubl
cmc
cmp
sbbl
or
imul
lock
add
fwait
or
dec
mov
jecxz
es
lcall
mov
or
pop
cmpsb
fisubrs
jmp
mov
cmp
pusha
notb
rcll
jp
inc
test
adc
and
ss
aam
mov
repz
sti
or
rcrl
aad
movsl
mov
and
adc
data16
dec
hlt
insl
stos
mov
mov
stos
not
daa
jbe
pushf
push
negl
mov
inc
mov
cmpsb
jge
ja
mov
clc
mov
push
orb
lds
cltd
and
mov
outsb
adc
xor
aad
into
ljmp
jne
inc
pop
sub
imul
cmp
xchg
pop
xchg
sbb
ficomps
and
and
repz
cmpsl
loop
push
push
faddp
mov
fsubrl
adc
inc
jno
scas
sub
rcrb
hlt
dec
mov
adc
mov
dec
push
pop
jae
test
mov
xor
es
and
sbb
mov
popf
add
mov
or
mov
xor
jo
sbb
mov
or
aas
pop
ret
movsl
mov
jl
push
xor
pop
sub
aas
negb
ljmp
ja
sbb
cmpsl
sub
sub
push
jo
test
inc
inc
or
fcomps
nop
mov
in
xchg
push
pop
lcall
push
leave
mov
pusha
pusha
pop
outsb
cmpsb
gs
filds
mov
mov
ret
xlat
dec
dec
push
test
or
push
cmpl
sbb
mov
lock
adc
dec
inc
stos
outsl
std
and
scas
dec
shl
scas
sarl
xor
inc
pop
jecxz
adc
orl
sbb
mov
ret
dec
mov
push
push
stos
sbb
add
or
aam
dec
add
add
cmp
mov
sub
imul
xchg
lods
icebp
jae
push
mov
fimull
xchg
push
or
mov
addb
ret
pop
mov
xlat
mov
out
push
orl
xchg
lods
sub
sahf
xor
test
xchg
ror
jmp
cli
or
loop
push
xor
mov
int
jnp
ficoml
sti
stos
mov
push
dec
xchg
jmp
jecxz
xlat
sbb
jns
out
xor
in
jp
hlt
sub
repz
cmp
sub
and
fs
and
mov
dec
jno
sahf
cwtl
inc
pop
pop
ret
repz
jnp
lock
insb
pushf
add
xor
ror
fnstcw
xchg
add
out
cmp
scas
ret
fcmove
inc
sbb
xchg
push
ss
sbb
cltd
std
jge
mov
jbe
in
mov
loop
xlat
mov
fcomip
xchg
and
rol
test
mov
and
clc
pop
push
aas
hlt
lret
js
cmp
lods
mov
aaa
dec
mov
lret
pop
lret
push
or
fisttpll
jno
fstpt
inc
daa
add
mov
push
dec
dec
clc
lods
sub
les
stos
rolb
cmpsb
mov
push
into
aam
lods
dec
or
inc
ja
fistpl
in
std
lods
out
mov
jo
cmp
lods
aas
out
cmp
out
fmuls
dec
push
outsl
mov
icebp
movsb
insl
loopne
lods
cli
out
add
xchg
in
shl
add
xchg
lret
inc
xor
and
mov
jp
adcl
stc
shll
test
hlt
test
or
sarb
mov
pop
fs
mov
jno
xor
add
gs
xor
filds
sub
ret
pop
xchg
adcb
out
dec
jecxz
rclb
arpl
cwtl
push
pusha
out
scas
call
sbb
fcmovnb
add
xor
lcall
push
mov
std
mov
jmp
aas
fwait
xchg
cli
xlat
push
insb
inc
dec
es
jbe
mov
lods
repz
mov
push
jmp
push
sub
ror
or
rorl
sbb
mov
cmp
call
and
mov
jnp
insb
stos
in
jns
scas
or
jecxz
adc
in
daa
jae
int3
or
push
pop
adc
sbbb
mov
repz
lret
jmp
out
loope
insb
movsl
ds
movsl
push
jnp
std
mov
repz
lea
es
out
scas
lods
push
pop
insl
push
xchg
xor
push
das
in
cmpb
movsb
out
fisubl
ret
fldt
pop
xlat
sub
cli
scas
icebp
ret
aas
negl
test
sub
adc
or
push
jp
add
xchg
cmp
clc
nop
jle
fdivr
loop
adc
mov
push
add
sahf
xchg
cmp
push
jle
dec
ss
xchg
and
lods
iret
ss
lret
cwtl
add
push
add
add
mov
imul
std
mov
mov
into
fcmovnbe
les
aas
loop
mov
sub
mov
mov
sub
sti
loop
ret
lods
mov
inc
call
out
out
mov
jb
imulb
jg
shrb
or
mov
push
sub
cmpsl
dec
bound
mov
stc
sub
mov
orb
rorl
std
sub
mov
stc
sar
cltd
sbb
fsts
lahf
inc
mov
addr16
ss
jecxz
imul
insb
test
dec
add
jns
ss
movsb
fbstp
aaa
or
mov
inc
jae
pop
outsb
aas
scas
outsb
test
jg
in
pop
add
adc
mov
fs
out
aam
in
inc
add
stc
jl
xchg
pusha
cmpl
insl
mov
pop
subb
jecxz
pop
and
pop
mov
mov
jnp
xor
mov
xor
sahf
movsl
mov
push
lcall
dec
mov
aaa
xchg
jp
shrb
lcall
cltd
popf
lahf
lock
jge
sbb
cmpsb
mov
push
sub
jg
push
aas
jle
inc
add
cmp
das
leave
std
daa
fbstp
cmp
push
pusha
jle
adc
aam
test
pushf
lods
gs
and
jg
ds
add
sbb
cli
lea
testl
lcall
xchg
sub
dec
cmpsb
cmp
push
mov
clc
jg
push
mull
cmp
cmpsl
js
int3
faddl
nop
rolb
fstps
inc
out
jecxz
stc
sbb
mov
insb
movsb
adc
test
inc
test
cld
mov
lods
push
adc
lret
xor
cmp
mov
and
add
pushf
lock
jp
fstps
dec
lahf
add
and
jle
rcl
adc
addl
mov
idivb
sub
dec
shlb
out
and
test
call
stos
mov
jne
lods
mov
jg
stc
in
mov
addr16
sub
iret
stos
icebp
enter
mov
mov
xchg
cmp
cltd
scas
cld
out
jecxz
mov
jge
mov
jbe
imul
imul
enter
jo
xchg
mov
sti
cwtl
sub
fsubrs
outsb
sub
jle
or
in
stos
repnz
sbb
jnp
and
sub
inc
bound
xchg
jmp
push
sti
xchg
mov
sbb
or
jo
push
xchg
cmp
dec
xchg
iret
sbb
fiaddl
mov
xchg
pushf
and
call
stos
enter
leave
loop
lea
dec
divb
lret
in
push
es
cltd
adcb
es
jg
scas
push
scas
in
andb
adc
mov
test
bound
or
cmp
stos
or
leave
and
rclb
pop
or
ja
cmpb
jle
xchg
push
loopne
add
sti
rolb
jbe
mov
sbb
and
into
pop
pop
adc
xchg
jnp
and
adc
push
mov
xchg
fs
sub
insl
faddl
mov
jae
cmp
cld
pop
xchg
mov
inc
popa
jnp
adc
push
and
sahf
cs
dec
mov
dec
xor
jno
daa
sbb
pop
jb
mov
insb
in
sbb
add
pop
lods
dec
out
xor
jb
dec
das
add
fiaddl
cmp
mov
out
jb
aad
xchg
pop
mov
movsb
flds
cmp
imul
mov
xchg
and
mov
push
pop
test
pop
mov
pop
add
xor
or
dec
daa
and
mov
sub
ds
mov
in
fnstcw
gs
sub
jge
cs
cmp
fisttpll
addr16
fisttpl
lea
cli
scas
sbb
mov
push
cmp
cltd
pop
pop
cmp
fists
cmc
sbb
jle
mov
and
roll
andb
jge
or
jmp
push
lock
adc
inc
cmp
dec
adc
out
inc
sbb
inc
loop
add
ror
inc
xchg
push
lret
pop
or
stos
daa
stos
stc
or
adc
test
mov
and
aam
pop
inc
sbb
rcll
lea
lahf
outsl
pushf
lods
loop
invd
xchg
push
in
fwait
and
ret
loope
cwtl
fildll
shll
out
arpl
daa
sub
push
cwtl
jo
xor
mov
and
inc
aad
es
and
js
outsl
xor
in
frstor
sub
cmp
push
hlt
lcall
mov
adc
shlb
enter
sbb
mov
repz
push
mov
pop
or
and
cmpsl
int3
out
mov
mov
jnp
fcomps
mov
jns
shrl
push
cmc
iret
lret
cmc
push
sbb
leave
jg
movsb
dec
mov
adc
scas
mov
lret
mov
jg
mov
enter
lret
es
loop
outsb
movsl
stos
fwait
ds
cld
cmp
jnp
or
xchg
imul
or
and
and
xchg
in
movsl
and
repnz
rolb
ret
lret
adc
filds
pushl
aad
pop
mov
push
out
dec
js
or
dec
scas
lods
test
fmulp
adc
in
call
in
mov
int
pop
adc
xchg
mov
xlat
sub
adc
and
jne
lret
daa
loope
inc
fwait
int3
jnp
adc
inc
cs
push
mov
xor
jle
pop
mov
popa
lret
ds
push
add
divb
pop
out
clc
es
jle
or
scas
inc
repnz
jle
dec
ret
mov
sub
sub
out
std
out
adc
mov
sti
mov
cmp
mov
fldl
mov
sub
gs
add
int3
push
inc
clc
mov
data16
mov
cmc
jge
mov
stos
int
dec
xchg
lock
cmpsb
adc
cwtl
mov
pop
push
and
cmp
sbb
pop
and
xchg
les
aam
cmpl
cmpb
pop
icebp
lret
aad
insb
int3
and
cwtl
jp
addr16
cmp
outsl
cmc
rcl
outsb
jp
mov
loopne
fcomp
stc
or
cmp
gs
loopne
jg
adc
js
out
sbb
aaa
adc
push
test
lds
test
rcrl
shll
xor
das
lret
rorl
mov
pop
inc
mov
push
sub
xchg
shlb
mov
pusha
mov
xor
add
push
stos
sarb
pop
cmp
cltd
pushf
gs
les
xchg
sub
xchg
clc
pop
insl
adc
in
stc
scas
pop
xlat
jnp
repnz
aaa
cwtl
xor
and
xchg
std
js
xchg
int3
mov
mov
call
push
xchg
cmpsl
not
sub
and
int
mull
push
sub
fs
scas
scas
fcompp
loopne
push
repz
xor
fcoml
pop
xor
mov
dec
mov
movsl
aas
cmc
mov
stc
rcrb
daa
adc
push
lret
jo
mov
sahf
mov
out
lret
and
jo
push
jns
push
subb
mov
or
hlt
subl
outsl
mov
adc
rcll
mov
push
mulb
sub
jns
test
imul
fsubrl
hlt
pop
xlat
push
insl
cwtl
xlat
leave
test
js
lret
insl
popa
fcoml
pop
rorl
in
jmp
cmp
mov
mov
les
dec
jg
jmp
push
sbb
movsl
jb
push
sahf
fisubl
add
das
test
int
mov
push
inc
xchg
inc
jecxz
cmp
outsl
jae
dec
in
cwtl
fwait
add
mov
adc
pushf
ds
cmp
lcall
jae
clc
sub
imul
dec
popa
outsb
loope
and
clc
js
push
out
and
imul
in
pop
push
jg
test
and
gs
in
mov
sub
mov
ja
push
cs
aas
hlt
mov
les
test
ficoml
dec
sti
ret
clc
add
out
or
dec
enter
push
jbe
dec
sub
dec
cmp
icebp
adc
pop
leave
test
lock
push
inc
push
lret
aas
and
push
lahf
sbbl
in
jmp
cmp
insb
push
jnp
xchg
ret
js
xchg
leave
jnp
sarb
scas
shrb
ds
jl
mov
lds
aas
iret
sets
pop
adc
inc
in
fmuls
iret
adc
inc
adc
pop
aad
mov
out
fcomi
jmp
cmp
dec
mov
fcmovnbe
mov
insl
testl
sub
or
and
lret
call
ja
push
and
push
lds
pop
pop
fisubrl
jp
xor
stc
and
ret
pop
mov
lds
call
push
inc
jl
ret
adc
and
ja
inc
test
mov
pusha
test
inc
mov
daa
pusha
notl
popf
inc
addr16
outsb
leave
ja
xchg
ja
push
in
in
push
aas
jl
pop
shl
inc
hlt
push
pop
jbe
mov
mov
jns
or
dec
outsb
dec
jg
int
jp
cmpsb
mov
mov
ja
xchg
ljmp
je
call
xchg
fwait
cmpsb
push
add
inc
or
xor
dec
push
shll
lds
mov
test
or
cmp
mov
cli
cli
out
cs
mov
mov
push
in
in
movsb
arpl
cmp
inc
testl
sbb
push
lcall
fdivrl
push
pop
xor
cmp
call
test
cmp
cltd
in
xorb
xchg
stos
addl
xor
sub
mov
mov
rcll
adc
inc
out
or
mov
andl
push
jmp
jne
xor
jl
int3
rcrl
outsb
ljmp
xchg
mov
stc
and
adc
pop
out
or
dec
sub
sub
dec
sub
add
sub
repz
push
std
mov
inc
test
out
scas
cmp
pop
inc
push
mov
dec
fcomp
jno
push
xor
std
push
inc
push
aad
jne
icebp
hlt
xchg
dec
arpl
out
mov
adc
pop
or
fmuls
addb
out
mov
ret
mov
xlat
adc
push
sbb
inc
xor
mov
loopne
ljmp
sub
repz
xor
outsb
mov
dec
pop
aaa
mov
jg,pn
add
mov
fwait
inc
fsubrl
mov
repnz
mov
lret
pop
xor
scas
jg
test
fisubs
jmp
movsb
sbb
add
test
test
fldcw
daa
negl
sbb
inc
add
dec
leave
das
sbb
dec
cld
repz
repnz
je
cmp
aas
loopne
jae
push
jne
lcall
push
je
les
cmp
inc
rclb
pop
aas
cmp
mov
clc
mov
js
frndint
cmpsl
add
sbb
sbb
dec
cmp
jbe
ret
push
adc
mov
pop
jecxz
push
scas
sbb
jge
jg
leave
pop
subb
or
or
stos
loope,pn
call
xlat
clc
xchg
mov
pushf
rolb
push
xor
adc
aad
repnz
mov
jb
cmp
pop
inc
dec
lods
ljmp
nop
push
pushf
push
mov
xor
insb
movsb
mov
cmc
push
repz
pop
repnz
xor
cmp
jmp
dec
fnstsw
cmp
pusha
aaa
icebp
sbb
push
inc
adcb
adc
enter
jg
fstpl
dec
into
xchg
scas
in
cmc
insl
subl
inc
pop
jg
push
jmp
pop
mov
lcall
push
in
rol
jns
xchg
mov
icebp
push
ss
inc
jg
les
cmp
mov
test
add
xlat
jne
mov
popf
xchg
adc
enter
ror
cmpsb
xor
sti
notl
idiv
dec
adc
jno
lods
ret
loop
ss
arpl
repz
fcoml
mov
insl
and
andb
mov
leave
aaa
push
insb
insb
enter
jecxz
jmp
bound
fildll
mov
popa
divb
cwtl
dec
add
fsts
ds
pop
loopne
mov
shll
and
enter
aas
add
push
xor
jns
inc
jbe
negb
mov
sbb
popa
and
cmpsb
mov
test
cwtl
pop
cmpsb
movsb
and
jae
adc
aas
adc
cmp
push
scas
std
mov
dec
adc
and
push
outsl
xor
outsb
ret
lea
lds
into
add
hlt
jp
movsl
mov
fdivrs
jns
inc
jmp
test
and
jmp
sbb
push
mov
pop
sub
fnstcw
xor
fistpll
clc
mov
imul
push
mov
popa
mov
and
mov
stos
xchg
js
push
xchg
rorl
adc
add
ds
adc
jl
or
or
mov
adc
pop
inc
xchg
mov
mov
repnz
arpl
inc
sub
lds
loop
mov
hlt
in
mov
out
xlat
xchg
lahf
dec
pop
lret
ret
test
adc
mov
fidivl
fcoml
sub
sarl
xchg
jecxz
nop
dec
pop
clc
push
insl
andl
dec
enter
inc
lea
xchg
rcr
or
into
rcll
and
jmp
push
dec
jmp
mov
test
ja
push
aas
stos
dec
push
lcall
xchg
pop
fsubr
and
mov
fsubl
sub
hlt
mov
mov
pop
pop
lcall
cmp
pop
add
xchg
dec
scas
outsb
arpl
jnp
cmpl
jae
in
outsl
inc
pop
xchg
fwait
or
popf
cmp
mov
push
dec
sbb
iret
or
pusha
shlb
addl
bound
xchg
cli
bnd
ds
add
nop
add
es
dec
call
popf
jge
push
adc
jecxz
jo
ret
popa
cmp
and
in
xor
pop
sbb
xor
pop
movsb
scas
imul
mov
xor
push
pop
pop
shll
aaa
inc
sub
push
mov
pop
movsl
jecxz
fyl2x
dec
lret
repnz
push
sub
and
mov
xor
cmp
push
fisttpl
loope
pop
add
mov
fwait
or
sarb
and
or
call
lds
sbb
sarb
push
cmp
fiadds
es
or
clc
adc
pushf
int3
or
bound
push
mov
push
das
sub
addr16
scas
hlt
pop
push
mov
jne
pop
out
pusha
pop
jb
adc
lea
and
inc
fwait
mov
xchg
xor
sarl
or
jmp
fwait
mov
or
mov
fst
aaa
mov
push
push
xchg
jbe
jns
mov
push
dec
into
dec
cltd
sbb
fildll
nop
inc
ret
in
push
aaa
icebp
sbb
xchg
add
ret
add
cmp
hlt
jge
inc
fsubr
mov
sbb
outsb
add
sbb
and
lock
dec
out
pop
test
push
cmp
jg
aam
or
lods
int
pop
cmp
add
mov
cmp
ret
adc
outsl
sub
lret
call
aam
stc
inc
xor
xchg
mov
cmp
push
cmpsb
dec
adc
sbb
mov
xchg
xchg
and
je
lret
sahf
sub
mov
loopne
in
mov
pop
test
rcrb
mov
inc
je
adc
cmp
mov
xchg
jo
push
add
pushf
daa
jae
test
insl
das
mov
into
add
mov
cmpl
loop
pushf
aas
shrb
cld
pop
dec
inc
fbstp
daa
les
jbe
iret
in
stos
jl
sbb
sti
cmp
mov
fsts
xchg
cmpl
std
pop
push
rol
add
cmp
or
lds
jge
in
popa
sub
shr
outsb
xchg
shlb
pop
mov
das
add
mov
ss
cmp
pop
jnp
inc
push
fldl
xchg
mov
imul
adc
leave
or
xor
in
lds
mov
inc
cmp
and
or
push
je
sahf
inc
stos
mov
xor
in
adc
mov
xor
sub
into
fwait
cmp
inc
imul
test
out
outsb
mov
cmp
shrl
cmp
mov
addl
ss
repnz
pop
jns
pop
push
cmovns
test
and
sub
cmp
filds
iret
dec
push
adc
xchg
pop
shrb
pop
xor
sbb
pop
sbb
cmp
mov
jne
lahf
cmpsl
inc
push
jns
lret
push
das
xlat
or
loop
inc
sbb
test
repz
subb
jnp
xorb
xor
fs
imul
test
mov
mov
adc
dec
cs
mov
jmp
and
push
test
dec
push
jne
imul
scas
mov
pop
add
data16
repnz
inc
xchg
in
ss
xchg
mov
cmpb
cmova
repz
mov
leave
xor
mov
push
movsl
adc
orb
sub
addr16
in
cmp
cld
jns
test
aaa
sub
ds
pop
lret
movsl
call
les
movsb
sahf
call
stos
push
test
cmp
mov
cltd
mov
mov
jnp
dec
iret
xlat
pop
mov
fistpll
js
pop
sub
xchg
fstpt
fldt
sbb
test
xor
movsl
adc
sbb
inc
sub
adc
jns
jbe
push
jnp
aam
sar
dec
out
ljmp
pop
sbb
xor
mov
xor
push
leave
addr16
lcall
sub
cmp
cmp
psrlw
in
fisubs
xchg
addr16
repz
es
jno
ds
out
inc
das
insb
cmp
fcoms
addr16
or
adc
xor
leave
mov
fdivl
shlb
gs
fsubl
lea
aaa
idivb
fiaddl
int3
fisttpl
add
xchg
xor
int3
dec
xor
jecxz
in
stc
fldcw
cmpsb
sbb
lock
fbld
push
push
pop
ficoms
or
xchg
jge
mov
or
cwtl
rcr
xor
int3
in
pop
loope
inc
mov
push
divl
mov
shlb
shlb
divl
out
cmp
jmp
add
mov
dec
mov
sub
in
adc
xchg
outsb
out
cmp
loopne
add
sbb
stc
inc
loope
jecxz
outsb
inc
in
int3
xchg
adcb
adc
mov
mov
sub
xchg
dec
fists
dec
nop
ret
mov
xchg
pop
rcrb
fidivl
out
xor
ret
inc
out
inc
adc
mov
out
push
mov
andl
cmp
jae
insb
jnp,pn
mov
out
jge
inc
sti
inc
ss
inc
rol
stos
sahf
dec
xlat
lret
mov
push
ljmp
push
dec
cmp
mov
fdivrs
inc
mov
sub
imul
cli
inc
loope
aas
and
pusha
mov
inc
in
jns
push
js
adc
push
addr16
cmc
cmpsb
xchg
inc
leave
cmp
inc
jle
aas
fmul
gs
inc
fidivrl
lea
aam
jno
rorb
dec
jne
out
std
push
stos
dec
xchg
in
cmpsl
sbb
push
imul
sub
jno
sbb
add
pop
mov
loop
lods
mov
dec
enter
push
push
adc
rcr
ja
outsb
jae
add
inc
mov
insb
mov
mov
add
insb
ss
adcl
in
aaa
shll
shlb
jno
jae
mov
xchg
sub
cltd
lea
lds
test
hlt
lea
and
test
shlb
gs
mov
fidivrs
xchg
xchg
jmp
sarl
outsb
imul
loop
add
aas
xor
call
aas
call
mov
sbb
pop
lods
and
shlb
cmp
insl
jg
pop
in
cli
and
inc
adc
push
enter
xlat
es
mov
xchg
int3
int
dec
ja
aaa
jo
cmp
popf
out
rcrl
xchg
test
xor
outsb
inc
pop
lret
outsb
push
jb
jp
and
jne
out
xchg
jb
jns
fildl
fists
mov
test
jb
cmpsb
aas
sbb
mov
jle
cmp
mov
lcall
cwtl
stc
xlat
push
add
in
and
dec
nop
scas
pushf
ds
or
popa
inc
pushf
sub
das
stc
stos
aas
cld
mov
fsubrs
ja
test
pusha
cltd
std
clc
adc
inc
in
cmc
inc
add
in
inc
cmp
fwait
rorl
mov
movsb
mov
arpl
mov
lods
or
lcall
roll
adc
cmp
mov
or
stos
jg
jmp
pop
add
add
cmpsl
pop
sti
test
jmp
jmp
lcall
inc
out
shlb
mov
addr16
fs
in
xchg
roll
pop
test
cld
call
push
cmc
daa
pop
imul
xor
xchg
add
dec
push
dec
push
jge
xor
xchg
sub
cmp
iret
in
add
ja
jmp
jp
jno
jno
xchg
rcrl
shll
lods
jmp
mov
mov
mov
push
push
icebp
into
into
pop
add
pop
fadd
jg
cmp
or
push
xchg
inc
mov
and
lds
sbb
mov
mov
loop
dec
sbb
fidivl
mov
int3
xchg
jno
aas
repz
clc
mov
push
loope
lahf
je
int
shl
mov
inc
sub
xor
jmp
repz
mov
inc
push
or
pop
fwait
mov
jnp
mov
mov
add
xlat
scas
xchg
pop
lods
sbb
lds
mov
xchg
outsb
pmulhw
or
call
inc
jge
jp
jecxz
or
mov
es
jecxz
adc
enter
loope
ret
test
fcmovbe
out
repnz
mov
scas
stos
call
pop
inc
arpl
jns
bound
inc
iret
inc
lret
mov
jg
cmp
push
mov
pop
mov
dec
out
mov
cwtl
loope
and
pop
pop
sti
sub
cmp
lahf
inc
inc
xchg
in
aam
into
xchg
dec
sti
jmp
pop
jecxz
scas
xor
ret
mov
shld
xchg
les
lret
push
dec
call
out
add
adc
loopne
xor
loopne
enter
icebp
fmull
or
jg
outsb
mov
movsb
fbld
movsb
jp
and
lahf
jns
test
xchg
push
jge
sub
call
and
call
or
stos
in
mov
dec
ret
add
jge
xchg
stos
lahf
addr16
push
mov
dec
data16
dec
xor
testb
jne
cmp
faddl
mov
popa
xchg
adc
push
pop
shrl
mov
or
cmp
jge
sysret
add
xchg
xor
sub
xor
stc
fsubs
or
sbb
jge
iret
adc
add
xchg
ss
push
inc
cmpsl
jbe
cs
sbb
adc
xor
fdivr
iret
sbb
inc
and
mov
fyl2x
push
jle
xchg
xor
xor
lahf
mov
mov
int
mov
out
adc
adc
push
fiaddl
inc
sbb
xchg
sbb
mov
gs
cmp
stc
mov
cmp
jb
notb
js
jo
repz
hlt
not
push
push
push
outsl
push
daa
mov
mov
mov
adc
pop
cmp
lret
cmp
mov
pushl
ljmp
inc
mov
push
nop
dec
lcall
scas
fwait
jb
push
inc
sbb
mov
inc
pop
push
and
adcb
icebp
es
or
push
mov
xchg
test
mov
rorl
ljmp
gs
dec
ret
lock
xchg
mov
and
lcall
push
stc
mov
fsubrl
add
test
jecxz
cmp
cld
xor
aaa
mov
dec
popf
js
mov
out
or
pop
xchg
and
cltd
mov
dec
adc
and
push
mov
mov
pushf
adc
cltd
std
add
cwtl
inc
iret
sbb
adc
cmc
sti
pop
push
aad
xchg
es
repz
fwait
addr16
lret
push
push
cld
sbb
push
out
cs
insl
int
cwtl
jle
int
adcb
mov
lea
adc
rcll
movsb
cmp
cmpsl
loop
mov
adc
and
into
shl
add
lea
sub
add
sbb
and
xchg
pop
popf
pushf
push
aas
push
cltd
and
repnz
sbb
shl
sarl
cli
inc
lcall
enter
int
data16
jo
lock
xor
in
jno
rcrb
insb
pop
mov
push
les
push
adc
pushf
push
mov
push
scas
jp
mov
negb
cmp
jo
sbb
jge
cs
mov
xor
add
fldcw
cmp
dec
sub
repz
cmp
jno
outsl
dec
mov
loop
dec
stos
push
sbb
imul
cltd
xchg
pop
inc
or
scas
jns
xor
sbb
jmp
inc
ss
filds
xor
add
sbb
xor
push
xchg
out
mov
xor
ds
mov
add
leave
lods
xlat
sub
add
jge
jmp
and
insb
sarl
mov
pop
mov
daa
push
call
xchg
mov
push
in
mov
add
cmpsl
and
mov
mov
dec
out
inc
cli
arpl
and
add
fdivrp
aad
inc
mov
mov
ret
adc
mov
mov
mov
xchg
inc
sbb
dec
or
data16
sub
fldenv
mov
lcall
mov
push
mov
or
out
mov
jge
jo
jo
dec
fsubl
add
in
mov
filds
sbb
fcomi
pusha
cld
xor
cmpsb
scas
jae
in
adc
mov
clc
cmp
mov
jae
mov
decb
cld
enter
xchg
outsl
cs
ljmp
xchg
mov
out
cmpb
mov
repz
loope
jbe
aad
cli
arpl
push
push
loope
adc
fisttpll
and
orl
inc
leave
mov
test
xor
mov
mov
dec
xchg
cmpsb
mov
adc
cmp
mov
cmpsl
pop
sbb
roll
ja
ficomps
cmc
repnz
aam
push
push
mov
sbbb
mov
test
xor
hlt
mov
jp
dec
pop
test
xor
jbe
dec
push
pop
push
or
lods
xor
jge
cmpsl
push
lcall
pop
lahf
cli
dec
test
cli
mov
les
out
jl
pop
fadd
cmp
pop
ljmp
out
imul
jno
sub
sub
lock
lock
dec
call
and
lock
or
cmpsl
roll
loop
test
xchg
mov
add
repnz
in
add
insb
mov
fnstsw
mov
cld
add
cmpsb
mov
test
jmp
addl
mov
pop
int3
rcll
xor
add
and
in
push
cwtl
fcmove
clc
test
add
aas
xchg
sub
ss
cmp
icebp
xchg
ja
and
jmp
out
xchg
add
push
sbb
mov
sbbb
or
xchg
pop
mov
out
pop
mov
fistps
push
sbb
cmc
enter
fldl
pop
arpl
aam
mov
add
addb
dec
push
repnz
lock
push
out
in
gs
inc
mov
xor
pop
add
lahf
faddl
pusha
data16
cmp
ds
mov
sti
sub
loopne
mov
cmc
cmc
je
dec
pop
inc
mov
jmp
push
orps
dec
addr16
inc
pop
mov
sub
and
aam
sub
sarb
fxch
mov
cmp
sub
add
xchg
shl
dec
jae
or
mov
sbb
dec
add
sti
in
lahf
and
data16
scas
inc
and
mov
push
loope
out
shlb
inc
enter
jecxz
divl
loop
ficoml
lods
dec
outsb
imul
das
mov
adc
mov
cli
lock
push
or
leave
push
aam
jne
or
outsb
push
lahf
repz
or
push
or
jecxz
sahf
xchg
pop
xchg
jns
push
in
or
xchg
mov
jge
in
fcompl
push
mov
sbb
into
fidivrs
xchg
mov
adc
scas
push
adc
push
sbb
lods
mov
and
cmc
jl
in
repnz
mov
xchg
push
lcall
add
inc
enter
lea
jl
sarb
or
test
jecxz
mov
leave
ja
fsts
add
dec
loopne
call
jecxz
cmc
or
loope
inc
sub
mov
adc
fnsave
pushf
cmp
test
or
mov
movsl
fsubs
mov
adc
lods
arpl
scas
out
fidivs
add
mov
jp
daa
cmp
or
xor
mov
sar
in
or
inc
shrb
dec
xchg
popa
xor
pop
fisubrs
sbb
mov
lds
jns
insl
out
pop
pop
adc
dec
aas
in
popa
js
mov
jno
mov
repnz
jmp
test
cmp
and
or
push
jb
inc
push
ret
jmp
jl
outsl
bound
loopne
movsl
fadd
sub
push
mov
sahf
dec
out
jge
cmp
lea
das
xchg
lahf
jecxz
movsb
sahf
jbe
cmp
gs
mov
leave
ljmp
bnd
test
lea
push
std
and
dec
iret
scas
arpl
cmpsb
cmp
or
call
scas
pop
adc
lea
scas
push
and
dec
test
adc
xlat
iret
lret
out
or
adc
shr
mov
or
repz
pop
push
idiv
scas
cs
fstpt
fs
incb
or
aaa
shr
jge
sbb
pushf
cli
dec
adc
sub
push
les
push
jge
adc
ret
les
test
or
adc
fs
xchg
in
dec
cmp
inc
loop
int
mov
fnstcw
leave
in
pop
mov
sub
push
xor
mov
fs
fwait
hlt
xchg
int3
cmp
ret
and
jl
or
mov
inc
mov
sub
xor
push
stc
filds
cwtl
jmp
mov
and
lea
fs
repnz
mov
out
xor
aad
pop
push
xchg
sub
daa
lds
pop
push
xor
push
xorl
cmp
mov
inc
pop
inc
sbb
gs
arpl
icebp
sub
sub
dec
mov
ds
cmpsl
pop
pop
jge
rcr
icebp
sarl
xchg
mov
rcrl
and
mov
jg
stos
mov
insb
scas
pop
out
pop
jnp
sbb
addl
scas
inc
pop
adc
es
lods
lahf
and
aad
iret
mov
mov
gs
dec
lods
jbe
inc
mov
ucomiss
jae
mov
mov
loope
loope
lds
add
orb
popf
mov
aam
add
adc
mov
mov
pop
inc
adc
pop
in
outsl
mov
test
nop
jne
clc
and
in
fwait
mov
in
mov
call
inc
lods
jl
mov
sbb
test
sub
cmc
stos
and
arpl
cmp
lcall
sahf
adc
mul
popf
popl
jne
das
and
ja
pop
adc
mov
mov
xor
push
mov
nop
jo
enter
mov
shlb
fidivl
hlt
cltd
and
movsl
call
mov
cld
add
adc
ret
lock
and
in
dec
mov
jecxz
daa
imul
inc
repnz
cmp
mov
fildl
ret
fs
stos
push
fisttps
jp
sarl
in
xor
cli
sbb
fisttpll
mov
mov
fsubs
cmpsb
jp
ja
ja
mov
push
enterw
rorb
std
lods
in
sub
out
adc
ltr
loop
in
xchg
push
sbb
fisubrl
xor
fninit
sbb
push
pushf
inc
scas
or
int
stos
pop
mov
sbb
or
or
int3
icebp
adc
inc
pop
imul
popf
out
or
mov
xchg
je
stc
into
xlat
xlat
jae
xor
out
and
fsubl
shlb
sub
dec
gs
adc
inc
pushf
iret
bound
insb
jns
lds
jo
daa
int3
sub
mov
jp
loope
insl
popa
ljmp
pop
int
dec
add
ljmp
xor
xchg
fistpl
sbb
push
sbb
mov
pop
scas
ljmp
cmp
push
cmc
cltd
jne
clc
fistps
pop
xor
fmulp
push
inc
pop
jl
sbb
sub
sbb
sub
ret
sub
jg
xchg
and
mov
lret
shlb
push
rcrb
cmp
dec
iret
stos
shlb
rol
jecxz
jb
ja
sbb
in
dec
add
add
pusha
jae
xor
in
dec
fsubrs
out
in
inc
mov
push
out
pop
dec
je
aad
in
push
sbbb
or
sahf
sbb
bnd
in
lahf
pop
jle
sbb
nop
xor
pop
ret
pop
push
push
inc
xlat
loop
xor
mov
xlat
data16
nop
in
add
decb
mov
add
or
loopne
sbb
push
test
mov
lea
ja
fldt
mov
dec
movsb
orl
mov
inc
mov
test
mov
lods
sub
stc
sbb
adc
int
dec
cs
push
pop
imul
jb
mov
daa
jp
stos
lds
push
lods
pop
out
jmp
push
mov
stc
lea
fdivrs
fsubrp
dec
cmovs
xchg
decb
out
cmp
or
pop
push
adc
rorl
xor
fwait
into
fiaddl
xchg
xchg
mov
push
cltd
mov
arpl
push
push
inc
xchg
mov
inc
lea
lock
sub
in
stc
in
std
xor
xchg
addr16
mov
inc
jbe
pop
dec
xor
add
cmp
ficoms
fistps
and
insl
scas
or
hlt
bnd
adc
scas
nop
sub
xlat
dec
jae
jecxz
mov
aaa
xor
dec
and
adc
insb
mov
enter
hlt
fmul
mov
mov
repz
jecxz
mov
add
pop
cmp
and
inc
cmp
or
out
mov
jno
lds
add
or
xor
mov
jge
jb
or
and
cmovg
adcb
test
and
xchg
mov
xchg
mov
mov
sti
mov
ds
inc
inc
rolb
je
jns
inc
cld
push
fildll
ljmp
clc
mov
sbbl
cmp
xchg
adc
push
aam
xor
loopne
xchg
fwait
adc
setb
push
mov
cmpb
ss
jmp
and
cmpsb
push
xchg
out
adc
adc
dec
adc
sub
xor
test
in
mov
dec
lahf
cmp
xchg
flds
pop
mov
insl
rcrl
and
gs
pop
fldenv
sub
movsl
xor
repnz
xchg
mov
dec
in
loope
mov
addr16
cmpb
and
jbe
or
mov
sbbl
icebp
push
das
fisubl
or
push
outsb
sub
out
inc
popf
push
cwtl
pop
stos
ja
movsb
int
sub
fs
pop
xchg
insl
sti
mov
jne
imul
sbb
aam
jbe
aad
xor
test
sub
inc
adc
cmc
fsubrl
mov
xor
rcrl
mov
sub
jg
xor
mov
fxch
jbe
outsb
adc
xor
jl
pop
push
insl
mov
ret
push
mov
mov
fistpll
push
push
add
arpl
out
mov
fisubrl
mov
mov
inc
xchg
imulb
fldcw
and
push
sbb
test
popa
enter
dec
mov
jbe
inc
enter
push
test
cmp
rorl
push
sbb
xor
lret
jecxz,pt
xor
lds
nop
xor
cmp
popa
add
gs
outsb
xorl
jb
outsl
cli
int
pop
cmp
jl
and
jnp
int
inc
pop
add
and
fwait
mov
subb
rcrb
sub
rcrl
xchg
push
mov
lret
stos
iret
pop
fidivrs
cmc
jp
scas
lret
lret
aam
add
fidivl
adc
aaa
push
lods
enter
daa
filds
fbld
shlb
and
push
stos
pop
inc
ljmp
pusha
ljmp
call
repnz
test
inc
leave
add
je
add
inc
rcrb
jae
enter
fwait
push
call
test
pop
jne
iret
mov
cs
xchg
jnp
leave
movsb
xchg
icebp
stos
stc
and
mov
imul
ljmp
repnz
pop
cltd
dec
imul
push
cmc
cli
dec
test
popf
lahf
xlat
mov
fdivrl
ds
jecxz
xlat
sub
stos
stos
mov
pop
sub
cmp
sbb
lahf
xchg
and
mov
iret
stos
cmp
mov
jb
pop
sahf
fcomi
xchg
pusha
mov
shlb
inc
inc
sub
xchg
inc
ds
lods
mov
popf
pusha
jno
adc
lds
xor
push
or
dec
out
or
iret
mov
cli
loopne
and
test
dec
adc
and
push
pop
lret
fwait
dec
sbb
fisttpl
out
fidivrl
iret
mov
iret
stc
pop
pop
mov
add
mov
outsb
jae
push
fwait
cwtl
iret
aad
cltd
mull
hlt
xchg
aas
push
test
popa
lahf
mov
lret
pop
stos
imul
stos
jbe
inc
insb
xchg
or
lea
sub
add
pop
jge
mov
jg
mov
xor
jns
mov
pop
push
jbe
or
mov
jno
pop
sbb
dec
dec
jmp
jge
imul
negl
mov
dec
sub
std
nop
mov
mov
pusha
test
dec
sti
add
or
xorl
roll
xor
testb
je
push
popa
xor
jp
mov
mov
dec
aas
lea
push
cld
mov
mov
cmp
adc
xchg
jbe
push
mov
shll
xlat
popf
and
addr16
or
and
icebp
dec
cmp
pusha
jge
shrl
loope
mov
sbb
lds
inc
or
dec
jo
fisubrl
mov
pushf
sbb
or
inc
rolb
mov
out
pop
into
cmp
cmp
xchg
cltd
inc
and
push
cmp
push
jecxz
stos
mov
out
mov
cmc
fstps
dec
cmp
cmp
cmpsb
hlt
sahf
pop
sbbl
jecxz
out
dec
mov
xor
scas
push
jnp
jb
aad
call
dec
mov
je
pop
test
xchg
or
subb
daa
filds
ljmp
cld
loope
pop
mov
les
ljmp
push
fs
jae
sub
lds
cmp
and
sub
pop
arpl
ss
inc
daa
daa
cld
jmp
outsb
out
test
xor
mov
ja
xchg
iret
dec
mov
cld
cli
lods
in
cmp
call
lcall
xchg
or
push
bound
xor
and
add
aas
shlb
lds
mov
inc
sahf
lret
xor
and
push
sub
sub
adc
lock
mov
xor
test
push
mov
les
mov
outsb
flds
mov
into
rcll
mov
mov
outsb
popa
dec
mov
shlb
adc
scas
sti
adc
xlat
cmp
cwtl
lret
adc
and
aaa
in
loope
jae
icebp
sbb
cmp
adc
and
pop
sbbl
xchg
loop
adc
jae
fldenv
mov
mov
in
and
xlat
cmp
and
xchg
xor
nop
add
sbb
testb
jns
js
pop
les
sub
test
jge
wbinvd
je
add
add
pushf
mov
dec
dec
pop
notl
sub
mov
push
js
outsl
das
icebp
addr16
loopne
xchg
xor
bound
push
push
cmpsb
sbb
cmp
cmc
aad
data16
syscall
mov
movsb
popa
sbb
stos
dec
fisttpll
fdiv
clc
push
test
out
loopne
repz
inc
nop
push
or
sub
add
lock
xchg
out
mov
add
xchg
xchg
fisttpll
leave
andb
push
mov
rcl
call
sbb
lret
xor
xlat
push
faddl
cmp
hlt
xchg
cmp
jp
mov
inc
ret
xor
pusha
mov
push
adc
lea
cmp
pop
mov
sbb
in
fstpl
add
xchg
stos
into
mov
xor
ja
jp
add
adc
mov
insb
jno
mov
les
dec
enter
jg
ret
adc
push
hlt
cmpsl
xchg
mov
dec
or
fildll
push
and
xchg
pop
movsb
fidivl
push
pop
std
sub
and
sub
aam
out
xchg
add
lret
jb
dec
bound
movntq
cli
dec
push
xchg
sub
sub
push
mov
mov
sqrtps
jb
testb
in
sbb
das
add
jl
mov
fdivs
das
fwait
and
in
push
xchg
inc
cmc
and
adc
mov
rcrl
dec
bound
je
pushf
popa
jae
sbb
sub
mov
movb
xchg
dec
mov
add
jp
faddl
pop
iret
dec
xorl
inc
add
insb
mov
inc
lret
flds
xchg
sbb
out
in
mov
aad
js
jmp
push
daa
inc
arpl
cmp
gs
into
adc
inc
adc
or
lret
pop
jge
out
and
pusha
shrl
pop
adc
dec
mov
pusha
sbb
scas
mov
fisubrs
mov
arpl
add
cmp
xor
out
sbb
cli
sub
cmp
rol
jge
adc
jo
jp
sub
push
test
aad
add
idivb
jle
xor
adc
sbb
dec
addr16
sub
mov
or
xor
dec
sbbb
in
add
push
push
test
push
das
mov
icebp
in
dec
fucomp
test
push
mov
fidivl
scas
jecxz
lods
movsb
addl
dec
daa
mov
out
mov
pop
dec
dec
iretw
or
cmpsb
and
or
insl
dec
call
xlat
sbb
dec
ficompl
cld
pushf
test
mov
orb
xchg
cwtl
pop
inc
sub
out
cld
cmc
mov
divl
push
movsl
jnp
mov
or
jl
lret
jg
subb
int
pop
xchg
pop
pop
jp
sub
push
push
test
mov
xchg
push
daa
push
adc
mov
and
fsubl
mov
push
insb
scas
jno
xchg
adc
fisttpl
int3
mov
int3
dec
push
fnstenv
dec
adcb
inc
stos
dec
sub
das
push
in
xor
adc
or
xlat
dec
jmp
push
jnp
cmp
ss
out
xchg
xor
js
ret
es
and
insb
pop
out
repnz
fdivrl
or
shrb
pop
mov
mov
outsl
xchg
cmp
add
xlat
adc
xor
ja
cwtl
cli
push
orb
pop
ja
or
push
sub
int
dec
movsl
aad
sub
inc
mov
inc
adc
aaa
clc
dec
ds
push
push
xchg
mov
xchg
daa
test
enter
xlat
movsl
mov
out
add
xchg
gs
jo
lods
outsb
stos
pop
fdivs
pop
jmp
lods
out
jne
sub
push
push
xchg
push
in
lcall
add
imul
mov
jnp
test
push
jecxz
add
iret
or
inc
lahf
lods
sbb
addr16
in
add
sbb
inc
inc
pmaxsw
jnp
std
xor
mov
addr16
rcrl
rorl
push
mov
ljmp
lods
lods
mov
jmp
and
sub
in
mov
ret
pop
ljmp
sub
sub
in
jl
lock
push
call
add
xchg
fcompl
fadds
push
rcr
lods
mov
mov
cmpsb
insl
fsts
ljmp
shll
push
push
pop
add
jg
cmpl
jns
repz
jb
jae
inc
cmc
loopne
jl
mov
sub
inc
pop
clc
fadds
jo
mov
cmc
aaa
push
push
pop
js
rolb
subb
jle
xor
sub
insb
sbb
lfs
push
cmpb
loopne
test
movsb
insl
or
mov
dec
pushf
jb
fildl
out
pop
mov
sub
je
sbb
insb
jecxz
and
add
inc
dec
cmp
sahf
mov
xchg
xor
mov
ljmp
xor
and
icebp
leave
out
adc
test
out
jge
dec
jbe
leave
inc
aad
jae
dec
push
aas
mov
cmp
orl
in
lahf
aas
mov
cmpsl
push
jg
loope
dec
cld
xor
dec
cltd
cmp
adc
mov
jns
mov
mov
jae
ds
in
stos
mov
jb
adc
sub
hlt
sbb
or
inc
ja
add
xchg
sbb
loope
shlb
dec
inc
or
dec
rolb
and
nop
mov
mov
rcrl
sbb
sub
pop
rcll
pushf
arpl
aas
push
call
cmp
adcl
xor
or
sbb
shl
inc
lahf
jb
push
lea
cmp
xchg
cmc
nop
mov
repz
cmovne
fidivl
pop
push
and
mov
mov
sbb
xchg
sbb
dec
imul
add
sti
stc
js,pt
jbe
iret
mov
aam
cmpsl
mov
clc
inc
jno
jo
pop
fisubl
in
sub
popa
mov
cmpsb
xorb
and
js
inc
sahf
out
xor
pushf
pop
leave
adc
cmp
mov
xchg
movsl
push
testl
rclb
dec
inc
out
and
test
jle
xchg
or
mov
add
fnstenv
lcall
mov
or
adc
clc
mov
icebp
add
jl
test
sub
adc
jae
data16
dec
dec
jg
in
mov
hlt
inc
cmpb
xchg
lahf
jl
shlb
bound
jle
stos
jmp
push
inc
out
jmp
negb
or
mov
jg
daa
and
pop
in
dec
xor
std
sti
and
mov
mov
fisttps
cli
sub
pop
xchg
adc
lret
jne
cwtl
push
pop
les
das
sub
xchg
and
lahf
adcl
jae
repnz
aad
sbb
push
bound
loope
sarb
jp
lds
icebp
leave
cld
lds
in
push
stc
out
sbb
fnstenv
xchg
pusha
aas
test
dec
insl
cwtl
shll
movsl
xchg
sbb
loope
cmpl
repz
xlat
push
fwait
fs
push
mov
out
mov
dec
sub
xor
cmp
aam
mov
and
cmc
fiaddl
cmp
cmpsb
push
fmuls
testb
in
mov
add
shld
int
out
sti
lahf
das
or
push
xchg
add
cmp
iret
mov
dec
pop
mov
mov
push
jge
fildll
adc
hlt
push
push
pop
push
push
and
cltd
out
add
inc
or
fs
push
and
sbb
cwtl
aas
sti
or
mov
cmp
cmpsl
inc
rclb
and
push
pushf
mov
daa
xchg
push
xlat
cmp
adc
adcl
fwait
jne
pop
dec
ss
cli
sbb
add
sbb
in
and
test
mov
xor
dec
adc
test
mov
cmp
and
xchg
ret
pop
pop
xchg
shrl
int3
ret
jne
cmpsl
pop
xchg
outsb
sub
call
imul
jp
lret
pop
mov
push
cmp
xor
jno
std
jno
xchg
adc
lods
pop
movsb
fs
sbb
dec
data16
sub
in
lods
xor
lahf
das
adc
enter
jmp
push
add
pop
pop
mov
mov
test
dec
mov
mul
pop
ja
inc
mov
ja
jge
adc
or
mov
cmp
add
or
adc
les
lock
imul
shrl
negl
sbb
sbb
jne
fwait
xor
cmc
or
adc
in
add
pop
bswap
shlw
dec
in
lret
cmp
cmpsl
and
rcrl
pop
sub
lock
pop
and
dec
sbb
xor
xchg
or
sahf
sub
xchg
loop
pop
andl
sbb
movsb
lods
mov
or
mov
popa
pop
fsqrt
das
fucom
out
popf
cmp
adc
sub
mov
pop
xor
pop
sub
ljmp
dec
inc
das
push
mov
sbb
jmp
enter
adc
pushf
or
loopne
jle
sbb
icebp
test
insb
push
aaa
scas
mov
ljmp
imul
fsubs
rolb
and
sbb
sbb
mov
pop
pop
pop
scas
push
push
cmpsb
imul
sbb
stos
mov
jle
repnz
cmp
and
adc
movsb
rcrb
or
outsb
jne
push
or
loopne
mov
lock
shlb
mov
lea
pop
pop
lahf
push
mov
test
cs
jecxz
aas
cli
sbb
fdivp
jp
in
ja
hlt
stc
dec
push
aam
push
into
sub
or
lock
sub
mov
sahf
jmp
fmuls
and
loop
sub
gs
xchg
mov
cmc
xchg
aad
sub
pop
lock
dec
xor
cmp
and
dec
inc
repnz
mov
pop
pop
repnz
mov
aas
imul
mov
sbb
add
or
dec
and
imul
sbb
xor
sub
outsb
iret
cmc
subl
pusha
sub
andl
cmp
add
mov
icebp
outsb
add
xchg
in
push
roll
movsl
ja
add
lcall
or
loope
out
pop
jae
sub
das
pop
shl
mov
dec
push
cs
jb
add
push
pop
dec
dec
pop
mov
jge
sub
cld
mov
out
push
or
jae
push
rcr
adc
test
or
mov
sarb
sub
adc
int3
mov
sub
inc
xor
stc
loop
in
sub
mov
je
rcrl
clc
jae
or
pop
xor
insl
insb
js
roll
cmp
sub
sub
xor
stos
jl
cmp
ss
or
push
out
sbb
dec
test
mov
jo
mov
lcall
push
pop
sub
inc
test
fnsave
xchg
ret
ds
add
lock
sbb
cmp
xor
in
push
shrl
mov
imul
mov
sbb
mov
lds
xchg
call
ret
test
popf
adc
cli
aam
pushf
and
sub
out
lahf
ljmp
cmp
mov
mov
scas
movsb
push
fnstenv
insb
mov
dec
fsubrl
je
dec
fimuls
add
lahf
sahf
test
fs
xor
push
jge
dec
sbb
push
push
inc
ret
out
rcll
cmpsl
daa
fwait
add
mov
mov
dec
in
jnp
es
lea
jno
push
clc
sbb
inc
mul
jns
jmp
dec
outsl
sbb
test
fnstenv
sbb
insl
mov
vrcpss
rcll
imul
push
inc
mov
dec
fucom
xchg
inc
out
cmp
sub
fisubrl
hlt
xchg
cmpsb
xchg
cmpsl
insb
jne
sbb
inc
or
repz
adc
pop
out
jae
adc
into
sbb
jmp
outsl
xchg
aaa
mov
shll
push
bound
jle
dec
pop
mov
xor
in
loopne
adc
xlat
add
sbb
lds
adc
not
dec
xchg
movsl
push
push
pop
pop
push
sbb
push
mov
pop
jecxz
cs
gs
xor
lock
scas
cmp
sbb
xchg
jo
sar
pusha
dec
add
xor
pop
popf
jnp
stc
sti
and
jge
lods
ss
cmpsb
cwtl
stos
mov
xor
xchg
lock
xorb
add
cmp
outsl
std
inc
pop
les
es
inc
stos
mov
xchg
push
xlat
icebp
pop
imul
push
mov
xchg
aam
dec
incl
nop
dec
jne
inc
mov
lcall
sub
aas
je
xlat
adc
aaa
mov
push
sub
cwtl
mov
mov
xchg
mov
mov
sarl
cmp
test
clc
mov
loopne
add
in
inc
aas
add
mov
gs
dec
fwait
popf
negb
data16
push
neg
js
dec
in
jl
data16
dec
sub
xlat
mov
insb
mov
ret
mov
movsb
push
popl
inc
mov
mov
pop
out
ja
add
loope
jmp
mov
rcrl
dec
cld
test
sti
push
xor
movsb
in
and
xor
addr16
ret
inc
add
pop
cs
cs
add
mov
push
mov
pop
pushf
push
inc
pop
xchg
push
cmp
gs
paddsb
jne
xchg
push
push
mov
jecxz
xchg
add
push
pop
loope
fwait
push
pusha
ljmp
push
lock
scas
adc
in
inc
dec
out
jecxz
cs
pop
rolb
or
jo
cld
fmuls
sub
mov
shll
adcb
out
mov
cli
addb
or
popf
out
dec
test
add
dec
mov
and
outsb
lods
pop
jb
lcall
sbb
xor
shlb
xor
out
adc
out
push
push
and
daa
and
mov
mov
es
scas
push
xor
xchg
pop
pop
mov
lahf
pop
jns
xchg
mov
mov
test
sub
fimuls
push
insl
cltd
and
jl
mov
out
rolb
ficoms
mov
xor
es
int3
rcrb
jae
mov
or
cli
pop
and
faddl
les
dec
cmpsb
xor
add
leave
fsubs
sahf
idivb
dec
or
lds
cmc
insl
clc
imul
pushf
mov
pop
mov
jne
rcr
mov
test
xlat
mov
sarl
scas
fucomp
mov
scas
push
or
je
mov
jl
aad
arpl
add
sbb
popa
out
js
xchg
sub
dec
scas
dec
jae
mov
mov
push
xchg
jecxz
nop
sub
arpl
sarb
mov
mov
mov
rcll
dec
push
rcl
mov
mov
fucomip
js
inc
cmp
jae
xor
push
ja
jg
popl
dec
rorb
or
pop
ret
or
sbb
mov
dec
pusha
not
fdivs
cmp
and
pop
sub
notl
jne
ud2
ja
adc
ljmp
ljmp
cmp
nop
fisttpl
sbb
and
lcall
out
inc
add
out
adc
psubusb
mov
das
jno
push
xchg
mov
dec
adc
pop
addr16
daa
mov
ljmp
adc
mov
jns
sbbl
add
data16
pop
mov
rcll
lea
sub
push
divl
rorb
mov
out
cmp
movsl
std
cmp
and
sbb
stc
pop
adc
cmpl
mov
mov
push
inc
sbb
push
add
mov
inc
movsb
mov
repz
jge
aad
sub
mov
xchg
arpl
pop
lods
mov
dec
push
js
mov
mov
cmpsl
jle
cmp
mov
insb
push
out
in
or
cmp
ret
dec
out
cmp
out
pushf
mov
and
scas
push
fadds
cmp
repz
inc
hlt
clc
jns
shrl
fs
ss
or
int
sahf
push
mov
push
mov
jmp
and
ret
movsl
out
pop
cmp
shlb
sub
mov
insb
mov
loopne
cmp
push
int
fcoms
mov
pop
cld
sbbl
andl
les
xchg
in
dec
xor
mov
hlt
fwait
sti
pushf
aaa
jmp
in
gs
aam
dec
mov
leave
lcall
fidivrl
jg
mov
mov
out
pop
and
sbb
repz
or
mov
pop
cwtl
sti
out
mov
js
and
shlb
mov
pop
push
and
mov
lea
mov
or
in
dec
cs
dec
cwtl
aas
xchg
add
add
test
dec
lret
test
daa
js
adc
sub
push
fdivl
aas
cmp
insb
fwait
jp
jne
lods
push
inc
adc
hlt
sub
inc
aaa
push
inc
adc
inc
ret
es
movsl
cmp
cmp
xor
xchg
pop
mov
loope
pop
pushf
mov
test
pop
in
mov
inc
inc
mov
dec
xrelease
add
add
fstpt
inc
stos
int3
adc
push
mov
jge
call
push
enter
cmp
in
rclb
ret
pop
aaa
inc
mov
sub
ds
sbb
or
loop
mov
adc
out
push
arpl
or
imul
xchg
sub
sbb
ja
test
pushf
dec
jne
and
or
cltd
xchg
loope
sub
mov
xchg
adc
out
push
imul
ficomps
xchg
sub
push
xchg
and
cmp
sub
jp
shll
into
lock
push
adc
cmp
iret
cmpsb
shll
inc
lret
movsl
push
xchg
and
in
iret
push
mov
adc
push
xchg
aaa
cmc
repnz
pop
ret
std
jne
lods
xchg
test
jns
lret
add
add
mov
add
lock
cmp
push
pop
sahf
bound
mov
int
das
push
push
cmp
mov
mov
add
cmp
and
or
mov
test
aam
addr16
out
and
je
int
leave
scas
mov
sbb
jno
popa
push
or
fisubl
sahf
xchg
cltd
xor
lret
mov
jmp
pusha
insb
inc
clc
cmp
and
jne
inc
ljmp
je
je
es
xor
mov
jmp
lds
mov
jecxz
loop
in
loope
cld
mov
andb
out
andl
pop
data16
in
adc
mov
jle
xor
lods
inc
adc
add
out
dec
cmc
outsb
int3
inc
sub
cmp
int3
mov
inc
bnd
dec
pushl
xchg
mulb
movsl
adc
pop
adc
sbbw
mov
in
aas
jno
negl
and
mov
inc
cmc
jns
and
pop
adc
out
addr16
lods
pusha
js
pushf
mov
addl
int
pop
imul
mov
lea
out
pop
out
adc
aad
fdivl
das
pop
ret
sbb
lcall
test
xchg
mov
mov
cwtl
and
fisubrs
in
adc
shll
andl
scas
and
jmp
imul
add
jb
in
popf
or
les
std
fs
mov
xor
mov
xchg
fsubs
push
cmpsb
mov
lods
jmp
in
xchg
cs
leave
xor
imul
jns
mov
xor
out
xor
lret
pop
hlt
scas
enter
js
in
pop
mov
gs
or
outsl
mov
rcrl
ret
cmp
jmp
test
fnsetpm(287
pop
fs
or
popf
lods
hlt
jmp
pop
test
dec
lret
ljmp
pop
sbb
lahf
inc
sti
mov
in
jne
arpl
and
icebp
push
sbb
outsl
negb
fstpt
jno
xor
fnstenv
cmp
outsl
daa
out
pushw
sbb
orb
add
rcrb
test
aam
cmpl
or
push
mov
cmp
in
rclb
enter
aas
pop
mov
loope
dec
imul
inc
adc
pop
xchg
out
jnp
pop
sbb
bswap
sbb
imul
pop
orb
and
je
test
test
out
push
aam
pop
sub
and
push
shl
push
insl
cmp
fimuls
test
sbb
cli
or
lahf
sbb
mov
push
scas
mov
mov
mov
xchg
cmp
cmp
cli
aaa
jge
nop
dec
fisttpll
test
sub
and
cmp
lahf
movsb
div
shrb
cmpsl
jmp
jg
addl
push
cltd
mov
mov
xchg
xor
or
mov
and
xor
sti
or
mov
cmpsb
fwait
stos
shll
insl
or
inc
push
jp
pushf
das
lret
testl
aad
orb
xchg
sti
mov
xor
iret
xchg
add
push
decb
pop
call
xor
or
inc
xor
idivl
xor
sbb
lock
xor
lods
stos
in
ljmp
cmp
pop
dec
aaa
dec
inc
negl
push
mov
and
jnp
inc
xchg
or
movsl
sbb
lahf
mov
dec
mov
aam
xor
mov
fistl
fdivrl
mov
int3
bound
movsb
sub
rcr
xor
in
fisttpl
sbb
adc
movsb
int
sahf
cmpsb
icebp
cmp
outsb
xor
or
hlt
out
sar
sub
sbb
xor
jbe
xorl
call
scas
cs
movsl
in
xchg
jp
lcall
dec
stos
push
stos
mov
mov
xchg
nop
mov
mov
lcall
fstps
mov
je
clc
arpl
aaa
jp
jb
iret
sub
fs
pop
mov
cmpsb
xchg
cmp
pushf
push
outsl
mov
pop
jl
adc
imul
mov
loop
js
pop
mov
mov
sub
push
gs
lret
inc
addr16
inc
dec
es
push
or
xlat
push
inc
aaa
lea
xchg
ret
or
inc
into
dec
inc
fwait
sbb
and
mov
loop
es
cmp
sarl
cmp
mov
mov
and
xchg
in
mov
add
mov
sbb
mov
loope
pop
iret
mov
cs
imul
fstpt
cli
das
xchg
adc
mov
xchg
iret
out
and
outsl
adc
fcompl
adc
pop
sbbb
xlat
push
shrl
xor
lcall
sbb
xchg
jge
pop
xchg
aaa
jne
outsl
add
xor
es
int
insl
clc
lds
adc
gs
pop
jl
add
lret
mov
and
or
rcrl
das
dec
pop
mov
add
inc
or
jnp
in
das
xorl
sbb
xor
test
ret
dec
call
int3
cmp
and
ror
xchg
xor
xor
mov
popa
xor
inc
cmp
lds
sub
cli
dec
sub
push
lods
pop
pop
pop
inc
xchg
push
mov
push
and
push
enter
xor
fsubr
in
jp
or
jnp
mov
cmp
jg
xor
adc
mov
stos
leave
mov
cld
mov
vpmullw
sahf
sub
fucomp
dec
push
jge
inc
idivl
or
or
inc
aas
and
pushf
mov
jns
pop
pop
fcmove
mov
cmp
insb
add
sub
test
lods
mov
push
in
mov
cmp
adc
pop
push
stos
or
dec
mov
in
aad
mov
inc
fs
les
sbbl
sub
inc
test
testl
cwtl
decb
fcmovne
add
jmp
filds
sbb
ret
mov
jne,pn
in
icebp
sub
in
sti
and
pop
loope
clc
in
jne
fdivrs
cltd
pop
popf
cmp
iret
testl
fwait
lods
pop
sbb
out
pop
push
ret
sahf
lret
lea
xchg
ret
or
addr16
mov
add
lds
inc
mov
das
iret
jecxz,pn
mov
or
mov
test
fadd
mov
sbb
es
ljmp
xchg
or
repnz
adc
lret
inc
sbb
inc
test
imul
cmp
pusha
mov
cld
push
mov
mov
cmpsb
into
repnz
lods
fwait
cld
sub
pop
pop
pop
sub
pop
dec
aaa
dec
clc
cmp
insb
jo
xchg
fnsave
fsubs
ret
add
clc
xchg
jno
mov
add
ljmp
push
repz
aad
fs
daa
ret
jmp
xchg
adc
movsb
inc
push
out
mov
xor
push
sub
jns
imull
imul
dec
push
xor
jecxz
aas
jl
lret
xor
or
shll
jnp
cmc
xor
adc
push
xor
sub
adc
mov
mov
adc
dec
insb
mov
les
pop
mov
add
dec
loope
push
lcall
jmp
icebp
sub
sbb
xchg
lods
sbb
adc
mov
add
notb
notb
arpl
jl
pop
jae
inc
push
jl
pop
sbb
in
test
mov
das
xor
or
dec
mov
clc
push
rol
addr16
xchg
shlb
call
inc
es
cld
negb
xorb
pop
cltd
pop
ret
mov
mov
stos
push
shl
dec
insl
mov
push
pusha
jns
and
add
push
dec
inc
daa
test
mov
fists
cmpsb
popf
add
mov
shr
ss
cld
mov
std
push
aas
inc
xor
cmpsb
xchg
in
cmc
daa
jne
nop
aam
jnp
clc
mov
sub
inc
jne
fiadds
xor
sub
mov
jmp
adc
mov
popf
push
sub
js
fmulp
adc
loop
push
push
mov
and
lods
out
cmpsl
js
jbe
je
push
jmp
ficompl
fnsave
rorl
std
outsb
xchg
push
int
push
enter
adc
and
stc
cmp
fmul
push
dec
add
dec
push
xchg
int3
movsb
sub
pop
rcll
jns
aas
cmp
popf
xor
jmp
xchg
dec
ja
xlat
pop
pop
xor
in
les
pop
imul
pop
scas
xchg
pushf
movsl
jl
push
mov
jae
push
and
ss
sub
das
outsl
push
mov
inc
sbb
aad
rorb
fisttpll
stos
adc
xchg
lret
push
mov
addr16
out
mov
inc
ror
fidivrl
flds
adc
cmp
sbb
pushf
mov
adc
push
mov
dec
mov
pusha
pop
inc
mov
or
cli
add
orl
lds
sbb
int3
aas
ret
fsubrp
jns
insl
je
and
adcb
adc
cmp
call
mulb
add
mov
add
mov
adc
fwait
jl
outsb
sub
clc
aad
hlt
dec
inc
movsb
push
fsubs
scas
jne
push
testb
aam
int3
jmp
fs
stc
out
out
push
adc
add
sub
jl
out
fnstsw
in
and
inc
into
es
inc
mov
jbe
popf
js
mov
icebp
icebp
scas
mov
add
movsb
push
and
xchg
leave
push
ret
dec
cmp
xchg
sub
out
cmp
mov
jecxz
and
outsl
mov
push
mov
ret
icebp
cmpsl
test
lea
cmc
sbb
fstpt
mov
cmp
dec
sub
repz
and
pop
sub
aad
out
or
mov
push
test
push
ret
and
les
ret
jo
cmc
into
dec
mov
lahf
dec
arpl
aas
and
or
sbbb
rcr
add
daa
mov
pop
aas
push
repz
push
inc
sbb
mov
add
push
es
dec
sub
outsb
dec
mov
lea
lods
or
lods
cld
jge
sub
push
and
leave
mov
cmp
cmp
mov
cmpsb
popf
xchg
cmp
sub
test
sub
jae
jo
insb
mov
into
insl
fwait
or
rolb
movsb
imul
scas
inc
jo
and
repnz
cmp
xchg
and
adc
jge
adc
lret
and
pop
pushf
clc
cmovbe
scas
dec
xor
xor
xchg
push
das
xlat
sub
dec
xor
cmpb
outsb
iret
push
adcb
fdiv
cmp
pop
pop
inc
lock
xchg
mov
loopne
jb
outsb
icebp
out
sub
out
mov
lahf
push
insb
movsb
hlt
mov
sub
add
and
aaa
sbb
adc
and
hlt
lods
sub
mov
pop
out
mov
cmp
xchg
leave
adc
pop
sbbb
xor
sahf
cmp
into
mov
mov
insl
adc
pop
push
loope
aaa
push
loopne
mov
cmpsb
dec
or
lahf
inc
filds
jmp
push
fwait
jnp
sub
dec
ret
cli
xlat
mov
test
enter
dec
pop
addr16
xor
loope
cmp
aaa
add
cs
dec
cli
rcll
pushf
iret
inc
pusha
adc
xchg
sahf
sub
xor
cld
push
flds
es
or
mov
outsl
adc
cltd
sub
imul
sub
rorl
add
aad
pop
out
daa
cwtl
popa
pop
test
jle
xchg
orl
test
clc
fistps
test
cmp
outsb
out
in
leave
lods
sbb
imulb
mov
lahf
pop
sub
insl
mov
in
cmc
gs
or
push
push
addr16
dec
push
xchg
pop
cmp
or
mov
loop
mov
mov
in
ss
loopne
or
dec
sub
or
sbb
ja
fistl
test
sbb
test
jb
inc
imul
push
mov
add
cmc
test
ds
sbb
inc
sub
sti
push
lcall
sub
arpl
pop
pop
in
xchg
dec
adc
mov
lret
scas
and
and
jg
sbb
mov
sub
xchg
mov
adc
sarb
or
adc
daa
pop
dec
mov
jnp
add
mov
sahf
adc
fildl
xor
xchg
mov
shll
stc
mov
or
lret
movsb
mov
psrad
aaa
or
pop
stos
arpl
ret
popa
adc
aad
sub
cmpsl
dec
js
lods
sbb
add
jp
mov
add
ffreep
push
push
mov
mov
movsl
pop
aam
jle
mov
repz
mov
pushf
jne
xor
push
cs
pop
aaa
add
clc
mov
sub
sub
mov
cltd
pop
int3
or
push
sub
loopne
sbb
aad
cltd
fs
repnz
in
fnstenv
push
jno
bound
push
cltd
adc
xor
test
out
daa
loope
adc
mov
cwtl
jno
aam
mov
jge
test
pop
xor
shll
pop
fstpl
sbb
xchg
and
sbb
outsb
add
loope
pop
pop
jg
pop
mov
lret
rorl
xor
test
dec
sti
test
cmpsb
fnsave
jp,pt
cmp
aad
jp
test
rol
sub
push
ss
cmp
in
movsl
mov
and
fidivrs
mov
sub
stos
mov
je
pushf
outsl
lods
jl
and
mov
fucomip
mov
xchg
inc
gs
sub
adc
mov
xchg
fwait
pop
rcrl
cld
push
aam
es
in
popf
jecxz
divl
xor
jae
xor
enter
stos
lret
mov
fld1
into
cmc
or
mov
sub
loope
lds
sub
sahf
push
push
sahf
mov
into
mov
les
out
push
mov
dec
lods
cmp
mov
dec
daa
jge
push
pop
psubusw
and
subb
jl
cmpsl
xchg
mov
sub
xchg
imul
inc
sub
jecxz
sahf
aam
cmp
sbb
test
sbb
push
enter
loopne
jns
cli
push
insl
jno
add
xor
dec
mov
sub
sub
rol
fsubr
add
xor
adcl
std
int3
sub
inc
xchg
out
test
sub
dec
dec
decl
add
inc
shll
adc
adc
lret
mov
lahf
push
outsb
psubusb
aam
xor
pop
dec
inc
cltd
hlt
sub
mov
cmc
ljmp
and
push
mov
leave
ds
jp
ficoml
imul
jno
add
fs
fstpt
mov
call
ljmp
and
or
push
bound
or
mov
inc
xchg
addr16
xor
fadd
test
lahf
inc
pop
outsb
push
ja
decb
aad
imul
dec
jmp
xchg
and
hlt
dec
in
push
xchg
and
add
arpl
int
jae
cmpsl
loopne
mov
sbb
push
nop
push
roll
push
pop
jg
xchg
shl
mov
outsl
mov
scas
cmp
nop
sbb
jo
setbe
cmpsb
mov
mov
or
cmpsb
jl
adc
sti
push
xchg
cmpsl
aad
mov
sub
jae
imul
into
int3
push
mov
pop
push
popa
pop
sub
pop
sbb
popf
hlt
jle
fwait
pop
xor
movl
ret
stos
int3
ss
roll
add
nop
mov
sbbb
cld
fwait
adc
jg
or
js
daa
pushw
icebp
add
jl
cmp
sahf
hlt
inc
push
sbb
test
or
out
mov
sbb
fdivs
cmpsl
pop
jne
popf
mov
imul
push
jmp
fcomps
adc
and
dec
ljmp
xor
loope
pop
movsb
sarl
mov
imul
lahf
xchg
jmp
pop
mov
repz
xor
in
fbstp
xchg
cmc
pop
jbe
test
cltd
cltd
faddl
xor
in
fwait
add
lret
cs
stos
push
rorl
adc
mov
cli
jmp
pop
jp
sbb
sahf
cltd
cmp
push
jne
mov
ljmp
sub
and
inc
addr16
js
sub
int3
les
sbb
gs
rol
dec
inc
cmc
fnstcw
jg
xorl
in
xchg
in
aas
movb
in
ret
xchg
outsl
xchg
mov
leave
iret
jnp
xor
sub
bound
pop
mov
push
pop
stc
inc
cs
lret
popl
enter
pop
xchg
js
pop
pop
xchg
ds
outsb
pop
int3
xchg
sbb
dec
mov
or
mov
je
mov
adc
jb
jp
pop
cli
hlt
test
jno
dec
pop
xor
mov
mov
jne
push
lods
in
dec
fiadds
mov
fiaddl
mov
cs
cmp
sub
icebp
ss
add
and
or
dec
test
icebp
pop
push
les
pusha
push
push
mov
or
out
jns
cmpsb
nop
pop
dec
jb
das
outsl
popa
fsubrs
inc
mov
push
mov
ss
push
ds
lea
call
sbb
jl
test
fdivrs
in
sub
lret
push
push
out
jo
imul
adc
es
sbb
test
clc
ss
movsl
call
mov
cmpsl
enter
rclb
fwait
adcl
mov
fstpt
pusha
lods
jle
iret
div
mov
push
pop
out
fdivl
lahf
icebp
ret
sbb
mov
push
sti
mov
sbb
std
data16
mov
cwtl
mov
mov
sbb
add
les
bound
movsb
ficompl
dec
mov
mov
pop
push
xor
dec
sub
jns
mov
mov
mov
fld1
ds
cmp
mov
scas
ss
mull
ficomps
shlb
cltd
mov
shll
xor
cmp
sub
out
sub
pop
fidivl
adc
mov
clc
xchg
std
mov
xchg
dec
dec
push
mov
arpl
daa
mov
adc
insl
push
xchg
jge
and
xor
shl
fbstp
int
out
frstor
iret
fidivs
data16
mov
lds
xchg
lods
mov
mov
cmp
lods
notl
popf
lods
jle
cli
and
dec
sar
aam
decb
mov
jnp
push
jbe
and
sbb
cmp
sub
add
fs
push
in
mov
and
inc
mov
jns
add
mov
push
push
mov
xor
sub
dec
inc
add
aas
mov
sub
mov
xchg
lcall
pop
jb
mov
jb
jne
push
cmc
add
out
rcrb
clc
jg
in
mov
js
xor
adc
fisubs
fists
jge
cli
pop
in
pop
inc
arpl
or
push
cmp
rcl
scas
pop
repz
add
dec
ss
idiv
sbb
iret
out
fildl
inc
xor
or
lret
mov
ja
mov
sbb
sub
in
nop
sub
dec
adc
ljmp
cmpsb
fidivrl
das
inc
shll
pop
in
push
or
jecxz
cmp
jbe
xchg
mov
lock
cmc
lods
loope
cmp
ret
add
cmc
das
popf
xchg
aad
adc
test
xchg
sbb
mov
nop
inc
add
dec
mov
je
jno
dec
mulb
and
stos
addb
inc
movsl
add
xor
insb
sbb
add
mov
out
sub
cmp
cld
dec
mov
dec
int
int3
mov
mov
loop
push
mov
aaa
add
mov
pusha
add
lods
sbb
fsubrp
pushf
cmpsl
fisttps
outsl
push
or
in
and
mov
stos
xor
sti
pop
loopne
or
lds
mov
push
enter
and
mov
ret
pop
repnz
aad
ret
inc
mov
mov
sahf
or
arpl
push
test
in
out
pop
and
je
aaa
mov
repnz
jne
push
lods
ret
ret
sub
add
mov
dec
cmc
out
fwait
enter
cltd
adc
mov
push
cmp
into
adc
aaa
call
push
dec
shll
insb
into
fsubp
mov
je
fsts
test
push
cmp
sub
mov
xchg
out
cs
inc
popf
cwtl
cld
pop
inc
sub
ret
push
scas
addr16
dec
cmpsb
push
push
or
shr
dec
ds
jecxz
rcr
sub
cmpsb
xor
dec
cmp
mov
stos
xchg
negl
cmpsl
sub
fldenv
fwait
sarb
push
out
fiadds
popf
loopne
xor
xor
lock
mov
fdivl
enter
cmp
idivb
arpl
cwtl
in
mov
pop
push
cmp
out
jnp
mov
adc
jb
mov
cld
ret
dec
mov
pop
or
pusha
xchg
mov
xor
jns
push
add
aaa
ljmp
movsb
sub
sbb
ja
jge
sbb
dec
mov
jbe
mov
int
popf
xchg
mov
out
clc
cwtl
inc
sahf
push
clc
pushl
addr16
and
dec
cmp
push
cmp
loopne
xor
mov
jmp
cmp
scas
aaa
bound
mov
nop
enter
pop
add
add
fldlg2
push
fsubl
mov
incb
loop
imul
adc
sbb
add
cmp
push
pusha
ljmp
sti
sub
inc
and
test
and
fdivr
popa
inc
inc
mov
loop
jle
sbb
add
inc
jmp
push
mov
sbbb
rclb
stos
test
mov
addr16
into
pop
mov
mov
xlat
xchg
cmc
cs
jp
sarl
insl
int3
test
cld
ss
inc
push
mov
jge
lods
repz
jl
shrl
out
inc
aam
sub
push
shll
inc
mov
addb
int
jo
xchg
subl
sbbl
sub
pop
add
push
mov
mov
jns
and
mov
pminsw
mov
jae
pop
jno,pt
mov
jne
inc
push
pop
inc
and
das
xchg
in
out
in
arpl
insl
pop
and
movsl
mov
lcall
mov
mov
nop
mov
xchg
scas
das
popf
dec
sbb
pop
push
jo
cmp
in
fyl2xp1
repz
or
xor
or
out
fildl
cmp
sbb
sub
jp
std
inc
adc
lahf
ljmp
inc
or
jmp
call
js
or
xor
jecxz
lahf
cmp
mov
or
nop
xchg
stc
out
hlt
fadds
arpl
sbb
loop
xchg
clc
push
repnz
repz
xlat
adc
daa
scas
lea
fwait
mov
jmp
or
cmp
mov
ljmp
hlt
dec
loop
mov
cmp
adc
mov
and
adc
sub
jns
push
jmp
dec
mov
adc
mov
leave
shl
xor
test
xchg
mov
jge
or
clc
and
lods
enter
and
icebp
cli
pop
rclb
insb
xchg
mov
lcall
insb
movsb
addr16
jg
scas
pusha
pop
cmc
loope
sbb
repnz
test
into
xor
xchg
lcall
jg
push
and
inc
cld
xchg
lods
lret
popf
in
daa
aaa
mov
lds
in
dec
movsb
test
addr16
adc
mov
cmp
lea
sub
fdivl
pop
out
rcrb
push
push
int
sti
hlt
cmc
jmp
xchg
jg
jl
add
cmp
addr16
cmp
pop
jne
push
xor
inc
arpl
pop
xor
jns
push
jmp
loope
dec
pop
xchg
add
fadds
insl
out
cmc
adc
imul
sbb
pop
sbb
dec
movsl
aaa
sbb
lcall
mov
mov
ja
jmp
xor
xorl
add
push
sbb
inc
subb
cwtl
mov
adc
outsb
pop
or
add
pop
fsubr
filds
std
xor
mov
inc
cmp
xchg
inc
mov
dec
dec
jb
hlt
ja
hlt
cli
mov
adc
cmp
mov
cld
iret
in
xor
pop
add
mov
shr
push
cmp
scas
mov
add
mov
push
dec
pop
scas
imulb
jle
fcmove
mov
ficoml
sub
mov
jmp
cmp
push
and
mov
sbb
scas
jl
fmuls
adc
and
dec
push
ficompl
xchg
mov
push
fcoms
jp
mov
popa
mov
movsl
fdivs
mov
or
rcrl
push
je
cmp
repnz
mov
addr16
and
push
pop
stos
mov
xchg
pop
mov
mov
cmpsb
xchg
fs
pop
cmp
mov
pop
and
outsl
dec
popa
in
xor
mov
xor
das
pop
pusha
xor
pusha
clc
ret
mov
adc
dec
mov
add
xchg
ds
les
popl
gs
or
dec
in
push
inc
xor
clc
mov
mov
stos
pop
loop
or
fists
out
clc
sub
add
gs
sbb
aad
cmpsl
push
mov
repz
dec
xorl
cmp
adc
mov
mov
dec
mov
sbb
rcrb
arpl
rol
cmp
filds
stos
fcom
and
sub
mov
adc
jle
and
out
iret
test
sbb
dec
jno
test
clc
in
sub
dec
push
push
sub
addr16
pop
cmp
test
clc
popl
push
jb
dec
das
scas
jno
dec
dec
addr16
stc
out
add
shll
mov
or
mov
test
ss
xlat
sbbl
aas
xchg
push
fwait
icebp
stos
dec
or
insl
cmpsl
xchg
call
ficoml
xor
cmp
sub
nop
dec
and
ficoms
mov
jmp
lock
test
lahf
pushf
jb
repnz
jo
clc
lods
mov
or
data16
repnz
cld
pusha
inc
mov
add
in
and
jbe
repnz
mov
xor
sbb
or
pop
popf
cmpb
inc
stos
in
inc
fimull
jp
cmp
or
loope
pushl
outsl
inc
push
add
roll
imul
cmc
add
rcl
dec
sbb
ret
pop
xchg
sub
out
sahf
mov
addr16
cmp
push
xchg
mov
test
test
loopne
stos
mov
or
jp
cmpsb
or
push
jo
mov
fdivrl
or
or
movb
pushf
sub
sahf
sub
inc
push
ret
aam
inc
rol
sti
pop
rcl
pop
in
xor
inc
add
mov
push
and
cmp
cmpsl
in
pop
push
popf
stc
pusha
pop
fnstsw
sahf
xor
sub
push
push
mov
in
xchg
or
pop
fnstenv
push
xchg
out
cmpsl
iret
stos
shll
data16
inc
mov
jp
xor
mov
sbbl
xchg
rcr
dec
aad
xchg
cmp
inc
ret
popf
das
sar
pop
outsb
inc
in
sbb
push
ret
ja
fidivs
fnsave
push
add
jmp
lods
cmp
or
test
rcrb
scas
das
shrl
lcall
pop
test
cltd
xor
inc
xor
pop
div
repz
iret
xor
pop
sub
jns
dec
addr16
mov
aad
outsb
movsb
push
mov
test
scas
addl
jnp
in
cwtl
enter
mov
jmp
cld
iret
scas
int3
hlt
orl
test
xchg
pop
data16
and
lods
insb
enter
and
or
mov
xchg
mov
repz
lock
mov
jl
adc
fbld
aaa
push
sub
mov
push
jl
cltd
mov
lea
dec
stos
outsl
ret
rcll
dec
jb
movsl
les
pop
sbb
jno
adc
mov
sub
cwtl
shlb
imul
add
push
mov
cwtl
xor
xor
scas
ja
int3
and
push
lcall
out
lds
mov
shll
out
xchg
addr16
in
loopne
stc
mov
das
xchg
mov
or
dec
xor
in
mov
cwtl
or
adc
aam
enter
add
or
jb
jecxz
iret
xchg
jmp
adc
xchg
sbb
push
or
fdiv
das
or
sub
fcompl
test
test
sbb
rcr
test
nop
push
jp
sub
stos
gs
outsb
lahf
cmp
stc
fidivrl
mov
and
cmc
arpl
mov
fnstsw
jmp
int
cmp
mov
bound
dec
mov
outsl
push
aam
leave
cwtl
jge
int3
cltd
icebp
cld
inc
jl
or
or
cmp
out
shrl
and
mov
mov
or
loope
jg
sub
popa
push
pop
cltd
test
arpl
and
int
jo
mov
add
daa
sub
or
in
dec
jbe
and
dec
mov
jl
cmp
inc
lea
fmulp
jae
push
jbe
adc
cmpsl
es
dec
icebp
cld
cmp
push
test
pop
sub
mov
outsl
fisubs
dec
inc
cmp
cld
sahf
lock
xlat
jl
mov
sbb
mov
push
mov
daa
bound
jno
cmp
shrb
cmpl
sub
adcb
leave
mov
es
jmp
push
dec
loopne
daa
or
xchg
sub
and
sub
push
enter
ja
mov
mov
push
mov
push
dec
lds
ret
cmp
pop
cwtl
or
cmp
cmp
clc
cli
inc
lods
mov
subl
push
adc
imulb
pop
and
mov
xchg
or
inc
dec
test
movsl
mov
enter
pop
call
pop
pop
mov
mov
imul
jp
movsb
mov
movsl
nop
xlat
and
ret
in
pushf
pop
in
pop
rorl
aad
cmp
xor
inc
jmp
push
enter
call
cmp
inc
or
cwtl
mov
xor
sbb
sub
mov
inc
orl
aas
xor
sub
and
in
lods
sahf
or
jnp
or
sahf
jbe
push
cmp
push
and
xchg
lcall
loope
pop
adc
dec
ljmp
sub
xchg
outsl
push
rcrb
sub
lcall
shlb
test
movsl
int
jg
pop
mov
add
jns
mov
cli
push
and
mov
ret
jae
out
mov
xchg
dec
or
inc
xchg
pop
sbb
cmp
or
cmpsb
mov
add
int3
xchg
xorl
mov
ja
ficomps
and
sbb
dec
insl
mov
xchg
cmpsl
ds
dec
cli
divl
jmp
insl
lds
outsb
and
test
movsl
push
inc
jae
dec
pop
xchg
pop
pop
inc
xor
addr16
lods
fisttpl
lret
lock
movsl
fistl
dec
xor
or
int3
lods
cmp
add
into
mov
and
xor
ljmp
aaa
scas
sti
cmpsl
in
jmp
lock
mov
adc
adc
push
cli
inc
mov
fcmovbe
jp
call
test
jo
fnstsw
cli
lret
repnz
divl
adc
mov
inc
mov
aaa
add
fsubs
mov
movl
sbb
idivb
and
out
insb
test
mov
pop
mov
inc
mov
addl
cwtl
pushl
add
bound
cmp
movsb
and
ret
mov
inc
adc
pop
dec
adc
ds
mov
xor
insl
out
ljmp
xlat
mov
mov
jo
cli
fsubr
mov
mov
add
adc
dec
xor
push
sub
loopne
mov
icebp
xchg
inc
leave
mov
lods
enter
sbb
and
iret
push
daa
sbb
push
jg
subl
xchg
push
inc
dec
inc
subb
cmpb
mov
push
outsl
push
inc
cmp
cmp
stos
dec
jl
sub
shlb
push
mov
lock
mov
mov
and
dec
nop
mov
outsb
push
sub
adc
movsb
repnz
xchg
push
jno
loope
cli
inc
cs
enterw
jns
mov
xor
aaa
cmp
sbb
mov
dec
inc
aas
sub
inc
mov
into
push
xchg
scas
sub
enter
adc
dec
je
call
mov
sub
add
mov
in
jae
or
sahf
addl
lret
mov
mov
jl
xchg
insb
shll
jecxz
jge
in
shl
jmp
lea
or
int
outsb
pusha
mov
sub
cltd
cmp
jns
pop
inc
push
add
or
mov
addr16
aad
mov
sub
xor
enter
ret
cld
popa
movsb
das
sub
andl
jecxz
jle
jecxz
cmp
rorl
jl
popa
add
int
mov
outsb
cmp
arpl
test
cmp
mov
fdiv
movsl
leave
xor
sbb
mov
lcall
mov
add
in
test
pop
mov
mov
psubsb
stos
call
mov
fwait
mov
popf
sbbb
gs
btcl
pop
arpl
aas
fnstsw
mov
mov
sub
mov
adc
push
sub
js
loope
mov
mov
adc
call
jns
movsb
loope
lock
add
insl
mov
sub
scas
push
pop
adc
scas
pop
xchg
pop
cmpsb
repz
pop
sbb
popf
jecxz
mov
dec
xchg
aam
push
aam
lock
je
dec
jl
sbbl
inc
pop
sar
cmp
ja
lds
mov
sbb
xchg
sub
mov
pop
jle
stc
mov
pop
mov
loope
pop
cmp
inc
shlb
xchg
lods
jns
sahf
and
js
in
mov
push
cld
adc
ds
sub
cmp
enter
mov
cld
mov
xchg
mov
cmc
or
hlt
scas
bound
push
mov
pop
jb
loop
fmulp
and
push
dec
cmp
mov
xchg
ret
sub
loope
xor
stc
xor
cmp
mov
xchg
sub
adc
mov
mov
dec
jns
xchg
out
xor
jnp
shrb
mov
sbb
shll
adc
das
outsl
push
cld
mov
pop
inc
dec
xor
subb
mov
xchg
aaa
roll
nop
mov
jmp
sbb
repz
cmc
sub
fdivl
mov
jge
xchg
mov
cmp
pop
fistpl
add
bound
push
and
lret
lods
shrl
sbb
jecxz
pop
imul
int
stos
repnz
pusha
sbb
cmp
inc
lods
out
lcall
int3
jae
adc
fldt
mov
sti
int3
jecxz
out
sarl
jo
mov
dec
push
and
jle
cmc
imul
test
push
pop
add
cmp
int
inc
jae
movsl
test
sti
rclb
jecxz
push
mov
xor
add
sbb
mov
mov
loop
push
nop
pop
dec
out
movl
jns
in
mov
notb
bound
xor
test
pop
jmp
cmp
cmpb
pushf
incl
cmp
lea
into
adc
xchg
cltd
test
fucom
mov
sbb
mov
fwait
dec
mov
fldcw
pmaxub
lret
pop
xor
imul
js
sub
test
cmp
xchg
mov
xchg
test
popf
mov
cmp
xor
cmpsl
in
es
xor
test
xchg
pop
xor
pop
xor
pushf
in
mov
mov
xor
sti
addb
out
scas
pop
or
cli
divl
int
ss
faddl
call
fldl
xchg
xchg
fldl
ret
in
outsb
dec
mov
dec
lods
aad
test
test
xchg
repnz
mov
pushf
lea
sbb
testl
pop
repnz
mov
or
inc
test
sub
mov
pop
in
dec
rol
sahf
add
rcrb
jb
out
dec
xchg
mov
dec
movsl
mov
dec
iret
in
mov
add
mov
mov
adc
push
adcl
push
mov
pop
nop
xchg
and
sub
inc
fwait
xor
pop
jae
push
add
adc
stc
ss
adc
jbe
and
ja
mov
push
sub
fisubs
adc
cmpl
out
sub
icebp
ja
or
arpl
daa
dec
shrl
or
adcl
out
jecxz
sarl
xchg
aam
cs
imul
xchg
pop
xor
push
mov
cmp
adcb
xor
mov
xchg
sahf
stc
sbb
mov
repz
in
fstpt
and
repnz
jp
xchg
or
mov
fldl
scas
mov
daa
mov
adc
add
xchg
les
addr16
jl
jae
insl
int
in
cmp
fwait
pop
shll
nop
xchg
ss
std
icebp
sub
hlt
xchg
mov
mov
mov
insl
aad
out
jo
inc
jbe
dec
outsl
inc
es
addr16
dec
insb
cmp
cli
cmpb
jns
in
std
and
pop
xchg
movsl
fiadds
cmp
in
jp
cmp
mov
mov
xchg
repnz
xor
in
or
leave
pop
test
js
ficoms
xchg
inc
popf
sbb
fmul
or
out
cld
pop
pop
add
mov
dec
sub
repz
outsb
mov
xor
aaa
in
lea
rclb
psadbw
mov
les
mov
mov
xchg
push
push
xlat
mov
icebp
addr16
cli
xor
ljmp
or
jnp
mov
cmpsl
add
daa
dec
jge
movsl
lock
lcall
vandnps
adc
lods
push
push
mov
xor
cltd
sarb
add
popa
dec
xor
mov
sbb
fnsave
je
filds
ja
sbb
fs
lods
gs
fldcw
idivb
incl
xchg
test
jne
scas
sub
mov
cmc
mov
adc
lds
lret
dec
sub
popa
inc
jl
jge
push
shlb
cmc
adc
xchg
xor
gs
das
fistpll
pusha
jb
shlb
movsb
stc
and
xor
pop
std
rcrb
sub
adcb
xchg
cmp
shll
sbb
into
ret
dec
fwait
cmpsl
or
mov
cmp
mov
sub
push
lods
sar
mov
push
ljmp
jp
test
addr16
movsb
and
aas
pushf
mov
sub
jns
push
adc
inc
fs
xchg
addb
mov
sbb
lds
sbb
mov
sub
push
sub
jl
xchg
inc
repz
mov
sbbl
and
lods
jae
arpl
xchg
push
pop
in
sahf
sar
mov
inc
in
push
cmp
xchg
les
mov
fcmove
aam
ficomps
arpl
sbb
lea
divb
sti
jo
mov
xchg
scas
jmp
fdivr
and
addl
in
mov
mov
push
add
mov
jecxz
das
jecxz
and
jecxz
lret
fcomip
repz
fcompl
jns
decl
lods
push
outsl
cmp
and
add
mov
sbb
leave
in
fnstcw
cmp
fnstcw
adc
insb
cmc
popa
dec
mov
stos
lret
mov
scas
sub
fimull
xor
sbb
pushf
lret
xchg
into
ret
sahf
int
jl
push
sbb
movsl
or
ret
out
inc
fs
and
inc
sub
cs
dec
mov
imul
jecxz
pop
sub
loopne
enter
flds
mov
or
adc
mov
inc
loop
loop
inc
enter
jp
mov
jne
div
jg
xchg
fcmove
test
jge
stos
add
movsb
loope
sbb
xchg
push
xor
dec
xor
jnp
push
push
lods
popf
push
insb
sub
notl
push
inc
jno
in
pop
xor
mov
jo
and
pushf
fsubrs
mov
pop
sbb
outsl
push
mov
xor
mov
adc
xchg
cmp
sbb
pop
or
xor
push
pop
outsb
xor
or
jno
lock
pop
pop
not
dec
rcrb
movsl
mov
idivl
jbe
fisubs
xchg
fs
shll
fucomip
out
ret
mov
push
lret
xor
call
ficoms
in
sbb
inc
lods
pop
push
xor
xchg
cmc
lock
ss
or
rcrb
mov
sub
push
dec
mov
ja
movl
movsl
sbb
add
inc
sub
fdivl
fsubrl
jne
adc
cmp
adc
xchg
xchg
test
cs
and
sti
insl
or
lock
mov
mov
out
cwtl
cltd
cmc
sbbb
out
insl
sti
xor
movsl
cmp
fcmovbe
popf
push
scas
imul
mov
sbb
and
into
xchg
add
test
cmc
imul
cli
sahf
mov
pop
test
fs
push
ds
or
mov
adc
dec
mov
int
in
cltd
leave
popf
mov
xor
pop
jp
inc
sbb
mov
push
aad
repnz
fwait
test
mov
pop
jecxz
imull
pop
mov
and
mov
push
jge
sub
mov
jno
fsubrs
pop
jb
data16
jnp
in
mov
or
dec
fdivl
lock
fdecstp
leave
lcall
or
sub
aas
dec
repz
push
dec
gs
jno
in
mov
lahf
repnz
jnp
inc
hlt
mov
add
xor
lods
sbb
sub
sbb
lret
cwtl
push
fwait
mov
dec
push
xor
xor
in
out
test
call
ja
cltd
arpl
inc
cmpsl
jb
imul
and
shrb
xchg
imul
xor
jg
xchg
sti
pop
xchg
mov
jb
mov
add
mov
into
xchg
int
push
inc
outsb
arpl
movl
add
xor
pop
lcall
mov
aas
jns
repz
fcoms
fisubrs
addr16
cmpsl
mov
or
mov
popa
fnstenv
fsubrl
mov
int3
add
subb
imulb
jl
mov
jne
cltd
sub
lret
cmp
bndldx
add
jb
in
cmp
adc
fidivl
ss
orl
xchg
push
sbb
movsl
or
lds
mov
dec
aas
cmp
ja
jb
lea
xor
mov
dec
mov
loopne
xchg
jbe
cmp
push
jne
repz
pop
data16
jnp
aas
repz
jnp
cmp
dec
xlat
clc
jg
inc
dec
cmp
cltd
fisttpll
adc
jmp
adc
es
jae
loopne
shlb
sub
mov
xchg
push
xchg
jno
pop
pusha
lahf
dec
stos
sub
inc
nop
add
push
test
lods
addl
lea
cld
dec
mov
popa
mov
mov
rcrl
dec
out
and
xchg
icebp
in
jmp
mov
sbb
stc
lock
fwait
mov
xchg
cld
jns
jnp
fcmovb
sub
ljmp
bnd
popf
push
in
push
mov
rcll
fistps
mov
mov
arpl
jmp
mov
mov
or
sahf
test
or
mov
test
cmc
mov
dec
sahf
and
add
hlt
add
adc
in
mov
inc
xchg
rcll
sbb
sbb
adc
hlt
cmc
lds
or
lret
pusha
sbb
dec
or
shll
inc
jg
lods
cmp
clc
sbb
pop
mov
jmp
lcall
jle
cltd
fidivrs
jmp
outsb
scas
dec
xor
lods
stc
jnp
cmp
sub
fildl
mov
clc
lcall
push
mov
dec
cwtl
adc
rcll
orl
push
in
inc
push
pop
mov
loopne
xor
pop
mov
xchg
nop
jns
xor
fsubl
jp,pn
add
jb
xchg
mov
cmp
sbbb
inc
mov
push
sbb
dec
bound
and
hlt
cmp
lcall
lds
popa
mov
rorb
stc
bound
imulb
lret
pop
bound
test
fstpl
cmc
adc
pop
jle
sbbl
add
jne
in
adcb
in
adcl
fistpl
mov
sbbl
push
xchg
jb
popw
loope
mov
jmp
out
ret
outsl
xor
pushf
inc
dec
rcrb
push
mov
mov
jae
jae
ret
shr
lods
push
in
pop
ret
shr
jp
cwtl
je
push
mov
xchg
push
xchg
ss
xor
sub
in
jge
fidivs
ljmp
sbbl
push
fldcw
pop
in
aaa
lahf
jl
pop
pop
xchg
int
sbb
out
leave
mov
sub
cmpb
pusha
pop
lods
add
sub
jb,pt
pop
sbb
sbb
xchg
icebp
das
lret
mov
push
insl
je
fptan
int
mov
inc
mov
sbb
call
ret
pop
dec
divb
dec
addr16
pop
test
movzwl
sub
xor
inc
pushf
pop
int
and
jle
jecxz
add
dec
das
in
pop
push
dec
adc
pusha
jecxz
xor
das
lret
ret
push
xchg
cld
pop
jecxz
add
sub
mov
fdivs
pop
and
cld
dec
inc
stos
inc
aam
test
xchg
in
dec
push
lods
out
add
enter
pcmpgtb
mov
stc
mov
and
shl
mov
test
mov
inc
test
xor
popa
arpl
repnz
jbe
jecxz
lock
ret
mov
xchg
mov
stc
sub
cmpsl
or
inc
dec
insl
insb
enter
cmp
stos
scas
pop
out
pop
test
adc
xchg
sbb
or
adcb
sbb
out
stc
test
in
mov
cmc
push
adc
mov
mov
out
dec
jbe
les
cmp
leave
mov
adc
arpl
mov
scas
push
insb
mov
jb
jb
xor
fnstcw
bt
imul
insb
mov
cmpsb
sub
popf
inc
punpckhwd
sar
add
mov
cmp
lcall
aaa
iret
push
lds
push
dec
dec
jne
xchg
pushf
out
subb
adc
and
or
subb
stos
bound
mov
mov
test
push
mov
mov
cmp
push
push
dec
pop
shrb
loope
mov
xchg
xchg
jnp
lahf
add
and
jp
mov
shlb
xchg
jo
sbb
push
and
pop
popa
cmpsb
sahf
dec
cmp
mov
jbe
xchg
sar
pushf
hlt
mov
lea
jne
cmp
pop
ja
jle
add
popf
jb
mov
mov
add
pop
aas
test
outsl
adc
hlt
das
or
xor
pop
jg
adc
xchg
scas
sarb
add
add
push
scas
aad
test
pop
nop
xchg
test
sbbl
aad
xchg
sarl
orb
scas
sahf
push
sbb
daa
sbb
pop
cmp
fidivs
scas
lcall
jle
mov
sbb
xchg
inc
fisttpll
lock
dec
mov
test
push
adc
movsb
sti
loop
es
in
iret
fmull
mov
mov
mov
inc
dec
inc
cmp
movsl
sub
imul
push
mov
stos
fsubrs
xor
mov
add
pusha
sti
jbe
cmpsl
subb
lahf
mov
push
outsb
ret
mov
and
sbb
pop
mov
sub
ss
jne
stos
insl
filds
mov
imul
xor
and
or
aas
mov
mov
dec
push
dec
pop
in
xchg
xlat
mov
cmp
fpatan
adc
aas
scas
scas
push
je
pop
sub
stc
pushf
movsb
inc
xor
nop
mov
scas
jb
fcmovu
mov
mov
incb
scas
aam
jg
mov
sbb
mov
lret
pop
mov
aam
cmpsb
sete
jmp
stos
shl
fst
xchg
xchg
mov
cmp
pop
mov
mov
ret
ret
scas
jns
dec
subl
out
mov
mov
sbb
xchg
add
jae
push
popf
add
adc
lock
out
mov
sub
daa
loope
mov
aam
mov
mov
hlt
test
into
fwait
sarb
test
fisubl
iret
mov
or
fldt
into
lods
xor
scas
lods
xor
or
fstp
jo
cmp
fcompl
xor
cmp
xchg
sbb
mov
repnz
icebp
mov
stc
leave
xchg
lret
stos
sub
mov
out
fwait
pop
add
xchg
idivl
fucomip
test
in
jb
call
cmp
jl
sub
adc
sub
jecxz
inc
int3
popa
xor
lcall
jle
testb
push
in
in
es
rcr
fwait
adc
fisttps
loop
xor
mov
mov
dec
in
fucom
andl
pop
xorl
add
mov
fwait
jnp
mov
test
popf
xor
dec
mov
dec
ljmp
call
and
mov
mov
js
cmp
cmp
das
sbb
imul
xlat
jae
mov
inc
fs
aad
and
jge
xor
rorb
adc
sub
call
in
in
mov
call
popa
aaa
test
mov
ja
mov
jge
pcmpgtw
sahf
icebp
dec
mov
inc
jnp
push
and
je
out
out
mov
cmp
neg
xor
stc
and
dec
stos
push
outsb
loopne
dec
adc
adc
loope
xor
adc
js
pop
rclb
loop
lret
and
push
aaa
pop
mov
mov
lret
idivb
shrl
sub
sub
mov
out
push
jl
es
outsl
inc
das
xor
arpl
xor
cmpsb
mov
sub
cs
mov
adcb
shrl
mov
test
scas
stc
and
imul
push
dec
sub
lds
std
mov
testb
mov
arpl
testl
aas
int
enter
pusha
ja
nop
xchg
sub
mov
stc
je
adc
xor
mov
loop
adc
into
in
shl
adc
stc
movsl
dec
xlat
mov
sti
push
push
std
push
cmpsl
sbb
inc
sub
sbb
sub
sti
test
pop
inc
ja
adc
push
xchg
mov
mov
test
mov
insl
stos
orb
mov
out
or
pop
aad
push
or
xor
jg
cmpsl
mov
xchg
inc
mov
shl
stos
std
inc
or
jb
dec
loope
cltd
jns
test
dec
jne,pn
es
xor
jecxz
mov
out
sbb
nop
cmpsb
jg
pop
stos
outsb
orb
in
mov
movsb
ljmp
sbb
cmpsl
lds
inc
and
xchg
iret
and
int
mov
or
stos
lods
adc
mov
xor
ret
mov
fwait
test
xchg
sub
cmp
inc
cmp
sbb
or
enter
jp
cmc
es
outsb
adc
idivb
jnp
mov
fcmovnbe
push
pop
jg
shll
fisttpl
inc
out
jl
bound
mov
jb
lret
inc
mov
bound
push
mov
push
imul
xchg
cli
div
scas
cmc
clc
add
sbb
adc
mov
ss
int
stc
pushf
aaa
popf
dec
das
or
and
repnz
dec
sub
in
mov
sbb
adc
adc
mov
or
inc
or
cmp
and
mov
mov
push
xchg
inc
insl
hlt
mov
pop
pushf
arpl
xchg
inc
test
test
ds
push
shlb
mov
fnstsw
popf
lret
or
lret
mov
sbb
pop
jns
fmul
enter
xor
jmp
sub
sub
lea
in
dec
cmp
adc
adc
sbb
mov
aam
aam
adc
pop
mov
xor
std
push
cwtl
aam
sub
aad
leave
in
out
cltd
fistps
xlat
push
hlt
xor
sbb
daa
shlb
or
mov
mov
push
cmp
dec
mov
les
iret
mov
cmp
enter
aas
shrb
inc
mov
cmp
mov
and
and
insb
in
xchg
push
mov
jae
ret
out
pop
dec
loopne
push
sub
aad
xor
aaa
mov
test
add
js
jmp
ret
ds
sbbb
popf
pop
arpl
mov
jbe
imul
nop
add
orl
xor
and
dec
push
ja
sbb
cmp
mov
mov
cmc
int
lret
pop
jmp
ret
xor
push
sbb
jl
or
or
cmpsl
lods
mov
sbb
push
push
loopne
pop
mov
mov
lcall
dec
xor
test
dec
pop
movsb
daa
or
and
pop
push
fwait
inc
push
arpl
cmp
cmp
mul
aas
div
outsb
popa
insl
push
out
mov
mov
test
std
cmp
sahf
pop
push
out
pop
cltd
popf
jo
stc
pop
out
insb
xor
inc
jo
mov
mov
xchg
shr
fstps
stos
cmp
rol
test
or
or
icebp
outsb
sub
push
inc
popf
lret
call
push
ss
and
dec
rorb
xchg
cmpsb
cltd
push
addb
sub
in
add
sub
sbbl
jecxz
fdivrs
repz
add
bnd
ja
js
mov
and
pmulhuw
xchg
pop
roll
jg
clc
out
mov
das
inc
mov
push
inc
stos
xchg
sub
push
cmp
mov
movups
mov
jne
xor
dec
aad
jbe
fsub
icebp
stc
cmp
push
lahf
sub
loopne
das
sbbl
insb
xchg
ljmp
pop
add
lock
xchg
ss
xor
push
pushf
jae
lret
inc
sbb
xor
rorb
loop
in
negb
movsl
daa
adc
adcb
lock
pop
stos
lods
jg
hlt
testb
or
aam
mov
cmpb
sbb
cmp
fiaddl
ljmp
jo
dec
sub
sbb
out
jae
adc
lock
inc
jle
aas
fmul
iret
dec
popa
xchg
mov
fldt
lret
bound
scas
sti
inc
add
xlat
cmp
xlat
arpl
ret
jbe
jg
shrb
stos
jbe
in
mov
dec
ret
lahf
sete
cmp
sbb
add
cmp
aaa
dec
outsl
jge
push
push
sbb
cmpsl
xlat
pop
out
pop
jle
fprem
addr16
mov
cmp
popa
test
xchg
sti
xchg
mov
dec
jl
dec
jno
xor
push
dec
sbbb
sbb
dec
fcmovbe
lods
fiaddl
or
bnd
cmp
xchg
rorl
sti
call
add
outsl
pop
adc
movsb
outsb
aam
cmpb
mov
push
jmp
jnp
jp
xchg
in
shl
or
cmc
stos
lds
xchg
pop
sahf
sbb
lea
mull
pusha
dec
mov
sahf
jp
aam
and
lret
xchg
jbe
jbe
pop
pop
leave
cmp
lods
aad
negl
push
sub
lock
push
xchg
pushf
sub
mov
xchg
sarl
push
sub
dec
or
mov
push
sti
aaa
dec
add
negl
les
mov
lds
mov
xchg
mov
scas
dec
sub
push
cs
out
sahf
mov
push
jg
test
jmp
pop
mov
out
dec
mov
enter
enter
pop
inc
adc
mov
stos
cmp
xor
cmp
stos
jl
mov
mov
shrl
faddl
aad
imul
fnstsw
lea
shrb
mov
jg
dec
dec
ret
lret
mov
sub
add
pop
in
rcll
add
jo
add
mov
sti
push
cwtl
scas
cmpsl
out
bound
xchg
xor
mov
push
dec
ror
scas
out
mov
out
adc
ret
or
int3
sbb
mov
sti
aad
and
cmp
adc
and
clc
jno
out
movsb
and
out
mov
andl
int3
push
or
push
pop
sub
leave
scas
dec
pushf
sbb
scas
jbe
sarl
repnz
xlat
hlt
jmp
add
lea
mov
cmp
rcr
adc
nop
fldl2e
push
loopne
fnstcw
neg
mov
lods
lret
cmp
pop
scas
bound
rclb
inc
jo
out
into
lods
pop
aaa
scas
enter
add
fsts
push
adc
adc
xor
ds
sbb
int3
aaa
cmp
push
inc
mov
push
adc
out
pop
das
lcall
pop
sub
mov
jecxz
cmp
sub
iret
in
mov
in
fsubrs
int
aaa
xor
pop
int
xchg
push
xchg
call
test
in
pop
adc
mov
cmp
jns
mov
mov
ja
lock
data16
stos
jle
fidivrs
add
cs
mov
cmp
jae
add
xchg
mov
sub
mov
sbb
and
push
dec
xlat
in
je
ja
sub
sub
cmp
mov
ret
push
icebp
inc
test
aam
lcall
xor
jns
push
sub
adc
jae
xchg
mov
ljmp
sbb
sbb
dec
xlat
in
mov
std
mov
dec
sarb
inc
jg
jne
fistpl
push
push
pushf
and
aaa
sbb
add
mov
sbb
cmpb
jmp
cmp
xchg
mov
mov
setge
add
and
addb
lods
mov
lods
mov
mov
gs
outsb
es
test
cmp
xor
loop
xchg
xchg
dec
jno
push
mov
push
ja
mov
pop
mov
fwait
sub
pop
sahf
xor
push
jmp
cli
xor
jmp
in
daa
subl
int
sbb
inc
sbb
push
std
jbe
mov
lcall
mov
mov
xchg
push
arpl
clc
jmp
std
pushf
push
sti
hlt
repz
std
jcxz
dec
enter
mov
ficoms
adc
xchg
mov
sti
outsb
mov
shll
ficomps
ds
test
fcom
pop
and
fcomps
inc
popa
jl
jb
pop
sub
pop
lea
pop
fwait
mov
aad
sbb
inc
mov
mov
jle
outsb
fcmovnbe
mov
pop
mov
mov
mov
clc
cmp
mov
movsb
lods
jmp
int3
scas
push
ds
or
push
pop
lods
adcb
sub
ficompl
mov
pop
fisttps
icebp
lret
fiaddl
xchg
cmp
mov
xor
sarl
sbb
leave
cmp
cmc
xlat
mov
sbb
mov
adc
insl
pop
daa
push
or
adc
lahf
sub
movsl
pop
mov
pop
clc
data16
sbb
and
popf
inc
ror
sub
mov
adc
iret
jge
jne
sbb
adc
ds
fimull
bnd
mov
adc
cmp
mov
dec
fstpt
adc
xchg
sbb
pop
pushf
mov
loop
roll
push
fidivl
xor
inc
push
push
insb
dec
xor
jb
aaa
js
insl
xchg
and
pusha
xor
orl
mov
dec
xchg
mov
pusha
pop
outsl
jne
cmpsl
jae
js
imul
jno
imul
xchg
stos
or
sarb
jle
mov
fidivs
xchg
stos
mov
inc
push
mov
outsb
sub
jl
popa
pushf
push
and
jae
sarl
jmp
cmp
imul
into
fs
das
xchg
or
test
in
and
and
rcrl
pop
push
xchg
incl
sub
cmp
aaa
sbb
mov
mov
lahf
inc
scas
jmp
inc
clc
imul
cmp
push
outsb
sub
call
daa
xor
bound
movsl
xlat
mov
add
loop
mov
sbb
pop
and
lret
jmp
jno
inc
or
cmp
jecxz
in
in
jmp
dec
and
xchg
mov
mov
dec
in
push
inc
imul
or
incb
adc
inc
dec
test
push
cld
push
scas
dec
subb
icebp
subl
adc
dec
push
add
jns
sti
sbb
icebp
jbe
xchg
jae
arpl
or
in
jne
aam
inc
lahf
movsl
in
xchg
mov
pop
jb
arpl
stos
call
xchg
mov
dec
imul
imul
fcomps
cltd
adc
mov
pop
repnz
fcoml
or
fadd
jmp
xchg
dec
divb
jmp
in
dec
sbb
xor
push
sub
sbb
push
sarl
cs
fstpt
fnstsw
clc
and
sub
push
push
in
cli
into
in
movsb
dec
cmp
sarl
cmp
ss
pop
mov
xor
jb
sti
leave
insl
xor
mov
les
shlb
cmp
sahf
cmp
pop
or
adc
adc
ja
loop
dec
cmp
fstps
mov
decl
sbb
xor
push
add
push
dec
stc
fxch
imul
jbe
jo
ja
mov
lret
popa
or
sbb
jl
pop
push
adc
pop
fs
xchg
adc
sub
adc
data16
popa
cwtl
push
dec
test
pop
stos
mov
pop
inc
int3
outsl
ds
sbb
dec
sti
push
std
pop
sub
cmpsb
or
jno
pop
jns
pop
fs
inc
add
adc
or
repz
xchg
xchg
add
test
js
icebp
clc
loope
aam
push
ficoml
push
es
cmpsl
jmp
pushf
cmp
xor
les
adc
and
aaa
pop
push
push
pushf
xchg
sti
shrl
int
mov
lods
jae
bound
es
insl
aaa
jo
mov
loop
dec
sar
jns
loopne
mov
add
xor
push
cmp
adc
daa
push
mov
test
aaa
push
lahf
fsub
aam
jmp
je
cld
add
xchg
jp
xchg
testl
mov
mov
mov
add
mov
mov
xchg
jno
loopne
lea
push
mov
push
insb
pop
sahf
dec
pop
addr16
jb
xorl
ret
out
push
sbb
in
jb
popf
enter
pushf
lret
cmp
push
cmp
cmp
arpl
mov
out
or
dec
cmc
adc
pushf
and
into
adc
push
je
test
cs
jl
and
cmp
test
push
add
push
mov
cltd
add
xor
lret
fcompl
jecxz
xchg
jp
jl
jb
loope
sub
mov
mov
vpavgw
dec
add
sub
js
add
adc
mov
mov
push
test
dec
inc
popa
lfs
mov
push
and
outsb
xchg
cwtl
jl
add
inc
loope
jge
xchg
add
push
or
push
xor
outsb
xchg
insb
lret
xchg
dec
xlat
push
insl
mov
mov
shrl
or
dec
stos
or
mov
sub
gs
test
cwtl
dec
mov
push
xor
jno
lock
pop
and
dec
dec
sbb
enter
stos
add
xchg
fsts
popa
push
sub
leave
inc
mov
cli
incb
jle
jne
xor
sbb
js
jne
xchg
dec
into
out
gs
test
insl
pop
mov
push
adc
cs
and
cmp
jnp
xor
mov
popf
sahf
dec
sbb
jg
and
icebp
cmp
roll
xor
mov
out
movsl
push
repnz
jnp
cmp
push
sub
mov
sahf
xchg
stc
mov
xor
sahf
sahf
fstl
scas
pop
sub
ja
les
leave
mov
xchg
push
ja
pop
out
fiadds
neg
cli
mov
and
mov
push
out
cmc
rolb
xchg
inc
call
lock
out
sub
enter
push
sbb
adc
xor
add
insl
xchg
lea
arpl
ljmp
lock
jl
push
scas
dec
mov
or
dec
cs
outsl
xchg
sub
lock
dec
push
shll
test
cltd
cvttps2pi
jecxz
lods
cld
sbbl
shll
inc
pop
aas
cmpsl
mov
scas
xor
repnz
subb
inc
xchg
jecxz
mov
gs
pop
pop
or
or
cmpsl
sahf
push
jecxz
mov
je
imul
hlt
aad
or
dec
pop
or
cld
sarb
adc
cmovnp
xor
es
orl
mov
xor
dec
mov
ficoml
clc
xor
ss
pop
mov
jecxz
lock
mov
push
mov
mov
jno
fnstcw
mov
mov
mov
mov
test
sbb
outsl
popf
adc
pop
movsl
fwait
pop
mov
ds
ds
cmc
andl
inc
xor
mov
lret
push
imul
push
imul
xchg
nop
cwtl
xchg
pop
cmpsb
push
int3
cmp
mov
mov
andl
in
mov
shll
lret
daa
mov
aaa
loop
or
xchg
lds
std
sub
dec
outsl
xchg
pop
pop
pop
pushf
jge
jnp
scas
cli
dec
cmc
mov
sub
sti
cmp
or
movsb
outsl
pop
sub
fists
lods
add
in
inc
mov
cmp
mov
int3
inc
dec
adc
jle
sub
nop
adc
aad
push
in
push
dec
add
jno
mov
xchg
test
inc
jnp
out
dec
mov
adc
imul
jecxz
test
push
into
sub
test
fidivl
mul
mov
jnp
sub
clc
lret
xor
rcrl
sub
hlt
or
xlat
cmp
pusha
cwtl
cmpsb
sub
cwtl
mov
mov
mov
add
pop
ret
add
js
cld
shlb
mov
cs
leave
and
dec
adc
xor
jne
mov
xlat
or
adc
test
fstpl
roll
adc
loope
jb
mov
mov
ja
jmp
ja
xchg
or
push
and
lahf
cmp
fnsave
insb
test
call
sbb
mov
lcall
jge
jnp
rorl
mov
dec
mov
xrelease
cmp
adc
rcrb
testl
jle
mov
popf
outsb
mov
arpl
or
cltd
xchg
outsb
sahf
inc
jnp
std
imul
or
std
dec
xor
sub
mov
inc
insb
push
jl
fildll
mov
sbb
xchg
idivb
lcall
push
add
sub
icebp
push
push
mov
push
cmp
xorl
lods
test
aas
jg
adc
xchg
lahf
xlat
int3
test
test
sbb
or
test
sub
pop
test
dec
repz
aam
and
xor
add
mull
fisubrs
ret
mov
adc
jne
sbb
inc
stos
pusha
jne
xor
jne
pop
mov
jp
jmp
insl
rcrb
push
pop
xor
lret
xchg
dec
repz
add
push
imul
cmc
insb
jmp
sbb
ror
pop
adc
sahf
jb
jp
mov
fmull
pop
mov
paddusb
aas
add
mov
xlat
in
mov
xchg
adc
cs
mov
inc
pop
mov
sub
cli
xchg
rorb
dec
pop
jl
shlb
test
shll
mov
and
jl
xor
les
xchg
out
add
loop
pushf
loop
pop
inc
pminsw
fxch
adc
aad
idivl
scas
bound
pop
cli
movsl
jb
fiaddl
mov
dec
orl
dec
jle
adc
loope
sub
xchg
xchg
inc
xor
mov
push
dec
fsubp
xchg
or
mov
lahf
xchg
lahf
adc
sub
rcl
je
mov
cwtl
addr16
and
and
stos
imul
adc
cmp
in
mov
in
nop
sbb
in
inc
cmp
cld
int3
cmc
scas
and
push
and
bound
xchg
mov
sub
addr16
xchg
dec
inc
outsb
sbb
pusha
gs
lcall
rcr
testb
mov
loopne
sbb
mov
cmp
sbb
out
popa
les
xchg
cld
stos
dec
pop
sbb
aam
adc
cmpsb
push
add
cmp
nop
sbb
inc
jne
imul
std
jb
bound
imul
aam
test
xchg
fcoms
mov
push
das
inc
sbb
cmp
cmp
scas
arpl
sub
pop
pop
sub
cmp
sub
xchg
pop
es
cmpsb
int3
hlt
jo
fistps
push
jp
mov
mov
fistps
repz
dec
orl
data16
rcr
dec
xchg
movsl
add
insl
xchg
in
add
xchg
lea
lods
pop
rorb
xchg
push
enter
nop
cmp
ret
jg
pusha
push
ror
imul
pop
fimull
loopne
fsubrs
push
stos
repz
pop
mov
cmp
shrl
xor
xlat
jge
dec
dec
adc
jl
inc
dec
and
pop
pop
mov
rcrb
adc
xor
stos
push
inc
scas
loopne
adc
and
mov
adc
imul
mov
lods
or
in
adc
sbb
int3
test
rol
outsb
xchg
inc
inc
cmpsl
or
mov
sub
loop
imul
pop
ss
sub
sub
cli
mov
and
pop
cmp
fcoml
fnstsw
mov
rcr
cmp
mov
mov
ja
add
repz
dec
cmp
int3
pop
and
push
insl
js
adc
xchg
xchg
insl
jmp
mov
sub
push
xlat
mov
clc
mov
sbb
lcall
mov
into
loopne
mov
clc
sub
pop
aam
mov
pop
divb
cs
shlb
ja
or
lods
jne
sbbl
in
sti
cli
mov
shlb
inc
mov
inc
mov
jns
daa
js
in
cmp
mov
xchg
mov
in
orb
mov
pop
nop
xchg
cmc
arpl
or
jnp
test
test
xor
rcrb
jg
push
in
into
mov
imul
in
outsb
sub
adc
xchg
xchg
xchg
adc
je
jl
movsl
roll
mov
jo
or
xchg
or
mov
hlt
mov
xchg
rorb
lahf
imull
mov
test
aas
rorl
xchg
mov
repnz
mov
xor
push
das
jae
inc
push
mov
jmp
mov
inc
nop
dec
test
shl
es
inc
scas
push
into
cmp
dec
push
mov
jle
add
dec
and
push
add
lds
les
xor
jp
jnp
test
cmp
imul
cmp
xchg
pushf
sbb
out
pusha
std
pop
test
xchg
lahf
xor
push
xor
dec
out
cwtl
mov
jb
out
rcrl
adc
pop
jno
mov
mov
mov
mov
pop
cmc
xchg
insb
or
popa
cli
in
imul
stos
in
sub
cmp
cltd
sub
and
jecxz
cmp
js
cwtl
adc
inc
push
and
shl
xchg
jp
mov
sti
push
icebp
mov
in
lret
cmc
mov
fwait
stos
outsl
imul
aam
adc
cmp
adc
bound
cmpsb
test
mov
sub
push
js
dec
insl
rcl
sub
jns
mov
xlat
test
jne
shrb
mov
inc
pop
int3
mov
sub
nop
mov
popa
mov
xor
cmp
inc
stc
xchg
adc
lahf
fwait
xchg
stos
inc
lcall
push
cmp
cwtl
fldcw
adc
cltd
iret
adc
cmp
mov
cmp
fimuls
iret
add
daa
cmp
rcll
icebp
je
out
test
adc
enter
imul
fs
inc
mov
pop
xor
aas
jns
sub
pop
adc
test
sbb
imul
mov
adc
cmp
sub
push
lret
push
stos
sub
or
iret
xchg
stos
fwait
mov
call
insl
mov
and
es
inc
mov
inc
dec
jecxz
daa
cmp
and
inc
sbb
xchg
pop
das
lock
push
sub
cmc
int
pop
pop
sahf
repnz
repz
out
aas
and
iret
das
xchg
je
repz
mov
into
push
and
test
vpunpcklqdq
sti
stos
aaa
popa
mov
fnstcw
adcb
loop
sub
inc
test
leave
inc
or
fcmovnu
push
xchg
insl
sub
stos
pop
or
dec
sti
jo
sub
jb
out
mov
mov
jo
scas
push
adc
pop
push
lret
dec
jb
repnz
out
divb
cmpl
mov
mov
mov
inc
arpl
je
arpl
aam
shlb
xchg
stc
jne
jae
call
data16
outsl
mov
xor
mov
inc
out
xor
mov
pushf
fs
ljmp
cmp
test
icebp
xlat
rorb
add
imul
icebp
pusha
cmp
iret
or
cltd
xchg
cwtl
jge
lods
xor
pushf
push
cli
adc
das
pop
je
push
sbb
das
int3
sbb
mov
mov
and
aam
notb
jns
out
xlat
je
sub
loop
pop
mov
adc
stc
data16
and
dec
insl
ja
dec
adcl
sub
push
aas
mov
mov
sub
sub
inc
fidivl
or
xlat
andb
divl
or
or
divb
in
enter
jnp
test
jge
js
ljmp
mov
mov
inc
std
loope
and
mov
std
xor
add
push
push
mov
imul
mov
adc
daa
out
adc
aad
sarl
pop
mov
adc
dec
fistps
mov
int3
mov
cld
dec
icebp
mov
sbb
cltd
fiaddl
enter
xchg
repz
sub
sub
push
scas
call
movsb
add
sub
mov
insb
sbb
mov
inc
adc
adc
mov
es
pop
lcall
shlb
cmp
and
test
jmp
je
jne
cmpsb
in
jb
mov
pop
rcrl
sbb
insb
mov
sbb
or
movsb
add
fwait
jb
clc
cmp
sub
pop
lods
cmc
mov
lahf
cmp
mov
jg
inc
or
push
int3
out
out
xchg
ljmp
jae
xor
stos
aam
ret
xchg
rcr
lret
jl
stc
out
pop
mov
push
outsb
dec
aam
movsb
sub
flds
push
int
fnstsw
push
cmp
pop
or
loope
inc
outsl
notl
out
in
ret
xor
rorl
mov
scas
scas
xor
out
shrb
sbb
jne
cmp
sarl
sbb
or
in
jl
test
mov
in
xchg
and
lods
adc
adc
sbb
hlt
jb
push
or
outsb
test
jmp
jne
repnz
ja
sbb
add
inc
xchg
pop
pop
inc
sbb
adc
sti
movsb
xchg
cmpsl
cmp
loop
push
movsl
fistl
les
movsb
cmp
and
inc
bound
lea
jp
jg
xor
dec
sub
test
outsb
sub
mov
jns
mov
xor
mov
shrb
jnp
aaa
ficomps
ds
sub
cmp
in
gs
push
dec
and
ret
xor
sbb
loope
cs
xchg
inc
sub
adc
xor
xlat
mov
lea
orb
mov
sub
mov
dec
fs
mov
jg
push
arpl
movsl
push
subb
sub
or
cltd
les
mov
push
xchg
push
or
dec
cmp
adc
pushl
jae
add
mov
sub
popa
repz
mov
inc
push
js
ja
repz
ficoms
or
call
test
in
adc
divb
sub
leave
mov
inc
push
pop
lahf
movsl
cmpsl
rcrl
in
scas
sar
fucomi
push
sub
test
enter
xchg
iret
aam
movsl
push
lahf
outsb
cmpl
jge
sbb
pushf
or
pop
rcrl
adc
lods
push
dec
fcomp
mov
fdivrp
mov
sar
dec
mov
mov
setbe
sahf
neg
jg
dec
add
jmp
loope
mov
push
movsb
cmpsb
cli
mov
sub
scas
dec
mov
iret
sti
mov
adc
and
lret
sbb
fxtract
lds
cmc
inc
jecxz
out
data16
push
loopne
mov
ret
pushf
int3
jle
and
jae
jp
sbb
dec
popf
mov
mov
lea
pop
ret
mov
mov
or
mov
sbb
pop
inc
mov
sub
cmp
cmpsb
icebp
loop
ds
mov
leave
fidivrs
fidivs
jne
movsb
sub
sub
pop
push
fnstcw
dec
jae
repz
dec
push
call
sub
jle
sub
inc
lahf
and
repnz
cld
dec
mov
sbb
or
fcomp
jp
dec
pop
popa
xlat
jne
in
jnp
or
in
jno
aas
scas
xchg
insl
adc
leave
cmp
adc
and
insl
repnz
push
pop
sub
dec
iret
xor
or
mov
mov
add
or
mov
jmp
xor
mov
dec
imul
fnstsw
xchg
inc
stos
in
cmp
inc
cli
jp
nop
jno
jo
sbb
dec
fs
test
or
aas
xchg
popa
popf
sbb
scas
lret
fidivl
fnsave
mov
push
lods
jne
add
sub
push
insl
sub
ljmp
and
imul
shlb
enter
xchg
and
push
pop
addr16
mov
cmp
test
mov
insb
les
and
mov
notb
loope
mov
pop
xorl
mov
mov
rcrb
pop
push
scas
pushf
cmp
dec
or
stos
jne
pop
mov
int3
inc
lock
jmp
scas
add
std
or
das
arpl
lret
int3
mov
jo
cmp
fstpt
subl
call
faddl
pusha
jl
jp
decb
das
arpl
mov
dec
adc
or
stc
out
mov
ljmp
mov
hlt
inc
stos
mov
in
mov
inc
xor
popf
lods
mov
adcl
sbb
jg
mov
test
paddw
lods
orb
push
sub
adc
mov
mov
mov
hlt
fisttpll
outsl
xchg
cltd
movb
cmp
pop
inc
and
mov
int3
cmp
hlt
ret
mov
call
mov
leave
dec
jns
jg
mov
push
stos
and
repz
sub
jmp
dec
jge
jo
arpl
push
mov
cmp
dec
testb
push
shll
clc
lods
lds
scas
dec
or
outsb
jecxz
cli
insl
fidivrl
cmp
js
and
lret
mov
sbb
cmp
mov
cmp
push
mov
jmp
pop
xchg
jl
xor
icebp
mov
mov
jp
fsubs
shll
inc
fistpll
sahf
int3
xor
ret
inc
aam
push
jg
push
push
or
popf
mov
test
mov
outsb
add
or
ds
into
sahf
lret
sub
aad
in
fscale
push
addr16
pusha
test
fmull
pop
mov
sub
sahf
add
ja
dec
cmpsb
ficoml
cmp
inc
dec
push
jae
lret
mov
sub
ljmp
add
or
dec
lret
out
jmp
sbb
mov
ljmp
repnz
mov
push
popa
add
pusha
push
insl
mov
or
f2xm1
in
inc
xor
sbb
and
pop
xchg
adc
les
addl
dec
ss
adc
cmp
cmp
jecxz
xor
xor
jle
std
sub
icebp
xchg
pop
dec
or
dec
sub
dec
mov
cmp
popl
and
roll
repz
sub
mov
lods
pop
repz
mov
stc
sbb
mov
mov
popf
in
je
fiadds
and
adc
repz
mov
lods
test
je
cmp
push
cs
jge
inc
pop
insl
cmp
test
test
ret
mov
cmpsl
xchg
movsb
xchg
jecxz
out
dec
je
mov
js
lea
imul
les
pop
inc
in
out
push
or
cmp
sbb
adc
fiaddl
cmp
loop
adc
adc
pushf
and
jno
add
mov
popf
int
ret
cmpsl
out
jnp
jecxz
pop
fstpt
mov
dec
jnp
jae
repz
je
lock
jmp
sbb
pop
cs
fucomip
xchg
lea
pop
lds
sub
test
outsb
pop
sub
xchg
lcall
adc
ljmp
xor
cmpsb
jg
inc
cmp
pushf
push
sbb
mov
in
inc
add
mov
adc
jecxz
and
popf
mov
lret
andl
fcmovb
pop
lods
shrb
movsb
cmp
mov
movsb
sbb
xlat
pop
hlt
inc
popf
jl
adc
gs
pop
in
mov
insb
sbbb
sbb
mov
fstpl
xchg
jae
mov
xchg
and
lods
pop
insl
aad
and
movsl
xor
xor
insb
clc
jae
or
cwtl
in
mov
add
dec
jl
mov
shl
inc
leave
popa
cmp
cltd
jo
cmp
xchg
test
cld
popfw
out
dec
sbb
sbb
aad
push
jmp
mov
push
lea
xchg
lods
pop
lret
hlt
lods
push
lock
data16
aad
pop
mov
shrl
popf
sub
loope
lods
scas
mov
test
pop
rcr
jno
xchg
popf
push
addl
les
xchg
aad
pop
jbe
lcall
inc
daa
dec
push
inc
sbbl
fisubs
pop
fstpt
and
mov
xor
arpl
sub
das
fs
mov
xlat
jmp
pop
flds
cs
lcall
imul
push
inc
cs
mov
xlat
dec
ret
fbld
mov
mov
fiadds
dec
cmp
and
lds
clc
mov
sbb
mov
pop
fmul
jmp
cmp
fs
scas
push
pop
std
rcrl
ljmp
pop
mov
mov
jp
adc
clc
lahf
push
fwait
cmpsl
adc
ficoml
ret
mov
xor
push
icebp
mov
mov
xchg
fldcw
das
ficoml
cltd
jbe
outsb
add
sbb
orl
ljmp
pushf
or
adc
lahf
xchg
loope
sub
inc
test
sbb
pop
jae
dec
fdivrp
out
lret
cmp
ss
fisubrl
mov
mov
dec
fstl
mov
cmp
sbb
pop
fstpl
cmp
popf
cmp
out
das
into
xchg
jl
pop
jl
fsubs
push
adc
xor
ja
cwtl
dec
cld
lret
push
leave
std
adcb
das
adc
test
out
lahf
int3
stc
mov
dec
dec
fidivrl
lret
jne
pop
test
mov
pop
imul
inc
xchg
je
mov
andb
je
inc
mov
shrl
mov
bound
sahf
or
sub
jmp
mov
in
ja
cmpsb
repnz
pop
pusha
test
dec
dec
outsl
mov
lods
stos
outsl
mov
das
mov
filds
out
andl
lret
dec
push
cwtl
and
sub
insl
test
pop
rol
lea
push
aam
pop
pop
cmc
subb
out
cmpsl
mov
inc
inc
mov
movsb
and
fldcw
mov
aaa
pushf
movsl
mov
inc
pushf
sub
or
aam
dec
lret
daa
mov
and
jmp
movsl
jl
pop
shl
push
addr16
in
movsl
jmp
movsb
out
push
shll
imul
and
cmpsl
sub
mov
std
pusha
dec
popl
lcall
lret
hlt
nop
aaa
xchg
jno
inc
mov
xchg
imul
ds
push
lock
mov
jg
mov
sahf
jno
cmp
pop
xor
sbb
jmp
mov
dec
cltd
or
inc
sbb
rcl
not
movsb
shl
fwait
push
scas
cmpsb
cmp
inc
rolb
adc
inc
lds
xchg
jb
pop
outsb
push
pop
mov
mov
and
dec
andb
dec
int3
xchg
icebp
fcomps
adc
sbb
ret
testb
xor
mov
inc
mov
inc
fucompp
mov
fidivrs
and
in
sahf
out
dec
inc
shll
mov
add
mov
shl
push
fnsave
lcall
aaa
cmp
fcmovnu
xchg
pop
mov
push
outsl
or
xchg
push
inc
push
xor
pop
xchg
jae
ret
addr16
js
mov
adc
dec
pop
dec
dec
push
iret
rol
adc
icebp
in
dec
xor
shll
sbb
mov
hlt
aaa
adc
sub
fstl
out
movsl
pop
jl
leave
popf
loop
les
lods
sbb
jae
mov
shrl
data16
or
cld
sub
call
lret
pop
cmp
push
cmp
dec
add
sbb
mov
arpl
mov
mov
adc
sub
lcall
lgdtl
ds
in
or
push
cmp
pop
stc
push
cld
lea
mov
imul
out
mov
sbb
clc
stos
adc
sar
pop
xchg
adc
xor
push
stos
pop
in
push
and
pop
jo
bound
cltd
adc
cwtl
testl
popf
mov
ja
cmpb
fisubs
mov
push
outsl
iret
and
xchg
sbb
movsl
xchg
addr16
in
lahf
addb
push
pop
mov
push
fcompl
jbe
push
out
ja
sub
je
addl
xchg
mov
fidivrl
enter
call
ja
cs
lock
int
cmp
fildll
hlt
repnz
pop
xchg
cmpsb
jecxz
into
popf
push
pop
mov
and
inc
inc
outsb
loope
pop
cmp
inc
sub
sarb
sti
add
aad
popa
ret
xchg
mov
dec
adc
rcrb
leave
ss
jae
pop
es
jbe
xchg
or
sbb
dec
pushf
les
insl
push
mov
sahf
addr16
fwait
inc
adc
lock
rcll
push
inc
dec
mov
mov
xor
sub
adc
push
xchg
int
imul
andb
testl
mov
fistl
push
cli
unpckhps
dec
mov
shll
sbb
lcall
jecxz
inc
jmp
add
out
fldenv
push
out
int
xchg
sti
rclb
ljmp
insl
or
and
out
mov
test
mov
les
popf
fidivs
mov
into
fmuls
inc
sarb
inc
shlb
fdivrs
lret
and
push
push
popf
mov
pop
ss
cmovne
ljmp
jmp
out
or
divl
aad
push
ficomps
arpl
inc
cmc
cmp
fadds
subb
mov
add
ss
adc
xor
pop
data16
out
dec
dec
jne
jmp
lock
lcall
pusha
movsb
xchg
int3
scas
xchg
scas
push
jecxz
lcall
mov
pusha
outsl
mov
push
add
fidivs
imulb
pop
xor
dec
mov
push
outsb
and
fmul
push
das
clc
sbbb
testl
roll
cld
or
scas
loop
outsl
add
cmpb
cwtl
lahf
cmp
insl
jmp
mov
sub
or
out
lock
mov
sbb
std
in
lock
mov
sbb
adc
ljmp
inc
mov
roll
push
fbld
xor
mov
mov
jp
sahf
dec
sarl
add
cmc
popl
hlt
or
cmp
push
jbe
mov
mov
pop
or
clc
or
out
sub
stc
dec
xor
fsubp
cmp
push
mov
jns
inc
nop
scas
dec
pusha
test
push
repnz
bound
fs
inc
pop
push
frstor
pop
push
sub
int
or
push
test
pop
mov
mov
sbbb
push
out
mov
imul
int3
add
ret
aam
inc
fbld
sbb
xorb
cmp
cwtl
cwtl
push
jae
scas
stos
enter
lret
lock
push
xor
push
push
popa
idivb
ret
jnp
andl
test
jb
lahf
aaa
dec
mov
cmpsb
outsb
add
push
mov
or
les
jg
pop
pop
leave
outsl
pop
cli
lret
jp
mov
pop
js
lahf
and
fnstcw
loope
push
xor
xchg
adc
enter
add
add
out
push
aad
aaa
adc
dec
rcrl
ds
fidivrl
pop
adc
mov
fnstcw
xor
imul
insl
dec
inc
out
mov
push
cs
inc
push
mov
mov
mov
mov
into
mov
cmp
in
cmpb
sub
mov
inc
jne
imul
rolb
sahf
push
hlt
push
push
push
cmp
pushf
and
jmp
push
jae
dec
icebp
pop
je
dec
ret
cmp
xchg
mov
scas
cmp
call
mov
outsl
pushf
cmpsl
in
sub
push
jb
loope
in
sub
or
cs
xlat
imul
sbb
jmp
lds
scas
lods
fwait
lds
xchg
or
imul
and
xchg
mov
into
add
push
lret
xor
inc
cli
cli
adc
inc
adc
cmp
popf
setns
inc
test
data16
clc
in
rclb
ret
mov
insl
or
and
adc
out
fwait
mov
imulb
sbb
push
lds
xchg
aad
mov
dec
push
fdivp
int3
xchg
fldt
scas
repnz
enter
aad
xlat
sub
loopne
dec
jno
mov
test
push
ret
ljmp
mov
out
arpl
lahf
mov
push
mov
cmc
xchg
mov
mull
mov
push
mov
xor
dec
xchg
popa
push
mov
cmp
or
movq
sbb
rclb
jns
rol
je
mov
lret
arpl
mov
cmpsb
mov
and
cmp
inc
addl
dec
gs
cmp
out
inc
ffreep
fwait
cmp
xchg
cmpsb
mov
jmp
nop
jp
mov
xlat
mov
mov
sbb
mov
cli
iret
xchg
or
mov
jne
aad
mov
push
lea
sbbl
inc
dec
xchg
dec
mov
pop
je
xor
rclb
testl
pop
dec
rorb
ja
fs
fstp
mov
inc
xchg
xchg
or
inc
push
div
lds
jne
cmpsl
xchg
shrl
xor
imul
outsb
sub
inc
subb
enter
push
shll
mov
out
push
sbb
insb
and
lds
xor
fisubl
xchg
mov
sahf
adc
les
ret
in
and
repnz
jle
stos
outsl
or
add
jecxz
pop
xchg
rorb
xchg
cmp
sbb
jo
fstp
adc
std
mov
inc
call
insb
xor
sub
dec
cmp
inc
sbb
stos
jecxz
push
or
jl
gs
inc
jb
push
sub
inc
mov
mov
push
loop
jae
jl
inc
pop
repnz
leave
mov
and
repz
in
clc
insb
das
fs
push
push
add
ffree
fsts
xlat
sub
fcomp
add
out
fwait
and
rclb
mov
repnz
mov
imul
or
cltd
pop
cmp
add
outsl
std
jb
stc
jmp
jno
leave
push
jge
and
jo
xor
mov
insb
ret
ret
sbb
ljmp
leave
js
test
jmp
pop
dec
cmc
mov
pop
lods
xchg
xor
fwait
outsb
shrl
and
jp
fcoms
test
faddl
stos
sub
shll
cwtl
add
jno
xor
cli
sub
xchg
mov
adc
daa
icebp
sti
mov
sarb
mov
dec
fwait
and
xor
dec
fadds
mov
mov
push
pop
push
jg
addr16
fdivl
pop
sar
mov
insb
mov
xchg
dec
mul
stc
aad
push
popa
xchg
xchg
clc
incl
add
mov
cmp
jmp
sub
movsb
sahf
sbb
mov
int
mov
xchg
js
insl
daa
cs
cmp
lret
mov
enter
arpl
test
pusha
int
rolb
imul
mov
xchg
mov
cld
cmpsl
mov
leave
jl
ror
pop
into
xchg
in
push
in
add
out
imul
mov
out
jle
jbe
cmp
mov
push
push
int
fs
in
sub
mov
xor
inc
sbb
popf
cmpsb
dec
lea
cmpl
arpl
lahf
fwait
pop
cmp
mov
lcall
sbb
mov
mov
ss
pop
lds
add
adc
fmull
insb
add
or
iret
push
push
sub
sbb
sub
sub
xchg
adc
loope
cmp
aas
push
insl
sub
pop
insl
jns
cmp
sub
or
sub
iret
dec
inc
push
div
jge
mov
imul
jl
test
pop
mov
xor
imul
or
lock
push
loop
stos
jnp
cld
clc
popf
cmp
rclb
mov
cmp
aam
jl
jecxz
rclb
pusha
jno
call
ja
ficoms
sub
or
xor
mov
jg
idivl
push
movsb
mov
je
fsubrs
fs
sbb
fcompl
xlat
sbb
cmp
test
sub
sub
shlb
lds
scas
cmp
push
mov
in
out
add
and
loope
scas
nop
pop
sbb
xor
and
nop
jg
inc
inc
push
xchg
cmp
xchg
jb
or
ret
xchg
jmp
dec
cmp
or
ret
sbb
adc
push
aaa
push
xchg
adc
roll
and
adc
cmp
std
ds
jo
and
lret
sub
jmp
cli
dec
test
mov
mov
lds
popf
hlt
push
das
es
jle
mov
mov
push
mov
clc
stos
or
fdivs
jno
pop
outsl
mov
push
add
jge
movsb
aas
test
pushf
fcoml
xor
jae
fcoms
mov
cwtl
cmc
popw
jae
cmp
pop
leave
icebp
xchg
loopne
pop
fcompl
pop
sub
push
test
mov
and
testb
stc
loop
movsb
pushf
mov
pop
mov
dec
outsl
fs
jl
divb
aaa
cli
imul
in
roll
in
fdivrl
add
sbb
or
xchg
outsl
jbe
cmc
lret
xchg
and
inc
sub
out
mov
inc
fwait
js
out
pushf
pop
call
dec
add
movsl
xor
rcrl
sar
js
push
xchg
mov
cld
sub
cltd
xchg
add
ds
mov
sti
mov
mov
mov
ret
lret
mov
in
jno
push
pop
push
or
mov
out
loop
jo
lds
pop
jmp
xchg
add
pushf
dec
mov
adc
loopne
rclb
lret
fwait
xchg
mov
fnstcw
outsl
and
mov
orb
add
lahf
jg
lods
shll
or
mov
and
int
enter
xor
divb
mov
push
lea
push
xor
mov
stos
hlt
lods
rolb
pop
stos
and
jnp
fwait
add
pop
dec
mov
sbb
xlat
fnstenv
lock
pop
shrl
xchg
jne
iret
pop
add
outsb
std
add
lock
lds
lods
mov
mov
loop
adc
sbb
cmpsl
iret
fmuls
mov
push
fdiv
and
xchg
or
shll
fstps
adc
fwait
scas
xor
pusha
mov
sbb
jp
inc
adc
sbb
cwtl
insl
dec
sub
mov
pop
loopne
out
fildll
out
test
lds
xchg
sub
and
ss
mov
movsb
mov
dec
ja
dec
cmp
test
sbbb
into
add
roll
pop
mov
in
jns
jno
std
cmpsl
add
or
cmpsl
sar
fwait
and
pop
sbb
sub
hlt
pop
loope
sbb
into
scas
mov
dec
lret
pop
fbstp
mov
pusha
pusha
adc
mov
cmc
cltd
out
sub
or
sbb
mov
cld
scas
sahf
cld
xor
pop
add
xchg
fisubs
icebp
xor
sub
xorl
xchg
jnp
lcall
stc
test
shlb
jl
sub
lods
std
lock
mov
jne
rorl
outsl
ficoms
call
or
loope
popa
jmp
mov
dec
push
loopne
or
inc
lret
and
xchg
sbb
inc
xchg
shll
repz
pop
ljmp
aam
xchg
jb
cltd
daa
insb
sar
cmp
and
mov
pop
pop
je
test
sub
or
lret
jno
adcl
pop
and
jecxz
mov
inc
orl
push
insb
cmc
pop
sti
subb
cltd
sbb
outsl
xor
test
ljmp
xchg
mov
push
in
nop
push
mov
mov
pop
in
test
pop
or
xchg
imul
and
sbb
mov
sahf
xchg
divl
cmpsb
std
mov
mov
lret
loope
mov
cmpl
dec
cmc
arpl
sub
push
jge
dec
sahf
push
fnstenv
dec
sahf
fdivl
push
stos
bound
and
hlt
cli
push
inc
inc
dec
rcrb
cmp
xchg
mov
adc
inc
dec
movsb
sub
test
pop
cmpsl
ljmp
add
cltd
scas
and
sub
cwtl
fmull
jnp
xor
or
lock
lret
das
ljmp
dec
sub
aad
cmp
test
int3
push
cwtl
dec
pop
adc
lock
out
dec
movsl
dec
xor
pop
lods
mov
and
cmpsb
xlat
pop
movswl
xchg
cmp
mov
jbe
inc
xchg
jno
cmp
outsb
js
fs
cltd
pusha
dec
sbb
popa
shufps
dec
sbb
bound
inc
push
xchg
mov
enter
and
add
sbb
pop
mov
cs
mov
xchg
pop
scas
and
stc
xchg
jno
out
decb
repnz
sub
sbb
adc
ret
and
add
xlat
arpl
add
out
enter
sbb
sbb
out
fcmovnu
rcll
mov
push
iret
mov
push
inc
out
hlt
jbe
imul
adc
mul
imulb
dec
and
stos
insb
sub
mov
jg
mov
push
mov
iret
sti
xlat
into
je
aam
lret
inc
outsl
dec
mov
in
mov
sbb
sub
into
out
jae
ja
pop
inc
js
insl
mov
shl
lods
mov
and
idivb
or
sub
nop
cmp
and
mov
lds
cmp
mov
xchg
rcl
xchg
test
jle
fdivrl
fstp
mov
in
out
stos
mov
addl
int3
jbe
daa
push
outsb
mov
adc
stos
mov
rcrb
cli
cmpsl
sub
xorb
adc
loope
not
jae
sub
push
addl
dec
jmp
fs
fnstcw
sub
sti
test
xchg
dec
xchg
xchg
or
inc
mov
mov
leave
and
lret
pushf
jb
push
cmp
mov
movsl
adc
je
mov
mov
rcrb
cmp
sbb
ja
mov
shr
pop
dec
fwait
sbb
shl
rorb
add
jg
sbb
dec
dec
data16
ljmp
mov
scas
pop
fsubr
mov
pop
or
xchg
jg
mov
pushf
cmp
movsb
stos
leave
lea
push
popa
in
fwait
outsb
dec
push
std
fbstp
push
push
stos
xor
ja
xorb
enter
xchg
ja
push
in
lret
jne
fimull
jg
ja
ljmp
je
cmp
loopne
testb
cli
test
enter
fwait
nop
adc
inc
xchg
and
sbb
lods
mov
fcoms
xlat
mov
add
shrb
inc
adc
sbb
pushl
in
mov
dec
stc
and
push
inc
sbb
add
inc
lds
out
negl
adc
xlat
or
aas
out
cltd
lahf
add
dec
out
adc
dec
jg
fisttpll
mov
sbb
nop
notl
push
stos
and
lods
fidivrl
or
cld
movsb
pop
jge
xchg
adc
or
mov
cmpl
fnstcw
pop
jnp
adc
pop
sbbb
pushl
es
mov
dec
or
jno
popf
push
std
repnz
cwtl
ror
mov
mov
enter
sti
cmpl
dec
in
gs
jae
pop
ficompl
out
or
fisubrl
into
notb
sub
and
sbb
loopne
or
cmp
adc
movsl
mov
and
fwait
xor
shr
cmp
arpl
dec
movsl
pop
jne
jge
mov
mov
adc
push
lods
jge
xchg
inc
aam
fldln2
sub
stos
xchg
fisttpl
lds
sub
cmp
inc
mov
ffreep
jmp
cld
jmp
dec
mov
fcmovnbe
and
adc
insb
xor
adc
mov
dec
mov
xchg
mov
adc
mov
mov
dec
ds
fwait
push
icebp
jbe
sub
xor
mov
cld
or
roll
sub
fldenv
pop
pop
push
sub
movsl
sub
test
sbb
xor
jge
inc
les
arpl
ret
or
movlps
mov
cmp
lea
test
mov
dec
jnp
mov
es
jge,pn
rclb
lods
sub
out
push
lods
fsubrl
lds
lcall
jge
mov
js
jne
in
in
aad
bound
loope
inc
dec
imul
jle
fsubr
push
pop
out
stos
int
imul
jns
xchg
sub
ret
loope
jo
fistpl
adc
iret
dec
fs
enter
jno
arpl
ret
fwait
xor
pop
repnz
xchg
gs
jae
xchg
and
pop
sbb
or
xlat
jecxz
std
aam
cs
dec
shrb
dec
popf
jnp
daa
mov
add
std
push
les
pushf
dec
scas
pusha
std
push
sub
xchg
adc
rcrb
cmp
xor
jnp
pop
push
push
inc
sub
test
jns
out
out
movsb
rol
push
mov
mov
sbb
adc
in
cmp
adc
cmp
out
mov
pop
addb
test
divb
rcll
and
les
jg
cmp
sub
mov
iret
mov
add
stc
pop
and
aaa
mov
sar
cmp
mov
jmp
std
jl
bound
jmp
jo
add
jmp
sbb
pop
bound
loope
sbb
or
xor
xchg
sbb
mov
cmp
adc
mov
sbb
loop
bound
push
shl
sti
and
rorb
xchg
nop
jbe
inc
iret
inc
xchg
dec
rorb
nop
fs
rolb
push
leave
movsl
pusha
cld
sahf
call
mov
adc
aam
sub
xchg
stos
mov
xorl
mov
mov
and
pushf
sub
push
sub
sub
inc
adc
xchg
in
rcr
iret
aam
out
fisttps
loope
daa
jns
or
fimull
xor
andb
into
int3
insl
into
pop
es
out
scas
out
fbld
pop
gs
test
mov
mov
call
icebp
xchg
pusha
arpl
dec
push
sahf
or
mov
mov
pop
sar
fs
or
lret
cmp
push
inc
lcall
pop
dec
xchg
packssdw
add
jmp
js
shr
sbb
pop
aam
lea
roll
jg
sub
or
popa
sbb
adc
aad
mov
daa
jo
lahf
ss
sbb
sub
cwtl
push
lahf
jbe,pt
es
loopw
cli
sub
lea
test
js
mov
dec
xchg
push
dec
cmp
add
scas
rcl
imul
bound
adc
mov
stc
pop
sbb
dec
mov
xchg
xchg
push
xor
repz
or
xor
es
and
test
gs
xchg
adc
adc
out
mov
rclb
imul
add
pusha
add
lcall
sahf
or
aad
push
push
cmpsl
dec
roll
sbb
cmpsl
cld
mov
stos
pop
repz
inc
clc
cltd
out
jne
jbe
imul
xchg
jmp
out
add
xlat
xor
ss
pshufw
arpl
sbb
push
xchg
imul
mov
sti
jg
std
aam
xlat
sarb
sbb
jp
aam
fsubl
push
add
xchg
fstps
fsubp
ror
lret
jae
outsb
arpl
pusha
dec
adc
mov
cltd
pop
jbe
adc
fistl
repz
jb
mov
shlb
push
cs
xchg
popa
mov
inc
inc
pushf
jmp
mov
mov
stos
push
cld
and
loope
pop
je
dec
pop
sub
add
push
lcall
cmp
leave
sbb
mov
pop
lahf
push
sub
push
cmpsb
adc
loope
sti
lea
xor
cld
data16
les
mov
and
lock
lock
and
gs
aam
cmpsl
mov
push
pop
pop
and
sub
fcmovbe
into
loope
ljmp
js
loopne
shrl
push
in
jmp
push
enter
push
mov
dec
std
xor
or
lock
inc
dec
cli
repz
or
subb
push
push
jp
push
push
mov
mov
mov
xor
cli
test
popa
mov
sahf
scas
aam
sub
xor
les
xor
inc
dec
stc
xor
insb
pop
dec
in
cmp
push
call
fadds
aaa
leave
mov
pop
jo
test
xchg
cwtl
mov
clc
pushl
cwtl
cld
imul
lods
in
aas
sbb
ds
pusha
adc
push
or
int3
shr
rcrb
mov
in
adc
fcomi
mov
cmc
inc
mov
xorl
orb
dec
je
fld
xor
sub
mov
xchg
mov
fnstcw
ds
imull
call
out
add
mov
fldl
aam
add
and
lret
mov
push
inc
or
nop
dec
movsl
clc
jo
int
jmp
stos
subb
aas
and
lea
mov
data16
jno
add
pop
jecxz
dec
icebp
cli
in
mov
lea
notl
xchg
loopne
daa
ljmp
mov
cmp
inc
aaa
inc
imul
mov
dec
pusha
xorb
xchg
lea
mov
pop
mov
or
mov
inc
mov
mov
loope
negb
and
lcall
adc
sbb
outsl
push
nop
dec
lret
clc
jne
xor
daa
jl
lods
or
call
mov
mov
adc
fcoml
cli
xorl
pop
push
subb
movl
mov
test
out
into
push
mov
ret
push
adc
cmp
sub
pop
lock
inc
pusha
or
sbb
enter
popa
mov
fidivs
sbb
adc
mov
adc
shrl
jge
imul
dec
sbb
xor
sbb
ficompl
or
repz
mov
cli
aad
mov
mov
push
jmp
lcall
lock
or
push
andl
iret
or
pushf
pop
mov
cmp
lahf
xor
push
inc
cmp
cmp
adc
ficoms
jg
test
and
adc
mov
or
fidivrl
and
lds
sbb
dec
and
jae
or
or
pusha
adc
or
fimull
clc
push
mov
add
jbe
mov
mov
js
push
push
fdivrs
jae
cmpsb
mov
or
mov
incl
movsb
popf
rcrl
sbb
inc
andl
fisubrl
mov
aad
add
in
dec
sahf
inc
lock
dec
cwtl
pop
mov
stc
adc
lcall
lahf
loope
jnp
jno
sbb
aaa
subl
imul
xor
adcl
jbe
ds
shll
imul
lret
and
mov
idivl
pop
stos
cwtl
mov
stos
int
push
out
or
sub
jle
lock
push
aaa
adc
cltd
lea
fldl
stos
aas
or
sub
dec
inc
add
and
stc
cmp
jmp
sarb
aad
cmp
cs
outsb
and
lds
or
int3
jno
xchg
sub
out
push
dec
mov
xchg
mov
mov
cmc
lret
xor
mov
xor
xchg
dec
and
das
sahf
ds
imull
ja
adc
test
cli
mov
sub
pop
fmulp
shrb
jae
xor
cmp
int3
mov
and
repz
push
es
jg
sub
dec
popa
pop
loop
inc
push
mov
dec
cmpsb
inc
push
clc
flds
jae
or
push
inc
sub
mov
mov
mov
loop
je
push
nop
mov
sub
xor
repz
fucomi
dec
sbb
add
push
repnz
inc
mov
cs
mov
push
insb
lretw
pop
sbb
xor
mov
into
add
dec
fdivrs
in
xchg
mov
dec
popf
leave
test
or
ljmp
out
jge
leave
sub
pmaxub
jno
decb
adc
ljmp
aad
leave
jge
sbb
xor
mov
je
dec
mov
adc
cmp
xlat
xor
push
enter
adc
std
pop
mov
loope
jne
pushf
cmpsl
pushf
xchg
xchg
gs
push
xor
movsb
pop
cmc
mov
and
outsb
in
mov
lret
cmp
cmp
lahf
shll
adc
imul
and
rcrl
xchg
ret
pop
pusha
pop
aas
ds
mov
add
jg
mov
sbb
mov
mov
lahf
xchg
je
and
push
cmp
test
mov
fists
xchg
mov
stos
jae
popa
cmp
jne
xchg
push
js
scas
jg
pop
movl
daa
mov
and
pop
push
sub
cmp
fwait
and
mov
inc
sbb
adc
push
cmp
rclb
pop
pop
xchg
jecxz
and
cmp
adc
jl
arpl
jecxz
sbb
push
jecxz
fwait
push
gs
jg
or
call
cwtl
sbb
jno
inc
shrl
fwait
test
sbb
imul
adc
lds
lea
pop
fdivl
inc
scas
pop
arpl
bound
faddl
ror
add
sbb
inc
push
jae
outsl
mov
daa
popf
or
arpl
and
es
mov
lret
into
vxorps
in
mov
movsb
push
stc
and
xchg
inc
inc
sbb
cmp
jbe
mov
jnp
jo
mov
lret
pop
loop
xlat
cmp
dec
dec
cmp
das
lea
fisubrl
fldt
pop
and
mov
adc
aad
insl
xchg
stos
xchg
cmpsl
or
dec
shll
js
mov
int
pop
mov
push
cmc
rcl
das
in
test
bound
cmp
xor
mov
xchg
bound
std
mov
xchg
fcoms
inc
cmp
pusha
mull
add
push
idivb
adc
dec
dec
xchg
mov
cmpb
icebp
jae
hlt
jno
js
adc
les
call
jecxz
hlt
dec
sbb
jp
mov
mov
jns
jecxz
xchg
pop
push
inc
mov
pushf
rorl
push
push
push
sbb
popf
mov
mov
sub
mov
pop
in
adc
imul
inc
in
xchg
lahf
ljmp
sbb
jecxz
inc
xchg
or
cltd
jmp
std
dec
sbb
addl
mov
sub
cld
clc
cmp
inc
sbb
sahf
out
daa
je
lds
iret
or
pop
outsb
mov
hlt
mov
mov
fadd
mov
mov
pop
pop
sbb
fsubr
jb
in
leave
es
adc
adc
push
mov
adc
shrl
lock
inc
arpl
cltd
mov
das
out
jmp
xor
ret
jge
stos
leave
jg
stc
add
xor
jle
je
cmp
mov
mov
mov
jnp
in
push
sahf
test
sahf
dec
jp
fcmovu
or
xor
cmp
in
xor
pop
test
cmpsb
lods
icebp
inc
repnz
dec
mov
add
cmp
dec
add
lock
cmc
and
push
outsb
and
mov
jnp
xchg
add
mov
cmp
push
and
inc
pop
inc
mov
pop
jns
jmp
jl
sbb
movntps
cltd
sub
repnz
push
outsl
adc
daa
lret
das
xor
jnp
inc
cmp
or
int
sar
lcall
cmp
popa
pop
jg
jl
jmp
je
outsb
call
nop
cld
into
jnp
fnstsw
cmp
popf
call
bound
pop
jge
inc
jg
push
ss
jae
outsl
les
add
call
or
in
insl
xchg
cs
clc
and
sahf
sub
es
scas
andb
xor
inc
dec
jmp
into
pop
fwait
jne
ficoms
scas
outsb
mov
rolb
je
dec
inc
pop
mov
cmp
pusha
popa
in
pusha
cmc
sbb
data16
sbbb
fnstenv
push
or
aam
push
insl
lods
mov
scas
fistl
pushf
lock
aam
pop
and
nop
repz
jmp
jl
mov
mov
mov
mov
pop
hlt
in
cmp
aas
cs
push
push
dec
adc
xor
loopne
mov
outsb
mov
mov
test
fbld
mov
sub
or
enter
arpl
jae
fbld
mov
inc
jmp
test
adc
das
mov
std
hlt
inc
ror
data16
mov
push
jg
fs
push
mov
and
push
mov
push
dec
sub
cmc
in
ffreep
and
and
mov
movsb
inc
pushw
jge
into
scas
pop
jp
je
pop
lret
loop
hlt
dec
stos
in
bnd
cwtl
inc
and
mov
fcomps
or
xchg
mov
or
or
in
or
scas
jg
and
inc
cld
scas
and
lcall
cmpsb
pop
push
pop
push
insl
inc
cmp
lret
data16
sub
xor
push
jmp
and
movsl
adc
loopne
lock
jns
sub
icebp
scas
inc
xor
mov
mov
scas
sub
xchg
scas
mov
scas
mov
sbb
out
std
jg
push
adc
sbb
cwtl
xor
cmpsl
xchg
bound
pop
in
sub
fs
icebp
in
in
push
stos
js
dec
mov
out
push
xor
sar
rcrb
xor
ror
test
sub
pop
pop
xor
push
rolb
lds
jle
ja
or
lcall
ja
fnsave
fs
jmp
ja
xor
ret
dec
adc
addr16
lods
ja
and
inc
aas
inc
dec
icebp
xor
push
sbb
or
xor
jb
aam
jbe
fsubrp
call
mov
out
inc
pop
dec
setg
fldl2e
imul
xchg
dec
fcoml
xor
gs
jo
into
loop
add
adcl
mov
pop
aas
fildl
pop
rcll
dec
xor
sbb
lods
mov
es
jnp
inc
sahf
cwtl
and
pop
lret
shl
mov
push
fadds
jnp
inc
loop
mov
jae
or
cmp
sub
pop
mov
arpl
push
mov
xor
and
pop
into
fstpt
pop
mov
outsl
aam
imul
cmp
xchg
popf
cmp
pusha
cmpsl
out
mov
pop
inc
cmp
mov
dec
jbe
out
mov
pop
xor
mov
daa
enter
xchg
jg
iret
cltd
notl
cltd
mov
stc
je
xor
fwait
neg
stos
xchg
jne
ret
cmc
push
xchg
add
das
add
pop
inc
lods
mov
testb
jno
add
je
xor
out
imul
pop
sub
out
ret
loope
push
xchg
pop
std
xlat
insl
je
call
sbb
jno
mov
adc
jbe
mov
sbb
xchg
je
dec
out
mov
pop
out
pushf
and
aad
aaa
in
jae
scas
pop
js
xchg
xchg
int
or
in
nop
adc
leave
leave
in
stos
ss
out
jb
fdiv
cld
outsb
out
mov
loope
sahf
cld
mov
cmp
ljmp
adcl
shlb
lds
std
ret
jge
mov
ljmp
ljmp
adc
jb
xchg
mov
adc
fwait
rclb
pop
push
sarb
sbb
push
arpl
jl
push
push
sub
loope
xchg
add
lcall
mov
and
cmc
das
inc
addl
xchg
cmp
xor
xchg
ljmp
clc
in
sbb
sar
in
aad
inc
pusha
test
mov
and
neg
jg
push
test
mov
daa
loop
inc
cmpsl
and
jnp
jnp
pop
dec
int3
hlt
ret
imul
xchg
or
add
xorb
mov
pop
cmp
xchg
pushf
adc
pusha
ret
mov
or
notb
and
sti
bound
je
les
jge
jmp
in
xor
adc
sahf
imulb
ja
sbb
testl
loopne
stc
data16
pop
movsl
or
orb
sbb
in
and
aaa
sub
cs
mov
fcompp
mov
fs
push
aam
rcll
push
popa
mov
mov
xchg
or
dec
jl
pop
xchg
and
xchg
mov
dec
mov
jno
dec
or
and
dec
xchg
sahf
mov
mov
dec
fwait
cmp
imul
push
add
xchg
inc
push
mov
movsb
push
mov
cmp
and
mov
repz
subb
mov
movsl
adc
mov
test
les
dec
pushf
cli
jb
test
andb
mov
xchg
jg
ljmp
shll
mov
icebp
xchg
push
lcall
sub
mov
in
gs
leave
mov
leave
adc
je
inc
push
in
sahf
test
or
or
addr16
dec
or
xchg
xchg
and
push
adc
cmp
clc
nop
pusha
stc
lret
in
jno
inc
outsb
sub
push
add
add
fcmovnu
test
sar
int3
std
stos
cmp
pop
push
call
xor
adc
ds
dec
aad
jg
mov
incl
mov
adc
mov
mov
movsl
cwtl
xor
cmp
ds
jae
or
push
imul
mov
sbb
cmp
and
pop
adc
popf
pop
js
push
mov
das
pop
test
sbb
push
adc
dec
leave
je
adc
cltd
std
jecxz
pop
int3
loopne
mov
mov
or
pop
jnp
inc
sbb
mov
in
test
into
add
jmp
mov
jns
lar
orb
mov
mov
jge
pusha
sahf
mov
sub
loope
test
mov
fcmove
add
scas
leave
jno
pop
add
mov
xor
stc
outsl
sbb
sbbb
stos
pop
repz
xchg
faddp
neg
adc
addr16
imul
or
fcoms
int
cmpsl
ret
sub
bound
and
fcmovne
push
cltd
xor
bound
mov
jecxz
mov
inc
ja
push
xchg
pop
inc
xchg
mov
test
mov
pop
add
out
call
popf
inc
outsl
mov
lahf
imul
jmp
add
xchg
pusha
cmpsb
lods
in
inc
and
cltd
pop
loop
jbe
iret
xor
arpl
icebp
dec
loop
xchg
xor
jbe
mov
jle
movsb
mov
and
jne
mov
lods
cmp
icebp
rolb
or
xchg
daa
dec
pop
push
inc
fisubs
sub
fsubl
daa
jmp
inc
cmc
jecxz
add
push
stos
cmp
mov
stos
xchg
mov
test
xchg
test
sbb
sub
lods
addl
aam
inc
and
push
mov
fimuls
pop
and
insb
dec
rclb
xchg
sub
jne
mov
sbbl
out
jle
lds
rcrl
xchg
addr16
mov
pushl
cmp
dec
push
push
and
and
jmp
insl
out
mov
mov
cmpsb
orb
sub
and
push
xor
dec
bound
sarl
jns
cwtl
push
popa
sti
or
aam
daa
xchg
out
ja
dec
xor
and
mov
mov
test
jae
sbb
std
push
inc
cmpsb
imul
es
dec
sub
rcll
push
lock
out
std
add
test
jl
mov
aas
jbe
adc
hlt
push
addr16
push
lcall
mov
shll
jmp
sbb
sub
popf
adc
mov
inc
push
xchg
dec
addb
popa
mov
hlt
pop
insb
shlb
js
push
push
xlat
lcall
sub
cli
std
sub
cwtl
int
sub
inc
or
adc
movb
push
xchg
loopne
fs
jo
popf
or
stos
mov
sub
xor
dec
cmp
fmull
jp
pop
push
sub
mov
test
movsl
decb
cmpsb
fisubrs
mov
push
push
push
mov
mov
sbb
dec
pop
test
leave
adc
jne
inc
sbb
dec
pop
loopne
andb
test
sub
leave
sarb
cmp
mov
xchg
adc
or
sub
lahf
adc
sub
pusha
and
and
call
xchg
pop
or
fwait
inc
aad
cmp
and
and
test
xlat
sti
mov
popf
ret
mov
ror
and
es
cmpsl
and
cli
adc
lret
outsl
es
daa
cli
cmpsb
mov
dec
mov
cmp
ljmp
pop
add
data16
fcmovnu
addl
jmp
mov
nop
movsb
mov
push
add
clc
lret
out
xchg
pushf
jae
cmp
xor
push
and
orb
rcrb
pop
inc
arpl
xchg
icebp
sbb
push
out
jp
xchg
test
dec
mov
sub
inc
rorb
inc
pop
cmpsb
icebp
cltd
and
xor
cmp
inc
idivl
pop
fistpl
xchg
rclb
cmp
mov
add
push
ds
mov
sarb
add
test
negl
jne
dec
dec
clc
sbb
aad
or
sbb
mov
aam
mov
push
sub
test
mov
push
inc
or
leave
decb
jns
out
les
or
inc
inc
sti
shll
inc
ja
mov
jbe
fisttpll
add
jg
cmc
repnz
popf
lock
cmp
dec
pop
rolb
xchg
or
bound
add
jno
into
mov
pop
movsb
dec
shr
inc
inc
clc
js
xor
pushf
repnz
in
mov
fwait
inc
mov
sti
inc
outsb
arpl
xchg
std
rcrl
xor
jns
shrl
in
sub
pop
jno
mov
and
push
sbb
jl
mov
pusha
jo
repnz
lcall
push
cmpsb
insb
and
and
jnp
stos
fwait
dec
mov
xchg
sub
shll
xchg
mov
fwait
cmpsl
repz
pop
adc
push
xchg
adc
mov
inc
sbb
mov
cmpsl
sub
and
inc
aaa
aam
and
inc
push
cmpsb
lcall
arpl
push
fcompl
int3
out
and
cmpsb
incb
adc
cmp
shll
shl
je
ja
xor
and
gs
rcrl
dec
cmpsl
icebp
jle
sbb
inc
xchg
testb
and
out
aas
imulb
fstp
push
sbb
pop
cmp
lcall
cs
sbb
cmp
adc
das
lods
movsb
push
mov
jge
mov
push
fucomp
jbe
lret
cmp
and
xchg
jno
pop
jecxz
mov
jno
aam
cmp
ds
sahf
push
or
cmp
test
stos
xor
cmp
jl
push
inc
rorl
stc
adc
test
stos
aaa
int3
mov
jae
or
push
repz
sar
add
xor
insl
mov
cli
gs
stos
aas
bound
pop
fiaddl
mov
cmp
xchg
test
add
addr16
adc
lods
insl
mov
mov
mov
or
add
jno
js
int3
lahf
int3
pushf
iret
inc
stos
push
roll
lods
aam
adc
push
jno
enter
xor
rol
mov
dec
adc
insb
jne
pushf
dec
inc
xchg
stos
ljmp
sahf
xchg
js
imul
xchg
mov
cmp
push
es
mov
arpl
std
inc
xchg
inc
jo
in
lods
data16
mov
cmpsb
cltd
mov
lods
popa
incb
pop
sbb
dec
dec
push
mov
loope
rol
cmp
cltd
aaa
jmp
arpl
lea
iret
adc
mov
test
pop
pusha
jo
cmc
jmp
dec
inc
xor
sysexit
leave
pop
leave
cmp
lods
ja
test
ljmp
mov
push
jle
dec
pop
cltd
out
inc
lret
shrl
sub
xlat
shlb
js,pt
fdivrs
shrb
lock
fdivr
fsubp
pop
loopne
inc
cwtl
insb
mov
test
xchg
shrd
dec
hlt
les
sbb
sub
test
and
flds
daa
dec
int
cmp
fcoms
xchg
add
push
add
pop
addb
popa
sbb
ss
jle
imul
stc
gs
mov
repnz
mov
and
push
insb
sbb
xchg
mov
sbb
lods
lea
mov
test
iret
xor
mov
arpl
pusha
jle
ja
sub
roll
fstps
in
mov
adc
fst
or
mov
ds
aaa
sbb
xchg
lods
outsb
or
jne
fisubs
fistl
mov
data16
dec
or
xchg
shl
std
popf
mov
cmp
sbb
xchg
dec
out
xor
mov
xor
sbb
mov
stos
lods
lret
repnz
stos
int3
test
cmpsl
repz
inc
sub
mov
dec
and
fstps
sarl
xchg
mov
ror
push
mov
cmpsl
icebp
ror
push
lock
mov
fs
ja
jb
shll
arpl
jbe
lods
sub
fidivrs
and
or
clc
ret
pop
cmp
sti
out
sbb
outsl
div
dec
inc
outsb
jb
jl
nop
hlt
mov
or
nop
add
pushw
sbb
inc
outsl
mov
mov
je,pn
mov
jmp
ja
lea
loopne
and
adcb
cmp
out
insl
push
add
loope
lds
movsb
pop
lcall
roll
in
aas
xchg
dec
lret
loopne
inc
inc
sub
inc
ret
push
popa
in
data16
push
jb
mov
stc
and
inc
leave
mov
nop
outsl
in
out
dec
xchg
imul
xor
lods
imul
sub
mov
jge
pop
lret
adc
mov
and
inc
movsb
pushf
bound
inc
sub
adc
mov
sbb
jno
inc
in
sub
push
leave
rorl
in
jb
stc
mov
sti
push
inc
gs
lods
pop
xchg
daa
fs
xchg
das
jo
fsubl
es
aaa
cmp
lea
jl
aas
ss
jmp
mov
fcoms
mov
xlat
mov
pop
add
lds
xor
popa
mov
leave
mov
push
pop
or
fidivs
push
sbb
and
lcall
js
adc
xchg
fisttpll
and
push
pop
mov
sub
mov
sub
mov
fisubrl
pop
repz
pop
negl
xor
pop
int
popf
jnp
test
fldt
fistpl
dec
xlat
sahf
lahf
or
mov
xchg
push
push
mov
mov
and
and
enter
inc
mov
jp
cmp
or
mov
test
into
sahf
push
faddp
mov
mov
mov
enter
int3
imul
roll
out
sti
lods
push
shrb
inc
loope
mov
push
push
arpl
sbb
inc
lcall
sub
xchg
add
in
clc
aas
xlat
cli
add
xchg
cmpsl
outsb
inc
push
cmp
outsl
scas
ljmp
stos
bound
pop
loop
jg
mov
ds
cmc
cmc
mov
stc
push
cmp
shrl
cmpsl
insb
rorl
ss
sub
sti
sbb
xchg
mov
inc
in
sti
into
sbb
sub
dec
iret
insl
jg
das
out
jo
pop
fisubrs
aam
lahf
shlb
dec
cmp
mov
sub
mov
ljmp
and
rcrl
sbb
adc
ljmp
dec
cmp
jbe
push
popa
daa
rorb
push
inc
aad
fstl
cmp
imul
das
sbb
pushf
pop
mov
movsl
icebp
pusha
sbb
push
fisubs
pusha
das
fcom
popf
dec
out
imul
loopne
das
fdivr
and
add
push
xchg
xor
hlt
sbb
or
std
or
mov
in
xchg
cmp
jb
fs
push
push
inc
aas
lret
mov
or
imul
mul
sbb
into
cmpsl
fstpt
or
mov
adc
hlt
mov
xchg
mov
cmpsl
test
push
pusha
jmp
add
pop
jb
xchg
imul
xlat
addl
and
xchg
daa
sbb
adc
push
sub
cmp
and
push
adcl
push
loopne
arpl
insb
arpl
mov
lret
and
jb
pop
mov
jecxz
mov
call
sbb
jp
out
in
imul
pop
insb
push
cmpsl
jl
movsb
scas
into
lock
dec
in
dec
cmp
mov
and
fisubrl
imul
leave
jg
add
lcall
aas
mov
aam
rolb
pop
jge
push
fcoml
insl
or
inc
add
jg
push
pushf
xor
int3
mov
jo
cmp
pop
pop
sarl
mov
dec
out
cs
les
subl
push
fistl
inc
xor
jne
stc
or
ds
lea
or
mov
add
sbbb
push
outsl
pop
dec
mov
sbb
loope
outsb
rcll
in
iret
xchg
cmp
shrb
psubsw
sub
add
and
fbld
adc
sbb
mov
add
das
sub
mov
xchg
movsb
push
scas
push
or
in
adc
ja
test
and
xchg
sbb
adc
or
fildll
mov
xchg
in
mov
or
mov
mov
jl
jl
stos
lds
decl
inc
jmp
inc
cltd
xor
test
and
pop
insl
fildl
inc
subb
ffreep
out
jle
int3
lret
xlat
ret
test
aaa
roll
mov
std
in
dec
mov
aas
mov
sbb
add
inc
cld
push
insb
leave
repz
sahf
jecxz
mov
ret
push
ss
out
adc
lea
rep
adc
xorl
cmp
std
enter
pusha
mov
repz
mov
int
mov
pusha
fwait
sti
jg
xchg
lods
arpl
xor
mov
and
rorl
jp
popf
stos
scas
mov
mov
cmp
dec
push
jbe
add
ds
or
popf
lods
dec
inc
int3
or
mov
stc
or
xchg
dec
mov
hlt
scas
into
aaa
aad
aam
addr16
cltd
push
ret
icebp
fwait
xchg
xor
add
add
in
sbb
xchg
dec
sbbb
enter
jne
dec
inc
cwtl
xchg
ja
hlt
push
ja
xor
or
xchg
dec
fidivs
pusha
sbb
xchg
lcall
sub
arpl
leave
mov
sbb
js
xchg
mov
add
in
aam
jle
dec
mov
in
adc
pop
sub
or
out
jmp
sbbb
inc
lret
cmp
lahf
call
dec
lock
push
push
jns
cltd
mov
add
lds
push
push
lcall
pop
filds
js
mov
lods
lret
push
fcompl
pushf
fildl
stos
bound
sti
das
fildll
and
jle
push
jecxz
jl
add
mov
rcr
mov
lods
jg
sbb
fs
mov
sbb
pop
popf
xor
shrb
mov
jo
mov
and
bound
mov
sbb
mov
dec
movsb
xchg
xchg
push
jae
cld
lret
cmp
dec
mov
inc
ja,pt
inc
push
pushf
mov
fildl
loope
clc
repnz
fdiv
insl
in
dec
insb
mov
dec
xor
jnp
adc
cmc
test
imul
lcall
stos
ror
adc
pop
adc
xchg
shrb
arpl
rclb
dec
data16
and
add
pslld
cmp
adc
fistpll
mov
xchg
int3
call
jae
dec
movsl
push
mov
enter
pop
mov
push
les
dec
lods
test
mov
adc
arpl
out
mov
xor
cmp
lds
push
mov
lret
out
push
stc
pop
push
jne
push
subb
std
jle
sbb
arpl
xor
jmp
dec
mov
jae
pop
mov
sub
mov
or
imul
setl
mov
push
pop
xchg
and
dec
fsub
cltd
pop
mov
mov
es
iret
jge
aaa
mov
shlb
test
aas
scas
sbb
push
out
jnp
lods
sti
in
pop
xchg
xchg
andb
sub
and
dec
cmp
jne
lret
jecxz
sbb
hlt
sub
popf
es
jns
dec
mov
inc
adc
lret
add
sbb
iret
lods
lret
mov
cmc
loope
mov
jbe
ret
xchg
add
popa
stos
sbb
jnp
and
jle
adc
adc
pusha
push
push
sub
rcll
sbb
push
repnz
xlat
xchg
and
xor
outsl
sbb
push
or
lods
gs
mov
call
push
xor
jbe
movsl
js
sub
out
enter
std
jno
mov
in
or
mov
xchg
adc
mov
mov
test
cmp
sahf
add
lcall
or
push
mov
mov
mov
popf
mov
mov
mov
ds
pop
jmp
mov
xchg
inc
std
stc
scas
leave
cmpsb
mov
mov
mov
sahf
dec
dec
out
int
mov
adc
ja
aas
filds
and
xor
pop
jle
xor
stos
add
jnp
std
xchg
push
sub
fwait
dec
ljmp
and
ds
ror
fidivs
cmpsb
scas
or
jp
mov
sbb
sbb
jb
sub
sub
negb
loopne
pop
xchg
or
std
adc
icebp
ja
jmp
mov
mov
xchg
cmc
into
cmp
ficoml
jmp
cmpsb
test
daa
pop
pop
testb
mov
cltd
add
push
jg
push
pop
popf
cmpsl
fdivs
jecxz
data16
pop
shll
jnp
adc
insb
int3
mov
lock
add
outsb
js
sub
sbb
mov
fsubrs
mov
scas
ret
stc
mov
out
lret
inc
jmp
pushf
lods
or
add
aam
lock
inc
adc
cmp
dec
test
inc
push
aad
push
ss
out
sub
testl
stos
jns
bound
clc
outsl
mull
popa
sub
in
in
jo
add
or
cmc
inc
lock
fsubrs
mov
mov
stc
cmp
ret
sbb
xchg
ds
sbb
jp
repnz
adc
mov
sarw
push
out
loopne
out
dec
in
mov
test
jbe
adc
mov
popf
test
pop
mov
aad
jmp
out
into
adc
fdivrp
jecxz
addr16
inc
jmp
subb
mov
push
out
fisubrl
sub
in
sub
cli
push
push
into
cmp
les
mov
repz
repz
orl
mov
push
mov
mov
fidivrl
xor
loope
or
cmpsl
xchg
push
lahf
mov
mov
stos
push
push
xlat
mov
or
mov
dec
xor
sub
pop
sub
and
out
add
fistpl
sahf
mov
sbb
shlb
jp
pop
cs
in
data16
rclb
add
leave
push
jne
push
adc
push
out
lret
int3
addl
adc
outsl
mov
cmp
out
ficoml
mov
xor
cmp
aam
insb
loop
fs
xchg
loope
roll
mov
dec
out
adc
mov
fdivrp
add
jle
cmp
lods
aaa
out
mov
mov
or
repz
pop
movsl
and
mov
icebp
out
mov
mov
adc
je
push
xchg
pop
in
and
out
jae
or
jmp
cmpsb
push
ljmp
iret
xchg
nop
mov
fchs
dec
adcb
shr
mov
cmpsl
inc
stc
xchg
cwtl
insb
idivb
mov
fs
jmp
aam
push
jae
lcall
repnz
sbb
aam
daa
mov
add
mov
mov
scas
add
push
adc
add
xchg
aad
lock
jb
sarl
int
fisttps
and
mov
int
push
mov
ret
incb
pushf
inc
ljmp
inc
enter
lods
mov
aam
mull
jle
out
fdivl
push
xchg
push
jne
sti
mov
outsl
inc
and
js
lret
push
scas
int3
fnstcw
shl
cld
ret
dec
mov
xchg
mov
mov
mov
ret
push
pop
cmpl
inc
jnp
mov
mov
push
sahf
add
pop
push
mov
adc
test
adc
insl
mov
pop
mov
xchg
ds
into
inc
mov
shrl
call
pop
dec
add
sub
jl
mov
pop
mov
sbb
xchg
fdivrl
ret
sar
mov
jb
mov
cmpsb
and
movsb
mov
notb
fucom
rorl
mov
idivb
test
scas
int3
add
loop
cmp
test
cli
push
clc
xor
je
ficoml
popa
jle
cmp
gs
jmp
adc
xor
push
mov
cmp
sub
add
es
push
popl
inc
push
out
inc
je
mov
push
int3
sbb
fbstp
rorl
hlt
jae
fs
cmp
pop
je
dec
cmp
mov
ret
mov
jno
pop
or
clc
push
xor
scas
push
rcll
es
jo
lahf
add
jle
sub
movsl
cmp
repnz
cmp
mov
and
ficoms
xor
pusha
fcomp
in
sub
stos
inc
imul
mov
add
cmpsl
mov
pop
pop
dec
or
loope
jo
mov
fstpt
test
jbe
cmp
loop
lds
gs
mov
dec
hlt
sbb
or
sbb
in
xor
lds
dec
stos
inc
xor
ljmp
inc
sub
mov
loope
xlat
sub
out
add
and
ljmp
insb
xchg
adc
outsb
jb
ffree
fwait
stc
testl
pushf
aaa
xchg
sahf
aam
mov
jae
outsb
popf
xor
mov
dec
repnz
sub
lods
int3
jnp
jns
add
fwait
sub
jmp
je
dec
iret
mov
cmp
xor
push
insl
dec
push
ljmp
jg
test
jo
dec
and
adc
push
std
shrl
or
ds
pop
ja
stos
sbb
rorl
jl
sbb
xchg
mov
xchg
insl
mov
cmpsl
pop
and
dec
mov
jne
test
xchg
movb
insl
fdivrl
orb
or
or
mov
adc
mov
mov
jno
outsl
incb
xchg
ja
repnz
test
add
or
cs
clc
test
xchg
lock
loop
lods
mov
xchg
dec
sub
mov
daa
cmp
ds
lds
mov
mov
addb
js
shl
pop
mov
mov
out
xor
ficoml
call
mov
bound
dec
pop
mov
mov
xorb
sahf
cwtl
jb
mov
jne
cmp
add
push
pop
pop
stos
cld
cmpsl
call
enter
inc
jge
aaa
dec
push
outsl
mov
mov
mov
bound
pop
aam
aad
ret
leave
mov
loope
bound
leave
fsubs
inc
cld
adc
pop
cmp
in
cmp
sub
sbb
and
in
mov
test
shlb
pop
movsl
fimuls
xor
insb
or
sub
dec
xchg
in
addr16
jb
jns
xchg
inc
dec
dec
dec
jae
pop
cmp
aad
pop
mov
repnz
fmuls
call
movsb
int
je
and
or
inc
jb
scas
and
xlat
jge
cmpsb
pop
pop
out
dec
adc
stc
stos
xchg
jnp
pop
jno
lock
adcb
test
in
mov
adc
mov
push
xchg
pop
int
sbb
pop
mov
clc
jecxz
jmp
sub
test
mov
add
add
les
dec
adc
push
push
rorl
mov
push
pop
les
inc
fucom
inc
loope
or
xor
add
jmp
cwtl
dec
mov
sub
cmp
scas
sub
into
loope
adc
xor
sbb
int3
pop
aam
rclb
mov
pop
shll
ds
into
or
dec
inc
mov
nop
mov
xor
int
inc
jmp
xor
inc
adc
cli
popa
cmpsl
cmp
shll
pop
pusha
popa
and
leave
or
aad
cmp
decb
mov
dec
fdivl
cmp
or
adc
int
sub
adc
js
sbb
icebp
hlt
mov
xor
lods
popl
jne
push
les
xchg
mov
push
inc
pop
pop
into
loop
xor
test
jp
cmc
in
ds
inc
fs
jg
cwtl
imul
shrb
pop
dec
vpsubusb
cmovb
mov
imul
jp
add
add
shll
hlt
inc
lods
sbb
orb
sbb
inc
mov
mov
pop
push
xchg
mov
mov
mov
sbb
repz
cwtl
and
xchg
repnz
stos
jmp
or
nop
int3
mov
js
test
xchg
xor
mov
incl
sub
in
aaa
les
sbb
sti
mov
sub
pop
das
mov
or
in
std
scas
jmp
es
loop
push
ss
mov
stos
loop
or
sub
cmp
dec
shlb
jnp
loope
aas
test
xchg
lods
inc
and
push
sbbl
pop
fsqrt
ficoms
inc
mov
arpl
sbb
mov
movsb
imul
sub
cmp
sbb
ss
std
push
push
pushf
xchg
je
cli
dec
fidivrs
ret
cwtl
mov
mov
jmp
out
dec
add
xchg
jbe
aad
inc
test
test
sbb
roll
sub
mov
cmp
imul
cmp
mov
adc
pop
sub
mov
pop
sbb
xchg
xor
sbb
mov
pop
push
cmp
mov
push
aas
sbb
test
dec
and
pop
sbb
outsl
fisubl
test
movsl
ss
lods
dec
or
push
mov
out
shlb
cs
xchg
popa
repz
clc
fdivrs
jae
add
stos
jnp
cmp
stos
pop
iret
mov
fdivl
push
push
xchg
pop
in
lret
sbb
and
fstpt
fsub
popa
je
out
in
daa
std
adc
addr16
jecxz
and
test
mov
or
xchg
adc
sub
pop
shll
jmp
xor
es
mov
pop
sarl
push
mov
ja
dec
mov
mov
outsl
pop
lahf
pop
in
js
xor
cmp
xchg
sub
lcall
test
mov
repz
mov
bound
pushf
repnz
and
or
out
push
dec
les
jne
dec
cmp
insb
pop
popf
sbb
sbb
jno
mov
cmpsb
mov
out
xlat
and
icebp
inc
hlt
mov
xchg
pop
xchg
or
mov
data16
divl
ret
and
jge
xchg
dec
ss
or
mov
clc
movsb
xchg
out
mov
sub
sarb
pop
jge
mov
insb
push
movsl
pushf
pop
xchg
int3
jmp
xor
xchg
dec
jp
pop
arpl
xchg
xor
add
scas
xchg
dec
add
xchg
pop
popf
dec
mov
movsl
sbb
into
lret
cmp
adc
fsubl
jno
in
test
insl
stos
int
push
mov
jne
push
aas
fisubl
ficoms
adc
loop
stc
scas
and
dec
hlt
xchg
push
outsl
mov
inc
lods
and
dec
xor
cmp
xsha1
cmpsb
mov
lods
fwait
sbb
rcr
dec
and
test
sbb
fdivrs
stos
lea
mov
in
outsb
pop
sbb
pop
add
lcall
ret
sub
clc
inc
cli
mov
pop
xchg
push
pop
sbbl
adc
sbb
in
in
arpl
jb
aaa
mov
mov
lea
xchg
push
int3
cwtl
fucom
stos
imul
sahf
aad
cmp
outsb
pushf
mov
addr16
adc
or
repz
arpl
mov
mov
mov
mov
adc
bnd
pop
stc
pop
std
sbb
nop
sti
sub
aam
push
pop
ss
pop
rorb
insl
jbe
movsb
mov
mov
or
in
cmp
cmpsl
std
fsubl
in
push
dec
je
mov
push
jae
add
xchg
lods
sub
inc
add
inc
xor
jb
push
jmp
movsb
sti
aam
push
dec
fisubrs
int3
adc
in
cmp
fdivrp
push
fwait
lea
dec
push
add
jmp
mov
cld
jmp
mov
xor
jae
mov
lods
testb
sub
mov
add
mov
inc
divb
mov
mov
out
cwtl
sub
addr16
mov
sbbb
arpl
scas
xchg
hlt
xor
cmpsl
pop
test
add
jmp
repnz
add
push
jnp
jmp
mov
dec
ret
sbb
xlat
inc
lock
mov
xchg
lcall
int
mov
and
mov
inc
push
out
adc
push
jae
jp
sub
in
or
loope
decl
and
or
adc
je
and
pushf
and
or
mov
pop
aad
add
shrl
add
xchg
mov
inc
or
arpl
rorb
mov
pop
sub
mov
call
lret
pop
pushf
adc
cs
add
inc
lcall
mov
stos
adc
inc
repz
add
add
dec
repnz
mov
xor
xor
movsl
mov
popa
mov
lock
cmp
jl
aaa
icebp
call
pop
pop
pop
push
dec
push
je
jge
or
mov
push
inc
jo
in
aas
int3
cs
mov
and
xorb
insl
or
jb
iret
ds
adc
shrl
pop
pop
je
fisubrs
push
cmp
mov
sbb
xchg
sbbb
lret
pushf
inc
xor
mov
or
pusha
aas
mov
dec
leave
out
jmp
xor
fwait
insb
adc
out
loope
mov
in
lret
cmp
sub
aas
or
ljmp
cmp
mov
add
shrl
dec
out
mov
or
jp
mov
add
pop
xchg
into
push
loopne
cli
cli
stos
pop
xor
xchg
popa
mov
ljmp
sbb
fiadds
xor
xchg
pop
shll
negl
push
adc
mov
in
leave
les
aad
jl
out
cmp
mov
lock
dec
mov
xor
xor
mov
adc
out
pop
lret
les
dec
out
push
and
push
jo
outsl
dec
aaa
pop
out
inc
lahf
leave
mov
movsb
adc
push
and
jae
sub
popa
push
mov
in
mov
dec
les
sbb
sbb
repnz
or
lea
cmp
add
jge
inc
les
std
sub
movsb
jl
insl
dec
push
sub
pop
loope
xor
sbb
pop
scas
pop
pop
test
stos
outsb
out
loop
xor
mov
lret
popa
mov
inc
xchg
push
roll
jbe
add
xor
popf
ret
or
fs
repz
adcb
xor
push
dec
mov
jle
in
adc
dec
mov
sbb
jp
js
xor
dec
out
mov
in
sbb
nop
xchg
add
push
data16
push
mov
pop
out
sbb
es
pop
cbtw
mov
insl
dec
xor
dec
jo
push
mov
pusha
leave
sub
mov
imul
fisubrl
xchg
insl
in
gs
ret
in
test
xorl
aaa
into
and
mov
es
inc
jcxz
sub
sub
push
sub
pop
push
lret
out
mov
js
aad
mov
pop
faddl
cmpsb
cmp
insb
mov
add
xchg
in
push
test
mov
xchg
into
jmp
add
xchg
or
fs
cwtl
stos
add
inc
in
mull
xchg
fisttpll
and
cmpsb
in
sahf
jns
popf
sub
mov
aas
popa
cwtl
or
xchg
pop
jbe
mov
xor
outsl
cmp
sbb
cmp
mov
adc
mov
lea
mov
ds
xor
ficompl
add
sub
cltd
lods
addl
popf
xchg
mov
jo
sti
lock
dec
std
adcb
mov
test
in
adc
in
or
mov
and
jg
sbb
mov
jbe
xor
aad
add
mov
rcrb
ja
mov
add
enter
cwtl
gs
pop
inc
rol
nop
imul
pop
add
clc
rcrl
and
aam
or
rorb
jns
stos
cli
jno
jecxz
cli
pop
mov
dec
call
ret
insl
cld
out
mov
mov
rorb
adc
push
dec
adc
pop
xor
inc
cmp
inc
cld
andl
imul
dec
inc
dec
pusha
pop
jge
mov
mov
aas
sbb
scas
add
fdiv
into
mov
es
popa
cmp
enter
ret
fwait
hlt
and
cmp
jg
sub
sbb
push
or
dec
adc
rolb
lret
shl
push
andb
push
dec
or
jmp
sbb
ret
insb
fisttpl
rol
sbb
shrb
jbe
pop
fmuls
sub
es
push
add
gs
loopne
or
or
test
fwait
imul
arpl
lock
adc
xor
sbb
or
in
cmpsl
lret
xor
jb
xor
shrb
fidivl
jp
aaa
cmp
mov
fldenv
repnz
dec
out
mov
sub
jbe
cmp
xchg
mov
mov
lret
loop
loop
imul
xor
mov
dec
das
add
popf
push
xchg
addb
aam
adc
xor
jecxz
and
aam
orl
lcall
adc
cs
imul
xchg
adc
pop
jb
xchg
mov
icebp
jg
std
cli
mov
lock
adc
jb
sub
xor
aas
mov
pop
sti
jno
popf
mov
repnz
out
adc
lret
lahf
xor
mov
shrb
dec
int
loop
push
mov
dec
mov
test
subb
mul
xchg
inc
out
cltd
int3
ja
test
sti
shrb
xchg
outsl
jle,pt
push
pop
pop
je
push
and
mov
enter
nop
bound
pop
jmp
mov
and
mov
and
shlb
shrb
and
jne
in
out
xchg
xchg
pop
sti
movsl
addr16
stc
pop
pop
push
outsl
ret
adc
sub
push
add
sub
out
sar
in
cmpsl
xchg
cltd
mov
int3
iret
xor
adc
xor
xorb
stos
test
cld
loop
xor
and
add
or
mov
icebp
lcall
dec
shl
adc
and
pop
cwtl
shl
test
jl
jne
adc
idivb
xchg
mov
jnp
inc
cmp
push
mov
dec
sub
mov
das
movsb
jl
mov
cld
lret
xchg
movsb
arpl
push
fldl
scas
xchg
lock
dec
jno
cmp
nop
sarl
adc
mov
jmp
xchg
sbb
jnp
jbe
adc
popa
sbbl
imul
push
add
xchg
cmp
pusha
jnp
leave
xchg
loop
hlt
daa
scas
mov
rorl
jl
cld
add
adc
insl
movsl
addr16
inc
mov
jo
xor
mov
dec
les
mov
mov
add
cld
movsb
repz
or
imull
or
cmp
sub
xchg
out
aas
pop
movsb
add
jbe
sub
fisttpll
jp
sub
jbe
fwait
jmp
aas
stc
shrl
repnz
and
jmp
pushf
add
shlb
cmp
pusha
or
mov
or
scas
ret
xchg
jmp
call
cmp
cmp
xor
outsl
mov
jnp
dec
mov
and
dec
push
pushf
mov
add
enter
xchg
lods
fbstp
cmpsl
punpckhdq
out
mov
popa
inc
repz
xor
cld
xchg
imul
jge
inc
mov
mov
or
in
xor
dec
addb
ret
movsl
and
add
jg
mov
mov
or
sbb
adc
xchg
mov
ljmp
ss
dec
xor
test
jl
cmp
xchg
cld
movsb
int3
fmull
mov
cwtl
pop
sbb
inc
fwait
jb
inc
inc
sub
stc
mov
or
mov
bound
pop
adc
testb
add
add
mov
xchg
mov
cmpsb
pop
or
jbe
in
test
mov
cli
fwait
mov
stos
addb
sti
mov
enter
je
dec
testb
mov
roll
push
leave
pop
pusha
or
cwtl
inc
pop
dec
lcall
out
cmp
sub
mov
sub
sbb
lods
sub
pop
mov
sbb
push
inc
xlat
add
testb
in
out
cwtl
popf
and
mov
lahf
pop
js
fisttpll
data16
inc
push
test
popa
pop
lcall
ja
dec
sbb
decb
outsb
or
cmp
mov
mov
data16
jnp
cmp
mov
repz
sbb
imul
adc
sub
repz
and
repz
jle
insb
inc
decl
lock
sahf
es
jo
nop
push
mul
sub
into
js
xchg
or
popa
xlat
clc
into
add
mov
int3
sbb
fs
push
pop
adc
test
ljmp
pop
dec
dec
cltd
mov
daa
and
sub
sub
addr16
ret
xlat
repnz
lods
mov
rolb
xchg
cmp
test
popf
xchg
addl
aad
jnp
pop
pop
push
jecxz
xchg
fnstcw
push
decb
mov
ss
sti
mov
or
jns
loope
inc
mov
imul
stos
cld
sti
scas
sub
dec
inc
int
std
mul
xchg
sbbl
sbb
mov
add
and
in
loopne
mov
andb
jae
jp
test
xchg
xchg
int3
loop
lods
add
lods
notb
pop
and
xor
sub
mov
pop
movsl
cltd
push
lods
cld
scas
imul
in
xchg
jo
mov
stc
movsl
mov
popw
push
mov
addb
sbb
push
xor
sbb
or
push
aam
dec
and
dec
sub
lock
mov
pop
jge
fisubl
mov
loope
dec
clc
mov
jle
decl
mov
jnp
loope
cli
shr
xchg
add
jmp
ljmp
xor
sbb
ret
or
mov
fucomp
test
outsl
movsl
fucom
mov
dec
lcall
cld
fstpl
pusha
insl
sbb
into
js
repz
inc
stc
sbb
push
inc
loop
jmp
push
mov
imul
cmp
repz
xchg
xchg
das
repz
lret
ror
mov
je
fdivrl
aad
add
push
and
movsl
jbe
pop
xlat
lahf
sub
ljmp
std
cmc
or
inc
sti
mov
or
xchg
or
bound
push
mov
jne
dec
mov
lock
scas
inc
push
pop
repnz
lods
dec
repz
into
movsl
pop
and
or
dec
mov
arpl
mov
int3
pop
leave
js
cmp
mov
sub
jecxz
xchg
push
xor
dec
movsl
xor
subb
ret
in
xchg
jp
mov
or
aaa
mov
pop
outsb
aam
data16
mov
sbb
lret
jp
add
xor
fidivrs
shl
cmpsl
int3
xor
mov
mov
xlat
inc
fidivrl
and
jnp
cmpsl
push
push
je
pushf
rdtsc
jnp
sti
jl
jno
dec
movsl
jmp
mov
cmp
mov
sti
lret
fimuls
jb
pop
movl
notl
icebp
cmpsb
inc
leave
das
sub
es
lcall
inc
mov
and
aaa
gs
xor
push
cmp
sahf
add
testl
cmp
arpl
ret
inc
inc
mov
rcrl
outsb
shr
or
xor
jecxz
mov
ret
inc
inc
scas
aaa
mov
lret
push
jp
sbb
inc
clc
xor
ret
ljmp
mov
xchg
dec
and
mov
cmpsl
daa
in
in
sub
sbb
mov
jbe
cmp
shll
pop
fimull
repz
fadd
pop
test
sbb
mov
xchg
out
xchg
pop
mov
addl
push
out
dec
mov
icebp
inc
mov
adc
jecxz
lds
stos
mov
out
ret
pop
sub
cmp
cmp
shr
push
test
pop
lahf
adc
jo
push
movsb
cs
nop
stc
dec
add
rol
cmp
imul
push
push
jp,pn
ljmp
aam
fs
clc
push
fdivrl
mov
and
xchg
insl
push
cmp
and
test
iret
cmp
mov
and
rorl
jl
out
xchg
int
test
aam
cli
or
outsl
cmc
das
xchg
fnstenv
insl
xchg
js
mov
mov
fdivrl
std
sarb
jbe
mov
dec
shrl
mov
push
inc
mov
mov
inc
je
das
imul
inc
mov
imul
mov
jns
idiv
jp
pop
shlb
push
push
dec
pusha
outsb
and
mov
movsb
aad
mov
add
push
stc
cmp
add
gs
sub
sbb
daa
repnz
stos
inc
lret
ds
icebp
insl
sarb
mov
sbb
rcrl
adc
loope
test
orl
jp
hlt
sbb
shlb
sub
ljmp
ss
iret
jl
add
cmp
jle
aad
fisubs
jecxz
gs
out
and
add
inc
int3
mov
fistpl
cmpsl
mov
mov
lods
inc
icebp
push
dec
xor
pushf
push
addr16
or
add
push
pop
sbbb
in
push
sub
fistpl
pop
inc
aaa
cmp
jmp
adc
gs
ss
fwait
imul
je
add
adc
push
sti
mov
lea
push
jns
leave
xlat
movsb
out
repnz
mov
or
psubusb
add
sub
lcall
or
leave
notb
mov
icebp
adc
andb
outsl
xchg
inc
add
shrb
addb
popf
xor
imul
cmp
jnp
mov
jne
pusha
data16
jge
jge
dec
jae
bound
add
pop
mov
xor
stos
add
jnp,pt
sbb
cmp
dec
out
mov
mov
dec
mov
and
gs
xchg
adc
cmp
aam
mov
adc
hlt
xor
mov
and
aam
mov
dec
inc
mov
pop
jmp
test
test
sub
fdivs
fdivrl
sbb
icebp
je
cwtl
adc
adc
jl
or
and
sti
jno
mov
dec
mov
jp
jecxz
arpl
add
push
mov
or
dec
pusha
pushf
inc
ds
lahf
loop
push
pop
test
jle
mov
mov
mov
sbb
repz
js
push
inc
clc
dec
out
ret
mov
jbe
cmp
outsb
cmp
sbb
push
dec
add
and
sbb
jle
mov
jbe
sbb
and
mov
or
jecxz
enter
outsb
mov
jmp
mov
shr
int3
movsl
pop
xchg
aad
popf
push
dec
mov
jg
jge
push
or
sbb
out
dec
adc
mov
aad
or
stc
mov
sub
stos
sarl
or
mov
adc
dec
hlt
in
jae
cmp
movsl
je
dec
cmp
aas
ficomps
mov
jmp
negb
sub
sbb
not
mov
dec
inc
rolb
in
jno
sbb
ljmp
addr16
scas
add
out
pop
je
cmp
push
push
pusha
mov
lds
test
out
bound
test
pop
mov
mov
or
aad
pop
xor
adc
rcrl
jl
push
sbb
adc
pop
pop
dec
mov
pushf
lahf
xchg
test
nop
cmc
clc
lds
test
sbb
xchg
adc
jae
sbb
push
push
sub
mov
dec
call
dec
xorl
cmp
jns
push
arpl
xchg
test
sbb
scas
cmp
decl
aas
repnz
jae
push
fsubrs
lret
addb
out
gs
fsubrs
dec
nop
ss
sbb
and
imul
inc
repnz
sbb
icebp
xchg
sarl
or
addb
lret
sbb
push
insl
pop
push
push
push
push
scas
or
lret
repz
xor
jg
daa
mov
mov
sbb
dec
pop
js
sub
out
lahf
add
out
cmp
cmp
add
out
push
insl
shrl
jbe
xor
inc
lods
test
nop
mov
aaa
into
jmp
stos
mov
int3
aaa
xor
add
ret
push
or
incl
and
movsl
dec
pop
lret
outsb
dec
gs
push
out
jbe
adc
daa
mov
fs
faddl
xchg
pop
sbb
jne
inc
out
neg
leave
cltd
jnp
stos
ret
pop
dec
sub
insb
adc
or
cltd
sarl
pop
ds
ss
dec
jle
rcll
mov
push
or
adc
sub
mov
hlt
add
lds
ret
push
mov
pop
xchg
inc
xchg
xchg
jns
mov
iret
cld
out
and
mul
popl
push
pop
push
sbb
push
cld
fcomps
mov
mov
mov
outsb
push
pop
fldl
testl
dec
sbb
dec
mov
mov
cmp
mull
ljmp
push
mov
adc
inc
dec
pop
xchg
mov
fiadds
xchg
out
inc
aaa
loop
mov
scas
push
jp
inc
popf
adc
int3
out
fs
scas
cmp
dec
cbtw
scas
js
hlt
outsl
cli
pop
jl
popa
aas
cmp
mov
mov
pop
in
adc
sub
and
cli
mov
shlb
sti
fdivr
aad
pop
test
add
loopne
dec
push
stc
mov
jl
jl
les
es
lods
push
je
cwtl
pop
fdivr
testl
pop
js
sbb
sbb
jne
outsb
in
in
push
sub
icebp
shlb
repnz
jbe
and
das
rcl
sub
iret
inc
adc
jb
aas
insb
jge
push
cmp
jle
dec
stos
jbe
insl
out
idiv
xor
dec
dec
mov
scas
movsb
leave
shlb
ret
or
imul
and
or
shlb
sbb
and
xor
pop
mov
stos
testl
outsl
push
movsl
inc
das
movsb
jp
mov
xor
int3
ljmp
cmp
xor
mov
and
add
rcrb
cmpsb
cmpb
es
nop
pop
mov
fstps
andb
arpl
xchg
loop
pusha
xchg
packuswb
shll
push
ja
mov
cmpsb
xor
jge
scas
mov
sahf
push
fstps
lret
into
jecxz
addr16
inc
xor
addr16
jne
pop
jg
adcl
scas
aam
shl
dec
jmp
out
cmp
cmp
push
dec
mov
jg
jae
dec
xor
add
pop
rcll
mov
push
in
aaa
mov
lahf
jb
pop
repnz
mov
clc
jmp
fucomip
in
stos
lret
xchg
lods
rcrb
push
loop
mov
adc
fsubl
sbb
lret
imul
loop
out
pop
das
inc
add
mov
xor
xor
dec
repnz
mov
lret
and
popa
sbb
xlat
adc
fistpl
xor
and
sub
in
sbb
cli
out
mov
inc
sbb
xlat
adc
sub
pop
cmp
ja
ja
in
xor
xchg
test
add
dec
call
xchg
mov
adcb
mov
mov
fwait
adc
lret
fisttpl
aad
dec
sbb
xchg
sbbl
xchg
mov
cs
xor
jle
or
xchg
dec
shr
arpl
xchg
adc
or
mov
xchg
mov
loop
mov
cmpsl
add
daa
inc
xor
mov
pop
xchg
and
and
int3
addr16
cmp
jge
pushf
cmc
inc
mov
test
xchg
lret
or
cmp
xchg
sti
jecxz
add
mov
fwait
arpl
cmp
stc
xorl
shll
cmpsl
jl
daa
es
andb
data16
sub
adc
lea
out
jns
mov
mov
lahf
cmp
fsts
cltd
cmp
pop
ss
in
in
mov
fcompl
sub
stc
jne
cmc
fldl
sbb
fwait
in
mov
lcall
fiaddl
mov
inc
daa
adc
mov
push
adc
inc
mov
xlat
push
movsl
loopne
xor
cld
xor
repnz
enter
cmpsb
jmp
repnz
sbb
jbe
adc
push
pop
jle
lods
and
pop
lds
or
and
imul
adc
sub
xor
jp,pt
jbe
adc
sbb
mov
sub
jnp
fildl
shll
fisttpl
jbe
xchg
mov
sbb
push
cltd
ficompl
loopne
push
gs
dec
sysenter
inc
jb
mov
rorb
loopne
repz
push
popf
xor
adc
imul
dec
sbb
inc
stc
stc
xchg
les
xchg
test
mov
fcmovb
test
dec
lret
out
loopne
lahf
xor
push
insb
adc
push
adcl
repnz
lock
lods
stos
aad
gs
sub
rclb
xchg
inc
or
sub
cmpsb
cmpsl
push
lods
mov
push
jecxz
dec
dec
movsb
jp
aaa
int
test
mov
push
sbb
cld
bnd
xchg
mov
outsb
or
add
xor
in
js
das
orb
xor
insb
xchg
cmp
cmpsb
arpl
mov
mov
push
cltd
sub
mov
mov
insb
or
scas
push
ror
cmp
pop
mov
push
clc
cltd
sahf
ficomps
lcall
mov
adc
into
or
mov
inc
loope
rol
ljmp
pushf
mov
xor
in
cmp
add
xchg
fwait
enter
in
insb
fnstcw
xchg
les
data16
or
cltd
call
js
pop
inc
xchg
fildl
or
ficompl
jbe
dec
pop
pop
push
push
out
call
jb
or
in
and
out
adc
add
mov
dec
jno
mov
pusha
repnz
invd
mov
mov
es
insl
aaa
mov
mov
test
cmp
imul
movsb
in
mov
mov
es
shl
gs
xchg
outsb
or
adc
pop
mov
push
xor
dec
xor
popf
xchg
mov
sti
js
inc
cmp
cmp
or
xchg
push
sti
sbb
mov
jg
mov
adc
cld
jb
add
icebp
jg
cmp
arpl
add
inc
xchg
scas
movsb
hlt
roll
dec
add
rolb
mov
and
xchg
int
out
cltd
mov
push
xchg
pop
mov
loop
add
lock
shll
lea
mov
addr16
aaa
sbb
out
mov
mov
dec
mov
jge
mov
shrl
nop
ljmp
or
addb
pusha
mov
imull
fnstsw
xchg
and
push
sbb
addr16
xchg
cwtl
loop
jnp
dec
loope
push
ja
fidivrl
push
out
stos
int3
pop
mov
leave
sahf
mov
push
in
inc
loopne
xor
sti
pop
adc
stos
pop
xchg
imulb
inc
inc
ds
fiadds
stos
call
incb
shll
call
cld
jns
dec
loopne
ds
mov
outsl
lahf
push
xor
mov
cmp
pop
sbb
pop
call
push
fs
clc
int
mov
add
adc
dec
pop
pop
xchg
push
test
push
mov
imul
xchg
mov
jge,pt
dec
xchg
and
in
and
leave
mov
out
dec
sbb
or
push
shl
push
dec
push
mov
add
test
test
adc
mov
push
mov
les
faddl
inc
pusha
cmp
fistpll
ds
push
push
mov
push
jmp
pop
addl
lahf
addb
arpl
or
sub
and
lods
ret
shll
clc
out
jne
mov
add
push
movsb
ret
cmp
popf
jne
jg
rcl
mov
sub
adc
push
sub
out
sahf
test
or
push
xchg
sbb
leave
push
fs
inc
es
outsl
jecxz
lahf
xor
and
lcallw
mov
jp
add
fidivrl
aaa
or
divb
push
pop
mov
rol
xor
pop
test
jo
imul
push
inc
pop
and
enter
cld
sub
pop
in
pop
mov
pop
add
test
pop
fwait
cmpsb
aam
jae
pop
lock
test
pushl
dec
out
loopne
pop
adc
xchg
mov
out
xor
jp
ret
push
bound
lods
push
mov
and
ret
pop
loope
imul
iret
hlt
ss
fidivrl
xchg
lods
xchg
add
xor
shll
testl
cmp
jno
push
insl
xor
ljmp
sbb
mov
shll
lods
loopne
fidivrs
into
xor
adc
ficompl
stos
adc
cltd
inc
stc
mov
jnp
adc
mov
enter
jg
and
mov
sahf
mov
cmpl
adc
dec
fs
aaa
jns
cmpsl
adc
inc
hlt
inc
iret
stos
data16
loopne
inc
mov
enter
loopne
add
testl
ret
dec
in
mov
mov
loopne
js
mov
sub
push
push
jb
imull
ljmp
sbb
dec
mov
adc
mov
ret
cmp
ja
pusha
gs
divb
scas
jg
sti
imul
pop
inc
mov
sbb
jns
fistl
or
shll
shll
scas
mov
xor
ljmp
insl
pushf
jns
hlt
lcall
mov
fldenv
pop
rclb
mov
mov
sub
mov
lods
cmp
push
sub
leave
mov
sub
hlt
mov
pop
data16
push
fs
fisubrl
xchg
ja
cmp
jne
push
adc
or
adc
ficoms
arpl
daa
sub
ret
push
mov
pop
push
add
add
or
mov
insl
out
and
bound
or
mov
mov
or
mov
or
mov
cwtl
sub
ffree
add
addb
out
mov
push
fxch
fsubrp
fwait
aaa
outsb
icebp
lods
insb
jno
call
adc
cmpsb
and
pop
subl
ficoms
loop
mov
data16
inc
daa
loope
mov
mov
dec
pushf
xchg
ror
cmc
dec
mov
xor
mov
repz
adc
mov
pushf
cmp
orb
rcrl
adc
inc
sub
mov
jns
mov
test
stc
xor
loop
jmp
or
mov
fs
rcrb
xor
adc
jbe
cmpsl
test
pop
xor
ret
out
sti
mov
cmp
inc
cmp
or
mov
lock
add
fisttps
movsl
ja
pop
imul
cltd
inc
xchg
pop
jecxz
gs
movsb
test
cmp
and
pop
dec
mov
mulb
mov
imulb
repnz
lds
inc
dec
loopne
jno
push
test
cmpsb
jg
repz
divl
sub
inc
in
mov
xor
stc
jns
and
outsl
sbb
aaa
add
sub
pushf
jge
loope
pop
push
adc
mov
daa
lcall
or
inc
add
mov
bound
adc
dec
push
xchg
nop
shrl
sub
xchg
add
dec
fwait
and
ds
mov
sub
mov
mov
movsb
aad
idivl
mov
sbbb
loopne
or
and
outsl
insl
sbb
jecxz
xchg
mov
jmp
jle
sbb
or
pop
loop
push
mov
jp
jg
icebp
pop
jl
pop
jmp
ds
div
add
aaa
mov
cs
fistpll
adc
mov
pushf
push
outsl
adc
jp
jno
xchg
xchg
xor
out
jno
and
mov
les
dec
fidivs
out
mov
mov
negl
mov
add
push
stos
jp
fnstenv
ficoml
out
mov
dec
lods
or
sbb
jecxz
sti
sbb
inc
xor
mov
push
incl
xchg
ss
or
push
adc
mov
fnstsw
pusha
push
imul
adc
dec
dec
add
pop
sbb
xor
push
test
inc
sub
mov
jp
dec
ljmp
lret
test
add
out
and
and
jns
pop
dec
push
clc
dec
andl
nop
jnp
scas
cltd
scas
and
cmc
cmpsl
addr16
mov
mov
xor
cmp
lcall
les
jecxz
rep
out
test
lret
mov
inc
sbb
in
adc
mov
jns
outsl
xlat
sub
push
fnstsw
and
cltd
mov
cmpsl
cld
es
mov
cs
push
movsb
jl
jb
shr
std
scas
dec
repnz
pusha
in
dec
cmp
rcrb
mov
cli
sbb
mov
mov
inc
rorl
xchg
insl
sarl
mov
dec
cmpsl
jle
push
popf
and
xchg
data16
jecxz
inc
or
dec
mov
mov
scas
pop
out
movl
enter
xchg
pop
pop
lret
std
pop
test
push
jmp
cld
outsb
lret
cli
adc
jo
scas
mov
mov
out
jbe
les
lods
testl
loopne
jmp
cli
pushf
mov
andb
jb
outsb
mov
iret
or
pop
push
xchg
mov
jnp
or
lods
fsts
lds
xor
dec
loope
xchg
pop
cmp
mov
test
fwait
dec
mov
xchg
repz
mov
push
sti
add
jnp
mov
cmp
and
inc
xor
addr16
pop
push
repz
inc
mov
add
loopne
inc
mov
fldt
stos
cltd
xchg
cmp
pop
push
push
push
insb
push
inc
stos
jl
mov
mov
outsb
scas
xor
pop
sbb
addr16
int
jmp
popf
ss
pop
xchg
mov
sub
daa
add
call
sahf
sub
and
xchg
insl
adc
jmp
cmp
add
jo
pop
cmc
fldl
lret
adcb
mov
in
int
add
clc
gs
fwait
loopne
cmpsl
fiaddl
lods
faddl
or
popf
push
dec
imull
push
popa
idivb
mov
fcmovnu
insl
int3
in
dec
mov
iret
lea
scas
pushf
gs
fcompl
inc
mov
jae
jmp
popf
pop
icebp
clc
cmpsb
clc
sti
fimuls
out
mov
flds
stos
cmpsl
out
xchg
ljmp
divl
mov
int3
ljmp
hlt
lcall
inc
xchg
int
cmpsl
in
repnz
clc
mov
dec
mov
xor
inc
jmp
clc
cwtl
add
mov
push
add
mov
pop
dec
sbb
sub
outsb
ret
dec
out
jnp
mov
inc
push
push
out
repnz
and
inc
or
aaa
pop
cmp
out
jns
lock
shl
leave
cmpsb
adc
scas
push
xchg
xchg
or
insb
adc
clc
lods
icebp
test
inc
or
movsb
out
sbb
push
sub
mov
sti
or
lds
lret
pop
jecxz
cwtl
cwtl
sbb
sub
fwait
dec
rcr
movsb
std
or
mov
pushl
xor
test
addr16
jg
imulb
adc
xchg
shrl
push
jne
loope
inc
mov
adc
call
stos
in
test
dec
mov
xchg
jae
lds
jb
test
or
rcl
cmp
int3
out
jle
jbe
enter
les
mov
lods
xor
pop
addr16
push
sub
pop
xchg
movsl
pop
loop
cmp
mov
mov
or
xchg
push
mov
bound
das
mov
fsin
pop
test
int
cmp
lods
jns
fs
rclb
and
mov
notl
xchg
pop
and
sbb
mov
push
mov
mov
aaa
mov
hlt
inc
mov
movsb
jbe
xchg
enter
pop
mov
repnz
mov
fsts
inc
xchg
dec
and
cmpsb
pop
cmc
das
test
add
data16
cltd
stc
lds
inc
leave
in
xchg
xor
insl
rcr
mov
dec
aam
mov
pop
icebp
ret
cmpsl
rcrb
sbb
les
pop
mull
or
sub
bound
mov
jge
fcmovnu
jae
xchg
and
xor
lret
stos
jmp
lods
out
dec
jo
ret
inc
daa
clc
mov
out
dec
lret
sti
inc
push
test
inc
and
mov
push
mov
jns
or
pop
pop
cmpsb
or
xchg
cmp
test
xor
orl
cmp
fisttps
pop
sbb
push
test
xor
cltd
loop
negl
adc
aas
lea
lods
inc
mov
inc
rcrb
push
inc
pop
pusha
xor
xchg
or
push
xor
push
and
aaa
imul
mov
cmp
lods
cmp
sbb
sarb
mov
mov
test
mov
filds
loop
jmp
pop
push
xchg
loope
and
mov
pop
jo
jae
adc
xchg
jne
and
dec
stos
jp
jae
jle
cmc
jmp
ficoml
adc
adc
sbb
xchg
sub
dec
inc
adcb
cmp
pop
sbb
in
add
xchg
ret
or
jo
and
dec
popf
mov
xor
fucomp
leave
les
pop
js
cmp
dec
xor
hlt
mov
insb
in
out
xor
xchg
mov
dec
push
dec
dec
pop
adc
and
mov
sub
jns
or
movsb
lahf
mov
mov
mov
push
inc
sub
test
jge
ficoml
out
test
jp
or
cwtl
cld
scas
dec
lcall
mov
inc
test
jg
aaa
icebp
test
push
scas
and
xor
ljmp
xchg
rcll
adcb
cld
sub
imul
lds
inc
ficoms
cmp
mov
mov
add
pmullw
mov
or
inc
pop
loope
dec
in
cld
hlt
lret
imul
ret
cmpsl
into
clc
frstor
fidivrl
imul
cs
mov
mov
rcrl
scas
cwtl
popl
sbb
aaa
adc
bound
gs
data16
mov
xchg
icebp
jg
adc
inc
js
lods
test
lock
cltd
jg
or
dec
fs
lret
mov
cli
jecxz
das
push
arpl
dec
cs
mov
jno
add
pop
das
cmp
das
mov
imul
cmp
xor
add
mov
pushf
stos
ret
cmc
jne
sbb
xchg
mov
adc
mov
std
fsubrl
lock
sub
mov
hlt
jno
ljmp
cli
test
mov
lcall
inc
pop
out
mov
push
fwait
pop
push
pop
popa
rcrb
fnstcw
shlb
in
movsl
loope
cld
push
pusha
test
mov
xchg
dec
loopne
adc
fsts
inc
decb
mov
test
mov
mov
enter
adc
std
in
sbb
addl
mov
lock
dec
cld
sub
add
cmp
xchg
mov
dec
and
mov
mov
cltd
push
aaa
add
das
daa
outsl
movsl
hlt
xchg
cmp
sub
pop
adc
sub
sub
ja
sub
andl
xor
dec
sbbl
es
repnz
xor
je
xchg
jne
mov
jp
jns,pn
push
mov
push
pusha
sub
add
dec
mov
sbb
aaa
int
loop
mov
jne
xchg
pop
test
sbb
mov
js
pushf
hlt
lcall
mov
push
imul
aaa
and
or
roll
mov
sbb
test
and
inc
jge
jbe
mov
jnp
push
lret
and
xor
fdivl
notb
sbb
adc
cli
jg,pn
dec
fsubrp
rcrb
imul
insb
je
push
pop
ret
mov
stc
mov
lea
sbb
mov
mov
cmp
pusha
es
stos
test
test
aad
mov
pop
outsl
add
adc
and
fisttpl
cmp
out
lret
insb
int3
gs
push
push
mov
xchg
in
jne
dec
enter
add
mov
js
das
jmp
popl
add
mov
push
fnstsw
mov
inc
imul
loope
dec
pop
outsl
out
push
ljmp
mov
ljmp
push
push
adc
push
mull
lds
cmc
push
adc
pop
xchg
insb
data16
adc
sbb
sub
push
outsb
cmp
pop
inc
fwait
shll
in
in
push
scas
xlat
xchg
sbb
push
fxch
notl
push
int3
cmp
push
shll
jl
stc
dec
jl
lock
add
xchg
adc
int
push
and
pop
iret
adc
jecxz
punpckhbw
or
out
mov
adc
jp
ljmp
sahf
pop
fidivrs
in
and
mov
stos
and
call
push
nop
push
jbe
and
sbb
dec
push
int3
ds
inc
loopne
mov
mov
jmp
add
mov
dec
sbb
jg
dec
jnp
movsb
rcrb
xor
push
jo
rorb
incb
sub
inc
std
mov
or
adc
mov
inc
dec
and
adc
inc
cld
out
sbb
in
add
cwtl
int
cwtl
jmp
inc
jp
push
sbb
mov
jo
jg
mov
hlt
sub
loop
xchg
out
pop
push
call
xlat
hlt
mov
mov
adc
lcall
mov
jp
call
aam
dec
jo
mov
xor
xor
adc
ret
ja
imul
xchg
mov
jp
cmp
mov
imul
xor
inc
lds
xor
into
daa
in
enter
inc
jbe
or
cli
inc
icebp
sub
icebp
in
cwtl
fwait
jae
sbbb
xor
jg
ljmp
mov
aas
aas
mul
lcall
movsl
clc
xchg
jns
or
mov
imull
in
pusha
inc
ljmp
jb
gs
aaa
cmp
pop
xchg
test
rcrb
or
test
jecxz
dec
out
jb
mov
test
rcrb
push
jmp
adc
mov
pop
hlt
add
adc
push
mov
push
sbb
in
mov
rolb
inc
jns
pusha
sbb
inc
push
inc
lock
clc
jno
lods
xor
xchg
push
nop
gs
xor
scas
imul
in
out
iret
push
mov
shr
out
push
cli
pop
in
out
mov
dec
mov
and
out
jecxz
jle
jno
push
push
mov
xor
mov
nop
jo
jmp
roll
jns
popf
xor
loope
cli
scas
mov
fsubrp
pop
imul
popf
mov
xor
out
sub
adc
out
xlat
stos
dec
mov
lret
sahf
xor
pop
sbb
mov
jne
repz
pop
jo
inc
pop
loopne
jecxz
enter
loop
mov
outsb
loop
inc
mov
push
adc
bound
movsb
mov
lcall
fsts
inc
inc
xchg
push
iret
int3
pop
gs
mov
fsubl
nop
push
mov
test
pop
sub
adc
cmp
ds
sub
insb
cltd
push
dec
xchg
fidivrs
addb
test
add
test
aaa
mov
cs
in
int
cmp
out
adc
push
aas
hlt
mov
and
pusha
xchg
jmp
cmp
jp
inc
mov
add
cmpsb
push
mov
enter
enter
ffree
add
and
add
shr
cmpsl
add
dec
out
mov
xchg
push
pop
jge
aad
outsb
push
aad
xlat
test
push
mov
ret
imul
loop
mov
xor
push
test
push
shl
cmpsb
sbb
xchg
cmp
lods
xchg
inc
mov
loope
pop
fwait
inc
into
mov
jl
dec
loopne
mov
cld
pop
mov
push
or
clc
cmp
cmp
pushf
jne
or
mov
inc
rorl
pop
ss
jne
arpl
pop
popa
jbe
xchg
mov
add
call
fcoms
aad
sub
enter
sub
mov
popf
inc
in
popf
movsb
and
stc
push
js
xchg
push
nop
shll
or
pop
in
icebp
xor
mov
out
ret
gs
mov
lods
fidivrs
lahf
push
gs
and
lea
xor
dec
xor
push
ret
sbb
cmp
popf
imul
mov
xor
xor
mov
add
pop
dec
lds
or
ret
sbb
mov
pxor
mov
jmp
ficompl
aaa
pop
dec
call
xor
sahf
sub
jno
popf
jns
ret
push
mov
imul
idivb
and
adc
ret
mov
push
lahf
cwtl
loope
or
inc
shrl
mov
pop
rolb
sub
xor
out
mov
mov
fdivr
sub
mov
cmp
test
hlt
rorb
loope
icebp
inc
es
aad
mov
push
inc
ja
lahf
andb
or
and
sbb
repz
adc
enter
in
push
aas
ja
jl
aam
popa
mov
and
outsl
insl
xor
pop
loope
inc
int3
inc
dec
shlb
mov
pop
jo
add
mov
jnp
mov
jnp
push
mov
call
xchg
movsl
divb
pop
lock
pop
or
xchg
jo
cwtl
mov
xor
daa
jmp
mov
loop
sahf
add
nop
rcrb
xor
enter
jle
cmpsl
mov
xor
sbb
mov
mov
sub
xor
hlt
inc
es
mov
imul
mov
mov
sbb
mov
fistpll
xor
adc
outsl
in
dec
inc
insw
sbb
inc
mov
outsl
cmp
rcrb
out
daa
adc
shll
frstors
cwtl
scas
insb
adc
enter
push
dec
sbb
jne
xchg
and
mov
adc
pop
cmp
fsub
outsl
pop
cmp
lret
out
jg
push
inc
xor
movsl
loopne
in
int
push
xor
mov
in
nop
cmc
adc
and
xlat
dec
cmp
lahf
rcl
cmp
sbb
cs
aam
jns
repnz
in
and
in
inc
gs
shlb
shlw
sub
aaa
xlat
scas
int3
mov
rcrb
pop
fistpll
mov
cmpsl
sbb
icebp
mov
arpl
data16
in
pop
int3
xlat
mov
cli
ja
adc
imull
rcr
cmp
lods
scas
mov
orl
cmp
add
imul
ljmp
inc
enter
jp
push
enter
popf
pop
into
inc
cmp
pop
push
xchg
add
test
mov
cmp
xor
add
cmp
fidivrl
push
mov
lea
pop
pop
xchg
dec
mov
xchg
sbb
pop
push
and
scas
inc
jmp
xchg
lret
pop
out
xor
fstpl
mov
lea
sbb
mov
jmp
cmpsl
jae
imul
stc
in
mov
and
add
test
and
cmpsl
stos
mov
add
cltd
das
xchg
pop
pop
add
popa
cld
leave
rorb
add
int
lret
lods
jmp
fbld
pop
jecxz,pt
sti
mov
jae
or
jmp
mov
outsl
push
popa
mov
jp
xor
add
pusha
outsl
dec
filds
cwtl
dec
or
mov
out
dec
add
push
or
jnp
imull
pop
xor
pop
js
inc
fdivrl
inc
mov
pop
std
add
and
scas
pop
mov
xchg
pushf
push
xchg
imul
les
fsubrs
pop
mov
push
negl
movsb
clc
pop
and
in
adc
add
cmp
cmc
mov
mov
mov
push
cmp
sub
or
adc
arpl
cld
cmpsb
push
loopne
and
mov
xchg
inc
or
lret
movsl
enter
rol
dec
mov
inc
sub
in
lcall
jns
pop
or
mov
cmpsb
data16
dec
frstor
daa
add
hlt
ss
fwait
push
iret
cltd
in
cmp
imul
mov
cmc
and
sbb
dec
out
fs
lods
xchg
sbb
aaa
mov
jb
shl
fisubrs
in
mov
js
cmc
adc
mov
popa
xor
mov
pop
call
pushf
negb
cmp
andl
mov
data16
popa
push
imul
push
inc
repnz
pop
mov
mov
sti
jmp
add
cmp
push
add
xchg
fcoms
cwtl
frstor
mov
mov
pop
fldcw
mov
scas
test
lock
fimull
xchg
inc
xor
xchg
imul
pop
adc
enter
fstpt
lea
pop
roll
and
mov
lahf
lret
cmp
jg
adc
pushf
scas
cmp
push
pop
insl
and
test
ret
stos
rcll
mov
adc
push
ja
pop
mov
sbbb
xor
lret
adc
ljmp
lcall
inc
in
das
movsb
sbb
add
jp
pop
stos
xchg
stos
inc
test
cmc
hlt
pushf
add
test
das
lods
es
fs
daa
pop
les
xchg
pop
xchg
and
mov
push
dec
dec
pusha
sbb
lods
imul
mov
ljmp
sbb
inc
sub
je
fwait
push
xor
sub
std
aas
fiadds
stos
aas
push
cmpsb
orb
adc
clc
and
lock
sbb
popf
jge
bound
nop
das
pop
push
sub
popf
dec
fstpl
push
faddl
xchg
mov
out
mov
and
mov
push
out
out
jmp
sub
lcall
aam
ds
cmp
inc
icebp
lods
inc
dec
xor
loope
leave
pop
popf
jl
psllw
rcrb
mov
mov
cmp
fwait
ss
in
sub
mov
loopne
cld
aas
push
sub
sbb
add
pusha
mov
dec
cmp
push
icebp
popf
mov
outsl
das
in
mov
and
xchg
push
mov
pop
mov
push
repz
sbb
sub
daa
adc
sub
aaa
xchg
mov
movsb
push
sbb
data16
frstor
or
stos
cmp
inc
sbb
jns
sub
cwtl
mov
jecxz
push
movsb
jbe
adc
out
out
nop
rorl
gs
push
dec
sub
inc
push
cmpsb
daa
pop
inc
bound
bound
stos
mov
inc
push
inc
inc
mov
lret
stos
fists
icebp
inc
mov
xchg
mov
jmp
mov
jo
clc
lds
scas
pop
jle
cmp
cmp
movsb
fisttps
call
nop
xchg
in
cs
pop
push
and
ret
pop
divl
fidivs
int
inc
ret
sub
loop
in
pop
aas
data16
cwtl
push
das
pop
push
inc
enter
pop
cmp
in
divb
pop
add
scas
sub
fsubs
in
cmpsl
roll
lret
cld
dec
and
in
sub
shl
sub
xchg
loopne
push
out
fstl
idivb
or
adc
out
int3
sbb
popa
push
mov
enter
push
mov
jnp
add
push
dec
cmpsb
sub
pop
pop
push
lods
inc
aaa
xchg
lcall
arpl
push
sbb
clc
outsb
nop
push
mov
sub
pop
mov
inc
fnstenv
jnp
out
mov
mov
lahf
ret
and
sti
outsl
call
xor
xchg
dec
popl
imul
xchg
and
push
and
cmpsl
stc
test
ja
fistps
subl
fisttpl
mov
mov
sbb
sbb
mov
popa
rorb
fwait
adc
mov
call
clc
add
stos
pop
sbb
addr16
push
adc
add
outsb
lock
leave
add
mov
xchg
mov
lcall
lret
xor
pop
sbb
sub
dec
call
jae
or
mulb
dec
ds
push
inc
mov
call
push
and
sbb
outsb
pop
mov
sbb
lret
es
shll
push
stos
scas
dec
pop
lds
mov
push
jns
jg
arpl
movsb
lods
sarl
ja
lods
push
fldt
sti
adc
addl
sbb
ja
xor
sahf
cmpsb
and
push
int3
leave
mov
jae
rorl
add
andl
loopne
mov
cwtl
jg
fs
cld
bound
jp
nop
push
add
aad
stos
gs
or
cs
ljmp
add
int
les
or
test
inc
rclb
out
xchg
push
pusha
adc
lret
jno
es
paddd
pop
xchg
inc
loopne
fs
pusha
cltd
lret
in
pop
mov
sbb
fnsave
pop
cmc
mov
lcall
xor
add
js
add
aam
stos
ja
call
loopne
xchg
add
repz
jle
jp
dec
lock
int3
aam
and
mov
ret
inc
and
mov
hlt
jecxz
in
add
dec
or
icebp
repnz
dec
and
add
loopne
iret
into
les
cmp
fcompl
mov
mov
out
insl
mov
lahf
pop
jb
xchg
push
rcl
add
jp
sbb
int3
outsb
js
pop
js
ret
ret
cld
iret
xchg
pop
jns
sahf
lds
pop
pop
pop
int3
cmp
insb
or
idiv
daa
fdivl
jge
dec
fscale
orl
sar
jg
jl
push
inc
call
push
xchg
fwait
insb
mov
cmp
test
sub
inc
lock
hlt
pop
scas
int
jp
imulb
sub
out
adc
sti
sub
xlat
push
jl
arpl
xchg
cli
push
cmp
bound
iret
in
mov
js
xor
jl
call
and
dec
or
inc
cmp
sbb
aas
pop
fbstp
gs
nop
rolb
add
and
jle
and
push
les
sub
rolb
js
scas
lret
test
adc
cltd
out
inc
adc
xor
daa
mov
add
notb
add
mov
cmp
add
stc
cmp
fildll
sbb
adc
imul
sbb
ss
repnz
mov
das
adc
movsb
fnstcw
mov
xchg
cmp
insb
loop
push
dec
test
dec
push
or
test
outsl
sbb
mulb
xor
xchg
imul
loopne
jno
in
jns
add
mov
sub
fistpl
ja
adc
mov
xor
xor
icebp
and
mov
push
fisttps
xchg
mov
adc
stc
in
xor
mov
shrl
out
aam
imul
xor
mov
jno
lahf
dec
imul
fistpll
in
nop
jno
mov
xor
ret
xchg
lcall
hlt
pop
jns
movsb
mov
inc
or
imul
sub
sbb
or
push
xor
add
jge
and
das
mov
adc
xor
ret
xor
maxps
jae
and
pop
pop
cmp
movsl
jae
jb
jne
jge
fisttpl
push
mov
inc
repnz
sbb
mov
rcll
gs
imul
test
mov
mov
in
dec
lods
sub
or
mov
lock
inc
cmpsl
xor
pop
mov
xchg
mov
in
add
outsb
jns
jbe
xchg
push
xchg
or
or
jne
add
jno
stos
clc
sahf
call
arpl
dec
int
out
into
iret
fisttpl
jne
loopne
sti
xor
shl
jmp
adc
jo
push
or
insl
cmp
jo
enter
push
push
push
outsb
inc
es
sti
rcr
repz
add
cs
mov
xor
nop
cmp
add
jmp
rcll
jo
enter
stos
and
outsl
xor
adc
lock
inc
cmp
mov
xor
xor
fnstsw
cmp
pop
jmp
stos
loopne
cmp
fisubs
mov
push
mov
xor
fmull
out
xor
adc
mov
pop
pop
fstps
xor
or
imul
outsb
aaa
pop
push
mov
jo
fisttpl
mul
sub
out
add
push
sub
mov
push
je
push
and
repnz
movsl
lods
out
sbb
fmuls
push
sub
idivl
mov
push
mov
out
popf
mov
mov
arpl
js
mov
fsubl
scas
xor
jne
testb
insb
inc
ds
adc
out
xor
pop
and
out
adc
les
cltd
mov
xchg
inc
scas
leave
loop
add
inc
inc
mov
movsb
sbb
cmpsb
xchg
jne
dec
les
xchg
imul
out
fdivs
pusha
or
aad
add
and
out
xchg
cltd
xor
cmp
mov
cld
out
xchg
movsb
aas
hlt
dec
cmp
ret
cmpb
lahf
jae
cmp
mov
cs
fs
popa
test
fstl
jp
add
jecxz
jmp
sbb
in
icebp
or
outsb
jle
sarb
inc
mov
lock
mov
pop
shrl
fldt
lret
jecxz
xchg
cmp
or
fnstenvs
inc
push
dec
in
mov
push
call
imul
mov
push
dec
cld
jg
or
xorl
in
push
mov
pop
xchg
cmp
jl
sahf
adc
sub
sbb
addr16
call
int3
repnz
push
lods
adc
jp
inc
mov
mov
xor
cli
jno
jne
in
pop
or
pusha
xor
or
sub
xchg
or
adc
or
and
fwait
and
mov
jb
inc
dec
xchg
js
xlat
frstor
enter
icebp
leave
sbb
repz
pusha
pop
lret
push
mov
imul
std
adc
nop
add
inc
pop
fcomp
cmp
mov
xorl
shr
es
pop
xchg
cmc
jno
dec
jmp
rcr
dec
xor
fidivrs
in
cli
shll
std
inc
jecxz
and
pop
adc
mov
add
loopne
jecxz
mov
ds
cltd
fiadds
cltd
nop
or
mov
sub
sbb
repnz
les
mov
jno
arpl
add
scas
mov
dec
mov
in
sbb
pop
dec
inc
xor
ss
and
or
bts
sub
push
add
sub
mov
divb
out
jns,pn
or
mov
outsl
lds
cmpsl
cmc
cld
nop
clc
mov
arpl
cs
popf
and
mov
aad
pop
fsubrs
aad
lods
movsl
mov
js
xchg
arpl
insb
mov
add
xor
js
call
testl
nop
cmpsl
icebp
in
or
mov
xchg
rcrl
xor
sbb
mov
decb
push
dec
das
cld
jne
dec
xor
in
adc
dec
cmp
jbe
jae
jp
sbb
mov
aas
sti
jp,pt
add
pop
mov
fsubrs
sbb
cmpsl
int
into
jp
xor
repz
cld
outsl
mov
pop
jmp
xor
pop
push
negl
data16
or
push
pusha
pop
shlb
jnp
cmp
fsubs
pop
adc
mov
cmc
mov
mov
jmp
jno
fcoms
sti
pop
mov
mov
dec
adcl
ret
push
sti
ret
aas
gs
jmp
jbe
sbb
stc
mov
mov
pop
mov
popa
addl
push
sarb
sub
inc
sarl
mov
jge
in
mov
jg
sbb
ror
pop
aas
in
lea
in
imul
dec
xor
jno
stos
mov
aaa
les
inc
sbb
int3
shll
enter
jmp
mov
aas
pop
inc
add
sti
jbe
adc
jbe,pn
jb
pushf
sbb
adc
push
cld
popl
sub
sahf
aas
pop
push
mov
jns
jb
fisubrs
gs
ficomps
stos
scas
push
loopne
sub
push
pop
lods
or
push
cmp
mov
dec
bnd
push
scas
xchg
push
sbb
or
bound
daa
es
xor
dec
in
cmp
hlt
xlat
push
and
push
inc
adc
xor
mov
or
xchg
iret
cmp
add
cmpb
mov
outsb
dec
decb
hlt
insb
pop
lcall
fs
lods
or
aam
lcall
or
push
test
push
into
rclb
pusha
enter
popa
into
fsub
rclb
fbstp
fdivl
out
pushf
mov
stc
repz
ror
negl
adc
ss
jns
cmpsl
cmp
call
mov
loopne
aaa
sbb
js
push
cmp
cmp
outsb
mov
cmp
inc
push
arpl
pop
cmp
out
xor
adcl
insl
or
in
aas
enter
cmp
and
call
xor
movsl
push
push
test
mov
test
pop
pop
lahf
pop
ret
or
ja
and
in
xrelease
xchg
dec
cmp
clc
fidivrs
mov
sub
js
sub
jecxz
jl
jae
xor
pop
notb
jb
add
cmp
adc
mov
test
pop
mov
out
decl
jbe
mov
xor
sbb
cltd
jmp
mov
inc
clc
cmpsl
add
pop
and
push
test
adc
mov
in
mov
pop
inc
mov
fisubs
mov
pop
pop
mov
es
or
or
bound
test
call
adc
mov
fwait
lahf
adc
imul
clc
mov
addl
cmpb
insb
xlat
pop
and
in
imul
pop
cmc
xchg
mov
movsb
in
cmp
sbb
xor
cmp
out
pop
or
ret
sub
jle
push
mov
or
andl
imul
mov
insb
mov
orb
mov
mov
mov
push
pop
sub
icebp
lcall
adc
inc
int
lock
mov
rclb
aas
push
jp
push
mov
das
dec
and
mov
mov
xchg
xor
and
cmpl
mov
decb
lock
sbb
push
pop
aas
cmc
daa
outsl
add
lock
enter
mov
dec
das
xor
cmc
cltd
in
imul
jbe
outsb
xchg
mov
cmpps
popa
or
sbb
xchg
ljmp
jo
add
pop
std
mov
data16
inc
cmp
jecxz
notb
loop
cmp
into
jmp
mov
lcall
inc
cmc
out
hlt
pop
or
jp
repnz
aaa
and
ds
into
cmp
push
test
mov
enter
sub
sbb
imul
add
clc
cmp
enter
dec
ret
loopne
push
inc
mov
add
jne
mov
in
xchg
scas
movsl
stc
leave
mov
cwtl
stc
lock
sbb
sub
insb
mov
cmp
or
adc
ret
push
add
cmpsl
les
mov
mov
sbb
cmp
mov
sahf
jg
xchg
push
xchg
sti
stc
mov
mov
xor
pop
bound
and
sbb
sub
ds
out
es
pop
aad
aam
lret
cmpsb
in
test
dec
js
sbb
add
push
int3
adc
inc
inc
push
lahf
mov
add
iret
add
int3
es
pop
jb
jo
inc
ljmp
jo
filds
xchg
jae
push
fmulp
clc
cmp
mov
add
or
icebp
dec
es
mov
add
dec
xor
and
in
cmp
or
inc
imull
bound
jo
dec
xor
sub
hlt
not
or
iret
sti
enter
inc
cltd
lods
sbb
push
aad
mov
jbe
cltd
fadds
jbe
sti
fcmovu
push
adcl
dec
cmp
fsubs
xchg
dec
outsb
repz
cmp
cmp
inc
mov
jnp
sbb
sub
pop
mov
lret
mov
sbb
and
mov
rcrl
sub
push
scas
gs
enter
sbb
jno
cwtl
repnz
mov
and
push
xor
fld
mov
pop
push
test
fsubrl
adc
push
roll
icebp
inc
call
push
push
into
es
pop
shll
insb
nop
push
cmp
mov
cli
xchg
int3
push
jb,pt
push
int
je
test
insl
xchg
sub
pop
int
sub
lods
xchg
pop
push
sbb
sbbl
cli
xchg
je
cli
lahf
fisubs
ja
call
aas
shrl
xorb
je
lods
fs
adc
xor
insb
jle
sub
mov
int
std
dec
jbe
popf
inc
mov
rcrb
jbe
or
xchg
or
stos
and
sysenter
mov
mov
nop
lret
jecxz
lds
or
gs
stos
fdivr
and
insl
and
jmp
sub
les
cmp
movsb
or
iret
pop
in
mov
out
jo
out
xor
mov
fwait
cli
popf
jae
mov
iret
sbb
inc
xchg
aam
add
inc
lret
je
lock
add
mov
scas
xchg
push
leave
ja
or
mov
js
add
or
inc
inc
sbbl
mov
or
stos
cmp
test
dec
leave
insl
loopne
sbbl
cltd
addl
movsb
or
xchg
jo
or
and
mov
dec
sub
add
add
das
cmp
mov
fadds
inc
sbb
jg
ret
jns
push
stc
sti
pusha
sbb
adc
xchg
and
cs
pop
mov
lahf
fwait
and
dec
sbb
cmpsb
out
sahf
pop
ret
xor
add
jecxz
scas
das
addr16
cmpsb
lock
cmp
movsl
adc
mov
xor
xor
pop
adc
xor
dec
rcrb
adc
sbb
push
movsb
sbb
add
mov
xchg
jns
popa
jle
and
iret
shlb
lcall
aam
adc
cmpsl
scas
mov
add
idivb
cltd
mov
mov
xchg
daa
out
sar
mov
cld
loopne
shlb
outsl
sbb
fbstp
mov
stc
pop
adc
fwait
cmp
andl
pop
cmp
ja
sahf
sbb
pop
mov
cmp
push
es
sbb
cmp
xchg
into
shll
inc
jnp
cli
ret
scas
lret
cld
ja
mov
clc
mov
dec
mov
mul
leave
bound
adc
test
imul
in
pop
ret
cli
std
inc
popf
loope
dec
in
push
stc
push
jp
cmp
in
daa
aaa
jo
scas
loop
loop
push
lea
addl
popa
rorb
lret
sbb
mov
pusha
push
mov
lret
push
mov
xor
push
sub
movsb
push
icebp
hlt
imul
ret
idiv
test
pusha
sub
outsb
mov
mov
daa
mov
inc
scas
rorb
jbe
rolb
xchg
jecxz
pusha
aam
stos
xchg
loop
in
dec
jecxz
outsl
xor
daa
sub
sbb
xor
xor
add
xor
mov
add
mov
pop
push
or
fnstenv
push
xchg
fists
inc
out
cmpl
loope
aad
xor
out
jge
xchg
inc
jb
out
ret
push
mov
sub
jbe
or
lret
cmpsb
bound
cli
pop
push
leave
jno
xor
adc
test
stos
mov
inc
inc
movsb
icebp
add
imul
in
sub
xor
sub
add
int3
loopne
lock
rclb
into
jmp
mov
jmp
push
mov
mov
stc
adc
xchg
or
push
aaa
into
pop
decb
add
lcall
sahf
push
mov
popf
jle
mov
mov
out
inc
sahf
aam
dec
sbb
xchg
push
jb
add
popf
xchg
mov
in
add
xlat
xor
mov
mov
test
or
sbb
in
fs
mov
mov
mov
mov
rol
fldenv
push
psraw
inc
cmp
pop
and
lret
jns
repz
pop
fcmovnu
ljmp
push
pop
stos
push
xor
es
dec
test
js
lret
cli
inc
clc
call
pop
push
fiadds
add
std
adc
movsb
lds
mov
mov
mov
shll
inc
inc
adc
push
mov
pop
cmc
mov
xchg
iret
inc
daa
outsb
fsubl
movsb
cmpsb
sub
xchg
jp
xchg
inc
lds
and
dec
mov
jge
fistpl
in
and
adc
adc
pop
inc
in
fucom
dec
xchg
pop
orb
mov
pop
lcall
mov
jmp
or
mov
imul
lock
loope
push
sub
jl
cmpb
data16
andb
jae
jle
in
add
mov
sbb
lret
outsl
push
mov
aad
push
xchg
arpl
sbb
gs
sub
daa
mov
sbbb
imul
scas
shll
inc
test
mov
ss
mulb
mov
imul
aad
jbe
ja,pt
mov
jno
dec
loop
outsb
out
add
stos
cltd
dec
and
dec
jmp
adc
pushf
outsl
les
xor
negb
dec
cs
mov
enter
outsl
stos
adcl
push
jecxz
test
jmp
mov
dec
pop
ss
inc
loopne
sbbb
inc
or
lcall
or
or
jne
xchg
arpl
decl
into
xchg
orb
mov
andnps
mov
movsb
sarl
xlat
cmp
dec
stc
push
xor
lea
mov
add
in
pop
sahf
sub
stos
and
ret
ret
rcll
iret
mov
clc
std
dec
xchg
fcmove
into
jae
mov
outsl
push
cli
dec
and
mov
adc
in
cmp
popf
dec
out
sbb
pusha
aam
xchg
scas
lods
or
dec
push
movsb
pop
add
test
push
loopne
mov
fisubs
sub
mov
clc
je
xchg
or
mov
mov
fcmove
cmp
fldenv
iret
xor
aam
cmc
dec
dec
hlt
lahf
je
add
mov
pop
sbb
lods
push
dec
ret
cs
aas
rcrb
mov
jne
cs
pop
jecxz
cmp
xchg
sbb
lea
gs
mov
cwtl
daa
repnz
ret
sbb
and
stc
push
or
sbb
pop
sub
stc
cmp
fldcw
and
mov
sbb
xlat
aam
mov
and
outsl
dec
mov
jmp
pop
lcall
fsubrl
xor
sub
adc
sub
xor
pop
hlt
loopne
int
xor
sbb
les
push
vcvtss2sd
mov
add
xchg
xor
scas
clc
lods
adc
test
mov
jmp
ja
inc
jo
out
mov
fwait
mov
ljmp
pop
mov
loope
dec
mov
les
and
jp
scas
repz
push
lods
sti
stos
add
in
loope
pop
mov
push
fists
mov
xchg
mov
fnstsw
xor
or
and
out
lods
arpl
sbb
stc
add
data16
push
daa
xchg
cmp
bound
xor
fadd
rcrl
or
mov
fs
pop
or
inc
pushf
nop
hlt
pop
lock
pop
inc
stos
jmp
inc
jp
repz
sub
and
adc
cmpl
or
push
rclb
clc
stc
lock
xor
push
adc
pop
xchg
inc
enter
in
cwtl
repz
inc
jne
push
cld
xor
xchg
mov
push
mov
mov
inc
mov
mov
cld
les
lds
ss
mov
outsb
xchg
inc
pop
cmp
dec
gs
test
and
stos
fisubl
test
mov
push
xchg
es
jo,pt
stc
imul
shrd
jle
mov
leave
lcall
mov
inc
cmpsl
int
xchg
js
jno
and
mov
in
push
lock
dec
push
mov
retw
ficompl
in
int
push
fdivr
cs
or
or
jge
cmc
mov
mov
roll
fcomp
scas
push
insl
mov
leave
adc
sbb
xchg
xchg
es
xor
or
push
or
jo
ljmp
pop
cmpsl
scas
mov
in
call
mov
inc
out
push
push
aad
jmp
pop
add
cltd
add
inc
shrb
das
jnp
and
jecxz
clc
push
mov
jae
add
mov
push
or
mov
adc
sub
fisubrl
xchg
mov
ds
mov
adc
frstor
pop
scas
in
mov
outsb
mov
fwait
pop
insl
dec
testl
aam
cwtl
test
mov
in
mov
pushf
cmc
push
xor
push
and
lods
pusha
jo
jb
inc
and
xchg
jnp
sti
pop
into
or
imul
ds
jb
push
pushf
in
pop
and
mov
arpl
lret
test
add
shll
push
shlb
adc
and
insb
sub
and
lcall
mov
arpl
rol
in
cmpsl
cmp
adc
fwait
xor
test
jo
and
push
fldt
mov
or
mov
push
lock
sbb
inc
inc
out
inc
mov
insb
mov
fldenv
push
or
mov
in
lock
loope
cltd
shll
std
and
popa
jp
stc
stos
cmp
push
or
daa
dec
nop
ror
adc
daa
cmp
andb
das
cmp
add
push
arpl
ror
cmpsb
jg
mov
inc
ds
lea
gs
mov
sbb
in
jp
adc
jo
xor
fisubrl
into
dec
or
cmp
xchg
xchg
rclb
outsb
xchg
xor
pop
push
inc
imul
jp
clc
inc
add
dec
outsb
filds
xorb
andb
jmp
jg
xor
jmp
pop
fyl2xp1
mov
jge
push
push
inc
sub
adc
push
push
lret
in
mov
pop
in
adc
out
dec
dec
adc
mov
fs
popf
leave
mov
sti
stos
iret
frstor
into
push
mov
cmp
xlat
pop
xor
testb
aad
aad
mov
stos
sbbl
xchg
push
mov
fcmovb
cmc
enter
pop
and
fldl
in
xchg
push
jge
popa
outsb
or
ret
es
jp
mov
dec
sahf
sarb
inc
icebp
mov
push
sbb
rcrl
sbb
stc
sub
xchg
push
xor
dec
inc
xchg
int
icebp
lahf
popa
mov
arpl
mov
jle
iret
lcall
cmpsb
fisttpll
stos
pop
xlat
pop
pop
fcomip
sbb
aad
pusha
sub
xor
sarl
iret
std
sub
fisubl
add
outsb
lods
xchg
insl
stos
repz
push
insl
add
pop
adc
and
lds
cmp
int
pop
or
push
lea
xor
or
ror
pop
fadd
pushf
lahf
inc
insl
adc
fwait
sub
push
xor
mov
dec
mov
jne
xor
dec
icebp
fwait
pop
xor
jno
arpl
data16
adc
add
pop
imul
xor
out
mov
add
mov
movl
push
mov
out
cmp
pop
pop
test
roll
lahf
jno
cmp
mov
and
and
xchg
push
dec
mov
dec
add
loope
popf
sarb
push
mov
mov
daa
and
ljmp
dec
push
out
repz
push
jp
mov
popa
js
cwtl
rcrb
sub
sbb
xchg
fimuls
cld
stos
add
xor
and
xchg
jbe
and
lds
pop
adc
pop
xchg
stc
adc
test
sbb
ret
pop
sbb
mov
cmp
jbe
negl
cmp
push
and
dec
mov
cld
mov
or
xchg
fmuls
cld
push
in
rclb
inc
and
sahf
pop
inc
fdiv
aaa
addr16
sbb
mov
test
insl
fildl
daa
cmp
mov
push
pop
out
or
dec
inc
jmp
aaa
jmp
xchg
pop
mov
inc
xlat
stos
movsl
pop
push
daa
fsubs
in
rclb
pop
jmp
imul
clc
fs
or
jle
or
push
ret
test
jmp
mov
or
insl
test
in
popa
out
xchg
or
lahf
xchg
ss
xchg
mov
ret
fisttpll
hlt
push
js
cmpsl
test
popa
xchg
mov
fs
or
into
sub
test
es
push
aaa
jmp
jl
imul
fucom
fiaddl
scas
jb
xlat
xchg
mov
mov
insl
pop
pusha
mov
pop
fnstenv
mov
mov
adc
scas
orl
loope
ds
add
xor
mov
dec
xchg
sahf
jae
add
or
mov
addr16
andb
or
test
inc
xor
dec
mov
stc
push
dec
shll
add
cmpb
xlat
insl
jecxz
loopne
es
sub
aad
xor
loop
xor
aas
push
arpl
inc
fbld
mov
das
jnp
sub
or
cwtl
mov
insb
in
daa
sahf
xor
ret
inc
stos
mov
pop
mov
push
rcrl
add
push
out
sbb
adc
aam
js
in
and
aas
xlat
fwait
inc
cmp
js
mov
xchg
call
inc
cmp
adc
jmp
push
mov
cmp
sbb
popf
andl
ds
je
mov
mov
mov
scas
bound
test
lods
add
lods
imul
or
mov
adc
push
in
leave
adc
inc
mov
sbb
jmp
shrl
adc
gs
out
xchg
inc
ret
mov
not
pusha
sahf
mov
mov
pushf
jl
in
inc
mov
and
test
or
stos
jne
cld
shrb
fdivrs
xchg
ds
push
or
test
fimull
push
xchg
xchg
movsl
xchg
repnz
cmp
inc
lods
mov
adc
mov
in
mov
mov
lahf
test
adc
xchg
or
or
pop
mov
xchg
lahf
js
xchg
sub
out
xchg
rcrb
insl
cmp
es
fidivl
ret
dec
mov
mov
shlb
aad
cmp
sub
mov
cs
les
lock
cmp
outsb
or
or
ljmp
and
jne
pop
cs
and
jb
cmp
mov
mov
rorl
lds
jb
xor
lods
sub
jge
rorb
adc
movmskps
movsl
mov
data16
mov
sbb
fs
ljmp
hlt
dec
in
gs
jbe
mov
insb
xchg
cmp
cmpsb
mov
pushf
hlt
cmp
pushw
insb
jns
and
sub
sub
xchg
sahf
imul
test
enter
and
fs
xchg
adc
mov
xchg
xchg
or
out
cmpl
gs
xor
jne
jge
movsl
pushf
scas
adc
insb
xchg
lcall
sub
hlt
outsb
cli
or
lods
sbb
addr16
push
push
mov
into
and
mov
or
xchg
mov
mov
push
mov
in
insb
scas
xor
sub
ljmp
jle
dec
sbb
clc
pop
test
jae
sahf
cmp
push
in
jge
pop
mov
hlt
shl
jp
and
push
dec
cmp
mov
add
fsubrl
imul
xor
scas
lret
scas
aas
jmp
mov
fists
inc
subl
test
adc
call
or
outsl
outsb
and
js
and
adc
xchg
inc
sub
pop
test
shrl
or
push
push
jmp
rorl
fistpll
cmp
sub
outsl
xchg
jg
xor
shll
push
lret
lahf
imul
mov
push
xchg
jb
fdivrl
push
idivb
sub
inc
jns
rolb
add
out
das
sub
aaa
cmp
leave
jbe
inc
xor
lret
aad
lcall
mov
push
mov
jo
loope
xchg
repnz
lods
in
inc
pop
in
and
adc
outsb
sar
xchg
mov
and
outsl
pop
bound
insl
lea
lahf
testl
cmp
int3
xchg
lods
pop
test
stc
adc
jg
rol
es
mov
xchg
cs
mov
sub
out
dec
int3
xchg
xor
sbbb
add
cmp
push
sarb
mov
mov
ficomps
ds
pop
lret
popf
sbb
mov
ss
das
repz
xor
stos
push
add
pop
push
sbb
ja
mov
and
andl
imul
stos
inc
lods
inc
imul
es
ljmp
in
aam
les
cli
cmp
or
cmp
stos
mov
mov
shl
pop
ljmp
pop
js
mov
inc
std
push
addl
shll
xor
roll
ret
fs
sub
out
leave
add
int
cmp
jno
jb
xchg
and
popa
push
cmp
mov
or
data16
cwtl
cmpsl
and
or
in
cmp
xchg
lret
aam
adc
out
and
sbb
mov
jge
inc
pushw
sbb
jl
addl
inc
mov
roll
pop
fisttpll
jp
fs
add
inc
xor
xchg
pop
and
jb
mov
pushf
cwtl
lcall
add
xchg
lcall
cmc
ljmp
fildl
push
lret
mov
inc
mov
sub
js
add
aam
loopne
mov
mov
jl
or
psllw
push
or
dec
push
lahf
mov
cmp
arpl
cmpl
xchg
adc
cs
inc
sbb
out
add
mov
rcl
repnz
sub
cmpsl
fnstcw
shrl
jmp
mov
test
ret
les
faddl
push
lret
stc
cmpsb
dec
mov
sub
push
aad
dec
loope
cmpsb
xor
es
inc
stos
pop
imul
push
inc
mov
into
popa
jl
mov
fistps
scas
or
mov
xchg
sbb
fs
jge
lret
inc
cmp
add
mov
jecxz
sub
inc
es
js
popf
mov
sbb
push
lret
pop
push
outsb
popf
push
into
push
ljmp
add
les
call
jo
jbe
jno
adc
mov
mov
pusha
cmpsb
in
jnp
mov
jne
adc
push
push
aas
test
mov
or
data16
xor
imul
sti
and
pop
scas
fistl
pop
dec
cmp
in
mov
into
fcoml
adcb
inc
lods
fimuls
cs
push
pusha
mov
add
nop
adc
mov
push
sbb
add
push
scas
jmp
pop
cmp
mov
pop
mov
pop
push
ja
outsb
push
mov
lahf
out
insl
xorb
add
out
mov
ret
jne
adc
xor
inc
cmp
add
insl
mov
insb
adc
jge
mov
add
das
jns
fdiv
xor
int
adc
fisubl
jno
mov
xchg
mov
push
mov
iret
repz
xor
les
push
sarb
and
aaa
rorb
push
xor
jbe
bound
dec
mov
rcl
mov
adc
cltd
sbb
or
dec
mov
sub
sti
aas
ret
daa
inc
xor
je
rcll
pop
jb
fldenv
inc
lods
pusha
ds
imull
jns
jb
adc
addb
mov
rcl
lods
loope
push
push
scas
fnsave
stos
xor
xchg
dec
pushf
add
mov
addr16
jp
jle
or
lcall
popa
xchg
pop
stc
adc
jnp
pop
adcl
cmc
mov
adc
xchg
cmpsl
jnp
add
sarl
push
mov
jmp
fisubrl
movsl
fwait
out
pusha
fistpl
hlt
inc
stos
dec
movsb
mov
dec
sub
mov
testl
inc
mov
mov
pushf
in
shll
push
xchg
call
and
sub
xchg
hlt
sub
pop
or
and
mov
cmp
iret
icebp
call
arpl
test
fsubl
lods
cmc
aaa
lret
hlt
jl
ss
xor
add
xchg
mov
push
loop
lahf
lahf
adc
nop
add
push
sahf
mov
daa
scas
iret
push
icebp
mov
mov
cmp
adc
rclb
negb
inc
scas
mov
mov
mov
add
int3
push
inc
xchg
loope
sub
cmp
jmp
mov
mov
js
jge
int
push
fisubs
fdivrl
add
into
mov
push
mov
fildll
dec
pop
push
dec
jl
add
arpl
data16
mov
sub
les
jno
stos
int
imul
ret
stos
mov
inc
and
fwait
xchg
clc
in
adc
fbstp
sbbl
xchg
xor
mov
dec
fdivrl
cmc
cmp
inc
mov
dec
in
xor
int
dec
int3
das
data16
xchg
xchg
iret
push
add
xchg
in
clc
faddl
fiadds
push
ret
xchg
jo
in
jb
pop
out
es
enter
pop
nop
imul
and
push
out
cld
fsubrs
push
push
and
xchg
sarl
out
inc
pop
ljmp
int
ficoml
imul
jmp
lods
and
xor
xchg
or
pop
jno
and
sbb
imul
rclb
cmp
jnp
xor
rcll
jb
test
decl
out
lcall
fcompl
pusha
icebp
or
push
imul
xor
mov
cld
pop
nop
mov
jmp
adc
nop
xchg
stc
lods
int
lcall
cltd
jmp
cmpsl
cmpl
sarb
shrb
dec
push
js
jg
push
das
div
or
pop
call
shl
push
mov
mov
mov
loop
cmpsb
cmpsl
outsb
rcl
int
and
cmp
jne
icebp
and
pop
xchg
xor
and
clc
rol
mov
adc
xchg
es
imul
movl
mov
stc
les
addb
outsb
int
aad
xor
mov
call
mov
lods
ds
lret
sbbl
pop
add
cmp
rcr
xor
and
and
and
sub
loopne
jecxz
add
mov
gs
push
sbb
out
add
dec
stos
cmp
sti
sub
cmp
inc
movb
cmc
fldt
and
mov
push
inc
add
scas
inc
lahf
in
and
xlat
jb
pop
pop
hlt
push
inc
iret
sub
fcmovnb
pop
cmp
out
cmpsb
clc
hlt
sub
aam
aad
push
bound
xchg
pusha
lods
bound
fsubs
push
cmp
mov
jns
mov
mov
and
sub
mov
rcl
sahf
xchg
sub
arpl
lret
push
arpl
sbb
xor
jbe
repz
xchg
pminub
outsl
daa
lcall
cmc
ret
ret
rcrb
adc
mov
sub
mov
xor
dec
pop
fisttpll
ljmp
jl
add
push
mov
aad
xor
lods
je
addb
push
mov
push
sub
repz
ljmp
dec
mov
stos
mov
movsl
cmp
sbb
lahf
pop
jb
mov
sbb
pop
ja
push
mov
adc
arpl
dec
sbb
dec
sbb
test
popa
and
lcall
or
icebp
mov
hlt
call
sahf
push
dec
aas
sbb
cwtl
aad
shl
leave
mov
sahf
add
faddp
xor
sub
int3
sub
inc
sbb
inc
push
inc
jmp
sbb
add
cltd
mov
mov
dec
mov
mov
sahf
push
sub
sub
jnp
add
sbb
test
fcmovbe
cmp
and
mov
aaa
pop
inc
jb
mov
fistpl
movsb
push
loope
xchg
ffreep
into
sahf
mov
dec
test
lds
cmpsl
loop
xor
mov
arpl
test
into
dec
int3
movsl
ja
insl
int3
inc
pop
fwait
push
dec
xlat
jb
fsubs
adc
jp
iret
push
sahf
sbb
divl
jecxz
shrl
icebp
mov
out
lret
jnp
adc
inc
and
push
jns
das
outsl
push
cmpsl
mov
iret
xor
pop
data16
pop
aaa
int
lcall
jae
pop
movsl
addr16
cmp
mov
sub
loop
jb
enter
and
pushf
sarb
push
dec
daa
xor
mov
adc
xchg
movsb
shrl
jmp
mov
jge
inc
mov
inc
xchg
dec
add
stos
sub
jns
addr16
xchg
in
xor
sbb
inc
cmp
add
pop
iret
mov
jge
mov
fstps
iret
insl
and
push
mov
mov
pusha
icebp
sub
orps
je
lock
outsb
int
push
xchg
scas
div
push
and
ss
pop
cmp
mov
mov
cli
push
cmp
xor
in
xchg
rorl
dec
mov
pop
cmc
imul
push
push
in
add
push
int3
lea
out
xchg
movsl
pop
jl
mov
and
sbb
fsincos
shlb
jp
rol
push
sbb
push
popa
and
push
and
inc
lods
jae
xor
inc
mov
add
push
adcl
mov
cld
lret
std
call
aad
inc
xor
test
repz
mov
fdivr
movsb
arpl
ficomps
js
add
push
ret
adc
jbe
lret
adc
and
inc
test
add
ds
std
mov
sub
mov
inc
into
sub
loopne
inc
std
and
pop
les
push
jbe
xchg
mov
aad
or
mov
xchg
push
xor
push
data16
cmp
add
icebp
sub
ljmp
out
push
xor
test
lahf
lret
test
stos
cmp
insb
or
jae
aad
sub
rcrl
push
mov
aas
stos
das
jo
push
mov
jb
push
pop
push
sbb
mov
jmp
imul
pop
pushf
sbb
pushf
push
sbb
mov
xor
ss
inc
shll
shlb
and
idivl
lret
jecxz
add
jo
shrb
cltd
insb
inc
in
inc
in
rolb
inc
into
adc
push
xlat
ret
adc
xchg
movsl
lahf
fcomps
inc
xor
das
subb
mov
repz
add
in
add
or
out
jmp
aam
subb
sub
xchg
cmpsl
out
rorl
std
testb
arpl
jmp
test
sub
lds
addl
popl
es
out
dec
bound
pop
scas
jp
pop
cvtpi2ps
int
rcrl
lret
aam
or
sbb
or
insl
cmpsb
fbld
fwait
insb
push
idivb
cs
shlb
out
enter
sti
addr16
out
or
inc
popa
add
jmp
insl
fistpl
cmc
cmpsb
cltd
outsl
mov
cld
insl
insl
std
outsl
inc
pop
out
in
call
inc
sti
arpl
clc
mov
hlt
inc
adc
scas
or
push
mov
dec
mov
nop
jge
imul
cmp
pop
sub
sbb
in
dec
mov
js
call
lds
mulb
or
push
mov
in
sub
cmp
jnp
add
cmpsl
mov
pop
mov
aad
push
mov
cwtl
ds
adc
repz
inc
lea
mulps
lcall
ljmp
mov
imul
das
cmp
in
jbe
sarl
jns
xchg
icebp
mov
mov
adc
andl
pop
xchg
push
cmc
pop
add
jg
outsl
pop
fsubs
adc
rorb
xchg
lds
es
lods
pop
push
insl
cmp
fildl
repnz
out
jmp
divb
loopne
les
or
push
adc
sub
test
outsb
cmpsl
insl
pushw
inc
inc
idivb
pop
xchg
pusha
xchg
xor
imul
repz
bnd
push
xor
outsb
sub
lcall
js
mov
and
ljmp
lds
sahf
in
ret
in
xor
jecxz
mov
dec
jb
cwtl
pop
mov
cmpsl
ja
subb
inc
sahf
ss
push
mov
inc
xchg
xchg
in
out
cmp
ja
je
and
xchg
pusha
push
sarl
repz
jo
xchg
sti
pop
xchg
fxch
push
orb
push
push
dec
divb
adc
cmpsl
sti
pop
pop
mov
movsb
push
dec
shl
in
adc
cmp
repz
cmp
je
add
out
inc
xor
adc
xor
sub
dec
mov
test
sub
sbb
jne
lahf
addr16
jle
shlb
sub
test
push
sbb
ret
push
jbe
push
xor
and
icebp
inc
cmp
ljmp
mov
ret
hlt
mov
adcb
mov
add
and
cmc
andl
out
xor
inc
addl
xchg
pop
push
aam
pop
push
mov
xchg
jle
js
jb
xor
sub
pop
sbb
pop
jg
or
inc
mov
push
andb
sbb
mov
mov
sahf
pop
xor
mov
ret
mov
cld
add
test
sub
cmp
into
xor
jmp
lds
leave
in
outsl
mov
and
lods
pusha
add
or
mov
leave
icebp
sbb
push
loope
jo
test
rol
cmp
stc
dec
inc
movsb
xchg
dec
js
aad
pop
cmp
pusha
lret
leave
cmp
push
hlt
ret
mov
das
jns
mov
mov
cltd
rol
pop
jne
push
xchg
sub
imul
cmpsl
movsb
adc
xchg
pop
rorb
mov
mov
dec
aad
cli
mov
push
pop
cmp
mov
jb
jno
mov
and
mov
lock
pusha
loope
popa
mov
cmp
adc
xchg
loope
mov
loope
sub
shll
lahf
orb
pop
mov
inc
ja
inc
xchg
add
stc
lea
adc
sub
mov
mov
testl
mov
sahf
pop
pop
loope
cmp
pop
jl
aam
cmp
cmpsl
cmp
adc
fsubrl
jle
lods
jae
out
sbb
mov
mov
push
push
xchg
mov
jmp
pop
sub
mov
adc
int
sbb
fidivrs
mov
add
xchg
mov
mov
ja
fsubrs
or
cmp
or
mov
rorb
inc
xchg
xchg
imulb
flds
mulb
les
lods
out
or
mov
inc
movsb
lock
ret
mov
cld
cmp
jne
or
xor
cmp
mov
lods
les
scas
mov
push
lcall
jb
cmp
pop
loopne
push
test
bound
dec
lea
add
push
scas
mov
lret
lret
add
add
push
stos
push
loop
outsb
pop
fabs
dec
fs
arpl
shl
inc
cmp
cwtl
insb
inc
movsb
fs
jle
xchg
xchg
dec
xchg
sbb
inc
sbbl
outsb
incl
xlat
addr16
std
jb
add
sahf
xor
in
add
mov
add
jne
sbb
xor
insb
mov
sbb
mov
out
pop
bound
pop
les
or
or
sub
fld
movsb
test
adc
es
and
sbb
leave
and
hlt
sub
cmp
sbbb
mov
sub
stos
outsb
inc
pop
cmp
imul
mov
xchg
xor
insl
xor
out
bound
push
mov
das
test
jo
sbb
pop
mov
subl
lock
push
mov
xchg
insl
es
int
imul
cmp
data16
add
add
out
and
stos
xchg
adc
and
jno
iret
push
fadds
mov
mov
inc
jnp
cs
pop
push
sub
or
adc
push
outsb
movb
xchg
sti
sbb
fcmovne
xor
pop
add
ss
mov
lcall
out
aam
stos
sub
aad
xor
push
movsb
addr16
adc
mov
xor
outsl
test
out
and
aad
jno
das
hlt
sbb
lcall
in
xchg
cld
jp
loopne
xor
movsl
in
jecxz
leave
hlt
mov
insl
fnstcw
shlb
test
and
into
mov
das
scas
jmp
stc
test
inc
push
jne
ss
iret
and
test
jo
lds
dec
aam
or
cmp
repnz
clc
jle
cwtl
nop
fildll
adc
fdivrs
inc
ficomps
add
mull
ds
jle
and
mov
ficompl
push
mov
inc
sub
int3
xlat
sub
mov
adc
mov
frstor
mov
call
jecxz
xchg
jns
dec
mov
mov
aad
xchg
pop
fbld
scas
nop
mov
outsb
pop
arpl
call
jle
dec
mov
ds
mov
mov
mov
mov
das
das
movsb
adc
xor
cmp
sbb
xchg
and
shlb
out
and
mov
or
popf
ret
outsl
sbb
xchg
loop
push
and
subl
std
ret
xor
repz
jecxz
jp
cmp
adc
popa
inc
push
add
dec
mov
pop
scas
cmc
in
cmp
dec
xor
fimuls
ret
sbb
lea
and
negb
cld
and
cmp
shrl
fcoml
push
cmpsb
or
add
cli
popa
ret
das
inc
stos
and
mov
jnp
cmp
inc
mov
out
lahf
test
inc
call
les
cwtl
mov
push
sub
push
leave
insb
cmpsb
jp
imulb
jmp
cs
lods
fsubl
outsb
mov
aas
push
mov
cmp
pusha
inc
and
push
pushf
pop
push
roll
jo
mov
cmpsl
push
and
jp
cmpsb
cmp
cmp
lret
lock
mov
rcrb
fmull
cmp
jle
mov
lds
out
add
in
mov
sbb
arpl
bound
and
aas
jle
arpl
outsl
faddl
dec
jg
jecxz
fsub
rclb
add
cmp
test
jp
filds
dec
jg
call
cli
aas
rcrb
jb
cvtpi2ps
xchg
clc
mov
fwait
xchg
pop
fs
cwtl
xor
adc
fsubs
xchg
dec
pop
sti
inc
push
adc
hlt
je
push
aam
sbb
inc
cmp
mov
push
ja
and
lods
or
fmuls
cld
aaa
lea
xchg
loopne
mov
xchg
cld
movsb
lcall
sub
cmp
in
std
lds
jnp
gs
fwait
jne
jno
loopne
mov
lods
mov
je
sub
arpl
sub
mov
int3
or
cmp
nop
je
stos
sub
ja
sahf
ljmp
ljmp
int3
pushf
add
scas
out
sub
decl
loopne
insb
push
out
popa
jge
jge
or
into
inc
sbb
outsl
bound
mov
xor
sub
sub
fisttpll
xor
mov
lret
pop
adc
lods
addb
fwait
incb
pop
int3
jae
xor
push
mov
and
push
gs
and
data16
push
jg
add
hlt
and
sbb
or
cmp
pop
stos
pop
mov
leave
stos
jne
pop
lods
loop
ret
jo
fs
lahf
dec
nop
icebp
or
test
xor
jo
fbstp
imul
mov
pop
scas
xorl
outsl
movsl
pushf
loopne
push
adc
mov
adc
jb
fmull
arpl
mov
sbb
mov
xchg
push
mov
fs
pop
xor
mov
in
lea
adc
movsl
test
lret
push
sbb
xor
es
push
and
fcmovne
adc
out
or
pop
rol
or
pushf
cmp
sbb
cld
das
int3
std
test
mov
mov
add
andb
std
mov
xor
movl
daa
push
mov
xchg
mov
andb
out
aas
sbb
lcall
ja
xor
lret
dec
leave
cwtl
inc
loope
les
and
mov
xchg
inc
pcmpeqb
aam
or
cli
outsb
js
sbb
dec
push
inc
dec
or
dec
xchg
sbb
stos
aas
sub
push
imul
sbb
enter
mov
cs
xor
push
in
cmp
dec
mov
ja
bound
lock
shl
xor
jl
push
mov
aas
dec
call
jle
ret
and
ljmp
arpl
pop
mov
fisubrl
hlt
int
xchg
shrl
mov
insl
jbe
aad
xor
iret
fdivs
aam
jne
sub
movsb
enter
cltd
push
sub
ret
pop
out
xlat
jns
jle
sbb
imul
std
mov
cwtl
shlb
lea
add
sbb
outsb
pop
ret
movsl
push
test
ss
mov
repz
push
xor
mov
mov
mov
mov
cmp
inc
pushf
xor
dec
push
inc
hlt
jmp
icebp
imul
adc
ret
mov
dec
jl
cmp
dec
inc
in
xchg
je
or
fsubs
jae
arpl
cmpsb
dec
ret
rolb
lods
loopne
mov
mov
push
jge
mov
sub
popf
add
nop
call
jge
loopne
sbbb
xor
xor
je
push
fistpl
cmpl
sub
in
or
fnstcw
movsl
out
dec
insb
adc
cmp
add
lret
idivl
xchg
negb
fidivl
sub
push
rcl
outsl
mov
mov
add
pop
js
pusha
out
push
call
stos
stos
mov
stos
test
orb
cmpsl
adc
stos
loop
and
popa
aam
into
jmp
jp
sahf
stc
push
jb
aam
shlb
pop
jmp
gs
ficompl
push
xchg
bound
pop
cwtl
in
stos
enter
mov
jb
pop
cmp
pop
lcall
nop
stos
clc
or
push
push
aas
xchg
shll
sti
add
popf
push
rorb
jae
pop
mov
adc
imul
xorb
js
xchg
sub
icebp
pop
daa
bound
test
popa
fdivrl
cltd
rcll
inc
subb
pop
ret
adc
in
mov
and
aam
movsb
std
scas
fs
sarb
pop
mov
lret
sbb
fiadds
sbb
pop
fnsave
stos
pop
adc
aam
xlat
aam
out
pop
cmpl
mov
xor
out
leave
jl
ret
xor
sub
sbb
jne
lcall
or
jl
inc
sbb
dec
fstl
sti
lret
test
mov
mov
das
ss
dec
lret
cmpsl
enter
mov
clc
xor
add
mov
jg
inc
divl
sti
cld
std
dec
mov
call
mov
shlb
idivl
into
and
cmp
ret
aam
int3
push
mov
repnz
dec
push
fsubrl
mov
aad
insb
pop
das
jmp
xchg
in
xchg
lcall
lds
inc
aad
lds
pop
inc
sahf
jae
pop
xchg
dec
push
ds
aaa
loopne
into
mov
call
in
repz
jge
jp
push
lock
or
sahf
jg
jge
out
rolb
dec
pop
ja
addr16
xchg
loope
mov
jp
sub
mov
imul
adc
pop
and
or
pop
jle
ret
sbb
adc
xor
insb
and
pop
adc
pop
inc
arpl
rcrb
lcall
xor
jle
je
inc
lcall
pop
pop
int
jge
aas
or
sbb
dec
pop
and
sub
or
mov
jnp
sbb
loope
sub
ds
jae
xor
add
cmp
dec
xor
push
cmc
xchg
pop
popf
sbb
or
fdivrl
cmp
jo
rolb
jp
mov
pop
adc
into
ljmp
imul
dec
pop
cmp
push
ljmp
andl
pop
pushf
xchg
ficoml
fidivrl
fldcw
fdivrs
sbb
mov
xchg
imul
icebp
icebp
adc
ret
mov
mov
pop
jae
rcrl
inc
insb
out
push
fiaddl
sarl
dec
aam
jae
pop
inc
jbe
mov
xor
clc
xchg
jb
push
mov
push
xor
push
repnz
fadd
ret
mov
pop
cmp
xchg
xchg
das
pop
mov
call
and
insl
call
sub
clc
in
jmp
sub
lret
test
adc
das
cmpsl
pop
pop
add
imul
cmp
sbb
pop
aaa
cmpl
jae
dec
xor
or
out
in
pop
fildl
mov
enter
xchg
nop
ds
int3
pop
inc
fwait
jl
xchg
sub
ljmp
xchg
sbb
movsl
jo
or
inc
lds
xchg
in
jae
or
test
lods
je
pop
out
inc
push
arpl
push
ret
test
fcmovnb
jmp
insl
loop
cmp
shlb
mov
adc
out
pop
pop
sub
sahf
ja
push
out
test
and
jle
add
rorb
push
movsb
rolb
push
dec
insl
pop
cmp
int3
push
mov
in
or
xchg
out
sar
xchg
dec
mov
inc
pop
mov
ficompl
mov
mov
gs
pop
repz
push
nop
mov
cmc
lea
add
loop
in
jbe
incl
mov
jo
cmp
mov
sub
out
push
mov
rcrb
imul
fldcw
shl
jno
mov
dec
xchg
cmp
in
lahf
mov
jno
mov
jecxz
sub
enter
stos
jnp
pushf
insb
je
lods
aaa
les
push
xchg
loopne
lret
fmul
jns
xor
maxps
insl
adc
add
adc
adc
test
fwait
mov
int
ret
mov
push
adc
mov
insb
inc
pop
inc
inc
add
hlt
clc
jg
aaa
mov
mov
outsl
or
les
movsl
fists
adc
cmp
push
test
mov
fists
aas
xchg
popa
mov
xchg
js
dec
push
fwait
sti
cmpsl
xchg
js
cmpsl
or
test
add
sbb
rorb
cwtl
ds
jnp
fildl
mov
inc
cwtl
mov
dec
enter
subl
stos
adc
test
or
adc
dec
mov
stc
dec
mov
pop
inc
les
andl
push
mov
xor
jns
push
mov
pop
daa
adc
add
insl
mov
xlat
dec
sbb
pop
imul
jmp
push
dec
leave
rcll
push
mov
add
mov
cltd
negl
bound
repz
repnz
fdivl
rcl
push
loop
dec
cmpsl
fstp
push
hlt
pop
mov
mov
out
xchg
in
in
shrb
cmp
stos
movsl
jl
mov
dec
cmp
in
jbe
outsl
aam
mov
out
mov
js
jmp
adc
enter
dec
mov
lahf
and
mov
xor
fldenv
sbb
sub
insl
adc
mov
shll
imul
xchg
xor
pop
jmp
xor
call
jno
iret
dec
sub
mov
xlat
jge
cli
sbb
push
push
xorl
jge
and
push
leave
fcom
pushf
fdivl
sbb
pushf
sbb
test
xorb
into
mov
rcll
cmp
ds
outsl
mov
rolb
iret
mov
cli
imul
adc
jmp
and
jmp
jp
cmp
es
scas
rorl
ds
int3
adc
lcall
and
lods
mov
test
pop
in
test
stc
cmpsl
test
mov
dec
xchg
repnz
jg
or
push
call
fmull
out
xchg
dec
or
lcall
mov
rolb
cmp
jle
sub
sti
pusha
dec
jge
popa
xor
xor
fsubl
and
mov
mov
loopne
cmp
mov
xor
in
mov
pop
sub
stos
js
lds
mov
mov
add
cmc
insl
arpl
adc
add
sbb
sbb
iret
sbb
and
sbb
push
xchg
mov
jecxz
jae
sbb
xlat
into
into
sub
sub
rclb
subl
nop
repnz
and
movsl
scas
pushf
out
out
mov
mov
adc
mov
adcb
inc
gs
jg
and
pop
inc
inc
mov
dec
xor
out
lods
cmp
push
sbb
adcb
mov
xor
jae
mov
fstpt
out
jl
stc
dec
gs
sbb
push
inc
cmp
adc
push
imul
cmp
daa
xchg
xchg
cmp
mov
xor
xchg
sub
adc
mov
fnsave
mov
dec
dec
xor
stos
mov
in
clc
sbb
ss
clc
dec
aaa
mov
icebp
push
cmp
mulb
arpl
sub
dec
dec
adc
loopne
and
pushf
mov
or
out
or
addr16
dec
push
out
pop
xchg
sub
popa
shll
push
sub
mov
aam
aad
mov
sub
mov
hlt
add
inc
insb
cmp
mov
aad
cmc
loopne
mov
fists
cwtl
mov
loopne
stc
jg
adc
das
rorl
push
sub
inc
sub
xor
loope
jnp
sbb
xchg
outsb
test
rorl
xor
inc
clc
dec
cmpl
sub
inc
cmpb
leave
pop
jne,pn
mull
push
cld
push
out
mov
xlat
dec
dec
int
clc
cwtl
ror
enter
xor
sub
push
add
sbb
mov
xchg
stos
sub
sub
insl
mov
sub
push
aas
jne
mov
sbb
mov
lret
fnsave
add
cmp
inc
xchg
pop
xor
int3
cmp
imul
lret
xor
stc
cmc
je
leave
mov
int3
cmp
jl
push
ljmp
insb
dec
das
or
push
cmpsl
jno
mov
sbb
jae
cmp
fildll
mov
call
rol
lds
sub
jl
sub
jb
repz
mov
or
push
mov
pop
imul
mov
mov
adc
jbe
call
sti
and
mov
sub
stc
cli
push
jb
xor
mov
in
ljmp
lcall
rcrl
push
scas
popa
mov
into
mov
cwtl
pop
or
mov
pop
sub
inc
jb
pop
out
fiadds
cmp
gs
nop
xor
sub
push
into
daa
dec
adc
ja
fcmovne
jnp
pop
jl
dec
inc
jne
inc
enter
out
mov
fwait
hlt
outsb
call
push
xchg
dec
jg
sub
pop
popa
divb
fadd
insb
mov
aas
push
test
or
push
shlb
pusha
add
jle
mov
shll
ljmp
push
rcrb
push
das
stc
frstor
pusha
push
fcomps
jmp
lahf
cmp
xor
pop
hlt
movsb
dec
lcall
pop
xchg
inc
add
out
insl
andl
int3
lock
pop
xor
lret
or
dec
or
inc
scas
insb
dec
xorb
lcall
jp
fstpt
aad
mov
test
lea
sub
mov
or
icebp
pop
mov
sbb
add
out
les
fisttpl
repnz
or
xchg
imul
push
mov
aaa
popf
mov
sbb
mov
mov
dec
data16
xchg
mov
call
lahf
loopne
icebp
sbb
cmp
xor
lahf
shll
inc
pop
push
sbb
xor
mov
mov
repnz
xlat
adc
les
scas
jmp
jle
int
mov
stos
adcb
or
loop
fwait
cmp
stos
leave
jg
mov
pop
jno
xlat
jae
sub
or
cmp
cmp
inc
mov
pop
cld
and
jmp
in
mov
dec
jg
and
in
push
in
mov
sbb
fildll
in
subb
lret
pop
lahf
frstor
adc
mov
sahf
push
ret
push
sahf
lea
stos
popf
sahf
pop
mov
push
push
sub
cmp
dec
lret
test
in
fwait
push
and
repz
ds
and
pop
push
dec
adc
cmp
mov
add
std
mov
int
inc
mov
push
sub
inc
loop
sti
pop
sub
dec
xor
jmp
inc
push
test
mov
ret
ljmp
outsb
jns
mov
push
ret
ds
pop
add
sub
mov
dec
enter
mov
movsb
addl
bound
sbb
ja
xor
movsb
xor
or
test
jno
dec
fcoms
mov
js
repnz
jg
daa
shrb
fbstp
and
cli
cwtl
inc
add
movsb
lcall
shrb
out
pop
rcl
orl
mov
aas
xchg
jb
lahf
xlat
mov
mov
dec
mov
enter
xchg
jl
imul
fbld
data16
xchg
out
xlat
inc
out
cmp
push
or
out
test
jecxz
jb
or
aaa
ljmp
dec
add
push
je
js
pop
ret
sub
mov
fldt
rorl
push
imul
iret
aaa
inc
sti
scas
adc
jo
push
push
lods
mov
mov
rcl
mov
fildl
mov
cmp
xchg
sub
and
pusha
mov
mov
pop
push
jbe
idivl
push
fidivs
test
adc
push
and
add
push
pop
mov
mov
sbb
pop
mov
inc
aaa
movsl
dec
shl
fcomps
mov
testb
mov
rorb
or
aas
std
sbb
movsl
lahf
imul
test
jecxz
pop
int
lahf
iret
aaa
jb
popf
sbb
push
cmp
icebp
out
and
in
jmp
lea
inc
sub
inc
cmc
int3
mov
fwait
sarl
adcb
mov
mov
outsb
mov
jno
add
popf
dec
ds
or
adc
into
pop
dec
xchg
jecxz
add
test
cwtl
xlat
xor
adc
repz
sbb
lea
adc
sub
andl
test
cmpsb
popf
or
or
sti
repnz
jl
and
adc
pop
sub
nop
in
jg
mov
jb
push
gs
or
push
fnstcw
test
add
lcall
in
xchg
fimull
inc
dec
scas
adcl
push
je
fmul
pusha
push
in
test
inc
int3
popf
push
cmp
mov
sbb
shll
push
xchg
mov
fidivrl
inc
mov
jbe
aas
das
lock
mov
push
xchg
pop
iret
sub
xlat
fistps
cmp
push
jns
mov
sub
ret
movsb
xor
jae
loope
lods
pop
pop
testl
sbb
hlt
in
adc
xchg
stos
push
movsb
rol
shl
xorl
nop
into
adc
sub
and
es
pop
dec
rorl
int
mov
mov
in
mov
mov
cmpl
mov
sti
dec
push
add
dec
test
mov
xchg
mov
pushf
or
jmp
stc
xor
das
outsl
jnp
pop
fdivs
cmp
and
xchg
cmp
push
sbb
sbb
pop
fwait
lret
repz
clc
in
mov
popa
mov
divb
inc
pop
cltd
or
mov
sti
jns
orps
mov
xchg
add
cmp
cmpsl
lret
inc
add
leave
mov
repnz
in
pusha
cwtl
sbb
xor
sbb
je
inc
mov
mov
cmpsl
jae
cmp
sahf
sar
ret
jo
inc
movsl
fbstp
mov
inc
xor
ret
jge
sbb
pop
cmp
ret
lret
cmp
sbb
pop
adc
mov
mov
ja
ds
int3
pop
sbb
mov
lea
cmpsb
fisubrl
fistpl
daa
fs
mov
mov
jae
ds
mov
jmp
insl
in
sar
jle
pop
fisubs
pop
stos
pop
out
int3
and
pop
sahf
or
sti
jno
cmpsb
inc
shll
sbb
ret
or
mov
cmp
nop
mov
push
push
jbe
mov
popa
pop
stos
je
or
mov
test
sub
movsl
fidivs
cs
int
lds
test
test
jecxz
push
push
push
sub
push
lds
addl
pop
in
dec
push
and
fsts
sub
insb
cli
sbb
pop
cmc
sub
in
popf
inc
xchg
out
sbb
dec
pop
push
jge
dec
aaa
nop
ds
sub
adc
stos
loop
int3
jmp
sub
jmp
add
jne
ljmp
les
jg
shrl
fldcw
test
lods
pusha
into
dec
out
pop
or
imul
fcomi
push
xor
jno
cmpsl
add
push
hlt
iret
cmp
test
pop
out
xchg
fsubp
jecxz
inc
xor
sbb
call
or
loop
outsb
dec
ljmp
jp
add
and
xchg
xor
cwtl
or
cmp
notl
repz
ljmp
int3
mov
push
cmc
cmp
mov
push
mov
cmp
loope
add
lahf
mov
cmp
inc
aas
roll
inc
cltd
jg
jb
mov
or
fisubs
jl
jg
in
cmpl
adc
hlt
mov
push
or
enter
rorl
clc
out
aad
sub
push
and
mov
sub
or
fs
bound
jo
loope
aad
mov
arpl
test
in
xor
orb
cmp
decb
aam
test
enter
movsb
movsl
inc
or
gs
movsb
cmp
test
iret
add
dec
cwtl
lods
ljmp
or
xchg
and
add
push
clc
adc
adc
popa
popa
adc
inc
xor
inc
rclb
stos
add
pop
inc
hlt
shufps
jo
mov
dec
or
shll
xchg
out
test
push
xor
inc
xchg
pop
data16
and
mov
aam
inc
roll
push
xor
arpl
mov
and
pop
movsl
sbb
pop
les
es
add
cs
adc
imul
jbe
imul
loopne
jns
cmpsl
inc
add
pop
movsl
test
pop
jp
das
shrl
movb
push
dec
sub
mov
addr16
fistl
pop
cmpsb
pop
mov
cltd
push
cltd
mov
imul
dec
shlb
jmp
cmp
push
sub
shll
lcall
stc
add
int3
insl
js
in
inc
dec
jb
or
inc
loop
out
pop
das
out
adc
pop
cmc
rorb
mov
insb
xchg
mov
inc
inc
stc
add
and
lods
cmpsl
xchg
adc
inc
bound
outsb
sub
jl
scas
lock
push
push
in
mov
shlb
int
jo
int
mov
mov
push
jb
insl
dec
inc
mov
scas
mov
xor
mov
loope
cmp
inc
adc
add
and
inc
sbb
int
mov
push
daa
lcall
rorb
in
xor
jle
xchg
pop
pop
outsb
mov
stos
or
or
dec
jnp,pn
cli
inc
out
pop
pop
addr16
and
inc
int
in
data16
repnz
lds
jno
mov
inc
inc
xor
sub
jbe
aam
pop
lock
sbb
cli
or
dec
gs
xor
mov
mov
and
pop
xchg
test
sub
scas
mov
sti
inc
and
and
popa
inc
dec
push
iret
fs
popa
test
int
inc
loop
mov
push
dec
je
ret
jns
outsb
mov
flds
outsl
cli
sbb
nop
add
fbld
xchg
push
adc
jb
dec
les
cli
das
cmpsb
test
and
mov
push
mov
popf
push
jno
inc
fldenv
dec
pushf
mov
sbb
fisubl
mov
fcmovnbe
lret
xor
push
insb
mov
and
fs
popa
xor
outsw
xor
loop
imul
pop
aam
pop
cmp
mov
decl
jno
inc
hlt
push
bound
sti
lods
or
add
test
enter
mov
mov
adc
subl
mov
sbbb
loope
ljmp
and
movsl
or
sbb
jne
sub
out
enter
mov
jl
ret
shl
repz
pop
in
cmp
dec
mov
sbb
dec
sub
hlt
mov
aad
in
jne
stos
xor
mov
nop
or
in
add
sub
sbb
mov
xor
sub
loope
or
mov
and
jmp
sbb
das
jns
jne
jl
js
lods
js
out
rcll
mov
xchg
jbe
mov
inc
pop
cmp
sub
mov
mov
mov
mov
loope
inc
push
loopne
mov
mov
call
cli
outsb
pop
jp
pop
stc
pop
bound
xlat
dec
ss
mov
outsl
xchg
cli
test
push
push
ret
xchg
xor
mov
pushf
push
mov
push
movb
aam
dec
xchg
mov
xlat
mov
add
int
lcall
mov
xchg
mov
scas
xor
mov
mov
stos
xor
add
jmp
or
mov
pop
xlat
idivl
cmpsl
filds
push
imul
push
xchg
xor
test
xchg
xchg
sub
je
inc
jnp
lret
icebp
sbb
mov
insl
mov
push
in
pushf
fdiv
nop
mov
lods
data16
cmp
and
mov
cmp
in
shl
and
cmc
pop
and
jg
ror
sub
inc
enter
jecxz
aaa
jmp
arpl
aas
or
stos
cwtl
popf
cmp
and
insl
xchg
mull
aad
sub
mov
dec
mov
cld
cmpsb
and
xor
test
inc
aaa
movsl
lds
xor
scas
pop
enter
dec
scas
mov
leave
mov
lea
jno
or
sahf
scas
mov
das
push
lret
sub
jb
aad
push
repnz
add
push
dec
jbe
adc
and
mov
les
sub
pop
out
scas
pop
and
push
jle
call
lea
mov
in
mov
cmp
out
out
pop
jb
push
jns
int
dec
sub
leave
pop
xchg
loopne
es
sbb
mull
fisubrl
adc
dec
mov
mov
es
xorl
jne
sbb
rcrl
clc
jmp
adc
dec
daa
ja
push
scas
and
dec
xor
and
and
jmp
mov
jb
lret
jp
sub
xchg
or
insb
mov
xchg
test
sbb
shlw
rorl
lods
push
inc
cmp
xchg
test
adc
aas
or
xchg
sub
call
cmp
push
xor
addr16
cmpsl
scas
fs
mov
inc
push
xchg
xchg
mov
inc
and
loope
int
xor
push
mov
ret
test
inc
push
loop
out
add
mov
jnp
aam
fisubrl
push
iret
add
dec
adc
push
imul
pushf
cmp
push
rcll
int3
int
mov
or
or
mov
lea
inc
jb
int
dec
pop
jmp
dec
cli
cmp
sarb
inc
incl
fimull
addr16
gs
jl
mov
push
pop
insl
dec
divl
imul
jb
adc
inc
pop
push
arpl
xlat
xor
jecxz
je
arpl
or
lea
mov
mov
outsb
fs
aas
push
shrb
or
test
imul
sarb
jge
je
sti
sti
push
dec
sbb
repnz
rcl
lds
mov
jnp
ret
fs
stos
push
xor
xchg
mov
gs
cmp
je
adc
into
andl
cmp
fadds
pushf
inc
xor
push
cmpsl
bound
mov
sbb
mov
pop
repz
aas
or
test
pop
scas
movsb
cmpl
or
insl
imul
lret
or
shll
fstps
push
std
into
jg
sti
test
mull
mov
wbinvd
sbb
dec
jb
sub
adc
push
add
sbb
lods
pop
mov
aam
sarb
lea
xchg
in
push
pop
mov
jb
testb
je
andb
js
lds
jle
pop
aaa
lods
arpl
inc
jg
push
jnp
mov
mov
mov
mov
stc
cmpb
notb
and
out
sbb
out
cmc
mov
jb
pop
sbb
xor
lods
lods
xchg
mov
xor
jle
mov
ficomps
lea
pop
push
mov
pop
cmpsl
inc
jg
adc
or
push
shll
dec
jb
cmc
ljmp
cld
xor
or
lods
push
sub
test
push
stc
push
xor
shlb
ret
jg
loop
sub
xchg
add
jge
pop
mov
aas
cli
bound
out
es
cwtl
push
cltd
test
sub
add
and
sub
call
sub
xor
arpl
inc
scas
push
mov
inc
rclb
jns
inc
faddl
int
fs
fnstenv
jns
leave
popf
add
ja
idivb
or
addr16
xor
pop
cwtl
fsub
loopne
fsubr
inc
sarl
lcall
lahf
cmp
scas
lock
add
or
mov
stos
repz
mov
mov
cmc
mov
push
cmp
loope
jl
mov
imul
or
or
or
jns
subb
mov
mov
sbb
xchg
in
mov
in
push
sahf
mov
or
xchg
fimull
pop
cmp
iret
in
rolb
movsl
aaa
jg
lret
adc
mov
pop
and
outsl
aaa
lahf
dec
stos
in
out
pop
xchg
mov
insb
mov
mov
scas
ds
push
nop
ret
ret
fldcw
xchg
adc
mov
xchg
mov
orb
mov
cmp
mov
outsb
inc
jbe
xor
fidivrs
jnp
jp
or
sbb
lods
mov
je
lahf
icebp
xchg
repnz
xchg
jns
addr16
into
lock
mov
imul
push
in
outsb
int
add
adc
sub
imul
out
mov
cmpsb
int3
ja
js
add
gs
das
cmp
inc
dec
stos
cld
cmp
das
xor
pop
sub
push
scas
adc
cmp
mov
enter
lods
pop
int
adc
jae
out
pop
inc
movsb
adc
push
scas
push
arpl
lret
js
mov
ljmp
in
cmc
mov
dec
mov
aad
mov
out
pop
sub
mov
and
or
cmp
into
pop
mov
jne
mov
mov
jne
and
push
dec
gs
jb
mov
out
out
ds
jmp
jb
mov
jl
adc
int3
mov
sbbb
and
mov
loope
sbb
fwait
outsl
cld
scas
adc
or
push
es
inc
fidivl
or
mov
push
sub
fdivr
cld
fneni(8087
mov
sub
xchg
sub
inc
fst
mull
cmpl
adcl
sahf
imul
out
and
and
dec
hlt
push
repz
mov
mov
lret
jmp
inc
push
cmp
imul
mov
and
ja
dec
sbb
fisttps
pop
sbb
gs
dec
js
sti
lahf
movsl
adc
sbb
inc
push
adc
jl
aam
outsl
xor
ljmp
sub
mov
fwait
xchg
out
dec
leave
and
or
lcall
test
in
fstpl
xchg
mov
lret
in
push
bound
fwait
sahf
hlt
scas
popa
mov
test
xchg
mov
xor
adc
outsb
popa
jbe
add
mov
push
xchg
mov
lods
jl
push
mov
xchg
dec
jb
enter
mov
addr16
icebp
fdivrs
pop
stc
xor
add
and
pop
leave
mov
xchg
ret
mov
testl
lret
scas
inc
imul
jae
adc
adc
pop
fcompl
shr
cld
push
rcl
test
xchg
repz
adc
and
movsb
out
loop
push
mov
leave
jg
dec
mov
xor
jle
das
enter
mov
iret
sbb
dec
into
cmp
push
mov
pop
or
xor
jp
std
xlat
pop
aam
pop
mov
stos
xlat
mov
sahf
das
leave
lods
out
clc
mov
jne
in
test
push
push
sbb
and
lcall
ret
mov
and
dec
insb
xchg
inc
out
pop
hlt
jbe
mov
inc
mov
aam
pushf
or
mov
cmc
and
mov
add
mov
or
cmp
and
test
and
outsl
mov
cmpsl
pushf
shr
fdivl
jae
sbb
in
fistpl
lret
push
jp
mov
daa
adc
test
and
enter
push
mov
xchg
push
pop
test
shll
imul
xchg
adc
fwait
fs
sub
or
xor
mov
cmpsl
fisttpl
repnz
mul
testb
cmc
mov
jp
cmpsb
sti
xchg
fcmovne
mov
xchg
shl
call
out
lds
dec
mov
iret
and
or
cmp
mov
push
dec
dec
les
sub
push
hlt
xchg
popa
inc
ss
pop
mov
xor
mov
push
in
xor
sub
int
xor
gs
aad
jb
add
jmp
inc
mov
mov
inc
adc
fstpt
dec
imul
test
out
jbe
loopne
dec
test
adc
ds
cltd
loopne
xor
jmp
dec
push
dec
xchg
sbb
insl
jne
pop
xchg
inc
sbb
lods
cmp
and
cmc
cli
in
xor
in
mov
loop
cltd
neg
add
xchg
es
dec
jbe
mov
push
fsincos
clc
int3
lcall
rorb
fisttps
insl
and
or
push
pop
add
cs
test
mov
and
mov
mov
popa
lods
aad
insl
jae
aam
mov
test
push
xor
arpl
inc
cmp
mov
popa
or
jo
nop
xchg
out
aaa
idivl
negl
arpl
fsubs
repz
sahf
pop
push
sbb
dec
jbe
jbe
movsl
adc
pop
jp
push
jg
xlat
push
xor
out
outsb
inc
cmp
xchg
fildl
stos
rclb
mov
daa
or
pushf
push
fildll
inc
sub
sub
repz
jle
int
xchg
fs
std
add
dec
lcall
mov
jae
fscale
and
push
push
pop
aad
sub
cmp
fsubrs
in
jno
popf
jae
fwait
in
mov
xor
call
repz
jb
jle
pusha
cmpsl
cmc
inc
push
sbb
movsl
xchg
or
add
ficompl
xchg
shl
std
rcrl
ret
addr16
rol
aam
mov
lock
mov
or
push
dec
xchg
cmpsb
lret
das
fdivrp
scas
mov
rclb
ret
xlat
push
icebp
sub
mov
std
xchg
jo
xchg
ljmp
sub
push
ds
pop
mov
in
fs
and
jne
outsl
xor
jne
out
mov
daa
dec
xor
lods
stos
mov
out
test
add
cmp
mov
lods
lcall
xchg
add
dec
mov
and
stos
fdivs
mov
cltd
dec
aad
repz
cmp
lock
mov
xrelease
shrl
adc
sub
xchg
aas
and
sub
inc
pop
cmp
mov
out
jle
lea
das
pop
arpl
cmpsl
mov
push
out
adc
mov
dec
cli
fldl
and
jge
clc
ret
fistl
inc
lods
popf
stc
fldenv
mov
sub
hlt
test
inc
fwait
push
inc
mov
xchg
arpl
stos
pop
pop
mov
sbb
testl
in
xchg
adc
jno
mov
pop
xchg
sbb
or
push
mov
xchg
das
loopne
mov
outsl
cmp
loop
push
and
mov
or
stc
jle
inc
or
mov
mov
dec
popf
dec
fistpll
jno
sub
aad
xchg
sbb
push
cli
pop
mov
popf
sbbb
popf
dec
mov
dec
xchg
jae
mov
xchg
sbb
or
inc
cmp
push
ljmp
mov
addr16
out
insl
cmpsb
push
xor
stc
imul
mov
mov
cli
mov
or
lock
adc
shrb
imul
add
fdivl
call
incl
xor
and
push
shl
int3
fcmovnu
push
mov
sahf
in
mov
bound
mov
test
addl
fwait
testl
repz
imul
sarl
ljmp
out
push
dec
mov
push
fisttpll
inc
cli
xor
jp
xchg
sub
aam
cmc
adc
test
hlt
pop
dec
movsb
jl
into
push
pop
lret
dec
cmp
adc
into
cmp
mov
lods
push
repz
and
lcall
in
dec
lods
ja
xchg
into
jge
test
xor
or
xchg
ret
pushf
sbb
push
mov
mov
lret
adc
sti
sub
test
xor
lret
jle
inc
mov
pop
or
les
xchg
cmp
lea
pop
in
sbb
fisubrs
pop
sbb
fisttpll
cmp
mov
add
fimuls
outsb
lock
cmp
mov
push
xor
sbb
push
fildll
and
cwtl
stos
gs
add
sbb
ror
cmp
add
sbb
mov
jbe
push
sub
or
jl
int
pop
ret
and
mov
pop
cmpb
sbb
cli
fistl
pop
loope
enter
mov
or
aad
scas
inc
push
cmp
add
clc
andl
or
sahf
mov
mov
mov
jl
jns
repz
mov
push
mov
xchg
fdivrl
sub
icebp
xchg
mov
xchg
mov
ret
sub
xchg
mov
imul
xor
andb
mov
addb
xchg
pop
cmp
shll
jp
or
xor
cmc
jecxz
pop
mov
rep
jl
inc
mov
bound
pop
dec
adc
mov
shll
adc
nop
int
and
lret
and
mov
loopne
sbb
and
bound
loop
test
into
adc
aaa
mov
mov
jbe
adc
cmp
bound
cmp
inc
rorb
dec
mov
dec
sub
push
outsb
std
clc
adc
lret
sub
icebp
pusha
cmp
ja
divb
or
ret
rcr
iret
das
cltd
xor
cli
rclb
push
outsb
pusha
jno
test
inc
aaa
in
mov
stc
mov
xchg
jl
ss
push
aam
pop
add
fs
imul
inc
inc
sub
pop
insb
mov
cmp
or
jbe
les
xchg
in
lret
cltd
inc
jnp
or
jns
push
lret
int
js
push
inc
pop
mov
fmul
imul
ja
cmp
cs
mov
mov
mov
jno
jnp
rcll
cltd
mov
xor
insl
rolb
xchg
das
jmp
lds
bound
adc
xor
sub
test
dec
jge
enter
adc
arpl
in
fimull
mov
decb
mov
aad
das
aam
mov
pop
and
mov
push
test
push
add
pmullw
jbe
stos
jne
loop
sub
int
sbb
fcoml
xchg
cwtl
xor
test
xchg
pop
xor
filds
test
mov
in
or
mov
xchg
inc
loope
aas
cli
lret
insl
gs
xchg
xchg
mov
mov
mov
popf
push
pusha
or
sbb
mov
sub
scas
stos
fs
in
out
andl
mov
pop
mov
sbb
mov
repnz
imul
jge
mov
lcall
iret
add
add
ret
mov
cmp
les
or
mov
jo
loope
psubsw
mov
mov
sbbb
adc
imul
cmp
mov
push
add
or
js
repz
sub
insb
dec
hlt
inc
xorb
and
sub
sub
js
mov
test
fs
mov
lods
test
push
gs
stos
in
mov
dec
mov
push
lret
or
mov
negl
or
loop
mov
push
push
jne
cmp
test
gs
ret
lock
pusha
outsl
xchg
addr16
popa
mov
pushf
push
movsb
jmp
cwtl
loope
jmp
sbb
dec
das
das
aad
into
sbb
movsl
cmp
dec
pop
cli
fsubrs
cli
rolb
adc
iret
push
dec
push
test
test
sbb
clc
out
pop
stc
push
cmpsl
test
mov
mov
out
je
add
inc
cwtl
push
cmp
inc
mov
in
pop
sub
fst
orl
jnp
jb
push
push
fmul
fcompl
adc
enter
add
xchg
pop
push
test
mul
jecxz
jae
ss
loopne
pop
repnz
ret
pop
lret
push
mov
mov
pop
jle
repz
pop
pusha
pop
sbb
out
out
sbb
daa
xchg
rorl
push
test
inc
cmp
jecxz
dec
cmp
std
adc
xchg
sbb
push
dec
out
add
pop
push
icebp
xlat
jg
data16
in
lock
jno
fucom
repz
cli
cld
shrb
movl
mov
scas
push
push
mov
jno
fistpl
mov
xor
and
gs
inc
rcrb
mov
lret
sub
add
adc
add
jo
aad
stc
insb
push
lea
das
inc
xchg
mov
mov
and
adc
in
dec
inc
pop
mov
out
push
dec
shrb
sbb
push
adc
sahf
cmpsl
pop
call
fs
mov
fs
pop
daa
lret
sarl
aaa
cmp
into
pop
sub
stos
xchg
icebp
sbb
pop
push
out
pop
scas
xor
add
mov
and
xchg
inc
or
mov
sub
add
negl
xchg
xchg
mov
push
mov
lret
dec
cmc
or
repz
xchg
pop
xchg
test
je
push
rclb
xor
scas
nop
and
js
es
out
repz
enter
outsl
test
mov
lock
test
add
push
pop
les
cmpb
push
adc
jns
lods
mov
jo
not
push
repz
decb
and
ficompl
mov
scas
jns
int3
repnz
imul
add
adc
mov
mov
push
push
adc
xchg
in
pop
xchg
aad
and
test
jp
push
jbe
fimull
sbb
mov
out
mov
lret
shll
shr
pop
add
sbb
in
shll
jb
lea
push
out
call
outsl
pusha
loop
sbb
into
jne
dec
popa
or
push
xchg
inc
mov
pop
mov
repz
add
pop
dec
jmp
insb
adc
jb
shrb
lahf
movsb
pop
dec
pop
mov
out
xchg
pushf
psubq
cmp
mov
f2xm1
mov
jbe
sahf
and
cmp
testb
aas
push
xchg
mov
fs
lods
mov
adc
pop
jge
int3
aaa
repz
clc
xchg
push
push
lods
jae
jbe
sbb
and
cmpsl
push
call
mov
xchg
push
or
adc
ljmp
lock
sub
int3
shlb
cmc
pusha
test
pop
mov
movsb
push
dec
in
rolb
mov
inc
lahf
cltd
das
addr16
iret
sbb
sahf
lods
mov
fisttps
dec
rcrl
repz
xor
adc
push
dec
mov
pop
adc
push
dec
push
mov
xor
lret
jmp
sub
sub
fisttpll
jge
push
push
sarl
inc
insl
in
and
gs
outsb
xchg
mov
enter
call
aas
pop
and
pop
mov
arpl
fadds
ja
xchg
fcoml
sub
fnstsw
unpckhps
jl
add
jb
pop
or
sti
lret
add
cltd
cmpsl
and
repnz
jne
xchg
pop
xlat
dec
add
daa
test
mov
int
cmc
cltd
scas
ret
jne
dec
std
mov
cltd
lret
mov
imul
dec
ljmp
stos
and
mov
add
hlt
nop
rorl
sahf
pop
fwait
xor
les
and
jp
push
out
mov
jg
sbb
cmp
clc
subl
add
jnp
pop
movsl
cli
sub
rolb
push
mov
xchg
jnp
mov
xor
mov
orl
jmp
into
div
inc
negb
ret
ret
int
add
pop
inc
xor
xchg
icebp
mov
jae
adc
je
pop
mov
leave
mov
clc
mov
push
mov
enter
cwtl
sub
cmp
mov
pusha
jp
je
imul
mov
test
xchg
pop
jae
dec
and
dec
out
in
mov
daa
sbb
push
dec
push
data16
lea
mov
jle
mov
mov
mov
and
dec
cwtl
sub
sti
cld
fisttpl
adc
push
std
jb
push
shl
aad
inc
sbbl
aad
lret
hlt
mov
mov
sbb
mov
sbb
cs
stos
jo
pop
std
mov
pop
stos
test
adc
or
rcll
mov
fs
sub
movsb
sar
add
clc
xchg
cmc
test
fs
inc
dec
inc
jb
insb
pop
push
sub
int
sarl
out
call
sahf
adc
mov
pushf
inc
negl
insb
lret
mov
xchg
out
and
mov
xchg
aas
pop
sub
stos
or
xchg
sti
adcb
adc
call
push
jo
lahf
jne
jp
es
cmp
push
sub
out
mov
or
cmp
les
in
mov
jp
ss
ss
pop
xor
mov
jg
mov
cmpsl
daa
add
sarl
jmp
cmp
shrb
pop
sbb
fimull
ljmp
shll
or
test
and
inc
out
mov
in
mov
sar
aad
inc
cltd
mov
adc
cmp
pop
cmpsb
and
mov
and
jle
outsl
push
mov
sbb
cmp
mov
xor
ds
push
insl
into
mov
adc
test
mov
push
inc
dec
and
xor
jbe
insb
sub
mov
cli
push
add
jno
mov
push
cmp
and
js
mov
add
mov
fcmovu
and
mov
ror
mov
fnstcw
out
out
or
je
test
sti
cmpsb
jl
jo
aas
pop
jecxz
cmp
push
dec
cwtl
inc
cmpsl
jb
out
fstpt
call
lea
imul
sub
push
fsubrl
cmp
call
aaa
jg
mov
mov
das
pop
mov
and
leave
push
jo
aad
pop
jecxz
pop
sub
outsb
mov
in
add
jg
leave
xchg
jl
push
idivl
movsl
jecxz
fisttpll
and
lea
pop
push
das
push
dec
mov
std
jbe
xor
bound
ret
adc
out
fadd
jecxz
int3
fcomi
clc
fs
sbb
mov
inc
aas
adc
add
sub
jnp
fnsave
add
aam
cmp
loop
xor
outsl
add
dec
nop
pushf
push
and
fnstenv
jns
pop
cwtl
sub
xchg
movl
dec
jl
push
fmull
push
mov
lret
cli
sbb
sbb
inc
cltd
vpavgb
addr16
fisttpl
mov
repnz
jbe
daa
lea
lahf
sub
hlt
mov
mov
mov
xor
or
dec
test
fistps
add
addb
popa
lock
das
cmc
ss
pop
xor
sbb
xor
inc
sbb
push
insl
lds
and
repnz
fdivr
dec
xchg
dec
popf
mov
or
pop
out
clc
pop
sub
jae
pop
fimuls
dec
add
pop
sbb
adc
sub
gs
les
imul
jg
decb
jae
xor
ficoms
mov
dec
lahf
mov
and
cmp
out
push
stos
pop
add
in
xor
movsl
mov
xor
mov
and
loopne
imul
pop
aaa
lcall
sub
dec
dec
movsb
inc
add
sarl
sbb
dec
pop
fnstenv
hlt
sub
sub
xor
sub
popa
fisubs
and
xchg
aas
sbb
icebp
loop
pop
aam
ss
std
pop
mov
push
jae
lea
mov
lcall
cmp
inc
cs
test
icebp
hlt
lods
sahf
add
pop
lods
xchg
push
pop
and
test
cmc
adc
divl
ret
jae
aam
test
aaa
lods
dec
xchg
jl
out
and
mov
mov
test
ds
mov
rcr
cli
out
arpl
das
clc
enter
repz
jecxz
jb
testb
mov
and
adc
loop
sbb
mov
int
outsb
mov
aam
add
ficoml
jns
jl
sbb
cmpsb
inc
jb
bound
fs
test
sub
insb
in
mov
cmp
xor
inc
jge
dec
fimull
or
lret
jmp
sbb
mov
push
cltd
pop
adc
enter
insb
aam
add
or
pushf
adc
mov
pusha
ljmp
fs
sub
xchg
ljmp
test
jo
mov
xchg
addr16
idivb
mov
dec
movsl
fcoml
mov
imul
mov
cld
xor
lret
popa
push
xchg
xor
aam
ds
lret
mov
daa
aas
movsb
shrb
cmpsb
js
push
testb
dec
push
inc
sti
je
ror
imul
aad
mov
jne
loope
mul
loop
sahf
cmc
pop
aaa
outsb
repnz
sbb
ss
add
push
xchg
fildll
adc
xor
dec
inc
mov
ret
mov
ret
xorl
gs
jge
mov
push
fildll
mov
fnstcw
out
sbb
pop
addb
cmp
mov
lahf
adc
xchg
push
insb
xchg
scas
cmp
fiaddl
xchg
mov
pop
insb
mov
int3
xchg
in
push
into
push
jmp
repz
xor
dec
je
ficoml
sbb
test
jnp
in
pop
test
les
je
ss
popa
cmp
popa
scas
inc
call
imul
inc
jb
test
or
adcb
cld
sti
rorl
adc
mov
add
mul
es
xor
bound
call
gs
daa
mov
ficompl
inc
lods
scas
add
pop
xor
orl
je
inc
inc
addr16
add
push
adcl
add
and
lods
mov
jae
pusha
xor
stc
fidivrl
mov
movsb
mov
sub
add
stos
test
and
negb
movsb
cmp
shrb
ds
ja
add
or
inc
loopnew
sti
or
pop
cmp
stc
nop
sahf
nop
arpl
aam
mov
pop
mov
lea
cmpsl
sbb
shll
xchg
dec
subb
not
cs
dec
mov
inc
jb
loopne
jae
adc
jg
ret
dec
insl
fsts
aam
lods
xor
out
orb
adc
mov
scas
sti
dec
and
in
mov
aam
add
cmp
jmp
xorb
xchg
push
dec
pop
repz
test
test
in
push
push
inc
cmp
xchg
insb
xor
adc
mov
outsl
addr16
pop
adc
sbb
loopne
and
or
sbb
mov
pop
and
ret
cmp
xchg
movsb
es
and
insl
add
mov
lret
dec
popf
and
add
lea
sub
dec
sub
fsubl
and
daa
pop
xchg
aam
adc
xor
bound
mov
push
aam
into
fcmovnbe
repz
ss
iret
jecxz
pop
mov
das
imul
mov
out
adc
mov
sbb
dec
sub
add
mov
mov
cmp
and
dec
fistps
ret
adc
and
pusha
and
rcl
jg
cld
aaa
addr16
dec
fnstcw
cld
js
imul
cmp
stos
xor
cmp
add
xchg
sahf
popa
xor
std
arpl
loope
or
lcall
adc
dec
mov
and
adc
out
or
push
jg
outsb
sub
rcll
lahf
push
sbb
add
add
dec
xchg
in
and
mov
cmpb
cli
mov
pop
adc
sub
int3
and
pop
addr16
sub
loopne
insb
pop
inc
or
jns
inc
adc
xor
aad
sar
mov
mov
dec
pusha
js
nopl
int3
cld
xchg
cmpb
cmp
dec
adc
push
dec
dec
test
movl
in
and
test
inc
dec
pop
mov
in
scas
xchg
fdivp
sub
imul
testl
mov
cmp
loopne
or
hlt
sbb
loope
jne
mov
popf
aas
or
inc
pop
mov
jbe
popf
dec
jae
fiadds
mov
mov
les
out
pop
cmp
push
shl
pop
and
xor
fnstcw
jg
fiaddl
insb
icebp
mov
jbe
xchg
pop
mov
lcall
cmp
jns
lret
in
sbb
and
cltd
call
xchg
fldcw
inc
das
and
int3
ja
mov
inc
in
outsl
sub
shr
dec
cmpsl
sub
dec
jbe
aaa
or
sti
into
shl
xor
or
sbb
mov
lret
in
push
dec
mov
into
dec
loop
adc
sub
sahf
leave
ficomps
lock
mov
repnz
sahf
je
imul
mov
jns
and
or
xchg
fwait
xchg
insb
out
sub
jmp
cli
out
jl
test
push
jo
mov
adc
sub
repnz
pop
aam
int3
xchg
or
loop
sub
pop
mov
xchg
and
pop
xchg
push
in
test
ret
movsb
cltd
mov
add
mov
xor
push
pop
xor
mov
ds
and
fistps
jle
inc
pop
add
outsl
sub
sbb
mov
sub
jle
popa
inc
dec
sti
xchg
jo
lods
and
push
fwait
lock
sub
xor
pop
push
jbe
or
loope
repnz
xorb
xor
or
insl
cmp
push
fldl
cmp
push
sti
inc
cld
iret
movsb
insb
sub
cmovp
adc
xchg
push
dec
frstor
movsb
scas
dec
pop
loopne
cld
push
jbe
adc
inc
dec
sahf
scas
lods
add
jbe
inc
pop
mov
cmp
push
dec
xlat
into
int
js
lds
dec
out
in
inc
adc
rcrb
scas
or
or
inc
sub
jge
sbbl
into
inc
int
xchg
cwtl
test
int
idivl
repz
jne
pop
or
jmp
cmpsb
sub
mov
mov
pop
sbbb
imul
int
in
mov
je
fs
adc
mov
fsub
shrb
xor
test
lods
sbbl
std
bound
hlt
arpl
mov
sub
mov
adc
adc
xchg
es
ja
aaa
mov
push
jno
adc
icebp
nop
data16
rcr
int
jge
xor
sub
stos
fsubl
sub
xchg
jmp
gs
or
sbb
test
imul
out
mull
pop
jmp
fists
cltd
xchg
popa
xchg
mov
mov
xor
sub
inc
in
out
je
data16
cmp
jnp
inc
icebp
shlb
jge
es
and
int
test
mov
push
fildl
mov
in
cmpsl
adc
fisubrl
in
push
mov
adc
jae
add
adc
iret
sbb
adc
hlt
mov
add
pop
or
jb
and
inc
sahf
cmp
inc
pusha
mov
mov
adc
mov
mov
out
or
outsb
in
insw
xchg
mov
aas
xchg
adc
idivb
cmp
ret
sbb
scas
and
xchg
jl
cli
fwait
scas
shrb
add
insb
inc
stos
std
insb
push
insb
mov
stos
and
sbb
xchg
mov
sbb
sub
enter
jp
mov
scas
sti
adc
sti
jge
inc
sub
stos
stc
loope
mov
mov
or
mov
mov
addb
xchg
and
test
mov
leave
dec
lret
scas
data16
arpl
loopne
icebp
lods
pop
aam
ds
sub
or
mov
nop
dec
out
sbb
mov
ss
daa
jmp
jae
inc
jnp
int
xchg
bound
ss
push
stos
shll
hlt
test
cmp
pop
xchg
add
sub
ret
pop
jno
push
in
in
adc
push
cmp
stos
lock
cli
movsl
ret
mov
sbbl
jmp
dec
repz
insl
lock
insl
inc
sub
testl
arpl
xchg
or
dec
pushf
jns
out
or
sub
aad
mov
inc
pop
movsl
hlt
xchg
ja
dec
sbb
cmp
cmpsb
imulb
dec
imul
aam
movsb
std
dec
jg
fmulp
xor
inc
inc
jle
dec
cmpsl
test
dec
in
and
or
addl
call
sbb
cmp
jb
fwait
bound
sahf
test
dec
aam
cmp
call
gs
add
mov
xor
xlat
adc
cli
xchg
out
out
ret
jmp
dec
cmp
insl
test
ret
std
lods
adc
mov
mov
sbb
out
test
mov
sbbb
aam
ja
rcl
aaa
pop
cld
and
push
pop
mov
mov
sub
ja
out
loop
cmp
shrb
call
or
push
ror
dec
movsb
mov
lods
leave
leave
push
enter
add
xchg
loopne
add
push
mov
mov
or
push
pop
push
xchg
or
xchg
in
icebp
ss
in
lahf
icebp
dec
sub
out
or
outsl
andl
ficomps
sub
out
jecxz
cwtl
ja
and
push
frstor
int
movb
ficoml
mov
inc
lret
xchg
cmp
xchg
mov
iret
sbb
fs
jg
xor
or
ficompl
pop
jg
push
fimull
jbe
xchg
shll
mov
sub
add
mov
jnp
xorb
fcomps
cmc
int
mov
dec
insb
dec
shrl
out
add
loope
push
shll
cmp
ds
cwtl
or
jns
mov
add
repnz
dec
sub
popf
pop
mov
adc
mov
push
cmp
mov
mov
push
mov
lahf
dec
and
or
movsb
sbb
aaa
push
push
out
inc
xchg
cs
jp
pop
add
cmp
and
push
movsl
xchg
or
mov
outsb
sbb
jmp
or
ss
pop
xchg
jmp
jge
mov
loop
adc
imul
std
jnp
xchg
ss
mov
adc
mov
sub
push
into
push
out
push
jmp
lahf
pop
fsubrl
lods
push
sub
and
jo
dec
jmp
push
aaa
sbb
mov
pop
in
xorl
xchg
jmp
subl
jg
popf
push
and
cmp
cmp
mov
and
dec
out
jp
iret
shl
scas
add
lea
movsb
or
test
cmp
das
cmpsb
fsubl
cmpsl
call
scas
js
repnz
mov
xchg
shr
movsl
adc
xchg
ret
mov
inc
icebp
in
rclb
shl
fsubp
lods
rol
cmpsb
xchg
pop
fildl
mov
ret
pop
adc
roll
mov
sub
or
lret
sub
into
and
std
inc
jnp
xchg
mov
and
and
inc
fimull
inc
fiadds
jns
mov
dec
ret
pop
sub
cmp
repz
push
or
out
sbb
adcl
mov
xchg
pop
loop
leave
mov
mov
clc
je
xchg
dec
dec
leave
imull
mov
push
xlat
jge
cmp
cs
out
cwtl
dec
lock
fsubrs
lret
or
and
insb
les
push
dec
sub
rclb
fdivrs
push
mov
xor
push
push
stos
mov
movsb
cmp
lods
dec
add
adc
outsl
mov
jno
add
xchg
scas
inc
sbb
push
test
aas
pushf
dec
or
sbb
loop
lcall
push
sti
push
int
stos
pop
adc
jg
sub
add
xchg
nop
xor
je
sub
and
aad
jb
test
int
mov
std
iret
cmp
outsb
sub
leave
loopne
sub
loopne
loop
cmc
inc
adc
push
out
xchg
aam
repz
cwtl
stc
or
cli
mov
arpl
clc
mov
or
test
mov
pop
inc
hlt
cs
sbb
cs
cwtl
sbb
dec
mov
rcrb
testl
movsb
pop
add
shll
xchg
stos
lret
sub
add
push
inc
inc
imul
lea
jb
imul
bnd
out
ret
mov
cmp
imull
in
outsb
ljmp
in
aaa
data16
xlat
repz
shlb
and
adc
pop
nop
gs
sbbl
in
aas
mov
xchg
cmp
lea
xor
adc
xchg
gs
inc
mov
and
dec
pop
jno
mulb
mov
cmp
sbb
sbb
pop
lock
lret
or
inc
or
dec
cmc
mov
xchg
pop
mov
xchg
sub
and
push
pop
lods
popa
vrsqrtps
pop
std
or
sbbb
add
lcall
xor
les
push
push
add
test
in
lds
xchg
push
inc
xchg
sub
arpl
cmp
nop
cmp
aam
jbe
cmp
es
push
or
sub
pop
adc
sbb
jno
roll
push
xchg
mov
in
cmp
fs
jle
xor
push
xchg
push
lret
sub
xchg
adc
arpl
in
or
jp
push
in
sbb
add
xchg
outsl
jne
fwait
lock
dec
and
adc
nop
dec
mov
mov
push
xor
dec
sub
fistpl
lahf
clc
dec
stc
cmp
out
mov
xor
fnstenv
ljmp
insl
add
fildll
jno
fwait
cmpsl
je
mov
rclb
imul
xchg
push
bound
sbb
xor
mov
and
inc
negb
pop
add
sti
pop
lods
aas
adc
and
fsubrs
inc
test
add
add
inc
xlat
sub
cs
bnd
pop
adc
call
out
or
loopne
pushf
sub
jno
es
add
ljmp
mov
mov
xchg
add
psubusw
dec
rorb
sub
push
movzbl
or
mov
mov
add
push
sub
pop
add
repz
push
addr16
mov
xchg
pop
roll
mov
and
sti
imul
scas
dec
xchg
das
and
push
xchg
sub
inc
outsl
xor
sbb
into
cmpsb
stos
ret
insb
xchg
lahf
lret
lcall
ss
jne
pushf
testb
rcll
test
sti
lods
jb
aad
mov
in
cmp
pop
int
filds
mov
btc
aad
xor
cmc
mov
mov
lahf
add
sub
pop
sub
or
push
rorl
in
sbb
xchg
or
nop
sub
or
cmp
mov
pop
inc
jnp
add
add
adc
out
testl
dec
and
mov
inc
out
call
inc
push
stc
pop
or
xchg
int3
sub
or
mov
inc
popa
std
aas
xor
and
jecxz
movsl
syscall
lea
push
push
jb
xor
mov
shll
fcoms
mov
push
pop
mov
ror
daa
fsubs
sahf
xchg
sbb
adcl
pushf
rcrb
orl
add
loop
push
xchg
dec
lods
mov
dec
repz
lret
jnp
sbb
test
lods
xchg
inc
cwtl
mov
dec
xchg
ret
test
fs
cltd
sub
mov
test
or
add
fldt
push
mov
je
repnz
repz
lcall
jmp
stc
test
inc
inc
std
into
inc
fs
jo
enter
xchg
mov
imul
push
lcall
sbb
aam
lret
stos
loope
xchg
or
test
ficomps
pop
xorl
or
add
pop
add
pop
sbb
pop
cmp
cmp
call
push
rclb
sub
xor
lods
jo
pop
or
push
xchg
or
aad
fwait
cwtl
xchg
fwait
xor
ret
push
outsl
arpl
iret
gs
mov
add
sbbb
loop
xor
aas
pushl
mov
mov
cmp
insl
or
xchg
pop
jns
mov
es
dec
fsubp
adc
movl
je
in
xchg
cltd
lahf
sbb
test
jne
jle
hlt
xchg
pop
dec
and
pop
mov
xchg
xchg
arpl
sub
jo
jmp
cmp
lock
testb
dec
fdivrl
cmpsl
and
jecxz
push
mov
repnz
cmpsl
jne
ja
pop
das
call
mov
out
xor
cmc
outsl
adc
or
out
inc
push
adc
addl
das
add
fnstcw
lea
in
jns
mov
das
cmc
inc
dec
cmpsb
lods
jmp
jg
nop
sbb
cmc
out
or
into
out
pop
int3
xchg
xor
jbe
popl
adc
je
pop
and
test
lcall
push
insb
repz
or
sti
cmp
ret
lds
or
jmp
test
cltd
lcall
or
adc
mov
aam
lods
into
fwait
idiv
lahf
jl
out
or
add
jbe
jl
leave
rclb
ds
xor
filds
mov
adc
call
and
jle
mov
dec
call
ret
xchg
cmp
leave
dec
out
cs
sub
sbb
mov
push
fimuls
add
lock
cmpsl
cmp
adc
dec
aas
das
add
nop
fsubrs
xor
dec
pop
sub
shlb
stos
sub
sbb
jo
lss
js
dec
loopne
cli
leave
js
jmp
lods
scas
imul
cwtl
adcb
outsb
and
pop
int
out
sub
stc
xor
mov
xchg
loopne
add
inc
xchg
ljmp
in
test
push
jg
aad
jmp
insl
lods
mov
cmp
dec
push
cli
lods
cmpsl
pop
and
add
jecxz
cmp
xchg
dec
sbb
filds
frstor
int
adc
into
mov
push
cmc
loop
in
push
jmp
mov
aas
stos
popf
ret
xchg
sbb
dec
ja
ret
std
mov
test
mov
and
mov
push
pop
movsl
pop
lahf
pop
jmp
jae
pop
mov
cli
imulb
xchg
inc
add
pop
or
push
push
sub
sbb
into
ficoms
mov
fs
dec
add
pop
inc
leave
dec
sub
mov
out
inc
in
xchg
shl
jp
xchg
xor
dec
shll
in
lea
push
incb
data16
mov
jge
gs
mov
lcall
mov
adc
cmp
add
pop
stos
xchg
mov
push
inc
dec
sbb
push
cmp
jge
xchg
sti
dec
jl
and
sahf
xchg
mov
cmp
les
in
add
aas
inc
sbbb
pop
gs
outsb
xchg
lock
and
xor
sbb
mov
xor
in
loopne
xor
out
sub
sub
in
popa
das
shl
fildl
pop
out
outsl
or
cmp
loope
push
ljmp
mov
xchg
sbb
jecxz
xor
sbb
lret
mov
sub
out
rorb
push
pop
fwait
lret
pop
inc
mov
add
or
subl
lds
jge
movsb
and
std
or
out
mov
movsb
fildl
sbb
dec
add
dec
adc
les
jmp
sbb
xor
and
mov
decl
out
das
sub
dec
ljmp
sbb
add
ss
test
repz
fcomps
in
dec
adc
fmull
inc
xchg
adc
mov
cmp
out
xchg
das
cmc
enter
push
sahf
fcomps
hlt
push
imul
cwtl
sub
xchg
mov
or
shl
mov
adc
xchg
sbb
mov
es
mov
loopne
fwait
mov
cmpsl
gs
push
mov
sbb
jb
es
and
inc
in
add
mov
js
inc
test
imul
repnz
pop
xchg
pop
test
mov
loopne
movsl
hlt
les
pop
sbb
adc
fs
icebp
push
xchg
lahf
clc
add
stos
aad
push
mov
repz
push
cmp
cmp
rorb
xchg
dec
outsl
test
filds
dec
jmp
js
or
out
sub
lahf
test
imul
mov
fstl
mov
lcall
out
lods
int
xor
mov
jne
dec
out
in
in
outsb
jg
stos
mov
stc
mov
mov
pop
int3
mov
adc
rolb
mov
cld
roll
fs
pop
aaa
js
inc
push
mov
mov
push
fs
pushf
and
scas
mov
int3
push
xchg
insb
cmp
and
subl
fildl
jmp
gs
mov
dec
cmp
faddl
adc
dec
xchg
mov
dec
and
daa
sarl
sub
add
dec
popa
loopne
aam
adc
and
xor
push
cmp
sbb
pop
push
add
lcall
mov
mov
movsb
pop
inc
inc
lds
ret
or
cltd
or
mov
aaa
imul
push
push
and
mov
sti
cltd
ljmp
ret
sub
pop
inc
xchg
test
arpl
icebp
jno
stos
xchg
repnz
inc
xor
pop
xchg
push
sbb
push
push
sbb
cs
push
dec
aas
pop
bound
sub
sbb
mov
mov
je
jle
out
mov
add
sbb
dec
push
call
jne
push
in
fildl
je
sbb
pop
pop
inc
stos
test
imul
daa
xchg
sbb
mov
loope
fildll
adc
hlt
lea
dec
adc
mov
sti
pop
ret
imulb
cmp
out
push
or
jecxz
jl
or
sbb
in
add
jae
push
xchg
test
mov
les
cmpsl
push
sbb
es
iret
pop
add
sbb
jp
and
fs
jns
xorl
outsb
dec
shrb
inc
xor
in
mov
fadds
push
ret
insb
loopne
data16
pushf
pop
loop
mov
sbb
or
xchg
mov
and
jns
or
mov
push
push
test
in
sbb
sub
mov
xor
and
js
xor
jnp
mov
andl
fisubrs
mov
add
stos
leave
pop
mov
xor
lcall
fiaddl
in
xchg
jne
adc
pop
inc
clc
xor
jge
pop
lret
fistpl
rcrb
pop
pop
test
js
mov
cmc
cmp
push
xor
arpl
cmpsl
sti
mov
repz
sahf
add
push
mov
ja
xchg
push
dec
and
mov
add
xchg
nop
test
subb
cmp
rcr
lods
test
mov
jae
xor
cli
aad
ds
loopne
pushf
lahf
jno
shlb
dec
mov
out
xchg
lret
aam
lds
xor
mov
adc
inc
lret
out
sub
hlt
stos
rorb
mov
cmpsl
inc
lods
push
xadd
js
jmp
icebp
das
outsb
in
sbb
pushf
pushf
loope
cli
push
lcall
dec
xor
fsubrs
pop
mov
mov
test
sbb
adc
fcmovne
and
movsl
adc
out
leave
repz
data16
mov
jle
subb
ja
mov
sub
test
mov
sub
jl
inc
xor
cmpsb
fstpt
add
in
out
movsl
mov
test
pop
test
outsb
orl
cmpsb
test
repz
add
lret
xchg
aad
movsl
add
xchg
pop
and
lds
xchg
int3
mov
lahf
xchg
mov
sbbb
mov
ja
adc
neg
adc
pop
imulb
rcr
adc
and
lahf
inc
dec
cmc
imul
icebp
cs
in
add
push
mov
scas
lods
arpl
dec
aad
sbb
push
imul
cmp
pop
inc
lret
and
stos
test
mov
xchg
nop
sahf
mov
scas
xchg
pop
dec
lahf
xor
and
mov
push
lods
movsb
inc
lods
divb
pop
arpl
loop
jp
hlt
push
out
lds
fs
popf
rcll
ficomps
lock
mov
or
shr
pop
mov
jmp
lret
mov
mov
mov
mov
pop
test
pop
mov
movsb
jbe
inc
inc
inc
bound
pop
xor
add
mov
mov
sbb
sbb
ja
add
popl
rorb
popa
add
aas
std
mov
jns
mov
sbb
add
nop
jecxz
push
pop
mov
dec
dec
jg,pn
sbb
ds
pusha
movsb
ficompl
xor
rcrl
cmp
iret
push
fistpll
mov
xor
enter
sub
or
frstor
adc
fs
push
sahf
hlt
mov
or
out
inc
imul
add
push
mov
push
pop
hlt
in
lret
movzbl
inc
js
add
inc
rol
xor
sbbl
int3
je
and
mov
das
mov
xchg
push
shl
mov
repnz
and
add
pushf
inc
jmp
jmp
sub
push
cmp
pop
outsl
and
dec
cmc
stos
out
iret
ret
scas
aam
mov
arpl
daa
sub
cmp
flds
inc
ja
rcll
push
imul
cmp
lds
sub
lods
scas
xchg
xor
insl
pusha
or
jo
bound
or
fidivs
imul
sub
mov
fistps
sub
mov
sub
repz
pop
jbe
push
lods
sbb
pop
iret
xor
test
and
dec
in
jo
shrb
ffree
mov
loope
inc
imul
mov
pop
sbbb
push
sbb
inc
dec
into
push
movsl
fcmovnb
jle
fucom
fldln2
ljmp
test
jno
pop
and
rolb
push
inc
fnstenv
lahf
lret
pop
cmp
mov
ljmp
ds
popf
test
adc
popf
ret
inc
mov
shll
xor
adc
mov
test
loop
or
shrl
jno
sub
rorb
leave
pop
insb
sbb
push
lahf
imul
mov
orl
pop
mov
insb
adc
sbb
cmpsb
mov
cmp
pop
push
push
rcrl
or
mov
popl
ss
adc
fists
inc
pushf
or
bnd
in
mov
ror
ss
outsb
es
xchg
add
lea
mov
lds
mov
movsb
clc
lret
jnp
insb
rcrb
cs
enter
filds
shll
das
mov
repz
fwait
sbb
stos
pop
jo
notl
shll
jge
popf
cwtl
jg
pop
mov
inc
or
mov
fistpll
xchg
cwtl
lods
or
sub
and
sti
cmp
push
ret
mov
mov
push
sti
xor
nopl
and
mov
xlat
cmp
or
mov
adc
dec
push
jne
cld
jmp
cs
imul
jns
xorl
sbb
xchg
push
pusha
push
pop
cmp
mov
dec
or
jg
add
int3
push
iret
jecxz
xchg
sub
cmp
ja
push
pop
mov
cmp
sub
pop
add
mov
mov
fisttps
push
or
add
cmpsl
adc
pushf
add
mov
call
adcb
push
lahf
adc
sub
test
fstpt
ret
jp
shlb
dec
insb
sbb
outsl
mov
xor
inc
cli
dec
pop
lret
out
lcall
test
push
fistpl
insl
pop
pop
sarb
adc
pop
bound
mov
mov
jo
rcrb
jo
popa
dec
mov
pop
push
xchg
loop
pop
lret
cmova
in
xor
jg
mov
mov
mulb
inc
outsb
inc
xor
js
cmp
iret
jnp
mov
push
mov
jle
scas
adc
roll
insb
lret
xchg
div
and
andb
mov
adc
orl
add
mov
sbb
in
pop
pop
jle
test
in
adc
xchg
mov
test
and
data16
pop
jno
js
xor
cmp
mov
cmp
mov
xor
into
add
pop
jae
adc
push
inc
pop
into
pushf
pop
das
sub
fwait
xchg
push
jo
dec
mov
aad
xchg
mov
ficompl
push
xor
popa
xchg
pop
mov
adc
lock
bound
push
inc
popf
add
push
inc
sbb
mov
jno,pt
cmc
aam
mov
addr16
adc
sub
jno
rclb
arpl
cmp
orl
mov
jge
jmp
xor
cs
pop
pop
or
inc
cli
inc
popf
pop
repz
sub
adc
repnz
fcompl
xchg
testl
mov
or
push
lock
fists
imul
pop
mov
lods
out
lahf
aas
clc
mov
xchg
adc
push
test
dec
cmp
jecxz
sbb
add
lret
lret
mov
adc
je
insb
out
int
mov
or
mov
mov
sti
mov
sbb
fldl
lahf
scas
cmc
jl
push
fwait
push
mov
imul
dec
pop
xchg
sub
jmp
or
fs
hlt
stos
test
es
fnstcw
add
insb
mov
xchg
clc
dec
sbb
loope
sbb
cmpsl
lea
jae
cmpsl
push
push
aam
pop
push
test
pop
mov
or
pushf
cmpsb
xor
rol
imull
or
xchg
shrl
pushl
hlt
repnz
das
je
sbb
jp
xor
jns
xchg
test
iret
and
in
or
mov
stos
daa
iret
pop
fmull
jbe
inc
sbb
int
fisttpl
out
jns
scas
cmp
out
mov
movb
cmp
add
adc
and
jnp
xchg
mov
or
dec
in
gs
insb
push
fistpl
mov
sub
dec
cmp
inc
std
jp
daa
sub
xor
mov
push
in
leave
std
inc
daa
or
inc
mov
and
pop
ret
das
pop
les
sbb
push
mov
and
push
mov
mov
lods
inc
mov
dec
js
test
or
mov
pop
sbb
mov
mov
jp
inc
fidivrl
sub
push
repz
shll
rclb
ret
movsl
or
jb
clc
push
pop
xchg
adc
aas
enter
idivb
adc
dec
adc
lods
leave
in
cmp
mov
cmp
xchg
add
sub
setae
lock
mov
xchg
sub
mov
test
outsb
fwait
aas
add
fsubrl
fsubrl
je
rcrb
inc
push
jecxz
mov
clc
js
inc
fsubrp
mov
in
xchg
pusha
push
aaa
and
dec
lods
js
adc
nop
sub
adc
adc
stos
out
jge
push
cld
push
sbb
lret
mov
lret
inc
xchg
fwait
test
fdivs
movsl
push
out
inc
xor
mov
jns
scas
into
stc
das
inc
lea
repz
loop
xchg
pusha
jl
nop
in
fisubrs
mov
ss
je
jae
push
iret
aad
andl
xchg
inc
mov
mov
out
cld
sbb
ljmp
je
sub
addr16
dec
out
lods
jp
std
xchg
jnp
mov
push
inc
mov
xor
fistpl
enter
add
das
call
sub
cmpsb
add
xchg
scas
mov
jns
mov
cmp
jo
add
xor
shlb
cmp
or
add
fsubl
das
bound
jns
xchg
mov
adc
loop
xor
fdecstp
jne
sub
repnz
pusha
lret
lea
fiaddl
add
dec
dec
jb
adc
stos
push
pop
dec
jno
hlt
shrl
sbb
popf
mov
test
mov
fwait
xchg
xchg
pushf
xchg
stos
mov
loope
out
mov
pop
movb
fimull
jo
outsl
dec
fildl
sub
mov
loope
jo
adcb
mov
or
dec
add
mov
pop
nop
dec
gs
mov
mov
and
xchg
cmpsl
sbb
mov
mov
cmpsl
inc
cltd
mov
in
or
dec
or
cmpb
shrb
and
fninit
cmp
cmp
loop
nop
in
in
mov
mov
mov
movsb
jecxz
mov
push
pop
xchg
cmp
and
or
outsb
lcall
lahf
pop
in
adc
jo
hlt
add
arpl
ret
or
mov
cmc
jno
inc
out
decb
scas
sti
and
xchg
mov
sbb
fstpl
jns
in
das
je
xchg
inc
add
mov
sbb
mov
jecxz
loop
and
lret
lret
imul
lret
mov
popf
cltd
xor
dec
cmove
js
sti
test
test
adc
fimuls
mov
mov
movl
into
lret
hlt
jnp
xorl
sbb
popa
cmp
mov
mov
in
loope
mov
enter
xchg
mov
pop
jbe
sbb
movsl
inc
push
jbe
mov
movsl
or
add
mov
clc
dec
movsb
mov
mov
push
sahf
adc
lea
scas
in
or
loope
leave
push
mov
mov
jp
mov
push
dec
adc
and
add
call
in
and
test
les
push
adc
lcall
adc
mov
enter
xchg
xchg
inc
mov
mov
or
fldenv
push
sub
hlt
in
lods
cmp
xor
sub
std
cmp
push
testl
call
loope
xlat
xchg
jbe
imul
push
adc
or
inc
xor
xor
mov
ds
add
gs
cltd
icebp
and
test
ret
and
mov
pop
in
popf
repnz
adcb
sahf
pop
fstl
mov
iret
je
nop
icebp
sbb
ret
mov
adc
aam
pop
pop
std
mov
sbb
lahf
aad
dec
inc
add
jecxz
aaa
push
shrb
push
and
outsl
push
mov
aas
sbb
imul
sub
js
jb
std
jg
fisttpl
and
add
aaa
jge
loop
add
stos
and
imul
fcompl
out
mov
push
and
add
mov
sub
insb
out
inc
testl
pop
adc
pushaw
cld
pop
cld
loope
or
mov
ljmp
mov
push
dec
jmp
jo
nop
dec
jp
aam
or
lods
inc
and
mov
add
int3
cmpsl
push
in
cld
mov
std
jae
ja
push
outsl
and
inc
fucomip
and
pop
mov
mov
hlt
pop
mov
push
xchg
xor
cmpl
jg
insl
or
ret
dec
cmp
stos
sub
or
imul
jle
sbb
hlt
cmpsb
inc
lret
call
jecxz
in
test
mov
sahf
add
pusha
pusha
repnz
jo
fdivr
mov
sti
pop
mov
sarl
ljmp
out
xorb
pop
sbb
xchg
fldenv
test
ret
int
les
leave
inc
hlt
cmp
adc
fdiv
push
jns
jbe
and
lcall
push
mov
dec
mov
mov
push
jl
loop
add
adc
mov
popf
mov
ds
push
pop
add
sub
addr16
fdivl
mov
adc
cli
pop
dec
push
mov
and
jge
mov
mov
mov
jno
and
mov
mov
sahf
gs
bswap
xchg
loopne
mov
out
enter
test
jne
dec
ljmp
ds
xorb
or
int3
test
aaa
out
mov
outsl
popa
scas
std
icebp
pop
mov
ret
mov
lods
and
push
bound
imul
sub
dec
mov
jo
out
stc
imul
cmp
lahf
movsl
daa
adc
pusha
popf
mov
fldenv
sbb
sbb
inc
inc
xchg
fcmovnbe
inc
mov
adc
sahf
out
aaa
inc
pop
stos
scas
sahf
out
jle
xchg
mov
sar
pop
aaa
cld
rcll
cmpsb
cmp
push
mov
xor
or
js
xchg
nop
dec
xchg
mov
mov
mov
jp
push
jb
int3
fs
push
cld
cmp
pop
dec
shl
or
push
int
testl
sti
mov
mov
xor
add
mov
jno
dec
adc
jge
add
add
mov
mov
mov
push
cmp
inc
rorb
xor
mov
dec
cmp
sahf
in
push
jle
adc
add
je
bound
rcll
sti
push
inc
fldz
jecxz
adc
mov
adc
cld
mov
mov
jb
mov
mov
xor
dec
les
adcb
mov
stc
leave
sub
fsubs
popw
lods
add
out
inc
pop
and
xor
dec
in
push
pop
test
cld
clc
lds
fwait
mov
stos
mov
ficomps
lds
shl
dec
jne
sub
adc
rol
push
psubq
mov
xchg
push
push
xchg
jp
inc
adc
popf
cmc
xrelease
dec
loop
aam
notb
adc
movb
adc
dec
ja
imul
in
push
mov
xchg
sub
in
add
cmp
lahf
rcrl
sub
or
mov
enter
xchg
xchg
int3
imul
mov
dec
push
dec
mov
pop
xchg
mov
cmp
pop
js
je
outsb
sarb
push
sub
out
sbb
push
out
push
mov
and
in
xorb
jae
int3
js
mov
xor
jo
push
adc
inc
jne
stc
xor
jns
test
push
enter
lcall
lods
addr16
sbb
jb,pt
push
add
roll
icebp
idivl
inc
pop
bound
adc
jae
inc
sub
pop
cwtl
les
pop
push
pop
xchg
cmp
xor
ret
xlat
add
es
jle
int3
test
das
cmp
sub
mov
mov
add
sub
call
jno
pop
or
xor
addr16
das
pop
cld
outsb
sub
push
mov
xor
es
xor
das
sub
popf
push
clc
repz
mov
test
adc
aaa
js
dec
mov
hlt
shl
imul
xchg
jg
stc
jecxz
iret
sar
roll
lcall
das
fmull
je
or
cltd
mov
inc
fwait
sbb
mov
bnd
adc
std
movl
jg
mov
fsqrt
xchg
push
test
leave
dec
ljmp
pop
insl
pop
xabort
out
inc
scas
pop
mov
sub
out
scas
and
push
jae
out
and
jle
ss
cli
outsl
test
pop
ds
imul
mov
movsb
cmp
ja
sbb
test
int
push
sbb
outsb
dec
das
in
or
sbb
movsb
xor
jno
ret
cmpsb
fwait
mov
enter
xchg
loop
je
pushf
in
lret
mov
and
or
fldcw
fldenv
jl
mov
jbe
rcll
subb
xchg
cli
pop
lods
dec
sbb
fdivrs
mov
lods
cmp
daa
aam
cs
dec
mov
or
add
lahf
pop
jl
cmp
rcl
popa
pop
daa
decb
lea
mov
je
push
aaa
mov
push
ljmp
jb
test
mov
not
loopne
bound
jmp
test
dec
pop
lcall
pop
jecxz
sbb
jmp
int3
movsb
rcll
mov
xor
cmp
push
test
or
xor
popa
mov
and
test
push
push
orb
movsb
nop
imul
and
into
jge
hlt
push
push
jb
mov
icebp
lret
fisubrs
daa
in
icebp
sti
dec
outsl
out
mov
cwtl
cmp
pop
mov
scas
js
adc
scas
cmc
push
mov
imul
cmp
nop
je
and
add
out
sbb
adc
jecxz
pop
xor
xor
push
dec
arpl
push
fistpll
adc
and
mov
mov
lods
nop
push
ja
cmp
cli
and
orb
xchg
mov
ljmp
dec
cmp
pop
cmc
test
popf
leave
mov
loope
dec
sub
fisttpll
inc
pop
cltd
push
mov
lret
cli
aaa
or
adc
sbbb
movsb
sub
fcoml
sbb
scas
std
out
mov
xor
jl
lds
cli
jne
sub
cli
insb
out
adc
rolb
pop
aas
stos
cld
movsb
jae
add
test
fs
aaa
imul
jo
jl
ret
xor
mov
adc
psubb
cmpsb
inc
test
repz
mov
jle
push
imull
jbe
xor
and
or
nop
scas
fadds
insl
jns
aad
insl
addb
aas
test
pop
push
jecxz
stos
inc
inc
or
mov
mov
ja
xchg
jg
xchg
dec
lret
bound
aaa
in
flds
mov
nop
jg
test
inc
lret
sub
xchg
xchg
lods
jbe
fwait
dec
loopne
mov
pop
mov
mov
out
add
adc
fmull
rcrl
cmp
inc
add
push
icebp
add
mov
mov
xchg
fsubl
bound
and
sbb
jne
jae
pop
js
push
js
lds
jle
and
adcl
les
outsb
arpl
push
leave
cltd
xchg
or
push
inc
daa
mov
jns
pop
rcl
and
and
ds
mov
in
rorb
ss
stc
sbb
in
inc
scas
test
mov
imul
jnp
pop
dec
icebp
out
push
dec
mov
jmp
jnp
in
inc
cltd
test
scas
push
lahf
lcall
sarb
insl
bound
lahf
jo
shll
adc
lahf
and
adc
inc
movaps
xchg
mov
cmpsl
mov
dec
sub
lret
adc
mov
out
inc
andb
sub
mov
aam
inc
push
xor
les
cmc
xchg
or
cmc
loopne
jns
mov
lret
out
andb
mov
fiadds
aam
mov
and
in
mov
push
push
aaa
pop
sub
test
adc
add
mov
sub
cmp
fcmove
iret
test
cmp
das
xor
shrl
push
test
pop
fnstenv
sbb
rcrb
inc
jmp
jg
into
pushf
mov
xor
cmpsl
out
adc
mov
inc
mov
jmp
mov
and
in
loope
jp
mov
loope
insl
sbbl
leave
test
jns
mov
dec
jns
jns
mov
push
mov
pop
push
rcrl
mov
inc
cli
pop
add
jle
sub
idivl
inc
push
aas
mov
mov
jne
cmp
outsb
pop
push
xor
sub
clc
adcb
fdivl
into
fistpl
fsubrl
jb
data16
sub
outsl
and
cld
push
jb
stos
mov
jns
out
mov
mov
mov
pop
mov
mov
in
dec
jno
testb
in
cld
inc
jo
adc
pushl
or
push
int3
test
jb
cmc
pop
xchg
sbb
lcall
sub
test
xchg
mov
dec
xor
iret
sbb
sbb
adc
ds
mov
or
inc
or
adc
mov
fdivrs
inc
inc
dec
outsb
pop
mov
fdivr
xchg
xor
sub
or
lods
gs
aam
mov
mov
mov
push
adc
jl
sbb
pushf
xchg
cmc
es
inc
int
jp
cltd
add
cld
int
rol
fbld
mov
fistpll
fwait
lock
cwtl
nop
call
or
in
fsubr
lock
cmp
xchg
mov
pusha
sarl
not
xorb
popf
jge
push
jmp
rcll
aas
test
cmc
cld
mov
jge
or
out
popa
push
sarb
loope
ror
fists
jle
in
adc
jmp
jno
push
hlt
bound
lahf
jle
mov
sub
out
shll
mov
xorb
mov
adc
stos
outsl
jnp
out
sub
shll
cmp
int3
or
mov
and
aam
ja
cmpsb
jnp
in
roll
xlat
in
pop
clc
lea
mov
int
ds
jmp
lds
into
sub
mov
outsb
adc
add
mov
std
xor
movsb
mov
inc
lock
or
xor
fistl
add
jae
leave
jae
cmp
out
sbb
dec
in
jns
push
xchg
lret
pop
mov
dec
insb
or
iret
call
mov
adc
cmpsb
xor
sbb
cli
clc
popf
add
add
dec
inc
outsb
xlat
or
dec
es
lret
insb
in
mov
mov
add
cmp
pusha
xchg
sbb
shrb
stos
js
dec
adc
xchg
in
cs
outsb
or
mov
mov
xchg
pop
pop
xchg
mov
mov
or
rorb
add
daa
repz
jno
imul
iret
and
push
jb
repz
cmp
fsubr
push
pushf
fs
dec
cmpsl
fdivs
cmpl
insb
lret
dec
outsb
xchg
inc
cmp
lret
mov
mov
cltd
es
add
cmpsl
or
xchg
addr16
int
sub
popl
mov
call
sub
or
daa
mov
insb
das
rorl
mov
and
jo
outsb
aam
sub
fwait
push
jmp
ja
push
pushf
popa
mov
aam
mov
iret
test
test
add
mull
add
loopne
xchg
sub
or
popa
nopl
mov
pop
sub
lods
das
xchg
mov
mov
dec
pop
mov
mov
stos
add
xchg
mov
pop
inc
adc
push
fs
loopne
or
cmp
and
xchg
push
hlt
hlt
in
push
mov
lahf
and
lret
stos
push
add
pushf
adcb
dec
pop
pop
sub
mov
dec
pop
std
cld
in
xorb
mov
test
inc
and
hlt
popf
dec
sub
cmp
or
int
inc
xor
inc
hlt
inc
leave
cld
push
push
xchg
popf
int
dec
pop
pop
pop
mov
add
stos
cli
pop
mov
or
cli
or
cld
inc
mov
jp
enter
sbb
adc
push
mov
sbb
pop
mov
mov
addr16
xchg
lcall
fsubrp
lods
sar
daa
push
loope
sub
cmpb
addr16
xchg
pop
outsl
and
and
pushw
and
mov
jle
xchg
fstl
adc
xor
inc
fstl
cmc
lret
cmc
push
xor
xor
adc
add
sub
jl
dec
ret
and
adc
pop
mov
je
ret
mov
and
mov
repz
mov
nop
inc
mov
cmp
jmp
or
nop
sub
mov
out
xor
xor
sub
mov
pop
push
repnz
fstpt
xchg
cli
jne
scas
jno
popf
and
xchg
data16
dec
or
mov
xchg
sub
xchg
jno
loop
inc
stos
out
or
inc
pop
pop
rcrl
xchg
mov
cmp
mov
dec
out
inc
and
xor
dec
xchg
ret
call
push
and
push
aam
cltd
dec
pop
or
popa
push
sbb
push
mov
pop
iret
int3
cmp
adc
dec
and
mov
aad
adcl
mov
outsl
dec
or
dec
mov
test
popf
lret
outsl
and
stc
out
mov
sbb
mov
jb
pop
mull
jbe
insb
movsl
dec
sarl
cwtl
sub
cmp
and
js
rorb
xor
dec
rolb
mov
xchg
jne
leave
xchg
pop
mov
xchg
test
mov
arpl
lock
jns
or
lahf
xorl
lret
xchg
out
add
mov
push
push
mov
and
shrb
rcrb
pop
jge
sbb
lret
xchg
xchg
loopne
ds
mov
mov
popf
xchg
or
fldt
mov
imul
mov
mov
decl
shl
add
and
jno
ret
xchg
mov
jmp
mov
shlb
cmp
push
add
jo
dec
loop
fcoml
clc
sti
push
jmp
dec
test
shlb
jo
push
jnp
mov
xchg
inc
lret
and
ljmp
int3
mov
out
and
push
dec
lret
jbe
das
push
xchg
in
pop
mov
stc
pop
mull
push
xor
scas
pop
push
jno
leave
sub
shlb
scas
int3
shrl
inc
cwtl
lds
clc
fs
das
push
cmp
test
push
push
mov
and
mull
cwtl
mov
pop
xor
pop
mov
in
movsb
or
jbe
inc
adc
icebp
cmpsb
push
or
ljmp
aam
mov
mov
xchg
adc
inc
mov
fisttpl
scas
es
cs
adc
mov
cmp
and
insl
call
lods
stc
xchg
movsl
lret
insb
in
add
xchg
mov
ror
insl
rclb
lret
sbb
cwtl
mov
mov
pop
hlt
and
cmpsl
test
adc
and
lret
cmpl
sarb
shll
imul
mov
mov
cmpsl
lock
jmp
andl
push
ret
cmp
mov
lcall
push
sbb
dec
bound
out
add
jne
xor
mov
lret
stos
mov
fdivs
testb
cmp
stc
cmp
xor
shl
or
adc
inc
pop
cwtl
adc
rcrb
imul
mov
nop
pop
push
and
adc
push
xchg
xchg
fwait
cmp
or
pop
inc
shrd
push
sub
pop
xchg
cmp
and
jge
mov
cmp
and
push
mov
hlt
dec
sbb
inc
ret
dec
jnp
fcoml
ljmp
cltd
xchg
or
sbb
ret
dec
inc
mov
cltd
jns
mov
add
add
push
push
cltd
push
andl
jg
lahf
cwtl
loopne
push
adc
cltd
loop
sub
cmp
push
cs
insl
xor
push
and
stc
cmp
or
pop
adc
sub
ds
cmp
adc
inc
je
or
lret
push
pop
das
push
sarb
mov
mov
outsb
cs
icebp
mov
adc
fnstcw
pusha
jp
cwtl
je
sub
xchg
mov
dec
mov
xchg
cmc
out
rcr
aaa
xor
xchg
cmp
das
shl
mov
test
rcrl
sub
jb
in
lret
xor
xchg
pop
xchg
push
imul
push
ret
fnsave
mov
or
mov
imul
fstp
lret
lea
mov
inc
aaa
nop
fwait
mul
sbb
test
shl
mov
or
sub
jp
movsl
js
in
adc
inc
outsb
and
test
xor
insb
mull
xchg
mov
adc
pop
repnz
push
pop
loope
ret
lds
cmp
add
iret
popf
cld
mov
add
inc
dec
inc
divb
push
sub
out
fwait
inc
vxorps
aad
popf
dec
dec
fcoml
mov
jae
dec
addl
shlb
jg
push
adc
rcrl
cmpsl
lcall
jmp
mov
call
jg
xor
xchg
fsubl
cld
test
shll
jae
shrb
clc
mov
js
stos
test
add
push
jbe
fs
xchg
shlb
movsl
inc
loopne
cmp
repz
sarl
jnp
jno
mov
push
outsb
jge
es
shll
test
ret
fiaddl
fptan
dec
ds
stc
jmp
push
push
jo
push
test
stos
jge
movsb
mov
popa
enter
ljmp
cmpsb
ljmp
xchg
pusha
push
addr16
cmp
aam
or
push
xchg
fdivs
cld
int3
push
dec
jp
repnz
pop
loop
sbbl
inc
xor
out
jbe
xchg
xor
outsb
add
push
xor
inc
mov
aad
inc
cmp
addr16
push
pushf
push
inc
add
cmp
movsb
test
nop
outsb
stos
mov
sbb
push
into
fmuls
pop
dec
sbbl
fidivs
movsb
push
inc
sub
in
test
call
stc
cmp
xchg
loope
cmp
ret
insl
aam
dec
gs
push
xchg
adc
adc
lds
inc
push
mov
loopne
aas
dec
hlt
ret
ret
xor
outsb
rcll
push
js
fcomps
addl
in
sbb
xchg
lea
fistpl
push
jbe
cmp
jle
jl
lods
fdivs
dec
outsb
add
cmp
jb
stos
and
dec
cwtl
movsb
ss
and
adc
push
iret
pop
sub
jae
out
ljmp
jne
sbb
shrb
cmp
inc
sbb
xchg
pop
stc
inc
fisubrl
in
add
out
sub
pop
jnp
and
add
hlt
nop
xchg
or
arpl
and
popa
stc
in
ds
shlb
test
mov
ds
sbb
shr
arpl
leave
and
push
adc
xchg
imulb
xchg
pop
sub
push
mov
gs
or
inc
movsl
or
mov
cmp
sub
cmp
ja
jb
js
adc
jmp
sbb
mov
cli
xchg
scas
stos
repnz
sahf
outsb
ror
leave
xchg
in
pop
dec
or
testb
fisubrl
aaa
adc
pop
stos
jo
jo
xor
loop
inc
fwait
add
iret
jmp
fnstcw
mov
pop
sti
and
cmc
push
sahf
push
push
test
xchg
addr16
dec
adc
pop
jecxz
pop
fldt
test
les
mov
test
sub
jl
mov
loop
rol
sub
add
inc
mov
add
sub
or
sub
jbe
cli
fisttpl
mov
or
bound
xor
push
pop
and
cwtl
fisttpl
loope
shrl
cltd
mov
adc
adc
mov
aas
sbb
xchg
rsm
pop
inc
or
sub
add
pop
and
pop
xchg
push
aaa
lea
fs
stos
xchg
push
fisttpl
scas
jge
test
cwtl
and
nop
int3
sub
mov
or
loopne
mov
test
daa
das
sbb
incb
cmc
test
loop
jge
dec
inc
les
xchg
and
add
mov
daa
push
mov
cli
cmc
sbb
mov
test
mov
rcll
jo
jno
shr
ret
jmp
cs
or
movsb
sub
in
in
mulb
jo
out
jg
cmp
sub
hlt
loope
outsl
scas
test
call
xchg
shrb
jge
push
insb
stos
cmp
cmp
clc
dec
push
push
ljmp
push
mov
push
sbb
or
sub
inc
push
test
jmp
cli
sbb
arpl
xor
es
push
adc
pop
push
dec
mov
jb
rol
sub
sbb
loope
cmp
mov
push
mov
mov
hlt
pop
in
mov
mov
fwait
push
pop
clc
insb
call
jnp
or
cmc
jno
je
stos
push
jg
ret
sub
inc
mov
sbb
xchg
scas
loopne
xlat
fnstsw
add
fsubr
stc
sbb
jnp
je
bnd
inc
pop
rcrl
daa
adc
inc
aas
xchg
pop
mov
ja
lods
mov
fs
sub
sbb
adc
mov
mov
out
xchg
inc
sbb
fildl
std
pop
mov
pop
jl
in
outsb
cmpsb
add
dec
jl
and
imul
addr16
jle
shrl
cmp
shrb
mov
add
inc
sub
movsl
lods
inc
pop
jecxz
push
pop
js
dec
fldln2
or
ja
inc
inc
mov
xchg
in
sahf
popa
pop
inc
stc
sbb
rcr
out
cli
repnz
loopne
xchg
divps
enter
loope
gs
dec
mov
fnstsw
cmc
sti
idivb
cmp
sbb
scas
mov
cmp
arpl
inc
mov
push
enter
mov
push
loope
dec
xor
int3
adc
fistpll
pop
push
and
jae
scas
sub
and
mov
mov
or
shl
loop
pop
pop
stos
dec
mov
imul
push
inc
mov
jle
setge
into
testl
popf
ja
xor
jmp
pop
xchg
inc
pop
insb
loopne
xor
aaa
inc
cmpsb
pop
into
cmp
dec
jo
pop
dec
les
adc
shr
loope
fnstcw
pop
inc
sbb
pop
test
fnstsw
dec
push
push
and
ljmp
adc
pop
les
inc
nop
shl
mov
imul
jl
aaa
fisubrs
lds
imul
sub
adc
loopne
sbb
daa
fcmovbe
sbb
scas
andb
pop
sub
and
ljmp
es
xlat
xchg
gs
jns
xor
ja
mov
iret
in
cmp
and
push
inc
int
mov
push
mov
xchg
popf
mov
sub
cltd
cwtl
push
inc
inc
or
jno
mov
lret
cli
and
and
aam
inc
stc
pusha
add
outsb
and
leave
cli
mov
popl
xchg
xor
mov
cs
shrb
ljmp
push
jle
movsb
adcb
add
sub
adcl
and
mov
fdivs
iret
or
dec
icebp
leave
jecxz
loopne
sub
mov
fdivs
cmp
cmp
fnstenv
ljmp
push
call
or
sbb
add
mov
rcrb
aad
int3
add
jl
adc
xor
push
jp
pop
adc
daa
dec
out
loopne
adc
negl
insb
bound
cmp
jo
sbb
jp
addr16
andl
outsl
sub
cmp
rcr
and
xor
xor
push
das
mov
sbbb
loop
cmp
cmp
jmpw
mov
sub
jmp
hlt
into
sub
sbb
add
jbe
movsb
xchg
std
mov
lahf
dec
sbb
sbb
inc
imul
mov
sub
xor
std
adc
outsb
stos
xor
xor
bound
xchg
add
or
push
ljmp
insb
fwait
dec
jl
fcomps
and
nopl
test
cmp
xchg
daa
stc
repnz
mov
and
dec
popa
jle
push
adc
sahf
test
mov
pop
xor
and
push
out
push
pop
adc
push
stc
add
ja
mov
xchg
xlat
xor
cmpb
loop
popa
ret
jle
imul
cmpsl
cmp
cmpsl
adc
aaa
jae
jg
mov
or
push
jg
insb
pop
cli
in
adc
mov
jne
and
loopne
xor
xor
mov
cmpsb
sub
and
ss
lahf
hlt
push
sub
add
jbe
dec
scas
clc
fnsave
mov
pop
fidivl
je
orb
xchg
sahf
popf
or
jp
adc
push
sahf
jp
rcrl
or
mov
lock
enter
enter
repnz
rolb
adc
inc
cmpsl
mov
mov
repz
mov
ja
mov
call
xor
xchg
or
xchg
xchg
pop
lahf
or
in
sbb
imul
dec
xor
dec
xchg
iret
xor
push
mov
stos
mov
negl
adc
jb
arpl
adc
jnp
imul
cmp
push
and
xchg
in
out
add
repz
cli
mov
xor
daa
andb
iret
push
std
cmp
sub
fnstsw
and
push
xlat
stos
stos
fsubrl
clc
cmp
mov
fistpl
jmp
in
popf
xchg
cmp
push
mov
cmpsl
je
jns
mov
pop
sbb
iret
push
pusha
add
test
imul
mov
jle
pop
pop
adc
inc
pop
sbb
push
and
jmp
pop
push
cmp
xor
and
fstpl
ficompl
inc
ret
pop
ss
ljmp
sbb
jle
ja
xor
jmp
ret
push
xchg
popa
mov
mov
push
in
xchg
sbb
mov
sub
sbb
aaa
mov
and
push
jo
jl
inc
mov
mulb
sbb
ss
mov
lods
shlb
test
cmp
mov
and
or
jl
pop
pop
sti
inc
jp
adc
js
lret
orl
ljmp
sbb
int3
fbstp
or
push
jae
or
and
idivl
nop
xchg
cvtdq2ps
and
push
test
mov
xchg
pop
iret
pop
add
push
push
scas
pop
scas
nop
fistpl
mov
add
lahf
dec
xor
push
mov
cwtl
imul
popf
stos
cmp
sub
popa
ficomps
or
lds
sar
push
cmp
cmp
push
cmp
pop
imul
fucomip
test
or
ja
lret
inc
mov
gs
mov
sahf
daa
into
mov
icebp
xor
push
jp
pop
mov
test
rcll
ficoms
mov
xchg
fsubrp
sub
mov
into
push
jbe
rcll
cltd
in
leave
mov
cmpsb
call
icebp
cmpsl
nop
xchg
test
pop
add
mov
add
dec
mov
stos
mov
xor
push
mov
stc
icebp
or
fimuls
cwtl
mov
sub
xor
in
insl
popa
loop
ljmp
mov
push
and
push
or
push
ret
fmuls
sarl
push
xor
stos
in
imul
test
test
jmp
sbb
lea
ds
sub
mov
insl
jmp
out
sbb
sahf
orl
in
push
int
sbb
mov
roll
or
outsl
add
fwait
lods
mov
sub
dec
pop
jne
lcall
cmp
pushl
mov
stos
sbb
std
inc
jmp
hlt
and
pusha
sbb
jae
lcall
push
out
out
sbb
inc
imul
data16
mov
add
or
xchg
loop
sbbb
scas
mov
in
stc
add
loopne
cmp
mov
pop
test
push
add
mov
test
mov
mov
lds
cmp
adc
push
icebp
add
sub
inc
in
jl
ficompl
stos
insl
shll
mov
jo
movsl
lods
pop
loop
xchg
sahf
push
in
leave
cwtl
sub
dec
lods
adc
pop
xor
mov
bound
sahf
xchg
add
outsb
notb
dec
pop
dec
mov
jle
dec
aas
ficomps
inc
lods
pop
aaa
xlat
cmp
sub
xor
cmpsl
adc
in
pop
nop
inc
push
xchg
popa
and
cbtw
jmp
mov
imul
ljmp
aad
push
divl
jl
mov
sbb
enter
add
xor
sub
xchg
xor
inc
jge
inc
push
mov
sbb
add
pushf
mov
rorb
daa
daa
pop
xor
cmpsl
push
mov
mov
pushf
cmp
jmp
mov
insb
into
add
es
and
lea
push
cwtl
xchg
and
adc
push
out
mov
sbb
movsl
pop
out
push
xchg
xchg
jp
mov
pop
lods
mov
pop
jo
shr
cmp
mov
cmp
es
loopne
jge
and
sti
adc
mov
sbb
mov
icebp
pop
sub
bound
outsb
loop
in
dec
nop
mov
push
cli
jmp
xchg
pop
or
out
or
loop
mov
inc
add
int3
out
sbb
outsl
les
and
mov
add
hlt
inc
mov
test
push
adc
pusha
jmp
outsb
lcall
aam
cmp
dec
pop
inc
mov
sarb
mov
inc
fidivrs
xorl
lock
stos
xorps
scas
das
les
xor
leave
lods
lahf
mov
scas
rcll
dec
hlt
sub
pop
inc
dec
add
shll
daa
dec
data16
mov
loopne
jg
fistpl
roll
xor
inc
adc
dec
mov
adc
or
pop
xor
jmp
xchg
xchg
ret
xor
push
sahf
les
lods
xchg
fmul
mov
push
mov
push
and
shrl
imul
mov
cli
cmp
xchg
jae
lcall
les
and
mov
jnp
add
test
mov
adc
sub
daa
mov
js
pop
ret
add
mov
stos
rolb
sti
ret
pop
xchg
sbb
xchg
js
sahf
dec
push
pop
push
scas
mov
clc
push
in
pop
scas
pop
enter
sbb
pop
je
fidivs
jns
addb
jno
xor
clc
xchg
xor
pushf
inc
dec
hlt
ret
add
xchg
push
push
jmp
aas
jne
call
jmp
in
sti
add
data16
dec
jmp
dec
jmp
and
add
cmp
stos
sub
clc
sbb
adc
js
fcmovnb
add
inc
pop
pop
adc
mov
add
mov
testl
adcb
arpl
sarl
scas
sbb
stc
xor
mov
cmpsb
pop
push
sbbl
pop
aam
fidivs
dec
dec
fadd
loop
sub
push
in
mov
or
ljmp
jne
fsub
sub
fcmovne
outsb
jns
push
rcll
fldenv
cli
lods
add
cmp
sub
in
or
insb
scas
xor
xchg
loope
aam
jbe
sbb
test
dec
loope
mov
popa
and
or
push
mov
insb
loop
es
jl
aam
sub
dec
jle
mov
loopne
fmull
add
out
sahf
test
ljmp
cmp
pusha
imul
and
push
sbb
dec
fildll
add
jns
notb
adc
jnp
sub
into
mov
test
dec
lock
lahf
lds
cmpsb
lret
jle
in
fldt
jp
jle
rolb
dec
push
push
daa
push
push
shll
fnstcw
jnp
cmpsl
lret
add
or
dec
out
incl
dec
in
dec
dec
and
mov
test
or
enter
xchg
and
cmp
mov
ss
pop
cmp
mov
je
dec
and
inc
xchg
cmpl
sahf
cmp
mov
loop
jle
pop
rclb
add
fldt
mov
fcoms
out
jae
sbb
mov
loop
notl
jl
popa
pop
add
inc
mul
dec
movlps
sub
sub
dec
cwtl
int
lods
adc
xchg
out
or
std
dec
cmc
hlt
inc
imul
inc
test
scas
mov
sbb
push
mov
xlat
adc
push
mov
jl
dec
adc
mov
cmp
cli
ficompl
sbb
loope
xchg
sbb
adc
adc
out
out
dec
outsb
inc
pop
and
add
out
pusha
jae
ret
test
orl
sub
jo
and
or
xor
stc
dec
sub
mov
pop
pop
dec
mov
shll
xchg
jo
outsl
inc
popf
sbb
cmpsl
mov
push
dec
lods
ljmp
cwtl
ficomps
push
aam
test
mov
mov
iret
push
lret
loopne
lock
push
push
or
dec
inc
jo
in
xor
shr
lock
sbb
adc
pop
ret
xchg
shrb
sub
push
lods
jmp
out
inc
divl
add
mov
jecxz
pop
outsl
out
pop
fucomp
mov
adc
xor
rclb
mov
repz
cmp
lock
sub
aam
movsb
pop
outsb
mov
add
add
pop
mov
mov
rep
sbb
enter
jmp
jg
xchg
sahf
push
shlb
mov
lds
daa
lea
and
daa
inc
push
push
in
sahf
lds
or
mov
jns
pop
sub
xchg
ljmp
push
dec
nop
stc
push
dec
dec
jmp
xchg
sbb
adc
mov
mov
hlt
fimuls
gs
lcall
mov
test
rorb
ja
outsl
sti
inc
adc
dec
push
mov
scas
int3
push
mov
jmp
nop
pop
xor
xor
in
jo
mov
xor
loope
fsubrl
stos
dec
aam
pusha
and
sbb
test
out
popl
les
and
fistps
loop
mov
lods
cltd
cli
jno
mov
jne
xor
cwtl
hlt
mov
icebp
icebp
push
outsl
mov
fldenv
cli
mov
xor
dec
inc
cmp
pusha
and
xor
call
sbb
mov
cli
inc
cli
stos
mov
sub
jno
shll
adc
xchg
fistps
add
arpl
mov
pop
ljmp
mov
call
fdivs
mov
pop
mov
dec
push
mov
rolb
out
pop
jns
arpl
dec
or
imul
xor
sbb
add
mov
add
or
adc
rorl
mov
dec
enter
std
outsl
xor
iret
test
jnp
cmp
stc
gs
outsb
pop
test
dec
pop
insl
sub
in
and
enter
adc
push
movsb
test
inc
jmp
and
push
xchg
push
sahf
loopne
sbb
aam
mov
or
mov
loopne
push
push
jle
enter
jo
adc
jp
aas
iret
xlat
xlat
push
cmp
jno
sub
and
jbe
ret
fisubl
jp
pop
lock
pop
into
aam
hlt
stos
pop
aam
das
mov
mov
test
in
cmp
xchg
cmp
and
or
cmp
mov
testl
inc
xchg
aas
repnz
leave
movsb
sti
fsub
xor
xor
test
loop
test
jg
loope
and
dec
adc
sub
cltd
mov
cmp
cs
sub
fnstcw
xor
sub
mov
test
push
imul
movb
pop
add
add
int3
fmull
cli
mov
xchg
xchg
inc
mov
dec
je
loope
mov
pop
jge
push
push
shrb
pop
push
xchg
pop
mov
jge
mov
sub
cli
dec
jmp
cmpsb
adc
dec
mov
movsb
pusha
mov
bound
adc
cs
dec
pop
add
jecxz
fildl
mov
inc
mov
mov
test
in
rclb
lds
xchg
movsl
push
call
push
icebp
pop
imul
xchg
jmp
push
sub
sub
sbb
stc
xchg
in
cld
ret
pop
dec
cltd
cmp
pop
push
outsl
hlt
mov
mov
sbb
loopne
fistpll
std
xchg
ret
filds
add
pop
inc
add
jbe
filds
lods
mov
jg
sahf
lods
mov
cwtl
sbb
mov
jne
in
sbbl
adc
ret
sub
and
aaa
dec
fildl
mov
mov
or
ret
add
lahf
sahf
inc
mov
movsl
divb
mov
mov
or
dec
daa
push
stos
adc
mov
ja
sbb
ds
xchg
cwtl
add
insl
and
push
cld
loopne
dec
insb
ret
js
repnz
mov
cld
adc
pop
inc
mov
mov
fdivrl
xchg
in
lds
and
lahf
scas
adc
rcr
xchg
stos
xchg
mov
test
mov
dec
sbb
fdivp
xchg
lea
fisubl
inc
ljmp
pop
test
fbstp
notb
aas
jl,pn
pushf
outsb
call
adcl
xor
cmpsl
push
es
push
adc
sub
mov
lahf
inc
mov
pop
hlt
push
push
incb
data16
outsb
and
add
testl
cmpsb
lret
out
jns
inc
jae
xchg
nop
pusha
pushf
scas
icebp
inc
pop
xchg
nop
pushl
in
mov
add
adc
and
addr16
in
aad
ret
rorb
mov
and
xlat
lret
fst
push
std
push
daa
movsb
stos
test
in
repnz
xlat
push
icebp
sub
movsl
loope
pop
mov
enter
fsubrl
cld
or
mov
call
dec
cmpsl
adc
mov
push
xor
bswap
outsl
stc
xchg
cwtl
dec
sbb
icebp
fdivrl
jae
das
std
jns
jp
in
fcomp
mov
jg
pop
xor
insb
cmp
adc
adc
mov
and
add
sti
rorb
aaa
cli
icebp
dec
pop
or
jecxz
xor
xchg
fildl
mov
loop
cmp
fsub
add
sbb
xor
sti
mov
inc
call
pop
insb
aam
mov
jb
push
insl
mov
jb
call
das
shrb
mov
stc
jo
testb
in
enter
out
push
cld
repz
je
loopne
mov
stc
mov
js
jb
ret
jbe
pop
mov
outsl
inc
dec
mov
fstpl
test
popa
push
add
rcl
arpl
or
dec
ret
cltd
lret
popa
push
push
out
pop
int
or
sub
pop
push
repz
pop
test
fnstsw
loopne
stos
in
push
fdivs
inc
add
cmp
sbb
sbb
stc
ja
insl
push
mov
adc
jo
jnp
inc
outsl
ficompl
das
sub
adc
inc
xor
iret
ljmp
aaa
add
pushf
pop
lret
out
mov
inc
bound
das
pop
test
mov
out
adc
mov
adc
mov
lods
mov
mov
loope
test
lcall
sbb
lahf
outsl
mov
out
enter
jb
cwtl
out
cwtl
jns
ja
pusha
lahf
popa
jne
jae
repz
addr16
iret
ja
jecxz
mov
movsl
xor
jns
cmpsb
pushl
cltd
std
jo
cmp
jl
test
push
in
dec
and
mov
ss
or
jo
lret
mov
es
sbb
push
loop
push
das
pop
mov
cmp
lods
ja
mov
cs
inc
loopne
add
or
mov
lods
push
push
pslld
push
jecxz
out
or
push
fimull
or
sub
mov
or
sub
mov
xor
popf
mov
adc
fnstenv
adc
xchg
outsb
xlat
and
sti
nop
mov
aas
jns
rol
gs
rcrl
and
out
inc
mov
lret
aas
jp
jl
cltd
or
movb
cmpsl
lds
jae
in
enter
int
ret
loopne
js
sbb
pop
test
xchg
pop
jmp
movsb
fimull
punpckhbw
incb
andl
leave
xlat
repz
sbb
mov
in
sbb
movsl
push
fnstcw
fs
shll
xchg
mov
push
enter
movsb
pop
fiaddl
cmp
fcmovb
sub
and
out
cmp
sub
int3
add
cmp
aas
in
sti
aad
pop
loop
flds
gs
jp
jae
fwait
pop
dec
xor
xchg
jns
cmpl
cs
call
or
mov
pop
pop
dec
cmpsb
mov
cmp
test
fwait
stos
scas
test
stos
movsb
inc
push
loop
pop
xor
insb
add
xchg
in
adc
xchg
fcomps
enter
sub
pop
sub
inc
add
movsl
lods
mulb
enter
int3
jae
js
loop
cmp
shlb
call
add
fstl
mov
mov
mov
pop
ljmpw
sub
sub
sahf
mov
dec
inc
pop
cli
outsl
data16
ss
sarb
pop
jae
sub
mov
xor
cld
fistl
push
sub
xchg
jno
outsl
xchg
gs
sbb
out
lock
test
daa
mov
mov
mov
mov
xor
rolb
xchg
push
jno
outsl
sub
sbb
sub
push
cli
jbe
adc
aam
push
rcrb
cwtl
mov
cs
pop
sbb
mov
xchg
or
push
add
xor
lock
or
mov
jg
cmpb
ss
aaa
add
imul
push
xor
roll
jne
adcb
mov
dec
and
adc
es
adc
push
push
pop
xor
mov
imul
lods
push
mov
jecxz
sub
push
mov
cmp
jne
sbb
dec
gs
fnsave
aad
lret
pop
repz
xor
fdivrl
jae
std
mov
jmp
cwtl
fistpll
mov
cli
mov
pop
adc
mov
cmovg
stc
hlt
add
cmp
cltd
dec
dec
push
sbb
add
cli
inc
pop
mov
loopne
jnp
jecxz
mov
jnp
xchg
icebp
mov
jnp
and
add
dec
sub
or
cmpb
sub
out
sbb
lock
nop
jmp
mov
fists
add
jo
mov
or
lods
mov
popa
enter
push
icebp
or
sahf
das
bound
fmull
adc
and
addr16
sub
sub
out
incb
push
aad
sbb
std
je,pn
and
jns
in
jmp
out
popa
xchg
mov
fwait
aaa
push
aad
jecxz
aam
bound
xor
or
mov
clc
xchg
dec
rcrb
imul
dec
out
cltd
outsl
cwtl
mov
jle
fcmovbe
pop
inc
sbb
fisubrl
jmp
xlat
sbb
dec
lcall
pop
xchg
fiaddl
mov
mov
stc
inc
repz
xchg
jg
pop
clc
and
ss
mov
sub
cli
mov
shll
sub
hlt
mov
out
fwait
into
adcb
xor
int3
lcall
das
lcall
nop
lods
std
cmp
retw
jns
sti
fldcw
imul
xor
push
roll
sahf
jl
lock
push
pop
xchg
sbbl
sub
divl
lock
or
push
xchg
out
cs
aas
pushf
jl
and
mov
inc
dec
jmp
shrl
enter
or
jp
mov
test
jns
inc
push
inc
testl
inc
push
cmp
test
stos
sbb
int
outsb
jo
jge
inc
aaa
sbb
cmpsb
mov
into
sub
mov
ja
xchg
jg
push
add
xchg
xchg
inc
adc
inc
pop
int
or
in
or
sub
fbld
pop
or
std
inc
xchg
bound
push
out
shrd
or
xorl
fxam
jae
mov
outsl
test
test
out
loopne
out
sbb
loop
xchg
loope
movzbl
movsb
repz
lahf
and
mov
fnstcw
inc
rcr
or
scas
adc
inc
cmpsl
and
sar
test
mov
inc
ret
sub
out
inc
mov
arpl
out
std
mov
bound
outsl
inc
sbb
sbb
push
addr16
jg
mov
inc
and
lret
jle
inc
fimull
jb
adc
sahf
mov
cltd
les
cld
and
mov
aad
mov
adc
mov
mov
xchg
or
mov
loope
icebp
cs
cmp
imul
lret
fisubrl
cmp
hlt
aaa
sarl
insl
push
out
sub
rcrb
data16
mov
jae
push
mov
jl
daa
jb
in
dec
mov
enter
xchg
push
pop
nop
mov
adc
mov
pop
or
aas
outsb
jl
jbe
pusha
je
mov
div
push
and
vunpcklps
jno
xor
xchg
sbbl
mov
stos
rcrl
dec
nop
pop
jo
pop
cwtl
mov
pusha
fidivl
add
adc
xchg
push
out
mov
inc
divb
loope
pushf
add
pusha
loop
sub
js
fisttps
mov
es
adc
loopne
mov
pop
sarl
ds
mov
lret
repnz
jle
pop
outsl
cmp
xchg
xchg
jge
jo
mov
rcr
in
inc
sbb
je
mov
test
sub
or
popf
inc
push
rcrl
in
fdivrl
je
in
inc
pushf
shrl
xor
pushl
inc
pushf
sahf
cmp
cmp
jmp
jne
ret
inc
aas
stc
aad
dec
cltd
jb
mov
lods
sbb
xchg
adc
fbld
das
mov
or
in
in
dec
mov
xchg
adc
test
push
lcall
push
cmp
jb
incb
push
sbb
rorl
inc
pop
gs
stos
xor
lahf
lret
out
xor
push
mov
cmp
rolb
dec
sub
mov
daa
sarl
pop
dec
faddp
push
sbb
das
sub
push
imul
inc
popf
dec
xor
jmp
push
cmp
leave
stc
and
dec
cld
ljmp
subl
cmp
push
add
mov
add
das
aaa
jo
sti
mov
push
mov
adc
mov
scas
dec
ret
sbb
adc
add
mov
in
rclb
sarl
mov
stc
cmp
dec
lahf
and
jne
test
mov
imul
mov
mov
je
loop
inc
int3
lea
mov
rolb
aaa
iret
popf
inc
iret
pop
rol
xor
jmp
lea
jbe
pusha
loope
push
inc
jl
sbb
push
xchg
int
mov
xor
pop
xchg
mov
rolb
dec
insl
inc
pushf
pop
jle
push
push
shrl
call
popf
stos
leave
rol
rcr
in
xchg
adc
out
pop
xchg
retw
movsb
clc
mov
and
repz
icebp
pop
addl
dec
mov
or
test
popl
inc
mov
scas
and
adc
pop
pop
pop
push
mov
mov
subl
or
mov
jmp
jp
cmc
inc
js
push
mov
sub
pop
inc
mov
sub
dec
push
cs
fs
add
jns
xor
push
push
test
mov
sti
jns
int3
test
mov
cwtl
das
mov
jne
dec
clc
jae
lcall
or
cli
add
bound
std
lea
pop
mov
ds
add
jmp
mov
xlat
add
pushf
aam
pusha
xchg
pushf
sti
imul
std
pop
cmpsl
push
push
arpl
mov
inc
or
pop
in
cmp
test
adc
lret
rolb
xchg
out
add
mov
in
mov
pop
sarb
adc
sarl
push
dec
jp
sub
mov
mov
repz
push
pop
in
mov
cmp
xor
subb
mov
sbb
test
cld
sbb
in
fdivl
stc
xchg
xchg
cld
fisubs
pop
fldcw
ljmp
lods
js
add
stos
or
mov
pop
mov
fcompl
pop
jp
loope
push
adc
lods
cltd
inc
adc
loopne
leave
scas
xor
dec
dec
nop
sub
mov
cwtl
andl
dec
or
fildll
push
fisubl
std
addr16
hlt
pop
adc
push
jge
or
fildll
cmp
test
mov
mov
int3
cmp
js
test
aad
mov
adc
sub
xor
cmc
dec
sub
ret
pop
test
test
nop
mov
fisttpll
sbb
xchg
xchg
cmpb
lahf
jno
fidivl
add
stos
xchg
dec
mov
lock
push
js
push
pop
xlat
mov
adc
je
sahf
mov
das
sub
out
jmp
test
in
adc
addr16
xor
push
fistpl
cmp
or
cmp
imul
ret
repz
into
int3
bound
and
mov
dec
sbb
fsubr
cmpsl
pusha
mov
dec
inc
push
mov
mov
push
ret
repnz
negl
pop
outsb
bound
pop
pop
jne
lret
mov
add
xchg
pop
sbb
push
push
out
mov
pop
mov
lds
mov
incb
adc
pop
addb
xchg
out
ljmp
mov
and
cmp
aas
out
mov
movsb
xlat
add
in
fsubr
aas
xchg
jecxz
push
and
fsubr
ds
xchg
stc
or
fwait
sbb
cmovae
lods
xchg
sub
mov
lret
adc
lds
icebp
je
inc
jno
lret
jnp
scas
std
adc
pop
dec
cmpsb
dec
adc
out
les
mov
jno
push
cli
or
test
cmp
divl
dec
inc
out
and
rclb
mov
mov
addr16
dec
call
shlb
shl
fistpl
push
mov
mov
lret
mov
xor
mov
cli
push
test
mov
lods
gs
sbb
mov
adc
ret
bound
and
dec
je
cmpsb
inc
call
mov
js
pop
push
scas
out
fs
pop
dec
lods
lods
dec
ss
cmpb
add
fs
out
mov
imul
popf
add
mov
iret
fucom
push
out
xchg
cmp
dec
daa
xor
cld
xor
ret
sub
or
sbb
insl
sbb
enter
fildl
in
and
inc
outsl
dec
imul
adc
inc
push
push
lcall
imul
cmp
nop
rorb
lods
jns
cmp
insb
into
mov
pop
cmp
imul
push
add
mov
push
mov
dec
or
mov
adc
push
int3
cltd
test
popa
xchg
add
inc
pop
movsl
push
fnstsw
pop
mov
fs
cli
push
es
xchg
scas
jae
push
xor
enter
mov
mov
xchg
repz
orl
inc
mov
sbb
push
cmc
hlt
in
and
pushf
push
push
xchg
repnz
jl
cmp
les
push
out
mov
sbb
aaa
movsl
adc
mov
pop
and
xor
sbb
cli
mov
jae
leave
sub
mov
mov
sub
sbb
imul
loope
ljmp
loopne
stos
pusha
adc
test
cs
adc
lea
cli
xchg
pop
xor
movsl
gs
repz
inc
inc
xor
mov
or
pop
xacquire
and
mov
cltd
cmp
xor
xchg
inc
or
bound
adc
cmpb
fiaddl
test
cli
add
adc
adc
mov
lea
sahf
inc
dec
leave
out
pop
push
out
scas
in
mov
rcrb
out
add
jge
adc
and
mov
xor
loop
faddl
sbb
adc
icebp
push
mov
stos
jmp
push
sbb
stos
pusha
jmp
xor
icebp
add
cmp
mov
sahf
jle
sbb
js
sbb
mov
pusha
sbb
lret
aad
mov
mov
lods
repz
sbb
test
sbb
dec
gs
jge
pop
mov
add
sub
cmp
cmp
lods
out
sub
mov
mov
int
int3
xchg
dec
test
jp
test
ret
out
cli
xor
pop
out
movsb
inc
negl
and
push
rcrl
imul
sbb
pop
inc
mov
and
cltd
mov
imul
lds
popf
enter
fnstenv
and
push
xor
jmp
stc
cmp
imul
add
out
push
pop
cmp
test
inc
push
mov
jecxz
xchg
sub
dec
xchg
mov
fiadds
les
ljmp
sub
push
filds
adc
inc
repnz
popf
lods
inc
stos
xor
sbb
sub
in
lods
lea
test
and
mov
mov
rcrb
test
shll
cs
test
xchg
mov
xor
call
push
fcompl
aas
sahf
xchg
pop
jnp
cmp
jnp
mov
dec
and
int3
mov
imul
std
ret
cmp
mov
popl
xor
pop
in
fcmovb
iret
adc
dec
inc
push
shl
pop
stos
mov
outsl
out
mov
fildll
shrl
mov
xor
dec
mov
push
ficoml
jge
push
icebp
xorb
fwait
and
dec
test
les
mov
int3
mov
cmp
fwait
jae
jg
ds
fsubrl
pop
bound
jo
stos
mov
iret
jns
loopne
dec
sub
data16
xor
iret
ficoms
lods
sub
into
dec
xor
ljmp
test
adc
loop
push
insb
pop
fcoms
xchg
outsb
push
repz
sub
shl
jns
xchg
int3
push
mov
jbe
cltd
or
inc
mov
sub
add
sbb
scas
push
popf
and
stos
int
dec
add
imul
dec
popa
subb
stos
aad
sti
clc
mov
or
cmp
ss
jne
test
lods
add
movsb
sub
sub
adc
sub
test
or
cs
push
mov
xor
sub
mov
getsec
pop
ss
mov
dec
lret
push
mov
outsl
movsb
jl
movsl
test
xor
or
mov
push
lret
rcrl
testb
ja
outsl
cmp
icebp
pop
fisttpll
rclb
aaa
dec
dec
and
adc
pop
sahf
pop
add
mov
int3
nop
push
mov
mov
fmull
mov
mov
leave
adc
dec
mov
mov
sbb
push
enter
cmp
fsubr
jg
and
loopne
sub
out
icebp
test
dec
cmpsl
loop
pusha
loop
icebp
lock
es
into
dec
dec
pop
das
aas
push
in
mov
jo
add
arpl
in
int3
call
push
mov
push
and
test
pop
mov
mov
pop
and
dec
dec
pop
inc
pop
in
push
add
lea
push
mov
pop
mov
push
mov
jl
outsb
jbe
xchg
loopne
fiaddl
add
dec
ja
jge
pop
movsl
adc
mov
in
xchg
aaa
andl
sub
iret
je
adc
or
or
cmp
xlat
mov
cmp
arpl
push
stos
mov
stos
das
push
add
cmp
xchg
je
push
fmull
mov
sbb
dec
adc
sub
mov
outsl
add
push
shl
mov
loopne
shlb
dec
cltd
pop
enter
jno
inc
das
popa
int
enter
sub
aas
insb
xchg
scas
stos
cmp
lret
pop
push
lds
push
test
sub
pop
ret
and
subb
jnp
push
out
lock
popa
xchg
xor
add
cli
enter
cmpsl
test
and
out
push
icebp
in
mov
jmp
mov
in
fsqrt
pop
popf
cmp
dec
scas
xchg
sub
mov
outsl
and
or
ret
lret
scas
cmpsl
mov
shlb
xchg
inc
icebp
lcall
into
mov
push
stos
add
loopew,pt
xchg
in
daa
mov
ficoms
xor
stos
cld
push
ljmp
popf
clc
pop
cli
push
int3
mov
cmp
lea
rol
and
fsubrs
or
pop
out
inc
mov
jmp
xchg
and
in
scas
scas
lret
add
inc
push
cmp
nop
pop
xchg
lods
es
jno
cmpsl
mov
icebp
cmp
push
jmp
cmpsb
in
mov
jns,pt
cmc
je
fistps
pop
dec
adc
sbb
adc
adc
sub
je
xlat
adc
divb
fs
aaa
push
mov
and
loope
inc
rclb
fbstp
or
outsb
or
int3
ret
movb
push
movsl
subb
mov
and
inc
sbb
jno
sbb
insl
in
movsb
jb
adc
lds
lods
clc
fistl
mov
test
add
sub
jno
jg
lcall
or
pop
std
das
sbb
hlt
cmp
adc
in
jne
aad
push
pop
cli
cli
and
jnp
and
pop
stos
outsb
outsl
xchg
cmp
add
jge
or
fisttps
cs
ror
pop
aam
in
sahf
push
cmp
mov
shrl
stc
xchg
jg
fnstcw
mov
mov
mov
adc
test
pop
inc
pop
pushf
rolb
and
dec
jg
ds
sarb
or
xor
into
cmp
fidivrs
dec
jg
xor
jns
icebp
dec
mov
mov
je
repnz
iret
cltd
add
jge
jge
out
sarb
idiv
test
imul
push
sti
imull
jl
mov
dec
ds
sub
lea
cmp
loopne
sbb
pop
filds
lods
scas
outsl
shl
arpl
xor
sub
mov
scas
sbb
sub
jns
outsl
pmulhuw
xor
pop
lcall
faddp
mov
adc
aam
mov
int
into
jmp
sbb
pop
lcall
in
xor
je
movsl
and
xrelease
insb
dec
mov
insb
mov
lods
cmp
sti
and
and
push
mov
sbb
sub
adc
jo
jae
cli
push
jbe
mov
mov
sub
and
push
jmp
scas
mov
pop
sub
das
pusha
sub
xor
stc
jns
fisttps
or
cld
dec
pop
sbb
ret
in
ljmp
jg
pop
out
shll
and
inc
clc
lods
sub
xchg
xor
lods
into
pop
call
lds
jne
and
jns
mov
and
adc
xor
cmp
push
pop
xlat
int
std
push
add
fdivp
adc
stos
push
inc
outsb
jge
mov
cmp
shll
loopne,pn
pushf
cmp
movsb
adc
and
add
pusha
mov
jecxz
add
shrb
mov
xor
jns
cltd
fs
rol
in
inc
xchg
popa
dec
cwtl
push
adc
and
mov
dec
jb
test
xchg
pop
ja
lret
pop
inc
filds
add
and
push
add
stc
and
in
add
push
js
lds
jp
or
out
js
sahf
mov
push
inc
add
sub
loopne
add
mov
jmp
mov
mov
push
cmp
enter
jne
xchg
dec
xchg
mov
std
bound
in
xchg
int3
jmp
mov
pop
push
outsb
jmp
cmpb
sub
ret
test
cmpsl
dec
nop
inc
push
inc
inc
adc
adc
je
jp
and
mov
andb
mov
add
pop
mov
jns
cli
xchg
scas
jmp
sub
int3
sbb
pop
imul
sahf
mov
in
test
test
jmp
and
gs
std
mov
lods
outsl
roll
testb
fwait
dec
je
imul
mov
mov
imul
mov
notb
inc
test
sub
mov
mov
sbb
inc
out
sub
sarb
test
enter
in
rorb
insl
cmp
les
cld
imul
lods
jg
cwtl
mov
dec
movsl
ja
add
lret
and
dec
movsl
and
cmpsb
jns
pop
pop
adc
in
outsl
int3
movsl
out
jns
mov
aas
and
icebp
inc
lods
fwait
repnz
jb
mov
mov
pop
test
xchg
shl
jne
je
push
inc
lahf
xor
pop
adc
cmc
push
in
stos
mov
adc
mov
or
mov
ret
lods
adc
fildll
mov
popa
jle
mov
push
int3
scas
cmpsl
push
movsl
mov
ret
pop
shll
insb
aas
cltd
ret
pop
jae
cmc
fmul
aas
lods
inc
pushf
dec
xchg
imul
xorb
and
inc
pop
jle
inc
stc
das
stos
and
icebp
or
cmp
pop
push
loop
cltd
push
xlat
shll
arpl
pop
mov
mov
push
inc
add
mov
nop
or
mov
out
inc
pop
loopne
repz
lds
cmp
add
movsb
inc
js
ljmp
rcrb
repz
mov
scas
lds
mov
xchg
jno
shr
dec
pop
pop
push
or
mov
inc
sub
jne
shlb
jno
scas
inc
leave
dec
jmp
cmp
jae
jb
and
nop
add
mov
arpl
cwtl
and
and
das
orl
lcall
sub
sbb
jo
fimuls
sub
pop
repnz
inc
stc
pop
push
fcoml
cmpsb
ss
fstl
cmpl
adc
rorb
push
es
jecxz
nop
ret
push
dec
inc
lret
add
ficompl
xlat
cs
mov
mov
dec
inc
sub
push
mov
adc
xor
test
cs
cmp
xlat
loopne
jne
and
int3
mov
pushf
test
sbb
ljmp
cmp
pop
setle
mov
xchg
fiaddl
testl
out
test
cli
inc
pop
lret
push
add
inc
jge
sbb
cmp
repnz
out
push
mov
adc
call
sbb
inc
rclb
stos
push
out
cld
imul
cmp
andb
cmpsl
mov
or
cwtl
hlt
stos
hlt
and
sbb
add
aas
into
insl
xchg
int
js
adc
andb
pushf
pop
std
jne
adc
in
mov
mov
out
or
nop
inc
fldt
xlat
cld
ss
sub
mov
fisubs
mov
aad
stos
fstl
mov
stos
fildl
fsubrl
ljmp
dec
add
cld
push
js
sub
mov
pop
adc
inc
mov
mov
filds
adc
nop
ss
sbbl
into
jecxz
or
sbb
cmpsb
mov
push
les
scas
add
or
mov
cmc
push
lds
mov
mov
ja
cmp
xor
or
stos
aad
xchg
push
and
iret
mov
mov
and
mov
xchg
aad
cmp
sub
mov
adc
andb
shlb
pop
sbb
test
enter
push
adc
jmp
dec
iret
fisubl
ret
xchg
lods
icebp
repz
inc
adc
add
lock
jne
out
or
mov
fnstsw
fwait
xor
test
push
jl
fs
mov
repnz
and
mov
cld
pop
faddp
push
rorb
pop
sub
shr
sub
pop
inc
outsb
pop
and
cmp
subb
fsubs
fsubl
cmp
aaa
mov
mov
dec
adc
mov
mov
dec
orb
push
or
lods
sbb
rorb
test
cld
imul
jp
pop
and
dec
inc
ss
jo
xor
push
scas
dec
pop
insb
mov
movsl
loopne
mov
jmp
pop
mov
mov
pushf
into
cli
or
cmp
dec
bound
xor
pop
iret
hlt
inc
jge
repnz
in
dec
inc
mov
lock
mov
cltd
data16
mov
mov
outsl
push
loop
sub
pop
cld
pop
into
jbe
addr16
add
xchg
push
test
inc
add
pop
call
addr16
je
iret
mov
inc
inc
rcll
pop
std
in
bound
imul
dec
xor
ljmp
pop
ds
out
and
ret
dec
je
shll
stc
jne
add
mov
or
lock
ljmp
lods
sbb
rcrl
out
pop
add
inc
pop
insb
inc
enter
imul
stos
xorl
js
xchg
lds
adc
adc
push
int3
mov
push
lods
cmp
or
les
adc
stc
icebp
stc
notl
lret
cmp
mov
push
xor
pop
cmc
pop
out
or
dec
les
sti
xchg
cmp
test
bound
fnstenv
sbb
in
inc
or
mov
mov
mov
insl
fstps
lret
sub
pop
xchg
call
cltd
pop
push
push
or
mov
aad
aam
dec
insl
cmpsl
push
xchg
mov
je
pop
inc
movsl
testl
mov
data16
pop
pop
test
cli
je
jg
lahf
jbe
or
adc
add
rcl
mov
aad
pushf
repnz
push
lcall
sti
sub
ret
cmp
rcrl
xchg
repnz
repz
mov
adc
sbb
popf
lret
or
jb
jne
or
sub
mov
mov
lods
incl
outsl
test
fsubp
or
pop
cld
shlb
mov
stos
test
iret
dec
out
out
insb
dec
and
aam
in
lret
sbb
call
dec
inc
mov
add
xor
popa
popl
imulb
test
fildll
subb
in
push
cmc
orl
lock
cli
adc
adc
or
or
xchg
cmpb
adc
scas
or
mov
xchg
loopne
dec
xchg
nop
jnp
jne
stos
test
cmpsl
call
lods
mov
cli
inc
sub
pop
cli
sub
bound
jo
adc
shlb
mov
stos
cmp
clc
icebp
in
add
sbb
cltd
addb
in
inc
test
stos
mov
push
mov
dec
int3
lods
loopne
fmull
inc
mov
mov
insl
pusha
jne
add
mov
fnstenv
subl
loope
cmpsl
test
pop
and
push
in
jl
leave
mov
and
inc
gs
pop
xchg
inc
xchg
mov
push
xchg
fsubl
es
repnz
sub
and
push
push
cmp
enter
popa
ss
mov
add
sbb
mov
inc
xor
hlt
je
xor
in
stc
clc
js
fiadds
mov
xchg
push
mov
data16
fcmovbe
adcb
lret
pop
loope
mov
pop
outsl
or
mov
xchg
cmpsb
gs
aas
add
sbb
xchg
aad
dec
sub
pop
sbb
xchg
push
fst
mov
mov
ret
movsl
push
cmp
xchg
adc
and
mov
xchg
xor
pop
cmpb
jb
push
lahf
xchg
mov
jbe
and
stos
out
loop
push
adc
push
bound
xchg
push
mov
imul
fwait
cmpsl
hlt
aaa
test
daa
xor
rcll
dec
push
add
pop
sub
outsb
cmp
mov
in
inc
or
js
sbb
jmp
inc
movsl
sar
mov
nop
mov
cld
movsl
and
aaa
cmp
push
push
and
cwtl
pop
mov
and
and
xchg
fs
or
icebp
cmpsb
push
test
dec
pop
or
cli
ss
iret
jge
sbb
push
xchg
xorb
xorb
mov
xor
jmp
adc
sub
cs
jne
inc
mov
mov
cmp
add
mov
loopne
movsl
dec
or
or
inc
loop
mov
push
adc
adc
in
scas
jle
adc
test
adc
push
cmp
icebp
insl
sti
and
inc
sarb
in
adc
adc
addps
imul
js
sbb
mov
jbe
call
pop
cs
jne
mov
xchg
hlt
int
dec
adc
cmp
push
cwtl
pop
stos
xlat
add
fcompl
cmp
push
adc
jp
sbb
stos
mov
test
in
sbb
sbb
iret
mov
dec
mov
popf
outsb
add
mov
adc
daa
or
pop
imul
and
or
repz
jnp
stos
test
stos
cmp
xor
or
cmp
iret
jb
fmuls
xchg
sbb
inc
xchg
xchg
movsl
dec
stos
out
scas
and
cli
mov
jne
jo
addl
rcrl
cltd
cmp
jge
cmp
cmpsb
cmpsl
xor
mov
imul
sub
int
mov
test
sti
cmp
es
mov
mov
add
test
repz
aas
sti
into
mov
sub
arpl
mov
cmp
flds
pop
dec
jnp
test
cmp
sbb
cmp
in
int
jge
lock
movsb
pop
mov
inc
push
and
mov
sbb
mov
xchg
scas
nop
arpl
pop
sub
xor
sub
dec
stc
pop
subb
fadds
add
cmp
mov
pop
lahf
dec
filds
movsb
negl
lds
dec
repz
pop
fidivs
push
fstl
pusha
mov
and
rorl
fwait
push
mov
and
rorb
mov
adc
mov
push
inc
mov
cmpsb
ja
pop
push
mov
in
xchg
xchg
and
and
lret
fisttpl
sub
and
pop
adc
lea
mov
lods
mov
pop
js
in
push
movl
mov
cld
dec
sub
rolb
shll
iret
jnp
xlat
add
int
in
jae
and
loopne
pushf
scas
adc
loopne
mov
movsb
lret
push
pop
out
pushf
adc
mov
mov
frstor
xor
mov
lahf
mov
sub
jno
jle
pop
scas
or
push
iret
std
sbb
in
and
sti
jecxz
ffreep
dec
cmpb
and
jo
pusha
adc
or
cmc
or
lret
and
lcall
xchg
or
imul
cwtl
imul
sub
stc
shr
cmp
and
inc
in
pop
cmp
movsl
xadd
mov
or
and
pop
aaa
or
adc
xor
lret
pop
mov
mov
jnp
cmc
xor
mov
dec
inc
lret
and
sub
aaa
and
insb
cmp
sub
test
icebp
pop
std
push
push
xchg
pop
add
imul
sub
sbb
popf
add
or
aas
push
xchg
cs
sbb
and
ja
push
out
lcall
ret
rcl
cli
popa
mov
ljmp
pop
lret
push
push
cmc
dec
pop
ljmp
adc
inc
inc
pop
ja,pt
sahf
or
jl
pop
jbe
pop
mov
and
xorb
ljmp
mov
dec
push
mov
scas
cmp
mov
fs
mov
add
mov
les
repz
sti
push
dec
rcll
scas
adc
adc
jp
loope
lahf
cmpsl
mov
outsb
enter
and
mov
lods
xchg
hlt
push
or
mov
addr16
push
pushf
xor
jp
add
icebp
repz
insl
in
xchg
xchg
loop
stos
aad
outsb
sar
pop
sahf
scas
inc
imul
mov
nop
push
cmp
bound
cld
addr16
xchg
bound
dec
mov
ds
xlat
push
call
or
inc
pusha
jge
ret
fwait
push
fs
js
sahf
ds
xchg
in
in
scas
es
pusha
and
bound
push
ja
xor
call
pop
mov
mov
fstl
call
pop
les
xlat
rcll
and
jns
lds
movsl
cmp
xor
out
sbb
and
sbb
cld
push
bound
pop
sbb
mov
test
aam
xchg
out
scas
lea
pop
cs
mov
push
testl
lahf
sahf
movl
fcmovb
inc
or
arpl
fildl
cwtl
xchg
sub
cmp
sub
mov
stos
lahf
mov
cli
mov
outsl
push
fmull
lods
xor
jmp
lcall
xchg
xchg
push
pop
cs
dec
ds
mov
sub
into
dec
js
mov
repnz
inc
icebp
push
mov
in
inc
fiadds
xchg
fisubl
fldl
sbb
cmp
addr16
iret
popf
xchg
stos
cwtl
inc
mov
fnstsw
mov
sbb
push
mov
xlat
mov
std
fmull
and
and
nop
pop
push
fwait
movsb
shll
popf
jl
out
loope
dec
pop
pop
pop
xchg
daa
lds
lods
mov
popf
popa
stos
add
insl
inc
icebp
rcrb
imul
jg
adc
out
icebp
xchg
inc
out
out
inc
mov
mov
mov
sub
inc
xchg
xchg
jmp
and
add
pusha
les
jecxz
xlat
pop
pop
jo
gs
sbb
fdivrl
jg
sbb
stos
or
aas
dec
enter
shrb
cmpsb
fs
sbb
mov
mov
adc
cltd
jecxz
ss
pop
es
mov
sub
lar
push
imul
arpl
cmc
pop
sub
sbb
xlat
and
int3
pusha
bound
pop
in
sti
xchg
hlt
sahf
mov
inc
test
sub
pop
jno
fwait
jmp
inc
test
inc
pavgb
mov
arpl
ljmp
xor
addr16
aaa
mov
and
mov
repz
aaa
lock
in
mov
icebp
xor
outsl
cwtl
pop
jae
push
pop
aad
mov
inc
shlb
mov
and
outsb
push
jmp
add
jbe
pop
push
dec
aad
cmpsl
repnz
push
cmp
testl
jb
add
leave
push
mov
jo
insl
das
mov
ss
enter
fildll
enter
mov
inc
pusha
rorb
dec
inc
imul
adc
insb
or
rcll
clc
ficomps
movsl
xchg
ljmp
je
pop
aaa
jge
push
cmp
mov
sub
cmp
xor
xlat
and
cmc
inc
pop
adc
add
mov
js
call
pop
ret
into
in
shll
repz
jne
in
arpl
xchg
test
push
and
mov
fbstp
dec
cmp
pop
mov
pop
lret
clc
sbb
inc
call
jo
jo
mov
pop
mov
jp
out
rol
fs
xchg
xorl
ficoml
clc
nopl
cmpsb
sub
leave
push
mov
push
jne
or
lods
popa
mov
fwait
xchg
lret
and
jb
jp
fidivrl
cmp
jge
aas
push
xor
dec
fwait
pop
and
subb
call
bound
shl
xor
shl
dec
pop
jle
call
mov
daa
fbld
xor
bound
sub
es
les
and
adc
or
push
scas
lods
mov
ja
lds
hlt
stc
sub
in
xor
fwait
in
sub
or
fdivl
out
in
inc
into
cmp
aam
shlb
push
aaa
aam
cli
xor
lods
push
mov
loopne
movsl
mov
sbb
mov
add
adc
aad
jne
clc
xchg
pop
or
ljmp
add
pop
rcl
lahf
mov
jns
int
sbb
push
outsb
push
icebp
popf
push
push
imul
mov
jne
hlt
aad
frstor
sbb
dec
les
push
xchg
mov
jecxz
mov
mov
fstps
movsl
mov
xlat
mov
dec
xor
stos
fs
leave
call
mov
es
cmp
or
pop
lds
push
and
sarb
xchg
xchg
insb
mov
and
ret
outsl
cmp
arpl
cltd
sub
adc
stc
push
movlps
dec
xchg
mov
sbb
and
fildl
repz
pop
xchg
sbb
cmp
stos
push
cltd
jl
adc
push
xchg
rolb
rolb
pop
dec
lods
push
and
sti
sti
and
push
jecxz
subl
mov
pop
jbe
into
test
dec
iret
out
sub
pop
test
fistps
dec
repnz
push
push
inc
ficomps
ficoml
adc
jle
lcall
adc
pusha
sbbl
pop
and
xchg
in
lea
dec
das
dec
cmp
notl
lea
push
aad
or
daa
loope
mov
stos
lock
xchg
aaa
outsl
fidivrs
std
cltd
or
repz
cltd
mov
int
rcr
xchg
sbb
cmp
jns
hlt
aas
sbb
inc
cwtl
push
bound
pop
sti
aas
adc
push
pop
es
jecxz
add
scas
xor
sbb
aaa
jl
cmovb
je
dec
sbb
sbb
mov
inc
xor
flds
adc
repnz
fsubl
scas
inc
lods
aas
cmpsb
add
and
sbb
mov
xchg
adc
mov
cmp
or
mov
jo
xchg
fsubl
push
or
sub
push
pop
pushf
jns
es
cli
adc
jo
jmp
mov
mov
fists
jle
mov
scas
inc
mov
pop
sbb
les
cmp
js
jo
cmc
ja
test
add
jnp
in
pop
adc
popf
out
push
cli
pop
pop
mov
in
adc
and
push
stos
cmp
push
frstor
out
mov
andl
lods
jmp
je
sbb
jmp
xchg
daa
mov
je
push
add
scas
pop
jb
mov
pop
xor
mov
cmp
cmc
repz
pop
mov
jecxz
mov
pop
rclb
ds
enter
or
jbe
jb
in
cwtl
lds
sub
add
pop
jns
stc
sbb
cwtl
and
lcall
push
iret
imulb
rcrl
imul
push
retw
rcrb
mov
mov
jge
iret
clc
xchg
outsl
xlat
xor
sub
lea
xchg
decb
loopne
test
mov
fildll
and
dec
mov
add
jl
lea
mov
and
into
fmulp
scas
cld
jmp
inc
stos
gs
mov
lret
nop
mov
dec
dec
inc
mov
sarl
rcrl
jecxz
push
adc
insl
xchg
out
fistpl
jo
out
and
sub
ss
les
das
data16
scas
test
es
imulb
jae
lds
push
outsl
dec
mov
jbe
xorb
out
sub
cmpsb
test
push
fcoml
dec
fsubs
scas
les
ret
mov
gs
fmul
aas
or
lcall
jb
jnp
test
push
inc
lcall
or
loop
enter
dec
lret
sbb
push
xchg
mov
cmp
scas
lock
jns
or
jg
push
ds
cmp
sarb
inc
or
sub
dec
sub
bound
fsubrl
aad
and
leave
push
cmpsl
pop
aaa
aad
and
sub
mov
push
pop
mov
scas
mov
aaa
dec
dec
mov
popl
fisubrl
mov
data16
pusha
jg
pushf
sarb
push
jbe
inc
pop
dec
cmpsl
icebp
jnp
mov
push
fisubrs
lods
iret
ret
shrl
mov
dec
dec
pusha
pushf
dec
pusha
movsb
sbb
nop
in
into
mov
fwait
add
cmp
pusha
jo
add
aaa
imul
xor
mov
inc
iret
xchg
cmp
adc
xor
jns
dec
xchg
fidivl
xchg
dec
fcoml
test
outsl
ljmp
mov
cltd
push
scas
push
push
lret
dec
in
ds
dec
lahf
in
jne
das
or
repz
pop
stc
xor
out
sbb
add
xor
movsb
hlt
das
in
insb
mov
fildl
imul
xchg
aas
fnsave
sub
popa
mov
aad
lahf
or
xor
and
adc
test
mul
xchg
jno
in
or
pusha
lods
outsb
enter
ss
and
loope
lea
push
jbe
adc
icebp
lds
arpl
rclb
sub
and
add
dec
jmp
xchg
loopne
push
out
arpl
dec
lods
sbb
aam
insl
ret
add
in
pushf
stos
fst
inc
pop
sub
loope
fidivl
ds
dec
cmp
adcl
push
or
mov
xor
inc
push
inc
sbb
jb
mov
jbe
jge
cmp
movl
sub
jecxz
mov
imulb
xchg
xchg
cmp
in
push
repz
jno
in
inc
xor
xchg
and
pushf
inc
jl
shl
cmc
scas
xchg
mov
mov
dec
inc
mov
sub
mov
mov
loopne
and
sahf
mov
data16
out
mov
push
mov
bound
fiadds
notl
sub
xor
clc
adc
out
into
ja
or
push
inc
lods
pop
dec
stos
mov
cwtl
mov
daa
jbe
pop
xor
fcomi
dec
arpl
ds
pop
mov
sbb
addr16
adc
dec
enter
rorb
imul
pop
or
lock
addr16
inc
aam
jae
sub
lcall
adc
push
jo
dec
xor
push
lcall
and
sub
dec
dec
loopne
mov
lret
jge
adc
icebp
dec
loope,pt
popf
sahf
cld
fstps
add
lock
push
dec
inc
ljmp
cmpsl
int3
mov
pop
popa
sub
movsl
inc
sub
cmp
jnp
pop
repz
sbbl
dec
test
sub
mov
aam
sbb
dec
lods
jge
andl
pop
cltd
add
ret
mov
cwtl
cmp
hlt
in
cwtl
push
ljmp
out
or
push
sbb
lret
es
repz
rolb
mov
loop
cmpl
push
dec
jmp
iret
shr
jb
mov
jo
mov
sbb
ljmp
aas
dec
aaa
stc
ffree
test
sub
sub
push
jmp
and
sbbb
inc
pop
cmp
sbb
call
jmp
roll
adc
sar
popf
adc
movsb
je
mov
and
insl
adc
inc
lcall
xor
mov
ds
xor
fldl
jmp
mov
inc
push
lea
fisttpll
in
jne
ret
mov
push
js
les
enter
dec
mov
inc
push
jecxz
sahf
mov
sbb
test
out
aam
jo
jnp
in
fcom
or
fs
fs
push
stos
dec
repnz
je
adc
andb
adc
pop
jne
push
shrb
movsb
inc
mov
push
cmpsl
mov
enter
iret
mov
cld
pushf
or
mov
in
fdivrs
int
out
leave
jmp
push
in
outsl
adc
orb
scas
adc
shlb
pop
fsubl
and
loop
xchg
lods
or
call
and
int3
inc
add
push
xchg
cmpsb
loope
std
pop
pop
or
xor
adc
imul
xor
insb
movsb
ja
mov
mov
sub
test
pop
xor
mov
and
dec
mov
ja
ja
inc
and
push
cmpsl
xor
imul
pop
sub
test
push
enter
mov
sbb
cmpsb
lods
out
pop
mov
popf
cmp
rcr
cltd
scas
das
lahf
shrb
lahf
sbb
outsl
cmp
into
cli
ret
jg
and
rclb
fstps
adcb
push
xchg
cmp
outsb
fbstp
add
and
xchg
dec
jmp
inc
test
test
pop
xchg
add
addr16
gs
adc
das
setbe
pop
add
pop
add
int
out
cwtl
inc
subps
adc
out
add
or
dec
lahf
mov
fists
xchg
lods
ret
stos
or
cld
js
push
xchg
lock
and
inc
fcoms
sub
pop
fnsave
test
pop
repnz
sbb
orl
lcall
mov
push
nop
push
arpl
fiadds
lcall
inc
es
pop
out
jl
inc
adc
adc
push
add
adc
into
into
cmpsb
sbb
adc
in
mov
and
mull
pop
push
sti
bound
and
mov
inc
cmp
in
popa
out
jo
pushf
dec
mov
sub
mov
push
stos
in
out
xchg
data16
dec
cmp
mov
sub
fsts
jecxz
orl
lahf
in
xchg
push
mov
idivb
in
sbb
sbb
shl
lcall
pop
dec
lds
scas
dec
mov
add
add
shrb
or
popf
fcmovnb
xlat
lds
ficomps
aaa
outsl
out
sbb
fisubs
xchg
xchg
shlb
or
add
dec
in
sbb
mov
test
out
lea
xor
out
push
lods
mov
jle
gs
push
cmp
lea
and
shrb
xor
sbb
icebp
pop
pop
xchg
in
push
add
sub
jnp
insl
fst
dec
cli
jecxz
jl
fwait
rcrb
ss
shl
ja
cmpsl
jge
lret
iret
aas
rorl
imulb
jne
push
adc
push
in
in
mov
mov
mov
pop
cmp
js
test
xor
lock
fwait
lods
jno
fisttps
push
sti
dec
and
movsl
movsb
loopne
ret
pusha
push
test
clc
jo
fidivrl
stos
stos
sbb
stos
ds
out
lret
push
sti
fnsave
out
and
adc
jl
jno
daa
scas
jnp
adc
nop
in
cmp
icebp
pop
jg
xchg
cmp
adc
xchg
jnp
adc
jns
adc
and
out
mov
imul
push
pop
jne
mov
pop
add
mov
xor
pop
iret
xor
sub
ds
mov
fstpt
mov
outsl
mov
pop
js
mov
mov
setne
lods
lods
cmpsl
sbb
lahf
shll
nop
mov
rol
sbb
mov
push
in
mov
loope
int
out
push
jge
xchg
mov
pushf
xor
fs
rcrb
fisubl
dec
js
xor
add
jno
andl
jg
mov
pop
das
bound
adc
cmp
call
inc
in
shlb
mov
sbb
test
inc
adc
jge
in
fsts
fisubrs
push
or
nop
mov
nop
mov
xor
mov
push
xor
add
fcomi
mov
fdivs
into
fadds
subl
xorl
andb
xor
jae
cmp
pop
fsin
and
xchg
inc
jno
mov
int3
xchg
push
aas
in
push
mov
mov
test
push
dec
mov
fldcw
popf
addr16
sub
inc
lock
jno
xor
adc
ljmp
fisttpll
pop
clc
insl
fidivrs
adc
mov
xor
sub
shl
jnp
mov
mov
pop
sub
shrl
call
push
xchg
clc
add
out
popf
mov
movsb
pop
icebp
dec
mov
test
xor
fnstsw
fcompl
mov
mov
ja
and
add
jno,pn
mov
dec
cmp
in
add
loop
insl
test
cmovl
adc
jb
adc
lahf
push
dec
add
or
out
inc
sbb
loop
in
mov
push
fwait
cwtl
popf
in
cmp
mov
dec
inc
not
push
jp
sti
imul
inc
icebp
fidivl
clc
test
icebp
nop
xorb
dec
cmp
rcll
dec
ss
sub
nop
mov
mov
push
or
inc
nop
dec
pop
mov
mov
lds
int
mov
push
les
cmp
lds
pusha
jne
subl
icebp
daa
or
sbb
in
xchg
sub
dec
aaa
add
adc
jmp
scas
xchg
popf
jno
in
mov
xchg
cli
mov
mov
xor
adc
jmp
outsl
and
adc
dec
and
dec
xor
fidivrl
jb
mov
in
pop
xchg
popa
inc
jge
xorl
orps
lret
sbb
in
push
cld
lcall
cmpsb
dec
jne
scas
fists
ret
aam
lock
pop
lods
adc
bound
js
mov
sbb
aaa
dec
lods
shrb
imul
arpl
sbb
aas
ret
testb
push
adc
xchg
lods
dec
inc
cmp
sub
xor
xchg
in
or
fbld
jo
pop
and
cmp
pop
adc
mov
adc
jne
testb
sbb
mov
mov
mov
pop
sbb
dec
xor
insb
pop
sub
mov
jl
xchg
pushf
pusha
sub
enter
dec
test
cmp
add
repz
add
sbb
divb
insb
mov
adc
or
sbb
ret
fidivrs
movsb
mov
ss
mov
or
mov
test
pop
xchg
fsubs
out
test
adc
xchg
mov
movsb
xor
stos
sbb
adc
inc
lcall
add
jecxz
cmpsb
or
in
dec
pop
scas
add
dec
int3
aaa
loop
or
enter
mov
into
out
insl
cmp
mov
movl
adc
sbb
shl
in
test
sbb
mov
js
aam
mov
es
into
jae
out
xorl
sbb
nop
test
sahf
pop
lods
add
jmp
sub
stos
add
xchg
sti
jbe
add
dec
imul
test
test
jmp
and
mov
daa
dec
sub
cmp
mov
pop
push
mov
ret
hlt
dec
cmp
pop
lock
movsl
cld
cmp
leave
test
pop
jecxz
pushf
sub
cmp
adc
sub
mov
cmp
jecxz
ret
ds
sbb
lcall
sar
push
jmp
outsb
mov
or
ja
inc
add
lret
or
push
and
pop
sbb
data16
sub
mov
aad
xor
and
and
repnz
out
std
jmp
cs
dec
jg
or
nop
sbb
pop
sti
mov
shr
pop
xchg
cmp
fildll
out
cmc
adc
das
lods
push
loope
jb
and
in
push
andb
into
movsb
jo
lahf
push
pushf
ret
inc
pop
ss
xor
and
mov
and
cmp
sahf
add
arpl
adc
popl
dec
sub
or
xchg
push
enter
lret
fldt
add
mov
incb
mov
inc
sbb
mov
mov
out
fdiv
repz
inc
and
sti
movd
pop
sbb
mov
jl
aam
adc
aas
adc
and
sub
adc
aaa
jo
loopne
fcoms
or
repnz
cltd
mov
jg
shll
loopne
jb
sub
cmpsl
ret
xchg
daa
gs
dec
mov
mov
mov
cmpsl
xor
cmp
outsl
push
inc
mov
outsl
xchg
mov
ret
das
mov
sbb
ret
out
fistl
std
imul
xchg
imul
mov
dec
das
jge
inc
push
jg
mov
jge
and
aam
in
fdivl
test
stos
cmp
fmuls
mov
add
js
les
pop
fucom
mov
jl
jecxz
cmpsb
dec
ja
jbe
mov
icebp
dec
mov
test
xchg
sub
xor
xor
cmpsl
inc
outsl
jnp
sbb
je
outsb
xchg
adc
push
aad
jae
imul
adc
inc
in
mov
cli
mov
mov
dec
lea
iret
mov
cmp
fstpt
scas
push
aaa
dec
jns
inc
jmp
pop
outsb
pop
sub
dec
cmp
out
pop
mov
insb
inc
bound
es
lret
adc
pop
test
cmc
int3
outsb
cmp
fsubs
or
in
aaa
pop
xchg
dec
sub
cli
pop
cs
lahf
out
outsl
cmpsl
xchg
stc
inc
sbb
xchg
test
xor
xchg
ljmp
mov
fistps
loop
rcrb
out
jmp
cmp
arpl
adc
cmp
cltd
scas
push
int
cmpsb
xor
cmp
inc
data16
jmp
int
cmpsl
xchg
or
rolb
inc
cmpb
fstpt
aaa
sbb
gs
mov
sbb
incl
xchg
xor
mov
test
in
add
push
xor
cwtl
fwait
mov
adc
cmp
xchg
inc
in
mulb
lahf
in
add
pop
jo
stc
add
push
sub
test
xchg
sbb
sarb
jae
pop
sub
aam
jb
and
test
dec
mov
stos
adc
nop
stos
inc
xchg
nop
cwtl
xchg
push
jns
fwait
dec
lahf
bound
lahf
vmread
or
jmp
lret
repz
shl
aas
mov
outsl
xor
add
pop
pusha
loopne
mov
in
adc
orb
sarb
adc
or
aam
push
aad
shlb
std
mov
cwtl
jb
test
gs
xchg
jg
or
loop
push
mov
jecxz
lea
movsb
into
or
mov
mov
sub
into
or
mov
fmuls
xchg
xor
mov
xor
xchg
cmp
jecxz
push
negl
int3
testb
ror
pop
mov
rcl
cmp
lea
inc
cmc
stos
push
push
notl
clc
testb
push
xchg
cmp
cmp
loop
jbe
pop
jg
bswap
pop
in
popf
movsb
push
adc
sbb
daa
out
jae
cmpb
repz
aas
xchg
mov
mov
pop
jg
movsw
jmp
sahf
add
sbb
pop
dec
dec
jp
loop
cmpsb
dec
jmp
clc
int
adc
cmp
jo
fldenv
push
mov
jmp
mov
cmpb
adc
adc
popf
std
cmp
fwait
inc
loop
jo
inc
push
movsb
popa
mov
out
sbbl
sbb
sbb
sub
adc
inc
jecxz
xor
in
stc
sbb
repnz
call
ja
repnz
add
mov
test
lret
cmpb
shll
scas
jle
cmp
je
xrelease
jae
fsubs
push
fisubs
jge
rcll
insb
movsl
aas
bound
xor
pop
jge
cmp
xor
cli
mov
cmp
sti
pop
ja
ret
push
enter
inc
inc
loopne
dec
mov
xchg
jns
imul
push
mov
pusha
add
mov
sti
xor
adc
orb
pop
and
push
pusha
bound
lcall
popf
dec
scas
and
mov
popa
pop
icebp
ljmp
pop
xor
xor
lock
das
sti
and
jmp
imul
push
in
jmp
cmpsb
or
inc
cmp
push
loope
mov
xlat
rcrb
inc
push
pop
xor
or
inc
insb
aas
loopne
push
push
mov
mov
lret
push
dec
xor
iret
inc
mov
xlat
push
jnp
xor
cli
inc
mov
jne
loope
or
mov
fucomip
lock
xchg
inc
mov
adc
push
dec
cmpsb
push
cs
xor
jp
movsl
push
xchg
adc
arpl
sbb
enter
test
cmp
push
or
sbb
inc
sbb
sti
daa
jnp
iret
mov
lods
mov
mov
push
stc
jmp
sbb
sub
or
ljmp
movsb
push
mov
dec
add
mov
repnz
dec
imul
jp
mov
lahf
nop
ljmp
es
cld
pop
xor
stc
mov
pop
jbe
jp
outsb
push
cmp
lea
cmc
bound
and
adc
inc
and
popa
outsl
xor
xchg
mov
rol
fsubl
scas
lds
dec
test
pop
fdivs
sbb
adc
jns
xor
sbb
fs
cld
aaa
adc
insl
jle
out
dec
mov
pop
sahf
aaa
scas
mov
dec
fidivl
sub
andb
pop
push
pop
jns
gs
xchg
dec
shll
loop
or
out
out
fcmovnb
addb
loop
xlat
ret
push
dec
rcrl
scas
mov
icebp
clc
movsl
add
stos
dec
mov
cmpsl
pusha
mov
iret
mov
test
inc
push
pop
mov
jbe
cs
js
cmpsl
mov
and
dec
push
add
jb
sub
pop
xchg
jno
push
adc
scas
stos
lea
push
aam
jb
cs
jbe
shr
mov
dec
inc
lahf
dec
ljmp
jo
cmp
jae
xchg
sbb
mov
dec
xchg
cltd
sub
sub
jl
cs
pop
push
lahf
movsl
enter
sbb
mov
popl
sti
insl
insl
jmp
adc
sub
aas
fstl
lds
xchg
xchg
and
sbb
daa
in
aaa
shlb
or
and
jb
shrl
mov
mov
aas
loopne
stos
or
push
dec
in
jmp
jecxz
adc
sti
idivl
xchg
fnstsw
enter
movsl
push
ljmp
dec
or
xorb
jae
mov
rolb
hlt
cld
cmp
out
mov
cmp
stos
enter
lock
jmp
jmp
imul
ret
jns
adc
mov
ja,pn
sti
iret
push
icebp
scas
ljmp
push
addr16
out
push
xchg
fadds
sbb
js
pop
sbb
sbb
jg
jg
movsb
movsb
fs
xchg
lods
or
add
inc
dec
repz
sub
dec
cmp
mov
js
inc
orl
or
xchg
fsts
or
rcrl
cmp
mov
test
jl
dec
and
aaa
out
fldcw
int
cltd
inc
mov
xchg
mov
push
fldl
push
adc
insb
scas
test
push
xor
out
mov
sbb
xor
or
cmp
mov
mov
lea
and
or
inc
rcrl
cmc
pop
or
das
stos
add
bound
pop
data16
mov
lods
fldt
popa
pop
gs
sbb
aam
sbb
aad
dec
loopne
cmp
aam
dec
jb
jb
ret
je
pop
mov
into
or
and
or
xchg
imul
mov
loope
jmp
mov
aas
mov
sbb
test
fldcw
das
insl
pop
sub
test
in
arpl
jae
movsl
sbb
push
push
mov
cmp
inc
imul
vzeroall
pop
sub
sub
xchg
and
out
mov
bound
xorl
xchg
mov
rcrb
inc
ret
xchg
shrl
mov
cmp
mov
loopne
loope
adc
add
inc
mov
push
fmuls
out
std
push
jns
push
dec
cmp
add
ja
call
jecxz
jae
sub
leave
rorb
sbb
into
cmp
or
mov
adc
xchg
and
ljmp
icebp
loope
insl
test
addr16
adc
pop
int
dec
out
jo
or
lret
push
push
cld
fcomp
insw
add
ljmp
mov
jg
lret
frstor
lcall
imul
ja
icebp
dec
xlat
je
sub
sarb
pop
idivb
aas
rcrl
and
sarl
bound
mov
fdivl
lods
repnz
out
add
sarl
cmp
mov
mov
std
aas
repz
sti
xchg
xlat
adc
mov
add
pop
icebp
fwait
subb
add
push
push
xor
mov
fistl
mov
push
sub
pop
dec
xor
lods
lret
rclb
sti
sub
loopne
dec
dec
push
mov
lock
out
test
das
and
or
xor
xchg
test
push
inc
rcrl
jb
es
ljmp
fldl
push
inc
sub
call
sub
xor
in
lret
sub
inc
jne
inc
add
cmp
loop
lds
lea
ret
pop
sub
sub
push
mov
xorl
ljmp
inc
push
sbb
data16
stos
shlb
clc
lahf
fsubrp
cmpsl
mov
add
out
into
mov
fnsave
mov
mov
add
mov
cltd
inc
imul
bound
out
add
sbb
sarl
inc
shrl
xchg
inc
fbld
mov
pusha
divl
nop
sbb
push
mov
stc
add
cltd
mov
dec
mov
push
in
enter
fisttps
pop
sbb
cmp
mov
jp
out
xchg
cmp
lret
push
inc
mov
mov
loope
dec
sub
scas
xchg
xchg
xor
mov
cld
outsl
mov
scas
mov
cmp
out
cmp
adc
ds
sbb
sub
inc
inc
mov
fs
clc
lods
in
or
lods
test
inc
fnstsw
jo
stos
inc
mov
rorl
sbbb
les
out
jnp
adc
iret
cmp
das
fst
pushf
rcrb
ljmp
xchg
xor
aad
scas
je
cmp
out
pop
cmp
mov
or
insb
ss
hlt
or
lds
cli
into
inc
xchg
int3
in
sub
mov
pusha
jecxz
sub
dec
lea
fwait
push
jecxz
inc
jle
ficoms
adc
add
cmp
pop
dec
adc
jmp
add
sti
dec
inc
push
in
mov
cmp
jae
mov
js
cmc
adc
out
dec
in
adc
repnz
cld
pop
outsl
xchg
push
cltd
sbbl
add
out
cmp
mov
push
iret
add
xor
clc
rcl
mov
pop
in
jb
ret
sub
loop
sahf
out
inc
addr16
lods
jns
mov
and
sub
lods
ljmp
ret
sub
sub
push
jne
in
pop
aam
jno
add
test
pop
and
cmp
dec
scas
inc
orb
sub
jbe
aam
repnz
cld
movsl
shlb
jge
cmp
add
push
sbb
and
push
xlat
mov
rcrb
and
inc
mov
xlat
hlt
pop
mov
test
test
lahf
mov
inc
bound
and
lahf
ret
pop
mov
adc
adcl
push
les
dec
das
sub
ret
in
cmc
or
sub
repz
ficompl
jno
push
jle
subb
mov
insb
dec
scas
roll
xor
iret
mov
sbb
push
mov
clc
sahf
rclb
out
mov
and
lahf
fiaddl
popa
test
cmpsb
dec
lods
xchg
push
mov
pop
dec
in
or
cmp
dec
es
lods
into
lret
flds
out
mulb
sub
sub
nop
sub
test
inc
mov
fdivrl
fwait
mov
and
mov
shll
xchg
push
xchg
mov
sub
push
or
push
pop
jg
push
mov
fmul
imul
out
sbb
xor
pop
mov
dec
aad
sub
cmc
cmp
test
dec
int3
or
xor
mov
mov
int
sbb
xchg
sahf
mov
pop
aad
or
inc
test
mov
and
cmp
inc
jne
insb
and
lret
adcl
xor
cmp
mov
mov
mov
outsl
int3
inc
cmp
lret
lcall
insb
lds
notb
pop
pop
mov
mov
sub
outsb
and
in
pop
push
or
xchg
arpl
jle
mull
mov
mov
xchg
jmp
cmc
xchg
pop
cmp
in
sbb
shlb
hlt
int3
fstpt
pop
sub
mov
inc
scas
xlat
mov
adc
push
dec
sbb
jb
pop
stos
adc
inc
in
aas
push
add
mov
bound
pop
lods
jmp
add
mov
push
jge
or
sub
sbb
pop
outsb
cmpsl
lock
lcall
pop
mov
xor
data16
sbb
push
loope
das
lahf
mov
adc
or
xchg
jge
xchg
push
ss
jb
mov
pusha
je
xlat
sbb
dec
sub
pop
cltd
cmp
lcall
in
out
inc
dec
add
jmp
xlat
pop
sub
loopne
lea
push
sti
xlat
xor
rolb
sahf
mov
sahf
scas
mov
fstpl
xchg
aam
fdivl
or
pop
fstps
ret
into
fsin
and
cmp
daa
mov
and
popf
dec
xor
into
or
subb
cmp
xor
push
and
cmpb
xchg
out
loop
dec
adc
add
outsb
aaa
pushf
clc
mov
mov
or
rcrl
xor
jecxz
out
push
sbb
aas
mov
fldcw
push
xchg
es
mov
fwait
xor
fdivl
cld
test
push
inc
inc
into
or
lret
pop
or
leave
dec
fstl
andl
loope
lds
ja
fsubs
or
adcl
xor
lock
cmp
jnp
lods
jl
add
lea
mov
push
push
mov
xor
cmp
and
sahf
cmp
insb
imul
outsl
dec
jne
movsb
clc
xor
lret
sub
push
dec
inc
es
aaa
test
push
sub
jl
mov
mov
xchg
or
out
shll
push
gs
out
shrl
repz
cwtl
push
cwtl
push
sub
mov
xor
jns
addl
idivb
push
in
mov
pop
imul
pop
rol
and
in
xorb
sbb
push
insb
repnz
or
xor
and
fwait
push
lods
adc
adc
imul
push
test
push
push
sub
into
rclb
test
test
mov
ret
push
inc
mov
lea
add
mov
fnsave
mov
inc
popa
ja
mov
xor
es
orb
and
aaa
dec
imul
movsb
rorb
fmull
lret
sbb
imul
int3
mov
dec
lea
fs
dec
push
mov
push
and
out
cltd
push
psubusb
and
test
push
xchg
push
js
jl
sbb
and
pop
mov
nop
ret
mov
adc
xchg
push
in
ret
mov
xor
adc
cmp
rorl
movsb
mov
add
pop
pushf
in
shlb
xorl
mov
lods
mov
push
jmp
pop
fdivrl
sbb
dec
pop
jecxz
adc
jp
jg
dec
nop
and
jg
sub
aaa
or
ja
adc
test
lds
inc
xor
das
leave
aas
sub
or
add
lea
rorl
addr16
fdivrs
dec
xor
push
inc
aaa
inc
lock
cmp
cmp
xchg
add
and
out
iret
repnz
ret
cmc
adc
cmp
or
xor
mov
enter
ljmp
pop
call
jge
add
stos
out
out
gs
sbb
jno
adc
push
jno
jne
cmpsl
or
cmp
or
mov
xor
xchg
mov
adc
push
outsl
xchg
pushf
sub
mov
insl
mov
das
jmp
imul
dec
fisubs
mov
pusha
and
insb
and
ds
mov
push
push
fidivrl
es
addl
test
aas
data16
jbe
cltd
lcall
bound
and
ret
sub
mov
push
sub
adc
gs
clc
adc
fldt
decl
aas
push
imul
mov
xor
nop
cs
fstps
and
bound
jnp
stc
mov
push
loope
sbb
mov
xor
dec
add
xchg
idivl
popf
jp
aad
adc
jp
and
inc
test
stos
mov
popa
nop
arpl
lea
cmc
arpl
es
clc
stos
inc
lret
scas
dec
dec
daa
sahf
and
cmp
imul
adcb
sar
and
xchg
fistl
dec
mov
mov
out
adc
pop
mov
lds
outsl
addr16
lods
sub
sbb
push
pop
imul
sbb
movsl
dec
or
sub
xchg
mov
add
dec
and
ds
imul
xchg
cmp
insb
lret
push
aas
push
sti
push
negl
xor
shrb
jl
je
std
ja
adc
lods
xor
add
or
addb
cmp
or
push
xchg
xor
hlt
loope
cmpsb
jg
out
int
repnz
and
fwait
xchg
xor
push
pop
jae
frndint
stos
mov
repnz
pop
iret
repnz
incb
aas
adc
enter
repz
push
or
mov
popf
dec
fstpl
rclb
xor
sbb
cmp
xchg
arpl
xchg
mov
xor
aas
cmp
into
xchg
xchg
mov
push
jl
push
or
cltd
cs
dec
addr16
dec
movsb
fs
leave
sbb
pop
in
xchg
push
cltd
lds
je
mov
xchg
inc
in
add
mov
test
ja
cmp
jge
rorb
jecxz
cs
loop
push
cmpsb
push
je
fldl
stos
cmp
movsb
sti
sub
lds
adc
xchg
sub
pusha
out
adc
mov
aaa
stc
xor
inc
dec
test
mov
xchg
pop
inc
lret
cmc
xor
call
cmp
pop
jmp
inc
push
jge
lcall
adc
or
out
inc
ljmp
inc
xchg
daa
arpl
loop
pushf
js
push
in
add
jmp
fdivs
jnp
jmp
mov
scas
aaa
int
or
mov
insl
daa
xor
and
shl
dec
and
mov
ljmp
pop
mul
or
fimull
enter
adc
jno
xchg
fcoml
icebp
push
sbb
lock
nop
std
es
mov
push
push
fstpt
insl
push
sbb
xchg
addr16
aam
sarl
sbb
scas
jl
daa
xchg
dec
sub
std
pop
lds
sbb
push
mov
jbe
jle
inc
roll
mulps
ret
ror
pop
ljmp
sarl
push
movsl
bound
and
out
mov
sti
push
add
stos
mov
sbb
mov
cmpsl
dec
popa
out
std
jnp
je
ss
cmpsl
mov
insl
js
mov
cmp
mov
sbb
or
xor
gs
or
jb
imul
inc
loope
sub
xchg
cltd
in
icebp
fwait
or
push
add
inc
jne
out
out
rolb
cmc
jecxz
test
cwtl
in
test
es
pop
ds
sbb
aaa
fdivl
cld
fldenv
into
pop
jns
xor
mov
pop
sub
pop
sbb
imul
fdivs
inc
add
adc
repnz
outsl
jmp
gs
loope
and
xchg
jg
scas
pop
mov
xor
test
jge
lret
rclb
or
push
fisttps
adc
adc
pop
in
pop
jns
cmp
lods
fcom
shll
scas
enter
xchg
cld
nop
xchg
sub
arpl
mov
rclb
mov
ret
and
stos
arpl
dec
das
push
pop
jmp
pop
xor
lret
bound
push
fcmovu
leave
jge
mov
imul
pop
rorl
jbe
pop
icebp
pop
mov
fsub
loop
cld
fldl
pop
inc
faddl
mov
out
mov
cmp
inc
insl
movsb
adc
sahf
pusha
icebp
pop
inc
mov
fwait
mov
xor
adc
push
mov
ljmp
mov
inc
test
and
pop
iret
fists
push
cs
neg
pop
out
hlt
pop
mov
clc
je
jb
lahf
lret
out
cmp
enter
inc
mov
and
mov
cmpsl
fisttpll
add
outsl
jns
jle
mov
imul
dec
testl
daa
mov
fsubp
xor
fistpll
mov
repnz
jno
sbb
es
pusha
push
into
adc
lahf
insb
fnstenv
push
pusha
daa
push
out
push
in
arpl
insl
mov
stos
lock
jns
icebp
push
les
cmp
add
out
push
jp
sub
jns
out
dec
dec
hlt
loop
in
sub
dec
enter
loop
jmp
push
aam
aaa
push
sbb
dec
mov
fdivrs
clc
sub
adc
in
pop
adc
std
cli
mov
fs
jne
pop
cmpsb
subl
out
jae
outsl
out
or
push
xor
push
jl
in
call
stc
pop
lcall
rolb
test
aaa
push
scas
xchg
in
lret
xchg
aas
mull
sub
and
mov
cmp
push
sbb
call
sti
cwtl
mov
jno
mov
inc
sahf
outsl
push
shll
xchg
sbb
sahf
push
fbstp
movsl
btr
xchg
es
outsb
push
ss
add
aam
shl
add
pop
sbb
aad
lds
jbe
jl
mov
aaa
mov
jl
pop
adc
cltd
loope
out
lods
jl
xchg
mov
push
or
xor
pushf
mov
lock
in
aaa
adc
jne
mov
pop
cmp
xchg
mov
push
jbe
movsl
fnclex
jns
push
jg
add
fwait
test
xor
add
daa
in
movsl
incl
ret
cwtl
sub
shll
rcll
arpl
mov
inc
inc
je
movsb
push
insb
sbb
addl
es
jb
addb
daa
scas
sbb
in
aad
push
scas
push
in
mov
xchg
ds
ss
jno
jns
mov
mov
out
sahf
inc
movsl
scas
lods
jb
rorb
pop
and
and
cltd
dec
fadd
xchg
dec
pop
jno
scas
and
mov
shl
or
jnp
mov
gs
movsb
jle
jmp
push
sbb
xchg
ljmp
outsb
and
iret
or
mov
fs
les
movsb
jns
cmp
cmp
inc
dec
ret
icebp
sub
je
or
fstl
adc
outsb
popf
lods
ret
mov
inc
cmc
mov
and
subl
scas
adc
xchg
andl
mov
mov
fsubrs
push
into
lods
dec
xor
xor
pop
repz
add
shl
sub
mov
cmp
call
push
sub
mov
lcall
loop
sahf
scas
push
inc
push
je
aaa
push
mov
imul
xor
hlt
repz
popf
push
add
daa
rorl
mov
dec
imul
mov
lds
aaa
xchg
ret
add
and
add
test
es
mov
fmull
inc
bound
mov
scas
sub
js
push
mov
mov
add
or
les
jp
cs
jecxz
xor
sbb
dec
cmp
push
sbbl
aad
in
xor
dec
lods
mov
mov
movsb
in
les
mov
enter
sbb
xchg
inc
or
push
pop
xchg
dec
sbb
push
iret
xor
rcll
adc
cmpsl
bound
addl
pop
ret
mov
mov
or
out
xor
pop
loope
je
mov
dec
and
fistps
sub
pop
or
pop
inc
lcall
inc
pop
sar
notl
in
fwait
or
ret
cltd
pop
push
and
cwtl
pushf
std
iret
and
fdivrs
stos
and
gs
jo
dec
jne
pop
push
or
mov
fsub
jne
shrl
and
adc
test
cmpsl
in
xchg
sahf
and
js
mov
cwtl
cmp
jmp
xor
push
es
ret
fadds
xchg
mov
and
jl
cltd
and
scas
mov
sub
iret
cwtl
xor
icebp
jp
xlat
xor
dec
enter
mov
cmp
jb
dec
mov
add
xchg
and
sub
pavgb
inc
dec
pop
sbb
jae
add
pop
hlt
inc
sub
adc
mov
ret
mov
stos
leave
pop
mov
pop
dec
inc
pop
es
enter
lahf
add
adc
loopne
sub
mov
out
leave
mov
or
das
cmc
xchg
shlb
call
mov
or
pop
sahf
add
cmp
loope
dec
das
jl
cmpsb
push
in
ss
subb
push
subb
shr
repz
sub
ss
push
rorb
aad
pop
scas
xchg
push
mov
test
dec
mov
nop
push
call
insb
push
xchg
fst
sub
loope
aaa
outsb
pop
dec
sahf
flds
scas
mov
jo
inc
pop
popa
xor
sti
in
xlat
inc
xor
aam
and
fldpi
jo
xlat
push
jns
jmp
in
sbb
add
sbb
ljmp
ret
xchg
lahf
insb
cmp
add
aad
adc
push
dec
dec
mov
out
loopne
int
insl
inc
das
fdivs
lods
add
xlat
adc
rclb
pop
or
stos
adc
sbb
sbb
lret
sbb
mov
incl
out
int3
popa
mov
popf
movsb
rcrl
jmp
inc
jge
outsl
push
adc
dec
mov
xchg
cltd
aam
push
cmc
sti
cmp
mov
fwait
and
test
and
les
es
rorl
push
jne
push
sbb
adc
in
leave
les
aad
and
outsb
stos
push
sahf
cwtl
push
fistpll
sub
imul
xor
jl
and
mov
pushf
popa
pop
dec
adc
movsb
in
jmp
lahf
mov
inc
and
mov
sub
jecxz
mov
ljmp
push
or
add
sub
pushf
mov
mov
jecxz
std
jmp
daa
jnp
and
test
ret
jo
xchg
dec
dec
pop
mov
adc
fidivs
xchg
sbb
sub
ss
test
imul
cltd
xchg
adc
sti
icebp
pop
jae
leave
mov
xlat
push
or
cmpl
mov
jae
daa
pop
or
pop
xchg
pusha
xchg
mov
push
in
add
mov
cmp
add
in
inc
test
xor
dec
cmpsb
popf
addr16
stos
dec
lds
jp
imull
mov
sarb
out
mov
sub
dec
adc
out
out
or
mov
sahf
and
insb
je
xchg
shrl
inc
scas
or
mov
fisttpll
gs
cmpl
mov
mov
int3
roll
lods
mov
xchg
jnp
call
and
jno
popf
jmp
xchg
cltd
mov
fcomps
int
push
call
sahf
mov
int
test
sub
jns
mov
fs
mov
outsb
sub
push
scas
lcall
and
and
dec
fidivs
inc
pusha
and
xlat
mov
mov
aaa
mov
mul
cmc
jns
mov
sub
and
out
fs
xchg
mov
fdivs
sti
pop
adc
cmp
movsl
test
scas
mov
in
jle
mov
and
pop
xchg
mov
mov
adc
enter
jns
or
dec
lret
mov
dec
or
repnz
shll
mov
inc
cmp
popa
mov
mov
dec
xchg
cs
fbstp
out
adc
mov
pop
inc
and
dec
sbb
mov
ja
xchg
mov
int
sub
xor
mov
add
in
push
or
fadd
clc
cli
xchg
out
das
sahf
push
xchg
inc
nop
or
xchg
and
mov
xor
aam
mov
or
or
push
call
mov
movsb
dec
jae
shll
lret
jo
pop
loop
xor
inc
loopne
and
sbb
mov
push
sub
fstl
sub
dec
out
cmc
xchg
dec
jbe
ja
mov
roll
test
mov
pop
out
mov
jae
mov
fiaddl
clc
push
dec
inc
loope
push
xchg
jg
cmpsl
push
out
popa
cltd
mov
dec
xorb
or
and
loop
imul
push
dec
out
adc
jl
lahf
xor
mov
enter
fdivr
pop
icebp
dec
dec
fsubl
jg
div
xchg
and
add
jae
out
and
jl
inc
mov
mov
add
cwtl
mov
test
push
aaa
in
test
mov
add
mov
cmp
ret
inc
dec
adc
inc
imul
lret
dec
cmpsb
jbe
jle
mov
dec
mov
inc
push
mov
inc
inc
sarb
xor
adc
fs
mov
shl
sub
sarl
xor
mov
loopne
pop
shl
lods
xchg
imul
add
inc
notl
fnsave
enter
sarb
lea
jbe
gs
int
rcrb
add
jne
test
xchg
shrb
cmp
rorl
cmp
sbbl
insl
pop
jbe
mov
ds
repnz
mull
gs
pop
repnz
xchg
out
into
sub
dec
push
fildll
mov
fldcw
std
adc
xchg
jbe
xor
xor
rcrb
mov
dec
add
lret
fwait
mov
popa
jecxz
addr16
push
push
mov
jnp
shrb
dec
addr16
loope
arpl
test
mov
adc
imul
adc
jmp
repnz
mov
pop
ret
stos
sbb
cmpsw
pop
mov
scas
mov
repnz
cmp
jbe
adc
ja
cmc
mov
mov
xor
xchg
pop
jns
inc
daa
jp
cmp
cli
mov
add
and
cmpb
push
dec
enter
fnstsw
loope
mov
fidivrs
and
lahf
pop
push
fisttpl
push
fwait
mov
push
sbb
mov
sti
pop
mov
ss
cmp
jg
and
movsb
cmp
or
cmp
in
iret
mov
mov
ljmp
mov
in
cmp
rclb
adc
lods
pushf
imul
xchg
pop
inc
dec
sbb
jns
ljmp
outsb
cmpl
outsb
jl
sbb
lea
xor
mov
and
mov
mov
xchg
mov
cli
sbb
cs
ret
lds
push
sahf
hlt
nop
jne
les
cmp
or
popf
mov
call
loopne
loop
sets
push
jae
push
adc
xor
xor
xor
mov
push
jge
jb
adc
aam
mov
popa
repz
loop
ficomps
out
mov
cmp
mov
in
in
push
or
and
xchg
jp,pt
call
data16
cmpsl
ret
rorl
icebp
in
aas
push
sub
sbb
dec
add
stc
xchg
fwait
mov
cmc
jbe
jo
jmp
repnz
pop
loopne
mov
sub
sub
stos
aad
icebp
or
fwait
ljmp
jb
or
jae
push
mov
sbb
out
ds
in
push
cltd
test
mov
out
xchg
pop
es
mov
add
out
or
lea
mov
xor
xor
out
or
adc
jmp
and
xor
inc
lods
dec
mov
stos
push
daa
pop
push
sahf
pop
incl
stos
pop
mov
push
cmc
xchg
fists
mov
pushf
fldenv
loope
aas
loop
or
adc
cmpsb
mov
jecxz
lods
stos
sub
push
inc
or
test
mov
dec
or
fs
mov
xchg
rcll
nop
cmc
sahf
lcall
insb
xor
sar
add
push
orl
mov
adc
push
or
or
outsl
mov
or
pop
hlt
lret
pop
cmpsb
and
inc
pop
jns
cmp
nop
shrl
sub
into
repz
or
xor
push
dec
fcomps
mov
stos
shlb
iret
push
imul
orb
loop
mov
mov
int3
xchg
mov
movsl
mov
mov
lds
loopne
rcll
mov
sbb
repz
lret
xchg
aam
data16
mov
mov
hlt
add
mov
xor
add
je
xor
pop
push
xor
repz
cmpsl
xor
out
jno
repz
mov
push
xor
lods
pop
jecxz
inc
jne
loopne
fsub
push
xor
xchg
iret
cmp
mov
mov
ret
pushf
mov
in
cld
repnz
insl
dec
cld
cmpsb
lret
sbb
mov
or
int3
addr16
jne
cli
sbb
scas
rorl
mov
xor
adc
jb
gs
dec
mov
sub
dec
jmp
push
iret
ret
mov
in
popf
sub
inc
pop
andl
adc
shrb
mov
ret
clc
ljmp
and
popa
cwtl
pop
pop
in
fidivrs
inc
inc
pop
std
lods
inc
test
fildl
pop
jle
pop
es
fisubrl
sub
or
adc
test
in
hlt
aam
packssdw
xchg
lock
clc
or
out
mov
icebp
fimuls
imull
mov
popa
mov
enter
out
nop
and
pop
sub
sub
sbb
popa
add
mov
inc
pop
ljmp
lock
lret
scas
hlt
fiadds
sar
mov
adc
xor
insb
test
pop
adc
mov
mov
rep
jmp
ja
lahf
or
sub
je
dec
push
cmp
mov
jno
mov
imul
dec
loope
xchg
sbb
and
xchg
and
and
and
jns
jno
adc
push
xor
scas
pop
ss
pop
mov
in
lods
fstpl
in
inc
ret
rclb
jecxz
les
jne
jp
mov
loope
cmp
iret
sbb
cbtw
inc
and
add
dec
dec
dec
xchg
lods
xor
cmp
aas
dec
outsb
xor
fs
sub
movl
test
int3
fidivl
faddl
mov
mov
sub
mov
add
sub
sahf
enter
loop
or
xchg
mov
movsb
stos
into
dec
cmp
fbld
mov
insl
pop
adcb
push
add
mov
xlat
pushf
sbb
jg
inc
and
mov
scas
enter
stos
mov
cmp
ja
mov
cmp
xor
sbb
rcr
mov
dec
jle
fidivrl
jecxz
add
and
mov
subps
bound
dec
cmp
mov
divl
scas
inc
rclb
andb
jge
and
sub
lods
orb
test
movsl
in
dec
xor
pop
lcall
popf
pop
arpl
loopne
mov
ss
lret
outsl
notb
push
in
mov
dec
pop
adc
int3
jnp
fldl
jno
or
cmp
xor
pop
push
loopne
fsubrs
cld
and
xchg
stc
das
pop
outsb
fcmovu
jae
jb
in
js
jl
shlb
pop
shrl
ficomps
lahf
and
in
jns
dec
aad
lds
into
pop
int
fnstenv
mov
push
jns
popa
insb
add
gs
push
aaa
pop
idivb
add
or
sub
jecxz
jl
xchg
jle
push
ret
jae
xchg
cmp
cmp
aas
add
ljmp
sub
push
pop
imul
pushf
bound
push
rcr
adc
lahf
jge
mov
cli
jbe
push
cmpsb
push
ret
insb
rolb
xor
cmpsl
dec
and
mov
pop
dec
outsl
dec
or
icebp
sub
movsl
or
push
cs
xchg
flds
dec
mov
xor
cs
addr16
pop
pop
xchg
jbe
aam
dec
lret
addr16
mov
adc
cmp
ja
aam
pop
mov
add
mov
cmp
xorl
jl
push
repz
insl
test
outsb
and
and
lcall
mov
lods
jnp
adc
mov
dec
pushf
adc
mov
call
rcl
inc
leave
adc
jmp
cld
into
shrl
dec
fucom
and
push
nop
jge
in
jo
adc
sahf
dec
mov
test
sarb
xchg
push
mov
movsl
xor
and
sbb
aaa
cmpsb
mov
addr16
icebp
cmc
cli
leave
lcall
stos
mov
lcall
push
call
jge
push
and
push
cmpsl
in
repnz
in
jmp
enter
mov
je
lods
inc
adcl
aad
sub
dec
loop
mov
mov
dec
int3
pop
inc
sbb
jae
sbb
mov
cmp
pop
push
scas
in
das
add
xchg
js
add
inc
mov
in
int3
sbbl
jmp
fldt
mov
pushf
push
inc
popa
and
xlat
rorb
mov
sahf
sbb
mov
test
cmp
cmp
xchg
xchg
cmpsb
in
scas
jg
sbb
xor
pop
pop
xor
adc
ja
push
add
adc
das
out
or
mov
in
imul
dec
push
jmp
pop
push
or
jge
adcb
sbbl
sub
mov
repnz
mov
aad
pop
jbe
sti
push
stc
test
bound
into
lcall
pushf
aas
xlat
pop
sti
push
push
xor
push
cltd
fimull
xchg
add
lock
mov
jbe
push
pusha
jno
dec
enter
dec
or
movl
rcll
out
inc
add
pop
adc
cmp
popa
filds
out
inc
bound
jge
lock
lahf
inc
inc
pop
shl
popa
cmpsb
fists
outsl
mov
jmp
cmp
ljmp
and
lea
ret
and
jae
push
bsr
sarb
ret
xor
push
sti
jnp
xor
ret
and
inc
sub
mov
dec
sub
ja
pop
xorl
cmp
mov
xchg
xchg
movsl
push
shrb
xchg
pop
xchg
adc
sarb
or
call
adc
xchg
push
in
cld
aaa
pop
and
mov
lret
inc
rorb
jg
ja
xchg
mov
pop
add
stc
add
stos
lret
xlat
jae
outsb
loope
jle
mov
pop
mov
adc
lret
sbb
enter
repz
popf
inc
push
xor
stos
and
mov
and
repz
lods
dec
add
adc
add
arpl
mov
call
pop
pop
scas
xor
or
int3
lcall
lds
orl
push
push
jl
insl
insl
cmp
loopne
mov
pop
or
das
sub
pop
in
bound
push
lret
mov
enter
jl
aam
xor
lcall
jl
sub
xlat
jnp
movsl
mov
rcrb
mov
jmp
ret
loope
sti
shl
and
xor
aas
mov
not
inc
lds
je
xor
sub
push
add
int
std
loopne
scas
loope
jmp
mov
insl
fimuls
es
jp
mov
sti
fsubs
loope
xchg
lods
jns
decl
inc
mov
out
aas
push
and
push
adc
pop
sbb
adc
push
pop
mov
iret
mov
jno
adc
mov
enter
pop
in
xchg
cmp
xor
std
in
or
mov
ret
imulb
rcr
jne
mov
ret
lods
cmp
mov
imul
cli
insb
xor
fbld
jge
mov
xchg
sub
inc
movsb
aad
mov
fidivrl
add
xchg
mov
imul
pop
imul
stc
add
push
xor
aam
add
popa
scas
popf
push
arpl
xchg
out
sub
iret
jge
aad
sbb
pop
jae
leave
ret
pop
cltd
mov
cmp
jae
jecxz
xchg
xchg
and
loopne
jecxz
repz
jo
shlb
pop
sbb
mov
nop
clc
jge
push
mov
stc
dec
push
mov
cld
leave
push
leave
cmp
push
lret
shlb
pop
xchg
imul
push
aam
scas
mov
out
cmp
stc
cmc
add
fwait
xchg
pop
push
addr16
cltd
pop
push
dec
lods
ds
fisttps
fwait
inc
lds
in
leave
cmp
roll
sbb
bound
pop
mov
into
push
into
xor
jb
mov
jmp
jne
dec
stos
jne
repz
cmp
pop
out
enter
dec
dec
sbb
loop
pop
mov
cld
cli
xchg
insl
mov
iret
mov
or
stos
adc
repnz
out
ficoms
icebp
dec
sub
arpl
cmpsb
and
clc
or
loopne
xor
repnz
adc
rolb
scas
outsl
leave
pop
xlat
cli
leave
fiaddl
les
int3
add
xor
cmc
popf
push
cmp
add
mov
jb
jg
pop
add
xchg
inc
jl
cltd
arpl
ja
cmp
aaa
xlat
sti
test
andb
cmp
push
dec
out
lea
lock
dec
mov
cs
leave
daa
fs
sbb
or
xorb
lahf
or
test
add
jg
movl
lds
inc
or
mov
xchg
push
sbb
cli
jmp
shl
mov
stos
mov
popf
in
cs
data16
or
pop
sqrtps
out
ljmp
push
pop
test
inc
push
jae
imul
shlb
imul
jle
ficomps
xchg
add
jb
cs
mov
mov
insl
cmpsb
popa
fsubr
cmp
cmpl
lods
cmc
lea
mov
inc
add
fdivs
cs
jge
add
mov
insl
mov
out
rcll
push
sbb
xchg
and
inc
dec
sub
inc
mov
jl
jns
add
cmc
sti
xor
pop
jbe
push
push
js
aad
mov
xor
ror
shl
mov
js
dec
xchg
gs
fsubr
inc
and
mov
sbb
fs
dec
xchg
xor
sub
or
leave
scas
cwtl
ljmp
in
push
nop
ljmp
and
cmp
sarl
jle
clc
lret
int3
push
cmp
scas
pusha
pop
cmc
lcall
inc
rep
sub
sub
enter
and
fldt
shlb
push
ss
inc
mov
pop
mov
cld
data16
aam
mov
sub
test
mov
dec
jo
fisubrl
mov
push
add
inc
mov
inc
in
or
xchg
sub
jle
and
lock
ss
inc
push
and
mov
test
mov
popf
mov
adc
sbb
shl
and
xor
xchg
add
xchg
data16
push
test
movsl
xchg
jmp
mov
push
adc
std
popa
lods
inc
arpl
adc
push
dec
mov
xchg
mov
xor
out
mov
fildll
pushf
daa
pushf
xlat
ds
sub
and
add
jl
or
push
sub
inc
fists
xor
dec
sbb
test
repnz
aad
push
sbb
mov
stos
sub
es
jg
mov
pop
jl
imul
xchg
jl
pop
repnz
sbb
cmp
xchg
dec
sub
daa
arpl
arpl
les
adc
ds
lahf
or
inc
hlt
cltd
imul
test
ljmp
xchg
popf
inc
xchg
inc
mov
inc
js
fxch
dec
repz
inc
std
call
aaa
pop
popa
jb
pop
add
in
pop
inc
lret
pop
sbb
xchg
mov
mov
or
add
out
dec
dec
mov
stc
pusha
mov
and
dec
jecxz
cli
push
insl
mov
repnz
sub
hlt
xchg
ret
mov
in
jno
inc
add
mov
jns
stos
cmp
mov
and
aaa
xchg
shl
in
inc
mov
dec
adc
test
or
je
inc
xchg
push
aad
sub
adc
pusha
and
dec
fxch
popf
xlat
leave
mov
sar
mov
es
add
arpl
movsb
push
bound
jle
ret
js
js
stos
cwtl
sti
lea
ret
sarb
or
popa
iret
mov
aas
out
pop
dec
aad
pop
out
lahf
aas
sbb
aas
sbb
push
out
lods
push
int
je
int
adc
or
sahf
dec
insb
inc
pop
sub
push
es
adc
cltd
lods
xlat
xor
inc
arpl
icebp
addr16
or
insl
xor
jno
xchg
add
jmp
or
int3
sub
add
mov
pop
cwtl
repnz
mov
xchg
push
mov
mov
rorb
aad
hlt
xchg
xor
call
inc
rolb
dec
jns
sbb
movsb
icebp
faddl
ret
push
mov
jge
test
xor
shlb
adc
inc
rcrb
stos
xchg
stc
jno
inc
int
adc
mov
add
push
xchg
lret
mov
negl
mov
xlat
sahf
sti
inc
gs
sarb
jge
rcrb
push
push
xchg
insb
into
popl
xchg
lcall
push
add
lea
popa
jno
push
push
out
inc
clc
iret
hlt
stos
or
mov
mov
jge
fistl
pushf
pusha
stos
popa
sub
pop
lahf
dec
dec
repnz
psrld
addr16
aad
imulb
outsl
and
xor
js
mull
mov
cmp
jmp
es
jbe
mov
sbb
mov
adc
push
cld
loopne
adc
cltd
mov
mov
and
fxch
push
movsb
test
pushf
pop
add
mov
dec
test
xlat
int
xor
leave
cmpsb
cmpsl
mov
movsb
icebp
lds
sahf
std
pop
sbb
fidivrl
insl
fmul
mov
sarb
adc
lret
jp
sub
fs
or
ret
jne
add
sub
mov
addr16
jecxz
jo
jg
bound
mov
add
movsb
adc
sahf
mov
sbb
in
push
jo
int
mov
jno
and
jcxz
mov
and
pop
jb
gs
std
xchg
hlt
sarl
mov
outsl
and
cmp
xchg
xor
hlt
les
push
add
or
and
xchg
or
or
sub
xlat
cmp
sbb
xchg
sub
xor
cmpsl
and
shrb
push
xchg
sbb
adc
shlb
in
mov
mov
jge
xor
xor
xchg
in
jl
push
mov
sbb
insl
loopne
call
icebp
out
or
loope
push
mov
cli
xor
negl
ss
pop
lock
pushf
movb
lea
jnp
push
xor
xchg
fildll
aad
lods
pop
add
jbe
pusha
jl
xchg
je
test
or
jg
imul
cmp
push
stc
mov
cwtl
enter
lret
pop
mov
into
lods
lea
or
push
out
inc
data16
jns
leave
sub
ljmp
mov
inc
setae
push
cmp
insl
repz
push
aas
jae
enter
push
add
fnstsw
loop
and
sub
jb
push
jbe
inc
mov
mov
inc
dec
adc
jle
push
adc
test
lret
mov
push
ret
mov
dec
mov
rcrl
adc
jnp
je
or
das
cld
or
roll
sbb
jo
cmpsl
mov
mov
pop
je
lea
test
cltd
pushf
jle
dec
pop
adc
gs
sbb
stos
or
cmc
cld
aaa
test
ret
and
lret
mov
cli
xor
add
outsb
loope
adc
stos
subb
jns
out
add
fldl
pop
dec
cmp
adc
xchg
push
push
jb
mov
mov
mov
enter
mov
roll
add
idivb
or
aas
push
sbb
stos
lahf
or
test
jnp
push
cmp
add
adc
mov
jno
out
sbb
lods
pop
divb
mov
sbb
outsl
jo
dec
fnsave
sub
adc
popa
mov
loopne
sbb
mov
xor
sbb
xchg
popa
xchg
pop
cmp
lret
pop
adc
mov
cmp
push
inc
mov
movsl
imul
mov
fs
sub
xlat
inc
sbb
mov
xchg
js
repz
aaa
test
add
inc
adc
loope
clc
cmpb
and
mov
punpckhwd
mov
jo
mov
dec
lret
cwtl
cmpsl
aad
jg
loope
xchg
data16
pop
flds
das
dec
xor
lods
add
loopne
sbb
test
sub
ss
sbb
add
fcompl
loopne
mov
jecxz
add
push
mov
sbb
push
ljmp
rcrl
mov
mov
jle
jecxz
fwait
insb
inc
cmp
pushf
push
pop
arpl
xchg
or
lds
lret
cmp
push
sub
dec
push
sub
inc
movsb
pop
xsave
xlat
cmp
dec
dec
test
out
sarb
and
arpl
enter
enter
aas
aaa
fwait
add
sub
push
xchg
xchg
fstpl
push
jg
and
dec
mov
fs
test
sbb
pushw
xor
or
aad
sbb
es
push
shll
sub
sub
jle
cwtl
dec
in
stc
lret
std
insl
outsb
imul
loop
call
cmpsb
and
adc
dec
add
pinsrw
dec
sbb
filds
jb
in
test
movsb
stc
and
loope
rorl
lock
mov
cwtl
add
sbb
loope
and
push
xor
imul
lock
mov
pop
iret
stos
sbb
shrb
test
mov
scas
mov
sbb
mov
or
cltd
out
push
aaa
hlt
or
cs
and
idiv
sbb
jmp
mov
mov
pop
inc
cmp
pop
pop
and
push
stc
or
adc
fcmovu
sub
sbb
sahf
xlat
fwait
or
sti
or
sub
mov
insb
insl
xchg
enter
cld
stos
xchg
inc
mov
dec
shr
mov
sub
pop
sar
and
push
cld
sub
loopw
in
or
xchg
addr16
xchg
push
rep
repnz
add
mov
sbb
cmp
fbstp
insb
jne
mov
jae
ret
cmp
daa
or
daa
cmp
adc
inc
outsb
insb
mov
mov
pop
xchg
cltd
push
pop
mov
stos
outsb
add
in
mov
push
xor
insb
xchg
mov
mov
jae
scas
insl
dec
mov
sahf
leave
out
mov
clc
sbb
in
ret
jge
adc
xchg
push
adc
dec
and
fiadds
scas
xchg
cmp
movsb
pop
push
je
pop
mov
or
or
add
adc
in
mov
test
inc
js
dec
fisttpll
pop
jns
xchg
mov
jl
cld
mov
fcmovnb
and
xor
jns
movsb
imul
lret
add
pop
and
lea
jbe,pt
pop
insb
or
add
jl
pop
insl
add
into
out
icebp
out
mov
push
push
inc
pop
popw
popf
loope
rclb
and
imul
push
inc
cwtl
inc
inc
adc
add
sahf
xchg
pop
mov
shll
mov
fists
imul
invd
and
sarl
aam
mov
or
test
ds
clc
cld
loope
xor
adc
add
and
int3
mov
into
ss
in
inc
nop
mov
ljmp
popa
loopne
and
popa
push
cld
lcall
pusha
cmpsl
lock
cmp
mov
mov
sti
data16
sub
fidivl
xchg
ret
fcomps
incb
or
pusha
cmc
daa
loopne
cmp
push
pop
leave
cmpsb
mov
xchg
pop
outsb
sbb
dec
inc
or
xchg
inc
and
sub
add
pop
pop
orb
icebp
pop
mov
jl
or
cmp
adc
aam
sti
les
pusha
mov
hlt
std
and
push
sbb
lock
mov
mov
mov
xlat
jecxz
xchg
scas
pop
adc
in
mov
mov
sti
sbb
push
test
cmc
arpl
xchg
dec
fs
cmp
sbb
adc
fstl
iret
sbb
mulb
jb
push
sub
iret
mov
insl
aam
lods
in
mov
inc
jecxz
fiaddl
jecxz
jne
sbb
xchg
adc
dec
and
mov
clc
movsb
add
adc
add
icebp
push
movsl
jno
ss
push
mov
lcall
scas
cli
int
pop
dec
cmp
cld
pop
or
pop
mov
sbb
jmp
stos
mov
mov
mov
add
cmpsb
mov
add
shrl
mov
or
das
cmp
push
in
jge
in
mov
in
gs
push
sub
fwait
mov
jmp
sbb
mov
mov
dec
jae
mov
inc
mov
mov
test
xorb
fstpl
addr16
fildll
jne
add
or
int
ds
lret
add
jl
pop
add
sub
sti
jmp
mov
mov
jne
aam
xchg
mov
sub
and
add
and
movsl
push
fucompp
imul
fwait
fldcw
push
sbbb
scas
xor
sbb
mov
xchg
hlt
les
in
inc
aad
mov
lcall
xchg
pop
dec
add
cld
movsb
popf
adcl
xchg
out
mov
xchg
cmpsl
andb
push
cmc
jp
mov
sbb
jecxz
sub
pop
pop
pop
ljmp
dec
or
or
mov
das
pushf
mov
mov
jo
xchg
rcrb
fcom
aaa
pop
lods
jp
jno
push
mov
dec
daa
shrb
pop
les
sub
sub
ljmp
subb
ds
es
cmp
mov
push
add
adc
ljmp
cmc
mov
lea
xchg
jo
les
push
dec
outsl
pop
adcl
stc
mov
call
jle
pop
fimuls
std
xor
fisubs
in
inc
push
repz
or
cltd
imul
fnstenv
jnp,pn
pop
in
lods
and
ret
fadd
lods
rorl
mov
push
in
dec
lods
rorl
aaa
mov
cmpsb
lret
jae
inc
aad
fsubr
out
pop
insl
imul
xchg
pop
call
pop
mov
xor
pop
dec
js
ret
cmpsl
inc
je
hlt
sbb
inc
or
iret
dec
add
ret
mov
ja
cwtl
cli
sub
data16
lock
xchg
data16
dec
fnstcw
xor
lock
popa
jno
lods
push
push
mov
mul
push
xchg
mov
add
test
lods
add
dec
fld
push
dec
nop
xor
mov
xor
mov
xchg
lock
push
cmpsb
adc
sbb
cld
rcrb
adc
pop
add
jo
pop
testl
sti
jno
mov
xchg
repz
lods
sub
nop
jg
out
adc
mov
sbb
pop
bound
mov
int
std
lea
aad
and
push
xchg
adc
lret
je
and
dec
insl
ljmp
mov
outsl
sbb
stos
add
sbb
and
cmpsl
pop
pusha
mov
sbb
inc
xorb
push
xor
push
mov
adc
mov
jbe
sahf
inc
fs
cli
mov
mov
clc
mov
sub
xor
imulb
add
push
pop
rcrl
daa
ja
xchg
inc
inc
test
and
movb
adcl
fdivp
cmp
fcmovnu
inc
orb
jnp
pop
cli
sub
adc
pop
add
std
add
jle
imul
lock
and
push
fsubr
int
push
jge
xor
enter
mov
and
nop
in
inc
movsl
pop
jne
xor
cmp
pop
test
pop
leave
jle
jns
stc
out
sub
stos
out
lods
mov
js
mov
clc
lahf
inc
or
imulb
ret
fs
jg
test
pop
cld
data16
inc
and
out
and
cmpsb
mov
pop
xchg
cltd
mov
fmul
adc
test
fwait
rclb
data16
outsb
adc
es
out
sbb
push
mov
fs
lock
aas
fildl
int3
and
push
lods
push
data16
dec
cs
adc
push
or
fsub
aas
sub
xchg
popa
addr16
push
sbb
mov
cmp
in
adc
cmp
push
ss
inc
xor
aam
popf
fcmove
fildll
jle
cmc
cmp
push
stos
push
insb
adc
jae
inc
xchg
pop
lcall
fwait
outsb
mov
push
push
cmp
in
outsb
cli
imull
cs
ret
fwait
push
jns
and
filds
les
das
dec
adcl
mov
and
test
scas
xchg
fsubp
iret
fidivrl
lods
jno
mov
dec
enter
icebp
sub
pushf
push
repnz
lahf
cmp
repz
inc
les
cmp
pop
cmpsl
leave
test
out
out
push
lea
imull
in
sub
fwait
cmp
in
rorl
stc
pop
and
clc
mov
or
mov
xor
inc
inc
fsts
jle
clc
pop
xchg
add
out
ret
sbb
stc
jl
xor
mov
rcl
fs
jl
push
sbb
popf
add
popa
inc
rclb
jnp
jg
mov
and
out
jecxz
icebp
adcb
aas
mov
mov
xchg
add
or
icebp
mov
mov
dec
sub
iret
mov
cmp
popa
lea
addr16
lods
sub
idivb
dec
push
push
push
je
cltd
cmpsb
xchg
jg
mov
mov
sub
jno
push
sub
std
out
cmp
inc
pop
enter
and
dec
push
lret
lods
movsl
pop
and
das
or
jo
push
jg
xchg
imul
ret
scas
cmp
stos
insb
jbe
cmp
sub
mov
jne
sub
xchg
adc
inc
or
clc
add
ficoms
push
popf
ret
clc
inc
pop
or
pop
mov
dec
test
jbe
mov
flds
addr16
mov
mov
xchg
mov
out
mov
sbb
jbe
int3
mov
rcr
js
dec
push
scas
les
jns
cmpl
int
cld
pop
jae
add
inc
out
lods
adc
cmpsb
sahf
cmp
stos
push
pop
inc
int3
lea
mov
repnz
pop
notb
sbb
and
hlt
push
jge
popw
jnp
xchg
lea
adc
jp
js
sbb
adc
jns
scas
sub
cmp
int3
jge
jg
cmpsb
or
jmp
or
xor
mov
pop
cmp
xor
stos
inc
sti
mov
movsb
mov
sbb
add
adc
mov
cmpb
cmp
dec
dec
mov
or
push
mov
inc
jmp
lods
xchg
inc
mov
lret
adc
test
mov
js
xlat
pop
xor
iret
enter
fisttps
sub
sub
or
rorl
push
xchg
xor
outsl
mov
repnz
xor
add
mov
pop
lea
mov
sbb
inc
sbb
shlb
mulb
inc
inc
fisubl
xor
sub
push
add
mov
sbb
cmpsb
fnstenv
mov
loope
dec
enter
mov
lcall
push
lret
aaa
das
xchg
ljmp
daa
das
inc
sbb
inc
icebp
mov
sbb
add
dec
aam
rorl
mov
mov
fs
dec
mov
or
in
fwait
rorl
inc
movsl
xchg
push
lods
subb
iret
sub
lods
mov
test
sub
and
aaa
jp
cmp
pop
dec
jnp
dec
std
pop
pop
cli
bound
xchg
mov
je
jecxz
dec
fisubrs
pop
imul
mov
cmp
xor
adc
hlt
sahf
xor
lock
ret
popf
stc
push
nop
cli
inc
mov
lahf
loope
mov
cmpsb
pop
jle
mov
mov
jecxz
or
outsl
jne
int
mov
sub
jmp
ror
push
cmpsb
insl
or
sti
aad
popf
pop
lea
scas
cwtl
add
cmpsl
mov
sub
mov
aad
cmpsb
repnz
mov
mov
aas
js
jl
jmp
sub
adc
scas
push
out
adc
dec
scas
or
inc
cmp
pusha
fdivr
rolb
or
dec
iret
aas
popa
ret
xor
and
cwtl
add
sub
jo
inc
aas
mov
xor
cli
fstps
xchg
xor
iret
rcr
cmp
bound
out
push
aaa
mov
movsb
and
aad
add
and
test
dec
sub
and
cmp
xor
gs
mov
stos
pop
arpl
jle
cmpsb
push
sub
or
xchg
rcrb
cmpsl
and
cmp
in
lahf
jb
cmp
loope
add
add
xlat
cli
cmpsl
adc
fcom
pop
jl
push
ljmp
mov
mov
test
jbe
es
hlt
push
call
mov
sti
lahf
mov
scas
test
adcl
adc
arpl
push
daa
outsb
jns
clc
out
push
lds
and
xor
insb
jecxz
mov
push
add
adc
sahf
cmpsl
fsubl
dec
inc
and
nop
sub
fstpl
mov
dec
or
dec
sub
outsb
subb
js
jae
pop
rolb
push
mov
lods
lcall
daa
lds
jno
pop
mov
cs
push
ret
cwtl
ret
shll
dec
jge
out
hlt
sahf
out
pop
xchg
and
lret
pushf
nop
and
sbb
lds
loop
xchg
aam
or
xchg
push
loop
fisttpl
shll
pop
mov
pushf
ret
sti
push
pop
ss
insb
negl
inc
mov
cmp
inc
fldt
cmp
gs
testl
xchg
test
pop
or
or
mov
push
pop
push
dec
fsubs
jb
arpl
rcl
fcomps
subb
sub
out
sub
fwait
add
fidivrl
mov
add
jbe
daa
cmp
mov
xor
adc
sub
jle
push
clc
or
idivl
imul
sub
incb
cmpsl
test
daa
insl
xchg
jo
jno
in
mov
or
add
inc
mov
sbb
std
std
fstpl
mov
stc
xor
lcall
in
out
fs
mov
add
pusha
mov
mov
rolb
outsl
insl
pop
push
out
and
cmp
push
andb
jnp
sti
arpl
test
push
jecxz
xor
test
div
pop
lods
cmp
and
adc
sbb
je
stos
hlt
fwait
mov
les
xchg
in
notl
and
push
sbb
xchg
push
dec
or
jo
mov
in
mov
sub
cltd
sbb
daa
mov
je
push
mov
push
sbbb
push
ss
mov
cmpsb
dec
std
test
int3
push
xchg
mov
xor
pop
sbb
and
mov
testl
fildl
mov
inc
xchg
fildl
icebp
das
mov
ja
fs
cld
es
mov
jno
cmpsl
inc
call
mov
fs
xchg
adc
xchg
ret
mov
int
xor
movsb
mov
sub
test
ds
add
xchg
fs
or
inc
xchg
out
dec
movsl
shll
xchg
lds
sub
or
inc
notl
dec
pop
adc
jle
mov
insb
inc
loop
jb
inc
mov
or
jbe
stos
xor
cmp
test
cltd
loope
jmp
or
mov
idivl
in
leave
lret
test
aad
cmpsl
jns
cmp
fdivl
cmp
dec
cmpsl
addr16
es
or
jmp
mov
inc
pop
sbb
inc
lret
lods
add
adc
xor
or
xor
adc
dec
xchg
dec
inc
mov
and
sti
ficoml
push
cmpsl
mov
arpl
addr16
lds
movsl
inc
or
popa
xchg
inc
xchg
jg
lea
movsb
iret
dec
jp
pushf
fs
pop
out
jbe
addb
stc
into
add
sub
add
mov
test
sub
rcll
push
push
add
sub
pop
inc
push
pop
cmc
jle
or
nop
fnsave
mov
inc
lods
dec
push
cli
and
outsb
and
jge
aaa
outsb
mov
push
xchg
adc
jl
stc
pop
out
xchg
aam
mov
fistpll
adc
and
fisubrl
jmp
mov
inc
das
sbb
outsb
cmp
and
xor
sbb
inc
adc
shll
xchg
push
daa
push
push
out
rorb
push
adc
in
mov
loop
fiadds
sub
into
mov
lods
mov
inc
add
mov
mov
adc
jo
adc
sbb
jmp
iret
adc
xor
xchg
dec
jp
mov
roll
mov
in
jne
cmp
xchg
sti
xchg
loop
and
mov
enter
loop
aad
scas
inc
cmp
xor
pop
xchg
pop
sub
clc
dec
mov
add
mov
pop
jne
xchg
xlat
test
scas
cmp
add
cmp
fwait
repnz
scas
frstor
loopne
xchg
cwtl
adc
lds
pop
xchg
enter
inc
add
dec
mov
mov
pop
adc
xchg
push
pushf
push
sahf
loop
cs
sti
cld
xor
cs
add
pop
movsl
outsb
sub
orl
cltd
lret
roll
aad
push
or
faddl
fdivl
fwait
lock
inc
dec
jb
or
enter
mov
xchg
mov
scas
popa
lret
sub
maxps
mov
adc
loopne
xor
sarl
mov
or
notl
lock
cwtl
pop
cs
inc
mov
fs
bound
mov
pop
xchg
sub
cli
testl
pop
lods
dec
add
push
stos
insb
pop
cmc
clc
pop
clc
fadds
jno
fwait
cmpsl
mov
push
cmpsb
sbb
and
fisubs
ljmp
rorb
dec
cmp
xchg
and
mull
mov
xchg
mov
inc
rclb
pop
mov
mov
ljmp
dec
inc
andb
inc
jne
lret
movsb
out
mov
pop
and
and
mov
mov
into
cmc
xchg
sbb
fdivrs
xor
lcall
sub
mov
pop
dec
sbb
push
ja
xor
fdivs
mov
lret
push
mov
adc
mov
movsb
mov
lods
clc
shlb
inc
xchg
and
movsb
xchg
dec
fisubrl
sub
push
test
add
lret
add
jle
shll
lret
frstor
sahf
leave
pop
loopne
cmp
shrl
cmp
clc
jg
fidivl
pop
cmp
dec
pusha
pop
aam
repnz
rorb
or
mov
lret
inc
sub
jno
dec
adc
and
lret
daa
bound
rolb
xchg
fcomps
loope
and
mov
aad
cwtl
ljmp
nop
xor
aas
lock
enter
in
arpl
ja
inc
nop
aaa
sbb
scas
jle
xchg
jmp
mov
dec
dec
dec
cmc
popf
adc
pop
stc
leave
shrd
sahf
fldcw
es
scas
inc
movsb
jle
mov
out
stos
jmp
add
js
out
or
sti
push
pop
xor
mov
jns
push
cmpb
cmpsl
add
iret
lds
inc
inc
inc
mov
or
pusha
mov
mov
lea
leave
pop
cltd
jo
mov
cmp
jl
dec
paddb
adc
mov
addr16
cmp
ret
fstl
and
pusha
in
lret
inc
addr16
jbe
pop
sti
mov
out
lcall
cmp
jg
mov
or
cmp
test
js
cltd
aas
rcll
pop
sbb
decl
mov
aam
xor
lret
and
sub
and
push
sub
adc
inc
imul
movsl
jl
push
xor
mov
push
ret
scas
icebp
inc
sbb
adcb
outsl
mov
mov
push
xchg
pop
mulb
gs
or
fcmovbe
loopne
add
xchg
xchg
mov
jg
in
xlat
aas
xchg
inc
push
test
lods
insl
inc
add
or
cmp
jae
and
push
sahf
mov
es
xor
movsb
sbb
pop
addl
outsl
outsl
ret
insb
jl
xor
push
out
mov
pop
mov
inc
or
scas
leave
mov
or
cmp
movsl
cli
je
sub
mov
loope
sbb
xchg
mov
xor
ret
jl
add
cltd
xor
jb
mov
cwtl
js
lret
dec
fildll
ret
jb
and
call
pop
mov
ret
stos
ret
into
push
xlat
jl
and
cs
mov
std
mov
lock
dec
jle
add
inc
fisttps
sub
pop
pop
sbb
inc
rcll
cmpsb
jnp
inc
arpl
push
mov
mov
scas
out
fcmovbe
shrl
sub
mov
fists
mov
push
push
pop
dec
test
insl
repz
dec
daa
xchg
and
push
mov
loop
push
out
jo
cmpsl
pop
and
sbb
fxam
adc
xor
and
gs
lret
inc
jp
cmp
and
cmp
ds
jnp
in
lahf
repz
lret
pop
or
icebp
jl
mov
and
cmpsl
cmc
and
pop
enter
jb
idivb
xlat
and
xchg
mov
shr
add
cmp
pop
xor
xacquire
fidivs
sub
mov
push
fdivs
insl
xor
and
scas
push
inc
jae
arpl
mov
lahf
pop
lahf
mov
mov
pusha
adc
mov
inc
sbb
lcall
mov
lret
jnp
xor
jmp
xor
xchg
popa
lcall
pusha
aas
pop
sub
or
sbb
xor
rcll
stos
dec
cs
lea
hlt
cs
jb
push
pop
xchg
arpl
inc
xlat
sub
jl
js
xchg
test
ss
ret
push
pusha
ss
dec
push
inc
pop
addr16
pop
js
dec
lock
push
pop
pop
and
ret
jns
mov
nop
push
lret
add
dec
mov
repnz
hlt
shld
addr16
in
or
dec
gs
lock
cmpsb
daa
stc
adc
sub
je
cmp
inc
orl
out
jo
jbe
dec
cmp
test
cmp
jne
sbb
test
sarl
shl
pop
insb
push
gs
fidivl
jle
adc
out
mov
std
pop
jae
fwait
fs
ss
arpl
inc
popf
jo
jbe
sbb
pop
mov
pop
inc
imul
adc
leave
pavgb
movsb
pop
and
aas
in
rclb
arpl
pop
aas
push
dec
outsl
call
sar
or
jnp
repz
outsl
mov
inc
mov
leave
into
inc
sar
outsb
add
std
add
stos
out
mov
scas
cmpsb
js
push
jecxz
frstor
sub
into
mov
xchg
int3
jbe
enter
mov
mov
pop
mov
lock
xchg
mov
negb
sub
sbb
sub
cmp
clc
cmovge
mov
in
xchg
sub
xlat
mov
daa
iret
push
inc
cmpsb
mov
out
out
cmc
dec
cmpl
add
lret
mov
or
mov
xlat
shll
lock
sub
loopne
xor
les
pop
sub
adc
lods
xor
mov
pop
ss
cmp
sbb
out
shl
jecxz
xchg
xchg
call
mov
ret
data16
push
and
ja
jbe
push
mov
and
test
daa
add
push
or
mov
icebp
loopne
in
int3
pminsw
mov
repnz
lods
iret
inc
ret
or
adc
ljmp
mov
js
mov
mov
sub
outsb
shlb
popf
lret
jmp
repnz
jnp
pop
les
pusha
sub
cmp
cmp
cmp
ds
jnp
out
jecxz
sub
inc
add
mov
push
mov
dec
mov
loopne
adc
mov
adc
ds
out
mov
or
mov
das
lock
jmp
jg
std
push
xchg
arpl
xchg
mov
test
push
imul
cmpsb
push
enter
test
pop
loope
jle
ret
mov
popa
jae
add
mov
xor
mov
sub
pop
lods
iret
jp
push
lret
sbb
cmp
xor
pop
inc
mov
pop
sub
add
adc
lret
nop
int
scas
xchg
jecxz
aad
andb
sahf
push
pop
mov
sahf
addr16
mov
arpl
std
mov
sub
dec
jl
adc
mov
mov
fsub
mov
jb
add
in
pop
add
cmpb
lods
dec
imul
shll
mov
imull
xchg
notb
adc
das
cwtl
std
and
sbb
jp
out
mov
fisttpl
inc
stc
dec
idivb
stos
xor
jae
sub
or
mov
insb
xchg
mov
rolb
rcr
adc
enter
inc
repz
imull
mov
sar
aas
mov
inc
stos
push
sbb
mov
xchg
aas
jge
mov
jns,pt
outsb
xor
int3
out
aas
pop
jmp
fsubs
cwtl
or
xchg
xchg
push
jno
xor
jae
popa
jmp
inc
adc
xor
lcall
clc
popa
js
iret
mov
push
lret
sbbl
cmp
push
and
or
jo
dec
or
pusha
cmp
inc
cmpsl
outsl
mov
cmp
test
pop
add
push
push
and
jne
test
aam
sarb
mov
jmp
mov
adc
fnsave
xchg
xchg
push
gs
jecxz
jns
pavgw
adc
fcmovnb
xchg
add
enter
sub
dec
movsl
mov
mov
mov
mov
mov
push
adc
lcall
std
xor
push
inc
popf
cmp
jmp
push
arpl
out
xchg
push
xor
jnp
repnz
push
dec
xor
call
dec
xchg
shlb
cmp
hlt
adc
test
into
mov
ljmp
mov
sbb
cmp
shlb
lea
mov
div
push
xchg
outsl
xchg
int
shr
dec
sub
xchg
idiv
in
out
out
imul
jnp
vcomisd
out
push
xchg
cld
ljmp
lock
adc
repnz
dec
movsb
dec
add
jle
ss
nop
sahf
dec
pop
cmp
mov
push
lahf
lcall
inc
add
stos
cmp
lcall
cmpsl
xchg
and
add
jb
cmp
mov
xorl
ljmp
mov
add
dec
sbb
clc
adc
mov
mov
xlat
pop
bound
movsb
sbb
sub
mov
pop
test
sbb
xor
pop
push
pop
cmp
push
xchg
push
nopl
gs
lcall
mov
dec
out
dec
mul
scas
iret
inc
or
fstl
cmpsl
push
and
rcrl
dec
pop
data16
int3
inc
cmpsb
sti
and
lds
jmp
lret
fistpll
sbb
add
pop
mov
lods
mov
lcall
xor
mov
hlt
cli
jns
push
push
xor
pop
lods
dec
jae
repz
xchg
sub
ret
cli
inc
les
sub
adc
aad
cmp
mov
push
movsl
loop
je
adc
pop
hlt
sub
punpckldq
call
mov
or
xor
fstps
ljmp
cli
movl
shlb
ja
jle
nop
aas
dec
mov
pinsrw
pop
aam
test
cmc
xchg
xor
aad
mov
adc
repz
stc
gs
aaa
cwtl
fs
jae
jge
pop
stos
out
dec
cwtl
xchg
jne
arpl
xor
daa
call
mov
push
xchg
xchg
xor
dec
scas
mov
inc
imul
addr16
rep
push
hlt
or
sub
cmp
clc
pusha
xchg
sbb
out
and
shll
mov
and
xlat
out
fbstp
push
arpl
ja
cmp
push
mov
xchg
call
fnstcw
aaa
lret
xor
data16
in
cmp
ds
outsl
notl
fmull
add
repnz
das
lods
inc
pop
pop
inc
arpl
test
push
or
pop
mov
cmc
sbb
sub
pop
pop
jno
mov
stos
push
mov
aad
pushf
sub
divb
stc
jge
adc
jns
push
mov
test
mov
repz
and
dec
fdivrl
mov
sahf
js
loopne
sbb
mov
repz
scas
leave
sbb
loop
mov
stc
test
cmp
push
inc
or
add
nop
push
mov
or
push
and
jns
movsb
popa
sub
sbb
test
jae
push
xchg
pop
pop
cwtl
inc
dec
in
xor
push
cltd
mov
inc
inc
add
imul
and
or
and
xor
ret
push
add
aad
sbb
fidivrs
mov
out
xor
out
add
lods
mov
loop
scas
cmp
jl
push
mov
outsl
mov
inc
mov
iret
xchg
inc
popf
rcll
out
out
mov
xor
push
std
clc
cwtl
aam
cmp
adc
cmpsl
and
add
in
rolb
mov
dec
lcall
jge
ljmp
cmpsl
sub
sti
jnp
or
add
daa
pusha
insb
add
pop
xlat
jne
lods
sbb
fdivr
add
aam
scas
faddl
or
push
jl
stos
cmp
jg
dec
testl
stos
fs
subb
xor
cmp
xchg
aam
cs
js,pn
arpl
dec
movsb
out
cmp
ljmp
das
push
aaa
inc
fadds
adc
fsubrl
test
jp
lock
int3
mull
push
fbld
xor
popf
inc
fisubrl
aaa
pop
jl
xlat
repz
sub
xor
fnstsw
xchg
call
or
mov
int3
cmpsl
or
cmpsl
bound
mov
xor
in
leave
movsb
lods
inc
cmp
mov
xor
aam
sub
scas
out
loopne
mov
inc
test
mov
mov
jp
mov
test
test
fnstcw
pop
in
clc
xchg
call
jecxz
and
inc
mov
sub
inc
push
fs
out
cltd
cmpsl
scas
mov
jne
out
dec
xor
loopne
add
sub
loopne
into
xor
cmp
push
adc
xchg
mov
add
and
out
lods
shll
mov
or
dec
mov
jae
aam
sbb
dec
popa
or
aam
je
push
mov
ret
mov
movsl
sub
shll
push
fwait
lret
push
lret
movb
imul
sub
push
xorl
push
xor
or
or
sbb
cmp
insb
push
dec
orb
adc
push
call
lret
subb
call
sbbb
xor
insb
ljmp
add
xor
stos
pop
lea
out
daa
std
xor
mov
and
sub
mov
pop
pusha
xchg
xlat
xchg
aaa
nop
pop
or
add
out
out
lock
cmp
dec
pop
lods
aas
out
cmp
xor
repnz
cs
jp
lret
mov
scas
stos
lret
push
add
push
push
mov
dec
inc
inc
mov
push
scas
cmc
add
inc
mov
xchg
and
xor
ret
adc
fadds
dec
das
dec
addl
enter
mov
out
mov
paddw
mov
mov
push
loope
dec
scas
test
out
add
push
out
in
push
dec
mov
out
insl
sbb
mov
fildll
adc
push
and
gs
push
sbbb
fsubrl
sbb
out
fwait
pop
cltd
cmp
push
inc
sub
mov
lret
mov
xor
xor
jge
shl
adc
int
jbe
sub
dec
nop
fistpll
loopne
lcall
cltd
push
and
lahf
or
push
ret
lock
into
and
data16
adc
mov
xchg
in
sub
mov
icebp
xchg
dec
or
in
mov
sbb
cs
mov
mov
popf
mov
bnd
push
pop
sbb
lcall
cltd
subl
arpl
mov
fs
mov
jmp
inc
and
leave
or
ja
lret
or
mov
in
data16
sti
mov
cli
js
shlb
cmpsb
sbb
sub
out
pusha
fimuls
mov
test
or
xor
in
sub
add
add
cld
repz
jg
lock
int3
xor
dec
cmp
iret
rcl
jle
mov
or
ljmp
je
adc
leave
in
xor
scas
popa
jge
call
pushf
cmpsb
sbb
pop
movsb
sub
movb
xchg
sub
int3
je
sbb
or
lcall
inc
dec
ret
lods
nop
into
adc
jmp
cmc
call
hlt
je
pop
cmp
lea
arpl
sbb
popf
fadds
sub
div
in
stos
sbb
std
clc
pushf
jns
mov
fcmovu
mov
jg
pop
fst
lods
arpl
cmc
pop
incb
sbb
inc
rclb
lds
adc
inc
fnstcw
mull
rol
lahf
inc
lea
add
test
repnz
add
mov
jg
or
sbb
push
scas
push
pop
jno
ss
stos
out
adc
test
mov
jb
add
and
iret
enter
divl
dec
sub
jle
push
inc
pop
test
xchg
adc
call
inc
mov
pop
xchg
sbbb
xor
test
movsb
xor
inc
pop
dec
test
inc
ficoms
push
in
mov
cli
mov
js
das
scas
loope
adc
popa
clc
mov
test
pop
sub
cltd
cmc
bound
out
push
adc
cmp
mov
adc
jb
jmp
imul
popl
lds
jge
adc
fsubrl
inc
loop
xchg
push
movsl
cmp
cmp
pop
sbb
lret
dec
mov
push
push
test
imul
sahf
data16
sub
sbb
push
xchg
xchg
das
call
imul
int
or
shll
and
push
test
pop
mov
or
pop
lods
cmp
fiaddl
sbb
or
cmp
daa
in
stos
xchg
cwtl
pop
xor
scas
push
test
mov
lods
jae
mov
dec
outsl
sbb
gs
lret
mov
jb
jg
jmp
sbb
mov
adc
enter
sbb
std
mov
or
xor
add
dec
data16
mov
mov
dec
sbb
mov
adc
sbb
mov
cmp
cmp
lahf
int3
testl
fwait
ror
mov
push
xor
ljmp
mov
mov
sbb
test
aad
and
ja
xchg
test
stc
imul
aaa
cltd
and
xchg
aaa
lret
imul
cld
dec
ja
adc
test
bnd
xor
xor
mov
dec
mov
dec
mov
outsb
inc
ret
and
stos
or
hlt
mov
stc
adc
in
ret
xchg
lods
call
lds
subl
enter
test
mov
sub
sub
in
jb
pop
int3
scas
sahf
outsb
loope
cmp
shrl
popf
nop
pop
cmp
lcall
mov
pop
aas
sbb
cmpb
mov
push
leave
mov
jae
mov
js
mov
in
shll
lds
or
lahf
pop
out
pop
mov
addr16
mov
lods
fidivrs
mov
push
xor
test
loopne
mov
lods
in
add
mov
pop
sbb
cld
repnz
or
xchg
or
sub
add
mull
imul
ja
mov
sbb
je
sbb
imul
jg
cmpsb
xor
mov
xor
cmp
stos
xchg
push
ret
scas
enter
xchg
lods
aam
cmp
dec
aam
cs
mov
or
jno
loopne
mov
dec
push
imul
xor
adc
repnz
cmp
adc
xor
mov
leave
aaa
cli
sahf
or
sub
fcmove
mov
pushf
cmp
sbb
rcr
cmp
iret
dec
lock
popf
sub
dec
std
push
sub
mov
daa
inc
mov
mov
rclb
cmpsb
mov
outsl
int3
and
mov
mov
cmpl
mov
push
das
shlb
jnp
push
jmp
mov
add
stos
loopne
fs
cmp
ficoms
adc
push
addr16
jle
mov
lods
aad
fs
stc
dec
push
add
mov
enter
jmp
pop
icebp
mov
pop
pop
or
bndldx
push
adc
dec
xor
jge
inc
sub
int3
data16
test
rclb
popa
and
push
in
orb
jbe
outsb
add
imul
lea
mov
inc
jl
xor
lods
cs
sahf
jg
dec
dec
fstl
xor
repnz
repnz
jae
xchg
mov
mov
scas
push
popf
sbb
xor
mov
test
out
scas
inc
mov
je
fwait
mov
and
xor
pusha
sub
jp
adc
inc
jecxz
lcall
mov
cmc
mov
and
inc
aam
stos
add
movsb
dec
mov
je
push
cmp
pushf
mov
test
dec
mov
adc
mov
dec
adc
dec
push
mov
sarl
xor
paddd
inc
dec
and
mov
xlat
fsubl
sbb
roll
jmp
subl
sbb
mov
icebp
inc
adc
xor
add
push
mov
mov
nop
ljmp
idivl
jnp
or
incl
out
lods
dec
jae
inc
jle
pop
test
leave
repz
imul
mov
aam
nop
cmp
and
lea
stc
sbb
insb
gs
adc
addb
cmp
subb
push
dec
push
cwtl
jnp
loop
mov
inc
mov
jo
inc
mov
xchg
mov
nop
or
inc
ud2
cmp
cs
ficoms
loopne
sti
cmpsl
sub
add
shr
sub
in
mov
ret
out
iret
jno
lret
jne
mov
pusha
adc
inc
cmpsb
test
or
sbb
loopne
adc
pusha
add
sarb
add
sub
add
mov
or
or
push
cmp
cs
or
pop
or
mov
sub
shr
inc
mov
movsb
and
sbb
cmp
lock
pop
or
adc
and
or
sub
xchg
sbb
mov
jns
outsb
mov
or
or
xchg
mov
jmp
and
add
add
jns
pop
lret
jbe
popa
pop
sbb
push
sub
and
inc
loop
dec
aaa
and
je
lcall
sahf
jns
jb
iret
and
and
cmpsl
pop
xlat
sub
pop
sbb
cwtl
rorb
dec
inc
ds
loope
mov
inc
sti
jmp
divl
rep
lods
xor
mov
outsb
and
mov
cs
cwtl
xchg
inc
dec
lret
and
je
push
pop
es
pusha
mov
add
mov
cmp
adc
push
aas
rcrl
push
rcrb
movsl
xor
cltd
hlt
cli
in
xor
xor
push
out
push
mov
mov
das
repnz
inc
sub
jno
push
sub
ds
repnz
fidivs
inc
xchg
push
sub
loope
jae,pt
mov
or
xchg
xchg
inc
inc
fwait
adc
mov
out
aas
in
add
xor
adc
inc
repz
jl
gs
mov
pop
fcmovne
stc
pop
cltd
sahf
scas
mov
pop
add
mov
push
push
xor
sbb
jmp
pop
adc
xor
xor
inc
push
nop
cmpsl
mov
pop
mov
push
pop
test
lahf
dec
loope
repnz
mov
dec
movsb
testb
push
add
mov
dec
xchg
add
xchg
ja
mov
jl
lahf
popf
pop
cmp
je
or
pushf
mov
jecxz
mov
fisubs
jg
jge
dec
lods
mov
scas
je
jecxz
lret
jo
iret
dec
subb
data16
js
lods
and
inc
mov
scas
movsb
int3
jne
aaa
xchg
push
addr16
inc
dec
icebp
cmp
cmp
dec
push
mov
mov
fidivrl
mov
xor
mov
arpl
hlt
pushf
repz
loopne
divb
enter
jbe
cmpb
js
repz
cmpsl
bound
mov
jg
or
ja
sbb
sbb
cs
mov
sbb
sbb
xchg
dec
pop
mov
mov
sbb
mov
mov
push
lahf
fsubl
ss
pop
js
add
xchg
loop
ds
cmpsb
sbb
cli
xchg
orb
mov
dec
in
frstor
fldenv
out
dec
rorl
std
mov
movsb
sub
jmp
sub
xor
sahf
xor
push
inc
loope
cmpb
push
mov
push
scas
inc
arpl
pop
test
ja
ror
js
incb
adc
enter
xchg
insb
gs
jl
loop
mov
out
ret
mov
sbb
addr16
mov
loope
and
cmp
mov
jge
lret
mull
sub
jnp
or
mov
ja,pn
xchg
pop
mov
pop
push
adc
mov
xor
or
enter
test
fwait
lret
push
and
sbb
ljmp
add
mov
dec
mov
add
xchg
in
inc
in
mov
arpl
mov
jne
cltd
sbb
and
adc
imul
iret
mov
insl
testl
test
cmp
test
ret
and
pop
repnz
and
dec
nop
cmovge
dec
jmp
and
decl
lea
hlt
adc
xor
pushf
push
sub
out
mov
sub
idiv
xchg
push
sbb
push
mov
xlat
jbe
cmp
cmp
out
pop
jb
and
daa
sbb
lcall
ss
inc
dec
add
and
jo
cmp
sarl
andb
adc
dec
xor
popa
je
push
sbb
xlat
and
adc
add
mov
or
sub
mov
je
jne
ljmp
rcll
ljmp
jns
push
lods
lods
sub
lea
stos
fucomp
lds
mov
movb
data16
xor
dec
push
sbbb
loopne
out
adc
sub
repz
jmp
cmp
je
jo
cli
or
sub
lds
fs
icebp
fistps
jbe
rorb
cmp
pop
jae
enter
mov
mov
mov
push
outsb
mov
jecxz
mov
enterw
jp
sar
sahf
xchg
jnp
pop
push
cmp
jmp
stc
pop
and
lret
loopne
gs
enter
in
jno
cld
cmp
js
fldl
push
dec
mov
xor
dec
mov
and
push
jb
inc
lret
mov
fistpl
mov
jle
ret
xchg
xor
popf
jae
ss
mov
xor
repz
xchg
outsb
add
es
div
sub
ljmp
loopne
dec
aad
sbb
push
inc
lea
fs
sbb
lods
push
es
insb
mov
xor
gs
mov
imul
and
rcll
lods
or
into
or
jae
aam
jne
inc
adc
mov
mov
lret
out
mov
repz
mov
add
mov
xlat
stos
jae
test
daa
stos
xorb
lret
popa
jmp
mov
dec
popa
bound
sub
pop
add
lret
xorb
movsb
pop
sbb
leave
add
pop
test
or
daa
cltd
scas
andb
sub
mov
dec
test
adc
pop
subb
stos
add
stos
jne
cmp
xchg
jle
and
sub
mov
fistpll
inc
cwtl
xchg
adc
mov
imul
stc
fsts
adc
aad
ds
clc
push
jo
xor
lcall
cmp
arpl
mov
mov
xor
or
imul
and
outsb
mov
enter
mov
adc
jmp
jbe
sbb
cmp
aam
mov
cltd
das
scas
xor
dec
cmpsl
popf
xor
push
mov
int
jge
mov
in
mov
sbb
loope
xchg
dec
jmp
repz
outsb
pop
or
das
out
jge
adc
jno
repnz
mov
out
mov
xor
loopne
scas
pop
jne
sti
jno
dec
fstpl
in
ds
ja
dec
imul
in
push
xchg
sub
nop
aam
jmp
stos
pushf
jmp
pusha
loope
and
insl
cld
inc
add
out
lods
iret
inc
add
adc
cmp
jecxz
sbb
stos
push
imul
and
fldl
pop
xchg
jo
stos
cltd
sbb
test
in
pushf
bound
add
test
out
mov
sbb
mov
xchg
ds
xchg
or
cmp
jno
or
andb
dec
lret
sahf
xorl
and
xchg
in
adc
mov
adc
cwtl
xchg
icebp
pop
mov
test
push
sti
mov
inc
mov
and
cmp
aaa
in
mov
arpl
xchg
call
mov
and
push
sbb
sarb
xchg
mov
xchg
sbb
lret
popf
nop
negb
inc
xor
push
and
cwtl
push
and
inc
or
mov
cltd
mov
pushf
pop
sub
loope
xchg
pop
pop
jbe
jno
push
inc
lea
sti
negl
push
test
lods
nop
in
insb
jae
je
pusha
xchg
lods
in
stos
xchg
inc
jb
mov
cwtl
ja
mov
es
cmp
divl
int
push
aas
lods
ret
sub
mov
in
rcrb
inc
in
andb
movl
insb
jp
pop
inc
sub
lods
movsb
pop
cmp
icebp
sbb
push
jg
pop
push
andl
enter
dec
ret
and
jle
xor
fisubrl
xor
filds
jecxz
sub
repnz
enter
xor
cmc
and
lret
xor
rsqrtps
adc
and
mov
inc
enter
loop
mov
out
mov
dec
xchg
and
xchg
and
mov
add
adc
mov
rorb
mov
jle
fmul
pop
scas
sub
dec
and
mov
enter
cmpsl
cld
and
lea
adc
push
adc
cmp
repz
mov
sub
mov
int3
cltd
loopne
cmp
js
mov
int
and
adc
and
push
adc
xchg
mov
jge
sbb
movsl
and
push
testl
lds
ror
in
shrl
xchg
das
mov
push
iret
pop
sbb
lahf
push
fnsave
loopne
cmp
ret
rclb
loop
rcll
aaa
cmc
sti
pop
ja
test
sub
pop
push
adc
repnz
repz
jle
in
pop
pop
cld
mov
mov
clc
movsl
rolb
movsl
into
call
loopne
scas
pop
pop
mov
shrl
lret
leave
add
cmp
cmc
or
fdivrl
add
int
mov
dec
shlb
jp
and
and
rorb
sub
cmp
sub
cmp
mov
call
inc
dec
pusha
out
daa
cld
xchg
pop
cmp
int
add
xlat
addl
add
mov
mov
and
jb
cmc
pop
mov
mov
jmp
addr16
pop
pop
mov
jbe
fidivrl
sbb
pop
mov
outsl
cmp
lret
dec
jle
sub
jl
add
call
mov
or
cmp
fwait
adc
imul
dec
int
fsubs
test
movsl
jle
pop
adc
aam
cld
bound
ret
stc
mov
pop
fldl
push
dec
les
test
inc
push
xlat
adc
xchg
cmp
aam
cmc
sub
xchg
in
lds
lea
sub
movsl
outsb
sbb
xchg
jo
pop
mov
xor
mov
push
data16
loop
clc
or
pand
add
scas
test
outsl
mov
or
mov
xor
pop
incl
ja
jno
nop
fnsave
xchg
sarl
push
add
mov
xchg
add
mov
sbb
jmp
pop
scas
push
lock
popa
adc
aad
add
jbe
cmp
aas
xchg
push
les
shll
push
dec
or
sbb
xchg
mov
scas
call
stc
fadds
loop
xchg
bound
loop
jo
mov
gs
sbb
ss
cmp
mov
xor
movsl
mov
inc
push
rcr
lock
sub
xor
mov
popa
shlb
pop
pop
cltd
insb
push
mov
dec
or
pop
enter
leave
stos
or
cmp
sub
sub
pusha
mov
test
test
nop
fdivrl
dec
or
incl
or
xchg
data16
jle
pop
inc
js
cltd
mov
fcoml
cmp
jbe
lcall
les
popa
andb
push
lods
mov
cld
sub
inc
scas
insl
push
fsubl
inc
sbb
mov
jo
pcmpeqb
push
clc
xchg
ljmp
sub
aas
xchg
inc
push
pop
std
adc
mov
pop
ss
push
add
push
rol
mov
cmp
mov
jae
jne
push
sbb
adc
jp
dec
jns
bound
cltd
arpl
mov
pop
call
mov
adc
xchg
out
lret
pop
add
and
lds
js
int
insb
movsl
fistl
test
cmp
and
aas
add
fldcw
mov
cmp
popa
sbb
mov
xchg
mov
jle
fsubrs
mov
test
sub
pop
and
imul
sahf
and
xor
imul
pop
and
scas
xor
xorl
fimuls
jecxz
std
fbld
rdtsc
lea
pop
mov
cmp
mov
fmuls
ljmp
mov
roll
sub
jle
enter
popa
inc
mov
xor
pusha
or
jnp
std
sbb
push
imul
pop
sahf
dec
mov
fsts
movhps
xlat
stos
inc
dec
pop
andl
sbb
insb
int3
insb
cld
xchg
xchg
jg
bound
pushf
rorl
lock
incl
xor
add
and
cmp
or
or
inc
in
mov
mov
cmp
xchg
icebp
lret
movsl
push
popa
lds
mov
pop
and
jae
push
jge
leave
pop
adc
loopne
xlat
sbb
xchg
out
test
mov
lea
test
popf
pop
out
movsb
pop
repnz
iret
test
call
test
aad
stc
sahf
dec
mov
or
jecxz
ss
sbbl
fsubrl
jno,pn
subl
inc
xchg
fstpl
xchg
pop
test
divb
xchg
mov
add
shll
dec
andl
xor
daa
sub
adcb
mov
test
sarl
int
dec
rclb
adc
das
add
sub
jg
mov
mov
push
xlat
stos
or
out
fcmovnu
pop
xchg
cmp
adc
lods
and
pop
mov
xor
leave
xchg
in
inc
inc
pop
dec
add
jmp
pop
cmpsl
lahf
inc
xchg
mov
outsb
push
aaa
inc
sub
in
push
sbb
bndstx
jns
je
cmp
inc
jbe
xchg
push
or
ljmp
mov
gs
popf
push
test
shr
imul
push
mov
shrl
add
and
cmp
fnstcw
sub
lods
pop
insb
ss
adc
iret
loopne
fs
mov
inc
test
sbb
out
leave
dec
cmp
outsb
add
ret
push
mov
inc
push
das
cmpsl
es
mov
loop
nop
or
dec
adc
insb
pop
sbb
mov
pop
lea
add
lods
push
xchg
ss
aad
sbb
gs
neg
push
movsl
fldt
pop
xor
lock
push
out
lds
push
inc
or
pop
cmp
dec
addr16
push
push
and
cld
and
insl
stc
cmpsb
sub
mov
movsl
data16
div
data16
jg
ret
js
pop
adc
cmpsb
outsb
mov
pop
push
xor
gs
mov
mov
test
push
mov
mov
pushl
lods
jl
fildl
add
sub
sbb
mov
std
sbb
mov
adcl
ja
push
js
adc
jo
pusha
sahf
inc
cmpsb
stc
rcr
movsl
mov
test
jmp
int
rclb
jp
jle
jg
sbb
adc
movsl
mov
in
push
jl
xlat
push
aas
test
std
lahf
add
sub
loope
mov
loopne
testl
sbbl
movsb
pop
sbb
stos
adc
lds
loope
out
and
in
aas
fistpll
cmp
cmp
clc
and
aam
push
cmp
into
push
sub
insl
je
mov
mov
sbb
cmc
pop
je
stos
ljmp
dec
outsl
sub
pop
adc
add
xchg
test
mov
fucomi
mov
cmpsl
arpl
jb
xchg
cli
cmp
cmc
loope
pop
and
loopne
jecxz
fstpt
fcompl
pusha
clc
add
orb
mov
dec
and
nop
hlt
das
divl
cmpsb
add
jge
inc
xchg
outsl
clc
in
jo
ret
icebp
inc
dec
out
jecxz
cwtl
xor
fisubl
scas
xlat
sub
mov
pop
jnp
ficoml
jno
cmp
std
cli
dec
xorl
je
mov
sbbb
mov
daa
inc
std
loop
xchg
add
pushf
adc
lea
xchg
sbb
pop
lock
ljmp
dec
int
xchg
outsl
addl
loope
lods
mov
cwtl
not
add
add
mov
loope
xor
outsl
push
sti
xor
cwtl
int3
bound
popa
inc
xor
inc
push
ss
push
inc
adc
push
out
test
mov
fcom
int
add
movsb
in
outsb
mov
inc
das
cmpsl
adc
lcall
xchg
pop
xlat
fbstp
pop
push
or
xor
cld
jmp
or
xchg
scas
fwait
dec
icebp
fstpl
fcompl
pop
push
icebp
cs
int
repz
xchg
mov
repz
mov
bound
ljmp
xchg
and
out
sub
fwait
mov
ffree
pop
les
xchg
pop
xor
sahf
dec
imull
mov
out
jg
mov
decb
pop
scas
ja
add
jb
ds
xchg
lret
mov
mov
sub
fs
ljmp
jae
loopne
data16
mov
enter
scas
jmp
mov
repnz
cmpsl
jae
sahf
fisttps
lock
dec
sti
lahf
or
inc
je
movsb
mov
mov
cmp
xor
test
mov
and
inc
dec
dec
xor
dec
add
popf
xor
loope
inc
movsl
dec
mov
int3
lcall
ja
adc
cli
cmp
mov
pop
mov
daa
scas
iret
mov
pop
scas
xchg
cmpsb
loop
add
fcmovne
pop
rcll
testl
test
lea
clc
push
pop
push
adc
jno
lret
or
push
fistl
scas
add
in
or
push
and
cmc
int
xchg
js
mov
sub
jnp
aas
mov
incb
cli
pushf
fmul
and
xor
xchg
loop
jb
or
movsl
or
and
out
nop
sbb
sub
shl
in
xor
pop
dec
inc
or
or
and
out
and
jns
dec
sti
in
xor
mov
outsl
rclb
mov
cmp
xor
mov
cmc
mov
jb
jge
movsb
repnz
inc
and
jae
movsl
sbb
sub
inc
mov
flds
out
push
lahf
scas
lret
adc
mov
pusha
adcb
mov
fidivrl
lea
cmp
jae
out
jb
jmp
test
pop
mov
adc
pop
add
jno
fdivrp
pop
out
rorb
jp
sbb
ss
xchg
xor
dec
cmpsb
popa
call
mov
push
and
sub
jp
push
loope
dec
jl
mov
adc
xchg
je
or
mov
and
and
aad
xchg
mov
pop
pop
sub
adc
fwait
aam
xchg
mov
jp
iret
xchg
xchg
data16
fwait
rclb
jl
and
lret
and
and
mov
cmpsl
pusha
and
jae
mov
rcrl
jl
sbb
stc
and
mov
pop
mov
mov
insl
mov
aam
mov
adc
cmp
sub
sbb
test
test
pushl
cmpsl
cmpsb
cmc
leave
inc
lds
popa
xor
dec
xchg
xchg
pop
es
adc
fstps
adc
sbb
notl
push
rcll
cld
jne
outsb
sub
ja
int
leave
icebp
fisttpl
adc
int
pop
push
cmc
pusha
or
inc
jno
cld
or
inc
xchg
in
pop
sub
mov
mov
and
data16
mov
cmp
mov
cmp
out
jmp
shlb
add
repz
imul
inc
push
jg
mov
xorl
mov
or
js,pn
repz
into
xor
push
inc
sub
push
mov
aas
mov
push
nop
shlb
dec
mov
and
cmp
or
inc
lods
addl
and
je
rol
jmp
insl
aaa
push
lods
sbb
mov
pop
cmp
dec
addr16
loopne
push
je
xor
xlat
add
mov
push
xor
shll
xor
loope
sub
push
xor
sbb
sub
mov
dec
add
fstps
xchg
xlat
lods
and
mov
fs
add
cmc
mov
xchg
shl
mov
popf
std
hlt
sbb
add
je
and
cmpsb
inc
pop
nop
cmpsb
xorb
jge
sbb
cld
jp
js
sub
fisubl
ljmp
adc
jge
lds
fsubrs
xchg
jne
inc
push
sub
fld
sbb
adc
jnp
test
cmp
sub
pop
pop
pop
adc
dec
add
inc
out
pop
movsl
inc
lods
pop
ret
mov
mov
ret
sub
mov
lock
iret
insl
cmp
xchg
popf
cmp
mov
idivl
mov
adc
daa
loopne
lret
lds
inc
popf
xchg
hlt
xchg
jne
in
cli
push
push
in
sub
push
rcll
loope
cmp
mov
imulb
arpl
fldcw
ret
outsb
adc
call
call
mov
in
orb
xchg
mov
mov
jge
fstl
lahf
pop
out
pop
stc
adc
test
insb
push
into
sbb
jae
sbb
adc
sub
add
pop
in
pop
sbb
fsubrs
cltd
sub
and
push
xchg
mov
sub
testl
jg
int
std
xchg
cmp
pop
enter
mov
jnp
dec
xchg
divb
and
jl
cmp
xchg
hlt
orl
or
and
fisttpl
mov
and
push
adc
mov
sahf
je
inc
mov
xor
pop
adc
ret
sub
aam
pop
enter
jo
movsb
add
mov
loope
out
mov
leave
in
movsb
xor
jno
pop
add
pop
mov
cmc
jnp
hlt
dec
cmc
inc
mov
xlat
mov
sbb
shl
pop
movsl
aam
movsl
fwait
xchg
and
mov
dec
arpl
adc
testl
dec
dec
movsl
sbb
mov
push
pop
cltd
jle
aad
xchg
xchg
lods
cltd
ds
push
in
dec
cld
xchg
scas
pop
xchg
or
pushf
insl
inc
inc
sub
shl
sub
stos
shlb
xchg
mov
lock
subl
nop
cwtl
jp
push
pop
push
mov
scas
pop
sbb
xchg
mov
xor
aas
inc
cwtl
dec
inc
shll
jne
adc
mov
loopnew
fmull
stos
jge
cmp
lock
dec
xchg
scas
leave
shrl
fyl2xp1
clc
fdiv
lret
stos
imul
xor
xchg
sub
jle
shl
or
rcrl
popf
mov
or
lcall
into
jo
aas
xorb
jp
rcll
movsb
pop
dec
pushf
pop
mov
mov
xor
push
insb
mov
mov
dec
stos
xchg
sub
jp
popa
test
adc
fidivl
cli
sbb
lods
rcr
push
test
fiaddl
cmp
gs
sahf
push
mov
and
push
orb
pop
rolb
adc
pop
fisubrl
pop
iret
mov
cmp
jmp
ret
sbb
push
inc
pop
mov
mov
jge
and
add
repz
pop
repnz
xchg
in
movl
daa
xor
pop
scas
aam
cs
rcl
in
push
je
dec
mov
xor
arpl
call
adc
adc
stos
sarb
dec
andb
ss
fwait
imul
lods
push
rolb
and
or
pop
push
push
fwait
scas
sarb
and
sbb
push
push
push
adc
cs
mov
jnp
movd
mov
cs
loop
addr16
popf
pop
pop
jge
xchg
xchg
mov
push
aaa
mov
xor
pop
out
cli
sub
mov
mov
sahf
add
jns
repz
stos
fnstcw
mov
cmp
repnz
cmpsl
subb
enter
cmp
jne
cmp
testl
sysret
test
jp
stos
add
repnz
jnp
pop
hlt
cmpsb
mov
lock
lret
es
pop
mov
inc
cld
out
orl
nop
icebp
and
fsubrl
mov
sbbb
out
loop
jo
add
pop
mov
push
pop
cld
mov
jnp
data16
stos
jmp
push
enter
dec
mov
or
jp
lea
mov
lods
divps
ja
popa
fsubrl
push
push
leave
cmp
mov
push
iret
clc
out
xor
clc
pusha
sub
inc
mov
clc
push
mov
pop
fmul
cmp
sub
adc
lahf
sub
push
mov
jbe
pop
pop
enterw
loopne
icebp
inc
and
cmp
fsubrp
mov
mov
cmp
outsl
ficoml
or
std
inc
add
enter
movsl
mov
or
rcrb
nop
xor
xor
mov
das
in
gs
inc
mov
mov
fs
std
shrb
icebp
ret
arpl
xchg
mov
xor
ljmp
sbb
fisubrl
mov
jle
jb
cmpb
xchg
add
inc
jl
push
std
pop
or
mov
push
fimull
mov
nop
mov
insb
lods
in
dec
jbe
cmpsb
push
das
out
lea
push
lock
loope
sbb
into
mov
adc
mov
inc
daa
cmp
mov
xor
aaa
lds
jl
dec
pop
add
xchg
sahf
lret
jno
adc
or
ret
dec
mov
adc
cmp
cmpsl
sub
mov
pop
mov
cmp
jmp
lret
push
fldenv
cmpsb
mov
scas
cld
cmp
stos
push
mov
fsubrs
cmp
iret
nop
dec
push
push
mov
fidivs
and
filds
gs
inc
loopne
jno
add
push
push
sub
fcoms
subl
jbe
ss
and
jl
outsb
cmp
gs
pop
in
push
es
in
rcll
test
pop
push
movsb
lcall
std
call
inc
cmovo
push
popa
mov
enter
adc
xchg
popa
scas
and
mov
pop
cmp
jecxz
mov
xor
in
repnz
jge
movsl
and
js
pop
out
out
jnp
add
sti
add
add
cmpsb
dec
sbb
push
sub
add
ret
push
inc
pop
adc
jg
sub
in
pop
sub
lea
lcall
fisubl
inc
pushf
sbbb
rcll
ret
dec
or
or
sarb
std
lds
jns
cltd
lds
leave
test
movsb
inc
cmp
inc
inc
insl
jle
imul
inc
inc
xchg
pushf
sub
adc
push
aas
cwtl
jnp
ficompl
in
loop
push
inc
cmp
test
test
dec
push
add
jo
jmp
out
xor
pop
add
les
push
pushf
adc
scas
movsb
mov
xor
cld
pop
cld
mov
lds
push
xchg
repz
in
jnp
xor
pop
test
lods
cmp
mov
sub
add
sti
adc
lea
ljmp
outsb
sub
xchg
sbb
cltd
mov
mov
pop
aam
inc
fcomps
mov
lea
push
jae
lods
cmp
loop
jg
nop
fistl
adcb
bt
das
movsb
or
fcomip
popf
aam
pushf
jle
mov
fsubs
sub
cs
fcompl
insb
and
sbb
add
cld
ds
add
xor
xchg
fsubs
addb
movl
loop
push
je
je
jnp
pushf
mov
lahf
stos
cld
xchg
xchg
mulb
cmp
out
mov
popa
call
sti
xor
jnp
aam
dec
xlat
ds
pop
fisubs
imul
nop
rorb
pop
inc
dec
xchg
or
aaa
xchg
adc
pusha
sarl
insb
insl
in
jp
mov
add
into
popa
mulb
mov
sub
call
out
xchg
lret
lcall
icebp
pusha
aaa
inc
push
faddl
mov
cs
into
jno
pusha
xchg
and
mov
xchg
and
in
test
dec
fwait
add
xchg
icebp
mov
roll
iret
inc
dec
mov
lock
and
add
sbb
push
ja
leave
jle
movsl
sbb
push
sahf
mov
nop
pop
push
pop
test
mull
ret
sbb
jle
sbb
mov
xchg
adc
mov
jno
or
jns
das
ret
push
dec
add
cmpsl
push
insb
shl
xor
imul
pusha
add
xchg
xchg
int
pop
xor
cmp
shlb
mov
out
test
jnp
daa
pop
add
pop
mov
mov
xchg
cmpsl
popa
lahf
popf
xor
rolb
jp
jo
in
mov
push
mov
and
cmpsb
pop
mov
movsb
adc
or
cwtl
jecxz
push
hlt
xchg
scas
inc
inc
int3
mov
push
mov
mov
jb
sbb
inc
stos
dec
sahf
in
mov
push
scas
add
movsl
add
or
and
pop
mov
mov
mov
push
cwtl
xchg
mov
dec
or
dec
insb
xor
jecxz
shr
out
rcll
test
addr16
cmp
lds
mov
dec
push
fwait
in
add
scas
xchg
lret
jle
lods
mov
mul
mov
es
shll
mov
sub
fldt
das
pop
jg
sub
add
jp
xchg
mov
outsl
push
mov
insl
rcrb
dec
shll
inc
pop
repnz
sbb
lea
vpsubusw
and
mov
xchg
mov
loopne
out
pop
pusha
inc
dec
ror
mov
repnz
out
test
test
int3
sub
mov
add
clc
adc
test
dec
pop
shlb
mov
cmpsb
dec
and
stos
pop
add
dec
cmp
sub
sub
inc
cmpl
insb
lret
push
mov
mov
mov
mov
inc
sub
popf
sar
xor
pop
pop
loopne
cmc
xlat
out
sti
sar
mov
and
popf
and
xor
sub
mov
mov
jae
test
out
jnp
or
dec
fcompl
cmp
mov
push
adc
fcmove
subps
enter
inc
jne
mov
int3
cli
jae
mov
jp
cmpsl
jecxz
sahf
sub
mov
inc
pop
jb
lods
inc
push
mov
pop
xchg
in
mov
mov
xchg
xchg
adc
mov
dec
call
icebp
push
cmpsl
push
lret
inc
stos
inc
sbb
sbb
aad
les
xchg
adc
bound
outsl
sbb
mov
cs
dec
push
ret
lret
inc
pop
jb
das
adc
in
pop
or
jecxz
xor
mov
insb
xor
jns
dec
push
mov
scas
mov
das
inc
aaa
lahf
mov
scas
mov
fldl
and
popf
mov
xor
inc
and
testb
mov
in
adc
mov
frstor
sbb
dec
mov
adc
cmp
inc
daa
loop
ret
fildl
push
add
sbb
push
jnp
mov
fsubrl
notl
sbb
sarb
pop
mov
int3
inc
push
adc
xchg
in
lea
out
or
push
xchg
cmp
in
test
add
and
xlat
mov
dec
xchg
mov
aam
sub
orl
je
add
mov
das
add
push
sti
jmp
pop
div
adc
fs
repnz
out
ja
dec
mov
cs
jl
mov
sub
xchg
fdivrs
sub
fsts
xor
insl
mov
addr16
pop
add
aam
xchg
das
aaa
xchg
lret
dec
push
sbb
in
sti
aaa
shlb
es
jle
lea
data16
int3
push
adc
jne
imul
sub
psubd
lods
or
and
pop
dec
fstl
mov
xchg
andnps
fmulp
or
lods
sub
repnz
loop
xlat
lret
iret
inc
popa
loop
inc
loope
mul
movsbl
jnp
jae
xlat
jne
mov
sti
outsl
sub
shrl
dec
push
adc
iret
in
inc
pop
aad
rclb
js
cmc
pop
leave
mov
js
dec
cmp
insb
in
ljmp
mov
fs
sub
cli
push
jbe
sar
rolb
ds
adc
popf
loopne
movsl
add
mov
sahf
int
inc
cmp
add
adc
add
js
fidivs
or
icebp
decl
out
sub
jns
adc
in
dec
inc
xchg
push
add
mov
cmp
mov
mov
cmpsl
push
fstps
stos
imul
notb
jmp
jg
dec
aas
mov
andl
repnz
js
sbb
mov
inc
mov
je
xchg
sub
cli
push
jbe
adc
dec
push
jle
out
sahf
adc
popa
das
add
sbb
rcl
std
imul
add
xchg
jmp
cltd
push
xchg
pop
out
or
pusha
jmp
mov
stos
int
lret
add
imul
push
cld
sub
push
aam
add
dec
mov
das
enterw
jle
xchg
ljmp
idivl
out
jle
sbb
push
ss
aaa
xchg
idivb
ffreep
ja
jb
loop
xchg
hlt
inc
fldl2t
cmp
or
popf
pop
pop
ret
jmp
lret
add
stos
pop
test
into
dec
pop
pop
add
and
arpl
lahf
adc
push
xor
cltd
cwtl
cmp
ljmp
imull
push
dec
dec
insl
fnsave
fidivl
mov
stos
and
mov
sbb
mov
cli
jno
mov
sub
fiaddl
call
outsl
xor
mov
fsubr
jmp
jb
mov
mov
mov
mov
mov
mov
or
orl
adc
xchg
gs
test
or
inc
sbb
inc
sub
data16
sbb
sahf
pop
push
mov
inc
and
data16
pusha
mulb
xchg
mov
sbb
dec
xchg
sub
stos
stos
inc
fs
push
decb
jnp
fidivs
adc
mov
repz
fnstcw
and
jmp
adc
ljmp
rcl
sub
daa
jbe
or
fs
lahf
inc
stc
hlt
das
mov
jecxz
adc
and
xchg
push
fsubr
in
jno
js
arpl
test
mov
fistpl
hlt
and
bound
call
add
imul
sbb
lods
imul
jg
dec
rcl
cwtl
lods
adc
cmpb
inc
in
mov
jmp
pop
out
faddl
cmc
out
mov
sbb
daa
pop
mov
shl
add
test
mov
xchg
pop
push
daa
or
jle
ret
cltd
cld
lock
ljmp
pop
dec
aam
pop
push
add
pop
test
cmpl
clc
test
xor
data16
mov
mov
mov
add
stos
cmp
pop
cwtl
movsl
mov
ljmp
ljmp
int
adc
mov
mov
inc
in
and
mov
mov
sub
xchg
mov
movsl
xchg
js
cmp
and
sub
xor
jne
xor
xchg
lea
sub
out
or
push
adc
mov
add
jp
out
les
mov
xor
rorl
jbe
das
cltd
outsb
sub
push
cmpsb
jnp
or
inc
test
mov
addb
adc
aaa
mov
push
mov
xchg
jl
fstl
push
mov
jnp
fiadds
popf
pop
fisttpll
mov
push
mov
cmp
fisubrs
jle
test
sbb
test
ficoms
out
add
notl
jecxz
mov
call
jns
xor
aad
push
in
das
pop
in
loop
loopne
das
leave
out
in
push
sbb
push
fistl
mov
popa
stos
test
sub
xorl
rcrb
cwtl
cmp
sbb
cld
int
jle
xor
repz
fisubrl
daa
lahf
push
add
insb
lods
pop
lods
lods
mov
test
lods
push
pop
lret
outsb
sti
cltd
xor
xor
mov
bound
sub
sahf
arpl
popa
popf
xor
in
xor
ja
aas
xchg
call
stc
lods
leave
test
fimuls
pop
mov
xchg
gs
repnz
repz
negl
daa
add
sbb
lret
out
push
adc
and
and
and
pop
mov
mov
mov
cltd
xchg
scas
ret
adc
xchg
xchg
xor
mov
mov
xor
mov
fisttps
loopne
test
data16
inc
notl
cs
lea
les
sbb
inc
roll
cltd
cltd
cmp
inc
out
into
mov
mov
push
jmp
test
aas
pop
adc
movsb
jge
dec
outsl
sbb
in
pusha
data16
shl
js
lret
stc
cmpsb
repz
rcrl
mov
fmull
jns
rcll
lods
test
lds
dec
loope
push
popa
jne
jb
mov
hlt
test
push
cmp
mov
xchg
adc
add
jbe
cmpsl
pop
push
mov
shr
aad
dec
mov
push
push
add
mov
scas
push
jle
mov
shll
add
lret
inc
out
lods
scas
inc
mov
in
push
dec
cmp
clc
testl
scas
pushl
sbb
lret
pop
clc
and
inc
xor
or
push
xor
mov
das
xlat
jecxz
fcomi
mov
mov
sbbl
ret
test
in
mov
dec
js
add
jecxz
dec
mov
or
xor
in
test
and
sbb
fmuls
outsl
xchg
rolb
mov
out
jne
lds
push
inc
pop
and
gs
pop
or
adc
add
jns
cmp
add
repnz
dec
inc
push
movsl
insl
outsb
lahf
les
out
add
xchg
scas
cmpb
add
roll
outsl
mov
adc
cwtl
rorl
pop
mov
ss
fwait
roll
sbb
dec
xor
jo
and
repz
or
mov
arpl
jmp
mov
gs
das
xor
mov
lods
inc
repz
pop
bound
mov
mov
pop
ret
jg
pop
loope
push
out
movsb
mov
mov
mov
ror
pop
xor
scas
sbb
and
out
mov
lods
outsb
mov
sahf
jb
mov
pusha
jns
stos
xchg
jae
nop
mov
mov
sub
and
jae
inc
sahf
inc
cwtl
test
cs
push
aad
test
sti
ret
scas
stc
aas
in
cmp
xchg
push
call
mov
cmpsl
adc
js
iret
lret
pop
add
xchg
push
jne
or
pop
jbe
xlat
mov
nop
lods
pop
cmp
jb
mov
pusha
ja
or
das
xor
cmc
push
or
in
out
clc
or
mov
scas
add
and
jmp
sub
xchg
lret
sar
sar
fsubp
mov
pop
leave
test
inc
pop
sub
cld
lods
dec
adc
test
xchg
fidivrl
lea
icebp
push
outsb
mov
sahf
stos
aad
lahf
jp
in
stc
adc
testl
sbbl
nop
das
test
lods
add
mov
popf
xor
loope
and
ds
bound
aas
ds
sub
xchg
out
and
sub
jl
xchg
dec
enter
es
xadd
repnz
or
lret
outsl
in
fildll
xor
lock
mov
mov
mov
dec
jge
rclb
pop
push
std
insl
push
into
pop
in
mov
sbb
adc
rorb
lahf
adc
lret
mov
dec
pop
lock
stc
mov
aaa
dec
daa
dec
and
mov
xlat
es
sahf
add
imul
xor
or
insb
push
fwait
sub
or
sti
cmpsl
cs
test
fmuls
frstor
mov
and
es
mov
ret
jp
lcall
pop
dec
mov
addr16
movsl
mov
inc
rcl
aad
rcrb
in
ss
add
add
insw
repz
jne
dec
jecxz
add
or
cmc
adc
cmp
incb
and
xor
sarb
push
in
out
das
clc
addr16
mov
out
and
icebp
sub
jae
inc
hlt
cmpsb
test
mov
insb
fisttpl
ss
es
adc
ss
jne
xchg
cltd
or
sbb
imul
xchg
sbb
in
or
dec
pusha
fsubs
jmp
ljmp
inc
mov
rolb
sub
ljmp
ret
ffreep
fcoms
inc
fldt
dec
jns
and
jnp
or
ss
add
push
mov
insl
cwtl
enter
fsubrl
test
andl
mov
fistpll
stos
dec
pusha
js
inc
jo
and
cld
into
in
jno
mov
and
test
test
mov
xchg
pop
xor
sub
mov
mov
aam
pop
incl
push
jb
xor
or
pop
inc
mov
adc
xor
jae
xor
mov
pop
dec
inc
push
js
sbb
jbe
push
in
mov
lods
sahf
sub
xlat
inc
ja
inc
mov
jns
mov
out
cmovnp
dec
nop
pop
js
mov
cli
adc
into
das
mov
lods
jle
lcall
sbb
subb
pop
arpl
cmp
jp
clc
xor
imull
sbb
rol
mov
loop
int
insl
mov
push
add
add
push
mov
cmp
xchg
iret
jge
loop
push
cmp
loopne
jb
sub
mov
cmpsl
dec
repz
adc
adc
test
aas
mov
lret
cld
mov
mov
push
pushf
jge
or
adc
xchg
jp
pop
in
pop
cmp
sub
push
out
js
push
and
lcall
loop
mov
inc
imul
adc
mov
sub
daa
jb
jle
cmp
push
cmpsb
jp
inc
data16
xor
pushf
in
lret
jl
shl
mov
pop
loop
out
push
imul
push
and
push
jle
mov
dec
sub
movsb
push
js
insl
ret
mov
and
jl
int3
ss
cmp
inc
sahf
repz
popaw
lret
sbb
lock
ss
iret
mov
mov
lcall
fbstp
push
aaa
test
xor
jle
cmp
outsb
lods
inc
jmp
push
mov
xchg
mov
jmp
push
xor
pop
adc
mov
mov
inc
xor
jae
into
xchg
dec
fwait
ss
mov
mov
mov
sbb
xchg
sub
jge
sub
movsl
aas
inc
ja
push
andl
pop
mov
stos
test
cmc
cmp
sbb
gs
xor
loop
adc
inc
test
sub
inc
adc
mov
jecxz
adc
loop
push
sub
cmp
and
lret
jle
gs
aas
pop
loopne
ret
xchg
insb
and
cmp
push
xchg
adc
ret
adc
lcall
push
add
and
aam
test
xchg
or
out
cltd
loop
or
das
sub
lock
sub
pop
sub
in
in
lock
movb
lea
cmp
mov
enter
xor
sbb
sub
aaa
inc
in
jmp
sub
in
sub
xor
mov
mov
lahf
jno
lret
sti
sbbb
out
jno
adc
cmc
push
outsb
xchg
scas
add
cmp
sub
jns
repnz
dec
gs
mov
xchg
aas
mov
dec
inc
sub
xchg
dec
lock
pop
lods
stos
into
jp
jle
hlt
test
xchg
mov
adc
imul
and
ja
lds
ljmp
lods
jb
int
clc
and
or
or
xchg
or
repnz
dec
mov
addb
jge
dec
jne
xchg
ja
dec
dec
add
mov
push
fimull
adc
loop
pop
xchg
push
fs
mov
mov
xchg
stos
pop
leave
xchg
jg
lahf
movlps
cmpsl
pop
lret
mov
pop
nop
xor
adc
fwait
movsl
cltd
popa
rcrl
and
sub
or
pop
xchg
popf
sbbb
adc
pusha
mov
negl
and
jmp
sub
mov
int3
pop
dec
sbbl
lret
jne
cmpsb
mov
or
sub
out
js
inc
subb
ret
test
enter
addr16
xor
xor
nop
nop
test
lock
jae
inc
jl
add
bound
xor
fistpl
mov
loope
iret
jl
lahf
dec
jg
push
rorb
adc
stos
jno
gs
scas
inc
fs
jg
xor
dec
xchg
lods
repz
aad
pop
mov
out
rorb
fbld
xchg
inc
subl
jmp
mov
sbb
insb
ret
in
test
test
fxch
jbe
push
insl
adc
jmp
jns
popf
mov
inc
push
jg
sti
jne
jge
cmp
aam
incb
std
mov
lahf
pop
xor
repnz
pop
fsubrl
mov
sbb
lret
lds
adc
cmpsb
dec
jmp
jmp
sub
into
jnp
leave
shl
xor
test
ret
jo
xorb
cmp
push
icebp
addb
inc
or
pop
mov
pop
movsb
inc
lods
nop
dec
dec
xorl
sti
pop
sbb
sbbl
xchg
lahf
lret
cltd
dec
and
cmp
inc
int
ret
in
add
mov
out
dec
sub
push
insb
test
icebp
pop
xchg
fsubs
jnp
jecxz
in
mov
xor
test
cs
sbb
out
jo
in
mov
push
mov
stos
or
daa
lret
movsl
out
mov
pop
jmp
mov
xor
mov
lahf
add
adc
les
cmp
mov
std
lahf
inc
mov
sbb
or
fsubr
ss
test
cmp
push
mov
or
sbb
movsb
sbb
pop
xor
lcall
stc
int
jmp
inc
or
std
imul
fstpt
fmul
not
push
and
mov
lea
adc
aaa
ss
sub
adc
sbb
jle
push
call
ret
xor
jbe
shlb
aas
mov
sarb
test
mov
mov
adcb
test
inc
xchg
lds
mov
shrl
push
pop
inc
and
jo
pop
jb
cld
lret
out
sub
push
inc
cld
mov
cs
fidivl
out
sbb
xchg
movsl
or
fiaddl
inc
rorl
mov
pop
cmp
sub
mov
push
and
aam
jo
mov
push
ficompl
movsl
or
xor
dec
es
add
icebp
add
xor
xor
or
sbb
and
mov
add
clc
sbb
scas
xor
sub
mov
sti
in
mov
xor
push
mov
les
mov
push
lahf
popa
inc
out
jb
push
push
inc
push
xchg
sub
xor
jmp
or
insl
add
ret
jp
stos
adc
movsl
aad
adc
enter
adc
pushf
imul
aad
push
sbb
test
and
xor
cld
mov
outsl
testb
imul
cmc
in
xchg
push
out
pop
addr16
push
lret
das
add
sub
aam
lret
jge
push
mov
jne
popa
mov
mov
jne
push
mov
das
fisttps
stos
inc
jg
push
cmp
jns
in
jae
push
psrlq
push
int
idivb
add
lret
dec
add
fistpl
cmp
push
out
lahf
fcmovnb
pop
aam
cli
js
mov
pop
jo
mov
enter
addb
cmp
outsb
mov
pop
mov
push
xchg
push
shll
jns
rcrl
iret
and
sti
xor
push
lcall
lret
xchg
mov
jne
bound
shl
pop
pop
sub
aam
push
and
popf
adcb
mov
popa
inc
insl
lock
jmp
or
cwtl
adc
sub
mov
xchg
mov
repz
and
sub
inc
jmp
repnz
add
xor
jne
add
call
imul
call
lret
and
sub
sbb
mov
inc
addr16
call
shl
xor
int3
jle
addl
testl
icebp
push
popf
dec
mov
push
fnsave
bound
or
mov
adc
arpl
xchg
notl
cmp
mov
test
sbb
jmp
or
inc
mov
stc
call
mov
push
cld
cli
dec
mov
into
leave
addr16
mov
xchg
adc
stos
lahf
stc
scas
mov
xor
cmpsl
nop
stos
push
add
jmp
nop
xor
push
xor
add
loopne
test
xlat
sbb
jnp
and
mov
sbb
and
or
inc
lahf
imul
in
test
je
mov
or
add
lret
mov
and
mov
cmpsl
pusha
xchg
cmpsb
sti
dec
or
add
sbb
lods
mov
jno
mov
jge
push
adc
js
mov
jge
sbb
pop
pop
clc
xchg
movsb
sbb
dec
adc
lock
fsub
xchg
roll
sbb
jnp
fcompl
in
rcll
lcall
int
rorl
mov
rclb
insb
mov
movsb
ret
pop
mov
cmp
jb
les
cmpsl
int
ljmp
xchg
out
dec
nop
dec
dec
mov
sbb
or
aad
leave
xor
adc
and
add
mov
lahf
dec
pop
xor
jle
pop
movsl
ret
repz
stos
mov
inc
bound
scas
loopne
push
mov
xor
out
je
mov
push
cmp
ds
mov
stc
mov
inc
sbb
mov
pop
divl
jo
test
clc
dec
test
add
pop
ljmp
mov
or
repnz
or
imul
sub
dec
fabs
shll
push
pop
cmp
pop
leave
fstp
cli
pop
pop
pushf
in
inc
jg
mov
and
hlt
adc
push
dec
rcl
push
ret
cld
xchg
mov
xchg
rorb
xlat
pop
in
lea
jb
into
push
sbb
xchg
push
sub
cmp
in
and
mov
sub
loop
cld
jno
daa
shll
imulb
push
mov
popf
pop
aas
daa
jns
cltd
mov
xorl
test
pushl
and
add
cmp
adc
loopne,pn
inc
ret
xor
and
andb
addl
dec
fincstp
pop
dec
aam
stos
pop
shlb
push
into
adc
je
in
cmc
push
sub
mov
xor
sbb
and
fisttpl
popa
int
add
outsl
cmp
shlb
bound
mov
aaa
sbb
fisubrs
ja
xchg
xor
into
sub
jno
mov
addr16
loope
gs
jg
cmp
push
fsts
inc
mov
pop
cmp
imul
mov
in
js
int
mov
xchg
fs
ret
fdivs
xchg
iret
mov
push
inc
les
insl
sahf
lahf
ret
popf
push
mov
pop
lcall
or
and
ljmp
cmp
negl
scas
cmp
fstpt
popa
in
and
dec
sub
gs
mov
adc
out
lret
imul
test
lds
cmpsb
jno
sbb
jnp
and
enter
aas
loop
mov
lea
push
fcompl
cmp
arpl
test
jbe
cld
and
lret
shlb
xchg
xor
gs
mov
mov
inc
dec
es
jge
dec
jg
loopne
cltd
xchg
add
xor
inc
mov
js
sub
je
fistps
fcmovnb
imul
mov
lods
push
andl
adc
dec
and
arpl
sbbb
insl
lea
mov
movsb
jae
push
outsb
iret
xchg
aas
inc
dec
imul
hlt
stc
imul
add
adc
in
std
icebp
lods
or
inc
cs
arpl
imul
push
loop
in
cmpsb
test
pop
sti
adc
sbb
dec
ss
mov
movsl
addr16
mov
mov
xchg
shr
lods
rolb
xchg
add
adc
call
mov
sbb
mov
fwait
add
outsl
pop
adc
sub
xchg
or
popa
imul
add
mov
shrb
ffree
repz
mov
fcom
pop
movsb
xor
inc
popl
adc
insl
lret
dec
adc
and
jge
inc
pop
xor
inc
icebp
loopne
jl
mov
mov
arpl
mov
subl
jg
in
pop
out
addb
mov
cmp
mov
sbb
aas
les
lahf
fadd
ljmp
inc
push
int3
mov
out
adc
loop
add
cmc
xor
loop
subl
inc
xchg
push
dec
repnz
push
and
cmp
or
cmp
insw
cmp
pusha
or
add
lret
jl
mov
mov
sbb
ljmp
jl
cmp
mov
ret
scas
arpl
pop
inc
les
dec
loopne
inc
into
in
pop
popa
arpl
int3
xchg
xchg
int
int3
dec
pop
imul
sarl
subl
js
rcl
insl
xor
xchg
pop
jmp
add
or
daa
add
sbb
testb
gs
fildll
xchg
scas
lock
pcmpeqd
jg
sub
js
push
sub
push
push
lods
jp
call
jo
ss
in
icebp
pop
inc
xor
mov
into
xor
and
ret
mov
jge
mov
pop
and
xor
and
mov
add
stc
stos
sbb
bts
jb
inc
adc
ret
add
ja
sub
test
and
adc
dec
mov
popf
data16
and
shlb
or
sarb
dec
mov
inc
xchg
adc
push
movsb
jl
scas
repz
jecxz
or
movsl
dec
jmp
cli
or
inc
jbe
lret
outsb
aas
pop
fs
sbb
sbb
jp
pushf
jo
push
mov
lods
push
call
into
inc
imul
movb
divl
dec
inc
and
aas
mov
pop
adc
cmp
out
jb
int3
mov
in
xor
push
lahf
push
lret
sbb
js
ret
ss
adc
xchg
or
fistpll
cld
pop
nop
or
xor
pop
cmp
lret
mov
sbb
outsb
mov
inc
inc
imul
icebp
xor
aam
imul
fcomps
shlb
push
js
cmp
movsl
jb
repz
lds
cmc
shlb
das
mov
lret
jne
push
jmp
inc
out
iret
movsb
mov
inc
sub
and
addr16
and
mov
and
lcall
mov
sti
mov
add
add
addr16
sti
or
mov
inc
fs
jns
std
dec
add
mov
mov
jmp
jns
pop
xchg
sbb
and
pop
push
push
xor
mov
int
cmp
add
int
and
inc
test
xchg
cmc
aaa
jns
push
or
les
push
mov
ret
sbb
mov
pop
cmp
stos
sub
dec
mov
xchg
mov
add
pop
sbb
icebp
lea
fisttpl
jno
mov
xchg
mov
cltd
cmp
test
cmp
or
mov
xchg
test
jmp
pop
pop
enter
mov
mov
sub
xor
popa
lds
jne
mov
push
jb
add
lods
or
lock
cltd
xor
test
cmpsb
jb
pop
popf
jp
gs
fidivrl
pop
push
sbb
in
movsb
mov
or
stc
data16
adc
dec
push
je
hlt
push
xchg
dec
cmp
cmpsl
in
mov
xchg
xor
jns
rcrl
pcmpeqb
jae
adc
iret
push
inc
aam
or
mov
loop
jnp
movsb
dec
aaa
popf
push
sahf
les
jns
mov
mov
jl
xchg
subb
xor
push
divl
ret
xchg
push
bound
fsts
mov
dec
or
mov
pop
pushl
xor
andl
jp
mov
xchg
xor
fbld
mov
popf
lods
stos
mov
stc
rep
lds
cwtl
into
or
popf
mov
pop
pop
mov
push
gs
stc
adc
dec
cli
jl
cld
sbb
fcomp
or
and
mov
or
xchg
pop
mov
fidivl
mov
xchg
push
inc
int3
lods
push
mov
aam
mov
popa
gs
xchg
stos
insl
xor
ja
das
mov
jg
pop
adc
fwait
fs
test
hlt
lock
imul
jb
cmp
test
movsb
mov
outsl
stos
push
xchg
and
in
aas
cmpsb
lret
cs
sub
fwait
inc
lods
iret
jb
into
adc
out
or
pop
ja
sbb
mov
inc
xlat
ljmp
and
push
popf
jg
push
iret
lahf
xchg
push
punpckhwd
and
aas
pop
inc
loopne
shl
in
or
jae
push
dec
stc
arpl
push
insb
mov
cmp
addb
adc
xchg
jo
bound
dec
fisubrs
subb
mov
dec
mov
and
and
bound
ret
js
push
push
insb
add
cld
mov
ja
std
fwait
insl
mov
cmpsl
xchg
out
push
movl
loopne
mov
test
fmul
mov
cli
adc
xchg
fsubl
fstpt
sbb
test
xlat
mov
mov
push
sub
sub
lods
xor
push
add
shll
sub
mov
cmpsb
push
sbb
sbb
add
mov
test
movl
add
adc
cmp
mov
ret
sub
sub
and
push
aad
jo
inc
xchg
loope
jp
dec
pop
cmpl
jg
mov
sbb
fst
clc
xor
rcr
fcomps
mov
cld
arpl
mov
mov
insl
jo
xchg
sbb
mov
pop
test
push
add
sahf
popa
repnz
pop
movsl
lret
xchg
pushf
sahf
stos
mov
mov
fisttpl
mov
push
decb
mov
stc
push
sbb
into
add
cli
jmp
inc
add
jl
xchg
dec
mov
xor
and
lods
jecxz
cmp
rorl
fldt
push
fs
iret
fnstsw
fwait
adc
jl
sbb
sub
dec
xchg
adc
dec
jl
mov
aas
dec
adc
aam
je
pop
jp
cli
sub
pop
shrb
and
dec
scas
mov
shrl
add
shrl
mov
clc
push
orb
sbb
ficomps
cmp
enter
dec
cmp
mov
adc
adc
pop
bound
push
mov
sub
cmc
xor
xchg
mov
rol
add
lret
fwait
addr16
push
out
lock
lea
adc
jae
or
in
aam
mov
xchg
mov
insb
into
pusha
mov
ror
push
daa
repz
mov
xlat
je
xor
and
imul
inc
push
std
aam
mov
into
and
adc
lea
lods
test
in
sub
and
out
xchg
in
clc
clc
sub
std
push
or
cmp
jmp
mov
cld
jbe
ljmp
dec
xchg
cld
sbb
lock
mov
aam
xor
or
in
jle
stos
pop
outsl
add
stos
adc
pop
jbe
int
test
dec
push
shlb
icebp
or
inc
sbb
push
js
rcll
int3
and
sub
mov
mov
int
sbb
mov
popa
hlt
rclb
fsubrl
insl
scas
sbbb
xchg
adc
fs
xchg
jmp
jmp
lea
dec
testb
out
mov
test
nop
and
add
int3
sbb
sbb
lods
fwait
cmp
or
lea
pop
sub
add
or
ds
mov
lcall
push
sahf
pusha
mov
js
cmp
jecxz
pop
lods
lcall
lods
cmp
or
pop
int3
dec
arpl
lds
int3
cmp
pop
mull
dec
sbb
test
push
and
out
adc
cmp
mov
pop
les
pop
mov
push
and
add
loop
rcrb
push
mov
out
hlt
jmp
or
add
push
stos
decl
out
cwtl
clc
cmpsb
hlt
xchg
add
cmpsl
xchg
cmc
popf
pop
scas
inc
add
add
sbb
mov
jb
pop
mov
cmp
fstpt
sbb
je
ljmp
jns
test
jnp
scas
pop
cmp
dec
iret
fsubl
sbb
dec
sahf
push
in
inc
xor
dec
movsl
push
mov
or
inc
jl
jp
mov
adc
dec
cld
sub
push
add
popf
mov
mov
testl
into
mov
xchg
inc
fwait
jnp
cvtpd2pi
std
xor
pop
cmc
leave
aad
adc
xchg
repz
pop
push
dec
sub
fidivrl
dec
idivb
and
xchg
dec
sbb
pop
cmp
and
cmp
stos
aam
jae
or
mov
sbb
mov
popf
dec
xadd
cmp
jecxz
xchg
bound
rcrl
rcll
scas
mov
inc
or
into
js
sub
jo
xchg
push
js
or
fnsave
orl
cmp
mov
pop
push
sbb
mov
jp
add
xor
ja
insl
mov
out
inc
ret
fldenv
jnp
pop
adc
push
ja
pushf
roll
pop
lahf
xchg
push
fstps
xchg
sbb
inc
ficoms
dec
xchg
cwtl
aam
xor
cmp
or
test
fidivs
addr16
iret
mov
cmpsb
cmp
in
fsubs
add
mov
mov
xor
fbstp
add
sbb
popa
cmp
sbb
fwait
stos
jmp
subb
lret
sub
mov
les
push
iret
adc
test
dec
jp
push
insb
daa
outsl
pop
or
pop
dec
pop
bound
xchg
sar
mov
cli
sahf
int3
cmp
sbbl
mov
imul
gs
xor
and
loope
int3
pop
iret
data16
sbbb
xchg
fstps
divb
pop
loope
pop
xor
mov
test
or
out
pop
inc
popa
add
mov
jmp
xlat
in
adc
push
mov
lods
push
or
sbb
push
jp
data16
cmpsb
cmpsl
push
test
push
jbe
aad
pop
or
lret
mov
or
push
scas
pushf
mov
jecxz
sahf
je
mov
jb
cmpsb
sbb
and
daa
int3
in
mov
pop
xchg
sbb
mov
addl
cmp
cmp
pop
dec
mov
shll
imul
into
loop
push
cmc
xlat
xchg
lods
mov
pop
pusha
jg
sbbl
in
adc
addb
cmpsl
sub
fldt
into
mov
sahf
or
ja
ret
shll
jnp
xor
xchg
int3
popa
xor
aad
rcll
idivl
shrl
sbb
fidivs
aaa
adc
sti
daa
mov
fdivl
mov
cld
dec
int3
out
inc
lea
aas
jne
sbb
jle
jns
mov
clc
gs
ret
xchg
push
push
sbb
mov
loopne
cwtl
cmp
xchg
pop
push
push
fsubl
lods
in
sub
push
imul
sahf
loopne
or
xchg
rolb
mov
mov
push
ret
adc
jle
loope
arpl
mov
mov
xchg
das
sti
ret
ficomps
outsl
pop
scas
add
scas
push
push
and
push
inc
movsl
adc
ds
dec
xor
bound
xor
fcomip
fcomp
pop
sbb
cmp
mov
sbb
je
pop
push
dec
or
dec
or
test
xchg
xchg
aaa
jl
iret
and
aaa
or
lock
ljmp
stos
pop
jbe
jb
int3
int3
nop
aam
cmp
pop
aam
mov
mov
dec
lock
scas
lcall
xchg
push
loope
fwait
mov
in
outsb
imul
std
sub
add
xchg
and
cmp
stos
lret
push
adc
test
mov
mov
jl
aam
inc
xor
mov
jl
lahf
add
jb
imul
mov
and
arpl
loope
sbb
mov
sahf
and
orl
addr16
orl
mov
fucom
xchg
or
pusha
testb
xor
jl
test
fwait
adc
fsubl
dec
cmp
js
push
lcall
adc
fs
addr16
push
mov
fwait
js
mov
in
mov
repnz
jle
rclb
fsubrs
add
xchg
mov
dec
add
lods
add
xor
or
dec
pop
mov
movsl
mov
mov
lock
add
sahf
ja
sbb
outsb
pop
pop
test
stos
xchg
adc
in
addr16
jne
mov
lahf
jge
dec
mov
aas
jp
jl
fmulp
aaa
or
inc
cmp
aam
cli
outsb
shr
ret
cmp
push
jp
mov
arpl
or
nop
cmc
rcl
mov
xor
das
push
cltd
mov
pop
daa
and
das
movsb
fmul
lea
pop
push
ds
mov
jo
jbe
dec
js
test
jg
fiaddl
mov
out
outsb
push
ds
push
jbe
addr16
cs
or
mov
lahf
aas
mov
xchg
rorl
les
inc
xchg
dec
push
fadds
dec
pusha
lret
sub
jl
sub
lcall
test
js
ds
mov
fildl
dec
repz
addr16
ffreep
rolb
sahf
ss
sbb
ss
inc
hlt
shr
jo
pop
je
cmp
loopne
mov
xchg
iret
mov
shll
lods
in
pop
xchg
push
jle
dec
repz
fpatan
push
jmp
jecxz
in
xchg
fnstcw
popf
adc
mov
cmp
mov
int3
sbb
xor
pushf
mov
lret
cmp
sbb
xchg
stos
pop
xor
pop
shrb
mov
mov
xor
push
jo
adc
adc
dec
stos
movq
cmp
jge
push
push
nop
cmpl
mov
aaa
or
pop
lock
popa
xor
stos
and
into
lods
arpl
jge
loop
jp
pop
es
push
addl
scas
cltd
shll
jmp
test
shll
inc
xchg
and
imul
out
fstpl
ficompl
repnz
mov
popf
hlt
mov
cltd
stc
pop
inc
mov
cli
mov
mov
outsl
mov
add
fwait
add
ja
adc
sbb
lcall
push
ret
or
je
dec
mov
mov
arpl
sub
repz
out
clc
ja
faddl
sub
mov
pop
and
jns
iret
rorl
fimuls
cld
bound
mov
repz
ss
or
imul
fwait
repz
out
and
inc
xchg
fsubl
hlt
popf
xor
popa
dec
sti
mov
aas
mov
jmp
push
xchg
loopne
mov
pop
lods
push
sbb
icebp
clc
imul
mov
or
and
dec
popa
cwtl
sti
xor
out
imul
data16
jp
pop
add
testl
test
xor
mov
imul
xor
adc
mov
test
xchg
stc
mov
add
sbb
push
xor
lock
pop
stos
pop
leave
dec
or
adc
out
bswap
clc
jl
push
push
push
imul
add
popa
push
repnz
test
xor
mov
mov
testb
clc
sarl
xchg
outsl
jnp
ljmp
inc
push
mov
xchg
ljmp
aas
lcall
mov
push
push
xchg
jb
pop
xchg
push
xchg
popf
mov
subl
outsb
dec
pop
pop
pop
pop
dec
sbb
das
test
fldl
or
insb
xchg
push
sahf
and
mov
lahf
mov
cmp
cmp
gs
cmp
nop
std
pop
adc
fwait
andl
rcrb
pusha
pop
mov
pop
jecxz
jle
mov
cltd
dec
and
test
mov
cmp
or
and
shl
sub
fimuls
clc
mov
fwait
push
gs
in
in
mov
pop
iret
in
repz
movsb
icebp
in
or
push
data16
shl
push
out
inc
ret
aas
or
jl
addr16
scas
xchg
shll
sbb
push
test
push
or
enter
jbe
rcrl
data16
push
in
inc
popa
push
shll
icebp
xchg
mov
iret
sub
ficoml
sub
mov
mov
popa
ss
or
cmp
fbstp
cwtl
les
stos
sbb
jnp
sbb
push
push
aas
out
cmp
lret
jle
cmpsl
lcall
rolb
mov
rorl
nop
hlt
jle
sbb
mov
aam
mov
mulb
push
xor
loopne
cli
not
or
cltd
xor
or
pop
push
cmpsb
into
sub
movsl
jne
ret
ss
aas
jp
hlt
or
jo
int3
int
inc
stos
stc
cwtl
mov
loopne
clc
and
dec
mov
sbb
hlt
pop
or
jmp
sbb
mov
lods
cli
testl
sbb
xor
mul
and
add
ljmp
call
jge
outsl
xor
dec
hlt
pusha
mov
add
lods
aas
es
jns
js
insb
insb
es
fs
and
hlt
or
gs
insl
xchg
mov
mov
and
mov
push
scas
test
push
iret
xchg
dec
mov
mov
and
sub
repz
in
inc
enter
and
dec
shl
mov
xor
adc
adcb
std
and
outsl
dec
fiadds
pop
out
inc
sub
push
sbb
mov
icebp
xor
jbe
stc
loopne
and
xchg
inc
into
adc
push
out
cmp
bound
cmp
mov
mov
cmpsl
rcrb
imul
lock
sub
pop
out
mov
sub
pop
pop
sarl
enter
in
inc
mov
dec
and
rcl
cmp
push
pop
testb
or
push
pop
add
mov
mov
clc
repnz
push
sub
outsb
mov
in
fwait
rol
cmc
notl
loop
cltd
mov
es
stc
push
mov
push
adc
in
je
dec
xchg
mov
mov
stos
std
lahf
out
push
pop
pop
hlt
mov
pop
mov
outsl
xchg
insl
enter
sahf
push
and
push
jb
push
arpl
adc
cli
lods
xlat
ljmp
sub
mov
fists
inc
repz
out
mov
sbb
in
or
rolb
imul
jnp
pop
xor
pop
jae
lret
dec
pusha
je
les
cmc
mov
pushf
out
sub
pop
cmp
sub
repnz
pop
lret
cmp
jnp
lds
push
sbb
in
lods
jg
loopne
cmp
ficomps
pop
jge
cmpl
fs
cmpsl
stos
cmp
popa
fdiv
test
xor
dec
dec
or
pusha
mov
fs
mov
int3
aas
mov
inc
mov
test
clc
dec
push
push
into
dec
lea
and
cmp
cmpsb
and
xor
rorb
aad
push
push
shl
lahf
dec
push
or
xor
shll
mov
pop
fisubrs
mov
mov
ret
xor
and
push
dec
cld
mov
jecxz
push
fwait
cmp
repz
std
xor
lea
sbb
outsb
and
scas
fmul
sub
js
popa
mov
mov
dec
inc
arpl
jle
fldl
in
test
or
cmp
lea
jnp
push
push
movsl
loopne
fcoml
xchg
pop
sbb
hlt
test
dec
loop
sbb
loop
mov
xor
mov
push
pop
ljmp
rclb
ret
frstor
xchg
cltd
out
xchg
and
jb
sahf
pop
dec
icebp
popf
enter
repz
movsl
shll
imul
mov
jb
push
xchg
cmp
cmpsl
jle
icebp
dec
shl
sbbb
mov
and
ja
dec
pop
fdivrp
mov
les
test
push
rep
and
cwtl
pop
imul
stc
inc
xchg
lcall
push
jp
dec
aad
push
sub
jmp
mov
scas
mov
jb
add
mov
pop
dec
outsb
testb
hlt
sti
sub
into
adc
mov
pop
lods
nop
push
ljmp
push
xchg
xor
or
cmpsb
loope
push
pop
inc
push
popf
and
push
cmp
xchg
xor
aas
mov
dec
push
xor
stc
lcall
test
push
arpl
pop
iret
dec
jae
pop
movl
outsb
outsb
and
push
loopne
leave
dec
int
sub
outsl
push
in
mov
lret
jp
xchg
sbb
sub
mov
pop
add
push
int
add
push
lods
shl
popa
aas
or
dec
notl
xchg
pop
movb
push
xchg
jp
mov
daa
adc
fcompl
xlat
sarb
icebp
or
fistps
mov
add
pop
pop
dec
dec
pop
mov
shld
out
cmp
in
push
repnz
and
jne
movb
xor
xor
adc
mov
lods
imulb
mov
and
mov
clc
out
sub
xchg
push
cmp
sub
popl
jle
out
cmp
dec
sar
and
mov
shl
and
in
push
mov
pop
pop
cmp
fidivs
addr16
stos
leave
sub
pop
mov
push
shlb
and
shl
lcall
std
testb
push
add
mov
pop
pusha
jmp
jns
insb
addr16
jmp
lds
jmp
mov
sub
ficoml
lea
cmp
aam
rol
lock
clc
sbb
loopne
dec
push
and
int3
dec
push
lcall
jmp
leave
dec
xchg
dec
ss
sub
enter
push
mov
pop
mov
sub
lods
jge
jnp
or
outsb
in
jnp
int3
ret
loop
hlt
loop
out
push
cmp
inc
dec
xchg
bound
add
gs
movsb
icebp
push
add
in
cmpsl
mov
lahf
jne
fwait
xchg
sub
add
xlat
inc
mov
je
sbb
in
in
adc
inc
xor
scas
mov
dec
aaa
test
lcall
adc
or
pop
push
sub
adc
push
shrl
cmp
pop
pop
scas
cmp
into
jae
lock
lret
mov
cli
inc
int3
sbb
frstor
push
adcl
mov
dec
xchg
inc
push
fstpl
rorb
xorl
es
add
sbb
add
pop
pushf
rclb
sbb
mov
adc
dec
xor
hlt
or
cmp
cmp
aad
clc
fdivl
in
push
js
mov
das
add
fs
mov
nop
xchg
or
dec
dec
or
sbb
inc
icebp
push
dec
mov
fildll
cli
nop
sbb
mov
dec
add
jno
cs
and
sub
add
inc
sbb
dec
in
mov
add
push
cltd
fistpll
mov
pop
xor
xchg
push
xor
mov
out
iret
dec
mov
lahf
add
into
mov
push
insb
repnz
mov
lret
das
mov
inc
leave
pushf
in
lret
fidivl
hlt
fadds
jl
pop
pushf
cmpb
sub
iret
mov
sub
jns
xor
or
lcall
xor
push
les
push
push
stos
or
repz
push
mov
rclb
iret
and
stos
push
xor
loopne
adc
imul
movb
std
ss
push
jbe
xchg
push
out
xchg
inc
mov
insb
mov
pop
rcrb
or
mov
inc
popa
xlat
mov
xlat
mov
sub
sbb
pop
mov
cmp
sahf
push
mov
divb
arpl
sbb
or
push
adc
dec
sub
jb
cltd
sub
add
pusha
cmp
sub
push
repz
adc
test
cmc
inc
jp
test
mov
scas
push
movsl
lea
xor
aaa
inc
sub
adc
bnd
sub
bound
negb
dec
stos
jae
test
push
push
movsl
xor
lods
call
jae
and
leave
fstpl
sbbb
jge
shr
mov
mov
pop
xchg
dec
ret
je
cmp
and
aam
mov
mov
xchg
ret
xor
sbb
mov
xchg
into
std
adc
adc
sub
repnz
rcrb
sub
jg
ret
pop
cmp
aaa
int3
aad
mov
add
cld
dec
ss
outsl
xchg
arpl
stc
mov
push
inc
xchg
jp
sbb
mov
dec
shrb
mov
fdivs
pop
mov
aas
int
dec
inc
lods
jae
pop
mov
jle
popf
leave
inc
mov
adc
bound
mov
loopne
je
scas
in
icebp
lods
adc
je
sbb
adc
loope
cld
sub
dec
mov
pop
add
dec
sbb
pop
xchg
fwait
cmp
push
pop
push
out
inc
cld
insb
sub
cmp
dec
fwait
push
dec
xor
pop
push
fimull
jne
mov
jmp
mov
cmp
sarb
dec
stos
movsl
jp
cld
cltd
or
lahf
cmc
cmp
adc
test
or
out
cwtl
sub
popa
pushf
adc
or
scas
inc
divb
stos
fistpll
pop
jb
cmp
lcall
inc
loopne
cs
pop
xchg
ficompl
into
mov
inc
loopne
xchg
mov
xchg
shlb
xchg
cs
sub
and
test
inc
cmp
popf
dec
mov
movsl
cmpl
mov
leave
lcall
pop
gs
push
sbb
mov
mov
cmp
loope
aaa
out
movsb
add
das
push
adc
pusha
stos
icebp
pop
popa
into
mov
mov
pop
imul
lret
sub
arpl
and
add
rcrl
pushf
lds
push
aaa
xor
stc
loope
insb
sbb
dec
daa
xor
loopne
rcrb
addr16
pushw
pop
out
mov
aad
fwait
sub
inc
sti
sbb
sub
xlat
lret
fbstp
mov
jle
je
cmpsl
pop
ljmp
aad
orl
and
pop
sub
imul
lret
add
outsl
push
jle
mov
hlt
sub
bndstx
in
leave
rol
out
or
sub
fisubrl
cmp
push
adcl
adc
sub
dec
sbb
imul
jb
mov
add
lea
push
test
mov
pop
sarl
xor
mov
enter
push
ds
sub
push
call
dec
mov
mov
packuswb
pop
sti
mov
ret
cmp
in
push
sti
roll
sub
and
inc
popf
dec
and
push
mov
pop
mov
inc
scas
int
lret
shrb
add
loope
or
push
ret
jno
repz
push
ss
xor
pop
aad
pop
jp
inc
sbb
shrl
inc
jne
sarb
jnp
lret
xor
enter
or
jmp
dec
lock
adc
pop
je
cmpsl
sub
add
data16
mov
pop
and
out
or
mov
mov
inc
dec
iret
daa
sbb
mov
stc
rcr
xchg
sbb
loop
sahf
pusha
movsb
orl
inc
xchg
lods
aad
addr16
cmpsb
jb
jl
sbb
gs
jl
jl
cmovp
mov
lds
inc
pop
cs
inc
jp
popa
and
inc
data16
ss
sti
add
jl
nop
adc
lods
daa
and
xor
js
xor
pushf
mov
jb
inc
dec
sub
xchg
adc
lea
addr16
hlt
dec
or
mov
and
nop
or
insl
mov
nop
ja
and
add
jno
pusha
dec
jbe
out
dec
sbb
dec
inc
fstl
push
fwait
sbb
outsl
xor
jo
adc
or
sbb
in
fldcw
pop
inc
push
and
ret
jb
call
cltd
sub
das
dec
nop
leave
push
or
loop
call
stc
inc
sbb
mov
fs
in
pop
xchg
fimuls
test
cltd
aas
add
shl
test
ljmp
cmc
aaa
into
xchg
lahf
lds
loop
jb
push
xor
dec
call
imul
lods
es
jl
loope
insb
data16
daa
cmpl
test
mov
xor
jae
jecxz
push
push
out
adc
adc
mov
shl
and
push
dec
arpl
jle
sar
mov
ja
push
es
inc
jns
mov
xchg
nop
fdivrs
test
insb
ret
mov
mov
jns
mov
dec
cs
pop
cmp
xor
icebp
ret
xchg
xchg
das
enter
jg
aaa
jnp
subb
push
xor
jnp
xchg
ljmp
xor
popf
push
mov
sbbl
jns
imull
fcmovnb
mov
mov
movsb
dec
mov
xchg
lret
sbb
nop
mov
cltd
xor
je
movsl
lock
push
iret
sub
mov
adc
fwait
int
adc
scas
dec
rorb
push
jl
cmp
mov
pusha
xor
mov
ret
pop
stc
mov
pop
pop
lahf
popa
int
xchg
pop
adc
mov
leave
fstpl
testl
fildl
and
call
pop
aas
add
mov
xor
fucom
push
out
xlat
mov
mov
push
mov
aaa
cmp
pop
popf
push
notb
cltd
sbb
popa
jge
xchg
jle
and
and
xor
add
icebp
sub
adcb
jl
lret
addr16
and
ljmp
fsubr
inc
pop
push
loope
outsl
xor
jne
xor
popf
nop
imul
fsubrl
or
lahf
inc
jno
mov
movsl
xor
dec
loop
outsb
dec
mov
jb
shll
mov
es
fdiv
pop
adc
adc
dec
dec
rcll
cmpsb
loopne
movsl
adc
inc
hlt
scas
mov
dec
fsubl
pusha
jecxz
stos
cmpsb
or
add
jle
imul
mov
dec
and
mov
dec
inc
add
in
movsl
adc
mov
and
cltd
xor
cmpsb
mov
imul
ror
xchg
push
jns
inc
jne
int3
mov
flds
popa
push
push
loope
shl
xchg
fldln2
dec
sub
outsl
std
xchg
les
fidivrl
push
mov
dec
and
iret
leave
fpatan
outsb
loope
cmp
lret
sbb
xchg
bound
adc
sbb
jns
jno
loop
mov
ror
daa
rcrl
or
push
jmp
cltd
pop
jmp
pop
push
cmpsb
jno
fnstenv
adc
dec
movsl
sbb
cmp
jnp
dec
xchg
andb
test
xchg
xchg
or
pop
and
sbb
cli
push
pop
test
mov
mov
out
push
mov
inc
inc
sub
inc
lret
push
jno
je
jl
cmp
jae
in
js
adc
fnstsw
sarb
sub
movsb
in
push
sub
loope
dec
mov
arpl
dec
mov
pushf
insb
xchg
or
loop
ljmp
fs
imul
mov
and
add
pusha
ja
pop
xchg
jecxz
adc
shrb
sbb
fcmovbe
sbb
ljmp
inc
std
in
cmp
pop
mov
push
xor
jns
enter
mov
mov
xor
roll
mov
adc
sub
xlat
es
lock
pop
pop
lds
jno
adc
xlat
or
repz
jg
scas
add
inc
orl
pop
xrelease
popf
and
das
sbb
xchg
xor
shrl
jl
dec
inc
pushf
sahf
rdpmc
push
push
loopne
adc
add
icebp
sub
sub
inc
xor
push
icebp
pop
and
sbb
addb
scas
xchg
fadd
nop
sbb
lea
jecxz
loop
fbld
lret
iret
jae
and
nop
les
sub
sbb
call
addb
testl
adc
pop
cmp
sbb
pop
div
jg
mov
mov
mov
push
fbld
pop
dec
stos
enter
xchg
pushf
pop
pushf
sarl
and
push
test
mov
xchg
clc
loop
sbb
subl
popf
mov
push
test
int3
jns
xchg
out
inc
lods
xorb
and
cmpsb
in
xor
ss
jo
pop
aad
nop
cmp
mov
and
jl
mov
lods
jo
mov
mov
push
add
xor
add
repnz
jl
sub
jle
imul
ljmp
jbe
adc
imulb
push
push
xchg
sbb
inc
pop
inc
xchg
loop
pusha
imul
fsubrl
mov
mov
sbb
xor
jecxz
das
aam
fistpl
jne
test
add
outsb
xor
xchg
ret
pop
fisttps
insb
mov
fdivrl
mov
inc
fwait
xchg
pushf
frstor
aas
mov
popf
gs
repz
ret
test
mov
inc
outsb
cmp
mov
jle
outsl
out
mov
out
xchg
fbstp
add
push
mov
outsl
mov
or
pop
and
fimuls
pop
loop
pop
mov
inc
mov
mov
jmp
rolb
xchg
pop
repz
loope
fiadds
fildll
mov
inc
loop
daa
adcl
bound
xor
sub
lahf
fchs
mov
jmp
xorl
jg
jbe
xchg
fucompp
lret
add
dec
inc
push
rcrl
cltd
imul
inc
jmp
lds
icebp
adc
outsb
fldl
xlat
xchg
int3
push
jg
adc
add
icebp
dec
lods
push
mov
mov
push
lret
lods
adc
sahf
dec
nop
xchg
push
in
pop
loope
xor
popa
loope
inc
mov
mov
cmp
or
clc
subb
gs
sbb
or
stos
fs
dec
mov
subl
adc
fcoml
add
mov
xchg
fwait
sub
adc
cwtl
cmp
mov
loopne
mov
ss
mov
cld
cld
pop
in
mov
ljmp
std
sbb
inc
pop
adc
test
mov
roll
cmp
test
xchg
scas
cwtl
fsub
and
fcomps
inc
mov
stos
cltd
out
and
pop
movsl
and
add
dec
push
jge
or
sub
shll
scas
dec
push
das
push
xlat
mov
mov
fcom
dec
xchg
jecxz
mov
jecxz,pn
test
testb
inc
or
pushf
scas
rcrb
aaa
test
std
insb
dec
dec
insb
adc
test
sbb
mov
or
lret
leave
pop
bound
mov
pop
insl
lods
stos
ret
movsb
jnp
mov
hlt
jl
adc
sub
jbe
repnz
gs
daa
jnp
mov
sub
mov
or
pop
ret
jg
mov
jecxz,pt
pop
outsl
lods
add
or
aaa
xchg
or
hlt
ljmp
test
pop
dec
int
xchg
lods
dec
jns
jmp
adc
ds
enter
leave
rdtsc
mov
sub
add
xor
sub
aam
xor
pop
pop
pop
sub
aam
pop
jns,pn
and
stos
pop
xlat
jp
adcl
jecxz
jnp
jns
out
mov
je
xchg
add
outsb
jl
inc
mov
xchg
sbb
and
repnz
dec
pop
sub
mull
mov
aam
sbb
stos
xor
push
push
add
in
dec
or
iret
add
scas
mov
sub
jmp
stc
out
cmp
jl
popf
push
mov
cmp
sub
out
push
cmp
fimull
xchg
mov
push
push
sub
xchg
xchg
cmp
mov
faddl
mov
je
xor
pop
test
sbb
cld
dec
leave
mov
push
testl
faddl
sub
hlt
mov
mov
sbb
cmp
outsl
pop
or
jl
stos
and
mov
or
aas
pop
out
push
or
data16
cwtl
xlat
mov
lcall
and
loope
or
imulb
jl
lldt
xor
fildll
and
loope
inc
cmpsb
push
cmp
aas
jg
sahf
testb
dec
add
arpl
pop
in
sub
ja
fsubr
cmp
mov
or
test
adc
pop
push
fmuls
inc
mov
adc
pop
pop
leave
or
sbb
daa
mov
sub
test
mov
xor
xchg
mov
cmp
mov
dec
sbb
clc
addb
inc
or
jg
cmc
xor
sbb
mov
icebp
push
movsl
test
shl
dec
inc
mov
outsl
js
add
jecxz
jl
out
decl
push
loop
add
mov
mov
pop
xor
sbb
xchg
dec
lds
adc
mov
mov
push
insl
jl
adc
outsb
push
ljmp
mov
add
cmp
inc
ficoms
decl
pop
push
push
pusha
pushf
add
and
and
lds
or
mov
jecxz
shll
cmpsb
jae
imul
mov
adc
sahf
xor
xor
sub
jnp
ret
mov
jmp
jns
test
sub
mov
add
mov
pop
or
xchg
in
clc
adc
rorl
xchg
ja
cld
jmp
pop
cmp
fldcw
into
lds
cld
inc
lret
jmp
popa
mov
lock
mov
rorl
movsl
fcoml
cld
arpl
and
shlb
and
xchg
jne
cmp
ret
stos
mov
icebp
cmc
xlat
gs
movsb
bound
xor
xchg
or
leave
jp
and
jnp
sbb
shlb
fchs
pop
push
or
add
or
icebp
aas
icebp
add
xchg
out
push
aas
lret
add
push
aaa
sbb
xor
mov
out
fsubs
loop
xchg
inc
popf
pop
xchg
jmp
mov
mov
mov
adc
mov
fstp
jnp
mov
dec
or
xor
cs
cmp
and
push
adc
mov
pop
in
cmc
and
btr
mov
aas
movsb
jge
xor
sub
and
lds
pop
mov
scas
rcrl
cmp
lret
hlt
mov
mov
xchg
lds
lcall
mov
lods
mov
xor
jecxz
in
sbb
into
jo
push
add
jg
or
and
int
mov
data16
and
or
mov
mov
inc
sbb
xor
mov
sti
sar
dec
adc
xchg
js
ljmp
loope
outsb
mov
xchg
adc
and
jne
aad
pop
leave
fisubs
lds
shrl
or
jns
add
or
sub
xchg
cld
cld
mov
scas
xchg
clc
in
inc
nop
ds
jno
aam
lds
xchg
xor
fdiv
addr16
and
das
shll
clc
aam
daa
scas
fnstcw
lret
loope
popa
mov
scas
mov
adc
xchg
mov
pop
stc
cli
or
cli
sbb
mov
ds
or
jge
cmp
ficompl
mov
adc
cmp
ds
in
mov
aad
or
loop
jnp
daa
enter
xor
clc
pop
arpl
sbb
imul
fcmovne
ficoms
imul
sub
xchg
jne
push
jecxz
sub
cmpsb
lret
addl
mov
out
ret
xchg
sub
pusha
jns
aas
cmp
push
jle
push
push
popf
into
cld
xor
mov
cwtl
mov
cli
fxch
loop
int3
pop
sbb
fsubl
fscale
xchg
xor
mov
pop
inc
sub
inc
loopne
call
lahf
adc
in
mov
pop
gs
or
inc
push
mov
es
inc
mov
movsl
pop
mov
cli
pop
push
out
add
lods
ja
mulps
arpl
mov
push
lahf
lret
add
sbb
adcl
cmpsb
popa
ret
adc
xor
popf
add
xchg
mov
cmp
xchg
hlt
inc
mov
shll
int3
mov
and
mov
inc
mov
xchg
shll
mov
mov
pop
je
dec
ljmp
or
into
imul
sbb
andl
enter
pop
out
leave
mov
pop
xchg
loopne
gs
or
pop
sub
pop
mov
test
ret
movsl
mov
in
mov
adc
jecxz
add
push
jl
or
fucomi
push
test
adc
and
mov
sub
ljmp
mov
enter
out
add
mov
call
xchg
sub
icebp
fdivrl
push
cmp
pushf
xorl
mov
imul
cwtl
pop
mov
mov
jge
dec
push
xor
jno
mov
adc
xor
rolb
aad
sti
scas
mov
add
imul
lods
gs
shl
clc
dec
and
iret
nop
jne
cmp
adc
stc
cltd
rcll
imul
pop
outsb
daa
sbb
outsl
xchg
cli
outsb
ljmp
outsb
cmp
and
outsl
test
jle
xorb
pop
fsts
lds
int3
cli
pop
iret
mov
sub
aaa
mov
jmp
out
xor
aaa
xor
fs
pop
jns
pop
push
cmp
hlt
cltd
lods
test
ja
xchg
aaa
fcmovb
mov
xor
icebp
xor
mov
test
cmp
pop
cmpsb
xor
add
dec
inc
pop
cmp
popf
add
rolb
or
mov
xchg
inc
addr16
and
in
aam
add
dec
inc
insl
dec
cli
adc
fisubl
mov
int3
pop
and
jnp
clc
xor
out
out
add
or
into
mov
jg
mov
xor
jbe
adc
adc
jmp
xchg
rorb
sbb
bound
pusha
or
pop
aas
xchg
icebp
pop
ret
in
int
pop
in
mulb
stos
xor
or
jg
ror
hlt
xor
mov
scas
lahf
xchg
dec
push
repz
mov
push
cs
mov
mov
roll
mov
cmpsb
pop
out
dec
fistps
je
aaa
fcomps
jns
and
bound
fsubl
pusha
scas
ror
popa
fcoms
js
xchg
or
rcll
and
sbb
popf
outsb
into
pop
das
mov
jno
shll
out
orl
push
xchg
les
mov
in
fsub
pop
imul
xchg
dec
xchg
test
or
pop
and
lcall
stc
clc
sub
push
add
enter
imul
arpl
push
fmulp
popf
or
ret
inc
sti
test
adc
pop
sarb
cmp
mov
mov
icebp
push
ret
jmp
inc
xor
dec
xor
cltd
cmp
mov
test
iret
jmp
mov
add
sti
push
fwait
cmpsl
leave
mov
push
lea
jno
clc
dec
xor
daa
fisubrs
cmp
pusha
mov
dec
scas
pop
nop
pop
stc
jbe
cmpsb
mov
dec
js
arpl
sub
sub
cmp
xchg
es
and
stos
inc
xor
lods
jae
sarl
ret
shl
pop
push
andw
bound
xchg
dec
arpl
imul
mov
lret
pop
inc
mov
nop
jnp
es
out
cmp
xor
jo
sub
mov
js
sub
cmpsl
sarl
fs
bound
cmp
int
stos
mov
and
xchg
pushf
dec
iret
dec
outsb
into
dec
and
mov
push
stos
cltd
cltd
mov
cmovo
test
or
iret
dec
jecxz
jg
popf
push
or
popa
xchg
ficomps
jb,pn
addb
ljmp
adc
imul
lcall
lret
jecxz
xor
mov
sti
pushf
cmp
aaa
shll
clc
repnz
add
push
jecxz
scas
test
out
adcb
rcr
adc
jg
pop
out
sbb
outsb
push
push
pop
xor
xor
mov
mov
jl
ret
ror
aas
nop
pop
lods
mov
adc
xor
dec
adc
xchg
xchg
dec
mov
in
cmp
scas
in
notl
cwtl
scas
jo
fimuls
push
int3
jo
inc
cmpsb
lret
push
out
or
mov
mov
flds
jno
adc
pop
pop
out
push
dec
das
iret
jp
iret
adc
xchg
sub
or
aaa
mov
ds
gs
dec
add
out
nop
adc
faddl
testb
sbb
push
fnstsw
pop
adc
mov
nop
daa
mov
jbe
aaa
push
add
sbb
lcall
dec
cmp
xchg
push
xchg
jg
push
sti
adc
out
imul
inc
push
mov
arpl
pop
or
fnsave
jmp
mov
push
sahf
xchg
adc
lods
push
dec
stos
push
out
sbb
stos
es
sbb
lods
sub
scas
fsubp
pop
xor
out
cltd
out
jne
inc
mov
push
lret
and
test
js
mov
int
sar
inc
sbb
stos
fists
xor
adc
lods
xchg
scas
push
aad
jne
lcall
push
popa
jp
out
xchg
mov
lahf
cmp
pushf
mov
mov
and
add
sti
setle
pusha
dec
dec
sbb
cwtl
lahf
stc
jmp
xchg
mov
dec
xor
insb
lods
out
sub
push
cmp
or
jp
push
xchg
mov
stc
push
cmp
fldt
inc
cmp
lcall
fidivs
mov
test
sub
lahf
jnp
into
ret
pop
cmp
addb
dec
test
mov
dec
lock
and
sbb
adc
scas
int
and
cltd
xor
in
into
sbb
loop
lods
movsb
xchg
mov
nop
mov
add
sub
xor
pop
shr
push
insl
or
adcl
pop
hlt
jp
pop
dec
lahf
sub
stos
loop
gs
fwait
dec
mov
pop
lret
out
xchg
rol
lahf
or
fdivr
mov
mov
xor
mov
adc
lds
ret
xor
mov
out
sub
cmp
pop
je
lret
outsl
sbb
push
or
push
sbb
stos
movsb
icebp
ffree
inc
out
fstps
mov
test
jge
or
pmullw
lea
push
push
mov
mov
cwtl
adc
or
clc
mov
xchg
push
push
cmp
movsb
fbld
sbb
adc
in
mov
imul
arpl
xchg
sub
adc
push
jno
sbb
into
roll
ja
mov
in
jge
mov
sub
sub
dec
rclb
mov
and
cld
cmp
push
fistpll
cmp
popf
sub
and
jne
mull
and
jg
jno
fmull
add
outsb
push
adc
pushf
cmp
pop
ja
xchg
dec
testb
push
int
ja
xor
push
out
cmp
aam
cs
dec
lods
mov
pop
ret
rorl
push
sub
daa
and
mov
popa
or
in
js
push
push
cwtl
dec
dec
push
sbb
aam
push
data16
cld
xchg
mov
ss
add
pushf
mov
dec
test
push
fsubs
cwtl
in
and
das
test
repz
pop
dec
jb
sbb
ret
jae
inc
jge
dec
cmpsl
mov
mov
mov
orl
sbb
cs
xchg
stos
jge
insl
mov
cmpl
push
dec
pop
popf
inc
push
int
mov
push
leave
or
add
pop
pop
mov
and
jbe
aam
push
das
xor
jl
xlat
lds
xchg
enter
nop
in
mov
add
rcrb
lds
fsubrs
sub
adc
ret
or
ss
cld
xchg
sub
jl
sbb
mov
push
enter
out
push
or
or
inc
xchg
adc
pusha
cmp
ficompl
mov
popa
movsl
push
xchg
fldt
icebp
inc
sub
dec
in
movsb
or
inc
fildll
add
iret
mov
js
imul
lcall
jb
sbb
adc
push
dec
add
jne
adc
pop
pop
xlat
push
dec
mov
sahf
mov
dec
xor
push
repz
mov
add
cmp
mov
xlat
jg
in
inc
cmp
out
aam
lods
js
add
mov
into
nop
xchg
cmp
faddl
pop
adc
mov
jns
mov
pop
xor
test
nop
testl
or
clc
pop
outsl
add
lds
insl
repnz
scas
pop
mov
fldl
dec
push
and
jmp
test
mov
pop
insb
jo
xlat
out
es
movl
aas
imull
imul
stos
mov
fdiv
js,pt
std
dec
add
jp
adc
mov
push
lea
imul
movsl
push
inc
sbb
mov
int3
jo
scas
neg
push
push
add
jo
fadd
mov
and
lahf
xor
xchg
add
aaa
jl
movsl
rcrl
inc
add
test
mov
loop
outsl
or
fstps
idivl
mov
add
lea
pop
loope
aas
add
je
scas
aad
mov
mov
cmp
popl
sbb
orb
mov
orl
jle
fsts
ja
lret
and
test
icebp
mov
ret
lds
shll
pop
adcb
shrl
pop
mov
loopne
push
pop
push
mov
lea
jmp
jb
mov
or
out
jg
mov
jp
cld
lahf
int3
mov
mov
shrl
mov
push
scas
imul
inc
arpl
scas
cmpb
and
outsb
xor
aaa
jnp
arpl
cmp
cmp
sub
adc
outsl
out
dec
push
mov
add
mov
adc
cmp
cmpsb
cmp
or
js
sbb
js
scas
leave
dec
or
lods
adc
data16
scas
mov
add
and
pusha
aam
pop
ja
loop
pop
jns
ss
and
add
push
sbb
hlt
or
sahf
sbb
sub
mov
push
imul
in
push
les
dec
push
dec
cmc
xchg
aaa
xor
in
in
and
and
hlt
xor
mov
subb
add
or
or
int
xlat
xchg
test
xlat
sbb
js
ds
fs
jg
stos
dec
arpl
pop
pop
imul
aas
cmp
sub
gs
sbb
shlb
cmc
clc
mov
or
ja
inc
lods
sbb
fimull
lcall
out
stc
xor
test
pop
das
test
imul
ljmp
loopne
or
dec
xchg
rcrl
fldcw
sbb
adc
adc
or
orb
xor
sub
shrl
push
sub
pop
mov
inc
ss
repz
rclb
loope
mov
jne
jecxz
jl
fldl
pop
mov
add
push
cmp
mov
pop
sti
shlb
mov
pop
shll
or
clc
adc
faddl
mov
fwait
mov
mov
mov
jge
mov
shl
ficoml
cltd
and
int3
jmp
pop
push
mov
xchg
repz
xor
sub
cmp
push
adc
inc
jnp
dec
add
aam
int3
inc
xchg
hlt
leave
scas
add
and
push
movsb
sub
mov
ficoml
filds
mov
push
cmp
push
mov
sahf
push
notb
mov
rol
addl
sbb
insl
test
adc
rclb
or
stos
mov
test
movsl
scas
clc
jp
inc
roll
dec
int3
cmpsl
push
jns
andb
lret
movsb
lret
stos
mov
std
mov
aad
stc
and
gs
xlat
lds
shll
test
pushf
xor
sbb
cs
lret
imul
or
fiaddl
stos
int3
movb
jmp
jns
mov
jp
xlat
ss
jmp
cmp
sti
fisubl
and
cwtl
pop
ljmp
cld
mov
enter
outsb
sub
sbb
push
jecxz
movsl
adc
insb
andb
push
adc
adc
jl
cld
fmuls
xorl
mov
or
std
test
fnsave
cli
sub
inc
mov
jge
aaa
ja
jp
adc
into
push
insb
fimuls
ss
mov
and
ss
scas
pop
add
mov
push
dec
sti
jns
cmpsl
sub
bound
cmp
cmp
andl
jp
adc
cwtl
outsl
push
out
cli
jo
mov
adc
mov
into
cmp
inc
sbb
orb
jl
or
insl
and
outsl
gs
out
mov
adc
dec
or
mov
movsb
test
ljmp
pop
xchg
jb
aas
sbb
inc
inc
out
and
adc
pop
lret
jmp
jmp
fcompl
mov
in
movsl
adc
cmpl
loop
mov
sarl
rdpmc
cmp
pushf
leave
fildl
test
xchg
sti
adc
mov
fs
dec
mov
cmp
jbe
sub
xchg
sahf
inc
sarb
lock
pop
xor
cmp
sbb
fs
add
arpl
mov
push
hlt
mov
call
mov
fucomp
cltd
mov
jle
pusha
xchg
sahf
inc
movsl
add
fsubrl
adc
mov
addl
push
repz
xor
jp
lahf
mov
jno
sub
addr16
in
sub
mov
jecxz
ret
adc
sub
mov
adc
sub
subb
popf
icebp
push
push
lret
pop
mov
jmp
mov
pushf
mov
fwait
enter
pop
outsl
dec
push
mov
mov
jb
adc
sub
sbb
xor
imul
jne
dec
roll
or
int
arpl
sbb
push
xchg
fimuls
rcrb
add
and
push
mov
adc
int3
inc
add
dec
add
xlat
inc
mov
loope
fdivrs
out
pop
jp
test
jae
or
pop
xor
lret
fsub
and
in
xchg
fs
daa
movsl
and
es
sub
sbb
mov
aas
in
jne
mov
jle
icebp
or
and
xor
ss
mov
mov
adc
cld
repz
add
sub
xchg
adc
xor
fldcw
ljmp
test
xor
repnz
adc
or
xchg
sahf
loop
shll
nop
loope
iret
jns
and
pop
push
popf
fwait
mov
scas
in
xor
movsb
shrl
aam
cmpsb
std
jnp
jg
mov
sbb
xchg
mov
inc
je
and
dec
cld
jl
xor
cmp
sub
pop
movsb
dec
jl,pn
xchg
out
in
jb
xor
adc
jge,pt
or
inc
shlb
pop
sbb
lods
dec
out
lret
sbb
sbb
dec
test
push
loopne
lret
insb
jl
pop
adc
jle
fcoml
push
mov
in
sub
mov
and
sub
xchg
mov
imul
shlb
test
cmp
in
and
push
or
add
jl
xor
loopne
dec
pop
aam
inc
fcoml
iret
jnp
dec
std
xchg
pop
or
lahf
lcall
int
mov
xchg
or
ds
jp
push
insl
xorl
sub
xchg
xor
sub
mov
and
popa
push
lar
dec
add
mov
loop
pop
sti
mov
lahf
inc
stos
sub
mov
adc
fmulp
xchg
popf
mov
aam
rclb
subl
add
cld
clc
in
sub
or
lea
fidivrl
push
mov
sub
sbb
repnz
xor
shlb
mov
mov
or
mov
seta
in
mov
popa
test
jo
insl
xor
mov
jle
not
loope
es
cwtl
cwtl
test
out
movb
inc
gs
push
cmp
jmp
xchg
dec
adc
js
mov
cmp
cmp
test
daa
pop
je
aas
sbb
xorb
shr
pop
cwtl
fnsave
jecxz
divl
inc
xor
fcomi
arpl
gs
addl
in
aam
dec
xchg
cwtl
xor
stos
adc
and
xor
fsubs
inc
pop
mov
lock
fdivl
popa
adc
mov
add
inc
sbb
sub
inc
mov
out
mov
gs
pushf
mov
stos
mov
jp
sbb
cwtl
subb
addr16
jbe
pop
fsubrs
mov
ret
xor
or
sti
popf
xchg
out
pusha
push
das
enter
dec
les
imul
dec
sarb
incb
lods
mov
inc
aas
push
add
inc
pop
push
fdivs
push
dec
rcr
sbb
mov
pop
jno
jle
mov
pop
ret
cmp
or
leave
mov
shl
fsubs
out
push
sbb
sti
mov
mov
mov
dec
or
xchg
inc
or
outsl
fidivrl
das
xchg
mov
stos
sti
int
mov
xchg
sbb
xor
out
mov
mov
test
push
sub
mov
xor
xlat
insb
or
pop
outsb
cmp
call
mov
test
xchg
and
or
sahf
cmp
shr
dec
xor
mov
add
enter
cltd
xlat
xor
sahf
aam
lcall
lds
repnz
clc
jl
and
jmp
inc
jg
dec
xchg
je
clc
mov
mov
jo
xor
xchg
lea
jo
clc
add
cmp
jl
jno
cltd
scas
mov
xchg
loopne
mov
aam
or
out
cld
xlat
adc
icebp
pop
popf
mov
test
sar
pop
shll
mov
mov
cmp
and
sbb
out
lods
adc
lcall
jae
jns
iret
sub
stos
in
inc
scas
fstpl
sbb
xchg
cmc
pusha
jl
in
pop
jg
pop
mov
add
and
mov
insl
xor
call
sub
call
popa
mov
mov
enter
ds
dec
push
mov
lret
lret
adc
or
lock
imul
ret
cmpsl
bound
add
inc
movsl
mov
xchg
popa
lods
in
into
xor
cmp
cs
jne
cmp
in
mov
stos
std
mov
and
out
fcomp
loopne
cli
shlb
jmp
mov
jns
mov
subb
rorb
lahf
pop
pop
rorb
ror
sub
pop
mov
ds
outsl
push
int3
jbe
scas
jge
out
push
xor
push
lock
xchg
xchg
or
lea
aas
icebp
sub
add
arpl
push
pop
jle
aam
or
and
sbb
gs
push
xlat
adc
push
push
in
cmp
sbb
js
mov
sbb
jp
outsl
mov
or
mov
lods
outsl
repnz
js
clc
ret
in
jge
jns,pn
mov
in
sti
xor
add
xchg
mov
xchg
cltd
cmp
inc
es
cmpsb
out
sbb
sbb
mov
in
outsl
push
xchg
push
add
xor
sub
movsb
sbb
int
xor
test
cmp
jno
push
stos
xchg
lods
pop
push
int3
push
mul
xlat
cmpsb
je
jl
mov
mov
mov
std
sbb
jge
mov
test
cmp
pushw
jo
mov
mov
ss
stos
add
xchg
mov
cwtl
push
push
out
hlt
pop
mov
jl
adc
jecxz
and
jg
and
movsl
sub
mov
cmp
adc
push
cmp
jl
sub
popa
rorl
fiaddl
ds
and
add
stos
pop
and
lcall
push
insl
jns
inc
ljmp
mov
push
adc
aaa
sbb
je
fcoms
xor
iret
jo
and
push
dec
loop
bound
mov
imul
xor
jae
jae
lret
rcll
fldt
push
xchg
dec
fdivrs
jmp
jmp
xchg
pop
mov
ljmp
in
add
add
adc
sbb
dec
loope
in
int3
lret
and
scas
jmp
jp
cmp
mov
fstpt
sbbl
xor
or
and
mov
or
sti
in
loop
inc
ror
aad
jne
into
and
sub
xor
mov
mov
mov
add
in
xchg
cmpsb
and
icebp
inc
aaa
mov
add
rcll
js
pop
out
out
in
fisubl
adc
push
jno
push
out
in
jne
mov
test
popa
fadds
cmp
popf
jo
call
daa
scas
inc
out
or
xor
dec
hlt
aad
test
jno
pop
mov
cmp
inc
xchg
pop
lahf
lcall
dec
scas
scas
cmc
inc
jnp
imul
jo
rorl
sarl
jl
sub
xor
xchg
xchg
jmp
test
enter
xor
fldenv
lret
stc
lahf
or
fs
in
in
js
imul
push
add
sahf
xor
pop
repz
in
jb
jp
adc
les
ret
fiadds
lcall
mov
lahf
add
sub
movsl
xchg
cmp
in
mov
pop
aad
das
ret
stc
stos
xchg
sub
cld
bound
or
pop
negl
xchg
aam
dec
jno
mulb
sbb
add
hlt
add
movsl
sti
insl
ret
and
cmp
mov
and
fcmove
fs
and
inc
and
xor
fs
in
mov
addr16
ret
jnp
icebp
mov
mov
pop
pushf
push
es
cld
jne
fldenv
notb
push
push
dec
and
pusha
add
ret
pop
inc
movsb
ret
jg
cmp
lods
sarb
out
and
ss
mov
mov
xor
lret
mov
xor
and
push
out
dec
fwait
inc
sub
xchg
and
enter
mov
push
mov
divl
cmp
ret
roll
aam
pusha
sub
inc
dec
int3
stc
jae
add
fadd
outsb
mov
mov
inc
fisubrl
cmpsl
cmp
popf
xchg
iret
fidivrs
jae
cmp
clc
scas
je
xchg
cmc
mov
push
popf
imul
daa
gs
pusha
shll
iret
xchg
mov
xor
adc
mov
lcall
dec
repnz
inc
aas
inc
push
int
repz
dec
shl
fadd
insl
mulb
sbb
sbb
fldt
jns
push
imul
xchg
in
mov
ljmp
dec
mul
ret
inc
out
cld
xor
adc
sub
mov
icebp
lret
test
lret
adc
push
cmp
pop
xchg
js
loopne
dec
push
test
mov
sbb
jbe
mov
mov
aas
addr16
sbb
xchg
sbb
jae
inc
imul
lahf
sti
push
pop
inc
pop
sub
ds
out
or
rcll
or
inc
xor
pop
cld
add
int
inc
outsb
arpl
int3
stos
push
cmc
int
jecxz
and
imul
inc
daa
es
dec
jecxz
jmp
dec
xor
pop
xchg
ja
iret
adc
add
cmpsl
add
adc
sub
xor
cs
mov
cmp
std
jmp
cmp
movsb
jb
push
jmp
lods
push
fs
adc
jl
les
pop
jmp
pop
sbb
mov
adc
inc
ficoms
or
ret
mov
imul
add
push
pop
mov
and
out
and
loope
repz
dec
cmp
lahf
inc
inc
sbb
sbb
mov
and
int
push
sti
jo
or
push
mov
test
push
leave
or
flds
mov
pop
adc
dec
push
int3
xor
xor
sti
sbb
jno
jmp
dec
lock
mov
inc
out
in
inc
pop
icebp
pop
mov
xorl
inc
sub
dec
mov
cli
dec
cmp
push
aas
and
sbb
jl
jnp
jge
push
std
cmpsl
loop
test
cmc
test
inc
and
cltd
push
iret
repz
pop
out
mov
mov
jle
push
cmc
ret
inc
fsub
xchg
outsl
sbb
cmp
inc
and
mov
out
mov
rcll
testl
mov
outsb
jp
bound
sbb
or
out
lods
repz
movl
mov
scas
adc
lahf
and
sbb
daa
push
cmp
and
fs
mov
mov
pop
xchg
fs
mov
addr16
fcompl
mov
out
iret
fdivs
mov
xchg
bound
push
out
mov
lds
cs
out
push
scas
pop
push
mov
outsl
mov
test
mov
fwait
mov
jmp
cltd
es
ja
mov
sub
or
dec
cmpsl
mov
loopne
mov
pop
pop
out
xor
or
mov
mov
jno
pop
js
xchg
mov
lret
lahf
pop
jg
dec
mov
jg
pushf
fmull
pop
pop
cwtl
dec
iret
sbb
icebp
and
cmp
push
xor
jge
cmp
iret
popa
stos
xor
jp
or
mov
outsb
or
dec
mov
jmp
mov
out
push
and
jge
pop
dec
aad
ficompl
xchg
pop
orl
adc
sub
mov
pop
add
adc
popf
mov
gs
mov
jnp
mov
xchg
cmp
rcll
pop
adc
mov
ficompl
ror
imulb
sub
inc
sbb
sbb
outsb
ret
jo
add
pop
xor
sbb
mov
ljmp
in
mov
push
pop
lds
shlb
push
daa
loopne
sub
sub
idivb
adc
lahf
and
dec
dec
movsb
mov
addr16
inc
negl
int3
ret
mov
popa
shll
add
es
xchg
lret
sbb
subl
cmp
or
arpl
movb
add
test
or
or
adc
popf
cltd
out
out
outsl
outsb
sbb
movsl
test
jl
ret
inc
mov
sub
cmp
push
cmpsb
jo
insb
cmp
xchg
imul
fdivrs
sbb
xlat
pop
aam
mov
out
gs
decl
inc
iret
repz
or
push
mov
je
iret
mov
cs
mov
xor
daa
dec
sbb
adc
lods
cmp
arpl
int
mov
mov
test
mov
sub
sub
andb
imul
xchg
pushf
jge
sub
mov
ljmp
push
lods
addr16
in
je
push
fwait
iret
test
inc
fsubl
repnz
xchg
lds
stos
mov
xchg
pop
sbb
jns
lods
sbb
inc
or
aad
and
adcb
jmp
push
aaa
sbb
jecxz
inc
movsb
mov
mov
jmp
imul
daa
jge
lcall
das
mov
leave
mov
add
xchg
inc
in
enter
jl
adc
cltd
push
popf
lea
mov
lahf
into
dec
push
cmp
or
adc
gs
insb
icebp
jle
sbb
dec
mov
sub
mov
xchg
nop
stc
test
stc
cmp
mov
out
cli
sub
sub
sbb
adc
fyl2x
lret
jmp
repnz
imul
xchg
sbb
mov
jg
lcall
pop
faddl
push
test
push
pop
and
sbb
cld
or
adc
add
jg
lock
jge
jae
add
movsl
gs
fldcw
ss
add
dec
fdivr
jle
stos
loopne
push
std
adc
pop
jge
movsb
lods
std
xor
loop
pop
faddl
cmp
pop
xchg
sbb
shrl
dec
jmp
push
int3
push
test
xor
xlat
push
cmp
cmp
fidivrl
mov
repz
insl
or
xchg
mov
popw
cld
adc
sub
loope
out
stos
repz
fcmovbe
sarl
into
inc
scas
sbb
mov
add
aam
mov
push
and
mov
imul
repz
inc
in
outsb
divb
scas
stos
jo
jg
lock
incb
daa
outsl
xor
fldcw
stos
les
add
jno
in
int3
rol
int3
clc
pop
or
es
mov
xchg
and
ret
lret
pop
imul
xchg
pop
outsl
ret
nop
mov
aas
mov
xchg
das
ljmp
xchg
mov
push
pop
sar
insb
cmp
xlat
pushl
cltd
pop
es
push
cmpl
out
inc
fstl
enter
lds
mov
es
mov
nop
iret
adc
frndint
int3
pop
adc
ss
pop
pop
jnp
pop
mov
rorb
repnz
jb
sub
iret
sbb
in
pop
subl
sub
out
outsl
scas
enter
aam
lret
fs
clc
inc
mov
call
shrb
lea
das
cmpsl
repz
xor
pop
sbbl
mov
dec
push
idiv
sbbl
outsb
mov
rcll
int3
jg
pop
sbbl
and
inc
clc
mov
out
jb
sbb
insl
lret
push
dec
adc
scas
adc
mov
mov
lret
sub
inc
xlat
pusha
adc
xchg
loope
leave
inc
stos
mov
adcb
pop
pop
fstpt
add
shr
stos
mov
out
or
xor
iret
pop
divb
adc
rcr
mov
imul
repnz
scas
cmp
push
inc
out
mov
jmp
sub
stos
xor
add
dec
xchg
xchg
mov
loope
imul
cmp
jo
sub
pop
fldl
sahf
lahf
inc
sbb
or
pop
jns
sbb
pushf
dec
dec
fsubrs
arpl
or
push
or
stos
push
jae
sbb
push
popf
adc
test
push
dec
repz
fsts
loope
insl
loop
test
sbb
movsb
pop
pop
shr
adc
adc
cmp
daa
or
gs
es
and
lods
mov
in
pop
and
jg
inc
scas
mov
pop
inc
repz
push
popa
mov
repnz
lret
push
xor
and
jle
adcl
jae
mov
jnp
lock
lock
lahf
mov
jl
add
pop
cmp
pop
addb
in
aam
ret
jbe
lret
mov
push
mov
mov
adc
or
shll
lcall
sbb
adc
test
xlat
cmpsb
es
dec
sub
cmp
aad
std
inc
imul
pop
mov
push
bound
add
stos
inc
xor
rcrl
adc
int
lcall
lods
xchg
xchg
add
addr16
push
adc
mov
roll
sahf
mov
shlb
sub
add
sahf
jbe
lods
push
daa
out
mov
add
adc
and
int
aam
jno
test
xchg
inc
pop
jmp
test
dec
mov
xor
cli
and
out
mov
sbb
scas
clc
and
mov
in
lcall
cmp
pause
loop
adc
into
fcomi
pop
pop
lcall
mov
inc
xchg
mov
pop
push
mov
dec
jecxz
outsb
cmpsl
or
inc
jp
inc
iret
xchg
or
fdivs
clc
add
sahf
xor
xchg
jne
jecxz
push
insb
loopne
jle
pop
testb
mov
call
dec
imul
push
sbb
popf
xorl
push
insl
pushl
ss
push
sbb
mov
jl
xlat
mov
add
pop
out
call
mov
pop
push
jmp
mov
cmp
jecxz
cltd
rcl
test
ja
rclb
and
idivb
lds
mov
push
fcompl
fcompl
roll
imul
lods
leave
lds
cli
jno
data16
inc
faddl
cmpsb
xchg
push
shr
ja
inc
fwait
out
es
cwtl
mov
aaa
mov
pop
in
clc
pusha
jne
enter
int3
lcall
mov
mov
jno
scas
dec
pushf
rcrb
add
push
push
pop
in
pop
jb
lods
lcall
mov
enter
fistpl
sbb
stc
into
std
jp
jp
dec
pop
in
pop
sbb
or
lret
addr16
call
push
xchg
int3
aas
add
je
sbb
push
fsubs
cmp
push
or
mov
adc
and
lock
pop
add
xchg
or
sbb
insb
rorb
and
push
cs
mov
push
push
movups
shrl
js
repnz
pop
jge
sub
fstps
repz
cmp
mov
rol
movsl
jns
or
cmp
dec
mov
xchg
movsl
ja
jne
bound
sbb
jbe
xchg
mov
cmp
jle
push
rolb
icebp
pop
in
fwait
rcll
mov
mov
xlat
stos
dec
add
mov
xchg
je
xchg
or
mov
testl
sub
inc
lret
mov
aaa
repnz
fstpt
xorl
inc
shr
out
lds
pop
push
or
scas
rcl
or
in
cmpsb
sbb
xchg
loope
inc
sbb
mov
in
movsl
mov
mov
adc
aas
aam
push
adc
test
mov
aas
mov
sahf
inc
pop
or
imul
dec
orb
mov
nop
and
jmp
rcrb
sbb
lods
fisttpl
or
pmaddwd
mov
xlat
fisubs
sub
xchg
dec
repz
shl
mov
hlt
xchg
jnp
addl
inc
sub
push
push
ror
cmpb
repz
out
popf
and
push
repnz
mov
testl
jne
pop
mov
fucom
outsb
lret
mov
push
add
mov
push
or
sub
lcall
jge
ljmp
xorb
or
sbbl
or
add
cmp
adc
inc
test
mov
adc
and
decl
bswap
mov
jns
push
push
aad
or
lret
add
pushf
pop
mov
jo
adc
xchg
mov
aad
leave
lods
xchg
adc
jge
movsb
and
xchg
fisubl
push
dec
in
and
fwait
mov
fmul
jl
loop
int
inc
or
adc
test
inc
loop
xchg
push
xchg
mov
jne
lea
call
mov
dec
push
sbb
in
sub
arpl
test
out
arpl
xor
insb
lea
fildl
fsubl
stc
adc
jle
sarb
cmp
pop
dec
mov
push
loopne
dec
inc
push
decl
cmpsb
stos
sub
inc
imul
je
fwait
mov
lods
imul
out
xchg
xchg
and
shlb
or
fidivl
ljmp
in
and
cwtl
or
jb
adc
jno
inc
test
sub
imul
mov
jg
mov
cmp
xchg
ss
out
pop
mov
mov
cmpsl
inc
mov
push
xchg
mov
repz
jmp
adc
es
andb
mov
iret
mov
out
popf
and
adc
xor
testb
mov
in
dec
repnz
out
lret
rcr
cmp
push
imul
push
je
dec
les
stc
pushf
xor
scas
push
iret
aam
sti
in
lods
sbb
bound
push
in
loopne
pop
adc
lods
outsl
insb
in
mov
shrb
test
sbb
jne
dec
push
pop
movsl
or
popf
mov
sbb
out
repnz
popa
cld
pop
out
xor
aas
sti
pusha
out
cmpsb
test
xchg
cmp
dec
dec
xor
jge
stc
repz
fiadds
popa
stc
sar
or
out
dec
jo
sub
mov
sbb
cli
ret
add
jge
andb
lods
mov
in
and
cmpsl
repz
ret
xchg
je
roll
jne
test
adc
testl
jae
xor
rorb
pop
ret
dec
push
push
xchg
aad
leave
add
stos
cli
inc
cs
arpl
arpl
ss
orb
stos
icebp
pop
arpl
cmpsl
mov
cmc
mov
sub
pushf
cmpsl
test
xor
or
pusha
lea
push
sbb
ret
pop
jae
mov
mov
mov
adc
loop
hlt
sbb
mov
xlat
jbe
and
adc
aam
adc
dec
ret
adc
mov
fabs
mov
leave
xchg
jne
fists
cwtl
mov
shlb
push
adc
dec
sbb
insb
aaa
jecxz
repz
dec
lea
out
mov
je
lret
mov
aam
call
subl
xlat
jbe
hlt
xchg
hlt
cltd
enter
xchg
pop
jle
mov
lods
rcr
int
scas
lds
sub
bound
mov
mov
mov
mov
rclb
sub
cwtl
in
inc
rcrb
jl
in
pop
mov
incl
popa
dec
mov
mov
nop
cltd
jecxz
ljmp
es
in
mov
jns
adc
mov
sti
in
xor
xor
jne
inc
lock
xchg
int
mov
ljmp
loope
scas
sbb
lret
pop
rclb
adc
dec
leave
adc
cmpsb
push
sbb
push
mov
stos
mov
and
push
sar
mov
ljmp
insb
sub
mov
out
inc
add
mov
cmovs
adc
jne
movsb
push
mov
fwait
or
insl
ljmp
lret
out
jl
adc
fwait
pop
nop
or
sti
mov
test
lret
ret
cmp
pushf
shrl
rcrb
cmp
int
shll
cmp
scas
jecxz
in
shll
pop
sub
mov
cmp
ds
cmp
fcmovne
ja
add
pusha
pop
ret
pop
push
jle
dec
aad
scas
fwait
jp
or
xor
stc
jecxz,pt
lret
mov
jne
and
aam
xor
jnp
jb
std
fisttps
adc
addr16
in
fmuls
adc
xor
cmp
ljmp
inc
dec
push
sub
xchg
adc
cli
lods
adc
or
icebp
fbstp
iret
js
xchg
ds
addr16
push
out
cmc
xchg
dec
push
and
add
push
push
cmp
addr16
int3
test
push
jae
mov
addr16
inc
fucomip
in
push
stos
js
loope
jnp
bound
cmpsl
movb
push
aas
inc
sub
xlat
jp
lcall
jmp
out
mov
adc
in
mov
xor
jp
xchg
aas
mov
pushf
xlat
aas
or
or
sbb
loopne
cli
mov
pop
out
aaa
out
ficoms
stc
movsl
pop
neg
cmpsb
pop
in
out
add
test
jl
jns
iret
xor
mov
or
pop
lock
leave
daa
leave
push
jae
adc
out
push
pop
fsub
mov
add
cmp
xchg
inc
mov
popa
push
jo
fstps
lods
fstps
imul
inc
inc
xor
aam
in
into
shlb
inc
sub
jge
add
pop
ja
and
xchg
push
fidivrl
mov
jg
dec
or
fs
lods
add
sbb
loop
push
mov
fmull
ret
mov
fst
mov
jg
outsl
jle
pop
add
aaa
in
mov
pop
inc
loopne
xchg
push
xorl
push
push
adc
sbb
mov
sbb
xchg
or
sbb
rorl
mov
push
movsl
das
orl
adc
push
jb
aam
lcall
popa
hlt
popf
xchg
dec
js
jecxz
mov
or
ret
daa
ret
mov
mov
jae
mov
adc
mov
insb
jbe
sbb
or
lock
sbb
fs
pop
push
dec
outsb
js
and
xchg
jo
mov
fdivl
xchg
dec
out
test
fs
and
pusha
sbb
daa
movsl
enter
dec
imul
jbe
mov
mov
push
ljmp
dec
test
cmp
jbe
test
adc
cltd
inc
popf
sub
sarl
push
mov
in
fisttpll
mov
andb
cmpsb
in
fimuls
sar
lret
popa
jle
mov
mov
mov
enter
xchg
jno
lds
jo
cmp
ret
mov
sbbl
cmp
jno
or
jge
mov
xchg
lods
cs
out
sbb
fildl
pop
sti
xchg
adc
out
push
dec
cld
sti
xchg
and
bound
pushf
loopne
xlat
mov
movsb
insl
or
mov
lods
hlt
pop
pop
cmpsb
insl
or
scas
xchg
jo
push
and
aas
bound
sbb
cmc
jge
das
sbb
sub
inc
mov
pushf
cmp
adc
or
sub
adc
xchg
nop
xor
aam
inc
sahf
jge
sbb
test
mov
inc
dec
imul
test
sub
sahf
rolb
xor
popa
adcl
add
push
out
mov
jle
sub
ret
or
pusha
lock
jb
outsb
test
adc
int
jge
stc
mov
ret
aaa
sub
adc
add
push
sti
sbb
xlat
dec
xchg
sbb
jge
cmp
dec
or
test
xorb
mov
push
inc
xchg
call
push
push
jl
sarl
sub
loope
inc
jmp
cmp
mov
mov
int
lods
sbb
testl
cmp
aam
leave
jbe
stc
mov
popf
iret
adc
scas
pop
and
adc
test
push
aaa
jns
xchg
aad
cld
pop
jne
nop
lret
out
xchg
sbb
movsl
in
push
movsb
movl
je
ja
shr
mov
loopne
out
add
cltd
jno
jg
fstps
add
sub
dec
pushf
jno
jg
insl
and
lds
pop
dec
jmp
int
fnstcw
push
xchg
add
cld
gs
scas
sbb
test
inc
add
push
into
int
ja
lods
aad
insl
sbb
test
fildll
push
pop
xchg
mov
shlb
inc
icebp
hlt
daa
inc
or
adc
mov
or
jb
pop
cmc
jnp
aaa
mov
aad
and
push
and
adc
mov
mov
push
aas
arpl
jle
je
dec
push
lcall
mov
dec
add
push
push
pushf
xor
push
stos
ror
or
adc
nop
lret
aaa
push
ss
fcomp
push
loopne
jge
xchg
mov
mov
dec
mov
xchg
imul
push
lret
into
jne
jbe
xchg
adc
jo
imul
xor
aaa
scas
les
cld
leave
dec
push
sbb
push
ja
mov
jge
lret
lcall
or
xchg
div
std
jge
push
ja
xchg
jg
xor
pop
dec
add
rorl
mov
mov
pusha
rorl
daa
ja
loope
ja
arpl
and
mov
imul
push
sarb
adc
xchg
push
inc
jp
mov
xchg
push
xor
adc
adc
sub
pushf
mov
or
add
jecxz
outsl
add
gs
gs
ds
incb
sub
pop
mov
test
xchg
mov
in
push
jno
sbb
repnz
imul
mov
or
pop
std
sbb
iret
mov
or
scas
imul
cmc
addr16
pop
jecxz
xor
dec
xorb
jp
mov
mov
mov
daa
push
adc
call
ja
hlt
xchg
rcll
inc
ljmp
adc
and
and
aaa
inc
xor
xchg
sbb
jle
pop
pop
shl
dec
lods
lock
cmp
fcoml
push
mov
add
clc
inc
xor
mov
or
push
negl
test
cmc
and
cmp
dec
pop
and
ds
mov
mov
into
daa
add
lahf
ds
add
pop
add
mov
lock
fwait
adc
mov
js
dec
add
adc
add
jo
jnp
test
stc
jmp
adc
dec
test
mov
pop
xchg
push
ljmp
push
loopne
loope
repz
xor
cwtl
test
adc
mov
negl
or
cmpb
pop
pop
ljmp
int
push
popf
mov
cmpb
inc
stos
sbb
ss
bnd
mov
xchg
in
cmp
xchg
in
cmp
scas
cld
lock
mov
mov
xchg
and
test
and
pop
xchg
xor
pop
push
xchg
orl
fistps
out
pusha
mov
jae
ds
mov
or
push
pop
ljmp
inc
lock
lods
push
add
and
decb
inc
inc
sub
jl
xchg
adc
pusha
stos
mov
lds
xchg
dec
inc
add
loopne
popf
pop
or
out
aaa
pop
fisubs
fdivrs
insb
adcb
or
das
ss
mov
in
fwait
push
cmpl
pop
sbb
mulb
imul
add
dec
inc
lock
ds
sbb
dec
fsubrs
cmpsb
cli
xor
push
scas
int3
or
lds
dec
mov
xor
out
xor
xchg
cs
mov
jp
ja
xor
xor
ret
mov
dec
and
lret
insb
adc
enter
jne
pop
leave
movl
add
rcll
pop
enter
rorb
and
pusha
and
sub
fstpl
lock
fidivl
es
rorl
outsb
push
add
mov
sbb
repnz
push
mov
scas
ret
push
jne
je
imul
add
div
popf
push
stc
and
xchg
jae
push
psllw
movsl
adc
popa
lods
in
into
cmpsl
mov
and
push
push
fcoml
push
sbb
and
ja
cmp
inc
cmp
aas
out
aas
jecxz
enter
jl
lcall
xchg
mov
bound
jecxz
mov
jae
lds
ret
add
nop
leave
and
repnz
mov
scas
xor
xor
fstl
loope
dec
call
enter
mov
cmpb
fsub
mov
stos
mov
loopne
push
pop
jl
mov
pop
sbb
insl
in
sub
cmp
xchg
imul
addb
cli
insl
rcrb
popf
cmp
mov
add
repz
mov
or
popf
ljmp
fisubl
dec
lock
fwait
cmp
not
or
mov
inc
jmp
stc
pop
cmp
fwait
push
fisubrs
push
ja
fstl
push
lea
jo
sub
jb
daa
shlb
pop
pop
sub
pop
sbbb
jno
push
mov
or
test
pop
in
push
jno
xor
push
ja
fs
mov
jb
pop
outsl
and
cli
inc
mov
lods
orl
add
popf
insl
test
cwtl
leave
dec
adc
mov
or
adcb
mov
gs
pop
int3
jmp
mov
jge
bound
cmpsb
pushf
aad
xor
jle
mov
mov
mov
lods
arpl
pop
retw
and
jns
lcall
pop
cmp
push
push
cmp
test
out
divb
or
test
xchg
subb
sub
add
dec
jbe
ja
xor
pop
stos
pop
cld
sub
roll
jnp
les
lcall
sub
cmp
xchg
xchg
xchg
jne
cmpsb
les
jnp
aas
out
adcl
mov
add
dec
int
jo
jns
jo
out
pusha
cltd
int
aam
fildl
adc
insl
adc
aam
xor
lea
hlt
repz
push
or
into
sub
cld
shl
push
js
sbb
loop
lret
popf
inc
scas
stos
ret
pop
stos
fnstsw
pop
shlb
pop
mov
je
int3
es
jno
xor
hlt
test
hlt
repz
cmp
sub
cmp
es
mov
imul
inc
stc
das
inc
test
and
fnstenv
stos
daa
popa
insl
imul
cmp
push
xor
adc
mov
in
out
mov
cli
xchg
ljmp
cld
out
insb
inc
sbb
mov
ss
mov
popf
and
clc
stos
pop
jae
push
add
rcrb
or
fcmovne
mov
push
cmpl
mov
dec
out
loopne
sbb
sti
ret
arpl
fildl
jb
pop
rorb
jne
sbb
lods
xchg
push
fmul
sbb
or
adc
pop
push
dec
fstl
adc
add
sbbb
pusha
and
mul
mov
pop
push
cmp
push
lods
shlb
enter
loopne
bound
push
xor
sub
jp
sarl
dec
push
and
movsl
adc
mov
movsl
loop
js
mov
imul
add
roll
add
jmp
cld
aad
imul
xchg
adc
data16
push
dec
adc
pop
stos
fimuls
mov
lds
xchg
cwtl
adc
pusha
push
dec
js
xchg
and
popa
cwtl
cmp
into
test
popa
adc
dec
rol
cmpsl
fisubl
int3
pusha
sbbb
mov
jmp
orb
orb
ret
cltd
mov
sbb
nop
cmp
adc
sub
sbb
mov
lods
jne
xchg
inc
test
movsb
jp
data16
bound
mov
xchg
mov
cvttps2pi
movsl
fmull
and
jmp
dec
imul
push
lods
nop
add
scas
subb
push
push
nop
push
pop
or
in
dec
dec
pop
adc
pop
and
adc
mov
mov
mov
cli
jge
xchg
stos
es
push
cmpsb
and
xchg
jp
aam
mov
adc
mov
clc
mov
jle
cmpb
push
lret
cwtl
add
out
pop
jbe
xchg
mov
mov
push
mov
jle
call
cli
and
popf
mov
adc
mov
inc
gs
movaps
jns
pushf
lahf
mov
mov
push
fimuls
loopne
add
int3
sbb
pop
decb
jge,pt
or
movsb
mov
int
pushf
divl
rep
jo
pop
arpl
js
lods
cmp
xchg
adc
add
call
pop
mov
mov
push
cmp
outsb
and
and
test
shrb
popa
push
pop
out
push
les
inc
mov
aaa
lcall
sub
push
lret
jb
lcall
scas
pop
daa
inc
dec
push
fstpl
cwtl
push
leave
xchg
push
pmaxsw
pop
in
jl
xor
into
ja
mov
idivb
cmp
rcll
lock
xchg
jbe
mov
jno
ljmp
movsb
stos
shll
movsl
ds
mov
cltd
pop
xchg
push
loopne
pop
pop
das
jne
mov
insl
mov
cmc
shrl
cmp
cmpsl
xor
or
sbb
shll
xchg
insb
icebp
xchg
fwait
popa
inc
je
mov
jne
mov
fs
mov
jmp
sub
and
mov
mov
xor
popf
jg
jns
inc
or
sub
data16
fsubr
xchg
das
fmull
mov
inc
out
xorb
pop
stos
dec
cmp
xchg
sub
add
bnd
dec
push
or
in
mov
and
clc
loop
sbb
mov
xchg
fisubl
enter
and
sub
pop
das
test
xor
xor
inc
jge
lahf
clc
test
mov
inc
xchg
and
dec
or
mov
ds
mov
scas
jl
cmpsl
add
xor
popf
push
add
nop
out
sbb
jecxz
mov
mov
outsl
adc
add
cmc
push
and
lea
cmp
aaa
jae
outsl
mov
add
leave
int3
jns
or
imul
fnstcw
punpcklbw
arpl
nop
sub
jae
scas
outsl
ds
xor
jo
test
lahf
push
jbe
lods
rorl
xchg
jp
bound
pop
sbb
xchg
sbb
mov
pusha
dec
mov
inc
lcall
rcll
adc
hlt
push
aaa
pop
sbbb
lock
lock
dec
pop
das
ret
adc
add
push
leave
pop
push
nop
scas
xchg
pop
psubusw
shlb
sbb
and
popa
mov
mov
mov
inc
movsl
out
or
xor
mov
sub
cmc
scas
ljmp
jp
int
lret
mov
and
adc
ss
mov
test
xor
push
cmp
adc
ret
or
push
pop
xchg
les
rcll
xchg
push
push
test
ret
orl
pop
mov
imul
inc
sub
imul
mov
push
mov
aam
ret
push
cli
std
xchg
fimull
jae
adc
push
fwait
lock
jae
jne
dec
mov
ret
xchg
in
push
inc
lahf
sbb
out
icebp
dec
dec
shl
loop
or
fsubrl
adcl
mov
xor
adc
or
and
addl
cmp
or
cmp
loope
ja
fimull
mov
fs
stos
jae
insl
inc
gs
idiv
stc
push
jno
testl
out
lock
movsb
dec
vpshaw
pop
enter
and
or
xchg
lock
loop
ds
outsl
jge
inc
and
decb
jo
mov
imul
cmp
repz
mov
mov
js
arpl
pusha
mov
sahf
test
mov
jl
std
push
and
add
dec
xchg
cmpsb
mov
scas
mov
add
xchg
stos
ja
sub
cmp
dec
xchg
rorl
rcll
scas
mov
xchg
rcll
cmp
jae
leave
push
xor
sbb
add
pop
lea
pusha
popa
int
popa
adc
ss
mov
fidivl
lods
loopne
mov
mov
sbb
cmpsb
mov
out
or
in
inc
adc
jns
jp
in
test
adc
pop
xor
shlb
loope
ret
cs
fs
test
mov
repnz
decb
pop
sub
jl
test
or
jge
addb
jp
mov
xchg
lock
pop
fdiv
or
adc
ja
js
push
xchg
leave
ja
dec
mov
xchg
mov
fidivl
push
add
cmp
mov
sub
add
sub
fsts
jae
and
loop
repnz
inc
je
jp
add
repnz
push
xor
or
cmp
andb
out
rol
call
mov
cli
movsb
std
sub
ja
jle
sbb
dec
xchg
scas
fildll
lock
mov
in
lret
insl
shr
lds
xor
sbb
sub
lods
add
cltd
test
inc
or
mov
fildl
js
pop
iret
and
push
or
imul
fwait
and
add
mov
adc
mov
bound
sbb
les
aas
scas
mov
mov
or
lea
shl
xor
lahf
fistl
in
xor
imul
les
add
add
pop
dec
shlb
cwtl
fsts
shrl
mov
mov
fadds
xchg
lds
daa
adc
mov
outsb
cli
stos
pop
fiaddl
dec
dec
dec
mov
pop
sbb
pop
ret
and
pop
mov
in
pop
jb
push
leave
fs
inc
inc
daa
ret
lcall
shl
jmp
imul
inc
data16
fsubl
clc
add
cmc
xor
pop
mov
test
jecxz
xor
or
andb
pop
in
out
sbb
call
fisttps
sahf
outsl
scas
sbb
test
inc
lods
iret
xchg
and
jecxz
dec
jne
std
adc
subl
orl
jl
mov
iret
addr16
and
ljmp
sbb
scas
loopne
enter
outsb
ret
mov
pop
fldenv
stc
daa
adc
stos
mov
push
jno
iret
add
add
and
jno
in
sub
mov
adc
leave
clc
inc
das
jecxz
jno
xchg
jmp
sbb
add
cmp
sahf
lock
movsl
push
lret
or
je
jo
sub
sub
ret
push
test
out
fmul
cld
cmp
sbb
jmp
jp
data16
lcall
push
jmp
lods
pop
mov
mov
arpl
cmpl
cmpsb
xchg
push
aas
cs
scas
hlt
jl
push
or
jae
idiv
push
or
jnp
dec
adc
mov
sub
add
pop
mov
rep
inc
mov
test
mov
repnz
xor
pop
sub
int
lea
sbb
addr16
xchg
andb
push
dec
stos
mov
ja
in
and
ja
icebp
scas
pop
jno
ds
mov
vpcmpeqb
mov
adc
sarl
add
pop
pop
rcrb
cli
fidivs
mov
neg
mov
insb
repnz
ret
mov
mov
movsb
jmp
dec
sbb
repnz
push
call
mov
mov
mov
fistl
push
push
mov
andl
in
movsl
cli
cmp
subb
popf
inc
sbbb
jle
xor
add
sub
bound
pop
insl
sub
out
push
imul
and
push
mov
inc
mov
inc
mov
in
cmpsl
jge
push
test
ror
jno
mov
aas
popf
xor
nop
and
or
push
dec
jno
cmpsl
adc
insb
xor
push
in
cmp
test
sbb
inc
add
mov
loop
sbb
mov
or
push
adc
rcrb
inc
shlb
iret
fsubrp
pop
bound
dec
std
mov
push
ja
ljmp
sti
aad
cld
insb
dec
and
adc
fsts
push
xchg
add
int3
lret
sarl
imull
loope
add
xchg
mull
lret
hlt
and
push
jns
jg
push
mov
cs
mov
aaa
inc
xor
loopne
pushf
xchg
lcall
xchg
imul
xor
jp
cmp
shrl
mov
push
xor
call
insl
cs
mov
cmp
lods
mov
push
jecxz
pop
fwait
repz
cmp
mov
sarb
fdivl
push
insl
add
sbb
fcmovbe
mov
das
cmp
std
xor
hlt
jmp
pop
rcll
dec
shll
hlt
and
sub
xchg
daa
enter
jp
jae
adc
popa
sarl
aaa
movsb
push
adc
stos
fwait
shll
jnp
jae
dec
or
pop
sub
mov
test
jo
add
aaa
pop
or
push
rcrl
orb
jp
idivl
negl
push
das
push
sub
inc
mov
xchg
pop
dec
cmp
jl
dec
movsb
pop
adc
movsb
pop
and
push
mov
ss
pop
in
cwtl
js
or
sti
mov
mov
push
mov
add
or
jbe
rcrl
add
sub
pop
push
mov
mov
push
xor
xor
pop
lock
sub
stos
inc
push
mov
xor
jb
jns
sbb
enter
or
shlb
test
mov
inc
cmpsl
out
mov
mov
sub
pop
loope
int
pop
and
lret
idivb
mov
push
cmp
xor
mov
int3
pop
add
neg
mov
adc
dec
ret
test
or
and
and
lcallw
push
push
popa
push
mov
push
repz
lock
xor
lcall
adc
jg
jns
cltd
push
fs
bound
fcmovne
mov
in
sub
sbb
fwait
loop
cli
jbe
call
push
je
daa
xchg
sub
imul
sbb
xchg
mov
and
mov
jnp
es
mov
adc
and
data16
or
mov
fistl
leave
pop
and
sub
out
repz
jb
pop
xchg
pop
movsl
mov
push
xor
sub
ret
adc
leave
pop
rolb
out
push
xchg
pusha
or
add
sbb
mov
fbld
fcomps
cmpsl
sbb
pusha
insl
negl
out
js
inc
push
stos
cmp
push
jns
push
pop
pop
and
scas
data16
inc
sbbl
fs
fcmovb
inc
sub
jecxz
icebp
push
ss
mov
add
sub
in
adc
sbb
aad
and
dec
in
cmp
pushf
shr
lock
sbb
or
jne
xchg
ds
lret
add
pop
lcall
rolb
dec
push
aaa
push
jnp
add
imul
sbb
test
sbbb
or
mov
aad
xchg
or
repnz
lods
daa
add
jge
enter
adc
mov
push
mov
loope
subl
shr
lock
cmpl
lcall
and
mov
scas
inc
mov
push
test
xor
ds
ds
cmpsl
int
adc
sub
mov
jo
in
arpl
stc
pop
sar
ss
cld
roll
push
lods
cs
ss
insl
imul
icebp
sbb
pop
jnp
push
insb
imul
lds
mov
adc
loope
or
sahf
sbb
sub
mov
inc
xchg
mov
xor
pop
push
cmp
sub
mov
into
push
scas
pop
movsb
pop
dec
dec
mov
xrelease
ja
sbb
jns
rorl
push
mov
xchg
stos
mov
xor
inc
inc
xchg
pop
or
rolb
jo
daa
mov
mov
inc
adc
adc
lret
sbb
push
aaa
pop
cltd
sub
rcrl
cltd
dec
int
mov
fstp
jo
daa
loop
xchg
into
cmc
test
push
enter
das
pop
push
outsb
test
popa
dec
repnz
cmp
in
aam
test
jp
jge
push
iret
inc
popf
mov
aad
xchg
in
insl
shll
fisubrl
jecxz
sbb
sahf
cmpsl
xchg
lcall
cmp
outsb
cmpsb
in
sahf
jae
stos
mov
pop
popa
into
into
cmp
loop
xchg
sbb
add
inc
ja
inc
jp
addr16
mov
push
cmp
loopne
stc
maxps
sbb
fsubl
and
or
xchg
xor
dec
stc
or
mov
add
sub
inc
popf
pop
and
pop
cmp
jne
sub
hlt
mov
fucomip
jecxz
or
pop
inc
xor
mov
out
fdivrs
test
jmp
call
push
pop
leave
xchg
cmovp
orl
icebp
dec
jge
loope
addr16
out
mov
and
jge
stos
rclb
lods
dec
int
lret
push
and
mov
pop
subb
icebp
lods
inc
divl
pop
aad
addr16
test
sub
push
inc
and
popf
mov
jb
pop
vpmacsdd
adc
xchg
popa
mov
cmp
loope
add
xchg
cmp
sar
mov
cmp
cmpsb
cmp
js
add
rcll
xchg
cmc
or
jo
fldl
push
pushf
in
fs
dec
sub
out
xorb
mov
push
cmp
int3
enter
pop
add
push
xchg
roll
out
repnz
push
dec
cmp
pop
inc
inc
mov
enter
mov
xchg
and
fidivrs
sub
addr16
notl
pop
xor
pushf
ret
ror
mov
es
add
ss
jno
pushf
movsl
push
cmc
arpl
shrl
jmp
cltd
or
pushf
adc
dec
loop
sbb
xchg
out
sbbb
and
movsl
int
fwait
and
out
sub
ffree
mov
and
adc
aaa
fldcw
cwtl
rorl
xchg
pop
test
push
xchg
dec
pushf
stos
dec
mov
push
jno
adcl
into
dec
push
sahf
push
sbb
jbe
sub
push
xchg
xor
or
stos
lods
or
jbe
daa
scas
mov
sub
bound
cli
andb
clc
dec
rcpps
dec
iret
or
sub
mov
sbb
cmpb
orb
cld
cld
repnz
sbb
or
or
or
lds
dec
pop
and
mov
pusha
jnp
scas
add
out
xor
test
xor
cmpsb
test
mov
adc
je
insb
push
xchg
ret
mov
sti
in
pop
cmp
xchg
bound
cmc
sbb
pusha
xchg
cmp
pop
enter
sbb
xchg
xor
rcrb
cli
bswap
adc
ds
cltd
fisubl
in
fwait
out
addb
xchg
xchg
imul
inc
sbb
into
mov
jbe
insb
sti
and
cmpsl
push
xchg
or
imul
xchg
lock
dec
mov
pop
insb
fists
fdivr
or
jmp
insb
dec
cmp
adc
shll
test
jbe
and
add
ss
loopne
mov
ret
dec
mov
leave
sub
xchg
push
jge
xchg
mov
sub
out
daa
fdivrs
push
sbbl
lret
int3
loope
push
out
cmp
insb
push
push
aam
mov
dec
mov
push
jnp
jne
js
filds
jb
rcll
jecxz
test
xchg
pushf
rclb
inc
inc
cmc
or
hlt
test
ret
dec
pop
je
ljmp
bswap
xor
dec
test
push
cs
mov
je
cmp
stc
sti
xchg
xorb
clc
adc
pop
lahf
test
cmp
or
test
pop
loopne
fwait
mov
lahf
addr16
mul
pop
ljmp
int3
mov
rcr
ljmp
mov
std
dec
xor
sub
xchg
inc
outsl
mov
jns
add
fcomip
xchg
loopne
and
sbb
clc
lock
call
add
shrb
push
push
sarl
or
jmp
sbbl
lds
fsubs
push
fimuls
pop
inc
xchg
mov
into
add
mov
xlat
ficoms
outsb
mov
mov
insw
cltd
popf
out
into
dec
push
fcmovnbe
jecxz
jle
xchg
int3
pop
sbb
mov
sahf
pop
jle
jns
pop
add
arpl
inc
jle
test
jns
in
sbb
xchg
rolb
cmp
sub
dec
in
stos
outsl
adc
adc
cmpsb
mov
mov
arpl
mov
loopne
or
cld
bound
roll
inc
cmp
dec
xchg
nop/reserved
loope
je
jne
xor
and
push
cmp
lods
push
xor
test
fwait
aas
cmp
mov
jecxz
xor
fsub
mov
xchg
mov
test
adc
fiaddl
lahf
sbb
xor
sbb
cld
push
test
stc
cwtl
lahf
jl
lock
shrb
jmp
sbb
push
icebp
xor
adc
mov
adc
stc
mov
push
loopne
iret
cmp
push
sub
push
sub
mov
pushf
arpl
adc
pmaxub
cmp
mov
movsl
and
cmc
dec
insl
in
stos
sub
fwait
dec
cmpsl
js
stc
bound
push
loope
test
pop
repz
or
rolb
sub
sbbl
rorb
sub
jno
xchg
mov
xchg
sub
add
test
inc
inc
jle
fcom
cmp
xchg
sbb
pop
lret
sub
fnsave
dec
repnz
outsl
mov
ret
mov
pusha
sub
dec
notl
stc
xor
stc
outsl
adc
ljmp
cwtl
sub
mov
or
ret
loope
and
jl
xchg
nop
rcrb
icebp
jg
clc
pop
inc
push
push
rolb
cs
pop
xchg
aaa
mov
sti
fs
ja
inc
mov
fwait
pushf
or
dec
jbe
imul
not
cmp
in
sbb
testb
test
jo
pop
adc
sar
jecxz
cmpsl
jae
jle
add
lods
jmp
fildl
adc
ret
cmpsb
aad
rcrb
dec
cmp
jmp
xor
adc
in
lahf
nop
adc
in
pop
xor
movsl
dec
mov
and
js
lret
add
andb
out
dec
sbb
enter
adcb
insl
push
jmp
leave
and
pushf
aad
add
bound
in
pusha
jmp
push
and
out
pop
mov
add
jg
mov
or
sub
cli
imul
test
stos
fisubl
inc
ret
mov
xor
mov
jmp
rcrb
inc
jle
mov
lods
inc
inc
push
mull
lret
add
cld
shrl
mov
pop
cmp
add
test
shll
loopne
jns
dec
shll
jbe
stc
test
fdivrl
lods
pop
and
fs
rol
aas
cs
les
xor
xchg
dec
jecxz
les
add
dec
xchg
sahf
dec
jp
lret
mov
mov
sub
or
mov
inc
pop
movsb
mov
mov
iret
jae
pusha
icebp
hlt
push
test
xchg
push
mov
aas
cmpsl
xor
fs
enter
std
mov
lcall
pop
xchg
shr
insb
fistps
jae
xchg
adc
arpl
cs
pop
out
loopne
dec
je
fsubl
xchg
inc
adc
shll
sti
jg
imul
add
jmp
push
pop
push
add
pop
mov
cltd
xchg
or
jge
sub
pusha
mov
mov
or
enter
jg
jecxz
push
mov
ds
dec
int3
mov
int3
loope
inc
adc
movsl
push
popf
aas
xchg
dec
testb
cmpsl
or
fsubs
icebp
aas
dec
lahf
sub
xor
pop
lahf
mov
xchg
fldl
in
test
pop
adc
push
enter
inc
rolb
push
fwait
out
push
add
adc
ljmp
cmp
add
mov
mov
fcoml
xchg
mov
pop
sahf
fidivs
jp
and
and
push
jle
mov
cli
mov
mov
stc
js
pop
adc
pushf
cli
sub
mov
cmp
sahf
js
loop
add
fwait
mov
dec
pop
call
iret
lods
inc
push
inc
test
fdivrs
stos
loope
sbb
fwait
sti
push
xchg
lock
jge
jnp
sub
shrl
dec
inc
js
scas
jnp
jmp
inc
mov
or
inc
inc
pop
sbbb
jmp
fdivr
shlb
push
shlb
gs
pop
in
mov
dec
fsubs
in
pop
push
test
aaa
cmpsb
push
mov
or
mov
aam
xchg
rol
or
sub
adc
inc
inc
pop
jg
hlt
add
jle
iret
xor
repz
outsb
mov
imul
jmp
mov
fwait
xor
xlat
jb
cltd
lret
in
mov
pushf
mov
and
pop
lods
sub
movswl
lods
inc
jge
aas
cmp
arpl
xchg
push
pusha
lcall
push
vpsraw
ret
clc
jg
cmpsl
bound
inc
loope
stc
adc
jo
call
in
out
push
and
lahf
inc
in
nop
or
mov
iret
pop
test
sub
scas
mov
cmp
sbb
fcmove
rcrb
add
in
jne
push
jmp
push
lods
fnstcw
fnstenv
push
scas
sbb
adcb
pop
push
imul
aam
loope
inc
inc
dec
add
ja
fdivr
movsl
xchg
sbb
inc
and
pushf
xor
in
andb
pop
scas
fbstp
jg
loope
jb
popa
adc
or
pushf
adc
popf
mov
xchg
cltd
out
sbb
movsl
aas
sbb
lods
pop
mov
cmp
mov
fidivrl
cmpsb
leave
push
mov
xchg
ss
popa
stos
cmp
cld
pop
sbb
sar
cld
movsb
ret
adcb
lods
bound
ds
aam
fwait
jno
test
or
loopne
call
insl
jno
inc
fcoms
in
sti
movsl
mov
xchg
xchg
int
mov
in
inc
lcall
push
mov
add
push
and
popf
mov
push
xchg
ja
in
rorl
insb
pop
addr16
mov
xchg
push
mov
cli
outsl
lret
sti
push
idiv
std
in
stos
pop
sub
into
dec
xchg
psubusb
push
sub
cmpsl
mov
fisttps
enter
in
cmp
adcl
pop
dec
lock
cmp
js
and
fsubrp
rorb
jge
in
fbld
enter
jnp
sub
fwait
push
cmc
add
lock
push
inc
in
dec
es
mov
testl
mov
inc
lret
test
adc
cmpsl
fldcw
xor
push
push
add
mov
std
aaa
xchg
fcmovb
xchg
js
cltd
adc
adc
cmp
jmp
sbb
test
fs
sub
xchg
xchg
pop
adc
mov
and
sub
aaa
rclb
mov
jb
inc
out
mov
pop
lea
mov
inc
mov
jnp
cmp
mov
push
mov
mov
xchg
and
cmp
push
jle
lahf
adc
or
mov
in
ja
ljmp
push
jns
jnp
ret
push
adc
push
repnz
sbbl
cmp
or
jnp
pushf
aam
sbbl
lods
loopne
sbb
push
lret
test
mov
mov
or
push
or
dec
out
adc
dec
aaa
sub
sbb
jb
ret
loopne
dec
insb
jnp
rcrl
push
cwtl
in
mov
aad
dec
lahf
out
xor
das
xlat
mov
out
or
pop
mov
stos
orl
lcall
mov
push
xor
jle
movsl
xor
sti
mov
inc
cltd
loop
imul
ficomps
or
jecxz
cmp
mov
das
imul
jae
pop
lods
icebp
not
inc
fstps
adc
xor
push
repz
jno
fwait
inc
sbb
lods
pop
in
adc
mov
pop
incl
mov
adc
or
es
pushf
mov
aas
out
pushf
xor
test
dec
sahf
sahf
xchg
in
push
lods
adc
mov
bound
es
inc
popa
test
mov
lea
loop
or
push
xchg
jp
sarb
or
repz
testl
add
arpl
adc
and
dec
sbb
jne
ss
andl
push
pop
adc
rcrb
imul
sub
testl
and
mov
inc
dec
icebp
movsb
push
lahf
add
adc
pop
clc
pusha
cli
push
pop
dec
mov
inc
fistpll
clc
orb
mov
out
std
repz
cli
adc
mov
or
mov
iret
or
ss
mov
mov
fsubrs
jne
jle
jns
rclb
fs
inc
sub
fildll
imul
mov
pop
pop
mov
cli
decb
mov
mov
mov
pusha
add
sbb
xor
push
or
sbb
sub
dec
sti
imul
jbe
lea
into
sbb
lds
sub
push
push
jae
sahf
adc
lret
push
pop
pushf
sbb
mov
push
popa
imull
xlat
sbb
jle
orl
scas
adc
adc
or
pop
sahf
xor
push
aas
inc
add
outsb
cmp
mov
inc
cs
dec
clc
sub
pusha
mov
lcall
cmc
mov
inc
add
sbb
xor
outsl
cld
enter
and
pushf
adc
ret
sbb
aam
aam
xchg
movsb
mov
adc
xchg
jmp
push
imul
xor
sbb
sbb
out
lea
jle
xor
and
mov
outsb
bound
sub
sbbb
xchg
jne
aaa
sqrtps
jle
push
andb
dec
mov
cmp
or
dec
aaa
mov
adc
lods
pop
and
fs
adc
dec
mov
mov
mov
ljmp
xlat
mov
fs
push
je
loopne
adc
cmpsb
repnz
mov
jnp
fiadds
aam
mov
ss
xor
push
aas
inc
xor
cmp
sbbl
in
mov
data16
fildl
pop
ret
pop
push
enter
add
add
dec
xchg
mov
bound
fldenv
xchg
push
adc
dec
mov
into
testb
ret
cli
stc
jbe
jle
ljmp
sbb
into
adc
lcall
push
sbb
loopne
shrl
pusha
cmp
out
loopne
cmp
add
fstpt
pusha
fidivs
mov
jl
sub
aad
push
sub
cmp
mov
push
pop
stc
int3
push
push
sub
loopne
out
mov
scas
dec
and
and
pop
adc
adc
pop
out
mov
sbbb
std
pop
jno
lock
out
mov
and
adc
jne
jnp
cwtl
sub
je
pop
sbb
lods
ret
adc
jmp
push
sub
into
mov
out
test
loope
loop
sbb
movb
outsl
xchg
jg
xchg
push
movsl
jae
add
es
inc
dec
xor
aam
rcr
test
jmp
adc
add
inc
cmp
push
frstor
mov
sbb
ret
jl
pop
xchg
arpl
repz
dec
rolb
fldenv
and
icebp
dec
mov
push
testl
lods
test
mov
pushl
nop
lock
sub
stos
lahf
push
mov
sahf
sbb
aas
xor
xchg
and
jle
pusha
adc
cmp
je
loope
jnp
cmpsb
cmpb
aaa
loopne
dec
or
or
and
shll
xor
xchg
push
das
imul
dec
jle
jae
out
and
sbb
dec
rclb
jbe
shl
leave
push
imul
cld
fistps
add
test
mov
out
xor
out
xor
mov
inc
mov
pop
jae
aad
sbb
push
clc
stos
es
std
aam
and
xorb
iret
push
andl
add
pop
add
push
nop
popa
mov
xchg
dec
adc
add
or
aaa
push
mov
scas
mov
dec
pop
cmp
mov
fidivrl
cld
mov
neg
cmp
popf
scas
mov
xor
or
rcr
cmp
movsl
xor
test
xchg
jno
jmp
or
mov
pop
add
mov
jl
scas
in
sbb
ja
int
jb
xchg
test
add
pop
fsubrl
pop
sbb
xchg
jne
add
push
mov
ja
push
mov
push
pop
das
cmp
js
xor
das
lods
movsl
cmp
lahf
ja
add
or
out
or
mov
in
push
aad
lea
fnsave
adc
mov
in
lds
aas
mov
repz
push
jmp
mov
sbb
shl
shr
inc
mov
scas
and
sub
insl
in
aad
repz
aaa
ret
insb
sub
sti
fldenv
lret
or
cmpb
push
cmp
push
les
cmp
jns
and
cmpsb
push
dec
cmp
adc
sub
cs
xchg
sbb
outsb
rsm
adc
icebp
xchg
dec
push
cs
cltd
fiadds
cld
mov
add
loope
mov
fnsave
cmp
loop
push
cmp
xor
cmp
mov
xchg
jmp
repz
je
jmp
dec
sbb
ret
loopne
test
loopne
loop
aam
add
mov
or
or
mov
or
adc
mov
out
push
pop
and
subl
popa
aam
repnz
sub
adc
pop
push
and
or
pop
filds
jbe
lods
bound
cwtl
or
lea
lahf
xor
xchg
pop
shll
mov
rcr
js
movsb
mov
mov
mov
repnz
mov
dec
or
mov
mov
mov
sub
jmp
add
push
aaa
fidivs
or
push
shll
imul
fcomi
outsb
pop
testl
inc
mov
flds
sarl
or
sub
xchg
sub
rolb
fisubl
xchg
jle
cli
push
les
ret
ret
xchg
aas
jp
arpl
mov
mov
adcb
mov
sub
ret
pop
push
or
es
push
out
xor
ss
push
mov
cs
and
xchg
mov
les
hlt
in
jmp
ja
inc
sub
leave
arpl
ret
cmpsl
inc
aas
cmp
out
fidivrl
popa
mov
jg
push
push
insb
data16
shlb
cmp
popf
mov
push
xchg
lret
and
insl
ss
lret
loop
cmp
aam
shlb
mov
jge
cs
cmp
jno
pop
fsubs
sub
shrl
lods
test
int
sbb
fcmovnb
test
jmp
js
jns
add
popf
jecxz
cmpsl
jne
arpl
sbb
aas
xor
mov
sbb
add
loopne
negb
push
lock
sbbl
pop
push
mov
pop
mov
jne
sahf
dec
xchg
ljmp
inc
mov
push
xchg
and
lcall
mov
sub
jge
hlt
ret
lds
push
cmp
pop
daa
push
cmp
jo
adc
push
cmp
xor
pop
fincstp
cmp
cmpb
fs
inc
adc
xor
add
sub
mov
clc
dec
repz
gs
sub
movsl
cmp
cmp
shlb
lcall
arpl
sub
pop
sub
jbe
sub
lret
roll
pushf
out
scas
mov
lret
mov
mov
scas
mov
xchg
adc
push
nop
push
sub
pop
fwait
scas
pop
jae
into
and
xchg
fwait
add
or
fwait
cmp
jb
sbb
inc
lahf
fdivr
jo
xchg
cmp
add
je
stc
sub
fisubrl
outsb
fadds
sbb
mov
jo
xor
cli
sbb
mov
pop
test
inc
dec
in
cld
lahf
mov
cmp
mov
pop
sbb
vpsraw
popa
jge
and
jae
sbbl
pop
fidivrs
pushf
fsubr
pop
adc
mov
sti
lcall
je
xor
stc
mov
cmp
jae
push
mov
jp
mov
sub
mov
test
stos
aam
in
pusha
cmp
pop
iret
push
outsl
add
xorl
xchg
pusha
dec
hlt
sub
cmpsb
fstl
sub
push
and
aad
shr
jecxz
fisubl
or
mov
jb
das
aaa
in
movsb
jno
mov
mov
xor
sti
out
out
in
mov
mov
daa
inc
mov
push
scas
cltd
scas
xchg
pop
sbb
out
loope
daa
adc
adc
cmp
pop
inc
and
sbb
js
jge
lods
inc
loop
xchg
hlt
inc
sbbl
lock
push
imul
jmp
sbb
lds
xchg
repz
xchg
add
xor
mov
and
lods
and
mov
popf
sub
imul
mov
push
scas
lea
cld
mov
iret
push
test
or
cmp
pushf
mov
sub
fsubl
subl
test
adc
repnz
cmp
ret
stos
in
xor
stc
es
icebp
mov
daa
and
sub
mov
repz
pop
enter
mov
shll
sbb
stc
push
mov
jmp
xchg
pusha
inc
inc
aaa
and
xchg
mov
test
mov
or
out
mov
fisttps
xchg
ret
dec
stos
add
adc
cmc
add
stos
or
pop
fnstsw
nopl
cmp
mov
js
push
jmp
or
dec
cmp
arpl
or
jecxz
add
inc
mov
push
xchg
push
sahf
xchg
cmp
and
xor
xor
cmpsb
data16
popf
xor
push
push
scas
jns
nop
mov
shl
sub
jbe
jp
cli
stos
cwtl
loopne
scas
sub
push
xchg
das
pop
imul
or
or
sub
inc
cwtl
lea
scas
loope
in
and
jecxz
jns
sub
push
dec
push
fisttps
test
mov
adc
repz
data16
sub
adc
push
cs
mov
dec
sub
sbb
jg
jge
mov
push
ret
push
arpl
lahf
sbb
mov
int3
arpl
and
jne
shl
xchg
cli
enter
dec
add
mov
mov
dec
rcl
into
jns
pop
mov
aaa
loope
pop
dec
add
add
sbb
test
push
adc
lahf
mov
sbb
jae
mov
lods
mov
fsubs
mov
mov
ss
shlb
or
sub
scas
lods
pop
xchg
adc
mov
push
mov
rol
dec
mov
nop
mov
int3
roll
adc
pop
xchg
inc
pushf
mov
in
into
push
jle
add
shr
jne
sub
jl
iret
inc
add
icebp
mov
pop
cmp
inc
or
and
imul
mov
sahf
fdivp
sub
div
xchg
jo
mov
pop
sbb
shll
jnp
rolb
mov
xchg
sar
outsl
outsl
xor
cs
xor
in
sbb
sti
dec
dec
jecxz,pt
inc
ljmp
cs
mov
repnz
aaa
jg
out
sbb
out
ret
sar
mov
xchg
mov
jb
shrl
mov
adc
mov
push
cmp
sbb
mov
mov
jle
xchg
jp
jl
mov
cltd
test
jp
cmp
inc
and
inc
mov
pop
sub
xchg
lea
jle
scas
or
pop
pop
cltd
mov
cwtl
jge
insl
jmp
sub
dec
and
mov
xor
sbb
daa
lret
mov
jb
js
cmp
dec
fisttpl
xlat
sub
sbb
inc
xchg
ret
loop
stc
push
pop
mov
pop
rclb
into
xchg
mov
inc
es
jne
adc
mull
add
pop
jge
adc
or
jmp
mov
sub
roll
inc
or
xor
push
cwtl
push
or
xchg
jns
jl
ljmp
xchg
jo
arpl
in
test
lret
mov
cltd
jae
fstpl
add
pushf
and
movsb
cmp
xchg
xchg
sbb
insl
aas
cmp
insb
inc
fisttpl
pop
sub
ljmp
imul
mov
cmp
ret
mov
jle
pop
sarb
mov
aam
inc
pop
leave
lcall
xlat
xchg
mov
test
pusha
dec
xchg
pop
int
jnp
dec
mov
ret
inc
insl
mov
shll
add
lods
lods
and
test
mov
fwait
out
xor
mov
xchg
sbb
cmp
lock
jl
scas
cltd
mov
dec
inc
es
popa
mov
adc
sbb
push
out
aam
xor
xchg
outsl
xlat
inc
push
push
cwtl
ja
aaa
je
jge
loopne
pushf
cltd
insl
add
std
sub
rol
jb
les
add
lods
mov
jne
int3
ss
test
push
subb
outsl
jo
xor
sbb
in
xchg
stos
shll
gs
addl
test
dec
mov
mov
dec
movsb
xchg
add
sub
adc
repnz
cmp
jp
and
and
inc
mov
idivb
mov
xlat
sbb
push
repnz
mov
std
ljmp
mov
pop
mov
loop
rorb
leave
jno
mov
leave
or
mov
rclb
insl
pop
in
xchg
or
cmp
lret
pop
and
or
push
sbbb
movl
insl
fadd
jmp
xlat
sub
add
sti
pop
and
and
pop
adc
or
shrl
xchg
sub
xchg
push
fsubrs
cltd
push
adc
je
roll
incl
mov
mov
adc
pop
jecxz
mov
addr16
dec
std
cmc
inc
int3
jnp
add
fs
inc
repz
cmp
test
sti
inc
stc
sbb
mov
das
or
out
rep
rcrb
mov
push
mov
lds
out
std
ja
lret
or
lds
sbb
and
xlat
mov
mov
xor
add
push
mov
push
call
repnz
in
adc
mov
jge
xchg
jae
jne
jp
inc
in
test
xchg
cltd
test
push
mov
dec
gs
jecxz
mov
iret
scas
data16
inc
aam
repnz
test
out
inc
mov
pop
cli
jnp
fwait
clc
or
push
insb
int
into
inc
xlat
cwtl
cli
lds
pop
inc
lods
mov
out
loop
jae
hlt
ret
mov
inc
xor
add
jae
jmp
cmp
lcall
add
mov
push
sub
test
push
add
adc
icebp
jns
fstpt
dec
les
push
fimull
scas
cmp
and
in
and
jmp
ja
movsl
lock
aad
xchg
sbb
lea
mov
ficoms
in
add
or
mov
sbb
es
fwait
mov
inc
mov
jno
push
jp
jns
hlt
dec
cmp
sbb
pop
jle
clc
imul
cli
cmpsl
mov
aad
jg
and
push
mov
pop
xchg
lahf
or
movsb
shlb
sbb
fwait
xor
sarl
mov
test
hlt
pop
inc
call
rcl
imul
xlat
dec
out
mov
nop
mov
xor
shr
lods
int3
jmp
fisubs
sbb
jno
clc
pop
sbb
cmp
dec
test
jno
scas
sbb
inc
sahf
add
mov
sbb
mov
in
push
push
lock
aad
xchg
jae
pop
xchg
jb
imul
aam
mov
out
ja
cmp
jge
cmp
lods
scas
daa
add
mov
mov
jmp
int
cmp
cltd
sahf
pop
dec
mov
xor
loopne
jbe
dec
and
mov
xor
jne
icebp
out
or
xlat
ljmp
and
pop
out
cmpl
pop
xor
lret
mov
xchg
mov
fwait
pop
xchg
lahf
stos
adc
lret
cmp
cmp
movsl
cmp
mov
push
filds
lods
dec
jge
insl
push
mov
jb
mov
out
jmp
sti
cwtl
hlt
push
jns
mov
push
jbe
lcall
pop
jae
sbb
mov
jle
adc
in
dec
jnp
and
shlb
mov
fucomp
adc
mov
cs
pusha
shlb
aaa
sub
icebp
xchg
jg
es
and
jle
jmp
dec
lock
mov
add
fisubl
mov
icebp
xor
pusha
push
in
das
js
ds
out
or
in
xchg
push
mov
insl
mov
dec
orl
sbb
cmovno
mov
faddl
fstl
shll
fidivs
aad
imul
jns
dec
jnp
sarl
add
in
lret
pop
out
adc
test
negl
aas
daa
ljmp
xor
jg
xlat
icebp
cmp
push
lret
mov
dec
xor
xchg
jb
outsl
add
pop
pop
xlat
stc
mov
js
dec
daa
adc
jecxz
imul
inc
mov
std
lods
jno
xor
fisubrs
fsubrl
out
cmp
test
xchg
push
movsb
pop
push
pop
lcall
fsubrl
sub
cltd
addl
sbb
dec
add
adc
out
outsl
mov
mov
adc
outsl
loopne
push
xchg
xchg
push
and
loop
cli
negl
sbb
mov
and
sub
dec
and
loope
movsl
mov
fsubs
lock
sti
ss
xchg
les
cmp
push
xorb
push
mov
mov
lahf
clc
sbb
mov
mov
inc
adc
addl
popf
cmp
jmp
push
jl
pop
inc
out
mov
aam
sbb
js
pop
lods
pusha
pop
sahf
into
fcomip
mov
push
rorb
les
mov
fs
push
test
mov
aaa
jg
jno
sub
flds
jno
mov
xchg
mov
test
adc
aaa
pop
xchg
push
fsubrl
sbb
sbb
clc
inc
push
fistpll
sbb
cmp
jp
mov
das
out
ja
mov
lret
and
mov
mov
mov
sub
cmp
or
push
inc
jl
dec
xorl
add
lahf
test
mov
push
scas
out
push
int3
jecxz
in
in
xchg
ja
test
mov
pop
adc
fcoms
push
and
addr16
mov
imul
mov
fcompl
sub
inc
and
xlat
out
lret
dec
mov
cmp
dec
fdivl
push
dec
sub
mov
push
mov
inc
jb
mov
out
andl
hlt
popf
sub
ret
mov
aad
cmp
bnd
adc
cmp
cmp
cwtl
jge
movsl
fisubs
hlt
push
xor
test
xor
or
jno
movsl
push
repnz
cltd
cwtl
hlt
ret
adc
int
mov
sbb
subb
jle
cli
lea
sub
jecxz
or
mov
stos
add
jge
mov
adc
movsb
jnp
xor
cmpsb
cmp
inc
push
xchg
popa
sti
fmull
mov
inc
push
add
faddl
sub
jne
inc
cli
cli
push
inc
fcmovu
cmp
iret
movsl
pop
ss
std
adc
mov
cmp
in
insl
dec
mov
rcrl
rorb
push
xchg
inc
repz
jb,pn
xchg
adc
fcomps
add
inc
into
jns
xor
cmp
xchg
xchg
mov
ljmp
pop
dec
in
or
push
in
lock
in
jo
xchg
cmp
cmp
je
mov
jl
jecxz
out
cli
cmp
shll
cmpsb
daa
xchg
outsb
cmp
push
jl
es
push
sbbl
inc
mov
imul
dec
imul
mov
sub
repz
and
loopne
insl
mov
xor
rolb
addr16
shll
mov
fildl
imul
mov
pop
cmpsb
xchg
movb
mov
and
or
ja
mov
mov
xor
pop
pop
mov
shll
pusha
or
pop
lahf
pop
rcll
push
mov
xchg
int
gs
mov
repnz
out
in
cli
dec
idivl
mov
into
mov
add
rcll
fstps
lcall
inc
in
sahf
cs
pop
test
xchg
vdivss
loop
pushf
jle
ja
std
stos
loop
xchg
out
ret
jno
push
popa
jns
out
cld
adc
mov
mov
and
cmpb
sti
arpl
mov
ret
xchg
lds
add
mov
jns
int3
into
adc
stc
jmp
sub
shlb
mov
add
fs
xchg
lea
addl
lock
call
push
addb
mov
cmp
dec
xor
stos
mov
xchg
sbb
sub
and
add
mov
jo
arpl
dec
aas
cmp
out
fisubrs
push
rcrb
mov
or
clc
push
popf
movsl
addr16
test
cmp
movsl
loopne
cmpsb
sahf
pop
push
je
lret
ljmp
mov
fistl
sub
stos
fstp
sbb
andb
fisubrl
jb
cli
sub
pop
cs
push
cmp
mov
xor
shl
incb
push
das
fwait
mov
lods
mov
lret
add
jnp
mov
jae
pop
mov
xor
xor
pop
push
fwait
outsl
add
or
test
inc
test
xor
xchg
int
lret
pop
addr16
outsb
inc
and
roll
shlb
aas
negb
sbb
dec
cs
or
jne
ficoml
xchg
js
or
adc
inc
nop
push
pusha
call
aas
pop
sub
cs
sahf
shrb
je
int
aaa
out
or
push
dec
push
jle
or
pop
mov
ljmp
push
stc
cmp
std
push
ret
jg
psllw
fiaddl
fcoms
xchg
mov
cmove
dec
xchg
or
inc
imul
data16
or
sbb
mov
mov
mov
push
xlat
pushf
xor
push
adc
mov
repnz
das
es
lahf
mov
push
scas
test
rcll
loopne
fwait
arpl
and
movl
mov
shll
push
adc
test
rolb
jne
popl
jge
push
sbb
xlat
xchg
jl
test
jo
xlat
in
add
sbb
int
fcomip
mov
add
push
dec
pop
lahf
movsl
cmc
xlat
cmp
into
call
lock
xor
sub
mov
cmp
dec
jg
subb
mov
dec
pop
leave
lods
sbb
adc
inc
mov
and
iret
icebp
inc
dec
sub
f2xm1
adc
lods
loope
xorb
or
pop
imul
subb
jne
sbb
dec
push
dec
adc
cmp
pop
cmp
mov
ja
pop
sub
sub
jbe
out
mov
inc
aad
mov
pop
push
in
and
cmpsl
daa
and
pop
xchg
xorb
xor
jle
dec
xor
fnsave
je
mov
pop
sti
pop
add
xchg
pop
addb
loope
fisubrs
push
mov
ljmp
sub
das
sub
arpl
das
out
sbb
std
cmpsl
ret
and
test
and
xchg
fidivs
or
sbb
xchg
jp
mov
mov
jns
pop
sub
pop
fs
pop
and
dec
mov
mov
je
jo
add
push
lret
test
scas
cmp
fadds
jbe
mov
add
xchg
test
xchg
je
hlt
ljmp
cwtl
cltd
adcb
ds
idivb
xchg
sub
cmc
aas
and
lods
je
mov
dec
out
push
jmp
movl
xor
call
cmp
dec
das
lods
out
pop
leave
divl
lock
aas
in
into
push
lcall
and
test
adc
xor
fs
aaa
sbbb
inc
pop
in
jns
repnz
mov
mov
mov
and
test
dec
xchg
mov
jg
icebp
imul
mov
mov
mov
pushf
mov
cs
push
xchg
pushf
repz
xchg
mov
fistpl
mov
fwait
in
cli
outsb
cmp
xchg
mov
mov
jle
movsl
arpl
inc
adc
mov
dec
cmc
shll
add
jns
mov
out
inc
push
js
add
sub
jle
push
inc
ja
adc
movsb
jmp
ja
lock
and
cmpl
sbb
add
das
pop
outsb
pop
outsl
shlb
and
jns
fcomps
movsb
sbb
shlb
aad
mov
dec
xchg
fisttpll
xchg
cld
scas
int3
pop
sub
xchg
int
out
inc
xor
repz
sbb
pop
lods
jne
outsb
and
mov
inc
pop
inc
mov
pop
adc
inc
mov
and
inc
add
jnp
cmp
push
pop
and
and
mov
cmp
mov
mov
nop
das
jmp
xor
int3
cmp
mov
dec
xchg
push
jmp
fiaddl
cld
jmp
imul
out
sbb
imul
sbb
loop
sub
call
push
push
cmc
xchg
stos
sbb
sub
ss
sti
mov
and
aaa
fisubl
dec
je
popa
pop
xchg
popa
scas
jge
pushf
mov
inc
fwait
outsb
arpl
addr16
jmp
outsb
das
popa
in
add
push
aam
inc
cli
sub
mov
out
push
xchg
cmp
les
mov
nop
in
popf
sub
adc
xchg
fmull
sub
arpl
mov
push
mov
loope
xchg
pop
push
xchg
xor
pop
mov
icebp
sbb
sahf
test
jb
pop
mov
sbb
lret
in
xchg
loope
idivl
fwait
addl
xchg
ror
jno
push
mov
push
stos
mov
dec
shl
adc
inc
xor
adc
js
jge
jge
pop
imul
push
shl
icebp
fwait
or
dec
popa
js
gs
sbb
lret
inc
cmp
inc
jae
pop
test
lcall
insb
or
push
add
nop
cmpl
loop
pusha
repnz
imul
mov
insb
mov
adc
les
stos
jbe
or
lcall
sub
movsl
mov
mov
add
rcl
mov
xchg
orl
jecxz
or
xor
scas
sub
enter
outsl
aaa
imul
cmpl
adc
sub
add
jp
aas
std
mov
mov
cli
or
mov
xchg
cwtl
pop
dec
insl
xor
jne
repnz
and
in
mov
push
sahf
cmc
cmp
stos
mov
add
add
add
jecxz
test
insl
dec
push
enter
push
and
mov
stos
jge
pop
fcoml
ja
ret
arpl
aad
sub
jg
out
sub
out
cmc
mov
mov
dec
imul
mov
lret
aad
addr16
add
or
les
scas
int
jno
pop
jge
xor
adc
int3
add
adc
mov
xor
mov
and
and
cmp
xchg
pop
pop
xchg
mov
arpl
sub
js
inc
popa
pop
mov
xchg
inc
inc
in
test
and
sbb
mov
sbb
adc
faddl
or
lahf
ds
fwait
sahf
pop
es
xor
iret
fcomps
jo
subl
insl
mov
jnp
push
in
cltd
lea
cmp
cmp
inc
sbb
cmpsb
out
sbb
dec
mov
add
lret
enter
stc
xor
and
decb
loopne
add
and
addr16
repnz
cmpsb
sbb
in
push
and
lahf
in
stc
imul
xor
lea
incl
ja
mov
ret
addr16
push
and
nop
movsb
pop
add
xor
mov
shrl
incl
stos
aas
or
aaa
add
jmp
cld
jge
xchg
fs
sub
mov
in
iret
rcll
inc
adc
not
jne
stos
lcall
in
xchg
les
idivb
aas
aaa
mov
mov
mov
push
push
aas
xor
pop
scas
jno
aad
and
push
test
xorb
cli
in
cmp
in
scas
pushf
test
dec
cwtl
fucomp
fistpl
inc
mov
in
aad
jo
js
out
scas
scas
out
lret
add
insb
push
leave
int3
lcall
pop
mov
jne
and
in
mov
sti
in
or
incl
xor
or
outsb
mov
enter
dec
mov
daa
lods
inc
in
mov
negb
inc
adc
repz
adc
mov
mov
sbb
pop
mov
push
fucomp
dec
test
jle
ljmp
xchg
cld
push
jp
dec
push
sbb
lds
mov
cmp
mov
fcmovnb
ds
xchg
pop
in
add
arpl
sub
movsl
bound
incb
movsl
rorb
dec
shlb
cmp
and
repz
mov
mov
or
mov
inc
xchg
mull
mov
not
stos
pop
frstpm(287
push
cmp
je
mov
iret
jns
adc
and
test
subb
jno
add
lcall
adc
test
jo
pop
add
mov
mov
jbe
test
pop
gs
push
stos
cltd
push
arpl
or
mov
add
jbe
loope
and
stc
fwait
pop
jg
pop
aaa
fstpt
cmc
iret
sbb
repnz
mov
test
cwtl
out
fsubrl
inc
aas
inc
mov
mov
in
cmp
jo
dec
hlt
lods
jne
xor
jp
lret
or
xor
mov
adc
or
cmpl
arpl
and
and
dec
xchg
sbb
jle
test
ret
int3
mov
add
xor
repz
stc
lods
mov
pop
push
inc
inc
jnp
push
js,pt
data16
fstpl
dec
pop
inc
add
imul
or
scas
scas
inc
ret
call
cmc
push
mov
pop
movsl
or
in
adc
neg
dec
push
rolb
mov
and
mov
and
cmpsb
jnp
push
pop
shlb
sbb
lods
in
mov
inc
dec
jmp
mov
and
jno
mov
sarl
fsts
bound
mov
roll
ljmp
push
pop
ss
adc
fimuls
sahf
out
jns
shrl
add
mov
jp
cmp
icebp
icebp
and
or
in
cmc
les
je
cmp
imul
push
rorb
popf
popf
or
lret
repnz
arpl
add
mov
mov
je
fildl
movsl
or
mov
push
sub
je
adc
mov
arpl
outsb
pop
pop
int
out
sbb
aam
jge
repnz
push
fnstenv
or
mov
mov
pop
cmp
inc
push
xchg
pop
fsubr
loopne
hlt
test
xor
icebp
dec
adc
and
std
mov
adc
popa
cld
into
cmpsl
clc
mov
sbb
out
out
xorb
repz
addr16
or
popf
gs
scas
sub
fisubs
or
xor
aad
cmp
dec
mov
repz
pop
icebp
call
xchg
xor
cli
inc
pusha
mov
xlat
rcrl
outsl
inc
xchg
adc
sti
sbb
lods
es
leave
outsb
hlt
les
iret
scas
mov
stos
in
ficoml
scas
mov
lods
mov
push
adc
cmc
pushf
fwait
repz
or
adc
cmp
dec
push
jmp
xorl
imul
repnz
aam
ja
pushf
testl
xchg
test
pop
lods
lret
mov
loope
inc
add
sti
inc
adc
imul
jmp
nop
jnp
push
lahf
dec
outsl
pop
mov
icebp
mov
test
sbb
pushf
and
das
and
addr16
lock
pop
or
sarb
add
xchg
in
neg
in
ss
cwtl
lds
xchg
and
scas
pop
inc
jne
mov
cmp
pusha
fucom
popa
in
repnz
inc
cmp
daa
pop
xchg
dec
jb
pushf
and
fstpl
fstps
cmpsl
jge
pop
sarl
stos
jg
pushf
stc
mov
cmpsl
cwtl
sti
out
sbb
adc
out
cmp
nop
xor
leave
mov
andl
sbb
shrl
popf
jb
xchg
pop
mov
mov
cmp
out
call
dec
scas
addr16
mov
pop
test
js
gs
mov
jle
hlt
lock
or
inc
mov
stc
jb
fldt
imul
fsubs
adc
sub
cwtl
xlat
ret
or
mov
lea
out
lret
imul
dec
imull
lret
mov
sarb
or
rcr
adc
mov
cmp
push
in
rolb
adc
mov
test
add
push
imul
push
jne
cmpxchg
mov
add
xlat
das
push
pop
mov
fs
sbb
gs
sub
pop
xchg
inc
cmpsb
dec
sbb
je
adc
lock
sub
add
push
cmp
push
xor
js
dec
lret
mov
xchg
pop
outsl
lods
fsqrt
mov
sbb
xchg
fidivrs
ljmp
fldcw
push
ss
mov
xchg
repz
shr
das
mov
repnz
call
cwtl
mov
dec
sbb
pop
call
sub
adcl
lea
xchg
lods
jns
test
xchg
inc
iret
out
inc
movsl
repnz
fstps
mov
mov
repnz
and
or
mov
fdivs
inc
inc
cmp
imul
aaa
ja
mov
jp
outsb
int3
int3
mov
push
pop
sbb
les
pushf
fstl
mov
and
call
jns
sub
addr16
test
repz
xchg
and
jmp
add
je
sbb
popf
push
data16
jae
xchg
ljmp
push
sbb
push
rol
std
aad
cmp
mov
mov
cmp
into
pop
imul
insl
jo
cltd
je
dec
adc
test
insb
and
clc
adc
inc
testl
xchg
inc
lock
mov
cs
mov
ror
jo
cwtl
or
push
cmp
js
fnclex
pop
jle
inc
mov
fidivrl
pop
mov
and
cmpb
jo
movsl
xchg
xchg
sbb
cmp
jne
aaa
sbb
cltd
mov
pop
movsl
xchg
stos
xchg
fxch
sbb
mov
mov
adc
bound
push
sub
push
movl
sbb
or
imul
lea
mov
xchg
shrl
shrl
lcall
mov
mov
xchg
lcall
push
dec
bound
loopne
imul
xchg
mov
out
lea
out
dec
bound
add
std
inc
imul
repnz
sbb
leave
adc
or
pop
push
out
inc
icebp
scas
adc
jecxz
lret
cmc
xor
das
addb
mov
icebp
subb
mov
xor
inc
xchg
cs
lret
xor
ret
xor
es
push
push
dec
pop
subl
icebp
xchg
cld
sti
testb
gs
aam
pop
sbb
mov
les
outsl
add
xor
hlt
mov
jecxz
pushf
push
cmpsb
xor
adcb
shrb
sahf
arpl
stos
imul
into
push
adc
ljmp
sub
and
das
jle
es
mov
imul
xchg
or
lahf
mov
out
outsl
ss
mov
mov
mov
std
mov
inc
rol
out
mov
or
mov
mov
fidivrl
pop
sti
or
mov
add
push
xchg
sbb
lea
xchg
pushf
mov
sahf
fucom
pusha
sub
loope
js
mulb
rcll
cwtl
mov
adcl
loope
scas
jecxz
psubb
pop
mov
inc
mov
adc
and
hlt
jle
pop
gs
sysexit
pop
sub
adc
adc
xlat
mov
adc
xor
fbstp
xchg
ds
add
xchg
leave
out
je
aaa
loopne
inc
nop
aas
mov
and
mov
call
sub
hlt
jnp
lret
lahf
pop
rorl
adc
cmp
inc
or
outsl
sub
mov
cmp
cli
mov
mov
mov
shll
shrb
sbb
push
pop
xchg
clc
in
xchg
pop
iret
add
push
test
stos
jae
jnp
sub
inc
xchg
imul
xor
clc
xor
xchg
fistps
sub
fidivs
and
scas
jecxz
shll
loop
xlat
rclb
mov
ja
call
cmp
jno
pop
mov
push
movsl
aaa
dec
pushl
mov
jnp
insl
loop
loopne
mov
jne
pop
jo
or
or
test
xchg
or
aad
add
xchg
xor
jnp
and
mov
aad
push
mov
int
jno
adc
mov
jae
ret
fdivrl
xor
jg
fldenv
mov
arpl
ljmp
popa
shrl
jge
mov
adc
or
xchg
filds
lds
lds
cli
push
subl
add
cltd
cli
pushl
sahf
psubq
and
adc
jp
enter
xor
jmp
mov
lock
mov
push
dec
mov
lods
andb
inc
roll
xchg
ret
arpl
in
icebp
jg
add
pop
xor
cld
pop
lods
sbb
cmpl
xor
xchg
sbb
ret
inc
in
in
xchg
aam
push
jo
repz
leave
mov
sbb
repz
out
inc
scas
scas
aad
pop
push
push
rcrb
jnp
int
or
leave
hlt
xor
and
jle
mov
and
fbld
cwtl
cmpsl
add
daa
xor
xchg
loopne
out
fcomps
insl
aam
or
inc
xchg
cmp
into
jns
inc
push
push
push
mov
jp
rcrl
shlb
gs
loopne
sub
mov
lods
jae
pop
add
testl
add
addr16
jns
push
jno
inc
jmp
or
notl
frstor
cmp
bound
cmpsl
mov
lea
cmpsl
iret
lods
push
sahf
and
or
xor
je
dec
fdivs
adc
lret
or
adc
inc
cmpsb
lret
or
psrad
leave
fidivrs
sbb
sbb
push
ret
scas
pop
movsb
push
or
pop
adc
dec
add
mov
xchg
frndint
int
xchg
ret
and
push
hlt
jle
pop
lea
movsb
subl
jl
pop
in
mov
rorl
sbb
xor
dec
xor
sub
js
aas
adc
lcall
dec
nop
shlb
pop
ja
enter
cld
jge
movsl
pop
scas
rclw
or
test
pop
mov
xchg
push
add
sti
add
mov
dec
lret
cmp
repz
push
jb
dec
out
pop
jb
pushf
pop
mov
pop
lock
jle
lret
lock
popf
lds
xor
lods
jne
enter
roll
ja
push
sbb
test
popa
pusha
data16
add
inc
iret
cmc
inc
inc
sti
mov
jecxz
cmp
gs
fwait
cmpsb
pop
int
sub
pop
mov
xorb
sub
ret
ja
dec
mov
lock
sub
inc
pop
pop
mov
dec
icebp
loopne
cmp
pusha
test
push
pop
inc
nop
aaa
jno
pop
inc
or
cltd
pop
add
nop
push
sti
sub
sub
pop
out
push
sahf
outsb
shll
or
mov
fbld
jl
and
pop
xor
xlat
sti
inc
leave
sub
ds
jns
inc
inc
insb
ljmp
pop
int
insb
push
ret
inc
mov
loop
movsb
push
es
ss
or
ds
add
or
aad
push
or
aad
dec
and
adc
iret
cmp
aam
scas
mov
cmp
dec
cld
cmpsl
call
adc
movsb
inc
fldt
repz
mov
popf
andl
imull
call
adc
dec
fildl
cmp
into
orb
adc
jecxz
stos
lret
mov
adc
mov
in
cmpsl
sti
js
jle
jmp
adc
xchg
jle
fdivrl
lret
dec
icebp
push
push
push
dec
push
sbb
test
or
dec
popf
pop
xchg
bound
xor
jecxz
jl
movsl
push
cmc
jb
xchg
inc
or
inc
add
ljmp
xchg
rorl
and
lods
and
ret
mov
ja
divl
inc
mov
rorb
or
lahf
fisttpl
repz
dec
and
fnstsw
ret
enter
stos
sbb
jl
xchg
cwtl
scas
in
cmovl
aad
test
mov
sub
outsb
div
imul
mov
pop
push
sbb
or
nop
adc
call
sub
push
es
sub
mov
xchg
sbb
insl
mov
cmpsb
xor
shlb
out
fstpl
popf
testl
push
or
mov
test
xchg
not
mov
adc
cmp
lret
hlt
imul
sbb
iret
push
mov
fcomps
loop
outsl
stos
ljmp
cli
jns
pusha
push
push
inc
insl
pop
mov
mov
das
and
leave
push
loopne
dec
sub
pop
add
xor
dec
xor
cli
xlat
and
fiaddl
mov
adc
ja
and
ja
aam
dec
nop
out
shlb
lods
xor
addr16
je
inc
sbb
add
nop
cmpsb
out
xorl
cmp
sti
mov
loop
mov
je
in
pop
sub
jns
loope
scas
test
daa
daa
lcall
or
filds
mov
push
cltd
in
lock
sub
repnz
arpl
clc
or
mov
and
mov
insb
mov
scas
mov
dec
pop
jle
fwait
mov
fistpl
testb
subl
sub
ljmp
push
daa
movsl
jl
nop
jbe
imul
jo
cli
adc
mov
pop
adc
dec
mov
mov
out
fcoms
sbb
mov
mov
add
adc
sbb
repnz
cs
cmc
lds
es
add
popf
call
pop
jnp
jl
test
pop
jmp
mov
and
fistpl
sub
xchg
mov
test
fldt
leave
lods
sub
insb
mov
cld
adc
mov
or
cmove
jb
bound
push
add
pop
nop
enter
shl
sub
scas
cmpsl
or
pop
pop
add
adc
adc
outsb
loopne
outsl
xchg
int
jecxz
fsubl
fiaddl
push
pop
xchg
push
por
adc
pop
xchg
ret
stos
jg
adc
jbe
incl
int
call
mov
mov
xor
xchg
fs
dec
jns
or
out
cltd
mov
mov
lods
dec
mov
and
or
in
lods
ret
cmp
sqrtps
jns
mov
in
sbb
in
loope
pusha
jns
rcrb
dec
ljmp
das
les
call
shrl
lds
push
fmul
cltd
mov
mov
xlat
add
jns
out
dec
sti
xchg
test
data16
cmp
push
scas
mov
fldcw
push
cmpsl
fucomp
sahf
pop
aas
cltd
mov
sub
out
xchg
sub
call
out
movb
lea
testb
mov
sub
movsl
push
insl
repz
in
fnstsw
call
jbe
std
repnz
jmp
jns
xor
push
stos
shll
imull
mov
int
xlat
popf
dec
lret
insb
leave
xor
pop
insb
imul
ret
int3
jb
cltd
xor
mov
scas
popa
fldl
xor
lahf
or
mov
mov
push
xchg
aas
outsl
mov
scas
pop
xchg
bnd
and
mov
inc
jle
ret
sbb
pop
xchg
lds
in
and
arpl
adc
cmpsl
pop
cmp
jb
dec
fildl
mov
lds
mov
out
jecxz
mov
inc
ljmp
pop
vmovaps
inc
inc
push
div
into
in
inc
push
pop
test
jae
xchg
jb
rcl
pop
sub
sbbl
shr
lea
xor
xor
stos
loope
addl
mov
popaw
cmpsl
dec
push
popf
mov
andl
push
pop
dec
out
mov
loopne
mov
jmp
xor
mov
aaa
xchg
leave
dec
cltd
mov
popf
xor
sbb
mov
mov
mov
cld
sub
dec
mov
and
lahf
ds
cmp
mov
jecxz
pushf
jle
cmc
popa
adc
dec
inc
and
pop
int3
popf
xchg
in
mull
repnz
or
test
aaa
aas
lahf
js
pushf
inc
or
pop
xchg
sbb
jmp
dec
lcall
adc
adc
sbb
mull
lock
inc
and
nop
rcl
jbe
dec
sbb
out
dec
mov
or
cmpsb
pop
mov
cmp
jl
insl
cmp
gs
insl
in
es
fwait
imul
fptan
xchg
mov
mov
test
inc
popf
sub
xchg
call
ret
or
in
jnp
push
sub
add
test
lods
and
jg
and
movsb
je
cs
push
push
lret
stc
push
movsl
stos
mov
outsb
xchg
rclb
clc
lahf
or
fcmovnb
test
pushf
imul
fldl
outsl
sub
mov
inc
push
js
xchg
jns
aam
add
shll
dec
movsl
cmpsb
pop
cmc
jle
mov
cmpl
int
inc
pop
jno
fwait
sbb
test
and
pop
xor
out
xchg
cltd
jmp
lods
out
jp
gs
fwait
shl
fildl
stos
mov
xchg
leave
mov
fstl
incl
dec
mov
aam
xor
add
addr16
pusha
sub
add
sub
loopne
cmp
push
sbb
or
add
lods
inc
cwtl
mov
dec
xchg
insl
data16
push
sub
xchg
mov
hlt
js
inc
adc
inc
int3
mov
roll
shrl
aas
mov
lahf
jb
popa
dec
jno
push
in
and
jae
test
ret
or
xchg
inc
pop
stos
xlat
leave
enter
js
js
adc
inc
pop
lods
xor
out
mov
sub
fcoms
push
pop
shr
mov
xchg
loope
andl
and
pop
fcomi
cmp
andl
cmp
push
sti
imul
les
jbe
mov
pushl
into
stc
pop
jmp
leave
sbb
repz
adc
mov
lret
bound
pop
ss
mov
sub
lcall
add
ljmp
xor
std
push
xchg
mov
lds
out
dec
push
add
pop
mov
or
add
inc
cwtl
lods
cmpsl
lods
fcoml
fucomip
jne
xlat
sahf
mov
test
pop
sub
push
jmp
cmpsb
adc
jns
loop
aaa
jnp
fsubs
in
mov
sub
pusha
mov
icebp
push
and
xchg
add
std
in
lret
divb
xchg
int3
or
stc
push
mul
xor
call
ror
or
mov
repnz
dec
imul
cmp
insb
inc
jne
push
fildll
xorl
fidivs
xchg
push
pushf
push
les
and
mov
sub
call
xor
lret
or
add
icebp
push
sbb
xlat
ret
mov
test
sub
pop
mov
cltd
cmc
cwtl
in
mov
push
mov
fmull
jmp
sbb
pop
insl
push
push
pop
mov
es
push
xchg
imul
mov
push
push
push
mov
xor
sbb
cmp
cwtl
stos
enter
mov
ja
xor
rep
enter
loop
mov
lcall
push
movsb
add
push
lahf
xor
loope
or
add
jge
aas
cltd
xchg
mov
sti
mov
mov
cmc
sti
cmp
cmp
test
push
sub
cmp
adc
fcmovb
adc
mov
mov
dec
push
lahf
in
inc
jne
sbb
inc
movb
sarl
pop
stos
adc
cmp
shr
pop
pop
jb
aad
ds
xor
loope
jbe
dec
insb
xchg
repz
loopne
imul
pop
addb
nop
mov
xchg
iret
aas
inc
xchg
aaa
jb
adc
push
addl
lock
jmp
mov
adc
call
repnz
movsl
lcall
bnd
add
xchg
adc
mov
push
je
in
dec
or
repnz
inc
push
repz
mov
or
pop
cmc
dec
jo
jns
rol
and
push
addb
shrl
cmpsb
adc
enter
nopl
mov
cs
mov
and
mov
pop
clc
push
cld
orl
mov
mov
divb
arpl
rorl
and
add
pop
aaa
sbb
jo
xor
pop
adc
mov
les
leave
iret
ret
mov
or
dec
push
lock
popf
mov
pop
fmul
xchg
aas
dec
jp
push
push
movsb
pop
lods
inc
imul
xchg
stos
mov
xor
cmp
lcall
mov
fsubrs
lret
jae
push
sbb
movsl
mov
les
cmp
lds
jb
fs
push
add
imul
es
jmp
gs
adc
ret
jl
test
fwait
push
dec
add
iret
and
add
cli
push
addr16
movsb
inc
shrb
sbb
cmp
sub
loopne
pop
inc
adc
push
enter
mov
cmp
ss
aaa
fcmove
rcll
cmp
cli
lods
aas
push
loopne
out
cltd
cmpsb
mov
and
lahf
cmpsb
out
push
jmp
mov
mov
movsl
pop
icebp
mov
xor
imull
xchg
sarb
dec
or
mov
fdivs
mov
addr16
cmc
jmp
lds
outsb
jns
and
pop
push
jle
jp
adc
mov
rcll
jge
dec
in
negl
out
lahf
adc
sbb
fwait
or
scas
addr16
hlt
sub
and
std
push
xor
cli
icebp
add
adc
mov
jns
pop
ret
xlat
pop
jb
int3
inc
es
or
xor
pop
addl
addl
adc
cmpsl
or
jmp
jp
add
adcb
pusha
mov
sarb
call
cmp
push
cld
inc
les
aaa
clc
adc
adcl
lea
mov
ljmp
dec
sbbb
call
daa
bound
sahf
lea
mov
mov
cwtl
js
jmp
inc
ds
cwtl
push
xor
mov
imul
scas
fs
add
jae
mov
imul
push
push
xorb
ja
mov
arpl
push
sub
dec
jl
imul
push
and
and
push
cltd
orb
pop
push
inc
cmc
in
add
push
and
out
inc
mov
pop
push
jg
and
lock
push
shl
jbe
xchg
add
dec
jmp
dec
mov
mov
testb
ss
shl
xlat
push
pop
les
ret
xchg
fucomi
mov
insl
leave
das
jmp
sub
mov
xor
mov
inc
iret
hlt
push
dec
jl
notb
je
ja
push
or
or
stc
jp
sbb
mov
pushf
in
pop
inc
cmp
push
mov
sbb
jae
shr
enter
ret
and
and
cltd
lret
push
push
imul
lea
mul
sbb
test
jb
push
loopne
or
data16
sbb
adc
mov
add
fsts
jl
clc
sub
fwait
incl
fcmovnu
xchg
fcomps
jo
dec
or
mov
cltd
faddl
sbb
pop
lcall
gs
jp
cmp
popa
call
sub
jbe
push
and
adc
mov
js
sub
push
aas
ljmp
insl
mov
push
jo
mov
push
sub
outsb
pop
call
xor
jecxz
test
stc
js
jle
pusha
jb
cmp
jnp
insl
les
or
inc
out
xor
xor
ret
lods
adc
jns
sbb
xchg
mov
xor
add
cmp
dec
push
xor
les
in
push
pop
fwait
push
sbb
mov
test
jnp
in
add
push
data16
fisttps
out
push
movsb
repz
scas
mov
out
into
xchg
inc
mov
daa
or
mov
cmp
xchg
jno
and
leave
lahf
int
mov
sarb
cmp
pop
sub
jnp
roll
pop
js
xor
add
fcoml
adc
mov
inc
push
inc
adc
loope
adc
jp
rcrb
inc
in
mov
xlat
xchg
pop
add
jmp
jmp
jp
and
adc
popf
lock
xchg
in
cli
mov
or
dec
lahf
into
dec
cmc
lods
sub
loopne
cmp
push
sbb
push
pop
ljmp
mov
dec
mov
movsl
les
rep
jno
rol
cli
mov
orl
mov
sub
stos
popf
jo
cmp
mov
mov
cmp
pop
push
mov
daa
and
sbb
hlt
add
addb
jo
ljmp
mov
aaa
int3
xchg
les
insb
jmp
mov
subb
in
stc
pop
iret
in
push
adc
xor
xor
adc
bound
mov
jns
cmc
cmpb
sbb
push
pop
aaa
cmc
rcl
jnp
dec
mov
loop
dec
dec
mov
fisubrs
rorl
cmc
sahf
cmp
mov
xor
aam
adc
mov
pusha
sahf
sub
loop
rol
and
cmp
push
push
jo
repnz
mov
push
fs
mov
mov
add
cmp
cwtl
cwtl
or
or
mov
in
nop
in
sbb
test
or
jo
in
ljmp
insb
push
rcrl
fisttpl
fimull
inc
xlat
repz
das
dec
cs
shrb
popa
cmpsb
jg
inc
jne
mov
fidivl
cmp
and
int
inc
cmp
mov
pop
mov
andnps
clc
xchg
push
sbb
pop
push
jecxz
pop
test
pop
insl
gs
test
movsb
rolb
add
sbb
or
ja
cmp
stos
testb
repz
rcl
fdivs
test
dec
cmpsl
jo
iret
sub
or
adc
nop
xchg
fcmovnb
cld
mov
inc
adc
and
inc
jbe
outsb
xchg
mov
xlat
cmp
xchg
fdivrs
xchg
and
iret
in
dec
je
icebp
push
mov
jl
add
rcll
leave
jbe
fnstcw
lret
and
or
cmp
mov
adc
adc
fdivrl
fsubr
inc
jle
mov
inc
fnstcw
enter
sub
sti
push
xor
sbb
jb
mov
daa
add
jp
xor
sbb
shr
mov
stc
lahf
jge
out
cmpsb
fcoms
ljmp
scas
push
fwait
sbb
ret
sbb
sbb
orb
inc
in
cltd
aaa
cmpsl
inc
jg
mov
insl
pop
nop
xchg
lea
mov
repz
and
mov
fnstsw
jne
lahf
popa
stos
sub
icebp
and
sbb
cmp
dec
inc
xor
adc
lahf
loop
xchg
es
stc
mov
scas
pop
jecxz
pop
adc
mov
in
ljmp
or
pop
sbb
pop
push
test
sub
nop
enter
adc
xor
rolb
fwait
loopne
aaa
jae
jecxz
movsb
es
or
ffreep
shll
call
or
mov
fbld
cmp
mov
pusha
push
pop
mov
inc
cld
ret
aam
aad
mov
sbb
mov
xchg
je
aam
jo
sbb
pop
dec
outsb
movb
out
test
scas
jge
jno
leave
jb
jecxz
clc
add
jbe
mov
dec
adc
addr16
cmc
xchg
jmp
jge
in
jbe
xchg
fbld
mov
push
jl
mov
pop
mov
lock
cmp
sbb
aad
packuswb
or
cmpb
dec
inc
xchg
sti
lods
dec
cltd
in
rolb
add
outsw
xlat
sahf
das
or
xor
mov
add
push
cmp
xchg
cs
negl
push
repnz
xorb
jno
icebp
sahf
inc
dec
push
jg
push
mov
xchg
lahf
and
mov
push
cli
add
cwtl
cld
and
movsl
shrb
int3
loope
pop
mov
je
push
popa
cmp
adc
arpl
aas
lret
dec
daa
bound
sbb
repz
rcl
jae
mov
jp
inc
push
push
or
mov
inc
rclb
mov
mov
stc
adc
popa
fdivrs
lcall
jbe
mov
pusha
dec
js
xor
and
mov
dec
xchg
push
in
pop
inc
xor
jbe
lods
adc
xor
pop
xchg
flds
push
mov
pop
scas
pop
lret
adc
sub
scas
xchg
or
and
movl
loope
sub
jp
cmp
jge
dec
adc
cmpl
push
jo
cmp
push
cld
mov
stos
xor
push
gs
pop
mov
lock
out
lods
shll
sub
jno
clc
aas
mull
adc
dec
pop
mov
cmpsl
shr
lea
cmp
scas
cmp
mov
pop
flds
mov
or
and
and
hlt
xor
stos
roll
les
mov
sub
hlt
enter
dec
insb
fwait
pop
xlat
les
adc
es
icebp
fsub
dec
ficompl
xlat
push
jmp
cmp
xchg
inc
pop
inc
ljmp
inc
scas
and
stos
inc
pop
inc
pop
mov
scas
decl
pop
ret
cmp
lods
into
xchg
jmp
jno
cmp
adc
inc
jp
xlat
dec
test
sbb
mov
fsts
int
push
jae
add
xchg
adc
adc
popa
xchg
int
adc
lock
repnz
lods
mov
and
inc
xchg
xchg
mov
por
and
inc
and
leave
jo
test
pop
data16
in
jae
outsb
cmp
sbb
push
outsb
push
mov
mov
xchg
addr16
sbb
mov
jb
inc
and
xchg
ja
xchg
addr16
push
push
jns
xchg
sbb
int3
jp
dec
shrb
mov
sub
or
lock
loope
add
mov
sti
jo
inc
push
loopne
in
pop
pop
lret
sarb
es
pop
nop
mov
jb
xor
cmp
stc
pop
lea
sbb
cli
jns
insl
aad
add
cmp
es
jnp
sahf
pop
dec
fnstsw
mov
stos
cmp
pop
ja
pusha
mov
icebp
mov
loope
jnp
gs
ds
call
lds
cmp
push
add
jae
and
mov
mov
sub
shll
in
sarl
fwait
repz
mov
cmpsb
jb
fisttpl
rcrl
ret
and
sbbb
mov
adc
in
imul
stos
pop
mov
sub
leave
add
xor
les
cs
and
pop
std
movsl
in
push
pop
mov
mov
incl
xor
adc
cmp
and
dec
jne
stos
hlt
and
sub
jle
add
adc
inc
dec
and
mov
fildll
andl
data16
into
in
sbb
jns
sahf
sahf
adc
aad
jecxz
ds
fwait
push
out
mov
ss
rol
and
pop
push
sbb
mov
mov
roll
sbb
sbb
cwtl
loopne
mov
popf
mov
test
lds
or
pop
mov
sub
push
lock
outsb
push
jne
jmp
lret
cld
xchg
icebp
jno
mov
jle
js
stc
push
mov
adc
sub
add
pop
mov
mov
or
cmp
dec
sub
push
pop
add
fwait
je
movsb
dec
push
rorb
setl
test
lea
add
push
mov
test
andl
pop
fstpl
leave
es
add
dec
fcoml
test
into
sarb
testl
and
gs
xchg
mov
movsl
lods
mov
xlat
xorl
std
mov
xchg
and
ret
xor
pop
or
fadd
les
in
pop
xchg
push
mov
setne
bound
call
mov
pop
clc
cmp
xchg
fiaddl
lods
inc
mov
xchg
jo
in
and
cld
outsl
jne
addb
insl
mov
add
cmpsb
inc
sbb
add
ret
outsl
in
add
movsl
fwait
xchg
inc
sub
dec
loopne
mov
xor
sbb
dec
outsb
xor
lret
into
repz
cmc
adc
pop
xor
jl
negb
mov
testb
adc
dec
in
jbe
mov
add
pushf
mov
xchg
mov
fwait
rcll
lds
adc
notl
dec
adc
cmc
jns
pop
loop
sbb
insb
mov
mov
xlat
lds
dec
jns
std
ja
daa
movsl
jnp
bound
xor
add
jl
cmp
and
in
faddl
pop
inc
vunpcklpd
jp
stos
repnz
xchg
fsubs
fidivs
je
cmpsb
mov
hlt
mov
daa
sarl
xchg
sub
add
shr
jb
das
mov
movsb
mov
popf
loopne
fistl
int3
mov
movsl
jb
adc
test
movsb
xor
aaa
lahf
repnz
push
pop
fistpl
ja
jns
dec
lods
adc
nop
ret
repz
lods
js
icebp
repz
adc
adc
xchg
inc
push
pushf
data16
mov
jg
push
lret
cmp
popa
adc
sub
xor
jo
pop
imul
adc
std
jno
push
stc
jno
cmp
and
fs
inc
xor
jae
aad
pop
jl
ds
neg
sub
xor
jecxz
incl
pop
adc
sti
jae
push
dec
pop
iret
add
adc
pushf
jno
and
js
les
pop
xor
and
pushf
cmp
out
std
enter
stc
imul
shlb
jo
sbb
push
mov
or
mov
push
scas
shll
das
pop
fs
rcr
mov
imul
cmp
jge
xchg
adc
lret
pop
dec
xlat
cs
les
inc
sbb
lcall
mov
rolb
dec
mov
lret
mov
dec
push
pop
fcomps
mov
aas
xor
jge
jp
movsl
pusha
loopne
sarl
cmp
add
repz
cmp
pushf
sub
call
rclb
push
fimuls
mov
push
arpl
inc
jg
pushf
test
jb
insb
push
dec
push
jecxz
adc
cmp
xchg
fisttps
push
loope
pop
mov
and
dec
mov
loope
jne
int
clc
inc
mov
mov
dec
push
movsb
pop
cwtl
mov
mov
push
sbbl
push
or
fs
xchg
mov
mov
jb
push
adcb
ret
and
inc
hlt
jl
iret
pushf
icebp
inc
cld
and
stc
leave
pop
mov
inc
push
xor
rorb
inc
mov
bound
rorb
jno
add
cmpsb
movsb
xlat
sub
mov
inc
cmp
ficomps
jecxz
and
mov
inc
int3
cmc
xchg
fidivs
lock
test
sub
or
outsl
cmc
std
sub
and
test
ljmp
cmp
lods
mov
push
inc
test
inc
out
sub
jecxz
aaa
cld
push
sub
jp
test
jnp
push
into
add
cltd
pop
clc
xlat
mov
mov
cmp
xor
orl
jnp
loopne
jg
lcall
mov
bound
dec
mov
sahf
pop
cmpsl
mov
insb
in
add
popa
push
lods
push
fimuls
insb
mov
push
and
mov
adc
xchg
xchg
mov
pop
cli
shlb
stc
lea
test
add
bound
stos
mov
jmp
jnp
pop
pop
divb
hlt
shrb
in
ds
mov
clc
stos
or
js
ds
out
xchg
jmp
aad
mov
add
sbb
jp
cmpsb
cltd
aaa
nop
sarl
enter
jb
jg
and
lds
unpcklps
push
mov
ss
out
and
out
mov
scas
or
mov
lret
cltd
es
loope
js
jmp
push
shlb
aaa
push
pop
mov
xchg
outsl
scas
jbe
mov
cltd
jo
mov
cltd
idivl
sub
mov
out
out
lahf
hlt
mov
testb
dec
and
mov
mov
cltd
mov
push
out
in
push
xchg
pop
out
sbb
jno
rcrl
mov
mov
daa
jmp
cli
add
leave
mov
add
pop
xor
cmp
and
xlat
decl
ds
or
fnsave
aaa
push
nop
fsincos
pop
int3
or
or
cmp
clc
dec
jnp
std
sub
sbb
jl
cmp
clc
outsb
cmp
cmpsb
sarl
lret
repnz
inc
daa
pop
dec
xor
cs
or
fs
sub
test
adc
shll
add
aas
push
push
pop
in
cwtl
lods
inc
push
jecxz
es
pop
mov
sbb
iret
daa
adc
pop
xor
inc
mov
jno
or
je
dec
add
and
adc
repz
lods
loop
in
stc
adc
popa
or
ret
mov
nop
stos
or
ud1
aaa
out
fwait
ja
jge
rcll
pop
xchg
shlb
adc
sub
jmp
fsubrs
or
mov
adc
idiv
scas
lahf
jb
shll
xchg
push
pop
adc
and
sub
or
dec
mov
push
ja
aad
insl
mov
scas
push
push
js
into
and
sub
icebp
fsubrs
fcoms
lret
ljmp
das
jl
jno
pop
je
add
mov
cmp
pop
addr16
or
pop
inc
push
push
das
sub
hlt
mov
sbb
daa
xor
icebp
mov
pop
sub
mov
lods
leave
mov
sub
outsb
adc
push
add
xor
pop
cs
and
jp
scas
movsl
and
inc
out
xchg
add
sbb
or
sub
lcall
pop
inc
das
xor
sbb
jne
ds
sbb
lahf
sbb
jp
jg
mov
fcomp
fst
icebp
jnp
xor
jbe
jae
outsl
fbstp
lret
or
in
mov
out
addl
shlb
push
xchg
dec
clc
hlt
mov
enter
arpl
shlb
jns
mov
leave
in
jp
mov
dec
jle
push
xlat
mov
push
orl
jp
xchg
shl
inc
iret
pop
add
out
lcall
ret
ficoms
mov
sbb
stos
dec
mov
rorb
test
mov
out
jle
add
movsb
dec
cli
ret
adc
xchg
cmp
jl
movsb
ds
sbb
out
pop
mov
mov
push
clc
test
jp
xor
scas
rcll
ljmp
push
scas
daa
ds
xlat
idiv
xchg
jecxz
mov
jge
inc
into
stc
out
mov
jl
push
dec
rolb
out
andl
iret
add
dec
push
jno
xor
aaa
cli
shrb
repz
mov
pop
shrl
es
loop
es
xchg
repnz
mov
push
mov
push
adc
test
cmpsl
mov
sbb
mov
inc
inc
ret
xorb
mov
in
cli
pop
pushf
divl
insl
mov
sub
sti
sbbb
adc
dec
scas
mov
mov
addb
sbb
cld
xor
jno
rclb
insl
push
cmp
fs
jl
jbe
enter
mov
mov
and
push
rcrb
int
cmp
aam
mov
adc
ficomps
mov
jo
mov
test
mov
adc
and
stos
outsb
adc
or
popf
loop
mov
cld
testb
push
xchg
imul
sti
addb
xor
aam
imul
dec
addr16
fs
setb
das
add
scas
jecxz
stos
mov
push
stos
xchg
mov
pop
popw
mov
xor
jo
xchg
or
push
inc
enter
shrb
adc
cs
push
enter
notb
icebp
mov
cli
dec
inc
inc
stos
fisttps
insl
dec
inc
roll
into
inc
xchg
xor
mov
mov
movsb
adc
mov
out
push
ljmp
sti
adc
in
inc
inc
adc
or
push
cmp
fldenv
std
aad
lahf
into
cmp
mov
call
aas
aaa
enter
clc
sub
popf
sahf
inc
push
xlat
call
push
je
adc
dec
xor
insl
sub
ficoml
jle
adcl
sbb
in
push
xchg
lret
das
cmpsb
sti
mov
jp
ret
movsl
enter
mov
xchg
sbb
lds
jg
and
push
ret
pushf
fimull
jmp
int3
cmp
jae
push
dec
imul
fists
nop
scas
sub
dec
shll
popa
xlat
adc
shlb
pop
ret
lods
fdivl
ret
push
push
orl
out
movsb
or
imul
adc
sub
xchg
sub
fcmovu
xor
pop
pop
sbb
lret
arpl
mov
mov
dec
or
mov
sbb
cmpsb
xchg
jl
mov
xchg
aam
sbb
push
enter
sbb
pop
sub
and
mov
xchg
ret
arpl
pushf
iret
shll
pop
ja
or
sbb
jmp
daa
xor
lods
mov
add
loopne
mov
mov
pop
push
repnz
mov
cmp
sub
aaa
ret
adc
jno
in
int3
popa
jnp
insb
or
clc
pop
in
std
icebp
ss
mov
sahf
add
sub
insl
divb
cli
adc
fnstenv
xchg
ffree
data16
std
jns
repz
scas
das
xchg
xchg
mov
leave
inc
or
xchg
pop
rcrb
push
push
lods
xorl
stos
into
popa
setg
shl
nop
les
imul
mov
inc
inc
mov
inc
loop
je
xor
sbb
lds
sbb
xchg
dec
sbb
ja
cwtl
cwtl
xorb
jg
xchg
gs
dec
pop
pushw
sbb
xchg
xchg
je
addr16
xor
jbe
xor
call
fcomps
daa
mov
and
xorl
enter
pop
push
sub
mov
jg
push
push
fwait
lret
daa
insl
cmp
pushf
loop
xor
mov
pop
icebp
in
sarl
push
daa
mov
mov
mov
sub
stos
addr16
divb
repz
sbb
lods
je
adc
inc
xchg
add
jns
repnz
dec
std
or
scas
loop
mov
xchg
mov
pop
jmp
pop
sub
add
cmp
std
mov
jg
adcl
in
mov
outsl
mov
pop
push
repz
cmc
int3
aad
mov
lcall
iret
and
out
sub
mov
das
jb
mov
jo
mov
mov
std
cmp
jle
xchg
cmp
add
cwtl
adc
stos
or
mov
inc
fxch
mov
mov
cli
sbb
fcomps
add
nopl
mov
mov
cmp
loopne
jno
test
cmpsb
pushf
mov
pop
dec
test
fadds
in
test
push
lods
cmc
mov
shll
loop
fucom
repnz
rolb
out
and
sbb
gs
pop
into
mov
push
push
xchg
mov
xchg
lret
test
cltd
movsl
scas
movl
mov
add
pop
add
push
mov
fisttps
scas
add
push
and
pop
out
sub
ret
adc
ljmp
imul
pusha
adc
mov
lahf
push
push
in
push
push
das
outsb
push
scas
xchg
inc
xor
fsub
and
imul
adc
xchg
movsl
aad
mov
fistpll
lret
cmp
popf
ret
aam
dec
test
mov
orb
cli
dec
loope
mov
leave
hlt
adc
pop
xchg
out
mov
mov
in
push
sub
lahf
cltd
mov
incb
int3
push
insl
jnp
dec
stos
mov
jo
mov
rcrl
dec
fbld
mov
adc
cmp
mul
jl
call
outsl
jns
mov
mov
sbb
int3
sbb
fisttpl
cmpsb
shrl
popa
int
mov
push
daa
sub
dec
mov
add
pusha
and
jg
dec
int
fwait
hlt
dec
movsb
leave
sahf
and
testb
push
es
rol
jmp
test
jne
inc
stos
mov
sahf
dec
and
stos
loope
mov
pusha
pop
arpl
pop
pop
xlat
loopne
xor
jmp
inc
movsl
sub
xor
xor
loop
and
push
xchg
stos
pop
push
loop
lcall
push
in
sarb
outsl
sbb
xchg
push
test
push
and
std
push
or
repz
xchg
and
mov
movsl
pushf
xchg
testb
xor
sub
psllw
or
shr
fwait
adc
mov
fisubrs
sahf
adc
lock
daa
aas
pop
test
mov
mov
aad
adc
push
adc
jo
lods
inc
out
dec
sbb
insl
into
sub
sbb
dec
pop
lods
lcall
xchg
cld
sahf
dec
outsb
sahf
and
out
insb
repz
rorb
dec
mov
out
cld
sbb
cmp
xor
nop
and
pop
adc
jmp
xor
add
pop
and
mov
fcomip
cmp
or
xor
mov
push
push
jecxz
push
push
cmp
scas
sub
ror
outsb
rclb
pop
push
pop
faddl
cmp
popa
addr16
int3
sarl
arpl
pop
cwtl
adc
data16
or
pop
mov
jmp
mov
push
mov
divl
mov
fwait
mov
shrl
pop
dec
std
push
fs
and
pop
xchg
das
outsb
jge
mov
cltd
xor
mov
xrelease
sub
jo
imul
in
fistpll
dec
xchg
and
adc
adcb
and
xchg
push
out
rorl
leave
and
pop
mov
mov
push
into
test
xchg
mov
push
shll
xchg
push
pop
ss
mov
pusha
addb
cmp
lock
fists
fnstenv
adc
in
push
fadd
pusha
inc
fs
inc
mov
add
mov
or
rcrb
rcll
mov
fistl
mov
jbe
pop
add
push
sar
pop
jb
imul
jg
pop
xor
sbb
pop
into
push
rcrl
lds
vpsadbw
fadds
pop
mov
int3
enter
and
xchg
sbb
sbbb
inc
sarb
daa
mov
subl
mov
pop
scas
mov
mov
mov
jbe
fldenv
sub
sbb
push
cmc
std
add
xor
js
pop
add
adc
dec
insb
cmc
sahf
lods
cld
std
xchg
rclb
cmp
imul
mov
xchg
jne
adc
stc
repnz
lret
jb
jns
dec
movsl
jp
push
popf
cli
cmp
mov
jge
jle
jg
iret
ficoml
rorb
dec
mov
repz
mov
out
gs
push
loopne
push
icebp
mov
mov
repnz
ljmp
inc
cmp
cmp
and
add
adc
jb
adc
daa
test
inc
test
jo
adc
cmpl
push
sbb
sti
imul
pushl
pop
sti
xchg
movsb
jb
xchg
push
push
pushf
ret
mov
jo
js
js
and
lret
pusha
outsl
sar
insb
cli
inc
and
ja
shlb
les
jp
xor
testl
dec
mov
stc
out
inc
jne
or
nop
scas
aas
mov
cs
pop
hlt
hlt
fisubs
push
aad
mov
adc
ret
jo
ret
xchg
ds
jp
orb
divl
and
out
sahf
arpl
pop
mov
jg
cmp
and
scas
jg
adc
xor
insb
pop
das
xor
pop
test
lahf
cwtl
lcall
int3
cmp
aad
mov
cmp
enter
or
xlat
push
pop
fistpll
pop
lret
mov
fst
insl
imul
jo
push
mov
mov
shl
fcom
mov
rcrb
out
xchg
jo
cs
xor
mov
bound
push
movsl
addr16
aas
sub
add
xor
inc
lahf
lahf
add
push
lcall
push
mov
mov
pop
fsub
and
xchg
int
leave
loope
mov
fdivr
push
sbb
fwait
gs
xor
nop
jge
jae
pushf
dec
mov
sub
jmp
pusha
sbb
ljmp
mov
enter
sbb
add
dec
sub
xor
std
mov
int
shll
inc
xor
sub
xchg
xchg
popf
pop
sbb
add
insb
pop
xchg
lahf
inc
xor
pusha
adc
aaa
stos
and
add
jno
mov
dec
fildl
mov
sbb
sub
clc
pop
mov
cmp
std
test
xor
pusha
filds
sti
sub
inc
mov
mov
mov
push
imul
movsl
push
sub
shlb
jge
es
arpl
sarl
loop
imul
fcompl
push
nop
or
sbb
push
push
hlt
rcr
add
pslld
fsubrs
enter
adc
les
adc
cltd
or
cwtl
stos
sub
and
inc
inc
lret
mov
mov
das
mov
scas
cmp
jge
neg
and
lret
sbb
xchg
cmpl
mov
xor
jae
dec
or
mov
mov
aad
scas
jo
ja
mov
rolb
test
push
in
mov
std
enter
lret
jge
add
andl
rol
and
cmp
push
aas
and
push
cmp
mov
jb
xor
aaa
mov
push
popa
cmp
mov
xchg
rcl
in
cmpsl
lods
and
mov
push
cmpsb
stos
sub
subb
popa
push
jnp
pushf
fs
sbb
rorb
sahf
add
dec
add
push
aam
repnz
cmp
sbb
ljmp
imul
or
sub
and
xchg
fs
leave
inc
adc
dec
sbb
rorb
nop
xchg
xchg
sub
jg
les
leave
pop
lods
sub
mov
into
dec
xlat
adcb
fdivs
in
fsubr
sbb
mov
hlt
das
ljmp
jno
inc
int3
mov
sub
shrl
adc
add
mov
xor
mov
xlat
xorb
pop
and
pushf
mov
push
mov
fimuls
jmp
mov
sahf
xor
ja
in
inc
pusha
inc
cmpsl
cli
xchg
mov
mov
add
cmp
movsb
fcmovnbe
divl
testb
mov
pop
or
shlb
les
lea
adc
jns
rolb
cwtl
push
cmp
mov
inc
jnp
ja
sbb
dec
sti
push
jo
decb
sbb
into
add
cmpsl
ret
lret
sbb
lds
add
and
cmpsl
in
adc
and
add
filds
mov
fdivp
push
push
mov
jb
xorl
shll
mov
xor
loopne
mov
lea
and
cltd
jae
outsl
or
nop
inc
je
sub
ljmp
mov
cmpb
data16
cld
lret
inc
jo
sub
je
inc
fs
push
pop
pop
jbe
test
repnz
arpl
sub
fmull
adc
dec
add
lret
sbb
or
imul
cld
das
jno
push
adc
jo
mov
subl
lcall
movsl
loopne
aaa
adc
cli
sahf
pop
jle
inc
inc
cmpb
dec
test
add
mov
fisubs
enter
pop
and
sbb
or
shrb
push
clc
lods
pop
mov
inc
lret
and
repz
jo
shlb
loopne
fistpl
xchg
mov
mov
sub
loopne
xchg
dec
jns
push
and
push
cmp
lock
add
and
and
push
add
int
out
insb
lds
jge
fnstcw
pushf
xor
fnstenv
add
xchg
loop
loop
cwtl
and
push
outsb
cmc
outsb
push
scas
xor
xchg
fimuls
mov
pop
mov
push
adc
cmc
scas
leave
icebp
lahf
jnp
adc
andb
inc
or
cmp
pusha
pop
fildll
lods
int
in
dec
movsb
or
jb
mov
into
cli
sub
fwait
cs
sbb
jb
lock
test
inc
jns
clc
push
mov
mov
dec
mov
fistpl
pop
adc
mov
lods
fcoms
mov
mov
dec
mov
in
pop
mov
hlt
xor
adc
pop
pop
xchg
or
cmp
negb
nop
jp
xchg
pop
aas
frstor
jecxz
cs
out
lret
loop
ret
je
jnp
sbb
pop
jle
lea
xchg
push
xor
pop
jb
xor
xor
sub
dec
pop
sub
jmp
push
insb
xchg
and
or
loopne
data16
push
pop
sbb
das
push
xchg
sbb
and
ror
sub
jmp
in
insb
adc
loop
mov
push
outsb
and
divl
mov
int3
fbstp
cwtl
sbb
pusha
daa
push
xor
sub
fcomps
or
dec
mov
mov
mov
cmc
out
lods
les
sbb
sbb
sub
cli
cmp
push
fwait
sub
pop
pop
hlt
sub
ja
loope
xchg
stos
aad
int
xchg
and
out
mov
rorb
push
popf
inc
cld
sahf
or
lret
adc
xchg
js
insb
jno
lret
shlb
imull
lahf
insb
sbb
sub
jb
rcrl
push
pop
jl
clc
or
xor
mov
lcall
imul
mov
loop
pop
ret
das
fcompl
enter
loop
in
or
jmp
sbb
mov
inc
push
ja
ret
fidivs
xchg
sub
nop
leave
xor
jns
ret
fcmovnu
cmc
andb
and
mov
repz
mov
enter
sbb
adc
push
jns
call
jecxz
and
mov
inc
adc
inc
roll
adc
mov
or
rorb
and
add
hlt
dec
fildl
bound
arpl
in
pop
jg
popa
inc
sahf
negb
mov
or
shll
pop
in
iret
cltd
in
jmp
inc
hlt
shr
nop
jmp
add
and
push
mov
inc
sbb
cmp
jne
stos
loopne
in
test
jbe
adc
mov
pusha
and
sahf
cmc
push
movsb
push
ljmp
mov
fisttpll
pop
cld
ja
jge
loope
fcmovne
daa
mov
divl
push
cmp
pusha
js
cmpsl
jp
dec
adc
mov
push
inc
inc
nop
mov
mov
out
and
xor
jg
aam
cmpsb
push
push
mov
dec
add
mov
addl
ja
inc
std
leave
sub
cmpsb
mov
jb
pushf
stos
adc
jecxz
jle
jnp
pop
mov
or
xor
sbb
mov
rcrb
iret
push
push
jo
inc
rol
in
lock
stc
mov
popf
insl
fs
adc
leave
cmc
scas
fadds
mov
ja
nop
test
sti
mov
rclb
mov
inc
push
imul
xor
and
and
push
pop
xor
mov
mov
hlt
mov
dec
mov
push
fs
push
test
and
scas
sahf
repz
sbb
imul
mov
int
add
iret
pop
inc
sub
sbb
xlat
inc
pop
dec
add
add
push
ja
aad
sarb
mulb
mov
pop
jp
cvtdq2ps
dec
push
push
xor
inc
and
lea
push
mov
in
inc
dec
lea
mov
leave
popf
lahf
out
pop
mov
mov
xor
jecxz
xchg
shl
pusha
lods
add
aam
call
push
jno
mov
negl
icebp
scas
pop
push
add
and
mov
xlat
bound
push
sbb
jle
lret
jp
fwait
sub
scas
cmp
imul
mov
loopne
stos
add
add
aaa
arpl
add
push
inc
loopne
scas
jb
mov
or
insb
dec
adc
repz
movsl
popf
aas
push
inc
roll
in
cmp
in
je
inc
and
jg
int
sahf
pop
cmp
inc
xor
push
scas
sub
xchg
lods
scas
push
or
fstl
sbb
add
dec
inc
jo
out
ljmp
pop
lods
test
dec
push
roll
jnp
push
test
call
cltd
imul
push
xor
aaa
jmp
push
btr
xor
inc
cld
imul
iret
fcmovb
sbb
test
in
scas
cwtl
repz
inc
mov
pop
xchg
sbb
add
negl
insl
popf
sbb
stos
movsb
das
fisubs
mov
insb
push
dec
testl
adc
ret
xor
pop
push
adc
pop
inc
inc
mov
in
ret
movsl
fiadds
xchg
stos
jae
hlt
xor
jmp
imul
pop
pop
xor
movsl
cwtl
lret
adc
lahf
in
imul
xlat
sub
scas
inc
mov
jecxz
inc
into
adc
int
push
push
inc
insb
or
dec
adc
std
and
cmp
out
mov
adc
das
clc
sti
movsl
insl
add
xor
call
test
dec
xor
mov
sbb
xor
sbb
xadd
outsb
sbb
inc
cmp
inc
fsubrp
movsb
pop
push
nop
inc
push
add
in
scas
mov
test
xchg
vpmaddubsw
add
popf
xchg
lds
mov
and
xor
jg
sub
dec
into
inc
es
insb
outsb
cmp
jo
das
xor
pop
add
or
inc
dec
fimull
bound
pop
xchg
mov
ds
aam
enter
icebp
ljmp
push
bound
rorb
or
mov
cli
dec
leave
movsl
mov
ds
and
pop
imul
cmp
dec
pop
mov
pop
cs
popl
orb
adc
jb
inc
xor
xchg
data16
dec
cmp
pop
stos
mov
cmpsb
cmc
les
adc
mov
mov
mov
jl
jp
sub
fisttpl
fwait
xchg
mov
inc
inc
call
subl
lret
filds
mov
xchg
inc
xor
rcll
jecxz
out
mov
mov
inc
daa
andl
fisttps
mov
xchg
xchg
dec
mov
lret
push
and
xchg
or
out
mov
push
cmp
lahf
xchg
jle
insb
jae
mov
jle
push
mov
or
xor
pop
movsl
out
jmp
sbb
push
jmp
xchg
mov
sub
or
xor
jne
sub
mov
arpl
push
inc
gs
pop
xor
nop
subb
cld
fidivrs
imul
push
lea
out
cmc
in
in
dec
pop
in
outsb
in
out
lret
inc
cmp
in
cmp
cmc
and
or
hlt
fstpt
jb
icebp
sahf
fidivl
fwait
xchg
cmp
shll
mov
negb
pop
jns
stc
pop
lcall
and
scas
movsb
inc
push
or
cmp
and
loope
lcall
sub
in
push
adc
lods
mov
ficomps
shll
mov
shr
int3
push
cld
mov
ja
and
mov
movsb
mov
adcb
add
shr
push
cmpsb
jno
lcall
dec
cld
inc
outsb
loop
inc
mov
xlat
sbb
and
cmp
loop
leave
test
inc
sti
adc
cmpsb
sbb
xor
and
lret
push
pop
fwait
mov
dec
inc
jmp
add
insl
xchg
xor
push
je
shll
rorl
push
loope
jle
sub
mov
and
ss
lcall
hlt
mov
rclb
xor
aaa
call
lret
xor
jne
mov
hlt
lcall
sbb
mov
xchg
rcl
inc
and
xor
fdivrl
mov
mov
sub
adc
scas
lods
pop
fdivr
push
cmpsl
andb
lds
icebp
mov
sarb
lea
mov
fdivs
bound
push
xlat
mov
rorl
or
lods
loopne
sub
popf
cld
or
loopne
mov
rorb
mov
sub
ja
push
push
and
xchg
daa
lcall
popa
lret
add
xor
fildl
inc
jns
mul
cmp
cltd
jnp
es
adc
stc
gs
cmp
push
iret
lret
arpl
push
jp
pop
jne
pop
jmp
out
xchg
stos
subb
jns
mov
xor
adc
fcmovu
inc
inc
push
popf
jg
rcl
cli
jnp
int
jmp
cmp
jge
sub
lahf
sbb
insl
push
popf
push
adc
repnz
jae
loopne
inc
jmp
cmp
arpl
lret
into
pop
lods
popa
pusha
xor
dec
in
sub
xchg
jno
cmp
push
es
jne
mov
fsubs
xor
xor
test
scas
scas
xlat
mov
sahf
push
sub
add
push
fmuls
es
aad
loope
xchg
pop
xor
adc
jmp
lret
mov
xor
jbe
or
push
sbb
xor
orb
or
push
lock
popa
cmpsb
imul
jb
push
adc
cmp
xchg
lret
inc
add
dec
cmc
pop
repnz
in
and
cmp
dec
in
push
add
xor
cmc
fs
xor
mov
add
movsl
and
cs
orb
shll
cmp
dec
aaa
cmp
out
loopne
jle
mov
out
push
xor
push
adc
mov
aaa
dec
sub
add
sub
adc
xor
xlat
push
jle
clc
ds
jmp
add
sbb
out
mov
jge
xchg
push
mov
xchg
sub
sbb
or
mov
mov
adc
push
cmc
movsl
mov
inc
lds
loopne
cmp
inc
iret
push
es
mov
sahf
dec
or
sub
cmp
dec
xlat
shrb
sbb
sti
cmp
test
jns
mov
adc
mov
aaa
adc
scas
cmp
push
rcrb
stos
adc
sub
push
pop
sub
mov
xchg
add
enter
xor
cli
sbb
cmp
inc
movb
ss
pop
xchg
push
data16
aam
addb
or
dec
sbb
roll
call
loop
mov
pushf
mov
rclb
arpl
adc
and
pop
push
daa
into
cmpsb
inc
sub
and
repz
cltd
jno
fwait
aas
int
pop
cmp
pop
out
int3
or
adc
cmpsb
out
jo
xchg
icebp
leave
or
rcrl
or
add
stos
out
jo
xor
mov
add
mov
scas
idivl
nop
mov
ljmp
pop
mov
loope
shll
push
popa
xor
jle
mov
xchg
or
lock
andb
add
mov
je
pop
outsl
adc
negb
xor
int
xor
out
cmp
pop
mov
inc
and
and
lods
cmp
mov
fldl
adc
jp
sub
outsl
or
mov
imul
pop
inc
dec
pop
jl
inc
aad
outsl
repz
pop
inc
xchg
push
jno
repnz
es
xor
scas
mov
inc
adc
lret
aaa
xorl
pop
jae
frstor
std
ja
push
or
imul
mov
inc
and
clc
jb
or
int3
lcall
rcll
inc
rorl
pusha
mov
or
mov
push
jne
cmp
add
shlb
mov
dec
in
repnz
mull
adc
or
mov
iret
scas
int3
addr16
ja
mov
xchg
rorb
shlb
je
lods
dec
dec
fdivrl
sbb
and
js
adc
or
pop
xchg
pop
dec
scas
ret
and
cmpsl
sbb
clc
lea
rclb
imul
sub
das
fisttpll
es
cmpsb
inc
or
lret
stos
pop
xchg
fstl
les
das
jo
out
push
sbb
cmp
pop
cmpb
push
idivl
jl
shrb
adc
dec
cltd
fsub
jne
inc
ret
push
mov
popf
stos
xor
add
fdivs
or
loope
lock
sbbb
ds
jmp
in
jl
mov
mov
out
push
sarb
sub
ja
sbb
mov
xchg
pop
push
jl
adcl
loop
gs
in
pop
xor
in
dec
push
add
aas
in
jb
in
insb
cmp
andl
in
sbb
pusha
and
bound
mov
js
push
jmp
loope
scas
loopne
sub
imul
sarb
sbb
insb
repnz
imul
rclb
cmp
pop
sbb
testl
dec
jnp
add
js
jns
aad
jne
inc
xchg
lods
push
pop
int3
jl
jmp
repz
lds
adc
lcall
sub
dec
adc
adc
xchg
sbb
das
decb
mov
fldcw
cs
and
shl
dec
test
mov
dec
mov
push
and
jp
or
inc
sbb
lret
and
push
out
inc
into
pop
sti
outsl
push
ljmp
cmp
dec
mov
test
enter
adc
sti
pushf
out
shll
enter
push
mov
lahf
dec
sbb
inc
sbb
sbb
xchg
sbbl
ja
cs
mov
cmp
mov
add
cmpsb
lahf
daa
mov
mov
es
jo
sub
rol
push
sub
shrb
mov
jbe
xor
add
scas
mov
jae
testb
imul
movsl
push
jl
rorl
sti
ljmp
mov
div
dec
push
enter
cmpsb
jp
xchg
in
push
mov
cld
pop
cli
lret
cmove
mov
sbb
jl
mov
popa
movsl
shrl
pop
in
cmp
test
dec
mov
add
mov
pop
dec
stos
cmp
loopne
jno
dec
lret
icebp
fdivl
fldl
or
popa
insb
push
lahf
xchg
movsb
cmpsb
jle
mov
aam
adc
lahf
test
loop
jmp
cmp
sarl
movsl
dec
dec
negl
adc
ja
xor
mov
cli
or
cmp
sti
inc
lret
pop
out
xor
mov
xchg
imulb
iret
push
mov
inc
arpl
into
and
outsb
adc
out
mov
mov
testb
cmpsl
daa
jae
daa
cltd
push
xchg
loope
or
ds
mov
cmp
adc
mov
pop
movsl
jo
popa
mov
pop
sbb
xchg
or
push
scas
aad
dec
fstpl
xchg
pop
dec
xchg
cmp
iret
and
js
mov
pop
sbb
jae
mov
jge
rol
cli
ret
repz
or
adc
adc
inc
shll
add
imul
mov
sbb
out
mov
cmpb
sahf
jmp
out
xchg
xchg
sub
aad
pop
loopne
sbbl
arpl
call
or
push
mov
xor
dec
add
out
inc
and
xchg
jp
ja
repnz
or
dec
mov
int3
dec
or
xor
sbb
std
push
lret
push
sahf
stc
sub
jb
cs
sub
rclb
scas
subb
xchg
jns
xor
pop
jle
mov
or
loope
or
mov
mov
mov
icebp
or
rolb
cmp
hlt
loope
aas
js
jnp
mov
add
add
imul
je
sbb
pushf
sbb
stc
xlat
xor
add
repnz
int3
mov
mov
cmpsl
test
dec
cmp
mov
cmp
mov
data16
dec
and
cwtl
insl
or
aad
andb
pusha
push
ja
sub
cmpsb
je
addr16
std
sar
mov
cmp
rolb
in
jg
add
icebp
mov
pop
pushf
add
mov
rcrb
or
lock
push
lock
imul
dec
arpl
cs
mov
jmp
push
cli
ljmp
dec
or
mov
push
icebp
stos
cmp
out
sarl
xchg
sbb
pop
jae
pop
or
dec
rorb
push
out
sbb
mov
aaa
addl
pop
mov
mov
sbb
jg
sbb
ss
and
xchg
adc
pop
lods
mov
add
lock
outsl
mov
lock
out
stos
push
adc
and
mov
or
xor
add
cmp
push
jmp
push
and
pop
mov
daa
mov
add
lods
inc
neg
enter
fwait
mov
xor
popf
fildll
ret
mov
filds
dec
ljmp
mov
push
pop
push
test
mov
inc
mov
outsl
mov
arpl
mov
arpl
pushf
jno
push
pop
movsl
fmull
push
in
arpl
out
cmpb
inc
fldenv
jl
fs
jp
cmp
les
mov
cmp
insl
cmp
sbb
outsl
push
jg
aad
jae
mov
shr
stos
lds
xor
and
mov
sub
ds
int3
mov
aas
shl
mov
test
dec
pop
roll
roll
out
imul
xchg
call
pop
jmp
mov
add
pop
fsubrs
add
shll
ja
loopne
xchg
jne
xchg
mov
fisubrl
push
mov
and
cmpsb
popa
ds
sahf
mov
aad
scas
sbb
or
or
sbb
push
mov
clc
popf
sbb
xchg
or
pop
pusha
xchg
icebp
dec
outsl
repz
or
add
and
fistpl
inc
mov
pop
jnp
push
lea
sbb
jg
scas
adc
push
mov
data16
jno
popa
inc
ja
jbe
mov
lods
nop
orl
pop
and
mov
ljmp
jmp
insb
add
sub
mov
dec
or
imul
mov
mov
pop
arpl
push
loop
cld
push
cmpsb
frstor
push
clc
ds
les
or
sbb
outsl
mov
stos
jl
aaa
adc
aas
aaa
lret
fsubs
and
and
cmp
sub
jo
push
xchg
arpl
xchg
sbb
fildl
or
cmpsl
xchg
mov
push
clc
xchg
push
int
jge
push
cld
das
aaa
xchg
movsb
ret
mov
adc
lahf
lahf
cmp
divl
and
sub
in
sbb
xchg
insb
in
test
cwtl
lcall
mov
inc
jle
jp
xchg
mov
xor
inc
popa
clc
adc
sbb
cltd
or
sbb
xchg
sbb
das
fsts
mov
insb
divb
dec
insl
and
pop
sbb
cmp
test
mov
popa
je
fstp
xchg
bsr
std
sub
jno
pop
add
push
fiadds
jae
incl
and
hlt
gs
fs
inc
cmpsb
sbb
cld
pushf
pusha
sbb
xor
mov
push
loopne
test
adc
enter
cld
sub
jle
mov
cmp
and
mov
je
cwtl
in
add
push
int3
test
lret
push
dec
test
mov
jmp
cmp
sbb
inc
fstpt
fistpll
int
cmpsb
ret
bound
test
dec
xchg
pop
dec
hlt
das
mov
lock
mov
dec
stos
add
cs
cmc
daa
xchg
stc
xor
aam
mov
iret
jmp
aas
movsl
xchg
mov
and
stos
inc
out
orl
inc
push
xor
test
jl
mov
inc
daa
call
stos
orb
into
cmc
fwait
sub
sub
outsb
sbb
adc
in
jne
ja
xor
mov
pop
stc
insb
arpl
jecxz
orb
mov
add
orl
push
and
fsub
lret
cs
fbstp
lods
test
mov
scas
adc
pop
jg
adc
cwtl
inc
ffree
or
lods
ss
repz
lods
adc
mov
inc
je
jl
dec
jne
in
and
stos
cwtl
xchg
sub
mov
aad
add
and
out
push
inc
mull
push
add
jmp
inc
mov
mov
adc
cwtl
push
or
popf
lret
jmp
or
jg
nop
enter
sub
fstps
sahf
fidivrs
mov
add
xlat
mov
rorb
js
add
xor
test
mov
fnstenv
and
popa
dec
dec
outsb
imul
call
into
int3
insb
sbb
pusha
in
mov
add
pop
or
lahf
in
mov
adc
in
mulb
repnz
orl
mov
push
test
lcall
pop
aam
xor
lahf
jb
push
sbb
xor
call
ss
js
cmpsb
sub
sub
das
or
aam
addr16
mov
insl
jo
jnp
iret
fisttpll
sub
and
inc
and
cs
clc
out
inc
sub
movsb
jns
arpl
mov
out
sahf
cmpsl
test
icebp
mov
std
ljmp
and
add
jmp
dec
inc
sbb
cs
pop
mov
mov
lcall
adc
xor
pusha
mov
enter
scas
imul
xchg
getsec
xor
mov
rclb
sti
sbb
je
hlt
iret
cs
lret
pop
loope
mov
mov
shrl
out
fwait
inc
mov
mov
ljmp
lret
mov
mov
sbb
cmp
int3
movsb
mov
add
fistps
arpl
fs
xor
inc
out
sbb
lods
pop
int
push
mov
mov
xchg
stos
lahf
sarl
imul
adc
and
pop
push
es
mov
test
xchg
cmc
mov
rorl
ss
lods
jge
push
movsb
sbb
add
stc
dec
add
xchg
or
hlt
fidivl
push
stc
mov
push
mov
cs
or
aaa
xor
xchg
sub
mov
xor
in
pop
inc
jp
into
in
cld
ds
jecxz
movsl
and
adc
test
dec
lock
add
xor
cmpsb
cld
in
aas
cmpsb
repz
roll
xchg
jno
lret
sub
or
inc
mov
jbe
mov
dec
into
stos
loop
into
inc
repz
lods
xchg
or
cmpsl
repz
push
jge
pusha
gs
push
jg
sar
test
sub
xchg
mov
sub
outsl
jecxz
xor
inc
rcrl
cs
push
xchg
mov
sti
add
sub
xlat
outsl
fwait
mov
adc
push
jmp
xchg
popa
add
cmp
sbb
imul
jne
adc
lea
jmp
lods
cli
popf
std
nop
ss
add
add
dec
stos
cmp
in
insl
jne
inc
or
mov
std
insl
fnstcw
jle
add
shll
loopne
lods
sub
sbb
mov
iret
cmpsb
ja
int
xlat
lods
rorl
add
fbld
add
out
dec
test
xchg
mov
xor
inc
int
add
mov
adc
sub
mov
sbb
arpl
jbe
inc
sahf
or
ljmp
mov
fst
pop
test
outsl
jae
std
imul
mov
sub
jl
sti
shrb
xor
pop
mov
xorb
xchg
sbb
icebp
cmp
repnz
test
mov
pop
pop
in
jbe
inc
repnz
push
fucom
push
mov
aam
sub
ljmp
inc
adc
arpl
mov
mov
cmc
cmp
or
cmp
int3
and
cwtl
cmp
lcall
push
sbb
and
xchg
rcl
jo
das
add
nop
sbb
and
xchg
mov
cmp
dec
into
les
stos
cltd
and
xchg
pop
daa
aad
pop
mov
mov
notl
xchg
jne
or
dec
iret
pop
fmuls
push
movsl
adc
popa
fistps
or
push
stos
lds
mov
sahf
dec
int
push
fwait
je
repz
mov
inc
and
push
pusha
push
jne
cltd
mov
fwait
repz
out
dec
mov
inc
dec
adc
sbb
cmp
fs
mov
mov
push
cwtl
or
les
subl
xor
icebp
fisttpl
test
jp
dec
jno
mov
push
das
adc
lds
icebp
inc
icebp
fisubrl
jne
xchg
or
ret
test
rorb
scas
add
push
inc
xchg
cltd
fidivrs
pop
pushf
std
dec
mov
add
dec
mov
lds
push
lahf
movsb
mov
xchg
push
les
xor
in
arpl
scas
cld
mov
inc
cld
pop
sahf
popf
push
into
jecxz
repnz
xor
jg
xchg
add
loope
andb
or
sub
out
mov
pushl
out
repnz
sbb
leave
stos
filds
and
mov
mov
test
into
push
dec
mov
insl
mov
mov
add
mov
cmp
scas
lcall
ljmp
sub
sbb
adc
ret
fbld
jb
xchg
cmpsl
xor
push
dec
jl
mov
dec
repz
push
shll
scas
call
xor
jg
mov
mov
cmp
gs
sub
inc
fstpl
cli
in
mov
push
into
xor
clc
movsl
loope
dec
push
xchg
or
push
mov
pop
sbb
in
adc
daa
outsl
push
loopne
add
or
loop
mov
icebp
pop
fistpll
es
add
fiadds
sub
idivb
andl
mov
push
jp
mov
jmp
jns
mov
inc
imul
push
or
xor
fiaddl
outsl
stos
sbb
in
push
adc
fists
jmp
fwait
sbb
lea
add
inc
mov
xor
xchg
cli
cli
sbb
jmp
sub
in
jge
sub
jp
aad
and
jb
jl
fimuls
or
inc
pop
fdivr
sbb
mov
lret
out
jo
cltd
or
gs
or
incb
cmp
xchg
jns
loope
fninit
adc
jp
mov
cmp
arpl
test
fbstp
dec
pop
in
adc
bound
loopne
or
inc
std
jae
in
filds
pop
jae
inc
sub
shrb
fs
addr16
push
std
push
or
xlat
pop
xor
aas
and
scas
mov
movsb
aad
scas
lcall
jns
xchg
jb
fwait
sbb
out
aad
dec
cmpb
push
or
fnstenv
inc
mov
dec
xor
xor
push
or
pop
push
mov
loop
enter
mov
add
lds
push
push
sti
sbb
leave
stc
cs
int3
in
mov
jp
mov
adc
popa
or
push
xlat
or
mov
into
popl
or
mov
cmp
jb
mov
xchg
sar
mov
scas
or
sti
cmp
pop
lea
adc
ss
push
mov
sbb
bound
pop
aad
mov
jmp
inc
xchg
ljmp
and
cmp
inc
cmp
push
pop
push
xchg
cmpsl
push
add
jbe
pop
jns
xchg
adc
lret
xor
dec
push
inc
sub
enter
test
repnz
outsb
push
xor
pextrw
dec
fdivl
rcrb
mov
push
ficoms
xchg
adc
je
scas
sub
pushl
sbb
pop
stos
push
sbb
ret
push
in
pop
jbe
and
cld
mov
jl
roll
lods
loop
add
inc
jecxz
cmpsl
sub
ret
testb
test
jle
loope
xor
jl
adc
dec
dec
clc
test
pop
xor
or
call
lock
push
xor
sbb
adc
jle
sub
pop
sbb
jmp
xchg
sbb
cmpsb
xchg
das
lahf
sub
mov
mov
xchg
sbb
gs
mov
pop
xchg
or
rclb
or
sbbl
int
jae
cmpsb
addr16
repz
xor
fwait
push
out
xchg
es
dec
push
push
mov
movsl
push
add
js
shl
mov
rcr
jb
pushf
aaa
jnp
fs
mov
sub
loop
jae
divb
push
mov
add
and
push
loop
rorb
es
dec
add
out
call
inc
fcompl
xor
out
xchg
scas
fisttps
xchg
pop
mov
inc
lds
mov
mov
xchg
mov
cwtl
test
dec
ret
scas
daa
stc
into
add
leave
adc
es
or
dec
inc
ret
sub
shlb
pop
flds
xlat
movnti
loope
lods
add
imul
fisubl
stos
gs
adc
cld
cmc
jb
leave
xchg
mov
fisubrs
aad
rcll
xchg
popf
mov
push
push
mov
cmp
daa
xchg
fucomp
ret
out
push
scas
out
mov
mov
das
sti
stos
add
mov
jae
and
mov
fwait
mov
mov
mov
pop
fnstsw
gs
mov
ja
mov
test
dec
jo
pop
mov
pop
fdivs
mov
push
mov
mov
aam
test
aaa
mov
test
dec
add
arpl
sub
jecxz
imul
ljmp
jge
popa
in
cmpsb
aaa
jecxz
mov
dec
fstl
ret
xchg
xor
inc
stc
imul
mov
and
or
lea
push
jecxz
adcb
in
mov
sahf
cwtl
add
roll
or
jle
pop
out
mov
dec
test
mov
pop
push
mov
inc
adc
aam
mov
mov
xchg
and
int3
in
cmp
in
xchg
insb
cmp
sti
push
or
loopne
outsl
enter
inc
or
mov
and
repnz
popa
mov
dec
movsb
test
data16
adc
mov
jecxz
push
jp
pop
ss
clc
xor
fstl
xchg
or
dec
cmp
ror
xchg
inc
or
out
jo
addr16
sbb
gs
outsb
dec
daa
scas
dec
xor
adc
jl
scas
iret
cmpsl
jle
jae
fidivrs
bound
jecxz
or
inc
push
pop
sbb
cmp
out
push
adc
sahf
add
aad
push
cs
cld
add
subb
sbb
dec
pop
cmpsb
jne
cmp
sub
mov
and
daa
out
xor
les
in
int3
push
add
pop
popf
jmp
adcb
insl
xor
icebp
push
ljmp
notb
push
insb
xor
mov
inc
adc
cltd
test
push
push
add
lret
push
xor
inc
arpl
iret
data16
cmp
cs
dec
mov
int3
push
cmp
cmp
add
xor
loopne
push
mov
cmp
mov
add
and
add
mov
dec
push
arpl
or
test
jbe
loopne
out
cmp
dec
pusha
jne
adc
mov
in
push
ret
sbb
push
mov
test
imul
pop
in
or
mov
dec
ret
push
mov
sahf
and
mov
mov
fucom
mov
xchg
call
lods
in
sub
repz
das
clc
dec
xchg
xchg
insl
mov
xor
pop
rclb
jmp
jge
jns
test
push
imul
xor
push
movsb
fistpl
push
and
and
aad
gs
aad
pop
je
xchg
xlat
add
sbb
sub
inc
pushf
jb
mov
out
push
mov
adc
and
stc
ret
fistps
sbb
dec
mov
push
jmp
outsb
pop
jno
mov
push
lock
pusha
inc
dec
fsubrs
xchg
pop
icebp
xchg
and
loopne
les
addr16
sub
dec
popa
loope
jmp
les
jae
add
pop
imul
push
ljmp
ljmp
or
pop
xlat
test
inc
sbb
mov
jnp
outsb
fisttpll
or
jecxz
mov
jne
mov
pop
in
lahf
lea
fnstcw
cmpsl
fdivrl
push
pop
icebp
gs
fistpll
cmpsb
cmpsl
ret
gs
and
cwtl
and
fisubs
out
jns
inc
or
xor
adcb
notb
stos
movsl
fisubrs
hlt
inc
push
or
and
jl
jae
inc
mov
mov
addr16
cld
andb
inc
out
jl
xchg
mov
mov
test
jle
arpl
loope
cmc
or
lahf
add
cld
repnz
xor
mov
outsl
cmp
out
mov
jg
push
lret
mov
mov
aad
sbb
mov
cmpsl
addr16
ss
sarl
aam
pusha
push
imul
xchg
xchg
ret
lods
sub
pop
mov
daa
mov
in
mov
outsl
imul
in
aas
sbb
shrb
and
dec
pop
jg
ficoms
ss
ret
push
aam
mov
add
mov
js
jle
dec
imul
jg
lods
test
into
cmpsb
mov
loop
aaa
pushf
repz
icebp
mov
pushf
and
movsb
ret
nop
lea
mov
pop
mov
jne
xor
xor
movsb
xchg
adc
push
pop
cmpsb
push
cmpsb
leave
mov
test
pushf
ss
sahf
testl
fwait
adc
repnz
mov
adc
mov
aam
cltd
push
insb
cmp
or
mov
daa
movsb
push
add
stos
pop
test
cmp
scas
stc
xchg
lcall
add
lahf
mov
push
fiadds
mov
fisttpl
inc
add
xor
pop
push
stos
or
icebp
inc
dec
jbe
sub
xor
sahf
mov
mov
and
mov
dec
lods
cmp
daa
jl
add
inc
test
xor
cmc
lret
pop
cs
sbb
js
xlat
mov
pop
add
inc
or
imul
test
xor
fsubrp
pop
sub
push
je
lods
sub
xor
add
test
sub
and
imul
aaa
pop
inc
shlb
sbb
adc
pop
jb
test
cmpsl
pop
movsb
sub
dec
mov
fcmovnbe
cmpl
arpl
shr
aam
pop
pop
loope
aam
in
imul
cmc
adc
lahf
or
movsl
and
xor
xchg
mov
frstor
test
mov
data16
aad
cltd
jmp
fmuls
mov
fdivrs
out
rcll
pop
jnp
push
out
mov
xchg
loope
adc
into
mov
loopne
fsubr
dec
std
ret
fldl
add
call
sbb
dec
mov
in
add
pop
arpl
xchg
xchg
dec
push
mov
adc
out
lcall
add
enter
rcr
xchg
pop
test
ficompl
in
adc
or
mov
push
and
jo
sub
aaa
notb
jbe
aam
jbe
out
add
dec
cmpsb
fld
xor
sub
pop
aas
test
mov
loopne
pop
mov
xor
mov
ret
roll
jne
mov
xchg
mov
add
dec
adc
into
mov
cld
lahf
jge
out
cmc
int3
mov
cli
jo
pop
or
mov
xchg
or
mov
pushf
mov
out
sahf
mov
aad
inc
cmp
jb
jp
aam
imul
cs
mov
int
mov
dec
test
xor
iret
lods
std
in
sub
dec
int
movsl
cli
sub
imul
shl
or
dec
loope
mov
xchg
inc
mov
inc
cmp
mov
lea
mov
or
cmp
inc
cmpsl
add
inc
mov
popf
int3
push
xchg
push
ror
outsb
int3
push
adc
mov
push
popf
cld
jl
lods
in
ja
sar
inc
add
sbb
enter
jg
dec
gs
pop
jno
std
sahf
jo
adc
lods
shr
sub
cld
testb
jge
mov
fstpt
bound
adc
sbb
fscale
loopne
iret
and
pop
pop
mov
loop
nop
cmp
bswap
insb
pop
jo
mov
bound
imul
or
shrb
or
mov
adc
sub
adc
imul
arpl
add
mov
cmpsb
mov
cmpsl
std
mov
sub
push
and
mov
insb
mov
pushl
sbb
iret
test
lret
pop
repnz
ror
ret
jae
stos
pop
mov
in
xor
les
fsub
imul
mov
mov
rcrl
stos
xor
pop
sbb
inc
dec
call
pop
add
dec
loopne
inc
lret
addl
out
call
sbb
aas
sub
inc
std
add
jnp
sbb
fwait
xchg
aad
sub
inc
or
repnz
mov
cld
negb
jl
xlat
mov
xlat
sub
jp
outsl
xchg
push
es
aam
cmpsl
sbb
dec
aad
sbb
and
cli
jecxz
outsb
push
mov
popf
js
mov
cmp
xchg
and
jle
push
lods
xchg
xor
add
mov
adc
inc
gs
sub
call
movsb
mov
cmpsl
sub
lock
mov
jns
sbb
imul
out
add
je
mov
adc
and
pusha
test
lret
jmp
xchg
pop
pusha
mov
xchg
ficompl
jge
pop
xchg
aad
sbb
icebp
bound
jb
adc
mov
in
in
mov
sbb
inc
mov
arpl
dec
aam
xchg
daa
inc
bound
ret
insl
push
fldcw
lds
loop
mov
dec
mov
adc
rcrb
out
stos
jle
aad
ficompl
repz
ret
in
shlb
mov
out
pop
ja
and
push
lret
push
inc
aad
push
push
xchg
pop
out
fwait
inc
ds
pop
mov
push
or
sub
into
loope
loop
movsb
xor
data16
dec
aam
stos
jae
adc
adc
push
call
lcall
pop
sub
shlb
scas
lods
dec
mov
push
add
inc
das
mov
aaa
dec
jns
out
mov
sti
mov
stos
es
ja
cli
xchg
aaa
mov
or
aaa
and
movsb
mov
mov
pop
lods
movsl
test
and
std
int
adc
imul
cmp
push
cmp
pusha
mov
mov
mov
push
dec
add
jl
xchg
dec
insb
scas
aaa
enter
mov
and
xor
popa
test
aam
jg
and
lea
adc
popl
dec
push
cmc
cmp
in
fdivl
subb
js
fs
adc
repnz
scas
fsubl
inc
les
dec
cld
dec
dec
pop
sub
sub
aaa
fs
dec
hlt
scas
lods
push
mov
xchg
dec
insl
fsubr
pop
mov
lret
jns
push
pop
inc
cmp
sub
and
mov
adc
push
int3
and
jb
int3
xchg
xchg
xor
in
add
clc
mov
pop
xchg
mov
xlat
inc
xor
adc
clc
and
sarb
arpl
lock
pop
shll
lods
fdivl
adc
cmp
push
adc
mov
inc
shrb
jecxz
ss
fwait
jg
insb
lods
cmp
sub
mov
mov
leave
mov
mov
xchg
cmp
movsb
mov
jnp
cmp
sbb
adc
pop
loope
lock
mov
icebp
and
pop
fnstenv
das
dec
push
mov
std
add
mov
dec
mov
int
sub
lock
insl
and
pop
pop
enter
pop
mov
fs
jl
dec
add
xchg
stos
push
cmp
xlat
mov
es
negl
test
imul
mov
jge
movsb
xor
dec
loopne
lds
in
insb
mov
popa
jle
test
into
mov
push
imull
push
mov
insl
outsl
cwtl
enter
pusha
call
mov
pushf
arpl
sbb
stos
inc
std
pop
adc
sbb
xchg
es
lret
jecxz
jle
dec
shl
xor
cmpsl
and
cld
mov
mov
aad
jmp
xchg
cmp
fdivrl
icebp
pusha
cmp
test
int
daa
cltd
test
pop
jge
sub
cmpl
pop
sub
ja
lods
int
es
mov
jno
call
das
loop,pt
bswap
pop
or
fstpl
mov
std
push
and
cmp
mov
ret
outsb
movsl
sti
push
les
pop
pushf
sahf
sti
ja
jmp
in
mov
mov
push
cmc
es
sarl
push
sbb
lea
sbb
sbb
hlt
add
sbb
xchg
notb
fisttps
add
pop
or
adc
xchg
orl
shll
repz
icebp
outsb
xchg
lret
adc
outsb
and
inc
call
adc
loope
push
xchg
or
data16
repz
insl
cmc
aad
fwait
out
jb
insl
pop
mov
dec
mov
add
mov
mov
or
push
inc
pop
xchg
aas
mov
push
vpmovzxwq
enter
sahf
ljmp
sarl
sbb
jl
jne
aad
push
data16
mov
repz
pop
inc
cmp
test
les
xor
test
pop
mov
adc
xchg
pop
cld
pop
inc
sqrtps
dec
sub
bound
pop
adc
xor
add
sub
and
subb
lret
pop
mov
ja
loopne,pn
sar
mov
xchg
iret
js
aam
xor
sub
test
mov
xor
loop
dec
into
fwait
cmp
les
daa
mov
mov
sbb
and
insl
mov
sub
cmp
jbe
dec
cld
add
dec
xchg
mov
in
pop
mov
jl
push
fimuls
push
push
mov
xchg
push
movsl
insb
sbbl
and
mov
dec
lock
psadbw
add
mov
push
mov
xchg
jnp
push
lcall
popa
ret
push
jno
xor
out
xchg
fs
mov
cli
mov
popf
pop
fmull
fbstp
and
push
roll
adc
int3
push
jnp
test
cmp
lock
pushf
fwait
cmp
add
push
loope
cmp
sbb
inc
stos
jle
or
out
repz
jmp
jo
xchg
pop
sub
xchg
sbb
mov
clc
inc
mov
stos
out
iret
push
pop
shl
push
add
jecxz
int3
scas
pop
jmp
cld
lea
jl
xor
xor
sbb
in
cmp
das
add
decb
pop
xchg
jg
ljmp
sbb
xchg
xchg
and
imul
pop
aad
inc
lcall
fwait
and
pop
jecxz
out
cmp
push
pop
sbb
sbbl
in
jge
fidivs
sub
jge
dec
or
clc
mov
mov
in
das
dec
out
notl
daa
leave
jns
popf
push
xor
rcrl
sub
int
into
lahf
add
xchg
sbb
inc
push
aas
in
add
sbb
ljmp
and
aam
cmpsl
mov
and
inc
push
rcll
mov
and
jbe
mov
push
out
cmpsl
imull
insb
cmp
test
enter
js
xor
js
ret
inc
cwtl
test
shr
fs
bound
push
loop
rol
stos
mov
add
mov
ret
push
movsl
fisubrl
xorb
inc
idivl
add
push
push
or
and
pushl
cmpsb
icebp
dec
jae
push
mov
jne
sub
jmp
loope
sbbb
scas
scas
int3
jbe
bound
jge
imul
jmp
add
nop
xor
inc
push
dec
call
adc
push
ja
pushf
ljmp
xchg
sbb
add
rcrb
lcall
loope
add
xchg
lea
mov
imulb
icebp
pop
addl
push
adc
jb
mov
outsl
decb
roll
mov
inc
xor
dec
jne
pusha
pop
mov
loop
dec
lods
xchg
aas
decl
push
test
inc
fcmovu
dec
std
aam
push
lret
xlat
cmp
lods
xchg
fistl
in
lds
stos
add
pop
lock
or
hlt
fwait
insl
pop
cmpb
inc
bound
shr
stc
xor
cmp
mov
push
out
push
and
clc
pop
aam
cli
xor
ds
mov
and
sbb
iret
push
or
mov
mov
lods
add
loopne
enter
loope
imul
cmp
lods
or
adc
scas
loope
insl
or
fidivs
daa
divl
xor
dec
add
sub
movsl
lret
jp
push
and
test
cmpsl
xor
sbbb
pusha
fwait
sahf
lahf
inc
sub
dec
cltd
dec
imul
rorl
lret
mov
addr16
lret
jmp
sarb
inc
sub
inc
scas
adc
jae
lds
nop
add
push
inc
mov
movsl
xchg
gs
inc
in
imul
push
xchg
stc
cli
mov
add
testb
jae
loope
mov
fadds
je
push
std
incl
fnstenv
adc
mov
shlb
xor
sub
test
fs
es
sub
lock
push
lods
sbb
inc
jns
xor
or
xchg
lahf
sbb
or
mov
mov
sub
cmp
lret
cmp
add
cmp
jbe
cmpsl
mov
loope
iret
jne
lret
mov
dec
jmp
lahf
push
mov
fdivl
movsl
int
or
sub
lea
das
aam
xchg
sbb
adc
xchg
bound
mov
xchg
jbe
in
adcb
sbb
xchg
cmp
fnstsw
mov
jns
cmpsb
ds
mov
push
popf
sbb
mov
std
mov
fdivrl
iret
leave
adc
cmpsl
sahf
cmp
cmc
and
mov
dec
or
es
movsb
fimuls
jg
lcall
in
xchg
repz
stos
out
jmp
leave
and
std
pop
rclb
mov
out
mov
loop
push
xchg
and
shl
xchg
sub
hlt
lock
inc
adc
dec
lea
aad
fnsave
dec
xor
sbb
inc
aas
dec
loope
lods
lods
sahf
jmp
arpl
data16
sbbl
mov
adc
inc
cmpsl
xorb
mov
int
test
adc
or
out
sub
jmp
out
addr16
ret
xchg
inc
lods
ret
adc
sub
and
and
xor
jmp
pushf
dec
pusha
sbb
sub
pop
pusha
jbe
out
test
add
sub
jns
pop
mov
adc
sarb
in
push
adc
rcl
test
lds
pop
xchg
inc
xor
sbb
mov
xor
cli
cli
cli
repz
add
xor
lahf
mov
xchg
ret
sub
add
fnstcw
test
pop
push
mov
pop
sarb
daa
sbbb
mov
cmp
lea
js
xlat
dec
ja
inc
xor
xchg
inc
sub
jp
les
test
rcrb
ss
aaa
mov
lock
pop
push
fwait
xchg
push
movsb
cmp
int3
mov
jo
mov
cli
fnstsw
mov
xor
inc
cs
bnd
imulb
xor
jmp
jo
mov
fadd
dec
xor
jb
leave
push
fidivrs
popa
push
fstpl
jnp
xor
and
mov
pop
cmp
es
fwait
movsb
sahf
rorl
pop
pop
jle
std
push
jns
lcall
push
add
push
shlb
xor
fiadds
in
lods
outsl
dec
decb
pop
and
pop
cmp
fcmovnu
or
dec
xchg
jp
notl
adc
jge
shrb
mov
adc
push
jnp
outsl
loop
insl
gs
adc
mov
out
cmp
sbb
sub
outsl
mov
sbbb
pop
xchg
dec
sub
lahf
add
test
int
imul
ficomps
jbe
ret
jle
ljmp
adc
xlat
std
mov
mov
stc
popf
inc
mov
lods
movl
out
btr
call
roll
push
jno
mov
inc
mov
in
cmp
lret
outsl
and
adcl
sti
sbb
insl
jae
out
mov
dec
inc
cmp
mov
inc
and
sbb
xchg
lods
mov
leave
call
jns
jg
mov
enter
jns
rol
out
lods
rorl
mov
inc
cmp
data16
pushf
or
inc
insl
clc
fbld
adc
sbb
cli
dec
lcall
mov
mov
push
jns
sub
cmp
leavew
fcoml
hlt
ret
outsl
sbb
lds
sbb
leave
fildl
test
adc
dec
sti
cld
sahf
xchg
icebp
fs
push
out
outsl
cmp
repnz
mov
arpl
or
lea
loop
loop
push
cltd
push
rcl
divb
push
fs
and
std
pop
aad
cmpsl
cmc
lods
cmpsb
sub
xchg
mov
test
movsl
aaa
clc
arpl
sub
jmp
into
sub
pop
or
pop
mov
xchg
adcb
xor
mov
inc
js
ficoms
addl
imul
dec
fistpl
mov
adc
or
add
cwtl
gs
mov
aas
test
cmp
bnd
lods
in
aam
enter
dec
popf
add
out
cltd
mov
or
mov
mov
aaa
das
lds
out
xor
xor
xor
push
mov
sahf
xchg
cltd
mov
mov
fnsave
arpl
and
jecxz
stos
jmp
push
lcall
jl
fcomp
out
sbb
jns
shrb
mov
cmp
pop
cmp
daa
aaa
sbb
data16
aad
pusha
jge
sbb
jno
lea
mov
daa
outsb
fidivrl
int
shll
addl
fldcw
lret
dec
sbb
mov
jae
and
mov
add
jp
jle
cmp
movsb
and
cltd
loope
ds
stos
imul
mov
ficomps
pop
mov
lret
lret
inc
ljmp
adc
addb
jae
jno
loop
shrb
add
or
push
pop
mov
xchg
cmpsb
jecxz
fmull
and
xchg
xchg
repnz
insb
push
mov
pop
jle
addr16
mov
sub
inc
xchg
ja
repnz
dec
popf
rorb
and
dec
dec
pop
lahf
or
jno
mov
pushl
leave
xor
scas
pop
jns
mov
mov
jmp
pop
jb
js
call
and
fsubrs
pop
push
xchg
xchg
mov
fistps
and
pop
mov
inc
out
sub
mov
mov
mov
jns
add
lea
pop
push
xchg
scas
outsb
push
and
fstps
in
push
lods
mov
popf
out
add
inc
pop
ljmp
mov
xor
cwtl
mov
adc
clc
mov
scas
aas
into
outsl
popf
fistl
push
jecxz
cwtl
inc
test
adc
pop
pop
movsl
daa
jb
xor
bts
out
adc
add
rolb
push
xchg
xchg
xchg
push
adc
mov
in
in
ror
mov
cltd
rclb
cmp
fildll
pop
push
cmp
add
lds
mov
pop
fcmovu
add
repnz
gs
mov
xchg
insl
test
mov
enter
jne
insl
lods
loopne
adc
lret
sbb
rolb
in
imull
popa
jb
sbb
xlat
xchg
lcall
test
pop
cmp
jbe
movsb
jge
or
cmp
bound
cmp
mov
repnz
mov
je
pushf
fdiv
xchg
stos
lds
push
les
test
std
mov
mov
xor
int3
rclb
aas
adc
testb
sahf
or
outsb
mov
push
das
lcall
xor
mov
call
mov
out
mov
imul
clc
jae
mov
out
sub
mov
jns
xor
test
mov
vcvtps2dq
stos
add
mov
or
add
sbb
cmp
mov
out
dec
push
cs
pusha
jmp
rorb
les
repnz
adc
lds
mov
lea
and
or
xor
jnp
dec
das
in
add
xlat
lahf
pop
sub
mov
xor
mov
js
rcrl
fcomip
inc
push
aaa
notb
mov
stos
ljmp
push
enter
fildll
pop
xor
fcmovne
mov
push
out
xchg
aas
outsl
xchg
cmpsb
adc
mov
mov
imul
or
jmp
cmpsl
int
loope
out
leave
mov
push
push
fimull
cmc
stos
sti
les
jle
mov
dec
jge
daa
ja
mov
ficoms
inc
ja
adc
scas
pop
sub
lea
shrb
adc
je
out
ret
jl
rcrl
gs
je
aam
test
cmp
and
add
jnp
sbb
call
sbb
and
sti
inc
lret
test
sub
repnz
shrl
lods
sbb
lret
fidivl
fcomp
xchg
nop
leave
inc
inc
jne
pop
das
sbb
les
jecxz
add
addr16
fcompl
in
rcll
jae
aad
xchg
ficomps
push
loopne
in
stos
mov
call
sub
mov
cwtl
push
pusha
dec
in
test
pusha
cmovns
aas
push
fwait
cmpsl
xchg
inc
xor
inc
stc
fisttpll
mov
into
aas
lahf
clc
iret
or
cmp
dec
pop
pop
xor
pop
test
popf
stc
adc
outsl
scas
std
cld
cmpb
pop
mov
mov
ret
or
ss
je
cmp
jnp
pushl
jle
cs
cmp
xor
test
loopne
les
fs
subl
out
pusha
je
mov
lods
scas
mov
push
xlat
pop
loop
ret
dec
cmpsb
in
add
or
mov
cltd
je
cld
dec
mov
sbb
push
adc
loop
or
je
clc
loop
cmp
add
pop
and
mov
stc
lret
dec
sbb
stc
jl
lock
jle
fnstcw
cwtl
dec
pushf
popa
pop
jge
dec
and
rcl
dec
sbb
imul
push
or
sub
sub
xchg
fcomi
xchg
pinsrw
scas
or
rolb
xchg
fcoml
or
in
xor
push
in
xorb
pop
cmp
adc
and
jl
ficoms
out
and
jmp
ds
imul
ja
in
dec
push
js
loope
mov
leave
cmp
mov
cmp
jo
sbb
imull
xor
fnstsw
fstpl
dec
cmp
repz
in
add
dec
jo
cmp
pusha
jge
test
es
fcompl
cs
xchg
out
inc
sub
enter
jbe
mov
inc
or
cld
lret
in
sbb
clc
xor
dec
adc
stc
mov
fisttpl
stc
jbe
cld
lds
sbb
and
notb
into
mov
sub
dec
stc
pop
int3
add
fwait
or
mov
movsb
aam
lds
push
lret
mov
adc
dec
mov
stos
loop
mov
das
aaa
add
aas
fldcw
dec
jno
cld
lds
jo
pop
fs
push
dec
push
hlt
movsb
or
loope
push
imul
cmc
out
lock
fwait
dec
leave
ret
fnstenv
push
std
xchg
adc
inc
mov
std
pop
xchg
xlat
leave
ud0
mov
in
pop
or
sub
loope
mov
adc
stos
dec
pop
jmp
leave
mov
sbb
jge
aad
adc
xchg
dec
loope
test
push
test
insl
cli
rolb
mov
cli
inc
xchg
shl
push
or
pop
sub
mov
mov
insl
mov
dec
pushf
jg
out
mov
cltd
gs
mov
jecxz
pop
pcmpeqw
in
xchg
pop
mov
shll
xchg
sub
and
jle
lret
movsb
jns
divb
dec
insb
fldt
add
inc
shrl
sti
inc
data16
setbe
ffree
inc
lods
clc
sub
cmpsl
call
sbb
rcl
jno
push
fisttpll
dec
aam
lods
dec
cwtl
mov
cmpsb
stos
adc
push
xchg
das
jmp
mov
sbb
aad
pop
movl
mov
jns
pop
lcall
adc
xlat
test
es
out
mov
jae
rorl
sbb
or
and
pop
inc
outsb
cs
fwait
adc
sub
movsl
lds
sbb
add
test
mov
sub
ljmp
lahf
mov
add
and
push
jp
icebp
dec
lock
jle
cmpsb
push
add
icebp
rclb
sbb
mov
inc
data16
test
roll
push
vdivss
jg
lcall
addr16
mov
pop
mov
xor
dec
inc
sbb
nop
xchg
aaa
and
push
sub
fldl
lock
sahf
lcall
fdivs
shlb
push
mov
rcr
icebp
outsb
aam
jl
mov
ja
jnp
popa
loopne
and
jbe
xorl
loope
pop
mov
or
mov
inc
jns
les
xchg
les
mov
adc
jb
cmp
adc
scas
pop
sub
imul
xor
mov
rcrb
push
inc
adc
ljmp
dec
outsl
push
xor
and
adc
mov
leave
jbe
scas
jne
mov
int3
in
pop
sbb
fnsave
sub
in
addl
pop
rcll
cmp
rorb
pop
sbb
dec
ds
cmp
test
mov
cmpsb
sub
push
add
jmp
sti
pop
add
mov
adc
pushf
xchg
fisubrs
dec
sbb
loop
xchg
push
arpl
push
cs
jg
pop
fsts
loope
and
pop
mov
decw
push
imul
rol
in
xor
arpl
xor
cli
jnp
sub
mov
std
xchg
sbb
ljmp
ret
pop
sub
inc
rcrl
pop
adc
add
in
add
mov
mov
push
leave
and
mov
or
mov
add
push
cwtl
pop
jno
dec
idiv
int
add
xchg
and
lahf
addr16
add
test
subl
dec
jb
or
cmpsl
gs
xchg
xor
aas
xchg
aad
dec
add
sub
xchg
or
xchg
push
test
inc
pop
sub
push
add
stos
sbb
mov
adc
cwtl
xchg
xor
mov
add
fisubs
add
cld
iret
adc
dec
loope
outsl
or
xor
mov
push
pop
fmuls
shlb
adc
hlt
lahf
push
push
push
sbb
into
iret
test
daa
jl
jl
mov
xor
out
je
mov
call
loope
jle
or
adc
jle
mov
inc
jg
cwtl
push
lds
mov
adc
shll
in
sbb
mov
mov
jmp
jmp
inc
pop
ljmp
subl
dec
or
nop
insl
pop
sbb
sbb
test
mov
sub
dec
pushf
loopne
loopne
hlt
xor
idivl
ret
in
ljmp
cltd
add
orl
inc
sbb
mov
cmpl
cmp
sbb
enter
inc
test
push
int
mov
sarb
xchg
lods
or
stos
movsb
or
sbb
mov
imul
jae
mov
or
and
and
call
repnz
testb
stc
jno
add
popf
mov
cmp
sbb
fistpll
ret
push
cmpsl
scas
in
int3
mov
stc
or
cmp
mov
mov
sbb
lcall
or
out
data16
pop
icebp
jp
push
inc
sbb
sarb
xchg
dec
mov
insl
pop
pop
es
sbb
into
sbb
scas
xchg
cs
mov
sbb
insl
lods
sbb
arpl
mov
lret
or
push
hlt
jmp
outsl
mov
loopne
test
xor
mov
repnz
jmp
imul
add
cwtl
pop
lahf
icebp
adc
or
into
dec
faddp
imul
call
test
cmp
adc
inc
push
jne
xor
sbb
fimuls
es
les
sbb
cmp
ds
or
imul
inc
insb
fdivrs
cmpsb
mov
icebp
pop
shrb
pushl
xor
ret
cld
lahf
mov
shll
fbld
aas
fists
jecxz
ret
gs
lods
jmp
daa
mov
fnstcw
imul
xor
iret
mov
ficoml
inc
pop
jmp
addb
push
and
inc
rcrl
lret
add
out
aad
mov
inc
or
loope
pop
scas
xor
bound
push
shl
add
sub
pop
int3
jne
or
icebp
xlat
mov
or
mov
push
ret
xchg
dec
xchg
push
cwtl
pushf
push
mov
out
pop
jl
add
cld
and
cmp
lret
shl
push
enter
pop
lods
xor
cli
aas
rorb
mov
in
in
arpl
jmp
mov
inc
addr16
sbb
xchg
mov
jp
icebp
lea
dec
out
in
push
cwtl
flds
aad
sahf
cmp
fs
mov
fmuls
sbb
cs
mov
js
imulb
cld
loope
adc
xchg
jnp
aas
sti
fnsave
fnstcw
xchg
es
popa
ds
neg
imul
pop
jbe
inc
pop
jbe
sub
sbb
adc
and
ret
add
sub
cmp
cltd
sarl
sbb
sub
and
mov
cwtl
mov
jecxz
or
dec
pop
xor
in
inc
mov
xchg
lret
dec
push
adc
lods
jno
cli
ja
cmp
mov
enter
fildl
inc
mov
clc
out
dec
paddw
shl
dec
in
xor
jecxz
in
adc
mov
divl
xor
xchg
out
mov
and
dec
outsl
mov
jp
xor
jecxz
les
push
adc
mov
addb
cmpsb
lret
int3
cmp
pop
movsb
sbb
inc
xchg
add
leave
stos
xor
sub
xlat
cmc
cmp
or
or
or
push
sub
popf
jb
jno
fs
pmaxub
and
inc
or
mov
aad
out
cmpl
xchg
cmp
mov
xlat
mov
adc
aas
fistps
scas
in
adc
mov
jo
sarb
xchg
pop
movsl
clc
jnp
jnp
stos
div
ss
out
or
lods
or
leave
negl
mov
jge
jmp
imul
dec
clc
in
adc
loop
loopne
xlat
mov
fcomi
and
xchg
pop
in
mov
fwait
jne
mov
pop
xchg
mov
cwtl
mov
dec
lods
outsl
push
jge
push
popf
loope
in
jb
orb
outsb
mov
cmp
mov
pop
mov
jne
push
jae
cmp
stos
push
sub
out
shl
mov
cmp
adc
dec
xor
dec
mov
xor
sub
pop
shll
dec
or
stos
pop
and
push
in
movsl
push
das
inc
shlb
dec
sbb
in
and
jno
push
xlat
jo
sbb
mov
lret
and
mov
pop
in
shll
iret
inc
mov
push
push
out
out
pop
andl
xchg
pop
mov
loope
enter
adc
xchg
xor
daa
stos
mov
or
test
add
lret
pop
xor
aas
cmp
iret
add
xor
in
sub
xchg
and
ret
add
push
mov
movsb
or
sub
out
adc
fucomp
fidivrs
ljmp
mov
fistpl
sub
dec
popf
lea
cmp
ja
pushf
hlt
push
dec
popf
jle
xchg
mov
or
sbb
insb
add
repz
dec
sbb
movsl
imul
jnp
sbb
lret
iret
pop
jecxz
sub
int
clc
push
scas
add
or
jno
cmp
mov
fyl2xp1
movsb
std
test
xor
inc
imul
outsl
cmpsb
sbb
adcl
mov
mov
andb
aam
pusha
adc
mov
lret
cmp
popa
inc
repz
add
add
enter
aaa
jb
mov
add
lock
rolb
stc
mov
add
scas
pop
sub
sub
shrb
inc
test
dec
xor
jo
gs
mov
dec
dec
mov
rolb
dec
test
cmp
movsb
fcoml
mov
dec
ret
aad
jge
dec
adc
pop
dec
pop
push
xchg
inc
popf
aaa
mull
sub
jmp
or
or
pop
rcrl
mov
sub
sub
mov
jns
mov
mov
rcrl
mov
or
sysret
pop
jae
pop
sbb
negl
xor
jmp
fstpt
in
ficoms
xchg
iret
iret
inc
jns
int
sub
sub
loop
fdivrl
mov
rcr
daa
scas
into
daa
dec
sbb
les
icebp
cwtl
sbb
inc
push
aaa
pop
push
bnd
cmp
fnstsw
js
jbe
fiadds
xchg
test
xor
hlt
cli
imul
rcrl
adc
xchg
sub
jno
int3
mov
push
pop
xlat
inc
fdivrl
mov
mov
and
mov
add
dec
add
jno
mov
sbb
das
jbe
lea
loopne
ds
lsl
dec
test
cli
hlt
mov
cmpsb
leave
sbb
dec
xor
mov
add
pop
aas
cmp
mov
outsl
gs
stos
into
ds
arpl
sbb
pusha
xchg
cltd
jb
aam
pop
adc
jne
hlt
or
inc
cwtl
and
cli
jo
adc
xchg
mov
loope,pt
repz
add
imul
and
jbe
push
sar
clc
pop
je
push
jo
pop
add
test
mov
cmp
inc
inc
push
imul
popa
push
push
and
push
pop
xchg
jecxz
lret
dec
divl
dec
negl
lcall
xor
movsl
out
mov
pop
and
lret
add
inc
inc
shrl
aad
and
fisubs
rclb
mov
jmp
jmp
adcl
xchg
cmp
xor
inc
inc
jmp
mov
jl
orb
mov
inc
push
mov
adc
push
and
fbld
jb
in
and
pop
das
rcrb
loop
fnstenv
outsb
lds
stos
mov
push
dec
in
jle
insl
sub
jo
cmp
out
cs
ret
adc
cmp
jl
js
pop
in
xchg
mov
sub
icebp
iret
shlb
xor
and
jno
imul
negl
push
jge
cs
push
mov
mov
inc
rcrb
jb
enter
xor
outsl
repnz
movsb
imul
jp
das
or
cmp
dec
jmp
jp
xchg
lods
insb
mov
push
add
xchg
repnz
pop
inc
lret
data16
mov
xchg
out
insl
sub
pop
cmp
stos
out
mov
nop
jg
push
push
incb
aaa
fcoml
cmp
push
push
outsb
ret
fdivs
jne
outsb
jb
pusha
icebp
sbb
fcomps
mov
sbb
and
dec
insb
pop
dec
xor
sbb
es
imul
adc
or
pop
inc
inc
adc
pop
or
test
push
je
fcmovne
hlt
cmpsb
cmc
or
mov
aas
iret
out
xor
testl
dec
setne
mov
ret
add
das
ds
xchg
iret
add
into
pop
imul
sbb
or
lods
and
mov
shl
push
jno
test
imul
ljmp
xor
cmpsl
insl
xor
stos
jg
mov
xlat
pushf
mov
add
movsb
xor
scas
xchg
stc
int3
test
ja
push
mov
push
imul
xor
lods
pop
jle
cwtl
mov
pop
or
cltd
sub
mov
enter
aam
jg
inc
iret
xor
insb
add
or
pop
sbb
jecxz
fstpl
xchg
jge
out
mov
dec
sbb
ja
bound
xchg
and
mov
mov
mov
test
loop
mov
push
and
push
mov
mov
adc
jmp
mov
xchg
mov
mov
pop
push
dec
pop
mov
imul
jge
mov
int3
or
dec
shrb
adc
fldcw
push
add
mov
aaa
xor
cmc
shrl
inc
xchg
xchg
sub
pop
das
xor
imul
mov
int
iret
fucomi
and
inc
mov
call
int
movb
mov
loope
jmp
push
into
dec
xchg
push
rclb
test
jmp
lods
int
sub
insb
lock
jecxz,pn
sbb
imul
and
and
outsb
cmp
sahf
ss
mov
dec
mov
jle
cmp
sub
cmp
pop
lods
add
imul
add
mov
daa
arpl
je
sbb
xchg
ds
aam
mov
out
lock
imul
add
insl
push
xor
mov
xor
shrl
inc
rorb
push
push
inc
lods
pop
aam
adc
imul
xchg
loopne
jb
add
in
push
sahf
mov
stos
int
popa
stos
xchg
fwait
lret
inc
loopne
mov
pop
mov
or
jb
or
and
xchg
sti
xchg
jp
mov
sti
dec
pop
jle
jmp
lock
idivl
cmp
sub
insb
insl
in
inc
sarl
arpl
stc
addr16
std
int
inc
jns
insl
lock
arpl
jp
add
sbb
sub
stos
inc
push
call
std
test
xor
xchg
nop
psllq
jne
sub
jmp
andb
pop
xor
movsb
fistps
mov
jbe
fs
hlt
test
in
das
or
push
mov
inc
mov
sub
lahf
cmp
in
lods
test
pop
pop
xlat
jp
xor
lock
sub
or
cmp
lahf
out
and
in
add
sahf
dec
push
adc
sub
mov
jp
ja
das
push
out
mov
push
rolb
or
or
mov
fldt
pop
mov
inc
shrb
push
scas
testl
mov
push
jl
popa
outsl
mov
cmp
mov
xchg
int3
mov
and
movsl
imul
inc
adc
pmulhw
cltd
adc
popa
pop
jmp
in
adc
pop
popa
ljmp
jecxz
mov
in
inc
xchg
or
ljmp
dec
sbb
jne
or
cmpsl
in
pop
repnz
adcl
stos
test
stos
add
cltd
push
cli
xor
decl
lods
push
repnz
add
iret
out
shrb
in
add
xchg
cwtl
sahf
jns
bound
cmpsb
dec
pop
lret
arpl
insl
jo
jne
mov
gs
aam
jecxz
or
pop
int
in
ds
lcall
scas
jns
fsts
lahf
add
inc
addr16
cmpps
loopne
movsb
mov
das
and
sub
lret
out
dec
push
loop
ds
cmp
and
jno
mov
mov
icebp
sahf
rolb
hlt
xlat
or
xchg
shll
xchg
add
fnstenv
jns
in
mov
xchg
adc
loopne
pusha
fimuls
test
pandn
add
out
lret
outsl
sarl
testl
nop
call
mull
adc
es
rcll
xchg
xchg
jbe
xchg
pop
insb
cmp
xchg
sbb
ja
arpl
les
pop
and
addb
xlat
sub
and
jecxz
inc
idivl
scas
sti
aam
sub
mov
shrb
dec
mov
incb
dec
dec
jecxz
xchg
outsb
mov
dec
loope
mov
mov
in
aaa
fiadds
and
pop
dec
and
jge
bound
repnz
and
or
inc
push
imull
outsb
push
fsubl
add
mov
pop
dec
xchg
xlat
fldenv
mov
leave
stos
mov
pop
rclb
pushf
stos
inc
js
ret
dec
in
dec
lret
mov
xchg
lds
mov
cmp
pop
hlt
sub
jb
lods
adc
mov
mov
dec
jle
sub
jmp
out
movswl
mov
xor
sti
jnp
push
jmp
dec
bound
cmp
cld
shld
js
fimull
lret
arpl
and
cltd
jne
outsl
addr16
out
xchg
xchg
fld
xchg
xor
push
js
pushf
inc
sub
xor
insl
add
adc
fldl
nop
jbe
xor
jecxz
inc
push
and
js
xchg
mov
out
mov
pop
push
dec
jno,pn
test
sti
adc
pop
push
xchg
les
out
pusha
sub
cmp
or
cmp
or
orl
cmc
icebp
mov
adc
cli
lds
ds
mov
shll
and
dec
and
sub
fidivrl
repz
lcall
je
adc
pop
loopne
fwait
imul
enter
pop
push
les
adc
je
ds
mov
ret
mov
insl
je
cmp
dec
js
gs
push
ret
dec
sub
xchg
fsubl
je
dec
ret
arpl
std
jecxz
sbbb
and
add
ss
xchg
popf
pop
xchg
cwtl
arpl
dec
lret
hlt
cmp
cli
adc
pop
ja
imul
aaa
movsl
xor
cli
mov
cmp
sbb
ds
scas
arpl
packuswb
les
pop
mov
in
insb
in
xchg
es
inc
and
pop
imul
mov
addb
jle
jg
fildl
sbb
stc
flds
rcl
pop
into
mov
and
ss
sbb
jbe
sub
sbb
and
dec
adc
jae,pt
rorb
cmp
and
xor
and
jne
push
sub
cmp
cli
clc
pop
adc
fisttps
out
push
and
lea
xor
in
fs
dec
pushf
pop
ror
inc
mov
add
loopne
inc
sub
xchg
adc
and
shlb
add
jp
js
js
mov
ret
cltd
out
ja
mov
jge
lret
sub
mov
cmp
jne
cld
and
lods
hlt
shrb
ss
or
test
mov
adc
repnz
pop
out
rcrb
sub
push
add
aam
xchg
int3
rcll
mov
ret
jp
jmp
lods
mov
jo
sbb
push
adc
movsl
ficompl
xor
jg
test
aad
push
or
sti
mov
sub
repz
icebp
mov
jae
aad
into
pop
cmp
loope
xchg
mov
fwait
push
mov
in
out
mov
aad
into
xchg
loope
pop
xchg
dec
cmpl
jmp
clc
daa
arpl
into
sub
add
stos
pusha
adc
movsb
out
jl
addr16
in
adc
popf
sbb
jg
jp
mov
aaa
sbb
bound
pop
sbb
push
and
fwait
mov
xlat
cmpsl
push
or
or
rcrb
out
aam
imul
push
inc
cmpsb
testb
sbb
mov
mov
mov
adc
pop
das
push
pop
inc
cmp
mov
pop
add
or
or
xchg
add
sbb
lcall
or
xor
mov
add
and
setl
imul
mov
les
fcomps
lret
mov
dec
or
push
add
js
mov
loope
xchg
popf
cs
rol
mul
lahf
fdivrl
xor
sub
push
xor
jg
lea
dec
stos
ret
sti
ror
pushl
mov
repz
add
int3
mov
movsb
neg
push
mov
shlb
in
add
scas
pop
and
cmc
adc
ret
icebp
scas
je
lret
and
push
push
bswap
xchg
push
and
push
enter
cmp
pop
repnz
aam
xchg
sbb
xchg
pop
jg
fdivl
popa
and
dec
popf
mov
inc
mov
pushf
xor
and
loopne
hlt
cmc
sbb
test
es
inc
cwtl
stos
adc
dec
mov
inc
pop
push
inc
inc
data16
xor
and
inc
fiadds
mov
push
push
leave
ret
sub
or
sub
lods
out
cmp
adc
lea
adc
mov
or
ja
in
ds
dec
call
cmp
jecxz
jge
aas
mov
inc
in
outsl
stc
mov
test
psadbw
lahf
repnz
daa
fstpt
xchg
test
icebp
fwait
fs
cmpsb
loop
loop
in
movsl
rcll
mov
sti
sbb
push
xor
sbb
mov
mov
jb
jno
push
add
mov
stos
xlat
jle
jge
jb
fdivs
loope
into
inc
mov
add
mov
pop
pop
ja
xor
pushf
lahf
sahf
stos
xchg
cmp
jmp
inc
xor
pop
fisttpll
mov
ret
inc
mov
add
sub
lock
sti
jo
sbb
pop
sub
fcompl
adc
sbb
and
inc
xchg
mov
push
jae
and
push
push
xchg
iret
adc
loop
lock
xchg
xlat
jecxz
repnz
dec
adc
cmpsl
daa
stos
ret
int3
mov
pop
mov
cld
xorb
adc
pop
fistpl
mov
leave
cwtl
xor
rcll
mov
sbb
dec
fadds
or
gs
pop
mul
xor
mov
push
inc
and
sbbl
pop
aam
aam
pop
mov
cld
loope
pop
test
pop
aaa
iret
leave
jp
jl
and
adc
ret
adc
sbb
xor
mov
test
xor
pop
adcl
pop
and
xor
fistl
adc
sub
outsb
popl
lcall
insl
mov
mov
xor
and
aaa
out
psubd
repnz
cmp
dec
or
lret
or
xor
mov
xor
inc
lds
leave
dec
jmp
lret
repnz
mov
ss
pusha
leave
iret
shl
push
xchg
sbb
mov
imul
jae
pusha
adc
dec
and
inc
dec
xor
mov
cli
std
orl
xlat
and
mov
jp
leave
sbb
repz
mov
add
jbe
rcr
xchg
add
rolb
sub
jnp
popf
in
outsl
bound
or
ss
fstpt
pop
insl
ds
fcompl
sbb
cwtl
adc
mov
clc
mov
stc
xchg
dec
xchg
int3
test
jb
xor
fsubl
sub
out
jmp
out
je
icebp
inc
push
pop
out
subb
std
push
and
scas
clc
push
icebp
or
inc
xchg
mov
aam
pop
dec
adc
nop
cwtl
fcomps
adc
dec
inc
mov
cmp
lds
dec
mov
sbb
or
pop
mov
push
in
xchg
pop
pop
or
ret
mov
and
outsl
cmp
aad
out
or
shll
mov
mov
fcoml
adc
mov
push
add
push
xchg
or
dec
pop
mov
jo
ljmp
sub
push
jb
call
jl
fildll
into
imul
adc
jb
mov
sbb
push
inc
shl
jecxz
xor
pop
test
or
adc
fs
mov
inc
repnz
mov
cmp
push
mov
rolb
lods
sti
add
into
das
test
loopne
lods
mov
push
mov
std
or
leave
dec
ja
ds
jnp
mov
ficoml
sbbb
pop
jl
mov
fcoms
shrb
or
inc
sub
repnz
sbb
and
and
lods
fisubrs
xchg
mov
jns
int
mov
add
or
dec
out
pusha
ret
pop
push
out
sti
mov
sub
mov
adc
jnp
and
sub
movb
aad
movsb
cmp
mov
dec
sbbl
nop
push
aas
filds
adc
rolb
pop
pop
sub
lods
cmp
xchg
push
cmp
jae
in
pushf
mov
mov
pop
sbb
sub
lret
sarl
or
imulb
jle
test
add
andl
dec
lds
jge
pop
aam
lock
fisubl
inc
jno
pop
pop
test
xchg
lcall
inc
sub
or
jne
inc
call
lret
adc
hlt
lea
dec
push
adc
jno
fsts
out
inc
in
xchg
cwtl
test
fwait
ret
jnp
cmp
call
jecxz
pop
and
lock
mov
imulb
loop
xchg
sbb
frstor
and
cmpl
or
sub
push
arpl
sub
push
sbb
cmp
loope
or
mov
jo
out
lret
push
mov
push
inc
mov
movsb
addr16
push
cmc
mov
jmp
sub
cmc
lret
stos
cmpl
push
mov
mov
mov
mov
pop
repnz
xchg
ret
mov
test
pop
pop
cmp
leave
dec
sub
cs
imull
mov
icebp
subb
sub
cmp
std
aad
or
sbb
push
int3
push
bound
mov
lods
adc
pop
sub
sbb
shll
popl
ret
fwait
call
push
and
movsl
loope
out
sub
mov
jge
iret
ret
cmp
hlt
fmuls
sub
pop
fldenv
or
cmp
icebp
fs
push
in
or
lds
mov
int
mov
sarb
or
sbb
shr
push
lods
jmp
call
in
xchg
xor
loop
pop
dec
insl
dec
cmp
xor
inc
mov
mov
jl
les
cmp
xor
mov
mov
bound
or
push
lods
jno
xor
lret
sub
mov
rolb
lea
and
and
insl
popa
sub
loopne
mov
pushl
popa
cmpsb
dec
xchg
ret
stos
adcb
subb
mov
xchg
std
loope
je
orb
iret
sarb
sbb
pop
mov
jne
out
imul
and
pop
fildl
ljmp
or
out
andl
ret
xor
in
div
mov
mov
pop
pop
fbstp
mov
add
mov
and
aas
sub
and
fdivrp
aad
aam
stos
out
test
xor
or
stos
cmp
ret
cmp
adc
call
jl
sbb
shrb
inc
loop
aaa
add
add
add
xor
xchg
pop
aaa
sbb
in
std
pop
jge
inc
xchg
xchg
add
pop
pop
inc
fnstcw
jae
xor
push
je
push
add
dec
jge
sub
aas
mov
jge
hlt
imul
pop
adc
or
negl
push
imul
loopne
sub
mov
aad
cmp
xor
test
pushl
xchg
iret
push
and
lods
sarl
jne
inc
pop
xor
xor
jne
iret
cmpsl
xchg
imul
cltd
lock
call
xchg
loop
ret
and
in
insb
lea
std
add
sub
push
sub
sub
jle
xchg
fisubrl
sbb
outsl
daa
cmp
and
out
subb
xchg
jnp
mov
arpl
jmp
xor
aam
aam
stos
pop
cmp
cld
lock
popaw
loopne
push
xchg
fidivrl
cmp
testl
jmp
aam
pop
pusha
add
fsub
pop
push
stos
fidivs
xchg
xchg
sarb
daa
xchg
notl
in
test
adc
enter
fdivs
sahf
rorb
jmp
cmp
fldcw
cmpsb
inc
mov
ljmp
lea
push
in
in
mov
sub
outsl
mov
dec
pop
pop
push
jns
rorl
adc
push
adc
cmp
ficomps
outsl
jl
mov
int3
mov
cwtl
cmp
cmp
pop
es
cli
cmp
mov
sbb
mov
xchg
sub
cwtl
iret
pop
pop
sbb
mov
push
nop
or
xchg
cmpsl
aaa
nop
iret
test
js
loope
test
jle
repz
pop
repz
mov
push
psubw
scas
int3
popa
sub
inc
nop
xor
inc
add
jo
data16
mov
in
repnz
xchg
lret
test
mov
push
stos
mov
lods
lock
shl
pop
inc
ret
aad
pop
sbb
in
xchg
roll
push
fwait
movsl
jno
jge
pusha
fdivrs
push
lods
ret
cmp
jle
test
fnstcw
pop
fwait
cwtl
inc
push
push
loop
into
in
in
idivl
dec
enter
ret
sub
sub
xchg
adc
pop
nop
mov
lret
es
push
test
pop
rol
or
pop
jl
fwait
subl
pop
fwait
loope
sahf
inc
pop
out
jle
xchg
lret
in
jmp
push
xchg
cli
jle
sbb
sbb
jo
in
add
dec
or
aad
stos
push
scas
cmc
sub
mov
lods
cmpsl
outsb
and
sbb
std
or
ljmp
inc
daa
cmp
mov
sbb
inc
aam
ss
shl
in
dec
jmp
xchg
push
pop
mov
and
cmp
das
sahf
call
jecxz
clc
scas
idiv
inc
pop
pop
sbb
push
jmp
lea
dec
mov
inc
fwait
add
and
rclb
int
xor
xlat
or
adc
loop
or
repnz
inc
add
ds
xor
adc
or
cmp
icebp
fstp
dec
mov
cmpl
xchg
fsubrs
dec
cmp
xlat
cmp
inc
test
ss
fsts
jnp
outsl
into
jecxz
mov
lahf
jmp
mov
add
add
popa
jno
orl
lods
inc
xchg
enter
inc
push
xchg
jns
sarb
mov
in
adc
lahf
mov
or
orl
inc
jl
mov
out
xor
or
jmp
pop
pusha
push
and
test
mov
dec
mov
pop
jne
or
loope
insb
jns
mov
or
mov
push
mov
ficoml
ret
inc
jae
aad
dec
xchg
ret
mov
add
clc
mov
add
enter
ja
test
jmp
repz
push
fisubrs
movsl
out
pop
popa
vpaddusb
jb
mov
imul
pop
in
dec
fidivl
pop
stos
or
jno
mov
orb
pop
fmuls
adcl
xchg
fildl
rolb
xchg
pushf
imul
or
jmp
mov
jmp
pop
add
sub
pushf
loop
jge
int3
fadds
lock
add
mov
in
mov
xchg
fstps
stos
mov
cmp
add
fiaddl
addl
pop
push
sbb
or
aad
jb
jge
int3
mov
xchg
adc
and
fadds
popf
bound
repnz
sub
rolb
pop
test
int
lahf
cli
pop
cmp
jmp
xchg
fdivrs
outsb
iret
xor
repz
outsl
arpl
or
jne
push
sbb
arpl
mov
dec
cmp
rclb
and
and
into
popf
repnz
test
mov
sub
pop
je
adc
or
sbb
and
daa
movsl
inc
push
dec
sbb
pop
imul
nop
mov
outsl
adc
pop
jb
xchg
adc
mov
add
jge
addb
mov
iret
sub
dec
addb
fstpl
mov
fbstp
sbb
bound
call
pop
stos
cmpsb
inc
sbb
inc
xor
lcall
pop
xchg
xor
lock
aam
mov
xor
push
into
and
scas
loope
adc
sub
pop
cld
into
push
sbb
push
out
cmp
test
cmp
mov
mov
mov
js
mov
xchg
pop
repnz
lret
cs
pop
adc
inc
stos
stos
adc
xor
jbe
jns
shl
xchg
or
xchg
cmp
push
xchg
leave
sbb
mov
adc
mov
imul
scas
add
pop
jmp
xchg
popf
xlat
rorl
mov
gs
cmp
cwtl
je
push
fmull
inc
lret
jge
dec
xor
and
push
xchg
and
lcall
mov
xor
or
fadd
rcrl
addb
mov
and
loopne
addr16
divl
mov
xor
inc
push
bound
scas
xchg
cwtl
lahf
cmp
xchg
push
fdiv
inc
adc
fdivrs
push
testl
adcb
adcb
cmp
orl
adc
mov
add
adc
or
leave
and
mov
jle
popa
push
pop
test
xor
xor
in
cmpsl
shlb
pop
sub
ljmp
ror
jge
lock
jae
popf
inc
push
and
push
cltd
arpl
pop
and
adc
xor
lods
adc
sub
mov
jno
movsb
popa
mov
cmpsb
or
sbb
mov
adc
pop
jecxz
and
and
cmp
mov
mov
xor
imul
shlb
xor
dec
int3
arpl
fwait
imul
xlat
dec
sbb
lret
push
cmc
cli
adc
les
add
push
in
sbb
fsubr
adc
subb
push
test
sbb
xchg
pop
xor
push
shrl
incb
daa
decb
out
jp
mov
scas
nop
insl
negl
xor
mov
sti
ljmp
fdivrl
pop
push
mov
stos
jns
adc
mov
sub
ret
mov
mov
xchg
cmp
adc
push
push
js
pusha
lea
js
jbe
mov
and
imulb
addl
fcoms
push
imul
xor
in
loope
mov
dec
aas
fidivs
repnz
and
xor
jnp
xchg
in
lret
notb
in
mov
mov
sbb
xchg
clc
jne
rcll
test
sbb
cmp
push
adc
lock
int3
mov
cmp
lods
sbb
mov
psllq
gs
jg
and
fdivr
rcrb
icebp
stos
jbe
cmc
lret
mov
aaa
les
pop
lods
out
gs
aam
mov
mov
movsb
xchg
jge
and
adc
gs
inc
dec
mov
pop
sarb
pop
mov
dec
jle
add
and
test
out
mov
xor
movb
cmp
push
addr16
rolb
push
enter
sub
or
add
push
imul
icebp
add
inc
jns
adc
int
jae
xchg
mov
in
mov
or
rol
lods
jecxz
sbb
mov
addr16
jno
fimull
or
add
jle
nop
test
in
ss
js
push
sub
out
pop
mov
mov
lods
scas
pop
xor
rol
arpl
and
or
test
loope
fdivr
mov
hlt
je
mov
inc
stos
pusha
xor
adc
adc
mov
jge
pop
hlt
and
xchg
mov
mov
jb
add
xchg
mov
xchg
adc
sub
add
dec
lahf
cmp
sub
aam
cltd
mov
pop
sub
and
pop
pop
pop
mov
push
or
add
push
gs
mov
ret
dec
push
lret
sarl
jmp
es
xchg
xlat
xchg
xor
pop
fsubrl
sti
xor
shlb
sahf
xchg
stos
dec
sub
pop
loopne,pt
cwtl
jbe
cmpsl
mov
sub
sub
and
incb
add
xchg
jg
xchg
lods
je
and
dec
or
mov
aam
push
mov
and
jecxz
inc
adc
mov
jmp
xor
xlat
cld
cmp
loop
aam
xchg
pop
in
mov
cld
aam
in
stos
jge
repz
pop
js
add
push
outsl
mov
and
dec
addr16
xchg
in
sub
fidivrs
inc
loopne
or
cwtl
add
add
lret
lock
rol
dec
xor
push
das
fmul
shl
mov
addl
lea
or
cmp
push
lods
sub
data16
mov
jp
inc
pusha
mov
scas
les
xchg
cmpsl
int3
adc
add
xchg
in
cmp
or
lahf
xchg
mov
push
mov
xchg
push
jns
mov
and
add
popa
ds
rcrl
leave
inc
pusha
mov
xchg
repnz
clc
les
fcomip
sbb
sbb
mov
setl
dec
lret
imul
or
out
inc
jge
mov
mov
mov
sub
mov
sbb
cmp
sbb
sbb
mov
ljmp
xor
xchg
push
out
sbb
repz
xchg
je
ret
inc
jmp
sub
cli
inc
insb
mov
leave
jno
jb
je
imul
aad
data16
cmp
sub
aas
pop
xlat
inc
cmp
ljmp
dec
aaa
mov
ja
je
dec
int
mov
ffree
repz
outsb
dec
in
roll
adc
sub
enter
inc
and
out
std
fwait
scas
pop
ja
std
pop
out
jl
pop
inc
movsb
sbb
dec
inc
jge
arpl
les
stc
and
js,pt
je
pushf
bound
jae
xor
sub
push
bnd
inc
les
dec
push
mov
lods
dec
dec
adc
push
int3
mov
inc
sbb
adc
xchg
js
movsb
or
mov
push
push
and
jle
xor
mov
sahf
sbb
repnz
les
add
pop
add
sbb
cwtl
lcall
lahf
in
jne
mov
sbb
gs
loop
and
or
in
std
testb
pusha
adc
rorb
sti
dec
pshufw
js
bound
inc
sub
leave
cli
mov
xchg
jp
call
mov
xchg
pusha
xchg
cwtl
sti
mov
mov
sub
add
push
fnstsw
aas
in
xor
outsl
lcall
and
and
ficompl
add
fiaddl
movl
shr
mov
aas
addr16
xchg
jnp
sub
push
mov
or
loop
aas
jbe
ret
xor
jl
leave
cltd
ret
lahf
push
pop
lock
mov
mov
inc
decb
insl
sarl
je
inc
cvtps2pi
mov
les
push
and
jae
daa
jbe
pop
scas
add
pusha
ret
jns
sub
add
sub
cli
add
push
sub
cld
push
lods
mov
add
sub
mov
add
cmp
aad
jns
cmpl
test
push
neg
mov
outsl
mov
xchg
sbb
loop
lock
cmpsb
push
add
fistpl
js
mov
sarl
call
shll
or
pushf
sub
add
in
loopne
dec
imul
call
ja
cmc
std
out
rolb
mov
cmc
cmp
dec
data16
adc
push
add
jmp
mov
fisttps
xlat
outsl
add
and
pop
mov
xor
imul
arpl
and
inc
cmpl
das
push
mov
push
fnsave
insb
mov
sub
aad
popa
or
sbbl
xchg
inc
mov
pop
aad
lea
dec
mov
jmp
lret
lds
shlb
or
sahf
int3
inc
xlat
ret
sbb
pop
mov
scas
jl
popa
hlt
ret
pop
and
pop
shll
add
out
push
daa
fistps
pushf
cwtl
clc
loopne
cmc
push
pop
rcrb
in
push
pop
sbb
dec
pop
cmp
jb
insb
dec
sti
push
repz
ss
mov
mov
hlt
loop
mov
cmp
pop
pusha
fstpt
mov
pop
insl
xlat
adc
ret
pop
cmp
pop
sarb
xor
imul
xchg
clc
bound
inc
lock
mov
adc
cmpsb
jecxz
imul
sbb
mov
test
mov
imul
into
pop
cli
cmpsl
add
aad
mov
ds
sbb
sub
jno
hlt
mov
aam
mov
addr16
das
lret
mov
xor
data16
bound
outsb
dec
mov
test
movsl
adc
push
sbb
repz
cmpsl
xchg
inc
es
in
cli
out
mov
test
xchg
mov
or
ds
mov
fdivrl
pop
dec
push
movsl
lea
cmp
jp
fistpll
mov
inc
inc
test
jae
in
mov
fdivrs
cmc
aaa
xchg
sarb
mov
shlb
push
in
fbld
ret
leave
mov
stos
xchg
cmpsb
mov
je
dec
cmp
xchg
enter
mov
cs
cs
adcl
push
push
das
mov
fldcw
and
int3
inc
mov
mov
mov
enter
push
test
mov
mov
je
mov
push
pop
outsl
lret
sbb
mov
out
cmp
out
sub
mov
cmp
xchg
or
into
xor
cltd
lcall
jge
push
std
mov
insl
cmpsl
xor
insb
jmp
sarl
sarl
cli
adc
in
cld
sbb
aaa
cwtl
test
cmpsl
sbb
jnp
dec
repz
popf
jno
mov
into
push
jbe
fisubs
jo
adc
popf
xchg
jl
xor
sbb
push
mov
xchg
mov
jne
les
jge
push
dec
imul
lahf
int3
xor
xchg
mov
inc
jne
lock
lahf
adc
sbb
and
cwtl
dec
mov
and
dec
pusha
and
call
dec
punpckhwd
repz
aaa
pop
je
xor
scas
scas
movsb
adc
fisttps
repz
loope
cwtl
movsl
inc
loope
push
pop
ljmp
pop
std
jecxz
pop
pop
loop
xor
xor
pop
jl
inc
inc
rcll
mov
int
push
add
xorl
push
cmp
dec
pop
add
dec
dec
fcmovnu
lock
imul
fildl
jmp
fwait
inc
fwait
lret
rolb
mov
cmpsb
out
jo
arpl
lea
ljmp
push
pop
mov
mov
clc
cmc
rcll
adc
sub
lcall
adc
or
inc
cmpsb
cmc
pop
xchg
add
mov
js
aaa
adc
repz
enter
arpl
lods
xchg
xorl
sbb
add
pop
and
cmc
sbb
xor
fs
arpl
jp
push
leave
add
mov
shrb
or
lds
and
fisttps
dec
xlat
stos
aad
in
xchg
sub
or
frstor
xlat
pop
mov
ja
testb
adc
mov
addl
and
xor
mov
push
mov
mov
mov
xchg
or
es
inc
pop
adc
xchg
dec
cld
in
fnstsw
pop
test
mov
xchg
loope
push
hlt
pop
in
push
push
rcrl
mov
stos
iret
into
mov
jae
les
pop
ret
pop
cmp
xlat
fcmovnb
imul
cmpsl
push
rcll
cmp
push
mov
pop
arpl
outsb
in
enter
push
clc
xchg
push
or
shr
fildll
xchg
dec
push
pusha
push
aam
pop
fmulp
xchg
cmp
jb
into
sbb
pushf
jbe
lock
sbb
sbbl
and
adc
sub
inc
cmp
inc
xchg
jge
add
in
lret
sub
test
ja
jp
lret
in
push
stos
inc
inc
repnz
gs
jp
push
ficomps
cmp
xchg
and
shll
jnp
cmp
xor
addr16
dec
fdivl
mov
mov
lea
insb
jbe
pop
inc
cmp
and
shll
inc
outsl
cmpsb
cs
test
mov
and
push
mov
cmpsb
aaa
cmpsl
and
jno
jmp
ret
mov
sbb
mov
cmp
mov
add
and
adc
cli
leave
cld
ret
int
and
inc
mov
jg
mov
or
insb
lcall
fdivl
xchg
xchg
or
or
jl
negl
test
jno
mov
dec
out
cmp
clc
inc
or
subl
adcl
aaa
je
call
lret
int
je
inc
inc
dec
ret
cmpsl
aam
mov
mov
leave
add
dec
xchg
int
xor
inc
push
mov
shlb
mov
je
sbb
roll
cmp
mov
adc
fcompl
es
dec
test
je
jle
mov
aaa
cli
sub
out
cmpl
or
std
adc
xor
cltd
lea
xchg
mov
pop
dec
stos
scas
gs
jle
mov
and
pop
xchg
sahf
jb
shll
xchg
lret
fstpt
insl
mov
rclb
sti
pop
stos
mov
fs
jmp
popf
insl
xchg
insb
cmp
xchg
push
adc
jmp
daa
xor
or
push
inc
aas
and
mov
inc
add
inc
mov
and
out
pop
int
shl
shll
insl
mov
in
test
xadd
cltd
or
in
jns
int3
outsb
and
enter
sbb
pop
aas
add
jge
mov
lret
push
cmpsb
jbe
shll
into
mov
enter
mov
fmuls
testl
lret
ljmp
and
jo
fiadds
dec
hlt
adc
xchg
jae
mov
cmp
lret
popf
dec
fldcw
stc
popa
lds
stos
push
pusha
push
sar
jno
ljmp
into
sbb
push
or
insl
inc
xor
sbb
push
test
imul
sbb
rolb
hlt
add
add
mov
dec
call
test
fmuls
adc
sbb
jl
jbe
mov
mov
jp
mov
aam
jno
shl
fistps
lock
cmc
jns
or
jno
shrb
xchg
sub
fdivrp
lret
sub
push
inc
jg
imulb
xchg
inc
pop
xorl
pop
inc
shlb
xor
push
movsl
xchg
scas
dec
mov
getsec
push
xchg
test
movsb
cmc
sub
xor
adc
fs
int
arpl
adc
xchg
mov
and
mov
add
mov
pop
andl
cmp
mov
sbb
imul
shl
xor
xor
adc
add
fs
xor
int
cmpl
ja
lret
pop
mov
stos
push
jo
cmpsl
pop
xchg
sbb
es
sbb
test
stc
enter
inc
lock
fsqrt
fimull
repz
inc
dec
inc
mov
ja
jbe
testb
in
loopne
push
dec
push
sbb
cli
inc
xor
das
popf
ja
pop
pop
icebp
jns
sbb
adc
pop
mov
and
das
and
cmpsb
mov
sub
sahf
inc
faddl
leave
shll
mov
shlb
add
test
es
stc
cmp
ss
mov
or
jbe
rol
sbb
mov
push
mov
pop
bnd
jbe
mov
lcall
mov
cmpsb
cli
and
lods
mov
cwtl
or
mov
mov
arpl
cwtl
int
push
dec
push
shl
gs
rolb
cmp
nop
jbe
adc
sbb
ficoml
pop
sbb
stc
jo
pop
and
outsb
pop
dec
xchg
cmp
push
popf
mov
fidivrs
mov
dec
mov
icebp
mov
mov
aas
jg
insl
int3
xor
cmp
outsl
xchg
add
xor
sbb
stc
mov
jne
xchg
push
in
push
and
dec
pop
mov
andl
add
mov
and
aaa
xchg
call
sub
movsb
push
leave
rclb
fisttps
mov
push
cld
push
ja
cwtl
fdivl
sub
aad
div
pushf
push
jle
ficompl
lods
stos
out
out
sbb
jp
mov
insb
push
ss
sbb
mov
or
xor
icebp
mov
pop
mov
stos
shll
xor
push
cmp
ret
or
xor
js
mov
aas
jb
rcll
mov
les
push
inc
mov
call
rolb
mov
push
pop
jbe
test
fidivrl
add
sub
stc
xchg
insl
repz
jnp
test
repz
dec
pop
daa
push
shll
sub
je
pop
lock
sbb
cmc
fstpt
dec
pop
push
stos
std
test
push
cmp
sub
dec
mov
push
mov
mov
jo
xchg
roll
pop
test
test
adc
push
clc
icebp
cmpsb
mov
fs
aas
stc
out
int3
add
mov
leave
test
adc
int3
shll
push
outsb
or
insl
dec
sub
punpckhwd
subl
push
push
pop
addr16
nop
or
popa
pusha
out
pusha
inc
hlt
fucomi
shrb
jecxz
mov
xlat
cmp
pop
aaa
inc
mov
stos
in
dec
xor
test
mov
in
pop
inc
gs
push
andl
in
popa
mov
push
xlat
mov
cltd
popf
dec
cmp
leave
fcmovnb
ret
jmp
push
mov
mov
adc
out
arpl
mov
and
cmp
jns
stc
je
mov
inc
jge
daa
lcall
jae
cmpsb
add
out
and
loopne
jne
jmp
mov
insl
shlb
sub
fsubp
xlat
lock
jg
pop
push
scas
insl
clc
xchg
shll
and
lahf
adc
inc
adc
push
fwait
std
rcl
in
mov
lods
pop
jp
mov
inc
jne
push
inc
xchg
sbb
lds
jne
inc
hlt
adc
sub
iret
mov
int
imul
ds
or
insl
pop
bound
shr
loop
dec
cmpl
rcll
xchg
xchg
mov
mov
xchg
dec
fadds
lods
inc
das
dec
xchg
popf
iret
fmull
fidivrs
shr
pushf
jg
or
out
push
idivl
call
mov
and
ljmp
jnp
sahf
cmc
sti
and
sub
xor
or
fs
pop
push
not
dec
sbb
mov
push
jl
jo
mov
pop
mov
or
int3
test
in
and
mov
popf
push
in
mov
dec
fmulp
call
jle
lret
mov
and
pop
jge
mov
int
das
pop
sar
lds
or
lds
fbstp
andb
and
jle
in
xchg
imul
mov
fwait
and
and
cld
addb
loopne
repz
stos
sub
in
xor
test
subl
sub
sbb
xor
inc
mov
out
pushf
dec
je
sbb
jle
outsl
mov
ja
cmp
test
mov
stos
addb
push
jnp
xchg
fidivrl
pushf
pop
sbb
dec
inc
lcall
xor
jge
test
dec
pop
pop
cmp
mov
or
lcall
mov
repnz
xchg
fcompl
and
or
rcll
enter
sub
xchg
fnstsw
pushf
js
dec
xchg
fwait
aad
fsubrl
into
sbb
iret
push
cmpsb
cmp
add
dec
stos
sbb
xlat
daa
sub
xchg
mov
test
js
fs
dec
dec
loop
xchg
dec
xchg
or
mov
subb
mov
add
outsl
mov
js
sbb
shll
fdivr
xor
out
fdivl
test
xchg
sub
push
mov
lds
sbb
jb
push
sahf
add
mov
int3
dec
es
xor
sbb
dec
lcall
lods
inc
sub
imul
arpl
sbb
or
xchg
int
adc
leave
mov
jge
mov
push
out
xchg
mov
xchg
lret
bound
shrb
jle
cmp
adc
sub
je
cld
mov
xchg
push
xchg
repnz
roll
and
jo
mov
add
adc
xchg
decl
fisubs
mov
hlt
aaa
jecxz
adc
fnstsw
jle
insl
push
xor
mov
jne
insb
mov
repz
dec
test
mov
sub
cmp
push
daa
inc
out
sbb
aas
aam
sub
lea
lret
inc
cmp
into
mov
fsubp
pop
sub
and
pop
roll
pushf
cli
fdiv
les
addr16
ss
sub
pop
jae
mov
cld
mov
and
pop
cmp
add
mov
or
xor
rorb
pop
mov
pop
cmp
andl
sti
mov
adc
aaa
in
push
insb
cmp
sbb
loope
xchg
testb
inc
mov
pop
movb
jb
jno
es
xchg
cmp
jo
out
pop
jno
mov
sub
lahf
mov
cmp
xchg
hlt
xor
popa
inc
push
sub
sub
dec
xchg
lock
jecxz
repnz
mov
adc
cwtl
addr16
mov
call
test
das
and
es
add
fdivs
fsubrp
repnz
jecxz
mov
into
out
cmp
inc
in
lock
cltd
jle
les
sbb
jg
in
push
jle
add
mov
sbb
outsb
sub
loopne
mov
sbb
jbe
sti
jmp
dec
out
adc
iret
pop
in
sbb
cltd
mov
pop
cwtl
gs
in
sahf
cmp
pusha
leave
adc
inc
add
ds
pop
insl
push
cmpl
test
xor
test
cmp
pop
push
jb
pushf
in
push
adcl
xchg
lret
mov
mov
ret
movsb
jae
mov
sub
das
mov
or
iret
add
movsl
pushf
sbb
andl
push
mov
inc
add
cmp
push
xlat
sbbl
scas
sub
je
in
arpl
repz
mov
sbb
inc
outsb
cwtl
push
lahf
inc
in
inc
movsb
lret
sub
notb
and
xchg
mov
cltd
lods
xorl
sbb
mov
or
and
push
fmul
bound
scas
push
xor
jmp
pop
ja
pop
insl
in
sbb
je
or
lret
inc
cli
add
dec
mov
int
mov
es
add
xchg
cmpsl
out
scas
sti
fsubl
stc
dec
mov
neg
clc
xchg
into
xor
jns
inc
jo
mov
jmp
ret
cltd
pop
dec
mov
cmpsb
out
sbb
arpl
ljmp
mov
rcrl
in
iret
cld
out
add
mov
xchg
push
adc
data16
pop
or
push
mov
out
pop
roll
flds
out
mov
add
mov
addr16
jne
pop
movsb
adc
fmuls
cltd
push
jb
jecxz
int3
add
aad
dec
inc
mov
and
imul
jne
decl
cmp
push
dec
fstps
sub
mov
and
lahf
gs
fsubs
pushf
xor
inc
mov
jle
xor
fisttps
movsl
in
loopne
add
stc
lret
xchg
mov
cltd
dec
cmpsb
das
inc
outsb
adc
jle
in
ficomps
pop
out
lret
jo
adc
ja
loopne
adc
inc
mov
xchg
add
imul
iret
jmp
sbb
scas
mov
inc
loopne
and
xchg
or
pop
imul
ja
or
and
sti
inc
shl
fistl
popa
inc
sub
add
int
aaa
jmp
rcrb
add
fdivl
test
jne
stos
dec
cmc
pushf
xor
dec
adc
pusha
incb
in
push
in
adc
xor
mov
mov
test
and
dec
mov
divb
sbb
adc
pop
xchg
mov
dec
sbb
and
icebp
or
xchg
xchg
adc
incb
stos
and
pop
mov
lret
in
int3
lret
xlat
cmpsl
mov
add
jns
shll
pusha
and
shr
ret
test
and
out
push
cmp
les
and
scas
cld
mov
adc
pushf
gs
pop
jp
inc
sub
cs
push
fnstenv
jne
bound
into
mov
aam
xchg
jns
inc
adc
int
call
inc
lea
mov
outsb
mov
push
cli
cmc
loopne
mov
out
je
cmp
cmp
call
adc
jns
push
test
ljmp
xor
fisttps
jae
pop
add
loopne
inc
jg
mov
mov
mov
push
mov
mov
sub
adc
test
mov
shll
cmp
inc
cld
inc
mov
loopne
andb
sarl
repnz
lcall
arpl
dec
lahf
mov
jmp
inc
dec
push
cmc
jp
negl
aad
mov
sbb
ret
aas
sahf
mov
shll
stos
in
ja
lods
int3
je
jno
inc
xor
filds
mov
and
add
sahf
add
mov
add
mov
stos
out
xchg
dec
notl
mov
cmp
xchg
stc
lds
cmpsl
cwtl
loop
xchg
repz
fwait
stos
out
xchg
rol
xor
insl
and
lcall
inc
xchg
sub
bound
in
imul
and
outsl
xor
bound
popa
cmpsb
stos
inc
repnz
lods
daa
and
jg
sub
mov
cmovne
leave
out
pop
loope
leave
push
jno
add
sbb
jb
cwtl
inc
test
cwtl
stos
mov
mov
jb
mov
mov
jb
dec
xchg
mov
fimuls
add
add
jbe
loopne
cmovge
out
push
jo
cmp
sbb
adc
push
lahf
in
fsubs
in
jp
fsubrp
rcrb
pop
xor
adc
jb
push
sub
push
add
or
and
repz
sbb
divb
cs
xchg
ljmp
cmpsb
jmp
mov
movsb
imul
fnsave
lods
xor
or
and
fwait
loopne
pusha
lret
sbb
fsub
pop
inc
hlt
cwtl
xchg
jnp
clc
fs
inc
rorb
mov
adc
lods
test
movsl
ja
push
push
cmp
fiaddl
inc
pop
fs
enter
mov
mov
add
dec
lock
adc
push
cmc
stos
lds
add
outsl
pop
icebp
shrb
out
jnp
lods
sub
adc
push
lcall
ljmp
mov
decb
fdivrl
std
xor
sahf
add
mov
cmc
cmp
hlt
push
popf
out
add
adc
pop
hlt
xchg
scas
nop
leave
mov
mov
push
stos
ljmp
lods
shlb
dec
cli
std
clc
or
add
inc
or
jge
sub
inc
dec
lcall
sub
dec
mov
in
es
js
out
cmp
or
sti
mov
jle
xchg
scas
repz
jnp
or
scas
rorl
jle
and
add
test
outsb
adc
icebp
int
sti
movsl
mov
mov
jno
cmp
arpl
adc
enter
push
dec
out
inc
sbb
xchg
lods
push
mov
ret
sub
mov
add
aam
imul
jo
loop
sarb
test
xchg
fstl
shlb
lret
dec
repnz
mov
scas
dec
jnp
add
dec
daa
push
shlb
mov
sub
pop
shrl
and
jmp
cltd
jae
sbb
fildl
sbb
jae
inc
push
xor
loope
lahf
std
cmp
dec
testb
inc
dec
dec
outsb
pop
sub
ret
push
sbb
outsb
cltd
or
or
bound
pusha
push
jnp
insb
test
dec
ja
ja
pop
inc
adc
pushf
add
pop
shrl
andl
dec
lea
xor
and
and
push
and
rclb
clc
push
loop
mov
pushf
cld
out
sbb
push
inc
push
dec
and
pop
mov
js
mov
ljmp
andl
std
sbb
cld
dec
mov
stos
shrl
sti
loope
mov
mov
dec
or
mov
xchg
jl
mov
lds
call
cmp
push
cmp
push
lds
std
scas
pop
dec
and
cmp
pop
bound
mov
and
ret
addl
cwtl
fcmovne
add
and
mov
xor
mov
xchg
add
outsb
pop
les
daa
aad
leave
push
loope
jp
sbb
mov
mov
jne
push
pop
idivb
fdivrp
pushf
and
aam
out
imulb
dec
jne
imul
push
sub
dec
sub
add
xchg
cmp
jbe
and
push
cmp
fimuls
inc
dec
js
jge
mov
jmp
mov
repz
mov
dec
cmp
ljmp
jecxz
mov
outsb
add
in
out
mov
imul
hlt
dec
ficompl
ficoml
ja
pop
lock
out
iret
lahf
dec
hlt
sbb
test
cmp
push
and
in
lret
inc
push
in
fsubrs
add
fsubs
dec
iret
mov
lahf
aam
xchg
popa
mov
es
sub
pushf
aam
adc
in
sbb
call
js
mov
pop
scas
es
js
mov
sbb
sbb
xor
pop
cmp
lea
mov
sti
cmp
and
aam
int
xlat
jp
mov
in
mov
push
movsl
jecxz
scas
mov
pop
loopne
mov
arpl
mov
push
fnstsw
inc
rclb
ret
push
in
and
outsl
outsb
sahf
xchg
stc
mov
xchg
add
and
push
imul
xor
mov
gs
rolb
sahf
xchg
jge,pn
int3
push
push
adc
dec
int
shlb
dec
cld
pop
aad
int3
adc
test
jno
mov
out
loopw
outsb
jge
jecxz
dec
or
test
popf
and
sub
xchg
xchg
mov
cld
stc
mov
sub
out
add
out
jle
sbb
addl
add
call
movsl
icebp
shrb
das
lret
push
out
cmc
in
jmp
and
dec
sub
or
push
push
xchg
stc
test
mov
stos
mov
pop
jmp
lret
test
pushf
sbb
xchg
jb
aas
cs
lods
negl
scas
stos
lahf
mov
fcomp
out
mov
mov
test
adc
outsb
lea
mov
lea
mov
adc
icebp
mov
inc
jmp
xlat
push
sbb
sbb
pop
add
leave
xlat
cmp
out
xor
mov
jmp
jge
or
loope
pop
push
loopne
mov
fcoms
sub
gs
insl
outsb
sub
ret
sub
cltd
mov
inc
xlat
imul
mov
mov
in
mov
xor
mov
mov
pop
jb
addr16
decl
inc
icebp
out
scas
add
adc
xchg
push
jb
adc
popl
sbb
hlt
ds
inc
adc
xor
pop
shr
and
push
push
sub
mov
push
xlat
add
testl
rcrl
outsb
movsb
jns
shrl
sarb
mov
movsb
cmpsb
outsb
xchg
xchg
and
aam
in
xor
mov
jno
icebp
jbe
popf
sbb
and
adc
jmp
pop
mov
ror
out
jecxz
das
fldt
out
insb
adc
push
decl
lea
fiadds
repnz
jg
xor
cmp
je
in
imull
pusha
push
scas
test
sub
jae
aam
mov
hlt
push
negb
dec
fnsave
xchg
icebp
in
mov
or
jg
scas
push
stos
ret
mov
and
xchg
mov
scas
pusha
es
push
mov
jnp
mov
mov
xor
sbb
jno
sbb
ljmp
add
fisubl
mov
inc
call
fsubr
jae
xor
dec
add
jbe
pop
inc
fidivl
cmp
push
int
es
mov
fcmovu
push
mov
mov
jae
jae
loopne
push
and
int
sub
push
and
in
or
sbb
sub
lret
rcrl
adc
inc
push
mov
push
cmp
fwait
sub
popf
cmp
out
ds
xchg
iret
sbb
or
xchg
in
mov
adc
rolb
and
jnp
repnz
outsl
lcall
cld
jl
addr16
cli
scas
repz
mov
push
sub
idivb
outsb
inc
lcall
inc
lods
jp
or
cmp
cmpsb
mov
adc
push
add
mov
adc
mov
xor
out
jno
in
scas
mov
sahf
sbb
pop
pop
mov
mov
dec
inc
sub
push
mull
std
sub
rcrb
fists
repnz
pusha
cmp
push
pop
imul
xchg
add
repz
movsbl
imul
in
cwtl
repnz
call
sbb
dec
test
xlat
sbb
and
xchg
insl
push
ljmp
push
pminub
in
jo
iret
mov
sbb
stc
inc
mov
pop
out
sub
fnstsw
push
les
mov
push
clc
inc
push
jecxz
cs
push
outsl
push
inc
int
or
clc
dec
inc
and
rcr
xchg
adc
loope
jno
pusha
sub
enter
cmpsl
ljmp
nop
jmp
cmp
outsl
dec
jae
in
mov
lods
lret
ss
xchg
mov
scas
or
andl
jno
or
sahf
andl
mov
xchg
idivl
push
sbb
add
lret
mov
sub
iret
mov
and
bound
andb
cmc
sbb
in
addr16
push
dec
scas
and
out
sahf
not
das
adc
loope
popf
sarl
into
movb
nop
push
add
sar
std
xor
rcll
xor
outsl
repz
js
dec
push
pop
sbb
aam
or
jecxz
mov
rorb
xor
jl
adc
popa
add
xchg
jnp
cmp
outsb
or
pop
mov
ljmp
popa
adc
mov
adcb
imul
sub
push
stc
sti
xchg
pusha
mov
mov
stc
add
sub
inc
push
jae
add
sti
dec
adc
setb
inc
sub
sub
sub
inc
fldt
mov
je
sti
aaa
add
mov
pop
sbb
jns
inc
cmp
and
inc
adc
decb
xchg
out
out
and
push
insl
cmp
ret
imul
jo
add
dec
mov
cmpsl
jae
mov
bound
jl
mov
jmp
xor
pusha
or
icebp
clc
xchg
xor
xor
pause
idivl
out
jbe
lret
push
enter
mov
lock
mov
dec
jg
stos
data16
sub
inc
push
xchg
fstpl
mov
jl
stc
adcb
jno
in
add
mov
add
aas
lods
shrl
aad
cmp
pop
jle
jmp
and
xchg
push
imul
lock
mov
icebp
dec
test
inc
push
or
cmp
scas
in
sbb
cmp
sbb
test
rcrl
out
push
lods
push
push
inc
mov
lahf
add
out
into
lods
cmpsl
mov
shl
adc
test
or
pop
movsl
scas
cs
fwait
or
sbb
test
mov
dec
jmp
sub
xor
push
mov
xchg
outsl
ss
pushf
jo
mov
mov
pushf
clc
inc
call
adc
cmp
ret
lret
xor
scas
add
hlt
fs
jmp
dec
lock
gs
lret
enter
nop
mov
xchg
cli
int3
mov
push
xchg
shll
cmp
leave
add
stos
ficompl
xor
fbstp
add
sub
ret
jns
test
out
insb
lods
loope
adc
or
add
insl
test
xor
out
pop
fiadds
inc
ds
mov
loopne
fs
aas
cltd
xor
into
cld
xor
leave
push
stc
es
push
sti
ja
add
imul
jl
mov
push
fbstp
and
cmpsl
push
xchg
std
or
shrb
mov
dec
stos
mov
xchg
inc
pop
int3
sahf
pop
push
shlb
outsl
gs
mov
shrb
lock
sub
cmp
ret
and
jbe
cmp
les
test
stc
or
stc
mov
cmp
xor
xchg
mov
sbb
cmp
inc
mov
push
lds
movsb
cld
sub
mov
xor
fbld
pop
mov
rcll
jno
mov
jns
mov
ss
test
in
pop
jge
out
add
out
cli
imul
sbb
mov
das
push
cwtl
or
out
jmp
sub
cmpsl
jbe
xor
divb
imul
push
andb
sub
pop
jns
test
mov
loop
push
aad
xor
xchg
add
add
popf
inc
jp
outsb
popf
aaa
inc
js
adc
pop
pop
movsl
in
out
push
xchg
arpl
xchg
fwait
nop
jp
pop
out
lcall
enter
ja
mov
int3
data16
or
popf
imul
push
clc
clc
std
push
repnz
cs
lcall
push
iret
mov
or
andb
mov
adc
std
nop
aas
cld
add
das
inc
pushf
lods
incl
push
aam
sub
dec
inc
mov
xor
imul
xacquire
out
or
test
test
mov
sbb
in
push
addl
sub
daa
lahf
mov
xor
push
in
sub
xlat
sbb
xchg
shll
jno
add
lea
pop
mov
xor
mov
icebp
sbb
scas
leave
mov
add
insb
xchg
push
push
mov
aam
sbb
sub
lea
pop
popf
ret
mov
dec
nop
lds
sbb
fmull
daa
mov
jge
adc
ret
loop
add
mov
xor
sub
testb
inc
adc
out
incl
test
cmpsb
cwtl
idivb
mov
pop
push
xchg
and
mov
jp
and
roll
mov
adc
lahf
rclb
jg
mov
pop
je
test
lret
insl
cmp
scas
jecxz
pop
adc
fcoms
xchg
xor
mov
mov
jno
push
jge
call
adc
iret
outsb
pop
movsb
clc
ja
cwtl
call
jbe
lods
adc
pop
es
popa
arpl
aam
and
xchg
dec
jns
shlb
std
inc
cmpl
jbe
jmp
out
int
ja
push
movsb
out
fisttpl
out
orb
stc
out
dec
cmc
xor
int
je
lcall
pop
push
scas
jmp
clc
and
pop
iret
pusha
adc
test
adc
rcrb
inc
in
xor
lods
and
mov
push
jns
addr16
sub
lods
pop
je
jbe
xchg
ljmp
xchg
inc
cwtl
adc
xor
lret
jne
scas
sbb
sub
jecxz
das
fcomps
enter
pop
or
sti
add
inc
fidivrl
ds
pop
out
sbbb
and
mov
shl
rorb
es
test
into
mov
and
jno
or
ret
orl
jp
lock
mov
cs
inc
inc
pushf
shrb
add
movsb
xchg
xchg
mov
es
repnz
ja
mov
cmp
cmp
pop
pop
xor
lret
sbb
jns
fcoms
xlat
sub
xchg
out
mov
mov
daa
push
call
mov
pop
dec
push
cmp
sub
pop
aam
push
mov
ss
je
in
or
mov
mov
imul
sub
xchg
fnsave
mov
lock
fcomps
jb
inc
lret
enter
mov
xchg
stc
scas
pop
testl
cwtl
jbe
xor
sub
mov
outsb
push
pop
add
leave
or
jae
mov
fimuls
mov
and
pop
test
xchg
inc
stos
fsubrs
call
jp
ret
push
inc
outsb
mov
mov
popf
inc
inc
dec
sti
or
sbb
out
mov
loopne
loope
cs
add
repnz
xchg
mov
es
adc
adc
or
pusha
in
out
mov
mov
dec
ds
imul
out
xchg
cmp
nop
mov
jecxz
mov
pmaddwd
test
fmull
jl
mov
loope
test
cmc
orl
pop
in
leave
bound
mov
mov
dec
or
pop
iret
hlt
adc
dec
sub
inc
mul
push
insb
cwtl
je
and
xlat
cltd
mov
fwait
clc
stos
in
jg
cmpl
nop
ret
inc
insl
ja
sbb
add
loope
in
jne
cmc
mov
stos
aaa
xchg
dec
fldl
push
stos
repz
cltd
test
iret
add
test
xlat
loope
mov
outsl
push
int
movsl
push
fnsave
jp
pusha
daa
shr
rorl
push
and
cli
scas
mov
call
xchg
ds
cmp
icebp
scas
sub
cli
push
inc
pusha
and
dec
push
pop
sub
inc
or
aad
fldt
loope
xchg
and
cmp
jecxz
loop
ja
add
adc
cmp
test
sub
incb
pop
fldt
sti
xor
adc
sub
jle
popa
xor
xchg
imul
fs
out
cltd
lcall
xchg
es
jb
mov
pop
test
pop
xchg
xor
shrl
mov
and
dec
push
out
lods
rcrl
or
lods
imul
xor
lret
xchg
adc
or
xchg
in
repnz
or
test
movsl
enter
inc
pop
das
adc
sub
mov
testl
mov
test
data16
into
pop
mov
and
jne
stos
push
or
loopne
ds
xchg
lahf
xor
idivl
pop
roll
ja
mov
imul
adc
lods
adc
sub
int
jo
in
sbb
mov
mov
mov
xor
push
leave
aam
fwait
push
stc
dec
out
out
or
mov
sbb
mov
testb
ret
mov
cmpl
pop
xor
and
pusha
dec
mov
insb
add
in
adcb
add
repz
and
mov
push
pushw
jb
sbb
xor
cmp
cmp
lret
mov
pop
sbb
cmc
andl
cmp
push
adc
ljmp
aad
sbb
mov
cmp
lret
xlat
pop
rolb
pop
movsb
movsl
lret
loope
roll
and
sub
jg
pop
mov
jg
mov
pop
lahf
fadds
push
sbb
sub
lods
mov
shlb
mov
mov
sub
stc
push
test
jl
sub
daa
lods
ljmp
iret
or
sub
cmpsb
dec
dec
xchg
pusha
arpl
out
clc
test
or
or
lock
scas
shlb
str
subb
mov
cwtl
aad
xlat
insb
mov
sarl
in
xchg
pop
push
aam
and
jbe
mov
cmpsl
lret
adcb
mov
adc
mov
icebp
or
nop
mov
clc
fnstcw
subl
fdivrp
dec
mov
andb
sahf
sub
mov
mov
mov
lods
push
or
jmp
jbe
sub
pusha
xchg
adc
enter
jl
sbb
ds
loopne
ljmp
inc
and
adc
mov
jbe
xor
pop
push
mov
outsl
push
sbb
cltd
lock
das
loop
add
outsl
outsl
test
mov
fnstenv
sahf
cmp
sub
pushf
test
in
mov
cmpb
pop
mov
fdivrl
ds
iret
mov
cwtl
push
cmp
push
ja
movsl
dec
adc
sub
aam
jp
fcompl
rcrl
jge
add
es
and
pop
sahf
mov
test
fistl
lods
dec
inc
leave
jb
pop
cmpsl
push
push
sahf
sar
xchg
inc
shll
mov
arpl
sbb
add
jno
test
push
or
lahf
sub
sbb
add
fwait
repz
in
or
repz
dec
test
mov
pop
adc
ss
adc
out
mov
add
iret
arpl
cwtl
popf
fmull
inc
lahf
mov
mov
xchg
lret
push
mov
mov
scas
adc
imul
add
inc
call
imul
repz
jb
rclb
mov
adc
xchg
pop
shll
or
and
iret
sub
sbb
movsb
or
dec
shll
fst
ret
rorb
inc
lods
arpl
imul
test
jmp
sbb
in
dec
sub
data16
daa
adc
add
pop
aas
loopne
clc
fistps
adc
lds
mov
insb
mov
inc
loopne
xor
mov
xor
pop
pop
sbb
jnp
cmpsb
mov
into
lcall
gs
in
mov
stos
sub
lock
pop
dec
jae
movsb
adc
dec
add
adc
ja
pop
data16
mov
dec
mov
cwtl
in
jo
or
inc
outsl
movsl
inc
loopne,pn
fisttpl
repz
ret
xchg
jmp
sub
clc
test
adc
mov
stos
incl
insl
adc
mov
popa
jns
out
fldt
lock
xor
mov
pop
ja
cwtl
adc
push
add
data16
movsb
adc
jo
or
scas
mov
push
push
sbb
push
imul
pop
mov
rorl
adc
ja
imul
sbb
push
cltd
xlat
out
or
adc
jb
int
jp
cmp
stc
adc
scas
imul
and
sbb
and
stos
in
test
pop
subl
outsl
jo
aaa
mov
xor
aad
push
ret
and
out
ror
fidivs
stc
xor
dec
int
cmp
push
sbb
mov
clc
pop
daa
nop
adc
xchg
out
jnp
sbb
push
inc
ja
dec
xchg
daa
lret
jecxz
sub
shrl
fmulp
sub
jb
imul
mov
int3
and
push
in
out
pop
mov
pop
inc
fsubp
rcrb
addr16
out
and
sub
cmp
fsub
and
fstpl
pusha
out
pop
lahf
aad
push
inc
add
rcr
stos
adc
sub
ss
mov
insl
stos
addr16
push
fdivp
add
clc
lds
add
dec
push
cmp
pop
scas
jge
lret
add
bound
push
lods
minps
out
dec
je
call
xchg
and
jecxz
and
dec
and
stc
je
aad
pop
fiadds
lret
pop
scas
std
pusha
cld
mov
push
dec
cmp
xor
push
inc
mov
insb
sub
fisubrs
jl
sti
mov
in
lods
call
dec
inc
mov
dec
mov
mov
mov
xchg
loope
xchg
cs
push
jnp
or
xchg
jnp
adc
xor
xchg
in
mov
and
fs
sbb
jp
jnp
mov
or
test
or
or
lock
out
mov
jno
xchg
sbb
int3
imul
jb
jno
outsl
jl
or
or
xlat
add
pusha
or
in
push
push
test
mov
jnp
xchg
test
orb
pop
ss
out
add
mov
cmp
mov
dec
or
movsl
test
pop
je
mov
cmpsb
adc
push
cbtw
mov
sti
out
push
sub
scas
mov
add
xor
push
xor
and
mov
jb
xor
sbb
push
adc
xor
add
addr16
fidivrl
xor
arpl
dec
adc
aam
dec
push
adc
adc
sbb
setae
add
inc
hlt
mov
sub
pop
mov
mov
in
lahf
sub
xchg
jae
inc
mov
xchg
mov
push
sti
adc
cmc
faddl
call
sub
loope
pop
xchg
inc
lds
aaa
fisttps
and
inc
mov
sub
and
int
push
push
or
mov
mov
mov
bound
lahf
push
popa
sbb
push
and
mov
shll
push
ja
loopne
loopne
xchg
je
add
cwtl
pushf
inc
arpl
mov
pushf
cld
lret
and
jl
les
fwait
mov
xor
je
mov
fstps
mov
insl
mov
and
mov
jp
cmp
push
mov
popa
and
adc
outsb
ret
lret
inc
daa
mov
xchg
xchg
sbb
inc
test
repnz
mov
ja
sub
sbb
inc
push
std
je
jo
pop
or
cmp
and
sbb
inc
into
aam
mov
xor
cmp
sbb
pop
cld
or
sub
lods
xlat
cmc
out
jno
inc
add
and
shll
cmp
adc
jmp
pop
adc
lea
out
or
aad
mov
dec
jno
scas
popf
das
mov
pusha
adc
loop
xchg
pop
pop
add
adc
out
or
jl
in
xor
subb
rcll
mov
push
stos
add
and
mov
sbb
add
or
fisubl
jbe
sub
cwtl
lods
push
call
xor
mov
fcomi
ret
arpl
out
cmc
jbe
sub
sbb
in
mov
pop
movsl
insb
mov
movb
xor
sbbl
mov
lcall
or
leave
inc
dec
inc
mov
sub
adc
daa
ss
mov
and
pop
mov
sub
jns
or
add
jnp
fnstcw
sar
in
iret
mov
jp
sbb
int3
and
xchg
test
pop
cli
mov
dec
dec
and
sub
or
pop
jb
cs
lock
xchg
push
fldt
rclb
mov
sub
loop
push
fimull
lods
add
push
lret
adcl
mov
cmp
out
jmp
dec
repz
enter
mov
adc
enter
jno,pt
push
cli
int
cmp
cmp
ficoms
mov
or
sahf
sbb
push
xor
xlat
jp
mov
test
push
mov
jno
arpl
dec
in
mov
and
and
and
cwtl
adc
jae
xchg
mov
aam
sub
loopne
and
insb
int3
mov
mov
jg
dec
xchg
adc
sub
bound
and
fcoms
push
xchg
gs
mov
or
jl
je
cld
lds
dec
push
jl
dec
lock
pop
rclb
sub
sbb
popa
movsl
shlb
jne
int3
mov
xchg
mov
int
in
movsb
and
fldenv
leave
in
xchg
xchg
pop
das
pop
xchg
andl
sarb
fcompl
mov
dec
cmp
dec
test
std
cmp
jne
mov
sub
mov
inc
mov
jb
add
idiv
dec
fisubrs
xchg
xor
push
sub
add
mov
bound
xchg
adc
aam
andb
cmpsl
sub
push
sarl
cs
nop
mov
sub
mov
lcall
and
push
sbb
pop
mov
or
mov
or
mov
cltd
out
daa
ja
shrb
mov
mov
andl
and
daa
xchg
mov
cltd
lret
fs
xlat
mov
mov
inc
cs
call
xchg
cwtl
mov
pavgb
push
outsl
ds
movsl
adc
mull
lods
sub
pop
mov
mov
pushf
add
jne
pop
mov
add
es
add
inc
sbb
mov
cmp
push
jb
jl
push
cwtl
add
shr
bound
sbb
dec
push
or
xor
test
bnd
stos
mov
pushf
xchg
sub
daa
fwait
popa
jo
jbe
push
inc
push
inc
leave
pop
jg
clc
sub
ret
mov
cmp
test
hlt
xor
cmpsb
inc
push
nop
inc
lea
imull
int3
lock
add
testb
mov
push
ss
fdiv
aaa
fnstcw
dec
cld
sub
cmc
sub
stos
mov
ret
dec
mov
push
int3
mov
push
push
and
push
ret
pop
xchg
xchg
xor
sub
mov
pop
popa
cmp
or
inc
xchg
out
shlb
xor
cmc
imul
stos
push
mov
adc
mov
es
xchg
rcll
lret
shlb
fcmovnu
xorl
mov
and
je
out
mov
pop
div
sbb
mov
push
out
inc
std
push
seta
adc
fnstenv
aam
mov
mov
xchg
add
loope
lock
jmp
std
inc
jo
mov
xchg
push
dec
movl
and
jb
aam
jg
push
jge
ljmp
out
rcll
cmpsl
jg
mov
dec
out
mov
js
sbb
lret
add
ss
push
push
loop
ret
and
negl
mov
lds
push
cmp
jmp
cmp
xor
mov
add
xor
push
test
lds
jle
cmp
pop
in
test
dec
mov
mulb
dec
mov
jb
addr16
adc
add
jl
inc
jl
rclb
inc
fdivs
jecxz
or
add
dec
inc
xchg
mov
mov
cli
sub
ret
insb
jmp
jnp
iret
ret
push
testb
mov
jo
imul
mov
lret
lcall
insb
fdivrl
and
jl
jmp
in
js
mov
icebp
pop
jb
add
push
shll
ss
mov
int
mov
lds
sub
inc
push
in
and
test
cmpsl
pop
dec
mov
xor
rorl
pusha
cwtl
xor
adc
sbb
adc
pushf
mov
repnz
adc
sub
rcl
outsl
pop
jns,pn
lahf
clc
inc
cmp
inc
inc
dec
insb
adc
fmull
mov
fidivs
mov
dec
add
ja
mov
xchg
cld
movsl
add
add
mov
ds
gs
gs
movsb
clc
lock
shl
fisttpl
push
pop
dec
jg
hlt
out
std
jbe
sbb
mov
int3
inc
inc
call
lcall
shlb
lock
movsl
fnstenv
or
shr
into
xor
and
lahf
jbe
xor
xlat
cli
les
or
lahf
mov
shrl
in
sub
cwtl
mov
mov
inc
mov
clc
mov
sbb
outsb
xor
mov
pop
sub
adc
pop
inc
xchg
incl
dec
mov
clc
mov
les
popf
sbb
and
adc
rclb
jecxz
fisttpl
rep
sub
mov
cmpsb
dec
int
into
movsl
mov
jge
jne
fistl
mov
jo
test
inc
mov
addr16
les
jge
jbe
xor
icebp
inc
mov
add
lea
cmp
sbb
rcll
add
shll
cwtl
repz
push
xchg
lea
ret
jne
sub
mov
and
es
inc
jnp
mov
xor
xor
fildll
jo
push
in
or
sbb
lock
jb
or
int
lods
xor
mov
ss
movsb
jb
into
mov
jle
into
mov
adc
adc
mov
shlb
mov
sbb
cmp
dec
xchg
and
jns
mov
shll
mov
jl
mov
and
stc
es
fisubs
je
pop
and
cmpsl
sbb
pop
and
daa
mov
aam
das
jg
jnp
stos
addb
aam
ss
dec
pop
sub
fistpl
add
sbb
inc
pop
sbb
lcall
pusha
and
out
xchg
sarb
mov
out
punpckhdq
mov
xor
and
xor
dec
lds
gs
imul
in
or
or
shll
shl
divl
lret
push
lahf
stos
xchg
outsb
xchg
and
rorl
jno
mov
cltd
in
add
mov
in
mov
mov
stos
imul
or
cmp
and
and
sahf
mov
cwtl
jnp
mov
inc
sbb
std
fdivl
sub
fsts
xor
lcall
aad
lahf
insb
shll
lods
leave
out
cld
pop
jg
jns
push
adc
push
outsb
adcl
push
or
popa
sub
aam
xchg
or
popa
inc
jbe
push
jmp
pop
fdiv
mov
aas
add
and
adc
sti
sti
in
stos
imul
dec
xchg
loopne
out
xchg
test
push
gs
loop
subb
cmp
mov
sub
xchg
in
js
mov
mov
add
pop
cltd
jne
aas
jmp
arpl
mov
fcoml
sbb
popf
sub
or
pop
movl
hlt
adc
push
shrb
push
loop
xchg
mov
sbb
inc
hlt
pop
fisubrl
or
add
aam
shl
cmpsb
loopne
adc
pusha
mov
mov
mov
adc
xor
mov
push
ds
mov
and
mov
xchg
mov
lock
testl
loope
lods
mov
inc
loopne
xchg
push
xor
pop
hlt
pusha
jae
sub
push
addr16
cltd
sti
lret
rol
push
outsb
sbb
jmp
popf
out
mov
and
mov
fwait
adc
push
inc
pop
fbld
stos
mov
loop
mov
sarl
out
scas
mov
popa
pushf
es
fwait
aam
adcb
test
xor
sub
push
lods
inc
jne
adc
je
cmp
call
sbb
jecxz
adcl
inc
pop
mov
mov
jmp
cmc
sbb
add
mov
adc
lret
jbe
lock
mov
daa
xchg
xchg
cmpsb
xchg
and
and
fisubl
jg
scas
or
lods
xchg
jle
add
add
xor
sub
fisttpl
pusha
cli
out
loop
out
int
aam
push
adc
jnp
fmuls
js
or
mov
sbb
sbb
lock
stc
cltd
inc
adc
sbb
in
mov
ret
dec
repnz
inc
jae
add
ljmp
mov
mov
hlt
mov
xchg
jmp
je
popa
ds
dec
sub
dec
aam
enter
sbb
jmp
out
fcmovbe
sub
lcall
jle
ror
test
test
add
push
xor
mov
push
jmp
mov
shll
mov
or
adc
stos
call
clc
add
push
in
iret
fstps
mov
movsb
sti
pop
sti
fsts
ret
fistps
mov
dec
mov
lods
pop
xchg
jle
rorb
das
lahf
fstps
std
lea
push
in
jb
mov
or
daa
pop
mov
fstps
mov
outsl
loope
aaa
loop
inc
mov
cmp
rcl
add
or
in
ds
inc
mov
xor
cmp
cmp
hlt
movsb
stos
cmp
jbe
xchg
call
xchg
mov
pop
rorb
stos
je
popa
jne
movsl
mov
leave
scas
cmp
push
adc
dec
lea
rcll
repnz
push
cmp
imul
adc
sbb
fisubl
xlat
mov
xor
mov
mov
aas
inc
ret
fstps
mov
pop
or
cmp
sub
ror
lret
and
pop
xor
aas
xor
xor
pop
xor
cmpsb
pusha
sub
push
push
xchg
lods
pop
mov
fisttpll
out
stos
jnp
dec
xchg
jmp
bound
cmp
inc
test
lea
popf
lea
scas
ror
sub
inc
daa
adc
xor
or
jg
or
loope
sbb
jmp
xlat
cs
add
mov
pop
fs
ja
fstps
xor
lods
das
mov
inc
ja
pop
mov
push
cmp
add
sbb
cmovp
or
test
sbb
inc
pushf
out
mov
nop
daa
fsts
ljmp
mov
ljmp
movsb
loope
jmp
nop
clc
cmpsb
push
push
or
ljmp
push
movsb
mov
jb
gs
jl
dec
sub
or
dec
clc
test
xor
inc
and
out
cwtl
loopne
add
dec
out
and
cmpsb
adcb
loop
loop
xor
or
xchg
xchg
frstor
clc
lock
xor
cmpsl
xchg
test
lahf
mov
mov
push
inc
cmpsl
std
pop
jle
nop
inc
lock
mov
jae
and
sbb
addr16
push
mov
mov
mov
cmp
mov
ljmp
jge
xor
repz
aas
or
pop
mov
dec
pop
xlat
adc
dec
and
push
pop
pusha
shlb
pusha
and
ret
mov
imulb
je
loopew
testl
test
pop
fisttpll
lock
out
xchg
inc
ds
mov
jno
and
xchg
es
mov
push
clc
cmp
test
stc
iret
aaa
ret
jo
mov
sahf
pop
out
or
jno
sar
pop
cmp
or
cmp
push
aad
cmp
jmp
stos
insb
jmp
fildl
ret
pop
cmp
inc
adc
jae
sbb
test
fdivp
imul
add
cmp
loopne
ret
movsl
roll
jl
jbe
int3
add
add
add
cmpb
dec
sub
lcall
movsb
pop
push
in
into
cwtl
jmp
loopne
outsb
adc
insb
mov
pop
aad
cmpsl
stc
scas
pop
subl
lret
adc
dec
inc
lret
test
jp
pop
out
pop
cmc
xor
dec
outsl
clc
xor
leave
dec
in
adc
arpl
clc
cli
rcll
pop
imul
inc
fcomps
xchg
or
outsl
xchg
jnp
gs
andl
iret
cmp
jl
das
jno
sbb
pusha
inc
inc
adc
jle
shr
lods
xor
push
outsl
or
inc
cmp
outsl
insb
into
or
mov
jle
jae
xchg
pop
mov
sub
mov
mov
stos
leave
push
into
dec
dec
mov
repnz
insl
or
cmp
sbb
es
daa
jne
fsubrs
push
incl
sub
push
adc
clc
inc
loopne
pop
out
movsb
pusha
fwait
stos
adc
mov
jns
xchg
sub
lretw
pop
call
fcoml
cld
mov
ja
cmp
cmpsl
pop
add
mov
test
fnstsw
not
int
sbb
jbe
add
jl
aad
push
jae
dec
add
iret
insb
sarl
pop
dec
xchg
push
sbb
mov
push
push
inc
xchg
dec
push
repz
adcl
mov
xchg
outsl
leave
and
adc
adc
mov
fmull
filds
sub
sub
pop
xchg
loope
inc
jp
xor
inc
lahf
lods
sbb
push
lods
mov
and
lahf
out
fiaddl
or
jmp
mov
dec
add
outsb
in
loope
jle
aaa
lds
lahf
adc
je
fwait
pop
mov
mov
insb
cli
stos
adc
sub
add
xchg
fs
in
or
js
loopne
push
sbb
vcvtsd2si
jno
test
ffree
test
jb
xor
or
int3
jle
test
xchg
jne
mov
adc
outsl
mov
aam
push
mov
nop
mov
ret
pop
mov
leave
or
fistpll
or
fcmove
mov
jne
cmp
outsb
push
cmp
add
addr16
xor
and
push
mov
fisttpll
or
arpl
mov
jns
orl
repnz
jb
dec
outsb
inc
inc
std
in
dec
mov
idiv
imul
mov
jns
repz
dec
mov
jl
pop
cmc
xchg
adc
stc
mov
pop
xor
xchg
mov
add
add
sub
pop
out
xor
out
jne
and
aas
in
jbe
int3
mov
dec
sbb
cmp
push
add
hlt
imul
pop
mov
scas
sbb
daa
mov
or
sbb
or
clc
jbe
out
sub
xor
subb
mov
stos
push
sahf
xor
dec
xor
and
jb
out
mov
bound
or
sbb
sbb
mov
push
inc
imul
adc
int
ds
test
pop
mov
popl
fs
popf
arpl
test
movsl
cmpsl
adc
gs
outsb
or
cmc
icebp
stos
daa
xchg
mov
xor
in
cmp
aas
cmc
add
sub
es
sub
adc
es
mov
xor
cltd
pop
inc
movsb
mov
sarl
add
inc
les
jecxz
test
sub
mov
jl
or
insl
ret
test
ss
inc
ss
fmull
test
icebp
mov
dec
or
lcall
lret
ss
pop
movsl
and
aaa
ficoml
dec
rcr
or
inc
lds
cmpsb
rcr
test
sbb
std
in
mov
loope
mov
in
jp
add
aas
pop
mov
and
mov
sub
call
jmp
test
movsl
sahf
cltd
mov
in
loopne
out
fwait
pop
adc
bnd
std
ljmp
movsb
je
jo
negb
mov
adcl
insl
int
sub
jmp
sbb
outsl
cmp
xchg
cmp
shrl
ds
push
push
enter
lret
xchg
pop
in
mov
inc
aaa
bndldx
dec
imul
dec
fmull
pop
push
mov
add
add
pop
nop
jae
pop
mov
push
cmp
into
xchg
dec
sub
aam
mov
sub
sti
cmc
mov
and
cmc
bound
lret
subl
shrd
inc
repz
mov
add
sbb
add
adc
rclb
xor
lret
popf
or
dec
ror
ja
ffreep
sub
outsl
cmpsl
jmp
cmpsb
adc
shll
sahf
pusha
jecxz
shll
and
or
push
iret
mov
xor
lock
jle
xchg
and
mov
lcall
xchg
mov
xchg
mov
add
sbb
call
add
cmp
ret
sub
clc
cmp
popf
jo
out
or
shrl
imul
pop
int3
stos
dec
imul
push
lcall
add
les
ljmp
cmp
pusha
xchg
in
lret
arpl
jecxz
rorb
jo
sti
std
dec
mov
outsl
mov
pop
gs
lds
cmp
dec
xor
sbb
ret
jbe
gs
les
mov
mov
cmp
add
inc
cmpsb
movsb
jmp
ja
sub
inc
mov
fsts
or
mov
daa
scas
das
sahf
cli
inc
jp
mov
loopne
add
sbb
lock
mov
push
cmpsl
out
xchg
mov
cltd
into
cmp
push
test
push
aad
in
mov
imul
adc
repz
mov
push
and
out
jp
jb
pusha
xchg
stc
inc
mov
mov
or
gs
mov
dec
lods
das
je
jbe
mov
pop
push
ret
lock
xchg
nop
mov
pushw
xchg
ss
push
bound
mov
mov
mov
inc
call
sub
insb
push
sub
repz
jge
jg
les
popa
mov
out
and
out
jnp
jbe
scas
push
inc
inc
mov
jb
inc
jl
test
fldenv
cwtl
adc
mov
out
movsb
inc
push
sub
ret
push
push
cld
les
dec
out
rorl
icebp
fisubs
clc
sti
cmpsl
xchg
dec
aad
popf
or
or
pop
aad
pop
jns
mov
std
leave
loop
push
xor
or
add
or
ss
jmp
dec
inc
es
add
mov
dec
aad
test
ret
outsb
outsb
xchg
mov
addl
outsl
xchg
and
inc
daa
jns
int
cmp
push
out
mov
in
mov
xchg
sub
test
add
fsubr
inc
add
mov
mov
push
mov
jae
inc
shl
cmpb
mov
movsb
in
inc
jl
sub
mov
adc
sbb
push
or
mov
jge
sbb
cmp
mov
das
out
std
xor
cli
mov
mov
cmp
push
or
cmp
add
out
mov
dec
or
idivl
pop
jg
iret
scas
pop
ds
or
cld
adc
inc
push
jmp
xchg
mov
js
cmp
add
imul
out
push
lcall
and
test
rcll
jl
add
pusha
ja
push
sub
mov
inc
xlat
jmp
outsb
push
orb
mov
and
in
bound
roll
jns
mov
dec
daa
xchg
push
inc
adc
stos
push
mov
xchg
or
scas
and
repz
sbb
mov
and
insl
jne
call
fwait
pop
inc
sahf
add
iret
and
cmpb
push
enter
or
in
sbb
sub
and
mov
arpl
inc
mov
mov
movsl
pop
push
mov
push
mov
jmp
mov
sbb
jnp
xor
call
ljmp
testb
scas
lds
subb
loop
popa
xchg
rcrl
inc
shlb
xchg
cwtl
or
jbe
mov
cmp
and
hlt
repz
daa
popa
nop
inc
jb
mov
xchg
push
and
jne
imul
jne
hlt
xchg
and
push
cmpsb
lock
movsl
jmp
dec
inc
jp
add
push
xchg
cmp
in
movsb
mov
fldl
daa
popl
jge
into
push
aam
popa
or
in
rclb
pxor
adc
test
loopne
into
je
or
fidivrs
push
dec
outsb
sbb
lds
mov
int3
xor
xchg
mov
movsl
mov
clc
ljmp
push
mov
jmp
mov
arpl
dec
xor
fs
cmp
and
idivb
add
in
filds
ds
xor
dec
aam
sub
outsb
roll
adc
popf
sbb
jbe
jo
xlat
mov
sti
xchg
add
jnp
popa
imul
push
push
roll
xchg
mov
lret
inc
imul
gs
adc
pop
fdivrs
lea
inc
cs
inc
hlt
loope
mov
cli
jae
pop
call
push
pop
xchg
pop
subb
jge
mov
cli
adc
dec
and
test
lds
les
insl
sub
sub
aaa
cs
outsl
push
xchg
rcrl
mov
cmp
movsb
sub
daa
cwtl
or
loopne
les
shll
jmp
mov
leave
stc
scas
in
enter
lods
test
test
dec
insb
jmp
leave
inc
ret
xchg
jb
test
jge
xlat
inc
fs
ds
or
andb
push
pop
jecxz
adc
dec
out
mov
and
pop
jae
negb
ljmp
lea
stos
jmp
xor
scas
les
pop
push
call
adc
repnz
pop
or
mov
and
jne
lds
pop
dec
call
idivb
add
add
imul
ret
neg
and
repnz
or
mov
jnp
rcrl
mov
aas
test
insb
lods
out
insl
jbe
push
pop
pop
ss
cmp
subl
xchg
fwait
rcrb
int3
hlt
lods
dec
int
mov
neg
pushf
mov
xchg
adc
inc
imul
pmullw
sub
nop
pop
adc
push
xor
in
rcr
sti
in
mov
std
rcl
arpl
sub
dec
nop
aam
movsl
push
fs
shlb
and
fucomip
pop
rorb
push
inc
or
adc
icebp
jge
inc
mov
xchg
sbb
jns
mov
jg
xchg
ss
jle
int
outsl
stc
pop
int
mov
popa
pop
sub
cmpsl
ds
jno
cmpb
sub
sub
add
sbb
inc
mov
adc
insl
fdivs
dec
in
scas
jbe
mov
adc
sbb
mov
test
hlt
inc
test
testb
jnp
mov
rclb
je
cmp
shll
in
sbb
idivl
aaa
sub
shlb
fs
xchg
xor
cmp
jnp
xor
xchg
pop
cmp
aas
xor
add
daa
je
add
adc
jbe
push
mov
mov
xor
sbb
fmull
xchg
call
mov
inc
mov
outsl
jno
jg
inc
stos
jbe
push
pop
scas
mov
xor
pop
dec
jge
sbb
repz
mov
movsb
and
or
in
inc
imul
daa
lods
lds
into
jp
test
leave
push
xchg
xchg
hlt
aaa
push
xchg
pop
outsl
mov
arpl
push
test
and
test
icebp
sbb
ja
sub
xchg
push
fnstcw
push
arpl
ror
sbb
in
pushf
stos
nop
fwait
sahf
mov
decl
xchg
push
les
mov
les
jge
subb
add
scas
inc
imul
pop
lret
in
out
push
inc
rcl
jb
sbb
xor
sub
jb
mov
pusha
pop
or
and
xor
dec
outsl
mov
sbbb
fcoms
fidivrs
mov
or
ljmp
out
addr16
repnz
scas
loope
lods
mov
xchg
repz
jnp
sbb
insb
xorb
repz
xchg
sub
in
loope
test
inc
mov
jb
cltd
fcoms
mov
sbb
jg
mov
mov
insb
movsl
cmp
ror
inc
push
jp
and
fbld
aam
pop
xchg
adc
mov
test
adc
dec
pop
cmp
inc
push
sbb
cmp
or
outsl
xor
cmp
jp
mov
mov
adc
cmpb
mov
mov
or
call
cmpsl
fs
xchg
sbb
xorl
pop
push
out
imul
and
mov
lods
mov
out
sti
or
lcall
pop
cwtl
dec
add
xchg
je
jecxz
xchg
mov
lret
fldenv
pushf
or
inc
out
mov
pusha
pop
push
inc
insl
out
addr16
push
imul
mov
or
push
bound
stc
xchg
xchg
mov
sub
jae
inc
cld
es
imul
mov
cmp
pop
mov
cs
cli
xor
aaa
and
dec
and
or
int
movsb
cmc
and
mov
out
fs
jl
psadbw
jp
mov
mov
addb
fdivrl
push
xor
orb
repz
pop
fnstenv
or
mov
or
test
pop
mov
lret
dec
xor
xchg
push
fucom
test
test
insb
aad
pop
jmp
pop
and
insb
adc
insl
jmp
aaa
decl
mov
hlt
adc
lea
xchg
mov
cwtl
fwait
inc
lahf
or
sti
pop
add
xchg
mov
dec
xchg
lock
testl
jnp
mov
push
dec
mov
add
fdivrp
or
push
add
mov
mov
push
inc
cmp
js
out
or
lods
cmp
mov
sbb
and
xchg
aad
neg
jp
shrl
sbb
ljmp
mov
les
jge
push
pop
jno
jo
push
mov
inc
nop
xchg
inc
jmp
shr
xchg
pop
jmp
inc
push
outsl
or
pop
mov
mov
push
int
jne
les
lret
stc
pushf
xchg
loopne
jp
shll
imul
dec
xor
dec
ret
sbb
jne
rorb
mov
xor
bound
jp
lea
adc
xchg
xchg
and
xchg
mov
in
push
fidivl
inc
jno
fwait
ljmp
arpl
in
clc
sti
or
rclb
or
mov
push
sbb
imul
mov
cmp
ficoml
adc
add
xor
and
ja,pn
pushf
test
and
ja
loop
jmp
lods
idivl
and
pop
or
nop
int
xlat
cmpsl
insb
rorb
bound
loop
mov
rclb
daa
mov
fnsave
pop
mov
push
icebp
xlat
push
sub
sahf
push
testl
jmp
xlat
pop
mov
lds
mov
push
mov
jns
cmp
and
ret
lods
daa
sti
or
adc
outsb
mov
fildl
aam
dec
aam
mov
int3
add
add
stc
pop
xor
mov
in
pop
xor
es
rcll
iret
imul
mov
mov
ss
sub
push
lcall
je
ja
imul
jne
lret
mov
jp
and
ja
push
ret
and
test
pop
push
cvttps2pi
fwait
cltd
push
fildl
ja
in
orl
sbb
xchg
push
mov
sub
or
fisubrl
into
inc
pop
sti
cmp
pushf
mov
xchg
cltd
jne
mov
leave
shrl
lcall
push
push
xor
or
rol
or
mov
add
icebp
mov
push
jae
add
imul
aam
sahf
rcrl
pushf
aas
and
ss
pop
ficompl
das
bound
or
mov
insb
in
sub
xchg
das
lret
xlat
and
or
call
aad
data16
cltd
cltd
ja
or
or
inc
js
sbb
sub
pushf
jle,pt
test
test
scas
aaa
fisubrs
add
outsb
add
leave
push
roll
jecxz
mov
popa
sbb
adc
jl
dec
cld
inc
mov
les
icebp
and
jmp
pop
jmp
je
jo
test
cs
jg
shll
ret
aas
jmp
mov
inc
fucomp
push
call
push
xor
repz
int3
sbb
out
repz
inc
sub
and
jle
gs
clc
dec
leave
mov
xchg
push
out
jmp
mov
call
test
pop
imul
mov
mov
push
xchg
mov
jmp
rcrb
adc
into
test
pop
ficompl
pop
mov
xchg
xchg
mov
cmp
jae
dec
cmp
das
pop
imulb
pop
sbb
jg
test
xchg
sar
int3
adc
mov
ffree
testb
dec
lahf
cmp
testl
pop
add
sub
push
aas
gs
lcall
or
fs
fsubrl
fxch
mov
rorb
cltd
aas
push
inc
lock
loope
sahf
or
fistpll
dec
lds
fisttpll
push
pop
clc
xlat
pop
inc
loopne
or
cmp
jecxz
test
xorl
lret
sub
ja
xchg
and
push
jno
sbb
fimull
pop
fs
inc
adc
arpl
dec
sbb
cli
int
fsubr
and
lret
mov
daa
cwtl
rclb
leave
mov
fisubrl
sub
add
lock
jae
lret
negl
pushf
pop
fxch
push
nop
cmpsb
dec
repz
pop
pop
mov
loopne
not
mov
push
lret
and
ret
jne
out
xor
iret
mov
shrl
add
fwait
cmc
dec
xchg
and
lret
in
dec
sbb
test
mov
mov
adc
or
and
pop
mov
orb
pop
aad
push
mov
jae
mov
testl
push
xlat
jne
dec
pop
cmpsb
icebp
jno
cli
push
or
push
aas
fmul
cmp
rcr
sub
es
push
mov
push
fnstsw
cmp
xchg
pusha
mov
push
mov
insb
adc
in
icebp
cltd
std
pop
sub
xchg
ljmp
fdivp
fiadds
push
test
adcl
sub
repz
rcr
aad
cmc
inc
mov
bound
xor
mov
popf
mov
rcll
data16
fstpl
or
xchg
jnp
fwait
add
push
add
ds
jnp
loop
mov
adc
test
fstpl
cmc
mov
stos
mov
xor
gs
mov
stos
sub
inc
sbb
xchg
jno
sub
mov
push
push
es
push
fcmove
jne
pushf
mov
into
jb
shll
xor
sub
outsl
cs
fs
mov
dec
stc
cmp
sti
out
push
jge
stos
pop
cltd
mov
push
jl
and
je
sbb
xorl
push
sub
stc
cmp
xlat
xchg
sti
inc
xor
arpl
push
inc
mov
jmp
daa
lret
jp
add
mov
idivl
inc
ds
xchg
insl
decb
dec
inc
cwtl
and
das
cmpsl
mov
mov
outsb
jmp
mov
push
and
cmpsl
jae
gs
sbb
js
dec
xlat
xor
mov
mov
mov
xchg
cmp
enter
test
fs
push
das
lock
testl
test
push
daa
mov
ret
orb
bound
cwtl
fldt
dec
fists
mov
cld
aam
mov
int3
adc
js
popf
mov
push
jmp
inc
push
push
push
jp
xor
lods
test
pop
sub
inc
add
push
mov
aas
out
push
push
out
lcall
adc
push
inc
in
jg
btc
movsb
repnz
push
cmpb
ds
test
ss
push
add
dec
xchg
cmpsl
inc
addl
mov
mov
testl
sahf
mov
mov
or
in
dec
mov
and
sbb
jno
push
and
outsl
fcomip
outsb
cmp
xor
xor
cmp
int3
jne
loopne
push
adc
mov
mov
mov
cmc
mov
pop
and
into
inc
xor
sub
cmc
cmp
adc
movb
mov
into
test
add
insb
mov
jnp
xor
and
negl
xchg
push
into
mov
mov
in
mov
fdivs
mov
imul
push
sarl
inc
cmp
les
jno
lods
shrl
dec
xchg
dec
std
sub
ret
push
fidivrs
mov
shrl
or
add
ret
outsl
mov
sub
es
outsl
sti
push
les
mov
adc
out
jge
popl
mov
cli
scas
jmp
test
test
push
sub
sbb
insb
xor
outsb
sbb
jne
loope
mov
mov
loop
idivb
inc
mov
push
lock
cmp
mov
xor
pop
cmc
lahf
das
add
or
imul
jmp
leave
test
lcall
sbb
sub
mov
ljmp
in
mov
loope
push
cmp
push
lahf
dec
inc
sbb
inc
jle
test
sub
cld
push
pop
aaa
push
dec
adc
mov
lea
jbe
subb
dec
movsl
push
bound
push
cmp
or
pop
sbb
jecxz
pop
sbb
mov
dec
push
jle
inc
insl
pop
xor
lret
and
cmpsb
ljmp
push
aam
repz
enter
mov
lds
mov
and
ja
cmp
xchg
mov
adc
push
repnz
add
ficoms
push
jo
xor
cmp
jecxz
call
dec
push
lods
xor
inc
mov
repz
ss
ret
les
adc
xchg
mov
jl
and
push
insb
test
xchg
cltd
lret
add
pop
push
dec
mov
je
out
xchg
fsubrs
clc
sbb
and
add
and
enter
inc
das
adc
inc
inc
ss
mov
mov
mov
add
jns
cmpsl
pop
sahf
imul
xor
push
dec
test
mov
and
push
xchg
lcall
xrelease
pop
xor
outsl
mov
add
das
cmp
xchg
decl
ljmp
popf
ret
and
xchg
into
int3
and
xchg
inc
push
sbb
jo
jmp
sub
jp
sbb
push
jae
out
imul
movsl
xor
pop
dec
jmp
mov
jo
adc
pop
rcrb
lods
popf
push
or
rol
imul
cmpsl
mov
xor
xchg
pop
fistpll
popf
cmp
jg
bound
fst
inc
push
das
or
or
out
cltd
push
out
sub
xor
divl
mov
cli
inc
xchg
std
xlat
in
iret
push
sbb
ret
fsubr
stos
ror
sub
or
and
sub
jno
xor
testl
jecxz
jns
shrl
cmp
sbb
add
inc
pushf
lods
out
les
mov
ja
push
jmp
mov
cmp
cltd
xchg
cmpsb
mulb
add
xchg
pop
pop
scas
jl
xor
adc
inc
pop
push
mov
cmp
dec
mov
test
pop
dec
sub
jl
mov
pop
and
ret
mov
lcall
sbb
jl
ljmp
gs
subl
clc
push
sub
xlat
divl
adcl
cmp
ret
nop
popa
sub
nop
or
mov
cmp
sarb
out
mov
shll
stc
pop
cmp
ljmp
mov
push
negb
in
mov
xor
add
push
nopl
leave
cli
push
adc
ret
mov
lret
mov
ret
or
mov
movsb
push
loop
ss
mov
loopne
xchg
out
jl
fstpt
inc
jge
sbb
ds
rcll
pop
jmp
test
idivb
adc
and
jmp
jno
jae
push
mov
pop
in
xor
jns
xchg
push
int
cmp
flds
sbb
inc
fsubrs
cmpsl
and
dec
cwtl
pop
adc
es
fiaddl
pop
ja
imul
mov
addr16
fs
jnp
jae
aam
cmp
jge
insl
in
sub
and
out
call
sbbb
push
cmpsl
push
dec
jae
stos
mov
push
xor
cmp
push
aad
popa
aam
sub
scas
mov
lcall
out
cltd
fists
jb
push
ficoml
into
mov
fcomi
int3
and
repnz
jl
fnstenv
imul
lcall
dec
inc
adc
stos
insb
jne
mov
js
cmp
and
addr16
mov
push
imul
pop
mov
mov
dec
xchg
out
int
aas
sbb
xchg
mov
jp
subl
xlat
dec
mov
scas
mov
mov
inc
stos
data16
mov
lcall
push
push
jmp
push
sbb
outsb
int3
sbb
mov
xchg
and
rorb
mov
push
jle
add
or
jmp
in
pushf
add
sbb
clc
icebp
jp
mov
lods
mov
fstpt
mov
imul
jmp
or
xor
jmp
mov
inc
inc
and
lret
xlat
dec
inc
jp
sub
nop
out
loope
fldenv
sub
and
mov
ds
sub
leave
inc
test
repnz
pop
pop
out
lahf
aad
mov
add
repnz
sbb
fmull
std
mov
dec
fildll
cwtl
sbb
insl
iret
aam
rorl
mov
jnp
pop
aam
push
cmp
add
lods
lods
daa
out
sbb
repnz
adc
nop
push
jno
xor
adc
pushf
std
push
and
sub
push
jg
xor
add
sbb
aad
lcall
divps
push
scas
adc
mov
cmp
leave
and
js
dec
mov
dec
les
popa
movsb
movsb
mov
adc
insl
sti
or
mov
daa
sub
mov
adc
dec
lret
iret
and
mulb
and
xor
add
sub
int3
enter
inc
mov
add
int
add
movsl
xor
scas
adc
repz
mulb
cmpsb
scas
faddl
adc
shl
imul
js
lock
sub
out
push
mov
dec
dec
sub
add
pop
jle
cld
or
or
insb
loope
cwtl
lea
es
adc
push
pop
scas
call
pushl
mov
pop
or
lcall
sub
stos
xchg
sbb
pusha
int
inc
into
in
xchg
sbbb
mov
dec
loopne
sahf
leave
stc
add
push
push
or
push
mov
clc
int
aas
dec
mov
sbb
mov
jecxz
xchg
or
push
inc
xchg
sub
xchg
mov
adc
divl
dec
or
add
stc
dec
cltd
cs
test
mov
jp
cmp
arpl
lcall
lods
aad
cmpsb
out
leave
or
arpl
inc
fwait
lea
jnp
sub
push
cmp
xchg
in
dec
mov
push
or
xor
cmp
xor
jns
std
push
mov
pop
dec
sub
mov
cmp
icebp
lea
cltd
pop
pop
stc
cmp
out
pop
gs
jmp
sub
jb
cmp
xchg
daa
ds
adc
dec
pop
clc
sub
pop
pop
sti
out
xorb
es
add
in
roll
js
out
test
movsl
dec
scas
cltd
inc
fcmovnbe
ret
jecxz
adc
loop
jge
inc
lahf
sbb
mov
out
mov
cwtl
into
cmp
xor
sub
test
sub
js,pn
push
pop
jbe
cld
cmpps
adc
test
lods
sub
push
outsl
mov
inc
test
xchg
stos
add
das
outsl
mov
jne
sub
cmpsb
mov
dec
mov
stc
icebp
bound
pusha
inc
dec
inc
cmpsl
sub
mov
dec
sub
xchg
lret
dec
cld
push
lock
and
imul
xor
push
mov
addr16
out
xor
dec
and
xchg
lcall
push
push
pop
and
jb
loopne
cmc
xchg
jl
fs
inc
sbb
push
sbb
insl
shr
jge
add
dec
shl
jmp
sarl
jne
cmpsl
inc
fmuls
shr
xchg
stos
jae
fbstp
sub
pop
aam
das
add
je
xor
inc
stos
cmp
xor
out
xchg
je
push
fisttpl
rcrb
and
sbb
jnp
xchg
test
les
imul
sbb
fucomip
cwtl
xchg
cli
mov
fsubrs
jp
adc
inc
xchg
sbb
cli
arpl
inc
sbb
fsubr
or
mov
daa
xchg
adc
jae
rorl
leave
notb
mov
ficomps
jl
and
jno
mov
sti
cmp
sub
xchg
jns
bound
decb
cmp
and
jo
xor
add
sub
out
js
rcrb
sub
fbld
js
fisubl
test
cmp
outsb
add
cmpsb
stc
lret
dec
add
add
arpl
insb
jne
jae
lock
dec
daa
add
jae
jb
cmp
jbe
jbe
mov
sub
aam
xor
ret
adc
loop
mov
adc
mov
lods
loopne
iret
xchg
rorl
adc
sti
js
adc
push
call
test
or
xor
push
sbb
and
add
cmp
cmc
stos
or
mov
and
add
lds
pop
inc
aas
push
rcrb
cmp
mov
push
jo
mov
rcrb
sbb
out
imul
adc
push
push
in
stos
imul
push
jp
push
dec
mov
imul
jb
adc
repnz
addl
es
mov
add
inc
in
js
sub
into
not
sbb
hlt
mov
sbb
jnp
addr16
arpl
sub
pop
adc
cmpsb
rcl
call
sbb
imul
fiadds
dec
outsl
pop
mov
mov
cmpsb
ficompl
repz
call
loope
lods
push
subb
ss
out
je
out
data16
jno
scas
into
mov
test
mov
es
dec
orb
and
outsl
xchg
dec
test
fadds
test
imul
mov
loope
jp
xchg
imul
sahf
or
inc
insl
push
mov
mov
pop
or
lret
xchg
into
fisubl
shlb
push
cmpsb
repz
loope
dec
add
jo
aam
or
bound
jo
fs
andl
xchg
mov
std
cs
mov
nop
push
dec
out
adcb
js
pop
clc
popa
push
xor
push
enter
clc
test
idivl
sbb
cmp
mov
dec
and
push
cmp
scas
adc
hlt
pop
dec
jle
push
out
clc
in
popf
pop
mov
shll
imul
pushf
jge
inc
das
sbb
xlat
dec
shl
ret
xchg
nop
rcrb
test
icebp
imull
loope
les
push
mov
sahf
push
push
xchg
add
lods
ljmp
jo
mov
mov
stc
pop
mov
inc
enter
cmp
push
int3
pop
jne
ds
xchg
add
int3
shrb
mov
test
fiaddl
jg
inc
in
push
dec
mov
mov
mov
rclb
nop
lret
shrb
dec
int3
popf
pop
cltd
imul
cmpb
add
daa
lret
into
pop
arpl
sub
or
sub
ror
out
loopne
push
faddp
mov
push
pop
fwait
pop
mov
mov
jo
add
mov
daa
jne
inc
xor
hlt
les
in
xchg
out
cmpb
push
call
jge
add
xor
leave
mov
jnp
ljmp
lcall
into
lahf
inc
mov
sbb
pushf
jnp
cmpl
inc
outsl
call
inc
pop
adc
in
test
cmpsl
mov
call
sbb
ret
cmp
pop
mov
jne
nop
push
pop
cmc
pop
fmull
sbb
out
mov
cmpsl
movsb
insl
shl
pop
dec
cli
sub
mov
adc
sub
repz
hlt
or
pop
push
es
fnstsw
xor
stos
test
inc
sbb
pop
sbb
adc
sub
or
pop
cmpsl
int3
jmp
les
inc
into
aad
add
jecxz
and
cmpsl
lahf
ret
mov
sti
mov
fs
out
mov
fwait
inc
cmp
ss
cmpb
jne
dec
and
daa
lods
adc
mov
jecxz
cwtl
call
test
push
aas
fnstsw
mov
enter
jne
jns
cmp
xchg
iret
rcrl
aad
pop
popa
test
scas
mov
jbe
cmpsb
fistps
or
pop
pop
jb
popa
sti
cmp
hlt
xor
mov
outsl
int
pop
jno
xor
cli
cmp
cwtl
inc
pop
pop
jecxz
mov
in
movsl
clc
adc
cmp
js
mov
loope
mov
sbb
cli
mov
test
push
jo
aad
jae
out
or
shlb
fidivrs
mov
loop
xor
adc
cmp
xor
jnp
int3
shlb
jg
push
add
iret
dec
cmpsb
jb
add
movsb
ffree
aas
mov
les
sbb
cmpb
js
sti
inc
ror
pop
inc
shll
pop
xchg
or
mov
add
scas
loope
inc
jns
scas
mov
xchg
stc
dec
nop
jbe
test
mov
adc
push
mov
pop
out
inc
sahf
or
xchg
pusha
lods
testb
push
dec
outsl
push
aad
fadds
or
ficompl
push
cli
call
adc
add
or
adc
cld
sub
fists
in
push
imul
mov
cs
subl
adc
je
aam
mov
std
arpl
adc
out
mov
xchg
pushf
jecxz
add
adc
xlat
adc
add
cmpsb
popf
scas
insl
filds
cmp
jne
bound
push
dec
jae
lcall
and
rclb
adc
ret
imul
int3
stc
aam
fidivs
cmp
add
jecxz
cmp
fbstp
movsb
iret
xchg
test
fisttps
mov
call
cmpb
mov
add
aam
xchg
jle
push
sub
ror
rorb
cmpsb
in
shrl
dec
mov
adc
mov
ds
lods
js
pusha
gs
adc
xchg
in
loope
push
iret
jbe
ret
adc
push
inc
xor
add
jo
stc
popa
out
xchg
adcb
or
scas
cltd
sbb
addr16
xor
push
sbb
cmp
aaa
int3
sbb
mov
mov
cmp
test
dec
addl
adc
pop
inc
cli
mov
in
popa
xorb
lret
sbb
xlat
fistpl
mov
inc
push
inc
lds
cltd
nop
stc
int
xor
xlat
xchg
add
dec
pop
pop
mov
xchg
inc
jge
sub
push
xor
mov
mov
xor
mov
fldt
jge
shrl
ljmp
je
cmp
sti
dec
xor
out
sbb
pusha
ja
fbstp
ja
mov
mov
ret
lahf
jb
cmp
cmp
push
sub
add
jbe
adc
nop
xchg
lret
gs
outsw
hlt
sbb
cmp
lcall
mov
inc
mov
imul
jnp
into
aad
adc
inc
mov
imul
sub
cli
lahf
cmpsl
lods
loopne
ffree
push
hlt
mov
jo
sti
out
notl
incl
pop
push
insb
add
inc
inc
hlt
ret
mov
cltd
lahf
jp
test
jns
jae
xor
and
repz
les
lret
insl
mov
loope
and
add
sub
lods
aas
push
xchg
mov
iret
jbe
jo
xlat
push
push
out
xchg
sbb
bound
add
call
xchg
test
addl
pop
and
xchg
shl
sub
shl
xchg
jmp
outsl
push
ja
add
mov
data16
mov
lret
cmp
std
adc
lret
cmp
je
cmp
aaa
orl
leave
pop
add
in
inc
cmp
movsb
idivl
pusha
dec
mov
int
cltd
repz
xchg
add
shll
mov
pop
aas
loop
sti
dec
mov
divb
mov
xor
sub
jge
adc
lret
inc
cld
fcoms
sbb
pusha
inc
pushf
mov
test
inc
ljmp
mov
fidivrs
mulb
mov
rorl
xchg
pop
fs
or
xchg
lds
imul
push
fcoml
cmc
inc
sbb
pop
movsb
lret
dec
insl
mov
mov
or
push
lea
push
and
gs
icebp
fcomps
inc
aaa
sbb
pushf
jecxz
xchg
and
push
jb
adc
not
jmp
xchg
aam
mov
loop
xor
mov
xchg
cmp
cmp
xchg
jge
gs
leave
aam
sbb
fcompl
adcb
int
pop
sti
subl
enter
jmp
in
dec
and
mov
push
dec
aam
mov
add
or
imul
stos
lods
jo
cmp
jle
xchg
outsl
sub
aad
ja
jns
mov
clc
inc
mov
rcrb
add
fadds
xchg
jge
sub
adc
and
ljmp
push
cld
pop
mov
mov
movsl
sbb
out
fiaddl
inc
stos
in
into
stos
xor
into
and
cli
add
mov
push
lcall
repz
shl
xor
lcall
mov
ret
lods
xchg
mov
fxam
cli
data16
dec
push
sbb
cli
pusha
and
iret
mov
fcoms
mov
and
in
dec
and
out
sub
es
push
mov
dec
roll
and
cli
inc
nop
out
aas
mov
fiaddl
aad
xor
dec
das
jle
insl
je
pop
rcrl
lods
aas
lods
jl
xor
jl
or
out
ja
push
mov
imul
push
roll
sti
mov
fstp
fstl
test
shrl
int
scas
cmc
flds
pusha
data16
cmpsl
jg
repnz
mov
pop
lods
mov
stc
fwait
aaa
jnp
mov
test
mov
ret
stos
pushf
imul
dec
xchg
sti
dec
mov
dec
sub
repnz
clc
cmp
loope
mov
fnop
out
jl
pushf
ret
xchg
push
xchg
out
xchg
mov
mov
sbb
rorl
test
repnz
aas
icebp
out
inc
sahf
mov
je
lahf
fwait
out
lock
inc
in
fistl
push
and
jmp
movsb
mov
dec
add
push
rol
dec
lret
push
insl
out
in
outsb
and
fnstenv
push
sahf
push
jo
fistps
jbe
or
movl
adc
aad
es
sbb
mov
add
push
xchg
clc
jbe
push
dec
inc
jne
jbe
add
adc
push
mov
les
stos
in
movsb
mulb
imul
mov
jp
out
mov
mov
mov
pop
fldenv
or
dec
jne
bound
ffreep
lods
xchg
aas
dec
push
cmpsl
scas
call
jno
test
je
pop
mov
mov
outsl
mov
int3
cmp
inc
xchg
imul
sbb
enter
push
push
faddl
cmpsl
inc
fildll
jge
test
sub
lcall
dec
pop
cmp
aam
std
push
stos
mov
mov
notl
push
and
das
inc
ret
dec
data16
mov
ds
sbb
pop
cmp
ret
lcall
pushf
jp
imul
adc
mov
lcall
inc
dec
dec
mov
inc
pop
xor
pop
inc
test
shll
imul
cmp
pop
inc
jge
mov
push
int
test
pop
cmp
lahf
lods
push
mov
xor
and
xchg
add
sti
mov
lahf
push
scas
dec
dec
repz
jmp
xchg
movsl
dec
test
jnp
fdiv
sahf
not
clc
push
push
pop
and
and
jmp
sub
in
sbb
xor
mov
rorb
clc
arpl
inc
push
xchg
iret
test
push
jne
push
cli
pop
dec
popf
dec
xchg
pop
adcb
out
and
xor
int
xor
inc
add
out
fucom
popf
xor
pop
inc
inc
pop
inc
cs
aam
sub
lods
imul
mov
mov
push
sub
inc
jno
lret
sub
mov
divl
sahf
rol
lea
cmp
sbb
push
xchg
lcall
jne
mov
arpl
andb
cltd
fidivrl
xchg
daa
into
aam
out
push
mov
dec
cmp
les
inc
incl
scas
pop
mov
out
mov
xchg
aaa
cmpsl
xchg
sub
clc
loope
add
lods
mov
mov
mov
mov
sti
adc
xchg
push
jne
or
aam
in
xchg
jbe
ljmp
and
push
cmp
outsl
sbb
or
data16
cmp
daa
push
jne
iret
or
out
lock
pop
aas
inc
into
out
xchg
roll
or
cmp
and
movsb
lea
push
sub
movsb
pop
js
or
and
mov
test
dec
ret
stos
jno
push
pop
jne
add
cli
sub
adc
gs
xchg
lods
outsl
in
ret
idivb
mov
lea
mov
shll
mov
jecxz
mov
pusha
lock
xor
test
popf
and
mov
repz
mov
cld
xor
jnp
push
sub
sbb
data16
xchg
jecxz
ds
out
loope
xchg
repz
mov
mov
and
mov
aad
pop
test
pushf
arpl
or
flds
std
mov
xchg
mov
cmpsl
xchg
rcl
add
sbb
ret
insl
stc
sub
jo
out
push
outsl
sbb
test
gs
push
jg
inc
aam
lock
xchg
jle
aaa
mov
aam
mov
fwait
add
sbbl
push
jne
adc
outsb
jb
pop
hlt
lret
mov
jmp
fstpl
and
sbb
pusha
push
das
mov
movsl
mov
sti
loop
out
pop
loop
push
iret
lds
stos
adc
pop
sti
jb
cmp
mov
dec
loop
imul
ja
fucom
mov
cmpsl
cli
movb
xor
sbb
mov
fdivrl
fwait
ljmp
loopne
xchg
inc
sbb
loopne
insl
repz
test
repnz
mov
add
insl
jo,pn
sub
cld
add
fstpl
cwtl
test
shll
stos
mov
mov
dec
and
lcall
jge
icebp
jge
sub
sbb
imul
mov
int3
inc
xchg
jg
outsb
jns
mov
pop
pop
scas
mov
movsl
cmp
push
lods
fwait
imul
cli
sar
outsb
dec
aad
cld
mov
xlat
jne
dec
add
mov
cmp
in
mov
loop
xor
je
xor
push
dec
ffreep
fisubl
pop
xor
rep
out
adc
mov
push
mov
mov
push
iret
out
stos
insl
inc
sbb
inc
inc
test
mov
mov
cld
ds
into
test
sub
xor
dec
mov
mov
and
lahf
sarb
loope
in
shr
pop
pop
aam
lret
pushf
into
and
fptan
bnd
popf
dec
fnstcw
mov
adc
or
xor
pop
jb
call
pushf
xor
push
cs
fs
adc
xlat
and
outsl
cmp
or
sub
sub
sbb
addr16
xchg
jno
bound
and
js
add
ret
js
push
mov
mov
pop
push
int
sub
inc
or
cmp
lods
cmp
repnz
sub
ret
push
pop
or
add
les
inc
out
shlb
xor
shr
mov
stos
lcall
mov
sbb
adc
rclb
fildl
adc
ds
xchg
mov
imul
enter
mov
pop
fisubl
lret
outsb
push
iret
dec
arpl
cmpsl
push
cmpsw
stc
and
cmp
incl
cli
mov
hlt
imul
xor
mov
andb
ret
jg
and
xchg
mov
xor
subb
test
adc
mov
dec
jbe
lods
sbb
dec
loope
aam
adc
pop
mov
dec
sbb
rcr
mov
shrb
adc
add
mov
addr16
test
cmpsl
adc
sbb
add
mov
jp
ljmp
pop
orb
pop
adc
pop
leave
jns
into
ja
insb
xlat
cmpsb
jg
sub
mov
push
mov
jno
je
in
sbb
mov
aas
mov
call
pop
and
push
inc
or
jg
std
cmpsl
int
sub
js
sub
fs
and
hlt
mov
mov
pop
mov
mov
sub
inc
and
and
jne
sbb
testb
pushf
adc
xor
pop
mov
ljmp
arpl
add
or
or
cld
ret
int
lret
xchg
lret
lods
loop
std
push
repnz
repnz
push
leave
push
mov
push
cmp
cmc
insl
outsb
push
iret
pop
mov
mov
ret
dec
mov
or
jg
loopne
sub
sti
movl
flds
andb
repnz
push
call
pop
fnstenv
and
xchg
mov
sarl
mov
and
push
cmp
arpl
jg
mov
mov
jns
push
shr
daa
in
nop
ljmp
lods
out
push
test
arpl
push
mov
pusha
das
push
ret
xchg
xchg
ret
mov
cli
push
rorb
in
cld
sub
aaa
mov
enter
test
sub
and
aad
leave
jbe
nop
stos
jg
mov
jb
pop
repz
aaa
cmp
inc
adc
ljmp
mov
call
mov
ss
sub
mov
or
sbb
imul
lahf
or
xchg
mov
cltd
or
mov
jp
inc
test
pushf
xchg
jmp
and
mov
cwtl
and
add
les
out
icebp
jbe
dec
pop
sub
jb
mov
mov
jne
lret
roll
mov
rcll
xorl
cltd
loopne
cmp
pop
inc
enter
imul
rclb
jnp
jle
andl
roll
outsl
dec
jmp
cmp
jg
xchg
sbb
fsubrs
lret
push
out
sbb
jmp
outsl
ret
in
xchg
mov
sub
cmpsl
arpl
pop
dec
xchg
mov
std
neg
hlt
sahf
loopne
xor
sbb
mov
test
idiv
shlb
sbb
adc
cmpsl
cmpsb
iret
bound
sub
movsb
mov
loopne
cmp
sbb
push
pop
stos
ret
jle
adc
mov
cli
lret
cmp
ds
aad
mov
sbb
jnp
out
daa
pop
jle
xor
in
xorb
out
dec
cmpsl
pop
mov
fdivrp
xchg
sub
jp
leave
or
fimuls
jl
xchg
mov
sub
iret
ljmp
pop
aam
pop
movsb
std
ss
aas
ret
mov
adc
cmpsl
pop
xchg
ja
test
sbb
std
jmp
adc
stc
mov
inc
rcll
scas
sahf
xor
xchg
mov
and
jns
stc
jecxz
mov
outsl
shll
adc
sub
outsb
mov
enter
in
jp
test
mov
xchg
ficomps
sub
aam
xor
mov
and
aam
dec
rcll
hlt
std
test
xchg
xor
inc
imul
popf
pop
jmp
mov
inc
sub
jae
adc
jb
jp
push
test
addb
fisttps
xchg
insl
dec
adc
daa
xor
in
jmp
loop
or
icebp
imul
daa
mov
xor
sub
outsb
mov
fwait
push
jge
xchg
sub
stc
cmp
icebp
pop
inc
pop
and
arpl
xor
adc
movsl
arpl
or
mov
add
mov
pushf
xor
or
sbb
mov
pop
mov
rcrl
jl
in
pop
nop
xchg
in
sbb
gs
dec
mov
jnp
out
loop
adc
fidivrs
ret
movsl
sbb
or
pop
push
add
cmc
fwait
out
popf
lods
shlb
and
inc
push
fs
and
inc
adc
push
out
mov
clc
sbb
dec
in
sub
repnz
xor
jl
inc
pushf
inc
jmp
mov
and
push
clc
xchg
scas
testb
xchg
lods
inc
jo
jmp
sub
mov
sbb
xchg
dec
push
js
mov
rcl
add
xchg
subb
aam
call
lods
rcll
adc
mov
pop
addr16
pop
fcompl
add
ficoms
cli
and
pop
add
in
xor
in
push
xor
cltd
das
aas
adcb
dec
dec
inc
je
mov
adcb
ret
jno
lods
loope
cmp
cli
mov
jns
aaa
jecxz
sbb
icebp
pop
pop
adc
jecxz
pop
js
enter
cmp
cmp
jb
loope
dec
push
in
sbb
sbb
xlat
shlb
push
or
push
rorb
or
sub
push
inc
jle
jbe
in
sbb
mov
or
hlt
sahf
and
lods
or
lahf
add
mov
outsl
xchg
dec
jnp
mov
int3
sti
inc
loope
add
mov
lds
aaa
dec
adc
push
popa
sbb
std
cli
mov
lods
jmp
add
imul
push
xor
or
mov
rcll
lahf
enter
lret
push
add
xchg
rcrb
out
push
dec
push
jl
stos
sbb
leave
arpl
or
hlt
push
mov
jmp
out
xchg
push
cmp
je
pop
mov
loopne
sub
clc
frstor
fcmovbe
mov
add
out
jbe
xor
inc
lcall
inc
scas
xor
loop
pop
mov
and
negb
or
add
hlt
aaa
outsb
push
loopne
and
js
insl
add
into
or
add
or
or
dec
mov
out
aaa
inc
inc
adc
mov
inc
ds
das
sbb
out
out
or
test
aam
movsl
outsb
mov
add
xor
pop
movsb
jne
dec
sbb
pop
sub
xorl
push
int3
out
pop
inc
fxch
sub
sub
rcrb
js
out
lds
ja
jmp
xor
daa
push
arpl
inc
mov
or
outsb
lock
das
xchg
int3
shll
movsb
xchg
push
das
out
aad
outsl
fdivr
out
sub
mov
mov
add
push
push
pushf
add
subb
movsl
cmpsl
pusha
js
mov
leave
fisubs
inc
popf
and
sbb
xchg
mov
dec
popl
repnz
jne
jnp
pop
or
repnz
fwait
cmp
insb
or
in
mov
xchg
jne
shl
ret
fdivp
cmp
add
ret
mov
lret
jg
imull
and
js,pt
ret
fimull
add
iret
mov
daa
jg
xchg
repz
loope
insl
ja
stos
enter
imul
mov
push
jb
mov
or
cmp
out
loop
adc
sbbl
and
mov
cmp
loopne
mov
aas
push
ss
mov
lret
int3
xchg
hlt
lahf
and
es
mov
jb
or
hlt
js
cs
ja
cwtl
lds
pop
mov
notl
lahf
inc
pop
loopnew
pop
xor
cmp
shrb
dec
sub
pop
repnz
pop
mov
into
je
jbe
dec
dec
jno
out
enter
aad
mov
xor
mov
or
xor
pop
jnp
scas
cld
push
cmp
mov
push
sbbl
in
xlat
jle,pn
pop
addr16
loop
imul
mov
dec
jp
mov
or
xor
lock
mov
mov
stos
dec
cli
out
xchg
arpl
mov
lods
or
lret
insb
add
dec
movsb
sub
mov
sti
loop
stos
mov
sub
sti
in
nop
cmp
add
call
stc
jmp
ljmp
or
cwtl
sub
or
ss
adc
or
sahf
dec
aas
sub
in
fisubrl
cmp
dec
stos
addb
xchg
jb
xchg
mov
les
shlb
dec
xchg
and
push
lock
out
and
mov
mov
pushw
xchg
xchg
movsb
jno
data16
sarl
jo
xchg
inc
mov
adc
inc
popf
xchg
jno
push
lret
cmp
leave
fwait
repz
iret
mov
imul
mov
xchg
js
xor
fsubl
cmp
xchg
in
push
sbb
fmul
sbb
mov
in
repz
and
repz
mov
jle
and
js
ret
and
cs
dec
inc
ja
fsubs
aas
push
popa
sub
aam
mov
sub
std
cwtl
dec
mov
dec
jle
lret
sbb
subl
in
mov
cmp
dec
jle
fnstsw
divb
sub
fs
push
push
ljmp
scas
adc
xchg
lods
inc
orl
pop
xor
fnstcw
pop
out
mov
sub
jmp
inc
cwtl
pop
mov
or
jae
popa
call
xor
jno
xor
mov
push
sub
mov
mov
mov
xor
nop
xchg
lods
push
pusha
jle
loope
mov
inc
rol
aam
or
sbb
rolb
loopne
mov
fisubs
xchg
repnz
fisttpll
iret
inc
jl
xchg
or
push
mov
xchg
repz
loopne
mov
mov
mov
dec
mov
dec
daa
cmp
inc
or
add
cld
inc
lahf
mov
lahf
dec
jecxz
nop
push
xchg
mov
jmp
pop
fnsave
idivl
shrb
sub
inc
stos
bound
cmpl
jmp
sbb
mov
dec
and
cltd
shll
jno
push
test
scas
outsl
cltd
fstl
out
fidivs
xchg
mov
mov
sbb
mov
aam
clc
aam
or
cli
push
sub
dec
push
xlat
mov
daa
sbb
xchg
dec
cmp
int
movsl
xchg
int3
add
hlt
dec
jnp
call
pop
scas
adc
insb
xchg
mov
lock
inc
sub
dec
sbb
leave
dec
sahf
rcr
imul
in
pop
xor
ror
pop
gs
out
sbb
imul
sub
mov
jle
push
inc
pop
test
fwait
insb
ja
aam
mov
daa
xor
sub
push
mov
in
mov
cmp
mov
sbb
jae
out
and
dec
push
sahf
mov
cltd
jmp
sbb
push
repz
out
in
jl
lret
inc
pop
arpl
sbb
jge
cmc
js
rolb
lcall
jl
fsubl
rorl
les
pop
rorb
ljmp
adc
dec
push
xchg
mov
xor
jb
mov
jbe
inc
or
inc
rcrb
and
mov
js
xchg
inc
fwait
cwtl
add
aad
xor
xchg
mov
jno
sub
pop
and
jl
push
fstl
jge
mov
std
in
push
out
scas
push
or
cmp
ret
inc
xor
mov
cwtl
add
mov
pop
shrl
fsubs
pop
lods
in
mov
dec
out
lea
cmpsl
daa
pop
aam
and
mov
popa
inc
add
cmp
jno
push
cld
and
inc
out
insl
stos
out
push
mov
jmp
inc
mov
xor
pop
scas
mov
add
inc
sbb
and
orl
add
lods
stos
jmp
aad
fiadds
dec
movb
incb
aas
fsubr
leave
in
insl
xorl
inc
sbb
imul
adc
out
and
cli
xchg
mov
hlt
xor
or
enter
je
shrb
mov
push
sbb
fisubrs
lds
outsl
enter
loopne
dec
addr16
or
out
and
pop
push
mov
shl
and
or
dec
and
adc
mov
pop
imul
dec
shr
popa
imul
pushf
pop
pop
xor
jne
jnp
cmpsb
pushf
bound
addr16
fldenv
cmp
ljmp
fldt
out
jmp
cwtl
add
out
cwtl
sti
sahf
imul
mov
fildl
fs
add
push
and
ljmp
insb
std
jge
dec
mov
sbb
push
mov
arpl
test
jbe
test
inc
loopne
test
pop
xor
lret
xchg
hlt
mov
mov
xchg
or
stc
jl
lock
in
ljmp
inc
sti
scas
and
insb
fwait
loopne
sbb
sub
pop
jbe
leave
cmp
popa
mov
int
jmp
out
ret
xchg
push
in
repnz
jp
lret
pusha
mov
ss
setge
fsubl
sub
ret
or
jg
fdivrs
and
mov
sub
xchg
pop
xor
pop
js
dec
mov
sub
lcall
adc
sub
lods
add
ffreep
sub
nop
push
sub
inc
aaa
lock
jbe
xor
in
in
push
ss
dec
movsb
cltd
fs
lret
mov
jo
data16
push
dec
lods
or
xor
les
mul
out
cltd
dec
sbb
mov
push
and
push
mov
adc
push
mov
ss
xlat
pushf
cmp
mov
aam
sti
insb
xchg
sub
sbb
push
dec
lds
sbb
or
cmp
mov
inc
xor
dec
lret
rcrl
sub
shr
ljmp
ljmp
xchg
sub
mov
test
iret
ss
addr16
inc
xchg
mov
cltd
vcomisd
loopne
fldcw
in
inc
inc
jns
sbb
fstps
pusha
repnz
imul
cmp
clc
dec
cmpsb
ficoms
popf
enter
jo
cltd
xlat
push
add
jb
or
outsb
mov
jnp
out
push
movsl
sub
xchg
mov
mov
test
cmp
or
lods
or
sbb
jge
cwtl
lret
std
pop
out
outsl
sub
adc
jnp
mov
mov
fcom
sbb
js
rol
ds
xchg
add
pop
pop
scas
cmp
mov
pop
jno
fimull
push
test
pop
sbbb
sti
xchg
fwait
ret
mov
jbe
repz
add
inc
add
into
adc
sub
mov
lret
stos
aad
mov
mov
xor
ljmp
mov
mov
rorb
inc
cmp
and
mov
jae
sub
out
or
sub
mov
mov
xchg
inc
out
ljmp
ret
cwtl
mov
sbb
insl
or
leave
inc
gs
mov
jbe
xchg
push
fisttpl
adc
push
or
rcl
aas
xchg
xor
mov
arpl
cmpl
mov
pushf
ljmp
inc
in
popf
push
pop
jge
sub
mov
dec
lds
loop
aas
inc
and
push
notb
popf
cmp
incb
pop
pop
je
and
imul
xor
out
sbb
imul
or
movsl
stos
adc
mov
adc
lods
inc
and
loope
scas
repnz
fcmovb
xor
jae
test
jp
mov
and
mov
insl
push
scas
leave
into
imul
lret
ret
sub
dec
sbb
sub
cmp
push
out
mov
les
jl
fdivl
adc
rcll
jp
jns
dec
rcl
jecxz
js
push
mov
adc
mov
sahf
sarb
sub
pop
lcall
lret
popa
sarb
in
cmp
dec
ret
xchg
loop
cmp
inc
mov
pop
add
cmp
jmp
push
icebp
sti
das
das
pop
shl
dec
pop
jmp
ss
jge
cmpsl
lods
cmp
mov
xor
mov
or
adc
sbb
or
and
push
mov
js
ret
xchg
xchg
adc
shlb
xlat
xor
pop
add
call
dec
test
jne
orl
repz
in
jl
in
push
xchg
or
mov
mov
loop
xchg
sarl
jmp
pop
stos
cmp
sub
fistpll
jns
or
adc
pop
jg
sbb
jg
scas
fists
int
pop
stc
rcr
xor
xchg
push
sahf
jge
jl
or
sti
fwait
rcl
fisubs
push
sbb
cmp
pop
push
mov
ficoms
add
push
out
pushf
out
mov
sbb
inc
mov
addb
xchg
in
inc
sub
pinsrw
shll
xchg
sub
lock
add
pop
sbb
or
cmp
loope
sub
cmp
xchg
stos
ret
rcl
xor
xorl
adc
jae
cmpsb
jns
addl
ja
lds
lods
push
jnp
push
outsb
xor
push
daa
mov
sub
sub
add
dec
xchg
push
cmp
mov
bound
sbb
stos
call
sub
xchg
scas
lock
add
int3
jo
imul
fwait
enter
jno
scas
mov
dec
repz
in
dec
mov
mov
fcmovnu
fmuls
out
lret
adc
mov
mov
test
ds
cmp
loop
mov
mov
sub
xor
lahf
cmpl
inc
les
cmp
pop
insb
sbb
daa
xor
add
nop
push
xor
bound
push
fistps
mov
inc
cmp
scas
out
rcll
adc
cld
leave
iret
inc
gs
adc
int3
sbb
bound
popf
das
fiaddl
cmp
mov
add
jmp
fdivp
adc
dec
inc
push
in
jbe
int
lea
test
cwtl
mov
or
les
mov
repz
in
cwtl
xor
fwait
dec
out
aas
xor
xchg
pop
jns
jbe
nop
cmp
jecxz
xlat
jno
fdiv
lock
repz
jbe
jae
jge
push
pusha
ljmp
or
jae
pop
xchg
sbb
pop
add
mov
push
dec
and
push
clc
mov
lret
jno
aaa
in
xor
testl
mov
or
aam
mov
sbb
cmpsl
loope
add
ja
ficoml
out
xlat
lock
xor
jnp
inc
mov
ret
sarl
jae
fisttpll
aaa
inc
das
lea
stos
mov
ds
lods
test
aam
xor
test
lds
cmpsl
push
or
mov
adc
icebp
aaa
addr16
loop
xlat
mov
add
dec
cmp
add
ret
jo
inc
jae
xchg
xor
xlat
sub
data16
or
pop
add
xchg
mov
stc
aam
sub
stos
and
add
jno
mov
jno
ds
and
aas
sbb
push
sahf
dec
lea
jno
xor
rcll
sahf
pop
pop
mov
dec
das
daa
mov
cmp
sarb
in
nop
test
lret
add
mov
push
mov
sub
cmpb
mov
imul
pop
xor
cltd
insl
aaa
push
mov
mov
cmpsl
gs
pop
sarb
jno
dec
mov
pop
jmp
mov
add
enter
stc
push
mov
pop
sub
push
daa
lahf
xchg
and
lret
add
callw
sahf
and
lock
xchg
outsl
mov
inc
add
pop
in
mov
push
sbb
mov
cs
cmp
lcall
leave
adc
ficoms
jge
test
ljmp
insl
jb
pop
data16
jb
push
fbstp
mov
cli
pop
call
add
xor
push
jnp
inc
cld
data16
cli
adc
pop
push
int
cwtl
cltd
xor
sbb
movsl
jecxz
pusha
push
shlb
pop
repnz
je
fistps
lods
xor
pushf
mov
sbb
mov
dec
sub
mov
mov
and
push
sub
out
lret
cmp
out
pop
idivl
imul
push
in
inc
dec
ret
push
dec
mov
jb
lahf
outsl
jne
jmp
sbb
fistl
push
sbb
pop
repz
mov
adc
movsl
loope
gs
cmp
test
push
mov
xorb
stos
jecxz
push
push
mov
mov
cmp
mov
push
adc
lret
jecxz
insl
iret
jno
and
jge
sub
push
add
loop
add
and
fwait
jle
fld
mov
push
nop
testb
cmp
ret
and
js
out
ds
cwtl
adc
xchg
outsl
les
lock
test
aaa
pop
mov
mov
lea
lret
push
int3
mov
mulb
shr
rcl
aad
int
mov
mov
fists
mov
push
mov
add
and
inc
pushf
hlt
out
mov
mov
test
mov
cli
mov
out
push
dec
and
mov
pop
mov
xchg
outsb
xchg
add
sub
mov
out
pop
inc
or
cmpb
xchg
inc
lods
or
lock
push
pop
nop
pop
popf
out
jp
pushf
sarb
adc
ret
clc
fsubs
push
inc
out
cmp
mov
pop
push
popa
into
dec
pop
inc
cmp
loope
jae
xor
fstpt
out
sub
ja
sti
jno
sbb
stc
cli
mov
dec
addr16
adc
and
xchg
inc
xor
mov
fcoml
dec
add
push
call
cvtps2pd
out
inc
mov
in
mov
es
lods
sub
inc
pop
dec
xor
mov
pop
lret
jae
andl
sbb
or
mov
out
xchg
xchg
xor
je
cld
jmp
mov
push
sbb
stos
shll
jmp
jle
mov
inc
cmp
push
subb
mov
mov
jb
push
xchg
sbb
jmp
into
dec
ljmp
data16
shll
add
insl
adc
xchg
lret
push
sub
mov
or
scas
pop
pop
xchg
ds
mov
imul
cli
dec
xor
xlat
les
lds
insl
ds
inc
jmp
lea
or
mov
mov
fdivr
decl
lahf
aam
cmpsb
xchg
and
stos
jne
push
aam
shl
call
cmpsb
push
out
negl
cmpb
test
xchg
pop
fmul
jecxz
lret
mov
mov
fs
enter
data16
xorb
lods
jg
stos
out
movsl
xor
lcall
jno
jmp
push
jne
mov
hlt
and
mov
push
lret
mov
mov
scas
add
pop
jmp
ret
cltd
cmp
mov
mov
cmc
inc
ret
dec
dec
mov
ss
cmp
bound
mov
lcall
xor
xor
mov
hlt
mov
xor
mov
push
clc
push
sub
mov
sub
dec
jns
sahf
mov
xor
icebp
lret
mov
adc
xchg
add
cmp
xchg
sarl
leave
jnp
rcl
sti
daa
push
or
dec
cmp
test
fwait
clc
into
outsl
imul
jg
push
or
inc
dec
pop
sbb
push
push
cmp
cld
push
push
adc
test
pop
mov
dec
mov
addr16
out
insb
pop
roll
cmc
sub
jmp
push
fs
js
and
jae
add
inc
lret
scas
jne
sar
mov
dec
insb
rcr
inc
or
cmc
pushf
inc
pop
pop
or
xor
pop
dec
ljmp
jns
fldt
pushf
xchg
ret
dec
cmp
pop
jnp
jnp
cmpsl
dec
sub
xchg
mov
lcall
xor
popf
pop
sub
cmc
mov
push
cli
clc
shl
sti
lahf
stos
js
cmpsl
xchg
mov
idivb
aas
cmp
fidivrl
adc
loope
lret
inc
pop
insb
arpl
inc
mov
sbb
xor
das
rolb
fnstsw
ja
mov
iret
loopne
jns
mov
xor
daa
and
jp
fwait
add
lods
fisttps
xchg
push
shll
cmp
int
or
ja
lds
popf
xor
mov
mov
add
ljmp
nop
or
mov
leave
fisttpl
mov
outsl
addb
andb
mov
call
icebp
aas
aad
les
loop
pop
ret
sub
inc
lea
addr16
mov
and
sbb
pop
imul
inc
add
or
xchg
insl
cli
test
scas
popf
scas
or
rep
xlat
push
sahf
sbb
jno
js
aam
enter
xchg
push
ret
cmp
sub
or
loopne
pop
int
fidivrl
mov
in
in
inc
aas
ret
jb
mov
imul
int3
mov
mov
imul
ror
adc
loop
xorl
sbb
enter
xorb
in
and
cmp
sub
jecxz
mov
int
sbb
dec
scas
andl
shlb
movsb
ret
decl
inc
mov
leave
ss
jbe
daa
cmp
aaa
cmp
add
xor
stos
sbb
popf
lret
cmp
inc
aaa
xor
sbb
aad
mov
and
test
xorl
clc
outsb
cs
call
mov
shrb
jbe
sbb
ret
xchg
aad
iret
mov
call
jnp
cmp
ds
add
pop
es
ret
adc
test
outsb
lea
mov
mov
and
pop
fiadds
dec
adcb
push
and
mov
dec
fcoml
adc
sub
stos
and
lods
out
mov
inc
push
mov
fsubrl
pop
fldenv
icebp
rorb
mov
lods
add
push
imul
mov
rolb
aas
aas
arpl
pop
cmp
lahf
loopne
mulb
mov
cltd
xor
jp
mov
pop
push
jl
mov
test
imul
push
je
out
adc
mov
xchg
fwait
fs
cld
cld
mov
jge
ret
fisubs
aas
test
push
rcr
fst
icebp
or
xchg
pop
add
movsl
adc
nop
jle
xor
sub
push
stc
mov
adc
lret
adc
fwait
mov
push
test
xor
sbb
lods
lods
mov
or
mov
pusha
pop
out
ja
push
dec
out
call
shlb
enter
sbb
mov
mov
cmp
and
jge
clc
test
test
pushf
add
fs
pop
lret
popf
bnd
dec
or
stos
add
jb
mov
push
ds
divb
stc
cli
sahf
mov
adc
and
jmp
stos
icebp
xor
add
shll
data16
stc
subl
mov
mov
mov
lcall
pop
out
add
sub
push
jmp
mov
aaa
cmpsl
gs
mov
rcl
in
stos
add
popa
pop
lahf
and
mov
sub
mov
das
inc
xor
clc
clc
cmp
adc
ret
add
cmp
out
cmp
pop
sbb
pop
mov
jb
push
sbb
push
mov
divl
hlt
jle
inc
pop
imul
mov
shlb
bound
mov
adc
pop
shlb
xor
jge
mov
push
inc
ret
lds
mov
repnz
sbb
imul
ss
jp
or
cmp
sub
out
fcoml
mov
cmpsl
popf
sub
out
shll
jae
cmp
decl
xor
mov
push
idivl
add
sub
mov
addr16
mov
sub
inc
sti
sti
dec
mov
daa
repz
push
je
or
repz
insl
add
or
xor
imul
jo
jg
sub
jmp
adc
flds
outsb
xchg
test
add
dec
sbb
jnp
sbb
pushf
jbe
xor
inc
addr16
adc
jp
jb
jl
mov
adc
sbb
test
stos
movsl
push
xor
lea
mov
dec
sahf
imul
js
cmp
xor
xrelease
mov
xor
add
or
sub
sbb
jno
int3
out
mov
cs
pop
mov
sbb
das
push
es
adc
xchg
cmpsl
imul
cmpsl
sub
push
dec
pop
outsl
xchg
or
dec
sbb
mov
ljmp
xchg
jle
mov
jne
inc
mov
inc
ret
into
xor
mov
pop
dec
mov
int
xor
dec
outsb
pause
mov
aam
movsb
jp
ds
popa
sbb
add
popa
movsl
sbb
aad
imulb
aam
aam
and
fdivrl
push
push
jle
inc
testb
xor
scas
sub
inc
cmp
inc
aad
jno
sbb
nop
pushf
push
mov
bound
xor
push
mov
sub
shll
xor
xorb
lods
and
inc
pushf
ret
std
shr
loope
inc
lret
sahf
xchg
cmpsb
xor
frstor
and
xor
dec
mov
sar
nop
cwtl
pop
outsl
push
sbb
jno
fucom
fnstsw
jmp
sub
adc
jge
jmpw
in
in
ljmp
sbb
lock
loope
scas
sub
inc
dec
jbe
fwait
scas
mov
dec
lods
das
ficomps
testb
add
jne
es
mov
pop
mov
xor
shlb
aaa
pop
push
push
jecxz
xchg
lds
stos
test
mov
outsl
push
xchg
pusha
xchg
mov
in
xor
dec
testb
cmp
call
jg
push
mov
notl
or
sahf
outsl
mov
addb
daa
js
aaa
ret
mov
sbb
popa
ja,pt
xlat
xchg
test
dec
jg
dec
test
std
xchg
push
add
enter
dec
lea
shr
mov
popa
movsl
test
sub
xor
addl
push
int3
mov
mov
pop
das
das
mov
xchg
lahf
ret
fisubrs
inc
pushf
sti
or
aad
xchg
adc
push
add
pop
cmpsb
leave
imul
xor
lret
push
je
sarb
clc
cmp
add
imul
clc
cmp
push
mov
inc
fildl
jmp
jp
movsl
cmp
out
sbb
cmpsl
mov
es
add
stc
pushf
or
xor
mov
add
cmp
mov
pop
push
mov
scas
flds
adc
xor
sbb
pusha
xor
or
rcl
mov
call
iret
lcall
bound
out
outsl
mov
loope
xor
ss
pushf
lds
xchg
cmp
insl
movsl
les
inc
xchg
in
mov
fildll
sbb
cmpsl
pop
mov
dec
pop
or
mov
jecxz
shl
addb
outsb
add
ds
cmc
xchg
aad
movsl
mov
mov
pop
jle
lahf
add
or
jl
push
pop
ds
dec
leave
adc
mov
adc
push
pop
js
jno
adc
lock
and
outsl
int3
and
mov
jnp
scas
pop
mov
jmp
movsl
test
sbb
mov
jo
repz
dec
cmp
lods
sar
dec
dec
xlat
andl
xor
insb
hlt
minps
cltd
inc
loope
mov
pop
cmc
push
and
f2xm1
into
sbb
ja
cli
outsb
xor
fwait
sub
in
xor
push
push
sysenter
mov
pop
dec
push
mov
cwtl
imul
mov
pushf
cmpsl
jae
call
xorb
lahf
out
popf
adc
xchg
js
fidivs
pop
lods
in
pop
icebp
sarb
push
sub
jl
add
adc
sbb
mov
lret
xor
jae
push
lock
cs
and
js
idivl
lcall
insl
lret
jmp
fidivl
push
jo
aad
jge
jnp
sbb
dec
pop
sbb
stos
mov
data16
ds
mov
pop
out
jmp
xorb
gs
fwait
dec
xchg
in
mov
or
sub
je
inc
daa
lock
adc
in
pop
into
sbb
mov
or
sti
je
pop
xchg
iret
insl
push
xor
out
cmpsb
inc
les
call
shlb
pop
test
mov
ja
xchg
mov
jno
subb
testl
jecxz
xor
mov
lahf
jns
data16
test
ds
add
pop
sarl
mov
loop
dec
pop
xchg
ljmp
adc
mov
cs
sbb
cltd
test
add
jg
jbe
aaa
sub
push
stc
pop
inc
arpl
mov
or
scas
xchg
and
sbb
mov
addb
push
das
pop
fs
sub
mov
lahf
mov
rol
ret
sbb
fwait
lret
iret
test
int
sbb
test
iret
xchg
mov
iret
in
push
cmp
inc
push
je
add
xor
dec
or
std
outsl
es
jae
add
daa
out
fs
mov
jae
fidivrl
jo
sub
mov
push
xchg
mov
and
pop
je
mov
decl
outsb
iret
xchg
xchg
mov
sbb
lret
in
in
and
sbb
pop
stos
int
aas
xorb
sbb
loopne
sbb
cmp
jmp
sub
and
mov
or
pop
dec
mov
or
xchg
out
push
fdivrs
stc
xchg
push
adc
rcrb
jns
sbbb
pop
sub
addl
inc
pop
or
jno
mov
ja
inc
into
sbbb
sub
push
aam
cmc
ss
sbb
mov
dec
stc
popf
iret
cmp
sub
mov
shl
into
cmpsb
adc
push
pop
in
data16
out
dec
gs
dec
repnz
je
out
and
ficoms
jno
arpl
sbb
stc
fwait
push
jnp
scas
fucom
std
hlt
out
push
sbb
nop
dec
aad
xchg
or
jb
cli
testb
cmc
dec
pop
pop
rcrb
in
hlt
std
mov
sub
in
addb
mov
xchg
adc
pop
and
flds
andb
imul
add
cs
lret
bound
loope
clc
not
pop
mov
mov
fidivl
mov
mov
push
xlat
cltd
int3
mov
lret
jp
sub
lahf
xchg
dec
loope
repnz
jmp
inc
clc
cmp
popa
rolb
or
push
inc
int
push
imul
stc
push
outsb
out
out
rolb
in
fcmovnu
mov
add
cs
je
pop
adc
mov
sbb
scas
sbb
les
dec
mov
sbb
pop
int
mov
dec
enter
cld
sub
or
loopne
sbb
addb
mov
jl
mov
jo
push
xchg
mov
xchg
push
imulb
pop
xor
lock
cwtl
lcall
imul
lcall
push
dec
js
nop
add
addb
shlb
jmp
movsb
fsubrl
mov
push
cld
call
or
sbb
lods
rcr
jo
xorl
mov
stos
xchg
pop
lods
xor
jp
add
daa
fdivrl
jne
dec
and
mov
mov
jp
loope
dec
jg
fnstenv
mov
mov
mov
sub
cmp
and
cwtl
sbb
adc
mov
cli
sub
inc
fwait
popa
lods
push
add
mov
adc
mov
xor
mov
cmp
and
sbb
repnz
and
incl
and
cli
hlt
int3
sbb
xchg
cli
dec
test
jo
add
mov
cmp
dec
jp
mov
loopne
ret
fsubp
repz
je
lahf
ds
fwait
inc
push
or
xchg
cmp
and
mov
mov
push
cmp
xor
cli
sbb
and
xchg
mov
pop
mov
ss
inc
js
push
adc
addr16
adc
aam
mov
les
inc
es
inc
fisttpll
shlb
sub
ja
mov
pop
xchg
divb
imul
arpl
daa
stos
jb
js
popl
fld
xlat
inc
or
mov
out
add
sub
into
push
adc
mov
xchg
mov
mov
test
jle
fisttpl
jmp
inc
sub
xor
mov
lods
xchg
into
add
mov
mov
pop
xchg
push
aad
mov
add
sbb
jmp
dec
xor
data16
mov
jbe
dec
in
clc
dec
xchg
cmp
inc
js
fstps
adc
mov
mov
xchg
jae
cs
lret
stos
jb
dec
test
xchg
testb
das
inc
sub
mov
rorl
loopne
xor
imul
dec
mov
decl
jge
inc
cwtl
mov
adcl
xchg
mov
adc
bound
scas
cmp
xchg
stos
inc
xchg
jne
push
mov
jno
inc
insb
jo
jb
pop
sub
sbb
or
or
mov
xchg
dec
test
mov
repnz
xlat
or
sub
nop
dec
scas
int
xor
jmp
shll
imul
lods
inc
fsubrs
fsubrs
jae
xor
jge
cmpsl
rcll
inc
cltd
mov
jae
push
push
pop
imul
es
xlat
stos
cmc
push
inc
add
cmpsl
movsb
push
cltd
lock
and
outsb
scas
add
ljmp
cmp
in
sbb
je
arpl
das
mov
das
jp
leave
mov
in
mov
andl
inc
cmc
test
jns
adc
add
inc
popa
push
lods
shrb
adc
add
dec
mov
pop
push
imul
add
imul
dec
mov
daa
hlt
ljmp
lcall
xor
sub
xor
ret
xchg
int
add
push
jge
adc
and
pop
pop
bound
add
icebp
ds
lret
xor
cli
ret
xchg
push
push
mov
xor
xchg
xchg
es
cmp
in
mov
push
mov
mov
js
pop
scas
sbb
mov
adc
mov
sbb
pop
insl
repz
lret
jl
das
cmp
imull
pop
sub
shr
test
rcll
mov
lods
mov
rcr
and
push
out
inc
push
push
pop
test
xchg
in
sbb
ja
icebp
fisubs
and
div
pop
ss
adc
adc
mov
and
in
hlt
leave
fdivrl
mov
out
inc
xchg
popf
and
adc
dec
add
outsb
sub
mov
mov
filds
mov
fs
js
jmp
cld
outsb
mov
jl
mov
in
sti
pop
fstpt
pop
aaa
inc
mov
fwait
lock
mov
dec
sbb
in
dec
sbb
dec
sub
inc
fsubl
mov
mov
xchg
push
fldenv
sub
xchg
fidivrs
lret
mov
xlat
sub
pop
dec
add
movsb
sbb
mov
push
aaa
aam
adc
mov
mov
enter
jno
out
mov
fwait
pop
xchg
mov
adc
aad
xchg
leave
mov
cmp
mov
cld
out
mov
mov
jmp
push
loope
fdivrp
jbe
sub
cmp
leave
cmp
ss
inc
nop
loope
mov
sub
or
test
or
cmp
rorl
inc
insb
movsl
loop
call
out
xbegin
cltd
and
cmp
or
or
dec
xlat
sbb
jb
dec
sbb
inc
adc
insb
shlb
mov
in
jmp
pop
xor
inc
sub
sti
cmpsb
out
cwtl
outsl
xchg
inc
in
insl
jecxz
pop
xchg
pop
int
adc
cmovge
das
jecxz
push
pop
repz
pusha
sub
scas
inc
gs
into
gs
xor
not
lret
sub
aaa
push
clc
ljmp
mov
or
sub
je
mov
sbb
bound
xor
mov
mov
mov
inc
repnz
enter
aad
xlat
jbe
fimull
pop
mov
div
inc
das
dec
call
or
or
aam
mov
pop
fsub
les
jmp
std
fbld
stos
movsb
inc
cmp
push
add
pop
or
push
pop
pop
call
adc
add
push
xchg
pop
cmpl
add
add
jo
scas
das
test
ret
stc
gs
mov
in
push
addr16
xchg
jmp
mov
dec
pop
popf
push
fsubs
shll
iret
je
cvtps2pi
push
les
andl
cli
xchg
pushf
xchg
jg
jns
mov
pop
rcrl
sub
pop
js
pop
scas
mov
jecxz
test
lcall
jb
pusha
insl
mov
std
lret
lcall
stc
cs
cmp
rorl
dec
int
adc
xor
jecxz
imul
mov
sub
pop
sbb
hlt
loopne
out
cmp
sub
sahf
sbb
mov
adc
add
pop
dec
mov
insb
and
outsb
aaa
arpl
sbb
jb
jb
mov
mov
jbe
iret
out
push
add
xchg
mov
sbb
dec
mov
aad
ljmpw
fists
xchg
aad
out
cmp
jl
inc
test
mov
insl
test
ljmp
cmp
mov
sub
and
or
jb
iret
adc
shlb
into
loopne
jl
sbb
cmp
mov
adc
xchg
shrl
inc
mov
jbe
jmp
stos
xor
addr16
mov
add
mov
sbb
pop
jge
out
mov
rorl
mov
daa
int3
jnp
sub
adc
test
in
jne
scas
mov
sub
insl
jmp
or
stos
aam
pop
cmpsb
dec
and
mov
ficoms
mov
stos
pop
nop
stos
xchg
sbb
mov
jne
imul
push
jne
es
scas
sti
std
mov
jbe
pop
and
incb
out
lret
or
fidivrs
sub
out
data16
js
mov
scas
pop
testl
inc
mov
dec
inc
mov
mov
int3
repnz
xor
sub
cli
or
push
inc
xor
inc
shlb
cmova
fnsave
jb
jbe
xor
or
sbb
pop
mov
adc
negl
cmp
mov
hlt
jne
hlt
mov
jp
or
nop
sub
stos
rcl
mov
imul
jb
jnp
decl
dec
pop
out
ret
pop
mov
xlat
int3
es
mov
adc
out
jp
jl
cmp
ret
cmp
push
cltd
jecxz
sbb
inc
or
pop
push
mov
stos
mov
mov
cmp
repz
jnp
sbb
jae
mov
sub
shlb
dec
jns
xchg
jp
inc
push
ret
mov
cmp
push
sarl
orb
aas
in
mov
xchg
cs
aad
mov
mov
int3
mov
int
iret
sbb
xchg
popa
xlat
cmp
jnp
aam
lock
pusha
dec
and
inc
and
arpl
jae
jg
pop
mov
iret
repz
rol
call
ret
rorb
ja
cmp
mov
xchg
fisubs
je
xor
in
or
ja
repnz
jge
fisubs
fcompp
cmc
sbb
add
and
push
dec
ss
mov
xor
popa
xchg
push
loopne
out
call
sbb
mov
inc
sub
jg
pushf
sbb
sub
mov
clc
movb
out
sbb
inc
pop
enter
jb
hlt
or
out
xor
adc
push
lahf
call
test
cmpl
movlps
lods
hlt
imul
sbbb
dec
pop
in
mov
and
test
dec
lret
pop
stos
cmp
push
fistl
fdivs
mov
push
jp
pop
cltd
addr16
rorl
or
stc
sbb
bound
icebp
sub
jle
or
imul
dec
ficomps
push
std
cmpsl
sbb
sbb
hlt
stos
in
daa
pop
mov
shlb
and
mov
cltd
pop
lret
push
inc
lret
jmp
inc
sub
mov
les
in
inc
pop
push
push
and
lret
filds
sub
adc
push
ss
inc
xchg
and
sbb
pop
mov
shrl
sbb
ret
mov
mov
call
jmp
jg
inc
push
dec
call
mov
mov
movsb
jmp
into
or
jmp
cmp
jno
insb
or
cmpxchg
push
shrb
pop
push
push
xchg
orb
jmp
add
movsb
pop
sub
sarb
mov
pop
sti
mov
test
pop
and
mov
getsec
inc
adc
push
inc
cld
test
mov
clc
jp
inc
test
jle
push
mov
push
xlat
mov
lret
push
andl
shll
int
stc
sarb
test
aas
push
ja
adc
fldcw
fistpl
push
addr16
je
inc
jmp
push
fwait
rclb
orl
or
pop
push
test
fldl
xor
ds
in
in
fstl
xchg
sbb
iret
sub
out
adcl
or
jns
cmp
fnstcw
leave
pop
adc
adc
xchg
xorl
test
inc
add
adc
aas
repz
repnz
pop
test
jo
pop
sub
pusha
mov
aam
add
fistpll
mov
call
inc
sbb
outsl
xor
popf
lea
mov
add
enter
rcrb
aad
cmp
jbe
clc
rcr
push
jbe
or
or
mov
push
mov
pop
mov
add
mov
inc
pusha
pop
xor
jbe
ficoml
mov
jmp
sub
cmp
or
hlt
mov
and
pop
push
in
orb
lret
xlat
data16
cmp
stos
gs
xor
jl
inc
inc
sti
gs
iret
jg
xor
push
xchg
cmc
into
sub
js
mov
push
jbe
jae
dec
sbb
inc
mov
in
mov
cmp
push
repnz
and
ficompl
xor
or
mov
stos
mov
pusha
out
mov
out
add
fldcw
xor
jns
cmp
mov
bound
adc
std
sub
fiaddl
arpl
mov
mov
sbb
sarb
fcomp
cmpsl
ret
fld
cmp
aas
jnp
addb
pop
mov
push
ret
adc
out
xor
sub
fwait
lret
fnsave
xchg
aam
in
mov
bound
jmp
ss
mov
or
push
stc
ror
ja
or
sbb
sub
lret
xlat
mov
push
cmc
ja
adcl
lret
mov
pop
inc
pop
jns
in
xor
jb
sbb
dec
adc
stc
sbb
sbb
je
jge
movsl
lods
adc
lods
cwtl
cltd
add
xorb
mov
or
sub
loop
icebp
mov
stos
inc
or
subb
mov
sbb
mov
dec
out
in
test
jb
test
divb
fcomps
in
ret
inc
push
addr16
int
leave
xchg
cld
jp
xchg
fsubrs
int
bound
mov
jns
add
pop
cmp
dec
andl
in
mov
ret
pop
xor
call
push
xchg
dec
out
dec
pop
subl
xchg
sub
sahf
jns
sub
sbb
dec
cs
scas
inc
orl
sub
lret
aas
je
and
or
repz
ret
push
mov
adc
xchg
lret
push
adc
pop
fsts
enter
nop
sbb
sub
clc
xchg
pusha
ss
xchg
xor
inc
xor
out
out
inc
or
push
insl
pop
or
sub
js
popf
xchg
cmp
lods
das
out
inc
ss
mov
rorb
insb
outsl
push
pop
jecxz
out
cmpl
xor
insb
out
loope
mov
dec
push
not
xlat
mov
rorl
imul
mov
add
sahf
test
push
pushf
push
jge
dec
clc
adc
fists
xlat
lcall
pop
adc
pusha
out
aas
cli
push
mov
in
pop
dec
scas
pop
dec
sti
and
jge
loop
test
cmc
mov
push
stos
pop
push
imul
mov
loop
push
aad
mov
mulps
js
fistl
out
xor
lea
imul
lcall
and
ret
jp
adc
jbe
callw
sub
adc
push
roll
aad
mov
stos
hlt
arpl
xor
mov
loope,pn
clc
dec
imul
pushf
sti
xchg
adc
ret
and
jmp
dec
imul
mov
stos
out
mov
add
inc
enter
sub
les
add
push
push
mov
mov
push
cmpl
nop
xor
repz
fimuls
fwait
pusha
pop
cmp
aas
xchg
ret
add
das
fisubl
mull
roll
inc
push
inc
cmp
dec
add
add
rorb
mov
dec
xchg
push
ret
cmp
push
loop
or
cs
lock
int3
inc
inc
add
mov
dec
fucomip
xor
cmpsl
imul
jbe
sub
test
mov
push
mov
pop
nop
clc
lock
or
jo
cmp
xchg
mov
mov
hlt
jne
mov
jg
pusha
out
fcmovbe
mov
sub
loopne
push
addl
xor
lret
push
pop
bound
ja
ss
mov
rcr
lcall
out
mov
subb
ret
aas
push
fwait
push
stc
dec
test
cs
cmp
stos
sbb
jns
mov
mov
data16
xchg
lret
jno
push
data16
ret
and
and
scas
out
lods
xor
mul
mov
jl
imul
sub
repnz
push
mov
into
test
insl
push
ror
add
call
sub
xchg
cmp
movsb
bound
jmp
lret
mov
clc
imul
pop
call
sbbb
popa
xchg
out
sub
pop
sub
test
or
jg
lods
cli
push
push
gs
test
and
rclb
mov
or
sub
test
fdivrl
nop
mov
lret
cmpsl
or
sub
add
add
decl
les
mov
repz
sub
mov
mov
xorb
aas
movsl
sub
adc
rorl
lcall
daa
pop
aad
pusha
add
cltd
or
push
jmp
sbb
testb
stc
aad
pop
fdivrs
sahf
lahf
data16
lods
push
les
and
add
sbb
mov
scas
add
xlat
adc
loopne
enter
pop
or
jne
or
fsts
idivl
adc
xor
mov
fadds
mov
push
pusha
push
and
mov
fsubl
jo
pop
pop
aad
jl
stos
mov
imul
push
and
outsl
lcall
push
movsl
negl
jno
sub
cmp
dec
push
repz
jg
jb
fwait
jns
or
xchg
fwait
nop
arpl
push
aaa
lret
stos
mov
or
xchg
aas
jo
and
stc
dec
push
sbb
lret
xchg
ret
xchg
add
push
jno
outsb
or
outsb
dec
add
mov
movsl
fistps
pushf
inc
cs
add
sbbb
and
insl
shl
fwait
call
loopne
push
leave
push
aas
jne
leave
leave
cmp
in
xchg
mov
jnp
cmpb
pop
in
mov
add
sub
mov
daa
jnp
jecxz
andl
push
xor
sbb
mov
jae
stos
dec
pop
add
xor
mov
xor
lea
lds
ss
mov
xchg
ret
adc
push
imul
arpl
loope
push
loope
and
mov
arpl
bound
and
leave
test
and
setl
add
aam
repnz
and
gs
jne
sub
cltd
dec
mov
lods
jbe,pt
stc
cmp
cmc
push
outsl
stos
test
fwait
or
xchg
sbb
mov
lea
insb
sub
add
mov
lret
inc
aaa
in
movl
mov
iret
jae
fxch
dec
pushf
xchg
jns
popf
sbb
pop
inc
aam
jle
aas
repz
xchg
sti
enter
xor
enter
sub
and
dec
lea
lea
fildl
jg
gs
cmp
cmp
sahf
rcrb
push
push
mov
cli
stc
call
jns
dec
sub
jbe
add
lcall
jmp
addr16
sub
inc
pop
shlb
clc
lds
sar
sub
test
test
mov
push
jle
cs
push
rorb
pop
xchg
push
dec
push
mov
stc
shlb
add
hlt
cmp
mov
shlb
int
stos
aas
xchg
fadds
mov
push
or
fistpll
mov
stos
mov
test
and
xor
cmp
push
jb
loop
pop
cmp
sarl
sbb
test
rclb
fnsave
sub
test
xchg
inc
hlt
or
int3
inc
xlat
adc
mov
xlat
leave
movsb
popa
or
aaa
xor
xor
pop
xor
in
fildll
imul
out
sarb
add
out
cmp
sbb
xor
stc
or
pop
mov
jns
push
add
inc
inc
mov
mov
pusha
sub
mov
ds
sbb
sahf
je
iret
aas
xchg
push
mov
into
pop
sbb
push
or
xchg
mov
sub
lret
jg
inc
loopne
xlat
dec
add
jmp
mov
xchg
gs
sub
sbb
jmp
fimuls
mov
and
push
pop
sub
roll
inc
pop
xor
in
push
push
cmp
xlat
jecxz
movsl
pushl
dec
stos
jns
cmp
imul
negl
push
mov
aam
iret
pop
leave
mov
jmp
jae
jl
jecxz
daa
lods
iret
mov
clc
mov
int
lods
adc
cmc
leave
daa
adc
sbb
negb
mov
cmp
sbb
or
pop
xchg
test
dec
pusha
cmpsl
cmp
enter
idivl
pop
xchg
insl
jg
sub
mov
mov
movsb
out
movsl
push
jbe
cli
bswap
dec
insb
pop
gs
pop
dec
scas
mov
mov
mov
or
ljmp
popf
push
cltd
xchg
and
mov
push
lods
nop
sub
fisttps
cltd
xchg
testb
xorl
stc
mov
jl
jne
xchg
mov
popf
add
es
adc
jns
leave
clc
fadd
inc
cltd
jb
or
inc
dec
das
mov
xchg
mov
test
sub
mov
int3
mov
ljmp
and
xor
cmpb
cmpsb
arpl
pusha
stos
jp
mov
repnz
out
cmpsl
or
sbb
aad
cmp
test
ljmp
jae
jl
pop
shl
das
dec
add
sbb
jmp
loop
movsl
insb
jnp
jns
repz
push
enter
dec
orl
push
cli
decb
add
repz
std
gs
out
xlat
hlt
jns
or
cmc
out
sarl
sti
ficoms
loopne
jp
fiaddl
rorl
mov
movsb
mov
fadd
cmc
out
lods
mov
cwtl
lret
insl
xchg
pop
fidivs
fwait
movsl
sbb
adc
scas
or
jmp
push
sbb
les
add
xor
lods
cmp
or
js
push
push
or
andl
aaa
dec
and
mov
pop
sarb
jns
cmp
mov
mov
popa
and
sbb
insl
loopne
mov
out
sub
jb
jge
in
jmp
lcall
inc
fldt
ret
mov
stos
jne
js
adc
fdiv
call
push
inc
js
dec
pusha
xor
sbb
cmp
fisubl
out
inc
cmpsl
push
in
dec
inc
lret
hlt
sbb
dec
arpl
mov
adc
into
jmp
dec
sbb
inc
fs
in
pop
mov
aad
sub
es
js
ds
movsb
mov
sub
adc
aam
test
rcrl
into
add
insl
pop
addl
sbb
sub
and
fbstp
data16
add
pop
fcoms
in
jo
xchg
push
jmp
enter
das
xchg
popf
fiadds
fsubrs
pop
loopne
jp
mov
jno
pop
int3
mov
outsl
xchg
iret
int3
ficoms
pushf
inc
dec
out
pop
pop
dec
movsb
jo
and
inc
pushf
iret
inc
add
inc
jae
sub
xor
sub
xor
jp
lret
push
fs
push
cmp
aad
and
lds
and
scas
sub
aaa
es
fwait
pusha
push
inc
jb
loopne
stc
adc
aaa
sub
push
fldenv
nop
add
xchg
push
jmp
outsl
cmc
pop
lahf
jp
push
sub
popa
pop
sbb
xchg
iret
xor
mov
popa
enter
cmp
cld
mov
call
clc
lock
cmp
dec
sahf
int
repz
cmp
pop
cmpsb
push
pop
push
jle
shrl
test
scas
test
scas
adc
icebp
add
adc
les
mov
je
rcrb
xchg
test
xchg
loopne
cmpsl
xchg
sti
jmp
popf
cmp
orb
dec
xchg
xchg
cmp
push
cmp
scas
mov
xchg
adc
dec
int3
lret
fiadds
pop
xorb
lods
push
xchg
leave
int
push
stos
pop
inc
addr16
xchg
das
dec
cmpsb
sbb
repz
sub
xor
into
pop
jecxz
popf
dec
repz
leave
jmp
xor
xor
jo
in
fstl
aad
cmc
adc
xchg
fwait
insl
xchg
push
in
sub
test
add
mov
ret
mov
cmp
lahf
sbb
and
dec
xor
arpl
mov
sbb
test
mov
test
addr16
cmp
es
lahf
shll
es
mov
lret
subb
outsb
in
dec
clc
xor
loope
push
and
jno
adc
cmp
subb
cmpb
and
addl
push
shll
add
fstpt
cmpsl
mov
and
jle
or
cmp
repz
mov
mov
imul
push
mov
inc
out
xor
call
push
push
dec
dec
mov
shl
jnp
adc
stos
movsb
pop
sub
dec
into
fs
outsl
lcall
hlt
push
mov
or
hlt
repnz
inc
cmp
lock
addl
sarb
stos
jo
stos
mov
add
fdivs
aad
pop
dec
scas
mov
lahf
adc
leave
xchg
mov
jle
ljmp
push
nop
mov
jne
fsub
shll
pop
jmp
shrl
jge
sahf
clc
xchg
repnz
jne
das
lds
fstp
fcompl
lret
ljmp
xchg
out
dec
and
insb
vmulps
jns
addr16
sub
mov
ljmp
inc
and
sbbl
in
cmp
sub
mov
ljmp
fwait
pop
in
mov
sub
pop
es
inc
add
int3
dec
pop
lret
and
ss
mov
test
xchg
mov
addr16
test
xor
mov
jnp
dec
or
pop
int3
pop
xlat
lock
mov
lds
or
inc
sub
sahf
dec
add
repz
ja
adc
test
test
xor
mov
addl
movsb
add
shll
jle
stc
addb
and
mov
rcr
int
incb
popf
shlb
mov
push
enter
inc
fs
insl
and
sbb
pop
jae
mov
or
hlt
sub
stc
insb
mov
push
call
addr16
jns
int3
cmp
int
int3
mov
jbe
cld
push
rcrl
xchg
stos
mov
sbb
and
mov
dec
cmp
cltd
jo
ja
push
cli
call
fs
dec
dec
fdiv
insb
sahf
aaa
popa
icebp
loope
ljmp
adcb
adc
xchg
xlat
or
add
add
pop
mov
cmp
pushf
adc
in
aad
js
imul
or
shld
in
lcall
int3
ja
add
andl
clc
jae
push
icebp
xor
aam
fcmovnb
inc
sub
mov
dec
add
pop
and
scas
loop
iret
pop
mov
scas
pusha
sub
jmp
jle
add
mov
mov
mov
push
iret
add
jb
dec
dec
jge
jmp
add
mov
xchg
rol
leave
out
sbb
inc
test
mov
mov
mov
or
stos
cmpsb
jns
push
push
jno
cmp
add
push
arpl
push
jbe
cmp
push
and
mov
les
and
enter
xorb
das
xor
icebp
dec
mov
push
lahf
mov
dec
add
push
aad
cmp
test
push
and
and
xor
mov
sbb
das
mov
cs
or
xchg
push
xchg
cwtl
inc
lock
xchg
inc
xor
sub
add
call
insb
push
sbb
in
sub
xor
sbb
xchg
sub
std
cld
push
fstps
inc
and
lahf
jge
mov
sub
subl
lock
or
pop
in
stos
pop
les
insb
loop
or
arpl
sub
fxch
cmp
adc
mov
push
push
aam
outsb
adc
outsb
xchg
jb
pop
sub
mov
aas
fldl
adc
or
insb
or
repz
ret
testb
nop/reserved
sbb
std
stc
cmp
popf
cmp
push
mov
iret
pop
je
mov
or
and
jo
and
sbb
lea
ss
dec
aam
pushf
add
cmp
aas
push
popf
mov
xchg
and
sbb
or
push
add
repnz
test
cmp
je
cld
ret
push
pop
xor
push
repz
std
mov
inc
inc
popa
add
pushf
call
or
fsts
outsb
inc
test
rclb
jbe
sub
scas
add
and
add
je
dec
jae
add
ss
fisttpl
mov
jnp
repz
shlb
fwait
pop
lahf
mov
inc
and
pusha
inc
pop
inc
mov
sbb
int3
in
outsb
lock
mov
push
xor
sub
sub
sub
std
icebp
pop
or
push
pop
mov
push
jmp
sub
sbb
jl
or
adc
or
or
lods
and
mov
idiv
mov
mov
cmpsb
insb
rorb
or
test
clc
fisttpl
test
push
arpl
shlb
xchg
add
jne
icebp
ret
call
loop
sti
add
sub
mov
jns
orb
and
pop
repz
push
mov
or
dec
xor
or
test
fidivrl
mov
enter
jb
mov
cmpsl
sub
add
aas
add
mov
cmp
imul
mov
mov
xchg
test
leave
inc
mov
jo
xchg
out
fstl
sbb
ds
mov
adc
cmp
xchg
and
rorl
test
pop
mov
fbld
testl
test
dec
mov
sbb
mov
add
stos
stc
xor
mov
out
jge
bsf
pop
push
cld
out
fildll
and
sbb
js
mov
mov
sbb
das
inc
clc
dec
orb
xchg
shl
cmp
fwait
lods
out
xor
rol
es
mov
inc
imul
jecxz
pop
dec
rorl
pop
adc
mov
inc
xchg
movb
inc
xchg
inc
in
mov
mov
out
sbb
cs
test
cmpsb
icebp
pop
scas
pop
inc
aas
in
pushf
sarl
cmp
sbb
js
jg
jmp
loop
fsubl
popf
rol
mov
add
mov
daa
leave
lods
xchg
xchg
sub
xor
fmul
aam
mov
clc
sbb
mov
dec
pop
stos
sbb
in
adc
and
push
ret
je
xor
inc
inc
aad
js
push
and
mov
mov
call
lods
enter
push
xor
pop
sbb
outsb
xchg
or
mov
mov
in
fiaddl
mov
loopne
bound
jae
js
xor
mov
arpl
dec
sahf
add
je
or
xchg
sarl
int3
out
shlb
into
test
repnz
mov
or
mov
popf
mov
dec
cmp
stos
adc
cli
sahf
jecxz
add
lock
cmp
lret
int3
mov
mov
test
jl
cwtl
ficoml
icebp
mov
sbb
ljmp
jle
add
and
jnp
push
mov
int
mov
fbstp
in
add
jmp
inc
jecxz
lret
out
ret
mov
sbb
dec
sbb
out
sub
sbb
pop
pop
mov
scas
out
ret
cmpsl
cmp
fwait
lcall
jne
cmp
not
jb
imul
clc
loop
test
and
roll
mov
mov
repz
push
insl
inc
outsl
push
pushf
fcoms
mov
adc
js
mov
and
out
ficoms
jge
std
push
fadd
iret
shrb
in
movsl
add
cmpsl
clc
sti
xchg
pop
jmp
mov
push
and
idiv
pop
or
sahf
lods
cwtl
addl
insl
clc
shrb
push
dec
iret
rorb
inc
pushf
icebp
pop
aaa
push
xchg
movsb
mov
push
cmp
testb
xchg
mov
popf
sub
pop
popf
pop
fcomp
and
jae
cld
mov
leave
pop
imul
inc
gs
shll
jns
jno
cs
xchg
out
jge
shl
jmp
mov
fwait
hlt
imul
into
push
xor
ss
add
pop
sub
lods
jge
xchg
ficompl
adc
testl
shrb
subl
jno
xchg
or
mov
out
xchg
loope
mov
pop
push
mov
sbbb
outsl
push
dec
mov
add
arpl
xlat
mov
xchg
jmp
add
out
xchg
or
push
dec
out
fisttpll
clc
int
push
adc
or
mov
aas
je
int3
or
es
push
xor
repnz
mov
push
je
imul
adc
sbb
xchg
leave
xchg
push
sahf
fnsave
jmp
pop
gs
xor
hlt
cmp
fnstenv
arpl
adc
xor
enter
sarl
pushf
int3
bound
test
mov
sbb
fbld
movswl
imul
add
into
or
ret
call
add
roll
xchg
xchg
pop
or
inc
mov
popa
mov
mov
mov
out
shr
sub
adcb
or
and
mov
imul
sti
lds
dec
movq
sub
dec
imul
jbe
inc
jge
mul
push
nop
test
aam
rcrl
clc
mov
out
pop
int3
ja
sarl
stos
add
pop
mov
stos
or
push
push
push
repnz
pop
leave
xchg
add
push
incl
mov
nop
push
jae
inc
xchg
in
add
nop
adc
lahf
cmp
mov
push
icebp
pop
aaa
stc
fisubrl
push
sub
push
and
ja
loope
mov
adc
enter
push
sub
je
lods
lahf
cwtl
push
adc
or
cltd
dec
fwait
ss
pop
mov
aam
dec
push
lret
mov
shrl
cld
out
sbb
jnp
jge
fildl
sub
iret
aaa
shrl
push
fistpll
call
cmpsb
sub
movsl
scas
push
insl
lret
call
faddl
outsl
pop
hlt
mov
mov
and
push
insb
adc
jae
enter
cmp
or
dec
mov
mov
xchg
mov
fistpl
cmp
pop
mov
mov
sti
and
xor
inc
pop
dec
dec
sub
cmp
push
mov
and
xchg
xchg
cld
andb
xchg
adc
adc
dec
or
or
xchg
sbb
int
jb
push
inc
sarl
sbb
faddp
sub
js
lret
adc
and
xchg
xor
xchg
repnz
or
and
scas
mov
rolb
stos
insl
in
cmpl
inc
or
les
mov
out
hlt
mov
mov
or
lahf
lock
fbstp
into
and
add
and
pop
sub
xlat
fwait
rcll
and
nop
vpunpckhdq
les
dec
mov
sub
in
mov
jns
jl
lea
jg
call
dec
clc
lds
jnp
cli
mov
mov
rorl
adc
add
ja
adc
aad
loope
fstpt
loope
mov
add
xor
adc
addr16
cltd
into
pinsrw
fs
rcr
sbb
scas
cmp
jecxz
loopne
xor
sbb
aaa
imul
push
nop
mov
add
inc
cmpsb
das
out
adc
sub
mov
imul
lds
aaa
xor
xor
out
jbe
push
jnp
sub
jg
jle
xchg
mov
int3
push
mov
in
call
mov
pop
iret
call
cli
jb
arpl
in
punpckhdq
or
cmpsl
movsl
mov
cmp
jmp
outsl
push
add
inc
cwtl
in
xor
lods
imul
ror
fisubl
popa
mov
mov
aas
fldt
push
push
fadd
out
inc
add
shll
inc
lahf
outsb
cs
xchg
dec
mov
test
sbb
nop
push
sub
test
nop
pop
fs
hlt
aas
test
in
cwtl
add
aas
jmp
sbb
insb
subl
inc
cld
pop
xchg
add
les
cmp
xchg
mov
xchg
pop
lahf
cmp
push
scas
pusha
jge
push
mov
subl
mov
and
insb
or
dec
pop
adc
xlat
loope
ret
je
adc
dec
and
cli
mov
push
imul
pop
mov
enter
dec
xor
ret
mov
adc
mov
rcrl
jns
xor
or
sub
out
div
test
mov
sub
sbb
inc
in
cmp
and
mov
sbb
aas
in
lods
pushf
jl
push
cmpsb
cmp
jnp
sbb
adc
fistl
jle
cltd
lods
inc
mov
movsl
jno
cmp
add
inc
clc
mov
pushf
mov
add
pop
or
dec
clc
sti
sbb
shrb
push
dec
leave
popf
jmp
into
scas
add
inc
popa
xor
bound
inc
stc
dec
das
pusha
test
mov
mov
cmp
mov
pop
jno
rolb
jmp
insb
xchg
cmp
jge
outsb
sarl
jns
outsl
cs
xchg
jbe
iret
mov
mov
enter
or
push
jnp
sbb
vpmacsdql
pop
fldl
ljmp
rorl
cmp
lods
adc
and
cmp
pusha
or
or
insb
out
pop
mov
jecxz
enter
pop
inc
lret
adc
pop
jae
dec
sar
stos
leave
mov
repnz
mov
leave
pop
fisttpl
pop
jo
mov
mov
out
cmc
adc
out
or
inc
push
mov
nop
insl
pop
or
and
sub
mov
aad
or
outsl
sbb
rcrb
adcb
clc
jp
test
xchg
movb
xchg
inc
jmp
int3
inc
mov
pop
mov
jb
test
popf
dec
pop
push
mov
jae
pop
insb
pop
daa
fdivrs
int
cs
fs
sub
test
aaa
call
adc
sarb
popf
sub
rcrl
test
dec
ret
inc
es
testl
aaa
into
leave
popa
or
pop
jp
fisttpl
jle
adc
in
cs
daa
sbb
push
mov
sub
cmp
jnp
xor
xchg
xlat
dec
xorl
mov
push
mov
ljmp
fiaddl
das
in
pop
sub
ja
jl
jl
orl
mov
sarb
pushf
dec
push
mov
shll
div
mov
fs
nop
ljmp
mov
ljmp
dec
imul
inc
add
inc
bound
lret
lret
and
ficoml
lds
outsl
fidivs
lea
in
mov
sub
jg
or
icebp
lcall
or
cmp
xor
movsb
pop
jecxz
outsl
movsb
ds
sub
lods
sub
add
or
sub
inc
sub
js
test
xchg
aas
outsl
sbbl
shll
loop
test
sub
pop
push
push
frstor
mov
mov
clc
inc
sbb
test
cwtl
ds
sarl
sahf
cs
adc
push
pushf
nop
mov
pop
sub
mov
addr16
aad
in
push
pop
xchg
xlat
mov
xchg
mov
clc
mov
mov
sarl
icebp
cmc
es
repnz
data16
out
mov
inc
sbb
xchg
cli
dec
mov
pushf
inc
enter
lods
aad
inc
sub
xor
out
mov
push
clc
repz
dec
rclb
pop
dec
push
jo
and
lock
fimull
push
scas
lahf
sbb
jp
mov
cmc
mov
les
mov
xchg
xchg
or
lea
and
jmp
jge
push
pushw
es
mov
decl
inc
mov
inc
out
cmp
add
xchg
jnp
lcall
inc
or
mov
jnp
imul
jae
std
inc
cld
cmp
es
int
inc
cli
arpl
adc
push
mov
jp
xlat
mov
movsb
lods
mov
shlb
in
add
inc
sbb
pusha
xchg
adc
cmp
fstl
and
mov
inc
jo
pop
pop
jp
sahf
pop
test
sbb
mov
mov
rorb
hlt
or
push
int3
rcrb
pop
dec
in
jo
incb
in
dec
xchg
ds
add
mov
data16
mov
sbb
test
comiss
icebp
test
ja
xchg
mov
test
inc
mov
mov
sub
mov
out
cmp
cmp
mov
int
cwtl
cmpsb
add
fs
or
enter
sbb
mov
mov
cmp
call
imul
jl
pop
sub
pop
fiadds
lea
jbe
cmc
arpl
aas
and
push
or
push
jle
pushf
mov
mulb
mov
mov
movsl
std
mov
test
pop
lret
lods
push
cmp
sub
stc
and
pop
jmp
xchg
in
mov
sub
add
roll
imul
and
inc
xchg
pop
mov
cmpb
xchg
mov
jg
fisttpll
mov
shll
add
sti
mov
cmpsl
mov
fwait
sarb
sub
test
xchg
sub
ror
xchg
sbb
sub
pop
aad
mov
jle
adcl
in
or
cwtl
aam
mov
or
in
in
insl
popf
xchg
insb
out
mov
xchg
mov
sbb
fnstcw
shl
sbb
xchg
cli
enter
and
ret
xor
ja
mov
dec
mov
dec
jo
cmpsb
cmp
jbe
xor
lock
in
fildl
int3
lods
mov
cwtl
icebp
sti
das
mov
into
ds
test
ja
popf
mov
dec
adc
push
sahf
mov
cmp
mov
cmpsb
mov
lcall
jnp
addr16
or
cmpsl
cmpsb
mov
lods
out
int
lods
sbb
aas
mov
xorb
lods
pushf
lock
sbb
dec
decl
fidivrl
popf
jo
xchg
gs
fsubr
inc
aas
or
xchg
cmpsl
repnz
popf
lret
mov
xor
dec
xor
adc
inc
inc
mov
out
mul
and
clc
mov
icebp
jae
pusha
push
cmp
mov
sbb
mov
xchg
mov
mov
fsubr
jg
int
inc
xchg
in
sarl
mov
and
adc
fisttpl
ret
fbld
aad
pop
jecxz
sbb
shl
inc
and
orl
cmpsb
dec
mov
pusha
or
pop
xchg
or
popa
inc
test
mov
push
mulb
ret
mov
ja
or
inc
fwait
inc
sub
pop
lods
cmp
ret
pop
scas
mov
subl
loope
pop
arpl
shll
lahf
pusha
rcrl
xor
and
mov
cwtl
stos
xlat
out
xchg
insb
movsl
fimuls
sti
les
cmpb
dec
jbe
jl
jle
cmpsl
jp
sub
add
data16
ja
jno
nop
xchg
inc
ljmp
lret
pop
getsec
int3
mov
sub
ret
jl
sub
mov
test
mov
jmp
inc
mov
pushf
xchg
stc
std
pop
mov
bound
aad
clc
mov
mov
cmpsb
sub
pop
mov
sbb
fimuls
icebp
add
ss
cmpsl
jae
loope
pop
or
jns
enter
sub
fistl
insl
sbb
rolb
cmp
sbb
in
in
jg
push
pop
mov
pop
adc
dec
adc
dec
add
inc
mov
dec
cs
pop
adc
movsb
jge
pop
mov
imul
leave
arpl
xchg
lds
popa
sbb
adcl
jne
in
mov
movsl
cvtdq2ps
push
jmp
ret
inc
pop
sahf
xchg
repz
xor
mov
or
aaa
jbe
dec
add
mov
ret
in
in
mov
adc
xor
shlb
sub
push
sbb
inc
pop
ss
and
jb
repz
das
xorl
xchg
adc
adc
ljmp
les
imul
mov
inc
push
mov
inc
mov
cmp
dec
lret
in
push
lods
add
and
mov
aam
clc
imul
stos
inc
mov
xor
sbb
rcll
jb
into
shl
sti
dec
inc
jg
mov
xlat
pop
pusha
lret
cmp
mov
out
stc
push
aad
test
stos
mov
xor
jo
gs
pop
xchg
mov
mov
in
or
mov
loop
or
jmp
enter
fistl
out
and
pop
fwait
sbb
push
inc
jb
jmp
js
jo
sub
fstps
lcall
sub
js
out
and
mov
insl
test
sti
add
push
dec
out
cmc
sub
fwait
cmp
hlt
addb
leave
xchg
lock
icebp
scas
test
jae
sbb
scas
clc
in
loopne
or
fdivp
aad
cmp
in
in
fcmovnbe
jnp
mov
in
push
and
push
lret
jo
and
aam
loopne
inc
lret
pusha
lea
jno
mov
cmp
stc
sub
popf
cmpsl
jns
adcb
mov
inc
push
cltd
aad
or
xor
daa
pop
mov
add
mov
ret
fnsave
push
xor
fdivr
xor
xor
sub
xchg
int3
sub
xor
mov
pop
xor
in
popf
pop
cmp
jne
adc
loope
iret
mov
inc
popf
push
cmpsb
dec
fwait
pop
jnp
and
adc
inc
shrl
mov
imul
mov
fstpl
iret
inc
sub
ficoml
push
adc
pop
jbe
iret
adc
lods
xor
dec
mov
xor
xchg
pop
push
mov
lods
adcl
iret
out
push
mov
xchg
and
mov
cmpsl
loopne
xchg
ds
faddl
stos
aad
addl
push
mov
adc
xchg
dec
xor
je
iret
rorl
js
imul
sbb
xor
lock
imul
jg
aad
outsb
push
ss
lock
xor
xchg
fmull
add
mov
sbb
insb
loopne
ficoml
bound
pop
cwtl
jns
sub
outsb
rcl
sbb
cmpsl
hlt
flds
jno
sti
jb
fwait
xor
and
fsts
imul
test
mov
inc
jp
mov
and
in
std
mov
adc
cmp
and
sbbl
add
and
mul
mov
mov
pushaw
pushf
cmp
jne
xchg
fisttpl
rcll
push
push
sbb
pop
dec
mov
lret
cli
test
int
cli
pop
push
shl
in
and
mov
mov
sti
and
shll
stc
and
mov
or
inc
fnstcw
mov
outsl
js
dec
and
fdivs
bound
les
add
xchg
dec
fldt
cmp
dec
lret
test
sub
in
sbb
inc
add
lea
or
ss
shll
mov
pop
les
push
push
xchg
sbb
push
pminub
test
addb
add
and
cmc
mov
out
dec
popf
rcr
jmp
and
mov
add
cli
add
xchg
int
mov
mov
cltd
jno
add
loopne
sub
pop
rcrb
jno
add
mov
sub
sub
xor
push
clc
call
push
out
sbb
xchg
daa
push
rcr
dec
test
jbe
stc
inc
hlt
cs
lahf
iret
je
xchg
push
and
dec
cmp
jnp
push
shl
scas
push
fwait
jge
dec
hlt
jl
and
or
dec
or
sbb
in
testb
inc
lods
js
ds
imul
xor
clc
xor
loop
dec
mov
sti
or
jp
push
aas
arpl
test
popf
inc
lods
fwait
mov
ds
rcrl
out
jne
sub
jge
stc
je
mov
xor
cmp
mov
cmp
aam
xor
jecxz
adc
into
push
mov
hlt
jp
push
and
push
xchg
stc
daa
ss
out
jl
jmp
call
fs
mov
nop
or
adc
jg
jle
aas
inc
lds
fadd
mov
xlat
pushf
mov
test
dec
out
pop
jno
jb
mov
jne
lea
insl
sahf
adc
imul
xchg
cmp
add
mov
lods
and
shr
das
inc
loope
lock
inc
sub
lcall
mov
arpl
inc
movsb
cmc
push
cmpsl
stc
push
cmp
mov
add
insl
and
bound
mov
fwait
jecxz
das
sub
mov
pusha
pop
jge
jmp
cs
mov
jb
aas
mov
xor
mov
mov
sub
out
sbb
jecxz
sar
push
loopne
add
jne
stos
int
outsb
xchg
lea
sbb
mov
push
mov
das
lret
add
repz
dec
leave
lea
stos
inc
mov
fs
addb
test
push
and
sub
adcl
sub
and
jle
jecxz
or
lahf
pop
mov
movsb
or
push
jo
sub
pusha
lahf
gs
fs
pusha
fwait
std
daa
inc
nop
pop
cld
pop
notb
push
popa
cmp
and
shrl
out
test
jno
xlat
mov
bsr
push
adc
lea
jle
fnsave
neg
pop
fidivs
xor
clc
mov
mov
mov
ds
sub
jno
fwait
push
or
push
test
jge
push
rolb
push
lret
test
jecxz
lds
xlat
ss
shrl
or
adc
in
out
enter
loope
mov
ds
jmp
lea
cmp
jp
xchg
sub
in
push
adc
test
inc
filds
mov
xchg
sub
in
xor
and
enter
in
inc
inc
push
stos
mov
push
dec
sbb
mov
sbb
repnz
aad
cwtl
sub
stc
pushf
and
inc
add
addl
and
lahf
dec
add
mov
dec
pop
popl
xchg
adc
idivb
orl
aas
lods
sahf
dec
jnp
lock
add
add
sbbb
xchg
xor
inc
arpl
stc
das
sub
cs
cmp
push
inc
repnz
pop
mov
or
gs
fisttpll
dec
adc
xchg
mov
mov
xchg
or
inc
jmp
sub
sub
test
shl
xchg
pop
pop
mov
leave
ds
push
bound
pop
xchg
cmp
cmp
stos
shlb
push
pop
sbb
mov
lds
std
stos
icebp
pushf
and
ror
inc
je
rclb
cltd
ljmp
mov
pushl
or
push
sbb
lret
rclb
push
addl
jns
dec
push
jp
popa
inc
add
cld
mov
jg
in
test
mov
xor
xchg
add
inc
sub
fmulp
mov
subl
call
andb
jns
dec
aam
mov
push
inc
add
add
out
jne
sbb
lods
pop
jge
std
dec
xor
aaa
mov
cwtl
push
dec
jg
shlb
mov
and
mov
push
cltd
repz
imul
pop
mov
push
pop
imull
inc
jb
dec
mov
jl
inc
bound
lock
mov
and
bsf
aam
sbb
pop
stos
sbb
push
pop
push
pop
adc
xor
stc
xchg
bound
xchg
daa
loope
pushf
mov
inc
adc
inc
jnp
sbb
mov
outsb
and
or
mov
add
insl
mov
dec
sti
pop
add
lret
mov
sbb
xchg
jne
jns
mov
stos
pop
and
divb
sub
out
imul
gs
in
or
into
or
fldcw
test
push
rol
pop
mov
mov
out
pop
mov
and
pop
je
cwtl
push
shl
pop
div
inc
mov
mov
push
bnd
mov
lds
lret
mov
insb
ljmp
pop
sbb
jmp
jno
stc
jp
enter
mov
out
test
aaa
fidivrs
ret
dec
jl
xchg
sahf
test
dec
std
pushf
mov
lock
add
leave
into
xchg
cmp
ffree
inc
jb
rclb
push
mov
lcall
mov
push
addb
inc
inc
or
adc
test
cmp
pop
inc
in
lcall
loope
aas
mov
adc
cmpsl
push
mov
aaa
frstor
inc
sbb
xor
mov
and
fldt
std
popl
fdivs
les
shrl
pusha
cmp
je
mov
push
sbb
jmp
cmp
test
bound
xchg
lods
test
jecxz
mov
int
jmp
imul
sub
mov
out
rorb
or
icebp
xchg
loop
or
pop
test
andb
xchg
jo
shl
cmpsl
in
std
dec
fs
pop
lret
daa
out
jmp
rorl
push
mov
and
pop
hlt
jne
das
xchg
sbb
and
lret
scas
and
stc
jae
pop
xor
stos
jns
sub
ret
mov
pushf
xor
and
shll
dec
mulb
and
faddp
mov
mov
add
mov
lock
inc
hlt
int
mov
adc
out
inc
ss
and
add
dec
mov
aam
push
imul
xchg
lret
cmp
pop
in
and
bound
xchg
movsl
in
std
push
sub
dec
mov
jno
jge
fistpl
mov
cs
fcoms
sub
adc
adc
loopne
xor
mov
jne
in
cld
in
sbb
bound
push
jmp
mov
gs
pop
fcomp
stc
inc
imul
adc
push
in
ss
cmpl
and
xor
xchg
push
or
push
sub
sub
dec
dec
nop
test
sbb
jb
push
jecxz
xor
mov
xchg
vmwrite
fldcw
xchg
pop
adc
ds
push
mov
xchg
jp
jnp
mov
std
inc
push
faddl
xchg
movsb
insl
jns
xchg
call
xor
and
adc
imul
sub
mov
mov
sbb
and
orb
ljmp
add
and
push
subl
xchg
jle
popf
daa
jge
repnz
adc
ss
sbbb
orb
add
or
push
ss
dec
insl
mov
mov
repnz
rcll
push
std
es
fldl
mov
iret
lds
cmp
inc
mov
push
xchg
lds
js
mov
lret
mov
icebp
xor
ds
inc
icebp
ret
punpckhdq
mov
add
ret
fsts
and
ret
sub
add
xchg
call
pop
sbb
in
notb
adcb
sub
je
insl
loope
pushf
mov
paddd
test
arpl
enter
flds
popa
xchg
inc
cmp
jle
std
vcvttpd2dqx
jbe
pop
dec
out
bound
mov
xchg
xchg
push
dec
mov
out
xchg
inc
jo
mov
dec
mov
push
lcall
or
sub
sarb
pop
jl
dec
cmp
mov
adc
xor
mov
lahf
lret
lock
jmp
in
aaa
test
inc
push
sbb
dec
popa
aaa
lcall
shll
jae
mov
adc
imul
out
push
lcall
mov
sub
inc
push
test
gs
iret
add
test
push
stos
xchg
rol
mov
ja
mov
mov
sti
lock
ds
lret
fs
ss
mov
lock
rol
in
inc
clc
outsl
cmp
ds
test
into
adc
adc
je
ja
mov
cwtl
test
incb
bound
mov
shrb
xchg
dec
push
imul
mov
fistpl
sbb
push
aad
int
push
pop
icebp
or
je
pop
xchg
jmp
arpl
push
dec
insb
xchg
loop
xor
lods
jnp
nop
lcall
jg
xorl
sahf
mov
sbb
scas
fwait
incl
pop
push
in
leave
imul
fbld
mull
sbb
inc
arpl
jb
jno
sbb
mov
loopne
popf
arpl
cmpsl
xchg
mov
scas
pop
lcall
xchg
inc
or
in
xchg
pop
push
and
repz
mov
ljmp
jmp
lret
xor
adc
xlat
cmpsl
int
dec
pushf
mov
add
push
pop
ljmp
ljmp
dec
mov
lea
pop
and
adc
xchg
adc
mov
fsubr
in
pop
shlb
repnz
fldt
adc
pop
lret
enter
mov
popf
std
rcrl
or
mov
movd
and
mov
cmp
add
dec
iret
bound
push
adc
mov
lcall
jns
cwtl
mov
dec
cmp
sub
inc
lds
and
jl
pop
mov
and
fisubrs
xchg
lock
popa
mov
mov
dec
xchg
les
and
lods
sbbb
jne
jecxz
inc
sbb
pop
xchg
pop
mov
add
daa
jg
dec
add
es
add
xchg
pop
mov
dec
popa
sbb
jecxz
stos
xor
pop
ret
xor
adc
leave
pop
ja
xor
cmc
sahf
dec
pop
sub
cmp
pop
into
lret
or
mov
sub
lahf
cmp
sub
sub
jle
divl
andb
cmp
test
push
in
pop
sar
call
cmp
es
push
shll
dec
and
lahf
mov
mov
fcoms
lock
cld
or
cltd
xor
insb
jbe
jge
dec
iret
pop
dec
sbb
mov
fstpl
xchg
and
add
dec
lea
aaa
data16
scas
hlt
mov
pop
push
inc
clc
xor
stc
lods
movsb
or
jl
aam
ret
ljmp
nop
xlat
or
sahf
addb
fmul
xor
rolb
pop
inc
push
jecxz
dec
push
jmp
pushf
sti
cwtl
in
cwtl
push
mull
mov
outsl
out
adc
mov
fldcw
in
sti
fnsave
movsl
stc
int3
into
xor
mov
push
ss
mov
sub
enter
pop
cmpsb
movsl
icebp
push
in
inc
lock
xchg
jp
and
push
scas
sbb
aam
and
arpl
subb
xor
sbb
pop
sub
hlt
jb
aas
cmp
lods
dec
jb
cmp
or
dec
mov
pop
xlat
ret
ret
mov
mov
push
or
mov
lods
dec
and
push
sbb
cmp
or
xor
push
je
cwtl
hlt
andb
and
cltd
insb
pop
jae
sub
mov
inc
ss
mov
mov
cmpsl
shrb
fidivl
insb
cmp
fstpl
and
lea
imul
aaa
mov
test
mov
add
pop
popa
in
inc
movsl
and
jbe
cmp
jmp
and
stos
ja
arpl
pop
cmp
inc
xchg
jnp
mov
data16
gs
adc
idivl
imul
inc
adc
push
andl
clc
mulb
pop
pop
shlb
pop
mov
inc
imul
movsl
popf
xchg
adc
int3
mov
or
aad
add
push
fsubr
mov
sub
xor
hlt
aas
movsl
in
test
mov
cwtl
in
in
lea
mov
movsl
sbb
aaa
jmp
out
jne
pop
out
mov
and
pusha
dec
pop
ja
stos
ror
xchg
shll
popf
int
loop
push
lret
movsb
mov
faddl
arpl
jbe
div
push
adc
sub
aas
rorb
adc
mov
xchg
cwtl
pop
mov
push
mov
mov
sub
loope
add
outsl
xchg
jno
nop
in
insl
call
sub
pop
jp
sub
ja
fwait
shlb
sahf
lahf
adc
mov
negl
xchg
lock
mov
imul
mov
fisubrs
mov
pop
inc
or
mov
sbb
mov
rclb
mov
leave
mov
cmc
mov
movl
mov
or
mov
sahf
shll
lds
jae
jp
fidivrs
je
sbb
je
fbld
arpl
inc
lock
cmp
pop
out
scas
cld
mov
inc
inc
adc
out
jne
push
mov
das
lock
mov
hlt
lock
mov
inc
sub
gs
arpl
or
jno
mov
arpl
cs
cmp
stos
dec
inc
xchg
dec
loop
sar
xor
add
out
nop
sub
or
inc
addb
clc
sbb
xchg
sbb
icebp
sub
lock
daa
mov
push
adc
in
andl
push
xchg
sti
shl
push
ss
sbb
movsb
adc
aam
xchg
sbb
push
xor
testl
loope
jecxz
pop
add
call
xor
mov
imul
dec
cmpsl
fs
orb
cli
insb
insl
test
pop
pushf
mov
int3
xchg
mov
adc
imul
data16
jge
aam
xchg
lret
mov
mov
cs
fisttpl
mov
loope
subb
push
ret
adc
lea
cmp
inc
pop
mov
dec
dec
or
jns
xchg
sarl
mov
xchg
shll
rorl
clc
mov
cmp
les
es
stos
jle
push
mov
dec
pushf
adc
and
pusha
xchg
fwait
mov
into
stos
out
mov
inc
inc
scas
ficoml
js
movb
pop
and
jge
push
jle
lods
add
sub
adc
mov
mov
js
les
mov
xor
push
scas
jb
mov
inc
int3
mov
pop
push
dec
and
clc
xchg
dec
xchg
or
inc
daa
xor
scas
or
jnp
hlt
jg
dec
inc
add
ja
jnp
cmp
add
imul
dec
popa
pop
sbb
xor
adc
jo
aam
daa
xchg
in
mov
sbb
les
ds
ror
mov
push
jnp
out
sbb
xor
inc
testl
or
out
or
repz
rep
sbb
pop
out
hlt
add
push
adc
jmp
inc
in
cmc
dec
rorb
pop
lret
scas
adc
sbb
jo
sbb
in
out
std
loop
pusha
loop
fldenv
adc
xchg
fwait
insl
push
rcr
jb
jg
jnp
mov
rcrb
mov
pushl
repnz
mov
add
pop
sti
leave
imulb
mov
cltd
ss
xchg
imulb
xchg
mov
push
push
mov
out
dec
outsb
imul
aas
aad
inc
push
inc
push
out
mov
pop
dec
inc
cmpsl
test
aas
cmp
cli
lea
stos
std
repnz
cmp
stos
sub
mov
iret
pop
stc
push
jne
fucom
push
scas
or
add
aam
ja
xchg
loop
loope
adc
push
mov
scas
test
adc
cmpsl
add
or
cmp
loop
leave
xchg
das
movsl
pop
push
out
jmp
mov
dec
gs
in
sbb
jno
xchg
inc
adc
jb
aad
mov
mov
fcoms
fucom
pop
xchg
lds
sbb
ds
lret
mov
lahf
or
insl
popa
mov
sti
stc
xor
mov
or
mov
testl
dec
rcrb
cmpsl
push
rclb
push
lret
fistpl
or
mov
and
mov
fadd
inc
jecxz
sub
mov
xor
cmc
pop
inc
inc
sbb
test
ja
mov
xchg
cli
into
cmpsl
mov
sahf
loop
pop
xlat
out
nop
xor
test
adc
cli
adcb
fbld
add
push
mov
js
mov
nop
bswap
popa
jp
hlt
jbe
pop
je
cmp
sub
push
mov
sbb
int
pop
lcall
lcall
in
inc
mov
or
lea
rorl
and
movsl
push
add
xchg
movsl
jae
sbb
xchg
mov
es
sbb
mov
mov
lock
lret
dec
bound
adc
mov
mov
popf
mov
cmp
leave
push
pop
aas
out
je
xchg
mov
dec
enter
inc
xor
rolb
push
inc
push
inc
ret
mov
test
and
add
or
sub
aad
pop
cld
cmp
sbb
fcmovnu
in
repnz
and
pop
insl
push
rcrl
mov
bound
mov
push
arpl
adc
cs
xchg
cmc
mov
ja
push
addr16
sbb
fs
jns
fwait
and
cmp
pop
jb
arpl
inc
ss
sub
mov
ret
lret
clc
test
push
addl
loopne
sub
cwtl
and
jnp
push
xchg
jmp
lcall
xor
popf
pop
loope
add
add
mov
cmpl
inc
add
mov
aas
lcall
or
mov
mov
jns
ss
xchg
and
lods
jnp
cwtl
add
xorb
adc
cmp
movsb
jbe
dec
les
inc
and
and
loope
push
sub
xlat
iret
lds
rol
xor
fisubrl
dec
cmp
loop
bound
out
les
fnstenv
pop
dec
or
dec
lgs
es
movsb
inc
fbstp
das
xlat
dec
add
sbb
jp
mov
fcomps
pop
outsb
push
lds
mov
arpl
dec
cld
mov
inc
add
scas
test
cli
adc
and
inc
arpl
cmp
pusha
outsb
ret
or
jecxz
add
int
frstor
out
adc
cwtl
xchg
pop
push
cwtl
ja
xchg
data16
cmpsl
adc
inc
out
add
fmuls
inc
ret
mov
xor
sub
in
add
and
gs
test
aam
sbb
dec
mov
pushl
stos
or
into
sti
mov
jmp
pop
xor
fs
mov
lods
ss
xor
jae
fisubs
lock
stos
push
pop
mov
dec
sub
cmpsb
add
insb
cmp
ljmp
cmp
push
dec
mov
inc
fldt
mov
int
ret
adc
shll
or
fs
lods
inc
xor
andl
dec
addb
xchg
enter
push
mov
test
xchg
jno
rcl
in
dec
or
adc
add
out
mov
push
inc
mov
inc
mov
cmp
fwait
sarb
subb
into
push
dec
dec
pop
pop
lahf
popf
scas
loopne
les
mov
pop
jnp
arpl
dec
inc
int
fnsave
aas
js
in
sub
loop
lahf
in
sub
or
adc
pop
scas
mov
inc
mov
xchg
mov
aad
int
inc
icebp
lret
dec
loop
test
das
sub
sahf
xchg
addr16
js
jns
lods
sbb
cmp
and
ret
lret
jecxz
mov
mov
mov
insb
adc
add
jg
fdivrs
scas
lret
sbb
cmp
dec
jl
fstl
in
lcall
mov
xlat
mov
jo
lret
cmpsb
cmpsl
push
in
insb
stos
pop
fidivs
xor
push
jns
mov
mov
dec
mov
pop
push
jno
movsl
lahf
cmpb
inc
pop
das
aam
ja
xchg
cli
ds
cld
or
nop
push
ret
outsb
dec
ss
add
mov
stos
mov
mov
sahf
mov
xor
lods
call
xchg
arpl
repnz
lods
add
in
mov
inc
test
cs
push
out
pop
gs
xor
call
mov
in
aad
imul
hlt
cmp
in
add
pop
ljmp
sbbb
adc
lea
jnp
xchg
test
out
sbb
das
je
ret
mov
pusha
mov
call
out
mov
mov
inc
loop
popf
clc
stos
mov
fwait
dec
xor
mov
nop
push
push
sbb
xchg
je
jo
add
cmp
les
dec
dec
cwtl
rorl
sarl
xor
dec
sbb
xor
out
pop
pop
outsl
xor
lea
sub
fdivrs
xchg
test
call
sub
sub
clc
push
pusha
mov
xor
inc
repnz
data16
ret
movsl
push
out
adc
mov
std
push
cld
aad
fwait
jns
mov
adcb
xchg
xor
mov
popf
in
xchg
inc
and
mov
sub
in
lods
push
stos
scas
stc
bound
mov
lret
mov
add
push
fucom
or
adc
out
push
call
rcrb
adc
add
lods
mov
push
pop
out
or
pop
pop
imul
xchg
out
pop
cmpsl
jl
ffree
fnsave
enter
cmpsl
cmpb
ljmp
ret
repnz
cmc
sbb
push
lock
dec
push
imul
aad
imul
mov
cmc
fwait
stos
sbb
jnp
add
inc
loope
js
inc
adc
mov
mov
cmc
out
mov
jmp
lock
add
xchg
jnp
or
push
cld
in
daa
int
mov
xor
pushf
mov
mulb
je
aaa
sbb
jns
adc
ja
cmpsl
sti
mov
push
jecxz
imul
xchg
adc
and
jae
add
jo
pop
mov
pop
mov
repnz
inc
cld
or
add
out
mov
push
dec
notb
cwtl
mov
xor
lock
nop
das
movsb
xor
int
mov
xor
add
or
in
and
jb
add
jecxz
loopne
dec
fsubs
jp
dec
xchg
sub
out
fcoms
scas
jmp
enter
mov
stos
inc
stos
xorl
push
mov
test
out
inc
mov
ljmp
inc
pop
dec
std
insl
jle
lds
std
adc
sub
inc
shl
sarl
jge
mov
dec
cmova
mov
jbe
jno
push
inc
and
call
fwait
xchg
cltd
je
int3
jb
or
fistps
mov
xor
les
in
sub
dec
fimull
cmp
aas
xor
cmp
adc
push
test
or
xor
cld
add
mov
loop
enter
sbb
in
dec
addr16
sub
xchg
cmp
mov
ds
xor
mov
loopne
ja
xlat
jmp
in
jo
mov
lea
jne
sti
rorl
hlt
adc
xlat
icebp
ficoml
xor
fisubl
xor
lock
sub
mov
repz
mov
out
xor
adc
ret
push
aad
sub
into
popa
mov
jno
inc
ret
rcll
mov
sbb
jg
test
sbb
enter
add
sbb
push
or
xor
out
and
and
jae
mov
daa
pop
popf
addr16
mov
cmp
xlat
sbb
es
je
fld
pop
cwtl
or
js
lea
add
mov
adc
lds
mov
movsl
test
and
sahf
sub
mov
cmp
sub
data16
fucomip
xorb
mov
push
mov
jns
inc
pop
loopne
and
cltd
or
cmp
or
ret
pop
das
dec
das
pop
sahf
movb
ret
lret
or
xchg
sub
pop
in
ret
push
add
sbb
sub
aad
ret
iret
and
and
mov
aam
fcom
jp
int3
iret
cs
jle
bound
dec
cmpsb
pop
inc
test
mov
xchg
les
push
xchg
xor
mov
pop
xchg
add
push
dec
and
lcall
pop
jno
add
aaa
and
dec
xlat
das
and
inc
pop
push
mov
lds
imul
lock
adc
pop
pop
mov
out
sbb
mov
jbe
jle
xchg
push
ljmp
inc
scas
cmp
leave
sarl
addr16
xor
hlt
cld
out
lock
rorb
pushf
cmp
xchg
mov
je
dec
push
adc
xor
pop
xchg
dec
push
aaa
fucomi
mov
cmp
dec
cwtl
bound
inc
pop
arpl
push
sbb
mov
cmc
add
jns
js
inc
or
lcall
pop
jl
push
pop
mov
fadd
push
aad
inc
fstps
push
mov
das
lea
repnz
insb
xchg
lock
cmp
jge
add
dec
movsb
out
cltd
int
lcall
fs
xchg
popf
ficompl
add
sub
popf
cld
outsl
cltd
inc
cli
sub
and
xchg
aas
and
stc
popa
jo
int3
cmpsl
add
dec
pusha
xor
repz
xchg
dec
xchg
stos
out
push
aam
or
adc
pushf
cmpsb
mov
lret
ljmp
adc
ja
arpl
jmp
jl
mov
inc
test
dec
dec
dec
subb
sub
dec
xchg
mov
adc
xchg
cmpsb
xorb
lret
je
fwait
adc
or
fsubs
iret
or
cmp
mulb
and
addr16
outsl
sbb
cmp
jnp
outsb
push
pop
aad
arpl
aaa
dec
rcrl
xor
sbb
fs
shrl
orl
and
cmc
fs
sbb
mov
or
mov
inc
add
push
subl
notl
cltd
and
inc
fwait
cmpsl
sti
mov
arpl
pop
sub
and
cltd
xor
test
mov
push
pop
xor
cmpsl
jg
add
lcall
sbb
sbb
cmp
in
int3
ret
mov
adc
xor
aad
stos
push
xlat
fistps
orl
cmp
xchg
adc
jge
js
add
xor
jno
pop
adc
vpavgb
in
cmp
fdivrl
xchg
cmc
and
repnz
cmp
sarl
call
js
sbbl
adc
lcall
shrl
repnz
inc
mov
push
aaa
aad
push
push
iret
cmc
mov
and
arpl
scas
xor
lods
mov
jecxz
int
xchg
lret
sub
dec
out
je
gs
test
jmp
fwait
lds
and
fadds
ret
cmpsb
inc
stos
jge
icebp
rorl
adc
xchg
imull
add
cmp
xchg
mov
or
inc
adc
jge
loope
push
ljmp
cwtl
stos
push
inc
dec
mov
leave
test
out
repz
mov
stc
xor
movsb
xor
and
paddq
sbb
pushf
add
xor
lret
repnz
mov
fs
out
dec
dec
in
aam
imul
imul
push
mov
cltd
mov
bound
mov
insl
add
int3
std
inc
imul
pop
pushf
sub
sub
sbbb
dec
jno
fildll
pop
add
movsl
mov
insb
ss
cltd
adc
xchg
adc
and
sbb
out
xor
push
jns
cmp
stc
cmp
xchg
and
sub
mov
dec
outsl
test
lds
inc
dec
inc
mov
pop
repnz
mov
add
mov
jp
std
pop
pop
cmc
sub
and
andnps
loopne
mov
push
mov
jl
std
xchg
jno
mov
xchg
push
nop
out
fsub
mov
in
sub
cmp
cmpsl
adc
fwait
cmc
jns
arpl
pop
dec
clc
fdivrl
jg
pop
lahf
or
inc
lock
push
gs
clc
mov
in
pushf
dec
stc
and
arpl
icebp
cmp
loop
pusha
aam
jo
rcrl
lock
in
pop
cmpsl
clc
or
inc
mov
push
jbe
loope
leave
xor
sub
mov
mov
mov
or
jmp
outsl
pop
mov
cmp
mov
in
dec
and
sub
lock
xchg
mov
fdivl
xchg
and
mov
lea
xchg
mov
mov
lods
notl
int3
push
rcrb
push
dec
ja
push
in
lods
pushf
add
jp
mov
pop
clc
and
adc
jle
test
test
xor
loopne
clc
jle
jecxz
cmp
arpl
aam
aam
and
aas
test
lret
add
pop
mov
cmc
lock
adc
pop
xor
mov
in
imul
mov
into
add
jne
sub
sti
push
and
test
ljmp
cltd
or
mov
push
jp
testb
xchg
pop
pop
jne
clc
test
movl
arpl
popf
ret
cmp
jnp
sub
les
popf
scas
out
jl
adc
jp
mov
jmp
ljmp
ret
cmc
mov
xor
lods
jbe
jg
jnp
icebp
lcall
and
add
and
outsl
xor
mov
ret
mov
xchg
rcrl
mov
sbb
leave
imul
mov
xchg
inc
mov
bound
jnp
es
stos
xor
cmpsb
int
insb
mov
mov
iret
adc
iret
xchg
in
add
xchg
xchg
fistl
je
rorl
daa
insl
int
aaa
and
mov
adc
fnstenv
imul
mov
push
lret
or
add
xor
and
and
dec
dec
pop
sti
shl
push
add
sub
cmp
es
rorb
lahf
mov
imul
pop
jnp
in
lock
mov
jbe
and
mov
jge
jl
pop
cli
and
daa
sub
cld
jbe
sbb
icebp
push
jl
xor
ljmp
loop
cmpsb
das
daa
hlt
push
lret
adc
and
addl
mov
pop
rolb
les
or
xchg
pop
ficoms
lret
and
add
lock
cmpsb
mov
pushf
and
jp
ss
stc
dec
dec
in
lret
pusha
scas
lods
mov
jbe
adc
test
sti
fisubs
jmp
int3
cmp
add
pop
pushf
stos
jns
mov
lds
adc
xchg
aas
dec
in
push
mov
nop
pop
mov
stc
out
xchg
rcrl
adc
mov
fldlg2
dec
lcall
arpl
jae
lock
and
sahf
hlt
int
jge
out
fisubrs
fucomip
psrlq
push
fcompl
push
or
les
push
out
in
add
sub
iret
das
sarl
dec
call
mov
cli
sti
or
push
leave
aas
sub
addr16
pop
fsubl
add
pop
and
inc
cli
dec
fs
pushf
mov
loop
push
bnd
inc
jmp
push
sbb
jae
je
mov
jb
jae
ljmp
push
mov
cld
push
pop
mov
mov
lods
mov
jge
nop
cmp
bound
xor
cmp
jle
jns
sbb
outsl
cmpsl
adc
mov
lea
notb
test
jge
clc
mov
lret
xor
sbb
sbb
adc
call
leave
leave
mov
cmp
sar
std
mov
fdivs
inc
imul
mov
pop
xchg
shrb
jp
jle
cmp
pop
xchg
stc
movd
hlt
cmp
adc
sbbl
adc
int3
jle
or
jnp
sbb
test
arpl
cli
adc
mov
rclb
imulb
inc
cltd
into
int
outsl
test
pop
and
adc
loopne
add
fistl
pop
test
jns
xor
push
addb
mov
push
dec
ficomps
dec
and
adc
imul
push
and
mov
mov
jns
ljmp
jecxz
out
sbb
add
aas
bound
sub
fwait
bound
mov
les
sarl
cmp
jecxz
pushf
or
jmp
push
int3
mov
pop
mov
push
xor
ja
bound
adc
popf
aad
fildll
fdivs
add
and
dec
lahf
mov
add
jle
stc
mov
sti
stos
aaa
mov
fwait
pop
jge
and
out
mov
insl
mov
push
inc
insl
xchg
lods
jle
mov
fcomp
push
cmc
sub
jno
pop
jp
in
pusha
dec
lretw
pop
xor
fmull
xor
fcompl
mov
or
mov
fisttpl
sti
jp
mov
adc
jg
inc
imul
nop
mov
fildl
xlat
xor
jge
inc
cmp
xchg
test
roll
or
jg
vmptrst
push
ror
xor
push
ss
addr16
xor
xlat
stos
pop
jge
movsl
xor
push
fwait
int
repz
fdivs
and
jecxz
out
push
nop
or
repnz
cmp
ret
icebp
addl
mov
jne
ret
xor
es
movsb
outsb
sbb
adc
fstpl
mov
cmp
movsl
pushl
xchg
popa
int
sbb
int3
cmp
sbb
addb
add
cmp
stc
and
rcl
es
adc
sbb
stos
cltd
jg
out
sbb
mov
xor
dec
les
add
fstps
or
add
aad
enter
xlat
dec
ljmp
stos
call
xor
cs
shl
stc
aad
aas
cltd
out
fs
mov
mov
sub
jmp
sub
cmpsl
mov
xchg
in
lahf
rorl
mov
sti
out
jp
stos
jle
fmuls
and
scas
das
cmpsb
and
sub
ret
push
dec
cmp
insb
xchg
cmp
int3
pop
mov
loop
bound
mov
lret
mov
jmp
adc
fldl2t
mov
mov
mov
push
mov
pop
lods
cwtl
cmp
cmp
cmp
jge
mov
jnp
arpl
dec
ja
popa
out
scas
xchg
xor
mov
adc
adc
ret
mov
xchg
inc
adc
cwtl
jb
sub
lret
and
lods
sbb
push
repnz
xchg
mov
and
stc
imul
mov
pop
pop
xchg
mov
neg
push
inc
bound
and
cli
ret
movsl
lds
call
rcl
jbe
sub
sub
enter
in
mov
adc
xchg
das
aad
in
adc
and
mov
jo
and
std
aas
sbb
cmp
add
inc
cmp
cmc
pop
mov
and
out
inc
enter
insl
pop
jmp
xor
inc
repnz
xor
mov
insb
mov
sub
xchg
aaa
and
adc
pop
aad
sub
repz
cmpsl
mov
test
outsb
sub
fsubp
call
movl
int3
das
inc
aas
pop
imul
lock
pushf
loop
in
ds
xor
fwait
incb
stos
dec
sub
notl
pop
roll
xchg
push
add
mov
mov
mov
cmpsb
pushf
jl
xchg
inc
add
inc
push
pop
sbb
adc
lods
movsb
or
xchg
stos
dec
fstps
push
cld
cmc
and
adc
inc
int
dec
push
ret
mov
mov
cmp
ss
hlt
pop
mov
fimuls
jbe
mov
cmp
dec
adc
out
xchg
aas
jl
js
test
lds
push
fstenv
movsb
jle
dec
outsl
and
cmp
push
sub
mov
add
add
xchg
andl
and
cmc
test
mov
out
push
push
lds
cwtl
gs
adc
or
xchg
int3
sahf
push
cmp
mov
sbb
fisubl
push
fwait
aam
fwait
mov
fidivl
ret
add
push
scas
or
lahf
sbb
or
sbb
ret
outsb
stos
insl
out
sarb
aad
and
mov
or
lods
jnp
fiaddl
jb
adc
adc
jl
xchg
jb
and
jnp
movsb
and
jne
inc
test
mov
inc
pop
jne
sbb
push
mov
sub
pop
daa
aam
push
sti
jge
pop
aaa
inc
shr
cmp
fcmovne
cs
dec
inc
les
add
les
in
scas
xor
add
dec
mov
xlat
loope
cmpsb
sbb
lcall
or
add
in
ret
pop
scas
mov
jb
jb
dec
adc
shll
xor
nop
pop
xor
movsl
clc
jmp
jl
mov
lock
push
xsha256
cmpsb
push
pop
mov
fldl
fildl
push
ss
push
outsl
daa
push
and
cmp
mov
add
lret
ljmp
xchg
and
mov
add
loop
aaa
ds
mov
sbb
cmpsl
leave
gs
les
pop
fisubs
mov
repz
dec
das
daa
js
mov
inc
dec
inc
jbe
push
and
or
push
xor
and
shlb
push
inc
sbb
rcll
cmp
adc
notb
imul
ljmp
or
xrelease
push
mov
lods
pop
sbb
mov
je
ret
inc
cli
jb
mov
cmp
shrl
int
incb
ja
mov
in
in
or
in
xchg
mov
pushf
repz
push
pushf
outsl
mov
imul
adc
cmpsb
daa
fcmovnu
and
jmp
dec
mov
cmp
sbb
std
cmp
jmp
rolb
addr16
nop
xchg
xor
fcmovnb
xchg
pushf
rclb
jp
sub
pop
jp
jp
or
xor
ja
or
xchg
outsb
lahf
and
xchg
and
pop
push
loop
or
dec
mov
ja
jno
mov
into
fildll
push
sub
loope
xor
test
xlat
les
sub
mov
jge
jp
and
push
xchg
jae
rorl
sbb
sbbb
cmpsb
cmc
pushf
mov
cmp
adc
dec
icebp
mov
xor
aad
insl
dec
ljmp
sub
jg
lret
add
and
add
add
jge,pn
in
xchg
std
or
lcall
add
pop
adc
ljmp
xor
cmp
push
gs
jbe
mov
mov
shrl
aaa
ret
adc
scas
call
out
mov
clc
and
inc
aas
lcall
sti
pop
add
subb
fucomi
into
les
rol
add
or
loope
lods
pop
int
stc
xchg
lds
xor
cmpsl
idivl
mov
push
add
outsl
cmp
std
js
push
mov
daa
icebp
xor
ss
test
cmpsl
and
xchg
fdivr
faddl
xchg
mov
jno
or
mov
test
inc
adc
mov
add
lea
inc
mov
mov
cwtl
daa
fld
test
aas
mov
sbb
jmp
lods
bound
sbb
out
arpl
jp
je
inc
int3
pop
push
dec
aad
cli
inc
sub
mov
pushf
iret
jg
into
les
test
clc
or
test
rcrl
and
outsl
shl
mov
sub
test
insb
addw
dec
inc
and
xor
out
push
aas
leave
sbb
int3
push
jnp
and
add
inc
cmp
clc
xchg
jnp
mov
mov
stc
cli
mov
gs
push
mov
dec
sub
in
loop
adcb
clc
adcb
xorl
inc
dec
and
xor
and
insb
imul
sub
fnop
sbb
pop
mov
or
cltd
pop
push
lods
push
cmc
pop
out
sub
fldt
pop
mov
or
mov
das
repnz
xor
bound
mov
push
lock
jno
ljmp
cwtl
pushf
jmp
and
dec
pop
hlt
inc
push
ficoml
pop
out
aad
in
mov
mov
dec
xor
ljmp
pop
jno
pusha
and
jnp
fldcw
stos
sub
add
mov
xchg
adc
hlt
inc
or
cmp
ret
mov
cld
lock
arpl
test
xchg
mov
sbbb
mov
fnstcw
jmp
cmp
outsb
dec
lods
mov
movsl
iret
aad
mov
movsb
mov
push
cmp
mov
sub
mov
sub
lds
ror
stc
xlat
xchg
xlat
ret
popf
xchg
mov
pushl
notb
lods
movsl
mov
pop
std
or
pusha
insb
and
shlb
pop
jg
setle
jmp
lahf
inc
mov
cmp
in
or
or
lret
or
pop
jecxz
or
add
push
repnz
fisubs
movsb
dec
scas
js
sbb
jo
push
mov
push
mov
sahf
add
repnz
adc
ret
mov
lcall
jno
data16
lret
jo
mov
fiadds
cmp
pop
mov
out
cli
hlt
adcl
loop
out
mov
out
mov
iret
rcll
mov
lock
lcall
inc
inc
inc
dec
jge
sub
ret
test
dec
sub
jne
std
rcrb
adc
mov
out
push
and
sbb
jle
movsb
movsl
popfw
dec
insl
add
fwait
mov
fs
ja
rolb
mov
cmc
adc
add
ficompl
xorb
out
dec
xchg
iret
cmp
mov
data16
arpl
mov
stos
jne
pop
mov
mov
out
dec
subb
lahf
fbstp
aas
mov
sub
outsb
out
daa
jp
and
hlt
fwait
push
xchg
data16
in
pop
pop
jno
out
mov
or
xchg
inc
xchg
je
dec
addr16
push
push
mov
fwait
in
xor
fcmovb
inc
and
adc
xchg
adc
sub
icebp
or
fcoms
jmp
mov
fs
mov
test
pop
in
adc
jge
pop
add
cltd
mov
xchg
add
push
push
stos
pop
dec
fwait
insl
dec
out
jo
ret
loope
hlt
jae
dec
cmpsl
mov
dec
or
mov
mov
and
cmp
repz
adc
lods
mov
ficomps
stc
push
sbb
and
cmp
pop
cmp
mov
push
xor
loope
xlat
lea
dec
lock
insl
sahf
shl
into
lock
sti
fld
arpl
cmp
mov
aad
push
popl
push
and
inc
std
mov
mov
clc
sarb
in
xchg
movsl
add
jb
mov
push
imul
xlat
xor
movsl
in
mov
or
push
sub
pushf
test
jecxz
rep
xor
pop
fcom
icebp
cwtl
xchg
jmp
das
lret
out
mov
ss
js
or
int
js
mov
or
push
mov
add
outsl
mov
pop
pop
mov
dec
xchg
mov
and
jno
mov
nop
stos
imul
mov
cs
dec
jle
sub
cld
pop
mov
pop
mov
push
dec
adc
xchg
add
flds
jg
scas
hlt
notb
xchg
sbb
pop
aas
push
loop
and
and
add
pushf
push
roll
lds
aad
xor
imul
mov
xlat
xor
jp
in
lods
je
test
sub
leave
mov
pop
dec
mov
movsb
fwait
les
mov
inc
and
addr16
cmp
dec
cmp
hlt
lret
mov
dec
inc
ret
data16
mov
or
neg
das
push
push
xchg
in
xlat
pushf
pop
jb
mov
das
pop
adcl
negb
push
cmc
decl
stc
arpl
jb
or
push
add
jmp
imul
call
mov
pushf
hlt
fs
decl
mov
fcomi
sbb
sub
mov
test
lods
ss
cltd
jne
out
xor
ret
out
jle
lret
mov
pop
mov
nop
and
jb
je
mov
inc
ljmp
sti
loop
sub
cmc
jle
push
and
push
push
lock
das
cs
into
dec
jl
mov
clc
push
iret
push
icebp
sub
outsl
mov
popa
pop
and
fs
mov
ja
jbe
inc
aas
sbb
add
pop
and
cmp
rcll
out
fbstp
sub
xchg
mov
pop
xchg
pop
test
add
scas
sub
dec
mov
jg
mov
loope
stos
jo
les
bound
mov
jmp
add
jns
mov
sahf
scas
arpl
pop
dec
nop
xor
ljmp
or
gs
cmpsl
lods
cmp
mov
rcrl
adc
cmpsl
pop
addr16
jmp
divb
cmp
and
sub
iret
shll
ja
inc
lods
cmovne
das
nop
jecxz
mov
adc
inc
jo
push
andl
sub
push
xor
and
sahf
fbstp
fmull
lock
xchg
mov
jns
pop
xchg
jle
xor
out
push
lds
sub
or
sub
sub
daa
jp
add
in
or
out
pop
push
aas
cmp
sbb
inc
mov
mov
cmp
stc
dec
jbe
shrb
lcall
adc
jnp
jo
push
aas
mov
jno
out
sub
ss
jbe
test
and
dec
or
mov
mov
sahf
add
xlat
stos
mov
add
out
inc
sahf
or
gs
push
mov
ss
and
inc
cld
and
or
das
lods
mov
cmp
mov
jo
xchg
pushf
mov
cmp
mov
cmp
cmp
shll
or
mov
call
sbb
fs
jp
push
adc
add
popa
fs
and
sahf
inc
or
aaa
ljmp
scas
adc
scas
les
mov
rcrb
xor
pushf
fistps
movsb
in
mov
aam
std
pop
gs
aam
mov
imul
fldl
inc
movd
xlat
sub
xchg
fisubrs
repz
ret
or
xchg
int3
and
inc
pusha
das
pop
sbb
ret
andl
outsl
push
or
pushf
fcomps
or
movl
cmpsb
pop
cmovo
and
xlat
pop
imul
and
mov
or
inc
sub
mov
sub
adc
sbb
sbb
mov
xor
in
mov
in
cmp
je
push
in
mov
xor
push
xor
jp
mov
fsubl
fnstcw
adc
sahf
subl
xchg
daa
or
dec
cmp
mov
sbb
test
mov
adc
dec
in
cld
in
jecxz
pushf
inc
test
xchg
aad
jmp
xchg
sbb
ljmp
push
pop
sbb
mov
pop
mov
and
cmp
jg
fdivr
or
sbb
cmpsb
sub
inc
lcall
fldl
xor
mov
in
ficompl
jmp
cmp
mov
add
add
dec
sub
mov
lret
mov
call
in
push
push
imul
fistl
push
dec
fs
push
hlt
adc
scas
xchg
inc
mov
daa
cmc
push
scas
xor
add
pop
lcall
jp
pop
rcrl
xchg
push
xor
sbb
mov
mov
shrl
sbb
sub
out
or
test
add
out
add
mov
mov
mov
test
scas
mov
repnz
xchg
cmpb
sub
push
jecxz
xchg
cld
adc
sarl
lds
loope
and
sbb
push
and
adc
mov
pop
out
out
mov
outsb
scas
es
clc
dec
sbb
sbbl
cmp
xchg
repz
mov
popf
in
adc
sarb
fistl
push
xchg
daa
and
arpl
pop
ret
popa
jbe
dec
adc
pop
xchg
insl
adc
hlt
mov
sbb
inc
sahf
pop
sub
jmp
lods
les
mov
insb
insb
psraw
mul
lods
mov
int
fmuls
mov
dec
lods
lret
bound
mov
dec
and
enter
fs
sbb
jno
xchg
cwtl
dec
filds
popf
insl
or
cmp
mov
dec
sub
jno
icebp
mov
push
popa
and
mov
and
out
pop
ja
xchg
outsb
mov
mov
inc
fdivrs
pop
jns
mov
lahf
stc
fnstcw
push
xchg
in
or
xor
addr16
sbbb
jl
mov
in
imul
inc
hlt
addb
pop
dec
and
sbb
xchg
push
call
inc
mov
dec
and
pop
mov
mov
inc
sahf
dec
and
adc
sub
push
inc
jg
mov
add
or
add
mov
pop
pop
int
mov
or
or
lret
jbe
jnp
push
imul
xor
lea
add
les
in
jbe
movl
ds
mov
add
push
test
xor
bound
jae
jmp
add
es
icebp
xlat
jb
jp
mov
push
inc
mov
xor
inc
loope
popf
cmp
imul
push
clc
insl
ljmp
iret
add
jle
out
loope
movsb
jl
outsb
mov
mov
push
inc
sahf
cmp
cmp
dec
add
push
inc
stos
popl
int
inc
imul
cmp
sti
faddl
int
lds
aas
or
inc
rolb
xchg
enter
iret
outsb
repz
mov
mov
aad
fiadds
add
idiv
ret
mov
xchg
rcr
fisubrl
sahf
fcomps
cmpb
sti
out
addr16
clc
addr16
das
popa
dec
mov
dec
pusha
mov
repnz
cltd
cmp
mov
push
or
fwait
xchg
ret
dec
movsb
je
push
lods
call
jmp
adc
rorb
inc
test
cmpl
leave
aam
sbb
jns
push
mov
and
lret
ss
pusha
in
or
mov
sbb
push
xchg
fsts
mov
test
cmp
pushf
es
or
pop
lret
lea
sbb
push
pop
jae
xchg
adc
or
cmpl
pushf
jb
or
call
xchg
adc
sub
adc
sahf
filds
repnz
data16
jno
push
insl
ret
in
lea
or
enter
or
pop
outsl
mov
mov
bound
xorb
push
loop
and
std
lahf
test
insb
insb
rclb
xlat
or
call
adc
jl
cli
xchg
and
or
fsts
mov
and
mov
push
push
adc
movsb
out
nop
or
jo
mov
sub
les
jo
mov
pop
movsb
mov
into
into
leave
ja
call
xchg
and
ljmp
sub
push
mov
inc
cmpsb
lds
les
and
xor
in
movsb
adc
lahf
adc
xor
add
push
xchg
addr16
jns
clc
mov
adc
sub
push
xlat
xchg
or
popf
xchg
cmpl
jnp
sub
out
sbb
mov
imul
pop
arpl
mov
aad
and
jmp
and
das
and
add
pop
imul
jp
lcall
pop
push
cli
in
call
jb
mov
ds
or
cltd
adcb
imull
sub
mov
or
into
and
adc
add
sub
cwtl
add
pop
jne
rorb
mov
test
sar
pop
leave
inc
xchg
outsb
movsb
jge
pminub
cmp
add
sti
push
das
xor
js
adc
and
inc
jbe
loopne
sbb
adc
jmp
testb
shll
mov
loop
xchg
fisttpll
into
andb
push
xchg
push
jmp
aas
mov
mov
rcr
push
aaa
jecxz
lds
push
shll
int
mov
and
std
lods
pop
mov
imul
xor
call
test
inc
fistpl
rcll
data16
adc
ss
push
inc
xchg
pop
jb
test
xchg
jmp
outsb
pop
add
notl
outsb
inc
call
xor
pop
ja
or
aad
inc
fsubrs
xchg
push
pop
fstps
sub
jmp
dec
mov
push
icebp
inc
out
adc
push
jbe
jns
pop
dec
aam
cmp
cmp
mov
out
lret
add
je
pop
ljmp
cmp
jo
adc
adc
add
iret
mov
mov
out
ret
and
pop
cmp
sbb
mov
cld
xor
pusha
push
rorl
xor
mov
push
imul
std
or
adc
sub
popl
outsl
jne
into
ds
cmp
sub
xchg
inc
xor
ljmp
loop
mov
mov
cmp
mov
seta
lods
or
mov
loopne,pt
push
fidivl
and
mov
jmp
cltd
sbb
push
pop
push
push
xor
inc
mov
adc
mov
sbb
inc
mov
dec
jg
push
push
sbb
jle
popf
or
dec
mov
rorl
cmpsl
dec
loopne
icebp
push
add
pop
xlat
loopne
jbe
das
data16
mov
mov
sar
add
movsl
ja
xchg
mov
cltd
mov
stc
daa
adc
ret
std
movsb
fwait
aad
outsb
dec
movsb
loope
cmc
fwait
lretw
incl
add
roll
dec
mov
or
enter
ljmp
out
scas
push
shl
xchg
mov
lcall
add
hlt
mov
cs
pusha
imull
or
mov
insl
ret
ret
ss
push
add
lret
push
das
xchg
andl
xchg
jge
sbb
add
sbb
cwtl
enter
sbb
sub
jae
inc
movsl
xor
add
outsb
ds
inc
mov
push
cmp
adc
shrl
mov
sub
sub
int
push
aas
pop
xor
cmc
push
sbb
mov
rorb
pop
adc
pop
hlt
push
jge
add
and
mov
mov
adc
lock
adc
push
fstpl
mov
add
shl
mov
inc
icebp
lds
or
jge
mov
or
xor
fwait
cs
mov
mov
mov
out
mov
movsl
mov
vpsllq
add
xor
sub
xchg
pushf
adc
pop
push
inc
adcb
test
popa
sub
jnp
jae
pusha
dec
lahf
pop
sbb
or
sub
or
mov
push
mov
lahf
in
mov
int3
xchg
or
pop
or
inc
ret
push
out
pop
push
jns
call
enter
dec
cmpsl
icebp
sub
and
clc
call
nop
test
out
sub
lcall
stc
dec
adc
cwtl
dec
pusha
hlt
mov
dec
or
leave
stos
inc
in
imul
mov
sub
jo
and
push
lds
fxam
scas
or
rorl
pop
pop
into
cmc
bound
rdtsc
or
mov
test
fbld
sub
std
je
push
jb
mov
cs
es
fsub
ja
jge
jno
mov
movsb
test
jb
lock
mov
sbb
out
jbe
xchg
stc
mov
push
push
and
xchg
addr16
sti
sub
ljmp
or
in
mov
mov
mov
push
cs
insl
mov
cmp
push
jp
push
loop
xor
sub
movsb
mov
inc
je
sti
nop
xchg
lret
nop
call
movsl
jnp
xor
fldcw
adc
fdivs
scas
mov
cwtl
mov
xchg
mov
jg
ret
add
pop
dec
insl
stos
mov
push
adc
fstpt
and
mov
jge
loope
sarb
decl
out
mov
lds
addr16
enter
test
and
std
mov
ljmp
mov
in
and
mov
add
sbb
lcall
jne
add
lahf
sub
pop
jecxz
mov
into
pop
push
mov
ret
pop
adc
push
cmp
pop
mov
idiv
and
mov
scas
sub
movsl
xchg
sub
js
inc
cmp
sub
fstpl
sub
filds
jg
nop
cmp
add
nop
xchg
mov
sub
inc
in
jg
sbb
xor
sbb
cmp
mov
pushf
stos
insb
lock
fimuls
sub
push
out
inc
cmp
push
jp
out
mov
inc
adc
mov
xor
cmp
or
mov
js
inc
cmc
lods
mov
and
popf
pop
out
std
sbb
fwait
clc
xor
mov
mov
test
xor
loop
outsb
movsb
testb
out
les
dec
push
pop
pop
hlt
in
push
mov
inc
fistps
push
ss
push
cmp
jl
leave
loopne
ss
movsl
push
popa
into
lret
pop
sub
lock
inc
add
std
xchg
out
repnz
xchg
push
xchg
mov
and
pusha
ret
sub
insb
and
sahf
push
fmulp
xor
cmpsb
jo
or
mov
rcrl
inc
jne
fsubl
jmp
mov
es
lea
push
hlt
scas
xchg
pop
or
pop
inc
or
jecxz
mov
mov
push
scas
ds
int3
cmp
lea
add
fstl
pop
sbb
mov
jne
dec
xor
popf
outsl
fistl
mov
loop
jl
imull
lods
pop
push
sbb
outsl
rcrb
test
or
pusha
jo
push
cmp
and
pop
ss
or
add
jmp
outsl
xchg
pop
jb
adcb
push
in
jmp
and
repz
cmp
fmull
es
outsl
mov
addr16
and
dec
mov
jecxz
jg
lahf
mov
cmp
pop
test
pop
mov
pushf
scas
lcall
add
mov
scas
lahf
mov
push
mov
mov
sub
arpl
jmp
adc
inc
add
add
sarb
inc
sub
sbb
sbb
subb
xchg
outsl
lcall
mov
std
sti
dec
pop
mov
shrb
loopne
dec
dec
pop
push
fmull
lahf
jne
sarb
rorl
stos
int3
es
ljmp
or
enter
pop
pusha
and
sbb
fistps
repz
lods
sub
push
xor
test
test
xor
or
imulb
or
sub
inc
es
inc
ret
fs
sbb
xor
sti
lock
fstps
sub
cmpb
sbb
adc
testb
fcompl
push
das
in
call
push
ss
popa
fcompl
mov
mov
mov
roll
loopne
das
sub
loopne
pop
xchg
jmp
in
mov
cmp
add
mov
xchg
cmpsb
mov
fiadds
pushf
lds
jne
rep
mov
lods
rorb
mov
lds
xlat
jns
xchg
inc
inc
test
mov
jb
pop
inc
push
cld
loope
iret
pmulhw
or
repz
jae
xchg
pop
jns
bound
cmp
mov
stos
xchg
mov
fwait
mull
sbb
cmp
mov
push
pop
pop
push
shl
aaa
insb
cmp
cmc
enter
ja
in
dec
pop
push
ds
dec
jmp
jnp
mov
lock
mov
dec
cmp
xlat
sti
andb
pop
inc
jecxz
pop
xor
js
testb
xor
hlt
gs
sbb
pop
cld
loope
hlt
and
xchg
adc
out
enter
mov
adc
iret
call
mov
pop
lret
lret
inc
in
lcall
test
mov
sbb
pusha
dec
pusha
cmc
or
sub
adc
icebp
mov
cmc
inc
ret
dec
call
mov
mov
adc
dec
push
inc
and
js
andb
insb
or
xor
out
pop
sub
pushf
movsb
mov
and
inc
sub
out
pop
dec
push
neg
mull
xor
dec
cwtl
aam
lods
dec
sbb
mov
mov
push
loop
lea
jecxz
mov
fsubrp
mov
out
and
cmp
cmpsb
mov
jno
mov
push
fsubp
add
fwait
scas
inc
cmp
and
in
cmp
push
cli
pop
icebp
sub
xchg
ljmp
ds
ret
cmp
lret
fildl
ljmp
mov
xchg
fdivrl
mov
addl
mov
xlat
movsl
faddl
fiaddl
mov
cmpsb
ret
adc
sub
es
jae
add
mov
push
pushf
bound
push
cmpb
push
inc
lea
and
mov
stos
sarb
lsl
or
xchg
pop
fisubrs
in
mov
mov
dec
popa
mov
jl
push
fisttpl
lret
mov
lea
jns
dec
dec
gs
je
cmc
jnp
and
jns
in
loopne
jno
mov
cmp
fwait
mov
pop
push
jg
loopne
fdivr
sub
mov
imul
ret
mov
pop
int
pop
in
sub
in
xor
cmpsl
pop
inc
idiv
adc
sbb
or
cmp
stc
jl
outsl
stos
icebp
jnp
push
inc
jno
rorb
adc
scas
cs
out
xchg
mov
adc
shrl
mov
xor
mov
xchg
cs
xchg
inc
dec
hlt
ja
push
mov
push
pop
test
out
leave
shll
aas
mov
iret
pusha
lea
aaa
sbb
xchg
mov
mov
jl
cmp
call
lea
jns
push
push
call
lock
rorl
popf
dec
clc
xor
int3
stos
inc
or
jle
jne
shll
scas
test
add
cmp
xchg
adc
adc
test
outsb
cli
fwait
out
repnz
mov
call
dec
push
ljmp
dec
fs
cmc
push
pop
sub
jl
mov
ss
std
fistpll
out
lahf
fdiv
and
pop
addb
aad
lret
loop
sahf
ja
sbb
jno
sbb
and
pop
sti
jle
mov
xchg
in
js
inc
adc
or
pushf
and
ss
add
leave
add
jle
imull
out
insl
sbb
mov
mov
pop
test
jnp
jne
push
dec
stos
int
push
ret
mov
orb
in
or
and
pop
jbe
repz
inc
mov
popa
xchg
outsb
shr
mov
dec
jl
clc
int
mov
nop
orb
jno
stc
shlb
or
add
cmpsb
daa
pop
pop
imul
jnp
inc
imul
add
les
shlb
daa
xchg
arpl
mov
adc
aam
aas
mov
jns
lock
mov
pop
jecxz
or
add
stc
and
xlat
and
paddw
outsl
aam
add
frstpm(287
cli
fsqrt
mov
push
cmp
test
stc
or
adc
sub
mov
test
add
call
or
lods
outsb
dec
or
cmp
aaa
add
sbb
push
add
jl
jb
ficoml
jne
xchg
jge
fistl
test
gs
loope
lods
clc
xchg
test
push
xor
lcall
push
lods
xchg
push
push
push
movb
sub
xlat
xor
mov
gs
lret
cmp
inc
pop
int3
jle
pop
cld
xchg
cmp
jmp
in
gs
into
push
bound
test
mov
sub
lahf
es
dec
mov
jle
shrl
dec
pusha
data16
arpl
scas
xchg
lahf
inc
js
push
push
pop
jl
xor
shrl
sub
and
sub
rol
insl
ja
aas
inc
inc
aam
pop
cs
xlat
movsb
cmpsb
sub
mov
cmpsl
xor
fnsave
mov
xchg
sbb
into
sub
inc
mov
xchg
in
jmp
fcomps
imul
stc
inc
add
das
xchg
inc
fsub
push
movsl
dec
lock
xor
je
add
aas
nop
mov
inc
sub
push
mov
mov
loop
in
mov
add
jnp
adc
mov
mov
stos
cwtl
xor
sarl
iret
bnd
movsl
arpl
mov
add
pop
inc
faddl
pop
lods
lods
lcall
push
jne
xchg
mov
int3
dec
in
cli
push
push
cmc
or
jmp
mov
cmp
adc
push
push
jo
jmp
xor
or
mov
out
rorb
jge
repz
sub
add
nop
sub
add
mov
daa
xor
xor
push
gs
dec
push
and
and
and
xchg
ds
test
sub
jmp
and
mov
push
mov
lret
out
xor
and
pop
jge
sbb
xchg
inc
add
stos
mov
pushf
xchg
fldt
movsb
jge
fbld
mov
iret
xor
push
iret
fldenv
mov
hlt
add
and
mov
sbb
mov
les
cmp
popa
pop
and
inc
mov
lds
sub
shl
cs
stc
int
jno
fbstp
and
mov
xor
push
jo
das
jae
clc
jno
xchg
mov
jge
mov
fistps
sub
aad
in
mov
stos
mov
nop
pop
inc
loop
es
and
pop
addr16
rol
dec
leave
call
lcall
lea
push
mov
ss
dec
sbb
cs
or
or
jmp
daa
sbb
jnp
pop
mov
out
xchg
mov
mov
or
mov
inc
mov
jbe
push
jp
in
cltd
pop
out
push
fmull
xchg
out
loope
jge
mov
cmpb
lcall
testb
adc
mov
push
iret
stos
in
xchg
jmp
ret
inc
imul
mov
jno
shl
mov
loopne
outsl
lret
push
cmp
inc
rolb
jno
lods
mov
pop
test
lods
add
mov
test
jmp
cmp
dec
mov
in
aas
aaa
xchg
insl
adc
lea
lods
xchg
mov
mov
push
xor
add
insl
ret
xchg
jb
sub
push
lods
popf
jle
into
adc
sbb
out
fwait
mov
cmc
jbe
pop
mov
lret
cmpsb
sub
imul
adc
int
pop
enter
adc
out
pop
sbb
inc
test
std
out
test
inc
push
xor
fs
push
sbbb
mov
int
sbb
notb
mov
cmp
or
adc
dec
or
pop
xor
jbe
mov
lds
gs
aad
push
sbb
add
movb
sbb
into
pusha
adc
test
add
out
xchg
push
dec
lcall
sahf
push
repnz
enter
cmp
leave
xor
cwtl
leave
mov
sub
sbb
jmp
out
cmp
mov
and
lea
pop
ljmp
xor
cmc
or
aam
cli
in
jo
test
mov
cmp
add
je
sbb
push
push
jle
push
inc
in
subl
inc
je
pop
inc
inc
leave
sbb
ljmp
das
lods
test
popa
push
test
in
cld
jmp
dec
pop
push
cld
push
lahf
jne
lds
cmpsl
xor
xor
mov
ret
pop
stc
dec
outsb
icebp
pop
mov
lds
jg
cmp
jecxz
in
ja
jb
ret
inc
inc
gs
iret
inc
outsl
sub
sarl
loopne
dec
sub
adc
movsl
mov
sbb
enter
sub
inc
mov
mov
fmuls
push
or
ret
lods
push
out
sti
lods
add
inc
adc
mov
ljmp
push
in
mov
push
mov
add
adc
inc
sub
roll
or
or
push
cli
popa
rep
int
mov
sbb
or
mov
hlt
shll
mov
mov
movsl
jbe
mov
gs
in
mov
in
repz
and
frstor
cmc
push
push
push
addr16
inc
sub
or
sub
mov
dec
loope
js
dec
iret
pusha
and
clc
pop
aam
mov
push
push
xchg
jns
sub
divb
xorl
fsubl
jne,pt
mov
dec
divl
mov
adc
mov
pop
mov
into
cs
inc
sbb
cmp
sbb
mov
push
xor
es
jo
lcall
mov
jae
sbb
pop
or
inc
int
fldt
lods
fadds
int
cmp
or
scas
stos
mov
test
repz
push
xchg
cwtl
outsl
ss
sub
and
imul
pop
leave
loop
movsl
inc
mov
pop
sbb
or
cld
cmpsb
aas
push
mov
mov
mov
in
pop
jp
std
jno
mov
jge
dec
sti
or
add
adc
adc
mov
gs
sbb
rolb
stc
pop
mov
pop
xor
mov
test
sub
ljmp
aad
cmpsl
ret
jmp
adc
fnstcw
ljmp
movsl
jl
lret
leave
dec
je
movsl
mov
mov
rorl
dec
lods
call
mov
add
negb
repnz
cmpsl
inc
push
test
sarl
sahf
lcall
rorl
adc
xchg
inc
inc
rorl
decb
arpl
cmp
mov
mov
and
add
mov
in
fadd
scas
pop
push
pop
adc
jae
loopne
jle
hlt
xlat
adc
fwait
cmp
inc
stc
jle
mov
jmp
inc
fildll
push
push
add
nop
std
mov
push
das
lret
or
std
mov
xor
rcrl
movsb
mov
rcrl
fnstcw
mov
insl
es
inc
lock
mov
xor
jne
out
mov
jbe
sar
insl
mov
xor
push
mov
scas
test
add
pop
fwait
lret
add
cmpsl
cmpsl
jbe
into
mov
xchg
mov
mov
xchg
cli
data16
mov
xor
jae
scas
movsb
out
ffreep
mov
xchg
stos
mov
imul
mov
mov
rcr
repz
mov
xchg
pop
lret
add
lcall
jno
iret
sub
lret
jge
lds
pushf
cwtl
adc
filds
add
clc
jp
fnstcw
add
cli
adc
gs
pushf
clc
or
dec
cmp
xchg
mov
dec
iret
rclb
aam
dec
xor
imul
test
ss
mov
push
dec
jns
inc
aam
ljmp
mov
and
pop
pop
push
jge
in
pusha
test
mov
xor
aas
add
sti
loope
push
mov
inc
pop
out
pop
nop
xchg
cld
lods
in
mov
test
pop
dec
lods
adc
cli
xchg
jo
cmpsb
mov
enter
sbb
xor
rolb
movsb
mov
es
pxor
sbb
pop
fucom
pop
xchg
testb
jmp
icebp
inc
jne
icebp
pop
push
in
cmp
xchg
in
cmp
scas
aam
das
adcb
imul
outsb
shrb
ret
sahf
cmp
jns
lea
adc
xchg
dec
pop
dec
xor
inc
fs
mov
push
mov
mov
sub
les
mov
jnp
xchg
adc
bound
rolb
div
sub
fidivl
and
mov
add
cmpsl
adc
sarl
push
cmp
add
inc
into
xchg
adc
add
pop
lea
push
loop
clc
jg
push
iret
adc
fildl
sub
push
imul
jb
sti
lock
xor
dec
outsb
or
sub
loope
in
and
mov
mov
cmp
xor
mov
jl
frstor
jmp
mov
jno
scas
fyl2xp1
add
push
cltd
pop
adc
jo
movb
shrb
add
pop
or
dec
and
and
cmp
cmpsb
rolb
push
xchg
dec
sub
sti
dec
sub
jmp
enter
lds
aad
push
jmp
into
mov
movsb
add
xlat
dec
in
clc
enter
lds
xchg
test
popa
sbb
dec
lcall
mov
inc
int3
dec
js
insb
sbb
sar
jb
pop
sbb
lods
lea
mov
xchg
add
dec
cmp
cmp
pop
add
sbb
test
test
add
mov
jns
push
lods
xor
jle
popf
mov
lcall
jg
in
or
pop
aad
jno
ss
jp
aaa
mov
cli
mov
fists
jg
jno
sti
sbb
inc
cltd
push
mov
orb
int3
in
dec
negb
jbe
lods
sbb
lcall
daa
inc
daa
adc
pop
leave
test
dec
js
repnz
jl
mov
mov
xchg
xchg
std
pop
and
sti
movsl
hlt
leave
loope
loope
mov
or
sub
cs
hlt
sbb
mov
sub
jmp
arpl
adcl
test
push
aaa
cmc
xor
inc
add
sbb
xor
sar
sub
add
imul
outsl
mov
xchg
out
xchg
data16
sub
mov
mov
icebp
scas
ja
xchg
enter
jge
cmc
ja
test
xchg
cmpsl
sub
add
cmp
mov
jo
rclb
in
fdivr
push
in
loop
lock
dec
lods
inc
mov
mov
ficompl
aas
or
in
je
inc
mov
nop
sbb
push
sti
loope
jp
jo
pop
adc
adc
out
repnz
dec
shl
mov
gs
popf
push
je
repz
je
adc
lds
push
gs
jne
xor
mov
pop
dec
ja
dec
addl
mov
sub
mov
test
jo
mov
aad
push
jo
xchg
jle
cwtl
or
scas
mov
rcrb
dec
sbb
fisttpl
repz
pop
pop
leave
out
inc
or
notb
or
int3
in
pop
insb
repz
out
pop
pop
fidivrl
rol
stc
cmpsb
cmc
je
imul
and
enter
test
incl
sub
jb
in
and
iret
xchg
mov
ror
mov
xchg
lcall
xchg
cs
mov
ljmp
std
sbbb
out
mov
test
mov
jb
sti
adc
cmp
sarl
and
cmp
lock
add
xchg
ss
and
std
inc
mov
mov
jg
mov
xor
xor
xchg
xchg
inc
pop
adc
orl
push
insl
addr16
mov
jnp
adc
lock
mov
mov
jne
scas
add
popf
fnstenv
cmp
cmp
and
fs
jno
pop
inc
pop
mov
push
mov
push
mov
lahf
pop
mov
out
js
cmp
add
mov
rcrb
xchg
enter
pop
imul
shlb
mov
and
aam
addr16
daa
and
and
sahf
fdivs
test
les
icebp
scas
cmp
in
aas
movsb
rol
lea
adc
das
mov
xor
loop
pop
sub
stos
xchg
jne
cwtl
cmpsb
aaa
cli
sub
or
dec
addl
push
mov
lcall
cld
cld
adc
push
mov
xchg
les
mov
inc
dec
mov
inc
and
adc
imul
mov
jmp
stos
pop
repz
or
movsb
das
notl
mov
aad
push
jmp
jp
scas
xor
xor
cmpsl
outsl
pop
push
repnz
lcall
mov
jl
jg,pt
daa
ret
push
xchg
sahf
in
frstor
and
lea
test
push
inc
xor
adc
pop
dec
dec
lods
les
imul
clc
and
movsl
xchg
jge
sbb
repnz
mov
clc
or
cmp
cmp
mov
js
ss
shlb
addr16
scas
dec
mov
mov
aas
in
push
push
jmp
jl
push
sahf
jnp
mov
mov
push
dec
xlat
out
fwait
dec
lcall
mov
push
insb
fstps
stos
push
dec
inc
imul
push
jle
jmp
jmp
and
jne
std
inc
outsb
xor
sub
cmpsb
sbb
or
ljmp
pop
or
fstps
js
stos
pop
mov
push
xlat
aaa
sub
int
cltd
mov
rcrl
icebp
stos
ret
or
jg
andb
ret
mov
sub
fsubrl
in
call
sbb
cld
in
mov
adc
or
sub
std
adcl
and
test
lods
mov
loop
inc
mov
add
btr
inc
inc
jno
inc
dec
or
push
call
xchg
add
or
lods
add
and
jle
stc
sub
stos
xor
push
fwait
push
sbb
xchg
incl
pop
movsl
or
movsl
add
outsl
ret
popf
inc
mov
sub
inc
cmpsb
je
pushf
jg
xor
sbb
fldpi
cmp
in
or
inc
test
enter
test
sti
ror
out
dec
jne
sub
insl
aam
jmp
lret
xchg
lods
lds
insl
push
xor
adcb
lea
xchg
or
push
xchg
bound
gs
iret
in
iret
dec
adc
test
in
push
arpl
aad
jp
bound
loop
push
jl
or
out
inc
adc
pop
aaa
and
or
pop
stos
xchg
xor
xor
sbb
push
imul
sub
jecxz
and
dec
xor
bnd
mov
sub
adc
jle
pop
loopne
imul
dec
xor
ss
or
repz
sbb
dec
fwait
mov
fbstp
sub
inc
arpl
cmp
or
mov
out
inc
pop
and
cltd
sbb
xor
pop
rclb
jg
popf
pop
lds
das
xchg
mov
stos
outsb
sub
sbb
gs
push
loop
shll
mov
pop
dec
sub
and
leave
push
sbb
pusha
in
mov
mov
es
cmc
ja
and
js
inc
cli
add
pop
enter
push
outsl
xchg
outsb
mov
jne
inc
xlat
cld
sbb
cld
inc
and
inc
push
ret
add
xor
cmp
hlt
mov
cwtl
xlat
and
cmp
xchg
and
jmp
pusha
test
jb
mov
sub
mov
setle
jmp
sbb
xchg
mov
cs
push
iret
push
and
sti
dec
or
jns
push
dec
cmpl
sbb
fdivp
mov
adc
xchg
cmp
xchg
pop
lret
imul
mov
jl
dec
hlt
jae
cmpsb
adc
add
aam
sbb
bound
push
or
arpl
int
pushf
fwait
rol
incl
jecxz
and
or
hlt
mov
std
jmp
loop
gs
mov
pop
addl
mov
adc
sbb
and
inc
inc
jp
inc
sub
pusha
and
sbb
push
imul
xchg
add
add
sbb
aam
loopne
std
push
push
data16
add
cmp
xor
lret
imul
pusha
lods
lret
mov
cvtpi2ps
xchg
push
xchg
cwtl
push
sbb
and
mov
lea
rcll
lcall
xchg
xlat
icebp
mov
hlt
xchg
xchg
sub
xchg
dec
adcl
fstpl
ja
dec
push
mov
xchg
cmc
mov
insb
inc
dec
mov
pushf
sub
jo
dec
ss
jmp
pop
mov
add
xchg
fld
mov
addr16
movl
push
mov
push
pop
adc
sub
pop
aad
adc
in
push
xchg
fcomip
push
jge
movsl
iret
sbb
cmpsl
push
into
sub
jb
jl
add
cmp
pop
adc
mov
push
push
mov
pop
inc
int
dec
int3
adc
test
pop
mov
cmp
div
jge
lret
es
push
cmp
inc
inc
adc
mov
clc
cwtl
push
jle
jl
int
xchg
mov
inc
movsl
jp
fistpll
jns
or
push
pop
sub
mov
xchg
test
pop
ss
dec
adc
xchg
fs
ret
jmp
push
aad
jp
xchg
test
in
pop
icebp
push
pop
xor
mov
stos
pusha
sub
xlat
push
pop
mov
jbe
bound
adc
push
test
rcr
push
test
fstps
testl
test
mov
cmp
scas
mov
xchg
adc
adc
and
ss
push
jbe
daa
pop
pop
push
nop
mov
daa
push
xchg
or
dec
sub
fwait
sbb
ret
repnz
lods
pushf
jo
loop
dec
jb
jbe
xchg
add
repz
mov
unpckhps
and
rol
in
cltd
test
cmp
roll
loope
adc
mov
pushl
add
lock
je
outsl
sub
lods
stos
push
loopne
lock
mov
push
js
scas
mov
lods
or
imul
jb
sbb
test
mov
shlb
jnp
outsb
dec
out
sbb
and
sahf
es
out
out
mov
scas
sbb
cs
pop
mov
sbbb
mov
pop
negl
jle
rol
xor
ljmp
pop
shrl
cltd
cld
mov
mov
aam
dec
movmskps
sbbb
and
push
xor
push
mov
xor
lahf
test
inc
xchg
jmp
insl
mov
dec
out
imul
xor
aad
mov
mov
into
adc
jp
clc
lea
popf
xlat
and
icebp
sbb
sub
xchg
push
jo
xchg
das
lock
cmp
sub
dec
mov
pusha
call
pushl
mov
mov
dec
dec
xchg
fs
sub
test
jbe
jg
push
or
repz
jg
lods
scas
cmpsb
xor
push
outsw
lock
add
cld
inc
xor
push
xor
jmp
dec
daa
popa
movsb
and
xor
dec
pop
adc
dec
jne
rcr
in
jae
movl
push
cmp
pusha
movsl
outsl
test
dec
add
mov
xor
mov
pushf
leave
sub
sbb
xor
stc
xor
mov
test
out
xchg
adc
lret
stc
dec
sub
mov
ret
test
or
std
pop
xorl
cmpsl
scas
jae
clc
cmp
jb
xchg
cmp
mov
mov
xchg
adc
hlt
jmp
bound
mov
insl
pop
les
add
and
push
mov
gs
in
enter
test
out
cmp
ja
shrl
mov
mov
mov
sbb
hlt
add
jecxz
loopne
dec
mov
call
jmp
pop
cmp
out
pop
pop
push
mov
fstpt
cmp
loopne,pn
sub
sti
cwtl
jge
inc
push
pop
and
iret
adc
mov
mov
pop
inc
out
mov
in
orl
stc
or
aad
and
adcl
push
fldcw
mov
mov
mov
jl
xchg
adc
popa
jmp
fs
mov
dec
pop
or
dec
jl,pt
inc
mov
add
xor
xchg
jne
je
stos
mov
push
xor
sbb
imul
sahf
xor
imul
loop
femms
and
dec
arpl
ret
daa
jns
sbb
push
cmp
in
lock
add
pusha
ret
out
lret
into
cltd
jo
orb
cld
fisubl
add
adc
mov
lahf
mov
data16
test
pop
fs
into
pop
cmp
testl
xchg
or
test
scas
shrb
xor
imul
lcall
add
mov
outsb
ss
sbbl
nop
enter
push
ljmp
xchg
insb
sbb
lcall
das
mov
sbb
aad
loope
fprem1
out
aad
sti
push
out
fiaddl
mov
rorl
adc
xor
mov
push
aad
int
jecxz
adc
cld
icebp
sub
sub
inc
lods
adc
mov
in
sti
push
mov
outsb
addr16
pop
inc
fnstsw
jnp
cld
test
push
push
aas
xchg
and
xchg
testl
cmp
mov
icebp
dec
pop
cltd
ja
fdiv
adc
das
cmp
or
sbb
pusha
mov
in
push
push
xor
mov
jbe
and
mov
ljmp
sbb
cmpsb
cmp
hlt
int3
cmpl
adc
jb
fisubrl
mov
xchg
dec
stos
aam
and
and
jo
outsl
or
mov
and
rol
ja
stos
cld
xchg
push
lds
sub
inc
jp
sub
fsubp
pop
xor
jge
or
pop
and
xor
mov
outsl
das
xchg
leave
adc
je
adc
fisubl
lcall
shrl
xchg
jge
cmp
sbb
inc
mov
test
js
pop
jae
dec
mov
rcr
sahf
add
repnz
ret
push
repnz
jbe
jns
jle
mov
daa
outsb
mov
add
mov
or
push
outsb
xor
cld
lock
push
push
out
std
and
filds
inc
lea
dec
xchg
adc
xor
xorb
push
cs
mov
shrl
push
aad
cli
pop
scas
shrl
out
mov
dec
and
add
enter
or
push
jbe
jns
pop
jo
xchg
ret
mov
or
jg
inc
adc
fildll
inc
sbb
mov
sub
aas
mov
dec
fld
add
lods
jne
and
aad
mov
jb
push
movsl
lock
rdtsc
es
pop
adc
shlb
mov
mov
in
mov
shl
int3
xchg
mov
loop
sub
jle
jb
insl
cmpb
mov
sarb
mov
es
jle
aad
mov
test
shrl
or
mov
out
scas
mov
lods
inc
cs
jle
ja
and
movsb
mov
inc
cmp
mov
pop
ds
mov
or
xchg
jmp
push
cltd
mov
bound
adc
movsl
mov
cmp
lods
call
adc
cli
mov
xchg
cmp
add
xchg
sub
inc
clc
daa
pop
mov
imul
jb
push
jp
rorb
aas
ss
xlat
push
and
mov
and
dec
ret
or
inc
arpl
dec
pop
mov
or
jg
rclb
jns
pop
mov
add
sub
cwtl
shr
inc
inc
cltd
xchg
int
ret
mov
int3
int
cmp
ss
adc
sub
add
fsts
fidivl
clc
add
bound
lahf
lods
popa
imull
rorb
out
or
idivb
jae
or
push
hlt
adc
pusha
mov
or
fdiv
clc
mov
xor
lds
lods
cltd
shrl
js
insl
jo
pop
dec
pop
imulb
add
out
xchg
popa
adc
xchg
loop
stos
xchg
jne
arpl
pushw
js
iret
pop
sahf
inc
inc
leave
in
addb
push
xor
mov
mov
popf
fmull
inc
dec
imul
cmpsl
enter
ljmp
subl
fwait
cltd
in
nop
fisubrl
aas
mov
push
into
dec
out
das
movsb
fsubrl
or
sbb
adc
and
and
repz
ret
rclb
xchg
test
dec
xchg
stos
jnp
push
jnp
test
fmull
out
mov
pop
and
scas
sub
inc
inc
fwait
pop
jmp
pop
or
mov
adc
adc
in
xchg
sub
je
iret
ljmp
mov
mov
and
push
ret
pop
mov
outsb
adc
call
mov
jns
aas
sub
xor
leave
push
pop
pushf
test
pop
sub
sbb
cmp
nop
jne
lea
pop
lods
mov
sub
ss
lcall
jmp
das
cmp
dec
mov
sti
mov
decl
mov
in
lock
stos
repz
dec
jmp
push
addr16
stos
pop
pop
inc
cmp
xchg
movsb
add
aaa
mov
gs
push
mov
push
mov
jmp
rcrl
sbb
mov
mov
addr16
adc
insl
push
and
mov
mov
adc
nop
sub
daa
vmovaps
push
les
sbb
int
xor
pop
enter
jnp
jg
or
ja
or
sbbb
cmpsl
bound
xor
cmpsl
loope
fsubp
xor
sti
movsb
pop
add
inc
jns
shrb
xor
sub
insb
in
sbb
popf
cs
mov
cltd
or
shll
push
mov
lea
daa
sti
mov
sub
inc
cmp
or
roll
in
push
test
and
dec
out
cmpsl
int
dec
xchg
cmp
jmp
rcr
xchg
xchg
sti
or
jbe
cli
stc
mov
sub
xor
arpl
out
jo,pt
and
or
add
insl
jmp
pop
and
jle
mov
std
test
mov
cmpsl
cwtl
lods
mov
filds
jmp
aad
inc
sti
pop
fs
mov
pushf
push
lcall
push
pop
or
inc
in
test
inc
in
jp
arpl
and
add
mov
push
adc
into
sbb
ret
test
fs
push
sahf
aad
mov
push
pop
pop
setbe
popa
mov
jecxz
pop
shlb
mov
sbb
shl
repnz
mov
enter
fs
sbb
or
sub
sbb
jne
pop
pop
sbb
stos
adc
scas
jle
aam
mov
shll
lock
das
sbb
mov
in
mov
mulb
push
ret
adc
lcall
cmp
adc
shrb
cmpsb
lahf
mov
cs
dec
push
xor
adcl
aaa
dec
inc
mov
mov
imul
movsb
popf
mov
jmp
les
add
fistps
test
fistl
add
mov
out
cmp
and
adc
sbb
inc
jno
mov
sub
pop
xor
nop
xor
and
cltd
mov
mov
sub
xor
sbb
in
cmpsb
pop
jmp
sbb
xchg
sub
rolb
adc
jb
call
xor
jnp
xchg
dec
lahf
xchg
or
repz
add
cmp
enter
add
lds
call
cs
inc
cmp
pop
inc
xchg
xchg
shr
sub
and
jmp
icebp
pop
jecxz
xchg
and
mov
add
sbb
sti
or
dec
out
jp
xlat
data16
mov
dec
lock
popf
jne
push
cmp
or
mov
inc
cmc
mov
sahf
mov
movsb
cld
adc
clc
add
cmc
enter
inc
pop
cs
imul
out
mov
pop
scas
push
pop
test
cltd
in
jns
in
into
in
xor
out
mov
ret
add
adc
stos
subl
test
sbb
int
pop
movsl
xor
shll
icebp
loopne
mov
lods
negl
cmp
cmpsb
inc
and
push
jne
gs
push
outsl
xchg
nop
xor
jne
out
in
scas
fidivrs
mul
lea
xor
jg
shld
es
push
stos
mov
inc
out
popf
add
mov
mov
pop
mov
je
in
or
in
mov
inc
inc
jbe
test
stos
push
mov
sub
pushf
push
cld
inc
jp
adc
mov
mov
popa
sbb
or
aam
scas
mov
je
rclb
jbe
push
fidivs
mov
testb
mov
dec
fwait
mov
es
mov
dec
cltd
fimull
inc
std
mov
xchg
dec
cmpsb
repz
inc
outsb
pushf
and
shrl
and
arpl
std
fs
out
into
mull
cmp
cltd
pop
test
lcall
adc
sbb
mov
jno
subl
cmc
inc
sahf
xchg
cmp
ljmp
rorl
or
adc
ror
ficoml
stc
push
mov
push
lock
inc
sub
in
icebp
push
xor
sbb
imull
imul
repz
out
lds
rorl
xchg
cmp
shll
in
and
arpl
out
enter
cmp
push
or
repz
dec
pop
jmp
aam
dec
in
push
dec
push
sbb
arpl
jb
sbb
stc
adc
test
pop
inc
xchg
xor
cmc
inc
mov
mov
inc
rclb
lret
jno
sub
shlb
or
cmp
enter
dec
ret
push
dec
mov
dec
mov
hlt
lahf
fwait
cld
ret
xchg
xchg
push
hlt
rorl
addr16
dec
cmpsb
jne
inc
cmp
sbb
or
push
lods
clc
fwait
xchg
mov
arpl
sub
inc
mov
adc
jmp
inc
pop
sub
insb
sub
imul
or
or
xchg
adc
lods
mov
mov
stos
cmpsb
test
push
xchg
inc
cs
pop
cmpsl
stos
scas
out
push
or
push
in
add
push
mov
dec
out
cmp
imul
pop
jno,pt
xcrypt-ecb
cmpsl
leave
mov
jmp
pop
repz
repz
out
cld
pop
sub
mov
cli
arpl
fstps
fisubl
iret
les
xor
adc
sbb
out
xor
or
mov
roll
cmp
push
pop
fldcw
into
mov
mov
repnz
insb
js
andl
add
xor
cmp
dec
pop
xor
ljmp
ja
push
test
jae
setb
cmp
add
cmp
jg
clc
jnp
pop
mov
fnstcw
cltd
ret
insl
in
or
into
in
adc
mov
jg
enter
mov
lock
xchg
adc
in
push
mov
add
mov
sbb
add
shl
push
iret
and
fwait
or
lret
jne
fcomp
pop
add
lea
mov
jns
mov
pop
fbstp
test
cmp
jge
xorl
add
in
mov
mov
subl
sub
cltd
movsb
mov
dec
mov
stc
fcomi
arpl
pop
cmc
bound
mov
sub
sub
mov
jl
mov
andl
popf
in
or
or
test
jmp
fcompl
lcall
flds
pop
daa
sahf
mov
pushl
cmp
add
jg
and
cld
rol
js
dec
cmc
push
jno
ss
inc
jecxz
rcl
shrl
repnz
dec
popf
call
aad
or
lret
pop
imul
adc
or
or
pop
cltd
push
mov
adc
frstor
dec
fs
sahf
push
mov
cmp
xchg
mov
popa
lahf
or
inc
push
test
xor
and
ret
adc
dec
jle
or
mov
xor
sbb
inc
rcl
sub
imull
mov
push
push
mov
xchg
call
pop
shlb
push
lods
icebp
and
outsb
sbb
stc
js
pushf
ljmp
mov
or
sarl
popf
insl
sub
pop
call
adc
and
ror
mov
push
js
es
mov
inc
adc
mov
push
dec
ror
mov
xor
jmp
adc
in
data16
cmp
mov
xor
mov
sub
xchg
cmp
jb
leave
adc
xchg
mov
sub
inc
ljmp
xchg
inc
mov
jns
mull
xchg
and
adc
mov
stc
loop
push
daa
mov
lods
mov
pusha
mov
in
lret
push
out
repz
xor
inc
int3
xor
outsb
notl
in
out
cmpsb
pop
es
aas
jnp
scas
xchg
shll
sbb
pop
pop
mov
nop
fnstsw
shlb
cltd
sub
loopne
gs
into
lcall
jb
push
cli
jnp
cltd
and
loope
add
or
je
dec
xorl
push
cmp
outsb
inc
ljmp
xor
pop
aam
sbb
nop
adc
mov
mov
cmp
cmp
xchg
arpl
mov
sub
xchg
sub
cmp
mov
out
or
fdivl
jecxz
push
leave
jno
repz
inc
paddusb
stc
cmp
pop
leave
dec
call
push
sahf
cmpsb
and
leave
mov
dec
adc
fistpll
mov
fildll
arpl
loop
scas
xchg
dec
pop
jae
pop
imul
lea
adc
jns
fs
fimuls
loopne
and
out
push
fidivs
mov
enter
jp
dec
subl
repz
pop
push
pusha
bound
out
leave
iret
xor
shl
xor
sub
addl
mov
sub
out
sub
mov
in
jbe
incb
jne
in
xchg
data16
mov
popa
cmp
ja
mov
add
loop
or
jle
nop
insl
popa
mov
and
ljmp
cmpl
jo
mov
or
mov
lea
adc
lods
int3
mov
scas
insb
adc
mov
adc
lret
jge
mov
inc
xchg
mov
push
add
cmp
aas
dec
nop
dec
aaa
scas
orb
mov
fstpl
ret
pop
pop
aam
pop
pop
lret
push
jecxz
jns
mov
out
add
dec
and
xchg
sub
fiadds
cmp
and
pusha
push
pop
mov
mov
add
adc
stc
and
push
lock
pop
pop
add
sbbb
int
push
jl
xchg
daa
out
xlat
push
add
sbb
fnstenv
fldcw
sbb
cmc
out
rol
xchg
frndint
outsl
xchg
leave
scas
mov
adc
mov
sbb
xchg
cmc
fcmovu
mov
ret
jmp
mov
xchg
jb
mov
addr16
mov
xorb
aam
pop
adc
dec
push
aaa
out
pushf
lahf
sub
ss
inc
jecxz
push
sbb
mov
test
sub
mov
and
mov
nop
mov
stos
daa
loope
and
inc
mov
push
sub
in
dec
mov
inc
ljmp
test
xor
cmp
sub
xchg
jns
out
dec
out
popa
in
cmp
arpl
lret
lods
or
and
notl
adc
xchg
imul
mov
sbb
pop
mov
pushf
das
jne
mov
fs
shrb
dec
xchg
push
in
inc
add
test
rcrl
jmp
xchg
fdivrl
push
in
in
dec
ret
out
pop
xchg
cmpsb
test
mov
sahf
arpl
inc
cmp
pushf
stos
mov
jne
xchg
push
xchg
xchg
mov
cwtl
cmp
lret
cmc
xchg
jb
mov
add
pop
scas
ljmp
daa
pop
pop
mov
pop
jp
test
lea
or
cltd
popa
dec
lods
ss
xchg
or
inc
pusha
push
rcr
inc
xchg
push
jae
lret
stc
fisubrl
cmpsl
jp
iret
bound
mov
mov
jg
mov
sub
in
std
sub
xorl
cmpsl
outsb
jne
or
sbb
and
xor
jge
out
or
scas
or
push
shr
into
sbb
jns
jno
lods
push
fnstenv
icebp
in
movsl
dec
popf
xor
adc
jo
cli
jno
movsl
mov
or
xchg
lea
lcall
mov
or
testl
dec
aam
test
push
push
xor
test
pushf
inc
mov
mov
loop
mov
inc
dec
cmp
jo
and
sbb
jno
or
mov
cmp
mov
mov
pop
xchg
push
push
jecxz
sub
or
loopne
lock
pushf
sub
xlat
adc
lahf
cli
sub
cmp
xchg
negb
loop
rcll
inc
mov
push
xor
ljmp
fnstenv
stos
int3
jge
mov
sub
dec
cmp
test
dec
int
mov
push
rol
xor
mov
xchg
inc
dec
bound
lret
daa
add
inc
cmpb
xchg
pop
and
and
fwait
xlat
mov
movsb
mov
rcrl
inc
outsl
and
push
push
repz
addr16
xor
and
inc
pop
push
aaa
sarb
jle
pop
sub
popa
mov
jb
jae
nop
or
das
mov
fs
sub
loope
sahf
enter
dec
push
jne
imul
rorb
dec
and
popa
ja
ret
mov
push
sbb
xchg
mov
xchg
push
mov
mov
lea
sbb
jmp
jae
stos
js
out
mov
clc
addr16
aam
mov
xchg
push
sti
leave
sub
dec
cmp
aaa
sbb
ret
push
add
pushl
add
inc
movsb
into
push
jmp
imul
lock
push
adc
cmp
sub
push
enter
rolb
outsb
xor
push
mov
sub
mov
int
dec
icebp
dec
jmp
sub
stos
push
xchg
xor
xor
gs
mov
xchg
pop
addb
push
push
add
or
std
mov
mov
mov
jecxz
js
gs
mov
pop
bound
jo
lock
cmc
pop
cmp
push
xchg
inc
imul
cmc
dec
lea
jne
mov
push
fmull
push
std
cwtl
sahf
int
jle
pop
jbe
sub
lods
sub
lods
pop
sbb
scas
add
arpl
adc
mulb
jb
xor
insl
dec
and
cmp
loopne
das
enter
enter
test
lock
xchg
push
mov
aam
or
pop
add
xor
pop
pop
cld
xor
scas
ljmp
xor
dec
shll
sbb
ret
lock
inc
or
insl
aaa
shl
adc
jle
lret
movsb
test
sbb
test
inc
push
xchg
pusha
ret
call
jecxz
jo
js
cmpb
in
jp
nop
or
nop
js
repz
cs
mov
mov
pop
pop
fs
xchg
in
scas
enter
mov
sub
mov
push
adc
xor
and
jo
lock
add
cli
jecxz
std
add
sub
push
ret
inc
imul
rcll
cmp
sbb
inc
sbb
jge
adc
hlt
lret
sub
call
xchg
std
popf
jmp
mov
sbb
stos
sub
sbb
lds
sub
pop
sub
mov
movsl
pop
cld
nop
cmc
movsb
pop
popa
lret
daa
mov
and
xchg
jecxz
jle
lds
subb
jb
cs
or
push
sub
daa
mul
cli
jno
mov
fwait
xor
jbe
inc
inc
movsl
cmp
pop
cld
movsl
testb
push
add
bound
movsb
xor
je
dec
jmp
mov
and
mov
dec
jbe
into
sbb
pop
gs
fstl
mov
inc
adc
popf
and
sbb
mov
fsubrs
lret
xor
and
jno
addr16
clc
xor
xchg
inc
push
fdivrs
xchg
into
lds
addr16
lahf
bound
pop
mov
xchg
adc
sbb
push
test
and
repnz
or
pusha
adc
dec
adc
xor
addr16
pop
mov
test
pop
setg
mov
inc
out
pop
add
mov
in
mov
jecxz
sahf
xchg
jp
fstpl
and
dec
xor
sbbl
jge
and
inc
stos
lods
push
aad
inc
mov
pop
fcmovnb
dec
cwtl
push
jno
adc
insl
push
iret
in
sbb
decb
mov
push
pop
pusha
xchg
pop
xor
fnsave
insl
mov
mov
fimull
adc
lock
in
sub
mov
movsb
hlt
lods
push
jp
idivb
mov
jle
arpl
idivl
mov
inc
xchg
mov
xor
push
jo
sub
cld
mov
push
push
inc
jecxz
xlat
movsl
jp
test
mov
mov
pop
loop
lcall
push
aas
sbb
rcr
divb
pop
cmpsb
enter
jnp
pusha
lret
movsl
xor
mov
in
mov
sbb
data16
sub
orb
cs
push
and
adc
daa
xchg
push
mov
sub
jnp
sahf
xchg
or
rorb
inc
fsubr
inc
out
cltd
mov
sar
xor
dec
pushf
sub
mov
adc
test
ret
cmp
mov
and
push
jo
loop
imul
or
test
xchg
sarl
pop
push
mov
push
ds
mov
push
cmp
jmp
pop
mov
mov
inc
test
or
and
les
imul
mov
jno
jle
repnz
dec
call
sub
sbbl
orl
cld
mov
cli
cmp
cmp
adc
mov
mov
mov
mov
pop
xor
clc
ss
inc
gs
and
cld
jp
fstpl
xchg
or
add
add
ret
out
adc
mov
aas
pop
or
fisttpl
incl
bound
mov
fiadds
out
insl
cmp
push
in
mov
mov
das
mov
outsl
in
adc
and
add
mov
push
mov
mov
dec
push
xchg
xor
and
push
out
mov
call
fimuls
dec
nop
sbb
lcall
cmp
int
lds
fdivrl
dec
sbb
js
ficompl
push
cmpsl
sub
fwait
insb
clc
aam
mov
mov
aam
out
sahf
ret
or
lahf
xchg
mov
in
xor
lds
push
push
or
mov
int
icebp
lret
and
call
pop
ficompl
xchg
in
xchg
pop
jecxz
mov
stos
sbb
or
add
jg
adc
pop
cmpl
dec
iret
mov
mov
push
out
pop
in
push
leave
pcmpgtd
mov
sbb
sub
jecxz
push
xor
stos
push
pushf
ja
clc
dec
imul
lret
ficomps
in
outsb
mov
sub
cmp
and
lea
ss
mov
mov
cmp
icebp
pop
mov
mov
cwtl
lods
das
mov
pmaxsw
int3
imul
mov
push
jbe
out
xchg
sbb
stos
leave
stc
mov
add
pop
fldcw
pop
mov
lret
fldenv
sub
insl
addl
imul
cmp
std
mov
sbb
fbld
dec
and
mov
jb
rcrb
mov
xchg
push
scas
mov
push
sahf
mov
lret
mov
push
xor
cmp
fbstp
inc
int
xchg
sub
outsl
outsl
lods
fwait
mov
mov
aaa
lcall
int
imul
out
xor
sbb
and
adc
cmc
or
icebp
mov
dec
outsb
lds
mov
dec
pop
or
cs
lds
add
jmp
arpl
mov
call
dec
gs
imul
mov
jne
in
fmuls
cmp
push
cmp
jg
or
ret
shrb
test
mov
data16
xchg
pop
and
xchg
mov
aas
leave
push
mov
xchg
pop
push
add
xchg
shl
mov
nop
pop
dec
pop
lods
int3
movsb
enter
lea
jmp
addl
mov
imul
xchg
push
cmp
mov
leave
inc
adc
lcall
cmp
hlt
movsb
add
inc
pop
insb
add
shlb
jne
jnp
sub
subb
movsb
lahf
scas
cld
xchg
into
adcb
dec
jmp
lds
jmp
std
pusha
aad
sub
mov
mov
jmp
cmp
jp
xor
int3
jmp
xor
icebp
jnp
xor
insl
testb
xor
add
xchg
sarl
cmc
fs
jnp
push
mov
imul
aam
mov
rcr
xor
mov
dec
hlt
jne
mov
sbbl
cmpsl
push
hlt
mov
dec
repz
cli
jno
repz
mov
loop
fisttps
dec
or
adc
fdivrl
jg
xor
cmp
lds
pop
loopne
movsl
xchg
mov
sub
xchg
das
jno
sbb
out
movsb
mov
mov
push
and
ds
cmp
sbb
cmpsb
out
icebp
xor
cwtl
sbb
lods
inc
js
dec
add
aaa
dec
repnz
imul
fdiv
mov
xor
pop
sbb
cli
xor
xchg
inc
mov
push
fsubrl
ljmp
out
scas
std
xor
lds
inc
inc
cmp
push
lods
or
push
iretw
mov
sbb
fsubrl
mov
std
mov
cld
jl
jg
dec
xor
repnz
or
sbb
pop
repnz
out
jne
outsb
mov
les
cmp
xlat
xchg
cmpsb
jl
stos
xor
jb
and
aaa
loop
mov
jbe
push
dec
outsl
or
dec
loope
icebp
jo
loop
mov
xor
jecxz
enter
sbb
aaa
movsl
int3
sbb
shlb
mov
cmpsl
outsb
adc
addb
ljmp
mov
dec
out
jnp
ja
insb
xchg
cmp
cmp
and
das
jne
and
push
mov
or
daa
cs
cmp
xchg
mov
sbb
adc
movsb
pop
inc
push
or
lret
call
es
sbb
xchg
mov
inc
xchg
cs
and
xchg
push
addb
pop
lret
mov
sti
ja
mull
in
dec
or
adc
daa
mov
out
lods
clc
stc
and
sbb
loop
lret
sti
or
xchg
mov
pop
test
mov
testl
xchg
jae
in
bound
loop
mov
push
gs
in
dec
jo
lret
mov
mov
pop
mov
mov
stos
hlt
or
aad
es
lea
test
dec
or
loope
mov
mov
mov
lret
dec
xchg
cs
sub
mov
and
mov
rolb
jae
sub
daa
in
popa
sbb
or
add
sub
inc
pop
xchg
nop
aaa
data16
pop
js
sarb
pmullw
xor
cmpb
das
inc
movsl
xor
lea
mov
ss
xor
test
mov
cmp
dec
stc
sub
lock
rcrb
clc
out
sbb
frstor
jb
inc
mov
or
loope
xor
jl
ja
lret
notb
out
inc
xchg
cs
repnz
popf
and
popf
cmp
fdivr
jo
cmp
or
mov
inc
scas
inc
mov
das
or
mov
mov
bound
out
push
lds
mov
lret
pop
cmp
repz
and
or
idiv
ljmp
loop
cmp
lcall
stos
lcall
icebp
xchg
testl
movl
fucomip
repnz
int3
push
cmp
fwait
lea
pop
cmp
jns
cmp
cmpb
gs
add
sti
push
lea
pop
jnp
cld
mov
sub
fcomi
add
add
xchg
jno
popa
lcall
add
xchg
fnstcw
lods
dec
adc
mov
push
aas
andl
jmp
push
and
ficompl
or
xor
imul
dec
lods
xchg
xor
or
nop
stc
enter
pusha
fisttps
pop
mov
push
sub
dec
sahf
jg
cmp
sbb
jne
add
mov
addb
adc
orb
inc
out
mov
jle
or
pop
arpl
inc
les
lcall
jecxz
add
mov
push
cmpsl
cld
mov
iret
sub
inc
ret
lock
jp
das
loop
ficompl
outsb
jno
cmovno
aaa
pop
fld
insl
push
popa
cmp
cwtl
xchg
adc
push
mov
cmp
xor
and
in
jns
repnz
inc
lods
jmp
lcall
divl
pop
std
shl
shr
jg
push
int3
mov
lret
sbb
sub
addr16
rol
jg
mov
and
xchg
xor
lock
aad
cmp
sbb
ret
xchg
sub
sub
inc
mov
jae
repnz
pop
jmp
lds
inc
and
sub
scas
pop
push
testb
repnz
je
fisubs
jecxz
xchg
sar
imul
lret
lahf
js
push
add
pop
rcrl
jmp
jecxz
xchg
loope
adc
stos
dec
ljmp
insl
jmp
and
gs
mov
cmp
push
sub
icebp
add
cwtl
xlat
pop
mov
xchg
jg
sti
es
adc
cmpb
je
sub
in
push
dec
fwait
testl
cmp
inc
imul
xor
mov
mov
iret
enter
fidivrs
or
outsb
mov
aad
cmp
in
mov
mov
lock
pop
jge
test
pop
mov
loopne
push
dec
mov
mov
adc
xchg
iret
add
or
sub
leave
cltd
sbb
pusha
lods
or
test
and
and
or
pop
insl
sbb
fs
mov
fiadds
lea
sub
cs
insl
mov
push
mull
jecxz
or
repz
xor
test
inc
dec
scas
mov
ret
jb
sbb
mov
push
pop
ljmp
arpl
imul
insl
inc
jae
or
cmp
cmc
cltd
mov
jl
push
cli
xchg
andb
adc
dec
aas
sarb
aaa
add
xchg
adc
add
sar
addr16
inc
shrb
mov
mov
mov
and
jmp
xchg
shll
xor
jge
insl
fstpt
mov
push
test
inc
inc
push
loope
popf
cmp
or
ja,pn
cltd
movl
mov
lods
nop
xchg
or
add
iret
aad
les
mov
movb
jmp
xorl
imul
movsl
cs
repz
pop
mov
sub
dec
lds
test
frstor
sub
cmp
sahf
aaa
cli
incl
mov
xor
popl
insl
jo,pn
jecxz
cli
adc
cmpsb
pusha
ljmp
lods
test
pop
xchg
pop
push
bound
roll
push
aaa
ss
aas
outsb
cmpsl
and
adc
add
sahf
cmp
add
jg
roll
or
or
push
sbb
sbb
out
adc
sub
or
add
or
test
sbb
push
xor
push
iret
push
mov
cmp
inc
ja
inc
mov
movsl
inc
in
aaa
addr16
cmp
idivb
pop
cmp
outsl
out
xor
push
pusha
pop
addr16
out
shlb
inc
push
jp
lea
sub
leave
or
dec
test
mov
unpckhps
dec
dec
lret
pop
mov
insl
adc
xor
lock
jnp
xor
movsb
pop
add
cmc
fidivrl
jg
cmp
xor
add
shrb
mov
dec
test
push
push
cmpsb
dec
stc
mov
or
js
stos
adc
mov
je
lahf
mov
mov
outsb
jbe
test
dec
mov
cmp
cmc
xchg
insb
add
pop
loopne
sahf
jns
fidivrl
add
push
sub
adc
loope
cwtl
xchg
cld
xchg
ficoml
ss
dec
outsl
push
pop
dec
pushf
mov
mov
pop
iret
addb
add
push
ss
neg
insb
mov
mov
idivl
stos
add
jle
pop
leave
addl
stos
testb
jge
xor
loopne
in
in
dec
adc
out
addl
iret
jle
push
shl
sti
pusha
and
iret
popa
stc
mov
pop
js
xchg
inc
lods
push
add
sub
aaa
pop
cwtl
inc
jmp
jp
lret
aam
sbb
xchg
push
dec
sbb
aas
mov
add
push
xchg
mov
add
popa
subl
inc
leave
sti
push
push
hlt
adc
movsl
loop
or
cltd
aas
add
es
lcall
shlw
inc
aam
dec
pop
leave
pop
push
mov
addl
test
xchg
lods
mov
dec
push
sar
lret
into
and
test
jne
inc
or
xlat
aaa
test
fmull
adc
jmp
cmpsb
mov
cs
mov
fs
sbb
and
jl
xchg
push
pop
ljmp
mov
enter
scas
lea
pushf
mov
pusha
or
out
mov
je
sbb
push
les
lds
int
int
inc
scas
adc
push
adc
scas
mov
or
and
xchg
mov
in
shrd
rcl
frstor
je
push
pop
jno
or
jns
imul
loope
push
jge
cmp
adc
incl
or
pop
clc
inc
cmp
sub
sti
and
inc
and
mov
xchg
and
cmp
lret
xor
loop
pop
xchg
rclb
adc
cmp
sub
and
or
push
pop
cmp
xchg
jp
sub
dec
cmc
mov
dec
adc
jl
mov
inc
mov
inc
shll
std
les
add
movsb
push
mov
inc
aad
add
mov
sahf
addr16
jne
sbb
adc
scas
pop
scas
adc
and
cmpsb
subb
faddl
adc
inc
jne
std
lods
lret
sbb
fdivrs
fsubrl
lret
and
subl
mov
in
je
mov
fwait
and
pop
jmp
popa
movsb
jne
repz
or
pusha
xor
pop
cwtl
dec
aas
cs
int3
scas
cmp
pop
add
vpmacssdql
push
xchg
out
push
fidivs
mov
in
les
cmp
call
cmc
sbb
xor
jns
lods
movsb
lods
shlb
scas
std
addr16
add
addl
sar
adc
iret
out
and
push
xor
jae
mov
dec
outsl
mov
xor
sub
lock
cmp
sbbl
xor
sbb
push
cmpl
in
jne
or
cltd
xchg
dec
cs
cwtl
jmp
insb
imul
add
xchg
ret
add
sbbl
and
pop
lods
cmp
dec
ret
out
push
call
ljmp
xchg
movsb
arpl
insb
push
shlb
loope
addr16
fidivrs
cmc
clc
mov
test
xchg
add
icebp
sti
mov
inc
cmpsl
mov
fistps
insl
loopne
mov
imul
or
and
pop
gs
fistl
xrelease
sbb
xor
mov
push
xlat
or
das
stos
cli
sbb
and
fcomps
inc
cmp
sbb
jno
orb
loopne
out
xchg
cmp
int3
dec
pop
xor
arpl
and
mov
adc
ja
push
iret
lds
inc
cltd
lods
jge
repnz
out
jp
adc
loop
sbb
test
fsubrs
inc
loope
and
lock
sar
fdivl
inc
dec
inc
cmp
pop
cmc
and
push
xchg
test
rcr
fmull
test
stc
js
push
push
mov
ret
add
jo
popa
out
jne
out
lds
mov
jg
insl
jle
add
and
sbb
cs
repnz
or
sbb
push
sub
subb
adc
xchg
or
movsb
xor
lret
shrl
rclb
lret
lahf
push
sub
push
jge
fwait
daa
xchg
fldt
decb
testl
pop
mov
test
loope
sbb
push
mov
lods
push
mov
cmp
jbe
jo
notb
pop
mov
in
mov
push
inc
pop
shll
cs
add
insb
out
cmp
mov
adc
or
adc
arpl
pop
add
addl
inc
lods
pop
and
out
loope
xor
lea
popa
gs
call
adc
jmp
mov
mov
xchg
add
inc
das
push
push
test
xor
mov
lret
repz
fxch
xlat
xor
sbb
sahf
pop
dec
cmp
cltd
mov
pop
je
mov
xor
and
sarb
jnp
sub
cmp
cmp
jo
or
cmc
push
dec
jne
insl
sub
arpl
mov
test
mov
es
xor
xchg
loop
out
push
mov
pusha
inc
shll
ds
dec
xchg
test
adc
test
xor
shl
xor
fldcw
movsb
les
in
popa
adcb
cwtl
cmp
shl
push
xchg
sbb
rcrl
pop
push
and
data16
insl
cs
sbb
je
aas
push
ret
inc
jle
dec
sbb
mov
fstpl
sti
fcomps
or
or
out
jno
out
mov
cmp
and
sub
pop
mov
stc
out
pop
pusha
sbb
iret
lret
and
int3
or
lcall
cs
sub
popf
xchg
sub
and
enter
push
test
jmp
jae
lds
jae
mov
lahf
test
mov
aas
xchg
shrl
jne
fstl
push
ss
loope
cmp
cmp
gs
insl
cmpsl
cmp
dec
shrl
lock
mov
fsubl
jg
inc
jge
pop
or
cltd
mov
cmp
cmp
lfs
jno
xchg
jns
repnz
fcoml
dec
push
cmp
aaa
sbb
push
inc
jbe
or
pop
call
andb
stos
or
mov
adc
int3
jle
dec
push
sbb
clc
xor
movsl
loope
sbb
movsb
or
pop
jbe
xchg
stos
rcrl
loopne
andl
repnz
popa
add
cld
cld
xor
insl
xor
mov
jbe
inc
xchg
sub
outsl
mov
mov
jmp
pop
nop
addb
les
xor
loope
lahf
loopne
out
aam
cli
xchg
adc
mov
adcl
sub
mov
xchg
test
xchg
push
cmp
scas
sbb
xchg
mov
add
cmp
scas
push
or
push
leave
add
dec
cmp
icebp
jns
sub
les
pop
fldcw
mov
mov
push
arpl
push
mov
insb
mov
adc
in
in
sub
mov
sbb
jo
mov
je
lret
adc
inc
inc
ja
push
jnp
fdivr
add
hlt
push
or
dec
inc
fisttpl
xor
jns
xchg
pushf
add
jb
adc
lcall
cltd
pop
add
call
cs
mov
lods
repnz
cltd
jle
fwait
sub
jae
cmpb
xorl
cmc
cmp
fisubrl
jecxz
popa
mov
fiadds
xor
cmp
inc
decb
jno
sbb
in
xchg
dec
movsl
in
popf
es
movsl
dec
mov
out
ret
mov
pop
insl
ror
mov
clc
fdivr
jecxz
lret
ljmp
mov
shlb
dec
aas
mov
lea
push
mov
pop
mov
sbb
out
adc
jbe
jg
sub
xor
or
xchg
sub
sub
out
adc
cmp
in
xor
and
sub
icebp
adc
popf
scas
mov
mov
aad
add
lods
xor
or
ds
imulb
rcl
pushf
push
fidivrl
xlat
pop
into
fisubs
aas
sub
xor
mov
cltd
push
mov
and
mov
inc
push
fnstenv
daa
ds
mov
cmpsl
pop
sub
adc
fcomps
jge
xchg
jmp
pop
rsm
pop
mov
stos
sub
fisubl
ret
sub
add
ret
popa
mov
xchg
sub
icebp
jne
rorl
into
popa
out
xchg
cmc
and
stos
xchg
fists
popa
and
out
push
sub
aam
popa
cmp
mov
movsb
pusha
loopne
repz
push
repz
int
adc
pop
aaa
rcll
xlat
aaa
pop
inc
sbb
call
jne
and
or
mov
test
ss
adc
adc
and
add
popl
popf
sbb
adc
and
cmp
sub
ss
mov
pop
shll
inc
cld
pop
mov
jae
adc
in
call
push
icebp
dec
enter
imul
scas
test
jmp
push
enter
adc
mov
mov
sub
loope
pushf
mov
cmp
jmp
loop
in
cmc
cld
xchg
dec
aaa
pop
cmpsb
mov
imul
mov
fiadds
mov
xor
dec
imul
enter
pop
xor
sub
add
les
mov
dec
pop
loope
and
fsubl
push
xor
scas
loope
mov
push
int3
cmp
insb
shlb
test
cltd
mov
cltd
and
add
and
jge
jbe
mov
lcall
cmpsl
push
sar
lods
cmp
imul
stos
fadds
push
test
testb
and
xchg
sti
or
push
fdivrs
jb
add
out
xchg
rcrb
scas
mov
iret
or
mov
pusha
cwtl
dec
negb
sbb
loope
push
rcl
xchg
shrl
cmp
movsl
imul
push
add
xchg
adc
fwait
mov
pop
mov
outsb
jmp
ljmp
or
mov
or
dec
xchg
inc
repnz
jg
dec
je
imul
pop
sbb
sub
fsts
inc
dec
loop
fadd
lock
sub
lret
sbb
mov
syscall
or
push
jl
lret
imul
mov
mov
hlt
sahf
dec
hlt
fstps
daa
xor
mov
and
fdiv
sub
je
jle
loopne
jl
jl
or
daa
fmull
pop
lods
cmpsl
pushf
cmp
sbb
sti
inc
pop
out
dec
cmp
imul
cs
adc
je
scas
les
mov
sbb
cltd
lcall
mov
push
xchg
or
inc
mov
mov
dec
add
xlat
mov
xor
out
iret
out
push
push
sbb
fistl
cwtl
jg
mov
cld
fcmove
jne
movsl
fistl
cmp
pop
in
jmp
pop
xchg
jno
or
mov
add
mov
pop
inc
and
adc
add
pushf
iret
xor
cltd
xchg
sub
jnp
or
imul
pop
pop
push
imul
loop
adc
and
cwtl
out
mov
inc
pop
push
arpl
xor
out
data16
test
dec
mov
imulb
cmp
ficoms
lcall
mov
xor
sub
in
push
push
ja
pusha
jae
dec
adc
clc
sti
outsl
or
adc
loope
popf
loopne
sbb
int
mov
sub
mov
xor
add
jb
movsb
add
mov
push
push
popa
pop
jle
addr16
aad
les
mov
aaa
jmp
cmp
mov
push
xchg
insl
cmp
xchg
clc
inc
pop
mov
sub
jno
sbb
sbb
cmp
sub
test
movsl
pop
mov
sbbb
xchg
pusha
lea
sbb
sti
inc
out
subl
xor
ret
in
cmp
xlat
push
push
mov
sbb
adc
mov
push
inc
ljmp
xor
sub
push
cmp
xor
cmc
shlb
jne
mov
and
inc
aas
cmp
mov
ror
jge
sub
mov
divb
add
dec
cmpsl
fidivl
push
push
jmp
mov
enter
mov
out
in
jecxz
mov
cmp
jne
mov
lods
repnz
and
inc
dec
out
scas
mov
xor
mov
mov
lock
call
sahf
mov
scas
or
dec
int
pop
xor
orb
lret
aam
push
or
xor
xor
jnp
xor
xchg
aaa
cmpl
jo
icebp
adc
add
dec
stc
mov
jae
inc
mov
dec
jnp
and
iret
nop
push
mov
ds
mov
jg
pop
inc
mov
lds
mov
lret
and
jmp
lahf
iret
rorl
arpl
cmp
push
aaa
outsl
xchg
dec
jns
adc
cmp
loope
mov
rcrb
add
scas
test
xlat
idivl
rcr
sbb
imul
pop
sub
or
fidivrs
rolb
xor
imulb
mov
rcl
das
push
rcrl
jno
ret
test
jecxz
xchg
jmp
pop
imulb
fwait
add
jge
ret
mov
mov
inc
pop
outsb
into
dec
and
mov
and
sub
shll
cmpsl
pop
push
xchg
test
mov
jmp
mov
int3
mov
adc
jns
lret
ret
push
cld
mov
inc
scas
mull
mov
mov
pop
and
dec
loopne
mov
sub
jae
xor
jg
out
add
out
add
push
stos
add
or
push
sbb
adc
and
mov
mov
inc
dec
push
aad
pop
add
mov
addr16
enter
dec
fs
sbb
nop
push
repnz
cmpsl
movsb
push
test
popa
lcall
inc
rcrb
sbb
xchg
fdivr
xchg
fwait
push
add
mov
cmp
xlat
sub
jge
xor
imul
int3
jb
shlb
lret
mov
adc
xchg
jle
popf
inc
jae
pop
sbb
je
jnp
cmpsb
dec
mov
xor
imul
addl
shll
lret
fs
push
decb
repz
add
or
jo
les
or
sub
popa
or
test
pop
cmp
add
fisttps
pop
ror
in
mov
sti
jl
dec
repz
push
repnz
inc
shl
pop
adc
cmp
lahf
jbe,pn
and
stc
incb
lret
and
dec
and
les
inc
rcrl
aaa
or
jmp
cltd
nop
int
arpl
xchg
cld
data16
xchg
aaa
in
add
mov
push
inc
nop
jg
and
jp
cmp
dec
insb
js
outsl
test
ret
hlt
ss
adc
adc
cltd
insl
mov
adc
out
sti
xor
inc
mov
sub
sbb
andl
sbb
shlb
push
jno
enter
subl
lea
sti
ficompl
mov
fmuls
pop
or
push
imul
cld
mov
jno
mov
das
cmp
xor
xor
cmp
cmp
push
mov
pop
lods
push
cmpsl
cs
fucomi
or
lcall
push
adc
movsl
fistpl
push
mov
aas
mov
cmpsb
xlat
loop
dec
mov
xlat
cmpsl
sbb
adc
cmpl
pop
or
in
mov
adc
adc
das
and
outsb
jecxz
or
std
xlat
xchg
pop
int
xchg
mov
data16
xchg
add
lock
push
sbb
data16
loop
mov
arpl
fisubs
lcall
cmpsl
imul
pop
jnp
sahf
in
sub
xchg
pop
cmp
xchg
sub
and
lock
mov
mov
cmpsl
add
or
cli
sbb
lock
pop
jp
xchg
and
sarb
sbb
jnp
scas
inc
out
jl
nop
cltd
push
mov
cmp
arpl
lret
inc
pop
jbe
negb
cltd
dec
push
push
addr16
mov
outsb
jbe
mov
and
sbb
xlat
loope
push
pop
xlat
jb
lcall
int3
outsl
ret
pop
repz
leave
int
pusha
add
ss
cmovo
icebp
pop
sbb
xlat
inc
in
mov
dec
xchg
xchg
lods
pop
cmp
ja
adc
ljmp
mov
hlt
jecxz
mov
fs
popf
dec
jae
aas
fisttpl
rcl
pop
sub
mov
mov
push
pop
cmpsl
push
js
ss
push
fdivs
out
jns
adcb
rcll
popa
fimuls
push
test
lods
fwait
cwtl
dec
out
sbb
repnz
cmc
push
inc
mov
or
test
imul
jnp
test
std
out
iret
adc
sub
repz
push
mov
pop
dec
clc
jge
pop
je
add
aam
jb
cmp
mov
insl
in
mov
and
loope
or
test
pushf
or
sti
jecxz
jg
jae
daa
imul
inc
sahf
sarb
jmp
mov
test
cwtl
mov
scas
lahf
cmp
inc
cwtl
xchg
fildl
int3
mov
fdivl
sbb
cld
pushf
bound
loop
shlb
inc
imul
mov
or
adc
sub
cmc
ss
cwtl
sub
adc
bound
test
jecxz
sub
out
dec
shlb
pop
pop
jecxz
fiaddl
pushf
or
xchg
aad
mov
loope
mov
pop
mov
lret
push
xchg
pop
sub
sarb
insl
sbb
pop
cltd
mov
cmpsl
ja
sbb
push
rcr
enter
sub
popf
imul
cmp
cltd
sbb
and
pop
ja
add
sbb
fbstp
loop
cmpsb
adc
xchg
cmp
sahf
mov
push
fiaddl
ret
in
test
push
jbe
pop
xchg
mov
loop
cwtl
sub
adc
lret
ret
aad
mov
pushl
inc
aas
sbb
lods
inc
cmpsb
test
adc
lcall
out
dec
push
outsl
or
js
lds
pop
xchg
mov
aad
push
cld
je
hlt
or
out
lahf
pusha
pop
cs
jnp
push
sahf
pop
test
addr16
jae
lret
mov
dec
ss
test
jp
dec
in
push
imul
fstps
cmp
clc
dec
jb
dec
gs
movsl
imul
fcomps
adc
mov
aas
in
jne
jge
pop
inc
pop
cmp
push
push
leave
sub
lds
add
mov
cs
mov
jl
push
mov
ficoml
pop
in
fbstp
loope
pop
cld
mov
sub
stos
or
pop
aaa
imul
popf
xor
jb
aas
inc
mov
pop
or
sub
cli
add
push
sub
or
repz
fstps
lods
es
pop
pop
aaa
cmpsb
test
sub
push
lahf
adc
shlb
repz
sub
mov
sbb
dec
in
clc
mov
pop
icebp
xor
arpl
jns
mov
mov
mov
in
cmc
test
out
xor
testb
dec
movsb
and
mov
push
rol
sbb
cmpsl
mov
mov
or
pop
jns
icebp
cs
fistps
nop
adc
fistpll
mov
bound
xlat
fidivs
mov
or
filds
pop
inc
pop
mov
gs
sub
fs
sbb
pop
mov
shlb
mov
lds
mov
sbb
push
test
push
movsb
insb
jns
mov
aad
insl
cmp
rcll
vmulsd
push
notl
add
lea
insl
insb
jmp
xchg
outsb
xchg
xchg
mull
dec
xlat
in
cmpsb
idiv
sbb
sti
cmpsb
xlat
lods
cmpsb
cmpsb
pushf
cmpsl
insb
lcall
aas
mov
fstpt
lcall
cmp
sbb
jbe
stos
fmull
sbb
and
adc
sub
mov
ljmp
sbb
sbb
leave
jnp
pushf
adc
scas
adc
icebp
popf
test
imul
xor
xor
mov
in
fs
mov
mov
cli
sbb
andb
cmpsl
or
lcall
add
test
adc
bound
mov
dec
cmc
loope
jno
jno
cmp
std
sub
incl
cmp
ja
dec
cmp
test
push
inc
or
add
push
jb
mov
insl
movsb
mov
bound
push
jnp
fwait
pop
mov
aam
cmp
aas
imul
js
cmp
in
inc
aas
frstor
xchg
jmp
std
mov
mov
dec
in
sbb
cmp
mov
arpl
adcb
fldcw
movl
leave
adc
std
xchg
cmp
jmp
sub
es
pop
push
fldt
adc
nop
adc
mov
or
imul
mov
fs
jb
sbb
jbe
push
aam
ficomps
in
jae
sub
es
sub
xchg
call
stos
icebp
insl
dec
cltd
cmp
mov
pop
xlat
cmpsb
inc
push
jne
pop
jnp
mov
pop
shlb
xchg
in
mov
repnz
pop
cli
sbb
stc
leave
insb
xchg
cli
outsl
xchg
bound
xor
enter
sbb
fnstcw
andl
out
xchg
dec
test
jno
loope
adc
daa
ret
jle
or
ljmp
aad
mov
movsl
mov
aaa
cmp
ds
icebp
shl
loop
lahf
mov
sub
lret
sub
cmpsl
lods
mov
pop
fisttpll
ror
ret
mov
inc
sbb
mov
adc
sbb
push
js
jnp
mov
in
movsb
stc
addl
in
jl
xor
add
stos
fstps
loope
push
push
xor
rep
sub
xor
cmp
inc
push
mov
jns
xchg
mov
jno
push
sub
push
xlat
add
mov
lret
pushf
add
xor
push
jp
bnd
jg
test
cmp
xor
xchg
and
adc
mov
pusha
pop
sub
and
cld
cmp
inc
mov
jo
ss
inc
xor
sub
neg
and
push
sub
icebp
dec
fs
pop
lea
sub
or
add
jne
lea
cmp
mov
jb
outsl
xchg
pop
and
test
pop
sbb
dec
mov
inc
cmp
dec
adc
jecxz
daa
cltd
xchg
xchg
lods
mov
xor
adc
push
adc
dec
push
movsb
int3
mov
fs
aam
rorl
js
push
pop
cltd
outsb
outsb
cmp
dec
mov
test
fsubs
mov
out
sub
aaa
in
cmp
fstpt
and
push
sahf
mov
lds
clc
xlat
test
mov
pop
or
dec
iret
jne
insl
dec
popa
jae
mov
dec
cs
cmp
mov
dec
insl
or
fidivrs
aas
dec
pop
inc
nop
or
xchg
inc
mov
movsl
mul
sub
aad
add
mov
push
pop
out
in
imul
sub
xchg
pop
xlat
sbb
lcall
pop
cwtl
sbb
sub
dec
jne
push
addr16
pop
mov
xchg
mov
popf
lret
in
pop
roll
cmp
imul
ljmp
xchg
int3
inc
mov
arpl
sahf
neg
xchg
insb
inc
aas
sub
mov
fstl
popa
test
loope
pusha
sti
bound
fwait
lds
sub
fcoml
out
sbb
mov
les
lcall
shrl
inc
mov
lcallw
out
and
nop
mov
sub
aad
xchg
out
lock
lcall
bound
pushf
jne
jmp
lea
xchg
ss
repnz
mov
dec
lsl
or
sbbb
mov
jbe
data16
mov
cltd
fucomp
loope
mov
push
fs
add
mov
std
in
sbb
cmp
lods
push
lea
sbb
jl
adc
rcll
xchg
push
inc
fimull
sub
sbb
mov
sub
and
imul
ss
cmc
and
and
push
cmp
mov
cli
stos
sbb
mov
dec
outsl
dec
add
xchg
shll
sub
insl
add
mov
das
or
mov
mov
int
bound
cld
shll
jg
xlat
lock
cmp
in
xor
cmpsb
in
or
pop
push
aaa
gs
sbb
lock
adc
add
cld
add
jo
je
lcall
sub
popf
mov
enter
jl
sahf
inc
pusha
push
and
add
loop
nop
loopne
es
and
inc
daa
pushf
movsb
cmpsl
inc
sbb
lea
cmpsb
movsl
push
arpl
data16
jnp
inc
in
or
and
fwait
cmp
sub
pop
dec
mov
repz
cmp
scas
mov
inc
lcall
jge
stos
dec
test
cmp
push
mov
jo
stos
or
mov
leave
cmp
repz
push
cmpsl
shrl
fmull
rcrl
imul
test
divb
jnp
cmpsl
pop
sti
hlt
adc
rcrl
xchg
bnd
pop
sbb
pop
lahf
ds
xchg
aas
jmp
int3
cwtl
push
in
pop
xor
pop
fcompl
std
sbb
ret
and
fldt
mov
js
sub
mov
int3
cmpb
cmp
sub
adc
lea
mov
ljmp
push
xchg
mov
dec
push
or
sti
fmull
sbb
mov
dec
push
pop
je
repz
mov
fs
lahf
rclb
dec
mov
inc
das
mov
cmpsb
xchg
xchg
mov
and
or
fldl
xchg
mov
push
cli
data16
arpl
rorb
popf
outsb
in
in
hlt
jae
push
ljmp
dec
pushf
mov
mov
aas
ljmp
ja
data16
addb
xchg
push
pop
ljmp
std
adc
pop
repz
imul
bound
push
lcall
vpsrad
pop
add
out
mov
mov
aas
rorb
push
ja
dec
fs
jge
push
cmp
stos
or
cmpsb
movsl
add
push
dec
dec
lods
inc
in
mov
jns
ljmp
xor
scas
inc
or
fdivrs
test
mulb
xor
jl
mov
shr
xor
pop
out
pusha
dec
in
rolb
lods
mov
ja
sahf
inc
cmp
test
mov
outsb
mov
xor
adc
push
shl
pusha
ljmp
add
push
sub
aam
stos
jne
adc
adc
xchg
xchg
icebp
je
shl
sub
xor
fstpt
shrb
xchg
cmp
sub
std
jg
test
push
shrl
mov
nop
out
test
mov
stos
push
xchg
mov
ss
ss
cmp
mov
pop
insl
jo
mov
jg
popf
aas
push
dec
dec
mov
mov
pop
outsl
nop
fs
jl
add
shlb
adc
lods
mov
sahf
xchg
daa
icebp
push
jmp
push
orl
xchg
xchg
gs
ss
icebp
mov
imul
flds
or
popa
and
aaa
mov
inc
outsl
mov
fbld
mov
das
jbe
jl
mov
aad
into
arpl
or
pop
mov
push
xchg
subb
xchg
mov
fcoms
cmp
jne
scas
in
aam
mov
mov
mov
xchg
inc
dec
adc
mov
jae
gs
mov
out
imul
fs
shll
add
push
dec
cli
je
adc
les
dec
inc
mov
or
out
stos
arpl
add
sahf
or
adc
fsubrl
mov
sbb
inc
sub
mov
or
int
lock
mov
xchg
pop
fldln2
push
ret
das
movsb
sbb
mov
fdivl
jmp
or
xor
or
sbb
xlat
insl
cmpb
dec
dec
dec
aad
adc
imul
nop
dec
mov
jge
ss
mov
jo
sahf
dec
notb
mov
sbb
jl
sarb
push
xlat
mov
mov
enter
ljmp
adc
mov
pop
sahf
and
pusha
lahf
xchg
jb
sub
mov
push
inc
pop
mov
xchg
xor
mov
jae
sti
or
cltd
sub
imul
mov
pop
int3
jg
jg
mov
fwait
ret
cwtl
xor
mov
jg
adc
mov
sahf
pusha
or
add
dec
jns
add
sbb
push
jge
stos
ret
cmp
data16
pop
jne
jp
cmpsb
xlat
and
int3
adc
xor
dec
jne
rorb
fmuls
lds
movsb
sub
decl
inc
jge
inc
sbb
adc
leave
std
cmp
aad
sbb
and
adc
push
je
in
lds
xor
outsb
mov
sahf
ja
mov
mov
movsl
dec
addl
and
pop
adc
cld
gs
test
pop
stos
adc
jnp
dec
retw
xor
add
mov
mov
stos
or
inc
push
outsb
sbb
test
neg
fisubl
mov
movsb
out
fcoms
orl
sub
ret
xchg
adc
rcrb
stos
ds
pop
pop
movsl
pop
adc
add
dec
lock
ret
repnz
sahf
and
mov
cmp
into
cld
mov
scas
xchg
mov
lahf
sti
jecxz
mov
inc
subb
jno
js
jae
mov
mov
inc
stos
inc
push
push
pop
ret
push
in
insl
or
push
arpl
jmp
push
xchg
int
inc
sbb
jp
shll
push
inc
jnp
insb
mov
addb
mov
and
mov
and
adc
divl
add
sahf
jnp
mov
dec
adc
sub
and
std
cmp
cwtl
lcall
adc
bound
cs
lret
xchg
mov
fwait
in
mov
push
dec
inc
jmp
pop
pop
cld
adc
jb
sbb
inc
stc
push
scas
xor
or
add
fdivrl
cmp
jge
movsb
adcl
je
mov
ja
ficomps
out
aas
jp
adc
sbb
inc
cmpsl
pusha
outsl
test
out
imul
jp
shll
inc
push
sbb
and
aaa
push
mov
mov
outsl
mov
mov
rcrl
jae
repz
push
and
popa
pop
add
push
push
aas
mov
fsubrp
xchg
pop
xor
pop
jno
mov
jns
mov
daa
das
std
loope
scas
xchg
mov
sbb
jmp
addr16
imul
das
hlt
mov
push
gs
movsl
xor
loop
mov
push
mov
iret
xor
fistpll
movd
leave
shlb
shll
add
in
fstpl
xchg
mov
add
mov
imul
inc
aaa
mov
rcr
rdmsr
xor
sub
inc
mov
cli
mov
cs
iret
jecxz
cs
adc
sub
in
and
inc
bound
jp
cld
jnp
cwtl
push
daa
movsb
incl
test
lea
scas
jl
mov
jecxz
fldcw
push
sub
push
mov
movsl
imul
add
imul
cs
lods
lahf
pop
inc
adc
fildll
mov
and
or
clc
fisttps
aam
push
gs
outsb
xor
inc
mov
add
pop
jecxz
xor
inc
lods
imul
lock
pop
ficoml
popa
pop
fcomp
jp
iret
xor
fsubs
dec
push
in
in
ljmp
push
ss
sbb
sti
pop
stos
adc
arpl
lods
rorb
jo
pop
jne
push
mov
test
iret
pop
mov
out
std
hlt
shll
ss
jg
push
xchg
scas
adcb
orps
jle
cmpsl
dec
fstpt
jnp
hlt
ret
js
pop
aam
add
or
and
xchg
push
pop
ja
xor
sbb
inc
mov
outsl
aad
dec
jge
int3
mov
push
je
dec
xor
das
orb
or
addr16
xor
jnp,pt
cmc
stc
pop
insl
cmp
fisubs
bound
fadd
loope
xchg
in
inc
pop
sbb
add
dec
xchg
pusha
pop
add
sbb
fsub
mov
jg
inc
into
or
adc
xor
dec
sbb
shrb
in
mov
idiv
test
lret
into
test
fmul
push
aaa
push
and
aam
xchg
push
dec
cltd
xchg
pop
push
subb
jae
push
insl
int
aad
xchg
mov
nop
xor
imul
pop
test
jbe
iret
dec
jmp
test
mov
mov
ss
cmp
les
push
sahf
mov
pop
cmp
pop
pusha
xchg
fstp
jns
idivb
xlat
lods
mov
loopne
mov
pop
dec
mov
scas
addr16
popa
mov
sbb
leave
sbb
in
imul
sbb
inc
and
rcll
sti
mov
or
dec
mov
pusha
gs
stc
ss
outsb
lock
es
imul
add
sub
in
xchg
popf
xchg
mov
outsb
rcrl
ljmp
lods
daa
lcall
and
pop
add
mov
jnp
aas
inc
pop
jp
sbb
and
sub
xor
aad
or
xchg
call
repnz
iret
and
or
mov
cmp
mov
dec
in
ret
les
and
pop
or
mov
jge
add
imul
aas
jb
mov
sbb
sti
mov
add
jg
adc
popf
outsl
repz
aaa
pop
lock
lahf
pop
sahf
ss
cmpsb
andb
movsb
sub
cmp
xchg
pusha
outsl
mov
xor
xchg
sbb
push
fnstcw
jmp
inc
mov
inc
mov
jae
mov
stos
adc
out
cmp
scas
ja
imul
rcr
mov
mov
movsb
test
adc
sti
add
es
sbbl
in
insb
das
fidivrl
pusha
mov
push
jb
andl
ss
push
arpl
or
and
xor
mov
mov
mov
and
or
int3
pop
mov
jmp
jecxz
or
aaa
imul
iret
mov
mov
mov
and
xor
jb
imul
xchg
cmpl
shlb
xchg
mov
jge
jp
xchg
add
xor
aad
sahf
add
dec
repz
lahf
aam
ljmp
out
int
mov
enter
xor
shl
sbb
fwait
push
iret
pop
ret
loopne
mov
fcoml
inc
cltd
dec
mov
popa
jnp
cli
aaa
xor
sub
cld
outsl
mov
int
int
push
jns
imul
jge
out
xor
dec
sarl
jb
movsl
clc
xor
stos
les
push
jno
lfs
pusha
popa
mov
xchg
mov
sub
and
addl
dec
aad
xchg
ds
stos
pop
push
scas
cmpsb
jb
xor
outsb
movsl
adc
push
fdiv
fdivs
mov
test
aas
aas
data16
rcl
scas
pop
fnstsw
push
sub
aam
push
xor
fs
in
cmp
pop
mov
fucomp
xchg
xchg
scas
dec
push
xor
inc
jg
movsl
or
test
mov
into
adc
mov
xor
mov
sbb
mov
out
push
xchg
ds
or
cmc
jmp
or
lock
or
bnd
jmp
and
xor
xor
jo
out
and
movsl
or
pop
clc
sbbl
loope
sub
jno
js
pop
xorl
imull
sub
fisubs
outsb
push
xchg
imul
fstps
sub
pop
push
repnz
scas
sub
leave
adc
xchg
mov
mov
push
pushf
adc
and
cmpsl
mov
mov
movsl
fs
js
push
cli
jp
xor
xor
push
mov
inc
or
popf
fistpll
jge
stc
pop
rcll
mov
sbb
adc
test
fwait
mov
lcall
imul
mov
mov
adc
push
mov
jl
add
rclb
mov
in
add
sub
cltd
add
push
mov
inc
mov
repz
dec
xlat
lea
fisubrs
mov
cmp
mov
push
pop
icebp
jecxz
sub
and
mov
adc
adc
call
jnp
testl
dec
mov
mov
stos
mov
and
int3
mov
mov
fbld
and
ficoml
scas
lahf
push
or
rcll
xchg
imul
pop
in
jmp
jo
repnz
cmp
lahf
push
jae
push
movsb
push
and
loope
dec
jae
iret
push
or
in
xchg
xor
out
mov
mov
aam
sbb
lock
xor
add
mov
frstor
jl
xchg
stos
xor
and
test
mov
mov
jecxz
gs
jb
and
jle
es
mov
jle
std
push
mov
xchg
aam
loope
stos
mov
shrl
sub
out
fsubs
jae
jnp
xor
and
adc
jo
dec
out
iret
cmpsl
push
daa
leave
mov
jp
fidivrl
push
pop
sub
test
test
stos
inc
pop
jg
xchg
mov
rcr
bound
je
or
cmp
xchg
mov
dec
mov
xor
xor
push
fidivrl
jbe
xchg
fdivrs
mov
jle
inc
jp
rclb
test
push
sbb
rorl
sbb
loope
orl
test
aad
call
addr16
cmpsb
mov
xchg
pop
outsl
jmp
add
lret
mov
dec
push
insb
aam
outsl
out
hlt
sahf
test
popf
push
push
loope
fistl
dec
aaa
xchg
jne
insl
inc
imul
push
call
push
xor
cmpsl
cmp
cmc
sub
shll
pop
shlb
cmp
inc
cli
loopne
jl
fcomp
mov
cmpsl
sub
cmp
mull
push
cmpsb
outsl
xor
cwtl
mov
lds
add
push
add
mov
cmpsb
dec
fnstcw
mov
nop
xchg
xchg
sbb
xor
mov
push
dec
and
in
std
push
daa
add
fwait
xor
loopne
clc
iret
mov
int3
mov
sub
push
jne
in
mov
mov
mov
jae
movl
stos
aam
xchg
push
xchg
cmpsl
int
fwait
xchg
inc
fdivs
add
jae
nop
call
in
sbb
arpl
mov
cmpps
mov
dec
in
test
cmpsb
xor
hlt
or
mov
and
jae
mov
aas
and
ljmp
xchg
mov
movsb
mov
lds
ret
jp
xor
testl
imul
jl
or
dec
pop
sbb
rcrb
fldt
lret
inc
outsb
pop
push
push
in
insb
test
cmpl
adc
fdivl
pop
push
xchg
std
outsb
hlt
push
mov
or
inc
sub
scas
data16
push
ds
inc
jne
fcmove
mov
inc
int3
jnp
sbb
into
cwtl
mov
inc
aaa
js
xor
inc
icebp
ja
mov
enter
push
and
xchg
push
shl
cmp
mov
dec
int
dec
sub
mov
pop
xchg
scas
push
nop
xchg
push
pop
dec
aad
sbb
inc
pop
iret
or
xlat
test
jno
dec
jmp
push
ja
mov
xchg
xor
and
imul
add
add
jp
test
and
fs
fdiv
loopne
push
add
out
adc
sbb
add
and
sbb
or
in
cltd
mov
and
add
pop
popf
dec
shrl
pop
adc
sar
and
push
and
and
pushf
push
lahf
add
xor
adc
xchg
lock
loope
cmp
test
mov
push
insl
push
loopne
xchg
pop
in
push
das
mov
cmp
dec
dec
mov
rcll
leave
mov
inc
addr16
fwait
aad
inc
mov
mov
mov
mov
cmp
xchg
jae
enter
pop
xor
xchg
pop
ret
adc
shl
mov
jns
loop
iret
lret
add
pop
pop
hlt
xchg
mov
jb
mov
adc
cmp
test
test
sti
push
int3
push
mov
inc
pop
push
loop
xchg
xchg
in
fimuls
ja
xchg
xlat
mov
push
out
aam
or
enter
filds
sub
loope
insb
lcall
and
imul
scas
pop
test
jmp
and
adc
inc
adc
xchg
push
adc
outsl
adc
pop
sahf
mov
jb
xor
insb
sbb
mov
fistpll
fisubrl
xchg
jno
mov
or
je
es
jmp
or
dec
ds
subl
jmp
lcall
popa
mov
int3
and
in
sbb
enter
iret
lods
push
sub
jmp
adc
sbb
mov
int3
mov
jmp
and
lods
hlt
jl
nop
adc
sbb
jo
inc
xlat
adc
fidivs
sbb
mov
push
arpl
cmp
jb
xor
xchg
sub
push
iret
cmpsb
pop
and
in
cmp
ficoms
jge
roll
test
mov
cld
cmp
adc
pop
pushf
data16
mov
mov
test
imul
mov
mov
jmp
lcall
mov
lock
or
dec
sahf
push
sarl
xor
xchg
jns
mov
int3
push
jo
sub
jg
dec
add
icebp
je
ja
adc
fisttpl
xchg
jne
nop
testl
sub
xor
dec
pop
stos
montmul
cmpsb
xchg
sub
clc
mul
mov
sub
mov
clc
sbb
addr16
mov
pop
and
shll
out
seto
loop
sbb
mov
mov
jne
jnp
jmp
dec
out
jl
stc
popf
aas
iret
insb
icebp
or
cld
xchg
inc
daa
mov
xchg
mov
fsts
sahf
push
push
scas
add
ja
mov
push
cmpsb
bound
insb
cli
xchg
es
dec
pop
ja
xchg
push
fistpll
loopne
lret
cwtl
mov
out
enter
pop
sbb
in
xorl
xor
xor
and
popf
mov
jmp
rcrb
imulb
xchg
arpl
iret
scas
adc
rcll
movsl
sub
cmp
mov
jp
cli
loope
loopne
adc
sub
stos
in
mov
mov
mov
sub
add
je
mov
add
push
packssdw
inc
incl
mov
rcrl
hlt
mov
push
push
nop
jecxz
push
fnstenv
cmc
push
sbb
jge
aas
mov
fldenv
push
push
xor
mov
xor
adc
aas
orb
mov
sbb
or
mov
push
pop
add
scas
mov
pop
cmp
cmp
and
cmp
cli
shrb
xchg
scas
and
sub
mov
aad
ja
jge
cmpl
js
pushf
lahf
xor
in
adc
xchg
int3
add
sahf
pop
sbbl
add
cmp
sub
loopne
dec
or
les
call
push
xchg
aas
gs
adc
xchg
loope
mov
aaa
xchg
cmp
imul
jle
sub
repz
dec
jns
pop
sub
aad
adcb
aaa
outsl
mov
pop
loop
in
inc
inc
divl
fdivs
sbb
dec
popf
push
and
sub
or
mov
dec
inc
int3
mov
mov
lds
cmp
std
mov
push
imul
pop
mov
push
and
sbb
rcrb
rol
add
cmc
sbb
cmp
or
sbb
and
nop
xchg
xor
cmc
lods
aad
pop
xchg
iret
dec
std
mov
push
sub
loopne
mov
popf
cld
mov
xor
inc
cmp
and
and
inc
xchg
dec
ret
jnp
dec
cmp
push
les
inc
or
pop
adc
std
hlt
loopne
pop
cmovl
out
in
icebp
or
sbb
icebp
inc
mov
jno
cmp
adc
or
sbb
dec
je
dec
lcall
cmp
adc
test
mov
rcrb
jns
shlb
push
sbb
jle
mov
jne
lods
lret
adc
mov
ds
in
jnp
cli
or
sbb
pop
pop
js
add
std
sbb
setnp
sarb
addr16
cmp
aaa
mov
adc
daa
inc
push
insb
push
mov
sub
jle
inc
or
sbb
ret
mov
int3
scas
mov
fld
fcompl
test
outsb
pop
push
pusha
or
pop
dec
cmp
push
in
arpl
mov
adc
out
mov
shll
fcoml
pop
fistps
push
mov
sub
mov
hlt
push
scas
push
cmp
mov
xchg
cwtl
les
add
in
movsb
pop
inc
and
add
ret
outsl
inc
bound
or
mov
sbb
xchg
pop
in
sbb
mov
dec
jb
repnz
clc
push
pop
je
mov
add
jmp
test
push
sbb
and
sub
ja
pop
add
lret
jno
iret
mov
in
fidivs
push
jl
test
scas
loop
mov
add
test
mov
mov
out
aaa
mov
mov
leave
and
push
jbe
test
sub
cwtl
pop
dec
jne
jno
scas
adc
push
sbb
inc
sbb
lds
mov
fwait
or
mov
fiaddl
jb
imull
jl
xchg
fimuls
pop
inc
aad
cmpsl
shr
lock
mov
les
jle
sbb
mov
lahf
in
mov
push
mov
call
mov
ljmp
mov
daa
pop
loope
adc
push
dec
negb
xchg
repnz
orb
cmp
sbb
es
iret
add
ror
pusha
adc
push
nop
xor
jae
cld
lahf
ret
adc
push
sbb
pop
icebp
jnp
nop
jle
aad
xlat
jmp
and
adc
test
dec
xorb
out
mov
pop
arpl
jne
mov
cltd
movsl
cld
rcrb
sbb
sbb
sub
push
mov
int3
std
loope
adc
hlt
jno
flds
jbe
dec
xor
pop
dec
mov
scas
lret
sbb
test
fistpl
cmpsb
add
jecxz
sarb
ret
adc
adc
adc
mov
out
js
icebp
imul
int
xor
mov
inc
test
pop
mov
stc
mov
sbb
js
cli
lret
mov
mov
fnstenv
cltd
adc
pushl
jl
cwtl
jecxz
cmpsb
divl
lods
shrl
push
mov
neg
and
push
jnp
adc
pop
popa
inc
xor
loope
cltd
pop
pop
and
cld
jmp
int
pop
call
mov
jge
ret
xor
jae
movb
pop
in
xchg
iret
mov
cmp
mov
lea
mov
mov
pusha
jmp
insb
idiv
fdivrs
lds
outsl
push
test
sti
cmc
add
scas
shlb
mov
xor
mov
dec
jo
push
scas
in
popl
loope
mov
push
repnz
mov
daa
fnstcw
inc
lcall
jb
xchg
cs
test
xchg
pop
pop
movsl
mov
sbb
insl
lock
pop
iret
or
xlat
cmp
test
jmp
andl
rolb
lahf
arpl
cmp
jnp
xor
push
cli
inc
mov
das
popf
adc
repz
std
les
scas
sub
std
jne
dec
push
mov
sub
sub
add
jle
outsl
add
in
pop
add
into
addr16
pop
cmp
pop
jmp
je
mov
adc
iret
in
std
ja
frstor
dec
sub
scas
push
movsb
lahf
sbb
mov
push
and
ficompl
in
loope
cmp
stos
rcrl
std
sub
fstpl
add
mov
imull
mov
xchg
adc
jge
call
pop
jge
fstps
cmp
xor
bound
and
jne
stos
push
pushf
add
push
imul
push
mov
and
icebp
inc
and
xchg
and
test
sarb
fs
lahf
icebp
cmp
sti
jbe
sub
mov
sarb
mov
mov
mov
push
cmp
lahf
js
pop
cwtl
ds
inc
pushf
clc
sub
pop
xchg
push
fisttpll
int
inc
push
mul
mov
pop
enter
repz
aad
fldt
add
hlt
popa
fcmovne
insb
jle
adc
xor
add
out
repz
mov
mov
sahf
aaa
mov
sbb
data16
mov
or
pop
jge
sub
clc
mov
in
fnstsw
cmc
cmp
fldenv
in
cmp
add
jl
icebp
or
lret
mov
mov
punpcklbw
cmp
push
adc
rcrb
or
test
cmp
inc
xchg
scas
add
inc
test
jmp
jo
xchg
inc
pop
insl
or
push
cld
xor
divl
jno
sub
add
or
jle
push
int
lds
xor
sub
adc
inc
push
push
cmp
mov
inc
lret
test
and
sbb
push
scas
jno
sub
mov
dec
inc
dec
rolb
fnstcw
push
mov
out
std
int
inc
mov
jbe
ja
or
jo
aaa
dec
arpl
scas
add
jge
mov
int
cmpl
loope
mov
mov
add
imul
scas
cltd
gs
cli
pop
inc
cmp
dec
lds
dec
imul
sub
scas
sbb
pop
and
dec
lret
jo
push
test
movsb
dec
or
jae
mov
mov
push
shrl
ret
mov
call
fbstp
hlt
js
sub
lods
mov
mov
xchg
scas
jl
xchg
push
das
mov
outsb
adc
mov
cmp
pushf
adc
fdivr
int
int3
fistpll
sahf
mov
fdivs
sar
int3
addb
jbe
push
adc
sahf
pop
cs
leave
nop
push
push
or
loopne
int3
adc
push
mov
dec
pop
mov
push
out
xlat
add
mov
sbb
pop
loop
int3
pop
adc
push
xchg
jb
jecxz
pop
sbb
fidivl
xchg
sarl
push
bound
mov
and
iret
mov
cld
rorl
xor
mov
push
and
nop
pop
fs
stos
cmp
pop
imul
imul
add
in
jp
sbb
pop
icebp
pusha
mov
mov
ss
imul
xor
mov
jg,pn
pop
push
xchg
insl
xor
jne
mov
inc
lds
imul
mov
xchg
mov
cmpsl
movsb
lods
push
mov
fs
add
push
in
inc
xchg
jmp
xlat
jmp
cmc
sbb
mov
push
sub
mov
imul
mov
mov
cld
insb
scas
fisubl
out
aaa
cld
cs
xor
cmp
xor
mov
dec
repz
cli
ja
std
jnp
or
test
xchg
scas
out
cmp
adc
xor
lahf
imulb
scas
aas
in
ja
push
imull
lock
inc
xorl
stc
mov
lods
xchg
ds
mov
pushf
fistps
sbbl
movsb
ret
add
ljmp
inc
add
punpckhwd
movsl
hlt
xchg
int3
sub
pusha
pushf
loope
xor
mov
inc
stc
jmp
and
shll
xlat
xchg
mov
cmp
je
inc
in
outsl
adc
enter
adc
int3
lds
out
dec
ja
jo
xchg
test
stos
dec
stos
pop
xchg
mov
add
iret
fsubs
bound
push
and
lahf
addr16
aas
lds
cmp
in
nop
pop
adc
pop
lods
in
mov
push
jmp
test
pushf
push
insl
sub
mov
lds
fimull
push
mov
imul
mov
xchg
stos
push
stc
ss
inc
in
orb
or
int
xchg
pop
push
ret
repnz
push
loope
stos
js
dec
jno
stos
or
jbe
imulb
inc
xchg
and
adc
cmp
loope
mov
dec
dec
or
push
add
out
mov
fbstp
test
xchg
sahf
mov
inc
mov
adcl
and
stos
cmp
fs
lds
jge
std
mov
xor
test
outsl
mov
repnz
mov
jp
jnp
fsts
adc
mov
xor
sub
sub
iret
jnp
ret
fwait
movsb
scas
sbb
stos
mov
inc
sub
mov
or
and
xor
aam
sbb
ret
cmpsb
pusha
lret
dec
mov
popf
xchg
add
mov
stc
pop
sub
lock
xor
push
je
dec
push
inc
mov
dec
sahf
int3
cwtl
sahf
pop
cmp
sti
push
shr
xlat
add
pusha
jmp
sti
pop
push
sbb
aad
xchg
jne
pop
rclb
mov
add
aas
sbb
push
ret
xchg
and
mov
stc
daa
adc
add
lcall
mov
pop
cmpsb
mov
inc
fistl
mov
adcl
xchg
dec
das
adc
xchg
xchg
jbe
iret
call
icebp
cmpsb
scas
jp
dec
sbb
dec
fs
jecxz
pop
mov
lahf
outsl
arpl
dec
jae
and
xchg
and
pop
and
scas
xchg
inc
pop
mov
and
dec
enter
pusha
js
dec
jle
pop
icebp
xorb
ljmp
cwtl
xor
or
fadd
repnz
ret
pop
mov
dec
and
aas
mov
pop
sub
xor
fistpll
subl
fisubl
lss
xchg
xorl
adc
movsl
xor
fnstenv
lods
fs
mov
add
mov
je
cmp
bound
inc
andb
cld
xor
ret
push
fcoms
fisttps
jge
out
cltd
das
cmp
pop
iret
imul
sub
lock
daa
add
inc
orl
cmp
xlat
xor
xor
mov
int
sti
xor
sahf
adc
xor
adcb
or
aas
mov
fsub
adc
push
incb
jp
inc
push
pushf
ffree
xchg
les
add
in
mov
das
push
std
or
sub
call
jmp
cmc
pusha
fnstenv
pop
cltd
cmpsb
cmp
orb
js
repz
mov
pop
or
push
jae
jo
loopne
cmp
mov
xchg
mov
mov
aas
push
or
or
inc
outsb
imul
pop
or
popf
outsb
cmp
std
inc
dec
mov
mov
xchg
aaa
cmpsl
js
lods
nop
push
mov
test
push
inc
fwait
push
out
call
sbb
out
insl
sahf
scas
dec
add
cmp
inc
inc
repz
sub
scas
stos
xor
pushf
xchg
xchg
cmp
outsb
dec
std
fildl
ss
incl
das
xchg
adc
mov
jae
lds
push
xor
icebp
adc
sub
jle
or
out
or
mov
push
jge
call
not
push
imul
cltd
adc
push
jbe
loope
xor
pop
loopne
out
mov
shl
mov
out
dec
loope
mov
and
sub
icebp
or
mov
dec
jb
sahf
jecxz
inc
xor
mov
xchg
cwtl
push
mov
lock
cld
into
scas
in
ljmp
cmp
fcomps
sub
jae
mov
xor
mov
fsubrl
test
mov
mov
mov
or
icebp
iret
pop
into
divl
or
sub
and
clc
movsl
cld
std
imul
pop
test
fnsaves
mov
mov
add
int
xchg
and
daa
pop
mov
mov
rcrl
cltd
outsl
lret
inc
jb
lahf
or
push
push
popa
push
lea
gs
pop
es
jecxz
fcmovnbe
cltd
sbb
add
js
hlt
mov
or
or
test
pop
and
sahf
test
mov
pop
mov
jno
adc
pop
cltd
push
ja
stos
mov
or
test
pop
pop
flds
in
test
push
arpl
lods
dec
sbb
cmpsl
sbb
mov
xor
dec
cmp
and
test
xor
push
cmp
and
adc
jo
js
mov
cli
cli
inc
js
mov
fdivrs
jae
push
add
sub
add
xor
jbe
push
push
mov
sti
loope
xor
shlb
xchg
out
pushf
mov
sub
fadds
les
mov
fnstsw
mov
dec
inc
xchg
cmpsl
repnz
and
push
push
test
cmpsl
lahf
imul
or
int
and
insb
movsb
hlt
or
sahf
or
and
popf
dec
xchg
cmpsl
sub
or
jbe
ret
jns
pop
jmp
call
aaa
fisttpl
sti
test
loopne
mov
sbb
test
adc
pop
mov
popa
push
mov
aad
jb
cld
push
mul
add
or
push
cltd
jl
leave
into
pop
test
adc
push
hlt
in
mov
je
mov
push
push
push
mov
shll
insl
lea
nop
inc
dec
and
pop
lods
stos
mov
pop
inc
push
inc
and
or
enter
pop
imul
fbld
and
jno
sbbl
dec
pop
leave
sub
jne
ffree
daa
mov
es
and
ja
mov
push
and
xor
out
scas
xchg
loop
pop
or
jnp
cli
inc
or
sti
cmp
push
and
data16
hlt
daa
or
fldt
std
ret
push
imul
pop
xlat
test
xchg
cs
cmp
dec
enter
or
les
mov
mov
test
push
mov
insl
pop
insb
add
adc
aad
xchg
sub
jg
pop
fistpll
pop
out
push
sbb
add
xor
das
outsb
cmp
adcl
adc
mov
into
call
inc
scas
pop
inc
in
test
inc
std
int3
cmpsb
mov
sbb
test
bound
dec
or
outsl
add
lea
sbb
push
sub
push
jecxz,pn
xchg
mov
sub
outsl
xor
pop
inc
inc
lcall
cmp
cmp
out
add
fsubl
push
jp
sub
pop
cmp
out
lret
pop
jl
or
mov
repnz
jge
clc
dec
dec
test
cs
mov
cs
or
mov
jle
push
sahf
pop
flds
push
scas
cld
test
psllq
iret
inc
jmp
cmp
lds
ftst
outsl
movsb
jge
jl
mov
xchg
mov
add
aaa
add
fildll
and
decb
scas
xchg
ror
xchg
dec
sub
jg
sub
mov
fwait
cs
arpl
xchg
push
pop
lcall
mov
and
rolb
push
repz
pop
nop
enter
scas
cmp
mov
loop
xchg
mov
dec
pop
xchg
int
bndldx
pop
cld
in
movb
mov
push
cmc
lcall
das
push
inc
jne
mov
nop
aad
fbld
xchg
mov
clc
icebp
mov
aad
rcll
push
push
dec
inc
inc
mov
pop
clc
loop
pop
mov
lods
cmp
dec
mov
pop
jae
push
jbe
xchg
hlt
inc
xor
mov
push
out
or
push
xchg
and
inc
push
or
mov
lods
pushf
dec
fcmovnu
push
es
mov
outsb
in
pop
stos
mov
push
xorl
mov
fcompl
js
iret
pusha
ja
hlt
jne
fisubl
ret
and
push
divps
pop
sub
mov
lret
jmp
stc
mov
cli
aad
lods
fs
aaa
enter
je
push
subl
push
ljmp
int3
out
mov
push
mov
int
jmp
mov
add
insb
and
outsl
lods
leave
cltd
or
jne,pn
popl
jmp
jns
out
xor
push
into
imul
call
pop
cli
mov
or
mov
mov
outsb
mov
or
lahf
out
cmp
rcrb
xchg
inc
dec
mov
aam
out
bound
dec
push
lods
outsl
xlat
cmp
fldenv
mov
mov
arpl
cmp
xchg
addr16
movsb
mov
aas
mov
pop
adc
pop
lret
loopne
jns
lret
push
cmp
pop
dec
sub
xchg
call
dec
or
xchg
sub
add
js
jge
mov
subl
or
jbe
out
mov
xchg
jp
xor
push
aaa
orl
cmc
test
mov
sub
pop
in
add
push
scas
imul
ficomps
call
je
cmp
adc
bnd
jnp
mov
addr16
mov
notb
mov
icebp
sbb
jp
jmp
lods
xor
push
rolb
pop
sti
jns
fs
cli
iret
jmp
cmp
xlat
cmp
push
mov
pop
inc
outsb
sbb
aas
xor
clc
clc
fs
lcall
or
mov
inc
mov
add
cmpsl
xor
nop
mov
push
mov
pop
andb
repz
arpl
push
jecxz
stc
ret
jb
lss
inc
outsb
imul
jo
push
imull
call
dec
lock
cmp
ss
push
add
jnp
and
inc
ror
mov
pop
pop
cmpsb
jmp
inc
cmp
xchg
jnp
mov
dec
popa
enter
xchg
lods
ja
std
mov
xor
pop
leave
jnp
in
cmp
test
pushf
xchg
nop
aaa
push
fcompl
lahf
adc
in
negl
lds
push
jmp
xchg
inc
rcl
push
enter
xor
in
iret
push
jmp
cmp
into
mov
mov
lcall
sub
xchg
jmp
lahf
mov
mov
push
cmp
fmull
dec
stos
fdivl
ficomps
repz
fwait
xlat
out
pop
or
lcall
stos
mov
and
or
leave
or
and
dec
mov
fisttps
xchg
pop
pxor
int
les
gs
movb
icebp
inc
sub
pusha
pop
adc
stc
stos
sbb
mov
xor
adc
fsub
lea
lahf
or
mov
cmpsb
mov
repnz
adc
out
mov
sbb
xor
iret
or
mov
lods
enter
push
xchg
fxam
shlb
cwtl
pop
lods
sub
pop
push
xchg
pusha
jae
or
out
test
mov
shl
out
push
inc
adc
jb
jmp
dec
in
cmp
std
adc
sub
insl
sub
iret
push
add
pop
lds
adc
inc
lret
test
stos
lcall
movb
push
leave
mov
gs
mov
cld
push
sub
mov
cmp
jb
mov
inc
xchg
cmc
mov
jo
adc
push
push
incb
xor
inc
lods
mov
lcall
adc
int
dec
fs
push
inc
cmp
mov
jae
mov
addl
inc
push
and
int
mov
iret
das
and
and
adc
pushw
cs
sub
fcompl
cmp
sbb
push
or
jmp
mov
hlt
push
test
or
mov
icebp
jmp
add
sbb
adc
sbb
mov
pop
repnz
dec
pusha
insl
push
cmpsl
scas
in
adc
mov
cmp
int3
aas
mov
or
mov
push
cmp
fstpl
push
mov
cmp
mov
repnz
xlat
leave
inc
test
mov
shll
int
mov
pop
inc
stos
sbb
subl
sub
or
xlat
mov
dec
mov
pop
push
push
shlb
dec
shrl
add
mov
cli
pop
push
lds
out
and
lcall
cwtl
dec
mov
dec
cwtl
push
sahf
stos
sub
jnp
push
lods
roll
scas
popf
mov
adc
shlb
adc
pop
mov
push
iret
ja
jo
mov
insb
lret
and
xchg
aaa
insb
dec
rclb
or
imul
adc
fs
aam
xchg
xchg
dec
fidivrs
out
push
cwtl
out
das
inc
adc
rcrl
jno
call
push
xchg
test
jno
xchg
scas
jae
lods
mov
mov
negl
xor
xor
repnz
loop
daa
mulb
mov
mov
xchg
jl
js
test
adc
or
mov
lretw
mov
das
sub
ret
push
xchg
push
loopne
dec
cmp
pop
loopne
add
out
push
mov
dec
jge
add
or
outsl
push
and
ja
and
cmc
lret
mov
inc
sarb
cmp
and
scas
inc
xor
cmp
inc
push
and
fcom
mov
xchg
and
xchg
jb
test
jb
mov
or
mov
mov
and
int3
hlt
jbe
sti
adc
xchg
rcrl
call
rcll
in
in
out
push
push
sarl
xor
inc
les
cmp
inc
push
xor
xor
pop
inc
push
add
mov
orl
es
movsb
xor
dec
mov
icebp
jl
add
lods
ds
out
adc
iret
rorl
cmp
sbb
inc
pop
in
xor
popa
stos
fstps
mov
adcb
aad
cltd
outsl
sti
rcrl
jmp
pop
adc
lods
jae
in
inc
shl
push
lods
rcl
in
and
jmp
scas
xor
rcrl
aam
jnp
ljmp
clc
xor
inc
adc
cld
mov
and
jge
fsubp
aam
ret
aaa
pop
xchg
mov
xlat
add
mov
fsubrl
and
insb
test
add
les
lret
loop
shl
or
cwtl
icebp
add
and
adc
inc
aaa
mov
fnstcw
cwtl
sub
dec
rcrl
pop
into
jmp
je
and
in
dec
add
aas
out
inc
into
jmp
inc
movsl
enter
lahf
mov
cmp
sub
pop
cmpb
repz
outsl
subb
xor
mov
pop
mov
data16
push
mov
dec
popa
push
mov
ror
push
cltd
rclb
mov
xchg
pop
push
xor
adc
mov
ret
push
aad
mov
jno
insl
insb
icebp
mov
inc
dec
repnz
push
pop
pop
push
cld
or
jo
sbb
inc
scas
sbb
mov
ss
loopne
mov
cltd
add
dec
xchg
jmp
jae
mov
in
add
cld
jne
xchg
notb
outsl
mov
ljmp
rcl
pop
ljmp
mov
fwait
loope
jp
sbb
leave
mov
xor
repnz
lret
dec
dec
mov
pop
push
mov
xor
mov
loop
loope
lret
jb,pn
xchg
lods
cmp
in
mov
pop
add
fidivrs
jbe
out
bnd
cwtl
in
shl
mov
sbb
sub
push
ja
fcomp
dec
shlb
inc
out
lret
mov
sbb
cmp
mov
cli
stos
mov
outsl
jns
loop
sbb
daa
add
mov
mov
cmp
aas
pop
jo
cmp
iret
icebp
jno
sub
jne
mov
ret
cld
mov
push
pop
scas
jl
cmp
lcall
in
mov
xchg
sbb
jb
mov
sbb
inc
lods
mov
out
aad
mov
mov
push
je
add
sbb
lds
int
jne
das
xchg
cmp
push
jne
sub
ss
hlt
pop
push
dec
std
jno
andl
adc
xor
insb
insl
adc
push
cbtw
dec
or
scas
add
fisttpll
xchg
orb
imul
mov
int
lea
xchg
out
call
mov
xor
cmpsb
inc
add
mov
lcall
inc
aad
outsl
sbb
sub
inc
rcrb
mov
ss
jo
cmp
insl
in
imul
xchg
dec
stc
in
rcrl
iret
fmull
std
or
or
ret
ja
jecxz
mull
in
enter
push
mov
inc
pusha
fwait
arpl
xlat
cmc
decl
add
enter
pop
add
shr
inc
popa
dec
das
sbb
sub
mov
push
adcl
and
lock
push
xor
mov
jne
sahf
mov
bound
movsl
stos
lret
lahf
pop
outsb
popf
jge
mov
xchg
dec
into
jb
xchg
mov
xchg
orl
pop
dec
lret
ljmp
jp
mov
nop
loop
lea
jb
lahf
dec
mov
pop
adc
adc
adc
and
xlat
push
pop
sbb
fidivrs
std
push
add
std
sub
pusha
xor
sbb
or
es
test
mov
inc
imul
mov
fwait
mov
out
fistpl
aam
mov
mov
pop
pop
lret
mov
mov
aam
push
pop
test
jp
testb
test
mov
lea
cmp
cltd
ja
sub
xchg
insb
mov
cltd
adc
test
sub
in
call
fstpl
shl
stos
xchg
dec
fwait
ret
jb
std
or
popf
cmpsb
movb
and
xor
sub
inc
sbb
gs
adc
or
ret
clc
icebp
imul
insl
push
and
cmp
pushf
xlat
and
fmuls
dec
mov
push
push
iret
jge
and
push
outsl
xchg
jae
add
and
test
test
sbb
loopne
push
cmp
mov
jl
sahf
lods
jge
mov
testl
arpl
jge
rclb
dec
loope
enter
ja
aas
stc
ds
inc
adc
adc
push
mov
stc
inc
jb
push
fdivrl
ljmp
ret
scas
lahf
lock
pop
aad
into
xchg
push
popa
sbb
mov
push
addr16
in
fmul
jns
sbb
inc
lods
shrl
add
int
popa
add
lods
xorb
jae
mov
mov
aam
or
push
xor
sub
std
sar
ret
arpl
cmp
int
mov
sbb
or
out
xchg
cmp
jb
xor
cli
xchg
aaa
data16
cmc
xchg
mov
dec
jp
jp
test
sbb
outsl
data16
ret
fmuls
pop
inc
jle
std
fisubrs
mov
subw
fstp
outsb
into
test
mov
lcall
std
jge
xor
mov
xor
incb
les
cmpl
xchg
int3
jl
in
lret
int
xor
aam
sub
repnz
push
cmp
mov
jecxz
mov
cmp
mov
adc
mov
pop
xorb
jmp
dec
add
xchg
imul
aam
mov
sbb
push
xchg
push
or
mov
push
and
fiadds
shlb
aaa
sub
ss
in
pop
pop
adc
xchg
xor
jo
lahf
insl
dec
mov
inc
dec
or
test
sahf
int3
dec
sbb
mov
push
adc
mov
mov
dec
pushf
int3
jno
fdivr
pop
dec
cmp
xor
and
dec
loop
xor
xchg
sbb
cmp
or
dec
jle
repnz
in
iret
pop
dec
xor
mov
pop
push
aaa
mov
add
sahf
arpl
mov
fwait
addr16
jb
and
jmp
lret
leave
aas
push
mov
xchg
add
hlt
gs
xchg
sbb
and
cld
divl
jo
aad
movsl
into
mov
xchg
sub
sti
or
jb
shll
xchg
inc
or
pop
or
pop
cltd
jmp
mov
sub
jnp
adc
jo
pop
arpl
cld
xchg
mov
or
fisubrl
pop
jl
xchg
gs
jb
test
sbb
shlb
sub
arpl
test
aam
xchg
sbb
addr16
repz
ret
dec
pop
mov
negl
sbb
and
push
insb
xchg
mov
lahf
jle
addr16
sub
push
and
mov
sbb
imul
insb
and
or
inc
or
ret
pop
mov
pop
xor
jl
int3
push
lahf
push
outsb
mov
or
roll
sbb
jl
jl
pop
rorb
add
push
pusha
add
fistpll
cld
pop
dec
sbb
insl
or
or
int3
rorl
dec
xchg
data16
aas
or
inc
mov
adc
sub
mov
inc
xchg
add
dec
in
test
push
or
gs
loope
push
or
sbb
mov
repz
cli
fstps
icebp
lods
jno
xchg
inc
iret
inc
call
cwtl
mov
outsl
sbb
in
adc
xor
enter
sti
mov
call
scas
mov
xor
jbe
push
lods
xchg
mov
rcl
test
xor
jp
lea
sub
insb
mov
push
ja
lret
jae
cmpsl
insl
popf
out
cs
xchg
mov
cmp
outsb
jne
out
adc
fists
testb
cmp
in
dec
into
push
sbb
pop
les
push
push
aam
fcoms
mov
mov
cli
xlat
pop
enter
dec
pop
mov
out
push
movsb
add
jbe
lods
nop
pop
rcrb
inc
test
ret
stc
unpcklps
jnp
gs
xor
jmp
adc
mov
cs
mov
xchg
and
int
stc
test
cmp
loopne
xor
mov
lret
push
bound
loopne
insb
loope
sub
call
sti
sbbb
mov
or
fimull
arpl
cwtl
ficompl
in
ret
in
dec
mov
or
jne
xlat
inc
aam
fildl
and
push
insb
shll
and
out
movhps
dec
xchg
inc
xor
xor
lds
jns
icebp
into
mov
or
or
jne
out
adc
cmpsb
fdivl
cmp
cs
push
push
and
sub
icebp
xchg
and
test
and
lods
sbb
pop
ljmp
in
and
popf
cltd
xchg
lods
adc
out
movl
xchg
mov
mov
xchg
sbb
sahf
int3
dec
hlt
push
jmp
shr
rcl
and
mov
out
dec
sbb
mov
push
punpckhbw
jmp
push
jb
push
lret
les
xchg
mov
push
jo
out
jecxz
mov
pop
out
arpl
inc
adcl
jge
mov
iret
iret
adc
or
adc
test
sbbl
scas
adc
push
add
dec
sub
inc
arpl
scas
sub
rcl
inc
enter
ja
inc
xor
and
xor
inc
das
push
std
notl
inc
mov
add
dec
imul
insb
and
fs
xchg
sub
clc
sbb
cwtl
clc
fstpl
add
lds
add
divps
adc
popf
xor
cmc
adc
stos
xor
xchg
sub
xchg
cmp
and
pand
hlt
inc
subl
mov
pop
dec
pop
xor
outsb
shll
cmp
imul
inc
int3
sub
mov
fucompp
adc
pop
cmp
xchg
pop
push
lods
xor
inc
jl
jno
inc
add
scas
pop
in
lcall
xor
mov
adc
xor
clc
cmp
pop
out
add
add
ds
fs
int
pusha
or
xchg
cltd
movsl
ret
xor
pop
xor
add
inc
mov
std
push
cmp
push
in
loopne
cmpsl
xchg
cmpsb
ret
scas
pusha
jecxz
push
leave
mov
jae
sub
fldt
xchg
jge
aas
inc
sar
out
movsb
shl
xchg
scas
add
and
sbb
cmpsb
int3
lret
test
test
jb
cltd
lea
mov
mov
cmp
into
ja
dec
movsl
and
and
dec
ficoml
outsb
and
mov
aas
into
fidivl
sub
and
xchg
sbb
mov
inc
push
popa
mov
sub
push
test
pop
mov
and
into
enter
movsb
dec
jb
pop
test
fisubl
rclb
shr
sub
mov
pushf
cmp
xor
hlt
in
mov
sub
dec
push
leave
pushf
loope
or
cmp
in
jmp
cld
sub
aad
pop
cmp
ror
pusha
gs
fs
xchg
push
mov
xor
les
xchg
in
dec
cmp
loopne
pop
add
adc
fidivl
mov
das
repz
and
or
pop
outsb
mov
jo
adc
call
pop
idivl
adc
clc
xchg
xor
mov
lods
xchg
dec
inc
and
sbb
mov
adc
jl
pop
sti
push
divl
in
push
push
jmp
lods
jo
sbb
cmp
insb
push
int
mov
adc
pop
add
in
shlb
mov
push
das
inc
fcompl
inc
inc
pop
mov
adc
adc
mov
mov
pop
jmp
popf
lret
or
or
lds
jecxz
ljmp
adc
mov
nop
out
mov
xchg
test
push
jae
js
fs
call
imul
clc
test
test
subb
out
imul
cwtl
mov
fldt
and
mov
or
stos
cld
cwtl
adc
ficomps
sahf
lahf
aad
leave
mov
and
mov
adc
fs
push
push
call
fidivs
sub
popa
scas
sbb
dec
int3
inc
pop
xor
inc
pop
xchg
out
repz
jle
cmp
cmc
lods
cld
jno
xor
sub
jno
stc
pop
pop
ret
xchg
insb
cmp
loopne
std
add
jns
add
adc
sbb
mov
lods
mov
push
mov
in
add
iret
pusha
sahf
xchg
and
jp
loopne
or
add
insb
lds
out
inc
xor
repz
lds
jae
testb
stos
mov
jnp
and
fsubr
and
divb
mov
inc
mov
aas
dec
enter
sbb
dec
jbe
addr16
xchg
xchg
inc
adc
mov
fcmovne
jne
lea
lret
mov
jo
xor
cld
out
pop
mov
mov
ret
repz
inc
sbb
in
and
mov
gs
sbb
sub
cmc
mov
addr16
das
cld
mov
adc
pop
xchg
test
mov
out
xchg
adcl
cmp
dec
or
iret
fildl
test
xchg
push
mov
xchg
jb
mov
or
les
mov
jp
in
jge,pt
jl
fcoml
inc
xchg
pop
movsb
or
and
cs
push
iret
sbb
xchg
out
cmp
ret
jg
es
dec
sahf
incb
mov
or
mov
and
sbb
lcall
cmp
push
lcall
and
fwait
arpl
or
repz
mov
ret
mov
inc
add
xor
sub
test
cmp
push
cmp
loopne
divl
std
hlt
leave
cltd
sahf
fistpll
out
rcr
cli
icebp
dec
fidivl
subl
jno
and
dec
pop
dec
popa
sbb
push
pop
bound
andb
inc
int3
push
inc
inc
add
iret
hlt
lods
inc
and
jne
xchg
cmc
sub
hlt
ret
pop
pop
adc
rcr
hlt
insl
mov
aam
xchg
xchg
pop
loope
sbb
jl
mov
outsb
insl
stc
mov
cmp
mov
rorb
lcall
pushf
fldl
fistpll
cmp
sbb
loope
ds
jo
in
jmp
fwait
jnp
mov
loop
lcall
call
loopne
jp
pop
loope
mov
sub
sub
add
movsl
es
aaa
add
int
cs
cmp
or
xchg
mov
icebp
cmp
push
jo
mov
jp
pop
xor
aad
loopne
adc
adc
mov
xor
xor
jmp
enter
ljmp
pop
sub
aaa
mov
insl
xchg
jl
sbb
fdiv
and
mov
mov
aaa
push
adc
lret
cwtl
shr
aad
mov
sarb
outsl
nop
sub
jge
mov
mov
push
lcall
sub
loop
sti
insb
push
pop
jge
ljmp
stos
int
ds
xor
andb
mov
out
mov
and
inc
test
and
dec
cs
inc
daa
push
movsl
loope
sub
js
push
xchg
sbb
jecxz
mov
jno
mov
or
xchg
out
hlt
repnz
cltd
ds
jbe
jno
lds
test
jne
mov
sub
pushf
subl
cmp
shll
in
loopne
insb
scas
in
adc
lds
pop
jle
jne
xor
xchg
cmp
das
jae
bound
xor
fdivrs
sbb
xlat
lret
lods
shrb
add
or
sti
mov
cwtl
inc
loop
js
mov
and
cltd
inc
out
test
adc
fnstenv
arpl
jne
pop
ss
fwait
es
mov
jb
es
aad
inc
mov
cmc
cmp
icebp
cmp
or
cs
pop
mov
pop
jle
cs
pop
outsb
adc
cmp
sub
add
in
and
pop
jno
icebp
jo
mov
add
and
call
pop
ljmp
mov
mov
inc
sub
dec
add
pop
test
das
inc
mov
push
and
xor
dec
jmp
xchg
es
repnz
cmp
xchg
dec
mov
dec
pop
add
pop
sub
push
aaa
aaa
in
in
clc
jecxz
stos
and
and
fcompl
cmp
cltd
inc
lret
dec
add
mov
inc
nop
jae
jns
dec
mov
cmc
adc
sbb
std
inc
scas
arpl
mov
mov
push
dec
and
xchg
push
daa
cld
cltd
adc
pop
loope
fidivrs
mov
pop
ret
cmc
scas
pop
fisttps
fwait
cmp
jl
push
sbb
add
mov
stos
orb
mov
mov
mov
lea
push
mov
mov
stos
mov
mov
and
push
cltd
dec
dec
leave
lock
sbb
aad
icebp
pop
adc
stc
inc
cmpsb
and
sbb
xchg
and
and
or
test
adc
stc
lods
jecxz
outsb
fisttpl
add
lret
pop
js
jno
data16
push
adc
xchg
push
insl
sbb
xchg
cmp
mov
movsl
xor
in
adc
test
icebp
js
outsb
frstor
jo
ret
add
in
pop
mov
adc
dec
pop
pop
sbb
test
mov
push
push
lret
mov
sub
jb
jmp
push
mov
orl
out
gs
subl
fs
jg
adc
mov
outsb
add
sbb
fildll
and
xchg
leave
push
mov
xchg
test
out
sub
push
into
sti
or
pop
sbb
adc
dec
pop
imul
scas
xor
xchg
mov
ficompl
cmp
xchg
gs
jle
mov
add
push
mov
pop
dec
sbb
xchg
jo
inc
mov
and
fadds
ds
jle
adc
adc
aam
insl
in
out
push
in
idivl
mov
enter
das
out
aad
xchg
mov
icebp
addr16
dec
lods
dec
scas
cmp
fsubs
xchg
movsl
negl
pop
xor
and
cltd
rclb
mov
ds
cmp
push
xor
jp
dec
out
loop
rorl
cmpb
pop
or
mov
test
jp
inc
push
test
xchg
xorl
out
push
js
add
xchg
mov
or
push
xor
or
imul
sbb
rorb
fcmovb
sahf
in
sub
mov
je
lods
repz
inc
shlb
xor
mov
jno
dec
outsl
mov
jne
cmpsl
std
push
jae
jecxz
push
xchg
push
std
mov
xchg
sti
and
mov
push
shl
mov
stos
mov
lock
push
push
leave
dec
cli
xlat
in
push
fwait
adc
test
jbe
aaa
decl
push
mov
add
push
sub
sub
leave
xchg
lods
and
xor
push
inc
mov
popa
cmpsb
dec
pushf
xor
sub
inc
loopne
daa
xchg
mov
bound
jecxz
jne
lret
cmc
loopne
adc
xorb
pop
scas
jbe
sbb
mov
xor
add
stc
fdivr
sbb
mov
push
out
jl
push
mov
mov
xor
inc
les
pop
mov
xor
bound
mov
add
push
adc
bnd
xchg
inc
xor
cmp
hlt
aaa
sahf
lods
cmpsl
pop
adc
xor
pop
aam
push
lcall
inc
fmull
and
pop
dec
cmp
sub
sub
dec
mov
pop
add
std
js
popf
clc
mov
cmp
adc
lret
push
mov
sahf
pop
addr16
mov
in
add
lds
mov
lock
aas
mov
xor
and
inc
pop
ss
push
fbstp
dec
fs
inc
xor
cmp
jmp
repnz
mov
iret
fisttpll
ljmp
lock
push
sbb
ret
repz
lods
dec
mov
fs
ficoml
mov
jb
dec
sbb
jns
fcmovnb
push
cwtl
adc
xchg
ja
out
adc
repnz
lods
es
scas
cmp
enter
add
adc
les
mov
pop
push
inc
out
jno,pn
pushaw
dec
shll
mov
pop
fiaddl
fwait
or
jge
outsb
cmp
hlt
daa
inc
jge
lcall
or
mov
negl
pop
add
mov
jmp
inc
lods
xchg
or
sub
or
pop
add
cmpsl
test
cmp
xor
and
dec
data16
inc
mov
xchg
rclb
mov
inc
sbb
cmc
mov
or
sub
xchg
into
divl
or
cmpl
lods
scas
cli
mov
cmp
inc
or
mov
push
ret
jne
add
mov
push
add
sahf
cltd
ficoms
std
popf
mov
incl
orl
in
dec
mov
sub
sub
cs
in
or
pop
push
or
sub
xor
fcompp
inc
mov
sbb
mov
cmp
jle
inc
xchg
sarl
lods
fisubrl
push
inc
ja
clc
popf
jne
adc
xchg
in
imull
xchg
sbb
idivl
out
push
inc
xlat
cmp
sbb
js
mov
push
mov
das
mov
pop
ret
js
inc
es
mull
and
mov
or
int3
inc
test
push
add
dec
data16
outsl
mov
enter
dec
lret
sahf
insl
ret
movsb
sbb
xchg
push
iret
lcall
in
add
nop
leave
cltd
sbb
movsl
add
or
cmp
into
jecxz
cmp
shll
aas
pop
into
push
jb
rcll
sub
ficompl
jbe
and
clc
add
cmp
mov
or
xchg
je
fidivrl
inc
inc
push
cmc
sbb
lods
pop
es
mov
mov
ret
jnp
outsb
xchg
xchg
mov
adc
shll
ds
addr16
dec
dec
dec
aas
cmp
popf
cmc
lds
in
dec
cwtl
stos
or
xchg
and
mov
push
xchg
mov
stos
mov
xor
iret
imul
repnz
or
outsb
icebp
cmpb
dec
push
push
aam
add
nop
lahf
jp
adc
aas
cltd
mov
jbe
inc
or
sbb
jle
fistpl
xor
out
mov
rcll
jo
jne
rolb
clc
sbb
pop
jbe
sahf
lret
cmc
movsb
and
xchg
adc
inc
fs
les
aaa
popf
cmp
fwait
xlat
clc
sub
cld
call
xchg
int
and
dec
xorb
shll
sahf
lds
adc
xor
cmpl
push
cmp
imul
xor
xchg
dec
or
int
fs
rcl
cwtl
cltd
push
insl
cld
jecxz
mov
scas
imul
mov
jecxz
or
iret
dec
xchg
movsl
imul
mov
into
push
lcall
test
and
aam
xchg
push
pop
scas
scas
and
cli
sub
gs
mov
xchg
pop
xor
inc
mov
xlat
cltd
movsb
cmp
add
icebp
mov
ret
mov
sbb
dec
in
js
mov
push
add
out
fcmovbe
cld
mov
outsl
sub
cmpsb
lds
push
or
xlat
jns
repz
test
pop
xor
cmc
mov
mov
into
shlb
adc
test
push
xchg
jle
insl
mov
je
jl
andb
cmpsl
add
push
xor
shr
sbb
cmp
je
decl
roll
pop
pop
mov
or
jno
mov
aad
push
mov
mov
add
lods
sarb
das
push
dec
and
push
add
sub
mov
insl
xchg
sahf
addb
xor
and
popa
out
arpl
adc
movsl
rcrl
inc
jno
sbb
mov
xlat
icebp
mov
add
xchg
cltd
ja
pop
clc
fisubl
lahf
jne
mov
pop
pop
push
cmpsl
bound
adc
fiaddl
mov
cwtl
cmp
incl
lods
xchg
push
and
subl
fwait
add
loope
push
bound
sahf
or
add
outsl
sub
std
mov
mov
mov
mov
ja
cld
xchg
testb
xor
push
adc
iret
push
or
jge
leave
xor
and
or
repnz
ss
movsl
xlat
mov
xchg
push
adc
mov
jne
mov
pushl
stos
xchg
cs
ret
jae
push
mov
lock
das
pusha
sub
or
je
xor
and
mov
or
jp
cmp
cmc
lcall
jp
xchg
and
sub
sbb
pop
adcb
lahf
mov
push
sbb
mov
lret
in
push
aam
sub
cmp
and
mov
arpl
mov
pop
out
adc
loopne
aad
cltd
lea
cmp
movmskps
lods
outsl
jne,pt
mov
adc
leave
sbb
cltd
inc
or
xchg
testl
mov
neg
xchg
jnp
pushl
test
add
rcrb
mov
mov
jne
xchg
dec
pop
cmp
sbb
shll
cmp
loop
fadds
mov
cld
ror
xor
stos
fisttpll
cmp
shr
inc
mov
gs
cmp
gs
or
pop
xor
sbb
dec
ds
out
or
pop
adc
mov
in
mov
dec
mov
sahf
add
xorb
xchg
mov
cmp
fldcw
in
pop
test
popa
clc
dec
lock
push
leave
insb
popf
ja
fnstcw
sbbb
xchg
sbb
mov
cmpsb
cmp
imul
cmp
fdivs
sub
imul
sbb
sbb
mov
and
repz
mov
xchg
mov
jecxz
in
mov
aam
pop
cmp
ss
outsl
cwtl
sub
insl
sub
inc
repz
fnsave
lock
fisttpll
stos
out
movlps
test
lret
jno
and
mov
popf
cmp
imul
incb
push
xchg
xor
sub
add
add
push
and
movl
pop
add
jmp
nop
sub
movb
mov
mov
aas
js
jg
lea
mov
loopne
mov
and
jbe
add
xchg
shll
lea
cmp
pop
popa
fdivl
mov
aaa
fwait
xchg
push
adc
push
ds
mov
aaa
mov
add
add
and
daa
je
shll
sbb
mov
je
jb
shl
dec
aam
call
xchg
xor
push
cmc
pop
mov
xor
cmpsb
andl
repnz
movsb
mov
fidivrl
adc
test
mov
jnp
xor
xchg
divb
aaa
xchg
cmp
cmp
fnstcw
adc
or
jp
dec
dec
cwtl
repz
push
loopne
test
lahf
ficompl
outsl
inc
or
sub
rorb
mov
dec
jmp
mov
jge
je
enter
in
push
dec
fdivrs
dec
popa
jg
xchg
mov
movsb
mov
fisubrl
mov
in
pop
jae
xchg
test
mov
insb
sub
mov
cmp
jmp
jne
ss
xor
mov
imul
sbb
es
incb
mov
mov
inc
xchg
pushf
or
sahf
nop
ljmp
fcomp
popf
dec
add
cmpsb
loop
pop
daa
xor
xchg
test
dec
lret
xlat
sti
lods
mov
cmpsl
jne
aas
cmp
push
stc
cmc
mov
int3
jnp
xor
cmp
js
scas
aas
add
lcall
mov
xchg
mov
in
add
scas
mov
cld
jb
test
mov
xchg
mov
stos
jle
lahf
push
sub
xchg
cmp
dec
sbb
pop
stos
jge
mov
jp
xchg
adc
or
mov
lret
insb
cld
mov
and
les
imull
hlt
jae
mov
mov
push
dec
fmuls
outsl
aad
xchg
xorl
repz
adc
xor
je
mov
pop
push
pop
fs
testl
lcall
sub
out
add
insb
aas
jnp
inc
mov
movl
bound
lds
in
fdivr
scas
jecxz
jmp
inc
ret
add
or
les
push
fcmove
or
jge
jecxz
sti
ret
push
ror
int3
jg
xor
xchg
popa
cmp
ljmp
outsb
jg
cwtl
push
push
push
pop
xchg
or
jge
jae
scas
scas
pop
mov
ror
mov
cmp
sbb
arpl
mov
jge
dec
fisubl
in
cmp
sahf
xlat
cmc
hlt
shlb
jmp
inc
jbe
mov
pop
xor
lock
repnz
fsubr
push
outsb
daa
aaa
leave
dec
sbb
inc
loopne
xchg
inc
jne
imul
pop
ds
push
dec
jne
stos
mov
jge
mov
imul
or
aam
pop
lea
mov
mov
sub
fs
scas
adc
lock
dec
ror
adc
imul
daa
aad
add
pop
lahf
les
cwtl
addb
ss
and
push
gs
hlt
mov
into
jg
lret
push
or
dec
into
xor
test
mov
insl
leave
jno
and
pop
or
sbb
movsl
push
mov
rol
inc
gs
mov
xchg
mov
inc
fidivs
leave
imul
pop
js
adc
in
faddp
icebp
lcall
adc
jmp
or
add
aad
arpl
xchg
jae
sbb
push
xchg
imul
sub
lret
jmp
push
inc
stos
shrb
out
xchg
and
movsl
push
sub
sti
das
stos
mov
mov
push
push
jp
inc
xor
pop
jb
or
xchg
fst
jg
xor
ds
js
aaa
mov
adc
aam
jecxz
shrl
mov
push
test
out
sti
cmp
jle
hlt
fnsave
adc
dec
ret
add
xchg
jae
xor
insb
cli
mov
lock
sbb
mov
call
dec
fdivl
scas
dec
add
mov
cs
sub
mov
cld
or
xor
mov
inc
cwtl
and
adc
dec
add
fwait
imul
leave
mov
inc
push
ss
pop
dec
das
fistl
mov
aas
push
insl
das
push
loopne
pop
push
in
mov
ds
pop
movsl
xchg
pop
nop
jmp
cmpsb
inc
jne
sub
adc
cmp
sub
or
das
inc
xor
mov
mov
test
inc
mov
push
mov
mov
xchg
cltd
pushf
sbb
inc
jl
into
sbb
push
xor
aas
push
cmc
andb
jb
std
xchg
and
loop
cs
jmp
mov
pop
jae
mov
cmpsl
pop
pop
rcrl
jmp
in
xchg
sub
mov
push
stos
or
sub
fldenv
test
cmpl
sarb
rolb
jecxz
test
outsl
cmp
inc
jmp
js
sbb
add
xor
stc
fmull
xchg
pop
rorb
xchg
ss
iret
cmpsl
xlat
mov
xchg
xor
stos
fsubp
cmpsb
lods
icebp
lods
aad
scas
aam
in
xlat
fnstcw
lret
inc
cmpsb
mov
adc
jo
push
fimull
mov
cmc
push
pop
out
movsb
loopne
and
out
jecxz
xor
pop
arpl
loope,pt
imul
mov
or
test
add
stos
call
lahf
sub
sub
xor
scas
adc
scas
cmp
sbb
fimull
scas
popf
test
sub
push
pop
sarl
cmc
popf
push
pusha
and
call
cmp
inc
push
xchg
inc
adcb
xor
xchg
jmp
out
add
cmp
jns
lret
hlt
aas
mov
scas
fs
andl
mov
adc
fcompl
push
in
lcall
cld
pop
or
pop
lret
insb
stos
sbb
repz
adc
test
jecxz
xor
ret
mov
jge
jne
ret
cmp
jp
cmp
and
mov
ljmp
cmp
jne
push
inc
add
xor
xchg
out
popa
insl
andl
out
xor
in
adc
lahf
in
add
sti
mov
mov
or
in
loope
dec
sub
push
repz
fstps
xor
inc
fsubl
movb
add
adc
cltd
mov
inc
jo
mov
jg
pop
cmp
xor
popf
mov
inc
test
popa
jmp
mov
lods
shrb
dec
mov
sbb
jg
push
push
jae
cmp
sbb
sbb
push
and
jecxz
sbb
or
fbstp
sarb
pop
push
sbb
out
shll
mov
jns
pop
mov
adc
mov
bound
pop
jo
mov
out
mov
mov
add
push
sub
cmovl
add
dec
jb
loop
out
addb
je
imul
aam
fwait
push
or
pusha
cmp
push
leave
pusha
stos
jl
dec
movsl
mov
cmp
fadd
adcb
pop
mov
out
jmp
stos
insl
pop
and
stc
push
or
ja
inc
lea
mov
clc
nop
mov
sbb
pop
in
xchg
add
dec
cmpsb
lahf
cld
push
fdivr
mov
xchg
and
mov
in
xchg
mov
shl
xchg
jl
stos
ss
pop
lock
inc
sbb
out
mov
test
and
push
xor
jl
xchg
cmp
xchg
rcll
ss
ja
push
movsl
lea
jo
xchg
les
adc
out
pop
int3
xchg
and
arpl
mov
xlat
xlat
imul
ljmp
iret
mov
aaa
add
sbbb
mov
and
adc
xor
mov
xlat
decb
xor
xchg
idiv
and
push
flds
mov
pop
add
outsl
adc
call
cmp
xor
mov
add
or
push
push
or
fdivl
into
dec
call
inc
dec
jmp
dec
jg
jecxz
out
cmpsl
fisubs
dec
fwait
xchg
aaa
jns
cld
mov
or
xor
imull
outsb
mov
xor
mov
shll
repz
bound
sbb
inc
pop
sub
pop
test
mov
aam
inc
aad
add
cltd
out
mov
cmc
jge
lret
in
adcb
test
push
nop
loopne
js
hlt
xchg
cmp
fsubs
push
cwtl
inc
pop
int3
js
lgs
mov
ret
mov
pop
mov
mov
mov
sbb
inc
mov
testb
and
iret
out
mov
notb
in
ja
sbb
ret
adc
mov
mov
cli
paddb
jmp
push
jmp
ret
mov
imul
and
mov
xchg
pop
sub
adc
in
jmp
cmc
fdivs
mov
push
or
jne
cmp
cmpsb
insb
out
in
add
arpl
loopne
repz
mov
jp
jp
mov
push
dec
out
add
or
aas
sub
pop
insb
cmp
cmp
mov
scas
ret
fcmovnb
xchg
int3
inc
sbb
dec
rolb
add
inc
call
jle
addr16
adc
adc
adc
popa
std
repnz
xorl
dec
and
mov
pop
cmpsl
push
imul
sbb
shrb
int
test
and
inc
jl
imul
out
and
data16
and
sbb
add
jo
ret
push
divl
mov
loop
cmp
push
cmc
xchg
gs
rcrl
mov
push
cli
pcmpgtw
das
push
cltd
lret
sub
sbb
enter
jle
sub
mov
ljmp
out
and
mov
inc
dec
jne
adcb
add
fdivs
jg
xor
das
mov
int
mov
icebp
les
dec
mov
jno
outsb
dec
sub
daa
rorl
std
sub
out
je
mov
popa
cmp
or
outsl
testb
or
in
sub
lds
out
mov
and
popl
sahf
cmp
jo
xorb
iret
xchg
in
jg
jnp
mov
mov
xchg
add
xchg
gs
ret
call
xchg
push
dec
pushf
pop
mov
xor
inc
mov
jmp
out
sub
cmp
sub
and
cmc
in
push
sbb
mov
add
shlb
push
sub
addr16
mov
pop
cli
push
push
jg
pop
cmp
aam
push
mov
adc
pop
mov
outsl
sti
inc
xchg
inc
sarl
xor
imul
mov
fdivrp
test
das
mov
pop
ret
mov
imull
clc
cmp
mov
cmp
inc
jb
dec
rorb
sub
sti
push
and
mov
adc
dec
insl
ljmp
mov
or
jno
xchg
jl
add
cmp
xlat
loope
es
pop
inc
rolb
cli
dec
pop
ljmp
xor
mov
xchg
jmp
mov
daa
pop
push
imul
arpl
cs
push
mov
sbb
aas
and
loope
and
mov
and
push
sub
xchg
insb
add
mov
mov
movsl
inc
call
sub
jnp
pushf
fcompp
push
or
imul
lret
fistl
pop
pop
cld
xchg
jl
in
stos
dec
jp
filds
cmp
leave
cmc
cmp
scas
pop
cmpsl
mov
inc
insb
das
push
dec
cmp
adcl
mov
cmp
and
or
insb
loope
dec
jle
sub
push
dec
xchg
xor
inc
jle
inc
dec
mov
jmp
jle
sarb
daa
dec
shrb
dec
addr16
or
stos
das
insb
shll
andl
cmpb
xor
and
jns
jp
jl
sahf
stc
ret
xchg
test
inc
in
in
mov
mov
cwtl
in
repnz
fsts
pushf
movsl
aam
stc
mov
ja
push
mov
xor
sbb
mov
fstps
hlt
fs
push
inc
stos
cmpsl
cwtl
push
xlat
stc
jb
jmp
leave
push
and
mov
addr16
mov
repz
fs
mov
sbb
pop
sbb
mov
les
into
mov
mov
test
cwtl
cmp
fadds
jo
rcrb
adc
jno
sub
lock
and
sub
aad
or
popf
js
int
flds
loopne
mov
push
dec
outsb
sub
mov
pop
addb
loopne
adc
fwait
int3
rcr
ss
push
cmpb
fdivp
inc
jae
xlat
xor
mov
fdivl
sti
inc
pop
icebp
pop
stos
mov
adc
cmp
repnz
fidivrl
aaa
das
add
dec
push
add
mov
mov
and
stos
lret
dec
mov
pusha
and
idivl
jbe
not
add
cmp
outsb
dec
sub
xchg
sbb
pop
jge
call
jle
cmpsb
clc
das
stc
inc
jmp
mov
roll
lods
sub
xchg
scas
nop
xor
sub
sbbb
cmp
call
xor
adc
mov
jns
enter
sti
daa
dec
testl
pop
push
std
lret
fs
cmpl
cmc
adc
or
pushl
mov
jl
jmp
pop
cmpsl
xor
outsb
cltd
jb
push
adc
xor
enter
test
xchg
call
out
cmp
pop
mov
in
add
xor
icebp
mov
ss
adc
mov
fdivrp
jae
cmp
dec
ljmp
int3
inc
scas
std
inc
cs
leave
mov
xor
fs
xchg
js
xchg
fwait
lds
pop
out
push
cmp
adc
rorb
subl
pop
aam
push
lods
repnz
out
mov
push
cltd
mov
mov
adcb
and
mov
pop
and
dec
ret
cs
scas
adcl
add
push
pop
mov
cmp
aam
hlt
cld
out
xor
push
inc
fldl
jne
jmp
mov
xchg
mov
sub
and
sbb
in
or
dec
push
aas
shrb
in
incl
lds
or
iret
jnp
cmp
addb
addr16
sbb
sbb
adc
ret
lods
add
cmp
jae
dec
stc
jae
mov
add
sbb
mov
mov
frstor
enter
fdivrs
call
scas
outsl
xor
push
out
addr16
outsb
push
stos
add
mov
sub
in
mov
xchg
cmp
or
loope
gs
adc
jmp
call
shrl
cld
call
leave
nop
fstp
in
pmulhw
push
or
fsubr
leave
dec
mov
cmp
xchg
fimuls
cmp
adc
xor
jb
push
rolb
push
pop
ljmp
and
andb
mov
push
inc
xchg
cwtl
test
les
enter
ljmp
xchg
lret
mov
addl
sbb
dec
dec
aaa
stos
dec
daa
shll
scas
rolb
mov
dec
adc
je
inc
add
push
mov
lret
test
sbb
push
fldt
mov
movsl
adc
scas
aam
push
pushf
ficomps
sub
sbb
ret
sbb
jp
notl
in
repnz
jecxz
scas
cmc
mov
and
das
push
mov
sub
mov
mov
fmul
sbb
xchg
into
repz
add
idivl
add
xor
repnz
mov
push
jnp
pop
fwait
mov
push
lock
cmpsl
inc
or
mov
mov
fimuls
daa
push
adc
popf
cmpb
mov
jmp
out
test
dec
push
loope
dec
mov
aam
mov
jmp
pop
lods
int
mov
insl
sub
lods
inc
cmpl
lret
imul
push
mov
push
popl
bound
sbb
mov
sbb
add
jecxz
mov
bound
popf
in
pop
push
movsb
negb
push
add
loop
dec
repz
jb
push
add
jmp
imul
ret
daa
repnz
adc
lods
sahf
dec
add
xchg
xor
inc
sbb
pop
cmc
pop
xor
jb
stc
push
xchg
jo
imul
mov
xchg
das
push
mov
xor
sbb
imul
push
mov
sbb
jbe
sub
fiadds
inc
fsubrs
repz
and
rclb
stos
jne
rsm
std
out
mov
pop
pop
add
lock
lds
adc
cmp
mov
adc
loope
adc
sbb
enter
movsb
inc
ljmp
pop
data16
or
jg
or
pop
mov
call
leave
test
inc
leave
mov
sarb
sbb
jmp
xor
inc
cld
mov
repnz
add
shrl
insl
xchg
push
call
mov
inc
push
sbb
xor
or
arpl
lods
cmp
mov
cmc
fisttpl
lcall
bound
mov
push
adc
pop
lods
movb
push
sbb
xchg
sti
mov
mov
into
mov
jnp
arpl
fs
push
add
jg
repz
sti
sbb
shrb
xor
sarl
sbb
popaw
das
cmp
inc
aam
fcomp
xchg
movb
out
test
mov
sbb
lds
xlat
jle
bswap
out
call
inc
xchg
aas
ficompl
jne
xchg
mov
in
cli
in
mov
mov
push
and
sub
out
data16
mov
int3
jne
and
mov
test
leave
insb
mov
jecxz
inc
ror
lret
xor
xor
dec
lcall
dec
pop
out
jbe
sub
push
push
out
push
fs
mov
inc
mul
out
xchg
jae
mov
cs
add
or
lret
addl
or
shrb
xchg
test
out
mov
xchg
mov
addr16
inc
popa
test
cmp
sbb
roll
shr
ds
les
test
outsl
or
fcomps
jne
xchg
in
repnz
rol
mov
stc
subl
push
cld
xor
je
in
xchg
shll
stos
mov
and
cmp
mulb
lahf
and
sahf
dec
cmp
mov
imul
mov
fisubrs
idivl
mov
aaa
xor
xor
mov
std
fwait
call
mov
out
jns
sub
lock
movsb
pop
addb
xor
push
add
lods
jnp
jns
adc
xchg
outsl
xchg
mov
call
mov
dec
decb
sub
sarb
lock
sub
mov
pusha
js
mov
rcrb
mov
popf
mov
inc
sbb
add
mov
stos
pushl
or
or
iret
insl
inc
mov
jbe
mov
mov
add
insl
pusha
xlat
pop
jmp
insb
outsl
sub
lock
dec
mov
xor
and
push
incl
xchg
mov
push
pusha
xor
and
bound
fstpt
pop
mov
cwtl
jp
psllw
or
mov
fbld
or
cmp
xchg
imul
clc
sub
dec
cli
jns
and
incl
inc
mov
outsl
ja
pop
ds
dec
cli
xor
popa
cmp
cs
mov
mov
aam
mov
out
popa
fcomps
sbb
push
mov
pop
cli
push
cmp
xor
icebp
stos
fcoml
cmp
das
and
add
imul
int3
jg
mov
push
push
stc
push
jb
je
mov
pushf
pop
in
lret
dec
lds
mov
adc
lcall
pop
mov
outsb
rol
lea
adc
mov
mov
cwtl
fcoms
sbb
jle
nop
pop
push
pop
lret
es
fisubrl
cli
les
lret
adc
cmp
adc
adc
jmp
sbb
arpl
ficompl
or
out
in
jnp
pop
mov
adc
push
add
mov
xor
pusha
mov
sub
xor
stos
test
add
adc
insl
leave
mov
adc
outsl
aam
in
inc
dec
nop
sub
mov
xchg
lret
add
push
lds
test
add
add
or
add
pop
pop
or
lds
rolb
mov
movsl
dec
ret
pop
bound
push
out
xor
fstps
sbb
mov
stc
inc
or
sub
push
loopne
ljmp
aam
idiv
jb
test
mov
bound
out
jge
pop
ret
mov
mov
inc
in
imul
push
lods
and
roll
dec
ss
jmp
popa
out
pop
stos
jl
or
repnz
pushf
imul
in
ret
push
ret
movsb
pop
dec
and
fadd
in
dec
inc
aaa
ds
stc
pop
in
or
add
imul
add
sbb
jo
and
rorl
add
cltd
mov
maskmovq
notl
fnstcw
mov
sub
mov
jl
dec
out
push
cmp
mov
ds
mov
pop
out
add
cmp
cli
and
jae
pop
jle
sub
pop
jbe
scas
stos
movsb
aas
and
mov
popf
sub
lcall
incl
je
add
mov
jg
lretw
xchg
std
jb
stos
cmp
push
cmp
adc
jg
sahf
lcall
jp
jle
cmp
or
cli
imul
outsb
mov
in
cmpsl
jbe
lds
jecxz
ret
frstor
xchg
and
hlt
jmp
jecxz
mov
push
sub
push
jle
push
sub
mov
pusha
jl
fidivs
pop
arpl
scas
jae
mov
cmc
fimull
ffree
pop
pop
dec
pushf
mov
push
jp
test
popf
fs
inc
push
dec
ret
rcrb
sti
sbb
imul
cmp
andl
inc
xor
mov
mov
rorl
fcoms
dec
cmpsb
testl
push
xor
lret
jne
pop
scas
xchg
or
lds
fimull
lret
cmp
dec
and
lds
dec
mov
xchg
sub
push
out
scas
cli
call
call
xchg
orb
mov
sbbl
lret
ss
xor
xor
movsb
out
mov
sahf
inc
ja
dec
data16
call
jno
adc
and
outsb
jbe
rcl
mov
dec
jl
mov
addl
scas
pop
cwtl
ficompl
ss
cmp
je
mov
push
add
or
adc
sti
testl
lods
test
push
and
cltd
lret
xchg
mov
pop
popf
dec
mov
mov
mov
add
xor
fidivs
cmp
push
inc
jnp
test
je
imul
cmp
movsb
imul
mov
add
sub
cmc
xchg
nop
inc
int
dec
jmp
or
data16
mov
dec
cmc
dec
mov
outsl
enter
jnp
data16
jg
fnstsw
jnp
push
xchg
jae
ret
fdivr
push
out
and
fldenv
pushf
inc
outsb
cltd
das
cmpsb
inc
insl
push
scas
fdivrl
std
cmp
jle
cld
das
imul
sub
insl
fiaddl
jp
jo
arpl
push
js
nop
scas
mov
les
sub
mov
ret
outsl
sarb
cld
inc
aam
dec
aaa
decb
ja
cmp
lahf
std
jns
adc
sbb
mov
call
dec
sahf
idivb
sbb
push
stos
add
cmpsb
mov
jb
jno
push
jb
ret
add
sarb
xor
js
pop
push
pop
mov
scas
add
sub
push
push
in
adc
fisubl
mov
push
push
pushf
mov
loope
sti
push
movsl
pop
xlat
movsb
int3
inc
jno
add
add
les
enter
rorl
shlb
out
aas
xor
mov
arpl
pop
pushf
sub
fwait
inc
inc
or
cmpsb
std
adc
pop
jnp
mov
xchg
jge
enter
in
push
push
xchg
inc
jle
cmp
rcll
into
aaa
mov
sub
pop
inc
xchg
dec
push
data16
daa
mov
data16
mov
out
ja
cmp
jg
pop
stos
rcll
popa
or
fwait
mov
add
not
out
sbb
ds
rcll
adc
les
test
mov
fs
mov
nop
mulb
je
push
and
mov
lcall
add
insl
aaa
pop
push
mov
xchg
jecxz
cli
mov
adc
xchg
lcall
sbb
mov
sbb
lods
out
dec
jns
sub
xor
sbbb
enter
rcl
jae
cs
dec
xor
stos
sub
faddl
ret
std
inc
mov
mov
mov
sbb
mov
mov
xor
mov
and
imul
jmp
es
pop
mov
pop
xor
in
and
mov
jo
enter
xor
mov
hlt
pop
cmpsl
adc
add
in
pop
pop
dec
dec
push
imul
nop
xlat
mov
shll
cmp
lret
out
and
xchg
in
or
adc
xor
psubd
or
sub
jg
out
mov
jae
push
inc
dec
stos
pop
aas
push
jnp
shll
sahf
cmc
sbb
push
ljmp
adc
in
xor
xchg
stc
jmp
adc
leave
and
mov
stos
cmp
call
repz
jg
dec
popa
popl
clc
cmp
mov
subb
out
adc
rclb
xor
pop
fcomip
jns
cli
jo,pt
testl
inc
hlt
lret
addr16
lds
push
addl
call
pop
addr16
mov
push
ja
pusha
adc
dec
mov
or
mov
cli
pop
filds
adc
pop
inc
insb
push
ds
inc
sti
mov
mov
xor
jbe
sbb
ja
mov
rol
pop
in
push
push
call
movsl
fcoml
mov
sub
mov
add
add
xlat
add
xlat
add
enter
repz
std
push
push
xchg
xor
mov
inc
inc
fildl
pop
mov
roll
mov
dec
pushf
sbb
nop
aaa
rclb
imul
xchg
add
cmpsb
jmp
pushf
aam
dec
pop
fnstenv
out
pop
xlat
push
cmp
ret
lds
in
out
lods
sbb
xchg
xchg
leave
xchg
test
jns
bound
and
adc
mov
add
cld
mov
daa
mov
aaa
sbbl
cmp
cld
xor
inc
test
mov
aam
mov
ljmp
pushf
insb
sub
mov
mov
scas
bound
and
pop
pushf
sahf
gs
add
cwtl
cmpl
jp
pop
adc
push
push
movsl
jnp
push
lods
cmp
sbb
adc
arpl
pop
sub
addr16
sbb
mov
ljmp
daa
inc
sub
inc
pmaxub
mov
fsubl
sbb
mov
pusha
in
arpl
inc
sarl
pusha
aad
stos
jmp
das
movsl
scas
mov
adc
dec
jl
mov
xchg
or
and
mov
imul
xchg
pop
fwait
mov
or
shll
cltd
test
cmpsb
in
dec
jnp
call
jmp
fcoms
repz
fnstcw
xor
std
push
outsl
cmp
bound
lret
sti
dec
jo
mov
and
mov
add
add
in
push
push
stos
push
push
cmp
int
jnp
outsb
divl
fiadds
gs
pusha
xlat
pop
pop
fs
fisttps
mov
adc
call
std
int3
mov
rorb
test
imul
pop
rolb
mov
addr16
es
adc
jo
mov
sub
ja
inc
popf
imul
mov
cmc
or
into
inc
test
imul
jb
insb
ret
push
jno
push
packuswb
push
add
in
test
cmpsl
pop
mov
or
push
ds
daa
xor
push
adc
inc
cmp
adc
lods
loop
or
subb
stos
inc
es
aaa
repz
inc
outsb
test
mov
push
sbbb
iret
adc
aam
add
shlb
fucomip
inc
adc
jae
xbegin
lock
jp
cmp
loop
fwait
sub
dec
bound
sbb
xchg
in
mov
sbb
xchg
mov
sarl
int
shr
cmc
arpl
testl
outsl
in
mov
add
fwait
xchg
dec
int
in
aad
xor
mov
lahf
mov
fs
pop
stos
mov
imul
popa
jbe
or
stos
adc
dec
mov
mov
andb
int3
daa
adc
in
fiaddl
jle
arpl
add
mov
dec
add
cmpsb
imul
outsl
aam
jmp
cmp
cmp
xchg
bound
mov
loope
cld
addr16
cs
adc
in
gs
test
loop
repz
inc
cmpb
popa
push
outsl
arpl
mov
jle
sbb
dec
push
adc
mov
fisubs
hlt
les
arpl
sub
push
movsb
sbb
cltd
jmp
shll
fdivrl
aad
sbb
jp
mov
mov
jmp
adc
jl
adc
and
cmpl
sbb
rcll
jae
subl
jo
daa
jg
je,pn
shll
pop
lret
fcoml
and
cmp
pop
shll
mov
movsb
test
lret
mov
sbb
sti
sbb
aam
rorb
addr16
mov
add
test
or
cmp
and
js
xchg
jl
outsl
hlt
xorl
cmp
test
mov
push
adc
into
and
aam
add
pop
bound
scas
ljmp
push
lock
insb
addr16
xor
mov
dec
inc
pop
pop
and
jl
es
and
fs
leave
jbe
or
shll
daa
lret
xor
aaa
cs
fsubrp
add
outsl
push
dec
es
test
stos
repz
into
inc
xchg
cli
mov
pop
fwait
pop
lods
cmp
and
pop
test
cmp
xlat
add
jo
testl
mov
pop
pop
pop
cmp
popf
fbld
push
fwait
imul
cmp
addr16
scas
adc
bound
push
and
inc
adc
mov
in
push
xchg
inc
pop
jle
lds
dec
xchg
pop
mov
mov
movsl
xchg
das
shrb
add
rol
outsb
loop
jno
adc
xchg
and
sbb
inc
pushf
fdivs
push
mov
lret
or
fwait
inc
xchg
pushf
pop
inc
sbb
and
inc
out
dec
movsl
sbb
mov
lret
dec
mov
pop
bound
lret
outsb
add
jb
js
mov
xchg
dec
and
sub
cli
imul
repnz
insl
fwait
fwait
icebp
push
adc
fstpt
xchg
lret
xor
leave
jmp
adc
xchg
bound
rcl
pop
pop
xchg
daa
rcll
pop
mov
js
int
insl
lods
mov
jmp
xchg
out
lret
adc
cmp
mov
mov
stos
jp
jns
adc
jns
mov
lea
pop
out
leave
or
xor
push
and
push
or
jge
rclb
cmp
push
mulb
dec
stc
rorb
dec
or
mov
stos
jecxz
mov
sbb
dec
imul
mov
scas
dec
push
jmp
jle
sbb
sbb
imul
dec
shrb
push
fs
xor
roll
sbb
adc
cs
cmp
adc
dec
mov
nop
adc
pop
call
sub
pop
lock
dec
cmp
adc
cs
imul
sbb
mov
lcall
sbb
xchg
mov
scas
imul
cli
mov
push
inc
loopne
cmp
fnstsw
test
pop
inc
jecxz
dec
imul
xlat
jle
lret
clc
sub
dec
sbb
das
les
fdivl
subl
shl
sbb
clc
popf
pop
fdivrl
fisubs
mul
xor
push
xor
add
or
fwait
pop
mov
mov
mov
dec
pop
jne
stos
popf
jae
les
pop
test
cmp
xor
mov
pop
and
push
xchg
das
dec
clc
mov
mov
and
popf
push
lds
mov
inc
or
out
push
daa
xor
and
int
vpsllw
sbb
jnp
jnp
fsubrp
mov
ss
out
addr16
lds
push
in
gs
mov
out
lock
pushl
jnp
cmpsb
imul
std
lcall
sbb
stos
icebp
xor
movsb
fildl
lods
jecxz
jne
lret
cmp
xchg
nop
cmp
push
cmp
cmovl
sub
sbb
lret
jb
out
and
add
sbb
fsubr
neg
and
testb
mov
sub
movsb
dec
inc
dec
daa
inc
stc
sub
lret
insl
outsl
ficoml
repnz
fisttpll
loopne
mov
mov
repz
pusha
cmovo
aaa
xchg
inc
jb
xchg
pop
jecxz
add
cmpsl
movsb
mov
adc
mov
cmp
popf
or
jb
rcrb
nop
sub
sbb
dec
cmpsb
cmc
xchg
xor
push
out
add
mov
push
pop
cmp
push
lret
xchg
sti
and
flds
data16
add
jge
pop
div
mov
loop
or
inc
push
frstor
fs
jmp
in
mov
jno
sub
jle
fisubrl
pop
out
call
adc
nop
lds
aas
pop
mov
or
fnstenv
loop
mov
dec
push
push
pop
sbb
inc
arpl
cltd
movb
dec
jge
xchg
bound
push
cli
add
xor
int
xor
loope
idivl
mov
jge
cmp
addb
push
xchg
pop
test
inc
loopne
int3
jno
insb
sub
in
or
aad
fs
adc
cmp
push
dec
subb
xlat
push
sbb
dec
xchg
out
sbb
shll
mov
adc
test
jbe
les
xchg
sub
pop
xchg
jg
adc
inc
sub
lods
data16
xchg
mov
mov
test
pop
push
xchg
lea
add
out
enter
pop
bound
adc
adc
popa
sbb
jge
fldenv
fmull
ljmp
xor
push
mov
jge
jns
xchg
xlat
shll
arpl
clc
pop
dec
sub
jo
inc
jnp
ret
dec
push
or
cli
incl
ds
jp
test
sub
cmpl
mov
adcl
mov
sbb
cmpsb
and
daa
pop
or
les
lcall
aam
in
or
in
in
mov
test
icebp
or
adc
adcl
rcl
mov
xchg
popf
xchg
pushf
pusha
icebp
pop
add
mov
xchg
push
dec
scas
mov
xor
mov
popf
loopne
inc
jae
push
inc
and
or
jbe
das
dec
mov
and
and
loopne
iret
pop
rcrb
mov
fwait
and
add
jno
adcb
andl
mov
stc
mov
inc
test
addr16
shr
or
sbb
stos
cs
jb
lock
cmp
pop
jl
addb
scas
inc
xchg
cmpsb
ss
movsl
inc
and
imul
cld
andl
push
dec
ss
add
jmp
push
mov
adcb
push
and
jno
cmc
pushf
and
jl
mov
add
lds
push
xchg
inc
or
dec
sub
xor
cmp
testl
mov
sbb
push
fdivs
jecxz
into
cmp
cs
inc
ffree
ljmp
xchg
mov
mov
test
push
dec
mov
sbb
xchg
xlat
movsb
mov
inc
push
insb
rcll
sub
or
ret
pop
pop
addb
add
push
cmp
mov
cmpsb
push
or
sahf
push
shlb
xchg
jg
stos
mov
xor
xlat
sub
cmp
ss
cwtl
mov
adc
sbb
and
inc
dec
scas
ret
hlt
dec
adc
fstpl
cmp
out
lret
fcom
pop
inc
sti
and
pop
fisttps
sbb
ficoms
xchg
push
insb
push
add
roll
dec
mov
push
jge
jnp
ja
mov
mov
mov
jg
xor
aaa
fisubl
out
dec
imul
mov
mov
out
repz
imul
and
mov
test
jb
fistl
stos
cmp
call
and
xchg
push
and
repz
cvttps2pi
mov
bound
dec
adc
test
jbe
lea
fisttps
fists
fsts
push
aaa
inc
inc
in
mov
cmpl
mov
and
xor
inc
pop
pop
inc
leave
jle
xchg
rcrl
and
push
mov
aam
jmp
arpl
mov
nop
rorb
out
test
in
xchg
dec
ret
sub
stc
lahf
mov
mov
mov
scas
dec
and
sub
bound
mov
sub
lret
test
roll
and
pop
inc
xor
daa
dec
scas
mov
fildl
jne
jecxz
push
es
xchg
cmp
adc
pop
int
pop
hlt
test
imul
inc
dec
repnz
xor
subb
stos
jmp
xor
add
push
lret
out
pop
cwtl
jge,pn
and
jbe
std
hlt
xor
addr16
jl
push
lret
xor
call
popa
or
fldl
jbe
nop
fmul
addr16
jne
mov
jbe
popa
gs
pop
fsubrl
dec
rcrl
sub
inc
ja
stc
dec
es
dec
mov
lods
mov
in
call
stos
cli
loopne
inc
pop
outsb
pop
xchg
or
stos
xor
filds
cmpsl
not
mov
push
adc
das
pop
lds
clc
iret
jne
mov
jbe
jb
mov
mov
in
inc
cmpsb
or
sub
repnz
shlb
call
adc
jle
mov
xchg
mov
dec
mov
adc
fnsave
inc
cmp
push
inc
or
inc
aad
cmpsl
test
pop
xchg
fisubs
mov
dec
mov
sub
pop
outsb
stc
shr
and
rcrb
mov
fnstsw
test
xor
pop
inc
orl
jge
xor
in
out
pop
push
dec
pop
rcll
es
sbb
xor
fsts
inc
xchg
mov
rcll
sub
xchg
lods
idivl
mov
fcoml
adc
lea
xchg
jg
mov
inc
stos
sbb
jmp
fmull
lret
and
dec
pushw
adc
sbb
ja
inc
scas
cmp
push
push
pusha
ja
lods
mov
imul
push
push
push
dec
sbb
or
das
add
lds
and
add
aam
into
insl
pop
jae
mov
push
stc
mov
xchg
out
lods
rorb
ja
aad
xchg
adc
fs
sbb
pop
push
lods
loope
pop
ljmp
push
cmp
dec
mov
ljmp
cld
sbb
mov
in
mov
fcomip
mov
add
popa
adc
inc
fmul
orb
mov
jge
push
cld
cld
jbe
mov
push
mov
and
mov
fsubs
daa
pop
push
ja
cmp
mov
xchg
push
dec
pop
inc
inc
add
pop
add
test
sarl
imul
imul
adc
add
arpl
pop
mov
push
pop
popa
test
xor
or
fnstcw
mov
xchg
dec
mov
insb
add
lods
and
daa
mov
or
sub
sbb
cmc
movsl
ret
aam
or
jne
jae
movsb
or
cmp
clc
in
iret
xor
or
inc
icebp
daa
loopne
dec
ss
and
test
lahf
cmp
ds
rcrl
mov
mov
xor
pop
xchg
adc
aaa
mov
mov
ret
imul
xchg
ja
jle
rcrl
stos
pop
fsubrs
mov
or
add
xchg
mov
add
pop
sub
dec
xlat
push
jmp
shll
xor
jbe
xor
pop
int
out
jmpw
out
bnd
in
insb
cwtl
aas
add
dec
bound
inc
fsubrs
jo
mov
push
out
test
lret
subb
insl
dec
pop
add
mov
mov
push
stos
pop
popf
sub
pop
add
or
bound
dec
inc
mov
outsb
mov
sti
int
fmul
mov
into
push
jo
lret
in
jne
lahf
inc
sbb
dec
insb
repz
cmp
jbe
bound
arpl
mov
mov
insl
jno
jl,pt
dec
or
cmp
sbb
stc
and
dec
stc
dec
jle
outsl
cmc
ljmp
filds
xor
add
add
pminsw
adc
mov
in
fldt
adc
int3
mov
icebp
mov
outsb
mov
xor
fstp
xchg
cmp
es
push
dec
mov
jg
dec
mov
repnz
mov
fnsave
lds
js
loope
iret
push
adc
addr16
hlt
inc
pop
jg
mov
sub
sub
inc
add
push
adcb
jo
sub
xchg
movsb
test
sahf
inc
jge
imul
mov
idiv
xor
pop
xchg
lods
movsb
jge
addr16
outsl
or
aaa
xchg
jmp
add
out
dec
lods
hlt
in
push
popa
pop
and
pop
fcompl
adc
inc
sbb
fs
movsl
pop
and
and
push
sahf
popa
or
xor
arpl
push
sbb
push
lahf
out
cwtl
inc
adc
cmp
ret
adc
gs
cld
leave
xchg
sub
lods
sub
push
jmp
aad
into
cmp
test
popf
ret
jb
push
xor
cmp
int3
xor
sbb
adc
dec
adc
mov
dec
adc
add
or
push
rorb
stos
pop
xchg
fcmovu
cmp
out
repz
js
fstpt
mov
ljmp
or
js
test
daa
pusha
mov
cmp
out
dec
mov
or
or
sbb
add
gs
push
pop
xor
fidivl
xchg
call
mov
and
ljmp
inc
add
ret
add
pusha
gs
leave
and
shrl
lret
sub
into
inc
sbb
popf
aam
sbb
xor
pop
xchg
fildl
mov
scas
push
cltd
stc
movsb
adc
mov
lahf
lret
jmp
and
insb
jo
adcl
in
rcrb
ret
aad
jg
pop
mov
hlt
inc
inc
jno
mov
cmp
fmull
jnp
mulb
loope
into
lahf
sti
inc
ficoms
pop
mov
mov
add
loope
in
out
sub
push
cmp
adc
mov
add
rcll
int
lahf
pop
sub
jl
push
gs
ror
pop
sub
in
dec
mov
adc
mov
jbe
mov
ret
xchg
gs
fwait
and
jb
sbb
popa
ja
divb
fstl
cltd
lock
shr
jb
mov
popa
jl
int
inc
fisubrl
std
popf
cmp
rcll
cmpsb
sbb
jbe
negl
inc
jo
pop
mov
push
or
push
aaa
push
divl
lock
enter
push
int3
xchg
test
sbb
push
pop
in
jbe
jmp
fidivl
popa
ret
dec
mov
movsb
lahf
and
inc
cmp
cmc
mov
jnp
popf
ss
pop
test
rclb
divb
or
jno
outsb
and
incl
dec
out
lea
nop
fwait
xor
xorb
jbe
mov
sbb
addl
cmpb
in
mov
divl
pushl
lahf
mov
stos
pushf
sbb
lds
stos
mov
xor
movsl
pop
in
fnstsw
push
add
add
call
xchg
cltd
popf
add
rcll
sub
mov
int3
adc
mov
mov
mov
cmpsb
xor
imul
ret
outsl
sub
push
mov
mov
cmp
mov
mov
dec
and
out
and
test
lea
pop
adc
fnsave
inc
ret
in
adc
cltd
or
shll
sub
fwait
push
aad
ds
and
hlt
cmp
add
ret
movsl
repz
adc
push
adcl
sub
shrl
stc
jecxz
jbe
xchg
push
insl
es
add
ret
popa
cmpsl
or
cmpb
push
stos
test
ja
adc
test
lcall
call
jnp
sahf
pop
fdivs
out
mov
in
imull
or
in
cmp
out
call
dec
mov
and
mov
ret
dec
adc
dec
pop
pop
inc
push
dec
data16
mov
sub
popl
or
and
out
popa
fdivrl
push
ret
or
fisubrl
jg
pop
aad
jae
xchg
nop
mov
pop
fxch
pop
scas
push
ret
add
leave
enter
test
repz
insb
scas
mov
pushf
mov
or
inc
outsl
lods
loop
aaa
sbb
ja
leave
pop
xlat
mov
lea
cld
in
adc
mov
mov
jle
call
shll
dec
pop
int
fsubrl
xor
xchg
pop
sub
push
pop
aas
in
xchg
sarl
xchg
cltd
leave
sbb
lea
in
shll
or
push
out
pop
std
in
push
aas
lock
aaa
pop
jns
adc
movsl
mov
push
mov
xchg
outsb
daa
insl
dec
imul
pop
xchg
cmc
sub
jl
cmpsl
cmp
sbb
mov
enter
stc
sahf
movsb
aaa
pusha
mov
pop
push
dec
pop
or
dec
shlb
iret
in
jno
enter
adc
ret
mov
cmpsl
js
insl
test
ljmp
fcompl
stos
xchg
aad
lods
add
mov
inc
outsb
or
cltd
aas
pop
cmpsl
jp
outsb
sub
lods
test
outsl
ss
jecxz
inc
push
sub
ret
je
daa
lcall
lods
mov
inc
xor
jne
out
loopne
push
add
mov
xor
fiadds
jecxz
push
xchg
arpl
loopne
sub
stc
mov
outsb
xchg
rclb
outsb
es
xor
hlt
ret
add
pop
mov
test
ss
jnp
outsb
sti
test
repz
and
and
cwtl
sub
addl
pop
mov
push
dec
xor
or
in
sti
xor
outsb
fabs
rol
int3
imul
and
add
fstp
dec
in
stc
out
aaa
inc
lcall
mov
mov
repz
mov
inc
dec
jb
insb
inc
mov
call
les
pop
jmp
or
sub
pop
mov
lods
xor
ja
movsb
out
push
sbbb
add
cmpsb
xchg
pop
cmp
sub
in
push
adc
repnz
sbb
add
popa
addl
js
stos
lods
bound
and
adc
adc
xchg
inc
std
in
mov
xchg
jnp
pusha
fldt
push
add
in
dec
xor
mov
neg
dec
sub
in
cmp
and
xor
xchg
inc
mov
sub
in
std
scas
sub
in
sub
mov
int3
mov
stos
test
dec
pop
sub
mov
sbb
mov
inc
pusha
sbb
push
mov
pop
dec
idivb
pusha
sub
pand
inc
enter
dec
fisttpll
lret
jbe
push
das
and
mov
cmp
sbb
data16
mov
pshufw
mov
mov
sbbb
stos
mov
mov
dec
orl
lahf
or
jns
xchg
push
leave
cmpsl
or
aaa
pop
rclb
int3
bound
aaa
cmpsb
or
mov
lods
into
test
and
inc
jge
and
outsb
adc
mov
das
int3
rcrl
jne
pop
mov
xorb
loop
dec
dec
mov
jp
out
sarl
push
mov
das
push
jecxz
xchg
nop
push
repnz
mov
jo
cmp
adc
dec
ret
es
push
fwait
outsb
jle
js
arpl
inc
rolb
add
xor
shrb
or
dec
cmp
fdiv
xor
je
jae
jno
jae
mov
jbe
sahf
dec
cmc
stos
ljmp
mov
push
pop
hlt
push
mov
rcr
mov
std
jge
xor
in
bound
notb
or
sub
push
push
mov
inc
loopne
ret
dec
insb
inc
push
cmpsb
ss
pop
mov
fnstenv
push
out
in
int3
cltd
lret
inc
fisttps
push
addr16
xchg
pusha
sub
sbb
pop
ja
push
outsb
out
mov
pop
dec
fidivrs
adc
lods
xchg
xchg
sub
jcxz
mov
jg
mov
dec
jl
cli
out
sbb
sbb
adc
in
movsl
fisttps
push
popa
movsl
fists
pop
pop
cmp
fdivrs
mov
popf
aad
popa
mov
cs
iret
pop
test
mov
movsl
xorb
sub
inc
mov
mov
imul
je
or
jmp
lea
movsl
popf
sub
xchg
jge
rcrb
cmp
dec
or
psubd
dec
mov
cmp
in
rorb
daa
push
iret
mov
aam
jg
sbb
dec
mov
mov
and
xchg
jbe
movsb
out
sbb
leave
mov
stos
lcall
movsl
push
lock
scas
push
mov
xchg
lahf
out
loop
lods
and
mov
and
iret
cwtl
mov
inc
ss
jecxz
mov
insl
add
stos
stos
fisubs
rclb
arpl
sbb
mov
jmp
push
xor
pop
out
and
and
xorl
enter
sbb
mov
dec
cs
mov
test
sub
sahf
les
les
test
into
fsubrp
std
add
xlat
xchg
mov
inc
xchg
cmpb
cmpl
popa
test
out
lahf
push
mov
mov
mov
push
add
leave
inc
add
adc
es
outsb
add
sti
adc
cmp
adc
lcall
arpl
sub
lea
mov
jae
dec
cwtl
sbb
ds
pop
fs
mov
loopne
das
xor
test
stos
jnp
pop
pop
adc
inc
xlat
sbb
xor
hlt
ret
jo
pop
cmp
adc
ljmp
cld
push
add
jbe
xchg
mov
jg
rcrl
inc
arpl
rorb
outsb
jbe
xchg
int
add
shll
decl
push
nop
xor
pop
adc
les
imul
push
popf
mov
inc
ret
out
sbb
lds
decl
cmp
cs
fwait
lret
jecxz
push
popa
mov
enter
xchg
xchg
and
jp
popa
or
dec
pop
cmpsl
xchg
push
aam
inc
cmp
ds
jns
cld
lods
pop
mov
das
inc
aaa
cmpb
shlb
lods
xor
iret
into
loope
fdivr
or
std
dec
sbb
xchg
mov
stos
pop
lret
daa
mov
jge
xor
sub
jne
test
or
xor
movsl
or
je
sbb
loopne
jle
adc
mov
push
xor
nop
xchg
or
jle
pop
mov
ret
adc
jecxz
cltd
je
sub
call
xor
adc
xchg
xor
xor
and
cmp
xlat
jge
icebp
jno
mov
movsl
rol
mov
rorb
xor
idivl
push
dec
lock
mov
jg
or
mov
jmp
sahf
jle
sbb
lahf
in
popf
sbb
daa
jbe
clc
imul
les
push
xor
ret
fwait
xor
push
inc
shl
push
or
mov
in
pop
push
stc
push
adc
xchg
sbb
aad
mov
inc
mov
pop
test
std
adc
sub
and
testl
pop
mov
push
inc
addb
or
or
fisubrs
or
pop
outsb
out
sub
jmp
adc
das
in
xchg
addl
sbb
xchg
into
in
inc
mov
fildll
xchg
jp
out
mov
pop
mov
repz
jl
in
mov
push
push
and
sbb
mov
idivl
add
rcl
test
push
ret
popa
fisubl
sub
or
jle
add
pop
jmp
or
cwtl
adc
in
ljmp
push
fmul
xor
test
and
push
fsts
pushf
mov
addr16
cltd
xchg
jns
andl
clc
dec
xchg
mov
and
cmpsl
imul
or
or
sub
jge
xchg
int3
movsb
imul
stos
and
push
addr16
inc
in
fs
lods
je
xor
sub
loopne
mov
sti
sub
rorl
inc
add
cmp
pop
xchg
push
pop
out
sbb
test
fildll
notl
and
adcb
in
sbb
cli
sar
pop
mov
dec
jecxz
fdivl
xor
mov
jno
insl
add
rclb
dec
adcb
add
sub
in
outsl
repnz
iret
pop
jle
mov
fstpt
int3
mov
loopne
mov
cmc
pop
push
ja
mov
or
jmp
cmpsb
movsb
adc
or
sbb
lahf
dec
jecxz
adc
xchg
and
cli
gs
out
mov
jmp
aas
clc
push
rol
ja
cmp
sub
and
adc
and
xchg
dec
arpl
dec
insb
cld
mov
out
pusha
cltd
or
ret
sbb
sub
aam
cli
xor
jb
rcr
into
jb
cli
xorb
jmp
add
or
fldl
jne
loop
adc
bound
out
xor
and
xchg
and
pop
shll
xor
sbb
into
repz
imul
ret
mov
jnp
icebp
pushf
out
fadds
pop
dec
repnz
sub
fs
mov
out
push
xorb
data16
rolb
push
nop
rcl
aas
mov
loopne
inc
mov
divl
arpl
and
dec
inc
aam
rcll
dec
stos
roll
lret
nop
push
ret
cltd
cmc
repnz
jns
mov
and
test
inc
call
xor
xchg
pop
fistps
aam
add
xchg
ljmp
push
adc
jno
adc
inc
loopne
cmp
lods
das
out
mov
test
push
mov
xor
xchg
lret
mov
lret
sub
cmp
out
into
insb
jae
test
fs
mov
cmp
daa
and
pop
adc
mov
add
dec
cltd
stos
xchg
pop
dec
movsb
xor
cmpsl
add
outsl
cmp
addr16
pop
mov
dec
sbb
int
cmp
insl
inc
clc
das
or
lods
cltd
jmp
or
aaa
das
xchg
js
lcall
jo
icebp
sbb
inc
lods
and
push
xchg
push
shll
ljmp
mov
test
mov
mov
add
jmp
repz
add
fadd
push
xchg
jbe
in
lret
stc
cmp
mov
test
les
int
test
lret
sub
out
out
addr16
outsl
aas
inc
sub
push
lcall
mov
or
mov
xchg
adc
pop
repnz
rorl
flds
popf
ret
ljmp
sbb
and
fists
dec
mov
shlb
lret
mov
xor
cmpsb
mov
arpl
enter
in
add
jne
in
fisttpl
ds
sbb
in
adc
mov
push
stos
fistpl
and
mov
adc
lods
int
sahf
push
mov
and
push
leave
xchg
lds
out
aad
mov
fmull
jae
inc
sbb
push
out
mov
mov
mov
femms
ffree
shl
push
andl
push
rcr
cmp
adc
movsl
mov
jae
test
mov
imul
mov
cmp
std
ss
mov
xchg
test
xchg
sub
mov
mov
or
push
pop
mov
imul
stos
cmp
dec
cmp
cmp
push
js
dec
mov
cmp
in
jle
jne
mov
xchg
jmpw
in
dec
das
test
std
sub
sbb
add
out
mov
test
incb
iret
loope
arpl
cmc
push
pop
scas
push
inc
test
cwtl
add
rolb
mov
fstps
sbb
ud0
out
addr16
fstl
dec
adcb
push
jmp
xor
dec
lcall
adc
add
push
xchg
aaa
popf
fldl
sub
push
addr16
cmp
je
sub
jae
jge
cli
scas
xchg
clc
and
lcall
bound
pop
lods
inc
cmp
scas
popf
fldt
ljmp
cmpsb
and
sbb
jns
jb
rorb
inc
sub
or
sbb
push
cmc
pop
iret
inc
pushf
or
pop
leave
dec
mov
loop
sub
in
xlat
std
cmpsl
push
ja
mov
cwtl
xchg
jae
decb
mulb
dec
mov
xchg
out
stos
lret
add
outsl
or
xchg
fmul
sti
fsubp
out
dec
add
and
jb
jg
sbb
je
test
imul
inc
pop
repz
pushf
or
dec
subb
and
jl
mov
and
push
dec
cmp
mov
andb
imul
test
inc
stos
inc
xchg
or
push
imul
xlat
insb
loopnew,pt
jae
push
xchg
push
ss
mov
fldt
out
aad
loopne
and
lcall
xchg
xchg
bound
mov
stos
aas
imul
mov
add
xor
movaps
add
gs
sub
xlat
mov
and
in
outsb
and
cmp
scas
lcall
lock
outsb
cmp
popa
aad
iret
sti
shrl
and
imul
leave
in
std
pop
cmpsl
xchg
push
mov
xchg
push
sbb
and
pop
stos
in
aas
aam
cli
pop
mov
repnz
fstl
add
add
cmp
stos
shll
or
mov
dec
ja
inc
stos
ljmp
mov
cmp
aas
adc
xchg
push
sbb
rcll
popa
jnp
repnz
xor
int
leave
aam
mov
or
or
clc
movb
or
lcall
push
iret
lods
or
pop
out
stc
sbb
aam
sub
xor
test
stos
push
scas
cmp
jecxz
lods
loop
sbb
ror
cltd
adc
sub
inc
sbb
cmc
mov
cmpsl
add
outsb
aad
test
fwait
mov
pop
call
fs
mov
mov
add
test
jb
dec
cmpsl
and
mov
cmp
mov
sti
and
aaa
dec
dec
sbb
fucom
push
push
jp
adc
test
cmpsl
add
cs
cli
scas
mov
outsb
aaa
mov
mov
inc
inc
push
xchg
gs
dec
sbbb
pop
sub
pop
iret
mov
imul
leave
sub
xorb
mov
cli
mov
ljmp
xchg
xchg
mov
sbb
icebp
imul
push
repz
daa
dec
ror
add
aam
push
mov
bound
leave
mov
enter
mov
arpl
sti
inc
sbb
mov
addr16
add
lea
fdiv
mov
dec
mov
push
xorl
mov
loope
imul
hlt
imul
out
mov
xor
push
test
add
cmpsb
mov
inc
adc
out
push
add
les
in
jns
mov
mov
push
and
in
fsubrl
lods
int3
jl
das
dec
scas
add
mov
jg
dec
insl
and
shlb
lds
in
aaa
icebp
and
dec
mov
sbb
fsubl
or
std
fmul
mov
sub
inc
jg
dec
mov
sbb
loope
xchg
cli
mov
insb
push
mov
popa
roll
mov
mov
not
adc
mov
mov
mov
out
and
mov
shll
loop
mov
rcrb
outsb
mov
popf
test
dec
int
inc
and
xchg
push
test
jb
and
jns
inc
pop
loope
movsb
iret
push
fidivl
jnp
ja
cmc
add
cwtl
push
repz
xor
les
movsb
leave
or
je
popa
mov
loop
cmp
sti
cmp
std
push
jo
cmp
mov
ret
repz
pop
push
or
sub
and
stc
clc
fiadds
inc
ret
outsb
and
iret
aam
jo
pushf
cltd
sbb
xor
nop
stos
pop
and
or
aad
and
push
gs
add
push
xlat
push
jge
cmpsl
int3
jb
and
jns
pop
mov
bound
pusha
enter
mov
enter
fsubrp
ret
and
cwtl
addr16
jecxz
and
jge
pop
add
inc
clc
adc
sbbl
int3
push
hlt
fmuls
xor
repnz
sbb
jge
xor
add
mov
scas
mov
add
in
jno
outsl
fnstcw
insb
mov
jnp
mov
cld
push
dec
or
push
jmp
xor
sbb
iret
mov
push
popf
mov
pop
leave
clc
pop
add
gs
push
sbb
sub
lcall
aam
dec
fidivs
ja
lea
push
xlat
orb
mov
shrl
jmp
and
cmp
sbb
inc
pop
xchg
jp
mov
lea
adc
daa
dec
pop
aad
lahf
mov
xor
mov
jb
scas
inc
in
aad
jno
into
and
out
mov
xchg
rcll
cmc
jmp
mov
pusha
xor
add
mov
sahf
push
and
mulb
push
mov
sbb
xchg
enter
pop
int
pop
inc
or
pop
sbb
sub
cs
xchg
mov
jge
dec
ljmp
xchg
inc
push
push
xchg
and
and
sbb
data16
bound
lcall
mov
inc
enter
lea
ret
js
rcll
push
mov
out
dec
loopne
fs
in
sub
pusha
cld
and
jne
pop
pop
or
inc
shll
shll
in
sub
dec
dec
je
pop
xchg
pushf
inc
imul
mov
xchg
mov
movsb
rcll
push
pop
aaa
pop
sbb
icebp
test
fisubrl
mov
in
cmp
xchg
or
mov
mov
rcrl
notb
rcrl
xchg
push
mov
xchg
adc
xchg
into
out
and
out
xchg
push
movsl
ret
inc
mov
lahf
pop
test
roll
pushf
shrb
leave
mov
lret
or
and
mov
sbb
and
and
or
cmpsb
fstl
mov
cmpsl
fildll
jle
mov
nop
pop
call
push
or
xchg
cmpsl
xchg
sar
loopne
out
dec
mov
repz
lods
mov
adc
fnstcw
ss
cmp
adc
push
push
lea
rcrb
xchg
add
les
add
sbb
xchg
loope
adc
mov
add
shrl
inc
mov
cwtl
or
pop
jb
rolb
mov
and
fidivs
jno
call
fcompl
or
jge
ficoml
flds
rolb
faddl
mov
mov
in
loop
and
mov
repnz
xchg
mov
cld
lret
sbb
xchg
test
xor
testl
or
adc
rclb
pop
jne
adc
loopne
cltd
lcall
lds
rcr
mov
cmp
outsb
cmp
jmp
std
cld
or
xor
adc
push
pop
les
jecxz
dec
xchg
push
sbb
ja
or
cltd
cmc
mov
pop
cwtl
sahf
rcll
cwtl
call
sub
test
or
push
les
roll
push
aam
xchg
push
test
cmpsb
xchg
clc
pop
sbb
dec
das
push
jge
addr16
iret
fbld
shrl
ret
mov
jns
ret
fcoms
fldt
mov
out
mov
adc
jnp
das
pop
xor
aas
xchg
repz
shr
xchg
mov
and
xor
jbe
jne
cltd
push
sub
popf
inc
add
cmp
jns
or
cmp
sub
subl
mov
sti
push
mov
push
push
lret
fdivs
xchg
sub
test
pop
adc
sub
icebp
ror
call
inc
in
mov
lahf
jecxz
ss
mulb
stos
pop
into
pop
push
cmp
fisubrs
push
sub
sbbl
pop
adc
sub
push
jge
jne
das
dec
int
or
and
jge,pt
jl
cwtl
int3
scas
pop
ret
push
cmp
jge
mov
loopne
xchg
sbb
xchg
push
push
jo
inc
out
mov
xor
sub
notl
mov
and
lods
pop
fmull
push
dec
adc
iret
or
cmp
mov
mov
lods
sbb
nop
aaa
xor
adc
in
icebp
mov
popa
mov
sti
loope
jnp
adc
mov
rorb
in
into
in
scas
movb
pop
adc
negl
out
mov
popa
mov
mov
or
scas
filds
hlt
cwtl
stos
or
divl
xor
out
sbb
add
cmp
sti
inc
lods
aad
test
add
xor
cmp
xor
repz
js
arpl
hlt
mov
or
jne
je
inc
sahf
inc
inc
xchg
jbe
adc
aam
bound
jle
arpl
xchg
cs
daa
sub
mov
rol
or
jle
pop
imul
icebp
or
je
insl
mov
push
xor
pop
pop
into
add
mov
repnz
lods
xchg
mov
jno
scas
xor
gs
out
jmp
push
hlt
imul
mov
inc
cli
imulb
xchg
mov
inc
dec
lds
faddl
popf
jns
pop
mov
jg
int
mov
fimuls
mov
push
mov
repnz
mov
mov
dec
push
add
aam
inc
divb
movsl
sub
gs
rcll
xchg
leave
je
sarb
push
and
jmp
movsb
inc
jb
jno
xchg
jmp
adc
jecxz
fwait
out
loopne
ret
jne
lods
out
repz
or
fldl
mov
mov
lea
xchg
jo
call
jg
data16
jmp
in
ficompl
fimuls
sub
fisubs
loopne
and
jae
mov
push
ja
fisttpll
mov
int
jg
icebp
pop
stos
cmc
int3
mov
loope
xchg
xchg
push
inc
and
mov
cs
pusha
out
dec
insb
xchg
ja
mov
rcll
mov
lock
push
or
push
dec
daa
inc
inc
jmp
dec
jae
cltd
popa
dec
dec
mov
ss
sbb
jno
repnz
pop
out
cmp
cmc
push
scas
mov
es
xchg
lcall
int3
call
mov
add
in
cmp
push
xchg
ljmp
mov
stc
push
push
push
jge
mull
test
push
std
fdivrl
xor
mov
into
hlt
and
inc
xchg
mov
sahf
fisttps
sub
sub
inc
movsl
push
push
imul
fistpll
shl
sbb
or
dec
xchg
fwait
push
or
add
pop
leave
inc
test
je
mov
clc
jp
sub
and
mov
mov
je
rol
push
rclb
jge
outsl
jecxz
cmp
sub
pop
mov
mov
xchg
add
lret
jae
outsl
sbb
stc
cli
cmpb
push
out
lret
xchg
pop
lods
pushf
dec
jae
sbb
fildl
xor
sti
add
jns
movsb
inc
fiadds
and
sub
sarl
or
leave
xlat
mov
or
mov
jl
imull
pop
add
mov
jp
push
push
cmp
sub
int
test
cmp
sbbb
xrelease
mov
icebp
cmp
dec
sbb
sarb
sbb
dec
cltd
rorl
arpl
popa
sbb
adc
mov
or
cwtl
inc
and
sarl
aaa
into
push
into
sub
movsb
repz
out
cmp
add
dec
inc
and
mov
repnz
mov
sub
and
sarl
adc
out
mov
xor
xchg
mov
rcl
jno
inc
mov
add
jne
pop
lahf
inc
push
jecxz
stos
jbe
enter
or
pop
xor
mov
in
mov
fsub
das
pop
daa
mov
mov
hlt
mov
and
idivl
daa
scas
stos
push
inc
and
testl
ror
pop
xchg
sbb
cmp
pop
xchg
fiaddl
fstps
mov
stos
call
in
es
add
mov
or
jbe
jbe
hlt
and
xchg
sbb
popf
icebp
sub
mov
jnp
addl
test
cmp
jne
jb
add
aas
sub
out
sbbb
mov
and
dec
das
sti
loop
mov
leave
fwait
gs
dec
cwtl
mov
mov
cs
push
repnz
add
pop
test
insb
add
movsl
jae
jns
or
imul
addr16
sahf
pop
pop
or
call
mov
push
push
inc
aam
push
or
mov
cld
xor
test
das
adc
adc
add
es
test
cmc
add
and
pop
cmpl
jp
xchg
dec
xor
dec
pop
sahf
cmp
and
mov
rclb
dec
cmp
out
add
adc
pusha
test
xor
push
inc
adc
push
stc
outsl
stc
dec
cs
mov
adcl
mov
jmp
or
data16
add
inc
lahf
xchg
in
pop
cli
fldt
icebp
mov
jmp
or
inc
cmp
orb
pop
mov
cmp
out
sbb
cmp
mov
les
gs
xchg
sarl
pop
pusha
mov
popf
inc
add
inc
pop
jle
lcall
sub
pop
jns
dec
push
imul
subl
sbb
push
or
and
jo
stos
lods
cld
sub
sbbb
adc
fucomp
jmp
test
outsl
or
and
and
push
jle
out
sub
and
test
mov
xor
cmp
pop
int
les
fidivs
rcl
xor
xchg
add
mov
test
adc
ja
test
dec
add
mov
xchg
cmp
icebp
in
add
mov
ljmp
mov
sbb
imul
mov
and
loop
test
jmp
arpl
lret
cmpb
into
nop
mov
test
inc
icebp
repz
leave
mov
push
pop
cli
outsb
mov
jle
jecxz
cld
add
jecxz
ret
stc
add
adc
js
imul
or
jle
inc
pop
mov
mov
mov
cli
add
daa
iret
dec
adc
repz
sti
out
and
lods
xlat
add
in
add
fisubrs
lds
lret
inc
ja
in
adc
jnp
daa
shrl
pop
test
pop
hlt
movsl
push
and
sbb
inc
out
test
xorb
mov
pop
test
mov
xchg
loopne
nop
adc
xchg
pop
loop
shlb
xchg
cmpsb
test
repz
or
mov
mov
dec
fs
insl
cpuid
lret
out
roll
enter
popf
daa
lds
pop
pop
xchg
push
mov
sbb
in
push
es
std
pop
ja
cwtl
push
cmp
or
mov
adc
addb
mov
or
mov
bndstx
or
cld
sarl
push
pop
pop
jbe
in
sub
into
push
add
jbe
movsb
gs
jp
mov
fisubrl
in
or
mov
cmp
in
mov
imul
cwtl
add
cld
testb
sub
xor
inc
pop
in
jbe
cmc
mov
int
push
or
mov
clc
push
xlat
fsubl
cli
cli
mov
dec
xchg
pop
pop
cmp
popa
cli
test
mov
shlb
ret
mov
sahf
mov
or
push
leave
add
mov
mov
xor
xchg
nop
aad
stos
push
xor
xor
and
nop
cmp
jae,pt
or
das
sub
mov
int
out
fdivrs
mov
lret
xchg
cs
add
adc
pop
inc
sbb
nop
xchg
insb
xchg
shll
ss
dec
sti
xchg
sarl
loop
xlat
dec
inc
mov
std
sar
divl
cmp
pop
sti
sarl
popf
ss
push
mov
rolb
repnz
ljmp
jp
dec
push
aaa
sbb
pop
mov
lcall
scas
jp
roll
repnz
mov
add
sbb
dec
and
loop
add
push
loopne
jmp
into
ljmp
rcll
js
cmpsl
push
jne
scas
aad
in
pop
imul
push
pop
les
xchg
movsb
or
push
je
dec
rclb
inc
movsb
xor
scas
in
pop
xchg
or
sbb
add
movsb
adc
push
mul
repz
lods
jae
or
cld
andb
jb
sub
ds
lret
test
into
inc
jmp
and
mov
mov
dec
cwtl
loop
mov
mov
or
dec
loope
sbb
adc
test
push
mov
xor
pop
scas
fs
popa
cmpsl
push
and
dec
aam
dec
insl
iret
adc
mov
xchg
std
outsb
inc
imul
out
test
sbb
loop
les
in
or
jne
adc
mov
sub
sbb
jbe
push
dec
mov
fcomps
daa
mov
push
pusha
add
xor
es
stc
or
jmp
sbb
cmp
pop
jbe
mov
dec
sti
aad
dec
sahf
and
ffreep
jae
int3
lret
sub
insb
inc
test
loope
sub
push
fs
jbe
xor
dec
add
cmp
addr16
jp
lcall
in
and
inc
inc
repz
jae
movsb
sub
xchg
lds
int
out
fs
mull
dec
lods
popf
mov
adc
inc
test
and
sub
jecxz
mov
call
push
xor
mov
lods
or
notl
push
jb
hlt
rolb
lcall
pop
mov
cli
out
push
addr16
inc
push
mov
or
dec
mov
pop
cwtl
shlb
jbe
lret
inc
idivb
out
mov
icebp
inc
loopne
outsl
mov
ja
xor
ror
and
arpl
jmp
or
mov
xorb
cmp
cli
ret
rcl
jmp
sbb
rcr
enter
dec
and
pop
aad
jnp
jb
xchg
jl
inc
repz
mov
add
xchg
clc
mov
inc
pop
in
mov
shlb
fwait
lret
rcll
add
imul
cmp
mov
mov
dec
pop
push
fwait
hlt
jg
pop
mov
inc
movsl
inc
or
ja
push
jg
xchg
xchg
push
cmpsb
lods
sbb
out
cltd
sbb
pop
cmp
dec
cmc
ficoms
jnp
push
je
int3
xor
call
call
mov
jle
imull
xor
or
clc
cmp
test
sbb
add
or
push
jmp
push
shll
jne
scas
in
mov
adc
rorl
test
pusha
jge
pop
inc
and
cmove
iret
jg
xor
jge
out
jmp
mov
pop
sub
mov
sbb
push
add
ficoml
pop
cmp
cwtl
jns
and
or
ja
or
mov
outsb
xorl
dec
push
xchg
pop
sub
jmp
ret
add
xor
cwtl
adc
jbe
mov
push
inc
test
push
jns
test
xchg
pop
push
dec
pushf
lock
bound
pushf
lock
xor
pushl
lds
notl
lods
inc
sub
mov
stos
adc
inc
cmp
lret
loope
sub
add
or
cwtl
jne
mov
enter
pop
cmpsb
cli
inc
push
mov
dec
out
jbe
lods
mov
cltd
std
xor
push
mov
aas
mov
or
inc
ss
jge
inc
mov
and
dec
fsubrl
sub
in
jmp
mov
cmp
mov
es
jg
movsb
es
mov
out
jp
mov
jb
sarl
lret
mov
dec
adc
loop
xchg
sub
cmpsl
stos
mov
and
jp
ret
cltd
arpl
arpl
loope
push
je
int
mov
out
mov
ja
adc
dec
sub
clc
pushf
adc
push
cmpsb
jl
sti
imul
mov
push
mov
lods
movsl
test
mov
in
scas
pop
jge
cltd
xor
inc
rorb
push
jge
push
in
int3
pop
pop
leave
ret
push
cwtl
mov
sbb
lcall
movaps
xor
sbb
add
outsb
popf
xchg
sarb
ret
jl
scas
pop
pop
lods
xchg
mov
jg
in
inc
cmp
push
adc
adc
fistpl
pop
sbb
jl
int3
xchg
dec
enter
or
cmpsb
call
rorb
leave
faddp
inc
lret
icebp
mov
inc
movsb
xchg
rcrb
pop
outsl
inc
pop
jle
add
inc
ror
sbb
dec
in
xchg
or
or
loopne
scas
stos
jno
mov
xor
dec
sbb
mov
xchg
fnstcw
call
addb
lds
test
in
lret
and
adc
jg
and
xlat
fmull
xchg
fucomi
cmp
push
and
and
pop
push
mov
mov
push
lahf
cli
mov
cmc
outsl
xchg
fucomip
out
sbb
pop
mov
or
stos
cs
jmp
or
sbb
gs
xlat
jnp
mov
push
mov
les
popf
imul
dec
imul
mov
hlt
out
sbb
or
shrb
lea
aam
push
pop
xchg
mov
xchg
sbb
or
out
mov
mov
add
xchg
rcll
xchg
jl
aad
arpl
out
rcl
out
mov
and
movsb
jno
xor
push
or
ret
push
das
cld
cli
mov
inc
push
call
insl
add
repz
lret
test
mov
std
into
in
cmpsl
js
mov
and
imul
call
pop
sub
sbb
in
push
cmp
rcr
push
fadd
pop
mov
mov
dec
shlb
xchg
hlt
jge
and
add
xchg
scas
out
std
xchg
push
sti
cmp
call
sbb
insl
rcr
or
sbb
adc
daa
cmpl
sub
lahf
stos
sbb
add
adc
scas
es
iret
or
mov
push
pop
fimull
mov
jmp
cmp
gs
adc
bound
mov
add
inc
add
in
push
cmp
idivl
sub
cmp
mov
mov
xchg
out
pop
push
clc
std
out
jnp
cmp
lods
stos
push
loope
sbb
push
cli
prefetch
ret
popa
mov
popa
lea
test
mov
sub
jmp
std
stos
cmpsl
je
jb
add
inc
pop
mov
daa
pmulhuw
and
cli
mov
or
xor
xor
mov
inc
xchg
xor
xchg
jg
mov
mov
jge
sti
fcompl
and
shlb
pop
test
push
add
testl
mov
dec
xchg
push
mov
cmpsl
icebp
cmpsl
or
push
lcall
inc
pop
ja
pop
cmp
repz
movb
dec
xor
addl
mov
push
or
shlb
add
mov
pop
not
push
outsl
jmp
lret
push
mull
pushf
mov
xor
and
pop
jae
cwtl
mov
sub
push
adc
movsl
push
and
push
mov
cmpsb
orb
aaa
sub
int
cmpsl
fistps
adc
dec
insl
test
mov
cmpsl
aam
dec
pop
pop
sub
icebp
jg
jns
pop
inc
fiaddl
jge
xor
xchg
add
sbb
adc
in
mov
sbb
notb
adc
mov
pop
call
insl
jge
movsb
or
mov
adc
xchg
pop
mov
or
dec
mov
jno
gs
mov
sub
mov
testl
push
jne
adcl
or
es
movsl
mov
dec
push
cmp
cli
jle
mov
jne
movsl
inc
jae
popa
dec
daa
push
jle
cmp
and
rep
mov
dec
cmp
push
or
pop
test
out
xchg
int
jo
cmp
cmpsl
push
cwtl
out
cmp
jne
sbb
fdivrl
or
subl
out
xchg
aad
push
mov
dec
and
call
or
aam
jecxz
dec
outsl
pop
test
call
lahf
popa
xor
stos
aam
dec
sti
in
push
mov
xchg
cmp
xor
xlat
jle
lock
push
and
mov
or
in
jg
sar
cmp
outsl
lahf
push
pop
cli
adc
sbb
inc
add
cmp
adc
popf
sbb
jge
repz
stos
das
stos
test
jg
fists
imulb
lock
loop
xor
jge
testb
in
xorl
sbb
addr16
arpl
dec
in
mov
out
aas
and
jge
movsl
dec
jne
mov
jmp
sub
and
add
std
sti
xchg
inc
ss
mov
gs
sbb
xchg
lcall
pop
adc
xchg
jb
rolb
out
pusha
pop
push
ja
in
dec
inc
fldl
movsb
or
xchg
fwait
loope
out
aaa
inc
pop
mov
std
mov
jne
mov
jns
dec
sar
sub
xchg
pop
mov
loope
or
xchg
test
dec
into
mov
inc
cmpsb
cmp
pop
loopne
lods
cmc
mov
pushf
loopne
sbb
repnz
lods
clc
fnsave
sub
mov
cmp
xor
xchg
jbe
add
cmp
es
repz
jnp
push
mov
mov
out
test
test
les
dec
and
iret
movsb
sahf
mov
rol
inc
dec
mov
nop
das
cmp
sbb
or
inc
push
inc
jecxz
xchg
push
ficomps
stc
out
sarl
addb
insb
xchg
neg
enter
mov
fnsave
jge
fistpl
pop
mov
cwtl
fcom
das
cltd
inc
icebp
enter
mov
aad
push
push
jge
iret
add
fs
sub
aam
xchg
dec
and
mov
repz
stos
xlat
mov
movsb
lods
cld
cmpsl
dec
clc
jnp
jp
cwtl
xor
xchg
stos
jle
and
scas
sbb
pop
jae
inc
cmp
in
out
push
in
cmpxchg
andb
mov
lds
insl
popf
not
sub
cli
mov
sbbb
xchg
mov
add
neg
mov
mov
mov
sbb
pop
jmp
cmpsl
daa
add
push
mov
jb
fwait
dec
aad
sub
movsl
mov
and
cwtl
sahf
andl
mov
cmpsb
or
mov
ljmp
in
xchg
lock
test
cmp
or
cmp
out
dec
pop
inc
sbb
out
jbe
sahf
pop
mov
pop
lea
mov
push
mov
icebp
jmp
cmp
adc
daa
xchg
jle
loop
rorb
xor
jp
xchg
pusha
test
aad
test
andl
rorb
scas
idivb
lods
mov
lcall
mov
sbb
xchg
xchg
dec
push
pop
cltd
and
cmp
cmp
mov
add
or
push
jno
dec
stos
mov
mov
mov
dec
enter
xchg
cmpsb
cld
push
mov
jns
inc
inc
insb
mov
xor
andl
jno
fsts
insb
xchg
lods
sub
pop
push
leave
lock
sarl
dec
cmp
mov
mov
jl
sub
in
mov
fimull
cltd
test
mov
adc
outsb
je
push
cmpsb
pop
jl
adcl
pusha
xlat
sahf
add
cmp
ret
int
dec
imul
leave
stos
cmc
mov
stos
add
idivl
mov
jle
jl
push
mov
mov
ljmp
movsl
add
in
lcall
pop
in
xor
push
jns
lea
cmp
cwtl
add
push
ret
ss
adc
fld
mov
inc
xchg
outsl
inc
pop
test
dec
lods
cmp
movsw
jmp
push
dec
pop
lods
hlt
lret
xor
insb
push
out
daa
inc
shl
cmp
xchg
pop
inc
jg
sbb
int3
push
lock
insb
sbb
data16
mov
cmp
add
pop
bound
jo
pop
dec
add
sti
cli
adc
das
outsb
and
mov
jg
pop
int3
arpl
mov
sub
je
sbb
mov
mov
mov
sbb
out
xchg
test
pop
stos
jmp
mov
xchg
aam
popf
in
adc
sbb
mov
out
icebp
sbb
sbb
push
mov
cmp
push
mov
int3
mov
add
jnp
les
pop
cmovg
dec
sub
or
pop
addr16
jmp
cmp
les
or
cmp
and
lods
emms
pushw
or
pop
std
jbe
mov
aad
lds
int3
jg
push
cmp
or
mov
int
xor
fwait
xchg
inc
fsub
in
jb
sarl
in
xlat
adc
jnp
test
mov
push
or
imul
and
or
pop
lret
loopne
in
add
jle
gs
popf
xor
je
ret
aad
rolb
sub
sub
xor
or
xchg
stos
mov
sub
mov
std
roll
push
pushf
cs
xlat
mov
jo
sbb
sysenter
adc
jo
outsl
inc
dec
aam
inc
add
and
mov
fadd
cld
pop
into
sub
push
mov
inc
icebp
minps
adc
adc
pop
movsl
mov
popa
int
fwait
sbb
int3
outsb
sub
inc
dec
xor
jmp
mov
fisttpl
jb
scas
sub
jmp
fwait
shld
clc
outsb
cwtl
insl
jno
inc
js
imull
pop
arpl
aad
lea
inc
jnp
xchg
sarl
in
sbb
sub
aad
test
mov
addr16
sar
mov
jge
jg
ljmp
fwait
push
add
mov
addr16
cmp
mov
add
test
pusha
scas
add
cmp
rcll
lret
scas
add
mov
loope
cli
pop
aas
stos
ljmp
cmpsl
xor
push
jmp
daa
inc
jb,pn
rorl
xlat
iret
ss
push
or
stc
mov
dec
outsb
xor
sti
nop/reserved
dec
test
xchg
pop
sbb
adc
lea
fwait
in
movsl
sbbl
mov
push
dec
sti
imul
jmp
movsl
aad
or
xchg
ljmp
in
or
inc
mov
cmp
in
mov
or
int3
iret
push
cs
fists
add
stc
insl
inc
add
popf
adc
add
add
sbb
pop
cli
sub
sbb
pop
pop
lea
push
sbb
and
inc
cmp
dec
jb
xorb
out
add
adc
sbb
test
movsb
faddl
mov
inc
lea
and
test
repz
and
lea
daa
push
mov
pop
xor
outsl
pushf
and
or
cmpsl
notb
iret
mov
or
mov
cmp
sahf
sbb
add
dec
leave
sbb
jmp
sbb
mov
addl
jg
push
push
pop
sbb
rclb
push
push
and
scas
mov
std
iret
notb
and
mov
xlat
stc
jo
fdivrl
pop
or
mov
sub
mov
stos
mov
push
lret
ret
mov
jmp
mov
aam
jl
jb
mov
cld
xchg
das
lahf
dec
sarb
fcmovnu
dec
dec
mov
sub
dec
sbb
mov
jmp
xchg
jb
out
lods
dec
incb
imulb
loopne
ret
cmp
cmp
sub
rcrb
xchg
sub
push
dec
ret
jbe
sbb
jno
test
push
jae
mov
mov
push
mov
inc
jns
out
cmp
dec
jae
dec
test
popf
mov
cmp
stos
pop
inc
in
jmp
rcrl
jmp
in
cmc
mov
push
arpl
popa
scas
jmp
das
fwait
sbbl
loopne
daa
adc
enter
inc
pop
hlt
xor
enter
inc
sub
xchg
xor
inc
out
mov
cltd
outsl
aam
pushf
daa
inc
inc
push
pop
ja
mov
and
stos
fdivl
sbb
mov
icebp
scas
pop
cld
xchg
andl
sub
jno
lock
xor
cmp
subl
jbe
dec
test
push
mov
scas
adc
sub
imul
adcl
jns
mov
or
int3
sahf
mov
xor
aam
enter
mov
lret
jge
loope
addl
sbbb
add
add
sub
aad
cmpsb
daa
add
xchg
jle
gs
shlb
xor
loop
rcl
xor
adc
test
out
lretw
cmc
lds
enter
popa
xor
xor
pop
mov
lret
enter
push
push
aaa
jns
insl
fimull
and
pop
add
jge
mov
dec
ret
pop
rorb
mov
inc
cmpsb
data16
inc
mov
insl
push
incb
mov
out
andl
shrb
fldl
enter
ja
push
shr
and
addr16
pop
mov
iret
sub
pushf
lahf
pop
rclb
pop
mov
cmp
je
cmpb
mov
js
xor
inc
mov
push
loope
lock
sbb
xchg
leave
ds
out
shl
cli
push
jp
aas
jnp
add
scas
push
pop
jp
mov
and
aaa
imull
js
sub
lahf
xchg
fsubl
pop
sarl
lret
sub
cli
sub
pop
cmp
jmp
xchg
ret
jne
cmp
dec
mov
or
add
fcmovu
push
daa
mov
repnz
popa
xor
mov
cmp
jo
int
or
xor
popa
lret
push
jp
out
rcl
movsb
dec
sub
push
adc
inc
sub
and
loop
cmp
iret
insl
fwait
incb
add
lret
pop
and
pop
pop
hlt
ficoms
int3
stos
cmp
sbbl
mov
mov
adc
popa
sbb
cmp
push
xor
xchg
fldcw
adc
and
or
and
sub
cld
pop
dec
cmpsb
test
lret
pushf
dec
push
out
and
dec
push
cmp
cmpb
xchg
adc
mov
mov
std
mov
lock
adc
add
mov
sub
jae
sub
and
loope
or
or
sbb
roll
into
mov
fdivr
stos
aad
jnp
clc
sub
mov
imul
add
push
das
ljmp
pop
inc
dec
popl
xchg
cmc
int
cmpsl
push
les
rolb
xor
ss
or
cwtl
cmp
mov
cltd
xchg
push
fwait
mov
shufps
in
sahf
push
mov
movsb
fildll
mov
mov
mov
jmp
arpl
cwtl
movsb
fiaddl
inc
sub
inc
pusha
fdivs
jnp
adc
jecxz
add
xchg
cmc
mov
add
jg
push
push
mov
adc
push
lea
pcmpeqd
push
ljmp
or
sub
testl
and
xchg
add
cmp
and
pop
scas
sti
bound
mov
call
roll
mov
inc
mov
mov
test
imul
pushf
adc
cmp
jne
push
paddusb
sbb
les
mov
mov
inc
scas
push
pop
repnz
pop
push
mov
in
pop
cs
push
data16
fxch
aaa
pop
pusha
jbe
push
pop
fs
lcall
fisttpl
jo
pop
add
add
lock
inc
out
jb
adc
aas
outsb
jbe
cmpsb
mov
int3
fwait
jno,pt
mov
sbb
cmp
jp
jb
mov
clc
sbbb
xchg
push
or
repz
popf
pop
dec
nop
or
out
mov
pop
jmp
shrl
xchg
dec
pusha
jno
aas
mov
add
daa
jae
in
lock
add
jbe
add
stos
push
fcoms
cld
mov
adc
and
movsl
fcmovb
cmp
in
lcall
mov
mov
dec
add
mov
adc
mov
jmp
aas
mov
cmp
push
mov
outsb
lds
fbstp
test
idivl
pusha
pushf
mov
int
movsl
dec
testb
add
popa
mov
andl
push
es
fcoml
xchg
out
mov
in
sar
ret
add
filds
jle
or
push
in
lock
adc
lea
cld
call
js,pt
cld
mov
dec
push
ljmp
xor
mov
inc
insb
xchg
popf
lret
int
and
mov
hlt
mov
push
aad
xchg
cltd
xchg
mov
dec
inc
cmp
pushf
and
or
repz
shrb
divl
and
jg
add
rcll
push
sbb
je
jnp
iret
std
test
in
cs
mov
fwait
or
lret
add
or
or
sub
sub
pusha
repz
xchg
addb
and
testl
cmpsl
pusha
arpl
je
in
mov
shll
sbb
xchg
push
les
push
mov
cmp
xlat
adc
mov
sub
mov
push
call
sarl
add
es
mov
lea
ficompl
movsb
sarl
pop
adc
sbb
popl
hlt
adc
loopne
mov
xor
xor
xor
daa
jge
ret
or
loopne
sbb
test
inc
out
push
mov
test
pusha
add
cmpsb
jle
jmp
sub
in
or
mov
pmaddwd
or
cmp
push
push
pop
cmp
inc
sub
in
xlat
lret
fldenv
fcomp
push
dec
out
and
xchg
out
out
jecxz
lahf
cmc
pusha
xor
cwtl
push
cmpsb
iret
mov
lods
dec
mov
or
cmc
push
stc
sahf
sbb
jmp
out
cli
mov
dec
push
movsl
sbb
add
jmp
negb
add
mov
mov
fsubrs
push
xchg
cmp
dec
sbb
lods
adc
add
jp
outsl
gs
insl
cmpsb
lods
aad
sbb
fldcw
in
xchg
jge
lea
outsb
push
imul
cmc
xchg
jmp
xchg
movsl
mov
pop
lock
adc
mov
das
mov
imul
jg
icebp
inc
mov
adc
fistpll
jmp
cmpsb
fs
cmpsl
out
cmp
inc
pcmpeqd
jecxz
vmovntpd
out
mov
jl
inc
pop
mov
cmp
xchg
pop
push
xchg
mov
adc
mov
jmp
push
jb
rclb
mov
push
mov
mov
fsubrp
aaa
mov
or
fisubrs
inc
into
ret
sub
shrl
inc
pop
xchg
inc
or
imul
hlt
pop
dec
leave
inc
lds
enter
push
in
or
cmp
lret
jns
outsb
test
into
xor
xchg
and
loope
mov
xlat
cwtl
out
jp
sbb
dec
test
mov
stos
int3
aad
jg
push
test
out
fisubl
sbbb
sub
shl
mov
popf
push
test
push
movsb
or
je
and
outsb
mov
jne
mov
mov
dec
inc
es
fimuls
dec
decl
adc
mov
sub
dec
push
mov
fwait
sbb
mov
shlb
cmp
test
adc
repz
inc
add
add
and
and
sbb
shrb
insb
pop
call
fdivrl
jns
test
into
test
mov
movsl
mov
mov
shl
arpl
cmp
repz
jo
roll
mov
xor
repz
and
aaa
cmp
aam
mov
mov
or
push
xor
pop
xchg
xchg
mov
xor
add
add
fwait
out
cld
test
mov
in
movsb
dec
jne
sub
adc
ss
jns
nop
jge
in
inc
in
div
nop
cmp
adc
fstp
sub
jmp
dec
mov
and
dec
mov
ljmp
mov
push
add
imull
fstl
scas
adc
or
jno
sbb
and
and
sub
test
pop
dec
fdivs
rcl
mov
cmpsl
mov
and
mov
popa
rorb
dec
sub
cli
jmp
dec
xchg
ljmp
pushf
push
push
push
cli
outsl
and
add
out
repz
xlat
mov
fdivp
or
pusha
pop
xchg
inc
pop
lahf
jnp
out
sti
cmp
cli
fcmovnb
and
or
imul
subb
jg
xchg
in
out
lret
adc
mov
imull
lods
ss
lahf
cmp
xchg
fs
and
dec
sbb
cltd
fcmovb
int3
xchg
in
cmp
adc
and
xchg
jmp
loop
jb
jge
cmp
in
insb
lods
sub
cltd
das
test
xorb
xor
clc
ficoml
shr
lods
cmpsl
fcmovnb
stos
push
mov
mov
jge
cmpsl
pop
sub
jno
jbe
int3
push
or
scas
sbb
mov
jl
xchg
lea
sbb
jae
mov
jg
mov
dec
mov
mov
cld
mov
sbb
cwtl
insl
js
pop
jns
fcmovne
notl
rcll
dec
int
sbb
push
lock
daa
movsb
xchg
mov
xchg
insb
dec
lcall
decb
inc
into
jb
shrl
fcomp
sahf
mov
cli
xchg
inc
fwait
jmp
xchg
and
in
or
inc
lahf
pop
pop
jp
sub
xlat
and
adc
mov
jecxz
sub
pop
stos
jo
cmpsl
cmp
lock
xlat
or
inc
stos
lods
aad
mov
mov
jae
mov
hlt
out
fs
and
cmp
adc
test
cmp
ljmp
loope
pop
xchg
shrb
mov
xchg
insb
rorl
jecxz
push
xor
lret
mov
mov
mov
cltd
cmp
adc
pop
jbe
sarl
pop
xchg
and
pop
mov
push
lcall
or
andb
and
outsl
mov
cmp
and
inc
and
add
xor
add
aaa
adc
or
ret
inc
cltd
inc
in
testb
mov
cmp
lods
sar
xor
int3
movsb
leave
dec
lods
cmpsb
loop
pop
push
sbb
sbb
mov
cmp
push
sti
or
loopne
mov
dec
and
jmp
dec
lods
inc
aam
xchg
adc
cld
mov
dec
mov
dec
sub
loop
pop
imul
adc
arpl
shrb
addr16
popa
inc
cmpsb
or
jg
lret
in
dec
mov
xchg
mov
mov
in
clc
push
pop
sahf
enter
mov
hlt
popf
in
adc
sarb
imul
outsb
mov
out
mov
sbb
sub
inc
les
popa
ret
movsb
je
out
fs
cmpsl
nopl
mov
in
int3
xchg
cmp
stos
scas
fisubrs
cltd
pop
mov
movsb
hlt
popf
into
mov
mov
imul
mov
imull
test
mov
cli
loopne
mov
add
inc
cltd
paddsw
negb
jns
dec
xlat
int
dec
sbb
lds
add
scas
adc
adc
les
and
mov
jbe
mov
sahf
cmp
push
lret
mov
push
std
cmpsb
sbb
and
mov
and
insb
or
call
inc
clc
mov
and
int
sbb
in
fidivl
xchg
pop
push
pop
popa
pop
lahf
pushf
push
sub
push
scas
fdivrp
cmpsl
ja
out
aad
and
stc
add
lret
shll
mov
sarl
jne
and
shll
ret
adc
lods
and
iret
or
sbb
push
test
imul
call
cmp
adc
or
push
pop
outsl
cld
push
cmp
lret
mov
cmp
cmp
lock
ss
into
pop
sub
ja
xchg
add
shrl
mov
addr16
pop
inc
fnstenv
scas
stos
into
adc
imul
mov
push
out
sarb
aam
mov
or
and
movsl
clc
adc
mov
rorb
in
out
dec
repnz
pop
ljmp
jle
loope
iret
mov
in
inc
in
jbe
fdiv
rcll
mov
push
xor
push
sti
loope
mov
or
dec
jns
xor
mov
mov
pop
mov
mov
call
lret
jbe
cmp
lds
xchg
pop
xchg
dec
cmpsl
or
xchg
icebp
flds
xchg
xchg
call
ja
je
fimull
sbb
in
cld
inc
fistl
xchg
mov
mov
fistps
aaa
roll
mulb
js
dec
shrl
pop
push
mov
insb
lret
pop
xchg
insb
mov
dec
out
xchg
bound
and
sarl
push
pop
ret
ret
and
xor
xchg
and
or
int
lock
scas
data16
jno
dec
in
xlat
aad
call
add
movb
scas
adc
xchg
push
test
mov
andb
push
test
hlt
xor
shlb
mov
in
shrb
mov
jb
sahf
pushf
clc
mov
imul
mov
adc
pop
outsl
jns
cltd
out
adc
jmp
sahf
ss
xchg
lea
test
mov
sarl
mov
test
adc
das
lahf
or
push
xchg
aad
push
ss
mov
push
rdmsr
inc
inc
jmp
cmp
jl
cmp
and
mov
sub
push
pop
mov
adc
dec
repnz
clc
sub
adc
jb
inc
js
pushf
pop
ljmp
aad
mov
fadd
fldcw
mov
aam
mov
add
aam
nop
xchg
lock
mov
cmpb
and
mov
sahf
lods
popa
mov
stos
inc
ss
arpl
insb
sbb
mov
insl
or
sbb
sbb
sub
inc
mov
xor
jecxz
shrl
sub
icebp
and
int
enter
push
mov
int3
cmp
and
mov
nop
sub
cmp
mov
cmc
arpl
push
in
les
xchg
push
ljmp
loop
pop
xchg
mov
lock
xchg
mov
xchg
pop
and
sbb
sub
and
adc
cwtl
fisubrl
orl
sarb
into
popf
inc
fwait
je
lock
mov
shll
sub
fstp
test
sub
push
xchg
sub
xor
lea
mov
cmpsb
pop
xor
cmpl
jp
orb
leave
add
ret
xor
mov
loope
add
sbb
push
xor
aam
push
cmp
bound
xor
js
dec
jne
xchg
in
out
lds
testb
or
imul
cmc
daa
cli
pop
xchg
push
popa
pop
data16
mov
fldenv
pop
mov
hlt
push
ss
mov
inc
in
outsl
int
mov
sub
inc
mov
and
fmul
lret
jmp
ret
adc
out
xchg
or
xor
xor
roll
out
xchg
scas
mov
insl
and
ja
ss
sbbb
ja
cmc
faddl
cwtl
jb
jno,pn
ret
push
sub
sbb
push
and
mov
jnp
sbb
jle
aas
loope
fildl
ss
xor
pop
jecxz
push
jg
adc
or
cmp
sub
aad
fsubs
in
lcall
in
mov
cmpsb
dec
sbb
ret
inc
movl
insb
je
mov
les
outsl
xchg
leave
add
sar
ja
mov
filds
push
in
xchg
lea
and
mov
lcall
push
adcb
push
fsub
shlb
mov
cltd
xor
adc
mov
std
in
ret
fstl
cwtl
jecxz
cmp
fmulp
push
stos
icebp
mov
scas
pop
add
xchg
or
mov
adc
test
lcall
dec
stos
nop
dec
push
adc
dec
and
rcll
leave
sub
add
add
push
js
lock
xor
test
jo
mov
aas
and
fxch
iret
lock
lahf
pop
sbb
mov
and
push
idiv
mov
push
adc
stos
test
push
add
pop
loopne
mov
scas
sahf
xor
pop
dec
fisubl
in
mov
leave
fstl
dec
shll
or
adc
js
test
ss
inc
fsubrl
repz
adc
xchg
inc
push
leave
adcb
sbb
or
mov
sti
jno
pop
pusha
lock
mov
pop
sub
xchg
xchg
push
xchg
xchg
dec
loopne
fdiv
stos
xor
adc
xchg
push
sub
pop
ja
nop
dec
aam
or
aam
push
frstor
mov
lahf
xor
addr16
push
or
adc
sbb
in
xchg
dec
sbb
jmp
mov
sbb
mov
in
adc
lret
scas
add
inc
test
sbb
push
out
jge
add
or
out
mov
jge
push
xor
repz
mov
xchg
push
push
inc
int
pop
sub
imul
shlb
cs
inc
sub
pushf
std
lock
dec
or
fdiv
or
dec
mov
pop
mov
xchg
or
xchg
cltd
sub
rcrl
enter
pop
mov
xor
shr
mov
jo
xchg
int
push
jb
call
aam
adc
imul
sbb
xor
xchg
pusha
push
push
mov
adc
shrl
sub
nop
push
loop
xor
movsl
cmpsl
add
adc
fisubrl
repnz
lods
ds
push
adc
xor
cld
mov
stos
xchg
bound
dec
iret
scas
and
pushf
in
sbb
add
popf
scas
mov
cmpsb
push
inc
lock
cmpb
fucomp
adc
push
mov
imul
jmp
lcall
xchg
push
sbb
dec
loopne
dec
lret
adcl
mov
lret
xchg
inc
pop
fwait
imul
ret
mov
jbe
scas
push
sbb
adc
stos
fnsave
std
mov
jnp
leave
leave
jge
jecxz
mov
jae
fs
mov
inc
sar
cli
push
popf
jnp
iret
xlat
push
pop
push
testb
daa
mov
std
cmpsb
dec
push
or
sub
les
or
repnz
test
ret
jb
xlat
lds
pushf
ljmp
and
push
xlat
xchg
and
cli
sti
mov
ds
mov
add
jl
mov
xor
mov
jge
mov
mov
adc
icebp
cmp
push
mov
dec
sbb
fmul
fwait
or
or
jp
cmpsb
rorb
or
xor
ja
sub
jnp
add
iret
fwait
pop
dec
outsl
pop
add
pop
test
xchg
mov
repz
inc
jl
neg
push
imul
adc
in
test
jae
jnp
ja
mov
adc
mov
mov
or
push
in
xchg
sub
or
sub
aad
xsaveopt
mov
fs
dec
ja
push
xchg
inc
xchg
ja
push
mov
or
dec
nop
sti
ljmp
xor
push
outsl
add
clc
dec
jp
sbb
pop
roll
pop
push
loop
push
or
push
pop
adc
cmpsl
or
inc
jle
cmp
pop
and
push
xchg
or
xor
pop
mov
mov
or
insb
loop
mov
arpl
jmp
scas
add
pop
mov
pop
aam
fisttpll
icebp
xchg
dec
xlat
jecxz
jle
test
fmull
pusha
or
push
add
call
ja
shll
push
push
mov
jne
out
xor
dec
int
test
rcr
or
outsl
mov
repnz
pop
das
sbb
pop
pop
pop
les
sti
mov
repnz
call
push
rolb
mov
scas
je
push
sbb
adc
xchg
add
aam
mov
or
popa
cmp
adc
in
xchg
loope
scas
push
xchg
pop
mov
jno
pop
movsb
repz
lahf
xor
sub
mov
stos
je
nop
xor
mov
xor
or
cli
pop
movsb
ja
sti
shrb
or
xchg
and
test
jnp
cli
lcall
dec
pop
test
int3
push
mov
pop
loope
sarl
in
adc
cmp
daa
in
pop
movsl
push
xchg
ficomps
mov
adc
das
add
xchg
mov
mov
popf
ss
mov
repnz
mov
jne
imul
mov
push
xchg
clc
mov
dec
daa
sub
mov
push
ret
jno
or
ja
lcall
cld
mov
sub
aad
outsb
adc
inc
lods
mov
mov
jnp
adc
lods
sbb
mov
dec
jmp
test
scas
xchg
xor
pop
aam
data16
dec
xor
fdivl
lret
or
ret
push
repz
cmpsl
dec
inc
mov
pop
sub
mov
ret
add
sarl
push
mov
leave
lods
sub
sbb
push
pop
adc
or
push
out
xchg
mov
jno
add
xor
and
push
jmp
call
cs
fistps
or
lods
ret
dec
scas
jnp
iret
add
into
add
mov
shll
adc
cmc
sbb
nop
dec
je
inc
fwait
cmp
jp
push
lods
xor
mov
mov
cmp
sub
insb
int
push
inc
rcrb
pop
push
inc
mov
cmpsl
clc
push
ret
jmp
fdivrs
push
cld
mov
imul
shll
rcrl
lods
or
in
insl
std
lcall
lea
rcll
adc
inc
pop
mov
testl
or
sbb
decl
xlat
lds
daa
js
dec
pop
jae
lret
subb
pushf
mov
cmc
ss
jne
jge
roll
rclb
inc
outsb
jl
push
push
add
mov
mov
mov
cmp
or
sarl
jle
lock
push
cmp
mov
adc
cmpb
fstpt
call
ja
cwtl
pop
clc
dec
testl
jbe
cmp
push
rcll
jne
dec
push
rcrl
push
jbe
add
sub
in
pop
dec
mov
mov
push
pop
mov
ror
dec
or
sub
icebp
lcall
in
das
sub
mov
orl
jg
fcmovb
mov
mov
lcall
data16
sub
lahf
test
in
push
fisubl
inc
add
inc
mov
pop
js
push
jno
enter
jnp
push
add
in
and
mov
jno
and
rorb
cld
outsl
mov
fcoml
push
cmp
jecxz
mov
mov
dec
push
sub
repnz
mov
adc
data16
push
cmp
jecxz
inc
into
movsb
push
mov
test
imul
out
dec
aad
pop
push
sub
inc
repz
xchg
jne
xchg
cmp
ret
jmp
cmpsl
in
add
data16
pop
sub
push
xchg
add
dec
test
je
ja
push
inc
out
mov
jbe
push
mov
icebp
scas
push
and
push
aas
inc
mov
push
pop
aas
push
mov
addb
jmp
loopne
push
adc
pop
outsb
lock
adc
adc
ja
fnsave
inc
andb
loop
fstps
push
mov
ret
jnp
mov
xor
sbb
sar
in
dec
dec
sbb
jecxz
sub
stos
add
pop
push
fimuls
imulb
loope
or
or
mov
lea
adc
push
pop
mov
in
lret
aas
iret
push
jmp
imul
mov
mov
sahf
pushf
data16
mov
into
lret
jae
mov
out
fildl
lock
fidivs
push
ret
lods
xchg
dec
clc
dec
pop
cmp
in
xor
dec
push
sbb
test
jge
iret
popa
out
add
and
dec
inc
in
inc
jmp
mov
inc
nop
sbb
pushf
inc
xchg
ficompl
imul
sub
movsb
or
adc
mov
or
mov
mov
jmp
jne
sbb
sub
xor
jno
stc
add
jb
inc
or
mov
push
pop
lahf
xchg
fidivs
inc
fsubl
cmpsb
jno
hlt
rcr
fsubr
inc
test
popf
push
cwtl
sahf
lock
andl
pop
rolb
sbbb
loope
nop
jl
stc
test
mov
xchg
inc
add
lahf
faddl
ja
add
popa
imul
out
sub
mov
test
push
push
and
mov
loop
fsubr
cmp
sbb
filds
cltd
ret
mov
and
das
xchg
adc
mov
mov
pop
ret
xlat
out
sbb
insb
jl
sub
jmp
dec
fstp
dec
lcall
xchg
xor
loope
pop
ficoms
inc
xor
push
out
mov
sbb
out
xor
jge
mov
mov
inc
and
and
fidivl
lret
adc
cmp
add
mov
mov
sbb
lahf
inc
lcall
fyl2x
cmp
sub
jge
cmpsl
fiadds
push
lea
call
popf
ret
mov
iret
movsb
or
je
adc
jbe
and
jp
jl
mov
cltd
cld
add
lahf
pop
popf
outsb
push
mov
out
outsb
in
out
cltd
dec
fcmovu
pusha
je
loope
shll
jbe
outsl
add
aaa
push
xchg
pusha
inc
push
xor
ljmp
dec
mov
adc
fs
adc
std
cmp
call
shrb
mov
mov
ficoms
fwait
adc
jae
les
scas
or
xor
xor
fnstsw
outsl
std
imul
imul
push
jae
mov
cmp
dec
push
sbb
pop
mov
aaa
ret
iret
mov
test
pop
ret
mov
and
add
js
rcll
mov
scas
adc
pop
cmp
cld
lret
scas
addb
pop
add
add
xor
jmp
loopne
sahf
inc
adc
call
loop
jns
push
aam
rol
ja
or
xchg
test
push
sub
mov
push
imull
insl
mov
cmp
pop
or
push
mov
jmp
loope
sub
out
testl
in
xchg
mov
inc
rcl
push
and
sbb
cmc
xchg
xchg
jp
or
push
lods
sbb
cltd
adc
and
mov
std
out
sbbb
adc
push
loope
add
inc
xor
pushf
inc
scas
push
subb
nop
adc
repz
das
in
jae
daa
test
xchg
gs
mov
mov
scas
cld
cld
lret
scas
insl
arpl
fadd
adc
dec
or
add
pop
xor
jmp
lea
cmc
subb
jo
push
push
enter
add
sub
aam
or
inc
dec
fwait
push
xchg
jge
shr
push
mov
cmp
sarl
sub
dec
arpl
fdivs
stos
cmc
sbb
imul
push
ret
xchg
xchg
jge
mov
dec
dec
cmpsl
loope
sbb
push
sub
mov
icebp
test
rclb
aam
mov
and
test
js
cmpl
addb
pop
pop
adc
ss
fldcw
sarl
loopne
sub
loopne
push
mov
inc
rcll
mov
push
mov
lods
cmpsl
jecxz
dec
pusha
mov
mov
push
or
cltd
cld
sub
jno
mov
pop
jno
push
cmp
lods
rcrl
xor
and
pop
stc
cmpsl
fstpl
mov
dec
mov
movsb
mov
xchg
add
negb
sub
and
out
sbb
cmp
xchg
cli
es
adcl
call
pop
stos
scas
push
cmp
pop
mov
in
std
insl
mov
add
lahf
lret
sub
adc
pop
enter
out
mov
fiadds
cmp
idivb
sbb
xor
jns
imul
stc
ret
test
or
std
insl
jne
sbb
sti
jp
or
sbbl
add
cpuid
pop
pop
xor
dec
out
lock
or
sarb
andb
daa
xor
dec
pop
inc
sarl
cwtl
int
and
addl
mov
out
jmp
enter
mov
negl
in
jns
fiadds
mov
mov
and
cli
mov
push
and
bound
mov
addr16
push
and
adc
dec
leave
xor
fisttps
push
pop
sahf
pop
push
in
lock
fldcw
add
cmp
jo
dec
or
jp,pt
xor
xchg
adc
repnz
std
iret
daa
scas
fldl
icebp
mov
in
shll
sbb
fs
dec
movsb
add
pushf
cli
loope
movsl
cmpb
sahf
dec
insb
ret
sbb
pop
es
mov
push
movsl
jbe
pop
nop
dec
jmp
jbe
cmpsl
fcmovu
cs
mov
enter
fiadds
jmp
add
or
loopne
mulb
push
lods
jo
data16
or
hlt
push
jb
pop
mov
jp
out
jmp
push
in
outsl
dec
dec
dec
xor
xchg
fcmovnb
mov
repz
sub
sbb
add
outsb
imul
sbb
push
push
enter
jmp
fisttpll
daa
bound
shrb
imul
dec
and
daa
mov
pop
ret
inc
adc
outsl
pusha
inc
push
movsl
clc
xchg
lods
mov
mov
maxps
sarb
mov
adc
scas
inc
xchg
xchg
dec
int3
and
jne
lret
lret
adc
cmc
or
cs
inc
sub
cmp
rorb
std
cmp
orps
sub
dec
and
mov
ljmp
mov
jmp
push
les
push
add
inc
ret
testl
mov
stc
push
xor
mov
push
pop
mov
pop
mov
aam
add
es
aas
fistpl
adc
mov
outsb
cmp
loopne
lock
push
mov
lea
outsl
aad
cli
stos
insb
adc
out
outsb
mov
and
sub
out
out
pop
mov
xchg
cltd
ljmp
dec
inc
push
add
ret
ds
mov
mov
sbb
push
aas
cld
cs
mov
mov
mov
inc
loope
and
sub
pop
adcl
mov
int
cs
test
mov
xor
adc
add
mov
pop
push
xor
inc
addr16
sahf
sub
js
push
ds
xor
mov
mov
fwait
mov
lds
mov
mov
and
mov
inc
mov
rorb
js
sbb
int3
cld
in
mov
mov
pop
mov
jmp
pop
and
cmp
fidivl
jge
subl
aad
aad
push
inc
jo
lahf
add
mov
mov
dec
jp
addr16
movsl
subl
dec
add
repz
jg
fcomps
jnp
xchg
dec
mov
mov
cwtl
iret
and
xor
cmp
nop
pop
dec
test
into
bound
je
call
adc
int3
cmpsb
xchg
cmp
iret
sub
dec
test
lret
jle
push
ja
ret
aad
sub
jle
pusha
in
shrb
mov
xor
rcll
adc
push
jns
sbb
mov
movsb
mov
jle
pop
and
pop
lock
insl
push
shlb
cltd
push
pop
add
fbld
cmp
inc
jle
cmp
mov
adc
out
outsb
mov
add
in
sbb
movsl
xchg
push
pop
mov
das
fisttpll
xorb
mov
push
imul
in
arpl
orb
mov
insl
imul
jmp
inc
xorb
mov
push
repnz
inc
popa
cwtl
test
lcall
jnp
mov
inc
mov
icebp
loop
inc
mov
jmp
in
cmp
cmp
inc
mov
popa
pop
xlat
dec
mov
jns
inc
jae
hlt
xchg
mov
xor
ds
test
test
clc
popa
pusha
and
test
call
insl
iret
sbb
xor
sub
jp
pop
sti
add
pop
stos
jo
call
adc
daa
out
and
jno
lret
icebp
call
dec
std
cmc
mov
cld
in
or
or
iret
in
adc
daa
mov
addl
aad
js
pop
sub
xchg
xchg
cld
mov
inc
pushf
arpl
out
addr16
dec
shrb
pop
insl
lods
xlat
jno
jecxz
and
icebp
mov
inc
sti
lock
or
call
imul
add
jge
fidivs
out
int
das
imul
jmp
pop
push
push
enter
xor
pop
fcmovb
or
xor
sti
dec
sub
cli
or
ds
mov
jb
xor
sub
cs
push
sub
push
jmp
adc
jp
testb
xchg
adc
test
lret
jb
test
mov
js
jnp
xchg
std
inc
adc
lahf
in
or
das
xor
pop
dec
mov
sbb
jno
cmp
add
and
lods
insb
xor
sub
mov
jns
jl
sub
xor
push
jmp
lahf
pop
fldcw
sub
stc
cmp
xor
into
popf
xlat
imulb
pop
mov
sbb
mov
pusha
jno
lret
sbb
push
lea
add
das
and
pop
sub
sbb
fnsave
sahf
mov
or
lret
and
sub
adc
inc
out
mov
xor
scas
dec
fmuls
dec
shll
fcmovnbe
add
xchg
lods
cmp
mov
aad
jae
add
subb
cmp
sbb
xchg
ds
add
xchg
subb
insl
negl
lahf
jae
push
dec
rcrl
int3
movsl
mov
jno
jb
sbb
pop
test
cmp
add
mov
enter
repnz
add
xchg
sti
aas
mov
in
pop
mov
sub
or
ja
imul
es
lea
add
mov
xor
xchg
or
push
xchg
gs
mov
cmp
stos
jmp
enter
sub
mov
add
or
lahf
inc
and
mov
pop
dec
inc
add
xchg
mov
inc
scas
push
sbb
xchg
mov
sub
adc
mov
jmp
out
hlt
int
dec
aad
mov
push
clc
and
movsl
jmp
push
dec
mov
mov
pop
sub
pop
cmp
adc
xchg
aad
and
and
inc
jg
mov
out
pop
sub
aad
out
inc
cmp
imul
jae
sbb
pop
sbb
push
js
mov
mov
cmpsb
or
add
xor
jp
rcrl
add
xor
and
inc
push
jmp
fwait
adc
and
shrl
leave
iret
and
dec
int3
mov
push
adcb
xchg
loopne
sub
xchg
aad
push
pop
mov
sar
pop
jle
kmovw
mov
out
cmpsb
mov
arpl
or
mov
into
lds
out
inc
pop
cmp
lea
mov
enter
andb
xchg
outsb
stc
data16
out
jo
or
dec
daa
pop
sub
sbb
cltd
outsb
add
ljmp
dec
cmc
fisttpl
sub
sub
cmc
rep
mov
pop
cwtl
in
cmp
daa
pushl
lds
imul
loop
out
jmp
jno
loope
mov
scas
add
pop
jecxz
test
in
sbb
scas
fstpl
sbb
divb
adc
ds
xor
imul
aas
addl
jnp
pop
hlt
pop
sub
pop
and
pop
lods
sarl
xor
sbb
mov
movsb
jle
out
sar
xor
and
jns
or
leave
xchg
sub
dec
repz
in
rolb
inc
mov
push
adc
inc
dec
inc
test
data16
sub
pushf
add
out
and
and
nop
xor
sub
lds
in
insl
mov
and
xchg
enter
xchg
adc
cmp
dec
and
ret
lret
lock
xchg
push
movsb
xchg
mov
outsb
ja
sbb
bound
adcb
or
repz
jecxz
lods
add
jmp
outsl
mov
stos
mov
mov
mov
jmp
test
inc
cli
mov
xor
and
popa
lods
ret
lods
jge
sbbb
ds
adc
xchg
popf
adc
mov
sarl
dec
cs
sbb
or
in
push
and
jmp
sub
jb
pusha
pop
mov
sbb
cmp
lcallw
add
scas
adc
jbe
push
mov
movb
and
test
inc
mov
fimuls
mov
cli
insl
cld
push
or
test
mov
pop
sahf
jl
mov
mov
aaa
test
repz
and
adc
lea
sbb
inc
out
jmp
fistpll
jmp
leave
push
xchg
pusha
inc
add
mov
jb
stos
jae
add
mov
lds
lcall
cmpsb
loop
imul
les
jecxz
lcall
fnstsw
fld
mov
xchg
outsl
and
dec
cmp
xchg
pushf
pusha
xor
mov
xor
and
dec
xchg
clc
pop
pop
stos
xor
shl
pop
and
cwtl
xlat
ret
and
mov
pop
xorl
ja
in
pop
fucom
incb
xor
icebp
xchg
inc
or
shl
or
addr16
xchg
pop
cmp
cmp
roll
mov
mov
mov
push
dec
lahf
icebp
dec
lahf
dec
fldl
lock
mov
imul
addr16
xor
ret
popa
cmc
push
jge
cmp
xor
mov
jae
rcrl
mov
jno
inc
mov
add
add
icebp
and
pop
jge
out
xchg
iret
inc
push
pop
add
loop
fstps
jg
mov
shlb
push
and
inc
loopne
add
fmulp
push
stos
into
mov
std
xor
shl
push
cmp
xchg
out
lcall
inc
cmp
mov
pop
xor
not
pop
inc
inc
sbbb
push
sbb
movsb
cld
or
ret
jge
int
js
sbb
xchg
push
loopne
push
mov
scas
push
mov
out
add
push
daa
out
incb
push
dec
imul
and
int
push
insb
cmp
pushf
rcrb
shlb
mov
fistpll
xchg
pop
adc
mov
ud2
sbb
xchg
jmp
stc
sti
cmpsl
and
imul
pop
inc
rorl
xchg
pop
pusha
dec
push
sub
mov
out
and
xchg
addr16
mov
and
mov
jbe
jno
das
jbe
stos
mov
negl
jne
dec
lcall
xchg
stos
lret
xchg
push
inc
xchg
dec
dec
mov
jge
js,pt
daa
and
jmp
cmp
and
add
test
imul
mov
es
xchg
jo
mov
sbb
lods
dec
mov
push
xor
mov
and
stos
les
dec
es
outsl
shrl
adc
sub
jl
inc
xchg
xchg
cld
lret
lods
cmpsb
aaa
scas
pop
pop
push
push
mov
lret
sub
out
bnd
in
cmp
int3
sbb
es
ret
imul
scas
cwtl
cmp
mov
shr
or
iret
mov
ja
inc
mov
fs
and
sbb
out
ljmp
popf
pushl
add
or
mov
imul
and
bound
aam
out
fbld
daa
add
lahf
lds
outsl
and
push
in
add
mov
shl
push
gs
xchg
lea
popa
xor
enter
xor
ja
push
adc
hlt
test
mov
out
adc
sub
repnz
je
xchg
hlt
and
out
dec
jmp
je
out
sub
and
out
enter
inc
in
jle
call
pop
ja
push
jl
push
outsl
xchg
rcll
xchg
iret
int
mov
and
xchg
push
stos
add
loop
stos
shll
flds
out
xchg
add
dec
and
das
sub
lcall
ret
daa
jge
mov
mov
push
push
loope
mov
sub
out
aam
rcr
pop
and
popf
pop
fs
cmp
mov
mov
in
cs
popl
xchg
fwait
dec
fsubrl
loopne
cmp
jbe
mov
jns
cmp
int3
push
pop
dec
testb
andl
pop
jl
out
dec
pop
xchg
in
mov
and
cwtl
or
loopne
insl
push
rcrb
xchg
movsl
sub
mov
xor
cmp
adcl
test
cwtl
dec
dec
and
push
bound
movsl
addr16
cmp
sub
shlb
push
outsl
out
ffree
leave
cli
mov
mov
mov
push
fisttpll
add
stos
jb
ljmp
jmp
mov
inc
and
push
jbe
mov
mov
cmp
mov
pusha
das
cli
mov
inc
cmp
lods
and
inc
mov
dec
push
adc
leave
cld
mov
scas
pop
and
lods
and
and
jo
mov
data16
dec
dec
sbb
ret
fidivrl
scas
ds
scas
cmpsl
adc
push
mov
mov
dec
and
scas
xor
cli
lcall
loopne
fsubr
notb
adc
mov
insb
pop
out
scas
push
mov
stos
adc
leave
push
mov
hlt
push
push
or
jmp
jp
lret
std
out
lahf
scas
add
repz
cltd
mov
push
les
loope
shll
cmp
jno
xor
aas
pop
and
lret
jp
mov
aaa
popf
cmpsb
ja
fldcw
cs
mov
adcb
and
testb
lcall
inc
cmp
dec
push
xor
and
aad
add
push
mov
inc
dec
test
test
andb
jmp
movsl
out
cld
test
sub
mov
or
cmp
roll
mov
lds
mov
outsl
iret
aam
mov
dec
mov
and
adc
inc
sbb
leave
add
test
shll
pop
xor
dec
mov
addr16
cmpl
mov
out
jmp
in
int
mov
lods
cld
movsl
or
je
mov
fs
mov
jo
jb
jns
push
ljmp
fbstp
mov
dec
cli
daa
ss
pop
add
inc
ficomps
cmp
fidivl
test
in
add
gs
out
fsubp
xchg
mov
or
sbbl
std
hlt
xchg
notb
enter
sub
inc
jmp
aad
insb
std
jae
sbb
push
xchg
scas
sub
sbbb
imul
addr16
jp
adc
or
lret
cmp
pop
int
push
push
cmp
ss
repz
int
lods
gs
iret
out
test
sbb
inc
xchg
cmp
hlt
pop
pop
jp
dec
jl
xor
test
jmp
enter
das
lock
les
mov
sarb
dec
daa
hlt
xchg
lock
lods
arpl
movsl
in
mov
cltd
or
add
arpl
imul
add
jmp
ret
stos
sub
dec
int
dec
xor
or
lret
pop
or
pop
sub
incb
pop
push
or
pop
lods
xchg
frstor
cli
sub
and
lahf
jno
cltd
mov
mov
repnz
rorb
or
jb
jp
out
push
cmp
xor
in
loop
sub
inc
xchg
push
loopne
add
into
xor
dec
cmp
sub
mov
cmp
nop
ljmp
movsl
lods
out
popa
call
into
jg
scas
sub
jne
mov
mov
dec
cmc
mov
imul
bound
les
inc
sarl
xchg
xchg
test
push
out
inc
jecxz
jp
shrb
mov
mov
pop
ss
pop
out
fcoms
lahf
in
mov
out
sbb
and
xchg
nop
scas
pusha
scas
cmp
ret
push
mov
or
repnz
pop
push
cmpl
mov
cltd
fwait
push
mov
mov
rcrb
jbe
out
out
adc
loopne
adc
outsl
cmc
inc
dec
cld
repnz
push
lds
aad
fiaddl
fbld
aaa
gs
push
cmp
push
push
mov
sub
mov
or
push
loopne
fimuls
pop
ret
ret
jge
add
imul
outsl
lret
fsubrl
in
xchg
dec
dec
mov
sbb
xchg
lret
add
je
xchg
mov
sbb
cmpsb
mov
mov
mov
jno
pop
adc
jmp
in
imul
daa
lret
fadds
mov
jle
jge
xor
int
divb
js
cmc
dec
sbb
mov
into
xor
popa
ret
leave
push
inc
add
xchg
add
sub
adc
mov
add
out
dec
std
jnp
addr16
addr16
cwtl
fdiv
roll
sbb
mov
xor
sahf
clc
sbb
jp
icebp
xor
daa
add
popf
les
outsb
add
xorl
cli
aad
pushf
movsb
mov
adc
push
aaa
push
jecxz
pop
xor
int
pop
xchg
aam
pop
sbb
or
mov
popf
cmp
scas
mov
lock
lea
in
mov
rcrl
mov
and
mov
sub
mov
cmp
hlt
mov
mov
gs
std
lods
leave
push
pop
pop
or
fs
dec
cmp
bound
sahf
pusha
fdivs
subl
xor
int
mov
adc
sbb
in
mov
dec
push
fisubs
aad
xchg
pop
scas
lea
fwait
mov
cmc
test
lret
dec
pusha
xchg
add
ljmp
pop
lods
enter
xchg
adc
shl
or
push
and
in
xor
je
and
xor
out
push
add
jo
gs
mov
and
roll
aam
mov
add
scas
mov
leave
dec
xlat
xchg
push
or
sub
stos
xchg
jmp
jb
xlat
out
scas
mov
outsb
cmp
out
jle
movsb
jle
aad
jb
sub
insb
imul
ret
jmp
mov
mov
push
xor
add
aaa
arpl
xor
push
in
and
or
cmpsb
inc
aaa
and
outsb
xor
roll
xor
or
or
fisttpll
testb
cmp
pushf
stos
xchg
cwtl
les
out
insl
je
ret
nop
scas
xor
pop
fiaddl
sbb
jb
and
sbbl
jmp
mov
pop
aaa
cltd
mov
or
cmp
aad
data16
js
scas
dec
cmp
pop
xchg
pop
jle
push
dec
mov
mov
mov
sbb
mov
andb
push
add
push
sub
icebp
cmpl
outsl
xor
pushf
movsl
xchg
popa
pop
movsb
adc
cld
movsl
dec
js
lock
mov
mov
cmp
mov
xchg
je
mov
push
pop
xor
push
jle
stc
mov
sti
add
inc
jmp
test
mov
pop
inc
mov
fadds
pop
repz
pop
movsl
cmpb
inc
mov
sub
cmp
outsl
xchg
ja
stos
push
add
pop
stc
popa
pop
cmpl
inc
push
testl
clc
and
adc
insl
mov
xchg
rorl
aas
in
mov
movsl
pop
dec
cmp
roll
dec
subl
outsl
dec
xchg
repz
jbe
jmp
lea
jmp
out
ss
push
jecxz
mov
sub
cmpsl
adc
fdivrs
pop
push
loopne
das
data16
cmp
ret
fwait
es
nop
jl
xchg
adc
mov
iret
imul
dec
rcrl
push
sbb
scas
cmc
pop
cmpsb
std
jle
ds
in
movsl
pop
pop
cmp
icebp
in
in
xor
add
cmp
and
adc
iret
inc
roll
daa
dec
mov
cmp
mov
cmpsl
ret
mov
pushf
add
inc
lret
cli
stos
mov
add
loop
ds
addr16
out
or
ja
hlt
add
pop
cmp
insl
and
sahf
jg
inc
jge
imul
out
jmp
lcall
pop
je
cmp
call
int3
xor
ds
add
adc
mov
inc
div
mov
adc
test
popf
or
jp
sbb
jmp
inc
and
negb
icebp
sub
sub
aas
fwait
in
pop
add
inc
fstl
lret
sub
sub
sti
out
or
inc
scas
and
mov
cld
std
lsl
rorb
xor
int
push
mov
pusha
lret
addb
inc
test
int
mov
lcall
or
xchg
jbe
js
sub
push
or
mov
xchg
pop
aas
pop
je
iret
out
lahf
test
fisttpll
mov
ficompl
fistl
add
push
xchg
sbb
xchg
or
lock
push
aas
sub
xor
add
test
sub
cmp
inc
push
jmp
mov
mov
push
inc
or
test
enter
pushf
mov
sub
pop
stos
nop
js
or
cs
call
xchg
scas
rorb
mov
lcall
sub
and
imul
mov
repz
push
xchg
pusha
xchg
adc
and
mov
sub
aam
stc
fdivs
push
mov
shll
fdivr
std
stos
jns
jl
push
push
stc
movl
jb
sub
pop
mov
add
pop
xor
nop
jnp
push
ds
data16
xor
add
adc
inc
insb
in
gs
or
xchg
loopne
inc
ficoms
xor
inc
cmc
inc
mov
aas
rolb
xchg
push
dec
mov
pop
add
lahf
lds
add
mov
mov
insb
xchg
fcmove
adc
jnp
test
fadd
nop
sti
mov
jge
jb
pop
push
xorl
xlat
add
mov
clc
xchg
jns
xor
pop
fimull
inc
jno
leave
inc
xor
jnp
sub
imul
xchg
push
mov
inc
fwait
sbb
mov
mov
fsubl
dec
aam
pop
aad
pop
pop
lret
pop
mov
loope
mov
cwtl
xchg
or
insl
lcall
mov
pop
or
aas
xor
call
cwtl
call
gs
sbb
inc
push
test
and
out
cmpsb
mov
cld
dec
or
ret
bound
push
push
push
jns
mov
inc
or
arpl
pop
sub
repz
push
add
repz
fdivrs
xchg
sub
fwait
pop
cs
cmp
add
mov
imul
repz
sub
mov
popf
lcall
mov
cld
divps
mov
dec
rcr
into
xchg
mov
push
cli
push
mov
dec
pop
sahf
jle
pop
xchg
mov
cld
dec
pushf
push
xor
pop
xor
pop
jge
push
popa
xor
jg
inc
push
push
leave
lods
leave
cmc
mov
mov
add
or
adc
jp
into
xchg
shll
push
cmpsb
sub
push
mov
pop
xor
add
pop
repz
push
es
out
mov
shrl
inc
imul
pop
popf
adc
lcall
stos
sub
cmpsl
cmpsl
xlat
dec
mov
mov
cmc
jmp
icebp
lret
imul
push
cmpsb
xchg
pop
xchg
cwtl
inc
inc
aad
cmp
sub
jl
loopne
cli
mov
and
and
cmp
mov
loop
push
push
dec
cmp
in
or
mov
xchg
jmp
add
jnp
push
insb
xor
xlat
scas
push
adc
loope
jle
mov
pusha
xor
pop
les
test
jmp
mov
mov
push
and
mov
repnz
add
jmp
pop
adc
rolb
dec
mov
inc
aad
mov
cld
and
and
xchg
repz
mov
in
adc
add
call
cld
out
mov
cmp
notb
sub
add
cmp
jp
sub
stc
call
mov
and
mov
jp
daa
add
jge
into
dec
mov
nop
incb
or
inc
lret
repnz
test
sbb
or
lcall
inc
fidivrl
push
sbb
jecxz
dec
jmp
cvtps2pi
out
mov
or
into
in
add
ljmp
outsb
aas
dec
lods
xor
dec
repz
cld
cmpsl
or
pop
xchg
push
daa
adc
in
es
sbb
test
lods
popf
and
push
leave
pusha
sub
fdiv
aam
ljmp
jb
xchg
jmp
mov
inc
sbb
daa
insl
rorb
divb
sbbl
lea
movsb
pop
scas
lea
dec
lds
rcrl
jle
fs
clc
cmp
sbb
dec
mov
jle
lock
sub
mov
sub
jnp
in
or
ret
add
popf
repnz
out
mov
pusha
push
adc
jl
fdivl
lds
cmpsl
pop
add
mov
frstor
push
pop
sub
jno
sbb
fadds
jge
or
nop
cmp
and
cmpsb
popa
mov
fsubr
dec
jmp
aaa
mov
xchg
shll
xor
lahf
cmp
sub
pop
inc
ds
repnz
pop
in
pop
pop
mov
ficoml
jae
repz
fs
rorl
inc
xor
stos
movsb
sub
cmp
xchg
insb
xchg
xchg
adc
cli
cs
imul
sub
pusha
add
clc
pushf
mov
sub
jne
scas
aad
pop
dec
add
push
sub
jmp
fisttpll
sahf
out
adc
lea
call
mov
aad
push
jno
push
mov
push
dec
jecxz
imul
sbb
movsl
adc
jnp
jne
mov
xchg
pop
imul
cmp
icebp
test
mov
mov
and
xor
in
lds
fs
pop
dec
push
jmp
mov
mov
loopne
fucom
and
jp
fldcw
ret
xlat
daa
jmp
mov
test
cmp
push
add
iret
jl
scas
in
jl
idivl
mov
dec
add
mov
loopne
inc
mov
mov
mull
mov
jb
roll
pushf
into
sub
or
inc
xchg
int
jge
pop
pop
mov
pop
fistpl
aam
js
jns
repnz
test
das
inc
pop
push
dec
ja
mov
mov
or
aad
sarl
cmc
mov
out
push
pop
inc
and
shl
sub
sarl
cs
xlat
sarl
or
jl
inc
loopne
sub
orl
pop
data16
jne
pop
mov
lds
pop
jae
fmuls
out
jnp
bound
lods
fucomi
and
and
jo
jle
cwtl
xor
pop
pushf
sub
xor
cltd
gs
cmp
dec
jae
in
shl
dec
pop
jg
jb
mov
mov
jg
cli
aaa
xchg
mov
lret
push
inc
mov
xor
and
loopne
xchg
aaa
adc
mov
pop
xchg
sarl
insb
pop
outsb
enter
outsl
push
cld
nop
les
scas
fwait
xchg
push
inc
lret
sbb
mov
jne
mov
outsl
in
adc
enter
add
fs
mov
sbb
and
dec
dec
incl
cmp
xchg
sub
add
icebp
gs
lods
call
sub
pop
dec
daa
add
outsl
movsb
pop
inc
fdivrl
or
pushfw
jecxz
dec
pushf
into
adc
bound
clc
movb
rolb
mov
cmp
fsubrs
jg
and
and
push
cmp
popl
lock
subl
adc
pop
mov
pop
and
mov
int
into
pusha
xlat
pop
jbe
pop
sbb
xor
push
call
mov
js
sbb
lret
xor
mov
fwait
xchg
or
je
repz
es
xchg
ljmp
or
ljmp
jecxz
adc
mov
shrl
pop
das
mov
push
mov
test
fisubrl
lods
xchg
pop
shl
xchg
dec
mov
jl
jae
jecxz
std
aas
testl
add
push
fistps
and
xor
call
ret
pop
add
push
mov
jmp
jne
outsl
out
pop
test
movsb
jno
mov
pop
xchg
cmp
jmp
sbb
mov
fisubl
xor
subb
shlb
lods
and
orl
hlt
cmp
sbbl
and
rcrb
stos
lods
rclb
into
jno
es
cwtl
sub
pop
lods
mov
pop
push
iret
notl
mov
fisttpll
xor
cmp
fists
mov
lret
movb
mov
sbbb
mov
cmp
xor
loop
rorl
in
mov
xchg
sbb
ss
les
and
jno
pushf
inc
insl
nop
ja
jbe
in
adc
sbb
cmc
and
push
addr16
adc
xchg
mov
fcmovne
add
add
push
dec
fs
in
jecxz
cmc
lret
pop
fcoms
lret
jp
push
fcompl
push
addb
lea
cltd
out
insl
or
fadd
mov
inc
dec
and
out
je
mov
jle
mov
subl
bound
or
or
push
xor
out
iret
mov
popa
test
in
fidivrs
out
mov
lock
push
mov
dec
jecxz
mov
inc
in
in
jecxz
movsb
sbb
xchg
movsb
scas
in
mov
cs
push
shr
or
dec
lea
jg
in
mov
test
mov
aam
in
inc
xor
addr16
dec
cmpsb
pop
push
rcll
notb
mov
push
pop
shll
cmp
mov
xor
icebp
fs
cld
shlb
das
pcmpgtd
jmp
and
and
ss
lcall
mov
mov
mov
les
rolb
lods
cld
je
pop
push
stc
mov
cmpsl
cmp
add
inc
lods
xor
lds
cmp
fsub
pop
adc
mov
push
cmc
fstpl
fmull
movsl
sbb
mov
mov
mov
inc
xor
loope
pop
xchg
lret
mov
ffree
cmp
out
lcall
mov
pusha
xlat
hlt
scas
adc
dec
add
and
jecxz
add
jp
inc
adc
fldenv
pop
repz
jge
ds
push
ljmp
cld
nop
cmpsl
mov
inc
into
sub
fmul
or
stos
je
lds
incl
test
lahf
sub
push
daa
cmpl
pop
mov
fnstenv
pop
popf
lret
mov
subb
cwtl
mov
inc
fucomi
icebp
lcall
fsubl
push
mov
dec
dec
lret
das
pop
ljmp
mov
aas
push
outsb
loope
arpl
clc
adc
scas
adc
push
enter
sbb
adc
sbb
les
mov
loop
pop
inc
inc
push
inc
bound
dec
lock
sub
xor
mul
insb
jne
pop
mov
lret
aas
and
outsb
pop
cmp
movsl
xchg
adc
mov
out
pop
cmovle
insb
mov
cli
jle
push
jno
mov
or
xchg
stos
cmp
xchg
pop
pop
ret
orb
mov
adc
push
outsb
lahf
xlat
mov
decl
xchg
inc
jne
std
cmpsb
shll
and
hlt
insb
mov
lret
dec
rol
mov
dec
or
jmp
lock
push
xchg
inc
add
std
mov
je
arpl
popf
loopne
repnz
jns
pop
fcmovb
flds
sub
insl
cmp
sub
aam
jnp
popa
gs
subl
mov
pop
or
addr16
sub
pop
mov
decl
inc
pop
or
pushf
xor
adc
gs
add
loopne
xchg
add
push
out
mov
inc
into
fcomp
mull
in
ret
mov
sbb
lcall
cmp
fwait
sbb
jmp
add
test
movsl
adcl
clc
popf
cmp
cmp
push
negl
pop
imul
in
or
mov
in
inc
adc
rol
xor
insb
cmp
rcll
out
in
or
stc
pop
cmp
adc
jecxz
aam
jae
sbb
push
jge
daa
fdivrs
dec
sub
mov
pop
add
repz
pop
out
pop
hlt
pop
in
push
cmp
jmp
push
repnz
push
shr
imull
das
loopne
in
int3
std
push
arpl
call
and
pushf
mov
hlt
dec
sti
lret
or
xor
arpl
and
add
inc
popa
mov
popf
cmpsb
aaa
fs
aas
sub
jb
mov
sbb
fnstsw
add
subb
push
cmp
xor
lahf
aaa
ret
fsub
xchg
repnz
sarb
cmc
push
popf
jno
popa
push
repz
mov
daa
cmp
push
jmp
adc
pop
pop
repz
fwait
mov
loope
les
sbb
inc
jno
loop
pop
or
pop
sbb
fsubrl
pusha
add
leave
lea
add
imul
push
jo
lods
movsl
arpl
int
inc
xlat
fbstp
pusha
repz
push
xor
aas
pusha
lret
pop
rcrb
lahf
addl
out
pushf
mov
cs
mov
push
sahf
xchg
inc
dec
das
int
xlat
and
mov
cli
test
rorb
bnd
mov
mov
mov
inc
jmp
and
arpl
xchg
lcall
jp
mov
sbb
ret
test
push
lcall
sub
stc
mov
sub
dec
adc
sub
adc
push
sahf
outsb
mov
push
cmp
mov
add
in
sub
mov
cmc
xchg
cmp
jmp
inc
ret
pushf
pop
mov
or
mov
mov
insb
pop
ja
cs
pusha
mov
mov
daa
das
push
loope
pop
cmpsb
mov
out
jns
sti
push
aas
je
test
cmpsl
push
and
and
fstpt
in
out
lahf
aam
ficoml
call
decb
jp
and
pop
inc
cmc
dec
cmpsl
cmp
fwait
jge
mov
lea
fidivs
xchg
xchg
cmp
cli
cmp
xchg
jecxz
sbb
inc
push
inc
dec
push
cli
cmp
in
mov
cmp
in
dec
popf
mov
loopne
or
add
jp
mov
adcb
xor
push
mov
mov
mov
dec
jmp
and
jl
mov
fwait
movhps
xchg
hlt
mov
dec
aas
leave
inc
popf
pop
adc
dec
daa
js
xchg
mov
or
dec
inc
into
sub
es
test
jo
into
sarl
sub
test
mov
minps
pop
aad
movsb
dec
jnp
insb
rcrl
test
ds
pushf
xor
daa
jecxz
test
test
add
push
mov
idivb
scas
push
pushf
ds
mov
ret
js
rcr
iret
ljmp
int3
ror
movsl
sbb
ljmp
lret
cmp
clc
rol
js
pop
ret
mov
adc
cltd
mov
sub
mov
mov
cs
fidivrl
xchg
xchg
test
fwait
lods
bswap
push
ffreep
pop
iret
pop
out
mov
add
or
jle
xor
mov
inc
pop
fldt
jae
push
fisubrl
mov
or
and
shlb
das
decl
cmp
insl
push
push
fldenv
andb
xchg
mov
pop
aas
push
cmpsb
imul
cli
xor
into
sub
pop
hlt
xor
es
push
jb
sub
cmp
adc
sub
push
orps
movb
pop
cltd
push
pop
repnz
inc
pusha
sti
aas
pushf
fldcw
mov
aas
jnp
lock
repnz
sbb
fs
cmp
jmp
push
in
std
dec
fnstenv
jbe
loop
icebp
inc
fbld
cmp
ja
mov
push
inc
ret
or
jg
into
lods
cltd
orl
cld
inc
data16
mov
pop
aaa
sub
movl
dec
or
push
push
cmpsl
pop
imull
jne
js
push
jl
loop
mov
cmp
and
pushf
adc
aad
shll
pop
sbb
mov
int3
in
xchg
stos
movsl
aas
cmp
fsubl
aad
mov
in
lea
xchg
xor
cmc
push
jmp
pop
lret
sbb
mov
adc
and
ret
popw
dec
fimull
jnp
jmp
mov
jp
sahf
movsb
test
cs
sbb
mov
mov
test
ds
arpl
xchg
lret
pushf
ficoms
lcall
pop
push
add
imul
cmp
add
push
push
dec
out
lods
popa
shrl
mov
mov
jo
xlat
inc
call
rcr
dec
xchg
mov
sub
sbb
jo
hlt
cs
pop
mov
cmpb
enter
jo
mov
adc
xchg
popf
pop
jl
je
or
fistps
movsl
or
movsl
les
pushf
mov
pop
sub
daa
xor
call
loope
sahf
idivl
mov
jns
xor
jecxz
inc
das
mov
push
pop
cwtl
ds
les
push
popa
jecxz
jne
jmp
fsubrs
xor
push
out
out
mov
aas
push
cmp
or
mov
pop
jns
lds
xor
inc
push
dec
fnstcw
in
mov
gs
pop
int3
je
xchg
aaa
in
xchg
push
dec
xor
lret
push
mov
add
mov
gs
enter
adc
cmp
pop
pop
fildl
xor
movsl
ja
int
sub
fucomi
add
enter
inc
push
xchg
pop
movsb
xchg
or
test
mov
pusha
xchg
pop
int3
iret
movsb
lcall
jge
mov
jle
adc
fsts
xor
leave
pusha
incb
inc
dec
sub
jecxz
aam
push
push
xchg
outsb
add
and
pop
aaa
adc
gs
or
shll
subb
push
sti
jg
insl
cs
jne
xorb
cmp
inc
cs
shlb
imul
push
add
inc
cmpsl
mov
fwait
icebp
lahf
inc
jp
jle
ja
rorl
cs
jae
enter
pop
cltd
jb
lret
sbb
fwait
int
xor
push
mov
ja
mov
jmp
cmc
sahf
sbb
loop
pop
and
stos
decb
int
mov
ss
mov
scas
pop
mov
pop
out
das
sbb
daa
in
pop
loop
adc
cmp
jbe
test
mov
sub
jle
movsl
sub
ss
xchg
mov
push
and
in
in
xor
sbb
push
mov
jl
xchg
test
pop
sbb
jp
pop
rcll
mov
push
pop
addr16
fstps
cmpl
repnz
push
aaa
test
adc
pop
push
jb
lcall
fcmovu
pop
or
jnp
dec
call
mov
outsb
hlt
rcrb
lcall
ljmp
outsb
lock
jle
mov
dec
imull
inc
dec
pop
in
nop
sub
icebp
outsl
das
sub
fdivl
hlt
enter
sahf
test
dec
sbb
jmp
push
out
jns
xchg
leave
cmp
lods
xchg
mov
pusha
or
scas
mov
in
mov
cmp
subb
out
mov
xor
jle
inc
loopne
ret
aaa
push
or
dec
fnstenv
pop
nop
mov
xlat
insl
adc
stos
dec
je
mov
dec
mov
test
adc
mov
mov
not
cmp
mov
mov
sub
add
inc
aas
lahf
pop
out
test
mov
loope
in
lds
push
pop
push
mov
or
sbb
andb
xchg
or
andb
popa
xchg
mov
push
outsl
icebp
or
or
js
sub
lahf
push
inc
jb
lea
adc
pusha
and
cli
xor
sub
lcall
mov
push
jle
popa
mov
adc
mov
test
sub
mov
sub
aas
xor
ret
mov
fsubr
xlat
dec
mov
and
xor
mov
inc
or
fisttpl
mov
imul
push
inc
jecxz
mov
cli
ret
insl
mov
cmp
leave
clc
jae
into
fidivs
dec
add
dec
or
ljmp
mov
sbb
cmp
adc
shr
lea
jge
and
pop
call
fidivs
sbb
fldcw
jmp
xor
cmp
mov
movsb
push
out
pop
pop
popf
inc
shll
jne
negl
xchg
outsb
mov
lcall
mov
test
mov
jnp
mov
arpl
mov
stos
or
daa
pop
and
fisubrl
mov
out
fcomip
mov
stc
mov
push
adc
mov
xchg
in
inc
mov
mov
ljmp
imul
sbb
xor
and
addl
pop
out
outsl
and
mov
inc
lods
push
stos
mov
add
enter
adc
or
inc
jl
mov
leave
sti
sbb
outsl
shlb
fisttpl
filds
xchg
bound
fisubrl
clc
jb
pop
jp
pop
es
movsb
shlb
jne
std
out
nop
dec
cmp
test
popf
push
and
dec
les
in
push
int
fisttpll
test
sbb
icebp
mov
adc
or
pushf
xchg
sti
ret
mov
fcom
out
pop
xor
push
add
push
and
jnp
adc
loope
xchg
imul
inc
fildll
or
sbb
pushf
xchg
dec
jno
push
jnp
out
cmpsb
inc
sbb
fcmovnu
and
js
xchg
jmp
inc
aad
add
bound
ljmp
nop
jno
push
mov
xchg
dec
sbb
vmulpd
jae
mov
mov
fcmovb
push
cltd
xchg
xchg
lock
jne
jmp
in
inc
cmc
orb
adc
data16
cmpsb
sub
push
sub
jns
dec
jmp
add
dec
mov
ret
pop
cmpsb
pop
push
repz
mov
movsl
mov
xlat
ds
or
mov
mov
testl
mov
jl
push
pushf
mov
int3
sbb
xchg
ds
mov
mov
cmpsl
xor
xchg
adc
sbb
sbb
rcpps
movw
dec
push
mov
and
pop
daa
mov
out
mov
adc
cmpsl
or
repnz
lds
loop
jle
pop
dec
bound
insb
push
int
adc
fidivl
test
loope
fidivl
out
jg
push
xchg
or
mov
popf
cmpb
lock
lcall
jo
aas
mov
jp
inc
sub
and
pop
jecxz
cmpsb
cmp
cmp
push
stos
pop
pushf
ret
cmp
cmp
outsl
pop
je
in
inc
ljmp
sub
in
and
scas
dec
jl
add
fsqrt
enter
or
push
push
inc
dec
aas
nop
call
jnp,pn
jne
sbb
mov
or
cmp
pop
out
dec
xlat
push
out
sti
popf
pusha
jmp
dec
cs
scas
pop
push
movsl
scas
mov
std
jmp
mov
cmp
insb
test
stos
out
hlt
divb
xor
sbb
inc
push
outsl
nop
and
push
lock
sarb
or
cmc
fnstcw
cmc
ss
daa
dec
stc
cmpsl
jg
cmc
cmpsl
insl
or
push
mov
lcall
mov
repnz
mov
mov
sub
jnp
mov
cwtl
inc
jge
inc
push
das
jo
sbb
in
sbb
cli
pop
push
xor
jno
scas
xor
push
andb
lock
pop
jle
inc
xor
outsb
cli
cmp
cwtl
mov
fistpll
jmp
sahf
cltd
dec
stc
or
js
jae
std
push
subl
stc
or
dec
push
mov
insl
push
sub
jl
imull
cmc
imul
xchg
fbstp
loop
push
lock
stc
cmp
jl
xchg
inc
mov
nop
ljmp
sahf
adc
fs
icebp
aaa
pop
or
in
std
and
or
iret
ret
scas
fcomi
mov
push
imul
bound
out
pop
pop
imulb
pop
kmovb
xchg
pop
push
neg
aad
nop
nop
lds
jne
js
lds
jge
mov
mov
jmp
and
in
sub
call
push
sbb
mov
das
sbbl
xor
pushf
cmp
icebp
aas
jecxz
push
insb
pop
ja
fdivl
clc
fstl
std
pop
dec
add
or
pop
pop
mov
lea
mov
stc
rcrl
loop
nop
inc
adc
shlb
es
daa
hlt
notl
test
dec
and
jge
lahf
ja
add
jns
xchg
cmp
decb
push
xchg
and
mov
cmp
outsb
or
scas
adc
test
mov
inc
mov
std
in
mov
pushf
ljmp
out
je
sub
sahf
pop
dec
jl
dec
or
stos
fs
add
inc
in
adc
xchg
push
push
mov
jmp
loope
xor
xchg
movsb
ja
pop
std
rcll
push
mov
xor
les
in
andb
in
jmp
jae
push
adc
add
mov
add
xchg
fcmovu
movsb
push
xlat
sahf
int3
arpl
sub
inc
mov
je
sbb
mov
sbb
sbb
xchg
mov
loopne
std
mov
popf
sahf
cmpsb
into
inc
push
jmp
clc
jmp
add
dec
pusha
imul
popf
stos
rcrl
stos
pop
inc
dec
mov
jecxz
sbb
inc
pop
shrl
mov
sub
inc
mov
pop
loop
out
and
std
movsb
pop
and
addr16
sbb
add
add
add
aaa
jmp
pop
xor
or
mov
xor
pop
outsl
sub
pusha
add
xor
xchg
xchg
jmp
xchg
pop
inc
cmp
lahf
jge
mov
fsubs
scas
push
add
pusha
arpl
or
das
gs
fwait
mov
pop
jo
push
stos
inc
les
sub
std
nop
adc
dec
loope
or
jecxz
mov
mov
js
lcall
cmp
flds
pop
mov
mov
xchg
sbb
pop
nop
dec
sub
and
je
cmp
leave
hlt
mov
add
push
inc
xchg
fiadds
push
and
mov
in
fsubl
lods
inc
cmp
push
stos
outsb
sahf
lock
mov
loop
inc
and
pop
sbb
mov
cmp
movsb
cmp
lahf
sbb
stos
test
jmp
and
push
jl
out
imul
enter
std
mov
jle
adc
out
sbb
addl
sti
add
fldl
mov
lsl
push
push
jne
pop
mov
aas
ss
mov
pushf
es
jbe
pop
mov
xchg
out
inc
or
imul
xchg
out
cmpsb
adcb
inc
cmp
inc
nop
push
mov
and
or
sbb
in
cmpsb
adc
jmp
lcall
rcll
ds
and
cmp
jae
or
sbb
mov
xchg
xchg
cltd
or
inc
pop
or
mov
ss
fwait
xchg
mov
enter
xchg
add
lock
push
mov
sti
hlt
jl
inc
es
xchg
adc
mov
call
mov
jae
push
cli
movsl
dec
xchg
fistpl
xchg
cmpsb
popa
xchg
js
ret
mov
cs
cmpsb
cwtl
xor
daa
mov
loop
mov
mov
add
jns
jb
das
xchg
stos
pop
mov
xor
inc
inc
xor
stos
fsubr
cmp
xchg
jb
cmp
les
aad
mov
aam
test
insb
cld
rorl
and
mov
mov
in
push
add
dec
pop
das
add
cmp
pop
test
fiaddl
or
dec
dec
dec
test
in
test
pop
mov
xchg
pop
sti
mov
add
je
xor
push
ss
mov
sbb
add
mov
js
nop
add
mov
les
loope
adc
dec
cmpsb
add
adc
sub
aad
testl
jno
clc
mov
lock
sub
je
cmp
mov
and
fucomp
icebp
outsl
xchg
pop
dec
and
add
mov
call
cmp
fdiv
adc
xchg
sbb
setbe
adc
mov
sub
aaa
dec
xchg
fwait
xchg
cmp
shrb
insl
jne
sbb
movsl
adc
dec
iret
sbb
insl
xlat
out
out
xor
pop
push
test
or
pop
push
aaa
int
bnd
cmp
cld
fcoms
sub
in
bound
inc
add
push
test
pop
jmp
pushf
addr16
roll
fdivl
jmp
push
add
ljmp
dec
outsb
int
sub
enter
das
jp
push
dec
pop
mov
les
mov
daa
sbb
xor
jbe
mov
pop
jmp
mov
mov
push
push
jno
fcomps
adc
roll
mov
cmpsb
sarl
aad
xor
ljmp
outsl
sub
pop
mov
dec
addl
int3
lea
pop
dec
outsl
lret
xchg
arpl
aaa
int
sub
into
sbb
int3
push
mov
cmp
sbb
inc
lret
or
aaa
int3
mov
cld
rcrb
fwait
ds
sbb
xchg
popf
into
gs
inc
mov
and
push
fs
stc
sbb
add
leave
xchg
pop
xchg
mov
mov
jmp
fldcw
mov
les
jge
push
fdivs
mov
xchg
cmp
pop
je
imul
rorl
jle
xchg
inc
repz
jb
sbb
xor
jp
mov
aam
cli
push
sahf
jbe
rol
jno
bnd
int
lret
cli
lret
push
mov
fcomps
or
pop
jg
push
xor
inc
pop
xchg
push
mov
in
adcl
movsb
mov
sub
xchg
je,pn
mov
sub
inc
cmp
stos
mov
and
sub
mov
dec
dec
sahf
jb
cmpb
test
and
sbbl
add
sbb
xor
out
sub
cmp
adc
add
loopne
xlat
loope
inc
sbb
cli
loope
mov
jmp
idiv
or
cmp
mov
pop
loope
nop
cmp
sbb
sub
aad
cmp
nop
mull
fwait
mov
shrl
movsl
cs
idivb
mov
ljmp
stos
or
push
rorl
repz
arpl
dec
jge
sarl
pop
sti
jge
mov
or
sub
or
loop
sbb
addr16
cmp
movsb
test
adc
sar
pushf
dec
adc
cmpsb
int3
mov
test
sub
flds
cmp
lret
enter
xchg
sbb
push
roll
push
inc
es
pop
iret
stos
sbb
jb
leave
sub
push
or
cs
addr16
scas
leave
jl
sub
lock
adc
repz
ret
jbe
xchg
and
mov
xor
jns
imul
shl
nop
xchg
inc
filds
movsb
in
arpl
cwtl
cmpsl
mov
iret
push
mov
cmpsb
scas
arpl
and
les
push
in
lods
incb
mov
pop
and
fcomps
icebp
mov
popa
add
push
shl
daa
inc
jno
cmp
cmp
lret
pop
adc
lods
aad
adc
pop
loopne
mov
mov
or
loope
push
mov
inc
xor
inc
cmp
invd
mov
lds
bound
rolb
stos
andl
cwtl
shl
add
clc
lods
sar
pop
cmp
lret
bound
cmp
cs
insb
ds
dec
mov
mov
lret
clc
das
pop
xor
lock
or
and
dec
pop
sub
mov
cmp
pushf
cmc
jmp
insl
and
out
dec
insl
test
mov
arpl
cmpsl
or
inc
or
enter
xchg
test
dec
pop
dec
xchg
test
or
xchg
mov
movb
adc
pop
mov
jg
fs
ds
adc
pushf
test
mov
jne
push
test
cmp
mov
add
mov
mov
xor
int
mov
dec
fbstp
pop
nop
stc
adc
js
cmpsb
aaa
rcrl
ss
jns
cwtl
sbb
adc
sub
fwait
xor
cli
aad
xor
dec
test
lock
int
and
out
jnp
insl
jmp
inc
call
fistl
aas
push
xchg
sarl
inc
xchg
movq
hlt
cmp
add
fdivs
movsb
filds
call
repnz
stos
and
mov
jo
int
dec
pusha
dec
ds
adc
inc
cmp
jae
jg
nop
cld
ss
int3
stc
sub
in
add
rorb
int3
mov
adc
xchg
mov
xchg
add
or
xchg
loop
push
add
mov
pop
mov
mov
cwtl
mov
dec
mov
enter
call
adc
loope
and
dec
lods
inc
mov
in
jo
mov
lods
into
int
push
mov
insb
in
dec
scas
xchg
push
decl
sbb
push
jecxz
arpl
sbb
in
pop
push
lock
mov
mov
leave
lahf
test
cs
and
aas
aam
pop
mov
pop
sbb
subb
cld
add
loope
fcomi
icebp
shrb
pushw
cmp
fcomi
ja
and
jb
lods
repz
inc
xlat
pop
lret
js
add
adc
adc
sub
mov
push
add
sub
imul
std
pmullw
sub
test
repnz
outsb
gs
in
xor
xchg
fldcw
dec
gs
xor
dec
imul
imul
test
inc
aad
cwtl
dec
inc
push
jecxz
call
nop
sar
mov
rclb
js
jmp
gs
ds
shll
mov
mov
inc
pop
dec
ja
push
push
inc
jne
stos
outsl
andl
pusha
lret
and
jmp
mov
insl
cmpsb
js
and
in
ficoml
jge
mov
push
fisubl
pushf
lds
movsl
xchg
repz
mov
dec
test
idivb
rorb
sub
ljmp
test
or
outsl
dec
pop
rorl
hlt
add
lods
subb
mov
lea
shrl
out
shl
mov
hlt
mov
movsl
mov
call
lea
movsl
sub
pop
inc
dec
ds
push
in
or
clc
xor
xchg
inc
xor
mov
test
or
or
pop
insl
add
cltd
jnp
pop
outsb
mov
xchg
popa
inc
dec
ret
xchg
lea
adc
lret
lea
sub
in
icebp
add
jecxz
fimuls
xor
add
jnp
xchg
jbe
push
dec
inc
dec
stc
aam
imul
test
sbb
pop
in
enter
pop
xor
test
dec
movsl
cmp
push
testb
or
mov
lea
add
mov
adc
shlb
mov
jle
in
aad
daa
test
sub
mov
subl
adc
jne
dec
inc
xchg
insl
ret
mov
mov
adc
incl
mov
lea
push
rcrl
push
adcl
andb
inc
mov
pushf
in
adc
fldl
imul
jbe
ret
mov
dec
bound
lods
or
cmovle
xor
lods
push
mov
jle
cmpl
mov
pop
in
mov
jno
pop
arpl
or
sahf
pop
ret
nop
sub
out
pop
stos
mov
pusha
or
sbb
loope
loop
lods
out
pop
pop
add
pushf
in
lea
fnstenv
stos
adc
test
stos
cmc
inc
out
fmuls
jg
mov
push
jge
subl
mov
xchg
addb
cltd
adcl
cmp
inc
sbb
imul
push
shll
or
mov
xchg
or
xchg
mov
sbb
nop
call
pop
or
data16
fidivrs
push
add
ret
imul
or
ss
fisttpl
es
xchg
dec
sub
int3
repz
mov
mov
xchg
int
aaa
pop
lods
mov
or
mov
fld
dec
lret
std
or
cmpsb
push
ss
lods
pop
sbb
xchg
xchg
shl
sar
jb
popf
ss
cmp
sahf
loop
mov
xchg
jae
lcall
roll
gs
test
cltd
in
add
lahf
ror
push
add
cmp
pop
das
or
xor
pop
push
loop
jb
add
and
add
push
cmp
push
xchg
jecxz
and
jmp
jno
into
jb
test
pop
loopne
push
or
xchg
pop
and
add
jg
jns
sub
shll
cli
xor
jo
cwtl
sbb
jo
pushf
or
movsl
jmp
mov
lock
loope
push
cwtl
bnd
mov
xor
lret
fisubrs
stos
rcr
cwtl
testb
loopne
jbe
mov
pop
std
and
cld
xor
mov
leave
mov
hlt
leave
sub
daa
stos
out
arpl
adc
lea
stos
fdivs
add
ja
and
add
data16
cmpsl
xchg
std
jno
js
push
mov
mov
mov
cs
arpl
int3
push
jl
rol
loope
sub
mov
outsb
mov
addr16
push
test
nop
cmp
cmp
divl
add
adc
enter
sbb
bound
cwtl
pop
popf
sahf
jb
pop
mov
je
inc
xor
mov
test
jg
add
and
dec
aaa
nop
cmp
jle
inc
out
rorb
mov
add
cld
addr16
xlat
clc
sbb
xchg
lods
sbb
sub
mov
xchg
mov
pop
add
data16
lds
mov
jbe
dec
stos
loopne
push
xor
pop
pop
xor
adc
push
jmp
sti
pushf
xor
cld
push
adc
sub
xchg
mov
inc
cld
mov
jle
dec
push
pop
xor
adc
sbb
push
repz
hlt
insl
inc
sub
xchg
mov
pop
mov
or
stos
add
mov
sub
or
xchg
xor
testb
sub
test
imul
gs
push
push
xchg
pop
mov
in
lret
rcrl
jge
mov
inc
jmp
test
xchg
sub
scas
lock
in
repz
imul
je
jcxz
sbb
jne
out
js
aad
dec
xchg
lock
and
inc
push
inc
add
pushf
pop
xchg
jnp
or
pop
loopne
fdivl
sbb
in
cltd
or
inc
hlt
daa
add
sbb
jp
mov
mov
test
fcoms
sbb
sbb
sbb
aam
aas
out
mov
inc
jg
loope
lcall
je
ja
aas
aas
cmpb
xor
aad
mov
jns
push
lods
jl
stc
pop
jg
scas
stos
mov
cwtl
std
movsb
scas
je
cmp
loope
lds
dec
and
jl
pushf
mov
std
push
adc
loop
sbb
pop
xchg
mov
mov
dec
aam
dec
repz
lock
gs
loopne
jge
jle
dec
add
aas
inc
jecxz
jbe
inc
popa
mov
xchg
mov
lret
dec
pop
aaa
sbb
ja
shlb
cmc
sbb
testb
lock
jo
dec
sbb
mov
adc
cld
mov
cmp
dec
mov
sahf
xchg
mov
and
imul
rol
idivb
icebp
push
adc
aad
movsb
xchg
lret
test
cmpsb
and
cmpsl
xchg
mov
fisttpl
xchg
xchg
subb
and
xor
ret
cld
dec
test
aam
int3
ds
mov
ret
rorb
or
das
rclb
fistpll
ffreep
out
bound
push
cmp
or
sbb
mov
decb
xor
xlat
push
movsl
mov
pop
scas
loope
lea
movsl
sub
clc
nop
aas
xor
cmp
xor
sub
or
sub
incb
push
sti
loopne
sub
enter
sahf
fs
fidivrs
push
inc
lcall
sub
fcompl
int3
push
cwtl
pop
aas
cmp
adc
and
std
test
push
dec
ficompl
test
adc
dec
sbb
push
pop
dec
push
and
call
push
mov
movsl
into
pop
cmpsb
mov
xchg
xchg
test
outsl
xchg
mov
add
je
in
dec
in
pusha
mov
push
inc
aad
push
in
cmp
mov
and
fmull
es
jno
cs
fmuls
jecxz
in
push
sbb
test
sbbb
or
mov
mov
es
mov
inc
sbb
outsl
scas
jg
cmp
lret
push
arpl
cmp
xchg
outsb
loop
push
sbb
xchg
sets
mov
add
push
adc
fwait
std
xor
leave
lock
out
dec
fidivrs
repnz
repnz
jno
lds
sbb
xor
inc
add
xchg
mov
int
adc
xchg
push
push
aaa
les
in
mov
cmc
mov
fsubrl
and
dec
rorb
je
xor
icebp
pop
iret
sti
or
daa
xchg
js
mov
scas
push
mov
div
aam
test
fiaddl
adc
lahf
sahf
fcompl
xor
imulb
sar
jne
loope
scas
gs
daa
cmp
or
subb
or
jb
in
inc
cmpsb
mov
repz
roll
icebp
jbe
dec
xchg
jne
sbb
fnstsw
push
jae
mov
push
insb
xlat
jp
add
inc
xor
aaa
adc
clc
iret
add
dec
xchg
jb
shrl
jo
lods
filds
les
mov
mov
leave
je
cli
stc
orb
in
jne
stos
stos
xchg
int3
add
in
xor
adc
mov
mov
imul
xchg
into
inc
pop
sub
fsubr
kxnorw
push
cs
clc
es
mov
push
rorb
ja
jmp
pusha
pusha
jecxz
cmpb
adc
cmpsb
mov
cld
mov
loopne
sub
in
add
nop
sbb
jg
add
inc
icebp
xchg
js
dec
push
mov
cmp
aad
cmp
mov
xor
lods
dec
or
push
pop
sub
inc
cmpsl
dec
in
pop
popa
jnp
shrb
vmwrite
mov
pop
pop
adc
inc
xchg
fists
in
sbb
mov
out
lds
pop
cmp
arpl
add
in
in
adc
push
lret
dec
movsb
popa
pusha
mov
pop
cmp
aas
ret
shrb
inc
sub
dec
adc
pop
xorl
icebp
imul
lea
adc
test
or
jmp
outsl
cmp
iret
andb
xchg
fwait
in
pop
sub
loopne
stos
outsb
mov
and
sbb
mov
lods
jg
aas
sbb
cmp
add
ljmp
dec
lret
pushf
cs
stc
xchg
and
lcall
pop
fildll
mov
jne
xor
jmp
mov
jge
xchg
scas
lods
imul
add
fsubl
mov
aam
jae
daa
push
js
dec
cmpsl
popf
mov
pop
pop
out
dec
fld
movsl
sub
fnstsw
mov
stc
mov
sub
imul
pop
cmpsl
adc
jmp
das
adc
push
mov
adcl
lea
insl
out
stc
ds
xorb
cmp
fistl
mov
aaa
in
int3
xchg
xor
xchg
sub
std
lret
fidivs
jbe
out
insl
sbb
dec
mov
sub
adcb
xchg
jbe,pn
pop
add
mov
fnstcw
cld
fsubs
sbb
sub
test
nop
int
push
pop
enter
cs
sub
lahf
pop
mov
cmp
nop
jno
mov
push
pop
xchg
pop
cmp
rol
pop
xchg
stos
loope
adc
test
in
jae
imul
push
repnz
fs
dec
sub
out
scas
xchg
data16
popa
loope
leave
and
sbbl
jmp
ds
ret
lock
pop
mov
push
inc
clc
lret
pop
out
cwtl
mov
xchg
ds
stos
adc
sbb
test
add
fiaddl
and
cld
scas
aas
ds
into
mov
dec
adc
iret
imul
pop
imul
shrl
mov
lcall
leave
fisubs
leave
scas
mov
and
mov
pop
inc
stc
aam
loopne
sahf
lods
pop
fidivl
fnsave
sbb
mul
mov
mov
leave
and
dec
lods
cwtl
mov
push
test
into
popa
int
sbb
mov
jl
inc
and
shrb
loopne
lret
jle
sbb
xor
mov
out
out
jbe
out
fists
arpl
xor
out
cmp
mov
mov
aas
insb
lock
sahf
int3
movsl
add
imul
xchg
xor
fiadds
fcmovb
addr16
sbb
cmp
in
lret
test
addr16
mov
jns
or
add
popf
or
jae
hlt
xor
mov
dec
dec
or
scas
pop
cmp
mov
es
imul
cmp
loopne
fsubl
fwait
sbb
jnp
icebp
icebp
xchg
scas
cmc
push
enter
mov
clc
loop
mov
and
pop
mov
sub
pop
push
xchg
xor
mov
add
ds
sbb
out
hlt
fwait
neg
or
jg
loopne
pushf
insb
xor
test
xor
insb
and
lods
push
in
push
ret
inc
sub
das
inc
cwtl
andl
flds
lcall
adc
jle
mov
leave
mov
sbb
xor
gs
mov
fnsave
mov
scas
inc
fldl
dec
xor
adc
inc
pop
pushf
outsb
outsl
negl
inc
scas
ret
jecxz
test
mov
iret
stos
int3
fcmove
or
mov
sahf
xchg
mov
dec
dec
xlat
mov
aas
scas
pop
mov
fdivrl
add
pop
imul
or
add
cmp
mov
sbb
mov
mov
jmp
sub
pop
mov
mov
mov
or
cmpsl
and
inc
pop
push
push
cwtl
jns
int3
or
or
testb
xor
shlb
loope
popf
mov
push
es
push
push
in
pop
into
mov
mov
ds
test
sub
pop
lods
fistl
addb
pop
mov
fsubrs
xchg
jo
pop
pop
xchg
dec
das
out
adc
and
aas
stc
sbb
stos
push
jp
dec
inc
mov
movsl
outsb
jnp
cmpsb
fistps
cld
inc
lcall
lahf
jmp
pop
cmpsb
addr16
dec
push
insb
sbbb
andl
arpl
rorl
loope
xlat
jge
jb
clc
xchg
shl
sub
mov
cmpl
shr
push
xchg
call
jne
clc
xor
lock
test
into
adc
xchg
out
lret
or
push
pop
mov
and
test
mov
xchg
aaa
out
xor
cmp
mov
pushf
rorb
push
xor
mov
inc
inc
decl
jp
jl
fcoml
mov
jg
pop
dec
in
pop
cmp
out
jge
cld
or
insl
scas
sub
push
jnp
xlat
push
xor
mov
das
or
add
fimuls
dec
bound
sbbl
or
sbb
or
or
lods
je
jnp
push
mov
out
pop
mov
repnz
xchg
popf
xchg
iret
cli
mov
adc
or
jl
mov
xchg
loop
xchg
sub
out
pop
dec
icebp
loope
das
in
popf
cld
lret
jmp
jbe
mov
push
out
faddl
mov
mov
sbb
sti
adc
into
popa
ljmp
inc
mov
mov
popf
add
test
sti
popf
add
push
hlt
push
data16
mov
pop
adc
xor
xor
fscale
scas
add
mov
ffree
test
jns
and
aaa
xor
mov
mov
pcmpeqd
in
xor
xor
ss
into
mov
xchg
push
clc
push
out
and
gs
leave
cmp
rcr
movsb
imul
in
out
leave
sub
popf
mulb
imul
shll
pop
mov
ss
mov
cmp
sbb
adc
jb
je
inc
mov
jae
vunpcklps
mov
cmp
mov
es
fbld
or
das
lea
pop
sti
xchg
test
fs
xor
jle
ret
add
mov
sahf
repnz
push
jp
and
call
popf
push
adc
js
xor
mov
adc
or
cmpsl
outsb
ficomps
ss
mov
adcl
subl
fmul
pop
jmp
xor
jge
cwtl
xchg
cmpsb
mov
sub
jg
mov
or
shr
hlt
nop
jae
jg
aam
aas
add
cld
xchg
lods
jg
mov
cmpsl
lret
mov
xchg
ljmp
test
loope
int
pop
std
decl
xchg
cwtl
jl
mov
push
andb
inc
ret
jle
lock
jle
or
call
mov
pop
pop
jae
jmp
sub
sub
stos
xchg
jns
nop
repz
or
pop
xchg
sbb
hlt
xor
mov
pop
or
loopne
fwait
enter
mov
je
les
imul
push
rolb
fxch
dec
js
mov
and
loop
inc
sbb
iret
aad
std
ret
dec
adc
mov
insb
jo
and
arpl
inc
aam
es
jnp
jp
test
ljmp
movsl
fiadds
inc
scas
cmp
addb
jmp
repz
dec
call
sub
ret
subb
mov
mov
in
icebp
adc
je
icebp
mov
cltd
test
insl
pop
add
and
push
xchg
mov
push
jecxz
aaa
les
push
adcl
cld
push
js
sbb
cld
adc
xchg
into
and
movsb
or
jle
inc
mov
sbb
loop
mov
sti
mov
je
shlb
jb
jb
sub
aad
push
xchg
and
cltd
adc
dec
xor
adc
mov
sub
or
fidivrs
mov
lds
rcrl
ret
icebp
iret
hlt
movb
js
or
sub
and
cmpsl
xlat
push
das
add
popa
inc
mov
insl
gs
dec
adc
jo
push
test
lods
cs
test
xchg
jb
cmpsl
add
cltd
pop
stos
lds
add
add
sti
cmp
jmp
lret
nop
lds
inc
add
loopne
hlt
jg
icebp
ljmp
add
pop
test
mov
ret
sbb
ja
aad
dec
xchg
sub
idivl
lahf
pop
cmp
mov
ret
push
in
fisubrs
outsl
loopne
das
sub
ficomps
setb
cltd
shlb
xchg
jmp
out
mov
sbb
lret
sub
jne
test
push
dec
mov
stos
nop
jmp
fldln2
push
std
cmp
outsl
adcl
test
out
sub
sbb
jns
jo
and
das
or
push
mov
sbb
je
and
mov
mov
add
push
or
adc
xchg
jge
mov
xchg
cmp
mov
dec
addr16
lock
or
addr16
out
outsl
mov
in
aaa
push
pop
aas
call
sarl
lcall
iret
mov
adc
lds
jge
jbe
mov
sub
jge
dec
test
and
in
or
scas
fucomi
rclb
dec
inc
fdivrl
mov
aaa
or
mov
fisubl
sbb
aad
inc
icebp
daa
mov
pop
scas
mov
or
mov
and
mov
xchg
dec
in
daa
xor
jb
mov
inc
gs
inc
insb
in
out
pop
adc
lds
jb
mov
and
cmp
filds
lret
push
xor
jns
sub
lret
pop
sti
jmp
insl
sbb
xchg
call
enter
cmp
mov
fcmovnb
mov
sub
add
adc
xchg
test
and
cmpsl
dec
xchg
enter
enter
pushf
cmpsl
dec
lods
jno
mov
out
mov
pop
fisubrs
in
xor
lea
mov
leave
adc
cmpsb
scas
pop
cmovp
push
pop
sub
scas
and
adc
and
popa
mov
andl
or
mov
sub
add
data16
add
rcl
ja
loope
add
lods
jmp
lods
notb
and
mov
dec
aam
push
add
divl
push
add
mov
push
or
xchg
mov
jne
in
xlat
mov
sub
xlat
adc
push
loopne
sti
jbe
inc
ja
dec
mov
sbb
xchg
adc
dec
cmpb
mov
push
mov
rorl
xor
sub
jmp
and
clc
sub
jl
mov
jg
sbb
shl
in
push
cmp
bound
lahf
dec
push
push
cmp
aaa
jmp
cwtl
stos
cmpl
mov
icebp
push
sbb
adc
fimuls
xchg
inc
outsb
mov
inc
mov
push
dec
sub
pop
movsb
mov
mov
ljmp
sarl
mov
or
sahf
xchg
jle
clc
stos
loop
add
js
sub
dec
lret
push
int
inc
sbb
mov
or
sbb
in
insl
inc
mov
mov
ficoml
mov
out
ret
in
push
pop
sub
or
dec
adc
jl
jge
addr16
arpl
push
test
push
add
mov
pcmpgtb
and
jg
nop
cmpsb
adc
dec
mov
lret
repnz
sahf
icebp
lods
sub
mov
mov
call
pop
mov
stos
or
stos
pop
lds
jmp
into
shll
xor
push
pop
rol
test
mov
inc
and
push
mov
loopne
pop
mov
int
cmc
lea
push
jg
sub
imul
mov
xor
addr16
fisubrs
add
mov
call
push
xor
loope
push
insb
pop
jle
mov
clc
sbb
jg
jno
dec
cli
sub
ljmp
lcall
cmc
and
xchg
lahf
test
adc
mov
dec
mov
popa
add
divb
pop
test
or
out
hlt
add
leave
xor
pushf
mov
roll
jno
mov
push
fcoms
push
push
daa
cmp
call
cmp
mov
sar
mov
cwtl
sti
cs
ja
daa
in
add
movsl
ds
cmp
push
popf
xor
fiadds
fwait
lods
ret
dec
shr
mov
decb
ret
movsl
inc
or
sti
insb
push
sub
mov
add
imul
insl
xor
cmp
out
jg
insb
dec
mov
sub
cltd
sub
data16
outsl
inc
jecxz
push
push
arpl
push
in
xchg
xor
push
dec
inc
and
out
outsb
shrb
aad
jp
inc
push
mov
sub
lea
rorb
cmp
mov
rol
jmp
pusha
cmp
popf
roll
in
xchg
xchg
inc
or
mov
fdivrp
jl
in
mov
mov
pop
ret
imul
icebp
sahf
jl
popf
push
dec
enter
dec
popa
mov
iret
or
cli
xchg
or
decb
xor
xchg
div
stc
shlb
sub
divb
cli
or
pusha
dec
aaa
icebp
jb
icebp
ret
pushf
out
mov
mov
sbb
repnz
mov
clc
out
loop
push
data16
insl
and
jns
mov
test
testb
push
loope
pop
int3
lcall
mov
out
xor
hlt
xor
jne
js
daa
aad
add
cmp
mov
pop
xchg
fstps
jne
pop
or
or
int3
sbb
cli
and
sbb
pop
mov
jae
movsb
jp
loopne
into
aaa
fidivl
fildl
xor
inc
pop
push
cmc
mov
loop
aad
bound
mov
inc
nop
xchg
in
cmp
dec
and
outsl
push
nop
xchg
subb
orl
rclb
push
aam
add
pop
sbb
pop
lock
stos
sbb
unpckhps
mov
dec
xchg
test
add
in
push
test
mov
xchg
push
mov
xchg
sub
jbe
je
jmp
adc
into
sub
lods
inc
and
xor
and
out
stc
ja
mov
push
lock
cmpsb
fsincos
jb
hlt
loopne
inc
fidivl
stos
lods
sbb
sbb
push
ret
pop
xchg
mov
push
scas
cmp
or
test
cmp
bound
leave
fcompl
add
sub
or
pusha
insb
cmp
fwait
mov
mov
jo
pop
mov
xadd
pop
mov
mov
and
mov
idivl
sbb
cmp
mov
cmp
pop
or
ret
sub
mov
pushf
rol
jg
shll
negl
and
movsl
push
movsl
push
int
and
cltd
rorl
jg
and
int
mull
pusha
jmp
cmp
cli
es
aaa
cmp
inc
int
loop
arpl
aam
stos
xor
pop
adc
rorb
lds
add
imul
shll
pop
or
fmulp
mov
xor
adc
sahf
mov
dec
fs
sub
and
push
decl
sub
mov
mov
fstpl
dec
add
pushf
mov
neg
stos
fildl
loop
sub
std
dec
mov
fistpl
stos
mov
fsubrl
addl
rolb
or
arpl
incl
jmp
addr16
adc
and
mov
clc
lds
mov
and
lods
xchg
add
aam
adc
test
scas
xchg
fs
inc
add
scas
inc
mov
adc
add
mov
xchg
sahf
xor
push
mov
jmp
or
mov
je
les
mov
mov
aaa
mov
mov
mov
lds
rolb
add
hlt
cmpsl
adc
add
daa
gs
xchg
mov
ljmp
das
push
push
int
xor
loop
cld
mov
fsts
hlt
pop
aas
or
es
lret
push
xchg
push
divl
xorb
stos
inc
dec
jns
mov
inc
mov
sarb
sahf
inc
inc
mov
loopne
pushf
mov
in
lret
and
jmp
or
popf
mov
or
xor
je
xor
or
jb
xchg
ja
sbb
mov
sbb
notl
jns
out
xlat
pop
inc
mov
test
xor
add
adc
out
pop
imul
add
jg
mov
ret
inc
jmp
push
xchg
add
cmpsb
push
enter
mov
cs
loopne
dec
jecxz
js
mov
fmull
mov
cwtl
daa
cld
sub
pusha
mov
rorl
rorl
mov
stos
jecxz
cmpsl
in
ja
mov
push
dec
jnp
in
into
push
xchg
dec
push
popa
push
test
popa
push
jle
and
add
out
lods
inc
cld
movsb
mov
pop
jb
test
es
inc
mov
xor
call
enter
and
sub
pop
push
jp
test
in
push
sbb
pop
adc
out
push
std
jmp
push
imul
das
ljmp
imull
push
test
lods
add
cmp
push
stos
fcmovb
leave
cmp
pop
mov
add
add
jg
mov
out
lods
lock
jg
fdivrs
sub
xchg
subl
and
leave
ret
ja
loop
adc
clc
call
jmp
jmp
lcall
nop
or
nop
mov
sbb
mov
pusha
mov
bound
iret
js
lret
dec
add
mov
push
mov
mov
pop
sti
push
cmp
cmc
adc
and
inc
xchg
pop
mov
outsb
adc
imul
adc
fsubl
pop
jg
fldcw
mov
and
pusha
iret
fdivrp
dec
adc
enter
mov
push
mov
inc
les
pop
aaa
pop
push
push
icebp
inc
adc
adc
decl
lods
mov
jmp
sti
mov
adc
mov
gs
data16
ja
hlt
pop
jno
mov
pop
push
push
ja
jbe
fs
insb
fidivl
cs
mov
cmp
callw
xchg
inc
fwait
pop
ficoml
aas
repnz
mov
pop
mov
xchg
aam
mov
jo
push
dec
stos
mov
pop
push
loope
out
outsb
fs
cli
cwtl
xchg
cltd
jo
shl
stos
rorl
scas
sbb
ja
repz
mov
add
add
adc
cmp
movsl
divl
and
push
mov
outsl
xchg
jecxz
and
xchg
repz
call
adc
rorb
and
cmc
and
shrb
cmpl
addr16
stc
pop
inc
je
sbb
or
mov
arpl
cmp
jbe
push
jg
js
movb
pop
mov
cmpl
xor
lods
push
jmp
or
mov
ds
icebp
repz
cwtl
les
xchg
xor
into
test
test
mov
cltd
loope
and
add
or
sbb
xchg
int
xor
in
sub
push
movsb
in
push
and
sub
imul
jg
jl
inc
out
jle
jno
or
nop
in
popf
push
rclb
sahf
scas
cmp
outsb
pusha
call
jp
lds
dec
sarl
mov
adc
inc
int3
or
test
xor
sti
iret
outsb
mov
inc
aaa
mov
dec
popa
dec
xchg
outsb
xor
push
arpl
mov
jp
aaa
pushf
jl
cmc
repz
mov
add
scas
mov
test
or
fimull
je
iret
je
and
out
pop
rcr
cmp
cltd
mov
jno
cmpsb
ds
dec
mov
xchg
popf
mov
bound
dec
loope
pop
push
add
inc
lea
push
shr
dec
pop
push
stos
or
xchg
sbb
dec
out
fs
pop
push
inc
mov
ljmp
dec
inc
jne
movsb
jnp
mov
and
push
and
adc
inc
add
xchg
ljmp
push
or
addr16
outsb
cmp
jmp
in
add
pop
test
orl
or
jb
cmp
sub
xor
xchg
ds
jae
inc
or
pop
in
out
xchg
mov
jae
cmc
or
subb
ret
pop
lret
push
pop
test
push
xchg
test
mov
pop
adc
pop
fnstenv
mov
imul
decb
dec
ror
aam
mov
add
outsb
jae
xchg
pop
add
xchg
sub
mov
sbb
mov
jmp
popf
mov
or
sub
xchg
fcomi
stc
cli
xor
xchg
test
xchg
pop
inc
add
je
imul
mov
and
insl
pop
jbe
adc
pop
xrelease
push
fucomp
push
or
das
jge
cmp
imul
jle
dec
subl
dec
ljmp
mov
ret
pop
cmc
in
or
das
in
bound
mov
adc
outsb
js
mov
and
dec
xchg
push
push
das
cli
add
pop
mov
pop
jecxz
ds
mov
add
inc
sarb
lahf
aam
aaa
pusha
jae
test
or
ss
and
icebp
mov
movb
int3
cmp
dec
pop
test
movsb
cwtl
mov
inc
pop
and
mov
sbb
nop
out
or
sahf
jg
aad
add
jne
ffree
and
fdivs
jg
inc
fildll
mov
and
addr16
stos
adc
mov
icebp
test
in
das
pusha
jno
clc
cmpsb
add
insl
dec
pop
pop
out
jo
sahf
mov
shlb
aas
cwtl
dec
in
nop
inc
jecxz
hlt
inc
mov
mov
push
mov
jno
testb
mov
fisubs
pop
fistpl
in
shl
dec
mov
stos
cmpsl
push
pop
mov
cmpl
sub
fmuls
movl
dec
leave
jmp
inc
and
push
push
es
loop
mov
jne
push
fldz
sbb
mov
push
mov
mov
cmpsl
push
mov
push
roll
lods
jp
sub
jle
jbe
stc
jg
data16
sub
mov
cwtl
jg
push
push
nop
mov
push
fs
adc
lods
mov
loop
les
inc
sbb
pop
or
clc
insl
sahf
gs
mov
cltd
fidivs
cmp
fiaddl
aas
shrb
push
dec
dec
pop
fwait
inc
in
repnz
ret
dec
jle
pop
ja
shlb
ja
mov
notb
outsl
jge
adc
mov
jle
cmp
mov
jnp
outsl
xor
inc
ja
aam
or
adc
push
int
cltd
add
pop
mov
xchg
mov
xchg
popf
cmp
ds
pop
jmp
adc
bound
imul
and
sub
lods
jecxz
movsb
ss
in
or
outsl
and
and
jbe
sbb
jae
add
jmp
inc
stos
test
dec
jbe
mov
in
xlat
daa
xchg
outsb
xor
in
addr16
cmp
and
sub
xchg
sub
cmc
adc
or
xchg
sarl
or
jne
add
xchg
push
popf
icebp
xor
scas
inc
mov
fiaddl
ljmp
inc
sbb
aaa
sbb
in
push
inc
jns
dec
pop
add
jne
add
and
imul
fildll
cmpsl
adc
sub
dec
daa
inc
push
fisubl
dec
push
int
fmuls
xchg
push
mov
push
ss
add
xorb
ljmp
cmp
mov
shlb
cmp
jno
enter
and
out
dec
fs
je
push
imul
mov
fwait
sub
mov
stos
stos
dec
mov
loopne
lcall
dec
pop
sti
nop
add
and
test
xchg
mov
xchg
scas
jns
repz
pop
cmp
inc
insl
pop
lds
pop
jg
mov
adc
sbb
fwait
mov
lock
lret
aas
loop
repnz
mov
or
jmp
or
pop
sub
or
mov
dec
inc
orps
addr16
cltd
imul
int3
dec
fadd
sbb
sbb
in
outsl
stos
push
out
addb
lcall
xchg
in
test
jnp
push
ret
aam
add
mov
jae
jnp
into
iret
adc
jl
aam
sbb
mulw
push
adc
xor
lcall
mov
lret
xor
fs
jns
jne
push
jnp
sub
dec
fstl
iret
cmp
cmp
mov
and
roll
fwait
or
dec
aaa
ret
sbb
das
jle,pt
das
push
cwtl
cmpb
or
xchg
push
xor
popa
movsl
rorb
js
push
hlt
jo
popa
pusha
mov
sub
jne
loop
popf
sub
bound
fisubl
and
dec
pop
xor
xchg
stos
adc
cmp
inc
mov
pop
sub
pop
add
cltd
mov
and
dec
mov
ds
sub
and
sahf
aaa
and
dec
sbb
loope
les
icebp
loope
cmp
divb
jle
shlb
sbb
mov
rcll
inc
cmpl
jg
stc
and
xor
xchg
test
lods
dec
int
jmp
push
inc
jp
xor
ljmp
lock
xchg
jne
es
xchg
cmpsb
pop
jne
xchg
mov
pop
test
xor
pop
inc
xor
mov
cmp
rcrl
pop
inc
popl
stos
xlat
adc
add
pop
sub
insb
mov
push
cwtl
jp
lock
fsubr
dec
fidivs
stc
xchg
or
out
mov
mov
imul
push
mov
movb
out
addr16
or
pop
pop
mov
fiaddl
sub
outsb
mov
fwait
mov
sar
push
rolb
pop
aaa
out
je
fdivl
into
push
and
add
cld
imul
test
xchg
movsl
sub
ret
jns
inc
orb
bswap
popf
das
cmp
ljmp
rcrb
mov
cmp
jb
stos
das
cmc
jecxz
cwtl
mov
das
stos
roll
test
sbb
jge
stos
inc
dec
arpl
addr16
push
fwait
mov
inc
call
mov
xchg
fdivl
scas
fcmovne
mov
cmp
dec
mov
pop
or
repz
inc
mov
push
and
mov
pusha
addr16
sbb
ja
cmpsb
mov
or
repnz
xchg
mov
arpl
and
cs
fwait
push
mov
idivl
mov
data16
cmpb
ljmp
mov
andl
xor
cmp
fbld
daa
addb
ljmp
jle
push
add
fcoml
cwtl
add
pop
jno
shlb
shrb
out
dec
in
sbb
push
sbb
cmp
daa
int3
leave
add
jge
lock
inc
xor
loopne
xchg
mov
shll
add
jnp
xor
addr16
mov
pop
dec
xor
mov
xchg
call
push
mov
or
out
je
aad
dec
stc
pushl
jg
mov
and
mov
fwait
pop
addr16
mov
shlb
mov
add
arpl
push
pop
push
das
bnd
fistpll
std
scas
out
in
inc
inc
mov
lds
cmpsl
setns
clc
fcmovnu
enter
dec
sahf
loopne
sbb
shll
mov
out
add
out
inc
lds
cmp
je
jns
fisttpll
inc
lret
xchg
add
mov
add
syscall
orb
stc
cs
lret
fadds
test
out
push
dec
sarb
sub
mov
sbb
int3
push
mov
cmp
cmp
enter
out
inc
addl
adc
pusha
push
cmp
nop
mov
push
mov
mov
iret
mov
in
pop
xor
jb
mov
pop
loop
cwtl
mov
cmpsl
pop
push
adc
in
xor
iret
test
push
adc
and
subb
in
mov
dec
movsb
jb
cmp
adc
jge
mov
out
pushf
adc
or
pop
push
pop
cltd
out
popa
and
ja
out
mov
push
repz
outsl
inc
repnz
jle
test
push
or
mov
lea
xor
inc
fcoms
negb
and
lods
xchg
cmpsb
std
or
or
fisttpll
adc
sti
pop
lds
push
xchg
cmpsl
scas
and
lahf
lcall
ljmp
inc
cmp
arpl
push
inc
xor
mov
test
sahf
inc
push
or
shr
jg
cmc
mov
mov
push
jmp
mov
sub
test
mov
call
jb
sbb
xchg
lods
lret
fiaddl
push
jno
shr
xchg
sbb
aaa
ficoml
dec
mov
loopw
mov
xchg
roll
outsb
mov
sahf
inc
fnsave
fistpl
bnd
mov
xor
mov
mov
icebp
nop
mov
mov
movsb
das
cmp
mov
sub
out
xchg
xor
inc
push
jecxz
mov
in
movsl
cmp
inc
shll
pusha
pop
fstpl
fcomps
out
sub
ss
fisubrl
mov
fdivrl
sbb
in
and
add
daa
jp
leave
sbb
int3
cmc
test
adcb
push
into
inc
mov
or
inc
insl
add
sub
rcr
fisubl
sbb
mov
adc
cmpsb
push
mov
popa
dec
xor
in
mov
fistpl
jnp
shl
adc
pop
arpl
mov
dec
das
loopne
shl
add
adc
mov
adc
pop
js
dec
xchg
in
negb
xchg
es
add
xchg
scas
dec
lea
int3
aas
push
dec
js
mov
lock
stos
mov
sub
cs
leave
cmp
inc
movsb
jo
daa
sbb
or
push
sti
lret
rcrb
aas
jle
jp
jecxz
xor
movsb
flds
jbe
mov
roll
xchg
xchg
fnstcw
or
or
mov
pop
add
fldl
emms
sbb
mov
xchg
ja
ror
rolb
enter
ss
xor
adc
sub
or
fistl
xchg
jbe
push
xor
inc
xchg
add
mov
dec
mov
icebp
mov
scas
mov
mov
stc
fiadds
out
dec
leave
pop
xchg
sbb
add
xchg
xor
fildll
mov
push
lret
fisubrl
push
push
xchg
or
sbb
push
push
jno
fs
scas
lods
negl
adc
sti
inc
fwait
inc
cmp
bound
xchg
mov
cmp
fidivrl
sub
jno
xchg
popf
andb
push
or
push
push
les
sahf
xchg
mov
shlb
js
jbe
cmp
imul
fmull
cmpb
out
adc
cltd
and
test
std
movsl
stc
mov
popf
push
in
add
dec
fisubl
inc
and
xchg
pop
int3
in
rcrl
xor
pop
and
jle
repz
push
scas
test
xor
movsl
or
inc
rcl
push
mov
insl
repnz
movsb
mov
sbb
push
jge
pop
rcrb
cmpsb
rorb
sbb
push
shll
js
scas
push
lret
andb
adc
divb
imul
movsl
sbb
sbb
mov
pop
xlat
inc
mov
sub
ret
lahf
xor
imul
adc
jo
cltd
adcl
sbb
leave
dec
push
pop
and
push
dec
push
lcall
mov
ds
ljmp
aaa
xchg
mov
mov
push
pop
lods
cmpsl
cmp
neg
lret
daa
jmp
pusha
es
hlt
inc
fucomi
xchg
jb
addr16
cwtl
mov
or
xchg
aad
loopne
out
push
or
jg
add
push
push
es
cmp
lods
fnstenv
cld
mov
jle
inc
test
xor
or
fwait
enter
rorb
out
inc
pop
mov
mov
and
adc
or
std
mov
push
cli
xor
or
or
ss
les
fcmovb
jle
sbbb
push
fbstp
cwtl
shll
cmp
aaa
sbb
cld
call
scas
ljmp
adc
cmpl
lret
adc
xchg
mov
fsubrl
ds
jno
icebp
pop
inc
push
fdivrl
push
jl
andl
jge
dec
daa
mov
inc
insb
add
mov
and
cmp
xor
repz
sbb
std
fnstsw
sub
inc
es
movb
and
sub
push
inc
add
inc
fstps
mov
push
lret
mov
das
aam
dec
scas
gs
faddl
mov
in
adc
mov
outsb
sub
mov
xor
add
and
loope
sub
mov
mov
imul
fwait
ds
mov
inc
inc
mov
sbb
push
fiaddl
stc
int3
xchg
aaa
shl
out
cmp
in
mov
imul
dec
ret
aam
mov
cmpb
repz
dec
lds
pop
nop
jb
mov
imul
sub
cmp
mov
outsl
jae
test
test
jae
xchg
out
ss
jmp
mov
cwtl
xlat
lods
mov
or
inc
hlt
jno
jmp
mov
push
mov
jb
arpl
ret
inc
enter
out
stos
dec
mov
ret
out
mov
loop
add
iret
cwtl
movsb
out
push
lret
stc
mov
enter
push
and
mov
stos
and
dec
mov
enter
ret
jle
mul
add
lds
mov
cmc
or
lods
outsb
hlt
add
dec
inc
mov
popf
adc
xchg
xor
fstl
mov
inc
mov
jle
arpl
shlb
ret
push
cli
adc
pop
sbb
inc
add
stc
repnz
mov
add
enter
jnp
sub
push
repz
pmaxub
push
xor
jmp
std
add
mov
mov
dec
in
and
sub
push
aam
in
or
out
popa
xor
popf
jbe
push
imull
aam
and
mov
or
adc
sbb
mov
cmp
rorb
push
mov
mov
mov
jp
movsl
cli
jle
in
pusha
jmp
mov
scas
mov
shrl
sub
sub
fwait
repz
nop
cmp
jnp
mov
in
mov
add
test
out
rolb
xchg
leave
pushf
and
stc
pop
sub
lret
aaa
fcmovnu
inc
pop
testl
aam
jle
or
cmp
xlat
mov
lock
aam
out
xor
outsl
test
add
lods
out
sub
arpl
bound
stos
and
sbb
scas
xor
mov
mov
jns
cmpb
lahf
jnp
fistpll
mov
push
outsl
xorl
add
sbb
lock
cld
shll
cmp
jnp
dec
cli
and
gs
ss
repz
outsb
mov
stos
fsub
cmp
nop
aad
sub
popa
mov
xchg
mov
insb
fsubs
scas
mov
mov
es
adc
es
cmc
xlat
jnp
jmp
in
ljmp
add
es
mov
les
loope
test
daa
repz
inc
mov
stc
and
jns
addl
xlat
xchg
mov
xchg
movsb
leave
pop
cltd
lcall
mov
icebp
sub
fstpl
mov
ffreep
mov
mov
pop
fs
imull
and
xor
imul
clc
add
sbb
shrl
pop
stos
addr16
mov
lret
insb
or
add
iret
loop
or
ss
jle
adcl
and
idivb
sbbl
icebp
sbb
stos
stos
leave
mov
pop
sbb
mov
shr
imul
adc
dec
movsb
adc
es
icebp
jecxz
stos
subl
fstps
dec
push
les
lock
add
mov
cmpl
mov
mov
jbe,pt
pop
cwtl
cmp
sbb
or
fs
daa
fwait
sbb
in
cmp
push
mov
sub
sti
sbbl
into
ss
adc
dec
bound
jno
xor
dec
jle
inc
push
adc
or
xchg
pushf
cmp
xor
mull
rcrl
cs
jns
sbb
ficomps
push
sbb
daa
int
arpl
cli
mov
dec
fdivl
fisubrs
imull
jns
xlat
sbb
push
pop
scas
jmp
dec
adc
ret
sbb
push
inc
push
add
jge
repnz
cmp
ret
mov
clc
out
xchg
push
push
in
mov
cmp
sbb
in
jne
lahf
fisttpl
loop
inc
mov
lods
jbe
cmp
xchg
aaa
push
inc
fsub
jg
cmp
xchg
mov
lock
mov
sahf
sub
rclb
pop
mov
fcomi
mov
cmp
mov
xor
adc
aad
clc
sbb
xor
add
test
push
or
sbb
jns
or
loope
cli
cltd
repnz
adc
negb
ljmp
mov
inc
aaa
iret
xor
subl
fwait
sbb
stos
pop
sbb
lret
rcr
fmull
in
or
mov
in
adc
stos
inc
dec
cmp
mov
cmpsl
pop
rclb
mulb
adc
mov
sbb
fwait
push
lret
mov
and
mov
test
scas
inc
mov
inc
push
cli
popa
xchg
adc
inc
mov
repnz
sub
jns
adc
jge
incl
gs
sbb
jl
mov
rolb
jo
icebp
jmp
sub
movsl
mov
sbbl
sub
imul
sub
xchg
enter
xlat
inc
jg
and
adc
sti
leave
pop
sti
pop
lahf
mov
into
and
mov
sbb
jae
fmul
pop
mov
pusha
push
adc
sbb
pop
xchg
adc
push
jns
pop
mov
stos
cli
es
cli
scas
mov
sbb
jnp
push
insb
clc
sub
ret
stos
popf
dec
pop
sbb
xor
jne
mov
mov
sbb
pop
insl
or
push
adc
lods
and
call
je
cmp
in
cmp
inc
sbb
shll
xchg
sub
adc
push
xor
add
cmp
xchg
icebp
imul
dec
es
insl
repnz
sub
inc
outsl
sbb
jae
push
inc
out
out
mov
lahf
adc
int
popf
cmp
fidivs
xchg
xor
and
sub
sti
outsl
pop
add
cmp
aas
adc
jns
es
adc
fsubl
insb
add
fdivrl
push
jle
dec
rcl
cmp
or
int
movsl
push
push
sbb
in
cmp
rep
jmp
dec
mov
xlat
and
pop
inc
jge
mov
push
cmpsb
rcr
push
out
loope
add
fdivl
imul
xor
xlat
repz
xor
pop
xchg
inc
popf
fidivs
inc
sbb
int
inc
sub
cmp
out
loop
fcompl
pop
cwtl
insl
fsub
and
mov
jns
push
mov
mov
xchg
pop
mov
fsubs
movsl
mov
cmpsb
sbb
mov
and
fwait
arpl
adc
pop
fnsave
inc
mov
lds
jl
cmp
int
jns
jb
in
add
out
jb
ret
out
mov
adc
es
xchg
jg
inc
loopne
movsl
pop
bound
lea
call
pop
adcl
mov
dec
dec
lock
sub
loop
xor
xchg
mov
push
cld
scas
mov
adc
jae
movl
xor
push
mov
icebp
outsb
lea
fwait
jns
or
push
jb
sbb
inc
icebp
mov
roll
out
add
stos
push
lods
pop
in
or
in
sti
push
inc
and
mov
int
add
sahf
adc
pop
push
lods
cs
pop
mov
pop
dec
ret
inc
stos
xor
hlt
test
mov
mov
popa
pop
div
inc
adc
mov
hlt
loopne
or
adc
mov
pop
jg
stos
mov
in
pushf
adc
adc
js
push
lret
test
repz
xor
movl
add
mov
leave
xchg
stc
jp
shl
xor
imul
pushf
loop
icebp
lods
add
inc
movsl
add
or
aaa
ljmp
mov
mov
int
pop
adc
pop
cwtl
adc
lea
lods
sbb
aad
mov
gs
les
mov
pop
or
mov
out
jp
out
test
stos
adc
mov
repnz
adc
pushf
add
cmp
mov
adc
into
inc
or
test
push
movsb
mov
sbb
dec
idivl
mov
cwtl
push
imul
test
adc
lahf
sbb
jp
imul
mov
push
and
mov
clc
sub
pusha
aam
nop
rorl
dec
xor
lds
je
mov
pop
test
addr16
outsl
lds
or
les
add
cltd
mov
jo
or
insl
inc
leave
sub
sub
movups
repz
push
adc
push
stos
scas
aad
inc
mov
or
std
cmp
mov
and
fisttpl
out
jnp
lcall
lds
ds
sbb
pop
cmp
add
sbb
sbb
leave
fnsave
notb
icebp
in
fmul
out
pop
mov
cmp
push
add
stos
lods
dec
lea
stc
dec
aam
bound
lods
rol
daa
aas
xchg
movsb
ds
shl
imul
sbb
ficompl
enter
repnz
xchg
pop
mov
sti
sub
and
insb
test
pop
aam
or
xor
shlb
and
add
fnsave
pop
movsb
in
add
jmp
jmp
mov
push
out
jge
sti
push
mov
adc
ret
cltd
sub
mov
or
dec
mov
shlb
icebp
and
sahf
sbb
aas
cmp
jae
nop
or
push
aam
or
repz
ljmp
mov
inc
jmp
nop
fstpt
addr16
cmp
lds
lahf
hlt
push
jmp
stc
clc
stc
sub
dec
push
lret
fwait
xchg
cmp
dec
and
sub
push
jmp
outsb
gs
loopne
lds
inc
add
lods
insl
lret
cwtl
xchg
and
mov
imull
faddl
shlb
lret
pop
movsl
outsb
dec
inc
or
push
mov
and
jno
and
in
xor
je
cmp
movsl
arpl
dec
cmp
add
loope
mov
roll
adc
add
cmpsb
mov
adc
or
ret
sub
outsl
out
xor
jbe
inc
lret
adc
lods
inc
movsb
xor
in
xchg
sub
dec
out
scas
loop
bound
sub
ds
je
mov
stos
movsl
cmpsl
enter
movsl
or
shlb
mov
aas
and
test
xor
iret
dec
out
cmp
add
mov
xchg
mov
fmuls
and
jo
nop
xchg
test
adc
fidivrs
sub
fidivs
mov
cli
push
ljmp
test
push
or
mov
mov
jae
stc
and
dec
xor
or
sub
jb
sub
cmp
sub
cltd
xchg
gs
repnz
mov
sub
fstps
sbb
mov
ljmp
xchg
dec
stos
and
sbb
lods
xchg
jno
clc
fdivl
adc
out
nop
hlt
mov
lds
xor
jbe
adc
ljmp
dec
fnstsw
pusha
pop
lds
mov
pop
shl
mov
cmp
insl
ret
and
pop
rcl
js
dec
pop
shrb
xorb
ljmp
mov
adc
insb
es
mov
shll
cmp
addr16
fidivrs
dec
and
jb
pusha
dec
push
leave
test
adc
or
xchg
lds
mov
mov
adc
jns
jmp
loopne
push
jns
push
dec
int3
xchg
addr16
jg
inc
adc
push
lds
or
cmpsl
inc
mov
and
clc
into
xchg
lock
es
rclb
or
dec
add
mov
inc
sbb
add
mov
mov
mov
jge
push
mov
pop
push
ljmp
xchg
jbe
mov
mov
ud2
enter
iret
adc
push
andl
scas
ja
cmp
mov
adc
out
sbb
jecxz
aas
dec
outsb
add
adc
add
cmp
mov
lea
scas
xchg
or
xor
scas
movsb
cli
sub
sub
sbb
mov
pop
mov
outsb
sbb
adc
mov
sub
shll
xchg
sub
jmp
mov
push
or
jo
out
xchg
dec
loope
inc
pop
jmp
fadd
cltd
mov
mov
fstpl
call
mov
into
mov
out
push
sti
cmp
scas
mov
xor
test
sub
dec
push
sahf
xlat
and
sub
inc
fmull
enter
dec
mov
es
lcall
cld
repz
mov
jb
push
pop
aam
dec
repnz
in
dec
mov
test
outsl
ret
cmp
push
sbb
mov
cmp
jmp
push
mov
push
rcrb
cmova
xchg
outsw
sub
aad
mov
fmulp
jmp
in
dec
dec
xchg
pusha
sub
mov
test
pop
mov
sub
xorl
in
inc
cmpsl
into
stos
lods
sbb
out
hlt
mov
out
pop
subl
repnz
or
mov
imul
in
mov
fcom
xchg
les
test
or
cs
ljmp
cmp
xor
scas
je
push
jns
xchg
add
mov
push
dec
xchg
shll
aas
mov
xchg
pop
inc
aam
mov
pop
mov
into
outsb
call
dec
xchg
in
jo
imul
gs
fsubp
fstpt
sub
rorb
fsub
aaa
mov
inc
in
in
add
imul
insl
push
and
sub
in
test
push
and
iret
sub
or
js
jnp
inc
xor
cmp
in
sub
and
int
xor
jb
inc
sub
mov
rclb
and
dec
or
sbb
repz
stos
dec
out
add
cmp
add
sahf
inc
shl
jmp
sub
mov
cmp
mov
sarb
jne
jmp
dec
cmp
jnp
aam
add
add
enter
cmp
clc
inc
test
test
cld
or
adc
mov
add
jl
add
lods
pushl
jge
fimull
mov
gs
push
push
aam
inc
aad
or
int
mov
mov
clc
in
into
cmp
cmp
inc
jp
pop
test
test
fwait
inc
xchg
jp
rclb
cmc
cld
pop
mov
stos
push
cli
leave
and
lret
int
cmp
test
out
or
pop
push
pop
addr16
xchg
jb
loop
scas
mov
mov
xor
sbb
sbb
dec
ljmp
out
jb
pop
inc
jnp
inc
cltd
dec
aad
mov
lods
mov
jns
insb
lahf
ljmp
cmp
adc
sub
or
lods
dec
ljmp
sbb
inc
mov
adc
shlb
mov
jbe
mov
mov
sub
dec
stos
movsb
push
fidivs
mov
cmp
mov
test
dec
pop
fwait
jle
pusha
je
adc
mov
test
aad
mov
xor
xor
mov
fists
fiaddl
sub
test
scas
sahf
jle
pop
enter
fstps
dec
pop
lea
pop
mov
pop
jno
or
mov
add
push
out
push
push
cmc
xor
lea
push
xlat
jnp
outsl
xor
rol
xchg
dec
add
lods
sub
xor
sarl
dec
dec
movsb
mov
out
inc
std
push
jle
sarb
cmp
jl
loop
cmp
xor
cmp
mov
jo
pop
test
push
push
adc
daa
adc
xor
and
sub
add
das
sbb
je
scas
fmuls
mov
push
test
insb
mov
or
mov
shrl
movsb
ja
sar
and
xlat
xor
add
orb
popa
mull
lret
xor
sbb
dec
loope
jne
push
push
mov
xor
pop
jae
sub
fsubrl
xor
in
fs
mov
jl
dec
aaa
popf
iret
aad
sete
fsubr
push
stos
xchg
out
dec
add
cwtl
mov
pop
sub
adc
sbb
stos
in
push
or
call
ja
cmc
in
push
and
add
nop
in
lret
xchg
jge
ds
rcrl
loope
or
xlat
mov
andb
insb
outsl
jo
testl
push
fcmovnbe
mov
mov
mov
inc
lcall
push
subl
js
add
fwait
cwtl
jo
pop
jb
push
sub
rep
scas
jae
sbb
aas
dec
stos
js
mov
push
jge
fstl
mov
and
nop
inc
cmovge
fwait
stc
insb
out
test
xor
into
xor
and
ljmp
push
add
push
pop
cs
repnz
std
scas
jle
cmp
aam
push
or
jp
orl
sub
lods
add
data16
sub
cmpsb
repz
cmp
push
int
jns
gs
cwtl
iret
fucomp
lods
test
jmp
test
fdivrs
cltd
mov
xchg
pop
je
mov
orb
nop
sub
adc
or
or
repz
popa
jne
fldenv
sahf
imul
ror
js
fwait
xor
and
inc
cli
sbb
jg
fdivs
add
push
daa
jl
dec
icebp
add
fadd
ljmp
cmpsb
cmp
xchg
pop
test
out
lods
cmp
bound
push
jo
inc
fmuls
movsl
ret
out
lahf
enter
int
es
lahf
enter
add
inc
inc
std
xor
fsubrs
xchg
in
jbe,pt
sbb
push
inc
insb
adc
jnp
test
jo
jne
js
fcoms
iretw
push
insb
shrl
int
push
fidivl
into
int3
repnz
jg
pushf
outsb
stc
push
int
cmc
cmp
fdivr
aaa
pop
pop
add
out
out
xor
sbb
inc
pop
int
cmp
inc
mov
pop
sbb
shll
in
or
cmp
sbb
and
stos
push
xor
xchg
lcall
lahf
mov
add
push
leave
xchg
enter
cmc
nop
jns
dec
xor
je
adc
aaa
in
fsts
pusha
mov
int3
rcll
jl
jb
jbe
addps
or
dec
sub
add
roll
mov
cmp
ret
bound
add
mov
sbb
sbb
pop
das
and
xchg
addr16
mov
jl
addr16
and
xchg
andl
sub
pop
repnz
js
or
daa
add
jno
out
sbb
jl
sbb
mov
incl
cli
xchg
sub
icebp
cs
adc
lahf
dec
mov
js
xchg
sbb
add
mov
xor
sbb
enter
pop
inc
lcall
fistps
jno
stc
jg
or
paddsb
push
push
or
fidivl
or
mov
hlt
inc
test
sub
stos
push
dec
lcall
sub
cmp
jmp
mov
jle
jge
stc
gs
ret
cli
sbb
push
outsl
fwait
movsl
mov
pusha
xor
std
sbb
incl
xchg
imul
loope
repnz
or
lds
jb
mov
int
imul
nop
loopne
insl
mov
and
scas
adc
arpl
sub
dec
and
iret
cwtl
fs
and
xchg
push
lret
popa
jno
stos
loop
rolb
loopne
loope
js
aam
stos
push
sahf
dec
mov
or
daa
ss
popa
scas
fwait
je
sbb
or
add
mov
dec
nop
movsb
sbb
mov
and
lret
daa
mov
fucomp
or
xor
test
mov
out
sub
xchg
pop
push
mov
hlt
shrl
ss
imul
es
leave
repnz
lds
cmp
cmpsl
adc
pop
testl
adc
and
push
jg
mov
jmp
popa
lock
lret
in
add
adc
and
lcall
shll
xor
pop
mov
dec
cld
test
imul
in
sub
in
in
add
inc
xchg
mov
adc
ret
mov
lahf
cmp
aam
pop
mov
in
in
push
xchg
inc
ss
cmp
ficomps
out
test
in
test
jp
cmpb
in
inc
lahf
test
in
xlat
loope
cmp
stos
xlat
lds
adc
mov
stc
fldt
add
fcompl
add
adc
cmpl
sub
fdivs
lock
mov
cmpsb
pop
push
add
dec
insl
mov
in
jl
gs
arpl
fs
gs
jl
adcl
je
repnz
jae
inc
les
or
add
pop
xor
push
rcrl
add
imull
mov
sbb
sbb
cli
ret
jle
lods
clc
cmp
in
or
pop
cs
hlt
pop
scas
sbb
popa
mov
test
inc
mov
dec
fwait
flds
or
adc
stos
inc
nop
movsb
cs
dec
daa
and
inc
into
int
jns
mov
jmp
push
adc
adc
mov
and
adc
nop
or
pop
fwait
inc
push
cmpsl
les
dec
mov
and
shl
dec
jge
je
mov
inc
stc
or
gs
dec
mov
jl
sbb
adc
add
test
jb
aad
jmp
pop
fadds
mov
fld
sbb
shr
stc
xchg
es
arpl
shll
fcomps
jo
cmc
mov
shll
mov
adc
and
and
dec
test
ds
lea
dec
xchg
das
mov
add
orb
sub
repnz
jp
and
jmpw
fwait
cmp
push
mov
cltd
icebp
out
test
test
stos
mov
xor
and
jl
pop
int
xchg
in
and
mov
test
inc
out
sbb
adc
loop
or
stc
inc
sar
adc
ljmp
inc
aam
rol
dec
sub
cmc
rcrl
std
sub
pusha
cld
test
js
stos
adc
sbb
xchg
mov
xchg
hlt
aas
dec
in
push
orb
or
negb
cs
sub
call
xchg
aad
int
movsl
mov
jge
pop
sbb
hlt
pop
movsb
mov
push
subb
out
call
mov
push
lret
nop
or
daa
orb
js
loopne
push
mov
pop
pop
dec
iret
or
mov
aam
mulb
dec
adc
cli
lods
jb
inc
adc
pop
fsubp
jmp
mov
rclb
mov
xor
push
and
xor
xchg
test
mov
scas
fstps
cmpl
jle
mov
out
dec
jb
xchg
pop
mov
lret
xor
stc
push
and
dec
aad
sub
stos
testb
lods
jmp
cmp
xchg
fcmovne
dec
movsb
inc
xor
cmc
fcompl
dec
out
mov
ffreep
out
test
std
xor
ds
nop
es
dec
push
sti
xchg
fisubrl
in
stos
loopne
rolb
cmpsb
test
icebp
push
add
inc
cmp
cs
push
xchg
popa
sub
mov
fimuls
fsubs
iret
dec
leave
je
dec
dec
or
fimuls
dec
sub
les
add
mov
mov
imul
adc
adc
daa
stos
jl
lods
sub
inc
mov
dec
dec
and
push
xchg
faddl
sbbl
add
push
ror
jbe
sub
inc
stos
lret
add
aaa
stos
out
mov
dec
xchg
lahf
mov
lahf
int3
repnz
fidivrs
adc
jmp
data16
sbbl
popf
les
push
inc
dec
cmp
xchg
das
jne
fldenv
pop
test
sarl
jb
jecxz
mov
mov
scas
mov
bound
and
stc
js
jb
aad
mov
sbb
mov
cmp
xchg
idivl
aad
sub
push
sub
lret
mov
push
mov
sbb
and
jns
xchg
cmp
add
inc
pop
mov
movsl
and
xlat
jmp
cmp
ja
aad
scas
mov
fnstcw
addr16
ret
roll
rorl
mov
pop
ds
push
pushf
ret
aad
cmp
mov
push
outsb
mov
adc
scas
xor
add
adc
sti
mov
and
fucomi
pop
or
xor
stc
sahf
test
cltd
aad
popf
jnp
mov
sbbl
lea
out
pop
xchg
jb
sbb
shlb
xlat
repnz
int
and
mov
test
push
outsl
push
pop
mov
jp
mov
or
in
arpl
lds
jg
cmp
xorb
mov
and
add
sbb
pop
jg
adc
inc
xor
bound
ds
movsl
and
cmp
fldenv
mov
je
pop
outsb
out
in
pop
or
loopne
loop
mov
int3
adc
sarb
ret
faddl
sbb
jl
push
dec
scas
in
in
push
xlat
ja
ficoms
jbe
mov
into
in
mov
ret
stos
pop
mov
or
das
jno
mov
clc
add
mov
mov
jb
in
jle
push
mov
cs
sbb
mov
adc
ds
int3
sub
mov
in
sti
bound
mov
xchg
adc
jecxz
frstor
pop
cmp
cmp
sbb
in
add
rcrb
jp
je
mov
int
xchg
fstpl
pusha
jmp
jge
mov
dec
cld
outsl
inc
fistpll
xor
and
fdivrs
inc
mov
or
mov
push
cwtl
jo
daa
xchg
data16
pop
adc
dec
bound
cmp
nop
addl
add
sbb
xor
lods
jle
call
fstpl
data16
lock
nop
mov
lret
adc
xchg
dec
jae
pop
mov
ja
inc
jp
push
xchg
in
jns
push
lahf
cmovns
or
loopne
std
inc
and
cmp
dec
push
movb
xchg
pop
mov
enter
mov
ja
sub
subb
rorb
lock
int3
xor
test
test
pushl
in
xor
push
or
pop
mov
jge
cmp
xor
call
jae
inc
insb
jl
in
cwtl
imul
ret
ret
mov
mov
jp
mov
mov
das
add
or
loope
scas
rep
enter
dec
mov
test
andb
and
and
popa
adc
aas
push
push
lods
mov
mov
aas
xchg
fisubrl
mov
inc
nop
jne
and
or
adc
fwait
mov
jno
sarl
and
jge
ljmp
pop
ds
ds
cmp
mov
insl
sbb
nop
mov
mov
gs
adc
pop
sub
sbb
subl
lods
mov
cs
ffreep
jo
cltd
cmp
rcrl
pop
in
and
mov
out
aad
cs
mov
bound
dec
xchg
cld
shrb
inc
int3
inc
sti
add
ds
mov
pop
outsb
inc
lret
pop
lds
xor
orl
lods
or
pop
icebp
mov
jno
pop
fs
rol
mov
and
scas
inc
push
inc
loop
jnp
hlt
insb
push
jbe
pusha
test
leave
pop
dec
shl
mov
xchg
lret
jnp
lds
mov
inc
adc
sub
lcall
or
leave
dec
pushf
cs
jge
jno
scas
add
mov
into
cmp
gs
aam
call
jo
mov
add
pop
in
test
lods
imul
xchg
xor
mov
and
and
sahf
adc
xchg
fwait
pop
xchg
fisubrl
sub
fisttpll
pop
mov
inc
sti
mov
cmpsl
nop
or
loopne
xchg
and
into
jno
js
push
push
xor
ret
cmp
cli
insb
inc
push
imul
mov
cmpsl
clc
int
or
inc
inc
inc
jg
or
pop
sbb
pop
xor
fsts
sbb
jno
and
int3
mov
jno
pop
pop
sti
mov
push
mov
dec
out
bound
jns
or
jle
inc
mov
pop
fwait
loope
xor
push
jl
cs
int
dec
jmp
arpl
outsb
inc
xchg
repnz
xor
pop
jecxz
xchg
sti
rcl
push
xor
decl
in
imul
dec
loop
inc
sbb
xchg
add
int
xchg
xor
jne
cli
lret
dec
ja
pop
xor
sub
sub
les
bound
adc
adc
jge
mov
lret
leave
rcrb
in
pop
mov
test
pop
dec
sti
mov
sbb
pushf
pop
push
xchg
pop
aas
inc
iret
jnp
inc
std
mov
lret
sbb
je
popf
xor
imul
rcrb
xchg
inc
mov
xlat
ljmp
test
dec
fucomip
das
sub
imul
xchg
mov
or
test
stc
lret
sbb
rorb
jne
leave
je
mov
push
adc
iret
pop
aad
dec
push
pop
inc
cmp
dec
outsb
or
nop
adc
int3
inc
jns
or
lcall
mov
sub
pop
jns
aad
push
or
leave
cli
call
dec
in
in
xor
push
push
daa
addr16
cmp
mov
stc
push
pop
sbb
test
pop
loope
orl
xor
mov
leave
jo
movsb
lods
cmp
adc
push
or
and
push
aas
xchg
in
xor
fidivrl
les
adc
or
shrb
rclb
jg
and
loop
and
out
pushf
push
mov
adc
mov
lahf
xchg
and
adcb
stc
mov
rcrl
jnp
jno
xchg
insb
outsb
fcompl
clc
inc
repnz
mov
mov
inc
cmp
sbb
out
pop
or
xchg
lret
xor
mov
jo
pop
js
repz
dec
movsb
orb
movsb
lret
out
jge
and
sub
pushf
in
dec
sub
xchg
ret
cs
push
in
in
nop
aad
adc
sti
lret
adcl
repz
jb
lret
out
scas
cmp
mov
jne
fwait
clc
inc
pop
mov
aam
repnz
add
jecxz
sbb
sub
jae
pop
outsl
dec
scas
and
jecxz
flds
mov
xlat
jne,pt
ret
lods
push
int
pop
cmp
push
insl
cmc
ds
and
inc
inc
xor
lahf
push
iret
mov
push
or
xchg
xor
jne
popf
jnp
mov
or
inc
inc
xchg
mov
xor
fcompl
sbb
stos
xchg
cmpsb
out
push
add
icebp
mov
andl
cmpb
dec
adc
gs
cld
xchg
mov
test
nop
pop
sub
push
int
imul
sbb
inc
add
jle
cltd
mov
mov
push
test
mov
stc
cmovg
xchg
outsl
fnsave
rcl
mov
pushf
and
xor
adc
aam
mov
push
movsl
mov
jle
fildl
pop
lds
inc
push
cli
in
pop
bound
mov
mov
cmp
xor
loop
jae
jle
cmc
int
pop
add
mov
push
pusha
test
mov
pop
mov
fildl
cmp
test
sub
push
inc
js
nop
les
pop
popa
mov
lcall
adcl
stos
sbb
inc
add
outsb
loope
ds
add
adc
push
push
cmc
loope
xchg
push
mov
lock
sbb
out
std
jg
mov
and
mov
jl
ljmp
clc
cmp
xchg
fld
ret
jae
mov
mov
pushf
fwait
jecxz
lods
lahf
into
push
add
sbb
or
dec
loopne
mov
mov
jae
lods
pop
out
or
mov
outsb
dec
or
mov
xchg
lret
push
repz
push
pop
aad
scas
inc
sbb
dec
imul
lcall
and
mov
popa
xor
in
sub
sub
dec
mov
pop
sarl
add
lea
shlb
pop
adc
cmp
mov
add
xor
or
cmpsb
inc
pop
mov
rcrl
jnp
and
sbb
xchg
testl
mov
movl
inc
xor
dec
or
xor
cmp
pop
or
adc
ss
sub
or
inc
pop
push
xchg
aaa
sbb
inc
mov
das
ror
test
cs
pop
or
test
push
adc
loope
mov
mov
mov
out
xlat
dec
enter
or
inc
dec
in
icebp
push
lds
xor
rcl
popa
adc
ds
js
push
cld
fwait
dec
pop
adc
jo
push
xor
mov
cltd
push
inc
in
dec
or
out
sub
loop
and
je
fsubrl
xchg
outsb
dec
jbe
lock
sbb
daa
leave
jne
mov
mov
mul
sub
fdivrs
ljmp
pop
sbb
xchg
pushf
test
push
aad
hlt
aas
inc
jl
test
lods
addr16
xchg
test
or
xchg
das
imul
scas
jmp
hlt
inc
sarb
push
insl
xchg
jp
movsb
inc
lea
mov
mov
pop
xor
pusha
cmp
rclb
xchg
sub
jl
mov
jns
pop
in
xchg
out
dec
and
jo
cmp
add
mov
repz
cs
xor
sti
rclw
mov
shlb
push
js
inc
test
inc
mov
aas
out
scas
shlb
pop
pop
push
xor
iret
xchg
cmp
inc
push
in
adc
xor
xchg
and
or
xchg
or
fisubs
popf
xchg
lret
andl
andb
dec
movsb
cmpsb
mov
pop
popa
pop
mov
lock
mov
cmpsb
push
je
xchg
ret
ror
jmp
sbb
arpl
jmp
xchg
pop
push
dec
jo
lock
ret
inc
pop
jbe
icebp
sahf
and
cmpsl
cs
enter
cld
testl
inc
mov
adc
aaa
add
xchg
or
stos
mov
and
inc
and
dec
mov
push
std
pop
sub
inc
rclb
fsubl
out
adc
pop
mov
push
outsl
pop
pop
fldenv
loope
inc
pusha
mov
mov
pop
and
dec
das
lea
faddl
out
mov
mov
cmp
jmp
mov
sbb
stos
fadds
out
aas
mov
mov
movsl
in
push
add
repz
pop
sbb
lods
rolb
xchg
jecxz
ljmp
mov
pop
fwait
test
out
add
lods
push
mov
leave
aad
aad
inc
xchg
jmp
repnz
movsb
out
gs
push
fistpll
imul
or
mov
hlt
sbb
pop
and
in
shl
adc
adc
pop
push
cmp
xchg
fistpl
mov
adc
sub
push
movsb
rcl
mov
mov
jns
sar
xlat
fisubl
outsb
xor
and
aaa
rorl
test
jge
jecxz
push
pusha
xchg
fimuls
or
jp
hlt
mov
inc
dec
rcrb
cltd
xor
imul
mov
iret
mov
mov
cmp
mov
call
or
push
stos
sti
jb
sub
and
inc
adc
out
popa
fisttpll
pop
mov
lods
repnz
loope
es
or
mov
cmc
lret
jmp
pop
clc
mov
mov
imul
fdivrs
cmp
add
popa
mov
push
aam
push
mov
sub
inc
mov
sub
lahf
xchg
daa
jmp
mov
imul
fsubl
leave
or
lcall
and
cmp
aas
xchg
daa
stc
xchg
mov
dec
loop
cmc
cmpsb
lock
sub
lods
iret
movl
mov
sub
inc
dec
je
cld
frstor
sbb
push
iret
scas
mov
mov
ficoms
mov
test
ljmp
jmp
aaa
rol
push
xor
push
mov
sbb
cwtl
xchg
inc
in
inc
sub
cmc
xor
pusha
xchg
leave
dec
mov
and
sbb
ret
clc
scas
xor
out
je
mov
lret
jno
push
dec
out
test
iret
mov
shll
and
stos
or
pop
mov
rclb
cwtl
hlt
push
mov
cmp
dec
adc
jge
nop
mov
aam
mov
ljmp
lds
adc
cltd
sarb
mov
fs
in
jo
mov
sub
fsubp
idiv
bound
and
ret
arpl
sbb
sub
dec
add
jae
fldt
in
adcb
loopne
mov
and
push
int
push
lahf
adc
mov
out
lods
ljmp
or
fiadds
fxch
pop
aaa
outsb
sti
repz
pop
xchg
imul
sub
rcrb
ja
add
aas
lahf
mov
pop
xor
les
gs
jns
xor
sbb
xor
mov
cmpsb
mov
add
push
addl
mov
push
test
imul
inc
mov
shl
imul
sub
jnp
jmp
out
jg
xchg
sub
lods
cmp
and
addr16
ss
and
push
icebp
es
dec
lock
sarb
test
mov
cmpl
mov
inc
push
sub
sub
sbb
push
sbb
sti
js,pn
fcompl
lret
push
mov
aas
cvtps2pi
mov
xchg
bound
jmp
fsubr
inc
sarl
pop
outsl
and
mov
inc
cmpsl
push
sub
inc
in
push
cs
pushf
stc
gs
iret
adc
push
pop
xchg
scas
jne
cmp
push
rorb
fmull
mov
into
xor
clc
push
mov
xor
cwtl
push
insb
inc
push
mov
test
ljmp
repnz
test
pop
push
sbb
sub
ret
xor
lods
jno
lcall
push
fistpl
jne
add
into
pop
pusha
jecxz
pop
insb
jp
mov
mov
jge
lretw
add
inc
mov
imul
les
or
mov
cmp
cld
inc
add
or
inc
sahf
adc
or
in
inc
mov
or
in
imul
or
pop
fwait
insl
inc
cmp
inc
mov
sbb
pop
mov
jp
lahf
scas
mov
fnsave
aas
push
pop
xchg
movsl
sbb
gs
adc
sbb
lds
jne
int
mov
cmp
push
je
pop
adc
pop
jbe
out
adc
popa
jecxz
mov
sbb
sti
mov
xor
popa
cmp
mov
push
ljmp
add
mov
jl
jne
mov
fisubrs
jo
xchg
xor
icebp
xor
jge
cmc
or
xlat
inc
xchg
inc
jecxz
shl
jnp
adc
shlb
mov
sub
data16
push
xor
jmp
pop
sub
jb
mov
mov
cwtl
js
loop
adc
outsl
idivl
xchg
xchg
lahf
ljmp
insl
dec
fsts
pop
and
test
mov
je
cmc
fsubrp
adc
and
mov
inc
mov
cld
out
push
xchg
sti
adcl
rolb
cmpsb
xchg
pop
mov
fs
icebp
mov
icebp
pop
test
cld
add
ss
dec
stos
and
icebp
mov
sbb
jmp
repz
gs
cs
hlt
jno
movsl
js
imull
pop
xorb
pop
icebp
jmp
mov
ljmp
fmull
adc
pop
in
imul
iret
in
insl
sbb
or
cmp
aaa
mov
dec
mov
shll
iret
mov
xchg
add
add
and
ficomps
xchg
lcall
jle
add
insb
dec
xor
arpl
adc
outsb
fwait
out
int3
xlat
loopne
fisubl
lret
jl
lcall
dec
inc
cmpsl
mov
mov
add
push
repz
stos
mov
in
mov
mov
repz
cmp
jg
mov
stos
idivl
and
sarb
fwait
insb
push
ret
push
mov
fs
inc
ret
lret
into
mov
inc
stc
lahf
jmp
mov
aas
push
mov
push
call
test
incl
out
icebp
sbb
jp
and
imul
popf
filds
push
ds
mov
jbe
push
rol
or
mov
orb
fldt
or
mov
hlt
mov
adc
sub
jl
das
jg
movl
add
sti
xor
jl
jecxz
test
in
rcl
lcall
cmp
lods
sbb
pop
and
int
mov
jnp
xchg
jnp
pop
sbb
pop
ret
inc
push
iret
jns
ja
addr16
xor
shrb
mov
das
cmp
or
test
pop
int3
jne
pop
jmp
and
cmpsb
movsl
cmp
cmp
bound
jmp
push
stos
sarl
adc
fstpt
mov
dec
gs
or
loope
xor
mov
mov
ss
xor
sbb
sbb
mov
test
std
xlat
sbb
shrl
cmc
rorl
dec
push
pusha
mov
mov
ret
sarb
mov
stc
xor
mov
sarl
and
jp
leave
adc
lock
sbb
pop
adc
cmp
or
sbb
test
pop
cmp
andl
xor
pop
scas
cmp
jg
out
jl
cmp
cmp
jp
sub
cmc
push
pop
jmp
pop
sub
jge
sub
mov
popa
xlat
xchg
mov
add
mov
cmp
xchg
lods
out
dec
push
mov
mov
ret
incl
xchg
adc
roll
xor
sub
shrl
xchg
std
in
jno
fwait
inc
das
jno
jo
lcall
test
add
repz
jne
mov
mov
inc
imul
js
test
dec
notb
xchg
push
jecxz
pushf
jae
arpl
mov
inc
lret
push
cmp
call
push
and
in
dec
xor
dec
ret
imul
sbb
push
cld
add
jb
das
push
lret
dec
jae
mov
push
fcoms
sub
inc
jle
call
cmpsl
sti
dec
sbb
xor
or
add
testl
jecxz
sbb
movsl
fwait
ja
dec
xchg
mov
jo
dec
cltd
mov
inc
cltd
test
dec
cmp
mov
adc
push
in
push
adc
jnp,pt
mov
out
mov
xchg
clc
sub
and
or
shrb
xchg
jle
pop
inc
adc
sub
jecxz
jg
and
sub
jmp
das
mov
xor
mov
cmp
cmpsl
cmp
xchg
mov
cmp
inc
jg
push
xchg
push
jecxz
je
push
mov
jbe
xorl
mov
inc
push
push
pop
jle
pushf
jne
or
icebp
outsb
jle
push
jno
popf
mov
je
xor
lret
sub
bound
add
aam
cmp
pop
xchg
mov
decl
data16
subl
or
pop
xorb
mov
mov
shr
sub
mov
cmp
or
dec
and
or
sti
jne
popf
es
xchg
xor
xchg
insl
movsb
loop
mov
loopne
add
shl
or
cmp
adc
and
gs
into
jbe
scas
test
or
ja
mov
adc
scas
jb
dec
lret
je
out
mov
ljmp
push
inc
push
and
cmp
popf
pop
mov
mov
cld
icebp
shlb
ss
pop
push
lods
cld
sub
mov
into
adc
icebp
int3
aaa
sbb
or
test
jg
jnp
aaa
dec
mov
xor
fimull
pop
mov
ljmp
fmul
dec
add
cmp
cmp
cmpsb
cwtl
add
shr
inc
push
movsl
hlt
ja
pop
jo
filds
shlb
add
das
stos
adc
rorl
js
push
inc
ds
shr
rorb
lret
mov
insb
loop
cmp
sbbl
fisttps
scas
cmpsl
je
into
outsl
lods
roll
es
ljmp
cld
stc
xchg
movl
fwait
adc
inc
testb
std
cmp
mov
out
das
pop
shl
xlat
pop
aam
in
jle
aam
push
adc
bound
pop
scas
xor
sbb
fnsave
adc
sub
aam
into
xor
cmp
pop
jns
mov
mov
push
dec
cltd
adc
sar
movsl
popa
push
out
or
imul
xchg
iret
pop
lds
cli
aaa
mov
icebp
ret
fidivrs
divb
int
hlt
pop
cld
rcl
rorl
flds
and
jge
xor
add
lods
cmpl
pop
mov
icebp
push
pop
lock
sub
imul
inc
popa
popa
xchg
mov
cli
hlt
insb
or
lods
xor
lahf
shll
cmpsl
jge
orl
xchg
xlat
popa
imul
mov
xchg
nop
mov
xor
dec
fsubs
inc
fsubrl
std
push
pop
mov
push
sbb
iret
pushf
sub
inc
subb
int
fadds
lods
scas
mov
lods
inc
call
dec
sti
dec
push
sub
shll
mov
adc
sub
test
xchg
lret
jge
sub
call
int3
cli
stos
fucomi
andb
pop
daa
xor
movsb
leave
icebp
sbb
and
mov
sarb
pop
sbb
stos
push
and
out
divl
in
mov
popf
nop
add
out
out
and
sub
xor
pop
sbb
cmovge
pop
aad
jbe
xchg
push
std
sub
push
mov
out
repnz
jno,pt
icebp
pop
add
and
pop
lock
mov
sbb
fnstenv
das
cmp
test
icebp
cmp
inc
jp
mov
and
leave
das
loopne
jbe
xchg
fs
rcll
ja
push
xchg
daa
leave
mov
test
pop
icebp
in
or
sbb
jne
xchg
inc
sbb
iret
xchg
ja
add
stos
sbb
xchg
xchg
sbb
mov
cld
sahf
xchg
or
jne
sbb
lahf
xchg
fisubs
jmp
imul
xchg
lcall
hlt
sbb
and
jno
test
and
xchg
call
lahf
pop
or
and
imul
xchg
sub
jmp
xor
add
fnsave
push
aam
dec
rcrl
cmp
mov
lods
iret
iret
dec
mov
push
push
dec
mov
sub
out
xchg
xor
or
out
xchg
mov
xor
jne
std
ljmp
dec
decl
ds
dec
inc
call
mov
leave
adc
fisttpl
mov
or
xor
repz
xor
jmp
dec
inc
rcr
mov
pop
and
jo
sub
aaa
fwait
jae
mov
call
push
dec
mov
inc
inc
push
popa
enter
data16
shrb
add
fldt
cmp
xor
push
ret
push
mov
pop
xor
add
push
orl
and
insb
stc
pop
stos
xchg
jle
mov
pushf
or
push
push
cmp
cld
pop
hlt
lock
clc
inc
xor
mov
jae
divl
mov
outsb
inc
cmpsl
mov
lcall
loopne
ds
adc
ret
inc
in
cli
jne
mov
icebp
sub
jle
mov
pop
call
adc
push
jno
pop
mov
pop
adc
jecxz
and
mov
lods
push
xor
push
jae
mov
stc
dec
in
out
sbb
repz
sbbl
nop
and
pushf
or
adc
ja
push
bound
shll
insb
sub
cs
sbb
mov
insb
xchg
push
hlt
inc
xor
es
jo
cltd
mov
cmpb
pop
inc
mov
imul
iret
pop
sub
out
xchg
icebp
jns
loopne
incl
sbb
cmc
pop
icebp
sub
mov
fmul
xor
jae
add
test
mov
idivl
imul
push
insb
ljmp
adc
cwtl
jl
push
rorl
jae
lahf
push
add
in
div
mov
data16
ljmp
jne
std
fistps
scas
fsubrs
cmp
push
addl
std
imul
testl
mov
or
les
xor
cmp
faddl
mov
es
pusha
cmp
jns
and
xchg
xorl
lods
mov
mov
cwtl
mov
in
sbb
ds
xor
movsl
xor
ja
adc
das
cmpsl
mov
sbb
test
shll
mov
add
ficoms
push
mov
push
cpuid
jo
adc
loope
adc
adc
dec
pop
inc
call
jbe
push
mov
mov
sbb
pop
dec
or
add
mov
in
pop
stos
pop
jmp
rorb
dec
cmp
enter
pop
jp
jae
iret
jmp
out
xor
ret
sub
ss
andl
mov
sub
mov
addb
cltd
not
add
jmp
dec
cmp
push
xor
pop
bound
clc
rorl
sbb
enter
pop
pushf
mov
push
faddl
xchg
rclb
vpsubsw
push
jg
mov
icebp
clc
sbb
ror
mov
je
inc
packssdw
push
repz
pushf
jne
shrb
and
test
je
mov
cli
jae
jmp
lock
and
fcoms
push
fcomi
mov
pop
roll
mov
cmp
clc
jbe
push
data16
out
int
lods
clc
xchg
fisttpll
in
dec
addl
xorb
add
push
stc
push
xor
fwait
mov
jno
mov
adcb
sub
xlat
mov
xchg
and
jbe
push
nop
and
lcall
mov
enter
xor
cmp
out
jae
pcmpgtb
rclb
adc
icebp
or
mov
insb
push
add
int3
xchg
and
mov
fdivrl
inc
jnp
sub
xor
inc
and
dec
pusha
xchg
data16
pop
lret
sub
int3
adc
icebp
or
test
rcrl
jmp
dec
movsl
push
cwtl
inc
add
push
xchg
addb
cld
inc
xor
ljmp
mov
push
mov
in
or
add
movsb
xchg
punpckhbw
fdivrp
lret
mov
mov
pop
cmpsb
int3
dec
insb
cmpsb
or
lods
int
outsl
adc
cld
push
movsb
pop
mov
mov
cmp
jl
sub
mov
push
xor
movsb
in
sbbl
inc
xchg
push
in
dec
lahf
xchg
in
enter
sbb
test
sub
into
pop
inc
mov
mov
stc
mov
or
add
addr16
sub
pop
push
shrl
push
leave
shlb
xor
popf
mov
sbb
mov
lea
jns
xchg
push
call
fisubs
rorl
jo
scas
std
testb
cmp
mov
mov
jno
xchg
pop
ret
sub
xchg
mov
mov
lret
cmc
je
rorl
in
outsl
outsb
fldcw
loop
jns
or
jp
dec
xchg
or
mov
add
mov
pop
and
inc
lods
insb
stos
cli
lock
insl
push
insl
cmp
dec
std
add
add
fidivs
iret
inc
mov
repz
hlt
mov
jmp
das
out
inc
in
dec
sbb
push
test
jo
enter
nop
pop
and
xchg
mov
hlt
out
adc
mov
adc
sub
icebp
ret
dec
adc
push
or
in
adc
stos
into
fisubrl
jp
dec
cmp
out
push
mov
xor
out
adc
jne
jo
mov
or
dec
jo
ljmp
mov
add
xchg
cmpb
out
xchg
xchg
xchg
sub
xor
cvtpi2ps
jo
repnz
shll
notl
in
test
movsl
aas
fisubs
jns
adc
sub
inc
lret
sub
push
xlat
fsubr
pop
cltd
mov
lock
mov
outsb
popa
push
sysenter
or
sub
cmp
mov
inc
rcrb
mov
addb
sub
sub
add
mov
or
jo
xchg
dec
out
movsl
or
cmpsb
push
sbbb
sub
xchg
mov
sbb
leave
pop
out
jbe
sbb
or
mov
dec
dec
or
mov
and
push
icebp
leave
jno
fldcw
push
or
bound
fwait
cmpsb
inc
sub
dec
or
mov
and
mov
xlat
fwait
shll
cmpsb
cmpsb
lret
fnstcw
mov
cmp
in
or
inc
and
outsb
sbb
in
stos
icebp
cld
mov
push
sbb
and
cmp
stos
sbb
pushl
scas
hlt
inc
in
ret
sbb
cmp
cltd
test
insb
outsl
shll
or
mov
jecxz
sub
jo
arpl
adc
les
cltd
ret
xchg
popf
cltd
push
fwait
shl
xor
insl
inc
mov
fldcw
mov
mov
xchg
jp
mov
cld
pop
ret
jle
nop
inc
inc
lcall
cld
xchg
rorl
cli
sub
or
mov
adc
sbb
int3
push
and
repnz
int
sub
add
pushf
or
test
dec
cmp
jo
je
mov
push
clc
fsubrs
or
int
sub
adc
push
mov
cmp
mov
add
lea
and
std
dec
xchg
aam
es
add
mov
mov
cs
lcall
aaa
inc
insl
faddp
mov
sbb
adc
inc
jae
dec
mov
mov
mov
lahf
lock
ljmp
enter
mov
pop
mov
push
popf
dec
ja
fs
mov
das
mov
test
mov
pop
pop
pop
sti
int
mov
stos
insl
cmp
inc
insb
arpl
insb
shrl
or
cmp
int3
inc
jne
decb
hlt
hlt
out
repnz
mov
xorb
shlb
and
cmp
int3
xchg
popa
push
xchg
in
outsl
loopne
out
fnstcw
call
int
jge
sarl
ficomps
mov
sub
mov
insl
sub
mov
mov
mov
lret
aam
shrl
shll
shrl
pop
inc
movsb
stos
pop
cmp
lods
mov
xchg
cmc
adc
mov
into
mov
insb
cmpsb
and
adc
std
xor
or
nop
aad
arpl
out
popa
lcall
ret
lcall
dec
rcrb
mov
lahf
mov
movsb
xlat
dec
mov
stc
je
dec
adc
std
sub
ret
iret
pop
insb
sbb
xchg
gs
loop
xchg
in
and
out
rolb
mov
lcall
mov
and
mov
mov
inc
std
add
pop
add
push
jecxz
fdivrs
sarl
hlt
pop
jg
roll
sti
test
scas
or
inc
inc
test
test
cwtl
sub
test
pusha
xchg
push
cltd
jle
gs
daa
insl
jnp
push
mov
mov
jnp
or
cmp
out
scas
and
fidivrs
in
pop
icebp
rdpmc
ja
cmpl
add
mov
add
or
lds
xchg
xor
sbb
lret
shr
pop
xchg
push
add
push
or
cmp
mov
mov
mov
mov
mov
push
pop
inc
pop
inc
hlt
xor
sahf
cld
cmpsb
mov
pop
fwait
in
sti
cwtl
ss
dec
sbb
scas
and
xchg
fidivrl
sub
fnsave
or
rcl
das
fsubrs
call
js
dec
icebp
popf
sahf
icebp
arpl
push
xor
lret
cmc
xchg
inc
xorb
xchg
ret
loopne
in
nop
cmp
mov
aas
pusha
pop
mov
add
inc
pusha
fsts
jae
push
pop
test
cmp
lea
mov
cmp
aad
fwait
icebp
jmp
mov
orl
jae
out
scas
imul
mov
lods
adc
add
jne
pop
test
add
and
adc
gs
test
or
in
jmp
jecxz
popa
pop
xchg
rclb
addr16
call
fidivrs
hlt
hlt
mov
mov
outsb
ret
sub
pop
faddl
aaa
bound
lea
arpl
sbb
fdiv
cmp
mov
fisttpl
sub
adc
sahf
dec
cwtl
or
mov
jp
ret
sub
mov
js
scas
in
sub
jle
push
jle
xchg
mov
add
or
cli
inc
andl
mov
outsb
fidivrl
nop
aas
mov
pop
pop
shrb
fldpi
insb
dec
xchg
mul
mov
in
cmc
fnstsw
xchg
in
cmp
data16
out
cmp
insb
jo
cmpsl
mov
stc
sub
ds
jns
push
out
je
in
adc
das
mov
mov
imul
and
mov
stos
out
popl
cltd
mov
in
popf
cmp
arpl
inc
insl
stos
mov
add
sub
scas
push
lea
clc
aaa
out
xchg
jg
cs
add
ret
loopne
and
decl
sbb
adc
test
fwait
popa
xor
cmp
test
test
clc
xor
int
dec
inc
adc
cld
fbld
adc
leave
cmp
inc
out
pop
dec
sbbb
or
cltd
inc
pushf
ret
and
pop
kmovw
xchg
push
js
or
pop
cmp
mov
mov
cmpsl
lret
mov
fstpl
xchg
xor
xor
std
sbb
inc
sbb
je
dec
aam
shrb
inc
lret
pop
arpl
dec
nop
cmp
and
inc
sub
js
cld
xlat
add
inc
xchg
aad
xor
dec
aas
mov
add
shlb
cltd
roll
add
jo
scas
popf
fisubs
clc
repz
mov
mov
xchg
xchg
pop
fcomps
or
inc
inc
sbb
pop
dec
fstpt
pushf
movsb
cmp
sbb
pop
push
add
rcrb
pop
hlt
dec
adc
out
and
push
sub
rclb
outsl
rorl
dec
popf
pop
and
push
jb
inc
mov
out
cmc
incb
jge
cmp
adc
lods
cmpsl
iret
cld
mov
adc
js
xchg
or
cs
test
xchg
into
bound
insb
arpl
shl
in
into
mov
lcall
cmpsl
push
dec
enter
jno
mov
mov
mov
dec
cs
test
lea
pushf
jecxz
xor
jns
repz
sbb
imul
jl
cmp
mov
enter
mov
repnz
cwtl
cs
mov
mov
mov
mov
cltd
xor
je
rcrb
jbe
iret
sub
out
jo
sub
inc
sub
cmp
lcall
outsb
loope
jae
inc
pop
inc
sbb
sbb
cmp
lret
lcall
mov
loopne
aam
dec
mov
mov
mov
mull
sub
fbld
out
aad
cmp
push
fistps
and
add
pusha
cmpsb
push
sahf
stos
push
push
jmp
test
popa
leave
icebp
mov
data16
mov
mov
outsl
xor
into
es
cmp
mov
xchg
test
push
mov
mov
adc
in
sbb
outsb
push
push
mov
add
xor
stos
add
outsb
inc
mov
and
dec
cmpsb
js
jle
sbb
push
sub
sqrtps
shlb
lock
xchg
shl
cli
cmp
imul
xlat
insb
sbb
out
mov
ret
inc
mov
rcrl
xlat
inc
insl
mov
lock
out
ret
call
jne
inc
into
or
inc
arpl
shll
add
or
mov
cmp
lahf
add
push
das
mov
cmp
std
jmp
adc
es
mov
push
mov
mov
lock
push
aas
xchg
dec
pop
sub
shlb
dec
fs
in
pop
cmp
lods
nop
mov
ljmp
xlat
dec
xorb
mov
or
data16
adc
cmpsb
je
stc
arpl
in
jmp
or
dec
lahf
jmp
mov
jmp
mov
adc
sbb
sub
cmp
in
sbb
mov
mov
cli
cmovns
inc
fwait
imul
fdivr
push
lds
xor
in
fs
cwtl
out
sub
mov
enter
iret
pop
inc
push
cmpsb
pushf
jns
cmpsb
cmp
inc
fdivs
mov
jns
je
jmp
rcll
out
push
mov
or
xor
dec
xchg
cmp
adc
stc
sbb
hlt
xor
imul
int3
dec
jo
je
mov
push
or
mov
dec
scas
test
mov
add
and
cmpsl
sub
jnp
sbb
cmpsb
mov
push
decb
pop
or
sbb
sub
cmp
outsb
outsl
out
loope
sub
out
sbb
pushf
out
cltd
jmp
insl
femms
lahf
out
out
dec
fldcw
aaa
out
and
xchg
aas
fndisi(8087
sub
sbb
mov
xchg
fmull
mov
out
or
imul
clc
gs
out
push
sbb
leave
or
testl
jb
xor
cmp
popf
lahf
shr
xor
jle
popf
and
xacquire
mov
xor
gs
push
adc
cmp
mov
pusha
and
pushf
cmp
insl
out
sbb
insb
dec
dec
in
das
sub
sbb
imul
inc
rcrb
loopne
and
ss
clc
fsubrl
xchg
dec
push
jno
adc
dec
push
out
nop
adc
das
xor
cmp
ja
pop
dec
jp
push
push
sub
dec
inc
push
push
je
mov
fildl
pop
mov
cld
popa
pop
cmp
push
lcall
stc
xchg
cmpl
jae
push
fneni(8087
sti
jns
xchg
shrb
fldenv
or
xchg
popa
mov
mov
xchg
mov
es
ficoml
add
push
add
sarb
sub
dec
pop
mov
jnp
cmp
daa
cmpsb
pop
adcb
or
inc
jae
loopne
xor
add
cmpsl
cli
sub
inc
mov
pop
inc
mov
aas
sub
sbb
jmp
in
aas
jo
push
adc
sbb
scas
pushf
jl
daa
lods
fisubs
inc
or
sbb
mov
popf
shl
pop
popa
or
fisubrl
loop
repz
arpl
insb
inc
adc
and
aaa
or
roll
lahf
outsl
lods
std
adc
jb
subb
push
int3
push
fimuls
sbb
clc
adc
inc
pushf
inc
jb
cld
or
cli
pushf
cmp
mov
jns
test
gs
mov
mov
iret
mov
xchg
jg
pushf
movsl
pop
cmp
pusha
sahf
das
and
sbb
xchg
incb
enter
loopne
pop
inc
mov
cmc
adc
cwtl
jnp
or
push
mov
pop
loope
rcr
imul
fs
cmpb
in
mov
pusha
sub
lock
xor
xchg
ficoml
jne
scas
ret
fdiv
push
fwait
mov
push
jns
push
mov
jp
xchg
xor
gs
movsl
std
idivl
fs
cmp
lcall
add
jge
test
push
and
lds
lods
push
movsl
cli
enter
mov
sbb
icebp
shll
jbe
test
in
pop
daa
pop
mov
out
loope
dec
test
push
faddl
mov
pop
jl
decl
js
inc
repz
push
push
or
jae
inc
lahf
cmpsb
imul
nop
jmp
aaa
movsl
clc
lcall
pop
mov
push
or
movsb
adc
or
or
push
popa
jge
pop
lret
xchg
dec
jecxz
out
popa
je
inc
pop
fldenv
in
addr16
jge
pop
daa
lods
test
pop
popa
push
mov
out
pop
mov
out
loop
loopne
stc
adc
fcoms
xor
lds
divps
and
es
xchg
mov
push
movsl
inc
mov
pushf
xchg
adc
cs
ss
test
sahf
or
test
jl
push
jne
cld
data16
insl
push
push
dec
push
stos
cmp
sub
sbb
stos
push
call
push
mov
imul
ret
ss
rorl
jl
adc
rolb
out
and
xchg
test
push
int3
push
clc
and
cmp
fidivs
or
icebp
in
sbb
or
fucomi
int
jecxz
inc
pop
dec
push
hlt
inc
outsl
cltd
push
mov
in
jne
pop
dec
lret
adc
outsb
enter
nop
mul
adc
lock
sub
sub
xchg
clc
push
and
dec
sbb
fcompl
jbe
sbb
leave
mov
sbb
lods
or
xor
and
out
inc
inc
fwait
pop
add
inc
and
adc
sub
push
mov
leave
pushf
xchg
in
mov
aad
gs
xor
popa
popf
fdivrl
and
sbb
out
sbb
jns
pop
repnz
fildl
xchg
jnp
lcall
mov
or
int3
nop
cmp
or
adc
in
inc
or
les
mov
sub
sbb
dec
loopne
mov
in
jle
adc
xor
mov
pop
cmp
in
outsb
rcll
in
mov
pcmpgtw
stos
push
dec
pop
test
mov
loope
push
jmp
adc
int
adc
jns
pop
sbb
in
xchg
lret
xchg
sti
insl
stos
xor
fnsave
mov
daa
dec
jo
movsl
sahf
test
stos
shll
or
das
fdivrl
das
sahf
loop
xchg
pusha
rcrl
cmc
jno
jbe
add
ja
and
pavgw
lock
adc
andb
mov
lock
jge
mov
sbb
sub
dec
pop
cmp
test
shll
dec
in
mov
out
add
xor
pop
enter
lock
jp
in
xchg
cmp
enter
jge
cmp
jg
arpl
sub
lret
jns
out
add
inc
and
mov
nop
fs
insl
mov
xor
and
mov
mov
negb
loope
xor
popf
cmpsl
mov
lods
jb
sbb
inc
inc
mov
imul
or
insb
andl
fimuls
or
pop
lret
loopne
fwait
xchg
inc
in
outsl
dec
push
arpl
loopne
movsw
in
enter
arpl
stos
negl
repz
mov
inc
lahf
xchg
fistl
cmp
xchg
adc
cmp
mov
jae
cmp
sub
addr16
je
sbb
xor
aaa
out
inc
sbb
test
mov
xor
add
mov
and
scas
cmp
out
lahf
xchg
adc
daa
repnz
jbe
jnp
pop
push
fwait
and
xor
bound
out
out
jae
push
xor
mov
cltd
enter
push
and
jnp
xchg
inc
lods
adc
mov
iret
lds
sbb
sbb
xor
cwtl
in
sbb
pop
ljmp
gs
dec
cwtl
and
or
sub
loop
ss
int3
lock
jb
inc
jne
loop
popf
sbb
cmp
cltd
push
mov
cmp
inc
pop
and
lods
ja
mov
sub
or
fs
and
xchg
insl
jp
out
pushl
xor
pop
test
push
fs
fnstsw
sub
xchg
iret
aas
out
adc
mov
ljmp
sbb
xlat
out
push
lea
jno
inc
inc
mov
clc
into
not
lods
lahf
lds
sub
call
das
imul
dec
out
inc
in
loope
pop
ds
jg
xchg
sub
shrb
xchg
pop
fisubrl
insw
mov
ret
aaa
test
or
mov
adc
pop
push
jnp
dec
xchg
mov
add
outsl
test
fwait
push
and
fnstcw
hlt
fadd
nop
xchg
and
dec
loope
jmp
xchg
add
lahf
ja
add
rcr
jo
mul
movsb
ret
stos
cld
jnp
xor
dec
pop
jmp
push
jecxz
sbb
mov
and
scas
js
mov
cmc
movsb
dec
sbb
sbb
fwait
cs
mov
and
jl
bound
cwtl
aad
idivl
into
hlt
or
data16
xchg
shlb
jecxz
ds
das
shrl
insl
call
sub
xor
scas
ljmp
shl
shll
xchg
cmp
fptan
pop
jne
rorl
push
into
jmp
pop
nop
loopne
fdivrs
jle
inc
xchg
xor
ficoml
jbe
outsl
push
pop
or
push
cmpsb
or
cmp
jo
jb
jl
popa
out
sti
push
mov
je
ljmp
outsl
pop
lds
js
sub
aaa
xchg
mov
out
ret
jmp
pusha
jbe
call
pop
scas
arpl
jle
mov
lock
cs
mov
mov
cmp
xor
div
and
fstpt
xchg
pop
push
xor
movsb
pop
mov
dec
mov
push
fisttpl
lret
popf
scas
mov
outsl
sarl
or
lods
jle
lret
inc
add
lods
pop
test
xor
inc
inc
push
lcall
rcll
imul
lret
cmp
add
mov
sbb
mov
cmp
pusha
cmpsb
add
repnz
lahf
mov
repnz
lcall
loopne
mov
jmp
loop
inc
repz
in
cmc
negl
cwtl
leave
dec
mov
lods
jmp
insb
xchg
pushf
xlat
and
daa
in
cli
lcall
mov
pop
mov
andl
push
push
cwtl
jp
xchg
push
jge
xor
cmp
cs
lods
insl
arpl
ss
bound
outsb
push
lods
fmuls
xchg
cmp
dec
cld
inc
into
push
or
xchg
enter
mov
loop
clc
add
jbe
add
nop
push
pop
popa
gs
mulb
rcrl
jl
bound
mov
mov
mov
arpl
pop
add
iret
jecxz
xchg
xor
mov
dec
pushf
adc
hlt
dec
addr16
or
push
decb
jl
and
je
test
mov
push
test
cmp
fwait
clc
aam
ror
rcrb
lods
jbe
lods
or
push
cs
inc
lds
sbbl
mov
sbb
and
aam
shrb
jns
sub
das
les
paddsb
movb
mov
and
jnp
and
andb
jge
or
add
sbb
popf
dec
scas
loope
jns
jg
mov
movsl
fdivrl
movb
sub
dec
sbb
mov
pusha
mov
scas
insb
xor
pop
rorb
leave
sub
sbb
ss
adc
sub
add
daa
aaa
daa
outsl
sahf
or
pop
xor
stos
sub
aaa
sbbb
mov
orl
sub
and
sbb
push
test
fsub
xor
adc
lret
sub
ds
shlb
mov
mov
mov
lret
lods
mov
dec
add
scas
or
cwtl
jl
push
mov
out
test
negl
jnp
ret
outsl
mov
add
dec
ret
orl
dec
movsb
sbb
jle
je
push
mov
jbe
mov
adc
andw
add
push
mov
pusha
adc
data16
out
lock
jle
lret
loop
jmp
cld
fldenv
xor
push
lods
mov
nop
inc
dec
push
jecxz
nop
lods
ja
push
adc
push
mov
popf
dec
inc
lds
ja
pushf
fsub
inc
pusha
imul
les
mov
std
xchg
jle
fmulp
jbe
mov
mull
push
mov
scas
je
jecxz
adc
dec
hlt
ja
sti
int
jb
inc
or
stos
sub
mov
pop
dec
mov
js
mov
lahf
mov
dec
test
jp
cwtl
stos
mov
xchg
mov
mov
inc
imul
es
push
in
dec
sub
imul
outsb
xchg
out
scas
mov
int3
push
loope
or
xor
jecxz
and
ja
jne
nop
pop
mov
mov
enter
jb
cmp
inc
push
js
cs
jp
and
jg
xchg
sbb
in
dec
in
fsts
mov
sbb
sahf
mov
add
cmc
pop
movsl
loope
xor
out
test
dec
jno
fdivrl
push
push
int
imul
arpl
lcall
push
jbe
repnz
xor
jno
loopne
add
stos
cltd
in
adc
bound
cwtl
mov
mov
add
out
mov
jbe
pop
adc
ljmp
adc
movsb
dec
sbb
fildl
shll
lcall
pop
dec
cmp
ja
mov
hlt
scas
icebp
int3
sbb
cli
aaa
and
fldcw
es
test
jecxz
dec
xor
sub
popa
dec
popa
sub
cld
arpl
dec
inc
inc
insl
fstpt
enter
mov
jno
lret
fsubp
lods
inc
test
out
mov
popa
jge
push
cmp
outsb
fldt
inc
push
add
call
lahf
int
mov
rolb
out
les
cmp
gs
xor
out
ss
sub
aas
cmp
pop
mov
mov
ret
lea
dec
lcall
xor
sahf
inc
orb
pop
and
fidivs
popa
out
roll
outsl
xchg
push
jmp
jg
shl
sbb
fnstenv
xchg
mov
mov
jg
insb
add
mov
mov
jnp
aad
ficoms
sub
mov
or
out
cmp
roll
dec
pop
loop
xchg
sub
dec
sti
and
or
mov
subw
dec
das
addr16
setne
sbb
test
sub
inc
testl
xchg
lock
dec
xor
lcall
shr
or
xchg
imul
sti
push
inc
or
jnp
in
xor
bound
mov
mov
mov
call
loop
sbb
lea
pop
xor
sub
inc
int3
mov
test
jno
orb
inc
xchg
push
sbb
pop
pop
sbb
sub
jbe
lahf
lcall
and
stos
call
stc
fsubr
scas
addr16
inc
ret
in
je
clc
xchg
sbb
mov
in
and
pop
mov
xchg
pop
imul
adc
and
pushf
jl
jecxz
nop
fcmovne
jge
sub
sbb
add
dec
mov
add
sbb
sbb
cmp
movsl
ds
hlt
mov
xor
cwtl
scas
xchg
in
lock
inc
push
mov
out
lds
inc
cmpsb
clc
mov
adc
lcall
movsb
add
adc
scas
inc
inc
dec
jle
add
pop
loopne
xchg
inc
lods
or
mov
xchg
arpl
movsb
mov
insl
add
lea
outsl
xchg
aas
adc
dec
pop
out
sysret
imul
push
inc
cltd
sub
rcrl
test
mov
or
jb
repz
scas
icebp
je
andb
sarl
scas
in
notl
mov
mov
dec
push
pop
dec
cltd
jg
jo
inc
jbe
adc
pushf
jae
enter
and
repz
dec
enter
test
fiadds
push
mov
dec
adc
add
xor
cmp
xlat
mov
outsl
test
xlat
data16
fists
inc
xchg
push
int
int3
das
jo
inc
lret
mov
jb
movsl
mov
pop
jmp
fmuls
and
pop
pop
push
cmp
in
dec
sbb
mov
jge
mov
mov
pop
cld
movlhps
ud2
mov
xor
in
or
test
sbb
int3
adc
mov
mov
inc
scas
adc
push
lret
std
cmpsb
leave
out
xor
pop
lea
repz
add
jnp
faddl
imul
cli
dec
lods
pop
jge
mov
je
adc
fsubl
jecxz
or
icebp
aad
movsl
xor
cmc
mov
ret
mov
mov
pushf
mov
push
adc
xor
jns
sbb
pop
jecxz
icebp
imul
lds
clc
daa
jl
add
fdivrs
xchg
push
sub
pop
in
push
jg
mov
push
add
mov
xchg
aam
das
gs
lahf
pop
push
fnsave
push
cld
lods
mov
jl
add
or
lods
mov
dec
push
jo
ljmp
cmpsl
rsqrtps
int3
je
xor
sarl
xchg
xchg
xchg
imul
das
inc
xorb
mov
in
cmp
lds
push
stos
test
mov
mov
xor
lock
stos
dec
cmp
push
call
pop
aad
in
dec
leave
cs
cli
mov
xchg
es
inc
cmc
jb
repnz
rclb
scas
hlt
imull
mov
cmp
xchg
push
in
push
dec
pop
inc
loop
orb
pushf
adc
inc
es
ret
fnstsw
mov
cmp
mov
push
jle
in
arpl
sub
int3
or
xor
adcl
push
adc
cltd
jecxz
push
xchg
dec
cmp
mov
idiv
xchg
pushf
sub
inc
movsl
cmpsb
jl
adc
adc
testb
mov
xchg
cmpsb
rcl
mov
xor
push
mov
loop
call
into
pushf
jne
mov
fcoms
insb
push
jge
sbb
mov
es
in
sahf
pusha
inc
imul
mov
hlt
pop
outsb
das
dec
hlt
jbe
lock
cmp
mov
mov
nop
fimull
jecxz
jl
cmp
arpl
pop
dec
data16
jmp
fwait
test
lods
cmpsb
pop
xchg
jg
mov
inc
pushf
add
mov
cs
ljmp
pop
mov
fisubrs
and
ss
sub
fidivrl
jns
adc
push
std
testb
inc
mov
mov
cmp
idivb
mov
test
call
jno
sbb
adc
mov
mov
popa
inc
icebp
and
push
pop
xor
mov
scas
pop
loop
mov
movsl
mov
repnz
mov
loop
lcall
int3
ja
push
pop
sbb
or
sbb
ljmp
je
xor
and
mov
mov
js
pop
mov
cmp
dec
add
stos
scas
mov
mov
push
sbb
ret
loope
push
cmpsl
shlb
bound
mov
jno
cli
dec
clc
cwtl
popa
mov
adc
sti
and
loop
aas
int3
repz
add
movsb
push
pushf
push
ss
cmp
out
adc
dec
fiaddl
or
loop
cwtl
mov
cmp
pop
jl
stc
pop
into
call
mov
cmc
idivl
cmc
pop
pop
cmp
cmp
mov
xor
lea
or
xchg
aam
fadds
ds
stos
xchg
add
xchg
xor
jbe
ljmp
fadds
mov
out
jnp
pop
lods
mov
sti
gs
outsb
inc
inc
test
or
and
mov
jmp
pop
fcmovnu
outsl
jmp
mov
fcoms
cld
mov
push
sti
stos
pop
test
push
fisubrl
cmp
ss
add
adcb
fs
popa
or
insb
orb
aad
push
test
aaa
fwait
pop
pop
push
inc
or
mov
pushf
jbe
movsl
shrb
or
les
mov
sub
out
mov
or
and
test
ljmp
lret
dec
std
and
movsb
out
or
out
stos
repz
cmpsb
rcrb
lahf
push
inc
mov
or
rorb
push
insb
push
cltd
pop
pop
mov
xchg
fs
sub
mov
cvtps2pd
fdivrp
int3
ficoml
fsubr
insb
push
push
adc
xchg
jb
cli
jg
jns
and
pop
add
adc
or
or
mov
push
enter
xchg
bnd
sub
popf
ja
out
adcb
ja
sbb
push
push
les
scas
test
daa
lret
fistl
mov
aas
mov
aad
daa
subl
pop
popa
lahf
jl
jo
addl
cmp
lret
pop
call
push
lock
ret
adc
mov
idivb
mov
dec
sub
fistps
and
jmp
movsl
scas
xchg
insl
mov
dec
sub
shrb
fistpll
inc
shll
adc
mov
stc
jmp
lret
pop
jle
xor
pop
adc
mov
mov
hlt
lods
jbe
sub
cmp
das
loop
out
test
aam
call
jae
in
ja
pop
push
icebp
cltd
pop
popf
pop
xchg
push
insb
push
mov
scas
fnstcw
cmc
xor
push
icebp
cmp
cmp
mov
lods
jnp
out
bnd
dec
push
shld
mov
rorl
scas
ja
popa
pop
aaa
lds
jg
int3
sbb
or
add
enter
pop
into
adc
sbb
fistpll
xchg
mov
testl
aas
xor
shrl
inc
leave
jle
rorb
les
cmp
dec
add
jmp
sahf
sbb
adc
out
dec
push
or
push
sarl
dec
jae
cmpsb
dec
imul
cmp
bound
jno
fldl
xor
or
sub
push
push
mov
loopne
cmpsl
stc
aam
pop
xchg
int
mov
in
scas
mov
rcr
and
repnz
int
lcall
pop
or
mov
or
inc
imul
push
stc
cmp
inc
loop
fdiv
enter
dec
fdivrl
mov
mov
mov
shr
fildl
int3
and
dec
call
mov
cmpsb
add
ljmp
inc
pop
out
pop
mov
mov
cmpb
sub
cld
sub
pop
aad
inc
pop
inc
sub
fildll
loop
inc
insb
ja
or
fsubl
lods
adc
xlat
jg
xchg
je
ss
bnd
adc
sbb
aaa
bound
or
cs
mov
cmpsl
add
test
inc
or
jge
insl
jg
andb
lret
jl
lock
pop
and
repnz
sub
push
add
in
enter
movsb
or
shrb
mov
loop
ret
push
popa
dec
mov
xor
pop
sub
dec
pop
sbb
pop
clc
test
les
add
outsb
mov
xchg
out
aaa
or
pusha
hlt
push
vmread
jb
push
or
outsl
xchg
clc
pop
insb
mov
outsl
call
inc
clc
loopne
xor
rcrb
dec
into
mov
add
lret
mov
pop
inc
das
pop
sub
and
push
iretw
jecxz
clc
ds
sbb
call
in
sub
clc
push
out
mov
pop
xchg
fstp
sub
loope
outsl
mov
push
dec
jge
add
lahf
push
adc
xchg
push
subb
mov
out
and
xchg
sub
add
in
sbb
lods
add
stos
xchg
pop
lahf
mov
int3
or
nop
mov
pop
gs
shlb
xchg
nop
notl
nop
jns
movsb
shr
das
sbb
rcr
jnp
cmc
mov
pop
movsl
sbb
out
out
mov
push
jle
stc
push
mov
out
pop
out
sbb
jnp
mov
scas
xchg
out
inc
pop
call
push
int3
xchg
mov
adc
xchg
fidivrs
fs
mov
mov
pop
insl
inc
fstpl
sub
or
add
jo
movb
and
lods
rcl
les
loopne
dec
pop
jl
dec
sub
pusha
fists
dec
mov
std
ss
xchg
addb
ds
pop
int
cmpsl
pushf
jae
pop
sbb
mov
jmp
lds
stos
loope
jl
pop
rcll
mov
ret
rep
mov
push
lret
nop
sbb
scas
cld
fldl
gs
add
sub
fsubs
and
rolb
and
mov
pushf
popf
insl
pop
inc
repnz
decb
cs
out
push
fisttpl
mov
sahf
cmpsb
je
iret
adc
int3
insb
push
lahf
lahf
xlat
xorl
sahf
push
sbb
jge
lea
inc
add
dec
xchg
jle
sub
and
les
or
jno
xchg
shll
cmp
cmp
cmc
or
hlt
or
ret
call
in
sub
insb
inc
add
add
cmp
cvttps2pi
movsb
pop
negb
push
ret
pop
add
gs
shll
dec
inc
sub
mov
xchg
andl
mov
inc
test
or
sub
push
sbbl
mov
aas
or
das
cmp
cs
cltd
daa
inc
mov
stc
dec
inc
mov
je
push
andb
xor
sarb
mov
cld
cld
xchg
lods
bound
sbb
xchg
jg
push
jecxz
fsubrs
pushf
std
mov
cwtl
cli
cld
mov
test
or
jo
dec
fbld
movsl
xor
arpl
shll
jl
ljmp
lea
mov
xor
push
inc
mov
call
push
int3
enter
negb
nop
add
mov
les
or
mov
or
jle
and
mov
shll
inc
push
add
lods
push
inc
pop
jl
sub
push
add
mov
push
jbe
push
lcall
icebp
cmpsb
cmp
fildll
pop
gs
jl
jbe
or
iret
ret
pop
mov
mov
xor
or
xchg
fdivp
mov
gs
test
adc
std
ja
mov
loope
dec
jmp
jno
sbb
fucomip
btr
and
jae
lahf
sbb
cmp
inc
fisubs
js
stos
iret
iret
into
aad
cs
js
fisubl
lret
jbe
in
pop
inc
pop
adcl
fstps
cld
and
jmp
push
rcr
adc
call
ret
popa
sub
and
loopne
dec
loopne
dec
cmpb
shll
mov
cmpsb
push
call
mov
out
ret
sti
push
xor
dec
lahf
adc
insl
scas
mov
das
push
mov
mov
cld
imul
mov
lods
jb
cmp
mov
out
loopne
pop
arpl
mov
rcl
cmpl
std
pop
push
data16
js
sbb
mov
lret
imul
repnz
stos
cmp
lret
testl
jnp
and
popf
and
lret
test
xor
jecxz
loopne
in
mov
in
test
xor
arpl
loopne
scas
insl
pop
pushf
pop
cmpsb
dec
dec
out
push
jae
dec
and
inc
or
fcoms
mov
lea
loop
mov
or
mov
xchg
dec
or
into
clc
or
inc
push
pop
add
or
shrb
jb
sbb
jne
sub
push
sbb
sub
xchg
or
jecxz
mov
mov
scas
sbb
cmp
movsb
cli
call
movsl
aas
ljmp
jge
test
jnp
ss
out
push
mov
jno
xchg
inc
in
mov
dec
cmp
jae
sti
or
add
cmp
sub
loop
cld
add
xor
or
cmp
jl
addr16
add
push
cmpsb
fcomps
xchg
dec
pop
test
aas
into
filds
adc
xchg
lds
cs
mov
aam
mov
or
sbb
and
or
scas
cmp
inc
imul
popa
test
mov
mov
push
nop
push
mov
jecxz
repnz
imul
insl
js
push
pop
dec
sub
cmp
mov
jmp
mov
je
sbb
xor
cmp
push
pop
stos
dec
das
lret
jbe
fadd
fdivrl
and
aas
into
pop
das
mov
or
out
mov
movsl
sub
jo
xor
sub
jae
and
in
fistpll
cmp
sub
push
test
add
adc
loopne
dec
push
jb
neg
aam
dec
jo
mov
push
sub
dec
dec
jne
sub
dec
aam
push
fdivp
xor
cmc
frstpm(287
pop
push
aaa
cmp
jo
push
xchg
mulb
sbb
sarb
sbb
fsub
lcall
out
enter
push
movsb
repnz
fldcw
push
orl
pop
add
dec
push
or
loop
loope
lea
mov
stc
cmp
int
inc
lods
or
out
cld
roll
xchg
pop
lahf
cmp
push
lods
pop
adc
idivb
rorb
mov
jl
jl
add
xor
sbb
lret
push
push
rcrb
adc
mov
mov
pop
cmpsb
adc
fwait
add
xor
jg
mov
sub
out
ss
je
mov
mov
cs
fs
fcmove
hlt
dec
mov
lahf
pop
mov
out
cs
mov
stos
fiaddl
mov
jb
mov
mov
xchg
int
mov
xchg
push
push
mov
push
inc
push
inc
mov
lods
add
mov
jo
in
jbe
push
or
push
add
jmp
sub
test
sub
std
popf
xor
cwtl
jnp
add
lods
adc
inc
sti
push
push
lds
pop
cmp
sbbb
sahf
push
cs
inc
cmpsl
adc
dec
pop
dec
pushf
out
lret
push
mov
incl
xor
xor
stos
in
jle
xchg
popa
push
add
cmpsl
mov
inc
adc
lods
lea
cmp
sbb
xchg
add
push
sbb
test
and
sahf
cmpsl
mov
sub
mov
xor
jne
adc
popf
xor
mov
insl
int3
add
add
sub
push
lods
popf
test
dec
lods
aam
stos
mov
mov
add
fadd
push
jle
cwtl
jmp
ficoms
shr
xor
ret
std
or
mov
mov
push
and
mov
xchg
jo
mov
jae
mov
mov
test
rcrl
leave
icebp
repnz
ja
mov
xlat
fstpl
call
xor
jo
icebp
jo
push
xor
loop
mov
dec
push
cmp
push
pop
nop
mov
pop
push
mov
pop
sbb
push
and
js
adc
sbb
pop
les
js
cld
cmp
test
push
jecxz
cld
push
jge
mov
adc
mov
seta
pusha
and
jp
jmp
cmpsl
jg
mov
jno
push
mov
pop
xor
in
lea
stc
xor
fsubl
mov
cli
mov
ljmp
jge
dec
lret
jmp
test
xchg
aam
mov
insb
enter
test
dec
aas
mov
adc
dec
jo,pt
mov
stc
pusha
mov
push
mov
shl
cmp
adc
call
pop
or
and
sub
xchg
pop
data16
aam
push
mov
je
loop
in
mov
arpl
xchg
repnz
xchg
cmpsb
cli
cmpsl
enter
arpl
sub
sbb
std
outsl
push
inc
cmpsl
pop
dec
fistpl
mov
enter
xchg
popa
inc
mov
sbb
stc
mov
pushf
cli
dec
daa
insl
mov
ret
sub
xchg
mov
push
cld
in
fildl
jns
pop
or
xor
mov
sub
pusha
outsb
rolb
xchg
pop
shll
gs
mov
out
mov
push
repnz
mov
stos
xchg
in
jne
fistpll
pushf
mov
push
rcll
bound
lahf
and
mov
lods
xor
clc
pop
cmpsl
inc
pop
addr16
pop
ret
popa
rcrl
cmc
in
shlb
leave
jge
pop
pop
jmp
test
stos
jl
rolb
fwait
fwait
nop
inc
add
stos
iret
mov
mov
xchg
in
clc
xor
dec
ljmp
sbb
jl
popa
pop
jg
clc
notl
jae
pop
out
fisttpll
daa
enter
dec
cld
jge
shufps
push
pop
fnstcw
inc
mov
xchg
sub
pop
dec
pop
pushf
mov
fnstsw
lods
sbb
cmp
inc
ss
pop
xlat
ss
push
enter
xchg
xchg
jmp
push
out
outsl
xlat
ljmp
std
out
scas
sbb
dec
xor
ss
iret
cmp
int3
sub
pushf
stc
mov
pop
cmpsb
mov
dec
fadd
adc
daa
in
xchg
jb
ret
or
or
xchg
pop
pop
cmpsl
data16
sub
cmp
imul
and
pop
add
lret
fwait
aam
pop
fdivrs
popf
mov
ret
jno
xchg
lret
or
cmp
ljmp
repz
in
je
imul
pop
lods
sti
gs
push
aas
and
dec
leave
mov
in
inc
sbb
fistl
or
ficompl
fildll
loop
rcrb
clc
fwait
mov
test
iret
loop
adc
sahf
pop
jl
push
xchg
icebp
pushf
aas
sahf
out
in
aad
mov
popa
gs
fcoms
shr
add
insl
xchg
int3
jl
loopne
aam
cwtl
mov
jp
outsl
lds
and
dec
jbe
jg
clc
jmp
xchg
push
sbb
or
mov
mov
clc
outsb
rorl
fdivrs
stos
out
push
lret
scas
dec
dec
lea
jecxz
cmpsl
adc
into
in
or
push
jnp
adc
adc
gs
jecxz
in
int3
push
inc
fisubrl
and
pushf
mov
add
pop
sub
shr
add
outsb
ja
or
inc
sub
and
dec
fdivl
jae
imul
scas
and
cmp
mov
mov
out
add
fsubrl
scas
pop
repz
jmp
shl
jl
jb
dec
cli
and
jno
xchg
push
mov
add
lock
push
lock
out
xor
js
insl
xchg
repnz
jbe
sbb
mov
inc
repz
cmp
adc
sub
fsubrl
cmc
jge
push
add
lods
and
xchg
push
roll
jle
add
jne
and
push
scas
imul
sbb
cmp
push
inc
jns
jg
sub
cmp
mov
dec
pop
mov
outsl
and
pop
nop
ret
or
push
int
decb
lret
xchg
push
inc
jmp
jp
fstps
mov
and
les
pop
bound
fildl
in
bound
add
lds
add
mov
push
les
fisubrs
in
sti
int3
dec
inc
xchg
push
xchg
outsl
lds
lock
xchg
fbstp
xlat
popa
sub
cmp
pop
or
aam
loope
xchg
jmpw
push
dec
popa
and
repz
sbb
test
mov
mov
pop
and
jge
and
inc
xor
jle
ficoml
scas
enter
aad
pop
xor
cwtl
add
xchg
lds
outsl
mov
loopne
stos
xchg
mov
xlat
dec
pop
in
cwtl
push
add
jnp
iret
xor
pusha
add
inc
xchg
test
scas
lret
fstpl
sbb
dec
push
adc
pop
int3
les
fwait
pushf
sbb
add
dec
xchg
or
daa
and
jb
inc
mov
sub
loopne
mov
jo
push
push
fistps
add
iret
dec
dec
pushf
loop
jns
cwtl
lock
mov
stos
cltd
or
lea
sub
sbb
loopne
cltd
mov
pop
pusha
mov
or
lcall
pop
out
dec
ror
xchg
jnp
fwait
cmpsb
cli
mov
shrl
addr16
push
fsubrl
mov
fiadds
and
or
std
dec
and
sbb
dec
xor
das
mov
inc
cmpb
xor
mov
mov
cmp
bound
popf
xor
adc
in
icebp
jnp
cmp
push
jbe
clc
packuswb
mov
mov
mov
in
stos
mov
cmc
icebp
lods
mov
loope
orb
adc
pop
and
xchg
enter
cmp
fldcw
mov
test
stos
jae
push
sub
adc
lods
mov
xor
jg
aam
xor
sbb
int3
outsl
gs
sub
xchg
sbb
jnp
xchg
push
pop
jb
imulb
gs
cld
sub
fidivl
lock
loopne
sbb
ficoms
ret
pop
adc
push
mov
fisttpll
pop
push
std
xor
lcall
xchg
out
mov
addr16
pop
adc
jbe
cmp
insl
test
pop
push
dec
cmp
cmp
sub
jo
add
mov
inc
arpl
xchg
jb
cmp
ret
ljmp
in
jle
pop
imul
fdivrp
sbb
adc
repnz
mov
add
or
inc
xchg
enter
aas
mov
pushl
jg
cmp
sahf
stos
mov
jnp
adc
enter
push
xor
push
pop
hlt
and
out
mov
add
lahf
jns
je
or
insb
and
rcr
into
lret
pop
decl
cmp
into
idiv
rcrl
gs
pushf
xchg
fcomi
icebp
mov
test
mov
pushf
cmp
int
imul
push
push
cmp
mov
sub
loope
push
sub
fmuls
jmp
and
fpatan
and
subl
insb
push
aas
jge
push
sti
mov
pop
and
ficompl
loope
dec
lret
jge
dec
leave
lahf
pop
xor
xchg
dec
xor
lods
shl
jp
jae
mov
dec
sbb
popl
sub
shlb
xchg
cmpsb
xlat
mov
sahf
inc
or
cs
sub
imul
mov
cs
int
pop
mov
in
insl
and
push
cmp
xchg
push
mov
scas
loope
xor
imulb
xchg
or
sub
ds
jg
jecxz
push
mov
mov
loop
and
leave
lret
mov
ret
stos
jb
insb
cmp
adc
jmp
cmp
dec
sub
cmp
and
fldl2e
loopne
push
or
cli
push
das
push
xor
pop
out
push
dec
xchg
cmc
fisubl
inc
dec
push
xor
push
ret
mov
idivl
addr16
jle
test
data16
test
dec
cltd
pop
popa
sub
outsl
lds
adc
jp
jle
jle
fcmovne
mov
jmp
xchg
jo
outsb
push
jg
cmp
mov
add
pop
pop
bound
mov
sbb
cmp
xchg
scas
cmp
or
mov
pop
int3
push
inc
mov
adc
add
call
mov
push
pop
shll
and
lock
subl
cwtl
icebp
ds
push
lods
int3
mov
mov
sub
sub
xchg
daa
cmp
mov
adc
pusha
daa
push
daa
add
sbb
jne
out
test
jbe
scas
cltd
xor
repz
clc
pop
iret
scas
sub
jae
and
cmp
xchg
push
mov
cli
mov
jge
sub
fisttpll
dec
fmuls
cmp
ss
jg
cltd
inc
push
int3
shlb
adc
jge
mov
mov
push
stos
sarb
repz
fstl
shlb
repnz
movsl
rorl
js
dec
movl
cmp
push
into
aas
bound
mov
mov
mov
into
or
add
add
cmpsb
pop
adc
test
mov
mov
mov
lret
rolb
notl
aam
mov
mov
jmp
or
mov
fs
fdivrs
mov
rol
dec
rcrb
arpl
xchg
ror
jb
sbb
loopne
mov
leave
lcall
dec
xchg
mov
stos
jl
mov
std
repnz
sub
leave
jb
adc
notl
inc
jne
cmpsb
ljmp
fcoml
gs
cmp
inc
jp
add
sbb
fsubrl
inc
scas
or
daa
sarl
imul
mov
jb
dec
mov
pop
pop
mov
jno
in
cmp
mov
pusha
movsl
adcb
in
fs
dec
out
dec
xchg
orb
aas
pop
mov
mov
ljmp
or
adc
sub
popf
mov
xor
xchg
cmp
pop
jle
push
aaa
mov
or
cld
jno
pop
mov
xchg
xchg
dec
jo
mul
jb
mov
ss
fs
jno
mov
pop
sbb
push
jecxz
xor
fwait
sbb
or
cmpsb
fnstcw
lods
xchg
or
fidivrs
sub
shrb
mov
popf
cs
out
jge
loopne
xor
jno
lret
fwait
stos
movsl
inc
aas
movaps
aad
test
mov
das
je
inc
mov
push
mov
ficoms
inc
pop
clc
out
jmp
lret
cmp
lret
xorb
or
add
shrl
je
add
jmp
adc
xchg
mov
sarl
ss
cmp
lods
push
bound
push
ret
xchg
mov
cbtw
movsb
fadd
jmp
enter
daa
or
scas
mov
test
int3
mull
mov
andl
rcrl
xchg
fdivrs
dec
jecxz
push
and
add
and
jns
fnsave
aaa
int
in
stos
imull
mov
dec
pop
pop
xchg
sbb
lret
add
outsl
mov
mov
rcrb
dec
adc
cmp
mov
into
mov
mov
and
add
test
cld
movsb
mov
dec
loope
push
sahf
jnp
lea
outsb
loope
and
dec
leave
pop
out
mov
fs
fcomp
mov
dec
jns
test
xchg
scas
push
fsubrs
push
mov
xchg
push
mov
xor
test
push
cltd
xor
mov
push
pop
out
sbb
cli
pop
xor
dec
add
jno
or
xchg
ds
stc
lock
dec
mov
xor
test
dec
loope
inc
cmp
add
push
mov
cmc
push
mov
sub
jo
push
push
xchg
mov
fsts
scas
add
lods
push
cmpsl
push
sbb
jecxz
int
add
adc
adc
lds
pop
sahf
out
js
mov
imul
mov
sbb
mov
push
pop
das
cmp
sbbb
pop
mov
in
adc
xchg
scas
adc
int
je
scas
mov
jne
stc
sti
jg
and
lock
push
jb
mov
loop
lods
stc
jge
push
cltd
adc
jno
orl
fildl
and
cld
out
adc
clc
addr16
imul
test
mov
insb
ret
loope
inc
lahf
lock
cmpsl
sbbl
xchg
xor
ficoms
add
adc
inc
or
jne
sub
jecxz
xlat
mov
imul
scas
inc
ja
push
orb
sti
mov
mov
mov
addl
sbb
repz
outsl
push
or
sbb
out
adc
push
push
sbb
popa
xchg
js
fldcw
shll
cmc
stc
xchg
pop
adc
push
je
daa
orb
or
call
mov
push
or
pop
mov
and
iret
push
pop
imul
mov
and
insl
fs
dec
frstor
xchg
addb
call
dec
mov
add
fs
jbe
outsl
rcl
insb
add
aaa
xorl
loopne
aas
or
fidivrl
add
adc
and
ret
or
inc
shl
adc
pop
loope
scas
stc
lock
xchg
rcl
jmp
nop
mov
xor
push
xlat
lret
cltd
testb
add
lods
cmp
pushf
push
push
nop
mov
or
popf
mov
outsb
push
mov
push
jp
jno
sarl
jg
icebp
mov
sbb
xor
jmp
pop
dec
mov
into
out
dec
roll
jecxz
sarb
out
cmp
dec
mov
mov
add
mov
mov
stos
test
inc
xchg
cmp
xor
leave
or
mov
shll
push
mov
jmp
out
movsb
pop
dec
dec
push
icebp
sti
std
insl
fnstsw
stos
jge
insl
pop
out
push
icebp
pop
popa
inc
in
test
mov
jge
mov
sbb
adc
pop
cwtl
notl
cmpsb
jns
cmp
mov
dec
mov
xor
push
popf
pop
movsl
cmp
push
or
mulb
shlb
mov
aas
push
sbb
clc
adc
xchg
push
and
dec
pop
sbb
and
adc
jl
out
aas
test
sub
adc
xchg
stos
aas
js
xorl
adc
lock
les
adc
mov
scas
mov
test
adc
and
and
mov
and
outsb
rorl
xor
je
pop
adc
inc
aam
daa
inc
mov
xchg
mov
inc
repnz
mov
aad
arpl
add
test
dec
lahf
xchg
in
iret
lea
insw
jo
vaddsubps
sahf
in
cltd
imul
aad
add
ss
xchg
dec
push
stos
xor
and
sbb
lods
inc
dec
dec
in
cwtl
imul
test
inc
out
rclb
cmp
sbb
push
test
shrl
xchg
sbb
inc
pop
daa
mov
or
ss
jle
ror
outsl
in
inc
dec
sahf
xchg
out
pushf
rcrb
ss
add
ficoms
fst
adc
cmpsb
mov
iret
arpl
adc
push
inc
add
sahf
cs
ficomps
sub
lea
sub
ljmp
add
push
inc
das
xor
xchg
jae
lea
push
adc
mov
iret
enter
lret
pop
jle
mov
mov
mov
daa
lods
out
mov
adc
outsl
out
push
ret
repnz
add
out
sbb
jae
in
stc
inc
pushf
lds
rcrb
gs
ja
cld
and
repnz
cltd
cmp
xchg
mov
mov
ds
jg
xchg
inc
fcompl
call
rol
push
cmpsl
clc
sahf
push
xchg
cwtl
push
jo
clc
mov
shl
movzbl
add
cmp
pushf
xchg
or
or
in
push
push
repnz
xchg
sarb
roll
xor
insl
jnp
push
je
push
add
repnz
sub
xchg
shrw
xchg
push
sbb
adc
pop
mov
jge
ds
ret
ja
mov
pop
xor
rorb
hlt
mov
mov
jge
mov
mov
or
push
arpl
mov
cwtl
xchg
push
ds
sti
mul
and
out
push
cli
addr16
jbe
cltd
cmc
xlat
mov
adc
xor
shld
sbb
shll
jg
cltd
jno
and
lcall
mov
pop
outsb
adc
pop
inc
pop
push
mov
cmp
shlb
std
inc
inc
inc
pop
xchg
pop
ja
dec
mov
pop
inc
fisttpll
insb
insb
push
adc
or
mov
xor
sub
sbb
clc
incl
int
dec
or
xchg
pusha
fsubrs
cltd
sti
pop
dec
inc
ljmp
mov
mov
sub
push
pop
mov
inc
jo
mov
dec
pop
gs
movsb
js
fstpl
stc
jmp
loop
fidivs
jmp
dec
pop
xchg
ljmp
ds
cmp
and
jb
jne
int
xchg
nop
jmp
mov
xchg
sbb
inc
sub
push
into
jg
stos
enter
dec
xchg
or
xor
inc
cli
inc
outsl
pop
insl
daa
xor
pop
sahf
pop
fidivs
mov
mov
cmpb
das
cmp
scas
jl
dec
lret
imul
loopne
adc
mov
mov
outsl
test
mov
decb
dec
sar
loope
xlat
fdivr
into
aaa
ss
xchg
mov
fs
rolb
test
insl
les
add
xor
jecxz
pop
callw
lds
loop
jl
add
sbb
sbb
xor
xchg
jg
pop
ficoms
xor
sub
or
add
lret
leave
jbe
leave
enter
pop
lock
mov
lcall
negb
loopne
cld
sub
or
mov
mov
stos
mov
fs
sbb
popa
pop
or
cmp
loopne
popa
frstor
pop
mov
cmpsl
add
inc
mov
xchg
dec
jns
data16
repz
pop
pop
jae
test
and
ss
es
mov
das
nop
jbe
mov
cmp
rcll
xor
sbb
mov
lahf
icebp
add
push
outsl
cmp
xor
inc
js
lcall
loopne
mov
inc
dec
imul
jecxz
rorb
push
out
add
pop
data16
cmp
ss
mov
adc
lcall
mov
push
and
fwait
cmp
cmp
scas
popa
inc
aaa
mov
lret
jbe
xor
xchg
add
shrl
cmp
js
out
dec
scas
icebp
lcall
loopne
movsb
leave
fsts
jno
dec
mov
seta
nop
gs
push
scas
in
xchg
dec
lock
rclb
sbb
xchg
inc
mov
jle
loope
stos
xor
pop
pop
push
lods
inc
ds
mov
dec
insb
adc
push
or
push
pop
cld
cmpl
test
and
loop
sub
inc
lret
mov
imul
lret
xchg
cs
scas
inc
insl
fstps
adc
ret
add
mov
es
in
pop
pop
lods
inc
xchg
push
pop
push
cmpsb
pop
dec
ficoml
lahf
subl
or
cltd
sub
xor
xchg
leave
ss
sub
repz
enter
das
pop
sqrtps
insb
fwait
sub
sub
repz
jno
jmp
or
nop
sysexit
xor
adc
inc
pop
std
cmpsb
out
test
faddl
sarl
xor
js
test
or
pop
xchg
stc
xchg
pusha
or
lret
fcoml
shll
sub
pop
fisttpl
adc
sbb
mov
jb
jg
mov
mov
sbb
xchg
bound
jae
fdivs
mov
cmp
xlat
cmc
int
pop
adc
fcoms
mov
je
lods
fmull
loopne
lcall
das
cmp
hlt
js
cmp
addb
aas
mov
sbb
mov
mov
outsb
adcl
pop
out
adc
daa
icebp
adc
iret
rcll
jne
loopne
imul
mov
fdivl
dec
sbb
cmp
aad
or
sub
cmp
sub
sbb
mov
addl
test
ss
cmp
xchg
mov
addr16
xor
mov
sub
push
inc
sti
out
ja
in
mov
out
xor
push
loop
insb
and
das
xor
inc
jle
lods
xchg
or
xor
fisttpl
clc
jno
aad
enter
add
loop
pop
jne
popa
and
inc
call
or
aaa
pop
sub
xlat
mov
clc
daa
pop
add
push
out
cli
icebp
loop
pop
sub
or
popf
xchg
popl
pop
mov
xor
aad
mov
sahf
std
fdiv
mov
or
jb
mov
inc
xor
mov
movsl
mov
and
out
xor
js
or
cmp
adc
pusha
shlb
sti
jg
sub
xor
push
fscale
mov
in
out
xor
das
fldt
add
pop
rclb
fstl
push
mov
out
or
inc
outsl
xor
scas
fcompl
sub
fimull
shrd
insl
mov
push
mov
and
insb
jo
xchg
sub
repnz
mov
sub
loop
jne
xor
rol
adc
stc
and
cmp
jnp
loop
xor
add
pusha
dec
mov
popa
xchg
jmp
add
push
inc
pushf
loop
cmp
xchg
sub
add
push
push
add
je
xor
cmp
movsl
das
mov
add
scas
sub
insl
mov
cmp
lret
cmpsb
mov
mov
je
mov
test
pushf
jecxz
bound
bound
jb
jb
rolb
sub
sarb
adc
mov
ret
push
sbb
into
dec
and
adc
ret
cmc
stos
cmp
fnstenv
clc
mov
mov
xchg
aad
mov
adc
cltd
mov
clc
fistl
imul
aad
das
hlt
scas
aas
mov
jg
test
test
jae
sbb
add
loop
push
push
fldl
shll
xor
mov
sub
push
jne
inc
daa
cmp
add
outsl
in
jmp
jl
ss
out
stos
rclb
jnp
rclb
fldl
sub
sbbl
dec
in
mov
pop
cmc
add
jge
shll
jns
sub
pop
shlb
dec
lods
jbe,pt
insl
das
dec
dec
push
adc
outsl
pop
movsl
cmp
mov
in
mov
mov
add
sbb
xlat
inc
and
cmp
push
cmp
outsb
add
xchg
out
aam
movsl
jno
jmp
lcall
jg
icebp
jne
pop
rcll
notl
sbb
insb
das
jmp
mov
iret
ds
call
pop
mov
mov
and
cld
and
imul
stos
js
mov
sti
out
mov
cli
inc
mov
loop
mov
mov
jge
push
mov
dec
sbb
mov
cmpsl
add
push
imul
xchg
dec
gs
aas
sbb
sbb
out
movsl
jmp
mov
xlat
jmp
mov
inc
push
xchg
addr16
das
into
jp
jnp
fsubr
hlt
cmp
cwtl
testl
fisubl
mov
cld
dec
mov
mov
push
dec
xchg
int
xchg
mov
rcr
sbb
dec
adc
fwait
lock
cli
cli
orl
inc
mov
sbb
cmp
mov
mov
mov
and
in
icebp
lods
jno
push
scas
dec
outsl
push
xchg
xchg
mov
and
cltd
fidivs
fsts
movups
ret
sbb
in
rolb
pop
dec
movaps
cmp
test
sub
xchg
fiadds
int3
repnz
pop
loop
push
pop
add
push
adc
push
out
into
js
push
int3
inc
aaa
fsub
test
push
xor
pop
or
dec
outsb
jp
jbe
scas
mov
push
mov
xchg
sub
cmpsl
cmc
hlt
bound
rcrb
test
aad
rep
pop
mov
xchg
sarb
push
std
adc
mov
xchg
ficoms
int
add
pop
iret
jae
push
sub
xor
mov
orb
jbe
xchg
inc
xor
inc
inc
fmuls
push
push
sub
out
jnp
pop
imulb
inc
jbe
popa
xor
jmp
mov
lahf
xchg
and
call
leave
cld
or
loope,pt
fildl
jne
and
cmp
sub
mov
add
gs
dec
dec
test
push
or
xor
stos
movsw
xor
sbb
pop
mov
dec
cs
dec
outsl
mov
shll
pop
or
gs
xchg
imul
popa
add
add
xchg
repnz
pop
shrl
inc
fwait
mov
pop
nop
add
dec
aaa
scas
shlb
out
fcomi
push
jnp
xchg
pusha
insb
enter
cmpsb
xchg
mov
push
out
jle
leave
add
pop
iret
faddl
repnz
out
push
loopne
into
out
out
loope
mov
jmp
push
bound
fcoml
stos
test
dec
loopne
in
mov
into
adc
ljmp
hlt
jno
cmp
or
jb
ret
loop
test
adc
lds
adc
mov
mov
push
call
das
cmp
adcb
sbb
xor
in
mov
ror
std
add
adc
shlb
mov
negl
data16
pop
ret
jb
jnp
stos
fimull
pop
cmp
stc
in
ficoml
sbb
mov
fcmove
dec
cmp
xchg
pop
aad
test
sub
push
cwtl
add
dec
data16
push
sub
int
shlb
push
daa
and
stos
adc
jp
gs
xchg
sub
cwtl
daa
mov
dec
movsb
lods
and
mov
mov
stos
loopne
scas
icebp
nop
push
cltd
mov
outsl
ss
imul
inc
insl
test
test
stc
lret
inc
cld
jo
pop
or
cmc
fs
enter
xor
icebp
jmp
or
mov
sbb
decl
pop
popa
scas
sbb
sbb
and
and
cmp
xchg
inc
adc
ss
inc
arpl
fcomps
divb
mov
xor
lock
mov
add
push
pop
inc
mov
dec
mov
dec
js
and
lret
dec
cmpsb
aas
out
push
sbb
mov
push
inc
or
push
lahf
push
mov
stos
iret
xlat
pop
aam
dec
hlt
scas
jle
scas
sbb
dec
in
or
push
pop
add
mov
cmc
mov
icebp
or
in
aad
in
push
or
test
jp
push
push
cmp
mov
pushf
lods
aaa
mov
in
ljmp
aad
test
lret
jo
shlb
jge
fisubl
mov
imul
ds
xor
mov
cmp
adc
into
outsl
xor
pop
push
dec
lea
ja
push
pop
xor
nop
lret
pop
ror
rcll
das
or
push
into
or
leave
dec
testb
mov
dec
in
ss
inc
pop
pop
sahf
call
dec
jnp
mov
ja
mov
push
adc
dec
decl
cltd
add
push
cmp
cmp
jb
ds
push
call
gs
sub
in
push
call
in
loop
out
jbe
sbb
sarb
aam
out
shll
inc
mov
orb
fidivrl
dec
lret
fprem
jge
test
xchg
pusha
outsb
sbb
xor
shlb
adc
negb
idivl
jle
or
push
lcall
fldl
notb
out
dec
js
mov
js
pushf
xchg
movntq
fildll
push
or
mov
sbb
xchg
jp
cmp
cwtl
aaa
in
pop
push
adc
xor
xchg
push
jle
mov
cld
pop
mov
cmpsb
jnp
das
xchg
adc
adc
sub
lea
ds
leave
pop
xor
cmp
cmpl
repnz
adc
cld
add
xchg
xchg
in
ret
lret
insb
repnz
jns
and
mov
gs
ljmp
dec
sbb
dec
xchg
mov
sarl
ljmp
outsb
mov
in
ss
xchg
hlt
mov
scas
pop
or
sbb
inc
popf
jo
add
and
mov
mov
pusha
push
add
sub
test
xchg
sahf
pusha
dec
xlat
xor
dec
aaa
pop
and
sbb
pusha
sbb
cltd
sahf
add
mov
mov
push
fisubl
andb
jne
cmp
aaa
sti
sbb
inc
cmp
repz
test
fs
mov
mov
add
test
dec
sbb
add
andb
movsl
fcoms
inc
add
movb
add
mov
xor
arpl
cmp
inc
adc
test
push
jne
add
lock
daa
mov
xor
jecxz
clc
nop
pop
sbb
aas
sbb
push
or
pop
stos
cmp
imul
jp
mov
jbe
pop
dec
cli
mov
sub
mov
js
out
loope
mov
movsl
sti
jb
rcrb
je
cmova
les
add
neg
jmp
and
cltd
xchg
inc
mov
pop
push
xchg
pop
xchg
mov
bound
bound
xchg
sub
jmp
inc
das
jmp
aas
data16
sbb
jle
inc
clc
adc
outsl
mov
xchg
push
fimuls
pop
xor
movsb
rcl
push
xchg
fs
mov
clc
cmpb
in
xchg
cmp
and
lea
fs
dec
xlat
in
bound
mov
mov
aad
das
push
dec
mov
outsl
xor
push
inc
les
sub
xchg
fisttpl
xor
jle
dec
cmp
lret
xchg
dec
pop
mov
sbb
and
xchg
pop
in
hlt
test
shl
mov
lods
adc
jg
xor
jae
pop
stos
sub
or
inc
js
dec
add
mov
addr16
xor
cmp
mov
fisubrl
xlat
aas
repz
jge
sti
clc
mov
lods
cli
mov
enter
mov
jne
leave
adc
sarl
xor
push
les
ss
les
sub
out
push
and
out
rcrl
int
xlat
mov
iret
and
jp
cld
insb
xor
push
xchg
out
mov
and
xchg
cmpl
insb
ds
add
and
lahf
dec
fxam
pop
xchg
pop
shrl
jp
sbb
dec
and
out
and
mov
mov
push
movsb
pop
xor
test
lret
popw
mov
sbb
movl
and
mov
sbb
inc
enter
adc
or
out
mov
push
cmpsl
mov
sarb
movsl
sbb
inc
rcrl
pushf
insb
rclb
cmp
lcall
push
mov
sub
cmpsl
push
movsl
repnz
fisttps
test
adc
sbbb
rol
xchg
outsb
in
daa
insl
aas
cmpsl
cmpsl
icebp
shrb
push
imulb
test
pop
lahf
inc
jo
repz
test
xor
aaa
pop
pop
add
lods
rolb
sti
pop
arpl
jne
fcoms
adc
lods
pop
push
scas
jmp
incl
outsl
aam
ret
jp
xor
jbe
mov
mov
cmpsl
mov
fisubl
and
jl
push
and
rcll
sbb
push
push
cld
sahf
mov
and
aad
insb
cmp
pushf
mov
xchg
pop
jp
test
pop
fsub
loop
jo
sar
ljmp
push
cmp
shlb
hlt
mov
pushl
mov
data16
cltd
pusha
lods
jo
mov
pop
dec
daa
sub
mov
pushf
sbb
aam
jnp
aas
mov
jne
loope
mov
js
dec
xor
and
negb
cmp
push
scas
sbb
cmp
jae
mov
out
gs
and
sub
push
std
es
mov
sub
scas
pusha
inc
and
fcomp
bound
adc
aad
hlt
mov
sahf
sbb
jb
ret
push
lds
loope
in
and
jp
inc
mov
ret
addr16
pusha
jmp
sbb
divl
dec
pop
mov
jnp
subb
insl
in
inc
sahf
mov
or
mov
xorl
jb
repnz
push
pop
or
dec
enter
ljmp
xchg
inc
mov
add
cmp
mov
sbb
dec
aad
mov
sti
mov
inc
cmp
mov
loop
cwtl
loop
lods
mov
mov
sbb
pop
shrl
pop
jns
dec
ljmp
mov
movsl
shlb
mov
sub
pop
jne
cmpsl
bound
sub
cmp
xchg
lcallw
sub
jo
or
dec
popl
dec
xchg
adc
nop
fwait
sti
jns
dec
jo
lcall
add
fcoms
mov
cmc
ret
imul
test
push
fdivr
lea
outsb
je
mov
icebp
and
mov
enter
adc
inc
sbb
repz
test
sub
data16
push
stos
popf
jg
hlt
jb
movsb
fcoml
bound
jns
mov
and
adc
in
sarb
sub
mov
mov
push
and
fwait
pop
adc
inc
add
or
mov
imul
lods
pop
scas
xor
lods
jbe
or
ret
lds
pop
adc
jae
test
add
pop
notb
cmpsb
rclb
push
cmp
mov
fsubl
bound
jbe
andl
jns
mov
xor
subb
das
fucomip
dec
push
loop
lods
push
dec
pushf
jns
lock
mov
in
fimull
mov
pop
or
sub
insl
cmp
add
cltd
sti
cmp
xor
shl
mov
loopne
cmp
inc
mov
jae
mov
xchg
cmp
outsb
push
loop
leave
dec
loope
sub
repz
pop
or
or
and
insb
add
daa
test
sub
xchg
aaa
inc
mov
testl
loop
mov
sbb
fcompl
fmul
rcl
test
and
fildl
lret
mull
and
sbb
arpl
cltd
jne
xchg
test
mov
popa
rol
mov
inc
xor
es
adc
dec
xchg
fisubl
insl
dec
inc
test
mov
and
shll
mov
hlt
and
xor
outsb
inc
mov
jb
and
lcall
dec
lods
sub
adc
add
sub
stc
aam
xor
or
notl
mov
adc
and
roll
stc
xor
cmp
xchg
lds
sub
or
pop
xor
xorb
dec
lcall
inc
push
pop
mov
jbe
inc
mov
js
insb
scas
ja
ljmp
sbb
sbb
test
mov
cs
cld
mov
mov
divl
fdivl
fdivs
daa
scas
fmuls
pop
pop
outsb
or
xchg
mov
dec
sbb
jge
inc
mov
ds
mov
mov
mov
fimuls
xchg
mov
mov
test
cmp
aam
mov
dec
pop
add
lret
jo
xor
push
inc
pop
ficoml
nop
loop
xchg
dec
sbb
shrl
aas
mov
sub
insb
mov
subb
pop
rolb
xor
cld
add
lret
mov
mov
pop
inc
mov
mov
add
in
imul
aad
jne
jb
xlat
push
adc
sti
mov
mov
int
fisttpl
stos
movsl
push
and
ret
or
dec
in
ret
dec
xchg
std
pusha
pusha
jns
nop
jae
call
ss
sarl
lods
xchg
aad
and
lods
mov
mov
and
js
jp
lret
leave
dec
lods
lret
lahf
lahf
repnz
push
xorl
mov
iret
out
cmp
repnz
xchg
jae
je
fisttps
test
xchg
cmc
adc
addb
jl
pop
rorb
dec
shlb
mov
out
nop
lret
pop
jle
push
inc
fsubp
nop
xor
mov
sub
insb
jnp
add
or
test
mov
push
mov
lahf
or
test
daa
call
push
mov
jb
mov
test
insl
call
and
fs
adc
mov
xor
mov
add
jmp
mov
pop
bound
jne
imul
enter
jg
je
mov
ss
sub
pop
push
pop
clc
pop
mul
adc
cmp
cmp
mov
pop
repz
daa
push
test
or
sub
out
jecxz
fistl
shlb
mov
pop
iret
pop
and
adc
sub
pushf
or
mov
lret
inc
inc
and
mov
jl
aas
pop
in
mov
jp
or
jns
dec
subl
ja
lret
jae
xor
arpl
mov
cwtl
xor
in
pop
xor
das
and
inc
add
sub
nop
gs
loop
movsb
pop
test
std
or
xlat
jg
in
pop
cld
pop
dec
xchg
push
cmp
pop
fadds
repnz
icebp
insb
push
jne
adc
mov
ret
das
jnp
xchg
das
loop
lods
hlt
or
and
xor
lret
scas
pop
fwait
enter
ja
rcrb
mov
pop
xchg
icebp
dec
stos
stos
fadd
rolb
scas
rcrb
cmp
popf
cmp
mov
shl
filds
mov
mov
add
fs
add
jb
mov
adc
xor
jbe
inc
mov
jbe
test
inc
repnz
mov
xchg
jae
lods
push
clc
es
insl
leave
sbb
jecxz
ret
jns
pop
rorl
mov
aaa
sbb
xchg
mov
scas
jg
push
mov
dec
popf
icebp
and
ds
ret
lods
and
jmp
insb
lahf
in
daa
xor
mov
dec
paddb
out
out
sub
mov
adc
adc
icebp
jmp
ret
aas
sti
fs
in
xchg
js
incl
sbb
inc
imul
arpl
inc
test
pop
in
addl
pop
push
pop
xor
lahf
dec
lods
jle
aaa
adc
imul
js
mov
adc
mov
cmp
aam
inc
pop
push
sbb
int
push
ret
ja
in
push
dec
ret
push
das
les
adc
sub
rclb
stc
add
sub
or
xchg
out
ret
push
add
clc
ss
mov
lods
in
dec
add
faddl
gs
push
pop
and
cmp
and
cwtl
hlt
fbld
sub
cltd
mov
icebp
mov
add
outsl
pop
imul
and
add
pop
or
mov
xor
scas
mov
and
pop
orl
bound
mov
out
or
scas
dec
push
add
or
add
mov
fisttps
cmpsl
sti
sbb
movsb
cmpsl
insl
sti
insl
stos
movsl
push
ja
pop
mov
movsb
popa
cld
lea
popa
js
jns,pn
std
xor
filds
jecxz
push
out
adc
shll
jecxz
or
sub
pop
jge
inc
sbb
lcall
popf
add
js
loop
or
or
call
xor
loope
or
movsb
and
cmp
cli
das
fbld
dec
sbb
aam
sahf
sahf
pusha
dec
or
xor
xor
adc
adc
and
or
pop
es
mov
jae
sahf
pop
out
dec
ljmp
ret
sbb
dec
and
sti
xchg
clc
cs
cmpsb
test
fsubl
mov
cmc
lds
xchg
xor
push
xlat
rcll
add
daa
popa
push
in
stos
cmpsl
pop
mov
sbb
cmc
bound
int3
into
jo
bound
cltd
cmpsl
mov
mov
push
and
xor
pinsrw
lret
adc
adc
movsb
mov
mov
sahf
push
popf
lods
xorb
jbe
ja
dec
sti
lahf
sbb
jmp
sti
cmpsl
sub
adcb
icebp
hlt
sahf
add
daa
pop
int3
movsl
stos
jge
xor
and
adc
add
sahf
lds
or
xor
jl
cltd
xor
repz
ss
ds
or
bound
sarb
cmpb
mov
cmp
xchg
and
adc
test
add
jmp
add
ljmp
mov
loopne
or
cs
lock
and
cmp
lahf
xlat
dec
fldt
cwtl
adc
lea
and
adc
mov
lock
pop
dec
pop
inc
cmp
test
fisttps
push
lahf
pop
hlt
loop
mov
mov
inc
pop
insl
pop
loopne
inc
lcall
fistps
jp
es
push
sbb
out
inc
lret
in
ljmp
push
pop
movsb
inc
sub
subl
push
mov
xchg
mov
and
in
inc
add
jo
outsb
xchg
lcall
or
dec
in
lods
neg
xor
mov
je
mov
fsts
or
movsb
outsb
dec
outsl
inc
ja
jbe
pop
neg
xor
and
inc
xcrypt-ofb
cmpsl
out
xchg
daa
sbb
ljmp
cmp
dec
decb
jmp
and
lahf
mov
mov
movsl
jge
dec
mov
int
dec
mov
jae
insl
movsb
pop
xchg
es
fildll
xchg
mov
jno
out
cmp
inc
lahf
std
aas
mov
push
pop
dec
mov
test
push
adc
fildl
cltd
xchg
jmp
ss
mov
push
in
fsts
in
fcoms
pusha
cli
shr
out
xchg
fwait
popf
test
mov
movsl
xor
movsb
pop
or
cmp
aad
and
or
dec
mov
mov
outsb
out
stc
je
mov
cli
dec
fdivr
ljmp
pop
lret
mov
addl
or
insl
mov
iret
xchg
psrld
das
ds
cltd
std
pusha
inc
adc
ret
mov
xchg
xor
frstor
push
sub
push
push
and
jo
jmp
ljmp
pop
stos
enter
arpl
daa
push
scas
cmp
cmp
rorb
dec
aam
mov
cmc
sbb
sbb
xlat
pop
push
mov
sbb
inc
cmp
and
iret
inc
loope
add
rorb
sahf
push
lcall
dec
mov
dec
push
cmp
ret
leave
inc
and
fwait
add
movsb
rorl
das
rorb
xchg
mov
ss
cmp
lret
aaa
iret
out
shrb
sub
sbb
xchg
lret
mov
popa
xchg
cwtl
movb
das
subb
dec
or
cmpsl
out
mov
jbe
insl
push
call
bound
xor
pop
xchg
jae
and
cmp
pop
or
inc
xor
insb
xor
pop
addr16
push
or
in
fists
xor
les
sbb
mov
insl
xchg
std
das
popa
adcl
mov
pop
mov
ds
jae
test
jb
dec
pop
and
pop
or
imul
jle
and
es
mov
lret
or
cmp
sub
mov
imul
fimuls
push
cmp
dec
pop
add
sub
sub
pop
mov
jle
loopne
inc
fldcw
aam
lock
cmp
movsl
inc
add
push
sbb
test
inc
jmp
sbb
ljmp
jmp
pop
push
mov
mov
sbb
push
ss
xchg
sub
and
mov
inc
jle
rorl
mov
mov
cmpsl
lock
pop
pop
push
mov
cmp
push
jb
data16
pusha
or
or
xchg
out
shll
add
jl
je
xchg
ret
cltd
imull
push
pause
ffreep
outsl
fsubp
pop
inc
arpl
mov
pop
xchg
jns
subb
pop
fisttpll
jge
test
sbb
sub
test
dec
lods
sub
cmpps
jnp
add
push
and
push
pushf
pop
sbb
cmp
mov
lahf
cwtl
push
mov
xchg
sub
mov
jb
sbb
mov
sbb
pop
or
out
add
inc
sarl
cmpl
xchg
cwtl
cmp
enter
repnz
mov
jl
out
adc
inc
jmp
mov
jg
pop
cmp
inc
mov
push
ret
sbb
xchg
add
cwtl
mov
mov
shrl
ret
mov
insb
imul
push
mov
and
sub
lock
test
cmp
cltd
sbb
fwait
xor
shll
sub
add
out
fistps
mov
or
mov
leave
pop
pop
xchg
fs
in
dec
push
add
or
nop
inc
cmp
and
mov
gs
pop
imul
sbb
adc
mov
movswl
cmp
imul
das
mov
imul
es
out
std
je
andb
daa
cmp
add
idivl
rorb
xchg
pop
out
mov
int3
cltd
push
adc
cmp
nop
and
jl
pusha
add
pmaddwd
adc
xchg
adc
fs
jns
xor
fnstsw
in
repz
pop
push
out
dec
clc
ja
aaa
xchg
mov
mov
ja
mov
packssdw
out
sahf
mov
lds
inc
lcall
push
ss
fisubs
outsb
loopne
xor
mov
xlat
pop
fldt
sbb
mov
jae
push
ds
mov
pop
mov
mov
insl
jecxz
jae
or
cmp
leave
mov
cmpsb
lret
rcll
add
mov
mov
jmp
inc
push
out
or
sbb
inc
ss
aas
imull
aaa
push
push
ljmp
inc
mov
imull
mov
nop
out
iret
inc
popf
push
adc
rcll
in
push
push
mov
nop
ret
arpl
adc
jmp
push
sbb
adc
mov
inc
add
lock
in
inc
and
std
mov
cmp
pop
sbb
lea
mov
sahf
pop
add
or
dec
insb
adc
cmpsl
cltd
fimull
xor
js
xchg
bts
dec
les
adc
scas
mov
sarl
sbb
pop
xor
or
ljmp
ret
andb
mov
mov
mov
mov
dec
mov
mov
and
jle
add
push
cmp
sbb
add
or
pop
xchg
in
daa
fwait
xchg
mov
dec
mov
xchg
sbb
in
dec
xor
add
add
fdivs
popf
push
add
adc
icebp
push
mov
sbb
mov
iret
cmp
dec
dec
sahf
lods
sbb
lods
imul
fnsave
test
cwtl
jnp
decb
xor
mov
fidivrl
inc
popf
imul
mov
push
pop
test
mov
mov
mov
sbb
mov
cmpsl
pop
cmp
arpl
inc
sub
ficompl
add
inc
cmp
adc
stc
dec
cli
cmp
into
fidivrl
inc
adc
movsl
push
pusha
push
cmpsl
inc
loopne
sub
mov
mov
repnz
push
sub
lahf
outsb
cmp
pop
sub
push
rcrl
adc
hlt
out
je
ficoml
and
push
pop
rorl
mov
mov
push
sti
jp
dec
mov
lea
lods
js
push
popa
insl
pop
scas
das
fcoml
cmp
insl
mov
cmp
pop
insl
in
mov
dec
xchg
or
lahf
dec
sub
xchg
xchg
mov
sbb
addr16
adcb
jl
fsubrs
daa
cmc
inc
pusha
inc
aas
icebp
shlb
enter
arpl
dec
add
add
jecxz
push
cmc
mov
dec
pop
adc
loop
aad
cmp
dec
xchg
pusha
cs
repnz
pop
push
dec
sub
jg
xor
mov
push
daa
mov
leave
sub
dec
mov
and
add
mov
icebp
stc
insb
test
jo
rcl
dec
lods
or
push
dec
rclb
gs
pop
lock
adc
loopne
jnp
jle
dec
nop
or
mov
in
shlb
scas
jmp
std
out
jmp
mov
arpl
imul
popf
jbe
pop
into
mov
stos
push
rclb
push
int
sub
sbb
rcll
shll
mov
push
rcrl
hlt
mov
roll
xchg
jecxz
arpl
lods
testb
cmp
hlt
outsl
xchg
mov
cs
lock
mov
and
cmp
cmpsb
fistl
cs
in
pop
scas
ret
sub
insb
lret
scas
lea
std
sbb
xlat
adc
pop
iret
pop
mov
hlt
adc
fwait
test
pop
lods
jmp
dec
or
mov
mov
std
stos
fimull
fdivrl
inc
pop
scas
cli
fwait
pop
sub
or
pop
jmp
and
mov
push
jns
mov
sarl
sbb
adc
out
cmpl
xor
rcll
mov
mov
cmc
das
mov
nop
xor
pop
sbb
lret
and
je
dec
push
mov
divb
test
cmpsb
push
xor
je
cmp
jo
sbb
pop
lods
inc
or
jge
loopne
jmp
rclb
out
cmpsb
sbb
mov
inc
loopne
sub
mov
aaa
movsl
imul
jge
pusha
mov
jnp
aam
jno
push
and
pop
jp
ds
sbb
lcall
enter
jb
xor
jmp
cmp
adc
and
adc
jg
ss
hlt
lret
xchg
scas
xorl
add
aas
mov
jno
pushf
push
add
mov
jne
insl
sbb
iret
pop
lea
mov
sti
mov
stc
xlat
xor
je
ljmp
and
pop
sub
inc
mov
movsl
pop
andb
push
das
mov
loop
enter
dec
ja
cmp
sbb
xchg
lock
lahf
lea
mov
mov
or
out
jmp
shrb
test
or
scas
cmc
push
xor
das
inc
loope
je
test
arpl
jno
xor
pop
lds
lea
sub
cs
fists
mov
js
sub
outsb
aam
aad
dec
pop
subl
dec
sub
jb
xor
popf
or
iret
movsl
mov
ds
shl
arpl
shrb
mov
sbb
movsl
mov
or
ljmp
mov
lock
adc
cmpsl
mov
and
sahf
frstor
imul
cmp
psubw
sub
xor
lahf
loop
inc
mov
mov
into
mov
jno
sbb
insl
icebp
fdivrl
xchg
xchg
pop
sarl
lret
or
call
jmp
repnz
mov
popa
daa
in
push
xchg
popf
mov
in
je
loopne
rorl
stos
push
cmp
dec
lods
jge
inc
loop
sub
rcrw
std
dec
xor
or
jbe
mov
outsl
iret
fs
xor
popa
and
mov
addr16
fnsave
sub
lcall
jbe
dec
lahf
out
aaa
mov
push
in
stc
sub
xor
jno
mov
test
movl
lcall
mov
adc
cmp
push
xchg
xchg
mov
xchg
sub
fstps
int3
cmp
stc
test
push
add
rclb
das
loop
movsl
ljmp
daa
arpl
les
orl
inc
fucom
shll
dec
dec
dec
mov
pop
and
aam
push
test
sbb
mov
pop
dec
push
xchg
jns
jb
lret
outsb
mov
mov
mov
stos
add
add
cmp
jg
push
ss
xor
mov
cmovbe
inc
cmp
lock
cli
dec
jg
mov
rcr
cmp
ret
lea
icebp
stos
jle
pop
out
sub
jecxz
cmp
mov
lea
popa
cli
cmp
aad
xorb
movsb
inc
or
outsl
pop
aaa
mov
adc
loope
and
jbe
sub
aaa
or
sahf
or
inc
aam
or
loop
orb
xchg
fdivs
or
jge
xchg
pop
sbb
in
movsl
call
cwtl
clc
pop
mov
popf
sbb
repz
and
sub
punpckhwd
into
dec
and
xlat
sbb
jg
sub
mov
sbb
sbb
faddl
push
jno
lock
xor
stos
aad
push
and
cmpsb
in
mov
jp
mov
stc
push
adc
mov
cmpsb
and
adc
xchg
xchg
outsb
sar
jp
gs
sub
fdivl
xchg
icebp
inc
sbb
push
mov
xor
sub
dec
pop
mov
cs
bound
xlat
cmpsl
dec
lods
enter
out
add
xor
xor
lret
adc
movsl
lea
jmp
adc
pop
inc
and
cmpsl
sahf
scas
popa
cmp
add
mov
and
in
add
lods
mulb
push
adc
movl
jle
inc
iret
sub
mov
jae
mov
pop
repz
jnp
mov
mov
or
push
pop
cli
mov
inc
daa
gs
lea
jne
jo
es
ja
xchg
xchg
jecxz
fimull
xor
lock
pop
and
lock
and
xchg
popa
jp
rorl
xchg
mov
mov
addr16
ret
dec
lock
aaa
int
pop
rolb
popl
pushf
sub
adc
in
jno
int3
sub
aas
fdivrs
data16
pop
xchg
lret
arpl
adc
add
adc
icebp
push
call
mov
pop
movsb
inc
daa
inc
loope
rorb
dec
mov
ljmp
cs
lods
push
arpl
mov
adc
test
push
mov
sub
pusha
ficomps
ffree
push
mov
pop
lret
cs
sub
loopne
stos
arpl
pusha
adcl
mov
loope
es
dec
out
push
mov
arpl
and
scas
jmp
dec
sbb
mov
or
adc
or
xor
rorb
mov
add
jge
pop
fs
cs
cmp
dec
add
negb
mov
pop
inc
or
bound
jnp
test
xlat
inc
xchg
dec
fcomip
xchg
xor
nop
repz
movsb
add
int
mov
and
shrl
aaa
divl
repz
addb
cmp
shll
ud0
jle
in
push
mov
iret
shll
iret
and
adc
repz
inc
mov
xchg
xchg
mov
movsl
pop
sbb
inc
jmp
pop
dec
lea
out
inc
sahf
sub
leave
inc
inc
filds
int3
lods
adc
mov
jne
or
xor
icebp
ret
add
pop
ficomps
aam
pusha
scas
icebp
sub
mov
cli
call
shlb
cmp
xchg
hlt
sub
imul
mov
pop
xchg
dec
mov
inc
push
aad
leave
fwait
inc
sub
jne
lret
daa
push
push
add
es
pop
test
les
sbb
jmp
nop
in
push
mov
adc
adc
cs
push
push
mov
mov
dec
xchg
sub
gs
test
mov
inc
push
lea
sbb
mov
sub
dec
cmp
xchg
adc
enter
cld
sbb
or
xchg
push
and
jae
mov
mov
ja
pop
aaa
push
inc
ljmp
repnz
in
push
ss
subl
mov
or
pushf
movsb
test
int
inc
pop
imul
insl
mov
loop
xor
notl
js
add
lods
shrl
outsb
popa
push
push
push
cmpsl
pop
fwait
std
mov
jecxz,pt
imul
sub
mov
lret
dec
push
push
xchg
sahf
call
fstpt
cmp
xchg
imul
pop
push
in
sahf
push
in
mov
xchg
sub
jg
adc
adc
sub
or
nop
dec
pushf
dec
cmpl
jno
mov
push
mov
jne
into
les
push
mov
aaa
in
cmp
dec
and
push
data16
sbb
push
shrl
daa
mov
jb
mov
movsb
cmp
sbb
lret
sub
scas
mov
das
push
and
jge
inc
out
fsubrs
ret
notb
cmp
lret
fnclex
fwait
inc
sahf
imul
std
popa
dec
xchg
cmp
jmp
lea
lea
scas
dec
aam
add
pop
push
mov
pusha
fdivrs
enter
adc
pop
nop
pop
loopne
clc
sarl
fcomip
notb
sbb
int
xchg
cmp
jb
cmp
xchg
lds
adc
sub
ja
scas
std
push
cli
mov
mov
testb
sbbb
mov
or
cmp
xlat
shll
gs
dec
movb
addr16
jns
sbb
mov
mov
xor
rorb
shr
les
push
mov
sbb
fiaddl
push
inc
mov
fbld
xchg
cmc
into
ds
mov
sbb
adc
push
mov
push
shll
lea
jnp
or
lock
je
sub
mov
sub
sub
xchg
notb
fldl
and
mov
mov
jno
sbb
add
pop
negl
lret
dec
je
push
movsb
mov
aas
inc
pusha
shr
addl
jp
push
sub
std
dec
sbb
bnd
lcall
pop
ret
dec
adc
cs
shr
add
stos
subb
dec
push
cmp
ljmp
jbe
adc
cmp
and
xor
ret
popa
cmp
xor
dec
flds
loopne
xchg
dec
pop
pop
xor
cmc
aaa
scas
mov
push
and
dec
sbb
lret
notb
mov
xchg
mov
fucomp
cltd
mov
faddl
push
mov
mov
inc
add
imul
and
cmc
lds
insl
and
loop
mov
sbb
push
xchg
in
pop
pushf
pop
cld
mov
xorb
popf
adc
cld
or
outsb
cli
ss
push
pushf
cmp
outsw
xchg
inc
cs
xlat
mov
sub
gs
mov
mov
shl
out
push
cmp
mov
pop
dec
pop
mov
inc
icebp
clc
ret
mov
mov
cmp
pushf
imul
test
push
rolb
div
dec
dec
rcrl
mov
out
jle
gs
test
jne
mov
out
jns
les
lods
js
jecxz
push
push
or
stc
sbb
cs
mov
mov
xor
sbb
sbb
or
std
mov
lcall
push
divb
jne
decb
outsl
pop
jg
sub
add
js
lahf
xor
test
push
test
cmp
subl
sbb
fsubr
pusha
nop
fadd
cmp
loopne
sub
mov
arpl
mov
inc
fidivl
bnd
fisttpll
std
adc
cmp
lcall
mov
std
movsb
push
jns
mov
push
rolb
into
xchg
mov
or
loop
and
sub
jne
jp
or
or
outsb
add
adc
cltd
gs
and
mov
icebp
cld
data16
inc
notl
sbb
push
mov
imul
jae
addr16
inc
imul
imul
sub
inc
inc
daa
mov
jg
sub
cmp
adc
cmpsl
xor
lea
or
mov
jmp
and
das
adc
dec
cltd
push
cmp
sarb
mov
lcall
lcall
add
lods
shll
lods
cmp
or
and
jmp
or
not
ds
hlt
shrl
inc
sbb
and
push
mulb
jle
cmp
lods
adc
ds
fstps
xchg
lcall
xor
ret
push
mov
cmc
sub
std
add
scas
mov
loope
pop
jnp
jmp
pop
xor
sub
push
mov
mov
fchs
std
jmp
int3
aad
mov
push
in
and
fwait
outsl
repnz
mov
dec
sbb
dec
sbb
jg
lock
lea
mov
fs
mov
pop
or
jge
inc
je
in
pop
add
mov
sbb
sub
dec
and
cmp
lret
and
or
ljmp
test
adc
mov
fmull
ja
imul
movsl
lds
pop
mov
adc
lret
mov
xor
popa
test
add
mov
jecxz
xor
bnd
mov
push
int3
mov
xor
sti
push
popf
sbb
scas
sar
jg
mov
mov
fadds
ss
mov
or
aaa
xor
sbb
mov
mov
out
setge
xlat
pop
jns
repz
cwtl
push
and
mov
pop
les
lods
lods
mul
add
idiv
js
sbbl
or
in
pop
dec
scas
outsb
jnp
or
out
sti
loopne
pop
sub
loop
scas
ret
sbb
jg
jg
pusha
mov
dec
pop
mov
pushf
lcall
pop
nop
adc
pusha
sbb
jle
mov
xchg
dec
out
adc
es
lds
sbb
xor
fsubl
hlt
jg
ret
jbe
leave
stos
push
xchg
sub
dec
mov
mov
xor
cs
dec
or
rcrl
push
adc
iret
nop
sub
pop
clc
addr16
aad
nop
cmp
lcall
iret
repnz
repz
mov
add
mov
sahf
xchg
mov
into
add
jge
loopne
xchg
mov
mov
mov
and
test
mov
dec
and
hlt
or
imul
ss
fdivs
cmp
dec
jne
imul
pop
pushf
orb
jg
inc
fstps
movsl
mov
mov
sarb
mov
je
pushf
xchg
xchg
rcrl
add
and
daa
lret
jl
mov
pop
inc
jmp
add
and
xor
mov
push
push
aas
fnsave
jnp,pt
lods
xchg
jle
xchg
pop
xchg
pop
insb
or
daa
push
mov
inc
dec
shl
loope
out
dec
or
cmp
ja
jl
rol
lcall
in
cltd
lret
push
neg
test
dec
das
fs
xchg
fneni(8087
mov
sahf
scas
pushf
cmp
sti
push
loop
imul
cmp
cmp
adc
das
sub
repz
jb
loop
pop
rcrb
inc
mov
arpl
pop
sub
mov
pop
aam
clc
mov
scas
cmpsl
scas
ljmp
jge
xchg
cmpsb
inc
mul
jae
das
jg
dec
and
push
test
cmp
int
adc
pop
push
sub
test
xchg
and
mov
popa
add
pop
dec
test
jmp
xor
insl
mov
adc
mov
repnz
ljmp
aam
enter
xor
and
lea
cmp
xor
mov
pop
adc
leave
lock
iret
xchg
and
insl
jbe
adc
cmpsb
leave
jo
or
or
cwtl
insb
nop
push
xor
scas
popf
or
loopne
jo
xor
sub
popf
cmp
xor
pop
mov
lea
jmp
rcll
das
sub
jne
add
stos
fs
les
pop
out
sbb
add
mov
lods
inc
arpl
xchg
ljmp
mov
fsubr
outsl
lahf
fnstenv
and
lcall
add
mov
inc
pop
xor
loopnew
mov
pop
and
xor
outsb
xor
jbe
mov
push
aam
sub
test
cmc
and
dec
and
into
push
lcall
lcall
lea
stos
push
sbb
je
incl
mov
shr
sub
fildl
incb
cmp
mov
and
cmc
adc
xchg
bound
leave
lods
push
movsl
push
mov
test
mov
or
mov
fcomps
lret
lock
rcr
fimull
lds
mov
ljmp
out
mov
inc
outsb
lods
sahf
shll
pop
jne,pt
mov
cltd
mov
add
aas
xlat
and
loop
inc
mov
jp
rcll
sarl
test
ds
dec
cmp
sbb
ficompl
subl
sub
xor
cmp
inc
lcall
stos
mov
sbb
jle
cli
cltd
push
sub
es
pop
and
sbb
fnstsw
test
aas
jg
and
sbb
mov
and
pop
xchg
test
in
inc
aad
pop
enter
and
nop
push
dec
in
add
int
add
cmp
fs
in
lcall
sbb
sbb
subl
in
xor
mov
xor
jno
pop
std
ret
sub
xchg
inc
outsb
jne
or
jecxz
stos
les
sbb
mov
or
fists
adc
ss
mov
fstpt
cld
je
rorb
jbe
ret
hlt
repnz
scas
push
mov
push
and
fildll
jle
aas
sbbb
bound
jmp
inc
arpl
fbstp
adcb
push
pop
ss
ficoml
or
mov
xor
mov
mov
movsl
arpl
push
xchg
data16
insl
insl
sahf
lret
fmuls
push
dec
pusha
push
aaa
mov
xchg
cmp
nop
dec
ret
loope
fiaddl
jbe
test
dec
mov
push
cmp
in
mov
idivb
cs
cli
addr16
sarl
jne
pop
fcmovnb
mov
scas
cmp
mov
ljmp
push
cmp
cwtl
mov
push
add
sbb
insb
xor
dec
roll
lods
jmp
dec
fsubl
clc
xchg
and
iret
loopne
int3
outsl
mov
sarl
xchg
push
mov
mov
jl
addr16
lds
andb
mov
mov
mov
pop
pop
stos
ss
test
pusha
clc
cmc
imul
ds
cmc
xchg
mov
inc
jg
dec
xor
imul
js
inc
push
test
inc
lea
sub
sbb
inc
negb
xor
sbb
sub
into
or
negl
push
sub
cs
cwtl
sbb
movsl
outsb
popa
jb
or
imul
sbb
jo,pn
pop
rorl
mov
mov
jno
push
cmp
sti
xor
dec
push
and
paddb
add
or
ljmp
adc
jmp
adc
lret
xchg
mov
sub
jb
movb
insb
mov
xchg
lahf
adc
adc
iret
cmp
dec
sub
push
add
sysret
out
int
int
es
xor
stos
jne
ljmp
mov
dec
or
in
adcl
xchg
mov
movl
or
fstpl
mov
dec
pop
dec
jmp
mov
fsubr
xor
pop
inc
ret
imul
ret
inc
sbb
or
int
test
addr16
jb
lock
fsts
jmp
dec
scas
adc
nop
add
pop
mov
cmp
std
add
mov
pop
popf
out
dec
into
sbb
adc
stc
sbb
adc
xor
lea
in
dec
jo
pop
std
sub
aad
lea
adc
xchg
fsts
in
mov
in
lock
je
popf
cmp
push
xchg
stc
cmovbe
dec
fs
je
mov
cmp
adc
stc
dec
push
gs
shl
pop
aad
shl
test
lcall
pushf
xchg
or
sahf
pop
xchg
jbe
dec
adc
mov
inc
xchg
jne
mov
sbb
pushf
enter
mov
lock
loope
sti
jecxz
roll
mov
iret
cmp
dec
pop
mov
xchg
add
repnz
add
imul
jmp
mov
sahf
inc
xor
mov
test
mov
jno
sub
test
push
inc
or
jecxz
dec
test
ret
adc
or
sub
sub
push
lcall
jae
jne
sahf
pop
lods
ja
setnp
mov
jmp
sahf
dec
or
jp
or
stc
out
sub
mov
ss
push
roll
stos
imul
hlt
adc
jnp
jbe
cmc
adc
jo
stos
mov
mov
sbb
loope
add
pminub
test
sub
lods
inc
mov
mov
jne
and
je
mov
xchg
jnp
mov
dec
pop
insl
ss
pop
movsl
enter
inc
fnstsw
mov
in
ret
dec
cmpl
pusha
sub
add
popf
pusha
cmp
mov
movsb
adc
shll
gs
add
pop
xchg
xchg
stos
adc
inc
mov
lock
je
push
push
inc
push
leave
sub
mov
das
inc
add
pop
jecxz
adcb
addr16
sub
sub
lods
cmp
xor
stos
jg
cmp
shll
dec
inc
add
cld
mov
in
test
push
mov
push
stos
mov
mov
in
shrl
movsl
cmp
jnp
fdivl
dec
rcrl
jnp
out
push
cmp
jp
out
jle
adcl
xor
adc
adc
rcll
dec
push
push
pop
push
cmp
pop
dec
or
or
ja
push
rcr
mull
sub
jnp
fwait
push
mov
pop
into
je
pop
scas
int
xor
xchg
lds
mov
inc
adc
add
gs
faddp
icebp
rclb
lret
movsl
pop
mov
and
lcall
pop
cmovb
negb
and
pop
jmp
cmp
sbb
xlat
lock
pop
in
mov
std
jbe
and
sub
aaa
adc
repz
pop
cmp
jg
sbbl
mov
sbb
rcr
inc
fistpl
xchg
mov
testl
dec
adc
sbb
cmpsl
adc
out
nop
xchg
or
mov
insl
mov
js
outsl
adc
pop
mov
push
push
leave
imul
xor
adc
cmpsb
loopne
sub
stos
repz
mov
push
push
push
xor
inc
or
dec
outsl
ret
out
add
jb
mov
sub
mov
fwait
add
daa
ret
sub
xchg
lahf
fisubl
popf
mov
sbb
jl
xchg
mov
arpl
cltd
push
and
and
or
mov
pop
cwtl
dec
inc
push
xchg
push
outsb
mov
ljmp
mov
xchg
or
out
out
add
add
mov
addr16
or
cli
push
loopne
cmpsb
sarl
aaa
mov
es
addl
fdivl
lcall
lods
mov
mov
cmp
ds
pusha
mov
cmp
cmp
mov
push
mov
push
add
sub
fiadds
repnz
cmp
push
xor
xchg
test
mov
jmp
movsl
pop
sub
mov
mov
inc
ljmp
cmp
les
mov
mov
sbb
loope
dec
adc
aaa
pop
jnp
daa
in
mov
cmpsb
jbe
pusha
sub
lret
js
add
clc
insb
mov
xchg
cld
and
mov
xchg
sub
loopne
in
push
xchg
rol
jle
pop
lret
push
outsb
jns
push
inc
sbb
push
in
push
insb
cmc
sub
xchg
push
xchg
test
add
jno
cmc
ss
iret
sub
lea
cli
fistl
add
jae
mov
xor
inc
popa
shrb
add
push
sub
iret
fisttpl
fwait
outsl
mov
add
insl
addl
inc
fimull
jnp
imul
mov
icebp
out
sbb
jp
mov
rcrb
mov
mov
mov
xor
jle
or
lods
adc
fs
xorl
dec
xor
hlt
jne
outsl
dec
xchg
dec
icebp
repz
mov
xchg
cmpsb
mov
test
mov
shrb
les
mov
and
pop
push
jecxz
decl
mov
lcall
popl
dec
in
out
sahf
mov
rolb
mov
jns
inc
enter
mov
dec
inc
xor
lods
push
outsl
hlt
mov
sti
lods
cmp
pushf
mov
lcall
paddw
sbb
mov
jp
push
mov
dec
cmp
xchg
cli
test
mov
outsl
pusha
jo
mov
stc
sbb
loope
sbb
test
lea
aaa
cmp
outsl
jno
out
cmp
or
test
shl
jns
jbe
mov
jns
hlt
adc
jne
hlt
clc
ret
icebp
sahf
mov
sub
sbb
iret
test
mov
bound
cs
enter
xor
pop
gs
lea
jo
jbe
frstor
cmp
and
jb
stos
sbb
mov
cwtl
jle
rsqrtps
test
loope
mov
jmp
repnz
sarb
xor
popf
xchg
jo
clc
insb
mull
pop
loope
jbe
xchg
inc
mov
xlat
jecxz
or
sub
arpl
hlt
cli
adc
xor
repz
push
sbb
movsb
divl
adc
jnp
jae
dec
xchg
xor
sub
fildll
js
lret
fdiv
cmp
movsl
fisubrl
nop
or
fldenv
add
cmp
and
or
push
cmc
clc
cmp
leave
cli
adc
pop
icebp
mov
ret
or
jns
shr
leave
inc
sbb
add
mov
popf
add
int
xchg
jge
dec
test
nop
in
push
xchg
xor
dec
sub
mov
ficomps
pop
pop
sti
inc
jo
fs
leave
mov
or
pop
leave
cmpsl
sahf
stos
push
xchg
xor
mov
ljmp
ljmp
arpl
add
xchg
call
sub
sbbb
lods
lock
daa
loope
adc
adc
pop
adc
mov
push
adc
cmpsb
pusha
mov
jae
enter
call
mov
cmpsl
mov
xchg
lea
mov
fsubrl
ljmp
dec
mov
push
dec
xchg
mov
push
pusha
jb
out
add
loope
loopne
mov
pop
mov
sub
push
ret
ret
dec
sub
in
mov
or
xchg
aaa
lods
jmp
cs
pop
fisttpl
or
ljmp
jae
lock
mov
nop
iret
loopne
xor
inc
mov
daa
pop
pop
mov
std
jle
adc
fldenv
and
cmp
mov
aam
push
push
aas
pop
xlat
daa
and
js
cmp
loop
and
jp
mov
inc
jae
loop
lret
jl
loope
das
jno
in
xchg
mov
rclb
enter
xlat
inc
xchg
cmp
push
into
aas
shl
sub
aaa
int3
sti
xor
es
and
fsubs
aam
or
fwait
add
popa
lret
inc
scas
cmpsb
cltd
mov
ret
fwait
enter
sub
wrmsr
nop
scas
xchg
xor
adc
dec
das
fisubrl
or
and
data16
shrb
adc
lds
jo
dec
adc
out
in
repnz
insl
into
ljmp
call
jb
in
add
dec
cmpsl
insb
fisttpll
sub
and
dec
fadd
mov
shl
dec
repz
popf
in
out
cmpsb
xchg
push
fidivl
dec
test
mov
lahf
sub
sub
pop
and
sbbl
flds
pop
push
mov
add
pop
mov
pop
and
lahf
pop
mov
movsb
mov
fs
add
mov
sbb
imul
dec
sti
testl
xchg
and
and
ret
cmp
jno
fsubrp
add
and
cmp
bound
sbb
shll
xor
lea
loop
loopne
push
sbb
out
insl
sbb
movsb
push
sub
mov
pop
imul
lret
ds
xor
adc
xchg
add
cmp
arpl
adcl
xchg
mov
push
in
lcall
dec
inc
lret
div
jb
dec
cmp
mov
gs
or
mov
sbb
inc
cmp
mov
push
push
loop
aas
andl
aaa
sar
xor
out
pop
or
sarb
sbb
fmuls
or
loope
lahf
je
sbb
movsl
neg
repz
loope
mov
push
mov
sbb
fisubrl
inc
ja
stc
xchg
out
and
adcl
bound
jbe
xchg
insl
cmp
bt
add
test
sbb
mov
inc
icebp
sub
fisttpll
ret
inc
inc
shlb
lds
xor
xchg
dec
bound
lret
sti
ffree
mov
rorl
push
push
test
push
into
inc
dec
push
jmp
mov
insb
jmp
jbe
push
jp
jge
in
test
rclb
ljmp
aad
pop
data16
xchg
rcl
jmp
xchg
repz
aam
mov
pop
fwait
cwtl
inc
fsubs
sub
fucom
mov
cld
xchg
lret
sub
iret
lret
jb
inc
sub
push
cmp
aas
push
stc
pop
mov
fistps
sub
sbb
ss
jl
ja
shl
repnz
movsl
movsl
push
outsb
loop
daa
std
inc
adc
insb
stos
mov
lcall
cmp
les
lcall
add
lds
andb
mov
push
push
movsb
cmp
adc
mov
test
or
xchg
mov
arpl
test
bound
cmp
test
adc
incb
jnp
bnd
inc
or
sbb
ret
call
jg
inc
jnp
pop
sub
xchg
lods
add
test
in
mov
dec
cmpsb
mov
sahf
in
loope
stos
pop
jmp
test
lret
adc
and
adc
aad
add
push
push
cltd
imul
in
pop
icebp
push
pop
sub
call
mov
add
sub
call
jns
mov
jge
cmp
add
loop
pop
pop
into
lahf
pop
sbb
aam
jl
push
cmc
jno
or
pop
sub
or
imul
sbb
out
jns
sbb
mov
shld
or
mov
pusha
bound
jns
in
movsb
sar
jbe
push
add
fs
sbb
jbe
pusha
out
mov
ret
xchg
push
or
loope
imul
xor
sub
int
dec
inc
xchg
jecxz
jno
pusha
pop
rclb
out
test
sar
les
bound
fisubs
ljmp
cs
int
cld
push
mov
jb
pop
mov
inc
add
pushf
xchg
arpl
xor
lock
push
mov
mov
cltd
leave
in
pop
fisubs
xchg
jmp
jge
mov
cld
sub
inc
insl
mov
or
lods
cs
filds
mov
ret
xorb
mov
rclb
fildl
push
daa
adcb
sti
fdivl
push
aas
sub
cmp
push
or
mov
mov
outsl
loop
mov
outsb
xchg
ret
inc
lea
int3
jnp
daa
xor
push
stos
dec
aad
ds
cmp
loopne
scas
nop
sub
fincstp
pop
xchg
mov
lock
mov
or
mov
push
stos
add
stos
cmpb
std
pop
inc
sbb
pop
jbe
movsl
mov
ja
nop
pop
pop
lods
test
adc
leave
js
push
insl
pop
sbb
add
ret
sbb
xor
pop
add
dec
ds
or
dec
fcoml
jno
add
xlat
xor
jo
push
xchg
dec
inc
shlb
and
stos
out
jmp
imul
ds
in
pop
xchg
push
mov
fs
aaa
sub
in
stos
push
mov
lret
push
sub
jae,pn
icebp
bnd
dec
lock
mov
mov
and
cmpsb
dec
dec
fcmovu
xor
popa
push
in
xlat
sub
lds
jge
fs
imul
test
mov
sbb
clc
xor
fwait
cmp
in
cmp
adc
ja
jo
mov
cmp
push
ret
pushf
popa
mov
and
loope
rol
cltd
inc
mov
shlb
mov
dec
adc
lock
fmuls
stc
mov
idivb
mov
xorl
iret
xor
pop
sahf
mov
shlb
leave
inc
decl
ljmp
mov
mov
fidivs
mov
fwait
xor
ss
jbe
cltd
pusha
psubd
sbb
fs
sahf
lcall
pop
pop
add
mov
dec
inc
lcall
mov
adc
cmp
add
cltd
ret
fdivl
mov
pop
mov
and
fwait
jo
xchg
pop
mov
pusha
jo
cmp
jno
jmp
pop
push
movsl
cmp
jns
jl
push
clc
inc
ret
lcall
jp
aaa
inc
nop
mov
cmpsl
sbb
jg
dec
in
out
inc
call
addr16
mov
rcl
into
insl
imul
iret
add
and
cmp
imul
jecxz
iret
popf
push
jmp
mov
orb
fmull
inc
mov
aaa
inc
jae
or
dec
cli
pusha
push
add
xor
and
imul
fsubrl
insb
mov
loop
and
int
xor
add
fidivl
fnsave
mov
cmp
icebp
mov
dec
addr16
icebp
shll
pop
lock
push
shll
inc
or
or
lcall
lock
scas
mov
push
test
test
inc
or
add
je
test
hlt
inc
subps
mov
mov
cmp
fs
jbe
adc
rolb
mov
xchg
sahf
pop
sti
popf
rclb
add
lock
add
rcrb
push
jae
jno
sub
arpl
mov
dec
mov
std
xor
shll
cmpsl
stos
inc
adc
mov
sub
add
add
je
mov
nop
mov
in
fdivl
and
sub
mov
pop
mov
sbb
xchg
cmp
ret
lods
mov
dec
out
sub
xor
cs
inc
sbb
xchg
lds
scas
lcall
daa
int
iret
sub
in
test
mov
push
sbb
mov
fs
push
cwtl
push
xchg
decb
xchg
xor
adc
movsl
sti
xchg
testb
notl
pop
inc
dec
dec
sub
adc
in
rcrl
imul
mov
inc
inc
in
arpl
cmp
push
or
mov
push
aaa
lea
xchg
shrl
in
adc
jns
sbb
fiadds
push
out
dec
stos
jbe
mov
pusha
jecxz
pop
lahf
fiaddl
lea
mov
sbb
pop
and
mov
adc
out
xlat
pop
inc
xchg
je
dec
cmpsb
pop
cli
push
adc
pop
lcall
loop
aad
daa
mov
and
jmp
cld
popa
mov
out
mov
ror
cmp
out
mov
jle
sub
push
mov
sahf
fdivr
and
inc
pop
out
xor
push
ret
popf
daa
push
sbb
cmp
xchg
push
jbe
fldcw
hlt
ljmp
cli
je
sbb
sbb
push
jecxz
xchg
pop
ret
and
ret
inc
ds
sbb
scas
sbb
mov
jo
addr16
mov
jecxz
cmp
sbb
imul
jnp
or
cwtl
in
out
dec
dec
dec
out
xchg
and
cmp
cld
es
out
in
mov
mov
das
push
xchg
bound
loop
sarl
adc
mov
int
jecxz
fs
and
jne
sarl
leave
mov
sub
push
or
outsb
inc
fcoms
and
bound
xchg
pop
pop
cli
movsl
test
pop
popf
xchg
mov
dec
jb
jo
es
sbb
loope
mov
and
push
or
lods
push
outsb
in
mov
inc
scas
mov
js
add
fnstsw
jg
popf
inc
ret
xor
into
inc
dec
jmp
inc
xchg
pop
sub
push
aaa
cmp
daa
add
out
flds
xor
out
sahf
sbb
xor
sub
gs
xor
fbld
outsl
negl
pushf
ljmp
loopne
cmp
dec
mov
js
ficoml
sbb
in
arpl
mov
loop
cmpsl
pushw
inc
mov
mov
mov
cmp
adcl
jge
arpl
test
lods
xor
lcall
cmpl
ljmp
dec
insb
outsb
movsb
in
push
add
stc
shl
lods
inc
sub
add
xor
movsl
in
lcall
int3
add
divb
cmpsb
insb
sbb
add
add
scas
mov
xor
imul
pop
ss
dec
test
jns
aas
or
shll
xchg
inc
jne
imul
sar
loop
and
cli
adc
out
push
data16
mov
pop
gs
pmulhuw
loop
jmp
js
mov
mov
lea
ljmp
mov
add
push
movl
pop
inc
ja
push
push
scas
lret
mov
xchg
mov
sub
pop
pop
in
dec
dec
sbb
add
or
xor
fsubrs
xor
cmc
stos
jl
and
pop
test
jp
pop
sub
cli
lret
inc
in
out
aad
aaa
xlat
imul
adc
pop
mov
stos
imul
cmp
dec
mov
jne
pop
out
nop
xchg
sbb
adc
dec
iret
cmc
cmp
test
popf
movsb
scas
mov
mov
inc
jae
cmp
push
mov
pop
cmp
or
insb
xor
fdivrl
insb
jmp
lret
mov
jl
in
fcompl
test
pop
sahf
dec
sbb
pop
sub
insl
xor
lods
inc
mov
test
adc
push
and
in
sbb
int
or
sahf
pop
push
or
mov
xorl
int3
jne
xlat
bswap
jle
add
outsb
cmp
dec
mov
test
in
rorb
adc
ds
xchg
push
adc
cmpsb
test
jnp
lock
loopne
dec
stos
xchg
pop
sbbb
xor
pop
pop
dec
sub
xchg
in
dec
rcl
pop
mov
sar
and
and
jbe
inc
jns
add
repnz
sbb
mov
inc
in
pop
ret
pop
out
inc
pop
fistps
lds
pop
pop
or
xor
cmpsl
clc
out
mov
mov
sbb
push
push
dec
sbb
les
lea
jp
mov
inc
pop
in
xor
xchg
mov
outsb
rorb
xor
mov
push
loope
daa
inc
stc
cli
xchg
into
sarl
out
mov
pop
shr
lods
mov
jg
insb
xchg
shrb
jnp
cmp
ret
mov
add
js
jb
mov
mov
dec
mov
pop
adc
mov
in
addr16
pop
sub
dec
or
xor
arpl
sahf
mov
and
loope
shrb
inc
jmp
sbb
push
lea
popf
leave
scas
push
mov
push
mov
dec
lock
jmp
andl
ljmp
push
fstpt
test
mov
pop
ss
push
shl
dec
stos
jnp
add
shlb
xlat
dec
les
cmpsl
loopne
xchg
add
leave
fs
push
inc
aaa
lods
pop
push
inc
test
mov
in
fsubs
fwait
scas
int
arpl
cmp
data16
xchg
sub
push
ret
push
xor
arpl
cli
hlt
mov
addr16
inc
xorl
pop
iret
cs
imul
jbe
leave
xchg
push
and
addr16
lods
fnstcw
or
lock
pushf
or
in
out
idiv
aas
inc
nop
add
inc
sbb
dec
js
sahf
jo
popa
cmpsb
mov
scas
stos
cmpsl
cltd
lcall
aam
subl
cmp
cmp
pop
insl
mov
xchg
ret
sbb
mov
push
lods
sahf
mov
inc
pop
jle
pop
dec
jo
sub
imul
cmpsb
shlb
popf
shl
je
mov
inc
adc
iret
fidivs
push
jbe
or
fidivrl
fwait
xchg
frstor
and
pop
or
clc
lret
shlb
mov
imulb
xor
and
xor
jmp
into
pop
fcmovne
iret
push
stos
push
subl
jl
inc
rorb
sub
fadd
push
adc
mov
imull
xchg
ss
xor
adc
lds
cmpsl
sbb
pop
mov
movsb
decl
roll
stos
lea
sbb
xor
xchg
adc
sub
add
push
loop
adc
je
movsb
test
adc
dec
loopne
dec
add
add
push
cmp
xor
jle
push
sbb
pusha
push
fbld
mov
ror
mov
es
gs
inc
mov
sbb
add
push
scas
jp
shlb
xchg
arpl
xor
lahf
sub
or
jmp
dec
in
mov
fcoms
jae
insb
ljmp
les
mov
or
call
es
fsubrp
sbb
mov
scas
rolb
je
jge
test
xor
out
stos
mov
sbb
shrb
into
test
add
adc
test
jecxz
or
cmp
sub
sahf
or
sahf
notl
push
in
add
jecxz
add
add
xchg
nopl
jbe
loopne
in
xor
sub
test
mov
sbb
in
sbb
shr
push
cmpsb
aam
ficompl
push
mov
nop
pop
stc
push
xor
movsl
add
into
push
adc
inc
int3
lods
add
iret
sti
sbb
mov
shll
inc
dec
iret
rcl
pop
cltd
sahf
arpl
mov
aas
xlat
mov
cwtl
push
cwtl
nop
or
cmp
xchg
popa
iret
push
jle
cli
pop
add
mov
add
dec
sbb
out
icebp
mov
movsl
mov
pop
xor
xchg
pushf
cmp
ja
test
stos
push
lret
or
scas
push
aaa
int
jmp
cltd
dec
inc
scas
fldenv
fistps
lods
sahf
ficomps
repz
dec
jo
lds
jno
jbe
scas
xlat
cmp
fcom
jbe
push
gs
mov
dec
inc
jo
xchg
xchg
jno
rcr
add
push
xchg
ljmp
cmp
adc
mov
mov
mov
test
push
lods
sbb
dec
mov
push
dec
test
inc
xor
ficompl
pusha
cmp
ja
mov
cmp
pop
fimull
xor
gs
ret
and
cs
fs
inc
aaa
jecxz
insl
aad
cmc
lcall
pop
push
std
rcrb
xchg
mov
ss
jb
in
arpl
inc
adc
mov
dec
push
roll
inc
push
adc
inc
add
xor
inc
test
test
or
xchg
inc
outsb
or
daa
or
fdivl
dec
push
xor
push
push
mov
int
xchg
add
repz
gs
sub
dec
pop
int3
mov
enter
pop
fsts
hlt
cmp
inc
cli
mov
mov
inc
add
mov
subb
jecxz
lret
mov
movsl
iret
in
sbb
xchg
inc
cmp
ja
dec
adc
ja
in
out
sbb
shrl
aas
mov
scas
xchg
fisubrl
sub
and
jno
cmpsb
push
sbb
or
push
push
dec
lock
sbb
sbb
imulb
lret
in
push
push
test
dec
ja
fmull
adc
adc
push
xor
jbe
clc
outsb
pop
cmp
repz
cmp
cmp
xor
sub
xor
jmp
ljmp
fcomp
icebp
pop
mov
mov
mov
dec
pop
loop
fisttpl
sbb
daa
or
fsubrp
add
pop
test
mov
mov
mov
mov
cmc
mov
out
lcall
mov
popl
fbstp
xor
outsb
aad
inc
xchg
stos
mov
mov
mov
cltd
push
je
jbe
push
cmpb
std
mov
subb
or
and
out
in
sub
push
jno
inc
imul
loopne
aas
cmp
lcall
mov
jnp
adc
or
arpl
pop
mov
rcr
fcoml
mov
xor
dec
faddp
sahf
imul
add
xchg
loopne
push
cmp
and
pop
ljmp
pop
das
cli
sbb
adc
push
inc
add
cmp
jl
push
cmp
icebp
rcl
mov
pop
adc
mov
in
repz
std
and
xchg
adc
mov
xchg
mov
cmp
cwtl
enter
nop
test
cmpb
aaa
jns
pop
push
push
xchg
jae
ljmp
or
or
fstl
mov
mull
jae
pmuludq
mov
les
cmc
and
mov
outsb
popf
xchg
adc
repnz
push
jl
cmc
dec
insl
jo
ss
insl
imul
cmp
shl
aad
cmp
mov
lods
arpl
imul
aam
sub
or
sub
mov
shrb
sahf
bound
or
mov
xor
aam
testb
aam
jno
adc
test
xor
mov
in
sbb
cld
repz
xchg
adc
sbb
ss
push
push
int
sbb
imul
outsb
mov
dec
out
sbb
fistl
faddl
cltd
pusha
push
mov
dec
mov
jle
cmp
jp
or
push
mov
and
cmp
ss
push
xchg
mov
fs
cltd
repnz
adcl
cli
movsl
ficompl
stc
rcrl
nop
pusha
sti
add
imul
jle
sub
jmp
fisttps
popf
push
sarl
loopne
push
lods
popa
dec
mov
cmp
mov
mov
jg
dec
ret
xchg
add
adc
movsl
mov
in
inc
out
and
insl
add
or
xor
cmpsl
ficomps
or
jl
jge
cltd
or
in
xchg
mov
xchg
or
inc
pop
mov
mov
or
cli
jmp
nop
push
push
sbb
mul
push
ljmp
lods
push
dec
movsl
pop
call
push
xchg
mov
sub
aaa
fcomp
rolb
fnsetpm(287
jg
cmp
pop
notb
dec
sti
repnz
cmp
inc
aas
and
xlat
in
sbb
iret
out
imul
jg
mov
gs
xor
push
rorl
cmp
jmp
addr16
inc
and
pusha
jbe
and
ljmp
mov
push
lahf
out
push
sub
test
in
lret
mov
jle
push
cmp
icebp
movsb
add
jno
enter
add
dec
or
lea
loopne,pn
movsb
inc
dec
dec
push
mov
pop
test
xchg
test
lds
std
popa
flds
dec
aaa
pop
mov
negl
add
in
mov
sbb
test
or
jb
xlat
add
test
test
lock
or
sbb
stos
push
dec
movsb
push
loope
sti
cmpsl
fldcw
and
in
push
push
mov
sarb
repz
sub
lcall
jl
mov
lods
cltd
pop
pusha
mov
xchg
iret
pop
cmp
adc
js
ret
mov
add
xchg
icebp
outsl
sbb
dec
cmp
xlat
test
cmp
and
movsl
fistpl
mov
push
neg
sbb
push
gs
lock
xor
add
xchg
fmull
cmp
xor
cmp
sbb
jb
pusha
test
xor
push
mov
mov
xchg
js
and
jmp
out
xor
jae
movnti
xchg
outsl
ds
aaa
movsb
sbb
jns
push
dec
pop
xchg
push
sub
xor
push
jmp
push
mov
mov
pop
dec
lcall
cmp
add
aas
push
push
lret
icebp
out
das
negl
outsl
int
das
pop
icebp
mov
mov
sbb
les
aas
and
add
movsb
dec
xor
lods
jo
out
pop
mov
cmpsb
decb
insl
xchg
sbb
mov
scas
outsl
js
iret
mov
jle
test
jo
in
and
ret
lods
sbb
mov
leave
stc
mov
test
negl
mov
pop
gs
ljmp
je
adc
in
xor
adcl
movsl
pop
fninit
shlb
xor
loop
fs
imul
cmp
push
xlat
pop
loop
adc
out
aad
mov
cmpsb
dec
int3
popf
mov
and
and
adc
jne
data16
rclb
cwtl
jecxz
cmpsl
fcoms
mov
aaa
stos
js
imul
call
shlb
ret
gs
fidivrl
inc
lock
sbb
popf
and
call
gs
ret
add
sti
jg
sub
out
cmp
adc
repnz
xchg
dec
xchg
jb
and
mov
aas
sub
add
and
cmp
test
adc
add
ljmp
mov
push
inc
std
push
pop
aam
insl
das
inc
mov
testb
xchg
mov
sar
out
xchg
adc
lea
test
pop
out
sbbb
inc
stos
cli
mov
mov
inc
pop
insl
js
frstor
and
pushl
movsl
loop
mov
clc
mov
nop
pop
stc
jmp
lret
lret
pop
lcall
push
cltd
es
pusha
push
dec
adc
lods
jmp
fisubrl
cmp
test
xor
pop
dec
jge
mov
outsb
xor
mov
int3
jecxz
enter
pusha
punpckhdq
xor
adc
cmp
mov
pushf
cmp
xor
mov
dec
lea
xor
add
out
xchg
loopne
or
push
pop
lods
fsubp
out
xchg
push
mov
lret
sahf
adc
sbb
push
jmp
mov
xchg
add
jbe
or
mov
loop
aas
loop
aas
mov
sbb
mov
lcall
push
mov
jnp
push
mov
call
mov
jae
dec
cmpsb
test
mov
nop
sub
out
xor
ror
movsb
inc
mov
pop
sub
jbe
cli
sbb
inc
imul
lds
mov
out
mov
xor
movsl
stos
aaa
scas
or
xchg
pop
xor
mov
lea
xchg
push
in
stos
push
mov
fistl
int
sub
cmp
in
shl
repz
lods
shrl
sub
mov
mov
popf
mov
xor
pop
shll
cmpl
sti
nop
dec
or
jecxz
ret
jecxz
fdivrs
or
fcomip
xor
scas
loopne
mov
insl
and
lahf
dec
stos
pop
mov
or
pop
and
test
lds
add
lea
push
scas
bound
aad
ret
lods
cs
xchg
pusha
and
cmpl
cmp
les
leave
aas
jb
sbb
into
xchg
fwait
adc
outsl
adc
push
repz
mov
add
mov
adc
mov
mov
xlat
and
inc
data16
and
cmc
xchg
stc
cmp
jae
test
int
jl
fs
adc
jl
push
sbb
and
inc
or
dec
sub
pop
ret
mov
movlps
mov
jle
outsb
clc
jmp
js
push
repnz
xor
adc
pop
cs
pop
cmp
push
mov
sti
rcll
xor
sub
cld
enter
sbb
mov
scas
leave
mov
pop
dec
push
inc
in
mov
mov
cmpsb
sub
dec
test
test
test
andl
mov
mov
fisubrs
fs
in
xor
push
repz
add
icebp
mov
cld
repnz
ljmp
inc
adc
rcrb
xchg
sbb
adc
mov
pop
inc
lods
aaa
dec
mov
test
lcall
or
jp
jns
jb
mov
iret
insl
test
fcmovnbe
xor
outsb
cmp
mov
std
imul
test
pop
outsb
nop
daa
and
fdivp
out
or
mov
pop
pushf
mov
add
ret
pop
mov
test
shrb
repnz
add
or
pop
imul
je
xchg
mov
xor
adc
mov
movsb
pop
icebp
rcrl
out
dec
push
mov
aaa
das
pop
xchg
jg
nop
dec
xchg
xor
cmp
cmp
jp
divb
pop
pop
pop
push
dec
lret
enter
and
xor
jp
test
pop
imul
mov
sbbl
sub
fst
lods
mov
mov
mov
or
jp
rcrl
movsb
rorl
stc
xor
xchg
add
shl
loopne
adc
add
mov
negl
adc
push
push
sarl
hlt
lods
jmp
stos
dec
sub
cld
jge
ljmp
jno
mov
leave
adc
cmp
cmpsl
sub
lods
pop
imul
arpl
fmull
ss
movsb
sub
jmp
in
sub
push
add
pop
push
aad
mov
jns
xchg
fistl
push
pop
shrl
inc
cltd
xchg
sub
loopne
sub
stos
or
ljmp
mov
xor
dec
adcb
adc
jp
ss
in
ja
cltd
mov
inc
pop
shll
or
mov
add
jmp
insl
pop
cmc
testb
cltd
bound
push
push
clc
insl
jecxz
cltd
shll
inc
xchg
pop
daa
sbbb
sub
div
mov
sbb
outsb
daa
adc
movsb
repz
sahf
cli
ds
leave
cmpsl
or
push
mov
pop
adc
pop
push
icebp
inc
into
sti
test
sub
aaa
fldenv
inc
sbb
pop
pop
mov
in
out
data16
push
cmp
or
adc
push
ret
mov
mov
inc
push
push
or
nopl
mov
mov
ja
xchg
mov
and
enter
mov
dec
mov
inc
addb
mov
out
mov
pop
or
popf
gs
and
pushf
sbb
mov
shll
cmp
rcr
pushf
fsubs
push
push
cs
cmpsl
xor
and
pop
push
push
and
test
push
outsl
jecxz
dec
sub
cmc
sbb
in
out
test
or
hlt
lods
lahf
shrb
mov
xorb
sub
jl
mov
sti
inc
leave
push
daa
pop
sbb
xchg
cmp
or
je
loope
inc
dec
clc
negl
sbb
aas
sub
inc
int3
add
xchg
pop
mov
sbb
sub
popf
out
scas
adc
stc
leave
pop
pop
xchg
push
daa
stos
mov
loop
mov
hlt
js
sbb
sub
add
jge
and
inc
push
cmp
push
adc
stc
jecxz
in
mov
lods
test
mov
pop
mov
adc
xchg
fsubrl
scas
sbb
inc
ret
lds
ficoml
mov
ljmp
into
jne
repnz
dec
cmp
xchg
inc
loope
fdivr
sbb
shr
mov
fldcw
xchg
mov
mov
pop
mov
add
loop
add
int
repz
imul
in
pop
mov
adc
cmc
ja
adc
and
jle
jnp
mov
xor
stos
jmp
enter
pop
rcl
lret
jecxz
repz
inc
push
fiadds
mov
mov
adc
xor
jnp
sbb
out
fnstsw
adc
mov
pop
sub
cs
adc
daa
ss
dec
or
mov
add
jmp
jmp
xor
and
in
orl
imull
jmp
das
jb
js
lock
or
pushf
mov
ret
xchg
inc
sbb
sbb
in
and
xor
cli
mov
scas
cmp
insb
aas
orb
ljmp
mov
faddl
sahf
or
arpl
jno
fnstsw
in
movsl
subb
daa
out
mov
cmpl
cmpsb
or
pop
mov
jl
mulb
fisubrs
in
or
jg
mov
pop
int3
push
inc
out
and
dec
jns
push
mov
loop
es
shlb
push
orb
jmp
test
jbe
cltd
in
inc
xchg
mov
pop
test
or
popl
jb
mov
xlat
or
and
or
into
mov
mov
dec
lds
xchg
push
scas
lock
and
shll
and
and
lea
push
pop
insl
mov
push
ret
aad
ficoms
mov
int3
jmp
in
pop
lods
or
dec
push
rcrb
cmpsl
in
lds
mov
push
push
ljmp
dec
or
xchg
pusha
insb
idivb
dec
push
jns
jle
stos
or
sub
pop
mov
mov
pusha
jge
xchg
shr
cmp
ds
sbb
bound
lock
pop
jge
daa
cmp
or
lods
je
pop
sbb
push
data16
shll
pop
mov
mov
repz
cmc
mov
in
sbb
push
mov
inc
roll
inc
fbstp
mov
gs
adc
es
inc
xchg
sub
jb
decb
aam
pop
shlb
cmc
sbb
lea
cmp
pop
sub
dec
into
push
mov
cli
lcall
pop
add
or
movsl
addr16
aas
or
imulb
stos
or
jns
mov
stos
xchg
mov
insl
fucomip
cmp
xchg
leave
and
pop
iret
cltd
or
out
jb
sbb
pop
push
les
sub
sbb
xchg
sahf
popa
ss
jle
mov
mov
xor
mov
outsl
rcll
jp
add
add
push
mov
push
popf
dec
adc
push
mov
ret
sbbb
fists
cmp
ds
inc
jb
gs
xchg
fildl
push
or
adc
lret
pop
dec
xor
popf
arpl
sbb
nop
jno
jge
jnp
test
out
push
or
xor
and
clc
push
push
cs
push
jmp
fimuls
cmp
sbb
cmp
enter
data16
fstl
arpl
call
mov
add
imul
mov
movsb
cmp
cmp
lcall
in
jno
cmpsl
movsl
xchg
adc
ficomps
loope
aad
fstps
sbb
inc
shrb
filds
mov
std
add
leave
sbb
leave
ficomps
call
and
sub
inc
movsb
xor
es
push
lods
or
hlt
xor
xor
pop
jne
test
push
outsb
cmp
fdivrs
into
pop
hlt
dec
adc
imul
loopne
lods
lds
andb
mov
push
into
mov
shl
push
adc
ja
daa
adc
fldl
shr
pushf
jo
adc
xchg
dec
add
imul
shrb
fwait
and
mov
mov
nop
test
enter
mov
scas
jns
jl
bound
cmp
pusha
add
mov
sub
lds
lea
scas
scas
sub
xchg
mov
and
out
xchg
mov
movsl
pop
imul
pop
icebp
cwtl
and
repnz
jg
pop
fxch
xor
lahf
pop
xchg
mov
or
xchg
adcl
call
inc
imull
pop
js
mov
pop
hlt
mov
lret
jb
jge
cmpsb
fimuls
subl
lret
scas
subb
aad
push
add
adcl
jae
mov
xchg
mov
xchg
fistps
outsl
pop
andb
in
das
add
mov
push
iret
int
mov
xor
fistps
lock
or
hlt
loopne
cvtps2pd
adc
or
mov
les
or
sbb
aaa
mov
or
xchg
aaa
lods
loope
dec
xor
fld
push
dec
cwtl
shl
xchg
ja
stc
repnz
dec
imul
fcmove
rcrl
loope
gs
jno
into
test
xor
imul
cmp
push
add
sbb
jle
pop
jecxz
sub
inc
js
push
xchg
mov
test
jp
xor
sti
mov
sbb
je
or
xor
jo
scas
push
popf
ds
push
sti
adc
mov
in
mov
push
lea
xchg
test
or
in
add
sbbl
cmp
push
adc
les
pop
lret
adc
sbb
lret
aaa
and
push
mov
das
cmp
sbb
jbe
xor
daa
jmp
int3
cmp
jo
pop
int3
xchg
scas
xor
dec
int
sub
je
fsubrs
mov
sbb
repnz
mov
push
or
out
push
lret
les
fs
fwait
stos
cmp
jno
xor
mov
popa
cs
aaa
pop
push
cmp
scas
shrb
insb
sbb
inc
dec
loop
cmp
xchg
gs
xlat
test
loopne
jl
and
fadd
push
ds
fldl
fldenv
dec
fs
ret
xor
pop
bound
in
lods
stc
imul
inc
mov
mov
lds
add
push
aas
pop
push
mov
jle
js
and
xchg
xchg
clc
mov
mov
mov
jnp
shr
fdivrs
push
jne
imul
sbb
sar
and
mov
ror
push
sti
xor
adc
and
outsb
aas
lcall
fwait
push
xlat
pop
mov
int3
push
out
insl
outsl
shr
sbb
inc
push
sbb
cmc
lahf
push
mov
or
icebp
aas
cmp
ja
test
insl
mov
popf
adc
dec
adc
fildll
push
in
inc
decl
ss
cltd
scas
shrl
test
decb
jl
push
xor
icebp
jae
mov
cmp
aaa
add
dec
xor
ret
aad
and
adc
idivl
aad
subl
pop
mov
hlt
jecxz
fcmovnu
mov
sahf
fwait
jb
and
lcall
pusha
and
ror
jle
popf
bound
xchg
repz
lods
mov
dec
sub
inc
pop
push
aam
dec
test
cmp
cmp
cltd
mov
jp
in
mov
and
data16
mov
fwait
repnz
cmp
xor
push
mov
fldt
das
popf
in
aaa
mov
or
and
popf
sub
or
lret
outsb
mov
jecxz
cli
push
pop
add
sub
in
xchg
lea
in
mov
lock
daa
dec
mov
std
mov
adc
push
dec
cmpsl
pop
int
shll
dec
pop
jo
dec
cmpsl
mov
cmpsl
mulb
mov
leave
out
clc
mov
dec
outsb
jl
ret
xchg
mov
cmp
ffree
dec
stos
sub
inc
sub
std
call
jp
je
fcmove
dec
jbe
repnz
push
cmpsl
or
stc
jo
dec
je
jbe
nop
jo
jns
mov
addr16
pusha
or
shll
test
jmp
mov
cld
aaa
std
das
test
mov
repnz
jne
dec
sbb
jae
mov
jns
xchg
cmpsb
in
push
inc
jno
popa
inc
dec
add
mov
jne
dec
mov
inc
mov
jae
push
jg
push
mov
aas
pop
fcomps
ljmp
inc
mov
xor
imul
adc
cmp
mov
movsl
pop
and
inc
subb
pop
xchg
cli
sbb
cmp
sbb
sbb
inc
mov
sbb
aaa
or
rcll
popa
pop
scas
popa
or
and
or
sbb
out
jnp
sub
in
pusha
pop
dec
aam
jae
ljmp
cmp
xor
dec
pop
xchg
popf
inc
aaa
icebp
mov
sti
xchg
mov
stc
xchg
push
lret
js
lds
mov
inc
shll
sub
xchg
lcall
mov
pop
sahf
mov
push
addb
cmpsb
fidivrl
ret
jp
jl
jbe
pop
lret
or
push
cs
xchg
dec
sbb
adc
ja
dec
fnstcw
test
xchg
imul
pop
movsl
jno
mov
jne
call
xchg
sbb
imul
mov
cs
pop
andl
mov
fstpl
cmp
std
sub
fs
push
jns
bound
pop
pop
cmp
xlat
push
fdivs
jnp
xor
jae
cmpsl
lock
in
dec
mov
pop
repz
sti
push
lods
lods
int
adc
das
ret
je
cmpsb
in
pushf
fptan
enter
fcmove
outsb
push
lcall
hlt
mov
lahf
dec
push
in
xlat
add
sub
fldcw
or
stos
pop
dec
into
adc
fcmovnb
adc
xorb
inc
dec
xchg
rol
loop
test
xchg
dec
out
jbe
pop
aam
dec
cltd
les
das
fistpl
cld
enter
rorb
inc
cmp
es
test
stos
cmp
shll
mov
jb
negl
pushf
xor
add
mov
or
xor
push
mov
pushf
or
pop
leave
pop
iret
adc
imul
mov
pop
pop
test
cmpsl
and
nopl
sbb
mov
xchg
xchg
pusha
xchg
jmp
jno
sti
ss
adc
xchg
add
add
inc
addr16
sahf
cli
mov
stos
fbstp
mov
mov
lcall
lret
sbb
or
andl
dec
dec
sub
rcll
push
lea
inc
stc
or
ja
scas
adc
stos
mov
iret
jne
sub
xchg
pop
shl
in
cmpsl
lretw
inc
xchg
xor
lods
inc
push
pshufw
ret
cmp
mov
pop
addr16
js
mov
fwait
push
aam
pop
push
lcall
xchg
and
in
pop
fwait
cmpb
inc
mov
out
lea
fcomi
or
int
mov
outsb
mov
xor
imul
mov
test
andl
cltd
adc
add
mov
jg
jg
lods
mov
stos
lods
in
or
loope
mov
push
lds
xchg
pop
nop
push
xchg
movsb
stc
ljmp
and
bnd
jg
add
inc
or
into
dec
mov
shrb
xchg
inc
mov
sarb
push
xlat
subl
imull
push
sbb
in
jb
pop
pushf
mov
stc
dec
inc
enter
out
push
sbb
and
lods
outsb
aas
js
mov
nop
cmpsb
ret
mov
ja
jp
jo
dec
mov
jne
push
arpl
insl
sub
or
cmp
ss
add
cmpsl
pusha
outsl
cmp
pop
lock
push
das
mov
shll
fstpl
fstps
sub
testl
mov
pop
dec
aaa
std
scas
fsubp
pop
xchg
mov
adc
std
rcll
aaa
divb
loope
inc
popa
jmp
aaa
jp
jle
add
mov
scas
push
lods
sbb
xor
xorb
xchg
imul
fidivrl
or
filds
xor
or
jae
clc
ret
mov
mov
cmp
jg
fcoms
out
add
inc
xchg
add
ret
push
pop
cmp
push
dec
imul
xlat
negl
add
test
jno
cmp
or
cli
or
stos
xchg
mov
sub
mov
clc
push
stos
ficompl
mov
hlt
enter
leave
add
clc
imul
sti
xchg
dec
aam
nop
icebp
daa
bound
ja
inc
inc
xlat
pop
push
pusha
fadds
mov
xchg
jle
and
out
mov
into
pop
shlb
lods
pop
cltd
fildll
xchg
movsb
out
jge
xchg
mov
sbb
je
adcb
outsl
popf
les
mov
popa
test
pop
cmp
add
mov
ja
imul
and
cmpl
lods
fxch
or
mov
jb
push
xor
pop
lods
jp
push
mov
mov
call
pop
int
lods
add
gs
popf
pop
mov
xor
xchg
pop
adc
push
mov
loopne
pushf
xchg
es
jmp
stc
dec
xchg
mov
or
or
cmp
int
add
repz
mov
add
loop
js
jg
add
cwtl
push
xchg
pop
stos
lea
pop
push
mov
int
cld
dec
fisttpll
lock
insb
add
jge
fidivs
mov
sarl
insl
xorb
sub
enter
and
std
add
fwait
aaa
arpl
cltd
fsubl
xchg
aad
ljmp
loopne
jne
repnz
mov
fwait
cwtl
push
lret
movsb
push
xor
adc
inc
pop
dec
inc
iret
push
icebp
out
sub
repz
jg
jns
pop
pushf
pop
cmp
push
fwait
test
rcll
push
jmp
mov
adc
or
cltd
mov
repnz
dec
inc
inc
mov
pop
test
xchg
adc
aad
fdivrs
jp
mov
mov
mov
mov
cmp
xor
insb
xchg
dec
cmc
das
cwtl
mov
into
add
mov
mov
dec
pop
sbb
mov
sarb
mov
mov
ficoml
testl
int
shlb
outsl
xchg
or
pop
fsubl
and
sub
jecxz
cmp
test
mov
jp
add
cmp
outsl
dec
adc
adc
jmp
pop
jmp
push
mov
mov
leave
xchg
mov
ret
pop
fbld
cmp
test
jb
stos
mov
out
notb
loopne,pn
xchg
pusha
fcomip
sub
les
xorl
add
sbb
ljmp
stos
pop
push
cmp
jb
adc
aas
pop
push
jno
dec
xchg
xchg
mov
addr16
adcl
cwtl
fwait
sbb
lcall
dec
lods
jmp
jle
jae
mov
roll
aam
lds
pop
enter
stos
jb
mov
adcl
sbb
fadds
es
aad
das
clc
arpl
mov
clc
repnz
or
xchg
inc
in
lea
outsl
xchg
inc
pop
push
hlt
and
fwait
shlb
inc
imul
lea
xor
pop
mov
movsl
nop
xor
sbb
jae
mov
fyl2xp1
sbb
aad
sahf
adc
mov
aaa
pop
stos
punpckhbw
test
add
std
pushf
ret
out
andl
loopne
dec
jnp
push
inc
in
out
in
test
out
shrb
lahf
sarl
inc
aaa
lcall
xor
insl
sbb
lods
js
cmp
fs
mov
imul
outsb
push
pop
sub
mov
mov
out
sbb
call
pop
mov
arpl
scas
push
and
or
scas
orl
lods
mov
xchg
js
add
int3
push
jle
mov
mov
inc
call
mov
adc
js
or
add
aad
inc
inc
ja
icebp
pusha
add
sarl
out
test
stc
movsl
jae
jge
sub
ljmp
nop
jmp
inc
out
movsb
jae
imul
shll
ljmp
push
out
cld
ret
out
mov
imull
sti
or
xor
clc
push
push
cmp
sbb
sahf
cs
ror
clc
dec
dec
rolb
jbe
mov
xor
push
pop
insl
push
dec
subb
sub
lret
cwtl
cmp
mov
jmp
inc
ret
cmpsl
andb
jge
js
push
xor
dec
lock
insb
dec
in
iret
cmp
pop
test
mov
fcompl
test
adc
decb
les
out
and
dec
jl
test
adc
shrl
pushf
dec
sbb
std
lret
jne
sbb
popf
xor
sbb
mov
add
xchg
add
cmp
pusha
mov
addr16
jp
and
or
cmp
xor
hlt
scas
loop
shlb
fldenv
inc
mov
sub
inc
push
bound
shl
rcrl
pushl
xchg
les
lahf
push
push
aad
push
loop
cmpsl
fiaddl
mov
add
and
push
adcb
fadd
xchg
push
push
lahf
subl
fidivl
ja
jecxz
xor
sub
mov
pop
dec
imul
aas
add
rcr
push
xchg
push
aam
pop
cs
xchg
mov
clc
orb
mov
lods
push
test
sahf
mov
hlt
mov
hlt
std
rclb
mov
dec
cli
cmp
mov
jl
sub
stc
cld
icebp
and
adcb
and
fsubrl
jnp
call
pop
orl
adc
int
mov
jns
sbb
jecxz
mov
inc
xchg
ror
int
mov
mov
jl
jbe
cld
in
sub
push
add
or
adc
cltd
fimuls
outsl
push
int3
js
xchg
sub
call
mov
addb
in
cmpl
rorb
scas
and
je
sub
lds
outsl
out
dec
inc
xor
nop
inc
fs
mov
movsl
xorl
xchg
jnp
in
cmpsb
pop
enter
adc
xor
inc
out
dec
cmpsb
jp
push
out
dec
shll
scas
fisubs
mov
xor
push
xor
sbb
cmp
push
mov
and
lahf
lds
jl
push
inc
pop
sbb
lock
push
shlb
or
clc
sub
ds
sbb
mov
jmp
fwait
lcall
mov
decl
add
orl
mov
mov
test
or
cmp
sub
movsl
jbe
mov
cmp
inc
sahf
inc
nop
xchg
xchg
pop
jp
mov
mulb
lcall
sub
fisubl
xchg
outsb
xchg
stos
xor
call
add
mov
scas
push
aaa
fcmovne
out
jo
push
outsl
mov
lods
sub
dec
sbb
mov
shrb
ds
mov
in
jmp
adc
in
jne
test
mov
ss
fs
test
shr
cltd
fstps
cmp
dec
lret
ss
jae
push
xchg
pusha
mov
jl
mov
data16
add
and
push
push
aam
fistl
cmpsb
test
repnz
pop
add
jno
push
pushf
add
pop
es
notl
insb
sbb
and
inc
test
out
data16
mov
arpl
inc
out
or
push
cmp
cmp
mov
ret
imul
ja
push
ds
dec
dec
push
outsb
xchg
je
push
imul
jnp
push
dec
hlt
sub
movsb
sub
outsb
xor
mov
lods
repz
jnp
cmpl
das
sbb
jo
leave
jnp
inc
adc
sbb
mov
mov
loope
out
leave
mov
cmp
testl
push
pop
repz
xchg
dec
out
mov
push
mov
dec
iret
xchg
ficoms
xchg
jle
int3
push
jle
addl
test
hlt
sub
in
outsb
icebp
and
adc
mov
ljmp
xchg
sub
jb
or
lods
pop
dec
test
lea
stc
insb
cmpsl
jg
xor
inc
mov
dec
mov
push
dec
or
nop
mov
gs
adc
int3
push
notb
aam
jb
pop
cmp
out
mov
push
ret
mov
js
mov
xchg
ljmp
repnz
cmpl
add
sub
mov
enter
push
fcmovnbe
shl
or
cmp
push
pop
fcompl
dec
orl
call
sbb
xchg
outsl
or
pop
fistpll
dec
push
loop
arpl
iret
mov
push
or
lods
inc
cmp
and
cmp
repnz
fidivrs
loope
or
fstpl
adc
pushf
shll
movsb
testb
test
stc
sub
lds
cltd
sahf
push
es
insb
jmp
sbbb
push
xchg
test
mov
inc
adc
aam
xchg
es
mov
test
xchg
mov
or
into
sahf
push
pop
les
aaa
inc
loope
adc
adc
mov
cmpsl
inc
cmp
sbb
push
movb
or
or
scas
stos
and
loope
aad
dec
sbb
cs
gs
outsb
ror
push
jge
es
pop
test
aad
cmpb
movl
xchg
movsb
fwait
add
push
jge
pop
aam
mov
sub
cltd
xor
mov
psubb
out
mov
outsl
push
fwait
dec
sbb
mov
shll
movsl
adc
ja
sbb
fildll
adc
inc
jmp
or
mov
repz
inc
bswap
int3
inc
mov
pop
test
push
pop
push
push
les
test
or
pop
gs
out
mov
or
adc
pop
xchg
out
movsl
dec
sub
sbb
lods
cs
sbb
mov
outsl
pop
inc
fsubl
push
cs
movsb
xorl
or
lcall
in
in
cld
and
scas
jno
jmp
cli
add
movsl
jns
pop
or
inc
inc
cmp
std
push
pop
add
les
xlat
or
xchg
cwtl
jnp
gs
faddl
mov
jmp
jae
dec
cltd
inc
mov
mov
in
lods
and
push
cltd
nop
je
notl
jne
sub
jno
mov
pop
jne
cltd
push
mov
lods
loope
jge
xchg
xchg
sub
mov
js
pop
fistl
in
mov
fs
ja
pop
aaa
fstpt
adc
out
xor
dec
pop
jae
add
inc
cmc
pop
mov
pop
jbe
inc
lcall
cmp
xorb
pushf
fbld
leave
mov
sub
sti
int
mov
and
dec
fistpll
lret
xlat
in
add
mov
sbb
sub
iret
out
lret
lret
jae
push
xor
iret
mov
pop
xchg
fldenv
push
mov
int
adc
shll
cmp
pushf
mov
mov
push
aas
data16
outsl
xchg
or
mov
add
in
fisttpl
cmpsb
addr16
out
sbb
xchg
mov
scas
dec
cmpb
jae
lds
or
pop
cltd
cli
and
push
loop
movsl
add
in
xor
int
xor
in
shll
stc
lahf
push
mov
mov
pop
xchg
aas
pop
sahf
dec
push
and
pop
call
mov
imul
movsb
ljmp
fstps
xchg
hlt
or
xor
fwait
xor
add
or
mov
fcoml
cmp
test
aaa
pop
repnz
mov
repz
mov
fsubrp
mov
call
xor
inc
lahf
lods
out
test
dec
lock
movsl
mov
cmp
loopne
jge
daa
cmpsl
mov
pushf
inc
fstpl
inc
mov
inc
xchg
push
add
rcll
xchg
loop
push
dec
insb
mov
or
int
pop
lcall
shl
inc
mov
or
xor
or
aaa
orl
cmp
mov
int3
dec
push
hlt
cmp
and
mov
adc
adc
rcrl
dec
adc
jle
leave
ficompl
das
out
pop
fwait
rclb
xor
xor
sbb
mov
outsb
data16
stc
add
sub
in
les
shrl
loop
ret
or
jbe
imul
push
movb
mov
dec
add
jno
or
out
lcall
jmp
lret
and
das
shrb
fimull
into
cmp
int
inc
pop
fldcw
fsubrl
add
cmp
mov
push
bound
jl
pop
inc
das
mov
test
or
test
adc
lahf
inc
test
pop
ret
xor
or
push
inc
je
lock
dec
pop
ds
push
stos
xchg
mov
jge
stc
jle
shrb
xor
lock
xchg
pop
in
sub
push
inc
adc
pop
jge
test
jecxz
mov
bound
decl
scas
sbb
fcmove
xor
push
sbb
in
or
mov
push
test
sbb
sbb
pop
add
mov
push
mov
push
sbb
outsl
cmp
int3
inc
inc
in
test
or
inc
sbb
scas
mov
add
jne
add
push
and
push
test
jo
fdivrl
sbbl
push
jne
mov
insl
stos
aad
mov
add
cmp
pop
lods
add
repz
inc
sti
aas
leave
add
add
in
addr16
ljmp
or
sti
jne
jmp
cli
xchg
mov
insl
push
test
insl
data16
cmp
and
fildll
aam
popa
adc
mov
and
mov
repnz
xor
jbe
ret
push
pop
mov
pusha
outsl
aad
and
out
cs
loope
in
fs
negb
in
stos
out
call
xchg
test
movsl
stos
inc
push
fucomp
cwtl
inc
or
aam
test
insb
mov
mov
jle
xor
lret
xor
jle
xchg
and
and
stos
add
sbb
xor
loopne
out
fdivl
and
jae
cld
rol
dec
jne
and
lds
popf
cmpsb
adc
sbb
sbb
jecxz
xchg
and
jno
clc
fs
or
mov
sbb
push
incl
jbe
frstor
jmp
popf
sbb
aas
ret
xchg
addl
rorl
jge
icebp
sbb
cmpsb
dec
and
inc
arpl
pop
mov
lods
iret
jmp
es
mov
imul
adc
sbb
add
mov
inc
inc
lea
jg
xchg
dec
imul
leave
mov
pop
fs
aam
cmp
adc
out
inc
add
or
xchg
pop
push
rcrb
mov
fsubrl
out
cli
push
movb
imul
in
xchg
call
mov
scas
sbb
cmp
jae
inc
mov
dec
ret
jbe
push
stos
adc
push
imul
int3
sbb
cmc
sbb
lret
mov
or
mov
aas
xchg
cmp
cmp
cmpsl
lret
ds
les
sub
lds
pop
call
ucomiss
and
jle
jg
push
stos
in
cltd
mov
pop
dec
sub
add
and
lods
fwait
inc
add
mov
mov
inc
sbb
or
fwait
in
xor
dec
add
fs
jp
repz
jmp
add
inc
std
jecxz
xorl
outsb
int
xchg
and
push
sbb
cmp
add
aad
push
mov
scas
rorb
pop
inc
xchg
inc
fcmovu
xchg
es
jecxz
mov
sarb
gs
push
cmpsb
xchg
daa
and
inc
adc
sub
xchg
push
mov
push
sub
popf
shll
cmpl
push
idiv
jno
pop
pop
clc
xorb
inc
adc
lcall
pop
mov
mov
adc
ja
pop
stos
insb
jno
sbb
andl
nop
push
inc
out
fidivrl
test
ret
mov
mov
rcrl
jg
enter
popf
fcompl
in
adc
cmp
xchg
fsubrs
pop
pop
cmp
js
int
leave
jo
sbb
fidivs
push
push
scas
loopne
movsl
call
fidivrl
js
rclb
dec
xorl
push
fucom
subb
dec
das
ljmp
aam
cmp
mov
inc
mov
cmpsl
mov
ret
jecxz
adc
in
pop
inc
pop
fsubl
adc
add
nop
cmpsb
lret
pushl
push
xor
movsb
mov
xchg
push
sub
pop
cmp
incb
int
mov
xor
xlat
lock
sahf
sub
sbbl
jg
or
aad
jne
enter
mov
dec
ja
andb
push
jbe
push
or
shlb
rcl
in
jg,pn
and
fs
mov
sbb
imul
mov
icebp
mov
push
add
mov
mov
pop
push
mov
popf
loopne
dec
xchg
or
pop
es
adc
nop
mov
jb
mov
imul
mov
xchg
stc
cmp
nop
test
dec
lods
stos
mov
pusha
sbb
sub
mov
add
xor
dec
cmp
int3
adc
xor
out
dec
cltd
xorb
push
push
push
jo
in
ds
cltd
or
lea
popa
mov
fists
push
cmp
and
in
aaa
addl
inc
mov
lock
cmp
mov
or
add
or
addr16
mov
icebp
sub
idiv
push
add
adc
jno
cmpl
inc
or
ret
movsb
or
daa
fwait
sbb
inc
pop
shl
daa
inc
loopne
andb
call
stc
repnz
cmp
subb
xor
ds
mov
shlb
fsubs
dec
pop
mov
subb
push
cmpsb
sbb
cmpsl
out
pop
loopne
cmc
mov
shl
sbb
add
popf
and
shlb
push
xchg
dec
not
jns
add
jp
cmp
xchg
fwait
pushf
js
incb
mov
xchg
mov
cmc
xchg
repnz
scas
andb
xor
mov
out
and
ret
test
dec
out
enter
out
and
mov
mov
ss
sti
call
or
or
mov
cmp
lcall
mov
jb
push
dec
mov
jbe
sub
inc
subl
nop
imul
js
push
mov
or
or
fs
inc
hlt
cmc
push
mov
aad
xor
adc
mov
xlat
push
dec
mov
scas
and
test
push
push
and
mov
mov
pop
sub
mov
roll
mov
std
in
xchg
mov
add
jns
sub
pop
test
iret
aas
aam
mov
cltd
ds
sti
and
mov
adc
ret
pop
push
jns
or
sub
mov
add
test
push
inc
popf
cmp
mov
out
ret
dec
xor
sub
dec
jge
cmp
cmc
out
ret
add
mov
dec
inc
ficoms
adc
sbb
inc
inc
jg
mov
mov
out
mov
je
call
cmp
xor
and
imul
inc
rorl
push
jl
test
sub
inc
lods
inc
das
std
pop
rolb
pop
or
or
sbb
mov
hlt
pop
test
add
cmp
inc
clc
mov
pop
test
mov
and
lock
push
sbb
in
in
sti
inc
fisubrl
adc
cmp
jl
pop
lods
outsl
mov
xchg
jl
stc
cmp
jecxz
add
push
mov
jb
fsqrt
jns
cmp
pop
sar
gs
mov
insb
dec
jge
xlat
add
adc
cmp
jp
dec
add
mov
and
lods
push
mov
out
xor
and
call
inc
pop
cmp
xor
mov
subb
shr
pop
or
cmp
mov
push
or
jo
fwait
mov
test
cmp
push
imul
addr16
popa
cmp
lret
rclb
push
movsl
sub
ret
jmp
imul
imul
shlb
addr16
sbb
lods
fcmovu
loopne
nop
mov
cmpsb
ret
inc
lock
xor
lds
mov
and
sbb
les
cmp
mov
fdivs
mov
pop
jnp
xor
and
outsl
ror
insb
imul
cmc
jp
pop
clc
clc
enter
aam
aad
sub
pop
cmp
rclb
aam
mov
mov
adc
in
movsl
add
mov
sbb
mov
arpl
inc
cs
in
jno
fxch
mov
dec
std
outsl
loope
loopne
outsl
popf
jl
adcl
loop
push
je
sbb
enter
cmp
fneni(8087
cmp
stos
inc
mov
mov
inc
xlat
arpl
dec
mov
sbb
xchg
aam
pushf
or
lcall
aaa
mov
negb
fbld
std
adc
enter
jne
stos
lods
mov
push
inc
inc
xor
test
ret
xor
mov
lret
pushf
add
nop
data16
jge
lock
je
lret
daa
cwtl
mov
mov
aad
mov
mov
daa
ljmp
flds
dec
xor
fwait
mov
mov
loopne
mov
jg
outsb
cwtl
inc
xchg
test
fmul
sbb
sub
xchg
pusha
xor
jmp
cmp
mov
cli
mov
jo
lea
add
sbb
mov
lock
imul
test
shlb
adc
mov
aam
cmp
adc
or
pop
inc
mov
and
and
xor
out
sbb
pop
sahf
sarl
jae
mov
nop
insl
pushf
icebp
icebp
xchg
push
ret
mov
test
push
xchg
pop
inc
fld
xor
jne
js
hlt
in
fsubs
imul
stc
jle
repnz
adc
fisttpl
out
mov
jne
cmc
movsl
inc
popa
adc
dec
xchg
xchg
scas
xchg
jmp
xchg
pusha
or
or
adc
les
lods
or
mov
in
test
cli
mov
and
jmp
dec
sub
je
sub
incb
adc
mov
push
sbb
daa
clc
ss
icebp
je
jl
and
subb
inc
hlt
or
mov
pop
imull
sbb
adc
jmp
cmc
fistpll
cld
int
cmp
insl
sar
cmp
pop
inc
dec
ja
cmp
popf
mov
dec
scas
push
fstl
idivb
arpl
cmpb
lds
lea
jns
push
jb
fdivrs
call
stos
test
xchg
sub
std
mov
std
mov
jbe
add
push
cmpsb
jo
shll
xor
es
into
sbb
sahf
rolb
xor
or
push
add
mov
adc
mov
insb
fwait
loopne
sub
xchg
push
jne
push
movsb
mov
push
fmull
fdivs
cmp
cmp
fistpll
jnp
out
mov
mov
shll
pusha
ja
push
jno
aam
data16
lods
push
icebp
hlt
dec
divl
mov
pop
lretw
jg
add
cmpsl
psubq
xor
sub
cmp
or
xor
add
icebp
bsf
das
clc
jae
mov
or
fstp
sub
mov
cmp
insl
loopne
sub
insb
push
mov
call
shll
popf
dec
jp
scas
sbb
sahf
in
iret
outsb
mov
xor
clc
rcrl
sbb
mov
sub
iret
ret
repnz
lds
sti
or
and
out
mov
cmp
add
cmp
or
and
xor
jns
pop
js
repz
mov
lds
adc
mov
pushl
rclb
xor
test
cmpsb
jg
out
fcoml
movsb
or
data16
int
push
lret
jae
mov
push
mov
dec
lahf
xlat
subb
add
xchg
dec
movsb
ret
mov
or
test
mov
jno
lret
leave
cld
or
mov
sbb
int
or
call
mov
push
jno
xchg
and
fcomip
push
leave
mov
xor
pop
or
cltd
jae
gs
or
pop
sub
std
pop
fcoml
in
xor
xchg
and
in
xorb
xchg
or
movsb
dec
or
inc
int
daa
or
dec
lahf
stos
mov
inc
shrl
xchg
js
pop
jecxz,pn
cmpsl
sbb
cmp
pop
and
shrb
jle
out
pop
push
hlt
hlt
out
inc
and
js
mov
sbb
into
ljmp
fisttps
add
adc
repnz
into
outsl
cli
xchg
cmp
loop
xchg
ret
and
sub
mov
inc
jne
loopne
xchg
push
lcall
sbb
adc
pop
adc
ret
pop
xchg
xor
xlat
jecxz
inc
push
mov
dec
outsb
cmp
dec
mov
add
mov
es
adc
sbb
out
dec
out
popa
movsl
cmp
sub
mov
inc
push
mov
ss
jl
enter
and
adc
out
push
pop
add
aas
lods
sub
fisubl
inc
xchg
jb
pop
and
sti
and
push
mov
cmp
loop
pushf
push
loopne
mov
jge
sbb
inc
sahf
ret
push
inc
int
cmp
outsl
into
dec
xchg
jecxz
cltd
jo
xor
mov
pop
aaa
insl
jle
jbe
push
fcompl
inc
lea
fsubrs
scas
mov
fnstcw
jb
dec
cmc
in
xor
int3
xor
ljmp
push
subb
mov
or
cmp
xchg
add
stos
pop
mov
pop
mov
std
stos
outsb
xor
sarb
or
cmpb
lret
test
sub
dec
addb
clc
int3
dec
iret
inc
cmp
and
fcoml
arpl
xor
push
fimuls
stc
or
gs
insb
sbb
stos
fs
mov
mov
add
in
aaa
int
add
aas
mull
sbb
mov
add
je
rorb
pop
mov
cwtl
dec
ret
push
or
pop
jge
adc
jl
pop
pop
and
outsb
dec
mov
out
out
stos
push
sub
jbe
lods
mov
add
inc
jg
sarl
sarl
xchg
fwait
jp
or
in
cmpsl
push
sbb
and
or
adc
fstl
jge
xchg
idiv
jmp
es
push
in
pop
jae
mov
jle
aad
lods
adc
cmp
std
repz
mov
and
or
xchg
mov
or
imul
dec
cmp
mov
sub
mov
push
or
jg
incl
adc
and
add
dec
sti
enter
mov
jb
movsb
or
aaa
cmp
inc
cmp
fisttps
cwtl
mov
xchg
xor
mov
or
ljmp
cmp
scas
dec
dec
and
inc
xchg
or
enter
or
testb
iret
mov
frstor
bound
cmp
leave
jbe
mov
push
fimull
pop
xchg
or
mov
jno
int3
addl
test
hlt
test
mov
out
mov
and
add
ret
cmpsl
and
insb
std
sbb
mov
inc
int3
call
cld
std
mov
filds
jp
cmc
test
xor
pop
scas
fsub
lock
adc
pop
xor
mov
lret
cs
stos
jmp
cltd
push
dec
fdivrs
sbb
dec
mov
and
add
and
mov
xchg
js
jecxz
push
imul
pop
fstpt
add
mov
test
lock
call
rcrl
or
xchg
and
adc
fs
mov
je
pop
cmp
aas
xchg
fadds
xlat
je
fwait
pop
sbb
xchg
mov
inc
popf
cmc
cld
jge
jecxz
and
jnp
adcl
xchg
cli
mov
js
ja
mov
inc
iret
cld
cmpsl
ja
jo
mov
mov
jb
cmp
add
testl
cld
or
xchg
mov
jmp
mov
movsl
add
rcr
xlat
roll
pop
mov
leave
std
mov
leave
je
pop
rorb
idivb
cld
mov
mov
lock
fwait
xchg
xchg
out
xor
test
pop
fldenv
stos
push
xchg
sub
push
fsubr
and
rcrl
test
push
lcall
nop
mov
orl
in
pop
dec
jbe
fdivs
mov
addr16
scas
scas
daa
clc
sti
inc
inc
inc
xchg
mov
sbb
jmp
imul
incl
cmp
loope
outsl
int
mov
or
xlat
stos
cmp
mov
das
hlt
sub
subps
sbb
fisttpl
push
adc
fisttpll
add
repz
out
xor
jl
dec
movsl
stos
loop
mov
shrb
sub
xor
insb
mov
and
adc
and
fstp
pop
shll
add
mov
into
sbb
push
nop
sub
jge
add
jno
int
shrb
fmull
sbb
sarl
jne
cli
stos
inc
iret
lds
fwait
test
mov
pop
lods
imul
scas
lock
mov
mov
stos
pop
jge
xchg
fildl
jo
pop
push
xchg
mull
sbb
lock
es
faddl
mov
aaa
outsb
or
shr
inc
sub
push
loopne
add
jmp
dec
push
int3
addr16
or
jg
push
xchg
daa
rorb
ljmp
push
mov
es
pop
cmpb
sbb
add
je
or
sbb
xlat
enter
fldenv
push
test
fldl
adc
mov
aaa
xchg
xchg
clc
aam
rcrb
mov
sub
mov
mov
dec
xchg
inc
add
pushf
nop
and
or
jp
add
sbb
add
cwtl
cwtl
dec
or
out
popa
pop
daa
sbb
cli
arpl
std
sbb
and
push
xchg
jns
sub
in
adc
lods
jae
cmp
fcmovb
add
es
sub
add
cmp
and
arpl
push
rcl
pusha
sbb
xor
mov
outsb
adc
test
call
pop
xor
cli
fistpl
inc
inc
add
sbb
ds
data16
sbb
jne
stos
xchg
mov
inc
shlb
pushf
push
jne
loop
jae
sub
pop
mov
repnz
lret
fwait
repnz
add
xor
or
or
push
rorb
xchg
cmp
loope
dec
add
push
jne
pop
cmp
mov
mov
js
sub
inc
inc
add
pop
fisubrs
sub
mov
test
shr
in
movsb
shll
xor
mov
aam
cli
inc
mov
int
pusha
push
cmpsl
mov
lcall
mov
das
sbb
and
cmpsl
adc
xchg
pusha
popf
adc
rclb
mov
pop
adc
pop
jge
fidivrl
aad
in
lods
ss
add
outsb
ret
and
xlat
cmp
sub
push
or
push
and
imul
pop
inc
jo
lahf
dec
imul
cmpsb
jl
fcomi
fcmovb
insl
insb
jge
movsb
pop
dec
aas
mov
add
sub
pushf
mov
mov
or
mov
or
pop
enter
movsl
lods
cmpb
or
or
imull
mov
sub
lods
das
sbb
les
sbb
jnp
pushf
and
cltd
xor
jecxz
sub
clc
jmp
in
inc
xchg
pop
insw
jb
frndint
sbb
out
dec
lea
std
sbbb
sbb
sarl
test
mov
cmpsl
pushf
xchg
lea
cmp
in
add
or
sti
cmc
cmc
mov
int
stos
out
out
lret
dec
clc
mov
or
cmp
push
xor
pushl
pop
and
aad
push
or
add
fisttpl
lahf
ds
mov
xor
decb
ret
inc
popa
popf
xchg
inc
clc
rcrl
add
lret
hlt
xchg
pop
iret
sbb
add
sub
mov
xor
add
and
inc
xchg
test
sarb
negb
cmpsl
test
sti
addl
stos
add
xor
cmpsl
inc
scas
pop
pop
mov
jecxz
into
fdivl
mov
loop
inc
jecxz
mov
jbe
lods
fmul
pop
loope
sub
xor
jbe
sub
pop
push
loop
cmp
mov
popa
xor
in
jno
dec
lods
into
cltd
cs
imul
icebp
mull
es
or
jb
cltd
add
movd
mov
push
das
dec
movsb
sub
xor
mov
jp
stc
or
icebp
lods
les
lcall
fs
sbb
int
jae
ljmp
js
popa
xor
xor
pop
scas
xchg
or
imul
jecxz
bound
rorl
ss
fidivrl
xchg
insb
sbb
dec
xor
xor
pusha
ret
cmp
aaa
inc
insl
insl
inc
insb
xchg
gs
imul
out
add
testb
pop
arpl
dec
jmp
icebp
imul
xchg
xchg
mov
jo
add
jecxz
adc
clc
cltd
push
das
mov
pusha
cmp
fadds
les
test
jmp
sahf
mov
js
cmp
sub
cld
lret
pop
mov
aam
fsubl
and
sti
pop
mov
fwait
push
data16
adc
lret
ljmp
aas
adc
sub
inc
and
mov
nop
sbb
loopne
push
gs
sub
fbld
stos
jae
mov
add
sub
push
xchg
mov
cmpsl
in
jg
mov
pop
mov
ret
jbe
adc
xor
xlat
loopne
adc
out
call
adc
testb
sub
aaa
ja
loopne
call
jp
adc
mov
mov
js
adc
lods
add
mov
push
xchg
int3
pop
mov
xorl
or
icebp
pop
insl
loopne
push
daa
xor
aas
daa
mov
xchg
dec
and
mov
fcomps
sub
repnz
cmpsb
insl
out
xchg
mov
popa
in
add
mov
aam
in
scas
inc
cmpsl
scas
mov
jp
xor
repz
dec
jl
add
loopne
mov
pop
push
int3
rep
cmp
or
sbb
fmuls
test
mov
movsl
push
push
add
adc
js
negb
nop
fs
sbb
or
push
jecxz
gs
ja
mov
daa
sub
repnz
sbb
inc
jbe
pop
pushf
int3
xchg
pushf
xor
das
pop
adc
movl
mov
shrl
adc
xchg
push
dec
jecxz
mov
pop
lods
std
repnz
sub
dec
or
ret
ja
jae
mov
jbe
fs
mov
push
sub
jae
pop
jg
xchg
xor
stos
hlt
xchg
push
jg
gs
cwtl
enter
ffree
sub
es
pop
repnz
pop
sub
sub
mov
rcrb
loopne
lock
xor
pop
mov
pop
call
dec
sbb
movl
sti
test
fsubs
pop
and
pushf
pop
add
repnz
mov
repz
fprem
fisttps
add
bound
jae
adc
stos
cmp
cmp
ds
lea
mov
out
and
add
sub
adc
divl
lds
inc
shl
lahf
add
and
fsts
out
bound
cmp
adc
stos
out
or
xchg
xchg
aaa
push
test
fs
movsb
lods
mov
push
sahf
movsb
popa
inc
sbb
cmp
pop
out
ja
push
cmp
flds
lret
icebp
pop
mov
subl
cld
test
movsl
dec
ret
and
cmp
je
fadds
daa
imul
aas
push
xor
mov
cmp
jbe
xchg
mov
sti
pop
xor
inc
xor
mov
mov
sbb
mov
mov
sar
shlb
and
test
shlb
xchg
pop
mov
jge
stc
xor
pop
adc
push
bound
out
push
mov
xor
aas
jb
jb
addr16
pop
movsl
xor
adc
jp
cwtl
fdivl
fwait
fs
fadd
add
cmpsl
push
sub
test
cmp
inc
push
sahf
cwtl
jle
dec
push
dec
fiadds
and
popa
fcomp
add
fistpll
fsubs
mov
hlt
add
ljmp
jl
out
pop
js
mov
mov
loope
cmp
call
js
adc
lock
push
add
repnz
inc
pop
add
dec
insl
mov
imul
les
pop
dec
mov
hlt
sbb
sub
mov
fidivl
aaa
fidivrs
mov
in
pop
or
roll
rorb
in
dec
out
fsubl
cmp
and
lds
mov
sbb
cltd
push
mov
or
or
mov
xor
adc
aaa
push
jp
jno
cmpsb
pop
sub
jge
das
push
push
jbe
pop
bound
xchg
cmp
mov
loope
test
pop
jnp
fbld
inc
lea
pushf
inc
add
das
or
hlt
sub
xor
dec
cmp
adc
dec
cmpb
cwtl
and
out
xchg
in
shr
lea
loope
imul
sbb
rclb
popa
enter
add
add
inc
div
ss
and
les
or
jno
test
fs
filds
sbb
pop
mov
loopne
push
popf
adc
push
jo
ds
pushf
sbb
xor
mov
or
mov
xchg
adc
ja
push
push
aaa
or
and
loop
test
sub
cmp
pusha
mov
or
cmpl
ficoml
xor
push
pmulhuw
stos
test
mov
inc
mov
adc
inc
jmp
cli
mov
addl
adc
push
mov
lea
jnp
mov
test
mov
push
jg
jae
add
mov
xor
xor
sub
in
lods
push
push
scas
imul
xlat
cmp
mov
jle
xor
fstpt
mov
and
jge
mov
mov
mov
sub
and
sub
stos
ror
fistpl
dec
aad
push
fistpll
movsl
jae
push
pop
iret
mov
repnz
mov
jg
jl
lahf
push
sub
add
xor
and
cld
mov
mov
mov
fdivrs
add
or
dec
call
rcrl
fs
xchg
jae
mov
loope
jbe
js
inc
jecxz
popa
or
and
xor
aad
push
cmp
jne
jae
loope
and
dec
fcmovnu
icebp
jne
stos
icebp
lds
pop
popf
inc
sub
mov
lahf
mov
pop
add
mov
fwait
das
fsubrl
cmp
xchg
les
pop
adc
inc
adc
test
jo
lret
sti
mov
rcrl
xor
lock
mov
jp
jle
rolb
pop
pop
cli
sahf
xchg
dec
xlat
leave
sbb
inc
lods
pushf
pop
in
sbbb
fcoml
inc
gs
mov
pop
pushf
mov
pusha
jne
xor
jg
jg
or
sbb
sbb
jge
in
lock
xchg
jmp
sti
or
adc
sub
mov
sbb
xor
sti
lahf
or
push
lret
sub
pop
mov
push
and
andb
scas
movsl
xor
add
adc
mov
insb
pop
iret
xchg
sbb
mov
xchg
sbb
lods
pop
shl
and
dec
ljmp
ret
rorl
cmc
in
hlt
mov
add
jmp
mov
jg
mov
clc
xchg
inc
das
sub
ds
cmp
or
rolb
loopne
add
imul
xor
bswap
mov
fsts
pop
lea
xor
add
fists
mov
cmc
add
lret
dec
add
mov
cltd
mov
nop
sarb
aad
dec
mov
mov
cs
xchg
ljmp
or
test
fnstsw
imul
jnp
adc
xor
or
das
ret
cmc
fmuls
movsl
into
jle
sbb
xor
jno
icebp
test
xchg
negb
cmp
jnp
mov
les
cmpsb
lods
cmp
pop
icebp
aam
test
cld
int3
dec
xor
jo
sti
fs
jnp
repz
adc
sbb
sbb
pop
mov
lea
nop
mov
stc
cmpsl
insl
mov
xlat
es
cltd
rcl
idivb
sti
cmp
inc
xor
dec
je
popl
fisttpll
pop
inc
add
shrb
jmp
push
sbb
push
into
cmp
push
in
clc
movsl
addr16
cli
xor
lret
lcall
dec
pop
pop
jg
into
cmpsb
push
clc
lds
mov
pop
dec
sub
stos
outsl
jge
mov
js
int3
adc
sbb
jmp
push
sbb
or
push
mov
cmpsb
push
add
pop
xchg
movsb
push
pusha
gs
jno
and
lret
pop
mov
mov
dec
mov
jno
and
sbb
imul
hlt
and
out
int3
adc
and
dec
popf
jmp
addb
jnp
mov
add
lahf
sub
add
mov
pop
lret
mov
cmp
in
cmp
popa
cmc
test
jl
and
sbb
sbb
add
stc
data16
push
jecxz
xor
xchg
mulb
jnp
daa
xor
mov
and
outsb
push
icebp
repnz
or
lahf
and
sbb
test
rcrb
test
xor
lret
cmp
fadds
loope
jb
pusha
and
ss
aas
stc
xor
push
les
outsb
xchg
mov
scas
push
or
cmp
in
push
and
lea
or
jo
stos
insb
testb
adc
cmp
icebp
addr16
mov
inc
outsb
fsubrl
jae
mov
mov
or
mov
call
cld
scas
push
mov
daa
aas
sarl
mov
out
repnz
rolb
scas
stos
out
mov
int3
inc
and
cmp
and
imul
movsb
aad
out
cmp
inc
test
call
mov
push
mov
cmp
fwait
hlt
and
mov
in
pop
mov
mov
push
out
ljmp
fsubrs
js
lds
dec
mov
or
mov
inc
adc
lea
sub
pop
shrb
cwtl
sub
mov
ficoml
or
inc
test
push
cmpsl
ret
mov
jl
dec
icebp
pop
push
out
pop
out
lock
adc
rolb
sub
clc
test
dec
leave
sahf
leave
mov
ljmp
out
push
jo
out
rorb
xor
add
popf
jp
or
ficoml
test
add
xchg
xor
sbb
xchg
out
in
or
addr16
and
sub
popf
lcall
cmp
hlt
sub
push
mov
adc
push
dec
fwait
jo,pt
pop
lods
mov
fisubrl
ret
int3
xor
adc
icebp
cwtl
and
mov
ja
stc
scas
shl
mov
sbb
test
push
dec
push
ss
pop
mov
iret
insl
lock
inc
sub
clc
pop
adc
xchg
xlat
mov
dec
cmp
push
xor
sti
loopne
cmp
xorb
mov
mov
lret
add
outsl
xor
out
mov
mov
popa
ret
mov
or
add
push
test
sbb
pop
sub
mov
sub
push
outsb
les
dec
das
and
or
pushf
jl
xchg
in
lret
push
cltd
lods
xlat
mov
or
push
imul
fcompl
cmpl
loop
cmp
adc
popa
ja
adc
mov
test
jne
nop
add
or
jne
dec
int3
sbb
mov
or
stc
mov
xor
jmp
or
push
dec
xchg
push
push
std
aad
mov
pop
sub
subb
out
stc
dec
outsl
mov
inc
cmp
mov
int3
ds
inc
xchg
dec
add
push
cmc
sbb
mov
test
ja
mov
dec
add
ret
cmc
cli
jmp
xchg
adc
mov
out
xchg
sub
dec
ret
xchg
ja
mov
ds
outsb
sbb
sub
jecxz
xor
cmpsl
into
aas
jne
pushf
push
adc
enter
jno
icebp
push
icebp
push
jle
xor
jp
sbb
pushf
test
ret
dec
jb
iret
mov
in
adc
mov
movsl
shlb
data16
loopne
mov
or
xor
mov
das
dec
popa
jecxz
dec
ds
xor
sub
jae,pn
and
fdivr
inc
jno
adcl
shlb
cli
lret
xchg
ss
insl
cld
push
movsl
sahf
jp
lds
push
sbb
sub
fstl
push
in
int
xor
pop
dec
fistl
mov
pop
fadd
cld
aam
mov
ret
xchg
or
ds
sub
nop
add
mov
mov
ret
das
or
dec
test
insb
jae
mov
sub
rorb
repz
pop
lret
cmpb
icebp
cs
pusha
jne
push
xor
stos
inc
popf
and
mov
add
add
cwtl
rorl
xor
ljmp
mov
inc
hlt
movb
mov
addb
push
sub
cmc
xor
fidivl
outsl
popf
lods
movsw
insl
or
incb
lds
push
nop
lret
xor
xchg
loop
jg
dec
movl
loope
daa
pop
in
adc
jbe
fs
push
or
call
mov
cmp
cmc
cmc
test
xlat
lahf
xorb
push
jnp
cmp
jno
inc
mov
push
sbb
adc
sub
popa
std
scas
inc
movsbl
popa
jb
lcall
rcrl
cltd
std
adc
mov
inc
or
fldl
mov
subl
lods
mov
mov
inc
ljmp
scas
fstps
outsl
rolb
out
test
jo
adc
std
xchg
in
xchg
push
xchg
outsl
mov
adc
jbe
jge
jno
outsb
dec
je
lods
xor
sbb
mov
sub
mov
cld
xchg
xrelease
fisttpll
loop
into
cmp
mov
adc
sahf
inc
ja
sti
cmp
push
in
testl
incb
cmp
mov
cmp
out
jg
pop
loop
pop
hlt
pop
add
shlb
aaa
push
ret
ret
jecxz
inc
push
inc
jl
lcall
std
es
cmc
frstor
or
cmpsb
jae
stos
cli
xchg
sub
and
mov
pop
sub
scas
insb
lods
inc
push
imul
mov
mov
shlb
mov
sub
aaa
out
popa
add
out
pop
out
and
frstor
or
jg
push
mov
cmc
ljmp
push
add
ljmp
jmp
add
int
cmp
xchg
sbb
mov
movl
jp
inc
movb
gs
test
jp
sbb
jl
int3
int3
decl
pop
add
mov
rcrl
shrl
cli
sbb
lea
ds
test
or
add
inc
fildl
fs
lret
mov
jb
mov
xchg
xor
adc
or
loope
or
mov
xchg
mov
xchg
lcall
bound
outsb
negb
inc
mov
in
shrb
inc
rorb
dec
imul
enter
pushf
out
xor
clc
daa
xchg
sub
xchg
das
jp
fildl
popf
mov
jl
dec
mov
mov
movsb
pop
push
inc
cmp
cmpsl
cld
cmp
dec
testl
sahf
in
pop
sub
popf
cli
not
and
push
mov
scas
sub
pushf
cmp
or
outsl
lret
pop
dec
mov
sbb
push
nop
loope
cmp
adc
and
push
adc
inc
outsb
insb
or
subb
popf
pushf
in
daa
xchg
push
test
pusha
aad
sbb
jno
add
xor
pop
xchg
roll
or
ja
sbb
xchg
mov
jae
pop
mov
mov
adc
mov
orb
stos
and
inc
leave
lds
fwait
jmp
add
pop
or
pop
stos
stc
leave
mov
mov
pop
or
xchg
xor
test
mov
popa
mov
add
shr
sub
push
mov
movsl
andb
insb
sbb
sub
cmp
mov
loope
add
mov
sarw
ljmp
pop
mov
push
pop
cwtl
xchg
sbb
mov
jne
in
push
pop
sarb
movsl
cmc
sbb
mov
inc
fcmovnb
mov
push
or
es
rcll
js
adc
sub
or
imul
and
or
or
xor
sbb
fisttpll
push
push
jg
or
mov
or
add
aam
loopne
mov
enter
mov
mov
ds
pop
dec
and
sbb
leave
jge
add
add
bound
jecxz
pop
scas
mov
cltd
mov
shll
push
rolb
xor
inc
push
xchg
popa
out
insl
hlt
mov
imul
push
je
push
movb
jg
xchg
mov
inc
xor
dec
notb
dec
inc
pop
dec
xor
mov
pop
mov
xchg
pop
jmp
aas
in
xor
mov
cmp
and
or
pop
cmc
sub
fsubrs
clc
popf
test
cmc
mov
xor
jp
sbb
idivb
rorl
aam
in
jo
sub
rorl
sarb
dec
sahf
cmp
jns
data16
mov
xchg
mov
xchg
push
jbe
push
sub
cld
sub
clc
cmp
sti
clc
jmp
test
out
jne
rep
sub
cli
lcall
and
sub
mov
fidivrl
ljmp
lahf
lods
daa
push
cmp
inc
addr16
mov
mov
sub
popa
pop
add
pop
mov
or
mov
iret
movsl
clc
mov
nop
mov
add
rorl
sbb
mov
xchg
adc
mov
in
es
pop
jae
shl
and
lods
push
pop
cltd
mov
fldenv
cs
dec
nop
inc
jecxz
lods
fbstp
mov
cmp
in
ficoml
dec
xchg
lret
out
notb
mov
jecxz
sub
adc
add
or
adc
add
mov
pop
outsb
mov
ds
and
push
push
mov
repnz
jmp
pop
fidivrl
scas
out
int3
imul
cmp
jno
movsb
leave
xor
pushf
aad
aas
dec
lods
mov
mov
push
jb
pop
push
inc
xchg
xchg
aaa
ljmp
cmp
xor
sub
ret
or
cmp
dec
int
mov
clc
sbb
dec
movl
pop
gs
mov
aas
jge
pop
dec
cs
shlb
rolb
fnstenv
or
push
gs
adc
loop
mov
scas
mov
scas
pop
xchg
movsl
sub
cmc
sti
ljmp
inc
adc
filds
dec
adc
dec
xchg
xchg
sub
cld
add
fs
dec
push
push
stc
mov
or
xchg
mov
inc
rorl
add
lcall
inc
jecxz
rclb
push
pop
pop
rcr
mov
std
push
pop
and
jo
xchg
and
in
push
or
push
xor
clc
movd
and
lahf
ss
pop
cwtl
nop
mov
cmp
rcrb
push
dec
xor
pop
ja
sub
pop
mov
mov
dec
jle
jg
sahf
das
push
mov
jmp
sti
inc
add
sbb
sbb
movsb
pop
repnz
aas
dec
and
push
sbb
jbe
jecxz
fwait
cmp
in
leave
sub
pop
add
shlb
out
mov
pop
enter
xchg
mull
into
sti
pop
out
sbb
icebp
dec
dec
loop
test
add
lret
jp
fisubs
loop
out
outsl
pusha
fsts
test
insb
mov
push
dec
or
std
fwait
adc
pcmpgtd
sub
xchg
arpl
sub
cmpsl
and
mov
adc
inc
mov
add
lea
sbb
dec
dec
test
call
lds
mov
out
sub
mov
xor
add
push
inc
and
jae
cli
cmpsb
sbb
or
push
and
outsb
add
loop
daa
sahf
lds
jnp
leave
jecxz
sbb
cltd
jle
lods
jmp
fwait
mov
and
add
and
jae
stos
inc
jl
push
lods
stos
and
stos
test
add
add
call
iret
leave
adc
mov
dec
jecxz
add
int
jmp
mov
test
sub
sub
and
jmp
cld
mov
add
or
insl
jnp
out
cs
mov
into
cmp
xor
negb
dec
or
xor
or
sbb
jmp
psrlq
addl
xlat
inc
inc
pop
ja
loop
pop
or
dec
ss
in
xchg
jg
push
mov
fisubrs
negl
mov
lret
jbe
xor
dec
into
loop
cmp
sahf
nop
sti
cs
pop
das
mov
neg
xchg
push
add
jge
mov
adcb
movsl
repnz
dec
out
cmp
bound
nop
and
movsb
mov
test
std
divb
push
adc
cmp
or
test
mov
jnp
cs
lock
std
mov
or
test
pop
sbb
fidivrl
xor
sub
stc
sub
sub
stos
outsb
es
dec
mov
icebp
call
jb
mov
fisubl
insl
pop
ss
js
dec
push
inc
xor
pop
lods
iret
out
jl
and
push
xchg
push
sbbl
int3
out
dec
out
ror
ja
lahf
in
test
rcrl
outsl
and
or
sbb
dec
jle
mov
push
pop
dec
or
jl
cld
aad
dec
lret
loopne
dec
push
out
rcrl
jp
or
fwait
sbb
ja
loope
daa
das
jmp
xchg
pusha
cmp
popf
aad
mov
push
adc
mov
data16
push
or
add
pop
je
adc
or
ds
int3
scas
push
hlt
push
mov
inc
clc
xchg
in
dec
pop
pushf
pop
add
js
sub
or
adc
mov
sub
and
fimuls
pop
in
cmp
fs
inc
out
jmp
dec
pop
mov
add
mov
cmp
sub
add
ss
push
pop
xchg
xchg
pop
xchg
outsb
jbe
repnz
cmp
cltd
insb
cld
sahf
loope
imul
push
in
cs
dec
ljmp
aaa
movsl
mov
adc
fldcw
or
jo
stc
loopne
mov
lret
outsl
sti
cmpsl
nop
mov
cmc
add
xor
adc
shl
es
jnp
lret
int
inc
and
out
ss
mov
add
jo
rclb
pop
js
adc
insb
or
in
lahf
sub
jmp
rcrl
loop
ss
loope
sarl
mov
cmp
push
stos
fsubr
das
or
cmp
inc
mov
inc
inc
cmp
mov
jne
nop
in
in
lock
and
faddl
jne
out
mov
fwait
cmpsl
mov
and
outsl
sbb
ret
js
aad
sarl
or
xor
mov
cmp
dec
sahf
sub
jno
in
into
int
cmp
adc
inc
adc
fisubrs
stos
mov
mov
xchg
aaa
sbb
lods
lret
dec
stos
jmp
add
stos
pop
mov
in
and
insb
ss
push
sti
test
pop
fcomi
mov
jno
jp
push
jmp
adc
jecxz
enter
push
lcall
mov
sbb
adc
push
sti
adcl
sub
sub
cltd
movsb
pop
ljmp
ret
mov
in
mov
lret
push
out
xchg
inc
mov
push
lds
ds
jg
in
pop
push
jbe
loope
inc
or
lock
push
std
or
cwtl
mov
cmp
lods
iret
aas
dec
rorl
outsb
xchg
not
mov
jae
sbb
repz
add
adc
add
push
add
lahf
out
ret
fistl
push
push
push
mov
jae
sarl
addr16
pop
sub
sarb
inc
arpl
jnp
cmc
adc
xchg
mov
aam
out
mov
in
jl
jae
rol
xchg
lcall
dec
jo
push
mov
mov
cmp
pushf
sub
dec
mov
sub
fwait
negb
sub
pop
and
adc
sub
insl
fsubs
sub
dec
jno
cwtl
xchg
jnp
add
inc
fists
das
xorb
xchg
out
ret
pusha
scas
add
or
fstps
or
es
or
xlat
dec
jo
jo
hlt
scas
adc
or
iret
repz
test
imul
cmp
add
out
push
shll
cmpsl
lods
cmp
movsb
outsb
push
out
test
sub
mov
imul
movsb
loope
mov
popf
lcall
sub
sbb
jo
xor
sbb
push
xchg
add
aad
cld
mov
in
ja
mov
jmp
xlat
xchg
inc
add
cmp
ss
in
pop
and
cmp
pop
out
xchg
add
insl
mov
adcb
mov
xor
out
mov
adc
pop
in
jecxz
and
cmp
lret
test
cltd
lea
test
out
mov
add
xor
sbb
or
mov
xchg
cmpsl
insl
lret
fldt
adc
aas
jp
cld
insl
push
mov
pop
ja
mov
sbb
cmpsb
and
fstps
xchg
es
xchg
push
mov
mov
xchg
aam
add
inc
dec
loope
adc
push
jns
and
ror
lahf
adc
push
xchg
lea
ret
mov
aas
mov
dec
or
pop
sbb
cmp
xchg
add
mov
cmp
xor
data16
cmpsb
push
movsb
ret
or
and
mov
pop
dec
int3
fsts
jmp
or
jns
movsl
out
hlt
cmp
push
call
je
dec
adcl
dec
cmpsl
and
out
xchg
cmp
cmp
adc
push
xchg
mov
xchg
scas
add
fists
dec
and
int
push
sti
out
mov
and
fisttpll
xor
push
loope
add
ss
insl
repnz
rolb
push
mov
leave
inc
subl
xor
call
mov
mov
sbb
dec
int
mov
and
cmp
cmp
cmp
les
std
rolb
cmp
mov
rorl
jp
test
in
add
ss
test
loop
inc
outsl
das
rcr
scas
jl
add
pop
lret
mov
out
xchg
cli
fcoml
pusha
imulb
mov
mov
sub
cli
addps
add
jp
leave
push
int3
inc
jg
jmp
add
ds
stc
push
shll
ljmp
iret
loopne
fwait
cwtl
push
aaa
push
aam
cmpsb
loop
xchg
and
dec
je
popa
xlat
out
jno
pop
pop
outsl
cmpsl
divl
mov
add
or
lea
pop
push
sti
mov
push
sbb
and
movsb
ljmp
cmpsb
aas
ss
mov
cli
push
dec
and
sub
xchg
loop
mov
stos
aad
push
mov
je
push
and
adc
addr16
dec
js
adc
push
pop
fisubrl
xchg
pop
mov
mov
xchg
sbb
mov
add
xlat
pusha
loop
cmpl
loopne
aad
fcomps
rorb
jb
xor
cwtl
dec
loope
mov
rorb
mov
fmuls
mov
xchg
fistpl
jno
xchg
xlat
pop
add
int
xor
repnz
ret
std
push
loope
in
push
mov
lods
xchg
test
adc
jle
lcall
dec
scas
mov
and
aas
mov
cmp
enter
lods
mov
dec
add
xor
jae
fldl
stos
popf
fdivrp
sbb
clc
pop
push
pop
mov
rclb
das
cwtl
lea
int
sahf
dec
sarl
sub
mov
movsb
push
add
into
mov
negb
inc
xor
out
xor
scas
mov
dec
inc
xchg
daa
mov
pop
mov
or
and
add
pop
sar
xor
je
mov
adc
mov
imul
inc
xor
cwtl
out
pop
sub
cmp
pop
lret
or
lcall
pop
sbb
imul
test
aas
push
repnz
push
adc
xchg
mov
aas
xor
xchg
xchg
fsubs
outsb
mov
outsl
sti
std
out
repz
jnp
push
cmp
in
mov
xchg
sbb
inc
imul
add
scas
int3
mov
sub
ljmp
cmp
push
adcl
mov
push
test
icebp
mov
std
rcl
cmp
dec
ror
inc
imul
add
mov
mov
or
mov
adc
pop
mov
xchg
repz
jb
lock
inc
inc
sbb
enter
push
loope
xchg
adc
lret
aam
adc
sysret
test
out
dec
lds
decl
xchg
xor
jo
iret
iret
xchg
stc
xchg
les
dec
arpl
adc
cltd
icebp
xchg
popf
stos
popa
bound
sbb
aad
mov
xlat
and
fnstcw
mov
push
or
and
outsb
scas
mov
jnp
fisubl
cmpsl
pop
dec
inc
leave
repnz
and
ret
dec
int3
mov
fimull
mov
mov
aam
divb
pop
dec
inc
inc
jge
es
cmp
cwtl
test
sub
cld
dec
stc
jle
mov
sahf
sub
movsl
cmpb
in
jne
jne
and
jnp
mov
xor
and
and
adc
lahf
aaa
mov
and
decl
int
es
mov
sbb
or
push
in
hlt
ja
inc
pop
jge
jb
loop
jmp
rolb
jbe
adc
pop
pop
sti
inc
or
mov
mov
scas
into
test
das
mov
rclb
push
and
jge
mov
movsb
in
xchg
shll
jl,pt
xorb
daa
xor
outsl
dec
pusha
xchg
cmpsb
xor
and
lock
pushf
xchg
insb
add
fisubs
jo
mov
js
insl
loop
ficoml
xorl
movl
ret
ds
and
sbb
inc
xchg
push
inc
mov
dec
mov
stos
dec
xchg
and
nop
mov
lret
outsl
push
fildll
xchg
lods
xchg
movsb
sbb
mov
in
push
test
pop
int3
rolb
mov
mov
jle
lods
mov
sub
js
push
mov
pop
cmp
pop
fisttps
push
push
ja
inc
add
mov
inc
jbe
dec
mov
out
mov
xor
sub
aas
shrl
in
sub
stos
out
xor
adc
adc
sbb
subb
lret
out
das
pop
nop
je
ret
and
pop
int3
pop
stos
cmpsl
test
stos
xchg
pushf
dec
pusha
add
rcrb
loop
loopne
or
dec
pop
pop
mov
mov
mov
dec
push
in
lahf
test
mov
adc
inc
pop
mov
or
test
jbe
in
mov
mov
movb
cmp
mov
ss
mov
rcl
adc
mov
and
inc
imul
pop
ljmp
out
loop
pop
jge
jp
dec
xchg
pop
pop
and
jle
fcmovne
addr16
jmp
add
push
mov
cli
xor
insl
lods
mov
icebp
inc
popf
testb
out
ret
adc
shrb
in
adc
in
xchg
push
jno
loope
dec
mov
fwait
sar
addr16
in
sbb
and
icebp
unpckhps
pop
adc
cld
in
in
push
sub
sbb
insl
das
insl
out
ret
dec
mov
mov
sbb
add
cs
insb
outsl
inc
push
jg
mov
cmp
jecxz
sbb
jmp
es
jb
jl
sbb
xchg
loopne
sbb
lds
cmp
adc
xlat
jb
outsb
imul
mov
into
addr16
push
idivb
and
rcll
ljmp
popf
imul
pusha
sbb
int3
push
ja
sti
xchg
or
mov
mov
leave
test
sbb
inc
xchg
ja
cmp
jge
mov
outsl
vpshlw
ljmp
gs
xor
cmp
mov
pop
xor
xchg
jns
mov
cmp
cwtl
andl
lods
xchg
push
xor
sbb
testl
test
pushf
adc
mov
fsubrl
test
pop
loope
movsb
int3
jl
cmp
adc
mov
pop
sbb
dec
scas
hlt
test
das
insl
cs
xor
imul
shlb
push
cmp
lahf
cmp
imul
bound
sbb
xchg
push
dec
or
pop
sbb
ror
dec
pop
stc
add
cmpsl
pop
or
dec
sub
and
add
test
adc
std
popa
leave
fists
jecxz
ret
addb
mov
mov
repnz
sarl
mov
data16
arpl
xchg
and
xchg
push
lds
xchg
push
test
das
and
add
inc
dec
pop
xchg
push
cmpsb
push
jb
mov
js
addl
dec
xorl
arpl
out
inc
loop
cmp
xor
sub
neg
or
push
cmp
pop
int3
repz
and
fcomps
push
sbb
push
or
mov
mov
lds
dec
sbb
mov
lock
push
mov
sub
aam
test
lods
movsb
inc
mov
or
xchg
aad
and
pop
xor
rcrl
inc
jno
pop
sbb
es
ficoms
push
xchg
shrl
aaa
xchg
ret
xchg
je
sub
in
insl
cmp
and
das
shl
cld
cwtl
mov
pop
outsl
pop
loope
push
lret
mov
fimull
jns
inc
sahf
es
in
ja
xchg
sbb
xor
jl
xchg
pop
out
in
pop
repz
xchg
xor
leave
stos
jp
xchg
int
out
adc
inc
aad
in
cmp
idivb
inc
pop
movsl
fbld
jle
pop
or
push
push
sub
mov
orb
dec
out
fnstenv
xor
xchg
rorb
imul
adc
lahf
fadds
nop
mov
push
mov
xchg
sub
push
jecxz
lock
sub
pop
repz
pushf
mov
pop
inc
xchg
sbb
push
mov
js
out
mov
dec
cli
add
and
and
push
mov
jmp
pop
push
xchg
jb
ljmp
jbe
in
mov
pop
rorl
dec
outsb
sub
push
inc
cmp
out
inc
jno
mov
or
es
test
add
aad
ljmp
rolb
dec
jle
inc
pop
dec
lods
movsl
sub
add
leave
pop
inc
scas
or
lea
push
imull
jmp
xor
loope
mov
inc
shlb
lret
popf
stos
repz
cmpl
sbb
sahf
sub
jmp
dec
in
loop
mov
test
xor
cli
xchg
push
inc
jnp
leave
ja
cmp
mov
push
loop
andl
out
xchg
inc
orb
jp
sub
push
or
sub
nop
arpl
cmpsb
movsb
cld
stos
lock
xor
das
dec
xchg
std
and
shlb
mov
mov
sbbl
adc
ret
adc
mov
or
notb
sub
enter
rcrb
or
pop
adc
sub
into
pop
imul
int3
pop
aam
mov
arpl
loope
mov
mov
je
cmp
inc
aad
adc
pop
push
js
jnp
dec
xor
mov
inc
aam
or
mov
lahf
lea
sbb
dec
call
inc
pop
stc
addr16
sbb
shll
ret
pop
test
je
cmp
mov
nop
aaa
xorb
mov
adc
cltd
leave
testb
rclb
scas
inc
sub
mov
jle
es
sbb
test
in
add
xchg
stos
in
push
mov
in
sbb
or
scas
fstpt
ss
dec
nop
and
cs
or
inc
inc
jecxz
pushf
or
xchg
je
std
fstpt
push
mov
lcall
sbb
out
mov
xor
sub
fcoms
ja
dec
outsl
inc
push
popa
wrmsr
adc
movsl
or
fistpl
in
scas
fs
shlb
mov
sti
mov
jbe
xchg
mov
pop
data16
inc
jo
xor
test
test
dec
mov
sbb
repz
pushf
sub
xchg
cmp
jnp
lock
jns
xchg
sbb
jno
xor
jmp
lods
cmp
stos
out
dec
jno
lock
push
or
mov
scas
cli
mov
and
mov
and
aad
xchg
xor
test
int3
fwait
aad
adc
cmp
push
xchg
cmp
jns
sar
pop
jo
fidivrl
sub
imul
mov
add
sub
jl
test
ds
push
or
shlb
dec
int3
mov
aad
mov
loopne
in
push
inc
pop
test
mov
or
clc
in
dec
dec
ds
cwtl
test
lret
sub
push
jns
dec
rcl
mov
jle
jne
cli
nop
jp
ljmp
andb
in
sub
jecxz
and
pusha
lods
sbb
sarb
icebp
ds
inc
idivl
mov
fdivl
outsl
aas
stc
mov
lds
add
sbb
mov
xchg
jmp
push
aaa
outsb
lahf
or
sub
rcll
add
setae
add
jno
push
in
push
dec
push
fstl
aam
js
fdivr
clc
push
lret
sub
repz
in
jb
stc
js
je
mov
addr16
mov
inc
xchg
push
fsubl
dec
rclb
into
push
fistps
pop
sbb
addb
mov
jns
sbb
in
and
mov
sub
add
sub
int3
mov
out
lods
sub
push
sbb
repnz
push
or
xor
pusha
sub
and
mov
das
dec
cmc
outsl
lahf
mov
jg
out
adc
bound
or
ja
pop
test
and
sbb
nop
aam
sahf
pop
lcall
cmp
std
or
xchg
les
je
or
sarb
je
std
fstpt
sti
adc
mov
imul
add
in
lea
imul
dec
add
mov
push
in
cs
aaa
icebp
push
mov
push
or
call
jp
lods
or
pop
push
test
mov
xchg
jmp
stos
sahf
cmp
call
cmp
setbe
dec
and
jg
pop
hlt
into
add
out
sbb
xor
cmp
testl
push
jp
sbb
jecxz
mov
jg
test
add
sbb
sahf
divb
adc
cmpsb
sti
aad
popf
mov
inc
push
sbb
cmpsl
movsb
leave
ja
jge
sub
lock
int3
dec
jbe
mov
push
mov
loop
shl
push
nop
xchg
sub
mov
scas
mov
jnp
add
repz
cmc
ljmp
cmpsl
loope
mov
xor
fidivrl
dec
les
mov
mov
stc
nop
cltd
or
out
fists
dec
shl
sbb
lods
inc
and
lret
jno
push
shll
mov
fistl
mov
sub
jecxz
in
std
mov
les
lret
test
jmp
sub
cld
flds
cmp
mov
add
js
mov
mov
int
xor
mov
jp
jbe
sti
and
sbb
insl
cmp
ds
xchg
dec
lds
leave
mov
or
test
inc
lock
fcmovnu
in
adc
xchg
bound
popf
ret
sti
adc
xor
sbb
test
mov
xchg
iret
cmp
adc
add
pop
cli
mov
xchg
loopne
jp
shlb
ja
cld
dec
xchg
add
into
sbb
mov
mov
flds
outsl
pop
aas
roll
imul
mov
orb
loopne
xor
imul
test
movsl
xchg
ljmp
retw
and
clc
call
bound
mov
xchg
inc
into
inc
cmpsl
js
js
cltd
mov
pop
mov
outsb
mov
in
adc
or
aam
cmpsl
lret
andl
cltd
lret
inc
lock
stos
mov
inc
jo
outsl
add
add
or
scas
xchg
jno
xchg
nop
sarb
jle
push
outsb
call
dec
sbb
inc
cmp
mov
jg
mov
call
mov
mov
or
into
fiaddl
notl
out
aam
dec
pop
sbb
repz
lock
mov
xor
ljmp
aas
loop
pop
add
fisttpl
push
jge
call
sub
loop
popf
out
mov
or
das
fistps
sub
loop
aad
or
inc
push
sub
repnz
or
mov
das
jle
adc
cli
push
notl
sbb
and
push
mov
iret
das
lret
or
cmpsb
idiv
lods
divl
roll
xchg
cmp
jbe
add
mov
repz
xchg
jmp
xchg
aam
in
push
dec
loopne
xchg
pop
insb
addr16
hlt
adc
sub
cmpsl
sbb
inc
loopne
sbb
mov
sub
sub
jbe
pop
test
cmc
dec
pop
push
in
push
cli
lret
dec
fmull
push
or
jno
fdivrs
and
sub
cmp
andl
jns
ljmp
mov
pop
dec
lcall
jl
fs
insl
mov
mov
fcompl
std
dec
xor
rorb
not
push
out
imul
mov
ja
cs
stos
xchg
bound
out
mov
in
daa
xchg
sub
xchg
aas
repnz
add
or
xor
inc
and
repz
mov
aad
xor
stc
inc
mov
idivb
pusha
sti
xor
cmp
xchg
int3
inc
jge
xchg
inc
add
dec
lea
das
stos
push
enter
mov
es
jmp
into
push
xchg
stos
insl
testb
cmp
jge
fimuls
push
fsubrs
xchg
hlt
lock
push
or
ret
adc
sub
add
rcr
mov
mov
adc
dec
push
aas
in
sbb
mov
call
inc
or
stos
and
mov
xchg
mov
add
jle
sbb
sbb
jge
pop
push
push
xchg
enter
lods
pop
int3
lret
loopne
sbb
outsb
mov
fstl
ret
test
push
rorl
and
clc
or
xor
arpl
inc
out
or
cli
cmp
cltd
loopne
fstpt
scas
incl
lods
xor
dec
mov
mov
push
adc
push
inc
sbb
adc
test
inc
aad
int
dec
pop
cmp
pop
repz
ret
and
xchg
call
aad
and
jo
jae
inc
out
push
sti
sbb
cmpsb
subb
or
inc
dec
sub
pop
ret
or
test
pop
pop
xor
cmp
mov
mov
add
xor
aaa
test
rcrl
pop
jl
pop
and
jno
test
and
sbb
movsl
or
aad
arpl
mov
adc
pop
cmp
cld
jle
adc
lds
insl
sahf
inc
test
or
addr16
fdivrs
mov
pop
or
pop
enter
and
shl
dec
xchg
or
xchg
imul
or
stos
inc
or
pop
dec
cwtl
xchg
ret
stos
xchg
push
mov
jbe
data16
sub
mov
or
stos
clc
std
test
ss
mov
jg
repnz
ja
inc
cld
and
cmp
or
and
cmp
lahf
repnz
dec
je
or
icebp
push
adc
ret
gs
mov
or
mov
mov
mov
sbb
notb
pop
sbb
aam
out
xchg
fs
loop
jne
or
scas
lret
andl
mov
test
cmp
cmp
rcl
lcall
divb
sub
out
adc
loopne
es
add
repz
iret
or
mov
xchg
push
das
sub
ret
or
lahf
xchg
std
xor
xchg
fadds
and
mov
jg
test
popa
mov
fldenv
idivb
arpl
mov
insb
xchg
jle
pop
push
or
mov
int3
daa
xchg
jne
out
push
push
sbb
test
testl
in
incl
xchg
add
sbb
pop
add
mov
add
aad
in
rorb
icebp
dec
loopne
ror
popf
aaa
mov
fucomi
mov
add
and
cltd
pop
xor
or
cli
in
iret
cwtl
iret
jp
mov
jnp
fldt
jns
scas
insb
sub
test
jns
jae
les
aaa
aad
dec
cld
sub
xchg
stos
insl
push
xor
cmp
dec
test
cli
ficompl
repz
adc
nop
leave
aad
in
scas
xlat
push
addr16
fistpl
sub
mov
pop
sub
leave
mov
fwait
jmp
add
sub
movsl
sub
outsb
adc
cmpsl
loop
xchg
mov
adc
lret
out
pop
shlb
jb
sbb
out
repnz
adc
les
jmp
iret
push
div
into
and
sbbb
mov
mov
inc
add
add
loop
clc
lock
dec
ja,pt
call
or
fs
imul
std
cs
rcrl
lretw
push
jns
fst
mov
pop
test
fdivl
les
jns
in
popa
jmp
dec
lret
ret
shr
adc
mov
rorb
jg
loopne
and
dec
icebp
add
mov
push
mov
out
and
dec
shrl
mov
outsl
add
inc
push
sbb
fsubr
push
mov
lea
scas
rsm
clc
cmp
pop
xor
jo
js
das
jle
or
fildll
mov
cmp
xor
enter
or
ja
mov
hlt
stc
xor
mov
aam
out
dec
xchg
out
fwait
pop
dec
cmpb
aas
ds
and
xchg
inc
icebp
andb
clc
pop
dec
cmc
sti
sbb
inc
cs
test
pop
clc
mov
mov
sub
mov
aaa
or
dec
and
aad
aas
add
push
rclb
cld
jmp
or
repz
mov
cmp
popf
ficomps
rol
pop
sbb
xchg
mov
loopne
sahf
jb
dec
push
push
pop
and
mov
mov
push
movsl
xchg
test
mov
inc
mov
lret
fstps
stos
dec
addr16
add
es
mov
test
fcomps
in
xor
pop
cli
pop
add
lahf
xor
cmpsl
sub
mov
adc
sub
std
int3
cmp
in
mov
repnz
test
push
push
or
imul
cmp
hlt
sbb
popf
ret
and
add
fdivs
xchg
lea
repz
push
iret
cmp
xchg
test
cmp
enter
add
rcrb
scas
inc
inc
xchg
loop
or
mov
enter
jecxz
iret
xor
and
jmp
in
mov
leave
cli
imulb
adc
jb
or
sub
sbb
jg
pop
mov
xor
je
or
add
stc
xchg
int
jne
push
mov
sbb
sahf
adc
pop
mov
pop
clc
pop
lret
fbld
inc
xchg
dec
popa
inc
push
xor
mov
jne
push
inc
insb
xchg
mov
inc
fsubrs
or
dec
mov
sbb
movsl
test
cmpsl
jmp
dec
dec
mov
cmpsl
mov
inc
dec
loope
xchg
pushl
fwait
jg
or
sbb
mov
pop
in
out
bound
dec
add
add
mov
xchg
pop
aam
js
adc
fiaddl
pop
cltd
rol
jns
int3
mov
sbb
mov
test
push
jbe
cmp
and
js
out
mov
or
hlt
push
dec
sahf
pop
add
cmpb
mov
push
sub
mov
loop
mov
adc
add
push
jnp
fmuls
es
pop
sub
mov
scas
cmp
jl
mov
jmp
push
or
xchg
imul
mov
dec
addb
cs
mov
inc
stos
stos
jbe
dec
mov
call
xor
jge
iret
push
pop
popf
sub
out
adc
adc
jl
fldl
das
push
jbe
jns
jo
mov
adc
cmpl
ss
sbbb
pop
test
mov
out
adc
xchg
out
js
push
pop
push
hlt
int
jecxz
pop
push
mov
jmp
xor
divb
push
sar
mov
mov
mov
aaa
jecxz
pop
nop
pop
mov
pop
shl
test
jle
mov
push
call
rolb
lret
cmp
xor
xchg
push
dec
in
push
mov
add
insl
jnp
mov
and
shll
ds
push
pop
pop
in
lea
in
stos
leave
sub
xchg
sarb
adc
movsb
fdivp
ret
test
cli
push
push
or
dec
jl
pop
cltd
push
adc
cmp
inc
inc
mov
dec
bound
call
push
lahf
stos
cmp
xchg
mov
xor
cmp
bound
jg
fcmovbe
add
repz
cmp
adc
dec
inc
mov
outsb
add
and
out
nop
adc
imul
jg
and
dec
and
push
mov
in
cld
push
daa
jae
fimull
mov
xlat
adc
cmp
and
repnz
bound
and
cmpsb
dec
sahf
scas
sbb
lcall
sbbl
xchg
and
mov
add
rclb
ljmp
pusha
jp
movsb
mov
jno
or
icebp
fsubrl
nop
iret
add
imul
adc
outsl
pop
push
mov
in
adc
mov
lret
and
inc
jle
leave
out
lret
insl
test
pusha
jmp
out
or
add
mov
das
imul
sbb
scas
stos
ljmp
xchg
pop
subl
out
repnz
sbb
pop
fucompp
and
imul
je
test
xchg
cmpsb
dec
inc
sarb
xor
mov
je
pusha
shlb
loope
movsl
rclb
loopne
jb
xor
fldenv
dec
mov
cmp
and
ret
rcl
xchg
js
mov
ret
movsl
xchg
jae
scas
push
mov
push
scas
lds
cwtl
mov
pushf
or
jo
jp
or
fldcw
mov
daa
in
mov
das
push
mov
popa
out
sub
fdivrl
lahf
jne
inc
mov
shlb
insb
xor
add
test
sub
push
mov
dec
fdivrl
stc
movsl
pushf
xchg
filds
push
adc
inc
sbb
out
adc
fmuls
sub
jb
bound
hlt
xchg
add
in
fmull
enter
filds
mov
cmpsl
jmp
ret
gs
addr16
lods
mov
std
test
pop
or
shlb
sbb
cwtl
sbb
dec
cmpsb
stos
sbb
inc
add
xor
les
aad
stos
addl
arpl
mov
sub
dec
lea
or
popa
mov
jns
mov
jmp
fstpl
pop
mov
lods
mov
cwtl
sbb
or
xor
xchg
sub
scas
sarl
sbb
sbb
pop
into
scas
pop
lcall
jecxz
pop
jle
xchg
sub
inc
in
mov
mov
jecxz
mov
inc
ds
pop
inc
pop
iret
aad
aaa
inc
clc
mov
pop
pop
pop
jp
cmp
push
ja
shll
in
lods
push
shrb
cmp
scas
cmp
pop
cmpsl
out
mov
stos
mov
inc
jb
jbe
jne
push
push
and
mov
stos
add
or
jp
bound
pop
or
mov
add
mov
ds
loopne
add
rcrl
mov
sbb
ficoms
pop
ljmp
push
adc
call
dec
rol
or
loopne
scas
add
push
mov
dec
in
ds
lock
imul
jbe
jnp
fcomi
cwtl
mov
in
ret
xlat
imul
mov
push
adc
repnz
xor
dec
jg
mov
cmp
or
lea
jl
push
dec
cmp
loopne
mov
push
repnz
test
out
xor
cmpsb
xlat
std
jecxz
push
add
inc
cmp
inc
sbb
out
js
dec
sbb
sub
cs
test
xor
or
aas
stos
pop
and
mov
std
mov
sbb
mov
mov
loope
push
pop
fistpll
inc
inc
sbb
sub
push
cmp
mov
or
sub
out
leave
loope
loope
xor
sub
test
rcrl
cmpb
mov
stos
dec
adc
xchg
jg
lahf
xchg
mov
adc
std
push
fdivs
subl
loope
mov
sbb
dec
xchg
pop
fistpll
sub
jo
sub
daa
sbb
push
bound
lcall
dec
xchg
je
hlt
xchg
das
sbb
cmc
push
ljmp
ljmp
xchg
ljmp
dec
sub
jmp
movsb
push
inc
or
jns
dec
push
mov
in
xchg
bound
cmp
in
push
jge
inc
push
xchg
push
cmp
popf
add
xlat
mov
int
adc
enter
sub
stc
mov
fwait
inc
pop
xchg
pusha
lock
xor
pop
inc
outsl
les
shl
adc
lods
dec
xor
dec
jge
xchg
das
cmp
mov
xor
ljmp
clc
enter
in
aas
cmp
notl
shrl
jl
cmpsl
in
add
dec
mov
test
push
pop
adc
shl
sbb
xor
fs
nop
adcl
icebp
gs
pop
stos
popa
or
int3
mov
aas
cmp
mov
int3
es
dec
in
push
leave
xchg
and
das
push
pusha
push
cmpb
outsb
popf
lea
test
das
xor
jle
int
or
jb
jg
jo
fcompl
mov
xor
jge
gs
repnz
iret
scas
sbb
inc
sub
pop
icebp
sbb
cmpsb
and
xor
pop
bound
mov
mov
and
mov
ds
adc
daa
int
add
or
pop
xor
popa
bound
mov
ret
pop
das
push
gs
imul
sbb
cmpsl
adc
scas
add
sub
stc
jbe
dec
aaa
iret
aas
mov
and
cltd
test
popf
pop
add
incb
addr16
xlat
mov
scas
insb
cld
out
aas
ljmp
inc
enter
movsl
and
leave
scas
add
out
xchg
mov
mov
push
xchg
sbb
addr16
jbe
push
repnz
xchg
leave
dec
cmp
mov
sarb
push
xor
and
ds
push
sub
and
push
into
ret
add
inc
int
je
sbb
jae
cltd
jb
mov
xchg
and
and
enter
mov
aas
test
jnp
xchg
arpl
insl
mov
adc
sub
rolb
scas
cmp
mov
and
insb
dec
adc
pushl
orb
dec
std
inc
xchg
xchg
jg
out
sti
pusha
or
cmpsl
add
mov
sbb
data16
adc
mov
ja
xor
pop
push
cmp
les
push
jo
mov
mov
lret
push
xor
out
out
pop
outsb
out
jg
bound
cmp
data16
add
rcll
je
sbb
sub
mov
mov
push
xchg
sti
loopne
icebp
loopne
mov
mull
lds
bound
enter
mov
imul
fisttps
aas
stos
cmp
aas
aaa
out
jmp
enter
cs
jg
nop
xchg
sbb
jp
or
inc
ds
pop
sti
xor
push
cmc
aaa
jge
pop
push
lret
dec
dec
fs
imul
pushf
mov
movsw
shrl
rcrb
cltd
arpl
out
xchg
push
in
mov
pop
in
xlat
xchg
cmp
cli
les
mov
and
jnp
hlt
mov
jl
mov
lock
shrb
mov
outsb
pop
sbb
mull
mov
or
cmpsb
sbb
xor
jg
dec
scas
loop
mov
pop
pop
xor
loope
sbb
aaa
jge
dec
sbb
repz
lcall
or
jmp
sti
inc
push
pop
xchg
mov
lret
filds
lret
out
xchg
sub
pop
xlat
outsb
lret
mov
call
mov
sbb
inc
lods
mov
int
sub
cmp
pusha
sahf
mov
pop
pop
cmpsb
dec
cmc
cmp
pop
dec
mov
int
gs
movsb
repnz
xor
out
push
rolb
popf
ss
fcompl
inc
mov
fyl2xp1
push
std
mov
add
jl
push
fisubrs
adc
dec
mov
pushf
xor
pushf
add
enter
fisubrs
gs
xor
pusha
and
mov
nop
call
in
jno
out
iret
repnz
mov
fmulp
les
cmc
lret
adc
add
daa
int
ret
iret
hlt
lods
iret
sbb
xchg
int
jg
or
sbb
int3
pop
dec
mov
sbb
push
ljmp
dec
jo
rorl
inc
lahf
andb
lcall
xchg
xor
lret
fistpl
cwtl
hlt
xor
dec
push
mov
in
rcrb
rcll
in
sbb
divb
shrb
mov
xlat
pop
push
insl
stc
sub
pusha
rol
cmp
nop
ja
stos
pushf
es
bound
inc
in
and
lretw
pop
sub
mov
mov
xorb
push
inc
xchg
and
pop
jae
xor
lods
sub
in
jp,pn
pop
mov
sahf
push
jge
lret
xor
and
lds
cmpsl
into
dec
xor
leave
lcall
push
pop
fcmovnu
pusha
pop
and
xchg
cwtl
rcll
push
movsb
push
lock
mov
scas
arpl
jbe
and
xchg
repnz
inc
or
imul
adc
fisttpl
xor
fistl
xchg
add
jne
sub
jne
cmpsb
xchg
outsl
cmp
test
cmp
jle
and
sbb
mov
xchg
pop
call
gs
aas
stos
xlat
imul
jns
add
stos
cmp
std
dec
or
in
pop
xchg
xor
leave
hlt
rorl
sub
cmp
scas
dec
xchg
daa
push
hlt
push
fnstenv
mov
push
cmpsb
xor
outsl
push
in
setae
nop
gs
jo
cmp
imul
in
push
xchg
pop
xchg
loop
xchg
push
inc
xchg
rolb
lock
mov
pop
shld
sub
test
xorl
adc
stos
addl
jecxz
in
int
jae
sbb
clc
xchg
push
imul
jb
mov
das
rorb
sub
xchg
push
dec
xchg
roll
xchg
adc
fisubrl
fisttpll
inc
jge
inc
mov
aaa
jle
lea
dec
fwait
aaa
or
stos
int3
ficomps
fidivrl
inc
adc
mov
pushf
test
xor
add
sbb
pop
sti
mov
push
add
push
stos
push
pushf
mov
mov
into
xorl
ja
push
mov
pop
xchg
fcoml
or
dec
sub
lds
out
push
jbe
adc
mov
xchg
sub
std
fcmovne
xchg
orl
ja
xor
repnz
xchg
adc
imul
in
lahf
xor
cmp
adc
leave
add
aas
lock
in
add
enter
mov
arpl
push
test
clc
cli
pop
mov
int
jae
stc
lret
xchg
and
mul
jge
add
mov
clc
inc
mov
std
push
inc
mov
insl
add
xor
das
mov
out
push
subl
mov
outsb
xor
jno
inc
call
push
stos
lock
jecxz
xor
in
sarl
ret
rcl
mov
push
sub
xchg
xchg
in
fldcw
imul
scas
enter
test
xchg
mov
dec
das
xchg
xchg
dec
fxch
fbstp
in
mov
cwtl
js
jp
add
bnd
inc
fcmovbe
cwtl
outsl
stos
inc
push
cmp
and
out
jp
in
adc
in
adc
loope
pop
fsts
jmp
fildl
bnd
or
mov
sbb
pop
or
xor
shll
mov
jns
push
cmpsl
push
push
daa
jno
test
push
mov
push
inc
or
push
fisttpll
idiv
jb
lock
loope
hlt
and
lret
hlt
ja
and
cwtl
mov
out
imul
xor
cmp
shrl
in
lds
mov
dec
cmp
addr16
shll
mov
and
jecxz
fs
pop
push
add
les
dec
jmp
adc
out
les
cmp
xchg
sbb
cmp
mov
pushf
stc
stos
ljmp
mov
cmpsb
add
inc
imul
jbe
and
insl
nop
adc
je
das
xor
inc
dec
enter
orb
xor
mov
fwait
idiv
and
push
loop
sti
mov
jl
xor
fisttpll
xchg
pushf
pop
pop
repz
aam
cmp
mov
push
cwtl
adc
sub
rcll
lea
in
pop
cmpsl
cmc
lea
add
push
xlat
stc
adc
adc
fcompp
ja
js
mov
inc
jbe
cmp
mov
in
adc
test
cli
dec
sub
cmpsl
pop
pop
push
push
sbb
out
data16
mov
or
mov
ficoml
adc
imul
popa
mov
mov
inc
aad
loop
test
leave
stos
loope
rorl
sbb
add
cmpsb
add
into
mov
cmc
dec
imul
cmpl
addl
jmp
pusha
in
adc
push
inc
imul
mov
xor
add
cwtl
jb
add
aaa
loop
xor
push
dec
shlb
mov
pop
or
ret
fiadds
sti
lret
xor
mov
jg
mov
std
pop
inc
push
dec
and
xor
adc
imul
jmp
push
xor
popa
mov
xchg
aas
jg
out
das
dec
out
adc
add
aad
cli
into
adc
cwtl
ret
loope
xchg
daa
push
jnp
pop
mov
enter
int3
addr16
jmp
sub
pop
jecxz
nop
nop
sbb
sbb
es
int3
shlb
movsl
sahf
xchg
mov
insl
fildl
insb
jmp
sub
test
push
movsb
subb
into
inc
jg
rcrl
adc
xor
or
repnz
cli
movsl
lret
sbb
dec
dec
subl
mov
lds
inc
add
dec
push
xor
adc
cmp
dec
inc
into
push
subl
adc
cmpsl
and
fs
jae
cmp
pop
push
mov
sbb
dec
mov
aas
push
jno
or
rcrl
xchg
adc
nop
xchg
jmp
mov
adc
jmp
test
sarl
in
cmp
in
or
icebp
ret
lods
ret
aad
fnstenv
adc
fsts
sahf
add
cltd
push
fstl
insb
and
push
es
scas
adc
mov
pop
add
mov
lods
repz
rorb
cwtl
lods
movsl
adc
std
jns
leave
inc
cmpsl
lods
pop
sbb
and
bound
inc
dec
sti
pop
sub
mov
pop
movsl
das
add
jmp
sbb
sbb
sbb
mov
movsl
mov
pop
leave
jbe
pop
mov
sub
push
mov
sbbb
jno
cwtl
ss
cmpsb
push
ficomps
js
mov
dec
loopne
inc
dec
imul
aad
insb
pop
xchg
in
xor
xlat
mov
stc
or
cli
popf
lock
jb
sbb
add
pop
outsb
mov
rcr
aaa
leave
ficoml
jbe
sub
jmp
js
cmpsb
xchg
daa
in
add
fidivl
mov
dec
xor
push
stc
fs
test
or
jmp
mov
xor
xchg
roll
dec
loop
jno
fwait
dec
cltd
clc
xchg
sti
fstl
xchg
inc
or
in
cwtl
es
pop
xor
sbb
movsl
cmp
mov
inc
lcall
loopne
sbb
or
iret
ds
rol
mov
push
xorl
pop
adc
adc
dec
lahf
mov
mov
lcall
and
mul
jo
jno
jbe
sar
sub
rcll
lcall
or
aaa
xor
xchg
jnp
push
pop
ja
mov
push
das
and
xor
and
adc
arpl
pushf
xlat
lock
lock
nop
push
je
aaa
nop
sub
pop
cmp
fmull
cmc
lds
cmp
fs
jae
filds
iret
mov
pop
push
sbb
hlt
lea
pushf
xor
lret
or
fcompl
xor
int
dec
bound
or
mov
pop
hlt
ror
adc
or
leave
aam
pop
xchg
jp
mov
xor
lea
and
mov
sbb
fs
loopne
pop
push
pop
push
js
mov
nop
scas
in
mov
js
pop
iret
outsb
and
inc
insb
push
push
ret
pop
sub
popf
das
jae
push
cmp
xor
add
cmp
dec
in
dec
into
xchg
push
es
sbb
aad
icebp
and
mov
pusha
adc
sti
dec
lcall
add
sbb
add
fs
in
dec
dec
push
lods
add
or
ljmp
xchg
mov
mov
test
clc
movsl
xor
aad
arpl
pop
mov
inc
ss
repz
addb
jge
call
pop
lcall
mov
es
mov
cmp
ja
mov
fisubrs
rorb
mov
ja
add
mov
fs
sbb
nop
jne
addr16
xor
cmp
adc
loop
jns
jo
xor
jnp
loop
inc
mov
sbb
or
xor
arpl
add
adc
adcb
cmp
add
mov
mov
daa
jge
dec
xchg
dec
into
shll
daa
out
cmc
mov
int3
pop
mov
sub
xor
stos
pop
push
cmpsl
iret
int3
into
or
cwtl
add
rolb
mov
scas
xor
xchg
add
mov
inc
jmp
pop
cld
clc
sbb
mov
hlt
inc
ret
jle
push
int
in
fmul
pop
jne
repnz
dec
jb
insl
sbb
jne
lods
jae
pop
loop
or
sbb
mov
iret
sbb
jbe
scas
sarl
rcl
adc
fidivrs
stc
das
mov
in
aaa
sarb
sbb
fs
mov
fists
mov
xlat
or
rcr
jns
les
jecxz
dec
inc
imul
sbb
movsb
ret
xor
fistps
and
lahf
pushf
hlt
add
ljmp
push
xlat
clc
jns
or
test
arpl
dec
sbb
data16
movb
sbb
rol
mov
aaa
es
add
loope
sar
dec
add
faddl
add
jns
pop
pushf
dec
inc
pushf
inc
or
mov
mov
inc
out
sub
fwait
and
loopne
mov
test
lea
lods
push
lock
mov
arpl
popf
push
or
sub
sbb
rorb
cwtl
push
adc
xchg
mov
and
ror
adc
dec
cmp
addr16
cmpsb
sub
xchg
dec
mov
jbe
inc
enter
shrb
cwtl
pop
movsb
inc
dec
ret
shlb
jno
ret
rcl
push
pusha
push
clc
stos
lahf
cmpsl
cmp
dec
mov
push
dec
push
jb
loopne
adcb
mov
hlt
mov
cmc
dec
shl
sbb
inc
jge
inc
pop
rorb
xchg
mulb
xchg
daa
repnz
aas
mov
outsl
mov
cmp
out
sti
jmp
movsl
sbb
pop
into
out
push
lods
sbb
cmc
push
imul
in
jne
mov
or
das
fsts
pop
push
mov
ret
push
lods
add
nop
sahf
out
popa
inc
cmp
pop
pushf
cwtl
sahf
push
pop
icebp
into
or
cmpsl
cmc
xchg
fs
mov
addl
out
enter
xchg
les
loope
inc
std
xchg
jnp
adc
inc
movsl
fisubs
or
jbe
in
mov
cs
cltd
inc
iret
fistl
and
sbb
or
cld
fisttpl
fsubrs
add
jp
loop
aaa
lahf
mov
sbb
add
test
mov
insl
jbe
lahf
pop
aas
mov
inc
pop
leave
and
shl
mov
test
mov
xor
in
or
std
imul
sbbb
ljmp
cmp
icebp
pusha
mov
sbb
xor
insl
xchg
or
dec
pop
insb
into
int3
bound
xchg
inc
das
pop
mov
and
filds
adc
mul
adc
cmp
mov
add
xchg
ds
data16
push
es
pop
add
pushf
jne
dec
enter
lock
pusha
mov
adc
lcall
cmc
iret
cltd
xor
cmc
cmc
jo
and
cmc
jo
mov
inc
je
les
out
movsl
aas
repnz
dec
das
enter
mov
cs
push
sub
fcmovne
stos
call
xor
cmpsb
stos
jnp
fnstenv
fnsave
scas
shll
adc
sub
cmp
js
inc
xchg
mov
pop
mov
je
mov
adc
or
jg
enter
aad
cmpsb
cli
enter
shlb
mov
pushf
pop
cwtl
adc
and
ja
mov
jnp
in
ss
mov
xchg
and
mov
inc
test
dec
mov
sbb
cmp
sbb
and
jl
pushl
das
dec
jmp
imul
or
sahf
adcl
push
inc
xchg
inc
test
jnp
or
sub
inc
negb
xchg
inc
jecxz
sub
lods
jns
lock
fsts
stc
shrl
cwtl
jecxz
sbb
dec
and
dec
xchg
loop
movsb
xchg
sbb
mov
in
lcall
imul
inc
mov
sti
jp
loopne
icebp
in
gs
mov
jle
aas
pop
test
xor
in
ss
add
les
jno
enter
insb
push
loopne
mov
cwtl
mov
and
stc
shlb
and
xor
push
cmp
and
daa
in
adc
fisubrl
dec
adc
mov
push
pushf
xor
adc
mov
roll
lea
cmp
pop
or
jb
das
push
fxam
data16
aam
mov
arpl
pop
shl
in
mov
in
in
or
sahf
movsb
lods
cmp
iret
jns
or
movsl
mov
sbb
je
pop
cld
dec
icebp
xlat
frstor
mov
mov
or
ror
inc
test
fldenv
gs
ljmp
and
xor
push
scas
aad
les
call
push
xor
mov
xlat
mov
xor
push
xchg
or
lahf
add
fdivl
loop
mov
inc
or
pop
push
push
sub
loope
sub
movsl
cmp
inc
xchg
sahf
outsb
into
in
bound
inc
shr
mov
cld
xchg
push
and
es
iret
cmp
or
and
imul
cmp
mov
and
inc
jl
push
and
into
scas
jg
sub
inc
pop
pop
leave
and
in
xchg
sub
mov
add
xlat
scas
sbb
sub
mov
rorl
jg
addb
and
and
aas
pop
add
fwait
add
xchg
setno
inc
pushf
or
dec
add
pop
loopne
sub
aas
subb
cli
inc
xor
clc
popa
cmp
jg
jecxz
scas
mov
sbb
mov
inc
cmp
not
ja
out
and
adc
add
fisubl
pop
cmp
mov
add
idivb
sbb
inc
and
mov
fisttpl
lods
xor
test
and
sbb
add
addl
dec
sbb
jne
add
mull
mov
push
andb
incb
fcmovnbe
imul
sbb
inc
adc
mov
push
xor
jb
dec
add
and
incl
dec
xor
lret
and
and
hlt
fs
ficomps
push
in
inc
mov
pushf
sub
scas
xchg
arpl
sbb
push
cmp
ret
add
out
mov
xor
mov
cmp
int
dec
adc
es
sbb
insl
es
cwtl
lahf
mov
insl
xor
data16
iret
les
int
icebp
xor
adc
out
jmp
cmpsb
mov
mov
in
fst
fisubs
mov
enter
sub
ja
sub
push
ja
arpl
das
jmp
repz
xor
int
popl
fcomps
ret
loop
xchg
inc
nop
mov
rcrl
lods
push
pop
movsb
sub
ror
and
jb
and
call
repz
cmp
sahf
sub
jne
mov
hlt
bound
xor
jns
cs
fs
pop
dec
pop
cld
add
iret
aas
pop
pop
adc
xchg
hlt
ficompl
xchg
jle
add
aaa
inc
adc
lods
aas
xchg
mov
clc
enter
pop
loopne
sbb
or
mov
out
adc
mov
cwtl
mov
or
data16
subl
adc
sub
inc
rcrb
cmp
test
or
stos
and
insb
pop
mov
negl
aad
or
inc
sarb
or
push
adc
ss
cmpsb
sub
test
mov
rol
mov
movsl
test
mov
cmp
ds
clc
fistl
add
mov
icebp
fiadds
andl
xor
imul
jg
pushf
lea
pop
cli
outsb
cmc
pop
in
and
jle
mov
decb
ret
imul
negl
fsubrl
dec
mov
or
ljmp
or
cld
inc
cltd
imul
add
sbb
push
inc
dec
sub
movsl
inc
fstpl
flds
js
stos
imul
and
addl
jo
fbstp
imul
es
lds
out
push
inc
cmp
pop
inc
pop
call
jl
pop
int3
daa
jl
sbb
lret
xor
aas
adc
mov
imul
sarb
xchg
mov
or
and
mov
outsl
adc
cmp
lret
insb
scas
cs
rorl
sbb
testb
ret
mov
mov
jne
jle
lock
xchg
in
out
mov
jns
out
ja,pt
sub
jae
cmp
pop
ret
mov
stos
scas
neg
inc
in
ljmp
insl
or
xor
pop
adc
outsl
aaa
call
mov
dec
jbe
fimuls
jmp
xchg
and
adc
cmc
in
jne
lds
mov
sub
xor
repnz
pushf
test
mov
lret
out
sub
jns
arpl
push
ljmp
inc
jecxz
or
xchg
outsl
mov
add
xchg
mov
je
jb
inc
mov
jne
inc
dec
mov
inc
add
xor
or
iret
aam
leave
ljmp
inc
mov
pop
cmp
sbb
js
cltd
cmpsl
outsl
xchg
lods
lret
add
inc
fadds
jb
test
rcll
mov
jmp
les
ret
mov
stos
out
test
mov
sahf
aas
fdiv
bound
in
lea
mov
test
inc
in
lret
fidivrl
fsub
mov
or
cmc
push
push
jb
sub
jle
fdecstp
add
pop
and
xchg
jnp
sbb
pop
jge
popf
movsl
insl
fimull
xorl
popa
stc
or
xchg
xor
loopne
decb
mov
cmpsl
aam
add
mov
stos
hlt
or
ror
sbb
fiadds
lods
loopne
pop
adc
in
fstl
inc
pop
and
pop
mov
dec
sbb
lahf
fidivl
lahf
cmp
sbb
subl
xchg
fimull
fimuls
pop
loope
lock
jle
arpl
dec
sbb
pop
out
mov
int3
jb
ss
dec
xor
push
aam
mov
mov
shlb
stos
nop
int3
mov
test
fisubrs
addb
out
sub
jge
sub
ja
or
sbb
xchg
cmpsl
push
aam
lods
pushf
xor
inc
enter
xor
push
cmp
fimull
popa
cmp
xor
jo
sbb
repz
xchg
and
out
cmovl
pop
fadds
ficomps
pop
out
jmp
sahf
sub
push
shlb
or
pop
jecxz
mov
mov
mov
push
int
imul
ds
loopne
out
add
mov
dec
adc
aas
addl
cmpsb
or
mov
inc
inc
in
xchg
out
mov
jmp
sti
aam
mov
inc
in
jb
test
jmp
test
in
sbb
sub
xchg
xchg
repnz
inc
imul
int
ljmp
jb
loop
mov
insb
loop
inc
push
sbb
shl
pop
in
cltd
add
je
stc
leave
push
test
push
xchg
roll
int
fisubrl
jle
mov
sbb
ja
mov
xor
sbb
inc
gs
aam
sbb
iret
add
mov
dec
or
dec
fcomp
imul
or
add
outsl
adc
jl
cmp
loopne
pop
jl
mov
ss
aad
bound
adc
inc
add
fcmovb
adc
aam
int
ret
pop
xor
jne
pop
js
inc
pop
or
push
aad
xor
mov
movsl
outsb
cltd
inc
ret
or
repnz
mov
cld
movsl
sbb
outsb
and
jne
cmp
push
mov
fadds
in
xor
stc
dec
xchg
add
shlb
xchg
mov
lock
sbb
sahf
mov
and
xchg
adc
xchg
sub
jnp
sub
xchg
cmpsl
add
push
xor
ret
jo
xchg
insl
pop
mov
and
shll
pop
inc
and
pop
repnz
mov
rorb
jg
clc
sti
hlt
inc
ret
js
push
je
mov
ret
xchg
push
lret
push
jne
add
mov
mov
or
xchg
in
sub
and
mov
mov
sub
adc
push
and
mov
pop
movb
imul
sbb
jnp
in
jmp
fcomp
push
mov
test
loopne
and
dec
add
cmp
xchg
mov
pop
xor
xor
stos
mov
lds
cltd
dec
xchg
sti
std
test
outsl
jbe
orl
adc
sti
cs
bound
jne
push
xchg
daa
or
outsb
or
cmp
std
add
rcll
add
jo
mov
dec
pop
gs
movsb
sbb
inc
adc
adc
mov
dec
addr16
xlat
mov
pop
lock
inc
jae
shrb
lcall
adcb
movsb
jmp
pop
aaa
mov
xor
loop
fdivs
and
cmpl
frstor
dec
test
in
je
dec
sbb
outsl
int
inc
mov
xchg
aam
jmp
and
int3
pop
ss
pusha
sub
stc
out
sahf
mov
test
jmp
inc
arpl
push
fwait
lret
cmp
push
rcrl
adc
mov
push
ret
dec
icebp
cmp
add
xor
fwait
stos
pop
clc
adc
js
sub
pop
jns
xchg
cli
sti
sub
mov
fwait
imul
or
pop
xor
xor
cmc
and
sbb
sbb
decl
call
cmp
sub
mov
insl
lcall
push
or
jae
ljmp
jnp
pop
test
ss
pop
aad
test
out
cwtl
cmp
ror
jmp
cmp
xchg
push
mov
test
mov
add
mov
daa
cltd
jp
and
push
cmp
lea
std
je
shrl
sub
mov
mov
icebp
push
leave
popf
push
pop
pop
inc
ds
outsb
inc
sub
sarl
in
lret
push
sub
xchg
pop
inc
or
mov
lahf
inc
sar
jnp
roll
jmp
dec
inc
or
xor
dec
es
faddl
cmp
addr16
rcrl
xor
inc
jl
push
sub
imul
dec
push
xchg
fwait
daa
lods
arpl
pop
or
pop
cmp
in
push
xchg
aad
jl
push
dec
inc
mov
sub
dec
xchg
add
jbe
mov
divl
mov
divl
pop
inc
ja
pop
jmp
fldl
xchg
pop
loop
push
pop
je
cmc
std
push
inc
inc
aaa
push
mov
jp
inc
or
mov
dec
and
lret
push
lods
aas
xchg
dec
sahf
jl
andl
aad
cmpsb
imul
ficomps
add
incl
mov
mov
mov
imul
push
jecxz
loop
ss
xor
jl
inc
out
imul
enter
lods
outsl
push
cmpsb
jo
and
jae
mov
cmp
iret
push
push
add
inc
out
push
xor
imul
out
lea
js
mov
jno
xchg
test
jmp
mov
sbb
int
idivl
xchg
pop
fs
or
idivb
and
sarl
pop
lock
push
lcall
movsl
dec
scas
je
pop
lods
rol
pushf
inc
ds
push
into
daa
jbe,pt
xchg
adc
sti
adc
pop
lcall
adc
retw
add
insl
sub
xchg
or
adc
fwait
outsl
out
mov
lea
orl
cmp
inc
fnsave
or
repnz
jne
sti
ret
cmp
add
push
pushf
outsb
data16
inc
inc
adc
lods
xor
rcll
rcr
pop
ret
pop
ret
test
jns
pop
mov
adc
shll
outsl
and
or
rolb
inc
mov
popa
popa
mov
xacquire
sub
push
or
lds
mov
es
outsl
push
pop
ja
gs
xchg
out
std
dec
push
or
jo
push
sbb
add
mov
cld
in
mov
sub
scas
jae
ss
add
stos
out
adc
out
push
mov
jo
lods
add
fldenv
xor
add
push
fcoms
imul
jb
sbbb
sahf
fwait
xor
pop
or
insl
fst
lock
frstor
mov
mov
repz
sub
push
idiv
popa
fldenv
mov
sbb
and
mov
call
push
bound
pop
push
adc
add
es
jecxz
test
ret
flds
jns
ja
fs
fisttps
fwait
movsb
add
ja
lcall
jns
pop
pop
sub
sbb
add
movsb
mov
or
xchg
push
dec
fistpll
mov
aas
or
fwait
push
xor
push
xchg
fstps
ror
movsl
cld
jmp
pop
push
repz
outsl
push
add
mov
js
movsb
mov
xchg
pop
mov
sbb
mov
add
dec
cmp
xor
dec
add
push
jne
inc
std
mov
cli
mov
jle
in
call
mov
loope
sarl
imul
sub
cmp
adc
sbb
int
movsl
cmc
addr16
aam
dec
jge
loop
xchg
mov
ja
mov
push
xchg
je
xchg
xchg
out
xor
mov
insl
stos
daa
or
or
cld
pop
sub
or
or
shl
pop
lret
mov
aaa
cmp
sahf
roll
inc
scas
subl
xor
cmp
xchg
test
push
and
fisubrs
jge
xchg
or
es
fstps
insb
mov
pop
in
fbld
mov
push
and
adc
inc
int
sbb
fadds
mov
or
lock
mov
push
leave
into
popf
insl
das
mov
iret
lret
or
and
mov
cmp
mov
ret
cmp
pop
inc
outsb
or
mov
in
dec
dec
xchg
cmp
ja
aad
pop
dec
rorb
cmp
mov
xor
fwait
bound
push
bound
jns
stos
push
test
fsubs
mov
mov
imul
sbb
cmpsb
pop
lcall
hlt
add
xchg
cmpsl
sbbl
add
rcll
mov
loope
cmp
clc
add
inc
imul
icebp
and
mov
jbe
cmc
sub
jns
scas
out
jbe
dec
js
aad
stc
idivb
mov
jmp
add
xchg
push
cmp
inc
mov
inc
ljmp
data16
insb
call
jbe
pop
aas
sub
push
xchg
stc
nop
and
das
adc
xor
cltd
jecxz
cltd
sbb
inc
cs
pop
pop
adc
fildll
orl
jge
dec
sub
insb
pop
clc
and
push
sub
daa
xchg
icebp
xchg
paddw
inc
pop
addr16
sub
xchg
sbb
dec
ficoms
mov
dec
adc
dec
imul
mov
cmp
add
std
mov
xor
mov
jns
sahf
xchg
add
pusha
gs
add
into
mov
dec
xchg
xlat
push
jo
daa
gs
hlt
icebp
mov
das
scas
loop
cmp
xchg
outsb
sub
mov
fwait
dec
mov
and
imul
xlat
push
or
pop
lahf
cmc
jmp
outsb
and
cli
jecxz
sbb
popf
in
loope
adc
sbb
dec
or
in
les
sahf
dec
mov
outsl
cmc
jns
test
mov
out
xchg
or
adc
in
scas
iret
push
dec
adc
pop
mov
cmp
iret
xor
mov
scas
repnz
lcall
and
int
mov
xor
stos
fcomp
cmp
xor
pushf
loopne
mov
push
push
pop
and
mov
sbb
fwait
cwtl
and
xchg
or
push
push
movsb
push
push
sarl
pusha
imul
call
ret
aaa
fst
adc
cwtl
inc
jne
in
mov
outsl
add
out
add
cld
mov
stos
sbb
mov
movsb
push
mov
inc
sub
cmp
enter
mov
mov
cmp
je
cmp
or
inc
push
mov
add
xchg
imul
pop
shrl
popa
push
or
cltd
ror
xlat
and
jl
js
mov
aam
shlb
out
loope
inc
push
mov
scas
fisubs
pop
insb
cmp
dec
mov
cmp
sub
push
subb
insl
enter
rclb
test
xchg
inc
push
fsubl
adc
rolb
xchg
mov
fidivs
bound
cltd
push
pop
adc
mov
and
or
nop
xchg
xor
jl
sbb
mov
adc
ja
and
mov
lds
xchg
jg
in
mov
xchg
adc
mov
das
shll
cmpsl
ja
shr
and
jae
xor
adc
loop
fwait
lock
pop
cwtl
push
inc
pop
lock
into
fst
mov
cwtl
jp
pop
sbb
pop
je
cmp
rorb
test
pop
push
fs
push
xchg
sbb
psubusb
cmp
cwtl
mov
imul
sub
cmpsb
call
sahf
inc
jae
push
dec
sub
add
jl
icebp
movb
push
rorl
pusha
int3
enter
fcomps
cmpsl
lret
lcall
in
sti
jge,pt
orl
add
lods
xor
stos
out
in
hlt
mov
loopne
xchg
mov
shl
xchg
ret
ljmp
sbb
jmp
mov
cs
jecxz
xchg
outsb
mov
push
sub
sbb
sti
sbb
inc
div
lea
mov
sar
xchg
cmp
loop
outsl
cmc
enter
aad
mov
aad
pop
add
cmp
xchg
inc
in
lea
pop
and
sub
pop
out
rcr
lds
jle
daa
in
add
push
cmpsb
or
sti
xchg
push
icebp
jmp
loop
insb
sbb
cld
xor
icebp
js
shll
js
add
dec
imul
loopne
loope
sub
cli
popa
mov
stc
sub
idivb
sbbb
notb
lret
adc
leave
ds
inc
insl
out
cltd
mov
call
push
imul
fsubs
xor
and
push
jmp
adcb
cli
bound
xor
sarl
push
cmpsl
xor
rclb
push
and
lea
in
and
pop
mov
insb
int
cmpsl
out
and
sti
push
outsl
cmp
mov
sbb
adc
lods
add
jno
out
sub
addr16
ss
out
addl
movsl
es
mov
mov
cmp
adc
pop
pop
into
cs
stc
imul
ss
cmp
fistpll
mov
mov
mov
xlat
das
jg
xor
mov
add
push
in
ja
mov
cmp
cltd
scas
test
imul
mov
adcl
mov
mov
mov
das
mov
adc
movsl
std
add
cld
addr16
push
fnstsw
xor
xchg
sub
xor
imul
and
aas
push
bound
xor
cmp
mov
mov
lcall
jmp
fimuls
mov
sub
add
pop
push
xchg
fcoms
int
sbb
ror
popf
xchg
out
aaa
scas
dec
jne
adc
dec
repnz
sbb
cwtl
mov
js
mov
dec
test
testl
cmp
aad
sub
lods
xor
movsb
cmp
test
loop
add
add
out
xor
mov
cld
jle
ret
lret
mov
leave
adc
icebp
push
outsl
icebp
fimuls
sbb
jo
sahf
arpl
jnp
pop
push
rorl
or
in
inc
sub
ret
jg
subl
add
jb
mov
xchg
addr16
add
jl
ret
inc
sbb
loop
js
push
mov
or
jg
sahf
xchg
outsl
sub
xchg
fld
mov
cmp
lock
sub
outsl
in
fucomp
insb
js
test
xchg
dec
stos
xchg
mov
pop
imul
loopne
insb
xor
add
jbe
sbb
sbb
inc
sbb
aam
stc
ljmp
lahf
add
mov
stos
push
ss
mov
jge
cltd
sbb
dec
out
or
aaa
and
push
sbb
lds
lret
push
pop
add
shlb
cld
jnp
stc
int3
je
pushf
pop
pop
repz
cmp
rcl
hlt
sbb
dec
mov
lods
and
outsl
mov
hlt
adc
push
mov
xor
lods
loop
jns
push
imul
push
jbe
mov
ja
mfence
push
test
mov
mov
add
mov
mov
flds
push
sub
lea
xor
hlt
loopne
pop
test
loopne
pop
mov
or
je
or
stos
aas
in
push
arpl
jo
ljmp
sub
cmp
into
sbb
jmp
pop
les
pushf
pusha
in
jmp
rclb
jno,pn
test
stc
movsb
addb
xor
insb
sahf
jae
xor
sub
lret
cmp
sbb
add
mov
lret
push
adc
or
fcmovb
pop
fstp
out
and
xor
pop
or
iret
lret
sbb
adcl
int
mov
add
and
out
call
push
inc
cmp
in
pop
aad
negb
mov
inc
cmp
xchg
push
notb
xchg
fmul
cmp
inc
repz
adc
adc
xchg
push
push
in
das
repnz
mov
mov
aam
adc
int3
inc
mov
mov
add
mov
dec
ss
push
inc
inc
std
out
stos
aaa
jns
mov
je
int3
mov
test
mov
out
adc
js
test
adc
mov
mov
and
rcll
dec
xchg
and
int
call
xchg
pop
xchg
xor
jle
in
cmp
xchg
shlb
pop
outsb
jmp
xchg
push
ja
cmpb
lea
and
movsb
popa
aad
inc
sbb
adc
adcb
ret
sbb
movsb
inc
shr
pop
loopne
daa
cmc
in
pop
mov
dec
into
sub
inc
fmull
sarl
scas
cmc
mov
clc
mov
add
mov
mov
pop
cmc
fldenv
adc
imul
popf
mov
adc
popa
and
call
xorb
dec
sbb
inc
add
cmp
mov
stos
fcmovu
lret
ljmp
mov
stos
pop
jl
push
ret
outsb
inc
adc
icebp
clc
dec
jge
pushf
fs
jmp
sub
in
lods
cmp
ficomps
add
add
scas
mov
fistpll
push
xchg
dec
jmp
fdiv
jo
lock
mov
pop
xchg
jbe
dec
fadd
jmp
movsl
xor
lret
daa
push
jno
push
test
push
rorb
xor
xchg
test
int
imull
pushf
repz
int
das
icebp
mov
pop
aas
jb
testl
add
mov
int3
xlat
jae
pusha
cmpsl
stc
jg
xchg
out
pop
cmpsb
add
add
push
popf
and
adc
les
inc
jg
push
stos
push
cmp
xchg
xchg
in
ficompl
jmp
pop
pop
imul
and
mov
fs
in
sub
sub
lret
daa
jb
sub
popf
sbb
pop
shr
cmp
cmp
inc
or
push
sub
sti
ja
lcall
inc
mov
ret
lds
or
cmc
xchg
add
call
mov
mov
mov
pop
cmp
repnz
xor
jns
add
pop
jne
mov
nop
imul
or
cmp
cmp
jno
xchg
pusha
insb
mov
xchg
out
dec
out
dec
xchg
lock
sbb
and
mov
fadds
mov
mov
cmp
inc
mov
pop
dec
and
mov
adc
loopne
push
repz
dec
mov
imul
xchg
and
repz
lea
sbb
je
mov
add
ljmp
into
xor
lahf
jmp
addr16
and
lods
pop
jge
jbe
push
adc
mov
jno
pop
push
int3
lcall
cmp
pop
cmp
addr16
mov
dec
rcrl
xor
addl
sbb
shr
sub
inc
in
xchg
xlat
cmp
or
mov
cmp
popa
dec
fldz
adc
inc
and
or
out
pushf
pop
cmc
pop
push
dec
aas
adc
js
mov
jp
xlat
idivl
and
and
aas
out
in
cmpsb
int
push
adc
pop
cmpb
pop
pop
dec
data16
pavgb
mov
fstl
cmp
or
int3
or
lret
je
fcomps
pop
imul
bswap
inc
and
push
shl
mov
sbb
mov
mov
jg
add
icebp
sbb
pop
scas
pop
je
push
push
fstpt
sub
xchg
fwait
sub
adc
movsb
mov
or
sbb
in
xchg
adc
pop
gs
das
pop
mov
lret
push
int
xlat
adc
mov
sub
mov
pop
and
cld
and
and
sbb
sbb
in
push
cld
cld
sahf
and
inc
ret
inc
pop
outsl
jae
mov
xchg
cltd
sarl
mov
sub
inc
cld
mov
xor
and
push
cli
mov
sbb
cwtl
add
insl
sub
xor
cmpl
pop
data16
fidivrl
inc
fdivrs
cmpsl
xchg
lods
mov
pop
aaa
mov
and
cmp
xchg
adcb
cld
or
pop
and
cmovl
or
out
add
xor
jns
out
imul
pusha
test
das
mov
mov
sub
adc
pop
popf
sbb
cmp
fwait
cld
out
cmp
xchg
and
es
inc
in
jp
mov
out
adc
pop
loope
xor
jge
inc
aam
push
rcl
xchg
movsl
loop
jp
aad
push
out
outsb
andl
icebp
push
movsb
icebp
imul
aaa
lods
cwtl
mov
inc
push
leave
stos
ds
lahf
sbbb
sub
ret
outsb
push
inc
mov
cld
mov
shl
ss
call
fs
cmpsb
jg
hlt
lcall
pop
cmpsb
stos
dec
add
push
push
xor
xchg
int3
sbb
fwait
out
subl
ss
fdivl
or
es
pop
je
xchg
inc
push
push
hlt
pop
test
dec
and
lret
mov
push
jns
cmpsl
jg
inc
mov
clc
pop
repnz
ds
pop
imull
jbe
xor
popa
mov
lret
and
fmuls
pop
stc
pop
scas
insb
push
pop
inc
imul
imul
ficoml
stos
jl
mov
fwait
xor
popf
mov
mov
insl
dec
call
cmp
ret
mov
fidivrs
and
dec
adc
inc
scas
lea
push
fidivs
daa
inc
sbb
add
and
dec
in
mov
xchg
cmc
pop
xchg
rol
mov
rorl
or
ficompl
xor
inc
out
fnstenv
dec
fs
loope
push
jl
insl
fldl2e
lcall
cmp
ss
daa
enter
sbb
mov
rorl
je
outsl
clc
aam
push
xchg
pop
ret
into
and
lcall
es
mov
mov
xor
test
mov
xor
sub
pop
fistpll
mov
fldenv
sub
cmp
int3
mov
push
iret
sbb
int
jge
add
cmp
mov
add
stc
ror
xchg
outsl
jmp
outsb
sahf
cmp
insb
mov
xchg
insb
jp
push
and
or
jns
repnz
lahf
call
mov
jle
mov
pop
nop
jge
fnclex
and
adc
mov
xchg
mov
pop
dec
addl
mov
sbb
in
jl
mov
test
fwait
adc
mov
je
and
or
je
jg
decl
adc
jnp
add
jbe
push
loop
or
sti
jno
xchg
mov
xlat
mov
cltd
jl
dec
stos
add
pusha
pusha
mov
rcrb
fcomi
roll
repnz
insl
imul
cmc
lods
cvttps2pi
mov
xchg
mov
cmpsl
test
aas
push
cwtl
shll
dec
sub
xchg
dec
xchg
fisttpl
icebp
ss
sbb
sbb
pop
mov
dec
mov
fmull
fistpl
fcomps
rcrb
rolb
sbb
pop
les
pop
or
cli
dec
out
fdiv
mov
mov
in
daa
insb
decl
fisubs
dec
lods
sbb
xchg
dec
jge
div
or
xchg
xchg
add
shrl
push
insl
mov
pop
cmpsb
call
aaa
add
pop
or
loop
hlt
adc
in
call
ret
nop
bound
mov
dec
lea
jb
dec
mov
cmc
fwait
and
push
add
dec
sarl
and
mov
mov
data16
mov
and
icebp
push
int
ficoms
shrb
stos
or
addr16
addr16
sub
fimuls
push
mov
call
adc
test
mov
cmp
insl
dec
push
sti
dec
imul
fdivl
jmp
jp
scas
and
repz
sarl
mov
scas
adcl
jge
dec
mov
rcr
out
test
daa
jmp
pop
jo
dec
call
sub
dec
into
in
and
fcompl
jo
xchg
out
ljmp
adc
jle
mov
into
movsl
sti
cli
inc
jl
push
cmpsl
xchg
fnstsw
push
or
pop
sbbb
mov
stc
gs
xlat
scas
jns
fiaddl
xor
push
or
push
sbb
movsl
push
lods
test
mov
out
shrl
and
pop
jb
add
addr16
lea
subl
dec
sub
lods
jne
push
lahf
mov
sbb
repz
xchg
arpl
sbb
sti
jae
xchg
cmp
insb
popf
sbb
xchg
jg
mov
outsl
cmp
add
jmp
data16
sbb
test
mov
mov
fsts
sbbl
xor
pop
push
jb
shrl
fiadds
mov
shl
mov
imul
pop
pop
out
jmp
and
inc
or
pushf
testb
in
pop
inc
daa
fistps
rolb
push
xor
les
adc
in
std
jl
testl
pop
inc
test
jbe
inc
xor
mov
jbe
xor
outsl
mov
jge
inc
fiaddl
cmp
outsl
xor
dec
in
in
data16
aas
push
push
out
mov
movl
les
jg
sbb
cmp
stos
xchg
mov
push
push
jecxz
in
push
dec
add
in
repz
incl
flds
inc
add
jmp
xchg
cmp
lcall
mov
adc
ret
sti
cmp
call
sbb
daa
pop
jno
xchg
xor
push
add
out
shll
cmp
dec
xchg
mov
das
xchg
mov
inc
cltd
dec
aam
shrl
jnp
inc
adc
push
test
clc
aas
xchg
jmp
test
ja
jne
dec
xor
pop
faddp
loope
fistps
adc
cld
cmp
addr16
sub
sub
push
bound
insl
mov
aas
dec
aaa
arpl
push
les
lret
in
push
pop
push
popf
inc
and
test
outsb
push
xor
dec
in
add
pop
daa
rcrb
into
clc
xchg
or
je
jae
cwtl
cld
enter
aam
pop
stos
sbb
mov
pusha
sti
pop
jns
adc
xor
add
jmp
aam
lret
sti
xchg
mov
dec
adc
mov
sbb
or
mov
dec
popa
mov
pusha
lock
out
adc
inc
push
inc
sbb
mov
jl
cmp
cld
nop
sti
loop
jl
aad
js
pop
mov
dec
xchg
aas
mov
cmp
mov
sbb
mov
adc
in
jnp
aaa
ja
js
adc
mov
scas
pusha
sbb
xor
hlt
xor
aas
xchg
lods
insb
and
and
ret
sahf
sub
adc
sti
fimull
and
fcompl
adc
mov
or
lahf
or
cmp
or
adc
addr16
call
dec
and
sbb
xchg
rcrb
jo
popa
bound
mov
sub
std
ljmp
bound
inc
jae
lods
add
ja
or
mov
and
cli
cli
pop
icebp
xchg
cltd
mov
cli
and
xchg
mov
xchg
sbb
or
add
lahf
mov
loopne
xchg
into
sbb
cltd
push
pop
sbb
dec
mov
add
pop
and
sbb
push
loope
xlat
or
mov
orb
les
popa
mov
cmp
dec
dec
gs
jmp
add
sub
out
mov
shl
mov
ficoms
jno
inc
adc
xor
adc
iret
inc
lock
push
sub
mov
add
bound
imul
hlt
in
ss
jmp
inc
rolb
fcomi
mov
out
push
mov
sub
pop
mov
test
lock
xchg
add
adc
or
dec
std
pop
lock
dec
mov
cmpl
shlb
fcoml
push
stc
or
outsb
test
ret
iret
fsub
fimuls
mov
mov
dec
out
out
outsb
xchg
cltd
mov
into
imul
mov
push
mov
js
add
sub
sub
cwtl
mov
iret
mov
lret
push
mov
out
filds
jo
lods
push
adc
dec
fstl
stc
xchg
out
sub
lea
test
pop
mov
mov
pop
data16
fstl
fildll
aaa
xor
ret
push
aas
xchg
loope
cmp
faddl
test
cmp
fisubrs
add
cli
sub
adc
adc
mov
popl
out
dec
mov
stos
es
mov
mov
dec
pusha
mov
add
cmp
cmp
sub
jmp
sbbl
xor
pop
out
cltd
adc
pop
jge
jl
dec
lock
sub
lock
outsb
sbb
test
enter
jmp
lret
mov
dec
pop
or
stos
xchg
loopne
movq
lds
xlat
lret
mov
stc
add
push
fnstsw
add
call
sahf
dec
fisttps
fsubrl
push
jns
imulb
mov
pop
test
add
mov
pop
sbb
insb
push
mov
add
mov
cmc
popf
cmp
outsl
sti
daa
cmp
cli
xor
jae
and
push
dec
and
loope
popf
push
loop
cmp
sar
push
and
mov
mov
in
xor
sbb
scas
imul
xchg
mov
addr16
ja
es
xlat
arpl
or
push
pcmpgtb
pushf
cmp
shl
fwait
or
push
adc
and
cmpsl
inc
mov
lods
and
les
cmp
push
or
enter
cwtl
push
adc
imul
add
push
fcmovb
sbb
or
cltd
ja
aas
push
and
shl
jno,pn
push
mov
cmp
push
cltd
xor
mov
mov
addr16
and
lods
push
sbb
xorl
mov
stos
or
fcmovnbe
mov
xchg
push
sbb
fists
mov
outsl
sub
jno
pop
adc
mov
xor
mov
xor
xor
data16
push
ret
lea
fcomp
push
mov
xor
pop
mov
adc
roll
xor
repz
andb
push
mov
loop
insb
pop
aas
pop
in
shll
dec
xchg
insl
adc
jge
int3
movsb
sbb
sbb
mov
cmpss
jno
fstps
std
adc
cmpsb
sar
xor
push
dec
add
repz
les
push
dec
pop
loope
mov
ror
mov
mov
mov
pop
jp
xor
cmp
and
es
cltd
int3
jne
add
or
push
stos
lods
or
cmp
dec
and
cwtl
sbb
pop
hlt
gs
scas
add
sub
dec
test
pushl
popa
xchg
jno
sub
or
xchg
pop
in
jg
push
mov
lcall
sti
cmc
push
test
xchg
xlat
sbb
pop
jg
xor
in
pop
out
inc
out
mov
mov
lods
aaa
mov
popf
popf
je
fisubrs
xlat
imul
cwtl
add
lods
mov
stos
shlb
xchg
f2xm1
sub
and
mov
fistpl
fdiv
mov
int3
pop
jecxz
sbb
pop
ret
push
push
mov
dec
jl
neg
inc
call
insb
pusha
dec
rcl
cmp
or
ret
gs
rclb
inc
jae
jmp
int3
lcall
mov
mov
sbb
sbb
add
ret
js
dec
inc
jp
pushl
dec
bnd
ja
ja
loope
mov
loope
out
icebp
add
scas
add
popf
push
jo
es
fisttpll
test
scas
xor
or
shrb
dec
into
hlt
mov
xor
mov
push
inc
movsl
imul
hlt
test
enter
xor
fisttps
push
xor
test
in
push
sbb
xlat
subl
mov
jno
cmp
dec
push
sbb
cltd
add
mov
cmpsl
cmp
add
hlt
ret
push
and
cmpsb
arpl
xchg
xor
push
jg
outsb
xor
loop
xor
inc
idivl
repz
inc
lahf
lods
insl
subb
add
cld
les
mov
stos
insl
jo
mov
addr16
inc
jno
jmp
cld
cmp
xchg
call
lock
sbb
arpl
inc
push
push
xchg
pop
repnz
adc
test
orl
jge
clc
into
mov
call
test
or
fcoml
movsb
ret
add
subl
and
movsl
cld
pop
aam
imul
push
mov
out
push
fwait
in
and
stos
dec
dec
cmp
xor
mov
scas
sbb
jmp
mov
sbb
push
loopne
cmp
add
inc
fistps
out
cltd
inc
add
mov
add
pop
and
dec
push
and
popf
rolb
sub
sti
andl
xchg
es
pop
popf
mov
and
popf
xchg
lret
sti
ss
imul
sub
mov
bound
xor
cmp
or
mov
fildll
stos
pop
cmp
rcrb
jae
xor
repz
lret
fwait
cs
and
mov
neg
mov
cmp
sbb
xor
nop
movsl
in
mov
dec
sbb
and
mov
ret
cmp
push
cwtl
repnz
outsb
push
sbb
loope
fdivrl
lret
mov
nop
xchg
inc
mov
pushf
popl
xor
fnsave
mov
inc
dec
cmp
sbb
mov
orl
mov
or
outsl
xchg
mov
pop
push
add
jbe
inc
sub
mov
mov
jae
mov
inc
sub
adc
mov
adc
in
pop
add
xchg
scas
scas
ljmp
fdivr
sti
imul
addr16
stos
fcoml
sbb
and
sbb
divl
fistl
in
pushf
dec
insl
xor
mov
pusha
xor
and
inc
pop
fistpl
cmp
sub
mov
lcall
out
das
loopne
add
aaa
negl
sbb
jg
fsts
test
cwtl
dec
mov
or
or
in
imul
cltd
cld
fstpl
add
ljmp
jle
stos
out
dec
outsb
mov
push
xorb
sub
ret
pop
daa
lahf
rclb
cmp
rclb
in
mov
mov
stos
shl
or
xchg
mov
lods
int
testl
mov
adc
adc
cmp
inc
movsb
addr16
sbb
imul
adc
or
test
inc
arpl
shll
mov
dec
and
mov
repnz
out
clc
mov
filds
cs
xchg
lcall
xlat
ljmp
mov
xchg
xchg
fstps
sub
sub
adcb
jl
cwtl
mov
pop
test
dec
in
lods
push
push
push
or
push
clc
cmp
mov
adc
push
pop
stos
mov
jmp
add
loop
popl
and
or
xchg
jg
push
cwtl
fst
out
and
shr
add
imul
fcom
mov
rcll
mov
adc
insb
add
inc
dec
insl
dec
sbb
mov
mov
xor
pop
int3
ss
outsb
xor
fwait
dec
push
jnp
test
sub
push
scas
enter
out
push
repnz
xor
or
lods
mov
ret
mov
popf
out
push
test
addr16
test
dec
push
mov
loopne
out
stos
xchg
push
inc
mov
jp
mov
mov
adc
leave
shr
mov
pop
cmpsl
aam
dec
repz
and
jno
push
add
dec
leave
nop
sbb
fists
mov
loop
popf
sbb
test
inc
orb
testl
aam
or
add
xchg
sub
imul
popa
or
cmp
outsb
lock
xor
jg
pop
adc
pop
cli
imul
sbb
stc
push
repz
inc
or
cmp
or
fwait
mov
push
cld
pop
mov
xchg
movl
push
lahf
and
rclb
xchg
popl
call
aas
push
enter
and
jb
dec
cld
mov
jg
rep
ret
insl
ret
fstps
mov
stc
popf
movsl
mov
pop
adc
add
enter
addr16
or
xchg
lods
sub
sub
sbbl
repnz
outsb
clc
pop
jne
mov
mov
adc
fdivr
xchg
out
mov
mov
push
cwtl
add
sub
and
divl
jae
push
cmp
out
cmpsb
inc
dec
sub
ffree
add
push
inc
pop
fdivrl
cmpsb
sbb
shll
loop
pusha
movsb
dec
jle
divb
loop
inc
and
pop
repnz
test
fisttpl
pop
mov
fdivl
outsl
push
mov
fisttpl
jns
gs
jae
cmp
pop
jge
lahf
and
jno
or
mul
leave
ss
sub
andl
jp
jp
push
lahf
fidivrs
inc
xor
push
popf
xchg
sub
push
fcmovbe
pop
cmp
push
push
xor
dec
add
sbb
adc
cmc
xchg
roll
es
or
sar
imul
shrb
inc
inc
pop
push
push
ret
pusha
mov
lods
jmp
sub
push
mov
inc
sarl
jne
leave
roll
notb
mov
lock
pop
insb
jne
mov
push
std
mov
decb
lea
and
arpl
cmc
xor
and
stos
dec
fscale
outsl
fmul
jb
mov
popf
xor
xchg
outsl
or
cld
pushf
adc
aas
mov
je
insl
subb
push
adc
add
push
sbb
xchg
mov
imul
adc
lret
xor
push
and
rclb
fdivr
inc
insb
pop
pop
cltd
sbb
or
lret
daa
lcall
loop
inc
nop
fmul
sbb
shll
push
incb
dec
push
mov
cld
test
sub
jb
push
add
fidivs
pushf
stos
mov
lcall
aam
cli
in
fcompl
mov
mov
jnp
lods
fildll
imul
xchg
pop
cmp
ljmp
shlb
shrl
add
sub
aam
cmp
into
sub
aad
jmp
push
add
mov
pop
jle
xor
cli
or
aaa
sbbb
movsl
mov
add
and
das
lods
leave
std
dec
sbb
add
mov
fld
cmp
mov
pusha
pop
jmp
sub
jb
repz
adc
repz
mov
xchg
push
mov
into
jmp
cwtl
ds
mov
lret
mov
sarl
add
fs
pop
push
icebp
pop
jl
scas
xor
call
sub
pusha
sub
pop
dec
inc
stc
jne
lcall
xor
addr16
dec
addr16
lock
aaa
jne
and
mov
cmp
lods
mov
fidivs
test
outsl
push
push
inc
pushf
jae
push
lret
popf
loopne
aad
inc
jp
sub
js
dec
stc
repnz
shll
ljmp
leave
sar
loop
pop
mov
call
rcll
stc
mov
aam
xor
jae
idivb
or
fidivrl
cmp
cmpsb
xchg
mov
jo
ss
stos
pop
adc
lret
sahf
pop
fisubs
sbb
push
jecxz
cmp
add
mov
cli
adc
lock
shlb
pop
mov
mov
aad
pop
in
dec
arpl
lret
and
out
pop
in
fisubs
call
popa
aaa
adc
push
sub
sub
cmp
test
pop
stos
jle
push
cltd
mov
xor
mov
xchg
aad
push
xor
xchg
icebp
adc
sahf
inc
add
mov
fwait
mov
push
in
or
repz
ret
popa
outsb
mov
cld
aam
push
cli
sbb
mov
add
push
mov
ret
sbbb
sbb
pop
cmp
pop
imul
sbb
adc
xorb
cwtl
adc
jge
xchg
aaa
outsl
cld
dec
dec
and
idiv
xor
dec
pop
out
push
mov
addr16
das
mov
lds
sub
adc
lahf
inc
shlb
lcall
cltd
aaa
stos
sbb
or
fsts
ds
inc
insl
sbb
pushl
push
ror
mov
inc
xlat
in
xadd
or
mov
aad
mov
sub
loopne
add
push
std
push
fcomi
imul
mov
jae
outsl
dec
inc
cs
jmp
pusha
pop
scas
pop
add
aad
negb
sti
js
and
sbb
mov
movsl
adc
push
das
call
ja
push
xchg
addr16
mov
in
jge
fists
pushf
mov
cmp
out
jecxz
pop
and
mov
xor
xor
mov
neg
pop
mov
add
lock
push
xor
scas
mov
shlb
jbe
xchg
xor
dec
add
pop
add
enter
out
xor
add
dec
or
clc
inc
jge
roll
les
test
pop
aad
push
pop
icebp
fildll
imul
or
or
dec
stos
pop
imul
sti
mov
popf
outsb
inc
jp
dec
test
test
sar
fs
scas
lcall
and
mov
mov
adc
or
xorl
sub
pop
in
fbstp
rcrb
into
scas
push
mov
pop
dec
adc
cwtl
push
rcrl
aaa
push
lds
data16
and
jp
ljmp
xor
pop
in
lahf
dec
jnp
cmp
std
sub
iret
mov
lods
pop
mov
cld
js
ficoms
int
aaa
dec
repz
push
xchg
aaa
inc
dec
or
jae
icebp
insb
mov
cmp
push
mov
lret
stos
sub
clc
pop
cmp
lods
pop
loope
cltd
mov
popa
push
lods
outsb
lods
dec
xchg
inc
ret
cmpsl
test
jbe
shlb
sbb
jecxz
mov
cmpsl
xor
popa
jnp
xchg
int3
mov
add
jnp
popa
std
lods
adc
arpl
pusha
fcoml
js
or
jae
loop
sti
jns
data16
xchg
enter
add
push
inc
adc
cmp
adc
fcoms
int3
push
addr16
adc
lds
xor
xor
xor
je
push
adc
dec
inc
stos
scas
lcall
fisttpl
data16
insl
mov
dec
jbe
int3
mov
mov
shl
xchg
loope
sub
pop
cmp
dec
ret
dec
mov
test
mov
imul
inc
in
jp
imul
cmp
loopne
add
stos
adc
std
dec
outsl
push
dec
hlt
aad
jbe
aas
fstpl
cmpsb
jns
or
sub
cmpsb
xlat
in
push
inc
lea
daa
shrb
add
push
pop
xlat
outsb
in
mull
out
xlat
test
fimull
mov
sahf
mov
fwait
loope
sub
pop
pop
je
jecxz
add
pop
and
push
sahf
push
loopne
add
mov
sarb
mov
adc
clc
adc
mov
jmp
mov
adc
push
popa
inc
popf
xor
jns
and
and
popa
add
shll
add
ds
fwait
call
or
stos
mov
mov
pop
mov
xor
iret
pop
scas
andl
xor
add
sbb
push
inc
push
nop
mov
mov
dec
mov
jle
mov
rcll
add
xchg
dec
jecxz
lds
xor
dec
pushf
enter
sarl
rolb
popf
or
mov
outsl
repz
jmp
pop
mov
and
test
xor
pop
fldl
cmp
pop
movsl
or
loopne
jg
dec
cld
mov
pop
movsl
xchg
add
or
cmp
les
lret
add
dec
or
add
pushl
push
fimuls
pop
loop
adc
xor
repz
stos
adc
pop
call
inc
mov
add
mov
and
lods
dec
imul
loop
sub
jne
sbb
lcall
decl
adc
dec
stos
cwtl
sbbb
inc
jnp
dec
mov
mov
dec
push
xchg
mov
mov
mov
std
mov
test
movsl
repz
mov
pusha
inc
sub
mov
arpl
repnz
cmp
fists
int
push
std
push
adc
xor
pop
shl
scas
inc
or
mov
enter
in
push
cmp
mov
or
hlt
sbb
push
push
jp
xor
dec
pop
or
movsb
pop
xchg
pop
jo
sub
lds
int3
xor
xor
lock
add
stc
mov
cmp
fadds
inc
mov
ficoms
sbb
sub
pop
push
jmp
mov
mov
test
std
mov
cmc
pop
mov
fnstsw
jo
nop
and
sub
pop
xchg
fwait
jl
je
mov
push
shl
daa
aam
sti
adc
test
pop
mov
rolb
inc
sarb
and
xchg
push
filds
jno
js
push
push
jne
sbb
dec
or
mov
data16
or
test
popa
lret
dec
cmpsb
fiadds
mov
xorb
leave
adc
shlb
push
imul
enter
mov
push
bsf
adc
stc
mov
les
stos
mov
add
pop
adc
in
in
cltd
sbb
fdivrl
push
out
rcrb
hlt
in
aad
fcmovnu
fsubrp
std
movsb
jae
adc
sbb
in
pslld
xor
out
mov
sarb
shrl
insb
mov
xor
orl
and
iret
cmpsb
out
sub
leave
and
push
insb
addr16
add
cmp
mov
or
cmpsb
call
dec
adc
das
mov
jnp
hlt
aad
jae
jmp
add
lahf
scas
xchg
and
and
mov
stos
and
pop
leave
in
test
and
xlat
loope
jp
xorl
inc
ss
and
sahf
imul
sub
sub
cmpsl
cmc
movsl
cmpsb
dec
jae
fisttps
xorb
inc
inc
fs
aas
mov
rorb
add
loopne
cmpsl
inc
mov
repz
stos
jge
push
in
pop
cmp
daa
pop
jp
jns
lods
cmp
stos
cltd
inc
push
xchg
mov
fs
xchg
sti
lods
cli
xor
push
cwtl
mov
lret
adcl
imul
mov
mov
aaa
in
or
outsb
jae
add
mov
daa
mov
fadd
dec
sbb
mov
movsl
insb
dec
push
pop
lea
mov
jbe
pusha
jecxz
push
pop
mov
dec
cmpb
add
add
dec
loopne
hlt
scas
scas
xor
mov
lock
or
lea
mov
ss
int
in
inc
lock
fcoml
and
jg
insl
inc
repz
sbb
push
subl
xchg
ja
push
and
dec
pop
xor
aaa
xchg
mov
pop
stos
mov
sbb
adc
stc
jbe
mov
inc
push
sub
int3
test
push
loopne
and
mov
les
inc
push
fmuls
mov
and
mov
enter
inc
jns
fsubr
jp
lds
jbe
scas
push
lea
in
and
jae
lss
dec
and
cs
dec
mov
dec
push
xchg
xchg
sub
mov
mov
add
inc
lock
sub
sbb
mov
cmpsl
push
lret
mov
ljmp
andb
push
test
call
inc
add
mov
int3
add
inc
cltd
xor
xor
jno
pop
lds
cmpsl
xchg
and
push
fs
stos
xchg
or
sbb
scas
fmul
mov
jbe
shll
or
ljmp
xchg
imul
jmp
sub
cs
xlat
dec
inc
adc
mov
sti
cmpsb
sti
fisttpll
inc
int3
pop
adc
cmp
enter
cmp
mov
popf
ficomps
cltd
addr16
mov
idivb
xor
mov
in
dec
rclb
mov
xor
lret
dec
enter
jecxz
pop
sbb
sbb
lods
fmuls
push
push
fstpl
pushf
cmp
push
or
out
mov
in
cmp
in
frstor
pop
adc
fdivl
mov
xchg
xchg
daa
jnp
in
stos
cmp
mov
stos
xchg
nop
std
ss
ss
orl
sbb
xor
pop
movsl
sbb
mov
loop
mov
jecxz
mov
sub
xchg
lcall
sbb
dec
arpl
push
sarl
dec
dec
xchg
dec
xchg
or
fidivrl
enter
mov
pop
xor
sti
imul
cmp
xchg
push
hlt
jecxz
mov
pop
xchg
jecxz
loopne
jl
cmp
fs
pop
mov
xchg
or
out
and
sahf
js
outsl
jg
aas
enter
stos
pop
mov
sub
pop
nop
data16
loopne
and
aam
sbb
or
or
cwtl
mov
ds
gs
sarb
test
dec
adcb
inc
fidivs
rorb
inc
push
mov
int3
push
and
pop
or
jecxz
lret
jb
aad
scas
lock
sub
and
and
adc
imul
mov
cld
fnsave
jb
push
int
pop
adc
nop
jl
jmp
cmp
cld
sub
sarb
add
bound
stc
pand
movsl
iret
xchg
fnstenv
outsl
movb
mov
lock
mov
or
aaa
call
cli
mov
adc
jb
mov
adc
and
or
or
add
mov
jl
mov
adc
push
ja
pushf
fbld
and
mov
loopne
cmpsl
and
faddl
dec
cmpsl
std
or
jae
loopne
int
and
imul
pop
ja
cmpsb
dec
jo
xchg
jno
xchg
sub
inc
add
loope
or
aad
mov
or
fsubl
pop
fnsave
xchg
test
push
pop
and
mov
xor
xor
shll
xor
pop
push
push
mov
popf
mov
rcl
add
cmp
test
xor
pop
xchg
rcrl
jne
in
mov
pushf
push
test
mov
notb
add
pushf
in
add
loope
xor
out
mov
outsb
adc
jecxz
jb
mov
and
xor
fs
fldenv
hlt
imull
jb
fucom
mov
pushf
clc
pop
jnp
insb
mov
divl
jnp
cli
adc
sub
mov
test
inc
call
push
sub
jg
mov
dec
insb
pop
ja
sbb
in
xchg
push
jbe
mov
scas
pop
cmp
or
pop
push
in
xchg
fstps
jecxz
mov
data16
inc
cmc
ss
lds
push
shlb
mov
xor
adc
stos
xlat
inc
fwait
divb
xchg
mov
xchg
imul
test
xchg
push
lock
mov
iret
or
addr16
xlat
fistl
out
fs
js
adc
or
daa
orl
xor
lods
mov
mov
xchg
xchg
ss
add
out
adcl
inc
rcll
rcll
loopne
mov
lret
xchg
adc
mov
or
mov
sub
fildll
in
clc
cmp
push
leave
mov
les
cmpsb
in
xor
cs
jae
push
test
test
repnz
lods
xchg
add
jp
mov
push
cmp
ss
nop
and
std
mov
nop
mov
jmp
mov
mov
in
xchg
pop
jno
pop
aam
xchg
pop
jae
adc
push
mov
and
sub
or
mov
jns
cld
jecxz
ljmp
dec
mov
and
in
leave
push
mov
test
out
in
mov
cmp
jae,pt
mov
push
cmpl
xchg
inc
fs
jns
mov
push
imulb
das
pusha
mov
lcall
aam
sub
ficompl
rol
mov
jns
add
aas
imul
jo
jp
in
jecxz
fwait
xor
and
xlat
ljmp
cmc
xchg
outsb
and
mull
mov
js
testb
out
cmp
fucomi
adc
cltd
iret
or
shll
imul
jge
push
int3
add
les
mov
popa
inc
mov
or
clc
mov
cmpsb
cmpsb
jmp
std
lea
lods
es
mov
jge
sbb
xchg
aaa
or
or
adc
pop
dec
xchg
add
test
cmpsb
push
mov
cmp
jmp
cltd
pusha
xchg
flds
dec
jle
dec
inc
ds
rorb
adc
out
shr
cmpb
pop
sahf
leave
mulb
or
add
adc
lea
add
jmp
nop
outsl
in
mov
inc
in
push
push
in
add
add
lahf
cmp
ret
inc
cld
mov
insb
fcompl
jb
inc
dec
push
sbb
out
or
adc
add
mov
mov
sub
push
xor
or
mov
push
leave
outsb
push
sbb
inc
sub
fidivrs
fidivl
fld
jns
mov
js
leave
adc
pop
push
dec
out
pop
jne
mov
mov
shr
push
icebp
jno
xor
xor
fistl
and
insl
pop
push
shlb
xor
dec
lahf
in
fdivrs
pusha
out
sarl
in
test
aaa
push
enter
fadd
pusha
cmp
inc
shrb
ds
add
gs
add
inc
ret
roll
int
mov
mov
sub
inc
inc
inc
repz
lods
in
add
or
imul
or
cmovle
push
inc
inc
push
in
fmuls
fs
in
pusha
fs
rcl
pop
inc
das
add
sti
jno
lods
aam
adc
loop
mov
loopne
in
cld
scas
addr16
sub
jg
lcall
sub
hlt
lahf
ret
fbld
gs
mov
lcall
cmpsl
mov
jg
cltd
outsb
lods
adc
fstl
or
mov
icebp
jo
fwait
imul
sbb
mov
iret
fs
add
insb
push
js
cmp
fstpt
mov
lcall
repz
mov
fdivp
and
mov
insl
outsl
or
push
stos
repz
inc
jo
xchg
jle
mov
sahf
imul
into
nop
pop
popaw
pusha
cmp
sahf
mov
push
inc
push
mov
mov
fwait
pop
and
xor
jno
and
xor
lcall
popf
sahf
push
adc
in
jg
ds
jbe
divb
dec
push
fstpt
ds
loopne
cli
in
push
out
jecxz
mov
xchg
dec
jg
mov
pop
dec
into
jbe
jmp
xor
cmp
int3
in
xchg
mov
sti
sub
xchg
mov
rcrl
add
leave
orl
jno
dec
aad
xchg
mov
sub
outsb
mov
jl
lods
sub
popf
icebp
ficoms
hlt
mov
fmuls
mov
in
jge
sub
sbb
ret
lahf
pop
ljmp
stc
xchg
aas
lods
cmpsl
mov
xor
mov
jecxz
cmpsl
push
push
xchg
in
es
cld
clc
cmc
pop
bound
mov
push
sub
shrl
adc
cmp
stos
lahf
xchg
push
test
out
jge
decb
dec
adcl
test
sbb
mov
mov
add
mov
loope
cwtl
cmp
inc
push
nop
pop
jne
aad
jecxz
fwait
add
out
sub
idiv
sbb
add
push
cwtl
in
jo
pop
pop
mov
adc
jl
leave
sbb
pop
les
rcll
ficompl
aas
popa
add
dec
push
das
sbb
pop
xchg
aam
jge
popa
sbbb
arpl
iret
je
call
xchg
notb
mov
into
inc
sub
cmp
rolb
jmp
dec
jne
adc
and
scas
mov
pushl
sbb
pop
outsb
sub
or
mov
imul
aas
lock
pop
addr16
sub
xchg
icebp
sub
mov
ds
pop
cmc
mov
sub
ljmp
cli
mov
and
pop
add
shrl
mov
ja
inc
inc
in
xor
and
aas
mov
xchg
ret
rcll
inc
mov
repz
jmp
jo
mov
jbe
jge
xor
dec
mov
in
mov
xor
inc
flds
mov
sub
outsb
clc
pop
dec
pushl
adc
in
sub
dec
dec
mov
lods
push
cmc
xchg
mov
je
enter
pushf
xor
lea
jo
mov
push
fistpl
sbb
mov
loopne
test
js
inc
sahf
enter
jmp
ret
jns
push
or
mov
aad
sahf
dec
faddl
data16
insl
adc
scas
push
inc
xchg
outsl
sbb
lds
cli
outsl
dec
pop
out
sub
std
lds
aas
cli
pop
dec
icebp
xor
and
dec
idivb
sub
test
ret
add
pop
xchg
stc
dec
stc
shll
fldt
cmovae
fs
mov
popf
int3
sbb
sub
sbbl
sbb
pop
enter
adc
jmp
lock
mov
mov
sub
inc
mov
pop
cmp
sbb
lock
mov
pop
xor
es
sbb
popa
cli
popf
sbb
sbbb
jae
lea
adc
jle
mov
inc
adc
xor
scas
xor
push
cli
imul
push
jb
sub
mov
inc
gs
repnz
xchg
pop
jno
lea
bound
xchg
nop
xchg
jg
in
bound
xchg
fwait
xchg
or
aad
lahf
mov
inc
push
mov
hlt
or
sub
loop
inc
ffree
std
das
repnz
pop
enter
cmp
xlat
gs
adc
lods
push
push
or
hlt
cltd
arpl
mov
ja
xor
jae
std
xchg
shlb
cwtl
clc
xchg
kxnorb
je
call
push
sub
and
fnstenv
mov
push
pop
and
adc
pop
xor
imul
pop
clc
ljmp
pop
loopne
and
aam
mov
pop
dec
loop
mov
out
imul
push
int3
mov
mov
jmp
in
mov
push
xchg
gs
xchg
pop
mov
adc
fst
dec
sbb
subps
and
and
push
xor
add
xchg
jb
sub
cmpsb
push
inc
xor
addb
shrb
movsl
sahf
icebp
insb
fsts
cmp
xor
inc
data16
out
sbb
cs
push
dec
sbb
std
mov
mov
mov
loopne
inc
mov
lcall
jnp
ja
add
ss
cmp
jae
pcmpeqd
scas
bound
xlat
stc
gs
fwait
dec
ret
xchg
mov
out
in
sar
or
push
sbb
loop
in
mov
aad
aam
lea
leave
sbb
mov
dec
mov
test
sbb
cmpsb
shlb
fwait
cmp
sub
imul
lcall
addr16
hlt
mov
xchg
push
jmp
in
inc
popf
test
adc
outsl
inc
mov
sub
mov
xchg
add
push
outsl
push
pop
or
sbb
inc
je
aad
pop
or
mov
pop
pop
pop
jle
call
dec
pusha
sub
stos
fisttps
xor
ds
mov
inc
sub
jl
adc
xorb
lahf
inc
out
das
mull
xor
xchg
lret
xor
imul
pop
shrb
push
cwtl
and
pop
xchg
push
sbb
xor
mov
jno
jl
mov
outsl
mov
xor
or
dec
and
jmp
dec
stc
sub
sub
test
xor
pop
in
adc
jbe
inc
mov
jl
dec
mul
mov
enter
popf
out
push
or
pop
dec
imul
ljmp
cwtl
ret
xor
aaa
dec
icebp
pop
setae
xchg
pop
xor
mov
cmpsb
push
xchg
aas
in
call
sbb
inc
sbb
jge
lds
pop
xchg
gs
mov
loope
pushf
shlb
adc
jge
rclb
movsl
lods
pop
push
lcall
jmp
jb
and
loopne
lock
jno
push
mov
xchg
stc
repnz
jnp
movsl
jp
clc
imul
xchg
fs
sbb
leave
xchg
jbe
orl
test
lret
fs
xlat
or
xchg
imul
pop
sti
pop
outsb
pop
cmp
mov
mov
lret
dec
cmp
jno
push
jae
mov
mov
sbb
dec
nop
pop
iret
lret
call
ljmp
jle
addr16
inc
mov
xorb
inc
xchg
cmp
inc
jle
jnp
mov
hlt
test
data16
add
aas
jecxz
dec
insb
xor
dec
cmc
mov
add
and
aaa
adc
xor
xchg
test
dec
adc
clc
sub
cs
in
or
inc
sub
stos
mov
insb
xor
xchg
xchg
repnz
adc
adc
pushf
scas
daa
xor
mov
and
loopne
sar
aad
js
cmc
mov
cmp
popa
adc
pop
dec
cmp
mov
scas
jp
mov
jne
ror
sbb
imul
leave
mov
pop
mov
hlt
andb
xor
outsl
dec
mov
lods
cmpsl
pop
mov
sbbl
shll
scas
addr16
int3
adc
rol
inc
xchg
mov
call
out
mov
push
inc
sub
cld
inc
ret
jg
mov
and
sahf
ret
scas
int3
push
push
sbb
ljmp
dec
aaa
xor
pop
xlat
sbb
pushf
sti
mov
jnp
jb
out
add
jecxz
add
stc
shrb
xchg
imul
xor
xchg
mov
loop
mov
inc
dec
xor
stc
sbbb
lods
test
cltd
jns
nop
mov
xchg
cmpb
dec
mov
jp
testl
inc
add
sbb
or
insl
cmp
inc
xchg
mov
add
jnp
in
nop
cld
int
lea
inc
lret
repnz
jnp
push
mov
cmp
xchg
xor
shlb
and
cmp
jae
pmulhuw
xchg
shll
xlat
mov
push
pop
dec
aam
sub
push
pop
aaa
mov
xor
ss
popf
mov
in
in
in
dec
sub
jo
fldt
cli
push
adc
bound
sar
push
lock
dec
fwait
das
js
lods
insb
sub
adc
ds
ss
adc
inc
pop
cmc
dec
std
rclb
test
shl
adc
adc
int
pop
xchg
pop
pop
jno
outsl
and
pop
sub
mov
jb
ret
movsl
adc
push
aaa
int
aaa
popa
sahf
movsl
mov
inc
jb
loopne
iret
adc
shl
es
mov
out
sub
int3
loop
bound
push
sbb
pop
push
jmp
push
inc
insb
adc
js
mov
sub
sarb
add
pusha
mov
in
pop
sbb
adc
fsub
clc
fsin
fdivrl
sub
inc
jnp
pop
fdivrl
mov
inc
sbb
add
xchg
addr16
xor
inc
flds
jle
jbe
shr
stos
lods
jmp
negl
fs
mov
sbb
pusha
xlat
and
add
in
mov
pusha
add
push
add
mov
push
adcb
or
sub
mov
push
xchg
or
cmp
adc
mov
push
cld
dec
mov
popa
adc
cmpsl
add
or
jbe
lret
pop
aaa
cwtl
int3
iret
lret
mov
call
mov
xchg
je
movsb
ss
popf
scas
mov
xchg
sbb
sahf
mov
adcl
loop
cmp
jecxz
sarb
add
pop
out
dec
inc
add
add
cmp
negl
dec
fwait
out
cmc
mov
sub
das
fisttps
mov
ds
insb
lahf
fucomi
hlt
mov
push
push
add
push
addl
xchg
inc
fsubrs
loope
in
sbb
inc
xor
shrl
pop
and
push
in
mov
lea
imul
jmp
icebp
leave
outsl
push
push
jmp
leave
sub
pushf
sar
mov
jmp
mov
mov
xor
jg
leave
out
stos
hlt
mov
test
rcl
aad
insb
jnp
mov
sbb
hlt
push
jle
xor
fidivl
ret
mov
cwtl
sbbl
repnz
mov
jecxz
add
les
jo
lahf
popf
push
inc
out
daa
mull
add
jo
arpl
into
xchg
adc
xor
adc
mov
jnp
fistl
popf
imul
mov
mov
and
pushf
out
in
clc
into
enter
sub
adc
data16
ja
dec
shll
inc
fidivl
scas
push
mulb
sahf
jp
adc
aad
adc
add
scas
add
cmp
mov
mov
ret
movsl
pop
inc
divb
pop
lods
cld
out
into
stos
push
popf
sbb
pop
sbb
mov
mov
sub
and
mov
roll
xchg
add
call
mov
push
fdiv
xchg
sub
adc
idivb
stos
jo
jmp
cs
cmp
mov
xlat
xor
adc
adc
nop
dec
icebp
jle
add
jp
imul
cltd
iret
jnp
mov
push
xchg
pop
aad
outsl
gs
iret
ffree
xor
sbb
pop
lods
gs
insl
jmp
xor
mov
in
nop
loop
insl
loope
iret
enter
in
xchg
lahf
jg
cmp
inc
push
cmp
shll
jmp
cmpsb
lods
mov
xchg
test
mov
mov
or
in
repnz
or
sahf
mov
enter
pop
decb
push
jmp
xor
mov
pmaxub
push
hlt
and
sbb
iret
cld
shrl
add
jp
pop
out
jb,pn
and
xchg
andl
cmp
cmpl
imul
xor
sti
daa
jmp
inc
movsb
shl
push
pop
int3
enter
ja
mov
and
insl
mov
loope
pop
jge
adc
testb
jge
sbb
lods
int3
scas
xor
aas
mov
add
add
xchg
xchg
cmp
sbb
xor
mov
xor
mov
fnstsw
ja
loopne
dec
rolb
out
xor
icebp
cmpb
pop
push
shll
mov
inc
mov
into
fsubp
jno
fcomps
test
push
sbb
addr16
lcall
movsl
in
shl
jl
subb
push
pop
push
sub
mov
inc
lcall
inc
push
in
in
dec
push
addb
xchg
and
cmp
inc
cs
out
mov
inc
mov
mov
test
pop
or
pusha
cmp
int3
cld
inc
pop
popa
and
pop
out
jnp
addb
out
lods
jmp
push
clc
pop
inc
jno
loop
dec
and
pop
sub
or
sub
out
hlt
sub
movsb
cld
sbb
lods
out
mov
push
sub
mov
add
jno
ror
push
jns
in
negb
lods
in
adc
inc
std
mov
fisttpl
inc
mov
daa
loop
add
jmp
mov
icebp
xchg
pop
sahf
imul
ret
sti
pop
popa
xlat
fs
lret
test
test
popa
or
mov
notb
mov
cmp
push
or
cmpsl
insb
ljmp
push
jno
jnp
push
mov
push
add
adc
loopne
cli
inc
cmp
inc
add
cltd
sbb
sbb
fwait
jae
xor
pop
inc
mov
or
mov
divl
rcrl
pop
xchg
add
cmp
insl
or
lea
mov
add
jmp
int3
sti
inc
fdivr
mov
mov
in
fsubs
push
loop
out
pop
fdivl
mov
jbe
adc
push
enter
pusha
cs
stos
xchg
push
outsb
loop
mov
rcrb
sbb
jb
fiaddl
mov
add
push
push
in
das
xchg
call
cs
aaa
push
std
nop
adc
mov
mov
in
xor
lock
incl
push
push
roll
push
arpl
dec
pop
lea
stos
sub
daa
inc
jns
cltd
sbb
test
xor
lods
testb
aam
mov
je
js
imul
mov
inc
stos
addr16
lea
out
in
test
movsb
sbb
or
outsl
jmp
insl
pop
push
add
dec
add
leave
insl
inc
push
repz
stc
lcall
fisttps
popf
xor
inc
jge
loopne
mov
pop
stos
loop
adc
adc
mov
cmp
adc
ss
pop
push
in
lods
les
clc
js
inc
jne
xchg
dec
jl
cmp
pushf
insl
test
mov
inc
and
add
jb
cli
bound
dec
pop
mov
cmp
sbb
fdivrl
call
ja
shll
js
inc
mov
call
fwait
stos
lret
or
cwtl
jmp
mov
jmp
ds
adc
cmpsl
outsb
das
pop
orl
mov
data16
sub
and
fs
icebp
pop
cltd
dec
mov
dec
or
mov
and
test
xchg
pop
insl
mov
stc
mov
sub
lret
or
out
mov
adc
mov
aas
hlt
jne
outsb
xchg
sub
dec
inc
scas
mov
jns
xchg
mov
fmull
xor
pushf
dec
gs
jle
inc
out
mov
addr16
jecxz
imul
mov
sub
int3
aad
xchg
loope
sub
jne
mov
cmpsb
movsb
sub
mov
fldenv
jo
call
js
or
and
inc
mov
fldcw
imul
cld
ljmp
idiv
test
mov
cld
add
aad
ret
jno
cmp
push
inc
movsl
xor
mov
imul
mov
sbb
or
into
iret
scas
pop
xchg
in
pusha
outsl
push
enter
xor
shl
sbb
mov
in
lea
in
push
or
cli
out
sti
mov
les
jle
dec
xchg
call
movsb
jb
pop
lock
jle
or
jae
or
in
cmp
cmp
mov
sub
mov
lahf
push
xchg
in
cmp
jne
clc
mov
xchg
icebp
cmp
clc
add
fistps
ljmp
scas
mov
aas
jp
jb
jo
inc
es
inc
pop
dec
iret
movswl
pop
loop
xor
andb
cmp
xchg
bound
dec
int
inc
pusha
adc
rcrb
push
jecxz
mov
mov
adc
in
bswap
mov
jg
sti
outsl
cmp
dec
in
inc
daa
xor
psubw
cmp
jb
fs
ret
bswap
aad
xor
popa
sbb
addr16
jbe
jns
hlt
ja
mov
pop
and
into
mov
inc
cmp
out
test
jo
and
push
push
lahf
ljmp
add
sub
dec
gs
psrlq
mov
push
jge
pop
dec
dec
cwtl
add
push
lcall
cmp
sub
jns
outsb
xorb
incl
into
inc
inc
test
sahf
xchg
xlat
pop
adc
ret
push
addr16
xor
xor
xor
ficoms
add
and
mov
cmp
test
jne
inc
mov
sahf
jns
xor
icebp
sti
jmp
xor
aaa
mov
fwait
push
scas
mov
scas
or
xchg
adc
jmp
xchg
in
addr16
mov
mov
js
pop
ds
repz
adc
lods
test
stc
xor
icebp
fiaddl
push
pushf
lock
xorl
fwait
mov
or
jge
and
push
or
fmuls
hlt
cmpsb
or
or
jge
dec
push
and
int3
inc
pop
inc
inc
adc
fisubrl
out
stc
xchg
xchg
cmp
adc
xchg
call
psubq
iret
add
adcb
fwait
es
inc
or
pushl
or
adc
addr16
in
adc
loopne
jno
add
shl
and
shll
cmp
or
mov
sub
jge
pop
add
pop
fisubs
js
adc
cmpl
les
fsubrp
pushf
test
mov
sbbl
mov
fwait
cmc
push
jge
sbb
sub
in
adc
lods
push
mov
popa
popf
pop
jae
lock
mov
lods
jo
ror
repz
cmpsl
sahf
std
push
and
mov
shll
popa
mov
sub
stos
or
in
cmpsb
inc
pop
cmp
or
lcall
jle
jnp
sub
sub
cltd
cmc
and
gs
mov
fsubrl
inc
lret
out
sub
cmpsb
cmpsb
filds
add
sub
jb
adc
xchg
insl
ret
mov
enter
fstp
fwait
ljmp
dec
sub
sbb
movsl
les
xchg
pop
in
lret
mov
lcall
sbb
pop
js
mov
mov
fisubrl
push
push
sub
imul
push
clc
dec
jae
jno
js
sbb
sti
stos
xchg
aaa
movsb
mov
lods
popf
push
dec
movsb
inc
ret
push
test
rorl
out
mov
adc
in
sbb
in
pop
jae
outsl
sbb
stos
popl
sbb
jp
mov
and
ds
mov
mov
dec
fistl
dec
cmp
cmpsb
es
mov
stos
aas
movsl
aad
xor
ss
jge
push
dec
jl
inc
rorb
inc
daa
iret
cwtl
jnp
sar
sub
mov
cmp
inc
loopne
insl
aad
dec
cmc
fstps
mov
xor
mov
inc
imul
jp
pop
jae
push
push
mov
fimuls
sub
jecxz
addr16
ljmp
add
ss
fidivrl
add
enter
and
stc
cwtl
stc
xor
repz
mov
ljmp
inc
lcall
aad
call
add
das
call
jle
jns
enter
inc
fmuls
in
pop
xchg
pop
mov
cmpsl
mov
mov
or
rcll
pusha
sub
icebp
test
xchg
xchg
rolb
pop
in
mov
jg
daa
xchg
pop
jb
cmpsl
test
pop
insb
or
xlat
xchg
mov
movsb
into
xor
adc
mov
cmp
adc
dec
pop
mov
sbb
cmc
aaa
mov
push
ljmp
lcall
mov
leave
adc
mov
cmpb
xor
push
mov
sub
sbb
cmc
dec
stos
push
clc
cli
sub
repz
ja
or
mov
add
call
cmp
mov
loop
sbb
test
ja
sbb
add
mull
xchg
rol
push
std
inc
inc
sarb
jle
pop
inc
sub
icebp
in
pusha
sbb
ds
scas
scas
in
ror
shrl
inc
pop
pop
shll
out
adc
mov
xchg
xchg
lcall
or
mov
hlt
stos
outsl
mov
mov
mov
cwtl
mov
mov
sbb
or
mov
out
insb
lods
inc
pop
jae
dec
adc
fidivrl
dec
imul
es
sub
adc
xchg
sub
sub
mov
cltd
fwait
paddw
push
xor
push
loopne
cwtl
in
and
jns
lret
cmc
repz
push
stos
push
lret
mov
clc
sub
div
dec
mov
shll
aam
xchg
sbb
mov
pop
xchg
rol
or
inc
and
sbb
push
xorb
adc
and
mov
push
fldt
stos
sbb
sbb
mov
push
sub
stc
mov
icebp
add
fdiv
pop
jb
mov
pop
ret
jl
xchg
push
div
pop
push
les
sub
data16
inc
loop
shrl
loop
mov
jne
hlt
sub
or
pop
insl
ret
es
cmp
cmp
xor
pop
inc
push
inc
lods
jecxz
push
ss
jl
push
add
in
add
jae
sub
push
loop
faddl
popl
cmp
stc
lods
test
sbb
jmp
cs
fwait
lret
jb
dec
stos
loopne
mov
ret
cmp
push
addb
jns
jg
sub
cwtl
pop
sub
stos
sbb
push
in
jnp
rcrl
cmp
cld
and
ffree
xchg
or
inc
or
mov
fnstcw
adc
fcomps
inc
lret
iret
aas
pop
cli
jg
sub
cmp
sbb
pop
mov
jno
push
fisubs
mov
out
das
and
ljmp
lock
and
decb
jnp
lds
fmul
test
and
stos
xchg
jns
mov
inc
je
repz
in
clc
mov
xchg
jp
stos
sub
pop
jge
addb
lods
cmpsb
imul
mov
sub
mov
mov
pop
sub
pop
and
leave
cwtl
add
in
mov
adc
lcall
mov
adc
in
sub
enter
xchg
mov
in
cmp
sub
leave
inc
fwait
lods
nop
sub
mov
iret
subps
xchg
push
and
cmpl
nop
push
mov
xorb
notl
mov
lahf
jl
arpl
cld
int3
shl
rcll
sarb
repz
sbb
fcomps
and
pusha
and
sahf
jge
or
lods
movsl
int
jp
js
mov
ljmp
xor
sbb
add
pop
aas
icebp
dec
push
sti
sbb
aas
cmovo
push
call
adc
push
repnz
fs
into
push
mov
mov
stos
mov
jns
jecxz
pop
jnp
mov
enter
fistpll
cmp
or
insb
inc
mov
cmp
sub
pushf
push
sarl
adc
icebp
xor
and
and
je
push
adc
ss
xor
push
and
adc
adc
and
ljmp
cmpsb
mov
jp
add
mov
xchg
and
sbb
scas
int3
out
jl
insl
arpl
pop
jmp
and
sbb
pop
push
adc
dec
lret
and
mov
mov
xchg
mov
add
popf
fcomi
lret
out
repnz
cmpsl
int
into
jo
inc
mov
dec
mov
xor
pop
add
out
mov
cmp
add
push
cli
imul
pop
frstor
jo
ds
inc
mov
outsb
cmpsl
mov
push
lcall
inc
mov
inc
scas
cmpsl
push
cmp
in
push
lcall
and
dec
ljmpw
jp
sahf
dec
fsubp
addb
lcall
mov
outsb
testl
or
subb
iret
int3
cmp
jg
das
ret
xchg
xchg
push
movsb
xchg
enter
cmp
or
pop
es
add
mov
sub
cmp
fisubrs
lahf
fidivl
cmp
jg
dec
mov
mov
aad
dec
sub
gs
lock
xchg
cld
out
or
inc
pop
xor
xchg
mov
dec
subb
out
test
and
or
call
lahf
inc
push
cltd
mov
add
cmp
ret
ret
push
inc
push
mov
lret
popa
push
jge
xor
pop
ficompl
mov
in
push
xlat
shrb
lahf
xchg
cli
ja
fbld
cmp
cli
loope
test
push
push
xor
shl
ret
sbb
dec
xor
outsb
xor
push
pop
or
cmpsl
push
jl
loopne
cmovp
push
nop
add
pop
lret
enter
sar
jo
and
dec
mov
mov
sub
fcomps
out
push
ret
shlb
xor
insl
movsb
cmc
push
sub
or
pop
sbb
cmpl
sahf
movsb
push
mov
add
popf
sbb
sahf
mov
in
push
mov
ds
mov
mov
nop
mov
jl
fldl
lahf
mov
mov
inc
mov
adc
xchg
insl
sbb
pusha
xor
jl
fadd
sub
lcall
and
mov
aam
or
fsubs
pop
add
push
cld
pop
and
push
cmp
and
hlt
ret
aaa
and
sbb
ror
push
jl
cwtl
cmp
xor
add
aas
ds
imul
outsb
jmp
mov
inc
daa
rorl
xor
add
mov
jecxz
sub
inc
in
arpl
mov
mov
test
mov
xchg
mov
pop
adc
loopne
push
and
pushf
gs
daa
jp
xor
or
adc
sbb
and
push
daa
test
insb
push
cmp
xor
lock
fwait
push
repz
loopne
lahf
fadds
sub
sbb
imull
mov
jbe
inc
jl
jecxz
lretw
pop
cmpsb
in
lds
outsl
pop
ljmp
les
cmp
dec
sbb
lahf
mov
mov
pop
xor
cmp
mov
push
add
mov
pushf
cmp
stos
fisttpll
lods
ljmp
ret
aas
arpl
aam
mov
jae
sbb
rorl
leave
fs
cli
xchg
add
mov
sbb
daa
mov
imul
dec
adc
aas
mov
movsb
inc
sub
push
aam
lock
sub
xchg
pop
jae
imul
dec
enter
test
stos
mov
mov
sub
icebp
mov
jbe
pop
or
inc
leave
insb
insl
repz
js
negl
mov
scas
mov
mov
roll
movl
pop
and
cltd
int
mov
sti
push
or
inc
dec
mov
mov
push
cltd
pminub
test
mov
sub
out
les
mov
icebp
mov
jbe
pusha
push
pop
xchg
cmp
or
xchg
stc
gs
sub
les
lret
mov
xchg
icebp
sbb
lock
shlb
bound
pop
pop
pushf
jbe
cmpsl
cmp
jp
jp
or
jp
sub
cmp
add
cmp
mov
test
outsb
dec
sbb
pop
mov
decb
ficoml
cli
sarb
sti
xchg
nop
adc
jo
jns
sbb
push
mov
clc
pop
inc
ss
jecxz
scas
mov
inc
and
inc
jae
inc
testb
cwtl
lret
jbe
rcrb
or
subb
inc
in
lea
jae
xor
jg
pop
scas
cmp
push
adc
mov
inc
ret
ds
mov
lret
xor
pop
xor
mov
cs
mov
dec
and
sahf
pusha
in
cmp
or
dec
mov
mov
pop
and
lods
out
add
daa
push
movsb
mov
xchg
push
add
das
jg
sbb
mov
xor
xchg
cld
cmp
rol
sub
add
test
insb
cmpsb
push
xchg
push
xchg
pop
pusha
sbb
and
pop
cmpsl
ljmp
xor
pop
adc
lcall
jg
dec
cmp
clc
repz
mov
scas
fcmovnu
jle
shll
fiaddl
xchg
icebp
aas
clc
inc
es
roll
xor
adc
negb
sbb
mov
in
out
scas
cmp
test
mov
adc
inc
adc
sbb
arpl
arpl
mov
push
into
ja
mov
inc
imul
push
xchg
shll
jp
sti
lods
cmp
cwtl
enter
xchg
aam
negl
stos
push
in
rclb
lods
dec
test
ds
mov
dec
shlb
sub
addr16
pop
nop
xchg
sbb
test
jnp
xor
jg
sti
rorl
sub
ret
sub
insl
loope
xor
bound
jge
dec
push
stos
sub
jp
adc
test
rclb
je
imul
dec
sti
pushf
or
xchg
repz
jno
sbb
mov
fsubrp
mov
dec
daa
push
mov
orb
add
scas
ficomps
out
mov
sub
push
cmp
push
test
mov
pop
cmp
xchg
in
cmp
cmp
fisttpl
jbe
mov
andl
cmpsb
js
ja
nop
dec
clc
loope
mov
mov
sbb
push
push
in
sbbb
mov
dec
sbbl
ljmp
xor
stc
jae
out
or
jae
inc
test
pop
push
mov
pushf
shl
hlt
cmp
sub
int3
jmp
pop
int
movsl
das
popa
lock
loope
jge
push
leave
jae
pushf
mov
fistl
pop
pop
jecxz
mov
std
fiaddl
ja
test
mov
scas
std
add
push
jmp
xchg
xchg
xchg
clc
push
in
pop
dec
loope
stos
xor
or
jbe
push
jmp
incb
incl
dec
lret
int
sub
and
xchg
cmpsl
fiaddl
mov
cmp
xor
repz
pop
push
xchg
in
adc
sub
ret
shlb
mov
xor
unpcklps
add
or
cmpsb
cltd
xchg
in
loopne
mov
inc
mov
add
ss
mov
push
xor
jnp
pop
scas
incb
sub
xor
and
xor
sbb
inc
mov
jae
popa
out
mov
call
inc
out
pop
jmp
adc
xchg
dec
scas
and
scas
mov
aad
iret
add
fistpl
jbe
sub
mov
jg
stc
into
push
popf
xor
mov
rep
lock
lahf
repz
shlb
nop
mov
push
adc
push
in
pushf
dec
xchg
lock
sub
mov
rcl
imul
mov
sbb
in
sbb
add
jle
xchg
push
push
cmp
pop
adc
mov
inc
daa
loop
xchg
jno
inc
sar
movsl
mov
xchg
push
sbb
mov
add
ret
xchg
sub
xchg
dec
push
cmc
lcall
jbe
fstpt
clc
mov
xor
leave
cmpsb
sbb
mov
push
popa
inc
inc
mov
jmp
pop
or
xchg
mov
or
sahf
jecxz
pop
movsb
and
scas
jg
mov
mov
dec
call
or
xchg
test
push
mov
mov
jnp
add
in
imul
mov
inc
scas
mov
lock
loopne
mov
jb
pop
aad
or
xchg
mov
xchg
arpl
cmove
or
fistps
js
insb
cmc
push
testb
jo
mov
push
pop
out
arpl
pop
jnp
push
or
sbb
mov
adc
or
jb
addr16
adc
or
fiadds
sti
mov
or
in
bswap
hlt
dec
xchg
add
imul
xchg
xchg
jb
push
sbb
adc
or
movsb
idivl
jne
fistl
jo
orl
jae
pop
jns
test
cld
stos
push
mov
jle
sub
cli
roll
lea
push
andb
insl
mov
xchg
push
popf
ret
lods
mov
test
in
dec
xchg
inc
or
cld
xor
je
scas
test
jecxz
pop
into
data16
sub
push
faddl
out
mov
jne
nop
jl
ret
aam
fdiv
mov
sahf
mov
dec
ret
jg
mov
inc
jge
inc
xchg
xchg
lds
das
inc
jns
daa
xchg
repnz
sbbl
out
out
jb
xor
and
sahf
xorb
imul
adc
mov
jne
pop
jg
add
lret
jmp
and
leave
pop
jno,pn
ss
das
es
xchg
fwait
mov
sbb
out
sub
jmp
fildl
cmpsl
pop
push
inc
outsl
fsubrp
aam
stos
xchg
les
xchg
gs
push
jae
sahf
xchg
gs
cmpsb
sbb
lea
test
cmp
inc
xor
cs
add
pop
popa
lods
fbld
dec
and
lar
cltd
sbb
push
xor
xchg
fimull
xchg
subb
mov
push
pop
rorb
inc
dec
mov
lea
xor
lods
mov
push
mov
dec
movsb
daa
dec
inc
dec
sbb
and
popf
or
pop
es
push
inc
cli
cmp
mov
xchg
les
or
pop
cmp
aad
outsb
lock
pop
nop
stos
adc
stos
imul
mov
addb
push
cmpsb
rcl
lock
jae
ja
and
jecxz
lods
pop
daa
jno
mov
loope
and
jmp
sbb
cs
nop
sahf
add
mov
int3
jle
pop
les
clc
mov
mov
imul
stos
leave
int
push
jno
push
pop
xor
in
pop
popa
and
insl
pop
dec
pop
dec
cmp
mov
mov
push
mov
dec
cs
loop
add
cmpsl
movsb
int
leave
add
and
out
inc
fldt
jmp
sbb
cmp
and
daa
loope
pop
mov
mulb
popf
inc
incb
inc
push
xchg
lret
pop
dec
push
inc
sub
xor
xchg
adc
push
push
out
into
sbb
lds
sub
in
insl
shll
mov
rcll
aaa
dec
dec
fdivrs
push
xor
xlat
cmp
fidivrl
vunpckhps
or
jmp
ret
aas
mov
and
mov
cmp
daa
mov
ja
addr16
data16
mov
mov
pop
inc
push
or
cmp
fs
pop
sub
mov
addl
roll
das
and
lds
push
xor
rorl
sub
lea
push
adc
or
scas
orl
jo
cmp
xchg
jb
inc
mov
cmpl
and
mov
mov
push
sbb
ds
mov
jo
call
les
in
push
sbb
les
test
dec
sbb
mov
mov
jnp
rolb
hlt
cmpsl
push
test
stos
sbb
pop
or
icebp
ret
cmp
dec
mov
mov
sbb
leave
sbb
ja
adc
cmp
ds
loop
cli
fcoml
testl
inc
decb
out
loopne
mov
dec
into
cmp
negl
and
xchg
xor
testl
js
rcr
aad
test
aam
je
adc
mov
xor
inc
sbb
movsb
lods
inc
push
outsl
or
cmp
mov
out
daa
rclb
push
shrl
add
sub
cld
xor
jbe
je
filds
nop
mov
scas
or
fsubr
fldenv
daa
mov
popl
sti
es
dec
add
insl
cltd
adc
add
mov
movsb
lret
inc
pavgw
clc
mov
pusha
inc
pop
or
lret
jbe
sbb
icebp
and
inc
mov
pop
cld
icebp
dec
jae
mov
in
rcrb
cmp
sub
push
outsl
cwtl
lods
cmp
adc
frstor
jle
xor
jae
movsl
sbb
or
int
cli
push
lret
test
xchg
jle
sahf
mov
pop
and
jle
insb
mov
fcomps
and
or
or
sub
and
inc
inc
dec
in
mov
test
push
dec
mov
outsl
jbe
push
insb
cmp
adcl
or
jecxz
xchg
mov
fists
xor
pop
jo
sub
outsl
jmp
dec
jo
xchg
ds
xor
jge
inc
dec
mov
pop
notl
add
lds
xchg
rolb
hlt
lock
mov
mov
addl
xchg
mov
xorb
push
push
push
sbb
xchg
mov
pop
add
push
js
jmp
xor
or
adc
push
dec
mov
out
lods
std
nop
sbb
fisubrs
nop
xchg
enter
jecxz
stc
xor
test
incl
mov
popa
inc
lods
sbb
jecxz
pop
mov
add
jnp
push
repz
cld
repz
pop
in
inc
fldcw
dec
cs
mov
adc
push
add
jbe
mov
mov
add
lret
mov
jne
jg
and
jb
xor
into
out
ret
sbb
mov
jno
out
popf
roll
dec
lods
fwait
in
xchg
xchg
mov
test
imul
push
popf
mov
sbb
inc
xor
mov
daa
cmc
and
sub
jns
jnp
cmc
sbb
adc
mov
imul
mov
inc
aad
inc
fwait
mov
push
cmp
lret
pusha
mov
or
adc
shll
jns
fstl
jae
je
cmc
inc
jno
ljmp
dec
cmc
cmp
clc
pusha
das
cmc
add
imul
or
push
inc
jo
stc
mov
test
sub
rcrb
ret
fdecstp
mov
repz
push
or
sarb
rclb
in
push
mov
test
push
and
arpl
push
cmp
mov
js
jecxz
outsb
lea
pop
sbb
mov
test
adc
push
push
dec
sub
lcall
cmp
and
loope
sub
mov
xchg
mov
pop
mov
and
imull
loope
ret
lcall
jge
xchg
fcmovu
xchg
repz
pop
sub
and
es
mov
adc
outsb
repnz
xor
fmuls
jnp
mov
add
add
repz
xchg
daa
cmpsl
mov
cs
xchg
lods
int
enter
jp
cmc
mov
sub
cli
ja
dec
mov
mov
mull
inc
aad
movsl
add
sub
mov
jnp
dec
imul
pop
cltd
adc
int
call
incl
ds
push
sub
ret
ret
dec
jae
lock
fstpl
xchg
mov
sub
sbb
fcompl
jl
mov
fldcw
mov
bound
dec
fsubs
adc
nop
jno
or
mov
popa
or
sub
shrl
test
xor
mov
sbbl
and
add
icebp
rcrl
rcrl
xor
icebp
dec
bound
inc
mov
rcrl
jg
decl
fcom
or
xlat
or
aam
mov
mov
dec
or
mov
mov
fdivl
push
shl
popf
ds
dec
xor
sti
pushf
push
lods
es
cmp
addr16
inc
dec
add
dec
jb
das
xor
pop
pop
push
test
hlt
or
andb
xchg
and
scas
push
ret
mov
lret
iret
outsb
das
lret
loopne
leave
push
dec
push
out
xor
mov
xchg
pop
test
adc
push
bound
js
jb
or
or
shlb
pushf
cmp
mov
or
sqrtps
dec
and
mulb
inc
out
sbb
mov
or
in
in
flds
leave
push
or
das
mov
ret
jbe
sti
inc
cmp
cmp
mov
loopne
rclb
ljmp
aam
aaa
fdivs
call
pop
ret
adc
scas
add
mov
lret
imul
mov
dec
aas
mov
mov
mov
stos
and
lahf
cmp
push
sti
lea
push
mov
push
xchg
mov
mov
pusha
xchg
xlat
xchg
push
cmc
cmpsl
popf
jbe
xchg
cmpsl
gs
int
xor
lcall
cli
jg
icebp
sub
sub
mov
sbb
dec
aad
daa
leave
loope
int3
cmp
test
sub
xor
stos
cmp
xchg
dec
xorl
push
call
xchg
ss
leave
sahf
lahf
jecxz
out
repz
imul
hlt
jge
push
outsl
iretw
mov
push
mov
dec
push
mov
outsb
out
in
je
dec
pop
push
mov
andb
or
xchg
and
cmp
dec
fstps
imul
data16
cmpsb
gs
xor
and
loope
iret
and
es
mov
and
mov
insb
and
in
mov
daa
mov
cmp
xor
mov
or
jmp
jnp
xor
dec
imul
sbb
sbb
ja
lahf
addr16
pop
jns
add
hlt
out
gs
lods
inc
cmp
ds
nop
gs
js
dec
daa
jp
aaa
ficoml
out
sbb
or
notb
cmp
xchg
out
enter
stos
ret
push
ja
xor
pop
xchg
sbb
cmp
push
push
jns
mov
ret
push
xor
mov
push
push
jo
sbb
lret
cmp
xor
add
jl
cmp
xchg
jne
jmp
imul
mov
push
dec
inc
fldl
stos
jmp
inc
pushf
sub
xchg
ljmp
popf
subl
and
mov
mov
dec
in
push
add
adc
or
pushf
dec
pop
arpl
pop
push
cmpsl
push
lret
push
in
iret
xor
sub
xor
rcr
inc
and
out
lock
push
fcmovu
mov
sahf
inc
xchg
add
adc
cmpsb
lahf
mov
cmp
pop
and
pop
xchg
mov
leave
imul
out
jo
ja
add
aad
inc
mov
pop
iret
sbb
sbb
add
lods
jno
pop
test
cmp
ds
adc
sub
jge
mov
cwtl
addl
int
pop
mov
mov
out
int3
mov
fcompl
pop
ljmp
lret
bswap
repnz
fsub
xchg
push
push
dec
es
mov
addl
add
lahf
mov
push
or
or
push
aad
sbb
mov
imul
lock
jecxz
mov
mov
push
xchg
mov
ret
xchg
jmp
arpl
inc
sbb
fldenv
lds
in
jb
jg
pop
or
xchg
repnz
mov
jmp
testl
pop
sub
outsl
imul
das
xorb
add
mov
and
nop
clc
jbe
sbb
jne
in
mov
inc
xchg
xchg
and
inc
cmpsb
mov
lods
ds
cwtl
xor
jl
in
lds
movsb
dec
outsl
lret
loop
jae
jae
dec
or
enter
xchg
xchg
std
pop
cmp
punpckldq
jae
out
fmuls
out
insb
lahf
mov
dec
sbb
or
and
dec
or
imul
imul
mov
cmp
xlat
addb
pop
mov
in
jge
sub
jb
push
inc
jg
mov
dec
or
daa
sub
or
bound
lock
and
jp
inc
cmp
jge
out
push
in
add
ja
and
fstl
mov
loope
jae
xor
out
leave
mov
loop
dec
adc
push
das
mov
lret
sbb
push
push
xor
lods
cs
loope
xchg
stc
popa
push
test
sub
lock
push
mov
push
add
outsl
jbe
push
sahf
sbbb
adc
add
shll
and
sub
mov
call
ret
mov
and
lahf
addl
pop
push
sub
mov
xor
mov
xchg
push
or
shrb
cmp
add
leave
sub
mov
mov
cmp
or
mov
out
data16
adc
cmp
stos
jbe
nop
outsl
inc
add
movsb
jbe
scas
out
sbb
adc
loopne
mov
ret
dec
test
push
pop
mov
nop
popa
push
xchg
sub
cmpsb
mov
xor
or
sbb
pop
gs
push
enter
sub
loopne
mov
or
cmp
and
or
add
cltd
cwtl
xchg
pushf
xchg
mov
cmpsb
sbb
mov
ljmp
push
pop
fildll
stos
sub
daa
dec
mov
adc
jmp
lods
pop
loop
pop
xor
push
imul
mov
and
pop
lahf
bound
inc
push
jae
movsb
xchg
ljmp
out
js
xchg
sti
cmc
lods
mov
or
jl
add
inc
divl
xchg
mov
cmpsl
imulb
in
fsubs
lret
mov
mov
orb
mov
xchg
in
fimull
shrl
cltd
mov
add
loopne
cmpsl
sarb
stos
fs
loop
ds
inc
aad
cmp
dec
rorl
xor
jg
les
jge
js,pn
push
cmp
roll
test
popf
cmpsb
cmpsl
iret
lret
push
std
or
rcrb
push
sub
sahf
push
lahf
jae
push
inc
push
aas
inc
or
outsb
jecxz
lret
repz
or
test
lods
addl
ds
cwtl
mov
scas
xor
mov
mov
and
loopne
mov
sbb
xor
and
xor
out
jle
std
mov
ja
fisttpll
cwtl
adc
ds
cmp
addr16
mov
into
adc
rolb
push
cli
push
jmp
addl
jmp
xchg
jmp
in
adc
adc
ja
and
xchg
pop
hlt
xor
jecxz
mov
cmp
outsl
lcall
fmull
pop
test
popa
dec
stos
or
mov
inc
pop
js
lods
xchg
mov
repnz
ja
inc
push
or
pop
popf
push
xor
and
xchg
jle
inc
mov
divb
mov
xor
rorb
fwait
jle
cmp
movsb
rolb
or
rcr
adc
push
mov
rol
lock
cmpsl
mov
fwait
jl
cmc
xor
push
sar
mov
outsb
mov
enter
cli
les
mov
sbb
push
imul
adc
sti
xorl
mull
or
mov
mov
mov
repz
push
push
in
out
xchg
sbb
sbb
mov
ret
inc
shlb
or
xor
fwait
stos
add
add
dec
ret
xlat
xchg
add
pushf
or
and
mov
out
das
lock
adc
leave
movsb
pop
imul
int3
sar
cmc
imul
jg
dec
inc
mov
sub
sahf
ljmp
jle
xor
adc
inc
jae
into
lods
push
and
fadds
rorb
pop
pusha
mov
jle
call
sub
out
mov
add
sub
mov
add
sbb
lret
mov
aad
jae
out
dec
stos
loop
arpl
ljmp
and
xor
test
aas
stc
push
mov
xchg
imull
inc
aad
test
push
add
inc
fwait
mov
xchg
adc
fld1
imul
mov
inc
mov
shlb
or
xor
cmp
jg
push
xor
pop
cmpsl
dec
mov
inc
add
vprotd
inc
movsb
jno
es
ret
jmp
or
jmp
je
test
mov
mov
jb
movsl
fs
push
or
pop
bound
adc
lea
fs
iret
bound
movl
jg
jns
idiv
push
jns
cmp
dec
fiadds
jnp
pop
mov
or
test
decb
stos
and
inc
pop
js
or
pop
push
or
movsb
dec
test
filds
mov
inc
cmp
fsubrl
fdiv
xchg
pop
cmpsl
adc
clc
stos
mov
pop
sub
dec
nop
cltd
iret
mov
into
or
jp
das
daa
inc
mov
jmp
scas
xchg
jecxz
pop
xchg
cmp
leave
fdivr
inc
rolb
mov
es
jl
push
lret
aam
das
mov
pop
cld
hlt
fstps
addb
jae
sub
daa
ss
mov
xchg
mov
mov
popa
add
cmpsl
mov
pop
imul
push
jp
scas
push
aam
in
shlb
icebp
xchg
push
fadds
lods
data16
test
or
jmp
dec
iret
pop
fisttps
lods
mov
test
test
mov
xorl
or
in
shr
into
jecxz
jecxz
jbe
mov
pop
test
ss
notb
cmpsl
cld
push
adc
push
lds
insl
adc
or
add
addr16
popf
adc
adc
xchg
ret
neg
pop
sub
ja
pusha
inc
xor
adc
dec
scas
mov
lods
push
mov
sbb
add
popf
in
dec
sbb
aam
or
ds
cwtl
add
filds
mov
loope,pt
pushf
inc
and
inc
scas
shrl
mov
dec
push
cmp
rcrl
add
mov
jle
mov
outsw
pop
inc
test
xor
clc
int
cmpsb
ja
add
movsb
sbb
push
jg
lret
sbb
push
fwait
pop
pop
out
std
outsl
sub
adc
sbb
lahf
loope
inc
pushl
outsb
mov
movsb
xlat
add
imul
lods
push
aad
js
xchg
test
jno
cmp
add
das
in
ss
fnsave
rcl
adc
sbb
divl
mov
stc
fbstp
adc
xchg
push
out
daa
call
imul
adc
and
outsb
aad
and
ret
cmp
sbb
dec
xor
les
sbb
mov
mov
or
pop
add
aaa
and
or
sub
jne
sbb
aad
in
arpl
mov
sub
xchg
mov
mov
pop
or
xor
xor
dec
dec
adc
xchg
sti
imul
add
fdivrs
mov
aaa
and
imul
adc
inc
cld
insb
fldt
xor
jo
movsl
xchg
jo
out
jno
fidivrl
cmp
push
sbb
push
lret
mov
mov
in
out
lcall
jno
outsl
dec
xchg
cmp
hlt
pop
into
sbb
xor
pop
ror
mov
jae
lcall
push
cmc
dec
xor
or
roll
icebp
jg
shlb
sub
cwtl
cmpxchg
nop
cwtl
into
test
popa
cmp
sbb
sbbl
sarl
add
cs
xchg
xchg
mov
sbb
jnp
adc
sti
lcall
xchg
fdivs
mov
loope
testb
iret
mov
test
shll
scas
fidivs
dec
or
xchg
lods
dec
idiv
jnp
xor
arpl
push
cli
xchg
jnp
inc
push
push
fimull
add
popa
enter
test
mov
div
jbe
cltd
mov
add
sbb
sbb
pop
sub
popf
out
outsb
enter
pop
es
dec
outsl
inc
inc
std
fcoml
icebp
rcr
adc
pushf
movsl
mov
inc
popa
jmp
mov
outsl
mov
and
sbb
cmp
mov
sub
dec
jns
ss
ret
cmpsb
pop
ds
sbb
imul
add
mov
ffreep
jne
pop
sub
push
ss
mov
or
cld
cmp
xchg
aaa
aas
pusha
sarl
dec
and
mov
mov
inc
xor
cltd
and
cmpxchg
sbb
lds
push
sbb
out
adc
xchg
cmp
sub
pop
xor
lds
push
out
pusha
leave
inc
ja
mov
sbb
ret
xlat
pop
hlt
mov
jae
je
int3
movl
outsl
push
ficoml
stos
outsl
dec
and
push
adc
cmp
imul
insb
inc
xchg
or
stc
loopne
aad
ja
nop
fimuls
icebp
ret
adc
clc
insl
scas
mov
mov
pop
pop
lods
cs
push
aas
sbb
push
dec
add
push
decb
ss
cmp
fldl
sbb
sub
mov
or
or
inc
bt
inc
pop
addb
sub
adc
cmpsl
xlat
mov
mov
shrl
xor
jle
fs
and
fisttps
adc
fisttpl
dec
data16
cmp
adcb
cmp
fisttpll
push
vpacksswb
test
cmp
xchg
testl
mov
orb
push
pusha
into
insb
and
test
test
shlb
hlt
leave
sbb
pusha
ds
stos
and
in
ja
or
daa
mov
pop
push
movsb
inc
mov
xchg
pop
pop
les
dec
stc
push
aaa
fisttpl
not
les
push
push
or
mov
shr
pop
int
push
ljmp
add
sub
push
mov
jle
fisubl
cld
xor
fidivs
lods
xorb
sbb
sub
sbb
movsb
cmp
jl
cltd
in
incl
jmp
pop
sub
fwait
xchg
rcr
xor
movsb
jns
loope
jnp
ljmp
sbb
movsb
inc
inc
push
inc
jo
in
pop
xor
out
fcoml
pop
mov
jg
and
jno
test
xor
xor
sbb
cltd
adc
inc
or
mov
adc
enter
and
adc
push
sbb
mov
dec
ljmp
pusha
paddw
pop
and
inc
fildll
lods
lods
jo
orl
xchg
pop
mov
js
movsl
push
outsb
push
ret
lods
mov
scas
mov
stos
ds
popf
mov
pop
push
movsb
sahf
sbbb
sti
sbb
ds
pusha
cmpsb
xchg
packuswb
arpl
out
xchg
sub
sahf
pop
mov
enter
mov
jb
and
dec
push
cmp
add
stc
repnz
faddp
enter
ss
sbbb
int3
pop
xor
cmpsl
fldcw
insl
fidivrs
arpl
lock
mov
push
xchg
pop
out
or
dec
popa
mov
xchg
mov
push
call
in
cwtl
lods
adc
xchg
mov
test
adc
or
xchg
dec
fildll
shlb
lds
mov
inc
jecxz
lods
fmuls
inc
dec
call
fs
mov
inc
je
test
flds
mov
testb
data16
ja
fisubrl
inc
xchg
out
sub
cmpsb
sub
adc
push
rolb
add
jno
and
enter
data16
vmovups
mov
mov
xchg
inc
push
loope
icebp
leave
pop
lret
push
imul
or
jp
hlt
sti
adc
sar
jp
cld
mov
jne
cmpsb
cmp
jl
je
xchg
shrl
inc
adc
mov
and
imul
movl
pop
push
setae
in
aas
pushf
sarl
jge
sub
xor
fdivrs
int
dec
mov
adc
mov
cld
or
mov
test
insl
in
mov
icebp
sub
fmulp
roll
adc
mov
xor
fsubs
hlt
cmp
decl
dec
adc
movsl
mov
in
roll
lret
mov
push
jmp
pop
mov
aaa
and
push
repz
mov
mov
cld
push
xor
xchg
je
adc
mov
add
or
mov
fwait
sub
jmp
push
sub
fbstp
mov
jo
psubusw
and
dec
loopne
pop
aam
leave
jo
cwtl
shll
jmp
stos
lds
stos
xchg
imulb
std
mov
mov
scas
icebp
jmp
mov
sbb
jno
push
sub
mov
ja
xlat
push
es
sbb
and
stos
js
stos
mov
dec
push
rolb
cmp
outsb
insb
jecxz
lock
mov
sti
mov
cwtl
inc
and
push
and
gs
xchg
outsb
gs
in
test
cwtl
inc
sub
repz
in
mov
mov
adc
xlat
jbe
loop
jmp
mov
into
and
stos
cmpsl
loopne
or
mov
cld
xchg
pushf
or
in
fsubrp
pop
inc
loope
subb
stos
aad
sarl
and
popf
add
rclb
loopne
fadds
pop
sbb
inc
inc
dec
outsl
jbe
jno
rorl
int3
in
adc
pushf
call
ljmp
loop
testl
movsl
scas
mov
rorb
jbe
adc
pop
adc
mov
outsl
jge
mov
mov
mov
add
fwait
mov
into
mov
pop
mov
enter
cmp
in
or
adc
outsl
or
push
popl
dec
xchg
cmpb
mov
xchg
lcall
push
lret
and
inc
out
out
xor
jae
mov
popa
dec
mov
leave
push
push
aaa
jbe
repnz
dec
testl
fiaddl
pop
loopne
std
shlb
pop
mov
lock
negb
push
movaps
inc
in
sub
pusha
lds
inc
fsubs
insb
rorl
scas
jbe
sbb
jecxz
cwtl
addb
mov
sbb
xor
iret
xor
ficompl
mov
and
add
fidivrl
mov
sub
push
incl
mov
arpl
dec
sbb
andl
xchg
jno
jle
fdivrl
lret
dec
xor
sub
jbe
out
stc
pop
pop
inc
and
cmc
push
imul
insl
outsl
loopne
in
jecxz
dec
jnp
pop
les
outsb
adc
xchg
dec
mov
dec
jmp
mov
insl
cmp
mov
adc
push
std
sbb
push
popf
sbb
jecxz
and
lock
inc
pop
inc
cmp
inc
and
fistpll
xchg
mov
shlb
and
pop
ss
int3
lahf
je
dec
repz
fiaddl
xor
fisubrl
test
pop
jo
sbb
enter
ss
jo
stc
push
loopne
adc
pop
testl
and
lret
lahf
sbb
push
sbb
addb
mov
pop
adc
inc
mov
push
or
cld
fistpll
cwtl
and
popa
mov
jo
gs
pop
andl
aaa
mov
daa
stc
ret
pop
mov
mov
stos
lcall
je
pop
adc
lret
xchg
pop
movsl
rorb
aad
mov
push
cld
notb
mov
in
lea
push
in
jg
out
dec
xor
es
push
sub
js
dec
lahf
mov
cltd
das
xchg
mov
pop
push
sub
mov
int3
int3
dec
and
leave
psubusb
sahf
out
fcmovbe
ds
mov
xchg
cmp
scas
mov
scas
cltd
lods
leave
dec
pop
xorl
jp
dec
hlt
add
xor
adc
mov
ret
or
cmp
leave
and
popf
and
insb
inc
adc
inc
addr16
mov
das
ds
sub
cmpsb
cmp
test
adc
ret
in
xor
cmp
jmp
lcall
add
popa
pusha
push
add
fsubr
jno
sahf
dec
pop
jmp
or
call
xchg
outsb
fcomps
adc
das
mov
data16
mov
test
pop
int3
in
jae
ja
das
out
sbb
sbb
mov
iret
xchg
mov
js
pushf
js
mov
stos
shl
loopne
push
andl
push
sbb
aaa
hlt
sti
mov
or
std
js
inc
jge
push
push
lods
xchg
test
push
and
incl
add
je
mov
arpl
push
js
mov
sbb
cmp
or
clc
mov
aam
out
sub
inc
addr16
imul
mov
push
imul
fcmovu
push
bound
fbld
mov
push
movsb
jne
lcall
scas
int3
imul
stc
mov
outsb
sarb
leave
mov
repz
nop
push
mov
out
sbb
fidivrs
inc
movsl
lcall
push
or
jbe
icebp
mov
mov
xchg
aas
les
and
mov
jge
popa
cmpsb
rcrl
push
aad
xor
int
pop
stos
aaa
lahf
inc
jb
mov
stos
cmp
add
dec
sti
rclb
or
aam
sbb
lds
jo
fidivl
cmpsl
negl
jle
lret
jo
aas
xchg
out
mov
loop
enter
jb
fadds
insb
in
mov
mov
pushf
jmp
call
push
xchg
cmp
pop
pop
lcall
std
and
xor
movlps
mov
daa
inc
gs
enter
iret
repz
cmp
push
lcall
mov
cmc
repz
mov
and
cmpsb
xchg
out
adcb
aad
push
fcomi
dec
ret
add
push
sbb
adc
mov
out
dec
push
sub
jo
push
movsb
mov
xchg
mov
jg
mov
ds
std
sbb
leave
adcl
mov
jbe
and
xchg
dec
out
push
divb
fucomip
xor
jg
or
push
inc
mov
add
mov
jbe
repnz
inc
inc
stos
pop
add
loop
rolb
stos
repnz
leave
mov
iret
insb
and
xor
and
mov
mov
mov
out
rcrl
stc
sbb
xor
loope
sbb
ret
inc
fimull
jle
sub
fstl
inc
mov
adc
dec
popa
mov
jno
std
mov
in
stos
push
lahf
imul
lcall
movsl
das
sub
cmp
movsb
mov
psubsw
mov
leave
xchg
xor
xchg
out
pop
repnz
stos
lahf
mov
pop
push
lret
sbb
add
cmp
ret
sub
test
xchg
nop
ret
loopne
mov
mov
cmc
adc
xchg
add
movsb
popf
cld
mov
lret
mov
add
outsl
inc
dec
test
pop
inc
out
pop
xchg
or
mov
outsb
dec
fwait
push
jge
xchg
or
jae
cmp
push
pop
or
pop
sub
xor
in
xchg
in
push
lret
xchg
stos
xchg
test
add
jnp
popa
shll
dec
xchg
fcmovne
test
in
rcll
es
fidivrl
xchg
insl
insl
lods
adc
cmc
push
loop
pop
popw
loop
cltd
or
xchg
add
jne
cltd
stc
sbb
das
lods
jae
or
out
out
dec
out
lcall
fildll
jecxz
cmc
push
aas
lahf
mov
jb
mov
imul
enter
lock
mov
pop
dec
movsw
loope
or
cld
xor
in
mov
and
xchg
fidivs
aad
push
das
mov
mov
outsl
out
cmp
lds
gs
cmp
sub
sub
incl
mov
aaa
and
xor
mov
sub
gs
ljmp
jmp
inc
mov
pop
sub
inc
fnstcw
es
sub
aas
inc
sub
inc
mov
dec
cmc
add
sbb
xchg
fs
dec
movsb
inc
lds
cli
xor
fidivrs
add
add
cld
out
jp
xchg
xor
adc
imul
sbb
adc
clc
fdivs
dec
ljmp
pushl
dec
dec
mov
xchg
pop
leave
cs
jae
ss
inc
daa
outsl
mov
mov
stc
or
je
inc
inc
and
mov
int
mov
iret
sbb
sbbb
sbb
xor
ja
stos
mov
mov
mov
xor
ja
or
sbb
xchg
cmp
cltd
sbb
or
imul
int3
pop
aaa
ja
xlat
dec
sub
cld
and
cltd
push
std
or
test
popa
out
les
push
push
lcall
jnp
fstpl
cmp
ja
pushf
lock
pop
test
sbb
into
xchg
out
jae
jecxz
jmp
sub
jl
pop
pop
lods
inc
lods
icebp
ficomps
dec
dec
lds
fwait
lret
cmp
ret
in
jl
mull
pop
adc
fsubl
jbe
ja
jb
lds
ljmp
gs
cmp
stc
pop
adc
inc
call
pop
inc
xor
loopne
enter
repnz
cld
pop
fildll
ficoms
sub
ds
push
nop
mov
fwait
push
outsb
int
jmp
mov
ljmp
inc
mov
loopne
test
in
arpl
repnz
insb
adc
xchg
out
sub
mov
push
lock
loope
mov
aam
jmp
fld
cmp
jnp
lret
mov
mov
cs
out
cmp
bound
scas
insb
pop
ret
jbe
xchg
shll
lcall
mov
rcrb
mov
mov
call
leave
sub
or
jecxz
or
hlt
mov
or
xchg
push
cs
mov
xchg
gs
push
sti
inc
cmp
out
add
shll
sbb
je
popf
or
mov
mov
xlat
cmc
mov
fstl
aas
sti
jns
subb
sub
lahf
pop
push
mov
xchg
and
cmpsb
push
jb
jno
gs
push
rcrl
mov
popa
inc
jecxz
scas
dec
jecxz
imul
mov
cmp
mov
sbb
xor
push
sbb
aam
pusha
adc
xchg
enter
int3
and
push
out
lods
xor
imul
testb
jae
loop
dec
pop
out
adc
pop
sub
fdiv
or
mov
mov
leave
adc
rorl
inc
mov
push
movsl
xor
mov
push
gs
and
faddl
push
arpl
loopne
out
ror
inc
ljmp
mov
xor
jl
mov
popf
fldenv
pop
hlt
es
push
dec
cmp
jne
rcl
mov
xchg
mov
mov
movsb
lods
sub
popf
sub
add
mov
dec
stc
out
cld
xchg
aas
jl
xchg
shl
fdivl
mov
ds
inc
popf
stos
cmp
jmp
gs
ret
cmp
push
mov
test
inc
cmp
dec
adc
daa
cld
pusha
das
or
mov
int
push
lods
rcrl
cmpsb
rolb
xor
mov
pop
cmp
mov
pushf
loope
sbb
outsb
outsl
mov
fists
jg
out
adc
cmpsb
xchg
std
jns
xor
mov
cmc
mov
adc
jp
out
or
repnz
js
lods
push
shll
jno
push
add
inc
clc
fs
xor
xchg
mov
inc
mov
add
test
cmpsb
mov
pop
pop
fimull
int3
sub
mov
and
mov
sub
call
xor
test
les
aad
repz
mov
pop
sbbl
add
push
mov
sub
popa
call
jbe
call
pop
leave
adc
xchg
mov
outsl
inc
mov
jp
ss
mov
iret
add
and
test
lods
fsubrs
fwait
es
imul
into
rcrb
rcrl
pop
roll
cmp
mov
sbb
int
add
rcl
popf
cmp
popa
cmp
adc
sbb
and
inc
fisubl
out
xchg
push
enter
and
sub
jmp
les
lea
xchg
repz
imul
in
aas
cmp
mov
and
cltd
insb
or
jl
push
gs
adcb
lret
dec
shlb
push
push
or
movsl
insl
fwait
pop
cs
push
mov
mov
sbb
data16
movsl
mov
insb
pushf
or
insb
cmp
int3
aam
sbb
mov
push
fs
test
outsl
adc
mov
xor
into
popa
jmp
dec
nop
hlt
pop
mov
repz
pop
ret
push
cmpsb
ret
sub
fidivrs
bsf
push
push
mov
sbb
dec
test
jge
call
loope
add
call
mov
lods
xor
or
mov
bnd
test
dec
jnp
xor
outsl
mov
jne
stos
mov
and
xchg
jbe
push
add
imul
inc
push
insb
pusha
add
sarl
fisubs
insb
sub
adc
pop
ror
inc
test
jb
popf
cmp
jae
sbb
mov
pushf
out
stc
mov
ret
pop
icebp
and
stos
xor
bound
scas
inc
and
sub
insb
ret
mov
xor
dec
xchg
sbb
mov
filds
out
scas
inc
orb
aam
xchg
add
ljmp
imul
bound
xrelease
jo
bound
notl
jbe
mov
int
and
jg
add
mov
cmp
icebp
jecxz
dec
into
xor
push
inc
rolb
je
sub
pop
pusha
cmpsb
cld
dec
mov
push
push
mov
data16
inc
push
les
mov
sar
pop
ss
and
popf
and
cld
stos
repz
mov
sbb
negl
xchg
cmc
lea
negl
repnz
daa
jb
stos
pop
inc
pop
cmp
or
adc
popf
inc
data16
dec
sti
adcl
cmp
aad
adc
jae
es
mov
fsubl
jp
loopne
inc
inc
sub
pop
sbbb
cmp
mov
loop
in
adc
mov
fs
xchg
mov
adc
mov
fadd
xchg
adc
in
not
sbb
dec
sti
lock
lret
xor
mov
cltd
std
test
aam
gs
pop
stos
mov
test
pusha
fisubrl
or
adc
insb
dec
sahf
or
jnp
pop
outsl
jge
add
js
mov
lods
aas
pop
popf
rorl
aaa
data16
inc
inc
shrb
mov
cmpsl
mov
notb
xchg
push
cmpsb
cld
pop
cmpsb
pop
jl
pop
insb
inc
dec
or
loope
mov
pop
repnz
insl
inc
cmpl
xor
xchg
xor
adc
cmp
jmp
imulb
mov
mov
xchg
mov
leave
mov
push
adc
je
pop
add
es
and
je
lods
idiv
mov
orw
adc
popl
stos
ja
dec
imul
popf
lods
push
lods
sahf
ret
inc
rcll
xchg
ljmp
sarl
shlb
cmp
jge
sbb
pop
out
insb
jmp
ret
jns
ret
cmp
xor
adc
add
sbb
fsubs
movsl
divb
bound
xchg
repnz
pop
sub
inc
testb
pop
xor
and
add
fwait
mov
sub
add
loop
cmp
or
cmc
scas
lods
add
xchg
xchg
sub
inc
aaa
xchg
jno
mov
jns
js
inc
adc
xlat
call
pop
xchg
or
inc
push
mov
aad
out
mov
cltd
or
idivl
fsubrp
add
sbb
or
insl
sub
mov
cmp
in
and
xor
popa
sahf
out
inc
ret
xor
aad
cli
xlat
fdivrp
xor
fcmove
mov
add
ret
outsl
jle
dec
lock
add
lret
shufps
aad
cmpsb
cmp
aaa
pop
iret
sub
test
jecxz
ss
mov
xchg
in
lea
xchg
sbb
sbb
js
fstpt
dec
gs
sbb
js
fwait
adc
xchg
push
aaa
push
dec
fsubrl
leave
divps
mov
sahf
xor
clc
in
and
out
shrl
lahf
jmp
stc
jge
and
std
push
orb
push
icebp
je
jae
adc
adc
call
fs
int
stc
into
int3
fistps
push
hlt
pop
dec
lahf
jae
rol
mov
inc
popf
mov
push
and
orl
xchg
std
jecxz
frstor
popa
and
inc
hlt
mov
hlt
xchg
jmp
jle
mov
inc
movsb
adc
xor
iret
push
inc
cmp
ret
or
xchg
or
fs
add
shll
inc
mov
adc
sbb
in
fs
push
mov
sbb
push
out
sbb
xor
and
icebp
fnstsw
sub
in
mov
bnd
test
cmp
pop
mov
fwait
iret
loope
imul
ds
pusha
xlat
inc
fistpl
xchg
xor
fmuls
subb
sarl
out
test
xchg
xchg
mov
cmp
ret
cwtl
jmp
sahf
inc
adc
pop
pop
cmpsb
aas
dec
pop
hlt
popf
sahf
mov
movsl
cmpsl
jae
addl
mov
cvtpi2ps
push
or
std
mov
filds
push
fsub
repz
pop
jae
imul
push
movsl
in
fldt
dec
leavew
mov
dec
dec
mov
cmp
cld
dec
inc
pop
scas
cmc
pop
cwtl
mov
ss
sbb
cld
xchg
jecxz
and
mov
fs
cmp
xlat
cmpsb
xor
mov
and
dec
loopne
mov
outsl
stos
add
addb
cmpsl
shl
stc
int
add
push
and
push
fmull
inc
cmc
sub
btc
int
cmp
test
ljmp
sbb
les
outsl
mov
daa
ret
cmpsb
push
popl
cmpsl
adc
adc
out
jnp
and
lds
cltd
xchg
pop
and
jg
inc
sub
sub
sub
cltd
scas
pop
mov
clc
lea
mov
cmp
dec
mov
inc
push
fnstenv
pop
sub
push
call
out
mov
adc
popa
inc
aad
cwtl
daa
dec
mov
mov
gs
cmp
in
xor
fs
dec
pop
inc
pushf
ret
mov
mov
push
dec
xor
pop
subb
gs
les
repnz
push
clc
xorl
push
popf
test
pop
mov
sub
jge
push
mov
or
lcall
mov
inc
or
add
out
dec
jecxz
stos
sub
dec
repnz
or
nop
mov
sbb
cmp
jle
shll
sbb
pop
fldt
js
adc
cmove
stos
out
sahf
pop
popf
push
cmp
repz
ds
cmp
hlt
jge
add
add
loop
or
scas
fimuls
sarl
dec
or
pop
sub
js
push
stos
int
in
xchg
sbb
xchg
push
nop
or
and
push
sub
jmp
adc
rorb
leave
sbb
jbe
and
pop
out
and
pop
pop
mov
jnp
int
insb
adc
or
sbb
mov
leave
xor
pushf
rcl
xchg
into
or
jp
xor
add
xor
xchg
idivb
scas
test
inc
mov
aam
mov
dec
cmp
mov
inc
stos
cmp
cmp
mov
test
xchg
ljmp
or
push
xlat
pop
fmuls
jns
fisubl
aam
pushf
mov
loope
xchg
dec
mov
sub
and
xor
xchg
stc
adc
daa
mov
aas
push
mov
mov
out
lods
popa
pop
xor
dec
adc
loope
xchg
add
sub
mov
out
stos
pop
loopne
push
xor
aas
add
ret
dec
lcall
je
sub
jae
movsb
pop
push
inc
or
dec
or
sbb
pop
mov
inc
lcall
ds
inc
jle
xorl
jnp
add
into
std
jbe
add
lcall
fbstp
jle
mov
mov
iret
xchg
dec
imul
fwait
out
adc
stc
pop
xor
jge
jl
pop
cli
or
in
subb
loope
aam
push
xor
ja
mov
jnp
stos
je
jbe
lcall
imul
sub
mov
push
mov
push
clc
adc
and
test
clc
movsl
pop
repz
jge
call
je
fwait
add
cli
cmc
adc
not
add
ret
arpl
jg
int
daa
jns
mov
sbb
sbb
xor
mov
cmp
mov
rcrl
jae
dec
adc
data16
clc
sub
push
adc
int
in
imul
xlat
ds
add
cs
jae
mov
and
lock
xchg
inc
dec
fidivrs
pmullw
stc
xchg
mov
insb
adc
push
imul
jnp
popf
mov
rorb
iret
in
xor
push
add
jmp
stos
fsts
das
dec
cmp
pop
test
xchg
push
xchg
or
test
or
js
scas
pop
add
jbe
jle
hlt
mov
lcall
mov
push
sub
rolb
out
push
and
dec
cmp
add
push
xchg
sbb
repz
add
inc
xchg
lock
jbe
cmp
cmc
out
mov
sti
stos
je
jbe
out
cmp
outsl
push
out
fldt
mov
cmc
mov
ds
cmp
sti
out
repnz
int
xchg
xchg
sub
jae
out
cmp
mov
sbb
xlat
mov
pop
dec
pop
es
xorb
ret
jl
in
jmp
dec
call
stos
pushf
mov
shrl
mov
aad
inc
dec
jle
or
cmp
scas
insl
mov
cld
loop
mov
fs
mov
mov
idivl
sarl
pop
xchg
inc
icebp
and
inc
mov
mov
push
cmp
dec
xchg
jb
cmpsl
out
sbb
icebp
cmp
jg
jae
lret
loope
fucomp
or
sbb
cmc
and
or
cmpsb
mov
mov
push
inc
mov
cmp
jne
push
pop
xchg
sub
cmpsl
imul
daa
lret
push
add
fistps
push
out
cli
xchg
loopne
jg
aad
jg
inc
out
nop
jl
cmp
test
enter
xor
push
lods
jo
jle
add
jg
push
xor
push
es
mov
popf
xchg
popa
or
fmuls
test
cmp
xchg
addr16
mov
push
int3
mov
lahf
test
push
aam
jmp
mov
scas
push
jno
mov
sahf
dec
mov
adc
or
rcrb
dec
cmp
icebp
pushf
mov
int
rcl
xchg
cmp
ss
out
pop
in
mov
lea
fistl
xchg
scas
leave
adc
inc
repz
inc
xor
jmp
mov
scas
lods
mov
arpl
hlt
pop
xchg
scas
push
mov
cmc
mov
cmp
pop
push
scas
mov
cmc
sub
movsb
pop
cmp
and
jns
es
sbb
mov
fildl
mov
out
pop
icebp
aam
orl
cmp
dec
xchg
in
jno
add
addr16
inc
mov
lahf
lret
test
cld
insl
mov
adc
loope
mov
fdivl
add
lret
out
pop
fs
xor
cmp
lock
add
jl
cmp
imulb
test
and
ffreep
lea
pop
ja
push
push
std
call
inc
xor
add
orl
mov
jp
adc
mov
cmp
fcoml
hlt
aas
ret
sahf
lods
shlb
pop
add
test
mov
dec
lods
xchg
jae
gs
dec
fucomi
rorb
jo
xchg
ljmp
nop
sahf
jno
mov
loop
or
pusha
fisubrs
cmp
lahf
push
ret
loope
push
cs
pop
mov
mov
cltd
or
mov
sub
lods
mov
and
inc
jmp
xchg
push
lahf
lods
movsb
fisubrs
out
inc
add
fwait
add
lahf
dec
hlt
lret
idivl
repnz
insl
int
je
sbb
cmpsb
les
shrl
cmpsb
inc
enterw
mulb
xchg
cli
ja
sbb
jns
sbb
inc
lcall
add
cmp
aaa
sub
adc
pop
imul
lahf
pop
inc
mov
fnstsw
js
xor
xchg
xor
push
in
out
pop
jg
pop
cmpsl
imul
xchg
jl
push
mov
mov
lods
dec
nop
cmp
adc
xchg
mov
mov
ljmp
mov
add
lahf
mov
sub
ret
shl
aas
jmp
rol
jne
jb
out
mov
loop
cs
push
and
fwait
mov
icebp
xlat
out
int3
fsubl
gs
jge
call
shl
orl
lds
call
push
xlat
mov
xchg
inc
out
fsubrl
insb
push
sub
bound
daa
add
jecxz
jb
dec
leave
call
xchg
xchg
aad
push
stos
fmulp
insb
hlt
imul
dec
imul
pop
mov
xlat
popa
mov
sti
push
mov
lea
inc
movsl
lods
push
xchg
dec
loopne
sub
dec
ja
push
push
inc
push
jecxz
pop
jmp
lods
jo
push
mov
jecxz
pushf
lods
jmp
mov
mov
call
test
mov
mov
loope
sbbl
paddq
sbb
xchg
add
inc
sbbl
adc
pop
push
lcall
push
mov
sub
popl
mov
cmpsb
enter
aad
sahf
dec
aam
xor
sahf
adc
pushf
mov
shl
mov
xor
mov
adc
aam
add
mov
push
xor
sbb
pop
adc
cmp
dec
fwait
aaa
mov
push
xor
daa
pop
std
pop
aam
or
pop
jecxz
shr
cld
mov
sbb
inc
sub
fcomps
fs
jae
leave
gs
add
mov
pop
xchg
es
ficompl
add
inc
pop
rolb
fs
insl
xchg
add
test
lds
insb
adc
dec
inc
inc
xchg
std
into
aaa
insb
inc
push
xchg
push
mov
mov
adc
fistl
pop
out
rol
pop
inc
outsl
and
push
mov
and
scas
push
sub
mov
sbb
imull
imul
mov
add
jmp
dec
cmp
arpl
nop
mov
int3
mov
inc
lock
inc
adc
inc
dec
and
sahf
bound
sahf
pop
jle
xchg
mov
xchg
mov
mov
or
or
arpl
movsl
mov
imul
mov
push
arpl
int3
mov
mov
cmc
insl
push
and
sar
lahf
jo
push
jg
dec
mov
jo
mov
inc
xor
rcll
out
lret
dec
pop
scas
add
sub
inc
xchg
push
dec
jbe
ljmp
subb
jmp
repnz
dec
hlt
xchg
pop
test
stos
mov
dec
xchg
ljmp
dec
adc
mov
or
push
rcrb
lea
hlt
fsubs
nop
and
xchg
push
and
mov
scas
loope
fisubl
and
ret
arpl
sub
jo
xor
cmpsb
pop
mov
mov
lret
icebp
cmp
sbb
adc
jge
jo
int3
fildll
mov
inc
adc
pop
mov
cmp
cmp
aas
sub
pop
mov
jnp
xchg
pop
enter
jmp
dec
lds
fistps
aas
gs
or
xor
std
out
loope
pop
in
fcomp
pop
xchg
dec
adc
dec
ficoms
je
push
xchg
cmp
bound
insb
push
cmp
loop
jl
xchg
mov
or
inc
data16
decl
or
jns
in
divl
or
dec
icebp
out
push
ret
mov
push
loope
pop
xor
xlat
fiadds
jg
mov
repz
dec
add
leave
mov
in
inc
call
cmp
pop
test
fisubl
int
jl
push
iret
or
dec
xlat
scas
inc
and
mov
test
cmp
jne
hlt
incb
inc
sub
leave
or
negb
push
adc
inc
push
jne
call
pop
pushf
fmuls
sub
adc
popf
je
idivb
ss
mov
mov
fwait
xorb
cltd
and
fs
nop
and
jl
or
rorl
nop
je
inc
movsl
popf
sahf
js
hlt
mov
sarb
mov
fidivl
sbb
pop
add
enter
xchg
fucom
lret
dec
outsl
rorl
pop
andl
out
sub
test
and
jb
les
mov
cwtl
fnsave
jnp
adc
rcl
and
sub
push
mov
jge
bnd
add
icebp
fwait
push
xchg
mov
xchg
js
mulb
push
cmp
or
ret
push
enter
lds
sbb
jns
xchg
pop
cmp
es
mov
and
sub
dec
cmp
jb
popa
inc
or
xor
lahf
mov
jp
icebp
sarb
jbe
sarl
push
sub
jecxz
movsl
les
movsb
insb
jb
adc
xor
mov
adc
sub
jo
mov
add
jnp
jg
loopne
push
aam
repnz
and
dec
scas
adc
jmp
lahf
xchg
testl
sub
mov
cmc
mov
cpuid
aad
pop
call
jp
and
and
sbb
inc
cmp
sti
dec
pop
daa
data16
xchg
adc
lcall
inc
lret
and
gs
and
lea
hlt
test
sub
std
fdivs
inc
mov
xor
insb
cmp
lcall
jle
fwait
in
jg
loopne
pusha
ss
mov
clc
stos
or
ret
add
push
jb
icebp
add
sbb
outsl
mov
lret
add
inc
dec
out
int
aas
lock
enter
cli
in
mov
jecxz
dec
shrl
or
into
loope,pn
dec
popa
xchg
adc
adc
lcall
jg
push
and
notl
cmp
mov
mov
add
adc
pop
xor
outsb
xchg
cmp
xchg
push
lds
push
push
xor
in
out
mov
clc
cmp
add
out
add
shll
push
and
pop
mov
jo
sbb
dec
xor
pop
mov
insl
mov
push
call
and
mov
or
out
cmc
movsl
pop
mov
cmp
lods
je
add
fs
mov
es
test
ja
mov
cmp
lods
shll
flds
clc
push
mov
clc
addl
test
dec
stos
dec
push
shrb
push
mov
pushf
sub
xor
or
addl
bound
inc
and
in
mov
mov
push
dec
repz
mov
jne
add
int3
cmp
sbb
add
js
in
daa
mov
pop
sbb
out
mov
fidivrl
sbb
pop
xchg
mov
xchg
mov
insb
clc
or
ja
jne
mov
mov
dec
jl
ljmp
fdivs
cmp
ret
mov
fnstsw
mov
mov
je
sti
xor
sbb
in
inc
sub
pop
mov
jbe
xlat
enter
or
jb
movsl
es
mov
jns
and
xor
cmc
jo
repz
mov
sbb
out
lret
xor
cmp
fldl
and
inc
inc
aaa
cmc
pop
lret
daa
mov
out
xor
loopne
jae
lret
lahf
push
xchg
push
sub
cs
mov
mov
dec
leave
ds
and
out
dec
jnp
add
cwtl
clc
pop
adc
push
push
sub
sub
js
fs
loopew
jno
xor
icebp
push
repnz
lret
shll
sarb
xchg
stc
jl
leave
mov
push
out
cmpb
dec
adc
xchg
cmc
loopne
jo
in
mov
xchg
push
int
rcrl
rcrl
xchg
ds
adc
jne
bound
cmpsb
cmp
aam
adc
enter
mov
push
jns
cwtl
lods
mov
inc
pop
jno
and
scas
mov
imul
jns
add
lret
and
clc
fcmovbe
add
popa
mov
push
push
and
hlt
scas
inc
cmp
push
iret
or
fwait
add
mov
add
inc
mov
js
sbb
dec
pop
sub
xchg
popf
cmpsl
push
adc
or
dec
inc
mov
in
fdivrs
adc
aam
dec
fisubs
dec
cmc
fmuls
jmp
negl
xor
lahf
mov
scas
ja
jecxz
loopne
or
sahf
cmc
lds
dec
pop
lds
push
cmp
dec
jp
iret
repz
gs
sub
mov
mov
ficoms
add
outsl
in
push
movsl
mov
and
cmp
push
mov
test
push
ja
pop
xchg
mov
popf
jnp
fwait
xchg
mov
jmp
push
dec
xchg
pop
inc
cmp
jle
cwtl
sub
addr16
mov
mov
xor
cs
fisttps
jns
frstor
jle
dec
in
xchg
jb
fmulp
je
dec
sub
mov
int
cmp
inc
in
addr16
icebp
adc
mov
jo
rclb
scas
mov
shlb
sub
jae
insb
xorb
xchg
jnp
sbb
or
aad
in
pushf
or
inc
sahf
movl
xor
scas
mov
ljmp
inc
cmp
cld
lds
sbb
xorl
js
stos
les
or
cmp
ljmp
cmp
or
cmp
shlb
jge
xchg
ret
pusha
adc
and
push
mov
jle
mov
nop
or
sbb
or
push
in
inc
sarb
dec
inc
mov
jb
out
idivl
xchg
pusha
out
xchg
cmp
mov
andb
inc
dec
push
cmp
cmp
adc
in
mov
sbbl
dec
mov
movsb
jge
jbe
fwait
leave
lds
faddl
jne
mov
mov
shrl
lds
xchg
popl
cmc
in
mov
stos
and
popa
ljmp
daa
jecxz
xchg
ja
cmpsb
dec
into
push
cmpsb
das
ss
subl
mov
ffreep
aaa
ja
decl
cmp
add
fistl
pop
jae
add
xchg
adc
sub
in
inc
bnd
xor
lret
add
cmp
xor
adc
outsl
mov
imul
lds
arpl
xchg
das
pushf
mov
mov
mov
push
xchg
dec
sbb
loopne
test
insl
aad
shl
hlt
xchg
cmpsl
shlb
shll
ja
insb
ljmp
enter
adc
repz
cli
decb
in
mov
jb
popa
popf
jp
jge
fwait
jge
pop
pop
cmp
es
test
mov
dec
inc
sbbb
push
mov
jno
or
mov
mov
mov
mov
jno
imul
adc
aas
sbb
adc
flds
sahf
fnstsw
iret
in
inc
mov
cmpsb
movsb
pop
push
xor
das
mov
ret
sub
dec
adc
pushf
jb
adc
iret
into
cld
dec
mov
cmp
negl
push
stc
sub
push
stos
lret
pop
pop
inc
in
into
adc
nop
out
out
xor
aad
sbb
sub
inc
lahf
idivb
loopne
pop
loop
push
mov
mov
fdivs
jae
xor
lods
pop
test
mov
test
jns
fistpl
dec
orl
mov
dec
fmulp
or
out
push
ss
mov
xor
push
mov
enter
add
xchg
add
cmp
jb
test
adcb
mov
fbstp
in
sti
negb
out
add
push
or
out
call
xchg
cmp
fcompl
cmp
cli
decb
dec
dec
and
lock
ror
cmpsb
movsl
imul
mov
jmp
push
xchg
mov
push
cld
mov
pop
jle
std
fidivrs
cmp
add
mov
jecxz
mov
cmp
dec
lods
js
mov
pop
mov
pop
jne
mov
mov
popl
leave
xor
sub
sub
mov
dec
aam
xchg
lea
push
lret
mov
fbstp
int
outsl
clc
sub
or
adc
xor
push
or
xor
out
lret
pop
clc
push
or
mov
dec
inc
xor
jno
push
or
mov
cmp
clc
popa
jle
push
sbb
dec
test
xor
adc
push
clc
jg
xlat
lahf
xchg
push
xlat
jne
stos
loope
mov
xor
mov
adc
rorl
push
xchg
pop
inc
and
aad
in
sbb
pop
push
mov
jmp
call
mov
rcrl
cltd
xchg
mov
aas
loope
lods
add
or
or
jl
adcb
popa
fsubrs
stos
pop
xchg
xchg
in
pop
inc
imul
in
andl
pop
xor
mov
rep
push
testl
jne
out
inc
mov
dec
dec
mov
add
in
stos
icebp
or
fsubrs
jns
fsubp
mov
rcr
push
bound
sbb
or
jbe
push
test
les
test
cmp
aad
shrb
add
push
pop
loop
xchg
or
add
lahf
idivl
mov
inc
cmp
std
outsl
outsl
fs
jne
icebp
xchg
push
aas
in
popf
push
mov
xchg
icebp
push
jge
mov
mov
in
fistpl
out
push
cmp
sub
add
pop
cld
hlt
shr
data16
dec
aaa
cmp
shl
sbb
add
mov
mov
mov
test
es
xor
push
or
and
mov
lcall
push
cld
xchg
fdivrl
cmp
jae
cs
movsb
sbb
adc
mov
cli
xchg
and
enter
movsb
add
pop
repnz
mov
adc
sub
call
repnz
aaa
pusha
inc
aad
cs
jmp
push
and
push
xlat
pushf
jp
fwait
sub
sub
jns
jge
add
adc
fs
test
jae
aad
dec
xchg
dec
subb
fs
jns
mov
dec
xor
stos
sub
popa
push
and
push
rcr
or
ljmp
push
sbb
cwtl
and
adc
clc
cmp
push
ds
mov
fs
test
or
pop
cmp
and
sub
stc
or
adc
popa
fcompl
sub
icebp
das
mov
mov
outsl
ja
xchg
cld
rol
daa
aad
imul
lods
orl
inc
in
fwait
data16
xlat
stos
push
adc
adc
outsb
push
cwtl
cmp
aaa
ljmp
jno
push
mov
repnz
andb
mov
sbb
out
inc
int
cmp
xor
jmp
nop
shll
fcmove
out
dec
pop
loope
roll
add
sub
jb
inc
pop
lods
outsb
mov
ret
aad
aam
iret
sbb
ja
mov
incb
adc
push
div
fstl
icebp
divb
or
dec
aam
pop
xor
insb
pop
dec
sub
xchg
adcl
mov
push
add
dec
daa
les
adc
data16
mov
cmp
mov
dec
shlb
or
data16
and
dec
ds
std
scas
jecxz
xchg
mov
add
inc
mov
cmp
stos
push
insl
test
and
sub
fisubl
adc
inc
nop
sub
gs
xchg
xor
xchg
mov
and
mov
or
push
pop
stc
pusha
jmp
ret
mov
test
sbb
xor
repnz
pop
pop
insl
xchg
imul
xor
dec
push
test
mov
pop
xchg
pop
div
or
and
hlt
idivl
jo
inc
mov
dec
scas
and
sbb
mov
xorb
push
mov
sbb
dec
push
mov
fwait
jnp
sub
sbb
xor
sub
cmpsl
popa
mov
push
les
dec
jno
jne
ja
dec
jne
sub
cwtl
das
mov
rcrl
mov
and
stos
push
dec
into
push
aam
aaa
dec
mov
sub
gs
cmc
test
push
sub
mov
push
xchg
and
adc
lret
jge
pop
subb
lods
and
add
xor
mov
add
cs
imul
aam
das
or
add
inc
inc
fcoml
push
and
or
push
cltd
and
stos
clc
push
push
sbb
gs
xor
mov
shll
cmc
dec
adc
fs
jle
mov
mov
push
fxam
sti
js
pop
jbe
stc
push
fdivrs
push
stc
jbe
jge
vfmaddsub132ps
cmp
ss
sbb
jns
cs
and
adc
mov
pop
sti
aas
pop
jb
ljmp
and
and
daa
negb
pop
push
push
pushf
je
push
pop
shll
and
add
imul
mov
stos
xchg
loop
jg
mov
cmp
push
push
dec
out
sarb
cmp
jle
xlat
repz
push
lret
xchg
orb
inc
add
push
inc
xor
xor
sub
lret
mov
ficomps
loopne
add
sahf
pop
int
cli
dec
cmp
pop
push
hlt
lods
int
mov
repnz
ja
ficoms
fs
out
out
int
arpl
out
or
cmc
xor
push
push
dec
icebp
stc
pushf
pusha
mov
call
insb
mov
mov
mov
shl
test
jmp
jne
sbb
inc
aam
cmp
xchg
shll
lahf
pop
sub
test
mov
pop
inc
rorl
adc
in
cmp
lret
cld
push
inc
js
mov
sub
add
or
dec
sub
mov
shrl
pop
icebp
dec
ljmp
sbb
ret
popf
lret
add
mov
xchg
or
ss
sbb
mov
or
push
dec
add
push
mov
ret
scas
mov
or
insl
repz
fmulp
xor
lahf
sub
fwait
inc
mov
inc
imul
sbb
mov
jns
cwtl
mov
jb
clc
add
orb
stos
aad
clc
imul
orb
out
jnp
sub
js
fisubl
push
cmp
test
sbb
push
add
movsb
and
daa
jbe
cli
jne
cmp
and
lods
jl
outsl
ss
jne
stos
js
outsl
jo
fcompl
int
in
adc
hlt
cmp
mov
incl
mov
inc
pop
or
mov
iret
dec
add
add
scas
mov
inc
cltd
rcll
lds
jg
jle
and
ficompl
leave
enter
adc
es
jns
pushf
xchg
loop
mov
sbb
sub
mov
pusha
rcll
mov
push
jmp
cmpsl
into
mov
push
mov
rcll
cmp
pop
pandn
add
and
mov
js
mov
lret
push
mov
ss
inc
dec
mov
mov
mov
xchg
mov
mov
xchg
cltd
scas
aam
bound
cmp
rorl
les
push
jge
test
sbb
mov
lahf
mov
pop
hlt
fwait
sbb
jbe
lea
jp
outsl
lret
pop
outsl
cld
call
jge
mov
push
sub
push
xchg
sub
push
not
orb
jb
cld
iret
mov
jl
stos
fdivl
test
cmc
sub
imul
jg
dec
pop
mov
out
or
inc
cmp
dec
or
inc
scas
frstor
cmpsl
jne
or
mov
xor
xor
movsb
enter
lds
sbb
xor
xor
dec
sbb
pop
sbb
cld
icebp
and
in
daa
dec
fldt
stos
adc
and
jno
add
js
lret
mov
leave
aam
mov
std
mov
repz
and
cmp
in
das
gs
xor
push
out
mov
addl
or
push
repz
sbb
bound
jbe
out
and
arpl
adc
push
test
jp
in
loop
insb
into
test
mov
dec
jl
in
xor
sub
pop
out
sbb
adc
mov
movsl
pop
mov
xor
pop
fldl
rcr
pop
push
or
prefetchwt1
xor
cld
adc
aam
nop
fsubrs
mov
in
cmpb
push
addr16
dec
sahf
mov
mov
pop
mov
xor
mov
insl
cmp
and
sub
fwait
mov
cmp
jp
push
testb
xlat
lahf
sti
add
test
ss
ljmp
movsb
int3
mov
cvttps2pi
outsl
lods
cli
pxor
adc
dec
outsb
mov
push
xor
cmpsb
sbb
das
popa
imul
jne
frstor
mov
and
jle
push
push
lret
pop
sub
daa
rolb
inc
jecxz
ja
mov
push
dec
jns
xor
push
sarb
sahf
lret
sbb
cld
jecxz
jg
sahf
subl
mov
mov
nop
xchg
dec
daa
outsb
add
insl
enter
dec
cs
es
push
ja
pop
clc
or
sbb
arpl
pop
cli
stc
inc
data16
scas
dec
or
lret
das
or
and
push
mov
xchg
daa
fnstcw
pop
pop
jecxz
mov
adc
pop
mov
inc
adc
sbb
icebp
outsl
rolb
sbb
pop
sarl
frstor
sub
jno
jne
jle
fnstcw
ror
dec
xchg
xchg
dec
stc
push
cmp
inc
sub
repz
inc
jle
psllq
lcall
lcall
push
xor
pop
cwtl
xchg
ds
jo
dec
cli
mov
xlat
add
and
js
fildll
inc
xor
or
cli
dec
adc
mov
sub
or
loope
push
mov
add
pop
inc
push
bound
movsl
adc
sbb
dec
push
in
mov
dec
popf
lods
xor
jp
xchg
rorb
sbb
addb
fdiv
leave
sbb
mov
inc
pop
jl
or
push
xor
mov
cltd
repz
and
mov
dec
and
jge
push
fwait
inc
shl
sbb
cmp
add
dec
xchg
lock
stos
das
pop
rcrl
hlt
popf
out
sbb
mov
mov
fsubs
jecxz
fimull
sarl
fs
vdivsd
mov
out
push
mov
adc
pop
pop
or
mov
jge
push
mov
mov
inc
xor
push
or
cmp
test
lds
subl
out
fisubrl
aaa
pop
lcall
push
push
ret
sub
fistps
cmp
adc
jae
sub
and
push
sub
pand
or
iret
xchg
in
cmp
lods
shrb
xchg
data16
sub
fdivrs
dec
pop
dec
adc
sbb
rcl
jne
dec
dec
adc
insb
xorl
push
loopne
sbb
push
adc
inc
cli
mov
fsubrp
mov
jo
testb
inc
loope
testl
sub
inc
nop
mov
popl
add
cmp
iret
arpl
mov
test
cmpsl
scas
or
ud2
testb
inc
fimull
out
filds
outsb
nop
xchg
push
xorl
or
jo
dec
xchg
add
lock
scas
sbb
fmuls
xchg
xchg
sub
push
pop
mov
mov
jp
call
or
adc
inc
cmp
into
xchg
adc
cmp
lahf
mov
sub
cli
adc
xor
out
nop
pop
mov
sub
mov
imul
xor
cmp
add
jle
adc
mov
lods
loop
jb
out
hlt
cmc
jmp
push
pop
mov
push
and
inc
dec
out
out
pop
or
pushf
in
cmp
insw
into
push
jb
fwait
movsl
imul
mov
cmp
fldt
imulb
fwait
xchg
sbb
push
xor
in
adc
fidivl
adc
jo
add
out
push
and
fsubs
mov
scas
sub
add
adc
lds
pop
imul
iret
sbb
rorl
lahf
enter
xlat
xchg
cmp
ss
add
mov
xor
or
gs
das
fdivs
shlb
pop
push
jmpw
xchg
les
xor
adc
jns
fsub
leave
inc
push
cmp
ret
sbb
sbb
outsb
sti
mov
scas
stos
enter
mov
jp
popf
movsb
ss
mov
jbe
cli
loope
mov
jmp
push
lret
push
mov
popf
jp
movsb
inc
xlat
lret
mov
add
xor
cld
inc
repnz
icebp
rol
cld
mov
cltd
pop
movsl
loope
loop
adc
cmp
fcompl
in
sti
sbb
dec
mov
dec
sarl
cli
sbb
adc
inc
sub
ss
or
xor
sarl
xchg
mov
mov
cmovp
xchg
pop
pop
scas
mov
jge
cmp
lahf
orl
mov
cmp
movl
sbb
inc
cs
loopne
loope
inc
inc
fxch
sbb
call
mov
xchg
mulb
std
push
push
add
andb
cltd
add
xchg
sub
es
dec
outsl
test
cmp
sbb
ss
mov
in
sti
sahf
dec
stc
mov
roll
fdivl
mov
cli
in
mov
xchg
iret
fsts
and
mov
lahf
cli
add
neg
subl
add
push
movsl
dec
xchg
repnz
push
mov
jmp
or
or
imul
or
stos
jle
sar
push
mov
fiadds
or
push
dec
cmp
test
and
ss
xchg
daa
loop
xchg
or
sbb
fadds
in
insl
sub
rorl
hlt
push
sub
out
cwtl
push
mov
sbb
cltd
mov
insb
mov
push
iret
orb
mov
pushf
test
subb
rcrb
test
fistl
pop
mov
mov
pop
daa
lcall
testl
adc
out
addr16
sub
stos
pop
cmp
pop
push
and
in
adc
cmp
cmp
repnz
lahf
jo
inc
popa
shll
mov
test
cmc
sub
cmpl
xchg
xor
mov
ss
jns
loop
dec
xchg
ljmp
test
ret
mov
das
sub
in
jne
fs
adc
dec
or
sbb
jb
xor
push
fcmove
adc
jge
inc
stc
std
and
lods
orl
mov
jnp
imul
out
cs
mov
or
cli
sub
fwait
in
mov
push
adc
pop
out
mov
dec
pop
jnp
push
lods
in
mov
sub
cli
roll
mov
dec
bound
lcall
out
and
mov
stc
mov
mov
inc
adc
xchg
mov
jno
or
sub
lods
sti
fbstp
inc
aad
inc
add
dec
fiaddl
dec
rorb
in
lahf
rolb
bound
push
sbb
int
push
arpl
call
lret
nop
lods
jns
hlt
push
lahf
testb
push
jo
cmc
push
dec
and
fs
and
ja
push
nop
cwtl
lock
add
stos
xchg
test
movsl
aam
push
insb
add
jne
and
fmul
adc
push
test
das
ja
in
jbe
dec
out
jp
mov
mov
jge
rcl
repz
rolb
divl
popa
adc
je
xor
jp
add
lods
mov
outsl
mov
or
push
inc
jne
xorl
lds
les
add
xchg
das
cmp
mov
jle
adc
push
lock
adc
dec
sub
fisubs
pop
cmp
ret
loopne
aam
pop
and
aaa
or
or
ret
out
push
lock
loopne
xchg
fists
dec
ret
int
pop
mov
inc
and
je
sub
xchg
pop
add
pop
push
mov
mov
aaa
adc
pop
inc
and
mov
mov
xor
test
in
iret
rorl
lock
cld
mov
imul
cmc
insl
dec
inc
push
fstpl
iret
dec
arpl
sub
sahf
iret
push
lock
negb
xor
mov
add
enter
fs
push
out
aam
shl
rcrb
mov
mov
mov
int3
xchg
in
xchg
lods
push
out
filds
lcall
and
loope
loopne
nop
stc
popf
xchg
test
cmp
cmpsl
dec
paddusw
out
mov
adc
push
xor
mov
jmp
movsl
inc
int
addr16
and
out
shrb
outsb
dec
and
xchg
jbe
adc
and
aas
ffreep
imul
lods
dec
mov
xchg
insb
add
push
clc
ljmp
cmp
add
or
mov
add
jb
sub
cmpsl
cmpsb
push
jp
enter
xchg
mov
icebp
fs
xchg
mov
int
or
fwait
jnp
sub
add
cmp
pop
sub
xorb
ss
mov
inc
xor
lret
xor
rcll
adc
call
out
data16
add
inc
scas
or
pop
lret
jl
in
int
test
add
out
popf
test
dec
push
push
push
and
adc
insl
or
pop
repz
sbb
loop
das
adc
gs
sti
shr
mov
mov
ret
push
lret
or
pop
les
pushf
out
mov
scas
sub
ror
out
testl
nop
repnz
xor
in
jecxz
loopne
xchg
mov
in
popf
cli
mov
outsl
aaa
incb
jmp
sahf
popa
ds
xchg
sub
dec
jle
rcrb
aad
xor
fdivrs
pushf
inc
cmp
lock
fs
ja
js
fstps
push
cmp
pop
pushl
mov
shr
mov
je
fisubrl
mov
jno
xor
gs
jmp
pop
or
mov
sub
and
ljmp
inc
dec
loopne
mov
es
jno
ror
fs
shl
jle
lods
mov
dec
mov
add
popl
scas
push
hlt
in
addr16
cmp
dec
ja
ret
mov
inc
inc
xchg
sub
mov
sti
into
or
push
cld
fs
xchg
and
arpl
dec
popf
adc
daa
inc
jecxz
adc
aaa
ficompl
aad
pop
sbb
pop
lock
jmp
add
sbbb
fsubrl
sub
add
fisttps
hlt
jg
shl
adc
push
push
xchg
push
cli
mov
jecxz
repz
rclb
jmp
das
imul
hlt
adc
movsb
and
mov
pop
sbbb
xchg
jmp
mov
loop
xchg
das
ds
jbe
cmp
fwait
lea
sub
jo
ds
lcall
xor
mov
xchg
mov
repz
jl
jecxz
or
inc
mov
pop
xchg
test
jnp
out
in
pushf
and
xchg
mov
shrl
rorl
fildl
fistps
je
js
js
bound
pop
rcrb
inc
sbb
cwtl
loop
insl
jnp
and
add
sarb
jp
xchg
out
add
inc
js
pushf
push
in
loop
mov
sti
and
shl
icebp
and
xchg
push
push
lods
pop
sub
sbb
adc
inc
std
and
popa
icebp
sbb
jbe
bound
aaa
loop
lret
imul
clc
push
xchg
int3
sbb
fwait
into
pushf
andb
xchg
dec
pop
push
mov
push
mov
add
sbb
mov
pop
or
int3
data16
test
les
test
xor
mov
push
add
pop
sbb
adc
repnz
out
repz
aaa
mov
xchg
add
scas
and
push
inc
test
icebp
arpl
jne
ret
scas
popf
cltd
mov
mov
pusha
fld
out
shld
stc
dec
xor
cmp
js
add
test
sbb
repz
or
jno
or
pop
cmpsb
xchg
adc
out
cmc
rol
pop
sahf
push
adc
imul
test
fs
loop
dec
xor
data16
js
sbb
test
adc
addr16
jo
push
je
mov
pushf
mov
add
sbb
ror
rcrb
dec
mov
xchg
cmp
sub
cli
mov
daa
insl
mov
jnp
ret
sbb
fiadds
mov
xor
sub
sbb
push
adcb
pop
gs
shlb
and
ret
cmp
xchg
cli
xchg
xchg
cmp
out
mov
adc
mov
push
jl
repnz
mov
aaa
sub
insl
lahf
dec
imul
jne
test
lret
inc
in
add
aam
mov
repz
aas
scas
sub
stos
sub
mov
push
shlb
jnp
fldenv
popf
arpl
add
clc
xorb
mov
outsb
lret
push
in
in
inc
or
leave
aad
mov
push
in
sbb
and
mov
mov
mov
pop
test
ds
ss
xchg
test
lahf
jae
xchg
xchg
repnz
fimull
mov
dec
cmp
loope
loop
gs
sub
pop
gs
cmp
jns
push
movsl
jbe
jnp
movnti
dec
test
inc
xor
inc
lret
lret
jb
das
aad
loopne
push
pop
lock
imul
imul
ret
aas
daa
push
dec
out
cld
inc
popa
fucom
icebp
sbb
and
pop
cli
adc
push
js
imul
mov
or
mov
xlat
inc
pop
adc
cmp
mov
push
sti
ljmp
mov
pop
xchg
and
test
imul
and
fcompl
cmpsb
enter
and
loop
movsb
loop
int3
mov
sbb
into
sahf
ret
or
cmp
mov
imul
dec
mov
les
mov
lock
dec
push
dec
push
mov
negb
dec
mov
add
pop
xchg
movsb
in
and
or
addr16
mov
add
icebp
mov
cmpsb
call
dec
enter
out
sbb
jb
in
pop
imul
les
pop
cmp
inc
inc
test
cmp
pop
pop
mov
cmp
in
in
xchg
push
lret
dec
mov
repnz
push
push
pop
cltd
andl
je
mov
adc
ret
adc
push
jge
inc
cld
push
fidivrl
xchg
pop
pop
iret
jne
imul
pusha
fdivr
mov
hlt
bound
popf
clc
jo
sub
mov
xchg
pop
mov
add
dec
add
das
push
xchg
push
push
push
sub
out
pop
cmp
dec
mov
cmp
or
jg
jmp
dec
hlt
iret
shrb
and
mov
sbb
pusha
mov
mov
insb
sub
mov
xchg
adc
lahf
daa
mov
cwtl
cmpsb
mov
xchg
mov
xchg
mov
sahf
sahf
stc
int
ficomps
lea
lret
mull
ret
pop
fisttpll
in
out
imul
aad
push
xchg
dec
aad
xchg
pop
mov
push
sub
push
lea
xchg
imul
outsb
cmp
jns
and
mov
int3
dec
outsb
imul
js
outsb
xchg
out
add
rclb
into
sti
or
inc
and
or
cmpsl
xchg
in
pop
shll
mov
xchg
pusha
adc
je
fisubrl
jl
mov
ljmp
and
js
cmc
sbb
xchg
loop
push
jecxz
xor
push
xor
insl
pop
out
xchg
out
xchg
jmp
lret
data16
add
push
jg
sub
cld
inc
xchg
cli
leave
cmp
lock
xchg
ljmp
cli
test
fdivl
js
xor
addr16
push
or
sbbb
cltd
lds
mov
lds
pop
gs
dec
cmp
jmp
repz
xor
xlat
imul
mov
decb
out
scas
sub
xchg
stc
fstpt
lods
push
je
sahf
jns
int
hlt
fsubl
mov
ffreep
or
lods
mov
call
sbbl
arpl
inc
push
pop
mov
adc
jg
fists
fcmovnbe
cmp
sti
sub
sub
scas
sti
es
push
push
jns
lea
dec
push
push
mov
cmp
cmpsb
cmp
cmp
xchg
mov
pop
xchg
cmp
adc
int
scas
outsl
movl
and
sbb
jb
cmp
mov
out
pop
mov
pop
jno
jo
push
add
mov
stos
inc
outsl
outsl
test
pop
pushf
pop
repnz
inc
sbb
cld
movsl
xchg
and
pop
into
or
jns
and
shl
dec
jge
lock
ret
sub
in
pop
stc
repnz
movsb
stos
and
test
adc
xchg
cmpsb
dec
bound
ret
push
cmpsl
pop
dec
or
pop
fiaddl
les
out
xchg
gs
jnp
lock
xchg
xor
add
jp
out
lds
orl
in
sub
dec
dec
leave
jb
inc
pusha
ss
pop
pusha
notb
mov
cmpsl
push
popf
cmp
fildl
cmp
lahf
loop
dec
das
popa
mov
or
cmp
sbb
and
call
pop
sbb
dec
pop
pop
cmp
fistps
pop
cs
cmp
stc
hlt
xor
cld
cmpsl
ja,pn
mov
mov
test
push
shrl
jnp
mov
inc
fnstcw
mov
loop
mov
and
gs
repnz
mov
sarb
sub
sti
pop
lock
inc
or
cmp
in
in
push
imul
xlat
adc
push
popa
loope
and
scas
inc
mov
in
ret
xchg
in
icebp
cli
adc
cmc
adc
mov
je
rclb
ja
mov
dec
mov
repnz
adc
lds
mov
lret
imul
xchg
lock
cmp
shl
dec
xchg
jnp
movsl
add
lock
cmc
cmp
cld
les
idivb
mov
ljmp
shrl
aas
call
xchg
mov
mov
inc
call
sub
and
sahf
jecxz
push
data16
jge
rolb
test
out
add
cltd
lret
div
mov
insb
jo
fidivrs
hlt
pushf
cmpsb
push
mov
hlt
mov
test
jg
cmp
mov
sbb
mov
mulb
inc
xchg
add
jl
mov
push
xchg
leave
mov
cmpb
xlat
scas
xor
adc
pop
fisubrs
jg
adc
repz
or
imul
dec
jmp
inc
and
lret
aam
xchg
clc
xor
clc
loopne
jp
xchg
add
add
andl
mov
testl
rolb
xor
les
add
imul
imul
xchg
fsubs
in
jl
adcl
outsb
out
decl
mov
or
pop
xchg
jg
js
mov
mov
xchg
lret
push
pop
mov
loopne
lcall
and
pop
cld
div
fnstsw
bound
data16
mov
leave
jmp
nop
inc
xor
cli
jb
dec
ljmp
ja
cmp
add
push
and
bound
cwtl
jnp
and
sbb
outsl
dec
xchg
outsb
fcmovb
adc
mov
mov
fidivrl
std
lcall
push
repz
mov
and
fdivs
and
ret
jle
jno
test
mov
inc
dec
decl
in
mull
push
loopne
jno
lods
cld
push
mov
cmp
lds
imull
int3
sbb
lods
mov
xchg
lds
xchg
jo
idivl
shrd
cmp
shl
mov
lcall
popf
sub
nop
lahf
sbb
sub
push
fmull
ret
pop
pusha
mov
addr16
push
or
cmp
je
sub
loope
ficompl
into
aad
imul
ljmp
add
or
pushf
lcall
dec
imul
or
into
pop
lods
jl
jne
mov
ret
in
or
into
lcall
or
pop
in
out
mov
rcrb
rcrb
push
imul
jl
push
clc
cmp
fldl
pop
jecxz
scas
out
xchg
jne
aaa
lcall
xchg
sbb
test
mov
movsb
outsb
mov
ret
add
stc
sbb
add
push
dec
into
lds
cmpl
push
sti
mov
xor
dec
lahf
inc
add
aas
sarb
mov
xchg
push
std
or
fwait
dec
out
repnz
sbb
cmc
fs
rcrl
dec
and
shr
push
cs
ljmp
push
pop
ljmp
sub
ficomps
negb
clc
mul
inc
lret
adc
inc
lret
push
lcall
enter
iret
mov
add
mov
sub
stos
lock
xor
leave
test
mov
ljmp
scas
iret
inc
fs
adc
and
or
stos
mov
cmpb
pop
adc
adc
mov
sar
pop
icebp
mov
pop
inc
sub
cli
gs
insl
push
addr16
or
jno
stos
cmp
mov
iret
xchg
pop
and
dec
pop
pop
fisubrl
test
sbb
icebp
push
jne
lahf
lret
lods
aaa
mov
mov
mov
add
mov
popa
out
ja
in
inc
cld
fsubrp
test
mov
xchg
jno
lret
popf
pop
push
mov
adc
decb
sti
lret
addr16
jecxz
mov
push
sub
pusha
lds
insb
out
pop
mov
idivb
pushf
iret
jne
xor
sbb
stos
sub
cli
and
pushf
xor
sbb
sti
fildl
cwtl
in
jp
mov
test
and
jb
mov
jns
into
sub
or
shll
mov
add
sbb
nop
enter
inc
or
xchg
imul
sti
ss
std
sub
and
xor
mov
lock
mov
movsl
lahf
js
or
das
mov
push
int3
bnd
and
fisubs
pop
movsb
mov
dec
cmp
jo
psrlq
jns
jo
adcb
xchg
or
sub
jnp
push
jno
out
lods
jl
into
jmp
scas
xchg
xchg
mov
cmc
stos
sub
or
xor
out
addb
decl
mov
pop
push
fbld
xchg
cld
pop
pop
jbe
dec
dec
pop
mov
movsb
testl
cmp
push
data16
lret
inc
dec
pushf
xchg
xchg
xchg
lods
aam
pushf
inc
push
or
les
add
dec
mov
stos
shrb
mov
inc
pop
cmpsl
mov
aam
or
cmp
ret
xor
ret
aaa
and
pop
fsubr
mov
or
test
pop
ljmp
sbb
mov
and
into
sahf
xchg
pop
cwtl
pop
mov
xor
addr16
jl
stos
ret
scas
pop
jmp
xchg
lea
cmpl
push
xchg
out
out
add
jmp
ds
int3
pop
sbb
jns
mov
pop
adc
lods
cs
daa
xchg
aam
adc
cli
pop
arpl
test
test
lret
mov
or
sub
jno
jbe
call
xor
mov
or
scas
push
mov
lods
mov
int3
inc
cmp
add
into
adc
imul
fcoms
sub
jp
cmp
xlat
jl
cli
aam
push
in
push
loope
neg
dec
inc
jns
ljmp
rolb
insb
cld
xlat
pusha
xor
popa
das
ret
cmp
sti
test
out
outsl
mov
pop
xor
push
dec
je
into
cmpsb
cltd
cwtl
fcompp
adc
fnsave
push
lret
cli
xchg
scas
in
test
mov
add
out
mov
fists
mov
push
or
arpl
imul
jge
jo
es
sub
mov
jbe
sbbb
push
xor
int3
int3
popa
addb
push
jle
xchg
pop
dec
pop
jns
shlb
ljmp
mov
lods
div
xchg
aam
ljmp
inc
outsb
addl
fcoml
cmp
js
xchg
mov
mov
pop
pop
ljmp
iret
mov
testb
aaa
in
lcall
jns
sub
data16
pop
daa
push
jge
jns
sub
rcl
lds
and
dec
sbb
add
idivb
jl
fcmovb
pusha
xchg
test
mov
mov
mov
out
xchg
fildl
jecxz
pop
mov
insb
hlt
lods
in
movsl
pusha
mov
push
orl
icebp
xchg
xor
lods
jns
jno,pn
xor
sub
lds
add
hlt
cmp
mov
mov
addl
data16
icebp
into
and
mov
inc
filds
lcall
leave
inc
push
add
pop
sti
sub
cmp
mov
inc
pop
hlt
push
jno
push
xorb
cs
push
fs
test
cmp
or
mov
and
inc
lea
repnz
sub
in
clc
test
dec
xor
mov
push
fistpll
add
pushf
or
mov
out
pop
sbb
ja
push
mov
data16
xlat
bswap
sub
aam
inc
sbbl
popl
cmpsb
sbb
scas
cld
mov
and
sbb
cmp
lcall
aaa
pop
loop
sbb
movsl
scas
mov
sbb
dec
cli
movl
aaa
dec
mov
pop
shrl
pop
dec
mov
mov
clc
add
mov
out
imul
movb
mov
inc
dec
xor
cmp
xchg
fmull
mov
xor
shrl
mull
dec
in
test
bound
xchg
ja
int3
cmc
rclb
in
dec
cmp
test
xchg
cmp
rcrb
or
imull
shl
das
sub
push
mov
dec
mov
jl
clc
in
ret
pop
sub
ret
cmp
adc
jae
cld
or
pop
cld
xchg
int3
cmp
add
test
cli
sub
push
cmp
clc
or
scas
addr16
push
mov
shrb
cmpsb
xchg
jne
xchg
xor
cpuid
decb
cs
xchg
or
test
addl
leave
inc
popf
push
cmp
jae
data16
sub
cmp
arpl
pop
scas
std
loop
dec
jl
out
insb
inc
inc
sbb
decb
adc
sbbb
fnop
jle
adc
sbbb
inc
xor
or
mov
rorl
push
and
pop
jmp
sub
out
mov
sbb
cmpsl
hlt
add
lea
lret
push
test
or
cltd
cmp
cmp
pop
inc
mov
xlat
fs
mov
xor
adc
inc
rclb
xchg
dec
ljmp
pop
movsb
add
or
sbb
aad
idivb
stos
dec
pop
mov
add
xrelease
fsubp
pop
add
fiadds
les
inc
mov
sbb
ds
sbbl
lret
nop
push
test
jecxz
push
inc
push
xchg
inc
ret
test
pop
adc
ljmp
inc
aam
or
pop
add
and
sti
push
mov
push
test
outsb
sub
add
fimuls
fwait
sub
ja
inc
jno
jne
push
adc
xchg
je
gs
movsb
bound
sub
xor
in
xor
add
ss
xchg
mov
jns
cli
addr16
adc
xor
ficoml
dec
test
les
adc
aaa
ds
imulb
jmp
mov
xchg
cltd
mov
xchg
pop
or
repnz
test
jae
push
jmp
jb
mov
fcmovnbe
in
addl
mov
sbb
mov
fisttpl
push
xchg
add
cli
adc
popf
add
pop
xor
lock
cmc
addl
lds
lret
nop
adc
mov
scas
fnop
test
xor
jne
add
xchg
push
shlb
stos
mov
inc
and
gs
imul
cltd
fsubl
std
mov
mov
push
loope
sbb
loopne,pt
add
in
ret
fs
imul
fcompl
insb
add
ljmp
test
or
sub
mov
add
lret
ss
mov
pop
testb
add
inc
dec
sti
in
pop
je
pop
adc
mov
xchg
scas
mov
rcrl
or
adcl
hlt
dec
es
mov
mov
mov
scas
in
arpl
push
sub
jp
sub
fdivl
cmc
sti
ret
nop
fdivs
xor
sub
dec
push
xchg
shll
add
test
dec
jne
cmp
addb
stc
sti
push
or
push
lcall
xchg
mov
daa
sub
jmp
out
add
push
pop
dec
pop
shll
add
incb
fcom
sbb
ja
mov
les
icebp
out
jns
sub
push
movsl
repz
lods
repnz
pop
mov
les
mov
rorl
aas
popf
mov
push
mov
lock
pop
cmp
insb
xchg
inc
pop
cmpsb
movl
jecxz
and
xor
push
fucomi
jg
lea
push
adc
and
push
loopne
xchg
int
ret
pop
loop
or
std
jecxz
mov
rorb
xchg
lret
mov
test
mov
lcall
and
ret
push
imul
push
sub
out
xchg
mov
int
fbstp
inc
xchg
jo
fsubs
jae
mov
test
ret
pop
xlat
sub
inc
fldt
out
cmc
xchg
imul
push
scas
mov
inc
jg
bound
testb
cli
cmp
or
jo
and
arpl
pop
out
xor
andl
adc
add
js
jge
sbb
add
dec
les
push
pop
dec
inc
mov
cmp
in
push
adc
call
mov
push
cmp
jge
inc
mov
xor
cwtl
xchg
and
push
loop
cmpsb
fdivl
sbb
mov
sub
mov
test
xchg
push
mov
dec
push
jl
bound
sub
leave
aaa
inc
adc
dec
movsb
loope
sbb
cltd
cmp
sub
push
add
jmp
mov
add
out
sbb
fdiv
dec
lods
pop
mov
lods
inc
cmp
mov
rcr
outsb
cmp
pop
addr16
mov
frstor
out
push
jecxz
push
dec
ja
nop
jp
in
repz
xchg
sub
mov
inc
aad
lea
pushf
jb
ss
mov
in
lds
loope
cld
shl
mov
mov
and
mov
shlb
fildll
mov
push
xor
out
inc
aad
lcall
scas
or
push
or
outsb
les
bound
sbb
les
sti
movsl
std
lret
pop
rol
push
xor
mov
sub
mov
std
stc
fcoml
inc
ret
adc
bound
lock
aaa
mov
repz
push
pop
int
test
cmp
cmpsb
mov
jnp
xchg
push
imul
ror
int
jae
dec
aas
in
xor
push
cltd
hlt
pop
sahf
xor
and
jge
dec
xor
push
mov
fdivl
insb
xchg
lds
jns
push
fisubrs
mov
mov
push
pop
jno
or
sub
xchg
mov
test
imul
pop
pop
dec
dec
pusha
mov
pop
xchg
std
dec
fstpl
jmp
roll
aad
gs
push
sub
sub
ds
pop
int
test
aas
out
rcrl
sarb
adc
test
jecxz
hlt
pop
ljmp
or
scas
inc
inc
imul
stos
mov
notb
add
xlat
mov
fcompl
in
arpl
pop
aaa
lahf
mov
or
mov
xor
jae
mov
imul
scas
add
aad
xchg
divps
enter
jge
mov
iret
imul
push
adc
cmp
arpl
xor
out
in
cmp
fcmovne
mov
rcll
inc
add
inc
mov
cmpsl
or
sbb
pop
shlb
dec
fsubr
dec
dec
gs
insl
repz
sbb
test
lea
mov
lds
insb
mov
mov
mov
mov
pop
push
cltd
sahf
fstpl
jle
jno
imul
adc
or
testl
jb
jbe
or
jae
dec
cmpsb
ret
pop
jecxz
mov
cmp
pop
iret
lret
mov
adcl
sahf
out
neg
sbb
push
leave
xor
arpl
outsb
jl
mov
cmp
ret
or
ror
and
jno
je
scas
popf
push
pusha
das
inc
sub
mov
inc
sub
loopne
out
test
xchg
jne
les
stos
orb
data16
iret
mov
sbb
lret
xrelease
xlat
push
scas
cmp
pushf
sub
sub
pop
push
pop
in
jecxz
sub
and
cmc
or
jne
out
stos
mov
fidivrl
sbb
movsl
jne
dec
adc
adc
movsl
sub
cltd
add
pop
aam
outsl
inc
icebp
shrl
out
and
aam
xor
shlb
aaa
pop
aaa
lret
out
bswap
inc
cmc
mov
mov
sub
bound
inc
inc
fsts
cmpl
mov
dec
cmp
sub
mov
add
icebp
lret
sbb
dec
fnsave
orb
lcall
sbb
outsb
aad
xor
test
mov
mov
inc
lret
call
pushf
sbb
add
maxps
imul
and
add
push
adc
mov
stos
sub
mov
out
pop
push
pop
popa
jnp
dec
or
inc
xor
sub
faddl
int3
clc
xchg
xchg
xor
or
xchg
sbb
mov
jecxz
or
mov
bound
dec
js
dec
mov
jle
sub
insb
loop
or
cmp
mov
sbb
ja
xor
xor
cmp
ds
or
mov
and
sbb
cmp
iret
mov
pop
mov
pop
stos
iret
into
xor
ficompl
jae
add
clc
icebp
pop
loop
lcall
lods
sub
mov
push
inc
xorl
jb
int
daa
insl
lret
popa
subb
fnstsw
dec
je
in
sahf
xchg
sub
mov
jecxz
sub
push
jns
add
sbb
jae
insb
bound
push
out
in
sub
les
cmc
pusha
stos
lods
xchg
ss
jecxz
loop
cld
inc
ljmp
add
lods
fwait
jmp
xlat
test
mov
idivb
fsubrl
cld
pushf
repnz
adc
mov
and
pop
lcall
xchg
or
add
out
cli
pop
add
in
push
sbb
pop
es
in
and
mov
test
pop
data16
xchg
sub
adc
push
shll
pop
ss
test
xor
addr16
and
repz
pop
daa
pop
lods
push
sar
xchg
in
mov
das
out
fwait
cwtl
mov
stc
sbb
and
ja
jmp
adcb
std
pop
inc
cmpsl
jns
lcall
adc
cmp
xor
sub
sarb
push
repz
mov
jne
adc
push
call
es
dec
out
adc
jo
jl
enter
aaa
sbb
gs
adc
nop
cltd
fnstsw
popf
sub
ss
push
or
push
pop
pop
jae
push
scas
dec
or
cmp
cltd
cmp
scas
pop
scas
leave
add
stc
enter
paddd
sub
adc
push
adc
mov
mov
gs
sarl
in
jae
test
jg
adc
popa
ss
sub
adcb
pop
sti
sub
or
add
mov
xchg
and
add
cmp
push
cmp
cmp
in
or
dec
cmp
jo
jp
fstl
lret
dec
pop
sahf
mov
dec
popf
mov
ret
cmpsb
push
mov
ds
adc
jl
andl
xchg
pop
js
sub
add
xchg
movsb
mov
ja
push
gs
push
fwait
movb
icebp
mov
push
push
cwtl
in
mov
jne
loopne
sbb
mov
mov
nop
push
push
in
scas
hlt
sub
mov
iret
nop
cmc
adc
pop
adc
jmp
repz
dec
mov
xchg
or
push
cmc
xchg
jae
or
mov
sub
out
push
or
mov
out
add
test
lret
mov
inc
push
pop
arpl
jno
shrl
jp
push
push
cs
xchg
lock
push
mov
cmp
shrl
outsb
movlhps
push
ss
or
jns
lods
idiv
mov
xchg
cmpsb
dec
addr16
insb
je
out
inc
lock
out
jg
pop
in
xor
jb
dec
add
test
call
xchg
test
out
imul
iret
stc
jge
fcomps
test
xchg
incl
xor
stos
mov
dec
leave
pop
mov
pop
insb
push
xchg
push
mov
cmpsb
jne
jmp
jns
imulb
pusha
pop
mov
and
out
jge
outsb
not
aam
sbb
inc
xor
lahf
mov
pop
js
in
bound
jb
jl
dec
stc
pop
push
int
sbb
repz
dec
jmp
inc
and
stos
ret
mov
mov
gs
scas
xchg
jno
and
mov
icebp
mov
jo
imul
int
add
jmp
lods
sahf
mov
xor
xchg
cmp
inc
into
sub
lds
les
mov
pop
adc
inc
xor
inc
hlt
fmuls
out
data16
inc
cli
fnsave
loope
call
inc
mov
loopne
or
ret
and
mov
mov
test
jmp
das
int
mov
popf
fistpll
and
pop
pusha
shr
stos
jne
pop
outsb
pop
cmpsl
pop
cmpsl
sub
outsb
test
lds
and
ret
aaa
jnp
jbe
or
aaa
or
push
dec
or
test
aas
imul
adc
pusha
in
jecxz
cli
dec
call
jle
popf
dec
cmp
jecxz
sahf
add
add
cmpsl
jp
ljmp
sbb
inc
push
inc
aad
inc
aam
stos
mov
fdivs
xor
pusha
xor
pop
mov
adc
mov
insb
add
out
test
popf
mov
in
fisubrl
jb
dec
jb
add
test
pushf
jle
fisttpll
imull
and
inc
push
lock
das
push
cmp
aaa
mov
std
popf
clc
xchg
int
mov
adc
xchg
or
into
scas
je
mov
jbe
xor
mov
js
cmpsl
lahf
xor
imul
daa
lock
lods
pop
inc
inc
inc
add
iret
xorl
cli
movsl
push
sub
jno
xchg
push
mov
or
shll
cltd
inc
loopne
cmpl
popa
dec
lock
push
pop
scas
adc
adc
loopne
inc
jmp
or
pop
mov
jne
aas
test
outsb
pushf
or
jo
pop
mov
vpacksswb
lea
std
in
mov
push
pop
cmc
jbe
aaa
dec
movsb
add
adc
add
leave
push
mov
in
pop
scas
repz
mov
scas
sahf
inc
mov
mov
push
adc
lods
out
repz
sbb
xlat
fmuls
inc
jecxz
inc
outsb
xor
adc
mov
fwait
loope
jp
cmc
je
mov
jl
rclb
mov
push
push
lahf
and
aad
sarb
mov
mov
mov
and
push
mov
repz
ss
jp
jmp
fwait
mov
inc
mov
and
jg
sub
push
es
shlb
pop
ss
mov
lahf
stc
in
mov
jae
pop
inc
xchg
in
inc
fisttpll
in
and
inc
pop
cld
jns
fsubl
inc
in
mov
mov
adc
leave
dec
push
xor
clc
imul
rolb
xor
push
popa
scas
add
lcall
cmp
pop
ja
lret
pop
xchg
fidivrl
inc
jmp
jns
xchg
out
push
jbe
inc
jp
dec
jo
out
out
pop
dec
sub
fldt
jp
loopne
xchg
insl
call
stc
push
xor
bnd
mov
lea
mov
adc
fimuls
in
push
mov
stos
fmull
push
mov
in
mov
imul
xchg
jo
sti
pop
jmp
ss
lods
lds
dec
fiadds
scas
dec
sti
test
xchg
stos
sbb
je
andb
in
inc
mov
adc
add
xor
jae
mov
negl
int3
pop
bound
pop
push
inc
jle
add
jb
mov
xor
out
lret
lds
gs
xchg
sti
jbe
fwait
push
push
xchg
cmp
cmp
aaa
mov
daa
fisubrs
and
dec
pusha
iret
lret
lea
push
mov
add
push
mov
jo
sbb
xor
gs
inc
mov
or
scas
pop
jmp
adc
xor
pop
aam
test
iret
mov
divb
leave
jns
cwtl
jmp
rcrl
sbb
dec
add
pushf
pushl
ds
ret
jae
sahf
cmp
xor
jg
stc
cmpsb
fidivl
lock
fdivl
sub
mov
faddp
imul
mov
int3
into
shlb
cmp
in
cli
rclb
rorl
adc
outsb
xchg
xor
int
push
inc
std
iret
popa
inc
lods
jg
push
fnstsw
add
test
jns
enter
addr16
and
mov
std
cld
in
orl
inc
xor
mov
out
adc
faddl
cmp
jb
mov
pop
imul
jb
test
test
or
adc
mov
loop
loop
push
out
loop
pusha
mov
inc
mov
int3
mov
nop
test
lea
stos
sub
pop
add
fwait
les
daa
fidivs
push
mov
iret
sub
pop
dec
add
push
jnp
adc
and
sti
jecxz
xchg
loope
xchg
dec
pop
xor
out
in
pop
iret
lea
mov
mov
or
sub
cmpsb
pushf
test
rol
dec
mov
insl
repnz
pop
mov
mov
scas
push
stos
adc
pusha
inc
sti
jns
iret
and
xor
lcall
or
bnd
fidivrs
lret
push
scas
subb
jmp
dec
or
and
jp
pop
daa
mov
add
jmp
push
int
sti
jecxz
pushf
and
sub
jo
xor
ror
jmp
stos
mov
cli
xorl
push
mov
mov
sbbl
or
rol
adc
rcrb
xadd
fistl
stc
inc
sbb
push
cmpsl
inc
mov
push
dec
in
scas
leave
out
push
xchg
pop
pop
push
sub
adc
mov
cmp
mov
jbe
pushf
hlt
xor
shll
es
fs
outsl
sub
jne
mov
mov
popf
pop
xor
mov
xor
mov
sub
xchg
xor
repz
pushf
push
add
dec
int
push
movb
dec
rcr
dec
repz
fsubrs
mov
mov
mov
add
sbb
fidivrl
insb
cmp
dec
pop
sub
dec
scas
dec
insl
shll
rcr
jl
adc
xchg
bound
iret
and
out
fildl
les
mov
std
push
jge
add
adc
xchg
xchg
test
push
or
cmp
xchg
push
cmp
xorb
xlat
lret
xchg
cli
sbb
clc
in
pop
add
add
mov
adc
jp
je
adc
sbb
cmp
jg
cmc
in
loope
pop
mov
call
adc
stc
xor
cmpl
das
leave
xchg
and
jmp
dec
mov
clc
fsub
mov
xor
sbb
movsl
scas
mov
jle
xorb
pop
xchg
outsl
aad
xor
sbb
test
mov
lcall
pushf
mov
je
pop
loopne
fisttps
mulb
xchg
ljmp
movsb
push
dec
rcrb
add
stos
in
std
ljmp
dec
cmp
or
mov
sub
mov
xchg
cmpsl
and
xor
push
jp
out
das
outsl
mov
sbb
sub
xchg
int3
and
insl
adc
rorb
jae
and
inc
stos
shlb
shlb
loopne
add
fcomp
xchg
sub
inc
dec
int3
jp
inc
mov
aaa
xchg
je
mov
sub
push
xchg
mov
add
int
cmpb
leave
xor
xlat
mov
xchg
xor
leave
jns
mov
adc
int3
cmp
dec
pop
mov
inc
leave
pop
cmp
xor
rcr
or
jp
cs
fnstcw
rol
sbb
mov
or
sub
cmp
xor
test
loope
mov
bound
push
call
pop
cltd
rol
mov
cmpsl
mov
clc
or
into
out
push
pop
dec
cwtl
xchg
push
insl
lret
test
xchg
jge
filds
push
mov
pop
imul
mov
lcall
mov
adc
pop
xchg
bound
add
and
sub
lahf
in
xchg
ljmp
xor
js
es
xchg
fbstp
lods
xchg
xlat
mov
test
xlat
push
sub
repz
hlt
daa
fwait
aaa
js
or
pop
call
hlt
or
cmp
push
mov
and
fisttpl
xchg
add
fwait
orl
stos
mov
fstp
mov
adc
push
dec
incl
inc
fucomp
shlb
jne
push
data16
lahf
imul
test
pop
push
sbb
cmp
aad
mov
or
pop
mov
testl
into
lret
mov
lock
push
sbb
nop
jbe
aaa
in
aad
dec
mov
filds
xor
imul
jno
lret
fbstp
sub
sbbb
sbb
lret
rolb
mov
dec
add
data16
sbb
xchg
xor
mov
push
pop
cltd
or
lcall
push
and
les
pop
and
ss
mov
in
sub
fwait
pop
push
aaa
or
loope
jle
or
sbb
cmp
std
pushf
mov
push
xchg
lahf
fmuls
js
jne
add
movsl
clc
xchg
jg
push
imul
rcrl
dec
lret
cltd
icebp
dec
push
shr
xor
addr16
or
hlt
iret
ret
jns
lahf
dec
jle
push
add
or
mov
xor
stc
xlat
imul
cmp
push
aaa
cmc
pop
testb
sbb
inc
pushf
mov
aad
sub
push
stc
fcompl
ficoml
dec
lds
inc
push
xor
int
pop
jns
sub
test
adc
adc
aaa
xor
lea
aaa
cmp
mov
call
mov
or
rcrb
loopne
lods
fistps
cmp
or
stos
inc
std
mov
push
int
and
add
inc
jbe
mov
mov
xor
not
mov
inc
xchg
cld
jne
sbb
add
test
test
mov
push
test
xor
divb
add
addr16
lea
sbb
inc
xlat
mov
fwait
pop
sarb
mov
ss
lock
cld
push
dec
daa
popa
lods
and
pop
sbb
nop
cld
shlb
mov
xchg
or
and
dec
leave
push
les
pushf
cmp
and
pop
vaddpd
mov
cmp
cmp
hlt
aam
insl
or
add
sbb
push
sbb
scas
sti
pop
call
cmp
bound
ja
push
je
push
lea
pop
mov
xchg
lods
mov
or
cltd
nop
xchg
rclb
xorl
push
scas
sub
inc
pop
test
push
push
inc
lcall
mov
xchg
jns
shll
xor
cmpsb
aam
pushf
pop
in
inc
outsb
xchg
pop
sub
mov
repnz
lods
popf
getsec
or
jp
cmp
int
cmp
adc
xlat
repz
pop
nop
rcrb
mov
xor
addb
pop
push
sub
dec
mov
jb
inc
packsswb
ljmp
aam
inc
ret
enter
stc
cmc
out
mov
dec
mov
jno
test
outsl
imul
push
call
cmp
sti
inc
and
dec
mov
dec
iret
inc
rcrl
into
adc
fwait
int3
add
jb
lcall
jnp
xor
or
je
xor
mov
or
daa
pop
fsubl
pop
inc
mov
ds
and
mov
pop
and
lods
fwait
shlb
sub
fs
xchg
sub
jnp
lret
sub
and
ss
lahf
bound
lcall
rclb
outsb
jns
inc
mov
les
mov
sbb
mov
das
daa
jnp
jne
adc
lret
jmp
fwait
subb
push
cwtl
in
push
mov
pusha
push
dec
jo
js
div
mov
jmp
mov
mov
aam
ja
fistpll
xchg
hlt
xchg
jne
mov
jo
jne
testb
sti
fldcw
inc
into
in
mov
loopne
cld
lods
pop
lea
outsl
xorl
and
es
dec
lds
push
movsb
and
sbb
fwait
pop
cmpsl
dec
mov
std
leave
movl
shl
jge
loope
push
mov
sbb
in
or
mov
mov
mov
data16
imul
fucom
inc
and
dec
clc
fs
xchg
pop
fnstcw
dec
xor
mov
push
sbb
mov
xlat
mov
jne
movl
ss
xor
ja
pop
jno
dec
sub
cmp
xor
in
aaa
pop
xchg
test
xchg
ret
xchg
push
lods
scas
pop
xchg
das
daa
sub
nop
cmp
adc
scas
mov
in
sub
adc
and
add
call
push
push
movsl
cmp
mov
mov
rcll
stos
cmp
dec
aam
cmp
push
cmpsl
mov
mov
or
jle
out
dec
fstpl
int
cmp
popa
jne
movsl
or
out
adc
inc
pop
add
push
mov
push
and
mov
mov
lock
mov
aam
test
fidivs
fs
add
jg
loopne
loope
dec
xchg
ss
fcoml
jbe
or
inc
test
cmc
out
in
adc
in
jne
or
cli
jno
repz
mov
fidivrs
shrb
sub
jne
les
adc
adc
jne
ret
cmp
cmpsb
xchg
pop
in
fwait
mov
pop
add
xlat
xor
mov
mul
stos
es
sahf
xor
sub
cmp
test
arpl
adc
lds
addr16
xchg
cwtl
and
sub
cmp
dec
and
ja
clc
negb
loop
mov
in
pop
adc
rclb
test
mov
mov
xchg
push
mov
int3
inc
xor
fs
sti
in
pop
stos
xor
mov
push
xchg
mov
add
add
ror
mov
mov
add
mov
loope
int3
nop
shll
inc
dec
or
pop
mov
xchg
movsb
adc
jbe
dec
jl
enter
mov
jecxz
stos
gs
and
pop
leave
lea
inc
cmp
aas
hlt
pop
imul
lods
insl
aam
inc
mov
insl
fnsetpm(287
cmpsl
xlat
xchg
push
jp
jo
and
sbb
mov
mov
mov
pop
mov
vpaddq
push
orl
inc
jl
insl
and
mov
ret
daa
call
pop
pop
mov
call
jmp
loopne
daa
lret
lods
mov
cld
aas
dec
outsb
fs
mov
out
and
stos
xor
xchg
repnz
dec
xor
pushf
movsb
in
add
xlat
mov
cmpsl
addr16
jae
mov
xor
jg
mov
jecxz
gs
pop
push
dec
jge
xchg
cmp
sbb
je
pop
mov
je
fcomip
div
xor
sbb
lods
push
jns
leave
inc
mov
or
add
aaa
cmp
dec
cmp
out
xchg
rorb
fdivr
ds
orl
js
dec
cld
inc
push
imul
push
inc
adc
push
pop
fwait
mov
js
mov
push
lods
and
mov
test
sub
dec
push
mov
test
lock
xor
imul
xlat
mov
inc
xchg
xchg
jg
es
loop
lcall
sbb
add
mov
mov
nop
push
inc
lret
out
ljmp
movsl
push
and
pop
in
mov
mov
push
xchg
mov
out
adc
push
popl
sbb
cmp
jno
in
pusha
push
mov
cs
scas
mov
adc
ja
js
inc
ljmp
xchg
xchg
inc
dec
cmp
popf
jno
or
loop
push
lret
bound
arpl
inc
jno
push
scas
sbb
jnp
aad
sti
xchg
push
lea
cld
and
push
or
sub
scas
pop
sahf
xchg
cmp
loop
outsl
push
out
dec
xchg
arpl
mov
jne
sub
mov
mov
mov
mov
sub
adcb
std
cs
call
adc
sub
es
lahf
test
pop
cltd
data16
inc
jge
out
mov
sbb
scas
pop
mov
stos
push
loope
addr16
jnp
dec
rclb
movsl
test
cmpsb
pop
aad
out
xor
rcrb
insl
inc
test
xorb
jg
cmc
lds
fucomi
rclb
jmp
jae
mov
or
cltd
mov
dec
adc
inc
pop
mov
sti
rcll
call
sub
sbb
cmc
inc
rorl
xor
and
sub
sub
dec
push
mov
pop
out
pop
test
sbb
push
xchg
lret
popa
cmpsl
cmpsb
lds
or
sahf
in
adc
mulb
call
inc
dec
push
push
xchg
add
decl
sub
push
jne
jae
lods
push
add
stos
test
mov
mov
enter
mov
dec
out
add
test
sbb
mov
pop
mov
mov
jbe
add
pusha
mov
or
out
repz
jae
rclb
aaa
jne
or
imul
mov
loopne
aad
dec
inc
push
movsl
sahf
scas
enter
call
push
pop
mov
stos
popf
leave
pushf
cld
and
loop
arpl
pop
jns
mov
or
jmp
in
push
and
push
sub
fisttpl
push
push
push
test
or
nop
inc
in
xchg
mov
lretw
pop
arpl
stos
mov
popa
pusha
lret
fsubrs
clc
cmp
repz
xchg
jae
cmpl
test
xchg
mov
scas
or
in
lds
ret
sbb
out
mov
mov
mov
iret
test
add
xchg
sub
push
jecxz
pop
cmp
orl
push
add
push
inc
iret
notb
lea
arpl
call
jo
in
adc
or
mov
lcall
adc
es
or
into
ljmp
addr16
shrl
clc
aad
jns
stc
fldenv
test
add
inc
mov
call
push
sbb
and
pop
lret
pusha
xchg
repnz
fisttpl
lods
mov
add
xchg
dec
push
daa
xchg
adc
sub
cmp
push
sbb
adc
push
outsb
pop
inc
lods
sbb
and
mov
sub
popa
imul
sub
and
mov
addr16
data16
xchg
dec
cmc
scas
sbb
enter
int3
dec
adc
fsts
outsb
inc
mov
mov
arpl
outsb
add
sarb
xlat
iret
mov
and
mov
mov
inc
sahf
scas
mov
fdivrs
pop
sbbb
jp
rorb
dec
xchg
fsubl
daa
mov
cmp
pop
pushf
adc
scas
inc
in
out
pop
or
jb
dec
or
out
and
xrelease
insl
sub
or
out
sub
mov
bound
xchg
andl
adc
rorb
or
pop
int
test
push
inc
imul
xchg
out
jge
inc
enter
out
mov
flds
popf
mov
xchg
test
shll
sub
jbe
cmp
es
fisubrs
xlat
push
fists
dec
in
adcb
sbb
push
push
push
mov
ret
test
or
loope
or
iret
dec
xchg
mov
movsl
in
xlat
sbb
adcl
lcall
pop
js
inc
stos
push
xchg
imul
xchg
pop
sbb
pop
pop
lret
inc
cmp
add
jg
nop
imull
cmc
xchg
and
test
pop
cmp
daa
addr16
dec
ret
add
jecxz
xchg
fstpl
xor
dec
repnz
jbe
pushf
or
mov
xchg
sahf
rcr
xchg
testl
call
push
aam
ja
or
add
dec
cmp
mov
lahf
ret
cs
std
push
sbb
jns
sbb
test
int
jecxz
sbb
imul
fmuls
insb
popf
fs
xchg
imul
test
movsb
out
imul
push
or
daa
pop
repnz
dec
imul
movb
sub
pop
or
and
daa
es
jbe
arpl
je
jbe
lea
test
push
out
rep
lcall
cld
lea
stos
addb
js
mov
fmuls
sbb
stc
add
fiadds
clc
sub
sub
loop
notb
pop
adc
mov
loop
mov
ror
negl
pop
mov
xchg
fldl
mov
mov
or
lea
xchg
or
sti
int
sbbl
pop
daa
outsb
fldcw
imul
jns
xor
stc
call
out
icebp
scas
xorb
sub
mov
sbb
movl
xor
stos
std
enter
dec
je
rcrb
outsl
andl
mov
pushf
stos
test
cmp
adc
pop
mov
and
shrl
jae
sbb
xchg
adc
les
xchg
push
xor
fnstsw
enter
iret
dec
and
xchg
repz
fistl
pop
scas
mov
call
adc
jnp
test
shlb
and
mov
push
jbe
jo
movsl
mov
push
lret
gs
dec
cmp
in
ja
clc
mov
inc
jno
xor
push
addr16
lock
sub
inc
pop
cld
fcomps
fwait
shrl
xor
push
mov
sbb
dec
nop
out
punpckhdq
pop
pop
movsbl
add
imull
and
mov
pusha
imul
mov
cmp
dec
inc
divl
pop
call
jae
ret
popa
out
leave
push
cmc
jl
dec
lret
stos
xor
popf
scas
mov
mov
or
fsubrl
daa
pop
mov
outsl
add
xchg
scas
sahf
pop
mov
push
inc
les
leave
pusha
cmc
sub
std
xchg
aam
daa
sbbl
sti
jne
aam
out
insl
push
out
sbb
push
pop
faddl
sbb
aaa
xor
add
cmp
roll
pop
mov
jmp
loope
jmp
rcl
push
jb
sub
push
push
pop
xchg
lahf
cmp
mov
aaa
andl
sti
inc
out
int
mov
out
gs
stos
jne
jmp
movsl
mov
cmp
and
mov
jbe
push
xor
addr16
pop
fistpll
mov
xor
push
pop
hlt
mov
cmp
testl
je
cld
dec
or
out
adc
xor
mov
into
imul
les
inc
sbb
xchg
jbe
cs
lret
cld
mov
push
lea
push
and
das
lea
mov
sbb
inc
xlat
mov
sbb
sub
mov
jecxz
imul
add
sub
stc
jae
imul
ficomps
xchg
or
addb
mov
add
inc
inc
xor
ds
loope
imul
fwait
add
sbb
loope
adc
sbb
jae
inc
cs
in
sbb
scas
gs
push
dec
mov
jge
inc
or
mov
mov
rorb
out
jecxz
mov
cmp
push
iret
sbb
test
xchg
and
mov
xchg
or
pop
pop
movsl
mov
daa
iret
adc
sarb
jecxz
dec
insl
bound
sbb
sti
inc
insb
call
test
andb
add
ret
imul
or
mov
inc
push
icebp
xchg
sti
sbb
ret
ficoml
ljmp
xchg
adc
mov
rcrl
cmc
jo
into
pop
or
icebp
pushfw
icebp
sub
sub
pop
outsb
jle
sarb
lods
xchg
lahf
push
int
mov
lahf
sub
insb
xchg
stos
outsl
mov
sbb
popf
mov
xlat
clc
cwtl
mov
scas
cltd
insl
pop
aam
es
inc
and
add
test
ljmp
outsl
or
push
jge
push
out
or
mov
mov
cmp
js
adcl
shl
imul
pop
jle
faddp
mov
ret
mov
xor
fcoml
scas
sbb
and
inc
sarb
xorb
stos
jae
addl
mov
mov
pop
or
jae
and
hlt
fninit
sbb
sub
cli
mov
push
iret
xchg
sbb
in
ret
dec
lds
add
das
cmp
fldl
sub
clc
push
into
stc
or
jbe
xchg
les
arpl
lret
xchg
inc
gs
outsl
fs
sbb
mov
jb
sbb
mov
cld
mov
dec
mov
ficompl
incl
and
test
nop
pop
xor
flds
sub
nop
mov
jl
add
movsl
repz
xor
xchg
loope
xor
or
sub
lds
aas
cmp
test
cmpsb
mov
int3
scas
aad
adc
repz
push
jns
cmp
fnstenv
pop
loopne
inc
clc
xor
add
push
in
fistpl
adc
jnp
xor
mov
daa
imul
and
adc
aad
lods
cli
adc
xor
dec
dec
hlt
lcall
xchg
push
push
push
cmpsl
or
aad
adc
xchg
jecxz
inc
call
inc
push
xchg
or
push
outsb
in
dec
pop
bound
mov
lea
js
imul
inc
jge
lcall
repz
sub
aas
cmc
jo
or
loope
in
test
loopne
aaa
shll
inc
leave
shll
and
dec
sub
push
cmp
and
jbe
push
mov
mov
push
cmp
adc
outsl
xchg
mov
not
jbe
add
cmp
movb
pop
sub
xor
dec
fstpt
adcb
fs
gs
dec
jge
andb
cs
pop
fadds
sarl
pop
movsl
mov
jecxz
stc
adc
insb
loop
add
shll
inc
jae
fidivs
out
fs
cltd
add
or
jno
mov
mov
icebp
lods
cmpsl
adc
sbb
dec
jle
bound
add
sub
movsb
push
mov
and
push
imul
mov
inc
sarl
stos
dec
or
lcall
and
cld
jae
cmp
into
pop
dec
sub
into
adc
push
das
aaa
push
jl
addr16
mov
sbb
mov
scas
sub
out
mov
iret
stos
xor
jecxz
dec
popf
cmp
mov
daa
pop
orb
xor
shrb
push
rcr
add
inc
ficoms
lock
js
mov
sbb
dec
int3
sbbl
nop
outsl
leave
nop
and
sub
or
roll
pop
in
dec
xor
inc
ret
inc
lds
cmc
pop
push
dec
mov
rol
mov
and
mov
fmull
outsb
and
shrb
mov
mov
xchg
fistl
test
aam
xor
cs
aaa
adc
dec
fldcw
sbb
rolb
out
push
mov
jge
or
cmp
dec
xchg
jb
adc
popa
insl
or
jp
inc
mov
and
sbb
mov
xor
sbb
lods
sbb
lcall
xorl
cmpl
loope
sub
sub
dec
or
adcl
mov
mov
lods
mov
xchg
sbb
and
push
pop
and
lock
push
subb
mov
mov
in
xchg
push
or
pop
inc
xor
mov
jbe
inc
push
lea
xchg
or
push
les
xchg
js
xor
add
ljmp
and
cmpl
shlb
jg
lcall
mov
lret
sub
jae
mov
jns
data16
cmpsb
jecxz
jno
adc
xlat
mov
jbe
outsl
pushf
mov
repz
fidivrs
test
stos
mov
xchg
push
fstps
popf
gs
iret
adc
movsl
in
lahf
add
data16
pop
js
fstl
aaa
add
out
popf
mov
add
dec
xor
and
idivl
mov
push
sarl
shll
fcompl
or
or
pusha
insb
mov
adc
or
sub
pop
dec
dec
divl
mov
xor
ds
or
mov
hlt
stc
lret
adc
inc
out
or
ja
sbb
cli
jns
cld
jecxz
pushf
daa
jnp
out
mov
addr16
jno
adc
adc
or
stos
xor
jbe
mov
or
out
push
sub
sbb
sub
xor
mov
pushl
lret
cmp
mov
xor
frstor
ds
cmpsl
xchg
cltd
cwtl
repnz
rcr
mov
cmc
stos
rcrl
mov
imul
fmuls
and
sti
lret
sub
notl
dec
sub
fildll
loop
in
jb
leave
rcrl
sahf
imul
pop
and
push
inc
xorb
xchg
ja
and
push
movsb
cmc
mov
mov
mov
push
gs
push
test
xor
mov
stos
pop
cmp
cmc
mov
aam
rep
cltd
adc
fimuls
pop
mov
cld
mov
sbb
outsb
mov
or
aad
stc
outsl
outsl
xchg
mov
push
fcmovne
adcb
adc
shll
or
dec
testb
rolb
mov
int
testl
push
subl
xchg
ds
xchg
fidivl
dec
jp
mov
insl
mov
add
inc
lret
mov
push
or
sbb
loop
jle
push
push
je
pop
inc
sarl
dec
jl
shl
and
inc
jle
mov
jbe
push
fs
gs
push
add
push
push
shlb
insb
cmpsl
repnz
inc
fdivp
and
ret
dec
add
sub
out
ret
cmp
dec
sarl
leave
fcomip
sarl
xor
jmp
and
mov
icebp
leave
or
repnz
xchg
or
popf
xchg
xor
or
xor
sbb
mov
add
sub
push
jge
bt
push
lods
cmp
sub
cmp
test
aad
mov
je
jbe
cmp
dec
pop
stos
lcall
mov
sub
nop
pop
pop
sbb
test
lock
pop
stos
push
jp
mov
lock
jb
adc
xchg
mov
jmp
pop
cmp
and
or
push
xor
scas
sub
inc
xchg
outsb
pushf
pop
ss
cmp
repnz
xchg
xchg
mov
or
xchg
xchg
jb
fisubl
jnp,pn
int3
jg
dec
sti
jecxz
movsb
add
inc
in
fdivs
mov
push
int
lret
mov
sbbl
fmuls
lock
lock
xchg
outsl
cmp
fnstcw
adc
out
cmp
mov
push
or
jnp
out
negb
pusha
pop
lods
mov
cld
push
adcl
outsb
or
rcrl
jbe
sub
inc
and
pop
cmp
imul
mov
xchg
push
cmp
lods
int3
rorb
cmp
jne
sti
jmp
sahf
jnp
mov
call
mov
mov
inc
lds
out
fldl2t
and
fisubrl
sti
xor
jnp
enter
adc
mov
inc
jg
stc
jae
adc
cwtl
jmp
testb
mov
push
gs
xchg
lds
xor
test
stos
vmovntdq
pushf
push
sbbl
in
shlb
xor
dec
in
cs
adc
xchg
lock
enter
cmp
scas
or
add
rcrl
addr16
mov
pusha
xor
popf
mov
ret
mov
jae
fpatan
mov
adc
inc
iret
and
mov
sub
loopne
in
pusha
popa
jno
jbe
xchg
adc
insl
push
jns
mov
cmp
sbb
xor
rcl
mov
movsl
adc
aaa
inc
lds
mov
xorl
addr16
adc
pop
loop
xor
imul
mov
fs
shl
es
stos
fcompl
les
imull
or
push
push
pushl
mov
in
outsb
inc
daa
or
pop
and
aam
add
sub
mov
notl
les
outsb
int3
mov
mov
ljmp
out
in
insb
cmp
and
pushf
pop
repz
ds
xor
je
fdivs
inc
rolb
jl
jmp
loopne
dec
call
cmp
pop
fcmovnu
ja
and
jecxz
lods
sub
xor
jp
add
insb
jmp
sbb
shl
jno
sbb
mov
mov
push
jl
cmpsb
adc
jle
leave
ja
inc
sub
xchg
iret
mov
mov
sub
adc
std
inc
push
cld
xor
in
xor
push
nop
push
int
lea
rclb
pop
sarl
cltd
push
add
cld
add
or
jecxz
es
mov
push
cltd
hlt
push
or
push
lds
imul
repz
lods
xchg
mov
test
fmul
inc
inc
cmp
mov
insb
lret
imul
lahf
lret
pop
test
mov
mov
xchg
mov
push
jle
dec
hlt
mov
ficoms
testb
mov
in
and
mov
ljmp
ret
nop
imul
pop
lds
mov
ss
cltd
xor
dec
xchg
xor
jmp
aas
andb
pop
in
jnp
movsb
and
pop
xlat
mov
ss
or
or
and
out
cwtl
dec
lds
or
or
pop
rep
ret
scas
sub
out
in
test
bound
mov
add
nop
jmp
ds
out
ja
dec
sub
push
out
and
lods
dec
lods
leave
sub
rcr
inc
sub
cli
and
inc
ja
fchs
dec
push
dec
xor
mov
mov
mov
pop
cmp
or
or
mov
mov
pop
push
adc
jp
xorb
pop
mov
stos
xor
sbb
push
add
sti
mov
adc
jno
ljmp
repnz
scas
repnz
stos
cmp
nop
call
subl
adc
lret
jge
mov
shl
pusha
hlt
mov
xchg
xchg
push
or
xor
mov
push
lcall
in
inc
popf
mulb
inc
mov
stos
xor
mov
imul
mov
nop
jecxz
inc
out
sub
jg
push
xchg
mov
inc
sub
jbe
pop
mov
fisubrs
mov
aam
movsl
xchg
pushf
sti
lods
xor
cmpsl
mov
adc
es
pusha
andl
sub
mov
dec
jne
push
sub
mov
adc
dec
sbb
ds
in
push
pop
jmp
pop
push
and
jl
add
adc
je
mov
add
aad
lods
push
mov
push
ljmp
fwait
popf
daa
fistpl
jnp
jo
aas
xor
outsl
mov
sub
aam
into
dec
mov
leave
shlb
inc
fs
mov
jno
cmp
push
int3
into
jno
stos
adc
es
fcoms
mov
and
inc
mov
sbb
adc
push
adc
mov
push
cmpsb
sub
out
repnz
adc
cs
push
mov
pop
cmp
jl
mov
fcom
cld
jecxz
lods
mov
sbb
das
add
and
pop
test
inc
icebp
das
ss
in
xor
and
test
shlb
loope
mov
pop
and
jge
std
push
dec
jl
stos
mov
fneni(8087
mov
mov
xchg
sbb
seto
dec
cli
gs
sbb
and
push
int
lcall
test
mov
mov
mov
add
lea
dec
mov
stos
xchg
xchg
dec
int3
and
jns
mov
mov
fisttpl
or
outsb
into
mov
jmp
jbe
xor
dec
or
add
inc
pop
loope
adc
mov
clc
jge
pushf
adc
jge
jae
aad
jmp
mov
addb
icebp
mov
lahf
pop
adc
in
mov
sub
dec
and
es
loope
imul
mov
std
fbld
jmp
push
jle
test
dec
mov
fcom
stc
mov
cs
sti
mov
jno
js
fistpll
or
dec
mov
mov
sub
lock
adc
test
jne
adc
mov
lea
in
lret
mov
in
in
insb
jo
and
pop
sub
inc
cmpsb
mov
out
rcrb
cli
mov
mov
lret
mov
xchg
loop
xor
movsbl
stos
cmp
mov
cs
rolb
inc
sub
cltd
mov
lahf
cmp
stc
push
cmp
sub
add
push
pushf
rcrl
sar
movaps
xor
je
test
sbb
sub
sub
loope
sarb
fldcw
lret
inc
ss
in
insb
je
int3
iret
leave
sahf
pusha
pop
pushf
xchg
mov
aaa
dec
add
adc
push
pop
xchg
enter
int3
popa
adcb
xlat
shll
xchg
test
call
std
xor
out
sub
shlw
loopne
jbe
mov
push
or
inc
mov
push
push
cmp
scas
testb
test
inc
cmp
cmp
int3
lret
stos
cmc
fiadds
in
mov
scas
xor
nop
aaa
sub
mov
pop
addb
mov
stos
outsl
pop
inc
push
adc
ret
in
pop
pop
pop
outsb
addl
push
sub
hlt
mov
sti
je
dec
adc
test
std
test
xchg
xchg
les
mov
jge
dec
xchg
and
ss
test
push
and
movsb
jp
test
jg
xor
jb
or
cmp
ss
mov
fnsave
pop
mov
lods
lahf
in
and
dec
mov
jne
cmpb
imul
and
jae
fwait
inc
cld
ss
mull
ficoms
test
mov
arpl
sbb
enter
sub
inc
mov
jmp
push
lea
sbb
gs
add
jae
mov
push
mov
mov
add
incl
adc
or
jbe
je
outsb
xchg
xchg
pop
dec
in
lea
jb
mov
mov
in
sbb
out
stos
and
push
in
outsl
nop
loopne
ds
lahf
dec
jne
into
xor
mov
sub
in
xchg
push
sahf
out
aaa
cmp
es
add
sub
cmc
mov
andb
cli
cs
out
push
pop
lods
icebp
adc
shlb
mov
das
rclb
dec
stc
xor
xor
movsl
subb
enter
rorb
out
dec
cmp
pop
mov
pop
jne
mov
lds
lods
fbstp
fdivs
popa
mov
out
xor
cmp
push
test
xor
in
inc
adc
jp
mov
xlat
mov
aam
inc
repnz
cmpsl
add
inc
imul
sub
std
push
mov
sbb
into
addb
fwait
loop
mov
insb
int3
mov
movsb
cmove
push
or
lret
pop
xor
pop
mov
repz
call
push
or
and
stc
mov
idiv
dec
xor
fsubrs
sbb
cmc
mov
mov
stos
mov
xlat
cmp
out
loopne
js
xlat
fdivrs
or
cli
or
jp
and
lea
mov
jmp
lock
mov
pushf
push
xor
fisttpl
fdivrl
mov
or
in
enter
adc
mov
cmpl
sub
outsl
add
cmp
pop
jge
es
hlt
fcmove
mov
stc
arpl
cmpsb
les
int3
lds
push
lock
mov
jbe
rcll
dec
out
in
ftst
out
jne
xor
and
xor
je
cwtl
or
jne
in
sbb
repnz
pushf
add
imul
cmp
adc
mov
push
cmp
mov
sbb
dec
xchg
pop
sub
popa
dec
loop
and
jecxz
sub
mov
ret
pushf
mov
hlt
data16
imul
mov
jmp
sub
and
or
mov
dec
xor
out
imul
jge
adc
stc
push
jecxz
push
inc
push
mov
bt
aad
ffree
mov
out
mov
mov
lret
and
and
xchg
fimuls
sbb
xor
frstpm(287
fsubl
and
int
dec
push
sbb
movsl
nop
and
inc
push
and
push
mov
daa
ficomps
pusha
mov
add
mov
out
cmpsl
pop
mov
sbb
and
adc
cmp
shlb
jo
popf
jmp
aad
push
cmc
dec
insl
lahf
push
lahf
int3
xchg
cmpsb
data16
and
mov
cltd
ret
jge
push
int
test
mov
mov
fcomip
inc
mov
nop
mov
jns
scas
mov
popf
push
xchg
fadds
mov
dec
cld
call
cmp
xorb
mov
mov
jle
les
sarb
rolb
rcrb
mov
and
pop
mov
xchg
or
psubd
mov
andb
fisttps
loopne
mov
sbb
loope
int
pop
pop
xchg
xchg
adc
xchg
sbb
mov
dec
jb
and
outsb
mov
rcrl
or
mov
add
mov
and
es
fcos
shl
sbb
ret
jae
nop
jnp
aas
jmp
sub
clc
mov
in
mov
push
xchg
inc
adc
dec
sahf
test
adc
lock
jmp
adcl
inc
cmp
mov
cmp
ja
and
cmc
clc
aas
mov
and
aad
jb
mov
sbb
faddl
clc
and
or
insl
aam
movsb
lcall
stos
xchg
cmp
in
sbb
mov
in
mov
pop
mov
int
call
shll
pusha
rcrl
mov
call
mov
movsl
loope
mov
dec
loopne
lret
sti
add
mov
out
fmulp
add
loopne
mov
outsl
adc
mov
bound
fs
sub
xchg
add
aam
pushl
cwtl
sti
push
scas
movsb
cmpsl
xchg
jbe
lods
jno
fiadds
cmp
out
jl
and
and
xor
pop
cmpsb
stc
fnstenv
inc
nop
ds
sbb
int
and
mov
xlat
shlb
pop
inc
mov
fsubs
mov
imul
inc
popa
out
and
repnz
fstl
lss
mov
fwait
mov
mov
out
and
jmp
xlat
push
cmc
in
shlb
leave
pop
dec
les
jo
sbb
shl
inc
inc
push
xchg
xchg
xchg
mov
and
jb
fsubrs
test
jl
sub
dec
mov
adc
pop
int
lea
scas
cs
or
out
push
jnp
push
ja
enter
popf
mov
jne
jl
mov
xor
mov
ret
inc
ret
mov
xor
adc
pushl
push
push
pop
xchg
ljmp
xor
es
call
push
std
jns
push
test
and
lahf
notl
lock
or
fsubrl
mov
inc
and
add
repnz
jp
mov
xchg
scas
inc
inc
push
out
xorl
sbb
sub
jae
sub
fsubrs
sub
pop
mov
aam
mov
arpl
cmp
xchg
mov
xor
mov
mov
lods
ret
sub
dec
cmp
and
decb
fs
mov
call
xor
and
notb
jbe
mov
cmp
pop
mov
idivb
shll
jp
sbb
push
es
mov
and
cmp
imul
xor
jge
sarl
add
push
pop
xchg
pop
mov
inc
cmpsl
pop
cmp
inc
out
and
inc
mov
mov
lods
je
sbb
sub
and
inc
shl
jle
js
hlt
push
fwait
adc
sub
ror
jne
neg
mov
cmc
rcl
loop
popa
movswl
cmp
pop
add
loope
movsb
mov
test
dec
repnz
pop
mov
or
mov
ret
popa
and
push
orb
sub
loope
cmpsb
lds
rcrb
mov
xor
fnstenv
cmp
dec
add
test
or
xor
jl
xchg
pop
movsl
ds
and
lahf
pop
pop
inc
add
jbe
sbb
inc
dec
xchg
outsb
ds
cmp
test
test
das
clc
imul
jecxz
xchg
popa
ds
sbb
mov
int
jmp
jmp
jae
popf
ljmp
cmp
mov
pushf
mov
test
sub
adc
loopne
sbb
pop
popf
jecxz
push
xchg
or
cmp
imul
into
aad
test
mov
arpl
rcrb
call
cmpsl
xchg
data16
icebp
push
mov
jns
push
pop
dec
test
lods
cmp
pop
in
mov
add
movsl
lahf
js
dec
add
cltd
mov
enter
jmp
or
or
pop
add
pop
lods
xchg
pop
cmp
push
add
adc
mov
pusha
and
sarl
lret
jge
cmpsb
mov
imul
into
cmp
shl
xchg
cltd
mov
popf
mov
addr16
sub
inc
test
aam
mov
and
cmp
loopne
add
inc
pop
rclb
addr16
dec
leave
jo
mov
mov
shlb
je
jp
in
jo
movsl
push
shll
mov
dec
jns
popa
xor
stos
xorb
std
mov
cmpl
mov
sbb
xor
jg
daa
add
fldl
inc
pop
nop
imul
cmp
cmp
jecxz
push
sarl
jge,pt
lahf
xor
bsf
scas
out
xor
gs
iret
loope
sbb
pop
iret
pop
icebp
outsb
push
cmpsb
insb
lds
std
scas
dec
xchg
xchg
rcrb
out
mov
fwait
jmp
pop
test
popa
mov
sbb
sub
aas
sar
mov
push
mov
std
jb
mov
fucomip
imul
jmp
dec
test
push
scas
insl
popa
or
test
lcall
mov
mov
testl
and
sbb
mov
out
call
sbb
sbbb
inc
and
bound
out
cmpsl
ds
and
mov
or
sub
add
sarb
loopne
jbe
fcomi
xchg
mov
pop
fmul
out
push
call
sbb
jne
xchg
mov
push
jl
aam
fimuls
popl
ret
cs
mov
stos
mov
popa
sub
cmp
dec
sbb
mov
adc
fadds
mov
xor
adc
lods
push
inc
je
pop
jns
pop
push
or
dec
imul
jecxz
lock
inc
lods
jne
test
jecxz
addl
and
cmc
fwait
sbb
aam
fidivrs
adc
idivb
aaa
lcall
fnsave
out
lds
sub
roll
sbb
xchg
mov
out
or
insl
inc
cld
mov
mov
cld
mov
daa
push
aaa
les
xor
pop
jnp
or
inc
push
lods
dec
cmp
xor
push
aas
jno
cwtl
imul
sub
mov
mov
push
sbb
lahf
lret
daa
push
jecxz
pop
das
sbb
or
or
jle
cwtl
mov
shrl
decb
sbb
push
mov
push
mov
mov
mov
out
push
cmp
xor
imul
aad
mov
and
aaa
inc
sbb
bound
loop
pushl
jmp
outsl
shr
sbb
mov
out
js
push
xchg
fiaddl
in
sbb
mov
jecxz
int3
fimuls
add
movsl
sub
and
lahf
test
pop
test
inc
xchg
inc
push
pushf
aaa
pop
test
pop
inc
pop
stos
std
xor
mov
fists
xchg
adc
sub
xor
hlt
xchg
add
cmp
lods
push
inc
jmp
enter
xchg
dec
inc
cs
je
into
sbb
xchg
orl
xchg
jo
js
enter
pusha
aad
xlat
out
mov
aas
cld
cmp
xchg
sbb
dec
pop
fs
int3
test
inc
aas
mov
in
movb
jnp
mov
out
xor
mov
cltd
inc
add
mov
ret
mov
imul
xchg
cmp
push
add
cmp
jb
fistpl
hlt
aad
out
and
or
aas
and
sbb
mov
cmp
inc
stos
bound
lcall
jb
cmpl
lods
sub
or
shrl
or
xchg
pop
add
les
sbb
push
push
fidivl
sub
test
mov
mov
adc
xchg
sub
lahf
jo
in
pop
adc
dec
adc
push
adc
lret
mov
outsb
inc
cmp
xor
mov
cltd
fadds
std
and
mov
sub
nop
mov
outsb
and
dec
pushf
fwait
pop
jecxz
lods
lods
add
cwtl
fsubs
jp
xchg
cli
outsb
push
adc
pop
mov
pop
cmp
inc
mov
mov
inc
adc
adc
xlat
into
jno
ds
pop
mov
mov
cmp
test
lds
mov
sbb
ss
mov
clc
adc
pavgb
cmp
fcmovnbe
std
or
jno
xor
shl
dec
loopne
sub
xor
cli
pop
dec
cwtl
pusha
test
or
arpl
adc
add
fmuls
jmp
aaa
jns
arpl
xor
add
jne
mov
adc
movsb
inc
into
xchg
sub
subl
fsubp
popa
fisubrs
jae,pt
loop
in
dec
jns
in
ret
imul
push
and
scas
rcr
jbe
and
push
cs
int3
sahf
scas
cmp
or
pushl
fmuls
out
sub
lahf
popa
stc
sbb
dec
push
pop
inc
bound
pop
int3
cmp
xor
add
push
loopne
lods
and
lock
mov
or
sbb
pop
int3
pop
cwtl
sub
sub
cs
sub
pop
fimull
cmpsb
adc
dec
insl
xlat
icebp
scas
xchg
mov
sub
mov
add
xchg
sahf
push
cmp
pop
cmp
push
popl
fs
inc
ror
int
cwtl
and
lahf
xchg
cmpsl
xor
lods
jl
nop
push
xor
and
int3
loopne
in
mov
xor
mov
call
mov
or
int3
mov
mov
in
jecxz
fnsave
jnp
xorb
cmpsl
adc
movsl
cli
push
scas
fdiv
push
int3
fidivrs
in
or
cmp
fadd
mov
outsb
jmp
and
les
jbe
pusha
incb
pop
mov
notl
and
mov
xor
nop
mov
xchg
dec
ret
out
xchg
scas
pop
lds
pop
movsl
in
cli
jns
xor
add
cld
inc
sbb
push
out
mov
aas
stos
fldl2t
mov
mov
cmp
mov
cmp
fistps
cmp
jle
shlb
cmpsb
lock
add
or
movsb
mov
pop
and
push
cwtl
adc
inc
loope
push
mov
dec
test
cs
mov
lahf
loopne
lock
push
jnp
lea
sbb
xchg
shr
add
add
pusha
xor
das
mov
outsl
sbb
js
sarl
test
pop
jg
dec
cli
cwtl
mov
test
rcll
sarb
pop
cmp
leave
popa
les
jp
int3
iret
sbb
xor
roll
out
cmp
jns
mov
andb
sbb
jne
cmp
mov
icebp
adc
fdivrs
push
ds
sub
sbb
add
mov
mov
pop
out
stc
pop
pop
fs
xlat
and
inc
mov
mov
add
loope
nop
cmp
mov
popf
shll
push
nopl
add
into
icebp
xchg
or
adc
lds
xor
jo
xlat
fmull
sub
scas
div
cld
dec
clc
loop
or
rcrl
jne
sbb
or
loope
test
scas
cld
jns
jp
push
outsb
cmp
int
lods
cmpsb
ljmp
cs
rorb
push
lcall
pop
scas
dec
outsb
or
xchg
adc
xchg
mov
inc
insl
or
jb
and
push
ror
add
cmc
mov
aad
scas
xchg
insb
mov
lcall
and
sub
and
movsb
mov
jge
pop
ret
mov
adc
test
fmuls
iret
fwait
nop
dec
fidivl
inc
repz
icebp
and
or
scas
sbbb
xor
int3
push
sub
push
fadds
xor
fcoms
je
add
call
mov
jnp
in
rorl
xor
push
xorb
rcl
add
and
inc
out
inc
int
add
repnz
cwtl
outsb
lahf
rcr
scas
mov
or
or
cs
sub
mov
add
cli
mov
fs
pop
push
cmp
scas
lret
out
adc
mov
cmpsl
rcll
pop
jnp
outsb
fs
shrb
lret
and
dec
add
out
xchg
lds
xorl
test
aam
ds
cmc
repnz
mov
sbb
shlb
dec
xor
stc
xchg
sbb
shrb
inc
and
add
cli
xchg
cmp
into
filds
fldt
addr16
out
pop
sub
dec
mov
xor
xor
lock
mov
pop
out
pop
sbb
mov
je
push
pop
mov
fldenv
jge
adc
popf
jbe
or
flds
dec
sub
xchg
xchg
outsb
pop
and
dec
lret
pop
jns
cwtl
fisttpl
adc
mov
lcall
sahf
jno
push
push
inc
adc
mov
sbb
xchg
sub
push
lock
push
ljmp
dec
into
cmp
dec
pop
stos
sub
or
xlat
jg
inc
xorl
rcrb
sbb
or
clc
dec
mov
pop
in
adc
mov
inc
sub
dec
xor
xchg
mov
xor
mov
mov
movsl
pop
push
adc
jmp
mov
xchg
jbe
cmp
loopne
inc
scas
pushf
cmpsb
inc
or
sub
rorb
inc
or
push
mov
shr
movsl
adc
mov
cld
mov
shr
hlt
cmp
aas
fwait
mov
add
in
pop
jne
in
pop
shrb
mov
inc
mov
jb
fstps
rcll
xor
fwait
lods
jae
add
std
lods
mov
movsb
scas
mov
jle
dec
mov
sbb
ja,pt
test
clc
jge
fcomp
adc
stos
inc
jmp
out
sub
add
inc
mov
dec
js
pop
lods
out
pusha
fpatan
mov
out
out
call
loopne
sbb
and
in
push
add
push
xchg
sub
scas
mov
imulb
incb
movsl
inc
arpl
icebp
insl
xchg
jecxz
leave
dec
aas
roll
sbb
rolb
rolb
aam
cmp
clc
inc
cmp
fdivrs
jnp
mov
test
pop
push
sub
in
out
imul
inc
int3
sbb
pop
sub
inc
xchg
enter
mov
lock
cltd
data16
sub
scas
cltd
scas
lods
pop
js
jb
xchg
jnp
int
sti
mov
jmp
lea
jg
fmuls
stos
mov
sbb
mov
fsubl
pop
insb
shll
stc
dec
cmp
pop
jecxz
xor
cli
xorl
cmp
jge
dec
insb
lcall
inc
scas
xor
stos
cltd
fisubrl
adcl
rolb
cwtl
mov
arpl
les
clc
popf
pop
cld
sbb
adc
mov
sub
sub
sub
ret
sub
sub
arpl
mov
fistpll
adc
je
add
sbb
sarl
inc
or
lea
jns
int
pminub
fs
enter
pop
out
sbb
je
xlat
fsubrs
push
out
andl
and
mov
clc
fdivr
dec
in
cmp
adc
adc
int
pop
mov
mov
int
into
cli
cwtl
mov
outsl
jb
mov
cmp
inc
jmp
or
in
jo
ja
int3
aas
fists
pop
lods
aam
or
in
dec
mov
jne
pop
data16
in
jge
jne
add
xchg
cli
shll
fcoms
iret
rcll
and
mov
inc
repnz
pusha
pusha
lds
ja
xchg
sbb
cltd
adc
daa
or
insl
xchg
mov
repnz
and
pop
movsl
pushf
dec
xor
push
xchg
or
repz
and
add
cltd
mov
icebp
lret
xor
add
mov
and
call
push
fistpll
mov
jo
daa
jae
inc
sbb
mov
das
cmp
mov
push
xchg
xor
pop
xchg
filds
jb
in
fs
das
fbstp
xchg
stc
adcb
cmc
xor
rcl
xchg
sub
fdivrs
ds
jnp
int3
and
mov
sub
fadds
mov
fiaddl
sub
dec
pushf
xchg
pop
inc
gs
aaa
cmp
sbb
adc
push
pop
inc
data16
in
lahf
jp
leave
jge
stos
or
mov
mov
cmp
test
lods
shlb
inc
pop
faddl
cli
push
lods
pop
inc
and
dec
or
jo
ja
pop
mov
pop
pop
cmpsl
shll
enter
xchg
mov
add
vcvtss2si
jae
inc
repnz
dec
aaa
sub
and
cld
jb
or
test
aam
or
push
mov
and
or
repz
cmp
cmc
xchg
pop
adc
sbb
mov
and
mov
inc
pop
xor
fistl
mov
cmp
and
aad
adc
sbb
cmp
push
mov
push
shll
repz
data16
arpl
in
test
add
jmp
pushfw
out
inc
les
push
test
inc
push
ja
es
nop
sbbl
push
add
scas
loopne
pop
scas
in
push
adc
enter
mov
pusha
jge
cmpsl
pushf
mov
push
inc
jbe
hlt
fidivrl
pop
into
adc
outsl
adc
or
jnp
test
xchg
jecxz
dec
pop
cmpsl
xor
jp
std
inc
xchg
adc
jp
filds
test
data16
les
inc
out
mov
or
jo
idivl
loopne
xchg
mov
pop
xor
movsb
xchg
and
scas
or
xlat
loope
mov
push
xchg
jecxz
dec
push
loope,pn
decb
pop
ss
cmpsb
inc
lods
cltd
cli
mov
or
xor
scas
bound
inc
clc
in
jle
repz
cltd
sbb
push
notl
pop
scas
and
int
mov
xor
mov
stos
sbb
rcr
mov
push
push
sbb
gs
pop
test
adc
mov
scas
out
ret
js
xchg
adc
nop
daa
xor
cmp
sti
sbb
shlb
sahf
mov
das
jle
into
fnsave
mov
pop
popf
cmp
fldl
fidivl
lods
adc
int3
insl
sub
testb
sarl
xor
jmp
enter
jecxz
jne
adc
dec
incl
cmp
mov
dec
adc
add
push
ficompl
gs
push
ret
add
aam
add
das
outsb
in
xchg
xchg
fcomps
pop
scas
cmpsl
stos
jne
pop
lahf
stos
sbb
lret
addr16
fcos
fdivrs
pop
stos
scas
nop
aas
clc
das
push
arpl
or
shll
mull
jp
cltd
xor
mov
mov
push
insl
pop
leave
ficoml
mov
fs
sahf
cld
and
cmp
xchg
pusha
fbld
mov
or
mov
push
mov
and
and
adc
test
fxam
jmp
divl
in
cmp
mov
gs
xchg
ds
mov
fwait
push
adc
movsb
call
mov
inc
aaa
clc
les
sbb
and
or
test
mov
cmp
addb
ja
sbb
cmp
ss
inc
enter
rcr
loope
cmp
sbb
jae
movsl
cmp
push
inc
stos
fmull
jle
fdivp
mov
gs
mov
jno
leave
cmp
enter
test
jnp
mov
xor
xchg
nop
mov
push
pop
mov
es
jge
jbe
cli
insb
loop
mov
pop
int
shr
std
stos
pop
push
jne
lahf
push
push
clc
std
or
mov
sahf
test
push
movsb
add
mov
icebp
adc
jp
cmp
xor
jne,pn
ljmp
adc
and
mov
xchg
int3
mov
lcall
vshufps
daa
fwait
insb
dec
lock
es
xlat
loop
push
cmpsl
aam
bound
add
or
addb
adc
mov
imul
mov
jno
xchg
incb
pusha
ret
test
pushf
cs
movsb
add
shll
push
inc
jns
push
cmp
ds
in
add
flds
es
xchg
sbb
pmaddwd
adc
fs
sbb
insl
ds
jle
lret
or
push
mov
inc
stos
cld
and
adc
lahf
mov
lahf
pop
test
push
mov
adc
enter
daa
push
or
shlb
mov
dec
mov
mov
push
ret
pusha
xchg
pop
dec
movsb
jge
push
and
add
pop
pushf
push
lea
cmpl
mov
xchg
cli
mov
mov
stos
ss
mov
xchg
and
arpl
cmp
adc
dec
leave
rorb
xchg
jl
into
cld
or
in
sbb
sub
mov
daa
fadd
mov
sti
push
lahf
lds
lods
mov
popf
enter
sbb
or
fidivrs
outsl
push
fiadds
inc
add
aas
fwait
bts
sbb
dec
jae
aam
lods
mov
les
mov
cmpsl
or
jle
loopne
call
sbb
test
sbb
cs
xor
in
leave
nop
mov
xchg
out
add
xor
mov
sbb
pcmpgtb
sub
pop
repnz
rcrb
clc
inc
dec
rolb
mov
pop
mov
iret
and
add
movsb
pop
daa
mov
fistpl
pop
andb
fwait
jecxz
jae,pn
sbbl
jg
and
pop
loopne
sbb
pop
pop
js
insl
pop
dec
dec
faddp
pop
add
nop
mov
ret
fstp
push
decb
mov
bound
outsb
outsb
ret
aad
sub
lcall
cwtl
adc
vmovlps
test
cmc
xchg
jnp
insb
jns
mov
mov
mov
push
addb
lods
add
mov
and
adc
sub
jne
mov
in
popf
repz
or
and
jb
int
jmp
nop
subl
cmc
mov
xchg
pop
out
ss
push
xchg
mov
jns
mov
mov
adc
xor
mov
xlat
sbb
neg
push
fwait
jo
imul
cmp
adc
add
pop
xchg
dec
push
imul
mov
icebp
mov
jge
pusha
lret
mov
pop
scas
adc
jmp
loop
dec
cmp
mov
test
out
subl
push
xor
push
sbb
repnz
jmp
out
fidivl
out
fdivrs
iret
cmpsl
and
stos
popf
pop
jne
pop
sti
insl
and
push
repnz
nop
xor
push
shrl
mov
jae
mov
jl
cmp
loop
sbbl
pop
je
pop
jl
mov
clc
repnz
orb
ja
inc
mov
sarb
push
subl
jmp
mov
push
frstor
jnp
cmc
inc
cs
daa
bndstx
es
rcrl
ret
jmp
sbb
fisttpl
mov
pop
add
das
das
dec
fndisi(8087
pop
cmc
mov
fidivs
and
xchg
pop
cmpsl
fdivl
mov
mov
ja
jne
jae
adc
dec
mov
inc
push
jp
sbb
div
sub
sbb
mov
mov
xchg
sarl
test
iret
xorb
pop
inc
in
mov
mov
cmpsb
fwait
cmp
inc
xor
cmp
add
xchg
dec
pop
push
pop
cmpb
mov
cli
mov
adc
or
mov
push
jecxz
lods
jmp
sahf
or
arpl
hlt
add
xor
xchg
fimuls
sub
clc
in
pop
pop
and
fbld
call
sbb
lret
xor
mov
jmp
or
xchg
ror
ret
cld
outsb
in
pop
jp
lret
lcall
pop
add
xlat
pop
iret
pop
faddl
stc
xchg
mov
cmp
mov
cld
dec
jp
fcompl
lock
push
punpcklbw
in
enter
leave
push
in
sub
pop
fcoms
mov
jg
stos
pushf
stos
iret
es
stos
xchg
popa
mov
sub
test
xor
inc
dec
mov
inc
shlb
xorb
call
xchg
maxps
fwait
mov
aaa
lods
loope
push
outsb
xor
lods
adc
enter
fildl
jnp
mov
and
ljmp
push
mov
jecxz
popw
rolb
test
shlb
sub
inc
pop
adc
pop
movsl
stos
dec
out
shl
mov
push
cmc
stos
mov
pop
sbb
stc
sub
push
push
leave
push
sahf
cltd
cmpsb
mov
jns
imul
aad
into
xchg
mov
repz
or
mov
mov
dec
xor
js
mov
fdivl
shl
repnz
loop
adc
lods
cwtl
les
adc
mov
pop
and
sbb
xchg
sbb
xor
in
daa
movsl
sub
sti
ss
aad
loope
jae
cs
xchg
lock
or
pop
insl
pop
push
or
dec
and
or
cli
cmpsl
fs
fs
pop
loop
mov
addl
cmp
jp
xor
lods
into
jno
outsb
sub
cltd
in
push
push
shlb
subl
test
aas
sub
sbbl
mov
leave
push
test
test
jno
jo
scas
ret
sub
into
dec
scas
adc
push
push
ret
push
pop
xchg
lcall
mov
inc
rolb
inc
pop
cld
add
lds
lds
je
je
das
push
mov
and
sub
jns
push
add
leave
xadd
sub
into
xchg
lods
xchg
aam
pop
inc
jge
sub
scas
dec
sbb
sub
mov
daa
cs
insl
mov
pop
dec
mov
mov
xchg
jnp
repz
push
aaa
int
sub
xchg
cmp
test
lahf
sub
mov
test
push
mov
xchg
xor
mov
pop
les
jge
das
add
jmp
cli
aam
inc
jp
mov
mov
mov
add
dec
es
xor
gs
add
out
xor
test
out
jp
xor
adcl
add
cmp
inc
daa
aas
push
cli
adc
add
fldcw
pop
xchg
stos
pop
mov
or
adc
jmp
sub
mov
inc
xor
loop
mov
mov
and
xor
sti
pop
pusha
ficomps
xor
jo
aas
mov
aas
pop
jns
in
inc
mov
xor
dec
nop
in
jne
ror
fisubrs
mov
or
pop
mov
int
and
mov
adc
pushf
lahf
add
movl
jne
jecxz
dec
insl
dec
iret
sbbl
dec
fdivp
xchg
or
fs
lahf
mov
icebp
out
enter
sub
mov
iret
push
jmp
or
jnp
xchg
mov
fwait
pop
xchg
ret
mov
or
sub
inc
and
ss
mov
insb
lds
dec
jo
sub
push
mov
mov
lds
and
mov
adc
jge
jle
push
scas
leave
fldenv
push
aas
mov
ficompl
xor
test
pop
jg
dec
int3
inc
mov
outsl
jecxz
adc
insb
inc
push
mov
clc
dec
mov
sub
and
mov
mov
mov
mov
shr
jp
jle
addr16
or
insl
imul
je
mov
mov
dec
pop
jg
dec
clc
or
jne
push
jb
pop
int
cwtl
jmp
ret
mov
popf
xor
mov
scas
push
jge
mov
mov
mov
ficompl
cli
popa
xor
sbb
xchg
add
adc
addr16
inc
mov
xchg
xlat
mov
xor
fwait
imul
dec
es
test
js
pop
imul
xchg
pop
lcall
sbb
hlt
add
cmpsb
mov
xchg
cmp
lods
test
mov
pusha
movsb
cltd
lods
adc
pop
inc
je
mov
or
mov
lcall
sub
xchg
push
xchg
jb
cmpsb
das
clc
cmpb
fcomip
mov
nop
or
aaa
test
mov
std
les
enter
mov
cltd
les
mov
mov
int
mov
push
sti
cmpsb
and
int3
adc
xchg
bswap
call
cmp
ljmp
inc
leave
insb
inc
lods
bound
pop
cmp
or
xchg
in
cli
xor
imul
out
enter
pop
add
jg
pop
or
leave
fnstcw
pop
jbe
icebp
dec
fs
mov
sbb
pop
jne
mov
xchg
in
std
adc
inc
mov
jge
shll
add
out
sbb
and
ljmp
dec
fidivrl
test
jp
rcrb
js
and
aam
push
mov
pop
imull
push
inc
push
andl
dec
imul
push
sbb
aad
or
enter
cli
adc
or
mov
sub
enter
cmp
lret
push
xchg
insb
cmp
lods
js
int
push
mov
outsb
mov
mov
add
in
mov
mov
sub
popl
pop
pop
sub
lock
into
lret
movl
inc
icebp
sbb
mov
lret
dec
aaa
inc
sbb
es
add
jle
popa
nop
ljmp
pusha
gs
test
clc
xor
xchg
mov
pop
mov
adc
cmp
dec
in
push
stos
pop
cmpb
sbb
pushf
xchg
popf
in
lock
scas
or
and
iret
adc
jbe
fidivrs
movl
dec
aaa
or
cmp
outsl
ret
xor
int
mov
outsl
in
lods
out
call
lock
add
lahf
int3
cwtl
inc
cmp
es
pop
mov
mov
cmp
addr16
adc
mov
cmp
sbbl
xchg
pop
or
mov
lahf
addr16
adc
jns
adc
jge
popf
xchg
mov
das
mov
push
dec
incb
loopne
and
inc
mov
icebp
cmp
or
clc
add
out
cmp
xor
cmp
mov
aad
out
lret
sub
add
mov
dec
out
test
inc
pop
stc
ss
push
jae
or
and
xchg
jmp
adc
lods
addl
dec
ret
or
dec
mov
repz
inc
mov
mov
shlb
movsl
mov
imul
loop
xchg
sub
pushf
sub
xchg
jecxz
aaa
fidivrs
bound
jmp
and
sub
insl
cmpsb
ret
mov
icebp
nop
dec
jnp
fistpll
xchg
adc
xor
cmp
pop
cmp
cmp
es
sbb
cmp
pop
sub
jmp
pop
mov
mov
inc
mov
xor
pushf
mov
xor
out
pushf
push
jg
cmp
out
iret
pop
lar
sbb
sbb
mov
mov
mov
inc
and
xor
ss
jge
fisttps
call
cmp
mov
scas
mov
jle
ljmp
jp
cs
dec
enter
sub
testl
rolb
cmc
xlat
iret
mov
lcall
loopne
cmp
jo
dec
cmp
cltd
jo
sub
int
clc
adc
cwtl
and
cmp
push
jecxz
and
fs
cmp
sti
push
nop
cmp
push
call
mov
push
push
sbb
adc
cmp
sahf
in
lds
ret
fidivrs
addb
movb
pop
sarb
iret
xchg
xchg
mov
js
loopne
sub
adc
or
sbb
push
lret
inc
ret
push
inc
adcl
jno
adc
sahf
cmp
nop
mov
jo
jecxz
or
mov
repnz
push
inc
fisubrs
outsl
lahf
pop
out
push
lods
and
outsb
xchg
adc
xorb
pop
xchg
pop
push
jmp
icebp
in
cs
or
mov
cmpsl
cmp
aad
aam
fstps
jbe
cmp
dec
xor
push
roll
fbld
add
cmp
gs
addb
xchg
ficompl
mov
rcrb
subl
out
mov
adc
sahf
inc
and
xchg
es
jns
cltd
fsubl
cmpsl
xchg
xchg
or
les
sbbl
fsts
fwait
shll
inc
sbb
addl
in
lret
scas
mov
inc
mov
pop
dec
xor
sbb
adc
int3
cwtl
and
mov
push
adc
push
lcall
aas
jbe
mov
out
ds
pop
out
iret
adc
jmp
add
jge
mov
inc
push
aas
pop
sub
and
inc
and
cltd
pop
lcall
xchg
stos
adc
add
scas
lcall
je
daa
nop
rorb
outsl
ret
into
cwtl
cld
add
push
jnp
loopne
cmp
hlt
stos
xchg
adc
cld
pushf
xchg
test
enter
inc
repz
inc
stos
add
dec
out
sub
fwait
push
sbb
jge
fucomip
or
out
addr16
int3
mov
mov
pop
adcl
xor
pop
jae
xchg
roll
jns
clc
lcall
cmp
mov
test
push
pop
or
xor
lret
sbb
or
jnp
rorb
push
out
push
test
sti
dec
mov
dec
ss
jno
popf
sub
xor
in
mov
xchg
cmp
icebp
fcmove
in
pop
or
or
std
pop
outsb
jp
rorl
dec
sti
dec
xchg
jb
jbe
fucomip
mov
out
inc
mov
adcl
cmc
incl
and
shlb
add
fimuls
arpl
xor
dec
stos
jo
jne
or
insb
movsb
push
into
adc
mov
ret
dec
cmp
bound
ret
dec
adc
and
xchg
pop
fs
cld
or
and
jne
mov
lods
push
or
daa
ljmp
inc
push
mov
jo
and
dec
ss
sbb
popf
push
or
lock
xchg
outsl
aam
pop
in
out
test
mov
ret
in
xchg
ficompl
loope
jmp
xor
test
xchg
in
xchg
sarl
push
shlb
movsl
sahf
add
icebp
xor
xchg
or
pop
xchg
fstl
mov
fsubs
iret
dec
mov
add
daa
aam
jge
dec
lcall
xchg
cmc
lds
xchg
stos
mov
mov
stc
ljmp
idiv
jno
outsb
jg
cmp
inc
rorl
ret
sbb
sti
stos
orb
pop
pop
aam
insb
bound
aas
push
orl
and
cwtl
fisubrl
mov
in
sbb
pop
mov
xchg
ret
xchg
adc
xchg
jo
nop
mov
mov
push
dec
cmpsb
hlt
xchg
xor
add
sti
jnp
insb
xchg
push
push
adc
mov
and
lock
mov
mov
out
sub
xchg
gs
dec
xchg
mov
cltd
lcall
jp
push
mov
sbb
hlt
xchg
push
mov
fldcw
cmp
adc
push
pop
pushf
and
sti
in
lcall
jo
xchg
push
mov
les
dec
xlat
xor
xor
lea
sbb
sbb
lods
cs
and
test
sub
mov
test
test
fldt
test
into
insl
movsb
mov
adc
jmp
cmpb
sub
dec
or
fwait
sarb
or
jp
xor
dec
inc
cmp
mov
loope
xor
jg
imul
cmp
jl
cwtl
fs
sub
lret
fsubl
in
ret
xchg
adc
push
mov
out
mov
mov
mov
and
sub
or
push
mov
push
dec
inc
mov
arpl
cmpsb
sub
inc
xchg
and
mov
mov
repz
jecxz
push
xor
js
pusha
adc
cmp
je
pop
or
andb
adc
jbe
ficomps
aaa
ret
out
mov
or
add
or
inc
stos
shl
push
sti
and
jb
out
mov
add
mov
frstor
mov
push
xor
xor
ficompl
jb
int3
xor
pusha
int3
out
lea
sub
call
enter
mov
push
outsl
mov
das
fstps
insl
sbb
and
scas
das
ja
std
cmp
push
fdivs
mov
cmp
pop
pop
xor
push
hlt
mov
sahf
mov
and
sub
lret
mov
inc
cmpsb
mov
cmpsb
hlt
adcb
jno
adc
mov
lret
int3
andb
pusha
daa
hlt
shll
shlb
dec
mov
pop
fidivl
sahf
and
mov
stos
push
inc
mov
add
dec
mov
xor
in
lea
push
mov
fstpl
loop
aaa
ret
cld
sub
mov
lods
mov
fnstsw
les
xchg
sti
and
std
aad
or
pushf
out
rolb
jnp
outsb
int
out
lods
in
lret
push
mov
imul
jo
stos
and
add
ret
mov
aas
adc
cmpsl
popf
xor
nop
xchg
lock
fsubrl
and
mov
and
fcmovnbe
mov
out
jecxz
xchg
push
fnstenv
subl
adc
add
das
push
sar
dec
lahf
xchg
dec
pusha
push
test
push
fisubs
ljmp
jge
les
cmp
mov
xor
incb
scas
out
ret
mov
clc
and
sub
fwait
aas
mov
jecxz
stos
inc
stos
int
and
add
push
push
out
popf
push
lods
hlt
das
sarb
adcl
call
iret
and
es
xchg
sarb
ja
adc
sbb
add
mov
aad
imul
movsl
and
adc
ljmp
arpl
mov
insb
push
inc
xchg
icebp
push
pushf
xchg
pop
in
les
xor
scas
hlt
push
out
push
inc
fcmovnu
add
les
popa
lcall
aad
insl
ret
sbb
xor
xchg
stc
or
fst
jnp
jne
repz
ret
add
sub
or
adc
sub
std
mov
mov
sbb
data16
leave
sub
cmp
inc
bound
mov
popf
stos
xchg
out
pop
test
lret
push
xlat
sub
outsb
mov
out
out
and
cmpsb
xor
ljmp
mov
mov
out
aad
or
mov
imul
pop
stc
sbb
out
pop
cmp
dec
ja
stos
shl
inc
in
mov
sub
lods
add
mov
lods
pop
in
test
mov
dec
out
xor
or
nop
int3
movsb
shlb
jp
and
out
ljmp
rcl
push
pop
or
push
repz
out
in
das
xchg
in
cmpsb
push
xchg
sub
cmpsb
jae
shl
int
loopne
sahf
lds
shll
jo
push
mov
ret
fisubrs
ds
push
sbb
aam
jge
in
sub
jecxz
push
lret
and
ljmp
mov
mov
add
xor
jmp
into
push
int3
push
das
fs
and
inc
ret
and
sub
lds
pop
stos
xchg
fdivr
hlt
lret
xchg
jmp
lods
mov
mov
sbb
pop
inc
pop
inc
sub
or
faddl
int3
xchg
insb
shll
pop
xlat
fs
mov
xor
in
sub
mov
mov
add
loopne
js
adc
rcl
enter
mov
mov
fisttpll
or
mov
sub
setle
popa
loopne
sub
lock
push
adcb
xor
scas
mov
fs
pop
lret
xor
push
lds
test
fistl
pop
mov
in
inc
ret
jae
in
fidivl
aad
sub
cld
loopne
fwait
into
adc
insb
fsubl
sub
fucom
enter
sub
push
jo
sbbl
sub
lahf
mov
data16
mov
add
aaa
and
mov
hlt
adc
xchg
jae
divb
sbb
or
jl
test
lret
xchg
jo
insb
in
pop
jo
scas
js
aam
sbb
test
cmp
push
sbb
mov
fists
pushf
and
xor
cmpsb
or
and
pop
movsb
icebp
pop
cltd
subl
push
xor
jg
aas
pop
iret
jae
pop
inc
scas
cmc
mov
insb
xor
inc
outsl
les
mov
or
adc
leave
push
jmp
lcall
mov
push
movsl
xchg
adc
dec
adc
and
pop
in
jns
add
dec
shrl
aam
loope
push
inc
jmp
cwtl
shll
jge
scas
or
inc
mov
or
xor
mov
inc
movsb
fcomp
out
mov
mov
add
aam
jae
push
addr16
ror
lcall
xor
inc
shrl
std
decb
dec
vpmuludq
arpl
cld
sub
les
pop
mov
mov
mov
pop
push
loope
push
data16
clc
clc
dec
xchg
outsl
push
cmpsl
leave
sub
pop
jecxz
aam
push
out
sub
ret
out
scas
sti
lahf
fbld
dec
xor
push
incl
dec
mov
xor
dec
aam
jnp
and
sbb
xor
lods
test
cmpb
je
xor
cmc
fsubrl
pop
pop
pop
adc
mov
mov
int3
dec
das
dec
sub
outsl
bound
mov
sub
fbld
leave
sub
dec
push
sbb
xor
out
mov
scas
pusha
andl
stos
and
dec
fcompl
and
enter
stos
fists
mov
inc
daa
inc
and
jle
dec
aad
lea
mov
fwait
xchg
xor
jl
lcall
pushf
adc
sti
leave
adc
jne
xchg
xchg
inc
and
out
psllq
movsb
mov
stc
xor
rclb
inc
jmp
mov
lods
out
xchg
or
and
addb
repnz
shrl
push
push
arpl
ja
push
insl
jmp
nop
incb
int
rcrb
mov
mov
pop
xor
mov
mov
imul
cmp
push
cmp
sbb
sub
int3
and
sbb
add
xor
adc
inc
loope
and
test
xor
mov
cmpsb
push
xchg
adc
sbb
arpl
jb
fwait
ret
fst
xor
push
std
add
push
jbe
mov
invd
inc
sahf
pop
clc
adcl
jmp
in
push
jbe
mov
pop
adc
inc
or
mov
dec
adc
enter
insl
shlb
inc
jge
mov
rcl
adc
mov
fldt
dec
xor
icebp
inc
dec
dec
addb
or
js
rolb
sub
leave
pop
push
pop
push
shlb
cmp
mov
mov
fnstsw
sbb
add
loop
jne
dec
popf
shl
pop
mov
add
xacquire
fs
and
addb
shrl
mov
sbb
nop
sub
xchg
fwait
jbe
arpl
sbb
cld
test
sahf
aaa
outsl
mov
jae
pop
cmp
in
imul
adc
mov
shrb
sub
cmc
and
in
mov
icebp
xlat
inc
decb
sbbl
xchg
sub
xchg
dec
push
shr
insb
sub
cli
aam
lret
out
cld
push
test
and
aad
adc
fwait
cmc
sub
dec
rorl
pop
sbb
fisubrl
fdivrs
das
push
es
mov
jmp
pushf
xchg
enter
cwtl
add
data16
xchg
test
iret
frstor
pop
rclb
adc
or
ret
scas
int
add
es
imul
add
cwtl
aam
popa
sbb
test
movsl
pop
xlat
and
cld
imul
mov
rcl
ret
lods
test
push
mul
xor
idivl
xchg
xchg
imul
cld
mov
mov
add
jb
push
mov
mov
jmp
dec
xchg
mov
inc
es
notl
adc
dec
ret
dec
std
add
fwait
rcr
out
imul
lds
jne
mov
outsl
or
mov
icebp
lcall
lret
fwait
loopne
xchg
mov
xchg
popf
mov
call
jmp
fwait
imul
mov
out
lcall
cmp
mov
fcoms
test
xor
cmpsl
cmp
mov
std
je
add
ja
mov
cld
scas
call
adc
sarb
pop
add
std
scas
inc
out
mov
jb
add
sbb
xor
inc
out
adc
xlat
push
adc
je
pop
pop
movsl
pop
add
dec
dec
adc
insb
sbb
stos
xor
dec
or
mov
fadd
decl
stos
js
xchg
cmp
aad
jb
call
add
jle
test
pop
ljmp
pop
int3
xor
mov
mov
repnz
push
push
push
adc
out
test
insl
enter
adc
std
cli
in
add
xchg
sti
xor
xchg
out
outsb
or
cwtl
and
cmp
or
jne
and
lods
push
aaa
or
insl
xor
lahf
addl
mov
repnz
pop
xor
cwtl
popa
cltd
rclb
jne
mov
xlat
mov
lods
adc
cld
nop
mov
adc
inc
daa
cs
dec
lret
mov
cmp
repnz
mov
mov
jmp
or
ja
aaa
mov
imul
mov
cmpsl
popa
mov
xor
sbb
bnd
insb
fsubl
test
mov
and
xchg
in
gs
push
adc
fisubrs
in
rol
mov
repnz
int3
les
jo
and
adc
lods
mov
sub
mov
clc
add
and
repz
pop
mov
mov
filds
jecxz
pop
xor
lea
xorb
push
xchg
psllq
and
lret
cmp
sbb
icebp
mov
mov
inc
icebp
ja
or
sbb
fildll
lods
leave
push
cs
pop
jecxz
test
mov
pop
adc
dec
xlat
aad
push
mov
int
mov
jp
test
jmp
pushf
int3
ret
mov
inc
lahf
pop
xchg
jp
subb
les
cltd
ds
icebp
mov
adc
and
and
sub
dec
xor
adc
or
je
dec
pop
cmpsl
xor
sbb
add
dec
pop
fisttpll
mov
jl
push
mov
jbe
ds
and
xchg
mov
pusha
dec
add
hlt
push
pop
push
adc
pop
roll
mov
lea
mov
xchg
jbe
lock
jmp
lods
push
into
insb
enter
push
test
sub
fidivl
mov
sub
sub
addb
aas
xchg
stos
lods
clc
mov
icebp
push
sub
out
xchg
cli
in
cmp
dec
lods
cs
fsubs
testl
mov
jno
or
push
inc
xchg
int3
ror
pop
lcall
rorb
cmp
stc
jmp
sub
pushf
lcall
inc
mov
xor
in
lret
aad
imul
xor
mov
repz
dec
mov
in
pop
iret
rorb
ds
push
stc
push
pop
cmp
adc
in
inc
mov
xor
sbb
push
out
lret
in
cmp
add
push
push
add
lods
push
push
pusha
xchg
nop
xchg
jmp
push
xchg
test
mov
mov
sub
into
or
fxch
dec
icebp
mov
xor
lock
bound
pop
dec
push
in
aaa
mov
sahf
mov
repz
int3
sbb
and
xchg
push
or
mull
lods
fildl
pop
leave
dec
push
loopne
add
in
pop
test
ss
fucomi
cmp
lret
jne
push
inc
mov
add
xchg
lea
pop
dec
insl
leave
push
ds
push
mov
pop
jb
mov
mov
test
mov
idivl
xchg
jbe
arpl
xor
add
loope
mov
xchg
addr16
out
and
xchg
pop
cmpsl
pop
arpl
ljmp
xor
xchg
add
dec
fsubrl
jecxz
pop
and
cmp
fldpi
xchg
fildll
xchg
cmp
and
dec
in
and
lods
negl
mov
sub
and
xchg
jb
push
imul
push
addr16
adc
fimull
mov
dec
lret
aas
fistps
cmp
lea
inc
scas
ja
ret
into
aam
and
cmp
mov
js
xor
notl
jno
lea
je
fstpt
xchg
cmpsb
or
sub
leave
mov
pop
mov
int3
stc
aam
inc
in
negb
test
imul
sbb
lret
mov
ret
xor
mov
add
jl
mov
lcall
stos
push
sub
sub
popa
mov
movsl
cmp
sub
or
test
mov
leave
or
movsb
in
loope
cmp
fwait
push
scas
inc
xchg
jns
jle
cltd
sbb
lods
pop
rcrb
lods
add
sbb
inc
sbb
jae
add
lds
out
andl
add
stos
cmpsl
imul
mov
mul
mov
leave
cld
cmpsl
pop
sub
lds
lods
movsl
mov
or
jns
and
xor
stos
test
adc
out
mov
stos
cmp
jo
clc
push
and
test
add
jp
call
mov
cmp
mov
outsl
xchg
leave
and
push
lods
inc
adc
lret
lock
mov
lcall
pop
sub
xor
pop
mov
adc
ret
pop
add
inc
movl
lds
pop
fbstp
dec
cmp
sbb
lret
pop
cmp
out
cmpsb
pop
pop
movsl
fs
and
test
jge
stos
mov
hlt
sub
mov
out
xchg
dec
push
xor
lcall
mov
pushf
nop
push
fucomip
sbb
pop
fnstcw
inc
test
je
sbb
mov
xchg
test
add
and
cmp
jno
das
aad
xchg
dec
pop
jmp
add
mov
repz
lods
and
adc
jge
mov
je
or
push
or
or
mov
inc
push
sbb
add
xlat
inc
int3
jmp
outsl
insb
sarl
cmpsl
mov
jnp
mov
scas
add
push
mov
push
popa
mov
pushf
jne
icebp
mov
cmp
les
rcrb
xlat
xor
out
repz
cli
mov
hlt
push
insl
adc
xor
push
mov
cmp
push
add
aad
dec
les
lock
mov
out
mov
mov
movsb
pushf
jne
aam
je
lcall
mov
rol
stos
pop
mov
sbb
mov
imul
and
jno
fcmovu
ret
xor
dec
xor
mov
sub
lods
pop
popa
push
stc
int
xchg
mov
jp
cmp
xor
nop
cmpsl
fisubl
and
lret
and
push
js
lcall
out
daa
push
sub
lahf
movsb
mov
push
xlat
aam
out
pop
inc
sarl
int
push
sub
sub
mov
cmp
add
lods
aas
les
dec
inc
je
mov
push
cli
mov
mov
cmp
mov
jmp
loope
lock
jne
dec
jbe
out
add
lcall
push
mov
scas
add
ret
mov
or
mov
and
aam
pop
push
mov
pop
cwtl
sub
shufps
or
imul
arpl
lods
mov
scas
mov
lods
repnz
and
movsb
inc
push
mov
sub
sbb
pop
repnz
repnz
and
incl
ret
shl
mov
jecxz
jno
xchg
loopne
sbb
sbb
cld
fcompl
xor
subb
push
imul
shlb
cmp
inc
or
pause
jbe
jp
xlat
ja
test
popa
sbb
roll
repz
push
mov
fsubrl
jecxz
imul
push
dec
sbb
js
mov
lahf
mov
insl
xchg
lret
cmp
das
dec
adc
and
test
mov
push
imul
sub
push
std
sahf
test
and
inc
pop
jmp
mov
dec
mov
dec
orb
pop
int3
sbb
push
sti
fmul
jmp
shll
inc
jmp
lock
mov
adc
dec
ds
stos
orb
push
inc
xor
dec
ljmp
ror
jg
sub
mov
mov
scas
mov
xchg
and
cmpsl
psubusw
imul
mov
and
add
clc
rclb
sbb
add
xchg
fld1
insb
push
xchg
adc
sbb
mov
call
push
xchg
sbb
mov
xorl
push
xchg
stos
insl
pop
sub
or
xchg
stos
mov
cmp
std
cmp
sub
pop
enter
cmp
jno
sbb
outsb
sub
push
flds
and
pop
cld
jbe
lret
xor
movl
jl
pop
ret
sub
dec
push
jle
popa
fwait
fwait
mov
hlt
jns
inc
jno
sarb
fiaddl
sbb
xor
aam
jp
out
and
dec
add
mov
repz
ret
cwtl
ljmp
jnp
ja
or
xchg
add
repnz
mov
mov
ret
fmull
lcall
fstl
fnstsw
fsubrs
scas
or
add
push
lahf
xchg
push
imul
std
sbb
mov
push
xchg
xorb
sbb
insb
push
movsl
push
aaa
mov
add
and
adc
hlt
ds
es
sbb
mov
call
test
lock
lds
fs
mov
repnz
pop
pop
pop
sti
clc
add
mov
sub
lcall
xor
xor
aad
sub
sti
or
jo
popa
subb
push
lea
dec
lea
icebp
fsts
rcll
push
sub
pop
daa
inc
dec
in
sbbb
xor
fincstp
cli
int
shl
add
fcomip
or
mov
add
sahf
test
adc
rcll
lods
pop
shll
cmc
rcr
and
mov
iret
jmp
cmpsb
pop
movsb
dec
ficoml
pop
sub
out
jb
xchg
ret
out
icebp
cli
cmp
mov
xor
mov
jb
mov
mov
roll
lcall
es
adc
cwtl
lahf
imul
loope
stos
xchg
mov
xor
pop
scas
mov
test
popw
arpl
lahf
ret
adc
mov
xchg
inc
incl
cmp
int3
cmp
test
cmp
and
pop
and
repz
mov
xchg
adc
scas
rcll
sbb
xchg
sbb
arpl
int
popf
inc
push
testl
repz
sbb
cmc
mov
dec
mov
or
test
pop
stos
js
movsb
hlt
ret
push
mov
in
repz
jl
sbbb
push
jnp
pop
cmp
pop
mov
xchg
or
imul
outsb
rcrb
mov
ss
inc
adc
and
push
sbb
lcall
and
int
cwtl
enter
cmc
iret
cmp
repz
mov
pop
aas
pop
pop
pop
push
out
cmp
xchg
add
inc
in
out
sub
faddl
fcompl
insl
inc
fimull
insl
cmp
xchg
cld
cmpsl
dec
or
cmp
or
daa
out
push
adc
or
lods
cmp
cs
sub
je
mov
rcll
sbb
orl
or
push
aad
sbb
cmp
cmp
pop
adc
in
aam
popf
stc
pusha
and
mov
push
jbe
repz
cltd
push
popa
mov
pop
sbb
fwait
movsl
push
mov
mov
cmc
lret
jne
aas
jmp
sti
pop
jmp
xor
out
std
push
push
mov
push
movsb
cmp
int
aad
inc
repnz
sub
pop
and
rol
lahf
inc
loopne
jg
mov
pop
or
cwtl
cltd
sub
push
sub
jge
jae
xchg
fsubrp
pushf
sbb
mov
jmp
lcall
xchg
cld
sub
lea
sahf
cmpb
add
stos
xor
insl
inc
iret
ja
lods
xor
rcll
mov
andb
sbb
xor
cld
mov
aad
mov
adc
shlb
roll
mov
mov
push
clc
cmpsb
mov
xor
inc
repz
dec
aam
push
dec
and
adc
in
xchg
jecxz
mov
add
dec
xchg
test
add
das
or
fldl
cmp
add
inc
sbb
pop
aaa
pop
sbb
test
dec
std
mov
fcompl
outsb
sbb
xor
adc
xor
jmp
inc
lock
popf
push
xlat
loop
sub
and
mov
mov
iret
out
dec
push
or
mov
das
mov
or
imul
push
inc
inc
orb
push
push
ret
rcl
enter
testl
loop
icebp
iret
add
pop
dec
jecxz
inc
mov
push
cli
add
dec
xchg
or
push
shll
push
jmp
jmp
lcall
in
add
out
push
jae
hlt
cli
dec
arpl
inc
jle
add
movsl
fsin
cmp
xor
lahf
pop
mov
mov
stc
dec
push
xor
inc
lahf
mov
lods
inc
nop
push
mov
sbb
fcmovnu
cmp
ret
dec
in
inc
jne
cmp
mov
cmp
push
bswap
leave
and
add
xchg
les
imul
lods
shl
pop
xor
mov
jg
rcrl
inc
int3
pop
lock
pushf
push
xorb
xchg
std
loopne
lock
inc
adc
std
mov
aad
xor
xorl
movsl
jmp
push
or
cmp
or
sub
ret
sub
orb
loop
lcall
or
movswl
lock
mov
xchg
adc
iret
fsubp
or
fisubrs
mov
dec
mov
movsb
pop
pop
push
in
cmp
popa
das
push
sahf
and
enter
test
in
lea
iret
mov
scas
xchg
in
fwait
cmc
adc
mov
mov
lahf
mov
jg
rcl
or
mov
or
jns
cli
sbbb
and
sbb
cmpsl
or
dec
cwtl
es
movsb
pushf
sbb
sbb
and
pop
lock
pop
std
cmp
mov
lods
push
ffreep
sbb
sbb
mov
dec
or
dec
sbb
insl
bound
out
insb
jnp
fmul
loop
lret
imul
std
popa
jns
adc
inc
repz
adc
jns
mov
popa
xor
ret
arpl
or
ljmp
scas
hlt
jmp
jbe
lods
aam
push
popf
das
inc
inc
loope
fs
stos
xor
xor
and
mov
andb
mov
testb
mov
xchg
add
lcall
stos
dec
mov
mov
mov
push
sbb
mov
mov
dec
xor
dec
imul
bnd
out
cmp
push
lods
stos
test
test
shlb
cmc
mov
inc
cmpsl
iret
mov
dec
cwtl
iret
lret
pop
je
int3
xlat
cltd
mov
repz
xor
mov
adc
cli
push
mov
xor
cmp
push
mov
sbb
fbld
jnp
sub
aas
enter
lods
jecxz
rcrl
enter
loope
ss
lret
sbb
mov
sarl
push
jle
cmp
aas
and
inc
sub
push
adc
dec
push
and
jb
or
mov
lods
adc
sub
pop
lcall
insb
ss
dec
adc
fldl
sti
shll
cmpsl
xchg
push
stc
imul
inc
outsl
adc
cmpsl
lcall
and
cld
inc
rcrl
sahf
out
jae
jns
mov
jae
dec
pop
flds
mov
pusha
scas
xor
inc
js
leave
sub
aaa
mov
mov
subb
inc
sub
shl
imul
push
mov
jmp
inc
lea
mov
ret
push
pop
movsb
aam
jae
cmp
das
push
cmp
xor
rclb
test
test
loop
outsl
test
lock
pusha
jecxz
fwait
movsb
cli
jp
aaa
call
pusha
mov
out
daa
adc
sub
repnz
add
or
dec
pop
repz
mov
das
push
enter
jae
cmp
jl
shll
adc
sub
push
xchg
addr16
in
cwtl
mov
inc
mov
aas
mov
mov
cmp
loopne
scas
sub
pusha
stos
fisubl
sbb
inc
aaa
push
je
sahf
sbb
dec
aad
in
lock
mov
mov
shl
push
jne
adc
xor
push
scas
stc
lock
lock
insl
cmp
fcompl
loopne
xchg
notb
jl
arpl
mov
fbld
rcl
es
xor
je
int3
pop
les
add
int3
clc
xchg
add
cmpsb
or
call
cmp
push
cmp
pop
sub
scas
fsubs
je
dec
in
mov
jne
mov
xorl
in
mov
test
push
mov
push
inc
into
dec
jne
and
xor
xor
jg
test
pop
adc
sahf
cltd
mov
mov
push
ds
scas
cltd
push
adc
inc
cmp
push
xor
mov
add
ret
neg
test
and
sahf
sbb
cld
loopne
ds
or
fwait
call
add
ret
call
push
cmp
xchg
push
in
shlb
xor
gs
js
fadd
jnp
test
fdivrl
pop
sbb
or
or
sub
and
adcl
sbb
fcompl
dec
movsb
pop
dec
movsl
xor
ja
popa
into
inc
jae
pop
data16
int
stos
and
cmp
push
int3
sbb
push
sub
mov
jnp
es
nop
inc
popf
xor
lods
sbb
stc
mov
jns
push
inc
push
jge
adc
and
lret
mov
sub
loopne
jp
adc
sub
cmp
cwtl
jecxz
cmc
outsl
pop
xor
jns
jbe
pop
jge
sti
push
std
xor
popa
cmpsb
xor
inc
psadbw
cltd
lds
enter
adc
mov
push
jecxz
mov
stos
add
fsts
cmp
mov
xor
cmc
mov
xlat
mov
jl
sar
sbb
xchg
cmp
xchg
orl
dec
subl
mov
or
mov
mov
adc
lods
das
mov
stos
jge
lds
out
subl
cmpsb
push
shrl
or
jecxz
pop
cwtl
out
add
pushf
loope
xor
pop
xor
xor
xchg
hlt
add
popa
jle
sarl
out
lea
aad
jns
pop
in
loop
mov
das
leave
lds
pusha
inc
adc
push
pop
stos
lock
xor
lds
inc
nop
loope
out
add
sub
imul
mov
jno
pop
hlt
cld
dec
mov
imul
fisubrs
aas
sub
or
ss
and
cmp
fnstsw
hlt
jg
fsubp
xor
pop
push
mov
sub
test
jae
mov
xchg
add
iret
xlat
jnp
adc
jnp
mul
insb
xchg
int3
push
adc
sbb
rcll
cmp
push
mov
mov
ret
mov
aas
jo
sub
xlat
jl
push
mov
test
mov
xchg
adcl
jae
adc
divl
arpl
sub
adc
inc
lods
xchg
adc
mov
add
mov
cmp
mov
fisubs
mov
sbb
add
je
les
loope
or
loope
pop
jmp
jno
mov
adc
mov
pop
jnp
add
push
mov
int
cmpsl
inc
mov
in
cld
dec
movsl
cmp
fcomp
pop
lcall
pop
int3
inc
popa
push
xchg
sbb
xchg
shrl
sub
pusha
insl
mov
or
lret
jb
add
leave
icebp
jnp
sbb
inc
std
stos
mov
les
hlt
inc
mull
je
sub
push
sub
mov
adcl
inc
xor
add
adcl
insl
sbb
sbb
mov
pop
jecxz
movsl
cmp
dec
xor
xor
pop
adc
mov
lds
jae
cmp
pusha
cli
data16
fisttpll
xor
sbb
add
mov
mov
push
lods
xchg
arpl
add
lds
push
and
movsl
adc
in
adc
push
jnp
mov
push
dec
push
lds
imul
insw
fstpt
pop
outsb
clc
ficomps
shll
lret
mov
inc
loopne
add
movsl
jnp
aaa
push
mov
mov
popf
adc
mov
and
test
cmp
add
add
push
shrl
pushf
add
stos
inc
cmp
aad
xchg
fdivrs
mov
nop
call
cmp
mov
dec
cld
dec
sub
dec
imul
shlb
bound
sub
cmpsl
inc
jp
ror
inc
pop
jmp
pop
lock
sub
mov
cmpsb
call
je
ret
ljmp
faddl
test
imul
lods
stos
popa
mov
pop
jle
pop
aaa
movsb
subl
and
in
pop
test
inc
cli
scas
das
out
sub
xorb
out
scas
cmc
push
xchg
sbb
jl
ja
fstl
test
xchg
test
xchg
jp
add
ja
xor
mov
jmp
jae
in
cmpb
jne
stos
push
cmpsb
lea
int
ret
sbb
adc
insl
test
inc
dec
imul
faddl
inc
push
ss
mov
jb
lea
adc
pop
add
pop
ss
cmp
mov
inc
jnp
mov
sti
xchg
and
sbb
push
push
or
addr16
xor
xor
ds
dec
mov
vmovaps
sub
das
or
sbb
fisttpl
xchg
dec
dec
push
jo
mov
notb
push
mov
sti
xchg
push
cmp
jbe
dec
jecxz
repnz
push
in
mov
mov
xchg
cli
push
dec
mov
mov
or
xor
mov
inc
aaa
or
fstpt
mov
adc
jnp
lods
pop
xchg
jp
jnp
xchg
sbb
jmp
mov
inc
mov
js
movsl
ret
fstps
mov
dec
hlt
cmp
sub
aad
fstl
adc
in
aam
punpcklbw
arpl
or
inc
jle
popf
mov
push
fistpl
fnstsw
repnz
pop
lods
in
js
adc
in
jae
cmpsb
and
cli
stc
ss
cmc
xchg
dec
lock
or
and
andl
popa
in
mov
jmp
cmp
lret
pop
out
mov
add
mov
cmp
stos
pop
dec
or
xchg
mov
loope
pop
jb
out
xor
xlat
dec
adc
test
test
and
mov
int3
push
jb
rclb
iret
in
add
repz
add
push
add
enter
sbbl
mov
mull
pop
lret
mov
int3
push
mov
pop
jbe
push
or
insb
cmp
add
pop
sbb
insb
daa
insb
sti
jns
cmp
dec
push
xchg
cmc
dec
sbbb
cmp
jae
lahf
rcrb
and
adc
or
fistps
xchg
xorl
jg
adc
stos
inc
and
outsl
xchg
popa
mov
into
lds
fsubrl
push
pop
iret
leave
xchg
fwait
es
push
mov
add
push
pop
pop
cli
xchg
lods
cmp
hlt
push
loop
ds
adc
stc
push
mov
outsl
pop
jne
popa
int
sarb
xchg
outsl
inc
adc
mov
push
mov
outsb
inc
add
shl
gs
insb
jo
dec
clc
mov
dec
roll
loopne
mov
je
sub
add
mov
push
sub
fistpll
je
cli
mov
jg
jnp
repz
aaa
fadds
sbb
jg
pop
xchg
xor
mov
rcr
repnz
sti
popa
sub
inc
dec
dec
cltd
rcrb
and
mov
std
and
or
inc
jge
mov
stc
xlat
and
xorl
fdivrs
xor
xchg
mov
cmp
cmc
pop
xchg
aas
popa
cmc
rorl
das
jp
out
int
mov
or
hlt
inc
ret
pop
sbb
xor
sar
scas
stos
test
push
out
push
ffree
test
out
mov
insb
xchg
repz
mov
frstor
lea
inc
jns
cmpb
es
sbb
into
addb
fwait
std
cld
push
lea
push
andb
test
sub
xchg
out
xchg
add
cmp
pusha
aas
fcom
lea
mov
jp
imul
mov
pushf
mov
push
jmp
sbb
cld
mov
push
fs
sub
pop
dec
cwtl
fwait
out
mov
pushf
add
out
aas
movsl
jbe
push
clc
sbb
out
sahf
xlat
sub
fcomp
sbb
fstl
add
je
adc
das
and
pop
adc
jns
cmpsb
cmp
aas
jae
int3
imul
in
mov
in
push
inc
pop
nop
add
add
or
dec
sbbl
dec
add
push
lret
xchg
dec
cltd
das
dec
arpl
les
out
inc
loop
cmp
push
mov
shll
cli
xor
pop
mov
or
loope
rcrl
mov
adc
shlb
push
mov
dec
xlat
sbb
cld
inc
and
push
fst
aaa
rorb
dec
pop
jg
pop
push
rcl
iret
pop
popf
scas
mov
clc
xchg
add
sti
popf
jg
dec
iret
loope
pop
fisubs
mov
out
xor
out
lods
push
xacquire
aam
sub
std
iret
jno
adcb
scas
mov
outsb
shll
out
xchg
aad
das
dec
dec
and
dec
mov
stos
xchg
in
mov
inc
adc
xchg
icebp
push
mov
sub
sahf
sub
in
add
fisttpl
loop
push
xor
xor
jmp
sub
push
mov
inc
dec
sbb
ret
into
inc
add
dec
add
mov
mov
xrelease
loop
and
popa
cmpsl
cltd
add
dec
inc
sbb
jg
sub
lods
inc
es
jge
cmpsl
jns
pop
stc
xor
xchg
inc
cmc
jp
fsubs
cli
adcl
inc
pop
aad
fildl
lods
jno
icebp
cmp
jp
inc
or
push
mov
call
movsl
jecxz
ret
std
fcoms
mov
mov
lds
scas
mov
cli
mov
mov
movsb
bound
pop
xchg
out
sbb
jle
fisttps
in
pop
fwait
ljmp
cwtl
xor
lret
in
dec
inc
dec
lods
lock
mov
pop
sub
aas
sbbl
fcomps
rorl
mov
pop
mov
add
jle
sbb
adc
push
add
fs
or
cli
ljmp
xchg
xchg
aad
fndisi(8087
mov
ljmp
sub
in
enter
xor
adc
inc
xchg
xlat
cmp
iret
repz
mov
jb
leave
insl
insl
lea
cmp
xor
mov
out
aam
cmpsb
adc
sub
bound
lcall
scas
mov
cmpsl
gs
enter
inc
push
push
adc
xor
adc
mov
sbb
loopne
mov
enter
pop
cwtl
rol
ljmp
int3
das
add
mov
test
lcall
adc
aas
mov
in
sub
daa
lret
aaa
push
imulb
lods
push
push
mov
pop
cmp
inc
mov
dec
xor
inc
or
pusha
sub
inc
jnp
shl
out
out
or
jnp
shrb
fsubrs
sbb
out
mov
add
dec
shll
or
leave
mov
mov
jbe
or
aad
cltd
js
mov
imulb
mov
inc
fdivr
outsl
mov
mov
pop
xchg
and
aas
xor
xor
mov
add
call
or
int
inc
cltd
dec
jg
das
out
pop
lcall
clc
test
inc
rclb
scas
pop
inc
je
jp
pop
lcall
push
xchg
push
neg
int
flds
in
out
arpl
cmpsl
pop
je
btr
mov
test
mov
ja
pop
adc
shll
stos
inc
sbb
sbb
pop
in
inc
movsl
and
sbb
add
inc
pop
hlt
repz
jmp
loopne
pop
adc
pop
add
and
dec
jp
pop
test
add
ficoms
repnz
int
mov
cmp
cmp
sbb
sub
xor
clc
and
sbb
mov
mov
jns
push
shll
dec
and
xor
div
jecxz
mov
imul
rolb
sub
and
lea
cmpsl
in
push
mov
mov
mov
mov
lea
mov
stc
repnz
lahf
and
mov
and
push
mov
cmp
cwtl
imul
mov
dec
sub
adc
shll
lods
jae
inc
jo
dec
or
icebp
pop
xchg
inc
and
ficoms
mov
in
test
out
pushf
adc
andl
clc
mov
pop
lds
int
push
mov
nop
mov
lds
mov
cli
fsubrs
jo
pop
sti
add
xor
cmp
jb
jno
push
insl
scas
jle
rcrb
loope
mov
push
sarl
icebp
rorb
cs
jbe
jo
jmp
ss
mov
jbe
out
ficomps
xchg
fsubl
ljmp
popf
movsb
loope
mov
jge
push
bnd
dec
nop
iret
xchg
dec
call
mov
mov
call
adc
ss
add
mov
jno
xor
jb
adc
sub
or
pop
add
and
std
or
inc
jb
pop
cmp
nop
and
jmp
lret
dec
mov
jne
les
movsb
int
test
outsb
jne
mov
pop
jb
fldl
mov
dec
push
leave
out
dec
insl
call
fistl
pop
repz
movsl
lcall
sub
inc
cltd
jp
cmp
bound
fdivl
dec
sbb
xor
loop
jne
shl
sbb
fstp
jno
dec
cmp
or
jl
imul
xor
mov
mov
inc
push
fldl
add
jecxz
cmp
or
cmp
cmpsl
cs
daa
out
sahf
rorb
enter
aam
fldl
mov
sub
loope
imul
cmpsl
fcompl
sub
data16
mov
clc
les
adc
mov
scas
add
push
sbb
rcrl
inc
adc
push
stos
bound
jo
jno
jne
rcrb
data16
hlt
and
cmp
or
notl
adc
repnz
push
cs
daa
test
inc
aad
rclb
mov
xor
mov
or
pop
fcoml
mov
or
out
or
fnsave
sub
lock
xchg
cltd
push
int3
or
cwtl
shl
jae
addr16
enter
hlt
push
push
xlat
sbb
dec
xor
cmp
adc
mov
lock
jg
ja
jge
push
int
frstor
push
loope
mov
xor
adcb
cltd
cmc
sub
push
loop
nop
xlat
pop
int
xchg
xchg
cld
sbb
out
adc
test
icebp
incl
inc
stc
popf
jb
pop
inc
stc
or
leave
xor
ret
xor
jnp
mov
mov
pop
jge
loopne
jae
icebp
test
ficoml
cmp
in
mov
dec
cwtl
lea
cmc
push
rorb
int
aaa
repz
call
stos
cs
iret
leave
push
jl
pusha
icebp
push
adc
sti
push
jb
mov
dec
test
xchg
dec
or
adc
inc
arpl
mov
leave
dec
pop
stos
add
mov
jbe
and
inc
mov
cmp
iret
outsl
popa
cmpsb
daa
mov
enter
mov
js
sub
es
dec
and
xchg
xchg
dec
mov
lcall
stos
int
push
repnz
dec
or
int
and
ret
and
pop
inc
adc
jns
inc
mov
mov
lahf
cli
pusha
out
ja
aas
std
aam
mov
aas
jp
leave
inc
cmp
or
push
pushf
sbb
mov
mov
pop
or
rep
sahf
mov
sbb
fldt
cli
int
lahf
push
call
and
shrl
mov
add
xchg
ret
cmp
and
cmp
cs
xchg
dec
and
cmp
and
or
cmpsl
inc
cld
rcrb
mov
sbb
add
inc
icebp
pop
inc
add
sahf
adc
movsb
xchg
xor
add
fadds
add
pop
and
mov
cmpsl
xor
inc
in
ljmp
rcl
jle
mov
xor
sbb
rolb
and
dec
stos
inc
les
and
adc
adc
test
roll
mov
jo
insb
cld
mov
out
outsb
mov
jno
sahf
sti
out
adcl
xor
rcll
mov
rcrl
add
inc
push
sbb
lods
aam
sbb
mov
add
pop
sub
adcb
ret
outsl
sub
push
scas
sbb
test
sbb
cld
adc
inc
xchg
shlb
push
mov
fsubl
xor
pop
jae
shl
push
fnsave
inc
mov
sti
and
loop,pn
fstpl
mov
cs
test
jp
cmpsb
hlt
jae
testl
dec
outsl
lret
loopne
adc
push
out
outsl
es
pop
mov
jne
inc
aas
mov
lcall
pop
repnz
ds
inc
mov
ffree
add
xor
stos
cmc
jmp
xchg
mov
int3
inc
and
jo
addb
mov
or
add
cld
or
adc
lock
cli
mov
xlat
push
sbb
cmp
xor
mov
dec
mov
popa
or
jae
shrb
scas
mov
fsubrl
or
out
mov
sub
pop
lahf
inc
lock
outsl
xor
push
jecxz
xor
mov
testb
adc
pop
mov
hlt
in
sbb
push
sub
and
les
scas
add
repz
add
mov
sarl
mov
pop
cmp
daa
pop
cmp
je
lods
inc
scas
add
jmp
lret
sbb
mov
inc
fnstsw
mov
jp
ficompl
adc
and
adc
out
dec
adc
pop
jae
std
xchg
loopne
jp
push
iret
and
loopne
mov
adc
ret
roll
psrld
cld
shrl
movsb
sti
lcall
add
and
lods
enter
jg
ret
test
cwtl
sahf
xchg
xchg
out
add
lds
pop
hlt
pop
in
outsb
insl
jle
jmp
mov
sbb
dec
ret
rorl
dec
repnz
std
test
insl
jg
mov
pop
nop
ret
in
bnd
loop
sti
xor
inc
clc
and
stos
jl
xchg
adc
fwait
sbbb
jmp
pop
in
ret
sbb
jnp
add
dec
jle
jmp
cmpb
mov
imul
sbb
add
cli
arpl
jg
imul
movzbl
cltd
sub
push
jl
call
mov
sub
sbb
mov
cs
pop
int3
in
js
jne
add
xchg
adc
in
sbb
mov
mov
jo
cltd
ds
sbb
cmp
lods
lea
es
mov
mov
movsl
dec
or
cmp
and
scas
xor
ljmp
and
xchg
mov
mov
dec
dec
mov
idivl
dec
cmpsb
inc
pop
add
add
dec
or
xor
push
lds
jae
xchg
lock
jae
hlt
xchg
lock
popa
in
lret
cmpsb
sub
out
push
mov
ss
cld
sbb
sbb
xchg
fcmovnbe
push
or
or
in
dec
mov
pusha
ficoms
ja
push
jo
cmpsl
sti
leave
lock
bound
xchg
arpl
inc
mov
mov
and
imul
mov
cmp
aam
xchg
xchg
jmp
mov
lcall
fidivl
pop
andl
adc
push
out
adc
or
pushf
pop
xchg
nop
test
or
jmp
adc
sbb
sub
pop
dec
daa
mov
mov
pop
out
mov
push
inc
mov
rcrl
jnp
scas
aam
enter
push
sti
in
stc
push
jmp
sti
mov
je
mov
mov
jne
and
xor
mov
fs
dec
add
mov
out
in
jnp
fsubl
inc
lret
int3
mov
loope
in
std
adc
inc
mov
mov
ljmp
loope
lret
adc
ja
or
mov
mov
stos
sbb
sti
lcall
add
sbb
fmulp
inc
xchg
push
popf
loope
addr16
mov
scas
fnstsw
int3
mov
jae
add
push
dec
jmp
sub
or
ror
xchg
inc
xor
cld
out
lret
jbe
xorl
mov
cmpsl
and
sbb
add
jl
aad
push
out
subb
push
shll
add
mov
xlat
arpl
stos
inc
outsb
push
test
ret
sub
cmpsb
xchg
xor
add
xchg
scas
mov
jo
dec
xchg
pusha
mov
popa
sbb
xchg
push
cmc
stos
loopne
notb
push
pop
test
add
xor
cmpsl
jbe
sub
int
decl
dec
sbb
fsubrs
outsl
stc
shll
ds
xchg
mov
sbb
test
cmp
lcall
loope
jb
cmp
pusha
add
adc
push
aaa
hlt
stos
ret
or
inc
cld
aaa
hlt
xor
movsb
icebp
cwtl
fsubs
mov
lcall
sub
fimuls
cs
mov
adc
xchg
cli
mov
mov
sub
jne
out
add
push
push
and
and
iret
adc
pusha
fldl
in
mov
push
mov
pop
mov
pop
adc
xor
or
test
aas
lock
mov
cld
jmp
dec
in
sub
pusha
out
insb
xor
fstpt
sub
sbb
cli
cmc
jmp
pop
or
sub
outsb
out
sbbb
inc
or
sbb
ret
in
cltd
jp
dec
pop
insb
aam
imul
mov
cmp
sbb
mov
in
mov
mov
mov
icebp
add
push
sub
scas
jns
adc
in
xor
sbb
fsubr
test
xchg
add
fs
mov
ret
jle
in
orl
ss
mov
shl
xchg
sub
jbe
es
mov
cmp
sbb
call
stc
pop
out
add
dec
dec
mov
sub
loope
inc
popf
add
and
js
mov
sti
cmp
or
fwait
inc
loop
jg
cmc
jo
movsb
jle
lahf
add
mov
aas
pop
das
in
jb
into
jecxz
sub
lods
repz
push
sahf
and
imul
mov
movsl
and
movsb
sti
mov
sub
mov
fs
mov
dec
and
xchg
movsb
daa
scas
insl
or
xchg
or
mov
jle
stc
cmp
insb
ret
mov
mov
dec
std
push
aam
jle
mov
push
notb
aad
aad
ja
jmp
mov
shrb
or
outsl
mov
mov
pop
add
fstpt
roll
jl
dec
std
xchg
pop
jecxz
xchg
jae
imul
hlt
cmp
push
and
xchg
xchg
cwtl
xchg
cmp
or
ss
les
xor
aad
push
mov
add
cmpl
fwait
leave
sbb
iret
pop
xor
pop
push
inc
add
shll
adc
fildl
pop
nop
pop
scas
loopne
sub
ficomps
adc
mov
mov
jl
rorb
mov
pop
cwtl
jge
ret
cmp
lret
xchg
push
cmp
or
xchg
mov
pop
xchg
lahf
rcl
inc
push
in
mov
data16
test
sti
fisttpl
inc
mov
loope
jne
lock
insb
out
sub
jg
stc
dec
hlt
jb
sbb
mov
mov
je
jo
aad
rorl
bound
inc
mov
loope
dec
stc
pusha
adc
or
repnz
jl
sub
mov
mov
int
ret
cmp
call
pop
sarl
mov
inc
cmp
mov
bswap
fwait
sub
pop
pop
pop
sbb
inc
ja
ljmp
cmc
dec
mov
and
cs
dec
mov
test
rcrb
or
xor
pushf
jns
mov
mov
cmp
mov
cmp
out
ret
popa
in
mov
das
inc
stos
jbe
lods
mov
push
cld
test
push
and
mov
cmp
sub
mov
sbb
adc
jge
dec
jp
addr16
add
test
xor
xor
sti
iret
aam
push
mov
xchg
mov
ret
mov
lea
jns
mov
out
xor
mov
mov
arpl
lret
and
repz
pusha
and
out
and
cmp
mov
and
push
push
sub
bound
lds
add
rcrl
pop
pop
jmp
dec
icebp
lock
pop
mov
cld
mov
cs
adcb
inc
movsb
fmull
inc
jecxz
jecxz
push
mov
cmp
or
jge
fiadds
test
xor
xchg
jg
or
xor
js
fisubrs
jbe
xchg
mov
inc
es
loope
addr16
div
ret
dec
push
out
leave
insb
cmp
scas
and
mov
imul
push
mov
arpl
stc
xor
mov
or
xchg
mov
lahf
out
in
sti
pop
jbe
xor
gs
dec
jns
hlt
adc
adc
fs
pop
test
iret
jnp
int3
sbb
mov
aad
loope
add
cmpsl
cmpsl
rolb
stc
mov
je
xor
sarl
test
mov
jns
jge
push
ret
in
std
xchg
fdivrs
in
mov
adc
cwtl
push
jg
xor
push
jecxz
adc
dec
in
mov
fiadds
pop
pcmpeqb
push
add
mov
sbb
inc
push
mov
leave
mov
movsl
xlat
iret
test
add
cli
push
mov
call
out
enter
out
mov
pop
mov
in
adc
aas
stos
fsubs
pop
adc
cmp
inc
mov
sub
test
jbe
mov
dec
stos
ljmp
les
xor
mov
jbe
cmp
loop
pop
sub
outsl
jl
jae
test
or
sbb
mov
icebp
xor
jae
hlt
lock
or
leave
sub
push
xchg
test
stos
lods
in
out
roll
mov
mov
push
lods
cmp
mov
in
mov
xorb
mov
ss
ja
pop
insl
insl
cmp
sar
push
lret
cli
mov
dec
jmp
sbb
insb
jb
in
icebp
insl
xor
dec
dec
pop
push
mov
fnstcw
cmp
sarl
aam
adc
pop
jge
enter
jb,pn
sbb
xchg
jp
xchg
mov
lret
scas
push
jno
mov
jp
addr16
fidivrl
sahf
push
cltd
push
jg
aaa
sbb
sbb
xor
mov
int3
loop
ds
in
out
xchg
repnz
hlt
test
inc
jbe
adc
sti
cld
sub
aaa
call
jae
sbb
fisubrl
push
rcll
pop
jl
adc
mov
add
jmp
adcl
aas
cmp
pop
cmp
lahf
test
pop
add
add
dec
fs
inc
js
sub
pop
cmp
sub
shl
pop
xchg
and
adc
pop
xchg
popa
push
mov
jge
sub
in
icebp
cmp
xor
inc
mov
pop
fcomps
jmp
ret
xor
add
push
push
dec
xor
out
or
add
push
mov
je
xchg
mov
jg
insb
icebp
stos
inc
aas
loope
repnz
filds
mov
dec
cld
out
stos
lods
out
out
int
jns
pop
mov
sub
adc
adc
lcall
xchg
scas
jmp
push
pop
inc
enter
popa
pop
mov
inc
cltd
fldcw
out
in
sub
cmp
sbb
popf
mov
ja
jnp
and
push
lock
negb
aaa
das
hlt
dec
xchg
adc
pop
cmpsl
push
jp
cmpsl
repnz
dec
dec
gs
xchg
icebp
mov
push
ss
xor
mov
adc
or
mov
movsb
inc
inc
mov
bound
sub
xor
movsb
sub
add
adc
enter
add
out
stos
cmp
mov
jns
mov
inc
cwtl
sbbb
inc
dec
mov
pop
mov
sbb
or
into
out
sbb
mov
mov
adcb
fstpt
stc
mov
sbb
std
cmc
jle
mov
sbb
or
inc
inc
sub
pop
or
clc
adc
inc
xlat
adc
cmc
pop
frstor
mov
je
decb
insl
push
dec
aad
sub
adc
dec
mov
mov
sbbl
aas
js
lds
icebp
dec
mov
lret
aam
pop
dec
inc
sbb
adc
out
sbb
and
out
dec
cmc
sbb
popa
pushf
popa
mov
and
push
std
mov
xlat
add
jl
sub
add
pop
ja
mov
cltd
mov
mov
jbe
pop
push
sbbl
add
push
xor
movsl
mov
repz
mov
daa
mov
pop
mov
add
xchg
mov
add
lods
fnstenv
movsl
sub
cmpsl
cmpb
ss
out
loop
xchg
sbb
stos
aad
lcall
sub
push
mov
aaa
xchg
xor
stos
xlat
mov
pop
sbb
leave
mov
lahf
xchg
mov
sub
sub
mov
ljmp
dec
loopne
push
popf
mov
aaa
mov
or
scas
mov
dec
adc
cmp
xchg
fnstsw
shlb
xchg
mov
lods
clc
cs
push
jae
std
push
jp
loopne
xchg
dec
adc
inc
dec
push
inc
inc
and
gs
xor
cmpsl
bound
dec
popa
mov
sub
addb
add
arpl
xchg
adc
ret
jp
xchg
cmp
sbb
dec
arpl
and
adc
push
ret
mov
cltd
inc
cwtl
cmc
and
loop
out
push
sbb
jge
mov
push
aad
mov
mov
mov
or
sbb
or
pop
add
sub
lcall
ret
pop
jne
mov
xor
sti
pop
adc
lods
xor
sbb
rcr
xchg
clc
lods
nop
sbb
add
mov
mov
pop
stc
clc
push
into
hlt
fcoms
cld
je
or
inc
lock
mov
fsubrl
leave
pop
testb
std
dec
jl
rol
es
inc
scas
gs
push
into
pop
pmaxub
jp
inc
sbb
adc
mov
add
jbe
lahf
ja
dec
xchg
pop
or
std
insb
bound
inc
popa
dec
sbb
andl
cmpb
add
mull
dec
out
fsubr
fidivrs
fisubl
push
in
outsb
int
insl
pop
inc
xor
pusha
mov
inc
inc
xchg
add
xchg
into
mov
out
jge
mov
sub
rorb
scas
dec
pop
aam
cmp
add
fidivl
xchg
rolb
ret
and
inc
and
pushf
inc
popa
lcall
mov
test
pop
jne
iret
mov
sbb
inc
je
xor
mov
sahf
sbb
xchg
cmpsl
test
jg
aad
pop
fistpll
jbe
outsl
sbb
aaa
iret
xchg
cmpsl
xor
mov
fcmove
mov
pop
pop
inc
xchg
out
xor
xlat
cmp
jae
sbb
mov
mov
cmp
sbb
sbb
xchg
or
jno
mov
icebp
insl
ja
pop
ret
das
scas
pop
lods
dec
pop
je
iret
es
cmpsl
mov
movsl
dec
sbb
fisubl
pop
cmpsb
loopne
movq
stc
pop
jns
repz
mov
aas
mov
pop
dec
je
sti
jb
fstl
stc
andb
iret
lret
inc
loop
or
inc
pop
movsl
in
loopne
into
jno
sbb
cltd
push
std
arpl
mov
jge
jp
aaa
mov
push
sbb
in
cwtl
push
loopne
cli
ret
cmp
outsb
test
movsb
aaa
dec
dec
std
out
jbe
xchg
test
iret
ss
int
mov
jmp
mov
xor
cmp
xchg
cmp
push
aaa
pop
xor
cmp
mov
inc
pop
add
loopne
pusha
xchg
pop
mov
xchg
pop
ds
aas
add
xlat
filds
mov
mov
test
dec
dec
inc
cmpsb
iret
add
test
adc
push
cmc
call
push
flds
pop
sub
cld
or
loopne
ljmp
inc
loop
aaa
or
stos
sbbb
in
or
cmp
out
fisttpl
cmp
jne
fisubrl
sbb
gs
imul
rcrl
mov
lret
inc
add
push
or
push
adcl
push
test
les
lret
lea
jnp
js
add
clc
mov
in
push
imul
test
clc
js
inc
cmp
es
mov
into
in
push
cmp
aad
cmp
push
repnz
dec
pop
popf
imul
cmp
and
adc
inc
je
add
int
mov
in
lds
loopne
push
ljmp
in
pop
addb
push
cmpsb
in
negb
xor
dec
popf
cmc
pop
ljmp
leave
ret
pop
cwtl
cwtl
iret
xchg
ret
fbld
test
inc
sarl
dec
mov
sbb
xchg
addr16
cmpsb
stos
jle
or
sub
insl
push
sub
and
or
push
or
jbe
mov
js
fimull
mov
sarb
jmp
xchg
icebp
mov
inc
ss
or
arpl
push
mov
push
or
adc
adc
adc
push
xor
adc
pop
and
sbbl
clc
jns
insl
popf
sbb
sub
arpl
push
addr16
cli
sbb
jge
sarl
xchg
inc
inc
mov
in
out
ljmp
dec
sub
fcmovu
popf
push
xchg
es
outsl
and
movsl
loope
mov
jle
jle
xchg
adc
or
andl
lcall
push
inc
bound
ds
sarb
cld
sbb
or
stc
enter
jo
push
push
addr16
repnz
inc
push
test
lcall
dec
sub
loope
mov
sbbl
dec
push
add
sbb
popf
pop
inc
or
jne
push
add
rorb
insb
xchg
loope
lods
sub
stos
cmp
mov
lock
mov
icebp
jb
lcall
cs
ret
mov
ljmp
cli
scas
popf
mov
movsb
dec
imul
and
pop
xlat
dec
dec
push
ret
push
dec
jae
aaa
popf
leave
pusha
jp
xor
das
pmaxub
mov
clc
sub
rolb
addb
adc
mov
loope
scas
sub
adc
outsl
add
lock
mov
test
in
mov
bound
cltd
add
inc
sub
mov
xchg
shll
arpl
pop
pop
icebp
mov
add
sbb
or
ja
inc
shl
ss
outsb
out
pop
pop
push
add
xor
jge
push
aam
pop
shufps
fwait
mov
xchg
icebp
xlat
xchg
rorb
mov
dec
addr16
call
push
cmp
sbb
pop
ficoms
hlt
mov
lock
push
inc
movb
mov
imul
ret
push
jnp
lods
addb
scas
loop
movsl
aam
push
jecxz
jg
mov
jo
mov
push
jb
pop
jns
sub
incb
movsl
pop
mov
je
out
lds
xchg
jmp
sub
sub
stos
scas
aaa
movsb
pop
scas
push
adc
out
mov
or
pop
lcall
clc
cmc
mov
xor
cld
jo
inc
jae
push
loope
into
or
jb
mov
out
inc
addr16
sbb
iret
mov
enter
ljmp
adc
xchg
or
jle
lods
stc
in
lock
mov
mov
add
push
call
mov
cmp
insl
pop
je
stos
mov
negb
push
jp
lods
je
out
in
push
loop
inc
cwtl
lods
mov
and
ret
and
cmp
fidivl
jns
adc
orb
inc
jns
xchg
aam
rclb
adc
mov
test
js
xchg
sbb
and
jecxz
pop
fldl
sub
cmc
and
push
sbbb
xor
stos
sub
xchg
adc
mov
fcmovu
fstpl
bound
dec
lahf
ror
ja
mov
clc
xchg
sti
push
mov
dec
lcall
xchg
or
stc
push
jbe
inc
pop
push
and
or
mov
aam
sub
hlt
mov
dec
cmp
es
stos
mov
jecxz
cwtl
jno
sbb
lds
pop
inc
data16
inc
pop
push
sbbl
mov
in
xor
lcall
popf
call
iret
adc
dec
cmpsb
mov
sub
push
out
insb
xlat
mov
rcll
das
outsb
call
data16
push
scas
inc
fsubl
inc
ds
out
mov
mov
xor
mov
mov
lret
hlt
xor
mov
lea
sahf
popl
inc
mov
out
out
pop
push
in
xchg
and
push
push
clc
lods
sbb
repnz
popa
hlt
mov
pop
shll
mov
xchg
sahf
mov
enter
fucomi
xlat
push
jns
out
sub
mov
inc
dec
sub
jo
lret
xor
ljmp
dec
inc
xchg
inc
and
loop
push
cmp
data16
xor
push
jmp
xor
pop
and
fcoml
test
mov
movsb
adc
stc
lock
daa
cmp
push
xor
jno
ljmp
fnstenv
cli
xorl
pop
inc
adc
mov
mov
jge
or
push
adc
mov
or
adc
xchg
jo
sbb
sarb
mov
in
pop
ret
xor
adc
or
mov
mov
icebp
popa
out
lahf
dec
xchg
lret
sbb
mov
jmp
xchg
xchg
cld
adc
int
fistpl
icebp
outsb
and
je
push
ljmp
adc
je
dec
push
aam
sub
or
xchg
push
stos
lock
imul
cli
fwait
fs
add
not
jg
pusha
ret
pop
fbld
mov
loope
xchg
or
mov
adcl
cld
xor
mov
pop
repz
mov
mov
leave
pop
popa
xchg
jp
mov
cmp
push
fisttpl
es
push
daa
test
in
mov
xchg
ja
xor
loopne
or
repz
xor
into
jg
imul
xor
push
rol
jmp
sbb
pop
mov
dec
dec
cmpl
sub
pop
dec
xchg
pop
ja
sub
pop
adcb
imul
mov
dec
nop
imul
loopne
xchg
in
and
or
fs
pop
cli
pop
clc
add
jbe
push
cli
fnstenv
cltd
dec
ds
imul
add
mov
movsl
out
or
xchg
scas
dec
xchg
out
stos
and
xchg
cmp
add
out
and
imul
cmc
ss
outsl
js
lods
mov
imul
mov
pop
and
sub
dec
imul
push
imul
mov
call
jne
call
lea
xchg
dec
repnz
int3
test
or
mov
aam
inc
cwtl
in
mov
push
insl
xchg
jmp
lods
cmp
imul
cmpsb
xchg
cmp
movsb
jp
cmpsl
mov
jbe
mov
into
outsl
pushf
xor
xchg
inc
cltd
notl
xor
mov
addl
fcomps
imul
pop
adc
mov
pop
imul
test
lock
or
jae
and
jne
push
jno
cmpsb
fistpll
inc
push
int3
adc
xor
cwtl
sahf
test
lock
in
ret
sbb
or
js
out
addb
sub
mov
jge
jecxz
add
bound
mov
test
aam
adc
mov
fistl
add
imul
and
mov
in
cmp
cli
jp
mov
or
outsb
dec
popf
xchg
mov
cmpl
push
cmp
mov
sbb
repz
push
adc
mov
xor
push
ljmp
imul
pop
adc
jl
push
aam
fs
pop
and
mov
stc
fucomip
out
mov
add
add
adc
in
gs
movsl
popf
lods
cltd
pop
sub
sar
sbb
jbe
add
xor
and
sub
jmp
xchg
jecxz
and
sti
cmp
push
mov
xor
mov
cmpl
sbb
das
fists
stc
mov
xchg
and
pushf
insb
addr16
popf
or
fs
xchg
jne
mov
xchg
insb
and
dec
xor
mov
test
popf
test
insl
cmp
movsb
mov
repnz
popf
test
inc
cwtl
jmp
inc
fsubrs
into
push
movsb
les
jl
bnd
mov
mov
sbb
cmp
or
inc
incb
dec
sarb
mov
sbb
mov
and
push
ret
mov
popf
mov
clc
dec
mov
mov
adc
mov
test
fildll
lock
mov
cmp
pop
cs
aaa
rolb
in
movsl
test
and
inc
call
push
xchg
mov
dec
and
dec
mov
repz
cmp
mov
std
inc
cmp
add
mov
push
lock
aaa
xchg
imul
add
mov
sub
mov
sahf
data16
nop
insl
data16
iret
enter
cmp
or
mov
sbb
push
mov
orl
push
outsb
mov
dec
fcoms
mov
nop
lret
push
sub
mov
jecxz
call
jnp
or
dec
les
aas
dec
fdivl
mov
es
daa
cmp
xor
repz
lret
scas
jnp
imul
mov
test
xchg
xchg
pop
push
popa
inc
nop
cmp
je
mov
dec
push
mov
fcomps
dec
xchg
in
data16
mov
fwait
push
or
dec
or
mov
scas
sbb
xchg
sub
mov
lods
sbb
das
hlt
mov
mov
and
mov
rorl
adcb
mov
mov
sbb
pop
pop
and
test
mov
sbb
int
mov
pop
mov
in
scas
scas
daa
dec
lea
and
or
jecxz
or
mov
cwtl
repnz
int
and
dec
mov
aaa
loope
ficompl
imul
aaa
sbb
mov
push
or
or
jl
sbb
or
stos
ljmp
jae
scas
push
mov
cltd
push
cli
lret
or
xchg
sbbb
es
out
je
dec
sub
adc
xlat
mov
sub
xchg
out
sbb
adc
xor
mov
test
in
mov
add
or
stos
nop
mov
push
mov
cmp
adc
fcoms
and
hlt
jns
push
push
cwtl
adc
sbb
pop
insl
cmp
mov
sub
mov
mov
shlb
cli
cld
outsl
sbb
xrelease
lds
dec
and
cmpsl
out
jle
fisttps
call
sbb
cmp
sbbl
cmp
enter
sbb
xchg
sbb
cwtl
les
push
ljmp
jnp
sub
out
dec
testb
test
fstps
jne
pop
mov
lods
cmp
mov
out
popa
movsb
mov
inc
lods
cltd
out
inc
outsb
cmp
mov
fldenv
fldl
pop
fdivl
jecxz
push
test
sbb
xchg
or
pop
push
lea
cmp
test
pop
shrl
fs
sbb
and
push
test
ljmp
jmp
dec
cwtl
cmp
mov
dec
push
stc
je
test
mov
hlt
outsb
idivb
mov
dec
cs
in
xlat
sbb
orps
loop
pop
rcrb
incb
adc
fisubs
push
lret
in
test
dec
adc
or
sbb
fwait
mov
push
dec
inc
and
clc
vcvttsd2usi
rcr
xor
insb
nop
cmp
gs
inc
mov
enter
inc
xchg
sti
inc
jbe
fcompl
pop
loopne
rcrb
xor
stos
or
mov
in
mov
ss
scas
xor
out
aam
addr16
adc
rcrl
xchg
ret
push
lds
adc
pop
lds
imulb
addl
daa
loope
jecxz
cmc
mov
dec
jbe
sub
mov
add
pop
popa
jne
je
dec
push
pop
push
adc
pop
mov
jp
out
pop
fs
xor
movsb
dec
bound
or
push
adc
mov
lds
vcmpss
out
jmp
push
outsb
les
xor
movsl
fs
cli
sti
inc
movsl
mov
cs
shll
lds
lock
xor
add
cmp
dec
rcl
or
loopne
xor
out
addr16
pop
mov
sub
in
nop
fidivs
mov
daa
and
xchg
jmp
lret
addb
cmp
pusha
and
xchg
lahf
nop
out
ss
mov
outsl
sbbb
push
jb
cld
cmpsb
dec
daa
dec
jmp
sarb
pop
loope
jle
mov
xchg
test
pslld
jae
xchg
mov
enter
push
lea
fxch
push
dec
orb
xchg
dec
pop
mov
fs
mov
pop
stos
cli
push
aad
mov
testb
fwait
inc
gs
push
popa
sbb
sbb
dec
jle
test
and
mov
ss
sbb
data16
aam
ds
and
add
sbb
mov
and
lret
sub
in
testb
scas
and
jbe
adcb
int3
xchg
mov
out
cmp
repnz
adc
loopne
sbb
push
jg
jbe
xchg
lret
adc
movsb
push
cmpb
fdivs
daa
cmp
ja
subl
pop
das
push
scas
sar
repnz
push
pop
dec
mov
xchg
arpl
insb
in
les
dec
movsb
pushf
push
mov
inc
ja
into
inc
jns
and
ss
cli
inc
sbb
pop
or
ljmp
pop
xor
inc
lahf
inc
mov
sahf
xchg
add
xor
sbb
loopne
cwtl
or
inc
mov
rclb
outsb
fdivs
stc
lea
ds
lret
fstpl
jp
xchg
aad
mov
loope
jecxz
in
or
lds
sti
dec
mov
and
imul
clc
dec
push
adc
mov
decb
adc
xor
lret
lahf
dec
jecxz
mov
movsl
cmp
mov
push
pop
into
fsubrs
push
sahf
xor
jb
fwait
cwtl
js
data16
aad
mov
leave
loop
push
dec
mov
jl
sbb
lret
in
dec
sub
pusha
aas
shlb
push
ja
cmp
mov
rorb
mov
xor
inc
jp
jl
inc
inc
cmpsb
xor
xor
js
add
into
aad
and
dec
rorl
test
ss
push
into
xchg
dec
jnp
arpl
pushf
ss
push
ffreep
nop
sbb
push
pop
scas
and
xchg
movsl
sub
in
scas
sub
pop
lds
loope
push
xchg
divb
mov
xchg
push
aaa
fwait
xor
lods
pop
daa
dec
cld
mov
mov
xchg
dec
jecxz
xlat
adc
in
jmp
insl
insb
fildl
clc
adc
add
lds
adc
rcrl
sbb
mov
xor
ficoms
out
and
imul
pop
cmp
xor
dec
ret
es
dec
and
mov
lds
ret
cmc
movsl
out
lret
mov
adc
movsl
std
pusha
arpl
imul
dec
dec
ret
push
repz
int3
adc
jle
lea
mov
shrb
xor
aam
jmp
push
lds
xor
jecxz
adc
stos
mov
or
pop
scas
in
test
divl
add
cli
int
repz
mov
imul
in
cmp
insl
imul
sub
pop
into
mov
xchg
fwait
iret
dec
divl
dec
sahf
gs
mov
cmp
orl
lcall
outsl
ljmp
inc
loope
int3
rorb
imul
arpl
push
push
cmp
xchg
pop
lea
push
stos
cli
mov
inc
ret
jg
pusha
mov
sub
push
and
repnz
insl
jae
mov
int3
dec
ret
insl
xchg
mov
dec
int
xchg
clc
mov
push
sbb
push
outsb
notb
or
xlat
bound
or
aas
fiaddl
lods
fnstcw
daa
lret
push
ljmp
xchg
dec
inc
or
dec
xchg
pop
cltd
sbbl
std
pop
lock
and
xchg
iret
push
and
sti
cwtl
lret
or
rcrb
mov
shl
dec
mov
xor
leave
outsb
mov
mov
icebp
mov
xchg
add
mov
mov
mov
add
mov
inc
in
inc
in
sub
push
dec
jl
adc
lcall
in
loopne
ss
repz
out
mov
and
inc
pusha
shll
cli
scas
fincstp
jb
pop
xchg
xchg
aad
or
pusha
adc
in
pop
add
cmp
xchg
mov
shrl
dec
pop
jmp
push
int3
or
lret
jmp
cmp
dec
xchg
and
sahf
std
mov
push
xchg
sbb
push
mov
sub
mov
cmp
jmp
adc
fnstcw
jno
xchg
test
addb
cltd
xchg
sub
test
mov
push
test
arpl
iret
inc
inc
mov
add
scas
xor
stc
lds
sti
pop
pop
pop
xchg
test
or
xchg
cmp
negl
inc
rorl
push
dec
jbe
push
xchg
out
scas
shrl
push
pop
test
stos
push
pop
push
fistpl
out
and
movb
imul
inc
add
mov
xchg
out
jnp
je
shrb
pop
jle
push
jns
mov
out
aas
fldt
push
mov
ret
lods
and
cmpsb
das
pop
push
stos
repnz
sub
inc
clc
imul
push
mov
xor
jp
ret
cld
inc
mov
push
sub
jno
sahf
add
mov
cs
or
cpuid
xlat
xchg
xlat
xor
xchg
aam
inc
int3
int
in
mov
ja
mov
adc
mov
fwait
int
xchg
jmp
sbb
iret
push
lahf
leave
repz
and
mov
xlat
lea
mov
insl
ljmp
addb
dec
imul
dec
xchg
pop
inc
xchg
fdivs
scas
gs
andb
xchg
scas
pop
mov
xchg
or
ret
cmpsb
outsb
lods
loopne
fwait
push
adc
dec
cmp
popa
or
pop
dec
add
sbb
mov
xchg
popf
xor
inc
pop
mov
imul
daa
push
inc
out
int
cmpsl
pushf
jo
leave
push
push
in
fcoms
mov
pop
in
xchg
in
or
pop
cld
pop
pop
push
pop
jecxz
push
jae
xor
sub
je
xchg
or
rorl
das
enter
call
addr16
mul
test
shlb
inc
mov
pop
adc
xchg
cmp
sbb
jnp
ljmp
scas
stos
mov
push
loopne
in
dec
mov
xchg
push
cli
les
push
inc
pop
xchg
shll
add
mov
or
es
sahf
sarb
lds
mov
jno
push
mov
in
push
pop
pop
and
in
jmp
mov
push
shlb
mov
movsb
cmpxchg
shrl
daa
adc
scas
dec
mov
pop
lds
in
mov
pop
aam
sbbl
push
add
add
mov
adc
stos
andb
jg
sbb
and
mov
dec
or
int
mov
pop
pop
loope
mov
arpl
adcb
ss
inc
or
sbb
insl
and
mov
ljmp
jne
dec
jmp
out
adc
push
fnstsw
popa
mov
shl
mov
subb
sbb
insb
lods
fs
movsl
mov
adc
and
mov
repnz
sbb
int3
or
mov
mov
or
das
pop
pop
nop
addr16
pop
sbbl
and
out
inc
mov
pop
scas
jae
cmc
out
int3
cmp
push
pop
popa
push
nop
mov
repnz
orl
mov
gs
mov
movsb
lret
pop
ficoms
pop
xchg
pushf
std
repnz
mov
inc
and
bound
and
or
pop
jns
pop
repz
jno
ret
movsb
movb
push
add
or
imul
push
ret
loop
cmpsb
mov
pop
in
test
mov
mov
daa
incb
and
push
jns
je
or
jg
lcall
push
pop
lock
jne
pusha
outsl
rolb
push
adcl
cmp
sbb
jle
stos
mov
roll
aad
pop
out
cmc
out
popa
in
cmp
sub
mov
mov
stc
mov
hlt
xor
push
xor
ror
lcall
in
arpl
andl
mov
pop
sarb
nop
test
push
test
mov
aam
lret
cmp
push
iret
shlb
dec
mov
jno
push
mov
in
lds
or
mov
jmp
pop
xchg
ljmp
cwtl
and
and
cld
adc
dec
lock
fcomps
jg
out
push
addr16
dec
addl
jmp
lea
jg
scas
out
inc
xchg
and
mov
fcmovb
ja
ret
xchg
mov
push
ds
test
cltd
push
mov
in
data16
sub
fmull
xor
xchg
pop
lret
push
imul
push
or
filds
aaa
add
call
dec
mov
jg
cmp
enter
xor
add
sbb
stos
jbe
xchg
int3
pop
movsb
or
repz
stos
jg
sbb
pop
sbb
mov
pop
cmp
pop
andb
and
push
aad
pop
xor
lods
inc
ss
and
xchg
jmp
scas
push
repnz
int
lahf
cwtl
mov
pop
cmpl
mov
ss
xchg
scas
jo
notb
cmp
into
cwtl
inc
loopne
sbb
xlat
std
mov
jno
gs
loope
mov
inc
loope
and
cmp
push
mov
pushf
xchg
out
scas
nop
std
jne
xlat
out
pop
jnp
inc
xchg
push
push
cwtl
mov
xor
popa
sbb
nop
pop
js
or
lods
fwait
out
pop
lret
movsl
dec
dec
out
xchg
ja
and
lcall
mov
jb
sarl
pop
adc
cmp
push
mov
sbb
sbb
mov
test
andb
sbb
add
cli
iretw
cmp
imul
test
pop
imul
xor
sub
jne
aam
cmpsl
push
cmp
sbb
mov
mov
fs
dec
mov
and
jo
adc
mov
ret
jae
lods
or
lcall
scas
lds
incb
rorl
cmpsl
repz
push
sbb
ds
mov
hlt
sub
add
jno
and
js,pt
dec
call
outsl
les
inc
cli
arpl
push
flds
pushf
call
sbb
jmp
and
andl
inc
fists
sub
pop
sub
imul
fsubl
xchg
lods
xchg
dec
mov
push
xchg
jb
out
xor
xchg
cmp
inc
sbb
xchg
add
adc
cmpsb
std
sti
rolb
push
pushf
lods
and
int3
xchg
push
popa
addr16
movsb
movsb
stc
fisttpll
inc
insl
jnp
push
push
mov
stos
push
negl
pop
scas
loopne
cmpsb
and
jmp
mov
mov
aas
clc
test
xor
mov
scas
xlat
clc
cmp
cmpsb
gs
int3
ja
pop
xchg
and
sbb
rcr
out
and
mov
lds
fstps
adc
mov
aam
aad
cmp
fcomip
mov
jmp
out
or
mov
mov
sub
insb
push
jns
std
repz
xor
cmp
test
mov
insb
negb
es
cmp
mov
sbb
jmp
daa
mov
xor
insb
push
nop
and
and
orl
fisttps
xchg
icebp
cli
shrb
stos
std
popa
pop
fscale
pop
adc
enter
sub
icebp
xor
jmp
pop
xor
inc
repnz
push
cmp
shrl
lret
adc
fwait
lea
jne
adc
pusha
or
push
test
ret
je
data16
jmp
dec
repnz
adc
pop
test
clc
sub
cmp
test
push
add
and
test
xchg
push
test
ja
sahf
ja
lea
mov
test
into
mov
scas
xchg
ja
pushf
adc
lahf
pop
das
sub
add
mov
add
fnstenv
into
orl
push
push
fs
pop
stc
fistps
mov
sbb
xchg
mov
stos
cmpsb
leave
leave
or
xchg
dec
sbb
arpl
xlat
imul
sbb
mov
mov
das
cli
popl
sub
cmp
mov
sahf
mov
or
inc
sbb
cmc
jl
inc
ja
lock
inc
jnp
pop
add
sub
dec
add
sbb
out
and
mov
sahf
iret
mov
sti
loop
inc
xor
int
and
cwtl
inc
dec
popf
fildl
rcrl
mov
inc
dec
andl
sub
test
and
inc
pop
test
and
lea
pop
insl
push
inc
lea
or
and
xchg
iret
xchg
fcmovne
js
sub
sahf
sub
xchg
push
ljmp
mov
imul
cmp
cwtl
gs
cmp
jp
push
push
outsl
xor
mov
inc
or
int
mov
dec
cs
xchg
leave
aas
adc
sub
inc
sbb
pop
jecxz
addr16
aad
lds
test
lahf
mov
mov
mov
repz
or
mov
dec
mov
subl
xchg
pop
fs
push
js
fs
push
pop
cmpsb
add
mov
std
fists
xchg
jo
mov
inc
push
mov
add
fs
lods
pushf
movsl
xchg
adc
xor
xchg
shll
test
outsb
cmp
repz
mov
jp
pop
mov
addr16
stos
mov
call
test
jg
push
enter
std
push
cmp
xchg
fsubrl
in
pushf
dec
add
mov
push
cmp
ret
loopne
fwait
jg
xor
aaa
imul
aas
and
cmp
pop
sub
push
das
lock
stc
mov
push
push
aas
inc
sarl
push
mov
int3
cmp
rclb
inc
std
fdivs
fcomps
sbb
adc
adcl
mov
ja
add
fidivl
insb
out
xchg
ljmp
dec
stos
ds
mov
enter
push
mov
inc
mov
das
int
lahf
push
dec
test
jmp
inc
or
add
mov
dec
shlb
push
jbe
es
mov
fstl
bound
mov
jns
stc
in
or
and
das
icebp
add
stc
movsb
xchg
pushf
mov
jg
push
aam
jnp
repnz
xor
in
add
ret
inc
cltd
mov
call
aas
pop
push
push
shrb
in
in
sub
push
lret
aad
pop
out
nop
ret
jne
dec
push
mov
arpl
in
and
and
adc
or
arpl
add
pop
sbb
pusha
and
daa
pushf
js
mov
xchg
cmpsl
xor
rclb
sahf
sahf
outsb
add
aas
out
mov
out
mov
dec
daa
outsb
pop
mov
ss
push
clc
jmp
fisubs
mov
pushf
mov
mov
repz
shll
stos
bound
lea
loopne
test
jb
cmc
aaa
not
inc
jecxz
add
xchg
jl
imul
sbb
xchg
add
enter
dec
push
in
lds
setp
test
add
repz
pop
or
push
mov
push
pop
push
fwait
mov
dec
xor
push
repnz
sub
fsubrl
ljmp
adc
test
xor
cmp
mov
cmp
lea
push
xchg
adc
cwtl
pop
imul
adc
push
mov
mov
jne
icebp
mov
adc
jecxz
inc
xchg
add
lds
xor
push
insb
pop
pop
scas
adcl
sbb
push
sub
jp
or
inc
mov
mov
bound
pop
aam
pop
xchg
or
jecxz
mov
jne
xchg
cmc
call
test
sbb
push
push
push
push
imul
pop
ljmp
mov
mov
jl
jbe
loopne
nop
movsl
mov
lock
cwtl
ds
ret
or
pop
popf
stc
sub
sahf
pushf
jns
ret
mov
sub
jmp
and
push
loopne
mov
lret
jnp
andb
push
fnstsw
mov
test
sub
fcmovne
xchg
inc
mov
or
cmpb
or
or
cmp
scas
push
loopne
outsl
cwtl
push
or
sub
cltd
int3
mov
imul
data16
movsb
and
cmp
xorb
std
mov
outsl
test
aam
rcrl
xchg
push
cmpsb
cmp
and
ss
je
xor
ret
stos
rol
ljmp
pop
stc
mov
pop
popf
add
ja
or
cltd
iret
jg
mov
fisubrl
mov
popf
push
add
add
pop
das
push
popf
adcb
icebp
cmp
sub
jp
sbb
fnsave
in
jge
dec
inc
movsl
iret
pop
inc
paddusw
dec
push
repnz
and
pop
pop
nop
adc
out
sbb
xor
sub
mulb
or
jg,pn
dec
test
sbb
inc
jo
push
or
jge
sub
in
sbb
pusha
or
cwtl
push
fucom
sub
shlb
notl
push
or
daa
cltd
xor
push
inc
ret
push
insl
sub
inc
andnps
lea
xchg
xor
iret
scas
xchg
lret
or
pop
shlb
push
les
negb
xchg
cs
scas
push
mov
out
mov
mov
dec
dec
add
adc
clc
mov
pop
sub
adc
and
mov
aam
test
es
js
js
fsubrl
sar
call
ljmp
outsl
jecxz
into
jle
lahf
fsts
cli
jnp
mov
xchg
cltd
pop
mov
pop
scas
in
psubw
cmp
out
imul
jo
jle
cld
rolb
sbb
lds
inc
add
imul
jne
push
and
repz
pop
mov
cmpsb
popl
out
adc
and
pop
mov
jno
nop
cli
inc
lds
outsl
aad
xchg
out
pop
ljmp
inc
inc
push
out
mov
cmp
mov
pop
jp
jg
jns
push
subb
or
mull
mov
adc
daa
insb
mov
test
inc
inc
sbb
mov
repnz
mov
jno
iret
fildll
out
add
test
or
push
rolb
std
jns
or
pop
xchg
aaa
xchg
clc
ja
mov
shl
pop
cmpsl
mov
mov
push
js
test
mov
mov
aaa
bound
aam
sbb
fisubrl
das
ss
push
mov
fpatan
ss
xchg
jb
popl
dec
stc
fisttpl
jne
or
iret
sbb
test
xchg
cltd
imull
shrb
xchg
les
inc
test
ljmp
and
pop
push
inc
add
sbb
cmp
mov
push
mov
nop
ljmp
adcb
cmp
mov
mov
xor
jecxz
mov
mov
add
out
sub
call
in
in
sbb
add
xchg
xchg
xchg
adc
fwait
push
test
jae
xchg
call
pushf
mov
xor
roll
js
pop
adc
ljmp
sub
mov
inc
jne
lods
mov
xor
inc
shll
xchg
push
mov
lcall
adc
clc
pop
add
scas
or
lret
popa
or
sar
repz
mov
sub
movsb
mov
stos
mov
lret
cmpsl
bound
pop
mov
les
in
int3
imul
mov
aas
cmc
aaa
dec
add
push
pop
test
jmp
loop
or
adc
int3
mov
sbb
fs
imul
adc
popa
ljmp
jle
pop
popa
sahf
in
sub
sbb
push
xchg
inc
scas
enter
mov
scas
hlt
push
add
cmp
sub
loop
inc
ds
ret
dec
fistpl
mov
dec
jge
test
xor
jns
push
xlat
jmp
shl
or
dec
push
inc
cwtl
stos
jns
mov
addr16
cltd
adc
jnp,pn
loop
sbb
inc
dec
xchg
mov
jg
bound
sbb
jb
lahf
cltd
aaa
out
push
jb
test
shr
fldt
popa
adc
and
leave
icebp
lcall
gs
shlb
fstl
movsb
pop
andl
popa
loop
xor
and
sbb
adc
inc
fistl
icebp
dec
fidivl
cmpsl
jge
iret
xor
cmc
dec
dec
jno
int3
stc
push
or
pop
mov
pusha
sbb
push
xchg
jmp
push
pusha
mov
cmp
pop
stos
lds
outsl
rclb
mov
lea
ret
rclb
push
xor
std
and
ljmp
cmp
sbb
insb
sbbl
push
push
hlt
xor
pop
test
add
int
mov
sub
or
mov
scas
mov
mov
scas
je
mov
in
sub
push
dec
mov
fs
pop
aas
cmp
out
inc
pop
cmpsl
jmp
push
inc
ljmp
sub
imul
push
push
or
adc
fimull
push
cmpsl
jecxz
push
push
jns
push
ljmp
rcll
push
jnp
hlt
movsl
ficoml
movsl
jecxz
repz
into
sahf
sub
test
inc
shr
push
nop
insl
dec
out
daa
jne
xchg
mov
int3
fsubr
sbb
int
ret
clc
mov
dec
shrl
xor
leave
mov
xchg
pusha
test
add
into
dec
cmp
ja
jecxz
cmp
mov
xor
jae
inc
mov
loopne
sarl
pop
fidivrl
and
cmc
stc
sbb
sub
dec
ret
fcmovnb
cmp
jp
dec
and
loop
push
out
mov
pop
fwait
sbb
mov
adc
mov
fidivs
repnz
movsb
mov
cmp
mov
lods
fdiv
mov
lea
dec
test
je
fbstp
xlat
push
insl
dec
lcall
jne
mov
pushf
mov
or
adc
or
rclb
mov
inc
movsb
adc
cmp
insl
aas
les
inc
popa
adc
fwait
mov
int3
shl
lahf
sti
stos
add
and
sbb
iret
or
sbb
mov
sbb
pusha
aas
ror
lahf
das
xor
cli
jl
dec
mov
or
sub
out
cmp
and
aad
mov
pop
xchg
push
cmpb
outsl
and
in
sahf
jb
rclb
inc
cltd
dec
addr16
mov
ret
dec
pop
cli
dec
xor
push
pop
or
loope
scas
mov
cmpsb
ret
clc
sub
add
and
or
mov
push
int
lds
dec
mov
and
orb
jnp
leave
jle
cmp
mov
insb
rorl
push
xor
sbb
fldl
sub
xchg
ficomps
arpl
outsb
jl
ds
push
sbb
mov
daa
hlt
and
aad
mov
or
jge
call
mov
pusha
xor
xchg
add
mov
adc
inc
mov
jb
sub
jne
or
out
fbstp
rdtsc
mov
bound
sub
sub
cltd
sub
idivl
mov
or
aad
aaa
or
pop
outsl
dec
mov
or
xchg
std
push
jnp
pop
xchg
push
inc
ljmp
lods
nop
or
ljmp
hlt
pop
inc
sbb
mov
mov
bound
cld
imul
sbb
mov
enter
and
mull
sarb
jnp
push
and
test
loop
cmp
jp
push
adc
adc
outsl
xchg
inc
scas
fdivrl
mov
adc
das
sti
adc
inc
cmpsb
dec
clc
cmp
sub
inc
mov
mov
jecxz
cmp
fisubrs
inc
inc
mov
daa
or
faddl
mov
inc
iret
sub
out
test
lahf
mov
inc
cmp
out
dec
rolb
pop
ja
repz
sbb
mov
cwtl
call
push
push
or
out
xchg
lds
mov
fisubs
mov
paddb
pushf
sar
mov
and
roll
cltd
int
aad
lcall
jnp
push
inc
and
sbb
ret
mov
mov
shrb
out
pushf
divl
xchg
mov
lcall
ret
call
dec
mov
js
outsb
mov
adc
pop
dec
mov
sahf
pop
mov
pusha
mov
fwait
mov
mov
lret
dec
and
add
in
add
repz
mov
sbb
cmp
ljmp
icebp
push
jno
jno
pop
sub
popf
inc
vpmacsswd
and
clc
cmp
repnz
aad
leave
xor
sub
dec
push
or
sbb
mov
cld
adc
pop
pop
jo
lcall
sbb
adc
jno
sbb
in
rcr
sbbb
loopne
stos
popf
mov
mov
movsl
mov
mov
daa
adc
mov
lock
fcmovbe
xchg
mov
and
aad
mov
pop
jge
sub
scas
and
pop
repz
pop
inc
enter
push
xorl
iret
cmc
movl
es
jne
cmc
mov
scas
sti
adc
ret
enter
vminsd
cmc
inc
daa
cmp
rol
fnstcw
cmp
inc
mov
sbb
cmp
xchg
movsl
sbb
mov
sbb
cmc
movd
mov
xchg
ja
add
lea
jle
jne
lahf
sub
lahf
ljmp
adc
jae
xchg
sbb
shll
mov
push
jmp
pop
cmpsb
pop
aam
and
clc
aad
adc
fldt
adc
pop
adc
ljmp
aam
dec
sbb
ja
inc
lds
lret
aas
ss
sbb
std
loop
scas
xchg
pop
and
shlb
addr16
fdivrs
sti
in
aaa
test
mov
mov
add
pop
aas
inc
or
xchg
popa
sahf
in
lods
and
loop
xlat
rcrl
aam
lcall
sub
jb
enter
mov
xor
dec
adc
pop
pop
mov
popa
mov
pop
mov
out
and
jae
pusha
and
or
mov
mov
add
lods
cvtpi2ps
iret
in
lcall
es
mov
arpl
mov
movsb
or
fldcw
arpl
and
pop
aas
addl
dec
scas
outsb
out
sbb
loopne
inc
or
inc
mov
push
push
lahf
sbb
and
add
cld
sub
ljmp
lea
cs
int3
mov
mov
aaa
cmp
lods
mov
sbb
cmp
jmp
jo
outsl
pop
lds
das
data16
xchg
add
push
dec
ret
lds
pop
outsl
dec
sahf
dec
addb
imul
mov
setne
push
and
outsl
fmull
aaa
lcall
xchg
mov
pop
nop
in
divl
jae
lea
orb
ds
cmc
cmpsb
and
dec
jle
dec
call
xor
pop
cmp
mov
data16
test
add
in
mov
out
lds
mov
xor
les
jmp
test
push
faddl
sti
mov
ficoml
mov
jnp
adc
or
add
in
xor
push
sub
pop
dec
cmp
int3
fnstenv
iret
mov
xchg
loop
xchg
out
push
test
lcall
in
pop
xchg
xchg
pop
push
outsl
lods
jp
lods
shl
mov
inc
sub
daa
push
mov
and
fists
call
imul
mov
loop
cmp
pusha
movsl
add
adc
js
test
aaa
pop
and
sahf
sbb
enter
cmp
xlat
enter
pop
std
jnp
mov
cmp
xor
popf
pusha
cmpsl
repz
insl
jo
and
cltd
pop
iret
dec
mov
add
add
int3
popf
ljmp
xchg
test
push
sub
xchg
pop
es
lods
lods
jno
xor
loop
rcrl
sub
mov
xor
lret
jecxz
xchg
dec
xor
mov
jae
hlt
sub
iret
cmc
repz
test
or
outsb
roll
shll
add
pop
cmp
add
mov
cmp
adc
sti
decl
mov
stc
mov
dec
cwtl
xor
mov
xchg
jae
movsb
dec
xchg
movsl
into
sbb
inc
mov
dec
push
pop
cmpb
insl
movsb
dec
cld
jns
mov
push
xor
nop
lret
arpl
rclb
cmp
sub
sub
leave
fcmovnb
lea
inc
ds
jnp
inc
jp
sub
cli
mov
into
xor
dec
outsb
mov
outsl
inc
mov
ja
xchg
div
pop
testb
mov
jno
dec
adc
xchg
xchg
pop
fucomi
or
mov
addl
pop
repz
and
jg
ffreep
in
inc
lock
push
mov
ret
xchg
push
or
scas
aaa
adc
mov
or
bndldx
das
loopne
pop
leave
fildl
push
and
ror
out
das
fisttpl
sbb
icebp
cwtl
std
and
fucomi
and
jo
bound
jne
dec
jmp
shlb
mov
dec
jne
xchg
test
xchg
arpl
xchg
mov
outsl
popa
addr16
pusha
cmc
xchg
lcall
in
xor
lods
xlat
mov
in
xchg
cmp
mov
xchg
mov
je
cmp
mov
jmp
jle
fnsave
inc
pop
leave
jno
test
movsb
addb
cltd
shlb
jne
adc
shrd
test
adc
in
pop
fimull
ljmp
scas
pop
inc
pop
or
sub
movsl
add
stos
gs
lds
mov
int
cmpsb
mov
scas
cmp
shr
lret
jnp
inc
add
and
daa
lcall
out
popa
cwtl
cs
sbb
jo
sarl
mov
inc
arpl
sar
dec
lahf
xchg
xchg
and
js
mov
xlat
and
lahf
jg
xchg
jb
push
xchg
dec
jbe
mov
add
shrl
add
mov
mov
dec
or
adc
enter
lret
aam
stc
jns
cmp
imul
adc
pushf
push
fs
int3
jb
stos
jmp
jge
or
mov
jnp
jecxz
scas
mov
stos
hlt
jnp
out
inc
loope
xchg
adc
jle
jno
jg
pusha
je
sub
int
pop
cs
jo
lret
inc
pop
popf
test
lret
lcall
adc
mov
repz
in
rorl
add
dec
loopne
hlt
int3
shl
sbb
push
or
push
jo
or
mov
or
loope
jle
ret
mov
mov
xchg
mov
imull
rolb
add
cwtl
stos
adc
or
rclb
xchg
cs
xor
xor
and
sub
and
ljmp
mov
inc
scas
stc
or
jp
jo
push
pop
fs
daa
loop
dec
stos
scas
or
jb
mov
cwtl
call
jne
stos
in
call
xlat
xchg
out
inc
iret
jl
insb
sahf
dec
jmp
shll
cli
aaa
pop
arpl
pusha
loopne
cwtl
jae
cmp
arpl
ljmp
sub
add
mov
fidivrs
and
xchg
mov
xchg
xor
xor
inc
inc
mov
aam
sub
jle
mov
dec
lcall
dec
sub
int3
mov
outsl
in
and
shrb
std
adc
out
loope
mov
mov
jge
jne
dec
popf
xor
call
ret
mov
mov
in
sbb
jb
ja
jecxz
dec
pop
dec
call
pop
pop
test
add
cmpsb
push
popa
cmp
mov
add
aam
out
hlt
into
push
cmpsb
sahf
call
inc
sbb
cwtl
sub
mov
gs
leave
xchg
in
cmp
pop
and
inc
lret
fidivrs
push
adc
jg
dec
movsb
aas
popf
neg
cld
cmpsl
movsb
movsl
xlat
sub
cmp
and
mov
js
lret
pop
inc
pusha
loope
add
adc
cltd
or
dec
repz
and
dec
lcall
arpl
pop
and
jmp
loop
pop
lret
lods
xor
inc
mov
xor
add
xlat
mov
std
xchg
iret
push
xchg
cli
dec
call
jae
jae
fnsave
sub
fs
cmp
jbe
scas
cmp
and
push
pop
js
jne
aas
imul
jg
mov
push
lcall
shl
movsb
inc
sub
lods
cli
xchg
in
add
or
js
imul
mov
scas
lods
jo
inc
cld
xor
mov
loop
inc
outsb
xchg
jno
orl
sbb
hlt
fnstenv
and
xor
inc
testl
cltd
jae
mov
push
ds
mov
roll
pop
int
lods
or
test
pop
mov
pop
test
fsubl
dec
aaa
fwait
pop
subb
mov
jmp
cltd
cwtl
loope
lret
in
repz
stc
jae
imul
xchg
mov
xchg
and
dec
mov
mov
xor
xor
outsb
stc
ds
pusha
fscale
ja
out
cmpsl
imul
out
movsb
cmp
test
in
and
dec
cmp
mov
mov
dec
dec
js
cmp
rcrl
hlt
adc
push
outsb
pop
or
sub
loope
mov
adcl
push
sbb
dec
dec
inc
dec
push
lods
dec
mov
test
cmp
or
imull
mov
scas
mov
push
shr
rcrb
fs
addl
fiadds
sbb
add
dec
icebp
jmp
xchg
push
cmpsb
test
xchg
aaa
les
int
pop
std
int3
xor
mov
lods
out
inc
test
cmpsb
push
lock
hlt
es
shrb
push
lea
fsubs
sahf
xchg
movsb
and
adc
or
mov
pop
pop
nop
arpl
xchg
push
dec
mov
sbb
hlt
jle
loopne
sub
fistpll
lock
mov
sbb
mov
pop
mov
jge
pop
and
test
stc
ljmp
mov
bound
pushl
aaa
orl
jp
push
int3
mov
insb
push
ror
mov
das
cmp
loope
sbb
sbb
test
movsl
aad
mov
leave
mov
or
adc
fldcw
fcomps
cs
or
fs
or
xchg
cld
adc
pusha
xchg
int
jbe
aam
shll
int3
xor
iret
fadds
iret
mov
push
xor
xor
cmp
pop
inc
xor
in
out
aam
or
push
aam
aam
sbbb
push
mov
and
inc
or
push
stos
add
shlb
mov
sub
pop
ds
pop
test
stos
jnp,pt
xchg
cmpsl
ljmp
sbb
jns
push
sbb
insl
rcll
lret
out
jmp
add
add
in
mov
das
lock
pop
push
lcall
and
xor
imul
push
mov
add
add
pop
je
outsb
pop
ficoml
inc
mov
inc
lcall
fbstp
scas
xchg
mov
or
cmp
into
mov
push
fwait
inc
sahf
mov
or
pop
enter
sub
mov
cltd
insl
jge
mov
sbb
adc
cmp
inc
lret
lea
push
out
dec
push
je
ja
mov
lret
push
fs
push
push
ret
add
loopne
inc
popf
test
into
inc
decl
das
ret
mov
pop
test
imul
aas
jb
or
mov
cld
xchg
xor
add
xor
les
in
aaa
enter
stc
dec
inc
aas
in
pop
popa
and
xchg
int
mov
mov
mov
cmpsb
icebp
sar
shll
or
je
test
dec
icebp
adc
jne
pusha
bnd
aaa
insl
test
stos
aas
fdivrs
sub
lret
mov
and
subb
jae
push
sub
xchg
stos
cmp
xchg
adcb
es
push
ficomps
int3
pop
insb
jbe
out
mov
jne
and
sti
sub
inc
movsb
rolb
js
mov
leave
sub
mov
push
mov
push
jmp
cli
loopne
inc
adc
fldenv
add
pop
das
jae
add
add
xchg
outsl
out
xchg
xlat
fwait
clc
cltd
push
cmp
cmp
adc
dec
outsl
fxch
rcrb
xchg
ret
cwtl
aas
mov
addr16
jp
sub
push
daa
pop
pop
addr16
jnp
popf
xchg
std
repnz
jne
sti
add
mov
mov
xor
shll
subl
sti
push
aad
lods
movsb
xchg
cmp
es
push
pop
inc
jb
cmp
mov
sarb
ret
inc
mov
out
push
out
fdivrs
fs
mov
sub
jl
mov
dec
xchg
and
outsl
test
cmpsb
es
push
shll
nop
cmp
inc
in
pop
dec
adc
sbb
imul
pushf
int
fdivl
cwtl
dec
loopne
insl
dec
out
sarb
cmpsl
into
es
repz
jno
lret
sub
pop
aas
push
lret
js
and
sbb
cmp
xchg
jb
inc
es
push
or
and
sti
mov
dec
add
cs
adc
fsubr
subl
call
inc
xchg
jnp
insl
inc
and
movsl
lret
mov
mov
dec
clc
cmc
pushf
stc
stc
loopne
les
jnp
outsb
adc
sbb
cmp
neg
ds
in
js
push
inc
mov
push
xchg
hlt
cmp
test
mov
repnz
stos
fistpl
movsb
loopne
pop
xchg
xor
pop
jbe
pop
lds
sbbb
rolb
and
hlt
push
inc
call
inc
mov
mulb
xor
outsb
out
mov
scas
pop
int
sbb
xchg
lods
rcll
js
std
mov
rclb
adc
push
add
mov
outsb
push
sbb
push
xchg
movsl
testl
fwait
data16
jle
adc
dec
mov
in
lahf
pop
lret
sbb
push
dec
fmull
inc
xchg
pop
icebp
ficoml
push
mov
out
int3
movsl
pop
rolb
setne
ffreep
xchg
push
mov
pop
xor
inc
mov
or
dec
mov
xchg
int
jp
out
addr16
jbe
jle
jne
rcll
push
mov
adc
ds
jo
fsubr
push
xor
mov
push
fs
js
xor
mov
jb
test
dec
out
jle
nop
cmpsl
mov
and
pop
in
mov
cmpsb
xor
repz
sti
out
dec
outsl
mov
and
add
push
inc
stc
bound
push
loop
and
push
xchg
stc
sbb
pushf
out
mov
aaa
xchg
in
adc
adc
dec
xor
jb
pop
icebp
xor
loopne
dec
cmp
out
ret
lahf
mov
fsubrp
mov
aam
inc
sti
xchg
popf
or
stc
push
mov
push
clc
adc
arpl
adc
cmp
inc
add
sbb
push
outsl
sbb
xchg
movsb
int
ror
push
loop
dec
xchg
pop
clc
stc
in
scas
mov
lock
sub
push
mov
sbb
lds
loope
jmp
stc
mov
xchg
push
mov
or
adc
lea
or
mov
mov
imul
daa
xchg
movsb
jnp
fs
cwtl
aas
adc
mov
hlt
jl
outsl
popa
js
out
xor
or
hlt
loopne
fsubp
mov
add
sahf
rorb
stos
mov
or
jo
filds
xor
pushl
sar
mov
frndint
popa
insb
sbb
test
test
jne
fisubs
lahf
inc
xor
and
pushw
shr
or
pop
iret
ret
mov
pop
cmp
xor
cwtl
or
jb
add
xchg
fldenv
enter
imul
ljmp
mov
andb
in
sbb
icebp
sbb
scas
add
xchg
cmp
cltd
aaa
adc
inc
lret
dec
es
dec
stc
fistpl
cmc
mov
jecxz
sub
cmp
dec
add
in
loop
or
jb
shlb
subl
push
out
jns
movsl
jmp
mov
cld
jp
scas
rorb
add
mov
maxps
xchg
jo
fnstcw
aaa
lret
sub
fnsave
je
jnp
cmp
pop
pop
addl
insb
cmp
ja
mov
lret
dec
mov
sti
out
dec
cmp
fwait
mov
repz
mov
hlt
popa
xor
fldl
repz
stc
push
int
nop/reserved
add
cmp
stos
sub
scas
sub
dec
rcrl
mov
pushf
push
sub
dec
mov
cmpsl
je
mov
arpl
rorb
dec
cmpsl
and
pop
dec
push
push
mov
scas
bound
push
shl
cltd
add
inc
cmp
std
inc
shrl
dec
push
test
shl
les
push
popa
test
mov
into
jb
push
jnp
cmp
mov
adc
sub
inc
dec
add
aas
pop
add
ud1
jmp
and
mov
scas
cli
int
or
inc
jge
cmpsl
jns
test
ret
mov
xor
or
inc
fld
jge
jae
insl
cmpsl
add
dec
dec
mov
scas
fidivrl
cmp
jno
xor
test
fsubrl
call
sbb
rcrb
stos
pop
test
frndint
dec
pop
inc
addr16
ret
mov
shlb
jo
ljmp
lods
mov
aam
mov
arpl
push
mov
cmp
test
call
aad
mov
mov
int3
jmp
out
mov
popf
es
pop
dec
movsb
mov
dec
or
out
jns
push
pop
adc
and
test
mov
mov
mov
loop
mov
mov
icebp
lock
jbe
mov
xchg
and
je
pop
push
cwtl
and
fwait
inc
popa
dec
popa
jg
cld
and
pop
add
pop
fcmove
xor
push
mov
mov
inc
jae
inc
jecxz
pop
negl
addr16
and
pushf
inc
pop
xor
mov
inc
add
sbb
jb
cwtl
and
loop
mov
pop
xchg
iret
ss
lret
xchg
cmp
shl
dec
out
xchg
mov
popf
sahf
cmpsb
arpl
jmp
pop
ljmp
jbe
mov
or
add
mov
movsl
jo
inc
cmp
jle
push
call
loope
inc
cmp
mov
dec
sbb
shll
repnz
cmp
lds
sub
ja
mov
xor
push
add
lcall
add
jmp
notb
pop
sub
pop
ret
jb
jle
cmp
les
sub
push
call
enter
xchg
sub
inc
pop
push
pushf
push
jp
sbb
sub
lock
xorl
movsb
dec
into
rorb
ds
int3
mov
cmc
dec
out
int
aad
aaa
push
subb
mov
cmp
fs
insl
pop
xchg
dec
dec
test
or
pop
inc
pop
pop
or
sbb
push
nop
jle
cmp
and
stos
scas
insl
xor
fs
jg
xchg
clc
dec
mov
aad
hlt
in
sub
in
scas
sub
adc
cmc
mov
add
pop
scas
popa
add
fucomi
push
movsb
shll
test
movl
push
dec
adc
xchg
mov
cmpsb
add
inc
xor
jle
movsb
xlat
stc
roll
sbb
pop
mov
mov
pop
xor
or
jae
pop
xor
add
xchg
outsb
sti
scas
neg
in
xor
xchg
xchg
inc
aam
shl
imul
jecxz
mov
sbb
inc
lods
xchg
out
sahf
jbe
fsubrl
and
in
out
cmpsb
sub
pop
cmp
dec
xor
jno
popa
add
inc
leave
inc
push
or
std
lock
sahf
repnz
push
jae
mov
inc
repnz
pop
push
xchg
mov
sahf
mov
es
dec
add
loopne
sbb
mov
mov
movsl
and
xor
scas
test
rdpmc
das
xor
mov
outsl
xchg
sti
mov
push
sub
mov
cs
and
add
int
adc
add
fcmovnbe
inc
pop
and
xchg
rcl
scas
adc
lret
in
repz
movsb
cmp
xchg
xchg
mov
leave
fsubrl
arpl
cmc
fisttpl
jno
adc
or
sub
inc
jge
pusha
dec
jne
and
addr16
aas
push
sbb
rorl
push
push
je
call
add
add
xchg
mov
shrb
das
push
ljmp
stos
push
setbe
push
sbb
int3
sar
repz
les
or
call
mov
iret
xorb
push
fistl
push
jnp
inc
pop
jl
sbb
or
inc
cmp
jo
sbb
dec
test
stc
pop
fmul
ret
cld
mov
frstor
inc
outsb
cmc
xchg
dec
aam
lods
cltd
adc
cmpsl
loope
dec
fidivrl
loop
std
mov
aaa
push
sub
in
sub
cmp
loope
fmull
cmp
adc
or
in
das
xor
mov
xchg
ljmp
aam
clc
lods
call
cmp
or
idivb
ss
into
stc
or
or
mov
push
repz
test
push
pop
xlat
lock
bound
and
sbb
jns
push
in
lock
repnz
push
test
insl
jnp
fsubrl
inc
enter
icebp
daa
add
cmp
fildll
mov
cmp
xchg
and
lea
mov
add
jnp
mov
xorb
and
jbe
hlt
mov
jnp
xor
hlt
mov
mov
js
popf
test
repnz
hlt
sub
xchg
or
stos
lcall
pop
ds
fidivrl
shrl
inc
stc
cltd
test
mov
sub
shl
test
out
sahf
mov
xor
das
fsub
addr16
or
stos
movb
ret
dec
aam
push
mov
jno
in
jge
mov
add
mov
icebp
mov
scas
push
test
inc
call
popf
or
into
mov
cwtl
cmp
sbb
xor
sub
xchg
jb
cli
in
adc
cmp
je
lea
sub
sub
sub
data16
and
cmp
call
pop
jns
sarl
adc
mov
cwtl
clc
rcr
mov
pop
andb
cli
add
jl
pop
popf
es
mov
out
push
loopne
cld
push
ja
mov
loop
popl
ja
cmpsl
pushf
push
js
cmc
mov
lret
mov
cld
jbe
into
xor
daa
mov
in
add
cltd
inc
es
in
add
call
rcll
aam
into
xlat
dec
sub
mov
pusha
mov
sbb
xchg
add
out
push
xor
in
daa
aad
iret
stc
fwait
xor
pop
adc
push
or
and
out
not
fcompl
mov
fldl
add
imul
push
stos
xchg
add
fsts
jns
pop
fistpl
mov
rorb
mov
popf
test
divb
popa
cmp
dec
int3
push
test
push
and
inc
xor
addb
std
mov
ljmp
addr16
aad
cmp
mov
lods
repnz
rclb
push
or
cmp
push
dec
or
movsl
xchg
push
mov
mov
push
lcall
push
sbb
xor
daa
lods
outsb
jg
addr16
fimull
test
mov
fldenv
adc
xchg
in
mov
pusha
inc
movsl
in
pop
inc
mov
xchg
cs
pusha
adc
jbe
push
mov
sti
sbb
inc
lcall
xchg
mov
mov
cs
movsb
data16
out
mov
mov
insl
cli
daa
inc
cmp
dec
mov
repz
shll
inc
int3
dec
mov
adc
or
pop
mov
pusha
inc
gs
mov
out
fadds
xor
dec
sub
mov
push
pop
and
sbb
outsl
dec
rclb
cmp
rcll
adc
add
cmpsb
dec
lcall
sbb
call
add
cmp
xchg
and
add
int
and
jl
mov
or
test
xchg
mov
test
fnstenv
pop
stc
xor
aaa
neg
add
lcall
sbb
sub
cmc
pop
or
inc
les
sbb
push
cltd
sbb
and
jno
inc
xor
int3
pop
add
lahf
xchg
push
das
cmp
xor
and
jne
clc
inc
xchg
pop
rorl
cli
movsl
ss
xor
lods
cmp
sbb
cmpsb
sbb
out
mov
iret
hlt
ja
out
lret
xor
int3
push
sti
pop
xchg
or
sub
repz
adc
mov
push
cld
or
jle
test
clc
mov
pop
xor
pcmpgtw
int
or
add
hlt
mov
inc
and
mov
nop
cmp
xlat
test
sub
decb
pop
jb
fstpt
sbb
in
aaa
mov
cmp
jmp
push
in
mov
mov
aam
out
inc
les
out
cld
movsb
das
push
push
jmp
bound
push
jg
dec
int3
icebp
cmpsb
mov
push
jb
and
in
sbb
push
lret
sub
push
mov
fwait
sbb
xchg
dec
fdiv
insb
daa
test
lods
xor
jmp
fadds
and
adc
aas
mov
ficoms
inc
xchg
in
fldenv
jb
jns
dec
imul
lods
outsl
sbb
jo
cmp
sub
mov
test
push
cmc
into
in
test
inc
aam
or
mov
jp
xor
jno
or
xor
sub
inc
cs
leave
int
push
cs
inc
or
or
add
mov
movsl
dec
sbb
adc
shrl
rcrl
jb
and
aas
lods
pop
adc
sahf
sti
pop
jnp
ss
add
gs
mov
xor
and
ret
add
fisubrs
jae
mov
sub
mov
pop
jbe
mov
rclb
push
xchg
push
adc
aas
shr
cmp
pusha
sub
shrb
jns,pn
mov
mov
sbb
mov
out
movsb
lahf
pop
and
push
pusha
je
jl
int
or
ja
aad
iret
sbb
or
lds
repz
mov
fildll
sub
sbbl
gs
sti
push
sbb
dec
push
pop
mov
subl
dec
xchg
fisttps
cs
and
jp
pop
insl
popf
nop
sub
daa
and
lods
push
ss
mov
pop
mov
sbb
sub
xor
ret
inc
jmp
fbld
xlat
lcall
andb
xor
jne,pn
stos
orl
add
ret
rorl
popl
pop
out
mov
sub
mov
dec
inc
mov
fstpl
rol
xor
mov
fwait
mov
pusha
repz
mov
lds
and
cmp
sbb
inc
out
xor
inc
add
inc
icebp
push
mov
leave
scas
outsb
mov
cmp
mov
sub
or
or
sbb
lret
out
movsb
xchg
lahf
shr
xor
adc
je
mov
daa
pushf
arpl
lods
cmp
jns
xchg
std
repnz
nop
lcall
std
or
outsl
pop
repnz
mov
push
shl
sbb
mov
aam
test
push
repz
in
loope
stos
push
jns
pusha
xchg
test
enter
and
ja
ja
push
fistpl
rcr
mov
je
adcb
push
lods
cmp
lcall
jnp
sub
into
in
into
jmp
or
jb
inc
push
imul
dec
es
dec
std
cmpsl
sub
add
lahf
or
mov
push
jl
push
clc
movsl
mov
cmpsl
cmp
adc
inc
dec
adc
divl
cmp
xchg
mov
cmp
loop
xorb
xchg
jmp
mov
inc
das
lret
xor
aad
gs
out
scas
mov
mov
add
jne
sub
inc
xor
daa
rol
in
jp
dec
repz
xchg
pop
mov
push
xchg
xchg
sub
dec
inc
pop
outsl
imul
inc
pop
sahf
iret
insl
xchg
aam
pushf
mov
sbb
data16
mov
jg
and
jecxz
and
jmp
stos
mov
fdivrs
dec
adc
fidivrl
inc
movsb
iret
out
pusha
mov
push
fmuls
lock
je
cmc
out
adc
incl
fsubs
int3
cmp
in
lods
divb
mov
ret
pop
mov
aam
jmp
mov
movsl
add
mov
and
fcmove
icebp
out
cltd
or
test
push
push
aad
gs
stc
lock
out
in
repz
push
rol
repnz
arpl
and
mov
adc
imul
dec
cltd
inc
pop
imul
mov
inc
mov
daa
jge
cli
jno
xchg
push
sub
pop
adc
leave
pushf
mov
in
repz
xlat
movsb
jle
fdivp
jae
mov
mov
loopne
inc
pop
lret
xor
je
mov
mov
pop
dec
inc
push
cmc
cs
imul
pop
sbb
mov
cs
and
jae
imul
stos
cmp
fbld
aas
pushf
icebp
xchg
add
mov
xchg
push
fwait
push
jl
pop
stc
incb
lds
mov
in
xchg
inc
fbld
dec
jno
add
loop
ret
mov
inc
pop
arpl
mov
jp
cld
adc
lret
add
testb
pop
adc
inc
xchg
cmp
or
lret
iret
in
testl
add
and
fists
in
imul
mov
sub
adc
mov
dec
inc
stc
loope
outsb
data16
mov
dec
jb
mov
jecxz
cltd
mov
dec
dec
sbb
rol
scas
outsl
or
lods
push
push
xchg
fidivs
das
orl
jae
enter
mov
rcr
cwtl
out
test
xchg
jp
jl
pop
and
xor
iret
test
arpl
and
out
int3
cmc
cli
jmp
arpl
inc
enter
stos
repz
rcr
push
hlt
leave
sarb
ljmp
adc
roll
int3
je
jge
pop
fldenv
and
mov
pmaddwd
xchg
out
mov
mov
cmp
daa
or
call
js
loopne
std
jecxz
rorb
adc
loopne
push
or
add
ds
dec
sti
xor
fmuls
repnz
mov
adc
jo
mov
stos
pop
mov
movsl
lret
outsb
inc
mov
ficoml
and
iret
mov
in
jle
jl
jp
fsub
scas
cmpsb
mov
adc
sub
xor
adc
leave
push
dec
in
jmp
pop
test
or
add
loop
dec
lcall
jecxz
mull
jae
mov
fstpl
ficompl
xor
aaa
xchg
mov
je
movb
sbb
xchg
xlat
pop
jp
insb
mov
aaa
lret
fldt
push
push
jae
pop
mov
data16
mov
lods
scas
mov
mov
test
jp
sbb
jno
mov
mov
mov
sub
cwtl
loopne
fmul
push
into
adc
imul
add
mov
outsb
icebp
andb
cmp
mov
nop
sub
inc
lahf
dec
add
popf
lock
cmp
jecxz
lea
loope
fs
mov
clc
xor
dec
notl
addl
mov
scas
lods
sub
xchg
xor
ret
nop
sti
cmp
push
sub
xchg
pusha
shrl
jecxz
mov
or
out
shll
mov
sub
jno
adc
pop
jb
cmp
push
sub
or
add
xor
test
inc
daa
push
fimuls
test
and
test
loope
mov
imul
aam
dec
iret
mov
ret
lds
cmc
pop
add
sbb
push
add
xchg
fidivrl
xor
hlt
lret
adc
sbb
outsl
lock
cmp
movsb
fwait
add
ds
insl
mov
hlt
jo
pusha
cmpsb
sbb
pop
push
call
jmp
pusha
insl
repz
and
adc
or
insl
addr16
insl
cmpl
cmp
add
jns
jp
in
or
iret
ss
xchg
dec
mov
js
iret
sti
outsb
adc
jl
sahf
icebp
add
push
mov
push
in
int3
fsubs
outsl
sbb
push
call
mov
lea
test
test
ljmp
push
sbb
std
cld
mov
ret
cwtl
cmp
xor
int3
xchg
sbb
dec
loope
loop
popa
rcrb
ret
hlt
pop
jb
into
pop
push
js
shrl
js
test
outsl
jne
adc
mov
out
arpl
mov
lods
jg
push
mov
addr16
les
dec
push
inc
movsl
pop
popf
cmp
stos
pop
cs
mov
ret
sbb
and
add
dec
cmp
es
or
enter
and
mov
sti
mov
adc
sbb
sub
push
push
adc
testl
jns
int3
cwtl
xor
jb
pop
jg
push
fwait
push
sti
sub
in
pop
mov
imul
cmp
gs
jge
out
dec
adc
aaa
xchg
push
add
adc
adc
cmp
jns
xchg
inc
lock
outsb
test
fldt
shl
popl
jne
mov
aam
pop
add
jmp
xlat
xchg
and
movsb
xor
test
xchg
mov
fs
lods
ret
dec
int
or
mov
sarl
sbb
or
add
lds
rorl
and
pop
aas
xor
adc
mov
out
or
xor
add
adc
gs
fimull
xor
repnz
mov
test
ds
faddl
dec
sti
sbb
mov
int3
adc
mov
gs
dec
fisubrl
cmovge
imull
dec
push
hlt
xor
fucomi
popf
aas
mov
cld
inc
jmp
pushf
jnp
loope
sub
pop
lods
ljmp
cmp
out
lock
jb
data16
daa
ja
ret
mov
in
fldenv
popa
adc
jb
cmp
lods
pusha
add
leave
dec
sbb
gs
lahf
jg
adc
mov
xlat
mov
sub
dec
or
xchg
in
nop
add
cwtl
sbb
fnsave
in
test
mov
fcomp
fsubrl
xchg
out
nop
idiv
popa
dec
inc
pop
push
sub
sbb
test
leave
fnstsw
pop
imul
aam
or
sub
mov
sbb
jmp
jo
enter
xchg
add
int3
and
in
push
orb
and
out
mov
cld
ljmp
fsubs
movsb
aam
jns
sub
pop
pushf
xchg
mov
add
or
mov
scas
push
pop
xlat
nop
out
ja
aas
test
int3
bound
lret
mov
setno
sarl
jmp
sub
adc
fwait
mov
sbb
cmpsb
shr
cmp
push
add
mov
sub
jnp
sbb
pop
leave
mov
test
scas
mov
in
mov
fs
inc
repz
in
popa
dec
mov
cli
xor
mov
addb
add
in
rcll
fldt
lea
sub
mov
test
xchg
sub
mov
pop
sarl
push
dec
sub
mov
jnp
int
cltd
mov
push
lock
cmp
xor
mov
das
xchg
xor
mov
jbe
push
sbb
rclb
cmp
iret
pop
aas
xchg
outsb
repnz
in
in
insb
dec
test
cmpsl
add
adc
add
lock
dec
inc
fxch
jnp
cmpsb
pop
shrl
add
adc
mov
xchg
pop
enter
inc
shl
xor
mov
xorb
inc
mov
jns
adc
xor
jp
push
jg
push
mov
fwait
xchg
jmp
dec
je
adc
lods
lahf
int3
popa
ret
add
sbb
inc
loopne
rcrl
add
jecxz
test
jmp
rcll
mov
sub
mov
lcall
repz
or
and
enter
pushf
push
sub
lock
add
push
daa
sub
and
aaa
movsl
add
mov
mov
hlt
xchg
insb
or
mov
mov
push
imul
lock
inc
adc
dec
pop
mov
xor
decb
or
sarb
sub
cmp
cmpb
sbb
fisubs
pop
mov
push
movsl
mov
aam
add
aas
mov
out
xchg
mov
jbe
imul
icebp
fmuls
or
cmp
and
cmp
cmp
mov
fisubrl
jbe
cmp
cmpsl
push
push
jl
ljmp
out
mov
adc
pushf
sbb
shrb
adc
call
xchg
in
adc
sub
xchg
jne
mov
sbb
nop
fwait
das
enter
adc
inc
and
arpl
inc
fisttps
stos
adc
aas
loop
lds
ret
dec
daa
jbe
xchg
mov
hlt
out
mov
arpl
pop
or
cmp
add
testl
xchg
adc
stos
mov
pop
pop
jnp,pt
imul
sbb
xchg
popf
pop
ljmp
out
adc
and
inc
int
aad
add
push
dec
stos
cmp
out
fnstsw
aas
and
lret
ds
mov
pop
pushf
mov
mov
fdivs
aam
mov
aam
or
xchg
add
mov
adc
loopne
xchg
sbb
rolb
mov
dec
mov
lock
loope
js
mov
loope
push
push
insl
or
mov
sub
repz
dec
cli
ror
aam
hlt
mov
sbb
bound
mov
lret
ret
push
mov
les
sub
pop
xor
nop
adc
push
cltd
adc
pop
jle
bound
push
mov
pop
inc
call
mov
inc
cmpsb
mov
fs
xchg
mov
add
dec
pusha
insl
dec
inc
enter
jle
rol
pusha
push
jb
out
jecxz
lahf
fwait
dec
test
and
dec
push
les
xchg
imull
sub
mov
cltd
pop
addb
mov
loopne
inc
sbb
int
repnz
cld
imul
and
push
test
mov
rorl
ret
xchg
push
mov
xchg
cs
mov
loope
pop
xchg
xor
push
nop
les
jecxz
movnti
pushf
cmpsb
fsubrl
lods
aas
inc
clc
xor
sub
inc
dec
sub
xor
dec
push
std
leave
roll
xor
and
sti
push
cmp
scas
mov
xchg
out
ja
and
jge
pop
ss
js
scas
cmp
pop
push
testl
int3
mov
adc
fcmovnu
mov
das
jo
mov
sub
ret
add
int3
jge
or
ror
dec
jbe
push
jo
cs
cli
cmp
xchg
in
into
data16
lea
cwtl
xlat
and
sbb
add
sub
imul
mov
adc
jl
sub
mov
and
xor
lock
or
sub
lods
in
xchg
push
sarb
jo
sbb
int
lret
mov
test
pushf
out
or
rorl
nop
fwait
mov
xlat
mov
push
inc
jno
cld
push
sbb
fwait
pop
sahf
pop
or
mov
mov
sbb
arpl
in
xchg
mov
adc
fsubl
daa
decl
cmp
rclb
cmp
dec
mov
mov
cmp
push
popf
mov
mov
fldt
cwtl
mov
daa
adc
inc
mov
int3
imul
das
adc
aas
xor
popf
enter
push
cmp
cmp
inc
fsubp
xchg
sbb
mov
mov
fwait
mov
lret
xchg
and
cmc
xor
cmp
xchg
subb
mov
nop
push
clc
jbe
sub
mov
pop
hlt
pop
lret
insl
js
mulb
jle
jg
and
xchg
push
mul
pop
ret
insl
pop
jge
xchg
pop
dec
xchg
xchg
in
mov
push
and
outsb
mov
imull
inc
pop
lods
mov
or
jp
out
sub
cs
inc
mov
in
cmpsb
jo
dec
pop
ja
lcall
lret
pop
xor
enter
cmp
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
fsubrl
ja
int3
sub
mov
add
out
mov
pop
xchg
cmpsl
dec
ret
aas
add
ret
mov
icebp
es
ljmp
jle
mov
xchg
outsb
cmp
lock
nop
fcomip
lret
popa
repnz
fwait
or
lock
sub
fistpll
adcb
or
rolb
int3
les
xchg
cld
sub
test
test
xchg
aad
lret
lret
xchg
in
insl
les
test
add
daa
stos
mov
mov
nop
jnp
into
popa
in
jo
sbb
cmpsb
mov
pop
dec
fwait
bnd
fcomi
mov
adc
jbe
sub
lret
mov
mov
nop
mov
cmp
fisttpll
outsl
icebp
cmp
outsb
je
in
dec
sbb
fisttpl
pushf
and
push
scas
outsl
pop
pop
adc
xorb
pop
rcrb
ret
adc
ja
push
cs
shlb
lret
bound
ficoml
insb
xorl
icebp
pop
jecxz
push
xor
add
lcall
mov
fldcw
lea
or
int3
xchg
xor
adcl
mov
sbb
push
mov
lahf
dec
add
test
adc
adc
jecxz
cmpl
add
cmpsb
or
add
pop
test
adc
cmp
adc
into
mov
lea
mov
fidivrl
dec
sahf
inc
xchg
mov
aas
xor
and
adc
push
outsl
dec
jbe
std
xchg
mov
push
inc
out
inc
xor
mov
sbb
dec
jbe
mov
lret
add
repnz
lock
mov
and
sub
adc
rcrl
cmp
nop
and
pop
mov
scas
gs
inc
lcall
fidivs
bnd
aaa
jl
leave
lea
ds
lahf
add
pop
ja
xchg
ret
xchg
lret
inc
jae
gs
cli
cmp
test
fildll
movsl
cltd
cli
sbb
cmp
mov
dec
fs
sahf
out
aas
mov
jmp
into
cmp
movsl
sti
mov
xor
das
mov
xchg
ror
sub
or
sub
test
test
insb
test
mov
gs
add
in
push
mov
sbb
jb
dec
fldt
add
push
sbb
push
jae
mov
jl
in
sahf
pop
pop
adc
movsl
adc
xchg
scas
in
les
push
mov
leave
or
cld
sub
in
push
lret
xor
cmp
inc
cli
sbb
roll
out
in
push
iret
add
ss
jbe
mov
aas
sti
jne
jno
xchg
psubusw
mov
mov
bound
insb
arpl
fistpll
aas
nop
lods
sti
enter
lret
push
dec
add
or
int3
cmc
mov
mov
loopnew
test
das
sub
es
push
push
out
mov
cltd
incl
push
jmp
mov
aas
loop
gs
es
add
add
or
xor
sub
push
pop
mov
xor
cmp
fimull
in
dec
sbb
arpl
sbb
mov
xor
mov
in
je
mov
jo
push
cld
xor
pop
lahf
stos
jbe
fcoms
dec
scas
and
pushf
xor
cmc
call
or
pop
ret
xor
add
xchg
es
mov
sarb
sbb
xchg
mov
inc
and
lock
xor
mov
pushf
fdivs
cmp
mov
and
jnp
pusha
roll
dec
ja
adcl
push
int
mov
test
cmpb
hlt
out
ja
mov
into
lods
aad
and
pop
enter
sti
rcll
and
add
mov
adc
lret
dec
addr16
push
pop
jns
xchg
xchg
dec
and
aaa
adcb
and
add
aad
stos
sub
xchg
pop
movsl
cmp
mov
mov
rorb
mov
mov
test
int
pop
adc
scas
mov
decb
ja
ret
or
xchg
gs
outsb
xor
addps
add
ss
popf
sbb
dec
xchg
fcoms
lret
jnp
lret
xor
adc
loop
inc
or
dec
inc
data16
adc
inc
cmpsl
lock
imulb
sub
popf
jmp
incb
aam
andb
popa
jnp
mov
adcl
sub
in
jae
mov
cltd
xor
pusha
pushf
in
pop
sti
mov
mov
mov
out
xor
jb
pop
int
jns
out
mov
dec
lret
ror
mov
iret
frstor
repnz
cmpsb
sbb
imul
xchg
sub
aam
inc
faddl
sbb
push
lock
hlt
stc
testl
pusha
fisubrs
dec
cmc
push
and
jno
sub
in
ret
testb
cld
cwtl
or
enter
inc
xor
sarb
pop
sub
ljmp
mov
adc
andb
xorl
push
daa
lea
stc
push
test
loopne
lods
jae
std
repnz
mov
pop
add
stc
out
jle
adc
jo
les
dec
fucomp
dec
sbb
dec
xchg
jl
or
outsl
push
pusha
xchg
loopne
xor
enter
fstpt
and
pop
icebp
ret
or
inc
pushf
inc
hlt
in
test
js
xchg
sub
nop
mov
movsl
mov
je
inc
das
pusha
orl
jp
sbb
shr
sbb
push
arpl
add
jl
flds
inc
pop
ja
ja
mov
mov
lods
adc
je
cmpb
pushf
cmp
repz
dec
adc
sbb
mov
test
gs
fcomp
cmp
push
arpl
mov
jno
and
stos
mov
jecxz
and
iret
lret
or
cmpb
int
lret
imul
jle
mov
cltd
cwtl
bound
fisttpll
sbbl
dec
shlb
rcll
mov
dec
sub
cmp
nop
pop
mov
push
pop
icebp
and
hlt
ds
rcl
imul
insb
inc
cli
jbe
movsb
int3
add
lods
mov
jb
jmp
xor
imul
push
les
mov
or
outsl
xor
lret
es
pop
movsl
test
dec
xor
sbb
dec
outsl
imul
daa
das
jbe
xchg
push
aam
push
dec
sahf
and
nop
cltd
in
out
add
in
pop
pop
xchg
xor
and
xchg
clc
push
xorb
clc
pop
push
sti
mov
leave
outsl
push
test
xor
push
ss
and
dec
sub
inc
push
mov
pop
lods
clc
ds
fcoml
cmp
push
test
xchg
gs
sar
cli
pop
fwait
sbbb
add
notl
pop
imul
xor
inc
loope
xchg
test
sti
xor
rorb
fnstsw
sub
sti
cmpsb
clc
jns
mov
in
mov
stos
rep
mov
add
dec
mov
sbb
push
icebp
xor
das
pop
jbe
cltd
insl
or
lods
jg
je
add
out
lds
xchg
jmp
movb
mov
popf
pop
jle
in
into
aas
outsb
ret
sub
mov
loop
repnz
stc
mov
or
fnstsw
sub
insl
vmread
mov
cmp
mov
filds
cltd
sbb
push
adc
inc
cli
stos
cmp
mov
and
inc
rclb
popf
in
icebp
nop
push
xchg
mov
sahf
adc
jg
push
add
adc
cmp
iret
jne
xor
mov
addb
mov
loop
jle
loope
add
orb
sbb
cmp
push
or
or
das
insl
ljmp
jecxz
int3
mov
mov
cmp
jge
movsl
scas
xchg
xor
lods
nop
insb
stos
repnz
mov
shld
sbb
dec
pop
inc
inc
out
add
push
xor
repz
cmc
into
cmpsl
mov
imul
in
mov
bound
dec
fs
dec
jno
push
xor
ja
and
cmp
pop
js
mov
xchg
sbb
aad
in
je
and
xchg
dec
sbb
lahf
fwait
sbb
lret
mov
mov
cwtl
repz
and
adc
jne
mov
push
outsb
in
rcrl
imul
fbstp
sbb
pop
or
cld
rorb
add
jbe
sub
decb
dec
aad
icebp
cli
mov
jb
sbb
scas
adc
sbb
inc
and
fsts
adc
jo
in
arpl
stc
movsb
pusha
cs
xchg
sub
lahf
scas
pop
out
jge
daa
notb
jo
sbb
out
int
daa
or
orb
mov
lcall
mov
push
icebp
rorl
loope
adc
sub
xlat
addr16
sarl
inc
enter
or
mov
jmp
insl
or
rorl
adc
mov
and
dec
or
gs
mov
lds
aad
repnz
lods
nop
fnstcw
or
iret
stc
pop
push
mov
xchg
sbb
rcll
and
xchg
pop
lods
mov
adc
jne
nop
inc
mov
add
cli
ss
lock
adc
mov
repnz
lods
and
in
mov
les
in
inc
cwtl
mov
cmp
jl
and
jg
pop
sbb
nop
lods
je
lea
mov
fildl
aas
dec
pushf
mov
dec
push
cltd
or
or
dec
test
jae
out
clc
fadd
sub
dec
mov
jge
gs
fistps
shll
adc
push
add
lret
jbe
jl
dec
and
mov
hlt
and
fadds
popa
adc
out
sahf
popf
xchg
mov
dec
mov
imul
jl
fisubs
push
push
mov
or
fildl
mov
cli
pop
mov
movsb
add
scas
add
popa
hlt
insb
mov
add
aas
and
mov
cmpsb
fisubrs
xchg
mov
fwait
xchg
inc
add
xchg
jle
daa
ret
add
xor
dec
inc
jl
cmp
push
loop
aam
nop
xchg
mov
mov
or
pop
dec
mov
call
cld
mov
shrb
or
mov
or
inc
push
jge
sub
lret
sub
mov
xor
cli
or
jl
mov
call
arpl
adc
int3
and
inc
aas
add
test
mov
mov
jae
arpl
arpl
dec
and
iret
lods
and
ljmp
mov
into
popa
aad
aam
jae
or
cmp
cmpsl
movsl
int3
fcoms
lea
cli
mov
jge
push
push
cmpsb
popa
insb
in
jns
enter
push
nop
loope
mov
mov
out
mov
mov
bound
int3
mov
ret
aas
push
xor
mov
aaa
bound
data16
and
ss
out
push
push
shrb
mov
jae
mul
sti
push
loop
push
movsl
arpl
cmpsb
jne
aaa
mov
cld
pushf
push
mov
push
lret
dec
xor
or
test
push
and
sbb
ja
xchg
jnp
aaa
push
stos
out
pop
sub
lret
cwtl
loop
insb
nop
clc
mov
imul
insl
loopne
enter
mov
sbb
testl
test
dec
into
push
adc
ss
xchg
cmc
cli
call
inc
push
jae
mov
rol
sbb
lds
mov
icebp
loopne
adc
enter
mov
insl
ja
scas
cwtl
mov
idivb
sub
sbb
sbb
cld
fstp
mov
mov
mov
es
ljmp
imul
mov
or
and
and
sbb
hlt
push
jne
icebp
sbb
out
pop
and
mov
loope
fistpll
jl
ret
out
ja
push
lahf
lret
xchg
xor
and
outsb
cmc
hlt
nop
sub
lods
nop
clc
sbb
lcall
repnz
xorl
fdivrs
sti
xchg
dec
mov
jbe
pop
sub
push
mov
pop
or
dec
aas
dec
xchg
cmp
xchg
adc
dec
mov
push
xchg
mov
outsb
jle
xor
or
add
cmp
es
ffreep
cmp
icebp
dec
xor
xor
mov
mov
or
mov
pop
jmp
decl
pushf
xchg
stc
add
push
mov
dec
add
scas
or
xlat
jb
push
push
mov
test
adc
data16
cmc
fdivp
loop
jg
pop
jl
inc
arpl
pop
mov
xchg
movsbl
sti
cli
xor
xchg
shl
jl
out
inc
push
xchg
ja
cmpsb
repnz
clc
int3
push
push
mov
or
iret
jecxz
mov
jge
ja
subb
dec
ss
jne
mov
push
inc
out
addr16
xor
lcall
or
les
cltd
ss
ret
mov
inc
pop
mov
imul
mov
out
repnz
mov
mov
jne
subb
scas
ret
pop
mov
xchg
add
into
popf
xchg
das
add
or
sbb
push
push
lahf
cmpsl
or
sub
outsb
leave
ret
ret
lahf
fdiv
popa
mov
icebp
sub
mov
scas
loop
loope
mov
cmp
sti
lret
xchg
fistpll
loope
push
scas
rcr
out
push
add
xor
inc
sub
loopne
leave
mov
and
sbb
jmp
gs
aaa
push
xchg
das
stc
inc
sub
sub
and
pop
cmp
sub
jbe
add
jbe
iret
pop
and
push
jp
xlat
in
bound
push
fldcw
add
mov
cmp
fistps
cmp
mov
dec
mov
movsl
filds
mov
mov
pushf
adc
sti
popa
sub
int3
nop
mov
and
xorl
int
jmp
jno
rcl
or
insl
cmp
add
dec
clc
adc
ljmp
clc
stos
aas
addb
daa
xor
and
add
mov
jae
mov
cmpsl
mov
sbb
jg
add
mov
xor
and
imul
lahf
pop
fwait
adc
stc
and
imul
in
push
inc
dec
mov
cmp
icebp
lcall
sbb
xchg
or
loop
pop
xchg
das
nop
inc
movsl
dec
mov
mov
int3
gs
mov
fmuls
repnz
jmp
mov
ret
mov
rcl
mov
pusha
sub
push
add
int3
pop
mov
and
loopne
es
movsb
testb
sbb
push
push
mov
sub
iret
xor
lods
cmpsl
xor
std
daa
jp
cld
or
clc
or
fs
and
rorb
pop
rcrb
pop
push
in
cmpl
and
sub
xchg
jno
pop
rorl
push
mov
mov
add
aaa
sub
xchg
push
imul
inc
add
or
loope
xchg
add
xchg
pop
cwtl
ret
ficompl
lret
arpl
cmp
cmp
mov
mov
call
jle
inc
pop
or
ror
cmp
aas
ret
das
cs
roll
ljmp
add
in
cmp
das
inc
jge
xchg
idivl
aad
inc
push
and
stos
jg
mov
lods
sbb
loopne
jp
mov
xchg
jb
cmp
jmp
xchg
dec
and
imul
sub
mov
mov
loope
cmpsb
sar
inc
jae
inc
das
inc
das
shrl
xchg
jnp
movsl
sub
pop
xor
mov
and
ror
int3
jb
sub
lods
cs
xor
mov
cmp
inc
push
xor
pusha
and
pop
lock
stos
adc
nop
int
lods
in
pop
in
adc
pop
push
out
xchg
jne
xlat
gs
and
xchg
pop
clc
je
mov
movsb
jne
negb
iret
inc
push
jo
mov
leave
mov
cmp
mov
sar
mov
pop
pushf
imul
aam
mov
fldenv
xor
ficompl
cmp
dec
addl
scas
sbb
ret
mov
mov
les
adc
cmp
movsb
mov
push
and
mov
sbb
stos
dec
shrl
lret
or
push
add
dec
lock
addb
scas
mov
sub
dec
cmp
movsb
xor
imull
out
inc
xchg
jne
inc
inc
and
pushf
sub
dec
and
or
jg
movsl
aaa
pop
pop
sbb
jae
xor
sahf
mov
fadd
add
cmp
mov
push
lret
xchg
scas
test
dec
shlb
xchg
scas
jp
or
jle
mov
js
jns
xchg
adc
fisubs
aas
sub
mov
sbb
inc
adc
mov
imul
idivl
cmp
data16
ljmp
inc
sub
and
testl
jmp
add
scas
nop
xchg
je
sahf
lea
das
xor
cmp
jns
stos
lret
outsl
xor
mov
mov
mov
aas
add
pop
pop
mov
lods
or
int
add
push
dec
fsubrl
push
push
sub
fdivrl
and
jbe
push
xlat
out
xlat
cmp
mov
jo
subb
sbb
and
sub
add
roll
mov
sbb
jbe,pn
fadds
movsl
jp
mov
pop
adc
jne
cmp
mov
jg
hlt
into
xchg
cwtl
jge
stos
cmp
mov
adc
adc
xchg
rcrb
mov
push
and
mov
or
dec
push
stos
or
insl
repnz
mov
mov
imul
mull
outsl
enter
inc
xchg
or
in
jb
cmp
scas
push
jle
sub
push
mov
lret
sbb
mov
pop
scas
pop
add
and
stc
insb
mov
in
push
xchg
jmp
pop
jecxz
inc
out
pusha
push
outsb
xchg
dec
enter
dec
shl
in
mov
ret
jnp
inc
mov
jnp
or
popa
aad
jae
sub
ret
mov
adc
sbb
jmp
add
gs
sbb
add
sbb
sahf
fidivl
sahf
outsl
test
aam
add
movsl
test
frstor
mov
popa
xchg
xor
jg
mov
cmp
cmp
jl
and
out
loopne
sarb
jns
inc
int3
dec
xor
fisttpll
inc
cmp
mov
into
inc
push
mov
xchg
pusha
pop
jmp
dec
pop
iret
loope
aam
jae
and
xor
cld
pushf
xor
mov
pop
and
outsl
pusha
test
sahf
or
push
lock
xchg
and
int
xor
mov
push
loop
jl
lods
movsb
cmp
fimull
shrb
mov
lods
inc
fldcw
ret
insl
int
in
stos
jmp
jbe
xlat
dec
inc
inc
xchg
leave
pusha
sub
mov
je
rolb
es
inc
or
dec
cmp
xor
test
jmp
dec
or
xor
sbb
add
cmp
dec
jb
gs
addr16
push
jae
sub
jg
shrb
mul
xchg
scas
push
and
pushf
test
test
or
add
sbb
call
rclb
je
movsl
dec
aam
pushf
xchg
imul
scas
mov
scas
test
pop
nop
jns
ficoml
aas
sbb
cmp
mov
push
push
add
insl
pop
mov
out
push
dec
jno
mov
sub
ret
es
mov
mov
lcall
or
xor
inc
in
mov
sti
xchg
dec
cmp
mov
fcoms
add
fwait
sbb
lods
mov
mov
xchg
call
fiadds
push
inc
and
sub
mov
jb
arpl
stc
les
test
icebp
insb
mov
insl
push
clc
xchg
pop
icebp
shl
sbbl
mov
sub
scas
lret
mov
cmp
inc
js
iretw
out
out
sbb
not
pop
sub
js
aam
test
cld
mov
fcoms
inc
testl
push
fbstp
and
pusha
xor
std
dec
loopne
xorb
in
mov
xchg
add
dec
adc
sub
pop
xchg
loopne
sub
mov
gs
dec
mov
or
dec
jg
inc
ja
pop
and
sub
clc
xor
pop
lahf
sqrtps
pop
es
mov
cmp
add
xchg
push
and
mov
mov
xchg
pop
or
scas
loopne
out
test
cwtl
jae
push
jns
push
scas
mov
cmp
xor
dec
mov
or
fwait
jo
ljmp
dec
jno
jle
jbe
sub
negl
lcall
mov
push
es
pop
or
fnsave
cltd
aaa
fnstcw
test
add
scas
xchg
in
lock
or
gs
subb
out
pusha
aaa
fbld
test
lcall
push
mov
adc
daa
call
push
dec
insl
mov
shr
adc
and
iret
aas
push
fimull
jp
hlt
jp
and
andl
push
mov
dec
imul
jge
add
dec
push
dec
rorb
inc
pushf
lods
jno
mov
jbe
cmp
adc
inc
jbe
mov
orl
mov
test
loop
in
jne
sbb
cld
aas
shll
sub
fsubs
fcompl
jge
addl
into
or
nop
adc
jae
into
shlb
shrl
scas
pop
adc
cmp
xchg
xchg
pop
or
pop
fldenv
push
fadds
pushf
push
addr16
lock
add
mov
lods
mov
std
jmp
xchg
iret
sbb
adc
pusha
cmpsl
data16
mov
enter
and
xchg
dec
xchg
xlat
mov
sbb
push
sahf
inc
icebp
out
cmp
inc
jge
push
test
repnz
arpl
and
jae
dec
mov
scas
pop
xor
cmp
xor
or
insb
and
movsb
jle
sti
sub
inc
jns
jbe
int
adc
sub
sbb
inc
or
arpl
mov
fsubr
pop
and
or
pop
mov
xchg
jl
hlt
in
xchg
fdivl
adc
or
pop
mov
sub
andl
mov
movl
icebp
daa
outsb
scas
cld
das
xchg
xor
jmp
adc
sub
addr16
add
xchg
inc
push
popa
int
push
hlt
or
push
push
dec
call
ret
fs
lret
jne
fsubr
and
pop
pop
rcl
push
pop
jmp
jnp
pop
xor
fnstcw
pop
mov
cli
jmp
movsb
cmpsl
xchg
mov
push
lds
cmpsb
xchg
aas
fldl
fnstcw
gs
jp
sbb
insl
jle
xchg
je
jae
sbbl
mov
lea
jno
push
stos
add
inc
cmp
push
jg
push
scas
jo
mov
mov
loopne
or
sbb
or
xchg
inc
mov
clc
arpl
rcr
imul
je
mov
cmpl
add
insb
xchg
cld
bound
jb
scas
stos
sahf
mov
fcmovbe
pop
mov
xchg
xchg
fildll
mov
cltd
call
inc
jo
outsb
inc
pop
push
mov
outsb
testl
pop
push
mov
and
lret
dec
mov
pushf
sar
dec
imul
fcompl
aam
push
out
cltd
xchg
mov
dec
push
jle
or
rclb
test
mov
lods
shl
jno
dec
into
jne
jno
sbb
jmp
dec
xor
arpl
xor
roll
ss
sbb
jb
aam
enter
push
notb
leave
xchg
popf
xchg
addl
fdivr
mov
test
and
mov
out
int3
push
hlt
icebp
lret
xor
test
mov
out
in
outsb
lret
cwtl
idiv
stc
add
daa
fdiv
xchg
in
fwait
mov
jbe
xor
mov
mov
xor
out
aaa
or
in
inc
cmp
mov
rcll
adc
loope
sahf
out
cltd
jb
out
inc
jne
adc
out
and
mov
jno
ja
mov
inc
sar
in
lahf
dec
dec
std
fsubrl
cmpsb
data16
imul
xchg
cmpsl
mov
fcompl
cltd
lret
fistl
popf
xchg
jb
jmp
sbb
pop
and
clc
ljmp
shlb
push
cwtl
popf
sahf
sub
les
add
es
enter
icebp
inc
jmp
sbbl
push
add
jecxz
adc
sbb
pushf
mov
mov
xchg
pop
mov
or
lret
and
dec
push
inc
or
fwait
sbb
inc
mov
adc
cmpsl
leave
inc
lods
std
jae
mov
inc
movsl
jp
sub
pop
sbb
mov
sbb
inc
mov
stos
jp
or
test
xor
cmp
jg
ret
loopne
mov
je
add
aam
ret
mov
inc
adc
lret
pop
sbb
cmovns
outsb
mov
mov
rclb
pop
sbb
mov
imul
adc
enter
dec
inc
push
xchg
pop
cmpsb
push
mov
lds
shlb
lcall
pop
mov
insb
ljmp
dec
pusha
and
jg
data16
jns
popa
add
fildll
inc
xor
xchg
xlat
movsl
ret
into
aaa
dec
xor
and
add
jecxz
std
pushf
cs
push
xor
cmp
sahf
jb
dec
push
xchg
or
cmp
xchg
jo
test
notb
lcall
xor
or
sbbl
aad
xorb
jle
mov
loope
std
push
faddl
sbb
aas
insl
xchg
std
mov
or
push
idiv
out
push
push
add
mov
push
dec
jb
dec
mov
cmp
adc
cmp
inc
push
inc
pop
mov
cs
inc
xor
je
mov
cltd
movsb
daa
mov
lods
movsl
fstpt
or
daa
mov
rcl
push
push
sub
ret
jl
mov
popl
pushf
and
mov
xchg
push
mov
mov
sub
xchg
dec
push
or
and
jp
scas
inc
adc
and
mov
xchg
jae
pop
cwtl
mov
rcll
lcall
pop
hlt
mov
pop
pop
dec
jge
aam
jo
inc
mov
lret
jmp
fdivs
sub
pusha
inc
sub
inc
sub
xlat
loope
jnp
int
out
lahf
lahf
push
sub
loop
push
aaa
sbb
xor
aad
repz
mov
outsb
test
lock
das
scas
lock
ljmp
push
lds
cs
cmpsb
jnp
daa
mov
jge
pop
jo
dec
mov
sbb
sbb
std
outsb
adc
push
cmp
into
shlb
xor
sub
jecxz
or
adc
or
pop
pop
das
mov
jmp
xor
lret
xchg
fdivs
and
mov
xchg
cmc
add
scas
sbbb
mov
outsl
lret
or
xor
pusha
mov
dec
adc
lods
sub
jmp
or
xor
lret
scas
das
mov
clc
xchg
sbb
notb
je
mov
lcall
fs
repnz
popf
pusha
cmc
lock
xor
pushf
or
cmp
pop
fwait
pop
push
out
arpl
cltd
mov
pop
jl
sarb
aas
xor
mov
loope
ret
in
mov
fstl
push
iret
cmp
or
mov
xor
nop
adc
pop
push
cmpsl
sar
cmpsb
mov
xchg
pop
arpl
mov
push
add
rcrl
or
dec
jge
aaa
push
out
daa
or
iret
sub
movswl
cltd
imul
addr16
adc
mov
dec
xchg
mov
mov
sbbb
fcomps
xchg
push
cli
lret
mov
cmpsl
lahf
fidivrs
push
mov
stos
out
pop
mov
scas
mov
ja
aam
and
les
loope
stos
test
mov
push
ret
sub
push
out
sbb
xor
mov
ljmp
mov
jmp
out
dec
data16
test
cmp
cmpsl
jns
push
pusha
adc
cmpl
xchg
ret
jae
fnstcw
dec
inc
leave
jg
mov
jne
sahf
outsl
imul
popf
add
jb
mov
sbb
cmp
cmc
lock
clc
scas
ret
inc
in
arpl
adc
js
fs
jg
cmpsl
icebp
std
push
fsubrl
shlb
mov
mov
loop
mov
lret
test
jle
imul
pop
outsl
pop
adc
xchg
lods
cld
jmp
in
jl
dec
inc
sti
add
lods
mov
les
mov
push
xchg
or
lods
nop
inc
lods
in
push
jmp
rcl
out
mov
sarl
inc
stc
push
or
xchg
inc
imul
mov
pop
cmp
in
cmp
adc
lret
subl
jmp
fdivs
insb
inc
repnz
int
cmp
push
stc
xchg
hlt
bound
sub
test
push
sahf
pop
pop
testb
inc
bound
dec
out
and
pop
xlat
pushf
aaa
or
sub
stos
mov
rcrl
mov
cmp
xor
loopne
es
mov
outsb
cltd
jp
dec
repnz
sub
pop
addr16
sbb
push
insl
push
sbb
pop
rcr
clc
sub
fsubs
lret
xchg
mov
mov
jnp
sub
push
jb
push
sub
push
ljmp
sub
pop
mov
and
sub
inc
data16
outsb
mov
cmp
jp
fwait
outsb
add
mov
fucomip
test
call
pop
repnz
push
and
add
lahf
cld
imull
inc
scas
int3
cmpsb
fldt
pusha
jo
inc
mov
jmp
in
out
arpl
mov
stos
sub
loopne
mov
mov
insb
sbb
or
sub
jae
iret
dec
stc
fbstp
xchg
mov
das
in
jno
and
push
sets
shlb
jbe
cmc
push
mov
cli
fcoms
jecxz
rol
jle
adc
xor
inc
ja
repz
aam
sahf
xor
mov
adc
lahf
mov
xor
aas
inc
adc
dec
xchg
push
ret
and
dec
scas
shr
lods
or
push
mov
mov
ljmp
imul
dec
dec
sub
mov
jns
jecxz
xchg
mov
fcoms
xchg
cwtl
inc
int3
and
xchg
fistpll
gs
adc
mov
push
clc
cmp
adc
and
inc
test
xchg
sub
jp
in
inc
call
mov
loop
clc
loope
lds
fiaddl
mov
add
dec
cmp
mov
jnp
pop
cmp
sahf
inc
add
fldln2
push
push
outsl
pop
cmp
test
jbe
shlb
push
xor
es
cltd
jg
sub
fwait
shrl
add
xor
xchg
dec
int3
loopne
scas
out
push
lock
push
xchg
movsl
call
dec
jmp
push
imull
mov
repz
nop
cmp
xorl
pushw
mov
fildl
stc
les
jb
push
add
les
push
and
pop
shlb
xchg
or
fcompl
pop
xor
pop
xchg
dec
aad
cli
sbb
add
push
inc
imul
inc
daa
pop
in
cmp
sub
dec
mov
and
int
test
or
sti
repz
ret
pop
fidivrl
mov
fdivrl
test
dec
lcall
jp
inc
insb
dec
arpl
add
mov
popa
out
or
xor
jmp
mov
inc
adc
mov
aad
mov
and
movb
xor
adc
jmp
cmc
jp
pop
mov
adc
roll
stos
jae
ja
js
xchg
push
xchg
cltd
dec
mov
sbb
dec
dec
lret
cmp
mov
push
imul
jmp
icebp
int3
fs
mov
popa
xchg
pop
imul
divb
int
out
push
push
inc
sbb
jp
mov
pop
jno
out
test
mov
or
flds
mov
cmp
inc
shrl
jmp
add
bound
mov
in
add
jbe
popa
and
xlat
cmp
jmp
pop
mov
repz
mov
call
std
adc
lcall
decb
enter
outsl
in
jl
dec
cmp
rclb
cmp
aad
xchg
ljmp
jmp
mov
scas
call
vmread
out
loop
jecxz
imul
out
and
jl
push
or
xchg
sbb
int3
push
das
adc
out
mov
add
repz
in
call
mov
lret
jmp
push
mov
xor
and
enter
aad
jns
xorl
sahf
enter
leave
aaa
xchg
int3
xchg
xchg
or
add
add
xchg
add
inc
xchg
pop
popa
add
jg
dec
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
add
push
mov
