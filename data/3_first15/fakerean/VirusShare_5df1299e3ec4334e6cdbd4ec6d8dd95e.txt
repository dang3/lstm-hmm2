and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
out
aas
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
test
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
ds
add
lea
push
mov
mov
cld
sub
adc
inc
int3
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
je
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
adc
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
and
adc
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
adc
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
cmp
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
jo
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
add
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
cli
sub
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
xchg
sbb
call
add
leave
ret
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
push
ds
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
pushf
and
inc
mov
add
add
inc
mov
add
add
inc
mov
add
add
adc
add
lods
add
add
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
pop
sbb
inc
lock
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
dec
adc
ja
mov
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
and
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
pusha
push
call
mov
add
add
add
outsl
xchg
push
popf
mov
add
xchg
sbbb
fstps
add
cwtl
add
add
addl
cmc
add
add
mov
mov
push
xchg
xorl
hlt
std
xchg
add
in
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
shlb
add
add
push
sahf
xlat
fwait
add
pusha
add
popf
add
add
in
add
add
add
addl
mov
push
mov
aam
bound
popl
push
lea
push
lea
push
call
flds
les
xchg
add
mov
loopne
xlat
add
add
ret
push
add
ja
add
add
add
pop
xchg
push
pop
cli
addr16
sti
popa
mov
mov
add
add
add
add
xlat
mov
cwtl
add
xchg
mov
add
popa
roll
cmc
cmpsl
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
call
jp
fucomp
push
stos
popa
add
out
scas
add
add
in
add
add
shll
push
xchg
nop
add
clc
iret
mov
add
cmc
xchg
sbbb
jp
add
mov
xchg
mov
add
mov
mov
lea
pop
push
push
push
push
push
push
lea
push
push
call
push
add
out
add
fucomp
xchg
leave
add
pop
insb
jae
push
mov
cmpsl
add
repnz
repnz
fistpll
mov
add
out
jge
imul
push
mov
icebp
add
mov
testb
add
xchg
ja
add
jl
push
mov
lea
pop
push
push
push
call
mov
fucomp
mov
sarb
push
add
nop
add
cwtl
add
ficoml
add
jmp
arpl
add
add
add
cmpsl
add
jne
add
add
add
add
cmpsl
jge
pop
add
add
cwtl
add
xchg
pop
mov
lea
pop
call
push
push
push
push
push
push
call
pusha
mov
add
in
add
in
add
add
lahf
pop
imul
add
mov
jbe
test
fsub
add
mov
add
mov
xchg
add
add
hlt
mov
test
add
jl
mov
imul
add
add
cmpsl
mov
add
add
lret
add
add
add
pop
push
fldl
add
pop
call
push
push
push
push
call
bound
leave
xchg
loopne
push
lock
lods
add
mov
shr
stos
add
add
add
rolb
sti
mov
mov
mov
jecxz
mov
push
mov
ror
add
add
push
add
mov
mov
pop
add
add
add
push
push
jns
hlt
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
pop
add
add
hlt
add
add
roll
add
lret
add
js
xchg
ljmp
mov
cmpsl
add
scas
mov
out
add
add
cli
mov
outsl
xlat
fnsave
hlt
mov
xchg
add
in
test
popf
add
add
jmp
push
popl
jmp
add
iret
fcoms
jl
add
mov
lea
pop
call
push
lea
push
lea
push
push
lea
push
push
push
push
call
xchg
add
jno
roll
fs
ficomps
aam
add
add
cmpsb
add
add
add
jae
aam
mov
leave
sti
nop
mov
add
add
pop
mov
loopne
add
add
movsl
fadd
aam
push
add
add
xchg
add
js
pop
add
cmpb
add
pop
jmp
ret
push
push
lea
push
push
push
push
call
xchg
hlt
add
addl
movsl
jbe
add
add
add
add
add
add
pushf
filds
add
rcrb
mov
add
add
fiaddl
lods
lret
idiv
test
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
call
clc
add
add
cmpsl
mov
mov
insb
add
rolb
add
push
enter
xchg
jmp
roll
mov
arpl
add
mov
push
add
jp
shlb
repnz
add
add
add
mov
add
roll
hlt
mov
xchg
outsl
add
mov
add
add
stos
stos
add
roll
fbld
lea
pop
mov
push
push
push
push
lea
push
push
call
hlt
mov
push
add
add
mov
mov
rolb
push
cmpsl
add
push
clc
xchg
xchg
jp
movsl
sahf
rcrb
mov
test
add
cltd
add
movb
lock
add
fiadds
lcall
pop
add
push
jecxz
les
in
mov
cld
lea
pop
add
push
push
push
push
call
jge
add
stc
movsl
out
fistpl
mov
mov
add
add
scas
sti
add
add
add
push
lock
pusha
add
add
jno
lcall
adc
ret
add
add
add
push
push
push
call
lret
rcl
add
stc
add
add
hlt
add
int3
orb
stos
in
jecxz
imul
add
add
pop
add
add
add
adcl
add
add
hlt
rcl
add
sti
push
pop
pop
int3
add
add
add
lret
cmpsl
push
sti
cld
xchg
jnp
int3
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
call
add
add
lds
lret
cmpsb
add
pop
mov
xlat
add
cmpsl
add
stos
add
add
cld
enter
jecxz
bound
add
pop
add
fwait
add
add
pop
xor
push
push
lea
push
push
lea
push
call
fidivrs
addb
add
mov
hlt
add
addr16
lock
scas
fistl
add
add
hlt
hlt
add
add
rolb
enter
mov
fiaddl
pop
nop
in
add
lahf
test
pop
add
add
jbe
pop
ret
add
je
iret
push
add
data16
mov
lea
pop
add
push
push
shl
not
not
push
or
not
add
xor
inc
add
sub
shr
sub
pop
add
pop
push
push
lea
push
push
lea
push
push
push
call
add
mov
cmpsb
add
cltd
ja
mov
shr
mov
hlt
lods
sahf
test
add
out
gs
stc
cmpl
fadds
add
add
add
add
test
popa
add
cwtl
imul
cmc
leave
push
ret
mov
nop
sahf
into
jns
in
int
je
add
pusha
fisubrs
add
add
lea
mov
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
sti
push
out
add
push
add
add
mov
popf
stc
add
push
add
cmp
add
leave
mov
lods
call
shlb
add
cltd
mov
ficoml
popa
add
add
loopne
add
popa
int3
mov
cltd
jb
jle
add
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
pusha
add
mov
ja
add
lock
add
xchg
add
js
pop
push
add
xchg
mov
fiadds
roll
xchg
add
add
add
add
frstor
mov
xchg
scas
clc
add
pop
add
fildl
pop
insb
jge
cmpsl
mov
push
cld
jecxz
mov
add
add
mov
lea
pop
mov
movl
push
push
lea
push
push
push
push
push
push
call
add
aad
add
mov
in
fisubl
scas
lret
add
mov
add
iret
lret
imull
add
add
add
std
add
add
std
mov
je
stc
mov
add
int
lret
aam
add
push
stc
add
hlt
leave
sarb
in
add
cld
lea
pop
lea
push
push
push
push
push
call
cmc
add
mov
cwtl
out
out
add
sahf
add
jge
loopne
add
out
lds
add
add
add
push
aad
fs
pushf
fildl
add
jbe
add
push
add
add
jl
mov
add
iret
mov
out
mov
add
test
xchg
mov
add
xchg
push
mov
lea
pop
push
push
push
lea
push
push
call
aad
add
add
add
xchg
push
jns
fmuls
add
add
out
lods
add
sub
mov
pop
loopne
xchg
add
jae
repnz
push
add
add
movb
add
push
aam
add
add
add
stc
add
divl
xchg
and
jo
add
add
add
add
cmpsl
add
fcmovne
fs
xchg
loope
movb
add
pop
pushl
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
jnp
add
lods
js
fldl
enter
jmp
add
add
push
mov
add
add
mov
shll
mov
movsl
mov
add
add
cmp
jmp
int3
add
xchg
mov
sahf
add
add
std
add
jp
add
mov
cmpsb
add
add
jmp
arpl
pop
pushl
push
push
lea
push
push
call
add
shlb
add
lea
add
add
mov
loopne
add
add
pop
nop
add
fstl
push
fcomps
add
xlat
add
imul
testl
loop
test
jb
add
std
add
lock
bound
mov
lea
pop
call
push
push
push
push
push
push
call
mov
mov
subb
add
repnz
add
movsl
xchg
lret
add
jne
jmp
add
add
add
cltd
aad
add
ljmp
nop
pop
add
pop
je
add
mov
jp
add
mov
les
jne
pushl
push
lea
push
lea
push
push
call
fwait
xchg
add
mov
add
into
add
fldl
add
add
add
pop
add
add
loopne
xchg
mov
add
sahf
popf
pusha
add
jbe
mov
add
std
add
add
cmc
add
add
push
add
incb
mov
pop
call
push
push
sub
sub
push
and
add
add
dec
add
sub
ror
xor
inc
pop
shr
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
pop
jb
jo
add
add
cwtl
mov
in
add
into
mov
jns
stos
lea
mov
add
lds
add
add
mov
lea
pop
pushl
push
push
call
scas
aad
pusha
mov
jb
out
pop
push
add
jne
add
push
outsl
ficoms
add
add
xchg
loope
ljmp
add
add
lds
xchg
add
loop
stc
pusha
mov
jae
add
add
sahf
mov
lea
pop
call
push
push
lea
push
push
push
push
lea
push
push
call
add
lds
jno
add
add
add
jmp
filds
mov
add
mov
cmpsl
add
clc
testl
loopne
jge
add
add
xchg
mov
lahf
rorl
pop
push
push
push
xor
push
or
inc
add
shr
ror
dec
sub
rol
shr
inc
pop
add
sub
sub
pop
push
push
push
push
lea
push
call
cmpsl
jmp
in
add
add
mov
rolb
add
add
out
js
rol
jp
jae
add
add
push
add
lahf
cltd
add
addr16
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
mov
add
in
pop
push
ljmp
testb
testl
jecxz
mov
add
test
add
mov
add
test
call
push
push
movsb
add
in
add
add
shl
add
loopne
add
data16
push
push
push
push
push
push
push
push
push
call
cmp
add
add
add
test
add
lahf
rolb
mov
in
add
bound
rolb
jb
add
mov
add
add
ljmp
mov
add
add
lods
add
lock
lea
pop
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
xchg
add
push
xchg
jns
gs
add
test
jo
add
icebp
push
add
testl
faddp
add
popa
ljmp
jecxz
jns
ja
pop
add
add
mov
hlt
push
addb
mov
popf
add
out
mov
add
add
cmpb
add
push
mov
into
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
imul
scas
leave
mov
add
ret
out
lahf
not
into
add
add
mov
lock
mov
jb
add
call
lcall
int3
add
js
add
data16
push
push
push
push
push
push
call
popf
add
push
cmc
add
add
pusha
gs
cmpsb
mov
flds
jle
insb
mov
add
pop
fistl
jno
outsl
add
test
into
jo
add
add
add
add
js
add
mov
icebp
add
add
stos
call
add
hlt
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
pop
add
jl
shrb
xchg
add
add
arpl
add
add
mov
pop
movb
mov
mov
mov
sti
movsl
inc
add
leave
addl
cli
test
pop
add
add
pop
mov
fmull
pop
in
add
push
lea
push
push
call
fildl
jo
xchg
add
jecxz
call
popf
mov
add
cli
andb
add
add
add
out
ja
les
stos
add
mov
add
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
addr16
mov
add
push
add
lret
in
add
mov
add
xchg
add
not
add
xchg
test
jge
mov
add
push
arpl
cmpsb
testb
add
roll
fwait
test
add
mov
loope
pop
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
clc
mov
add
add
add
call
add
testb
add
add
add
jbe
jp
pop
mov
lret
add
add
fdivs
cld
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
call
add
add
jbe
lcall
jno
enter
add
add
mov
loopew
add
add
fsubrs
mov
add
mov
add
jbe
add
rolb
add
jo
add
add
add
cltd
test
mov
mov
mov
std
jbe
add
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
call
add
jmp
add
pop
jmp
add
mov
mov
jae
add
add
mov
add
in
add
fidivs
sahf
mov
add
add
lods
mov
xchg
add
movsb
js
mov
xchg
add
push
test
push
flds
js
add
pop
add
push
push
push
push
lea
push
lea
push
push
push
call
cmpsb
js
add
mov
add
add
mov
push
test
lods
jns
pop
add
scas
add
add
mov
int
in
add
mulb
xchg
test
mov
xlat
jb
pusha
mov
jmp
add
jne
add
add
in
rcl
scas
shrl
add
mov
add
pop
add
push
push
push
push
push
call
xchg
flds
pop
jge
rcrl
mov
mov
add
div
testb
aam
xor
lea
add
jge
ret
add
xchg
mov
xchg
mov
data16
data16
add
mov
andb
lea
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
cli
add
ljmp
cld
lods
add
add
outsl
add
add
xchg
pop
push
add
iret
jge
push
int3
divb
int3
sahf
into
jp
and
bound
enter
jle
add
add
add
add
mov
mov
lock
add
add
stos
mov
lea
pop
mov
push
push
push
push
push
push
call
push
jle
push
add
add
jne
enter
jo
loop
test
out
jmp
add
je
test
jnp
shrb
enter
lods
add
mov
push
add
add
out
add
add
ljmp
jmp
add
pop
xor
push
lea
push
call
add
loopne
add
add
cwtl
add
add
stos
mov
mov
bound
pushf
add
add
in
into
stc
mov
cwtl
mov
add
enter
pop
mov
lea
pop
add
push
push
push
push
call
fildl
mov
jo
add
cmp
fs
mov
gs
cltd
pop
push
mov
push
add
add
nop
std
add
mov
add
add
fisubs
add
iret
xchg
xchg
lret
popa
add
cmc
sahf
lds
fildl
add
add
add
xchg
jp
rol
add
jl
xchg
jno
int3
lea
pop
add
pop
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
cltd
add
pop
scas
cli
add
fisttpl
aad
mov
pop
loope
rcl
add
hlt
add
add
add
lods
add
lds
add
xchg
add
push
ja
add
xchg
cmpsb
add
je
add
add
jbe
add
shl
fdiv
mov
push
fildl
add
jbe
xchg
add
pop
mov
xor
push
push
call
fiadds
gs
add
fldl
fcmovb
outsl
add
xchg
add
insb
add
add
add
add
add
andl
add
add
leave
cld
mov
addb
xorl
mov
lea
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
int
mov
add
repnz
imul
arpl
shrl
out
mov
pop
add
add
add
mov
mov
add
in
add
push
cmpsl
jmp
in
add
add
mov
add
arpl
add
out
jno
jo
mov
lea
pop
mov
xor
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
jbe
add
sti
cli
add
int3
xchg
roll
fs
jecxz
data16
add
add
loop
push
pop
add
add
mov
mov
jne
lods
add
add
add
add
add
add
arpl
sahf
fwait
and
mov
lea
pop
sub
push
lea
push
push
lea
push
push
call
testb
leave
fmul
add
mov
popf
divl
roll
iret
flds
js
loopne
add
movsl
in
movl
mov
jge
lds
pushf
fnsave
add
mov
add
mov
adc
pop
push
push
push
push
push
call
in
mov
fiaddl
add
add
add
int3
jbe
test
mov
add
std
loopne
push
les
add
movl
jo
incb
add
leave
xchg
xchg
in
jb
add
stos
mov
jecxz
movsb
scas
xchg
rcrb
cmpsl
ljmp
mov
lea
pop
rep
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
std
push
jae
mov
mov
mov
cltd
mov
fnstenv
rcl
add
mov
je
push
mov
add
popf
add
xchg
add
call
jae
mov
jnp
mov
mov
sti
cmpb
add
jecxz
add
add
pop
fimuls
fstps
add
sub
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
add
into
add
mov
add
lcall
push
fnstenv
add
out
add
add
loope
xchg
add
scas
pop
fimull
pop
mov
push
push
push
push
push
call
push
add
mov
add
cmpsl
out
arpl
add
add
mov
bound
hlt
xchg
mov
add
add
add
out
add
add
jmp
fidivrs
add
add
jnp
mov
repnz
loope
arpl
fldenv
fucom
add
mov
lea
pop
add
push
rol
pop
add
add
push
dec
add
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
jle
jno
add
add
add
add
movsl
add
add
test
push
addr16
nop
add
add
add
add
fiadds
mov
add
add
mov
testb
jno
adc
rolb
loopne
jno
jl
add
test
imul
add
pop
xor
push
push
call
mov
add
add
add
mov
pop
push
pop
lret
add
mov
mov
mov
add
add
xchg
test
add
add
mov
sti
xlat
xchg
xchg
add
std
add
imul
jo
mov
aam
add
fs
into
push
add
mov
lea
pop
add
push
lea
push
lea
push
push
call
loopne
lret
mov
add
add
cli
xchg
xchg
in
arpl
stos
add
add
add
add
add
std
jno
add
adc
push
and
repnz
xor
inc
lea
shr
lea
pop
mov
xor
push
rol
shr
pop
add
push
shr
lea
pop
add
mov
push
push
add
not
rol
xor
push
or
inc
add
lea
shl
sub
xor
lea
shr
pop
xor
add
pop
push
shl
pop
pushl
push
lea
push
push
call
arpl
push
add
les
lods
loop
mov
ljmp
imul
mov
jl
lahf
add
add
stc
in
add
add
rol
add
xchg
add
add
add
lret
add
rclb
jne
add
add
fs
lea
pop
call
push
not
dec
xor
lea
pop
push
push
push
inc
sub
dec
push
and
add
dec
shl
sub
sub
pop
not
sub
shr
add
pop
push
sub
pop
push
push
inc
shr
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
notb
test
mov
in
jae
add
mov
add
js
aad
leave
add
lock
add
mov
mov
add
jl
mov
cwtl
rcrb
add
push
testl
lods
lret
sti
add
mov
mov
jecxz
pop
mov
lea
pop
call
push
ror
inc
pop
mov
push
push
pop
push
mov
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
pop
xlat
stc
fmul
imul
aam
push
loop
popl
add
add
fdivr
test
les
test
mov
mov
aam
push
mov
add
add
xlat
add
jmp
xchg
add
mov
mov
out
repnz
jle
add
add
add
mov
mov
stos
mov
lea
pop
add
push
push
call
iret
add
fxam
mov
mov
jnp
add
mov
push
mov
add
add
xlat
out
cld
jno
cmc
arpl
jns
xchg
add
add
add
mov
add
call
push
test
into
addr16
int3
add
jl
int
nop
xlat
jge
pop
add
mov
lea
pop
add
push
inc
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
call
add
imul
add
popa
mov
xchg
add
movsb
add
lcall
in
enter
in
add
pusha
jecxz
leave
add
pushf
test
data16
add
add
add
mov
bnd
jbe
loope
add
movsb
add
pop
mov
mov
lea
pop
mov
xor
push
shl
lea
shl
rol
pop
add
push
shl
add
pop
push
push
xor
shl
lea
pop
mov
push
push
push
push
push
push
push
push
call
push
xchg
add
mov
xchg
enter
jl
nop
pushf
add
shll
lahf
add
lahf
push
mov
add
add
add
mov
mov
movb
add
scas
out
add
add
int
mov
scas
add
mov
popa
filds
enter
add
add
scas
mov
hlt
lea
pop
xor
push
push
lea
push
push
push
call
sti
fcom
mov
stos
add
add
lock
cmpsl
add
add
add
sarb
add
je
add
jb
fcmovne
add
add
jle
addl
add
add
pop
jb
mov
add
mov
aam
add
add
add
int3
lea
pop
add
push
inc
sub
sub
pop
add
push
sub
shl
add
pop
pop
push
lea
push
lea
push
call
mov
push
jge
add
xchg
add
ljmp
add
mov
add
push
add
jae
mov
add
in
loope
xchg
fninit
add
push
add
cwtl
mov
xchg
add
add
jae
pop
pusha
add
push
add
add
mov
rolb
loopne
mov
fists
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
addl
add
add
andl
fwait
addr16
cltd
jecxz
add
roll
incb
xchg
add
add
in
outsl
mov
popf
add
fldcw
popf
pop
push
add
int
add
int3
add
push
mov
xlat
orl
xor
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
jae
mov
lcall
add
mov
add
pop
add
mov
add
add
add
jo
loopne
push
testb
mov
mov
stc
je
add
add
jmp
pop
add
add
mov
les
les
add
rol
pop
rep
push
inc
sub
shr
xor
pop
mov
push
push
push
push
call
rolb
push
fdivrs
add
addr16
pop
fadds
out
push
xlat
xchg
arpl
subl
add
mov
call
int
push
jl
rcl
enter
pop
add
add
add
pop
xor
push
push
push
push
push
call
add
add
add
jp
add
clc
pop
cli
add
mov
scas
add
movsb
shl
scas
scas
add
push
add
and
add
add
add
push
add
in
jns
add
mov
rolb
add
int3
add
cmpsl
cwtl
add
xchg
std
mov
aad
mov
lea
pop
add
push
lea
push
push
lea
push
lea
push
call
jle
leave
jle
xchg
out
test
push
lea
stos
ja
add
pusha
loop
std
jb
je
rclb
lret
aad
add
je
xchg
mov
push
add
in
add
add
jo
add
push
insb
mov
lea
pop
or
je
push
sub
pop
mov
xor
push
shr
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
mov
test
lea
ret
nop
iret
add
in
stc
stc
sti
xchg
add
push
xchg
in
add
xchg
fxam
push
add
lahf
loope
add
lcall
add
add
push
ret
jbe
add
add
pop
xor
push
lea
push
lea
push
call
fldenv
push
out
bound
add
jge
add
add
je
add
insb
xchg
rorb
fidivl
fwait
lret
add
sahf
jo
xchg
add
test
add
push
xchg
add
cltd
sti
add
add
iret
out
add
add
loopne
add
add
or
add
push
push
push
push
push
push
call
add
jecxz
add
jmp
test
add
add
push
xchg
cmpsl
pop
arpl
add
or
add
add
stos
mov
add
int3
gs
cmpl
push
add
arpl
popf
in
mov
hlt
lea
pop
add
add
push
shr
add
pop
push
push
push
push
push
push
call
pushf
testl
scas
add
xchg
mov
xchg
imul
add
in
mov
add
adcl
in
xchg
add
stos
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
insb
test
loope
sbbl
scas
add
add
mov
add
lcall
add
add
out
int
movsl
pusha
popf
mov
add
add
add
add
sahf
loopne
movsb
popf
outsl
enter
test
jns
fwait
add
testl
add
add
jne
repnz
scas
add
pop
xor
push
push
push
push
call
add
insb
jae
xchg
mov
add
add
out
add
pop
xchg
push
xchg
add
outsl
add
shrb
lcall
add
mov
imul
add
out
add
add
loopne
test
sti
mul
add
pop
add
push
push
push
push
call
mov
mov
add
icebp
add
mov
add
mov
mov
add
fwait
scas
fwait
xchg
push
popf
mov
mov
mov
add
mov
int3
lea
pop
add
push
not
add
add
pop
pop
push
lea
push
call
incb
push
add
add
addr16
mov
popf
cmc
add
stos
cmc
mov
fwait
pop
add
imul
xchg
xchg
push
roll
push
fsubr
out
loope
pushw
mov
test
xchg
add
push
enter
loop
xchg
int
js
add
cltd
mov
xchg
mov
lea
pop
rep
push
add
add
ror
pop
mov
push
push
push
push
push
push
push
push
push
call
rcrw
into
fcompl
push
push
add
call
lods
xchg
fwait
mov
testb
xchg
mov
test
mov
testl
aam
add
mov
mov
mov
add
pop
xor
push
lea
push
lea
push
push
push
push
call
jo
jmp
fistps
add
add
jae
movb
mov
fcmovbe
push
out
in
xchg
imul
mov
xchg
lds
add
imul
addl
mov
add
stos
mov
add
add
cld
flds
add
mov
int3
lea
pop
add
push
shl
pop
or
je
push
push
push
push
call
sti
jns
mov
mov
jbe
cmpb
shl
into
jb
mov
push
add
popl
add
cld
add
mov
add
pop
filds
add
cltd
add
stos
arpl
add
mov
mov
shrb
add
les
add
pop
add
add
add
add
int3
lea
pop
mov
push
push
push
lea
push
push
push
call
fiadds
roll
out
insb
add
lret
mov
mov
add
jo
sarb
sarl
in
mov
rolb
add
cmc
loopew
mov
lea
pop
add
push
push
push
lea
push
push
push
push
call
call
add
mov
aad
add
add
out
loopne
add
add
add
jge
out
add
add
lret
mov
jp
add
add
popf
mov
mov
pop
stos
add
pop
cld
add
sub
lret
add
jge
nop
add
mov
lea
pop
add
rep
push
push
push
call
add
iret
cli
add
int
out
scas
scas
cltd
jb
sti
imul
add
in
jp
lret
add
add
mov
add
add
mov
add
in
notl
xchg
add
into
pop
lahf
mov
addr16
pop
push
push
sub
push
or
not
add
sub
sub
dec
shr
pop
xor
rol
rol
pop
push
push
push
lea
push
lea
push
push
push
call
add
lret
add
mov
add
stc
add
add
loopne
test
mov
add
pushf
out
xchg
add
add
aad
pop
mov
call
add
fwait
ror
add
addb
mov
lea
pop
pop
push
dec
lea
pop
mov
mov
push
lea
push
lea
push
call
mov
add
add
out
add
add
add
add
lret
pop
pop
add
xchg
xchg
scas
rclb
add
fadds
rolb
jne
mov
lahf
add
add
push
mov
add
stos
lea
add
out
jmp
mov
lea
pop
mov
jmp
push
lea
push
push
call
add
jae
add
cld
add
jb
xchg
push
icebp
add
lock
fadd
movsl
lods
mov
add
push
int
js
fidivrs
add
add
mov
call
add
add
add
add
mov
mov
lahf
add
pop
mov
xchg
mov
add
add
push
mov
lea
pop
push
push
push
push
push
push
call
add
mov
mov
int3
add
hlt
add
add
jo
into
mov
add
mov
mov
int
jmp
add
mov
adc
mov
push
push
push
push
push
push
push
call
test
pop
jne
bound
push
add
stos
int
add
andb
add
lods
rorl
add
pop
add
jecxz
int
ljmp
xchg
add
out
notb
in
out
in
add
fstpl
add
add
add
push
add
pop
mov
mov
lea
pop
add
push
push
add
pop
push
push
push
add
sub
shl
pop
push
mov
push
lea
pop
pop
push
push
push
push
call
out
add
add
mul
mov
mov
mov
test
add
sti
jne
loop
lock
add
mov
ret
incb
mov
lea
test
mov
imul
cwtl
test
add
mov
lea
pop
pop
pop
push
push
push
push
lea
push
call
sar
popa
add
mov
popa
add
push
add
mov
add
mov
in
arpl
sbbb
jne
mov
add
add
pop
pop
push
lea
push
lea
push
lea
push
push
call
add
add
add
xchg
cltd
add
add
add
fmul
mov
jnp
test
mov
mov
jne
xchg
push
add
add
adcl
jno
add
in
ja
lea
add
movsb
mov
pusha
adc
leave
push
push
lea
push
push
lea
push
call
pushf
lret
ror
add
notl
add
mov
mov
lods
add
add
cld
cld
cltd
xchg
mov
add
add
add
xchg
add
add
outsl
add
fnstsw
pushf
xchg
add
add
add
add
shll
add
mov
lea
pop
ret
push
push
lea
push
push
call
add
movsb
nop
xchg
mov
mov
xchg
loope
add
add
add
push
popa
ret
add
fdivr
mov
add
pop
jno
add
fnstenv
andb
in
mov
in
scas
lock
mov
loope
out
rolb
add
mov
jp
clc
icebp
ja
mov
cld
lea
pop
push
mov
push
push
push
push
call
ret
imul
mov
lea
add
popa
mov
pop
arpl
push
xchg
add
push
popf
add
mov
scas
pop
imul
pop
add
mov
mov
sarl
scas
roll
jbe
mov
add
pusha
adc
clc
push
lea
push
push
push
push
push
push
lea
push
push
call
push
push
scas
roll
cmc
add
add
fidivs
add
add
add
add
jno
call
xorl
mov
add
movsl
addb
jne
cwtl
add
mov
add
pop
push
lods
test
outsl
add
movsl
add
sti
xlat
add
rolb
push
testl
add
lea
pop
push
push
push
push
push
lea
push
call
mov
add
scas
add
out
push
aad
add
add
pop
imul
mov
xchg
add
jmp
lcall
add
nop
push
arpl
fisubrl
xlat
rclb
lcall
jne
stos
add
int3
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
out
outsl
mov
jnp
cltd
cwtl
aad
ror
mov
mov
sarb
add
xchg
push
add
push
jae
shlb
movsb
add
add
add
scas
gs
add
jbe
add
mov
add
mov
lea
pop
push
push
push
call
add
lea
add
jno
cld
roll
fiadds
mov
mov
mov
add
add
cli
add
add
faddl
into
add
mov
add
test
ret
add
mov
add
add
insb
add
jmp
rolb
in
push
add
mov
leave
leave
jp
add
imul
or
les
inc
cld
add
add
push
dec
shl
lea
pop
addl
push
push
push
push
push
call
add
out
add
test
out
add
movb
add
pop
jnp
fiadds
add
add
mov
cltd
add
add
sarb
add
out
std
add
add
popa
push
movsl
add
je
push
add
jmp
outsl
outsl
repnz
popl
add
add
pop
test
je
push
sub
shr
lea
pop
mov
push
add
ror
inc
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
jnp
add
add
add
lahf
add
pop
pop
add
add
add
mov
int3
xchg
add
add
add
movsb
in
lods
mov
into
fwait
addl
ficoms
add
js
jmp
add
add
add
add
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
add
fldln2
cmc
sar
in
int
add
data16
jmp
add
repnz
push
in
out
add
pop
push
jmp
xorl
mov
addb
add
mov
lods
add
add
fstl
add
lods
jnp
add
mov
lea
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
push
add
filds
mov
push
add
add
in
lock
mov
add
add
icebp
fidivl
out
jle
push
jmp
jae
popf
leave
push
lds
pop
push
mov
add
xchg
je
test
popa
add
add
add
mov
xchg
mov
int
shr
jns
add
jae
aam
bound
leave
ret
push
lea
push
push
push
call
in
movb
mov
aam
add
cli
push
shlb
cmpsl
add
cmc
pop
add
mov
add
pusha
cld
ja
add
add
mov
add
add
hlt
scas
sar
add
xchg
mov
add
mov
xchg
add
ljmp
les
lret
add
jp
pop
sbbb
fmull
push
xor
pop
mov
push
shr
pop
add
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
je
or
shr
add
push
mov
adc
nop
mov
xchg
add
add
mov
ljmp
add
push
xchg
add
lods
add
add
add
js
xchg
mov
add
fimull
pop
push
push
push
lea
lea
shr
pop
push
push
push
push
push
push
push
push
call
in
out
pop
add
add
add
add
pop
imul
jno
int3
cltd
push
divl
data16
add
jp
add
xchg
stc
int
push
enter
push
popl
push
add
jns
mov
stos
add
push
adcb
mov
add
mov
lea
pop
push
push
lea
push
call
add
scas
add
add
in
mov
add
add
add
mov
mov
add
add
lods
add
jnp
imul
fsubrs
data16
add
pop
rorl
add
in
in
add
int3
lea
pop
testl
addl
push
lea
push
push
push
push
push
lea
push
call
ja
xchg
addr16
jp
add
bound
shl
jle
sbbl
push
add
mul
add
add
xchg
test
cmp
xchg
mov
jle
mov
add
ret
bound
add
sahf
testl
push
add
add
add
les
add
push
push
call
add
aad
testl
push
roll
je
mov
imul
add
ljmp
in
push
imul
hlt
add
mov
push
pop
stc
shr
mov
add
mov
data16
in
push
add
in
mov
cmc
movsb
pop
jge
add
mov
nop
int
pop
cmpsb
rcrb
test
add
js
add
add
mov
lea
pop
call
push
inc
pop
mov
pushl
push
inc
add
pop
push
push
push
sub
sub
ror
pop
call
cmpl
jne
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
fmull
push
ret
xchg
mov
add
subl
add
loopne
add
push
mov
lods
pop
movsb
fucomip
test
repnz
mov
mov
push
add
add
in
add
fidivrs
sub
push
push
call
pusha
add
add
add
push
xchg
lahf
pushf
fistl
xlat
add
pop
push
add
cmc
add
outsl
jle
pop
add
add
add
push
add
imul
add
imulb
add
addl
jnp
push
add
jecxz
add
shlb
loope
add
add
lea
pop
pop
pop
push
inc
not
shl
pop
pop
push
dec
pop
leave
ret
push
push
push
push
push
lea
push
call
add
add
jns
shl
bnd
add
add
mov
mov
cld
out
movsl
add
mov
call
lods
mov
lea
pop
push
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
gs
out
add
sahf
push
add
xlat
add
pop
push
add
add
clc
fmul
scas
lock
enter
add
pop
add
pop
mov
pop
mov
sub
add
add
lock
movsl
outsl
add
addr16
addl
cwtl
stc
add
push
xchg
mov
cmpsb
mov
lea
pop
add
push
shl
sub
rol
pop
push
push
push
push
lea
push
lea
push
call
cwtl
add
je
add
mov
add
mov
lahf
add
imul
jo
add
loopne
out
in
add
sbbl
sarl
mov
xchg
add
mov
lea
pop
push
push
shr
sub
pop
push
push
inc
lea
pop
push
movl
push
shr
pop
push
call
push
not
pop
push
call
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jge
out
sub
ja
xorb
hlt
add
add
js
ljmp
add
xchg
pop
mov
in
add
add
scas
push
mov
out
xlat
add
add
mov
lea
pop
subl
cmpl
jne
push
push
lea
push
call
add
lea
add
popa
add
add
add
jno
jo
mov
imul
adcl
add
push
mov
je
add
cmc
add
out
add
pop
add
add
fimull
add
enter
mov
fldcw
mov
lahf
xchg
add
sti
add
out
call
jecxz
add
fimull
pop
pop
push
push
call
test
jmp
shlb
add
ljmp
add
add
repnz
jp
movsb
add
lock
cli
pop
fcmovnb
add
jno
mov
add
stos
ljmp
in
xlat
add
fildl
mov
add
xchg
push
pop
scas
lcall
out
add
mov
movsb
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
addl
repnz
add
addb
add
xchg
add
std
in
in
xchg
popf
add
add
add
add
mov
bound
lds
leave
add
add
lods
lock
add
mov
lea
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
fcompl
mov
popl
push
mov
add
add
add
add
add
icebp
add
test
add
add
push
add
add
cmpsl
add
mov
add
cmpsb
out
mov
xlat
jmp
cwtl
pop
add
push
orb
add
mov
roll
add
add
pop
leave
ret
push
lea
dec
pop
push
push
ror
pop
mov
push
lea
push
push
push
call
add
add
pop
add
mov
cmpsb
movl
mov
bnd
loope
call
add
add
push
mov
add
mov
sahf
add
pop
xchg
cmc
add
xchg
add
add
icebp
add
imul
push
add
lods
jnp
roll
xchg
clc
add
add
add
add
rcr
push
call
aam
scas
mov
int3
lea
pop
add
push
push
push
push
push
call
mov
gs
add
lcall
add
cmpsl
pop
mov
add
in
fildl
add
stc
add
mov
add
add
pop
add
lcall
out
ja
jbe
addl
add
ljmp
add
add
add
les
push
push
add
pop
push
push
xor
inc
inc
not
pop
push
push
lea
push
push
push
push
push
call
add
lods
out
movsl
rolb
flds
add
add
mov
add
out
add
cwtl
mov
fcmove
add
flds
mov
jne
fimuls
pop
lret
shr
mov
add
add
mov
mov
ja
out
jecxz
mov
lea
pop
mov
lea
push
pop
sub
push
push
push
lea
push
push
push
lea
push
push
push
call
clc
add
mov
mov
add
test
ret
jmp
xlat
scas
add
rolb
add
add
in
add
jno
int3
add
fwait
mov
add
les
add
pop
mov
lea
pop
mov
shr
push
not
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
add
add
subl
jecxz
add
cltd
add
movl
add
xchg
roll
mov
test
xchg
out
sti
push
add
movsb
jl
mov
mov
outsl
leave
cmpsb
clc
add
jne
ja
xchg
fxch
mov
and
inc
cld
push
ror
shr
ror
shl
pop
mov
push
shl
pop
add
push
pop
add
mov
push
inc
sub
dec
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
testb
add
add
add
movsb
popf
cmpsb
stc
mov
add
add
push
add
add
add
mov
jl
lock
bound
shlb
int3
rcrb
jmp
icebp
add
je
add
mov
test
xchg
add
in
add
loope
rolb
add
add
and
cmp
jne
push
sub
ror
shr
xor
pop
cmp
jne
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
popl
aam
fadds
out
test
pop
movsb
xchg
mov
add
int
push
add
testl
add
mov
add
add
leave
add
leave
mov
add
push
addl
xchg
fiadds
xchg
popa
jns
jo
outsl
jl
mov
add
mov
sub
inc
adc
ljmp
ficomps
add
add
add
shr
into
pop
jmp
mov
push
lea
push
push
call
add
add
add
add
add
xchg
loopne
jb
lds
mov
add
out
add
push
pop
add
add
add
jbe
add
imul
xchg
movl
add
ljmp
pop
mov
sub
jne
push
sub
pop
mov
push
shl
dec
ror
dec
pop
movl
push
xor
add
ror
pop
jmp
mov
push
dec
dec
ror
pop
mov
push
xor
xor
shr
not
pop
cmp
jne
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
dec
add
add
stos
add
add
jnp
rolb
clc
push
add
add
add
in
fisubs
mov
lea
pop
movl
jmp
push
push
push
lea
push
lea
push
push
call
rcll
testl
lea
mov
add
outsl
fisubrs
mov
cmc
add
add
xchg
add
js
stos
aam
add
add
mov
roll
enter
add
movsb
add
rorb
lods
xchg
in
xchg
stos
out
not
xchg
mov
fadds
out
xchg
iret
mov
mov
lea
pop
mov
cmpw
jne
push
push
push
lea
push
push
push
push
call
mov
add
fwait
pop
out
xchg
push
cmc
add
add
imul
jnp
std
add
loopne
add
xchg
add
faddl
outsl
mov
add
add
jb
mov
lea
pop
mov
push
push
push
lea
push
push
push
call
les
xchg
je
add
leave
push
cmpsl
stos
fcoms
add
into
pop
add
lcall
add
jp
add
movsb
add
add
mov
in
cli
add
add
pop
xchg
js
add
xchg
add
lea
popa
mov
add
add
pop
leavew
loope
test
push
ja
lods
fwait
mov
pop
pop
rolb
mov
int3
lea
pop
movl
push
shl
pop
jmp
push
push
push
push
push
push
push
push
call
pop
idivb
repnz
bound
faddl
add
add
push
jmp
xchg
js
pop
add
add
add
add
xchg
add
gs
push
add
ret
pusha
add
out
mov
add
add
jne
add
arpl
pop
pushl
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
out
add
mov
add
mov
add
popa
loopne
roll
add
insb
add
fwait
add
mov
mov
movsl
push
mov
add
pop
addl
nop
ficompl
mov
mov
add
cltd
add
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
scas
add
in
test
mov
cld
addr16
enter
sti
imul
imul
loop
add
test
add
mov
lea
pop
mov
mov
push
sub
pop
mov
push
push
shl
shl
push
or
not
add
add
shr
sub
not
dec
pop
add
add
rol
not
pop
push
xor
shr
pop
push
push
rol
pop
call
push
not
not
add
pop
cmpl
je
push
push
push
and
add
ror
sub
add
lea
lea
pop
lea
pop
push
rol
pop
push
call
push
push
push
push
lea
push
push
call
fcom
scas
iret
add
pop
mov
test
jle
jno
add
imul
add
lahf
lret
add
add
jmp
push
mov
addb
add
insb
jae
clc
add
int3
xchg
push
mov
push
xchg
push
out
jmp
mov
mov
mov
add
mov
aam
bound
pop
cmpl
je
push
push
sub
push
or
inc
add
rol
rol
sub
shl
sub
rol
pop
dec
pop
push
lea
pop
push
call
push
push
push
lea
push
push
lea
push
call
add
testl
add
jle
ljmp
add
mov
mov
gs
add
add
jnp
add
add
add
jecxz
add
pop
cmpl
je
push
push
add
sub
push
or
not
add
sub
dec
sub
rol
lea
add
pop
inc
dec
not
lea
pop
push
lea
dec
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
leave
add
push
pop
mov
push
jbe
mov
jecxz
pushf
add
pop
rolb
add
jae
addr16
add
xchg
add
add
bnd
add
add
cli
xchg
mov
sarl
add
mov
lea
pop
call
push
push
push
push
push
push
push
call
addr16
mov
rolb
mov
add
mov
push
mov
jecxz
loopne
mov
test
mov
add
filds
in
xchg
add
je
mov
leave
mov
fistl
add
add
jno
ljmp
add
aad
add
int3
lea
pop
cmpl
je
push
push
push
or
inc
add
sub
add
ror
rol
sub
sub
pop
lea
sub
xor
lea
pop
push
shl
xor
pop
push
push
push
call
stc
cmpsl
add
push
add
add
repnz
test
je
std
add
add
add
add
add
add
addr16
adcb
xchg
add
pop
add
mov
out
add
add
lods
mov
popa
cmc
scas
in
mov
mov
push
fcom
add
add
rorl
pop
call
cmpl
je
push
push
xor
lea
add
push
sub
add
shr
sub
not
pop
add
ror
lea
pop
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
outsl
mov
add
mov
in
test
add
add
in
jo
jp
cmc
add
mov
add
popf
pop
fcmovb
xlat
stos
ja
add
bound
sahf
pop
pop
add
leave
mov
add
gs
lahf
divl
add
ja
lcall
repnz
out
hlt
lea
pop
push
call
push
lea
push
push
push
push
push
push
push
call
jae
add
add
lahf
mov
bound
add
imul
pop
or
ljmp
push
mov
add
pop
lds
and
fwait
les
push
imull
add
pop
cmpl
je
push
push
rol
sub
push
or
inc
add
sub
lea
sub
sub
pop
lea
add
pop
push
push
push
push
call
add
outsl
lret
mov
test
pop
xlat
push
add
in
lret
add
stc
mov
add
mov
mov
add
sti
add
add
add
leave
test
in
push
fnstenv
in
add
mov
lret
add
xchg
rorb
adc
push
shl
add
pop
call
cmpl
je
push
push
add
push
sub
add
not
sub
shr
lea
add
pop
not
not
pop
push
push
lea
push
push
push
lea
push
push
push
call
push
test
gs
mov
sar
addb
add
xchg
jno
iret
testb
jbe
add
movsl
add
arpl
add
lahf
add
xchg
add
jnp
add
xchg
mov
mov
cmc
pop
push
pop
add
add
add
in
xchg
test
testb
shll
jp
imulb
sar
cmc
add
les
bound
pop
push
call
push
lea
push
push
push
call
xchg
mov
movsb
cltd
rolb
sti
loop
add
add
add
add
add
mov
add
arpl
test
stc
imul
je
add
int
add
add
adc
cmp
or
int3
je
push
push
add
push
push
pop
add
shr
inc
sub
sub
xor
dec
pop
inc
rol
pop
push
lea
push
push
push
push
push
push
call
faddp
jmp
mov
loop
cmc
push
shl
add
add
roll
xlat
out
add
add
fists
add
sarb
push
push
out
mov
jecxz
out
pop
add
pop
mov
xchg
add
add
add
in
not
aam
jl
mov
imul
cld
lea
pop
push
push
shr
sub
ror
inc
pop
call
push
push
push
call
cli
imul
enter
mov
jle
add
sahf
mov
test
clc
mov
jnp
xchg
ja
imul
out
pop
jns
add
pop
fwait
add
add
add
jns
stos
add
mov
lret
cld
add
mov
imul
arpl
sti
add
shr
mov
lea
pop
cmpl
je
push
push
push
or
inc
add
sub
sub
sub
inc
pop
add
pop
push
push
push
push
push
lea
push
call
fnstenv
gs
out
ljmp
mov
lods
fildll
add
add
rcrb
add
jne
testb
mov
mov
add
add
cmc
mov
lea
pop
push
call
push
push
push
push
push
call
add
test
xlat
add
push
add
add
jp
sahf
add
scas
adcl
mov
xlat
mov
add
test
into
add
add
push
add
mov
add
testl
mov
lea
pop
cmpl
je
push
push
sub
shr
ror
push
or
inc
add
sub
lea
not
sub
xor
inc
pop
pop
push
not
pop
push
push
shr
ror
pop
call
push
push
push
push
lea
push
push
lea
push
push
push
push
call
test
add
add
rol
lret
in
fiaddl
add
add
add
ja
add
insb
lret
arpl
add
pop
mov
mov
movsl
add
hlt
mull
test
popl
add
pop
arpl
add
in
mov
lea
mov
add
add
imul
add
jmp
push
in
hlt
lea
pop
cmpl
je
push
push
not
sub
push
xor
add
shr
sub
shr
pop
xor
not
add
xor
pop
push
push
push
push
push
lea
push
push
push
push
call
insb
push
add
add
lcall
add
mov
add
aad
add
cld
add
add
jns
mov
stc
xchg
mov
add
je
idivb
xchg
ja
scas
loope
add
pop
add
pop
nop
rolb
in
add
add
aam
bound
push
push
push
push
call
add
int
fmull
pop
ret
mov
lret
pop
out
pushf
xchg
jnp
pop
mov
add
loope
add
add
lahf
pop
add
lret
add
cld
add
add
iret
in
mov
add
push
xchg
jno
lds
add
push
add
mov
pop
xchg
jle
adcl
fstpl
cld
lea
pop
call
cmpl
je
push
push
lea
add
push
or
inc
add
sub
sub
shr
lea
sub
pop
ror
pop
push
add
add
pop
push
push
push
call
jge
add
lret
add
add
mov
lods
pop
add
popf
add
add
insb
add
add
add
mov
mov
xchg
add
xchg
xchg
mov
xchg
rolb
call
xlat
push
lea
mov
lea
pop
call
push
inc
not
shr
shr
pop
cmpl
jne
push
add
dec
add
pop
mov
push
lea
push
lea
push
push
push
push
push
call
add
xor
scas
test
enter
add
xchg
mov
add
nop
add
adcl
mov
mov
add
leave
add
jecxz
aad
arpl
leave
add
xorl
icebp
data16
add
pop
movl
push
push
push
push
lea
push
call
add
loopne
push
imul
add
nop
add
out
fistpl
jmp
add
testl
add
add
sti
stc
sahf
mov
nop
mov
mov
lea
pop
jmp
push
pop
xor
push
shl
pop
pop
push
xor
not
pop
pop
push
push
push
push
lea
push
push
call
testl
movsl
add
add
pop
xchg
add
fildl
fadds
add
pushf
cltd
roll
nop
add
movsl
mov
lret
xchg
cli
loope
test
add
stos
mov
add
add
jecxz
add
arpl
sti
add
popa
sbb
push
push
push
push
call
ljmp
mov
hlt
add
lock
ret
loop
nop
leave
mov
pop
add
mov
lods
jne
cld
repnz
test
cmpsb
add
mov
fcmove
mov
lea
pop
pop
push
push
push
lea
push
call
mov
add
add
pop
add
add
mov
add
pop
add
andl
filds
add
add
fcmovnu
add
cmpsl
add
add
add
add
add
imul
add
pop
jno
fmull
push
push
push
lea
push
push
push
push
call
add
push
cmpsb
add
xlat
les
push
pop
push
out
add
lock
add
add
add
jp
mov
add
cltd
scas
add
test
je
fisttpll
add
mov
add
ficomps
arpl
push
add
insb
popf
lods
cld
add
out
add
addb
and
mov
lea
pop
ret
push
push
push
push
call
add
add
faddl
mov
add
add
les
lret
test
add
add
out
mov
add
cmpsb
lea
aam
add
mov
jecxz
leave
add
subb
add
movsl
add
pop
push
mov
push
xor
sub
pop
add
cmpl
jne
push
push
sub
xor
push
and
add
ror
dec
rol
add
sub
xor
sub
ror
pop
not
pop
push
push
push
push
push
push
push
push
push
push
call
jl
pop
test
clc
add
mov
frstor
mov
add
xchg
add
xchg
add
push
stos
mov
push
aam
sti
mov
fsubrl
pop
add
sahf
cld
test
scas
add
add
mov
add
gs
xchg
add
mov
jecxz
stc
movsl
les
cltd
fiaddl
add
lea
pop
pushl
push
push
lea
push
push
push
push
push
push
call
rolb
icebp
ljmp
jl
test
mov
addr16
arpl
pop
add
add
pop
add
repnz
mov
data16
add
add
mov
lea
pop
call
push
push
lea
push
push
push
call
push
push
add
lods
mov
add
add
test
fsubs
iret
xchg
mov
lret
add
pop
add
shlb
addl
addr16
push
pop
stos
roll
add
mov
imul
call
push
push
push
push
lea
push
push
push
push
push
call
addb
cwtl
jge
push
mov
add
xorb
sti
cmpsb
add
stos
rolb
xchg
cmpsl
cltd
movsb
test
jp
out
aam
add
add
in
add
add
push
add
add
leave
pop
xchg
mov
in
add
push
jae
add
add
pop
add
add
bound
add
mov
add
add
mov
lea
pop
jmp
cmpl
je
push
shl
lea
pop
cmpl
jne
leave
push
push
push
push
push
push
call
fnstcw
outsl
add
xchg
popa
imul
les
add
add
add
jge
add
js
add
add
add
add
out
jnp
add
add
add
push
sar
cmpsb
shlb
mov
popa
sbb
les
push
sub
rol
shl
add
pop
pop
pop
push
add
xor
sub
pop
pop
push
xor
pop
pop
push
sub
shr
not
pop
leave
push
shr
inc
pop
add
ret
push
lea
push
push
lea
push
push
call
loop
cmc
or
test
mov
roll
in
add
push
add
add
mov
mov
loope
jle
add
hlt
xchg
add
add
jnp
add
aad
add
add
add
insb
mov
lea
pop
jmp
push
pop
cmpl
jne
push
push
lea
sub
xor
shr
push
or
not
add
sub
sub
sub
ror
sub
pop
xor
shl
sub
pop
push
lea
push
push
push
push
lea
push
call
int3
add
loopne
fmulp
mov
add
add
add
rcrl
mov
nop
in
add
add
add
add
add
xchg
scas
mov
mov
test
mov
lea
pop
pushl
call
push
sub
not
add
pop
push
call
push
shl
pop
jmp
push
lea
push
push
push
push
lea
push
call
add
test
mov
mov
add
gs
add
insb
add
add
mov
cmpsl
add
ret
mov
add
in
add
int3
add
mov
add
fsub
pop
add
add
add
add
add
add
test
add
scas
add
lods
scas
test
jecxz
outsl
add
mov
std
add
mov
pop
cmpl
jne
push
sub
pop
mov
push
rol
add
pop
mov
push
lea
shl
pop
push
push
push
dec
not
push
push
pop
add
dec
shl
sub
dec
pop
dec
pop
push
push
call
add
xchg
gs
popf
lea
add
add
lods
rolb
lods
add
add
add
add
add
call
add
add
jmp
aad
add
aam
fmull
pop
pushl
push
push
push
push
push
lea
push
push
call
add
addr16
add
add
pop
fstl
mov
loop
add
cmpsl
lods
add
add
loop
add
add
fdivs
mov
fildll
out
add
add
jmp
add
add
sahf
push
jp
add
hlt
mov
lea
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
add
pop
add
add
add
loopne
arpl
movsb
sti
add
jge
mov
bound
mov
popf
add
fistps
hlt
cmpsl
nop
shrl
add
push
add
movsl
mov
add
lea
pop
push
push
push
push
push
push
push
lea
push
call
in
rclb
je
out
in
in
add
add
add
insb
add
add
mov
aam
add
add
sti
mov
mov
fldt
lahf
out
je
jge
lock
add
mov
outsl
mov
in
mov
add
add
stos
push
jle
add
add
mov
lea
pop
call
push
push
rol
push
xor
add
sub
not
sub
pop
sub
sub
pop
push
not
sub
add
pop
pushl
push
push
push
push
push
push
call
add
arpl
enter
in
mov
add
add
mov
lods
add
push
xchg
into
jo
xorb
test
add
add
scas
shlb
mov
mov
mov
mov
loop
mov
sarl
mov
lea
pop
call
call
push
push
lea
rol
push
sub
add
rol
sub
lea
shr
pop
ror
not
sub
pop
push
xor
rol
xor
pop
pushl
call
push
add
lea
pop
call
lea
push
push
add
shl
sub
lea
push
xor
add
rol
sub
rol
sub
not
inc
sub
pop
dec
dec
pop
push
push
push
push
push
push
push
call
mov
ret
add
add
movsb
rolb
mov
enter
pop
mov
sti
ja
out
je
pop
add
pop
add
add
repnz
jnp
add
mov
loopne
add
mov
mov
mov
xchg
add
scas
jp
push
mov
push
add
flds
push
add
lods
mov
lea
pop
pushl
call
push
push
lea
push
push
call
push
bound
movsb
jo
jns
data16
add
lea
out
sarb
mov
add
fcomps
fiaddl
xchg
add
add
jno
add
push
mov
out
popf
rolb
movsl
add
mov
lea
pop
push
push
ror
pop
call
push
push
add
not
push
xor
add
inc
not
add
inc
sub
sub
ror
shl
pop
ror
pop
push
push
push
push
call
sbb
add
add
in
add
flds
add
add
add
add
add
lret
fldt
push
jnp
in
mov
xchg
clc
mov
lods
lods
add
mov
add
ret
jne
xchg
add
add
pop
out
add
mov
add
add
add
mov
lea
pop
pushl
push
lea
push
call
jmp
in
movsw
add
add
add
fsub
add
add
add
notl
add
iret
add
add
sar
pop
into
add
sbbl
je
repnz
add
mov
add
pop
loopew
add
orl
pushf
add
mov
mov
ljmp
mov
lea
pop
call
call
push
sub
inc
add
sub
pop
mov
push
push
add
push
and
add
lea
sub
pop
lea
inc
sub
add
pop
push
dec
not
lea
sub
pop
pushl
call
push
lea
push
call
mov
popf
lods
add
mov
js
pusha
add
popf
add
add
loopne
add
popf
pop
test
add
cmpsb
roll
incb
test
pop
mov
les
add
shrb
jno
sub
lret
in
xor
inc
push
push
pop
add
lea
sub
ror
sub
pop
sub
ror
add
pop
push
ror
inc
pop
pushl
push
sub
not
pop
call
push
push
sub
lea
pop
pushl
call
push
push
shr
not
push
or
not
add
lea
sub
not
xor
pop
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
jl
add
add
xlat
popa
div
fidivl
ljmp
in
add
std
jno
lock
mov
cld
add
xchg
add
js
jecxz
add
fcoms
mov
pushf
test
fidivrs
out
insb
jecxz
xorl
add
lods
add
data16
xlat
cli
cltd
add
add
orl
pushl
push
rol
shr
shr
pop
call
push
push
add
push
and
add
dec
dec
shl
sub
sub
sub
shr
not
pop
shr
rol
dec
add
pop
push
push
push
sub
add
rol
lea
sub
lea
add
pop
add
dec
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
pop
fwait
mov
push
pop
add
icebp
ja
xchg
test
popa
xchg
add
add
jae
lret
add
ja
add
pop
pop
add
insb
lds
add
mov
xchg
add
cmpsl
add
add
shr
add
hlt
lea
pop
call
push
push
push
lea
push
lea
push
lea
push
call
mov
mov
arpl
sahf
mov
add
add
cmc
out
add
push
add
add
sahf
stos
xchg
add
pusha
mov
jns
add
pop
add
add
leave
pop
xchg
mov
scas
cli
ja
add
test
add
sub
neg
add
pop
pop
dec
jne
push
pop
call
jmp
push
rol
not
pop
call
push
push
ror
xor
push
sub
add
add
shl
sub
not
add
pop
sub
pop
push
lea
pop
pushl
call
push
push
push
push
lea
push
lea
push
push
push
call
add
add
jns
jnp
mov
jmp
out
add
imul
add
in
add
add
cmc
add
add
cltd
jbe
jne
lds
clc
add
insb
movsb
add
xchg
add
and
add
scas
jne
clc
fiaddl
add
aad
loopne
leave
je
mov
add
add
into
add
and
call
push
pop
mov
push
lea
pop
lea
push
push
xor
sub
shl
not
push
sub
add
ror
dec
sub
sub
shr
pop
shr
xor
pop
push
push
push
push
push
push
push
push
call
mov
cwtl
add
xorb
add
negb
push
add
in
add
icebp
fmul
into
add
stos
lods
add
add
cmpsl
fwait
lods
lea
add
int
mov
add
add
add
cmpsb
test
add
in
mov
add
lcall
cmpsl
aad
mov
lea
pop
pushl
call
push
push
push
push
lea
push
push
call
loopne
add
shll
sti
mov
add
add
cmc
std
pop
pusha
add
xchg
gs
fsubr
scas
je
add
add
add
add
add
cli
mov
in
test
xabort
add
in
mov
cmc
add
add
pop
push
call
push
push
add
push
and
add
lea
sub
sub
not
sub
not
shr
pop
shr
pop
push
push
call
popa
push
add
mov
add
add
lock
mov
stc
std
add
je
mov
add
in
jmp
fcompl
add
add
aam
add
push
add
add
ljmp
ret
add
or
jne
call
push
push
call
add
add
test
mov
pop
add
mov
cmpsb
jnp
xchg
add
add
rorl
add
xchg
add
js
push
in
add
add
lods
add
rolb
ljmp
mov
add
add
add
add
aad
mov
add
or
rclb
in
adc
out
add
add
aad
popa
rorl
push
add
xchg
add
add
add
add
push
add
add
push
pop
add
cmpsb
jge
mulb
popf
add
add
in
jecxz
add
push
add
insb
movsl
jno
jnp
push
movsb
fisubl
add
jbe
push
push
imul
add
pop
flds
xchg
add
pop
mov
push
lea
push
push
push
push
lea
push
call
add
cmpsb
jno
call
or
jge
add
aad
rolb
xchg
add
pop
add
add
addb
add
push
rolb
add
cltd
hlt
add
fmull
pushf
and
ljmp
dec
std
mov
inc
push
xor
add
shr
ror
sub
shr
pop
sub
inc
sub
pop
push
inc
pop
pushl
call
push
lea
push
push
lea
push
call
stos
in
stos
jl
addr16
add
lret
test
add
mov
ja
gs
enter
add
loop
add
xchg
add
nop
push
add
add
add
add
loopne
je
mov
push
push
lea
add
mov
movsb
into
mov
mov
add
cmpsb
pop
js
sbbl
add
push
push
push
lea
push
lea
push
call
add
add
sahf
add
popl
mov
mov
pop
mov
hlt
add
add
ja
js
cwtl
push
add
add
add
mov
lea
pop
push
push
push
push
lea
push
call
add
xorl
pop
mov
add
pushf
popa
fadds
fiaddl
gs
add
nop
mov
aam
sahf
repnz
add
cmpsl
add
jnp
xchg
in
testl
mov
lea
pop
push
push
shl
xor
not
pop
push
push
push
push
push
push
call
jge
mov
mov
add
add
add
add
js
add
leave
pop
mov
add
add
add
pushf
add
incb
jl
add
add
jnp
test
test
fldl
xchg
movsb
add
popa
shl
pop
add
add
mov
add
mov
imul
popa
adc
pushl
push
push
add
xor
push
sub
add
sub
inc
add
sub
sub
inc
pop
lea
lea
pop
push
not
shr
pop
push
call
push
push
shr
shl
not
rol
push
and
add
inc
sub
lea
sub
pop
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
call
mov
mov
add
jb
mul
addb
pusha
cmpsl
mov
mov
add
mov
add
mov
movb
pop
add
repnz
mov
add
add
add
add
xchg
int3
int
movsb
add
add
je
add
jnp
pop
sahf
add
outsl
add
mov
push
add
add
mov
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
cmpsl
add
xchg
aam
popa
mov
jnp
add
mov
add
js
add
filds
add
imul
add
mov
add
enter
push
xchg
fbld
mov
add
fbstp
lcall
iret
fnsave
add
add
add
add
arpl
cld
lea
pop
call
push
sub
lea
sub
add
pop
push
push
shl
pop
call
push
push
shl
push
xor
add
shl
sub
sub
rol
pop
pop
push
push
push
push
push
push
call
push
imul
in
sti
scas
les
add
add
jae
pop
add
add
add
add
add
cmpsb
mov
repnz
add
out
pop
cmp
add
roll
xchg
lods
add
je
fiaddl
mov
jae
add
mov
mov
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
out
jl
mov
push
les
mov
add
add
fcomps
mov
cmpsl
add
ljmp
add
add
mov
lock
add
ljmp
add
add
mov
lea
pop
call
call
push
push
push
lea
push
push
push
call
add
add
mov
jns
cwtl
scas
mov
ljmp
mov
add
fstp
add
popf
scas
scas
int3
add
add
leave
mov
mov
xchg
movsl
sahf
add
hlt
add
add
add
jno
mov
add
add
add
mov
lea
pop
jmp
push
inc
inc
pop
pushl
mov
push
push
push
push
lea
push
push
lea
push
call
movsb
mov
add
add
xchg
fists
clc
movl
pushf
cld
add
add
pop
iret
mov
jo
add
add
push
test
stc
mov
add
add
jo
arpl
add
lods
out
jae
lods
jno
fadds
out
insb
mov
add
add
add
push
movsb
hlt
add
lret
xchg
add
mov
lea
pop
jmp
push
push
inc
inc
push
or
inc
add
add
sub
add
not
rol
pop
dec
shr
sub
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
pop
add
add
movl
add
test
add
add
jge
add
add
add
fmuls
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
add
mov
jne
stos
mov
insb
fiadds
fidivs
hlt
shl
in
lds
xchg
mov
jmp
shl
stos
push
add
push
add
outsl
push
add
mov
add
mov
add
insb
push
add
add
fldcw
jp
jbe
mov
push
stc
repnz
roll
lahf
out
lods
add
add
add
add
jp
add
add
and
call
push
lea
ror
pop
push
call
push
push
shl
dec
shl
push
or
inc
add
inc
sub
inc
pop
sub
lea
not
rol
pop
push
lea
pop
pushl
call
push
push
push
call
addl
mov
pop
jbe
push
popa
mov
push
cmc
out
add
add
leave
add
ja
pop
fwait
add
add
pushf
add
cmpsb
add
push
jle
in
mov
in
add
mov
add
out
add
andb
fmull
push
shl
pop
call
leave
push
lea
push
push
lea
push
lea
push
push
push
push
call
int3
jmp
add
mov
add
mov
mov
add
add
rclb
mov
add
fcomip
mov
add
add
pusha
mov
insb
aad
add
mov
ja
pop
jb
add
add
mov
ret
scas
bound
je
mov
sarl
fisttps
pop
add
push
not
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
andb
in
jno
mov
movsb
add
aam
cwtl
add
pop
mov
add
mov
mov
lret
add
rolb
add
fs
add
add
xchg
std
mov
mov
add
testl
pop
add
pop
pop
push
not
xor
rol
pop
pop
pop
push
inc
inc
pop
leave
add
push
push
push
push
push
push
call
int3
jmp
testl
out
rolb
add
in
mov
movsl
test
add
popa
add
sahf
ljmp
add
out
add
addr16
test
add
pop
lods
std
sti
add
mov
pop
ret
leave
push
not
shl
shr
pop
ret
push
lea
push
push
push
lea
push
push
push
call
clc
push
loopne
iret
lret
mov
add
push
sbbl
fstpt
jge
pop
in
jb
add
jl
mov
xchg
in
add
icebp
icebp
mov
add
aam
roll
mov
mov
lea
pop
push
push
push
push
push
push
call
hlt
out
push
add
push
xchg
push
ja
xlat
add
cmp
mov
xchg
xchg
add
lcall
scas
add
add
xchg
add
ret
xchg
pop
jle
leave
repnz
lea
pop
mov
push
push
push
push
call
add
call
lea
add
add
add
test
add
cltd
add
lods
testb
add
add
insb
add
movsb
nop
jne
mov
pop
add
js
xorl
jle
jp
add
test
pusha
add
pop
pop
add
sarb
xchg
frstor
add
add
add
ja
add
add
xchg
jb
add
adc
jge
add
test
add
push
pop
mov
push
push
push
push
push
push
push
push
call
jb
incb
pushf
add
lods
lahf
ffreep
mov
push
pop
mov
add
mov
jns
push
subb
fs
std
in
add
mov
scas
add
add
add
add
pop
jmp
mov
push
lea
push
call
add
iret
add
cmc
add
add
sti
add
add
pop
rolb
pop
add
add
jno
add
add
add
loopne
fdiv
ja
mov
loopne
add
mov
add
pop
xlat
loop
add
add
jbe
into
outsl
mov
add
lea
pop
and
push
add
ror
ror
pop
xor
xor
push
push
push
push
lea
push
push
call
add
jo
rcrl
les
fistpll
add
add
add
into
add
add
add
add
add
add
mov
pop
add
arpl
rclb
jmp
roll
add
pop
pop
loop
mov
pop
add
add
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
shr
test
shll
mov
add
jmp
fldl
add
add
in
int
pop
add
add
xchg
cmpsb
les
add
lahf
arpl
stos
imul
jnp
mov
popf
jge
movsb
xchg
add
add
add
lock
push
add
add
add
arpl
add
add
xchg
mov
int3
lea
pop
xor
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
gs
jb
movb
lea
add
data16
movsb
add
subb
ret
add
nop
add
add
add
fs
mov
add
int3
jbe
pop
stos
jnp
add
pop
dec
push
not
xor
pop
sub
jmp
push
lea
push
push
call
clc
popf
add
mov
lret
add
loop
add
testl
mov
lods
cmc
fistps
add
add
imul
add
into
loop
add
shrb
add
int3
ja
or
testl
add
cmpb
add
cmpsl
lea
cmp
incb
add
les
pop
sub
pushl
push
inc
pop
pop
sub
push
lea
push
push
push
push
lea
push
call
cltd
xchg
mov
popa
pop
stos
js
mov
test
shrl
faddl
xchg
popf
mov
push
cmpsb
jno
mov
movsl
ljmp
add
pushf
add
subb
mov
lea
pop
cmp
jne
mov
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
fdivrs
lock
test
add
add
push
lahf
xchg
add
add
testb
add
add
sahf
add
add
fcoml
sbb
add
jo
imul
add
add
add
add
jb
in
hlt
add
sti
add
add
rolb
scas
lods
cltd
mov
mov
lea
pop
lea
push
inc
ror
sub
rol
pop
sub
push
lea
push
push
call
push
add
rolb
add
add
mov
je
add
clc
add
icebp
push
add
push
loopne
add
add
mov
clc
lea
mov
lea
lret
pusha
arpl
xchg
add
mov
add
xorb
jmp
into
je
push
mov
lea
pop
mov
push
push
call
movsb
in
mov
add
jne
add
in
mov
jle
add
add
out
add
xchg
pop
mov
add
push
fdivrs
xchg
add
add
mov
add
add
pop
pop
out
add
mov
lea
pop
shr
push
lea
push
push
push
call
add
mov
add
add
out
rolb
hlt
shl
add
add
fucom
stos
mov
add
add
jl
sahf
lods
repnz
shr
add
lea
test
je
pop
data16
pop
add
sub
push
sub
sub
not
shr
pop
pushl
push
sub
sub
lea
pop
pop
shr
push
xor
rol
pop
and
sub
push
push
push
call
movsl
enter
aam
mov
xchg
xchg
add
pop
add
mov
add
add
faddl
xchg
aad
gs
mov
add
lods
add
add
xchg
add
add
js
add
jge
mov
add
add
mov
lea
pop
cmp
jne
push
lea
push
lea
push
push
push
push
call
add
add
add
fiaddl
outsl
add
mov
add
test
add
popf
mov
add
add
stc
add
add
add
add
jno
add
roll
imul
enter
add
add
add
add
push
pop
add
mov
lea
pop
leave
ret
push
rol
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
insb
xchg
rolb
pop
add
add
add
data16
add
add
addb
push
add
movsb
fsts
add
cltd
mov
imul
add
in
push
add
add
add
mov
out
out
repnz
jle
faddl
mov
xchg
stos
loop
add
mov
and
mov
add
push
lea
push
push
call
stos
movl
ret
mov
xchg
xchg
stos
xchg
loop
imul
xlat
pop
in
add
add
test
int3
add
add
push
mov
popa
mov
add
or
push
push
push
push
push
push
call
add
mov
test
in
iret
add
pushf
add
mov
add
iret
andb
jl
imul
arpl
add
fwait
scas
add
fimuls
add
add
mov
add
add
mov
lock
repnz
lea
pop
push
push
inc
pop
push
push
dec
pop
push
push
xor
pop
mov
lea
push
pop
sub
push
push
call
loop
incb
add
mov
add
fstl
add
add
mov
xchg
pushf
xchg
add
add
in
add
pusha
or
adc
push
or
push
inc
pop
add
push
xor
sub
pop
mov
push
pop
add
mov
push
xor
add
pop
add
xor
push
lea
push
call
outsl
out
add
xorb
loopne
lret
add
mov
fsub
add
jmp
arpl
cltd
add
mov
out
add
iret
add
add
popf
pop
add
addr16
scas
add
icebp
add
add
add
add
fstpt
add
jae
push
add
out
stc
add
int3
add
lcall
fs
lea
pop
mov
and
push
push
push
push
lea
push
lea
push
call
fstp
push
add
frstor
add
sti
js
hlt
add
add
fdivrp
xchg
sub
pop
pusha
mov
pop
jb
add
mov
jmp
stos
cli
bound
mov
add
jne
mov
cld
lea
pop
rol
push
sub
not
pop
rol
push
push
push
lea
push
push
push
push
push
push
push
call
in
xlat
add
pop
xchg
aad
ficomps
add
int
in
add
add
add
jno
mov
jb
add
out
mov
hlt
lea
pop
xor
push
xor
pop
inc
push
lea
push
push
push
push
call
aad
cmpsb
mov
add
fbld
adcb
mov
add
xchg
mov
test
add
stos
mov
add
push
int3
fwait
imul
pop
shl
add
mov
add
lods
out
pop
repnz
mov
add
jbe
fildl
cwtl
add
insb
add
into
pop
mov
fldcw
mov
lea
pop
cmpb
jne
push
push
push
lea
push
push
push
push
push
push
call
mov
push
add
add
roll
xchg
cwtl
in
xchg
fiaddl
mov
mov
add
add
add
add
xchg
je
clc
add
mov
leave
std
je
imul
add
lret
push
mov
add
addb
in
fcmovnb
add
add
add
pop
add
push
push
call
add
mov
data16
jne
jecxz
movl
mov
add
push
jne
push
cltd
add
add
shl
add
mov
xorl
into
sahf
aam
add
xchg
xchg
add
mov
mov
rolb
cmc
aad
add
lea
add
add
rolb
aad
add
mov
or
inc
or
test
add
add
push
push
lea
push
push
push
push
push
call
out
in
aad
out
mov
cli
movsl
pushf
mov
mov
jle
add
mov
mov
add
add
add
add
fildl
add
add
add
mov
mov
add
add
jne
push
add
mov
into
movl
into
add
sarw
add
scas
pop
ror
cltd
add
jmp
mov
data16
cmpl
jne
xor
push
push
lea
push
push
call
jge
out
add
lret
add
mov
jb
add
or
add
add
push
push
lret
mov
in
add
shlb
ffreep
jl
imul
jmp
loope
mov
lea
pop
pop
push
push
push
push
push
push
call
pop
roll
add
add
in
mov
in
in
add
add
aam
addr16
js
add
mov
xchg
outsl
gs
add
test
add
xchg
add
add
add
mov
leave
jge
add
xchg
fldl
cmpsl
nop
and
mov
iret
loop
xchg
lds
call
xchg
pop
add
lea
pop
pop
push
push
push
push
push
push
call
xchg
lods
add
ja
jp
scas
add
add
push
add
add
loopne
add
roll
jl
add
in
add
cwtl
fidivrl
out
add
clc
pop
add
add
add
mov
lea
pop
pop
push
xor
sub
add
pop
pop
push
sub
pop
pop
leave
push
dec
pop
ret
push
push
push
call
add
add
mov
ja
add
in
add
fadd
std
cmpsb
add
add
fidivs
data16
xchg
add
add
fcoms
add
add
add
loope
add
add
in
add
jnp
add
rorl
aam
bound
mov
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
add
jno
add
add
jge
mov
add
pop
add
add
rcrb
add
add
add
mov
add
xchg
add
mov
xchg
mov
push
scas
insb
ja
add
mov
icebp
mov
add
add
add
jb
add
add
bound
pop
add
push
push
push
call
add
add
add
xchg
rolb
mov
push
jae
add
rcll
bnd
out
add
mov
out
add
add
pop
xlat
leave
leave
stos
in
xchg
mov
in
add
movl
add
cmpsb
rolb
mov
add
add
shr
jns
add
mov
lea
pop
push
push
push
push
push
call
pop
xchg
add
lret
jns
add
mov
add
pop
add
push
int
mov
mov
cmpsb
mov
add
stos
popa
pop
cwtl
pop
fcom
add
cli
add
fs
movsb
add
nop
add
add
out
mov
lea
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
jns
add
lahf
les
lret
xchg
jbe
jbe
scas
outsl
cmc
mov
jns
add
add
add
mov
push
add
jae
add
mov
xlat
add
lock
add
fs
jle
nop
mov
mov
xchg
add
pop
rcl
movsl
sti
add
add
add
add
pop
xor
add
push
shr
not
pop
add
push
push
push
call
jb
arpl
add
std
jo
add
fwait
test
add
push
add
mov
add
add
js
je
push
in
roll
add
add
add
add
nop
jnp
xorb
jnp
mov
rolb
mov
lea
pop
pop
push
ror
lea
pop
pop
mov
push
shr
not
inc
pop
push
push
push
lea
push
push
push
push
push
push
call
roll
les
add
mov
mov
lea
pop
pop
mov
jno
mov
data16
mov
add
add
add
int
add
lret
jl
jecxz
add
xchg
test
data16
add
popf
faddl
pop
mov
add
pop
ljmp
sub
add
addl
aam
bound
pop
call
push
ror
add
dec
shl
pop
xor
push
pop
pop
pop
push
push
push
push
push
push
call
xchg
add
mov
add
add
mov
add
add
out
idivl
scas
test
pop
add
add
add
mov
std
mov
aad
add
sti
mov
lock
lea
pop
pop
pop
push
rol
rol
add
pop
pop
push
not
add
inc
pop
leave
ret
push
push
push
lea
push
lea
push
push
call
filds
add
xchg
lret
pop
add
xlat
add
push
rolb
pusha
lcall
int
add
xchg
jge
mov
cwtl
add
jmp
add
stc
add
rolb
add
add
mov
lea
pop
push
push
dec
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
call
jge
add
xchg
jne
add
add
xchg
aam
xlat
mov
ljmp
sub
add
add
jno
push
loopne
jnp
out
fidivrs
loopne
lahf
repnz
xchg
add
jge
enter
cwtl
cwtl
add
pop
add
add
add
lods
lods
mov
lea
pop
add
push
shl
inc
rol
pop
push
push
lea
push
lea
push
push
lea
push
push
call
imul
add
js
add
addb
imul
add
loopne
add
add
roll
in
gs
lods
add
movl
outsl
add
add
je
test
add
int3
mov
pop
std
add
add
add
lea
pop
push
push
add
pop
push
push
push
push
push
push
call
mov
add
add
add
add
rolb
cmc
mov
jle
loopne
arpl
lds
outsl
xchg
xchg
aad
add
add
test
add
scas
fcoms
std
add
add
xchg
add
jp
subl
lock
jae
mov
jp
in
add
clc
jnp
nop
mov
fiaddl
cltd
mov
adc
pop
or
dec
and
pushf
push
push
lea
push
call
jne
add
mov
aam
add
add
rol
add
add
lods
rcrb
mov
push
repnz
test
jecxz
lret
lea
add
add
mov
cmpsl
add
pushf
add
add
lea
pop
push
push
push
push
push
push
push
push
lea
push
call
pop
movsl
push
add
in
scas
add
pusha
fsubs
leave
lahf
add
andl
xlat
mov
jecxz
jbe
lods
mov
push
jecxz
in
add
roll
add
add
pop
add
mov
mov
rolb
mov
xchg
lcall
add
aad
add
pop
movsb
mov
fmull
pop
pop
push
sub
ror
xor
add
pop
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
lret
test
loope
fiadds
xchg
pop
push
add
out
add
movsl
add
roll
xchg
test
add
data16
cli
lret
movsb
add
adcb
add
add
xchg
mov
add
andl
add
add
stc
push
fdivs
add
add
jge
add
mov
lea
pop
sub
mov
push
add
shr
not
rol
pop
shr
push
dec
pop
add
push
push
call
mov
mov
add
fldl
out
outsl
add
stos
pop
add
jmp
add
jbe
add
add
int3
faddl
add
addb
jo
add
lret
jns
add
lea
pop
mov
push
sub
pop
add
push
dec
add
dec
dec
pop
pushl
push
lea
push
call
insb
jmp
pop
mov
mov
stos
add
pop
cld
add
add
xlat
xchg
mov
push
add
loope
mov
jno
add
add
mov
add
pop
add
xchg
push
cwtl
mov
pop
popl
push
add
add
add
add
pop
mov
push
push
lea
push
lea
push
push
push
push
call
push
out
je
jne
arpl
out
ret
mov
addr16
lods
add
ret
lcall
add
lods
leave
scas
test
int3
mov
in
test
arpl
lret
cltd
loopne
jmp
test
mov
add
mov
push
aam
xchg
add
sahf
add
std
in
into
add
add
mov
add
mov
lea
pop
add
push
shl
add
pop
xor
push
dec
add
pop
lea
mov
push
lea
rol
shr
pop
add
push
sub
rol
pop
xor
rol
push
push
lea
push
call
lods
addl
add
add
xchg
jne
test
jns
out
push
push
imul
xchg
xchg
jo
jno
jo
xlat
jl
add
pop
add
push
add
add
mov
add
mov
add
mov
mov
lea
pop
nop
push
inc
inc
sub
lea
pop
nop
push
push
push
push
lea
push
push
push
push
call
orb
ret
std
add
add
insb
add
icebp
add
cmpsb
mov
xchg
hlt
in
add
sti
add
rcrb
add
add
add
mov
pop
jb
je
bound
add
mov
fildl
add
pop
xor
nop
push
push
lea
push
push
push
push
push
call
ljmp
jns
mov
add
loope
les
jl
add
mov
aad
lret
nop
push
out
aad
mov
sahf
add
add
jo
ret
popf
add
out
add
sbb
nop
inc
push
push
push
push
lea
push
push
push
push
call
ja
lcall
add
lahf
lcall
add
add
add
add
pop
leave
popf
add
add
std
push
aad
in
clc
jle
aad
iret
test
jo
mov
imul
loop
add
roll
loop
add
pop
add
mov
pop
js
mov
arpl
pop
nop
push
push
push
push
push
push
push
lea
push
call
add
mov
gs
add
add
push
andb
push
clc
add
imul
add
add
mov
rcrl
lret
add
push
add
lods
mov
mov
lods
add
add
test
add
lea
pop
nop
push
push
push
call
add
jno
sti
jns
add
test
xchg
add
xchg
push
sbbb
jmp
lea
xchg
jns
add
add
push
mov
cmc
call
fdivs
mov
add
hlt
popf
add
mov
lea
pop
cmpb
jne
push
push
push
lea
push
push
call
mov
std
test
push
roll
fisubl
add
stos
add
stos
add
add
lea
popf
icebp
jge
test
cmpsb
add
mov
addb
add
add
cmc
add
push
push
out
add
add
imul
add
add
add
pop
test
add
jecxz
jecxz
test
pop
add
push
inc
pop
nop
push
shl
add
pop
nop
cmp
je
push
push
push
push
push
call
xchg
pusha
add
add
add
jnp
filds
add
xchg
lret
fidivl
pop
add
cltd
add
shl
addr16
cmpsl
add
mov
add
add
mov
lea
pop
nop
push
push
push
push
push
lea
push
push
push
call
insb
out
pusha
movsl
add
loope
int3
push
push
mov
add
out
mov
shll
mov
pop
int
hlt
add
add
add
mov
add
in
add
insb
jnp
loopne
add
mov
mov
lea
pop
nop
push
lea
push
push
lea
push
call
push
jo
add
cli
mov
mov
adcb
out
stos
add
add
mov
clc
popa
test
add
add
jae
mov
mov
rolb
cmpsl
pop
jne
mov
fiadds
add
add
add
add
add
add
jmp
add
pop
mov
lea
pop
inc
push
push
push
lea
push
push
push
push
call
pop
mov
test
loop
gs
add
add
jns
xchg
add
add
add
add
add
add
add
mov
test
lock
aad
jmp
sbb
nop
push
lea
push
push
lea
push
push
call
mov
cmc
push
ljmp
popl
bound
cwtl
ljmp
jne
loop
mov
mov
xchg
add
xchg
jle
mov
add
add
push
hlt
lea
pop
nop
cmp
jb
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
add
add
lea
shrb
add
sarb
int
mov
add
roll
add
into
add
roll
mov
add
loop
add
std
iret
test
jl
mov
lea
pop
xor
push
add
dec
rol
rol
pop
jmp
mov
push
push
push
lea
push
push
lea
push
call
mov
add
add
insb
mov
rolb
add
add
add
loop
add
mov
loope
clc
push
xchg
mov
cli
add
mov
ror
xchg
add
pop
add
add
mov
lea
pop
add
push
push
push
push
push
call
add
mov
pop
add
pop
push
push
jecxz
add
popa
add
add
push
add
jge
add
add
in
enter
cwtl
incb
add
pusha
mov
lds
add
arpl
adc
movzwl
push
sub
add
sub
add
pop
mov
push
shl
pop
add
push
sub
dec
shr
pop
mov
xor
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
cld
add
jmp
add
add
clc
hlt
add
pushf
lods
xchg
add
add
and
add
push
jle
add
add
pusha
out
add
std
add
add
icebp
mov
pop
mov
pop
in
lds
add
add
les
push
add
mov
into
test
lea
pop
xor
shl
push
push
call
jnp
add
add
outsl
push
pop
loop
sti
mov
lret
add
mov
add
mov
mov
gs
lods
add
data16
add
nop
fildll
aam
jl
into
movsl
leave
testb
xor
shl
push
push
push
push
call
add
add
add
push
jno
add
mov
add
fistl
fs
mov
lret
lea
fldl
and
add
add
in
addl
bound
mov
in
push
mov
lret
lcall
mov
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
fwait
pop
jb
mov
xchg
add
add
add
in
lea
scas
add
add
add
repnz
out
insb
add
add
add
lock
loop
js
jle
movsb
add
add
jle
in
repnz
ror
rclb
add
and
add
mov
lea
pop
shl
push
lea
push
push
lea
push
push
push
push
push
call
cld
mov
mov
xchg
mov
jbe
mov
jo
jl
cmpsb
add
rcr
popl
addb
frstpm(287
xorl
mov
add
add
push
add
sti
pop
add
add
faddl
in
jl
pop
mov
add
pop
pop
lahf
pusha
pusha
add
pop
add
mov
add
mov
lds
mov
mov
pop
xor
push
lea
push
call
mov
fildl
add
outsl
push
add
call
add
loopne
pop
or
add
std
add
mov
pop
add
add
xchg
addl
mov
push
mov
add
stc
add
add
mov
mov
add
or
roll
hlt
push
push
push
push
call
test
add
add
mov
add
out
in
pop
add
xchg
add
lea
push
mov
icebp
popf
add
xchg
mov
xchg
nop
add
fwait
add
popl
mov
mov
in
add
mov
add
mov
insb
mov
fldl
mov
lea
pop
pop
push
xor
pop
pop
pop
push
push
push
lea
push
call
idiv
add
pushf
test
addl
divb
add
add
add
add
mov
add
popa
aad
aam
add
mov
add
add
add
aad
outsl
xchg
add
mov
add
add
out
add
jb
mov
lea
pop
pop
leave
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
ljmp
add
movsb
icebp
push
mov
add
add
mov
lcall
add
add
add
add
add
pop
loope
xchg
scas
add
jl
aam
cli
je
fcmovne
loopne
out
out
add
mov
pop
fucomi
add
add
mov
jae
xchg
add
shrl
arpl
pop
ret
push
push
push
push
push
lea
push
push
push
push
push
call
jne
pusha
in
nop
push
push
xchg
outsl
movsl
add
sahf
add
add
mov
push
idiv
xchg
add
mov
add
add
add
add
add
jnp
addr16
add
out
out
arpl
lds
outsl
push
fcmovb
mov
les
push
push
push
push
push
lea
push
push
lea
push
push
push
call
fs
add
jmp
addb
jo
stos
scas
les
fdivs
clc
pushf
jns
jmp
mov
fiadds
lahf
add
movsl
imul
add
add
testb
xchg
imul
add
in
xchg
add
push
sti
mov
lahf
add
out
add
push
rcrl
add
filds
add
bound
popa
sub
in
push
push
push
lea
push
push
call
push
jbe
data16
mov
add
add
add
ljmp
test
add
mov
mov
sbb
add
ljmp
xlat
push
std
pop
add
push
add
add
add
pop
out
add
add
sbbb
add
lods
add
mov
pusha
adc
push
push
lea
push
push
push
push
push
push
call
loope
bound
decb
loope
addl
icebp
loope
jl
int3
lea
push
loope
pop
xchg
icebp
add
jae
mov
add
mov
sbbl
jmp
std
movsb
call
int3
ja
add
out
mov
mov
mov
pushf
mov
lea
pop
push
push
push
push
call
add
add
push
pushf
rcrl
jle
add
hlt
popa
les
fldl
add
cmpsl
cltd
fstpt
pop
mov
imul
lods
in
fcoms
scas
add
add
pop
mov
push
push
push
push
push
lea
push
call
add
mov
divl
add
add
stc
add
add
mov
loopne
add
add
jbe
lahf
shll
add
mov
add
add
jno
lods
mov
loopne
add
aam
andl
push
push
data16
sti
imul
add
add
mov
lea
pop
mov
push
sub
sub
pop
mov
push
inc
sub
not
xor
pop
test
je
push
push
push
push
push
push
call
mov
xchg
jmp
add
fisubrs
cli
jns
add
roll
test
add
jbe
add
std
leave
bound
icebp
xchg
scas
jle
ret
add
add
mov
add
lds
add
jmp
xchg
push
add
push
add
les
jnp
aam
add
jecxz
mov
lea
pop
mov
test
je
push
push
push
push
push
push
push
push
call
test
add
xchg
pop
add
flds
add
subb
add
leave
jp
add
lcall
pop
add
mov
add
enter
fadds
mov
lahf
add
add
cltd
add
add
pop
mov
lea
pop
mov
mov
push
push
push
lea
push
push
call
jbe
add
lock
jmp
test
je
push
mov
add
add
out
incb
add
stos
jb
add
add
mov
add
add
add
fcmovbe
add
leave
add
add
stos
xchg
pop
pop
add
add
add
aam
add
mov
add
imul
js
add
mov
clc
movsl
push
add
adc
mov
inc
push
push
lea
push
call
add
incb
mov
std
add
cld
add
fcmovnbe
cltd
cwtl
add
mov
xchg
mov
repnz
cld
xchg
cwtl
pop
lea
push
fs
mov
sahf
repnz
mov
push
fldl
add
add
mov
lea
pop
cmp
je
test
je
push
add
shr
lea
not
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
into
mov
add
mov
add
fs
into
add
add
loopne
mov
add
add
fldl
add
bnd
pop
add
outsl
add
mov
lea
pop
inc
push
push
lea
push
call
in
fwait
push
pop
rcr
add
add
iret
frstpm(287
add
popf
xchg
xchg
add
push
mov
add
rcrl
icebp
lods
push
jecxz
add
add
add
js
ljmp
add
aad
add
mov
ja
add
pop
cmp
je
test
jne
push
lea
push
push
push
lea
push
call
add
add
jo
movl
repnz
test
cltd
add
add
add
jmp
popa
mov
add
aad
add
mov
mov
add
add
push
outsl
add
mov
add
gs
add
add
ljmp
xor
push
push
push
call
add
bnd
mov
addl
mov
add
add
mov
push
call
mov
imul
js
rolb
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
call
add
add
cltd
add
add
add
in
arpl
push
add
add
imul
jno
leave
add
add
jb
add
add
add
add
cld
popa
add
push
add
add
add
add
pop
pop
push
push
push
call
bound
int
add
add
add
je
mov
jp
mov
rorb
add
push
faddl
add
jge
ror
rcll
fisubl
add
lcall
mov
lea
pop
pop
leave
push
xor
pop
ret
push
push
lea
push
push
call
movsl
clc
cwtl
mov
mov
add
pop
imul
add
add
add
scas
add
add
mov
pop
rclb
add
add
add
add
mov
adcb
test
shll
fsubrs
data16
int
add
pusha
js
add
add
mov
jae
jge
xchg
ja
add
sar
jb
add
in
add
leave
fucomip
mov
add
pop
mov
lea
pop
mov
inc
push
add
ror
shr
ror
pop
cmp
jne
lea
push
ror
pop
mov
test
je
push
not
pop
mov
push
ror
xor
pop
add
push
shl
shr
pop
cmp
jne
push
push
push
call
jb
test
fs
mov
add
add
test
add
les
in
in
add
push
add
mov
push
push
mov
push
add
hlt
add
add
cld
test
cmc
add
add
jns
divl
add
add
add
je
mov
lea
pop
mov
push
push
push
lea
push
push
call
add
jl
add
add
fnstsw
add
lahf
add
out
movb
stos
pushf
stos
les
mov
add
add
pop
cwtl
bound
xchg
xorb
jno
outsl
xchg
lret
push
hlt
arpl
pop
test
je
mov
push
push
push
push
lea
push
lea
push
push
push
call
arpl
aam
cmc
add
movl
aad
add
mov
ror
add
jnp
jnp
add
out
add
add
xchg
push
jecxz
add
test
add
imul
shll
add
jmp
loope
shl
cmpsb
into
add
int3
pusha
mov
lea
pop
add
push
push
call
lock
add
enter
shlb
add
add
jecxz
add
add
add
mov
add
add
add
roll
add
data16
loopne
test
call
pushf
xlat
mov
es
push
lea
push
push
push
push
push
push
lea
push
call
add
jge
pop
add
cwtl
stc
sbbb
mov
push
imul
jae
mov
pop
shll
mov
pop
add
xchg
loopne
mov
cmpsl
add
xchg
cmc
xchg
mov
mov
add
add
add
icebp
add
xlat
cwtd
movsl
shlb
xchg
push
mov
pop
jo
add
add
stos
mov
pushf
add
xchg
add
flds
scas
mov
mov
lea
pop
jmp
push
push
push
push
push
lea
push
push
push
call
call
mov
add
mov
add
add
cmpsl
popf
add
mov
add
push
pushf
add
xlat
add
add
incb
mov
add
add
xchg
jl
mov
roll
lea
in
add
add
movsl
add
pop
xchg
fs
enter
add
arpl
pop
xor
push
sub
dec
shr
pop
pop
push
push
lea
push
push
push
push
call
scas
repnz
add
mov
add
ror
add
add
push
cli
stos
lret
ficoms
imul
aam
cmpsl
popa
mov
filds
add
add
add
aam
xchg
out
add
shlb
ret
jae
add
add
jns
imul
hlt
lea
pop
pop
push
add
xor
pop
pop
push
rol
xor
xor
rol
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
xchg
sti
out
add
imul
mov
out
mov
scas
fiadds
push
pushf
mov
test
mov
data16
add
shll
mov
out
std
push
mov
mov
hlt
lea
pop
leave
ret
push
push
push
push
call
mov
add
add
pop
bound
add
aam
add
icebp
fcmovbe
add
in
cmpsb
add
mov
add
mov
add
roll
mov
push
add
add
lret
push
jl
add
shll
lret
add
rcr
mov
scas
sarl
pop
je
mov
lea
pop
lea
pop
push
push
call
add
into
stos
add
incb
mov
add
add
add
add
in
mov
scas
test
add
out
push
add
out
cmc
add
add
loope
out
in
add
rolb
ljmp
mov
cli
mov
add
lea
pop
pop
pop
push
inc
pop
pop
push
push
lea
push
push
push
push
push
call
add
add
add
aam
lods
add
add
out
add
add
add
add
movsl
jle
pop
loop
add
mov
pop
pop
add
add
mov
lea
pop
leave
push
push
call
add
mov
add
mov
mov
insb
push
add
add
mov
jno
push
xchg
jne
mov
lds
add
imul
lret
xchg
mov
jl
lret
pop
int3
filds
pop
addl
add
jb
add
popa
push
repnz
add
mov
test
lea
pop
ret
push
push
call
xchg
loopne
adcb
rclb
pop
jae
mov
sahf
pusha
lds
test
add
add
jae
add
add
andb
add
scas
xlat
add
add
add
push
add
mov
mov
fildl
mov
testl
pusha
add
push
arpl
add
pop
mov
pop
push
ror
shl
pop
pop
pop
push
ror
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
leave
jns
add
out
xlat
add
cltd
jp
jl
iret
mov
xlat
add
add
add
jae
add
mov
add
clc
add
mov
popa
add
lock
mov
add
faddl
add
test
shll
add
jnp
push
mov
lea
pop
leave
ret
xchg
and
xchg
icebp
je
stos
or
loope
imul
inc
je
shrb
imul
add
add
lods
sub
js
ljmp
outsb
xlat
pop
mov
adc
in
ljmp
xor
in
push
ds
add
je
dec
call
mov
arpl
mov
cs
add
mov
std
stos
cmp
mov
imul
inc
into
das
loope
fsubrl
enter
mov
pop
add
loope
cmc
push
mov
nop
hlt
jb
pop
imul
adc
push
xor
mov
mov
cmovns
mov
push
int3
ret
mov
dec
popf
mov
cwtl
lret
jg
sbb
mov
adc
adc
jno
cli
cmp
das
cmp
sbb
pop
cmp
lret
ficoms
jmp
lcall
inc
incb
outsb
jno
add
icebp
into
pop
arpl
ds
lea
nop
mov
test
lcall
mov
shll
scas
mov
mov
push
aaa
sub
repz
das
in
aaa
es
fisubl
and
pusha
mov
stos
and
jp
xor
add
push
jle
in
lea
mov
shlb
push
fistpl
add
das
or
scas
mov
pushf
pop
mov
bound
mov
psubw
and
notb
pop
adc
hlt
mov
dec
pop
fcoml
sbb
insl
and
inc
divl
aaa
cmp
inc
pop
clc
jno
lahf
dec
push
add
ret
ds
out
mov
cld
in
aaa
sbbl
xchg
in
adc
mov
hlt
subb
pop
iret
mov
adc
in
in
sbb
sub
xor
sub
das
add
cltd
xor
cmp
scas
xchg
lock
dec
movl
outsb
xchg
mov
hlt
mov
mov
sahf
mov
mov
scas
push
insb
adc
and
push
imul
insl
test
xchg
inc
adc
mov
imul
xor
les
notl
push
test
cmpsl
cs
sahf
push
aad
or
lret
scas
inc
pop
nop
jno
mov
clc
ds
fistl
mov
push
mov
lods
inc
ds
sbb
js
flds
pop
jg
xchg
sub
rcll
das
sub
jmp
scas
pop
sub
repnz
out
test
jecxz
insb
jge
mov
inc
in
call
lret
call
stos
and
stc
daa
nop
xor
mov
push
mov
sub
or
dec
sub
flds
mov
xor
fildl
pop
fucompp
popa
sub
jb
and
stc
iret
test
push
lret
lcall
cli
imul
mov
mov
cmp
push
lret
test
into
sahf
pop
scas
aad
push
push
mov
das
js
dec
mov
adc
in
inc
add
aad
mov
movsb
stos
and
cmp
sub
push
shll
dec
mov
push
mov
xor
fs
cmp
mov
enter
push
push
addr16
add
fdiv
pusha
push
inc
stos
cmp
cmp
mov
jns
in
lcall
inc
in
rcrb
dec
jmp
push
ret
mov
std
fsubr
add
adc
std
sarb
ds
neg
decb
inc
cmp
ret
cmp
testb
fldl
in
and
movsb
aam
pusha
inc
cmp
test
cmp
arpl
push
jmp
cmp
fidivs
xchg
jge
xor
sub
jo
cltd
jb
cmp
repz
aas
xchg
mov
xchg
outsl
lods
cli
in
fcmovne
stos
movsl
sub
pop
ja
jb
mov
rcrl
int
cs
arpl
xor
pop
pop
aas
xor
mov
pop
push
pop
daa
dec
ret
adc
xor
lods
pop
xchg
pop
in
out
call
lahf
aam
xlat
ljmp
shl
xor
test
or
push
jp
dec
mov
sbb
ds
call
lret
mov
inc
jp
out
cmp
dec
add
jp
xor
shll
add
loopne
stc
or
lret
mov
xchg
fistl
xchg
add
dec
mov
aad
push
jge
pusha
lock
jecxz
push
icebp
xor
inc
andl
aas
xorl
or
repnz
sahf
shrl
aam
inc
dec
cli
pop
push
or
mul
cmp
mov
xor
pushf
jmp
and
xor
mov
imul
das
xchg
bound
cmp
setne
fcomps
loope
ds
or
mov
int
mov
popf
add
popf
mov
inc
cmpsl
lods
mov
jmp
fmull
mov
scas
add
lods
jg
daa
loopne
add
or
fs
mov
adcl
les
fadds
mov
push
push
dec
cld
sti
dec
and
adc
sarl
icebp
and
movsb
bound
mov
out
jp
add
inc
pusha
push
icebp
xchg
call
test
xchg
fldl
sub
movsl
in
dec
mov
rorl
scas
mov
push
icebp
in
lods
add
test
adc
xchg
clc
fwait
adc
lahf
xor
xor
ffree
and
outsl
xchg
lods
js
incb
add
out
jbe
push
lea
pop
imul
shl
ficoml
and
inc
jecxz
sub
pop
dec
add
daa
ljmp
pop
int
add
pop
outsl
sbb
or
sub
push
mov
in
inc
mov
test
xor
iret
fstpt
js
test
orl
test
insl
xchg
and
loope
add
test
aam
dec
test
inc
test
and
inc
imul
call
aam
pusha
das
mov
stos
in
outsl
dec
add
fcoms
sbb
insb
mov
mov
add
add
clc
mov
jle
adc
xchg
in
cld
dec
mov
inc
dec
jmp
ja
daa
dec
dec
cmc
mov
jle
xor
mov
push
pop
mov
fldl
js
loope
es
into
jnp
push
sbb
mov
repz
pop
mov
pop
mov
sbb
test
test
imul
cmpsl
dec
ljmp
insb
loop
adc
lods
lock
out
dec
loopne
pushf
jbe
cmpsl
lahf
and
mov
jbe
push
adc
or
lods
out
daa
push
jmp
fisubs
jno
jg
dec
mov
mov
sbb
in
jbe
fwait
sub
fs
mov
or
loopne
jl
jge
je
outsb
dec
jge
cwtl
cmp
mov
mov
mov
xor
fisttpl
mov
sahf
leave
out
adc
jnp
shll
sbb
mov
pop
stos
lods
fwait
lahf
push
push
mov
xchg
ja
cmp
aad
lods
loop
adcb
push
out
iret
cmp
negb
jb
js
aaa
fldenv
dec
mov
mov
inc
jne
flds
inc
and
flds
or
test
or
popl
pop
inc
cmp
add
mov
mov
push
imul
jmp
push
mov
cmp
dec
scas
int3
mov
nop
loope
popf
sti
test
mov
in
jmp
sbb
push
sub
push
pop
in
inc
inc
push
mov
lods
jecxz
ffreep
push
fwait
out
stc
outsb
repnz
sbb
pop
cmp
int
jp
data16
xchg
sub
lods
sub
push
mov
imul
mov
cmp
roll
mov
mov
push
out
es
fldcw
inc
or
ja
scas
in
mov
sub
add
mov
push
push
cmp
sub
jmp
push
jns
cmpl
negl
cmc
pop
out
mov
cmp
sub
adc
mov
adc
test
test
mov
pop
sti
and
jmp
mov
or
add
adc
lods
and
sbb
mov
xor
mov
divps
dec
cli
push
jg
sbb
xchg
mov
cltd
nop
int
ds
mov
gs
enter
fwait
and
jmp
jae
dec
pop
mov
sub
mov
push
inc
pop
in
int3
fbld
in
dec
xor
jg
decb
out
std
xor
loopne
in
jp
dec
les
lahf
jle
lahf
xchg
jge
mov
pop
lds
xchg
fs
in
or
inc
loop
xor
lds
rcll
push
add
mov
xor
xchg
inc
dec
stos
adc
cmc
adc
push
addr16
mov
enter
push
das
mov
cld
stos
inc
outsb
or
inc
jns,pt
in
ss
fisubrl
or
mov
mov
in
or
mov
test
and
mov
lods
test
and
js
mov
fwait
in
add
mov
adc
imul
fdivs
push
jnp
inc
jnp
lret
dec
leave
dec
inc
or
and
sahf
sahf
sub
mov
call
or
cmpsb
mov
bound
psubw
cwtl
sbb
shll
pushl
xchg
xorb
xor
xor
das
cld
dec
inc
jl
in
xchg
or
xor
mov
or
or
out
sbb
or
mov
test
mov
in
test
ds
clc
mov
gs
stc
ret
rcrb
dec
mov
lret
push
outsl
push
insl
fisubrs
rcrb
push
fwait
das
mov
mov
mov
sub
mov
push
jne
mov
or
inc
mov
pop
enter
xor
call
iret
cmp
ret
or
mov
pop
cmp
and
mov
fstl
sbb
xchg
xor
xchg
cmp
dec
stc
adc
jbe
or
scas
pusha
dec
rcr
call
lods
popf
pusha
jno
dec
adcb
ret
adc
push
push
insl
divb
loop
push
out
aas
mov
jmp
dec
out
in
je
pop
sbb
add
sub
xlat
mov
inc
dec
out
mov
xchg
push
mov
or
shrl
dec
movsl
je
mov
jecxz
lods
lret
jmp
mov
mov
fcomip
xlat
and
dec
mov
jnp
dec
test
sbb
jne
jnp
xchg
jecxz
cmp
loopne
pop
inc
ja
dec
iret
mov
push
and
mov
xorl
add
clc
xlat
sti
xor
nop
imul
dec
xchg
add
sbb
and
push
pop
ja
cltd
xchg
xchg
pusha
loope
popf
adc
sti
data16
aad
cmp
pusha
jo
or
cld
mov
jmp
jns
jnp
pop
xor
jb
test
and
mov
mov
neg
icebp
push
ljmp
in
pop
insl
test
jmp
xchg
out
std
std
fsubr
mov
pop
inc
dec
or
test
mov
das
xchg
insl
and
jne
xchg
bound
jno
scas
gs
lret
mov
les
adc
or
int3
push
add
ja
push
mov
scas
cmpsl
ret
xchg
pop
push
xorb
ljmp
loope
add
ret
and
add
xor
jb
stos
lahf
mov
inc
adc
fldt
outsl
popl
mov
fs
lods
popf
js
loope
rolb
or
fcom
inc
clc
mov
sub
icebp
pop
mov
inc
jge
icebp
aas
cld
pop
pop
stos
push
pop
test
cs
stos
sbb
push
xchg
pushaw
adc
fnstcw
xor
cwtl
mov
fildll
and
dec
mov
adc
xorl
push
push
mull
mov
fsubrs
mov
mov
push
rcll
push
mov
movsb
adc
cli
stos
mov
dec
adc
xchg
jmp
scas
mov
xchg
js
push
aaa
cltd
mov
sub
sbb
sti
leave
xor
out
aad
pusha
mov
xor
hlt
add
je
loopne
add
mov
xchg
loope
in
outsl
xchg
mov
and
jle
ss
pop
jne
inc
ljmp
leave
sbb
sbb
daa
jecxz
cmp
test
ds
jecxz
adc
and
mov
adcl
or
mov
in
fs
movsb
xchg
inc
lea
adc
or
es
sub
xchg
jmp
cmp
aam
cmpsl
xchg
inc
movsl
pop
sub
lret
js
dec
jo
sub
imul
lret
flds
jo
ljmp
leave
xchg
cmpb
aaa
icebp
jmp
inc
add
adcb
icebp
sarb
jle
mov
int3
push
adc
jle
out
mov
sbb
inc
and
das
rcrl
jle
push
loopne
movsb
cli
mov
mov
inc
and
sbb
pop
mov
push
mov
popa
push
repz
in
add
and
pushl
dec
and
and
out
lcall
mov
mov
jg
xor
enter
xchg
sti
movsb
je
and
adc
lods
mov
mov
mov
fsubrs
and
out
lds
movb
inc
dec
test
shlb
fiadds
fwait
xorl
stos
jp
sbb
in
lea
sahf
loope
rclb
cli
or
pop
sub
pop
xchg
jnp
js
rcll
mov
mov
cmpsl
popa
inc
jl
fsubrs
pop
mov
jb
add
adc
in
mov
and
sti
mov
in
sbb
and
test
add
imul
xorl
hlt
and
mov
jne
push
dec
inc
pop
pop
arpl
pop
xor
test
xchg
jbe
jo
jge
adc
scas
pop
aas
pop
enter
push
in
jmp
jmp
sub
loopne
and
cltd
mov
sub
outsl
sub
sub
inc
rcll
cld
stc
ss
icebp
add
scas
mov
xor
inc
mulb
fildl
push
shrb
cmp
outsb
pop
cli
mov
xor
scas
pop
movsb
adc
roll
aaa
repz
push
clc
mov
jg
inc
stc
jno
dec
subb
rol
xchg
movsl
mov
add
lret
pusha
mov
adc
cltd
aam
popf
jl
mov
jge
shl
push
xchg
in
push
ja
clc
out
push
inc
data16
mov
lock
mov
scas
adc
sahf
outsb
scas
ss
fistl
ss
loop
xor
leave
out
imul
xchg
mov
repnz
lock
aaa
cli
arpl
ds
pop
imul
aaa
xchg
push
sbb
jp
pop
adc
add
inc
fwait
push
mov
adc
push
js
inc
sub
lea
mov
insl
sbb
sub
and
in
test
shrl
adc
outsl
scas
les
mov
jbe
adcl
mov
mov
imul
fcmovnbe
ret
ret
fbld
or
pop
add
or
cmp
pop
lea
mov
dec
out
jno
dec
lahf
scas
sbb
lahf
cmp
jb
mov
add
aas
add
shlb
sub
jae
sbb
push
fs
outsl
lret
and
dec
xchg
xchg
js
or
loopne
sti
xor
movsl
cltd
das
jns
pop
jns
mov
or
push
add
xchg
ret
pusha
and
mov
ja
stos
shll
jp
add
mov
sbb
or
dec
mov
cmp
mov
xchg
pop
ret
inc
mov
jae
sub
ljmp
ss
sarl
int
mov
dec
mov
test
pop
ljmp
push
or
xor
mov
jne
fcomi
test
int3
mov
pop
pop
std
test
sub
shrd
xchg
addr16
push
icebp
sub
stos
cli
nop
popf
in
bound
aaa
push
cmpsb
and
flds
sahf
and
pop
jae
loop
mov
jl
sbb
push
push
pop
test
dec
inc
or
popa
push
scas
addr16
sbbb
imul
pusha
adc
xchg
mov
fcmovnb
xor
int3
and
dec
sbb
jbe
cltd
call
pmullw
aad
stos
jo
andb
xchg
imul
stos
mov
and
and
mov
xchg
xchg
or
mov
or
das
ret
mov
inc
adc
ret
or
loope
test
aad
outsl
dec
mov
adc
push
sbbb
test
arpl
or
pushf
adc
jnp
jne
cld
cmc
mov
push
data16
pop
dec
arpl
lahf
xchg
and
popf
mov
stos
xchg
sbb
outsl
sbb
add
cmp
popa
repnz
and
out
scas
clc
dec
xor
lods
inc
xor
imul
xchg
ja
je
test
je
mov
xorl
sub
and
xor
mov
dec
test
jnp
cmpsb
inc
adc
or
mov
into
sbb
mov
xorl
inc
aaa
out
or
jb
pushf
les
test
fwait
lret
addb
inc
pop
sub
push
leave
dec
lds
cmp
add
sub
cmpsl
dec
sahf
les
cmp
push
pop
push
push
xor
fs
pop
repnz
pop
pop
push
lret
push
pop
jb
push
inc
mov
add
push
test
jne
cli
pop
mov
std
mov
ficoms
adc
cmpsb
inc
jno
cmp
adc
push
mov
lahf
ds
and
mov
xchg
xor
lds
mov
jg
ret
es
rol
int
dec
mov
leave
push
dec
jmp
or
clc
inc
push
aaa
pop
lret
mov
dec
push
loope,pn
jge
jl
xchg
jae
ja
xchg
out
xor
in
jp
and
jbe
mov
mov
loopne
movsb
loopne
jmp
adc
dec
jno
xchg
mov
mov
and
aaa
inc
xorb
idivb
cmp
test
sub
fimuls
imul
out
fldt
sub
mov
frstor
cmpsb
mov
xchg
imul
into
jle
jg
xor
adc
sti
repnz
cli
add
incl
popf
inc
repz
cmpb
cmp
xor
jge
xchg
inc
inc
inc
pop
and
adc
push
lahf
add
test
jecxz
fisubrs
scas
inc
ljmp
fldt
and
mov
fisttpll
out
addr16
mov
movsl
adc
jge
mov
jno
jnp
inc
xchg
bound
sahf
enter
and
cmp
xor
into
jo
iret
xor
dec
push
jnp
data16
imul
sub
fcmovnb
lods
mov
jmp
sbb
xchg
ss
jns
das
insb
mov
adc
mov
mov
pop
xor
push
add
lds
mov
xor
dec
xchg
fsubrl
lods
mov
pop
dec
into
repnz
inc
scas
out
add
adc
cld
sub
pushf
loope
mov
nop
cmpsl
fisubrl
ror
and
pushf
inc
scas
xor
daa
ret
sbb
fsub
enter
push
jg
out
in
fisubl
jae,pn
mov
in
dec
cld
or
mov
xchg
loopne
mov
lahf
lods
lods
cmpsl
pop
xchg
loope
lds
das
jae
ljmp
jle
ss
mov
xchg
cmp
sbb
lds
ret
xor
shl
xchg
in
pop
mov
in
gs
inc
push
inc
sub
addr16
adc
inc
add
out
std
cltd
out
xchg
cmp
clc
mov
into
in
cmp
dec
aam
dec
adcb
mov
dec
and
add
arpl
imul
jbe
jp
scas
shrb
fs
lds
xlat
inc
bound
inc
sbb
or
call
jl
mov
out
add
inc
notl
push
loope
push
lcall
ret
fwait
sbb
inc
hlt
pusha
sbb
and
cmp
mov
stos
outsl
mov
and
insb
pop
lods
push
insl
fdivl
mov
sahf
sahf
cmp
andb
dec
repz
inc
test
cli
jae
nop
inc
pop
push
sub
jg
fldenv
call
and
in
je
lds
lock
les
inc
sbb
dec
inc
pop
aad
sub
cmp
mov
das
mov
roll
sahf
test
insb
aas
orl
scas
or
lods
lds
pop
push
test
mov
mov
mov
and
scas
aaa
add
fsts
fwait
cmp
ds
out
adc
aad
pop
push
push
in
inc
loop
fstps
push
lds
cwtl
mov
sub
lahf
mov
add
inc
jns
push
sbbb
mov
mul
jnp
cmp
jae
cmp
js
sbb
and
iret
pop
adc
sub
mov
shl
stos
sub
xor
inc
pop
fwait
cmpsl
mov
jmp
mov
scas
fstpl
dec
ja
popf
sbb
enter
xchg
dec
sbb
xchg
xchg
js
idivb
std
or
mov
iret
mov
adc
out
xchg
test
jb
push
icebp
mov
andl
push
insb
negl
cltd
jne
xor
inc
or
xlat
xchg
sbb
out
das
xor
pop
mov
repnz
sbb
sarb
pop
adc
dec
popf
insb
xchg
jecxz
movsl
sub
mov
xor
push
aas
fisubl
cmpl
loope
cli
push
xchg
imul
out
adc
sub
dec
repnz
enter
pop
cli
and
inc
add
adcb
jg
xchg
icebp
xchg
test
dec
sti
xor
mov
std
jae
test
test
rclb
fldenv
movsb
dec
inc
sub
test
xlat
jp
nop
sub
jns
push
fldt
pop
outsb
xor
int3
cli
or
push
cmpsl
xorb
mov
dec
xor
push
cmp
aad
push
movaps
out
repz
lds
cltd
xchg
lret
cmc
xchg
lock
fidivrl
pop
and
xor
movsb
mov
repz
loop
dec
mov
fs
xchg
inc
mov
lret
pop
inc
jo
loop
xor
cld
in
and
mov
mov
adc
jbe,pt
das
out
pop
lcall
ds
pop
push
arpl
and
cltd
pop
push
sbb
mov
loop
movsl
clc
shl
cmp
mov
stos
pop
imul
mov
mulb
movsl
dec
push
mov
stc
pop
pop
dec
or
inc
jg
aaa
cltd
sti
lea
imul
mov
dec
xor
ljmp
lret
loop
push
jp
les
xor
sbb
cmp
sti
push
arpl
jns
rcrl
popa
add
lret
xchg
ljmp
jno
jp
leave
jle
shrl
dec
cmp
clc
imul
adc
mov
jmp
fmull
scas
sub
xor
inc
outsl
push
jo
pop
inc
jno
mov
push
push
sub
jb
mov
mov
sbb
outsl
rcrl
fs
and
clc
pop
inc
cmovnp
and
mov
sub
into
in
push
xlat
nop
loope
cs
outsl
repnz
add
mov
in
sub
mov
test
cs
lahf
ss
pop
pop
popa
arpl
or
adc
sbb
pop
xor
test
mov
repz
into
outsl
cmp
ss
mov
sub
mov
fiaddl
sbb
dec
dec
jecxz
mov
lods
inc
add
stc
xor
or
jno
aad
pushf
dec
lea
pop
mov
jle
out
adc
mov
lock
inc
mov
jb
pop
loope
inc
mov
push
adcb
shll
cmc
jb
jnp
scas
pop
mov
dec
and
mov
retw
push
repnz
push
jbe
adc
mov
push
xor
pop
das
aaa
and
jb
test
shll
out
add
inc
and
lcall
aas
fisttpl
movsb
xchg
add
pop
out
dec
dec
lock
fidivrs
sti
jl
out
sub
push
pop
fstl
je
jne
rcrb
divb
or
mov
cmpsb
out
mov
or
add
repz
mov
insb
out
into
dec
popa
xchg
lods
loop
test
and
lcall
popa
sti
sbb
xor
push
push
mov
loope
add
mov
ds
lods
mov
jl
cmpsl
std
and
insl
out
pop
enter
sub
icebp
ficoms
cmp
bound
add
addr16
lret
inc
cmp
sbb
fimuls
dec
div
cmp
and
pop
sub
or
sub
sarl
mov
and
ljmp
std
mov
in
mov
adc
insb
mov
pop
adc
insb
rcrl
cmp
lret
sbb
xor
xor
xlat
sti
jne
loopne
inc
mov
xchg
jnp
fisubrs
cmp
test
cmpsl
mov
andb
push
and
iret
js
mov
push
icebp
and
push
adc
cmp
jne
push
pop
or
jb
or
xchg
test
cwtl
xchg
pop
notl
ret
ror
dec
stos
in
popf
insb
lret
lcall
stos
fidivs
enter
sbb
push
mov
lret
adc
iret
mov
add
sub
stos
push
cli
inc
lds
mov
jne
repz
stos
add
cmpl
or
sbb
inc
cmp
xor
mov
jo
iret
orl
push
push
inc
and
add
into
test
in
cmp
mov
pop
stc
stos
or
or
icebp
adc
and
loopne
and
cld
mov
nop
lock
sub
dec
test
scas
das
movsb
push
inc
add
cmp
fmull
pop
push
push
repz
fwait
mov
pop
rolb
ds
mov
movsl
push
insb
mov
mov
scas
ret
adc
jae
dec
push
dec
sbb
scas
mov
xchg
addr16
pusha
fldl
lahf
ljmp
mov
mov
add
imul
mov
mov
inc
out
aad
aam
lret
test
ds
push
addr16
orl
fidivs
mov
dec
mov
push
stos
stos
mov
neg
mov
feni(8087
addl
push
jbe
and
xchg
sub
out
les
xor
lock
iret
mov
cltd
inc
imul
aam
or
pop
jle
push
xchg
mov
sub
pop
sbb
in
scas
call
ret
fs
xchg
mov
fmull
pop
iret
pop
push
addps
je
fildl
xchg
out
fistpll
adc
push
js
mov
inc
xor
or
fsubrl
and
aad
outsl
jg
dec
mov
clc
fnstsw
jmp
jno
adc
mov
lahf
xchg
in
mov
add
lods
aam
dec
adc
hlt
lock
rcr
aas
jbe
test
out
popf
nop
data16
repnz
pop
int3
lods
sahf
inc
add
outsl
gs
or
jp
xchg
jbe
rcrl
and
or
cmc
jae
xchg
outsl
loop
pop
aam
xor
adc
pop
outsb
and
mov
fs
std
mov
and
fmull
in
sub
adc
hlt
sbb
dec
aas
imul
call
aaa
bound
cmpsl
pushf
add
sahf
mov
neg
cmp
inc
dec
sub
xor
jg
mov
and
in
aas
inc
aad
mov
hlt
inc
in
and
sub
push
loopne
mov
out
cmpsl
cmpsb
out
xor
test
cld
psrlw
or
adc
in
sub
push
call
fstp
sub
shlb
pop
pop
loope
ret
out
sub
dec
insb
lods
dec
adc
lods
outsl
loopne
cmpsl
outsb
jmp
xchg
out
fisubrl
aam
xor
mov
pop
fisubrs
dec
or
cmovnp
push
fs
xchg
sbb
into
ret
mov
pop
xchg
pop
mov
sub
inc
mov
and
dec
sbb
xchg
loop
jnp
adc
pop
add
fwait
mov
xlat
cwtl
inc
add
test
inc
lock
sbb
scas
ret
sti
sarl
mov
dec
xor
pop
decb
sub
xchg
bound
cmp
rcrb
dec
iret
and
push
repz
test
cld
lahf
icebp
cmc
pop
jl
xchg
mov
loop
mov
fidivl
cmp
cld
data16
scas
out
mov
cwtl
daa
scas
xlat
test
inc
ljmp
stc
movsb
pushf
aaa
out
movw
jae
pushf
sbb
sub
pop
mov
fcoms
repnz
in
or
xchg
sahf
push
imul
jp
int
jg
fstpl
push
mov
je
sahf
popa
xchg
xchg
pop
cmpsl
adc
movsb
into
shlb
mov
sbb
mov
es
js
shrl
push
aaa
mov
push
cltd
push
mov
or
dec
and
repz
xor
sbb
stos
adc
cmp
jl
mov
xlat
out
xchg
ss
into
adc
xchg
mov
das
jno
in
icebp
push
pop
scas
inc
cmpsb
mov
movsb
cld
cmc
jb
fisubl
addr16
fwait
inc
jbe
ret
repnz
js
sbb
dec
mov
stos
sub
xor
int3
fstl
mov
iret
in
pop
push
inc
jae
sub
aaa
jne
hlt
fdiv
jb
cmp
add
in
out
inc
mov
adc
adc
inc
add
jb
orb
stos
ficomps
mov
or
cmp
rorb
sti
loope
gs
xchg
jl
push
lcall
cmp
and
sahf
jb
pop
orps
gs
xlat
sahf
or
daa
and
fildll
inc
jne
mov
lret
dec
pop
arpl
lock
in
mov
sub
pop
push
adc
jne
mov
dec
aam
movsb
mov
clc
test
jge
push
xor
dec
xorl
sbb
jmp
cmp
icebp
jo
ljmp
je
add
mov
cmpl
mov
cmpsb
repnz
int3
hlt
xor
cmpb
out
xchg
xlat
cmp
push
insl
shll
sub
add
lods
cmpsl
sub
fwait
jb
aam
jmp
dec
adc
in
stos
addb
jge
test
sahf
std
mov
jnp
sub
xor
mov
test
or
push
test
jns
cs
xor
pop
cmpsb
xchg
in
add
push
dec
dec
test
into
andl
pusha
std
sbb
mov
or
pop
ret
dec
dec
outsb
xorb
roll
leave
inc
inc
outsl
mov
and
lea
arpl
pop
xlat
imul
mov
or
insl
xorb
fwait
xor
in
sub
inc
stos
jb
xor
jl
outsl
insl
jge
je
sti
mov
mov
lds
loope
jb
sbb
push
aam
mov
insb
dec
push
arpl
aam
jbe
mov
jns
push
iret
cmp
mov
gs
out
bound
mov
push
add
lahf
mov
cmpsb
mov
xchg
scas
rcl
sub
andb
push
xor
sbb
cli
mov
cmp
mov
ret
xor
sub
jle
jge
inc
cld
mov
das
lods
push
mov
mov
inc
loop
loopne
stos
iret
iret
jnp
push
repnz
jne
mov
jo
lahf
mov
divb
mov
adc
rcl
lds
andb
push
pop
fidivrl
mov
jbe
adc
xchg
cli
xchg
dec
loopne
sub
and
inc
mov
call
dec
rcll
ja
inc
sbb
les
adcb
pop
stos
sahf
xchg
dec
bound
add
fwait
dec
loopne
inc
daa
xchg
scas
jne
ja
or
scas
mov
mov
lods
pop
mov
aaa
mov
adc
or
mov
mov
in
cmc
dec
dec
fisubs
popa
add
dec
mov
subb
mov
aaa
xor
fsubl
sarl
ljmp
loopne
das
push
and
ret
and
arpl
negl
pop
aas
std
fisttpl
out
inc
jg
push
notb
mov
cmpsb
cmpb
nop
push
push
add
sbb
ja
nop
bound
mov
ret
adc
inc
xchg
sub
aas
mov
cmpb
push
inc
add
pop
pop
insl
out
scas
enter
xor
push
stos
pop
dec
sbb
ret
adc
test
int3
sub
nop
roll
add
hlt
fcomp
cmp
insl
push
aam
xchg
push
cmc
data16
xor
stc
mov
stc
dec
int3
out
sub
or
rcrb
pop
sub
clc
ffree
jbe
out
outsl
push
xchg
in
xor
les
adc
or
mov
xchg
xor
jp
rolb
adc
push
int3
jno
push
dec
imul
jne
lock
jae
adc
push
fsubrs
shll
mov
bound
and
sub
incl
std
jecxz
cltd
xor
push
mov
jl
clc
std
pop
imul
sub
inc
mov
xor
hlt
loopne
icebp
mov
adc
mov
fcompl
sbb
or
test
int3
dec
or
or
rolb
or
ret
ret
stos
push
popa
outsl
and
out
test
es
push
iret
mov
cltd
aam
loop
mov
mov
mov
daa
arpl
push
mov
push
pop
sub
mulb
push
dec
shlb
adcb
in
cmpsl
dec
lret
inc
and
pop
sbbl
nop
imul
daa
out
stos
adc
xchg
insl
daa
lea
and
inc
test
xor
mov
add
daa
rcrb
pop
xchg
rorl
fcmovb
sbb
adc
lret
les
and
mov
dec
in
cli
dec
mov
push
out
in
fdivl
fs
jmp
xchg
mov
cmp
cwtl
stos
mov
jg
add
jp
xor
subb
jp
ret
jbe
xchg
xor
shr
sbb
rol
ret
gs
dec
add
ret
roll
fwait
add
push
pushf
sti
or
mov
sub
fdivs
cld
popf
jg
cmpsl
xchg
jne
sbb
iret
or
repz
loop
daa
cmc
ret
jle
fmuls
test
cwtl
add
movsb
inc
mov
sti
sub
in
lods
push
or
sub
jge
movsl
outsl
and
daa
negl
lret
cmp
daa
es
dec
scas
int3
movsl
test
cld
xchg
mov
xchg
shl
or
add
cmp
add
cmpb
ljmp
sbb
sub
repnz
mov
in
mov
xchg
outsb
jecxz
lahf
xchg
dec
add
fwait
mov
xor
fiaddl
add
popl
sub
rorb
mov
sub
push
xchg
sbb
or
arpl
lret
stos
das
mov
cmp
mov
pop
adc
sbb
loope
les
mov
das
repnz
aas
sub
pop
mov
fisttpll
jns
adc
out
push
cltd
fsub
adc
jge
test
pop
xchg
push
sub
mov
push
ret
lods
jge
cmp
mov
test
lret
jge
pop
or
sbb
pop
sahf
inc
mov
fcomps
iret
out
cmp
lcall
sub
sbb
imulb
pop
push
pushf
into
fcomps
rcll
int3
or
adc
mov
shlb
cwtl
jo
vpand
cwtl
data16
icebp
adc
xchg
subl
jne
sbb
dec
adc
push
add
nop
movsb
dec
dec
fs
outsb
sub
pminub
jno
in
xchg
ficomps
ss
xchg
dec
cmp
mov
adc
jle
push
adc
adc
or
xor
mov
addr16
scas
or
mov
mov
stc
jne
dec
inc
outsl
pop
jno
xor
dec
iret
out
xchg
sub
and
shlb
adc
jge
test
jno
lods
or
or
das
jmp
inc
add
push
test
subl
xlat
and
mov
arpl
mov
dec
lcall
push
dec
mov
scas
je
loopne
clc
repnz
xor
data16
aam
in
shll
in
outsb
add
es
gs
outsb
mov
cmp
add
testb
pop
push
adc
mov
mov
aaa
inc
test
fs
xchg
jg
sarl
sub
push
pop
inc
jmp
jl
xchg
or
mov
mov
mov
ficoml
les
icebp
dec
enter
popf
jne
sbb
add
mov
inc
iret
xchg
aad
data16
sub
int
lods
int3
cmc
or
pop
int
xchg
data16
mov
inc
mov
dec
jnp
push
insb
pop
adc
dec
repnz
sbb
into
inc
add
or
test
or
flds
add
mov
sub
shll
xchg
into
rol
push
into
cmp
pop
ja
scas
jno
sub
add
je
rcr
jae
es
movb
add
insb
cmp
pop
sbb
rcl
mov
sub
loop
xchg
mov
test
fidivl
jg
test
ljmp
push
ror
or
sbb
add
or
scas
inc
inc
iret
or
mov
jecxz
xchg
mov
repz
pop
sti
jo
push
xor
test
mov
into
pusha
xchg
outsl
daa
mov
fiaddl
xchg
sbb
faddp
mov
scas
fisttpl
fcompl
cmp
mov
mov
ljmp
mov
mov
mov
orb
mov
xchg
jge
das
cmc
out
and
pop
pop
jg
clc
cmp
int
cmc
or
cmp
xchg
outsb
jns
mov
adc
lahf
pushf
les
mov
rcrl
dec
nop
cwtl
imul
inc
lcall
iret
dec
push
cli
iret
lods
jns
fimuls
and
cmp
sbb
jo
lahf
xchg
imul
mov
ss
cmc
pop
dec
jnp
adc
pop
dec
cmc
jne
xchg
arpl
mov
popa
pop
imul
mov
jmp
and
mov
jmp
and
sub
jo
jmp
repnz
push
inc
jnp
fbld
xchg
xor
shll
stos
andb
xchg
ret
mov
xor
add
test
xchg
faddp
sub
rcll
and
setae
mov
fs
loope
aas
inc
rcl
dec
in
add
xchg
dec
lea
inc
inc
jp
dec
int3
xchg
dec
pop
xor
and
pop
stos
roll
xchg
arpl
sbb
adc
push
mov
mov
adc
mov
pop
xor
push
jnp
addr16
fnsave
ficoms
popf
sbb
xor
fucom
aam
inc
jmp
lock
xchg
out
jge
mov
psllw
das
rcrl
mov
mov
into
iret
in
or
jg
xchg
push
xor
inc
pop
mov
mov
shrb
mov
aas
int
ja
mov
xor
inc
dec
test
mov
dec
lahf
pop
mov
mov
dec
inc
loopne
popa
std
js
inc
jae
mov
in
sub
jg
rcrb
mov
push
jnp
and
mov
outsl
sub
out
psrad
xor
xchg
jnp
push
leave
mov
fcoms
stc
adc
cmp
jp
stc
cmpsb
in
xchg
inc
dec
inc
cld
scas
mov
loope
or
pop
push
sbb
rclb
in
push
xor
mov
add
fstpl
xchg
loop
aaa
mov
popf
in
fiaddl
aas
call
lea
inc
push
shlb
xchg
jmp
mov
push
pop
je
lret
xor
shl
bound
out
movsb
scas
dec
outsb
andb
mov
lcall
pop
inc
inc
inc
sbb
cmp
rorb
fucomip
addl
adc
dec
sar
jp
pop
push
jbe
add
cmpsl
or
pop
jb
mov
movl
mov
mov
xchg
in
xor
pop
mov
es
in
imul
cmc
inc
pop
adcb
stc
mov
pop
adc
scas
test
mov
or
lret
test
jnp
push
mov
lods
cwtl
shll
inc
sbb
fmuls
sub
sar
sub
test
jmp
mov
cwtl
xorl
or
lock
jmp
aad
push
pop
es
and
xchg
or
mov
jge
data16
fildl
cmp
clc
dec
or
push
int3
inc
cmpsw
mov
jge
sbb
andb
ss
cmp
lret
stc
inc
mov
dec
push
mov
jnp
cmc
out
jmp
jle
dec
xchg
jge
dec
sbb
das
popa
sub
out
fadd
and
or
adc
insl
cmp
adc
push
mov
je
inc
mov
call
je,pn
pop
cmp
dec
and
mov
and
mov
mov
push
push
pop
fmull
xchg
push
cmp
inc
pop
rcr
or
push
jne
jecxz
addr16
cs
jae
mov
mov
inc
sub
lcall
cmp
inc
jmp
xor
jne
mov
xor
in
or
js
pop
mov
inc
insl
outsb
xlat
and
cmp
sbb
inc
dec
fisubl
push
dec
aam
data16
push
lret
int
cmp
pushf
xchg
push
shrl
mov
int3
sub
mov
fcmovnb
and
mov
loopne
inc
lock
fsub
imulb
jge
leave
pxor
or
stos
imul
xor
jle
shlb
cld
cmp
cmp
add
or
jl
cmp
das
ss
scas
sbb
mov
imul
push
jno
andb
jb
fnsave
fs
movl
subl
ss
bswap
in
dec
push
test
xchg
and
stc
movsl
jbe
std
call
add
mov
movaps
push
in
xchg
int3
vcvtss2sd
clc
shlb
fmull
jo
ds
bound
iret
das
std
push
add
xor
sub
ficomps
or
inc
push
subb
in
arpl
insb
sub
xchg
sti
push
or
dec
sub
dec
ja
xchg
cmp
cmp
jmp
jle
cmc
push
lret
adc
xchg
or
std
inc
pop
out
mov
ret
sbb
test
ss
mov
loope
outsl
jp
jg,pn
jg
sarb
or
in
pop
push
in
fsubs
add
push
loope
pop
in
out
push
and
les
sbb
icebp
imul
subb
es
and
cli
pop
lret
dec
lds
lds
out
and
sahf
cmp
fwait
shlb
push
xchg
pop
xlat
push
jmp
adc
pop
push
pop
scas
in
loop
add
nop
mov
mov
inc
jge
mov
das
daa
cli
push
adc
xstore-rng
cmpsl
inc
fbld
adc
sub
xchg
fsubr
cmp
divb
outsb
dec
lea
roll
push
mov
add
popf
repnz
popf
sub
int3
jmp
in
inc
mov
pop
push
add
dec
cmp
orb
ss
pop
cmpsb
xchg
mov
rcrb
sub
xchg
rorl
cmpl
dec
sub
lret
out
dec
ja
xchg
adc
mov
inc
pusha
aam
or
mov
mov
gs
imul
jg
jmp
jg
dec
cmp
xlat
and
xchg
hlt
push
repnz
pop
mov
jno
mov
cwtl
cli
sub
dec
mov
imul
les
outsb
or
pop
popf
test
out
mov
or
inc
cmp
inc
adcb
imul
inc
sbbl
adc
pop
icebp
jg
imul
sahf
out
addl
and
xchg
adc
jb
mov
xor
in
xor
movsl
cmpsb
or
nop
mov
pop
fnstenv
or
jns
mov
repz
dec
repnz
ffree
cs
fsubrp
xchg
ror
jno
adc
and
mov
pop
and
test
jo
bound
jns
cli
adc
mov
and
sbb
out
stos
jecxz
lods
mov
and
add
cmp
inc
push
adc
jmp
or
jno
mov
mov
jno
loopne
mov
loope
int
imul
and
mov
aam
dec
xchg
jo
mov
insb
loop
mov
sbb
aas
dec
sbb
and
push
out
addr16
rclb
mov
test
pop
add
xchg
sbb
xor
das
xlat
push
adc
repz
sub
addr16
mov
std
in
xor
mov
iret
xor
nop
stos
dec
and
mov
cmp
in
cmpl
push
jge
jl
mov
jmp
repz
inc
ja
mov
mov
popf
idivb
pop
test
ret
push
sub
std
pop
cmc
push
cltd
out
add
adc
or
and
cmp
jecxz
arpl
sbb
jo
xor
aad
and
cmpsb
add
loopne
inc
out
daa
mov
fs
rorb
loop
aam
mov
rdtsc
mov
lea
lret
in
popl
or
movsb
out
aas
jmp
cltd
cltd
stc
inc
mov
and
enter
out
mov
xor
ds
dec
or
test
mov
cmpsl
pop
sbb
lcall
lcall
xor
add
sarb
movsb
das
jb
xor
out
js
std
dec
sbb
and
cld
pop
imul
xor
iret
ss
push
ret
mov
jo
out
xor
jge
in
cmpsb
sbb
pop
xor
mov
sub
dec
out
divb
xchg
int
inc
in
mov
cmp
push
in
dec
cs
loop
jne
aad
xchg
inc
mov
push
cli
outsl
push
loope,pt
xchg
popf
out
inc
imul
push
push
es
jge
cmp
fistl
inc
sbb
sub
pusha
repnz
int
clc
push
add
out
add
jne
inc
mov
movsl
push
pop
lds
stos
push
aas
mov
xchg
loopne
lret
iret
call
cmp
sbb
pop
push
repz
pop
pop
popf
jg
and
jne
cmp
loop
sbb
rorl
sub
sbb
xor
xor
cwtl
jne
sub
jle
cmpsl
xor
adc
add
lahf
mov
pop
jp
sub
in
imul
pop
sub
mov
test
adc
xor
jbe
es
mov
pop
out
mov
xor
lock
stos
xchg
push
ficompl
lahf
add
addr16
out
cwtl
das
xchg
mov
fwait
bound
aaa
stos
sub
enter
mov
mov
push
jo
addb
pop
inc
jg
cltd
pop
xor
lret
sub
jmp
inc
addr16
mov
add
bound
lret
loop
stos
enter
pop
adc
adc
stos
ljmp
cwtl
pop
dec
pop
cmpsb
mov
pop
shlb
mov
out
add
push
outsl
cli
out
pop
inc
cli
fxch
sub
dec
mov
aad
imul
cmpsl
inc
pop
mov
and
dec
lret
out
jle
sub
jle
movsl
clc
iret
lods
and
aaa
out
pop
mov
bound
mov
dec
push
int3
pop
lock
pop
cvtdq2ps
icebp
sub
and
out
leave
loopne
cltd
clc
aad
mov
dec
lret
cltd
mov
xchg
sbb
loop
pop
mov
mov
leave
pop
pop
inc
int
das
dec
dec
jbe
popa
out
pop
and
sbb
mov
mov
addr16
mov
loop
xor
xor
scas
jl
aad
xlat
pop
bound
inc
mov
push
stos
mov
inc
cwtl
dec
in
or
in
mov
sbb
and
push
les
push
jb
out
and
mov
les
jno
or
loop
jbe
pusha
repz
sub
adc
mov
ss
out
call
and
jae
jmp
dec
loopne
adc
push
push
sub
sahf
int3
andb
inc
stc
popf
mov
mov
add
addl
pop
or
and
cmp
addr16
les
xor
cli
xorb
adc
sahf
jge
inc
je
pop
shl
or
testl
xlat
mov
jb
or
pop
ss
inc
mov
hlt
inc
push
das
dec
ret
cld
ret
aaa
pop
mov
mov
andb
in
in
aaa
popf
clc
push
pop
xchg
test
in
rcrb
cmp
test
mov
pushf
lea
aad
jno
or
or
pop
adc
fs
hlt
cmc
sub
xchg
xchg
pusha
xor
adc
pop
loopne
mov
loope
fwait
xchg
and
mov
or
dec
or
hlt
push
sbb
fdecstp
xchg
test
cmpsb
inc
stc
leave
repnz
into
mov
pop
cltd
xor
xor
adc
mov
pop
in
movsb
inc
inc
iret
sub
cmc
clc
cmpl
pop
sub
or
pop
popa
ljmp
das
cmp
mov
loope
or
push
out
lcall
push
pushf
test
pop
pop
arpl
stos
pop
lds
cmpsl
mov
sub
dec
jg
cmove
fwait
jo
inc
gs
and
cld
cmp
shll
mov
cmpsl
push
dec
in
leave
leave
in
lods
test
push
insl
jp
cmc
aam
scas
sub
jle
push
and
push
or
mov
out
sti
jecxz
mov
sub
pop
mov
scas
jg
pushf
and
bound
add
dec
hlt
adc
js
arpl
add
xlat
push
incb
cld
jle
testl
testl
je
push
mov
addr16
incb
xchg
adc
adc
push
adc
cmpsl
fcmove
mov
cmp
jp
push
sbb
push
xchg
mov
leave
inc
lods
and
adc
or
je
test
loopne
or
sbb
arpl
mov
jmp
mov
inc
testb
lahf
ffreep
mov
ja
movsl
sbb
xlat
sub
xchg
push
mov
movsl
xor
gs
pop
aas
lea
data16
pop
andl
pop
sbb
std
push
pop
xchg
pop
sahf
dec
sub
and
fwait
cli
or
fisubl
sub
cli
or
mov
add
faddp
or
xchg
mov
push
sbb
gs
test
mov
in
fldt
outsb
xchg
inc
mov
insl
mov
add
stos
incl
dec
inc
pop
outsb
jae
inc
dec
sbb
xchg
cmp
sub
add
push
push
jmp
xchg
shrb
sub
out
and
push
mov
xchg
jb
subb
ja
inc
mov
lds
popf
inc
sub
adc
imul
jno
add
cmp
sub
pop
push
pop
pop
incb
imul
fisubrl
ret
or
mov
xchg
lods
cltd
jne
cwtl
sub
jbe
mov
add
shrl
enter
xchg
fwait
sub
insl
dec
pusha
std
into
mov
lahf
rclb
icebp
inc
or
std
scas
mov
xchg
std
test
call
sbb
or
mov
mov
addl
jb
cmp
aad
in
stos
mov
mov
hlt
dec
and
outsl
jmp
pop
xchg
cltd
sbb
ret
ss
sbb
pusha
dec
xchg
cmc
movsl
clc
stos
pop
push
push
dec
pop
push
lock
jnp
jno
dec
lret
leave
fstl
into
stc
dec
push
adc
mov
mov
in
push
aas
xchg
sbb
ja
imulb
outsl
mov
pop
and
out
jnp
xchg
pop
mov
aad
push
cmp
std
sbbb
lret
imul
repz
pop
inc
daa
scas
or
mov
imul
mov
push
ret
and
int3
ret
cwtl
dec
shrb
movsl
insl
xchg
adc
pop
push
jg
adc
daa
das
dec
inc
sbb
and
ljmp
pusha
mov
sub
cmp
idivb
ljmp
add
push
mov
cmp
lret
xor
xchg
gs
fistl
inc
mov
out
pop
cli
xchg
xor
wbinvd
ret
mov
mov
js
or
sahf
hlt
notl
inc
f2xm1
jg
mov
inc
popf
les
cld
lahf
or
addr16
cmp
mov
sub
out
jae
mov
mov
cmc
pop
push
popf
xor
and
cmpsb
jno
cmp
stos
adc
jno
and
pop
pop
push
call
sub
imul
out
pop
leave
or
lea
lret
pop
mov
imul
fcmovu
jl
insb
jge
jge
xchg
add
imul
cmpsl
xor
pop
jg
inc
sub
sub
in
pop
dec
movsb
ljmp
aad
pop
mov
inc
loop
cmc
push
lahf
shll
adc
int3
pop
pop
std
dec
xor
out
cmp
xlat
icebp
and
mov
lock
inc
imul
leave
mov
bound
sbb
jb
pop
mov
xchg
stos
adc
inc
mov
int3
inc
rcll
or
pop
inc
or
fmuls
xchg
fsubp
stc
test
pop
xor
test
fnstenv
dec
js
inc
mov
lods
out
mov
mov
scas
xchg
cmp
push
mov
daa
mov
cwtl
mov
pop
jecxz
jne
push
pop
pushf
incl
sti
jnp
push
xchg
out
ret
dec
dec
xor
or
es
mov
repz
out
jle
loopne
push
int
or
inc
sbb
inc
sub
xchg
cmp
nop
into
data16
push
and
arpl
dec
out
lods
push
addl
pop
and
movsl
lret
xchg
call
add
enter
push
or
mov
mov
nop
cwtl
rcll
xchg
aam
mov
jg
dec
or
xchg
movsl
mov
scas
sti
dec
or
mov
std
cs
push
mov
jg
orb
inc
das
mov
pmulhw
pop
leave
outsb
push
insb
pop
xlat
pop
test
mov
pop
push
gs
leave
jno
and
cmp
xor
lcall
sub
mov
or
mov
jb
outsl
xchg
test
sahf
aaa
dec
cmc
mov
pop
push
sbb
fisubrl
or
in
push
inc
out
sbb
in
dec
sbb
dec
xchg
lahf
sbb
sbb
push
dec
sarl
sbb
int
loop
push
mov
cmp
cli
rclb
xor
jecxz
fnsave
sub
dec
add
or
sub
inc
shll
fnstenv
xor
adc
iret
sub
jbe
lcall
jne
push
push
dec
cld
cmp
je
jbe
mov
jne
sbb
ficoml
jno
addr16
ret
pop
sub
lods
ja
nop
jecxz
cmp
mov
jecxz
lds
mov
mov
popa
pop
or
lods
out
cli
sub
pop
or
js
adc
mov
mov
pop
add
cld
repnz
sub
jno
pop
insl
mov
xchg
jmp
dec
mov
push
mov
ret
cwtl
xchg
in
xchg
add
adc
scas
fldcw
in
fldcw
testb
xor
pop
insl
sub
rdmsr
ret
mov
jns
pop
out
cmp
mov
ljmp
loope
xor
hlt
add
push
into
xchg
lods
std
jnp
mov
push
cmp
pop
lret
sub
xor
setl
xchg
push
pop
mov
sub
push
inc
sbb
cwtl
outsl
or
jmp
cwtl
movsl
ljmp
or
mov
mov
xor
xchg
push
cmp
add
dec
jb
lahf
lea
dec
cs
push
pop
mov
and
ret
sbb
and
mov
loop
xor
loop
cmp
mov
iret
shll
sbb
cli
jle
in
mov
adc
daa
fsubrs
xlat
mov
inc
dec
cmp
pop
and
dec
mov
pop
dec
sbb
lcall
out
daa
fs
arpl
gs
sub
jae
sub
add
loope
fdivrs
pop
or
inc
xchg
int3
sbb
rcrb
dec
inc
call
and
es
push
pop
fwait
mov
adc
cltd
adc
call
nop
out
cli
dec
popl
out
lock
mov
mov
ja
mov
mov
mov
pop
push
test
xchg
jecxz
mov
movsl
scas
sbb
jae
or
in
sbb
push
fcompl
lcall
add
leave
in
and
and
or
sub
dec
cwtl
fcoms
lret
cli
inc
mov
xchg
xchg
in
cli
ret
movsb
fnstcw
sub
jl
dec
in
push
jge
jae
sbb
shll
or
popf
lds
cmp
xor
xchg
jbe
adc
lods
iret
push
cmp
dec
mov
cmp
adc
std
or
sbb
jecxz
test
pop
mov
push
dec
aaa
out
adc
cmpsl
imul
lahf
jp
je
repz
pop
push
popf
push
popf
jbe
push
ss
push
or
mov
cmp
or
lods
push
mov
xchg
into
aad
in
ret
and
sub
fisttps
xor
and
jnp
add
adc
adc
iret
jg
mov
pushf
mov
mov
jmp
movl
mov
in
pop
clc
js
mov
cwtl
popl
sbb
xor
rcrb
cmpsl
inc
andb
in
inc
push
mov
inc
sbb
inc
stos
test
mov
in
jge
and
cmp
sti
xor
lds
addr16
jl
mov
or
push
test
and
xor
loope
cmp
xchg
push
xor
inc
jbe
sub
and
clc
sub
and
out
jb
push
jl
stc
xlat
pushf
stc
xchg
stc
mov
test
inc
dec
movsb
jp
jne
into
lret
pop
test
jne
pop
fbld
outsb
cmp
call
insb
fadds
push
cmc
push
icebp
jbe
add
push
adc
test
push
icebp
mov
or
xor
pop
xchg
clc
popf
hlt
ljmp
mov
cmp
mov
incl
iret
push
int3
cmpl
adc
dec
popf
jae
or
out
jae
adc
movb
pop
call
shll
mov
cmpsl
in
jb
pop
add
push
push
cltd
push
jb
jp
fidivs
sbb
out
xchg
cmp
pop
push
adc
insb
adcb
int3
and
cmpl
or
insl
mov
pop
bound
pop
sbb
push
xchg
inc
test
push
aad
adc
mov
push
add
outsb
sbb
lods
stos
fidivl
sbb
xchg
push
mov
dec
ss
sbb
imul
mov
dec
push
push
sbb
mov
jmp
int3
xchg
out
mov
loope
lds
shlb
xor
das
xchg
sbb
cli
mov
mov
nop
dec
ja
and
xchg
sub
mov
stc
into
arpl
mov
mov
dec
sub
aaa
adcl
fmuls
lea
daa
cmp
dec
rcl
out
pushf
xchg
push
xchg
mov
sub
aad
movsl
xchg
xchg
loopne
lret
call
or
jecxz
pushf
mov
int
and
mov
es
enter
mov
pushf
and
xchg
int
mov
dec
test
fdivrp
out
mov
dec
int
inc
fs
andb
fwait
rorl
mov
ja
rolb
pusha
pop
imul
lods
push
repnz
ret
push
mov
sbb
jl
and
fdivl
cmpsb
dec
repnz
fwait
pushf
or
inc
sub
sbb
or
es
and
mov
adc
fdivl
push
lods
sub
iret
xor
xchg
jecxz
lea
xchg
call
sub
mov
sub
repz
mov
push
push
icebp
fs
sbb
sbb
bound
loope
add
movl
pop
imul
call
call
and
addr16
ljmp
ret
inc
mov
push
inc
lahf
lret
push
cmp
mul
les
rcrb
inc
aas
push
cld
daa
rcrb
jle
jle
arpl
test
pop
pop
adcb
push
int3
sahf
jno
outsb
mov
test
les
aam
sahf
add
mov
js
bound
or
push
sbb
or
push
push
leave
jnp
sbb
dec
test
xchg
and
jmp
mov
fs
iret
test
or
inc
push
mov
inc
or
add
mov
pop
icebp
xchg
inc
imul
jno
mov
aaa
int3
outsl
fsubrs
int
fstps
xchg
push
pop
jmp
sbb
movsb
lcall
dec
sbb
data16
loop
imul
and
cmpsb
bound
inc
addps
inc
mov
cmp
push
loop
fisttpl
sti
and
cmp
cwtl
dec
movsb
cli
stos
mov
repz
xor
in
or
into
cli
repnz
mov
ret
out
and
adc
jge
mov
or
pop
orl
lods
jp
or
mov
jo
repz
mov
pushf
cmp
or
sahf
or
iret
xchg
inc
in
mov
jecxz
fwait
push
push
xchg
out
and
pusha
lret
add
cmp
xor
push
ljmp
sarl
mov
xchg
inc
xchg
mov
loopne
add
xor
push
sbb
pop
jecxz
pop
mov
mov
mov
lret
sti
fwait
inc
push
fstpt
jns
cmpl
test
ret
mov
aas
or
loop
lret
testl
xorb
pop
mov
leave
bnd
adc
add
repz
mov
shl
jbe
lods
imul
jae
ljmp
pop
outsb
insb
push
sub
inc
int3
xlat
sub
cltd
mov
jae
push
ret
pop
pop
dec
loop
icebp
pop
adc
pushf
add
outsb
cli
cmp
out
and
test
mov
mov
mov
cs
insl
jp
outsl
hlt
rclw
out
enter
das
fucomi
iret
mov
movsb
andb
mull
je
out
cmc
sarl
pop
jbe
push
mov
repz
cmp
fcoms
push
imul
aam
nop
jmp
mov
mov
ffreep
push
enter
xor
cmpsl
sbb
push
adc
fistpl
cmp
sub
je
pop
out
pop
jns
mov
xchg
push
push
mov
cmp
je
or
pop
sub
cmp
mov
subl
push
pushf
push
jmp
mov
pop
and
loope
lods
sbb
lods
cmp
dec
lret
ljmp
push
adc
cmpl
mov
jnp
dec
push
mov
xbegin
cmc
repnz
call
test
scas
outsl
and
es
in
popf
push
ret
mov
rolb
test
outsb
imul
sbb
fs
lret
sbb
mov
int
lret
mov
xchg
sbb
push
pop
dec
pop
divl
cltd
jae
int
push
add
mov
sar
mov
mov
cmp
jge
lea
aas
std
mov
stos
inc
xchg
adc
les
lret
sbb
push
es
arpl
or
fcomi
jecxz
loope
jne
enter
fldcw
sahf
in
sub
out
xor
mov
xchg
push
and
add
rcrb
xchg
dec
int
jb
cwtl
sbb
push
xchg
jno
pop
jbe
mov
mov
xor
clc
cld
xor
sub
add
imulb
enter
cli
ret
nop
orb
mov
insb
cli
add
cmpsb
clc
push
cmp
test
sub
aam
mov
mov
push
cli
push
test
push
das
mov
push
nop
adc
xorl
mov
test
sub
and
jnp
test
jge
push
pop
inc
pop
lret
fdivrs
mov
inc
sbb
inc
mov
aaa
add
faddl
icebp
xor
sbb
mov
repz
test
dec
jnp
bound
pop
pop
mov
loope
test
sub
inc
pop
jae
mov
aas
push
inc
add
xchg
xchg
out
movsl
scas
lods
pushf
iret
imul
mov
pop
incl
mov
dec
cmp
jb
sub
out
ja
fistpl
leave
dec
js
and
das
rorl
mov
adc
push
ja
xlat
out
push
clc
leave
xor
dec
push
sub
push
mov
ljmp
cmp
stos
mov
jno
movsb
mov
sbb
jp
pop
inc
out
sbb
adc
mov
aad
add
inc
adc
inc
flds
addr16
call
mov
sub
mov
jle
call
fmul
push
lock
xor
mov
lret
loope
mov
push
shr
rolb
inc
loop
lea
cmp
ja
sub
xor
clc
mov
fidivs
mov
mov
push
lea
dec
sti
jno
into
fbld
sbb
mov
dec
mov
sbb
mov
jecxz
add
test
insl
lock
xor
jne
inc
inc
imul
push
aad
pop
adc
aaa
sub
adcl
mov
adc
pop
push
sarl
inc
mov
imul
pop
mov
lods
jnp
loop
jae
ret
inc
or
xchg
scas
dec
add
dec
lods
lea
and
jnp
sbb
pop
cmc
cmp
dec
or
pop
loope
xchg
int3
mov
xchg
bt
cmp
push
fstpt
pop
push
test
mov
xchg
add
fimull
rep
xor
jge
and
je
push
dec
shlb
nop
sti
js
xchg
test
test
or
mov
pushf
out
ljmp
aas
mov
pop
pushf
or
mov
mov
push
inc
sub
adc
cmc
in
dec
sub
les
adc
mov
push
cmp
jnp
cmp
dec
and
in
faddp
cmpsb
mov
or
insl
pop
icebp
mov
int
fucom
and
sbb
aam
cmpb
jge
inc
sbb
test
or
popf
out
ret
popf
add
and
sbb
push
std
test
mov
aam
loop
jnp
call
mulb
mov
in
dec
insb
mov
xor
mov
das
loope
or
mov
add
jns
insb
adc
dec
mov
std
and
stos
jmp
xchg
icebp
inc
popf
pop
outsl
pop
scas
notb
push
fsubrp
lods
mov
or
jne
adc
loopne
pop
lods
xor
cltd
or
testb
subb
mov
mov
fldl
stos
repz
ss
push
adc
daa
fcmovne
fwait
imul
bound
sbb
out
mov
mov
mov
mov
sbb
or
jecxz
and
mov
xchg
sub
je
push
lcall
xchg
pop
addr16
fsubl
xor
jno
inc
fs
fstpl
pop
in
stc
add
repz
inc
dec
and
and
sbb
sbb
lds
mov
in
xchg
adc
sub
lods
ljmp
push
inc
xor
mov
cld
ja
fisttps
out
movlps
pop
adc
dec
sbb
mov
sub
sbb
popf
dec
clc
sub
mov
jp
aam
and
xchg
inc
jl
add
jmp
or
sbbl
loopne
out
dec
aas
dec
repz
subb
enter
or
mulb
in
imulb
mov
mov
sbb
mov
or
mov
out
sub
jle
xorb
push
aad
js
sub
fs
jg
inc
rcll
dec
arpl
mov
mull
inc
in
pop
jmp
sbb
outsb
aad
mov
nop
mov
inc
inc
dec
inc
sbb
das
jne
movsb
scas
repnz
ja
pand
test
es
sbb
enter
scas
sbb
dec
or
pop
test
push
shrl
iret
test
fnsave
mov
jmp
mov
dec
xchg
stos
int3
outsl
sub
testb
adc
dec
and
push
test
ret
dec
imulb
lock
pop
movsl
jmp
mov
pop
fidivrs
cmp
cmp
push
pop
stos
cli
mov
adc
push
mov
jp
jo
out
cld
push
push
and
push
inc
xchg
das
or
push
and
imul
mov
xchg
jne
add
icebp
pop
mov
movsb
push
and
add
push
scas
pop
sbb
aaa
dec
sbb
jle
rolb
dec
sbb
cmp
ret
cmovne
jns
inc
imul
cmc
sub
inc
jmp
pop
leave
and
out
xchg
or
roll
jns
sub
adc
cli
jns
push
shll
mov
lret
scas
inc
vmread
add
test
sub
cmc
mov
addb
dec
test
loope
mov
jl
fs
rorb
pop
test
inc
into
add
push
mov
insl
or
insl
push
filds
jo
cmpsl
jnp
int3
movsl
mov
cmp
call
lret
sub
pop
push
mov
dec
xor
lods
mov
pop
in
fwait
or
mov
fwait
push
sub
and
inc
imul
cld
shrl
shl
mov
xchg
mov
cmp
repz
scas
aaa
mov
cmpsl
mov
or
and
xchg
push
mov
and
adc
mov
mov
cmpsb
out
out
das
jbe
jmp
lods
push
hlt
sub
adc
loope
mov
jno
inc
jge
push
ret
push
mov
sbb
pop
ljmp
rcrl
fcmovbe
mov
lods
or
sub
loopne
mov
mov
iret
add
adc
jns
daa
mov
fisttpl
cwtl
jmp
add
jo
sbb
lods
int
inc
fistpll
push
mov
shll
mov
call
adc
xor
add
jmp
lods
and
push
movb
repz
pop
pop
dec
daa
xchg
and
dec
out
lds
test
mov
sbb
mov
jl
jbe
clc
dec
pop
mov
std
inc
addb
jnp
and
into
popa
sarb
mov
pop
jbe
call
std
mov
jp
data16
or
int
test
cld
dec
je
cmpsb
inc
imul
cwtl
negb
orl
or
mov
ja
mov
test
bound
cld
mov
cmpsl
mov
jb
aas
cmp
adc
aam
or
in
mov
mov
icebp
cltd
or
jl
fwait
xchg
push
push
dec
jb
cmp
pop
into
push
push
rolb
jmp
popa
out
jbe
dec
imul
decl
mov
nop
enter
sbbb
mov
sbb
fdiv
jae
sbb
addr16
jns
sbb
and
adc
mov
call
cwtl
fcomip
mov
adc
subl
mov
ja
loop
imul
mov
hlt
stc
add
addr16
retw
insl
in
pop
test
in
cmp
dec
cpuid
jmp
orb
fwait
shlb
mov
push
dec
ret
shrb
fsubl
les
jge
sbb
xchg
push
sub
dec
add
inc
pop
dec
and
push
fwait
daa
mov
sbb
ret
cmpsb
inc
add
xor
iret
or
jmp
fwait
and
cwtl
in
shl
out
out
out
xor
sbb
sub
add
sub
sbb
sti
inc
sbb
inc
js
pop
and
leave
fsubs
aaa
rolb
pusha
dec
outsb
insl
shlb
lds
mov
mov
and
inc
mov
addr16
aas
shlb
test
out
adc
push
mov
jmp
xchg
push
pop
fiadds
xchg
add
imul
dec
addl
and
add
and
and
push
das
sub
push
xchg
and
addr16
das
mov
es
xorb
cmpl
or
jo
jnp
pop
jle
xorl
mulps
push
movsl
push
adc
arpl
and
or
mov
jp
hlt
pop
pop
pop
das
in
sbb
fnsave
into
pop
push
sbb
rcrl
xchg
jg
pusha
push
jo
sub
dec
movb
mov
jg
icebp
add
shlb
cmp
or
push
neg
xor
sbb
je
mov
cmp
push
adc
mov
in
sbb
ss
jecxz
fdivrs
adc
rcl
pop
sbb
shr
jmp
shrl
or
push
call
xchg
in
pop
aaa
shrl
and
xor
mov
xchg
lock
mov
rol
pop
and
movsl
addr16
xchg
lret
xchg
mov
push
js
dec
add
aad
mov
push
inc
test
mov
sub
and
adc
les
lods
leave
aam
dec
fstpt
push
mov
loope
dec
mov
lcall
mov
cmc
enter
pmaxub
inc
scas
hlt
imul
or
pop
or
dec
xor
inc
push
add
mov
or
jle
mov
and
mov
les
test
das
test
pop
in
es
fwait
mov
mov
scas
aad
cmp
jno
clc
lret
cmp
ficoml
or
into
cmp
mov
dec
imul
xchg
xor
xchg
fisubrl
inc
andb
or
cmp
cmpb
pop
lea
cmpsb
jb
arpl
push
inc
adc
mov
nop
stos
pop
insb
fs
inc
cmpsb
insb
repnz
cmp
addr16
iret
mov
out
push
cmpsb
cs
aam
sub
sub
icebp
lahf
or
mov
imul
xor
into
sub
fldcw
sub
xchg
sbb
inc
fs
jbe
fwait
cmpsl
pop
xor
sub
adc
cmp
idivb
popf
jbe
pop
xchg
inc
mov
aaa
je
sub
es
push
test
inc
push
push
das
mov
adc
in
bound
ljmp
lock
xor
cld
inc
pusha
hlt
or
vpcmpgtb
xchg
mov
push
inc
stc
add
sub
jp
dec
inc
rcrb
lods
lahf
pop
cmp
fcmovu
test
sub
gs
repz
mov
test
pushf
mov
adc
push
inc
popf
in
cmpsl
filds
sti
aas
sarl
pusha
stc
add
mov
mov
fwait
mov
or
addr16
outsl
aam
cmp
fs
add
out
mov
leave
js
lahf
mov
dec
adcb
das
je
push
push
push
cmc
jg
fisubl
push
dec
fiaddl
sbb
call
sahf
mov
mov
ja
xlat
aad
mov
jle
gs
cmpsb
add
rol
and
xor
mov
les
std
imul
ja
adcb
mov
lret
int3
mov
lahf
pushf
sub
loope
adcl
imul
add
push
dec
push
cmp
add
dec
sub
fcomps
rclb
jecxz
ret
fsubrp
pop
das
add
insb
jne
or
subl
clc
push
popa
jae
sub
test
ror
or
addr16
jmp
aas
pop
dec
push
test
sub
mov
std
xor
repnz
and
xlat
icebp
test
ldmxcsr
call
dec
xor
cmp
push
dec
addr16
xchg
add
insb
cmp
data16
sahf
add
insb
cmp
into
lcall
and
mov
mov
inc
mov
xchg
ja
mov
js
jle
fucomi
fs
dec
and
push
xor
stos
push
push
lret
jmp
out
adc
cld
mov
out
inc
push
xchg
mov
add
dec
dec
pop
inc
push
stos
js
add
jecxz
movsb
sbb
fs
shll
xchg
sbb
into
adc
inc
ffree
out
popl
cmpsb
cmpsb
negb
cmp
push
mov
insb
enter
pop
subb
lds
bound
adc
incl
gs
out
xchg
lret
sub
stos
xor
shl
sbb
adc
mov
sbb
les
push
imul
roll
mov
jge
push
cmp
sub
sbb
mov
mov
sbb
xchg
sahf
sbb
stc
mov
scas
rcrb
ds
push
push
sbb
pusha
xlat
mov
cli
dec
adc
shr
scas
ret
in
icebp
in
mov
hlt
rolb
cmp
cmp
aam
mov
jo
or
and
push
scas
fs
and
sub
jne
in
subl
add
les
arpl
xchg
sbb
sbb
xchg
mov
mov
pop
scas
sub
pop
lods
lods
movsl
jae
testl
fcmovnb
or
arpl
push
pop
sbb
fnstsw
xor
and
out
push
imul
nop
sub
imul
lea
lods
and
add
shll
pop
xchg
xor
xchg
aaa
outsb
cli
dec
ja
add
cmp
add
mov
dec
and
or
outsb
push
clc
fidivrs
and
pop
adc
or
dec
fbld
sbb
inc
sub
insb
adc
pop
mov
push
inc
inc
les
aaa
jle
enter
mov
pop
pushw
js
cmp
cmp
cmpsb
loope
ja
in
lret
enter
dec
std
inc
inc
mov
adc
mov
mov
mov
in
in
nop
pop
and
dec
cltd
je
movsl
jl
jae
sub
je
xor
test
test
or
adc
add
add
out
adc
outsb
push
and
in
repz
dec
mov
mov
push
test
xor
movsb
adc
xchg
sbb
jmp
or
fxch
mov
test
out
lds
sub
pushf
cwtl
jno
inc
adc
mov
sub
lret
pop
xor
add
inc
dec
xorb
es
jle
cmpsb
test
adc
cmpsl
xchg
lea
lcall
fdivl
lods
es
cmpsb
fwait
mov
push
mov
xor
fidivrl
mov
mov
cmp
inc
sbb
mov
lock
or
stos
insl
out
xchg
loop
mov
sub
cmp
xor
pop
and
lods
test
clc
cld
mov
pop
jp
clc
addr16
add
mov
scas
fs
xchg
lret
add
or
dec
nop
arpl
push
inc
cmp
inc
mov
mov
cmc
stos
addr16
mov
cli
ffreep
add
sub
gs
push
mov
mov
adcb
dec
mov
mov
inc
xor
test
mov
add
jle
rclb
out
mov
dec
push
xor
cmp
xchg
sbb
mov
and
sbb
or
mov
sbb
mov
ret
jnp
sbbb
mov
adc
and
jnp
jae
les
jo
hlt
jbe
and
mov
cmp
cmp
push
cwtl
push
call
inc
arpl
inc
push
mov
stos
sub
aas
pop
inc
pop
dec
add
sub
and
push
fwait
dec
push
cmc
rcr
lcall
mov
out
scas
lret
lahf
addb
inc
js
lods
hlt
adc
pop
in
jnp
or
push
movl
test
loopne
cmp
lods
xlat
cltd
lock
mov
fwait
shll
ja
pop
sbb
rcll
add
sbb
stos
lods
pop
dec
in
push
sub
push
out
arpl
js
fmuls
data16
cmp
stos
int
pop
mov
xor
shl
inc
inc
lea
jmp
xchg
lret
pop
cs
inc
mov
fsub
inc
jbe
add
push
sti
push
popa
dec
call
nop
push
inc
jl
inc
jns
vpsrlq
xchg
lock
lret
dec
push
mov
and
mov
test
lahf
sub
mov
jne
jecxz
movsb
or
or
sbb
fisubrs
jle
mov
pop
jmp
inc
mov
je
push
cwtl
mov
sbb
std
push
mov
loopne
das
flds
movsl
cmp
mov
fidivs
xchg
hlt
cmpsb
and
incl
js
xor
test
out
aad
and
adc
int3
in
shlb
mov
cwtl
cs
scas
add
sub
adc
jae
lods
jbe
mul
and
inc
or
bswap
shrb
fstpt
rorb
gs
imul
into
pusha
lods
pop
fdivp
cld
stos
icebp
jno
arpl
andb
jmp
shrl
jo
aaa
ret
fidivrs
cltd
std
fdivs
jno
in
push
fnstenv
jmp
lds
sbb
pop
push
xchg
lods
sub
aaa
or
fimull
sbb
add
call
mov
fisubrl
cmp
scas
bound
push
ret
xor
mov
out
lds
aas
repnz
mov
shll
loop
iret
in
pusha
sbb
push
js
inc
or
sti
call
mov
sub
add
insl
mov
andl
mov
adc
jbe
lock
loopne
push
out
mov
test
sub
push
or
testb
sub
loopne
mov
xchg
sbb
lret
mov
test
jp
pushf
ds
xchg
fisubl
or
sbb
inc
jb
jnp
lret
adc
scas
mov
cwtl
jmp
push
mov
daa
imull
int
pop
in
xchg
popl
push
insb
test
adc
lods
jae
dec
sub
in
xlat
mov
or
mov
in
loope
lea
jne
pop
adc
sbbb
xor
push
lea
or
aaa
xor
mov
add
fs
pop
inc
ret
xor
repnz
xchg
lock
scas
fimuls
mov
sub
xchg
or
adc
and
xchg
mov
xchg
jl
sbb
insl
sub
or
test
and
aas
int3
pop
mov
push
xor
sbb
xchg
push
divl
ret
push
into
xchg
mov
push
hlt
adc
and
arpl
jb
lds
cli
outsb
ret
mov
mull
pop
mov
mov
movsb
psrlq
dec
lcall
pop
outsl
icebp
dec
pushf
stos
mov
pop
fists
lods
pop
and
lret
les
movsb
leave
mov
and
in
cltd
stc
jge
inc
dec
dec
imul
std
sbb
cmp
dec
rcrl
pushf
pusha
pop
adc
xchg
sub
push
xchg
add
inc
ja
rcrb
xchg
xchg
jp
icebp
pop
arpl
push
jp
in
hlt
xchg
or
xor
push
andb
adc
loope
mov
aad
mov
lods
pop
push
lahf
inc
mov
dec
in
mov
push
cwtl
inc
add
adc
sub
push
ja
jg
daa
jl
cmp
jecxz
mov
daa
push
sub
dec
pop
jns
pop
rol
mov
jle,pt
add
sarb
inc
mov
loope
outsb
hlt
or
cmp
push
or
lret
cmpsb
jae
mov
sbb
out
loopne
into
mov
dec
xchg
sahf
xchg
or
out
aaa
inc
add
movsb
fs
ja
inc
sbb
push
cmp
pop
xchg
and
mov
mov
push
add
shl
add
mov
jg
pop
add
stc
adc
sub
je
cmp
arpl
js
movsb
sub
sbb
mov
mov
push
js
inc
mov
xchg
mov
xor
stos
xchg
dec
jl
jg
xor
dec
fidivl
sbb
outsl
cmpsl
shl
xchg
xor
cld
and
cmpb
sub
inc
in
xor
xchg
and
insl
inc
or
int
mov
cmpsl
rcr
inc
mov
inc
xchg
cld
sbb
movsb
aad
movsb
sub
pushf
loope
dec
fs
mov
rolb
pop
fidivrs
out
aad
pop
xchg
mov
push
adc
cmp
push
sbb
mov
xchg
data16
out
push
inc
xor
jecxz
ss
cmp
in
add
pop
mov
jnp
loop
jno
dec
lcall
mov
mov
imul
sub
leave
mov
in
js
cmpsl
or
pushf
mov
pop
xchg
in
jo
xlat
cmp
mov
push
inc
insb
jg
les
pop
test
in
sub
lahf
xchg
scas
fcoml
mov
inc
pop
adc
push
push
jecxz
ss
out
dec
ficoml
clc
push
lret
xor
or
add
pop
adc
scas
sub
mov
in
xor
cmp
aaa
or
cwtl
push
push
loopne
test
in
imul
xchg
aam
add
jbe
jns
dec
mov
stos
adc
mov
add
je
in
enter
jo
shrb
dec
pop
dec
sti
clc
jnp
mov
add
int
imul
lock
sub
push
lret
cmp
insl
bound
mov
mov
jae
pop
dec
repnz
push
loopne
mov
sub
repz
adc
xor
dec
push
popf
xor
push
and
jmp
scas
pop
xor
dec
in
dec
imul
pop
pop
pop
shl
mov
adc
mov
pop
popl
fsts
clc
inc
gs
jb
mov
pop
std
jl
icebp
pushf
xchg
hlt
loop
or
pusha
add
pop
test
fimull
mov
shll
ret
mov
adc
xor
cli
mov
jno
cwtl
pop
push
jb
inc
sub
repz
and
push
sbb
mov
add
cmp
test
push
jae
cs
jo
insb
mov
add
cmp
jge
fimull
sti
das
sub
mov
push
sub
xor
dec
sti
adc
jp
outsb
out
sub
jg
fisttps
xchg
insb
orb
adcb
aas
pushf
mov
add
jp
stos
cmc
or
jmp
xorl
test
gs
loope
popa
or
sub
adc
lret
mov
xchg
rol
aaa
mov
pop
mov
fs
and
push
mov
out
pusha
dec
xor
icebp
adc
fwait
sti
fs
hlt
test
mov
pop
pop
jl
sti
jp
out
cmpsl
jbe
jl
or
cmp
ret
push
dec
dec
push
jno
push
dec
insl
fst
loope
sbb
rclb
aas
pusha
inc
dec
dec
or
inc
daa
adc
aad
out
lahf
jo
inc
xorl
xchg
fidivs
insb
popa
xchg
push
and
sbb
sub
fwait
push
scas
cmp
ret
and
pop
ja
fld
cmp
shlb
sbb
add
sti
add
shl
cmp
push
inc
rorb
in
dec
gs
daa
rorl
jle
xchg
ja
or
test
sti
insl
xchg
sub
mov
mov
ret
mov
ss
pop
and
push
stc
sub
mov
cmp
dec
xchg
pushf
jge
dec
dec
das
roll
popa
mov
push
call
dec
data16
and
jns
test
shl
pop
inc
aaa
mov
pop
push
mov
jg
cmp
cmp
xor
cs
mov
jmp
pop
clc
pop
or
or
sub
lods
icebp
jmp
xchg
movsb
je
addr16
int
cmpsb
mov
mov
cmpsb
mov
mov
fwait
or
inc
test
dec
loopne
mov
test
pop
test
mov
jae
xchg
xor
xchg
pop
es
push
leave
pop
push
cmpsl
lcall
repnz
jp
sub
fcoms
mov
pop
xchg
into
cmp
out
mov
outsb
in
imul
scas
int3
pop
mov
lds
rolb
inc
std
frstor
jmp
test
cmc
repz
mov
mov
je
pop
adc
imull
and
in
pop
gs
or
out
xchg
cwtl
sub
jns
and
mov
xor
inc
push
xchg
or
lock
sbb
jnp
call
je
jae
cmp
jg
test
and
pop
add
push
shrb
xchg
lret
pop
and
sub
call
and
add
dec
incl
idiv
or
sbb
aas
adc
jo
cld
or
xchg
xchg
adc
arpl
add
xchg
jns
out
push
push
xor
dec
fisubrl
movsl
andb
repnz
mov
fldt
xor
das
divb
das
sub
movsl
test
rcl
loop
push
movsb
stos
cmp
jb
mov
jl
addl
cli
icebp
push
test
push
push
xor
sbb
jl
addr16
sbb
hlt
sbb
mov
pusha
lret
ss
call
or
xchg
mov
sbb
cs
insb
mov
pop
in
mov
jmp
xchg
jo
sub
lods
push
iret
repz
adc
jg
les
das
push
jns
jns
pop
stc
sti
mov
cmp
xlat
hlt
ljmp
pop
pop
mov
adc
cld
dec
mov
xor
jmp
lret
inc
clc
or
jb
clc
or
out
dec
pop
mov
jmp
pushf
xor
xor
add
sub
test
loop
xchg
xor
icebp
xchg
test
orl
sub
roll
adc
in
popf
jne
insl
lret
sub
sbb
cwtl
or
fwait
add
lret
pop
int
in
sahf
xor
xor
sub
stos
aad
sub
scas
pop
sarb
mov
dec
xchg
pop
add
insl
lea
push
sub
mov
jg
scas
ret
enter
xor
icebp
test
les
in
lretw
dec
add
leave
lea
int
cmp
movl
outsl
stos
lea
arpl
dec
sbb
sub
mov
and
cmp
scas
mov
jp
add
cmpsl
ret
icebp
inc
jo
outsb
je
call
push
push
popf
jbe
push
jns
pop
and
lret
aas
mov
outsl
dec
lcall
inc
lret
mov
popa
fldcw
dec
dec
inc
rclb
cmp
dec
sub
aaa
or
sbb
cli
rcll
idivl
jecxz
inc
rorl
pop
or
jecxz
dec
sub
xor
out
pop
add
loope
dec
jge
sbb
out
adc
sub
mov
and
xor
fwait
lret
pop
lret
int
imul
xor
call
mov
ss
sub
xchg
out
push
push
xor
sub
cltd
and
xor
lret
sbb
lods
leave
xchg
inc
int
dec
xor
and
cmp
mov
mov
jns
lahf
xor
stc
pushaw
mov
and
or
push
mov
xchg
pusha
pop
inc
in
es
int3
popf
inc
std
fs
arpl
add
fsts
aad
test
lods
push
popa
loope
mov
cmp
mov
out
fbstp
sub
scas
data16
add
in
inc
cld
outsl
mov
fcompl
dec
sbb
pop
call
into
fnstcw
mov
cmp
out
dec
cld
and
roll
mov
mov
aaa
testb
xchg
and
int
push
sbb
mov
outsb
outsl
in
faddl
sbb
mov
dec
sub
dec
iret
xchg
addr16
jno
jl
pushf
cmp
scas
push
nop
or
clc
out
or
jne
push
or
cmpb
sbb
out
mov
push
adc
pushf
adc
inc
fsubl
test
or
mov
mov
scas
scas
mov
mov
aam
nop
sbb
pop
aam
sbb
mov
mov
arpl
es
outsb
aam
cld
pop
sti
mov
xchg
xchg
sub
cmp
xchg
adc
ljmp
xor
or
adc
orb
fsubl
repnz
jecxz
mov
cwtl
js
les
sub
cmpps
mov
push
pop
shrb
xor
fsub
xor
adcl
push
sbbb
pop
mov
add
adc
sbb
lahf
xchg
pextrw
inc
arpl
sub
jb
push
mov
ljmp
jp
test
and
out
sbb
movq
push
in
stos
sarb
subb
mov
dec
xchg
movsb
mov
scas
push
and
ljmp
mov
sub
lcall
stc
pop
mov
dec
dec
and
push
in
iret
or
dec
gs
cmp
test
jg
jne
jno
pop
sti
push
aam
cld
sbb
mov
ljmp
add
cmpsb
dec
movsb
add
insl
sub
addb
jg
jo
jmp
repnz
push
into
dec
cmpsl
mov
bound
gs
into
shlb
in
test
pop
out
mov
xor
mov
jl
inc
sar
aas
shlb
adc
mov
in
in
pusha
jae
or
mov
and
jbe
pop
adcb
adc
nop
ja
lods
pop
test
xor
lret
testb
sahf
clc
pop
mov
fdiv
pop
cmp
jecxz
fistps
arpl
inc
xchg
sub
jbe
adcb
out
mov
divb
inc
in
jmp
or
pop
ret
cmpsl
aas
repz
ret
into
dec
mov
xor
in
out
or
push
adc
jns
lea
mov
sti
mov
inc
in
inc
loop,pn
fwait
sub
rorl
shll
icebp
push
sbb
adc
dec
sti
dec
mov
add
sub
arpl
test
mov
sti
jbe
mov
adc
xor
addl
cmp
mov
xor
int3
mov
nop
push
mov
or
fisubrl
xchg
cmp
fucomp
add
insl
cmp
dec
add
pushl
mov
fwait
inc
insl
movsb
sub
jp
movsl
adc
test
addr16
jne
xor
add
xorb
cmp
inc
lods
mov
in
sbb
lcall
cli
adc
lcall
pusha
push
inc
mov
mov
mov
mov
mov
loope
dec
push
lock
rorl
cmp
push
mov
nop
leave
fmul
je
out
xchg
and
jl
call
hlt
xor
cli
xor
outsl
lock
mov
cmc
ljmp
or
repz
or
dec
push
mov
sub
push
cld
jp
xor
sub
push
jecxz
cltd
aam
jg
testl
jb
repz
je
push
or
jge
in
xchg
add
sbb
addr16
pop
aaa
or
sbb
rolb
sbb
sahf
rolb
adc
lods
mov
scas
fimull
add
jns
mov
repnz
add
pop
xchg
push
push
es
mov
or
repnz
insl
mov
imul
sti
sbb
sbb
and
call
or
mov
jge
sub
add
and
mov
cmp
ror
out
lahf
mov
nop
shrb
das
xor
out
nop
pop
mov
and
xchg
test
inc
fisubl
and
hlt
lock
jns
repnz
int3
popf
scas
repnz
loop
ds
xor
xor
mov
push
mov
data16
fistl
clc
imul
aad
mov
and
loopne
rep
pop
loop
pop
cli
pop
mov
call
leave
hlt
sbb
into
pop
outsl
or
inc
mov
ror
jp
mov
sbb
imul
mov
aaa
out
lcall
leave
adc
xchg
pusha
loopne
sbb
fisttpll
mov
mov
push
push
push
mov
cmp
or
imul
bound
fnsave
sbbl
mov
fiadds
cmp
add
push
mov
xor
dec
dec
dec
push
aad
fstpt
je
aaa
push
jns
xchg
push
into
ret
and
cmpsl
js
mov
add
cmpsb
test
fildl
mov
cmpsl
pop
mov
xor
in
pop
xor
jno
ds
fdivr
repnz
nop
imul
mov
pop
das
xor
dec
cmp
mov
mov
add
movsb
xor
mov
fwait
ja
outsb
push
jl
add
iret
push
iret
je
mov
mov
sub
das
ljmp
imul
xchg
jne
test
jl
xchg
jp
jne
dec
jbe
sub
xchg
lds
pop
jb
push
bound
xor
push
fimull
stos
cmpb
mov
sahf
ja
jo
imul
cli
mov
mov
pop
nop
push
and
out
cmp
test
in
aad
push
inc
sub
add
cli
scas
add
and
jb
fs
cmc
adc
arpl
ljmp
push
push
cmpsb
insl
call
push
or
test
sbb
cmp
xor
addl
mov
inc
repz
mov
insl
cmp
mov
push
dec
in
pop
adc
cmp
movsb
mov
shll
and
loope
pop
loope
cmp
cltd
push
dec
in
mov
ror
hlt
dec
call
mov
xchg
sti
rcrl
sbbb
or
test
js
ljmp
leave
cmp
in
test
lock
inc
push
xchg
lret
mov
dec
pusha
mov
cmp
dec
testb
iret
jp
pop
jb
inc
int3
cwtl
jmp
xchg
cli
dec
pop
push
inc
lcall
push
addr16
notb
mov
mov
lahf
adc
jns
mov
pop
jmp
jg
mov
inc
xor
push
cltd
jno
lahf
xchg
xchg
mov
sbb
jmp
scas
mov
xchg
or
out
andl
loop
xchg
xor
adc
aad
xor
loop
cmc
pop
adc
rol
jge
jle
dec
les
shlb
or
and
rcll
mov
adc
fistl
pop
adc
adc
cmp
rcrl
lahf
and
frstor
out
test
je
in
lods
mov
addr16
fucomp
jl
into
testb
fwait
lret
and
in
adc
cmp
cmc
daa
aas
cmp
adc
mov
xor
loope
push
mov
lds
std
cltd
loope
jmp
cs
sub
loope
dec
and
inc
clc
dec
mov
cmc
pop
xchg
in
jg
xchg
pop
jmp
ret
adc
push
cmp
inc
sbb
mov
pop
sbb
lds
test
add
faddl
sarb
andl
fldl
inc
jno
ljmp
ljmp
out
ljmp
xchg
mov
mov
mov
sahf
push
lods
cmp
push
andb
cwtl
repz
mov
add
jge
sub
out
sbbl
and
mov
cmpsl
rolb
push
repz
cs
arpl
inc
scas
push
aas
in
cmpsl
pushl
bnd
push
out
sbb
je
dec
call
out
pop
pop
imul
adc
xchg
in
xchg
pop
inc
loopne
add
sbb
push
sbb
out
and
pop
inc
xchg
cwtl
adc
sub
or
mov
addr16
lahf
ret
cmc
outsb
iret
pop
cmpsl
push
mov
cmp
fwait
imul
xchg
adc
in
mov
cmp
jge
cld
mov
jb
push
mov
popf
scas
cs
cmp
mov
dec
clc
push
mov
cmp
jns
jle
lahf
mov
sub
and
xor
jl
test
jg
sbb
imull
jb
das
adc
xor
xor
jbe
pushf
fists
stc
dec
imul
fwait
xchg
shl
imul
xor
dec
sahf
pop
lods
pop
sub
or
or
bound
pop
pop
or
testb
sbb
sub
popa
inc
cmp
and
fstpt
rcrl
fucomip
out
push
dec
loopne
enter
fidivs
fnstenv
mov
outsb
hlt
enter
scas
test
push
imul
mov
neg
jecxz
xor
push
imul
dec
decb
ret
jbe
stos
insl
mov
push
les
es
mov
adc
cli
sti
push
imull
adc
movsl
sti
push
ret
dec
das
rorb
scas
outsb
cmp
mov
cmp
push
mov
dec
xor
repz
jle
jno
sub
mov
xchg
jnp
filds
mov
ljmp
jns
jmp
push
std
mov
nop
xor
or
xor
cmp
jg
rcll
adc
jbe
adc
lcall
add
aaa
repz
mov
enter
notb
fwait
aaa
and
hlt
lods
mov
mov
cs
xchg
out
push
xchg
and
dec
loopne
std
pop
xchg
nop
or
fstpt
mov
out
in
fucomp
fistpll
cmp
jae
in
push
push
addr16
leave
dec
popa
xor
cmpsl
push
mov
gs
popf
jmp
and
iret
push
jo
jbe
sbb
jp
imul
aas
ds
inc
inc
mov
cmp
adc
in
jae
inc
sbbb
mov
rcrb
loope
mov
xor
imul
push
inc
dec
sbb
mov
xchg
notb
dec
jne
rcll
outsl
rol
dec
add
adc
jl
les
outsb
xchg
shlb
adc
outsl
das
je
xor
xchg
inc
and
lret
lahf
les
dec
int
in
push
xlat
cmpb
lcall
push
ss
xchg
into
ljmp
in
fsubrs
subl
lods
out
xchg
mov
mov
out
test
jno
cmpb
movsb
mov
je
ljmp
cmp
adc
test
xlat
sbb
mov
sub
iret
inc
loopne
mov
loope
sbb
xchg
pop
push
add
scas
arpl
and
in
stos
pop
scas
add
notl
mov
hlt
inc
cmp
add
or
cmp
sub
lock
cmpsl
inc
and
ret
cmp
loope
xor
gs
inc
mov
pop
sub
mov
call
add
mov
inc
pop
mov
loope
mov
stc
cmpsl
icebp
mov
jns
data16
pop
hlt
pop
jnp
xor
andl
jae
xor
int3
push
jns
cmpsl
and
xchg
cmc
pop
ret
push
iret
enter
pushf
jbe
ljmp
jne
shll
push
das
outsb
push
jge
xlat
data16
push
or
lods
push
idiv
mov
pop
int3
inc
cmpsl
ss
dec
int
dec
mov
lcall
mov
daa
imul
adc
adc
test
jge
outsb
lods
sahf
sbb
push
xchg
mov
mov
push
test
movsb
shr
in
sahf
sbb
aad
out
pop
jp
pusha
dec
or
and
repz
push
pusha
daa
xlat
andb
cmp
adc
adc
je
or
push
inc
call
add
push
stos
sbb
and
fistl
cmp
push
movsl
cmp
int3
mov
sbb
dec
outsb
sub
pushf
out
mov
mov
sbb
fwait
pop
fcoml
cli
insb
sub
xchg
lock
orb
push
lcall
cmp
add
cmpsb
push
or
inc
or
rolb
jne
shlb
xor
xor
stos
je
jb
xor
cli
fstps
adc
dec
dec
inc
fldpi
addr16
adc
sub
sub
and
adc
xor
mov
pop
pop
jp
add
aad
pop
jno
mov
test
stos
xchg
dec
mov
fs
stc
cmp
test
inc
xchg
subl
add
push
mov
dec
pop
into
xorb
mov
loope
in
nop
mov
repnz
imul
subb
popa
xor
ss
imull
cmp
push
lret
xor
mov
fstps
add
stos
lahf
and
dec
dec
pop
mov
pop
idivb
leave
popf
movsb
mov
pushf
cmp
enter
xchg
lret
in
add
fwait
call
mov
pop
mov
das
jg
pop
add
push
xchg
fstpl
popa
push
loop
outsb
pop
mov
xchg
jns
or
mov
inc
push
int3
inc
jnp
xchg
popa
mov
mov
rol
imul
inc
inc
ljmp
sahf
shlb
mov
fadd
cmpsb
pusha
or
out
dec
pop
inc
fnstsw
addr16
mov
and
xchg
mov
cld
outsb
inc
sub
mov
stc
adc
jp
es
scas
mov
adc
pop
or
insl
mov
sbb
addr16
into
stos
jnp
stc
lcall
out
dec
std
jmp
mov
lahf
jo
pop
movups
cmp
ja
call
into
adc
mov
mov
fs
shll
push
icebp
push
in
push
scas
mov
out
xor
repnz
xchg
mov
inc
mov
lds
adc
mov
xlat
insl
hlt
dec
cmp
cmp
cld
pushf
loope
es
test
rclb
cmp
or
cltd
xlat
gs
xor
pop
sbb
or
sub
fdivrl
idivb
xchg
inc
push
int3
clc
pop
mov
cld
stos
ror
inc
dec
xlat
fdivs
stc
or
mov
popa
xor
xchg
mov
aaa
cmp
dec
sbb
in
mov
into
out
shrb
jl
fwait
arpl
icebp
pop
pushf
jnp
push
jns
sub
lds
xchg
lock
adc
xchg
or
not
push
mov
cmpsb
lods
pop
jp
mov
push
in
push
dec
push
sbb
daa
cmpsl
fisubs
or
je
push
push
aam
cs
and
stc
or
jns
xchg
dec
outsl
mov
pop
jmp
pop
mov
outsl
stos
cmp
scas
fistpl
jmp
dec
sbb
ds
fiaddl
cmpsl
stos
sbb
les
mov
push
imul
mov
or
insl
mov
aad
popa
sbb
xchg
or
rclb
fldenv
xor
jecxz
adc
xor
fs
sub
subb
stos
push
mov
adc
adc
add
jnp
jne
and
repnz
je
dec
xchg
rorb
nop
jns
mov
and
pop
in
add
cwtl
sbbb
push
lods
jb
rol
std
xchg
dec
cmpb
leave
into
call
mov
lret
pop
fs
and
stos
hlt
mov
cmp
dec
inc
xchg
sbb
cmpsl
mov
push
jae
xchg
cmp
mov
outsb
sahf
mov
push
negb
shl
add
test
xchg
jle
mov
test
rclb
adc
into
inc
pop
xchg
push
jne
adcb
insb
sub
ja
fisubs
ficompl
lods
dec
hlt
adc
pop
push
mov
loope
push
js
loop
or
or
xchg
fsubs
or
lea
sbbb
mov
fldenv
int3
jle
jae
hlt
ret
test
iret
jne
leave
cmc
aad
adc
xor
sbbl
mov
xchg
xchg
dec
aas
mov
cs
sarb
sbb
mov
sbb
add
test
mov
or
data16
jle
dec
or
and
xchg
scas
jns
out
cmpl
lret
test
cmpsb
inc
cmc
repz
lods
addb
mov
cmp
xchg
clc
cld
in
addr16
enter
cmp
pop
sub
mov
xchg
inc
xor
mov
sbb
sbb
addr16
and
sub
push
inc
sub
cltd
cmp
add
jb
mov
lds
dec
mov
call
mov
inc
in
mov
mov
fisttpll
rclb
imul
mov
xchg
divl
or
xchg
dec
nop
and
jecxz
xor
sbb
dec
and
or
jle
cmp
inc
sbb
int
sub
pop
jne
pop
shlb
and
xchg
cmpsl
sbb
out
pop
in
test
insl
mov
int3
int3
js
fimuls
jecxz
jns
js
mov
test
mov
push
push
mov
orl
adc
add
arpl
push
mov
add
mov
test
and
mov
push
sub
dec
jae
imul
mov
aas
inc
call
dec
jb
in
jne
mov
insb
repnz
xchg
mov
rclb
cmp
or
push
jge
dec
xlat
pop
sbb
nop
pop
outsb
ds
push
insb
push
pop
jno
pop
out
in
and
lods
sti
xchg
dec
or
inc
dec
movsb
fisubrl
add
push
imul
cmp
adc
and
mov
mov
adc
adc
pop
out
lret
jnp
leave
push
push
fdivrs
xchg
ds
popaw
dec
into
xor
in
or
test
mov
mov
mov
jmp
test
sbb
push
adc
pop
push
mov
push
add
fidivs
mov
add
outsb
outsb
nop
stos
movsb
pushf
daa
incb
pop
into
mov
pop
out
mov
fs
or
mov
aam
xchg
or
shr
lea
mov
mov
jl
sub
in
adc
imul
mov
sti
add
push
rol
jl
adc
mov
fwait
hlt
xor
fisubrl
mov
ljmp
adc
divb
call
adc
bound
sub
in
test
jb
stc
movsb
and
ljmp
inc
test
inc
inc
shrb
mul
pushl
test
leave
push
or
das
or
int3
add
fmuls
enter
jne
sbb
sti
jb
mov
sub
leave
sahf
pop
inc
mov
icebp
frstor
fwait
pop
cmpsl
mov
pop
push
bound
lods
hlt
mov
sub
popa
sub
cmp
add
jbe
mov
movsb
pusha
into
mulb
adc
loope
test
jnp
pushf
adc
or
stos
sbb
xchg
cmp
sub
sbb
mov
je
into
ja
adc
xor
and
push
dec
jo
int
nop
daa
and
xchg
push
jmp
es
cmc
push
repnz
jecxz
adc
ficoml
fldt
pop
test
cwtl
mov
push
dec
mov
stos
lea
cltd
pop
push
fdivl
ret
mov
ljmp
inc
fisubrl
cwtl
int
int
push
enter
push
xchg
cs
fisubrs
mov
mov
pop
xchg
push
aas
lahf
in
dec
cmc
hlt
cwtl
dec
enter
int
ret
pop
mov
lea
mov
push
fcmovb
add
subb
push
clc
add
imul
lcall
inc
sub
pusha
push
and
pop
fsubp
dec
enter
xchg
mov
cli
or
xchg
sbb
sub
cmpsb
shrb
jbe
push
mov
mov
rcrl
push
cmp
mov
fwait
imul
fimull
scas
gs
jmp
aad
das
movsb
push
test
mov
xlat
add
add
push
push
and
hlt
pop
rcll
xchg
popl
clc
dec
imull
push
shr
xchg
xchg
jo
aaa
push
pop
mov
les
xor
gs
mov
add
jo
xorb
jle
imul
shll
mov
scas
dec
mov
xor
test
ja
lret
mov
repz
mov
jae
dec
inc
std
jl
mov
pop
sbb
cli
rcl
cmpsb
inc
or
dec
jnp
mov
into
push
leave
adc
adc
lds
or
mov
ljmp
push
cs
and
sbb
aam
jnp
inc
or
or
pop
xchg
idivb
jno
pop
and
out
mov
sbb
inc
cld
es
inc
jo
xchg
mull
iret
cmp
mov
push
jnp
push
enter
dec
mov
cld
jo
mov
or
mov
ret
loop
jmp
mov
testb
lahf
mov
xchg
sahf
shr
ja
sub
in
into
out
jp
test
fcmovnbe
jo
sub
mov
push
xchg
jns
rorb
dec
mov
sarl
addr16
jg
sub
xor
jo
inc
aad
cmp
pop
fisubl
dec
repz
ja
fildll
inc
call
mov
das
pop
divb
fsubrl
jge
test
cs
pushf
dec
ljmp
je
push
fwait
xlat
mov
jnp
sbb
lcall
dec
jl
ja
mov
stos
das
push
cmovge
cmp
clc
dec
mov
aaa
fsubr
or
dec
jmp
inc
inc
push
lea
mov
push
scas
imul
pop
push
jae
pop
fs
cwtl
sbb
mov
sub
dec
imul
orb
xchg
insb
xchg
jns
loop
cwtl
inc
inc
add
les
xor
fs
es
xor
movsb
lods
fs
mov
cld
lods
movsl
pop
or
cmc
nop
adc
out
mov
rcrb
jb
movsb
add
push
mov
jl
mov
cmp
in
bound
into
fldt
movsl
xor
or
rclb
insl
insb
ds
pop
fdivrs
inc
inc
xor
mov
push
fbstp
outsb
add
ror
or
pop
test
mov
dec
lcall
mov
popf
outsl
out
jl
dec
and
push
fs
frstor
xchg
mov
insl
fists
ret
dec
cmpsb
pop
cltd
cmpb
fcmovbe
roll
adc
jp
lds
fldt
cltd
gs
insb
mov
rcr
int3
loopne
jbe
and
xchg
adcl
fsts
push
xorps
loop
in
int
add
lods
mov
mov
fistl
sbb
ljmp
in
xchg
mov
push
jp,pn
ja
inc
jmp
cs
adc
inc
rorb
leave
sbb
in
pusha
shll
xchg
test
add
int3
fsubrs
popa
sbb
test
jo
mov
xchg
dec
dec
pusha
xchg
movsb
xor
mov
or
pusha
and
add
popa
xlat
sub
int3
and
inc
fldl
mov
adc
insl
mov
push
push
test
sarb
leave
inc
das
push
cli
cltd
xchg
icebp
repz
inc
daa
sub
fstpl
shrb
ss
aaa
fdiv
sbb
movsb
stos
out
inc
xor
adc
std
addr16
les
lcall
mov
xor
pop
xor
aad
push
xchg
mov
dec
cmpsl
sub
mov
push
je
inc
lods
dec
jbe
inc
lds
mov
cwtl
cs
ds
xor
push
push
xor
movsl
cmp
push
or
iret
mov
cs
jb
je
addl
and
sbb
gs
xchg
ret
repz
out
jb
mov
arpl
rcrl
fstpt
push
imul
pop
pop
mov
xor
and
insl
call
pusha
je
mov
jl
imul
jbe
cli
std
fcomps
add
and
add
sub
test
imul
mov
jecxz
scas
fildl
push
in
jbe
push
lods
mov
test
dec
sti
jb
imull
cmpsl
fisttpl
mov
push
and
xchg
lods
mov
mov
add
and
cmp
mov
lahf
cmp
add
xchg
xor
adc
or
stos
divb
inc
jp
or
xchg
mov
insb
adc
lea
add
int
fnstcw
inc
sbb
pop
out
jo
sub
and
bnd
outsb
add
ret
jns
adc
xlat
mov
cmp
cmp
call
push
jecxz
shl
mov
cli
pusha
mov
out
or
lahf
imul
pop
jae
sub
add
mov
mov
xor
inc
push
mov
inc
pop
movl
repz
jl
std
inc
or
shrb
mov
inc
sub
scas
dec
mov
add
jb
add
clc
adc
rcll
or
push
dec
pop
and
sahf
rcl
cmp
or
pop
pop
xchg
and
jb
jb
mov
push
sub
sub
lret
and
push
pop
jecxz
jg
lcall
or
mov
test
fnstsw
mov
ss
xchg
jno
xchg
dec
push
sub
sub
ljmp
in
adc
dec
loopne
lds
jmp
fstl
call
pusha
les
lret
cmc
sub
scas
sbb
in
fcmovu
dec
and
aad
sub
scas
sbb
aam
sub
sbb
push
por
ljmp
add
mov
xor
ja
dec
test
xchg
mov
xor
loope
xchg
mov
xor
cmp
mov
lods
jns
rclb
pusha
and
sub
insl
xor
sub
xchg
jbe
inc
push
xchg
lret
cmpsl
jge
dec
lods
out
cld
or
and
mov
bound
nop
sbb
scas
or
dec
popf
push
or
dec
popa
push
out
mov
sti
xor
stos
push
sbb
fcom
ret
dec
popf
pop
loope
adc
lret
rorb
sbb
pop
fucomi
repnz
outsl
out
daa
cwtl
std
cmp
xchg
lahf
inc
cmp
pusha
lahf
sbbl
repnz
mov
jmp
rcll
mov
out
add
push
pop
xchg
push
jne
out
lods
cli
inc
jbe
pop
enter
and
mov
data16
sbb
jnp
std
mov
outsb
mov
ljmp
dec
pop
push
mull
push
mov
int3
pop
loope
fs
and
leave
cmpl
mov
push
aas
dec
test
packuswb
test
scas
aad
push
push
xor
lods
pop
test
xchg
push
popa
cmp
testl
or
or
jmp
ret
or
nop
cmp
gs
int3
daa
shll
mov
repnz
lods
out
lds
in
out
add
push
xor
mov
inc
gs
ds
xor
adcl
lcall
xlat
add
fwait
or
and
flds
ja
aas
in
mov
ds
sbb
push
cltd
call
mov
and
int
jnp
and
les
loopne
outsb
mulb
das
sbb
inc
adc
push
cli
rolb
ja
neg
addb
jbe
or
inc
fs
sub
inc
sbb
les
mov
xor
mov
inc
fs
xor
inc
pop
jne
mov
orl
or
lock
ss
pop
insl
lcall
xorb
ja
xchg
jbe
mov
lods
xchg
loope
cwtl
rolb
dec
push
test
mov
sub
das
lahf
aas
push
dec
stos
and
out
or
inc
insb
cmp
jg
cmpl
mov
test
cmp
inc
imul
or
arpl
pusha
and
loope
cmp
xor
std
addr16
pop
out
imul
shlb
les
xchg
ret
iret
xor
addr16
gs
nop
mov
dec
push
ljmp
jg
mov
lods
mov
xor
jp
inc
pop
pop
ret
mov
std
icebp
pushf
jge
adc
lret
mov
sti
repnz
movb
inc
lock
mov
add
jns
es
push
mov
in
pop
xor
out
mov
leave
jbe
cli
cmp
stos
sub
repnz
pop
call
dec
dec
push
lret
cmc
inc
xchg
sbb
in
sarl
mov
aam
jecxz
ret
adc
in
add
jns
cmp
jge
sub
ret
into
push
addl
push
mov
out
jne
fisubrs
adc
and
mov
mov
testl
pop
faddp
or
gs
mov
push
inc
sahf
je
fwait
push
push
add
ret
push
add
iret
jae
mov
ljmp
xchg
adc
mov
in
je
sbb
cli
cld
inc
out
inc
pop
pop
xor
out
mov
aaa
jle
stos
in
pop
xor
pusha
mov
mov
add
mov
andb
pop
cmpsb
les
repnz
aaa
mov
or
or
sub
call
mov
add
out
adc
xchg
lods
insl
mov
cs
inc
jns
repnz
cmp
push
orb
mov
mov
push
cmp
fimull
and
ficoml
jo
std
xor
dec
mov
sbb
inc
pushf
clc
cwtl
lods
cmp
sbb
push
ljmp
add
and
mov
sbb
mov
xor
ror
js
fwait
or
add
cli
outsl
bound
mov
or
cltd
push
cltd
jle
popa
mov
push
xor
xchg
cmp
jb
lret
daa
rcrb
dec
jle
xchg
dec
push
xor
sbb
jl
outsb
add
lret
out
mov
sub
mov
xor
popa
push
insb
int3
mov
nop
imul
or
cmpsb
fists
mov
fdivl
pop
repnz
cmp
das
pop
addl
add
jae
mov
mov
ja
mov
mov
imul
fs
sub
push
and
or
aas
or
xor
cmp
sub
inc
dec
or
inc
fwait
outsb
cmc
jle
addr16
pushf
inc
arpl
xor
mov
jno
sbb
lods
ret
sbb
jno
jle
cmp
insl
and
idiv
clc
xabort
dec
daa
xchg
or
add
fwait
aam
and
pop
std
sbb
cltd
into
aad
mov
fldl
sub
cltd
sub
xlat
dec
xchg
fs
and
mov
out
inc
jle
jge
lahf
hlt
nop
push
sub
lret
jmp
or
repnz
mov
add
stc
cmp
in
scas
andl
icebp
mov
or
and
jmp
cmc
xor
mov
mov
out
push
adc
scas
add
dec
mov
mov
sbb
enter
pop
mov
xor
ds
sbbb
xor
int3
sahf
aas
cld
popa
arpl
mov
lahf
adc
dec
clc
test
xchg
je
inc
enter
pop
call
pop
mov
adc
movb
icebp
and
jmp
push
sub
out
pop
std
push
mov
test
inc
in
je
out
lock
mov
mov
in
mov
fisttpll
and
daa
pop
orl
xlat
sbb
mov
cmpsl
es
mov
gs
stos
mov
lret
add
mov
jbe
mov
imul
nop
dec
inc
cmp
push
shll
mov
pushf
or
and
mov
in
int
hlt
in
push
push
dec
mov
pusha
in
repnz
ret
movsb
or
scas
fnstenv
or
inc
jo
push
pop
cwtl
adc
dec
xchg
add
aas
mov
les
dec
jne
add
lret
roll
sbb
push
sub
sbb
cli
aam
lods
or
popa
repz
scas
jns
mov
sub
das
scas
popf
clc
sbb
mov
loop
dec
sbb
dec
call
lcall
pop
add
or
pop
je
dec
outsl
ficomps
sub
fiaddl
das
xor
lea
xor
dec
out
pop
or
into
lcall
mov
cld
xchg
cwtl
pop
and
in
and
jo
scas
pop
inc
jp
fistpll
sti
adc
mov
pop
das
dec
stos
adc
lds
lods
stos
in
sbb
cs
fwait
mov
arpl
cmp
and
push
sbb
add
orb
push
mov
cmpsl
orb
lock
imul
shlb
adc
sbb
ljmp
dec
stos
push
inc
and
mov
xor
xchg
std
push
or
rcll
lea
out
jl
frstor
cmp
leave
pop
dec
mov
xchg
jns
dec
mov
das
jle
or
pop
push
cmp
rol
xlat
jmp
cmpsb
addl
lcall
xor
adc
repz
fwait
add
outsl
shlb
out
lock
dec
adc
add
mov
and
imul
jmp
ret
pop
scas
push
dec
cltd
int3
mov
rolb
and
mov
pushf
inc
push
fcomps
push
int3
adc
inc
ja
mov
adc
test
inc
jo
lods
fs
insb
mov
mov
xchg
loopne
cmp
xlat
lcall
gs
mov
mov
jl
dec
or
testb
idivb
sbb
pushf
push
mov
xor
adc
xchg
mov
testb
pop
inc
mov
jae
push
fisubrl
test
mov
daa
fstps
daa
mov
inc
cs
mov
outsl
mov
orb
xchg
cmc
sub
popa
or
pop
cltd
and
xor
stos
inc
fmull
movsb
mov
xchg
mov
scas
daa
push
int
adc
add
dec
or
sub
push
xchg
xlat
test
in
sub
fwait
jmp
and
cltd
jge
add
add
or
jns
dec
call
lods
addr16
fidivl
fisubs
hlt
and
push
xor
out
movsl
cmc
clc
cmpsl
shl
stos
cmc
mov
push
push
cld
pop
cmp
pminub
add
popa
lret
pop
loop
push
xor
fnsave
lcall
or
lds
mov
or
pop
sub
jl
mov
repnz
jmp
movsl
inc
sbbl
ds
xor
ss
in
fildll
cmc
daa
adc
leave
or
in
and
icebp
mov
jbe
pop
jle
push
ja
sbb
cwtl
mov
popf
inc
add
call
push
int
add
cwtl
aad
xlat
imul
pop
push
push
pop
insb
into
mov
xchg
loopne
in
loope
test
lods
adc
cwtl
mov
push
inc
ret
loope
shrb
icebp
loopne
addr16
out
push
sub
xor
mov
mov
inc
lret
pop
addr16
cmp
mov
nop
movsl
push
and
adc
dec
jmp
adc
add
adc
stos
inc
nop
js
mov
jp
mov
lods
rclb
xchg
mov
arpl
jle
bound
or
xor
cmpsl
sbb
lahf
in
cmpsl
xchg
push
xor
pop
es
and
dec
xor
stc
mov
sbb
outsb
sbb
cmpb
fnstenv
pop
clc
jmp
sub
push
sub
push
add
add
jbe
or
cmp
jl
clc
mov
ss
mov
mov
mov
sub
mov
cld
dec
loop
mov
adc
adcb
outsl
into
and
enter
mov
out
nop
pop
pop
ss
sub
sub
iret
aad
pop
aad
lds
cmpb
nop
push
jge
jno
jns
xchg
pop
test
mov
jbe
fs
mov
push
dec
or
cli
ret
push
je
pop
mull
push
mov
or
stos
push
cmp
dec
cli
mov
mov
mov
in
pop
add
repz
test
adc
inc
cmpsl
les
movsb
int
jnp
not
iret
push
ret
mov
sub
sbb
bnd
mov
sub
call
dec
insl
in
jg
arpl
gs
xchg
dec
imul
jecxz
ljmp
add
jge
pop
inc
stos
hlt
pop
js
ds
pop
popa
inc
pushf
cltd
das
mov
dec
setb
inc
inc
push
mov
addb
pop
enter
push
xchg
mov
pop
lods
insl
jo
jbe
decb
dec
xor
add
mov
xchg
mov
fstpt
cmp
sbb
push
add
idiv
insl
jmp
fadds
cmp
movsb
lss
fs
orb
dec
adc
inc
jae
mov
push
push
lds
cltd
mov
xchg
hlt
xchg
push
loope
xchg
cwtl
mov
jg
pop
add
and
mov
test
aaa
movsb
xor
xlat
dec
inc
push
fs
in
mov
mov
shrl
es
sub
push
adc
popa
popf
insb
jmp
pushf
or
loopne
cs
outsl
mov
mov
lock
test
scas
hlt
dec
sub
inc
ds
sarl
adc
or
mov
xor
fs
adc
xchg
js
or
mov
and
test
cmpsb
aas
sub
stc
es
aas
das
adcl
pop
inc
mov
jbe
rcrl
xchg
popa
das
aaa
xchg
mov
cwtl
push
sarl
inc
push
es
sbb
lea
pusha
dec
inc
dec
xor
mov
addr16
adc
xchg
cmp
test
pushf
jb
rolb
cltd
sti
ror
xor
imul
xlat
inc
and
movb
pop
jp
int3
pop
pop
std
adc
cmp
loopne
cmp
dec
xor
stos
push
pop
mov
dec
or
xlat
sbbl
jecxz
in
bound
mov
mov
push
cmp
pop
jge
je
or
cmp
fsubrl
push
sti
rcrl
cmp
sub
jae
out
in
lea
int
mov
mov
dec
dec
in
std
jne
testb
dec
jbe
cmp
cmpl
gs
jecxz
inc
lahf
xlat
shr
sbb
mov
sarl
cmp
add
fldl
mov
lcall
fimuls
loope
jl
addr16
xchg
test
lret
aaa
push
push
ljmp
addr16
xor
ficoms
das
ret
aam
jo
shll
jmp
xchg
roll
inc
sub
rcl
test
push
dec
sub
mov
call
out
incb
pop
mov
es
jecxz,pt
pop
mov
sarl
stc
enter
mov
xchg
adc
push
xchg
dec
mov
xchg
popa
loopne
pop
inc
loop
ud0
adc
out
mov
movsl
mov
xchg
dec
in
cld
pop
shll
push
jmp
fsubrl
jge
jp
sbb
stc
cmp
sub
push
cli
mov
cmp
fwait
ljmp
or
hlt
mov
mov
fistl
dec
mov
fmuls
xchg
cmc
or
xchg
inc
mov
shll
out
inc
lods
dec
cvttps2pi
pop
xchg
rol
in
and
das
orb
and
or
pusha
jg
cwtl
mov
aam
sbbb
xor
jp
sbb
jmp
jge
cmp
mov
fsubrl
jno
cwtl
dec
adc
iret
and
sbb
xorl
out
leave
or
cmpb
js
dec
fsubl
es
hlt
je
shrb
into
add
stc
sbb
ljmp
adc
cwtl
fwait
xchg
inc
and
cmp
sub
scas
aad
sahf
mov
cmp
inc
inc
xor
cmp
mov
xor
mov
mov
sahf
lock
pop
arpl
pusha
mov
xchg
shlb
lds
sub
jb
or
sbb
xlat
fsub
loop
cmp
test
cmp
sbb
mov
gs
pop
xor
lds
jne
pop
movsb
mov
dec
mov
lea
mov
sbb
cmp
sbb
fs
jbe
aad
lea
popa
shll
dec
ja
dec
sub
jl
cwtl
in
pop
cld
mov
les
and
xchg
add
imulb
call
ret
add
div
or
add
xchg
inc
cwtl
mov
scas
nop
js
in
movsb
cmp
iret
push
sbb
mov
push
jne
or
push
stos
cld
shlb
jecxz
push
movsl
pop
pop
sbb
adc
rol
cmp
cmc
xor
inc
pop
xchg
and
inc
pop
dec
enter
mov
stos
push
xchg
in
inc
fmull
testb
lock
inc
test
and
dec
insb
lahf
test
fsubs
imul
xchg
inc
push
mov
mov
cwtl
adc
cmp
jbe
shlb
dec
pop
std
int
xor
inc
mov
cmp
outsb
pop
or
inc
pop
push
daa
test
push
pop
outsb
andl
inc
int
inc
cld
pushf
cld
jmp
xchg
and
lcall
push
mov
adc
jo
and
mov
inc
sbb
lret
mov
dec
dec
jge
jmp
xchg
mov
in
mov
ret
rorl
in
or
mov
and
push
cmp
movsl
por
cwtl
mov
sub
xor
sub
xchg
bound
inc
cwtl
jno
iret
sbb
inc
pop
das
jl
xor
pop
out
or
jnp
add
inc
sbb
add
jbe
xor
and
xchg
and
sub
loop
push
jmp
add
cwtl
loope
std
setp
lds
stos
outsl
jne
sbbb
lahf
mov
or
mov
lcall
mov
arpl
sbb
es
adc
fisubrs
xchg
xchg
shll
in
adc
shlb
xchg
popf
wbinvd
insb
push
cwtl
dec
sbb
fiaddl
cmp
inc
pop
dec
arpl
fsubrl
adc
repnz
mov
pop
fidivrl
mov
and
mov
xor
lcall
ja
cld
and
jae
and
jp
xchg
dec
jmp
inc
push
test
popf
inc
adc
fwait
andb
jg,pt
cmpsl
stos
sbb
push
cwtl
cli
push
ret
pop
push
inc
insl
xor
lock
add
out
pop
stos
inc
sbb
mov
mov
adc
ret
sbb
inc
fcomp
mov
sbb
das
jno
nop
ret
sub
pop
testl
in
cli
sbb
daa
add
dec
ljmp
ffree
ror
xchg
pop
lds
test
sbb
xchg
out
dec
xor
jmp
inc
cmp
mov
mov
jo
shlb
popa
xchg
or
push
test
daa
add
add
les
adc
or
mov
or
in
fwait
mov
aaa
or
pop
int
xor
mov
scas
inc
js
xchg
add
mov
ds
cmpsl
mov
sbb
mov
dec
test
xchg
or
jnp
push
out
js
sub
xchg
sbb
dec
dec
jl
mov
scas
aas
out
mov
lret
mov
jb
test
lahf
repz
jb
shl
sub
or
rcll
jne
jle
mov
repz
mov
adc
and
inc
dec
call
and
mov
aaa
cltd
pop
loop
lcall
push
or
and
cli
mov
fwait
mov
scas
std
xchg
and
mov
push
rcrb
cmp
xchg
fstpt
push
shll
ja
jmp
adc
enter
jmp
jmp
mov
and
adc
dec
xchg
sub
cwtl
test
ljmp
or
sub
pop
xchg
aaa
dec
cmp
cld
sbb
adc
in
sbb
adc
mov
add
mov
mov
out
fisubrl
je
call
das
aas
sbb
rcl
adc
mov
xchg
jg
pop
insb
mov
fcoms
movsl
add
stos
movl
ss
mov
rol
rol
sbb
call
call
dec
adc
leave
fiadds
xlat
outsb
cmpsb
imul
ds
adc
push
pop
dec
test
std
sahf
insl
mov
cmp
jle
sbbb
and
lret
sbb
sahf
or
lods
sub
pop
fwait
sbb
ficompl
push
icebp
pushf
sbb
aaa
in
mov
je
xor
addb
arpl
stc
xor
leave
in
mov
popf
dec
cmpl
jne
test
dec
or
into
and
jne
push
xchg
push
popl
dec
inc
dec
sbb
pop
mov
in
addr16
clc
mov
pop
cltd
outsl
jmp
add
ss
xchg
lret
mov
inc
push
xchg
pop
pop
add
ljmp
mov
mov
pushf
cli
jl
pusha
jo
push
fs
xchg
mov
into
push
sub
sub
cmp
gs
call
lcall
into
mov
stos
call
pop
push
xlat
out
xor
push
fldenv
xorb
add
xchg
sar
testl
movb
in
cmp
or
dec
inc
adc
xchg
stos
sub
add
jo
idivb
lds
and
mov
dec
adc
pop
xchg
data16
add
out
sbb
sbb
xor
mov
cltd
and
inc
or
nop
leave
cs
fwait
mov
shl
pop
push
mov
mov
pop
cmp
shlb
pop
xor
xor
shl
in
and
fcoml
pop
xchg
sbb
jecxz
mov
call
sub
loope
dec
mov
push
mov
push
lret
out
or
sbb
mov
in
and
adc
or
ljmp
pop
lods
call
dec
xchg
or
call
jae
jl
addr16
xor
in
cmp
lret
jmp
adc
popf
xor
jae
and
js
and
or
outsb
int3
jmp
pop
mov
jmp
dec
popf
enter
in
daa
into
pop
inc
mov
xchg
imul
xchg
sbb
cmc
enter
lret
dec
push
adc
mov
mov
mov
or
xchg
or
mov
inc
je
add
mov
pop
enter
test
mov
inc
sbb
outsl
xor
sub
dec
sbb
xchg
pop
loopne
lahf
test
push
xlat
dec
mov
ds
outsb
icebp
test
pop
mov
jns
cwtl
std
add
rcrl
jnp
leave
push
cs
xchg
dec
dec
jg
js
cwtl
lods
mov
mov
imul
roll
bound
add
or
sub
dec
mov
pop
shll
pop
dec
adc
or
mov
loope
mov
push
enter
mov
mov
popf
sti
inc
ljmp
add
sbb
pop
popa
outsb
dec
sub
pop
dec
mov
pop
scas
enter
loop
inc
push
mov
pop
mov
sbb
in
call
mov
xor
ja
xchg
push
jl
jbe,pn
lahf
enter
int3
pop
and
cmc
loopne
and
lahf
mov
mov
jg
dec
pop
icebp
dec
jb
inc
or
stos
cs
push
push
push
faddl
sub
or
gs
icebp
int3
fmull
jle
dec
loopne
movsl
mov
js
push
xchg
cld
das
adc
jl
push
test
mov
inc
sbb
inc
out
fisttps
sub
sahf
sub
ss
push
jnp
dec
pop
inc
xchg
jne
xchg
mov
xchg
cmp
addr16
or
test
jae
fs
push
or
ret
fld
dec
out
mov
adc
bound
adc
out
aaa
aas
rorb
pop
mov
lret
aas
xchg
js
cltd
mov
cltd
sbb
mov
out
sub
push
test
or
pop
popf
jnp
insl
pop
mov
mov
int3
dec
jl
repnz
ret
mov
sub
mov
cmp
or
inc
loopne
roll
loop
loop
jmp
test
or
idiv
sbb
jl
jae
jmp
jbe
pop
pushf
mov
test
rolb
mov
cs
cmp
dec
icebp
push
push
fwait
ret
jg
js
shl
test
pop
aam
jl
inc
nop
mov
test
fwait
lods
stc
lret
enter
mov
xchg
and
and
inc
sarl
lods
xchg
gs
xchg
or
pop
add
and
lret
mov
xor
xchg
nop
rcll
add
or
cmpsb
jecxz
sbb
mov
xor
dec
inc
dec
out
dec
loopne
outsl
shll
insl
loopne
cmp
mov
adc
push
gs
in
idivb
les
out
fdivrp
test
jp
outsb
mov
cmp
cmp
xor
cmp
xchg
imul
dec
or
out
pop
stos
mov
imulb
fidivs
shr
aam
sahf
shlb
je
or
bound
and
mov
push
sarl
out
xchg
pop
xor
pop
aaa
jno
jg
push
cmpsb
xchg
insl
lea
sub
shlb
out
add
adc
jne
repz
mov
jno
push
js
cld
push
push
shlb
jge
xchg
rorb
jb
xor
fdivl
inc
std
clc
clc
inc
sbb
fldl
inc
add
sub
jns
sub
fisubs
mov
push
inc
out
cwtl
out
arpl
insb
cld
ret
or
lods
or
fimull
or
and
ret
mov
xor
fsts
int
fmull
ja
mov
insb
data16
mov
cltd
pop
mov
test
in
aaa
aad
lds
insb
aas
cmp
mov
add
add
loop
or
movsl
std
cmp
pop
test
fwait
sbb
divb
aaa
out
adcl
loop
ja
push
rcrl
shrl
sahf
mov
sbb
clc
int3
xchg
fs
jecxz
arpl
cmpsl
mull
xlat
xor
outsb
mov
aaa
repz
xchg
ljmp
mov
ss
js
mov
inc
jle
lret
aam
orb
lea
dec
lods
fstp
fcompl
jae
xor
mov
mov
int
add
cmp
lds
cmp
cmp
jle
push
pop
js
addl
pop
out
dec
stos
mov
punpcklbw
push
rcr
cmp
pop
cmp
add
cmp
mov
sub
mov
adc
loope
xchg
add
xor
loope
test
adc
idivl
jmp
mov
adc
test
sahf
popa
jnp
jge
clc
sbb
adc
int3
movsb
gs
cltd
lock
int3
sbb
pop
add
addl
fbstp
xor
push
loopne
sbb
fisttpll
jmp
add
pop
nop
sbb
add
in
xor
dec
loopne
sub
dec
adc
fs
fwait
mov
shrl
fdivrs
movsl
jne
or
sbb
enter
lods
adc
mov
xchg
adc
movsl
adc
test
mov
mov
xchg
xor
fdivrl
inc
push
subl
not
mov
adcl
ja
xlat
faddl
cltd
mov
push
mov
aas
push
mov
fnstcw
in
outsb
mov
sti
mov
test
mov
mov
cmp
in
push
loope
sbb
test
push
mov
mov
mov
xor
or
dec
jne
ja
adc
sub
inc
mov
bound
outsb
mov
dec
xor
pop
rolb
sbb
stc
mov
loopne
into
xchg
sub
cmpsl
sbbl
push
shl
out
outsl
adc
push
sti
shlb
scas
pop
nop
xchg
out
insl
dec
pop
pop
xchg
mov
shrl
sbb
fdivp
insb
test
sub
sbb
popf
sti
mov
dec
rol
inc
push
jg
sub
pop
or
imulb
loop
nop
in
sahf
std
das
or
dec
push
imul
out
xchg
out
push
popf
es
push
xchg
adc
or
les
es
out
aaa
mov
movsb
shlb
out
or
test
dec
push
cmp
sub
jae
push
ss
clc
mov
push
cmp
ja
and
xchg
adc
mov
stc
push
negl
dec
push
icebp
sub
loope
nop
mov
outsb
fisubl
mov
mov
fimull
aad
jbe
mov
mov
call
push
jl
fistps
pop
mov
ss
repz
clc
test
call
lsl
dec
jnp
jl
xchg
outsl
sub
stos
iret
mov
cmp
jge
lea
sub
stos
jo
or
xor
mov
mov
int
das
jno
cmp
lods
mov
roll
mov
sarb
jno
sahf
xor
jo
dec
lods
lods
insb
fdivl
fmul
das
xchg
jns
les
cmc
lock
fsubs
outsl
sahf
jmp
lahf
xchg
clc
mov
das
repnz
cmpsb
cmp
pusha
add
shll
fcompl
filds
stos
xor
test
sbb
stc
xor
and
or
sahf
inc
popa
jo
fs
pop
xchg
mov
nop
cwtl
rcr
test
out
scas
rolb
mov
out
inc
scas
xor
lods
add
insb
mov
push
sub
mov
sub
inc
lods
lahf
repz
mov
or
fcmovbe
sub
xchg
mov
outsl
pop
mov
scas
inc
jle
aam
or
pop
dec
mov
pop
into
out
jecxz
pop
out
lret
rorb
jb
rcrl
cmpl
addr16
sbb
pop
mov
ret
ss
imul
push
mov
push
push
add
aaa
pushf
sub
jbe
push
aad
pusha
ds
lods
mov
cmpsl
push
mov
dec
test
or
dec
loope
jae
movsb
leave
out
mov
dec
cmp
ds
arpl
jbe
push
lods
add
aad
out
xor
dec
arpl
inc
jle
mov
lret
test
push
cmp
adc
push
jmp
js
and
shll
scas
push
lods
mov
outsl
sub
jmp
test
in
and
and
mov
mov
fisubl
stos
dec
mov
mov
jg
mov
movsb
das
jge
jmp
and
xchg
xor
cmp
jno
jno
fdivr
cmp
iret
ret
test
jl
dec
addr16
les
push
test
jae
movsb
mov
fmull
mov
pusha
rcll
mov
pop
dec
lcall
cmp
and
cld
mov
xchg
ja
push
dec
dec
bound
or
push
adc
add
cmc
or
into
faddl
fsubrl
jecxz
push
jmp
mov
mov
sub
cmpsl
push
sbbl
push
mov
insb
cmp
cwtl
stos
adc
les
in
sbb
cmp
je
xchg
push
mov
jnp
test
movsb
pop
call
dec
fimuls
fstl
cmp
ja
int
mov
fs
lea
or
or
ficoms
mov
cmp
jecxz
add
es
pop
xor
fs
aad
cmp
pushf
adc
pop
mov
push
jg
sbb
mov
pop
test
pushf
mov
xchg
int
inc
jge
sbb
mov
int
repz
popl
bnd
stc
roll
dec
xor
push
jbe
jb
xor
in
mov
faddp
add
insl
jle
cmpsl
into
test
lret
outsl
xchg
and
imul
pop
or
in
shll
jmp
and
xchg
xchg
inc
jno
fidivrl
shlb
iret
outsl
shr
xchg
sub
roll
push
in
or
mov
mov
sub
and
push
cmp
mov
jg
pop
shll
pop
inc
pop
stc
vpshufhw
out
xor
mov
mov
imul
jns
adc
popf
or
fcomip
dec
dec
dec
ljmp
cmc
shlb
subl
in
mov
push
hlt
aam
push
fisubl
push
cmpsl
hlt
jg
push
mov
mov
daa
xchg
ret
mov
loop
inc
mov
clc
pushf
mov
call
xchg
pop
xlat
jns
jle
and
out
in
pop
cmp
into
fcompl
jge
gs
jl
xor
pop
mov
push
cmp
jno
loope
mov
test
dec
inc
mov
or
jb
out
sbb
fadds
pop
in
jle
iret
jle
and
rorb
repnz
add
sbb
negl
mov
mov
xor
cmp
mov
in
cmpsl
aad
and
scas
sub
jmp
pop
push
cmc
dec
fists
dec
cmp
push
daa
mov
pop
popa
jecxz
push
stc
insl
xor
nopl
stos
add
test
mov
push
xchg
or
and
in
xchg
and
mov
test
xor
loope
dec
repnz
outsl
xchg
fdivrs
push
stos
scas
je
lods
mov
aaa
fdivl
nop
jle
testb
pop
cmpsl
mov
cmp
cmpsl
xorl
adc
pusha
aad
aas
sbb
push
push
jmp
loop
xchg
pusha
mov
xchg
lods
imul
jbe
adc
inc
jge
lret
push
ror
adc
sub
in
push
popf
std
sbb
cmpsl
jae
cmp
or
dec
imul
jp
int
mov
push
push
jno
test
xchg
inc
sahf
xchg
jge
fnstenv
mov
ljmp
push
pop
lods
test
sbb
mov
mov
jp
sahf
fildll
inc
adc
mov
gs
jmp
mul
flds
sub
cs
push
mov
rolb
push
jg
gs
stos
adc
sar
sbb
stos
out
pop
mov
pop
adc
sbb
pop
xor
jbe
aas
mov
popf
push
jmp
imul
jg
xlat
xcrypt-ctr
cmpsl
sbb
adcb
into
cmp
push
push
std
je
cmpl
insb
push
ds
dec
je
jns
pushf
pushf
cwtl
adc
fs
mov
fildl
ret
push
sbb
test
std
and
pop
jno
inc
jmp
pusha
inc
sub
inc
add
outsb
out
cmpsl
movsb
mov
negl
jae
adc
or
outsb
jp
pop
lahf
cmpsb
sar
ljmp
mov
pop
mov
pop
cmp
pop
fidivs
jbe
mov
stos
or
pop
push
push
mov
outsl
ds
faddl
repz
sbb
ret
mov
cwtl
data16
aad
xchg
or
mov
and
mov
mov
sub
xchg
sub
push
popf
out
orb
cmp
or
testb
jnp
dec
pop
dec
or
cmpsb
inc
cmpsl
xchg
xchg
jb
lds
dec
mov
aad
stc
or
xchg
fsubrl
jg
insb
shlb
push
xchg
xchg
sub
mov
popa
data16
jecxz
jmp
mov
add
test
mov
mov
ljmp
mov
popa
fbstp
insl
xor
aam
jge
or
testb
or
imul
jb
push
mov
adc
addr16
dec
mov
xchg
ss
xor
in
xor
leave
in
jle
js
js
pop
sbb
add
push
rcrb
je
pushf
pop
mov
fdivp
jo
stc
cwtl
xchg
ds
lret
mov
push
sbb
add
and
mov
inc
jp
pushf
imul
out
xchg
jmp
cld
and
jecxz
inc
fdivs
pop
enter
mov
out
testl
mov
xor
adc
loop
jl
hlt
mov
out
mov
push
add
xchg
decl
or
scas
sbb
pusha
push
mov
adc
outsl
push
push
ss
or
add
and
mov
sub
ret
jecxz
xor
dec
lods
dec
sahf
hlt
inc
cmpsl
cmp
mov
push
dec
pusha
inc
adc
cs
xor
call
push
ret
stos
jle
sub
mov
sbb
cmp
rcrb
fs
push
enter
fstpl
aad
mov
addr16
inc
xchg
nop
inc
pop
mov
mov
or
stos
cmpsl
divps
xchg
sub
pop
fucomi
sub
ja
push
and
movsl
lods
stos
es
aas
ret
mov
mov
push
mov
in
roll
leave
cli
fisttpll
jl
test
jp
addl
sti
inc
outsb
push
inc
movsb
lds
cmpsb
push
lret
inc
mov
sbb
push
jbe
movsb
mov
leave
jp
or
out
inc
xor
outsb
jno
js
or
jecxz
cli
stos
mov
lcall
dec
out
stos
insl
std
bound
pop
pop
popa
jg
in
in
jle
popl
sub
stos
cmpsb
insl
ds
movq
in
mov
jns
int3
in
mov
pop
dec
out
nop
in
pop
mov
xor
xchg
ret
lret
push
repz
push
push
aas
xchg
mov
adc
dec
rorb
add
pop
and
scas
mov
scas
mov
fnstsw
out
push
mov
pop
shl
mov
divb
cmp
pop
nop
icebp
movsb
cs
lds
jbe
pop
add
pop
pop
xlat
inc
and
mov
xor
in
sbb
or
push
lods
jne
lcall
es
add
or
fidivrl
and
push
adcb
decb
sub
rcr
mov
test
and
xor
out
xor
mov
pop
push
or
enter
js
popa
xor
adc
mov
fwait
je
mov
addr16
cmp
je
adc
jnp
xchg
test
mov
fnsave
jmp
and
in
pop
or
adc
mov
test
jns
lret
enter
inc
xor
or
push
dec
xor
scas
hlt
sub
xor
and
or
gs
sbb
inc
in
push
js
ret
lea
jns
pushf
cli
lret
mov
xchg
push
or
mov
pop
test
sbb
stc
imul
and
cmp
les
in
notb
pop
stos
iret
mov
int
fsubrp
jmp
test
and
inc
addr16
flds
sub
outsl
add
outsl
cltd
lret
sbb
push
in
das
mov
imul
fstps
fstps
fs
mov
add
repnz
fldcw
test
lret
jb
dec
adc
adc
int
inc
test
cmpsb
push
and
xchg
pushf
pushf
xor
les
mov
and
rclb
lods
mov
pushf
mov
push
in
xor
ret
cmp
sbb
clc
push
into
cld
dec
adc
mov
cmpsb
faddl
sbb
fstpl
out
dec
mov
or
cmc
cli
mov
push
imul
mov
in
in
adc
push
jo
sub
pop
dec
jmp
das
sarb
and
push
adc
inc
xchg
cmp
or
insl
inc
and
cli
sbb
jno
push
push
cmp
push
fcomps
popf
mov
test
dec
dec
cmpsb
xchg
leave
mov
loope
xchg
sbb
test
popa
lahf
int3
and
fcomps
jmp
or
out
mov
mov
or
in
dec
sbbb
push
sbb
cmc
inc
out
lret
pop
push
rcr
das
test
xor
cwtl
push
ja
shlb
dec
sti
lahf
pop
add
aad
push
xchg
fs
icebp
sub
ss
xchg
push
or
cmp
pop
xor
lret
pop
test
jge
sbb
fs
ds
aas
mov
sahf
test
xchg
mov
stos
jmp
ljmp
push
fisubs
aaa
fstps
push
mov
jl
out
pop
pop
out
pop
inc
stc
aad
addl
xchg
lods
movsl
push
dec
jbe
push
in
mov
aam
aas
stos
or
lahf
dec
loop
jp
inc
test
xor
push
push
push
clc
pop
das
outsl
and
std
mov
arpl
lods
mov
sbb
sbb
insl
jnp
enter
dec
xchg
ljmp
fldenv
movsl
sbb
rorb
xchg
jl
push
push
mov
jl
cmp
ds
push
repnz
insl
jle
or
jne
cs
sub
push
ret
loopne
arpl
imull
clc
scas
adc
mov
lods
and
rolb
jno
cmpsl
outsl
xchg
lds
sub
std
and
push
pop
adc
adc
cmc
add
inc
popa
jle
icebp
push
test
lods
ss
aas
mov
jae
mov
sub
pop
mov
loop
in
xor
or
fstl
cltd
ret
mov
sbb
add
lcall
or
lds
loopne,pn
pop
roll
or
std
rclb
popf
xchg
adc
jge
lahf
outsl
inc
les
xor
cli
jge
loopne
test
stc
shll
xchg
ljmp
mov
xchg
cmp
int
lods
lock
push
push
adc
mov
adc
std
and
dec
pop
add
mov
clc
daa
xor
aaa
xchg
jbe
fcompl
cli
dec
aas
out
cmc
mov
mov
push
jg
stc
push
dec
and
jecxz
push
fmuls
inc
out
pop
shrl
sbb
jmp
mov
cwtl
fcomp
mov
sahf
pop
jmp
or
lea
popa
cmpsl
mov
dec
decl
ja,pn
inc
arpl
dec
pop
ljmp
cmpsb
data16
lret
je
dec
test
enter
cmp
mov
sahf
xchg
data16
jge
jbe
jae
xor
jbe
imul
or
in
rcll
pop
inc
repz
gs
repz
jl
mov
mov
jp
fstl
add
loop
jno
sub
xor
push
or
lret
pop
fstpt
imul
pop
push
fnstenv
fwait
mov
mov
xchg
stos
imul
dec
ljmp
mov
mov
movb
popf
aaa
mov
stos
sbb
les
or
mov
stos
pushl
shrl
cmp
dec
movb
add
out
pop
inc
xor
push
adc
add
push
or
loop
les
stc
sarl
bound
pop
mov
lock
mov
and
inc
loope
loopne
dec
xor
add
into
mov
sbb
push
in
mov
bound
mov
aaa
ret
lcall
int3
cmp
push
xchg
sbb
repnz
int3
xchg
ds
subl
mov
push
out
push
jae
inc
in
pushf
add
push
jmp
or
std
nop
iret
cmpsl
arpl
test
adc
clc
mul
add
icebp
adc
cwtl
int3
mov
cmp
push
push
xor
push
push
cli
xor
aam
adc
sahf
sarl
dec
in
imul
sub
cmp
inc
sbb
xchg
push
nop
and
in
sub
inc
data16
daa
push
sub
iret
outsb
and
xchg
and
mov
sbbb
jecxz
push
iret
ss
adc
and
js
sbb
daa
roll
push
adc
out
mov
xchg
stc
shll
fwait
ss
out
dec
scas
andl
mov
fdivrl
leave
mov
clc
sbb
nop
xchg
stos
fs
pop
xor
mov
in
xchg
insb
xlat
add
xor
pop
je
xchg
mov
sbb
lret
andb
into
and
mov
sbb
xchg
leave
xchg
xor
in
and
std
out
mov
lea
mov
jle
sahf
pop
mov
js
incb
mov
and
mov
andl
call
add
aas
fwait
lds
cmpsl
push
mov
lea
sbb
sbb
sbb
loopne
insb
jg
sti
sbbb
cltd
sub
push
and
aaa
add
les
jmp
cmovo
outsb
lret
xchg
mov
ljmp
add
call
aas
js
sub
je
or
shl
push
enter
sub
lcall
add
xor
int
xlat
add
jae
push
sar
xchg
std
das
mov
xchg
je
sbb
pop
icebp
mov
into
push
jne
sub
adc
not
or
inc
fxch
outsb
cltd
test
sub
or
stos
pop
inc
cld
into
decb
test
out
and
shll
test
fdivrp
mov
out
mov
iret
jnp
movsb
mov
ss
sti
into
int3
pop
sub
lea
mov
and
mov
int3
push
outsb
das
test
popa
stos
xor
dec
rcll
xchg
push
push
dec
dec
test
sbb
daa
xchg
add
fstpt
mov
scas
mov
cltd
sbb
jecxz
bound
out
lock
and
fcmovu
xchg
mov
stc
mov
jae
movsl
sub
in
xchg
call
in
mov
stos
sub
pop
bound
pop
out
dec
pop
loopne
rcr
cmp
fwait
sbb
push
stos
or
aas
outsb
mov
repz
imul
movsb
mov
dec
cmpsl
test
xlat
pushf
roll
imul
dec
xchg
pop
inc
xchg
cmp
and
xor
xor
leave
xchg
jns
bound
push
enter
fs
test
fs
push
icebp
ret
sbb
dec
mov
add
add
jo
push
jo
gs
add
sti
cwtl
mov
push
push
test
jle
pop
cmpsb
add
lret
mov
test
and
push
dec
xorl
insb
aaa
test
and
mov
insl
lret
and
call
faddl
mov
fimull
or
jmp
mov
mov
shrb
xor
lds
lods
inc
stc
lret
add
test
iret
lea
dec
dec
push
daa
jae
jecxz
dec
xchg
cli
and
nop
shll
xor
mov
adc
icebp
jae
ds
movsb
add
push
pop
sbb
rcrl
lock
cmpb
inc
dec
mov
mov
pop
sahf
in
pop
mov
mov
mov
ret
sarb
movsb
jb
aad
push
xor
or
cmpsb
cmp
adc
test
push
jge
das
sub
mov
xchg
mov
inc
add
push
add
push
lcall
hlt
daa
mov
adc
mov
fcomi
orl
mov
push
cmp
lahf
mov
iret
dec
push
pop
imul
imul
aas
adc
mov
jg
cmp
jp
das
mov
mov
xlat
add
mov
jbe
aaa
mov
ljmp
testb
cmp
ret
push
cmp
fs
leave
sbb
cmp
jge
dec
jp
rorl
jle
mov
popa
imul
scas
lds
insb
adc
sub
jle
xchg
int
mov
mov
fnstcw
mov
push
shrl
cmp
jecxz
add
add
out
mov
mov
inc
adc
cs
dec
movsl
jne
xchg
dec
fs
lahf
popa
movsl
mov
and
dec
and
ljmp
mov
mov
mov
iret
fbld
xchg
jmp
adc
mov
push
dec
test
inc
dec
jl
jg
inc
js
maxps
dec
mov
dec
xchg
rcrl
xchg
sub
std
enter
sbb
pop
jmp
mov
jl
repz
test
je
mov
pop
icebp
sbb
ret
je
jecxz
sub
adc
and
lds
push
sti
push
mov
adc
test
fbld
aad
or
hlt
mov
push
add
leave
push
inc
mov
stos
sub
xchg
loop
sub
adc
xchg
mov
push
in
and
xor
push
jno
sbb
ret
mov
sbb
cwtl
cmp
or
inc
mov
lock
mov
fstpl
dec
add
hlt
enter
gs
add
xor
enter
out
cld
icebp
mov
stos
push
mov
lret
mov
push
mov
jno
or
xchg
dec
dec
pop
lret
push
stos
sbb
scas
dec
js
fcomps
xchg
aas
mov
sbb
mov
lahf
xlat
test
push
add
and
icebp
cmp
ret
add
fs
or
jl
sub
ror
jle
xlat
cmp
inc
into
adc
jo
dec
cmp
dec
jae
lret
fmuls
and
jne
pop
lahf
xchg
xor
xchg
or
mov
std
jecxz
pop
fistpll
push
nop
mov
mov
lcall
int3
aas
int3
jns
adc
test
dec
xor
mov
adcb
mov
sbb
sbb
loope
test
jle
aas
dec
sbbl
scas
ficoms
xchg
or
push
pcmpeqd
ret
movsb
xor
aam
int3
mov
ret
xchg
add
pop
mov
push
and
mov
xchg
mov
fstp
test
cmove
and
and
test
push
sbb
mov
clc
rcll
mov
loope
rorb
insb
aam
cmp
sbb
add
jp
sarl
shrl
fisubl
jmp
adc
icebp
add
shl
pop
popa
arpl
xor
mov
insb
inc
and
loop
push
popa
fldcw
lods
cs
dec
push
mov
mov
pop
cmp
dec
lcall
xchg
jecxz
movl
mov
je
dec
xlat
adc
popa
cmpsb
test
sbb
aad
mov
es
out
add
ficompl
lcall
jnp
mov
std
jg
jmp
xor
add
iret
pop
ds
lock
popw
and
add
aas
in
jg
sub
mov
addb
mov
test
sub
ficomps
scas
mov
pop
hlt
ret
and
movsl
push
lea
rorl
stos
andb
jp
mov
shll
mov
pop
dec
hlt
push
je
mov
stc
enter
xchg
in
adc
sub
inc
jbe
in
push
jns
mov
jecxz
jmp
push
push
jmp
and
or
mov
xchg
inc
push
in
lret
fwait
adc
push
and
lcall
push
adc
cmp
mov
add
xchg
mov
loopne
sbb
stos
rcll
jno
pop
pushf
fsts
out
nop
hlt
mov
lock
sub
xchg
sub
xchg
daa
stos
inc
xor
and
inc
push
xchg
or
xlat
lea
push
loop
mov
in
xchg
or
jecxz
lds
xchg
call
cli
test
jmp
cmc
mov
sahf
jle
scas
jo
jg
xchg
cmc
iret
rorl
inc
clc
push
xchg
jge
add
outsl
test
push
ljmp
rcll
out
xchg
cmc
adc
inc
pusha
cwtl
pop
xchg
add
fsubs
aam
jne
or
test
xchg
je
in
pop
sub
cmp
inc
adcb
jae
mov
lret
movsl
in
inc
xchg
stos
iret
gs
jb
shrb
in
xor
adc
ficompl
test
mov
mov
adc
imul
jo
or
icebp
int3
mov
or
ja
mov
nop
mov
loope
xor
pop
push
ds
jg
notl
aam
push
ds
mov
push
push
adc
xchg
pop
mov
add
push
call
inc
mov
lret
jl
pop
add
push
jge
dec
and
mov
mov
push
mov
or
add
cmp
add
loope
mov
xchg
xchg
imul
hlt
pop
arpl
jae
test
mov
sub
insl
in
icebp
fs
and
mov
lcall
out
enter
cmpsb
sub
jae
andl
js
add
jbe
lea
xor
dec
sub
imul
xchg
pop
fwait
stos
dec
mov
jbe
outsl
mov
adc
orl
jg
jb
dec
test
cwtl
scas
add
jge
neg
les
inc
push
adc
dec
pushf
loope
sbb
test
popf
sub
movl
jl
lea
movb
shll
je
jecxz
adc
enter
fstl
mov
insl
enter
je
cltd
not
or
pop
or
test
cmpsl
cmc
xor
fwait
loopne
insb
push
fldl
pop
mov
pushf
dec
mov
xor
jae,pn
inc
outsb
repnz
fwait
test
pop
adc
hlt
scas
jns
aaa
and
pusha
or
mov
out
mov
and
sahf
test
cmp
dec
add
mov
movsb
je
popf
pop
xor
and
mov
add
pusha
stos
cs
addl
cbtw
pop
pop
fimull
stc
in
pop
les
pop
pop
add
arpl
xchg
ss
pop
aaa
xchg
xor
mov
xlat
idiv
mov
xchg
mov
inc
in
fistl
popf
cmp
xchg
in
push
int3
mov
add
mov
cmpsb
adc
bound
jae
mov
add
inc
dec
fdivrs
jnp
mov
sar
and
bound
shr
in
pop
xor
test
iret
fdivl
fldt
xchg
or
inc
push
mov
xchg
dec
shr
cmp
ret
aaa
cmc
jg
mov
jge
inc
in
mov
out
or
cmpsl
addr16
inc
jl
decl
imul
inc
push
xor
cmp
orb
mov
jne
leave
xor
add
add
ficompl
adc
cwtl
leave
mov
and
inc
ja
in
faddl
push
mov
adc
lcall
xchg
orl
inc
mov
stc
add
xchg
sub
or
scas
fwait
test
lods
pop
outsb
shll
out
in
inc
add
or
push
xor
xchg
push
xchg
mov
es
cltd
push
and
in
gs
popl
pushf
xchg
std
xlat
jge
sub
xor
fldl
mov
and
inc
fucomi
in
nop
cs
add
mov
fnsave
dec
and
inc
cmpsl
imul
lret
enter
cmc
adc
pop
pop
adc
stc
xchg
push
adc
iret
into
mov
mov
xchg
sub
fidivs
enter
cmpl
mov
xchg
inc
jg
je
idivl
cwtl
int3
jns
push
mov
jl
dec
pop
cmp
fdivrl
out
mov
lahf
mov
popa
sub
js
fistl
test
movl
lret
add
ret
in
jmp
bound
fwait
cs
cmpsb
push
outsb
lss
mov
dec
xchg
test
shll
imul
push
jge
movsl
repz
dec
and
jl
pop
aaa
cltd
out
stc
and
sahf
lds
mov
cmc
mov
push
inc
test
pusha
cmp
jle
xchg
ds
jl
lret
dec
loope
pop
sbb
adc
sbb
mov
movsl
cmp
sarl
xchg
add
ret
mov
push
aaa
inc
cmp
jns
leave
inc
js
mov
mov
ret
add
in
cmc
insb
stos
enter
icebp
xor
icebp
sarb
push
mov
pop
fld
shr
xor
daa
push
jmp
sub
lahf
mov
xor
in
sbb
xor
test
cli
aaa
cmp
cmp
dec
mov
sub
addl
or
mull
dec
ds
push
aaa
push
push
inc
dec
sahf
sub
cmpsb
sub
mov
mov
cmp
push
cmp
sahf
push
mov
pusha
pop
icebp
mov
push
jns
mov
andb
push
cli
jp
cmpsb
mov
push
cmp
sarl
in
push
insb
and
loop
int
jb
or
add
push
and
in
mov
je
pop
mov
neg
xor
sub
lcall
mov
jl
push
xor
test
rclb
push
cmp
fiadds
inc
cmc
enter
xor
mov
sbb
dec
mov
test
adc
and
roll
lea
mov
jmp
adc
enter
sbb
push
cmp
sahf
adc
ljmp
and
cmp
sub
xchg
pop
shll
cmpsb
xchg
mov
mov
and
push
sub
dec
mov
or
popf
addr16
cwtl
ljmp
sbb
es
scas
or
outsl
in
adc
dec
ljmp
mov
xor
stos
push
push
lahf
jecxz
cmc
out
gs
xchg
sbb
adc
sbb
js
negb
nop
repz
adc
icebp
dec
pop
jle
jb
push
cmp
inc
xchg
outsb
jecxz
jae
mov
or
push
leave
inc
inc
inc
xor
mov
pusha
xchg
cltd
sbb
jle
mov
fisubrs
arpl
xlat
outsl
mov
cmp
sbb
stc
push
xor
cli
push
jb
or
iret
add
testl
inc
push
mov
clc
rcl
xor
cmp
adc
bound
mov
inc
aaa
sbbb
push
std
fsubs
ja
pop
iret
xchg
mov
cltd
xchg
stc
in
fwait
xlat
cltd
out
fs
aaa
sbb
mov
dec
sti
dec
or
arpl
insb
fistps
or
inc
out
inc
sbb
adc
call
gs
dec
fs
inc
mov
jg
popf
jne
xor
jbe
fldcw
mov
mov
add
subl
cmp
popf
xor
outsl
js
mov
aas
xchg
ds
cmp
out
jno
cmp
pop
xchg
ljmp
cwtl
pop
pushf
push
fcmovnb
xchg
sub
shrb
jne
cmpsl
test
outsl
rcl
mov
mov
add
pusha
adc
jns
lods
ftst
add
xorb
inc
push
cmp
adc
movb
push
fisubs
adc
mov
add
outsb
xor
js
inc
pop
jge
movsb
inc
je
cmpsb
jecxz
adc
js
lcall
jecxz
and
scas
addr16
andl
fs
rep
fdivrl
into
movsl
and
test
push
xchg
mov
shll
cmp
pop
mov
add
iret
cmpsb
repnz
xchg
leave
cmpsl
scas
cwtl
mov
add
popf
iret
data16
rolb
add
xor
sahf
stc
pop
and
test
sub
lock
loopne
icebp
stos
mov
sbb
mov
insb
or
adc
inc
sbb
xor
int
subb
pop
mov
pushf
pop
pop
enter
or
pusha
push
jmp
leave
mov
push
sti
mov
mov
mov
jmp
popf
jns
aam
jb
sub
ss
dec
mov
in
gs
xchg
pushf
add
mov
insb
add
loope
mov
aam
dec
inc
mov
adc
mov
test
testb
test
jecxz
inc
adc
int
ficompl
jb
push
sub
mov
nop
imul
and
cltd
cmc
nop
sbb
mov
xor
cli
push
repz
mov
mov
aam
push
es
repz
cmp
popf
mov
xchg
scas
push
add
mov
fdivr
mov
pop
or
or
sarb
aaa
add
sbbl
mov
movsl
sar
adc
out
loop
out
hlt
jle
inc
inc
xchg
mov
add
mov
add
pop
cltd
jl
or
dec
stc
das
popa
or
xchg
sbb
fidivrl
int
pop
imull
nop
jle
inc
sub
cmp
shll
cmp
xor
pop
xchg
mov
jp
repnz
jmp
jge
movsb
inc
ja
repz
mov
popa
rorb
pop
outsb
aas
push
pop
jmp
imul
jle
clc
adc
stos
fistpll
jno
mov
mov
loopne
mov
mov
xor
jo
and
imul
movl
pop
push
mov
jle
les
mov
mov
mov
and
xchg
movsb
jnp
cwtl
dec
cmpsl
mov
mov
or
imul
sarb
stc
inc
dec
jmp
cmp
lret
enter
loop
lcall
mov
push
lcall
test
out
das
xor
push
cmp
push
or
push
je
stos
fcom
pop
cmp
push
xor
cld
repz
pextrw
xchg
push
xor
jl
jg
pushf
cmp
push
lea
or
push
mov
push
les
adc
and
push
and
addr16
repnz
dec
mov
in
sbb
lods
loope
pop
add
pushf
xchg
mulb
jmp
fcmovb
and
sub
jnp
jge
mov
pop
lea
sub
aas
jo
mov
push
jno
mov
lock
adc
mov
sbb
in
dec
push
test
fisttps
ja
pop
mov
sbb
in
pop
insb
hlt
mov
imul
xlat
xlat
out
add
xchg
fadds
pop
push
pop
aaa
xchg
sbb
scas
mov
or
fmuls
lret
aad
es
mov
push
jbe
sbb
sub
ja
mov
cld
mov
inc
mov
pop
movsl
cmp
lds
stc
lods
sbb
popa
push
push
xchg
jnp
jbe
pop
jg
ficompl
mov
fildl
push
add
imul
push
ds
mov
es
testb
adc
mov
pop
fs
push
stos
inc
mov
mov
xor
push
faddl
out
jg
dec
pusha
mov
xchg
add
xorb
mov
jne
shl
iret
sbb
jb
scas
outsb
in
orl
jge
xor
or
aaa
mov
cli
inc
dec
insl
or
mov
shll
rcr
test
mov
test
call
ret
sub
aaa
nop
push
cmp
jbe
or
adc
and
mov
xor
push
nop
push
popf
int
subl
lock
cld
fdivs
pop
sbb
push
and
xor
loopnew
stos
cmp
ret
test
iret
jae
aas
jl
xor
push
mov
add
pop
in
mov
sub
addr16
pusha
stos
aas
mov
adc
xchg
int
lahf
xchg
mov
mov
mov
jge
sub
sarb
mov
push
dec
aad
aas
mov
or
sbb
adc
js
cmp
mov
bound
fstpt
pop
mov
shlb
push
gs
ror
mov
dec
fcomps
sub
push
add
pop
dec
sbb
cmpsl
jmp
mov
gs
scas
xor
push
lods
xor
push
pushf
orl
and
lcall
sub
xchg
and
js
lods
push
dec
nop
pop
subl
cmp
and
fnstcw
imul
add
dec
cld
lret
jnp
cmp
es
out
iret
cmp
imul
lock
hlt
sub
add
jl
mov
cmp
gs
dec
jno
scas
cmpsl
mov
xchg
test
inc
rorl
jns
js
xor
nop
or
movsb
xchg
repnz
cwtl
and
jo
ss
cmp
fs
xchg
ds
enter
jno
cmpsl
mov
repz
sub
fsubrl
jp
mov
sbbl
jge
xchg
sahf
inc
dec
pop
shrb
add
out
or
pop
xchg
xlat
ljmp
push
popa
subl
or
inc
jmp
jmp
mov
arpl
movsl
ljmp
mov
enter
jne
fisubrl
ficomps
lock
dec
movsb
in
mov
or
adc
jo
xor
jecxz
mov
push
inc
fdivr
lock
jb
mov
stos
jne
loope
test
pop
dec
jo
mov
pop
fwait
loopne
lsl
lock
call
sti
movsl
gs
out
hlt
pop
add
or
xchg
cmpsl
fidivrl
popf
out
rol
xor
imul
aad
pmaxub
lahf
push
int3
mov
pop
out
loope
fnsave
dec
stc
test
adc
sbb
xor
in
lahf
lret
push
push
pop
or
dec
mov
cld
repnz
and
imul
xchg
paddw
cmp
aas
pop
xchg
mov
jns
adc
jl
push
ret
call
pop
xor
aaa
jle
ss
add
test
or
pop
xchg
push
ja
jmp
sub
popa
mov
mov
mov
stos
xchg
adc
push
rcrl
adc
stos
ja
outsl
scas
mov
rclb
testb
cld
jp
dec
xchg
mov
pop
lret
loope
scas
lret
or
xor
push
shl
xor
xchg
jp
push
adcb
push
jmp
dec
dec
jnp
mov
ds
pop
add
loope
mov
lock
mov
out
mov
adc
sahf
adc
jecxz
repnz
mov
xchg
xorb
popa
mov
or
dec
or
jnp
sub
out
test
cmp
xchg
mov
or
jecxz
int
push
and
jge
add
pop
push
or
xor
leave
data16
pop
adc
int3
pop
std
cmp
and
jo
xor
sbb
xor
popf
xor
push
jle
pushf
shrb
inc
mov
je
push
lret
and
or
add
fisubl
push
inc
lea
and
mov
aas
jne
mov
mov
test
in
sub
imul
movl
cld
adc
std
pop
out
jno
icebp
stos
call
sub
rcll
cltd
cmp
fwait
mov
fsubrl
and
jp
add
cmp
daa
movsb
sbb
pop
mov
cmp
stc
xor
xchg
adc
outsb
add
pop
xchg
jo
je
js
arpl
ds
mov
mov
jle
xor
in
sbb
movsb
ds
ljmp
pushf
inc
cmp
xchg
lds
and
xor
sbb
jecxz
add
jge
lahf
mov
sub
es
arpl
loope
mov
cmpsb
mov
xchg
xchg
sub
fisubrs
ret
mov
inc
cwtl
int
pusha
inc
pop
cmp
lahf
mov
addr16
adc
mov
and
jae
ret
or
outsb
xchg
cmp
ret
jg
or
pop
inc
into
inc
arpl
lods
add
hlt
inc
stc
xchg
fs
push
lds
pop
jns
mov
mov
pop
mov
or
ficomps
sbb
loope
add
sub
lods
xchg
xchg
cs
push
data16
mov
loopnew
ret
inc
pop
fsts
test
jo
xchg
mov
xor
je
leave
mov
cltd
pop
bound
push
lahf
lahf
clc
cmp
sti
pop
sub
gs
stc
mov
sbbl
shl
pop
adc
shrl
popa
fsubs
movb
imull
jnp
cmp
lret
ljmp
cld
mov
pop
fmuls
jmp
sarl
repnz
pop
sbb
push
inc
push
mov
mov
outsl
xchg
gs
fsubrs
aam
sub
mov
sbb
adc
test
stc
cld
mov
lods
jle
lock
mov
fldcw
js
jbe
xchg
cmp
and
scas
jl
dec
mov
mov
inc
jno
aas
scas
sub
aad
pop
or
mov
mov
mov
add
ja
lcall
mov
jbe
ret
adc
and
xor
adc
ja
pop
pop
pop
negb
in
dec
inc
mov
xchg
jae,pt
mov
sbb
cmp
xchg
fisubl
and
sar
test
rcr
push
push
and
dec
fsts
xchg
cmp
mov
jp
in
jbe
stos
inc
aad
inc
bound
repz
pop
ss
mov
mov
mov
lcall
gs
push
cld
xor
aam
shl
mov
mov
jb
out
and
into
add
xor
xchg
loope
pop
lods
stos
xchg
pop
andl
pop
popf
dec
rorl
ljmp
mov
sbb
mov
xor
dec
lea
sbb
dec
adc
leave
or
fstl
mov
xor
fstpl
jmp
cltd
sarb
push
movsl
es
sbb
or
addr16
pop
sti
jbe
push
stos
push
sub
push
roll
add
pushf
push
cmc
shl
sbbl
and
popa
repnz
dec
or
lods
inc
enter
push
mov
inc
pop
shl
ds
loop
mov
pop
pop
test
icebp
into
and
and
push
je
int
push
outsl
fldpi
inc
sbb
push
xchg
arpl
in
int
inc
and
vmread
test
subb
and
into
sbbl
out
sbb
daa
cli
and
lahf
jmp
fs
sub
out
mov
push
xor
int3
cmpsl
hlt
jg
cmpsb
mov
push
out
dec
mov
lock
pop
cltd
gs
ja
enter
jo
cmc
rorl
stc
jecxz
outsb
ret
shrb
jg
add
jno
add
dec
adc
xor
pop
out
in
fwait
and
cmp
xchg
sbb
adc
addb
lods
mov
pushf
das
push
popf
lret
cwtl
bswap
push
jle
xor
push
mov
out
mov
inc
push
ja
popa
dec
jns
cmc
insl
lds
sub
xor
dec
add
jge
mov
pop
mov
cwtl
ss
adc
inc
int3
rorl
cmp
mov
testb
inc
mov
je
mov
xchg
out
inc
xor
imul
push
repnz
and
mov
mov
push
cmp
mov
outsb
fstps
jmp
movsl
jb
jge
inc
sahf
int
mov
dec
mov
lret
sub
dec
pop
xor
add
lahf
mov
inc
aaa
ds
inc
mov
fsubrl
loopne
sbb
jmp
lcall
aad
dec
jmp
jbe
xor
push
pop
lock
adc
loop
fldcw
in
or
jl
or
cmp
lret
cld
sarb
data16
inc
cmc
jae
fiadds
fwait
pop
sti
cmp
sub
lock
pop
push
loop
out
out
xor
shrb
ljmp
std
out
aam
xor
call
testl
pop
xor
scas
push
mov
jge
das
pop
sti
out
sub
or
or
xchg
xor
mov
test
jle
jne
adc
out
mov
cli
jl
xchg
push
outsl
and
popa
adc
imul
jnp
rorl
iret
aad
shrb
sbb
iret
enter
mov
add
add
vmulps
pop
lods
lret
and
scas
fbld
mov
adc
mov
and
call
test
icebp
adc
dec
jnp
or
jg
pop
jmp
mov
cli
loope
dec
sub
shrb
jp
xchg
das
fs
push
loop
pop
xchg
mov
cltd
inc
sub
sahf
flds
inc
pop
rol
and
std
ja
popa
gs
or
or
mov
push
cltd
xchg
push
jecxz
dec
loop
jne
sbb
enter
sbb
xor
pop
fidivs
lahf
mov
or
mov
push
pusha
pop
pop
xchg
int3
xlat
mov
adc
insb
enter
jge
lret
mov
mov
mov
aam
enter
std
loope
mov
stos
sti
test
jp
mov
xor
cwtl
sbb
es
push
add
mov
call
arpl
jno
jae
int3
pop
push
mov
sbb
inc
testl
cmp
pop
sub
sub
shr
push
loope
test
mov
dec
pop
addr16
outsl
iret
jne
add
jne
dec
mov
je
dec
add
or
sahf
add
xor
push
and
xchg
pop
pop
mov
jb
scas
push
add
imul
das
dec
push
add
loope
in
ja
pop
jg
or
xor
mov
popl
ss
sahf
in
mov
fisubrl
lods
xor
inc
pop
pop
pop
arpl
sbb
inc
in
xchg
bnd
and
mov
loop
lret
mov
xchg
jnp
mov
xor
adc
cmc
push
imul
mov
rorb
xor
inc
push
mov
fdivrs
sbb
cmc
aad
mov
rorl
sub
fs
jb
push
gs
das
jp
mov
adc
jecxz
js
xchg
push
outsb
push
jbe
and
repnz
cs
sub
jmp
or
jae
xchg
test
mov
push
xlat
xchg
aaa
rclb
lods
jg
pop
add
xchg
mov
push
add
lcall
jo
jns
fsubs
mov
iret
pop
arpl
adc
pop
popf
or
out
inc
pop
inc
xor
stc
lea
inc
dec
push
ficoml
cwtl
push
lcall
push
enter
sub
push
dec
neg
insb
stos
pop
sbb
xchg
clc
inc
sbb
and
push
jae
insb
push
adc
addl
je,pn
into
push
in
jg
enter
out
mov
andb
lcall
bound
push
mov
stos
xor
mov
rcll
sbb
les
sub
repnz
mov
mov
jns
jge
inc
and
shlb
or
and
sub
jl
repz
aas
jecxz
sbb
jb
add
imulb
jb
adc
loopne
lcall
or
mov
sbb
jmp
adc
sub
test
cwtl
ljmp
mov
loopne
jns
jl
cmp
popf
xor
aaa
mov
inc
mov
xor
movsb
jle
xor
adc
js
push
clc
push
mov
fucomi
push
insl
jp
test
cs
out
in
imul
mov
and
scas
dec
movsl
or
push
or
dec
pop
enter
xchg
mov
stos
or
mov
or
ss
push
es
jmp
out
outsl
inc
cmp
leave
fs
popa
out
cmpb
jno
mov
das
imul
popa
aad
jb
pop
roll
shr
fldl
inc
lcall
push
daa
jge
jg
popa
add
jne
imul
pop
xlat
push
mov
push
dec
addr16
lods
cmp
xor
rolb
sbb
adc
sahf
or
clc
unpcklps
pop
icebp
mov
cmp
push
fcmovne
andb
in
xchg
stc
jmp
call
adc
mov
push
push
ss
xlat
pop
xchg
sti
push
sub
pop
outsl
out
imul
icebp
aaa
or
mov
mov
xor
pop
pushf
and
jp
xor
pop
orl
fldenv
jnp
push
fcmovu
mov
jg
aad
sbb
fiadds
lock
int3
inc
dec
mov
pop
and
aaa
adc
and
sbb
mov
jne
cwtl
or
xchg
fbld
sti
fs
dec
mov
pop
pop
push
and
insl
test
jae
dec
jbe
xchg
lret
dec
and
add
das
mov
adc
icebp
int3
mov
aad
mov
dec
inc
int
ret
loope
or
sbbl
jae
loope
stc
pop
insl
fsubp
mov
das
addl
icebp
or
mov
lods
bound
or
inc
leave
lds
clc
mov
addr16
dec
stos
popa
fidivrs
inc
push
sub
cmpsl
and
loopne
mov
in
xchg
aas
sti
in
lock
ja
inc
jecxz
push
cld
add
adc
pop
xor
mov
out
xchg
or
push
inc
mov
insl
rcl
mov
sub
aam
mov
stos
movsl
sbb
movsb
cwtl
iret
in
sahf
push
nop
ret
out
xchg
ret
sub
cmp
or
adc
sub
jl
in
in
inc
push
pusha
inc
xor
push
add
jge
test
jo
pop
popf
imul
mov
add
jno
aas
cmc
stos
push
movsl
mov
mov
outsl
push
mov
repnz
pop
test
cmc
clc
dec
arpl
fstp
inc
jle
mov
enter
lea
inc
iret
inc
jno
push
daa
les
out
push
fnstenv
sbbb
pop
std
pop
sub
lret
repnz
push
fistps
rorl
loopne
sub
hlt
mov
sbb
mov
or
add
cmp
test
cwtl
dec
sub
incl
adc
iret
lods
loop
and
out
xchg
pop
aas
ja
call
pop
mov
sub
mov
mov
jns
les
movsb
inc
iret
jge
jno
cmpl
dec
imul
sbb
pop
out
jne
sbb
out
cmpsl
and
aaa
push
out
cmp
movb
out
mov
insb
out
dec
jge
or
fidivrl
stc
int3
push
fsubrl
inc
sahf
xor
ss
int
in
je
sti
es
in
cmp
mov
push
lds
or
cmp
es
clc
aas
dec
or
pop
pop
je
into
add
inc
iret
in
jle
ss
pop
addr16
fwait
leave
xchg
leave
or
or
jle
enter
scas
scas
lret
test
lods
sub
repz
loop
jno
icebp
jns
and
sbb
mov
inc
jno
in
lock
cmp
pop
xor
insb
xchg
call
push
movsl
repnz
sarl
xor
cltd
rorb
adc
add
hlt
in
inc
mov
mov
push
cmp
xchg
jbe
adc
addl
decl
leave
jl
fsubl
loope
dec
or
repz
dec
push
out
xchg
or
movb
hlt
add
mov
adc
and
out
sahf
mov
frstor
je
aaa
scas
in
add
cwtl
mov
jmp
out
repz
movsb
jmp
subb
cmp
int
les
imul
jne
mov
xor
jnp
xchg
icebp
popf
dec
sbb
sbb
mov
push
add
jle
sub
je
mov
add
jnp,pt
push
jecxz
xchg
cmc
mov
test
insb
int3
mov
ret
pop
aas
mov
outsb
mov
push
jmp
les
jne
int
loope
jl
int
and
cmp
mov
int
orl
jmp
push
sub
jecxz
cmp
and
dec
call
adc
fs
cmpb
jo
js
cmp
lret
cmc
sahf
mov
dec
imul
in
cwtl
or
repnz
push
jge
mov
das
mov
mov
in
icebp
ljmp
scas
in
es
fsubl
cs
popf
push
mov
adcb
sub
test
aad
rolb
push
fstpt
xor
sub
ja
sub
popa
push
rorb
cmc
and
psraw
push
bound
xchg
ss
jmp
jae
iret
sbb
out
dec
mov
ljmp
or
cmp
fs
pop
inc
in
mov
adc
jmp
sbbl
inc
arpl
test
daa
sbb
out
xor
xchg
ss
fstpl
inc
fdivrl
cmpsb
mov
mov
sbb
aam
inc
mov
pop
adc
dec
or
scas
sub
cmpsb
lock
mov
push
movsb
jecxz
sbb
cmp
pushf
enter
popa
xchg
jecxz
xchg
je
mov
inc
ret
jle
xor
or
arpl
xchg
cmp
icebp
and
fildll
rolb
or
pop
add
sub
mov
dec
aaa
fbstp
mov
cmp
or
ja
fisubrl
cmpsl
jle
cltd
or
push
rcl
dec
outsl
xchg
insb
cmp
mov
lods
inc
addl
sarb
xchg
and
mov
sbb
hlt
pop
dec
out
pop
arpl
outsl
xchg
sub
push
xor
jbe
add
xchg
mov
push
pop
mov
mov
cmp
sub
xchg
or
or
data16
add
aaa
dec
dec
outsl
sbbb
fcomi
sbb
push
les
xor
jb
test
xor
imul
push
cmp
sbb
cmpl
outsb
cs
fistl
mov
mov
inc
add
sahf
adc
fistpll
dec
rclb
dec
setne
inc
mov
out
loop
imul
mov
push
push
rclb
into
sbb
xchg
cld
ret
stc
data16
xchg
cmp
pop
ret
mov
sub
repnz
xchg
inc
mov
and
test
and
pushf
in
push
fsubrl
jo
xchg
sahf
cmp
leave
je
push
rcrl
push
je
addl
pop
mov
mov
mov
ret
dec
xchg
mov
mov
popa
ljmp
int
and
out
sbb
aas
enter
pop
jno
lods
and
dec
into
sbb
mov
cmc
fwait
xlat
fs
into
and
rclb
dec
fsubs
test
pop
push
loop
add
imul
add
or
xchg
mulb
push
inc
fsubr
and
pushf
mov
mov
cmpsl
add
push
pop
mov
stc
mov
adc
or
es
sub
or
and
xchg
sub
lea
mov
mov
out
xchg
cmc
push
jne
shll
dec
sub
in
bound
add
pop
cs
test
cs
ds
cmpsb
daa
movl
sub
mov
loopne
cld
add
push
pop
js
mov
inc
pop
lea
mov
test
mov
jmp
test
mov
cltd
inc
add
xchg
lods
repz
xchg
mov
xor
mov
mov
jmp
movsb
mov
leave
mov
jle
xchg
jg
jecxz
cmp
fsts
enter
mov
or
shlb
xchg
es
imul
adc
fmulp
sbb
sub
mov
test
fildl
divl
inc
frstor
mov
sub
and
mov
adc
repnz
jmp
imul
jno
push
and
mov
inc
aam
sbb
sbb
out
and
sbb
negl
push
ret
jmp
mov
push
xchg
cmp
mov
int3
push
lods
jo
sbb
fwait
push
icebp
jo
test
mov
not
pop
sub
andb
sub
mov
icebp
out
fcomps
roll
sti
jb
xchg
mov
js
pop
inc
lea
adc
add
iret
sub
jns
add
xchg
adcb
pop
stc
cld
lahf
xor
push
xor
dec
mov
lcall
sbb
out
xor
jmp
aam
loope
cli
inc
xchg
scas
or
fs
scas
jmp
fwait
mov
jnp
insb
out
xchg
test
inc
lods
adc
les
gs
cltd
pop
and
pop
stc
arpl
push
inc
xchg
pusha
mov
test
lock
add
loopne
adc
icebp
adc
xchg
jno
insl
enter
jg
xor
pop
mov
rcrl
scas
push
mov
mov
sub
fcom
sub
dec
and
xchg
pop
scas
xchg
pop
lret
jns
inc
imul
mov
sub
iret
pop
fidivrl
test
dec
sbb
mov
imul
iret
mov
testl
sbb
push
scas
cmpsl
rcrb
pop
jbe
cmp
sub
jns
mov
fs
scas
mov
sub
das
mov
and
add
pushf
loope
int
sbb
or
out
push
lret
jno
adc
and
mov
das
push
addb
cwtl
aaa
pop
pop
xor
leave
mov
push
jb
xchg
je
aam
lret
orb
ja
or
sub
mov
into
imull
or
cltd
jne
add
jmp
fwait
rclb
jl
imul
imul
js
scas
jbe
jmp
outsl
ja
inc
and
mov
add
mov
pop
iret
aaa
adc
in
push
ljmp
je
xchg
sbb
mov
xor
jno
outsb
dec
enter
pop
or
mov
dec
stos
push
sub
sbb
cwtl
xchg
js
js
das
mov
xor
or
stc
pop
sbb
jae
nop
jns
xlat
cmpsl
dec
add
into
loop
mov
jmp
sub
or
xchg
xchg
inc
lret
add
push
mov
mov
daa
xor
and
bound
or
movsl
stos
jae
or
and
inc
rcrl
pop
adc
mov
cmp
decl
jle
fnstsw
xchg
adc
cwtl
pop
dec
or
fdivrl
pushf
inc
mov
or
dec
cmp
sub
stos
mov
dec
push
mov
sub
or
sub
cltd
mov
lahf
xchg
sarl
sarl
stc
xchg
mov
imul
mov
sbb
inc
dec
dec
jb
pop
les
data16
jae
loope
fs
fs
mov
icebp
xchg
inc
pop
movsb
and
pop
fchs
adc
mov
mov
test
fisubl
mov
pop
pop
mov
mov
add
adc
aam
cmp
ja
cmpb
push
int
sbb
test
push
cmp
push
mov
gs
inc
adcl
add
imul
push
das
cltd
or
outsb
cmp
mov
enter
pushf
std
aad
into
cmp
sti
scas
push
cwtl
dec
mov
xchg
xorb
mov
cmc
push
popf
lcall
fidivrl
test
inc
jg
test
iret
inc
pop
pop
cmpl
push
mov
cltd
push
xor
cmpsl
jle
adc
lcall
sbb
lret
mov
pop
mov
xchg
inc
ja
add
sbb
mov
add
mov
int
mov
outsb
mov
in
stc
xor
pop
nop
or
sbb
insl
xor
int3
test
or
jbe
aad
and
mov
addr16
and
mov
stos
adc
pop
jno
push
xchg
int
xchg
cld
mov
aad
and
adc
fists
in
mov
mov
mov
mov
xchg
outsl
dec
mov
sahf
mov
jg
ss
jg
jmp
mov
fimull
xchg
cmp
stc
lret
and
enter
adc
jmp
xorb
or
cmpsl
mov
nop
and
xchg
or
add
lcall
cmp
dec
cwtl
add
inc
mov
rcll
orb
repz
mov
pop
enter
movsb
cmp
mov
xor
mov
and
cmp
mov
cmp
push
addr16
sti
and
inc
or
popa
and
aaa
in
js
test
insl
lds
gs
cmpsl
dec
pop
test
or
sbb
xchg
or
int3
lds
adc
lods
popf
mov
adc
push
imul
call
dec
je
or
lcall
rorl
or
stc
jg
inc
iret
lea
inc
aas
jns
in
cmc
sbb
insb
sbb
and
mov
mov
push
nop
jge
jge
imul
lahf
jge
cwtl
cmp
mov
dec
lret
or
and
in
les
je
add
imul
ljmp
lret
mov
add
add
sbb
inc
lods
icebp
sbb
and
stc
adc
aaa
or
pop
bound
daa
cld
rorb
enter
ja
and
lret
adc
sub
imul
cwtl
jg
arpl
das
adc
push
pushf
add
cwtl
adc
std
lahf
or
int
or
movsb
aas
movsl
stc
sub
push
xor
push
and
scas
mov
jmp
ss
lret
xchg
stc
imul
mov
cmp
pusha
adc
ret
inc
pop
jno
sbb
hlt
ljmp
in
in
fsub
ror
push
pop
inc
cmpsl
add
insl
pop
popa
xor
dec
jle
xor
aaa
dec
jo
out
cmp
arpl
adc
xor
add
stc
neg
mov
inc
cmp
lods
mov
mov
push
and
xorl
ss
cli
in
ret
push
mov
add
repz
xchg
fimull
daa
notb
push
pop
fs
in
out
mov
loop
xchg
dec
stc
rol
orb
or
sub
roll
sub
xor
icebp
jmp
add
fstps
xor
bound
mov
sub
int
pusha
push
lds
push
xor
mov
push
subl
and
sub
jne
push
repz
jg
cmp
data16
push
mov
ret
inc
cwtl
out
xor
mov
xor
jbe
mov
scas
jb
inc
inc
mov
pop
mov
pusha
retw
out
movsl
in
jbe
fcomip
and
lods
test
ffreep
xchg
popl
xor
in
lahf
adc
mov
repz
mov
inc
inc
sub
es
ja
sbbb
lret
pop
fisubl
mov
dec
push
mov
mov
mov
mov
push
jl
jmp
clc
dec
mov
xor
imul
shrl
clc
pop
push
je
insb
mov
js
sbb
inc
push
inc
cld
mov
push
test
loopne
mov
inc
sub
cmpl
mov
in
imul
fcomp
add
adc
stc
imul
iret
test
aam
repnz
jns
pop
adc
add
push
xor
sahf
add
dec
jmp
sub
sub
stos
xor
cwtl
push
ljmp
dec
mov
lahf
icebp
fs
xchg
xchg
fwait
pop
pop
mov
or
xor
stos
sub
idivl
mov
in
sbb
sti
popa
addr16
push
outsl
dec
mov
inc
stos
imul
or
lahf
or
xchg
jbe
fsub
rcrb
mov
adc
mov
lcall
push
mov
pop
repz
pop
iret
sbb
mov
add
mov
nop
js
mov
sbb
jbe
inc
pushf
pop
cmc
ret
push
push
scas
filds
mov
ja
inc
imul
mov
adc
insl
rolb
mov
gs
dec
out
lods
adc
mull
scas
fwait
cld
pop
inc
scas
jae
inc
push
add
cmp
das
or
js
pusha
sbb
jecxz
mov
test
pop
xchg
pop
mov
add
sbb
jg
je
mov
inc
iret
pop
adc
sub
daa
insl
fnstenv
lds
out
xchg
ret
cld
mov
jp
mov
add
repz
mov
pop
cmp
ret
stos
adc
or
in
dec
mov
imul
bound
clc
sbb
pop
sub
stc
sub
clc
lret
push
hlt
jle
into
inc
leave
add
js
not
arpl
mov
mov
mov
xor
sub
add
lea
push
dec
js
aad
mov
push
cmp
test
and
outsb
cs
xchg
mov
cmp
les
fs
sbb
roll
adc
add
mov
and
cs
push
pop
mul
fxch
jae
mov
cmp
clc
ret
cli
cmp
push
pop
mov
jle
mov
ljmp
xchg
mov
insb
repnz
lock
pop
sbb
adc
shl
roll
mov
mov
addl
pushf
std
idiv
leave
nop
addr16
repz
clc
repz
sbb
out
fimull
ret
fdivrs
jmp
addr16
arpl
repnz
xor
shrb
dec
mov
jp
orb
loop
dec
xor
ficompl
jnp
js
cmpsl
mov
and
hlt
data16
gs
in
lcall
jp
mov
mov
add
jmp
pop
add
mov
lret
sbbl
push
pop
xchg
call
out
xor
xchg
cld
xchg
jb
mov
gs
jg
pop
fdivl
dec
mov
in
and
jl
dec
xchg
add
out
adc
adc
cld
and
push
mov
push
adc
push
rcll
daa
sbb
add
test
hlt
fs
loop
scas
and
test
or
popa
cmp
out
insl
inc
icebp
loop
jmp
movsl
aas
repz
jp
push
ficompl
jo
mov
mov
mov
ret
and
sbb
mov
sarl
lds
fisttps
stos
cmp
test
lock
or
xor
push
or
inc
cmpsl
lahf
and
std
add
leave
mov
push
inc
push
adc
cmp
push
iret
add
je
or
inc
pop
dec
mov
mov
enter
mov
movsl
das
icebp
pop
testl
xlat
push
sbb
mov
push
push
adc
idivb
shrb
xchg
add
sub
sub
outsl
and
gs
pop
mov
mov
ficompl
sbb
out
pop
fs
inc
xor
test
add
fbstp
or
ret
cmp
arpl
jg
mov
lea
pop
mov
xor
icebp
repz
jnp
pop
inc
in
test
fnsetpm(287
out
jmp
sub
jg
ret
loope
sti
loop
xlat
adc
mov
lods
loop
sbb
int
push
rcrl
xchg
adc
fsqrt
dec
nop
out
stos
dec
call
push
sbb
cmp
inc
add
or
lahf
or
test
or
stc
pushf
xor
aad
nop
mov
fiaddl
mov
imull
cvtps2pi
cmp
push
lods
movsl
test
xchg
mov
mulb
xor
jb
sub
nop
jl
or
les
sysret
aaa
js
pop
sub
int
pusha
xor
jo
pop
mov
rcrb
lahf
sti
pop
or
push
xchg
mov
sub
mov
mov
xlat
xchg
xlat
xlat
aad
negl
mov
jl
inc
or
dec
lock
sbb
mov
das
mov
cmc
lds
shl
lret
leave
xchg
pusha
scas
jo
pop
pop
mov
inc
mov
ljmp
add
in
jecxz
inc
or
cwtl
and
fidivrs
roll
adc
xor
fadd
hlt
nop
out
je
sbb
sub
add
jg
rcrl
inc
insl
cli
xchg
sbb
pop
jno
pmulhw
xorl
xor
repnz
jae
add
fdiv
clc
mov
es
loope
mov
inc
inc
addr16
pop
add
pop
dec
jbe
lret
inc
jbe
sub
or
movsb
push
or
fildl
push
jmp
arpl
pop
jl
insl
sub
test
fbld
xchg
imull
sub
testb
shrb
pop
out
rorl
adc
enter
cli
and
mov
jo
xor
push
or
cwtl
xchg
jno
pop
adc
rol
clc
sub
mov
rol
pop
aas
jle
adc
dec
pop
imul
in
bound
repz
and
mov
xchg
faddl
shrb
and
cs
outsl
pop
fdivl
out
dec
aam
sub
cld
imul
leave
sbb
jae
push
sbb
sbb
cwtl
jmp
aam
push
outsb
sbb
std
mov
or
ss
decb
cld
addr16
shll
dec
in
push
es
lahf
in
sbb
stos
cmp
pop
pop
mov
clc
je
gs
or
js
mov
xor
fildll
mov
mov
neg
or
inc
movsl
test
popa
and
push
repnz
dec
js
pop
mov
sbb
mov
ja
mov
ja
sbb
cwtl
shll
or
cmpsl
lods
mov
jle
mov
pop
xchg
int
xchg
js
lods
loope
add
mov
pop
dec
pop
cltd
cmpb
outsb
adc
cltd
mov
mov
add
jl
add
repnz
lret
xchg
mov
mov
into
lds
xor
addb
cld
in
stos
xchg
stos
cmp
xor
cmp
jno
push
les
lea
add
and
mov
mov
cmp
data16
std
in
xor
cmpsb
pusha
es
cmpsl
in
sarb
scas
decb
jmp
mov
push
push
jp
dec
in
movsb
lea
ljmp
out
push
cmp
js
jge
mov
iret
lahf
test
into
xor
xchg
mov
push
mov
aaa
es
ljmp
cmpsb
xor
outsb
add
push
lahf
insl
cmc
mov
out
lds
inc
xchg
mov
lret
jo
pop
adc
jne
cld
int3
xchg
mov
dec
xchg
in
mov
fsub
jl
mov
adc
test
adc
and
sarl
mov
mov
sub
xorb
add
jl
sub
out
mov
loope
icebp
bound
add
jp
xchg
out
sub
in
addr16
test
jae
mov
in
cwtl
lock
je
out
xor
mov
xor
sbb
dec
rol
push
add
adc
push
call
jl
cmpsl
lock
pop
add
inc
dec
or
cmp
mov
sbb
fincstp
pop
or
jecxz
add
das
push
mov
jo
mov
pushf
jge
mov
jne
pop
jmp
insl
sbb
jg
pop
pop
sbb
mov
jge
cld
push
mov
or
mov
hlt
pop
mov
jb
fisttpll
das
scas
sgdtl
repz
sbb
imul
imul
or
daa
in
leave
icebp
or
mov
xchg
mov
jbe
or
inc
inc
jns
xchg
sub
repz
pop
cmpsb
pushf
xchg
leave
cmpsl
loope
std
mov
imul
aam
insb
push
popw
rcl
cmpsl
stos
xor
add
jl
adc
and
clc
push
stc
and
fs
push
sbb
ds
ret
shll
lods
xchg
das
jg
mov
loopne
aam
xor
cltd
push
lock
ds
ret
cmpsl
mov
lcall
cmp
sub
insb
clc
jge
pusha
imul
imulb
mov
dec
clc
mov
fcomps
in
xlat
lods
imul
in
xor
push
pop
jne
aas
imulb
mov
inc
cmp
inc
xor
repz
in
shrl
addr16
loope
adc
test
sub
pop
mov
iret
sub
push
mov
fwait
mov
incb
orl
fs
stos
xor
adcl
decl
adc
xchg
rorl
sbb
imul
push
dec
mov
subb
arpl
push
add
aad
sbb
or
cli
add
jns,pn
jno
cmp
adc
or
sub
lret
leave
gs
fiadds
imul
fidivs
sub
ret
and
cmp
inc
xor
add
aad
imul
inc
movsl
xchg
or
or
shll
or
cmp
ljmp
aam
fldenv
and
jmp
dec
movsb
sahf
decl
imul
jo
or
xchg
inc
or
xchg
testl
pop
rcrl
lcall
jmp
and
insb
mov
loop
adc
mov
add
out
neg
add
adc
int3
push
sbb
sub
jl
inc
js
and
dec
out
mov
rorb
out
mov
cmc
mov
into
shlb
push
mov
mov
mov
fistps
test
mov
repnz
sti
filds
jg
loopne
mov
mov
mov
leave
jb
les
push
jae
je
jo
filds
lea
add
mov
jno
inc
jo
mov
push
add
xor
shr
xchg
mov
xchg
and
xchg
shrl
mov
movhps
cmp
std
cli
mov
push
mov
mov
push
jb
pop
mov
lahf
pop
popa
outsb
leave
cmp
out
mov
and
sub
jne
ret
in
in
cmp
mull
push
shrl
add
xchg
pop
mov
dec
mov
scas
sbb
divb
sbb
insb
sti
popf
out
js
mov
jb
cltd
cmpsb
mov
jno
in
xchg
out
out
das
inc
ret
cmp
fisttps
sbb
xchg
jg
jns
cld
std
outsb
jb
repnz
in
loop
lret
push
fcmovnu
inc
add
fildll
xor
pop
push
mov
cmp
out
push
cmp
mov
jecxz
orb
adc
shrd
lret
fidivs
imul
popf
jo
adc
fstpl
mov
mov
sub
mov
pop
push
scas
or
jbe
cmpsl
mov
outsb
xor
mov
cmpsb
xor
popa
push
and
in
sbb
outsl
pop
gs
pop
sbb
xor
sub
mov
mov
fst
fwait
inc
dec
lret
and
dec
mov
into
inc
std
jg
enter
adc
inc
xchg
in
lahf
push
pop
pushf
outsl
jns
lret
mov
insb
jnp
cmp
xbeginw
xor
leave
cltd
ja
dec
std
push
lods
sar
lahf
jp
call
add
int3
or
lock
mov
bound
adc
call
sbb
stc
cmp
leave
mov
addl
dec
mov
aaa
hlt
call
out
adc
cli
outsl
cltd
psubusb
jecxz
xchg
test
pop
lret
jns
cld
pushf
push
inc
pusha
dec
iret
sahf
testl
aam
nop
xor
movsl
cmp
pop
mov
inc
iret
cli
pop
popf
pop
dec
push
mov
out
mov
es
push
out
mov
and
pop
imul
std
cld
cli
leave
cmp
int
sbb
js
inc
lahf
aaa
add
dec
addr16
cs
lret
subl
adc
mov
mov
fists
jae
pop
adc
push
push
adc
xchg
pushf
push
icebp
bound
or
out
cmpsl
dec
mov
sub
or
add
lods
pop
dec
xchg
dec
mov
dec
push
inc
xor
jl
mov
mov
cmpsl
pop
push
hlt
sbb
mov
and
pop
xchg
in
mov
aam
aas
imul
sbb
lret
mov
push
jb
mov
mov
dec
rcrb
inc
push
scas
ds
mov
les
adc
adc
xchg
cwtl
mov
dec
lahf
mov
sub
adcb
adc
inc
imul
sbb
add
scas
sbb
lds
rolb
sub
mov
or
gs
je
rcrb
xchg
cli
push
jmp
push
xchg
dec
sub
ds
data16
and
loopne
mov
cmp
sub
imul
pop
add
adc
push
pop
je
aam
fwait
push
sub
mov
arpl
inc
xor
mov
repnz
xor
inc
xor
std
mov
dec
pop
jmp
mov
and
pop
add
sti
scas
popf
pop
out
in
stc
push
mov
mulb
xor
sbb
jae
notl
iret
inc
out
pusha
push
cmp
fisubrl
cmp
cli
mov
mov
dec
dec
or
je
sti
je
clc
add
faddp
icebp
adc
add
je
lods
fsubs
das
test
add
aas
roll
xchg
test
sbb
loop
xor
cltd
xor
jg
xchg
cmp
loope
cltd
stos
and
ds
sbb
pusha
ljmp
add
pop
mov
and
jmp
add
popa
and
jle
in
test
pop
dec
out
shll
xorl
ret
dec
mov
repz
inc
mov
jecxz
dec
fwait
cmp
inc
push
sahf
or
int3
xor
icebp
adc
cmp
imul
int3
push
notb
jg
fs
push
out
pop
adc
sbb
dec
lock
iret
add
ljmp
push
data16
sbb
xchg
mov
jecxz
mov
lds
and
stos
adc
imul
mov
jns
push
pop
test
cld
jnp
iret
fwait
jnp
movsb
xchg
cmp
jne
imul
out
int3
xchg
lcall
jnp
aas
in
push
push
xor
insb
arpl
xor
jecxz
sbb
cs
lret
cmp
or
neg
inc
mov
jg
jnp
fwait
or
je
push
dec
push
lock
sub
ss
movsb
cmp
xor
in
cmpsb
mov
enter
decl
sbb
daa
insb
dec
fwait
lret
sbb
movsb
add
repz
xchg
ret
aaa
or
fdivrp
inc
sub
xor
sbb
mov
xchg
push
jmp
push
lods
push
cmpsl
fs
inc
jns
push
xchg
dec
xor
stos
aas
out
int3
or
mov
xor
nop
push
xor
xchg
mov
daa
inc
adc
dec
adc
shl
popf
out
es
sub
push
jg
test
movsb
sub
mov
stos
imul
adc
cmp
adc
stc
addr16
pop
fs
adc
xchg
push
adc
mov
daa
das
fsubs
dec
jns
mov
xor
jecxz
or
sub
xchg
mov
mov
into
xorl
add
aad
divl
pop
jne,pn
mov
lret
mov
add
callw
insl
inc
xor
mov
arpl
loopne
cli
mov
add
pop
xchg
lret
out
pop
and
xchg
outsl
sub
and
lret
cmp
sbb
push
ror
mov
inc
cmp
and
push
fwait
mov
or
shrb
test
aas
add
int
xor
sub
in
and
or
pop
call
xorb
dec
imul
pop
pop
sbb
jl
dec
sub
shlb
unpckhps
push
scas
sub
fisubs
in
fsub
lods
add
lahf
fiadds
push
mov
es
int3
mov
icebp
inc
adcb
fwait
cmp
xor
xchg
cmp
sbb
jns
lds
int3
jne
push
pop
and
cwtl
push
pushl
cmp
push
push
dec
pop
mov
pop
repz
fcoml
jnp
and
mov
ret
mov
or
mov
xlat
xchg
fistpl
and
les
xor
add
movsl
cmpsb
cltd
inc
in
inc
push
lahf
or
sbb
sbb
pushf
rcll
adc
jmp
jl
xchg
test
adc
or
pop
test
cwtl
push
imul
or
mov
pop
mov
mov
call
mov
xchg
int3
jmp
and
cmp
lahf
mov
ja
inc
or
mov
cmp
push
inc
mov
aaa
mov
decl
lods
lret
int3
nop
jg
mov
and
xchg
pop
decl
add
mov
daa
mov
jl
jns
mov
lds
test
add
lcall
stos
popf
std
bnd
das
lods
lret
add
xchg
arpl
in
sbb
lcall
add
or
test
pop
ficomps
mov
bnd
push
sbb
enter
mov
jle
popa
xor
scas
aad
fcoml
mov
sub
dec
mov
mov
int3
or
inc
ret
stos
xchg
sub
sub
cmp
dec
add
in
inc
pop
xor
out
fbstp
push
and
cmpsl
dec
or
or
imul
fmulp
or
leave
inc
push
or
jg
movsl
or
out
inc
ljmp
lcall
pushf
lret
sub
shl
iret
mov
push
cmp
jne
add
das
xor
dec
std
jo
dec
add
mov
push
push
insb
push
loop
cmc
mov
divl
rcll
cs
inc
pusha
ja
lahf
xchg
add
jbe
lods
pop
enter
inc
and
or
ljmp
outsb
xchg
xchg
repz
in
and
mov
or
mov
lds
jbe
sbb
push
nop
pop
out
leave
adc
sub
adc
pop
rcl
popf
scas
mov
lcall
add
dec
mov
js
cmpsb
dec
and
fstl
and
mov
or
xchg
repnz
sub
ja
adc
nop
or
jno
lahf
and
out
or
dec
sarl
cmpsl
pop
and
mov
test
push
loop
cmp
fwait
push
inc
mov
and
pop
stc
iret
add
xchg
mov
inc
jmp
fildll
icebp
sar
dec
scas
cmc
dec
sbb
sbb
cmp
jb
jl
pop
mov
mov
nop
fcoms
int3
push
aad
rcrl
xchg
loope
push
sub
adc
into
dec
into
mov
cld
mov
pop
nop
clc
jb
pop
pop
bound
push
sub
fucom
push
mov
sbb
loopne
fcomi
cltd
ljmp
fisubs
pop
cwtl
xor
in
sbb
aaa
sub
stos
dec
stc
leave
dec
or
mov
dec
push
stos
mov
lock
cmp
ljmp
in
je,pn
sub
or
sub
es
jge
pop
cwtl
hlt
cld
sub
add
push
push
xchg
andb
add
and
jne
xor
dec
popa
scas
sub
mov
push
fcompl
sub
mov
cwtl
jo
imul
nop
decl
dec
xor
mov
jb
add
cmp
mov
cmp
dec
aam
dec
dec
in
push
and
inc
aam
scas
jb,pn
mov
dec
mov
je
aas
or
mov
mov
leave
ljmp
popf
sub
mov
push
in
mov
adc
sub
in
push
mov
sbb
mov
pop
sub
loope
leave
aas
mov
les
jmp
dec
adc
mov
mov
loopne
sahf
clc
adcb
fcoml
pop
cmp
mov
xchg
imul
enter
mov
fcompl
int3
testl
xlat
fwait
subl
mov
push
test
push
fcomps
jmp
int3
les
jb
lret
movl
lods
add
and
inc
xchg
in
mov
inc
aas
cwtl
xchg
decl
or
xor
lock
and
mov
enter
pop
fdivrs
mov
xchg
movsl
js
pop
add
inc
mov
sub
mov
in
push
pop
mov
out
int3
fstpl
xor
imul
adc
les
push
repz
push
mov
iret
sahf
std
idivb
cmpsw
ds
fadds
mov
adc
jne
sub
cmc
js
es
ret
and
fs
jle
rorl
enter
inc
sbbb
jns
in
arpl
fnsave
push
jmp
sub
cld
daa
lds
outsb
adc
into
stc
jbe
test
mov
imul
dec
jne
cmc
and
mov
dec
adc
mov
mov
jl
sub
cmp
flds
sub
cld
roll
mov
sub
mov
mov
dec
xor
in
jne
sbb
push
adc
movsl
gs
ljmp
fs
call
sbb
data16
out
clc
xchg
iret
and
dec
je
jmp
xor
test
inc
ds
sub
sbbl
xchg
out
dec
mov
sub
movsl
cmp
jbe
add
push
and
mov
pushf
or
enter
sub
lcall
adc
inc
das
push
jns
fistpll
push
loop
xchg
inc
mov
outsb
adc
or
mov
mov
pop
lds
clc
cmp
es
and
loop
mov
and
aaa
and
inc
jp
es
cmp
lcall
aad
pop
pop
xor
sub
mov
mov
rol
cmp
icebp
gs
into
out
xchg
pop
sbb
outsl
dec
dec
push
mov
sub
mov
je
call
popa
mov
fisttpll
add
nop
test
and
and
lea
jo
pop
mov
popa
mov
gs
out
inc
rolb
loopne
lods
jae
cmp
movsl
jb
lret
fidivrl
test
sbb
notb
push
jae
sbb
sub
adc
insl
or
sti
mov
push
bound
lock
sub
push
and
adc
pusha
inc
mov
or
insl
aaa
sbb
pop
xor
xor
mov
js
sub
adc
cwtl
mov
cmp
dec
cltd
push
out
inc
aam
dec
jg
sub
fistps
inc
xor
in
arpl
mov
mov
jae
mov
andb
enter
push
lock
rcrb
fsts
shl
push
mov
addr16
adc
xor
pop
push
pop
xchg
inc
bound
mov
into
insl
inc
test
sbb
std
cld
jnp
xchg
movsl
call
aas
adc
leave
and
setns
daa
cld
cmp
xor
push
lock
int3
cltd
or
xor
dec
xchg
fstpt
adc
add
enter
out
ds
lea
ljmp
or
xchg
dec
pusha
movsb
testl
add
test
push
pop
rcll
push
lods
popf
jae
mov
insb
xchg
xor
movl
in
mov
push
dec
in
pusha
or
push
mov
adc
and
pop
pop
and
sub
cmp
enter
push
lahf
sbb
inc
cmp
xchg
or
xor
inc
lret
cmp
fs
mov
aaa
jg
scas
jnp
sub
cmp
sbb
addr16
loopne
adc
cmpsl
pop
add
cltd
frstor
stos
mov
sub
sbb
sub
xchg
jl
or
sti
rolb
lret
push
jmp
lock
xchg
adc
shlb
into
pop
ja
push
lea
es
push
pop
jle
int
arpl
cmc
cmp
inc
add
les
lcall
sbb
movsb
dec
enter
orb
sub
jmp
popf
dec
and
dec
xchg
iret
add
outsb
lahf
sahf
test
jmp
movsb
dec
bound
rorb
movsb
shll
sbb
rorl
ror
cltd
jno
fsubr
jmp
xor
push
xchg
add
xchg
call
icebp
jp
cld
pop
outsb
and
pop
std
mov
push
cmp
xor
jl
lea
xchg
mov
inc
mov
lea
out
pusha
insl
jp
ret
inc
popf
xchg
sub
sbb
daa
in
fidivrl
cmpsl
pop
into
jnp
and
inc
jb
inc
out
shlb
int
mov
sbb
shll
scas
mov
push
mov
sub
in
into
jae
iret
mov
jo
or
daa
sbb
insl
aam
mov
je
xor
hlt
loop
bound
cltd
sahf
pop
test
or
int3
xor
icebp
jnp
push
rorl
pop
xor
adc
and
lds
mov
pop
aaa
ljmp
mov
stos
lea
das
popa
jl
add
add
mov
mov
adc
mov
jl
mov
in
movb
mov
arpl
add
ficompl
or
xchg
or
pop
xor
push
cmp
mov
dec
fwait
pop
cmc
sub
fimull
insl
add
icebp
pushf
mov
pop
xor
out
lods
sbb
shll
aam
fldcw
jge
inc
dec
popf
cld
jecxz
adc
lahf
mov
sti
int3
cmp
loop
shr
lahf
scas
jp
mov
in
lods
dec
fidivs
sbb
fdivs
add
frstor
repz
dec
iret
leave
mov
dec
aas
cmp
xchg
sbb
jmp
xchg
in
mov
and
and
sbb
xchg
data16
in
xchg
out
hlt
hlt
es
daa
push
mov
jle
inc
pop
pusha
in
das
out
std
inc
mov
popf
cmp
aad
and
mov
enter
cwtl
fsts
cmp
lret
loop
lods
jmp
pop
jae
hlt
stos
mov
cmp
push
loop
add
decl
pop
arpl
hlt
push
in
inc
cwtl
mov
fcomip
push
cld
xor
sub
pop
mov
sti
inc
mov
push
mov
xchg
scas
push
inc
inc
cmp
mov
adcl
pop
push
sbb
orb
add
xchg
lods
in
lahf
mov
xor
jl
inc
stc
aam
push
repnz
mov
jp
inc
aam
or
cli
scas
fistps
xor
push
push
sub
mov
ffreep
mov
addr16
mov
add
ljmp
xor
sbb
add
sub
lcall
add
ja
jecxz
je
adc
js
lcall
hlt
xchg
ret
popf
js
dec
cmp
jl
aam
cmp
mov
int3
inc
mov
mov
mov
xchg
cmp
adc
adc
xor
ror
cwtl
loop
mov
pop
pop
pop
pop
ljmp
imul
out
mov
into
out
cmc
mov
sub
movsb
int3
add
daa
aaa
ljmp
push
jmp
add
shrl
lcall
incl
sbb
pop
dec
add
ss
dec
and
out
ficomps
repz
push
shrl
js
cmc
data16
cld
repz
dec
or
scas
jo
jb
negb
sub
test
adcl
test
jne
mov
loope
pop
xchg
sarl
push
in
movzwl
fbld
add
cs
inc
pop
xor
aam
push
sahf
sub
push
and
pushf
xchg
ret
dec
mov
cmpsl
cmp
fists
jne
fld
out
xchg
mov
sbb
sbb
xchg
and
pop
sub
iret
int3
mov
cmp
sub
lock
es
mov
pusha
call
lcall
dec
pop
andl
mov
add
mov
dec
inc
dec
idiv
jle
sub
jge
test
dec
lret
mov
mov
lcall
pop
sbb
jns
sub
mov
iret
call
sub
and
fbld
xor
pop
jecxz
xchg
movsl
inc
cmp
jp
adc
pushf
and
out
adc
in
jno
jnp
mov
jae
xchg
mov
or
push
pop
icebp
mov
adcl
mul
outsb
xor
sub
mov
stc
or
imul
rcrb
and
add
xor
pop
cli
movsl
sub
cmc
mov
or
inc
jg
gs
stos
dec
adc
mov
les
add
lret
mov
stc
cs
push
adc
push
sbbl
mov
mov
daa
sti
push
sub
fbld
outsb
pop
adc
dec
cmovg
add
aas
pop
mov
xor
jecxz
filds
clc
pop
lahf
cltd
dec
and
adc
hlt
outsb
mov
popa
inc
mov
dec
sbb
xor
cwtl
js
lret
test
sub
sbb
fisubrl
fmul
xchg
cmc
jnp
out
push
into
jbe
mov
lock
adc
bound
clc
pop
pop
shlb
aam
hlt
xor
or
je
xlat
pushf
daa
dec
in
fistpll
dec
shrl
mov
mov
xor
jae
insl
test
mov
push
mov
fwait
roll
xor
pusha
push
imul
cmp
out
sti
mov
int
jmp
in
lods
aad
movsb
imul
sbb
pop
es
add
leave
nop
loop
sar
pop
xchg
pop
ret
test
adc
pop
fcmovb
mov
pop
jno
aaa
bound
pop
imul
add
stc
fsubs
push
pusha
xchg
xchg
test
mov
jo
cld
or
sti
outsb
outsl
mov
aas
jecxz
or
std
outsl
cmpsl
add
dec
leave
mov
xor
push
das
arpl
clc
push
test
xchg
test
ret
es
cmp
inc
jge
ror
cli
sub
mov
cltd
roll
mov
jmp
adc
andb
outsb
shll
ss
sbb
mov
jnp
stos
repnz
ret
xor
add
hlt
inc
sbb
add
rorl
and
sub
sbb
cmpsb
sbb
iret
cmp
xchg
and
lret
lret
mov
mov
pop
jg
dec
sub
push
test
add
insl
jl
push
add
sbb
lds
out
xchg
jno
cwtl
inc
mov
repnz
mov
xchg
sahf
imul
jbe
in
jns
inc
sub
xchg
cwtl
mov
push
lret
add
mov
aas
fbld
xchg
xor
pop
mov
mov
ja
or
out
inc
sub
insl
pop
repz
pop
stos
daa
jns
movsb
fwait
repnz
pop
xchg
shr
push
push
iret
mov
int
imull
xor
scas
int3
cmp
es
ret
cld
jnp
push
jg
mov
notb
in
dec
sub
ja
fistps
cwtl
jg
or
jecxz
cmp
fmulp
dec
cmp
std
add
mov
mov
les
mov
int
jno
pop
leave
and
xor
sub
sbb
es
and
loopne
pop
and
dec
popf
fildl
xor
jle
cmp
pop
out
inc
push
xlat
fisttpl
outsl
pop
xlat
clc
dec
adc
add
int3
imul
rcr
sub
cwtl
pushf
sub
adc
and
dec
xchg
pop
cmp
cltd
jp
popa
inc
mov
ret
in
sub
das
inc
xchg
lret
sub
or
insb
stos
jns
pop
shrl
leave
insb
push
mov
mov
movsl
push
push
dec
or
adc
lahf
sbb
mov
lcall
repz
cwtl
outsl
dec
jmp
or
outsb
testl
sub
pop
enter
jle
dec
mov
ret
cmp
jb
dec
mov
and
mov
mov
push
bound
es
fmuls
in
les
dec
and
aaa
icebp
pop
jo
adc
sbb
out
pop
clc
jno
outsl
jnp
sub
add
inc
clc
std
jae
gs
or
sbb
sahf
or
xlat
adc
popf
in
aad
sbb
xchg
mov
popf
inc
xlat
jle
xchg
sbb
sub
and
outsl
mov
aas
fadds
dec
cli
loop
sahf
add
inc
cmp
dec
inc
push
xchg
fmuls
jbe
jb
lods
dec
test
jp
xorl
push
sub
dec
pop
fbld
cmp
negl
pop
cmp
incl
push
aam
adc
push
mov
xor
cld
push
call
push
jle
fwait
daa
adc
mov
jp
cmp
out
movsl
push
sti
xor
mov
push
mov
orl
push
fdivrp
push
sbb
cmp
xor
scas
sarl
sbbl
outsb
fnstsw
sub
push
icebp
mov
bound
push
inc
pop
push
add
xor
inc
sub
pop
test
jp
shlb
cmp
mov
inc
lea
int3
mov
sbb
add
jnp
rorl
call
std
xor
arpl
lock
ss
arpl
in
rolb
and
xchg
out
inc
cltd
mov
lcall
jmp
insb
leave
fs
aam
cmp
scas
xchg
mov
dec
sub
push
loop
mov
add
pop
imul
mov
cvttps2pi
stos
lock
pop
pusha
rol
inc
filds
cmp
jo
mov
ja
push
cmp
loop
pop
mov
cmp
idiv
cltd
in
popf
adc
sbb
je
xchg
cmp
add
cmp
mov
aas
call
mov
adc
lock
and
inc
push
pushf
movsl
pop
mov
sub
or
mov
je
into
je
sbb
pop
loop
jle
mov
dec
push
shrl
mov
dec
pop
stos
cli
pop
sbbb
daa
push
dec
mov
push
jp
repnz
outsl
outsl
testl
sbb
repnz
mov
dec
aaa
mov
dec
test
xchg
xchg
mov
push
cmc
test
jge
into
pop
sub
cmp
sti
push
scas
mov
mov
scas
or
lcall
les
mov
sbb
mov
cmpsb
cld
push
inc
int
mov
bound
mov
sarb
xchg
mov
inc
jo
test
jmp
aaa
or
xchg
xlat
pop
movsl
xor
filds
dec
inc
xor
jle
push
int3
fadds
out
shrl
daa
mov
sbb
mov
lods
dec
and
in
rcrl
mov
imul
adc
movsl
ljmp
lds
das
test
xor
imul
xor
in
pushf
subl
fiadds
dec
jns
pusha
mov
scas
xchg
fdivp
int3
push
sbb
inc
sub
mov
dec
sti
jge
sarb
in
inc
fisttpl
dec
sti
sahf
imul
push
lock
into
or
pop
pop
scas
pushf
scas
cmp
mov
repz
inc
mov
xor
push
clc
enter
aas
inc
xor
rorl
inc
sub
out
inc
inc
lock
sub
push
imul
std
push
in
std
push
pop
iret
sbb
inc
jp
repz
std
cltd
lods
sbb
add
outsb
inc
xorl
hlt
cmp
pop
lods
pop
scas
dec
popf
jnp
les
je
mov
aaa
add
push
gs
cltd
out
mov
fadds
cmpsb
xchg
lds
push
lret
fwait
push
jb
outsb
scas
xlat
leave
mov
and
imulb
jg
add
cmc
vpsllw
shlb
sbb
and
es
pop
testb
cmp
mov
mov
jmp
es
mov
mov
and
int3
sbb
pop
outsb
mov
fidivl
pop
into
pop
in
filds
inc
arpl
dec
sbb
push
out
jmp
push
cmp
rolb
loop
into
xchg
mov
pop
push
sub
ret
xchg
jb
mov
cmpb
xor
cmpsl
xor
add
fwait
iret
outsb
mov
mov
orl
fistpll
jl
aam
hlt
jecxz
sbb
icebp
testl
ds
sarl
sbb
push
insb
das
mov
data16
mov
pusha
adc
stos
mov
popa
out
fucomip
mov
dec
enter
push
lahf
adc
aaa
fs
fsubrl
fisttpll
gs
cmp
xchg
inc
aam
insb
ljmp
insb
mov
popa
mov
dec
fldcw
and
mov
rolb
adc
fdivrs
clc
xchg
adc
jne
and
jmp
hlt
and
push
ret
push
sub
ret
pop
jg,pn
insl
xchg
mov
and
sti
sbb
je
mov
lret
xchg
outsl
pop
jg
stos
cmp
add
mov
fcoms
test
bound
cmpsl
fdiv
sub
shr
into
xorb
ljmp
jmp
es
movsl
push
out
fdivl
iret
xchg
fimull
add
mov
dec
hlt
cwtl
pop
daa
dec
data16
in
notl
mov
andb
dec
dec
jo
fidivrl
aaa
mov
in
add
fsubr
orl
loope
mov
ret
das
les
inc
mov
fmul
outsb
sbb
test
dec
xor
mov
sub
arpl
mov
cmp
sbb
aaa
aaa
cmp
and
push
out
adc
jp
movsl
lea
mov
cmp
in
add
test
xor
jnp
icebp
nop
adc
call
and
rol
push
fsubs
mov
adc
push
mov
insl
push
mov
inc
sbb
test
jno
in
iret
stc
lahf
jl
cmp
stos
mov
mov
mov
mov
sub
mul
mov
xor
adc
dec
lahf
dec
lock
out
sbb
sub
pop
test
pop
pushf
movsb
mov
mov
jne
push
lcall
nop
stos
iret
scas
aam
add
es
pop
mov
sbb
or
adc
imul
fwait
mov
mov
rcll
rorl
mov
lea
scas
adc
aas
stc
adc
rep
mov
sub
in
jnp
cmpsb
mov
pop
imul
sbb
jnp
add
and
clc
adc
pop
inc
jae
jo
cmp
jo
leave
test
adc
nop
rol
mov
lea
xchg
js
stc
andl
jnp
add
xor
push
adc
xlat
ds
aam
das
xchg
jne
jge
outsb
cmp
pop
cmc
adc
push
xor
sahf
push
pop
xor
aad
cwtl
push
loope
outsl
push
pop
sti
call
imul
sub
lock
jmp
clc
jno
mov
pop
insl
jns
mov
mov
stc
pop
mov
xor
xor
hlt
ret
pop
pop
jae
inc
dec
mov
pop
and
mov
dec
lods
gs
jmp
pop
mov
inc
adc
jo
rorl
adc
loop
cld
jg
ljmp
aas
xor
sbb
std
cmp
pop
test
dec
dec
lds
gs
fisttps
cld
push
cmp
adc
cmp
mov
mov
jecxz
mov
leave
inc
mov
bound
cwtl
outsb
sub
jge
loop
test
aaa
loopne
mov
and
std
xlat
xchg
cltd
sahf
sub
xor
push
in
out
push
mov
fsub
pop
jg
mov
or
repnz
push
in
jmp
xlat
mov
jb
sbb
mov
mov
add
mov
outsl
mov
outsl
test
adc
sbb
bound
mov
mov
add
ljmp
stos
lods
and
loop
mov
cmp
in
xchg
push
lcall
rcr
push
jne
popa
test
mov
xchg
push
loope
mov
repz
or
xchg
insl
mov
in
xchg
push
repz
ret
sbb
add
dec
fwait
cwtl
mov
add
dec
movsl
cmp
fwait
push
fbld
xchg
xchg
int
call
inc
ss
jae
push
test
testb
push
sbb
lret
xchg
fisttpll
adc
nop
clc
aas
jl
mov
cmp
dec
insl
or
cmp
and
movsl
daa
movsb
xchg
iret
pop
dec
mov
dec
mov
lock
bound
adc
mov
dec
or
outsl
ja
push
ljmp
pop
mov
in
lds
mov
sub
push
mov
cmp
inc
ja
popa
mov
stos
mov
inc
cmpl
setnp
popa
nop
sub
jb
jge
in
add
xor
cli
sub
insl
je
aam
stos
inc
mov
pop
xchg
adc
imul
out
test
ljmp
leave
test
movq
loope
mov
loopne
jecxz
movsl
shl
outsl
in
mov
jae
call
mov
loop
mov
pop
pushl
sbb
mov
mov
and
or
loop
loop
out
xor
incl
sub
pushf
das
inc
std
inc
jns
test
inc
sbb
push
cmc
aam
in
flds
sahf
cmc
xchg
push
ss
push
lret
ficoml
aam
pop
dec
fdivs
sahf
inc
jno
jne
add
test
out
adc
xchg
fimuls
popf
ss
test
lea
decl
test
and
pop
dec
cmp
pop
jge
ret
dec
dec
into
addb
adcb
cmp
pop
sbb
ljmp
pusha
sub
cmp
test
sub
or
call
cmp
lcall
jp
xchg
and
test
mov
add
and
dec
pop
xor
push
cli
push
xchg
mov
out
jns
jno
aas
enter
rolb
xchg
jmp
sbb
ss
in
das
mov
adc
jl
xchg
imul
test
xor
lret
xor
shlb
jle
sti
xchg
xchg
out
mov
cwtl
sub
pop
mov
pop
js
xlat
mov
mov
jno
sbb
mov
test
into
iret
cmp
cld
test
cmpsl
mov
mov
push
push
fwait
cs
dec
int
pop
outsl
in
xchg
ja
sbb
mov
nop
inc
rolb
push
and
push
test
popf
adc
add
mov
out
sub
insb
bound
out
lret
pushl
ret
cmp
loope,pn
stos
inc
xor
xchg
mov
cwtl
adc
or
sub
push
lea
jne
nop
pop
mov
dec
xlat
std
jbe
imul
dec
bound
sbb
or
ror
loopne
ret
into
loope
das
mov
or
fwait
mov
jecxz
mov
or
out
mov
loopne
subl
inc
imul
in
loopne
es
imul
or
pop
scas
mov
jg
push
pop
repz
mov
jge
je
adc
dec
scas
leavew
fistps
dec
aas
fsubs
sbb
cmc
xchg
cmp
xor
adc
ja
insl
addr16
out
mov
fsubrs
xor
adc
icebp
mov
cmp
ss
push
push
xor
in
mov
scas
repz
sbb
push
out
es
test
adc
jle
rclb
fwait
mov
nop
dec
jnp
jmp
inc
inc
sub
pop
sub
lahf
movhlps
in
rorb
push
sub
pushf
rorb
cltd
hlt
lds
push
mov
jmp
xor
jmp
add
dec
imulb
inc
adc
pop
sub
iret
daa
into
jbe
and
daa
mov
add
jl
and
jo
outsl
int
aas
jecxz
xchg
mov
push
dec
popf
inc
cmpsb
shl
or
dec
into
lds
mov
adc
out
jmp
mov
pop
cld
xor
fcmovnbe
push
inc
adc
mov
mov
mov
mov
je
aam
pop
or
loop
lods
xchg
les
mov
movsl
mov
ss
into
rorb
popa
add
pop
xchg
repnz
xor
cwtl
mov
adc
add
xchg
cmp
mov
stc
mov
repnz
mov
add
add
scas
mov
xchg
ficoms
mov
xchg
add
mov
pop
and
rol
std
es
jne
mov
gs
xor
gs
xlat
mov
call
mov
xchg
pusha
scas
dec
sahf
icebp
ja
cld
mov
inc
jp
fadds
imul
das
pop
cmpsl
std
push
fidivrs
dec
push
fwait
std
stc
dec
lea
dec
inc
inc
jae
into
mov
inc
pop
imul
pop
push
pop
dec
imull
repnz
or
push
ljmp
lea
pop
push
or
xor
adc
lret
cmpsl
xchg
dec
cmpsb
xor
push
and
lcall
mov
mov
out
pop
pop
mov
add
or
cmp
imul
adc
push
rcrb
and
pop
push
int
inc
cltd
jb
out
push
adc
mov
test
sbb
or
notl
xchg
sub
inc
in
sbb
hlt
mov
sub
push
hlt
int
or
aam
arpl
and
and
int3
frstor
sbb
imul
cmp
movsb
jl
jne
std
js
rolb
sbb
out
rorb
push
cld
mov
dec
out
jb
imul
lret
cli
xlat
arpl
mov
shr
ficomps
cmpsl
lahf
out
cltd
insb
sahf
adc
xor
dec
dec
sbb
sub
mov
lret
sub
mov
test
mov
shll
jb
nop
jl,pn
lret
xchg
roll
xchg
fnstsw
out
icebp
inc
or
fimull
mov
jmp
sub
sbb
shll
popa
xchg
dec
ja
leave
repnz
sti
es
pop
push
cmp
xchg
daa
fistpl
sub
sbb
test
cwtl
mov
or
insb
push
cmc
or
and
cmp
inc
call
xor
andl
sahf
int
or
cmp
or
or
push
scas
imul
mov
cwtl
mov
pop
mov
in
xor
xchg
cmc
jp
out
jge
cmp
sti
clc
and
dec
lods
sub
movsb
in
scas
shll
mov
adcb
xchg
icebp
push
pop
push
jb
adc
xchg
cmpsb
mov
pop
lea
outsb
pop
cmpsb
aam
aam
jg
lahf
fsubs
lods
jns
sbb
call
ja
cmc
fcoml
and
ljmp
into
ficomps
adc
lret
out
test
mov
in
scas
fcomi
push
stc
loopne
ficoms
adc
outsl
aam
cmp
mov
xchg
jmp
aas
jl
movsb
xchg
mov
jecxz
in
xchg
ss
in
cwtl
add
icebp
in
lock
dec
inc
bound
ljmp
jnp
sub
push
cmpl
cmp
ret
or
loopne
divb
js
jp
jl
outsb
inc
adc
pop
scas
imul
and
xlat
movsb
pop
aaa
fndisi(8087
leave
sbb
xchg
xor
mov
aaa
fildll
adc
pop
dec
icebp
repz
cli
imul
stc
out
push
les
add
je
add
lahf
sub
loope
aas
fstpt
test
scas
rcr
add
mov
fistl
mov
and
xor
fisttps
push
popa
cwtl
mov
and
popf
sub
sarl
rorl
fwait
sbb
add
dec
iret
ja
aas
inc
pop
xchg
popf
mov
xor
jp
sti
push
stc
pusha
pusha
push
stos
stos
pop
jns
das
shrl
aaa
pop
movb
xchg
inc
jmp
aam
mov
ficompl
imul
mov
xchg
mov
ss
pushf
or
dec
add
lods
inc
and
addr16
mov
push
mov
or
mov
xor
cmpsb
pop
lea
fistps
xchg
flds
into
or
test
cmp
addr16
sti
pop
fadds
pusha
test
mov
lahf
clc
rcrb
leave
add
inc
mov
sbb
jnp
mov
sbb
ja
mov
rclb
fsubl
jne
ret
fcmove
xchg
inc
nop
pop
test
xchg
xchg
movsl
add
dec
xor
mov
leave
mov
dec
mov
adc
mov
mov
push
xchg
add
rclb
mov
aaa
rclb
sub
cs
push
push
add
jg
pop
pop
push
fcmove
adc
cmp
imul
stos
out
pop
movsb
inc
cmpsb
pop
ja
xor
dec
test
imul
jge
outsb
dec
test
icebp
jmp
jnp
aaa
push
cmp
inc
lret
bound
add
or
adcb
and
fs
push
fldenv
cmpsb
adc
enter
pop
lahf
jb
sets
adcl
js
inc
sti
cld
push
and
push
inc
pusha
adc
in
clc
loope
enter
shl
lret
jns
or
xor
mov
rorb
cmp
mov
cltd
lods
or
sub
jle
push
push
cltd
push
xchg
mov
mov
inc
ljmp
dec
add
addb
sahf
sub
sbb
add
add
xor
insl
loopne
fwait
inc
in
lds
shl
ljmp
inc
fstpl
stos
std
inc
pushf
xlat
push
cmp
mov
ja
inc
adc
imull
ret
mov
sbb
bound
mov
lds
jo
je
nop
jno
jo
sub
push
jne
in
jg
call
jl
inc
sbb
fadds
adc
sbb
mov
xchg
jns
mov
ljmp
cld
jns
dec
or
loopne
or
jge
xchg
out
clc
sti
rorl
aaa
mov
dec
mov
mov
lea
xchg
popa
lcall
adc
loope
les
xchg
repz
pop
scas
cmp
or
das
cmp
addr16
lahf
xor
pop
std
sbb
in
test
or
lahf
outsb
out
adc
sahf
or
fwait
outsl
inc
arpl
leave
call
inc
mov
cli
repnz
popf
jo
sti
cwtl
cmp
push
aam
mov
ds
xchg
mov
cmpsl
into
scas
scas
jbe
daa
mov
sbb
movsb
test
adc
test
movsb
jl
loopne
jle
and
mov
adc
imul
hlt
insb
addr16
mov
or
mov
xchg
repz
je
mov
test
xchg
cli
lock
imul
jo
sbb
sbb
xchg
test
push
sub
mov
and
inc
pop
js
mov
cmp
xorb
sbb
dec
pop
cs
push
sub
cli
jnp
xchg
cmp
sahf
jne
stc
inc
outsb
dec
sbb
and
and
data16
pop
mov
mov
fwait
jno
movsl
je
enter
dec
add
js
scas
add
xchg
in
leave
rol
adc
mov
bswap
push
dec
in
add
push
sub
mov
sbb
aaa
cmp
mov
cli
or
xlat
enter
in
push
inc
into
pop
out
test
cmpsl
pop
or
movsl
imul
inc
xchg
cmpsl
cmp
insl
cmp
cmp
and
fcoml
add
daa
lret
mov
push
aas
icebp
pop
xchg
gs
sti
cmp
mov
mov
fldl
rcll
pop
dec
out
push
bound
add
sub
fcomp
jne
test
stos
mov
js
xor
xlat
jno
push
mov
xor
imul
in
cwtl
out
mov
sahf
aad
or
mov
lcall
leave
lods
outsl
xchg
push
dec
mov
icebp
leave
addb
fcoms
imul
ret
mov
lock
rorl
jecxz
fidivl
addr16
mov
int
lcall
rcrl
inc
add
popa
imulb
movsb
or
pusha
jo
push
adc
mov
call
es
and
inc
fsubr
xlat
jae
addr16
jp
fidivrl
sub
add
cmp
addb
cmc
mov
inc
rorl
ja
cmp
cmp
in
rorb
les
enter
xlat
sti
jnp
mov
sbb
subl
add
cs
mov
enter
out
xchg
stc
test
ds
popa
in
mov
cwtl
leave
push
repz
sub
mov
repz
dec
xchg
mov
xchg
xor
mov
jmp
cmpsb
mov
push
call
fcom
inc
stos
lods
fadd
pop
cmpsb
int3
mov
rcr
inc
loope
int3
cmpb
cmp
mov
js
mov
pop
sbb
xchg
jnp
mov
mov
mov
cli
push
jo
pop
addr16
movsb
jmp
daa
gs
xlat
add
or
push
roll
scas
sub
es
cmpsl
notb
das
xlat
js
mov
push
cmp
rol
cwtl
jge
in
sbb
adc
rep
cld
scas
sar
mov
cmp
pop
mov
or
adc
sub
aas
push
lds
lock
mov
sbb
sub
outsl
mov
je
mov
pop
mov
xchg
popf
or
mov
mov
jnp
insl
rolb
mov
pop
dec
jnp
push
lods
inc
lea
mov
dec
in
ret
mov
xchg
iret
inc
dec
mov
loopne
rcrl
int
sub
js
loop
xor
push
insb
jo
xchg
jle
mov
and
or
sbb
repnz
xor
xchg
test
push
mov
and
cmp
gs
movsb
jl
pop
das
stos
cmp
outsb
and
push
mov
fwait
pop
push
test
lcall
cmpsb
push
mov
ds
cmc
cmp
pop
adc
fwait
dec
inc
int3
repz
daa
push
les
jmp
ret
imul
clc
scas
addr16
or
cmc
and
push
push
fnsave
shll
out
xor
and
jp
and
cmp
into
arpl
stos
pop
jecxz
adc
insl
add
scas
pop
dec
rclb
mov
repnz
jmp
outsl
push
cld
dec
repnz
es
xor
push
std
mov
adc
mov
push
xor
jle
mov
pop
jecxz
mov
mov
in
push
xlat
adc
mov
leave
add
shl
or
mov
fiadds
pop
adc
adc
dec
rcrl
inc
cs
jg
arpl
loop
jmp
sub
pop
imul
lods
wbinvd
dec
jg
out
mov
jb
push
push
xchg
mov
bound
dec
jne
pop
adc
stos
outsb
add
adc
push
push
les
js
dec
jne
mov
loop
sahf
mov
mov
mov
cmp
out
cmpsl
sbb
aam
sub
xchg
loope,pn
jbe
cwtl
jge
jge
cwtl
rol
lcall
sti
mov
mov
pop
inc
push
jg
mov
psubusw
push
call
les
and
and
or
pop
xor
lret
lret
inc
scas
and
xchg
jo
cwtl
add
faddl
rorl
jecxz
sbb
addr16
dec
xor
out
dec
jle
cmpsl
inc
adc
rorl
fldl
mov
add
sub
data16
add
mov
stc
push
pushf
push
mov
out
push
inc
lahf
addr16
lcall
cmpsb
xchg
pushf
cltd
mov
pop
mov
pop
pop
jo
aas
jbe
popf
jno
pop
cs
sahf
enter
jbe
outsb
insl
rcll
sti
pop
or
es
xor
bound
stos
adc
test
inc
lcall
popf
leave
jl
cmp
add
sbb
out
mov
push
add
das
rcr
and
sarl
js
jo
mov
mov
jnp
int3
add
clc
push
cmc
stc
pusha
ljmp
outsl
xchg
sbb
cmp
arpl
xchg
sbb
jecxz
push
pusha
xor
mov
pop
jmp
pushl
cmp
xorb
scas
pop
mov
pusha
in
aas
push
jns
je
inc
mov
nop
pusha
cmc
leave
clc
sbb
sub
jl
movsb
push
adc
jo
and
adc
inc
pop
cmp
xchg
aaa
in
fiaddl
ficoml
lods
ret
pushf
sub
mov
les
pop
xchg
dec
pop
sub
lds
arpl
cld
out
int3
cmp
cmp
daa
add
imul
inc
inc
push
insl
push
das
js
or
and
fwait
scas
or
sbb
stc
movsb
inc
cltd
adc
fsts
adc
xor
ret
adc
ror
xchg
xchg
sub
gs
popa
adc
mov
and
mov
mov
push
pusha
jae
loope
fnstsw
sti
mov
xor
fsubrl
push
push
mov
adc
lret
mov
push
inc
dec
sbb
add
sub
sahf
hlt
fucom
push
and
cmp
sbbb
fnsave
or
adc
pop
jno
pop
xor
dec
mov
neg
push
cmp
sub
or
negb
push
pusha
enter
push
dec
adc
xchg
mov
mov
imul
nop
in
jno
maskmovq
mov
stos
xchg
mov
fistpl
push
pop
fimull
mov
dec
sti
xchg
push
jae
xchg
push
pop
in
ds
jns
fwait
aam
mov
mov
xor
dec
jp
cli
cmpsb
or
push
lds
mov
icebp
lds
push
jns
inc
adc
adc
add
push
hlt
mov
jns,pn
push
inc
push
pop
jle
loop
inc
push
mov
shll
mov
push
repnz
jg
mov
data16
lret
push
aas
sbb
add
jb
out
push
repz
sbb
adc
aam
dec
cmp
enter
cmpsb
ja
aaa
nop
push
les
enter
pushf
cmp
inc
xor
repnz
cmp
cli
fcom
adc
imul
mov
test
sub
push
jbe
test
xchg
xchg
dec
leave
negb
mov
jge
stos
lret
and
mov
lods
incb
jns
fdivl
lret
pmullw
mov
idiv
adc
cmp
cli
imul
ss
outsl
test
cwtl
adc
icebp
pop
cmp
fimull
or
mov
push
cmpsb
in
pop
incl
in
push
sbb
push
fisttpl
push
mov
sub
mov
outsl
nop
dec
xor
test
mov
aaa
mov
mov
sti
fdivrl
pushf
je
pop
testb
xchg
or
jmp
loope
cmp
stc
xor
or
or
frndint
sub
and
pop
sbb
or
cltd
sbb
in
lods
icebp
popa
insb
and
cs
xor
std
test
js
jno
loop
scas
and
shlb
movsb
dec
mov
jge
icebp
les
cwtl
loopne
jle
enter
push
push
pop
int3
repz
enter
and
dec
pusha
imul
fiaddl
adc
inc
mov
ss
sbb
or
mov
jb
mov
xchg
xchg
jecxz
or
das
add
ret
insb
xlat
insb
and
add
and
dec
xor
mov
xor
fstl
je
clc
sbb
cltd
adc
lret
comiss
in
ret
dec
xchg
push
icebp
push
arpl
or
mov
mov
sub
test
cmp
mov
test
ret
jae
mov
daa
jae
pop
leave
fnsave
dec
push
lock
jle
out
mov
cmp
lods
cmpsl
loopne
inc
clc
cmc
and
or
inc
cmp
pop
xor
rcrb
xchg
imul
js
imul
stc
mov
xorb
orl
sub
clc
pop
decb
inc
sbb
xor
push
mov
in
addr16
cmp
mov
cmpl
cmp
js
push
fsubrs
dec
xchg
popf
stc
pop
cmpb
push
popa
addr16
out
les
imul
test
cld
hlt
xor
xchg
mov
lods
pop
jle
mov
sub
add
ret
pop
gs
mov
cwtl
shlb
fdivs
shrl
ret
add
jbe
push
hlt
in
xor
xchg
sbb
jno
xlat
inc
mov
inc
testb
popf
popf
hlt
outsb
adc
sbb
jno,pn
adc
or
and
xor
cmp
hlt
jle
mov
insb
xchg
mov
and
and
add
fidivs
jmp
sbb
pop
mov
push
pop
mov
mov
inc
dec
lods
pop
xchg
inc
aam
loope
dec
loop
les
add
negb
and
aam
or
aam
push
cltd
fbstp
and
cld
xor
subl
in
pop
addl
fbld
loope
out
out
insb
inc
in
or
dec
sbb
es
and
imul
int
push
mov
sbb
push
mov
das
mov
mov
daa
loope
jg
in
in
jle
arpl
add
mov
inc
cld
arpl
repnz
push
test
mov
dec
cmpsl
pop
mov
pop
inc
clc
add
cmp
sbb
jns
fiaddl
in
cmp
cmpsb
ror
inc
mov
repz
stos
fmuls
pop
sbb
and
xchg
jnp
test
scas
xchg
movsb
xor
loopew
es
clc
jno
out
fimuls
fbstp
fwait
cmp
lds
lock
jo
push
mov
jp
ljmp
jmp
lock
mov
push
add
mov
ljmp
popa
sub
bound
push
mov
cmpsl
adc
mov
cmc
repz
mov
mov
movsl
sub
into
popa
inc
mov
movsb
mov
stos
inc
int
stc
sub
stos
in
pop
inc
add
or
jbe
mov
mov
daa
inc
sub
cld
sbb
mov
inc
testb
add
jae
in
mov
lods
fsubl
mov
lahf
sub
mov
lahf
shll
loopne
pop
call
lods
jnp
xor
sbbb
adc
mov
aas
nop
repnz
sbb
add
aam
and
outsb
jecxz
fisttpl
les
and
push
icebp
sahf
mov
pop
lds
adc
mov
into
rcrb
pushf
fidivrl
mov
or
loop
cwtl
dec
jle
rcl
push
push
sbb
and
mov
pusha
cmpsl
sbb
lock
lds
mov
push
stos
mov
sbb
push
stc
cmp
out
test
sbb
mov
hlt
fnstenv
add
idivl
mov
hlt
push
in
adc
dec
rcrl
int
lea
in
pop
or
mov
add
std
loope
leave
pop
adc
sub
and
aad
xor
out
sub
jl
shll
mov
cmp
data16
sahf
and
mov
ds
jmp
xchg
xchg
cltd
and
inc
lds
jg
adc
testb
ret
mov
inc
and
cmp
jg
icebp
cltd
cmp
pushf
gs
cmp
stos
adc
aaa
add
ret
loopne
or
mov
xchg
stos
pop
movsb
div
pop
sub
sti
push
push
in
xchg
test
push
push
sbb
pop
push
jne
push
inc
repnz
lret
in
stc
in
sbb
lds
add
xchg
rcrb
mov
rcrl
jne
cmp
inc
xchg
jbe
and
bound
repnz
fsubs
dec
inc
sbbl
test
cmp
mov
rclb
jbe
and
add
btc
out
add
ja
xchg
and
imul
in
adc
mov
and
xlat
sbb
pop
inc
jno
nopl
insb
xor
stc
out
mov
adc
jge
es
jns
nop
pop
mov
ja
xor
shrb
jecxz
lds
movsl
gs
xchg
xlat
or
adc
cmc
pop
in
sub
dec
xchg
xor
ss
idivb
mov
ja
rcrl
jg
mov
mov
dec
f2xm1
or
adc
fisubs
jae
cmp
cltd
or
rclb
or
lret
mov
fmull
pop
je
and
mov
sub
cmpsl
mov
lods
shr
or
loop
inc
xchg
stc
lods
mov
ja
mov
dec
xchg
xchg
sub
push
mov
lock
jnp
lods
fstl
cmp
sbb
in
mov
sub
sub
cmpb
imul
in
mov
dec
sub
mov
rorb
std
shl
mov
insl
dec
std
negb
mov
mov
cs
out
xor
into
jne
dec
inc
movsb
push
fimuls
ret
cwtl
js
inc
push
sub
call
xchg
lods
fwait
inc
ret
in
dec
jle
cwtl
pop
cmp
leave
int3
inc
pop
sti
stos
or
int3
jns
js
xor
stos
xchg
inc
sub
pusha
pop
aas
push
sbb
jmp
bound
xor
cmpsl
sub
sub
filds
push
sar
iret
ret
mov
push
push
inc
mov
ja
cmp
pushl
popf
shlb
rorl
cmc
lods
sub
xor
xor
mov
or
mov
and
rorb
in
adc
ret
shl
xchg
mov
aam
push
out
jno
ret
and
das
popf
sbb
fstl
aaa
js
xchg
out
outsb
lock
push
push
mov
test
pop
mov
inc
mov
sti
jp
imul
vpcmpeqw
pop
add
test
inc
int
pop
dec
aaa
pop
in
or
insl
jo
imul
jns
pop
xor
dec
int
addl
pop
fcmovnb
roll
std
push
and
sbb
iret
outsl
loope
push
sub
in
je
dec
scas
or
outsl
es
test
int
out
aas
adc
and
xchg
pop
pop
mov
repz
pusha
inc
pusha
cmp
mov
push
test
jbe
or
pop
insl
adcb
cld
jbe
arpl
jo
stos
xor
dec
sahf
cmp
mov
xor
outsb
js
xor
inc
push
mov
or
fmuls
aam
insb
xor
iret
dec
pop
cwtl
divps
sub
shlb
bound
jp
sti
inc
jb
or
dec
outsb
leave
sbb
adc
mov
test
mov
rclb
pop
jl
push
pop
rcll
ficomps
es
push
sub
fists
dec
stos
pop
fucompp
xchg
out
add
jne
mov
fadd
pop
adc
pop
inc
push
repnz
in
and
pop
sbb
cwtl
xor
jg
push
inc
mov
out
mov
aas
jle
aam
pop
adc
inc
jno
mov
mov
mov
stos
imul
in
cwtl
inc
shll
or
or
sub
sub
hlt
je
and
mov
sub
sub
idivl
popf
xchg
cmp
icebp
adc
jae
sbb
std
adc
je
add
and
dec
jmp
int
pop
dec
stos
shlb
dec
cmp
sub
fisttps
inc
es
nop
push
or
mov
scas
filds
mov
ret
push
sub
pop
les
jecxz
xchg
out
pushl
adcb
mov
mov
sub
mov
push
sbbb
loop
inc
lcall
test
ret
sub
adc
in
jno
pop
and
xor
jne
ret
xchg
sti
dec
lods
test
cs
clc
int
ljmp
popf
insl
mov
call
lods
pop
rcrl
gs
ljmp
sarl
loope
add
mov
in
add
mov
sub
sub
jne
pop
xor
push
or
outsb
fimuls
fs
and
jg
sub
sub
data16
les
or
loop
rcr
add
loope
test
mov
xor
popa
int
cmp
mov
and
mov
loop
pop
pop
stos
pushf
icebp
push
in
mov
xchg
lahf
pop
jno
movsb
in
imul
mov
mov
sahf
and
mov
push
pop
inc
inc
pop
je
ljmp
fists
xor
in
dec
out
cmpsb
inc
in
cmp
or
xor
sahf
push
pop
or
repz
lea
cmpsl
pop
cmpl
mov
mov
lock
adc
aaa
pop
aad
leave
rcrb
sbb
pop
lds
outsb
mov
cmp
mov
add
add
xor
push
mov
scas
inc
xchg
cmp
pop
xchg
jb
lret
stos
mov
pushl
push
mov
test
jae
ret
pop
inc
adc
lcall
and
push
std
adc
in
cmpl
pushf
fildll
pop
hlt
jns
and
scas
movd
inc
into
subl
xor
dec
out
icebp
ficomps
aas
sub
in
neg
dec
pop
mov
jo
ja
out
mov
sbb
mov
divb
mov
jae
scas
mov
jle
test
rcrl
push
addb
ret
pop
sbb
inc
adc
or
pop
xchg
cmp
daa
or
push
std
xchg
mov
cmp
lcall
sub
inc
add
jecxz
mov
push
mov
shl
ljmp
adc
aad
add
out
inc
ret
ret
scas
adc
xchg
sub
push
pop
jno
out
fldt
dec
sub
and
test
movsl
ja
out
je
mov
jne
inc
int3
push
or
push
pop
shll
test
mov
mov
pop
lcall
mov
jne
mov
ljmp
jecxz
mov
mov
test
adc
xchg
iret
or
movsb
sbb
ljmp
inc
sbb
pushf
clc
stc
pushf
xor
push
or
sub
inc
outsb
sub
in
outsl
in
and
test
test
cmc
call
movsl
rcl
mov
mov
repz
out
pop
cmc
rclb
adc
pop
ljmp
or
jl
and
dec
cs
adc
jg
jns
adc
cmp
out
inc
lret
pop
aaa
js
ds
cld
cltd
insl
ss
lcall
cs
cli
aad
pop
push
push
sbb
xchg
mov
push
popf
test
lock
xor
inc
sahf
pop
mov
fistps
xchg
repz
jmp
shll
push
mov
stc
jp
mov
sysret
xlat
mov
jmp
in
mov
mov
add
push
imul
xchg
ret
ja
iret
and
add
cmpsb
aad
popa
shll
pop
popf
push
shr
cmpsl
iret
xchg
dec
test
cmp
sbb
sti
mov
stc
inc
stc
and
adc
push
jae
scas
xor
fs
clc
mov
addr16
dec
andb
jns
lahf
iret
ss
sbb
push
cmp
sub
xchg
fldenv
ret
pop
inc
xlat
idivb
mov
add
xchg
je
ja
rorl
popa
adc
mov
pop
cli
mov
in
popf
imul
jnp
std
and
xchg
push
push
jo
pop
loopne
scas
out
add
add
or
mov
xchg
dec
pop
jl
fwait
mov
dec
cmc
cmp
sub
xchg
fisttpl
popl
xchg
pop
mov
imul
cld
jbe
insb
hlt
popa
cld
sub
inc
inc
imul
pop
mov
fwait
cli
mov
jle
inc
pushf
sahf
imul
add
xor
mov
push
and
mov
mov
sbb
dec
sub
or
cmp
adc
and
subb
push
dec
out
or
lcall
aad
call
movsl
cmp
mov
mov
sub
in
mov
sbb
jne
imul
push
loope
pop
pop
sbb
inc
movsb
mov
push
outsl
mov
push
push
lds
in
adc
divb
push
xchg
mov
mov
cmp
jo
sub
data16
cmp
pop
inc
jo
ret
xchg
dec
pop
fbld
push
cmpsb
lret
in
lahf
sub
adc
ret
arpl
bound
fs
inc
mov
icebp
aam
adc
dec
mov
les
stos
adc
pop
ret
adc
xor
inc
xchg
mov
in
ffree
ljmp
fstps
aaa
mov
add
les
xchg
cwtl
or
add
in
ja
xchg
mov
jl
mov
add
lret
lahf
inc
nop
cld
jge
adc
jecxz
jp
pop
in
test
test
mov
pop
cmp
mov
cld
das
xchg
mov
mov
in
add
fldl
pop
xchg
js
xor
in
jge
add
xchg
test
push
out
es
adc
push
out
inc
cli
stos
cmp
sub
sbb
in
fistps
push
mov
cmp
jg
ret
add
or
adcb
cwtl
jbe
dec
lcall
mov
xor
push
pop
mov
push
mov
ficompl
sub
jg
and
rolb
xchg
sbb
jbe
mov
mov
lea
mov
mov
mov
faddl
bound
jmp
stos
in
mov
cmp
fisttpl
push
pop
cmp
bnd
xor
daa
xlat
sub
cmp
xor
or
inc
sbb
xor
pushf
mov
adc
sahf
jno
repz
mov
les
pusha
insl
push
xorb
sub
sub
shll
ss
test
stos
push
ljmp
lock
cld
push
sub
xchg
sbb
xchg
loopne
aam
shll
shl
aad
add
ficoms
cmp
add
jg
push
mov
mov
adc
je
jne
rorb
jb
mov
scas
test
daa
add
dec
into
push
in
movsl
out
addr16
lock
enter
fisubrl
or
loopne
mov
xchg
xlat
outsb
xor
sbb
in
in
out
mov
add
ret
push
pop
mov
and
lock
cmpsb
pop
xor
adc
mov
fdivs
rcll
ds
mov
xor
sub
cltd
xchg
movsl
jp
add
sub
outsl
sub
adc
add
fdivs
leave
adc
dec
cmp
cmpsl
lea
das
in
aas
cmp
inc
push
sub
dec
cwtl
in
icebp
sub
cmc
lcall
mov
sar
mov
test
dec
push
and
jno
xchg
out
daa
pop
arpl
and
dec
cltd
scas
pop
cld
mov
add
fcompl
cli
push
scas
dec
adc
adc
cltd
pop
lods
dec
sub
inc
pop
xchg
sub
bound
repz
push
adc
sub
push
arpl
mov
mov
xchg
rorl
decb
pop
dec
inc
adc
cmp
xchg
in
inc
in
fmull
jle
xchg
out
incl
inc
loope
sbb
mov
fwait
mov
ss
or
pop
addr16
add
lock
sub
xor
or
add
scas
lds
cwtl
out
mov
mov
lret
movsb
and
icebp
jmp
inc
jo
insl
inc
das
inc
inc
fucom
mov
mov
or
ss
lds
clc
test
push
pop
leave
xchg
cwtl
cmp
pop
repz
lods
cli
xor
sbb
jno
sar
sbbb
or
jp
fdiv
mov
sub
dec
dec
imul
xchg
es
mov
out
mov
lahf
iret
out
lcall
push
rcrl
outsl
pop
adc
and
cld
xor
mov
ljmp
pushf
ret
inc
dec
and
mov
shlb
loope
in
adc
lds
add
loop
mov
mov
add
in
out
ja
fwait
in
adc
fs
add
dec
sub
dec
repnz
sbb
lahf
icebp
jge
fs
out
push
notl
push
pusha
fwait
lret
pushf
push
aad
into
or
adc
xor
enter
inc
stos
pop
fwait
pop
scas
xor
push
sbb
push
cmp
mov
je
sub
das
pop
mov
jns
mov
xchg
mov
lea
lret
adcl
cmpsb
sub
sub
fldl
xchg
mov
add
dec
movl
out
sub
outsb
loopne
lods
nop
add
push
jmp
fldt
push
in
add
inc
xchg
dec
and
jp
test
in
hlt
leave
fdivs
push
sub
fs
arpl
sarl
mov
fidivs
outsl
cmpsl
sbb
sbb
lahf
cmp
jae
fidivrs
or
ss
mov
push
sub
ret
lock
inc
sub
cld
mov
jnp
sahf
cmp
fadd
iret
jne
std
in
movsb
ret
mov
lods
sub
add
add
movsl
mov
xchg
add
pusha
add
je
sub
negb
in
insb
mov
outsl
fdivl
loopne
roll
pop
in
or
mov
mov
aas
sahf
std
xchg
pop
sub
call
and
jno
push
sub
add
test
adc
mov
rol
jbe
xorl
xor
mov
jns
jne
or
lcall
and
cld
mov
jg
inc
xor
ret
stc
mov
not
lret
and
cmp
or
ljmp
dec
push
loopne
cmpl
int
cwtl
push
adc
add
pmullw
popf
xchg
cli
mov
jl
leave
out
mov
iret
sub
out
stos
into
mov
repz
xchg
cld
addr16
out
mov
lock
gs
pop
lea
dec
lods
in
jnp
dec
pop
arpl
xor
fisttpll
add
lahf
out
dec
push
mov
mov
pusha
mov
loope
iret
dec
sub
repnz
xor
and
nop
ret
inc
adc
into
sub
dec
bound
mov
in
and
stos
xchg
and
jmp
add
fdivr
scas
nop
jo
out
cs
fimuls
push
into
xor
jg
inc
pop
push
sub
insb
pop
push
sub
mov
in
stos
fisttpl
fdivp
push
cmpsl
pop
mov
xchg
mov
or
prefetcht2
inc
and
clc
out
jne
jl
jle
lret
adc
jo
jns
lret
jl
dec
mov
jge
jl
mov
or
or
mov
subb
out
jmp
xchg
int3
pop
mov
loopne
loop
jl
gs
lods
repz
pop
dec
xchg
sbb
cwtl
mov
mov
adc
cmp
lock
dec
mov
insl
stos
adc
sbb
mov
add
rcr
adc
or
push
gs
lcall
mov
popa
add
or
fstl
aam
andl
xchg
enter
xchg
in
add
sbb
pop
sbb
std
and
roll
ja
lods
inc
xchg
repz
arpl
movsbl
in
ss
roll
xor
repnz
scas
sub
inc
mov
adc
popf
and
popf
push
popa
pop
add
xor
xchg
jo
mov
inc
adc
rcl
mov
lret
jb
insb
or
add
cmp
shlb
xchg
pop
xchg
out
cmp
adc
addl
sub
cmp
sub
cltd
pop
sbb
in
jo
imul
xchg
in
pop
sub
mov
add
icebp
mov
enter
in
push
int3
add
sub
xchg
mov
xchg
lods
das
push
jne
sbb
xchg
mov
fistl
mov
inc
xor
and
iret
insb
in
cwtl
mov
sub
test
pop
xchg
mov
sub
dec
arpl
or
xor
mov
dec
dec
out
sbb
cli
bound
ret
out
sbb
shlb
push
pop
mov
imul
xchg
push
movsb
pop
push
xor
fxch
fldl
push
jg
adc
ficoml
iret
mov
fisubl
push
jbe
dec
out
pop
mov
cmp
dec
xchg
xchg
fldt
pop
repnz
cwtl
push
sub
sub
cmp
test
jb
ja
subl
or
in
inc
pop
shrl
dec
fwait
lret
and
cmp
mov
push
loopne
or
lahf
and
insl
test
int
adc
negl
mov
in
mov
jno
inc
cmc
and
mov
mov
or
dec
mov
pushf
sahf
xchg
mov
mov
xlat
ret
pushw
sub
xchg
jns
push
lret
inc
addl
aas
mov
mov
xchg
jmp
push
mov
or
jp
int3
adc
push
adc
jge
lea
jbe
adc
mov
enter
jbe
push
xor
leave
icebp
test
and
lcall
movsb
or
jp
mulb
lret
in
test
mov
sbb
scas
dec
sub
outsl
pusha
data16
loope
mov
and
mov
rcr
js
inc
lods
icebp
adc
mov
or
lahf
dec
push
test
or
mov
sahf
mov
rcrb
sub
fst
fchs
lret
pop
jne
add
xchg
add
or
lds
int
cmp
leave
pop
clc
imul
sub
push
add
insl
mov
inc
stos
dec
xchg
or
sbb
mov
cltd
imul
jg
mov
rcll
sahf
inc
bound
pop
and
dec
clc
jae
pop
imul
sti
pop
or
pop
or
andl
sub
xchg
je
test
and
mov
add
jg
lret
roll
jg
lahf
mov
sub
pop
push
stc
je
leave
test
imul
jecxz
xchg
xchg
xor
or
sbb
jb
sbbl
lret
inc
std
addr16
jb
xor
xchg
movsl
mov
outsl
xor
lods
ds
cmpl
int3
jg
movsl
jno
iret
jmp
test
test
out
jb
inc
xlat
adc
cmc
test
sub
mov
popf
lret
nop
mov
jecxz
cmp
xor
jmp
jbe
cwtl
mov
push
xchg
jp
or
inc
push
inc
push
dec
lahf
int3
inc
pop
shl
call
push
vandps
or
jno
insb
repz
pop
and
xchg
xor
and
adc
fxch
xorb
int
imul
cmp
and
mov
int
sub
dec
push
mov
out
fwait
and
jne
push
xchg
ss
rolb
or
mov
sub
aad
mov
notl
mov
mov
iret
and
idivb
je
sbb
dec
mov
mov
push
stos
fbstp
decb
pop
sub
push
mov
mov
inc
nop
leave
out
mov
shl
and
int3
mov
mov
dec
fldenv
notl
out
addr16
es
pop
addl
cmc
stc
test
jmp
int
or
jmp
mov
pop
out
mov
mov
xorb
jbe
sarb
cmp
adc
stc
jnp
lds
mov
ljmp
hlt
push
pop
mov
push
loope
aam
fcmovnbe
fdivp
in
xchg
pop
jnp
popf
outsl
mov
fnsave
sub
dec
push
mov
push
push
push
movsb
sti
sti
add
stc
les
daa
loop
cwtl
fldenv
xchg
pop
jl
les
loop
out
rcr
cmc
push
ds
outsl
cmp
clc
push
and
mov
out
sahf
mov
inc
ret
mov
or
clc
push
das
add
mov
lcall
scas
cmp
mov
pop
sub
dec
and
xor
pop
aaa
mov
cmpl
clc
sbb
ljmp
iret
push
add
movsb
lahf
inc
jp
push
xchg
call
out
dec
and
and
jecxz
push
ret
mov
jmp
sbb
sbb
int
outsb
xchg
imul
inc
add
jp
out
clc
out
test
dec
movsb
je
push
pusha
es
mov
stc
xor
jno
and
xchg
pop
add
call
int
lcall
out
fwait
cmp
dec
fisubrl
mov
push
sbb
cmpsb
adc
mov
adc
loop
xchg
sub
scas
sub
pop
shll
into
stos
ljmp
sub
fcoml
ret
jo
pop
jl
icebp
pop
filds
mov
daa
repnz
out
mov
xor
ja
in
insb
ljmp
arpl
xchg
out
inc
and
cs
xor
loop
dec
mov
mov
out
cwtl
in
dec
in
xlat
cmp
cmp
leave
incl
or
loope
aad
cmp
or
mov
adc
pop
add
xchg
jle
jns
insb
lock
fwait
sub
cld
pop
xor
mov
xchg
lcall
pop
jmp
fstl
pop
add
loop
clc
xchg
out
imul
stos
pushf
xchg
loope
and
cmp
jmp
mov
cmp
dec
data16
push
je
stos
sbbb
push
in
mov
xchg
in
mov
xor
mov
jno
fimull
movsb
dec
rcll
or
push
fsubrs
adc
add
xchg
xchg
or
mov
xorl
push
idivl
repz
jns
inc
ds
orb
xor
dec
jnp
cmp
clc
or
aaa
mov
xchg
aam
mov
int
mov
pop
stos
jp
ss
test
mov
push
pop
mov
aam
fwait
mov
jo
add
hlt
sub
mov
fnstsw
es
cli
rclb
int3
xchg
xor
xor
out
xchg
roll
out
xorb
jge
ret
push
sti
stc
lock
xchg
cld
pop
out
aas
push
cmp
clc
imul
pop
dec
push
shrb
stos
add
repz
lods
pop
jae
lret
pushf
mov
addr16
xchg
and
push
dec
inc
sub
rcrb
ljmp
into
inc
ds
pop
cli
xchg
cwtl
fstpt
pop
outsl
push
lcall
pop
dec
jg
cli
mov
pop
mov
lahf
lret
push
xlat
push
adc
bound
lea
mov
testb
or
mov
stc
cmpsl
dec
cwtl
sub
mov
ss
cmc
adc
push
fwait
int3
jp
mov
sbb
jbe
ds
xchg
test
mov
xchg
test
add
cmp
or
inc
inc
cmpsl
roll
pop
adc
dec
and
fwait
dec
add
rcrl
add
xchg
push
sbb
jg
scas
cmp
ds
jno
imul
jmp
sbb
out
dec
sbbl
xor
add
xor
in
sbb
jae
xor
adc
es
je
ss
jne
aas
mov
xor
adc
inc
and
mov
jno
test
add
pop
add
lret
loopne
jnp
cmpsl
push
pop
out
repnz
stos
ss
insb
xor
in
fs
and
mov
pop
dec
rolb
adc
es
inc
or
push
fistpl
push
inc
call
loop
jg
cli
lock
jge
imul
xlat
testl
lea
dec
jmp
test
nop
out
sub
pop
xor
mov
xor
jno
inc
adc
sub
jns
push
push
dec
jno
pop
shlb
sbb
inc
mov
jmp
sti
push
pop
or
sbb
fwait
jb
or
inc
adc
cmp
sbb
mov
inc
and
jecxz
cmp
mov
les
inc
jge
test
adcb
sahf
aas
inc
xor
xor
dec
push
sbb
add
ret
lods
sub
sbb
dec
push
xchg
sti
mov
jne
das
bound
lret
fidivrs
fwait
cltd
rcl
repnz
xchg
test
push
or
cmpsl
dec
mov
dec
mov
int
jecxz
xchg
pop
les
mov
fdivrp
outsb
stos
rcll
cli
inc
out
mov
daa
es
test
lret
sub
sarl
xor
dec
mov
push
cltd
pop
push
popa
jle
adc
daa
test
jecxz
lret
mov
inc
mov
ret
pop
repz
in
jae
mov
add
scas
lods
xorl
mov
pusha
lret
mov
insb
cmp
xchg
mov
in
pop
adc
add
mov
mov
jbe
sahf
outsl
mov
inc
pop
jbe
mov
sbb
cmc
mov
xchg
ds
dec
pushf
xor
xchg
and
inc
aaa
outsb
hlt
inc
leave
bound
js
mov
stos
inc
mov
or
xor
inc
fadd
ljmp
sub
ret
movsb
lods
xor
cmp
push
dec
mov
mov
popf
dec
out
pop
inc
nop
shr
push
jge
adc
jge
inc
sarl
shl
jle
lock
mov
sbb
xor
jg
mov
addr16
fists
push
or
sbb
lahf
hlt
sarb
push
inc
adc
in
das
add
cmpsb
imul
pushf
int
pminsw
or
pop
sti
ss
popf
lock
pop
mov
add
cmp
jns
pop
xchg
scas
jge
push
mov
aad
xor
pop
leave
arpl
xor
mov
gs
lods
fmul
insl
test
or
mov
clc
fimuls
scas
xor
mov
push
repnz
lock
add
adc
shll
pop
gs
push
fwait
inc
pop
sub
and
nop
cltd
and
or
xor
xlat
dec
aad
cmp
bound
aad
aaa
push
cwtl
in
int
sbb
xlat
cmp
inc
idiv
push
imul
je
rcl
cs
insb
ret
rcll
loope
jns
push
mov
mov
fdivr
test
cmp
cmp
xchg
adc
adc
iret
punpckldq
add
jl
movsl
ret
ja
add
mov
sbb
ficoms
mov
dec
push
jmp
push
inc
mov
cltd
cmp
jg
jns
mov
and
and
mov
rcr
adc
mov
jno
shl
movsl
push
pop
push
jecxz
outsl
roll
sub
outsb
push
jmp
jl
test
sti
cmp
fildl
aas
or
push
cs
sub
xchg
fists
pop
lods
call
ja
dec
or
test
loop
and
clc
adc
hlt
mov
ja
push
mov
mov
loope
icebp
incb
ja
pop
xchg
mov
insb
adc
gs
xlat
and
xchg
and
ljmp
loop
mov
outsb
call
ja
ret
cmc
test
mov
jo
cs
js
push
ror
pop
jmp
inc
pop
inc
xorl
sti
pop
shlb
outsb
std
out
push
in
xchg
mov
or
sarl
xor
xchg
lea
xor
popf
sbb
xchg
hlt
dec
adc
decb
cmp
pushf
mov
jns
add
mov
mov
or
or
mov
lea
sbb
ljmp
daa
jle
lcall
mov
ficompl
mov
jl
cmc
xchg
add
in
sbb
sbb
mov
ja
iret
sbb
lahf
mov
movsl
xchg
aaa
popa
mov
mov
or
inc
pushl
cmp
icebp
push
mov
inc
shrl
movsb
inc
mov
add
cmpl
lods
dec
xchg
dec
sbb
cmc
test
call
push
xchg
test
call
das
xchg
xchg
pusha
sub
clc
bound
dec
ret
or
scas
mov
cld
pop
dec
mov
push
inc
add
dec
out
divl
in
loope
cmp
push
imul
ret
add
cli
jmp
inc
imul
popl
sub
mov
inc
jmp
sbb
push
mov
test
mov
dec
popf
test
in
orb
jne
popf
cmpb
aam
mov
mov
xchg
dec
stc
mov
and
in
inc
mov
xor
or
addr16
mov
push
sub
pop
ds
inc
inc
ljmp
insl
popf
rcll
stos
enter
subb
pushf
ja
or
mov
xor
sahf
jns
fnsave
loopne
rcl
cwtl
xorb
sar
in
cmpl
mov
xchg
lahf
fdiv
outsb
outsl
insl
and
ljmp
popf
jmp
push
sbb
xchg
mov
out
hlt
dec
dec
or
test
mov
mov
test
push
mov
mov
cli
aas
push
mov
insb
fisttps
pop
sbb
imul
jns
mov
sub
jg
pop
loop
mov
dec
lds
cmp
mov
sbbb
mov
shlb
push
sti
mov
into
pop
icebp
jno
dec
out
shl
repz
jmp
pop
cld
mov
or
xchg
cwtl
pop
xchg
orb
pushf
insl
xor
dec
fstps
mov
dec
in
addr16
add
adc
stc
imul
js
dec
scas
mov
sub
add
mov
inc
call
and
lea
jns
or
pop
rorb
iret
cmpsb
push
daa
jp
xchg
jns
sbb
dec
or
pop
lods
fnsave
lahf
jno
data16
ficomps
dec
mov
or
lcallw
clc
xchg
sti
sub
push
push
dec
add
les
in
sub
fsubs
xlat
push
jns
leave
push
mov
ret
pop
cmp
gs
loopne
cmp
roll
scas
add
out
inc
cmp
ljmp
mov
inc
cmpsl
sub
in
mov
in
dec
incb
insb
scas
sahf
cli
into
add
inc
jae
or
ja
mov
cmp
pop
jmp
and
inc
adc
aam
sahf
gs
sti
ja
cli
xchg
xlat
int
jge
sub
fwait
xor
mov
arpl
mov
mov
add
adc
push
or
je
lods
add
jle,pn
xchg
fstpl
pop
insl
pop
fdiv
or
jns
lds
sub
aas
aad
jnp
leave
addr16
push
movsb
loope
mov
out
pop
lea
fmuls
call
in
push
test
mov
pop
add
cmp
sti
mov
mov
sahf
add
pusha
ss
fs
mov
mov
xor
les
xor
cmpb
and
push
ret
out
or
mov
cld
stos
xchg
cmp
hlt
inc
cltd
das
shl
xchg
lahf
and
mov
call
sarl
ret
xorb
inc
aas
and
testl
jp
rcrb
aam
imul
inc
loop
pop
mov
add
mov
je
cltd
sub
popf
lods
aaa
pop
int
adc
das
out
dec
cmp
les
push
ss
add
and
sbb
fwait
and
addr16
ret
lcall
mov
js
xchg
and
sahf
or
push
lea
dec
ret
movsb
das
xchg
in
scas
push
pop
repnz
adc
inc
sbb
mov
cmpsl
push
adc
cltd
insb
xchg
hlt
sbb
lock
decl
xchg
scas
rcrl
int3
cltd
push
dec
arpl
mov
sub
hlt
inc
dec
mov
fldenv
mov
repz
mov
enter
mov
jmp
and
pop
scas
pop
icebp
adc
movsb
sub
ret
fcomps
pop
push
xchg
sbb
dec
cmp
mull
mov
aaa
cmpsb
decb
in
mov
lods
sbb
imul
xlat
pop
ja
inc
sub
xchg
fdivl
pop
and
fs
sub
cmp
stc
jno
sbb
dec
mov
xchg
stos
xchg
inc
int
fmuls
cmp
fcomps
inc
ds
mov
cmp
sti
or
repz
or
icebp
mov
adc
xlat
adc
ljmp
clc
lcall
in
sti
jnp
cld
or
mov
cwtl
jbe
push
cmp
mov
loop
push
inc
xchg
dec
mov
sti
dec
jge
cs
sbb
aam
jle
pop
push
and
int3
clc
sbb
cmpsb
push
xor
inc
mov
ja
jle
lock
ljmp
loopw
outsl
loope
sbb
jb
dec
jp
push
aaa
cltd
mov
in
stc
mov
pop
push
insb
push
popl
push
jae
test
outsb
int
loop
loope
add
lods
adc
adcl
push
inc
out
loopne
lods
jle
add
gs
mov
pop
lods
hlt
and
out
and
pusha
push
cmpsl
scas
xchg
movl
js
inc
in
jl
mov
pop
inc
js
es
or
negl
xor
xchg
lods
shr
push
push
sbb
pop
sub
addr16
enter
inc
jp
xor
daa
shrb
sbb
mov
cmc
shrl
out
fimuls
jmp
xchg
ret
jmp
jno
push
jmp
inc
mov
pop
cmp
jecxz
in
mov
negl
xchg
ror
mov
xchg
and
fwait
pop
repz
xor
add
cbtw
xchg
stc
inc
test
pop
inc
loope
dec
mov
pop
je
je
cmp
pop
ret
push
imul
mov
imulb
sub
adc
sbb
lock
shrd
jae
dec
in
push
mov
out
add
push
aam
xchg
js
push
in
jns,pt
loop
gs
imul
mov
ljmp
jmp
add
test
jo
xor
xor
adc
dec
leave
iret
sub
dec
and
fs
xchg
xchg
pop
mov
int
stos
loopne
fsubrs
loop
inc
cmp
scas
neg
insl
xchg
gs
fstpt
push
test
stos
je
mov
push
rorb
nop
push
lea
ja
inc
dec
and
push
adc
insb
arpl
fwait
sub
push
cli
lods
jp
pop
stos
test
mov
add
idiv
out
mov
mov
xchg
outsl
mov
pop
sbb
ss
movl
add
je
push
ljmp
xor
jmp
push
sub
shll
lret
or
sbb
ficoms
xchg
inc
scas
sbb
add
or
adc
inc
mov
call
and
pop
cmpsb
inc
inc
xor
add
outsb
fcmovb
arpl
push
out
inc
loopne
popa
pusha
jmp
cmc
push
fcomp
outsb
or
stos
cmpl
ljmp
sbb
fdivrs
cli
iret
inc
test
lahf
add
sti
aad
leave
out
mov
hlt
adc
test
cltd
or
and
pop
adc
xchg
movb
pop
pop
int3
xrelease
addr16
push
jo
cmpsl
imul
or
imul
pop
xlat
adc
push
add
dec
loopne
jne
out
fwait
jmp
xchg
je
mov
out
jno
xchg
test
inc
js
pop
push
pusha
xor
or
and
popf
pop
sbb
fwait
mov
mov
mov
outsl
icebp
xchg
xchg
dec
mov
mov
and
pop
xor
lahf
xchg
js
xor
jae
sarb
cmp
add
loopne
mov
mov
clc
fists
sub
dec
imul
ret
mov
push
sbb
mov
mov
in
mov
roll
xchg
inc
mov
shlb
repnz
out
inc
je
cltd
jb
insb
lods
and
stos
lret
dec
xor
daa
dec
hlt
mov
ss
inc
jno
mov
mov
inc
mov
fisubs
mov
ja
pop
ds
push
inc
inc
jmp
loope
int3
xor
ljmp
mulps
bound
jbe
test
in
and
popf
in
inc
adc
adc
jne
cmovns
dec
and
mov
insl
mov
je
std
inc
xchg
mov
lods
leave
push
pop
js
add
daa
pop
xchg
ss
mov
adc
jnp
or
call
fdivs
xchg
loope
bound
scas
jb
jmp
pop
clc
popa
outsl
movsl
aas
inc
aas
xchg
jnp
dec
jecxz
lret
mov
pop
inc
sbb
orb
sarb
fcmovnb
sarl
insl
push
roll
pop
jp
or
enter
cmp
stos
aam
in
xchg
enter
inc
sbb
mov
lcall
out
out
and
popa
jle
jns
int3
mov
lock
pusha
fsub
inc
lock
fisubs
aam
pushf
pusha
cmc
sti
inc
loopne
pop
pushf
pop
inc
or
add
aas
dec
push
mov
mov
test
daa
in
data16
inc
pusha
es
add
iret
push
fdecstp
xlat
out
pop
xor
cli
xchg
insb
scas
push
in
cwtl
xor
xor
ret
jecxz
mov
push
inc
pop
dec
enter
sbb
out
jo
push
cs
mov
cltd
mov
push
mov
push
adc
movsb
jno
add
jecxz
je
in
and
mov
call
xor
lret
cmp
in
sbb
xchg
test
int3
mov
out
mov
jno
jbe
push
adc
sub
pop
inc
iret
add
dec
imul
scas
add
scas
xchg
mov
lock
mov
pop
das
hlt
push
mov
sbb
repz
cli
loopne
pop
and
popf
xchg
mov
push
mov
sub
outsl
decl
aas
je
rclb
push
xor
lods
movsb
mov
push
stc
add
mov
cmpsl
mov
dec
xlat
push
bound
insl
shlb
lods
js
shr
repnz
pop
sbb
dec
xchg
adc
and
into
sti
scas
dec
pushf
lahf
push
adc
inc
imul
cwtl
sbb
ror
or
xchg
test
cwtl
mov
jnp
mov
test
add
cmp
dec
aaa
ljmp
aad
inc
ret
sbb
js
xor
test
mov
cld
shll
xor
pop
mov
or
or
ljmp
inc
push
jbe
call
out
nop
fildll
jns
pop
jmp
and
sub
ds
mov
jmp
sbb
shl
push
js
ret
lds
mov
inc
sbb
cmpsb
aam
adc
xchg
scas
in
xor
fiaddl
shll
adcl
jmp
ss
mov
dec
mov
add
fld
pop
popf
sub
fs
flds
sti
ljmp
lcall
bound
out
jno
jnp
jns
in
lret
and
sbb
jmp
pop
dec
adc
push
adc
adc
aad
add
fs
jb
pop
mov
adc
jge
data16
push
mov
mov
fstpt
jl
outsb
mov
jecxz
cmpsb
pop
mov
rcrb
mov
sub
int
inc
outsb
jge
or
inc
mov
int3
or
leave
out
jecxz
ja
and
cs
cltd
pop
mov
lret
daa
sbb
or
je
and
imul
movsl
mov
aad
sub
and
jbe
cmpsl
pop
andb
icebp
mov
jle
jp
pop
loop
bound
cwtl
xlat
loop
mov
jbe
test
jb
mov
aad
insb
int3
xchg
imul
aas
stc
adc
and
xor
dec
ja
lods
mov
test
and
or
lods
push
pop
decl
mov
jle
aas
in
add
imul
nop
push
xchg
movsl
stos
outsb
mov
add
sub
lahf
dec
push
mov
shlb
adc
mov
dec
cltd
out
xor
pop
inc
xor
push
jp
jbe
daa
pop
pushf
jno
pop
or
xchg
pusha
or
sub
pushf
jmp
jne
fwait
sbb
cs
jp
and
mov
ret
add
or
sbb
and
ss
dec
mov
xchg
inc
inc
mov
xchg
ss
jbe
loopne
popf
inc
xor
jg
iret
cltd
ss
jno
pop
rcrl
jns
pinsrw
js
sbb
pop
jmp
xchg
aaa
in
repz
sbb
inc
test
lea
xor
adc
ficomps
cli
lret
or
mov
adc
inc
js
mov
test
fnstenv
pop
inc
inc
inc
mov
add
sahf
icebp
mov
inc
mov
fcomi
adc
add
mov
pusha
and
adc
sti
stos
notb
jge
clc
jmp
punpckhdq
loop
mov
aam
push
out
das
dec
mov
loop
shlb
jns
ds
xor
cmpsl
or
adc
cltd
nop
and
pushf
jp
pop
inc
sbb
aam
sub
jl
jmp
es
add
jne
cmpsl
push
sub
mov
push
add
out
cmp
sti
inc
divl
cli
mov
push
inc
icebp
andb
xchg
cmpsl
xor
inc
xor
jmp
push
pop
xor
push
je
pop
cmp
cmp
push
sub
push
pop
sbb
int
lcall
mov
pop
stos
not
mov
add
insb
mov
sub
jnp
pop
fcmovnb
or
or
cltd
pop
movsb
fadds
dec
fs
out
les
dec
adc
fcomps
cs
mov
leave
xchg
out
xor
pusha
jbe
mov
orl
pushf
bound
out
nop
loope
iret
adc
pop
imul
xchg
add
stc
jae
mov
add
hlt
fwait
lcall
sahf
jge
popa
shl
sub
sub
jns
dec
movsl
insb
mov
outsl
sbbb
or
rcrl
push
pushf
mov
fstps
mov
cmp
pop
lods
push
or
rorb
inc
cmpsl
js
movd
jbe
fildll
sub
fldt
adc
push
dec
push
cmp
cmp
lds
lods
outsb
sub
push
jno
adc
incl
mov
sbb
lret
add
add
out
loop
sub
sbb
push
add
pop
mov
movsl
aad
icebp
rcl
into
aad
push
xchg
pop
mov
loope
sub
lods
push
inc
mov
adc
jae
cmpsl
inc
xor
aas
jo
jb
pop
pop
icebp
les
cmp
popf
fucom
push
out
pop
je
ljmp
adc
mov
jl
add
loopne
out
pop
insl
inc
push
xor
iret
lock
enter
mov
add
xor
jne
lcall
push
in
dec
subb
call
dec
ja
dec
cmp
je
and
cli
jae
scas
int3
hlt
pop
je
aad
repnz
icebp
add
push
sbb
jo
jne
jbe
and
fnsave
add
fxch
xor
flds
stos
mov
dec
mov
fisubs
cmp
nop
or
xor
sbb
and
dec
das
repnz
jne
cmc
sar
pusha
or
stos
lock
jbe
ret
dec
insl
leave
les
mov
popf
scas
xchg
cwtl
mov
inc
pop
int
sbb
ret
mov
jmp
xchg
adc
cmp
mov
sub
push
mov
test
fldl2e
or
xchg
test
pop
mov
insb
push
pop
and
rorl
or
and
outsl
fcomi
rcrb
imul
sbb
popa
insl
sbb
rcll
cmc
and
mov
push
loope
jmp
lods
addl
adcl
into
loop
jno
loopne
daa
push
cmp
out
lret
xor
pop
aaa
es
pop
pop
mov
fisubrl
add
std
push
mov
movsb
movsl
push
jg
mov
dec
mov
std
addr16
dec
popa
imul
insl
add
jmp
popa
pushf
fsubrp
lods
sub
sbb
outsb
jmp
div
pop
add
fnstenv
repz
insl
sahf
pop
int
or
mov
adc
mov
lahf
pop
add
push
ret
loope
mov
inc
loope
mov
das
or
fstl
adc
sub
ret
into
or
gs
outsb
jp
sub
in
bound
xor
and
sbb
pop
cmp
dec
pop
mov
mov
xlat
into
push
clc
mov
sub
sbb
push
sbb
xchg
cmpsl
pop
arpl
ficompl
test
aas
out
andl
mov
xor
nop
add
cmp
call
outsl
inc
cli
fimull
and
xchg
lret
ljmp
or
jg
jno
push
clc
mov
std
mov
loop
push
sub
fbstp
add
out
imull
sarb
test
push
loopne
sbb
mov
rcr
popa
mov
test
dec
cmpsb
inc
cmp
aas
out
popa
ss
cwtl
cmpsb
imul
cmp
lods
cmpsl
mov
sbb
into
in
xchg
loop
test
inc
mov
sbb
add
icebp
mulb
loop
lahf
mov
add
inc
cmp
xor
arpl
mov
aad
fnsave
je
xrelease
mov
scas
dec
mov
sarl
or
in
pop
jg
push
sbb
sbb
gs
sbb
jne
add
mov
aam
mov
rcl
adc
mov
push
xor
cmp
pop
add
lcall
shlb
inc
add
insb
inc
in
lods
xchg
sbb
fistps
lods
cmc
outsb
pop
fisubl
je
cmp
inc
cli
or
insb
pop
mov
dec
jge
cmp
lcall
lods
loop
mov
nop
mov
popa
mov
cmp
xchg
in
in
add
xor
jmp
mov
pop
ror
popa
or
adcl
outsl
pop
roll
test
imul
lret
jnp
sub
in
sti
adc
addr16
scas
sbb
fsubl
mov
xor
rorl
decl
loopne
out
xchg
mov
imul
daa
xor
mov
jl
cld
imul
xchg
test
hlt
insb
jl
add
xorl
stc
into
rdpmc
jg
push
adc
xor
dec
loope
adcl
pop
or
push
adc
fcmovne
xor
push
icebp
and
inc
dec
sbbl
insb
imull
mov
fbld
out
mov
mov
dec
dec
sub
les
add
add
adc
cmp
fistpl
jb
out
xchg
movsl
xor
pop
ret
cmp
push
add
aad
and
les
adc
xchg
push
imul
aas
lcall
or
or
dec
pop
cmpsb
dec
mov
or
lods
jb
loopne
jg
cld
push
fistps
cmp
sbb
mov
loope
daa
shrb
aas
pop
push
insl
aas
xor
pop
in
cmp
lods
sbb
sub
add
or
dec
test
filds
jg
xor
cmpsb
pusha
inc
push
lds
cmpsb
jnp
stos
ficoms
jmp
mov
in
xlat
je
rcll
cld
inc
imul
cmpsl
aam
testb
in
pop
pop
pop
xchg
mov
aaa
cld
add
dec
repnz
testb
push
dec
jl
xchg
jns
or
sar
inc
xchg
sub
into
mov
sub
gs
mov
in
movsb
mov
sahf
test
mov
dec
push
data16
enter
lea
xor
sarb
push
imul
mov
cmc
add
sbb
cs
mov
mov
int3
fcomi
div
cltd
dec
mov
xchg
xlat
or
pop
shrb
push
and
push
push
ret
add
sbb
lods
ds
stos
scas
cmp
in
sbb
movl
sbb
inc
mov
xor
popa
and
inc
pop
dec
mov
mov
adc
pop
push
add
rcrl
popa
icebp
or
mov
vmulsd
push
lret
jmp
adc
inc
pop
add
addl
mov
mov
inc
pop
pusha
jmp
shlb
stos
and
and
inc
pusha
xchg
or
jb
pop
in
test
sbbb
push
dec
fdivl
in
lret
shrl
mov
jl
popl
fidivl
push
cmp
jo
inc
lods
xorb
outsl
push
les
xlat
push
lods
xchg
and
mov
xchg
out
mov
imul
test
negb
jne
jmp
inc
mov
test
jae
sahf
jno
inc
stos
cmp
lahf
mov
pop
int3
shlb
test
mov
imul
or
xor
jmp
cmp
mov
stc
setae
cmp
gs
movl
mov
fldt
mov
xor
and
inc
mov
dec
rclb
cli
fsubl
cmpsb
jo
push
loopne
arpl
popa
mov
std
xchg
dec
lock
int3
ret
js
test
sbb
sbb
pushf
push
mov
jb
or
dec
and
jmp
push
int
pop
sub
movsb
adc
dec
inc
cmpsb
aas
hlt
xor
orb
leave
pop
loope
call
mov
jmp
xchg
mov
inc
xchg
jb
xchg
outsl
sbb
cmp
mov
jno
xchg
in
and
xor
sarb
jnp
lock
mov
jle
cmc
xor
and
fbstp
jle
jmp
xorb
dec
and
inc
aas
test
or
pop
add
cld
and
mov
insl
shrb
test
or
inc
fwait
sub
jp
test
std
mov
data16
inc
sbb
pop
cmp
mov
cltd
pop
out
imul
int
and
mov
shll
push
pop
lock
mov
rol
pop
add
add
pusha
shll
fmul
repz
adc
push
xor
inc
adc
gs
jo
or
sub
lods
setb
mov
xchg
dec
lods
and
int3
stc
sbb
shlb
sbb
sbb
inc
add
xor
loope
mov
cltd
pusha
testb
push
jne
sbb
fisubrs
or
add
push
test
jge
in
int
std
add
jge
xchg
jl
hlt
xchg
xor
lcall
add
repnz
andl
ja
addl
mov
mov
or
sub
clc
or
std
adc
mov
pusha
pop
call
add
ret
mov
sbb
xor
inc
test
push
sub
clc
rorl
repnz
in
lds
cli
mov
pop
dec
lock
mov
jo
and
es
push
sub
adc
daa
icebp
cmp
cs
dec
mov
repnz
mov
shlb
inc
fidivrl
lods
and
mov
cmp
sbb
cld
lock
test
mov
les
addl
adc
or
sahf
mov
sub
fdiv
out
ljmp
push
jge
sbb
xchg
lret
pusha
add
cmpsl
and
nop
out
mov
inc
sbb
adc
into
cmc
sbb
mov
into
fisttps
lret
push
jmp
jecxz
outsb
sub
xchg
sbb
fxam
test
mov
xchg
popf
xor
mov
pop
jl
lret
jecxz
dec
pop
and
movsb
lret
jne
xor
adc
push
test
dec
lahf
adc
lods
mov
fyl2xp1
rorl
mov
sub
or
xor
nop
test
inc
shrb
pop
cmp
push
arpl
popa
aaa
je
xchg
lods
inc
cmc
pushf
or
iret
test
lds
cmp
jb
incb
jne
or
out
pop
inc
push
add
adc
inc
inc
and
add
or
and
sbb
sbb
stc
cld
push
mov
call
inc
shrl
or
fnstsw
in
iret
dec
push
scas
dec
pop
mov
pusha
pop
cmc
mov
or
add
mov
sbb
jmp
jno
add
jmp
add
int
jmp
outsb
add
dec
dec
or
or
mov
mov
adc
insl
add
fisubrs
xchg
sub
sti
out
jle
jmp
mov
outsb
push
ret
cld
scas
call
xchg
rcl
sub
mov
bound
inc
mov
std
jecxz
dec
fisubrl
mov
test
inc
mov
dec
inc
mov
adc
add
sbb
pusha
stc
or
shlb
inc
arpl
jl
inc
test
pop
fiadds
enter
and
mov
std
adc
das
jb
rclb
push
adc
rcrl
mov
pop
mov
pop
sbb
test
movsl
xchg
jecxz
sub
fsts
je
mov
mov
pop
ficomps
sbb
lahf
lahf
pop
sbbb
enter
push
inc
hlt
leave
pop
push
inc
or
rorl
inc
orl
xor
aaa
mov
sub
mov
enter
ss
loope,pt
jo
xor
cmpsb
shlb
sub
pop
frstor
xor
imul
loope
mov
xor
repnz
jle
mov
fidivrs
out
sub
or
push
pop
cmpb
dec
testb
or
fidivs
jp
std
sub
pop
push
dec
outsb
mov
push
xchg
into
mov
subb
test
repnz
push
jl
push
shlb
jl
outsb
xor
sbb
imul
dec
mov
mov
stos
mov
and
outsl
cs
rclb
dec
xchg
xchg
arpl
sti
mov
mov
loope
pop
and
loope
cmp
xor
jb
push
jb
es
lret
stos
dec
mov
ss
push
dec
scas
sti
sahf
mov
dec
les
mov
ret
mov
repnz
add
xchg
cld
iret
mov
test
pop
imul
or
decb
loope
inc
into
mov
dec
pop
inc
imul
mov
inc
add
ljmp
mov
insl
call
and
clc
nop
orl
jp
jg
fwait
shll
adc
mov
and
jns
mov
outsl
bound
and
cs
nop
ss
mov
sahf
aad
dec
adc
idivl
out
xor
mov
lods
hlt
xor
mov
in
shlb
sbb
repnz
ljmp
xchg
rcr
sub
daa
cmp
sub
int
dec
das
pop
insb
out
jmp
nop
fcomps
pop
jle
sub
cmc
addb
or
sub
pusha
mov
fbstp
cmp
jl
mov
jp
pop
dec
shrb
bnd
push
dec
popf
mov
neg
jb
fists
enter
mov
jno
lahf
scas
hlt
push
nop
imul
add
fs
imul
push
adc
jns
nop
push
xor
lods
dec
test
pop
pop
rcrb
push
push
sbb
movsb
imul
cmc
dec
out
gs
xor
ret
fs
add
sub
mov
mov
mov
rol
mov
scas
dec
push
je
loope
xor
cld
sub
and
pop
push
mov
xchg
and
ret
mov
dec
inc
dec
push
xchg
out
cmc
dec
cmpsl
int3
aaa
xor
nop
sbb
nop
ss
and
fidivrl
or
js
cmc
inc
dec
jae
out
lds
sub
testl
fwait
or
adc
iret
jnp
fldl2t
push
inc
or
sub
movsb
jle
lea
popa
int
stos
xor
stos
mov
adc
out
pop
xor
jb
pop
orb
out
xor
pop
push
fdivs
cwtl
clc
mov
out
in
sbb
daa
adc
out
mov
and
pop
xor
adc
mov
and
adc
add
xor
jbe
mov
jge
jne
or
dec
and
out
cld
mov
and
out
fwait
xchg
aad
cmp
pop
push
jge
mov
mov
jo
fs
jne
sbb
xor
and
jmp
mov
xchg
xor
cltd
dec
aam
pop
xchg
pop
fldl
into
and
push
adc
pop
out
dec
pop
cwtl
sbb
inc
jns
mov
xchg
or
jne
call
mov
mov
mov
movsl
adc
pop
cmc
adc
adc
cmp
aas
fmul
movl
shlb
jnp
aas
push
mov
and
jle
cli
dec
jnp
mov
out
pop
adc
js
or
sbbb
mov
dec
divb
pop
scas
fcomps
movsb
int3
fildl
fstpl
inc
mov
or
fdivs
movsb
pop
inc
push
cmp
dec
xchg
jbe
mov
pop
xchg
ret
or
inc
cmp
in
adc
lret
inc
push
clc
cmc
pop
rolb
lods
mov
das
xor
into
inc
movsl
stos
clc
pop
and
sahf
add
sbb
sti
mov
iret
sbb
add
sub
pop
popa
inc
fwait
xchg
mov
in
fdivl
mov
ficoms
fistps
cmp
in
and
mov
push
mov
push
mov
cmp
aaa
sahf
inc
add
mov
sarl
mov
jbe
call
adc
in
cmp
and
fdivl
daa
jb
add
aad
jecxz
ret
in
test
mov
lret
cmpl
les
pop
and
sub
cwtl
or
or
xchg
mov
mov
cmp
sub
jecxz
mov
movsb
and
adc
arpl
test
jo
pop
lock
and
popf
into
shrb
xor
and
or
sti
ss
aas
xchg
jp
dec
movsl
push
fs
mov
jns
adc
ret
or
fbstp
inc
xor
loop
xchg
jl
xor
push
leave
fildll
jnp
out
icebp
adc
fld
cmpsb
pusha
mov
jnp
and
mov
push
or
sbb
data16
pop
fimull
push
pop
movsl
leave
adc
sahf
sub
jae
int3
hlt
jmp
dec
ljmp
pushf
int3
jb
lret
dec
loop
inc
and
xor
rclb
in
das
cwtl
lods
xor
adc
adc
push
rorl
aaa
cmp
mov
pmaddwd
fs
aaa
mov
incb
std
or
les
push
repnz
loopne
jmp
loopew
push
dec
cli
sub
and
std
cli
movsb
fnstenv
mov
inc
dec
daa
jg
mov
xor
fbstp
dec
pop
add
push
cmp
push
and
mov
rolb
cmp
lea
scas
aam
xchg
xorb
jl
test
orb
das
inc
gs
stos
or
inc
inc
in
and
ds
mov
imul
add
mov
subb
jge
lea
sub
call
dec
sbb
in
xchg
je
aaa
cwtl
add
cmp
jae
stos
xchg
jo
sub
and
mov
imul
mov
push
dec
jb
sub
ljmp
cmpsl
xor
jle
cli
out
push
pop
dec
push
mov
pop
mov
adc
sub
sub
or
jecxz
dec
sub
shll
stos
inc
clc
sub
fnstsw
mov
dec
movsl
mov
pop
adc
popf
shrl
pushl
dec
mov
and
mov
mov
add
mov
xlat
cwtl
xchg
data16
sbb
sti
xorb
inc
sub
int3
and
js
ja
shll
fiaddl
cmc
gs
test
fstp
and
fldl
mov
jl
nop
ds
xor
mov
popa
or
inc
pop
sar
mov
inc
sbb
adc
and
std
inc
in
xor
cwtl
movsb
adc
in
pop
jp
pop
fistpll
ret
cltd
fimull
inc
pop
enter
ss
sub
arpl
inc
mov
xor
pop
sbb
inc
popa
dec
popa
dec
inc
jp
xor
popa
sbb
das
sub
pop
shr
adcl
stc
mov
insb
ficoml
aad
jae
jne
lock
outsl
mov
jle
sahf
std
ds
in
cmp
jmp
fisttps
stos
testb
out
shrl
sub
rcl
dec
add
out
ret
dec
and
adc
jl
das
fwait
mov
test
mov
adc
inc
mov
sbb
in
call
mov
mov
daa
lea
mov
push
inc
and
or
js
push
test
and
xchg
popf
pop
cmpsb
stc
add
cmc
roll
dec
xchg
mov
fsubl
testl
cmp
mov
lcall
xchg
incl
dec
adc
ja
mov
lods
popf
push
popa
jns
jmp
xor
adc
mov
jns
xchg
fnstcw
push
mov
pop
jns
xchg
popf
repz
pop
cltd
sub
nop
ja
inc
sub
push
dec
mov
cld
and
xchg
clc
inc
sbb
or
lods
adc
test
xor
or
pop
mov
mov
or
out
inc
xor
leave
and
ja
mov
xchg
out
inc
das
cmp
int3
mov
inc
jns
xchg
mov
test
push
cmc
sbb
push
mov
leave
dec
inc
cmp
test
mov
decb
or
lret
xchg
jl
dec
fidivs
out
pushf
dec
inc
pop
inc
repnz
cmp
lahf
fnstenv
jbe
popf
sbb
enter
sbb
dec
fnstsw
fs
inc
sbb
mov
mov
xlat
bound
lods
mov
cltd
icebp
sub
fstps
xor
mov
push
pop
pop
mov
or
mov
xchg
cltd
dec
and
dec
fcompl
inc
ret
ds
out
gs
rol
outsl
in
mov
or
xchg
push
adc
fwait
adc
jge
lods
sbb
mull
pop
into
ljmp
lahf
xor
mov
aad
sub
dec
dec
ficomps
in
mov
pop
fs
test
jbe
incl
fadds
jbe
mov
inc
insl
mov
scas
je
leave
add
mov
cmp
mov
dec
xchg
cltd
repnz
xor
cmpsl
dec
cmp
js
fidivrs
fbld
jns
mov
and
xchg
jle
inc
add
add
lahf
mov
add
cmp
adc
js
dec
xchg
xchg
repnz
outsl
int3
je
dec
std
mov
jns
and
loop
aam
jb
addr16
mov
lret
pushf
cli
stos
stc
js
es
rolb
push
dec
movsb
dec
adc
lea
outsb
adc
mov
movsb
adc
imul
jo
mov
jo
loope
mov
inc
arpl
push
lahf
pop
test
pushf
mov
ljmp
jp
in
stos
xchg
or
sbb
mov
arpl
mov
neg
push
mov
sahf
pop
xchg
add
cmp
lds
cmpsl
dec
addr16
call
pushf
lret
outsb
adc
repz
orl
hlt
mov
push
push
fiaddl
into
mov
lods
sbb
jne
popf
loope
inc
jecxz
jns
inc
movsb
popf
inc
sar
pop
idivl
jg
pop
sub
fistpll
adc
pusha
sbb
inc
sbb
xor
sbb
xchg
roll
rorb
test
pop
jp
mov
pop
sub
repnz
test
jl
insb
insl
xor
ljmp
scas
dec
out
out
iret
pop
fs
bound
mov
and
cltd
js
imul
stos
push
inc
out
in
fnstenv
rcl
mov
cmovo
push
mov
cwtl
iret
mov
sub
lods
mov
mov
stos
imul
mov
addr16
aad
or
jmp
push
inc
adc
adc
addb
nop
xchg
call
pop
jns
pop
fwait
sub
sbb
in
pop
imul
inc
inc
cmp
data16
shll
jle
lea
rcl
loopne
cmc
out
int
jae
repnz
mov
and
cltd
fstl
orb
and
mov
pop
or
call
cmpsl
in
mov
xlat
xchg
inc
adc
popa
into
xor
inc
shll
stc
xchg
mov
jle
ret
adc
cmp
ds
lods
fs
stos
or
jmp
dec
popa
test
gs
sbb
and
sbb
or
xchg
sbb
ljmp
loopne
cmp
lahf
ja
mov
cmpsl
sub
jns
adc
pusha
pushf
fwait
xchg
pop
inc
movsb
cmp
jg
out
adc
cli
hlt
repz
loopne
mov
xor
testb
lcall
push
imul
insb
aad
in
fimull
push
mov
sarl
and
fimull
add
test
mov
es
lds
lods
repnz
test
mov
bound
cld
orb
les
mov
inc
jg
ror
adc
lods
push
adc
pop
xchg
mov
adc
in
sub
nop
leave
out
sub
push
jne
inc
or
mov
loop
mov
xor
mov
scas
addl
js
mov
jne
mov
in
mov
push
es
repz
addr16
test
cltd
movsl
and
sbb
out
hlt
lea
xchg
mov
arpl
loope
xchg
or
aaa
xor
incl
js
xchg
hlt
addb
inc
addb
sti
jl
push
cld
test
mov
mov
out
cld
inc
js
adc
shr
test
jb
and
adc
and
aam
adc
idivl
pop
lret
mov
and
js
rclb
push
ja
jns
pop
cltd
pop
out
test
lods
imul
std
cltd
or
ss
push
popa
mov
sub
xchg
stos
movsl
sbb
pop
cs
andb
cmp
mov
sahf
adc
lea
in
nop
aas
outsb
fstps
mov
and
mov
adc
jle
loopne
jmp
inc
sub
scas
enter
xchg
pushf
mov
fldl
daa
test
push
cltd
cmp
mov
in
dec
sbb
dec
mov
in
sahf
out
in
in
inc
push
add
xor
mov
push
popa
mov
mov
pop
pop
les
out
movsl
push
and
scas
pop
mov
int3
cli
mov
lea
add
ret
bound
xor
insb
stos
lahf
movsl
mov
cli
pop
pushf
sbb
xchg
nop
inc
pop
pop
mov
push
sub
mov
lds
fistpl
add
inc
call
fs
push
or
dec
xlat
sbb
sub
loop
adcl
push
lahf
ret
ds
cmp
nop
cmp
testb
mov
je
adc
pop
ss
inc
mov
and
sbb
dec
push
add
dec
add
inc
test
push
sub
sub
pusha
xor
xor
cwtl
jbe
sarl
adc
push
mov
jp
pop
mov
sbb
jnp
adc
mov
je
dec
les
test
fs
cmc
and
pop
push
out
pusha
icebp
idivl
cs
jnp
and
jno
push
pop
adc
mov
jns
imul
mov
pop
pushf
xor
sbb
dec
cltd
aaa
stos
and
popf
mov
mov
iret
push
xor
mov
push
mov
push
sub
fsts
stos
cmp
adc
jb
ss
mov
mov
testl
js
ljmp
call
sub
dec
in
aas
subb
fstp
inc
pop
push
ja
mov
cwtl
jecxz
mov
dec
cmp
imul
or
les
sbb
cmp
aaa
mov
xchg
mov
dec
and
ret
jl
int3
inc
push
fs
rcll
inc
xor
enter
je
mov
xor
add
sbb
jne
cwtl
push
out
out
mov
mov
test
loope
mov
stc
mov
xlat
inc
add
cmp
outsb
fstl
pop
cmp
cltd
loope
pop
inc
sub
sub
jb
aad
cld
mov
mov
mov
inc
push
push
adc
ret
shrl
cmpsb
inc
pop
mov
add
lock
mov
pop
loope
cld
mov
cmp
ljmp
insl
sbb
jno
fiaddl
movsb
xchg
cmpsl
movsb
subb
test
add
rclb
push
mov
jb
jns
xor
adcb
hlt
ficompl
aad
add
xor
enter
jae
push
xor
push
mov
mov
stos
mov
adc
and
mov
stos
dec
and
xchg
mov
cltd
or
jmp
les
pop
push
mov
mov
or
jecxz
inc
fsubs
mov
rolb
cmp
cmp
mov
rol
aas
int3
adc
shlb
sbbl
mov
mov
dec
cmpsl
add
out
movsl
out
cltd
mov
and
dec
adc
scas
cltd
repnz
fs
shll
mov
cmc
mov
push
addb
shll
loope
push
jns
ss
aad
in
dec
dec
mov
sub
mov
out
xchg
mov
xchg
xchg
xorb
mov
push
lret
jge
jnp
pushf
inc
push
push
lds
and
bound
jge
and
out
lea
pop
aas
pop
jle
dec
inc
jle
xlat
hlt
scas
xchg
cltd
cmp
adc
adc
rolb
cmp
test
fwait
sbb
rcr
rclb
inc
xchg
jae
or
pop
push
jo
dec
ret
and
add
sbb
or
pop
sub
cmp
lret
pop
mov
stos
dec
sub
xor
scas
adc
mov
sub
popf
jge,pt
out
pop
insb
daa
pop
das
xor
stos
cmp
and
pusha
or
std
push
and
lock
sarb
sahf
in
shlb
adc
imul
aad
inc
hlt
pop
add
subl
xchg
popf
js
cmp
mov
mov
lods
js
jae
cmp
es
les
cmp
cmp
gs
mov
test
xor
add
push
cmp
iret
test
addl
xor
xchg
mov
inc
mov
pop
scas
dec
push
sub
movb
fadds
das
cli
sub
mov
lea
and
mov
imul
add
aad
xor
int3
and
inc
pop
adc
inc
sub
and
lret
mov
in
pop
lret
jb
xchg
ret
fsubr
push
adc
dec
call
test
inc
dec
imul
sub
adc
lock
ljmp
push
sub
and
xchg
in
in
xor
jnp
fnstsw
lahf
shll
adc
push
bound
daa
ficoml
push
push
cmp
loopne
jnp
clc
pushf
xchg
or
xchg
push
xchg
ss
sbb
imul
or
jb
test
enter
mov
or
in
in
jge
out
add
fucomp
leave
push
out
pop
fst
mov
push
adc
daa
shll
inc
push
gs
js
pop
popf
ret
loop
adc
lcall
or
or
pop
call
jmp
push
push
adc
mov
icebp
das
test
bound
lcall
in
std
cmp
int
outsb
push
jo
xchg
bound
add
movsb
xchg
xor
jns
int
es
xor
iret
dec
mov
cltd
in
dec
cli
xor
lcall
inc
mov
cmp
inc
xchg
pop
mov
nop
das
push
mov
negb
mov
and
jmp
rolb
mov
popf
jp
xlat
push
mov
out
inc
js
insl
mov
loop
mov
or
push
mov
scas
pusha
or
xor
pushf
or
sub
rep
sub
mov
lea
loopne
pop
push
into
sahf
and
mov
adc
das
pop
xor
push
scas
fdivrl
in
icebp
cwtl
scas
dec
mov
push
scas
leave
jg
outsl
xchg
xor
push
push
aaa
outsl
jno
add
ret
xorl
pop
pop
mov
mov
xor
daa
popf
push
jle
mov
shlb
push
dec
aad
nop
mov
rorl
ss
or
bound
xchg
xor
imul
sahf
test
mov
fucomip
pop
cmp
pop
mov
adc
scas
and
mov
mov
loope
xor
loop
push
push
lea
inc
cld
and
jo
xchg
addb
sub
out
pop
out
dec
aas
aam
add
call
pop
mov
mov
aad
or
imulb
dec
popf
jge
idivl
jo
jp
push
das
pop
mov
ljmp
xchg
shrl
in
jbe
cli
insb
repnz
lcall
add
push
fs
sub
xor
mov
jmp
fsubrl
mov
cmp
cli
test
popa
xorb
test
jo
loopne
and
dec
add
lcall
adc
inc
dec
add
mov
add
into
std
jg
movl
mov
adc
fwait
movsl
xchg
rolb
dec
cmp
lea
or
xchg
movsb
in
jg
adc
or
fstl
pop
sbb
in
stos
mov
sahf
adc
enter
pop
add
pushf
fcomps
sbb
sub
sbb
imul
mov
push
xchg
lahf
sub
adc
lods
xor
outsl
dec
xor
xchg
jecxz
sub
stc
scas
and
sbbb
shll
push
adc
adc
mov
jge
xchg
sbb
cmp
jmp
loopne
in
dec
dec
and
xor
inc
dec
pop
leave
adc
shrl
ja
out
cmc
daa
or
stos
fstpt
loope
scas
les
sbb
std
add
mov
jno
xchg
add
xchg
adc
mov
test
mov
push
sbb
scas
add
mov
push
xchg
out
push
mov
fs
test
mov
jnp
jl
mov
cs
sub
stos
cltd
xor
repnz
cld
xor
into
inc
mov
loopne
push
enter
stos
jnp
popf
push
mov
sahf
cmp
lret
add
adc
jg
push
xor
xchg
pop
in
pop
dec
cwtl
mov
adc
push
xor
dec
xchg
fnstenv
inc
mov
aaa
jge
fldenv
repnz
or
cmp
mov
xchg
jg
mov
add
adc
mov
movsb
fadd
sub
push
add
scas
pop
loopne
negl
or
pop
shrb
cs
sub
mov
cmc
cmp
mov
movsb
mov
cmpsl
bound
add
mov
in
or
jg
sbb
cltd
push
lret
dec
xor
pushf
pop
shr
out
pop
and
enter
loopne
sub
xchg
mov
jge
outsl
dec
mov
stos
test
mov
jl
add
and
fsubp
imul
aas
and
sbb
xchg
lret
add
popf
repz
mov
es
adc
inc
rcrb
cld
and
outsl
mov
add
stc
orb
and
aad
dec
or
loop
leave
mov
daa
inc
xchg
or
shrb
sbb
jbe
add
out
bound
add
add
inc
xlat
cmp
pop
add
adc
and
push
or
and
push
iret
mov
mov
cmpsl
dec
leave
sbb
mov
ret
popf
idivb
dec
add
fcmovnb
sub
fdivl
inc
pop
rol
jae
cmpsl
dec
cli
mov
loopne
ror
jp
pop
mov
or
mov
and
outsl
mov
repz
ss
mov
lock
das
sbb
popa
mov
mov
xchg
pcmpeqb
stc
dec
sub
fwait
jnp
xchg
pop
pop
lret
popa
jg
in
or
in
fldenv
rol
mov
xchg
xor
xorb
mov
cld
negl
push
xchg
push
inc
addr16
push
push
fnstcw
ror
or
push
jnp
sub
popa
sbb
mov
addr16
sti
add
sbb
repnz
cli
xchg
add
mov
pop
movsl
xchg
and
mov
cmpsb
popf
fs
mov
cwtl
shr
fwait
xor
push
repnz
mov
push
daa
repnz
ja
scas
imul
jne
adc
mov
scas
loope
out
xor
in
dec
push
xchg
cmpsl
mov
mov
add
xchg
hlt
dec
mov
fldenv
pop
movsb
push
dec
push
insl
dec
jp
sbb
movsl
shr
pop
xlat
pop
add
inc
inc
rclb
mov
int
cmp
cmp
loop
movsb
pop
clc
adc
jae
jg
decl
push
inc
sub
pop
cmp
fisubs
lret
sti
repnz
xor
adc
mov
adc
sub
jmp
insl
movsb
cmpsb
test
mov
das
dec
imul
enter
nop
xor
adc
call
ret
add
movsb
dec
xchg
cmc
jge
popf
mov
test
rorl
in
fs
sbb
xchg
add
xchg
jno
or
inc
es
sbb
push
pop
jg
push
mov
mov
in
fwait
sbb
adc
mov
pop
orb
pop
shrl
imul
mov
and
outsb
xor
ja
repz
mov
fsubs
scas
pop
imul
xor
lods
inc
mov
imul
scas
sbb
inc
aas
cmc
mov
lods
fidivrl
mov
mov
xchg
lock
imul
sbb
jns
popa
or
mov
bound
push
lds
add
incb
xor
cmp
js
xchg
and
lea
inc
imul
jmp
adc
cmp
xor
ja
or
in
adc
ffreep
movsl
sbb
pop
lock
and
lods
es
es
jecxz
or
fsubs
cmovnp
mov
sbb
or
or
fistpll
push
pusha
fisubl
ja
int3
popa
lods
push
mov
ljmp
and
fstl
dec
or
jecxz
push
stc
dec
add
sbb
cli
sahf
repnz
push
sbb
stc
or
and
orb
jb
fs
or
lahf
bound
xchg
sbb
ljmp
cmp
ret
ss
or
hlt
enter
xor
jl
xor
sbb
jae
sbb
out
sbb
push
lret
lcall
xchg
cmpsl
push
lods
sbb
sbb
sub
push
xchg
mov
pop
pop
inc
cmp
jbe
leave
xchg
leave
out
jge
cwtl
cmc
sub
fisttpll
lcall
sub
dec
iret
dec
jecxz
mov
test
std
fs
into
pop
pop
mov
push
jl
pop
dec
mov
sahf
sbb
dec
xchg
std
in
pushf
out
scas
pop
xor
into
jmp
ffreep
fsub
mov
pop
and
test
cmp
mov
rorb
outsl
mov
sub
pop
xchg
jb
jae
aaa
mov
int3
dec
out
push
fldl
enter
push
stos
xor
inc
je
mov
pop
xchg
ret
add
xor
jl
nop
pop
or
sbb
mov
jno
cltd
lods
inc
dec
push
dec
xor
dec
mov
cmpsl
push
inc
pop
pusha
mov
dec
add
inc
ret
or
mov
pop
mov
adc
jbe
adc
divb
xchg
push
pop
xor
sbb
rcrb
mov
cltd
into
ja
movsl
lret
xor
jne
jle
dec
aas
or
aas
jo
std
sub
xlat
cmpsb
xchg
popa
in
sbbl
inc
xor
jns
and
xchg
xchg
shl
leave
jb
insb
cmp
mov
js
pop
test
int3
inc
jl
and
pushf
lea
pusha
fisubs
gs
stc
sar
out
into
fwait
js
or
adc
inc
cmpsl
xchg
sbb
iret
dec
int3
nop
addr16
cmp
lahf
mov
or
hlt
add
sub
in
dec
pop
mov
out
or
and
sbb
out
mov
and
enter
jns
mov
xchg
add
fwait
xchg
mov
add
mov
or
imul
repz
enter
xchg
mov
dec
gs
add
jg
xor
or
addr16
jmp
call
shlb
fildll
jb
adcl
push
outsb
insb
loop
movsb
xor
cmp
insb
test
mov
jo
std
cmpsl
les
shrb
sub
lods
mov
fistpl
dec
and
add
xchg
mov
xor
movsb
insl
push
dec
int
push
cmpsl
or
out
aam
ja
sub
jbe
add
mov
jecxz
loope
out
pop
jp
jl
jecxz
leave
pop
ret
testl
push
mov
push
mov
test
lret
test
or
inc
jecxz
jne
stos
int
fildll
mov
cmp
pop
mov
cmp
jns
shll
lcall
call
int3
cmp
xchg
vrsqrtss
cmp
lahf
ds
aad
inc
mov
dec
mov
lahf
je
and
and
mov
push
push
mov
sub
lods
jnp
and
mov
jo
mov
mov
aas
shl
jo
xor
and
ror
mov
outsl
add
xchg
jo
and
fisttps
jbe
adc
mov
loope
sub
popa
int
cwtl
sbb
sbb
push
leave
mov
inc
insb
stos
test
fimull
cmp
xlat
push
jne
testl
flds
and
sbbl
sbb
sub
insb
adc
frstor
or
lcall
mov
test
lahf
dec
add
adc
mov
cli
mov
stos
and
or
or
ret
notb
pop
push
addr16
and
lahf
std
mov
loop
lret
mov
in
push
out
or
or
les
adc
mov
paddb
shr
mov
add
ret
je
pop
mov
jg
lods
lret
push
enter
inc
jecxz
fbstp
xor
cltd
pop
movsb
and
xor
punpckhwd
cmp
ffreep
cmp
sub
pop
loop
dec
or
mov
push
cwtl
insb
pop
loop
xor
shlb
shll
dec
jb
enter
xor
mov
fdivrl
jg
mov
sbb
clc
call
add
divb
movsl
mov
dec
pusha
adc
add
jne
add
adc
xor
lds
push
add
outsb
or
fstl
pop
rol
xor
adc
xchg
test
or
xor
les
jno
jnp
pop
rep
mov
insb
xor
add
std
inc
add
mov
js
in
addr16
inc
pushf
out
sub
bound
out
inc
inc
repnz
hlt
push
in
lret
xor
dec
arpl
testb
fistpll
mov
outsl
pusha
xchg
lods
or
and
xchg
xor
lock
mov
nop
xorb
inc
cs
sub
es
pop
in
in
or
jbe
lock
sub
adc
shll
jl
movsl
adc
icebp
rclb
lock
pop
rorb
ds
fbld
fs
pop
push
cwtl
andl
dec
adcl
sub
xor
insb
rorb
dec
enter
mov
movsl
push
xchg
lods
ljmp
jl
and
int3
loopne
cli
xchg
or
adc
xor
xor
push
scas
ds
hlt
cmp
push
stos
imul
sub
mov
adc
mov
push
repnz
cmpsb
std
sub
addr16
pop
and
mov
pusha
jb
or
dec
repnz
je
repnz
jo
adc
loope
jb
pushf
jae
push
jle
xor
add
mov
inc
stos
xor
dec
cmp
jbe
rcrl
mov
std
adc
out
insb
rorl
and
xor
cltd
int3
mov
jge
leave
or
shl
mov
lcall
std
dec
mov
daa
sti
cwtl
ss
cmovne
dec
test
mov
or
add
fs
clc
in
inc
add
lret
iret
andl
aad
cmp
stos
inc
lret
pop
adc
fwait
sbb
loop
hlt
mov
jmp
xor
add
imul
xor
and
das
sahf
insl
jae
aam
sbb
sbb
mov
jno
loop
leave
shrb
xchg
cmpl
scas
cli
icebp
repnz
jl
fisttps
jbe
push
inc
add
inc
rorb
or
push
imul
inc
cmp
lcall
subl
jmp
and
into
push
call
andl
test
pop
stos
xchg
addr16
jge
push
stos
out
loope
fs
repz
sahf
inc
ljmp
or
pop
gs
hlt
xchg
cltd
into
addr16
pop
int
lret
test
lcall
rolb
test
fcomi
pop
scas
insl
pop
mov
ret
cmpb
mov
loop
stos
imul
add
inc
aad
mov
les
sbb
adc
and
push
and
fistps
scas
mov
mov
inc
xchg
mov
mov
push
aam
push
daa
push
sarb
push
xlat
adc
xor
arpl
fs
dec
stc
repz
fldl
dec
add
insl
mov
orl
into
mov
or
in
imul
aas
pusha
push
mov
mov
sti
mov
into
xchg
inc
sbb
xchg
push
outsl
inc
mov
adc
push
xchg
in
add
rolb
sbb
pop
pop
adc
rorl
sti
xor
xchg
out
mov
dec
and
roll
loopne
lea
aas
add
xchg
xor
sub
ja
movsl
bound
into
cwtl
add
popf
lods
inc
mov
mov
cmc
adc
aas
xchg
inc
loop
js
pop
inc
aad
or
jmp
dec
mov
hlt
sub
add
cmp
sbb
cmp
adc
xchg
mov
or
daa
into
cmpsb
pop
jne
in
test
mov
pop
sub
and
add
outsl
add
adc
add
push
pop
add
andb
insb
mov
sub
dec
std
rolb
adc
test
jle
test
pop
clc
int3
sub
jnp
and
mov
pop
call
data16
pop
pop
adc
sbb
pop
push
adcb
fst
cmp
int
mov
mov
out
shlb
push
dec
push
and
fs
mov
pushf
pop
xor
mov
jno
mov
sub
xchg
leave
clc
jmp
test
iret
outsl
mov
lahf
xor
mov
inc
mov
or
push
ljmp
xchg
dec
cmp
lods
incb
inc
ja
test
push
inc
inc
pop
lds
mov
int3
lods
daa
inc
push
mov
pop
add
push
xchg
test
pop
mov
adc
or
mov
cli
or
stos
dec
lods
inc
xchg
popf
mulb
ja
fdivrl
cld
xchg
lock
fs
adc
notl
aam
imul
sub
arpl
dec
push
sub
xor
mov
loope
insl
cli
push
pop
ljmp
pop
xor
push
fldcw
sub
xlat
inc
aaa
mov
fdivrs
cmc
or
push
and
sbb
pop
or
out
mov
fimuls
jns
test
sub
out
xchg
mov
adc
pop
sub
sub
mov
aas
push
push
push
cmp
jae
xchg
xchg
das
pop
push
ror
lret
les
mov
stos
ret
push
cmpb
aas
mov
mov
std
mov
sti
pusha
icebp
xlat
lods
pusha
adc
inc
adc
cmc
mov
hlt
push
mov
sbb
jmp
push
jge
xor
push
lock
and
xchg
sub
jg
addl
push
xor
lahf
icebp
push
or
cld
ja
pop
lcall
mov
scas
cld
jnp
and
out
das
test
hlt
pop
push
and
xor
jns
add
or
gs
mov
cmpsb
dec
xchg
sarb
aaa
push
xor
out
pop
lea
aam
subl
out
ficompl
dec
sbbl
cmp
popf
xor
cli
cmp
sbb
outsb
test
inc
stos
dec
adc
sub
cmc
xchg
imul
xor
jl
sahf
inc
add
ret
inc
fisubrs
sti
sbb
push
push
mov
sub
ds
xchg
jnp
mov
or
lea
sbbb
dec
out
sbb
test
lret
pusha
adc
pop
stos
fsubl
ficoml
dec
arpl
add
stc
xchg
cwtl
lods
or
fdivl
sub
adc
inc
rorb
fsubr
in
push
xchg
xchg
ret
imul
out
add
xchg
mov
sub
loop
das
mov
in
loopne
inc
aaa
mov
ret
xchg
push
push
adc
add
in
sbb
sbb
pop
push
mov
es
fcomi
arpl
xor
pop
xor
cli
in
sub
dec
and
xchg
xchg
push
stos
orps
sub
shlb
pusha
jb
and
jp
repnz
out
adc
leave
mov
iret
jmp
addl
sbb
mov
stos
jns
lea
movsl
sub
arpl
andl
sbb
xor
scas
add
inc
sub
stos
inc
in
mov
push
dec
dec
or
xor
sub
stc
movsb
jp
xor
addr16
pusha
adc
lods
rolb
cmp
rcrl
inc
or
mov
insl
mov
and
xor
xor
and
push
fistps
add
test
cmp
inc
jns
jno
icebp
push
movsb
mov
sbb
mov
ja
pop
and
or
inc
call
jb
or
fldcw
or
cmp
in
frstor
cs
xor
add
inc
ficompl
xor
sbb
mov
cmpb
and
fdivr
in
jl
mov
jnp
push
hlt
bound
sub
lret
enter
inc
pop
test
leave
scas
jno
or
or
inc
xchg
or
test
lods
sahf
inc
xchg
into
cli
mov
sub
sbb
in
in
cmp
mov
mov
pop
pop
pop
leave
pop
sti
cmpsb
testb
fucomi
lahf
jle
dec
fs
xor
je
mov
nop
push
movsb
fmulp
pop
push
pop
es
aam
or
xchg
jne
mov
sahf
push
movsl
pop
fistps
mov
jge
and
insb
in
pop
idivb
inc
sub
adc
shlb
mov
clc
mov
jmp
push
push
sub
cltd
adc
dec
daa
jmp
cmp
pop
mov
jg
nop
ss
add
push
jmp
call
push
in
or
xchg
jb
sub
xor
inc
cmp
xlat
push
repnz
jge
cmp
xor
cwtl
pop
ss
fcmovne
add
movhps
movsb
inc
xchg
or
stos
jbe
mov
test
in
xchg
std
aas
xchg
or
mov
mov
xor
movups
addb
mov
mov
stc
and
stos
sub
sbb
mov
cmc
mov
inc
jl
lea
cld
xchg
dec
fs
sub
out
movb
push
into
add
jecxz
lods
nop
push
add
insl
cmpsb
cmp
dec
pop
rol
xor
cmp
mov
cmp
jo
sbb
pop
sub
mov
xchg
mov
scas
sbb
popa
xchg
arpl
dec
jecxz
cmpsl
dec
pop
leave
jne
arpl
inc
add
xor
mov
xchg
inc
add
dec
mov
xchg
xchg
mov
cmp
repz
outsl
testl
addr16
mov
jmp
dec
movl
push
divb
in
sub
mov
test
mov
xlat
hlt
fisubrs
stc
out
mov
or
mov
mov
icebp
or
sbb
rcrb
shlb
scas
mov
mov
add
mov
js
shll
clc
jmp
aam
aam
imul
mov
loope
mov
jp
movsb
inc
js
sahf
andb
pop
aad
enter
call
int3
and
xor
lea
sarl
or
les
xchg
bound
std
out
mov
mov
inc
fdivrl
push
lds
push
mov
add
cld
xor
mov
adc
push
imul
popa
mov
or
jp
shll
push
sahf
jb
sub
pop
fwait
loop
subb
mov
arpl
test
add
sub
mov
adc
mov
add
mov
out
jo
xchg
cmp
popa
pop
jmp
fidivl
arpl
xchg
fwait
xor
xchg
jno
pop
cld
mov
into
pop
jne
mov
test
jle
pop
stos
into
mov
sbb
inc
dec
shrl
xchg
dec
out
sbb
das
cmpb
jne
lahf
bnd
xor
cs
mov
jo
pop
dec
imul
mov
sub
lock
outsb
cmp
test
lcall
aas
cmp
mov
adc
mov
outsl
push
ret
int
push
mov
cmp
xchg
mov
mov
stos
out
mov
das
aam
push
inc
fwait
push
and
ret
adc
lods
scas
xchg
aaa
cld
and
sub
sbb
mov
lods
leave
and
out
out
insb
add
lods
mov
ror
ret
or
adc
push
push
and
into
adc
in
jb
inc
inc
jae
sub
inc
sub
loope
pop
and
inc
inc
lret
loop
out
idivl
out
stos
mov
jge
bound
lcall
scas
negl
mov
cwtl
mov
adc
ss
outsb
mov
jle
jno
clc
jo
push
and
add
aam
pop
push
js
sbb
mov
fisubs
and
push
cltd
scas
stos
mov
cmp
dec
adc
sbb
adc
mov
push
fisttpl
jecxz
es
mov
mov
or
push
adc
pop
iret
stc
jecxz
outsl
mov
test
push
subl
push
imul
ja
pop
mov
lahf
cmpsl
jle
outsb
cmc
loop
add
icebp
mov
jno
jnp
aam
mov
lea
stc
adc
sbb
mov
aam
push
lock
call
mov
jbe
clc
inc
jns
mov
movsw
dec
in
fcmove
jno
imul
in
das
fidivrl
aaa
fildl
pop
rcrb
icebp
mov
mov
iret
inc
jmp
mov
int
aad
out
adc
mov
jmp
testb
mov
mov
in
mov
fcompl
out
mov
bound
iret
in
lahf
jmp
push
cli
lcall
jge
int
mov
mov
mov
cmp
iret
fmuls
hlt
outsb
mov
inc
mov
adc
shlb
push
iret
sub
or
rcl
inc
lds
inc
sahf
add
or
push
aas
mov
test
imul
inc
pop
mov
xchg
jmp
pop
inc
xlat
xchg
movsl
outsl
sbb
aad
fisubs
cmp
sub
lock
or
mov
hlt
mov
shlw
sbb
int3
add
jp
mov
stos
popf
mov
xchg
cmpsb
dec
push
jno
jle
mov
pop
stc
xchg
icebp
lret
jnp
daa
pop
sub
outsb
add
popa
scas
insl
inc
incb
pop
loope
push
pop
push
shrb
out
popa
push
or
mov
adc
out
adc
jl
pop
in
xchg
mov
rcrb
cmp
es
jbe
jns
add
sub
cmp
out
icebp
fs
movsb
jne
fcoml
lahf
push
sub
xor
test
lods
movsb
mov
push
xchg
stos
or
pop
pop
xchg
add
pop
push
push
int
xchg
push
movsb
and
mov
dec
sbb
inc
pop
or
inc
das
loope
cld
push
int3
in
icebp
int3
pop
movsb
add
mov
jecxz
sbb
push
sbb
repnz
mov
and
jg
aad
sbb
rcll
outsb
inc
mov
shr
test
icebp
xor
jge
pusha
cmp
cmpsb
lcall
enter
pop
je
scas
mov
mov
scas
mov
stos
lret
js
push
cli
mov
aas
jle
lret
push
inc
rorl
out
aad
daa
add
aas
and
jmpw
fisttps
pop
pop
add
pusha
in
xchg
aaa
or
stos
movsl
test
insb
add
push
lret
jge
pop
dec
jle
and
mov
inc
xor
inc
daa
sub
js
daa
sub
mov
xorb
and
fildll
je
sbb
jne
pop
push
test
jg
pop
add
sbb
mov
mov
data16
add
sbb
insl
inc
push
push
outsb
push
jmp
xor
ret
dec
mov
popa
xchg
sarl
insl
sub
mulb
std
shlb
popf
fwait
mov
xor
xchg
sbb
adc
cs
lock
hlt
mov
cwtl
and
xor
mov
lret
nop
out
out
xchg
mov
xlat
dec
aad
jns
sub
insl
or
sbb
xor
lret
imul
fsts
xchg
mov
mov
sbb
clc
lret
push
mov
cli
pop
mov
cmpsl
test
jmp
xlat
paddd
add
dec
iret
cwtl
sub
cld
les
push
cmp
aaa
mull
sub
push
sbb
mov
inc
movsb
sbb
adc
lods
int3
mov
jmp
sub
mov
mov
dec
pop
ja
scas
xchg
and
cmp
mov
and
lods
imul
ds
sub
and
push
xor
pop
dec
pop
cmp
dec
jl
cs
mov
mov
inc
in
or
clc
icebp
adcb
xor
int3
sub
aaa
push
shll
xchg
and
xor
outsl
rolb
clc
faddp
sub
push
stos
sahf
popa
daa
jmp
jb
xor
icebp
out
popf
cld
push
cmc
gs
inc
test
leave
iret
aaa
mov
mov
das
add
jbe
xchg
bound
mov
xor
imul
mov
das
roll
enter
push
repnz
outsb
das
jnp
test
ror
sti
stos
push
lds
ret
xchg
dec
mov
inc
bound
jo
mov
int3
sbb
xor
movsl
fisubl
dec
cmp
sbb
sbb
shll
stos
hlt
xchg
add
or
xchg
dec
jl
fstpl
insb
adc
fstp
mov
jmp
in
mov
push
adc
std
add
repz
je
dec
lock
lret
xor
sbb
mov
leave
cmp
sub
lods
ror
mov
call
inc
adc
cs
xchg
fisttpl
push
mov
aas
push
sbb
sub
xor
inc
iret
jl
xor
add
and
fwait
bound
jp
mov
cmpb
and
fistpl
adc
and
or
jecxz
test
add
insl
dec
or
dec
scas
cmp
mov
mov
pop
mov
push
insl
ljmp
cmp
xor
pusha
jecxz
pop
and
js
orb
add
mov
mov
jmp
out
jmp
insb
inc
shlb
mov
lret
mov
cmp
xchg
dec
or
pusha
jo
loope
inc
jecxz
jmp
cmpsl
sub
into
jo
add
rcll
aad
jge
and
stc
jnp
adc
das
dec
xchg
cld
and
push
xchg
or
cmpsl
out
les
test
mov
lret
jmp
js
sahf
xchg
push
mov
cmpsl
sub
scas
daa
out
pop
dec
xor
iret
or
enter
aad
or
ss
es
mov
pop
mov
nop
inc
and
jmp
pop
or
pop
repnz
adc
dec
and
mov
sub
test
xchg
lret
jge
or
mov
insl
popa
push
fldcw
popa
cmp
xchg
dec
jb
cmp
or
cmpsb
sti
test
push
dec
or
mov
fxch
inc
sub
or
aas
data16
push
push
dec
cwtl
pusha
enter
pop
xchg
loopne
mov
ja
repnz
sahf
pop
pop
daa
and
js
out
jmp
scas
hlt
popa
fildll
push
aas
jne
mov
cmp
dec
lods
sbb
cmp
in
mov
subl
pop
jg
je
loop
lods
xchg
mov
mov
mov
out
test
xchg
xlat
cmp
fwait
mov
or
lods
fistps
sbb
xor
xor
scas
mov
mov
std
inc
jo
adc
jp
movsl
adc
xor
loopne,pt
and
rcrb
out
fistl
xchg
js
push
jmp
arpl
mov
in
push
into
cltd
push
cmp
inc
add
xchg
ja
movsl
add
mov
shrl
sub
jae
cmp
mov
lea
pop
and
lret
lahf
cs
xor
and
jg
icebp
daa
pop
pop
sub
xchg
ja
cmp
fs
pop
insb
sub
movsb
js
sbb
jne,pn
sub
inc
mov
push
outsl
sub
test
pop
rcrl
cmpsl
mov
adc
aad
and
push
sub
sbb
punpckhwd
data16
test
pop
push
pop
imull
add
jp
dec
cmp
lcall
fcompl
mov
test
insb
jecxz
sub
rcll
and
push
push
fwait
pop
add
out
rcrb
leave
or
pop
in
mov
xchg
movsl
push
push
adc
pop
inc
sub
push
sub
pop
daa
repnz
add
or
xlat
je
shll
jno
adc
adc
dec
dec
aad
mov
ret
sub
push
adc
adc
or
push
stc
inc
stc
mov
mov
fld
out
pop
sbb
add
into
dec
and
jge
xor
imul
shll
push
mov
sub
xchg
in
cmc
add
mov
inc
lea
int
je
sbb
xor
xchg
shll
add
jbe
fidivl
fistl
mov
jmp
and
roll
fstpl
mov
mov
mov
divb
dec
jecxz
gs
fimull
push
xchg
push
popa
cld
out
fcmovnbe
mov
lcall
pop
jecxz
and
xchg
pop
scas
and
push
mov
xor
fucomip
sbb
sbb
xchg
loopne
dec
cmpsl
or
adc
jmp
mov
insb
and
in
loope
jmp
das
add
cmp
jnp
int3
fldl
xor
xchg
mov
or
xchg
lds
xchg
fstpt
mov
inc
mov
dec
pop
fwait
mov
popa
movsl
xchg
out
scas
jmp
mov
pop
dec
pop
sbb
mov
pop
mov
mov
sahf
xchg
sub
aas
loope
imul
cmp
imull
ret
movsb
cmp
into
sti
xchg
mov
mov
insw
xchg
mov
sub
push
orl
adc
scas
cld
jb
jo
xchg
loop
cmp
loopne
sahf
loop
sbb
mov
cmc
add
ds
mov
mov
xor
dec
adc
sbb
xor
mov
mov
xchg
dec
xchg
cmp
pop
mov
ljmp
mov
das
dec
decl
sub
and
xor
or
neg
es
or
cmp
lcall
iret
and
in
fidivrs
pop
aam
inc
aad
jno
mov
dec
fisubrs
dec
jb
sub
mov
cwtl
out
daa
fisttpl
jmp
sbbl
scas
in
add
push
popf
dec
repz
push
testb
xchg
cmc
push
cmp
cmp
movsb
enter
fstps
aad
popf
mov
adc
arpl
inc
fcom
repnz
xchg
lock
xor
dec
insl
fnstcw
xchg
inc
sub
ss
bound
shll
lret
test
or
loope
xchg
lea
mov
pop
pop
mov
popa
dec
push
adc
xchg
into
fs
pop
mov
stos
and
fadds
pop
sarl
mov
inc
cld
ficoms
shrb
xchg
inc
and
ds
aam
lahf
cmp
dec
ljmp
repz
jno
into
lea
rcl
sbb
mov
mov
push
imul
pop
push
in
pop
dec
fwait
sub
jp
inc
xchg
imul
and
sbb
insb
pusha
inc
or
pusha
xor
jno
mov
lods
lcall
out
mov
jae
outsb
cmp
pushf
in
mov
stos
pop
adc
sub
or
jb
movsb
lcall
fsts
addr16
in
or
aam
jmp
add
cmc
adc
addl
add
icebp
or
xor
cltd
jecxz
mov
fmull
js
or
fcmovnu
out
rcll
jmp
xchg
insb
out
jne
arpl
xchg
push
lds
nop
pusha
mov
pushf
inc
sub
subb
sub
cmp
lds
add
incb
inc
mov
arpl
mov
ljmp
cmpsl
sahf
push
mov
popf
cmp
lcall
cs
cmp
mov
cmp
jae
mov
mov
gs
cmp
jae
sub
std
adc
xchg
shlb
sarl
mov
mov
aam
int
mov
lods
inc
mov
sbb
or
rcl
notl
push
sbb
add
fldcw
adcl
pop
dec
movsb
sub
jge
in
lock
adc
movsb
ljmp
inc
dec
jns
cmp
inc
mov
insl
mov
rclb
out
mov
xorl
icebp
std
jno
data16
xchg
push
mov
and
mov
insl
sbb
cltd
stos
enter
or
push
xor
mov
addr16
std
leave
out
sub
out
jno
cwtl
out
js
push
and
push
test
add
lds
out
addr16
test
push
mov
dec
sbb
xor
add
lahf
cmp
out
jnp
imul
hlt
and
cmp
push
push
push
or
push
repz
fidivrl
mov
cmp
xor
repnz
arpl
daa
mov
icebp
in
pushf
lahf
xor
add
mov
pop
push
jnp
inc
incb
jbe
mov
mov
jle
dec
xor
push
adc
dec
lahf
and
xor
in
add
pop
cmp
fsubrl
mov
dec
sarb
adc
cli
ljmp
outsb
push
xchg
inc
mov
pop
rcll
ss
test
dec
dec
lods
fimull
pop
fnsave
scas
int
int3
inc
iret
adc
or
adc
add
and
inc
adc
dec
pop
adc
add
fwait
xchg
mov
ja
dec
pop
leave
scas
in
clc
jns
ss
sti
or
mov
add
adc
mull
mov
jns
sahf
int3
in
pop
dec
aaa
outsb
fs
enter
aad
sahf
out
add
movsb
dec
in
mov
imul
adc
mov
arpl
cmpsb
mov
inc
mov
mov
rorl
aam
dec
inc
test
jnp
gs
mov
sub
xor
xchg
imul
lcall
pop
mov
and
and
add
mov
cmp
lods
fcmovbe
dec
daa
xchg
or
stos
jmp
sbb
cmp
int
jmp
fildl
mov
xor
mov
mov
inc
xchg
popf
sbb
sub
daa
xchg
push
fmul
and
pop
fsubrs
add
cmc
in
add
pushf
dec
addr16
add
out
pop
inc
push
add
xor
mov
lcall
add
mov
stc
jmp
iret
jae
ss
dec
in
out
test
int
iret
movsl
fidivs
and
xor
js,pn
sub
jo
sbb
dec
mov
rcl
inc
loope
mov
scas
dec
push
pop
lds
adc
repz
jno
dec
mov
test
cwtl
mov
fistl
sbb
lds
lahf
insl
jp
lods
std
pop
je
fisttpll
cmp
sub
push
push
cmp
movsb
loop
sub
jg
jg
out
test
mov
insb
rcll
inc
mov
xor
add
shr
dec
mov
nop
mov
adc
add
lcall
outsl
popf
jmp
push
xorb
sbb
sub
mov
insl
fsub
cmp
inc
dec
hlt
xor
mov
insb
mov
popa
mov
stc
mov
test
cwtl
jecxz
jo
outsl
in
ljmp
aad
xchg
int
dec
sbbl
cmp
out
lcall
jns
add
leave
xchg
andb
stos
mov
and
gs
lret
cmovbe
daa
test
lcall
pop
inc
mov
scas
mov
movsl
push
add
fs
jno
nop
pop
cld
sbb
in
mov
mov
pop
mov
lret
inc
adc
pop
scas
mov
inc
mov
out
pop
mov
adc
and
es
dec
pop
push
sub
int3
xor
bts
push
pop
mov
popf
and
push
icebp
bound
fstps
in
aaa
and
lds
mov
push
out
mov
jl
mov
add
daa
and
xchg
push
fiaddl
mov
daa
or
cs
and
cmp
stos
lahf
or
sbb
push
pop
xchg
mov
icebp
jno
inc
imul
mov
call
xorl
outsl
and
fisubrs
xchg
fs
ds
pop
mov
fstl
or
mov
aad
scas
mov
mov
mov
xchg
mov
aaa
ljmp
mov
mov
scas
std
xchg
add
fisubs
cmp
and
sbb
test
mov
mov
lret
mov
ret
mov
fsubs
fwait
push
rclb
sbb
ret
shll
xchg
inc
jne
jp
addr16
jb
jp
jecxz
scas
xor
lods
lods
pop
out
inc
clc
stos
cmp
outsl
pop
out
hlt
and
mov
dec
subb
mov
rcll
mov
movsb
mov
xchg
pop
pop
popf
and
andl
or
push
xchg
lret
mov
push
test
scas
or
xchg
dec
icebp
mov
mov
add
movsb
mov
out
mov
pop
repnz
pop
add
jb
fwait
orl
mov
fcomps
or
sub
push
std
mov
fists
adc
push
jae
pushf
sub
faddl
mov
shll
push
repz
mov
push
add
mov
sti
add
cmp
daa
dec
lds
sar
aaa
jae
nop
fcoms
int
notb
pop
xor
int3
sub
outsl
pop
mov
and
fcomp
dec
int
out
shlb
mov
mov
jno
sub
rcrb
test
sbb
inc
cmp
iret
mov
rcrb
nop
mov
or
xor
ds
aad
popf
xchg
cmc
outsl
pop
fimull
in
daa
stc
mov
test
std
xchg
mov
jecxz
mov
ffreep
std
add
jle
dec
mov
mov
adc
call
lret
push
ds
pop
test
aad
shlb
sub
outsb
pop
jbe
mov
sub
sbb
or
fisubl
mov
inc
ljmp
mov
mov
das
jne
inc
inc
mov
sahf
fadds
push
scas
sub
xchg
mov
jae
pop
scas
sub
clc
popa
ret
xchg
das
imul
loopne
and
xchg
lods
cwtl
insb
xor
sbb
pop
mov
adcb
jb
cmpsb
mov
fisubl
addr16
xchg
fnsave
sub
inc
out
cmp
inc
mov
call
ja
aas
xchg
js
jl
cli
mov
push
jg
mov
lods
push
outsl
fidivl
push
lret
xchg
out
mov
jb
mov
pop
icebp
movb
popf
loopne
shrl
xchg
push
mov
xchg
out
fwait
add
in
loop
lds
xchg
test
fwait
pop
popa
outsl
into
call
fidivrs
dec
and
icebp
les
insl
dec
dec
inc
push
scas
jge
push
pusha
fwait
insl
aas
movsb
dec
sti
cs
sub
sbb
dec
sub
dec
out
sub
inc
push
add
mov
into
mov
or
xchg
mov
and
mov
push
sbb
push
and
sbb
addl
pop
pop
sti
push
push
pop
shll
dec
dec
adcl
jno
and
adc
out
out
adc
mov
adc
cmp
lahf
add
cli
ljmp
test
jnp
adc
cld
mov
mov
sbb
mov
fdivs
adcb
mov
ja
ds
fisttps
xor
mov
inc
stos
js
fcmovnb
cs
mov
cmp
or
mov
orb
xchg
jmp
mov
sti
ret
icebp
xchg
pop
and
pop
inc
call
cs
push
fiaddl
or
jl
rcl
iret
xchg
stc
mov
pop
sbb
jmp
jne
insb
enter
loope
sbb
std
gs
push
mov
repz
cmp
sahf
adc
jb
popa
mov
adc
xchg
push
push
ds
xor
pop
add
sarb
and
mov
dec
mov
ds
pop
cld
testl
jle
xchg
cmp
mov
mov
inc
push
pop
inc
out
add
xor
pop
mov
jp
pop
xchg
daa
lret
int
enter
push
push
paddb
hlt
sbb
sub
out
repnz
cld
jge
dec
pop
cmc
outsl
sub
aam
jp
pusha
jns
push
cmp
shlb
lret
jne
lret
mov
cmp
stc
sbb
xchg
loopne
or
popf
addl
sahf
js
bnd
push
adc
inc
in
pop
mov
nop
add
addb
mull
push
or
add
xchg
sub
or
xchg
ljmp
or
mov
in
cmpsb
push
test
push
sub
cwtl
xchg
xor
adc
stos
movb
xor
test
adc
sbb
sahf
sbb
vdivpd
lods
fst
push
je
test
fdivp
aam
ds
jo
stos
orb
mov
loop
jo
orl
xor
call
xlat
clc
dec
imul
inc
dec
inc
jl
aad
xchg
jne
mov
ja
or
or
push
jecxz
dec
stc
ss
or
mov
es
enter
fcmovnbe
push
mov
mov
or
sar
pop
pop
xor
xor
push
jns
jecxz
mov
adc
sub
sbb
stos
sub
push
test
pusha
mov
popf
sbb
mov
bnd
inc
dec
sbb
fwait
in
push
and
imul
pop
leave
push
xor
dec
sub
test
ret
andb
mov
or
ljmp
test
mov
mov
iret
push
pop
sub
pop
push
stos
pop
mov
loopne
sub
orl
lods
pop
mov
inc
add
mov
lahf
test
mov
ret
shr
mov
push
xor
not
fistpl
andl
outsb
mov
fidivs
dec
shll
scas
xor
mov
inc
inc
mov
xchg
add
xor
std
fnstenv
pusha
pmovzxwd
ss
adcl
or
aad
outsb
ret
mov
bound
icebp
dec
push
mov
lahf
in
pop
insb
in
mov
or
or
dec
sbb
push
lock
pop
mov
fs
push
push
xor
adc
dec
push
mov
pop
sub
jg
jge
inc
fstpt
mov
cmp
stos
imul
sarb
pextrw
jl
in
mulb
inc
lds
cmp
pop
pop
ficomps
sbb
jl
cmp
movsl
sbb
jno
icebp
aad
lods
ret
lock
or
popf
es
inc
add
mov
push
mov
ret
push
inc
movsl
pop
sub
in
pop
pop
or
adc
push
cmp
lcall
push
out
xor
mov
push
scas
mov
xor
inc
jmp
jmp
lods
stc
test
fsubrs
cwtl
test
imul
ret
pop
xor
mov
dec
push
add
pop
inc
jno
dec
cmc
mov
mov
js
mov
push
nop
cmpsb
call
sbb
adc
arpl
out
adc
mov
hlt
sub
cmp
jecxz
dec
mov
roll
cmp
lret
jg
in
mov
orl
ss
and
rcll
aaa
push
pop
jl
sti
fldenv
inc
jo
mov
lret
dec
fs
sub
push
sbb
or
inc
cwtl
outsl
pushf
lcall
dec
mov
shlb
enter
mov
and
dec
xor
cmp
mov
lahf
inc
or
movsl
jmp
push
shlb
jmp
std
adc
jge
das
mov
adc
test
das
pusha
aaa
ret
mov
addl
jno
push
xor
call
push
jbe
test
aad
test
adc
or
scas
lods
fs
pop
inc
sbb
push
outsl
mov
std
cld
mov
xor
sub
dec
pop
mov
outsl
insb
scas
adc
out
push
mov
int3
and
aam
mov
adc
or
pop
ret
fldcw
mov
add
shlb
or
pop
adc
scas
pop
iret
pop
or
push
mov
push
loope
movsl
add
or
pop
cmpsb
les
shl
jne
icebp
movsb
mov
jns
sbb
ret
pop
aam
pop
std
mov
in
sbb
jl
idivb
test
xchg
mov
ljmp
and
test
dec
mov
inc
or
jns
cmp
mov
test
inc
cmp
mov
scas
das
mov
bound
aam
xchg
mov
cmp
xchg
addl
sbb
xlat
xor
jb
les
mov
xchg
fnstcw
xor
pop
loope
insl
loopne
cmpsb
xchg
fstp
mov
out
push
lahf
fidivrs
xchg
loop
andb
mov
dec
fadd
mov
add
dec
ds
mov
out
jo
add
std
adc
das
mov
pop
insb
movl
and
addr16
sahf
dec
sbb
clc
sub
dec
lock
or
outsb
test
das
jle
lret
fidivrs
ljmp
mov
shrb
in
mov
xor
push
or
xchg
add
push
cmp
shl
aam
jo
mov
repnz
cwtl
dec
stos
jb
clc
push
or
pop
hlt
xchg
pop
test
push
es
adc
jmp
mov
pop
inc
ret
push
add
std
pop
mov
mov
push
and
pop
movsl
push
out
jnp
int3
sub
add
insb
mov
inc
les
mov
or
push
push
mov
fisubrs
lahf
pop
pop
mov
inc
adc
repz
add
or
xchg
and
popf
push
sub
jge
pop
sub
mov
pushf
popf
xchg
and
mov
jbe
lret
repnz
mov
mov
dec
mov
into
rcrl
testl
push
adc
xor
gs
pop
mov
pushf
sti
and
adc
dec
popa
sub
fsts
pop
loopne
bound
or
xor
mov
imul
push
test
call
std
out
xor
adc
nop
pop
fstps
mov
outsb
jbe
imul
mov
cwtl
sti
daa
repnz
mov
pop
test
xchg
mov
push
xchg
leave
popf
xchg
jle
scas
mov
fadd
sub
mov
stos
jae
leave
js
and
mov
das
add
pop
and
in
les
mov
sbb
xchg
jg
push
rorl
mov
sbb
ficoml
xchg
sbbb
lret
jo
shl
jmp
pop
push
scas
je
sub
mov
idivb
nop
enter
mov
push
test
dec
inc
movsb
cli
inc
aad
xchg
inc
mov
cmp
adc
loopne
push
das
pop
dec
dec
push
sbb
push
ret
dec
mov
mov
sbb
scas
stos
add
addr16
push
addb
fmuls
dec
add
mov
mov
ljmp
xor
shlb
xor
jl
aad
pop
cmc
dec
loopne
pop
ret
imul
xchg
enter
mov
inc
pop
popl
sbb
out
movsl
inc
idivb
sti
movb
sbb
ficomps
jns
xchg
push
aad
push
dec
sbb
or
mov
pop
push
out
or
insl
test
mov
push
add
jmp
stc
push
cmp
push
daa
fimuls
pop
sub
xor
xlat
xchg
in
sub
jae
ja
push
mov
push
jb
pop
test
lcall
lea
call
test
loopne
int3
dec
outsb
mov
pop
xor
mov
mov
ss
mov
cwtl
dec
insb
out
clc
mov
test
in
add
and
ror
sbb
push
jp
sbb
outsl
pop
sub
fimull
or
dec
xchg
and
push
mov
jg
cld
or
lods
adc
sbb
and
aam
hlt
xlat
pop
rcr
movsb
push
sub
ja
jmp
test
xchg
test
inc
imul
adc
cmp
ds
pusha
pusha
ret
in
inc
ss
int3
test
lock
inc
jp
stos
das
lea
fcmovnb
sbb
call
xchg
cltd
ds
popa
ret
sbb
pop
shrl
test
insb
jb
mov
xor
lods
dec
dec
imul
add
mov
sbb
cmp
sub
sub
or
shr
jle
test
mov
sbb
jmp
sub
xchg
and
out
jae
sahf
sbb
mov
push
std
sbb
and
test
mov
insl
stc
mov
jge
adc
push
and
pop
outsl
cmpl
insb
mov
adc
dec
fstps
mov
pop
mov
fmuls
in
xchg
sub
xlat
rorl
or
int3
cmp
cmp
lret
dec
inc
imul
or
aad
nop
popf
mov
jecxz
call
jecxz
inc
mov
dec
mov
push
xor
shll
pop
cld
pusha
jns
xlat
loopne
inc
or
jg
sahf
in
fwait
out
insl
xchg
ds
jg
dec
mov
inc
lods
inc
pop
hlt
out
jmp
aam
fstl
lcall
adc
hlt
inc
aaa
je
xchg
lret
stos
xchg
sbb
in
inc
xor
lret
pop
cmpsb
xor
xor
ret
jo
out
lods
push
xchg
or
jle
mov
enterw
test
xor
pop
inc
outsl
sub
sahf
add
fsubs
mov
adc
inc
or
hlt
sub
pop
ret
or
and
pusha
xor
inc
xchg
mov
push
sbb
and
mov
xor
std
xchg
mov
es
xchg
scas
cmp
push
jmp
adc
push
or
ljmp
lds
jle
loope
jbe
xchg
mov
fisubs
int3
mov
std
aas
add
push
imul
out
xor
pusha
popf
fstl
cltd
mov
push
clc
inc
push
adc
pop
test
or
mov
lret
mov
pop
mov
iret
push
insb
out
jbe
popf
dec
add
xchg
pop
pop
clc
cltd
xchg
xchg
cmp
in
stc
adc
lret
jge
nop
sub
mov
xlat
iret
insb
jg
push
aaa
xchg
test
imul
pusha
fists
adc
adc
sub
scas
push
sub
in
adc
sbb
adc
aam
nop
jb
xor
or
or
lcall
pusha
or
xchg
test
outsb
stc
adc
sahf
daa
je
add
das
loop
orl
out
dec
mov
jo
or
sbb
and
std
dec
dec
dec
jb
dec
add
fmulp
cli
xor
pop
fidivl
pop
clc
push
mov
add
test
inc
mov
pop
sub
mov
orl
int
jecxz
dec
daa
add
sbb
aad
fisubl
push
std
mov
shl
mov
mov
push
repnz
mov
popa
mov
sub
inc
test
jo
lods
scas
mov
mov
inc
lods
xor
dec
and
je
push
adc
mulb
dec
mov
adc
icebp
sbb
ljmp
and
sbb
ljmp
xor
lcall
jae
int3
cmp
sbb
cmp
add
cmp
jg
mov
insl
popa
cmp
lcall
mov
mov
fs
stos
jnp
testb
pusha
les
les
sub
pushf
shll
sbb
leave
pop
in
cld
mov
mov
pop
jle
sub
jecxz
rcrl
cmpsl
inc
je
insl
xchg
lea
ror
stos
je
test
sti
cmpsb
push
out
or
iret
sub
push
pop
xchg
sbb
enter
lcall
stos
loopne
in
push
enter
push
or
xchg
mov
lods
das
jmp
pop
repz
out
mov
loopne
xor
test
push
lea
pop
lret
add
outsl
shll
jb
jno
aad
push
shrb
stos
lahf
loop
das
rcll
jge
test
or
scas
jns
jmp
pop
stos
shr
ljmp
or
out
mov
xchg
test
jecxz
push
jg
inc
mov
mov
xor
in
rorb
ret
shl
or
dec
mov
cwtl
pop
lcall
xor
shlb
cmp
pop
cmp
ljmp
bound
mov
icebp
hlt
push
sub
shrb
movsb
scas
xor
mov
rol
xlat
jg
rolb
je
lret
push
cmp
jno
push
sbb
data16
int3
sti
mov
sbbb
aaa
xchg
mov
push
sub
or
and
fidivs
mov
jmp
das
das
lock
nop
cmp
loop
xor
lcall
mov
fmuls
sub
sti
mov
aaa
js
js
in
cwtl
aad
fcmovnu
sbb
rorb
xor
xor
inc
mov
ffree
loop
cmpsl
outsb
es
stc
dec
xchg
roll
scas
inc
push
push
je
cmpsb
cmp
cmp
icebp
pusha
fucom
jae
sahf
jo
loopne
rcr
push
int
sti
inc
test
adcl
jl
ds
les
xor
xlat
lret
add
mov
js
js
jb
and
adc
mov
loope
cmp
xchg
push
cmp
push
or
mov
inc
bound
cmp
lods
ljmp
subl
imul
xor
insb
mov
xchg
insb
test
fwait
or
test
gs
shr
lcall
dec
jmp
or
in
jmp
mov
push
jne
in
xchg
xchg
subb
jmp
lods
sub
adc
and
popf
icebp
decb
cmp
insb
jnp
adc
lret
pop
movsb
rclb
leave
stc
inc
and
xor
arpl
out
movsb
dec
dec
es
fs
fwait
xor
cmp
mov
sbb
xchg
popf
or
and
cmp
pop
sarl
lret
pusha
sub
xor
add
pop
shll
push
mov
xor
divl
mov
outsl
and
cmp
test
movsl
inc
scas
pop
sahf
pop
mov
or
sahf
int
mov
pop
hlt
cmpsl
push
push
dec
push
sub
ljmp
mov
out
loopne
push
arpl
mov
or
inc
cs
jns
jno
pushf
mov
scas
sub
and
jnp
push
ljmp
mov
addr16
adc
dec
add
fldenv
add
shr
mov
fwait
or
mov
and
jmp
pop
fwait
pop
ret
lahf
cmpsl
and
cmp
pop
std
mov
mov
fistpll
jb
push
cmp
ja
fs
mov
mov
mov
mov
mov
and
adc
les
pop
out
fildl
push
xlat
repnz
sbb
fldcw
and
or
jl
pop
out
lods
ja
loope
lds
arpl
mov
stc
fsubrp
mov
ds
clc
dec
add
fstpt
decb
jp
rclb
fsts
jmp
lret
insb
pop
lds
adc
pop
mov
stc
in
popf
add
aad
jle
bound
rcrb
mov
cli
xchg
mov
add
adc
pushf
mov
cmpb
cmp
adc
mov
mov
sub
stos
sub
jnp
clc
les
push
je
jl
aaa
xor
movsl
jle
psubusw
inc
pusha
push
xchg
push
mov
pop
repnz
and
push
xchg
fmuls
sbb
dec
daa
lock
cmp
cltd
pop
inc
test
mov
mov
cmc
inc
nop
dec
sbb
stos
flds
popf
gs
inc
push
stos
mov
or
push
sub
imul
jecxz
and
out
mov
mov
sbb
fisubrl
jo
and
shll
stos
jae
ljmp
inc
out
or
fs
jl
sub
repz
pop
dec
jbe
data16
repz
aad
dec
cmp
ss
aad
sbb
out
test
cmc
aad
clc
cmp
cmova
inc
mov
jns
pop
mov
cmp
and
in
in
pop
xchg
imul
imul
in
dec
jb
xlat
into
adc
ret
bound
incb
test
movsb
mov
roll
xor
or
sbb
cmpsl
jb
xor
testb
out
sahf
ret
push
arpl
and
sub
cmpsb
inc
add
hlt
adc
test
mov
cmp
shll
cmc
imul
pop
in
pop
sub
cmp
fwait
pop
incb
popa
add
insb
jb
ljmp
lcall
jns
jbe
stos
pop
mov
lods
or
roll
aaa
cmp
jae
sub
fldln2
insb
xchg
in
xorb
ja
mov
jo
cltd
jmp
push
mov
sbb
adcb
jnp
pop
je
pop
pop
out
inc
daa
aam
repnz
in
in
inc
cli
pop
sqrtps
cmpsl
pop
fwait
lret
mov
xchg
in
mov
jge
icebp
outsb
outsl
movsl
push
cmp
xchg
cmpsl
gs
push
decb
mov
push
push
insl
sarb
test
jg
shll
repz
push
pop
mov
rorl
ljmp
fdivl
pusha
cli
arpl
test
repz
shl
loop
and
hlt
int3
daa
repz
inc
nop
mov
scas
push
pop
shrb
fists
push
lea
fs
xor
mov
rcll
popa
mov
xor
mov
mov
les
repnz
shlb
arpl
xor
outsb
shll
lock
aas
xorb
scas
subl
mov
ror
jb
xor
stos
add
dec
scas
adc
or
and
roll
xlat
cs
pop
inc
pop
ss
cltd
add
js
insl
xchg
call
lret
cmp
lds
je
sahf
mov
xchg
std
xor
repz
outsl
pop
scas
push
popf
xchg
xor
inc
pop
pop
ret
mov
out
mov
or
jbe
mov
mov
divl
cltd
cwtl
popf
shlb
repz
out
fistpll
xor
xor
rorb
inc
jb
jb
imul
mov
fidivl
out
add
push
xchg
lahf
push
ja
cmpsb
lods
and
push
jae
gs
imul
subb
aas
hlt
xchg
mov
lret
lret
xor
int3
int3
mov
pop
out
mov
mov
in
xor
pop
pop
cmpsl
test
mov
out
pop
dec
push
cmp
adc
cltd
aas
iret
xchg
sub
js
ja
imul
shrl
pusha
pop
inc
out
ret
xor
fisttpll
pop
jns
cmp
inc
outsb
sbb
dec
outsl
mov
hlt
ds
xor
fidivl
scas
test
jns
cmpsb
add
cmpsl
orl
daa
xchg
das
cmpsl
popa
in
filds
sbb
xchg
in
divl
out
inc
jp
daa
stc
aaa
jl
dec
xchg
enter
sbb
shl
push
mov
into
mov
arpl
sbb
xor
and
xchg
scas
push
cltd
push
pop
cmpb
scas
iret
mov
out
dec
cs
jns
xchg
pop
sbb
ljmp
aam
ret
sub
lcall
aad
xor
jecxz
add
jns
and
loopne
push
out
test
adc
xor
adc
jnp
xlat
lahf
ss
ss
outsl
jp
sbb
mov
ss
xor
addr16
and
mov
rolb
inc
insl
outsb
xchg
mov
rolb
inc
mov
sub
sahf
cmpsb
mov
lcall
jmp
je
xor
mov
leave
js
mov
pop
mov
cwtl
je
cmp
fisttps
jnp
mov
movswl
imul
pusha
mov
out
sti
icebp
gs
mov
in
xchg
and
push
mul
push
sbb
add
cmp
sbb
loop
xor
jb
mov
sub
inc
add
push
lods
push
mov
das
mov
das
pop
mov
sbb
ret
cmp
xchg
dec
xchg
aas
push
mov
and
iret
xchg
add
mov
pop
inc
sbb
adc
es
jp
jae
jecxz
je
mov
aas
xorb
stos
and
jp
or
into
into
in
mov
out
inc
inc
lahf
mov
xorb
test
xor
inc
mov
pop
imul
ss
inc
in
ret
dec
inc
pusha
pop
jb
adcb
repnz
sub
sbb
mov
cmp
mov
xlat
and
cmp
and
jns
std
push
call
mov
jo
mov
sub
mov
push
divl
sbb
xchg
mov
jb
gs
js
notb
imul
sbb
cs
adc
sbb
popa
mov
jg
sahf
aam
push
jmp
add
or
add
mov
and
or
jg
jne
ret
cmpsb
pop
sub
sbb
lock
push
out
mov
js
pop
xor
push
aad
jae
lock
or
call
in
push
xor
inc
ljmp
lds
inc
scas
cs
inc
push
aad
or
dec
stos
stos
xor
sub
imul
test
mov
aaa
cmp
ja
dec
fnstenv
cmp
repnz
pop
pop
lock
cltd
les
inc
pop
and
sbb
imulb
or
pop
repz
push
jb
mov
mov
sub
pop
scas
imul
xchg
addr16
sti
rcll
jmp
dec
mov
or
sub
mov
fldenv
test
scas
repz
mov
mov
clc
pop
xchg
fbld
stos
fwait
xor
call
mov
sub
lock
les
sub
sub
dec
sub
add
sbb
mov
xchg
loope
faddl
bndldx
rclb
movsb
mov
sub
aam
mov
cmp
decb
jecxz
into
adc
inc
dec
in
outsl
movsl
stos
push
stc
push
mov
push
or
cmpsb
sub
push
cmp
scas
cmpb
andl
inc
movsl
hlt
mov
pop
repz
inc
imul
aas
lret
rcrl
movl
and
push
adc
test
lahf
dec
and
mov
jg
lea
jl
cli
iret
mov
stc
popf
adc
jne
movsb
loope
mov
fisubl
or
lods
adc
cli
aas
mov
fs
leave
push
mov
shlb
out
imul
fisubrl
and
push
lcall
les
fs
push
add
jle
gs
lods
sub
cmpsb
ljmp
repz
cmp
and
sub
test
xchg
je
movsl
stc
inc
push
jge
movsb
pop
pop
out
sbb
cmc
pushf
imull
ja
xorb
cmc
into
jbe
jne
into
fs
adc
hlt
ret
cmpsb
xor
pusha
mov
xor
cmp
jb
into
mov
shl
mov
add
nop
ret
mov
cld
sub
daa
ss
jmp
xor
sbb
aaa
mov
xchg
mov
test
aam
es
pop
sbb
and
xor
and
jbe
inc
mov
das
fisttpll
popa
div
sub
pop
mov
cmp
enter
pop
lahf
xor
mov
pop
dec
fdivr
scas
cld
dec
fwait
fs
daa
maskmovq
imull
in
inc
andb
repnz
in
mov
or
out
jl
stc
sbb
xor
sbb
mov
xor
outsl
add
rcrb
adc
cmp
inc
mov
and
aaa
push
push
cmovl
int
mov
data16
or
jne
clc
stc
stos
mov
enter
loopne
lods
pop
inc
test
dec
outsl
stos
push
addb
dec
jb
ljmp
lcall
gs
mov
sar
hlt
dec
sti
sbb
ret
cmp
rcrl
pusha
hlt
jns
or
cs
mov
pushf
push
xor
loop
rcr
push
mov
popf
decb
lret
stos
mov
and
pop
std
xchg
push
sbb
adc
add
repz
adc
mov
popf
cmpsb
add
xor
sbb
cwtl
sub
loop
insb
shll
jno
sti
mov
insl
jne
nop
cli
mul
insl
lahf
stos
sub
imul
pop
xlat
mov
push
dec
or
xlat
repnz
sub
lahf
imul
adc
mov
push
test
lods
push
popf
jno
lock
mov
xchg
dec
ja
test
inc
mov
lret
sub
hlt
or
dec
and
inc
ds
mov
outsb
stos
stos
call
sub
fidivl
leave
dec
mov
mov
into
push
adc
stc
sbb
movsl
in
xor
or
lods
mulb
push
ljmp
arpl
icebp
popa
dec
adcl
std
aam
lret
xchg
sub
stos
jmp
and
notl
stos
clc
shrb
sarb
fadd
das
gs
nop
repnz
test
jnp
inc
rcr
mov
mov
jmp
std
js
nop
inc
out
push
iret
arpl
decb
fwait
je
insb
xor
lock
cmp
rcrl
lcall
repz
ret
test
lret
out
shlb
pushf
cltd
push
leave
negb
stc
loopne
aaa
insb
pop
sub
adc
outsl
jecxz
mov
jnp
stc
test
push
inc
xor
or
pushf
or
sub
xchg
and
pusha
fists
call
rcll
fs
jmp
imul
xchg
repnz
int3
mov
pop
stos
ret
stos
push
iret
adc
sarb
iret
outsb
xor
mov
and
or
rcrb
bound
jle
mov
xchg
mov
xchg
in
adcl
dec
stos
enter
sub
push
xchg
pop
jnp
sahf
out
pop
test
push
in
fstl
sub
xchg
mov
sbb
sbb
cmp
shlb
and
ljmp
cmp
push
sbb
sub
adc
sub
sbb
jl
mov
and
xchg
in
dec
std
test
sbb
xchg
in
jnp
pop
lds
and
xchg
js
pushl
jae
cmpsl
aad
sub
mov
jnp
je
jmp
lock
push
movsb
subl
movsb
and
cld
push
scas
aad
lods
jg
les
pop
in
push
stc
in
in
ljmp
jmp
sarl
shrl
pop
lods
stos
imul
shl
xlat
mov
dec
mov
jp
cmp
dec
pop
loop
cs
and
jne
mov
mov
scas
xor
sahf
jle
add
mov
pop
and
es
push
aam
cmp
aaa
pop
enter
xor
hlt
cli
sarl
stos
repnz
imul
ljmp
mov
stos
aaa
addl
xchg
xorb
aad
jl
imul
jns
jecxz
xchg
aam
pusha
cltd
and
mov
cmpsl
in
cmp
lret
out
sbb
inc
dec
mov
insb
or
fidivrs
and
pushf
push
and
sbb
cmp
push
aas
loop
rcrb
outsl
mov
add
loop
mov
das
push
dec
icebp
dec
fsub
and
inc
mov
jbe
iret
jnp
dec
mov
push
mov
or
sub
pop
jb
lock
add
jp
xchg
mov
int3
mov
popf
movsb
and
pusha
sbb
js
inc
in
pop
jecxz
ds
dec
pop
dec
imul
cmp
and
subb
mov
dec
jne
xchg
outsb
fmul
jne
xor
les
in
mov
push
push
mov
call
jge
ret
push
lods
push
sub
in
jl
jge
pop
add
cld
sub
sub
pop
push
imul
or
push
lds
dec
ljmp
cli
mov
fwait
in
mov
jmp
cmpsb
mov
lods
dec
push
mov
cmp
fwait
out
aas
push
sar
fmull
cmp
jmp
and
repz
mov
push
or
cmpsb
push
sahf
pop
int3
data16
inc
push
incl
jne
inc
push
mov
fistps
adc
test
push
push
out
mov
sub
mov
xchg
into
test
inc
jmp
mov
mov
push
fists
incb
pop
int
repnz
in
jbe
fldl
jle
das
sub
ror
pop
xor
pop
xor
cs
mov
jge
add
sbb
rorl
jne
jmp
and
mov
dec
xor
mov
jle
outsb
ja
dec
sub
dec
xchg
das
movb
mov
adc
jmp
test
rcrl
movsl
int3
mov
sbb
stc
dec
in
pop
mov
enter
dec
xchg
inc
cmpsb
sbbl
cmc
dec
mov
or
xchg
sahf
pop
insb
std
movsb
mov
xchg
loope
rcrb
jle
scas
pusha
movsl
jmp
icebp
repz
ret
pop
sbb
neg
imulb
adc
push
ja
push
push
cmpl
stc
popf
mov
pop
add
jp
pop
in
sbb
xchg
inc
jae
cwtl
adc
daa
mov
ret
dec
shrb
pushf
aam
mov
shl
and
jp
shll
cmpsb
insb
clc
or
lahf
or
shlb
insb
dec
dec
add
cmc
jge
mov
shl
dec
cmpsb
xchg
lods
adc
jg
adc
xchg
dec
mov
sbb
mov
fisttps
movsl
cmp
pushf
out
nop
jp
mov
push
iret
cmpsb
jbe
sti
jnp
fldcw
mov
dec
stos
mov
adc
push
icebp
inc
mov
dec
mov
leave
jecxz
mov
movsl
rcr
adc
mov
cs
or
mov
inc
call
add
out
ficompl
sub
mov
mov
lock
repz
lahf
or
testl
