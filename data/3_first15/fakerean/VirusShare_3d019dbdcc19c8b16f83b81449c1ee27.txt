lea
push
push
mov
movb
push
push
mov
lea
call
lea
movb
call
mov
test
je
mov
push
push
push
push
call
push
call
mov
test
je
mov
push
call
push
call
add
mov
test
movb
je
mov
call
mov
movl
jmp
xor
mov
mov
push
movb
call
push
call
mov
add
incl
add
push
mov
push
push
call
mov
push
push
push
mov
push
call
test
je
mov
push
push
call
mov
test
je
mov
push
push
call
lea
movb
call
mov
test
je
mov
push
mov
call
movl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
cmp
push
mov
jne
mov
xor
cmp
sbb
neg
jmp
mov
cmp
jb
xor
jmp
lea
call
push
mov
mov
mov
call
test
jne
lea
movl
call
xor
jmp
cmp
jne
mov
push
call
push
lea
call
cmp
jne
xor
jmp
mov
mov
push
push
call
lea
mov
mov
push
push
push
call
mov
test
jne
mov
push
call
test
je
mov
call
mov
mov
mov
push
push
push
push
call
mov
add
test
mov
je
test
je
testb
je
mov
mov
lea
push
push
mov
push
push
lea
push
push
call
mov
test
jne
testb
je
mov
push
add
push
push
call
add
mov
push
push
push
push
call
mov
add
test
je
mov
test
je
cmpw
je
testb
je
mov
mov
lea
push
push
mov
push
push
lea
push
push
call
mov
test
jne
testb
je
mov
cmpw
lea
je
push
push
push
call
add
push
push
push
call
add
mov
push
push
push
push
call
mov
add
test
je
mov
test
je
lea
call
lea
movb
call
push
mov
push
lea
movb
call
mov
lea
push
push
call
mov
test
je
lea
push
push
push
call
mov
mov
mov
mov
test
je
mov
mov
sub
cltd
sub
sar
add
mov
test
je
mov
mov
sub
cltd
sub
sar
add
test
je
sub
add
test
je
sub
add
mov
lea
mov
lea
neg
sbb
lea
and
neg
sbb
push
and
mov
neg
sbb
push
and
push
push
push
call
add
lea
movb
call
lea
movb
call
mov
mov
push
call
test
je
mov
push
call
push
call
mov
mov
call
mov
add
push
push
push
push
call
mov
test
je
mov
mov
push
push
call
lea
call
lea
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
push
lea
push
mov
push
call
xor
mov
mov
movl
call
mov
mov
mov
sub
sub
lea
mov
mov
mov
jmp
mov
mov
mov
test
je
add
mov
jmp
xor
mov
test
je
mov
jmp
xor
mov
test
je
mov
jmp
mov
mov
mov
push
mov
push
mov
push
roll
push
and
push
mov
push
mov
push
push
push
push
push
mov
call
test
jne
mov
mov
inc
add
add
cmp
mov
jl
mov
test
je
lea
mov
push
call
mov
mov
test
je
mov
call
mov
push
call
test
je
mov
push
push
push
call
push
push
lea
push
push
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
mov
movb
test
je
push
lea
call
jmp
mov
push
call
test
je
lea
push
mov
call
push
lea
call
mov
test
je
push
lea
call
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
mov
call
lea
mov
movb
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
push
push
call
xor
ret
nop
nop
nop
push
mov
push
push
mov
push
push
call
mov
push
push
mov
call
xor
cmp
sete
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
xor
test
sete
mov
mov
push
push
push
call
xor
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
mov
push
push
push
call
mov
mov
lea
mov
mov
mov
call
mov
lea
push
lea
mov
call
push
mov
call
test
jne
pop
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
mov
push
movb
call
push
lea
call
push
call
push
lea
call
test
je
mov
mov
push
push
call
mov
mov
xor
mov
jmp
mov
mov
mov
test
jne
mov
test
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
imul
neg
sbb
push
and
push
push
push
push
mov
push
push
push
push
call
test
je
mov
mov
push
push
call
mov
inc
add
cmp
mov
jl
mov
pop
test
je
mov
mov
push
push
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
test
je
xor
ret
and
xor
dec
cmp
ja
jmp
cmpl
jne
mov
ret
mov
cmp
je
cmp
jne
mov
ret
mov
cmp
je
cmp
jne
mov
ret
cmpl
jne
mov
ret
cmpl
jne
mov
ret
lea
scas
jp
add
jp
add
jp
add
jp
add
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
mov
push
mov
push
push
push
call
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
ret
mov
sub
push
push
push
mov
push
push
push
call
mov
add
or
test
jne
mov
mov
mov
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
mov
xor
lea
rep
mov
mov
mov
mov
lea
mov
push
lea
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
mov
mov
push
push
push
push
call
pop
pop
pop
pop
add
ret
cmp
jae
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
call
mov
test
je
mov
test
je
sub
lea
lea
lea
shl
push
push
call
add
cmp
jne
test
je
mov
mov
push
call
mov
lea
sub
mov
push
push
push
call
add
lea
push
push
push
push
call
add
push
call
mov
add
lea
push
push
call
push
push
call
add
cmp
jne
dec
test
jg
push
push
call
cmp
jne
mov
push
cmp
jne
mov
push
push
push
jmp
push
mov
push
push
call
push
push
call
add
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
lea
xor
mov
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
je
lea
mov
call
inc
add
movl
call
inc
add
add
mov
add
ret
push
push
lea
push
lea
push
push
lea
push
push
mov
push
push
push
push
movl
mov
call
mov
test
je
lea
call
inc
add
outsb
jo
call
add
lea
lea
push
push
call
add
lea
mov
push
call
push
lea
push
call
add
mov
push
call
lea
push
lea
push
mov
push
lea
push
push
push
push
push
push
movl
movl
call
test
je
lea
call
inc
add
outsb
insb
push
call
add
lea
lea
push
push
call
add
lea
push
mov
call
lea
push
push
call
add
mov
push
call
push
mov
movl
mov
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jns
inc
add
add
xor
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
test
je
mov
test
je
mov
jmp
xor
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
push
mov
call
mov
mov
call
neg
sbb
mov
and
push
call
push
mov
call
mov
mov
call
neg
sbb
mov
and
push
call
push
mov
call
mov
mov
call
neg
sbb
mov
and
push
call
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
xor
mov
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
push
mov
movb
movl
mov
call
mov
mov
mov
rol
add
add
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
add
fstpt
inc
add
add
mov
mov
mov
push
call
mov
add
cmp
je
lea
push
push
push
call
add
test
je
mov
mov
shr
and
mov
push
call
mov
repz
add
add
mov
call
push
push
push
push
mov
call
push
call
add
mov
push
call
mov
call
push
mov
call
mov
mov
push
push
push
push
call
push
lea
call
mov
mov
push
push
push
push
call
push
push
mov
push
push
call
lea
push
mov
pminub
add
in
add
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
sub
mov
mov
dec
mov
add
add
adc
test
je
mov
lea
push
mov
inc
jecxz
add
add
mov
add
add
add
lds
push
call
mov
xor
inc
add
mov
push
push
call
mov
insl
fldl
loop
sldt
cmp
jne
mov
mov
add
cmp
jl
mov
mov
push
push
push
push
call
mov
imul
enter
add
mov
mov
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
setne
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
mov
test
je
mov
jmp
xor
push
push
mov
call
mov
call
mov
xor
cmp
sete
push
push
mov
call
add
call
mov
call
pop
pop
ret
nop
nop
nop
push
mov
push
call
test
je
mov
test
je
push
mov
call
cmpl
jae
push
mov
movl
call
mov
mov
cmp
jbe
push
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
test
jne
mov
test
je
xor
mov
push
push
call
mov
call
pop
pop
ret
mov
mov
push
push
call
mov
call
pop
pop
ret
push
push
mov
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
test
je
or
mov
mov
lea
add
mov
push
mov
push
call
mov
add
test
je
mov
push
push
push
call
add
push
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
mov
test
je
lea
call
mov
xor
mov
lea
mov
push
mov
push
mov
movl
mov
call
lea
push
push
push
push
call
cmpw
je
lea
push
push
lea
call
mov
lea
push
push
push
call
add
lea
mov
movl
call
jmp
mov
push
push
push
mov
call
push
mov
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
xor
lea
mov
call
mov
mov
mov
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
mov
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
push
push
mov
mov
call
add
mov
test
je
mov
mov
call
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
push
push
push
mov
push
lea
call
mov
xor
lea
lea
rep
lea
lea
mov
lea
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
movl
mov
mov
mov
movl
call
cmp
je
push
call
add
mov
cmp
movb
je
mov
call
jmp
xor
push
lea
push
push
push
push
mov
movb
mov
mov
movl
movl
movl
call
mov
push
push
push
push
push
call
mov
call
mov
mov
push
push
push
push
call
or
push
mov
push
push
push
call
mov
push
neg
sbb
and
add
push
call
mov
add
cmp
je
mov
push
cmp
push
mov
je
call
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
lea
push
push
push
mov
call
push
mov
call
push
push
mov
call
push
push
mov
call
jmp
call
push
lea
call
push
call
add
xor
push
lea
call
mov
push
push
lea
push
push
push
mov
call
mov
push
lea
push
push
push
call
add
test
je
lea
push
lea
push
push
call
add
lea
lea
push
push
push
call
mov
add
push
push
push
push
push
push
push
mov
call
push
call
mov
add
cmp
je
mov
mov
push
lea
push
push
lea
push
lea
push
mov
lea
push
push
push
mov
call
add
cmp
jne
mov
cmp
jbe
push
push
call
add
test
je
mov
push
lea
push
push
mov
push
mov
lea
lea
push
mov
lea
push
push
push
call
add
test
jne
mov
dec
je
sub
jne
push
push
push
push
push
lea
push
push
mov
call
push
push
push
push
push
push
push
push
mov
call
jmp
push
call
mov
mov
add
add
xor
mov
test
jbe
mov
mov
mov
add
testl
jne
mov
lea
push
push
push
push
push
call
add
cmp
je
cmp
jbe
cmp
ja
mov
jmp
xor
jmp
mov
mov
push
push
push
push
push
push
push
lea
call
push
push
push
push
push
push
push
push
lea
call
mov
mov
mov
inc
add
cmp
mov
jb
jmp
test
je
push
call
add
mov
push
push
push
push
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
mov
push
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
lea
push
mov
mov
push
push
mov
mov
call
mov
mov
lea
push
push
push
lea
call
testb
je
movl
movl
push
push
push
movl
call
push
call
push
lea
call
mov
push
push
call
push
call
push
push
push
push
push
mov
call
movl
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
push
xor
push
push
push
push
lea
call
lea
mov
call
cmp
jne
lea
lea
push
call
mov
push
push
push
push
push
push
push
call
lea
mov
call
cmp
jne
movl
jmp
mov
push
push
push
push
call
cmp
jle
push
lea
push
push
push
push
lea
movw
call
push
lea
push
push
call
lea
push
lea
add
arpl
add
add
lea
lea
or
push
push
xor
repnz
not
dec
push
lea
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
call
movl
lea
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
xor
lea
mov
call
movl
mov
mov
mov
mov
lea
movb
push
movl
movl
movl
call
push
lea
or
inc
add
add
decl
add
xchg
add
add
add
add
scas
lea
add
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
movl
movl
mov
cmp
je
push
call
lea
push
call
lea
mov
movl
mov
movb
test
je
push
call
add
lea
movl
movb
call
mov
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
push
mov
call
push
mov
call
pop
pop
ret
push
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
call
lea
call
mov
mov
push
push
push
push
movl
call
mov
or
push
push
push
push
call
push
lea
call
mov
push
push
lea
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
lea
push
push
movw
call
push
lea
push
push
call
add
lea
push
push
push
call
lea
mov
movl
call
mov
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
lea
push
push
call
add
test
jne
push
call
pop
pop
pop
add
ret
mov
push
xor
push
push
push
push
call
push
call
mov
add
cmp
mov
jle
lea
mov
lea
push
push
lea
push
call
mov
add
lea
push
push
push
push
push
push
push
mov
call
mov
mov
push
push
push
push
push
push
push
push
mov
call
mov
lea
mov
push
push
push
call
mov
mov
cmp
jne
call
mov
lea
push
push
push
push
call
lea
mov
push
push
push
call
lea
mov
push
push
push
call
lea
push
push
jmp
push
lea
push
push
call
add
lea
mov
push
push
push
call
mov
lea
mov
push
push
push
call
add
lea
push
push
push
mov
call
mov
lea
mov
push
push
push
call
add
lea
mov
push
push
push
call
mov
lea
push
push
push
mov
call
mov
mov
inc
add
cmp
mov
jl
mov
call
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
mov
push
test
mov
je
mov
test
je
movl
call
mov
cmp
je
push
push
call
test
jne
mov
call
mov
push
call
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
lea
push
mov
mov
push
push
mov
mov
call
mov
mov
lea
push
push
push
lea
call
mov
mov
test
je
xor
movl
mov
push
push
push
mov
call
push
call
push
lea
call
testb
jne
mov
push
push
push
call
mov
push
push
call
push
call
push
push
push
push
push
mov
call
movl
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
xor
push
push
lea
call
mov
mov
mov
call
mov
call
mov
or
cmp
movb
je
push
push
lea
call
lea
mov
push
call
cmp
jae
lea
lea
lea
mov
shl
add
mov
rep
or
push
call
cmpw
pop
je
mov
push
call
test
je
mov
call
mov
lea
push
push
call
push
lea
push
push
call
lea
push
lea
push
push
call
mov
mov
add
lea
push
push
push
lea
call
movb
call
mov
call
lea
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
mov
push
mov
mov
cmp
jae
mov
lea
lea
shl
mov
test
je
cmpl
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
call
inc
je
mov
push
lea
push
push
push
push
call
mov
mov
call
mov
pop
pop
pop
movl
ret
mov
pop
pop
movl
ret
mov
push
push
push
mov
sub
push
push
mov
push
push
push
mov
push
call
lea
test
je
call
test
je
lea
call
lea
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
push
lea
push
push
mov
call
lea
push
push
call
push
lea
push
push
call
lea
push
push
call
add
lea
mov
mov
push
push
push
push
call
lea
mov
cmp
jae
mov
lea
lea
lea
shl
lea
push
push
push
call
mov
lea
sub
mov
sar
sub
mov
push
lea
push
push
call
add
lea
push
call
test
jne
mov
push
mov
mov
push
mov
push
call
cmp
je
test
jne
mov
push
call
pop
pop
lea
movb
call
lea
movl
call
mov
pop
pop
mov
add
ret
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
lea
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
lea
lea
shl
lea
add
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
lea
shl
push
call
mov
mov
mov
mov
lea
lea
shl
mov
shr
rep
mov
and
rep
mov
mov
sub
lea
lea
shl
add
lea
lea
xor
shl
mov
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
lea
shl
push
push
call
pop
pop
pop
pop
add
ret
lea
lea
mov
shl
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
add
call
add
mov
pop
ret
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
xor
mov
mov
movl
mov
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
ret
nop
nop
nop
mov
mov
push
mov
and
push
call
ret
nop
nop
nop
mov
push
push
mov
push
mov
push
call
push
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
xor
push
mov
mov
push
call
mov
lea
push
push
call
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
je
cmpl
jne
mov
mov
add
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
call
mov
mov
mov
and
je
mov
mov
cmp
jg
mov
mov
cmp
jle
movl
mov
dec
cmp
ja
jmp
mov
mov
jmp
cmp
jg
mov
cmp
jle
movl
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
cltd
xor
sub
cmp
jge
mov
xor
cmp
jne
cmp
mov
je
test
je
mov
test
je
mov
jmp
test
je
mov
test
je
mov
jmp
xor
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
jge
cmp
jge
mov
jmp
xor
mov
mov
cmp
jge
mov
mov
cmp
jge
mov
jmp
xor
sub
cltd
xor
sub
cmp
jge
test
je
mov
test
je
mov
movl
jmp
mov
mov
mov
sub
cltd
xor
sub
cmp
jge
test
je
test
je
mov
movl
jmp
mov
mov
sub
cltd
xor
sub
cmp
jge
test
je
test
je
mov
movl
jmp
mov
mov
sub
cltd
xor
sub
cmp
jge
test
je
test
je
movl
mov
mov
test
je
dec
cmp
ja
jmp
mov
test
je
mov
mov
sub
mov
test
je
sub
mov
jmp
mov
mov
test
je
mov
mov
sub
mov
test
je
mov
jmp
mov
test
je
mov
mov
sub
mov
test
je
mov
mov
sub
mov
jmp
mov
mov
test
je
mov
mov
sub
mov
test
je
mov
sub
mov
xor
mov
mov
mov
mov
mov
test
je
mov
xor
and
je
mov
mov
mov
mov
sub
mov
sub
shr
jmp
mov
mov
mov
mov
sub
sub
mov
and
test
jne
mov
test
jne
or
test
je
cltd
xor
sub
cmp
jge
or
test
je
mov
mov
sub
mov
jmp
mov
mov
sub
mov
test
je
mov
cltd
xor
sub
cmp
jge
mov
or
testb
je
mov
mov
sub
mov
jmp
mov
mov
sub
mov
cmp
jne
mov
call
test
jne
mov
testb
je
mov
mov
cmp
je
jmp
mov
mov
cmp
je
mov
xor
cmp
sete
inc
mov
cmpl
jne
mov
testb
je
mov
mov
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
sub
sub
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
push
mov
inc
add
inc
add
inc
add
movsl
inc
add
movsl
inc
add
inc
add
inc
add
or
add
xor
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
mov
push
mov
push
xor
call
lea
cmp
ja
jmp
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
mov
push
push
call
pop
pop
pop
pop
ret
mov
push
push
mov
call
pop
pop
pop
pop
ret
mov
mov
inc
add
test
add
test
add
inc
add
inc
add
add
nop
nop
nop
nop
nop
nop
nop
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
mov
mov
push
xor
mov
cmp
je
mov
push
call
mov
cmp
push
je
push
call
add
mov
cmp
mov
je
mov
call
jmp
xor
push
lea
push
push
push
push
mov
movl
mov
mov
movl
movl
movl
call
mov
push
push
push
push
push
call
mov
call
mov
cmp
je
xor
push
mov
push
call
mov
add
cmp
je
mov
cmp
je
mov
lea
or
mov
mov
rep
xor
push
push
mov
call
push
call
add
mov
push
mov
call
cmp
pop
je
mov
neg
sbb
and
add
push
mov
call
cmp
jne
push
push
mov
call
push
push
mov
call
mov
push
push
push
call
mov
pop
pop
pop
mov
add
ret
push
mov
call
cmp
je
xor
push
mov
push
call
mov
add
cmp
je
push
push
mov
call
push
call
add
jmp
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
call
mov
lea
push
mov
push
call
mov
movl
mov
mov
test
je
test
je
mov
pop
sub
mov
pop
add
ret
push
call
mov
shl
neg
sub
mov
add
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
mov
push
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
call
mov
mov
push
push
mov
push
push
call
test
je
mov
push
push
push
mov
push
call
test
je
mov
push
push
push
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
xor
lea
rep
lea
mov
push
movl
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
push
push
push
mov
call
test
jne
mov
mov
push
call
test
je
push
mov
call
pop
pop
ret
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
call
push
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
add
jne
mov
mov
or
mov
add
add
add
mov
jnp
add
movb
lret
call
mov
mov
push
push
mov
push
push
call
cmp
jne
mov
push
push
push
push
call
push
call
mov
lea
push
push
push
call
lea
push
push
call
add
mov
call
lea
push
call
push
mov
call
test
je
mov
mov
neg
sbb
push
and
push
mov
push
push
call
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
movl
movl
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
xor
push
mov
push
push
mov
call
lea
mov
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
call
mov
push
push
push
push
call
call
inc
add
push
mov
lea
rep
lea
movl
push
call
mov
pop
cmp
jne
cmpl
jb
cmpl
jae
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
call
test
jne
push
push
mov
call
mov
call
mov
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
call
test
je
push
mov
call
mov
mov
cmp
jae
push
mov
mov
call
mov
mov
cmp
jbe
push
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
xor
push
lea
mov
call
push
mov
call
mov
mov
lea
mov
push
mov
mov
mov
movl
mov
mov
call
cmp
je
lea
push
push
call
cmp
je
lea
lea
push
call
push
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
call
lea
movb
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
push
mov
movb
movl
inc
add
add
add
add
add
xchg
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
inc
add
add
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
call
lea
call
push
lea
movl
call
mov
mov
push
push
call
mov
call
mov
call
mov
call
lea
movl
call
add
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
call
lea
lea
push
call
mov
movl
call
mov
test
je
mov
test
jne
mov
test
je
push
mov
call
mov
test
je
mov
test
jne
push
mov
call
mov
mov
push
push
call
add
test
je
push
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
jne
movl
call
neg
sbb
neg
inc
mov
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
mov
movl
or
mov
lea
call
inc
add
add
lea
movb
call
inc
add
push
push
lea
call
lea
push
lea
call
lea
lea
push
call
lea
lea
push
call
lea
call
cmp
jne
mov
test
jne
mov
test
jne
push
mov
movl
call
inc
add
enter
mov
call
lea
movb
call
inc
add
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
xor
mov
push
push
call
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
mov
mov
push
lea
xor
push
push
mov
call
add
test
je
mov
cmp
jne
mov
movl
jmp
lea
push
push
push
movl
call
push
lea
or
xor
repnz
not
dec
lea
push
push
call
add
and
mov
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
push
mov
call
mov
movl
call
mov
pop
ret
push
push
mov
push
mov
push
push
mov
lea
call
mov
movl
test
je
push
lea
movl
call
mov
push
jmp
push
lea
movl
call
mov
push
push
mov
call
lea
movl
call
mov
pop
mov
add
ret
nop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
call
push
lea
movl
call
lea
push
push
movb
movl
call
lea
xor
mov
add
mov
mov
mov
mov
movl
call
test
mov
je
push
push
call
mov
push
push
push
push
call
adcl
sub
push
push
push
push
push
push
lea
push
call
mov
lods
add
iret
in
addb
add
les
add
add
add
lds
add
bound
int
mov
clc
xchg
add
xchg
pop
pop
mov
insb
not
add
add
sub
pop
popl
push
push
push
call
sti
mov
jbe
add
loope
cmc
arpl
je
fidivrs
fisttpll
outsl
fwait
add
std
add
mov
cwtl
imul
fbld
add
adcb
mov
lods
pushf
ja
jns
add
add
scas
lods
js
out
mov
sub
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
add
cmpsb
mov
jge
add
test
add
test
test
add
add
xorb
add
add
data16
cmpsb
cli
in
cli
add
add
add
push
hlt
mov
add
mov
add
add
jge
add
clc
popa
push
add
add
sub
pop
push
push
push
push
push
call
mov
add
std
gs
push
js
add
mov
movb
cmpsb
add
jmp
stc
mul
addb
out
add
mov
arpl
in
add
jno
fcom
add
js
sub
pop
call
push
push
lea
push
push
push
push
lea
push
call
in
test
add
out
pop
lret
les
out
mov
add
add
add
push
xchg
pop
lock
scas
pop
mov
mov
mov
je
in
in
lcall
add
mov
add
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
aad
pop
add
add
add
fldl
lea
add
neg
add
mov
mov
stc
add
xchg
fistl
roll
mov
add
test
jne
add
mov
cmc
add
sub
pop
jmp
ret
push
push
push
lea
push
push
push
lea
push
push
call
nop
test
add
add
add
add
push
popa
ret
negl
add
cmpb
icebp
fstps
mov
add
lcall
inc
hlt
push
push
push
lea
push
call
rol
lds
mov
add
bound
addb
add
mov
mov
mov
add
stos
stos
add
add
in
lock
lcall
pop
hlt
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
xchg
add
in
add
testb
mov
xchg
add
pop
add
imul
add
jno
test
les
add
mov
call
add
int3
add
ljmp
push
add
pop
in
push
lea
push
push
push
push
call
cwtl
rolb
mov
pop
hlt
xchg
add
mov
add
mov
add
sti
flds
add
movsl
hlt
jmp
add
add
repnz
lret
andl
mov
add
mov
add
aad
add
fadds
ret
add
add
push
push
push
push
lea
push
lea
push
push
call
mov
shrb
push
add
into
add
mov
cmpsl
enter
mov
xchg
add
mov
add
scas
in
movb
add
ret
filds
push
add
nop
mov
add
aad
negl
sahf
nop
je
cmpsl
stos
movsb
lea
add
ret
add
add
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
xchg
movsb
mov
mov
fwait
add
xchg
cli
into
cmc
push
add
sahf
fildl
addr16
add
mov
ljmp
xchg
push
sub
pop
xor
push
push
push
push
push
push
push
lea
push
call
stc
add
icebp
add
jbe
add
push
int
lret
add
add
pop
mov
xchg
outsl
mov
mov
loopne
lcall
les
clc
ficompl
sub
push
or
inc
add
sub
sub
add
pop
shr
pop
push
lea
push
lea
push
call
jmp
lea
add
add
rolb
add
mov
pop
add
shrl
add
mov
ljmp
sub
pop
pushl
push
push
push
lea
push
call
sub
add
add
jnp
mov
bound
push
pop
jmp
cltd
test
add
mov
jl
add
mov
xchg
add
mov
scas
add
mov
add
add
add
pop
push
mov
add
lock
lcall
jge
add
push
push
call
div
add
add
mov
loope
add
mov
in
mov
xchg
sti
insb
add
mov
xchg
shrl
cld
cmpsl
into
add
jno
mov
add
lcall
inc
lock
push
lea
push
lea
push
push
push
lea
push
call
shll
bound
out
add
icebp
add
dec
add
add
xchg
mov
add
jnp
pop
push
loope
lahf
pop
in
add
xchg
pusha
jno
cltd
add
sbbl
jmp
fiadds
test
add
add
fwait
scas
add
shlb
fwait
sub
pop
lea
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
jge
cmc
aad
test
xchg
hlt
addr16
fcmovb
icebp
imul
pop
ljmp
mov
add
mov
subb
jbe
add
pushl
push
lea
push
lea
push
push
push
push
push
push
call
add
add
test
out
shl
stos
gs
add
pop
into
jae
add
call
xchg
add
cld
pop
add
jecxz
nop
lods
add
sub
pop
pushl
push
push
push
call
nop
cmc
add
fbld
add
cld
fsubl
mov
lds
push
add
add
jecxz
mov
add
mov
add
sahf
int
xchg
fsubl
ret
stos
cmc
add
add
add
add
add
mov
scas
je
jbe
add
add
mov
hlt
pop
call
pushl
push
push
lea
push
push
push
push
push
call
push
int3
add
add
mov
pop
add
add
mov
add
add
cmpl
mov
outsl
loope
lock
lds
xchg
pop
mov
add
add
lea
mov
stc
xchg
fsubs
shlb
cld
add
lcall
jne
call
push
push
push
push
pop
add
lea
rol
sub
add
pop
inc
add
pop
push
lea
push
push
push
call
add
gs
add
clc
roll
add
stos
add
push
loope
test
add
imul
int3
stos
add
popa
jp
add
sbbb
add
add
add
test
add
addl
add
sti
fadd
add
add
mov
xlat
add
fnstsw
lcall
jne
push
lea
push
push
push
lea
push
push
call
jge
add
stc
pusha
outsl
push
add
add
enter
in
add
cmc
fst
addb
add
std
loop
mov
rolb
repnz
add
lea
add
shll
filds
fiadds
add
mov
sarl
call
call
push
push
push
push
call
fisttpll
push
stos
add
pop
push
cmpsb
xchg
pop
ret
ljmp
sarb
add
ja
add
add
push
jno
add
add
add
call
add
les
in
jno
add
add
add
lcall
inc
push
push
sub
ror
sub
ror
push
push
pop
add
rol
shr
dec
sub
rol
sub
pop
sub
not
xor
pop
push
push
push
push
push
push
push
push
call
aad
pop
ja
into
fildl
rolb
xchg
add
lcall
add
add
in
push
add
bound
ror
mov
add
add
jno
mov
popl
add
add
jmp
push
pop
pop
push
jle
adcb
add
jns
mov
icebp
out
aad
fldl
sub
pop
push
push
push
push
push
lea
push
push
push
call
iret
gs
add
add
add
test
jno
xchg
xchg
into
add
mov
loop
jmp
or
imul
mov
scas
lods
add
xchg
add
push
mov
add
add
add
out
clc
imul
ret
mov
add
add
add
add
lcall
add
and
mov
call
pop
pop
lods
add
add
shl
loop
add
add
add
add
add
jp
add
add
xchg
stc
add
rorb
push
lea
push
push
push
push
lea
push
call
pop
je
cmc
jmp
add
cmc
add
lea
add
mov
add
add
movsl
add
add
fs
add
test
jnp
push
int3
faddl
push
fsubl
add
ret
cwtl
outsl
pop
data16
add
add
jmp
shl
movb
jle
sti
bound
aam
push
sub
pop
push
push
push
push
push
push
push
call
in
push
jp
pop
negl
imul
adcb
iret
add
add
ficoml
add
xchg
add
clc
add
add
add
add
mov
mov
add
sub
pop
push
push
push
push
push
push
call
push
arpl
jbe
pop
add
les
lahf
jecxz
add
jecxz
mov
jle
mov
add
mov
jmp
add
xchg
pop
test
rorl
add
sub
pop
mov
push
push
push
call
stc
mov
jp
add
fiaddl
fwait
in
fwait
add
nop
jp
mov
mov
mov
mov
add
lcall
add
mov
mov
add
jbe
jo
jbe
add
icebp
jle
add
test
fsts
add
pop
in
add
push
push
lea
push
push
lea
push
push
call
mov
mov
jl
jmp
ja
add
cmpsl
add
mov
add
repnz
mov
out
insb
ret
mov
out
add
fwait
clc
cmpsl
add
movsl
add
addb
addr16
add
test
add
add
cli
js
or
add
hlt
sub
pop
add
push
lea
push
push
call
add
add
xchg
iret
add
int3
leave
imul
mov
scas
mov
push
xchg
add
ja
mov
lcall
repnz
hlt
pop
mov
xor
push
push
push
push
lea
push
push
push
lea
push
call
in
jmp
imul
jb
mov
leave
lcall
pop
rolb
pushf
mov
add
jmp
add
pop
cmpsl
mov
add
push
add
data16
add
add
jnp
add
popl
mov
cli
mov
add
mov
add
add
jne
push
lea
push
push
lea
push
lea
push
call
movsl
jle
cmpsl
add
mov
out
cmpsl
add
mov
xchg
mov
enter
push
add
add
add
add
jmp
add
add
add
xchg
jnp
mov
jb
jle
fistl
add
popf
mov
xchg
add
fwait
jbe
pop
addb
add
lcall
push
push
lea
push
call
pusha
mov
mov
add
arpl
aam
add
push
mov
mov
pop
add
jmp
cmpsl
fwait
xchg
loopne
push
add
jp
in
notb
enter
jecxz
shlb
push
mov
add
mov
push
loopne
aam
in
hlt
pop
mov
push
push
lea
push
push
push
push
call
ja
mov
rcll
ljmp
add
fiadds
sbb
shrl
mov
pop
push
add
add
fidivs
push
scas
pop
mov
add
mov
push
pop
add
add
add
add
roll
add
rclb
add
add
mov
add
push
push
push
push
push
call
jbe
mov
leave
add
xchg
add
add
mov
jae
cwtl
cltd
add
mov
jb
leave
movb
jmp
mov
add
add
mov
movsl
pop
add
add
scas
jge
sahf
add
xchg
movb
pop
shl
jge
rolb
add
add
jns
mov
adc
add
push
push
push
lea
push
call
jnp
in
xchg
add
cli
add
cmpsb
add
fisttps
mov
jecxz
ret
cli
jl
add
movl
add
push
xchg
popf
arpl
lock
cmpsl
out
add
add
mov
enter
jmp
add
add
xchg
add
pop
incb
in
add
out
xchg
popf
add
fwait
sub
pop
add
push
push
push
push
push
push
push
push
call
add
xchg
shrb
xchg
pop
jae
xchg
add
sarl
xchg
pop
mov
mov
cmpsl
jo
in
loopne
lcall
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
out
mov
test
jne
add
rolb
jge
add
add
cwtl
out
add
mov
jne
push
add
add
roll
incb
test
stc
add
cli
cmpsb
movsl
add
add
add
flds
cli
lret
mov
fnsave
xchg
test
jb
lods
add
lcall
or
push
push
push
push
push
push
push
push
push
call
add
pop
imul
add
mov
add
add
movb
mov
neg
xorl
push
lock
stos
lcall
out
add
loopne
pop
mov
add
push
push
push
push
lea
push
push
push
call
addl
add
xchg
stos
add
mov
add
add
add
add
fadd
int
add
add
add
add
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
lahf
ljmp
pop
call
mov
cld
add
add
push
add
shl
add
mulb
loop
mov
in
mov
xor
push
push
push
push
push
call
gs
add
add
xchg
add
add
xchg
add
jl
push
mov
xlat
pusha
jmp
jecxz
icebp
mov
div
add
jbe
les
add
add
pop
stos
lds
add
stos
add
jne
add
sub
pop
sub
pop
push
lea
push
lea
push
call
pusha
sti
mov
mov
add
addb
xchg
out
xchg
add
fs
add
mov
add
in
test
add
test
add
add
mov
icebp
incb
xchg
push
add
add
add
xchg
sub
pop
rep
push
lea
push
push
push
call
add
push
add
test
add
subb
add
add
add
scas
mov
lret
clc
add
pop
pop
mov
push
push
push
push
lea
push
call
push
add
fucom
xchg
xchg
push
add
xchg
mov
add
lock
stos
mov
fldl
jp
in
in
lcall
pop
in
add
push
push
call
fs
xchg
add
jl
add
add
add
lea
mov
push
add
ja
add
add
aad
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
push
call
imul
add
mov
add
add
mov
jb
xlat
add
add
add
test
bound
lret
add
vprotw
xchg
add
outsl
pop
add
imul
cmpsl
add
mov
loop
les
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
pop
aam
add
add
add
gs
add
imul
loopne
add
lcall
add
push
push
call
icebp
add
mov
pop
test
nop
add
push
add
enter
jmp
add
cltd
sub
pop
add
push
push
push
lea
push
push
push
push
call
les
add
filds
mov
mov
mov
mov
add
mov
lods
push
add
mov
add
sbbb
shl
xchg
shl
sub
mov
sub
pop
mov
push
push
push
lea
push
push
push
push
call
add
insb
add
fldl
mov
ret
test
add
add
ret
xchg
in
jae
fldl
pushf
cwtl
add
mov
add
scas
jl
in
call
push
push
push
push
push
push
call
xlat
add
add
lea
popaw
mov
push
add
cwtl
add
add
add
enter
mov
out
imul
xchg
add
mov
mov
sub
pop
add
push
push
push
call
je
out
add
roll
add
aad
stos
imul
add
lret
popf
in
movsl
add
add
outsl
push
add
imul
sub
push
push
push
call
add
add
enter
jnp
into
add
adcl
rcll
add
cli
movsb
clc
add
out
add
push
add
push
add
add
push
je
jbe
in
sub
pop
add
push
push
lea
push
call
pop
xlat
add
loop
add
add
fistpl
push
xchg
pop
add
add
add
outsl
rcl
aam
add
add
in
xchg
shlb
pop
int
jnp
mov
add
add
lcall
add
add
loope
mov
mov
mov
pop
add
push
push
push
call
add
sahf
cmpsb
les
mov
test
add
jb
mov
add
add
adc
mov
arpl
mov
popa
mov
scas
add
popa
add
add
out
jmp
in
hlt
pop
mov
push
push
rol
dec
push
or
inc
add
sub
shl
sub
sub
sub
dec
pop
sub
sub
sub
pop
push
push
lea
push
push
push
call
add
sarb
out
add
add
add
add
add
mov
add
add
in
add
les
add
test
mov
loopne
in
add
add
pusha
loop
popa
mov
mov
add
add
lret
mov
lret
cmpsb
cld
jl
in
in
pop
pushl
push
push
push
push
push
push
push
call
ficoms
fiadds
enter
xlat
add
ret
out
leave
jmp
pop
in
pushf
add
lret
jno
add
add
rolb
jo
jns
arpl
add
cld
lea
add
jp
pop
jmp
sub
pop
call
push
shr
shl
add
pop
push
push
push
rol
push
and
add
shr
shl
sub
inc
ror
pop
shr
pop
push
lea
pop
push
push
push
shr
add
dec
pop
call
push
lea
push
push
push
push
call
add
push
push
pop
add
jb
mov
push
js
data16
cmpsb
push
jns
decb
mov
bound
xchg
add
push
mov
push
push
push
push
call
xorl
xlat
pop
shl
add
add
mov
add
push
movsb
add
jecxz
fs
cltd
add
add
add
add
jge
lock
pushf
add
mov
into
add
cld
bound
loope
mov
in
lock
lcall
push
push
push
push
call
out
into
in
scas
mov
add
mov
add
gs
in
add
push
lahf
add
jb
add
add
add
xchg
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
xchg
add
add
rcll
scas
movsl
push
add
add
fldl
mov
mov
or
shll
mov
addb
hlt
push
push
call
push
add
test
add
add
andl
sti
test
lret
call
add
sahf
add
jne
addl
add
roll
add
in
push
push
add
mov
add
bound
add
xchg
mov
add
lcall
pop
in
add
push
inc
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
jnp
add
add
push
addb
movl
std
add
add
add
lahf
cwtl
cli
jne
imul
cmc
jmp
add
cmc
mov
stc
imul
add
pop
xchg
add
sub
pop
mov
xor
push
lea
inc
shl
pop
add
push
push
push
push
call
rcll
xchg
add
mov
add
jge
add
add
add
add
insb
add
pop
add
clc
cltd
add
out
jmp
push
jecxz
mov
add
mov
loopne
add
push
push
push
lea
push
push
lea
push
lea
push
call
push
cmc
add
xchg
stos
stos
mov
add
sarb
add
lahf
jnp
add
lods
add
add
add
movb
cmpsl
add
add
stc
add
mov
add
fiadds
xchg
mov
push
add
icebp
add
add
add
add
shlb
hlt
rolb
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
add
add
imul
loope
mov
add
add
jle
fildl
add
popf
je
add
xchg
std
jmp
add
jno
cmpsb
add
add
in
loopne
xor
push
lea
push
push
push
push
call
add
test
jle
add
iret
jecxz
pop
lock
outsl
add
js
add
jae
loopne
add
popf
scas
add
test
and
out
add
mov
add
add
lea
xlat
pop
add
add
mov
add
roll
jb
xlat
arpl
add
lcall
les
add
push
lea
push
push
push
push
call
fnstenv
push
add
in
lcall
xchg
jp
pop
je
mov
lcall
xchg
add
scas
add
je
sahf
shlb
sarl
add
add
fiadds
add
add
add
rolb
in
in
pop
add
push
inc
add
add
add
pop
pop
push
push
push
call
add
lock
ja
mov
add
fisubrs
in
add
add
in
jno
scas
mov
add
pop
pop
movsb
cltd
cli
add
add
push
shl
mov
push
add
mov
add
add
movsl
movl
jns
add
ret
add
lcall
dec
and
push
ror
pop
rep
push
add
pop
mov
xor
push
push
push
push
lea
push
push
push
call
int
cld
test
add
mov
mov
push
fwait
add
add
add
mov
stos
add
pop
pop
cwtl
sub
pop
or
je
push
xor
rol
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
rolb
add
add
imul
cmpsl
push
outsl
sti
faddl
jne
add
xorb
add
add
add
in
outsl
mov
popf
mov
add
add
test
lcall
push
sbb
push
push
push
call
jno
add
shl
xchg
add
add
aam
pop
xlat
add
lcall
add
add
lret
pop
add
cld
out
add
fadds
pop
outsl
add
aam
jo
lret
hlt
lcall
adc
push
push
lea
push
call
repnz
test
add
rolb
ljmpw
add
add
rcl
jns
add
xchg
leave
add
add
sub
pop
add
push
push
push
push
push
lea
push
push
call
add
test
mov
lret
stos
xchg
add
mov
add
push
add
add
stos
addl
add
add
add
mov
add
push
sti
add
repnz
stos
xchg
in
push
xchg
add
cmc
js
xlat
xchg
loop
mov
in
jl
int3
push
push
add
add
add
stos
add
sub
pop
add
add
push
push
call
add
add
lds
add
push
fwait
add
add
add
mov
add
add
lcall
mov
push
push
push
call
mov
jecxz
add
add
push
add
mov
add
jmp
jae
outsl
mov
add
add
add
add
loopne
jnp
add
add
jl
add
xchg
test
add
stos
add
int3
add
sub
pop
xor
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
lret
add
add
add
mov
fucomip
add
jbe
call
add
pop
pusha
add
mov
mov
mov
sahf
add
out
rcrl
lcall
les
push
push
push
push
push
lea
push
lea
push
call
popa
add
add
lret
jl
add
push
add
stos
add
add
test
add
xchg
add
xchg
jl
iret
mov
add
push
add
add
pop
add
add
mov
lcall
lock
add
pop
pop
rep
push
push
push
push
push
call
faddl
add
add
movsb
in
lcall
jno
add
add
push
push
add
in
in
lcall
dec
sub
push
push
push
lea
push
push
lea
push
call
cmc
movb
add
add
add
out
add
mov
fiadds
addl
jnp
mov
add
add
add
cli
in
add
gs
add
push
xchg
add
ljmp
and
push
push
push
lea
push
lea
push
push
push
call
add
std
pushf
std
add
scas
js
repnz
add
sub
loope
bound
repnz
loope
cli
add
add
ja
mov
add
cmc
jb
add
xchg
popf
add
add
jns
loopne
add
add
add
add
add
mov
add
add
loope
fiaddl
lcall
les
add
push
sub
not
pop
or
je
push
push
push
lea
push
lea
push
push
call
cmc
mov
cmc
xchg
addr16
add
add
popf
pop
add
add
mov
sti
cmc
add
mov
out
add
add
add
lock
loopne
std
add
jp
jnp
in
call
mov
push
inc
pop
add
rep
push
add
sub
pop
pop
push
push
push
or
not
add
xor
lea
rol
sub
rol
ror
pop
pop
push
push
call
cmc
mov
ljmp
pop
movsl
add
add
add
jno
pop
pushf
js
imul
push
xchg
test
neg
add
call
add
jb
insb
mov
mov
mov
mov
add
add
in
clc
pop
pop
push
push
call
add
lcall
add
pop
add
shll
pop
mov
bound
mov
leave
out
add
mov
add
add
add
out
clc
add
push
add
add
mov
push
add
jl
add
add
sub
pop
mov
mov
push
lea
push
push
push
lea
push
push
call
add
loope
cmpsb
add
jmp
add
mov
mov
add
nop
std
add
add
add
jno
sahf
pop
out
xorb
xchg
jno
bound
jle
mov
mov
xchg
pop
ljmp
call
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
incb
add
add
repnz
add
lcall
mov
add
popl
jo
subl
pop
roll
les
cmc
add
gs
mov
push
xchg
add
aad
nop
add
mov
cmpsl
add
test
lcall
loopne
push
push
push
lea
push
lea
push
lea
push
call
add
add
jp
iret
in
hlt
add
jnp
mov
mov
jp
mov
add
add
add
jp
loope
mov
testl
add
add
mov
movsl
mov
add
out
push
add
xchg
addl
fwait
add
add
add
in
in
lcall
push
push
push
push
push
push
push
push
call
std
out
add
push
add
add
or
xchg
add
add
add
add
mov
add
add
add
loop
mov
add
add
mov
popa
scas
out
add
add
sub
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
call
fadds
movsl
js
jno
pop
push
mov
add
add
add
add
mov
add
cld
pusha
mov
push
add
add
xchg
push
notl
lcall
nop
add
out
movsb
roll
fists
pop
jge
fsubs
add
add
lret
sub
pop
add
push
rol
lea
pop
push
push
push
add
pop
push
push
lea
shl
inc
not
pop
push
mov
push
push
call
push
jge
out
add
or
xchg
hlt
mov
sti
lahf
add
add
xchg
add
sti
add
add
out
in
bound
mov
add
rcll
xchg
add
sub
pop
pop
push
ror
shr
lea
pop
pop
push
push
lea
push
push
push
call
mov
stos
lock
add
rclb
cli
add
jmp
je
jbe
add
push
add
add
hlt
pop
lea
call
add
into
add
mov
add
add
cltd
push
jb
lods
sahf
mov
in
lcall
pop
push
inc
ror
rol
pop
leave
push
push
push
lea
push
push
call
pop
add
add
add
add
movl
mov
ljmp
push
add
rcrl
mov
call
mov
add
add
mov
or
push
push
sub
sub
inc
not
pop
mov
push
push
push
push
push
lea
push
call
add
out
mov
add
mov
cmc
add
aad
push
sti
add
push
aam
add
add
test
in
idivb
in
call
push
push
sub
shl
add
shr
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
into
lds
mov
add
stos
testl
mov
add
add
fsubrp
out
gs
arpl
sti
out
add
in
jb
xchg
add
out
add
add
add
test
push
clc
test
nop
iret
out
add
add
add
add
add
pop
scas
outsl
in
in
fcompl
push
shl
pop
push
push
add
pop
movl
push
ror
shr
add
rol
pop
addl
push
ror
shl
pop
test
je
push
push
call
add
mov
imul
imul
mov
xchg
add
pop
clc
pop
add
add
iret
add
pop
add
loope
lret
add
mov
arpl
add
call
in
clc
lcall
inc
or
fs
push
lea
push
push
push
lea
push
lea
push
push
call
into
add
add
add
outsl
roll
add
testb
jo
stos
add
pop
in
add
popf
scas
ror
fstps
add
add
mov
lock
mov
jb
ret
mov
mov
add
push
xchg
sub
pop
pop
push
shr
pop
pop
push
lea
pop
pop
push
push
push
push
lea
push
call
xchg
xchg
add
fnstsw
add
fnstcw
rolb
jmp
xchg
sti
add
add
mov
in
pop
add
stc
add
fldt
add
lcall
push
shr
inc
pop
leave
push
ror
pop
ret
push
push
sub
shr
pop
mov
push
shr
pop
add
push
xor
rol
sub
pop
push
push
push
shr
lea
pop
push
push
pop
push
testl
push
push
push
push
lea
push
lea
push
call
mov
fstps
add
add
test
add
jle
add
js
loope
pusha
xchg
jbe
jge
jns
fldl
push
mov
call
call
out
mov
pop
push
call
push
push
lea
push
push
call
add
push
jmp
test
xchg
add
add
add
add
rcr
pop
jmp
lahf
add
jb
call
hlt
into
ljmp
add
add
popl
call
outsl
add
sbbl
mov
push
pop
mov
push
push
lea
push
push
call
add
cltd
cltd
cmpsl
mov
add
repnz
add
lcall
jno
xlat
js
add
stc
out
rcl
add
xchg
mov
lock
pushl
push
shr
pop
push
push
push
push
push
lea
push
push
push
call
add
addr16
mov
push
lret
xchg
lock
pushf
add
pop
add
repnz
mov
add
fiaddl
fcomp
add
jae
mov
add
add
mov
add
mov
test
mov
add
leave
roll
add
sub
pop
push
push
xor
add
sub
pop
call
push
lea
push
push
push
call
fsub
add
add
cmpsl
add
add
add
gs
out
ret
add
add
xchg
divl
xchg
mov
lock
mov
in
jecxz
imul
shl
add
jne
mul
jns
loopne
push
add
adc
mov
in
push
sub
pop
cmpl
jne
push
rol
inc
sub
pop
pop
push
shr
shr
pop
pop
push
push
lea
push
push
call
cld
mov
faddl
gs
pop
add
add
out
scas
add
add
add
rorl
pop
cmpsb
lret
js
roll
add
out
add
push
xchg
in
mov
lock
lcall
pop
push
not
add
pop
leave
push
add
ror
add
pop
ret
push
push
push
push
push
push
push
push
push
call
add
cmpsb
stc
std
mov
movsb
add
push
add
add
add
xchg
add
lret
mov
popf
call
add
add
bnd
in
nop
add
mov
in
fdivr
lcall
mov
push
pop
add
push
push
xor
rol
pop
push
push
sub
dec
sub
pop
push
push
sub
sub
not
shl
pop
push
movl
push
lea
push
push
call
popf
test
lods
add
test
cltd
add
testb
in
xchg
add
add
pop
mov
cmpsl
add
xchg
iret
mov
rol
xchg
incb
add
jae
mov
jno
add
add
jno
add
pop
add
hlt
lcall
add
stc
call
push
push
push
push
push
lea
push
call
stc
add
add
add
mov
xchg
cwtl
sti
xchg
jne
in
add
add
add
shl
loop
xchg
imul
add
add
mull
iret
arpl
add
repnz
sahf
mov
aad
lds
lret
add
cmc
add
add
add
add
repnz
adc
or
push
lea
push
push
push
lea
push
call
add
xchg
add
add
add
outsl
add
addb
pop
add
out
addb
add
add
mov
xlat
add
stc
add
into
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
jl
les
aad
jecxz
add
fildl
add
pushf
scas
cwtl
cmpsb
mov
pop
cltd
add
movsl
add
out
aad
imul
add
add
mov
int
xchg
cli
mov
add
in
rolb
icebp
mov
mov
push
aad
add
pop
subl
push
add
add
pop
cmpl
jne
pop
push
not
not
ror
pop
pop
push
add
pop
pop
pop
push
lea
push
push
call
fsubs
xchg
into
lret
add
add
outsl
add
fs
pop
add
jb
lods
rolb
add
mov
jno
enter
sub
pop
leave
push
lea
push
push
push
push
push
push
call
rolb
add
shrb
sti
lods
fiadds
add
add
into
in
add
add
pushaw
add
ret
sub
pop
ret
push
shl
sub
lea
lea
pop
push
mov
push
push
call
nop
add
mov
lret
fistps
add
jmp
xlat
incb
add
test
add
nop
pop
mov
mov
add
clc
insb
mov
lret
jbe
lea
cmpsb
xchg
fwait
out
cmpsb
push
call
add
add
ljmp
jecxz
in
clc
lcall
cld
push
lea
not
pop
push
push
pop
push
push
not
sub
pop
push
push
push
push
sub
push
sub
add
sub
dec
sub
shl
dec
pop
xor
pop
push
push
push
push
call
rolb
mov
xchg
add
jecxz
loope
push
divb
fsubs
mov
rolb
popf
jae
roll
loopne
add
jecxz
add
push
add
movsl
stc
xchg
mov
sub
pop
pushl
call
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
push
mov
scas
ljmp
add
mov
add
push
bound
mov
lret
rorl
push
cmpsl
out
jmp
ror
lock
jns
pop
imul
xchg
std
leave
pop
add
stc
or
push
push
aam
add
sub
pop
call
push
push
add
not
rol
push
or
not
add
ror
sub
not
pop
pop
push
xor
not
pop
pushl
push
rol
pop
call
push
inc
ror
pop
call
push
push
shl
add
dec
xor
push
or
not
add
add
sub
shr
sub
add
inc
pop
add
add
pop
push
push
push
push
call
les
jae
roll
faddl
push
mov
int
push
testl
add
add
mull
push
add
add
mov
leave
add
add
hlt
add
out
subl
pop
add
test
jmp
bound
add
mov
sub
pop
pushl
push
push
push
push
push
push
call
imul
add
add
mov
pop
rolb
add
xchg
jnp
push
pushf
shrb
faddl
call
cli
mov
jmp
mov
add
add
rolb
mov
loope
xchg
jecxz
js
test
add
out
sub
pop
call
push
xor
shr
pop
call
push
push
dec
sub
sub
push
and
add
sub
sub
add
dec
add
rol
pop
lea
xor
pop
push
dec
pop
pushl
push
sub
not
pop
call
push
pop
call
mov
push
push
lea
push
push
push
call
xchg
popl
pop
push
add
add
stos
sahf
ja
aad
filds
push
add
into
add
add
jmp
in
lcall
inc
cmp
sub
pop
sub
push
add
shl
pop
mov
shr
push
push
push
push
lea
push
lea
push
push
push
push
push
call
in
add
add
xchg
lock
rcll
add
ja
jge
cmc
add
add
popl
out
mov
pop
ljmp
add
xchg
add
lret
scas
lods
mov
add
add
out
testb
in
fcomps
inc
or
inc
cld
push
pop
mov
add
push
ror
xor
pop
add
mov
push
push
push
call
stc
add
jp
std
add
movsb
cmc
je
call
loope
add
xchg
add
add
xchg
ja
imul
pushf
mov
cmpsb
jecxz
into
js
mov
add
mov
sahf
test
push
jge
outsl
add
add
popf
cmpsl
movsb
add
mov
lcall
nop
nop
nop
nop
push
lea
add
sub
pop
cmp
jne
push
add
dec
pop
cmp
jne
push
ror
xor
not
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
push
call
lret
add
mov
push
stos
add
jns
xchg
add
add
push
incb
movsb
mov
add
in
lds
leave
xchg
shrl
out
imul
movsl
add
outsl
cwtl
mov
movsb
add
testb
add
push
push
mov
stos
add
in
sub
pop
movl
push
rol
lea
pop
jmp
push
push
call
outsl
add
mov
add
add
pop
add
int3
stos
mov
rcrl
out
mov
stos
lods
pop
addl
into
mov
js
add
add
jle
sub
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
bound
xchg
mov
std
in
add
add
cld
mov
jl
pop
rcll
add
jmp
test
add
jns
popf
jp
mov
add
add
scas
add
xlat
xchg
enter
add
mov
add
int
add
add
add
add
xchg
add
add
fs
push
add
push
or
pushf
adcl
lea
push
push
lea
push
call
push
add
add
xlat
xchg
add
mov
in
add
leave
cld
ret
add
add
add
aad
fwait
bound
scas
add
lods
add
roll
add
add
add
out
add
out
mov
add
in
in
pop
sub
jne
mov
push
dec
pop
movl
push
lea
push
call
pop
cli
add
in
add
add
jae
iret
mov
cltd
add
xchg
xchg
testb
add
push
imul
sub
pop
jmp
mov
push
lea
sub
sub
pop
mov
push
shr
ror
shl
pop
cmp
jne
push
sub
pop
mov
push
push
push
call
push
cwtl
add
mov
add
shrl
pop
add
in
in
jnp
add
push
fiaddl
add
add
push
add
add
in
xchg
add
lea
add
pop
xchg
mov
fstp
mov
cmpsl
out
add
add
xchg
jno
sub
pop
movl
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
xchg
roll
add
add
add
mov
in
add
mov
add
add
rclb
popf
pop
add
rcrb
mov
mov
mov
add
pop
add
mov
add
je
mov
xorl
lcall
insl
push
add
mov
push
shr
pop
cmpw
jne
push
lea
push
push
call
shrb
jno
nop
pop
fs
pusha
add
mov
add
cmpsb
add
fxch
add
lock
add
les
add
add
add
out
fsubs
add
fadds
pop
mov
push
ror
not
pop
movl
jmp
push
push
push
push
push
lea
push
call
popf
pop
add
mov
icebp
gs
pop
into
add
mov
ljmp
add
jo
add
jmp
mov
jge
test
add
add
add
pop
fiaddl
jp
xchg
push
in
shrb
in
add
adcb
lcall
call
xor
add
pop
push
rol
pop
mov
mov
push
add
shl
inc
shr
pop
mov
push
push
shr
ror
push
or
not
add
shl
sub
sub
pop
add
inc
xor
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
push
mov
mov
add
mov
stos
loopne
add
add
add
push
add
mov
popa
pop
add
in
jp
add
mov
mov
add
add
incb
lcall
push
push
push
push
push
push
push
lea
push
call
mov
jae
add
mov
mov
fs
fnsave
add
sti
add
add
loope
lds
lds
adcl
in
loopne
lcall
fsubrs
add
cmpl
je
push
push
push
push
pop
add
sub
add
shr
sub
xor
inc
pop
lea
dec
inc
pop
push
lea
push
lea
push
lea
push
push
call
pop
fsts
out
pop
fiaddl
repnz
mov
pop
add
add
add
push
negl
mov
add
add
aad
iret
add
add
add
mov
jmp
pop
insb
add
fwait
add
popf
pop
xchg
fildl
jl
push
negb
push
addl
je
add
in
in
lcall
call
push
lea
push
lea
push
lea
push
push
push
push
call
into
lcall
add
popf
mov
push
add
pop
add
out
jno
jae
push
rcrl
mov
jne
stc
insb
cmc
test
movl
in
lcall
cmp
rol
je
push
push
rol
dec
push
and
add
inc
add
sub
inc
inc
pop
rol
add
not
dec
pop
push
sub
pop
push
call
push
push
push
call
lods
add
add
add
loop
fisubrs
mov
xorl
scas
addl
jae
xchg
mov
fs
fdivl
pop
add
outsl
add
add
clc
add
in
hlt
lcall
cmp
test
add
add
shrb
mov
sub
add
xor
inc
push
and
add
shl
inc
shr
sub
sub
add
inc
shr
pop
ror
not
ror
pop
push
not
pop
push
push
lea
push
push
push
call
stc
scas
add
mov
loope
sahf
popa
add
add
push
add
data16
rorl
roll
jne
add
sub
pop
call
push
push
lea
push
push
push
call
mov
mov
data16
add
mov
hlt
sarb
push
add
idiv
add
push
pop
fs
add
sahf
jmp
add
lcall
js
xor
ret
test
add
push
push
not
rol
sub
push
or
inc
add
inc
ror
sub
rol
dec
pop
shl
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
xchg
mov
mov
movl
cmpsl
icebp
add
add
pop
add
xchg
roll
stos
in
add
cmpsb
xchg
lods
lret
xchg
add
rcr
mov
sub
pop
push
push
dec
lea
xor
shl
pop
call
push
push
lea
push
push
push
push
call
cmpb
mov
mul
add
sar
jmp
fadds
out
out
cli
cmpsl
out
xchg
scas
pop
mov
jecxz
push
add
add
addl
add
add
repnz
add
subl
jne
sub
pop
cmpl
je
push
push
shl
push
push
pop
add
add
ror
ror
shr
sub
dec
pop
sub
pop
push
lea
pop
push
call
push
dec
pop
cmpl
jne
push
rol
pop
mov
movl
push
push
push
push
push
call
xchg
stos
mov
add
xchg
add
stos
add
add
mov
add
mov
icebp
add
mov
cmpsl
jmp
mov
int3
add
jle
out
test
push
add
int
mov
fisubrs
add
jmp
in
in
lcall
push
add
add
enter
pop
push
xor
shr
pop
pop
push
push
push
call
test
xlat
loop
mov
movsb
xlat
pop
addr16
add
add
popa
add
jno
out
cltd
add
enter
jle
pushf
rclb
add
push
scas
lcall
jno
jp
add
add
push
add
loopne
roll
sub
pop
pop
pop
push
lea
push
push
push
lea
push
push
call
jbe
add
add
pop
mov
lods
add
add
add
icebp
jbe
je
cltd
pop
add
mov
call
xchg
neg
push
movsl
xchg
in
fcompl
add
pop
lock
add
add
out
in
call
leave
ret
push
add
pop
push
mov
push
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
out
add
les
mov
rol
icebp
cltd
lods
add
out
add
aam
xchg
add
push
mov
add
push
add
mov
aam
cmpsl
in
add
mov
add
fstl
in
fdivr
lcall
jge
add
test
add
push
push
not
push
or
not
add
rol
shl
rol
sub
inc
inc
not
lea
pop
rol
add
pop
push
add
pop
pushl
push
dec
dec
add
shr
pop
call
push
dec
shr
shl
pop
push
call
push
add
not
shl
pop
jmp
cmpl
jne
push
sub
lea
shl
pop
mov
ret
push
push
push
call
icebp
lea
movsl
add
add
imul
add
loop
add
hlt
add
lret
add
lret
xchg
add
clc
add
add
add
add
push
cld
add
sub
pop
jmp
push
push
push
push
call
pop
xlat
enter
lret
add
test
add
mov
aad
add
mov
lods
add
add
add
test
add
js
in
lock
lcall
jge
add
test
add
push
push
add
push
or
inc
add
sub
inc
add
rol
pop
sub
xor
dec
pop
push
push
push
push
lea
push
push
call
add
push
jbe
add
push
lahf
filds
fistl
add
add
add
mov
mov
aam
jp
xchg
add
add
icebp
jns
lock
roll
mov
add
rcr
cli
jmp
in
call
pushl
push
push
push
push
call
xchg
add
add
add
out
add
je
out
leave
leave
jno
fdivl
aad
jecxz
movb
pop
call
push
push
ror
pop
call
jmp
push
push
push
push
push
call
addl
pop
cmc
cltd
rolb
xchg
jno
add
movsb
js
add
lret
hlt
mov
add
add
movsl
shlb
jo
add
sahf
enter
add
xchg
jb
shrb
fwait
add
ljmp
jb
add
imul
fadds
lcall
jge
add
test
push
push
lea
push
push
call
lea
mov
push
push
add
add
push
addb
add
test
lret
push
add
mov
add
pop
aad
mov
popl
jge
add
add
push
lea
push
lea
push
call
add
cmc
pop
add
out
mov
add
add
nop
fidivs
icebp
add
add
add
testb
outsl
add
leave
jns
lcall
push
add
movsb
jecxz
add
mov
add
jmp
add
sub
pop
mov
mov
push
push
push
push
push
push
push
push
push
push
call
leave
sbb
test
pusha
add
imul
add
add
gs
fildl
add
add
add
andb
add
xchg
mov
pop
push
push
push
push
sub
add
not
shl
not
sub
rol
add
dec
pop
add
add
pop
push
push
push
push
push
call
addl
mov
jb
popf
add
xchg
faddl
jmp
aad
test
add
add
add
ret
add
add
ficoms
add
lcall
loopne
jecxz
cmpsb
sub
pop
pushl
push
shr
pop
call
call
push
push
inc
sub
dec
push
push
pop
add
ror
lea
sub
sub
ror
ror
lea
pop
inc
rol
pop
push
push
push
call
stc
nop
cli
jbe
xchg
add
pop
add
cltd
and
xchg
mov
rolb
fs
pop
jo
pop
add
ljmp
mov
rolb
jmp
mov
mov
roll
pop
lods
mov
add
add
ja
add
xchg
add
gs
jne
call
push
add
pop
call
push
push
ror
sub
push
or
inc
add
sub
rol
sub
sub
sub
shr
pop
ror
pop
push
lea
push
push
push
push
push
call
xchg
std
mov
add
xchg
mov
add
mov
pop
in
add
aam
jnp
addl
xchg
add
mov
fwait
add
push
xchg
lea
cld
out
add
add
sub
lods
mov
pop
sti
jae
iret
add
loope
sub
pop
pushl
push
inc
pop
call
push
add
pop
call
push
push
sub
push
and
add
rol
sub
shl
add
shr
xor
pop
sub
shr
inc
sub
pop
push
push
lea
push
call
popl
jge
add
incb
mov
lods
jns
add
sahf
lods
xchg
loop
add
int3
add
add
xchg
clc
js
add
mov
aam
add
add
je
xchg
push
push
data16
in
fsub
add
mov
int3
add
add
pushl
push
push
push
push
lea
push
push
push
call
lods
addl
rolb
loopne
add
add
push
add
add
jne
mov
jb
add
add
out
add
add
push
int3
add
push
lods
imul
icebp
fidivrs
shrl
add
add
pop
call
push
push
call
xchg
mov
scas
sahf
cmpsb
add
js
add
add
add
add
data16
add
nop
mov
add
imul
movl
add
repnz
lea
add
enter
add
icebp
add
add
add
shl
test
xchg
sub
pop
call
push
push
push
xor
add
not
lea
add
sub
sub
lea
xor
not
pop
add
pop
push
add
shr
inc
pop
pushl
push
shr
shr
rol
xor
pop
call
call
push
push
lea
shl
push
or
inc
add
sub
sub
shl
lea
add
shr
pop
add
sub
rol
pop
push
rol
pop
pushl
call
push
inc
sub
rol
pop
call
push
push
sub
xor
push
and
add
not
dec
sub
sub
shl
pop
pop
push
push
push
call
add
mov
add
cmpsl
mov
imul
add
add
add
add
add
fidivrs
jle
std
mov
add
rcll
jae
add
mull
add
push
add
cli
push
fiaddl
bound
cmpsl
add
jne
push
push
lea
push
push
push
call
add
mov
flds
add
mov
mov
mov
enter
jecxz
add
push
add
lods
data16
add
pop
pop
fildl
mov
sub
pop
call
call
push
push
sub
shl
not
push
sub
add
inc
xor
rol
sub
rol
rol
add
dec
pop
shr
add
lea
xor
pop
push
ror
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
call
add
xchg
add
jns
mov
mov
out
add
add
fldl
fcomps
scas
ret
add
notl
add
add
fidivl
stc
add
flds
mov
rcll
add
repnz
in
in
lcall
pushf
and
call
ds
subl
adc
xor
add
jmp
int3
add
mov
add
stos
add
jne
add
add
add
add
in
push
sahf
ror
jno
push
add
sub
pop
push
push
shl
pop
call
push
push
add
dec
push
and
add
sub
ror
shl
sub
dec
xor
pop
shl
sub
lea
pop
push
ror
pop
pushl
push
push
call
fwait
lock
add
stos
incb
add
add
out
addb
mov
add
outsl
add
cmpsb
add
add
lods
add
add
std
cmc
stos
popf
add
clc
pop
call
call
push
push
push
and
add
ror
not
sub
shl
pop
sub
ror
pop
push
ror
shl
shr
pop
pushl
push
push
push
lea
push
push
call
add
testl
add
xchg
lret
cmc
popf
imul
push
ja
xchg
add
add
add
sti
push
not
mov
add
add
mov
sub
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
add
jmp
add
sti
pop
add
xlat
mov
add
add
fucomi
add
xchg
mov
add
pusha
hlt
xchg
out
addr16
jl
add
mov
xchg
gs
pop
pop
data16
mov
mov
add
add
push
add
loope
add
add
sub
pop
call
push
push
xor
shr
shr
sub
push
xor
add
rol
sub
sub
sub
pop
xor
sub
inc
lea
pop
push
ror
rol
pop
pushl
push
push
push
push
call
fcompl
xchg
add
clc
add
mov
mov
add
test
xchg
test
imulb
push
fiadds
int3
pop
mov
add
fiaddl
pop
add
shr
add
imul
add
add
lcall
push
pop
add
call
push
push
shr
lea
push
or
inc
add
shr
sub
add
sub
add
xor
pop
add
inc
pop
push
shl
sub
pop
pushl
push
xor
xor
shl
pop
call
push
push
add
not
push
and
add
xor
sub
not
sub
pop
xor
pop
push
push
add
sub
push
push
pop
add
sub
ror
inc
shl
pop
sub
sub
lea
pop
push
ror
pop
call
push
push
push
lea
push
lea
push
push
call
add
lods
shl
mov
lds
add
int
cmpsb
add
les
lret
movb
jmp
jbe
add
in
call
pop
push
shr
ror
xor
dec
pop
dec
jne
call
push
push
push
push
push
call
add
add
movsb
in
add
add
aad
test
add
mov
iret
stos
mov
mov
mov
icebp
mov
in
aam
xchg
outsl
lret
popf
ret
mov
add
movl
ljmp
pop
mov
push
push
push
lea
push
call
out
out
jno
push
add
fucompp
loop
mov
jmp
lcall
pushf
add
bound
add
into
filds
add
mov
push
jle
in
lock
lea
push
push
sub
shl
add
shl
push
xor
add
sub
add
shl
sub
sub
lea
pop
rol
dec
lea
ror
pop
push
push
lea
push
push
push
lea
push
push
call
in
jmp
add
add
push
hlt
loopne
mov
out
repnz
jnp
mov
in
push
add
mov
add
add
movsl
add
pop
add
outsl
add
add
jnp
add
movsl
lea
sub
pop
pushl
call
push
add
inc
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
lods
loope
scas
mov
jl
add
mov
test
pushf
xchg
add
pop
push
filds
add
add
stos
cmc
pop
mov
push
into
jne
add
in
xchg
add
add
add
ljmp
mov
in
loopne
lcall
shrb
xor
push
push
shr
push
sub
add
shl
sub
lea
pop
add
pop
push
push
push
push
push
push
push
call
jge
add
jecxz
mov
push
std
incb
stos
xchg
add
add
add
xchg
popf
lcall
in
add
mov
add
jne
push
xor
add
add
pop
call
push
push
call
add
mov
pushf
rclb
add
mov
xchg
add
add
fwait
push
add
add
add
bound
add
pop
mov
add
cmpsb
xchg
add
rclb
les
inc
cld
lea
push
push
not
push
or
inc
add
sub
inc
rol
sub
rol
add
xor
pop
xor
add
sub
pop
push
push
push
push
push
push
push
call
add
push
mov
add
add
lods
lock
add
jecxz
imul
jne
imul
cltd
add
out
add
in
lcall
jne
push
sub
add
add
pop
call
push
push
push
push
push
push
push
push
push
push
call
jo
mov
pop
test
data16
fadds
in
add
imul
add
add
fwait
mov
add
add
push
push
out
addb
add
mov
add
add
jno
testl
pop
lea
push
push
call
loopne
out
jge
mov
add
add
add
add
add
add
pop
cli
add
jle
pop
add
in
clc
pop
push
push
lea
push
push
lea
push
push
call
in
cmc
scas
add
int3
add
add
movsb
add
add
jecxz
add
mov
add
out
leave
push
mov
enter
jle
mov
add
add
stc
imulb
imul
mov
lret
mov
push
add
add
cwtl
add
loope
sub
pop
push
push
push
push
push
push
push
push
call
add
mov
add
scas
add
outsl
sti
push
call
addb
xchg
scas
aam
mov
xchg
icebp
les
sti
shrl
pushl
push
push
dec
sub
sub
inc
push
sub
add
not
shr
sub
add
lea
xor
pop
lea
shr
rol
pop
push
push
push
call
mov
fadd
mov
leave
lcall
mov
sahf
add
lcall
add
add
add
imul
add
push
sar
loopne
add
call
xchg
push
in
mov
movsl
fisttps
cld
add
pop
push
push
sub
ror
pop
call
push
push
push
xor
add
sub
sub
xor
shr
shr
rol
pop
shl
lea
pop
push
sub
shl
shr
pop
pushl
call
push
sub
pop
push
call
push
push
push
and
add
dec
add
sub
shl
pop
sub
not
add
pop
push
push
push
push
call
add
movsb
rolb
mov
scas
add
push
xchg
mov
vcmpps
shrb
mov
add
mov
pop
int3
xlat
addb
add
jp
xlat
js
in
out
xchg
cltd
cld
add
loopne
add
pop
add
sub
pop
pushl
push
inc
sub
lea
pop
call
push
dec
pop
call
push
shr
add
sub
xor
pop
pushl
mov
push
push
push
push
push
push
push
push
lea
push
call
add
cmpsl
jmp
cltd
jo
jecxz
fsubrs
xchg
jb
fcmovnbe
mov
divb
mov
add
fiadds
out
xchg
add
roll
push
cltd
add
add
add
fnstcw
jecxz
push
xchg
lods
lea
lds
add
in
fcompl
mov
ljmp
jae
mov
push
sub
add
lea
ror
sub
sub
xor
pop
rol
pop
push
xor
shl
inc
shr
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
pop
lock
cmpsl
lods
mov
test
aad
jo
xchg
mov
outsl
add
lods
movsb
lea
add
add
add
mov
add
testl
add
stos
add
ret
test
incb
ja
shll
or
pop
rclb
push
mov
push
call
push
push
push
xor
add
shl
sub
inc
not
add
pop
lea
pop
push
push
push
lea
push
push
lea
push
push
call
mov
push
add
jle
jne
aam
add
add
add
stc
mov
mov
add
add
add
cmpsb
add
rolb
fistpl
leave
add
cmpsb
jns
add
hlt
add
add
pushl
push
lea
push
push
push
push
push
call
add
add
push
mov
movl
cmpsb
add
jl
pusha
push
cwtl
loop
mov
je
ficompl
les
jl
sub
pop
call
push
push
push
push
call
push
add
mov
leave
add
xlat
int3
shl
fwait
add
jp
jge
popa
mov
add
cmc
iret
mov
add
lock
out
push
imul
sub
pop
push
call
push
dec
sub
pop
leave
push
shl
inc
pop
add
pop
push
sub
dec
rol
pop
pop
push
shr
shl
pop
pop
push
rol
xor
add
lea
pop
xor
inc
push
push
push
push
lea
push
push
call
add
pop
xchg
repnz
popa
add
add
stos
pop
lods
movb
add
jecxz
jl
shlb
leave
mov
add
js
mov
add
add
add
call
add
jmp
push
stos
jnp
lea
add
mov
loopne
in
call
leave
push
sub
shl
pop
ret
push
lea
add
pop
push
push
xor
dec
xor
pop
mov
push
sub
pop
cmpl
jne
push
push
push
lea
push
lea
push
lea
push
push
call
jp
add
mov
lods
add
popf
fistpl
jl
sahf
aad
add
mov
cmpb
add
in
mov
jmp
push
sub
sub
add
pop
mov
and
push
push
lea
push
lea
push
push
lea
push
push
call
imul
add
add
add
addl
movb
add
lret
push
mov
add
add
pushf
add
int
call
add
add
add
lcall
leave
push
push
lea
push
push
lea
push
call
add
jbe
addl
stos
add
test
shll
add
xchg
out
pop
sti
stos
testb
xchg
add
add
mov
pop
add
add
jo
xchg
imul
push
aam
push
in
dec
enter
xchg
push
push
push
call
add
loopne
pop
add
cwtl
ljmp
add
add
add
pop
idivl
fiadds
add
add
fwait
jb
jmp
lods
ficomps
add
push
aad
cltd
cltd
pop
add
add
mov
add
add
add
testl
push
add
mov
add
rolb
push
push
push
call
mov
add
add
frstor
jo
mov
aad
pop
push
add
arpl
jno
add
lcall
dec
call
push
push
lea
push
lea
push
push
push
call
in
add
add
add
enter
clc
mov
add
lds
add
add
jle
add
rolb
mov
add
add
sub
pop
dec
sub
push
not
pop
jmp
push
pop
sub
push
shr
sub
dec
not
pop
pushl
pop
push
push
lea
push
push
push
lea
push
call
add
push
popl
mov
int
xchg
insb
jl
add
out
pop
bound
xchg
xchg
push
icebp
lea
add
call
push
sarb
add
jmp
push
shr
inc
pop
cmp
jne
mov
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
lahf
add
pop
ja
add
fadds
mov
add
mov
jmp
add
aam
xchg
jns
add
notl
add
loope
fs
fidivl
mov
enter
in
add
add
ja
rcrb
mov
add
fs
pop
lea
sub
push
push
call
add
mov
fstps
add
lcall
add
movsl
popl
scas
add
imulb
add
add
stos
add
enter
lret
rolb
rolb
add
mov
add
push
xchg
fucomip
add
xchg
add
sub
pop
mov
push
lea
add
pop
shr
push
lea
push
push
push
push
call
push
loope
mov
ret
pop
add
pop
aad
pop
add
lret
add
add
xchg
aam
cli
in
out
mov
mov
movb
repnz
add
mov
add
ja
add
mov
popl
sub
pop
add
sub
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
xchg
lock
add
jmp
imul
mov
mov
push
add
stc
loopne
add
push
push
ret
pop
fmul
popa
add
sub
pop
pushl
push
add
pop
pop
shr
push
push
push
push
push
push
push
call
add
ja
imul
imul
pop
enter
addb
std
pusha
mov
add
mov
add
cmpsl
add
arpl
xchg
sarl
mov
out
jmp
gs
lcall
loope
incl
add
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
lahf
add
jno
xchg
cli
push
add
add
add
int
imul
test
out
add
mov
mov
int
push
add
add
add
je
add
add
into
aam
div
add
nop
lret
cmc
mov
mov
cmc
add
xchg
sub
pop
sub
push
dec
pop
cmp
jne
push
inc
pop
leave
ret
push
add
not
pop
push
push
dec
not
xor
pop
mov
push
xor
not
pop
add
push
sub
xor
xor
rol
pop
push
push
inc
ror
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
call
rcl
add
sti
js
add
jns
mov
add
xchg
add
addl
movsl
jmp
add
add
in
out
xchg
jno
add
add
mov
add
mov
add
add
bnd
adc
mov
mov
jo
aam
add
lds
add
add
sub
pop
push
push
xor
pop
push
push
push
dec
pop
mov
push
ror
shr
pop
lea
sub
push
shr
xor
pop
mov
push
push
push
call
mov
gs
add
mov
fiadds
xchg
add
hlt
fidivrl
loop
test
fs
add
add
add
mov
push
mov
add
loop
sub
pop
shr
add
push
shl
pop
mov
push
lea
sub
add
pop
add
push
push
push
push
call
rcrl
add
add
add
faddl
pop
roll
add
mov
addr16
fsubl
jno
add
popa
jno
add
arpl
pop
into
mov
xorb
icebp
add
out
filds
add
add
mov
mov
add
stos
ja
add
add
mov
lcall
jnp
push
inc
pop
add
xor
push
push
lea
push
push
call
cmpsl
imul
lret
in
mov
add
add
add
add
add
test
add
leave
jns
fwait
stos
add
mov
mov
shlb
mov
out
add
mov
les
movsb
add
add
add
rcrl
add
popf
add
jbe
add
arpl
stc
outsl
add
in
lock
mov
push
dec
not
pop
and
push
add
pop
rol
push
shl
pop
rol
xor
push
lea
push
lea
push
push
push
lea
push
push
call
add
shrl
add
hlt
cmpsb
add
add
imul
add
add
add
add
scas
add
pop
mov
outsl
pop
add
add
add
add
ret
add
add
add
in
sub
pop
inc
push
push
push
push
push
push
call
in
fdivs
mov
cwtl
add
flds
movsb
loopne
lret
fldl
mov
add
ja
pop
add
mov
aad
add
ret
imul
xchg
add
clc
mov
in
add
add
roll
jno
add
int3
add
add
andl
mov
imul
cld
incl
push
add
xor
ror
sub
pop
cmp
je
push
not
pop
add
push
not
add
shr
pop
cmpl
jne
push
sub
pop
xor
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
pop
out
add
xchg
pop
push
add
add
pop
test
xchg
push
mov
clc
xchg
ljmp
mov
je
add
lcall
add
fdivr
lcall
push
push
push
push
push
push
push
push
lea
push
push
call
rcrb
add
fildl
add
mov
add
add
mov
add
roll
sub
pop
pop
pop
push
sub
pop
pop
push
shl
pop
leave
push
ror
shl
xor
pop
ret
mov
push
push
push
lea
push
push
lea
push
call
xlat
add
cmpsl
add
add
add
add
cmc
enter
fdivr
sahf
mov
add
imul
movsb
add
add
cmc
add
add
sti
add
mov
lcall
push
or
pop
dec
pop
mov
push
shr
xor
pop
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
out
add
nop
add
out
add
add
add
sahf
xchg
int
roll
stc
addr16
add
add
pop
add
mov
loopne
lret
mov
add
cmc
divl
cmc
sub
pop
test
push
push
push
lea
push
lea
push
push
call
mov
int3
push
fiadds
mov
mov
addl
add
in
add
popf
subb
add
add
add
in
fnstcw
lret
mov
in
repnz
outsl
add
pop
add
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
in
rcl
mov
imul
add
add
les
aam
mov
add
int3
mov
add
pop
xor
push
sub
pop
pop
push
lea
inc
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
xchg
les
mov
mov
roll
add
insb
mov
loopne
into
add
add
add
loopne
lcall
push
sub
inc
sub
shr
pop
pop
push
push
push
push
push
call
bound
mov
add
add
jb
outsl
add
add
pop
add
lret
jp
mov
push
add
cmpsb
loopne
add
add
xchg
add
add
fnsave
cli
mov
add
add
add
add
add
test
fcmovbe
add
sub
pop
pop
push
ror
not
shr
pop
leave
push
inc
pop
ret
push
push
push
lea
push
lea
push
push
call
data16
pop
mov
out
add
add
push
js
add
jne
mov
add
add
pop
pop
mov
fildl
mov
sub
pop
push
push
push
push
push
push
push
call
jno
lahf
xchg
fsubs
xchg
in
in
outsl
add
xchg
push
aam
xchg
mov
add
pop
add
mov
jge
cmc
test
add
jge
popf
clc
jle
jb
push
pop
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
movl
test
movsl
add
add
xlat
fs
je
push
add
xchg
clc
push
add
insb
addb
bound
push
xchg
out
add
jp
cmpsb
jp
add
add
movsl
mov
bound
hlt
push
sub
pop
push
push
add
add
not
pop
push
push
push
sub
pop
push
push
push
push
push
lea
push
push
call
add
lcall
mov
add
mov
add
cld
ror
mov
test
fiadds
mov
jecxz
push
lret
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
addl
fildl
imul
add
lods
add
add
sbbb
push
mov
rcl
lcall
in
int
add
add
je
lea
add
push
pop
push
push
push
push
push
push
push
push
call
add
add
filds
add
fdivs
add
mov
add
xchg
mov
xchg
add
adcl
add
pop
test
repnz
push
xlat
add
add
stos
add
in
loopne
lcall
push
cmp
ljmp
push
dec
pop
shr
push
push
push
push
call
enter
movsb
add
sar
add
cli
insb
arpl
test
movl
add
rcl
add
into
aam
int3
lea
add
add
ficoml
push
lea
push
push
lea
push
push
push
call
jb
add
jae
add
sahf
add
test
testb
add
add
add
mov
jns
add
jbe
add
add
aam
insb
add
out
add
xchg
aam
add
cmc
into
jo
add
add
add
pop
add
cli
loop
add
sub
pop
mov
push
add
xor
shr
pop
add
push
add
pop
pushl
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
xchg
add
std
xchg
mov
bound
mov
in
add
add
add
add
addb
sti
add
addb
stos
mov
jbe
mov
cmpsl
sub
pop
popl
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
iret
add
rcrl
add
sbbb
add
jae
add
add
add
out
sub
pop
mov
push
shl
pop
add
xor
push
dec
shr
pop
lea
mov
push
push
call
add
in
add
enter
add
loope
jnp
add
lock
test
mov
stos
mov
add
add
add
mov
xlat
add
faddl
testb
add
data16
xchg
add
add
rcll
pop
xor
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
cli
mov
add
movsl
fiadds
filds
mov
add
add
ja
fisttpll
jno
mov
lcall
add
loope
add
in
add
mov
add
add
movsb
add
add
add
test
pop
jge
in
fcomps
rolb
push
shl
dec
pop
nop
push
push
lea
push
push
push
push
lea
push
push
call
mov
lods
add
cld
xchg
lret
add
shl
add
loopne
xchg
cli
negl
xchg
add
add
sub
pop
xor
push
add
add
pop
nop
nop
push
lea
push
lea
push
push
lea
push
push
push
call
add
fsubl
test
stc
add
push
xorb
out
push
fadds
add
fdivs
cmpsb
mov
jne
lahf
mov
mov
sub
pop
inc
push
push
lea
push
push
push
lea
push
call
add
add
pop
hlt
mov
ja
add
mov
cmc
add
call
add
mov
cmc
in
lock
add
out
fs
add
pop
imul
add
add
mov
add
pop
add
lods
add
addb
mov
in
call
nop
push
ror
pop
nop
push
lea
push
push
call
jp
std
lds
pop
lcall
pop
mov
xchg
add
add
add
add
add
mov
loope
add
jae
add
mov
in
hlt
pop
cmpb
jne
push
push
lea
push
push
push
call
add
mov
add
loopne
xchg
push
add
add
cmpsb
add
add
add
add
into
push
add
add
fcoms
loopne
add
mov
xchg
fidivrl
add
push
rol
ror
pop
nop
nop
push
lea
push
push
lea
push
push
push
push
call
mov
mov
out
add
add
cwtl
add
add
mov
incb
jns
xchg
arpl
loopne
pop
add
lcall
inc
or
test
add
add
mov
push
inc
mov
mov
pop
add
add
jp
add
xchg
stos
jo
test
fadds
pop
add
add
push
test
call
ret
xchg
fldl
mov
xchg
mov
xlat
in
insb
mov
cmpsl
lret
mov
add
pusha
test
add
add
jae
add
jl
add
mov
in
in
lcall
push
add
lea
pop
nop
push
lea
push
lea
push
lea
push
lea
push
push
push
call
data16
add
add
mov
stos
jmp
add
jnp
add
pop
push
add
lds
roll
add
add
add
lcall
push
push
lea
push
lea
push
push
push
push
call
mov
iret
add
stos
add
pushf
js
add
add
add
mov
add
out
add
fists
jmp
in
lcall
nop
push
push
call
add
add
andl
add
cmc
add
mov
xchg
add
add
ficoms
add
cli
jb
nop
mov
add
jge
stos
add
add
js
mov
mov
add
add
outsl
addb
test
divl
sub
pop
cmp
jb
push
shr
add
sub
not
pop
xor
push
shl
add
pop
jmp
mov
push
dec
xor
sub
pop
add
push
dec
pop
movzwl
push
sub
pop
mov
push
inc
sub
pop
add
mov
push
push
push
push
push
call
enter
add
jns
add
add
aad
mov
test
add
int
push
mov
add
add
add
add
xchg
xchg
push
jb
mov
add
add
add
data16
add
add
int
imul
in
in
pop
xor
push
lea
pop
xor
shl
push
lea
push
lea
push
call
add
into
movsl
add
add
mov
fs
fwait
mov
enter
jl
add
repnz
add
jae
jbe
sti
filds
outsl
hlt
test
mov
add
mov
int
test
cwtl
add
mov
hlt
pop
xor
shl
push
rol
pop
xor
push
lea
dec
lea
shl
pop
shl
push
push
push
lea
push
lea
push
push
push
call
add
cmpsb
push
out
add
jge
add
movsl
xlat
add
pop
in
add
mov
add
mov
repnz
rolb
add
mov
fiadds
add
jo
add
movb
add
add
mull
add
add
sub
pop
xor
mov
push
ror
add
shr
add
pop
add
push
push
push
push
push
lea
push
push
push
call
add
adc
mov
sti
xchg
cwtl
aam
add
jb
push
pop
xchg
into
cmpl
aad
add
pop
add
add
xchg
hlt
pop
add
mov
xchg
xchg
ret
add
scas
jae
outsl
add
lahf
add
add
lods
add
add
add
imul
stc
js
cmpsb
call
in
sub
pop
pop
push
add
xor
not
shl
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
test
mov
mov
jle
push
add
add
push
into
add
lea
int
push
pusha
push
add
add
add
sub
pop
pop
push
push
push
push
call
add
hlt
addb
fstl
jae
add
push
mov
cld
cmc
add
ja
mov
scas
mov
bound
mov
xchg
rolb
shlb
pop
add
fs
xchg
add
add
add
clc
lods
mov
in
lock
lcall
leave
push
inc
dec
add
lea
pop
ret
push
ror
rol
sub
pop
push
mov
push
push
push
push
call
rclb
cmpsb
push
fnstsw
cmpsl
add
add
icebp
fcmovbe
jl
add
add
add
add
mov
fs
mov
movsl
lcall
add
popf
mov
xchg
xchg
push
add
in
lock
lcall
push
add
ror
pop
push
push
push
lea
push
push
push
call
pop
mov
mov
add
fildl
add
add
lds
lods
push
add
fucomi
add
jo
jge
aad
xchg
push
push
jnp
outsl
add
mov
scas
pop
data16
add
jne
add
lods
enter
in
pop
push
push
push
push
push
lea
push
call
add
mov
add
jbe
push
loopne
xchg
mov
add
fwait
gs
add
mov
add
je
jns
fwait
callw
add
lcall
push
sub
lea
pop
mov
push
xor
sub
pop
mov
push
dec
pop
mov
push
lea
push
call
add
add
add
call
add
xchg
addb
xchg
js
mov
add
std
pop
add
add
add
popa
add
mov
in
clc
lcall
rorb
test
add
push
push
push
lea
push
push
call
add
add
add
add
add
in
test
mov
js
pop
add
scas
addr16
mov
fiaddl
add
test
add
fwait
add
xchg
loope
xchg
add
add
lret
add
mov
jecxz
add
lahf
add
add
rolb
test
cmc
add
add
out
in
in
lcall
jno
push
sub
not
pop
test
je
push
push
push
push
lea
push
lea
push
push
push
call
pop
in
je
pop
add
lcall
test
add
faddl
shr
add
out
fildl
mov
add
loopne
lcall
notl
add
shl
add
pop
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
hlt
pushf
jne
mov
nop
fcomip
icebp
filds
test
add
xchg
add
add
addl
enter
add
add
mov
add
add
add
jns
sub
pop
mov
inc
push
push
push
push
lea
push
push
push
lea
push
call
push
loop
loope
add
add
stos
mov
push
add
add
add
push
test
xchg
add
add
les
push
jb
add
pusha
pusha
fldt
add
add
push
add
fistl
add
cld
mov
insb
add
add
in
iret
out
test
shr
add
mov
into
add
add
rorb
test
add
push
push
push
push
push
push
lea
push
lea
push
push
call
rcr
mov
push
test
add
mov
iret
pop
sar
add
add
mov
cltd
cmpsb
add
jno
push
popa
pusha
mov
mov
mov
in
fdivr
lcall
rorb
xor
add
push
pop
mov
push
inc
rol
pop
inc
push
ror
rol
shl
sub
pop
cmp
je
push
shl
pop
test
jne
push
sub
shl
pop
xor
push
push
push
call
mov
add
add
add
pop
mov
test
add
add
add
add
push
jbe
add
movsl
add
add
add
add
jl
lock
addb
jp
cmc
add
sub
pop
pop
push
push
push
call
lret
scas
lcall
addb
add
std
into
roll
add
scas
jp
testb
jns
add
cld
cmpsb
jae
mov
add
add
xchg
lahf
add
loop
add
in
hlt
pop
pop
pop
push
ror
sub
pop
pop
push
add
pop
leave
ret
push
inc
pop
mov
push
dec
inc
shl
pop
inc
cmp
jne
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
shll
fwait
xchg
push
add
ljmp
arpl
add
bound
add
mov
add
stos
mov
mov
jbe
iret
nop
addr16
jge
add
orb
add
add
lock
ljmp
add
add
test
in
fdivr
lcall
jle
push
sub
rol
rol
pop
mov
push
sub
rol
add
pop
test
je
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
faddl
add
add
jb
leave
fdivrp
leave
pop
data16
push
add
mov
add
add
fbld
mov
add
add
rolb
push
push
add
pop
add
push
xor
xor
not
shr
pop
cmp
jne
push
lea
add
pop
mov
push
sub
shl
sub
pop
test
je
push
rol
inc
dec
pop
mov
push
rol
dec
lea
pop
add
cmp
je
push
add
inc
not
sub
pop
jmp
xor
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
out
add
add
popl
mov
push
stc
add
add
out
mov
jmp
add
pop
pop
push
push
push
push
lea
push
call
mov
movb
xchg
incb
loope
add
lcall
mov
arpl
add
div
nop
int3
movsl
mov
push
cmpsl
jle
loopne
xchg
fucomip
aam
push
test
mov
mov
fcompl
mov
add
add
mov
add
jge
push
add
roll
test
aam
add
jp
push
add
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
mov
lea
je
clc
mov
push
add
sarb
out
push
mov
pop
add
pop
orb
add
add
mov
add
add
cltd
mov
add
addr16
add
add
mov
fcomps
push
inc
ror
dec
pop
ret
lea
push
rol
pop
pop
pop
push
add
not
sub
pop
pop
push
push
push
lea
push
lea
push
push
call
mov
add
xlat
rcrl
loopne
push
lcall
mov
idiv
mov
outsl
push
arpl
leave
pop
xchg
add
add
cli
xchg
sti
popa
mov
add
add
add
add
icebp
mov
add
mov
add
mov
push
add
add
mov
fldl
sub
pop
pop
push
push
push
push
push
push
push
call
jnp
aad
notb
mov
popf
add
push
jmp
push
add
add
xchg
arpl
testb
add
xchg
add
sahf
add
add
shr
mov
add
cld
arpl
add
lcall
ret
push
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
jo
add
jns
mov
mov
add
mov
add
cld
mov
add
insb
mov
add
mov
cwtl
mov
fsub
mov
add
add
jb
lret
mov
std
add
add
lahf
stos
sub
pop
pop
pop
push
dec
ror
pop
pop
push
add
dec
add
pop
pop
push
inc
ror
rol
ror
pop
leave
ret
decl
decl
test
lcall
decb
incb
xchg
push
xchg
out
std
das
xor
bound
outsl
pop
mov
out
mov
pusha
lock
fdivrp
cltd
mov
xchg
and
mov
xchg
in
mov
movsl
into
push
cmpsb
push
cltd
xor
and
outsl
mov
cmp
or
push
inc
mul
int
std
xchg
pushf
fwait
mov
pop
popf
push
cli
dec
and
lret
inc
sub
jp
mov
std
fisttpll
mov
sub
mov
pop
inc
faddl
jle
dec
push
sbb
lods
imul
in
into
cmp
sub
lds
in
lcall
pop
mov
repz
inc
stos
cmp
cli
or
push
mov
add
scas
dec
clc
dec
cmc
daa
popf
sub
out
push
jg
jnp
mov
clc
pop
rcrb
test
jmp
fs
pop
push
movsb
hlt
sahf
xor
xor
xchg
cmp
xchg
dec
pop
push
into
pushf
movsb
mov
dec
scas
jp
cmp
adc
xor
xor
mov
sub
leave
stos
aam
xchg
dec
and
sub
and
hlt
jbe
push
and
and
jno
mov
pop
mov
mov
or
jl
fwait
int
jbe
add
sub
cmc
in
inc
mov
mov
mov
out
jp
sbb
xor
and
pushf
sub
into
fs
mov
sub
ja
fnstsw
aam
mov
lcall
push
in
ret
push
pop
mov
inc
mov
push
enter
mov
inc
enter
push
mov
lock
cmp
lds
sub
xlat
push
lock
scas
mov
xchg
xlat
cmpb
add
repz
movsb
std
rcr
cwtl
sarb
data16
mov
jns
sbb
fistl
or
mov
inc
std
cmc
add
stc
movsb
lods
in
and
cld
mov
push
and
cmp
fisubs
push
mov
pop
outsl
stos
adc
popf
jae
xor
iret
mov
insb
adc
jle
stc
jne
movb
shll
rolb
bound
pop
lods
rol
sbb
xchg
cs
aaa
inc
sbb
pop
add
rcl
push
pop
cltd
push
movsb
dec
mov
mov
jmp
add
enter
lret
lea
dec
cltd
enter
add
rcll
je
popfw
xor
clc
push
cld
int
and
movsl
mov
fsubrs
cmp
xor
mov
roll
jno
fsubrl
or
movsb
xor
and
out
sahf
ret
movsl
xchg
push
aas
lock
cmp
push
rorb
int
rclb
lret
push
add
or
jb
lret
inc
in
xor
inc
cltd
cltd
cmc
enter
pusha
inc
scas
loope
into
sub
jo
jb
and
pop
cmc
into
jno
add
sbb
insb
pop
addr16
pop
cmp
loopne
bnd
xchg
lods
addl
pusha
pop
out
lcall
pop
scas
lds
sahf
pop
xchg
adc
iret
push
jmp
or
cmp
imul
pop
or
mov
push
lahf
push
jge
cmp
sub
cld
jno
push
shrb
mov
add
push
scas
testl
pushf
imul
sub
lock
pop
test
push
call
cmp
xor
stos
xchg
cmp
pop
xchg
pop
push
xchg
dec
popf
es
iret
fbstp
loop
test
jecxz
jnp
or
jmp
or
fbld
and
cmp
stos
fs
daa
aam
and
mov
pop
je
addb
cmp
imul
scas
pop
cmp
in
mov
imul
sbb
mov
mov
scas
add
in
ret
sbb
push
xchg
adcl
jb
sub
les
cmpsl
mulb
dec
div
scas
das
fwait
hlt
cld
jb
cmp
pop
mov
jp
push
inc
mov
xor
jbe
jmp
js
sti
xor
push
push
clc
sbbb
cmc
test
jmp
inc
insl
aam
mov
pushl
rorl
leave
int3
sbb
mov
xchg
sbb
in
mov
rcrb
or
pop
rorb
xor
cmc
pop
arpl
daa
imul
insb
lods
mov
mov
xlat
es
mov
arpl
outsl
sbb
test
ja
mov
mov
in
andb
adc
ret
stos
insl
or
xchg
dec
fidivl
pop
fstpt
jne
scas
or
adcb
jle
daa
dec
std
gs
in
mov
popf
cmpsl
fs
cpuid
cmp
ret
lods
or
mov
pop
icebp
sti
mov
sbb
mov
mov
or
mov
adcl
lcall
xor
mov
sbb
sub
fsubr
cmp
mov
imul
jo
pop
add
fiaddl
repnz
bswap
clc
jnp
inc
lock
xor
fs
xor
in
jo
mov
shr
xchg
inc
jmp
dec
jo
std
sub
inc
xchg
and
lock
inc
or
inc
fldenv
and
fmuls
pushf
enter
std
and
xor
iret
push
xchg
jg
push
imul
movsb
aad
lret
lods
mov
inc
adc
in
dec
cld
add
addr16
stos
xchg
mov
sub
cs
cld
iret
mov
mov
mov
jnp
scas
fsubl
adc
sub
enter
dec
imul
dec
mov
inc
lea
es
xchg
add
jg
cmpb
mov
jae
pop
movsb
mov
je
aam
xchg
inc
and
or
mov
mov
enter
rcr
shrl
and
pop
popf
inc
adc
inc
ds
pop
mov
cmp
in
adc
inc
dec
in
xor
cs
orl
dec
mov
aas
mov
dec
fcomps
ljmp
stos
pop
mov
mov
repnz
ret
xchg
cmpsb
or
and
mov
insb
dec
lret
std
adc
xchg
shll
mov
dec
xchg
sbb
or
in
add
in
or
cwtl
mov
sbb
xchg
inc
std
inc
push
pop
imul
adc
clc
sarb
pop
add
mov
xor
mov
xor
cmp
adc
jns
pushf
scas
xor
cli
jp
push
fisubs
stc
aam
lret
xchg
adc
and
je
fistpll
idiv
dec
lods
cmc
loopne
push
movsb
pop
stos
stos
jae
rcrl
lea
dec
call
and
and
cmpsb
roll
jle
mov
push
ret
xchg
cmp
jl
sahf
test
lods
cmp
pop
cli
sbb
pop
mov
jecxz
mov
adc
inc
cld
dec
shr
dec
aad
movsb
dec
or
ss
les
xchg
stos
subl
dec
ss
arpl
push
mov
mov
xor
pop
mulb
mov
lea
mov
or
lret
push
repnz
ja
popa
cmp
frstor
ret
pop
add
outsl
pop
pop
push
rcll
ds
icebp
shll
lods
mov
xorl
adc
lock
sub
mov
jo
mov
shlb
push
pop
jbe
mov
jno
ja
dec
xchg
lcall
sbb
std
sub
outsb
jno
add
fs
mov
sbb
cwtl
sbb
rol
mov
scas
dec
daa
add
jecxz
fldenv
das
mov
and
dec
dec
sbbl
push
jnp
pusha
adc
scas
lods
lahf
out
cmpsl
inc
xor
cltd
jecxz,pt
or
lret
addps
inc
jecxz
or
dec
mov
in
xchg
pop
outsb
dec
mov
cmc
mov
lahf
sub
inc
push
sub
jne
and
inc
test
pop
and
add
fdivrs
sub
xor
mov
xchg
xchg
outsl
inc
and
pop
add
adc
xchg
push
sbb
loop
push
jle
rolb
cltd
fildl
add
mov
movsl
ret
mov
lods
fs
rcrb
inc
or
subb
sbb
sbb
inc
pop
dec
icebp
cmp
sarl
push
mull
mov
pop
icebp
mov
repnz
clc
mov
int
arpl
popa
and
pop
mov
loope
stos
lcall
loopne
lahf
bound
pop
inc
iret
or
test
fs
mov
dec
push
scas
aas
into
mov
or
arpl
inc
in
dec
mov
test
jne
es
mov
insb
jae
test
int
aam
imul
out
filds
into
jae
gs
fnstsw
call
je
cs
cmpb
push
mov
jmp
lea
and
mov
jae
jo
mov
cs
faddl
xor
lret
mov
enter
movsl
mov
shrb
pop
xchg
int3
inc
jmp
fimull
or
xchg
je
sti
xlat
js
pop
cli
sub
icebp
outsb
or
and
loope
ja
inc
pop
sub
notl
mov
in
dec
leave
xchg
fwait
es
lcall
push
xchg
add
sbb
inc
jne
ret
pushf
gs
loopne
sub
js
mov
nop
je
popa
dec
or
xchg
mov
xor
gs
cmpsl
iret
test
mov
sbb
arpl
inc
aas
ret
aad
fcmove
and
mov
mov
push
aas
push
fcomps
push
fists
outsl
xor
enter
setle
cltd
leave
add
popa
mov
xor
js
sub
insl
add
jg
jne
rcrb
fsubl
je
divl
fsub
xchg
aam
ljmp
pop
add
xor
ja
fiadds
test
in
dec
mov
hlt
xor
push
mov
xchg
dec
leave
and
jns
out
imul
sub
push
push
iret
es
mov
or
fadds
out
jle
stos
push
inc
negl
inc
mov
jbe
fwait
mov
dec
loop
std
sti
jne
lahf
jae
int
xchg
mov
inc
push
and
jb
pushf
popa
insb
xchg
mov
rcr
rorb
add
inc
test
test
repz
popf
sub
pop
jecxz
pop
xlat
cltd
and
fisttpl
test
out
cli
out
das
daa
adc
in
scas
pop
pop
push
loope
push
jo
lds
mulps
mov
das
mov
loopne
dec
shl
aas
pop
mov
mov
push
xchg
or
pop
sbb
or
mov
sbb
cmp
je
sbb
inc
in
aaa
fidivrs
out
fildll
jge
insl
jge
fxch
std
iret
inc
pop
pop
fnstenv
sbb
mov
xor
rol
inc
jl
dec
pop
int3
jbe
xor
sahf
mov
adc
xchg
and
add
adc
jbe
sbb
inc
pushf
pop
mov
adc
and
mov
push
jge
jmp
fisttpll
loopne
mov
fwait
gs
orb
imul
jg
bndldx
dec
inc
cli
aaa
inc
lret
cmp
or
enter
sbb
addl
test
iret
imul
inc
mov
lret
sbb
xlat
test
rorl
mov
pop
lds
inc
sbb
test
sbb
les
xchg
fwait
xchg
dec
push
cwtl
ja
dec
dec
xor
movsb
push
lods
outsb
mov
das
add
sub
out
adc
aad
shll
dec
das
inc
and
pusha
mov
adcl
addr16
or
ljmp
or
jl
mov
jle
xor
arpl
mov
adc
pop
xor
in
aas
das
mov
ret
mov
test
lock
stc
mov
sahf
jno
ds
jle
jle
or
dec
push
push
mov
adc
lahf
iret
jb
lahf
nop
dec
mov
scas
scas
mov
sahf
jge
dec
flds
dec
cwtl
and
in
flds
add
pop
xor
nop
cmp
ds
mov
sbb
pop
aad
testb
call
arpl
mov
and
and
or
idivb
cmp
out
mov
aad
jbe
call
aas
push
movsl
xchg
repz
addl
jo
popa
xchg
lods
pop
adc
cmc
inc
push
push
xchg
arpl
inc
js
xor
adc
ja
adc
rorl
dec
daa
outsl
push
inc
scas
stos
xchg
xor
xor
jbe
pop
mov
stos
inc
or
jo
scas
add
push
fcomps
test
xchg
mov
fdivr
ret
pop
push
jge
aam
pusha
mov
mov
xor
xchg
imul
or
ds
popf
mov
pop
inc
xor
jbe
pushf
out
xchg
inc
mov
scas
mov
cmp
inc
add
add
push
insl
xchg
popa
pop
jge
mov
leave
push
adc
cli
sub
pop
push
cltd
and
or
clc
mov
pop
add
lcall
mov
iret
insl
dec
mov
mov
jecxz
inc
lahf
mov
fisubrs
dec
in
sub
add
push
jnp
shl
loopne
pop
sbb
out
ja
pushf
aas
and
pop
push
mov
pop
movsb
call
incw
mov
ja
cwtl
mov
in
sbb
mov
testl
add
fbld
mov
sbb
imul
sbb
fbld
clc
cmpsl
mov
add
pop
dec
cmp
pop
rcrl
xlat
xchg
fildl
jo
fistps
cmpl
aaa
lret
dec
push
sbb
mov
movb
adc
jmp
mov
leave
push
lahf
test
push
stc
jecxz
and
add
les
xor
mov
icebp
adc
sub
sbb
cwtl
insl
sti
jb
test
je
adc
or
add
testb
jecxz
dec
in
test
mull
mov
daa
addb
inc
sbb
test
imul
and
mov
stc
mov
scas
stos
std
aas
lret
dec
xor
js
idivb
sub
and
fcmovnu
pop
enter
mov
mov
jge
adc
and
sub
cmpsb
ja
or
aas
push
fisubl
sub
out
out
pushf
push
ja
into
inc
imul
push
adc
jmp
mov
dec
insl
subl
push
xor
pop
popf
lret
imul
sub
cmp
add
pusha
fwait
pop
cltd
ljmp
repnz
sub
popa
xchg
push
sbb
cmc
xchg
jno
int
pop
movsb
sbb
jo
test
jmp
lock
in
mov
mov
push
lcall
sti
or
out
or
int3
cmp
mov
push
xor
enter
mov
jmp
push
and
rcrb
xchg
testb
test
push
jbe
rorb
jg
dec
pop
and
mov
out
gs
sub
out
mov
fimuls
jb
outsb
orl
nop
test
nop
iret
aam
sub
dec
push
push
cmp
ret
daa
cli
aad
pop
xor
or
xchg
enter
loop
mov
jmp
pop
inc
nop
dec
xor
cmp
push
xorl
lods
jg
push
sti
cmp
lock
push
jmp
mov
pushf
and
cwtl
cld
dec
fldenv
lods
ljmp
inc
scas
cmp
or
test
mov
lret
fdivs
pop
bound
outsl
std
stos
mov
or
and
xchg
jecxz
cmc
hlt
sbb
push
or
adc
cmpsb
xor
cmpl
stos
cmp
cltd
and
sub
insb
mov
or
mov
push
das
imul
inc
mov
test
aaa
mov
pop
or
push
ss
xor
push
test
aad
je
fistps
outsb
mov
xor
mov
leave
dec
cmovg
sahf
int
aad
or
sub
insb
int
pop
ret
xor
push
aas
imul
insb
aad
call
imul
jge
call
dec
lea
mov
int
lcall
andl
sub
stos
dec
bswap
xchg
cli
lret
jmp
mov
call
imul
lahf
jnp
mov
rclb
mov
jbe
imul
xchg
xor
cmp
mov
sub
pop
cmp
sbbb
test
jbe
js
lds
shlb
adc
sub
arpl
sbb
jo
xor
pop
lret
sbb
fwait
outsb
cmp
push
hlt
mov
xor
xchg
cld
push
sub
mov
xchg
lods
xor
or
loope
mov
dec
mov
pushf
ffree
popa
xchg
ret
aaa
mov
pop
pop
lret
das
pop
enter
lea
add
lahf
mov
lock
pop
dec
ljmp
mov
insl
movsb
shlb
xchg
add
fwait
lret
ss
sub
das
clc
les
cmpsl
rorb
xlat
adc
mov
inc
stos
sbb
add
push
mov
mov
inc
jnp
mov
lret
call
in
stos
rcrb
ret
sarb
int3
and
push
adc
jne
nop
jl
inc
add
mov
cmp
lret
pusha
out
mov
sbb
sbb
and
das
push
xchg
imul
arpl
xchg
push
or
sub
or
or
cltd
in
cli
xchg
test
jle
sbb
out
arpl
mov
pop
in
sarb
pusha
push
mov
adc
jmp
inc
repnz
mov
cmpl
testb
repnz
sarl
rcl
clc
push
lret
enter
adc
mov
shrl
mov
mov
es
mov
dec
xchg
add
inc
dec
or
xchg
inc
dec
dec
push
sbb
mov
mov
jmp
mov
fstpt
addb
adc
out
jae
mov
ret
cmp
add
sbb
iret
sbbl
inc
adc
aam
test
fbstp
mov
loopne
lcall
mov
dec
fmuls
ret
aaa
in
cmp
and
je
pop
ja
xchg
add
jnp
cs
xchg
add
inc
pop
push
sub
lcall
pop
sti
add
xor
mov
push
lea
lret
mov
movsl
sbb
jbe
je
mov
sub
pushf
ljmp
xchg
shlb
cmp
adc
jno
stc
shrl
orb
js
xor
addl
cmp
mov
pop
mov
mov
call
jae
das
inc
and
cmp
sub
stos
dec
pop
inc
xor
daa
mov
test
push
enter
mov
aam
rclb
push
mov
push
arpl
mov
push
cwtl
jo
in
rclb
inc
aas
iret
int
stc
out
jno
jmp
xchg
push
mov
lods
mov
imul
adc
add
push
push
cmpsl
sbb
int
and
and
notl
xor
push
aam
dec
lods
das
das
mov
and
pop
sbb
mov
je
test
adc
and
divl
popf
daa
xor
sbb
lret
fwait
daa
ror
sub
lock
lods
ds
mov
sbb
mov
in
xchg
pop
nop
jecxz
sub
js
daa
mov
push
testl
sbb
mov
das
sbb
js
push
xchg
xchg
mov
daa
dec
rcrb
push
mov
les
adc
push
xchg
das
lods
cli
xchg
and
mov
inc
or
rclb
ja
bnd
xor
je
lahf
push
aas
push
adc
cmp
pop
mov
aas
add
jge
cltd
mov
imul
lea
inc
iret
ja
mov
fcoml
mov
iret
push
das
jl
in
lds
xlat
mov
je
test
add
pop
cmpsb
cmp
cltd
mov
inc
inc
pop
or
pop
mov
push
jecxz
insb
xor
lret
ja
int3
imul
popa
jle
imul
dec
out
pop
add
mov
pop
and
popf
xor
or
test
testl
mov
imull
shrb
stos
in
mov
jae
cmp
sbb
lcall
in
xor
cs
jg
rorb
mov
es
and
aad
lods
aam
and
fstpl
push
addr16
dec
push
outsl
or
enter
jle
testl
cmp
in
pop
dec
sti
daa
cmp
mov
int3
lds
adc
mov
bound
iret
push
sbb
push
out
clc
fisttpl
mov
and
inc
xor
jnp
dec
jne
mov
movsl
sub
das
nop
mov
ffreep
push
jae
dec
sbb
push
repnz
scas
mov
rcll
lret
sub
mov
lods
jle
iret
outsb
xchg
dec
sbb
inc
add
dec
xchg
xlat
in
inc
int3
repnz
js
ret
dec
cmp
arpl
pop
dec
jb
hlt
cmpb
icebp
ret
or
xor
mov
ret
xchg
push
and
mov
mov
push
outsl
push
sub
push
cmc
push
jp
and
rcrl
push
push
cld
loopne
popa
mov
add
xchg
sar
pop
jmp
jnp
cmp
je
loop
mov
sub
cwtl
jo
cmp
mov
xchg
xor
inc
sub
xchg
fucomi
iret
inc
push
shll
movsb
and
movsb
ret
push
xchg
mov
dec
scas
fsubrs
scas
ljmp
fildll
std
sub
sub
fwait
or
js
cmp
rcll
xor
dec
addl
testl
push
pop
rolb
aam
xor
or
jecxz
loope
lods
dec
cwtl
leave
test
push
sqrtps
rclb
sahf
jbe
pop
adc
shll
or
rclb
popf
adc
or
enter
sub
inc
outsl
dec
mov
sub
mov
sub
inc
xor
or
fsubr
cmpsl
sbb
cwtl
mov
or
pop
add
push
sbb
pop
cmpsb
mov
jnp
jmp
out
in
jbe
push
pop
movsl
push
mov
loopne
cmp
and
aad
dec
fbld
call
push
add
leave
pop
es
fdivs
bound
xor
and
cmp
xchg
fnsave
aam
cmpsb
sub
pop
cs
xchg
xor
mov
mov
mov
sbb
je
lods
aad
cmpsb
hlt
add
mov
dec
movsl
jmp
sbb
test
cmp
mov
aaa
rcl
mov
fdivrs
rolb
ds
sub
jg,pn
jg
sbb
lds
cmp
jg
cmp
js
hlt
into
nop
push
fstpt
mov
fldenv
cmpsl
testl
fstl
arpl
in
orb
cmpsb
mov
jo,pt
sub
in
fisubs
dec
int3
mov
clc
adc
iret
pop
outsb
jnp
test
jno
lcall
insb
xchg
adc
or
sub
cmpsb
adc
jl
jo
popa
fbstp
cli
lahf
loope
or
jnp
xchg
fdivl
repnz
pop
fisubl
mov
les
pop
repnz
imul
cmpsl
fdivs
lret
push
cmp
jg
xchg
or
xor
outsb
lock
subb
je
mov
xorl
cmpsl
and
push
xchg
int3
out
or
mov
sbb
xor
stos
and
push
ljmp
stos
and
leave
add
mov
cmp
jb
ljmp
filds
or
push
adc
sub
int3
imul
fidivrs
insl
repz
jp
dec
jp
arpl
fisttps
movb
jne
pop
inc
loop
fadd
sbb
jl
xchg
and
imul
in
jle
jo
inc
in
and
mov
sub
jecxz
push
fistpll
xchg
aaa
and
or
push
lret
mov
inc
out
mov
mov
pop
aam
sahf
dec
mov
lods
in
scas
cmpsb
dec
data16
pop
pop
lret
enter
lods
popf
jmp
and
push
jmp
movsb
inc
jae
js
fxch
sbb
outsl
add
sub
adc
lcall
or
lret
and
adc
push
in
data16
fldt
in
or
aam
movsl
pop
sub
xor
shlb
aad
push
pusha
data16
jge
in
sbb
xor
cmpb
mov
mov
mov
jle
push
mov
cmp
les
jno
pop
ljmp
enter
imul
fs
mov
leave
jle
add
jb
mov
popf
in
dec
fdivrl
mov
insl
mov
adc
test
add
movsl
fisubl
xchg
mov
shll
out
inc
cmc
out
sub
xchg
mov
gs
imul
or
mov
sub
loope
xorl
adc
and
aaa
fcoml
rcrb
lret
in
es
mov
dec
roll
data16
clc
jg
mov
jb
ret
testb
in
popa
jecxz
mov
daa
ljmp
push
lret
adc
jbe
int3
add
daa
iret
inc
pop
les
sub
pop
jmp
fiadds
xor
or
cmc
jl
in
bound
adc
cwtl
lcall
lret
test
pop
adc
gs
mov
pop
push
cwtl
out
inc
aam
or
sbb
ljmp
loop
and
mov
inc
pop
inc
popf
xchg
aad
add
push
or
xchg
popf
out
or
rcrl
push
test
pop
int
xor
lods
jle
push
movsl
or
mov
xor
out
notl
ja
movsb
adc
or
mov
dec
test
in
adc
icebp
sbb
test
je
xor
fdivrs
or
adc
jmp
pop
pop
inc
inc
ljmp
sub
mov
and
sub
orb
std
mov
insl
insb
cmp
mov
jg
inc
inc
fs
jle
ret
pushf
je
shll
or
mov
xor
xchg
mov
jo
pop
mov
or
inc
dec
sti
out
insb
mov
sub
add
cmp
shld
fsubrs
femms
shlb
sbb
xor
decl
cmpb
and
in
xor
cli
sub
xorl
xchg
inc
inc
pop
addr16
xor
lods
movsl
sbbl
and
test
sbb
cs
cmpsb
ss
xlat
push
pop
negb
fidivl
push
dec
sub
mov
inc
adc
scas
or
aas
lret
mov
sbb
lcall
stc
movsb
jbe
pop
xchg
lret
sbb
int3
dec
xor
test
movsb
test
xor
repnz
inc
cltd
cmpsl
stos
dec
fs
cmpsb
je
lahf
popa
xchg
pop
scas
filds
shl
push
popf
adc
pop
sbb
xchg
stos
iret
pop
fucom
and
xchg
scas
mov
mov
pop
mov
cmp
sub
movsl
mov
lcall
imul
jge
sbb
dec
stc
movsb
adc
notl
mov
ret
push
lahf
hlt
and
loope,pn
xchg
cmpb
lods
mov
xchg
lahf
push
out
mov
outsb
hlt
int
inc
aam
or
mov
scas
pop
cmp
mov
insl
repz
push
out
push
repnz
inc
mov
iret
rcrl
sbbl
sub
cli
push
xchg
fs
push
xor
cltd
push
xlat
jg
iret
push
daa
mov
js
push
fwait
arpl
adc
pop
pop
loopne
out
es
and
lcall
mov
dec
mov
and
inc
or
bnd
out
insb
ret
push
ftst
sbb
test
and
out
push
fstps
push
sahf
lea
jl
and
add
imul
stos
test
cmp
adcb
out
call
cld
pop
lahf
sbb
mov
aad
and
cmp
adc
sub
sbb
cmpsb
lods
into
mov
dec
jno
dec
dec
scas
add
adc
or
jb
inc
mov
inc
jne
cwtl
lret
inc
mov
sbb
mov
adc
push
pop
enter
mov
inc
cmp
mov
sub
mov
push
aam
adc
jp
mov
sti
adc
push
stos
aaa
mov
mov
dec
cmpsl
les
ja
sbb
leave
push
cs
rorb
dec
cmp
fidivl
xchg
leave
xor
cmp
xor
mov
scas
pop
daa
xchg
call
cmp
outsb
sti
nop
pop
mov
adc
or
inc
xchg
rcrb
out
mov
jle
mov
test
sahf
adc
mov
cmc
mov
dec
or
fdivs
icebp
dec
movsb
inc
sbb
shlb
and
negl
je
inc
divb
sbb
push
test
mov
insb
imul
dec
es
mov
lret
fidivl
pop
xchg
cmpsl
lcall
jmp
xchg
or
sarb
mov
dec
insb
dec
mov
inc
lahf
cmp
and
rorl
xor
mov
jno
ja
lea
sbb
push
bound
inc
cmc
int3
mov
push
roll
mov
inc
aas
jge
add
cmp
xchg
popa
rcll
sbb
dec
sbb
mov
or
leave
and
pop
push
mov
aaa
cmpsl
outsl
adc
sub
push
jg
in
push
stos
lsl
mov
addr16
mov
jb
mov
push
pop
sub
leave
jae
jmp
push
out
ds
xor
shld
popa
fstpt
out
xchg
mov
xchg
cltd
jns
or
sbb
inc
xlat
jle
cmpsb
jmp
jbe
cltd
adc
add
push
ret
inc
push
push
sub
push
lock
pop
pop
mov
dec
fs
mov
insb
add
rcrb
mov
in
or
xchg
test
push
in
inc
int
push
push
adc
pop
vpsubsb
insl
dec
cmc
dec
mov
jns
mov
pusha
ficoms
leave
dec
jg
shll
roll
cmp
xchg
cld
cmp
mov
jecxz
push
ret
push
and
into
mov
sbb
pop
push
push
scas
cmp
jmp
dec
xchg
repz
mov
cmpsl
and
pop
push
jp
into
testb
mov
iret
sahf
call
cmc
popa
sub
xor
xchg
imul
fsts
xor
xor
roll
aaa
pop
push
push
adc
pop
jo
rcrb
jnp
lods
pop
inc
mov
cli
repnz
movsb
cld
stc
sbb
dec
mov
cmpsb
adc
mulb
ja
cld
or
cmp
inc
orb
ss
ljmp
into
lock
cmp
xor
sbb
mov
xchg
lods
iret
add
subb
mov
out
mov
mov
sbb
mov
mov
mov
jp
jno
sub
in
mov
ja
jl
mov
fiaddl
je
pop
mov
popf
fsubl
ficoml
xor
stos
mov
jbe
fadd
sub
cmp
xor
les
insb
xchg
xor
shll
inc
inc
addb
rolb
in
mov
repz
cli
sbb
adc
jns
nop
gs
jns
sbb
call
adc
cld
mov
sbbl
mov
paddusb
mov
mull
xchg
cmp
call
fiaddl
push
jmp
stos
push
add
cmp
sub
sub
dec
mov
in
das
pop
xchg
pushf
out
pushf
pop
add
sbb
or
test
fidivs
popf
fwait
insb
ljmp
add
xchg
sbb
adc
flds
rcll
sahf
adc
dec
mov
pop
or
cmp
push
cmp
inc
popf
in
fwait
mov
jb
stc
sub
cltd
sbb
xchg
or
out
jo
jnp
pushf
or
aad
add
add
insb
push
lahf
sbb
xchg
shlb
lret
sbb
jmp
arpl
or
adc
out
add
clc
mov
popf
mov
das
sarl
dec
fdivrl
in
xchg
jmp
mov
icebp
xchg
jp
push
lcall
sbb
and
repnz
push
int3
mov
xchg
xchg
lret
jle
lcall
rcr
cmpsb
and
xchg
push
or
into
fxch
jnp
push
pushf
mov
xchg
into
fisubs
jmp
xor
sub
xchg
mov
xor
lahf
testl
fadd
outsb
ss
outsb
into
shrb
cld
lret
push
aad
pop
pop
fmuls
pop
mov
sar
sub
mov
movsl
mov
lds
mov
mov
mov
xchg
push
ja
mov
pop
in
and
cmpsb
inc
push
rcrb
xor
lock
rclb
lcall
or
inc
push
cmpsb
xchg
pop
jl
xor
adc
pop
aas
dec
ja
es
int3
pop
push
js
imul
add
and
add
xor
lods
hlt
js
xor
andl
inc
xchg
mov
lods
inc
push
xchg
dec
sub
test
cmpsl
rorl
xchg
adc
hlt
sbb
daa
das
imul
ret
js
push
lods
dec
jge
pop
cs
aam
sub
es
push
aaa
sub
and
mov
push
or
and
sub
sbb
and
rclb
lret
mov
scas
adc
jo
push
ljmp
inc
repz
jmp
movsl
repz
push
stos
nop
movsb
push
nop
and
gs
bound
hlt
jge
nop
ret
adc
pop
lcall
xchg
sbb
mov
cmp
and
or
mov
dec
icebp
and
in
fidivs
cld
or
sbb
dec
scas
aaa
lret
add
push
in
xor
insl
push
sbb
fucom
mov
popf
mov
arpl
adc
xchg
jp
scas
cwtl
jns
xor
enter
movsl
addr16
mov
inc
mov
loope
cs
gs
arpl
aaa
add
int3
jg
push
lea
add
xor
xor
mov
cmp
fidivs
inc
jbe
int3
aad
cmp
mov
fcompl
and
mov
repnz
dec
xorb
rclb
js
xlat
gs
sub
rorb
icebp
call
loope
sahf
insl
add
sbb
push
sbb
pop
fisttpl
out
arpl
xor
jge
rcrb
pop
jge
jmp
arpl
jle
adc
lahf
je
jp
sbb
sbb
push
negl
cmpsb
dec
xor
and
mov
sbb
outsl
incl
xchg
pop
cmp
loopne
xor
cli
ffree
cltd
add
cwtl
lahf
xor
sahf
sti
fcmovbe
popa
out
hlt
add
daa
mov
test
add
mov
push
movsb
jbe
xorb
or
sbb
mov
add
jle
jns
repz
repz
clc
inc
ljmp
push
adc
sub
rol
and
and
jg
test
mov
ret
loope
leave
jo
pop
and
push
xchg
mov
inc
xor
insb
mov
fistl
repz
cmp
mov
sti
loopne
sub
andb
lods
push
mov
adc
pop
xchg
adc
pop
enter
adc
adc
fidivl
xlat
imul
ja
mov
ficoms
jae
lods
ds
mov
add
test
mov
mov
out
popa
daa
xor
pop
cs
sbb
push
pop
jle
adcb
xchg
and
push
adc
push
in
mov
xchg
sbb
jmp
lret
lcall
cmc
rol
ds
jge
adcb
je
filds
enter
add
or
or
adc
lea
add
imul
hlt
cmovnp
into
call
jmp
push
lahf
jmp
mov
and
inc
hlt
jne
fmull
adc
mov
sbb
clc
loope
rcrb
les
in
data16
ret
fstps
je
jbe
dec
sub
ret
sub
push
mov
mov
insl
outsl
jno
jb
pop
jb
and
mov
dec
ret
xor
pushf
sar
into
mov
fisttpl
pop
mov
add
jl
mov
jg
hlt
xchg
in
cwtl
xlat
xchg
mov
shll
popa
les
fcom
js
mov
mov
stos
loop
xchg
mov
adc
ja
mov
fimuls
pop
or
movsb
lahf
jmp
push
dec
dec
adc
xchg
cltd
fidivs
xor
enter
es
xor
adcb
ror
push
mov
jne
into
rcl
mov
aam
fldenv
cli
push
jmp
pushf
jl
shll
std
xor
cmp
xor
jbe
fsubs
push
cltd
stc
ret
add
sub
test
in
add
dec
enter
dec
pop
jl
int
iret
pop
add
fwait
or
mov
dec
sub
pop
movsl
push
sbb
jmp
mov
loope
mov
xor
sub
sbb
movsl
adcl
pop
dec
add
sti
fcomps
aaa
movsl
adc
push
cltd
int3
js
jmp
mov
jmp
cs
pop
push
loop
pusha
lret
adcl
sahf
test
push
or
arpl
mov
popa
loope
int
push
ret
pop
iret
inc
outsb
or
xchg
push
nop
push
push
sub
cld
scas
inc
and
add
and
out
ss
imul
stos
add
ja
popf
insb
imul
mov
dec
leave
pushf
cmp
out
leave
ja
pop
mov
fistl
rcll
call
pop
arpl
adc
sub
out
or
xchg
or
in
jl
iret
rcl
test
sub
adc
shrb
xlat
rolb
sbb
mov
mov
jecxz
dec
jno
and
scas
mov
mov
sub
testb
jo
pmullw
stc
adc
sbb
fbld
stos
cmp
test
cmp
shrl
shl
adc
jne
push
rorb
sbb
mov
scas
fidivs
clc
xchg
int
pop
dec
dec
xchg
stos
xor
cltd
xor
mov
sbb
lods
inc
call
shl
mov
fisttps
inc
pop
pop
sub
lock
popf
insl
xchg
bound
std
pusha
xchg
add
pop
or
push
enter
push
mov
clc
int3
add
add
mov
mov
jmp
addr16
or
incl
sbb
out
jbe
cmp
xor
je
in
xchg
adc
jno
daa
xchg
lahf
add
pushf
xlat
add
test
jo
outsl
jle
gs
jge
outsb
add
fwait
sti
out
adc
lock
scas
clc
push
push
cwtl
mov
mov
shrb
std
mov
mov
roll
outsl
test
loopne
add
cld
cltd
pop
test
int
lock
mov
notb
pusha
fimull
push
cmp
and
lea
mov
sub
or
push
mov
mov
fwait
stos
xorb
mov
lret
mov
rcrb
out
lret
push
inc
fsubrl
aaa
jae
fnsave
sbb
push
mov
xchg
adc
inc
xchg
and
sub
insb
idiv
xchg
cli
jg
sbb
aam
dec
jne
cmc
in
mov
xlat
outsb
add
lret
mov
aad
push
test
repnz
ret
pop
mov
dec
jmp
push
pop
sub
clc
outsb
repnz
lret
loop
cmc
int
sbbl
xor
imul
sub
push
ret
jno
jg
xor
cmpsl
or
mov
pop
outsb
pop
pop
cs
lcall
rol
clc
fldt
mov
or
sub
lret
enter
std
cwtl
or
cmp
loop
lods
add
mov
cmp
pop
sub
dec
cwtl
cmp
lock
xor
lahf
xchg
adc
sub
mov
jae
sub
jno
dec
pop
push
shlb
fwait
sahf
sbb
frstor
gs
insb
test
test
std
aad
lret
pop
lcall
fsubr
fcomps
fcom
xor
sub
and
stos
movsl
pop
cwtl
pushf
inc
push
sub
into
stos
push
jmp
sub
push
repz
xchg
pop
mov
test
cs
xor
dec
add
fimuls
dec
mull
movlps
popf
nop
aas
xor
pop
fstl
lret
loope
int
inc
mov
fmuls
out
xor
push
xchg
adc
sub
int3
sbbb
je
mov
add
mov
iret
sub
cmpl
das
bound
push
test
out
cmp
mov
mov
xor
std
mov
add
pop
push
dec
pop
xchg
cwtl
or
testl
xor
stos
pop
es
push
and
stc
and
or
mov
push
out
pop
fisttps
mov
xor
and
sahf
nop
pusha
out
sub
inc
add
lds
and
pop
fdivs
dec
dec
xor
jne
xor
or
mov
xchg
ss
cmpsl
cmpsl
mov
xchg
test
mov
rorb
mov
mov
inc
shlb
jo
outsl
sti
stc
add
mov
sbbl
movsb
add
xor
fistl
jbe
sti
sti
scas
push
dec
aaa
push
jbe
lock
fidivs
xchg
add
xchg
adc
xor
dec
xchg
psubw
outsb
and
cmp
loopne
sahf
push
outsl
mov
icebp
into
jnp
addr16
jns
lahf
jb
test
xchg
mov
xchg
fcmovne
rorl
int3
out
mov
lods
inc
cld
inc
ja
out
xchg
lcall
mov
nop
mov
xor
dec
loopne
pop
cmp
enter
int
push
dec
outsl
stc
inc
pushf
js,pt
lret
mov
sub
jbe
xor
and
mov
or
or
xlat
sub
ror
mov
mov
mov
ret
dec
mov
cld
mov
xchg
or
inc
addb
dec
adc
xchg
xchg
leave
shrl
mov
or
shll
mov
inc
dec
xchg
in
lods
mov
push
mov
mov
push
pop
inc
push
aaa
aam
jbe
nop
jns
filds
mov
aaa
shll
cmpsb
lock
idivb
mov
cltd
lahf
lods
popf
imul
mov
jle
sbb
dec
leave
jl
ret
mov
xor
sbb
insl
out
pop
dec
inc
orl
xor
dec
dec
or
lds
dec
repnz
outsb
sub
sub
das
add
insb
idiv
xchg
lahf
push
push
lcall
dec
jmp
jmp
scas
popa
mov
adc
stos
and
inc
aad
pop
popa
adc
ss
stc
and
imul
jmp
add
xchg
mov
sbb
sub
mov
jecxz
lret
pop
push
xchg
sarb
pop
daa
mov
inc
mov
pusha
jg
pop
xchg
mov
jo
mov
lods
jecxz
and
repz
adc
in
pop
or
and
jge
mov
rorl
sbb
cmp
lods
mov
shlb
insb
jne
nop
mov
cwtl
std
pushf
and
into
jne
nop
mov
pop
add
lret
or
and
lahf
stos
jns
sarl
pushf
jae
andb
lret
stos
jno
pop
sbb
pop
and
xlat
pop
pop
out
pop
into
mov
fidivs
out
cmp
insl
and
sbb
mov
das
cmpsb
jne
lds
jecxz
sub
insb
insl
push
push
js
fistps
sbb
or
cmp
hlt
enter
fisubrl
idiv
and
movsb
sub
fidivrl
fdivs
sbb
ret
push
sub
sahf
or
or
add
add
clc
xchg
cmpl
cmpsb
nop
push
mov
mov
mov
out
sbb
mov
int3
inc
imul
icebp
inc
repnz
fistps
lcall
dec
and
fists
mov
push
jg
xchg
ror
pop
push
push
mov
jge
dec
sub
test
push
out
jbe
ja
in
outsb
push
sahf
lret
sub
fistps
xlat
lds
sub
adc
je
fisubrl
mov
mov
inc
or
test
lahf
aaa
mov
test
mul
bound
xor
outsl
push
fs
jns
test
sbb
imul
lds
in
rclb
sti
pop
pop
mov
inc
fldenv
pop
pop
xchg
mov
insb
insl
js
xchg
xor
loopne,pn
mov
pop
pop
mov
pop
pusha
add
mov
sti
inc
cmp
nop
lret
out
cwtl
ja
dec
pop
imul
push
loopne,pn
add
arpl
ds
pushf
jnp
popf
mov
inc
out
into
or
adc
inc
or
ja
gs
mov
mov
ds
mov
mov
std
adc
les
gs
stc
je
outsb
icebp
loop
fistpll
xchg
out
cld
adc
sbb
pop
wbinvd
add
cs
mov
sbb
mov
mov
mov
daa
inc
addr16
lcall
push
lahf
jno
cmp
mov
push
movl
sarl
sahf
lds
int3
jle
insl
testl
pop
mov
rorl
out
gs
inc
sub
pop
bound
push
xchg
add
ljmp
jae
cmpsl
and
ja
sbb
xlat
insl
pop
pop
insl
insb
iret
pop
test
fstps
outsl
test
arpl
jb
fmull
cwtl
jne
and
jmp
mov
fs
pusha
fisubl
aaa
xchg
mov
mov
jae
dec
cltd
mov
push
sarb
jb
dec
das
inc
add
pop
leave
sub
inc
xchg
sub
pop
dec
andb
ja
loopne
push
ret
inc
dec
fs
add
ja
xchg
fs
jg
jnp
mov
mov
nop
and
jno
int
lea
mov
adc
arpl
rcrl
and
stc
das
xor
ljmp
rcrb
mov
mov
shrl
add
xor
test
cmp
shll
in
pop
mov
cmp
adc
jne
dec
pop
jb
jle
enter
mov
call
repz
in
push
mov
jno
hlt
jmp
cld
mov
jg
sarb
mov
push
cmp
cmpsb
lret
lcall
xchg
test
jge
out
push
mov
shll
rcll
push
push
dec
iret
iret
out
xchg
fdivs
push
test
cmpl
mov
bound
movsl
xchg
and
jg
mov
stos
imul
sbb
pop
pop
mov
cmc
jno
mov
jns
lds
sbb
jno
test
xor
inc
adc
add
jno
in
push
mov
xor
mov
movsl
sub
stos
mov
push
addr16
jecxz
sbb
push
dec
jo
inc
pop
push
int
mov
sbb
mov
xor
dec
push
adc
imul
jmp
adc
out
cmp
xor
jge
inc
pop
pop
add
loopne
or
xchg
icebp
adc
push
int3
mov
fimull
fadd
rorl
fs
push
call
cli
int
stos
fs
push
imul
stos
mov
pop
aas
test
pop
mov
mov
ss
scas
inc
ret
jb
rcrl
gs
int
mov
test
sbb
inc
mov
or
jo
gs
sub
mov
stc
fwait
cs
rorl
jg
cmp
mov
or
rorb
pop
subl
inc
add
flds
push
lea
dec
mov
lock
dec
pop
jmp
into
clc
mov
popf
xchg
jae
jo
sbb
xor
sub
dec
mov
and
cltd
mov
mov
nop
push
add
call
loope
mov
adcb
hlt
mov
out
nop
adcl
ds
pop
fucomip
leave
adc
cmc
cwtl
jno
push
and
sub
hlt
sarl
adc
movsl
inc
cld
mov
les
repz
inc
sub
push
sahf
test
add
popf
xor
dec
stc
adc
insl
xor
mov
aas
rcll
test
push
fnstsw
xchg
pop
cmp
sub
cmp
and
push
jmp
ja
pop
js
push
das
iret
mov
dec
jno
xor
fs
jbe
stos
movsb
or
sahf
and
int3
mov
shll
pusha
jmp
push
mov
xor
xchg
pop
cltd
aad
sbb
cli
das
push
imul
dec
lds
or
sbb
in
fs
mov
sbb
mov
fwait
sti
in
xchg
js
mov
xor
sub
xchg
cmpsb
inc
push
add
ljmp
xchg
cli
jle
pop
adc
in
bound
add
dec
jecxz
inc
xchg
roll
shrb
fstl
nop
leave
rolb
dec
mov
loop
movsb
pop
push
lock
leave
hlt
icebp
fcmovnu
nopl
dec
out
in
nop
pop
faddp
inc
cld
sbb
mov
inc
scas
jo
mov
adc
fwait
mov
fidivrl
jbe
push
jecxz
mov
sbb
inc
mov
push
scas
sahf
mov
and
mov
adc
pop
cmpsl
inc
sub
add
mov
jno
cmc
dec
inc
stc
push
call
xchg
fisubrs
inc
pusha
je
jns
std
mov
pop
push
inc
mov
or
pop
daa
xor
sarb
adc
sbb
popa
loope
imull
imul
movsb
and
fidivl
sahf
mov
fsubl
add
lret
adc
cmp
push
ret
mull
out
sub
sti
enter
jnp
addr16
cmp
xchg
adc
dec
fisubl
xor
cmp
pushf
dec
les
jne
in
test
xchg
loopw
xchg
pop
lock
push
inc
mov
add
pop
sbbl
pop
dec
fstl
xchg
push
push
std
xchg
imul
lahf
push
test
inc
push
pushf
xor
mov
fnstcw
out
inc
ljmp
or
enter
mov
and
shrb
mov
dec
jmp
mov
push
mov
or
mov
repnz
mov
jmp
pop
sub
rorl
popa
cmpps
cmp
sub
mov
or
xor
sub
out
aad
push
sub
arpl
test
mov
pop
push
xchg
add
mov
adc
dec
adc
push
jo
mov
cmp
mov
sarl
rcll
sbb
ja
dec
sbb
mov
nop
and
lock
and
dec
lock
out
jnp
sbb
mov
inc
ja
mov
dec
or
jmp
pop
mov
cld
adc
ja
xor
dec
jnp
push
repnz
leave
xchg
push
mov
lds
pop
fnstsw
imul
das
dec
adcl
push
in
es
stc
popa
in
stos
mov
loope
enter
rcr
test
mov
out
xorb
push
cld
mov
mov
jge
mov
sub
mov
sub
dec
push
mov
xor
adc
add
jo
out
add
stos
lods
neg
and
xlat
add
push
fcoml
scas
xchg
xchg
sarb
aaa
mov
insb
jecxz
aas
sbb
into
adc
pop
sub
adcb
lahf
add
mov
cmc
or
iret
cli
data16
adc
icebp
mov
and
xor
cmp
mov
movswl
inc
dec
push
jo
orl
xor
iret
les
jp
cmp
xor
mov
outsb
sub
sub
push
ror
jae
test
fucomip
mov
cmp
nop
test
xchg
dec
dec
push
inc
std
mov
sub
insl
je
inc
mov
push
leave
test
pop
fimuls
xchg
xchg
std
pop
aad
ror
dec
fadds
dec
add
inc
shr
or
sbb
push
cld
push
addr16
jb
popf
jg
cmp
push
and
adc
pop
mov
add
pushf
xchg
xchg
jp
or
ffreep
mov
fsubrl
nop
lods
push
ljmp
dec
push
mov
pop
outsb
sbb
in
cmp
and
imul
adc
test
inc
inc
xchg
outsl
lcall
jle
aam
lahf
cmp
sbb
mov
push
in
mov
xchg
or
jne
dec
cmp
pusha
enter
stos
loopne
add
imul
adc
loope
push
lods
xor
and
inc
mov
movsb
lock
idivl
icebp
xchg
andb
or
cmp
mov
dec
js
mov
inc
inc
or
aam
movsl
scas
inc
pop
jl
jae
data16
jns
mov
insl
jne
call
push
das
stc
lods
iret
mov
inc
mov
rclb
push
push
mov
outsl
or
in
into
xchg
ds
xor
mov
loope
jns
out
xchg
inc
call
lods
orl
nop
push
hlt
cmpsl
or
rcrl
xor
inc
and
gs
or
mov
inc
adc
xchg
test
addr16
cmpsl
loope
fnstcw
stos
jg
adc
inc
icebp
jnp
adc
daa
dec
and
loopne
cs
jo
adc
cmpsl
repz
data16
ret
les
iret
daa
dec
sbbl
inc
xor
jmp
mov
test
fwait
data16
mov
ja
adc
outsl
in
pop
mov
jno
aam
cmp
arpl
xchg
jge
adcb
sub
xlat
dec
loop
test
movsl
xor
not
add
scas
es
sbb
mov
and
jmp
sub
aas
pop
loop
in
sbb
mov
xor
stos
mov
mov
xchg
sbb
pusha
shlb
scas
dec
lods
push
movsb
or
dec
test
fstps
sub
cmc
out
push
std
xchg
or
sbb
popa
add
mov
imul
adc
mov
pop
lea
and
cmp
dec
push
sub
sub
jno
cmp
adc
and
loop
movsl
fisttps
or
add
jbe
mov
cmp
das
mov
push
scas
dec
push
addr16
mov
xor
pushf
lods
inc
movsb
and
mov
add
pusha
int3
cli
das
and
and
outsb
push
in
and
xor
in
test
es
or
repz
pusha
repnz
cmp
loopne
or
jno
xor
aam
fidivrl
sbb
sub
in
inc
jb
fbld
loope
fwait
sub
ret
cmpsb
mov
add
out
pushf
aaa
xor
mov
lcall
int3
inc
test
sahf
jb
stos
and
and
mov
mov
add
loope
aaa
xchg
test
pop
sbb
inc
or
dec
shlb
xchg
je
and
push
dec
and
jnp
mov
pop
subl
inc
jb
sub
mov
pop
lods
in
jne
in
push
aaa
clc
jbe
add
rolb
and
sti
inc
pop
xchg
insl
xchg
imul
add
mov
shll
in
cwtl
cmp
das
push
ret
or
inc
adc
sbb
pop
rorl
cld
int
mov
push
inc
xchg
jne
xor
cmpsl
inc
mov
xor
rcrb
ror
clc
push
mov
loopne
jne
pop
cmc
test
cld
jbe
pop
pop
jbe
inc
mov
ja
sub
pop
inc
sbb
mov
xchg
cmpsl
or
sbb
mov
xchg
cli
or
sub
lds
dec
fmuls
rclb
dec
mov
sub
sbbl
jns
mov
mov
jno
aad
add
je
mov
incb
pop
dec
fs
pop
jle
ljmp
lea
popa
cmc
shlb
inc
lcall
cmc
jae,pn
xchg
cmp
sbb
xchg
and
mov
aas
jle,pt
inc
mov
and
data16
and
lcall
call
loopne
movl
cmp
cmp
jge
cmp
and
in
push
frstor
adc
xor
aad
push
js
or
adc
xor
pusha
insl
add
je
inc
mov
out
sbb
or
leave
dec
dec
ja
js
xchg
dec
subl
and
mov
cmp
push
xchg
or
xchg
es
icebp
test
mov
push
sbb
test
imul
push
in
loop
ret
push
dec
push
aam
aad
popf
cltd
inc
fs
mov
pop
mov
add
and
scas
ret
repz
push
neg
or
or
test
mov
in
dec
cmp
mov
cltd
mov
cld
arpl
jp
and
or
leave
mov
scas
xor
mov
out
addr16
hlt
inc
adc
out
pop
push
loopne
pop
mov
fisubrl
inc
pop
fsub
mov
lock
test
xor
les
mov
fnstsw
or
xor
in
jle
cmp
fxch
xor
in
sbb
xchg
pushf
sub
mov
fldl
je
sbb
mov
push
sahf
loope
std
mov
xchg
out
and
mov
inc
xor
jae
cmpsb
xchg
andb
xchg
jle
or
adc
cmpsl
lods
lods
jns
stos
jnp
bound
pop
imulb
out
push
push
mov
add
add
mov
fcmovu
ja
inc
test
bound
outsl
sbbb
push
mov
cmp
imul
add
in
cmpl
xor
push
adc
xor
mov
jecxz
outsb
loope
cli
push
jne
and
jb
mov
sar
push
inc
pop
call
cli
add
dec
dec
push
lds
dec
popf
ret
mov
mov
dec
xchg
cmp
fadd
jle
dec
push
out
and
movsb
mov
cmp
outsb
xchg
jp
mov
in
in
and
js
cmp
imul
lock
ljmp
sbb
test
xor
cmpsl
cwtd
gs
aas
in
pop
mov
push
cmpsl
std
xchg
adc
je
mov
push
ficoms
pop
sub
out
mov
notl
push
lret
mov
aad
fwait
pop
inc
push
pop
adc
mov
adc
movsb
mov
pop
and
mov
lods
das
into
lods
out
xchg
and
repz
mov
sub
in
sub
cmpsb
fcompl
xchg
cli
jae
aam
mov
ljmp
pop
jnp
jae
stos
add
jne
test
mov
ss
cmp
pop
jecxz
mov
inc
xor
sahf
call
jle
ljmp
aam
sti
and
js
fldl
jno
sbb
outsl
aad
pop
and
push
pop
and
mov
rcrl
push
ss
movsl
jge
aam
push
add
sub
lcall
and
popa
add
or
scas
inc
sbb
mov
loope,pn
stc
jae
mov
adc
jle
jmp
mov
lods
add
mov
in
lock
ljmp
sahf
pop
push
push
mov
jg
clc
xchg
add
movsb
nop
rcrb
iret
pop
ja
pop
popf
pop
push
leave
add
mov
pop
adc
xchg
fwait
lods
jnp
fcom
andl
add
add
pop
pop
add
jbe
jne
and
inc
bound
es
in
test
jnp
in
xor
add
jbe
and
imul
stc
xchg
mov
addr16
orl
fisubrl
decb
push
stos
xor
stos
mov
scas
sbb
lret
lret
xchg
mov
or
push
loop
cmc
xchg
int
int
aad
push
dec
iret
shl
xchg
push
repz
xchg
jo
pop
mov
aas
out
mov
pop
pop
arpl
lock
ror
pushf
cmp
jecxz
sar
push
xor
sbb
xor
mov
sub
lret
mov
cmp
fists
jecxz
sti
inc
sbb
int3
addr16
jp
fildl
out
pop
cmp
rolb
mov
mov
mov
or
mov
mov
dec
cmpsb
daa
insb
lahf
insl
es
sub
cmp
add
dec
mov
dec
div
adc
gs
jno
sbb
aam
add
mov
and
hlt
xor
shrl
movsl
test
sub
add
sbb
mov
mov
outsb
std
stc
test
int3
cmp
or
jmp
mov
aam
sti
pop
inc
mov
stos
test
sbbl
pop
fmuls
clc
inc
fidivrs
cmc
scas
xchg
mov
cmp
ret
pop
fstl
outsl
mov
sbb
pop
sub
pop
out
pop
les
and
stc
in
int3
pop
pop
push
jnp
mov
jne
jae
inc
les
pusha
mov
sbb
inc
loope
add
cmp
mov
imul
add
inc
xchg
rorl
push
icebp
aaa
cmc
sub
lods
int
cmp
or
mov
push
stc
cld
lret
dec
rcrl
jmp
popa
and
jns
lcall
xchg
incb
dec
js
mov
and
inc
cmpl
mov
aad
movb
cs
mov
mov
jmp
jmp
and
inc
dec
mov
xchg
jbe
dec
push
push
stos
mov
repz
xchg
fnstcw
lock
pop
lret
test
cs
test
add
pop
lods
mov
mov
jo
sbb
sbb
fisubrl
mov
lds
push
jle
jbe
sub
out
mov
push
push
addr16
dec
or
pop
fdivr
pop
inc
das
addr16
mulb
xchg
mov
mov
out
fstl
leave
cli
dec
mov
lahf
cwtl
inc
xchg
scas
and
inc
adc
adcb
aaa
adc
repnz
pusha
mov
jmp
mov
xchg
and
mov
push
xchg
mov
xchg
in
inc
mov
cld
jmp
adcb
jge
inc
push
cs
mov
les
add
mov
or
dec
mov
mov
add
loop
push
cmp
pop
sbb
es
jno
cmp
inc
mov
pop
addl
cltd
jle
push
in
out
ss
sbb
xchg
aam
outsb
xchg
adc
mov
cmpsb
je
or
xor
sub
insl
js
jg
jbe
ret
adc
loopne
dec
rcl
or
bound
adc
add
jmp
push
and
pop
pusha
out
enter
push
jb
test
cltd
std
cmpsb
push
in
xor
jae
adc
add
dec
mov
dec
sbb
mov
stc
pop
xchg
mov
mov
mov
or
push
rorl
es
outsb
test
notb
pop
shld
out
cmpsl
sti
mov
push
test
and
ds
dec
std
push
push
cmp
adc
sti
in
fiaddl
inc
sub
lods
subb
int
sub
pop
cs
out
stc
shrb
fs
mov
dec
ror
loope
pop
stos
leave
jns
test
aas
aaa
add
les
mov
ss
jle
and
imul
xor
stc
jb
stc
lret
adc
sahf
bound
ja
int3
in
add
test
es
jecxz
or
xor
cli
push
cltd
mov
add
and
fidivl
bnd
mov
xchg
shlb
inc
push
cmp
mov
stc
mov
cmpsb
movsl
out
pop
mov
in
pop
sbb
int3
adc
addl
push
mov
sbb
int3
lods
fidivrl
decb
xor
les
pop
dec
add
ret
and
ret
rcl
outsb
out
aaa
sbb
push
mov
pop
int3
push
inc
jbe
lea
hlt
jl
jnp
sbb
xchg
xchg
and
out
cltd
jnp
jbe
nop
mov
test
pop
sbb
test
jo
test
cmp
dec
je
jl
aas
inc
jg
leave
daa
bound
or
mov
push
mov
xor
icebp
push
mov
les
testb
sub
pop
jg
inc
enter
and
add
add
xchg
pop
jno
stos
outsb
and
pop
es
enter
ljmp
add
cld
cmpsl
lret
xchg
mov
out
mov
std
xchg
insb
mov
daa
dec
fidivrs
movsl
lds
mov
mov
pop
pop
xchg
mov
loop
or
cmp
ret
pushf
push
test
arpl
xor
xchg
stos
adc
adc
add
fdivl
ds
stos
cmc
cmc
push
popf
gs
rorb
xchg
sti
mov
sub
push
mov
in
popl
xchg
mov
into
xlat
ficomps
sahf
movsl
xchg
test
outsb
cld
mov
test
out
sub
pop
jmp
fisttpll
mov
in
push
leave
decb
adcl
sbb
pop
sbb
inc
cltd
xchg
fisubs
shlb
and
loopne
stc
sbb
iret
loop
mov
xchg
hlt
xor
shlb
mov
ret
and
pop
es
jp
add
inc
jge
mov
or
adc
mov
repz
pop
pop
push
jmp
or
fldcw
adc
push
xchg
fidivrs
ret
mov
icebp
mov
pop
sbbb
or
sbb
push
loop
nop
lret
fdivrs
jne
mov
adc
mov
xor
adc
arpl
je
nop
cld
nop
movsl
outsb
xchg
lods
or
sbb
insl
xchg
cmp
sub
das
sub
inc
mov
or
adc
cmp
enter
jle
hlt
xor
jp
in
js
inc
nop
repz
adc
sbb
mov
daa
or
flds
or
das
hlt
int
int
adc
dec
pop
daa
sbb
mov
sbb
shlb
pop
int
inc
sub
jae
pop
mov
dec
out
loope
imul
in
xchg
cmp
int3
mov
stos
xor
add
icebp
stos
iret
scas
and
cmp
in
into
sahf
inc
imul
scas
ja
mov
or
mov
add
mov
ljmp
fdivrp
inc
dec
insb
push
sti
ds
js
movb
enter
mov
cmp
mov
dec
and
xchg
cwtl
addr16
js
pop
movsb
dec
push
out
or
or
adc
xor
scas
pop
adc
icebp
adc
or
lock
add
jp
inc
xchg
xor
add
push
popf
cmp
jl
jno
xor
mov
sub
cmp
mov
and
sub
jns
inc
loopne
jb
cmp
cmc
xor
xchg
jp
bound
mov
or
xlat
or
xlat
repnz
sbb
pop
cmpsl
in
and
and
in
mov
add
insb
call
sahf
insl
cwtl
ficoml
sub
pushf
sarb
mov
hlt
cmp
or
loop
xchg
into
inc
and
inc
in
jae,pt
stos
cmpsl
das
fdivp
fld1
jnp
out
lods
mov
add
pop
test
sbb
inc
or
xchg
test
out
xor
pop
lods
push
subl
mov
mov
hlt
jp
cmp
test
lret
aas
or
sbb
sbb
dec
jo
add
sub
cmpsb
jno
push
test
cmpsb
jne
inc
sti
mov
cmp
orb
cltd
fidivl
fcmovu
push
jmp
shll
and
stc
call
pop
jl
pushf
mov
jecxz
mov
or
push
stos
in
ljmp
add
int
int
or
ret
inc
jae
imul
mov
fwait
xor
enter
jb
jns
out
fcmovnbe
add
jne
lods
cli
lds
int
pop
mov
push
out
stos
fdivrl
mov
mov
mov
mov
pop
mov
test
aas
iret
xchg
bound
push
xor
fs
lods
fsubrl
stc
sbb
xchg
mov
push
cltd
cmp
pop
sub
decl
lock
cmp
scas
inc
jge
loopne
aas
test
push
inc
das
inc
cs
movsl
sbb
out
cwtl
inc
ja
das
adc
xor
shl
adcb
jmp
mov
aam
xchg
stos
cmc
aad
mov
xchg
fdiv
out
ret
mov
push
mov
push
or
xchg
inc
shrb
mov
and
lock
push
jae
inc
ds
dec
add
popf
sub
sub
adc
out
dec
pop
call
sub
inc
sub
dec
inc
push
jmp
sub
fbld
push
inc
loope
and
pop
pop
jge
or
jle
imull
adc
push
mov
jecxz
movsl
test
jne
int3
jb
adc
push
out
shll
or
cmp
hlt
jae,pn
cmpl
insl
dec
and
les
lret
rcr
inc
loopne
cmpsb
sub
cli
mov
aas
sbb
push
loopne
inc
das
sub
xchg
test
idivb
lods
sbb
pop
jo
pop
jae
popa
loop
dec
mov
push
cmp
jne
jmp
je
adc
sbbl
jecxz
jecxz
inc
sbb
mov
addr16
and
sahf
mov
pushf
sbb
mov
inc
mov
std
loopne
pop
sti
pop
out
les
stos
xchg
shl
adc
jmp
sub
jle,pt
repnz
bound
dec
inc
lret
sbb
pop
adc
sahf
rclb
mov
std
adc
and
movsb
imul
mov
pop
push
mov
cmp
and
fwait
int
lods
orb
rolb
mov
pusha
xchg
lds
inc
shrb
les
pop
rolb
jae
sbb
rcr
loopne
push
pop
xchg
lods
test
movsl
jnp
leave
outsl
gs
dec
dec
bound
int3
scas
fwait
ja
pop
or
outsb
push
mov
add
out
sbb
je
xchg
push
mov
ja
xorb
sahf
and
jp
push
fcompl
orb
cmpsb
mov
add
sbb
sub
cld
xlat
enter
xchg
es
movsb
jmp
dec
push
scas
and
or
mov
lcall
leave
orb
pop
and
rol
stos
les
in
sbb
mov
shlb
xchg
xchg
xor
dec
out
ret
push
les
ja
ss
xor
inc
addl
hlt
push
js
cmpsb
cltd
sbb
rol
xchg
lock
fisttpl
movsb
mov
out
mov
mov
inc
bswap
sub
les
leave
pusha
cmpsb
push
iret
xchg
fsubl
inc
mov
rcrb
pushl
daa
ret
ds
ja
sti
inc
outsb
cmp
lea
shrl
or
int3
fwait
lods
dec
xor
pop
aad
mov
cmpsl
sbb
rsqrtps
mov
push
pop
jne
cmpsl
mov
dec
and
rcr
mov
out
mov
mov
jnp
mov
mov
inc
loop
pop
mul
mov
in
pop
mov
ficomps
xor
repnz
movsl
or
mov
mov
mov
in
cmp
sbb
inc
xchg
add
nop
mov
lcall
pop
test
std
imul
aas
aas
jbe
mov
adc
scas
push
xlat
mov
aaa
xchg
notb
scas
ret
mov
cld
dec
movsl
jbe
out
xchg
mov
fcoml
movsl
fs
adc
dec
xchg
cs
nop
and
sub
daa
xor
push
fstps
imul
or
orl
insl
add
mov
jne
scas
pop
cmc
scas
sbb
jge
dec
movsl
xchg
inc
cmp
mov
sbb
cmp
adc
fcoml
cltd
lods
adc
cli
sbb
dec
lock
sub
movsl
sbb
push
adc
in
and
aas
rorl
dec
mov
dec
cmpsb
ljmp
cmp
push
cmp
xorl
flds
aaa
cmpsb
das
xorb
xchg
int3
adc
push
rorb
jnp
jg
cmp
dec
negb
shrl
lcall
mov
es
cltd
mov
mov
ss
inc
push
cwtl
cld
adc
ss
xor
adc
subb
aad
daa
xchg
in
shr
xchg
aaa
cmp
push
into
mov
mov
imul
jae
movsl
popa
fidivrs
movsl
sub
fmull
outsb
sub
cmc
xchg
pop
outsb
negl
icebp
xor
lock
test
outsb
ret
cwtl
loopne
xchg
shrl
addr16
jb
daa
push
inc
cmp
call
std
push
mov
cmpsb
lret
aas
cmp
nop
add
xor
push
in
jbe
clc
sub
lea
ret
lea
in
xor
dec
add
scas
pushf
cltd
out
xchg
mov
and
dec
lods
out
sbb
or
lret
sahf
movsb
addr16
pop
ficompl
mulb
xlat
aam
pushf
cwtl
or
fdivrl
add
and
cmp
out
mov
arpl
xchg
add
add
xchg
xchg
dec
arpl
add
lods
jbe
xchg
jo
sbb
push
lods
push
shl
ss
leave
mov
cmp
push
or
into
xor
dec
mov
jmp
jns
adc
cmp
sub
pop
jb
out
and
adc
sbb
pop
lcall
xor
adc
ljmp
mov
imul
jmp
xor
pop
push
leave
jae
mov
push
cmp
pop
aam
out
repz
jge
aas
inc
dec
sti
test
pusha
add
ret
movsl
loop
xchg
jae
mov
xchg
std
mov
xchg
sub
xor
test
adc
jnp
mov
sub
xchg
in
pop
ss
and
addb
pop
xchg
adc
sbb
ljmp
ficomps
cmp
pop
jp
xor
mov
add
cld
in
pop
cmp
das
sub
jbe
or
xor
mov
adc
pop
sbb
movsb
daa
popa
xlat
jo
mov
jno
or
jae
clc
int
pop
mov
fsubrp
cmp
sbbb
dec
cwtl
shlb
sub
int3
cmp
sub
adc
outsb
cmp
xchg
stos
and
insb
mov
fs
push
repz
xor
in
cmpsl
sub
divl
adc
sti
das
pop
sbb
add
jae
jns
je
movsl
insb
movsl
push
mov
fmull
std
jnp
je
pushf
cli
jecxz
fisubrl
sbb
fstl
arpl
push
mov
cwtl
out
movsl
pop
insb
push
lcall
daa
or
dec
xorb
or
aad
jl
and
ret
add
push
mov
jb
daa
sub
sbb
movsb
mov
and
mov
or
daa
pop
cmpsb
mov
sbb
mov
fistl
outsl
jl
lods
aad
inc
push
jge
and
imul
sbb
call
dec
repnz
ret
cmpsl
fadd
push
test
inc
jno
roll
mov
outsl
jo
jmp
jb
imul
icebp
lock
pop
jo
mov
imul
inc
push
enter
cmp
pusha
cmp
test
jns
and
pop
cmp
call
in
lret
movsb
push
ffreep
je
pop
lahf
xor
js
pop
sti
push
mov
and
daa
cmp
dec
ret
out
adc
jmp
mov
lods
clc
aaa
mov
add
xchg
arpl
scas
loop
leave
pop
js
cmp
sti
test
mov
pop
mov
aaa
mov
xor
nop
xor
cmp
out
icebp
data16
int3
cs
pop
iret
test
std
adc
out
pushf
jae
test
jns
or
or
js
nop
jns
xor
fdivl
jbe
shll
dec
jmp
mov
in
sub
lock
sbb
and
mov
xchg
dec
add
mov
shr
inc
mov
ljmp
add
fdivp
xchg
test
xchg
sti
nop
std
jle
ds
cmp
fnstsw
cld
mov
and
mov
mov
sti
clc
lds
add
mov
ldmxcsr
fists
fnstsw
lahf
adc
out
xchg
pusha
and
icebp
movsl
push
adc
inc
popl
fsubrl
sub
inc
and
jle
xor
inc
shlb
lods
pop
inc
jp
ljmp
cmp
or
aaa
orps
mov
or
shll
sub
xchg
insl
pop
xchg
pop
cltd
aaa
jge
lret
push
out
xbegin
and
pop
adc
sti
jmp
push
fst
das
fidivrs
xor
mov
cmp
sub
int3
pop
out
shlb
call
cwtl
icebp
rcrb
loop
adc
push
insb
cmp
mov
push
jl
dec
dec
dec
dec
xorl
pop
inc
jne
mov
dec
daa
bswap
test
shlb
repnz
cmp
add
lret
jnp
or
insl
xchg
cmc
cmpsl
add
pop
adc
or
xchg
mov
test
fisubrs
jno
test
cld
push
mov
rcll
addl
jns
pop
and
js
adc
cmp
stos
fwait
jl
adc
inc
mov
or
movsb
lahf
dec
test
pop
repz
pop
ja
lcall
or
out
cmc
push
shlb
inc
and
mov
aad
push
sub
fcoms
lahf
or
inc
inc
xchg
pop
or
push
push
xor
dec
fwait
int3
scas
sahf
hlt
push
jp
push
mov
movsb
mov
mov
mov
das
cltd
push
dec
leave
pop
pop
inc
sbbl
shl
in
mov
jae
repz
mov
sbb
sbb
add
xchg
xchg
nop
cmpsl
mov
jne
ret
xor
std
xchg
jbe
jne
inc
sbb
xor
es
jp
filds
sub
jne
inc
cli
lret
jns
test
aad
ficompl
js
pop
jb
fistps
cmpsl
mov
pop
ret
adc
dec
and
lret
push
pcmpgtw
jns
clc
imull
adc
stos
fwait
inc
vpmuludq
fsubrs
xor
adc
push
add
mov
pushf
pop
cli
xor
mov
add
pop
inc
sub
adc
xlat
mov
sbb
pushf
repnz
aas
cmpsl
xchg
or
js
ja
imul
xor
jns
mov
fidivs
add
mov
jl
push
cmp
punpcklwd
pop
and
inc
xchg
icebp
mov
std
stc
push
popa
in
xchg
jno
in
sbb
data16
inc
popa
outsl
xchg
cwtl
cld
std
popf
or
xchg
jae
adc
mov
gs
cmc
sbb
push
pop
or
cmp
add
cmc
inc
ds
push
push
inc
sub
pusha
ss
jb
pop
adc
dec
fisubrs
inc
andb
or
cmp
scas
sub
subb
scas
cmp
jo
dec
xchg
mov
js
loope
jg
insl
stos
call
cwtl
leave
out
push
xchg
in
sarb
test
popa
inc
jle
clc
stos
xchg
push
sbb
xchg
adcb
out
fsubr
sbb
gs
xor
dec
cmp
sub
shl
adc
mov
sub
push
xor
mov
stos
push
stos
push
xchg
mov
repz
push
fsubs
pushw
push
emms
dec
movsl
pushf
inc
xchg
mov
xor
lods
xlat
push
bound
imul
pop
push
xchg
add
cmp
jo
add
xor
addb
jno
push
push
mov
cmp
hlt
out
lret
mov
fwait
in
popl
movsb
mov
sbb
jbe
adc
sbb
iret
rcl
insl
stos
xchg
rorl
push
add
xchg
jb
sbbl
mov
jecxz
inc
cmp
push
sbb
adc
das
loop
ret
ss
dec
or
push
test
fsubl
pop
cmp
mov
int
cmp
daa
stos
ljmp
arpl
mov
mov
mov
inc
sbb
sub
mov
aaa
stos
call
inc
inc
pop
mov
hlt
cli
push
loope
xchg
dec
push
in
or
ret
test
stos
cmp
xor
jb
mov
cld
inc
aam
ss
lods
imul
ljmp
mov
int
jge
sbb
pushl
mov
mov
test
add
in
mov
mov
push
adc
enter
jae
sti
out
cmp
frstor
lock
notl
iret
push
jge
adc
in
call
aad
push
in
outsl
push
sbb
sub
xor
jo
jecxz
xchg
and
rclb
adc
jo
pop
xor
out
loopne
inc
sbb
adc
out
mov
and
dec
xchg
cs
mov
xchg
adc
jg
scas
cmp
cmc
shll
das
shrl
dec
lret
ret
hlt
push
lahf
aam
sub
push
sub
cmp
outsb
cli
scas
gs
fiadds
push
mov
ja
and
loop
push
push
into
and
pop
leave
cmp
pop
mov
test
mov
test
mov
insb
jns
pop
mov
nop
rol
mov
mov
movsl
xor
dec
test
pushf
mov
xchg
lcall
lds
mov
std
mov
sub
sub
mov
sbb
push
lock
mov
loop
mov
dec
xor
and
adc
repz
pop
mov
loope
lods
insl
adcl
mov
loopne
push
test
leave
push
mov
out
cmp
loopne
sub
in
jle
cltd
xor
out
mov
mov
aam
clc
aad
orb
ret
scas
shll
ds
adc
or
ljmp
cmp
aaa
testb
movsb
dec
or
add
inc
cmpsl
xlat
ljmp
arpl
arpl
sti
sub
je
aad
and
or
push
fsub
inc
shrl
inc
scas
mov
call
push
xorb
insl
mov
shlb
mov
add
pop
out
rcr
mov
mov
test
sub
lret
add
out
or
iret
cld
jecxz
pop
dec
push
fcmovnu
cs
sub
add
ss
fwait
outsb
pop
pop
out
and
push
dec
fldenv
sub
lcall
xchg
loope
in
scas
adc
mov
inc
lods
and
ret
add
mov
jp
test
sti
sub
hlt
push
dec
aas
test
in
insb
xchg
jb
jmp
js,pt
push
shl
movsb
jbe
xor
popa
pop
imul
xor
xor
nop
lods
or
int
shr
shl
or
lock
inc
bound
xor
pop
or
push
dec
repnz
jnp
pop
pop
cmp
gs
addr16
sbb
mov
outsb
pop
stc
push
inc
or
cli
pop
sarl
mov
xor
add
fcompl
xchg
aas
and
in
clc
jns
and
aam
inc
imul
sbb
push
mov
aad
insl
into
loopne
dec
pop
scas
mov
and
xchg
xchg
push
or
or
fbstp
popa
out
outsb
or
cltd
and
js
jle
addl
imul
pop
mov
in
and
insb
insb
mov
xchg
cli
clc
sbb
cmpsl
push
xor
outsl
mov
xor
push
or
adc
lods
sbb
xor
inc
inc
push
or
stos
cmpsl
push
push
call
mov
xor
cwtl
outsb
cld
mov
ljmp
or
cmp
stos
xchg
xor
jnp
enter
pop
mov
pop
loope
mov
fistpl
lods
cmp
in
or
push
push
in
pusha
ret
jno
and
xchg
push
cmp
dec
pop
mov
mov
ret
hlt
mov
sub
or
pop
add
and
and
out
pushf
sbb
mov
lods
scas
rcrl
jno
test
movsb
subb
int3
jge
adc
cmpsl
pusha
fldt
ds
popf
mov
xorb
mov
cld
sbb
inc
push
ret
stc
push
cs
or
cltd
jmp
pop
in
xor
mov
pop
ss
or
aaa
or
std
mov
or
fsts
int3
mov
lods
fcom
cmp
xchg
xor
xchg
pop
adc
loopne
std
mov
mov
idivl
cmp
sbb
lods
or
nop
jbe
idiv
or
in
rcl
mov
mov
movsb
mov
sub
lret
ds
mov
fmul
and
je
aad
jne
mov
adc
xorl
stos
loope
inc
ret
mov
cs
loopne
jmp
pop
cmpsl
fcomps
cmp
lret
adc
out
aam
dec
xchg
pop
pop
jnp
xchg
setnp
xor
mov
lcall
dec
pop
gs
pop
test
mov
fucomi
lret
insb
jae
pop
rcr
aam
sti
mul
push
outsl
sbb
test
dec
stos
aad
inc
movsl
aas
sbb
cmp
dec
inc
xor
jl
push
cmp
pop
outsb
jo
ret
push
jnp
pop
cmp
cmp
mov
pop
mov
scas
jns
movsl
dec
ret
jb
pushf
cmp
sub
ljmp
sbb
fldenv
and
xchg
es
cmp
bswap
out
arpl
in
add
rclb
pop
call
sahf
pusha
popf
cmpsl
xor
insb
xchg
fdivl
jmp
xor
xor
mov
xchg
outsl
fwait
push
dec
cmp
or
xchg
movsl
out
sbb
ret
mov
mov
insb
sub
jle
pop
xchg
imul
fwait
mov
mov
pop
pop
ds
mov
mov
pop
dec
jnp
push
frndint
mov
inc
add
fdivs
sbb
and
jne
jno
mov
icebp
inc
mov
movsb
and
shl
xchg
cmp
xchg
pop
daa
negl
pushf
testl
fists
or
gs
mov
mov
push
adc
daa
xchg
lcall
jg
hlt
aad
aaa
dec
loop
lods
jmp
xlat
add
imul
pushf
arpl
add
jl
push
and
jmp
pop
xchg
or
lea
or
add
fs
jb
loopne
es
aaa
iret
adc
inc
js
cs
and
int3
call
inc
sub
sti
mov
inc
stos
push
pushf
scas
lcall
mov
pop
movb
shrb
rcr
icebp
or
sbb
stos
imul
sub
push
sub
lea
and
xor
in
mov
and
lcall
leave
pusha
adcb
mov
pop
add
repnz
inc
mov
xchg
clc
movsb
inc
cmpsb
inc
in
xchg
push
inc
mov
mov
bound
jbe
xor
dec
leave
cmp
and
int3
in
int3
push
iret
push
pusha
sbb
roll
and
in
pop
inc
pop
scas
mov
fdivrp
cmp
movsb
push
mov
pop
lods
xchg
es
jne
into
in
pop
xor
sahf
rorl
pop
das
stos
stc
cwtl
or
negl
test
pop
mov
jl
in
mov
in
mov
outsb
sbb
imul
mov
xor
push
fmuls
movsb
out
mov
mov
shlb
sbb
and
jbe
dec
dec
xchg
or
rorl
cmp
mov
cld
xchg
mov
cmpsb
aas
dec
cmpsl
push
adc
popa
mov
sbb
popa
push
mov
test
es
adc
push
test
and
or
arpl
sbb
and
out
xchg
xchg
andb
mov
mov
imul
insb
jge
inc
sahf
jmp
xor
test
ret
mov
push
in
call
imul
ret
mov
pop
ret
cmpsb
lods
mov
xor
lea
push
fs
add
xor
push
inc
outsb
pop
and
test
inc
mov
js
adc
push
jecxz
ror
mov
imul
xchg
aam
pop
cmp
scas
inc
dec
inc
inc
ljmp
aam
testb
add
dec
in
les
mov
push
in
mov
fsubs
and
fwait
xchg
loop
into
push
fisubrs
outsb
and
js
int3
sub
out
cmc
mov
icebp
rcl
test
mov
jo
add
loopne
iret
sbb
xchg
inc
or
divl
adc
dec
nop
jb
adc
fs
arpl
cld
cmp
repz
mov
into
mov
pop
imul
jno
adc
dec
xor
sahf
jnp
pop
jge
jmp
jo
test
scas
lods
and
cwtl
push
repnz
push
jg
scas
push
sbbb
iret
divps
push
out
lahf
mov
mov
push
jp
lea
sbb
adc
mov
jmp
push
aaa
scas
xchg
arpl
out
out
cmp
pop
xor
adc
push
pop
mov
js
sbb
popa
mov
jmp
shl
les
mul
fcomp
sub
divl
add
push
dec
iret
flds
xchg
xchg
push
cmp
ror
push
pushf
xchg
push
xlat
sub
adcl
repz
or
clc
ret
popa
jl
sbb
clc
xor
enter
es
inc
push
gs
mov
cmpsl
cmp
mov
jle
bound
mov
cli
push
leave
stos
jno
mov
mov
mov
sbb
jmp
mov
mov
out
inc
in
xchg
out
pop
jno
in
es
shll
xor
mov
dec
mov
aas
dec
in
scas
or
add
adc
icebp
mov
sbb
cmp
and
fs
mov
cmp
fnstcw
push
mov
in
mov
jb
aas
dec
dec
outsb
add
add
lea
rcrb
pop
jnp
je
push
lea
std
popf
mov
loope
and
repz
pop
push
pop
and
mov
movsb
pop
mov
loopne
xchg
xor
xor
mov
or
mov
test
mov
cli
fs
aaa
and
call
mov
imul
dec
or
mov
fdivs
movsl
jecxz
pop
loop
fwait
ds
ljmp
je
sub
leave
aaa
sbbb
xchg
mov
notl
xchg
add
data16
and
inc
xor
sub
adc
bound
xor
sahf
inc
popa
popa
orb
mov
fisttpl
divb
cld
testb
lahf
inc
mov
jecxz
push
inc
loop
sbb
push
ror
pop
mov
test
cli
stos
mov
lea
jl
xor
outsl
iret
test
cmp
dec
outsl
outsl
inc
lret
and
movsl
cmpsl
in
cmp
or
cmc
jnp
pushf
jns
sbb
cmp
in
or
popa
mov
out
cwtl
dec
ja
xlat
lea
daa
ja
mov
orps
adc
push
jne
mov
sbb
mov
stc
inc
idivb
outsl
lcall
daa
outsl
push
pop
sub
fildl
pop
std
in
pop
aam
mov
fistpll
pop
leave
cmp
and
sbb
inc
and
lds
sub
xlat
and
adc
pop
adc
add
shr
rcrl
mov
and
lret
dec
pcmpeqw
notb
inc
imul
mov
addr16
pop
inc
mov
mov
inc
pop
call
call
jae
jle
jmp
repz
std
call
sti
ficompl
enter
subb
addr16
or
sub
fmuls
or
fwait
movsl
xor
out
stc
hlt
add
icebp
pushf
jecxz
lahf
lahf
jle
shrl
pop
mov
mov
roll
repz
fwait
daa
and
add
sub
or
out
add
cli
je
add
push
lret
enter
mov
ss
and
cmc
ror
test
jge
ror
repnz
cmp
fldcw
push
inc
pop
aas
xor
jp
ljmp
subl
cmp
cmp
fsubl
orl
push
push
add
int
pop
fwait
sub
rcrl
sub
add
dec
pop
or
xchg
je
mov
call
cmp
jmp
test
imul
bound
sbbb
adc
loop
and
mov
mov
addr16
fldt
xorl
daa
cs
test
shrl
aam
ret
xchg
dec
pop
inc
add
test
test
bound
pop
mov
lret
push
mov
jp
data16
jbe
mov
mov
cmp
sbb
movsl
inc
xlat
es
cmp
add
mov
xor
cmc
adc
sub
or
pop
pushf
stos
sbb
lea
data16
jnp
inc
add
sbb
mov
push
bound
pushf
pop
jbe
lods
ret
jne
fsubl
xchg
jnp
popf
pop
xor
pop
push
scas
inc
cmp
std
fstps
push
rcll
adc
push
or
std
divb
inc
ficoms
aas
mov
icebp
out
jno
mov
sarb
mov
insl
std
fcomi
pop
mov
outsb
hlt
mov
arpl
fbstp
sub
cs
push
sbb
xor
divl
mov
xchg
xor
push
insl
add
cmp
lahf
pop
jbe
mov
repz
pop
lods
pusha
fs
mov
mov
add
stc
mov
aas
cmp
stos
mov
movsl
mov
mov
lods
xor
xor
xor
xchg
pop
mov
and
nop
rorb
inc
in
cmp
lds
sub
xchg
jne
lret
call
push
pop
mov
and
rorb
idivb
xchg
fsubl
addb
cs
cwtl
insl
dec
ja
dec
mov
cmp
cmp
fiadds
scas
and
pop
and
aas
cmpl
xor
mov
mov
or
jno
lea
push
and
addr16
rcll
add
loope
xor
or
fstps
outsb
test
mov
jecxz
adc
cli
rclb
test
xchg
test
test
repnz
gs
mov
aaa
mull
mov
pop
orl
cli
pop
push
std
dec
xchg
loope
jae
int
sti
pop
jne
mov
jg
rorl
and
test
dec
into
sarl
rolb
das
fs
add
jle
mov
mov
or
add
jmp
push
hlt
leave
ror
inc
cmc
pop
push
cld
push
int3
mov
fdivrs
aam
es
push
push
ds
push
aad
add
mov
out
cld
mov
xchg
add
aad
out
daa
movsb
das
xor
pop
inc
mov
cwtl
fldcw
mov
shrl
mov
push
or
sub
test
stos
aam
dec
cmp
std
adc
cmp
adc
in
cmp
inc
int3
out
jl
outsl
ljmp
es
lds
incl
out
push
pop
cmpsb
sarb
xor
daa
nop
sbb
sbb
les
movsl
stos
dec
adcl
pop
mov
sbb
xor
je
cmp
jnp
je
push
std
and
or
int3
out
orb
ret
hlt
sbb
push
mov
sbb
or
xchg
jo
jo
or
push
jbe
in
sbb
repz
sti
add
push
das
aad
aam
jae
add
mull
movsb
pop
into
jae
pop
pop
push
aad
and
gs
xchg
jae
lods
xor
imul
mov
cmp
xchg
or
mov
out
adc
jnp
push
jg
pop
jb
xor
cs
cltd
es
pop
cmp
sub
outsl
lcall
repz
shlb
cmp
mov
test
lret
test
dec
les
sbb
lahf
les
ds
jno
mov
retw
inc
mov
faddl
mov
test
mov
sbb
shl
push
insb
xor
shl
pop
sahf
and
movsl
jecxz
mov
mov
jo
out
add
jmp
dec
jge
incl
sub
add
out
adc
fst
outsb
adc
sbb
dec
icebp
movsb
cmp
xchg
fisubrl
xchg
sbb
xchg
sbb
xor
test
add
data16
lret
jbe
test
aas
add
adc
push
pop
divl
inc
fisubrs
shlb
nop
out
push
cmpsl
lds
in
xchg
cld
dec
sahf
sti
pop
push
jb
xchg
jmp
or
mov
mov
pop
cld
adc
mov
insb
pop
hlt
roll
hlt
adc
mov
lea
sbb
call
inc
sbb
cld
out
pop
out
in
sbb
xchg
dec
or
fldenv
aas
sbb
mov
inc
xchg
mov
adcb
mov
inc
sti
jo
into
mov
dec
clc
fists
dec
sbb
xor
mov
cld
mov
adc
insl
scas
cld
repz
daa
cmpsl
clc
cmp
jmp
adc
pop
sub
xor
inc
dec
sub
inc
push
insb
inc
push
or
cltd
inc
scas
fstpt
fisubl
ljmp
inc
and
push
ds
sti
mov
shl
sbb
stc
sbb
loopne
jle
mov
adc
xchg
in
sti
cmp
fwait
pop
xchg
xchg
popf
jne
sbb
push
sub
fst
rcrl
sbb
subl
scas
sub
mov
xchg
jo
pop
arpl
dec
test
push
repnz
and
imul
bound
leave
xor
and
shrl
daa
add
inc
sti
gs
sub
push
mov
sub
sbb
xor
int3
xor
cltd
lret
jb
push
xor
in
int
add
mov
jg
test
sub
adc
std
cmc
test
js
stos
mov
push
mov
mov
cmp
adc
mov
push
cmpsb
mov
mov
repz
lods
mov
sub
cltd
and
cmp
push
lock
jae
mov
ficomps
ds
iret
push
fidivrs
mov
out
sbb
inc
addr16
add
dec
test
jg
sbb
dec
sbb
sub
xor
inc
aam
pop
sbb
fidivl
sti
or
out
dec
pop
xor
in
shll
lcall
inc
sbb
xlat
into
xor
and
sub
in
dec
jp
mov
je
repz
jo
stos
push
fadd
push
hlt
lret
cld
push
addb
jg
or
sbb
das
jnp
mul
jo
and
jns
sbb
pop
inc
iret
xchg
aad
sbb
cmp
sahf
pop
lods
ret
lock
and
out
dec
fsubs
mov
pop
out
mov
sahf
insl
or
pop
lcall
je
jne
scas
out
insl
arpl
mov
ds
stos
bound
cmp
sbb
and
in
test
shlb
lahf
inc
sub
mov
shl
call
subl
arpl
imul
xlat
xorl
out
adc
xor
ljmp
sbb
and
cmpsb
cmp
mov
dec
ds
std
inc
adc
fisubl
mov
cwtl
stos
je
test
pop
sub
mov
jne
lahf
jp
movsl
cmp
pop
adc
and
xchg
jl
insb
mov
popf
cli
in
jbe
loop
xor
xor
pop
lret
sti
test
adc
mov
mov
and
push
cltd
jmp
mov
sbb
jo
rclb
adc
adc
fdivrs
jmp
xchg
sub
sti
adc
pop
lock
repnz
adc
push
loopne
mov
in
push
aas
jo
jl
xchg
xchg
dec
scas
addr16
addl
xor
movsl
mov
aad
add
or
pushl
loope
and
add
xchg
and
mov
dec
pop
orb
jl
stos
sub
daa
or
mov
xchg
jae
adc
sbb
add
add
push
aas
ds
mov
jmp
scas
cmp
adc
dec
or
out
daa
jno
mov
arpl
cmp
xor
pusha
and
pop
cmpsb
lock
mov
stos
test
pop
push
cltd
cmp
xlat
les
clc
xor
sub
daa
mov
jb
mov
xchg
sbb
and
out
mov
fsubs
clc
in
inc
pushf
pop
sarb
cli
push
adc
pop
mov
add
mov
push
push
clc
mov
jno
shlb
dec
push
add
sahf
test
leave
ss
push
aaa
inc
sbb
popf
mov
test
shlb
call
divb
push
andb
push
fcomps
mov
sbb
push
adc
adc
mov
push
inc
mov
cmpsl
dec
sbb
xlat
add
stc
in
mov
inc
fs
dec
in
xchg
sarb
call
push
pop
cmp
fisttpll
add
adc
inc
mov
xchg
adc
or
xor
fucomi
insl
mov
in
add
or
lahf
mov
sub
out
adc
jl
cmpsb
or
inc
in
jno
mov
mov
sub
addb
shl
mov
add
mov
icebp
sub
dec
fmull
mov
adc
add
mov
jae
mov
jmp
fnstcw
jno
sbb
push
mov
cmp
popf
das
jne
shll
pandn
mov
stos
stc
lret
test
lret
sahf
sahf
xchg
cmp
pop
mov
or
push
sbb
mov
popa
jbe
jmp
mov
xor
push
dec
and
dec
inc
and
sub
loopne
xchg
adc
and
dec
sub
scas
test
pusha
ret
mov
addl
mov
add
stos
mov
mov
push
mov
push
push
sbb
inc
push
sub
xor
jle
scas
fcomps
enterw
ret
add
scas
xchg
mov
jmp
mov
imul
inc
sbb
push
movsb
mov
ss
sub
or
pop
jo
push
push
and
or
cmp
inc
pop
inc
push
sti
mov
mov
adc
loopne
ljmp
or
test
or
dec
or
cld
in
loopne
xor
js
inc
xchg
mov
outsb
je
pop
out
lds
popf
in
ret
xchg
test
iret
mov
fiaddl
aam
push
pusha
or
seto
xchg
and
leave
sub
inc
add
sti
mov
stos
aad
cli
jo
mov
jne
mov
adc
enter
cmp
addl
lcall
mov
fbstp
lcall
mov
addl
call
sub
imul
fldt
mov
dec
fstps
sahf
adcb
sub
push
inc
in
lea
and
rcrl
out
jp
out
femms
in
mov
bound
ja
fs
popa
jl
mov
inc
adc
xor
pushl
cmp
iret
adc
andb
jle
in
repnz
pop
bound
mov
jecxz
push
dec
sub
out
sahf
xor
push
pop
adc
pushf
xchg
push
push
mov
xor
loope
sbb
inc
adc
or
pop
push
jbe
mov
dec
jl
roll
pop
xor
adc
sti
fsubp
in
and
outsb
sub
lret
xchg
or
fadds
sbbl
adc
xlat
or
pop
pop
adc
sbb
or
lock
fmull
sbb
pusha
cmp
xor
xchg
cs
xor
pop
arpl
mov
adc
nop
out
dec
lahf
inc
cwtl
push
sub
inc
outsb
mov
iret
mov
xor
jge
flds
xchg
andl
mov
lahf
push
loopne
inc
cli
lcall
daa
and
leave
divb
adc
shrb
fstl
rcrb
outsb
clc
outsl
pop
lahf
sub
inc
jnp
or
lret
inc
jg
pop
add
cli
sbb
mov
scas
inc
pusha
adc
lcall
cmp
fidivl
push
cld
mov
xchg
adc
imull
mov
aas
call
xor
or
or
cld
mov
sbb
nop
pop
icebp
pop
in
dec
fildl
push
int
ja
or
jl
cmpsl
lret
cmp
cmp
scas
movsb
popa
lea
jne
movsb
in
mov
into
push
jbe
jb
shll
dec
and
adc
fcoml
jl
popl
pushw
jbe
mov
xchg
inc
clc
sbbb
mov
xor
push
adc
mov
in
in
xchg
dec
jno
pop
cmp
mov
mov
lea
and
popf
aas
pop
jp
sub
fistpll
xchg
add
inc
jmp
scas
pusha
int3
xor
les
and
rol
pop
pop
or
inc
jae
jno
mov
js
and
xor
iret
jmp
shlb
mov
lret
sub
fwait
call
loop
daa
enter
sbb
aad
jnp
in
sbb
sub
jge
adc
inc
push
out
cmp
sbb
or
mov
out
add
pop
cltd
sbb
xor
add
mov
xchg
jmp
call
or
mov
mov
ss
jp
xor
mov
jecxz
shl
xor
imul
jb
cld
cli
pop
in
xchg
outsb
cld
jecxz
mov
ljmp
cmc
xchg
jmp
mov
sub
mov
jp
jg
xor
out
cld
add
mov
lret
push
ja
mov
xchg
mov
sbb
xchg
xor
std
movsl
test
out
outsb
cmp
sub
or
mov
pop
adc
sub
rcrl
fcompp
dec
out
push
repz
lahf
add
fcmovu
mov
punpcklwd
mov
pop
adc
in
cmpsb
xchg
jmp
inc
out
push
repz
xchg
testb
cmp
push
dec
xchg
push
aad
or
xlat
push
ficompl
ds
mov
xor
jg
adc
mov
pushf
mov
cld
jo
aas
out
ret
jno
pushf
and
es
sbb
hlt
jmp
les
jne
add
jge
vpcmpeqb
pop
xchg
xlat
cltd
cs
imul
iret
stc
sbb
int
sub
roll
fs
push
test
pushl
test
mov
out
loop
mov
xchg
jno
inc
cmp
stc
fdivp
push
in
sbb
add
fsubr
divl
andb
add
jae
dec
jmp
xor
and
or
sahf
insb
xor
clc
mov
scas
jmp
or
jbe
stos
or
adc
mov
mov
test
adc
and
push
in
cmp
and
test
sbb
aad
dec
add
aam
mov
pusha
add
add
xor
mov
popf
shl
test
iret
inc
adc
movsb
stos
adc
call
mov
sub
test
jo
mov
jno
dec
cld
adc
idiv
addr16
mov
into
or
xchg
sbb
addl
pushw
lcall
in
sahf
cmc
lahf
mov
std
pop
mov
mov
push
int3
je
clc
dec
cmp
mov
test
push
shlb
or
sbb
hlt
movsb
mov
pushf
xlat
sbb
add
adc
cmpsl
push
out
stos
push
mov
cwtl
xor
ljmp
or
mov
inc
cmp
call
or
shll
cltd
pop
xor
out
dec
out
sub
mov
xorb
lcall
xor
imul
jg
cmpsb
mov
jno
push
ljmp
xchg
mov
mov
or
add
sti
lods
rcll
pop
cmc
outsl
psubsb
sbbb
cmp
jns
and
ljmp
fstpl
aas
std
mov
sti
dec
mov
mov
sahf
inc
xor
or
addr16
cmpsl
jl
out
inc
mov
fstpl
mov
jle
mov
mov
sub
mov
repz
ljmp
and
in
lahf
dec
push
jnp
fdivr
mov
push
out
dec
mov
dec
dec
jbe
subb
sub
mov
int
pushf
push
cmpb
test
pop
in
in
push
movsb
xor
jge
ret
hlt
push
jl
sub
cltd
test
insb
and
sbb
test
insb
or
hlt
int3
lds
sbb
pop
pop
icebp
out
ljmp
pop
loope
lahf
popa
and
push
imul
mov
popf
cmp
mov
mov
push
fbld
mov
fdiv
cmp
bound
sbb
mov
add
jecxz
test
jg
dec
adc
sbb
dec
or
and
gs
aaa
and
or
push
add
cmp
loopne
lcall
aas
push
xchg
and
mov
mov
test
mov
add
push
neg
shrd
ror
cmp
push
stos
jmp
call
cmpsb
adc
sbb
lds
dec
dec
ret
inc
push
cmc
dec
insb
xlat
fwait
js
sti
into
dec
insb
mov
daa
inc
jne
pop
sahf
les
dec
test
sub
sbbl
pushf
jae
rclb
imul
inc
pop
fcmovnbe
imulb
sti
clc
icebp
mov
jnp
inc
mov
cli
test
in
cli
or
pop
dec
or
jle
inc
roll
repz
or
cmp
bound
add
mull
add
ja
test
pushf
jns
dec
mov
test
out
mov
in
push
push
pop
or
mov
add
fwait
xor
rcr
inc
add
pop
loope
add
or
push
fnstenv
jmp
xchg
adc
jne
je
add
pop
xor
push
stos
call
shrl
dec
ficoms
int3
mov
cs
or
pop
lcall
in
xchg
ret
imul
add
movsb
test
fmuls
popa
inc
xor
stos
push
mov
fistl
xchg
insl
aam
jp
cmpsb
jbe
scas
pop
fwait
xchg
daa
pop
std
pop
mov
out
inc
push
sub
ret
mov
dec
or
jb
out
sahf
lods
addr16
test
mov
hlt
gs
ret
inc
inc
cmc
pop
clc
sbb
popa
xlat
sub
daa
push
lea
and
jo
loope
add
fst
mov
roll
adc
push
mov
sub
xchg
xchg
adcb
adc
dec
mov
xchg
add
test
mov
das
xor
mov
dec
adc
or
or
in
sub
into
push
xchg
sbb
dec
fidivrl
adc
fsts
mov
adc
popa
movsb
sbb
xchg
daa
lret
jmp
sub
cmp
test
mov
pop
test
mov
dec
xchg
or
ds
mov
jle
ret
or
cwtl
subb
cs
xchg
mov
int
in
insl
jo
pop
leave
leave
mov
sub
adc
push
or
mov
jp
pusha
orl
cwtl
xchg
leave
inc
mov
leave
or
repnz
pop
sahf
loop
aad
add
nop
loopne
pop
popa
inc
pop
lods
sbb
mov
pop
push
imulb
xor
pop
xor
pop
xor
cwtl
insl
test
lcall
fidivrl
sti
inc
xchg
jo
dec
scas
cli
data16
in
test
or
adc
pop
jbe
xchg
sbb
outsl
lods
jb
scas
stc
and
fildll
xlat
mov
shll
dec
fldl
jo
xlat
push
movsl
iret
add
out
xor
jge
sbb
add
cli
and
scas
cmp
mov
add
in
test
xor
cwtl
lahf
cmp
dec
jl
js
stos
mov
ret
add
jg
sub
popf
movsl
sub
pop
lcall
cmp
int
xchg
loope
lock
inc
jns
rcrb
in
inc
mov
dec
in
bound
rorl
and
icebp
repnz
mov
sub
mov
cmp
addl
sbb
add
mov
jnp
pop
and
add
lock
push
lods
sbb
inc
outsl
jge
dec
sub
lods
orl
or
ja
ret
sbb
call
push
insl
cmpsb
mov
jno
shrl
stos
mov
inc
aam
icebp
and
dec
or
icebp
push
je
push
cmp
jecxz
inc
out
repz
shr
rolb
fldcw
push
faddl
icebp
pop
fld
and
inc
xor
jb
mov
jbe
cli
enter
push
or
jne
xor
daa
bound
pop
jmp
pop
test
lods
and
push
and
rolb
jae
into
cld
add
cltd
or
and
lds
int3
jnp
mov
adc
jnp
or
add
pop
es
addb
shll
mov
data16
outsb
sub
sub
push
mov
sahf
push
pop
das
xchg
cmpsl
cmpsb
xchg
pop
or
mov
cmp
pop
into
sub
jae,pn
rcrb
cltd
fsubs
jl
jnp
aas
cltd
in
or
loopne
shlb
decb
xchg
hlt
ljmp
fsubs
adc
lcall
pop
and
pop
pop
sub
imul
fsubp
rorl
and
mov
inc
and
pop
call
mov
test
adc
lcall
scas
and
stc
jbe
popf
pop
dec
sub
mov
js
cmpsb
and
sbb
push
imul
pop
rcrl
push
jo
cs
push
in
cmp
fwait
pop
lcall
adc
dec
mov
arpl
dec
je
in
out
mov
inc
xchg
cmp
lds
cmp
xchg
out
dec
mov
das
push
std
sbb
jg
add
jnp
mov
push
int3
mov
popf
cltd
imul
movsl
and
inc
fwait
dec
fildll
addb
mov
pop
testl
rcrb
jg
xchg
mov
les
fisttpl
leave
jle
scas
and
fildl
and
stc
in
push
mov
inc
pop
add
bswap
clc
and
fistps
in
or
mov
dec
sti
leave
pop
mov
sub
insb
xchg
mov
ret
xchg
insl
push
dec
subl
sub
or
inc
mov
in
adc
shrb
cmp
mov
mov
cmpsb
xor
cmpsb
lcall
jb
sbb
push
outsb
movsl
je
xlat
roll
adc
dec
sbb
fwait
pop
mov
pop
dec
sub
sub
je
test
add
inc
enter
xor
jb
sub
ss
lds
add
xor
andl
cmpsb
into
pop
push
nop
daa
test
dec
inc
cmp
repnz
pop
mov
push
cmp
inc
mov
jecxz
xchg
jbe
xor
dec
imulb
or
fwait
iret
mov
mov
jbe
das
dec
push
or
scas
or
or
out
mov
inc
and
jae
into
into
cmp
loopne
mov
and
fwait
ror
push
ret
push
repnz
aam
mov
into
push
lahf
adcl
mov
sahf
push
sbbl
add
xor
in
addr16
inc
adc
movsl
scas
fimuls
ja
jne
stc
mov
push
pop
shll
dec
adc
call
outsl
mov
les
imull
out
inc
jg
push
shl
imul
test
cmpb
xchg
stos
mov
adcb
or
lcall
xor
pop
mov
xchg
loope
pop
push
mov
out
sbb
cltd
mov
fdivs
xlat
imul
jnp
arpl
out
or
inc
and
dec
les
pusha
sub
push
lock
int
idiv
or
xchg
xchg
mov
test
ret
jnp
sbb
and
movsl
pushf
cmc
push
fnstenv
jmp
pop
shrl
lcall
sub
jecxz
imull
scas
push
xchg
testb
ljmp
lea
imul
ds
push
das
cmpsl
in
and
neg
cld
clc
add
add
sbb
push
ds
mov
push
dec
adc
lock
jge
into
inc
jmp
subl
mov
and
mov
outsb
and
mov
inc
mov
mov
gs
xchg
or
pop
fptan
adcl
jge
adc
xchg
mov
ror
xchg
scas
je
xor
mov
mov
inc
jmp
aas
push
test
sbb
xchg
fsubs
sub
mov
cld
loope
pop
mov
roll
mov
cltd
int
xchg
cs
push
ret
xchg
jb
mov
and
xchg
addr16
xor
mov
ja
sub
jecxz
push
loope
mov
sti
out
iret
cmp
cs
data16
dec
mov
or
shll
mov
lea
int
mov
insl
fildll
clc
and
pop
cmpsl
inc
loope
ds
incb
cld
cmp
push
out
or
idiv
dec
jae
out
loopne
sarl
add
int
add
cmp
ja
repz
xchg
loopne
and
sub
or
sbb
cwtl
test
clc
data16
mov
xchg
ret
adc
jo
in
and
push
or
mov
sbb
jg
mov
cmp
int3
jnp
int
sti
mov
scas
ja
notb
cmpsb
in
inc
shll
adc
mov
lcall
and
fldenv
push
xchg
mov
or
and
xchg
pop
push
insb
push
push
sbb
mov
sti
les
nop
aaa
push
jno
adc
fnstcw
ficoms
or
add
je
int3
dec
push
and
jl
pop
add
rcrl
data16
push
add
insl
jecxz
enter
cmp
cmp
out
or
popa
mov
loopne
cmp
hlt
pop
jg
or
inc
xor
dec
jns
in
pop
test
add
mov
sub
sbb
hlt
sub
dec
mov
push
in
jecxz
jg
mov
cmp
jb
and
ret
cmpsl
icebp
cmp
pusha
dec
or
test
popl
push
fs
dec
lds
inc
fwait
mov
insb
sbb
in
call
pop
bound
jmp
in
clc
in
sbb
mov
je
sbb
insb
loop
rcrl
ret
outsl
out
cli
mov
mov
or
subl
inc
out
sub
jno
gs
inc
push
jns
push
sbb
dec
mov
das
push
test
adc
sub
shll
inc
xchg
in
mov
mov
insb
xchg
lock
cmp
cwtl
icebp
cmpb
ljmp
jo
or
and
fs
mov
dec
xchg
aaa
dec
mov
mov
xchg
stos
je
ja
dec
movsb
int3
test
stos
mov
or
add
sbb
pop
rorl
sarb
mov
mov
ds
inc
es
ret
jmp
mov
popa
mov
xor
faddl
xor
lods
in
xchg
add
out
cmc
mov
lds
testb
inc
adc
iret
pop
lea
jno
push
shrb
stos
popa
dec
js
iret
jnp
sbb
aas
movsb
repnz
fldt
lret
or
jbe
test
adc
int3
adc
into
xadd
adc
ret
add
mov
rcrb
out
jnp
or
jo
cli
fstpt
int3
mov
sub
sbb
xchg
mov
adc
inc
lcall
lret
jno
shl
ds
and
aaa
dec
and
and
xchg
mov
push
fwait
clc
xchg
pushf
push
ss
mov
jle
xlat
pop
xchg
cmp
mov
pushf
mov
or
add
cmpl
cmp
dec
ss
adcl
lret
outsl
xor
sub
mov
cld
scas
pop
add
sub
mov
ja
pop
jns
cmp
ss
and
push
mov
jbe
int3
xchg
js,pt
adcl
and
mov
jbe
jge
cmpl
daa
cld
xchg
jbe
ds
mov
imul
pop
inc
add
mov
scas
loop
push
aam
sbb
loopne
enter
add
fs
sub
adc
pop
gs
lcall
mov
ss
pushf
test
loopne
repz
xchg
test
fucomip
jge
xchg
mov
frstor
hlt
cli
push
es
mov
aad
das
mov
xchg
repz
pop
dec
loope
mov
scas
fadds
gs
mov
bound
sub
cmpsl
and
into
mov
mov
out
call
or
jecxz
shlb
pop
cmp
sbb
das
sahf
and
or
inc
mov
pusha
sahf
mov
dec
inc
imul
out
add
outsb
jmp
out
mov
cwtl
mov
int
fdivl
sti
imul
push
lret
mov
adc
pusha
cld
xor
xchg
mov
divl
iret
bound
or
jl
mov
pop
shr
inc
loope
int3
scas
jle
scas
imul
mov
sub
xchg
mov
aam
sbb
and
ret
iret
and
push
adc
rclb
icebp
mov
test
rcll
and
mov
loop
in
outsl
mov
xchg
pop
shr
daa
cmp
mov
push
add
xor
fwait
sbb
out
jle
push
sbb
jae
jbe
sbb
imul
sub
add
push
or
iret
outsl
xchg
icebp
mov
mov
xchg
leave
out
push
push
add
adc
loop
scas
jge
out
ss
idiv
imull
das
sub
je
mov
lods
mov
dec
sbb
lock
sub
push
cwtl
adc
loopne
imull
cwtl
add
jmp
push
mov
mov
add
add
lds
sti
in
mov
inc
dec
pop
mov
ret
icebp
xchg
or
cli
xor
mov
push
push
and
sub
mov
push
cltd
fwait
mov
pop
xchg
cmp
or
test
xchg
and
icebp
mov
inc
daa
adcb
test
and
in
into
xor
sub
test
xor
pushf
jp
enter
iret
cli
jnp
inc
or
xor
push
hlt
add
jp
idiv
cmpsb
lea
test
and
pop
pop
adcl
lret
fld
in
and
and
sbb
aas
pop
push
and
rcll
stos
js
mov
pop
cwtl
in
outsb
popw
test
inc
cld
repz
push
outsl
dec
mov
addb
ss
jns
sahf
scas
push
enter
jo
das
lret
insl
or
pop
test
dec
adc
call
push
fbstp
decl
jb
mov
mov
sar
gs
pop
in
loop
rorb
cmpsl
mov
icebp
mov
cmc
gs
push
aam
lret
shll
movsb
mov
test
mov
sbb
aas
or
xor
adc
mov
push
pop
sbb
test
loopne
ds
mov
push
inc
jo
inc
sub
xchg
pop
fs
fadd
push
ja
pop
jp
or
sub
pop
dec
mov
std
rol
mov
mov
mov
das
js
lods
mov
les
pop
sbbl
idivl
fldenv
mov
and
add
add
sub
fbld
inc
aaa
rcrb
je
js
add
jbe
ds
js
fwait
orb
or
daa
pop
jbe
xchg
add
ja
push
fdivrp
pop
dec
dec
enter
movsb
push
xchg
adc
test
push
sbb
ljmp
push
adc
push
addr16
shlb
xchg
in
mov
xor
addr16
add
jb
mov
stc
imul
mov
inc
cmp
push
push
add
add
push
mov
mov
add
xchg
jno
test
loopne
scas
dec
mov
adc
aam
loope
cltd
or
mov
cmp
jbe
sahf
aas
scas
scas
ret
or
cli
pop
stos
jg
sbb
mov
out
in
bound
idivb
in
adc
xor
mov
xchg
pop
lea
stc
adc
mov
lods
pop
popf
jg
jl
dec
mov
add
adc
push
fnstcw
in
loopne
or
clc
add
insb
cmp
xchg
adc
pop
and
pop
shrb
int
repz
data16
shlb
fdivrs
daa
adc
push
mov
sbb
add
sub
cli
sbbl
fsts
cmp
jp
outsl
sbb
loop
xchg
loope
push
aam
mov
lret
mov
enter
push
sub
movsl
sub
popf
popa
push
xchg
and
jnp
lock
shll
pop
adc
xchg
inc
es
int3
ret
mov
jl
lock
das
jge
shrb
leave
push
outsl
dec
jmp
fbld
roll
stos
mov
stc
int3
push
pop
aam
pushf
push
push
sub
or
add
or
jmp
or
lock
pop
sbb
push
pop
cmpsl
ja
fimuls
dec
sub
xchg
xchg
mov
pop
dec
pushf
xchg
int
jo
inc
mov
scas
xor
jae
lea
xor
test
cmp
imul
das
aam
pop
adc
pop
xlat
cs
addb
jno
mov
leave
fmul
sahf
int3
lods
insb
aam
test
lahf
sub
xchg
leave
push
int
pop
test
push
sbb
xchg
inc
xchg
divb
out
lods
fisubl
mov
fs
imul
inc
adcb
dec
ljmp
dec
cmp
inc
and
dec
and
aas
add
insb
adc
test
and
ljmp
push
mov
xorb
xchg
mov
mov
je
pop
dec
cmpl
xor
cmp
or
incb
and
mov
test
cmp
push
dec
ss
sbb
cmp
les
or
push
in
jns
stos
outsb
cltd
rorl
jns
push
scas
add
cli
repz
out
jmp
and
push
pop
cs
idiv
fndisi(8087
popf
add
jno
cli
stos
jne
out
imul
xchg
pop
jbe
inc
cmpsl
mov
xchg
xor
add
in
inc
inc
sub
push
adc
das
lods
dec
jae
xor
mov
out
or
mov
test
jae
shlb
mov
stos
insb
iret
or
test
mov
push
xchg
dec
push
cmp
xchg
inc
das
xor
push
out
inc
fwait
icebp
mov
jb
push
das
dec
fcoml
dec
popf
add
out
stos
dec
push
jg
mov
pop
movsl
fiaddl
call
ljmp
enter
inc
sbbb
sbb
push
jbe
mov
mov
and
mov
aaa
push
dec
outsl
cmc
rolb
repz
sub
push
pop
pop
les
ja
out
int3
cli
and
outsl
inc
ficompl
push
mov
fisttpll
push
pop
jne
popf
inc
dec
sub
lcall
xchg
ret
sbb
mov
sbb
aaa
shlb
loopne
pop
jge
out
into
sub
sub
fstpl
das
ret
call
cmp
adc
nop
movsb
mov
mov
loopne
stos
rcl
test
leave
movsb
dec
out
inc
inc
sbb
in
imul
adc
push
mov
mov
mov
xchg
adc
rclb
in
xor
int3
push
add
mov
xchg
repz
jg
ret
iret
or
shlb
or
repz
xchg
pop
cmp
sbb
add
sub
aaa
out
xchg
xor
outsb
sbb
mov
pop
gs
cld
subb
add
xor
shll
add
jle
loope
sbb
insl
mov
dec
fildll
loopne
jns
jg
and
push
dec
xor
inc
mov
movsl
jl
outsb
insb
cltd
dec
and
subb
js
cmc
fs
pop
xchg
rorl
icebp
inc
sbb
jne
mov
mov
jo
into
push
sub
btc
cwtl
pop
adc
orl
fsubrl
mov
jmp
sbb
adc
dec
add
xchg
mov
in
aam
popa
pop
cmp
pop
dec
lret
ret
outsl
mov
add
lret
or
mov
dec
add
pop
mov
sub
cmp
xor
je
or
inc
add
fldl
sub
push
mov
fcoms
and
cwtl
int3
daa
into
jmp
and
or
or
ds
sahf
adcb
xchg
mov
inc
or
aaa
mov
or
mov
mov
or
sub
mov
xlat
xchg
adc
mov
enter
mov
cltd
add
aaa
adc
les
scas
scas
popf
adc
cmc
inc
xchg
adc
jns
iret
cmp
push
mov
push
push
enter
and
mov
bswap
sti
push
mov
cmpsb
nop
dec
movsb
xor
sub
push
xorb
lret
test
add
lods
mov
inc
ljmp
push
xorb
jo
jbe
push
cld
dec
xchg
dec
or
scas
jne
sub
mov
mov
js
or
or
cmp
sahf
dec
sbb
pusha
add
stc
cmp
rorb
insl
jl
xor
lea
mov
fisttpll
dec
mov
mov
jns
lret
enter
fidivrs
and
repnz
loopne
stos
xchg
arpl
pop
movsb
mov
mov
arpl
push
add
or
adc
sti
mov
xchg
xlat
cmp
add
bound
mov
pop
inc
insb
lret
sbb
mov
flds
out
jbe
mov
rcll
loop
dec
iret
jne
ret
shl
jb
pop
fadds
xor
hlt
hlt
sub
add
outsl
data16
xor
mov
mov
mov
mov
push
lea
xor
insl
idivb
cmc
negb
inc
push
sbb
test
sub
xchg
and
insl
scas
adc
test
cld
pop
mov
dec
lea
lret
xchg
xor
inc
cmp
test
je
push
sbbl
dec
push
jns
inc
push
call
or
insl
adc
or
outsb
test
inc
mov
xchg
sub
inc
cmp
dec
movsl
aad
std
into
movsb
mov
cmc
repnz
dec
sbb
and
push
loopne
rorl
push
nop
add
mov
popf
inc
repz
dec
je
ds
add
loope
jns
cmp
divb
mov
pop
vmwrite
ja
nop
data16
fiaddl
mov
xchg
adc
push
mov
stos
jp
fldlg2
aam
and
jo
je
mov
push
xchg
jno
fisubs
mov
and
imul
cmp
and
push
mov
mov
cltd
in
mov
out
mov
in
push
jo
into
repz
add
pop
stc
add
pusha
gs
test
arpl
popf
out
clc
cmp
fsubrl
test
and
sub
popa
jle
push
xchg
das
bound
lea
dec
lret
mov
jge
gs
sbb
test
rolb
enter
sahf
test
js
fwait
loope
mov
mov
repnz
mov
mov
xchg
lret
cmpsl
dec
xor
jmp
ret
cmp
jnp
int3
cmpsl
cmc
mov
cwtl
lock
sbb
pop
fbstp
das
push
je
mov
mov
fdivl
mov
das
jnp
popa
pop
and
fwait
jl
dec
pushf
push
lea
mov
aam
mov
rol
jb
pop
and
rolb
or
sbb
sbb
mov
lods
push
loope
pushf
pause
das
inc
insl
bound
mov
in
stos
cli
pop
es
add
fidivl
mov
inc
bound
inc
imull
jmp
ja
xchg
or
jb
add
push
sahf
repz
jb
mov
lds
adc
mov
pop
jno
inc
dec
sub
pop
fisubs
inc
push
mov
mov
push
or
enter
sub
dec
xchg
adc
outsb
pop
jo
mov
adc
and
and
stc
jae
rclb
and
pop
dec
cmp
pusha
push
dec
mov
xor
movsb
pushf
xor
scas
orl
inc
ljmp
roll
push
das
push
and
gs
dec
sbb
pop
mov
addr16
sbbb
pop
mov
push
dec
stc
push
mov
adc
lea
ret
dec
and
lret
lret
imulb
shr
sub
dec
add
jnp
std
mov
sub
wrmsr
cmp
mov
mov
dec
xchg
xchg
mov
subb
mov
les
mov
in
sti
loopne
jnp
cmp
movsl
insb
leave
rolb
lods
adcl
pop
pop
push
pusha
es
lcall
pop
loop
dec
cs
aaa
je
pop
jnp
int3
jge
push
out
add
into
ds
out
mov
adc
das
imul
pop
lock
ljmp
add
jp
jb
loopne
movsb
mov
jne
loope
enter
mov
cmp
xor
push
out
icebp
in
fisubl
je
int
push
pop
shrl
outsb
imul
xchg
xchg
and
ret
mov
push
mov
mov
cmpsl
int3
pop
int
outsb
jo
or
pop
iret
and
pop
lds
add
push
pop
movsl
or
out
push
aaa
fnstenv
dec
mov
or
pusha
cmp
imul
ret
mov
or
aas
mov
mov
jb
icebp
int3
gs
mov
add
notb
leave
ljmp
push
jp
sar
mov
push
lds
cwtl
xchg
add
ss
call
pop
add
ret
fstps
xor
sbb
outsb
jge
push
dec
lcall
sbb
dec
popa
outsb
and
insb
inc
mov
rclb
sbbl
mov
int
push
out
fxch
mov
xchg
mov
pop
pop
xchg
fidivs
das
xor
adc
rcrl
cmp
outsb
sbb
subb
mov
push
push
pop
push
aam
pop
sbb
add
mov
ljmp
out
jg
adcb
ss
mov
addl
stc
aaa
out
dec
pop
xor
scas
and
pop
dec
dec
enter
lea
or
int3
sbb
test
dec
mov
mov
pushl
or
dec
ret
mov
push
sbb
out
repz
and
enter
sub
sub
movsl
aam
cmp
mov
fadds
mov
push
pop
jmp
mov
data16
idivb
mov
lahf
mov
jecxz
or
test
add
or
mov
mov
xor
cld
mov
dec
fildl
mov
push
movsl
mov
repz
push
cmp
fisttpll
test
call
fisubrl
mov
scas
mov
sbbb
sbb
inc
push
in
and
repnz
call
repz
aam
jle
addr16
xchg
out
pop
repnz
dec
or
inc
aam
daa
in
js
pusha
push
sub
and
lret
or
push
xlat
rol
push
xchg
pop
bound
xchg
cmp
jns
mov
dec
je
loopne
jne
aad
adc
cmc
sbbb
std
mov
or
nop
jno
jo
in
lea
mov
loopne
xor
sbb
mov
lahf
push
insb
add
dec
jae
loopne
mov
stos
adc
hlt
sbb
lcall
imul
insb
mov
jns
sbb
xchg
mov
das
inc
jl
popf
cmc
in
sbb
sub
jne
fnstsw
sbb
add
mov
sbb
mov
pop
out
mov
xchg
pop
sbb
xchg
andl
sub
out
repnz
inc
push
pusha
aaa
imul
iret
mov
mov
mov
mov
pushf
sarb
dec
shll
cmp
or
sbb
inc
sub
pop
scas
push
cmp
mov
jae
inc
test
loope
mov
movsl
test
dec
pop
repnz
xlat
and
repz
test
or
jnp
dec
sub
xchg
sbb
std
es
punpckhbw
aam
fwait
arpl
cmp
int
in
inc
push
lret
nop
ret
enter
push
incb
push
cmp
js
pop
push
das
jmp
decb
jge
aam
cmp
cmpsb
iret
mov
dec
jbe
je
push
or
xor
outsl
sub
pushf
push
nop
es
push
mov
adc
xchg
mov
cmp
lods
mov
dec
cwtl
ret
test
shll
adc
cmp
fld
xchg
sbb
jge
test
lods
cwtl
add
loop
mov
sbb
mov
mov
pop
iret
dec
pop
cmpsl
js
shrl
add
sub
mov
or
mov
sbb
xor
xchg
mov
adc
pop
addr16
in
test
adc
std
in
cmp
popa
xorb
cmp
push
cmc
movsl
push
inc
inc
sbb
pop
gs
mov
mov
sbb
push
dec
mov
call
jno
clc
xchg
push
push
sbb
or
add
add
inc
and
jmp
push
mov
lret
fdivp
out
loop
mov
xchg
jbe
js
xchg
adc
mov
and
call
adc
push
pop
adc
rcl
dec
adc
out
push
cmp
xor
clc
pop
iret
jle
sub
cmp
sub
arpl
outsb
cltd
rorb
xor
xchg
dec
sub
movsb
add
xlat
inc
mov
insl
inc
repz
cmp
jb
fsubrs
pop
cvtps2pi
add
xor
xchg
mov
into
xchg
enter
inc
mov
mov
or
and
sub
jmp
rorb
ljmp
cmpsb
aam
arpl
sarb
mov
adc
dec
movl
cmpb
mov
and
dec
xchg
mov
xchg
mov
out
or
pushf
sbb
cltd
pop
sub
lcall
dec
sbb
push
xchg
add
jb
outsb
leave
into
nop
fs
insb
sbb
mov
sub
leave
jo
jecxz
adc
pop
mov
cmp
jne
push
push
mov
adc
aaa
sub
pop
lods
dec
inc
xchg
jmp
fistps
lods
inc
add
icebp
push
iret
lock
mov
xor
repz
xor
cmc
mov
jmp
pop
lcall
inc
push
inc
imul
rcl
mov
jmp
aam
mov
mov
pushw
mov
xor
fimull
xchg
cmp
cmp
loopne
fnstcw
divl
out
arpl
out
cmove
testb
push
xor
xor
out
mov
push
sub
std
adc
push
mov
dec
xor
adc
inc
orb
test
rolb
stos
inc
add
in
pop
cld
repnz
push
arpl
rcl
push
mov
das
mov
shl
lea
xchg
aas
test
mov
cmp
cmpsb
and
test
ja
sub
iret
push
cmp
mov
pop
subl
outsl
ljmp
adc
in
cwtl
inc
sub
pop
loopne
roll
mov
std
lret
lea
inc
push
mov
sti
pop
xchg
sub
jge
inc
fs
loop
mov
mov
cmp
pop
inc
xor
jne
jo
lock
mov
out
les
fisubrs
je
aas
sbb
jae
sahf
adcl
das
adcl
pop
fcomp
sbb
cmp
jmp
test
das
bound
jae
lods
or
jnp
test
xor
xchg
mov
mov
mov
push
or
lea
aas
pop
enter
xlat
inc
shr
inc
ja
sub
stos
aam
std
mov
push
int3
mov
aam
out
stos
or
dec
pusha
jmp
mov
out
mov
push
xor
in
and
je
push
mov
fs
mov
dec
vxorps
pop
xchg
inc
pop
not
testl
dec
sub
les
mov
pusha
sti
dec
je
orb
jo
and
es
out
aas
es
mov
jecxz
adc
mov
aaa
jae
sub
pop
mov
add
mov
hlt
lret
jne
bound
cmp
pop
sbbl
or
xchg
mov
stos
sub
add
rolb
neg
xor
xchg
jmp
gs
sar
shlb
iret
pop
push
inc
pop
sbb
outsb
and
sbb
repnz
pop
mov
jmp
or
mov
in
lret
movsb
flds
inc
test
or
push
movsb
jp
shlb
fucomi
sti
push
sbb
adc
push
popa
xchg
xor
movsl
les
pop
popf
cltd
inc
leave
les
ljmp
jbe
test
clc
insb
outsb
pop
pop
xchg
add
dec
rol
adc
push
sti
aas
add
stos
pop
std
movsb
lret
xchg
mov
aad
xorb
in
lock
popa
loop
lahf
push
in
sub
mov
insl
push
out
mov
ja
loope
out
xor
pop
adc
cmpsb
and
push
mov
pushf
jae
push
in
pop
test
sbb
call
xor
ljmp
fstl
ficompl
test
pop
jp
imul
mov
jbe
rep
ret
stc
adc
mov
jmp
lahf
movsl
popa
addb
cli
mov
imull
xchg
leave
mov
out
adc
xlat
test
leave
mov
add
mov
cmp
mov
test
cwtl
and
es
mov
lods
stos
loopne
fstps
cmp
or
add
push
int3
xchg
sbb
or
pusha
repz
mov
pop
rcrl
jnp
cld
push
cmp
push
pop
push
ret
fisubs
mov
xor
adc
out
cld
adc
jl
lret
add
cmpsl
loope
sbb
ficompl
mov
stos
imul
jns
cmp
cmp
call
xchg
pushf
cmp
mov
mov
std
mov
insl
adc
push
add
loope
pusha
dec
rclb
stos
testl
xchg
push
daa
and
imul
and
sbb
lods
not
je
cmp
dec
out
jp
loope
adc
fisttps
fmull
mov
outsl
inc
test
adc
int
outsb
call
jmp
sub
icebp
sahf
es
sbb
add
add
inc
add
int3
sub
mov
xor
xor
adc
mov
daa
pop
inc
movsl
fldl
negl
aam
jp
cmp
cmp
aad
pop
int3
sbb
rorl
call
add
loope
sub
in
inc
sbb
sti
push
leave
cltd
sub
enter
xchg
xor
test
popf
ret
inc
ret
dec
xor
pop
jmp
sub
ret
int3
inc
jl
movups
imul
loop
xchg
push
hlt
jecxz
mov
shrl
ljmp
fiadds
push
or
test
mov
std
addr16
in
push
das
daa
mov
push
in
dec
std
pop
sub
inc
lock
dec
aam
xchg
nop
xchg
imul
push
or
pop
js
into
addr16
call
adc
mov
add
rcll
pop
cmp
lret
ljmp
sub
xchg
push
mov
adcl
fisubrs
fisttps
fwait
in
fistpll
jno
int3
movsb
xchg
dec
aad
ja
test
cmp
lret
andb
cli
jl
test
gs
call
insb
imul
sub
aas
xchg
mov
fadds
or
mov
xchg
mov
adc
mov
mov
sub
sbb
push
xor
or
push
mov
mov
add
sbb
cmp
or
inc
call
adc
mov
aad
roll
loope
jg
push
push
lods
push
arpl
and
fwait
mov
cmp
jo
movsb
xor
add
sbb
dec
xchg
cmpsl
pop
or
jge
les
mov
sub
xorl
xlat
dec
mov
cmpsb
fs
outsl
dec
rcrl
js
mov
call
jae
jae
popf
vaesenc
jne
addr16
lds
mov
bndldx
aaa
repnz
and
sub
arpl
pop
jbe
popa
test
mov
adc
or
cli
ja
pop
adc
xor
cmc
mov
cmpsl
lahf
sahf
xchg
gs
nop
les
jge
cwtl
wbinvd
cs
adc
movsb
pop
lret
add
jbe
repz
das
repnz
xor
push
jle
mov
inc
scas
fwait
push
hlt
in
sub
into
push
inc
jl
ljmp
xchg
in
int3
jb
inc
outsl
xchg
sub
repnz
addl
xlat
dec
adc
fwait
xchg
xlat
dec
mov
lds
inc
push
push
jo
divb
sub
push
roll
daa
int
jb
cmpsb
sub
jecxz
jno
push
mov
inc
shlb
inc
divb
mov
mov
pop
sub
inc
jo
lea
mov
cmp
jb
repz
movsb
push
je
xor
push
dec
or
mov
andb
cmp
pop
ljmp
dec
fldenv
jne
pop
or
test
in
mov
aam
loop
add
es
out
mov
cmp
xchg
repz
add
dec
push
scas
rcr
mov
insl
addr16
xor
mov
jp
or
xor
lahf
mov
push
xchg
mov
daa
sar
and
and
int
dec
sbb
push
adc
cld
adc
cltd
sub
and
xchg
icebp
push
int
lea
sti
sub
push
cmp
and
movsb
andb
in
pop
push
mov
inc
rorl
xor
cmpl
fstps
fwait
cmpsb
mov
jne
daa
ja
jecxz
js
popf
mov
daa
stos
xor
or
pop
out
test
fisttpl
cmpsl
loop
mov
and
mov
pop
or
dec
fwait
pop
fidivrs
nop
es
out
jp
rcrb
sub
dec
ss
out
xchg
xchg
inc
mov
lock
jle
lcall
or
xor
xor
and
shll
aaa
clc
and
imul
sub
push
gs
and
adc
imul
pop
ret
rcrl
mov
ljmp
xchg
mov
lods
loopne
mov
jge
adc
mov
cltd
mov
pop
pop
repz
or
jg
pop
pop
int3
out
lcall
inc
rcrb
in
and
flds
repnz
xchg
mov
and
xchg
jb
neg
call
pop
sub
or
dec
and
int
pop
subl
fcmovb
mov
fmulp
mov
pop
fildll
mov
inc
push
adc
jae
sbb
lods
aas
loope
aaa
and
repnz
xor
sbb
pop
inc
fcompl
sbb
sub
repz
mov
inc
jno
ficompl
mov
push
pop
fwait
push
cmpsb
std
outsl
iret
leave
int3
cmpsb
pop
jo
stos
xlat
fnstsw
gs
fldl
movsl
leave
sti
pop
aaa
and
in
inc
sahf
fildll
push
mov
mov
test
cld
cli
lcall
das
adc
shll
jbe
cmp
pop
push
xchg
cmc
add
cmp
repz
sbbl
out
lcall
popa
and
mov
push
test
lds
sub
mov
ret
mov
cmpsl
push
xchg
popf
pop
clc
jbe
mov
loopne
adc
xchg
fwait
scas
sub
mov
xacquire
mov
adc
and
xor
sbbw
add
jo
dec
jecxz
ret
jae
push
mov
inc
cli
std
arpl
and
lods
jo
inc
inc
jne
add
stos
add
sbb
daa
lahf
inc
jae
movsl
mov
daa
stos
sub
xor
adc
cmp
dec
mov
out
mov
incl
rcrl
rolb
je
push
mov
cmpsb
aam
addr16
aam
adc
sub
stos
inc
movsl
int3
in
inc
push
adc
cmpsb
aas
mov
adc
pusha
fbstp
popf
xchg
sbb
or
std
pop
enter
js
and
pop
jnp
pop
rcrl
sub
xchg
in
pop
or
ret
push
xor
fstpl
fcomip
jb
data16
lret
jecxz
fsubrl
add
adc
or
test
push
arpl
pusha
jp
mov
adc
sbb
xor
fimull
sub
test
ficoml
pop
in
inc
std
push
arpl
repnz
cmp
cli
pop
mov
dec
jns
scas
mov
mov
jge
or
cltd
push
lea
xchg
adc
dec
lret
mov
or
call
push
je
dec
mov
ja
addr16
xor
lods
fldenv
repnz
lcall
xor
jl
decb
dec
addr16
inc
lahf
or
shlb
stc
mov
xchg
or
pushl
fcmovnu
adcl
in
and
in
mov
je
and
xchg
loopne
or
add
adc
fidivrl
lods
cld
or
jno
cltd
sbb
add
shlb
mov
sbb
les
cld
or
push
test
mov
mov
cmpsl
sub
xchg
loop
stos
xchg
fcomps
movsl
mov
mov
aaa
loop
or
popf
jecxz
sbb
mov
add
cmc
jle
fnsetpm(287
test
out
into
aad
dec
mov
sbb
rolb
jne
test
xchg
jb
sbb
cmp
xchg
push
adc
lock
xchg
xchg
addr16
and
dec
push
mov
rcr
xlat
rol
addr16
xchg
out
rcll
dec
xchg
dec
lods
jae
je
jae
adc
xchg
sets
imul
push
test
out
jae
xor
lahf
push
lock
mov
aam
ret
jnp
cmpsl
cmp
push
pop
push
fidivrl
dec
push
xchg
jbe
repz
or
ds
push
fdivl
push
inc
and
jmp
mov
movsb
aas
shrl
pop
mov
mov
and
hlt
dec
jno
icebp
or
jne
jbe
jns
ret
sbbb
push
in
imulb
dec
mov
xor
mov
ds
lret
push
pop
push
aad
cmpsl
pop
dec
dec
add
neg
pop
cmp
jo
inc
cltd
inc
push
jmp
sub
jno
inc
cmpsb
xchg
ljmp
jmp
inc
xor
jmp
out
mov
scas
add
les
orb
loopne
clc
mov
adc
test
cli
movsb
ds
dec
cmp
adcl
push
dec
popf
jbe
mov
in
lret
loop
test
loop
cwtl
je
enter
pop
imul
cli
imul
cmp
ret
test
xchg
mov
je
push
std
inc
mov
add
ret
pop
in
fists
pop
mov
mov
sub
sub
in
xchg
sahf
xchg
call
push
jo
pop
popa
lea
aam
fiaddl
out
cmpsl
out
mov
add
or
dec
adc
jp
loopne
loopne
rorl
jns
in
dec
mov
pop
add
adc
sbb
mov
cmp
fimull
cmp
or
jg
iret
notl
xchg
mov
sub
pusha
testb
jns
xchg
pusha
into
push
and
pop
mov
add
pop
dec
push
mov
xor
cmp
adc
jae
push
adc
jo
stc
lret
push
jb
ret
sbb
pop
stos
jecxz
xor
xor
push
mov
dec
mov
ret
dec
push
leave
sbb
je
mov
ficomps
addr16
ljmp
cmpsb
scas
pop
dec
int3
jl
cld
sbb
rclb
into
inc
sub
dec
rclb
inc
ds
andb
jle
adc
and
iret
leave
jmp
adc
arpl
mov
mov
jno
lock
loope
pusha
jb
in
sub
pop
mov
jae
jnp
ss
ljmp
or
inc
jne
mov
push
daa
insb
ss
sbb
rcr
or
inc
aaa
in
jo
ror
inc
mov
int
int3
inc
or
cmp
adc
or
and
jge
inc
and
push
outsl
cmpsl
jnp
test
das
mov
push
push
jo
jbe
dec
and
fisttpl
cmpb
jp
mov
test
dec
imul
ds
xchg
mov
test
cld
arpl
ds
lea
xchg
xor
imul
inc
jecxz
jno
mov
movsl
jnp
ss
xchg
mov
add
inc
mov
or
push
in
pop
lea
jl
shlb
pop
hlt
xchg
lods
and
xchg
subl
push
fistl
jbe
push
mov
inc
cmc
lret
movhps
pop
stc
mov
not
movsl
ret
hlt
in
xchg
jmp
xchg
xor
push
loope
sbb
adc
fisubs
test
mov
push
mov
pop
mov
pushf
mov
movd
push
jmp
jecxz
iret
sub
aaa
push
inc
jle
pop
testl
scas
dec
nop
scas
lahf
jnp
bound
or
in
mov
add
test
pop
repnz
mov
mov
pop
mov
test
sbb
mov
imul
and
repz
test
and
push
xor
cmp
xchg
or
mov
xor
test
sub
adc
jg
ds
int3
fnsave
stc
mov
test
rcr
popf
mov
dec
test
push
pusha
mov
push
test
mov
push
out
lcall
dec
xor
popf
pop
repnz
fldl
inc
out
mov
ljmp
imul
push
inc
dec
mov
dec
and
push
jl
sbb
sub
push
insb
sahf
add
push
mov
pop
out
jno
jmp
lret
pop
push
cmp
in
insl
mov
sbb
out
xor
enter
sub
enter
xor
iret
mov
or
mov
inc
xor
mov
xor
call
notb
sub
loope
cmp
mov
stc
dec
scas
out
pusha
inc
test
jnp
mov
pop
dec
jne
fwait
repz
xor
jle
lret
lods
jl
stc
pop
mov
add
sub
fimuls
inc
bound
insb
stos
jmp
scas
mov
lret
ret
fimuls
push
fbld
add
and
rcrl
sahf
push
pusha
mov
stos
mov
push
cmp
sbbb
fs
jle
pop
xchg
add
jo
inc
in
mov
pop
mov
xchg
les
push
insb
or
xchg
xor
jb
sbb
inc
scas
mov
sbb
jecxz
inc
mov
cmc
lods
scas
addr16
ja
arpl
cmp
mov
orl
mov
mov
mov
fdivs
lock
addr16
or
lods
out
mov
push
jl
inc
mov
jg
mov
mov
mov
cmp
loopne
sahf
aas
fs
add
cmovge
pop
in
add
or
pop
jbe
into
xchg
repz
ret
pushf
sub
in
mov
push
push
nop
out
cmpsb
fdivs
mov
das
mov
pop
ficoml
xchg
in
pop
dec
adc
pop
cmpsb
negl
loopne
jl
out
dec
rcll
in
pop
push
sarl
test
xor
int
sbb
and
call
fwait
in
sbb
icebp
inc
dec
push
dec
jmp
dec
scas
in
inc
repnz
loopne
or
or
mov
enter
popa
sbb
mov
pop
stos
sbb
pop
into
sbb
mov
cli
push
lahf
push
addr16
add
int3
jl
mov
idivl
subb
mov
dec
es
push
add
jne
or
sbb
push
sti
ljmp
addr16
lock
pop
shlb
arpl
sar
lds
mov
das
in
sti
das
xchg
cltd
aad
pusha
xchg
js
pop
fildl
add
mov
test
imul
push
jnp
sub
loop
sub
mov
inc
xor
mov
icebp
scas
jae
adcb
dec
inc
inc
inc
getsec
or
push
mov
testl
mov
push
pop
pop
imul
jge
push
fbstp
and
iret
lahf
and
inc
jge
bound
cmp
enter
sbb
lds
push
xchg
sbb
cmpsl
dec
lods
imul
xchg
fnstenv
push
iret
subb
and
je
loopne
lret
pop
call
xorl
repnz
pop
pop
iret
int
add
call
jle
push
xchg
sbb
lock
sub
js
sbb
sbb
call
ret
xor
fiadds
addr16
lcall
pushf
sub
push
xchg
adc
lcall
pop
push
sbb
lea
out
pop
cmpsl
das
mov
out
mov
pop
rcrl
mov
adc
dec
xor
rcr
cs
jne,pn
and
dec
out
inc
lahf
push
cmpsl
inc
sub
adc
push
std
dec
xlat
popf
in
push
push
aaa
push
jae
pusha
and
mov
adc
push
gs
lea
call
xchg
rorb
inc
mov
dec
dec
xor
inc
stc
cld
int
in
xchg
sbb
insb
hlt
pop
push
adc
sbb
gs
loop
ret
ret
xchg
mov
jno
add
push
cmp
sbb
clc
sbb
lret
jne
repz
das
xchg
xlat
out
inc
xchg
cwtl
int3
mov
pop
pop
push
add
ja
and
push
inc
es
inc
add
adc
and
mov
cmpb
jo
mov
push
jno
lret
and
sbb
mov
sbb
cli
jae
xor
js
push
mov
xor
dec
jnp
cli
jecxz
jmp
sbb
sbbl
inc
push
pop
fnstsw
or
jae
pop
add
xchg
cmp
sub
dec
fcomps
mov
push
xchg
loopne
popf
xchg
cmp
leave
mov
xor
mov
test
dec
in
scas
mov
arpl
and
repnz
cmpb
rcl
stc
out
inc
gs
jns
push
add
inc
mov
scas
les
push
out
xlat
ja
dec
je
rorb
add
das
push
cmp
scas
imul
popa
fstl
insl
in
fmul
shlb
mov
inc
enter
lret
add
jecxz
sahf
dec
sub
or
inc
fists
rcrb
enter
jae
xchg
test
pop
push
aad
fstps
or
cmc
mov
rolb
mov
xor
pop
push
xor
sarl
xor
add
dec
inc
frstor
scas
sub
jg
das
mov
js
lret
out
ja
pushf
ds
xor
aam
pushf
xchg
shlb
xor
mov
jno
cmc
aas
mov
pusha
lods
add
fs
xchg
data16
mov
xlat
sub
and
sub
jp
jb
fldenv
jmp
mov
push
loopne
rcrb
outsb
lcall
mov
pushl
cmpsl
test
sbb
xor
xchg
dec
punpckhdq
inc
mov
sub
jne
mov
jae
test
incl
out
movsb
sbb
sbb
push
jb
jno
scas
popf
adc
jns
enter
mov
loopne
add
mov
fcompl
xorb
scas
or
lret
mov
jp
add
and
sbb
sub
loope
out
scas
cld
mov
xchg
dec
ficoml
push
sbb
dec
sbb
mov
mov
or
sbb
pop
dec
mov
mov
fwait
mov
or
out
lods
push
push
mov
in
pop
cmp
adc
fldcw
lret
addr16
fwait
divl
pop
cli
mov
fs
inc
mov
mov
xchg
xor
push
lret
or
xor
cmp
popa
stos
mov
call
imul
shll
stc
push
call
cmpsl
mov
inc
sub
add
jge
call
mov
mov
inc
cmc
fldcw
sub
bndstx
inc
lods
xchg
clc
aaa
mov
xchg
ficomps
sub
fsub
jmp
adc
loope
adc
or
mov
shll
das
pop
loope
inc
nop
sub
mov
outsl
sahf
jmp
lds
lea
dec
cmp
adc
lods
sbb
stos
push
fistps
fildl
jge
mov
popw
mov
xor
aad
outsl
xor
aam
loop
mov
test
stos
jnp
and
test
xchg
enter
mov
test
aam
shll
bound
in
sbb
pushf
rcrl
scas
cmp
lea
cmp
imul
jp
jge
cld
push
int3
or
outsl
jecxz
mov
add
test
mov
lahf
sub
mov
mov
jne
sti
stos
adc
fidivrs
and
les
and
cmpsb
jecxz
int
in
sbb
stc
rcrl
gs
xor
mov
sbb
mov
sbb
inc
push
test
or
xchg
into
mov
hlt
adc
ds
loop
sar
xor
xor
push
in
and
sbb
cmp
insl
sub
cmpsb
push
pop
pop
cmpsl
imul
nop
jle
xchg
mov
mov
and
adc
xor
jae
xor
stos
ja
inc
cmp
dec
aas
inc
inc
sub
ret
xchg
fwait
in
shlb
inc
insl
jmp
loop
lds
sbb
inc
ret
xchg
stos
inc
ds
xchg
xchg
push
mov
repz
sbb
mov
loope
fwait
mov
stos
and
dec
sub
ds
pop
test
xor
nop
daa
in
daa
dec
arpl
cltd
lods
xor
pop
sbb
outsl
pusha
stos
xchg
xchg
mov
mov
shl
repnz
loopne
push
add
stc
dec
dec
test
popa
ds
jnp
inc
popa
out
test
movsb
mov
int
test
push
mov
xor
fstp
fwait
in
push
icebp
mov
sbb
push
rorl
xor
popa
nop
jnp
pop
adc
sbb
rolb
test
xchg
outsl
and
mov
pop
pop
mov
in
lret
sbb
xchg
loop
fimuls
int3
and
je
jp
into
sub
sbb
jecxz
out
and
pop
adc
sub
xchg
test
cmp
int
xchg
cmc
ret
or
pop
push
or
icebp
xor
es
test
popf
inc
movsl
inc
dec
lea
pop
mov
rol
testb
mov
aas
jge
mov
sbb
sub
out
xor
mov
inc
pop
fchs
xchg
xchg
add
jge
or
xchg
inc
sbb
xorb
je
dec
cli
jae
les
aam
imul
mov
ret
dec
subl
mov
xor
jle
fs
popa
pop
add
lods
adc
shrl
push
jo
cmp
adc
out
jb
cmp
adc
inc
mov
scas
fcoml
in
dec
pop
outsb
les
idivl
shl
xor
cmc
push
xchg
jle
lahf
xor
mov
add
addb
adc
sub
mov
jmp
xor
mov
std
add
sbb
jne
or
pop
xor
stos
sbb
adc
dec
cmp
jl
pushf
fdivl
lahf
aaa
jmp
ret
repnz
mov
cs
fstl
imulb
lahf
scas
and
mov
ret
addr16
roll
mov
nop
lret
rcrl
push
mov
cmpsl
jecxz
lret
leave
pop
fwait
and
subb
hlt
leave
jle
imul
adc
fs
mov
cmp
jl
push
arpl
jle
mov
addb
xchg
shrb
xchg
sbb
arpl
repnz
repnz
cld
adc
inc
arpl
sub
adc
int
inc
mov
xchg
xchg
xor
imul
mov
test
xchg
ja
xor
addr16
mov
test
iret
mov
repz
mov
aam
int3
sarb
add
adc
and
out
xor
inc
aas
cmp
shr
stos
mov
push
js
lods
push
sbb
or
lea
or
ja
cltd
into
inc
sarl
insl
popa
into
adc
andl
pop
pop
call
xor
repz
aaa
xor
cmp
ret
fs
inc
push
movsb
sub
pusha
xchg
scas
xor
cwtl
outsl
shrb
int3
sti
popf
int
push
and
mov
outsl
and
fnsave
mov
aam
leave
add
fidivrl
aas
lret
or
in
mov
xor
jmp
mov
adc
sbb
cld
mov
pop
mov
cmpsb
inc
daa
pop
pop
xchg
aam
mov
fs
data16
sub
int
pop
adc
cli
add
mov
ja
scas
push
test
xor
mov
cmpsl
and
in
in
arpl
mov
adc
jl
roll
mov
jo
mov
or
inc
sbb
mov
push
cltd
push
cmp
xchg
xchg
movsb
xor
mov
sub
imul
bound
cmp
lahf
jmp
lret
in
mov
add
addl
sub
cmpsb
repnz
ja
dec
ja
adc
jle
xor
push
dec
aas
xor
jmp
imul
clc
shrb
pop
inc
mov
mov
mov
rcll
push
mov
sbb
rorl
adc
inc
icebp
jge
mov
push
xlat
and
cmc
mov
fsubrp
jb
xchg
sbb
aad
insl
jle
jno
xor
fidivrs
loope
lahf
sub
inc
add
xchg
lret
aaa
mov
lahf
and
jnp
fisubrl
ljmp
fsts
sahf
rorl
pop
sbb
test
jp
mov
pmulhw
icebp
or
or
pop
cli
fdivl
add
aam
mov
in
shlb
out
pop
adc
enter
xchg
fs
mov
xlat
mov
jo
jae
sarb
xor
negb
inc
pop
cwtl
loop
jmp
push
xor
and
push
pop
xchg
cli
lret
ja
cwtl
faddp
cmp
sub
xchg
enter
mov
xchg
insb
adc
inc
ss
gs
add
cmp
sbb
out
nop
rcrl
sarl
push
leave
stos
int
scas
test
clc
mov
aaa
test
popf
fwait
jae
push
dec
mov
adc
or
pop
cmp
jmp
lret
adc
and
fiaddl
mov
pop
ss
ja
push
adc
mov
outsl
ss
popa
adc
clc
sub
or
mov
popf
dec
xchg
adc
mov
pop
rcrb
imul
push
adc
mov
les
inc
dec
mov
push
scas
outsl
ret
lods
mov
mov
lock
and
outsl
dec
daa
mov
cld
push
inc
push
add
mov
arpl
sub
sub
push
imul
imul
out
and
pop
mov
push
subb
sbb
mov
mov
mov
mov
inc
into
xchg
pop
push
popa
stc
xor
push
jne
mov
xchg
mov
cmp
cs
fmuls
cmp
push
out
cmp
mov
call
jg
imul
mov
dec
loopne
push
mov
pop
xchg
add
jp
data16
ret
pop
call
flds
or
push
mov
fisttps
push
xchg
xchg
jge
ret
mov
inc
cmpsb
sbb
testb
pop
and
jae
cltd
jmp
push
jecxz
and
inc
dec
inc
mov
ja
xchg
lods
mov
inc
lds
mov
xor
push
popa
sbb
lcall
adc
mov
imul
fsubs
in
mov
repnz
lea
shll
rclb
pop
xlat
loopnew
icebp
fnsave
push
mov
jmp
iret
lods
jne
mov
and
je
gs
push
cmpsl
aam
mov
out
or
mov
mov
and
sub
xchg
push
aad
mov
cmp
fwait
stos
push
push
push
jl
fsubrl
sub
lcall
push
leave
jl
pushf
daa
call
mov
mov
xchg
mov
cmp
fstl
cltd
into
fldt
into
dec
mov
lds
into
idivb
xchg
adc
xor
push
pop
cmp
add
xchg
push
movsb
in
jle
ret
and
out
in
lock
stc
test
insl
into
and
mov
dec
adc
add
and
aam
and
mov
xor
imul
leave
and
sbb
xchg
hlt
ja
push
cmovs
push
push
xchg
test
lods
jmp
movsl
or
jle
inc
cmp
jp
ret
lock
lret
dec
fiadds
cmp
or
and
mov
dec
pushf
sub
adcl
xchg
adc
shll
stos
push
and
imull
sub
test
xchg
test
popa
dec
xor
idivl
and
cmp
dec
mov
and
jnp
push
xchg
or
dec
mov
push
out
imul
sti
lods
data16
inc
iret
dec
shlb
xor
mov
inc
pop
test
imul
sbb
mov
mov
shl
adc
mov
push
sbb
aas
mov
add
lret
push
les
xor
orl
mov
jecxz
sbb
push
shl
mov
adc
fimuls
and
cmpsb
xor
out
subb
xchg
inc
lock
push
xor
out
cmp
pop
jle
sti
push
jl
mov
mov
in
es
sbb
not
pop
andb
mov
scas
js
mov
pop
mov
mov
enter
add
mov
sbb
mov
push
add
cltd
sbb
xor
aaa
int
mov
std
call
and
inc
dec
mov
ret
pop
xchg
sbb
fists
ds
inc
repnz
mov
or
push
inc
es
jo
cltd
jmp
dec
push
out
xor
add
push
icebp
lgdtl
mov
or
js
out
sbb
push
jno
inc
xor
nop
add
mov
loope
dec
adc
or
mov
pop
push
int3
jo
push
pop
jns
loopne
dec
ret
or
in
adc
sub
jno
bound
fldcw
pop
pop
jp
mov
mov
inc
dec
lods
ret
push
push
mov
or
inc
mov
fstpl
inc
fisubrs
lods
mov
xchg
add
jmp
xchg
movsl
daa
sub
or
xchg
xlat
jne
outsl
int3
iret
hlt
dec
sbb
add
xor
fs
aaa
add
pop
mov
push
test
lahf
inc
mov
lcall
int3
lcall
inc
out
adc
sti
loop
sbb
jae
jne
in
xor
pop
xchg
into
test
mov
ja,pn
xchg
mov
imul
mov
sbb
loope
cmp
lcall
dec
inc
xor
pop
pop
push
adc
lret
loopne
shr
je
fistpl
out
push
enter
sbb
ds
lods
sbb
add
lods
int3
mov
add
ja
inc
xchg
xchg
das
ds
lahf
loopne
leave
fsubl
sub
fsubrs
movsl
or
pop
dec
xor
sub
jnp
push
mov
pop
nop
inc
cmp
push
push
xchg
lods
and
lahf
loope
mov
sub
stos
push
mov
int
push
push
add
fnstenv
push
out
in
sub
sbb
pop
std
je
cmpl
sbb
dec
repz
sahf
cld
jns
cmpsl
sbb
push
inc
mov
cmp
leave
ja
popf
repz
push
imul
loopne,pn
mov
inc
aaa
cmp
data16
mov
fnstsw
cmp
hlt
sub
and
xchg
mov
dec
in
add
cwtl
adc
fimull
mov
dec
xlat
jb
int3
push
mov
dec
mov
pop
cmp
sbb
rorb
adcl
push
es
and
add
insl
call
into
jmp
xchg
jb
mov
mov
sub
jge
sub
repnz
test
sub
cltd
jmp
bound
fdiv
dec
movsl
jecxz
popf
scas
dec
inc
das
inc
inc
sbb
insb
add
cmp
sbb
mov
jge
sub
add
xor
rorl
cmp
outsl
rclb
out
adc
stos
cmc
xor
pop
test
jne
push
and
cwtl
ljmp
pop
sbb
sub
out
sub
aaa
mov
cld
lods
lods
aaa
pusha
cmpsl
loope
rol
push
sbb
adcl
lods
repz
fs
int
pop
and
shll
es
inc
dec
daa
imulb
push
xchg
iret
je
or
sub
mov
shll
daa
mov
test
lahf
cmpps
pop
icebp
inc
xor
push
sbb
cmc
push
jns
cld
jge
jg
push
mov
mov
mov
sbb
xchg
sbb
push
mov
xchg
stc
pop
int3
mov
idivl
add
stos
arpl
mov
fwait
jbe
leave
cmp
bound
ss
test
scas
ficomps
jl
xchg
imulb
mov
fstpl
sub
mov
and
dec
icebp
adc
lods
addr16
and
mov
ljmp
sub
arpl
pmullw
mov
pop
jmp
xchg
add
xlat
arpl
xchg
jbe
mov
add
jb
rcrl
lcall
fistpll
push
cmp
xchg
pop
push
inc
iret
sbbl
fsts
ljmp
fcoml
and
lods
cmp
xchg
xchg
jne
ret
pop
out
pop
gs
add
shl
fwait
cli
andl
lcall
fnstenv
pop
outsl
ljmp
jmp
dec
gs
xchg
mov
xchg
std
and
out
cmpsb
movsl
add
mov
mov
lcall
mov
mov
test
sub
jno
mov
fmuls
hlt
jg
mov
jmp
mov
aaa
or
pop
mov
jns
insb
sub
lret
mov
sbb
mov
push
inc
sti
dec
dec
pop
ret
push
dec
js
pop
movsb
adc
subb
ljmp
push
sbb
cwtl
pop
cmp
push
nop
sbb
mov
xchg
es
pop
push
adc
lock
pop
mov
mov
pop
mov
adc
test
inc
pop
test
lds
push
inc
mov
roll
or
inc
mov
push
push
jl
adc
scas
scas
test
cmp
imul
lds
iret
sub
loop
les
sub
mov
inc
arpl
add
addr16
inc
cmp
insl
sub
mov
fdivrl
imul
mov
and
inc
inc
shrl
test
mov
sub
add
testb
shll
dec
icebp
mov
ds
cmpsl
hlt
and
clc
adc
xor
jnp
xor
jge
pop
add
pop
xchg
jp
cmp
jo
sbbl
dec
jnp
aam
or
inc
mov
add
or
pop
inc
jbe
fldt
ja
stos
or
mov
jg
gs
stc
out
call
jle
mov
or
hlt
xor
jne
shll
jg
js
push
mov
sub
adc
sbb
cld
loop
imul
das
xchg
xor
je
fstps
ss
out
bound
shl
clc
mov
inc
lock
sub
aas
pop
enter
ss
js
int
lock
leave
add
in
sub
jns
ror
dec
mov
jns
mov
out
pop
mov
sbb
and
adc
in
pop
sub
popa
stos
mov
aas
sub
or
adcb
jmp
mov
push
xchg
add
repnz
lret
inc
mov
movb
in
cmp
add
push
pop
icebp
lahf
insl
cmp
shlb
out
lods
lods
lcall
xchg
stc
mov
leave
test
arpl
mov
mov
pop
xor
pop
aaa
mov
lret
je
adc
movsl
adc
adc
mov
adcl
es
adc
fsts
adc
cmpsl
cld
imul
lret
cmc
mov
movsb
out
dec
sbb
and
pop
ret
inc
popf
dec
call
mov
mov
jbe
inc
xor
das
cli
mov
sub
dec
mov
rcll
mov
push
jns
mov
push
mov
fsubs
mov
mov
mov
scas
fimuls
push
cwtl
mov
orl
popa
adc
in
jne
xor
xchg
adc
and
aas
jmp
movsb
test
scas
rcrb
mov
arpl
shlb
mov
pop
lahf
outsl
mov
xor
mov
jne
shrb
jg
data16
jmp
lahf
mov
stc
xchg
or
fs
sahf
mov
fdivp
jl
in
test
jb
xchg
pop
push
cmp
out
mov
mov
cli
hlt
leave
arpl
pushf
cmp
xchg
ret
aaa
pop
subl
shlb
push
xor
sti
mov
aaa
xchg
into
mov
jp
loopne
mov
in
mov
pop
inc
or
fbstp
mov
dec
repnz
pop
imul
sbb
out
loopne
push
lods
roll
lahf
sahf
sbb
lahf
aad
sbb
xlat
repz
sub
stos
subb
movsl
xlat
adc
jno
daa
fbld
xchg
jns
add
pop
mov
and
int
incb
jg
push
enter
jne
or
test
rclb
rcl
enter
push
pop
lods
dec
sbb
jle
and
repnz
aaa
adc
pop
outsl
mov
sbb
stc
inc
sub
roll
insl
mov
loopne
sbb
clc
outsb
flds
subl
aam
mov
inc
cmp
int
adc
sub
imul
adc
fadds
cmpsb
shlb
hlt
xor
inc
shll
cmc
mov
inc
testb
lock
mov
loope
push
jae
sub
mov
cmp
jg
notb
cmc
sahf
push
loopne
mov
push
sbbl
test
push
jae
xchg
cmp
push
int3
shlb
adc
mov
test
out
sub
lea
pop
mov
mov
out
pop
insl
leave
in
lret
testl
sahf
adc
pop
fsub
fstpt
pop
sbb
sub
daa
jne
jae
dec
cwtl
dec
in
pop
lahf
ds
mov
inc
and
enter
ret
inc
mov
mov
push
jnp
mov
push
hlt
inc
addr16
in
cmp
mov
cmp
pop
inc
dec
aaa
push
sbb
leave
clc
adcl
xor
cmp
popa
inc
jmp
pusha
arpl
loope
push
sar
ficompl
movsb
loop
stos
xchg
or
loopne
sub
sbb
sbbl
sbb
jno
push
mov
popa
jp
movsb
daa
push
mov
pop
jmp
into
mov
inc
cmp
cmc
fmul
arpl
xor
mov
in
dec
pop
mov
jno
pop
orb
pushf
jno
daa
sub
loopne
aam
sub
push
cltd
dec
in
lods
push
pop
nop
jecxz
jle
aad
adc
mov
jbe
movsl
popf
rorl
mov
mov
mov
aad
stos
and
push
and
das
push
arpl
and
fiadds
ficomps
pop
push
xor
and
push
stos
or
pop
lsl
adc
insl
out
hlt
roll
inc
in
cmp
xchg
adc
jmp
sub
ss
cmp
int3
pop
inc
inc
pop
push
sub
popf
scas
push
aam
out
lods
push
mov
es
lods
add
cmp
rolb
cmpsl
mov
mov
add
push
or
dec
scas
imul
mov
dec
pushf
mov
jg
shlb
push
mov
lds
mov
dec
xor
mov
jbe
jl
fs
insb
jnp
loop
xchg
jns
and
test
pop
int3
add
adc
lret
andl
sbb
push
xor
scas
out
mov
dec
push
ret
push
aas
xchg
idiv
jb,pn
xchg
dec
cwtl
dec
push
int
sub
test
outsl
enter
sub
pop
xchg
push
lret
add
jae
jle
sahf
mov
roll
es
dec
mov
bound
dec
pop
test
jo
iret
push
mov
idivb
dec
cmpsl
xchg
or
inc
shld
and
jle
pop
dec
dec
mov
outsl
rcll
mov
repnz
data16
mov
jbe
je
inc
push
add
dec
scas
rep
pop
push
mov
xchg
fcmovnbe
insb
test
shrd
repnz
aas
sarl
es
mov
inc
fidivl
jb
cltd
pop
adc
jb
add
divb
std
sbb
into
cmpsl
jle
fstpt
aas
mov
popa
dec
test
add
mov
mov
out
js
mov
divl
adc
xchg
xor
mov
push
testl
cmp
ret
lcall
adc
and
dec
cwtl
jno
xlat
punpckldq
cwtl
pop
add
cld
loope
push
mov
popa
outsl
and
arpl
dec
sbb
out
sub
icebp
fwait
pop
inc
cmp
mov
fucomip
pushf
notb
fisttps
repnz
jb
xchg
sahf
or
and
inc
pop
or
push
dec
cmp
int3
cmp
lahf
iret
mov
mov
pushw
jmp
aas
jge
shll
mov
test
push
push
cmp
xchg
mov
fwait
out
or
jbe
mov
leave
icebp
es
sbb
cltd
cld
notb
xorb
sbb
jb
cwtl
insl
pop
faddl
sbb
pusha
xor
enter
cmp
aam
fistpll
xor
mov
push
xor
leave
xchg
sub
das
push
clc
sbb
enter
xchg
jno
push
sbb
fnstsw
imul
sub
jmp
jge
sarb
add
stc
xor
cli
and
call
sbb
aaa
es
in
out
popa
mov
and
ret
arpl
shlb
xchg
pusha
lret
xchg
jmp
and
push
rcrb
add
js
or
out
dec
and
lcall
dec
cwtl
popf
sti
mov
aam
mov
orb
outsb
stos
movsl
test
and
jmp
fsts
jg
dec
shrb
xchg
addr16
shrl
dec
lods
mov
xchg
enter
fldt
sbb
int
lods
test
push
std
ds
inc
push
rorl
in
mov
test
jp
ret
jno
lds
mov
add
push
mov
jmp
icebp
cmpsl
push
mov
ret
out
mov
cmp
cmpsl
sub
mov
dec
ds
xchg
mov
int
pop
add
xchg
jmp
sti
cld
insb
mov
jb
mov
xor
aad
lahf
dec
cmp
in
jbe
fiadds
xchg
test
jmp
mov
nop
dec
lcall
stos
shll
mov
xchg
fnstcw
cwtl
lcall
out
pop
or
les
mov
popa
add
dec
lret
add
dec
mov
shlb
sbb
mov
lock
ds
sub
inc
fs
loop
dec
add
pop
mov
orl
daa
dec
inc
push
push
sarb
and
inc
jae
adc
pop
rclb
adc
das
fisubrs
pop
push
outsl
push
xchg
xchg
out
fidivl
push
stos
leave
push
jmp
xor
arpl
inc
add
sbb
adc
and
subl
xchg
push
je
inc
or
add
loope
sbb
sar
jmp
rcrl
mov
pop
addr16
and
stos
add
push
bound
or
inc
cli
popa
daa
call
pop
sub
dec
test
sub
add
arpl
and
xorl
push
sbb
cmp
stos
mov
loopne
push
or
mov
push
enter
pop
and
mov
and
xchg
nop
movsl
leave
sub
cmp
clc
pusha
inc
flds
adc
aas
mov
xor
in
cli
rcl
dec
jne
jp
ret
adc
js
mov
adc
je
mov
mov
mov
mov
jnp
adc
dec
lock
mov
lret
push
xor
pushf
arpl
mov
inc
mov
das
pop
sub
jae
aam
loop
push
pushf
cmp
ds
hlt
popa
lret
or
loopne
rcll
sti
lcall
mov
inc
sbb
test
enter
sub
cwtl
stos
xchg
or
popf
outsl
and
push
cmp
pop
scas
mov
fdecstp
addr16
cmpsb
sub
orb
dec
push
outsl
loopne
push
jmp
add
pushf
or
aaa
pop
sbb
addr16
loope
inc
xlat
jg
add
sbb
insb
mov
xchg
sarb
sbb
pop
lock
mov
out
pop
xchg
ja
shl
jp
sbb
ja
mov
add
or
andl
mov
mov
jbe
inc
lret
in
dec
xchg
or
bound
xor
aam
ffree
mov
pop
clc
jecxz
mov
cmpsl
fcoml
cltd
fsubrs
out
sub
ret
lds
inc
and
in
lret
adc
pop
add
sahf
dec
cmc
mov
das
xchg
mov
das
mov
dec
jnp
or
ret
push
outsl
enter
cmp
lea
mov
mov
mov
sub
rorl
and
or
push
mov
outsl
mov
xor
dec
mov
hlt
mov
sbb
lea
jnp
dec
outsb
fwait
sub
int
xchg
pushf
cld
jb
dec
ja
mov
pop
xlat
cmp
pop
shll
or
hlt
js
cmp
xor
sahf
lock
inc
and
orl
mov
adc
outsl
scas
pop
jo
enter
mov
xchg
cmpsb
xchg
mov
sahf
push
xor
push
dec
jo
push
mov
jge
repnz
xor
lret
add
loope
pop
xchg
inc
lahf
roll
testb
xchg
mov
mov
sub
jg
incl
or
xchg
jae
std
sbb
mov
push
fs
lock
adc
fisubs
push
dec
fidivs
test
mov
sti
loope
adc
mov
in
and
in
aam
fsubrs
inc
mov
sub
cltd
mov
and
ret
lds
xor
inc
lods
pop
pop
add
mov
leave
jg
fstps
icebp
mov
sub
scas
popf
popl
and
push
inc
push
hlt
test
lea
ss
lahf
mov
call
in
push
cli
fimuls
repz
clc
or
or
in
flds
scas
std
mov
jo
jo
jbe
int
mov
push
mov
int
sbb
ds
inc
dec
xchg
pop
pop
inc
jnp
mov
inc
mov
shll
or
cmpsl
xchg
into
ficompl
jmp
sbb
inc
imulb
xor
mov
addr16
imul
mov
add
lock
inc
mov
leave
push
or
adc
inc
adc
push
mov
push
lods
insb
or
cmp
sub
dec
and
fs
ret
std
lods
fimull
dec
inc
mov
daa
repz
dec
add
int3
mov
mov
add
push
add
xor
mov
sub
int3
mov
cld
test
clc
push
mov
dec
pop
sti
jmp
ret
dec
ds
fists
inc
stos
jg
mov
aaa
lcall
test
add
rol
inc
xchg
les
inc
fdivr
cmp
lods
or
sbb
pop
push
push
addb
and
ja
push
loop
aas
faddl
lods
cld
dec
into
cmp
pop
pop
movsl
adc
sub
jle
aam
in
push
or
call
cs
or
mov
in
xchg
mov
cmp
outsl
mov
sub
roll
aam
or
and
and
cmp
out
jge
andl
inc
adc
mov
stos
fwait
out
aad
dec
add
mov
xchg
jnp
or
outsl
pusha
scas
cmp
add
daa
dec
xor
push
sbb
ljmp
sti
dec
jecxz
sar
push
sub
pop
xchg
push
jno
lret
add
dec
push
xor
sub
or
mov
cmpl
push
bnd
inc
std
mov
pop
scas
push
mov
test
cmp
push
loopne
iret
aad
int3
adc
mov
ja
and
jge
adc
jg
xchg
popl
sub
mov
imulb
out
gs
push
gs
pop
inc
or
ret
ss
mov
mov
scas
xchg
xchg
mov
xor
sbb
les
aad
int
int3
and
pop
xor
pushf
cmpsl
jae
mov
sbbb
or
je
movsl
mov
jg
xchg
xchg
jno
lret
movq
mov
js
mov
movsb
sub
push
loop
push
jp
outsl
mov
adc
mov
sbb
andl
mov
fwait
xor
hlt
mov
aam
sub
insl
pop
lret
sarb
sub
mov
xchg
lds
push
fldt
xor
out
jne
dec
sti
dec
xchg
insb
xchg
mov
sub
pop
dec
or
push
movsb
scas
push
add
mov
stc
cli
jmp
inc
fwait
xor
nop
imul
popa
add
mov
push
es
dec
xchg
dec
test
inc
mov
xchg
mov
ret
das
pop
adc
iret
mov
into
mov
fcoms
out
adc
xor
hlt
jb
in
and
xor
jns
push
cmp
shrl
pop
gs
and
addr16
cmp
ja
fnop
sub
rorb
cmp
movsl
arpl
dec
movb
push
mov
push
cmp
rcrb
loop
adc
jbe
and
scas
inc
add
dec
test
lret
les
and
dec
cmp
add
dec
pop
mov
fwait
push
sbb
je
dec
fcmovne
insl
push
mov
add
into
enter
sbb
and
inc
mov
push
nop
dec
jmp
or
inc
fstpl
ss
dec
xchg
and
fsubrp
mull
test
in
xchg
sub
shr
scas
sbb
sbb
cmp
jae
loope
gs
lods
ds
push
xor
sub
and
lock
arpl
jle
aad
cwtl
push
or
imul
js
add
lea
xor
rclb
mov
ljmp
or
xor
mov
xchg
insb
in
add
repz
test
stos
adc
adc
ja
out
mov
xor
pushf
ffree
lods
stos
jb
jns
mov
xor
imul
repz
cwtl
push
mov
mov
xchg
push
dec
fs
out
fidivl
xchg
mov
jbe
xchg
and
cli
inc
pushf
gs
add
pop
xchg
xlat
xor
cmc
div
mov
dec
repz
scas
or
arpl
adc
mov
or
xchg
outsl
call
cmp
jmp
jge
mov
dec
mov
shlb
push
add
fldt
push
jae
mov
pop
andb
gs
mov
xchg
repz
cli
add
xor
jmp
xchg
push
clc
push
mov
inc
sbb
mov
nop
push
jbe
sub
push
xchg
mov
push
sbb
inc
mov
jb
xor
mov
sahf
lods
sbb
mov
adc
addl
lcall
sub
insl
imul
xor
push
mov
add
sbb
pop
or
cmc
mov
lcall
adc
mov
aas
out
adc
roll
shl
jl
xor
scas
cmpsb
push
mov
aas
mov
mov
int
sub
dec
in
jo
xor
xor
test
mov
aas
gs
test
rclb
andl
cmpsb
mov
mov
jno
mov
out
daa
mov
pop
std
push
xchg
jg
pop
ret
addr16
cmp
adc
or
mov
ljmp
scas
mov
cmp
mov
cltd
in
scas
mov
aas
jnp
jle
push
adc
stos
aas
sub
adc
stc
and
punpckhwd
jns
and
push
sbb
leave
scas
xchg
push
inc
loopne
cmc
test
sbb
mov
sti
cmpsb
dec
cmp
or
popa
les
pop
pop
cmc
inc
testb
fcmovnu
mov
push
jae
pushl
shll
xchg
dec
add
pushf
ret
cld
arpl
outsb
outsb
in
loope
and
jmp
mov
cs
adc
jmp
jecxz
jae
nop
filds
jmp
in
mov
ss
jne
test
das
cs
pop
push
shrb
subl
add
jp
fistl
xor
std
add
add
mulb
lret
out
jns
push
iret
dec
mov
sub
and
inc
ret
push
and
add
or
adc
cmp
out
jge
xchg
inc
ljmp
outsb
outsl
subl
push
push
sbb
cltd
das
into
arpl
pusha
mov
shrb
nop
add
daa
push
cmp
pop
xchg
inc
aaa
adc
dec
inc
xor
sub
in
iret
cmp
std
xchg
clc
imul
rcll
call
addb
sbb
sbb
add
mov
add
jl
mov
mov
xor
sbb
sti
push
jo
shlb
sub
pop
adc
xlat
mov
movsb
jbe
stos
pushw
jmp
outsl
lods
mov
mov
pop
sub
and
mov
adcl
clc
jle
out
inc
xchg
mov
sbb
mov
adc
nop
test
mov
push
or
lcall
mov
stc
xchg
fidivrs
mov
push
call
xchg
jecxz
cmpsb
mov
and
outsb
ret
xor
movsl
movsl
jl
cmpsb
mov
mov
mov
mov
pop
stc
clc
adc
inc
sti
inc
rolb
data16
inc
xchg
fcompl
xchg
mov
jns
ret
push
in
cli
inc
dec
lahf
dec
rcrb
adc
push
ja
adc
cmp
sarb
xchg
sbb
jmp
xor
push
rcrl
mov
sti
or
mov
jl
das
hlt
outsl
sbb
mov
lret
scas
add
push
out
lret
cmpsl
add
mov
add
mov
lret
popa
pop
dec
outsl
xchg
mov
sub
js
and
cltd
mov
stos
jo
lds
adc
in
push
cmp
mov
sarb
dec
or
jmp
lret
and
notl
shrl
xchg
pop
or
testb
popa
movsl
adc
lcall
add
dec
inc
inc
push
add
jno
xor
inc
ret
inc
inc
out
xor
xchg
outsb
fsubr
test
xchg
sub
mov
lahf
ljmp
cltd
pusha
fs
stc
loopne
jle
xor
jns
pop
imull
mov
pop
das
inc
mov
mov
cs
sbb
imul
sub
lcall
push
iret
or
lret
roll
stc
push
sub
fs
ret
jae
add
adc
repnz
sub
dec
addr16
mov
jge
push
push
fcomp
push
outsb
xlat
cmp
in
and
out
jae
out
xor
and
lock
xchg
popa
xchg
popa
hlt
in
sbb
cwtl
pop
clc
addb
ffree
mov
jge
xchg
pop
outsb
jecxz
lret
pop
pushf
stos
inc
or
mov
inc
ret
gs
sub
loop
or
arpl
je
stos
lods
mov
fwait
loop
inc
or
mov
mov
adc
insb
icebp
sbbb
test
inc
jnp
adc
call
fnsave
lods
push
xchg
faddl
mov
dec
fsubrs
test
sbb
rolb
dec
fidivrl
mov
sahf
xor
sub
dec
inc
loop
or
ljmp
call
jp
bound
xchg
repz
push
cmp
jge
nop
loop
mov
test
jno
daa
xchg
push
xor
push
gs
mov
xlat
and
test
jnp
push
dec
mov
or
shll
es
call
adc
cs
pushf
dec
pop
jae
test
jge
sbb
mov
faddp
add
jne
mov
sbb
leave
dec
shl
and
shll
sti
inc
mov
xor
push
add
pop
cmp
loope
lret
sbbl
pop
bound
adc
xor
jbe
sahf
pop
push
pop
shl
xorb
ljmp
push
negb
push
daa
aaa
jb
call
out
jno
aam
sub
push
shl
adc
loop
in
mov
mov
icebp
sub
push
xchg
rcr
data16
and
mov
pop
adc
sub
test
lods
adcb
xchg
and
fst
mov
or
ljmp
sti
cmp
sub
imul
imul
cmp
sbb
mov
push
fsubr
dec
sbb
stc
mov
push
add
pop
adc
scas
sarl
push
inc
mov
hlt
enter
popa
rcrb
das
mov
divb
lahf
sahf
push
je
sarl
pop
sub
outsb
push
or
pop
pushf
mov
xor
pop
push
xchg
testl
repnz
jo
xchg
inc
add
dec
jne
mov
in
pop
pop
jp
mov
aas
mov
js
cwtl
pop
cmp
pop
dec
adc
scas
mov
inc
mov
arpl
sub
aas
lods
sbb
and
leave
adc
aas
sbb
es
sub
mov
inc
rorl
xor
push
cmp
dec
into
xor
pop
mov
inc
dec
in
mov
lret
cmpsl
mov
insb
es
fsts
loop
outsb
pop
sub
les
mov
mov
mov
mov
adc
and
lahf
lea
scas
pop
outsl
or
mov
lret
mov
fsts
lock
cld
add
roll
xchg
or
inc
mov
pop
cwtl
lahf
or
adc
cmpl
mov
in
lods
leave
add
frstor
js
jbe
pop
jp
fcmovbe
dec
jo
mov
mov
dec
adc
add
push
sub
testb
sbb
iret
jns
mov
cmc
std
pushf
pop
lods
mov
pop
lods
sbb
inc
dec
loop
fnstcw
sbb
pop
cmp
fildll
sbb
int3
fxch
cmp
cmp
add
loopne
sti
jg
adc
scas
cmovnp
cld
mov
pop
ljmp
xorb
mov
sub
sbb
das
push
test
movsb
int
xchg
loop
sub
leave
test
dec
adc
push
mov
adc
sub
cs
jo
jmp
mov
fcoms
dec
push
mov
or
loopne
stos
dec
pop
popf
or
pop
sbbb
xor
and
sti
fimull
jns
stos
div
inc
sbb
lock
fsubrp
mov
adc
je
mov
sbb
lahf
nop
cmp
mov
sub
dec
jno
and
mov
aad
jge
jmp
adc
in
scas
push
fsub
push
pop
sti
fnstcw
add
ret
std
xor
ror
insb
inc
std
mov
cmp
lret
imul
and
jne
cld
mov
andl
sbb
mov
push
iret
fsubrs
and
pusha
inc
in
inc
out
push
adc
mov
outsb
inc
into
sbb
xchg
xchg
mov
inc
cld
daa
ret
loope
mov
push
cltd
mov
filds
dec
push
addr16
jmp
fs
popf
or
fistpl
sti
test
fwait
xor
mov
mov
into
cmp
out
les
rolb
or
cli
daa
sbb
nop
lret
das
ret
sbb
xchg
jno
rclb
cmp
rcl
push
pushf
incl
adc
cmpsl
push
leave
test
jae
mov
mov
pop
sbb
filds
or
or
dec
cmp
stc
inc
pop
cmpsl
xchg
mov
gs
pop
inc
arpl
cmpsl
jmp
movsb
fnsave
pop
loope
add
xchg
inc
das
out
js
addr16
pushl
insb
int
inc
mov
cmpsb
xchg
xchg
pop
xchg
aaa
sbb
push
scas
add
mov
insb
in
jecxz
icebp
adc
lods
add
jmp
pop
mov
push
xor
iret
jno
loopne
fld
hlt
test
push
add
mov
cmpsb
jnp
cmp
andl
mov
mov
cltd
popf
ret
pop
dec
daa
adc
sbb
sbb
dec
sub
inc
mov
addl
cmp
and
loop
jae
ja
sbb
std
addl
outsb
xchg
addl
pop
std
dec
adc
inc
pop
lods
push
jo
mov
pusha
cmp
lahf
iret
mov
or
ds
dec
inc
mov
test
push
ss
xlat
gs
adc
cmp
and
fisubs
adc
ror
jg
in
outsl
hlt
xor
imul
repz
mov
or
fyl2x
outsl
push
in
mov
sub
mov
jge
mov
lds
xor
and
inc
push
inc
mov
movl
mov
outsb
sub
lods
cwtl
adc
out
in
enter
xchg
dec
xchg
bound
xchg
add
out
mov
lea
imul
push
mov
cmpsb
push
sahf
cli
jb
jae
cmpsl
mov
repz
stc
or
js
xor
push
jo
xchg
pop
iret
jmp
dec
or
lods
mov
push
pop
mov
cltd
imul
in
xchg
test
jmp
adc
push
cmc
mov
fimuls
xor
lods
and
pusha
inc
std
je
push
lahf
sbb
mov
imul
mov
sub
pop
cltd
mov
popa
mov
sahf
push
xchg
rcrl
dec
jge
dec
repz
out
cmp
pop
and
pop
cmp
cmp
push
outsl
dec
fidivrl
stos
jo
cmp
inc
inc
cmp
ja
xchg
jmp
mov
dec
into
cwtl
add
fprem1
sti
stc
or
gs
push
sub
lods
mov
and
es
sub
mov
lods
jl
xchg
mov
or
stos
out
xor
ljmp
xor
dec
jb
xchg
out
in
mov
sbb
insl
out
or
push
js
jg
outsb
push
jb
clc
jmp
and
adc
insb
jb
out
outsb
adc
out
xor
roll
push
pop
push
jae
jle
or
add
roll
jnp
add
and
loope
aas
inc
stos
xchg
inc
gs
ljmp
push
and
mov
into
imul
mov
fidivrs
push
xchg
js
sbb
out
mov
fmull
rol
icebp
and
imul
mov
push
insb
inc
int
in
rorb
add
xor
lret
mov
in
mov
dec
sarl
das
loope
test
pusha
pop
ret
mov
pop
jp
mov
adc
out
cmpsb
stc
pushf
pop
dec
fwait
sub
outsl
aam
cli
xchg
push
cmp
es
inc
subb
call
or
or
scas
ret
and
xlat
out
pop
cmp
mov
add
flds
fsubrl
icebp
mov
fcomip
leave
push
in
mov
mov
mov
add
sub
out
lcall
pusha
or
mov
adc
repz
imul
dec
aam
xor
mov
mov
adcb
jbe
jge,pn
push
sarl
enter
dec
cmp
jno
push
inc
and
push
adc
iret
stc
dec
ja
daa
inc
ss
cmp
insb
int
and
out
shll
xor
loope
or
push
inc
xchg
scas
jmp
mov
test
push
push
ss
addr16
jge
xchg
lret
das
aam
cwtl
fdivr
push
and
mov
dec
in
mov
repz
push
jmp
pushf
aad
xor
push
fwait
into
repnz
xchg
sub
jmp
scas
shll
es
mov
cltd
bound
jae
and
aas
mov
cmp
push
int3
pop
cmp
jge
clc
push
aad
lds
aaa
jbe
push
xor
aaa
fnstcw
cmc
mov
mov
shll
leave
xor
mov
dec
xchg
mov
sbb
sahf
mov
jle
ret
inc
ljmp
cmp
test
lock
shl
push
xlat
lret
xor
xchg
or
xchg
js
popl
pop
sbb
ja
fidivrs
out
xlat
pop
lods
in
pusha
jbe
push
adc
dec
lahf
scas
aas
inc
cmc
add
mov
lcall
pop
outsl
scas
imul
and
or
sub
insb
test
in
dec
fs
push
mov
lret
sbb
cmp
xchg
jnp
cli
inc
jnp
fs
mov
cmpb
fldt
mov
mov
push
push
dec
xor
shl
lods
xchg
sti
repnz
mov
mov
ds
sarb
lea
icebp
adc
mov
scas
push
xchg
mov
mov
mov
sti
fsub
je
clc
mov
pop
addr16
popa
cwtl
mov
movaps
sbb
sahf
cltd
or
jae
dec
cmp
mov
add
subb
mov
cld
xor
inc
insl
insl
loop
inc
mov
gs
popf
jae
dec
xor
xchg
fisttpl
dec
cmp
push
mov
xor
mov
aas
mov
rcr
leave
test
imul
pushf
sbb
clc
xchg
shll
sbb
sbb
push
fisubl
enter
inc
push
movb
cmc
push
cld
scas
lock
daa
sbb
lahf
mov
mov
or
xor
inc
xor
imul
mov
cmp
cmp
mov
cs
xchg
mov
lds
mov
push
sub
orl
testl
cld
and
dec
lods
repnz
push
out
sahf
hlt
es
movsl
or
xchg
ret
lds
scas
ret
lahf
sbb
push
and
or
pop
inc
je
clc
jg
aam
int3
jae
xor
hlt
aam
inc
pop
mov
sti
loope
in
push
push
pop
jb
out
lret
popf
pop
sub
out
lock
xchg
and
adc
outsb
sahf
test
xor
add
pop
out
stos
inc
dec
js
outsb
xor
and
popa
pop
imul
test
xchg
dec
call
adc
fldt
outsb
and
lds
jbe
mov
jle
xor
insb
testl
mov
int3
mov
test
jne
data16
insl
pop
in
cmp
iret
inc
fwait
addr16
arpl
popf
jne
mov
mov
mov
add
mov
mov
push
or
xchg
sgdtl
mov
fisubrl
mov
pop
xchg
leave
jnp
lods
ficoms
scas
pushf
or
frstor
stos
and
mov
jp
push
inc
pushf
jmp
test
xchg
outsl
scas
jle
fdivrp
iret
orb
rcrl
pop
and
into
sarb
pop
out
into
fadds
pushf
and
fcmovnb
iret
push
add
dec
mov
and
mov
ja
std
xor
int3
add
pusha
pop
out
inc
das
add
sbb
cmp
mov
sub
ja
xor
out
dec
push
xor
or
lahf
addb
inc
lret
ja
sti
mov
lahf
and
dec
push
je
ljmp
loopne
mov
sbb
push
cmp
push
add
cmc
iret
or
mov
sbb
jne
pop
adc
aaa
push
repz
mov
pop
mov
push
pop
out
dec
pop
call
lock
repnz
inc
stos
adc
loopne
lret
sbb
cmpsl
pop
and
divl
jecxz
jno
mov
mov
pop
mov
push
ljmp
dec
sbb
int
dec
inc
sbb
mov
aaa
sti
rcrb
sub
xchg
movsb
cltd
xchg
gs
pop
mov
pop
or
stc
or
test
xor
shr
or
int
jmp
frstor
sbb
inc
test
divb
dec
push
adc
pop
push
pop
cmp
clc
xchg
push
dec
cmp
xlat
or
xor
fwait
lret
inc
outsb
inc
bound
adc
xor
push
add
jle
rcrb
add
je
sub
rorb
dec
adc
je
add
shll
scas
mov
in
sbb
jne
push
arpl
mov
inc
sub
rcrl
add
psubw
mov
jl
push
inc
imul
sbb
in
pop
inc
xchg
sub
xor
in
cmpsb
movsb
pop
stc
sub
test
xchg
movzbl
cmp
bound
jl
cmpsb
push
out
jle
xchg
push
and
cmp
cmc
scas
sti
mov
pusha
inc
cli
arpl
js
leave
push
icebp
push
pop
mov
dec
pop
arpl
clc
jnp
push
ror
cmp
sub
xchg
cwtl
aam
jecxz
mov
sbbl
repz
outsb
inc
test
ret
inc
lods
fistps
sub
sub
pop
mov
cmc
inc
cltd
std
jle
sbb
or
push
mov
in
out
scas
pushf
jl
fimull
dec
imul
mov
adc
cmp
sahf
iret
jl
pop
adc
movsb
fdivp
subl
xor
adc
ja
mov
enter
sbb
and
ret
enter
and
icebp
mov
xchg
fstps
and
cmpsb
sbb
inc
pop
aaa
sub
aam
cmpsl
sbb
pop
push
xchg
shlb
pop
dec
mov
test
jge
aas
jp
rclb
inc
cmp
mov
iret
or
outsb
jecxz
data16
loope
mov
jmp
and
push
mov
int3
fcom
ror
test
sub
fs
or
or
test
adc
pop
enter
pop
repz
mov
adc
outsb
xchg
sbb
add
adc
mov
data16
sbb
je
mov
push
mov
loope
mov
jae
aad
jmp
lea
sbb
mov
mov
repz
jg
imul
scas
mul
and
cmpsl
xchg
sbb
or
pusha
pusha
jae
xchg
pushf
cmp
add
fmulp
mov
adc
in
mov
sbb
jnp
dec
push
jne
test
mov
xchg
testl
xchg
xchg
cmp
cmpsl
add
rclb
or
outsb
iret
jle
fdivrp
pop
popf
pop
imul
sbb
stos
repz
push
and
dec
add
in
hlt
and
pop
popf
outsl
pop
int3
inc
jae
push
stos
scas
inc
lret
cmp
fucomi
adc
in
dec
adc
pop
out
js
pushf
mov
and
push
dec
sar
push
jo
cmpsl
cmp
mov
sub
dec
mov
and
xchg
mov
or
add
rcll
cmp
fiadds
pop
mov
push
lea
dec
push
in
stos
test
test
adc
ret
inc
call
adc
repnz
sub
mov
cld
enter
es
add
mov
mov
xchg
test
outsb
ficompl
cmp
adc
mov
daa
cmc
jecxz
fnstenv
inc
xor
test
imul
mov
daa
add
loop
bnd
pop
mov
fnstenv
xchg
sub
adc
lds
push
mov
popf
shl
push
loopne
inc
scas
icebp
roll
mov
test
into
mov
pop
lods
dec
out
cs
dec
cmp
sahf
test
addr16
push
adc
xorl
daa
and
test
or
aad
push
movb
adc
lods
popa
fbstp
cmc
loope
bound
nop
sbb
adc
push
test
cltd
sub
leave
xchg
lret
ja
push
xor
jns
cwtl
cmpsb
inc
sub
xchg
mov
jl
fmuls
outsb
je
xor
and
jae
sub
pushf
mov
mov
stos
sahf
rcr
jbe
cmp
lea
jo
mov
sbb
insb
cld
les
dec
pop
add
cmp
out
jb
mov
sbb
inc
xadd
pushf
or
stos
and
push
test
xchg
ja
cmp
push
push
cmp
jae
aaa
adcl
mov
js
jnp
push
stos
pushf
dec
popa
sti
jb
lock
test
add
pop
or
pop
insb
mov
mov
push
mov
rcl
xor
aaa
lahf
mov
mov
cmpsl
cmp
dec
stc
inc
xchg
mov
mov
sbb
inc
jae
outsl
sub
mov
jno
push
movsl
xchg
inc
int
xlat
out
mov
dec
or
shlb
insl
push
pop
enter
imul
dec
roll
inc
pop
mov
xlat
test
lret
mov
xchg
xor
ja
pop
adc
push
mov
enter
daa
in
int3
dec
repnz
sub
push
dec
nop
mov
insb
addr16
adc
mov
dec
mov
push
mov
xor
rclb
mov
adc
inc
dec
inc
pop
mov
sbb
fcomi
inc
pop
mov
sub
dec
int3
xchg
dec
fsubl
rcl
pop
xchg
ret
xchg
out
xchg
daa
pop
int
mov
dec
sti
movsb
adc
sti
out
in
jns
cmp
sub
bound
int
psubsb
or
sub
dec
dec
and
pop
jae
cmpsb
add
clc
rcll
cmc
mov
in
iret
lea
mov
jno
xchg
sub
fwait
cmpsl
inc
aas
xchg
out
sti
inc
push
inc
cmp
cwtl
inc
mov
fnstenv
addr16
in
cmp
adc
sbb
loop
xlat
out
inc
inc
cmpsb
ljmp
dec
inc
push
xchg
adc
out
loope
aaa
push
sarl
mov
pop
imul
xor
dec
inc
xchg
jnp
fnstcw
mov
mov
sub
jb
outsl
lods
mov
mov
pop
je
mov
in
mov
jbe
push
mov
or
mov
xorb
lods
mov
jns
aad
pop
sbb
pushf
cmc
pop
sbb
lock
dec
shl
push
ljmp
mov
push
rorl
push
fdivrl
out
in
adc
mov
or
adc
lock
mov
lahf
xor
mov
xchg
jecxz
fs
or
jecxz
into
idivl
adcb
fwait
decb
es
rcl
jl
out
out
xchg
pop
dec
pop
jg
cmpsb
pop
jle
mov
xchg
outsl
xchg
pop
push
inc
pop
popf
addl
pop
cli
mov
lcall
lret
cmp
sbb
aad
popf
not
push
xchg
cli
mov
fwait
pop
insl
xchg
dec
lods
sbb
lahf
fistl
jle
dec
ss
stc
movsb
xchg
scas
add
movsl
or
andl
pop
push
and
popl
inc
push
pusha
fwait
xor
jecxz
adc
mov
enter
popf
xchg
jbe
lock
nop
sub
sbb
out
out
inc
pop
xchg
cwtl
and
mov
jns
fs
push
push
sbb
mov
push
cmp
int3
pop
cwtl
test
movsl
jbe
movsl
loope
insl
and
subb
push
scas
sbb
add
subb
jle
xor
pop
push
ret
lahf
cmpsl
repz
xor
pop
push
out
adc
sbb
or
adc
mov
bound
popf
arpl
adc
cs
data16
ja
or
jbe
es
stc
xchg
xchg
inc
xchg
mov
dec
in
and
mov
pushf
and
jnp
mov
jp
clc
rcrl
inc
sbb
inc
bswap
and
inc
cmpsb
push
push
pop
fistpl
test
sbb
pop
int
pop
js
and
popf
sbb
inc
xchg
fimull
cmp
imul
dec
push
movsb
nop
pop
xchg
shl
inc
fnstsw
push
fidivrl
or
or
push
mov
fistl
push
xchg
jo
cltd
outsl
mov
stos
lret
sbb
out
cmp
sti
mov
sbb
push
in
cmpsb
leave
sbb
sti
shll
jl
in
xor
add
push
push
movsb
or
test
mov
xchg
inc
or
fldl
jl
test
jno
leave
dec
jmp
lods
xchg
cmp
repnz
inc
pop
clc
sbb
push
mov
popa
sbb
sahf
push
jnp
mov
sbb
push
push
in
jnp
scas
icebp
mov
or
int
stos
cmp
sbb
jle
cmc
out
dec
aaa
mov
inc
out
add
outsb
xchg
mov
int
mov
cmovl
aad
add
sub
mov
mov
into
jnp
shll
decb
cmpsb
adc
lods
push
cs
popa
outsb
das
and
jne
adc
fildll
mov
call
jge
cmp
mov
fcoms
daa
mov
xor
movsl
add
test
dec
aaa
mov
inc
in
mov
ljmp
push
daa
add
mov
es
jle
pop
mov
stc
scas
push
je
push
into
pushw
pop
inc
jmp
jl
pop
mov
adc
xor
cli
sub
cmp
inc
jnp
aaa
dec
cmp
cmp
sbb
stos
fdiv
lock
repnz
sbb
sub
adc
int
sub
jg
sti
out
and
dec
mov
imul
out
jge
mov
pop
cmp
stos
test
pop
stos
leave
into
aad
rorl
cmp
dec
push
popf
cmp
pop
xchg
mov
pop
xor
js
rorl
gs
insl
cmp
je
loopne
inc
imul
dec
lods
cmp
insl
das
push
leave
mov
mov
mov
inc
pushf
xor
cld
mov
add
jecxz
xchg
nop
aas
dec
inc
cmp
sbbl
loope
rorl
ret
mov
repnz
and
adc
pusha
je
push
add
dec
lods
shlb
lcall
stos
jecxz
sahf
clc
pop
add
sbb
push
sub
lahf
dec
je
push
pop
adc
aaa
push
xor
adc
in
pop
jno
sub
add
into
js
ja
jae
lea
int3
lea
xchg
addl
adc
pop
pop
das
jle
push
cmp
mov
adc
inc
jb
fstpt
sbb
in
or
add
xor
or
leave
outsl
enter
mov
and
xor
lock
push
adc
in
sbb
push
jbe
adc
aam
les
inc
nop
cmpsl
adc
jb
sbb
ja
inc
cwtl
scas
mov
dec
test
adc
mov
test
push
sbb
xor
leave
jl
mov
repnz
mov
outsl
xor
nop
mov
sarb
repz
jge
pop
xchg
adc
les
ret
add
sbb
mov
and
stos
in
mov
add
cmp
movsb
mov
rcr
jne
xchg
int
clc
lods
mov
add
jmp
test
xor
bound
add
xor
sbb
movsl
jae
cmp
shll
cltd
mov
lods
adc
adc
push
int3
push
inc
jle
mov
idiv
push
mov
aad
adc
loope
int3
mov
xchg
gs
divl
ror
clc
xchg
push
iret
dec
movsl
or
imul
or
or
mov
mov
loope
adc
xchg
inc
mov
aaa
iret
or
xchg
popa
pop
jb
dec
add
cmp
push
xor
inc
loop
aad
sbb
mov
testl
pusha
mov
wrmsr
mov
mov
in
fwait
repz
jecxz
xchg
inc
fs
pusha
iret
popa
adc
icebp
dec
inc
add
jg
push
sub
in
xchg
icebp
mov
or
xchg
cmpb
mov
cmp
push
or
jp
sbb
popa
mov
inc
ljmp
ljmp
cmc
adc
cwtl
arpl
xchg
push
iret
jmp
mov
push
mov
pusha
add
mov
xchg
push
je
mov
push
lods
lret
dec
xor
test
mov
and
xor
and
or
ror
repnz
jne
dec
popa
dec
int3
lds
cmpsl
sti
sbb
push
mov
xchg
pop
cld
enter
clc
xchg
cli
aas
pop
inc
cs
sub
adc
push
mov
and
jb
shrl
cmpsl
outsl
ss
aaa
and
in
outsl
lock
push
jo
negl
imul
js
test
cs
xor
sbb
jle
aam
inc
pop
push
ffree
push
or
mov
sbb
jne
hlt
mov
inc
test
cmp
lods
inc
movsl
push
outsb
jno
and
popa
daa
push
sub
push
push
xor
aas
rclb
pushw
incb
dec
pop
sub
orb
leave
mov
xor
sub
arpl
aaa
xchg
outsb
das
push
xchg
dec
xchg
inc
adc
hlt
lret
xor
js
mov
mov
movsb
cmp
or
test
jg
jge
and
bound
and
mov
addr16
sub
mov
and
mov
fdivrs
fadd
xor
xchg
mov
pop
aas
pop
stos
idivb
adc
repnz
xor
pop
sahf
push
pop
lods
cmpl
inc
xlat
outsb
outsb
scas
jae
mov
xchg
add
adc
lret
inc
mov
popa
mov
mov
outsl
mov
out
sub
fisttpll
shr
int
mov
push
mov
jle
push
mov
ja
jg
out
les
mov
pop
mov
shlb
jne
fildl
inc
dec
pop
mov
mov
inc
addl
into
loope
mov
mov
inc
cmc
ficompl
sbb
sbb
cltd
or
repz
lods
dec
sahf
mov
aam
dec
mov
push
mov
stc
jle
dec
xor
jns
and
addr16
jbe
sbb
xor
add
inc
loope
jp
shlb
sub
in
dec
xchg
push
inc
stos
push
inc
dec
jb
jnp
cmpsb
sbb
xchg
mov
aas
mov
mov
xor
imul
std
or
icebp
jge
cli
sub
mov
jae
cmp
cmp
jnp
into
loope
pushl
pop
pop
jge
repz
push
push
dec
imulb
in
mov
xchg
jne
fisubl
stos
loopne
scas
adc
leave
imul
inc
mov
push
dec
mov
xchg
dec
das
jb
out
sub
push
call
movsl
test
inc
mov
dec
pushf
daa
add
cltd
xchg
pop
aad
adcl
outsb
push
fnstsw
aam
and
mov
test
insl
add
addb
lret
cmp
ret
cmp
jno
jge
pop
mov
clc
xchg
mov
aaa
fdivrs
mov
jp
inc
and
xchg
jp
test
cwtl
adc
sub
sti
dec
loopne
mov
dec
push
mov
fsub
jl
adc
ret
fcmove
fucom
ss
and
pop
or
cli
jmp
jo
shlb
sbb
push
cmp
sbb
pop
xor
int3
lcall
jp
dec
inc
add
xchg
shll
mov
mull
loope
jge
jb
xchg
push
jne
mov
fnstcw
roll
dec
inc
mov
xorb
add
xlat
std
and
sub
xchg
lcall
out
das
fstl
idivl
push
movzwl
push
fsub
lods
push
cmp
sbb
pusha
je
cmp
int3
leave
fdivs
lahf
movl
test
sbb
scas
adc
jb
mov
out
outsb
imul
add
and
adc
lods
mov
in
inc
lds
imul
mov
jb
push
sbb
pusha
insb
mov
out
loope
cmp
add
dec
cwtl
add
loop
add
pop
dec
xlat
icebp
add
mov
inc
scas
subl
and
nop
nop
add
xor
insb
movsb
in
push
lods
jg
xor
xchg
mov
pop
jae
fsubrl
sbb
aas
cmp
pop
aas
or
cmp
adc
subb
lods
add
jnp
pop
scas
add
outsl
mov
hlt
out
sbb
cmc
in
daa
cmpsl
inc
jge
sub
sbb
mov
aaa
aas
ja
stos
es
xchg
lcall
icebp
test
jne
movsb
je
js
mov
outsb
cmp
sub
push
mov
clc
xor
lods
jp
out
fcoml
subb
mov
pushf
out
cmove
xor
and
sbb
push
clc
cmp
test
push
fidivl
dec
fsubs
test
test
mov
fcmovbe
inc
das
mov
fildl
pop
add
mov
xor
or
add
addl
fisttpll
addr16
dec
shlb
xchg
ja
fxch
cld
and
mov
test
sti
adc
rcrl
and
out
push
aas
add
mov
icebp
push
sbb
cmc
jno
jno
inc
dec
xchg
inc
adc
ja
loope
mov
movsb
cmc
push
xor
ljmp
mov
out
sbb
mov
jo
xor
out
dec
ja
mov
in
xor
in
movsl
test
mov
outsb
aas
mov
stos
dec
je
scas
ljmp
jne
fimuls
aad
push
or
jmp
mov
aam
cmp
aas
mov
add
gs
add
pop
xor
mov
subb
add
lcall
mov
aas
mov
loopne
out
pop
jbe
add
addl
push
jmp
fisubrs
es
out
mov
pop
cmc
mov
repnz
cmp
sbb
das
into
sahf
fbstp
dec
xchg
stc
add
or
adc
sub
inc
cld
mov
or
sbb
lahf
sbb
pushf
mov
loopne
push
test
lret
std
fsubrp
xor
add
addr16
iret
clts
into
pop
cmpsb
iret
inc
pop
mov
dec
repz
dec
pop
sbb
xchg
rcrb
dec
in
mov
int3
test
mov
cmp
rorb
test
insl
outsb
aad
or
lds
inc
clc
xchg
aaa
loopne
lock
repz
outsb
mov
and
inc
inc
dec
arpl
data16
pop
ljmp
aam
mov
in
inc
push
jns
movb
vmovntdq
or
adc
cld
lods
test
outsl
add
hlt
push
dec
daa
lods
ljmp
dec
dec
movb
nop
div
add
loop
ret
jnp
mov
sub
add
xchg
jp
and
adc
inc
mov
pop
push
push
add
pop
movb
rolb
xor
jl
mov
cmp
sub
imul
inc
sub
cmp
lock
into
fwait
sbb
cmp
push
int
xlat
jbe
mov
add
imul
xor
push
push
ret
es
in
imul
sub
lock
dec
shlb
in
movsl
add
push
movsl
inc
fsubl
xchg
stc
fucomi
iret
test
inc
jp
movsl
and
add
lods
mov
cmp
pop
in
mov
and
sahf
lret
fmuls
sub
popf
sbb
jle
add
icebp
mov
mov
cwtl
mov
in
adc
addr16
adc
jge
andb
outsl
ja
push
popa
sahf
jecxz
ljmp
jns
cwtl
fdivr
inc
pop
sub
hlt
and
mov
xor
incl
cmp
imull
into
test
scas
xor
xchg
mov
push
stc
addr16
xchg
hlt
cli
inc
fildll
cmp
push
or
pop
ss
out
dec
sahf
lea
push
add
iret
sbb
outsl
fidivrs
lock
lret
jl
jae,pt
inc
cltd
mov
out
dec
mov
test
rcrb
aaa
fnstsw
pop
cmpsb
in
movsb
cmp
out
ss
pop
mov
pop
push
or
mov
adc
xchg
mov
sub
or
test
mov
ret
mov
pcmpgtd
lea
repz
xor
pop
punpckhwd
icebp
in
sbb
dec
xorps
fiadds
sbb
push
stc
push
mov
scas
flds
inc
adc
and
std
jno
jle
sbb
mov
in
and
adc
sar
lahf
outsl
jle
pop
jmp
cmp
pop
incl
adc
mov
push
push
mov
push
fwait
mov
jae
addb
movsl
jmp
xor
mov
push
fistpll
pop
pop
inc
sub
out
aaa
jecxz
and
and
enter
cmp
inc
insb
sub
cmp
repnz
in
pop
push
sub
and
cmp
addl
xor
pop
mov
jb
pop
test
std
sub
push
iret
add
and
lea
add
add
aas
inc
shrb
ud0
push
in
sub
push
adc
push
les
psubusb
lret
mov
cmp
enter
movsb
sbb
dec
sub
add
pop
add
cmc
xor
xor
into
jnp
jle
pop
aaa
sub
pop
roll
pop
pop
sarl
hlt
in
ljmp
subl
rcll
test
jecxz
mov
dec
sbb
add
xor
push
sbb
mov
sub
cmp
dec
mov
or
mov
fstpl
fimull
mov
mov
mov
outsl
dec
or
mov
or
dec
repz
pushf
jo
cltd
scas
das
adc
cs
decb
and
es
push
xchg
clc
aas
aad
test
pop
mov
ret
mov
cmp
or
out
xchg
lock
mov
mov
enter
mov
imul
sub
xchg
pop
jge
stos
inc
out
dec
divb
lea
push
push
scas
lea
add
mov
jne
ret
mov
cmp
test
xor
mov
adc
mov
in
or
lods
cmp
push
xchg
pop
scas
or
pop
bound
fnstcw
sub
rcll
jo
mov
sarb
xor
xchg
ret
sub
and
adc
xor
mov
ror
lret
fisttpl
xchg
mov
mov
adc
inc
xchg
dec
pop
cmp
mov
insl
ds
inc
and
sbb
imul
and
xlat
or
das
test
shrb
ja
popa
fisubs
mov
and
mov
lods
aas
sub
lcall
mov
jb
imul
jl,pt
or
ds
adc
sub
test
pop
fimull
roll
gs
pop
push
fimull
push
cmp
notl
rcr
repnz
or
fisubs
dec
imul
and
aas
hlt
xor
pushf
jae
loopne
loop
rcrb
dec
and
jp
and
lret
iret
sub
adc
xchg
jge
nop
jno
pop
sahf
mov
clc
mov
dec
dec
cs
test
shll
push
mov
sbb
dec
adc
pop
pop
icebp
test
jmp
xchg
lock
test
xorb
cmp
push
sub
jb
cwtl
cmp
das
test
pop
rep
or
ds
popa
rolb
xor
xor
push
sbb
aam
lahf
daa
or
sbb
pop
mov
lods
out
daa
in
outsl
in
adc
in
jns
sarb
dec
in
inc
cmp
add
or
xchg
xchg
mov
add
adc
cmp
pop
mov
pop
xchg
jg
adc
mov
out
leave
pop
mov
xchg
xchg
lahf
jl
add
mov
mov
incb
xorl
repnz
pop
inc
hlt
mov
shrb
push
enter
mov
aaa
jno
ljmp
mov
outsl
in
and
shl
mov
xchg
iret
sub
jl
je
sbb
jmp
cltd
mov
sub
xor
push
mov
pop
push
imul
cltd
out
sbb
scas
mov
add
fs
inc
jmp
mov
loop
cmp
int
adc
sub
xchg
add
adc
mov
jp
push
daa
jl
shlb
inc
and
shll
or
cmp
clc
xlat
mov
xchg
xchg
data16
and
in
mov
aam
js
xor
push
in
mov
jmp
xchg
sbb
xchg
and
cmp
femms
popf
ljmp
xor
adc
cld
xor
leave
js
repnz
stos
shlb
jmp
repz
sar
je
dec
ja
ja
mov
or
ja
orb
xor
lods
pop
outsl
sarb
sahf
popa
xor
xchg
sub
stc
imull
sbb
aaa
dec
jns
outsb
stc
dec
test
lret
lahf
and
insl
hlt
mov
xor
jle
xchg
or
adc
cli
push
xorl
inc
push
loop
xor
sub
push
das
popf
fs
scas
inc
int3
enter
mov
jne
shll
push
popa
clc
imul
stc
sub
cld
aaa
mov
mov
inc
call
or
push
inc
sti
xchg
addr16
pushf
outsb
push
push
adc
fs
fsubrs
cmpsb
dec
mov
out
leave
push
mov
nop
and
les
dec
lea
push
aaa
push
jle
or
adcl
repnz
and
xor
lods
and
cltd
pop
mov
mov
or
lcall
sub
rol
aad
cmc
adc
mov
xchg
leave
stos
lods
mov
push
fcmovnbe
test
fiadds
mov
das
subb
ret
movsl
icebp
jb
in
mov
mov
out
lods
aad
push
pop
ret
push
loopne
push
push
sbb
cmc
enter
fists
lock
in
lods
push
leave
ljmp
mov
sbb
pop
inc
subb
adcb
dec
jmp
imul
mov
fwait
or
pop
mov
ja
mov
sub
mov
cltd
jmp
mov
xchg
adc
fwait
sub
xor
ret
es
xchg
movsb
xor
fdivrs
xor
mov
pop
add
xchg
jnp
mov
xchg
xchg
mov
pop
mov
sbb
dec
lahf
int
pop
add
pushf
fwait
and
ret
test
shll
std
xchg
aas
jecxz
mov
test
fwait
pop
negl
es
stos
out
lret
mov
in
out
andb
div
cmpsl
addl
test
mov
sbb
xchg
or
lea
ret
push
out
and
push
bound
pusha
cmpsb
test
addb
stc
jle
fisubrs
and
ficoml
sub
into
enter
xchg
jns
push
jns
sub
and
scas
test
pop
subb
mov
jg
sub
stos
scas
in
and
dec
jo
out
rcr
xchg
ljmp
notb
xchg
movsb
jns
xchg
sub
leave
pop
ja
and
mov
fs
pop
cwtl
loope
stc
dec
dec
or
ja
repnz
jne
push
xchg
outsl
icebp
and
pop
es
sbb
dec
fisubs
out
data16
or
arpl
add
sbb
push
aaa
daa
mov
out
ljmp
adc
inc
test
xorl
push
sub
out
push
adc
lret
xchg
pushf
dec
lods
mov
iret
sbb
cs
sub
xchg
loop
jb
push
dec
mov
mov
adc
in
dec
cli
pop
dec
bound
insb
mov
loop
ret
and
xor
lret
call
dec
popf
or
aas
fnstcw
xor
int3
loopne
jbe
mov
ficompl
aam
enter
addl
fiadds
jae
and
add
mov
xchg
xor
and
adc
scas
rorb
cld
lds
nop
hlt
outsl
int
aam
mull
adc
rcl
shrb
sub
hlt
iret
call
into
adc
pop
test
cs
pop
lods
jnp
mov
mov
fimull
mov
fwait
lahf
pusha
lahf
fsubrl
jne
imul
and
cs
ret
scas
subl
in
aaa
jl
pop
testb
popf
lds
mov
or
dec
sbb
shll
mov
adc
mov
test
rclb
mov
xor
mov
rcrb
push
call
lret
xor
test
adc
icebp
lret
fbld
outsb
adc
pop
jns
xchg
adc
lds
iret
mov
mov
add
nop
mov
mov
cmc
scas
add
sub
sbb
cmc
lock
mov
cmp
cs
push
pop
ret
dec
lea
jno
sti
cmpsl
push
push
mov
lret
idiv
loopne
jae
and
inc
data16
xchg
and
sbb
xor
cwtl
push
pop
lahf
xchg
cmp
test
pop
test
fcmovnbe
push
jge
mov
loop
cmpsb
sub
data16
mov
pushl
insb
cmp
mov
icebp
fiaddl
je
cmp
into
outsl
in
push
push
jno
pop
fisubrl
into
test
mov
fadds
test
jp
add
xchg
inc
dec
adc
lods
mov
js
in
and
dec
push
stc
dec
fisubrs
loop
xor
in
mov
bound
inc
mov
add
or
jne
xor
ss
inc
pop
sahf
movsl
ret
mov
stos
xchg
cmp
sub
or
sbb
xlat
lret
jmp
test
inc
stos
push
push
push
rolb
loopne
sub
xchg
aaa
xchg
mov
cmpsl
lret
xchg
jae
cmp
pop
insb
cmpsb
pop
push
push
cmp
cmpsl
inc
mov
and
adc
cmpsb
ljmp
ds
or
dec
fbstp
fld
cwtl
mov
inc
clc
fmull
in
dec
stos
mov
pushf
xor
xor
out
cmp
testb
aaa
sbb
les
cmc
cwtl
in
mov
pop
shrb
sbb
int3
or
mov
mov
push
insl
call
es
xor
int3
pop
repnz
outsl
push
mov
jns
je
or
push
pop
nop
mov
js
les
fsubr
jne
stc
incl
mov
test
mov
test
test
jg
xchg
pop
out
aas
insb
mov
loope
test
aam
js
mov
or
gs
pop
iret
mov
mov
idivb
gs
call
adc
ret
outsb
ret
shll
inc
aam
imul
icebp
repnz
int
dec
inc
push
imulb
jge
es
cmpl
inc
in
jb
inc
inc
cltd
bound
pop
xchg
sahf
pusha
xchg
xor
clc
dec
xor
hlt
cmp
cltd
mov
add
movsl
sbb
enter
in
rorb
dec
push
and
in
int3
xchg
push
loopne
out
repnz
jns
mov
hlt
stos
push
jno
add
xor
sub
push
sti
outsl
or
lret
mov
push
pop
lcall
xor
out
fwait
imul
push
ss
jae
sub
and
dec
or
cmp
adc
gs
xchg
push
hlt
and
nop
xor
sub
mov
sbbb
and
shll
mov
push
jle
pop
mov
ljmp
mov
int
mov
mov
test
lcall
dec
test
sub
dec
dec
add
mov
hlt
int3
adc
dec
in
mov
ja
sub
int
out
inc
subl
lcall
pop
cmpsb
xchg
stos
xchg
fs
push
mov
add
test
mov
xchg
xchg
sbb
imul
add
adc
and
jbe
imul
adc
lods
jp
cmp
lock
nop
jo
push
or
jb
push
pushf
lods
or
call
sahf
jo
sarb
add
adc
movswl
sub
divl
mov
and
jmp
jo
ljmp
in
js
fists
adc
or
daa
aam
repz
ja
pop
cwtl
mov
fdivp
call
mov
add
stos
lret
fildll
fnstsw
and
xchg
pop
xor
cmp
and
cmpsb
les
inc
addl
sti
movsl
dec
or
jp
leave
shlb
jecxz
std
pop
ja
dec
mov
scas
xchg
add
dec
or
mov
sub
push
mov
pop
ud2
loop
cs
adc
pop
sub
xor
mov
inc
push
nop
test
jge
and
lods
adc
inc
cmpsl
sbb
cwtl
push
add
test
push
aam
pop
mov
insl
cli
rcl
sarb
push
and
out
fldenv
shrl
adc
inc
xor
xchg
inc
lret
adc
out
lock
xchg
push
add
jge
cs
and
sub
pop
inc
or
push
or
stc
int
mov
jo
adc
sub
sub
push
pop
pop
sbb
je
in
sbb
fcmovb
fsubrs
scas
in
jmp
insb
cltd
shrl
cli
sbb
mov
inc
rcll
mov
dec
xchg
rclb
cmp
jae
jbe
shlb
cmp
dec
xchg
popf
mov
aaa
cld
adc
sub
icebp
andb
push
xor
push
dec
call
mov
ss
pop
jae
pop
arpl
jbe
or
subl
bound
sub
sti
inc
shr
sub
js
fstps
pop
pop
sub
push
push
mov
out
and
int
fdivl
pop
cmp
inc
mov
pop
xor
fldcw
push
push
mov
jg
dec
adc
pop
scas
in
loop
add
jb
cmp
or
ds
adc
mov
imulb
jge
cli
call
rclb
jae
pop
and
push
sub
adc
int3
jnp
cmpsl
sub
pushf
jns
pop
jle
push
xor
sbb
scas
jo
fwait
cmp
lods
pop
sbb
fistpl
mov
jg
mov
push
push
jecxz
je
mov
dec
fs
and
sub
cmp
or
add
pop
jmp
ret
add
and
lret
mov
and
mov
pop
cwtl
in
cmpsl
orb
mov
pushf
cmp
adc
sub
in
outsl
int3
and
adc
mov
dec
jmp
jecxz
or
jno
movsb
xchg
lods
push
js
lea
inc
lods
xchg
mov
cmp
sahf
lret
sub
sarb
dec
xor
dec
push
sarb
test
rcl
adc
ljmp
xor
shlb
call
fists
out
cmp
jp
jns
sbb
mov
push
leave
mov
inc
and
hlt
orl
add
lea
shll
and
lea
xchg
xchg
push
xchg
add
cwtl
pop
mov
test
not
mov
jno
mov
cmp
pushf
movsl
test
inc
mov
repz
scas
popf
mov
sub
cmp
xor
mov
sbb
in
adc
sub
lea
and
aaa
mov
and
sbb
out
insl
or
mov
dec
sbb
cs
clc
roll
and
ret
sbb
mulb
sahf
call
or
xor
sbb
mov
stc
sbb
adc
sti
sub
aaa
test
sub
xchg
loope
outsl
sub
xchg
xor
mov
dec
test
inc
pop
enter
xchg
dec
add
mov
adc
aad
lea
aad
addr16
pop
xor
inc
sbb
xor
ja
push
es
adc
dec
sbb
std
cmpsl
stc
xor
int
out
mov
fstl
into
inc
rclb
and
repnz
in
jp
and
pushw
mov
or
pop
mov
dec
and
lret
adc
je
xor
xor
xchg
add
mov
sbb
test
int
ljmp
ja
out
pop
push
lahf
or
pop
or
mov
pop
xlat
sbb
cmp
ret
push
jnp
rorb
jno
mov
sahf
xchg
in
mov
jb
sub
je
push
add
in
fmull
and
in
ss
jae
push
icebp
push
fldt
pop
and
adc
fdivl
js
sbb
cmp
pushf
adc
icebp
cmpsl
xchg
adc
pop
xchg
mov
jo
xlat
sbb
popa
lea
cmp
pop
pop
test
mov
push
pop
movsb
into
das
or
mov
pop
add
push
add
xchg
bound
popf
divl
pop
pop
pop
sub
pop
sbb
jg
popf
mov
mov
fstpt
mov
or
ret
dec
in
fs
mov
dec
lret
inc
dec
pop
cwtl
xchg
push
in
cmpb
cmc
inc
or
ljmp
mov
enter
pop
call
nop
cmp
adc
js
cmp
mov
xchg
xchg
adc
mov
addr16
je
test
shr
dec
mov
dec
mov
add
push
std
dec
sbb
xchg
add
inc
cs
dec
lock
negb
xlat
int
mov
rorb
add
call
adc
ret
add
std
ret
xor
xchg
xor
hlt
pushf
push
cmc
jnp
fwait
push
iret
or
loop
or
pop
stos
lcall
or
push
mov
push
xor
xor
push
ficomps
or
shr
adc
jb
inc
dec
or
dec
pop
or
in
and
dec
popa
popa
sub
inc
sub
in
aaa
fwait
mov
test
in
push
mov
xchg
popa
bound
xor
jecxz
xor
imul
cmpsb
sbb
mov
cmp
xor
js
mov
xor
mov
sub
cmc
adc
sbbl
cld
pusha
in
add
pop
sub
es
pop
dec
mov
das
lahf
ret
sub
movsb
cmp
lret
xor
fisubrs
stos
jno
adc
or
in
fdivs
jno
add
int3
adc
and
outsl
push
repnz
or
stos
xor
dec
cli
test
cmp
dec
imul
sarl
fdivrs
xor
xchg
adc
and
mov
xchg
ja
mov
sub
sub
loop
lock
sub
pop
add
pop
loope
and
jno
xchg
outsb
scas
push
shrb
jb
xor
and
or
pop
clc
jns
jo
mov
dec
push
out
adc
lods
iret
dec
jge
or
addl
ror
ds
xor
add
dec
sarb
mov
insb
dec
orl
adc
pop
pop
scas
mov
jl
push
jae
rclb
xchg
pop
test
stc
xlat
arpl
or
xchg
iret
cwtl
inc
aam
xor
sub
add
imul
andl
imul
rclb
cmp
stos
cli
jb
rcll
xchg
cmp
jno
lea
pop
pextrw
dec
sti
cmp
pop
repz
cmpl
lea
inc
stos
fsubl
sub
into
cmp
pop
inc
pushf
lahf
int
fbld
and
pop
addr16
test
addl
out
dec
out
shr
jo
aad
sti
icebp
cmp
cmpsb
jnp
sarb
cmp
imul
and
subl
cmpb
pushf
fdivrp
sbb
xlat
inc
repnz
sbb
in
aaa
adc
xchg
xchg
mov
flds
mov
cltd
xchg
in
adc
xchg
dec
movsb
jne
ffree
push
xchg
aad
fwait
or
ret
sbb
push
sbb
lea
ss
lahf
xchg
or
movsl
xchg
cmp
xor
and
mov
bound
cmp
inc
cmp
test
sub
jmp
bound
insl
inc
pop
lret
push
orps
xchg
inc
es
dec
inc
pop
ret
daa
xchg
dec
packuswb
fidivrl
cmp
jbe
inc
es
xchg
adc
inc
dec
pop
fildl
xchg
dec
and
fldenv
push
out
fcompl
or
push
fstpt
cli
pusha
std
push
push
jp
inc
xor
popa
cmp
shrb
cmp
movb
test
in
or
mov
jge
or
int3
movsl
arpl
adc
inc
or
lods
sbb
pop
add
mov
cmp
fwait
sbb
imul
add
imul
aad
inc
shrl
rcrb
imul
dec
mov
dec
ja
ljmp
lods
stos
jae
sbb
addb
cwtl
push
xchg
dec
dec
aas
nop
test
mov
push
adc
add
xchg
push
xchg
push
lea
rclb
imul
sbb
add
imul
mov
xchg
imul
pop
shll
lcall
cmpsb
insl
gs
iret
sub
mov
ret
aad
adc
fiaddl
popa
insb
orl
rclb
fsubs
inc
pop
pop
inc
add
cmpl
insl
push
mov
pop
mov
cmp
and
loop
scas
in
das
cmp
adc
ret
and
add
fimull
mov
and
pop
fs
je
rcrl
mov
mov
and
or
adc
dec
in
dec
push
mov
xor
xor
cwtl
sbb
push
mov
sbb
pushf
and
fldl
mov
pop
das
xor
xchg
pop
sub
cs
xor
cmpsl
pop
sub
sbb
frstor
xor
in
loop
cmc
and
xchg
adc
test
hlt
roll
das
scas
lods
int3
and
fs
or
imul
cmpsl
dec
in
ljmp
pop
mov
mov
dec
mov
pop
or
outsb
mov
or
inc
add
or
sub
jo,pt
bound
mov
fmul
hlt
mov
jnp
xor
and
push
mov
cli
mov
inc
pusha
out
cmp
sbb
cmp
es
mov
inc
insb
imul
mov
daa
pop
leave
stos
fdivl
dec
sbb
push
push
xchg
scas
cwtl
ljmp
shlb
jo
jmp
test
scas
xchg
jp
or
lock
dec
jae
es
test
jg
jnp
or
out
and
or
xchg
mov
mov
xchg
subl
mov
popa
clc
sub
push
push
out
mov
ljmp
movups
mov
jp
push
mov
das
aaa
push
outsl
stos
sub
ljmp
pop
shrb
pushf
xor
loope
mov
adc
sub
inc
sub
popa
or
hlt
inc
jb
mov
aas
xchg
in
xchg
cmp
out
int3
or
je,pn
pop
add
cmpsb
pop
mov
lret
fiadds
mov
enter
fs
pop
pushf
jecxz
push
fwait
out
iret
testb
imul
pop
push
inc
ja
popa
jnp
mov
pop
xchg
push
push
jle
jne
sbb
lcall
sub
neg
pusha
aas
cs
push
lcall
mov
iret
push
lods
or
test
rcr
mov
ja
mov
inc
fdivrp
sbb
push
add
sti
aad
hlt
dec
xchg
mov
and
rcll
sbb
icebp
incl
movsb
mov
lods
lcall
push
xchg
sub
popf
and
movsl
into
sub
jns
inc
lcall
add
in
ds
call
adc
or
cmp
or
or
cli
add
dec
test
jns
rcr
movsl
popf
mov
cmp
mov
cmp
outsb
push
dec
mov
rcll
xor
ljmp
jae
jle
ja
mov
test
daa
in
dec
xor
adc
jno
icebp
xchg
add
pop
xlat
adcb
out
pop
mov
xchg
and
mov
jnp
adc
sub
jnp
jbe
pcmpgtd
scas
or
jge
pop
rolb
out
int
sub
adc
mov
mov
setp
jl
jb
adc
es
subl
mov
adc
push
sahf
lds
and
push
xor
or
sub
orl
xchg
sub
xor
and
std
mov
mov
sahf
push
mov
adc
lods
repz
dec
jl
insl
add
xchg
push
lock
scas
sub
jnp
sbb
notl
ds
adc
fwait
test
pop
inc
fdiv
push
fildl
sbb
mov
sbb
enter
mov
loope
call
jbe
outsl
cmp
and
push
lcall
fnstsw
sub
lods
arpl
into
push
and
mov
mov
fbstp
clc
mov
xchg
ret
mov
dec
icebp
in
leave
add
jne
mov
cmc
not
mov
stos
mov
sbb
shlb
loope
and
xor
sbb
lds
dec
dec
xlat
jnp
icebp
cmp
aaa
arpl
or
cmp
xchg
mov
pop
loopne
or
pop
sbb
rcrb
fisubl
sub
pop
mov
popf
mov
rol
pop
hlt
test
pop
cmp
scas
jo
lret
aas
push
test
fstpt
xor
clc
sub
xorl
imul
test
sti
or
inc
inc
mov
insb
inc
sbb
push
lahf
mov
mov
cmp
push
aad
mov
lods
lahf
xchg
cmp
cwtl
aam
out
sbb
dec
pop
jbe
movsb
mov
test
or
pop
mov
sbb
xchg
cli
shrb
mov
ja
lret
xchg
jp
daa
jne
dec
rcll
es
test
lods
movsb
ds
pop
lcall
test
test
dec
jecxz
sub
push
cmp
sbb
leave
inc
cltd
mov
xchg
cwtl
push
out
stc
andb
test
stos
push
stos
rorb
cmpsb
or
in
sbb
loopne
ret
aam
adc
or
adc
ja
mov
mov
aas
sbb
sub
mov
adcb
outsb
add
clc
hlt
or
ret
xor
inc
jmp
sub
or
inc
mov
lcall
movsb
xor
push
out
rcll
inc
or
fisubrs
std
sub
outsl
insb
and
mov
out
fdivrs
int3
and
lock
nop
rcrb
flds
dec
jo
or
sub
into
pop
push
add
jns
or
mov
fnstcw
adc
repz
push
es
push
lahf
sbb
sbb
mov
sub
ss
jecxz
fidivrs
outsb
mov
mov
neg
pop
lcall
sbb
mov
jo
hlt
cli
ror
in
iret
std
je
cmp
popa
in
mov
popf
pop
xor
cmpsl
mov
mov
xor
int3
insb
mov
xor
xchg
jmp
sbb
mov
sub
frstor
push
cmp
aam
pop
jb
int3
scas
loopne
mov
sub
jg
loopne
dec
repnz
lahf
push
and
fisttpll
lods
xlat
fwait
cmp
mov
jmp
jae
sbb
pop
adcl
push
popf
cmpsb
and
cld
cmp
xchg
idiv
lcall
jno
aaa
repz
jg
stos
dec
mov
mov
or
add
ljmp
mov
dec
mov
and
dec
dec
rcll
fs
data16
cld
push
lds
mov
xor
popa
lea
pop
in
pop
popa
inc
nop
xor
push
adc
xchg
jl
ret
jo
adc
enter
mov
sbb
int3
xchg
aam
mov
add
fstpl
insb
test
les
ljmp
mov
mov
mov
mov
lds
mov
ror
std
pop
jmp
push
xor
pop
fs
repnz
sbb
xchg
stos
push
jbe
add
jne
and
ja
jmp
cmp
mov
es
xor
mov
bound
call
emms
fwait
and
decl
mov
xor
inc
sarb
jecxz
push
je
inc
add
inc
popf
popf
adc
jl
rcrl
stos
or
pop
ret
cmp
mov
repz
xchg
outsb
call
ds
push
sbb
fmulp
jl
dec
or
iret
addr16
mov
pop
add
cs
rorb
icebp
xchg
nop
mov
insl
inc
push
jno
loop
out
in
cmpb
jb
sbb
sub
loopne
aad
mov
push
adc
push
mov
dec
dec
push
xchg
das
stc
stos
shrl
insl
cs
aad
cmc
mov
push
jo
hlt
push
pushf
lret
in
or
jp
fcoms
sti
xchg
stc
dec
lea
jb
jg
mov
sahf
in
xlat
push
std
imul
mov
in
xchg
push
pop
add
rcrl
sbbl
push
push
push
xor
out
push
pop
ljmp
rolb
int3
xchg
dec
mov
aad
jnp
mov
sbb
mov
xchg
xor
insl
mov
arpl
movsl
push
inc
inc
sub
push
sahf
push
mov
je
mov
cmp
jecxz
xchg
call
pop
stc
jecxz
add
inc
adc
mov
push
imul
lods
lds
lcall
mov
sahf
pop
adc
cmpsb
pushf
insb
mov
lret
mov
decl
pop
or
repz
mov
mov
sbb
and
jle
dec
xor
adc
pop
sub
das
out
loopne
leave
add
push
adc
cld
cmc
inc
pusha
insl
imul
jg
inc
pop
lcall
das
pop
pop
push
int3
cmp
pop
mov
or
cmp
mov
jg
imul
jbe
xchg
mov
adc
xchg
cmpsb
jp
ss
shlb
add
mov
call
not
loope
test
cltd
pop
cmp
or
dec
fsts
sub
mov
cltd
jge
pushf
inc
jecxz
repz
insb
mov
in
mov
jecxz
sub
and
scas
xchg
outsl
orb
cli
push
jne
out
arpl
std
les
xchg
xor
out
add
pop
adc
mov
mov
popf
pusha
aam
lret
pop
mov
popa
js
enter
mov
adcl
es
or
cmc
push
ds
lret
add
fsubs
jnp
sbb
scas
insl
lret
dec
rclb
ljmp
popa
mov
mov
cltd
jmp
or
mov
fisttpll
dec
sbb
mov
stos
xchg
jmp
mov
xchg
into
pop
nop
mov
pop
mov
test
jns
scas
mov
int
mov
data16
inc
lret
ret
mov
push
outsb
cmp
mov
xchg
mov
dec
lea
mov
lahf
xchg
cs
or
popa
lods
mov
shll
inc
int
push
repz
mov
movsl
push
jg
mulb
fsubr
push
sub
inc
sub
hlt
and
add
cs
push
into
jae
loopne
cmp
test
push
out
cmp
inc
mov
fmull
pop
xchg
aas
inc
aas
add
fsubrs
sub
addr16
sbb
jae
xchg
ljmp
xor
push
cmp
xchg
lea
push
jg
push
cmc
pop
subb
mov
sub
sbb
sti
jge
outsl
pop
push
push
push
mov
jecxz,pt
out
leave
jns
or
movsb
aaa
sub
rcrb
mov
bound
pop
ja
loope
pop
fidivs
inc
movsl
push
xchg
push
dec
arpl
adc
dec
adc
mov
push
sbb
pushf
repnz
adc
mov
testb
push
inc
or
icebp
mov
fidivl
or
imull
mov
sub
push
push
mov
int
pop
out
insb
sti
push
mov
adc
or
push
add
inc
jo
dec
dec
bound
mov
negb
mov
mov
cs
inc
add
fiaddl
inc
icebp
inc
xor
and
xor
push
cmp
in
shlb
outsl
rorl
imul
dec
bound
stos
arpl
leave
mov
jo
test
fsubs
les
sbb
arpl
loope
sbb
mov
or
add
jle
std
lods
js
cmp
push
loope
push
jl
loop
xorb
jmp
insl
subb
mov
and
adc
repnz
insb
mov
xlat
cmpsl
cmpsb
pop
loope
mov
jmp
fdivrs
shll
push
mov
leave
cld
gs
and
cmc
addr16
les
pop
mov
dec
sub
and
jo
addr16
or
push
mov
inc
out
xchg
sbb
cmp
or
mov
lods
arpl
aaa
loope
outsl
or
nop
mov
or
add
xchg
shll
jle
mulb
cld
xlat
xchg
aam
shl
stos
and
mov
cld
scas
pop
mov
sbb
and
sar
push
dec
cmpsl
sub
sub
in
mov
or
mov
xchg
cmc
inc
fisubl
loopne
repnz
xchg
fwait
pusha
or
in
cmp
clc
lock
mov
into
mov
ficoml
add
sbb
ja
sub
cld
loopne
pop
popl
sbb
push
movsl
mov
dec
fs
xchg
mov
jno
ss
mov
jecxz
xor
test
mov
cmpsl
stos
push
adc
iret
out
pop
outsb
add
jb
sub
lock
mov
sbb
mov
outsb
jb
pop
out
add
dec
sub
sahf
inc
mov
xor
repnz
push
lret
imul
out
xchg
shlb
leave
or
lea
sbb
js
sub
ss
pop
cmp
outsl
and
push
sbb
or
shll
lods
push
jmp
xchg
rclb
test
sbb
inc
sub
jg
push
aam
hlt
pop
lret
sbb
dec
fidivrl
stos
inc
xor
mov
addl
ret
push
pop
pushf
movnti
repz
jno
mov
fnstsw
mov
xchg
jmp
stos
or
test
fnstcw
mov
cmp
cli
imul
pop
loop
cmp
fistl
sbb
lahf
xor
cmp
fcompl
dec
dec
rorb
dec
cmpl
movsb
pop
jnp
push
pop
add
outsb
push
insb
imul
int3
inc
outsl
cmpsl
adc
iret
leave
div
lds
iret
std
ss
jg
pushf
and
inc
mov
pop
and
sti
insb
rorb
out
xlat
mov
lock
ret
mov
fsubrs
xor
add
in
push
fisubl
pop
push
cmp
xor
in
je
and
cmp
mov
mov
dec
popl
test
gs
cmpsl
fdivs
test
cmp
int
jmp
adc
sub
das
xor
xchg
ja
dec
jecxz
scas
incb
dec
lcall
push
mov
mov
cld
aad
fists
jb
jbe
ror
inc
and
test
outsl
mov
adc
cmpsb
pushf
rcr
enter
and
xchg
cmpsl
or
pop
jl
adcb
setg
jno
mov
out
push
mov
lods
rcl
and
mov
mov
jge
and
sbb
in
add
sub
subb
xchg
sbb
hlt
in
call
test
xchg
jg
imul
pusha
in
std
or
mov
mov
fists
add
enter
sbb
push
fistl
sub
sbb
mov
loop
sub
jnp
pop
jmp
pusha
arpl
xchg
in
je
sub
lds
mov
or
dec
and
inc
pop
int
loopne
aam
mov
jl
dec
mov
sub
lret
daa
xchg
test
cmp
stos
adcb
fistpll
jbe
xlat
mov
and
cltd
nop
out
imul
sub
in
sub
je
je
test
mov
sbb
mov
aad
and
and
cli
aam
inc
sub
sub
popf
adc
sub
push
and
movsl
push
aaa
loop
cmc
es
lahf
cmp
xchg
and
test
xchg
je
xchg
popa
ds
gs
out
jl
adcl
jl
push
cs
fs
xchg
fadds
sbb
std
jnp
stos
cwtl
in
lods
jmp
sub
sub
mov
pop
push
xchg
pop
ffree
shrb
inc
pop
jne
mov
lds
aad
adc
jecxz
cwtl
sbb
sub
dec
or
mov
daa
cmp
pop
jae
and
negl
ret
xor
jle
imul
or
jae
pop
push
push
in
cld
inc
addr16
jge
call
pop
cmp
xor
pop
jnp
add
add
and
mov
push
mov
insb
int3
and
mov
jns
andl
rcll
or
stos
xchg
test
flds
pushf
jg
push
insb
test
outsb
shlb
cld
sbb
mov
jae
repz
jmp
cvtdq2ps
push
in
xor
test
jmp
pusha
cmp
or
adc
cmc
push
loop
scas
sbb
xor
cmp
fadds
fsubrp
add
lea
sbb
jne
stos
lds
stc
xchg
les
mov
int3
popf
xchg
sub
xchg
lahf
jbe
mov
xchg
pop
aad
fwait
lcall
stos
scas
adc
mov
and
mov
push
fnstcw
andb
mov
inc
leave
or
repz
movsl
inc
movsb
dec
shl
clc
ficoml
repz
sbb
lds
mov
rclb
inc
clc
pop
mov
test
shl
mov
push
inc
cmp
aas
imul
mov
es
lahf
jle
adc
cli
outsl
cmp
fcompl
sbb
cmpsb
std
mov
jae
in
inc
and
mov
mov
fldt
lret
mov
jmp
and
fmull
cltd
mov
pushf
pop
jbe
mov
movsb
testl
pushf
inc
cmp
lea
cli
push
xchg
push
test
dec
insl
jo
ds
pop
pop
rcrl
roll
rorb
cli
xchg
enter
dec
adc
and
fcom
sub
mov
add
call
xorl
loopne
xor
mov
cmpsl
les
les
xchg
daa
out
out
add
stos
imul
imul
push
mov
push
lret
stos
shll
jmp
out
jle
pop
mov
les
xchg
cwtl
in
repz
adc
or
pop
xchg
xor
xchg
mov
das
les
pop
pop
in
add
sbbb
mov
xor
dec
iret
pop
cs
cmp
pop
out
xor
xchg
in
mov
add
cltd
in
inc
and
test
std
fwait
ds
outsl
das
loope
adc
push
sbb
xchg
ss
mov
fs
cmp
push
push
rcll
cmp
xor
or
mov
cmp
mov
inc
cmp
jge
out
push
ret
iret
xor
lea
sbb
inc
fimuls
in
inc
stos
inc
arpl
ret
jae
mov
jg
sbb
cltd
cmp
mov
js
adc
jecxz
arpl
lahf
xor
sahf
xor
and
lret
xor
fimull
xor
jp
lds
push
and
and
dec
jecxz
and
sbb
xor
add
cltd
dec
shrl
mov
call
mov
xchg
loopne
xchg
lret
repnz
aam
enter
imul
cwtl
ret
leave
sub
cmp
cmp
sub
cmp
roll
mov
scas
adc
jl
jae
xchg
daa
addr16
mov
dec
dec
rcrl
inc
push
push
lret
jge
cwtl
add
dec
and
das
enter
add
orb
pop
sahf
iret
xor
push
sub
icebp
pop
in
repnz
ret
hlt
jmp
adc
pop
mov
mov
pop
lods
jbe
mov
nop
jp
stos
mov
imul
pusha
push
xchg
dec
out
xlat
jno
loopne
xor
repz
lret
xchg
or
adc
add
mov
adc
lahf
vmwrite
jb
inc
int3
pop
jne
inc
mov
lret
jge
add
and
xlat
js
xchg
dec
insl
cvtdq2ps
adc
push
or
insb
stos
push
fcmovu
ja
in
mov
push
pop
aam
cmp
cld
add
pop
loop
add
lcall
scas
int3
popa
lret
sbb
xor
leave
int3
adcb
adc
out
lock
imul
or
daa
jl
add
stos
dec
ret
enter
aad
loopne
mov
mov
jbe
sarb
sub
js
fs
jle
enter
ds
xor
mov
jg
sbb
mov
cmp
loope
mov
repnz
xor
sbb
out
test
jmp
cmp
sbb
xchg
outsb
pop
out
out
and
cmp
jo
insl
outsb
sbb
push
bound
rolb
pop
dec
idiv
fstps
popf
adc
xchg
jp
pop
jl
sub
xchg
mov
call
ds
std
jbe
es
sub
fs
mov
mov
push
jb
jg
xor
jmp
loop
icebp
xor
dec
repz
jl
mov
dec
cmp
jecxz
dec
vmread
lock
jbe
dec
xchg
jns
insl
xchg
adc
sbb
loop
and
ljmp
and
enter
dec
sbbb
pop
or
inc
movsl
fsts
rcrl
popa
inc
sbb
in
pop
ss
adc
in
pushf
lcall
stos
jecxz
adc
loopne
sub
mov
sub
cmp
add
stc
out
cmp
daa
push
or
jbe
dec
mov
out
pop
int
mov
mov
addr16
dec
push
mov
outsl
pop
aaa
ficoml
orl
fistpl
xor
dec
sub
inc
cmp
pusha
int3
aam
ja
movsl
mov
lret
movb
mov
sbb
stos
outsb
xchg
sub
and
ljmp
ror
mov
adc
aas
add
pop
sub
hlt
movsl
sbb
or
data16
push
mov
shrb
loopne
lods
or
pop
pop
andl
loopne
xor
sbb
aad
adc
sar
fwait
addr16
mov
jne
leave
pcmpgtd
insl
outsl
or
shlb
mov
movsl
cltd
mov
data16
jp
outsb
cmpsl
std
es
inc
jge
jmp
test
sub
lock
mov
shlb
and
int
scas
inc
dec
xor
cmp
jmp
pop
outsb
adc
adc
mov
dec
leave
add
and
std
push
cwtl
sub
mov
hlt
jmp
xlat
outsb
pop
xor
sub
jge
fwait
ss
fcoms
push
sahf
xchg
or
sbb
into
loope
mov
test
xor
and
lods
les
mov
lods
cmp
jg
mov
jl
iret
pop
dec
insb
pop
iret
into
out
rolb
mov
cmp
pop
ljmp
pop
push
cmp
xchg
mov
ret
xor
xorb
dec
leave
test
lcall
dec
ffree
icebp
inc
fs
scas
mov
into
jecxz
in
rol
cs
lods
add
hlt
mov
mov
ret
sahf
add
xchg
jae
inc
pop
sub
lret
lock
mov
adc
ficoms
sbb
mov
xor
xchg
lret
hlt
xchg
push
lods
adc
je
pop
in
mov
mov
mov
scas
and
fisubrl
int3
adc
shrb
insl
pusha
xchg
pop
cmp
nop
and
jae
cmpsb
jmp
in
push
pop
test
push
test
inc
cld
ret
sub
cmp
dec
int3
inc
fcoml
cmp
ss
pop
inc
push
pushf
mulb
or
rolb
orb
sbb
mov
stos
pushf
call
or
addr16
cli
std
adc
xlat
es
mov
dec
pop
arpl
push
xchg
das
lods
test
mov
int3
xlat
mov
ja
shrl
arpl
xchg
lods
add
aaa
ljmp
sub
popf
mov
xor
sub
xchg
or
in
das
jmp
cld
mov
sahf
fimuls
or
inc
in
jbe
mov
sub
xor
mov
bound
movsb
sarl
xor
mov
mov
lret
test
iret
jne
insl
or
daa
out
loopne
dec
mov
sarl
sbb
mov
xor
mov
test
aas
aas
rorl
popf
scas
add
jns
or
inc
dec
and
inc
jle
dec
jle
or
dec
mov
xchg
enter
push
je
sbb
and
jge
mov
sbb
xchg
fiaddl
imul
rorl
pop
cltd
es
adc
int3
ficomps
aam
popf
inc
cli
in
or
popa
ljmp
and
loop
dec
cltd
frstor
xchg
pop
aas
test
sbb
jo
mov
or
sbb
pop
xchg
andl
inc
jmp
pop
gs
std
xchg
ss
mov
push
adc
nop
cmp
jbe
in
push
insb
das
fsts
decl
sub
arpl
lods
dec
jp
push
hlt
inc
popf
jecxz
inc
int3
popf
movsl
cmp
pop
and
clc
mov
in
add
movsb
in
mov
jg
enter
gs
jmp
mov
test
push
scas
and
call
pop
inc
pop
push
inc
pushf
imul
cmpxchg
inc
arpl
add
cwtl
push
xlat
inc
scas
mov
mov
sbb
enter
test
stc
stos
in
shll
pop
xchg
lcall
fwait
adc
push
test
movsb
xchg
xor
sbb
imul
mov
mov
jle
in
shl
adc
cli
jle
sub
pop
pop
test
nop
out
fisttpll
and
jecxz
mov
mov
or
adc
xchg
jno
push
movsl
lea
mov
jb
push
sub
in
ret
xor
xor
pop
bound
xchg
jge
fisubl
xchg
mov
push
jbe
pop
and
stos
adc
sbb
xlat
cmp
pop
scas
add
mov
icebp
mov
js
dec
jge
inc
push
js
popf
xor
mov
cmpsl
leave
lea
js
jo
sub
inc
adcb
repnz
out
ret
xchg
jecxz
pop
lock
nop
hlt
jg
xchg
lods
mov
pusha
dec
cmpsb
fdivrl
sbbb
fucomip
push
jp
int3
pop
les
cmpsb
pop
and
push
pop
imul
inc
ss
cmpsb
dec
mov
ficompl
test
movsl
pop
inc
pop
adc
popf
add
cmp
xchg
dec
add
sarb
jl
nop
mov
dec
pop
aam
pushf
jae
ret
xchg
lods
pop
adcl
jne
xorl
popf
or
or
clc
int3
out
sub
sbb
test
push
insl
jg
add
xor
repz
sub
aaa
dec
shrl
iret
push
xor
shl
sub
dec
test
aam
pop
push
add
out
cltd
shlb
leave
in
jns
aas
sub
push
xor
add
je
ds
in
insl
cmpsb
popf
test
xorl
xchg
ret
pop
mov
mov
mov
adc
jl
jmp
xchg
xchg
inc
push
pop
jle
lret
pop
dec
sub
mov
push
clc
or
ret
popa
ret
in
aas
sahf
jmp
aas
incl
pushw
fcmovne
mov
xchg
insb
push
lret
ror
ss
cmp
int
mov
sbb
xchg
inc
negb
add
decl
stos
cmp
xchg
mov
fldt
add
in
dec
jecxz
xchg
cli
sbb
int3
push
popf
clc
xchg
cwtl
xor
rcl
mov
jb
lea
pushl
sahf
jnp
out
or
les
nop
mov
adc
cmp
jg
mov
jl
cmc
fidivrl
xlat
shrl
imul
nop
dec
scas
scas
sbbl
int
lds
xchg
mov
xor
std
into
mov
sub
push
or
sub
cmp
and
fisubl
mov
sub
aas
inc
mov
add
dec
cltd
mov
jecxz
in
pop
inc
popf
pop
xor
push
movsl
ss
inc
jae
stc
shlb
mov
mov
mov
sbbl
into
mov
loop
fnsave
inc
hlt
sub
in
lods
push
lds
mov
pop
outsb
scas
mov
out
dec
into
pushf
cmp
test
out
out
nop
push
push
fimuls
push
inc
sbb
inc
daa
and
nop
mov
add
dec
subb
mov
push
mov
lds
testl
jns
mov
dec
pop
or
inc
and
enter
bound
ss
sub
cmp
into
popf
xchg
pop
add
mov
repnz
leave
stc
lret
popa
mov
out
cwtl
mov
or
cmpsl
pusha
loop
fbstp
daa
repz
aad
repnz
stos
inc
daa
mov
negl
out
insb
mov
dec
imul
pop
xlat
lahf
addr16
add
popa
test
ljmp
jge
clc
inc
mulps
sbb
mov
imul
adc
xlat
aad
sub
addb
xchg
and
and
lock
push
pop
cmp
in
inc
fsubs
mov
addl
add
mov
pop
test
mov
and
cmp
cmp
movsb
mov
sahf
adc
mov
mov
cld
dec
dec
cs
pop
inc
adc
jl
xchg
adc
adcb
adc
push
xor
jecxz
dec
adc
jbe
ficomps
xor
sub
mov
mov
jecxz
in
push
add
mov
sbb
stos
mov
sub
push
int
frstor
add
mov
shl
loope
sub
xlat
daa
loopne
mov
mov
xor
scas
out
add
dec
fs
and
push
es
jg
jl
movsb
ret
mov
fsubs
sarl
scas
adc
xchg
mov
dec
dec
xor
scas
mov
das
inc
je
mov
sub
pop
arpl
and
fwait
xchg
out
das
shl
xorl
inc
mov
jo
cmp
mov
in
push
outsl
or
adc
sbb
dec
aam
js
jnp
ret
test
xchg
nop
add
andl
sbb
mov
and
sub
mov
outsl
dec
inc
iret
int3
inc
inc
mov
xchg
mov
cmpsb
daa
aad
call
hlt
xor
cltd
jne
xchg
jae
or
inc
mov
cli
mov
mov
dec
xor
push
fwait
mov
out
imulb
mov
roll
jp
xchg
or
cltd
hlt
popa
outsl
gs
ret
mov
sbb
ss
sbb
mov
aas
mov
pop
aas
adc
es
inc
std
aas
lods
cmp
hlt
mov
mov
mov
push
adc
jle
or
popf
fnstenv
mov
rorl
in
or
pop
and
push
shrl
jnp
push
xor
xor
and
cmp
push
push
mov
mov
adc
popa
mov
lcall
in
mov
mov
jno
dec
jg
mov
test
xchg
inc
inc
mov
jnp
mov
pop
loop
pusha
mov
inc
dec
cld
imul
push
jge
adc
sbb
jecxz
mov
cmp
jmp
xchg
dec
xchg
ret
mov
sub
dec
mov
loopne
and
loopne
mov
and
call
push
adc
jp
mov
jle
adc
push
loop
out
push
lcall
xor
xor
test
or
dec
mov
inc
loopne
pop
cld
mov
stos
sbb
orb
imul
pop
and
sub
cwtl
mov
pop
sbb
fildll
test
xchg
adc
jg
test
pusha
shlb
push
mov
lret
mov
adc
pop
int
test
xchg
subb
cmpl
push
push
or
cmpsl
pop
iret
xchg
push
out
std
iret
mov
lds
hlt
xor
data16
es
xor
cmp
lcall
mov
inc
cmpsb
outsb
pushf
mov
pop
sbb
iret
push
movsb
sbb
xchg
jge
sub
add
iret
pop
jne
divl
and
xchg
push
pop
push
outsb
cs
jbe
cwtl
or
pop
mov
add
and
jle
fwait
push
stos
push
jne
pop
adc
cmp
pop
add
pop
mov
lahf
insb
das
cmpsb
enter
xor
push
push
pop
dec
popf
stc
scas
jmp
ror
mov
inc
dec
iret
adc
mov
mov
sub
imulb
loope
jecxz
add
jns
hlt
clc
cmp
test
mov
sub
and
sbb
pop
stc
cmpsb
mov
sbb
out
fwait
loop
sub
clc
popf
pusha
xor
push
pop
inc
pusha
ret
sub
sbb
lcall
xchg
sub
and
les
test
push
adc
jno
add
xchg
ja
sub
pop
or
ljmp
movsb
xchg
cli
fiadds
popa
mov
into
aaa
jae
xchg
popa
fs
push
mov
sarl
jb
cmp
dec
les
ljmp
or
outsl
ret
movsl
test
repz
fdiv
clc
mov
xor
repz
arpl
xchg
mov
vcvtss2sd
inc
pusha
repz
sarl
test
mov
push
out
inc
and
jmp
rcl
lods
push
push
mov
cmp
js
pop
daa
movsb
pop
jns
shl
hlt
adc
adc
in
insl
and
sub
fisttpll
cwtl
mov
mull
sub
add
cld
mov
sbb
xor
and
das
sahf
iret
mov
cmp
dec
repnz
jle
adc
mov
sub
dec
in
inc
xchg
cld
or
movsb
scas
adc
es
psrld
lret
xor
jle
insl
mov
adc
cld
shl
out
iret
mov
mov
push
jbe
sbbl
mov
outsb
sbb
cmpsl
mov
inc
daa
cmp
test
iret
scas
xor
push
and
scas
das
or
mov
mov
hlt
adc
xor
lahf
out
cmc
hlt
add
push
std
push
inc
and
out
in
aam
sbb
scas
js
jbe
shlb
rorb
mov
iret
mov
cmp
mov
lret
lea
repnz
push
push
and
dec
fistpl
add
stos
or
fs
ret
inc
inc
rclb
ret
mov
pop
daa
enter
subb
popa
xor
pop
lds
daa
mov
fwait
sub
inc
jg
inc
cld
mov
push
repz
xchg
mov
cmp
dec
inc
sahf
inc
mov
sub
out
sbb
jg
cmp
icebp
push
push
or
mov
xor
ja
test
in
push
scas
xor
outsb
add
mov
mov
mov
mov
into
fwait
mov
fs
test
pop
insb
or
inc
out
cli
sbb
sub
call
out
std
lock
mov
xchg
jbe
lods
sbb
jns
cmp
loopne
add
fdivrl
int3
fsubl
test
push
cld
lret
call
ret
in
mov
repnz
sbb
ja
popa
jnp
insl
int
inc
arpl
call
xchg
adc
pushf
outsl
and
arpl
insl
xchg
lea
mov
and
mov
xor
popf
mov
stos
push
lahf
icebp
pop
cmp
or
pop
std
dec
fildl
pusha
jp
adc
in
jg
sub
dec
gs
sbb
mov
add
in
lods
cmp
adc
xor
cmpsl
push
subl
push
xchg
xchg
movsb
aam
cld
mov
stc
dec
jp
xor
push
aas
add
fyl2x
xchg
ds
mov
scas
leave
push
sub
fnstenv
iret
xor
sub
sub
mov
lcall
int
and
xchg
inc
dec
ss
shrb
repz
xchg
sub
adc
sub
imul
push
ffree
outsl
mov
xor
and
and
nop
add
imul
aam
lahf
lret
mov
sub
mov
push
loope
pop
stos
inc
jg
js
and
lods
inc
aaa
sbb
inc
xor
jecxz
and
test
jg
rcl
in
pop
rcrl
fists
jp
jnp
add
mov
cmc
inc
xchg
std
pop
scas
in
xor
mov
push
lret
ds
iret
or
lea
jge
jns
lahf
test
push
mov
addr16
ds
movsb
adc
out
adc
xor
mov
cltd
pop
xchg
fstl
add
pop
mov
dec
jge
mov
jg
shll
faddl
loopne
lcall
incl
cltd
mov
out
lods
cmp
minps
mov
movsb
jecxz
test
std
sbb
dec
add
jno
cld
adc
mov
lret
or
jae
or
mov
xchg
inc
inc
sub
and
adc
cld
cmpl
adc
dec
inc
mov
jmp
xchg
inc
xchg
aam
loope
gs
int
push
sub
ret
aad
and
jns
adc
xchg
jne
fwait
mov
pop
sbb
jbe
cmpsb
cld
mov
icebp
dec
repz
mov
pop
jns
fistpll
jecxz
sti
xchg
aam
int3
je
pop
or
lods
jl,pn
push
sbb
xchg
mull
lret
outsb
mov
push
dec
jbe
jle
push
pop
cmp
shrb
lret
sub
or
cmp
movsb
movsl
cmp
sbb
cmp
pop
inc
sahf
cmp
fbstp
das
mov
sub
aaa
pop
inc
inc
jg
mov
push
ret
mov
cmp
mov
or
je
cmp
rolb
cmp
pop
jge
sub
test
sti
jl
push
sbb
and
sarb
lahf
sbb
movsb
or
pushf
sbb
adc
cmc
es
int3
ret
xchg
jmp
mov
mov
incl
insl
bound
dec
xchg
mov
xor
int
mov
jmp
xchg
call
lret
xor
mov
pop
xchg
loope
inc
icebp
mov
push
pop
xchg
test
iret
cmp
or
in
fisubrl
pop
sbb
jo
pop
loopne
mov
call
gs
mov
mov
cmp
adc
filds
xor
in
mov
or
xchg
enter
jo
jp
imul
gs
mov
cld
inc
xchg
inc
xchg
sub
lds
and
outsl
sbb
sbb
jle
testl
sti
faddp
add
add
pop
popf
mov
inc
adc
stos
shll
sahf
movsl
add
stos
mov
idivl
add
mov
sub
pop
mov
fwait
pop
fldl
sbb
adc
out
shll
fsubrp
cmp
push
mov
xor
mov
pop
call
inc
imul
xchg
pop
stos
or
push
lods
fstpl
dec
mov
cmp
mov
xor
and
in
sub
cld
in
cmpsb
cmp
lret
inc
les
mov
pop
movsb
mov
mull
ja
xchg
push
notl
sub
push
pop
out
imull
adc
popa
xchg
sub
adc
lcall
iret
popl
or
xchg
sbb
flds
cmc
into
mov
mov
push
push
sarl
xor
ret
cwtl
add
dec
js
test
std
nop
inc
sbb
leave
daa
add
mov
lcall
sarb
ds
mov
xchg
cld
in
cmp
cmp
add
and
loope
lds
aas
and
jp
mov
dec
or
sahf
mov
add
std
outsb
sub
shlb
and
call
mov
jge
fnstsw
mulb
insb
mov
aad
mov
js
inc
cmp
xlat
fbstp
mov
push
mov
mov
lret
jno
cs
push
sub
jns
mov
xchg
sub
sbb
imul
out
jae
cmp
add
mov
aaa
xchg
jp
sbb
mov
cmp
mov
ljmp
fld
icebp
push
test
mov
xchg
push
fcomip
mov
test
mov
idivl
nop
mov
call
lret
push
imull
add
or
xchg
jle
inc
scas
xchg
jo
add
dec
leave
out
jo
and
pushf
inc
mov
popa
sbb
mov
sbb
pop
rcrl
insl
jno
fisttpll
lods
insb
outsl
scas
inc
mov
lods
insl
dec
fisubl
and
sbb
adc
repz
jmp
in
mov
call
mov
or
test
pop
pop
outsb
rcrb
das
inc
cmp
or
push
mov
stos
dec
daa
inc
push
push
jbe
pop
mov
sub
xchg
js
dec
out
pop
ror
jge
imul
fisubs
jge
rorl
cmp
jns
xor
push
fs
fstps
and
inc
in
xchg
jle
push
dec
inc
add
inc
mov
mov
cld
ret
jno
sub
xchg
xchg
push
cmp
ret
repnz
cmp
cld
mov
fistps
cmp
outsl
push
xchg
add
imul
adc
rcrb
mov
push
in
mov
sub
cltd
and
adc
mov
int3
and
call
shrb
adc
push
push
cwtl
mov
inc
jns
cmp
std
insb
sti
push
sti
jne
jae
out
xor
es
loope
fldenv
insb
negb
rdmsr
iret
sbb
push
in
ret
repz
and
pop
jbe
mov
data16
mov
jmp
dec
mov
lret
ja
push
jle
scas
lcall
mov
nop
shll
cld
sahf
cmp
or
push
mov
call
int3
lods
xchg
fmuls
push
mov
bound
pop
xchg
pusha
mov
pop
pop
xchg
outsb
sub
mov
sar
mov
hlt
inc
nop
sahf
cmp
arpl
into
mov
dec
sbb
xchg
pop
inc
test
in
test
push
inc
imul
pop
ljmp
or
imul
push
in
ja
adc
je
mov
jmp
enter
xchg
or
mov
pop
mov
fisubl
xor
rcl
jge
or
jns
stos
mov
rolb
test
xchg
pop
mov
add
es
test
add
pop
jb
sarb
and
inc
lea
vunpckhps
mov
xchg
and
sub
sbb
cmp
hlt
pop
mov
ret
imulb
daa
int
sbb
cmp
movsl
daa
add
jo
xor
gs
adc
rorl
enter
mov
in
pop
sub
lret
andb
or
mov
mov
dec
cltd
xchg
cltd
arpl
sub
pop
outsb
or
push
das
lahf
cmp
jmp
fstpt
mov
aas
adcb
mov
test
int
inc
cwtl
out
out
stos
sbb
test
aas
stc
std
push
push
jg
sbb
mov
fnstsw
in
loop
dec
pop
icebp
out
mov
stc
pop
add
and
mov
dec
xchg
ja
cmc
pcmpeqw
sahf
add
mov
xlat
mov
xor
inc
sub
aaa
aas
mov
test
test
push
test
add
fnstcw
mov
push
lret
cmpsb
mov
shlb
add
repz
movsl
xor
in
push
xor
sti
je
in
mov
adc
adc
pop
testb
pop
roll
fldt
inc
test
call
hlt
pop
or
dec
cmp
or
mov
push
mov
sub
dec
cld
push
in
jmp
dec
cmc
cmpsl
push
insb
sbb
push
aaa
jg
cmpsb
test
fisttps
imull
mov
jbe
mov
cmpsb
mov
mov
xor
out
loop
push
gs
ss
mov
push
rcr
test
or
jae
int3
out
and
jno
mov
addr16
icebp
push
incb
rcll
fisttps
scas
xchg
and
movsl
fbstp
data16
popl
ret
cltd
clc
fstpl
or
test
dec
js
loope
jp
mov
pushf
ror
inc
iret
loop
sbb
fisttps
popf
mov
mov
divl
push
lods
mov
rclb
mov
mov
call
aad
xor
rorl
ret
scas
data16
ret
ficomps
in
mov
es
jbe
loope
cmp
fidivrl
mov
sbb
pop
jmp
cmp
and
rcrl
hlt
stos
insb
and
jecxz
rolb
cwtl
ss
push
push
ljmp
dec
xchg
call
shll
pushf
nop
rcr
lock
and
int3
aas
out
mov
xorl
pop
mov
aaa
icebp
movsb
mov
jno
cmp
rclb
sbb
hlt
xchg
aas
or
push
loop
hlt
sub
xor
pop
or
xor
push
frstor
ds
add
inc
inc
aam
sti
mov
aam
cmpsl
stc
mov
and
ljmp
ret
dec
mov
int3
repnz
cmp
pushf
push
pop
lods
outsb
dec
jge
pop
cmp
xchg
cmpsb
movsb
push
cld
shr
fnstenv
mov
mov
dec
add
add
add
xchg
scas
push
add
inc
cld
cmp
mov
aad
ret
push
std
in
inc
mov
inc
xchg
imul
cmpsb
adc
sub
mov
icebp
mov
aas
out
or
movsb
jl
mov
and
jnp
ds
push
fldt
adc
icebp
or
mov
imul
cmc
mov
cmp
repnz
movsb
or
sahf
and
aas
pusha
sbb
arpl
gs
jns
mov
cmpl
fwait
mov
mov
ss
pushf
or
pushf
lods
arpl
jae
clc
adc
mov
sub
inc
cmc
push
add
stc
add
and
loopne
imul
mov
inc
xchg
into
ret
popa
pusha
inc
push
sbb
stc
scas
sbb
pop
aad
sbbl
aad
sbb
or
or
bnd
add
orl
lahf
push
jae
stos
pop
xlat
and
fiadds
dec
inc
mov
push
adc
mov
cld
notl
push
js
dec
leave
inc
shlb
or
shr
addb
and
mov
sbb
mov
loope
sahf
repz
lods
dec
test
fdivs
cli
xchg
mov
lods
aam
mov
and
lods
shll
dec
adc
mov
loopne
addr16
bound
adc
sbbb
mov
or
out
xor
popf
pop
push
in
shrb
add
ss
ffree
fnstenv
insb
gs
dec
dec
shlb
cmp
cmp
mov
das
es
clc
add
or
test
and
cmp
inc
mov
hlt
aaa
mov
or
movsl
dec
pushf
sbb
loope
arpl
loopne
dec
and
mov
dec
inc
add
or
xchg
pop
or
andb
mov
adc
sub
xor
or
mov
mov
sarl
jl
push
ds
mov
mov
mov
xor
fldcw
repz
cwtl
or
xor
inc
xor
fcom
mov
mov
cmp
in
dec
xor
pop
xchg
aas
cmp
out
add
jo
adc
inc
ss
xor
push
xor
lock
xor
inc
std
inc
dec
adc
or
pop
pop
inc
push
cmp
jnp
jnp
lcall
push
out
cltd
call
mov
loope
daa
jle
push
scas
inc
inc
push
fbstp
rcll
pop
pop
push
and
xchg
pushf
and
addr16
test
es
push
xchg
pop
in
cmp
out
imulb
leave
int3
mov
enter
jmp
xor
and
insl
stos
add
pop
movsl
mov
not
cld
bound
xchg
add
add
dec
dec
nop
add
inc
outsl
jns
incb
dec
shlb
sti
data16
out
fwait
imul
in
pop
ljmp
bound
jge
mov
arpl
test
mov
sahf
sub
out
cld
lcall
icebp
sti
mov
mov
pop
divb
mov
call
inc
xor
outsl
and
mov
xor
test
jo
clc
push
sbb
faddl
movsl
mov
cmp
subl
jb
mov
pop
sahf
mov
outsb
not
or
add
xor
lods
cmp
push
mov
std
mov
dec
sarb
sub
jo
and
out
cltd
cmp
shll
adc
std
test
xchg
test
add
lods
icebp
xor
or
xlat
fsubr
xchg
sub
mov
push
sbb
pusha
sub
loopne
jle
clc
aas
rolb
testb
add
dec
dec
cwtl
jns
mov
pop
xchg
loopne
sbb
and
push
sbb
aad
push
cld
sbb
pop
adc
adc
or
aas
mov
lcall
sub
scas
sub
jo
xor
out
pop
and
or
inc
leave
cmp
sub
outsl
fnstsw
bound
daa
repnz
mov
add
cmpsb
sbb
add
iret
scas
inc
jbe
icebp
jl
inc
mov
fisttpll
dec
pop
xchg
mov
ljmp
lock
in
int3
cwtl
sub
or
and
stos
add
xchg
xchg
in
add
dec
and
push
sbb
call
enter
push
fwait
sub
repz
xchg
jnp
mov
push
dec
out
xchg
xorl
xchg
xchg
mov
xchg
jmp
cwtl
xchg
xor
dec
xrelease
hlt
out
inc
cmc
inc
mov
adc
dec
vmaxss
adcl
repz
cmpsb
push
rolb
inc
cmp
in
sbb
inc
sub
add
dec
sub
fcomps
and
mov
shrb
xorl
aas
in
js
push
popf
mov
lret
test
sarb
ficoml
and
and
adcb
jnp
push
shrl
cmp
jae
cmpsb
shl
pop
pop
inc
cs
ja
test
cmp
xchg
shll
repnz
hlt
mov
dec
adc
mov
cmp
ret
je
sub
cwtl
int3
rcll
inc
sbb
ret
adc
aas
lods
mov
jge
mov
mov
cmpsb
add
cld
fstpl
pushf
mov
insl
lods
mov
out
push
mov
addr16
fs
pop
fsubs
mov
stc
pminub
jns
loopne
mov
in
jle
addb
mov
mov
cmpsl
aaa
pusha
adc
mov
cld
jae
arpl
xchg
xor
cwtl
inc
inc
int
dec
push
and
test
dec
mov
daa
cli
xlat
cs
movb
mov
jl
cld
mov
lcall
lret
xor
test
xchg
movb
ret
not
add
idiv
jle
scas
repz
out
nop
std
jne
mov
xor
movsl
inc
imul
adc
mov
and
add
in
faddl
or
push
fcmovbe
aas
pop
repnz
sbb
pop
cmc
push
bnd
sub
rcll
aaa
adc
push
cld
pop
cmpsl
xlat
dec
xor
ss
insl
ja
xchg
push
cltd
jecxz
dec
xchg
sub
repz
mov
int3
mov
mov
test
sub
or
sarl
andl
adc
push
dec
loope
in
je
add
pop
dec
mov
xchg
mov
int
mov
clc
and
pop
xchg
lahf
pushf
add
test
ret
add
stos
mov
cmp
push
repz
dec
dec
lret
add
jg
repz
add
xor
inc
inc
mov
or
das
pop
loope
push
sub
xchg
shl
fcmovb
pop
push
jno
in
push
pop
or
movl
cmp
mov
push
shrl
pushf
and
cs
call
mov
imul
mov
jl
dec
std
shrl
je
cmc
lret
cltd
dec
sti
xchg
jo
pushf
mov
lret
aaa
sub
mov
loop
and
pop
add
in
test
cmpb
fadds
add
jg
lods
xor
idivl
mov
sub
les
xor
add
push
icebp
jge
or
daa
sbb
jo
ficomps
adc
inc
movsl
clc
rcl
mov
mov
ret
mov
add
cmp
arpl
push
adc
mov
mov
xchg
inc
ret
adc
xor
cltd
and
jnp
insl
stos
jle
bound
mov
xchg
or
push
jae
pop
mov
dec
bound
inc
fbld
xchg
out
inc
out
repz
jmp
std
mov
pop
in
pusha
in
aam
popa
mov
sbb
xor
stos
aas
outsb
jnp
cmp
addr16
mov
mov
pop
lret
add
cmp
xchg
push
ljmp
jl
lret
sti
dec
add
mov
mov
mov
pop
cld
adc
push
sbb
jne
imul
and
mov
hlt
push
push
gs
adcl
cmpsl
fists
enter
xor
ss
sbb
orl
and
push
or
sarb
mov
lea
xchg
rol
mov
jne
insl
rorb
mov
test
jns
mov
in
clc
and
mov
sbb
mov
mov
repnz
cltd
adc
ljmp
arpl
scas
mov
jb
and
dec
adc
int
dec
dec
push
imul
mov
add
lret
xchg
ja
shl
fcmovb
out
adc
call
cmp
call
or
test
xchg
sti
jmp
mov
sub
out
adc
insl
cmpsl
inc
out
iret
xchg
push
push
mov
daa
mov
daa
inc
mov
mov
mov
adc
loope
sbb
lods
sub
out
jno
cmpsl
call
fs
imul
loopne
mov
imul
mov
lahf
pop
push
popf
lea
mov
into
fcmovb
in
mov
aas
xchg
cmpsb
xchg
push
mov
jl
scas
dec
mov
rep
rol
lods
hlt
fwait
adc
mov
ja
cwtl
mov
dec
inc
add
repz
sub
xor
jmp
lds
jo
dec
xor
lcall
addr16
jae
out
aas
sbb
ljmp
sbb
or
cli
xchg
pop
jns
aaa
push
sub
clc
jecxz
mov
stos
cmp
push
fnstcw
push
push
xor
lahf
shll
adc
in
in
mov
das
rcll
push
add
scas
push
rcll
push
jne
test
jno
fdivl
pop
ret
popa
jne
in
mov
sbb
lea
lds
mov
or
dec
cli
mov
lcall
jmp
into
mov
movl
or
fistpl
stos
jmp
push
rol
cmovno
pop
or
pop
add
push
sub
sub
pop
inc
xlat
pop
inc
and
pop
call
jg
adc
test
jge
xchg
mov
and
gs
sbb
push
mov
subl
dec
cltd
ret
jne
cwtl
and
xchg
or
adc
push
cli
ret
loopne
xor
dec
jecxz
xchg
test
pop
jp
adc
xchg
inc
jmp
lcall
popa
jno
pop
rolb
mov
clc
scas
movsl
add
xchg
in
cs
xor
std
sub
push
dec
adc
xchg
gs
push
mov
cmpl
sbb
mov
lods
jnp
dec
mov
dec
mov
sbb
daa
mov
orl
adc
pusha
xchg
enter
popa
pop
jns
sahf
jo
gs
aad
out
pop
and
pop
idivl
outsb
jnp
xor
popa
out
fisubrl
and
cmpsb
cmp
pop
jmp
leave
push
sahf
cmp
or
mov
int
pop
stos
mov
mov
add
mov
add
or
gs
cmp
xor
mov
shll
into
ret
imul
sbb
scas
inc
clc
pop
test
popf
lds
or
jg
test
push
hlt
jnp
jge
lds
or
cwtl
xchg
int3
into
dec
and
movsl
fsubp
mov
notl
pop
pop
cmp
sub
jmp
push
into
and
mov
enter
insb
dec
roll
repz
xchg
adc
mov
fstpl
xor
popa
jecxz
fsubl
mov
inc
adc
and
leave
cmp
add
mov
imul
jnp
or
inc
jb
in
adc
jbe
das
mov
shl
int3
push
dec
daa
repz
add
dec
lds
pop
jmp
mov
xor
ret
adc
mov
jmp
push
movsb
jne
pop
sarb
add
adc
sub
ret
fildll
pop
inc
or
xlat
bound
inc
sub
mov
sbb
sub
ss
xlat
cmp
imul
sbb
push
pop
scas
out
call
lock
sbbb
dec
cmp
les
ret
xor
cwtl
mov
clc
pushf
cli
sub
cmp
addr16
sbbb
ret
scas
push
call
inc
out
xor
or
sub
mov
inc
mov
dec
pop
lret
loopne
es
jle
fwait
sbb
dec
pop
insb
rcrl
lods
xchg
imull
sub
mov
cltd
mov
in
or
bound
xor
mov
pop
fcomps
in
mov
add
push
xlat
add
pop
mov
fisttpl
inc
pop
sub
pop
loop
movsl
popl
jecxz
pop
lea
pop
push
or
popa
adc
and
out
insb
in
popl
or
jns
out
frstor
push
xor
or
xchg
mov
movsl
lods
sbb
xlat
push
test
inc
cld
push
inc
jmp
add
push
cmpsb
fneni(8087
bound
lret
fucomip
jle
adc
mov
sub
cmp
adc
mov
push
sbb
ljmp
mov
xor
add
lods
xchg
sub
mov
or
cli
insl
xchg
jo
add
sbb
jmp
xchg
int
mov
ret
imul
clc
inc
lea
lret
jecxz
pusha
cli
cli
cs
daa
jge
sbb
pop
loopne
les
lods
xlat
fldl
shll
das
cltd
add
mov
jmp
cli
ret
cld
mov
or
mov
push
in
push
jns
int
lret
mov
jns
pop
jge
inc
mov
nop
outsb
nop
lcall
mov
dec
rcr
jo
addr16
enter
cltd
stos
xlat
sbb
pop
push
inc
pop
lahf
cmpsl
ljmp
or
dec
punpckldq
insb
repz
xorb
data16
dec
popf
lahf
sub
push
mov
frstor
imul
xor
pop
jnp
pop
push
mov
xlat
jg
lds
sbb
andl
stc
ljmp
sub
push
adc
mov
stos
leave
dec
mov
popf
ss
xchg
adc
shl
call
xor
dec
call
data16
ds
adc
lods
mov
mov
or
icebp
xchg
ljmp
addr16
pop
jo
cmp
pop
ret
mov
lret
or
cltd
xor
xchg
xchg
stos
orl
push
cmp
scas
mov
cmp
mov
pusha
push
lret
in
clc
or
pop
mov
cld
cltd
mov
jmp
inc
pop
push
fdivl
push
sbb
or
push
cmp
out
jae
lock
out
pop
sbb
lods
aas
sbb
mov
in
cmp
mov
pop
enter
dec
fnsave
fisubs
xor
mov
lea
rcrl
xchg
frstor
push
push
add
mov
push
add
lea
stos
scas
xchg
aaa
outsl
jecxz
out
sub
repnz
xlat
xchg
popl
and
mov
inc
shll
jg
outsb
push
adc
pop
xchg
pop
jmp
xchg
add
faddl
incb
out
mov
jno
add
nop
test
xlat
cmp
xchg
fcmovb
jecxz
loopne
mov
push
xchg
ret
mov
mov
mov
jne
adc
cmp
sub
xchg
out
mov
add
lret
andl
mov
fbstp
rorl
or
push
pop
rol
cmp
xchg
xchg
jnp
mov
stc
mov
pop
jg
movntps
jp
ja
xorb
pop
test
pop
and
jge
insb
stc
pushf
push
movsb
xlat
xchg
aaa
fistpl
push
xchg
cmp
pop
mov
rolb
int3
aas
sbb
outsb
mov
mov
sub
mov
lahf
addb
js
dec
pop
test
popa
dec
icebp
adc
pop
mov
cmp
enter
sar
cmpsl
adc
incl
adc
push
mov
hlt
sahf
push
mov
push
and
loope
push
outsl
jbe
sub
pusha
jg
notb
dec
mov
dec
sbb
sbb
xor
inc
js
mov
clc
mov
imul
dec
lock
push
movsl
into
pushf
jnp
mov
xchg
mov
out
imul
out
add
adc
cmpsb
sahf
fs
dec
jno
in
push
or
xchg
lret
dec
jo
mov
or
data16
and
les
xor
jnp
cs
shll
mov
roll
popf
pop
jp
shll
xor
call
cwtl
cs
adc
pusha
pop
sub
or
imul
loop
loop
xchg
je
xchg
outsb
jg
dec
leave
out
xchg
push
mov
ss
adc
cmc
inc
cmp
sub
je
pusha
inc
scas
inc
shll
mov
sub
add
sbb
aaa
xchg
out
mov
inc
xchg
lcall
pop
pop
jo
hlt
push
outsb
pop
pop
cmp
int3
ret
sbb
jp
adc
sbb
out
vpaddd
sbbb
iret
jae,pn
sub
clc
jecxz,pt
movsb
fists
insl
std
adc
nop
shl
pop
inc
movsl
xchg
xchg
add
jl
jns,pt
into
or
pop
cmpl
push
fidivrs
push
adc
mov
or
fwait
imul
pusha
in
sub
nop
sbb
cmp
jmp
cmp
adc
pop
sub
dec
inc
jle
push
or
mov
add
fldl
loope
push
rorl
xor
out
mov
inc
in
xor
xor
cli
ljmp
insl
test
mov
pop
add
movsl
xchg
pop
dec
sbb
insl
ret
ds
jne
out
sbb
rol
js
nop
adc
insl
push
mov
pop
lret
cmp
aaa
xor
xor
std
mov
or
lock
stc
stos
cmpsl
call
xor
jge
push
mov
mov
and
orb
cli
into
mov
imul
es
lret
inc
jno
out
cmp
cmp
pop
inc
faddl
adc
push
js
mov
inc
sbbb
push
jbe
lock
insb
cmpsl
das
or
std
jbe
or
push
psubsw
cwtl
sbb
mov
or
pushf
xchg
addr16
xcrypt-cfb
cmpsl
mov
sub
adc
cld
arpl
xor
mov
gs
jns
inc
dec
int
sub
push
inc
jae
insl
decb
loopne
jo
jnp
mov
mov
mov
cmp
adc
fs
jno
adc
mov
shll
jge
jns
gs
popa
test
sbb
jle
cmp
clc
lahf
lods
sahf
cmp
mov
js
mov
push
cmp
test
outsb
not
push
xor
mov
ss
roll
movsl
js
pop
sahf
push
lret
xor
loope
or
pop
cmpsb
aas
das
jnp
filds
xchg
mov
inc
gs
icebp
xor
test
movsb
pop
jle
and
test
jnp
pop
jg
xchg
out
ljmp
and
out
mov
adc
pop
jg
pop
adc
push
popl
mov
sbb
out
cld
aas
adc
test
adc
sub
mov
sbb
loope
sbb
sub
enter
es
mov
imul
fiadds
shl
jmp
rep
lea
jl
xor
sub
ss
aas
dec
mov
push
inc
cmp
push
xor
scas
mov
aam
mov
lahf
mov
rcll
sbbl
mov
push
nop
jae
pop
mov
out
sbb
mov
ja
cmp
adc
stc
test
push
repz
es
adc
adc
scas
mov
insb
inc
imull
sub
repnz
mov
xchg
stos
fnstsw
clc
dec
rcll
sbb
cmp
int
inc
mov
sbb
outsl
jbe
pop
xor
in
addr16
sbb
adc
mul
push
int
pop
xor
cmp
insb
popa
jb
sti
ljmp
push
and
xchg
mov
in
cmp
xchg
les
mov
pop
hlt
jbe
ror
loopne
andnps
daa
shrl
sbb
insl
sub
cmp
xchg
mov
loopne
movsb
push
xlat
lret
dec
or
adc
push
dec
sub
jb
xorl
cmpsl
pop
lcall
rcrb
push
imul
pop
fadds
xchg
mov
loopne
imul
jp
sti
or
mov
test
jecxz
and
ljmp
adc
test
sbb
out
xor
sub
jno
jne
pop
add
xchg
popf
mov
in
xchg
and
push
or
loope
arpl
jge
xchg
xchg
mov
xchg
mov
sti
add
push
cmp
add
or
inc
addr16
fidivs
ds
in
mov
sub
pusha
and
pop
xlat
add
or
mov
loop
jl
movsb
add
movsl
xor
pop
fcoms
or
and
push
add
sbb
adc
pop
mov
pause
adc
mov
mov
xor
sub
shrb
pop
or
add
aas
mov
clc
aad
lret
xor
pusha
or
bnd
addb
data16
cld
add
mov
push
adc
into
and
xor
test
into
and
mov
es
sub
lds
mov
js
mov
cld
icebp
adc
jns
fisttps
popa
or
push
repnz
icebp
stc
mov
and
jecxz
jbe
mov
sbb
shrl
cmc
pop
rcrb
dec
push
mov
lahf
xchg
ja
and
std
mov
mov
jl
int3
cmpsb
incb
pop
mov
or
frstpm(287
jge
clc
adc
adc
and
test
pop
mov
cmp
dec
mov
out
jbe
adc
repnz
sbb
push
sahf
in
push
jne
pushf
xor
xchg
mov
inc
mov
hlt
cmp
sahf
into
dec
mov
lods
inc
mov
jl
sub
adc
movsl
pop
cmpsl
mov
gs
mov
repz
aam
gs
pop
xchg
inc
xchg
les
mov
or
or
scas
adc
lock
std
nop
decl
push
pop
movsb
loop
mov
inc
push
mov
push
jle
pushf
sbb
adc
pushf
aas
testl
jb
lock
lcall
jb
test
add
rolb
insb
cld
dec
sbb
pop
push
ja
fimuls
hlt
adc
popf
ja
and
test
test
xorb
adc
shrl
repnz
mov
mov
test
sbb
lret
cltd
mov
inc
fwait
push
jb
inc
stos
push
mov
fbld
or
std
push
adc
or
push
mov
outsb
push
dec
add
or
sbb
lea
cmp
add
inc
int3
mov
ds
inc
jmp
cwtl
pop
outsb
push
cltd
jmp
and
pop
int3
leave
clc
cmc
call
ret
test
stos
lret
mov
incl
test
push
mov
gs
repz
inc
addr16
add
jno
pop
cwtl
ds
daa
add
jne
dec
xchg
push
and
mov
mov
xchg
imul
mov
out
mov
jno
jns
rorb
ficoml
out
xor
mov
ret
xchg
cmp
xchg
stos
aad
mov
mov
mov
mov
aas
pop
pop
mov
out
ret
arpl
out
jne
xor
repnz
pusha
ljmp
sbb
and
insl
call
push
push
loope
and
push
push
std
mov
mov
out
insl
pop
dec
mov
xor
movsl
lcall
cmp
cmc
adc
jne,pn
dec
and
pop
push
sub
cltd
sahf
pusha
imul
add
test
mov
mov
add
jns
pop
pop
iret
push
lea
and
adc
out
inc
or
xchg
leave
jge
stos
sbb
into
ds
out
mov
test
or
ret
in
enter
or
jge
mov
cmpsl
jge
and
jle
js
cltd
push
div
and
data16
addr16
and
jecxz
xchg
loope
jp
xchg
cltd
popw
loope
cs
push
add
leave
out
test
sub
pop
std
cli
mov
xchg
out
sub
dec
in
clc
in
mov
imull
jbe
push
mov
lret
and
outsb
aam
cmp
pushf
cmpsl
jmp
loop
repnz
xor
adc
addr16
inc
in
out
xchg
jb
std
sub
dec
or
movsl
add
mov
and
cmp
popf
arpl
into
mov
xchg
cs
ret
lds
aas
jnp
inc
pop
jecxz
pushw
cmp
cs
leave
fldl
testb
cmp
aam
mov
andb
movsb
xchg
lea
nop
adc
push
test
push
pop
jle
es
jle
iret
js
aaa
loopne
inc
jg
pop
std
cmp
out
push
lret
and
mov
or
push
push
outsb
ja
sub
test
in
fiaddl
subb
mov
insb
sbb
jae
inc
movsl
cmp
push
xor
mov
sub
lret
and
lahf
sti
shrl
insl
mov
int
push
mov
scas
mov
sub
and
stos
add
out
stos
jmp
xlat
inc
faddl
xorl
mov
mov
xchg
pop
jmp
stc
rolb
outsl
pop
mov
mov
dec
clc
xchg
stos
enter
stos
mov
xchg
out
dec
adc
mov
cmp
adc
sbb
cmc
aad
lds
inc
ret
aad
cld
add
fdivs
scas
pop
mov
out
lea
out
cmpsl
sub
add
test
popa
cld
jg
movntps
imul
cwtl
adc
push
sbb
cmp
insb
imul
push
fucom
divb
test
notl
cmp
outsl
jmp
adc
aam
inc
inc
push
and
sbb
rcll
outsl
push
test
std
ret
add
push
sbb
pusha
lods
lret
jg
dec
rolb
out
les
jmp
arpl
pop
dec
fnsave
xchg
or
mov
out
pop
add
dec
pushf
push
inc
test
sar
iret
fiaddl
in
jg
add
test
aas
dec
cmp
pop
mov
data16
xor
adc
enter
xchg
fnstsw
sahf
std
testb
jle
ljmp
mov
aas
int3
dec
mov
jnp
and
pop
mov
in
rcrb
xor
mov
ret
pop
inc
leave
stc
movsb
popa
sar
neg
adc
ja
mov
rcrb
xchg
jg
adc
xor
dec
and
out
ret
sub
fsubrl
push
sbb
outsl
or
xchg
fstl
imul
jo
mov
icebp
lret
nop
jbe
push
ret
je
and
dec
push
xchg
dec
sbb
xor
pop
lret
leave
push
gs
iret
out
and
das
loopne
repz
push
sbb
ds
inc
pop
or
mov
add
loop
xor
in
mov
in
sbb
ficomps
cwtl
idivb
cwtl
fistl
loopne
and
pop
jge
outsl
mov
repz
sar
dec
add
xchg
and
ljmp
sbb
icebp
mov
ss
jle
repnz
mov
aam
iret
insb
stos
cltd
mov
and
ss
sbb
mov
adc
rcrb
jecxz
xchg
mov
cmpsl
mov
jle
sub
dec
mov
das
push
jecxz
shll
lea
int
rcll
clc
mov
pop
test
xor
xlat
hlt
xor
cs
adc
adc
jae
int3
call
dec
test
fimull
aas
shrl
add
and
call
lods
imull
sub
inc
jmp
sbb
mov
and
jmp
test
mov
mov
push
mov
daa
insb
icebp
and
mov
push
out
mov
sub
add
adc
test
outsb
xlat
cmp
popf
push
je
sub
sub
clc
ss
fwait
in
xchg
stos
push
sbb
ss
dec
pop
cmp
aad
inc
call
jmp
aam
inc
negb
es
sbb
pop
enter
sub
mov
mov
inc
outsl
repnz
rcll
adc
sbb
inc
stos
faddl
sarl
insb
mov
fwait
lret
js
dec
mov
negl
mov
adc
dec
pop
test
pop
test
lods
adc
inc
jge
pop
mov
adc
push
dec
xlat
jp
mov
push
js
pop
inc
xorl
cld
js
push
adc
inc
xchg
jl
inc
sti
pop
push
mov
mov
es
jns
push
mov
push
adc
xor
pushf
lods
int3
ret
test
jae,pt
int3
rclb
adc
loope
in
jg
xor
iret
std
cltd
dec
sub
les
aad
call
movsl
mov
out
mov
cmp
and
cmp
xor
movsb
int
sbb
jo
or
add
int
adc
inc
or
cmp
pop
rol
jg
mov
lea
pop
xor
inc
repnz
ss
fidivrs
adc
inc
push
cld
mov
in
rcrl
ret
aad
cmp
ljmp
or
mov
fdivrl
mov
in
mov
inc
leave
mov
int3
and
jmp
out
js
imul
mov
loop
into
xchg
arpl
data16
in
inc
mov
rorl
mov
mov
pop
test
imul
xchg
inc
or
mov
dec
aam
movsl
in
inc
mov
ja
add
push
sub
mov
outsl
mov
and
mov
push
test
dec
jbe
jmp
daa
cmp
mov
or
or
cmp
mov
dec
pushf
cmpb
mov
ret
jae
mov
push
je
jg
push
dec
lods
cwtl
daa
daa
xor
fcmovbe
cmp
std
inc
xor
mov
pop
pop
pop
shrb
lods
push
in
in
inc
test
fdivl
push
sub
out
shrb
scas
into
pop
test
or
add
es
xor
subb
andl
jl
int3
fisubs
jb
movl
aam
insb
dec
leave
aaa
outsl
repnz
mov
jp
mov
fisubrs
popa
mov
ja
xor
mov
push
dec
xor
ja
xchg
popa
add
push
je
stc
mov
inc
out
xor
xor
and
mov
mov
cmc
fistl
mov
dec
gs
jno
iret
add
repz
in
pop
nop
sbb
imul
push
fs
mov
mov
mov
adc
mov
movsl
fsubrs
fwait
mov
and
fdivp
aam
or
lcall
pop
pop
dec
sbb
xor
decl
fisubrl
push
cmp
cli
or
out
jno
dec
and
or
inc
xor
pop
pop
pop
xor
lock
icebp
or
stc
leave
inc
arpl
pop
scas
pop
add
pop
pop
xor
jae
jg
mov
loop
test
insl
xchg
movsb
insl
addr16
mov
mov
aaa
cwtl
notl
fs
ja
pusha
push
pushl
pusha
inc
jmp
push
cmp
and
bound
mov
iret
hlt
rorl
dec
lea
inc
add
push
xor
sahf
mov
or
sub
sbbb
dec
pop
adc
je
cwtl
push
sub
inc
push
notl
mov
pop
xor
push
sbb
dec
pop
lock
outsl
push
mov
test
mov
adc
ffree
scas
fld1
loop
jl
les
push
popa
mov
xchg
pop
nop
sarl
mov
ss
sti
repz
add
sub
popa
scas
sub
xchg
test
notb
push
aaa
call
pop
add
clc
xor
xchg
mov
sub
call
pop
xlat
data16
or
or
add
cmpsb
adc
mov
xchg
push
fstps
pop
jecxz
pop
fdivrs
movsl
rclb
jne
jae
jmp
aam
dec
sbb
mov
add
jb
cmovle
lret
dec
jp
pop
mov
push
js
mov
mov
push
dec
vmovdqu
jle
mov
clc
test
sub
out
shll
add
sbb
adc
mov
loopne
daa
xchg
lret
out
xor
rcrl
mov
mov
xor
into
mov
insl
aam
jbe
psrlq
xor
xchg
sbb
mov
jnp
mov
inc
insl
sarl
jp
mov
mov
xor
xchg
int
pop
lock
sbbb
mov
sbb
mov
imul
or
aam
and
imul
inc
xor
or
adc
pop
rcr
gs
lods
in
mov
adc
sub
xor
imul
mov
sti
sbb
jno
int3
inc
jp
aad
cmpsb
mov
jne
xor
outsb
lcall
inc
loopne
xor
mov
push
inc
stos
mov
out
mull
test
int
pop
mov
jecxz
clc
push
cmp
mov
ret
das
inc
imul
and
adc
mov
call
lock
aad
xchg
cmp
pushf
sub
adc
adc
inc
iret
popa
popf
fwait
push
xchg
jge
xchg
ds
xor
cmc
dec
jl
test
xor
sahf
dec
xchg
push
in
inc
jmp
fsubrp
setbe
xchg
or
test
stc
test
scas
cmpsl
out
in
jnp
icebp
push
or
jmp
sbb
cli
out
loop
fs
inc
out
lds
aam
aas
ja
mov
daa
and
xor
addr16
out
inc
push
daa
push
add
dec
xchg
lds
lcall
inc
nop
push
jecxz
jbe
jb
into
cmp
and
or
das
xlat
and
mov
subb
lods
or
out
and
das
fisubrs
bound
cld
mov
lds
adc
lret
cmp
movsb
cmovle
pop
sub
push
inc
mov
cmpl
test
jo
push
dec
roll
xchg
out
iret
sub
je
sbb
mov
inc
sub
ret
imul
clc
or
shrl
in
stos
dec
jno
rcll
push
sub
rcll
jmp
lcall
mov
movsb
push
decb
daa
call
fadd
mov
add
imul
pop
mov
mov
addr16
nop
mov
and
rorl
push
lea
push
inc
xchg
daa
mov
call
outsl
xchg
pop
lods
mov
inc
xchg
dec
xchg
push
decb
adc
mov
jbe
and
add
pop
add
loopne
aaa
outsb
mov
test
cmpsl
in
mov
std
leave
jecxz
or
ss
lock
or
scas
mov
mov
fisttpl
mull
xchg
je
bnd
pop
adc
sbb
jmp
mov
ljmp
mov
push
mov
ret
pop
aam
add
cmc
in
mov
add
mov
lds
jl
inc
push
xchg
jp
inc
pop
out
jp
subb
mov
fs
sti
jecxz
inc
sub
inc
dec
out
and
mov
mov
outsl
orb
adc
push
loopne
mov
push
pusha
stos
add
sbb
imul
jo
insl
stc
xchg
mov
into
out
xchg
jb
dec
arpl
jle
cli
mov
push
mov
push
cmpsb
repnz
push
shlb
stc
adc
push
xchg
imul
dec
loopne
ret
stos
std
jg
or
sbb
outsl
jbe
dec
clc
inc
jmp
lcall
inc
cmp
addr16
push
repnz
fstpl
mov
mov
movsb
out
inc
ss
sbb
icebp
subb
insl
fsubr
mov
aam
dec
inc
imul
xchg
mov
add
fsubs
mov
pop
xor
adc
sbb
in
fwait
cmp
push
jl
mov
jno
adc
jo
adc
dec
daa
mov
pop
loop
jne
cmp
loope
in
jge
int3
add
addr16
mov
jecxz
sarl
dec
movsl
call
xor
push
mov
mov
cmpsl
dec
xlat
outsb
lods
dec
ljmp
dec
popa
repnz
adc
push
loop
push
cwtl
sbb
stos
mov
xchg
mov
pop
test
imul
jge
sbb
fcoms
popfw
data16
insb
cld
cmp
xor
adc
xchg
sbb
pop
in
in
dec
divl
sbb
mov
adc
test
add
pop
xchg
aas
jl
ficompl
sbb
sub
mov
dec
jl
xlat
out
push
mov
jmp
hlt
or
aam
xchg
subl
roll
sub
imul
push
es
cmp
sbb
rolb
push
push
test
lcall
fildll
jnp
fdivp
fwait
lock
lods
pop
imull
into
sbb
lods
sub
push
fisttpl
pushf
out
in
dec
leave
mov
add
add
mov
dec
pop
jno
js
sub
cmp
and
insl
subb
mov
fs
mov
mov
cmp
fisubs
or
sbb
xchg
out
xchg
mov
aad
xor
sub
sbb
mov
dec
jo
rcl
mov
mov
jge
daa
pop
out
mov
sti
cmc
jg
jle
dec
xchg
stos
pushf
and
addr16
insl
icebp
les
cltd
scas
push
pop
js
js
ret
mov
popf
aad
adc
push
mov
cmp
adc
pop
pushf
jl
aas
movsb
cld
adc
repnz
sub
adc
addr16
inc
and
pop
mov
lea
pop
pop
mov
out
int
js
lret
scas
lds
pop
inc
inc
sahf
pusha
insb
imul
sbb
lods
jae
ljmp
add
jnp
fimull
push
ss
or
hlt
stos
cmp
aam
add
mov
clc
scas
push
add
imul
or
inc
addb
cmp
dec
inc
xchg
xchg
or
push
popf
in
sub
inc
pop
push
rolb
or
inc
cmp
ja
push
xor
adc
mov
rol
pmovmskb
shlb
out
jns
add
xchg
cmpsl
pop
or
pop
sub
inc
xchg
hlt
lret
sbb
jmp
cmp
inc
jmp
fwait
add
ds
je
sub
mov
icebp
ret
jmp
lret
loope
rcll
stc
addr16
pop
sub
sbb
test
js
out
mov
and
sub
movsl
mov
cld
mov
pusha
mov
xchg
push
xchg
icebp
pushf
mov
add
stos
xchg
mov
cmp
fstpt
push
sbb
add
cmpl
cli
rol
or
in
loop
pop
fidivs
mov
hlt
loope
pop
add
subb
mov
sbb
shrl
sub
fcomip
inc
lock
dec
out
bound
ja
repz
xor
int
pop
xor
mov
lods
and
dec
or
fisttpll
pop
jge
mov
lea
or
out
mov
leave
fst
xor
sbb
cmpsb
xchg
sub
ss
jnp
imul
pop
test
or
mov
cltd
imul
dec
fnsave
jmp
push
xor
jne
cmp
push
inc
pop
inc
js
xchg
mov
sbb
pop
and
out
cmp
xor
pusha
mov
xchg
ss
outsl
adc
imul
aas
insb
scas
test
outsb
fcoml
cmpb
push
push
adc
test
xor
lcall
ret
sbb
mov
sbb
jnp
adc
sbb
xchg
sub
push
mov
lret
and
dec
pop
mov
cs
mov
jno
push
out
inc
mov
xor
sarl
pop
stos
sbb
je,pn
pop
adc
test
cmp
jno
roll
lods
push
imul
sbb
inc
xor
jae
lahf
les
nop
aam
inc
test
sub
rorb
call
enter
inc
divb
xchg
in
ja
dec
inc
xor
rsm
aam
out
aas
aam
iret
mov
pusha
sbb
push
dec
dec
and
sahf
iret
push
jl
mov
dec
dec
leave
lahf
and
pusha
imul
shrb
fcoml
clc
negl
xchg
das
cmp
jecxz
jo
cli
les
push
out
add
leave
jg
push
push
or
fadds
aad
cmp
inc
pop
adc
hlt
call
cltd
push
pop
imul
popa
or
sub
ret
mov
and
jno
and
jmp
aaa
jno
scas
lods
adc
out
lods
nop
adc
ret
fsubrp
inc
xchg
loope
push
mov
mov
push
dec
push
lcall
sub
adc
mov
sub
fwait
xchg
iret
jg
negb
insl
lods
mov
xor
inc
xor
ljmp
scas
push
ret
jge
lods
movsb
jns
lret
lret
gs
into
dec
repz
dec
push
add
cmpsl
pop
cmp
in
xor
arpl
mov
ljmp
xchg
mov
sbb
xor
ss
push
insb
cmp
and
cmpsl
xchg
loop
lgs
insb
adc
push
sbb
pop
test
jle
sbb
cs
clc
and
pop
mov
mov
push
xor
add
inc
ret
xchg
xor
jmp
call
and
std
adc
cmpsb
dec
enter
sbb
jle
adc
lret
enter
mov
fwait
mov
loope
int3
dec
jno
sub
pop
or
dec
sbb
rorl
push
cmpsb
and
xor
inc
adc
cmc
jp
jp
sbb
movsl
fdivl
mov
insb
dec
push
and
cmp
inc
pop
pop
ja
or
pop
and
jns
pop
mov
and
mov
out
sbb
mov
jp
pusha
call
and
jge
adc
adc
popa
out
mov
xchg
or
xlat
or
adc
daa
shlb
gs
and
dec
stos
pop
xchg
test
dec
arpl
mov
je
jl
popa
adc
int3
jns
dec
jecxz
sbb
clc
pop
dec
lahf
sub
aad
mov
dec
push
jne
stc
mov
aaa
idivl
dec
das
mov
mov
scas
rcr
pushf
pop
bound
stc
aam
inc
les
push
pop
sub
or
sbb
inc
mov
sub
pop
outsl
cli
mov
sti
rorb
mov
cmpl
push
sub
and
test
pop
mov
jbe
rorb
mov
shrb
mov
push
mov
jl
fcoml
call
dec
or
fisubrl
xchg
xchg
push
movsl
insb
insb
aad
inc
mov
loopne
or
add
mov
pop
fwait
lock
mov
sub
out
push
stos
test
je
je
jae
dec
jnp
jmp
sub
jae
and
out
adc
fcompl
jecxz
aas
pop
add
add
jo
mov
or
ja
fcmove
xor
pop
cmp
cmp
mov
dec
fwait
pusha
into
stos
stos
xor
rcll
stos
enter
rolb
aaa
cmc
lret
mov
ret
call
xchg
fidivl
test
rcrb
jg
add
aas
imul
and
push
jl
daa
mov
leave
push
ret
stos
ss
dec
xor
adc
push
rclb
push
stc
aad
jb
aaa
mov
sub
or
dec
add
pushf
enter
cwtl
push
pop
jl
push
cmp
dec
adc
bound
hlt
xchg
loop
mov
sbb
ror
inc
outsl
pop
xor
das
out
jecxz
movsl
mov
inc
arpl
add
lods
ret
mov
inc
mov
ret
push
cmp
cmpsb
dec
mov
repz
dec
jne
mov
test
movsb
pop
xchg
out
pushf
fxtract
sti
xchg
sbb
mov
cmp
movsl
cmp
and
in
and
sti
jg
repz
xchg
stos
loope
mull
arpl
fildll
insl
outsl
adc
int3
lea
lods
sarl
or
nop
lret
mov
mov
cli
out
jp
mov
imul
sarl
xchg
push
loope
xchg
ret
or
xor
mov
fs
jnp
cmp
call
das
int3
push
jecxz
dec
inc
pop
add
scas
sub
sbb
lcall
push
rclb
lahf
fmull
mov
xchg
and
push
test
cld
mov
xor
clc
nop
mov
adc
sbb
jae
and
out
stos
pushf
rorl
and
movsl
xor
mov
pop
das
or
fwait
xchg
jne
xchg
xor
xchg
cwtl
call
and
xor
push
ljmp
inc
in
mov
cmp
pusha
sbbb
scas
jnp
xchg
pushf
inc
mov
mov
insl
dec
or
imul
bound
lcall
inc
jbe
rcl
sub
xor
sub
je
adc
fnstsw
mov
ljmp
pushf
xor
sub
xor
sbb
adc
imul
aad
push
push
xchg
cltd
icebp
mov
and
bound
je
adc
dec
mov
hlt
sub
jp
rcll
inc
mov
sahf
test
divl
vpmaxsw
jbe
sub
add
jge
lds
nop
push
mov
mov
push
out
xchg
je
pop
je
enter
adc
fstps
add
mov
leave
add
sbb
fistpl
sahf
mov
sub
mov
dec
test
les
lods
sbb
aad
dec
rcrb
sub
outsb
xchg
aad
xor
mov
fldcw
push
mov
inc
add
dec
jecxz
in
pop
jp
lret
cmp
lret
stos
push
js
outsb
cmp
js
xor
rcr
pop
inc
ljmp
push
jno
int3
cmp
mov
cmp
in
insb
sbb
push
add
mov
sti
xor
mov
dec
inc
sub
les
rcrl
rclb
adcb
mov
mov
mov
mov
pop
fsubs
add
xlat
das
popf
nop
cmpb
loop
js
xchg
adcb
into
mov
push
pop
xor
adc
xlat
sahf
xchg
into
ret
aad
popf
cmp
fbld
aam
pop
aaa
repnz
sub
inc
sbb
jle
inc
dec
mov
push
push
pop
xor
sub
jecxz
leave
add
xor
and
pop
jns
lods
xchg
pushf
outsb
lcall
ss
fisubrl
and
lahf
mov
cmp
mov
cmp
pop
xchg
stos
daa
jno
int
in
jbe
int
aad
and
push
fwait
or
inc
stos
dec
mov
or
pop
lret
dec
xchg
xchg
mov
testl
ljmp
call
cmpsl
imul
ja
sub
and
fcmovne
or
out
mov
lds
outsb
jg
sub
push
or
sub
sub
cmp
out
mov
dec
fimull
lret
outsl
jmp
add
mov
or
out
sbb
es
mov
xor
push
mov
inc
stos
xchg
shrl
add
or
scas
xorb
sbb
sbb
adc
xor
clc
cmp
mov
push
or
jge
push
add
sbb
adc
lods
mov
es
rorb
cmp
fcoms
repnz
sbb
push
daa
ljmp
cmc
test
jmp
imul
mov
lahf
fwait
stos
pusha
sub
sbb
gs
sub
mov
adc
xchg
stos
test
xor
mov
fmuls
sbb
adc
push
lret
ds
dec
add
or
xchg
xor
repnz
ret
sub
movsb
lret
add
lods
jecxz
xchg
inc
iret
test
dec
dec
sahf
inc
xor
inc
xor
rorl
jge
adc
imulb
and
stc
xor
sbb
cwtl
or
mov
out
rolb
mov
push
dec
in
mov
add
stos
out
cmc
rcl
shll
sahf
jae
arpl
inc
in
xor
inc
add
in
mov
cwtl
sti
fwait
test
sub
mov
sbb
aam
lods
stos
push
xorb
call
xor
and
xchg
cwtl
add
xor
pop
int
fistpll
or
dec
jns
lret
pop
les
insb
in
outsb
arpl
and
xchg
jno
out
cmp
push
arpl
cmp
lea
mov
adc
xchg
xchg
push
lds
push
mov
test
dec
mov
mov
enter
cmpsl
je
mov
cmp
inc
mov
adc
stos
arpl
inc
dec
imul
or
int
sahf
mov
out
mov
fisubl
roll
adc
mov
fdivr
sub
fiadds
push
fld
divb
xchg
xchg
mov
push
sbb
loopne
das
mov
aas
sub
sbb
add
repz
cmp
rcll
sti
inc
adc
js
add
movsb
inc
push
lcall
mov
adc
push
inc
add
repz
roll
cmc
in
push
es
jb
and
fiadds
inc
mov
fucomip
filds
push
mov
daa
das
mov
sbb
pop
lcall
in
stos
mov
icebp
lcall
lcall
pop
ret
cmpsb
divl
pop
lds
add
pop
jnp
or
push
push
pop
adc
xchg
jae
add
jle
stos
shrl
jae
bound
into
mov
mov
jb
icebp
jno
push
lahf
cmpsl
roll
push
or
popa
adc
sbb
std
mov
lahf
mov
jecxz
jns
fmull
and
mov
xchg
xchg
jmp
imul
inc
adc
imul
pop
cmp
mov
into
and
push
and
icebp
lret
scas
cwtl
jnp
pop
mov
stos
mov
add
enter
sbb
mov
pop
stos
dec
lret
pop
mov
es
cmp
data16
scas
popa
cmp
sahf
int
lods
subb
pop
cmpsl
repz
test
aad
leave
stc
sar
ds
xchg
es
xchg
les
adc
xchg
sbb
push
out
push
notb
test
inc
push
mov
in
jb
mov
or
xchg
jg
addr16
pop
pop
xchg
lea
adc
or
or
inc
leave
inc
fsubrl
filds
pop
call
jb
and
repnz
out
mov
loopne
cmpsb
mov
stos
pop
jp
movsl
add
jecxz
pop
aaa
pop
mov
cmp
cmpsw
xor
into
dec
add
icebp
in
cmp
mov
sbb
in
mov
adc
int
sahf
shlb
repnz
mov
aaa
int
mov
xchg
addr16
les
jno
mov
or
ds
adc
das
ja
imul
repnz
ret
insl
hlt
iret
cmpsl
lods
cmc
iret
pop
push
out
shll
lods
inc
out
jg
and
sbb
add
iret
lods
bound
sub
and
cmpsb
jne
rolb
fisubl
call
dec
add
add
and
inc
pop
psubd
inc
xor
mov
loop
fucom
push
sbb
and
cmp
add
push
icebp
mov
or
popf
mov
xor
inc
in
ret
hlt
jnp
std
add
jmp
je
movsl
and
mov
insl
in
jp
scas
leave
mov
mov
and
inc
test
mov
std
dec
sub
push
imul
or
sti
xchg
adc
mov
out
cmp
fsubrs
into
fwait
das
cmp
xor
lods
push
lea
outsl
add
mov
test
sub
out
jno
lcall
or
mov
fnstsw
test
stos
imul
cmp
test
popf
mov
or
and
fiaddl
cmp
jnp
int
test
repz
gs
xchg
mov
jnp
cmp
xor
pop
sub
insb
lods
mov
push
sub
in
imul
pop
hlt
outsl
xor
xor
negl
ss
push
cs
orl
push
jmp
or
xlat
xor
mov
popa
ret
sbb
movsl
push
pop
jp
inc
cmc
jno
inc
pop
push
sahf
inc
fildl
int3
pusha
data16
cli
nop
in
jo
bound
push
cmp
jp
popf
stos
mov
mov
clc
push
add
cmp
jg
xchg
adc
cli
and
xlat
jne
xor
mov
pop
and
inc
xor
scas
jb
pop
es
js
mov
mov
fucom
out
mov
push
pushf
sub
int3
shll
push
jge
pusha
mov
out
ja
mov
inc
push
int3
cwtl
insb
push
bound
popa
add
push
mov
pop
cmp
xor
or
or
icebp
test
test
fistpll
mov
pop
xlat
pop
aam
sbb
sbb
and
dec
roll
adc
mov
popf
lcall
lds
leave
push
xchg
dec
mov
cmp
enter
clc
mov
fstpl
std
aaa
xor
hlt
test
mov
push
add
jbe
fdivrs
int3
jp
xchg
mov
test
jno
or
push
into
test
xor
and
mov
icebp
outsl
mov
pushf
test
enter
or
lcall
out
adc
testb
das
sub
in
push
and
les
pusha
lods
ret
movsl
sbb
mov
sbb
aaa
rorb
add
data16
mov
shrl
sub
cmpl
mov
xchg
sub
mov
jae
cmp
sarl
nop
test
mov
ds
incb
ret
call
sti
negl
dec
mov
pop
test
inc
inc
fiaddl
iret
pop
inc
movsb
cli
in
jge
xor
lock
push
jo
pop
out
fsubs
xchg
and
cli
dec
mov
mov
sub
dec
inc
imul
xchg
sbb
sar
idivl
or
cli
jo
shl
xchg
vcvttsd2si
jge
sbb
jge
adc
rorb
jbe
fdivrl
stos
push
aad
popa
push
jl
leave
sub
mov
adc
xlat
inc
clc
lock
jmp
inc
pop
js
ret
pop
sti
mov
add
jecxz
xchg
les
cmp
mov
nop
shlb
lds
inc
mov
push
inc
mov
jo
push
int3
aas
scas
jbe
pop
scas
repz
mov
lock
call
jp
popa
popa
movsb
pop
jg
mov
add
lret
shll
jb
sbb
dec
int3
leave
ds
ss
fs
lods
add
xor
lcall
push
fwait
or
lock
loop
shll
ss
data16
movsb
sbb
jecxz
out
insl
push
xor
cmp
cmovo
pop
lods
insb
push
inc
or
and
addb
shrb
loope
inc
repz
inc
outsb
cmpsb
push
in
mov
lret
mov
push
out
pop
in
push
jecxz
inc
jnp
mov
sub
mov
dec
lret
sti
or
fnstcw
sub
sbb
shl
xchg
adc
sbb
scas
data16
aaa
bound
adc
int3
negl
push
mov
mov
sub
pop
adc
outsb
sbb
xchg
dec
dec
sbb
or
add
call
not
insb
sbb
sarb
js
das
mov
mov
imul
cmp
mov
loope
rcll
sub
mov
push
addr16
push
popa
imul
insl
jge
adc
pop
jg
mov
call
cltd
and
dec
imul
gs
int
daa
jo
push
call
mov
mov
jo
add
or
shrb
cmp
ss
jne
inc
sub
sbb
pop
std
mov
pop
test
mov
mov
popf
jno
test
insb
add
mov
iret
jl
dec
je
dec
inc
inc
and
jns
into
inc
jp
adc
sub
js
cmp
sub
xchg
insl
sahf
aaa
mov
inc
adc
cmp
daa
cmpsl
add
xchg
cmpsb
fistpll
aam
lods
mov
in
add
pop
bound
iret
jb
cmp
dec
cmovo
in
scas
dec
hlt
xchg
cmp
ficoms
jno
xchg
imul
cmp
add
adc
fdivrs
cld
or
and
push
or
cmp
cmovb
dec
push
add
js
addl
adc
xchg
push
hlt
ljmp
xor
call
cmp
jg
pop
into
nop
lahf
fstps
inc
int
sbb
test
push
insl
sub
outsb
int3
adc
push
mov
lods
adc
add
adc
rclb
call
jbe
pop
roll
dec
arpl
inc
dec
mov
sarb
icebp
leave
jnp
cwtl
js
pop
pop
repnz
shll
jno
inc
sub
fstps
mov
jno
hlt
sahf
mov
push
inc
pop
cmp
pop
jne
push
and
in
cltd
dec
mov
jns
mov
xchg
ja
rorl
cmc
pop
pop
push
sub
sti
jge
or
daa
enter
pop
jmp
cmp
or
pop
sub
leave
sbb
test
shll
mov
sbb
xchg
scas
out
ds
fnstcw
adcl
mov
pop
and
shll
ljmp
sbb
jl
cmp
jo
jmp
add
sahf
clc
jl
int3
out
add
add
add
pop
jne
adc
add
popf
push
sub
stc
xor
jmp
and
add
test
iret
xlat
into
int
and
fld
cmpsb
imul
adc
push
ss
mov
rorl
xor
and
xchg
xor
loope
mov
loope
push
jno
mov
outsb
lahf
fwait
push
or
xorl
pop
xor
xor
and
js
xchg
mov
inc
loopne
cmpsl
cld
inc
int
out
xlat
fnsave
dec
and
cmpsl
test
cmp
cmp
mov
cmc
push
cld
mov
sbb
cmp
cmp
push
jp
hlt
or
movsb
popf
sbb
sbb
inc
inc
out
cmp
out
mov
jno
mov
sub
jns
add
ret
add
xchg
not
xchg
push
inc
pushf
or
imul
out
mov
test
inc
pop
test
bound
jecxz
aad
inc
inc
insb
imull
dec
aam
ja
ss
rcrl
outsl
cli
aam
mov
or
int3
cmpsb
lret
and
ljmp
cmp
sbb
aaa
in
cmp
mov
das
dec
je
int3
popa
fwait
aas
sbb
fwait
pop
sahf
inc
scas
or
ficompl
sbb
inc
popa
and
dec
sub
ds
pop
ja
sbb
xlat
dec
rorb
mov
mov
fnsave
xchg
pop
bnd
negb
arpl
sbb
std
leave
nop
in
and
or
stos
rcll
jg
std
cmp
fwait
xor
dec
push
jne
push
mov
inc
lcall
ja
mov
fwait
movsb
push
aad
sub
test
leave
aaa
add
shll
test
and
ss
ljmp
or
adc
pop
jbe
or
imul
sub
pop
cmpsl
js
aaa
push
push
mov
loop
mov
mov
imul
mov
add
mov
xor
jmp
popa
or
push
in
leave
ret
add
sub
fwait
testb
add
mov
cs
inc
pop
xchg
xor
cmpsl
sub
test
lds
mov
js
loopw
fsubrs
fcompl
mov
outsb
lds
xchg
cltd
clc
mov
iret
sub
stos
fsubrl
sahf
add
and
stos
jne
mov
mov
mov
add
loopne
mov
xchg
or
adc
sbb
inc
ljmp
xchg
dec
nop
repnz
pop
ret
xor
aam
xchg
and
inc
sahf
adc
outsl
pop
lret
add
fimull
adc
lock
rcll
es
iret
sbb
pop
jg
mov
cli
mov
and
imul
cwtl
xchg
jg
and
hlt
dec
dec
sahf
push
push
pop
mov
sub
dec
int3
fidivrl
mov
inc
sub
pop
xor
jns
int3
aaa
js
mov
ret
outsb
pop
popf
push
jnp
xchg
cmpsb
push
dec
das
scas
mov
imul
mov
jne
mov
xchg
sbb
mov
or
xchg
in
xchg
movsl
mov
xchg
in
sub
gs
pop
rorl
sbb
arpl
movsb
mov
xchg
sbb
xchg
xor
fnstcw
imul
in
add
imul
sub
pop
sub
xchg
mov
xchg
xchg
sub
xor
stc
jl
pop
sti
mov
std
jns
add
clc
inc
rol
push
jmp
jp
xchg
pop
ret
inc
dec
xrelease
mov
push
cltd
lods
inc
test
jp
adc
push
icebp
repnz
xchg
cmp
ljmp
punpckhbw
iret
sbb
pop
or
nop
pop
aaa
sub
mov
das
lock
in
jge
fs
adc
sbb
sbb
jnp
mov
xchg
push
xchg
cmp
cltd
popa
mov
push
push
push
outsb
jmp
sub
lea
ja
out
xor
sbb
out
in
push
shll
imul
and
add
psrlq
xchg
pop
add
loop
cltd
in
in
lods
stos
adc
outsb
lcall
mov
scas
mov
or
shll
adc
repnz
mov
dec
pusha
mov
sub
xlat
fdivrl
gs
inc
cmp
mov
scas
aaa
cmp
mov
xchg
jo
mov
gs
ljmp
push
mov
xchg
stc
stos
popa
sub
mov
test
int3
inc
xor
js
loopne
push
popf
int3
mov
mov
add
pop
sub
stos
mov
pop
ja
push
in
push
dec
and
fcmovnb
aad
jbe
and
jge
or
xor
das
pop
push
gs
cmc
and
and
cmp
pop
pop
js
push
stos
into
popa
outsb
out
test
pusha
mov
in
pop
mov
mov
repz
out
jecxz
pushf
cli
inc
and
sub
cmpsb
cmp
stos
add
lahf
movsl
in
bnd
sbb
jmp
movsl
xor
lret
add
xor
inc
mov
mov
adc
jecxz
pop
aaa
push
call
cmp
ja
packsswb
or
dec
mov
jbe
xor
adc
mov
lds
andb
lret
push
int
sbb
pop
mov
jb
add
daa
lods
bound
or
mov
adcl
std
dec
inc
jg
aad
mov
xchg
inc
jne
ror
mov
jge
jl
cmpsb
push
not
mov
mov
subl
sbb
xchg
out
xor
push
mov
mov
add
nop
nop
mov
sbb
call
clc
cli
in
xchg
inc
mov
imul
xchg
icebp
rol
lcall
lret
xchg
mov
cmp
fstp
and
jb
int
shll
cmp
xlat
enter
cmp
sbb
data16
movsb
out
push
mov
dec
movups
mov
add
in
call
stos
gs
in
and
pop
jmp
ret
sti
arpl
insl
push
adc
mulb
dec
add
push
pop
mov
cli
dec
pop
jo
imul
addsubpd
jno
mov
mov
mov
push
cwtl
in
imul
mov
inc
jbe
jmp
mov
out
pop
mov
int
sbb
out
fcom
in
aad
jecxz
jge
stc
xchg
xor
jb
mov
adc
jp
xchg
mov
mov
cli
add
jmp
sub
sbb
inc
test
hlt
mov
ret
mov
cltd
fists
add
push
lock
add
jp
pop
outsb
or
scas
in
jp
jge
daa
int3
push
aad
cmpsb
insl
or
popf
shll
mov
or
out
mov
mov
xchg
sub
cmpsb
hlt
pop
stos
je
jl
or
movb
aad
jmp
pushf
sti
sub
pop
push
stc
pusha
vunpcklps
fidivl
and
stos
enter
jb
daa
sbb
mov
cmpl
imull
inc
pop
mov
push
leave
xchg
fidivrl
addr16
jge
or
ret
ret
cmpsl
inc
xchg
or
dec
shrb
lea
mov
cwtl
shr
call
or
fs
lds
in
iret
insl
push
insb
jne
cmpsl
cmp
test
pop
stos
add
and
dec
fcoml
aas
sarb
out
and
sbb
pop
cmp
inc
mov
lock
pop
es
inc
and
lcall
inc
push
int
lods
xchg
aaa
xchg
fstp
jmp
mov
movl
sarb
adc
push
insl
xchg
jne
ret
je
pop
mov
push
dec
nop
pop
xchg
inc
int
out
adc
xlat
mov
mov
mov
cwtl
jg
pop
mov
cmp
jg
jecxz,pn
sub
cwtl
cmp
aas
repnz
fstpl
mov
cmpl
sub
ss
in
push
andb
mov
repz
sti
fwait
jecxz
inc
inc
mov
loop
adc
sub
sbb
mov
cmc
sbb
dec
mov
daa
test
mov
dec
xorl
dec
jle
xor
mov
popa
jmp
add
fadds
mov
mov
arpl
adc
add
or
ret
daa
mov
dec
mov
mov
adc
xlat
dec
xor
sub
jecxz
iret
addr16
cmpsb
mov
adc
popf
inc
push
and
insl
lods
aam
gs
xchg
pop
push
inc
mov
mov
mov
imul
jb
mov
cmp
mov
fistpl
dec
xor
fnsave
or
push
mov
daa
std
and
aad
into
xlat
dec
int3
out
shlb
clc
gs
cmp
or
pusha
test
pop
orl
mov
sbb
xlat
mov
or
cmp
out
das
jae
scas
stos
mov
pop
dec
inc
lret
adc
jo
xchg
jle
mov
xchg
pop
out
test
fnstenv
cs
in
mov
idivl
in
xchg
dec
lcall
cmp
gs
jne
and
cmp
mov
xchg
mov
xchg
dec
std
enter
push
leave
pop
jno
mov
jg
inc
dec
ret
jecxz
push
aad
movsl
sahf
mov
arpl
inc
ret
jle
dec
inc
mov
push
lret
xchg
andl
je
idivl
or
sbb
cwtl
stos
mov
xchg
rcrb
sub
pop
dec
rolb
push
cmp
pop
inc
xchg
jno
mov
fisubl
push
sbb
mov
aam
insb
mov
pop
or
cmp
pop
and
jecxz
xchg
inc
orl
dec
push
or
add
movsb
mov
in
mov
inc
sub
cmp
sbb
push
hlt
mov
pop
sarl
cmc
movsl
test
mov
out
mov
pop
push
dec
xor
ja
insl
mov
div
imul
ss
pop
push
sbb
push
jg
sub
jo
popf
mov
inc
stos
mov
enter
push
lahf
inc
test
cwtl
xor
loopne
xlat
nop
push
inc
dec
and
into
and
daa
pop
mov
pushf
cmpsb
jbe
sub
sub
mov
mov
push
fwait
test
mov
out
mov
rcll
mov
cltd
scas
pop
mov
push
or
fwait
nop
mov
incl
xchg
dec
cmc
pop
mov
cli
mov
xor
or
dec
cld
cmpsb
jle
fdivl
pop
repz
mov
jp
jnp
cmp
lds
sub
push
xchg
sbb
mov
out
dec
shll
leave
mov
jmp
cmp
shl
pop
fidivs
lea
push
fdivrl
and
jecxz
cmp
arpl
pusha
lcall
pop
push
data16
in
in
in
fdivl
or
fwait
aad
daa
and
bound
add
dec
xorps
cmpsl
inc
lods
inc
adc
pop
movsb
shl
pop
push
mov
scas
cmpsb
inc
fdiv
mov
frstor
cwtl
loopne
pop
push
lods
mov
arpl
adc
daa
and
leave
ja
scas
repnz
sahf
loope
das
pop
xor
push
nop
mov
mov
in
cmp
into
push
pop
jb
adc
fsubl
sti
mov
ficoml
xor
cmpsl
divl
pop
jg
jg
out
add
lcall
in
mov
cmp
jb
cmp
les
pop
loopne
and
out
mov
mov
out
add
inc
dec
mov
add
std
add
sub
test
sahf
mov
into
cmpsb
loopne
outsl
xlat
mov
cs
cmp
stos
or
movzbl
inc
out
stos
dec
imulb
icebp
xor
mov
add
lea
mov
das
in
xchg
xor
cmc
mov
pop
sar
sbb
shrl
xor
push
dec
push
ret
push
lds
movsb
and
adc
lods
lahf
add
mov
scas
outsl
push
pop
push
dec
mov
and
ret
jb
test
shll
shlb
adc
stc
cmpsb
sbb
mov
lcall
xchg
in
out
enter
popa
lods
mov
mov
jo
lods
inc
lods
iret
stc
stos
pop
xchg
or
call
or
add
mov
mov
aad
movl
jmp
les
out
lcall
jecxz
and
push
xor
cmpsl
out
arpl
jp
enter
lods
xchg
pop
mov
arpl
mov
mov
out
push
lods
push
add
jg
adc
mov
cmp
enter
mov
xchg
fmuls
xchg
call
pop
xchg
dec
lods
fisttps
rcr
cmp
adc
in
sahf
cmp
pop
cmpsl
xchg
dec
push
pop
sbb
sbb
addr16
add
cltd
cmp
ds
aam
in
mov
jbe
xor
cmc
cltd
sub
fnstenv
jnp
hlt
sti
mov
je
aas
lods
sbb
outsb
inc
mov
inc
xor
xor
fisubrl
lret
and
mov
and
pop
sbbb
sub
cmp
mov
enter
add
rcll
dec
lea
ret
push
fildll
sbb
jae
jle
mov
xorl
xor
lods
clc
stc
mov
cmp
add
stc
cmp
or
fwait
cli
loop
inc
roll
into
hlt
movsb
out
push
cmpsl
test
xchg
cmp
int3
dec
in
lods
int
xchg
mov
cmp
sahf
sub
add
movsb
aaa
in
int3
sub
test
out
sti
mov
mov
cmp
or
add
push
in
or
inc
adc
or
repnz
popa
mov
cltd
fwait
cmp
jecxz
dec
sti
add
jge
loopne
cmpsb
and
imul
sub
out
xchg
dec
loope
mov
lds
push
jne
ja
pop
sub
subb
lods
push
data16
jns
into
mov
iret
and
mov
mov
or
fisttps
sbb
push
bound
mov
das
enter
je
xchg
xchg
andb
lcall
dec
je
in
mov
cmp
mov
cmp
rcrb
xchg
in
push
fsubs
ja
js
dec
pop
pop
push
ret
xor
test
pop
jp,pt
pushf
and
rcll
sub
jnp
mov
lods
into
sti
inc
pop
jno
pusha
mov
shrb
dec
cld
adc
mov
loopne
in
cmpsl
icebp
or
xchg
leave
outsl
clc
cmp
add
mov
push
mov
push
int3
dec
push
xchg
adc
repnz
jl
or
cmpsl
mov
mov
fnstsw
jmp
test
cmp
sahf
clc
stos
cwtl
incl
fisubs
and
cmc
adc
push
movsb
pop
addr16
mov
insb
loope
add
daa
je
mov
mov
in
add
or
or
inc
fldt
jl
test
pop
orl
daa
cmp
aam
or
fidivrs
mov
dec
inc
inc
cmp
daa
cmpsb
aaa
lcall
sbb
dec
or
popf
xor
or
cmpl
mov
sarw
scas
sbb
xchg
push
mov
into
loopne
lret
adc
lahf
push
mov
xchg
lea
mov
fisubl
ret
shll
out
jne
subl
lcall
sub
pushf
mov
frstor
mov
ret
orb
cld
in
sbb
mov
out
push
fnsave
and
cmp
subl
dec
call
repz
cmp
cs
xchg
fs
outsl
lods
pop
xor
push
mov
cld
lahf
ja
out
aaa
fwait
pop
and
pop
sbb
inc
cmpsl
xor
push
pop
cmc
sub
ret
jge
pushf
mov
mov
pop
int3
cmp
jb
out
push
adc
cmp
push
fisubrs
sahf
jl
mov
push
int
int
pop
popf
inc
inc
xor
dec
rolb
arpl
and
mov
enter
lods
cmp
lds
jle
fisttpl
add
imul
loopne
int3
outsb
inc
ss
in
sbb
inc
cmc
xor
adc
xchg
stos
cmpl
pop
movsb
enter
push
cwtl
push
pop
fstl
jo
dec
lods
popf
pop
push
pop
cmp
les
sub
fsubr
daa
jnp
std
enter
in
movsl
inc
fcom
adcb
add
cmpsb
mov
inc
push
icebp
push
mov
aad
das
xor
aad
add
xchg
mov
mov
in
dec
movsb
add
outsl
lds
in
std
loop
push
mov
test
add
add
sub
clc
jl
pop
add
jmp
mov
inc
loop
inc
mov
mov
movsl
mov
shll
pop
call
scas
jmp
adc
lock
cmpsb
sub
xchg
test
add
cmp
dec
sub
movsb
fwait
and
and
test
or
or
push
sub
push
mov
ja
lcall
mov
ja
xor
clc
cmp
pop
mov
push
aaa
pop
rcll
psubw
test
xor
arpl
inc
push
cmp
add
sub
xchg
call
sahf
and
adc
es
addr16
stc
adc
rolb
outsl
jmp
xor
xor
mov
inc
fdivrl
jp
mov
xor
mulb
inc
push
scas
sub
fists
into
lock
mov
sub
int3
lret
sub
dec
sti
or
jbe
jbe
negb
je
adc
jp
roll
pop
mov
sar
das
dec
das
ds
mov
push
mov
sub
lret
and
test
stos
addr16
push
jl
mov
xchg
xchg
pop
mov
xchg
lods
jecxz
cmp
adc
notl
clc
aam
mov
xlat
repz
aad
movsl
mov
jg
inc
fldcw
sti
shlb
sbb
int3
jae
hlt
push
iret
insb
insb
cmp
mov
mov
aad
imul
xchg
sub
es
jb
ds
or
movsl
push
fwait
aam
inc
idivl
pop
stos
push
push
mov
and
xchg
push
cwtl
icebp
aam
cmc
mov
cmc
adc
mov
jbe
add
cmc
push
aam
sbb
pop
fcmovu
cmp
dec
adcl
pop
enter
mov
cs
hlt
sub
add
mov
pop
shlb
cmp
xor
lret
inc
cld
sahf
ret
adc
fmuls
jecxz
sbb
loop
pop
cli
inc
mov
aad
pop
jmp
aaa
test
mov
xchg
cmp
adc
ret
or
iret
in
rorl
add
pop
movsl
adc
imul
divl
pushf
sub
jnp
stos
jo
sbb
roll
loopne
mov
loope
ds
sbb
push
or
add
sbb
cs
inc
leave
sbb
add
in
push
std
pop
push
jbe
adc
inc
mov
stc
push
dec
xchg
add
xchg
mov
xor
dec
std
nop
sbb
test
jo
mov
lock
hlt
cmp
pop
daa
mov
les
fcompl
dec
add
lods
std
ljmp
and
es
adc
test
lret
pop
push
sbb
jb
xchg
sbb
jae
mov
into
xchg
push
lods
and
fwait
js
xor
inc
lock
cmpsb
pop
cmp
and
sub
xor
stos
jmp
push
fimuls
dec
lds
shl
jo
add
xor
scas
sti
and
mov
roll
mul
xor
xchg
scas
sahf
jo
mov
decl
xchg
in
insl
pop
dec
or
daa
adcb
and
dec
jnp
mov
xor
stos
sar
inc
cmp
dec
es
flds
xlat
in
pop
leave
cld
sbbl
xchg
xor
std
sbb
and
mov
sub
inc
andb
xchg
push
ja
jmp
mov
mov
jo
and
xchg
sbb
mov
sbb
and
dec
sub
add
popf
pop
movb
fstpt
dec
repz
jne
cmpsl
mov
cmc
dec
xchg
cmp
rclb
cltd
xor
mov
leave
sub
test
stc
fisubrs
data16
mov
jmp
clc
outsb
adc
out
jo
jp
popf
daa
aam
mov
mov
fdivrs
shlb
aam
fmull
sub
pop
or
jo
ja
and
lock
mov
push
push
pop
sbb
cmpsl
cmp
xchg
mov
adc
jno
pop
xchg
push
nop
loope
frstor
cs
jmp
jns
sbb
sti
cs
or
jmp
lcall
xchg
mov
jmp
dec
out
or
mov
mov
cmpsl
jecxz
push
cmp
mov
jae
cmpb
and
sbb
jg
pop
inc
sbb
cmp
loopne
cmp
stc
aaa
imul
push
lods
mov
std
xchg
popa
rdpmc
movsl
addr16
xchg
addr16
mov
and
jnp
addr16
sbb
jl
dec
in
ljmp
pop
add
adc
inc
in
jo
adc
int3
xor
ja,pn
and
inc
psllw
out
dec
ja
push
pop
ljmp
repnz
and
repnz
inc
mov
lahf
xchg
pop
or
or
icebp
hlt
lret
mov
jne
and
or
sbb
mov
and
jns
jg
add
jo
pop
lret
cld
jle
sbb
ja
repz
cltd
mov
sub
sbbl
cmp
xchg
das
loop
mov
sbb
daa
scas
test
adc
lcall
pop
loopne
andl
jae
je
sbb
jnp
shrl
sar
cmc
fwait
pop
push
dec
shrb
fprem1
jae
inc
or
sahf
in
push
les
mov
sbb
push
mov
movsb
xchg
push
jle
cmp
inc
push
pop
mov
bound
jb
pop
fiadds
cmp
imul
daa
cmp
xchg
test
jmp
aas
or
in
adc
add
cmp
sbb
rolb
or
dec
sarl
aas
mov
xorl
andl
lea
call
cltd
stc
mov
mov
jmp
mov
ret
loope
orl
pushf
cmp
add
lock
sub
cmp
arpl
push
or
ficomps
clc
je
sub
sbb
inc
mov
pusha
lcall
loope
xchg
mov
cmp
mov
pop
sub
sub
out
push
test
xor
outsl
popa
outsb
jmp
jo
mov
lret
inc
fidivrl
inc
cltd
cmp
insb
mov
jecxz
fwait
sbb
les
lret
sbb
dec
mov
enter
pop
mov
jmp
and
mov
pop
ret
imul
addr16
lret
sub
out
mov
sbb
jo
lcall
mov
mov
fidivs
aas
mov
sahf
ret
pushf
lret
das
dec
xor
pop
pusha
jb
xor
cli
mov
inc
fldcw
mov
and
jno
leave
pop
jmp
and
lea
repnz
mov
cmp
mov
aaa
jge
inc
sti
repnz
push
or
fstl
inc
mov
js
out
fwait
addb
aas
pushf
or
idivl
mov
push
fs
xorl
push
sbb
fdivrl
addr16
adc
into
adc
cmpsb
cmp
test
sub
lret
push
pop
daa
xor
inc
xchg
fwait
dec
cmp
adc
adc
mov
pop
jne
xor
xor
test
lods
insl
cmc
fsubl
add
std
out
adc
mov
xchg
rorl
jne
imul
pop
icebp
dec
or
adc
xchg
in
xor
xchg
sbb
lods
ss
add
ret
mov
test
out
push
or
pop
pusha
in
push
jbe
push
and
pushf
das
cwtl
cmp
mov
push
pop
xchg
mov
mov
inc
xchg
ret
xchg
push
imul
mov
lret
xchg
or
int
mov
out
stos
std
adc
out
mov
mov
loop
jge
adc
ds
dec
loop
aas
pushf
inc
out
xor
incb
pop
jle
pop
mov
push
sti
pop
mov
ljmp
mov
scas
xchg
cmp
je
xor
mov
arpl
mov
pop
add
mov
push
pop
in
or
out
add
repnz
pushf
push
mov
mov
xchg
inc
inc
repz
cwtl
or
idiv
in
pop
lahf
dec
adc
test
popf
rcl
push
out
cmp
jne
js
hlt
mov
leave
pop
mov
shll
sbb
push
cmc
es
push
outsb
insl
xchg
out
cwtl
cs
addl
add
mov
push
xchg
mov
dec
aas
loop
add
clc
rcrl
sbb
outsl
jns
fiadds
xchg
rorb
shlb
adc
mov
mull
mov
mov
lods
push
adc
cltd
das
push
aad
loopne,pt
or
sbb
dec
dec
cli
fwait
popa
sbb
push
lret
inc
or
sbb
aas
mov
push
pop
addl
mov
inc
adc
push
inc
pop
cmp
dec
insb
js
mov
scas
lret
ret
rclb
adc
sbb
inc
icebp
enter
inc
sbb
rolb
cmp
mov
pushf
ja
xchg
push
in
sahf
enter
subb
fcompl
cmp
push
lret
mov
notb
dec
loope
jge
iret
dec
or
adc
in
xchg
clc
jmp
fadd
and
arpl
pusha
gs
mov
pusha
ret
movsb
dec
or
ja
push
push
dec
pop
cld
ja
call
add
xchg
cli
cmp
dec
lret
fcoms
mov
pop
xlat
mov
inc
lock
imul
mov
in
aam
push
loope
mov
jbe
daa
jo
dec
mov
add
and
pop
lods
cmp
leave
outsl
mov
and
jle
imul
stc
jle
cmp
mov
ds
and
push
ret
inc
pop
cmc
pop
adc
xor
mov
imul
rcl
popa
and
pusha
fwait
in
dec
push
imul
mov
sub
std
pop
mov
jl
and
push
pop
scas
mov
and
out
pop
arpl
push
push
sahf
lcall
xorb
pop
fadd
popa
scas
cmp
mov
push
popf
mov
pop
iret
xchg
cmp
popa
sub
stos
adc
or
add
repnz
xchg
nop
add
mov
or
testl
mov
cltd
and
scas
pop
mov
mov
bound
pushf
and
push
cld
decb
jle
ss
jno
mov
ljmp
cmc
addb
and
hlt
or
nop
mov
outsb
adc
mov
lea
push
daa
cmp
push
out
mov
lods
popa
outsb
shrb
adc
test
dec
repz
test
jmp
sub
cmp
mov
push
jno
pop
add
lret
sbb
cmp
xchg
mov
testl
aaa
lret
pop
mov
or
inc
in
ds
cmp
sub
pop
dec
mov
dec
adc
fldl
inc
xchg
pop
iret
mov
mov
dec
mov
mov
addb
mov
bound
fstpl
std
insl
xor
aam
clc
aad
fstl
xor
repnz
bound
enter
out
sub
rorb
sub
insb
cpuid
sub
push
and
aad
add
das
lods
iret
out
inc
inc
pop
jl
adc
loop
shr
stc
test
das
leave
xchg
or
pop
jo
add
xchg
lcall
ss
pop
xchg
ja
lahf
in
mov
xlat
lods
mov
jae
nop
cmpb
sahf
add
fisubrs
incl
scas
or
mov
aad
or
xchg
cmp
xlat
cmp
fwait
insl
mov
enter
jge
jp
loopne
xor
push
cmp
cmpsb
mov
nop
fimuls
xchg
push
cmp
lret
loop
mov
mov
cld
aas
mov
inc
jnp
ret
out
out
sbb
pop
cld
mov
xchg
loopne
sbb
and
mov
fs
dec
mov
dec
mov
outsb
ss
pop
call
add
lcall
mov
sbb
setb
jno
insl
dec
push
push
test
hlt
enter
dec
or
jge
dec
jg
add
push
shll
in
cmp
gs
imul
mov
lret
and
sti
add
into
outsl
shlb
lea
movsl
add
push
imul
adc
jbe
pop
lods
cmc
jo
ss
repnz
int3
loop
pop
xchg
fs
dec
or
xor
adc
mov
enter
dec
iret
sarl
push
pop
imul
pop
das
jns
mov
xor
lods
and
push
lahf
xchg
adc
fsts
repnz
jg
push
inc
cmp
fiaddl
adc
movsb
sbb
shrl
invd
mov
stos
outsl
or
cli
xorb
jge
out
inc
or
stos
jecxz
ret
or
lock
fidivrl
aam
inc
push
imul
pop
es
lahf
testl
fstps
loopne
sub
pop
jb
sbb
cltd
jno
adc
adc
popf
outsb
jle
hlt
or
test
xchg
fwait
mov
fdivl
pop
add
hlt
xchg
mov
push
xor
fnsave
mov
cmovo
je
fdiv
jg
cli
aam
test
icebp
lock
mov
adc
lret
lret
loope
sub
push
cmp
cwtl
push
inc
add
repnz
scas
mov
lods
cmpl
jl
out
fcompl
xchg
int3
and
sbb
inc
add
push
inc
lea
scas
xor
popa
xchg
enter
rcll
pop
sbb
mov
cli
js
das
dec
sub
push
push
scas
cltd
fdiv
adc
sbb
add
dec
pop
out
adc
aas
mov
pop
call
hlt
shrb
push
notl
in
clc
xor
cmp
lret
popl
or
jno
and
jmp
les
cmp
gs
nop
cld
cmpsl
mov
repnz
sbb
push
aas
xor
push
ret
xorb
outsl
ret
inc
add
repnz
mov
fdivr
cmpsb
add
inc
sbb
or
pop
mov
movsl
cmp
mov
in
sub
mov
mov
push
xadd
dec
outsl
in
xchg
cmp
inc
mov
pop
cmc
pmulhw
arpl
scas
cwtl
arpl
mov
mov
sbb
test
je
es
cmp
ss
hlt
in
adc
in
jmp
lods
and
jo
data16
xchg
ja
outsl
cmp
sbb
inc
loope
inc
mov
lret
dec
mov
test
sub
sub
jbe
cmp
jae
aam
aam
sbb
inc
sub
inc
fwait
rep
fdivs
arpl
fistl
jns
arpl
lods
mov
adc
iret
out
push
ja
fwait
negl
sarb
fiadds
jle
filds
pop
stc
and
push
stos
loop
inc
pop
jns
data16
test
push
movsl
pop
repnz
cmpsb
add
test
fdivrl
xor
dec
xchg
aaa
mov
jp
jne
mov
mov
int3
cli
sahf
lea
shlb
cltd
push
adcb
mov
loop
inc
lret
out
sahf
mov
push
pop
inc
xchg
or
adc
dec
jo
enter
sbbl
test
or
sbb
fadds
shll
test
andl
mov
and
aad
or
lds
sahf
push
mov
inc
add
cmp
push
inc
mov
mov
das
imul
lret
pop
pop
adc
clc
xchg
movsl
push
mov
jecxz
mov
sub
dec
roll
push
pusha
or
sbb
jbe
lods
push
in
jns
leave
adc
and
sahf
mov
push
in
sahf
xor
ss
movsb
mov
xchg
mov
xchg
fcmovbe
inc
inc
push
rorl
lock
fchs
pop
cmp
adc
xchg
jnp
sbbb
rcr
adc
mov
lahf
test
sub
or
inc
inc
xchg
mov
sub
mov
lcall
in
cld
mov
and
sti
pushf
add
mov
dec
out
mov
xor
pushf
out
dec
dec
out
mov
addr16
js
in
es
jle
repnz
shll
mov
test
xor
and
cltd
scas
sti
dec
imul
mov
sbb
mov
aam
push
add
push
insb
mov
fidivrs
scas
leave
scas
sub
xor
mov
addl
push
dec
idivl
outsl
mov
popf
adc
icebp
dec
cmp
ret
cmc
lahf
mov
ret
dec
cmpsb
repnz
cmpb
out
mov
push
cmpsl
and
push
test
in
and
jmp
insl
inc
cmpsl
cli
hlt
sub
cld
mov
adc
pop
pusha
sbb
inc
fcoml
pop
mov
fisttps
cmp
into
scas
movsl
fsts
fsubrp
dec
enter
das
cmp
sub
jno
es
mov
pop
cmp
lds
add
xor
mov
and
adc
cwtl
or
negl
add
fdivrl
mul
addb
adc
imul
cs
xchg
test
add
xchg
loop
xor
fsubl
scas
dec
mov
rolb
les
jno
jnp
stos
xchg
xchg
in
inc
lahf
pop
cs
jl
gs
mov
mov
xlat
push
dec
push
push
xor
insb
inc
test
jb
or
daa
xchg
ljmp
lea
inc
push
sbb
test
push
sub
std
push
jecxz
roll
add
or
mov
rolb
add
pushf
sub
inc
push
lret
xchg
xchg
mov
sbb
fsubrl
mov
iret
fsub
loopne
sub
sar
jno
movsl
and
sub
sbb
adc
sbb
enter
jns
loopne
mov
mov
push
sub
shlb
cli
push
and
cld
es
js
mov
cmpsb
sub
imul
mov
jmp
fidivrl
nop
iret
sub
adc
xchg
ja
jae
mov
pop
sbb
inc
scas
inc
outsl
rcrb
xor
dec
xor
cmp
shlb
je
mov
and
cmp
addr16
xchg
push
loope
orl
add
rclb
fstps
add
lock
push
loopne
sahf
test
icebp
cld
call
fildll
mov
cmp
ret
sbb
inc
mov
ljmp
push
popa
idivl
cli
push
lret
xor
sub
clc
jns
repz
in
cld
das
or
mov
fbld
push
dec
dec
test
sahf
mov
xor
pop
aad
adc
pusha
lret
xchg
int3
dec
hlt
xchg
fdivrp
xchg
shrb
inc
push
pop
jg
ljmp
cmpl
leave
into
pop
dec
push
jbe
cmp
sbb
pop
and
cmpsl
xor
lock
test
shll
iret
push
cmp
add
mov
jno
pop
les
cltd
push
je
repz
mov
test
adc
jbe
fsubl
xchg
and
or
adc
or
pop
pop
sbb
pop
lcall
push
or
in
jp
xchg
sahf
mov
mov
movsl
mov
push
add
test
sbb
fimull
mov
fsubrl
push
jle
cltd
sub
nop
je
cmc
test
inc
stos
loopne
jno
scas
in
dec
mov
or
int3
jno
cmpsb
fimuls
sahf
dec
cmp
add
ss
iret
inc
or
rol
push
in
addr16
cmp
inc
adc
sub
sub
mov
aad
push
and
mov
xor
sbb
cmp
sub
mov
cmpsl
sbb
dec
iret
xchg
mov
testl
xor
xchg
adc
mov
loopne
or
sbb
and
and
mov
cltd
or
gs
or
stos
add
sbbl
cmp
jns
mov
inc
adc
aas
in
clc
add
fistpl
xchg
in
scas
mov
clc
xchg
and
outsb
ja
sub
xor
jecxz
dec
mov
xor
enter
in
and
mov
enter
dec
pop
jns
loopne
add
cwtl
cmp
xor
shl
xlat
int3
jae
mov
es
rolb
xchg
out
movsb
xor
loope
push
push
add
inc
loop
imul
insl
jmp
sbb
das
add
adc
sub
fcmove
adc
fldenv
mov
inc
fsubl
sbb
push
lea
insl
cmp
arpl
out
shll
or
inc
into
jle
xchg
mov
mov
cmpsl
pop
sub
mov
ss
aaa
push
adc
cltd
cli
push
lcall
mov
cltd
jne
or
jge
push
or
insl
sahf
leave
pusha
repnz
lret
adc
fistpl
xlat
scas
mov
icebp
ffree
dec
shl
or
loopnew
incb
jo
mov
or
xchg
stos
test
or
scas
xor
mov
roll
pusha
aad
xchg
fldl
std
imul
and
mov
insb
insb
call
lret
mov
push
or
sbb
std
in
mov
push
adc
add
rcrl
fisubrs
negl
sbb
cmp
add
repz
jmp
xor
outsb
mulb
or
sti
cmpsl
mov
hlt
sbb
sbb
push
out
faddl
xchg
jbe
mov
aas
mov
or
cmp
call
lcall
imul
test
clc
notb
repnz
aad
and
cs
fcmovbe
lods
jno
xor
xlat
in
out
add
jmp
add
pop
in
loope
mov
mov
ret
test
adc
push
shll
out
loope
lods
in
aaa
fldt
cmpsl
insl
mov
cwtl
nop
xchg
jns
xor
inc
icebp
iret
flds
enter
sbb
xchg
je
mov
clc
cmp
ljmp
cmc
pop
xchg
ds
or
cmc
mov
aam
cmp
xchg
and
push
and
cld
sbb
mov
insb
pop
cmp
mov
fldl
shl
mov
and
cmp
pusha
sub
jbe
icebp
call
bound
push
sub
cltd
dec
xchg
fsts
xor
add
pop
and
ljmp
inc
in
jmp
ds
in
ds
ror
aad
push
bound
test
mov
push
xchg
add
or
lret
outsl
ljmp
js
pop
xchg
xor
pop
pop
scas
outsb
xorl
xchg
stos
jo
add
add
dec
sbbl
ljmp
mov
addr16
cltd
test
sbbl
xor
push
cmp
sbb
ret
pop
jno
clc
ret
mov
sub
dec
arpl
psrad
js
leave
cmp
lret
hlt
inc
mov
lea
jge
test
lcall
addb
lahf
sbb
daa
mov
xchg
sbb
cs
aad
inc
rorl
faddp
sbb
loope
pop
movsl
sub
test
xor
cltd
mov
cmp
daa
popa
pop
and
xor
nop
add
add
roll
sbb
cli
dec
call
addb
test
dec
outsl
xor
jl
pop
adc
loope
mov
xorl
pusha
mov
lret
ss
mov
mov
adc
scas
sbb
adc
lods
pop
imul
mov
ret
push
lock
call
xchg
and
mov
pop
cli
out
add
pop
les
ss
push
adcl
aas
jge
or
out
std
das
dec
push
repz
hlt
mov
addb
pop
sbb
push
in
out
cmp
loope
or
lea
inc
lret
and
or
fsts
inc
shl
xor
iret
inc
scas
pusha
add
xchg
jno
fsubs
gs
test
mov
xchg
sarl
sub
sbb
mov
sbb
mov
pop
aaa
pop
cs
pop
pop
pop
in
daa
in
sbb
sub
jmp
mov
or
adc
lods
xlat
jns
jmp
push
sub
clc
jecxz
inc
out
jb
jmp
push
mov
pop
ss
lods
lods
pushf
call
jns
arpl
lret
das
cmpsb
pop
rcr
mov
outsl
fdiv
add
dec
cmpsl
dec
sbb
popa
jae
in
cmp
mov
pop
aas
or
mov
stc
jns
int
lea
dec
lds
jno
test
add
mov
xchg
out
and
push
lret
jae
adcb
out
lcall
loopne
cvtpi2ps
sbb
pop
aaa
negl
adc
sub
xor
lds
scas
pop
in
cmp
cmpsb
push
jno
call
push
nop
jge
loopne
or
mov
cmp
imul
int
lds
nop
cmp
lret
out
and
fwait
push
addr16
pop
ljmp
movsl
arpl
mov
ficoms
lock
fsubrs
cmp
mov
js
fnstcw
cmpl
incl
lods
popa
push
and
movsb
mov
ja
aas
mov
mov
dec
pop
mov
aas
and
cmp
mov
jecxz
hlt
push
push
push
add
outsb
pop
dec
ds
mov
das
outsb
int
xchg
xor
dec
rclb
inc
adc
out
sub
insb
pop
std
icebp
mov
inc
push
xor
xlat
repz
mov
leave
clc
or
adc
xlat
ret
hlt
push
add
xor
pop
push
out
fbstp
pop
mov
push
loope
sbb
cwtl
cli
fdivr
test
mov
sahf
bound
mov
arpl
jae
std
les
lahf
cmp
dec
mov
jg
mov
out
xchg
pop
pop
push
push
xchg
out
mov
xor
mov
ret
pusha
ja
cmp
in
jbe
push
movsl
inc
jecxz
xlat
loope
add
inc
adc
daa
mov
lret
in
jge
ss
jo
pop
xor
ja
sahf
popa
lock
cmp
sarb
mov
sub
sti
xor
sub
push
sub
daa
add
aad
cmc
mov
je
push
pop
dec
inc
lret
movsl
pop
cli
mov
add
in
push
mov
inc
mov
or
mov
mov
jno
mov
pop
cwtl
push
jl
inc
in
cmp
clc
loopne
out
add
out
gs
pop
cmp
sub
imul
scas
mov
testb
fwait
pop
pushl
jmp
shl
jae
add
mov
mov
jae
ficoms
ficompl
mov
repnz
inc
mov
loop
cmp
xlat
mov
stos
mov
mov
test
scas
xchg
test
pop
loop
sti
insl
add
pop
mov
pop
xchg
stos
aas
dec
push
and
push
outsl
jmp
stos
cld
sahf
add
inc
adcl
dec
test
pop
xor
cwtl
inc
lcall
enter
add
push
ret
dec
mov
pop
loop
jbe
xchg
xchg
iret
mov
jmp
and
lcall
jmp
cwtl
add
mov
lcall
sub
mov
mov
test
jg
dec
mov
inc
fisttpl
pop
cmp
scas
adc
jmp
fcmovnbe
ss
xchg
std
fimull
hlt
in
les
or
cmp
popa
cltd
imul
xchg
cmp
test
mov
stos
mov
orb
or
mov
movsb
fists
jmp
jecxz
rcr
push
loop
daa
dec
xor
in
cmp
pop
addr16
test
out
push
or
adc
sub
inc
or
pusha
shrb
jmp
gs
data16
mov
jp
ds
lret
outsl
aad
int
data16
or
jns
or
jge
jne
inc
mov
mov
sub
testl
xchg
mov
mov
movsb
sub
call
cwtl
pop
cmp
test
mov
scas
pop
inc
jl
mov
icebp
iret
or
sti
push
or
push
inc
push
jae
jo
xor
test
push
aam
xor
sti
dec
arpl
mov
mov
cmp
and
stos
popa
push
xchg
or
pop
push
sarb
jge
aas
jecxz
push
into
adc
popa
loope
dec
xchg
jp
mov
test
mov
sarb
lock
or
das
add
pop
or
cmpsb
jnp
push
ficoms
xchg
jne
fistl
ljmp
add
in
leave
sahf
or
testl
daa
sahf
std
aam
inc
add
into
mov
outsl
jle
push
cwtl
jge
mov
or
fildll
addl
int
imul
cmp
cwtl
pop
xchg
mov
sahf
cmpsl
rep
mov
add
call
xchg
lock
pop
sti
xor
nop
aad
xor
and
std
push
lock
popa
mov
xor
outsl
scas
pop
or
cmc
popa
enter
mov
sub
xchg
mov
aad
pop
dec
push
inc
adc
cmp
push
mov
adc
insl
jecxz
lret
in
push
or
in
int3
ret
insl
cmpsl
insb
in
jmp
mov
dec
fistl
fdivl
xchg
aam
add
adc
pop
xlat
mov
pop
addr16
mov
fnsave
pushf
mov
mov
sub
jne
push
jo
and
pop
js
out
fbld
cwtl
mov
hlt
inc
add
sub
jns
inc
pusha
inc
popf
repnz
testl
out
test
cmp
mov
loop
xchg
ss
mov
xor
ret
bound
cmpsb
repnz
jne
push
sti
scas
xlat
cltd
sbb
fnstsw
pop
or
addb
hlt
cwtl
mov
shrl
jg
jno
adc
fimuls
fs
ds
dec
sub
mov
xchg
xlat
stos
popa
clc
dec
inc
adcb
jbe
sti
in
xor
js
xchg
xchg
cs
dec
popa
sbb
mov
or
or
cs
xor
je
rcll
test
mov
fbstp
cmp
in
pop
cltd
mov
inc
inc
clc
jae
stos
push
mov
lods
lods
daa
add
out
test
push
insb
sub
lcall
outsb
out
pop
mov
mov
cmp
mov
lods
mov
mov
push
add
jo
and
inc
fs
bound
push
sti
outsl
push
jmp
into
bound
cmp
and
and
lock
fs
dec
or
xor
fldt
pop
xor
dec
xchg
and
mov
cmp
jne
xlat
cmpl
mov
cmp
jecxz
cmp
or
push
and
int3
xchg
push
in
push
imul
inc
xchg
outsl
add
and
sbb
ret
movsl
sti
add
in
pop
xchg
out
js
imul
in
stos
sahf
imul
inc
fnstsw
hlt
mov
fs
data16
add
mov
test
es
lds
adc
jo
jl
cmpsb
cmp
fists
mov
sti
mov
icebp
mov
jno
adc
mov
mov
ret
adc
repz
cli
movsb
xor
sub
fidivrs
dec
rclb
pop
jge
and
lods
bound
mov
mov
push
sbb
cmp
out
and
sub
dec
and
mov
imul
mov
cmpsl
or
mov
and
xchg
push
xchg
adc
pop
push
mov
inc
aad
fildl
ret
movsb
mov
pushf
lea
leave
dec
repnz
xchg
sub
leave
popa
jg
ficoms
icebp
addr16
inc
pop
int3
mov
jo,pn
je
outsb
and
or
or
cmp
lods
mov
push
xchg
fdivl
int
adc
dec
cmc
mov
jb
insb
mov
cmpsl
out
stos
stos
and
outsb
cmpb
sub
daa
mov
mov
ret
inc
jae
jno
jo
push
mov
out
mov
decl
call
lret
dec
dec
lret
mov
push
out
stos
xchg
cmp
xchg
pop
je
sub
test
mov
les
and
ss
push
xor
or
cmpsl
lock
or
aaa
loopne
sub
ljmp
push
repnz
daa
mull
xor
leave
movsb
mov
sahf
push
repz
mulb
das
mov
out
stos
sbb
jns
xchg
inc
je
sbb
sti
les
ss
fidivrs
test
dec
push
mov
int
push
jnp
sti
loop
cmp
jbe
mov
push
or
sub
adc
mov
in
shrb
adc
sti
mov
icebp
mov
or
fs
leave
scas
mov
aaa
mov
movsl
icebp
lock
adc
xchg
addr16
inc
pop
arpl
lods
mov
sub
add
xor
cmpsl
push
repz
divb
out
sub
mov
out
outsl
aad
mov
lret
dec
dec
pop
adc
pop
bound
sub
je
mov
subl
out
adc
testb
loope
stos
sub
mov
xor
jl
fidivrs
inc
add
outsb
int
add
push
lods
test
sbb
test
dec
les
jno
inc
icebp
xchg
repz
cmp
pop
in
jp
movsl
dec
repz
cltd
jne
pop
pusha
adc
jne
cmp
push
mov
sub
imul
pop
xor
jo
mul
bound
int3
mov
movsl
push
or
scas
inc
inc
das
out
scas
inc
test
movsl
push
jmp
pusha
cltd
shll
pop
pushf
jl
testl
push
mov
out
repz
add
or
lahf
fnstenv
sub
jae
push
ror
mov
and
adc
fwait
push
movsl
sub
gs
push
and
fldenv
inc
and
call
ret
push
cmpsl
bound
adc
fs
push
xchg
cmpsl
mov
ss
add
mov
and
mov
lods
pop
fistpll
idivl
ja
loopne
icebp
mov
dec
add
lods
jg
jb
dec
inc
and
in
sub
sub
fs
ret
inc
xor
mov
hlt
mov
pushf
push
mov
out
xchg
aaa
test
cmc
mov
add
jb
mov
jns
and
hlt
pop
stos
xchg
jmp
ds
fildll
and
mov
mov
sbb
cltd
and
scas
mov
lea
mov
push
mov
jbe
icebp
leave
xchg
lret
fisttpll
inc
mov
shl
sbb
jmp
xchg
in
fs
lcall
cwtl
pop
xchg
sbbl
mov
lods
into
push
ss
sub
adc
in
adc
mov
lea
inc
or
sbbb
push
loope
xor
mov
jns
int
in
and
sub
insl
js
sub
lret
in
mov
lahf
xlat
mov
xchg
js
inc
jg
dec
cmp
ret
sbb
lds
aam
xchg
lahf
popa
and
push
xlat
fsubl
pop
scas
and
scas
cmc
jecxz
pushf
ds
cmpl
lods
lahf
push
pop
adc
jecxz
sub
adc
andl
fimuls
jecxz
dec
insb
add
push
ss
lock
pop
xchg
mov
pop
cwtl
mov
loope
dec
or
add
sbb
mov
loopne
popa
push
pop
cld
xor
stos
aaa
lea
mov
ret
mov
shrl
aam
and
ljmp
popf
push
add
adc
ret
jo
cld
mov
pushf
jmp
pop
jl
sbb
shll
pushf
inc
ljmp
shl
sub
dec
cmp
sub
push
cmovg
in
mov
xchg
repz
femms
lcall
ror
das
leave
imul
mov
idiv
lods
popf
aaa
mov
out
loope
lods
in
sub
lods
pop
inc
sub
insb
mov
scas
popa
push
clc
adc
and
sahf
cwtl
test
rorb
xor
jecxz
lahf
add
ja
mov
fdivrl
jbe
push
push
xchg
pop
cs
ss
into
cmc
and
mov
pop
mov
in
lods
stc
xor
fdivrp
cmpsb
pop
scas
xor
lods
jb
cmpsl
inc
push
mov
and
test
sub
push
xor
ret
sbb
mov
dec
mov
push
sbb
dec
pop
sub
pop
pop
pop
mov
pusha
arpl
jne
leave
dec
aas
repnz
xchg
sbb
scas
sti
push
lret
push
add
add
pop
cli
sub
das
rolb
and
mov
sbb
inc
jmp
mov
dec
icebp
popa
push
les
sbb
xor
cli
icebp
lods
hlt
movsb
test
push
xchg
popa
stos
jle
mov
xchg
add
jmp
mov
mov
xchg
or
push
push
mov
adc
icebp
push
std
aas
xchg
sub
out
xor
insb
je
stc
sti
pop
jecxz
adc
adc
pop
jnp
pop
movsb
ss
cs
sub
lret
sahf
adc
inc
fsubrp
js
das
mov
sarl
idiv
jne
push
push
mov
in
and
sub
cwtl
xchg
lea
mov
int
leave
jmp
xchg
adc
push
cld
add
xchg
or
add
imul
add
sbb
push
and
test
mov
lods
daa
mov
dec
ja
stos
mov
repz
mov
lcall
out
fwait
jg
add
nop
addb
mov
std
cmp
dec
dec
and
mov
sbb
dec
inc
xchg
test
cld
out
int3
dec
xor
or
aad
aam
insb
mov
sbb
repz
mov
das
shrb
jnp
push
ljmp
pop
movsb
jae
mov
sbb
sbb
fimull
mov
decl
pop
dec
int
repnz
cli
or
or
pop
xor
jne
adc
xchg
scas
in
lret
sub
sahf
ds
idivl
icebp
pop
add
je
sub
into
sub
sti
cltd
pop
std
loop
sub
sbb
jo
jmp
jae
outsb
sbb
sbb
mov
jmp
jne
lods
int
or
push
or
xchg
fldl
push
jae
lock
pop
repz
lea
pop
roll
loope
cmc
arpl
movsb
mov
sbb
stos
stos
add
outsb
bnd
rcl
test
bound
in
dec
push
jmp
scas
pop
lret
cmp
sub
aas
inc
loope
lret
push
push
xchg
mov
les
mov
mov
xor
inc
imul
das
cltd
push
xchg
sbbl
lcall
xchg
into
fisttps
fs
out
xor
test
rcrb
negb
cmp
rcll
pop
xor
push
aam
arpl
cmp
aaa
fsubl
lcall
adcl
fisubs
cmpl
fnstenv
mov
inc
fcmovb
pop
push
sarb
ja
test
leave
push
jo
out
sbb
sbb
and
aam
adc
sub
sahf
mov
pop
mov
popa
jg
push
or
pop
mov
stos
jle
or
les
inc
xor
xchg
test
mov
in
fisttps
hlt
mov
dec
add
adc
xchg
movsb
xchg
lahf
rcrl
movsb
stc
popa
xchg
iret
loope
shl
imul
jne
mov
out
in
and
movsb
push
fdivl
sbb
sub
xchg
into
lea
jg
std
dec
lcall
les
sub
cmc
into
fdivl
loope
lahf
dec
dec
sbb
xchg
push
jne
jne
pop
cmpsl
mov
inc
imul
cltd
add
in
aad
jno
cmpsb
sarb
xchg
out
mov
jnp
xor
jg
xchg
fildll
add
or
adc
rcrl
leave
or
sub
jg
push
popl
adc
cmp
lods
outsb
lcall
add
ljmp
sub
push
fistl
fucomip
dec
fldl
repz
movsl
add
or
ss
repz
pop
xor
outsl
mov
inc
inc
xchg
enter
bsr
imul
mov
adc
loope
xchg
lock
xchg
cmp
ds
xchg
sbb
pushf
sbb
push
lret
in
sub
inc
mov
outsl
mov
mov
shll
fld
leave
cmpsl
scas
cmpsl
mov
sbb
sub
ja
jl
and
dec
sub
and
mul
stos
push
aam
test
inc
add
rorl
add
shlb
push
xchg
add
cld
cmpsl
cld
ljmp
xchg
adc
mov
ds
inc
and
xchg
cmp
jecxz
push
pop
inc
mov
outsb
jo
pop
cmpsb
push
jl
and
and
ror
mov
xor
loop,pn
mov
imul
das
sti
pop
stos
mov
add
into
dec
mov
mulb
dec
movsl
cmp
xor
je
stc
inc
shr
loopne
xchg
push
dec
cld
sub
and
test
xor
adc
push
sti
mov
push
cs
jns
out
xor
push
js
mov
mov
add
fimull
int3
mov
adc
pop
jbe
cmp
test
pop
inc
sti
pmaddwd
arpl
popf
mov
cmp
cmp
lcall
dec
test
dec
loop
dec
repz
mov
arpl
pop
jb
jge
pop
popa
inc
rorb
cmp
repnz
push
arpl
inc
adc
jge
add
aad
xor
sub
stos
mov
xor
push
xchg
jae
and
sti
adc
inc
push
cs
dec
outsb
push
adc
push
dec
jecxz
mov
pushf
add
sub
xor
jno
lods
inc
es
sub
jne
mov
into
sub
fldenv
insb
out
icebp
jp
sbb
fidivs
jge
fiadds
inc
or
movsb
pop
ds
cwtl
aam
xchg
mov
inc
jne
pop
jle
cmp
clc
or
sub
or
cmpsl
cmp
ja
lret
popf
cmpsb
outsl
push
int
call
sbb
jno
pop
js
adc
stos
mov
and
popf
cltd
paddd
cld
mov
mov
fwait
addr16
push
jne
ja
pop
lret
outsb
dec
outsb
cmpsl
jg
lret
outsb
cwtl
jns
outsb
jl
inc
lods
xchg
dec
mov
repnz
add
hlt
push
cmc
jns
xchg
pop
decb
pop
mov
test
mov
aam
mov
pop
jge
and
push
dec
out
add
add
adc
xor
loop
dec
jp
pop
mov
ja,pn
mov
fninit
hlt
ret
jecxz
adc
add
xor
pop
or
add
mov
push
data16
imul
dec
sub
adc
ds
push
mov
in
jae
mov
pop
scas
jge
sbb
jo
dec
xchg
insb
int3
std
icebp
push
inc
hlt
jl
mov
es
sti
lods
mov
rcl
or
scas
cmp
sbb
pop
push
sbb
daa
add
popa
add
sbb
pop
lahf
cli
enter
arpl
clc
jmp
push
cwtl
mov
subl
jnp
rol
leave
int3
fidivs
mov
inc
adc
ret
jns
mov
fisubs
lret
mov
out
lret
lock
nop
popf
std
jo
add
js
bound
mov
xchg
ret
or
pop
cltd
cmpsb
in
cmp
push
dec
mov
mov
pushf
xchg
dec
lret
dec
inc
lds
or
popf
mov
loopne
jb
push
stos
lods
shl
xorl
lea
jo
sahf
push
push
or
aaa
rclb
inc
xchg
xor
or
pop
lcall
stos
mov
adcb
mov
ret
adc
aaa
scas
and
add
fisubl
fwait
call
push
dec
clc
es
in
push
lahf
sahf
test
push
cmp
push
cmp
jmp
andb
inc
cwtl
incl
inc
repnz
push
xchg
adc
dec
icebp
negb
lock
hlt
dec
xchg
lods
sub
pop
or
into
push
xor
out
or
lds
sbb
jp
je
push
mov
enter
sub
icebp
push
call
pop
in
and
icebp
pop
push
loop
xor
js
into
adc
cltd
add
test
xor
dec
in
xchg
repz
fstpl
sti
add
mov
jnp
and
mov
inc
adc
lret
mov
pop
mov
cmc
sub
sahf
push
sub
adc
iret
and
lods
clc
and
cwtl
nop
push
test
fstpl
mov
cld
nop
jg
shlb
imul
cmp
mov
iret
mov
add
xchg
dec
sbb
jns
ja
sub
cmp
negb
pop
xor
out
and
dec
add
mov
add
adc
data16
sahf
ret
jae
sub
nop
cmp
bound
xlat
clc
stos
pop
mov
jl
mov
xor
dec
test
jns
aaa
mov
jbe
fldt
dec
cmp
xor
xor
push
jns
pop
jnp
aas
cmpb
xchg
sbb
pop
fwait
dec
pop
jne
jl
pop
stc
into
cld
call
or
addb
loopne
mov
mov
test
je
pop
mov
mov
cmpsb
cs
mov
xchg
push
cmc
mov
mov
outsl
xchg
shll
adc
outsl
fsts
add
and
leave
pop
inc
ja
xor
mov
xlat
sbb
fldcw
xchg
jbe
daa
mov
cmp
popf
inc
or
dec
arpl
lods
jb
push
push
cld
sub
gs
mov
or
cmp
les
jo
icebp
aad
add
add
pusha
test
loop
inc
in
outsb
loopne
gs
in
outsb
mov
fstl
pop
stc
xchg
mov
xchg
hlt
cmp
pusha
lods
dec
and
sahf
test
je
cmp
sub
and
pop
arpl
push
push
insb
gs
mov
adc
jecxz
jecxz
pop
int3
loop
addl
enter
push
mov
jns
and
lcall
jo
lods
xor
jnp
sbb
les
xchg
fmull
iret
adcl
jns
arpl
sti
jns
xor
jmp
scas
sar
enter
cmpb
push
ror
inc
scas
and
les
xchg
lds
mov
rcll
es
cmp
or
aaa
sbb
rcrb
shrl
inc
bound
test
adc
xchg
jle
movsl
fmull
in
cmp
hlt
loop
push
cmp
stc
xchg
or
nop
mov
std
test
out
test
inc
mov
nop
add
movsl
jae
sbb
sbb
test
cmpsb
cmp
add
gs
mov
cmpsl
in
jp
inc
stos
add
fcompl
push
fcomip
jb
cwtl
mov
dec
lock
push
push
dec
sahf
pushf
and
stos
add
or
roll
adcl
xchg
arpl
enter
jbe
or
push
and
mov
cmp
push
lock
adc
enter
addr16
mov
in
scas
mov
bound
dec
bnd
push
mov
sti
xor
push
dec
ljmp
out
pop
test
inc
push
leave
sbb
xchg
sbb
jnp
mov
pop
movsl
and
cmp
mov
or
nop
xlat
jge
cmp
mov
push
fs
shr
pop
mov
cmp
sub
cmpsb
jg
push
or
jl
adc
or
lahf
jno
cmpsl
adc
push
mov
pop
or
dec
adc
ljmp
movsb
cli
sub
out
push
ljmp
int3
mov
jl
jg
xchg
mov
and
add
push
ss
sub
xchg
push
ret
sbb
sbb
adc
jo
mov
push
jae
push
adc
test
outsb
in
cmp
xchg
push
inc
and
shlb
adc
or
dec
movsl
add
movsl
aaa
lcall
mov
sub
mov
sub
push
push
pop
or
mov
mov
inc
and
out
insb
push
out
sub
out
inc
andl
mov
int3
lock
std
mov
fs
in
and
nop
std
es
imul
pop
jmp
mov
and
mov
lahf
scas
add
sub
jp
fdivrl
cwtl
inc
pop
push
mov
xchg
test
dec
daa
mov
cmp
hlt
rcl
shll
addl
jno
adc
or
cli
shl
vorps
repnz
and
push
xchg
repz
fwait
push
jns
repnz
int
data16
xchg
arpl
jb
enter
pushf
scas
adc
repz
ss
stos
rol
out
xor
xchg
call
daa
data16
jmp
inc
pushf
testl
mov
ja
mov
mov
iret
cs
cmp
push
xchg
insl
push
xchg
dec
ljmp
lods
pushf
mov
adc
fiadds
push
aad
and
push
xchg
or
pop
xor
out
cmc
bound
add
inc
mov
outsl
xchg
pop
sti
shll
xchg
out
lahf
cmp
push
fldl
std
imul
xorb
or
push
jno
in
add
add
mov
xlat
push
push
jno
subl
sbb
es
sbb
mov
jecxz
xor
pushf
dec
cld
add
test
cs
mov
lds
mov
pop
pop
push
push
imul
pop
cmpsl
fidivrs
inc
pop
out
shlb
jnp
or
lea
fidivrs
sub
sub
roll
mov
movsl
lahf
in
scas
daa
push
mov
and
dec
std
into
jne
dec
cltd
fs
out
push
jg
pushf
es
push
call
push
xor
fs
sbb
ds
imul
jecxz
dec
jge
lds
icebp
dec
push
nop
add
insb
sub
add
jl
cmp
jmp
out
pop
cld
loope
jne
scas
outsb
xlat
cmp
and
xchg
inc
sarl
outsl
mov
notb
mov
sarb
pop
imul
xchg
je,pn
ror
xchg
in
gs
mov
xchg
jg
dec
push
imul
rcll
lea
into
rorl
xor
aaa
mov
ss
js
shrl
mov
mov
or
add
or
loopne
dec
pop
mov
or
or
out
fsubrl
jmp
mov
pop
orb
pushl
cmp
cld
std
cwtl
jle
bound
cs
dec
lods
pop
and
cmc
jno
es
xchg
lea
fsubs
icebp
dec
sbb
jae
bound
shrb
cmp
jns
sub
stos
mov
sub
add
ds
add
mov
rcr
int
aad
xlat
rclb
inc
in
addl
push
mov
jns
sub
std
and
pop
inc
mov
loope
and
sbb
lret
jno
scas
inc
or
pop
ljmp
xor
cli
fbstp
jb
and
int
jge
fildl
in
pop
mov
xchg
enter
scas
out
lahf
clc
push
sti
cli
adc
mov
insl
fnstcw
xchg
test
push
add
fistl
push
repz
or
mull
cmpsl
add
rcll
pop
dec
inc
jle
jo
lods
movsb
pop
jmp
pop
pop
mov
rolb
xchg
pop
lret
pop
xchg
int
fistps
mul
dec
pop
lea
xchg
cli
sub
outsb
aad
sahf
popl
pop
push
jae
dec
push
push
rorl
inc
push
nop
cmpsl
fdivrl
insb
jb
push
outsb
gs
int
adc
jns
in
or
inc
daa
inc
pop
test
and
clc
dec
pop
fstps
jge
mov
sub
push
cmpsl
cmp
je
jl
jo
xchg
in
mov
or
arpl
mov
insl
jnp
aas
jb
cli
jbe
sub
icebp
mov
outsb
mov
or
jbe
mov
xchg
daa
lcall
sbb
mov
jg
into
mov
ret
sub
gs
iret
mov
sub
adc
xlat
and
add
lret
decb
jmp
adc
mov
push
cli
xchg
mov
data16
lea
imul
std
cmp
outsb
push
icebp
jno
mov
sbb
lret
insb
jg
xlat
cmp
add
jns
clc
int
pop
push
fldcw
rorb
sub
sub
scas
jge
xchg
stos
mov
and
xor
mov
jno
push
inc
push
adc
lods
jbe
inc
adc
inc
inc
add
cltd
pop
icebp
mov
fsubrl
das
dec
stos
negb
push
sti
test
jbe
cwtl
dec
pop
dec
push
mov
rol
mov
in
inc
sbb
pushf
imul
xchg
mov
sti
adc
fcompp
lock
push
or
fnstenv
xor
sbb
divl
pusha
or
inc
mov
dec
icebp
mov
out
push
leave
jp
popf
mov
in
fwait
icebp
push
mov
sbb
nop
inc
adc
testl
inc
pop
bound
push
and
mov
or
pop
ss
sar
adc
inc
xchg
outsb
repnz
xchg
cmpsl
cwtl
push
inc
out
mov
cmp
push
inc
xchg
iret
mov
push
pop
or
jl
xchg
cmpsb
fs
sbb
clc
inc
js
clc
aad
leave
aas
cmp
in
dec
or
push
push
insl
xchg
or
mov
xchg
insb
add
ds
jge
cli
into
cld
pop
ss
cmc
es
and
stc
and
pushf
addr16
lds
mov
add
sbb
inc
xor
jae
out
aad
pop
xchg
movsl
adc
pop
mov
stos
cld
push
mov
mov
sub
test
inc
dec
sbb
fs
push
push
xor
pop
mov
cmp
mov
dec
mov
imul
pop
mov
pop
test
and
fs
pushf
push
mov
subb
dec
imul
fstps
inc
jo
cld
js
clc
dec
cmpsl
pop
xorl
push
mov
jg
ret
or
cmc
movsl
cwtl
push
jo
inc
lods
lcall
push
sub
ljmp
fs
mov
lock
mov
and
dec
pop
stc
lods
lret
dec
fwait
sub
mov
xchg
jle
aam
adc
sub
ljmp
cmpsl
cs
aaa
or
pop
dec
bound
sbb
fistpll
push
xor
xor
pop
jae
cwtl
mov
in
push
data16
and
cs
ret
inc
sbb
adc
es
pusha
cltd
push
test
xchg
inc
xchg
mov
jmp
imul
lcall
fimull
aad
xchg
pop
xchg
pop
dec
shll
adc
out
cli
je
pop
mov
mov
xor
mov
bound
nop
xor
idiv
scas
jne
and
bound
add
and
inc
cmpsb
daa
daa
mov
xchg
xchg
scas
lods
xchg
jg
daa
stc
movsb
adc
push
mov
sub
pop
jbe
adc
jecxz
xchg
loope
cmpsl
mov
inc
mov
rcll
mov
pop
cli
cmp
and
sahf
sub
pop
aaa
jno
pushf
mov
mov
div
mov
jo
inc
call
inc
mov
push
mov
pushf
sub
stos
or
arpl
xlat
inc
popa
leave
mov
cs
mov
ja
jp
push
fwait
add
jbe
std
arpl
clc
call
sub
fsts
push
incl
mov
mov
js
pop
xor
push
xor
sbb
pop
dec
imul
movsb
ss
sbb
jge
leave
adc
adc
lea
dec
out
icebp
in
lock
rcr
sbb
stos
test
icebp
sbb
pop
or
adc
inc
cmpsl
cwtl
jo
sub
leave
pop
stc
data16
addr16
push
movsb
cmpsl
adc
xchg
jge
dec
jge
inc
in
xor
pop
sub
outsb
mov
mov
addr16
mov
mov
and
mov
jmp
imul
sti
test
or
mov
sbb
cltd
test
mov
or
xchg
jae
nop
das
jbe
sti
popl
clc
cwtl
shll
jne
or
mov
mov
test
rorl
movsb
mov
mov
jg
jo
jmp
mov
std
xor
lahf
push
sarb
insl
mov
in
stc
mov
cmp
mov
xchg
add
loop
orb
cmpsb
movsb
clc
dec
aad
hlt
aam
adc
lahf
adc
mov
mov
sahf
inc
arpl
dec
or
jne
mov
add
mov
mov
stc
add
out
leave
jns
push
xor
dec
rolb
popa
dec
es
cli
xlat
imul
xchg
mov
test
cmp
mov
adc
pop
es
pop
scas
jle
pop
mov
xchg
cmp
xor
jbe
push
xor
lods
int
cmp
mov
or
inc
adc
xchg
jmp
int3
test
dec
dec
jne
idivl
jl
jmp
or
push
dec
popa
into
inc
sub
sbb
mov
stos
icebp
dec
dec
jge
mov
mov
dec
pop
enter
mulb
test
aas
mov
inc
cld
sbb
push
jle
cmc
sub
add
insb
outsb
test
mov
xor
inc
loopne
movsb
jmp
mov
jg
sub
in
jle
dec
stos
sbb
mov
add
mov
sbb
xor
add
push
jecxz
inc
sbb
xchg
pusha
aas
fstl
cmpsl
hlt
or
sub
int3
push
pusha
jmp
orb
packssdw
stos
mov
xchg
lret
push
std
dec
push
jae
mov
ds
or
filds
push
lods
in
dec
and
sar
test
in
adc
push
in
rol
pop
mov
push
push
loop
out
adc
add
xor
jno
mov
dec
lea
push
mov
rcrb
push
and
das
cmpsb
in
or
mov
sbb
scas
mov
gs
mov
dec
inc
cmp
cmp
xor
or
adc
mov
xor
in
loop
mov
inc
cmp
stos
jmp
xor
rorl
fld
ds
pop
jb
imulb
test
add
inc
add
mov
cld
testb
icebp
js
push
pusha
push
xchg
adc
add
dec
sbb
outsl
or
pop
jno
jge
adc
adc
mov
sbb
pop
mov
out
jne
sbb
push
sub
ret
sub
jle
sub
adc
lea
cltd
lret
das
mov
hlt
dec
mov
mov
cmp
mov
rcl
sbb
cltd
xchg
and
lcall
arpl
je
jnp
loopne
inc
sarl
data16
insb
iret
pop
in
xchg
loopne
aas
out
stos
adc
inc
mov
or
cmp
push
and
sarb
mov
xor
sahf
sahf
mov
push
push
int3
cmpsl
cmp
jl
cld
xor
rolb
add
jbe
mov
xchg
pop
je
mov
pop
test
aas
jecxz
imul
adc
xor
lahf
push
inc
push
xor
pop
xor
xorl
mov
jecxz
cmpsl
cmc
stc
push
or
je
cmpsb
add
das
ds
fidivrs
js
ljmp
scas
ja
jl
xor
or
sub
fs
xchg
mov
push
sub
mov
mov
add
inc
push
fdivs
pextrw
mov
stc
cmp
and
xchg
xchg
xor
lods
mov
dec
push
pop
and
xor
jl
mov
jo
std
jle
jp
sahf
inc
xlat
fwait
gs
out
popa
mov
dec
les
dec
sub
out
shll
and
and
fisubl
adc
add
mov
sub
dec
jmp
sub
in
std
aam
lret
xor
mov
adcb
jmp
test
lods
rorl
add
test
mov
stc
xchg
les
into
in
push
daa
rorb
inc
xor
popf
das
or
mov
je
fistl
or
sti
sti
mov
pop
sbb
cmp
sahf
inc
insb
sbb
and
sub
sub
pop
add
xchg
lcall
dec
xchg
les
push
mov
inc
sbb
jae
stos
lods
jnp
cld
ficoms
add
cmp
sbb
mov
pop
jno
jle
fnstcw
jg
push
inc
xchg
adc
pop
add
push
and
aas
add
sbb
gs
stos
fwait
icebp
enter
and
sarb
mov
push
or
ret
jecxz
sahf
nop
sub
inc
pop
or
nop
inc
adc
imul
rolb
mov
xor
mov
jae
ret
add
pop
test
mov
mov
dec
cmp
daa
scas
ret
pop
test
lahf
inc
divb
icebp
and
jno
push
xor
in
add
sbb
cli
arpl
dec
cli
cmp
in
cmp
xor
and
pop
xchg
mov
adc
cld
cltd
aad
je
mov
ret
aas
or
adc
xchg
xchg
add
cmp
xor
insb
sbb
pmovmskb
mov
sub
sbb
inc
sub
dec
inc
out
sbb
movsb
int3
jo
fidivl
or
leave
rcll
push
adc
push
jne
adc
push
dec
pop
fs
add
mov
in
aam
movsl
xchg
add
ljmp
loope
scas
dec
lcall
sub
or
mulb
sbb
dec
and
dec
stos
and
and
and
and
and
sub
out
femms
sub
je
out
not
mov
lret
sub
xor
movsb
cmpsb
pop
sub
jne
mov
std
jnp
decl
sbb
cmp
sub
jg
mov
ljmp
pushl
rcrl
adcl
xchg
jno
or
cmp
adc
adc
jmp
por
adc
stos
xlat
xchg
or
mov
sub
and
sahf
repz
sbbb
xchg
fsubrl
cmp
push
mov
lret
xchg
cmp
fmul
cmpsl
iret
push
mov
mov
inc
cli
test
pop
cmp
ss
int3
mov
scas
fldl
mov
adc
cli
test
fs
lock
je
into
cwtl
or
push
clc
outsl
daa
lock
xchg
test
outsb
inc
mov
cs
repz
pop
lret
inc
xchg
jmp
jecxz
ror
mov
cmc
jb
add
mov
lock
xchg
gs
mov
mov
inc
aam
je
mov
push
or
mov
sub
or
jb
je
or
and
mov
jmp
dec
daa
jb
movsb
xchg
push
arpl
fwait
mov
jle
pop
push
pop
push
mov
mov
or
aam
jb
int
test
aaa
or
push
bound
fldcw
push
andl
test
gs
mov
hlt
and
aaa
sub
xlat
add
mov
jo
in
mov
push
sbb
adc
push
fs
jb
addb
in
rcrb
lds
pop
dec
sub
xchg
mov
scas
jne
rorl
pop
es
push
or
sub
mov
decb
add
jmp
push
add
push
inc
loopne
push
orl
push
das
pusha
mov
inc
jle
xchg
data16
sbb
sbb
sbbb
push
cmp
jge
mov
or
das
push
adc
inc
cwtl
mov
push
inc
xchg
cmp
popf
adc
imul
adc
test
addr16
movsl
in
movsl
mov
push
cmp
leave
jne
outsb
iret
popa
roll
sub
dec
dec
and
xchg
mov
sbb
aaa
fimuls
sbb
inc
fldenv
add
adc
inc
jmp
test
sbb
stos
pushf
or
pop
into
mov
jmp
lret
jecxz
idivl
push
sar
sub
fists
call
insb
scas
xor
dec
inc
mov
adc
xchg
lds
jns
cmp
rcr
idivb
sub
ret
aaa
movsl
ds
je
mov
imul
ss
jecxz
sub
dec
inc
jno
stos
sbb
push
cmp
mov
roll
lea
outsb
add
or
sub
cld
int
inc
scas
sbb
mov
mov
ret
push
mov
mov
mov
daa
std
push
sub
subb
dec
test
cwtl
test
pop
and
xchg
mov
pop
scas
aas
xchg
sbb
mov
xchg
jmp
lcall
pop
aas
lahf
pop
mov
jae
inc
fiaddl
psubsw
mov
dec
lds
rcll
imul
stos
xchg
push
push
jnp
pop
rorl
jecxz
out
lock
xchg
xor
cmc
loop
and
mov
adc
mov
add
xor
pop
push
jo
cmp
cwtl
loop
mov
pop
xchg
push
iret
arpl
jge
scas
xchg
cmc
dec
xchg
inc
mov
ror
fcomp
lcall
push
test
or
stc
xchg
cmc
lahf
xchg
cs
mov
inc
or
cmp
cltd
adc
je
fdivrs
mov
inc
sbb
pushf
scas
sbb
add
rorl
jg
xchg
add
mov
lret
inc
mov
xor
cmp
stc
pop
cs
adc
loopne
xchg
fs
cmp
mov
enter
push
dec
inc
popf
ret
roll
dec
adc
rolb
mov
out
fistl
cmp
filds
mov
lahf
and
pusha
mov
cli
out
out
fwait
or
sub
in
das
add
sub
jg
push
and
push
insl
lret
mov
pop
inc
loop
es
lcall
aad
daa
cmp
cmp
add
je
fcoms
movsl
movsl
sbb
sub
sti
scas
iret
test
daa
outsl
inc
adc
inc
and
push
jl
pop
daa
roll
lock
pop
sub
mov
sbb
in
cmpsb
in
push
mov
jb
fs
leave
pop
jl
mov
repz
sar
pop
inc
mov
movsb
and
arpl
xor
rcr
outsl
or
pushf
sub
mov
jns
hlt
loop
fwait
out
mov
test
loope
fwait
leave
jns
mov
and
mov
lea
cmp
mov
sub
mov
sti
jg
aad
lret
aad
test
test
adcb
dec
pop
icebp
sti
cmc
cmp
loope
cmc
nop
in
mov
xchg
push
notb
in
movsb
stos
xor
fs
and
arpl
test
dec
xchg
icebp
insl
fcomps
cmp
arpl
mul
dec
add
fs
jl
jae
mov
notl
push
mov
in
mov
fimuls
or
push
adc
scas
jne
fldt
or
adc
xchg
adc
mov
push
pushf
dec
jge
insb
ror
mov
aas
jne
mov
loopne
inc
jo
ds
mov
mov
js
stos
push
addb
mov
test
pop
xchg
dec
dec
addb
mov
ret
movsl
sti
inc
aaa
or
sbb
movsb
jecxz
xchg
ljmp
adc
lds
inc
mov
sti
push
out
bound
stc
pop
fimull
sub
mov
out
je
jl
ja
loopne
arpl
cmp
imul
je
mov
rcr
and
call
mov
dec
cmp
push
inc
dec
dec
sbb
addb
sbb
clc
mov
mov
shl
lret
fmull
popa
dec
mov
xor
push
adc
pusha
andb
ljmp
inc
das
and
push
ret
xchg
imul
jmp
sbb
repnz
pusha
jg
aaa
ljmp
mov
sub
pop
mov
clc
pop
in
dec
pusha
pop
sbb
mov
dec
inc
pop
cmp
jo
dec
pop
and
popl
jle
rorb
sub
inc
cmp
insl
xor
cmp
jl
and
mov
adc
aas
or
jb
ljmp
or
xchg
shl
cmp
lock
scas
aad
ljmp
in
es
jae
cmp
sbb
jne
or
negl
mov
jb
xor
jnp
jne
pop
aam
cmp
lock
imul
test
repnz
and
arpl
iret
jne
shl
or
mov
jle
nop
jecxz
jp
xchg
jge
mov
cld
mov
dec
fwait
daa
call
mov
sub
xorb
in
mov
in
test
outsb
sbb
sbb
or
push
lea
movsb
jp
mov
int
lahf
mov
inc
popf
repz
or
cmp
mov
sub
loopne
inc
push
mov
jl
cli
cltd
mov
inc
data16
cli
rcll
pop
xchg
or
sub
shlb
popf
mov
inc
jmp
ja
fldt
movsl
add
or
sbb
in
fnsave
pop
mov
xor
xchg
cmpsb
sti
xor
jg
jo
scas
and
jae
inc
jge
pop
repnz
inc
cmp
fiaddl
sub
cmp
aad
call
ds
dec
sub
xor
add
inc
nop
jns
in
inc
int
dec
or
nop
or
rcrl
push
or
push
out
adc
sti
mov
sub
nop
insl
sub
xor
sub
out
mov
fs
leave
mov
sub
mov
gs
jns
adc
test
mov
gs
push
inc
popf
or
fsubrs
sub
push
bound
inc
sub
and
faddl
xchg
ficomps
jg
sub
sbb
adc
inc
loopne
fstp
add
inc
out
lods
popa
or
xchg
fdivp
repz
or
ljmp
cltd
xchg
sbb
pop
shl
cmpsl
lods
pushf
jp
adc
lcall
stos
pop
xchg
sub
ret
add
sub
add
add
das
mov
cmp
sahf
push
lahf
js
mov
sarl
push
or
lock
negl
cmc
fs
outsb
jb
das
xchg
push
and
pop
adc
fdivrl
loop
in
mov
inc
cmp
fldpi
pushf
add
fistps
icebp
jle
sub
inc
push
jae
push
jne
mov
jae
dec
push
mov
jmp
gs
adc
or
out
in
xor
outsl
dec
lods
pusha
in
push
push
ds
pop
popa
lock
scas
lock
out
add
ss
sbb
or
sbb
fdivr
push
nop
mov
gs
push
js
push
push
and
es
jbe
cmp
or
fwait
cmp
lea
lds
jecxz
pop
cmp
add
fistl
pop
jae
mov
mov
in
mov
jle
mov
sbb
lock
sbb
lds
adc
and
xor
xor
adc
adcl
mov
imul
out
in
jl
pop
sub
adc
in
stos
dec
xchg
ret
pop
fisttps
sub
cltd
das
push
roll
inc
lcall
mov
lcall
mov
sahf
idiv
js
mov
xchg
cmp
inc
ficomps
add
and
sbb
fstpt
pop
add
mov
xchg
dec
jo
pop
enter
pop
xlat
lea
push
daa
cmp
jmp
add
mov
or
push
shll
add
push
sti
jb
mov
popa
aaa
sbb
xchg
ret
dec
or
in
push
cmc
arpl
addr16
jne
lock
ljmp
jb
fcomi
aam
js
lods
mov
sub
cmp
push
sbb
loopne
sarl
cmp
mov
sbb
xor
push
test
mov
hlt
into
push
test
adc
aaa
mov
cmp
dec
icebp
adc
fmuls
push
in
imul
mov
lds
push
fnsave
xor
pop
and
sti
pop
cmpb
stos
adc
stc
out
cwtl
aam
ss
ficompl
cmc
xor
or
popf
pop
jb
xor
sar
mov
mov
popa
cmpsl
ja
mov
mov
push
int3
mov
mov
in
jge
jno
cmp
imulb
sbb
jmp
jmp
mov
pusha
mov
add
or
out
lods
pushf
stc
push
pushf
or
and
mov
pushf
imul
insb
jmp
call
push
push
mov
jae
roll
add
and
pop
sub
or
pop
das
adc
clc
arpl
and
jp
pop
jno
fsubrl
arpl
js
jns
pop
or
dec
mov
mov
adc
jle
cwtl
adc
push
cmp
stos
inc
jle
cwtl
hlt
mov
mov
sbb
jns
push
adc
mov
imul
mov
mov
mov
adc
cltd
hlt
cwtl
jne
push
xchg
pop
pop
mov
test
jmp
hlt
imul
mov
sbb
sbb
add
fbld
xor
fnstenv
add
jns
stos
ret
jo
ret
aaa
imul
orl
lahf
xor
xor
push
aad
sbbl
mov
or
lea
fidivl
stos
xchg
pusha
fcoml
inc
pop
leave
sbb
push
int
pop
adc
pop
mov
daa
leave
rcll
xchg
push
fisubl
aad
bound
or
imul
test
int3
fwait
mov
daa
pop
inc
xchg
xchg
aad
cmp
leave
mov
adc
leave
jbe
cmpsb
xchg
cwtl
ljmp
add
outsb
lock
adc
ss
pop
mov
popf
leave
xchg
out
loop
je
jae
fldenv
xchg
cmp
cltd
shlb
push
leave
loopne
cmpsb
lock
and
jo
movswl
xchg
sbb
lods
call
sbb
adc
mov
fcompl
repz
pushf
mov
pushf
push
and
test
mov
or
push
sub
dec
ljmp
loopne
fcomip
dec
movsb
in
push
push
int3
inc
push
mov
incb
inc
sub
push
jns
jmp
fidivrl
add
movsl
mov
test
les
cs
xor
cmp
mov
xor
adcb
xchg
push
rcll
int3
push
out
clc
test
test
mov
inc
adc
mov
push
cli
mov
rorb
ret
push
in
xor
sub
lock
pop
scas
es
pop
imul
inc
pop
std
push
lods
inc
xchg
mov
fstl
pop
rclb
xor
icebp
test
xor
xor
ret
je
pop
jae
jmp
sbb
jne
push
jnp
push
daa
mov
addl
lods
pop
pusha
add
bound
mov
adc
add
shll
ret
insb
push
jg
fsubs
nop
ret
cmp
lcall
or
mov
subb
add
xlat
lret
cmp
xchg
mov
mov
orb
mov
scas
sbb
jo
push
jno
jne
push
fs
push
mov
xor
mov
xchg
or
jbe
int3
jg
xchg
sbb
jb
push
cmpsl
mov
mov
pop
cmp
cmpl
lock
aad
mov
cmp
pop
and
sahf
sbb
rcrb
mov
jo
lds
jns
push
and
sbb
or
sarb
and
lods
mov
mov
imul
das
loop
clc
fcoms
call
call
clc
inc
daa
cmp
mov
adc
fcomp
shr
sub
xor
in
xchg
pop
mov
jb
es
ss
mov
and
pop
stos
jnp
mov
fdivrs
add
inc
cmp
and
jle
xor
pop
shrl
xor
sbb
cs
sub
popfw
fwait
cmp
pop
and
in
mov
pop
jne
push
cli
cld
push
jge
or
xchg
push
push
add
movsl
push
cmpsl
out
repz
mov
xlat
andl
fstpt
jno
xor
in
in
lahf
and
stos
lret
xor
xchg
mov
shrb
push
xchg
and
push
push
int
movsb
pop
gs
imulb
xlat
jns
and
push
or
inc
scas
push
cmpb
cmp
cmc
dec
adc
jno
daa
test
divl
fistl
cmp
inc
or
stc
pusha
mov
add
xchg
xchg
daa
shll
movsb
lret
pop
bound
or
enter
divl
cmc
jecxz
xor
mov
orl
lcall
mov
cs
jp
fmull
daa
inc
dec
outsl
xchg
test
cmp
sbb
sbb
test
jge
rcrb
cmp
jle
jb
pop
ljmp
js
rcrb
ret
add
gs
cmp
and
mov
or
xor
cltd
xchg
fsts
push
into
mov
cwtl
das
inc
push
movsl
dec
test
mov
inc
sbb
mov
push
ja
mov
nop
jp
push
jecxz
mov
insb
dec
loop
mov
sbb
mov
xchg
jae
sbb
or
cld
mov
ja
adc
test
int
or
pop
sbb
xor
jg
push
out
js
cli
bound
xlat
pop
cmp
adc
pop
pop
and
jb
stos
pop
push
dec
mov
outsl
push
repnz
add
xchg
pop
adc
and
gs
cmp
clc
mov
lret
push
jbe
rorl
in
int3
cmpsb
sbb
xchg
shlb
xor
ss
dec
lock
inc
movsb
push
add
out
dec
movsb
jle
pushf
je
mov
ds
push
mov
dec
mov
dec
mov
mov
ljmp
into
inc
rolb
and
sub
mov
jae
sbb
mov
sbb
mov
loope
lea
addl
aaa
gs
lahf
jne
adc
stos
and
cmpsl
pop
ret
outsb
pusha
mov
stos
sub
xor
test
xchg
jmp
shlb
xor
dec
ret
xchg
das
lret
lock
sti
sarb
push
push
stos
mov
cmp
cmc
jnp
nop
lcall
sub
fldenv
popa
gs
push
cmpsb
arpl
xchg
mov
inc
sbb
cmpsb
push
and
decl
cmp
movb
and
repnz
mov
mov
jp
push
sub
into
or
pop
gs
sahf
iret
push
loop
pushf
incl
sbb
push
pop
shr
xchg
adc
fiaddl
and
aas
inc
sub
outsl
mov
cmp
aad
out
lods
xchg
add
pop
xor
adc
pop
aas
das
jns
pushl
xchg
fs
xor
pop
lea
add
mov
arpl
jle
dec
sti
in
pop
stos
lret
xchg
aad
dec
xchg
add
daa
movsb
outsb
cmp
repz
lret
mov
test
and
and
cltd
stos
xchg
int
dec
inc
cmp
aam
push
mov
pusha
mov
xor
adc
sub
into
adc
call
scas
hlt
adc
xlat
sub
icebp
rcrl
sbb
and
mov
pop
and
mov
incl
std
and
neg
jg
ret
push
cwtl
cld
mov
loop
out
and
out
sub
rcrb
cmp
push
mov
insl
xor
aam
dec
nop
fisttpll
push
movsb
fdivrs
xchg
jle
clc
int
add
pop
js
stos
inc
sbb
adc
repnz
lock
and
mov
sbb
adc
mov
xchg
mov
call
call
push
mov
int3
ret
test
mov
loopne
ret
xor
movsb
mov
das
xchg
insl
negb
fstps
aas
or
aas
cld
jo
lods
mov
dec
and
rcrb
xlat
or
lods
mov
loopne
xor
xchg
inc
test
push
movsl
cli
jo
sbb
mov
movsb
pop
jl
pop
mov
ret
mov
fwait
in
mov
mov
mov
add
lock
mov
movsb
xor
dec
fwait
lret
inc
pop
nop
decl
mov
stos
stos
xlat
push
imul
in
pop
xchg
dec
adc
in
mov
xchg
stos
dec
or
testl
mov
fwait
ret
dec
jnp
daa
in
mov
sub
inc
push
jle
sbb
xchg
sub
add
cld
and
scas
pop
jb
les
cmp
adc
cmpsb
cmp
movsb
adc
addb
pop
arpl
adc
addr16
jbe
cmp
pop
cmc
or
ret
or
icebp
ds
jl
xlat
shr
int
inc
sbb
testl
enter
insb
idiv
and
sbb
orl
sahf
nop
adc
push
or
jecxz
push
loopne
ljmp
sbb
cs
jo
adc
sub
push
add
mov
popf
jl
xchg
mov
imul
push
cmp
ret
adcb
jge
mov
es
mov
out
pop
int3
jae
inc
loop
pop
test
dec
ds
xchg
xchg
adc
sub
bound
scas
mov
pushf
loope
jb
stos
data16
outsb
mov
inc
shll
shrl
push
subb
icebp
jecxz
mov
pop
cmpsb
and
jge
xchg
int
jl
pop
out
adc
and
fmul
jb
shl
test
in
insl
or
outsb
dec
lods
test
int
in
jmp
inc
jo
pop
popa
xchg
pop
and
and
mov
and
ret
cmovg
cmp
jo
inc
pop
pop
or
not
mov
loop
push
loopne
inc
jp
xor
hlt
jbe
push
stos
xchg
mov
push
pop
loopne
dec
and
loop
dec
mov
push
stos
jnp
xor
roll
pop
add
xor
cmpsb
mov
dec
adc
pop
inc
repnz
adc
scas
ss
cmp
addr16
pop
xchg
or
stos
aas
mov
lret
push
leave
jno
cmpsl
inc
jle
add
adc
testb
jne
jb
adc
fadd
movsl
and
loopne
or
jnp
mov
dec
push
add
mov
or
aad
xorl
fsts
mov
or
inc
sub
mov
jge
mov
lods
dec
and
mov
dec
add
lahf
xor
mov
enter
dec
and
and
sub
add
hlt
mov
pop
xchg
pop
adcb
data16
inc
cmc
sbb
ljmp
rorl
rcr
mov
fisttpl
cmp
pop
lret
push
mov
stos
pusha
xor
ja
das
or
pop
mov
inc
xlat
lret
sahf
sbb
outsb
sbb
mov
loop
out
mov
xor
xchg
rorb
push
xchg
in
fwait
pop
pusha
outsl
push
mov
and
mov
jmp
pop
arpl
mov
mov
inc
lcall
xlat
adc
cmp
push
xchg
mov
cmp
in
sbb
mov
sub
inc
pushf
jecxz
xor
ss
sub
cmp
sbb
cmp
clc
scas
mov
pop
shlb
pushf
mov
sub
cmp
mov
iret
sbbb
inc
int3
das
pop
in
sbb
and
inc
ret
and
push
int
dec
repnz
rorl
lret
xchg
push
sbb
mov
inc
adc
adc
shll
lea
es
jl
test
mov
das
xor
xchg
inc
or
int
xchg
popf
xchg
mov
xchg
in
sub
notl
add
movsl
int
inc
jl
and
add
mov
out
sub
push
pop
push
int3
addr16
jns
inc
adc
mov
lcall
xchg
lods
and
dec
mov
mov
lock
mov
fs
jecxz
xor
jae
xchg
dec
jle
cmc
or
or
inc
sub
mov
sub
pushf
mov
test
pop
push
push
dec
lret
leave
cmpsb
add
jbe
cld
and
jae
dec
mov
mov
or
stos
outsl
int3
cli
inc
movhps
inc
mov
xchg
xchg
mov
ret
xchg
out
int3
xor
dec
push
dec
pop
mov
push
imulw
sub
dec
addr16
inc
rorl
sarb
mov
cmpsb
push
fs
mov
inc
xchg
sub
pop
daa
popf
xchg
rclb
adc
stos
dec
jecxz
sbb
popa
lcall
xor
xor
ret
and
data16
add
out
mov
imul
cmp
in
jns
cmpsl
cwtl
idivb
stos
mov
rorl
inc
ficoms
aaa
in
outsl
mov
inc
mov
and
out
mov
insb
repnz
dec
pushl
mov
xchg
fadd
add
cmpsl
in
mov
sbb
stos
loop
aad
je
out
bswap
mov
lock
les
stos
xor
inc
fwait
lret
jmp
add
mov
mov
ljmp
cmp
nop
pop
jo
mov
dec
rcrl
mov
add
jae
inc
mov
pop
and
ss
inc
and
aam
fbld
ret
inc
push
or
sbb
sub
addr16
cmp
jno
sub
mov
test
jno
jno
and
dec
das
loop
add
mov
ret
cmp
inc
clc
mov
fldt
inc
or
mov
cmp
mov
mov
cwtl
test
movaps
es
adc
pop
push
jge
jae
mov
mov
add
fs
push
into
repz
sub
in
xlat
xor
sbb
or
leave
mov
fmuls
out
jo
push
cmpsb
sbb
scas
sub
mov
jp
stos
movq
fstpl
cmp
das
lods
call
push
mov
mov
lock
xchg
test
sbb
scas
cmp
daa
addr16
jl
jl
push
shlb
and
mov
cmp
push
mov
sbb
insl
mov
or
lock
call
mov
inc
das
in
pop
mov
mov
lods
aad
xlat
pop
xchg
mov
and
fldl
movsb
loopne
pushf
inc
pop
rcll
and
push
mov
sti
push
imul
jp
imul
int3
xchg
loopne
sbb
xchg
in
jbe
aaa
es
push
lods
int3
and
xchg
lods
mov
adc
jmp
mov
fstps
push
pop
mov
insl
jno
rolb
cmp
in
out
cmpsl
aaa
xchg
lock
insl
clc
push
mov
jo
divl
jne
pop
out
gs
call
in
int3
hlt
outsl
inc
dec
loopne
and
jecxz
add
decb
xchg
mov
pop
adcl
sub
mov
popa
sahf
mov
xchg
pushf
jnp
enter
xor
insl
es
shlb
push
dec
adc
push
sbb
cmp
hlt
rcl
or
data16
dec
insl
add
jns
cmc
sbb
das
add
rcr
mov
rol
fcompl
je
cmp
cld
out
int3
movsb
pop
nop
call
jmp
subl
ds
mov
mov
imulb
ja
cs
js
jp
mov
shlb
into
repz
push
or
mov
testb
inc
dec
or
jle
jg
or
cmp
fadd
dec
in
jns
inc
mov
jne
repnz
movsl
inc
es
dec
xor
jns
add
jae
fsubr
mov
add
mov
aaa
lcall
mov
fidivl
add
mov
push
aam
push
xchg
pop
in
inc
dec
sbb
mov
test
lcall
mov
push
imul
clc
jno
shl
or
push
or
call
inc
fidivs
mov
jle
jmp
stos
pop
pop
jo
xor
mov
sbb
push
sar
jne
jne
sub
mov
cmp
sbb
or
mov
lcall
push
or
inc
ret
iret
jg
lcall
dec
mov
cmpsl
bound
sub
mov
repz
pop
xor
dec
add
cmp
insb
jg
xor
mov
inc
aas
push
int3
or
pop
jle
mov
mov
repnz
sub
lods
filds
call
in
shl
cwtl
push
inc
push
push
and
popa
mov
push
dec
cmp
and
mov
fists
flds
mov
int3
imul
dec
imull
hlt
push
and
add
pushf
in
dec
sub
enter
mov
scas
pop
pop
test
es
cmp
lods
fcomps
mov
loopne
ljmp
push
jnp
xchg
sub
popa
sbbb
fldenv
xchg
cmp
xlat
mov
mov
push
aaa
out
inc
test
test
out
mov
les
jmp
dec
fwait
push
xchg
sahf
sbbl
ja
mov
cmp
cmp
adcl
aam
xchg
imul
push
icebp
sbb
mov
adc
test
daa
pop
add
lock
jnp
pushf
in
adc
cmp
sub
movsb
inc
sub
pushl
in
int
flds
mov
loopne
sub
xor
setbe
clc
push
mov
ret
dec
clc
xchg
inc
sbb
xchg
push
pop
sbb
addr16
mov
pop
and
mov
fildll
popa
ss
fists
lods
repz
movsl
sti
xor
insb
sbb
push
cmp
std
cmp
push
out
push
dec
rolb
mov
push
lds
pop
inc
test
fiadds
pop
cmp
movsb
sahf
cltd
xor
mov
or
sbb
shll
and
or
jp
cmc
mov
mov
jae
aam
push
sbb
les
sbb
fstp
cmp
or
je
mov
dec
adc
push
inc
jge
add
test
adc
xchg
add
xchg
das
and
sub
xchg
cltd
jne
lcall
mov
jbe
sub
mov
dec
pop
inc
sub
popf
sub
xor
aaa
pop
xchg
rcll
sub
cli
imul
xor
dec
sub
mov
and
or
sub
aaa
sub
sub
addr16
inc
jno
jg
or
insl
sub
fldcw
adc
inc
hlt
rclb
or
and
testb
mov
or
adc
cmp
cmp
outsb
cmp
mov
cmc
adc
add
cmc
xlat
mov
inc
adc
and
lahf
out
pushf
dec
jg
mov
lret
push
adc
ljmp
loop
decb
in
and
orb
sbb
cmp
dec
or
insb
enter
pop
push
pop
fsubrp
je
std
pop
ljmp
out
mov
ret
add
lods
xchg
orb
ja
loopne
iret
jnp
call
scas
xchg
ljmp
je
mov
pop
lcall
cmpsb
into
fsub
insb
fdivr
inc
pop
dec
out
clc
jno
pop
or
inc
into
sbb
xor
xlat
or
cmp
push
sbb
loope
pop
mov
fwait
in
mov
xor
aas
add
mov
lahf
mov
add
push
mov
test
jno
int3
insb
sub
sti
jno
aam
aaa
sub
pop
mov
fisttpll
dec
pop
and
xor
xchg
stos
neg
xlat
pop
addb
repnz
or
sub
mov
cmp
scas
test
out
pop
dec
in
mov
aam
xor
std
sarl
sbb
add
xor
push
dec
push
sbb
mov
lahf
mov
jns
adc
push
fwait
and
add
icebp
inc
icebp
or
and
hlt
int
in
addr16
pop
mov
xchg
mov
outsb
push
stos
aas
add
lea
aas
xor
insl
test
movsb
mov
insl
gs
dec
mov
adc
xchg
and
cli
leave
push
int3
or
pop
call
fs
mov
xchg
xlat
jmp
or
mov
cmp
negb
adc
pop
mov
sbb
cmp
daa
mov
push
inc
int
sbb
lock
cmp
push
xchg
or
and
jb
cmp
dec
mov
push
mov
jns
dec
bswap
add
sbb
xlat
ret
fs
jmp
sbb
outsl
ds
cmp
jg
fwait
lods
aaa
fdivs
jno
xchg
adc
inc
mov
xlat
mov
add
add
leave
fsubl
cwtl
sbb
jb
sbb
xlat
dec
iret
mov
xchg
cmpl
js
mov
inc
loop
xor
pop
lock
in
sti
push
ficompl
jnp
shll
into
out
cmp
dec
lods
jnp
insl
xlat
fstl
sbb
xor
arpl
add
push
movsl
cmp
fstpl
in
js
mov
sub
outsb
ror
popa
pop
aas
sbbl
mov
mov
dec
cmp
or
call
lret
aaa
and
data16
ret
lahf
dec
pop
leave
mov
mov
mov
mov
adc
lcall
divl
aas
scas
xor
ret
adc
jno
loopne
in
test
mov
daa
ret
or
inc
dec
pop
sub
scas
lods
mov
leave
ss
sahf
jne
pusha
mov
sbbb
in
lds
xchg
loopne
fwait
xchg
and
mov
mov
inc
mov
outsb
lea
cwtl
inc
rclb
mov
enter
das
imul
and
shll
fists
lahf
in
inc
bound
mov
addr16
pusha
ds
bnd
dec
jb
das
hlt
cs
mov
mov
dec
lret
sbb
mov
outsl
test
and
jno
xorb
lea
shll
sub
cld
mov
adc
sahf
repz
enter
adc
xchg
pop
adc
adc
pop
cmpsb
inc
das
jne
mov
ja
jb
in
nop
into
xor
cmp
dec
aas
mov
dec
rol
sub
mov
jnp
sub
scas
mov
pop
jmp
mov
mov
sub
nop
pop
inc
cmpsb
sbb
mov
mov
cmp
xchg
cld
mov
repz
aaa
pusha
stc
movsl
fidivl
jp
xlat
stos
cmpsl
daa
aad
das
and
fiaddl
rolb
pop
sahf
pop
adc
push
cmc
xor
subb
push
mov
lcall
stos
pop
push
mov
mov
mov
push
sub
sbb
mov
pop
nop
sub
mov
jbe
sbb
dec
and
popa
pop
test
aaa
mov
fsubs
add
cmp
into
out
cli
xchg
xchg
cmp
popf
sbb
addr16
pop
mov
je
imul
pop
push
or
sub
nop
adc
nop
dec
sub
adc
sti
cmp
mov
mov
repnz
dec
and
ror
les
pop
not
xchg
dec
shlb
xchg
int
nop
push
pop
push
imull
pop
dec
movsb
mov
sub
mov
call
xchg
shll
mov
and
cmp
movsb
icebp
sub
idivb
das
sahf
push
mov
dec
jb
negl
jp
sbb
loopne
sbb
xchg
in
leave
fnstenv
rcll
mov
jne
lock
xor
je
lahf
xor
adc
add
mov
stos
lcall
cmp
aas
add
pushf
mov
adc
js
xor
dec
nop
jecxz
sub
scas
hlt
jne
add
jmp
pop
xchg
cld
mov
sub
jne
lock
sub
daa
mov
out
in
fisubrs
iret
ss
test
ja
adc
or
adc
lret
fimull
scas
outsl
icebp
sub
pop
leave
adc
sahf
icebp
mov
jne
les
addl
xchg
pushf
lods
fidivl
xor
pop
imul
es
and
lds
jg
outsb
gs
or
nop
movsb
dec
push
ret
imul
out
movsl
std
imul
pop
cs
pop
scas
fidivl
ss
lods
push
pop
push
jo
mov
pop
or
les
jns
pusha
aas
sub
popf
pop
lret
jecxz
inc
and
shll
add
loope
fdivrs
fs
mov
ret
shl
out
addr16
pushf
jbe
lea
shr
jg
jno
stos
cwtl
cmp
and
adc
pop
orl
loopne
outsl
add
cmp
or
or
cmp
mov
roll
cmpb
jbe
mov
imul
popf
xor
jne
in
mov
push
aad
sub
xor
push
aam
add
popf
das
out
movsb
out
addb
fmuls
mov
or
mov
sti
test
adcl
mov
sti
movb
jl
loopne
fsubrl
pop
int
inc
ss
std
jp
inc
or
imul
sahf
sub
mov
cmpsb
and
insb
fwait
jbe
xor
icebp
out
jo
cmp
sub
insl
out
xlat
jecxz
pushf
sbb
push
mov
sti
jae
mov
imul
mov
icebp
fmull
mov
push
stos
enter
cmp
mov
subl
sbb
xchg
mov
mov
mov
add
lcall
les
mov
sbb
mov
xorb
dec
imul
and
je
lret
fldt
or
outsb
aaa
push
mov
mov
test
cli
lods
call
jmp
dec
pusha
jae
stos
cld
jns
fcmovnb
movsb
mov
jge
adc
fidivl
rorl
mov
out
aaa
movswl
hlt
pop
sub
push
imul
gs
into
xchg
mov
or
mov
sbb
push
aaa
adc
repnz
or
out
mov
mov
dec
push
js
inc
add
lret
idivl
pop
xchg
into
push
jl
pusha
adc
scas
rclb
loop
mov
out
cs
pop
add
mov
xchg
dec
std
loopne
jecxz
xchg
add
xchg
call
push
lock
push
or
push
outsl
jbe
mov
ret
mov
cmpsb
lahf
dec
jo
xchg
xchg
rorb
int
dec
sbb
test
xchg
shrb
mov
stos
cmc
sub
dec
jae
outsb
mov
sub
inc
add
test
dec
xor
push
add
lret
jge
xchg
incl
out
inc
rcrl
inc
jp
jns
inc
pop
or
mov
pop
mov
or
adc
mov
dec
mov
cmp
cmp
mov
inc
loope
sub
dec
cld
xchg
mov
pop
data16
outsl
mov
cmc
xor
pop
mov
xchg
leave
fnstenv
sub
leave
lret
xlat
mov
mov
movsl
add
leave
push
movsl
les
dec
cmpsl
adc
fcmovnbe
dec
mov
or
xchg
adc
jne
push
push
xor
cmpb
iret
adc
mov
aas
jo
dec
roll
int3
and
mov
movl
insl
inc
call
mov
daa
or
xlat
ja
mov
cmp
out
in
ret
xchg
shll
cmc
jmp
xchg
inc
pusha
outsl
add
mov
jbe
pop
pusha
scas
outsl
fnstcw
or
cwtl
inc
shrl
add
ljmpw
pop
aaa
jbe
cmpsb
push
fldl
adc
ret
xchg
je
jp
sbbb
cmpsb
push
mov
or
cld
int3
and
insl
nop
xchg
adc
sub
mov
cs
xchg
inc
inc
clc
jo
cmc
std
and
mov
inc
nop
mov
jae
inc
cmp
jle
jno
shlb
aad
insb
xchg
xlat
aam
pop
jge
ds
dec
pop
test
xor
push
scas
icebp
enter
bound
cltd
and
push
xor
inc
push
xor
shrl
mov
movsl
sub
sub
mov
inc
xor
stc
out
int3
pop
pop
loop
push
push
fisttpll
sbb
lret
movsl
sub
pop
aad
lea
jmp
lock
jbe
lea
and
aaa
mov
add
mov
sbb
sbb
es
repnz
fs
pop
iret
incl
loope
sub
out
push
xor
push
shll
ljmp
orb
xchg
inc
mov
shll
push
repnz
daa
jge
stos
ja
cld
mov
jg
out
xor
mov
loope
cmp
pop
mov
pcmpgtd
movsl
inc
bound
xchg
xchg
mov
sbb
or
mov
mov
xchg
leave
les
test
cmpl
or
mov
movsl
and
test
push
cmpsl
xor
pop
add
xchg
movsb
cmpsb
and
push
sbb
shrl
pop
sarl
loopne
fstpl
mov
dec
cs
test
test
repz
leave
lods
jae,pt
insb
pop
cmc
mov
inc
es
insb
or
mov
fdiv
xor
jmp
xchg
mov
push
mov
add
sub
xor
insb
add
scas
neg
dec
addr16
in
pop
popw
pop
jb
ja
jbe
add
loopne
pop
mov
cmpsl
faddl
push
shrl
jle
repnz
rcll
fwait
and
mov
stc
loop
inc
cmp
jnp
jecxz
jb
mov
call
sbb
xchg
mov
sbb
jg
sub
sbb
movsb
jne
ja
or
dec
loop
push
mov
test
cmp
lods
mov
data16
or
xchg
xor
xor
ror
in
push
xor
push
decb
nop
int
arpl
mov
cli
sahf
bsf
adc
arpl
jb
inc
mov
dec
cmp
lods
mov
cmp
or
and
sub
push
cli
or
fldt
stos
add
imul
cmp
xor
hlt
ret
pushf
and
out
mov
and
pop
sbb
loopne
cwtl
das
fidivrs
and
daa
push
add
mov
xor
stos
iret
jge
jbe
cli
int
pop
cmp
mov
push
and
mov
jle
enter
pop
jno
outsl
jmp
sti
inc
cwtl
jo
jge
jle
rcl
dec
scas
sbb
daa
jns
lret
out
add
and
add
nop
adc
hlt
scas
add
xchg
and
pop
cwtl
js
or
mov
pushf
or
outsl
mov
jns
stos
xchg
sbb
mov
and
pop
xor
fbstp
mov
cltd
int
test
mov
pop
jmp
xor
lods
mov
dec
pushf
leave
fisubrs
notb
fs
mov
jmp
lea
shll
pop
ljmp
push
jo
popa
or
mov
in
shr
mov
data16
aaa
sub
nop
cwtl
jnp
iret
orb
mov
in
daa
mov
pop
outsb
jge
push
roll
ret
push
jb
pop
mov
inc
shrb
pop
push
sub
rorb
inc
push
jo
jp
je
stos
jp
iret
or
xchg
dec
xor
pop
cmpsl
xchg
shll
inc
mov
jbe
ds
inc
pop
mov
sti
negb
cli
mov
lds
lds
mov
fldl
mov
mov
testl
aaa
out
mov
mov
mov
xchg
shr
lahf
adc
jg
mov
insb
dec
imul
inc
scas
mov
shr
mov
negl
pop
cmpsl
push
or
leave
cmp
mov
int
mov
mov
mov
rcll
int3
inc
sbb
in
mov
fnsave
mov
stos
mov
pop
dec
ljmp
inc
jl
jmp
mov
xor
mov
mov
pop
mov
or
xor
adc
test
jl
shll
aam
fdivs
and
cmp
icebp
push
popf
out
out
stos
pushf
push
and
mov
int3
or
push
sub
sub
push
jecxz
stos
fisubs
sbb
insb
push
lds
adc
sahf
or
push
mov
jmp
imul
neg
movsl
sbb
sahf
pop
bnd
fimuls
xchg
dec
mov
lock
mov
cli
cwtl
and
fdivs
or
aam
jne
call
lret
jno
iret
sbb
cs
push
inc
aad
jle
nop
mov
ds
lea
rolb
repz
rep
lods
xchg
pop
xor
push
cmp
mov
mov
mov
jmp
xchg
gs
mov
mov
gs
jo
jo
icebp
mov
inc
aaa
insl
shlb
inc
fwait
rcll
dec
sahf
jns
cli
test
lcall
sarl
add
sbb
fists
xor
jae
cltd
dec
xor
popf
icebp
iret
mov
push
int3
add
cmp
mov
lea
fcoml
xor
scas
xchg
stc
and
inc
inc
clc
dec
iret
push
push
and
push
dec
out
push
push
shlb
incl
or
mov
jnp
loop
aad
fisubl
sub
enter
aam
pop
mulb
aad
dec
pop
mov
lahf
pop
pusha
and
mov
inc
sbb
pop
jne
out
pop
loope
fsubrs
xchg
and
pop
shll
adc
sub
lds
imul
xchg
fdivrs
or
mov
mov
pusha
mov
mov
mul
leave
scas
ds
loop
sub
lods
pop
test
add
dec
add
stc
add
mov
fidivl
shrb
xchg
add
jl
int
push
cltd
sub
pusha
or
adc
sub
or
dec
arpl
push
roll
movsb
push
aas
push
sbb
stc
ss
xor
mov
bound
popf
es
inc
in
int3
add
and
scas
inc
lret
aam
gs
adc
dec
test
mov
idiv
and
faddl
loop
push
xchg
pusha
cmp
adc
mov
xchg
mov
cltd
and
jmp
in
repz
sbb
sbb
pop
loope
xchg
cs
out
hlt
or
test
ja
sub
and
mov
cmpsb
ret
out
xchg
arpl
in
inc
inc
lea
xor
mov
pop
fsts
jne
shlb
xchg
sbb
faddp
clc
mov
cld
mov
or
js
add
sub
cmp
sar
nop
fnstsw
das
sub
or
mov
into
fisttpll
call
outsl
jge
lahf
pop
nop
lret
test
lods
mov
cmc
mov
cmp
mov
hlt
popa
into
rolb
pop
aas
ds
sub
mov
or
or
test
pusha
mov
fmull
in
rolb
mov
add
jnp
push
setae
scas
push
scas
xchg
jne
popf
jge
lahf
adc
sbb
mov
ficomps
dec
in
and
aam
fcom
cld
xor
je
pop
push
mov
jg
mov
sub
jmp
rol
test
sbb
nop
sub
push
add
das
fsubl
sahf
sahf
pop
dec
clc
insb
mov
and
mov
je
mov
sahf
call
jmp
jo
je
push
adc
ret
lods
adc
and
cmp
arpl
ljmp
cmp
sub
rorb
ja
out
sub
mov
out
les
testl
inc
xlat
sahf
outsl
adc
push
mov
mov
sub
std
lcall
mov
pop
lods
and
cs
into
je
cli
ja
add
lret
test
pop
jg
and
fldln2
lock
js
cld
mov
pop
sbb
xchg
orl
fdivr
dec
hlt
sahf
xchg
sbb
fmuls
add
fildl
sub
fisttpl
mov
les
xlat
pop
push
xchg
pushf
or
sub
pop
pop
repz
cmpsl
mov
bound
pop
lcall
lods
sbb
gs
lods
jno
mov
adc
adc
lods
jle
insb
adc
sarb
xor
add
mov
sbb
cmpb
out
cmc
imul
movsb
mov
ss
movsl
out
add
shrb
fsubrs
or
push
scas
add
mov
call
mov
enter
out
ret
jnp
mov
es
imul
lahf
mov
ljmp
xchg
cmp
mov
addb
sub
xor
adc
shlb
jl
aas
inc
ja
addb
cmp
xor
xchg
add
add
and
popf
xor
xchg
push
dec
loope
add
out
dec
xor
inc
and
icebp
jno
shl
les
call
adc
pop
jnp
test
mov
inc
dec
dec
sub
push
jl
dec
fstl
xchg
adc
jl
ret
mov
mov
pop
repz
sub
cli
xchg
out
or
adc
jno
mov
pop
pop
addr16
adc
js
sti
lods
dec
push
fld
scas
test
arpl
dec
cmp
pop
test
adc
push
mov
int3
dec
aad
leave
inc
sti
ss
push
mov
mov
fucomp
mov
inc
lods
and
mov
xchg
out
movsl
mov
mov
xchg
gs
rcl
mov
pop
mov
mov
movsl
add
pop
shlb
cmp
mov
out
bound
xchg
test
ret
inc
hlt
pop
xor
sbb
jnp
leave
into
in
xchg
pop
jb
mov
arpl
adc
add
pop
fsubr
addr16
inc
dec
testl
xchg
jge
lds
mov
adc
xor
sub
xor
out
gs
sbb
and
mov
cmp
mov
or
adc
fisubl
sbb
loopne
pop
jns
ret
jecxz
add
push
mov
loop
push
mov
loop
iret
pop
mov
jl
push
push
jo
out
pop
or
ss
add
mov
cmp
popf
push
xchg
cmpb
mov
popf
adc
in
lock
out
sbbb
inc
inc
add
jno
inc
inc
dec
ret
test
adc
clc
adc
add
adc
mulb
jg
pop
int
sbb
dec
pop
dec
shll
or
stos
fcomps
clc
or
cmpsb
push
mov
pop
insb
mov
xchg
xor
push
jecxz
aas
fiaddl
dec
push
call
cmp
xor
xor
fisubrs
sbb
lods
lock
daa
adc
mov
jp
push
jae
and
mov
add
shr
fldenv
push
cmp
movsb
xchg
dec
bound
sub
iret
cmp
cmp
jle
ja
sub
jae
dec
push
add
cld
inc
cmc
push
inc
and
sbb
add
mov
jb
and
mov
cmpsl
sar
hlt
add
lcall
sbb
movsl
and
imul
mov
pop
arpl
mov
pusha
vmovsd
push
xchg
jmp
xchg
mov
or
xchg
inc
std
pop
imul
inc
mov
sbb
jo
mov
hlt
pop
mov
jecxz
clc
les
in
hlt
mov
dec
fwait
psubsw
lods
shl
cld
rcr
psllw
sbb
rclb
inc
scas
addr16
jecxz
bound
loop
adc
xchg
inc
mov
out
lret
push
pop
call
push
mov
jecxz
call
and
or
cli
xchg
xchg
add
inc
ja
mov
repnz
mov
pop
mov
add
jnp
test
gs
push
xchg
mov
fisubrl
xor
xchg
pop
or
push
jmp
test
cli
mov
mov
scas
xchg
frstor
inc
lods
pusha
cmc
sbb
insb
mov
dec
push
les
xchg
pop
or
aad
lods
jmp
mov
pop
jnp
add
int
inc
inc
add
lods
outsl
test
int3
mov
lea
decb
adc
pop
ds
xor
popl
sarl
add
mov
call
push
mov
lock
rclb
aaa
sbbb
add
sbb
mov
mov
cwtl
out
loopne
scas
outsb
adc
cwtl
iret
mov
sub
ss
cmp
add
and
in
out
stc
mov
imul
mov
cmp
cmc
lds
in
or
jle
xchg
or
adcb
lea
mov
stos
lods
aad
stc
sub
fcomps
pop
inc
scas
mov
out
mov
xchg
push
out
scas
adcl
cwtl
in
mov
add
pusha
lret
push
add
mov
mov
mov
mov
inc
lods
sub
or
lds
bound
fldl2t
dec
sub
jmp
jno
out
xor
jb
add
xor
xchg
xchg
mov
inc
test
popf
cli
cld
cltd
mov
jno
inc
arpl
jo
and
push
mov
pusha
jo
rcll
adc
mov
add
inc
push
jbe
xchg
pop
sub
xchg
push
arpl
pop
sub
notb
lods
mov
mov
scas
cmpsb
aam
push
sbb
cli
jo
lock
push
cmpb
cmp
xabort
and
loop
and
push
in
arpl
adc
pushf
jne
in
xchg
xorl
insl
insb
mov
lea
ss
and
jno
ljmp
cs
stos
xchg
cmp
dec
xchg
xor
sub
lcall
add
outsb
in
mov
rcr
hlt
sbb
push
nop
test
pop
lcall
out
aam
lods
push
in
repz
add
adc
pop
mov
mov
fisubl
jl
aam
test
add
jns
jl
adc
push
sarl
int
fs
xor
mov
adc
or
loope
push
enter
in
orl
xor
ret
fsincos
jmp
sahf
mov
aad
ret
stos
cmp
fwait
adc
fisttpl
dec
mov
test
scas
in
out
jns
xor
mov
out
dec
ljmp
sub
int3
mov
loop
pop
pushf
sbb
cli
mov
in
add
imul
fs
push
sbb
imul
test
in
mov
loop
loope
ficoml
inc
dec
pop
out
mov
dec
mov
les
cltd
or
inc
cwtl
inc
lahf
push
pop
add
lcall
adc
pop
jecxz
xchg
mov
ss
in
jb
xchg
aad
and
fcompl
mov
call
stos
push
and
pop
dec
adc
dec
add
and
cli
cwtl
insb
lods
pop
pop
iret
sti
mov
ret
les
or
jb
cltd
pop
xor
and
sbb
out
xor
scas
inc
xor
popa
sbb
xor
ljmp
xor
adc
jb
lea
hlt
and
jne
aas
icebp
outsl
mov
inc
lahf
jbe
add
clc
insl
mov
jb
lsl
and
xor
xor
fsubp
mov
mov
ret
mov
cmc
lds
ja
xlat
ljmp
or
xchg
in
imul
mov
sub
mov
loop
xchg
ss
mov
aaa
xor
cmp
out
jl
gs
subl
pop
add
xchg
loop
rolb
mov
mov
inc
roll
mov
std
xor
pop
and
fadds
xchg
hlt
stos
mov
sub
lods
and
pusha
and
aas
in
nop
push
repnz
inc
inc
das
xlat
outsl
cmp
loope
lods
push
vpsadbw
incl
xchg
ja
cmp
ljmp
xor
clc
cltd
sbb
xchg
inc
and
push
aaa
jp
adc
push
cmp
sub
outsb
mov
jmp
and
jo
sub
pop
popa
outsb
roll
call
sarl
jl
clc
fistps
cmpsb
push
mov
jo
add
push
inc
pslld
mov
arpl
push
test
jle
cmp
addb
mov
sbb
lods
pop
cmc
xchg
xchg
ds
pusha
inc
outsb
adc
sbb
loopne
mov
shlb
add
dec
cmc
or
jge
sarl
cmp
mov
dec
sbb
or
cltd
ret
iret
popl
out
push
dec
mov
and
and
mov
and
lods
add
xchg
jecxz
xchg
roll
in
popf
out
jno
int3
sub
push
popf
cmp
insl
xchg
fistpl
stc
sub
out
insb
or
inc
mov
sub
cli
mov
outsb
and
lods
mov
in
or
mov
ljmp
sarl
int
mov
sbb
dec
inc
les
ljmp
imul
or
cmp
push
mov
dec
inc
or
xor
pop
dec
xlat
mov
sub
popa
rol
sahf
xchg
push
movsb
adcb
or
jle
dec
sub
mov
mov
mov
in
jb
shlb
inc
cwtl
inc
inc
xchg
inc
leave
pop
jl
dec
push
fiaddl
add
das
mov
add
add
push
xchg
das
pop
sbb
xor
test
push
fs
pop
lock
ds
lret
out
jg
jp
mov
fs
dec
enter
adc
sti
addl
movsl
popf
ret
fsubs
mov
add
fst
cltd
dec
fwait
sub
in
add
mov
loope
idiv
add
daa
dec
adcb
aas
jno
nop
pusha
addb
test
jnp
lds
xchg
in
mov
bound
dec
fadd
mul
mov
dec
mov
inc
sub
shlb
jp
ss
pusha
sub
push
mov
inc
in
lret
mov
sub
mov
and
ss
ds
mov
in
test
inc
cmp
jne
xchg
lret
ret
cs
iret
jg
leave
dec
stos
mov
pop
jnp
mov
divb
mov
push
add
aam
push
dec
xor
push
jg
lret
das
xor
add
sti
xchg
mov
mov
lock
inc
fsubrs
cmc
cmpsl
andl
or
loope
mov
cmp
or
or
xor
cmp
shll
cltd
mov
jecxz
push
stos
add
arpl
in
mov
pop
out
enter
cmp
mov
fwait
leave
jb
jbe
pop
int
dec
scas
frstor
jo
je
imul
loop
clc
ror
jb
dec
jle
das
mov
xchg
repnz
insb
shr
fdivl
push
arpl
lods
sbb
adc
subl
pop
popf
movsb
cwtl
outsl
sbb
lea
idiv
fimuls
sub
jp
push
mov
repnz
mov
test
xchg
outsb
jae
mov
push
int3
mov
mov
mov
jl
sub
xlat
mov
mov
pop
push
push
pop
and
xchg
out
and
push
cli
xor
push
adc
ljmp
push
sbb
loope
lds
decl
jnp
jg
fs
xor
sbb
imul
xchg
and
cli
or
xor
fistl
sub
ja
lods
faddl
subl
mov
mov
inc
orl
mov
pop
pop
addr16
dec
sub
push
adc
sbb
mov
in
cmp
cmpsb
ss
jo
pop
in
rcrb
xor
xchg
lock
gs
aaa
es
push
mov
dec
sti
jno
in
push
add
cmp
xchg
incl
xor
repz
push
lock
pop
call
inc
add
das
jecxz
test
mov
mov
push
outsl
enter
mov
out
inc
ficoms
sarb
leave
jp
test
aad
pop
rorl
mov
in
pop
in
test
pop
xorb
dec
add
jne
daa
test
pop
int3
mov
popf
dec
lea
mov
xchg
pop
cwtl
adc
pop
ljmp
xor
jae
push
cmpsl
mov
loope
pop
xchg
add
xchg
out
fsubrp
xor
jmp
fs
add
xchg
popf
adc
fwait
sub
add
scas
pushf
faddl
aam
lcall
mov
lret
jecxz
dec
aas
mov
pop
in
pop
jo
adc
movsl
cmpsb
jo
rcrb
push
out
mov
ds
in
repnz
jb
filds
pop
add
xchg
mov
pushf
add
dec
adc
push
or
je
xor
jbe
shl
or
jecxz
in
lret
xor
shll
in
or
testl
xlat
movsb
adcl
out
fimuls
xlat
loopne
cmp
aas
out
and
cmpsb
mov
out
es
test
testb
mov
pop
je
adc
loope
mov
rcrl
fs
iret
lock
push
fsubs
mov
lock
into
or
pop
sbb
push
call
gs
shll
and
push
dec
incb
push
or
mov
pop
fnsave
aam
in
add
sub
inc
mov
xchg
jnp
mov
pusha
test
jg
xor
icebp
fnstenv
sub
pop
andb
jo
scas
cmp
or
insl
jle
or
dec
clc
outsb
or
xor
jns
call
xchg
sub
daa
push
cmp
icebp
popf
jbe
inc
mov
popf
in
dec
andb
test
push
push
jg
add
popa
and
push
pop
pop
mov
sbb
sti
cmpsb
sbb
das
in
or
adc
movsl
add
inc
js
cmp
fdivs
out
in
pop
stc
dec
and
and
stos
mov
sbbb
xchg
sbb
add
jmp
xor
mov
aam
add
loope
adc
lea
adc
scas
mov
aam
xchg
sbb
arpl
std
add
movsl
imul
call
jae
push
scas
cmp
inc
aas
fcoms
pushf
xchg
cmovg
cs
inc
inc
inc
xor
or
ljmpw
push
jge
mov
lahf
xchg
test
inc
or
xchg
fs
test
aaa
xchg
or
pop
xchg
rolb
cmpsl
rcrl
lods
mov
leave
mov
cmp
mov
add
lret
pop
iret
push
outsl
jge
outsb
xor
into
mov
xchg
test
sub
adc
pop
shrb
and
pushf
and
xchg
pop
dec
dec
jecxz
repnz
leave
push
ja
lret
inc
addr16
lcall
lock
rolb
stos
imul
les
rcrb
cli
test
and
rorb
loopne
enter
mov
ja
jl
jmp
push
mov
mov
lret
bnd
push
adc
mov
mov
inc
test
pop
lock
std
dec
mov
ret
movq
jecxz
push
scas
mov
mov
sub
push
jmp
adc
mov
xor
pop
cltd
dec
or
cmp
fdivl
out
sbb
and
and
xor
aam
pop
inc
push
dec
mov
pushl
sub
scas
nop
incb
or
pop
out
inc
mov
js
jle
sbb
inc
les
and
dec
dec
aas
sbb
repnz
jge
dec
ljmp
mov
xchg
or
adc
fcoms
xchg
ss
loopne
out
xchg
outsb
lret
mov
jl
pushf
daa
das
scas
mov
add
add
mov
je
scas
cwtl
pop
cld
je
gs
ds
sub
adc
jb
jmp
pop
sub
xchg
test
adc
push
xor
ret
jno
enter
jge
addr16
in
sub
cs
xor
add
pop
xchg
mov
ljmp
fcmovnb
mov
mov
sbb
add
inc
mov
pop
sbb
add
aam
mov
lds
and
jmp
cmpsl
inc
adcl
je
mov
pop
enter
notb
fcmovbe
push
es
mov
js
mov
pushf
cmp
mov
insb
inc
hlt
out
mov
sbb
pop
cmp
jmp
orl
adc
mov
inc
negl
xor
repz
sbb
mov
xchg
insb
repz
mov
js
popa
jnp
mov
mov
and
scas
inc
fsubs
jle
cltd
hlt
push
mov
mov
and
outsl
jns
insb
cld
leave
lds
enter
sbb
fcompl
xor
pushf
lret
inc
iret
loop
sbb
lods
xchg
pop
cld
push
add
fs
popf
mov
sub
test
out
lods
sbb
rcll
sar
sbb
push
xor
jbe
rcr
fisttpll
pop
xlat
lods
fidivl
jno
mov
or
jecxz
add
test
push
sub
hlt
int3
xchg
push
jbe
or
jmp
xchg
cmp
xchg
jb
inc
add
pop
mov
icebp
mov
sub
shlb
mov
lret
pop
adc
xor
js
frstor
roll
mov
push
add
inc
jb
adc
cwtl
jle
or
lea
cs
ja
sub
cmp
dec
dec
mov
xchg
sub
xor
jmp
sub
dec
in
add
fdivrs
xorb
or
push
sbb
adc
cmp
pop
push
adc
and
dec
movsl
cli
lret
or
adc
mov
call
mov
out
push
fisubl
test
mov
mov
jp
dec
stos
loopne
ljmp
cld
fidivs
push
dec
or
cld
and
sbb
int3
mov
emms
cmp
cmp
add
push
adc
sbb
mov
jmp
push
jge
rorb
push
xchg
into
lods
aam
das
lea
jmp
xchg
mov
out
test
inc
sbb
mov
cmpsb
pop
inc
cltd
out
add
shlb
inc
jp
ljmp
cmp
int
sbb
repz
xor
scas
lds
add
or
xchg
aas
xchg
pop
push
sub
push
jbe
cmp
cmp
gs
popf
clc
adc
scas
mov
ret
cmp
pop
dec
fbld
jo
js
mov
mov
cmp
xor
dec
mov
enter
adc
out
out
aam
inc
les
into
mov
mov
mov
sub
adc
jb
cwtl
nop
das
insb
pop
dec
filds
outsb
mov
popa
add
cmp
outsl
out
pop
ss
divb
pop
jle
sbb
loopne
insl
cmp
mov
lods
or
mov
aam
mov
jne
ja
xchg
in
lds
push
stc
push
lcall
pop
pop
scas
leave
sub
clc
ds
jle
jg
into
fmull
mov
jne
es
ret
jnp
shll
lcall
add
and
xor
pop
sbb
or
stos
imul
mov
into
loope
int3
aad
sub
std
inc
xor
enter
ds
ja
fs
daa
test
dec
daa
push
das
or
sbb
inc
and
pop
cmp
call
ja
dec
in
pushf
jmp
les
dec
jne
sar
jnp
pushf
cltd
xchg
add
push
add
fwait
out
or
cmp
mov
sub
leave
or
jle
fimull
fs
mov
jp
sbb
pop
in
pop
dec
or
add
mov
pop
sbb
adc
cmp
scas
popl
xor
fistps
jge
outsl
rcrb
loope
imul
push
ss
popf
je
push
jnp
dec
sub
inc
lock
add
or
push
mov
rorb
fbstp
out
inc
inc
jle
pop
out
in
jno
push
dec
lods
js
ss
lcall
mov
sbb
mov
xchg
mov
sarb
jb
lea
jp
pushf
stos
or
cmp
test
test
or
jecxz
mov
sbb
jns
lcall
adc
aaa
mov
pop
lret
jmp
mov
xor
add
cmp
jp
imul
ss
sbb
subb
sbb
cmpsl
sub
inc
pushf
dec
push
adc
sbb
notl
aaa
or
in
sbb
pop
stos
in
sbb
pop
mov
dec
movl
into
ss
mov
inc
call
mov
and
loope
dec
and
jno
sahf
lock
push
loope
lock
mov
or
leave
shlb
mov
scas
ret
outsb
lods
sti
mov
cmp
jno
in
adc
inc
mov
out
je
incb
lods
add
inc
popa
cwtl
jae
push
ffreep
in
lcall
mov
icebp
mov
mov
cmp
sbb
mov
sti
xchg
xchg
xor
sub
repnz
add
pop
and
test
aam
adc
insb
imul
int
lods
leave
adc
inc
and
sub
roll
ljmp
push
movlps
mov
push
xor
js
ds
lret
movsb
jns
xor
push
test
pushf
clc
nop
rcll
adc
dec
fdivs
sar
pop
sbb
jnp
mov
stos
das
jmp
xor
fs
jbe
pushf
sub
mov
lea
mov
sub
dec
ljmp
xlat
fisttpll
push
fildll
inc
xchg
sbb
fisttpll
xlat
sbb
arpl
cld
loope
pushl
popfw
jmp
in
mov
in
cmp
movsb
push
js
lds
add
push
dec
ror
cltd
rcrb
cmp
inc
inc
xor
sbb
add
push
loopne
imul
sub
in
sbb
sti
xchg
cmp
test
lock
outsb
inc
sub
out
xor
push
aas
cmpb
lcall
dec
pop
cltd
or
sub
enter
stc
fs
and
mov
lods
pop
jmp
cmp
out
sub
jge
push
lret
cmp
push
hlt
xchg
or
xchg
arpl
lret
pop
loopne
sbbl
push
mov
cs
pushf
mov
xor
daa
sbb
pop
lret
pop
je
cmp
or
aam
rorl
cld
fisttpll
pop
sub
ficoml
jl
jge
fwait
jns
or
mov
dec
adc
push
fdecstp
inc
sub
jmp
cmpl
pop
mov
add
push
or
cmp
gs
xlat
icebp
mov
fidivrl
xchg
test
pop
xchg
insb
add
sbb
or
pushf
into
shrl
mov
add
js
jecxz
scas
lods
test
xchg
lods
repnz
mov
mov
lret
sub
stos
mov
push
in
imul
dec
push
and
push
jne
out
push
mov
ficomps
shrb
lods
and
cltd
sbb
enter
jmp
inc
mov
push
jmp
cmp
mov
repz
fists
lahf
clc
sub
xor
sbb
into
mov
push
stc
xlat
adc
pop
adc
xchg
ret
test
mov
mov
addr16
sub
xor
xchg
lock
mov
adc
mov
sub
mov
fs
or
es
push
fmul
jne
push
and
in
or
mov
out
aas
dec
idivb
mov
into
das
pop
jecxz
push
call
pop
nop
pop
daa
cmp
stc
xor
xchg
bound
stc
int3
pop
jnp
add
int
cs
sub
arpl
outsl
xchg
pop
mov
xor
shrl
std
mov
jnp
popa
test
mov
imul
xor
and
and
dec
cmp
jns
sbb
aas
roll
cmp
jg
pop
clc
in
scas
clc
jge
and
adc
push
or
stos
xchg
pop
and
in
pushf
mov
clc
lahf
inc
and
in
or
xor
inc
test
pop
rolb
fisttps
je
cltd
dec
push
test
dec
int3
lds
jb
adc
cli
lahf
in
cld
mov
add
sar
jbe
adc
fidivrl
int3
addl
mov
mov
push
loop
out
push
cmp
xchg
or
sbb
push
pop
cmp
push
dec
cmp
enter
mov
xchg
inc
hlt
adc
sub
in
out
pop
push
push
dec
rcll
jae
nop
cmpsb
dec
dec
jge
xor
jge
pop
outsl
inc
sub
dec
inc
imul
mov
fwait
dec
lahf
fnsave
scas
out
mov
icebp
popf
pop
mov
mov
fiaddl
or
add
mov
rclb
repz
movl
pop
fdivrl
mov
inc
unpckhps
adc
fstpt
fucomip
loope
cmp
or
insb
jecxz
mov
pop
or
cld
pop
testl
adc
xor
mov
arpl
fildl
jg
lcall
push
adc
mov
jmp
mov
and
cmp
jmp
fimuls
repz
nop
data16
cmpsb
sbb
push
and
sub
enter
add
idivb
ret
mov
fisubs
inc
mov
xchg
sub
jo
pop
xchg
daa
dec
jle
cmp
xchg
mov
fisubrl
jg
cld
aam
mov
sub
lds
cmp
pop
test
fstpl
adc
in
jo
or
in
loopne
push
lea
mov
mov
popf
dec
fcoms
ret
jne
sbb
dec
sub
mov
pop
jbe
into
push
jle
cmp
xlat
xchg
lds
iret
push
sub
or
or
pop
stos
fwait
sbb
sbb
dec
push
pop
inc
cmpsl
das
mov
push
imul
pop
call
sub
lods
jge
mov
jns
hlt
popf
fnsave
add
out
cmpsb
dec
pop
mov
scas
icebp
repnz
shll
push
cltd
and
les
lock
lods
popf
enter
imul
sub
dec
dec
sbb
inc
xchg
loopne
test
sbb
adc
mov
lock
leave
icebp
dec
cmc
or
inc
jns
sahf
cmc
xchg
push
jl
pop
out
mov
or
jns
imul
push
and
rcr
stos
sub
fidivrl
sahf
adc
jbe
mov
outsl
mov
mov
inc
sub
popf
sub
mov
daa
lret
cmp
lret
loopne
jg
xchg
and
jbe
cmpsl
stc
pop
bound
cmp
jle
or
push
loop
mov
inc
mov
fdivs
enterw
sbb
ja
popf
test
fnstenv
xchg
xchg
std
push
jbe
in
adc
sub
in
incl
sti
dec
sbb
int
inc
jmp
int
sbb
xchg
pusha
mov
add
cmpsb
ret
cmp
enter
arpl
xlat
outsb
test
adc
mov
cmp
or
rol
dec
sbb
sbb
lock
sbb
mov
push
xchg
int3
jmp
jo
xchg
loop
sahf
adc
and
int3
pop
push
ds
xchg
lock
testl
sbb
xor
lods
cltd
gs
popf
fisubrs
outsl
imul
jg
jmp
jne
test
daa
cwtl
jp
mov
or
scas
jg
fsubr
adc
and
push
xor
and
sub
adc
inc
push
mov
scas
and
mov
mov
mov
adcl
mov
lcall
pop
es
dec
mov
and
add
pop
push
mov
test
ljmp
dec
push
inc
lds
popf
push
addr16
je
or
lea
push
clc
sub
js
fwait
jge
je
ljmp
xchg
push
pop
sbb
ss
out
jo
divl
sahf
adc
push
push
or
dec
and
ret
push
mov
add
push
adc
in
in
cmc
imul
movsl
jo
xchg
addb
push
or
sub
xchg
sub
jbe
enter
jge
pop
pop
enter
insl
in
jns
inc
xchg
and
fcoms
sub
insb
jmp
int
sbb
jae
clc
setae
addr16
stos
cmpb
outsl
dec
xchg
mov
repz
mov
scas
and
mov
pop
shrd
pop
mov
add
psubsb
cmpb
shrb
and
mov
insb
mov
addr16
pop
scas
add
cmpl
arpl
inc
sub
jo
negl
lret
out
or
push
gs
movsb
sub
rcrl
push
and
ret
iret
sahf
lods
stos
test
jae
jg
pushf
in
ret
fcmove
mov
cld
cli
insl
enter
ror
mov
ror
in
fimull
mov
cmp
jo
roll
stc
leave
and
stos
arpl
icebp
daa
add
or
lock
adc
mov
negl
mov
jle
fsubs
pop
mov
sahf
das
sbb
push
jnp
or
out
inc
in
fbld
xor
inc
dec
pop
scas
and
cmpb
mov
jnp
push
test
sub
jmp
or
sbb
pop
jae
lret
std
pop
pop
mov
adcl
add
es
les
jae
lret
inc
dec
outsl
mov
xchg
int3
pop
das
js
outsl
in
fs
aad
jb
pop
in
mov
fwait
addb
cmp
mov
gs
jmp
loopne
cmp
jle
rcl
xchg
add
loopne
adc
lods
es
mov
ss
iret
sbbl
mov
mov
xor
pop
das
mov
adc
bound
ret
outsb
sub
or
ljmp
data16
cmp
jno
inc
pop
jo
jmp
push
mov
dec
std
lock
testb
mov
sar
mov
push
punpckhdq
cmp
pop
fsubrs
sub
mov
scas
in
pushf
xchg
push
ror
insb
push
mov
mov
sub
push
pop
push
popa
scas
and
add
ljmp
sub
in
in
insl
jae
pop
mov
je
icebp
and
pop
fldenv
sbb
insl
inc
aaa
scas
test
xor
jg
cmp
mov
xchg
sub
fdiv
or
dec
xchg
or
rdtsc
mov
ret
out
dec
fidivrs
lcall
dec
sub
inc
sar
pop
pop
std
std
aad
js
cmp
bound
xchg
sub
test
push
scas
lret
fildl
rol
movsb
out
mov
ds
jo
ds
inc
fisubs
lahf
or
fsub
cmp
insl
mov
pop
push
pop
clc
lahf
sub
in
jb
hlt
jecxz
push
js
in
or
add
movsl
pop
outsl
mov
push
les
cmpsb
jne
loop
push
lret
int3
adc
mov
pop
sbbb
sbb
or
ds
inc
inc
push
cwtl
cmpsl
aas
pop
xor
aad
subl
loope
flds
out
scas
pop
mov
hlt
cmpsb
adc
and
addr16
enter
dec
scas
jl
ljmp
sub
or
jle
xor
loope
inc
pop
or
mov
movsl
mov
call
mov
ds
push
adc
fbstp
pop
push
xchg
pop
ret
test
inc
fisubs
xor
js
push
lds
xchg
jge
sub
lcall
fcmovnb
data16
shll
add
cmp
mov
xchg
lea
out
outsl
and
rcll
outsl
icebp
or
ds
sbb
mov
pop
pop
inc
jno
mov
jns
lds
mov
orl
call
jg
mov
mov
or
call
push
popa
or
cmp
call
mov
ds
aad
jl
sub
cmpsb
sub
pop
mov
jl
jns
dec
cmp
cwtl
and
fisttps
in
or
arpl
push
scas
in
cld
outsl
pop
and
negb
dec
scas
stos
jo
mov
ret
sahf
fnstenv
jo
outsb
push
cld
xor
mov
fadds
add
push
fidivs
loopne
xor
pop
mov
mov
xor
jmp
add
test
jb
push
jl
sahf
fmuls
sbb
notl
adc
add
push
test
xor
push
and
and
cld
ret
movsb
push
add
jns
and
dec
cmp
into
dec
fwait
mov
pop
pop
xchg
insb
nop
cmpsl
cmp
fnop
xchg
adc
sbb
sub
or
clc
dec
inc
cmp
adc
fmull
add
loop
mov
and
pop
lret
in
jl
lock
dec
jle
jns
adc
cmp
and
jns
xchg
sbb
lret
jle
loopne
and
or
mov
sbb
xor
lahf
add
jae
sarb
cmp
ljmp
pop
dec
ss
test
add
ds
cli
adc
mov
repz
or
dec
aam
xchg
pop
stos
iret
dec
addr16
jne
mov
in
cwtl
or
adc
mov
mov
xor
inc
cmp
xchg
xchg
jbe
nop
nop
mov
inc
mov
ret
stos
aas
inc
aas
das
pop
lods
aas
lret
inc
adc
dec
imul
frstor
aaa
push
mov
sbb
in
mov
mov
and
mov
out
lds
imull
arpl
push
inc
in
inc
jecxz
inc
sub
outsl
out
dec
sub
push
jmp
cmc
repnz
pop
popf
stc
sti
sbb
sub
addr16
lods
add
sub
push
xor
int3
pop
push
or
lcall
pop
lret
mov
jle
xor
sbb
ja
jnp
sub
outsl
pop
mov
sbb
xchg
outsb
inc
dec
aas
mov
clc
pop
lea
push
arpl
cmpsl
push
mov
cmpsb
jns
sub
xor
cs
dec
jae
ds
rcl
je
fwait
mov
movsb
push
loope
mov
test
ljmp
push
push
sbbb
stos
jne
aam
pop
aad
je
mov
or
or
mov
pop
scas
out
sub
out
xor
test
jns
xchg
ljmp
fcom
mov
ds
aam
mov
aas
stos
lcall
mov
icebp
dec
cmp
jecxz
cmp
dec
sub
mov
xchg
leave
push
push
or
sbb
insb
int
jl
push
or
int3
fldt
adc
sahf
jecxz
jmp
mov
fwait
in
lcall
inc
int
imul
data16
adc
pusha
and
or
inc
push
and
inc
in
pushaw
repnz
or
andl
shll
outsb
movsl
inc
rorl
cmpsb
cmc
mov
and
dec
xchg
mov
xor
pop
xchg
in
mov
jbe
and
lock
xor
in
mov
push
push
xchg
xor
xor
jnp,pn
xchg
adc
pop
cmp
sbb
push
pop
sbb
or
push
pushf
loopne
mov
and
xor
pop
lcall
xor
std
imul
sub
insb
into
mov
and
mov
es
fadds
imul
xchg
incb
push
dec
cmp
mov
rcrl
sbb
aaa
dec
enter
test
dec
cmp
pop
jl
pop
jb
mov
cli
repz
jle
pop
adc
xor
cmp
mov
fstpl
js
inc
fisubl
lock
test
test
and
push
cs
mov
test
out
mov
mov
jle
add
xchg
jg
mov
dec
push
add
add
mov
mov
mov
xchg
mov
pop
stos
in
xor
jmp
iret
rcrb
insl
inc
and
pop
pop
ds
std
xorl
and
adc
insl
call
mov
mov
xor
inc
orl
inc
cmp
or
imul
popa
loope
xchg
mov
dec
dec
cs
pop
in
lods
sub
js
add
pop
adc
mov
bound
jbe
pop
out
mov
scas
insl
mov
xchg
mov
xchg
pop
lds
cmpsb
mov
xor
stc
fstl
jl
jg
cmpsl
or
adc
addr16
pop
adc
dec
mov
dec
inc
ret
imul
lock
jge
cmp
dec
outsl
pop
jb
xor
cmp
pcmpgtb
push
scas
xor
push
sbb
cltd
mov
out
lods
add
mov
jmp
push
dec
ffreep
negl
sub
add
aad
call
dec
mov
test
pcmpeqw
pusha
adc
or
aam
and
out
filds
int
rorb
icebp
xchg
cmc
adcl
mov
and
sbb
push
mov
mov
out
ja
sub
mov
push
sub
or
shll
push
inc
cmp
mov
loop
int3
outsl
jmp
push
into
mov
stos
xchg
push
and
adc
pop
scas
enter
pop
mov
outsb
xchg
mov
pop
jae
mov
sbb
cmp
xlat
scas
aas
hlt
std
xor
xor
mov
xchg
mov
pusha
int3
mov
stc
or
mov
xchg
mov
lds
arpl
sahf
cmp
loopne
daa
pop
dec
insb
or
xor
stos
out
pop
ljmp
mov
lods
and
imul
fcom
sbb
xor
jae
jae
inc
or
sub
jne
sbb
addr16
dec
fmul
sub
fisubrl
adc
nop
and
xor
xor
and
pop
push
or
ja
add
mov
cmc
ror
xchg
mov
roll
jge
push
adc
jne
xor
lahf
into
inc
pop
stos
cmp
jle
jb
ds
dec
data16
pop
pop
je
or
cld
nop
xchg
mov
ja
jnp
mov
dec
pop
lret
iret
pop
scas
mov
mov
stc
mov
xchg
mov
stos
mov
pop
sub
push
insb
bndstx
icebp
and
sbb
pop
mov
mov
sbb
idivl
xchg
pushf
enter
push
sub
call
or
testb
int
out
mov
and
fs
mov
js
pop
out
mov
ficoml
frstor
mov
jl
add
mov
arpl
in
mov
xor
adc
jp
ret
mov
lcall
jle
stc
or
addr16
push
lods
mov
int
mov
sub
jo
dec
pusha
dec
push
and
inc
sub
nop
mov
fwait
and
pushf
cmp
shr
ss
inc
push
lea
fnstsw
xor
mov
xchg
xor
cmpsl
lock
icebp
fwait
test
ret
lret
negb
jl
add
jg
inc
lahf
mov
xorb
hlt
in
out
popa
and
sub
js
shrb
aaa
cmpsl
inc
loope
push
dec
push
test
pop
adc
xor
sbb
and
loopne
mov
add
out
jbe
loop
mov
lods
mov
xchg
sbb
in
ss
imul
sarb
lret
cwtl
inc
push
cmp
sub
loopne
out
push
sub
adc
or
mov
fistpll
lret
cmp
orl
sub
test
aad
jp
push
sarb
mov
xor
add
pop
dec
pop
inc
repnz
das
xor
sub
in
bnd
cmp
lea
xor
data16
adc
dec
cli
scas
in
jne,pt
push
out
dec
test
sbb
jns
and
hlt
push
sub
mov
mov
nop
xor
pop
cmpsb
sbb
xor
sub
add
and
insb
sub
repnz
gs
sbbb
pop
data16
xlat
add
xlat
vpshlq
test
cmp
push
fcmovnu
clc
in
call
mov
jg
mov
outsb
sub
fists
xor
or
cmp
popa
jp
fwait
test
xorl
into
push
outsb
nop
pop
shll
pop
int
fcoms
and
jmp
push
sar
jnp
xchg
push
sti
xor
inc
and
mov
mov
jp
fsts
sarl
mov
sbb
xcrypt-cbc
cmpsl
aam
popfw
stc
clc
mov
mov
xor
shr
add
push
fstl
arpl
mov
xchg
mov
xchg
jmp
push
xchg
mov
mov
add
pop
dec
push
divb
jg
or
iret
pop
repz
aam
mull
icebp
jns
ret
pushf
xor
ror
push
aaa
outsb
push
mov
pop
ja
shlb
sti
sti
stos
imul
test
ret
ret
fidivrs
rorb
pop
sbb
loop
aas
push
cmpb
pop
out
and
test
inc
stos
mov
cmp
dec
pop
xor
xchg
scas
add
jge
jg
sbb
shrb
loop
add
adc
in
jmp
addb
negb
arpl
jae
out
or
loop
iret
cs
iret
cmc
add
mov
gs
xlat
sti
pop
in
std
inc
jb
mov
or
mov
in
lret
pop
or
subw
ds
cwtl
inc
sub
lea
aam
movsb
mov
movsb
cmp
mov
inc
mov
test
ja
js
sbb
jmp
fisubrs
mov
and
jle
and
in
aas
cmp
es
cltd
or
or
inc
hlt
mov
shl
or
sahf
jmp
cmp
hlt
dec
xchg
clc
stos
fsubrl
jp
adc
popa
sbbl
or
mov
js
jmp
or
xadd
ss
inc
adc
movsl
fdivl
jg
dec
clc
mov
cmp
jl
sub
mov
sbb
cmp
pop
or
add
dec
push
dec
cmc
cmp
out
jno
addr16
xor
adc
cmp
xchg
lret
or
mov
mov
push
push
addr16
mov
scas
imul
insb
push
es
ss
mov
stos
xor
pop
scas
mov
jno
fs
xchg
add
nop
das
sti
or
rcrl
fs
xchg
jae
dec
sbb
orb
insl
pop
xlat
das
push
mov
mov
call
add
mov
jp
jae
orl
enter
stos
daa
jb
xor
int
fcomps
lret
jmp
or
rclb
and
dec
mov
ret
jle
xor
cmpsl
stos
fdivs
test
or
faddl
bnd
jb
imul
dec
jo
daa
add
dec
imul
pop
out
jbe
nop
fst
js
adc
movsl
fisttpll
sub
cmpsb
mov
or
cmp
clc
dec
cmpsl
or
fbstp
xchg
sti
push
push
sti
sub
push
inc
mov
dec
sub
mov
je
mov
test
adc
je
jge
pop
xchg
mov
jbe
ds
cltd
lock
and
add
adc
test
fadd
leave
and
aad
xchg
mov
and
cmp
sbbl
movsb
inc
inc
mov
cmc
inc
add
enter
and
inc
sub
arpl
push
movsb
cmp
mov
mov
xchg
loopne
pop
les
ret
mov
cmpsb
test
xchg
add
out
sbb
push
mov
fdivrl
and
xchg
repnz
sub
cmp
cmp
jp
push
xchg
dec
pushf
sbb
dec
in
shlb
jbe
cmp
or
cwtl
ret
sub
lea
add
stos
mov
sbb
adc
loop
ss
and
iret
or
jb
loop
clc
push
mov
cwtl
push
pushw
pop
sub
sahf
jae
sbb
dec
scas
xchg
mov
sbb
fwait
jno
cmp
andb
test
or
cmp
and
push
jbe
push
push
popa
jge
idivl
sbb
jp
loope
cmp
shll
outsl
repz
dec
push
lahf
or
stos
push
cmpsb
outsl
fists
mov
stc
out
xchg
adc
mov
inc
push
push
inc
outsl
add
test
pop
cmpb
mov
pop
clc
scas
jno
into
loopne
xlat
pop
popf
xor
jnp
pop
in
push
or
mov
pusha
and
push
rol
leave
xor
lock
pop
or
rorb
cli
fsubp
jmp
inc
add
adc
push
inc
sti
shl
mov
sub
out
jecxz
neg
mov
add
test
push
clc
or
outsl
sbb
jne
loopne
xchg
or
ror
dec
aas
sub
pop
add
mov
ss
mov
gs
leave
dec
xchg
lods
lcall
cmp
and
rorb
dec
ljmp
mov
test
clc
rorl
popf
jno
loope
loop
pop
outsl
outsl
fiaddl
je
test
fidivrs
sub
jb
filds
jmp
push
pop
xchg
adc
sub
jns
dec
stos
ljmp
push
ret
jl
popf
stos
test
push
mov
std
xchg
push
and
out
add
ficomps
call
enter
ja
mov
and
mov
into
lahf
cmc
adc
dec
sub
push
push
test
aaa
jbe
aaa
mov
inc
cs
sbb
mov
xor
mov
lds
jns
in
jg
adc
pop
es
sbb
add
dec
fildll
into
push
je
shrb
scas
jp
cmpsb
ljmp
cli
loope
shrl
gs
jne
sbb
mov
cmpsl
call
mov
and
push
inc
xchg
jo
and
scas
or
xchg
shr
mov
dec
test
mov
add
addr16
loopne
fcmovnb
loope
ss
and
sahf
cmp
sub
dec
mov
imul
data16
pop
lods
test
push
lret
fnsave
pushf
jg
jae
fisttpl
pop
mov
xchg
xlat
loope
ljmp
stos
push
push
icebp
pop
jp
cmpsl
or
push
ja
mov
cmp
push
ficomps
or
xor
cmp
adc
scas
or
dec
or
mov
and
pop
mov
stos
aam
test
add
test
test
mov
es
dec
dec
fisubrs
mov
shlb
lds
and
mov
mov
push
jge
xor
push
imul
push
into
inc
cmp
or
dec
ss
in
or
push
int3
pop
adc
pop
jle
aam
testl
jno
sbb
sub
sti
mov
cltd
movsb
pop
and
pusha
or
loope
sub
cmp
mov
fwait
ja
jo
xor
iret
aam
mov
je
fidivrs
pop
jo
adc
jl
xchg
jo
push
pop
xchg
dec
addr16
jle
cmp
mov
jb
fisttpll
or
aad
push
xor
jmp
pop
ljmp
loopne
sahf
loope
imul
aaa
in
xor
leave
out
jae
hlt
rcl
lret
adc
lea
mov
data16
jmp
mov
mov
inc
and
mov
cmp
and
cltd
insb
popaw
jae
lock
lahf
mov
lcall
jno
push
ret
lock
dec
aam
pop
inc
push
or
mov
loope
push
cwtl
inc
fcoms
cltd
and
or
jnp
test
jns
movsb
add
sub
icebp
push
je
add
sbb
pop
mov
pop
or
or
js
dec
cmp
mov
sub
mov
push
sti
popf
push
repnz
add
add
clc
sbb
pop
inc
sbb
sahf
mov
in
xchg
mov
jmp
lret
sbb
mov
sbb
mov
in
out
pop
inc
lcall
orb
or
xor
push
cmc
pop
pop
dec
test
in
push
data16
aad
cmpsb
test
jge
ljmp
or
xor
imul
js
leave
iret
push
sub
outsl
dec
sub
insb
and
adc
sub
lds
cltd
xchg
out
sbb
mov
fwait
sub
cmp
test
outsl
cli
sarb
jb
int3
jecxz
xor
adc
outsb
je
cmp
adc
ret
addb
xor
sbb
pop
sahf
mov
sub
xorl
xlat
mov
das
imul
or
or
mov
push
cltd
negl
js
hlt
jmp
repnz
je
scas
pop
test
stc
mov
pop
sbb
out
or
out
imul
mov
lahf
pop
sbb
test
testl
stos
loop
shrb
gs
imul
aam
cmp
popa
adc
test
loopne
xchg
inc
fstpt
pop
adc
mov
xorl
xor
xchg
call
jp
loope
jge
iret
pop
stos
stc
sub
loope
int
outsb
mov
jns
fs
or
pusha
in
lock
setp
mov
sbb
fsubs
mov
mov
mov
fidivl
sahf
add
and
xchg
enter
or
mov
adcb
or
aas
dec
lret
push
xchg
xchg
ds
int
ret
pop
xor
call
xchg
gs
mov
js
mov
pop
jl
xor
sub
fstpl
jle
pushf
or
inc
test
or
jns
int3
push
clc
cmp
push
jp
cmp
negb
arpl
nop
cmp
loop
daa
gs
leave
push
inc
push
mov
rorb
push
stc
xchg
jmp
sub
inc
lret
scas
rorb
xor
lds
and
and
es
orb
int3
jecxz
movsb
dec
adc
mov
cltd
in
mov
adc
adc
cs
mov
addb
rcrl
mov
adc
call
jp
mov
pusha
and
mov
inc
and
xchg
inc
and
push
outsl
mov
xchg
adc
add
sub
pop
sti
lods
scas
xchg
inc
cmpl
pop
aad
test
das
subl
mov
adc
sub
iret
jge
jb
iret
mov
imull
popf
mov
sbb
fneni(8087
xchg
push
cmp
mov
je
loopne,pn
adc
push
lods
popa
scas
or
mov
ja
pushf
push
call
mov
xchg
stos
pop
add
jg
xchg
sbb
sarl
insb
sub
xchg
adc
cmp
out
cmp
rcrl
pop
mov
loopne
dec
stos
loopne
movb
sbb
cmp
and
in
loopne
xchg
cli
mov
jge
insl
mov
add
pop
cwtl
sub
inc
dec
loope
xchg
jge
cmp
mov
out
and
mov
xchg
lcall
pop
pop
adc
sahf
cmc
imul
loop
sbb
and
hlt
mov
shlb
stc
imul
jns
xchg
into
pusha
push
rcr
pop
pop
lock
enter
or
out
mov
jne
out
into
and
jae
push
and
mov
movsb
les
sub
lret
mov
shr
xchg
mov
bound
mov
pop
pop
mov
and
test
dec
mov
addb
mov
add
xchg
imul
xor
push
xchg
and
adc
ja
mov
fsubrl
out
fmuls
mov
adc
pushf
mov
cmp
testl
adc
popf
pop
jmp
repnz
inc
mov
jbe
test
stos
jne
xor
xor
dec
pop
dec
cmp
add
std
xchg
daa
dec
les
push
xchg
shll
popa
in
repz
dec
xor
scas
adc
je
inc
jb
add
mov
ljmp
add
fcomi
mov
repz
and
hlt
es
sub
pop
mov
cltd
push
fdivrs
stos
mov
sbb
jnp
mov
in
mov
xchg
rcrb
or
outsl
dec
sub
sbb
fs
orb
push
jno
call
lcall
loop
adc
mov
lods
dec
add
add
mov
add
sbb
gs
xorl
xor
pop
repnz
addr16
sbb
stos
lock
sub
aam
int3
gs
dec
decb
fistl
dec
fisubrl
jp
inc
xchg
scas
mov
in
sbb
pop
cmp
imul
add
mov
out
adc
daa
jo
testb
int
rolb
or
pop
dec
sub
sbb
cli
jo
jge
mov
pop
jb
mov
loope
lea
test
dec
mov
xchg
aaa
leave
out
lahf
push
add
ds
add
mov
mov
mov
cli
iret
sbb
in
outsb
inc
in
mov
sub
fdivr
xor
mov
ret
sahf
sti
orb
mov
aam
mov
xor
add
xor
ss
repnz
inc
and
repnz
inc
add
or
pop
mov
mov
sub
inc
sbbl
enter
push
adc
andb
mov
cwtl
inc
inc
pop
test
addb
ficoms
sub
enter
jnp
lods
sub
nop
lahf
sbb
orb
sbb
js
lods
repnz
mov
rcl
mov
mov
push
and
push
int
or
sub
pop
or
cmp
in
mov
xor
je
je
movsl
ljmp
sbb
nop
test
add
iret
loop
jbe
outsb
adc
movsl
shrl
push
dec
xchg
inc
or
in
and
fildll
xchg
aam
shlb
sub
mov
xchg
mov
data16
test
es
int3
dec
or
imul
sbb
lahf
cmp
adc
xor
fnstcw
sbb
filds
repz
lcall
repnz
movsl
rclb
cmp
lcall
push
jmp
mov
loop
addl
loopne
add
cmp
call
das
pop
mov
in
dec
push
push
scas
sub
and
mov
cmp
pusha
cld
loope
in
sub
ja
pop
inc
mov
cmp
cmc
or
mov
jbe
scas
xor
mov
jne
aam
sub
push
push
and
out
roll
dec
ljmp
and
les
sub
adc
lahf
xor
test
fdivrl
stos
leave
dec
mov
mov
mov
jp
out
sarb
ljmp
xor
and
jp
ds
dec
enter
jmp
mov
call
test
xchg
scas
stos
push
and
std
daa
fwait
push
cmp
movl
inc
loope
fadds
inc
mov
fildl
pop
nop
fisttps
push
jno
or
adc
cmp
shrb
adc
ret
shrl
adc
cmp
int
pop
clc
pop
push
mov
stos
lods
push
push
movl
sti
test
fs
dec
sahf
sub
loop
shlb
cmp
shrl
fwait
mov
in
ss
mov
outsb
adc
test
sar
push
vpsubq
repz
sarb
cmp
cld
mov
ja
in
jbe
push
cmp
push
push
dec
mov
fs
orb
push
mov
adc
push
test
cmpb
scas
push
pop
jge
imul
xor
test
jp
jle
sar
outsb
scas
sub
mov
aas
adc
or
cmp
sbb
mov
jae
push
ds
dec
cmp
xor
les
jae
leave
pop
movsb
and
mov
clc
pushf
sahf
testb
rcl
mov
loopne
ss
fsubrs
hlt
sub
sbb
stos
jbe
sbb
jmp
enter
test
mov
sbb
mov
in
mov
add
ss
mov
sub
icebp
add
mov
test
ret
or
insb
and
scas
pop
sub
or
dec
push
idiv
cmp
push
inc
in
ljmp
imul
xchg
push
ret
sti
sti
icebp
dec
sbb
adc
repnz
cmpsb
lods
sub
aaa
fdiv
lods
fcomps
and
or
idiv
bound
fisubrs
xor
jmp
loop
mov
fwait
loopne
cmp
aad
jp
cltd
mov
pop
mov
std
pop
lret
push
jl
pop
aas
jg
scas
jo
cld
paddsb
test
dec
dec
nop
lcall
ljmp
mov
pop
nop
outsl
adc
das
in
adc
ljmp
xor
rcl
inc
insl
xchg
dec
jnp
xchg
and
je
jae
out
jg
ret
cli
jl
call
adc
rcll
and
pop
es
fs
nop
js
jns
fwait
xchg
lret
stc
mov
insb
fwait
addr16
ljmp
xor
dec
fidivl
fsubr
or
mov
jno
fisttpll
mov
lods
test
popf
fs
pushf
cmp
out
adc
pop
pop
dec
stos
out
fisubrl
pop
pop
outsl
in
xchg
jg
imul
js
mov
fst
cmpsb
dec
or
sub
xor
insb
jbe
xchg
cwtl
xchg
push
mov
inc
cmc
loope
jmp
pop
cmpsl
mov
scas
or
mov
shll
xchg
push
adc
mov
out
jns
mov
in
xlat
mov
dec
imul
and
ljmp
rclb
lods
push
and
mov
adc
xchg
pop
sbb
mov
arpl
mov
inc
les
call
pop
lea
in
sub
pop
ds
cld
pop
subb
add
jge
movsl
sbb
movsb
into
mov
sbb
outsb
pop
inc
pushf
shll
pop
or
push
pop
sbb
daa
nop
aas
mov
sti
mov
movsl
sub
add
and
push
out
cmp
sbb
std
enter
xchg
mov
jae
xor
xchg
jp
sub
cmpsl
aas
pusha
insb
push
lods
stos
push
rol
inc
xchg
cmp
push
mov
mov
xchg
push
cmpsl
mov
add
dec
out
pop
insb
loope
jae
sub
and
nop
mov
xor
icebp
lahf
in
scas
je
xchg
popa
add
js
test
fidivrl
iret
xchg
in
mov
mov
xor
cmp
inc
imul
lahf
fcmove
pop
scas
addr16
push
or
es
sbb
sbb
in
pop
jmp
jp
gs
cmp
daa
adc
orb
in
cmp
movsl
mov
in
test
sahf
popf
popa
fcmovu
ljmp
xor
push
adc
push
pop
loope
into
call
rorb
dec
push
cli
xor
cmp
xchg
in
pusha
add
mov
mov
jns
test
mov
jge
push
fs
ficoms
std
jo
pop
aam
enter
mov
mov
push
lea
pop
mul
scas
or
cmpsb
mov
sub
mov
lcall
push
cmp
pop
and
inc
dec
xchg
mov
cwtl
push
push
fildll
insl
jno
xchg
fiaddl
cmp
xchg
in
inc
adc
mov
arpl
cmpsb
mov
popf
repnz
fisubl
movsb
rcl
stc
js
scas
sbb
insb
je
lret
xor
push
dec
or
nop
adc
leave
mov
stos
lock
into
pop
mov
mov
clc
dec
xchg
lods
mul
stc
divl
mov
lahf
pop
ja
repz
jmp
in
jl
sub
push
aad
data16
mov
xor
shll
xchg
test
mov
pop
mov
out
bound
inc
xor
int3
xchg
gs
dec
xchg
lock
and
mov
popf
lods
sbb
gs
call
mov
mov
aam
pop
jae
xchg
es
pop
mov
and
xchg
arpl
sbb
push
outsl
movsb
xor
add
jecxz
add
pop
jge
jg
sbb
inc
or
in
pop
mov
ja
dec
xor
or
into
mov
xchg
or
cmpb
and
outsb
and
sbb
push
adc
imul
jmp
imul
adc
push
inc
push
insb
pop
sub
cli
inc
pop
mov
stc
pop
cld
or
jecxz
xchg
sub
or
ja
push
mov
sbbb
ja
sub
dec
mov
pop
sahf
fstps
cmp
int
xor
pop
out
push
test
inc
popa
sahf
jb
or
cltd
mov
iret
or
xor
js
cmp
mov
imul
add
jae
dec
mov
sbbb
sbb
inc
lea
inc
push
out
movsb
xor
hlt
lret
sbb
mov
rorb
xchg
jbe
shlb
mov
test
cmp
arpl
addr16
mov
fwait
adcb
test
das
filds
add
inc
fwait
and
cltd
mov
cmp
lds
stc
jne
in
in
ds
imul
enter
add
xor
je
pop
cmp
jp
dec
leave
sbb
push
or
mov
scas
and
cltd
in
mov
stos
mov
icebp
sti
in
cld
jo
loope
mov
cmp
shl
dec
in
push
sbb
lods
mov
and
mov
pop
xchg
fs
sbb
jle
pop
push
pop
pop
in
and
jle
add
outsb
fsubrp
add
cmp
scas
jne
sbb
xor
jl
mov
loop
add
mov
in
ds
mul
dec
cli
shrl
xchg
lock
daa
iret
jo
sahf
dec
push
iret
jbe
jne
scas
push
aas
fisubrs
push
jae
lret
movsb
shll
mov
shlb
lock
push
cmc
sarb
sbb
lock
sub
push
lret
xlat
dec
aam
add
adc
mov
sbb
mov
jmp
sbb
jo
movhps
add
jae
andl
and
adc
js
aaa
stos
stc
fistpll
test
xchg
pushf
push
shl
add
mov
fnsave
adc
aas
cs
lret
mov
pop
insb
cld
iret
mov
int3
mov
pop
push
insb
inc
pop
ret
mov
testb
arpl
test
lret
cmpsb
mov
jo
and
imul
and
sbb
lods
lret
ljmp
cwtl
sbbb
cmp
jne
xchg
repnz
mov
push
mov
cmp
pop
pop
imul
push
rorl
addr16
pop
loopne
mov
inc
and
cwtl
lret
mov
mov
cmc
neg
jo
pabsw
outsl
mov
jb
lcall
ds
mov
pop
ljmp
je
int
jne
push
dec
dec
mov
push
addr16
mov
fsts
mov
out
push
popf
dec
enter
ja
push
mov
ljmp
int3
call
outsb
hlt
icebp
cmp
push
repz
js
and
pop
int
sbb
and
pop
shlb
adc
mov
imul
push
and
pop
or
jle
push
sti
xchg
fnsave
cmp
test
push
test
jne
jmp
in
rol
repnz
stc
scas
roll
sbb
mov
rcr
cmp
lret
stc
sbb
mov
jle
sahf
xchg
sub
stos
sub
sbbl
push
scas
cli
inc
xchg
popa
daa
std
repnz
test
sub
jae
cwtl
scas
movl
jno,pn
mov
and
sub
mov
repnz
repz
jo
push
jbe
inc
fiadds
push
xchg
clc
mov
xchg
cmpsl
sbb
mov
rcl
sub
dec
lcall
lcall
ljmp
jl
es
mov
sti
icebp
bound
pop
or
fdivs
mov
dec
jo
dec
mov
fmul
movsb
into
into
ret
sub
inc
xor
sbb
lret
pusha
es
lock
dec
fidivrs
sbb
dec
pop
fldcw
jl
sti
mov
sahf
jno
lods
pmulhuw
shlb
outsb
pop
or
shrb
ret
scas
sub
fwait
push
or
jnp
cmp
sbb
movsb
mov
stc
jnp
sbb
and
adc
fisttpll
sbb
pusha
insb
aas
mov
mov
call
cs
rolb
jnp
faddl
lcall
mov
ret
fdivrp
nop
std
sbb
mov
cmp
cmp
stos
sysret
xchg
mov
cmpsl
cmc
xor
fwait
call
pop
and
sub
jb
lods
out
stc
mov
xor
xor
das
mov
push
loope
les
dec
push
push
mov
jb
jno
shrb
jg
sbb
cld
xchg
and
xchg
js
xor
dec
scas
jp
sahf
aam
inc
pop
add
push
divb
lods
xchg
mov
xor
fs
loopne
es
mov
mov
mov
push
cmp
add
xor
mov
leave
push
mov
es
ror
fnstenv
cld
out
shlb
jns
rcrb
scas
inc
into
inc
sub
dec
xor
mov
mov
test
sub
mov
aad
or
insb
cli
mov
sbb
mov
fiadds
xor
arpl
daa
jae
and
add
cmpl
mov
sbb
shl
out
shll
insl
xor
lret
adc
fsubs
jb
stos
mov
adc
pop
inc
stos
fstpl
scas
iret
repz
pusha
icebp
mov
push
loop
outsl
frstor
push
mov
dec
pop
ret
push
mov
repz
fiadds
sbb
lods
addr16
mov
sbbb
add
xlat
and
or
ss
shlb
mov
and
mov
jp
outsl
mov
mov
mov
lret
xor
movsb
push
cmc
push
in
iret
add
js
cmp
xor
stc
mov
inc
cmp
push
sbb
rcll
mov
mov
arpl
test
mov
cli
int3
subb
xchg
mov
shlb
cltd
sahf
push
xchg
lcall
into
jnp
xchg
data16
xchg
roll
mov
lock
and
jnp
or
enter
xchg
movsl
jecxz
jnp
push
and
xchg
mov
push
cli
mov
in
or
ss
out
cwtl
popf
scas
or
in
mov
outsl
dec
xor
push
inc
aam
aas
push
outsb
inc
stos
and
popa
sbb
je
push
jbe
adcl
push
mov
jb
xchg
cmpsl
repnz
inc
xor
lock
jb
jl
in
outsl
adc
stos
cmc
stc
push
xorl
sti
popf
loope
sbb
hlt
sbb
sar
inc
xor
mov
je
push
lahf
das
negl
hlt
rcr
addl
dec
ror
or
loop
cmpl
adc
and
out
xor
sub
ror
cmc
jge
inc
pop
xchg
mov
arpl
ss
xor
mov
nop
sarb
dec
mov
mov
out
loop
inc
xchg
sub
xchg
jle
clc
cld
out
mov
adcb
xchg
mov
rclb
insb
cltd
out
bound
movsb
jl
les
xor
mov
add
cmpsb
addr16
inc
mov
loopne
sbbb
lret
negl
or
sahf
xor
movsl
test
mov
test
daa
out
and
jle
test
sbb
imul
jp
add
xchg
jp
jbe
mov
in
daa
xchg
lret
insl
add
repnz
bound
enter
pop
testb
xchg
add
es
lods
loopne
push
sbb
les
lcall
mov
push
in
adc
movsl
mov
push
ds
imul
dec
adc
push
cmpsl
fs
inc
add
fists
dec
fwait
cwtl
call
icebp
arpl
xor
fidivs
adc
mov
or
fsubrl
shrb
pop
lods
pop
jnp
pop
clc
push
sbb
add
add
les
insb
mov
mov
call
mov
mov
add
cmp
data16
cli
xor
jns
inc
out
or
adc
inc
repz
mov
jge
mov
aaa
inc
or
xor
jnp
stc
fimull
repnz
loopne
mov
push
lahf
adcl
hlt
jno
test
lea
es
shll
rcr
xchg
adc
dec
rcrb
push
aaa
icebp
or
ds
fmul
cmc
xor
rorl
mov
mov
pop
in
add
movsl
dec
test
arpl
and
cld
push
imul
pop
mov
jns
push
cmc
push
cli
out
inc
mov
pop
imul
lock
inc
movb
push
cs
popf
fs
ja
cmp
jne
aaa
xchg
jmp
cmp
call
add
mov
idivb
lahf
out
dec
cmp
outsl
jl
in
pop
lods
jmp
sbb
adc
inc
test
out
aam
mov
jle
ret
aaa
stos
lock
jae
mov
out
xlat
ds
mov
mov
dec
mov
cmpsl
xchg
xor
pop
pushf
mov
stos
push
imul
bound
ds
in
adc
pop
xchg
out
push
mov
xchg
xor
and
inc
shrb
fwait
js
jne
imul
dec
bound
loop
pop
scas
dec
je
xchg
ds
and
jmp
sbb
or
mov
fwait
in
add
add
aad
inc
jb
enter
push
pop
pop
into
jnp
cli
imul
cli
push
outsb
dec
movsb
fbstp
mov
enter
adc
xchg
testb
sub
ljmp
je
adc
ret
pushl
jecxz
loop
jecxz
xchg
mov
pop
andl
push
repz
xchg
out
aad
pop
mov
nop
jo
jae
aam
cmpsb
sarl
and
dec
or
push
mov
xor
loopne
mov
repz
ficompl
hlt
jp
lret
push
dec
out
fiadds
scas
mov
dec
pop
outsb
lea
sti
inc
rol
push
mov
pushf
movsl
push
sub
nop
mov
jl
les
mov
inc
out
pop
push
lahf
mov
xor
pop
cmp
cltd
xor
sti
add
xchg
stos
mov
mov
clc
and
and
roll
sbb
lar
mov
pop
jl
hlt
int
lcall
repnz
mov
div
daa
mov
fimuls
dec
or
test
fwait
inc
ja
shl
mov
mov
pop
ja
daa
jb
xor
inc
and
stc
fstpt
into
jo
movb
dec
or
pop
lret
sub
dec
repnz
arpl
push
cld
inc
psubb
mov
lcall
xchg
or
push
enter
mov
cmp
push
dec
cmp
pop
mov
xchg
rorb
adc
mov
pop
jg
cwtl
dec
stos
inc
jmp
jmp
and
jne
jb
inc
clc
sar
nop
addr16
inc
inc
sahf
addr16
xor
pop
aas
jp
stc
fdivrl
mov
movsl
fnstcw
mov
call
mov
lahf
mov
cmovge
cmp
ret
lea
out
rclb
dec
mov
push
loopne
stos
push
stos
insb
add
fs
mov
mov
fwait
cld
insb
inc
shlb
outsb
outsl
sbb
pop
lea
dec
adc
repnz
into
gs
mov
aaa
cmp
lods
repz
or
es
test
adc
jns
inc
push
inc
xchg
out
rolb
xor
dec
lods
int
lret
jmp
test
lret
sub
stos
stos
test
out
cmpsl
mov
imul
clc
dec
jns
call
nop
addr16
pop
insb
mov
jmp
mov
or
sub
inc
outsl
mov
mov
cmp
jg
xor
loope
fnstenv
sub
subl
pop
in
jl,pt
add
xorb
repz
xchg
pop
ljmp
add
cmpsb
stos
cmpb
mov
rcll
and
movsb
xchg
adc
setnp
pusha
fbld
andb
addr16
hlt
movl
jp
mov
ljmp
test
xchg
inc
jne
sbb
sbb
push
sahf
pop
fbld
out
outsl
sbb
pop
cmp
and
and
stos
daa
mov
test
int
in
ret
jne
or
pusha
add
test
stos
inc
add
call
mov
mov
cmp
mov
jne
lods
jge
pop
in
mov
ror
xor
scas
leave
xchg
xchg
inc
daa
dec
sub
xchg
add
jmp
mov
push
pushf
mov
push
cli
outsb
sub
or
fisttps
inc
loop
cmpsb
push
cmpsl
add
push
lds
mov
inc
insb
stc
out
or
loope
dec
je
in
mov
sbb
xchg
mov
out
cs
in
rolb
ja
cmp
sub
in
into
pop
outsl
test
pushf
int3
test
pusha
inc
or
and
in
cld
rol
lods
sbb
sbb
ret
pop
push
dec
mov
push
xor
sbb
mov
int
jg
in
sub
cmpsb
fdivp
mov
xchg
insb
test
inc
add
fisttps
imul
out
inc
dec
movsl
int3
and
push
iret
icebp
mov
mov
and
mov
lret
jae
sub
lods
jnp
rolb
cld
dec
fisubrs
jl
lea
pop
or
ficoml
jnp
rclb
je
xchg
insl
lahf
loope
mov
mov
dec
test
cld
ds
jo
lret
cs
mov
repnz
cs
push
mov
cmp
xchg
sbb
xchg
in
movsl
push
lahf
les
sbb
lods
jae
lods
leave
dec
push
and
fcmovnb
sub
roll
or
clc
push
ss
xlat
mov
jno
pop
dec
ficoms
nop
loopne
push
arpl
mov
ja
xchg
shrl
mov
or
scas
push
adc
out
push
lret
and
icebp
adc
pushf
data16
icebp
jmp
mov
insl
xchg
sub
xchg
inc
cmp
test
fnstcw
jmp
scas
lret
mov
adc
jecxz
sbb
adc
lcall
enter
clc
mov
sub
les
adc
xor
or
loopne
mov
shr
add
cmp
out
in
add
loopne
jl
push
popf
ficompl
ljmp
xor
movsl
pop
mov
bound
sbb
outsb
jb
int3
push
dec
adc
and
in
pushf
ljmp
notl
insl
dec
jge
dec
dec
ds
ret
imul
mov
or
lock
cmpsb
jno
cmp
push
and
mov
sbb
ja
sbb
pushw
jge
or
jmp
shll
nop
jecxz
xor
mov
addl
scas
ret
mov
mov
mov
sbb
imul
jnp
and
sub
and
pop
enter
ret
inc
test
mov
inc
pusha
sti
in
popf
jne
xlat
sarb
or
jg
sbb
imul
or
pop
push
cli
sti
add
loopne
popf
dec
popa
add
ret
lods
cmpsb
repnz
cmp
adc
aad
imul
fwait
sub
bound
gs
aad
xchg
pop
fadd
add
mov
inc
in
bnd
mov
push
mov
jmp
into
dec
cmpsb
dec
push
or
outsl
xlat
frstor
inc
mov
cld
xchg
orl
cmpsl
dec
fisubrs
nop
aaa
cmpsb
mov
aad
sahf
dec
movsb
call
cmp
and
je
and
mov
outsb
imul
loopne
adcb
sub
test
jnp
xchg
test
fisubrs
push
push
inc
sub
fs
movsb
fwait
pop
sub
add
mov
or
hlt
stos
shll
jmp
cmp
cmpsb
les
iret
or
cld
insl
jne
hlt
push
inc
jmp
mov
adcb
mov
fcos
mov
sbb
movsb
aas
jo
push
jo
adc
loope
or
add
out
inc
mov
push
mov
mov
insb
pusha
pop
or
xchg
dec
or
adc
test
ret
adc
add
je
mov
cld
out
cld
xor
in
addb
push
cltd
and
fmuls
push
dec
lds
xchg
lret
stc
xchg
lret
scas
adc
sub
mov
sahf
and
jp
pusha
and
fnstsw
dec
sbb
movsb
sub
cmp
mov
mov
lret
dec
or
test
std
loopne
pop
test
push
jl
and
sahf
sahf
imul
mov
leave
push
loop
jb
mov
xor
rorb
xor
add
insb
sarl
adc
add
sbb
sub
sub
nop
mov
jo
xchg
popl
in
repnz
dec
andl
and
loope
sbb
aam
daa
ss
imul
daa
sub
inc
scas
mov
mov
nop
lds
mov
dec
cmc
add
popf
mov
daa
push
jmp
or
call
xchg
andl
aaa
inc
push
push
out
insb
je
inc
in
jmp
sbb
les
aam
cmpsl
lahf
and
cmp
nop
pop
and
jnp,pt
into
arpl
mov
das
mov
mov
adc
call
es
shrb
and
dec
fdivrl
dec
adc
sbb
ret
sbb
jp
push
int3
and
iret
mov
dec
jecxz
pop
das
mov
or
lea
cmp
push
ficompl
and
js
loopne
fs
inc
sbb
or
xor
shll
mov
ss
ss
xchg
xlat
and
pop
pop
and
pushf
or
xchg
scas
xchg
aad
and
in
sub
fildl
arpl
adcb
xor
sbb
test
cmpsb
jge
out
push
push
movd
dec
push
stos
repnz
inc
ret
test
cwtl
popf
xor
call
xchg
dec
jp
rcl
mov
sub
and
loope
inc
adcb
call
and
add
addr16
sbb
sub
movsl
icebp
imul
cmp
adc
fdivrs
mov
and
dec
push
shrb
mov
lds
dec
daa
jle
xchg
fsts
or
cmp
jmp
jp
push
dec
cld
jecxz
pop
adc
leave
xchg
push
cmp
jns
sub
mov
into
subb
pop
lea
mov
pop
cs
fiaddl
outsb
push
in
or
adc
lods
push
inc
roll
xchg
sub
lock
mov
adc
test
mov
push
enter
fidivrs
shl
fisubrs
lret
ja
pop
xchg
les
std
jg
lret
lods
mov
outsl
pop
inc
loope
sbb
fldcw
mov
sbb
xchg
sti
out
mov
xchg
stos
pop
cmpsb
hlt
popf
test
sbb
rolb
imul
lcall
mov
subb
jo
xor
push
and
adc
test
pop
jne
adc
in
add
adc
call
js
mov
rcrl
jbe
xor
inc
stos
inc
idivl
fmulp
xchg
add
lock
je
imul
mov
xor
icebp
and
test
xchg
adc
cmp
lds
xor
out
jno
push
adc
lret
pop
loope
mov
lahf
dec
loope
movsl
mov
xor
mov
adcl
jb
jae
shrb
fldenv
sub
enter
sbb
lretw
cmp
xchg
push
adc
add
imul
mov
ret
xor
xchg
aam
pushf
fnstcw
stos
sti
ss
in
fmulp
and
test
xchg
jl
push
je
icebp
in
es
aam
cld
dec
cmp
push
pop
loope
dec
adc
lods
push
bound
xor
mov
add
jl
jp
jb
dec
dec
xchg
mov
xor
xor
inc
pop
push
ret
push
jmp
int
mov
add
push
add
cmp
mull
push
cmp
or
lods
xor
cwtl
push
add
dec
sahf
stc
cmpsb
loope
cli
divl
repz
call
mov
les
scas
mov
stos
xor
mov
orb
xchg
daa
clc
in
xor
nop
jl
rcrb
jbe
mov
pusha
imul
in
mov
and
rcrl
pop
push
inc
sbb
jecxz
scas
jecxz
fsubr
mov
add
or
sbb
mov
scas
add
das
mov
mov
lahf
mov
jmp
notb
xor
fisttps
sti
test
loopne
xchg
fcoml
les
ja
add
jp
or
ret
mov
xor
and
push
aaa
test
sbb
arpl
imul
sub
inc
inc
jl
xchg
and
pop
mov
xchg
mov
add
cs
add
stos
mov
or
pop
mov
out
outsb
iret
and
pop
inc
adc
mov
sbb
or
inc
arpl
dec
movsb
push
call
mov
pop
outsl
xor
mov
test
scas
or
sbbb
push
xchg
add
mov
movsb
lods
ljmp
sbb
andb
push
imul
mov
cmp
pop
push
inc
in
sbb
push
insl
repnz
add
xlat
int
jo
push
pop
bound
add
lods
cmp
test
add
jmp
popf
roll
scas
adc
inc
movsb
stc
dec
mov
test
push
adc
xlat
inc
push
mov
jne
leave
pop
jbe
push
cmp
inc
jle
subb
lea
jmp
cmp
cld
mov
sbb
add
dec
in
ja
fstps
xor
movsl
cmpb
cld
sarb
shrl
push
xchg
inc
nop
aas
inc
aad
dec
jbe
inc
jne
shlb
pop
inc
scas
sub
fisttps
rolb
lcall
mov
lock
dec
rcll
dec
inc
jle
adc
imul
xor
dec
xchg
mov
lcall
pushf
mov
sub
je
dec
shll
jl
sub
cmc
cmp
in
pop
cld
ljmp
loop
adc
outsl
xor
loopne
lret
pop
cmp
ds
push
cmpsb
xor
mov
fsubs
xchg
xchg
jp
dec
sbb
and
jg
cltd
orl
mov
or
outsb
add
xchg
mov
js
cwtl
int
fbld
mov
and
outsl
fstl
or
ret
cmp
scas
add
or
js
pop
enter
out
je
xchg
cli
mov
add
push
mov
cmovne
icebp
les
xchg
rcll
mov
insb
mov
outsl
jmp
repz
and
out
sub
fwait
adc
sahf
sbb
mov
cmp
cwtl
test
insb
sbb
mov
iret
sbb
jnp
ret
add
adc
std
dec
sub
mov
cmp
lret
lea
xor
loop
shl
lock
fisubrs
jg
xor
out
sub
loopne
mov
xchg
test
push
sbb
pushf
lds
ret
popa
jp
imul
jnp
subb
setbe
call
addr16
imul
loop
das
movsb
push
sbb
jmp
data16
mov
rolb
loopne
inc
sub
add
lea
dec
fiaddl
xchg
mov
lret
dec
mov
das
test
lods
and
mov
dec
in
xchg
cmpsl
rolb
push
lret
repnz
subb
clc
jmp
imul
mov
cwtl
mov
cmp
inc
rorl
imul
loope
push
pop
xor
test
add
lods
dec
or
inc
jnp
movsb
dec
push
test
cmp
inc
scas
jg
lret
int3
stc
jp
jne
in
movsb
dec
add
iret
insb
pushf
push
xor
add
xor
divl
cmpsl
hlt
rcll
mov
lods
sbb
fsubrl
cmp
fsubrs
pop
xor
or
cwtl
stos
adc
adcl
adc
mov
jmp
mov
push
cmp
mov
inc
hlt
lret
and
dec
xchg
fsubrl
dec
lods
loop
ljmp
fisubs
stc
into
cld
loop
fdivrl
inc
sti
out
fwait
inc
and
pop
xor
sbb
and
adc
inc
push
xchg
add
jae
je
hlt
dec
jae
xor
dec
push
gs
fnstsw
movsl
aam
imul
pop
hlt
movsl
mov
test
lods
cmc
xor
jmp
push
mov
xchg
pop
mov
andl
inc
rorl
flds
test
fstpt
xchg
cmp
push
fs
xlat
popa
add
sub
sub
dec
push
lret
lock
adc
mov
cmp
stos
lret
out
lret
xor
sub
aas
pop
or
shl
mov
pop
es
pop
shlb
lret
cmp
dec
clc
jnp
xchg
push
jno
arpl
mov
mov
jbe
add
xchg
lret
enter
mov
and
fldt
mov
jnp
xor
mov
dec
or
jl
and
loope
call
jne
jo
jge
fs
sbb
mov
mov
in
mov
push
inc
push
fimuls
pop
psubw
mov
xchg
shlb
jg
cs
adc
pop
pop
push
inc
mov
xchg
aaa
or
stos
cmp
ss
repnz
sbb
js
int
xchg
lods
lods
fmul
outsl
xchg
pop
lahf
and
fildll
test
mov
xlat
pop
jge
notb
pop
xor
xchg
cltd
rcll
mov
lock
shll
repz
cld
xor
xor
cmc
aas
test
fwait
pop
jo
les
lods
xchg
bnd
add
rolb
pop
add
lock
das
out
add
ss
je
add
stos
jb
push
pop
mov
test
dec
jmp
int3
les
inc
in
out
and
sub
fisttpll
push
and
or
adc
mov
imul
notb
push
cmp
pusha
sbb
cli
mov
aam
in
pusha
fdivl
cmpsb
test
test
jne
fisttpll
es
ror
iret
pop
mov
das
into
add
mov
mov
fisttps
aad
fstl
cmp
ds
adc
mov
mov
jle
cmp
int3
stos
iret
inc
and
push
out
fstp
cmpsb
mov
sbb
xchg
es
lods
lcall
jge
pop
das
add
or
call
insl
xor
pusha
daa
xchg
xor
cwtl
adc
pop
or
and
push
pop
lds
push
push
cmp
into
faddl
stc
jge
test
popa
pop
push
add
mov
add
daa
push
scas
mov
leave
pop
fld1
scas
out
in
rcll
into
inc
outsl
adc
test
int3
pop
popa
mov
imulb
add
push
adc
dec
int
jg
and
mov
cltd
scas
xor
leave
dec
and
mov
lds
push
scas
clc
filds
inc
sahf
cmp
xchg
loopne
inc
hlt
mov
push
lock
push
push
test
or
cmpsb
test
and
jae
pop
or
push
fs
xor
xor
cmp
mov
mov
mov
push
in
stc
inc
fs
movsl
or
pop
sarl
test
stos
fisttps
or
push
push
jae
add
push
xchg
pop
and
push
fsubl
stos
jmp
pop
aas
cli
div
mov
lock
adc
cmp
dec
jle
cli
sub
fs
rclb
movsl
mov
dec
cmp
sub
daa
test
xor
jo
nop
jbe
and
decl
dec
mov
cmp
xchg
or
pusha
mov
in
dec
lahf
jbe
arpl
stos
rcl
fiaddl
cltd
loopne
sbb
clc
test
cli
jmp
dec
nop
insb
sub
or
push
xchg
add
xchg
and
or
dec
mov
sbb
pushaw
xchg
mov
mov
push
rsm
loopne
ret
das
push
and
push
enterw
sbb
popf
jmp
daa
ss
cltd
repz
js
testl
pextrw
mov
and
mov
outsb
mov
sti
push
jmp
xchg
sahf
subl
aam
mov
mov
out
and
push
mov
lret
xor
and
adc
cwtl
into
in
jns
out
cmpsl
mov
cmc
stos
fld1
outsl
mov
xor
and
leave
orl
cmp
ja
orb
pop
sbb
test
jne
repz
test
jg
mov
sarl
mov
outsl
and
scas
adc
repz
clc
ret
dec
mulb
sahf
ja
cmp
cmpsb
push
ss
xchg
in
mov
pop
jle
fxch
dec
xchg
xlat
and
dec
mov
data16
fstpl
pop
dec
adc
in
sti
push
pop
cli
lock
xchg
add
mov
shr
out
cltd
aas
cmp
inc
inc
xchg
jl
cmp
mov
hlt
xor
push
iret
and
frstor
adc
sbb
loope
mov
ss
mov
mov
scas
pop
add
sub
add
and
jecxz
jnp
and
sub
xchg
mov
sub
call
call
xchg
pushf
fwait
mov
xchg
sbb
fstpt
pusha
movsl
pusha
hlt
lret
fstps
mov
nop
movsl
ud1
and
add
xorl
jmp
lret
xor
addr16
and
inc
jge
xchg
testl
and
inc
rorl
xchg
insl
pop
xor
pusha
mov
mov
out
add
or
fsubp
das
sbb
call
push
es
sbb
xchg
mov
and
or
stos
pop
mov
in
aaa
push
mov
fs
jnp
repz
xchg
and
movsb
mov
sub
mov
lahf
sbb
cmp
and
pop
scas
sbb
bound
inc
aaa
test
xor
dec
mov
xlat
mov
mov
xor
pusha
jle
test
mov
out
push
or
or
add
cmp
inc
std
out
sub
cwtl
adcb
and
testl
cltd
xchg
dec
sti
leave
push
das
call
sub
movsb
popa
pop
push
or
xor
or
repz
loop
sbb
outsb
cli
xor
out
sub
sub
aad
xor
mov
add
xor
jnp
inc
mov
nop
js
cmp
rcrl
jg
jae
rcr
sbb
adc
cmpsb
in
jnp
fnstsw
mov
jle
mov
std
mov
xchg
inc
js
mov
andb
pop
inc
mov
aad
std
or
sub
xchg
lret
push
mov
jne
push
loop
pop
lock
mov
push
sub
push
sub
loop
mov
stos
push
jbe
repz
sarb
movsb
xchg
mov
repz
cmp
cld
lods
test
push
mov
repz
dec
cmpsb
ja
loope
test
cmp
out
pop
pop
push
jge
enter
xor
or
xchg
cwtl
into
adc
es
leave
add
inc
cli
aad
xchg
popa
aaa
mov
mov
ret
ret
jb
jbe
lahf
test
les
cmp
addl
sbb
enter
test
rcrb
ret
adcl
cltd
fs
add
sbb
mov
jo
mov
cmp
cmp
xchg
mov
jbe
inc
and
mov
ret
lea
push
xor
pop
aas
cld
mov
lock
pop
sub
mov
add
mov
xchg
std
test
in
cmpsl
add
xchg
sarb
loope
stos
sbb
mov
xor
xchg
jg
xchg
cli
mov
sub
xchg
mov
sar
or
lret
stos
push
fildll
inc
push
nop
mov
add
xor
sbb
xchg
test
and
xor
mov
push
sarb
insb
jg
adc
add
jmp
inc
cmpsb
pop
aas
popl
mov
push
icebp
mov
enter
and
in
jae
push
scas
inc
cld
pop
jmp
hlt
pusha
jp
jmp
push
pusha
xchg
cmp
lock
mov
sahf
aam
inc
lahf
mov
xlat
jae
mov
std
add
lods
out
loopne
das
cmp
adc
mov
xor
xchg
cmp
lock
mov
clc
cmpsl
inc
or
sub
push
mov
jle
dec
es
add
shll
shlb
fnsave
and
add
add
adc
fwait
xor
push
pop
enter
lds
or
push
imul
and
mov
imull
mov
push
icebp
fcmovu
dec
and
addr16
inc
xor
mov
in
lock
fsubs
lret
mov
mov
mov
push
stos
scas
aas
inc
xor
mov
out
add
and
dec
rcrb
cs
lock
pop
push
mov
mov
cmp
mov
ret
push
icebp
add
mov
jmp
mov
aas
sub
sub
pop
test
xchg
push
ss
shl
leave
hlt
xchg
test
cmpsl
inc
inc
push
shrb
pop
jmp
movl
aas
ror
mov
sub
xchg
test
rclb
call
mov
and
icebp
xchg
cmp
mov
fwait
cli
ljmp
dec
cmp
sbb
stos
mov
cmp
div
mov
shll
fs
and
push
pop
pop
orl
mov
sub
dec
lahf
fnclex
dec
xchg
int
sbb
push
loop
or
in
or
mov
data16
inc
and
adc
in
testl
sub
xchg
push
lret
pop
push
movsl
gs
inc
or
inc
xor
and
jo
jns
mov
sbb
call
lea
shlb
push
jp
jge
and
nop
mov
test
mov
sbb
xchg
inc
push
cmc
pop
mov
cmovp
mov
out
jae
scas
aas
lret
rorl
call
xchg
cmpsb
inc
xchg
jno
mov
mov
imul
or
data16
loopne
rorb
cmpsb
adcl
sbb
iret
jo
jp
lods
mov
pop
in
or
jbe
bound
cmc
adc
test
adc
adcb
rol
enter
cmpsb
mov
les
jecxz
leave
testl
dec
mov
jae
mov
inc
sbb
fucomp
mov
rcr
leave
lds
mov
je
adc
popf
pop
mov
cmp
add
add
enter
into
mov
jns
dec
shlb
rorl
add
sahf
inc
mov
push
aam
ret
push
jmp
aam
xchg
fsubs
cwtl
ret
jmp
es
lods
out
jae
insl
adc
in
pushf
je
out
stos
pop
xor
cmp
push
js
ret
xor
das
rol
push
arpl
outsb
xchg
mov
in
or
mov
js
xchg
jge
cmpsl
movsl
ja
sahf
int
jnp
data16
stc
testb
push
mov
in
sub
sbbl
iret
lods
add
clts
add
sub
cmp
adc
xchg
out
mov
out
jne
jne
dec
into
test
inc
dec
ss
frstor
out
shll
popf
inc
inc
sbb
repz
pop
sbb
mov
das
rclb
xchg
gs
clc
test
call
sarb
popa
sbb
adc
mov
out
es
mov
or
push
into
pop
loope
and
pop
aam
xchg
sub
inc
mov
stc
pop
and
jge
cltd
cmp
jp
sahf
dec
mov
and
inc
fs
jno
arpl
xor
out
sub
rcrb
aas
frstor
mov
push
mov
and
into
adc
sbb
push
and
outsl
lods
in
sub
push
cmp
bound
push
mov
inc
mov
mov
inc
nop
pop
leave
rcrb
cld
pop
or
pushf
mov
andl
or
pop
and
dec
lahf
mov
cmc
adc
mov
sti
or
push
sub
mov
sbb
xchg
cmpsl
dec
and
aas
push
push
and
out
aad
add
push
push
xchg
ret
inc
js
out
cmp
into
or
out
movsl
cmp
pop
ds
or
add
xchg
add
or
xchg
xchg
fistps
or
test
pushf
cmp
aaa
xor
push
mov
in
rclb
outsb
push
or
ja
jo
stos
sub
sahf
fwait
sub
out
shll
movsl
adc
outsl
cs
lea
leave
pop
fsubs
lock
in
cmp
cmc
test
arpl
jno
loope
fstps
xor
xor
mov
std
push
hlt
subl
test
mov
pushf
leave
cmp
es
add
push
neg
xchg
mov
add
test
ret
lea
aaa
test
iret
sub
mov
pop
fdiv
mov
fs
mov
jb
hlt
aad
das
jecxz
or
pop
icebp
push
mov
loop
or
hlt
jle
les
rclb
dec
popf
daa
lret
cmpsl
cmp
cmp
into
ror
xor
mov
push
jmp
cmp
sbb
xchg
pop
cltd
and
leave
das
je
icebp
out
dec
cmp
int3
mov
push
xchg
ret
jl
imul
cmp
cltd
mov
ds
and
loope
cmpl
mov
popa
sbb
popf
lods
loope
and
cmpsb
popa
das
les
lret
int
xor
hlt
sti
xlat
xchg
cmpsl
xor
xchg
shlb
inc
lret
and
les
add
or
and
cmp
js
mov
xor
adc
cmc
jle
int3
data16
pop
leave
out
lea
imull
negb
out
mov
push
fiaddl
loopne
adc
push
adc
fmull
mov
mov
sub
leave
mov
add
cwtl
push
pop
je
neg
shlb
xchg
xor
xchg
or
push
jno
push
sub
jp
mov
sti
and
fnstsw
mov
sub
cmpsl
test
shlb
adc
inc
call
inc
xchg
mov
leave
sub
mov
fnsave
enter
xor
cmpsb
pop
push
mov
push
hlt
mov
pop
in
push
pusha
pop
pushf
push
mov
nop
into
dec
inc
movsl
xlat
call
xor
jae
fcoms
je
test
scas
dec
sbb
add
push
adc
xlat
loopne
add
test
jmp
mov
mov
pop
pop
pop
lea
repz
lahf
add
xchg
js
jmp
pop
test
push
inc
xor
jle
cmp
mov
cwtl
and
pop
sub
aam
mov
jb
jmp
mov
and
scas
shr
lahf
push
call
adc
jmp
and
cmp
jb
or
or
xor
cwtl
leave
pushf
mov
add
push
sbb
pop
sbb
add
pusha
bsf
and
lods
fcoml
ret
cmc
nop
das
fnsave
mov
jmp
sbb
lret
aad
dec
pop
pop
mov
scas
inc
cmp
xor
int3
iret
pop
xor
pop
xor
mov
jmp
xchg
xor
dec
mov
mov
iret
adc
stos
out
test
shr
dec
xchg
lds
xchg
fninit
leave
movsb
icebp
ds
aad
das
push
inc
mov
pop
xorb
js
mov
dec
add
dec
test
xchg
pop
dec
dec
jae
mov
jns
test
aas
rcrb
pop
rolb
pop
mov
outsl
pop
test
mov
mov
or
addr16
adc
pop
scas
lods
xchg
push
mov
leave
std
mov
push
repz
push
cmp
scas
xchg
das
cmp
jnp
call
cmp
xor
sub
jne
pop
popa
ja
mov
adc
mov
sti
iret
jge
mov
jb
inc
out
sbb
fld
or
lret
mov
je
xchg
sbb
movsb
in
movsl
leave
mov
aad
or
or
outsb
cmpsl
adc
out
mov
jmp
dec
add
inc
mov
or
push
sti
push
jg
push
push
loope
jge
jle
fnstcw
mov
cmp
popa
push
sbb
cmp
mov
subl
sbb
sub
cmc
movsl
cmp
add
pop
mov
ret
aam
mov
sbb
jl
fimull
mov
lcall
cmp
push
stc
cmpsl
pusha
jg
orl
repz
lods
repz
inc
out
cli
and
icebp
aas
sub
les
xchg
arpl
sbb
sbb
and
mov
cmp
push
cli
push
xchg
xchg
jmp
ja
dec
mov
loopne
or
loope
lock
add
push
ja
sub
repz
pop
xchg
imul
je
cwtl
lcall
in
xchg
xor
pop
sub
and
pop
into
sbb
xchg
aam
mov
insl
mov
dec
mov
jecxz
mov
sahf
sub
repnz
mov
or
dec
mov
and
cmp
pushf
out
mov
leave
call
sarl
lahf
stos
aaa
adc
lods
adc
pop
cmp
mov
dec
test
adc
dec
dec
sarb
mov
mov
mov
mov
dec
cmp
fimuls
roll
inc
sbb
pop
pop
or
mov
into
push
das
lods
into
xor
ja
mov
pusha
or
aad
push
lds
test
out
aam
fs
loope
idiv
lahf
pushf
and
insb
fwait
cmpsb
mov
lods
rol
sbb
mov
enter
movsl
pop
stos
mov
iret
add
arpl
mov
push
dec
push
or
mov
add
push
or
dec
fiaddl
xchg
pop
addr16
dec
or
aad
sbbb
xchg
pusha
xor
lea
dec
push
and
pusha
out
jp
aad
cmp
or
sbbl
int3
pushf
insl
es
stc
cmpsl
pop
jno
dec
cmp
inc
fs
sbb
mov
xor
adc
out
out
mov
mov
das
aad
lea
jge
inc
mov
ljmp
cmovae
inc
lock
mov
cld
imul
out
jge
inc
mov
fldcw
dec
mov
imul
mov
gs
ds
mov
adc
rorl
mov
loope
push
xor
outsb
push
cwtl
leave
jl
pop
add
fsubp
mov
push
repz
and
dec
mov
dec
push
shlb
or
sbb
mov
mov
pop
cmp
dec
outsl
push
and
adc
dec
and
mov
push
xor
in
negl
call
lods
push
inc
ffree
popa
pop
and
add
jbe
push
sahf
add
mov
xlat
test
into
mov
aas
fadd
xchg
inc
hlt
jl
inc
cld
or
lds
xor
dec
iret
lds
mov
ret
adc
enter
nop
dec
sub
in
ja
clc
and
adcb
addb
shll
popf
lahf
and
jge
cmp
fdivs
ret
jecxz
inc
roll
xlat
pop
jbe
jo
aad
pushf
xor
sbb
setne
xor
push
mov
lss
mov
pop
loop
enter
mov
icebp
dec
sbb
push
call
fdiv
push
jmp
cmp
mov
push
pop
add
test
mov
xor
fisubrs
ss
jge
repnz
test
pop
xchg
clc
lret
in
movsb
sahf
iret
xor
pop
xlat
stos
test
mov
insb
enter
adcb
lret
in
push
jnp
xchg
fcmove
mov
xor
pop
sbb
xchg
adc
mov
sub
sbb
lea
fcompl
jb
push
xchg
mov
lods
icebp
lahf
mov
out
lret
lahf
stc
ret
movsl
leave
sbb
ficompl
movsb
out
pop
pop
shrb
cwtl
notl
lock
sub
fcomp
lock
inc
sti
xchg
mov
mov
js,pt
shrl
stc
lcall
arpl
xor
fidivs
mov
outsl
cmp
insb
or
loop
mov
mov
loope
dec
sbb
jge
and
inc
in
pop
pushf
sub
mov
add
pusha
sub
xor
pop
pusha
stos
aaa
insl
or
mov
add
call
push
mov
cli
sbb
fs
icebp
enter
and
in
leave
xor
mov
js
push
inc
push
add
push
cld
inc
and
das
into
das
data16
pop
daa
pop
push
inc
icebp
cmp
int
cltd
in
pop
or
sub
repnz
add
or
pop
xor
in
out
popa
addl
or
sbb
in
dec
lods
leave
int3
imul
nop
xchg
iret
add
push
mul
shl
and
gs
add
pop
push
and
mov
in
pop
es
ja
mov
orb
mov
cmp
xchg
repnz
inc
mov
shrb
mov
push
sarb
and
xchg
add
mov
xor
mov
loope
into
xchg
pop
jp
or
mov
and
mov
call
adc
fcmovnb
jns
lret
push
roll
jp,pt
fstl
icebp
push
sub
addr16
pop
mov
lea
js
stos
push
sbbb
shrl
jb
and
test
sub
push
xor
sbb
xchg
pop
orb
sahf
fwait
mov
xor
mov
push
out
push
sahf
jns
out
mov
push
call
fucomp
imul
or
imul
mov
pop
loopne
or
adc
mov
pop
mov
adc
jg
daa
fstps
xchg
sbb
adc
rcl
jge
cmp
mov
out
inc
insb
in
or
cmp
jo
inc
addr16
sub
sub
test
push
mov
decb
push
lar
hlt
push
dec
mov
out
inc
cmp
dec
sub
lret
jne
popa
fwait
imul
lcall
fisttpll
inc
shlb
fisttpl
xchg
arpl
push
mov
js
jns
pop
fistps
push
jbe
rcr
mov
cltd
mov
cld
xor
stos
test
add
rcrb
dec
mov
shrb
sbb
popf
adc
push
jbe
xor
arpl
push
inc
sub
daa
xor
arpl
in
int
cmp
in
xchg
scas
jnp
loopne
dec
in
jp
into
imul
push
cmp
sbbl
imul
add
mov
xlat
xor
test
cmp
es
aaa
mov
enter
js
and
addr16
jmp
push
adc
sbb
mov
jecxz
push
push
fidivs
sbb
ror
mov
jo
in
scas
add
push
mov
xchg
jmp
nop
add
insb
outsb
mov
cmpsb
and
loop
iret
pushf
cmp
addr16
pop
loop
add
sbb
inc
repnz
push
movb
in
xchg
enter
sub
adc
stos
loope
mov
jb
bound
jbe
mov
dec
mov
xor
mov
leave
adc
repnz
das
mov
addr16
xor
sbb
shr
js
out
add
je
jne
and
in
loope
aad
mov
add
sbb
loop
hlt
repnz
shrl
push
mov
aam
lahf
stos
imul
push
mov
ja
test
sub
movsb
dec
or
xchg
cmp
fsubrs
cmpsb
pop
movsb
int
mov
jge
mov
or
adc
outsb
imul
daa
sub
add
adc
mov
dec
mov
loopne
iret
loop
lahf
jmp
dec
push
ret
loop
jo
jbe
scas
in
mov
jmp
sbb
and
dec
out
jno
scas
imul
dec
jecxz
in
or
mov
jg
add
add
scas
dec
xchg
cmp
mov
inc
icebp
sbb
and
das
xor
mov
sbb
xlat
pushf
dec
inc
jl
lea
aad
movsb
loop
dec
imul
adc
fwait
aas
test
sub
add
xchg
ret
mov
and
loopne
fisubrl
dec
pop
jmp
or
push
cmpl
out
lret
mov
lods
inc
dec
jno
pop
std
dec
out
arpl
and
sub
inc
push
out
adc
jbe
jp
pushf
pop
mov
pop
mov
jae
sub
add
push
sbb
jle
andb
xlat
jb
inc
jno
popa
lods
dec
mov
add
in
je
xor
test
jp
scas
scas
stos
xor
jmp
mov
push
jo
cmpsl
mov
or
out
or
shlb
repz
sub
mov
mov
inc
test
mov
jp
lret
cmp
mov
add
dec
adc
fsubrs
jo
mov
jle
mov
into
pop
mov
adcl
fs
mov
lret
daa
stc
lea
push
pop
sbb
fadd
sbb
subb
insl
xor
inc
test
add
jbe
pushf
scas
js
xor
aas
and
sub
outsl
jle
sub
loopne
inc
stos
pop
in
cld
adc
xor
out
pushf
dec
clc
dec
fs
scas
and
aaa
inc
dec
mov
or
inc
push
jns
pop
xchg
pop
hlt
test
stos
xor
jecxz
inc
push
inc
xchg
cld
push
addr16
or
andb
push
jecxz
dec
repnz
jae
insb
mov
insl
leave
mov
cltd
jge
add
in
mov
cmpsl
sbb
mov
pop
out
lods
xlat
or
and
sbb
push
jbe
stos
or
es
and
loop
movsb
and
mov
inc
imul
push
add
outsl
dec
push
xchg
jecxz
pop
pop
add
data16
frstor
mov
cmp
testl
mov
xor
push
mov
or
cmp
aad
mov
mov
lahf
cmp
jbe
ret
jae
xchg
dec
xor
rcr
mov
sbb
push
lock
jl
sbb
outsl
jne
leave
bound
cmc
ret
outsb
pop
push
push
xor
jo
fisubl
sarb
clc
lds
ljmp
das
mov
sbb
ja
xor
or
test
sbb
dec
xchg
in
dec
loopne
adc
test
xor
pushf
hlt
mov
xchg
xchg
pop
addr16
xor
lcall
mov
popf
and
gs
sbb
sarl
add
mov
sub
sbb
sub
or
mov
and
stc
call
mov
clts
sahf
add
and
enter
frstor
cmp
push
mov
out
mov
jnp
inc
mov
in
jb
mov
rorl
pusha
sahf
adc
xor
jl
popf
pop
jecxz
sub
ds
call
leave
bound
bound
pop
stos
dec
enter
fnstcw
mov
test
sahf
cmp
iret
lret
lret
push
jnp
ficoml
outsb
push
push
push
and
pop
dec
lds
fistps
pop
push
add
pop
addl
movsl
out
fwait
int
or
loopne
movsb
jnp
lahf
pop
push
push
es
daa
out
or
in
repz
and
adc
loope
icebp
mov
outsb
nop
inc
jb
or
add
jno
or
dec
dec
aaa
lret
nop
stos
mov
push
adc
loopne
adc
outsl
xchg
mov
pusha
jl
faddp
inc
ret
mov
push
cs
aad
xor
les
fiadds
dec
out
push
sub
lcall
arpl
aad
xlat
push
sub
pop
add
jno
xor
push
fcoms
dec
loop
lods
call
mov
lcall
leave
dec
xor
inc
int
jno
addr16
jle
aas
movsl
jge
outsb
imul
jae
and
push
cli
jbe
repnz
sbb
mov
test
mov
xchg
faddl
mov
mov
and
dec
lret
jmp
rcll
mov
mov
divl
xlat
jp
mov
cs
nop
popa
mov
sub
pop
cli
es
jecxz
sbb
imulb
in
sub
jmp
shll
dec
adc
push
jl
in
sbb
push
push
lcall
insl
pop
xlat
rclb
nop
aas
cwtl
shr
in
and
mov
aas
xchg
mov
sbb
lcall
pop
cmc
test
daa
not
or
movsl
fs
and
das
lcall
xchg
pop
sub
mov
push
aaa
adc
push
push
push
or
jo
cmpl
add
inc
mov
jp
cmp
iret
mov
cmp
or
int
or
jp
xor
inc
pop
out
scas
mov
sarb
out
push
cmp
call
stos
pop
jno
xchg
les
repnz
scas
sub
inc
pop
cmp
mov
mov
cltd
jbe
test
or
cmc
ds
xchg
into
mov
xchg
js
jns
dec
repz
in
test
cmp
jmp
add
sahf
xlat
cmp
lock
jns
dec
and
fadd
out
pusha
es
sbb
jae
popf
push
mov
loop
xlat
sub
test
fldl
mov
out
lods
shr
shll
pushf
popf
jbe
sti
inc
push
ret
or
pop
call
push
push
xchg
push
or
cmpsl
sub
ret
loope
and
stos
outsb
mov
addr16
push
mov
lret
add
dec
mov
xchg
xor
push
pop
loope
sbb
cmp
mov
sub
cwtl
jnp
iret
and
dec
cmp
and
imul
sbb
aam
sub
mov
out
mov
lods
imul
dec
test
mov
mov
shrb
mov
dec
sub
leave
outsl
jnp
jmp
xor
push
sbb
scas
mov
adc
lods
fnstenv
jge
xchg
test
sub
ret
hlt
maxps
loopne
xchg
mov
es
pop
loop
mov
lret
ret
sarl
cmp
adc
push
fucomip
mov
insb
mov
xorl
jno
dec
lret
xor
cmp
imulb
sahf
push
add
rorl
movsl
inc
rorb
nop
scas
add
add
enter
les
inc
in
xlat
jmp
repnz
out
and
in
aam
nop
mov
ljmp
mov
mov
ja
cmp
sbb
fsubrl
into
jmp
leave
sbb
sti
test
cmpsl
adc
test
shlb
and
sub
cmpl
push
in
cmp
xchg
mov
ror
out
add
jl
push
cmp
call
push
fidivrs
pop
mov
arpl
inc
push
movsl
sbb
test
pop
dec
xchg
lock
sub
adc
push
pusha
sub
mov
add
dec
sbb
popf
push
mov
cmp
adc
es
je
fdivrs
arpl
outsl
push
mov
int3
es
jo
xor
ss
imul
sbb
mov
insl
jne
mov
mul
subb
pop
sbb
out
rolb
push
mov
lods
adc
jle
or
dec
and
inc
xchg
cmpsb
and
mov
sub
pop
dec
scas
es
xor
mov
jo
sub
mov
push
imul
inc
sub
dec
aad
outsb
fadd
jbe
ss
sahf
repnz
rcrl
xchg
or
pop
mov
fs
xor
inc
mov
in
dec
cmpsb
mov
test
loope
add
xor
cmp
fucom
loopne
movsl
mov
mov
pop
mov
mov
into
je
push
dec
test
push
jnp
lret
loopne
mov
test
pop
aam
push
cmc
mov
xchg
push
scas
mov
leave
inc
aas
mov
insb
push
pop
aaa
mov
cmp
and
pop
rcrb
pushf
pop
jmp
and
ret
cmp
sub
adc
pop
sbb
jno
xor
aad
cmp
jo
ja
sbb
fdivl
jecxz
mov
pop
adc
add
mov
subl
cmp
and
inc
popa
scas
mov
cmp
cmp
jmp
inc
adc
adc
sbb
push
jae
in
pop
xchg
iret
jns
rorl
lock
adc
out
push
lret
cmp
repz
popa
adc
inc
cmc
mov
es
rclb
mov
sbb
scas
test
outsb
bound
dec
test
pop
je
mov
or
loop
popl
sahf
fsubr
ficoms
outsl
jp
inc
mov
imul
fs
rorl
push
or
rcrb
cmpsb
out
sahf
ret
push
or
dec
pop
inc
xchg
lods
nop
mov
out
adc
jmp
lds
int
lods
pop
std
and
bound
pop
jmp
jge
ja,pt
and
and
ret
push
lods
pop
fsubr
mov
outsb
popa
pop
cli
adc
call
dec
cwtl
mov
add
and
jno
ljmp
ss
push
add
push
add
call
cwtl
lds
ret
and
in
dec
dec
push
xlat
jecxz
jne
fsubrs
xchg
jae
in
and
push
jl
sub
mov
in
test
and
dec
shlb
repnz
ds
or
aaa
push
xchg
xchg
enter
nop
test
je
and
mov
add
fldenv
xchg
push
cli
adc
out
sub
cmp
mov
xchg
stos
and
mov
insb
xor
test
xlat
or
mov
push
push
dec
xchg
cmp
cmpb
cmpsl
ja
ja
pop
xor
fs
andb
rcrl
pop
xor
cs
adc
sbb
popa
outsb
mov
js
subl
dec
sbb
xor
lods
mov
add
adc
adc
pop
mov
xor
lret
arpl
fcoms
js
stos
xchg
or
je
add
xlat
jle
loop
lret
push
lea
int3
jmp
push
fcompl
loopne
test
sub
dec
addr16
sti
xchg
ficoml
ds
mov
movsl
es
add
hlt
sbbl
sbb
jns
out
fdivrs
pop
xchg
or
andb
jno
push
fmul
pop
movsb
orb
mov
and
jg
jp
imul
sbb
jbe
or
test
fs
sbb
mov
mov
add
enter
xor
out
mov
fisubs
sbb
or
lods
imul
dec
mov
fucompp
idivl
and
lcall
fst
mov
sbb
movsl
xchg
inc
sbb
inc
mov
lea
insb
jecxz
xor
mov
pop
pop
cmp
addl
clc
push
lret
cmp
ficoms
xor
sbb
or
xchg
negl
int
leave
data16
push
adc
mov
dec
push
rclb
mov
push
inc
fwait
adc
xlat
adc
sahf
call
inc
ret
jae
fsubrs
stos
mov
mov
fildll
sbb
insl
xchg
lcall
nop
cmp
push
int3
int
inc
pop
fcomps
jp
and
pop
xchg
cli
addl
xchg
add
push
inc
adc
js
repz
repz
jmp
and
push
push
jg
icebp
inc
dec
out
xor
xchg
add
add
sbb
sahf
addr16
pop
clc
int
cmp
popf
jge
push
sub
xor
dec
mov
xor
sub
push
sub
pop
and
mov
je
insb
cmpsl
or
daa
or
xchg
xchg
movsb
xor
aam
repz
cmp
push
lahf
cmc
jmp
pop
mov
inc
out
out
adc
sbb
push
pop
fs
mov
cmpsl
inc
xchg
pop
cmp
fidivrs
push
sub
test
sbb
icebp
loope
cmc
pop
enter
ret
mov
lds
shlb
push
cmp
rolb
mov
dec
imul
or
add
push
daa
xor
mov
mov
adc
pop
int3
and
and
xor
or
push
push
jb
lods
lods
in
mov
lods
sub
inc
sbb
dec
cmp
lret
out
out
dec
aad
cmpsl
pop
lods
inc
retw
loopne
imul
pop
sbb
mov
inc
mov
xchg
pop
jg
push
push
sub
xor
mov
dec
push
xor
int3
mov
ret
sub
in
std
js
cmp
mov
sbb
addr16
push
out
rorl
in
cmp
ficoml
aad
int
ss
inc
mov
adc
aaa
pop
lret
dec
iret
repz
dec
pop
sbb
sub
or
cmc
xor
xchg
sti
ljmp
fs
adc
mov
mov
cmp
testl
lcall
in
mov
js
cwtl
into
leave
adc
and
adc
insb
fstpl
mov
mov
clc
loopne
and
repnz
cmc
lds
jmp
popf
dec
popf
jo
mov
call
es
cmp
dec
pop
dec
ret
xor
cld
push
cld
orb
mov
jecxz
sbb
sbb
or
add
addr16
test
hlt
inc
cmp
daa
mov
scas
push
mov
cmc
in
push
das
sbb
jp
jae
adc
das
add
lds
aam
mov
xchg
mov
insl
mov
pop
pop
jmp
push
jl
sub
jmp
cmc
in
mov
stc
adc
xchg
xor
repz
pop
lret
push
jg
mov
mov
xor
xorl
bound
movsb
enter
push
icebp
divl
sub
pushf
leave
mov
repz
add
scas
enter
push
lea
lds
adc
xchg
sarl
xor
sub
pop
aam
or
inc
mov
imul
stos
cmp
mov
mov
mov
adc
mov
xchg
fisubrl
cli
fmull
cmp
pusha
adc
pop
sub
xchg
adc
sbb
cld
jge
or
test
mov
sti
fisttpll
pop
push
dec
mov
push
xor
cmp
ret
mov
fnsave
and
mov
shll
pop
sbb
daa
in
movsb
aad
or
sbb
sbb
mov
cmpsl
dec
gs
adc
pop
loop
and
jecxz,pn
into
enter
test
dec
or
pop
cmp
pop
repnz
sbb
das
mov
push
pop
xchg
mov
pop
shlb
jnp
cli
mov
rcrl
pop
je
imul
add
ljmp
sub
movsb
jge
sbb
sub
hlt
dec
dec
and
mov
scas
mov
cwtl
xchg
stos
push
inc
push
xchg
mov
scas
or
mov
push
pop
lret
cwtl
out
lahf
mov
out
xchg
leave
aas
xorb
xor
fnstsw
mov
xchg
shlb
push
in
jno
insl
pop
push
popf
aas
cmc
roll
push
ljmp
xchg
int3
ret
jmp
rolb
mov
cmp
ds
push
insl
sbbl
mov
leave
cmp
in
stc
das
jns
clc
add
and
test
shlb
lds
pop
cwtl
mov
mov
jne
mov
stos
leave
pop
lods
aas
mov
xchg
lret
jns
rcrl
bound
data16
loope
lods
dec
pushf
lret
ret
push
push
lods
or
test
stc
xchg
daa
push
xchg
imul
ret
or
cmp
fidivs
jnp
xchg
mov
loop
loopne
aad
sbb
cli
test
fbstp
mov
push
mov
sahf
xchg
adc
lret
mov
stos
add
repz
xchg
cmp
sub
dec
mov
in
jecxz
movups
decl
push
sub
sub
sar
in
fsubl
gs
insb
xchg
pop
clc
sub
es
pop
mov
je
ficoml
cmp
call
mov
xlat
sbb
mov
ljmp
or
sbb
pop
aad
sahf
pop
dec
mov
xchg
lock
push
mov
inc
or
jnp
or
nop
scas
inc
scas
pusha
or
cmp
jae
aam
xchg
jae
movsb
xchg
add
les
je
jmp
bound
xchg
jno
mov
mov
xor
jmp
xor
pushfw
xorb
pusha
xor
js
fucomi
xor
xchg
or
sbb
jmp
out
mov
lret
lock
popa
sub
lret
mov
daa
adc
sti
pushf
and
dec
test
xchg
xchg
push
xchg
enter
sbb
push
loopne
mov
std
mov
fnstcw
cmpb
repnz
aad
sbb
dec
mov
stos
mov
ljmp
dec
cmc
cwtl
sbb
in
loope
cmp
pop
jg
inc
inc
inc
mov
out
or
fistpl
outsl
pop
aad
testl
gs
xor
dec
and
je
or
push
add
ja
jecxz
jb
fisttpl
mov
fdivs
and
pop
aas
outsb
xchg
cltd
xchg
mov
or
xchg
imul
push
cmpl
enter
xchg
sbb
xor
xchg
test
mov
mov
cwtl
or
xchg
test
sbb
out
jne
shll
add
push
fsubrp
and
das
fidivl
insb
mov
adc
jbe
jnp
or
inc
sarl
std
push
outsl
clc
scas
sahf
ret
iret
ljmp
gs
jo
adc
scas
les
aad
and
popa
mov
jl
in
or
mov
sbb
dec
dec
sbb
jl
ss
mov
cmc
fnstsw
xchg
mov
pusha
aam
fisubs
cmpsb
test
stos
ds
jae
mov
imul
jge
sbb
int
sarb
fldcw
adcl
jmp
imul
fstps
mov
fs
fucom
xor
sbb
xlat
dec
push
fidivrs
dec
xchg
insl
mov
mov
fdivrs
mov
jl
pushf
ret
push
mov
movsl
adc
push
xchg
cmp
pop
pop
ja
adc
test
je
jb
and
rolb
insb
fistl
hlt
shlb
jbe
loope
loopne
jg
add
mov
jecxz
jo
jns
cwtl
sbbl
data16
test
push
hlt
fucom
jp
or
lods
sar
lret
xor
cmp
out
xchg
jne
mov
repz
mov
pushf
data16
sti
arpl
cmpsl
repz
in
sbb
jae
in
sub
adc
cmpsl
push
cmp
xchg
lds
shlb
rcrb
cmp
jns
mov
popa
outsb
jbe
cmpsb
lock
pushf
mov
pop
mov
mov
xor
xchg
mov
xchg
inc
xchg
dec
mov
and
das
subl
shll
lock
scas
fsqrt
gs
ja
add
cmp
or
sub
cwtl
out
xchg
mov
mov
pushf
mov
and
adc
sahf
iret
cmp
xchg
inc
stc
notl
fildl
lock
adcb
pop
in
add
arpl
xor
in
in
mov
and
bnd
icebp
xor
lret
add
in
test
insb
pop
mov
sbb
jmp
loopne
jb
and
arpl
inc
mov
dec
xchg
stc
push
outsl
dec
icebp
fnstcw
loope
xor
pop
mov
xchg
xorb
sbbb
das
dec
jo
icebp
sbb
push
loop
adc
lcall
push
jno
fst
fwait
jmp
in
pop
lea
inc
test
jl
fisttps
mov
xlat
inc
mov
adc
pop
and
js
ret
push
stos
sbb
sbb
bound
fldenv
pop
inc
outsb
adc
lods
dec
cwtl
sub
xchg
movsl
fcompl
nop
je
dec
inc
xlat
push
call
mov
xor
push
in
fidivl
mov
arpl
cwtl
mov
cmpsb
xchg
mov
dec
movsb
sbb
sub
cld
inc
cltd
out
popf
rorl
mov
dec
les
cmp
out
imul
std
and
mov
mov
pop
cld
xchg
fldenv
sbb
outsl
dec
divb
inc
adcl
xchg
mov
mov
call
adc
mov
shrl
lcall
clc
cmp
dec
or
fcmove
dec
xchg
sbb
in
dec
aas
and
ret
xchg
data16
sub
xchg
mov
out
xchg
dec
mov
cmp
faddl
push
and
cli
int3
gs
push
sub
mov
xchg
mov
jecxz
aam
push
insb
lcall
notl
pop
js
mov
int3
mov
js
jo
lods
jmp
daa
push
dec
dec
push
pop
ret
imul
stos
jbe
mov
sub
push
icebp
mov
xor
push
scas
xor
lret
sub
adc
sahf
cmp
xor
xorl
fisubs
int
push
loop
mov
mov
out
shl
cmp
into
xor
popa
or
mov
popf
dec
pop
stc
repz
movsb
rclb
popf
sub
cmpsl
jbe
test
popf
in
mov
aad
adc
sub
add
add
test
sarb
push
push
mov
mov
fmull
or
push
sub
pop
fistpl
xorl
cmc
out
sub
dec
pop
pop
outsl
in
int
loopne
scas
pop
movaps
add
xchg
mov
add
adc
out
shl
mov
xchg
fisttpl
outsb
xlat
int3
jo
cmp
fbstp
fidivrl
js
add
sbb
mov
pop
cmc
cmp
xchg
aad
dec
ja
adc
cmp
mov
out
out
sub
dec
mov
loop
shlb
cmpsl
call
push
adc
sbb
lods
out
adc
push
sub
mov
sub
mov
inc
mov
rcl
insl
outsb
inc
fcompl
cmp
mov
cmp
jne
data16
jne
sbb
pop
aad
add
pop
fidivs
in
lcall
and
jne
dec
test
cmp
jns
dec
cmp
xor
adc
das
lret
sahf
or
repnz
test
fmull
movb
fsubrl
int
ret
pushf
sub
pop
fimull
mov
push
sbb
fidivrl
leave
pusha
imul
lret
inc
push
call
pop
mov
leave
pop
cwtl
fisubrl
cmpb
sarl
test
es
scas
sti
sahf
gs
fidivs
mov
test
ret
dec
js
cmp
sti
mov
xlat
popf
sbb
andl
and
cmc
pop
xchg
mov
test
mov
pop
bound
hlt
pop
repz
jb
mov
ja
loope
mov
sbb
je
nop
xlat
icebp
pusha
or
push
cmp
add
push
cmp
jmp
gs
fsubr
cmpl
jnp
xor
sub
insb
test
jg
pop
and
sbb
fildll
scas
jl
insb
addb
adc
mov
popf
js
mov
ja
and
insl
mov
push
jp
enter
xchg
imul
sub
push
out
and
outsl
and
xchg
fcmovbe
jb
shrl
mov
fwait
add
adc
cmp
jns
push
test
cmp
ja
stc
xchg
mov
daa
mov
out
dec
aam
fwait
les
fucomp
mov
stos
ret
pop
mov
stc
xchg
insb
movsl
pop
mov
dec
jbe
mov
mov
inc
out
out
sbb
outsb
out
mov
